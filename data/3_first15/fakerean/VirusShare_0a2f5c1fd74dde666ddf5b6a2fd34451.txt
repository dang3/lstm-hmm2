push
push
call
cmp
jne
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jbe
mov
imul
lea
mov
xor
jmp
test
jne
cmpl
ja
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
push
call
mov
mov
push
call
mov
push
push
call
cmp
jne
movl
jmp
mov
sub
and
mov
pushl
mov
mov
call
pop
cmp
je
mov
jmp
push
push
push
call
mov
mov
shr
mov
mov
sub
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
push
call
pop
leave
ret
aas
scas
cltd
jnp
int3
int3
int3
neg
jmp
push
push
push
push
push
imul
adc
leave
cld
mov
fcomi
dec
cmpsb
or
and
cwtl
jmp
adc
faddl
or
test
xchg
dec
push
andl
and
and
or
cwtl
fidivrl
jmp
sbb
test
cmpsb
or
or
mov
adc
in
or
sub
popa
rcrl
call
or
cmpsb
jns
sbb
mov
je
dec
push
push
jle
into
and
push
clc
lods
mov
pop
xchg
jge
add
out
adc
mov
mov
add
test
mov
int
pop
in
cld
imul
repnz
or
mov
in
test
adc
aas
push
xchg
pop
push
xchg
lods
add
in
mov
cs
dec
and
fcoml
pop
push
xor
fcomps
arpl
push
mov
or
dec
fadd
mov
push
movsl
in
iret
lcall
fstpt
out
inc
xor
sub
insb
sbb
jg
lahf
into
testl
fldenv
push
out
or
mov
es
stos
shll
pop
mov
call
or
xorl
or
in
inc
cld
inc
inc
xor
in
lret
xchg
and
sub
imul
sub
dec
mov
inc
fidivrs
mov
xchg
test
test
lret
mov
adc
adc
lea
std
hlt
fnsave
cli
bound
push
and
rcrb
xchg
and
dec
lea
add
add
cmc
or
repz
gs
cmpsb
ljmp
jle
fwait
and
sub
mov
xchg
lods
add
xor
mov
and
test
fdivrl
data16
cmp
idivl
or
add
pop
add
mov
mov
lods
in
test
outsb
aad
jge
rorl
jg
fs
call
inc
sub
mov
adc
and
lret
adc
cs
shl
pop
or
push
mov
jb
jns
mov
mov
adc
add
stc
inc
jg
loopne
stc
fisttps
xchg
or
and
push
or
mov
jmp
cmp
and
and
or
hlt
imul
popa
push
jae
iret
pop
clc
dec
xchg
mov
in
fisttps
rorb
xchg
call
add
or
imul
imull
xor
ss
sub
xchg
jbe
mov
mov
push
add
dec
pop
call
insl
jbe
call
repnz
fldt
sub
enter
adc
adc
xchg
xor
pop
insl
fcomi
mov
adcb
lret
dec
rcr
mov
cmp
andb
jp
movsb
movsb
and
stos
push
mov
xchg
imul
rcrl
jo
aam
cmp
in
out
pop
addb
nop
mov
lret
fs
int3
lds
cmpsl
inc
aas
push
add
cmpsb
cwtl
inc
mov
loopne
packssdw
adc
dec
xor
lods
pop
je
mov
pusha
sub
cmp
sub
sbb
mov
xchg
pop
jp
push
dec
cvttps2pi
fbld
aam
test
pop
pop
jg
xorb
xlat
mov
mov
add
xor
loopne
dec
gs
cwtl
xchg
add
ljmp
cmp
jb
clc
shlb
push
dec
jns
aas
pop
or
jbe
cmpl
jns
push
into
add
int
stos
push
das
xorb
rcll
dec
icebp
cmp
xor
cwtl
inc
sti
mov
aam
cli
js
adc
fcmovu
jle
scas
inc
adc
cld
push
fiaddl
pop
mov
jb
insl
mov
ds
ror
lret
test
xor
movsl
int
cmp
pop
sub
ret
fbld
cmp
scas
sub
fdivs
in
pop
in
fcompl
add
mov
mov
adc
in
mov
pop
jp
or
mov
sbbb
popl
aaa
sbb
ds
test
inc
rol
cld
push
mov
lods
or
jle
and
jg,pt
mov
inc
cmc
pop
clc
cs
pop
add
pop
pop
cmp
test
fs
neg
bound
loop
mov
pop
pop
fs
add
insb
movsl
sub
adc
incb
iret
push
push
int
lds
or
rcrb
and
mov
dec
ss
dec
cmp
jb
push
xor
xor
rorb
and
insl
mov
mov
inc
js
mov
lods
jg
jge
inc
stc
fisttpl
jge
out
insb
dec
mov
xor
mov
xor
fmul
push
adc
or
sahf
jge
dec
pop
scas
adc
mov
int
pop
sub
inc
aas
xchg
les
and
sub
push
inc
lods
stc
or
sahf
stc
data16
add
mov
std
inc
xor
inc
fildl
ja
bound
xchg
movsl
mov
cmp
push
xlat
adcb
sub
push
xchg
xchg
and
mov
aas
lahf
out
push
imul
divb
out
jecxz
test
hlt
cmp
dec
mov
xchg
sbb
lods
add
fsubl
mov
movsl
push
repz
hlt
imul
test
add
push
out
push
in
inc
cmpsb
and
es
imul
aad
or
out
icebp
aas
pop
mov
jp
xor
stos
rolb
imul
xchg
stos
enter
out
int
leave
test
dec
and
clc
lahf
ds
mov
dec
mov
or
mov
leave
and
pop
shl
push
push
imul
lods
in
mov
nop
inc
cwtl
sub
or
add
std
xchg
rclb
push
lock
outsl
clc
and
out
jne
negl
xchg
mov
loope
xchg
sbb
xor
inc
shr
inc
hlt
or
rcrb
cwtl
mov
arpl
adc
mov
xor
shr
out
shl
pop
vfrczps
in
int
sub
jae
pop
inc
pop
sbbb
jecxz
jg
daa
cld
jb
arpl
pop
adc
add
ret
or
cs
outsb
push
ror
aad
in
cld
mov
hlt
mov
mov
icebp
push
lret
xchg
outsl
add
pop
in
aam
xor
cli
xchg
cmp
mov
jl
sub
dec
sbb
xor
jl
cmpsl
cltd
aas
mov
lods
movsl
repnz
in
xor
cmp
daa
mov
cmp
cmpl
cltd
sbb
fidivrs
enter
dec
xchg
hlt
cmp
inc
fs
scas
xchg
lret
int3
mov
push
fdiv
sub
sti
push
pop
push
xor
xor
jecxz
std
adc
inc
and
adc
xchg
add
xchg
xchg
loopne
push
xor
data16
icebp
dec
sub
aam
mov
insb
fs
adc
icebp
ret
lods
jge
sub
icebp
mov
cmp
shr
cmp
lea
mov
test
and
pushl
cmp
push
cmp
rol
insl
xchg
out
or
insl
dec
idiv
in
js
inc
xchg
stc
adc
imul
inc
aaa
push
icebp
add
mov
shrl
fs
xor
push
in
cmpsl
inc
push
adc
add
sbb
mov
mov
test
and
stc
or
cmp
or
pop
out
shl
hlt
in
sbb
arpl
pop
mov
int3
push
adc
repz
add
aam
or
dec
cmovp
nop
lret
or
shll
pop
jo
dec
dec
mov
movsl
pop
and
mov
push
jmp
mov
popa
add
js
nop
lods
mov
ss
and
ds
out
test
cmp
pop
cmpsb
inc
and
ret
push
int3
pop
aas
je
orb
cld
jg
jno
ret
call
dec
cmp
mov
call
pop
push
sahf
fldcw
add
and
nop
xor
push
push
dec
wbinvd
insl
add
ret
push
mov
push
pop
mov
pushf
mov
pop
loopne
lods
xchg
fcoml
mul
pop
inc
sbb
xlat
push
add
dec
testb
sarb
inc
jnp
jns
jl
outsl
dec
movsb
iret
and
push
push
aam
mov
sbb
push
insb
and
sti
xchg
fdivrs
inc
ret
adc
adc
and
std
sub
adc
push
test
out
js
loopne
jle
jge
xlat
movsl
loop
jne
iret
mov
push
xchg
in
add
cmpsl
and
xlat
mov
and
subl
push
cs
sarl
mulb
mov
adc
enter
xor
xchg
mov
mov
adc
std
dec
xchg
arpl
sbb
fs
andl
mov
mov
loop
and
xor
enter
pop
jno
xchg
push
add
push
sbb
fxch
add
add
ja
stos
dec
lahf
loop
push
pop
lret
inc
jle
mov
and
and
cmp
arpl
inc
push
aad
sub
in
dec
subl
insl
or
in
pop
pop
jb
nop
inc
aam
dec
call
jp
lods
mov
fldenv
rcr
mov
or
jae
sbb
sub
jns
jae
clc
xchg
dec
pop
lret
inc
jns
push
pop
mov
push
repz
or
adc
mov
ja
push
dec
cmp
ds
pop
pushf
xorl
into
nop
or
push
jb
sahf
lock
adc
jbe
sbb
or
addr16
mov
ret
and
or
xacquire
popa
push
mov
aam
add
mov
cmp
cmp
mov
lahf
xor
and
sub
ds
xor
and
and
fdivrl
jp
shll
xchg
ret
add
cmp
inc
jne
push
dec
aaa
je
shrl
aam
dec
test
sub
xor
ss
lret
xchg
adc
dec
cmp
mov
xchg
lahf
push
daa
pop
jns
aaa
fchs
sub
testb
imul
mov
mov
loope
fsubl
pusha
lret
mov
mov
stc
push
pop
pop
pop
cld
lcall
fdivl
idivl
add
loopne
loop
repnz
add
inc
cltd
jns
jno
outsl
sahf
and
test
in
scas
mov
je
dec
divl
pusha
xorb
push
hlt
mov
add
lea
aaa
lds
mov
cld
in
cmpsb
mov
and
cmp
imulb
rcrb
mov
imul
dec
mov
inc
rorb
push
jmp
and
xor
repnz
xor
ss
and
push
data16
jno
sub
push
cmp
test
movsb
rorb
push
hlt
fidivrl
and
cld
or
add
cs
pop
lret
roll
in
cmpsl
fsts
mov
cmc
dec
adc
push
sub
bts
orl
push
js
movsl
and
sbb
icebp
mov
cltd
add
push
outsl
jge
fidivrs
jle
scas
xchg
lret
cmp
andl
dec
lahf
arpl
push
and
add
cs
cmp
sbb
mov
and
add
jp
rclb
jle
push
call
adc
adc
test
dec
aaa
stc
add
sbb
imulb
imul
cmpsl
popa
cmp
inc
sti
push
mov
ja
sub
orb
call
dec
and
fcompl
test
je
ds
in
cmc
sub
insl
cmp
inc
add
pop
dec
jmp
mov
add
out
push
ds
cmp
mov
rcll
sub
fistpll
aaa
dec
into
fdivrs
jo
inc
rolb
mov
testb
ficoms
clc
int
lcall
insl
popa
insl
push
sub
hlt
and
jo
mov
cmp
ss
mov
mov
sbb
and
lahf
loopne
add
dec
mov
jae
mov
inc
stos
and
test
test
jl
pop
faddl
and
andl
mov
ret
add
xor
push
call
sar
into
dec
sbb
lret
imul
add
dec
mov
fldcw
cmpsb
movsb
jmp
sub
cld
mov
les
in
adc
out
out
mov
fdiv
stc
mov
add
and
jle
lock
lock
clc
jl
lea
inc
sti
test
add
lock
mov
ss
sbb
xchg
ja
dec
dec
push
jp
insb
jmp
xchg
add
movsb
push
inc
mov
dec
jl
pop
sub
lcall
inc
pusha
xchg
aaa
add
and
push
sti
xchg
je
testb
sbb
xchg
and
sub
lret
inc
shl
mov
mov
or
dec
in
pop
pushf
lods
es
and
xor
adc
aad
push
cmp
test
jns
pop
pushf
pop
cld
or
xchg
aad
cwtl
inc
jae
aaa
mov
or
dec
dec
ret
repz
lahf
xor
cmp
cmc
enter
test
cmp
shlb
xchg
inc
lahf
fnstenv
mov
xchg
ljmp
imul
icebp
jmp
in
fdivr
test
xor
outsl
jle
and
add
lods
imul
pop
inc
jbe
ret
xchg
ds
push
popf
loopne
and
stos
lea
jno
push
pop
dec
and
jbe
cwtl
and
test
cmp
jg
sub
inc
fwait
ja
sub
lahf
jmp
sbbb
lods
xor
fsubrl
lret
cmp
call
inc
push
shll
outsl
out
data16
fidivs
gs
jno
cmp
jb
adc
xchg
jno
lock
aaa
stos
int3
call
les
sub
movsl
xchg
xlat
les
dec
lcall
ljmp
aas
ja
xor
into
ds
add
mov
data16
mov
push
mov
jmp
mov
ja
stos
mov
aam
sbb
xor
in
arpl
in
mov
xor
test
daa
pop
pusha
push
xchg
aad
mov
ljmp
xchg
insb
adc
push
ret
lret
add
xor
cwtl
mov
cmpl
adc
add
in
sbb
and
xor
data16
xchg
push
ret
mov
fiadds
pop
loop
jl
push
pop
dec
fcmovb
nop
pop
cmp
dec
sti
cmp
shr
jl
es
dec
popl
in
arpl
jp
xor
ss
xor
adc
sbb
push
rcll
and
leave
push
sub
rclb
hlt
dec
pop
cmp
rorb
movsb
or
hlt
bound
xor
sub
daa
lret
push
dec
and
ret
and
andl
mov
mov
les
bound
jae
scas
lret
loop
arpl
push
push
cmp
and
inc
popa
pop
mov
sub
sub
pusha
inc
loop
mov
xchg
xor
lock
fldcw
mov
ror
pop
jle
insb
and
adc
orb
jp
les
mov
in
loopne
cmp
mov
ja
pop
cwtl
jmp
subb
dec
inc
mov
out
sbb
iret
adc
ljmp
fstpt
rcll
mov
lret
or
out
sbbb
movsb
adcb
inc
pop
out
rcrl
fisubl
xchg
shlb
into
mov
stos
pop
xor
xlat
mov
insb
xchg
jle
adc
test
push
rorl
ficomps
ljmp
sarb
lock
fsubr
stos
iret
je
bsf
call
or
cmpsb
xlat
fisubrs
mov
or
sbb
pop
stos
call
push
data16
cli
xchg
push
les
mov
sbb
mov
icebp
inc
cmpl
fimuls
push
mul
xchg
push
cmpsl
add
jbe
ret
xor
stos
lods
es
or
add
inc
add
movsl
pusha
cwtl
or
inc
sub
rcrb
aam
mov
cmp
add
fistl
mov
popfw
push
add
out
ja
sti
cmp
std
lods
pushf
jle
push
and
xchg
mov
xacquire
cmc
cmp
clc
or
stos
xchg
gs
xchg
inc
pushf
imul
and
push
and
xchg
lock
push
ret
jp
shlb
in
scas
syscall
shll
pusha
and
xor
mov
mov
mov
test
loopne
hlt
mov
loope
in
pop
aad
jle
test
jmp
pop
outsb
and
pop
cmp
cmp
jno
jne
fimull
sub
ds
pusha
or
nop
addr16
inc
iret
mov
stos
popa
loopne
int3
repz
sbb
push
sbbl
push
icebp
mov
jp
adc
lock
cmp
pop
iret
lods
cmpl
popa
inc
ljmp
jge
mov
inc
in
mov
push
jle
insb
inc
add
rol
inc
aaa
xchg
mov
or
add
das
or
or
ja
jge
dec
add
sbb
rclb
cmp
and
adc
dec
mov
int
lret
insl
mov
inc
inc
pushf
daa
js
xor
push
clc
mov
xchg
ljmp
adcb
cwtl
js
in
add
mov
icebp
fiadds
cli
inc
dec
inc
lret
popa
sub
ret
jmp
jns
test
or
dec
ja
mov
les
add
lock
jae
in
les
pop
mov
int
cmpsb
xchg
xor
das
mov
mov
push
mov
push
lret
xor
lds
shll
test
push
xchg
xor
sahf
ds
mov
clc
jmp
repnz
sub
push
bnd
scas
andnps
inc
adc
enter
adc
or
mov
repz
mov
repnz
add
insb
pushf
dec
enter
cmp
out
xlat
dec
mov
xor
mov
xor
pop
adc
mov
cmc
pop
popf
ss
fadds
aas
and
in
adc
mov
sti
pop
test
cmp
sub
xor
test
inc
xchg
outsb
xor
js
xchg
mov
push
pop
repnz
aaa
add
lahf
sbb
jg
pop
and
movsl
cmp
testb
mov
and
fadds
rcl
push
dec
mov
mov
mov
mov
xor
xor
lods
hlt
imul
fcompl
mov
jge
ss
jle
clc
xchg
mov
bound
add
cmp
pop
cli
popf
out
movsl
adc
xor
out
adc
jmp
mov
add
xor
or
neg
mov
mov
push
push
jecxz
scas
dec
mov
push
dec
jno
add
fwait
leave
je
iret
pushf
stos
sbb
call
dec
fbstp
or
cmp
xchg
leave
bound
mov
mov
icebp
std
lods
pop
fistps
movsb
mov
ds
inc
mov
scas
fldlg2
enter
ret
sub
ret
aaa
jae
out
call
imul
add
clc
ret
push
sbb
in
subb
fsub
jmp
andb
call
xchg
in
add
jns
mov
ljmp
movsb
jecxz
out
or
into
fisubrl
adc
jge
jb
out
pop
mov
into
sub
fisubrs
repnz
popa
in
or
dec
mov
push
mov
push
xor
stc
mov
testl
pushf
shrl
rcll
out
jp
hlt
pusha
jae
or
jbe
jno
test
sbb
inc
loopne
xor
movb
xor
xchg
stos
fimull
sub
icebp
sbb
pop
mov
enter
cmpsl
outsb
jg
lods
adc
or
das
aad
iret
imul
pop
xlat
in
into
rcrb
xlat
cmpsb
adc
mov
test
adc
push
or
push
rcr
pop
mov
test
sub
add
subl
int
aam
pusha
lods
and
mov
or
hlt
add
add
sbb
daa
or
mov
int3
aad
jge
jmp
push
mov
stos
push
cld
fcomps
mov
loopne
test
fidivs
imul
mov
sbb
rorl
enter
mov
aam
ret
jmp
shl
xchg
cwtl
rcr
mov
icebp
out
loop
movsl
ret
inc
xchg
pop
jb
jge
inc
flds
jle
test
dec
or
pop
push
pop
add
jle
or
pushl
push
inc
test
push
in
xor
push
js
in
dec
es
inc
int3
std
push
mov
cltd
jb
insl
daa
add
scas
jns
push
cmp
icebp
xorb
or
pop
stos
push
outsl
sbb
fdivp
fildl
jae
xchg
pusha
xchg
jg
add
inc
mov
adc
movsl
adc
dec
stos
call
cmpsb
jmp
pop
jle
aas
adc
jne
mov
fimull
fstl
les
mov
call
ss
inc
jae
xchg
repnz
int3
cwtl
xchg
ret
inc
pop
mov
out
adc
je
xor
add
je
iret
xchg
xchg
and
test
mov
sbb
movsb
and
mov
mov
popa
jg
adcl
aam
mov
push
or
fbstp
pop
jp
sub
rclb
sub
mov
push
mov
leave
popa
jbe
pushf
rcr
cmpsb
sbb
jg
jo
push
and
ss
test
xor
push
inc
nop
add
cli
and
sbb
xchg
push
mov
in
jne
out
repnz
ss
call
pop
jge
cs
mov
call
mov
or
inc
jl
jmp
inc
push
xchg
jg
mov
sub
xor
ds
and
push
pop
ljmp
lcall
inc
adc
scas
push
dec
nop
xchg
adcb
push
jmp
mov
scas
sbb
popa
js
sbb
arpl
dec
insb
arpl
mov
adc
add
in
lea
dec
addr16
and
dec
dec
lock
push
jnp
inc
push
xor
out
push
outsb
movsb
sbb
lretw
inc
daa
popa
mov
xchg
addr16
inc
popf
push
dec
stos
xchg
divl
pop
xchg
jb
jge
dec
mov
jge
in
mov
rorl
and
cli
pop
or
xchg
mov
int
jmp
or
xor
aad
cmp
push
sbb
das
dec
sti
int3
jmp
popa
and
fcom
or
mov
iret
lcall
cmp
xchg
andb
imul
pop
add
lea
mov
xor
pop
sbb
sub
add
or
cs
in
adc
les
push
add
roll
or
push
loope
push
outsb
push
xor
fs
ljmp
dec
and
lods
adc
std
mov
out
ds
loopne
fbld
lods
mov
push
hlt
lcall
shr
inc
aas
shll
fistpll
arpl
mov
cli
jo
gs
fisttpll
mov
shlb
and
outsl
dec
fstl
movsb
push
je
int
cld
in
inc
daa
cmp
subl
rsqrtps
xchg
popf
cmp
or
inc
insl
pop
ja
mov
sub
sarl
les
stc
xchg
sti
jg
jmp
enter
cmp
jmp
and
test
mov
addr16
movsb
mov
pop
ret
or
add
mov
mov
cmpsb
int3
mov
dec
fiaddl
vpmacssdd
cwtl
gs
lret
mov
cmp
cmp
push
cmpsl
pop
lods
in
icebp
mov
adc
push
dec
or
mov
push
or
pop
sub
loop
test
ret
loop
jno
lcall
sub
xlat
mov
imul
fdiv
xchg
daa
adc
out
dec
fdivrs
pop
pop
ret
push
inc
dec
std
mov
shrb
adc
push
ss
jge
sbb
jp
pop
test
test
mov
imul
jbe
pop
aad
test
lahf
clc
cld
cmp
mov
xchg
imul
repz
sub
ja
jns
or
test
scas
add
aad
inc
sub
jg
int3
ror
sub
loopne
sahf
jne
pushf
or
mov
jg
sbb
mov
mov
inc
jb
sbb
adcl
scas
fildll
je
hlt
dec
lret
cwtl
push
mov
push
or
fmuls
add
rcr
arpl
dec
ss
inc
cwtl
mov
and
jp
sbb
adc
movsl
inc
sti
push
cli
mov
test
mov
jnp
mov
xor
inc
call
adc
mov
aas
aaa
jg
pop
cmp
jp
sub
mov
test
hlt
mov
push
push
sbb
pop
cs
bound
pop
xchg
sbb
rcrl
stos
or
test
aam
and
push
sub
cli
imul
les
and
inc
push
lds
ja
push
and
leave
push
mov
adc
fidivrl
or
scas
sbb
dec
imull
push
and
jns
mov
outsb
inc
outsb
sahf
fsubrs
sub
adc
pushf
lods
jp
pop
and
or
dec
ljmp
sub
jne
mov
test
push
fisttpll
mov
fsubs
loope
mov
loopne
ret
iret
jbe
pop
loope
and
sbb
jle
push
data16
mov
mov
mov
popl
push
rclb
inc
mov
je
cwtl
daa
jns
aad
mov
test
jb
sub
jg
popl
pop
test
push
adc
jle
mov
repz
xor
fists
aaa
ljmp
stos
fisubs
in
inc
mov
add
adc
mov
repz
mov
fcomip
push
lret
aad
aas
sbb
cld
jb
and
jmp
bound
add
jp
out
pop
sbbb
mov
ljmp
and
lahf
cmp
mov
inc
lods
mov
lahf
mov
bound
cmc
adc
aas
cltd
cld
cs
sub
repz
mov
pusha
rcrb
xor
push
fwait
imul
lahf
popf
repnz
cmpsb
stos
pop
inc
fstps
lds
rcr
or
lret
cld
mov
popf
stos
shll
mov
fildl
mov
sub
ret
adc
xchg
outsb
mov
pop
popf
scas
inc
lahf
and
mov
jo
in
sub
adcl
mov
arpl
push
cs
lock
pop
add
mov
add
test
ds
ret
mov
adc
rorl
pop
push
jae
das
aad
pusha
sub
dec
mov
mov
mov
mov
push
adc
stos
mov
pop
mov
mov
xor
inc
push
outsb
inc
or
xchg
xor
or
mov
mov
mov
fadds
rorb
pop
arpl
aas
jae
and
rol
sbb
sbb
or
iret
cmpsb
cmpsb
out
insl
jle
or
in
idiv
push
xchg
gs
rcrb
icebp
push
jecxz
mov
xor
shl
repz
std
es
xlat
shlb
jp
inc
ljmp
push
inc
mov
gs
ss
mov
ljmp
mov
pop
sti
xchg
mov
insb
int3
jmp
lods
mov
pop
jno
cmp
negl
fwait
add
addr16
insl
fdivr
notl
ret
clc
bound
divl
mov
mov
imul
addb
out
fsubrs
lret
adc
or
sahf
cmpsb
fisubl
cmp
jno
push
mov
mov
lret
loopne
adc
fnstsw
jecxz
sub
sub
movsb
negl
xchg
push
cmpsl
data16
xchg
gs
stos
jmp
xchg
sbb
clc
xchg
jmp
inc
fwait
jecxz
and
nop
mov
jl
add
jmpw
enter
shll
jg,pt
hlt
in
mov
pop
push
scas
jbe
jp
mov
dec
stc
mov
pop
cmp
xchg
jbe
dec
add
jns
or
mov
shl
mov
lds
mov
rolb
pop
inc
in
or
ret
sbb
mov
dec
jmp
aaa
mov
add
push
das
mov
fcmove
inc
inc
push
jo,pt
add
sub
subl
mov
xchg
mov
pop
jb
mov
insl
cwtl
sbb
push
pop
jle
mov
sub
add
mov
or
push
adc
imul
mov
jmp
jg
sub
int3
data16
movsb
negb
test
push
sbb
mov
sbb
lcall
push
dec
in
mov
mov
das
out
dec
aad
xchg
mov
jo
adc
and
xchg
pushf
push
shrd
adc
jp
push
mov
shrb
lods
es
xor
push
dec
fdivrl
mov
xor
mov
inc
mov
fcompl
xchg
aad
and
leave
or
inc
mov
jmp
mov
cmpxchg8b
mov
pushf
test
jg
inc
or
loop
pusha
stos
sub
ds
fisubl
push
xchg
inc
outsl
cmp
fnsave
add
xchg
ret
mov
aad
mov
test
lds
and
sub
repz
pushf
push
xor
sbb
pop
dec
dec
push
into
and
popa
mov
mov
sbb
push
inc
or
sti
cwtl
mov
repz
inc
out
add
lret
imul
subb
jg
push
xor
mov
movsb
push
pushf
cmp
mov
mov
pop
loope
incl
mov
pop
and
into
das
ljmp
es
mov
pop
mov
sub
out
cmc
aas
data16
std
les
mov
xor
adc
cmp
loop
xor
lock
mov
xchg
dec
gs
idivb
sbb
pop
rcrb
sahf
sub
cmp
test
dec
jno
les
lods
cmp
bound
add
je
ljmp
out
pop
xchg
shrb
dec
mov
insb
jle
insl
ss
fiaddl
daa
pop
bound
arpl
test
stc
push
pop
cmpsl
or
incl
xchg
stos
push
mov
lds
mov
push
pop
ret
push
es
pop
xor
push
push
adc
and
mov
and
mov
test
xchg
stos
mov
cmp
jae
xor
cmpsb
mov
dec
push
pop
cmp
sti
and
jbe
lahf
adcb
add
xor
test
hlt
stos
ja
jmp
inc
aas
dec
pop
xchg
mov
in
and
inc
dec
or
mov
ljmp
lock
movsl
movl
shrl
push
fwait
pusha
lods
outsb
jg
jns
ret
mov
pop
daa
xchg
jle
jb
mov
sub
loopne
pop
and
icebp
mov
outsl
mov
jmp
mov
loopne
xchg
incb
orb
fmuls
movsb
mov
enter
jne
shlb
in
jno
pop
sub
adc
add
xor
cmp
cli
mov
sbb
sar
fiadds
add
ss
icebp
mov
loope
mov
test
push
cmp
sahf
dec
icebp
enter
sub
jns
stos
inc
into
testl
mov
or
mov
movsl
ljmp
push
movl
dec
insb
pop
pusha
nop
stos
cmp
mov
popf
cmp
add
les
addl
flds
mov
lea
or
lret
repnz
outsl
inc
into
popf
cli
xchg
lods
call
sbb
rcrb
mov
jp
fsubs
ljmp
cmp
dec
inc
jo
adc
and
jnp
adc
pop
lcall
push
dec
ret
jle
loop
popl
add
imul
into
andb
fwait
adc
and
mov
stc
icebp
mov
fs
inc
fldenv
out
fildl
mov
popa
sbbb
jns
and
sub
xchg
repz
call
scas
dec
push
aas
pcmpgtd
loopne
pop
or
into
mov
bound
cli
jne
lods
fld
int
mov
inc
divl
mov
or
jg
pop
notl
add
sbb
jg
xor
sub
cmpsb
sti
dec
arpl
xor
jbe
fimuls
xor
inc
or
cmp
pop
into
stc
jecxz
xchg
xchg
nop
nop
cli
scas
imul
nop
sbb
shlb
or
push
xor
jecxz
jno
arpl
cli
in
cli
adc
fidivrl
loop
cmc
pop
das
sbb
sti
adc
mov
cmp
fwait
xor
sub
pop
add
loop
dec
mov
fmulp
mov
jg
mov
stos
bnd
dec
jg
lock
ret
inc
or
aad
mov
lcall
movsb
xor
aad
jmp
mov
fistl
inc
and
movsb
and
imul
les
in
pop
out
xor
lock
in
std
cld
adc
ss
and
pushf
mov
int
dec
scas
push
push
dec
fisubrs
sub
jo
inc
mov
pop
adc
mov
cmp
arpl
push
int3
mov
shll
dec
mov
jbe
cmp
ret
iret
sub
inc
mov
cmp
gs
fbstp
add
test
cmpsl
jle
push
cli
or
mov
addr16
inc
mov
inc
dec
ljmp
push
sub
in
jmp
adc
movsb
loopne
inc
or
or
add
mov
mov
dec
mov
out
or
xchg
sub
add
and
mov
mov
loop
jg
repz
scas
sub
push
dec
orb
scas
jl
hlt
xchg
pop
data16
or
aam
pushf
add
adc
push
push
push
jmp
pop
jo
decb
ss
or
lods
mov
mov
mov
adc
push
stos
jl
inc
rcrl
mov
jge
cmp
fidivrs
aad
jne
lods
cmpsl
repz
mov
sbb
fcomp
pop
out
mov
sub
test
dec
pop
insl
loop
xor
sbb
shl
or
mov
cmpsb
pop
push
jnp
sbb
in
cli
adc
cmp
and
cld
or
adc
mov
or
fistpll
movsl
cmp
and
imul
or
push
push
or
je
shlb
sub
das
jnp
cmp
cmp
cmp
mov
cmp
aas
lcall
cmp
sub
out
xlat
ficompl
shlb
add
es
movsb
jg
mov
dec
sbb
mov
jns
fdivrl
rcrl
adc
jecxz
iret
sub
mov
xchg
test
or
sbb
xchg
loopne
fildl
add
sbb
shr
fldt
ret
mov
mov
jmp
cmp
lret
daa
add
pop
add
rclb
sub
xor
fldl
lods
aaa
xor
movsl
or
jo
insb
hlt
xor
push
jmp
jno
movb
fdiv
or
adc
repz
loope
dec
add
xor
xchg
sub
xlat
fs
mov
clc
jns
clc
daa
pop
push
js
xor
inc
dec
inc
mov
rorl
push
cmp
sub
jbe
pop
sub
push
imul
and
shl
jbe
dec
movsb
test
add
add
push
xchg
js
xor
xorb
out
cmp
ret
adc
push
or
mov
shl
adc
push
fidivrl
pop
adc
or
or
add
add
jmp
outsb
stc
pop
clc
add
hlt
shrl
push
pop
cmc
sbb
out
loop
ret
pop
movsb
incb
mov
and
insl
push
cmp
jmp
call
jo
cmp
jg
or
stos
loop
and
push
or
aam
sbb
pop
lods
jo
xchg
dec
lcall
fcom
jae
ljmp
and
adc
js
out
ror
and
sub
dec
loope
cltd
mov
lods
arpl
je
sbb
add
rorl
lahf
jb
dec
adc
xor
enter
sbb
out
insl
mov
and
mov
xchg
in
mulb
test
test
xchg
lods
sbb
test
leave
hlt
popa
push
loopne
jo
loope
call
adc
pop
test
arpl
xor
test
or
jbe
out
mov
mov
addl
enter
sub
lods
dec
inc
aas
addr16
je
mov
jo
arpl
mov
in
lret
mov
enter
scas
add
cmp
mov
xchg
dec
xchg
jne
arpl
xchg
push
jp
push
jno
fwait
mov
push
sub
and
aas
jl
rol
add
cmpl
mov
mov
sbb
push
xchg
push
out
or
lcall
ret
cltd
xchg
inc
cltd
pop
into
pop
add
xchg
iret
sbb
shl
mov
and
jl
pop
data16
xor
js
imul
out
xor
and
cmp
lcall
mov
mov
xchg
cmp
daa
insl
icebp
pusha
movsl
shll
and
sbb
stos
test
push
mov
ljmp
dec
arpl
sbb
inc
push
add
sbb
pushf
shr
loop
pop
arpl
hlt
insl
pushf
and
sub
mov
loope
aad
fisubrs
mov
xor
mov
cmp
jle
xchg
fidivl
int
pop
and
jecxz
mov
sar
or
js
cltd
lods
in
lret
sub
jge
test
ror
jae
jmp
addl
gs
out
cmp
outsl
pop
and
ljmp
mov
mov
fsubr
inc
ja
retw
inc
and
add
fmull
into
in
jo
lea
inc
les
and
xchg
inc
stc
sbb
xor
push
xor
inc
pop
rep
stc
imul
cs
fisubrl
pusha
mov
xlat
jl
mov
mov
lds
or
mov
mov
scas
int
inc
sbb
xchg
push
shll
sbb
cmpsl
mov
dec
int
out
loopne
outsb
sbb
sbb
fiaddl
stos
fld
dec
divb
push
jo
rorl
dec
push
xor
push
or
into
mov
cld
out
test
xchg
sbb
dec
push
dec
out
fdivr
shll
sbb
pop
lods
or
arpl
and
cmp
cmpsl
popcnt
cmp
popf
and
call
adc
add
inc
dec
push
cmpsb
push
pop
pop
leave
jp
cli
into
mov
xchg
imul
pop
fidivrs
push
loopne
test
add
pop
test
push
jle
loope
adcl
dec
rcrl
fwait
nop
lahf
mov
dec
dec
mov
inc
jecxz
push
movsb
sbb
das
mov
mov
aaa
mov
ret
mov
jbe
outsb
jmp
sub
lea
cmp
push
mov
mov
pushf
xchg
mov
ss
mov
int
inc
push
shll
or
mov
bound
jno
adc
mov
add
fnstsw
xchg
fwait
lret
inc
imul
sub
fldl2t
jmp
pusha
dec
icebp
fwait
adc
lahf
pop
adcl
push
leave
add
mov
mov
xchg
mov
cmc
lds
mov
pusha
or
cmc
hlt
mov
push
cmp
adc
push
fs
jne
or
insb
cmpsl
mov
das
adc
mov
mov
or
test
add
inc
inc
push
pop
mov
repnz
lock
adc
add
mov
int
loop
jne
mov
push
sub
stos
divb
mov
in
jle
xchg
inc
ljmp
adc
or
pop
mov
pop
lret
lock
add
outsb
push
aam
pushf
jnp
stos
das
repz
sarb
sarb
jle
sub
mov
aam
pop
je
cli
out
mov
outsb
gs
aam
jns
sub
ds
xor
js
leave
movsb
roll
sub
cmp
in
jmp
pop
cmp
fidivl
insb
adc
mov
push
les
data16
repz
mov
jmp
shlb
das
dec
and
mov
push
andl
out
sbb
push
add
les
or
sub
mov
mov
xor
shr
in
jge
jae
ret
clc
push
pushf
ds
lods
sbb
mov
inc
jle
push
mov
in
cpuid
lret
lcall
dec
int
cs
inc
notl
sti
cmp
fsubp
popa
in
xchg
das
or
jno
frstor
addr16
fs
loop
pop
aad
popf
pusha
daa
jbe
fisttpll
popf
imul
pushfw
aad
js
leave
filds
out
pop
and
mov
and
adcl
arpl
push
pushf
jo,pn
cmp
orb
fistpl
cli
jl
dec
fwait
adc
movsb
jmp
xchg
rep
fisubl
add
add
pop
push
imul
outsb
sbbl
in
cwtl
sbb
mov
mov
bound
adc
cltd
adc
mov
out
sahf
fwait
lcall
inc
or
dec
fldl
aas
inc
jl
cmp
xchg
mov
shll
dec
mov
fildll
arpl
mov
sbb
and
xchg
divb
pop
imul
stc
pusha
pop
mov
mov
push
jge
nop
push
fcomp
jae
dec
cmp
loope
pushf
dec
nop
dec
mov
sub
inc
in
rcpps
aad
popa
sbb
mov
or
mov
cli
testb
pusha
push
push
and
lods
add
push
push
inc
loopne
dec
scas
out
sahf
repnz
pop
lret
arpl
loop
dec
inc
fsubp
sbb
test
mov
outsl
pop
push
cmc
lock
iret
jo
add
cwtl
ret
jae
sub
or
cmp
adc
dec
stc
push
scas
inc
aam
icebp
push
cli
cmp
jge
call
gs
clc
loopne
pusha
jnp
dec
das
mov
jb
into
sub
mulb
cld
or
mov
pop
loopne
jmp
mov
mov
jbe
cwtl
mov
jp
sub
movsl
int
pop
scas
mov
or
cld
fbstp
sbbl
and
dec
pop
subb
dec
cltd
mov
mov
fdivr
cmpsl
mov
js
inc
push
icebp
in
pop
test
movsl
sub
pop
popa
shlb
cltd
pushf
xlat
ja
sub
mov
ja
cmc
and
rorl
xchg
and
adc
aam
aas
inc
vpmacsww
push
push
inc
out
push
mov
fwait
and
pusha
out
hlt
in
sub
movsb
bound
dec
mov
cmpsl
pop
mov
sbb
sbb
push
jle
les
scas
inc
dec
aad
or
mov
test
in
mov
sti
fisttpl
push
jnp
out
rolb
add
dec
mov
jg,pt
ss
add
repz
into
dec
push
popf
stc
inc
jne
push
fsubrl
js
test
cs
insl
fadds
aas
xchg
mov
cltd
in
mov
xor
enter
rorb
lods
ljmp
mov
jns
negl
pop
out
insb
and
inc
or
fdivl
loope
cmp
xor
cmc
mulb
loopne
cs
cmpsb
push
or
add
add
imul
pushf
mov
loop
out
filds
insb
or
neg
gs
xor
sub
insl
decb
pop
cmp
sarb
movsl
test
xchg
adc
ret
fisttps
rcl
and
ficompl
mov
or
dec
inc
push
or
imul
loop
add
ljmp
fwait
xchg
mov
loop
repnz
int
repz
push
sub
add
dec
pop
scas
sub
push
cmp
xor
inc
orl
xchg
push
pop
imul
lret
call
ja
xchg
mov
ljmp
cmp
sub
mov
xor
xchg
es
sbbb
cmp
mov
inc
daa
lahf
mov
mov
es
rolb
test
lcall
push
into
lods
jae
cmp
and
hlt
ljmp
lock
sbbb
in
jmp
hlt
pop
roll
cmp
push
imul
scas
mov
xchg
mov
sbb
cs
mov
add
sbb
cmpsl
shrb
sbb
enter
push
hlt
mov
sub
jae
and
cli
lds
mov
loopne
outsw
out
cmpb
mov
insl
fiaddl
or
dec
xor
das
scas
and
cmp
int
out
push
mov
lahf
pop
jae
sub
cmp
pop
adc
adc
cmp
push
mov
sub
sbb
jbe
and
jo
sub
movsb
push
fsub
inc
dec
ret
cli
sti
lahf
dec
addr16
shrl
dec
jo
fistps
enter
adc
int
lretw
adc
sub
scas
push
div
repnz
mov
sub
xor
or
sub
loopne
ljmp
xor
in
mov
sbb
cs
jmp
pop
jbe
lret
push
ret
add
rorl
mov
fs
roll
jecxz
push
gs
xchg
push
inc
divl
cld
out
add
and
push
in
cltd
inc
rcll
xchg
mov
mov
mov
pop
cmp
mov
mov
dec
add
mov
lods
dec
in
fs
ljmp
push
xor
xor
dec
loope
pusha
pop
fisubrl
add
subl
sub
xchg
lret
push
adc
sub
add
add
fwait
andl
xchg
sbb
lcall
pop
xor
inc
out
mov
and
sahf
aam
addl
push
leave
sub
push
sub
cmpl
inc
cmpsl
and
dec
imul
int
sti
inc
mov
add
adc
mov
test
fs
jecxz
jns
addr16
cmpsl
inc
in
adc
addr16
mov
inc
in
inc
lahf
mov
add
jmp
sahf
mov
ret
adc
push
xor
jnp
mov
cmp
loopne
xor
xchg
and
mov
mov
popa
aad
xchg
rcrb
in
cld
push
pusha
gs
decl
sti
shll
jge
dec
pusha
inc
add
adc
rcl
mov
xchg
test
loop
adc
enter
adc
test
push
cmp
cmp
pop
lret
and
les
outsb
ds
in
xor
mov
imul
jle
inc
mov
mov
rcrl
jecxz
and
pop
pusha
pop
lock
and
cmp
lcall
movsb
dec
sub
jne
pushf
xlat
js
out
pop
divl
notl
rclb
mov
fwait
mov
and
sahf
or
gs
jnp
int
jle
iret
mov
imul
mov
xchg
and
sub
dec
sbb
jae
jg
cmc
mov
test
mov
insl
sbb
jne
sub
imul
ljmp
push
adc
dec
fs
in
data16
mov
data16
es
rcr
mov
ss
js
mov
push
mull
sub
push
and
and
hlt
adc
pusha
outsb
jno
add
pop
pop
ret
data16
cmp
pop
pushl
mov
mov
lods
hlt
sbb
shlb
push
sti
cs
bound
push
or
xchg
es
mov
popa
inc
in
lea
pop
mov
ret
sub
mov
stos
push
mov
mov
jae
outsb
jecxz
push
xchg
sbb
jmp
stos
movsl
push
or
cmc
pop
sub
adc
jp
push
jbe
jecxz
cmp
sahf
cmp
xchg
sarb
movsl
fbstp
out
push
in
inc
shl
sbb
dec
pop
push
sbb
out
cmp
sub
jl
xor
aas
xor
mov
fisttps
adc
insb
out
mov
xchg
and
add
js
mov
imul
cld
jne
popf
ds
xchg
iret
xor
jecxz
pop
sbb
dec
and
cmpsl
outsb
fsubs
sub
repnz
mov
in
outsb
adcl
xor
sub
jecxz,pn
cmp
les
mov
pop
lret
mov
mov
and
mov
mov
les
je
loope
loopne
jnp
jp
push
stos
inc
rcl
adc
lret
rcr
push
adc
subb
dec
insl
in
fsubl
dec
push
data16
gs
adc
cmp
call
push
inc
fistpll
jmp
lds
xor
out
push
xchg
add
or
dec
and
fcomps
leave
sbb
into
in
sbb
cmp
add
js
insb
lock
aam
ds
leave
xor
adc
xchg
frstor
inc
test
jns
or
into
das
insb
xchg
push
out
js
out
add
in
es
mov
sbb
push
mov
xchg
adc
sub
add
fidivl
and
fimuls
int
int
dec
push
mov
jg,pt
pushf
sub
add
xlat
cli
add
outsb
sarl
add
mov
scas
in
jecxz
fsubrp
mov
or
out
lahf
es
in
jo
in
ss
sub
test
push
cmc
cmp
jp
aas
sbb
push
cmpsl
cmp
ss
lret
mov
jb
leave
or
or
mov
cwtl
hlt
das
sahf
ficoms
push
xlat
inc
mov
orb
montmul
cmpsb
test
cmp
lcall
sub
imul
aam
xor
jnp
loop
pop
add
pop
arpl
jmp
cld
lret
out
mov
jns
cmp
mov
mov
pop
cmp
aas
shr
mulb
sbb
xor
movsl
icebp
mov
mov
xor
cmp
popfw
jae
andl
push
hlt
into
imul
notl
icebp
lds
aad
cmc
xchg
cmp
cli
shll
adc
fbstp
lock
mov
adc
or
mov
inc
mov
dec
xchg
xorl
sub
pusha
pop
sti
loopne
test
xlat
add
rol
mov
pop
push
dec
xor
inc
push
lcall
lret
lods
fwait
mov
and
ret
adc
mov
stos
and
loopne
sub
repz
pop
adc
ret
add
or
xchg
pop
dec
jp
jnp
pop
adc
xchg
and
or
jecxz
ja
pop
cmp
cmpsl
sti
sbb
iret
lods
inc
rolb
push
pop
repz
out
inc
add
shl
pop
push
icebp
les
pop
pusha
loopne
cmp
inc
push
pop
repz
rol
in
fdivs
mov
mov
mov
nop
jl
es
push
xchg
ds
aam
ss
dec
sti
xchg
jne
push
xorl
sbb
ja,pn
mov
mov
jns
or
lods
mov
pop
mov
test
ds
mov
jge
repnz
negb
mov
lcall
lcall
inc
adc
mov
jmp
push
test
xchg
aam
out
insb
pushf
mov
sti
aaa
or
mov
cwtl
scas
int3
mov
mov
scas
notb
pushf
fistpl
lret
in
bound
fs
mov
cmp
adc
pop
loop
mov
and
xchg
lahf
add
dec
inc
sbb
arpl
inc
sar
cmp
loope
xor
adc
adc
mov
mov
cltd
push
mov
push
xlat
xor
xor
pop
adc
cs
movsb
push
push
fnstenv
sbb
jecxz
mov
aas
xor
mov
jl
adc
int3
ret
jge
cmp
xor
mov
jmp
int3
std
cmp
and
xlat
int
shll
mov
add
rcrb
inc
dec
in
inc
pop
test
maskmovq
aaa
icebp
mov
sub
movsb
mov
testb
pop
jge
mov
mov
cwtl
scas
push
int
hlt
jmp
scas
jae
loopne
pop
cmpsl
ss
dec
lret
popf
lods
pop
int
mov
jno
pop
fisubrl
out
mov
lods
sbb
imul
rcll
lret
mov
lahf
or
xchg
mov
ret
mov
lret
pop
mov
push
into
cmp
fidivrl
mov
push
cli
cmp
inc
pop
add
mov
dec
stos
xchg
es
mov
lcall
dec
mov
repz
xor
xor
not
out
push
mov
or
jbe
rcll
add
test
dec
jo
mov
iret
xor
inc
xchg
lcall
adc
pop
xchg
in
insl
adc
movsl
cltd
lods
or
inc
insb
jae
das
inc
sahf
push
lods
scas
jge
cmp
mov
mov
scas
pop
stc
jmp
cmp
sete
orb
sub
adc
xor
addr16
notb
xchg
lds
aas
mov
add
dec
jg
cmp
inc
jge
add
call
push
or
mov
shlb
inc
dec
test
imul
bnd
jb
clc
sbb
and
fisttpll
push
jmp
and
test
adcb
rol
xor
pop
roll
mov
popa
imul
faddl
add
popa
insl
pop
cmpb
and
pop
adc
and
cld
add
rol
dec
fcoml
aad
jle
sbb
sub
push
push
jne
in
xor
icebp
insb
repz
push
mov
mov
push
popf
int
add
and
inc
xor
jb
push
adc
mov
and
jbe
movsb
les
push
adc
mov
les
fimuls
xlat
shrb
aaa
lock
xor
inc
jl
add
cmp
jbe
das
hlt
and
mov
mov
xchg
nop
mov
in
scas
mov
xchg
dec
add
mov
ret
xchg
jge
sbb
pop
aas
jge
dec
loop
sbbl
jae
sbb
dec
outsb
mov
insb
xchg
xchg
fwait
insb
jmp
xor
nop
hlt
clc
jg
xor
scas
jnp
dec
jg
mov
lds
aad
cmp
pushf
jno
adcl
cmp
popf
ds
xchg
add
jg
aaa
lret
int
push
icebp
int3
inc
stos
andl
bound
andb
adc
icebp
mov
xor
mov
pop
lea
mov
jb
dec
add
fdivr
add
jmp
gs
mov
fnstenv
mov
ljmp
psubsw
jns
adc
xlat
test
push
rcrl
xchg
fsubs
mov
fsubp
pop
aas
negl
add
add
xchg
xchg
test
fisttpl
out
adc
mov
fstps
loope
ja
roll
mov
dec
shl
xor
movsb
pop
mov
xor
outsl
adc
or
dec
stc
and
test
or
cld
dec
inc
and
mov
inc
jp
dec
inc
rol
adc
jp
and
pop
mov
push
pushf
sbbl
imul
mov
pop
fidivl
mov
mull
js
dec
push
dec
lret
pushf
insb
sahf
or
mov
dec
inc
fwait
andl
xchg
jl
mov
inc
push
push
lahf
pop
mov
pop
lds
sub
jbe
or
inc
or
orb
xor
loope
and
inc
pop
lock
daa
imul
push
mov
push
pop
add
push
ljmp
mov
mov
shlb
cmp
mov
rolb
test
sub
jns
or
cli
sub
sarl
orl
add
lahf
mov
and
or
jo
enter
mov
mov
scas
push
sub
and
and
test
rcrl
pop
hlt
shl
loop
cmp
bound
xchg
sti
in
xor
push
arpl
and
jge
dec
andl
xchg
jo
icebp
or
int
jl
mov
loope
add
lock
xchg
pop
out
cltd
lods
jp
inc
fisttpll
cltd
mov
stc
or
fst
or
in
mov
sub
addr16
sbb
cmp
jp
inc
into
ret
ljmp
je
sub
sarl
mov
in
sahf
cmc
imulb
movsb
cltd
adc
and
mov
imul
or
jmp
xlat
inc
call
sti
stos
xchg
push
ss
mov
push
lock
lds
out
mov
outsl
sbb
mov
pop
clc
je
cmp
pop
xor
shlb
out
xor
lock
mov
dec
test
pop
fs
cwtl
inc
mov
cmp
adc
push
out
scas
sub
stos
nop
dec
pop
sbb
fisubrs
jo
push
or
clc
jnp,pn
and
sarl
mov
arpl
mov
imul
pop
xchg
sbb
sahf
clc
xor
lret
out
jg
add
pop
iret
sarb
sbb
es
daa
sbb
dec
insl
mov
leave
movsb
mov
xchg
add
mov
xchg
fmulp
jns
aas
mov
ss
mov
sbb
hlt
in
int
das
xchg
movsl
mov
ficomps
shll
xchg
outsb
and
lock
icebp
popf
stos
decb
mov
movsl
mov
ds
jle,pn
sub
pop
loope
sbb
pusha
out
fistps
nop
js
stc
inc
adc
scas
xor
dec
mov
call
add
sti
movsb
jge
jae
and
sbbl
sub
scas
cli
push
xor
inc
jne
pop
add
in
push
in
shr
xchg
jnp
xchg
popf
lahf
addr16
mov
int
jb
inc
mov
pop
xchg
rcll
add
and
and
rcrl
shl
cmpsl
xchg
pop
xchg
repz
insb
arpl
repnz
jb
cli
mov
xor
in
fsubrs
or
mov
movsl
jg
clc
push
xor
jle
sbb
aam
or
scas
lock
sbb
popl
ficompl
and
movsl
cmp
rcrb
sbb
push
scas
dec
xchg
mov
dec
inc
dec
sbb
add
dec
push
mov
arpl
or
adc
jmp
jmp
cltd
in
xlat
cmp
popf
fmul
or
fcmovnu
sahf
push
jne
push
ss
loop
out
into
xorl
push
xor
sub
dec
push
xchg
xor
arpl
in
xorb
mov
xchg
sub
sti
test
mov
cmp
and
xor
stos
inc
or
jmp
lahf
inc
fwait
cmpsb
popf
lods
pop
movsb
dec
xchg
sub
daa
fs
fmull
sub
int
mov
test
out
mov
fwait
dec
or
es
ljmp
pop
cmp
push
data16
cwtl
fchs
and
popf
inc
push
jge
into
adc
cmp
repz
inc
xchg
arpl
std
sub
rcrl
mov
and
mov
in
sbb
push
cmp
cmp
mov
clc
mov
movsb
mov
lret
dec
push
dec
in
cltd
adcl
fsubl
inc
ss
into
hlt
rolb
jae
sbb
cmp
mov
inc
push
stos
jnp
outsb
and
pop
scas
pop
and
popa
icebp
pop
insl
xor
add
dec
or
sbb
xor
adc
rolb
bound
int
imul
or
je
mov
push
dec
fildl
cmc
sbb
mov
push
jl
daa
jp
mov
popa
push
inc
es
stos
pop
push
mov
sahf
jle
loope
jecxz
add
cmp
mov
test
pop
cmovs
sub
pop
mulb
sbb
cmc
inc
jnp
dec
inc
out
and
cmpsl
fsubr
stos
xlat
jae
data16
aam
mov
cmc
loop
xor
jne
rclb
rep
in
fwait
inc
pusha
mov
sub
scas
enter
xor
xchg
movsl
outsb
in
adc
lret
fidivrl
or
mov
hlt
fmull
out
fcmovnb
pop
das
scas
jns
jmp
nop
lret
sbb
xor
sub
mov
adc
inc
dec
imul
adc
daa
imul
ds
mov
nop
sbb
loop
call
mov
xchg
push
jmp
arpl
mov
cwtl
xchg
ds
aaa
and
mov
mov
sbb
fdivrs
loopne
js
xchg
dec
outsl
xchg
push
jl
pop
and
mov
lahf
lcall
jmp
mov
mov
mov
sbb
into
cmp
xor
loope
fwait
sub
ds
repnz
or
cmp
mov
ficompl
test
imul
roll
sti
cli
or
lahf
pop
mov
clc
jns
xchg
inc
stos
jno
add
jg
dec
pop
or
int
adc
fchs
jno
dec
mov
movsl
in
jle
ret
sar
sub
jno
xchg
imul
imul
add
mov
or
enter
movnti
lret
ja
lods
pushf
lahf
mov
add
pop
lea
std
mov
sbb
cmp
popf
fisubrl
add
mov
bound
dec
xchg
aam
sbb
sub
xor
in
mov
pop
test
fstl
lods
adc
sbb
repz
arpl
add
sbb
sbb
les
jb
push
sbb
fists
neg
sub
pop
insl
dec
sub
cmp
loopne
sbb
ds
shlb
push
and
add
hlt
into
jecxz
nop
idivb
fcoml
mov
mov
mov
xchg
jno
pop
in
imul
cmpsl
clc
enter
dec
lock
inc
mov
mov
testl
ljmp
xor
sarb
cmp
pop
in
inc
xchg
std
outsb
out
test
pop
jg
sub
loop
insl
adc
cmp
pop
shr
jne
mov
add
inc
push
inc
out
idivl
xor
pop
and
inc
fs
mov
int
or
fiaddl
shlb
movd
sbbl
push
sti
cmp
inc
cmpsb
pop
jp
cli
xchg
dec
mov
test
xor
and
mov
mov
pop
and
push
aad
movb
and
xor
sub
mov
aad
loop
dec
mov
mov
inc
jno
jg
xor
ret
inc
stos
xchg
cmp
cld
jecxz
pop
mov
and
sub
mov
cmp
imull
cmpsl
and
push
sub
ja
inc
nop
fnstsw
stos
or
or
xchg
pop
repz
lret
pop
ja
sbb
add
movsl
popa
das
jp
and
scas
sub
sbb
jns
lcall
push
push
dec
mov
push
loopne
sti
dec
xor
jae
lods
outsb
push
std
cld
ds
cmp
add
stos
jmp
push
sbb
pop
fwait
rcl
adc
dec
in
jle
sub
std
add
xor
int3
xor
out
pop
push
pop
push
aam
jns
ss
mov
test
repnz
int3
sub
ss
stos
or
sub
jl
test
loope
mov
push
stos
das
sub
lret
addr16
or
sub
add
xchg
xor
enter
outsl
push
stos
popf
cmpsl
push
jg
fldenv
add
mov
int
loopne
lods
popf
aad
dec
inc
rorb
insl
jmp
ret
pusha
adc
shll
xor
pop
out
test
aas
call
push
sbb
mov
jne
std
sbb
adc
xor
cmp
pop
int
adc
mov
cmpsb
scas
dec
add
imul
jb
enter
das
fwait
lods
push
ficoms
adc
das
and
cmp
std
js
fnstcw
pop
js
outsl
test
xchg
jp
mov
and
mov
sarb
inc
pop
or
or
inc
cmp
pop
push
push
mov
fs
pop
push
lea
dec
adc
mov
enter
xor
add
idiv
aam
xchg
and
fimull
and
xor
pop
inc
sub
pusha
in
and
pusha
inc
pop
loope
lods
frstor
jmp
aaa
lock
mov
sbb
iret
in
jge
pop
insb
jb
push
inc
jle
pop
pushf
cli
and
pop
aam
int
push
cmp
hlt
repnz
in
push
mov
rcr
rolb
jge
cmp
movsl
daa
sub
aas
jae
xchg
dec
push
inc
lea
and
mov
pushl
cmp
lcall
xchg
mov
sub
pop
rorl
dec
lds
jge
fisttps
inc
popf
cmp
dec
call
movsb
std
dec
jae
adcl
mov
cmp
cmc
and
scas
push
std
in
stos
mov
cld
jno
aaa
lret
test
push
xorl
cmpsb
mov
sbb
dec
cmpsl
nop
dec
adc
adc
push
push
add
pop
dec
mov
mov
cmp
jne
cmpsb
dec
mov
or
mov
and
pop
and
ds
faddl
pop
inc
inc
push
pop
outsb
xlat
in
mov
dec
xor
xchg
std
cmp
enter
mov
xchg
mov
lds
dec
push
jae
sti
mov
mov
adcl
int3
loope
xor
test
insl
mov
fidivs
or
cmpb
pop
add
icebp
pop
sbbl
push
add
call
loope
inc
xor
scas
ret
cmp
add
or
cwtl
mov
mov
jne
adc
mov
pushf
setae
inc
out
add
push
sbb
push
xor
xor
popf
or
dec
mov
xchg
or
sub
iretw
push
and
dec
lods
insb
mov
jnp
icebp
jle
or
add
je
jne
jnp
stos
push
cmp
mov
push
dec
dec
mov
rorl
sbb
out
out
aaa
dec
rcll
icebp
xchg
aaa
and
ja
xor
mov
or
mov
push
or
pop
testb
add
mov
sub
xor
jg
push
rep
repz
sub
daa
arpl
jmp
call
sub
xchg
test
add
mov
mov
cmc
mov
sahf
mov
call
xlat
pop
inc
mov
out
push
xchg
scas
sub
lret
mov
mov
jne
lock
dec
lods
jno
xchg
lock
test
vprotq
push
jmp
push
lock
outsb
pop
mov
cs
adc
pop
and
scas
js
stos
and
sub
mov
loop
mov
push
cwtl
inc
and
xor
mov
sub
dec
call
inc
jnp
fiadds
bound
adc
xchg
jno
cmp
cmp
mov
mov
mov
push
xchg
dec
loope
es
mov
xor
xchg
rol
mulb
jmp
inc
xor
test
adc
inc
lods
inc
repnz
sub
inc
jbe
fisubrl
xchg
in
rolb
jg
icebp
dec
scas
add
out
out
les
popa
call
orb
std
cmp
pop
ss
mov
subl
xor
rcll
mov
iret
adc
mov
in
jmp
test
test
out
pop
cmp
sbb
add
jne
lods
mov
fwait
mov
lock
or
sbb
aaa
in
cmpl
mov
out
dec
filds
out
or
mov
sbb
pusha
popa
sbb
add
mov
in
loop
fwait
aad
jge
mov
pushf
push
inc
push
mov
mov
sub
iret
mov
mov
pop
movsl
mov
clc
repnz
rcrb
push
mov
xchg
jo
sub
inc
pushf
xchg
ret
ficoms
mov
or
addr16
in
cld
sbb
mov
and
add
jge
lods
enter
shrb
fwait
dec
mov
mov
into
push
push
xchg
and
roll
or
mov
int
push
inc
inc
mov
imul
push
loop
xchg
mov
in
jle
in
cmp
xchg
xor
fdivr
sbb
rolb
test
mov
call
stc
imul
loope
or
movsb
ja
movsb
leave
cmp
scas
cwtl
dec
dec
sbb
xor
xor
mov
pop
xchg
push
sar
lret
aas
ja
ret
popa
lahf
in
fcomps
inc
add
pusha
ror
lock
nop
jno
xchg
push
nop
imul
mov
repz
pop
xchg
adc
push
add
adc
outsl
mov
dec
testl
xchg
lcall
xchg
push
mov
sub
jnp
jl
mov
adc
and
inc
adc
stos
movsb
mov
aaa
dec
or
jecxz
imul
cmp
sub
ss
subl
xor
pop
into
stos
jle
mov
mov
sub
push
cwtl
jmp
scas
mov
dec
dec
fildll
shl
sti
add
mov
and
aas
popf
imul
adc
mov
in
outsl
sub
fidivrl
clc
jle
lret
and
xlat
pop
jae
loope
rorl
arpl
and
mov
ret
mov
adc
or
dec
or
in
and
movsb
movsb
insb
lock
inc
test
cmpsb
push
lods
jecxz
test
xchg
mov
push
lcall
rcrb
sbb
mov
orl
or
rorl
cltd
insl
iret
dec
xchg
addr16
add
repz
test
test
es
clc
fnstenv
and
mov
mov
mov
or
adc
mov
pop
lcall
mov
mov
hlt
mov
and
sub
cmp
inc
inc
mov
mov
mov
cmp
sbb
and
std
sub
push
jmp
jns
pop
cltd
xor
pop
or
and
sub
cmp
cwtl
xchg
pop
addr16
jecxz
cmp
int
je
sbb
lods
in
cmp
xor
int3
pusha
push
pslld
test
ljmp
cmp
mov
push
cmp
das
cld
das
ljmp
mov
push
jns
enter
fstpl
mov
jno
or
pop
push
xlat
push
mov
push
jb
xor
in
stos
cwtl
sbb
pop
mov
movsl
xor
sub
xor
popa
stos
adc
sbb
pop
pop
enter
dec
jecxz
add
cmp
cld
sub
dec
nop
or
dec
cmp
test
ret
jmp
or
mov
sahf
adc
sub
das
push
cmpsb
adc
or
leave
out
pop
int3
pop
cld
mov
add
popf
mov
mov
push
pop
pop
outsl
xchg
cmp
jne
cmpsb
repnz
cmpl
inc
arpl
jno
cmc
lret
imul
inc
repnz
sbb
andb
or
adc
or
sbb
sahf
pushf
push
cmp
js
insb
testl
xlat
add
adc
sahf
mov
add
rcrl
mov
mov
xchg
cmp
mov
aam
mov
lret
pop
pop
mov
test
shrb
pop
xchg
fldenv
enter
fmull
or
test
popa
loop
mov
cld
mov
scas
out
inc
shr
and
push
bound
add
mov
or
adc
je
pop
push
mov
mov
stc
rclb
loopne
dec
push
lcall
push
push
leave
sbb
in
jmp
sub
mov
cltd
sti
loop
xlat
adc
or
mov
mov
jmp
out
leave
lahf
ljmp
cld
cmpsl
xor
ret
cwtl
in
pop
jb
leave
xchg
jmp
pushf
mov
add
adcl
sub
popa
mov
sahf
lcall
test
xor
inc
lret
or
popa
ret
cmp
lods
lea
div
adc
dec
jae
add
psrld
cmp
dec
nop
test
sbb
repz
pusha
in
sub
subl
adc
sar
mov
xadd
repnz
add
nop
xchg
lock
into
idivl
mov
mov
scas
stos
shll
or
cmp
and
xchg
rcll
gs
leave
mov
xchg
shrl
add
sbb
js
stos
addps
mov
sarb
jmp
jp
mov
or
jmp
inc
icebp
ja
lret
xor
cmp
cmp
adc
jns
push
cmp
lds
xor
push
lcall
cld
add
into
inc
ret
lcall
pushf
les
fsubl
insb
lahf
mov
inc
pop
mov
adc
sbb
pop
cmp
cld
popa
mov
aaa
jg
das
iret
sbb
mov
bound
das
sub
gs
xchg
fildl
sub
daa
inc
jo
fs
jno
cmpsb
xchg
inc
movsl
jle
and
mov
cwtl
enter
nop
and
movsl
ljmp
jp
das
mov
adc
lock
adc
aad
mov
add
test
push
pop
out
sub
add
idivl
aad
jnp
out
sub
or
lods
out
push
in
jmp
push
add
outsl
and
dec
hlt
cwtl
add
jns
pop
lock
sbb
pop
mov
aad
movsl
int3
xor
jecxz
and
dec
lods
fsubp
lret
sbb
jecxz
ret
cmp
loopne
pop
testb
stos
ret
adc
xor
xor
ljmp
xor
int3
jne
xchg
push
mov
mov
stc
cmpsl
shl
mov
sbb
inc
jns
mov
dec
sub
cmp
or
cs
stos
jae
push
fbld
repnz
aam
mov
xorl
rorb
cmc
mov
xchg
xor
add
repnz
fwait
out
rorl
insl
or
pop
add
js
sbb
pop
sbb
repz
mov
sbb
cmp
dec
aad
push
xor
mov
icebp
dec
nop
das
add
aad
ja
mov
xchg
nop
out
xor
cmpsb
out
pop
inc
movsb
in
rcrl
or
loopne
popa
lcall
nop
sub
loop
popf
mov
mov
rorl
scas
lahf
cli
inc
inc
add
adc
mov
mov
sbb
cwtl
jae
or
into
sub
ret
fwait
mov
sub
mov
loope
mov
stos
sub
std
jne
shll
mov
or
add
imul
add
mov
sub
dec
movsb
sbb
orl
adc
arpl
cmp
mov
mov
add
add
stos
add
fistps
loope
outsb
mov
sahf
mov
xchg
dec
inc
cld
pop
mov
iret
xchg
jmp
nop
mov
mov
or
push
mov
mov
or
orb
ret
lds
iret
mov
xor
ljmp
jl
mov
fcmovb
stos
push
cmpsl
ret
push
out
sub
add
sahf
pop
das
add
inc
mov
cmp
lcall
or
lret
mov
mov
jnp
sub
rcll
int3
imul
fsubl
into
or
mov
adc
stos
xchg
pop
mov
mov
sti
idivl
outsl
push
mov
repnz
pop
cwtl
mov
jle
icebp
stc
push
pop
arpl
xchg
push
bound
and
jg
adc
adc
xor
iret
push
sub
daa
push
cmc
adcb
subl
push
fisubrl
pop
inc
push
out
sub
repnz
stos
ja
pushf
jmp
push
sub
jae
jbe
leave
cmp
sub
dec
sbb
cs
cltd
or
push
mov
add
mov
xor
add
lahf
es
iret
sub
jle
aas
movsl
psubb
loop,pt
movaps
insl
push
jbe
aaa
sbb
dec
xchg
xchg
or
lods
movsb
xor
add
add
xchg
out
pushf
jmp
sbb
lret
pop
iret
jb
aas
dec
pop
frstpm(287
lds
xor
sbb
fs
lret
inc
lret
das
xchg
adc
imulb
jb
mov
xor
outsb
or
in
mov
in
push
mov
mov
cmc
cmpsb
sbb
xchg
push
popa
insb
pop
outsl
bound
fstp
mov
imulb
imul
ret
popf
inc
xchg
ret
stos
jne
ljmp
mov
jbe
jae
aam
mov
push
cmp
lock
mov
jbe
mov
push
insb
loope
xchg
xchg
mov
mov
sbb
adc
jno
pop
pop
pop
mov
jb
daa
mov
imul
pop
jne
jecxz
ret
mov
jae
lods
cwtl
test
in
mov
mov
or
inc
inc
aad
adc
mov
cs
sub
cltd
sub
outsb
push
push
jb
es
push
popa
stc
lcall
adc
cmp
loope
jne
pop
je
mov
cli
mov
jp
movsl
shll
or
pusha
repnz
ror
mov
lock
xor
push
add
xchg
enter
ja
or
ja
jge
cmp
mov
rcll
lret
decl
add
dec
mov
push
ret
push
mov
mov
cmpsl
fnsave
pop
or
jb
pushl
xchg
fcoml
nop
js
mov
js,pn
ljmp
mov
filds
insb
sbb
imul
pop
xchg
add
jge
mov
addl
add
stos
or
les
ret
mov
dec
jg
jnp
int
mov
mov
mov
mov
or
xor
sub
lds
je
xchg
xor
dec
rcr
mov
adc
outsb
div
insl
sbb
push
push
daa
and
stc
add
pop
pop
pop
out
dec
rol
xchg
mov
aad
jge
loopne
mov
in
rorl
pop
jae
fcomps
cmp
inc
push
sarl
sbb
lds
ss
outsb
imul
mov
shrl
test
adc
outsb
ja
fs
push
push
loope
fisttps
or
gs
cs
popf
jge
nop
push
lods
arpl
imul
jecxz
je
lret
inc
push
les
xor
or
jo
or
ret
xlat
xchg
sti
jge
scas
push
test
push
sub
xchg
mov
add
cmp
cmp
xchg
jb
cmp
xor
pop
pop
adcl
or
into
lret
mov
loope
or
xor
movsb
aas
add
mov
jge
pop
mov
xchg
sbb
scas
dec
push
lret
push
jmp
jg
jbe
enter
cs
scas
mov
mov
lea
ja
icebp
shll
cmc
fmull
inc
jecxz
push
xor
int
adc
mov
pop
cltd
inc
int
mov
fldt
insb
mov
pop
mov
shll
push
enter
push
jp
cltd
inc
sbb
mov
xchg
mov
cmp
sbb
inc
lret
fstps
mov
outsl
adc
push
pop
jne
outsb
rolb
mov
jnp
insb
jnp
xchg
jmp
dec
in
jp
inc
jmp
scas
es
aam
mov
rcr
rcrl
lds
mov
jle
fwait
adc
sti
pop
test
decb
jno
stc
fcoml
xor
mov
mov
jp
call
mov
test
scas
dec
lods
or
fs
push
jo
ljmp
fidivrl
mov
lods
cmpb
inc
pop
es
mov
insl
jp
lods
and
js
loope
jo
sbb
clc
aaa
int3
mov
test
fcmovu
jnp
fwait
loop
sbb
mov
and
lods
inc
jne
or
jnp
jmp
sub
mov
dec
sub
inc
mov
pusha
and
mov
pop
jp
add
push
aad
jge
dec
push
scas
fwait
mov
or
clc
pop
std
mov
dec
sbb
add
ficoms
gs
push
mov
ucomiss
loop
adc
inc
in
or
jmp
sbb
repz
test
out
push
loop
icebp
cmp
daa
pop
insb
arpl
jo
mov
out
das
sub
jne
xor
push
dec
test
cltd
mov
xor
clc
mov
mov
jmp
sub
cmpsl
mov
fisubs
sbb
nop
leave
mov
dec
push
je
xor
xor
xor
xchg
jns
es
mov
pop
mov
add
aaa
push
fiaddl
mov
rorb
pop
and
out
scas
sahf
in
test
sbb
loope
pusha
lds
lds
sub
push
adc
adc
rolb
xchg
fadd
ds
sbb
aas
adc
push
push
into
push
cmp
inc
ret
dec
xchg
cld
ret
mov
in
arpl
arpl
mov
daa
push
or
jno
sbb
adcl
popa
push
mov
stos
add
xor
ljmp
jmp
inc
jns
sbb
mov
mov
sub
xor
mov
clc
mov
stos
jns
adc
pshufw
add
add
lods
daa
xchg
adcl
sahf
arpl
pop
pop
sahf
adc
push
push
mov
pusha
addr16
mov
lds
sbb
and
sub
mov
fistps
inc
scas
les
out
ljmp
test
add
cmp
xor
in
dec
imul
cld
push
cmpsb
jg
and
or
adc
add
ficomps
cmc
push
or
popa
out
push
push
pop
push
mov
adc
mov
shrb
in
arpl
in
dec
sub
cmp
mov
int3
mov
and
fsts
repz
mov
test
push
add
clc
ror
divb
cltd
add
add
lods
xchg
gs
mov
andl
mov
addr16
stc
cli
gs
fisubs
sub
inc
add
fadd
add
hlt
ja
pop
xor
pop
xor
cmc
aas
mov
enter
addr16
loope
hlt
out
lds
sbb
jbe
je
and
test
push
or
sahf
or
mov
loop
insb
dec
sti
mov
imul
pusha
cmp
mov
mov
or
call
arpl
scas
lds
popa
scas
dec
andb
jo
addb
sti
ficompl
ret
aam
fiaddl
jns
dec
xchg
int3
pop
jns
cmp
adc
sbb
sarl
popa
lea
pop
cmp
test
sbb
sub
xor
pop
inc
iret
xchg
push
andb
lds
cmp
xchg
jo
rol
push
addb
xchg
rcrl
sub
xor
jae
sbb
insb
mov
js
mov
insl
pop
je
roll
lods
lahf
fwait
pop
out
push
sbb
fistl
ja
dec
in
push
push
fsubl
cmp
aaa
dec
lods
cmp
adc
mov
jg
js
xchg
dec
or
push
imul
xlat
push
nop
sub
sub
repz
xchg
push
out
and
imulb
add
imull
fidivrs
pop
xor
add
mov
inc
inc
adc
mov
xchg
daa
and
and
rcrb
adc
pop
mov
in
mov
dec
mov
adc
push
and
push
xlat
pushf
cmpsb
jne
jl
in
cmp
jne
mov
sub
xlat
in
sub
sbb
in
adc
jg
sub
mov
test
into
cs
sbb
add
adc
sub
cmpsb
inc
add
movsl
xor
sub
daa
dec
inc
clc
push
add
icebp
add
jg
mov
cs
imul
loopne
sub
sub
stos
xchg
push
or
mov
mov
xchg
cmp
stos
mov
jge
inc
fwait
and
mov
adc
ss
or
jns
push
add
fnstcw
rcr
pop
insb
mov
ret
insl
es
jo
jg
shll
xchg
subl
jp
cmpsl
loope
outsb
stc
dec
xchg
or
or
inc
aam
push
push
shrb
std
pop
aaa
xchg
cmpsb
cmpsb
pop
pusha
adc
mov
aad
and
ds
cmp
insl
ss
lods
sbb
jne
dec
sub
arpl
fcoms
or
fs
add
cltd
dec
pop
ljmp
enter
int3
cmc
imul
adc
leave
push
imul
add
cmpsb
adc
ss
out
jnp
iret
stos
inc
push
xchg
adc
jae
dec
lret
and
dec
cmp
pop
test
and
and
insl
add
paddsb
push
push
mov
push
testb
dec
jg
mov
cmc
lods
mov
pusha
repnz
mov
ret
jno
jle
cld
cmp
hlt
mov
cs
in
and
add
bound
and
enter
and
push
adc
cltd
lret
in
shlb
inc
mov
mov
mov
mov
test
mov
adc
mov
sub
in
mov
cwtl
pusha
dec
and
mov
jle
pop
xor
in
mov
cmp
pop
stc
jg
pop
jle
ret
fs
rorb
mov
test
mov
cmp
mov
scas
push
mov
jae
mov
pop
or
out
inc
les
cmp
or
sahf
aaa
rcl
xchg
dec
pop
imul
dec
sbb
sub
loopne
adc
arpl
fwait
bound
mov
mov
jg
push
add
test
sbb
mov
stos
push
out
fs
adc
jns
shr
mov
add
in
xchg
or
out
fidivl
jmp
std
xchg
rcl
mov
popa
insb
mov
ss
lahf
ljmp
inc
cmpsb
dec
mov
pop
jno
cli
mov
pop
out
out
out
iret
adc
aaa
cmp
xchg
add
out
push
clc
jge
ret
jbe
orb
jp
and
adc
ret
out
sbb
adc
dec
or
push
mov
and
or
ja
fwait
mov
mov
fsubrl
jbe
and
mov
push
cmp
or
test
xchg
sub
and
pop
adc
push
pop
in
sti
and
cmp
push
jp
xchg
inc
xor
add
ja
xchg
fmuls
add
or
adc
dec
out
add
cmp
cmp
adcb
notl
lds
lahf
or
or
ret
icebp
fstl
cmp
sub
ljmp
std
into
push
aad
push
pop
adc
pop
xchg
in
jg
add
js
outsb
or
clc
repnz
xor
mov
mov
stos
mov
fstpl
cmpsb
and
in
push
movsb
subb
jg
inc
or
dec
sahf
jae
hlt
fsubrl
iret
stos
les
inc
cli
fdivrs
rcrl
stos
xor
adc
dec
and
insl
jge
sbb
test
push
imulb
push
sub
jg
adc
xchg
jmp
fsubr
sbb
mov
xor
push
sar
in
mov
mov
ret
mov
mov
pop
mov
pop
adc
das
and
mov
jne
mov
sarl
mov
in
inc
fwait
lds
xchg
popa
sub
and
ret
pop
es
xchg
testb
pop
repnz
xchg
add
mov
out
out
push
les
pop
outsb
sbb
dec
js
add
lods
sti
shlb
jle
cmp
xor
andb
cld
pop
cmp
mov
cmp
xor
ds
cmp
pop
mov
aaa
pop
jmp
pusha
inc
rcll
mov
fisttps
mov
js
push
scas
outsb
and
add
clc
dec
push
popf
js
lcall
loope
out
pushf
sbb
loope
adc
jns
push
out
les
jbe
sbb
rol
push
ljmp
adc
sbbb
and
adc
fcmovnb
shll
stos
ds
test
or
call
xor
push
xchg
stos
dec
xor
dec
mov
lret
inc
mov
jo
mov
and
inc
push
daa
sbb
cltd
pop
arpl
cmp
inc
aas
mov
vpmadcsswd
jne
or
or
cld
mov
lahf
jns
cs
leave
inc
and
mov
je
daa
jp
js
xchg
lret
loopne
fistl
jno
cmp
sub
add
mov
iret
mov
movaps
pop
jae
mov
xlat
xor
push
and
sbb
add
xlat
loopne
test
and
test
mov
add
vmread
inc
xchg
jo
stc
mov
or
cmc
xor
add
nop
push
popl
ljmp
test
and
icebp
pop
mov
cmpsl
clc
loope
lea
sti
cmp
inc
shr
ja
cld
mov
sub
pop
xchg
rorl
pop
add
aas
push
fisubl
xor
mov
push
stc
shrb
mov
loop
dec
bound
inc
mov
imul
sti
sti
mov
popf
xor
gs
pop
lret
pop
sub
dec
movups
and
into
xor
imul
and
es
sub
inc
mov
dec
or
test
movsb
imul
cmp
leave
xchg
dec
pop
push
adc
lods
xor
jo
xor
cs
xor
sub
mov
dec
mov
adc
icebp
jo
lcall
mov
mov
sbb
jo
mov
jecxz
cmp
dec
adc
adc
pop
js
jne
mov
pop
cwtl
aad
aam
inc
dec
imul
sbb
jb
imul
mov
test
push
popf
xchg
in
xchg
push
sub
fistpl
mov
test
add
fbstp
pop
daa
mov
or
dec
sbb
out
arpl
loope
push
inc
add
push
mov
inc
or
inc
pusha
xchg
clc
sub
rcll
repz
sub
adc
repz
popa
std
push
mov
xchg
and
cmp
fwait
sbb
mov
pop
xchg
lds
fdivrp
sub
pushf
add
dec
lea
pop
sbb
clc
data16
nop
and
jg
out
or
and
inc
dec
addb
pusha
cs
sbb
jg
cmpsl
add
jl
add
adcb
adc
gs
adc
loope
push
lods
fnstcw
mov
iret
lods
js
test
icebp
add
xor
push
and
sbb
jo
fstp
sub
pmaddwd
lods
jle
cmp
add
shll
push
push
loopne
cmp
enter
cltd
fsubrs
les
shlb
sub
mov
sbb
mov
sti
sbb
inc
push
xor
sbb
xor
fwait
jo
stos
or
daa
pop
add
push
ret
loopne
int3
fsubr
xor
stos
and
mov
mov
or
jmp
mov
ret
xorb
mov
cmp
shrb
ret
lret
mov
dec
dec
hlt
cmp
clc
inc
and
test
jne
cld
lock
jecxz
ror
shll
or
filds
and
and
mov
dec
jne
pop
repz
test
aaa
shll
mov
cmpsb
push
push
dec
mov
ja
js
rorl
pop
inc
das
inc
inc
jae
cmpsl
add
mov
movb
or
and
clc
in
mov
divl
scas
push
inc
add
dec
xlat
pop
scas
adc
subb
movsl
xchg
cmpsb
test
mov
push
mov
flds
dec
test
out
test
nop
adc
inc
inc
jne
repz
adc
psraw
jle
inc
or
in
loopne
push
mov
sbb
es
jbe
sbb
sbb
jae
imul
aas
and
xor
push
sbbl
bound
addr16
jp
cmp
xor
mov
fnstcw
cmpsl
add
dec
jge
or
ds
push
repnz
pop
inc
mov
clc
scas
popf
xchg
mov
loope
sarl
and
sub
dec
adc
push
add
imul
mov
rclb
popf
mov
jb
lds
pop
xor
sbb
cmp
sbb
stc
test
jb
mov
jge
mov
mov
xor
push
cmp
loope
jo
outsb
cmpxchg
pop
mov
push
fs
aam
sbb
outsl
xchg
daa
dec
push
jge
lcall
test
pop
bound
test
out
aad
je
out
nop
add
cli
fdivl
xor
add
test
out
fs
inc
outsl
movsb
call
arpl
test
jns
cs
jecxz
js
xor
or
out
lods
mov
cmp
mov
addr16
jecxz
xchg
jb
cmp
jle
jl
push
pop
add
lret
int3
cld
ja
aad
shr
repnz
add
dec
rcrl
ds
ja
jg
add
mov
pop
arpl
pop
arpl
dec
lods
les
xor
popa
pop
mov
sbb
jb
mov
jne
or
scas
adc
or
clc
mov
lret
mov
fucomp
in
sub
je
movsb
pop
out
sti
les
mov
icebp
dec
inc
es
es
outsb
cmpsb
mov
loop
ret
inc
in
mov
dec
cmp
inc
push
jo
mov
sbb
jbe
int3
sarb
inc
jno
ljmp
sahf
xor
out
add
xchg
loope
popl
cs
sub
ljmp
jle
jp
xor
pop
outsb
dec
jecxz
sub
sbb
cld
das
or
push
inc
cs
jp
pop
push
push
inc
cmp
mov
jae
jg
xchg
push
xor
xorl
push
daa
test
and
aad
mov
xchg
jge
andb
fbld
sbb
icebp
or
add
cs
ja
addr16
outsl
sti
sti
adc
cmp
fnstsw
mov
pop
idivb
sbb
mov
movsl
lahf
ret
repz
lods
cmp
test
add
mov
and
insl
inc
int
pushf
lock
jle
test
out
cmc
sub
xor
mov
push
imul
data16
mov
add
mov
adc
arpl
cld
shrb
pop
push
push
test
movsl
insb
cmc
lea
into
imul
jb
in
mov
test
test
xchg
or
jecxz
jl
mov
gs
loopne
sub
mov
mov
rcrl
jmp
sahf
xor
jns
xor
pushf
inc
pop
call
xchg
les
sbbl
dec
leave
lods
xchg
dec
mov
jb
adc
inc
dec
scas
in
ds
in
and
mov
hlt
pop
push
mov
lods
mov
pop
imul
out
mull
into
dec
mov
sub
inc
push
sbb
mov
hlt
mov
jns
mov
div
sub
mov
fcmovnu
or
daa
and
shl
dec
cwtl
test
dec
faddl
pop
or
sarl
add
pop
pop
idivl
mov
jnp
in
scas
or
mov
xchg
mov
ret
int3
xor
test
cmp
or
xchg
xchg
xlat
pop
popa
jno
js
cmc
mov
jns
push
xchg
sub
mov
mov
inc
cs
adc
xor
dec
aam
loop
pop
add
ljmp
mov
nop
mov
hlt
vandnpd
jle
mov
scas
js
push
ret
inc
mov
ss
adc
pop
out
imul
jl
xor
pusha
les
or
mov
sbb
and
mov
leave
mov
fnstsw
jecxz
lock
cmp
xchg
rcl
xchg
stc
push
mov
sbb
inc
shl
cmp
xchg
or
insb
outsb
mov
adc
call
scas
pop
enter
or
jl
pop
jb
or
outsb
and
adc
repnz
mov
lods
mov
mov
sbb
mov
sub
inc
in
cli
push
jns
addr16
mov
les
andl
sub
into
fidivrl
mov
sub
fimull
inc
jmp
lods
jmp
mov
fcmovnb
xor
sbb
pop
pop
rcll
pop
idivl
push
pop
out
inc
cmc
xchg
lahf
and
out
pop
mov
mov
call
fwait
movsb
rorb
out
movq
fistps
into
movsl
in
or
mov
mov
mov
scas
lret
fstpt
cmp
data16
movsb
fnclex
cmp
insl
push
lds
inc
sarl
arpl
movl
add
aad
aam
jno
inc
rorl
out
test
lret
xchg
and
sub
mov
pop
shrl
lea
sbb
jle
dec
mov
sbb
testl
fcoml
jbe
xor
push
int
ds
push
mov
jle
std
cltd
or
imull
sahf
xchg
jne
push
movsb
mov
adc
in
popa
pop
cmp
pop
jmp
mov
ror
jbe
dec
jne
shrl
xor
ds
xorl
ds
insl
mov
leave
test
std
in
nop
les
clc
sub
cmp
enter
sbb
jbe
in
and
jae
leave
test
arpl
mov
xor
and
add
jle
sbb
dec
pop
sbb
mov
mov
push
in
adc
pop
push
inc
push
push
into
rcr
sbb
jae
das
and
jae
lret
pop
sub
sbb
loop
imul
and
dec
sti
andb
fcoml
jb
lock
pop
cmp
adc
pop
adc
lock
roll
test
scas
and
jns
call
jae
adc
sbb
and
or
shlb
in
push
and
xchg
outsb
ja
mov
sub
add
jbe
mov
ja
nop
adc
sub
mov
shrb
sbb
push
in
stos
fnstcw
add
mov
push
mov
jbe
jno
pop
and
lea
jne
mov
test
push
in
push
sub
lds
jmp
cmpsl
sub
or
ljmp
xchg
pop
aaa
dec
adc
cmp
sub
std
popf
lahf
in
daa
test
cmpsb
inc
mov
mov
mov
lret
mov
pop
and
xor
cwtl
sbb
adc
clc
mov
mov
lahf
mov
scas
fistps
pop
mov
je
xor
dec
sbb
or
xchg
sub
sub
sbb
cld
mov
cmp
sub
pop
out
fwait
cmc
sbb
call
sbb
and
mov
dec
push
out
movsb
daa
clc
sbb
push
test
sbb
dec
scas
mov
rcrb
lret
inc
ret
push
cld
sub
js
mov
shr
sbb
daa
insl
enter
shll
jp
xchg
jecxz
add
and
testb
scas
stos
sahf
aas
mov
dec
cmp
or
dec
xchg
je
cmp
ja
mov
ljmp
shlb
out
out
pusha
sbb
jge
mov
and
test
aam
cmp
add
bswap
sbb
je
sbb
fstpt
cmpsl
fst
xchg
pop
imul
leave
pop
faddl
xchg
int
and
clc
dec
fnstcw
in
or
imul
fs
sbb
outsb
inc
divb
xchg
dec
fadds
or
ja
cmp
xchg
shl
mov
adc
lods
aaa
and
testl
and
sbb
mov
in
std
push
or
mov
and
or
sbb
cltd
sub
sbb
divl
mov
loop
cmp
cmp
stos
cltd
mov
dec
mov
xor
out
add
jp
add
xchg
cltd
sub
rcll
mov
into
fdivr
test
bound
das
rcrb
push
jns
xor
push
sub
aaa
cmpsl
je
cmc
mov
cltd
sti
mov
lret
loopne
arpl
aad
pusha
inc
cwtl
xchg
push
btr
push
mov
xor
inc
cmpsb
jmp
push
or
les
out
setno
fstpl
jg
cli
adc
mov
dec
cmp
sbb
jae
mov
add
pusha
push
sub
push
stc
push
cli
xor
or
stos
xor
lret
mov
jl
add
je
add
pop
and
pop
xchg
cmp
aaa
ret
dec
int
sub
fistpl
sub
push
pop
jg
fucomp
jno
add
cmpsb
pop
imul
outsl
shll
mov
hlt
mov
pop
sbb
ljmp
mov
push
orl
fidivl
mov
not
mov
and
test
add
mov
mov
sbb
push
out
ja
shll
adcb
out
nop
popa
push
lods
pushf
rclb
in
lea
movsb
in
push
mov
sub
ja
add
pop
inc
pop
jp
out
pop
lahf
jno
mov
jecxz
xlat
mov
arpl
push
xlat
and
sbb
pop
out
xor
inc
fsubr
mov
rolb
jmp
push
xor
popa
idivl
test
aad
lcall
nop
cmp
popa
je
xchg
test
sbb
push
sub
cwtl
sbb
mov
iret
jge
dec
cmp
call
dec
mov
push
mov
lods
filds
in
xchg
push
mov
iret
mov
rorb
add
add
xchg
cmp
ja
scas
sbb
scas
or
idivl
pop
fcoms
pop
push
enter
sbb
push
push
and
bound
arpl
push
insl
xchg
in
push
vpmaxub
test
cltd
or
pop
sbb
pop
add
cmp
adc
leave
xorb
jns
in
enter
adc
mov
ljmp
push
test
lds
add
stc
add
pushf
pop
in
sub
andl
xchg
sub
pop
mov
mov
jle
cmp
add
cmp
jns
hlt
lock
mov
lds
adc
js
aas
dec
stos
sub
mov
dec
leave
notb
xchg
xor
mov
rcrb
jecxz
out
pop
cld
shrb
outsb
aas
sahf
jb
nop
decl
cmpsl
sahf
dec
hlt
rcr
enter
fidivrs
sub
jge
aas
in
stos
cmp
xor
rcrl
jp
add
hlt
mov
bound
or
in
mov
divb
sub
lcall
clc
test
das
push
insl
roll
aaa
mov
call
cs
sbb
jae
ret
int3
add
or
in
pop
test
mov
fbld
ss
jle
aad
xlat
ljmp
mov
pop
add
in
lret
sub
hlt
dec
leave
sub
movl
jg
or
cs
adc
in
lret
adc
dec
cld
std
arpl
push
jb
mov
data16
cmp
das
xchg
push
cmpsb
ja
loope
xor
fsub
lods
out
push
out
jmp
fldcw
popf
push
mov
xor
pusha
xchg
mov
aad
ret
cmp
int3
xchg
or
dec
decb
push
add
add
lcall
aam
stos
out
imul
ja
pop
hlt
addr16
cld
filds
push
xor
dec
xor
xor
lcall
inc
imul
je
lods
ss
aad
push
movb
and
popf
inc
mov
gs
divb
push
sbb
fucomip
out
jne
js
dec
inc
insl
daa
dec
mov
or
cmpsb
loopne
xor
lea
pop
pop
jbe
or
mov
add
std
or
lods
lcall
insb
xchg
cmp
pop
movsl
aad
and
idivb
sbb
fildll
push
cltd
and
xchg
jecxz
xor
add
fucomip
or
in
lea
sbb
xchg
inc
mov
in
in
push
insl
xor
pop
test
jmp
das
cmp
sub
mov
stos
mov
inc
cmpb
jg
cmc
jne
mov
or
jg
adcl
adc
ficompl
rolb
adc
hlt
cmpsb
data16
popl
ljmp
jb
push
xor
fadds
ret
daa
nop
mov
orl
sbb
insl
push
pop
sbb
daa
mov
cvttps2pi
fisubrl
das
shll
in
cltd
or
lds
mov
xor
test
sub
fwait
add
adc
cs
movsb
mov
test
js
rol
cli
push
lea
decl
ljmp
movb
jno
shrl
popf
adc
inc
mov
mov
mov
cmp
mov
iret
mov
call
push
or
orl
mov
lea
mov
call
lds
into
popf
pop
lods
push
cli
fmulp
xor
test
xchg
icebp
mov
jno
cmp
pop
aas
cmp
mov
dec
push
aad
inc
negl
outsl
test
xlat
out
fistpl
xchg
ja
pusha
ror
mov
push
imul
leave
sbb
mov
xchg
in
pop
ja
sbb
push
scas
fwait
dec
loopne
or
mov
mov
bound
addr16
push
pop
and
aas
fidivs
int3
aas
pop
lret
dec
mov
inc
movsb
pop
sahf
xor
jo
push
daa
jnp
popf
and
sbb
stos
add
std
movsl
scas
sub
std
movsb
into
adc
nop
xor
and
cwtl
mov
loope
mov
jns
loopne
jb
lods
jle
pop
adc
fsub
js
jp
in
rcrl
inc
mov
loopne
loop
pop
lahf
ljmp
jl
or
pop
or
inc
ja
fsubs
mov
cwtl
out
push
aad
xor
xchg
cltd
mov
movsl
dec
shl
xor
scas
push
cld
mov
gs
pop
inc
outsb
jo
adc
mov
insb
sar
sub
push
cmpl
adc
in
movb
xchg
daa
pop
adc
adc
int3
and
xchg
pop
cmp
mov
xor
cli
push
pop
lea
aam
addb
jp
cld
sub
movsl
movsb
rclb
sub
mov
mov
lods
hlt
mov
pop
les
and
lahf
es
push
nop
fs
and
or
sub
ret
inc
dec
call
loope,pn
sub
push
scas
ds
out
nop
sbb
cmc
fiaddl
push
cmp
iret
mov
sub
jl
pop
int
les
sbb
ja
jns
test
mov
repnz
shr
xor
sbb
jmp
dec
out
push
divb
aad
js
sbb
xchg
cli
andl
imulb
adc
mov
inc
sub
imull
pop
cli
jp
ret
lahf
rorl
flds
cld
movsl
ds
pushf
push
lahf
push
pop
cmp
shl
mov
aas
pop
mov
fidivrs
push
cld
mov
push
scas
ret
xor
inc
pop
xor
rol
out
fisubl
ss
popa
icebp
push
mov
fwait
pushf
es
dec
add
mov
gs
hlt
outsb
fs
repz
repnz
mov
hlt
loope
push
int3
add
pop
adc
jl
sarb
mov
jg
fwait
xchg
leave
sarb
xchg
jae
rorb
movsl
dec
pushf
int
cmp
fwait
dec
jne
push
cmp
dec
inc
mov
aas
xchg
mov
movsl
mov
scas
xor
cmc
mov
js
mov
push
add
sub
clc
into
xor
inc
mov
add
or
lock
sbb
push
je
push
lea
lea
mov
xchg
cmpsb
and
icebp
cmp
xchg
lret
push
fdivrp
push
push
mov
dec
push
int
cli
outsb
jnp
add
mov
mov
popf
xchg
cmp
push
rolb
into
push
sti
push
push
xor
out
jo
fs
shll
adcl
xor
push
mov
push
rcl
sub
into
rcrl
or
push
mov
lret
mov
js
jbe
int
dec
jmp
stc
pop
xchg
out
ret
loope
addr16
mov
or
inc
push
leave
test
lcall
fisttpl
pop
push
sbb
or
leave
repz
out
pop
push
loopne
addr16
xchg
add
mov
popf
and
inc
adc
inc
fsubl
lcall
jle
rol
lods
sub
repnz
dec
jo
mov
lret
jbe
ret
mov
rorb
cs
test
pusha
stos
cmc
xor
push
dec
mov
fmull
dec
outsb
dec
add
enter
loop
popf
cmc
xor
jae
cmp
and
jns
push
outsl
test
or
fbld
rcll
pop
aaa
mov
jnp
call
subl
leave
js
pop
ficompl
lea
add
lahf
push
inc
out
imul
sub
and
mov
int3
fidivl
mov
cmp
shr
push
icebp
xor
xor
bnd
pop
out
lock
sub
jmp
xchg
and
js
lahf
fdivr
cmp
cmc
test
cmpsb
roll
test
outsl
cmp
sub
jecxz
push
cmp
pop
loope
out
test
or
jg
and
push
jmp
inc
pop
inc
inc
rol
leave
or
icebp
aad
test
push
stos
fnstenv
jg
outsb
or
mov
pop
push
aas
imul
stos
mov
int3
mov
mov
insl
fcomps
ret
test
dec
sbbl
add
subl
orl
inc
rorl
mov
movl
and
daa
repz
scas
out
sbb
dec
sub
aam
cs
and
adc
mov
dec
xor
je
jbe
outsb
cmpsb
mov
andl
jge
insb
jmp
pusha
fldenv
out
dec
data16
subb
pop
jo
sarl
imul
push
push
xlat
andl
add
pop
test
into
pop
cmpsl
nop
dec
push
sbb
and
cmp
xor
jmp
mov
jl
push
xchg
fdivrl
and
jl,pn
nop
ret
mov
adc
sbb
lods
push
add
cmp
jns
and
in
mov
cltd
incl
jle
lock
cwtl
mov
cmp
movsb
lret
push
or
iret
shlb
jp
int3
and
loope
int3
dec
int
sarl
loope
push
mov
xchg
lret
jl
int
sub
jae
sub
pop
xchg
add
jno
icebp
es
xchg
jne
mov
push
pop
adc
mov
cmp
jl
jnp
test
mov
ficoml
mov
or
sbb
mov
and
fcmovb
test
stc
ljmp
je
out
jnp
mov
mov
icebp
jnp
stc
negb
cmc
cmpsl
outsl
fidivs
dec
cli
unpcklps
pop
or
cld
sub
out
jecxz
sub
ds
test
sbb
push
setle
cmp
out
mov
das
jp
adc
add
add
jmp
shlb
fnstcw
out
insl
push
fidivrl
out
stos
jns
xor
rorb
pusha
cmp
aaa
jnp
mov
scas
stos
sbb
sahf
dec
stos
adc
push
adc
lea
fisubrs
jecxz
jp
inc
js
jge
sbb
sub
jp
das
test
pop
ret
cld
in
inc
xchg
mov
je
fildl
jge
add
int
xlat
push
fimuls
mov
xchg
push
xchg
call
push
ljmp
sti
fstl
xchg
lcall
les
out
lret
ja
jmp
rcrl
test
stos
pusha
xor
add
mov
add
jl
cmp
stos
aaa
pop
mov
inc
add
cwtl
jle
loopne
mov
into
sbb
mov
ja
stc
xor
add
loop
pusha
lds
mov
movzbl
cmp
cwtl
call
inc
jb
sbb
sub
xchg
xor
mov
adc
push
lcall
adc
push
or
ret
fs
and
lock
sub
fcmovu
leave
lcall
arpl
mov
call
cwtl
lahf
mov
outsl
mov
sti
push
xlat
jb
inc
fistl
dec
and
in
ret
mov
dec
xchg
icebp
inc
pop
mov
inc
sbb
inc
and
jmp
dec
hlt
das
mov
orl
arpl
popf
cmp
mov
or
cmp
xchg
repnz
int3
xlat
outsb
mov
xor
push
mov
mov
test
or
xchg
aad
mov
dec
jp
movsb
out
xchg
aam
cmp
ljmp
adc
mov
lret
test
in
cs
mov
and
sub
mov
adc
mov
in
mov
jbe
lahf
leave
mov
push
sbb
call
iret
push
xchg
je
sub
loopne
aad
shlb
sub
jbe
int
push
popf
icebp
fldenv
push
idiv
int3
cmp
rclb
dec
popf
mov
cmp
xlat
jne
mov
leave
pop
inc
in
push
mov
pop
cmpb
bound
stc
mov
cli
add
jle
inc
push
mov
sbb
dec
inc
in
mov
stos
or
sbb
or
cmp
lea
push
aas
pop
andb
xor
pop
je
mov
lcall
mov
mov
cmp
jbe,pn
xchg
jnp
lock
xchg
jnp
scas
mov
pop
movsb
xchg
and
mov
xchg
sub
fisttpll
push
ret
sbb
jmp
pop
lret
sbb
stos
xchg
insl
adc
push
inc
pushf
in
repz
je
jo
or
or
xchg
stc
fists
and
je
dec
rol
mov
inc
test
mov
out
pop
mov
sub
sub
imul
adc
cld
xchg
jbe
test
cld
test
imul
imul
into
jg
xchg
std
inc
add
test
loopne
int
arpl
out
mov
rcr
xor
cmp
add
test
pop
mov
movsl
lea
jns
repz
sub
in
jl
mov
dec
inc
cmp
imul
out
jne
or
mov
add
xchg
cmp
pop
imul
pop
xor
les
xor
jbe
cltd
mov
mov
test
inc
push
sbb
shr
mov
adc
push
lods
mov
leave
cs
btr
xchg
fwait
insl
insb
cs
stos
xor
aas
and
jp
mov
cmp
add
or
enter
insl
pop
or
push
nop
lret
in
xor
add
cmp
icebp
sub
dec
pop
jge
pop
push
push
fsubr
mov
pop
add
out
or
out
fldt
lods
jg
and
jae
pop
pop
das
lret
idiv
insb
aam
nop
adc
ds
sti
cmp
push
mov
fidivl
sarl
out
rcrb
outsl
xchg
mov
lret
mov
outsb
lret
mov
repnz
movsb
cmc
mov
stos
dec
dec
shll
or
insb
push
rolb
stos
rcrb
rcr
sub
xor
cmpsb
sarl
enter
inc
out
xchg
add
inc
mov
negb
cltd
mov
xor
mov
shrb
pop
enter
std
and
xchg
jge
popa
dec
xchg
mov
add
testb
sbb
sub
push
fnsave
pop
cmpsl
pop
inc
imul
les
cmp
adc
fldlg2
lds
popa
aaa
dec
das
dec
inc
cs
fstps
pushf
shrl
repnz
out
mov
jle
sbb
pop
push
enter
mov
outsb
repnz
int
push
dec
loopne
dec
dec
dec
lea
fimull
sbb
scas
mov
loop
mov
inc
sbb
neg
push
fld
push
xchg
loop
insb
inc
popf
aam
jne
jno
or
pop
adc
test
mov
fldt
aaa
sbb
lcall
mov
in
jb
subb
stos
orl
dec
inc
mov
loop
je
jp
mov
push
xchg
popf
cmp
mov
popf
repnz
adc
mov
dec
pusha
mov
imul
daa
shl
sub
dec
add
imul
sbb
sbb
and
in
int3
pop
mov
js
ja
mov
adc
adcb
int3
cmp
pop
lahf
cld
jns
sub
adc
mov
addr16
fstpl
std
mov
push
movsb
xor
or
cli
bound
ljmp
outsl
mov
popw
xchg
mov
imul
mov
jl
fsts
adc
sahf
stos
xchg
aas
cmpsb
adc
fs
arpl
xchg
pushf
jnp
aaa
adc
pop
sub
leave
push
mov
scas
ja
loope
and
or
fcomps
test
lds
fnsave
clc
jnp
cmp
mov
dec
rcrb
insl
jg
roll
pop
sbb
sbb
insl
cmp
cli
ret
push
cmpsb
test
mov
cwtl
jl
or
pop
pop
das
faddl
dec
pop
pop
hlt
push
push
mull
xor
popa
cmpsl
fcoms
push
cmp
mov
cltd
xor
dec
mov
add
push
xor
xor
scas
adc
int
push
jb
in
fs
aas
mov
pop
bound
dec
std
rorl
sbb
jns
adc
int
sbb
jb
push
out
cmp
aaa
enter
add
cwtl
in
sahf
test
les
lret
inc
push
sbb
mov
outsl
push
int
adcl
fisttps
in
sub
fs
jo
clc
cmpsb
andl
push
ffreep
iret
ljmp
rcl
dec
add
clc
outsl
movsl
jo
mov
addl
in
lods
popa
jnp
in
add
loopne
xchg
mov
dec
dec
adc
add
gs
idiv
dec
jmp
mov
jnp
jge
pop
pop
pusha
pushf
inc
outsb
pop
in
test
pop
add
xchg
enter
mov
leave
inc
test
xchg
shl
gs
lahf
jp,pn
sbb
xlat
push
pop
cmp
aam
inc
lret
cmp
cwtl
mov
mov
ror
dec
jb
jb
nop
push
or
mov
cli
das
jae
dec
sub
popa
dec
jp
pop
mov
in
out
clc
push
jge
jb
popf
jo
adc
xor
psllw
or
ss
inc
adc
lods
pop
mov
add
inc
add
dec
dec
pop
mov
ljmp
xchg
xchg
repz
cwtl
mov
cmp
jmp
inc
movsl
cmp
add
sub
mov
jae
pop
rcll
adc
popf
jle
je
stos
jns
decb
inc
sub
add
inc
dec
jmp
pop
xchg
enter
mov
lea
shrb
xlat
xlat
mov
push
sarb
inc
sub
mov
call
mov
ja
xor
xor
outsb
sbb
xor
xchg
repz
out
sub
mov
int3
lods
pop
add
ja
out
cmpsl
std
sbb
and
mov
xor
or
fcom
dec
sub
std
fcomps
fs
adc
test
mov
in
pop
mov
pushf
adc
pusha
std
push
aad
sarl
and
push
add
rorl
sub
push
dec
pop
fidivs
sti
dec
ljmp
xor
int
outsb
push
push
sbb
in
jne
loope
sbb
movsb
push
callw
and
pushf
outsb
cmpsl
into
adc
jmp
cmp
jns
les
pop
test
sti
or
mov
imul
xor
bound
fcom
lea
mov
xor
adc
xor
sahf
dec
push
pop
repnz
push
mov
push
pushf
jnp
mov
mov
pop
mov
xchg
fnstenv
outsb
ss
xchg
arpl
inc
out
pop
aaa
dec
mov
dec
lods
pop
das
rcl
push
jns
ds
push
leave
sarl
inc
insl
icebp
shll
xorl
cmp
mov
rcll
std
mov
jbe
inc
ljmp
jns
and
aam
push
or
jnp
je
add
scas
lods
adc
dec
pop
fwait
shlb
flds
cmp
jbe
add
lea
mov
int
rcrb
inc
jo
adcl
imul
test
dec
stos
sbb
xor
shlb
jb
roll
ds
xchg
sbb
or
aam
mov
cmpsb
cmc
jecxz
inc
push
ja
push
enter
fwait
aad
lods
mov
ljmp
lea
or
loopne
repz
cmp
scas
loope,pn
xor
jp
in
jno
call
dec
add
cmpsl
and
lret
ja
push
add
call
lds
mov
incb
sbb
repz
fists
mov
xchg
or
pop
pop
out
sbb
into
into
and
mov
jge
movsl
xlat
adc
sbb
xchg
inc
das
add
and
sbb
jno
test
xchg
fwait
fsub
clc
jno
das
mov
mov
mov
mov
popa
andl
xor
imul
pop
push
jne
mov
fcom
adc
push
lods
push
pop
dec
or
adc
push
mov
cmp
insb
and
push
jns
inc
adc
pop
xchg
inc
sbb
mov
lods
xchg
mov
dec
push
xchg
rcrb
sbb
mov
push
arpl
popa
jge
dec
or
pushl
leave
outsb
mov
test
cld
dec
or
faddp
xor
jne
jb
loop
fcomip
push
push
movsb
fcompl
enter
jecxz
cmp
and
cmp
add
imul
ja
mov
mov
lea
xchg
in
sbb
xchg
add
icebp
or
loope
sbb
pop
ret
cwtl
cmp
cmpsl
pop
dec
in
icebp
cmpsl
cmpsl
es
xor
sub
xchg
dec
es
pop
iret
cmp
mov
loopne
pop
pop
or
lods
cltd
movsb
ret
fidivs
outsl
ret
repnz
sar
decb
out
sbb
mov
pop
inc
mov
push
daa
ja
dec
lods
xor
jb
fs
adc
fs
adc
sbb
into
js
push
ss
mov
xchg
adc
rcrb
xor
pop
add
imul
dec
into
data16
mov
popa
les
pop
cmp
and
mov
imul
pop
pop
push
add
loope
jmp
pop
lods
inc
roll
gs
cltd
mov
mov
or
js
push
push
std
pop
scas
pop
lods
mov
and
and
cmp
ja
adc
sbb
mov
xchg
push
sub
into
outsb
adc
add
jns
inc
jnp
fwait
add
aaa
inc
ret
xchg
mov
aad
push
rcl
fistpll
dec
mov
xor
dec
adc
dec
rolb
dec
xor
push
mov
test
xor
ret
pushf
mov
pop
in
popf
cmp
movsl
pop
add
jge
push
add
xchg
icebp
dec
stc
xchg
roll
push
mov
aas
scas
or
jno
jmp
xchg
add
mov
push
std
mov
cmpsl
into
sbb
sub
or
mov
fsubs
lret
mov
or
sub
shr
mov
cmp
and
subl
sbb
push
mulb
neg
xor
mov
enter
add
lea
lahf
imul
lret
in
loope
jmp
lods
leave
bound
lds
jmp
sub
or
inc
addr16
cmp
inc
inc
xor
sti
xor
cs
jne
mov
je
or
daa
je
jmp
xlat
rcll
ja
cmp
pop
mov
push
sub
insb
pushf
daa
pop
scas
sub
shl
aad
ror
mov
je
add
sbb
sub
mov
sub
and
xchg
daa
and
out
push
xchg
pop
mov
mov
shrb
ljmp
sbb
push
fbld
lea
adc
sub
fidivl
cwtl
out
insb
push
das
inc
add
dec
pop
push
shll
data16
sahf
adc
repnz
pop
fidivl
ror
lcall
add
pop
mov
jecxz
mov
and
arpl
lahf
mov
outsb
jbe
pop
push
mov
dec
mov
daa
imul
cmpb
stc
lret
in
sbb
mov
jno
sti
aam
adc
imul
xchg
out
inc
pop
dec
std
in
sbb
lds
sub
pop
lds
fidivrs
push
jmp
lds
test
xlat
sub
xchg
inc
data16
out
jns
das
mov
dec
andb
mov
push
popa
add
inc
bound
cli
and
cmc
js
fwait
pusha
jmp
push
jmp
mov
stc
adc
sub
ja
ja
dec
add
test
push
pop
fsubrs
outsl
mov
sbb
dec
sahf
mov
xchg
push
dec
xor
fidivs
cmp
int
mov
xchg
pop
iret
xchg
or
lcall
jecxz
dec
push
inc
jb
cmovne
jbe
insl
imul
bound
pop
neg
dec
mov
test
add
dec
insl
mov
fimuls
mov
loope
mov
cltd
out
inc
bound
test
jp
push
jl
stos
js
stos
ss
gs
cmp
push
in
shlb
or
pop
pop
jl
sbb
cmc
sbb
sub
insl
inc
inc
push
sbb
hlt
sub
inc
cli
cmp
scas
fisttpll
pop
in
inc
testb
xchg
mov
adc
inc
cmp
lcall
xor
mov
mov
cmp
lock
dec
aas
lcall
push
loope
mov
fidivl
fcmove
push
push
mov
mov
repz
icebp
into
sub
xchg
or
cmp
sbbb
jno
jns
cmp
add
and
mov
mov
repnz
outsl
cmp
stc
lcall
pop
leave
into
adc
push
adc
test
stos
adc
popf
sbb
imul
mov
je
cmpsb
stos
inc
and
and
pop
adc
aaa
adc
mov
and
lea
test
mov
daa
push
mov
scas
inc
or
mov
mov
fldt
mov
ja
jg
es
popa
xchg
cmc
insb
mov
sub
push
add
push
ss
dec
frstor
shll
inc
jne
fstpl
mov
jmp
testl
scas
mov
outsb
xor
mov
mov
xchg
mov
fsubl
ljmp
rclb
imul
nop
dec
inc
sbb
push
scas
jnp
xlat
mov
inc
cmp
bound
jo
outsb
insb
fsts
dec
bound
fisttpll
and
imul
jle
out
pop
iret
inc
loope
daa
shlb
add
push
outsb
addl
enter
or
push
rcrl
cmp
adc
mov
dec
mov
cmpsl
pop
adc
loopne
hlt
mov
adc
jnp
rorb
cli
leave
std
lahf
je
dec
or
repnz
repnz
add
pop
xchg
loope
testl
jo
das
inc
stos
fidivrl
inc
popa
dec
in
test
icebp
push
popf
shr
and
mov
jno
pop
dec
xor
pop
in
nop
or
adc
sarb
cmpsl
pop
mov
dec
sub
in
jp
das
loop
bound
mov
inc
outsl
sub
dec
mov
xor
mov
mov
test
mov
or
aas
les
xchg
cld
sar
dec
cmp
xor
cli
push
inc
fnstsw
adc
ds
mov
cmp
mov
xor
adc
stc
jg
add
mov
xchg
out
mov
xchg
decl
push
in
lds
popa
je
jb
loope
mov
clc
sub
push
dec
pop
xchg
sub
cld
jecxz
or
sarl
xchg
dec
cmpsb
movb
lods
negl
adc
popf
ret
mov
cmpsl
out
cmp
push
mov
sub
xor
dec
loop
sub
cmp
adc
mov
push
orb
push
or
sub
out
stos
push
repz
or
mov
xchg
imul
xchg
push
and
mov
add
mov
dec
mov
xchg
fwait
hlt
scas
out
fnstenv
mov
data16
adc
out
stos
mov
jmp
cmp
mov
stos
enter
inc
xchg
lahf
ss
mov
fisubrl
into
sbb
pop
cmp
or
idivb
je
les
mov
in
xchg
sbb
fldcw
and
jne
push
repnz
mov
scas
ljmp
inc
xchg
xchg
xor
pop
mov
mov
mov
jecxz
pushf
outsl
inc
js
out
adcb
fcoms
xchg
sub
mov
addr16
xchg
mov
push
jb
inc
xchg
les
xor
xchg
daa
inc
xor
xchg
test
xchg
mov
fs
aas
int
dec
sub
popf
loope
jmp
scas
mov
or
loope
cmc
iret
call
cwtl
push
adc
pop
cld
or
cltd
stos
imul
int3
ficompl
data16
repnz
xchg
cwtl
iret
paddusb
jns
cltd
in
push
mov
dec
sub
jl
shll
add
test
jmp
pop
and
xor
or
mov
push
sbb
lahf
sbbl
outsb
aas
test
sub
dec
mov
popf
cltd
jns
pop
cmp
lcall
adc
sbb
rcrl
cmp
jmp
jp
repz
subb
test
lods
mov
icebp
scas
jo
add
dec
mov
and
mov
in
sbb
nop
push
rclb
and
pop
movsb
inc
add
xchg
jl
xor
pop
cmp
mov
mov
push
fiadds
adc
cmp
adc
push
push
pop
mov
cmp
cmp
out
dec
stos
insl
in
inc
mov
out
add
stc
addr16
sub
movsl
dec
stos
adc
sar
movsb
xor
inc
inc
or
sarl
imul
pop
push
mov
cmp
push
jecxz
xlat
movsb
and
inc
lret
cmpl
pop
dec
nop
jae
pop
jns,pn
popa
es
dec
call
xchg
fwait
mov
cmp
lds
push
jnp
stos
adc
call
in
mov
cmp
cli
xchg
iret
in
add
pop
jae
mov
jle
adc
push
xor
fs
fucomi
sbb
sbb
or
std
outsb
jg
push
fdivrs
sbb
mov
aas
lea
hlt
cli
int
lea
mov
xor
mov
in
push
inc
jnp
or
sub
mov
xchg
outsb
ljmp
sbb
add
jecxz
inc
insb
xor
xchg
mov
pop
mov
sub
adc
icebp
or
sub
mov
xchg
int
js
and
add
ret
xchg
int3
bound
xchg
sti
movl
push
add
xchg
inc
push
jno
jae
mov
xlat
pop
push
clc
jge
enter
dec
cmpsl
cmp
mov
mov
es
dec
andl
cmp
add
mov
dec
jl
lds
cltd
loopne
adc
js
jo
fimull
xor
in
adc
mov
jo
push
xchg
shl
or
popa
sahf
notl
imul
aaa
pop
in
push
cmc
fdivrs
lret
arpl
jno
add
push
push
cmpsb
push
xchg
fsubrp
out
out
pop
or
sub
scas
pop
sub
pop
jo
aad
lahf
scas
decb
mov
es
rcll
ret
imul
std
popa
push
sub
arpl
loop
push
xchg
mov
pop
or
out
cmp
lahf
push
insl
xchg
and
adc
cmpsb
popa
mov
lcall
fsubs
shlb
lods
out
mov
fs
mov
fcomi
push
je
add
xchg
enter
int
stc
xor
dec
pop
adc
mov
rcll
in
lods
mov
filds
adc
cltd
int3
mov
add
sub
std
loopne
inc
push
sysret
das
imul
pop
pop
and
jl
in
in
push
sbb
test
rcll
ljmp
lds
and
push
add
mov
rorb
leave
push
xchg
insl
pushf
adc
xlat
jae
mov
addr16
lea
hlt
mov
pushf
mov
jp
in
std
push
ret
scas
inc
add
and
and
in
fstps
test
xor
pop
jb
out
fldt
orb
xor
popf
pusha
mov
jne
lret
or
cmp
fnstcw
push
or
jl
rolb
pop
add
dec
out
loopne
pop
shrb
int3
adc
mov
out
movl
out
jle
inc
cmp
jne
imul
mov
pop
mov
popf
mov
mov
sub
lods
jno
xchg
mov
outsl
or
iret
pop
andb
cmp
sbb
movups
xchg
and
adc
lock
ret
mov
outsb
inc
scas
xor
pop
lret
and
cwtl
pop
add
test
lret
sub
cld
sti
jl
pop
xchg
hlt
pop
and
into
mov
rcrl
cmp
and
mov
imul
test
pop
mov
or
xor
fiadds
jae
test
push
push
iret
jns
ljmp
inc
lods
inc
fldl
movsb
sbb
mov
cmp
lahf
andb
test
inc
xchg
subb
in
into
loop
movsb
rep
push
add
push
mov
mov
icebp
dec
adcl
sbb
pop
outsl
xorl
int3
dec
pop
pop
sub
dec
std
push
dec
and
add
fs
fs
dec
fstps
xchg
jo
push
bswap
push
lods
lret
pop
in
or
fwait
pop
cwtl
xor
fs
bound
rcr
out
out
inc
xchg
sub
test
xchg
cmpsb
sbb
xchg
outsb
cmp
xor
sub
xchg
in
dec
mov
icebp
add
inc
movsb
sbb
lods
sti
insb
in
aam
fldenv
leave
mov
mov
ja
test
shlb
inc
aam
mov
sub
jle
lahf
stos
in
sbb
bound
loope
cmp
das
add
data16
push
add
inc
int3
loop
or
sbb
push
sbb
pop
cmpsb
jne
rcll
dec
das
loope,pt
imul
xchg
add
ljmp
ret
and
mov
adc
scas
cmp
pop
mov
int
std
inc
jb
lea
ja
cmpsb
xchg
adc
jno
movb
push
fs
movsl
movsb
jns
dec
cmp
pop
push
adc
ss
and
repz
mov
xor
loop
pop
popf
or
shll
ljmp
test
lcall
or
lds
mov
fwait
inc
xchg
test
pushf
fidivl
rcrl
shrb
inc
sub
sub
pop
fwait
dec
xlat
add
mov
adc
dec
adc
into
jnp
pop
fiaddl
lret
xor
shrl
jmp
popa
das
lea
gs
cltd
xchg
add
xchg
jmp
add
arpl
dec
mov
fsubs
mov
and
xlat
mov
dec
cmc
adc
dec
mov
xchg
dec
add
jnp
sbbl
pop
imul
scas
pop
jle
out
aas
jg
or
add
fiadds
mov
xor
mov
ffreep
jle
jg
add
ror
addr16
xor
out
xchg
or
out
imul
pop
in
sub
xchg
add
pop
push
mov
fmul
stos
addb
and
enter
cmpsl
std
out
mov
pop
jecxz
loope
ljmp
mov
scas
and
cli
mov
ret
xchg
sub
adc
inc
scas
xor
jo
fisubrs
jnp
outsl
int3
mov
fldl
push
jge
jnp
push
lods
xlat
ss
in
jno
addr16
mov
psraw
mov
fists
dec
movsl
xchg
pop
cmp
adcb
iret
inc
in
cwtl
mov
xchg
pop
insl
movsl
subb
imul
je
movsl
cmp
ja
stos
sahf
mov
dec
push
jge
or
mov
int
jp
popa
mov
mov
decb
in
mov
xchg
lock
in
and
cmpsl
inc
cmp
inc
std
mov
cs
adc
sbb
mov
sbb
sbb
in
add
imul
sbb
icebp
sti
cmp
xor
lret
fisttpll
repnz
adc
insl
fsts
or
jne
inc
mov
or
xor
dec
jmp
fimull
fwait
mov
fcomps
add
fbld
add
dec
mov
outsl
test
in
subb
testl
mov
rcll
or
hlt
pusha
data16
or
test
dec
aam
test
mov
xchg
mov
in
rorb
loop
push
addl
loop
cmp
scas
pusha
mov
or
dec
push
jl
je
adc
cli
xor
push
mov
jnp
pop
push
repnz
mov
lret
jp
cmp
sbbb
xlat
pop
sbb
test
and
pop
scas
stc
aas
cmp
int
jns
aaa
pop
stos
or
and
repz
push
and
xlat
push
cs
lds
fistpl
xor
mov
dec
fsub
dec
inc
adc
push
fcomps
sbb
hlt
shr
imul
sarl
mov
and
add
inc
adc
shrb
dec
xchg
icebp
cld
pop
xchg
popf
jl
and
fsubs
and
pop
in
cltd
pop
xchg
dec
fsubs
insb
scas
outsb
test
or
ljmp
mov
lcall
mov
cmp
sub
and
adc
cli
pop
cmp
and
enter
or
add
xchg
loop
fdivrl
repnz
jns
pusha
mov
sub
and
repz
jl
push
jle,pt
push
ljmp
xor
mov
sar
mov
hlt
fdivl
lds
arpl
cli
mov
adcb
test
in
lret
out
inc
push
stos
mov
jge
out
mov
xor
inc
fdivs
jae
lcall
cs
mov
xlat
or
lret
in
cmp
jp
pop
rcrb
jp
xlat
push
into
inc
pop
dec
ror
jp
int3
push
and
jge
adc
pop
lahf
cmc
or
xchg
fwait
fs
pop
xlat
lea
push
in
je
popf
xchg
gs
push
pop
clc
fs
push
cmpsl
out
cmp
mov
mov
ja
fsubr
dec
sub
and
and
cmp
dec
push
femms
les
call
jmp
stc
add
adc
jbe
xlat
pop
jne
push
iret
dec
xchg
push
mov
jo
xlat
xor
xchg
cmp
cmp
sub
sub
aas
lods
and
aad
jne
jge
insb
push
ret
and
jne
xchg
lds
add
sub
fmull
pop
xor
mov
les
movsl
scas
sub
frstor
xchg
jnp
add
pop
mov
or
outsl
push
xchg
and
xor
mov
test
movsb
jp
das
testb
mov
out
jb
pop
ss
scas
mov
insb
rcll
xor
cmp
and
arpl
and
in
jle
mov
in
ja
add
pop
jecxz
ja
xchg
jge
cwtl
mov
or
or
rcll
mov
jmp
dec
mov
dec
enter
arpl
fnstsw
cltd
arpl
imul
in
sub
mov
dec
mov
lds
repz
rorb
sbb
mov
hlt
imul
pop
hlt
jle
mov
loopne
add
add
mov
push
pop
cmpsb
jl
add
cwtl
shlb
fidivl
stos
ljmp
mov
mov
xchg
or
in
push
mov
adc
xor
add
dec
xor
pusha
mov
sub
ret
lret
mov
repz
cli
adc
xor
xor
xchg
rcrl
addr16
pop
hlt
mov
jnp
inc
ds
ret
lcall
mov
mov
stos
int
xchg
xor
test
mov
aad
in
test
mov
push
fnstsw
fists
sub
or
add
dec
cmp
inc
mov
std
pop
lods
and
mov
test
leave
imul
je
mov
lret
out
ret
cmp
in
pop
dec
push
adc
jbe
sbb
or
mov
mov
jecxz
xchg
fwait
pop
xor
sbb
jge
mov
inc
jo
adc
leave
lahf
cmc
data16
sub
popa
push
dec
pushf
jnp
aam
and
loop
dec
or
inc
lods
js
mov
ret
icebp
xchg
or
test
cmp
inc
dec
test
jecxz
xor
outsl
jae
sub
bound
aas
jecxz
fs
mov
cmpsl
sahf
das
test
and
pusha
xor
divl
inc
imul
test
test
cmp
cmpsb
lock
mov
adc
mov
fcom
scas
loope
jle
xor
sbb
cli
sub
jmp
pop
ja
adc
ds
fsubrs
adc
cmp
xor
cmp
sbb
enter
js
mov
js
roll
daa
push
or
sbb
push
jae
ret
fcmovu
lods
je
inc
fbld
std
rolb
xor
adc
and
xchg
clc
cmp
or
test
jmp
pop
scas
jne
lret
bound
cmp
add
pop
add
and
cwtl
jae
push
pop
mov
mov
cmp
pop
jne
out
add
movb
sbb
dec
and
in
ja
lock
inc
add
jmp
dec
adc
out
inc
xchg
mov
push
and
sub
mov
mov
cs
cmpsl
gs
xor
lea
leave
aas
push
dec
sbb
aad
jp
mov
out
or
adc
insb
sbb
movsl
fisttpl
mov
xchg
xchg
insl
xchg
idiv
adc
imul
xor
mov
int
mov
addr16
in
aaa
and
dec
dec
orl
negb
leave
incb
clc
leave
scas
cmpsl
or
or
sub
pop
outsl
add
pusha
pushf
out
in
cmp
add
pop
xchg
sbb
mov
jle
adc
mov
or
jg
sub
jne
dec
add
mov
dec
mov
sub
adc
or
and
jg
fs
das
cmp
lods
mov
lods
jo
cwtl
insl
mov
testb
add
fistps
int3
pushf
cld
pushl
mov
jge
mov
fsts
inc
stc
nop
pop
jg
mov
sub
ss
es
data16
mov
fisttpl
aad
sub
push
inc
xchg
cmp
xchg
adc
sahf
rclb
xor
outsl
xor
jnp
or
jp
enter
xor
xchg
int
insl
adc
jg
mov
mov
add
test
lods
test
add
push
mov
xchg
xor
sub
icebp
gs
divb
rol
mov
xchg
or
fldcw
push
cmpsl
ss
mov
add
sbb
sub
in
rorb
ret
ffree
jno
pop
stos
scas
push
push
push
or
sbb
inc
data16
push
fwait
ja
xor
mov
in
jge
rolb
lods
repz
aad
mov
movsb
jb
lods
int
or
dec
roll
pop
jmp
mov
test
jmp
or
mov
outsl
orl
push
fldl2t
sbb
jl
repz
lret
mov
adcl
add
cmp
fimull
inc
sbb
std
or
jnp
nop
imul
imul
mov
hlt
pop
jmp
lret
out
cmp
or
sarb
negl
mov
fisttps
decb
mov
std
jecxz
rcll
sub
adc
mov
push
cs
add
dec
inc
pop
enter
fdivrl
sbbb
loop
movsl
in
cmp
insb
jbe
push
jmp
mov
cmp
pop
push
movsl
bound
arpl
inc
pop
pop
scas
jle
sbb
pop
adc
jge
scas
rol
jp
notb
or
cmp
cmp
mov
sahf
or
push
mov
jb
out
dec
mov
in
cltd
jge
xchg
rcrb
jnp
pop
add
loop
xor
in
push
andl
inc
dec
jge
xchg
into
cs
ret
jl
xorb
cmp
push
out
shl
jg
push
out
jo
rolb
and
out
lods
inc
andl
testb
addr16
fstpt
cmp
clc
adc
push
sahf
mov
jmp
mov
inc
or
ret
mov
aam
test
negb
mov
xchg
popf
jg
mov
add
cld
std
mov
movsl
call
sub
jmp
sub
lret
mov
dec
movsb
push
mov
pop
add
xchg
ss
inc
sbb
mov
push
ret
and
xchg
xlat
sbb
xchg
sub
add
or
nop
out
sub
xchg
lret
sti
in
pop
dec
lea
call
push
cmp
adc
push
xorl
je
push
cmp
cmp
xchg
cmp
xor
cmp
iret
lock
add
sub
jmp
xlat
in
jge
pop
into
dec
test
repnz
and
lret
stos
jae
push
cwtl
mov
sbb
mov
arpl
sub
popa
test
pop
int
ja
adc
mov
sti
ljmp
aam
lock
xor
push
or
ret
xchg
fists
fmulp
rol
std
jecxz
pushf
addr16
ds
cmc
stc
mov
push
outsl
mov
xchg
into
sbbb
cli
pop
or
rorl
stc
add
outsl
dec
mov
lea
ret
outsb
mov
gs
pop
iret
push
or
fbld
mov
dec
mov
imul
es
add
ficomps
test
push
fs
dec
ret
adc
and
inc
popf
jb
lret
lret
pop
test
mov
lret
fnstcw
jne
mov
lret
fidivs
add
iret
mul
adc
mov
std
repz
xor
dec
lods
movsb
or
jge
xor
test
in
imul
pop
mov
mov
out
and
lods
jno
add
cmp
js
mov
movsb
mov
and
and
add
fcom
cmp
sbb
mov
rcll
ss
call
push
fidivs
cld
fisttpll
int
mov
pop
sub
scas
jg
sub
mov
outsl
dec
cmp
or
in
jle
in
push
adc
cmp
test
pushf
xorb
ret
push
jae
mov
js
pop
aad
mov
repz
notl
in
dec
sti
push
es
imul
cld
adc
or
dec
fidivrl
and
push
sbb
es
or
and
cli
xchg
aas
jge
mulb
das
lods
pop
mov
pop
add
lret
cld
jle
adc
xchg
bound
mov
test
jl
inc
xchg
and
or
mov
jp
or
sub
pop
push
mov
cltd
and
mov
into
mov
push
adc
lea
rol
lods
mov
cmp
cmc
jge
aam
xor
push
adc
xor
pop
adcb
push
push
adc
sbb
cmpsb
lret
inc
adc
pop
ss
jnp
xlat
sbbb
push
sub
data16
jp
xchg
jb
pop
movsb
rorb
negl
add
in
xlat
jnp
lret
push
inc
sbb
adc
xchg
push
inc
mov
std
jge
jmp
es
xchg
and
pop
mov
inc
sbb
lret
xchg
movsb
test
pushf
fistpl
sub
pop
and
and
ss
sbb
inc
mov
mov
dec
loope
movsb
scas
mov
mov
scas
aam
pop
mov
out
inc
jns
sub
fisttpl
jmp
mov
fbld
xchg
aaa
notl
imul
fisubs
mov
subb
mov
mov
std
ja
pop
mov
push
ljmp
jbe
fisttps
aaa
jbe
dec
mov
dec
lahf
pop
jne
and
xorb
mov
jb
repnz
in
sub
jle
inc
fistpl
hlt
popf
lods
and
subl
jb,pn
fcompl
inc
adc
js
xchg
mov
jo
cwtl
neg
fwait
mov
pop
lds
sbb
int3
mov
outsl
inc
imull
fs
add
push
push
add
dec
mov
inc
inc
inc
outsb
stos
jae
clc
dec
pop
mov
mov
mov
mov
arpl
sub
roll
fmul
dec
push
pop
or
xchg
push
and
push
gs
ja
sti
cmp
cmp
jne
fsubrl
rep
mov
jmp
addr16
mov
ss
mov
add
lret
mov
push
mov
dec
push
decl
adc
adc
add
dec
inc
shlb
icebp
mov
cmpsl
mov
push
cmpsl
orb
push
ret
xlat
jge
shlb
fcomps
pop
adcb
dec
xchg
mov
in
sub
cmp
clc
pop
enter
addr16
insb
inc
jp
sbb
call
imul
mov
adc
decb
push
xchg
add
loop
outsl
inc
xchg
jae
inc
outsl
subl
inc
adc
xchg
push
or
push
addr16
mov
adc
out
int
cmp
inc
pop
xor
out
pop
sbb
rcrb
inc
or
repz
jecxz
loopne
sbb
pop
add
data16
dec
add
xor
cmp
cmpl
in
iret
cmp
pop
js
lea
sti
fisttpl
ret
fs
stos
lock
push
addb
cmp
mov
inc
fstl
add
inc
hlt
xlat
and
out
push
pop
xlat
xor
fsubs
jge
cmp
mov
and
and
xchg
outsb
stos
movsb
pop
in
push
mov
dec
add
add
adc
insl
add
aaa
mov
mov
dec
xchg
push
outsb
dec
aad
lods
and
jmp
add
mov
loopne
insl
ds
in
cmc
cwtl
stos
fdiv
and
ret
jns
adc
movsl
movsl
pop
push
cmp
loope
loopne
jnp
test
push
push
pop
dec
popa
sub
outsb
jp
es
add
mov
negl
add
icebp
movsl
rcl
jmp
inc
jmp
stos
pop
dec
or
mov
and
ljmp
jae
sub
fcmovnbe
mov
cmpsb
cmp
mov
addb
sti
pop
insl
push
sub
mov
mov
pop
adc
xchg
or
push
mov
mov
cmp
and
xchg
adc
sbb
nop
or
sbb
and
popf
std
aaa
mov
aam
and
jno
int
imul
unpckhps
or
pop
popa
adcb
sbb
test
clc
insb
mull
push
dec
mov
inc
add
sub
or
cmp
bnd
leave
jnp
int
int
dec
lea
pop
pop
pop
jp
xchg
jb
lds
repz
jl
dec
fldenv
lret
iret
nop
inc
cli
xor
lea
gs
sub
pop
lret
cmp
mov
dec
inc
jle
fwait
leave
push
js
add
stos
xor
aam
pop
push
rorb
lret
push
pop
adc
inc
cmpsb
cltd
jmp
inc
inc
push
add
adc
mov
sarb
in
mov
ret
lret
les
xchg
adc
test
shll
frstor
xchg
push
dec
cli
pop
push
and
lods
push
sbbl
mov
mov
and
repnz
inc
adcb
pop
xchg
imul
pop
ret
inc
dec
pusha
pusha
or
data16
call
mov
pushf
insb
dec
mov
aas
push
jo
mulb
cmp
lret
mov
imul
mov
sub
push
jg
add
or
inc
push
icebp
xor
jg
in
je
lds
sbb
aam
inc
ficomps
adc
aam
inc
mov
mov
arpl
cli
xchg
add
jp
sub
outsb
mov
roll
fdivs
or
lahf
sti
mov
mov
mov
out
bound
scas
cmp
cmp
xor
xor
pop
pop
cmpsl
pop
sub
shll
cmp
aam
sbb
fnsave
sbb
movsb
movsl
aaa
into
fsubrs
xor
xchg
push
mov
gs
lea
jbe
jo
xor
add
divl
push
sub
xchg
test
lock
out
imul
jge
aad
fwait
jns
sub
cmp
movsb
sub
ret
inc
adc
movsl
daa
js
cmc
enter
daa
mov
sub
hlt
popf
lds
mov
mov
hlt
adc
gs
jp
sbb
dec
enter
pop
mov
xchg
stos
loope
pop
sahf
outsl
mov
mov
ljmp
stos
sub
clc
lods
cltd
aam
loope,pt
push
cmp
jecxz
xchg
loope
sti
mov
push
pop
orl
mov
mov
xchg
mov
cmp
je
pop
inc
dec
lret
outsb
push
rcl
jne
push
mull
sub
mov
xchg
jae
mov
and
add
popf
mov
pop
es
dec
data16
out
push
gs
cmpsl
mov
push
pop
cmpsb
cmpsb
mov
sub
xor
dec
scas
mov
and
cwtl
ljmp
mov
cmp
xor
jle
mov
sarb
mov
dec
inc
push
sbb
push
jae
dec
mov
mov
popa
xchg
or
and
dec
mov
jecxz
lods
int3
movsb
mov
pop
aam
decb
xor
enter
push
repnz
out
pushf
pushf
adc
push
add
pop
cmpsl
jnp
sahf
sbb
lcall
int
lds
iret
rcr
adc
fildll
stos
fildll
push
xor
xor
orl
test
scas
add
push
je
iret
or
out
idivl
shl
loopne
pop
daa
pop
push
mov
pop
inc
mov
jg
adc
jb
fildll
adc
cs
ds
fsubrl
lods
nop
out
jle
orb
popa
mov
push
call
pop
lods
jge
rcrl
into
fcomps
dec
dec
xchg
jle
push
cmp
mov
incb
popa
pop
jge
ja
fcompl
aad
xchg
sbbl
jp
cwtl
lahf
add
loop
xor
repz
pop
or
pushf
outsb
lods
push
lret
mov
sub
jns
cmp
add
inc
sarb
pop
stos
lods
cmp
push
cs
xchg
nop
and
inc
mov
jge
adc
pop
addr16
movl
xor
nop
int3
jb
add
jecxz
mov
jbe
jnp
jg
add
mov
lea
and
repz
mov
icebp
repnz
inc
pusha
jnp
shl
fst
les
adc
cmp
hlt
push
cmc
addr16
repnz
iret
das
movb
push
fcoml
inc
ja
loope
adc
nop
loop
pop
dec
mull
mov
fstpl
dec
aaa
mov
xchg
cmpb
int3
jb
mov
cmpsb
aas
xchg
mov
mov
jb
xor
repz
std
jb
ja
sbb
xor
sub
push
xlat
pop
xor
push
hlt
pop
jbe
or
orl
inc
ss
dec
sarl
jge
sub
fcmovnb
insl
fistpll
dec
jnp
mov
add
or
pop
test
jg
adc
push
jo
fidivl
mov
adc
loope
fistps
cmp
inc
mov
lods
mov
and
ljmp
xchg
jl
fwait
xchg
nop
es
outsl
mov
pop
dec
push
cmp
adc
out
jg
push
test
ja
dec
inc
cvtdq2ps
int3
xchg
and
aas
add
xchg
push
adc
lret
xor
lahf
ljmp
add
out
popf
cli
pushl
clc
stos
inc
dec
xor
lcall
and
inc
sbb
sub
xor
pop
mov
stos
lret
sub
stos
test
or
ja
inc
push
cs
in
sub
insb
imul
inc
jnp
dec
and
lods
or
mov
ljmp
xchg
bound
mov
pop
mov
pop
stos
xor
ret
inc
fadd
mov
or
pop
hlt
adc
xor
and
jnp
mov
sbb
jg
and
in
cmp
xor
popa
xlat
push
inc
fisubrl
push
mov
mov
out
popa
rclb
pop
sub
mov
sub
adc
subb
int3
pop
pusha
popa
xlat
pushl
fmull
jl
xor
or
test
or
ds
loopne
pop
fucomi
inc
fs
shll
add
lea
cld
aaa
xor
icebp
sub
scas
imul
cmc
fldcw
popa
sbb
jecxz
mov
push
test
fistpl
xchg
sbb
jb
push
fstpt
dec
andb
cmp
sahf
add
repnz
adc
jg
or
jb
sub
and
leave
mov
hlt
shll
jnp
loope
inc
inc
fucomip
icebp
mov
pusha
jne
pop
jnp
dec
add
out
in
loopne
cwtl
pop
aas
push
jmp
imul
call
lods
xchg
fnstsw
cltd
push
push
mov
inc
cmpsw
ss
test
push
fsub
add
leave
lods
cmp
mov
xlat
es
ss
movaps
fcoms
xor
repnz
jne
and
out
push
add
out
dec
jge
cmpsb
add
ret
jg
outsl
out
cmp
scas
sahf
sahf
gs
lret
inc
xor
shll
hlt
sub
fidivl
fistps
or
pop
inc
fcompl
fstpt
out
push
enter
fsts
inc
jmp
ja
add
cmp
sub
fcompl
cltd
mov
xchg
dec
xchg
xchg
cltd
aam
jnp
pop
in
test
fsubl
cmc
andb
lcall
adc
jno
xor
sbb
aam
aam
add
cmp
inc
dec
out
push
dec
sbb
inc
dec
orb
rol
test
push
dec
nop
test
xor
andl
ds
into
add
push
sahf
outsb
mov
xchg
sahf
aas
std
sahf
roll
aaa
addr16
push
lds
xor
movsb
xchg
ja
je
shlb
mov
fstl
cld
sbb
and
adc
scas
sub
popa
cwtl
mov
lds
xor
repz
xchg
adc
mov
push
mov
aam
push
imulb
cmpb
arpl
inc
mov
dec
sbb
rol
iret
sbb
xchg
jle
out
adc
pop
not
loopne
jns
jbe
mov
gs
sbb
or
psubsb
or
or
sbb
fiaddl
jae
and
inc
clc
repnz
mov
stos
sahf
mov
pop
sbb
push
imul
xor
sub
dec
jge
dec
push
addr16
pop
xchg
mov
adc
pusha
jecxz
mov
loopne
cmp
pop
xchg
or
sahf
scas
mov
xorb
mov
adc
dec
sahf
lds
dec
push
mov
add
sub
rol
imul
mov
adc
add
clc
fistps
pop
out
pop
shrl
add
jno
inc
xchg
nop
or
enter
xchg
pop
je
loop
fidivrs
mov
test
lods
mov
inc
push
jmp
push
mov
rorb
xor
push
int3
cmp
scas
rcrl
inc
or
cmp
sti
mov
dec
rorb
mov
movsl
xchg
nop
outsl
aam
sbb
out
pusha
pop
and
or
sbb
pop
lea
dec
cmp
pop
mov
add
jae
jge
jg
push
test
jl
jns
jne
leave
std
mov
ljmp
popa
aam
jge
mov
sarb
sahf
outsl
push
fcompl
sub
shr
in
mov
sub
adc
push
pusha
insb
add
ss
fisttps
or
pop
push
sti
mov
bound
popl
cmp
shl
ret
mov
xchg
int3
xor
sbb
mov
enter
pop
popa
mov
mov
dec
adc
mov
jg
push
pop
cmp
inc
cmp
xor
lret
xor
insl
dec
das
dec
push
sbb
sbbb
ljmp
mov
roll
cmc
call
pop
ljmp
loope
add
inc
xor
cli
mulb
or
mov
add
mov
sub
xchg
mov
mov
mov
sbb
cwtl
push
test
out
mov
mov
sbb
sub
xor
adc
popa
inc
jecxz
xor
pop
xor
and
cmp
inc
ljmp
cmpsb
sbb
out
add
insb
popa
loope
xchg
pusha
div
push
pop
lds
jmp
mov
leave
in
add
xchg
push
pop
aaa
jae
scas
push
dec
nop
daa
gs
out
clc
movsb
jno
cmp
and
pop
dec
add
sub
or
fidivs
aas
fs
clc
lods
inc
or
lds
jae
arpl
inc
xchg
inc
das
mov
hlt
mov
push
ret
enter
mov
lcall
cmpsb
adc
lods
xor
stos
icebp
inc
out
add
inc
out
insb
xor
pop
inc
inc
mov
iret
lahf
fiaddl
xor
dec
lret
gs
push
push
icebp
xor
pop
add
out
rol
pop
cmpsl
movsl
ds
pop
mov
adc
mov
sub
loop
cmpsl
outsl
aas
das
testb
testl
test
pop
adc
imul
adc
pop
testb
gs
fcomp
pop
mov
xchg
popa
fdivrs
add
mov
arpl
pop
mov
cli
je
mov
mov
stos
js
dec
lods
stos
lcall
pop
orb
addr16
fmull
cmp
mov
repz
dec
inc
mov
dec
push
adc
lret
push
fdivs
xchg
je
stos
push
mov
jp
imul
lea
icebp
jmp
hlt
sbb
inc
loop
es
mov
mov
and
int3
mov
jge
push
pop
or
daa
popf
in
je
adc
push
fs
dec
pop
sub
aas
sbb
repz
into
andl
scas
cld
adc
cmp
xor
ret
inc
mov
inc
inc
hlt
pop
xor
arpl
pop
jmp
sub
add
dec
jle
xchg
push
push
cmp
dec
in
jb
fldl
or
pushl
dec
ret
mov
sahf
hlt
aas
fstl
push
int
imul
ss
cmpsb
sub
mov
outsl
xchg
and
mov
sti
jnp
popf
push
xchg
xchg
enter
cmpsl
mov
adc
adc
sub
lret
in
nop
push
nop
test
inc
divl
xlat
enter
mov
jo
mov
xor
pushf
scas
dec
pop
or
jne
inc
clc
jo
rcll
outsl
dec
add
mov
dec
movsb
or
das
sbb
pop
cmpl
xor
aam
cwtl
xor
add
fs
stos
lea
in
dec
repz
adc
xchg
push
xchg
fwait
inc
ljmp
stc
push
add
out
jg
ljmp
repnz
xchg
xor
push
in
pop
mov
cmpl
cs
insb
lods
cmp
cs
ss
cmp
mov
fwait
lret
fisttpl
sbb
imul
sbb
in
and
les
sbb
jo
inc
fisttps
jecxz
ror
inc
enter
inc
xor
xor
cmp
ja
pop
or
push
jns
das
adc
add
in
sub
movsl
les
inc
inc
mov
pop
sbb
add
out
loope
xor
and
sub
repz
movsl
cmp
pop
out
jnp
sti
inc
pop
jecxz
mov
push
lock
jo
leave
fwait
daa
sbb
pop
push
mov
sub
sar
les
sbb
pop
daa
sahf
fsts
in
pusha
and
jns
jns
fstpt
or
jge
ret
push
aam
rorb
lahf
dec
pushf
aas
aam
lcall
push
sahf
imul
mov
push
aas
mov
xchg
jno
aaa
xor
insl
sub
lret
inc
lcall
adc
adc
mov
fcoms
imul
std
mov
movsb
xor
add
rolb
mov
jns
xchg
and
cmp
push
push
push
into
pop
mov
xlat
or
add
ret
les
in
cmpsb
push
int
sarl
xchg
sbb
outsl
ljmp
mov
adc
fsubrl
mov
jne
call
inc
sbb
lods
jnp
out
mov
movsb
sub
xor
jg
push
popa
ret
pushf
pop
rep
push
adc
repz
out
fstl
jb
test
ret
mov
add
stos
outsb
ss
jns
leave
into
lret
outsl
bound
xchg
shlb
rcrb
xor
ror
scas
pop
jmp
push
sbbb
mov
les
mov
hlt
pop
mov
push
imul
add
pop
dec
sub
xor
sahf
leave
daa
xchg
push
out
cmp
jmp
roll
dec
dec
in
push
int3
cmc
or
sti
and
rorb
mov
lock
pushf
xor
les
mov
add
fisubs
mov
rorl
or
pop
add
out
xchg
decb
in
jb
mov
lock
call
add
xchg
mov
jb
mov
or
pushl
and
add
mul
adc
mov
leave
das
cmp
pop
mov
jg
int
jo
pop
in
sbb
ljmp
sub
cld
push
cmp
jmp
jle
insl
mov
out
cli
data16
outsl
xor
push
mov
add
ljmp
pop
jae
lea
cld
addb
loopne
shrb
test
lret
mov
mov
cld
add
int3
rcrl
loopne
jp
jne
mov
xor
cwtl
push
aad
ret
add
mov
gs
push
xchg
fmul
fnsave
incl
dec
lret
cmp
push
xchg
lods
push
enter
pop
aam
insl
shll
lret
sbb
bound
sbb
pop
inc
mov
addb
dec
repnz
lret
in
and
lret
adcb
sub
adc
das
mov
dec
movsb
insl
pop
icebp
movups
movsb
pop
sbb
fucomp
mov
jge
stos
adc
je
mov
invd
sub
andl
sub
lret
inc
sbb
pop
lods
loope
cmp
pop
lret
fidivl
mov
and
out
mov
add
or
and
mov
fwait
and
pop
fsubl
mov
inc
stos
xchg
mov
cmp
rcr
or
xchg
bound
add
repz
and
add
inc
adc
pop
dec
out
ret
xchg
mov
or
stos
orb
subl
jp
dec
mov
imull
and
cmpb
add
inc
dec
insl
mov
push
or
fucomi
adc
pop
mov
xchg
xor
outsl
shrl
loop
ds
ret
stos
inc
inc
push
push
or
adc
push
movsb
out
cmp
aam
pop
shrl
fwait
cltd
dec
fstl
sbb
test
je
dec
push
fs
sub
mov
sbb
ret
xchg
cltd
push
outsl
stc
into
iret
mov
in
out
ret
pop
add
call
cmp
mov
add
push
outsb
in
jae
das
sbb
xchg
into
test
mov
jg
cli
out
movsb
jmp
jl
pop
rorl
dec
mov
pop
push
add
fdivr
mov
int
test
int3
pop
imul
cmp
cld
test
inc
and
jp
xor
xlat
loop
pop
and
inc
imull
cmp
adc
mov
aas
out
es
cmp
push
sbb
out
inc
mov
pusha
subb
mov
icebp
sarb
sub
pop
xchg
inc
dec
in
fdivrl
lea
shlb
mov
mov
mov
push
xor
mov
rclb
inc
mov
dec
out
cld
cmp
inc
aaa
arpl
mov
mov
xchg
dec
imul
pop
xor
shlb
xor
add
pop
adc
aaa
fimuls
aaa
push
adc
dec
lock
or
push
mov
mov
cmpsl
repz
cmpsl
adc
mov
cs
fdivrl
into
loopne
sbbl
shr
push
push
jecxz
xchg
pop
notl
inc
lcall
cmpl
add
pop
jno
cmp
cmc
push
fisttpl
loopne
out
fbld
js
stos
add
pop
loop
xchg
xchg
andl
in
adc
sub
cli
les
adc
out
pop
sub
imul
daa
jge
and
pop
mov
adc
fs
xchg
xchg
cs
cmp
addr16
scas
pop
ljmp
mov
cmpsb
gs
xchg
aas
stos
mov
cmp
push
int
sub
adc
and
jp
adc
dec
xchg
push
lods
test
iret
mov
loop
call
les
insl
pop
lods
mov
jp
push
add
push
repz
push
adc
cltd
fnstenv
jmp
rorl
lret
scas
jbe
pusha
fmuls
add
movsb
jb
adc
movsl
nop
mov
out
xchg
arpl
push
cmp
sar
mov
sub
mov
inc
fimull
les
mov
lods
sub
mov
fdivl
movsb
jmp
adc
cmp
les
sbb
out
and
xchg
push
in
int
mov
xchg
std
popf
lea
in
iret
test
sti
or
sub
lcall
mov
mov
sbb
xchg
dec
pop
jl
jecxz
and
cmp
add
rorl
std
or
mov
jo
fstps
data16
stos
add
ljmp
in
mov
lock
sti
int3
daa
lods
vhaddps
mov
std
cmc
push
je
aaa
jle
dec
jp
inc
xorl
cmp
sub
bound
inc
inc
testb
aaa
inc
push
xor
fwait
sub
test
imul
sub
dec
nop
sti
mov
sarb
cmc
push
add
lods
push
pop
pop
add
ss
in
repz
sub
sti
adc
push
adcb
test
push
insl
outsl
add
fidivs
out
daa
mov
inc
ja
pop
or
jbe
test
push
shr
repz
lahf
sub
and
adc
call
shlb
cwtl
in
inc
mov
adc
icebp
and
stc
je
lret
stos
cmpsl
pop
inc
xor
sbb
pop
into
int3
mov
jns
mov
jo
adc
pop
adc
cmp
mov
dec
fiaddl
lcall
mov
or
jb
push
cmp
fwait
xchg
mov
or
pop
lods
mov
mov
bnd
sbb
into
scas
cmp
mov
lds
adc
pop
out
or
mov
add
movsl
aad
pop
dec
jae
mov
pushf
imul
dec
mov
push
js
aas
scas
ror
push
test
dec
xor
js
iret
lods
out
jp
lahf
icebp
shll
mov
pop
jge
popf
fldl
popa
inc
ror
rorb
add
rolb
adc
nop
add
cli
and
jno
cwtl
cli
idivl
adc
jg
int
test
jne
push
addr16
mov
sbb
pop
imul
mov
dec
ds
daa
int
xor
addl
mov
jl
fistps
lahf
jb
mov
scas
xor
add
add
leave
lcall
data16
ds
cmp
ret
inc
in
rolb
cmp
inc
jo
xchg
test
and
cwtl
dec
pop
std
adc
lock
fimull
orl
pop
dec
stos
xchg
push
inc
jns
mov
stos
xor
das
fwait
push
jmp
fstpt
cld
mov
adc
test
sarl
lret
imul
mov
push
cli
or
push
fwait
jle
lret
ficompl
push
cmpb
jg
push
dec
sub
xchg
jae
xor
xlat
mov
mov
sbb
cmp
adc
add
cli
sbb
insb
push
jnp
rcll
fidivrs
push
or
repnz
inc
mov
xchg
jmp
cmpsl
lds
ljmp
sarb
adc
mov
movsl
push
outsl
adc
pop
sbb
pushf
xchg
sbb
call
cli
xchg
das
popf
xor
shrb
daa
cmp
imulb
xchg
mov
cmp
fidivl
fidivrs
test
dec
pop
fidivrl
jb
dec
ss
lcall
in
in
push
adc
loopne
jge
add
sub
cmpsl
addb
mov
addr16
mov
mov
fidivs
loope
call
iret
sub
push
jge
inc
sub
push
add
mov
rcl
stos
cld
pop
pop
dec
call
add
add
add
je
arpl
fldenv
mov
or
subb
inc
mov
push
in
mov
cmpsb
int3
vcvttps2dq
xor
sarl
sarb
std
mov
pushf
cmp
shl
push
shlb
xchg
sbb
fldcw
mov
lahf
data16
leave
mov
dec
and
popf
popf
push
pop
int3
or
call
aas
lock
dec
mov
js
outsb
cmp
stos
push
pop
sbb
stos
movsl
xchg
fdivrp
jecxz
add
add
and
outsb
xor
addr16
mov
and
imul
jmp
mov
andl
mov
movsl
jnp
mov
dec
cmp
mov
sub
or
dec
sbb
inc
cmp
dec
out
fldenv
stos
xchg
inc
add
xor
cmpsl
and
sub
pop
or
in
or
cmpsl
xchg
push
movsl
adcl
int
adc
jp
add
sub
cmp
out
sub
xchg
xor
cmpl
fwait
mov
push
xchg
loopne
add
mov
adc
inc
sbb
repz
pushl
loop
dec
out
adc
je
mov
lods
ret
arpl
xchg
scas
adc
lock
fildl
mov
mov
sbb
and
pop
push
mov
cs
mov
testl
pop
adc
cmp
addr16
cmp
xchg
push
xor
in
xchg
jge
dec
xlat
and
hlt
inc
jg
movsb
xor
or
or
inc
sti
cmp
std
jae
es
jno
cwtl
mov
jno
mov
movsl
or
pop
ret
and
gs
divl
sbb
rep
mov
push
xchg
sbb
into
pop
lock
ljmp
inc
dec
test
and
sub
mov
push
fucomp
into
mov
inc
adc
jge
inc
inc
movsl
push
cmp
testl
or
jns
lds
subb
push
xchg
push
mov
in
xchg
lods
mov
testl
cld
dec
fwait
test
xor
sub
mov
popa
cs
xchg
inc
jmp
call
into
adc
lds
fimull
in
nop
cld
lahf
xchg
and
push
xor
sahf
and
and
sbb
jb
call
pop
int
imul
cld
into
jb
or
inc
pop
dec
sbb
adc
pop
mov
pop
or
jne
mov
stc
fcmovu
xchg
xchg
inc
and
and
mov
or
ret
pop
push
andl
push
or
mov
xor
mov
addl
push
and
inc
cmp
lcall
incl
roll
mov
mov
lret
xor
outsl
sbb
fadd
roll
and
lret
xchg
pop
jnp
fcomps
mov
sbb
mov
pop
mov
jo
cmovl
pop
lcall
dec
adc
xlat
push
lea
rcll
cmp
push
in
aas
fwait
or
cmp
scas
daa
push
dec
sub
cmp
ja
pop
insl
mov
sub
and
pop
adc
mov
or
imul
fistpl
xchg
popf
push
jmp
jno
add
mov
pop
pop
pushf
mov
cmp
les
fsubrl
fmull
popf
mov
inc
dec
inc
test
fs
mov
sahf
and
cltd
out
jge
addb
shll
addr16
arpl
ja
jp
into
jecxz
testb
sub
aas
sub
adc
jno
add
pop
jg
mov
pushf
cwtl
pop
cmpl
lret
mov
and
out
cmp
push
or
xchg
mulb
ds
adc
jmp
push
lcall
cltd
dec
dec
jno
fs
cmpsb
daa
rolb
hlt
orl
jecxz
xchg
rcll
pop
xchg
xchg
lcall
insl
outsb
jbe
adc
fsubrs
mov
inc
repz
rep
sub
push
out
mov
sbb
dec
pop
or
mov
sub
inc
push
sarb
inc
dec
icebp
idivb
xor
xchg
ja
dec
cmp
ret
jno
cld
lea
test
rcll
mov
pop
push
imull
adc
sbb
stc
hlt
fldl
dec
adc
jno
sahf
roll
movsl
dec
mov
mov
mov
pop
mov
and
sbb
inc
fwait
or
lahf
or
inc
movsb
dec
lds
out
dec
sub
xor
mov
adc
stos
cld
jno
fwait
scas
mov
cmpsl
push
lahf
mov
test
scas
sub
adc
call
mov
add
or
popf
add
dec
test
cwtl
icebp
lahf
sbb
int3
lcall
int
aas
add
mov
jl
sbb
mov
popf
outsb
jg
mov
shll
pop
dec
movsb
adcl
rolb
loope
inc
sbb
lock
inc
fdivs
xchg
cmp
dec
ljmp
call
jge
and
sub
cmp
xor
xlat
insl
popa
into
test
inc
pop
cmp
and
or
ljmp
into
shll
loope
cmp
imul
mov
rorl
or
sub
xchg
outsl
jge
pop
add
test
xor
and
pop
fsubrl
outsb
jge
cmp
es
fidivrl
lock
cli
pop
fistps
push
mov
cmp
test
sub
cwtl
ja
in
add
push
mov
scas
fildl
out
mov
dec
jo
pusha
pop
stc
cwtl
dec
out
ret
push
xor
inc
aad
adc
lret
lods
push
add
ss
cmc
out
mov
pop
push
jo
call
jne
int3
jecxz
roll
push
andb
sbb
popf
in
psllq
mov
push
sbb
aad
outsb
dec
or
ss
fnstcw
adc
cs
inc
pop
pop
inc
adcl
sub
push
pop
leave
dec
outsb
mov
pop
dec
out
fld
in
xchg
test
in
int
sbb
daa
movnti
add
out
arpl
test
pop
std
dec
movsb
aad
push
mov
xchg
test
lea
test
jns
adc
jmp
sub
inc
test
xchg
mov
mov
jne
fisttpl
call
mov
enter
xchg
jo
inc
clc
jno
adc
add
or
loopne
cmpsb
je
out
jg
dec
ret
push
dec
inc
sub
pop
pop
ss
and
cmpsb
cmp
daa
inc
mov
ss
shrl
fisttpll
xor
sub
push
jg
xchg
icebp
sbb
pop
mov
mov
divl
mov
xchg
jle
cmp
mov
pop
mov
js
jp
pushf
dec
stc
pop
cmpsb
cmp
pop
xchg
lahf
mov
outsl
lea
es
push
adc
mov
xlat
xchg
enter
scas
inc
adcl
lret
adc
ljmp
dec
out
and
aas
or
stos
ret
daa
rorb
add
adc
mov
mov
es
add
dec
cmp
xchg
cli
das
ret
pop
addl
cmpsl
aaa
mov
icebp
push
jo
jo
sahf
pop
sub
jne
mov
sub
adc
push
nop
aam
cwtl
insb
inc
mov
stos
lods
pusha
push
outsl
sahf
dec
cli
int
cmc
aas
add
dec
inc
add
or
out
pop
inc
or
frndint
and
adc
jl
cltd
nop
roll
scas
and
or
push
cmpsl
mov
movsl
pop
stc
sub
or
jmp
outsl
push
into
dec
mov
jae
repz
adc
pop
popf
mov
or
inc
popf
jne
movsb
push
cmp
jp
jno
cmp
push
pop
outsb
adc
cli
add
xchg
nop
fisubrl
fsubl
lret
rcr
cld
out
or
jno
push
mov
sub
and
nop
insb
mov
mov
or
pop
test
inc
ret
mov
popa
dec
push
mov
xor
iret
lock
cs
int3
out
enter
sbb
js
pop
sbb
insl
fldt
add
pop
adc
stos
sub
push
dec
scas
pop
daa
enter
sub
adc
lds
lock
pop
iret
sub
loopne
add
add
mov
mov
xchg
mov
xor
xchg
cmp
sub
popf
mov
jg
push
sub
cld
rolb
jno
and
outsb
sbb
iret
inc
jp
js
xor
and
and
addr16
mov
test
dec
out
stos
out
sbb
lods
or
insb
test
mov
lds
scas
dec
cltd
xchg
shll
ja
adc
jne
stos
pushf
xor
inc
jno
imul
ds
mov
fwait
xchg
aaa
jmp
jo
xor
stc
pop
jns
sub
push
in
dec
mov
inc
xchg
inc
movsb
repnz
mov
and
out
test
scas
mov
icebp
lock
jne
cwtl
inc
and
push
jl
xchg
sub
sub
pushf
push
inc
lock
sbb
cs
insb
addr16
dec
test
in
jae
in
mov
add
xor
data16
mov
mov
stc
and
int3
and
mov
xor
jecxz
cmc
mov
xchg
dec
add
pop
jae
int
add
and
in
lock
dec
aaa
xchg
adc
icebp
stc
ds
mov
mov
addr16
shll
jmp
data16
or
out
xchg
or
dec
movlhps
fmull
ja
loope
insl
or
scas
mov
mov
out
adc
stos
scas
pop
sbb
xchg
and
push
inc
pop
in
repnz
test
jb
fs
mov
add
or
shll
jmp
adc
std
xchg
xchg
ficomps
stos
and
cmpsl
fwait
push
mov
xchg
jecxz
mov
testl
loopne
into
mov
or
push
xchg
lods
inc
mov
jmp
jl
cltd
das
jnp
mov
fidivs
scas
aaa
sbb
pop
sub
xchg
push
mov
mov
adc
cmpsl
mov
push
mov
popf
xchg
dec
call
jp
int3
flds
shlb
and
sbb
cmp
je
sub
sub
push
cmp
sub
gs
cmp
mov
into
inc
cmpsb
jae
mov
lock
out
popf
jmp
mov
push
dec
incl
rcrl
xchg
mov
pop
push
outsl
mov
sbb
stos
inc
xlat
daa
push
adc
test
mov
push
jne
fldl
pop
jb
stos
mov
jmp
or
cmpsb
jns,pt
test
dec
mov
dec
inc
dec
mov
fistpl
cmp
out
inc
sti
xchg
xchg
pop
sub
xlat
je
dec
sbb
imul
pop
lret
stos
jbe
loope
sti
repnz
or
pop
jmp
add
mov
shrb
cmpsb
cmpb
xor
shll
pop
sub
lock
test
in
and
not
xchg
fisubrl
dec
inc
add
jae
xor
sti
xchg
and
and
mov
sub
repz
stos
pop
xlat
cmpsl
and
mov
mov
ret
scas
gs
xchg
addr16
popf
pop
mov
push
adcb
popa
and
push
inc
sbb
inc
iret
lods
push
int
outsb
in
xlat
sti
inc
push
ja
mov
or
mov
xor
xchg
movsb
sbb
jno
pop
cmp
xchg
icebp
and
mov
or
dec
sbb
or
dec
stos
xorl
outsb
inc
mov
icebp
or
add
or
int3
stc
jo
mov
xchg
add
xor
insl
cmpsl
sub
fiadds
jb
pop
sub
adc
or
pop
aam
dec
xlat
xor
jge
jg
xchg
ss
in
push
test
pop
cwtl
jbe
dec
mov
std
pop
adc
cltd
or
xchg
insl
sub
push
sub
jg
xor
jp
pop
sbb
add
mov
or
cld
pop
dec
or
incb
mov
mov
imul
xor
jb
es
xchg
push
neg
xchg
sub
push
cwtl
lcall
cmp
loope
out
add
pop
cli
in
adc
loopne
push
xor
xor
adc
lock
clc
inc
cmpsl
mov
sub
and
es
shrb
ret
jb
lahf
add
fbld
jecxz
dec
ficoms
dec
ds
mov
xlat
es
lret
pop
mov
sbb
fbld
cmpsl
inc
inc
dec
add
xchg
cmp
mov
popf
sahf
and
mov
aaa
cmpsb
rcrl
lahf
push
fidivrs
ja
out
jg
clc
lahf
lea
cs
or
cmpsb
movsl
lods
arpl
loope
push
dec
cli
and
gs
xor
in
mov
pop
nop
add
inc
cs
mov
fstpl
mov
fsub
lahf
lds
pop
fisttps
pop
in
sbb
jl
cmc
lods
mov
adc
dec
les
sub
push
push
mov
fmuls
out
cvttps2pi
sub
push
xchg
out
mov
insb
push
les
shl
outsl
aam
pop
push
cmp
mov
dec
or
rcrb
adc
jno
sub
mov
cmc
in
mov
jl
add
or
nop
aas
sbb
in
jb
mov
fistpll
adc
and
sbb
fisttps
cmp
inc
mov
xor
push
js
cmpl
test
adc
test
movsl
outsl
sarl
mov
push
outsb
xchg
fsubr
cmpsb
sti
repz
aaa
lods
repnz
xchg
jmp
fwait
inc
sbb
add
xchg
add
repnz
mov
jno
jmp
cmp
insb
cmp
cmp
push
inc
dec
cmp
inc
loop
sti
jp
es
fnstsw
popf
pusha
mov
cmpsb
jecxz
push
sub
js
add
cmc
cli
fs
dec
cwtl
movsb
jg
sub
lret
push
pushf
out
pop
arpl
repnz
repnz
xorl
mov
inc
cmp
arpl
repz
clc
jg
fbstp
mov
or
xchg
out
cmc
mov
wrmsr
ficoml
and
dec
cld
mov
sub
push
xor
jmp
adc
mov
in
ret
fsubl
dec
aaa
jg
out
cltd
or
fisttpl
mov
or
xchg
pop
andb
out
dec
mov
jl
cmp
mov
inc
pop
pop
test
in
or
sbb
pop
mov
arpl
add
pop
xor
out
aas
lods
mov
loopne
dec
shll
xchg
movsl
stos
enter
fdivs
fmull
rcrb
psllq
add
pop
push
mov
int
push
pushf
jne
add
int3
push
sbb
mov
add
dec
lds
mov
and
inc
pop
ss
mov
sbb
push
les
mov
pop
dec
mov
cmc
xor
outsl
add
fwait
test
dec
xor
push
idiv
ja
xchg
lds
sub
or
pop
jl
lahf
hlt
jno
xor
loop
shrb
xchg
leave
cli
pop
inc
push
add
fmul
call
jecxz
mov
aad
test
cmpsl
movsb
out
mov
mov
into
or
dec
jae
jno
pop
out
out
xchg
push
jg
subb
inc
mov
outsl
mov
repz
fs
dec
fnsave
gs
dec
mov
test
mov
bound
data16
adc
mov
ja
sub
or
cmp
fildl
imul
in
clc
sbb
cwtl
xchg
fildll
cwtl
lret
jns
mov
jbe
xor
pop
sub
aaa
fucomip
data16
mov
sti
and
push
sub
sahf
mov
xor
sub
mov
outsb
pop
aad
add
jp
and
cwtl
or
mov
stc
mov
cmpsl
shlb
enter
subl
push
mov
shr
retw
stos
jmp
ficompl
sahf
insl
xchg
insl
enter
lahf
adc
or
dec
add
mov
xlat
mov
push
sbb
imul
dec
sub
xchg
sbb
loop
not
stc
xlat
push
pop
xchg
out
outsl
call
sti
cmp
add
pop
loop
popa
xchg
xchg
inc
mov
in
push
imul
mov
lock
push
lret
scas
out
mov
loope
movsl
xchg
cmp
cmpsb
ret
pop
jp
sahf
pop
test
jb
jle
inc
in
sar
in
std
push
and
adc
mov
dec
imul
cli
add
mov
es
mov
lret
bound
inc
pop
jl
test
fbld
jno
out
icebp
icebp
and
and
dec
mov
jl
out
push
or
inc
lds
ds
xor
cmp
pushf
std
mov
out
xor
jnp
scas
cli
rcll
fstps
into
loope
inc
ret
push
scas
jle
in
in
inc
pushf
clc
repz
ljmp
shlb
sti
push
cmp
scas
movsb
and
xchg
setg
ds
cltd
pop
movsl
inc
xchg
ds
cli
jns
icebp
js
adc
in
push
adcb
cmpsl
xor
cwtl
xchg
inc
push
pop
cltd
jnp
out
outsb
pop
add
repz
fbstp
cli
js
pop
or
repnz
in
cltd
cmp
push
popf
cmc
in
cmp
ret
ljmp
xor
push
mov
cmp
mov
dec
out
andl
and
or
dec
test
jg
scas
addl
push
mov
cmp
lahf
lods
inc
dec
dec
rcr
sub
mov
arpl
mov
movsb
std
lods
inc
stc
imul
dec
or
idivl
mov
xor
imul
in
add
scas
lcall
xchg
cmp
push
push
imull
ljmp
mov
je
call
scas
mov
cmp
les
mov
push
xor
popf
jle
push
les
adc
mov
and
loopne
lret
adc
mov
shlb
adc
inc
je
jl
push
out
and
push
cmpsl
mov
sbb
fbld
out
mov
adc
mov
mov
clc
dec
loope
fwait
daa
pop
and
cwtl
int
out
mov
popf
out
jmp
mov
bswap
stc
cmp
enter
mov
lock
cld
xlat
mov
mov
lods
cmp
fistl
in
outsb
or
jns
xor
sub
data16
cli
movb
mov
ds
push
push
imul
lret
fildll
or
test
jl
sbb
arpl
jmp
or
arpl
inc
mov
jl
notl
mov
lahf
arpl
aaa
or
inc
loope
dec
push
xor
mov
or
mov
shrl
mov
push
cmp
enter
je
mov
xchg
dec
mov
imul
iret
outsb
test
mov
inc
inc
call
testb
lcall
push
scas
and
jl
mov
inc
xchg
adc
cmpsb
inc
mov
test
sahf
push
rcll
mov
push
cmpsb
imul
ret
repnz
sbb
cltd
pop
aad
iret
sbb
pop
xor
push
fwait
and
push
adc
cmp
mov
push
sarl
pop
loopne
xchg
xor
mov
aad
sub
push
cli
frstor
cwtl
mov
push
pop
lcall
push
add
stos
insb
mov
mov
jo
add
fst
sbb
in
ret
leave
rolb
jno
jae
push
pop
jmp
sbb
mov
loope
adc
pop
push
sbb
ret
repnz
out
jnp
adc
inc
imul
inc
movsb
push
jns
cmpsb
pop
mov
jmp
daa
sti
xor
call
addr16
arpl
inc
scas
ss
pop
add
rol
mov
sbb
push
mov
push
push
add
mov
push
mov
imul
add
arpl
shlb
or
fsts
pop
cmp
push
or
dec
push
inc
xchg
pop
out
ja
jbe
stos
dec
dec
jg
test
lea
fnstenv
pop
adcb
ret
xchg
cwtl
dec
fdecstp
pop
inc
push
repz
repz
sbb
mov
sub
sbb
mov
add
aaa
and
mov
cmp
pop
dec
ja
icebp
pop
fistpll
in
sub
xchg
test
pop
daa
stos
popa
dec
ret
outsl
or
scas
cld
mov
shll
mov
jne
and
in
int3
mov
out
lcall
mov
push
dec
js
push
loop
push
or
or
pop
iret
add
imul
jae
mov
cltd
daa
cld
and
sbb
popf
testb
xlat
jmp
jne
add
cmc
push
scas
or
sbb
jg
in
or
iret
mov
mov
sbb
xor
and
jns
fisubrs
insl
popl
pop
sbb
adc
movsb
shlb
mov
xchg
das
rorl
push
repz
push
xor
mov
in
or
fcmove
stos
sub
adc
outsb
xchg
inc
jecxz
lahf
xchg
les
inc
lret
mov
and
adc
push
push
aaa
aad
aad
cs
addps
lea
add
sub
or
inc
insb
iret
sahf
xchg
and
repnz
dec
mov
test
xchg
jbe
hlt
loop
xchg
test
inc
sub
mull
into
icebp
jno
lret
arpl
adc
dec
nop
icebp
mov
push
ja
iret
ds
push
cli
jecxz
mov
mov
scas
sbb
push
lea
loopne
idivb
pushf
dec
les
add
ds
sub
sbb
movsb
jmp
shlb
cs
imul
outsl
mov
clc
scas
xchg
cltd
mov
xor
out
addr16
mov
push
or
add
cmpsb
cld
dec
sbb
rolb
sahf
pusha
xchg
xlat
add
mov
stos
lea
hlt
mov
call
jb
push
outsb
cmp
lods
lock
repnz
shll
lock
stos
bnd
sub
movsl
pop
and
xchg
cmp
xchg
pushl
mov
push
xchg
mov
push
xor
mov
icebp
jle
icebp
adc
mov
sub
sub
xor
js
ss
dec
test
fldl
ds
sti
dec
ret
adcl
arpl
push
inc
lcall
ret
or
mov
mov
addr16
jo
add
inc
test
and
mov
add
rcr
stc
xchg
sahf
out
jg
pop
xor
rcll
test
jno
rorl
fidivl
inc
insl
mov
sub
repz
in
jae
loopne
add
popa
stos
into
nop
mov
push
sub
popf
aas
xor
out
mov
nopl
dec
fwait
inc
scas
loop
and
mov
gs
loope
es
cmp
xlat
scas
sbb
jge
lods
sbb
cmp
push
push
divb
push
mov
pop
rcr
in
inc
test
mov
add
xor
xchg
jp
pop
lock
mov
or
jl
cmpsb
test
mov
mov
xlat
repz
jne
subb
insl
sbb
call
pop
movsb
cmp
jle
ja
mov
stc
mov
or
push
lea
xor
jge
jno
push
stc
and
movsl
sub
mov
clc
xor
xchg
movsl
add
mov
aam
inc
push
push
repnz
jmp
mov
pop
jno
mov
fdivs
out
xchg
ss
add
ret
imul
push
popf
and
pop
enter
jle
ret
into
loope
fldl
sub
sbb
add
movsl
jne
push
in
and
add
push
mov
sub
dec
ret
mov
pshufw
leave
inc
sbb
test
hlt
out
cld
jg
mov
push
jecxz
outsb
or
test
not
insb
pop
punpckhbw
repz
addr16
stos
aas
icebp
lds
addr16
ret
shrb
mov
sbb
pop
sbb
mov
pop
inc
cmc
jb
inc
scas
aam
mov
and
push
fmull
in
push
ljmp
rclb
fsubs
xchg
ds
dec
push
jb
dec
into
imul
mov
xorb
repnz
or
lret
out
adc
dec
test
or
pop
mov
das
xor
xlat
cmp
movsb
mov
mov
sbbb
cmpsb
xchg
cmp
xchg
lods
push
das
adc
pop
mov
xor
sub
xchg
push
mov
imul
sub
mov
insl
cltd
mov
cmp
jnp
ret
push
push
sbb
push
push
mov
dec
sub
out
adc
stos
fmull
dec
dec
gs
cmc
adcb
into
movsb
mov
mov
aaa
jmp
and
jne
out
arpl
sahf
sbb
adc
outsl
push
and
and
aas
jl
add
cmp
dec
cmpsl
or
jg
or
cmp
mov
gs
ja
xchg
xor
fmull
push
fstpl
aaa
frstor
ret
sti
pop
loop
imul
cmpsb
jno
mov
and
inc
mov
pusha
repnz
je
enter
repnz
jp
xchg
add
cmc
inc
inc
out
icebp
jo
xchg
jmp
fnstsw
nop
mov
mov
or
jg
repz
xor
gs
icebp
pop
jmp
daa
std
int3
mov
adc
pop
push
rorl
mov
jle
mov
sub
adc
xor
sahf
aam
push
sbb
xchg
aas
adc
inc
test
int
mov
push
push
out
fimull
and
cmpb
sti
lock
es
mov
mov
xchg
dec
cmc
cmp
mov
mov
mov
ret
clc
cmc
or
sbb
mov
call
popl
dec
push
dec
sbb
movsl
repz
xor
mov
push
jbe
mov
arpl
sub
dec
pop
jmp
or
dec
lods
nop
addr16
mov
xor
sbb
and
addr16
shl
or
jecxz
cmp
add
inc
aam
fmull
cmp
mov
insl
ja
adc
xor
cmp
and
jne
sbb
fisubl
cmc
mov
icebp
xor
xchg
dec
aad
jne
jns
fisubrs
fcompl
push
jbe
jecxz
push
cltd
add
mov
add
dec
pop
int
dec
lahf
mov
cmp
and
dec
dec
push
fs
fs
and
jecxz
int
out
xchg
icebp
loop
sub
sbb
scas
pop
push
rcll
add
ficoms
test
push
jmp
pop
dec
xor
sub
cmp
add
shlb
sbbb
cmp
scas
xchg
in
fwait
or
push
jl
jge
push
pop
mov
push
pop
jmp
dec
xor
push
aam
or
lods
mov
mov
mov
loope
inc
jp
mov
mov
jl
mov
fcmovnb
xchg
sti
ret
push
jl
push
xor
lea
mov
jns
cli
es
sub
jecxz
inc
mov
mov
pushf
pop
cmp
or
in
inc
jae
pop
jge
xchg
pop
inc
mov
movsb
outsl
mov
les
std
fincstp
mov
sbb
or
cli
jle
xor
adc
xor
or
rcl
or
fwait
mov
scas
sub
test
sub
mov
xor
aam
lods
rorl
lods
mov
in
stos
push
nop
cmp
push
xchg
lods
xor
repz
pop
adc
xchg
negb
mov
adc
es
dec
sbb
adc
push
adc
pop
mov
mov
mov
mov
jle
cltd
pop
jle
xor
xchg
xchg
sub
decl
jl
inc
iret
mov
jo
mov
cltd
arpl
cmpl
jp
mov
cmp
mov
or
push
and
sbb
cmpsb
pop
fwait
outsl
mov
sahf
jmp
popf
addr16
or
or
fldcw
arpl
in
js
push
and
sub
shl
adc
imul
sub
push
sub
ljmp
xchg
push
call
imul
jae
cmpb
sahf
dec
jp
push
shr
add
lret
dec
mov
sub
lcall
js
and
lcall
and
lods
add
lcall
mov
lea
or
loope
gs
stos
sub
push
sbb
jecxz
add
rorl
lret
push
jne
lea
push
hlt
mov
fsubs
rcl
pop
les
cmpsb
in
orl
push
rol
or
insl
push
cmp
xchg
and
sbb
out
add
and
outsb
cmp
push
out
jl
enter
mov
mov
test
sub
adc
popf
sahf
idiv
call
sbb
inc
pop
mov
fcoml
adc
hlt
call
dec
stos
mov
sbb
xchg
outsl
shlb
xchg
out
lock
bound
jae
outsl
add
push
dec
aam
pop
into
mov
cmpsb
lods
inc
movsl
push
popa
push
leave
mov
arpl
mov
jne
jno
ror
sbb
adc
mov
xchg
push
inc
test
lret
cmp
jge
roll
nop
imul
imul
adc
mov
in
or
imul
or
jecxz
sub
hlt
ret
mov
cmp
and
sbb
lock
repnz
in
icebp
clc
repnz
xchg
add
test
in
iret
ljmp
sbb
sbb
push
and
stos
or
orl
xchg
and
dec
dec
dec
inc
test
inc
aam
stc
mov
rorb
jno
cmpsb
or
jno
xchg
daa
lods
push
lcall
xchg
mov
sbb
fists
jb
mov
popl
fiaddl
xor
data16
push
push
add
in
pop
mov
cmp
sti
enter
mov
push
shlb
fwait
add
out
fiadds
push
pop
add
xchg
jg
fdiv
sub
bound
icebp
pushf
xorb
test
sub
cwtl
dec
mov
lret
inc
or
test
ljmp
mov
xor
iret
dec
cmp
push
enter
shl
add
pop
add
mov
fistps
sbb
dec
ss
lret
inc
cmp
mov
into
js
cwtl
mov
repnz
mov
roll
stc
cltd
cmp
loopne
fdivrl
sub
pop
stos
shll
cmpsb
xchg
cmp
push
pop
fnstcw
out
adc
mov
mov
cmp
push
lods
mov
outsb
mov
bnd
popw
mov
adc
mov
fdivs
icebp
inc
notb
mov
test
sahf
test
enter
cltd
test
loopne
js
pop
pop
iret
sbb
and
push
cmpsl
sub
xor
and
pop
add
inc
mov
inc
adc
fsubrs
ret
int
or
pop
lods
mov
push
repnz
and
js
xchg
push
pop
mov
dec
rcl
mov
dec
pop
bound
fwait
add
xlat
pop
in
or
icebp
sub
xchg
aam
pop
out
fs
mov
test
pop
or
in
pop
mov
sub
fwait
pop
clc
dec
jae
iret
lods
stos
mov
adc
jl
push
and
sub
stc
ja
sub
scas
mov
sub
stos
or
fldt
push
mov
fstpl
fists
iret
push
mov
bound
and
push
sub
fwait
sub
sbb
dec
in
mov
sti
test
xor
jno
mov
jp
xor
sbb
mov
and
push
inc
int3
push
stc
frstor
mov
xor
mov
jnp
sub
insb
cld
sbb
icebp
in
rcrb
add
ror
and
jl
adc
mov
es
insb
pop
idivl
ficoms
mov
jl
out
test
fistps
sub
jbe
aad
mov
shl
jnp
data16
jne
lcall
into
fidivrs
xchg
mov
stc
adc
ljmp
test
add
mov
shll
add
lea
in
ficoml
stos
cmpsb
mov
sbb
push
scas
scas
pushf
nop
ret
enter
insb
mov
ret
mov
add
sti
fsts
lea
jne
inc
mov
stos
data16
mov
cltd
pop
lcall
adc
xchg
pop
mov
stos
dec
adc
dec
xor
dec
imul
pop
dec
inc
lcall
loopne
je
xor
jne
xor
dec
shlb
xor
rorb
mov
int
stos
fs
sbbl
int
lret
std
leave
pop
js
and
into
cmpsl
cld
and
sub
or
jg
xchg
jo
adc
jnp
call
jecxz
in
adc
xchg
add
push
jg
mov
dec
lret
int3
xor
bound
pop
dec
je
push
imul
add
mov
jnp
mov
daa
movsl
out
mov
mov
xor
add
add
mov
push
cmp
cltd
enter
insb
pushf
push
out
imul
xlat
jnp
test
ret
cli
jle
pop
jne
cmovno
test
add
fwait
aaa
sub
jecxz
sub
fistpl
pusha
sub
cmc
xor
push
ret
ss
or
pop
cld
sti
push
fsts
xor
stos
xchg
mov
call
xchg
cmp
lods
mov
adc
repz
aam
fdivrl
fimull
push
outsb
loop
lret
inc
pop
pushf
add
sbb
ret
adc
imul
mov
pop
sub
pop
shrl
sub
cld
pop
imul
dec
mov
xchg
in
push
lcall
mov
pop
pushf
cld
lock
lock
subl
popa
sti
sbb
dec
addr16
scas
enter
push
mov
fiaddl
mov
repz
das
insb
adcl
mov
je
sub
cmp
pop
pusha
ss
repnz
cmp
pop
lret
xchg
imulb
xor
jmp
pop
lcall
push
mov
pop
fstl
ljmp
mov
fs
dec
outsl
faddl
mov
pop
cmp
mov
cmpsb
je
mov
rclb
fildll
cli
shll
xlat
aaa
and
jns
and
push
add
mov
xlat
gs
cmp
push
mov
cmpsb
push
outsb
jne
js
mov
leave
sub
sub
rol
fisttpll
stc
dec
enter
shll
adc
iret
adc
stos
sarl
loope
add
jns
gs
xchg
dec
lods
call
pop
jne
cmpsl
into
xchg
add
stos
orl
fsub
or
mov
mov
sbb
hlt
stc
sbb
mov
sub
jns
pushf
enter
sbb
cmc
icebp
fwait
cmpsl
lcall
das
cwtd
mov
lds
inc
movsl
push
mov
inc
test
pop
cmc
fxch
frstor
xchg
ja
mov
insl
lds
test
fldcw
rcrb
xor
psadbw
mov
mov
xlat
push
daa
mov
mov
sub
andb
cmpsl
inc
xor
xchg
pop
xchg
shll
rcll
push
out
faddl
into
cmp
into
fcoml
mov
lret
popa
jl
mov
lahf
insb
mov
or
push
or
stos
mov
inc
mov
ret
mov
insb
xor
out
out
mov
sub
and
mov
in
call
fisttpl
dec
outsb
or
xchg
add
in
push
add
add
test
clc
leave
insb
testb
es
mov
pop
stos
fimull
jnp
dec
int
add
shrl
addl
and
sbb
mov
sti
aam
std
mov
pushf
stos
cli
cld
es
pop
out
bound
pop
sbb
test
notl
jo
inc
out
add
jnp
or
jmp
mov
clc
jmp
movsl
mov
sub
movl
pop
add
lcall
mov
xchg
out
sbb
inc
xchg
sub
dec
rcrl
fs
loopne
es
sti
ljmp
xchg
xor
scas
xchg
mov
sbb
jecxz
cmp
outsl
mov
pop
push
lods
jmp
cmp
cmp
pop
push
shlb
loop
movsl
pop
cltd
fucompp
sarb
data16
dec
mov
xchg
out
dec
mov
xlat
xor
jne
sbb
xchg
pop
ret
or
pop
loopne
jae
test
fnstsw
mov
xor
add
outsl
jp
les
ret
int
cwtl
add
add
pop
lods
cmpsl
cmpsl
out
sarb
pop
cmpb
sti
std
sbb
jecxz
mov
cmp
jmp
adc
fwait
jge
and
repnz
ja
repz
jne
std
push
mov
sti
xor
xchg
sbb
in
xchg
or
and
rcr
sub
gs
dec
fcompl
push
jge
jge
and
adc
lods
and
push
aaa
cmpsl
pusha
insl
int
sbb
xchg
sub
dec
push
and
pop
in
push
daa
rorb
popa
mov
mov
push
add
mov
out
pmullw
add
lds
push
xchg
xor
cltd
push
decl
sub
push
or
lcall
imul
push
les
outsl
in
outsl
fwait
shlb
lock
pause
jmp
stos
pop
int
inc
mov
test
mov
fstpl
sbb
test
dec
adc
test
jae
fidivl
cmpsb
mov
incl
mov
aad
mov
jmp
out
rcrb
stos
mov
xchg
add
lea
test
mov
sub
push
cwtl
aam
adc
dec
stc
mov
mov
outsl
cmp
rorl
xchg
sbb
ljmp
int3
jno
xchg
adc
pop
xchg
mov
mov
adcb
cmp
sub
scas
in
lods
sub
std
sbb
push
inc
dec
dec
stos
or
sub
in
adc
daa
insb
jns
mov
ret
shrl
mov
movsb
lcall
jo
xchg
xchg
or
or
int3
inc
out
das
cmp
push
repz
push
and
cmc
roll
rclb
into
and
aaa
es
sub
mov
ss
fdivrp
call
rorl
out
shrl
inc
sbb
outsb
xor
loopne
loope
fwait
test
insb
pop
push
cltd
imul
mov
clc
jp
mov
sub
mull
jge
sbb
iret
add
icebp
in
xor
sbb
shrb
out
dec
and
inc
xchg
sbb
dec
xchg
and
sti
lcall
negb
out
mov
cmp
aad
pop
pop
call
std
mov
or
jmp
pop
cs
sub
popf
xor
mov
adc
dec
mov
loop
mov
ja
mov
inc
pop
push
push
or
pop
repz
xchg
mov
enter
fistpl
inc
mov
cld
mov
in
sbb
hlt
xchg
rclb
ror
jne
pushf
xor
orl
jge
ret
out
and
sub
xor
xchg
in
cmp
sub
lahf
mov
dec
ljmp
sub
or
dec
aas
aaa
ljmp
jg
mov
push
xchg
sub
cmove
pushf
mov
das
fld
out
sub
mov
lahf
gs
inc
mov
xor
mov
ficompl
dec
lret
and
gs
cmp
cli
jecxz
data16
loopne
pop
lret
popfw
or
fcomps
fistpl
cld
fs
add
scas
outsb
aam
in
fs
call
les
pusha
cmp
ss
insl
fldl
mov
mov
mov
fcomps
cli
add
mov
sahf
sbb
mov
add
repz
in
mov
adc
push
lods
xchg
mov
lahf
xor
test
aad
mov
repnz
mov
leave
mov
jo
cmp
cmp
aam
mov
xor
jb
hlt
jge
adc
jno
mov
daa
or
call
scas
movsb
mov
pop
ret
scas
das
and
sahf
xchg
imul
cs
lcall
xchg
or
jmp
push
out
adc
faddl
sarb
inc
mov
ret
fcoml
lret
jns
jg
push
cwtl
je
mov
and
xor
xchg
into
dec
inc
mov
push
loope
popa
imulb
bound
cmp
and
ja
mov
out
push
inc
add
ficoml
mov
sbb
or
test
icebp
add
mov
in
jge
mov
jp
aam
jne
in
inc
cmp
fiaddl
mov
mov
cmpsl
cli
inc
adc
fs
mov
ljmp
inc
ja
fcomp
popa
ljmp
ljmp
sahf
scas
or
mov
outsb
mov
cmp
jl
jno
imul
sbb
add
outsl
mov
pop
mov
mov
repz
lcall
push
rcll
mov
add
mov
xchg
pop
mov
push
pop
in
or
sub
lahf
sub
and
fsub
popf
enter
cmpsl
pop
pop
rcrl
orb
jns
pop
movsb
mov
push
xchg
out
lret
imul
adc
jmp
stos
adc
push
mov
push
scas
pop
push
leave
or
lahf
pushf
or
pop
xor
loop
call
pop
addr16
mov
clc
imul
into
mov
test
fdiv
jmp
movl
dec
adc
jbe
xchg
inc
inc
cmp
loopne
scas
add
cli
mov
dec
imul
and
call
out
mov
sub
xlat
ficoms
mov
mov
pop
pusha
dec
cmp
movsl
and
inc
and
fldl
xor
xor
mov
int3
mov
das
cmpb
addr16
loopne
pop
popa
pushf
pop
cmp
stc
push
xchg
test
jg
jmp
int
push
fcompl
outsb
and
rcl
into
insl
in
nop
push
inc
sub
pushf
shrb
and
mov
iret
jl
aaa
add
test
mov
ds
daa
dec
out
jbe
sub
test
out
out
mov
es
test
iret
mov
inc
mov
imul
clc
aas
push
inc
sub
push
andl
loope
add
fcomps
xor
dec
cld
test
ret
sti
lret
xchg
xchg
cld
sbb
mov
add
jo
inc
sub
addr16
insl
js
push
iret
iret
loopne
sub
mov
call
lods
cmpsb
out
daa
imul
pop
js
imul
pop
inc
jg
shl
cmp
fsubr
inc
das
pop
movsb
hlt
test
xor
pop
jge
xchg
ret
jae
mov
cmp
movsl
popa
mov
inc
cmp
cmp
ja
mov
add
mov
dec
dec
cmp
jns
jge
adc
jnp
xchg
and
dec
repz
outsl
push
lret
popf
adc
add
lret
test
sbb
lods
sahf
inc
mov
bound
xor
mov
sbb
sbb
ss
rorl
test
lret
xor
cmp
cltd
cs
pusha
icebp
mov
iret
int
sti
sbb
test
repz
lods
mov
inc
inc
sub
push
jae
adc
push
fmul
mov
insb
mov
ficoml
sub
mov
jp
cmc
sbb
stos
add
xor
dec
push
push
xorb
lcall
shlb
sbb
dec
cli
cltd
pop
out
lock
ss
loop
loope
popf
dec
inc
xor
test
das
scas
repz
fsubrp
cmp
fsubl
push
mov
ss
int3
inc
cwtl
negl
loop
or
jmp
inc
aas
jmp
pop
mov
pop
inc
jns
cmp
imul
pop
jecxz
and
out
fsub
imul
adc
in
jg
rcll
mov
ja
pop
push
and
mov
hlt
jbe
push
push
in
push
and
cmp
leave
cmovl
rclb
dec
test
sbb
add
scas
mov
add
outsb
jnp
push
in
ror
add
shr
jne
in
pop
xor
jne
xchg
add
test
jne
jbe
xchg
ja
addr16
xchg
sub
sub
dec
dec
ja
js
mov
test
push
ret
arpl
out
ltr
lods
and
sahf
repz
push
sbb
scas
das
lods
xor
jl
push
adc
adc
sub
data16
inc
mov
sbb
shr
pop
cmp
insb
xlat
les
adc
insl
push
mov
shrl
sub
jecxz
xchg
sbb
mov
sbb
dec
and
subl
frstor
ljmp
enter
cmp
lret
mov
lret
cmp
rcrl
sub
xchg
bound
sbb
repz
pop
jmp
arpl
dec
gs
cmpsb
inc
or
push
mov
test
mov
out
flds
cmpsb
fcomps
cmp
pextrw
cmp
xchg
mov
mov
leave
cltd
test
dec
mov
fwait
je
ja
int3
mov
out
repnz
filds
lock
inc
push
out
stos
sbbl
xchg
mov
cmp
mov
sub
ljmp
insl
test
sti
fxtract
dec
xor
cwtl
push
sbb
sahf
dec
and
std
movsl
sbb
ret
push
movsb
insb
sub
cvtdq2ps
sub
pop
pop
cwtl
sti
mov
sarl
add
hlt
adc
pop
push
sbb
movsb
cmc
mov
dec
mov
outsl
fisubrs
jp
ret
mov
ret
sbb
dec
jg
out
sahf
aaa
add
lret
icebp
inc
push
mov
imul
cmp
test
mov
cmp
movsl
mov
ljmp
in
into
hlt
pop
mov
out
pop
mov
inc
sti
outsl
movsl
ds
mov
cmp
jae
pop
jmp
jp
add
scas
addr16
daa
cmp
movsl
pop
stos
xchg
out
cmpsl
jp
ds
add
adc
adcl
lahf
lds
scas
aam
jnp
fildl
cltd
jge
cmp
mov
pop
adc
sbb
imul
mov
mov
dec
sbb
cld
and
adc
mov
test
adc
adc
jno
ds
jbe
outsl
xchg
lock
in
fs
outsl
cltd
adc
and
add
out
mov
xchg
or
push
aaa
fdivrs
out
xlat
cmp
inc
fsubs
mov
jp
movsb
and
sbb
and
push
pusha
ss
mov
jo
pusha
pop
dec
cs
inc
paddusb
sub
mov
pop
mov
aad
idivl
aad
sub
ja
and
jbe
xorb
lds
fiadds
mov
incb
mov
les
out
and
jecxz
nop
and
movsb
xchg
cltd
cmp
jg
rclb
cmp
insl
sbb
jne
imul
pop
jb
insl
pop
lcall
les
add
mov
mov
sub
into
adc
stc
cmp
push
jl
inc
loope
fwait
xlat
test
lods
fs
loopne
cs
mov
repnz
mov
xor
lcall
and
stos
mov
shlb
jle
aad
pop
popf
mov
loopne
jns
outsl
mov
mov
xor
pop
repnz
das
pop
xlat
adc
lea
outsb
stc
inc
cmp
add
out
ret
enter
lods
mov
pop
pop
jb
movhps
push
pushf
pop
mov
cmc
lret
cld
mov
inc
push
dec
into
sbbb
adc
xor
ds
xor
inc
or
mov
jp
sub
sbb
je
add
pushl
or
dec
int3
aas
addb
out
roll
adc
inc
cmp
jb
and
out
cli
pop
in
or
xchg
movsl
cmp
adc
out
add
out
jns
shrb
lahf
repnz
pop
mov
mov
jg
xchg
fldt
cltd
mov
pop
jb
inc
jmp
push
and
mov
push
leave
nop
pop
and
sbb
mov
mov
in
ja
inc
bound
mov
mov
inc
inc
xor
fwait
inc
mov
scas
mov
mov
xor
cli
jle
mov
ja
sbb
adc
mov
fisttps
fadds
adc
pmaxsw
mov
das
ljmp
sbb
movsb
mov
addr16
sbb
mov
push
xlat
fldt
sub
mov
sbb
xchg
cwtl
push
dec
std
pop
mov
test
jl
out
add
loope
pusha
mov
dec
and
call
dec
subb
mov
jecxz
mov
inc
or
push
aam
sub
fists
int
mov
sub
xchg
cltd
xchg
xchg
test
jecxz
nop
mov
jae
mov
mov
mov
sub
cmp
jmp
inc
dec
pop
ds
sub
adc
mov
shll
xchg
in
not
lea
lcall
imul
adc
add
inc
dec
jg
int3
ljmp
insb
lret
mov
mov
mov
jbe
xor
xor
stos
sbbl
mov
mov
stos
test
ret
xor
xor
cmp
jp
repz
lds
mov
push
xor
cli
in
pop
xor
push
pop
stos
out
ljmp
cmp
mov
jecxz
xchg
jle
pop
sub
cltd
loop
dec
fsubr
sti
dec
cltd
js
push
xchg
out
xor
lock
or
or
daa
mov
cli
sub
lret
popf
decb
xchg
fistl
mov
xor
jmp
les
sbb
jne
add
mov
mov
testb
popa
dec
xchg
mov
sub
cmc
dec
mov
sahf
bnd
sub
mov
adc
jnp
fimuls
mov
movsb
clc
mov
fisttpl
sbb
fcmovnu
scas
aad
dec
and
int3
dec
aas
in
xorl
pop
ret
movsl
ficompl
loopne
mov
pop
divb
aam
popf
aam
add
dec
push
and
push
imul
pop
or
mov
push
add
fisubs
mulb
sahf
fcomip
cmp
aaa
push
loop
repz
push
sbb
add
pop
or
mov
ja
stc
daa
sbb
std
jne
lret
add
std
lahf
push
pop
loope
mov
int
jnp
lods
cmp
das
dec
insl
inc
pop
fldenv
fsub
ljmp
enter
sti
sub
add
and
sbb
cli
or
sahf
mov
pusha
mov
test
mov
adc
repz
test
sub
cmc
mov
xor
loop
cmpb
inc
push
mov
dec
push
mov
sti
push
and
pop
inc
jg
mov
out
pminsw
enter
push
sbb
pop
outsl
or
mov
addl
pop
ret
aas
sbbl
dec
inc
add
add
cmp
mov
sbbb
movsl
out
pushf
mov
or
movsl
xchg
mov
lea
out
push
bound
lret
mov
mov
loop
les
push
inc
pop
cmp
cld
jnp
fstpl
out
imull
outsl
adc
and
add
inc
fmul
push
sti
or
sub
jno
jne
inc
jns
xchg
sub
addr16
idivl
xchg
arpl
in
jle
pop
xor
jb
sbb
push
cmp
mov
mov
sbb
xchg
shrb
push
fidivs
idivl
sahf
pop
fists
adc
mov
pop
ret
das
push
iret
mov
in
jns
orl
pushf
sbb
out
dec
scas
dec
lret
imul
jnp
mov
jb
loope
mov
call
int
ss
add
scas
lods
fldenv
daa
aam
sbb
sbb
sarl
stos
inc
jmp
inc
push
ja
sbb
enter
cli
or
fisubrs
xchg
xor
pop
iret
aam
imul
ret
xchg
decb
xor
fcmovb
mov
stos
leave
add
scas
sub
dec
sbb
jecxz
and
in
mov
adc
and
scas
leave
dec
repz
add
iret
xchg
fdivr
xor
add
sub
repz
xchg
ret
push
lods
mov
sbb
cmp
mov
mov
inc
xchg
cmp
clc
int3
movsb
mov
push
shlb
sbb
and
mov
ljmp
popa
in
dec
adc
mov
dec
in
mov
push
fdivrl
fistpll
loope
or
xor
and
in
lret
inc
mov
insl
dec
cltd
cmpsb
faddl
cmp
mov
mov
popf
ret
repz
and
loop
xor
xchg
scas
std
xor
loop
mov
mov
dec
xchg
clc
pop
orb
mov
mov
push
fcmovnu
adc
jb
and
adcl
cmp
xor
inc
dec
dec
adc
jg
add
lret
ror
je
jg
bound
in
push
adc
les
lds
es
outsl
adc
sub
xchg
push
lock
shrb
jge
mov
popf
dec
aad
mov
adc
shll
inc
push
aam
lahf
int
inc
pop
lods
xchg
xor
popa
inc
aam
in
pop
or
fldenv
xchg
arpl
lret
outsb
les
push
dec
mov
add
repz
xchg
xor
push
pop
adc
jbe
jg
mov
int3
mov
xor
and
xor
cwtl
cmc
out
lds
push
xchg
mov
mov
jo
arpl
leave
and
inc
ficompl
pushl
lret
xor
jne
jmp
mov
jmp
pushf
xor
xlat
popf
push
push
lds
xor
bound
mov
fildl
aas
test
daa
movsb
pop
mov
and
mov
dec
mov
push
inc
pushf
xchg
enter
mov
icebp
cli
ret
orb
mov
push
mov
cli
cmp
or
lds
mov
sbb
leave
out
ss
fcomps
jle
xchg
shrl
idivl
int
mov
dec
push
insl
mov
and
add
xchg
out
sarb
outsb
jne
xor
mov
adc
mov
cld
je
pop
add
subl
add
jns
sahf
into
jge
les
push
jnp
int
cmp
repz
cmp
mov
test
and
jp
mov
ret
leave
fcoml
hlt
shll
rorl
dec
cmp
imul
mov
out
in
dec
in
subb
adc
fdivr
ret
sahf
mov
fadd
push
xchg
adc
jns
xchg
mov
cwtl
jp
in
sbb
xor
xor
xor
inc
add
jle
es
std
dec
arpl
push
fisubl
cmpsb
mov
sub
jae
rclb
aaa
jb
jmp
mov
mov
sahf
sub
arpl
test
add
leave
into
repnz
push
xchg
ss
icebp
mov
push
lea
in
out
enter
mov
mov
lret
stos
inc
pop
inc
out
adc
aad
dec
mov
outsl
insb
cld
ds
jmp
test
aaa
loope
icebp
or
out
xor
adc
out
outsl
inc
xchg
movsb
jmp
in
xchg
inc
push
movsl
lcall
in
rorl
cld
cmp
in
mov
test
cmp
loop
clc
pop
dec
ret
ficompl
cmp
js
ja
jno
add
mov
or
mov
mov
ret
lods
xchg
aas
sti
xor
xor
adc
out
fwait
push
inc
stos
jl
repz
in
xchg
push
mov
icebp
push
int3
lcall
iret
or
test
add
mov
cmp
sbb
cmc
sbb
lea
mov
cmp
repnz
scas
pop
out
mov
mov
pusha
les
cltd
mov
mov
outsl
and
cmp
push
mov
push
cwtl
mov
arpl
sti
call
jno
insb
mov
adcb
jmp
mov
lods
mov
cmp
stos
pusha
jp
sub
sub
popa
mov
and
pusha
lds
addr16
ret
mov
cmp
dec
sub
leave
stos
jle
scas
jecxz
add
dec
roll
xchg
or
sahf
int3
mov
pop
scas
aad
insl
gs
daa
xchg
xchg
fisttps
add
and
fsubrs
adc
pop
test
jo
push
push
ljmp
pop
or
incl
popa
imul
out
out
test
add
xor
jne
or
adcl
xor
xchg
imul
clc
imul
movsl
movsb
sahf
xchg
inc
js
pushf
jp
out
mov
mov
sub
push
mov
subb
mov
xchg
in
das
push
js
xlat
lock
fimuls
cmp
lock
add
xor
cmp
xchg
popa
push
sbb
stc
test
mov
mov
and
rcl
pusha
icebp
int
and
xchg
lea
push
mov
mov
ljmp
push
adc
mov
adc
outsl
cwtl
xchg
cmp
nop
mov
repnz
lret
fbstp
clc
into
inc
push
les
xchg
jle
rcll
or
jb
aas
inc
sbb
xchg
mov
jg
mov
jl
xchg
rcrb
dec
mulb
setnp
pop
out
out
xor
sub
and
out
cltd
lock
and
push
mov
or
pop
fsubl
bound
inc
loop
push
xchg
jae
int
jp
adc
test
cs
xor
jns
and
xor
jl
ret
fdivl
sub
inc
add
ret
mov
aaa
add
outsl
sub
into
dec
in
xor
hlt
xchg
mov
cmp
sbb
divl
jl
dec
or
fdivrs
div
inc
jg
js
sbb
cs
cmp
int3
cmp
aad
mov
call
testl
ds
pop
fnstcw
jns
adc
dec
mov
insb
sbb
xor
pop
in
lahf
movsl
fiadds
cmpxchg
dec
mov
in
nop
and
mulb
aad
popa
daa
lahf
and
aad
mov
jmp
add
fwait
dec
lods
jnp
jbe
dec
xchg
lret
jge
mov
loopne
loop
mov
mov
pop
dec
add
sub
jno
sub
and
pop
pop
cmp
sbb
adc
ss
stos
fmuls
cmp
cli
cli
insl
lea
mov
or
ret
cmp
outsb
inc
shll
dec
lods
mov
imul
cmpsb
out
icebp
pusha
das
inc
mov
mov
fisubrs
std
lds
inc
addr16
std
mov
adc
repz
add
test
ljmp
int
notb
xor
rclb
pop
jl
lret
xlat
int3
pop
test
loop
sbb
jp
add
xor
mov
pop
mov
mov
imull
ds
pop
add
imul
mov
push
lcall
outsb
popa
movsl
and
mov
cmp
mov
xor
sub
pop
or
mov
mov
adc
push
pop
sti
xor
or
jns
push
leave
leave
outsb
negb
lret
lret
inc
sbb
cwtl
inc
ja
shll
fidivl
cwtl
lahf
push
aaa
xchg
cli
lahf
mov
arpl
jb
pop
mov
int
or
mov
jnp
jb
gs
xchg
in
or
push
mov
insl
pop
jno
push
fldl
jle
pop
mov
push
adc
aas
inc
lahf
add
adc
inc
inc
sbb
pop
ja
addr16
sub
mov
popf
dec
and
mov
jne
sub
fs
mov
push
xor
fsubs
sbb
je
xchg
fsubl
data16
fs
pop
xchg
inc
lcall
cli
xchg
shll
sbbl
push
cmp
js
sub
jg
dec
movl
orl
jo
lock
fstps
push
repz
paddb
xchg
ds
xchg
dec
imul
sbb
frstor
filds
jnp
out
scas
imul
push
mov
stos
pop
jnp
mov
fisubrs
test
or
pop
test
sub
test
lods
lods
call
sub
and
mov
cltd
outsl
push
and
dec
lds
dec
sbb
nop
mov
and
cmp
xor
cli
jmp
sub
and
iret
push
cli
adc
nop
pop
sbb
inc
out
dec
loopne
ret
or
cmp
je
jb
push
mov
sbb
mov
sub
imulb
mov
and
adc
mov
sarb
mov
xchg
jno
ss
or
lcall
lds
shrl
lods
jl
jne
and
in
scas
push
fcmove
das
loopne
jmp
test
dec
test
mov
scas
shlb
push
addr16
bound
popa
xchg
adc
popf
lods
adc
adcl
pop
or
inc
mov
push
mov
ret
test
xor
and
scas
outsb
push
lods
bound
ljmp
mov
mov
ret
add
inc
call
and
cltd
shll
adc
sarl
aad
adc
xlat
call
mov
adc
in
dec
outsb
bound
or
lahf
mov
les
ds
cmp
ds
fs
mov
lcall
add
and
sbb
and
mov
movsl
pop
aaa
mov
mov
add
in
jns
mov
jnp
out
mov
fidivl
sub
pop
arpl
mov
sbb
pop
jae
inc
push
roll
insl
in
fs
jecxz
in
xchg
icebp
mov
loope
add
mov
sbb
inc
dec
cmp
dec
mov
pop
je
lock
xor
fwait
outsb
dec
sub
stc
or
mov
inc
scas
sbb
fucomi
push
push
adc
mov
mov
mov
outsb
jnp
adc
xchg
mov
adc
push
lret
mov
adc
test
fidivl
mov
shlb
mov
xlat
stc
xchg
into
aam
lods
mov
insb
sbb
ss
xchg
subl
inc
mov
outsl
mov
pop
scas
pushf
cmp
dec
sub
rorl
out
push
jnp
lret
push
in
pop
mulb
sbb
push
xor
lret
mov
mov
pop
aas
test
loopne
sbb
mov
xchg
dec
outsb
inc
inc
jecxz
xor
or
add
out
mov
enter
daa
in
sub
jmp
aad
cs
shl
push
add
shl
inc
dec
popf
fnstcw
push
inc
xchg
adc
js
sahf
or
mov
xchg
int3
jle
and
mov
popa
aam
lods
xchg
repnz
out
into
mov
cmpsb
add
pop
dec
or
sub
or
pushf
out
or
inc
arpl
mov
push
adc
cld
jl
cmc
jmp
fldenv
pop
add
or
sub
popa
mov
adc
in
sarl
cmp
dec
push
mov
adc
cmp
push
sub
aas
pop
xchg
dec
pushf
pop
push
jge
inc
mov
pusha
stos
stos
test
pop
push
hlt
push
aam
in
cltd
movsb
inc
aam
aas
add
arpl
bound
inc
pop
cmp
aaa
mov
jno
mov
jo
dec
pop
lahf
imul
add
sbb
je
or
inc
pusha
push
pushf
and
lea
mov
gs
xchg
jb
outsl
mov
movsb
lock
cli
popa
daa
xor
setbe
jbe
test
xor
lahf
jl
es
in
and
out
dec
push
sub
test
adc
lahf
int3
das
movsl
jle
jnp
sub
std
scas
or
sahf
mov
sbb
mov
lods
in
push
jg
dec
mov
cmp
push
loopne
xchg
icebp
mov
repz
cltd
pushf
push
jmp
dec
enter
mov
loopne
inc
je
aaa
inc
xor
aam
rorb
xchg
xlat
push
cli
mov
and
add
mov
or
fs
pop
ja
xor
mov
iret
sbb
mov
or
roll
cs
outsl
push
sbb
cmp
mov
or
pop
inc
pop
out
ss
pop
dec
mov
mov
popa
mov
popf
out
jo
icebp
lods
dec
int3
cli
lock
add
loope
test
xchg
fidivl
and
fmul
clc
mov
fwait
sbb
inc
insb
push
cmpsb
mov
std
sahf
shr
push
or
jae
xchg
jl
cmp
imul
loopne
scas
mov
sbb
mov
scas
clc
mov
push
and
cmp
mov
sarl
fisubrl
push
or
repnz
dec
cmp
loope
add
test
out
xor
fiaddl
jno
aaa
cli
pop
call
jnp
dec
jp
xlat
sub
jbe
out
in
stos
cltd
push
fsubl
and
sbb
subb
ss
mov
test
daa
cmp
push
orl
mov
cmp
jb
fs
loop
xchg
mov
ljmp
call
bound
or
out
mov
push
dec
shrb
imul
and
adcl
lods
or
cli
or
ljmp
mov
xchg
lahf
fmulp
inc
cs
imul
les
mov
mov
cmp
bound
xchg
fwait
xor
pushf
sahf
jno
popf
icebp
mov
std
adc
aam
sti
shrl
sbb
in
cltd
sarb
mov
pop
jo
aam
mov
sub
insb
dec
and
rcrl
mov
test
xchg
or
pop
pushf
je
or
fs
push
aas
jne
mov
das
jmp
cmp
in
pop
enter
leave
gs
adc
out
fwait
cmp
aas
gs
mov
fwait
adc
es
cmp
inc
push
push
inc
push
out
iret
mov
jl
push
cmc
xor
daa
pusha
dec
sub
jae
lret
mov
add
mov
lds
xchg
iret
outsl
ret
jbe
cmpsb
fmuls
jb
aad
jbe
sbb
dec
rorl
std
fcoms
dec
push
inc
lods
mov
jb
lea
fbstp
inc
je
pop
xor
shrb
or
xchg
aas
pushf
push
hlt
pop
cltd
leave
and
sbb
push
or
add
and
rorl
cmpsl
fidivs
in
lcall
inc
insb
fld
lock
int3
jg
mov
mov
dec
mov
test
cs
jmp
mov
dec
pushf
inc
mov
mov
ret
dec
lods
int3
scas
cwtl
repnz
inc
and
lret
xlat
les
jns
jo
inc
sub
or
xlat
push
leave
inc
mov
mov
adc
mov
mov
lret
adc
out
popa
mov
xchg
mov
in
pop
adc
and
xor
mov
sbb
lret
mov
adc
xor
sbb
jne
and
mov
aas
adc
jne
insl
in
pushf
mov
sti
out
push
aas
cmp
es
iret
xor
cli
outsb
mov
jae
imulb
push
sub
adc
add
mov
xchg
rcll
push
pop
movsb
cmp
imul
add
sarb
or
push
jl
fwait
pop
fiadds
adc
inc
mov
adc
in
mov
fnsave
cli
or
ss
inc
shr
xchg
push
push
mov
mov
pop
mov
pop
rclb
cmp
lods
jmp
push
std
cmp
pop
mov
fs
out
push
inc
push
xor
xor
cmc
int3
or
or
inc
jmp
add
jnp
inc
sub
xlat
cwtl
mov
mov
mov
test
and
outsl
mov
mov
loope
outsb
sub
loope
js
hlt
icebp
xorl
lods
push
stos
mov
push
sub
repz
jecxz
sahf
sub
fwait
xchg
pop
out
insb
lret
outsl
cmpsl
mov
pop
push
divb
enter
out
or
add
popf
popf
lret
inc
lret
and
sub
data16
dec
xchg
mov
add
mov
mov
clc
or
push
into
imul
cmc
push
inc
cs
ret
movsl
adc
xchg
into
adc
pop
rclb
icebp
adc
ds
into
je
cltd
outsb
mov
ds
xchg
iret
mov
mov
sbb
add
cli
mov
insb
push
push
xchg
mov
cwtl
push
inc
and
test
in
aas
xchg
inc
pusha
and
loopne
int
adc
pop
in
test
fdivrl
sarl
fwait
push
enter
mov
sbb
leave
sbb
mov
pop
int3
mov
and
js
lds
lahf
hlt
lea
push
std
cmp
push
jae
mov
or
test
pop
xchg
aas
in
insl
add
in
daa
das
lods
ficomps
jno
rorb
mov
pusha
mov
out
xchg
adc
mov
dec
mov
mov
in
or
notw
and
xchg
sbb
add
xor
pop
jb
nop
pop
push
pop
mov
adc
fwait
cwtl
xchg
and
out
lock
push
or
std
jp
out
in
mov
pop
push
and
icebp
aad
xchg
enter
pop
lock
gs
jp
add
fdivrl
mov
repnz
inc
lds
repnz
ja
inc
movsb
adc
dec
push
jmp
lret
xor
pop
in
imul
enter
in
cltd
lahf
call
imul
add
popf
or
inc
faddl
add
jmp
mov
inc
adc
add
pop
xchg
je
jecxz
push
sub
mov
xor
ror
inc
mov
or
pop
xchg
mov
cltd
inc
dec
out
loopne
mov
sub
or
pop
xor
xchg
neg
daa
mov
push
in
adc
pop
test
pusha
test
lods
add
push
push
pusha
pop
loopne
arpl
popa
mov
fsubr
rcll
lea
or
sub
jmp
out
dec
cmp
mov
jecxz
or
add
in
sub
mov
notl
push
movsl
stos
lods
adc
dec
dec
ljmp
sbb
scas
cwtl
stos
jp
clc
add
cmp
ljmp
jno
sub
test
daa
out
sbb
mov
int
addl
add
xor
dec
arpl
or
shr
fstpl
push
cmp
jl
popf
jmp
xor
inc
andb
fmull
or
dec
xor
cmp
xorb
mov
cmpsl
arpl
xor
cmpsl
fwait
rcll
in
jne
mulb
and
xor
in
add
shrb
push
xor
fstp
cmpsb
and
jae
in
mov
and
out
pop
push
sub
mov
mov
mov
add
shl
mov
call
bound
fwait
mov
jb
mov
insb
mov
imul
jns
jge
pushf
fprem1
mov
mov
imul
inc
or
inc
mov
push
lods
pop
mov
xchg
lahf
iret
and
mov
divl
cltd
ss
mov
mov
dec
sub
dec
stc
jnp
push
mov
fmulp
lds
sbb
repz
mov
addl
lahf
popa
jge
and
call
xor
insl
movsl
pop
jg
xchg
jb
rolb
imul
pop
into
cmp
mov
adc
int3
jns
enter
loopne
fmulp
repnz
cs
and
mov
das
dec
jns
xchg
or
jl
or
sbb
mov
fcoml
jle
dec
push
addl
sbb
mov
bound
pop
sub
push
add
in
pop
sub
cld
je
dec
sbb
outsl
je
dec
lods
jnp
scas
and
loope
daa
mov
mov
cld
or
mov
pop
cs
sub
in
add
ret
adc
inc
sub
mov
cmp
shlb
leave
outsl
test
push
xchg
or
mov
adc
loopne
mov
sub
out
mov
sbb
loopne
xor
dec
iret
push
xchg
xor
dec
jae
dec
arpl
sub
ret
hlt
lret
inc
or
dec
mov
inc
insb
sbb
rcll
push
mov
cmp
pop
inc
lds
sbb
daa
xor
mov
pop
stos
and
sub
push
movsb
lods
popa
jb
xchg
mov
lcall
xor
sub
sub
out
xchg
pusha
jae
mov
pop
daa
push
cmp
rolb
les
inc
cs
adcb
repz
dec
mov
push
add
mov
std
out
cltd
mov
jmp
sub
add
pop
add
data16
lret
mov
mov
adc
sbb
cmp
shlb
mov
arpl
shll
adc
ds
das
in
int
ja
in
dec
push
mov
sbb
stc
and
mov
fs
repnz
push
imul
add
adc
sub
addb
xor
adc
sti
fistpll
xor
aad
mov
loope
ja
nop
dec
pop
test
mov
fs
lret
push
int3
push
faddl
decb
xor
or
arpl
lea
cld
adcb
mov
and
mov
iret
xor
mov
xchg
out
inc
jb
testl
mov
and
fmuls
ss
jge
clc
scas
xor
mov
aaa
dec
lods
inc
push
sbb
cmp
xchg
lret
popf
imul
lret
pop
testl
xor
jmp
popa
ds
call
and
and
push
mov
fistps
push
cmc
ret
outsl
sub
xchg
and
les
add
push
xor
sub
stc
push
scas
dec
xorb
fadds
dec
mov
jmp
in
sub
cmp
jg
inc
xor
shlb
push
fidivl
lds
jns
mov
sub
add
mov
stc
dec
add
outsb
lds
bound
dec
popa
shl
sub
cltd
xchg
mov
pop
adc
push
loop
icebp
xor
mov
add
cmp
push
push
or
mov
xor
dec
ss
leave
jle
jge
jae
insb
xor
mov
push
dec
push
jne
scas
cmp
jnp
aam
loopne
sbb
popa
mov
repnz
push
shll
test
fimull
loopne
push
das
sbb
jo
dec
loopne
add
xchg
mov
imul
mov
test
jge
andl
xchg
cmp
mov
pop
arpl
inc
and
sub
leave
shll
xchg
in
repz
test
and
mov
xchg
out
scas
out
inc
push
dec
popf
xchg
out
pop
or
push
push
addl
xlat
cs
stc
jno
ljmp
shrb
jns
cltd
adc
shl
sbb
pop
mov
xlat
mov
and
pop
jecxz
out
shrl
inc
pusha
popa
jmp
push
hlt
xor
clc
mov
lods
stos
inc
pop
push
loopne
dec
pop
cmp
jp
pop
mov
ljmp
inc
out
and
lds
push
add
adc
sahf
lahf
adc
fs
cli
xchg
xor
int
test
mov
add
pop
scas
aad
and
lods
orb
and
cmp
jne
pop
aam
xor
pop
test
lret
insl
sahf
sub
std
sub
jb
pop
ja
mov
xchg
mov
pusha
and
jp
mov
or
mov
mov
rcr
fucomp
pop
jle
vcmpsd
mov
xchg
pop
popf
stos
sub
loope
adc
outsl
mov
aam
pop
insb
dec
sub
jo
jno
or
inc
sub
xchg
add
or
fwait
mov
xchg
dec
xchg
cmp
push
dec
add
imul
lods
fsubrs
pop
inc
dec
adc
lods
sub
jp
sbb
in
xchg
add
inc
sbb
aad
mov
dec
xor
mov
jle
dec
pushf
jo
dec
icebp
cmc
or
jl
lcall
jp
jmp
adc
pop
and
loop
ficoms
xor
dec
mov
out
adc
add
fs
lahf
andb
add
leave
cmc
push
xchg
lahf
pop
add
pushf
stc
jns
out
xor
cmc
jecxz
adc
push
add
inc
cmpsl
push
insb
push
mov
mov
jl
pop
xchg
lods
daa
lret
in
mov
cmp
in
fldt
mov
cmp
mov
cmp
pop
loope
fwait
and
add
xor
adc
xlat
push
inc
shll
lret
int3
push
es
roll
mov
dec
loop
adc
mov
popf
call
in
bound
add
inc
fs
mov
or
roll
xor
pop
pop
repz
lret
lret
call
adc
pop
xchg
add
adc
or
sbb
push
or
out
mov
out
lock
adc
fs
mov
inc
jle
push
pop
sub
jg
fcoms
cs
enter
ret
stos
sbb
aaa
loop
xor
int
sbb
cmp
cmp
icebp
jp
jle
ja
add
gs
mov
ret
cmp
lcall
fs
popf
dec
cmp
cltd
inc
and
in
add
hlt
pop
mov
push
fs
fstps
or
xchg
cmpsl
outsl
out
mov
mov
pop
dec
inc
dec
push
aas
cld
inc
in
outsl
push
adc
or
push
pusha
fsubrl
xchg
fldl
cli
pop
imul
adc
cmpsl
dec
mov
cltd
cmp
xchg
sbb
enter
jo
mov
je
sbb
and
repnz
aaa
inc
jmp
bound
loope
stos
xchg
frstor
cmp
in
mov
std
loope
pop
out
sbb
loopne
cs
adc
sub
adc
lock
or
arpl
in
adc
sbb
pop
sub
clc
lods
loop
test
sbb
dec
cmp
dec
aam
test
push
iret
std
aas
iret
out
jb
or
push
pop
insb
mov
mov
addr16
inc
xchg
in
jns
jns
lods
sbb
filds
jne
mov
xchg
ss
ss
lock
push
cld
or
xchg
push
in
adc
adc
pop
insb
push
dec
cmp
pop
rorb
mov
add
clc
das
out
outsb
push
sahf
xchg
mov
clc
lds
addr16
push
rcrb
addr16
popa
mov
and
pop
fadd
rcl
mov
jle
orb
iret
pushf
and
xor
fs
xchg
mov
jl
push
cltd
js
stos
cmpb
mov
xor
std
push
mov
rcrl
lods
cmc
pop
jne
jge
xor
rcrl
sbb
lret
jle
popf
gs
add
aas
jo
shr
sbbl
jo
scas
js
out
mov
nop
jns
ret
jnp
add
push
je
sahf
cmp
fdivp
push
js
jbe
adc
test
cmp
dec
inc
pop
imul
stc
ret
in
ljmp
ja
aas
inc
in
sbb
mov
and
imul
lods
xchg
repnz
jnp
and
fldt
pop
adc
mov
fidivrl
stc
mov
xor
movsb
hlt
jbe
roll
cmpsl
jae
lcall
mov
data16
sti
pop
jne
clc
add
lahf
fadds
rol
adc
les
mov
mov
mov
cmpsl
in
pop
dec
imul
or
ljmp
orb
push
rcrl
mull
inc
out
test
ror
clc
pop
inc
sbb
cwtl
out
imul
push
movsb
dec
mov
or
fcomi
fadds
fcoms
push
cmp
test
shrb
xchg
imul
outsb
and
fwait
mov
mov
or
cmp
or
dec
movsl
sbb
pop
add
pop
push
jp
pop
cli
jmp
pop
fidivrl
and
push
out
mov
out
sub
rcrb
repnz
add
xchg
icebp
repz
cltd
and
popf
and
lret
imul
jl
ds
lea
ret
push
push
jbe
mov
fucomip
testl
orl
jae
cmp
fmull
mov
fldcw
cli
jb
jecxz
out
cmp
cmpb
or
lret
in
pop
push
jecxz
sub
pop
push
aam
into
mov
movsb
cmp
jnp
gs
gs
lock
xor
jmp
sub
jbe
rol
push
pop
and
cmp
fs
or
loop
mov
sub
or
xor
xchg
add
xchg
dec
jg
test
adc
jmp
dec
stc
push
dec
push
outsl
sbb
sub
rcrb
mov
insl
fwait
sti
in
jns
test
xchg
aad
xchg
xchg
jae
test
mov
les
push
xorb
mov
lds
shr
sbb
in
jno
mov
loop
jnp
nop
mov
enter
inc
js
movsl
mov
arpl
insl
nop
push
pop
lret
cmp
mov
test
aaa
push
mov
sub
cmp
test
adc
faddl
idivl
mov
clc
test
leave
jns
popa
imul
out
push
sub
jns
pop
sbb
push
mov
sbb
sbb
cs
sub
and
int
insb
and
mov
movsb
ds
outsb
xor
mov
or
je
or
int3
push
outsb
mov
sbb
rcll
sbb
imul
iret
mov
cmp
pop
test
int
test
dec
and
lds
push
aad
inc
push
stc
cmp
cmp
mov
gs
mov
das
loop
out
sub
jnp
and
xor
sub
stc
into
sbb
hlt
stos
sub
dec
test
add
sub
leave
adc
sub
out
rcll
mov
jb
inc
sbb
in
repnz
loope
in
push
push
mov
cmp
shlb
cmp
mov
imul
loop
push
rorl
pop
xor
popf
out
and
sbb
jecxz
mov
mov
insl
pop
call
int3
mov
dec
aad
inc
loopne
fwait
int
je
or
mov
data16
add
fcomp
icebp
movsb
ret
sub
mov
sbbb
jle
arpl
jmp
lahf
or
aad
jmp
xchg
test
test
scas
push
adc
les
divb
ret
mov
cld
add
das
stos
xlat
insl
sub
mov
xor
dec
mov
cwtl
dec
add
rcrb
ljmp
test
sti
mov
mov
add
cltd
sbbb
sti
cwtl
dec
es
xchg
push
cmp
dec
push
scas
pop
mov
fdiv
inc
fwait
popa
fsubl
lock
adcb
and
cwtl
mov
imul
sbb
jp
clc
sub
lds
test
inc
ja,pt
mov
inc
dec
xchg
adc
fists
inc
lcall
in
add
dec
mov
in
fidivrs
xor
dec
ljmp
lds
popf
lods
std
ret
add
jl
mov
stos
or
add
pop
or
mov
mov
add
mov
mov
mov
clc
imul
fstl
loop
cmp
je
push
sbb
push
imul
inc
or
dec
cld
xor
repnz
lods
push
addr16
aas
test
mov
int3
mov
sbb
xchg
nop
push
fwait
outsl
and
lock
js
jb
inc
cli
pop
mull
jo
fadd
mov
mov
mov
mov
sbb
popf
mov
jle
pop
xchg
jnp
in
jne
out
mov
loop
rorb
stos
insb
xor
aaa
xchg
lahf
pop
pop
loop
ja
add
push
or
fcmovnu
aad
dec
out
movsl
inc
rep
mov
clc
negl
jge
sub
cld
inc
iret
dec
cs
int3
jmp
push
mov
xor
lods
movsb
xor
inc
sub
jno
test
mov
outsb
cs
mov
sub
pusha
rcrb
outsl
fdivl
ret
sbb
fnstenv
inc
mov
dec
adc
je
ret
cmpsl
cmc
pop
ss
or
dec
xchg
mov
lret
push
test
inc
std
test
faddl
cmp
addr16
pop
hlt
sub
pop
cmpsl
push
push
cmpsb
dec
jl
push
xlat
jmp
sti
ja
fistps
dec
inc
cli
aaa
fimuls
shrl
pause
mov
ds
popa
pop
stc
sbb
lods
arpl
or
icebp
scas
sbb
push
dec
fucomip
ja
pop
and
mov
push
sbb
sub
cmp
dec
dec
into
jb
out
sbbl
xchg
hlt
aam
cli
push
xor
jle
or
outsb
cmp
cmp
test
xchg
adc
pushf
push
jnp
into
pop
inc
popa
sbb
mov
sbb
jge
add
jbe
cli
dec
mov
sub
jbe
inc
dec
inc
fidivl
lret
insb
les
ljmp
mov
dec
das
mov
push
xchg
dec
aam
shlb
rcr
cmp
cmpsb
xchg
inc
enter
xlat
adc
popa
cmpb
pop
mov
cwtl
nop
xor
xchg
dec
fistpl
sbb
ret
or
dec
lea
ds
lds
pushf
adc
lock
xchg
mov
cli
mov
mov
jmp
push
push
sub
pop
mov
dec
sub
mov
movsb
mov
jns
pop
inc
jecxz
push
fidivrs
jmp
jg
push
mov
xor
jns
lahf
sbb
inc
scas
add
mov
gs
xor
and
adc
outsb
pop
dec
adc
push
pusha
out
int3
cmp
mov
imul
ljmp
cld
add
cmp
in
lods
mov
loopne
shll
nop
fsub
cmpsl
mov
ret
xor
add
sbb
push
sbb
sub
push
shlb
jnp
xchg
idiv
push
xchg
scas
xor
push
imull
notl
ss
bound
sub
add
ds
pop
cmp
enter
nop
or
scas
xor
xchg
in
xlat
les
mov
sub
adcl
loopne
js
sub
cmp
xchg
call
mov
lods
cwtl
loop
test
ficoml
leave
or
popa
test
and
aas
xchg
push
jp
dec
clc
sub
xor
xor
pmulhw
lods
cmp
ja
fwait
or
jp
insl
jo
pop
mov
lds
mov
add
pop
mov
popa
stc
sbb
rcrb
seto
icebp
orl
scas
sbb
pop
movsb
jmp
add
dec
pop
push
popf
and
sub
lods
lock
push
xlat
jbe
or
sub
mov
cmp
mov
lds
into
mov
fisttpll
dec
out
inc
fwait
mov
in
pop
pop
and
sub
dec
outsl
push
bound
mov
repz
mov
idivb
dec
cmp
adc
pop
shl
inc
pop
xor
icebp
loopne
jb
scas
ret
not
in
push
adc
xor
je
mov
cmp
aas
sbb
dec
add
pusha
cmp
hlt
pusha
imul
out
mov
popa
adc
testb
das
add
cmc
or
pop
add
mov
mov
mov
add
pop
mov
into
cmpsb
sub
ret
push
sbb
orl
adc
cli
or
fucom
scas
cld
ss
sti
mov
data16
ret
pop
loopne
loope
xchg
xchg
mov
pop
dec
mov
xor
call
cmp
fs
aad
add
cmpb
mov
rcll
leave
sbb
sub
cwtl
sbb
mov
xor
xorb
adc
dec
fcmovne
mov
inc
fimuls
dec
testl
push
xchg
imul
jl
sub
xchg
mov
ret
pop
ljmp
icebp
lret
push
in
cmp
fs
or
xlat
aam
shrl
ficoml
add
jecxz
cmc
cmp
mov
int3
cld
call
push
rcr
stc
mov
insb
test
sahf
aad
gs
push
inc
in
push
enter
jnp
add
push
lods
cmc
fs
aad
call
fsubp
das
leave
aas
rcr
mov
loopew,pt
testb
jae
sbb
cmp
pushf
cs
into
mov
ret
fs
cmp
imul
lds
hlt
call
mov
in
mov
add
mov
pop
adc
push
icebp
call
or
mov
pop
bound
aad
cltd
cmc
push
add
loopne
loop
jno
ficoml
push
movsb
adc
and
xchg
insb
cld
lods
add
pop
fadds
fmuls
lds
sbb
jo
das
inc
testb
mov
sbb
pop
sti
dec
sub
push
loop
fwait
or
mov
sub
mov
adc
push
movsl
rcr
pop
scas
shr
inc
and
mov
jle
add
xor
mov
outsb
sahf
sub
int
add
push
mov
iret
jb
cmpsb
pop
aam
sahf
aaa
dec
imul
popa
insb
rcll
push
xor
mov
adc
inc
jle
xchg
fs
push
addr16
pop
push
fwait
and
cmc
push
mov
adc
add
bound
and
test
lcall
or
scas
sarb
pop
add
cmc
mov
cli
in
cmc
xchg
fdivl
mov
dec
ret
inc
sbb
faddl
es
fcoms
xchg
imul
hlt
adc
cwtl
mov
pop
jbe
cmp
hlt
insl
cmpsl
adcb
sti
push
dec
mov
ret
cmp
gs
cmp
push
xchg
iret
xor
inc
lds
jecxz
loope
orb
push
dec
sub
cmp
adc
mov
loope
xchg
out
in
popf
and
mov
cmp
adc
mov
jae
jo
fsubrl
and
mov
push
ror
xchg
shrl
call
jl
xor
push
repz
repz
xor
test
jo
insl
mov
aaa
push
adc
loope
mov
and
adc
fst
mov
pop
imul
aad
mov
xchg
lds
outsl
and
into
ljmp
ret
or
mov
cmp
push
push
pushf
xor
in
pop
sbb
sub
frstor
pop
mov
adc
nop
sbb
cmp
mov
and
mov
fimull
or
stos
jno
inc
push
in
scas
arpl
push
sub
pop
les
adc
incb
arpl
pop
mov
push
cld
into
in
loop
xorl
pop
adc
ljmp
push
addb
out
insl
int3
imul
push
fadds
fisubs
sub
sti
cmpsl
ror
sbb
add
mulb
or
popa
lcall
xor
movsb
roll
fstpt
negb
das
cmp
into
push
mov
out
ss
push
rcr
pusha
pusha
popa
movsl
or
iret
mov
out
xor
loopne
sbb
add
dec
in
dec
add
or
outsl
jl
and
int3
adc
mov
test
xorl
in
fstl
popf
andl
jo
ret
es
and
stc
pop
fwait
aad
xorb
add
movsl
in
cmp
lahf
in
push
loopne
inc
push
flds
xor
lods
sbb
call
decl
test
out
fisttpll
sub
mov
jle
call
lret
cmp
xchg
repz
sub
adc
jle
xchg
inc
pop
jnp
jno
das
pusha
mov
in
xchg
ljmp
dec
xchg
pop
jle
loop
dec
lcall
sub
in
ret
or
sub
loop
jns
sub
fdivs
loop
in
sbb
sbb
adc
mov
rorl
pop
sbb
push
sbb
mov
pop
jecxz
movsl
dec
arpl
lea
add
fwait
xchg
dec
lahf
cld
out
cmp
jle
dec
cld
sti
cmp
jl
test
cltd
xchg
dec
mov
pop
pop
pop
sub
inc
mov
dec
fmull
xchg
inc
pop
jg
add
sbb
sbb
sarb
jmp
pop
pop
pushf
pop
cmc
aad
les
aad
jae
fldl2t
add
nop
loopne
divb
sbb
test
cmp
jmp
dec
inc
movsl
cli
and
lock
int
xor
jmp
je
mov
adc
sahf
xchg
pushf
mov
or
scas
jno
cli
mov
add
adc
sub
pop
iret
push
dec
cld
enter
stos
push
test
push
mov
aas
dec
and
add
stc
sbb
cmp
mov
es
enter
jg
pop
xchg
mov
mov
nop
push
sbb
in
imul
jle
lock
rcrl
cs
dec
rolb
mov
js
leave
dec
loopne
test
imul
aaa
loop
scas
popf
ror
insl
imul
fwait
and
nop
adcb
rorl
push
add
in
mov
cli
xchg
loopne
push
test
pop
push
insl
jp
jb
mov
sub
xchg
mov
int
mov
pop
filds
hlt
loopne
sbb
adc
mov
push
adc
fdivr
sbb
sub
repz
addr16
cmp
adc
jae
dec
mov
sbb
push
cmpsb
testl
fildl
lret
nop
cmp
ret
repnz
xorl
inc
push
pop
add
push
mov
cli
push
orb
cmp
dec
push
pop
inc
fsubl
add
jnp
dec
lret
jno
dec
dec
call
cld
mov
jmp
pop
mov
daa
or
mov
dec
rcrl
test
jne
orl
call
add
xor
pop
sahf
das
or
inc
dec
pop
out
sbb
sbb
stos
imul
cmp
pop
pop
sbb
cld
mov
lahf
mov
push
sub
ljmp
insl
les
cmp
lods
mov
push
push
int
jnp
ret
aad
aad
jge
or
aaa
out
mov
call
mov
sahf
aad
sbb
adc
leave
test
fcomp
sub
cmp
lods
xlat
stc
les
adc
cmp
xchg
adc
dec
adc
lea
sub
ret
lret
cmp
jmp
out
dec
jae
in
repnz
jns
adc
jp
test
into
sub
sahf
shrb
mov
sbb
sub
arpl
aam
or
ret
cmp
cmp
lret
call
ret
stc
dec
loopne
sbb
aaa
sbb
jns
clc
cmp
adc
dec
add
inc
jnp
out
loope
xor
imul
jge
fs
test
mov
mov
mov
cld
inc
mov
pop
aas
imul
decb
xor
icebp
cli
hlt
out
jb
xchg
mov
lcall
fiaddl
addl
jge
sbb
cmp
add
pop
mov
aaa
std
stc
jae
inc
ret
leave
or
xchg
rolb
cmpsb
mov
xchg
lret
int3
add
mov
iret
pushf
sahf
shlb
int
insl
jle
cmpsb
jno
pop
shrl
imul
stc
addr16
xchg
mov
mov
shl
cltd
xchg
mov
stos
pop
lea
jge
pop
in
data16
inc
shll
push
mov
sub
dec
es
and
xchg
add
pushf
fcoms
or
mov
inc
or
lods
fwait
cld
clc
mov
jne
pop
negl
cmp
fsubl
adc
xor
clc
and
ficoms
jle
ret
xor
cmc
rorl
fidivs
dec
mov
sti
push
imul
jo
xchg
or
cmpsl
push
outsl
test
adc
push
push
ja
test
sbb
cmp
sub
sbb
adc
cli
call
sub
movl
mov
outsl
rcl
adc
or
jp
adc
stc
and
sbb
cmp
es
push
outsb
fidivrs
cmp
jno
jmp
dec
decb
jl
cmpb
dec
dec
adc
je
outsb
mov
fildll
mov
mov
sbb
dec
icebp
xchg
das
mov
sub
mov
push
jae
les
aad
xchg
jg
mov
pushl
ret
mov
mov
add
loope
xchg
sbb
aam
xor
or
int3
lock
and
sbb
push
xlat
adc
mov
sarb
movsb
adc
sbb
add
leave
adc
cmpsl
mov
adc
aaa
sub
sub
cli
jmp
cmp
pusha
loop
adc
ret
ljmp
mov
or
pop
rorb
adc
mov
stc
jecxz,pt
pop
dec
cmpsl
mov
cmc
push
mov
sahf
inc
cmpb
push
test
adc
fs
inc
cmp
pop
cmp
xchg
insl
test
shll
sbb
aaa
sbb
lds
iret
das
and
cli
and
xchg
imul
fsubrl
bts
xor
mov
add
lods
pop
ljmp
xor
mov
sub
outsb
test
outsl
mov
push
mov
data16
cli
pop
jmp
sbb
jbe
xor
dec
lret
lock
jno
subl
mov
lcall
iret
addr16
xor
mov
int
add
add
call
sbb
addr16
jg
push
mov
in
movsl
pop
rcrl
mov
push
data16
mov
jb
es
pop
pop
clc
sub
dec
fwait
pop
dec
sbb
iret
adc
scas
sbb
and
xor
loope
jmp
lods
cmp
sbb
xor
imul
out
cld
sub
dec
fwait
cmp
jnp
repz
imul
loop
mov
or
ret
jnp
xchg
popf
xchg
sbb
or
mov
dec
test
jae
aas
xchg
test
lock
popa
out
mov
mov
inc
xor
xor
push
insl
sbb
loope
sub
jo
pop
xchg
push
shlb
fidivl
xchg
cmc
dec
in
push
loop
dec
mov
movsl
sbb
sub
iret
jg
rcll
cmpsl
pop
int
test
bnd
mov
cmpsl
sbb
pop
addr16
je
add
shll
out
movsb
jle
and
jmp
imul
nop
and
mov
cmp
jmp
jns
lods
jo
push
cwtl
loopne
xchg
cmp
clc
mov
mov
sbb
pop
clc
lea
mov
dec
std
mul
outsl
dec
jns
subl
test
add
lds
gs
inc
sub
out
inc
mov
xor
sbb
mov
xchg
scas
xchg
inc
push
xor
jle
rolb
add
roll
xchg
sbb
mov
sahf
or
lods
push
mov
or
push
pop
mov
outsb
lret
mov
adc
sbb
add
push
stos
mov
push
add
out
in
jb
fs
fstpl
and
jge
lds
test
hlt
xchg
inc
cli
ja
ljmp
in
mov
jmp
lret
inc
sub
je
pop
fnsave
adc
lcall
jle
dec
loopne
push
and
loop
lea
adc
dec
subb
in
add
adc
outsb
jne
mov
mov
xchg
xchg
loopne
das
hlt
xchg
jge
call
cmp
mov
pop
adc
popa
jmp
mov
sti
xchg
jle
adc
into
or
in
push
inc
repnz
dec
xchg
mov
sbb
and
filds
repnz
adc
cmp
xchg
movsb
sbb
mov
jmp
fstps
pop
inc
xchg
mov
out
mov
inc
repz
call
jne
shl
mov
add
out
adc
int3
xchg
lock
clc
call
inc
push
xor
or
dec
jo
aaa
insb
cmp
adc
xor
xor
jbe
scas
int
imul
push
pop
pop
or
mov
dec
pop
and
xchg
adc
ss
xchg
test
jl
pusha
cs
adc
mov
or
mov
jbe
push
sahf
arpl
push
fmul
les
scas
sub
ss
xchg
imul
int
jnp
cmp
xchg
shlb
inc
cmpb
sbb
mov
and
mov
inc
std
lods
jbe
push
mov
xchg
shr
lret
lret
cmpl
lods
pop
test
push
dec
mov
adc
cli
testb
lock
stos
push
mov
lods
stc
icebp
xor
fdivs
push
decl
and
ds
sbb
lods
or
mov
pusha
mov
ds
jle
mov
jl
testl
cmp
cmp
and
mov
fsubs
lret
mov
jg
popa
popf
cmp
fs
ret
hlt
repz
jge
jnp
cltd
sbb
or
fisttps
mov
loopne
cmpsl
aas
push
mov
test
rcll
cmp
movsb
ret
insb
nop
fwait
mov
pop
push
pop
mov
and
lds
stos
test
stc
push
lret
lea
cli
mov
xor
data16
inc
lahf
sub
loop
lea
inc
pop
dec
add
std
jle
popa
mov
mov
repz
and
inc
cltd
mov
and
push
xor
xchg
dec
adc
mov
test
jp
add
hlt
mov
sbb
push
cwtl
pop
lahf
data16
adc
push
xlat
xchg
ret
inc
je,pn
outsl
mov
xor
jg
or
lahf
test
rorl
jmp
ret
ret
divl
or
lea
xor
testb
xchg
inc
pusha
dec
push
add
jnp
sub
or
push
adc
lock
cltd
movb
add
lret
mov
mov
jecxz
lahf
shr
push
cltd
rclb
gs
xor
push
mov
lret
clc
outsb
pop
into
movsl
sti
add
popa
xor
subb
out
push
sbb
inc
xchg
orb
mov
into
cmp
outsl
test
fistl
das
ss
add
mov
repz
pop
movsb
movsl
sahf
aaa
outsl
and
push
and
xchg
icebp
pop
xor
jne
aam
std
iret
xchg
mov
in
int
aas
cltd
jbe
xor
jbe
jge
insb
push
mov
adc
lret
mov
insl
loopne
adc
mov
dec
xchg
cmpb
mov
scas
stos
sbb
xor
mov
stos
xlat
push
repnz
xor
push
mov
scas
push
jb
add
add
inc
cmp
xchg
xchg
rcrb
outsb
das
mov
xor
repnz
add
notl
sbb
pushf
fcoms
movsb
decl
add
in
xor
std
mov
xchg
xor
movsb
enter
ret
test
dec
push
ja
mov
orb
mov
test
insb
fsubrl
dec
arpl
gs
cmpsb
fdivrl
push
inc
xchg
lret
xchg
sub
cmp
fprem1
mov
mov
jns
mov
iret
jno
rcl
mov
dec
push
repnz
cli
jnp
loope,pn
and
leave
setg
push
es
or
int
mov
xor
test
xor
push
sbb
shll
js
lock
adc
ret
push
mov
rcll
adc
xchg
mov
dec
test
mov
mov
cwtl
mov
stos
pop
fisttps
jp
call
js
xchg
pop
dec
daa
gs
and
lahf
mov
sbb
fnsetpm(287
xor
fisttpl
in
sbb
and
cwtl
lock
clc
mov
mov
testb
lods
sbb
pop
inc
mov
mov
add
movsl
pushf
fdiv
xchg
lods
xor
push
int3
adc
xchg
ds
push
add
push
pop
lods
xor
das
mov
mulb
movsl
lret
push
ljmp
cmp
out
jae
pop
mov
inc
nop
xchg
roll
mov
inc
lock
cmp
mov
inc
in
popa
aam
lods
mov
pcmpgtb
mov
pop
pop
sti
imul
jbe
movsb
gs
sbb
scas
mov
sub
cwtl
dec
cmpsl
movsb
xchg
cmp
pop
lods
outsb
or
bound
popf
in
xor
aad
xorl
lods
fwait
push
insb
xor
push
fists
or
in
fistpll
fidivs
sub
sub
mov
ret
dec
sti
mov
out
fldenv
xor
or
je
jmp
aam
fidivs
push
or
sub
repz
push
sbb
hlt
jne
push
fimull
xchg
inc
js
xlat
and
pop
mov
xchg
and
xchg
sarb
jmp
lods
jbe
or
push
ja
out
adc
daa
push
mov
testb
aas
fimull
int3
push
scas
xor
mov
outsl
insl
or
aad
aad
jae
xor
lods
mov
lea
or
das
mov
pop
dec
jecxz
ja
int3
inc
loope
sbb
pop
insb
divb
cmpsb
and
int
into
fs
sub
mov
xor
ss
ds
das
sbb
aad
push
inc
xchg
fwait
sbb
lods
add
aad
pop
sub
rol
int
pop
push
stos
add
push
or
std
push
jbe
push
xchg
inc
es
pop
pop
stos
pop
scas
pop
xchg
lea
lahf
pop
lahf
cmp
pop
nop
fmuls
loopne
mov
inc
push
push
les
mov
js
xchg
out
cmp
ds
popa
jo
xchg
sub
cmp
mov
movsl
test
sub
sub
je
mov
push
mov
nop
fimuls
lock
mov
rep
cld
arpl
xor
pop
ret
cmp
lods
adc
xlat
shlb
in
and
inc
xor
dec
jnp
sbb
nop
stc
inc
test
add
rolb
addr16
sub
and
cmc
jbe
push
cmp
mov
jnp
cltd
aaa
add
and
dec
cld
adc
inc
push
in
bound
sbbb
mov
mov
int3
pop
pusha
inc
jg
jo
sub
jb
imul
insl
dec
push
jmp
popa
pop
cmpsl
or
jmp
jmp
loop
lods
ror
aam
add
das
rcll
xor
mov
into
jg
or
mov
inc
cmc
sbb
out
mov
cmpsb
or
sub
mov
inc
jmp
xor
pop
dec
dec
dec
add
js
rclb
std
fs
int
cmp
mov
xchg
insl
enter
mov
and
dec
mov
mov
out
push
adc
push
sbb
outsb
jae
in
js
outsb
push
adc
xchg
jno
jmp
dec
cmpsl
lea
popf
fidivl
sbb
call
xor
dec
mov
loope
xchg
pusha
lods
dec
inc
gs
int3
mov
lods
imulb
icebp
insl
int
int
lcall
mov
negl
jecxz
divb
push
test
sarb
out
lret
xor
mov
add
xchg
and
test
sbb
icebp
mov
mov
aam
lods
or
out
or
std
add
sub
es
mov
loopne
insb
inc
mov
push
sub
inc
sub
jge
mov
das
andl
mov
mov
and
jne
push
adc
mov
sbb
bound
sbb
sub
inc
lret
pop
cwtl
sbb
mov
or
loope,pt
inc
jmp
outsl
pop
xchg
and
xchg
xchg
cmp
insl
or
popf
test
or
mov
cmpsb
dec
cmp
mull
pop
inc
ds
sti
shlb
cmp
inc
std
xchg
inc
xchg
mov
fwait
inc
mov
dec
stos
shl
jp
jmp
mov
pop
xor
cli
sti
mov
xchg
adc
pop
faddl
dec
xchg
mov
mov
jp
bound
insl
xchg
repnz
mov
fcomp
mov
pop
loopne
jns
push
shld
roll
sub
or
and
aaa
addr16
popa
daa
outsl
data16
add
cmp
fs
mov
shrl
push
or
nop
testb
push
push
gs
je
sub
loopne
lret
xchg
cli
push
dec
out
push
or
decl
dec
dec
nop
xor
push
adc
xor
out
dec
and
js
inc
adc
arpl
scas
call
mov
jne
lret
andl
mov
lahf
sbbl
imul
cs
imul
add
jns
adc
inc
xor
xor
cs
test
push
push
jle
sbb
test
xor
mov
fwait
movsb
pop
je
jle
mov
loopne
mov
pop
jns
loop
out
mov
mov
mov
pop
rorb
mulb
xor
pop
jmp
xchg
and
iret
cmp
cmpsl
ss
idivl
hlt
mov
mov
xlat
fcoms
popl
out
push
dec
mov
nop
cwtl
adc
jmp
clc
push
cli
mov
dec
mov
push
loopne
pop
mov
push
sarb
or
push
cmp
cld
fiaddl
and
pop
mov
cld
dec
sti
cmp
cltd
xor
sahf
arpl
or
fmuls
out
je
dec
lret
sbb
loop
mov
shll
cmp
stos
mov
mov
mov
inc
pusha
jl
mov
adc
in
mov
js
jb
nop
mov
push
ret
andl
xchg
mov
ret
test
ret
jecxz
lock
arpl
shrb
cmp
jnp
jp
fcoml
cld
xchg
adcb
iret
xchg
ret
cli
sub
mov
stc
add
mov
or
fbld
loope
rclb
jae
cld
cmp
shl
sbb
mov
iret
int
jns
or
lahf
mov
sub
push
fistps
hlt
adc
xchg
ds
jo
push
es
dec
ret
adc
mov
shr
xchg
rcr
pop
inc
mov
mov
mov
jp
out
pop
in
mov
cmp
in
jg
jno
orb
xchg
loopne
xor
movsb
jecxz
push
in
in
jg
push
cmp
loop
negb
pusha
dec
xchg
xchg
ja
addl
stos
mov
cmp
add
js
nop
add
inc
and
mov
jle
data16
add
pop
rclb
jmp
jns
jo
fdivl
mov
adc
cmovne
out
aad
scas
cmp
stos
clc
stos
jb
adc
out
add
in
out
cmp
jbe
out
mov
or
test
test
xchg
addl
insl
cwtl
adc
fldenv
fwait
popf
fimull
insl
fbld
sub
and
jno
cmp
mov
mov
lcall
mov
fisttpll
cmpb
jo
mov
xchg
or
lods
xor
push
mov
inc
aam
mov
imul
jp
sarl
jmp
out
mov
xchg
push
iret
xchg
addr16
adc
fwait
imul
adcl
sub
pop
lods
xchg
or
jne
test
pop
mov
fs
push
cli
add
or
xor
mov
dec
jg
repz
xchg
sub
add
enter
cmp
xlat
cmp
mov
test
movsl
mov
fs
movsb
xlat
or
out
cs
jg
pop
xor
ficoms
or
and
sub
pop
loope
or
xor
jno
cmpsb
jg
jo
pushl
sub
push
outsl
mov
out
xchg
mov
insl
xchg
lret
push
shrb
pop
out
push
cmc
push
js
fisubrl
leave
out
lret
mov
cmp
mov
cmp
add
insb
and
mov
push
bound
out
jge
sbb
add
orb
mov
mov
pushf
outsl
push
or
mov
add
out
mov
lods
mov
jmp
mov
je
pusha
xchg
and
fs
xchg
and
push
fwait
add
mov
insl
mov
lods
pop
ja
loopne
jg
fs
pop
add
mov
mov
dec
loope
adc
sbb
adc
inc
aam
mov
repz
cmp
mov
adc
roll
cmp
sub
incl
aad
addr16
das
lcall
fmull
lcall
push
bound
cld
pop
int3
inc
xor
lret
shrb
inc
xchg
push
sbb
pop
jle
pushf
and
cmp
add
push
push
jnp
stc
inc
jne
mov
jae
inc
in
xchg
sbb
stc
gs
jmp
pop
test
ret
sbb
pop
stc
sub
popf
cmp
int3
stos
hlt
ja
call
cli
aam
repnz
push
mov
push
adc
jecxz
add
mov
pop
add
out
mov
icebp
adc
sbb
inc
pop
lods
inc
push
mov
insb
stc
mov
mov
pop
cli
jns
and
sub
xor
loopne
pop
xor
test
data16
mov
xor
hlt
add
jnp
hlt
aas
dec
add
xlat
inc
sbb
push
mov
push
js
mov
pop
push
jno
xchg
das
adc
gs
std
pop
mov
aam
or
jle
sbb
in
jne
test
mov
scas
jae
inc
lahf
out
push
jg
adc
xor
or
xor
and
dec
ds
outsb
inc
mov
ret
xlat
in
and
xor
mov
sub
scas
cmp
jl
rclb
sbb
pop
imul
mov
test
add
inc
jae
popf
dec
rolb
pusha
sti
mov
xor
cmp
cld
jp
fisubl
fs
mov
ja
pop
mov
xchg
bound
mov
inc
xor
stos
jp
fisubrl
shll
sti
cld
pusha
push
fcomps
sbb
jl
ds
insb
mov
test
pusha
xor
imull
clc
xchg
je
ljmp
push
orl
push
jae
push
mov
push
punpcklbw
jns
out
cmpsl
fisubl
push
push
push
push
jns
pop
cmc
mov
cmpsl
mov
bound
leave
mov
loope
lcall
fildl
enter
cmpsb
pop
or
xchg
js
ja
enter
movsb
insb
ljmp
sub
add
mov
popl
outsb
adc
mov
mov
clc
jnp
mov
jmp
xchg
jecxz
outsl
stos
out
test
mov
adc
pop
out
pop
inc
jge
pop
sbb
inc
pop
push
mov
xchg
addl
shll
xlat
bound
jl
jmp
sarb
mov
mov
outsb
je
call
jecxz
leave
clc
adc
mov
xchg
mov
fidivl
lret
or
popa
shr
xchg
push
push
and
movsb
add
cmp
push
dec
sbb
mov
fsub
mov
dec
push
pop
inc
movsb
dec
mov
cmc
je
shlb
movsb
mov
jmp
push
push
inc
pop
mov
out
std
mov
push
jmp
addl
popw
sarb
daa
pop
push
test
std
jo
mov
fisttps
ficoms
fsub
in
xchg
push
arpl
ja
pop
aam
mov
ret
pop
add
aaa
rcll
mov
jae
scas
sti
inc
pause
dec
hlt
int
adc
call
arpl
sbb
adc
push
inc
inc
and
dec
mov
jbe
pusha
mov
or
dec
xchg
in
push
add
lea
inc
mov
imul
pop
cmpsl
shll
cld
adc
scas
hlt
add
jnp
dec
mov
cmp
mov
adc
jp
aad
inc
xor
daa
jmp
insl
ds
int3
push
mov
test
rcrb
jno
push
cmp
push
ret
mov
xchg
repnz
rcrl
not
rcrb
loop
out
lods
fcoml
adcl
pop
jb
jg
das
pxor
daa
clc
cmc
pop
ljmp
cmp
aad
pop
pop
mov
ss
mov
icebp
loopne
cld
loopne
pop
lret
push
lahf
push
stc
dec
test
jbe
inc
inc
insb
mov
outsl
jbe
enter
mov
popf
adc
dec
aas
ret
shrl
ret
add
aas
scas
clc
std
hlt
out
inc
hlt
sub
ss
mov
je
xchg
mov
sub
mov
mov
mov
lds
movsl
cmp
cmc
adc
and
adc
negb
mov
inc
call
hlt
popf
pop
stos
test
jne
cmc
loop
mov
jmp
clc
pop
out
ret
pop
add
pop
mov
mov
mov
adc
sbb
adc
shlb
xchg
bound
dec
jecxz
mov
rcrl
fadd
dec
pavgw
mov
ja
add
mov
fimull
jo
pushf
movlps
clc
lea
inc
push
jmp
cli
dec
icebp
in
loop
call
and
or
insl
mov
int
in
lret
pop
or
jb
in
aaa
hlt
lods
dec
movb
jg
ret
jmp
pushf
jo
xchg
mov
sub
cmp
test
push
cmpsl
xchg
mov
xchg
les
pop
add
data16
in
in
dec
cwtl
in
lret
movsb
jg
jno
sbb
stos
and
cmp
mov
push
and
sub
push
xlat
icebp
ja
adc
jae
add
mov
movsl
adc
in
fmull
into
jp
cmp
aas
dec
jge
adcb
add
mov
outsb
int3
mov
or
test
sub
movb
das
aad
xor
pop
rcl
test
test
jmp
inc
xchg
dec
es
ror
dec
int3
std
fimull
xor
stos
sahf
aam
out
xor
nop
dec
xor
jmp
sti
push
ljmp
xor
cld
add
pop
pop
or
cli
jmp
loope
fistpl
loop
mov
je
jl
mov
or
in
adcb
xchg
add
adc
sbb
jg
stc
jle
clc
ficoms
daa
test
lock
testb
sbb
es
xchg
push
xor
cmp
addl
insl
loopne
sbb
cmp
js
jbe
repz
out
lods
pusha
ja
lret
decl
fcompl
xor
inc
push
ret
and
sbb
xchg
test
dec
cmp
daa
jbe
testb
lea
nop
fimull
inc
clc
sbb
sti
jle
mov
ror
push
push
pushf
lock
mov
sub
notl
sbb
out
dec
out
in
daa
shll
lahf
out
iret
out
fisttpl
push
out
js
loope
xchg
pop
sub
push
mov
adc
test
push
mov
mov
aad
shrl
inc
jecxz
fwait
mov
xchg
jns
sub
xchg
cmpsl
cmp
add
dec
push
cmp
lcall
adc
aaa
mov
cltd
lock
cwtl
dec
imul
test
stos
ds
push
or
lret
ret
fstl
dec
cmpsb
sbb
mov
pop
in
xchg
out
in
les
hlt
add
add
xchg
fs
pop
mov
cmpsl
sbb
push
pop
fisttpll
jg
lea
loopne
inc
add
enter
movb
push
or
add
shrb
push
dec
cmpsl
push
jne
lods
mov
inc
out
lea
adc
es
cmp
data16
iret
sub
fld
out
test
lods
test
xor
jmp
imul
cmp
cwtl
out
cmpsb
scas
frstor
loope
ds
clc
sbb
ds
pop
cmp
test
push
fistpl
out
jbe
shrb
bswap
mov
fstl
push
and
icebp
mov
fldcw
or
fnsave
je
add
dec
push
push
jns
jle
sbb
adc
xorb
leave
lods
cmp
sbb
xchg
dec
cmp
pop
dec
dec
or
mov
lds
aas
andb
test
out
cmp
test
pusha
ss
or
add
mov
sbb
into
mov
or
pop
fistpll
inc
jle
xchg
fisttps
aad
cmp
divl
mov
dec
leave
cld
cmpl
mov
xchg
jnp
pop
mov
cli
pop
jg
in
scas
rclb
stc
das
mov
mov
pushf
or
push
imull
stc
aas
incb
sbb
dec
push
sbb
push
or
nop
push
shll
dec
cs
pop
dec
and
xchg
sahf
cwtl
inc
inc
shlb
repnz
add
and
insb
cld
add
mov
or
lods
push
mov
ss
ret
fistps
pop
rcrl
mov
hlt
and
push
sarb
inc
js
fimuls
das
or
add
sar
jl
daa
xchg
repz
frstor
push
mov
outsl
les
xlat
mov
aad
jne
popl
fidivrl
call
ret
loope
sar
sti
pop
sbb
xchg
xor
js
aad
fs
push
sahf
lret
mov
test
ljmp
push
sti
fists
xor
xchg
xor
les
std
in
add
ljmp
jle
mov
lock
xor
fldenv
xchg
movsb
popa
loop
dec
les
lods
test
ja
loope
mov
stos
xchg
add
popa
xchg
icebp
cs
dec
call
jg
mov
xchg
pop
jno
or
leave
mov
jo
or
jno
xchg
sub
les
mov
mov
add
inc
xchg
imul
int3
repz
fcoms
dec
pop
stos
mov
out
add
mov
insl
and
sti
mov
lods
addr16
inc
add
ljmp
js
add
jmp
inc
mov
push
mov
push
fs
cli
xchg
mov
mov
inc
lret
idivb
inc
fwait
pop
mov
mov
ss
ds
je
mov
xchg
adc
inc
xchg
sub
lea
inc
xchg
sahf
pusha
and
push
mov
movsl
lds
xchg
popa
das
in
fcompl
xchg
jge
dec
xchg
arpl
bound
mov
pop
popf
push
nop
inc
andl
fdivl
cmp
mov
out
pop
pop
pop
fsts
jp
shrb
test
push
or
imul
mov
outsb
mov
popf
lea
dec
adc
sub
jp
cmp
pusha
jp
fwait
pop
mov
fcomps
sub
xor
or
inc
hlt
fidivs
fdivrl
les
loopne
mov
push
pop
mov
into
ror
push
jecxz
ss
in
in
lods
pop
js
mov
push
sbb
loope
jge
mov
imul
iret
sbb
push
mov
or
je
cmp
mov
insl
leave
sbb
mov
psrlq
xor
call
rolb
dec
out
and
xchg
iret
push
or
adc
les
push
shll
jo
add
stos
inc
enter
push
add
cmp
enter
loope
xchg
xchg
fimuls
nop
jg
inc
push
mov
jo
pop
cwtl
dec
cmc
imul
xchg
outsl
jb
pop
andl
pop
mov
jmp
das
inc
inc
cwtl
hlt
mov
sahf
sbb
jns
in
cld
push
ja
sub
pop
mov
stos
les
lds
pop
popf
inc
push
mov
dec
insl
cmp
int
pop
add
add
sub
mov
mov
inc
sbb
fstps
push
adc
jno
mov
sti
sbb
add
ljmp
inc
ljmp
loop
lret
adc
sub
loop
push
mov
mov
fdiv
jae
and
jo
test
add
inc
cmc
mov
fildll
filds
movb
sbbl
dec
xlat
push
popa
lret
arpl
pop
push
aas
fildl
jge
push
and
mov
dec
fiaddl
or
lods
ds
jmp
lret
mov
push
xor
sub
mov
cmp
or
cmc
lock
rcl
and
jmp
jg
rolb
push
xchg
and
dec
push
arpl
insb
mov
adc
xlat
ret
xchg
lahf
xchg
frstor
mov
loop
fidivs
pop
jo
inc
adcb
push
aas
popf
int
or
jl
jno
cli
mov
lahf
int3
in
dec
cmp
icebp
sub
jmp
push
adc
mov
cs
js
jno
cwtl
fidivrs
jecxz
push
notl
ljmp
popf
sbb
jbe
aad
aas
cld
bound
adc
cmc
add
jae
js
outsl
cmp
mov
mov
and
out
fstpl
fldt
andb
movsl
addl
pop
pop
lds
jge
add
ficompl
adc
cmpsl
or
ja
es
sub
iret
imul
ficompl
mov
repnz
sbb
es
hlt
in
idivb
rcl
adc
es
inc
inc
fcoms
je
push
pop
lahf
gs
aaa
iret
rcll
popf
mov
hlt
stc
dec
gs
sti
inc
and
cmp
inc
lret
add
sub
repz
inc
das
pushf
out
lds
call
xor
nop
in
mov
mov
sarb
es
div
dec
mov
test
andl
xor
inc
aaa
scas
pop
test
xor
jns
fsubrl
sbb
add
in
add
or
fs
dec
adc
jp
test
or
dec
in
jecxz
adc
arpl
js
or
dec
aas
int
adc
pop
es
movsb
push
test
add
mov
mov
push
ret
mov
cli
mov
hlt
and
lret
inc
jge
inc
stc
scas
nop
insb
adc
iret
pop
fdivs
sub
jbe
jb
mov
jl
push
ss
jae
ljmp
pop
popa
test
out
test
push
or
dec
inc
add
cmp
cs
cmp
cmpsl
aas
sti
aas
or
mov
in
cltd
push
int3
pop
daa
repz
ja
aad
push
push
cmpsb
fscale
jge
fyl2x
inc
or
cli
imul
imul
sti
and
mov
pusha
sbb
int
pop
std
aaa
sbb
cmpb
ds
pop
jecxz
cmp
dec
cmc
jno
popf
mov
cmp
sbb
cmp
and
test
ds
adc
out
sarl
pop
pusha
fcomps
adc
outsl
mov
pop
cld
fs
fmul
cmp
sub
sarb
jb
pop
inc
bound
stc
lock
das
repz
mov
arpl
sub
mov
je
mov
xlat
daa
push
or
ret
xor
dec
mov
fstps
jno
idivb
in
mov
lret
pop
fwait
mov
sbb
das
inc
mov
push
mov
shl
adc
sub
sbbl
fisttpll
pop
and
lret
sbb
inc
dec
cmc
ret
dec
jns
pop
ficompl
imul
outsl
xchg
das
xchg
push
and
inc
das
inc
push
jle
out
inc
xchg
enter
ss
les
cli
pop
sbb
dec
mov
nop
pop
jne
dec
cmpsb
and
fisubs
cwtl
xchg
cmp
andl
sti
lods
sbb
andb
outsb
les
pusha
mov
mov
dec
mov
aad
fistpll
inc
sbb
jp
lods
xchg
outsl
sbb
xor
mov
sub
cmpl
mov
fsubp
addl
bound
dec
cmp
inc
popa
push
je
cmpsl
xorb
xor
push
test
jbe
xchg
mov
hlt
xchg
scas
sbb
pop
ud0
pop
test
inc
cltd
rolb
adc
xlat
and
sbb
fists
mov
push
jp
adc
aad
jp
call
push
das
and
fimuls
pop
sbb
xor
mov
push
mov
imul
cmp
push
mov
fdiv
addb
cmp
adc
bnd
cmpsl
jmp
adc
test
in
pushl
push
xchg
movsl
sbbl
ja
adc
jp
gs
add
mov
cmp
push
xor
pop
cmp
sub
sbb
mov
movsb
cmp
xor
xchg
xor
cmp
mov
sub
test
fistl
or
inc
push
mov
adc
xchg
out
push
cmp
int
cmp
push
mov
add
mov
jnp
cld
inc
mov
xor
outsb
aad
ret
sbb
add
xchg
mov
ret
test
aad
repz
mov
lock
flds
loope
adc
repz
outsb
or
add
test
jne
fstpt
bound
cmpsl
mov
dec
jae
insl
push
mov
outsl
push
movsl
repnz
adc
adc
add
xor
movsb
pop
or
xchg
adc
lods
mov
loope
or
insl
fwait
das
push
xlat
inc
push
cli
sub
or
imul
stos
mov
ss
and
pop
dec
pop
test
add
imul
shlb
mov
mov
sbb
jnp
lods
xor
jl
fildll
mov
jmp
imulb
je
cmpl
out
dec
cmp
call
add
test
adc
lret
sub
adc
in
sub
cmp
insl
or
idivb
add
mov
mov
test
pop
std
fcoml
les
lea
inc
adc
int
pop
dec
mov
push
popf
mov
and
ret
inc
imul
lods
pcmpeqd
xchg
cmpsl
daa
cltd
and
cmp
filds
xor
bound
sbb
inc
xlat
or
ror
lods
dec
and
add
ss
xorl
inc
popf
int
insl
fmuls
push
mov
adc
add
fwait
mov
lahf
push
movsb
mov
scas
xor
cmp
fistl
sub
lock
shl
jle
std
pop
aad
shl
lods
mov
negb
loope
lret
popa
sub
les
and
dec
lcall
ret
cmp
int
and
arpl
sbb
push
add
dec
lods
repnz
sub
jmp
leave
xchg
outsb
adc
lret
pop
pop
test
mov
push
loop
or
lret
test
sub
fiaddl
xchg
mov
add
loopne
pop
and
loop
ljmp
xor
pop
test
mov
ja
sbbl
dec
inc
cmpsl
dec
mov
in
shl
add
cmp
mov
add
sbb
into
into
jmp
ljmp
insl
adc
mov
mov
lods
pusha
scas
sbbb
into
mov
or
xchg
insl
mov
mov
into
xor
lret
jecxz
cltd
rorb
push
dec
addl
push
push
rorl
popa
xchg
or
lods
mov
cld
push
mov
adc
cmp
and
orl
mov
jnp
lods
mov
aas
jb
pop
inc
dec
sbb
cmpb
mov
or
push
adc
mov
lcall
addb
inc
jns
and
xor
aam
xor
out
sbb
sub
adc
dec
adc
dec
mov
pop
add
or
mov
and
popa
cmpl
and
lock
and
lret
cmp
pop
cmpsb
jbe
xchg
cmp
sbb
push
aam
inc
or
in
cs
inc
popa
scas
jbe
and
imul
fdivr
mov
mov
cs
xor
mov
and
lock
pop
push
movsb
fnstcw
test
push
pop
cmpl
push
sub
push
leave
cmp
bound
adc
dec
or
stos
loope
mov
insl
popa
push
and
rclb
inc
pushf
lahf
sbb
and
pop
add
aaa
mov
in
add
mov
scas
test
sbb
call
addl
dec
sbb
shld
xchg
xor
push
xor
subb
scas
cmpsb
xchg
in
inc
shl
test
loopne
nop
pop
dec
sbb
mov
sti
mov
inc
and
and
inc
test
sar
movsb
cmpb
add
pop
xchg
jae
jge
xor
xchg
sub
fcmove
inc
sarb
sarb
sti
cs
cld
push
mov
and
js
cmp
insl
mov
sahf
sbb
fbld
and
sub
inc
int3
inc
pop
mov
xchg
dec
js
and
or
jle
mov
push
inc
and
sub
addl
xor
in
pop
cmc
shl
sbb
push
pop
nop
outsl
test
shlb
lea
outsb
push
mov
inc
adc
sahf
push
dec
aas
jmp
mov
insb
mov
clc
and
sub
jl
and
lock
lea
push
jg
inc
xor
xor
push
int
das
or
lcall
pop
sbb
mov
and
pop
sub
pop
cli
mov
mov
push
or
sub
imul
xlat
jecxz
out
adc
mov
pop
lret
cli
ds
out
in
lret
roll
enter
xchg
push
out
shll
inc
lahf
jne
hlt
or
stos
lock
push
cmc
xchg
repnz
mov
jecxz
addr16
xchg
mov
jg
lea
test
dec
cmpsl
loope
out
mov
cli
gs
jne
cmc
xchg
clc
test
jns
jnp
call
cmc
xlat
mov
xchg
adc
mov
cmpl
mov
mov
or
stos
mov
cltd
test
sub
inc
fs
sbb
ss
sbb
inc
cld
xor
inc
push
push
inc
mov
push
cmp
xor
popf
jmp
test
int3
inc
jno
dec
xor
inc
mov
jecxz
adc
aaa
sbb
sbb
jnp
add
jmp
pop
or
mov
frstor
clc
test
ds
adc
out
popa
lcall
or
ss
fistps
or
das
mov
fs
rorl
lods
jne
sub
dec
fwait
pop
enter
dec
hlt
pop
mov
arpl
adc
sbb
cmp
add
push
sub
mov
inc
test
in
sub
jle
inc
pop
add
adc
adc
and
push
add
cltd
out
and
lahf
mov
addr16
arpl
push
lods
inc
sbb
or
sub
repz
adc
sbb
push
push
sub
xor
stos
xchg
iret
push
fimull
mov
mov
jp
inc
call
nop
cs
mov
and
dec
adc
sbb
cli
push
jno
cmpb
outsl
adc
add
jno
addr16
mov
flds
add
scas
pop
aaa
cmc
int
dec
dec
xchg
movsb
jno
test
shll
mov
and
add
adc
xchg
gs
clc
cld
xchg
push
dec
dec
xchg
dec
inc
in
aam
or
dec
in
cltd
stc
adc
jbe
mov
xor
cli
inc
cli
out
adc
shll
jne
dec
jg
es
daa
sti
shlb
dec
fdivrs
adc
aam
sbb
scas
sub
push
mov
sub
adc
cli
int3
mov
lret
mov
sahf
mov
cli
push
add
and
push
pop
pop
andb
cmp
cmp
gs
jb
jmp
das
inc
push
rcrl
xchg
dec
xor
mov
cmp
cmp
fisubrl
daa
repnz
push
cmpsb
adc
xchg
shrl
inc
aaa
lods
orb
sbb
sti
jg
pop
xor
mov
mov
hlt
jl
lahf
fcoml
cltd
mov
mov
out
inc
or
int3
sub
aas
clc
xchg
xchg
mov
idiv
mov
outsb
xor
xchg
ficoms
loope
imul
add
mov
cmp
add
mov
inc
mov
or
xchg
push
push
js
aam
fistpll
push
scas
jno
or
xlat
add
fcomps
xlat
xor
into
repz
push
xchg
or
call
push
adc
push
xchg
test
add
repz
test
inc
push
sub
xchg
sub
add
add
push
nop
popa
inc
add
insl
scas
adc
pop
push
scas
inc
repz
push
test
movsl
dec
xlat
aaa
mov
cmp
and
push
jp
pop
push
das
and
test
orl
mov
xchg
dec
sbb
pop
and
xchg
test
mov
orl
lods
pusha
jo
movsb
fstl
cltd
adc
cmpsl
cli
loopne
notb
fwait
xchg
pushf
sbbl
sti
ffree
xlat
mov
pushf
outsb
daa
pop
xorl
add
subl
jae
and
imul
in
icebp
pop
std
int
xor
outsl
cli
sbb
mov
xlat
push
pushf
jmp
aad
add
js
and
xchg
pop
and
outsb
or
int
jge
and
outsl
cmp
clc
mov
subl
icebp
push
cs
mov
lds
mov
out
sahf
fistl
inc
in
jne
mov
movsb
movb
mov
adcl
lcall
adc
xchg
loope
and
pushf
xor
jle
dec
inc
mov
inc
adc
stc
mulb
mov
mov
push
sub
mov
cmp
xchg
mov
xchg
roll
and
xchg
ja
sbb
adc
jno
dec
int
inc
xchg
sub
arpl
dec
addr16
iret
push
test
lds
push
mov
cli
gs
sbb
insb
fists
lret
jge
mov
in
ret
in
add
jbe
pop
ja
mov
mov
loop
repz
test
xor
arpl
jg
in
and
cmp
in
test
cmp
push
adc
mov
pop
inc
mov
mov
pcmpeqw
outsb
xchg
data16
mov
mov
inc
sub
mov
inc
lcall
cmp
ss
sub
les
inc
pop
test
outsl
scas
mov
out
dec
cwtl
mov
imul
mov
cmp
sbb
ds
sub
insl
data16
and
dec
jns
lock
cmc
mov
movsb
or
outsb
popf
xchg
mov
in
push
and
mov
mov
and
cmpsl
lahf
lods
and
xchg
aad
out
inc
fiadds
repz
or
in
or
icebp
push
in
stos
popa
mov
xchg
mov
add
aas
mov
pop
dec
stc
mov
ss
sbb
cmp
inc
xchg
out
out
nop
xchg
xchg
scas
jnp
xchg
pop
shl
mov
pop
jo
lods
pop
dec
fistps
mov
jnp
sub
or
xchg
popa
dec
ror
mov
je
pop
mov
jae
ss
bound
jo
pop
mov
mov
lret
rcrl
icebp
adc
aaa
inc
mov
imul
stc
scas
imul
stos
cmp
mov
mov
mov
lods
or
in
fcmovu
cli
cli
and
inc
stos
fidivrs
and
std
in
add
fmull
shrl
add
fnstsw
jns
repz
add
fimuls
mov
xchg
popa
add
ja
inc
xor
lret
ret
pop
dec
aaa
cmp
add
lcall
jle
inc
ja
xlat
dec
or
pop
xor
and
stos
adc
mov
cmpsb
sbb
mov
cs
ja
out
sub
popa
jmp
cmc
xchg
out
inc
push
mov
aam
add
push
or
or
out
mov
movsb
jae
add
mov
aaa
fsubs
cmp
cmp
out
cs
sbbb
scas
add
pop
cmp
or
fisttps
mov
fistpll
in
mov
addl
dec
xlat
shrb
push
stos
mov
in
out
pop
mov
cmp
ds
and
push
es
pop
dec
cwtl
es
jl
mov
roll
insb
lea
pop
sub
add
es
cmpsb
jecxz
mov
add
imul
mov
insl
push
or
mov
or
mov
sbb
idivb
ljmp
or
shrl
shlb
not
or
jne
mov
xchg
or
mov
or
dec
cmpsl
test
push
or
jno
scas
aaa
dec
sbb
cmpsl
loopne
je
and
cmp
sbb
mov
xchg
fimuls
ficomps
lock
and
insl
sbb
fisttpl
cmp
xchg
pop
sbb
aas
cltd
xor
fisubl
in
xor
pop
cmpsl
inc
pop
xor
std
and
dec
dec
push
add
out
adc
pop
mov
and
stos
mov
inc
cli
imul
addr16
add
out
out
pop
jg
shrb
movsl
add
mov
pop
mov
xchg
mov
mov
data16
shlb
mov
loop
lds
xchg
ja
xchg
nop
cwtl
mov
push
push
filds
mov
sbb
in
mov
push
pop
inc
sbb
sbb
outsb
repnz
sbb
push
add
and
bound
fnstcw
test
adc
sahf
xor
and
ss
js
mov
adc
sbb
pop
xlat
leave
adc
jle
xor
lret
shl
sbb
out
mov
sub
pushf
cs
imul
aas
cs
mov
jno
adc
jl
vmovaps
sbb
xor
pushl
sarl
fdivr
in
rorl
in
loopne
cmp
sbb
subl
xchg
xchg
mov
jge
mov
pop
out
lds
lods
xchg
pop
rolb
test
jl
push
stos
cmp
inc
mov
push
push
jmp
cwtl
test
jb
rclb
jns
ds
mov
cmp
leave
jns
clc
xor
lcall
pop
jae
hlt
adc
scas
jne
cmpsl
int
dec
pushf
test
sbb
jmp
test
mov
jae
insl
je
xorl
mov
ljmp
cmp
or
dec
xor
mov
scas
popa
sub
aam
pop
mov
shr
jno
jecxz
in
pop
sahf
int
gs
outsl
rorb
or
mov
xlat
loope
cwtl
in
in
mov
cmpsb
push
dec
xor
enter
xor
mov
cltd
fstpt
pop
push
adc
addr16
cmp
into
ret
and
lret
mov
jne
add
sbb
mov
es
out
movsl
mov
mov
data16
fdivl
xchg
add
sarb
in
add
jle
test
push
into
inc
leave
fbld
and
xor
outsl
daa
cli
pop
mov
aas
pop
sbb
add
lods
faddp
jns
xchg
mov
xchg
xchg
mov
jecxz
test
push
pop
sarb
xchg
imul
dec
pusha
adc
test
outsl
test
imul
or
xchg
or
xor
fmuls
mov
mov
lea
mov
lods
fsubs
montmul
cmpsb
pop
jmp
sub
mov
outsb
mov
mov
or
mov
out
pop
adc
imul
mov
pop
sub
enter
pop
popf
add
int
into
pop
adc
hlt
mov
xchg
rcrb
mov
fldcw
scas
hlt
adc
aad
das
adc
mov
lock
mov
notl
inc
outsb
adc
shll
sub
xor
clc
sbb
jl
mov
xchg
cld
js
cmpb
jnp
lock
cmpsb
jmp
imul
mov
push
mov
jmp
dec
xchg
cwtl
imul
push
ljmp
jbe
mov
test
testb
es
in
cmp
push
dec
in
test
movsl
cld
inc
mov
adc
mov
push
jp
inc
idivl
and
nop
jmp
in
or
lret
adc
xchg
mov
js
jmp
popa
xor
pop
mov
test
xor
cli
orb
cmp
mov
fs
cbtw
std
es
sub
loop
push
scas
aad
push
add
xchg
into
mov
cmp
ss
stos
scas
fstps
add
sahf
xchg
lds
xor
lahf
ss
adc
in
xchg
pusha
xor
shlb
add
cmc
fadds
dec
lret
sahf
shlb
mov
clc
xor
out
xchg
cmp
pop
in
pop
loope
mov
icebp
mov
inc
add
sub
push
xchg
hlt
xchg
cmp
mov
pop
lret
iret
mov
cwtl
int3
rolb
pushl
out
push
xor
ljmp
sbb
cmp
dec
fdivs
sarl
data16
dec
push
inc
ret
ret
jne
nop
and
pop
mov
mov
xchg
in
cmp
jne
mov
mov
cmpsl
cmp
push
gs
out
pushf
jno
add
jns
push
push
arpl
or
jge
test
andb
popa
jno
hlt
xor
pop
es
pop
sbbl
push
addr16
xchg
mov
inc
cmp
mov
dec
in
mov
dec
xchg
xchg
inc
sbb
push
leave
or
push
or
dec
mov
mov
loope
movsl
ffree
add
adc
out
les
jl
pop
and
sbb
xor
leave
and
mov
xor
add
push
adc
pop
mov
mov
std
je
push
push
mov
push
or
mov
int
clc
cmp
pushf
popf
cmp
inc
lock
xor
or
gs
pop
pusha
xor
outsl
popf
xlat
and
or
loope
jne
repz
mov
dec
mov
addr16
xlat
iret
jne
popf
xchg
test
sub
cmp
push
xchg
mov
and
xchg
fldt
sahf
inc
loopne
sbb
sbb
pop
fildl
inc
dec
je
ret
test
and
mov
inc
cwtl
mov
or
cmp
pop
mov
adc
insl
rolb
xor
dec
inc
fistpl
pop
daa
mov
data16
pop
stos
mov
mov
int
sub
mov
scas
mov
add
push
ljmp
mov
push
mov
hlt
xchg
sbb
push
push
and
aam
lock
inc
mov
push
jb
mov
sbb
sbb
nop
ds
mov
mov
mov
flds
cs
test
mov
jo
andb
sub
mov
jg
mov
jp
jge
jmp
jmp
stos
jecxz
gs
fimuls
pop
test
cwtl
scas
inc
pop
pop
inc
jnp
add
mov
dec
or
lcall
lret
inc
pusha
sub
and
jg
cmp
andnps
stc
cmp
nop
scas
and
pop
out
xchg
add
inc
int3
adc
call
mov
pushf
lcall
mov
int
jl
mov
insb
jl
cmp
rorb
aas
sbb
gs
insl
test
loope
mov
or
sub
xchg
push
out
xchg
stos
cs
cmp
mov
cmp
lahf
jb
test
lret
decb
xor
cli
outsl
sub
lods
mov
mov
icebp
pop
fmull
loop
xchg
push
push
mov
mov
in
scas
xor
cmp
int3
dec
pushf
push
jg
mov
jb
xchg
dec
std
fwait
push
mov
inc
js
cmc
outsl
outsb
outsb
imul
in
in
es
xchg
cmp
nop
cmc
scas
les
mov
push
jmp
jnp
inc
and
add
addr16
neg
pushf
push
dec
notb
inc
out
jbe
mov
les
lock
int
cmp
or
adc
pop
and
fs
lcall
aaa
pop
pop
push
loopne
fbld
mov
into
inc
mov
pop
dec
jl
pop
xchg
leave
cmpsb
push
nop
test
pop
or
scas
insl
rorl
mov
ret
add
mov
inc
lock
js
pop
in
mov
outsl
addr16
mov
repz
das
mov
mov
imul
xchg
leave
jp
movsl
test
test
mov
push
inc
int3
insl
mov
push
cli
and
addl
stos
out
sub
stos
bound
cmp
sbb
idivb
aam
lea
lcall
or
popf
repnz
jecxz
pop
xor
call
rorb
adc
sti
and
sub
jb
jns
sbb
inc
add
mov
lcall
insl
lcall
loopne
inc
and
add
push
mov
stc
mov
adc
fbld
rcrb
jae
mov
mov
jp
cld
xchg
les
fistl
divl
mov
pop
rcrw
push
xchg
inc
or
mov
pop
and
push
hlt
push
xor
stos
aam
push
test
repz
or
repz
dec
pop
clc
call
in
cs
or
push
push
cwtl
cmc
scas
scas
loopne
mov
scas
and
or
jge
das
dec
push
ljmp
adc
nop/reserved
or
out
jle
pushf
xor
fimuls
sub
xchg
fs
jmp
cld
stos
lret
pop
sbb
cmc
es
mov
sub
in
adc
hlt
lods
inc
lods
jno
sbb
mov
xchg
xchg
jnp
out
test
cmpsb
push
notb
push
cltd
ret
in
dec
xchg
stos
push
loope
rorl
jg
cmp
std
push
je
xchg
adc
aam
out
addr16
adcb
xor
pop
lret
or
and
and
push
push
mov
jnp
mov
mov
mov
xchg
insb
add
and
cmp
rcll
popa
sahf
imul
mov
int
cmpsb
addb
outsb
es
out
jg
dec
clc
xor
stos
or
jno
scas
sub
cmp
jo
push
data16
pop
scas
sahf
push
inc
test
lea
jl
add
inc
sbb
jnp
add
adc
popa
mov
fldl
imul
xlat
je
int
push
mov
mov
fistl
sub
xchg
mov
and
ret
shll
sti
sub
mov
dec
or
mov
adc
jecxz
cmp
mov
mov
lahf
ret
or
ljmp
cmp
lods
pusha
lcall
lods
frstor
divl
sub
pop
sbb
pop
mov
cmp
arpl
push
pop
pushw
mov
jo
mov
pop
inc
mov
loopne
loopne
mulps
loope
inc
or
sbb
mov
mov
adc
sahf
loop
popa
pop
mov
mov
push
mov
gs
andl
push
cmp
movsb
mov
cmp
mov
lahf
mov
shl
test
adcb
int
or
sarl
jno
insb
fbld
fs
stos
mov
scas
aaa
dec
pop
mov
and
pop
lret
sub
popl
rclb
inc
and
hlt
pop
cmp
insl
pop
push
add
iret
out
je
pop
push
mov
mov
mov
push
fstpl
mov
cmpsl
push
scas
pop
aad
sbb
ja
fistpl
mov
ss
mov
stos
mov
roll
mov
ret
dec
cli
lods
loop
mov
dec
jno
and
cmpsb
lock
subps
js
add
aas
inc
scas
push
push
push
jbe
push
push
fiadds
int3
mov
cltd
cmp
adc
add
cmpsb
push
pop
jne
push
stc
sbb
inc
cmp
and
ss
pop
xchg
hlt
dec
cld
shll
mov
in
pop
push
sub
cmp
in
xchg
and
pop
cmp
scas
loope
add
xchg
int
loop
push
push
ret
mov
cmp
jne
and
sbb
stos
jb
add
and
xor
bound
xchg
popf
insb
flds
adc
or
xor
in
cwtl
push
inc
icebp
cmc
xor
cmp
hlt
lds
fnstsw
add
fmuls
es
dec
rcr
aas
add
lock
jecxz
sbb
mov
pop
out
cwtl
mov
es
popa
or
jb
rclb
cmpb
dec
jge
mov
sub
arpl
or
or
insb
loop
adc
push
icebp
fdivl
jb
sub
jl
stos
sbb
jns
packuswb
rclb
out
shll
jle
xchg
scas
imul
loop
pop
push
xchg
es
gs
jns
fs
jo
outsb
inc
gs
adc
mov
mov
pop
cmp
shlb
loopne
inc
fcomps
insl
mov
hlt
ja
and
int
repz
in
aas
lock
movntps
pop
and
fldcw
adc
in
ds
ffreep
popf
fimuls
mov
sahf
pop
test
das
dec
and
sbb
and
aaa
sub
aad
push
stos
jmp
cmp
sub
pop
xchg
push
dec
mov
sbb
gs
ja
mov
xchg
pop
out
jl
psrlw
jp
adc
bound
sti
mov
inc
sbb
inc
mov
mov
mov
test
and
jb
jno
out
fucomip
popf
sub
mov
jo
sub
pushf
jp
and
cli
lret
int3
pusha
sbb
fs
jb
lcall
xor
inc
and
xchg
in
adcl
cli
es
cmpsb
pop
stos
sbb
int
dec
push
cmp
jl
loopne
lea
std
fisttps
push
inc
ds
mov
jl
mov
pop
out
inc
push
stc
push
xchg
mov
dec
cs
jae
adc
jbe
or
push
xor
push
sub
in
inc
rcrl
ficompl
cmp
leave
inc
dec
mov
push
cmp
rol
mov
add
arpl
dec
and
repnz
mov
sub
add
push
faddl
push
std
cmc
jl
mov
xlat
mov
add
add
inc
lcall
in
push
in
test
ljmp
out
shlb
push
mov
out
mov
in
dec
cmc
or
mov
jno
mov
mov
shr
cmpl
leave
or
xor
into
mov
fldt
int
push
les
mov
mov
xchg
sub
cs
cmpsb
xor
xchg
stos
jl
adc
xchg
push
xor
call
jns
pop
popf
call
iret
ljmp
cmp
push
mov
push
outsb
adc
mov
fwait
add
mov
ret
mov
add
pop
pop
add
imul
jno
addr16
mov
fimuls
loopne
iret
pop
pop
sub
imul
xor
pop
pop
repnz
pop
sti
mov
fstpt
arpl
cld
cmp
cmp
je
fidivl
dec
mov
ret
xor
inc
push
repnz
dec
jg
dec
xchg
push
adc
or
fistpl
mov
test
mov
mov
fs
sahf
cmp
imul
fbld
bound
shlb
or
decb
aas
dec
mov
cmp
and
xor
sub
adc
loop
jo
mov
dec
pop
or
mov
outsl
enter
ja
scas
es
mov
fidivs
mov
dec
shll
popa
jecxz
je
pop
mov
xchg
mov
mov
push
fldpi
pop
push
sbb
jbe
test
sub
pop
pop
outsb
loopne
cltd
push
adc
insb
out
or
inc
and
adc
dec
adcl
aam
or
xor
sahf
adc
cltd
ret
cmp
cwtl
movsb
dec
sub
push
ja
inc
and
push
jbe
jns
xchg
in
ljmp
push
bound
in
adc
inc
jb
clc
xchg
add
sbb
out
inc
fidivs
push
sub
push
loope
mov
out
test
fisttps
inc
ret
mov
hlt
xchg
jbe
mov
lea
add
js
adc
xchg
xchg
cmp
xchg
aaa
mov
inc
arpl
push
lds
outsb
jo
push
std
cmp
jbe
test
and
movsb
pop
push
pop
fistpl
icebp
sbb
es
sub
mov
inc
int
mov
les
pop
lret
loopne
out
scas
call
fwait
aas
push
sub
pop
sbb
inc
negl
jmp
pop
push
push
mov
adc
icebp
push
inc
mov
movsl
xchg
ret
fsubl
lahf
in
jb
call
push
jno
and
add
mov
in
pop
lret
ret
jo
dec
push
dec
nop
mov
adc
sbb
int
cmc
xchg
ret
call
scas
out
in
out
sbbb
xchg
sub
mov
sub
mov
xor
fnstcw
imulb
movl
push
popa
fimuls
adc
push
adc
add
lcall
lea
outsb
dec
cmp
or
mov
mov
add
mov
inc
lahf
xchg
mov
push
outsb
loopne
bound
fs
pop
stos
push
pop
push
xchg
or
js
out
cmp
mov
jns
mov
pop
push
inc
stos
pop
cmp
adc
adc
arpl
adcb
int3
lcall
fcoms
mov
mov
pop
loope
loop
jo
out
pop
in
pop
rorb
lcall
mov
aam
bound
inc
push
adc
add
sbb
outsl
daa
pop
or
lcall
pushf
cmpsb
inc
xor
aad
pop
ficoml
xor
sbb
xchg
lahf
add
add
loop
out
mov
push
xchg
or
stc
and
pop
out
test
mov
jmp
sub
cltd
push
aam
and
lods
push
cmp
sub
inc
pop
insl
sub
dec
dec
cmp
or
int
inc
dec
rcrb
push
imulb
mov
imul
fdivl
sub
andb
lock
loopne
loop
mov
std
mov
lods
jae
pop
push
sub
add
mov
ret
cmp
inc
push
pushf
lods
ss
push
mov
sub
sbb
adc
push
fwait
and
loop
mov
lret
xlat
push
popa
or
cs
popf
push
popa
inc
xor
roll
push
and
add
sub
jns
push
sbbl
sbb
lock
scas
mov
pop
inc
insl
dec
clc
pop
mov
test
fst
ficoml
imul
pop
insl
sbb
in
dec
hlt
les
lea
fnstcw
repnz
sbb
and
aad
sub
cmc
and
mov
xor
pop
mov
mov
shl
xchg
imulb
aas
pop
stc
mov
pop
pop
mov
gs
xor
pop
dec
insl
pushf
inc
rclb
adc
fdivl
mov
test
jmp
or
push
fidivs
jns
dec
fstl
inc
pop
js
mov
shll
gs
add
cld
xchg
nop
inc
jo
data16
jecxz
sti
jne
or
fisubrs
test
movsb
adc
call
inc
add
push
scas
fistpl
sub
rorb
jmp
push
mov
imulb
xorb
pop
int
xchg
jge
and
mov
leave
loope
mov
cli
push
sub
pop
stos
pusha
popf
sbb
popa
inc
das
pusha
cmpsb
and
sbb
ret
or
mov
bound
sub
cmp
mov
sub
js
enter
add
stos
fs
inc
sub
lods
or
fstl
fmull
xchg
repz
xor
fistps
mov
push
jp
icebp
sti
repz
xor
adc
pop
and
icebp
xchg
push
mov
cmp
cmpsl
rorl
sbb
aad
pop
es
shr
pushf
lods
adc
or
fildl
pop
scas
lods
data16
mov
pop
mov
das
pop
gs
dec
inc
jo
mov
sbb
test
adcl
mov
inc
int3
cmp
push
lock
and
sub
aad
dec
imul
dec
lret
icebp
add
mov
pop
xchg
mov
ds
stos
mov
cmp
outsl
xchg
add
popf
xchg
sbb
push
mov
out
mov
lahf
jb
shll
xchg
int
jecxz
bound
ss
test
orl
ret
jne
and
sub
sbb
pushf
js
cmp
or
int
xor
jge
fcmovnu
sbb
mov
sarb
pop
insl
sahf
add
dec
inc
lcall
fs
out
aam
mov
jg
jl
sub
insl
jnp
scas
loop
packsswb
gs
les
dec
das
enter
mov
in
jle
scas
loope
imul
mov
xorl
fisubrl
pop
mov
pusha
push
dec
and
mov
lds
or
xchg
loop
rcrl
push
mov
mov
adc
int3
cmp
sub
pop
mov
ror
fidivrs
and
jl
cmp
pop
or
xor
outsb
ja
ljmp
cwtl
mov
mov
cli
iret
stos
sarl
mov
xor
push
cmp
fisubrs
dec
xor
imul
inc
test
or
jg
pusha
or
jb
rcrb
das
sahf
mov
data16
testl
dec
mov
fldt
push
mov
pop
cld
fwait
roll
mov
mov
insl
jmp
movsb
sbb
loop
pop
sub
lock
lods
cli
pop
outsl
pop
jp
dec
jno
dec
js
loope
cmpb
xchg
sbb
cmp
leave
xchg
and
push
mov
cmp
inc
and
ss
je
inc
ficoms
out
mov
xchg
test
mov
xor
aaa
popa
mov
outsb
xlat
stc
addb
imul
xor
loop
jp
jge
push
dec
or
mov
fisttpl
clc
mov
clc
repnz
mov
fnstcw
and
in
xchg
movsl
mov
outsb
mov
aam
push
adc
lods
cmc
lods
scas
cwtl
dec
cmpsb
pop
xchg
outsb
jg
test
mov
incb
inc
push
out
inc
imul
into
xchg
xchg
int3
mov
movsb
mov
mov
pushf
test
dec
cs
sbb
pop
insb
bound
xchg
mov
mov
sbb
pop
out
push
outsb
sbb
scas
cmp
test
int3
and
out
push
xlat
cli
dec
daa
mov
loopne
push
in
dec
fs
popf
ror
lahf
and
cmpsl
lret
mov
mov
popl
cld
shl
loopne
jne
cmp
and
xchg
dec
push
xlat
push
ja
out
movsl
js
gs
rcrl
jo
jg
insl
daa
cld
roll
das
mov
pop
icebp
mov
mov
inc
add
xchg
dec
pop
sti
mov
ret
adc
leave
mov
dec
mov
mov
dec
icebp
jp
jg
enter
aaa
rolb
lret
test
adc
pop
inc
sub
dec
inc
add
xchg
cli
mov
jo
inc
mov
dec
cmp
mov
pusha
pop
jae
in
loopne
adc
stc
lcall
add
fsubr
cmp
jae
repz
or
sub
sbb
push
mov
scas
xchg
loope
pop
mov
and
dec
sub
and
add
mov
stc
das
icebp
mov
ret
and
and
push
xor
aad
push
inc
out
cmpl
insb
cmp
jp
dec
sbb
push
aad
out
dec
dec
sbb
lcall
mov
pop
sti
test
inc
jl
mov
aad
addr16
sti
sub
negl
add
inc
shlb
pop
or
mov
mov
add
ja
mov
test
push
shrl
fldl
inc
dec
xchg
jne
mov
out
sbb
ss
adc
sbb
stc
mov
sbbl
cld
xor
mov
push
dec
in
ss
lahf
mov
cmp
dec
fdivrs
push
rclb
inc
setg
lcall
shlb
pop
out
cmp
pop
sti
addr16
pmaxub
js
cld
dec
cmp
or
dec
dec
jo
inc
inc
add
insb
mov
push
sub
bound
dec
and
je
icebp
pop
out
xchg
aas
stc
rcrb
and
or
clc
cld
cmpsl
push
xchg
jl
or
jae
lret
mov
and
sbb
loop
js
iret
outsl
popa
sbb
jl
pop
shlb
and
adc
leave
add
mov
lds
push
push
jne
mov
adc
inc
jl
sbb
push
mov
adc
and
lret
fsub
inc
add
adc
jo
shl
sbb
ja
jl
cld
dec
pxor
xor
push
sarl
bound
lds
dec
lock
mov
pusha
xchg
int3
stos
rcrl
cltd
in
int
lahf
pop
push
dec
sahf
popf
mov
mov
or
ret
jbe
dec
scas
leave
xor
xchg
add
cld
jecxz
je
jp
test
test
xor
aas
mov
push
sbb
lods
loope
fildll
imull
inc
push
ljmp
dec
ffree
aam
adc
femms
das
pop
lret
ds
xchg
dec
nop
imul
dec
mov
shlb
sub
inc
pop
in
xor
mov
mov
sbb
aas
pop
insl
enter
xlat
sbb
test
push
sub
xor
test
pop
aam
clc
lods
pop
hlt
shrl
inc
sub
in
sbb
cmp
js
subl
fisubs
add
add
lods
jmp
iret
sub
mov
mov
mov
sub
mov
xlat
lock
stos
fdecstp
cmp
xchg
adc
adc
sub
pop
cwtl
fwait
cmc
cmpb
and
dec
xchg
bound
lcall
or
inc
scas
and
gs
xchg
inc
test
ret
xchg
mul
idivl
xchg
out
sub
fs
arpl
jo
mov
and
stos
jp
push
lds
fnstenv
shl
out
mov
leave
push
cmp
sub
ja
pop
insb
lea
pop
inc
cmp
push
rcl
adc
sub
jns
shrl
sub
push
in
sbb
pop
in
pop
cmp
hlt
scas
ret
mov
cmp
mov
lods
push
repnz
pop
daa
insb
bswap
dec
dec
mov
mov
mov
movsb
insb
sub
aad
enter
lret
int
jp
packsswb
cmp
lahf
lcall
ds
sub
es
lret
xchg
lret
mov
pop
aam
test
xor
mov
jp
ss
std
xor
xlat
outsl
arpl
inc
or
out
pop
andl
sbb
pusha
and
repnz
xchg
movsl
fsub
call
aad
adc
jns
outsl
cmpsl
divl
dec
cmc
cmp
adc
movsl
dec
sahf
movsl
pusha
vcvtsi2sdl
pop
sbb
into
icebp
pop
adc
outsl
cmc
imull
sub
dec
push
dec
ljmp
push
inc
push
pop
nop
aaa
or
ret
adc
cs
adc
icebp
cmpsl
dec
mov
add
movsb
push
cmp
nop
mov
ds
push
add
jae
fidivrl
and
fsubr
inc
into
mov
in
and
out
out
inc
push
jb
cmp
in
dec
cmpsb
cmp
es
xchg
in
cmp
imul
pop
and
in
push
sahf
test
aaa
lock
lock
andl
popa
loopne
test
jecxz
mov
or
frstor
icebp
test
into
movsl
jae
in
lret
or
fsin
icebp
add
adc
sbb
repz
sti
adc
outsb
es
cmpsl
mov
xor
pop
ds
xor
pop
sbb
mov
out
xchg
aad
mov
in
pop
inc
sub
fsubrs
pusha
dec
out
insl
pop
ljmp
test
xchg
ss
lea
jo
sahf
pop
adc
rolb
mov
nop
ja
jne
shlb
xchg
dec
push
xchg
dec
push
jae
mov
out
dec
xor
cmp
add
aad
addr16
sbb
repz
shll
adc
xchg
sub
call
jne
inc
jno
popa
inc
popa
cmp
add
xchg
fs
call
sbb
in
mov
es
xor
std
xor
icebp
fwait
mov
push
jnp
ds
lret
pop
in
int3
or
pop
adc
dec
adc
mov
mov
and
mov
pop
outsb
inc
pop
lcall
rcrb
loope
pop
cmpsl
mov
mov
movl
data16
mov
repz
lock
mov
aas
icebp
xchg
pop
pop
mov
negb
cli
outsl
cs
jp
jmp
loop
jbe
lock
push
sub
sub
mov
bnd
les
xchg
stos
cmp
inc
sub
test
inc
mov
jo
mov
inc
sbb
mov
xchg
xchg
fcmovu
xchg
or
popf
mov
dec
fdivrs
inc
leave
and
aas
negb
lret
mov
xor
jp
cltd
pop
lods
and
cmp
out
cmc
mov
sub
sbb
lret
sub
inc
jmp
inc
adc
mov
xor
test
pop
in
mov
int
lods
imul
loope
adc
ret
xchg
add
andb
ficomps
sub
mov
scas
pusha
and
dec
xor
xor
es
jp
ds
sbbl
or
jecxz
stos
in
inc
pop
fwait
jne
pslld
aam
cld
jbe
or
push
fwait
bnd
jae
push
cmpsb
jb
mov
or
enter
cmp
inc
mov
xchg
mov
and
or
ret
mov
xor
sub
sub
sub
outsb
out
lcall
fcoms
cmp
arpl
cmpsl
out
cmp
push
xor
lret
pop
mov
mov
mov
mov
jge
add
push
pop
push
dec
jp
xor
les
mov
push
push
jmp
adc
notl
mov
or
loop
xchg
nop
aaa
pusha
arpl
iret
mov
sti
jae
mov
lock
cmc
ljmp
cwtl
xor
jl
adc
pop
inc
xchg
push
fcomip
xor
or
cmp
add
or
rorl
inc
addr16
jecxz
lock
inc
enter
out
pop
fnstsw
adc
aas
ljmp
sub
ja
jge
out
aas
out
sbb
xor
add
inc
in
push
inc
fwait
movsb
mov
out
sub
cld
je
push
je
aad
pop
pop
sub
outsl
cmp
adc
stc
data16
ds
pop
add
push
mov
sahf
sbb
ss
jae
sahf
insl
mov
push
mov
js
inc
pop
mov
pop
fmull
test
iret
sahf
iret
fistps
or
mov
dec
lcall
je
and
dec
push
les
jns
sbb
scas
or
sbb
sub
jmp
sub
mov
mov
fsubs
imul
insl
jnp
hlt
xor
mov
lock
lret
int3
dec
xchg
jno
popa
push
dec
xchg
faddl
and
mov
std
jns
jbe
push
and
ss
dec
and
and
sahf
push
jmp
cmpsl
test
pop
pop
ss
stc
mov
gs
rclb
loopne
iret
mov
sbb
mov
ja
inc
aas
mov
arpl
adc
push
push
shlb
sbb
das
push
out
mov
sbb
sahf
cmp
pop
inc
out
mov
or
pop
and
in
mov
xor
icebp
or
push
in
sub
pop
mov
lcall
jb
mov
mov
jo
push
mull
xor
mov
aad
or
bound
fisubs
es
in
imul
push
dec
std
mov
push
lock
jo
and
mov
dec
lretw
mov
mov
out
in
cmpb
mov
push
push
adc
dec
push
xchg
xor
fstps
cmpb
insb
push
cmc
fbstp
push
mov
lret
push
sbb
data16
stos
sbb
and
daa
dec
ljmp
test
add
lcall
push
push
add
cmc
mov
subl
xlat
sbb
cwtl
push
sub
sub
xchg
add
mov
push
lods
inc
push
cmp
mov
hlt
fwait
dec
movsb
sbb
je
sbbl
or
movsb
and
les
jp
and
sbb
int
call
bnd
adc
xlat
loop
mov
xchg
mov
insb
rcll
pushl
mov
aad
imul
xchg
cwtl
fdivl
add
xchg
inc
sub
popa
fisttpll
sarb
mov
test
pop
lcall
jg
sbb
fadds
jno
inc
mov
das
nop
data16
and
jae
cmp
dec
sub
ja
cli
imul
arpl
or
loope
push
pop
shll
cltd
popa
adc
mov
push
and
popl
ss
mov
enter
nop
scas
push
addr16
inc
adc
fidivs
ljmp
ret
out
inc
cmp
push
push
mov
stc
xor
ljmp
cli
mov
push
sbb
adc
jg
sub
and
xchg
adc
out
add
xchg
leave
push
cmp
lock
adc
mov
movsl
stc
aas
icebp
fisubrl
lods
mov
movb
fimull
and
jle
cmpsb
ljmp
cld
movsl
dec
sbb
pop
dec
aas
in
aam
cmpsb
pop
mov
jns
lret
dec
loop
cmp
ret
or
add
imul
adc
dec
test
insb
mov
push
pusha
clc
sbb
xchg
jmp
pop
adc
xchg
mov
inc
loope
fs
dec
or
inc
adc
clc
cmp
out
mov
cmp
aam
into
or
or
lods
idiv
cmp
ficoms
cmp
cmp
cmp
sbb
adc
lods
and
dec
mov
mov
xchg
xchg
mov
jno
mov
push
xor
jp
push
mov
jne
fucom
push
lea
jg
cmp
sub
xchg
enter
imul
inc
shll
idiv
cld
stc
in
out
outsb
enter
sub
leave
test
in
mov
mov
lahf
push
or
sbb
add
lods
scas
add
xchg
pushf
bound
xchg
add
add
in
fstpl
mov
mov
gs
mov
jp
aas
sti
in
mov
mov
icebp
ss
ljmp
inc
test
idivb
mov
lds
xchg
inc
es
cli
sub
ret
xchg
pop
sub
lods
mov
and
sub
adc
jno
jmp
out
shrl
ja
movsb
adc
mov
adc
xchg
xchg
imul
push
int
push
xor
sbb
pop
sub
inc
daa
or
jecxz
sti
sahf
mov
clc
dec
add
push
in
in
shrl
inc
sub
insl
into
imul
push
cmp
push
lret
cmpb
es
test
mov
out
mov
test
push
mov
dec
std
es
push
imul
rcl
jg
jl
inc
xlat
dec
or
xor
lahf
movsb
push
cltd
xchg
movsb
mov
inc
adcb
into
push
orl
dec
test
clc
jl
jo
outsb
dec
or
shl
imul
frstor
sbb
mov
mov
push
ficomps
sbb
pop
insb
in
mov
js
ret
or
in
insl
pop
and
push
pop
fstl
jl
or
sti
cmp
fwait
ss
inc
jns
add
add
lcall
sub
mov
adc
mov
scas
xor
addb
cs
inc
mov
jb
xchg
inc
push
jo
cli
fldcw
adc
loop
sub
mov
push
dec
arpl
fadds
mov
or
push
mov
fld
push
sub
insl
pop
insl
andl
in
sub
test
push
loope
mov
xchg
cld
cmc
xchg
jbe
fwait
dec
je
pusha
pop
jo
lahf
hlt
ror
cmpsb
xchg
cld
xor
push
lods
add
xor
icebp
sahf
mov
je
notl
icebp
or
sub
les
fldcw
pop
mov
fsubrs
push
mov
ss
inc
cmpsb
cmp
seto
movsb
add
enter
jle
mov
gs
lcall
inc
daa
jmp
xchg
imul
push
cmp
icebp
xor
imul
mov
lcall
decb
int3
xchg
jmp
push
clc
lock
cli
je
stc
jl
mov
ret
rorl
xlat
inc
cmpsl
jo
es
pop
movsl
inc
jmp
lods
pop
lock
xor
xchg
xchg
xor
popa
adc
cmpsb
sbb
mov
js
faddl
or
push
out
mov
push
xchg
mov
mov
inc
cmp
jg
cmp
xor
mov
sbb
fstpl
inc
or
jae
enter
add
mov
adc
test
int
lods
add
mov
push
test
stos
sarl
and
loopne
cmpl
ja
inc
xlat
in
xchg
stos
enter
leave
sub
jno
cld
out
xor
xor
mov
and
es
inc
loopne
jns
je
or
or
push
fisttpll
cs
cltd
mov
out
xchg
cmp
jo
inc
repnz
shll
mov
mov
mov
pop
push
xorb
and
call
sub
dec
inc
loopne
or
mov
dec
ja
xchg
fistps
movsl
push
jp
adc
adcb
or
pop
fucomp
xchg
icebp
sbb
dec
shrb
dec
push
fdivs
xchg
lds
aaa
dec
xor
aaa
sbb
or
mov
scas
xchg
cmpsl
scas
dec
jne
fwait
push
inc
lret
jp
rcl
cmpsl
adc
stc
sarb
inc
cld
mov
pop
mov
jge
imul
push
sarl
lock
fsubs
lds
jne
dec
cwtl
idiv
inc
rclb
dec
inc
push
movsl
dec
xor
jo
pop
push
mov
mov
jmp
push
aam
lcall
cmp
xchg
cmpsl
jbe
test
dec
movsl
fadd
gs
push
nop
lret
bound
shlb
and
pop
sub
jnp
mov
push
sahf
pop
cmp
jnp
xor
cld
push
dec
movsl
inc
add
mov
add
imul
scas
dec
cmc
pop
mov
out
mov
sti
es
or
xor
pushf
negl
mov
adc
lds
mov
push
rcl
movd
pop
push
sub
sub
or
sahf
leave
push
lret
movsl
push
adc
imul
dec
icebp
enter
inc
stc
repz
pop
roll
daa
cmpsl
adc
imul
jo
mov
repnz
movsl
add
dec
pop
mov
fcoms
dec
mov
dec
pop
fwait
sbb
ds
mov
test
leave
pop
aaa
mov
cmpsb
int
inc
inc
popa
out
add
mov
leave
decb
adc
cmp
repz
outsl
js
loope
mov
loopne
xchg
dec
push
into
and
data16
subb
inc
cs
adc
xchg
shrl
mov
les
push
pop
cmp
in
or
jo
xor
push
insl
push
fcompl
movsb
loope
jno
int3
xchg
inc
jle
mov
mov
mov
mov
inc
dec
sub
je
outsl
out
xchg
pusha
push
dec
adc
sbb
aas
adc
out
cmp
aaa
push
mov
stos
sbb
inc
mov
jmp
ja
or
mov
sti
js
aas
mov
or
out
cmc
sub
fsubrs
into
adc
push
add
orl
daa
jb
add
xlat
pop
fs
sbb
bndldx
xor
cmp
fdivrp
cld
jl
cltd
push
decb
ret
scas
pop
adc
dec
jno
dec
and
mov
stos
jge
cmp
sub
pop
or
sbb
movsl
test
dec
shrl
xchg
jo
jle
xchg
lcall
std
stos
movsl
in
imul
inc
xorb
dec
repz
mov
sbb
rcrl
jns
ss
push
and
xchg
xchg
shl
and
mov
xor
push
fiaddl
cmc
dec
mov
int3
dec
out
and
ds
enter
icebp
mov
pop
movsb
mov
cltd
test
mov
mov
pop
sub
ret
fidivl
icebp
dec
lret
bound
inc
lret
cmp
push
test
mov
and
pop
xchg
lret
pop
add
lds
dec
cwtl
cld
rorb
out
fs
addr16
dec
push
fs
daa
aas
mov
pop
outsb
divb
sbb
jmp
nop
or
test
call
inc
sub
pop
movsl
test
mov
in
aam
sti
jp
mov
fsubl
add
xchg
jnp
iret
cwtl
mov
inc
cmpsb
sub
add
pop
lcall
cwtl
cs
test
adc
mull
fdivrl
jg
mov
mov
and
push
idivb
push
xchg
sbb
inc
or
and
insl
pop
adc
mov
push
lock
xchg
mov
mov
pusha
mov
adc
scas
mov
jecxz,pn
push
pop
adc
adc
imul
aaa
add
cmp
ja
cmp
and
repnz
xlat
ja
dec
ret
xchg
rorb
lcall
enter
mov
dec
mov
push
fimuls
movsb
mov
xchg
sub
movsb
jnp
int3
cmpsb
xor
cmp
stos
std
adc
push
in
les
pushf
pop
push
or
push
neg
rolb
mov
fadd
out
cmp
call
ss
int3
jecxz
rcrb
addb
frstor
sar
xchg
sub
push
sbb
in
mov
adc
mov
and
and
or
shl
icebp
movsb
or
or
jg
insb
jo
shl
sub
mov
mov
dec
std
rorl
cmpsb
insl
push
fwait
out
jg
adc
jmp
jns
xor
push
insl
ljmp
cmp
or
push
mov
ret
adcl
imul
sub
xchg
xor
pop
daa
adc
jne
lea
idivl
dec
fidivrl
xchg
pushl
scas
arpl
icebp
sbb
inc
pushf
push
push
pop
pushf
add
jl
lock
cli
out
ret
sbb
add
daa
mov
cmp
or
push
test
insb
sbb
cmpsb
lods
es
mov
int3
cmpsb
out
pop
test
ljmp
jns
sti
adc
repz
inc
add
or
jbe
and
cmpsb
inc
jg
push
cmp
push
pop
push
sbb
jecxz
cmp
fistps
fdivr
lahf
rcrb
in
pop
cmc
lahf
inc
fisttps
adc
pop
fbld
push
into
adc
xor
mov
aaa
lds
addr16
push
xor
rcrl
mov
int
loope
arpl
cmpsl
inc
enter
lcall
addr16
cmp
mov
xor
insl
cs
jbe
sbb
fwait
cmpsb
sub
xor
xor
stc
in
shrb
and
loop
sub
in
test
pop
jge
pop
mov
jns
cltd
inc
jle
test
xor
jmp
adc
xor
mov
outsb
mov
mov
and
adc
mov
clc
inc
in
xchg
inc
std
mov
shll
shl
in
push
adc
dec
cmp
daa
pop
mov
and
imul
pop
xchg
cmp
pop
dec
pop
int
mov
mov
sbb
push
mov
outsl
dec
ljmp
and
in
fdiv
orb
ljmp
lods
inc
xlat
mov
lret
push
xchg
mov
insl
mov
inc
fsubr
cmp
xor
inc
pop
int
inc
mov
dec
fidivs
fbstp
mov
dec
dec
out
ret
ljmp
dec
movsb
adc
pusha
stos
sahf
lock
cmp
push
cmc
stc
mov
aas
sahf
test
or
push
pop
inc
jnp
push
daa
mov
gs
sbb
xor
pop
jo
xor
inc
lcall
push
dec
sbb
push
push
pop
jne
loop
sub
add
inc
pop
cmp
cli
dec
pushf
mov
fdivrp
addb
notb
push
dec
pop
movsl
xlat
out
xor
sarl
adc
iret
jbe
cwtl
ret
or
dec
xor
jecxz
je
jb
imul
add
ret
lock
sub
cmp
sub
or
pusha
cmp
inc
mov
dec
sbb
push
xchg
cld
xor
pusha
push
cwtl
lahf
push
shl
mov
mov
mov
mov
add
mov
push
sbb
mov
cwtl
repz
jmp
movl
arpl
push
fidivl
mov
nop
pop
mov
xor
push
js
add
roll
addl
sub
ss
sub
popf
repnz
sbb
inc
xchg
aaa
or
xor
cwtl
pop
cmc
sar
mov
movb
mov
stc
scas
sub
ds
xchg
mov
insl
jp
call
mov
pop
test
xchg
mov
cmp
jno
sub
xchg
xor
fstpt
icebp
sbb
or
addb
clc
jbe
jnp
xor
cmp
mul
adc
pop
mov
inc
mov
arpl
xchg
sbb
adcl
push
pop
or
movsl
ret
fnstcw
or
cmc
fwait
inc
stos
sub
jno
adc
int3
test
jp
or
dec
or
and
cwtl
jge
inc
dec
pop
ljmp
idivl
inc
flds
lea
sub
popf
es
push
push
pop
mov
dec
cmp
ja
sbb
imul
mov
imul
fsubl
fsub
and
clc
cwtl
jb
push
push
insb
and
lcall
pop
lds
push
test
xor
jo
xchg
adc
pop
mov
js
and
pop
xor
inc
pop
inc
std
inc
in
lret
xchg
push
mov
adc
in
and
bound
mov
imul
pop
stos
call
sti
popf
xor
mov
cmp
shlb
jns
mov
cli
push
mul
inc
pop
xchg
pop
into
dec
outsb
pop
jmp
daa
sub
pop
je
ror
loopne
pop
cs
push
cmp
or
add
dec
out
dec
cmp
insl
dec
insl
pop
mov
mov
xorb
rep
in
ljmp
or
pop
push
add
fisttpl
jecxz
or
cmpsl
inc
pop
jbe
pop
leave
mov
push
test
mov
cli
aad
push
xor
fisttps
xchg
ss
dec
jle
cltd
lcall
ss
outsl
fistpl
or
dec
sbb
sub
xchg
lcall
fsts
mov
mov
jo
aaa
aad
sti
repz
fwait
mov
ret
mov
add
stos
or
dec
cli
pop
cmpsl
data16
lea
fldcw
ret
roll
jg
subl
inc
sbb
addr16
bnd
push
negl
cld
jg
je
cli
xchg
mov
cmpsl
or
sub
popa
imul
es
bound
pop
das
xlat
jle
test
add
xchg
xor
mov
mov
push
sarb
dec
lret
aaa
inc
mov
lods
jns
sub
rcrl
lds
inc
jmp
fcoms
mov
sub
arpl
mov
enter
repnz
sub
lea
ljmp
rclb
mov
lcall
mov
mov
icebp
mov
pop
pop
es
adc
xlat
or
xchg
and
fwait
dec
and
std
sub
add
jg
filds
add
pop
sub
sti
push
lods
stc
push
popa
lock
cmpb
pop
and
mov
jmp
mov
into
xchg
cmpsb
mov
fwait
repz
in
int3
mov
cld
mov
lcall
popf
push
cmpb
jecxz
mov
adc
lahf
add
ljmp
popa
dec
dec
push
xor
jge
lahf
mov
mov
xor
icebp
push
mov
push
push
xlat
test
cmp
stos
fiadds
or
jg
sbb
adc
inc
dec
std
jp
dec
xchg
jle
inc
xchg
cli
push
mov
dec
inc
ret
or
jp
mov
jbe
aaa
roll
jge
stos
pop
mov
push
fisubl
pop
into
aas
cmp
dec
lcall
les
into
sbb
sbb
add
jg
cmpsb
aam
movsl
inc
cltd
and
lock
mov
xchg
xlat
mov
mov
sbb
mov
xchg
lret
and
sbb
mov
lcall
icebp
repz
int
jnp
xor
jmp
sub
aad
icebp
cmp
movsl
mov
ficompl
ss
inc
call
and
dec
pop
dec
aad
orl
das
or
test
push
fistpl
pop
faddp
pop
xchg
call
sbb
into
mov
cmp
cwtl
push
mov
fstpt
data16
mov
std
push
popf
sbb
pop
clc
nop
or
nop
cltd
rcll
and
outsl
cs
jnp
les
xor
hlt
nop
xor
je
xchg
inc
push
clc
xchg
fidivrl
cmpsl
das
or
xchg
jecxz
testl
lret
add
or
push
jmp
add
pop
cld
repnz
aad
dec
lcall
cmp
arpl
inc
push
push
in
mov
cmp
or
cld
rorl
mov
dec
or
es
stos
dec
mov
xor
pop
mov
jno
sbb
push
push
and
repnz
in
adc
ja
mov
les
add
stos
jb
fistpl
loop
enter
xchg
or
shll
pop
dec
fwait
lea
blsr
loopne
mov
inc
mov
sbb
xchg
or
cs
daa
movsl
in
clc
mov
sbb
lods
dec
cltd
inc
mov
adc
cmp
jecxz
in
rorb
or
dec
jno
out
js
addr16
or
jae
leave
add
xchg
mov
xorl
cmp
xor
inc
pop
dec
in
pop
xchg
jnp
dec
cmp
lahf
push
leave
lock
mov
nop
shll
lcall
adc
mov
in
fists
scas
lods
inc
or
xchg
jge
cmp
shlb
lret
mov
sbb
pop
sbb
clc
pushf
test
mov
or
mov
aam
dec
mov
lods
push
xchg
jne
cmpsb
not
jge
mov
in
aas
sub
in
jo
mov
in
stc
fildl
dec
pusha
adc
int3
and
bound
call
es
rolb
shlb
mov
jl,pt
aaa
cmpsb
inc
sbb
cmp
sbb
shr
lods
cmp
cwtl
jmp
add
mov
sbb
out
ret
jne
xchg
pushf
movsl
jne
and
jne
outsb
or
testl
je
pop
fdivrl
fstps
jns
insb
sbb
pushf
shll
lea
push
or
jg
lds
test
mov
mov
adc
adc
push
and
adc
or
or
jno
daa
in
outsl
push
in
or
push
push
jl
adc
pop
xchg
movsl
notb
add
xor
jg
add
sub
jbe
push
or
or
xchg
lahf
fisubrl
lcall
cs
push
enter
sbb
cmpl
mov
lods
pop
pop
adc
sahf
aaa
jg
js
popf
sbb
repz
dec
mov
jmp
mov
push
out
repz
ret
mov
rorb
mov
adc
aas
mov
push
out
cmp
pop
mov
loope
jl
push
push
cli
sahf
cs
xchg
mov
mov
hlt
jmp
addl
shrl
repz
push
or
int3
xchg
ret
fcomps
movsl
inc
jmp
mov
inc
xchg
or
mov
rdtsc
pop
sub
push
test
in
dec
pop
adc
push
mov
adc
dec
xchg
ret
iret
bound
dec
sub
and
inc
psadbw
stos
adc
pushfw
adc
cmpsb
das
jle
xor
mov
and
out
inc
adc
or
mov
lods
stos
lcall
pop
pop
sarb
out
sti
sti
pop
add
jle
push
cmp
mov
cltd
dec
adc
call
rcrb
jl
outsb
mov
mov
outsl
test
adc
test
add
repnz
movsb
mov
cwtl
dec
lea
xchg
jmp
les
ljmp
add
icebp
mov
andl
aam
push
loope
add
dec
xchg
sti
rorb
aad
and
enter
xlat
inc
and
mov
pop
or
cmp
inc
test
mov
cld
add
push
pop
ret
jmp
push
imul
addr16
push
arpl
fidivs
jb
fstpt
repnz
jle
xor
mov
and
clc
ja
mov
icebp
inc
pop
cmp
dec
sbb
dec
mov
mov
cmpsl
jns
sahf
outsb
mov
insl
cmp
movsl
popf
sbb
mov
jmp
sti
orl
pusha
mov
adc
jge
mov
sahf
orps
jecxz
mov
sub
jnp
xchg
jle
cmp
jb
mov
lock
mov
and
mov
jg
js
arpl
jl
xchg
rolb
scas
sti
out
lret
mov
inc
data16
adc
cmp
cli
aad
xchg
xor
andl
out
inc
sti
roll
popf
leave
xchg
inc
dec
or
mov
jle
inc
stc
out
negl
cs
push
sub
xchg
pop
sbb
mov
mov
aam
sub
ret
push
hlt
lods
int
push
lea
sarl
aas
cld
ret
dec
ds
out
sub
mov
cmp
cmpsb
negl
mov
shll
bound
ficoms
ror
test
sub
jae
inc
push
xchg
and
jb
loop
je
fdivl
cmpsb
popf
lret
pop
fwait
mov
repz
daa
xchg
popf
gs
inc
sti
lahf
fcomps
lods
inc
cmc
int3
mov
insl
jg
sti
push
and
push
add
lret
cmpsl
xchg
jnp
fiaddl
orb
dec
mov
sbb
or
fmuls
jno
push
clc
sti
dec
jecxz
fmuls
dec
in
and
xor
cmp
fnstenv
jns
push
push
cwtl
mov
mov
or
pushf
int3
scas
and
sub
insb
and
xchg
ret
outsl
push
cmp
cmp
addr16
ss
or
and
mov
mov
mov
out
push
mov
mov
aam
xchg
enter
data16
test
push
in
fnstsw
movl
sbb
loope
sbb
mov
cmc
mov
add
sbb
das
dec
ds
mov
add
std
dec
and
in
in
jl
test
pop
sbb
add
adc
dec
inc
xchg
lods
mov
push
push
rorl
es
sbb
xchg
xorb
leave
sbb
and
out
cmc
and
xchg
insb
mov
or
lret
icebp
mov
jecxz
mov
xchg
cmpsl
out
add
das
js
add
xor
mov
das
scas
add
xchg
mov
testb
shrb
dec
ds
imul
data16
sbb
jp
jo
pop
movsl
inc
jb
pop
aad
mov
jmp
test
jae
xchg
mov
je
jne
adc
xchg
stc
mov
clc
cmpsb
jg
cmpsl
sahf
add
pusha
push
cmc
cmpsl
mov
shrd
fstps
jbe
dec
xchg
cmp
jmp
fwait
sbb
ficoms
imul
or
frstor
pmaxsw
pop
mov
xor
mov
xlat
hlt
hlt
sub
iret
xchg
xchg
outsb
jle
cmp
sbbb
sahf
adc
cmpsb
jnp
loopne
mov
sbb
es
test
lcall
out
xor
push
cli
pop
dec
pop
push
xor
shrb
stc
jnp
push
bound
bound
repnz
push
das
mov
adcb
adc
lods
push
rorl
ret
mov
jnp
sub
dec
dec
jecxz
inc
lds
scas
mov
out
stos
sbb
insb
pop
xor
cwtl
dec
mov
mov
sbb
dec
lahf
shlb
cmc
test
fcompl
mov
or
sub
cld
jno
inc
sbb
aad
dec
stc
lds
mov
push
sub
loopne
and
popf
je
popa
pop
jmp
add
inc
mov
aad
fcomi
ljmp
add
shrb
popf
push
popa
xor
cli
add
xor
mov
insl
lods
sbb
add
daa
adc
bnd
ret
mov
es
in
call
add
mov
xchg
jle
mov
nop
adc
dec
pop
inc
jne
fisttpl
mov
xor
mov
mov
gs
flds
leave
nop
je
cmp
pop
dec
inc
shlb
push
scas
clc
xchg
cmp
pop
cmp
out
movsl
push
je
push
ret
stos
shl
pop
or
cmpsl
cmpl
jmp
dec
data16
mov
mov
jb
sahf
int
icebp
sub
pop
push
jns
rorl
mov
and
std
fwait
push
mov
and
sarb
cmpsl
pop
sbb
scas
enter
pop
dec
clc
rcrb
jp
out
fistpll
mov
adc
and
popa
sbbb
adc
jge
mov
imulb
sub
push
ud1
sub
mov
cltd
mov
cmp
inc
es
mov
xlat
mov
cmp
dec
fcom
adc
ljmp
ret
sbb
dec
nop
cmp
popf
mov
test
ret
push
mov
pushf
dec
mov
add
sub
mov
popf
repz
or
jmp
fbld
daa
xchg
andb
mov
out
add
test
fwait
ret
and
inc
test
add
sub
imul
shlb
sub
mov
mov
loopne
fcmove
out
pop
cmpsb
add
test
mov
iret
or
pop
int3
sub
jmp
mov
stos
jecxz
dec
xor
sbb
jbe
test
andl
sti
je
andl
aas
callw
cmp
push
add
jne
scas
mov
or
jmp
mov
lcall
mov
scas
cmpsb
loop
lock
and
adc
imul
add
cltd
jmp
mov
pop
pop
and
test
cmpsb
cltd
inc
shll
push
or
push
adc
sbb
dec
add
pop
cld
dec
lds
fisubrl
mov
mov
mov
jne
xchg
jecxz
mov
mov
xchg
enter
jp
cmp
out
add
clc
loope
outsb
cmc
loop
cmpb
inc
call
xchg
jle
sbb
ret
cmp
sub
mov
inc
cmpsb
add
jge
mov
ss
imul
xor
cltd
inc
fcmovne
std
enter
inc
in
outsl
js
call
adc
xchg
in
push
test
std
shll
outsb
aam
stos
push
cmp
xlat
jecxz
cmp
mov
push
cmp
arpl
fsub
lcall
inc
sti
es
int3
ret
aad
fidivl
js
mov
or
mov
pop
out
outsl
imul
fwait
dec
add
mov
fbstp
cmp
fwait
jmp
movsb
and
add
lcall
dec
mov
out
aas
test
mov
notl
fbld
add
jg
sub
push
jno
and
imul
xor
cmp
add
aam
lahf
mov
mov
pop
sbb
and
add
test
lods
xchg
mov
ja
lret
int3
and
xor
gs
je
imul
popf
cmp
imul
ds
jb
mov
fldcw
bound
sbb
adc
add
adc
imul
push
xor
lahf
xchg
xchg
cs
iret
xor
aas
negl
fcom
mov
push
and
mov
popa
repz
jg
out
pop
push
fcomps
push
pop
mov
popf
mov
jp
out
aas
icebp
or
pusha
push
fiadds
jae
pop
push
outsl
cmp
push
xor
int3
in
dec
jnp
sub
setle
jle
mov
inc
jns
ljmp
incb
sarl
pop
cmp
or
or
out
dec
mov
stos
aaa
pusha
movsl
imul
out
mov
jecxz
sbb
jg
mov
lods
or
aam
in
sbb
and
ss
mov
ds
into
sysret
ret
pop
iret
mov
mov
mov
jb
loop
and
je
pop
xchg
mov
xor
adc
dec
add
push
in
sbb
fnstsw
add
outsb
inc
cmp
negl
cli
cmp
xor
loop
cmpsl
cmp
mov
jo
aam
stos
inc
lea
loopne
jmp
sbb
sbb
mov
sti
cmp
imul
in
xor
gs
dec
or
inc
xchg
mov
push
enter
cld
out
sarb
sbb
ljmp
roll
mov
stos
sbb
ljmp
fsub
and
mov
lds
out
out
sbb
pusha
xchg
out
xchg
dec
adc
les
sub
xchg
fs
cltd
cmpb
call
push
adc
aaa
cld
mov
insb
xchg
mov
inc
test
xchg
aaa
lea
into
mov
je
sbbl
dec
inc
mov
jp
push
test
and
sub
stos
in
dec
sbb
ljmpw
push
mov
or
jg
scas
adc
pusha
stos
pop
fcmovnb
push
out
cmp
std
fucomip
adc
xchg
mov
filds
pusha
inc
ss
movsb
fiaddl
adc
jge
fldl
or
and
pop
ret
fs
lea
lret
loopne
imul
or
lds
or
fistl
test
inc
loop
mov
outsb
mov
lcall
imul
add
repnz
lret
mov
adcb
rorl
jae
mov
dec
xchg
cmpsl
push
cmpsb
out
cmp
cmp
testb
lds
leave
inc
mov
jo
pop
cmpsl
pusha
iret
outsb
pop
sti
cmpsl
loopne
jno
dec
sbb
out
sbb
ds
push
push
out
pop
pop
and
js
push
mov
movsb
test
push
push
in
in
or
mov
fcoms
in
xor
inc
fwait
adc
sarl
mov
mov
push
loope
hlt
xor
inc
repnz
fnstsw
sub
xor
dec
push
xor
fucomip
jae
sbb
std
cmc
mov
pop
mov
out
imul
cmpsb
pop
jg
aas
dec
mov
adc
pop
inc
sahf
ret
dec
xchg
test
mov
popa
stos
xor
scas
sub
mov
inc
mov
sarb
test
jmp
mov
clc
xor
jge
adc
sbb
xor
push
fisubl
lret
shll
ret
jmp
sti
test
out
repz
in
adc
and
and
xchg
insl
loope
std
cmp
and
popf
test
fistpl
mov
mov
pop
dec
and
fildll
outsl
data16
xlat
xchg
xchg
cmpsl
ret
mov
leave
inc
cwtl
std
lods
cmp
mov
sub
sbb
add
inc
daa
or
leave
push
sbb
repz
lret
ds
and
int3
ret
es
add
rorb
outsb
pop
in
mov
inc
insb
call
clc
pop
push
mov
lret
dec
out
jae
lods
pop
lods
sbb
mov
out
mov
jns
mov
sub
scas
sbb
movsl
pop
xor
stos
fisttpll
int
in
cs
fdivrs
in
data16
or
ror
add
pop
add
push
cs
xchg
mov
and
or
cmp
xor
pop
inc
stos
jns
nop
mov
test
call
or
out
mov
cmp
mov
adc
sub
sbb
mov
pop
push
loope
shll
out
mov
icebp
dec
ror
icebp
adc
inc
arpl
push
int3
lret
lret
into
mov
std
fsubl
add
int
test
cmp
xchg
mov
xchg
sti
fdivr
sahf
xor
scas
mov
cmpsl
cmp
or
cs
loopne
movsl
cmc
imul
fmul
xchg
shl
and
addr16
and
sub
xor
lea
mov
out
repz
adc
xchg
fs
push
or
sub
and
aas
xor
ficompl
sub
adcl
out
xchg
out
pop
insl
jnp
js
mov
jg
out
in
icebp
inc
push
shrb
adc
xor
dec
mov
push
and
inc
cmovge
xor
cld
das
out
rcrb
push
inc
gs
mov
popf
inc
mov
rorl
inc
push
or
cmpsb
jnp
and
xor
imul
cmp
or
xchg
shl
out
add
pop
scas
sbb
cltd
lret
mov
testb
pop
mov
pop
and
xchg
out
push
xor
cmp
adc
ret
xor
inc
iret
nop
pop
mov
out
push
push
cli
out
das
inc
mov
jp
xchg
aas
and
jmp
xor
lcall
push
jne
pop
pushf
pop
popf
lret
test
adc
fmul
hlt
sub
je
insb
icebp
ja
jmp
mov
sbb
pop
repnz
aam
ret
test
cmp
icebp
adc
scas
cwtl
sub
bound
insl
sub
fisubs
cmp
jmp
je
pop
inc
cmp
jmp
mov
adc
mov
push
mov
repz
dec
and
jg
and
std
imul
iret
int
es
dec
divl
mov
mov
cmp
add
lds
test
mov
into
fildl
sub
sub
mov
loop,pn
mov
out
xor
icebp
jecxz
xor
insb
insl
leave
and
das
inc
and
dec
push
and
scas
adc
jnp
cmp
sahf
shl
cmpsl
push
fistps
mov
rol
inc
fmul
sbb
dec
mov
or
adc
add
and
subl
and
and
fadds
and
cmpsb
imul
rcll
mov
cs
cmp
or
dec
pushf
rcll
push
daa
jne
sbb
jns
jb
mov
test
stc
into
pushf
popa
mov
push
fucompp
add
psrlq
inc
dec
pop
sbb
fnstsw
fmull
mov
lods
je
xchg
movsb
adc
jne
sbb
jne
inc
push
xchg
inc
push
cwtl
mov
xlat
jmp
jp
in
xchg
pop
leave
sub
mov
xor
leave
lahf
and
cmp
ss
jp
fs
mov
cltd
ja
inc
enter
filds
pusha
cmpsl
bound
and
ret
jb
test
mov
pusha
outsl
add
mov
push
push
cs
mov
pop
rol
jbe
adc
out
jae
xor
or
insl
pop
push
pushf
icebp
test
stos
dec
push
aad
or
jno
push
fsts
fs
cld
mov
int
inc
ds
cmp
sbb
jbe
in
gs
test
loop
xor
push
push
cmp
xchg
pop
out
mov
or
hlt
xchg
out
leave
int
mov
pushf
int3
cmc
ss
lahf
add
je
sbb
cmpsb
bound
and
addl
out
xchg
aas
cwtl
jbe
outsb
sub
pop
test
pop
pop
and
push
mov
mov
js
pop
or
and
adc
fsubrl
xor
adc
test
xchg
shll
lret
lods
les
cmpsb
nop
je
or
stos
push
repz
cmp
lahf
cmpl
icebp
fidivrs
jecxz
inc
dec
push
push
andl
push
repz
fsubrp
push
fucomip
push
mov
leave
cs
bound
xchg
mov
or
inc
jb
xchg
mov
fildll
lea
enter
mov
js
push
jne
lods
xchg
adc
outsb
lcall
mov
pop
mov
inc
mov
fisttps
mov
dec
push
cmp
fisubs
add
das
or
pop
iret
jne
inc
xor
push
out
lock
and
cvtps2pd
fsts
inc
adc
xchg
add
pop
inc
adc
and
setno
xchg
aam
inc
inc
addr16
cmp
imul
icebp
push
shlb
mov
sbb
sbb
and
add
cmpb
test
repnz
jp
shl
add
out
loop
pop
xchg
loope
push
mov
push
jp
adc
lret
leave
xor
test
mov
cltd
push
push
pop
jg
inc
or
mov
repz
imul
pop
out
or
mov
out
stos
fsub
scas
adc
lods
mov
fdivl
sub
jl
add
adc
cmovp
das
fwait
sbb
pop
pop
lret
mov
push
sti
jl
xchg
or
adc
pushf
push
mov
sbb
punpckldq
pop
fsubs
test
and
arpl
and
push
cli
popf
add
mov
push
inc
and
ret
mov
pop
subb
mov
ljmp
aaa
mov
add
lea
rol
out
sub
int3
loopne
mov
sbb
sbb
jge
loopne
add
mov
sub
adcb
mov
add
ret
xchg
xor
mov
mov
jae
repz
or
mov
lock
pusha
insb
mov
std
jp
imul
sub
fstps
sti
fsubs
dec
and
aaa
jmp
out
cwtl
adc
sub
test
mov
sub
out
mov
rolb
mov
lods
or
xor
popa
loope
js
gs
dec
jg
mov
mov
mov
sbb
fcoml
xor
pop
sub
jge
cmp
adc
ficoms
inc
pusha
aam
add
ret
jno
jne
stos
push
push
out
adc
mov
add
out
dec
mov
inc
les
rorb
xor
mov
dec
sub
int3
adc
pop
adc
xor
add
dec
jg
sub
jne
shrb
ds
ffreep
sub
xchg
mov
fsubrs
dec
pop
and
xchg
mov
int
movl
jo
mov
adc
stos
stos
lahf
subb
test
xchg
test
cmp
rcrb
jb
sbb
xchg
scas
xlat
mov
lret
xor
bound
fs
jle
loopne
cmp
and
imul
lcall
dec
aas
loopne,pt
incb
inc
jb
popf
fbld
jp
add
adc
push
sub
add
stos
call
lret
adc
mov
pop
nop
add
add
inc
pop
sub
mov
cmp
shlb
clc
pushf
xchg
sub
push
adc
mov
lds
int
lcall
das
lods
shrb
xchg
ja
push
rcrb
and
incl
push
mov
cmpsb
gs
inc
inc
shll
xor
movsb
lcall
cmpl
jmp
rorb
cmpsb
jae
jl
jl
push
mov
out
jns
and
sub
mov
or
xchg
and
add
mov
jne
mov
ljmp
addr16
cs
adc
and
repnz
out
xchg
rcrl
adc
adc
call
ret
cmp
adc
xchg
ss
jae
cs
pop
nop
nop
jl
bound
mov
or
mov
out
fs
add
pop
add
mov
push
sub
and
add
cs
push
mov
lods
cwtl
les
sbb
jae
xlat
and
jne
jg
mov
movsb
scas
adc
xchg
test
cmp
push
das
xor
adcl
imul
insl
sbb
rorb
xor
lahf
movsb
leave
pop
pop
push
and
push
fsub
nop
or
add
jno
repnz
lret
in
lret
add
dec
in
or
pop
lods
in
sti
push
outsb
test
pop
int
jno
mov
jle
enter
sub
stos
or
push
iret
rcl
dec
insb
adc
ljmp
fnstenv
and
xchg
sub
push
in
add
dec
sbb
faddl
lods
lea
test
faddl
jl
mov
sahf
loope
subb
repnz
aad
add
leave
into
push
add
and
lcall
mov
pop
mov
xchg
lret
cld
or
bound
jb
loop
add
sbb
mov
imul
inc
lret
add
aaa
outsb
lods
lock
mov
leave
gs
or
mov
stos
sbb
data16
jo
stos
scas
dec
sbb
les
cmp
ja
add
int3
or
push
and
push
cwtl
xchg
imul
and
cli
mov
clc
or
rcrb
jg
fidivl
shl
cmp
jmp
or
pop
decb
inc
mov
je
dec
cmpsb
iret
fiadds
mov
sbb
adc
dec
fcmovnu
cmp
rorl
mov
pop
in
mov
movsb
push
dec
mov
add
leave
lock
or
arpl
in
aas
jbe
inc
dec
movsl
pop
outsl
shlb
ja
aad
push
xchg
test
in
mov
add
cmpl
testb
mov
shll
fldl
fisubl
or
xchg
lret
mov
out
ljmp
mov
jae
repnz
xchg
cwtl
push
clc
jle
push
or
adc
mov
mov
test
dec
inc
push
sbb
inc
sbb
icebp
jnp
imul
dec
movsl
add
fs
shlb
jo
std
mov
enter
insb
mov
cmp
int3
xor
inc
call
dec
aaa
push
cmc
cwtl
cmpsl
mov
int3
dec
xor
inc
adc
stc
daa
and
mov
dec
idiv
fimull
and
lret
lock
pop
cmp
cld
jb
ljmp
test
sub
js
mov
ss
pcmpeqw
cmpsb
aam
push
cmp
pushf
into
xor
in
mov
add
inc
mov
stos
ret
mov
lods
push
shl
xor
aad
int
mov
call
xchg
fs
add
insl
in
xorb
scas
cmpsb
iret
dec
inc
ljmp
sbbl
jbe
xchg
sbb
cmp
sbb
mov
in
push
add
cmpl
lret
les
test
mov
mov
nop
jnp
fisubrs
xor
aam
cmp
hlt
inc
mov
and
dec
or
jecxz
das
mov
mov
sbb
in
je
xchg
mov
cmp
stos
lock
cmpsb
sbb
mov
mov
add
jnp
add
push
mov
jb
movsl
movsl
cmpsl
aam
jl
fidivrs
out
daa
or
lcall
push
es
cld
cmp
sbb
xlat
pop
into
mov
outsb
arpl
adc
inc
dec
cmpb
shlb
stc
add
and
or
cmp
stos
or
flds
ds
out
mov
inc
xchg
fldl
cwtl
bound
cmp
mov
das
push
test
jecxz
xor
cmp
sbb
js
cmp
scas
paddusb
sbb
xlat
push
mov
jp
and
push
dec
push
push
xchg
jl
push
lahf
push
xor
in
repnz
sub
or
int
adc
fmull
or
mov
cmpsb
cltd
push
adc
mov
sub
cmp
and
repz
push
bound
inc
jle
pop
int
test
mov
push
pop
aas
movsb
and
lock
inc
testb
leave
add
push
imul
lea
fidivs
adc
leave
cmp
movl
cmp
pop
cltd
cmc
or
fs
inc
mov
xchg
dec
jno
xchg
insl
cmp
ljmp
adc
cmp
dec
das
push
stos
or
cltd
adc
adc
sub
sbb
lret
xchg
add
adc
push
xor
mov
out
js
pop
xor
sub
fucomip
popf
and
mov
mov
addr16
sbb
pop
sbb
lods
insl
cli
jmp
movsb
pop
ljmp
sub
mov
push
and
fidivrl
xor
lahf
icebp
les
add
sbb
fstl
xor
les
test
cltd
jp
xor
lods
insb
mov
cmp
insl
mov
pop
cmc
movsb
aas
and
push
out
add
dec
aaa
mov
sbb
xchg
cmpb
ret
or
clc
and
pop
jno
cltd
fadds
int3
jecxz
iret
lods
xchg
sub
mov
add
cli
bswap
sub
inc
jge
xchg
jb
dec
stc
add
add
inc
pop
test
outsb
mov
sub
sti
mov
lret
and
jle
sbb
aam
or
and
pop
xchg
aas
xchg
push
fcompl
les
divl
sar
mov
inc
push
ja
fs
or
pusha
push
mov
shlb
xchg
mov
pop
cmp
mov
pop
aas
xchg
sub
xchg
xchg
add
mov
mov
nop
cltd
cmp
stc
xchg
test
mov
jl
adc
pop
mov
lea
int
in
push
mov
xchg
je
out
mov
fldl
xor
daa
leave
enter
iret
outsl
fidivrl
movl
and
fistl
jnp
push
fwait
mov
jnp
push
pop
rorb
or
lods
mov
sbb
mov
aaa
push
add
in
shrl
adc
lea
mov
clc
je
cwtl
iret
jno
xchg
push
inc
push
inc
ret
popf
jo
adcb
cltd
push
rcrb
push
xchg
ja
mov
repz
int
imul
incb
xor
push
or
push
test
pop
call
lods
and
leave
pop
subl
test
lahf
out
xchg
decb
loope
mov
jmp
sahf
aad
inc
pop
sar
push
ret
mov
xchg
fstps
sbb
pop
add
push
adc
jmp
sahf
pop
cld
mov
jl
push
xchg
or
negl
enter
hlt
stos
push
sarb
in
jecxz
and
lds
cmp
sub
jae
jle
cmc
fildll
fbstp
inc
xchg
cmp
adcb
adc
imull
xlat
push
movsb
int3
cmp
push
mov
lock
jno
mov
in
fs
out
xor
pop
cs
adc
fwait
test
sub
xchg
mov
push
subb
pop
cmp
pop
call
mull
sbb
push
mov
jg
popa
cmp
sti
aas
and
xchg
scas
js
and
mov
and
mov
and
sub
cmpsb
sub
mov
mov
push
inc
sbb
inc
pop
dec
lret
clc
sub
out
add
sbb
mov
lret
mov
or
shr
cmp
cmp
xor
sar
jo
inc
test
push
cmp
pop
sbb
in
sub
leave
pop
in
inc
pop
add
aaa
not
jbe
cmp
mov
int
mov
inc
loop
andps
xor
popa
and
adc
or
push
mov
and
imul
cmp
cmc
sarl
jbe
insl
mov
aam
nop
mov
fucomip
mov
fdivrl
pop
dec
pop
ret
mov
rcrb
pop
test
push
jmp
cs
sub
xchg
push
inc
movsl
add
cli
nop
ja
jp
popf
idivl
enter
add
sbb
add
pop
xor
daa
adc
aaa
adc
sbb
lcall
dec
push
rcl
les
movsb
dec
add
test
and
stc
inc
test
insl
jb
mov
push
fisttpll
pop
cmp
imul
das
jle
jecxz
popa
cmp
in
movsb
fbld
xchg
inc
jp
aam
sbb
adc
ja
popf
xchg
sub
jnp
sbb
fnstsw
inc
pop
shll
pushf
jmp
loopne
adc
or
xchg
imul
dec
adc
jae
cmc
mov
test
nop
sti
jle
cli
adc
outsb
inc
xchg
dec
leave
imul
adc
les
push
mov
jns
pop
or
cmp
cli
ljmp
inc
dec
dec
fsubrs
push
cmpsb
add
fistps
push
dec
stc
repnz
xorb
leave
adc
loopne
lahf
jns
mov
push
outsb
in
mov
clc
mov
and
push
dec
aam
in
push
stos
adc
jge
adc
and
add
pushf
lock
fs
lret
push
or
sbb
mov
jp
push
outsl
jl
jmp
outsl
jo
aam
fdivrl
nop
pop
sbb
test
jge
or
push
xchg
jae
dec
pop
jecxz
ret
into
mov
or
out
add
aas
mov
pusha
pop
lds
pusha
lods
test
mov
sub
add
xor
push
adc
rcrl
lea
cmpsb
loope
ror
mov
jle
mov
pop
test
push
sub
cwtl
xor
shlb
jno
add
add
and
xchg
dec
pop
in
shlb
stc
test
adc
popf
mov
add
mov
scas
sub
mov
sub
cwtl
lcall
mov
and
and
dec
mov
out
jg
in
sti
push
cwtl
jle
dec
adc
xchg
mov
fimuls
movsb
sbb
mov
mov
aaa
add
xor
pop
addl
pop
or
sbb
ja
iret
sti
inc
cmp
rclb
and
jg
repnz
sysexit
dec
orl
incb
push
add
shll
inc
sbb
andl
fcmovu
inc
sbb
cmpsl
xor
xor
ljmp
pop
mov
mov
mov
jo
cmpsl
cmc
mov
test
mov
dec
repz
mov
lahf
loop
and
insl
dec
or
cmp
mov
push
mov
xchg
int3
sahf
jae
or
rclb
dec
sbb
xor
nop
push
aad
fdiv
cmpsb
pusha
cld
fs
xlat
lcall
mov
xchg
cmp
repnz
rcl
das
adc
mov
push
bnd
xlat
mov
cmp
clc
das
dec
jne
or
ficoms
add
or
adc
sahf
inc
stos
lea
inc
mov
popf
pop
lods
mov
jecxz
fidivl
mov
je
jle
lds
icebp
loopne
lds
loopne
inc
negb
out
or
xchg
fbld
shll
das
insl
mov
mov
and
int
clc
into
dec
adc
notl
or
or
pop
mov
daa
loop
je
jns
xchg
xchg
bound
test
call
jo
jne
sub
fwait
stos
pusha
mov
test
fdivrl
test
int
jecxz
mov
divl
notb
adc
cmp
imul
repz
mov
sahf
adcl
test
dec
sbb
mov
imul
sub
cmpsl
and
sbbl
arpl
arpl
cmc
mov
dec
scas
nop
cmp
push
jp
xchg
cmp
fdivs
xchg
out
in
and
popf
ss
mov
ljmp
lock
jbe
loop
std
mov
lcall
xor
sub
jno
mov
jmp
adc
mov
dec
int3
ret
hlt
xor
pop
push
rclb
push
mov
lret
lods
sbb
fwait
push
nop
icebp
mov
pushf
mov
dec
sbb
sub
inc
sub
pusha
lret
int
xor
and
call
pop
jno
movsb
xchg
add
adc
cwtl
cmp
scas
out
or
int3
addl
int
jno
push
lds
mov
sbb
fistl
xchg
fcmovu
pop
cmp
or
pop
in
xor
add
push
test
mov
icebp
mov
jne
xor
add
cmp
xchg
xchg
cmpsl
pop
dec
xchg
dec
add
jb
out
clc
aad
push
fldt
dec
insl
rol
xchg
arpl
push
fcoms
fdivl
dec
jbe
or
loopne
nop
inc
pop
pop
clc
jnp
fimuls
add
fldcw
inc
roll
fists
out
mov
mov
adc
mov
mov
pop
sbb
lds
es
fnstcw
xchg
pop
sbb
dec
shll
out
or
pop
xchg
scas
shr
dec
es
xchg
sbb
lds
jb
or
pop
arpl
imul
push
xchg
dec
mov
int
fwait
rcrl
cmc
fcmovbe
mov
xor
xor
mov
pop
or
subb
cld
cld
xlat
sbb
arpl
xchg
hlt
sbb
sbb
pop
adc
inc
popf
push
add
roll
jbe
test
daa
in
cmpsl
jbe
mov
xor
mov
dec
icebp
sbb
dec
ja
aam
pop
cld
push
dec
cmpsl
dec
xchg
repnz
mov
mov
cmp
xchg
add
shll
jecxz
gs
cs
lret
fdivs
jo
arpl
iret
ljmp
cwtl
cli
cld
sub
adcl
mov
shll
push
scas
adc
dec
loopne
mov
jae
push
incb
xchg
repz
scas
popf
mov
add
sub
into
sub
movsl
sbb
push
xchg
xchg
pop
adc
movsl
mov
and
xchg
push
mov
inc
call
add
xchg
jge
cmp
cld
and
xor
xchg
jno
cmpsl
mov
das
xchg
mov
dec
or
clc
xchg
xlat
les
cmpsb
das
hlt
aaa
sub
and
dec
and
pop
mov
cmpl
push
sub
adcb
das
das
sub
and
mov
mov
pop
inc
fnstsw
out
data16
lods
in
inc
cmp
jecxz
push
scas
bound
xor
mov
fistps
popf
rcrb
jmp
sbb
add
and
insb
or
ret
mov
scas
je
cmp
xor
mov
rorl
out
call
sub
push
out
das
adc
mov
xchg
out
lods
test
enter
addb
dec
jbe
xchg
mov
mov
shrl
lods
es
fnstenv
scas
lcall
outsb
or
pop
dec
push
jl
js
mov
fs
call
movsl
sarb
and
pop
shll
push
and
out
pushf
in
dec
shll
test
mov
and
inc
push
and
or
jne
sub
dec
inc
and
cmp
inc
pop
push
shlb
test
xchg
sarb
fstpt
cld
jb
loopne
mov
std
into
ret
popaw
test
lret
aam
mov
bound
fwait
pop
mov
xlat
lds
jmp
aam
mov
mov
fcompl
adc
mov
addr16
xor
pusha
jle
pop
jnp
ljmp
loopne
cmp
jne
stos
stos
daa
mov
inc
out
mov
sarb
pushf
xchg
cmc
inc
and
popa
dec
mov
mov
mov
aas
loope
push
clc
je
ja
jns
lods
cs
jae
inc
std
je
mov
mov
cmp
fcompl
das
jp
lods
in
mov
or
or
mov
les
or
lds
jbe
iret
xchg
push
rclb
out
mov
dec
sub
inc
push
sub
stc
test
fisttpl
out
xor
cmp
outsb
out
jge
push
jns
and
or
bound
mov
aaa
mov
cmp
mov
push
jo
sub
inc
stc
out
mov
mov
jns
add
aam
cld
rolb
xchg
push
cltd
mov
pop
test
negl
add
xor
push
fistpll
mov
jg
pop
imul
mov
popf
jmp
outsl
lods
xchg
cmp
sub
or
dec
pop
mov
jb
push
pushf
mov
jbe
xor
pop
mov
les
das
sub
hlt
and
test
sub
cmp
dec
mov
cmpsb
sbb
inc
inc
inc
arpl
inc
xchg
mov
outsl
sub
adc
scas
adcl
sbbl
enter
jns
jo
stc
insb
test
push
into
cld
mov
jle
and
repz
pop
inc
mov
test
data16
mov
add
and
mov
insb
mov
sub
out
push
mov
js
les
push
stc
sar
sti
jg
aas
adc
fiaddl
pusha
push
jnp
popa
dec
fbstp
dec
inc
push
mulb
jmp
orl
jmp
pop
pop
sub
mov
das
pushf
scas
or
cmp
gs
pop
mov
outsb
sahf
jl
mov
dec
sbb
add
out
cmp
in
adc
cmp
pushf
pop
push
mov
lock
adc
pop
scas
ret
or
ja
cmpl
adcb
nop
jmp
out
add
cmp
pop
stos
ds
sub
jae
cmpsl
leave
popl
fwait
add
xor
jne
mov
ret
int
cli
lods
fsubrl
ljmp
xor
lock
dec
or
out
mov
stos
sbbb
in
lret
adc
out
cli
fidivs
mov
inc
push
mov
bnd
pop
xor
ret
fimull
cwtl
imul
pop
cmpsl
sbb
mov
or
mov
clc
stc
inc
pop
daa
and
push
push
mov
push
in
mov
sbb
stos
jg
repz
jmp
aaa
inc
mov
sub
jp
icebp
xlat
in
cltd
dec
push
add
ljmp
cmp
js
jne
xor
or
mov
mov
xchg
jae
mov
arpl
mov
push
movsl
push
test
aam
jge
idivb
xchg
jo
pop
and
jle
jp
sahf
add
mov
jle
ficoml
pop
sahf
and
adc
xchg
mov
adc
std
push
mov
mov
les
lret
cmp
leave
sbb
int3
mov
lcall
xor
lds
in
mov
ret
add
repnz
or
loope
jae
call
das
mov
rcll
into
and
std
cmpb
je
xchg
pop
and
cmp
outsb
movsb
inc
or
movl
mov
jnp
push
enter
sti
inc
inc
xchg
clc
popa
rorl
sbb
pushf
sbb
lods
cmpsb
enter
mov
mov
adc
push
divb
daa
movsb
dec
aad
mov
fistpll
jnp
jge
cmp
jp
pop
push
pop
cmpsb
outsb
outsl
fists
fisubl
je
or
icebp
mov
mov
in
pop
xor
mov
dec
pop
rcrl
popa
in
xchg
fisubrs
adc
adc
shlb
jo
out
shrl
ret
and
push
inc
jp
jmp
cs
adc
sbb
test
cmp
lahf
pop
imul
dec
pushl
daa
mov
imul
ss
xor
mov
or
scas
stos
rcrl
outsb
sbb
inc
sbbl
adc
xor
les
mov
mov
dec
sub
aaa
cmpl
pushf
cmp
jne
test
mov
mov
sarb
movsl
ljmp
add
pusha
loopne
aas
sbb
fsubrl
dec
stos
sub
pop
push
movsb
or
mov
pushf
cmc
mov
and
jle
jbe
and
sub
add
fwait
imul
xchg
int
clc
sub
stc
sbb
fs
adcl
inc
ljmp
add
outsb
scas
pop
out
jmp
jb
add
adc
sbb
mov
mov
xlat
jo
adc
rorb
and
scas
lret
ss
mul
pop
out
sarb
pop
lds
push
imul
pushl
mov
adc
xor
iret
pushf
jle
nop
adc
mov
scas
and
aad
pop
adc
pop
jno
jnp
xor
pop
push
mov
or
pusha
xchg
jo
popa
lret
popf
fbstp
inc
fsubrl
xchg
sbb
cmp
xor
jns
jae
mov
push
clc
lds
mov
fmul
cmp
and
adc
decl
sti
mov
xchg
fisttpl
jg
test
mov
aaa
in
cs
push
ds
fwait
add
jecxz
and
cwtl
ds
hlt
xchg
push
jae
dec
push
mov
ds
cmp
add
fldl
xchg
xor
or
mov
or
push
insb
mov
sbb
inc
mov
jns
js
jbe
cld
and
call
popa
scas
mov
call
mov
pushf
adc
mov
lds
mov
pusha
cmp
in
sub
mov
mov
or
sbb
push
push
push
lahf
in
mov
lods
jmp
cmp
lods
or
scas
add
xchg
cli
mov
xor
or
notb
sub
stos
push
mov
stos
je
dec
jns
imulb
adc
cmp
pop
mov
sahf
sahf
jo
into
idiv
mov
int3
test
shll
pop
dec
scas
xor
push
xchg
lock
push
ds
into
jmp
push
or
sarl
adc
cmp
lods
andb
mov
scas
adc
adc
sbb
push
inc
push
scas
andl
out
stos
xchg
repnz
outsl
ja
movb
lret
or
jl
test
sub
into
xchg
repz
fbld
fidivrl
sbb
mov
mov
sbb
mov
inc
jnp
mov
nop
dec
cli
jae
mov
es
pop
shrb
in
test
mov
mov
pushf
adc
mov
cmp
andb
movsl
imul
sub
mov
xchg
cltd
ffreep
popa
adc
lahf
cmp
pusha
jne
daa
pop
or
dec
cmc
mov
sbb
insb
aaa
push
shlb
andl
or
xor
sbb
scas
cmc
sub
hlt
push
test
jno
arpl
mov
inc
fs
mov
jb
cmc
stc
mov
or
addr16
arpl
add
fdiv
in
mov
mov
stc
cmpsb
sbb
xor
add
adc
lret
movsl
sbb
add
dec
stos
push
fstl
inc
movsb
loopne
ja
xlat
insb
repz
mov
or
outsl
jo
cmp
add
mov
mov
aaa
shlb
mov
inc
aad
add
out
popa
out
scas
inc
movsb
mov
movsl
adc
sahf
loope
repnz
fisttps
in
inc
mov
pop
push
movb
rclb
jp
lcall
jmp
mov
sub
pop
mov
fdivl
xchg
mov
inc
xchg
jmp
jle
imul
and
cvtdq2ps
leave
cmp
sbb
inc
jne
push
and
sbb
xchg
ror
push
pop
cmp
xor
push
and
cmp
aam
shrb
and
hlt
jo
movsb
sub
and
mov
out
je
sub
mov
or
scas
jmp
imul
js
push
clc
cmpsl
mov
imul
pop
loopne
movsl
mov
mov
add
dec
adc
inc
pop
or
jecxz
dec
dec
xchg
dec
xchg
popa
jmp
in
jns
sahf
cmpl
pusha
inc
sbb
pop
adc
fs
adc
daa
in
outsb
mov
ljmp
mov
je,pn
mov
cs
inc
ss
inc
inc
and
daa
clc
arpl
cmp
pop
rol
or
sarl
push
fstpt
sub
push
dec
lock
ds
cmp
xchg
fsubrl
or
jge
xor
add
je
cltd
mov
insb
jmp
or
pop
dec
add
fldl
mov
loop
test
push
cmp
leave
xchg
cmpl
inc
lret
cmp
test
test
rorb
pop
xchg
je
add
fnclex
test
sbb
dec
bound
sbbb
int3
pop
jle
push
sub
jg
sbb
fs
dec
roll
jmp
and
mov
scas
aaa
adc
sub
outsb
jns
add
icebp
shll
push
push
scas
inc
mov
pop
bound
gs
pop
jge
xchg
push
js
cmp
negl
scas
sar
int3
dec
lahf
dec
stos
dec
rcll
fnstcw
cwtl
dec
cmc
aaa
scas
xchg
pop
mov
out
pop
or
stos
push
mov
xchg
mov
xchg
fbstp
mov
cmp
es
outsb
cmc
cld
push
add
insb
lods
gs
dec
repnz
or
dec
imul
mov
in
jge
rolb
mov
test
dec
pop
outsl
stc
mov
dec
cltd
push
cmpsb
or
movsl
test
adc
ret
js
test
loop
je
pusha
sub
fldenv
aaa
sbb
imul
pop
cwtl
movsb
mov
cmp
pop
fsubrs
jo
pop
enter
mov
sub
roll
stc
loopne
fidivrs
in
aas
push
rep
loope
lret
ljmp
and
enter
subb
or
xchg
jmp
adc
adc
ret
call
mov
cmp
cmp
pushf
mov
dec
out
cmp
push
sahf
adc
xor
inc
rorb
dec
mov
mov
add
aad
shl
fidivs
shrl
lock
mov
pop
or
sahf
push
lret
aad
add
fldcw
or
push
es
sub
sub
jmp
js
jecxz,pt
and
arpl
addl
pop
out
xor
jg
or
add
add
fsubs
shl
or
insb
shrb
or
sbb
rcrl
fimull
cmp
loop
div
scas
aaa
push
mov
push
inc
inc
cmp
sub
cmp
int3
in
push
movsl
roll
mov
mov
or
fisttpll
fildll
cmpsb
int3
cmpsl
cmp
mov
add
dec
cmp
pop
sub
inc
lods
adc
sahf
or
int
lods
and
test
jg
ret
sarl
or
fsubl
ud0
std
aam
push
and
dec
and
push
call
push
mov
xchg
push
pushf
shl
jmp
call
pop
pop
adc
inc
cmp
jbe
push
sbb
inc
push
dec
adc
shrb
shrb
mov
cmp
lods
jle
inc
push
xchg
mov
inc
fdivrs
hlt
mov
cwtl
push
int
arpl
rorl
push
jg
cmovne
int
mov
pop
jmp
inc
sub
push
dec
daa
mov
xlat
mov
pop
imul
rcrb
into
adc
outsl
stc
out
pushl
adcl
fcmovnbe
in
call
fdivrs
xchg
shlb
test
xchg
or
insb
neg
cmpsl
pop
movsb
daa
mov
xchg
addr16
cmp
ficoml
and
faddl
mov
jle
aam
add
jo
inc
repz
hlt
repnz
jmp
cmp
cmp
and
jb
or
in
popa
rolb
mov
mov
mov
jge
jp
jno
aad
icebp
cltd
pop
dec
mov
adc
push
push
jecxz
in
aas
jb
std
imul
mov
adc
lods
mov
sbb
add
mov
xor
and
in
frstor
test
mov
rep
or
or
sbb
rclb
enter
dec
jb
and
ss
fsubrl
xor
mov
adc
mov
test
pop
clc
xchg
cmp
hlt
dec
xchg
add
gs
or
sbb
xchg
xor
cmpsb
push
scas
or
push
ljmp
mov
jmp
push
xchg
pusha
fsubrl
jecxz
pop
add
leave
add
mov
insb
pushf
xchg
mov
lds
cld
or
mov
fwait
jae
mov
xor
add
mov
rol
mov
scas
pop
clc
pop
inc
pop
jmp
push
fildl
scas
push
nop
stc
fldcw
ljmp
and
mov
jne
adc
in
popf
lods
add
in
pop
inc
call
imull
cld
xor
call
cltd
mov
fsts
iret
repz
xchg
or
es
clc
decb
push
adc
add
jo
mov
ss
or
xchg
iret
sub
inc
xor
mov
test
bound
sbb
jae
cmp
jmp
test
mov
or
lret
mov
int
mov
in
lea
xchg
mov
mov
in
pop
aam
push
in
push
cld
shlb
xchg
repz
adc
push
cld
test
add
mov
sbb
adc
mov
mov
ja
cltd
iret
xlat
add
or
imul
jl
or
aad
push
or
xor
xchg
xor
call
inc
push
adc
int3
add
add
cmpsb
loopne
ret
outsl
movsb
xorl
test
xchg
xor
mov
mov
and
add
or
imul
dec
lahf
add
xor
shrl
test
xchg
enter
adc
fcoms
lret
stc
jnp,pn
pop
mov
std
cmc
and
xchg
ret
mov
xor
dec
cmpsl
arpl
mov
xchg
push
push
mov
cmp
adcb
dec
call
adc
push
test
sbb
push
pop
and
or
xchg
add
out
adc
sub
bound
fisttpll
outsb
bound
mov
xor
push
insb
push
addr16
push
jo
test
or
cmp
inc
xlat
push
dec
xchg
out
cmp
push
xchg
std
in
mov
addr16
push
xchg
sbb
xchg
xchg
cmp
clc
mov
je
cld
aad
enter
cmpsb
cmp
jg
jne
sti
inc
repz
jo
ret
dec
mov
push
mov
push
cmp
icebp
push
adc
dec
dec
cmpl
enter
mov
faddl
add
dec
cmc
cmp
xchg
jnp
inc
push
sarl
push
cmp
inc
mov
push
fs
jecxz
orb
fldcw
lock
sub
mov
sbb
das
fs
icebp
rcrl
pop
data16
fcomp
cmp
xchg
cmp
cmp
dec
xorb
and
loopne
mov
les
les
scas
or
pop
lds
xchg
mov
out
xor
psrlw
jb
clc
cltd
push
xor
cwtl
loop
and
add
sub
leave
mov
nop
stos
and
daa
cli
mov
inc
fldcw
in
fisttps
cmc
movsb
cmp
bound
push
shll
sbbl
in
stos
cmc
das
in
in
pop
mov
mov
mov
mov
es
lret
pop
js
icebp
loope
add
loopne
dec
popa
xchg
push
stos
dec
roll
test
les
mov
popf
scas
pop
leave
xchg
sub
mov
stos
ror
xchg
push
pop
mov
or
push
in
xor
xor
ja
fincstp
cmp
daa
jnp
jo
frstor
cltd
loopne
stc
jp
cmp
xchg
int3
cmpsl
adc
push
mov
nop
iret
cmp
aad
jae
push
sub
or
imul
mov
pop
sbb
clc
mov
fwait
int
testl
shlb
fisubs
je
fldenv
std
lcall
lock
mov
sbb
sub
pop
insb
inc
push
xor
insl
sti
cmpsb
add
push
mov
adc
aaa
hlt
mov
push
push
and
test
push
enter
sub
in
stc
fs
bound
jp
jns
cmc
pop
pop
dec
daa
ret
adc
xchg
dec
pushf
movsl
inc
call
xor
or
repz
outsb
lahf
rclb
mov
push
push
or
into
pop
xchg
cmp
out
mul
idivl
movsl
leave
add
mov
gs
movsb
ret
sbbl
cwtl
pop
xchg
mov
jle
cmpsb
add
dec
mov
dec
sbb
mov
xor
mov
inc
jno
pop
xchg
add
andb
pop
lds
test
fbld
add
mov
adc
jne
sub
mov
mov
in
fwait
pop
or
adc
dec
sahf
add
xor
in
and
sbb
sti
inc
ret
adc
fsubrs
dec
xlat
stos
fldenv
loop
sbb
add
push
xchg
fs
jmp
shr
push
cmp
pop
and
xrelease
or
ja
add
xor
sbb
cmc
sbb
out
pushf
dec
mov
fwait
xchg
mov
outsb
fsts
push
das
push
int3
pop
ja
inc
cmp
lahf
jmp
mov
push
mov
mov
cs
lret
subb
pop
gs
inc
sbb
in
filds
hlt
lods
jns
push
fiadds
sub
bswap
xor
jecxz
ret
imul
push
gs
stos
sbb
jge
jne
mov
je
into
sub
inc
push
xchg
add
mov
inc
outsl
test
sub
adc
ficoms
icebp
sti
mov
sbb
jae
mov
mov
and
adc
stos
cmp
and
xor
or
adcb
rol
scas
test
nop
mov
filds
sti
scas
sahf
lret
push
inc
cmpb
push
js
sub
pop
outsb
dec
or
mov
mov
icebp
pop
addr16
push
sub
lret
iret
hlt
and
pop
cmpsb
xor
aam
push
xchg
repnz
xchg
sar
jl
dec
inc
lods
cmc
out
cld
push
adc
js
pop
div
push
cs
jo
add
test
iret
push
loop
xchg
lods
jnp
mov
aas
mov
or
frstor
mov
mov
je
sbbb
roll
pushf
shrl
push
pop
xor
or
jne
in
add
outsl
push
cli
subl
and
mov
popa
shl
add
movsb
jne
out
outsb
sub
jno
push
int
mov
xchg
pop
imul
xchg
das
dec
mov
sarl
xchg
push
xchg
jmp
mov
jecxz
jmp
in
mov
push
adc
jae
adc
inc
adc
and
shlb
fcomi
sub
das
mov
and
addr16
fwait
data16
pop
jnp
bnd
outsl
cmp
lret
lods
adc
gs
xchg
jns
gs
or
cmp
lret
fs
jmp
pusha
inc
aaa
pop
cmp
ror
test
add
cmp
push
loopne
mov
sbb
mov
sbb
sbbl
cmp
and
out
dec
and
lock
divl
mov
jl
mov
sub
or
cmp
in
mov
repz
cmpsl
or
pop
in
leave
inc
clc
mov
pop
stos
bound
int3
test
inc
mov
inc
cltd
cmp
scas
out
jne
pop
fisttpl
movsb
decl
es
adcb
push
mov
add
xchg
inc
shll
int
xchg
sub
js
xor
ret
sub
mov
mov
push
jne
fcomp
inc
pop
fs
shlb
fadd
test
ret
sub
loop
cmp
adc
xlat
jg
aad
add
mov
fnstcw
stc
jge
pop
ret
and
inc
movsb
cmp
out
adc
negb
inc
jl
in
jns
inc
mov
xor
out
out
pop
lds
imul
daa
out
sub
mov
fdivrs
les
out
lock
lods
push
movsb
shlb
int
imul
mov
push
sbb
lock
into
iret
or
pop
ss
pusha
pop
rorl
sbb
arpl
dec
lods
lret
out
bound
adc
xlat
mov
jp
in
mov
jbe
repnz
pop
sbb
sub
adc
cmpsb
lahf
xchg
dec
jecxz
lcall
sub
inc
ja
ljmp
cld
pop
rcrl
int3
mov
lret
icebp
imul
push
das
sub
mov
fisubs
jbe
sub
adcl
and
mov
test
jnp
pop
in
mov
popa
or
inc
push
addl
notl
inc
gs
inc
cltd
loop
xchg
or
sahf
stc
xor
movsb
lock
push
mov
adc
sub
cs
cmp
imul
insb
cmp
mov
fwait
mov
insb
add
scas
sub
fcomp
orl
mov
mov
sbbb
push
mov
ss
sub
mov
and
or
push
std
popa
arpl
pop
in
or
xor
sbb
xchg
arpl
ds
xor
lea
or
rcr
dec
mov
nop
mov
icebp
adc
jb
bound
movsb
jb
sbb
xlat
fidivl
push
insl
pop
scas
fsub
pop
pop
aaa
leave
aaa
mov
sti
mov
mov
add
test
int
and
cmp
cmpsl
jne
pop
or
insl
push
rorl
push
stos
jl
pop
in
mov
push
push
sub
xchg
data16
or
or
fidivs
add
mov
xor
xchg
and
mov
sbb
and
sub
add
or
int
repz
jmp
or
pop
push
cs
iret
std
div
mov
dec
stc
cmp
test
cs
sub
cmp
push
adc
pop
in
idiv
out
mov
mov
mov
pop
popf
lret
decb
push
in
das
pop
test
jl
push
mov
or
push
mov
int
test
cmpsl
mov
mov
je
int
movsl
fcmovne
sarl
add
push
push
cmp
jle
jbe
lods
shl
bound
or
jecxz
jge
cmc
stos
push
mov
nop
into
stos
je
inc
lods
push
std
push
add
jo
in
fdivrs
js
dec
ret
bound
mov
jns
xchg
push
es
adc
dec
jnp
popa
add
loopne
sub
mov
test
xchg
cmpsl
sub
mov
push
movsb
mov
loop
pop
cmc
mov
sahf
inc
mov
daa
sahf
sahf
add
pop
or
xchg
cmp
dec
fs
pop
mov
aad
test
fldl
fwait
lcall
adc
and
jl
dec
add
cmp
mov
call
ret
shlb
xor
xlat
inc
jb
add
test
adc
sahf
jnp
scas
pop
push
xchg
lret
movsl
loop
sub
lret
or
std
pushf
stos
or
cld
repz
addr16
aad
rorl
push
es
ljmpw
mov
sub
int3
movsb
dec
xor
add
mov
jl
movsl
xchg
fadd
pop
mov
dec
pop
xlat
xchg
add
out
insb
stos
fwait
in
mov
adc
nop
dec
cmpsb
out
fistpl
ret
push
in
movsl
or
add
fs
out
mov
pop
ficomps
iret
insb
mov
mov
jmp
int3
dec
les
add
lds
in
rolb
loop
push
dec
aaa
addr16
fdivs
inc
iret
int3
and
nop
mov
jns
or
jo
scas
andb
cli
mov
fs
lcall
fwait
les
ret
add
mov
add
inc
stos
xor
outsb
sbb
les
sub
pusha
sub
cmp
dec
cmp
inc
sub
sub
fcmovnb
mov
fbstp
fldl
pop
mov
icebp
sbb
adc
stc
cmp
pushf
and
fucom
push
int
loop
mov
sub
addr16
shll
mov
jno
je
or
push
inc
ror
xchg
int
xor
push
xchg
les
push
pushf
jb
or
imul
xchg
dec
ret
sar
xor
mov
daa
loopne
jb
adc
dec
lods
xor
adc
mov
sbb
add
loopne
jo
cmpsb
das
push
dec
ret
mull
cmp
out
pop
inc
out
dec
stc
xchg
jp
sarl
fnstsw
and
sahf
sub
scas
dec
pop
ja
fdivs
push
mov
stos
sbb
xor
loopne
das
jne
inc
lods
stos
mov
and
push
inc
stos
daa
outsl
sbb
adc
and
int3
out
sub
xchg
inc
mov
andb
xchg
ljmp
cwtl
rolb
adc
push
or
mov
mov
loope
dec
fadd
shll
dec
adc
add
js
add
rcll
pushl
xchg
js
or
sub
out
inc
loopne
sub
add
addr16
adc
and
xchg
repz
and
sub
mov
fcoms
jne
jae
stc
dec
ja
push
xlat
push
xchg
testb
mov
inc
das
scas
mov
not
nop
push
cmpsl
xchg
imul
ficoms
lods
in
lock
gs
jno
lods
filds
mov
fwait
andb
sub
xor
add
sbb
inc
push
icebp
orb
lods
xor
das
into
inc
and
dec
mov
inc
lret
mov
cmp
cmpsl
mov
mov
sbb
insb
xchg
outsl
popf
test
lret
xchg
xchg
mov
and
xor
push
push
pop
loop
inc
mov
or
mov
mov
leave
pop
mov
es
sti
stc
nop
outsb
sysexit
xchg
shrl
lcall
andl
push
xchg
repz
out
cmp
outsl
mov
and
push
mov
ror
push
mov
jae
je
fstpt
mov
jecxz
jno
jle
cmp
scas
int3
pusha
pop
les
cmp
mov
aas
inc
das
sub
jg
daa
sahf
jg
loopne
or
mov
xor
mov
fwait
inc
mov
insl
dec
clc
in
mov
jbe
addr16
add
or
inc
ret
lods
cmp
cwtl
inc
call
jecxz
out
inc
loop
out
cwtl
push
in
push
jp
daa
ja
or
xchg
mov
fcoml
and
inc
add
loop
lds
pop
jb
jno
aas
cwtl
popf
andl
es
cwtl
sbb
cmp
sub
jp
or
cmp
ffreep
push
add
daa
cmc
push
jne
push
pop
mov
inc
inc
mov
push
jl
in
bound
and
add
pop
pop
inc
xcrypt-ecb
cmpsl
lret
aaa
out
sbb
popf
and
les
jecxz
dec
test
push
cld
stos
xchg
add
mov
or
daa
movsb
xor
shrb
lret
cld
andb
push
xchg
push
ret
push
dec
mov
cmpsl
sub
mov
pop
mov
xchg
push
andl
aam
mov
adcl
iret
mov
aam
cmp
jno
mov
xor
push
movsb
sub
ljmp
push
jb
int
xchg
lods
push
outsl
out
outsl
test
jmp
aas
cmpsl
sub
out
mov
jl
cmp
imul
cmp
sbb
pop
xchg
xchg
dec
xchg
stc
insl
lock
push
dec
pop
iret
loopne
xchg
shrb
mov
add
xor
int3
insb
push
mov
or
test
xchg
adc
sbb
mov
loope
jo
into
loope
sbb
mov
enter
in
or
sbb
loope
negl
push
dec
mov
in
mov
jae
pop
shlb
enter
pop
test
daa
ss
mov
and
adc
jbe
sbb
out
inc
lds
sbb
mov
xor
sub
into
xchg
xchg
pop
lcall
addr16
stos
pop
shrl
mov
rcll
pop
adc
dec
xor
mov
pop
sub
fcoml
jmp
sub
sbb
mov
sub
or
fucom
add
mov
jmp
pop
repnz
sbb
xlat
and
jbe
adc
mov
out
sbb
jns
std
mov
test
jne
lcall
jns
ret
cmpb
sub
insb
daa
push
lahf
pop
hlt
sub
push
aad
xchg
inc
in
cs
push
or
flds
rolb
iret
cmpsb
icebp
leave
sbb
call
notb
nop
cwtl
rol
out
das
shll
sub
loopne
jbe
push
stos
sbb
loop
mov
lret
inc
mov
out
mov
ja
fcom
or
mov
cwtl
mov
js
push
sbb
lea
mov
int
outsb
push
fistpll
ds
imul
sub
sbb
into
ret
lahf
rcll
push
out
stc
mov
and
dec
shrb
in
cs
add
and
and
xor
xor
fcmove
jle
fistl
fcomip
pop
xchg
pop
loope
into
dec
movsl
jle
test
or
ret
test
add
jmp
out
les
lahf
loopne
in
popf
push
mov
stos
mov
or
shrl
fs
sarl
fs
jp
sbb
repnz
mov
test
mov
insb
ds
dec
int
dec
push
xchg
repnz
sbb
hlt
dec
or
mov
push
jle
xor
jg
lret
inc
orb
gs
inc
xchg
fnstcw
icebp
cmp
cmpsb
inc
jbe
inc
std
pop
cmp
xchg
gs
jg
adc
dec
sub
mov
pop
outsl
ja
int
cwtl
sub
jg
xchg
jg
mov
fiaddl
paddd
jno
push
out
mov
jnp
shll
add
aaa
imul
in
mov
divb
mov
and
xchg
movsb
push
scas
test
jae
mov
cmp
xchg
and
dec
adc
jo
mov
inc
mov
std
or
mov
ret
and
cmp
sbb
mov
icebp
insb
mov
adc
rolb
push
inc
insb
push
sbb
add
add
xchg
push
sub
arpl
jl
dec
and
cmp
mov
lods
and
mov
pop
or
mov
je
pop
add
sti
xchg
push
dec
dec
push
out
movsb
adc
imulb
nop
ds
dec
cld
popf
pop
jg
xor
imul
lds
lcall
outsl
or
stos
pop
loope
mov
sub
jbe
or
mov
adc
in
test
jae
clc
dec
movaps
dec
arpl
inc
fsubrs
ret
test
push
enter
mov
out
jne
sub
stos
xor
cltd
inc
push
pop
fldcw
lods
nop
test
cmpsb
movsl
and
repz
xor
mov
lahf
xor
in
lea
das
or
jge
imul
pop
aam
sti
inc
stos
int
shl
sub
pop
push
sub
sbb
jne
fildl
outsb
pop
ss
adc
adc
push
and
test
out
add
mov
mov
lret
jp
sub
in
arpl
jae
test
mov
shlb
jg
insl
scas
lods
pop
push
pusha
rcll
loopne
push
xchg
insb
sub
sbb
inc
and
test
insb
hlt
mov
cmp
adc
rclb
ja
inc
pop
xor
cmpb
mov
insl
lahf
sbb
lock
push
in
popa
mov
scas
sub
cli
out
int
dec
orb
cmc
jo
sub
in
scas
and
xchg
xor
mov
pop
icebp
arpl
cmp
mov
shll
daa
hlt
pusha
cmp
daa
lret
pusha
xchg
es
jb
fldl
push
push
jne
pop
push
jno
pop
les
sbb
leave
xor
adc
adc
sahf
mov
ss
sti
es
pop
lahf
pandn
repnz
ja
iret
add
dec
scas
xchg
gs
int3
adc
idivl
in
and
aad
or
mov
dec
out
cmp
push
mov
inc
dec
fdivs
mov
jge
or
cli
in
push
push
stc
xchg
xchg
or
and
aam
lcall
imul
dec
jbe
movsl
xor
pop
jl
fdivl
shl
push
sarb
pop
daa
std
lock
lret
clc
fildl
pop
cmp
stos
clc
mov
iret
stc
mov
ja
jmp
fadds
push
jbe
andl
std
pop
inc
xchg
mov
mov
gs
daa
mov
mov
pushf
mov
lret
test
int
cld
mov
dec
mov
out
lea
xor
fwait
gs
xchg
push
cmp
and
cmpsl
int3
lods
cmpsl
cs
fwait
push
jmp
mov
jmpw
push
mov
lret
xchg
scas
pushf
sub
outsl
pop
xchg
sub
hlt
add
xchg
cmp
movsb
xor
shl
or
xchg
xchg
sub
lock
or
jbe
cmp
inc
or
shrl
adc
ret
inc
pop
pop
adc
fsub
imull
sbbb
sub
popf
int
gs
adc
sub
clc
roll
mov
adc
adc
xor
gs
insl
mov
in
arpl
flds
ret
scas
cmpsl
icebp
cltd
inc
push
jo
xchg
dec
pop
sub
xchg
fldenv
ficompl
sbb
repz
cmp
js
sbb
sub
les
daa
and
ja
adc
and
jnp
imul
insb
jns
mov
leave
js
push
outsl
dec
or
fistpl
xchg
cmp
xor
cld
push
lahf
cmp
adc
test
cmp
rcrb
loope
lret
imul
dec
pop
dec
add
call
loopne
aaa
cmp
cmp
adc
js
iret
in
rorb
out
enter
sub
cld
lea
mov
iret
arpl
std
cmp
pop
int3
or
or
mulb
and
xchg
mov
xor
push
insl
push
neg
icebp
mov
fucomi
pop
mov
xor
mov
loope
push
loope
adc
add
daa
popf
arpl
sti
add
dec
aaa
mov
pop
sub
jb
int3
cmp
push
dec
mov
lds
rcrb
dec
pusha
jmp
repnz
inc
or
pushl
pop
dec
mov
mov
cmp
push
mov
int
test
dec
sbb
movsl
sti
fs
out
fwait
in
mov
inc
or
pop
inc
nop
jp
sub
lcall
xchg
out
push
mov
push
add
stos
decl
mov
xchg
fidivrs
je
mov
or
xlat
lock
and
out
jns
pop
xor
mov
xchg
cli
sti
inc
inc
aaa
mov
jmp
cmp
dec
adc
inc
inc
fstps
jle
js
daa
imul
push
xor
out
out
xchg
fdivl
ss
iret
mov
aam
push
dec
movsl
sbbl
adc
push
lahf
ss
dec
adc
pop
inc
stos
and
cmp
jle
push
insl
mov
xor
cmpsb
int3
in
push
outsb
jbe
in
repnz
nop
and
sub
movsb
sahf
and
and
dec
mov
data16
mov
sbb
cmp
sbb
adc
push
push
pop
xchg
int
jl
daa
jg
cmp
push
nop
add
cmp
in
pushl
fwait
inc
and
mov
out
leave
mov
mov
push
arpl
inc
add
fstp
lret
ret
loope
push
mov
aam
or
pop
dec
imul
js
mov
sbb
mov
push
clc
adc
mov
loopne
mov
rorl
adc
xchg
xor
jl
scas
dec
outsb
icebp
shl
xchg
rorb
xchg
insb
and
js
xchg
push
sub
dec
dec
push
pop
nop
mov
insl
mov
dec
mov
daa
inc
pop
xchg
mov
mov
push
sbb
adc
or
bound
cmp
jecxz
shrl
jbe
xchg
rcrb
pop
pop
xchg
push
or
mov
mov
cmp
loope
in
outsb
fs
fsubl
push
dec
imul
inc
lds
sub
fisttpl
jbe
sub
out
aad
lea
daa
add
cmp
rcrl
lds
xor
mov
stc
iret
adc
cmp
out
insb
lahf
movsb
adc
jae
mov
fstps
or
in
pusha
stos
and
pop
out
sbb
ss
and
loopne
push
pop
or
arpl
jns
mov
pop
mov
push
idivb
pop
das
or
adc
fs
jg
sti
outsb
cmp
aaa
and
test
divl
jl
push
fistpll
dec
icebp
mov
negb
jmp
adc
push
into
cmp
mov
push
les
scas
xchg
sub
imulb
loope
push
push
xor
imul
rorb
std
fs
mov
jns
ret
cmpsl
mov
xor
call
pop
cs
xchg
pusha
mov
pop
test
into
aam
cmp
scas
sub
and
out
dec
push
lcall
sbb
imul
repnz
push
jns
das
push
outsb
pavgb
jmp
sub
fstpl
mov
adc
or
stos
mov
jo
pop
jnp
push
pop
push
sbb
sbb
mov
push
push
or
aaa
inc
and
mov
push
notb
dec
pop
aam
adc
or
out
popl
sub
inc
mov
adc
add
in
xchg
xchg
jp
hlt
inc
push
inc
mov
cmp
mul
cwtl
and
dec
rcll
fwait
sbb
xlat
inc
stc
dec
pushf
dec
jge
xor
je
lods
gs
jmp
ja
inc
dec
jo
rorb
insl
leave
pop
pop
xchg
sub
add
sti
jg
mov
popf
sti
clc
popa
xor
int3
xchg
push
pop
cmp
and
mov
add
push
push
cmp
test
mov
data16
adc
sbb
xchg
mov
jmp
lret
adc
neg
push
xor
mov
adc
sub
push
jge
push
cmpsb
add
jge
jle
xor
shlb
ds
stos
push
sub
ss
mov
scas
cmp
ficomps
aaa
leave
js
lahf
push
dec
insb
cltd
sbb
pop
pushf
test
mov
push
pop
mov
js
jns
jno
int
pushf
ds
repnz
and
pop
insl
sar
cld
nop
int
dec
jbe
fdivl
push
lahf
xor
sbb
popl
push
mov
cmp
push
cmpsb
dec
iret
scas
test
pushf
pop
mov
or
pop
je
loopne
xchg
cmp
cmpsb
in
stc
mov
push
mov
pop
push
and
adcb
sbb
inc
stos
mov
outsb
in
test
cmp
das
mov
out
xorb
pop
xor
sub
or
pop
insl
repnz
ds
or
add
pop
pop
or
cmp
movsb
test
cwtl
jle
jbe
shll
aaa
call
lret
sub
sar
cwtl
push
mov
xchg
and
dec
hlt
out
cltd
jge
pushf
pop
cmp
push
xchg
xchg
mov
sub
mov
mov
adc
xchg
ss
cmpl
cmp
mov
fnstcw
or
xchg
pop
popf
and
pop
add
add
mov
cmp
and
mov
lcall
movsl
and
jecxz
sbb
pop
stos
dec
addl
push
pop
out
in
jb
sbb
push
xchg
popa
pop
jo
mov
mov
sub
rcrl
xor
ljmp
cwtl
push
clc
pop
mov
lea
add
cmpsb
xchg
loop
cmc
sub
stos
pop
loop
jae
lcall
add
or
std
adc
movsb
gs
iret
add
hlt
stc
cmc
xchg
push
mov
insl
dec
jmp
fadds
mov
xchg
rclb
xor
in
scas
push
jmp
sbb
add
mov
mov
cmp
into
pop
mov
outsb
lret
aad
jl
cmpsb
test
stc
mov
dec
adc
out
loopne
cmpsl
aas
xchg
jge
xlat
xor
cwtl
push
mov
dec
adc
mov
add
fistpll
jl
outsl
popfw
cmp
bound
addr16
mov
stos
xor
push
aaa
sarb
andl
mov
aam
push
rolb
mov
push
inc
cli
dec
add
mov
xchg
test
pop
loopne
addl
fsubr
in
sub
mov
repz
and
push
sbb
jle
or
into
out
into
mov
and
push
and
test
pop
je
int3
cmp
sub
aad
in
pop
push
fldenv
cmpsb
sahf
pop
mov
inc
dec
inc
adc
jae
pop
jo
into
sbb
test
push
loopne
adc
lea
lds
cmp
stos
mov
lcall
cmp
addr16
sub
adc
pop
pop
out
pop
mov
call
sbb
pop
mov
mov
mov
mov
and
pop
fcom
xchg
aam
in
pop
sbb
push
mov
icebp
cld
rorl
cmp
inc
push
stos
xor
lea
mov
out
inc
cli
push
cmp
dec
icebp
insl
fmuls
iret
adc
icebp
and
movsb
ret
lods
ds
shlb
cmp
inc
mov
les
push
mov
imul
xchg
es
rcr
sub
stos
and
fadd
fwait
mov
js
out
int
add
push
test
cltd
ret
stos
stos
xor
aam
sbb
cmp
add
mov
testb
jb
sbb
adc
ljmp
fdivr
jmp
mov
inc
xchg
imul
movsl
push
in
and
or
mov
push
movsb
adc
pop
cmpsb
jne
jo
xor
push
ficoml
arpl
adcb
sbb
xor
cwtl
arpl
and
mov
inc
leave
mov
test
cwtl
mov
call
xor
js
dec
pop
xchg
cmp
movsl
lret
fistpll
inc
lret
inc
ja
sbbl
xchg
push
xor
fs
dec
std
insb
cmpsb
add
mov
pushf
jo
les
out
or
or
insb
adc
xchg
push
stos
test
inc
lahf
pushf
mov
test
js
xor
imul
pusha
adc
rorl
mov
sahf
bound
pop
mov
bound
push
xchg
movsb
dec
dec
lcall
xor
test
mov
daa
in
mov
int3
je
push
leave
adc
push
adc
and
or
cmp
pop
outsb
adcb
pushf
test
dec
sahf
in
idivw
xor
cmpsl
mov
push
out
sbb
nop
or
pop
test
nop
jg
xor
mov
jmp
aas
jl
out
jp
mov
js
mov
rorl
cmp
add
mov
jns
rcr
sub
add
push
imul
imul
popf
cs
out
orb
pop
xchg
in
sub
iret
mov
faddl
sub
adc
sbbb
pop
fadd
loop
cmpsl
jp
xchg
lret
das
hlt
popf
push
pop
or
sbb
push
add
insl
fwait
mov
sbb
mov
loope
fcomip
out
dec
loopne
out
xchg
ds
pop
popf
hlt
jns
jne
fmuls
movsb
scas
lea
pop
arpl
cwtl
outsl
lea
jne
xor
clc
mov
add
push
cmpsb
or
sbb
pop
fldenv
push
add
in
mov
ficoms
mov
test
lods
xchg
sub
jbe
pushf
push
cmp
sub
mov
ret
xlat
push
js
es
fwait
repz
fcmovnu
or
loopne
int3
pop
sub
lret
add
addr16
lahf
cld
loopne
jge
enter
sarl
pop
cltd
std
jnp
mov
test
jl
jecxz
les
or
push
sub
pop
push
mov
lock
iret
lds
mov
sbb
cwtl
push
dec
cmpsl
movsl
lds
mov
sub
mov
icebp
scas
sub
mov
imul
fildl
or
pop
fimuls
sub
xchg
adc
ffreep
test
rcrb
les
mov
sbb
mov
rcl
stos
mov
cmpsb
adc
xor
leave
lods
push
jecxz
scas
xchg
push
inc
arpl
pop
inc
mov
pop
jle
mov
mov
int3
inc
lahf
int3
mov
insl
adc
aas
jae
dec
dec
push
sub
inc
inc
sti
out
mov
leave
mov
stos
dec
and
sbb
xorb
dec
int3
inc
jecxz
xchg
inc
jge
or
pop
adc
inc
add
xor
jo
bound
mov
sub
lahf
mov
stos
cmpsl
stc
jmp
push
adc
in
loop
sti
in
cmp
cmp
cld
mov
cs
loop
push
gs
xchg
xchg
mov
jge
nop
mov
add
pushf
aas
lods
scas
pusha
mov
imul
ficompl
mov
xlat
xlat
enter
add
lods
cmpsb
pop
hlt
sbb
dec
sub
push
pop
stos
loopne
ja
push
dec
movsl
pop
les
sbb
cmp
lock
test
push
xchg
sub
loopne
xor
fcmove
cmp
mov
lea
jmp
stos
ret
jo
dec
and
push
loopne
pushf
xchg
test
xchg
cmc
adc
aad
jecxz
scas
mov
mov
movb
push
in
xchg
decl
mov
and
dec
scas
rorb
test
aad
in
std
sbb
shrb
cmpsb
mov
enter
pop
cvtps2pd
dec
loop
xor
pushf
int
and
lret
std
inc
dec
jle
in
add
test
sub
test
cmp
aaa
sbb
or
pop
lods
pop
pop
cld
add
ljmp
les
jecxz
push
mov
sbb
mov
pop
and
mov
push
hlt
mov
arpl
fstpl
jl
fisubrl
insb
push
mov
dec
cmp
cmovl
cmpsl
inc
mov
imul
or
nop
aad
sti
xchg
pop
push
out
fs
in
push
push
subl
fidivl
pop
outsb
gs
out
mov
push
and
orl
xchg
fistl
jb
es
sbb
pop
mov
je
sub
xor
lods
cmp
out
push
mov
mov
dec
js
sub
cmp
loope
cmp
jl
popa
adc
inc
stos
cmpsb
push
sbb
dec
adc
cmp
pop
inc
stos
mov
cli
cmp
inc
mov
mov
outsl
stc
xchg
in
add
mov
lock
orb
sahf
dec
mov
adc
mov
cwtl
sub
out
js
inc
adc
lods
cs
scas
push
and
add
pslld
addr16
rol
mov
test
jns
sbb
mov
inc
cmp
sub
cmp
push
shr
sbb
loop
push
cmp
cmp
rcr
or
or
cmp
dec
xor
mov
cmp
addr16
mov
jnp
sbb
loopne
subb
insb
mov
cmp
mov
sbb
leave
test
sub
test
dec
arpl
inc
cwtl
fidivrs
push
int3
jl
xchg
shlb
test
pop
push
lcall
nop
pop
aad
fbld
aaa
scas
sarb
inc
lock
sahf
add
call
mov
cli
cmpsl
movsb
and
xchg
std
std
sbb
mov
decb
inc
insb
or
sbb
imull
pop
adcb
xchg
and
test
in
or
and
shll
stos
fstpt
pushf
mov
enter
imul
push
mov
inc
stos
cmpsl
cmpsl
sbb
and
push
xchg
cmp
adc
sbb
mov
push
icebp
ret
jns
pop
sub
mov
arpl
push
ds
clc
push
imul
pop
nop
or
std
mov
pop
movsl
sub
xchg
shlb
push
hlt
sbb
clc
les
mov
xchg
cmp
adc
mov
out
out
js
pop
mov
sti
jbe
cmpsl
push
les
xorb
mov
sub
xchg
in
insl
in
push
dec
and
dec
mov
jecxz
adc
insb
mov
sbb
and
mov
push
out
add
mov
roll
aas
lods
cmpl
or
jnp
stos
out
scas
pop
shll
push
dec
ret
pop
cmpsb
roll
dec
rcl
push
pop
lods
fidivs
mov
shrl
mov
scas
and
stc
sub
sti
rcll
push
inc
hlt
xor
movsl
push
sbb
xor
aam
xor
fisubs
int
hlt
leave
or
add
enter
sub
imul
sbb
andl
hlt
mov
jnp
xor
ja
mov
jmp
sbb
xor
xchg
add
mov
jmp
inc
adc
ja
push
jae
push
push
jno
popl
pusha
pop
lock
or
cmp
mov
jle
cli
or
imul
sbb
sbb
cmp
cld
and
mov
sub
and
out
cmc
imul
clc
cmp
pop
xchg
pop
jl
push
sub
pop
idivl
cmp
sbb
loop
push
in
icebp
mov
mov
xchg
ljmp
jmp
mov
pop
push
xor
rcrl
rcr
loope
sub
ucomiss
push
adc
lds
pop
pmaxsw
movsl
mov
mov
ret
add
dec
sub
and
add
fbld
jp
mov
or
sub
ja
clc
mov
cmp
xlat
or
imul
aas
subb
jb
xor
ds
aaa
movsb
xbegin
xchg
sbb
andb
pop
out
fld
xchg
sub
enter
dec
cltd
cmp
movsb
pop
push
sub
mov
stc
popf
divb
sbb
sbb
cmp
aaa
js
or
adc
stos
dec
mull
arpl
fimuls
mov
mov
and
roll
dec
sbb
dec
jo
xor
outsl
and
mov
jb
lock
mov
sarl
lahf
mov
stos
stos
ret
ljmp
mov
sbb
jecxz
xor
cmp
leave
ljmp
pushf
pop
xchg
and
cmovno
adc
mov
dec
mov
cmc
dec
movsl
data16
sahf
pop
jp
xchg
mov
push
mov
test
aas
pop
dec
jo
outsb
cmp
xor
push
aaa
inc
inc
movsl
push
cltd
inc
pop
xchg
xchg
test
test
xchg
push
scas
push
ss
hlt
repz
js
dec
mov
cwtl
out
ret
ret
push
jge
into
mov
cmpsl
jmp
nop
rcr
fdivrl
push
mov
mov
scas
insb
dec
mov
aaa
int
or
mov
jg
adc
jno
jg
xchg
scas
or
lods
add
lods
cli
mov
enter
pop
test
pop
fwait
cmpsb
add
push
stos
lods
repz
dec
fstl
xor
xor
mov
xchg
adc
into
test
fists
mov
in
push
insb
adc
mov
sub
fpatan
insl
lds
jp
cmpsb
jae
mov
mov
cmpl
lcall
fs
jle
rcll
sub
cmp
scas
cli
xor
jo
mov
jno
scas
pop
mov
sahf
pop
pop
cmp
or
movsl
xor
ret
cmp
popw
out
pusha
sub
ficompl
popa
cld
jmp
rol
test
stos
enter
popa
js
sbb
icebp
or
sti
loop
pop
cmc
pushf
sub
or
mov
inc
jmp
dec
rcrl
cmpsb
rolb
repnz
mov
mov
popl
jae
je
rcl
call
pcmpgtb
jne
xchg
push
fidivrs
or
test
mov
or
mov
scas
push
xlat
xlat
sbbl
les
push
outsl
jmp
cmp
cld
pop
xchg
pop
pop
jbe,pn
loopne
dec
les
jne
push
aad
and
mov
jp
sbb
and
mov
inc
dec
scas
jecxz
mov
ror
dec
ss
pop
inc
pop
jbe
clc
stos
les
cld
mov
lret
mov
icebp
lea
ds
int3
into
xchg
sti
xor
push
in
sub
push
cmpb
lahf
aad
ljmp
jecxz
ret
mov
mov
mov
rolb
cmp
adc
mov
adc
loope
xor
aas
enter
roll
push
dec
sub
pop
jo
int3
leave
arpl
ds
nop
xchg
jnp
cltd
clc
pushf
sbb
pop
or
clc
push
aad
pop
icebp
adc
ficoml
pusha
repnz
das
pop
aas
xchg
pop
pop
ficompl
sbb
mov
cs
mov
test
js
mov
enter
jne
bnd
pop
dec
cmp
pop
movsl
dec
je
lret
outsl
lods
fisubrl
fldl
stc
leave
mov
aas
or
ret
imul
popf
stc
mov
adcb
movsb
inc
dec
mov
mov
ja
inc
push
test
ficoms
adc
cwtl
fidivs
add
mov
mov
jle
sbb
jp
cmp
or
push
or
pushf
pop
xchg
dec
addl
bound
mov
dec
mov
das
jp
pusha
sub
sub
cmp
inc
mov
and
imul
mov
pop
xor
aaa
dec
pop
add
icebp
and
mov
roll
imul
mov
cmp
lock
popa
mov
dec
push
cmpsl
aaa
sahf
cmp
dec
jp
cmp
sub
popa
cmc
add
xlat
nop
jns
clc
les
popl
push
lahf
stc
adc
orl
idiv
mov
lods
mov
xor
imul
jo
ret
cmp
mov
cmp
dec
push
mov
add
fs
fstpl
inc
adc
imul
inc
cld
stos
mov
jmp
sbb
pop
icebp
adc
mov
lods
pop
or
xor
push
insb
out
nop
out
sub
mov
lea
andl
int
and
ss
or
dec
xorl
pop
lea
mov
mov
pushw
enter
jns
outsb
sub
loop
aad
inc
jg
clc
mov
sub
xchg
iret
repnz
push
cmp
inc
push
les
mov
inc
push
cmp
pop
push
push
test
adc
mov
sub
mov
push
scas
fucom
leave
aaa
xor
mov
bound
mov
and
mov
jbe
inc
mov
testb
cwtl
sarl
std
fstpt
out
movsl
out
inc
mull
out
movsl
add
aas
inc
xchg
jmp
mov
aad
cmp
jne
adc
inc
leave
mov
iret
xor
lea
add
mov
test
ret
clc
pop
push
ss
stos
xor
mov
das
adc
mov
loopne
push
pop
jno
xor
sub
in
dec
stos
jg
inc
andl
fcomip
cmpb
or
cmp
sbb
in
das
xlat
and
inc
pop
test
fwait
mov
dec
xchg
xor
and
icebp
pop
or
pop
shll
and
imul
or
addr16
aad
push
mov
xchg
ror
call
cmc
mov
sbb
mov
or
cwtl
push
mov
xor
cmp
dec
mov
sub
mov
imul
adc
jl
adc
fcmovnbe
fs
mov
rcrb
aaa
nop
dec
mov
lret
iret
aam
push
out
or
adc
std
push
cmp
popf
idivl
sbbb
mov
cwtl
add
mov
mov
movsl
push
outsl
lds
int3
out
jb
cmp
xor
movsb
mov
push
movsb
ret
push
pop
loop
loop
insl
push
inc
cld
in
mov
dec
out
dec
cld
jg
push
push
xchg
jge
ds
mov
mov
push
xchg
xchg
inc
pop
jl
in
bound
rcl
jge
mov
mov
xchg
and
dec
and
shr
xchg
sub
lods
cmp
or
cmp
sbbb
data16
jae
imul
idiv
es
inc
jge
pop
dec
clc
adc
in
cltd
loop
mov
add
mov
pop
or
mov
lcallw
or
add
pop
inc
test
jb
int3
cmpb
ret
fbstp
orb
pop
fistpll
gs
dec
sub
stc
cltd
sub
inc
adc
jbe
sub
xlat
aad
adc
stos
adcl
out
mov
mov
cli
push
cli
rcrl
or
loopne
xchg
pop
sbb
arpl
push
and
daa
cmp
jmp
movsl
call
inc
push
adc
fisubs
add
xchg
stos
adc
subl
dec
dec
movsb
clc
pop
and
rolb
iret
inc
aaa
outsb
push
jl
jb
loopne
movsl
add
imul
enter
popf
pop
dec
mov
mul
adc
add
pop
repz
lret
int3
orb
insb
mov
cmpsb
mov
movsb
add
cmp
mov
mov
inc
add
cmp
fwait
mov
out
sub
mov
cmp
jne
mov
popf
mov
fstpl
inc
xchg
insb
js
call
notb
cmp
stos
out
dec
bound
mov
push
sub
ds
dec
pop
jp
cwtl
jae
je
loope
mov
or
push
push
cmp
imul
insb
pop
push
test
or
lea
and
enter
push
adc
lds
fimull
inc
jl
push
sbb
xchg
jns
mov
adc
inc
jno
or
les
sbbb
mov
dec
lods
ljmp
scas
sub
test
mov
fnsave
outsb
xchg
into
dec
icebp
sbb
xchg
mov
iret
push
or
add
test
mov
pop
mov
mov
and
aaa
push
dec
div
push
sbb
in
faddp
insl
pop
push
retw
sub
add
jl
sbb
push
or
dec
mov
aaa
call
pushf
xchg
push
push
sbb
jmp
addl
imul
jae
je
loope
or
add
inc
icebp
fiaddl
fildll
aad
add
xor
loope
popf
and
jl
lahf
or
inc
ds
push
add
inc
out
and
fldenv
sbb
pop
lahf
push
movsl
imul
and
cmp
cmp
in
arpl
sahf
adc
lcall
jae
sub
jle
lock
push
flds
or
subb
cmpsb
xchg
sub
xchg
fldcw
je
in
and
push
sbb
mov
inc
ja
repnz
test
fadds
faddl
add
int3
add
lock
xchg
lds
imul
mov
mov
xor
dec
iret
cmp
test
popa
pop
jl
aad
cmp
xor
sahf
push
adc
fisttpl
xchg
enter
popa
xor
mov
jl
xchg
xor
imul
fcomip
mov
add
out
je
add
or
or
fdiv
rcrl
jbe
orb
adc
dec
fisubrs
aaa
js
rcll
cwtl
imul
roll
les
mov
push
leave
xor
fadds
cwtl
rcr
mov
addr16
out
mov
xor
mov
xorl
mov
mov
iret
pause
mov
sbb
movb
or
jo
xlat
nop
ret
shll
or
cli
outsl
inc
jo
jbe
mov
aad
or
and
dec
xchg
insl
test
mov
sbb
lea
loop
cmp
in
xchg
mov
out
sub
xchg
jbe
frstor
or
mov
pop
cmp
cmpsl
mov
insl
leave
xchg
imulb
dec
xchg
pushf
and
jae
jmp
sub
xchg
pop
stos
dec
cmp
push
push
mov
sub
mov
pop
sub
je
out
jg
adc
xchg
push
adc
pop
sbb
outsb
or
stos
repnz
stos
mov
push
add
mov
fbld
lods
ret
pop
jecxz
push
arpl
or
adc
out
and
dec
in
sub
lret
hlt
mov
stc
push
out
pop
pop
add
sub
and
lret
jp
adc
dec
divb
xor
push
dec
je
add
sbb
mov
or
xchg
pop
cmpsl
sarl
mov
jg
push
ljmp
mov
inc
add
movsb
inc
frstor
aam
dec
xchg
les
cmp
and
outsb
popf
movsb
jae
sub
cmp
fldenv
iret
test
fcmovu
mov
push
rolb
imul
xlat
push
xor
adc
add
gs
arpl
test
inc
push
js
xor
and
lods
add
xchg
add
sbb
and
scas
sahf
mov
clc
gs
dec
sub
lock
loope
mov
xor
leave
adc
jecxz
xlat
pop
xchg
mov
out
sarb
push
pop
in
jae
xor
adc
mov
adc
dec
adc
jo
cmpsl
mov
add
jg
xor
inc
sub
cwtl
fbld
lret
je
popa
mov
pop
in
push
sbb
icebp
enter
mov
in
ficoms
or
sbbb
stos
scas
in
mov
cmp
mov
sub
mov
xchg
push
push
rclb
jo
dec
dec
into
repnz
add
gs
mov
ds
push
xchg
popa
mov
fwait
inc
dec
filds
add
or
jb
push
ret
adc
add
mov
rcl
push
adc
outsb
inc
add
mov
push
imul
je
das
xchg
add
and
aas
iret
in
mov
mov
mov
push
push
inc
push
inc
inc
xchg
lods
in
cmp
cmpxchg
enter
and
xchg
mov
roll
push
inc
add
test
pop
jb
mov
frstor
push
and
dec
pop
xchg
jns
jmp
lcall
aam
addl
gs
dec
mov
movsl
ja
push
mov
imul
fdivl
pop
jl
pop
test
js
pop
cli
sti
cltd
xchg
aaa
sbb
mov
mulb
insl
sbb
xor
jne
call
movsb
inc
out
mov
test
pop
mov
xchg
imul
mov
rcr
scas
push
fiaddl
push
cmp
sub
xor
mov
push
adc
bound
and
iret
iret
pusha
js
test
add
add
xlat
loopne
mov
adc
push
cmpsl
leave
jnp
xchg
and
dec
jbe
lahf
dec
sahf
ds
pop
xchg
es
shrb
aad
push
push
mov
sub
xchg
sbb
sahf
jp
stc
and
pop
jb
sbbb
adc
pushf
loope
dec
ds
mov
sbb
sbb
insl
pop
dec
or
cmpsb
jbe
jo
mov
test
jle
mov
sub
dec
rcll
mov
and
fimuls
loopne
ljmp
push
ds
stos
repnz
cmp
add
aam
mov
pop
mov
push
mov
mov
aam
data16
push
insl
adc
mov
in
repnz
jno
jno
in
lcall
xor
sub
mov
out
inc
adc
in
int
addr16
cld
push
mov
adc
mov
adc
push
push
dec
cmp
inc
mov
mov
sub
adc
fwait
adc
ljmp
cld
sbb
sub
ds
mov
sbb
xchg
mov
mov
in
or
imull
test
out
push
push
roll
in
add
dec
cli
test
test
dec
bound
jmp
mov
xor
movsb
scas
je
sub
jmp
dec
dec
mov
mov
std
xor
int
push
arpl
sbb
jae
inc
dec
cmp
push
fstl
inc
add
jg
sub
and
jne
rcrb
and
adc
or
mov
cmp
lcall
lea
push
pop
adc
bnd
daa
lea
movsl
jl
jae
cmp
xchg
pushf
int3
cwtl
scas
add
jmp
adc
add
ficomps
fs
scas
add
out
fisttps
cmp
or
shrl
mov
adc
in
adc
jl
roll
mov
out
fwait
lods
subb
mov
movsb
cmp
push
sti
stc
jbe
movsb
lcall
lods
push
aas
cmp
push
aas
mov
inc
inc
jle
test
mov
sbb
mov
lods
aas
aas
das
sbb
repz
jp
mov
inc
jmp
notl
je
out
test
mov
xchg
das
shll
push
mov
outsl
and
dec
sbb
jmp
xchg
sbb
or
adc
addr16
rorb
mov
ret
test
add
xor
bnd
cmp
mov
push
xor
arpl
jge
dec
cli
scas
jg
call
sbb
inc
mov
out
sbb
adc
and
rcr
mov
lret
lahf
pusha
fs
mov
fadds
jge
mov
pop
addl
imul
shrb
xchg
push
mov
pop
ds
fildl
ljmp
inc
bound
ficoml
xchg
cwtl
xchg
pop
xchg
mov
sbb
or
xchg
ljmp
jb
dec
and
dec
pop
add
jno
xchg
ficompl
ret
inc
cmp
xor
fcoms
out
sahf
fld
ret
push
popa
lret
rcl
fldt
fdivs
dec
sbb
fnstcw
sbb
inc
mov
hlt
mov
ficompl
mull
sbb
mov
mov
push
cltd
popf
lock
xor
xor
cs
cltd
xchg
dec
and
fstpl
inc
pop
mov
adc
bound
hlt
push
mov
dec
mov
stos
hlt
jnp
sti
mov
mov
pop
sbb
lock
push
mov
xor
call
clc
mov
inc
push
mov
out
jbe,pt
sti
divb
ret
fsubrs
jg
insl
loopne
mov
adc
icebp
pop
push
outsb
mov
push
and
sar
cs
sbb
js
mov
jg
scas
sahf
push
add
mov
pushf
jge
push
sbb
cltd
jecxz
mov
mov
lea
pop
dec
and
jmp
xchg
scas
push
jmp
jg
push
fwait
push
sub
mov
add
jp
dec
xor
inc
in
mov
adc
mov
orb
int
outsl
dec
pushl
push
daa
test
jmp
push
cli
dec
sbb
hlt
jl
lods
mov
push
cli
or
push
adc
jne
cs
inc
push
cmc
test
add
adc
nop
push
adc
fwait
int3
popf
call
fcom
push
pushf
or
sbb
xchg
inc
and
cld
add
or
xchg
sub
adcb
push
repz
adc
jle
scas
enter
sti
clc
test
dec
jl
movsl
mov
andl
xchg
xor
rclb
mov
lock
mov
jae
sarl
adc
xchg
out
cltd
dec
add
push
xorb
test
lods
push
movsb
scas
sbb
adc
dec
das
mov
jp
pusha
fwait
scas
jp
mov
and
fbld
fisttps
orb
mov
aam
cmp
daa
sub
add
mov
sub
cmpsl
inc
inc
mov
mov
js
je
aad
mov
adc
mov
jecxz
xor
dec
notb
adc
cmp
cmp
jmp
sbb
pushf
jg
lods
lods
mov
inc
pop
sbb
mov
pop
sbb
cmp
out
sbb
jl
lea
inc
sbbb
xor
popa
jle
cmp
in
mov
outsl
imul
mov
icebp
pop
mov
xor
mov
repnz
fsubs
dec
push
ret
mov
lods
inc
and
or
xchg
das
inc
das
clc
adc
and
imul
lcall
outsb
cmp
stc
add
inc
push
jae
sbbb
fdivs
sub
pushf
or
xorl
sbb
cmp
add
pop
lods
adc
stos
repnz
loopne
xlat
jp
push
adc
cmp
popa
aaa
sarb
jecxz
jecxz
jo
rcl
pusha
f2xm1
mov
fsubrp
inc
mov
rcrb
addr16
mov
xor
xchg
pop
add
or
xchg
mov
xor
ds
bound
scas
xchg
shlb
insl
es
inc
adc
punpckhwd
sahf
and
pop
adc
mov
mov
ds
rcrl
pop
lahf
rcrl
sub
mov
xlat
rolb
dec
pop
das
in
insb
push
fbld
scas
aaa
popf
int
lods
xor
xchg
jns
xor
pusha
jne
lods
push
cmp
loopne
cltd
test
lret
rcll
sub
addr16
and
out
xlat
sub
xchg
add
or
mov
inc
mov
insb
ret
xchg
sub
add
xor
cmc
xchg
add
or
mov
mov
push
fwait
sar
mov
in
cmp
sub
in
inc
mov
xor
sub
mov
mov
pop
mov
jmp
jns
inc
cmp
loopne
pop
jmp
mov
or
cmp
jb
mov
popf
inc
mov
inc
mov
jecxz
add
out
and
add
pop
fmul
test
ljmp
sub
cltd
cmp
test
sub
adc
mov
mov
shlb
inc
in
out
cmp
add
addr16
push
mov
cwtl
jmp
add
mov
xchg
dec
pop
adc
or
jle
repnz
mov
and
gs
in
sbb
push
mov
imul
dec
ds
sbb
adc
mov
xchg
push
dec
xchg
inc
stc
movsl
mov
adc
mov
mov
scas
inc
sub
int
cmp
lods
lock
sub
int
gs
daa
adc
jp
cmc
out
lret
inc
lret
lods
inc
push
dec
add
add
cmp
sub
xchg
pop
aas
fadds
clc
popf
adc
mov
mov
xchg
dec
test
lds
dec
xchg
cmp
adc
rclb
hlt
sahf
pop
mov
xchg
test
and
inc
mov
cs
mov
addr16
jmp
les
xchg
and
or
sbb
add
xchg
or
pop
std
lock
cs
idivl
push
lods
or
jae
or
movsl
adc
ds
inc
mov
inc
sub
xor
aam
push
test
jle
mov
push
jmp
fsubs
pop
mov
and
add
jmp
or
pop
mov
movsb
xor
xor
mov
lahf
scas
adc
pop
adc
and
mov
inc
push
clc
cmp
clc
jge
sbb
outsl
jmp
fstps
test
cltd
or
add
je
in
add
sbb
push
andb
push
rcrb
scas
mov
xchg
cmpsb
cs
ds
xor
mov
jno
nop
aad
clc
out
ljmp
adc
or
mov
loopne
mov
push
shr
icebp
or
mov
std
jecxz
outsl
jnp
iret
pop
into
fdivrs
ret
sub
push
push
ja
push
mov
fistpll
inc
jae
jg
bound
mov
in
scas
mov
mov
mov
imul
sbb
push
repnz
aas
jno
sbb
sub
addl
popf
adc
cmp
loopne
jl
fcoml
test
pop
and
out
data16
adc
adc
jge
inc
pop
out
dec
pop
aas
dec
or
fistpl
in
aam
addr16
adc
mov
xorb
lods
ret
movsb
sti
lret
sub
fnstsw
xchg
inc
scas
in
dec
in
cmp
and
shlb
sub
add
shlb
sub
cmp
pop
ret
sarb
mov
adcb
xchg
mov
es
inc
aad
test
test
xchg
cmpsb
fnsave
pop
bound
enter
sbb
xor
jb
jmp
push
dec
mov
jmp
sub
sub
in
mov
test
dec
jbe
test
out
push
mov
fs
int3
andl
pushf
sti
outsl
mov
mov
cmc
jnp
add
rcl
icebp
add
adc
hlt
leave
xor
shlb
jbe
callw
xor
dec
mov
push
inc
mov
mov
xchg
mov
ja
add
out
jp
lcall
mov
test
sbb
out
dec
pop
aaa
nop
xchg
push
loop
test
mov
xor
std
jo
jo
push
enter
push
and
in
sbb
pop
fidivs
dec
inc
loope
jae
dec
push
popa
mov
sbb
cli
shll
nop
adc
popf
sub
adc
bound
sbb
bound
dec
mov
dec
push
push
sahf
lds
xor
in
jo
dec
xchg
sbb
cmpsb
cmpsb
push
dec
jg
test
lods
mov
push
cmpsl
insl
les
insb
jge
ss
out
pop
xchg
outsl
jmp
mov
push
faddl
dec
das
cmc
jnp
fisttpll
dec
xchg
sti
shr
adc
sub
nopl
mov
loop
shr
sbb
in
lock
stos
cmp
hlt
fwait
sbb
ja
lret
rcrb
dec
movsb
pop
dec
xchg
lret
ror
dec
fildll
adc
mov
pop
mov
das
cmp
cwtl
inc
jmp
adc
clc
sti
mov
or
xor
gs
imul
aas
lcall
fiaddl
ss
ja
jecxz
adc
cmp
sbb
shrb
push
inc
jecxz
push
hlt
jne
jmp
hlt
jb
pop
ret
loopne
mov
pop
mov
push
mov
add
scas
cmpb
adc
mov
mov
and
call
fidivrl
or
jae
popf
mov
out
inc
xor
jg
mov
lods
imul
test
xor
pushf
lahf
mov
ja
inc
or
hlt
out
lret
cli
jbe
call
test
call
inc
pop
stos
pop
xor
test
push
xchg
stos
xor
ljmp
in
gs
sub
iret
mov
inc
cmp
in
push
pop
filds
sub
subl
add
sub
dec
jns
push
aaa
out
pushf
loop
shlb
add
and
aam
scas
aam
les
jo
xor
je
inc
ja
xchg
clc
aad
lods
inc
testl
adc
mov
imul
loopne
loop
cmp
leave
repnz
adc
fs
outsl
popf
add
sbb
xor
mov
push
stc
lret
out
mov
mov
dec
lods
jl
add
add
imul
shrb
and
mov
lcall
es
sub
mov
push
pop
xor
mov
lea
pop
xorb
lcall
mov
cmp
mov
daa
and
notl
jp
adc
cli
fnstsw
pop
loope
pop
cmp
inc
leave
or
mov
fbstp
lret
mov
outsb
cmpsb
dec
jmp
mov
push
jmp
imul
mov
sbb
inc
shlb
or
fcoml
xor
add
fldl
movsb
and
mov
or
cmp
out
loopne
jmp
lret
cwtl
mov
fildll
mov
sub
leave
or
adcl
aam
jno
jns
enter
push
shll
xorb
push
shrb
dec
cwtl
subb
subl
ja
aad
xor
add
test
mulb
mov
dec
cmpsb
mov
into
adc
adc
je,pt
ror
jno
xchg
mov
push
cld
adc
and
mov
sub
xor
idivl
mov
cltd
out
cld
leave
xchg
les
xchg
cmp
jb
movl
push
jns
call
mov
jl
js
push
mov
pop
cs
mov
mov
mov
push
pusha
int
inc
push
xchg
addl
adc
fidivl
in
lea
xor
cli
int
punpckhdq
lock
jmp
mov
jg
and
ds
mov
scas
inc
or
outsl
mov
sbb
sbb
cmc
aam
push
cli
cmpl
imul
jge
outsl
push
popa
xchg
jmp
sbb
repz
scas
cmc
pusha
popa
cld
cmpsb
sbb
aad
dec
sub
and
shrb
nop
or
jne
pop
fmuls
cmp
mov
lcall
inc
out
daa
dec
cmpsl
nop
jnp
sbb
sbb
mov
out
stos
movsb
lret
push
lret
dec
repnz
adc
cmpsb
out
adc
rcl
mov
sbb
dec
outsl
mov
stos
lods
pop
lds
leave
lcall
sti
add
push
in
jo
jne
adc
add
mov
cld
add
mov
sub
in
xchg
xchg
cltd
mov
call
jl
sub
pand
xor
es
movsl
or
sti
ret
test
lock
mov
mov
sbbb
cmpsb
mov
cmp
fsubrs
inc
popa
push
push
dec
das
jmp
hlt
xor
jg
in
shll
mov
ror
jp
xchg
fidivrl
inc
mov
pop
dec
lea
out
pop
in
pop
fnstcw
nop
mov
cmpsl
xchg
pop
mov
lods
xor
jbe
rcrl
stc
push
xchg
jmp
mov
fwait
and
popa
movsb
sbb
bound
xor
jg
ror
pop
sarb
push
outsl
mov
and
lea
test
dec
sub
push
mov
add
shl
out
mov
movsb
mov
pusha
repnz
jl
mov
pop
lahf
leave
push
mov
fldt
movsb
enter
outsl
dec
sbb
cld
dec
add
filds
enter
push
mov
or
xchg
jl
mov
test
sub
aaa
addb
sahf
lcall
inc
inc
push
arpl
adc
jg
mov
push
mov
mov
sbbb
cmp
add
xor
jo
jo
out
cli
cld
sbb
jno
dec
stc
leave
mov
or
mov
in
mov
jns
dec
lock
dec
jge
mov
inc
dec
out
lahf
repz
repnz
das
cmpsl
fwait
dec
jmp
mov
jg
add
xchg
or
push
sub
adc
cmpsl
pop
xchg
or
or
mov
pop
repnz
adc
xchg
jp
push
lea
clc
mov
sbb
dec
scas
lret
cmc
insb
call
int
sbbl
push
call
leave
lods
dec
adc
dec
push
ja
bound
lahf
add
fdivs
aaa
leave
or
nop
sbbl
out
cmpsb
incl
dec
xchg
fsubrs
lods
xchg
pusha
pop
cmpsl
pop
lret
sahf
sub
das
fimuls
or
test
test
mov
cmp
stos
adc
repnz
mov
fdivrs
jnp
and
pop
out
sbb
xchg
pop
xchg
push
mov
je
jmp
sub
loopne
jmp
out
or
fs
sub
rorl
mov
and
pop
pop
stc
lds
cwtl
sbb
pop
gs
leave
test
js
lea
into
orb
ror
xorb
dec
mov
fstps
ja
pop
jl
mov
mov
lret
inc
out
std
das
out
and
dec
outsb
xchg
and
imul
push
jo
loope
lds
lcall
mov
iret
sbb
pusha
cmp
mov
push
sub
movsb
mov
sbb
pop
loop
xor
mov
stos
out
mov
cltd
in
rol
cmpsl
imul
add
mov
xchg
mov
bound
sti
mov
movsb
femms
inc
std
pop
outsb
insb
movsb
sub
enter
push
stos
mov
xorl
fdivrl
cmp
mov
out
inc
lret
pop
aas
fcmovb
subl
cmp
mov
test
jmp
andb
aas
cld
mov
inc
mov
push
std
sub
out
xchg
gs
imul
dec
arpl
mov
popa
jge
dec
call
fs
mov
inc
push
add
or
sub
fbld
inc
add
jns
jne
xor
pop
cmp
push
pusha
adc
mov
lret
cmp
inc
or
and
loop
push
dec
push
adc
xor
jge
nop
scas
adc
push
and
xor
dec
pushf
pop
xchg
cmp
movsb
and
add
int3
xchg
mov
int
int
orb
jbe
shr
xor
cwtl
or
stos
dec
mov
pop
sub
hlt
push
push
and
jle
mov
ficomps
lods
imul
aad
fbld
cltd
in
rcl
mov
test
xor
jnp
push
and
cwtl
lods
xor
cmp
aad
mov
sbb
jp
sbb
adc
aas
iret
ficoml
mov
mov
mov
xor
lahf
cs
std
add
rolb
orb
sbb
inc
add
mov
jecxz
outsb
pop
xchg
lcall
dec
icebp
or
cmp
mov
pop
das
orl
xor
sub
out
adc
inc
int
sub
inc
cwtl
and
adc
clc
mov
fs
lret
cmp
push
sub
mov
lret
push
jmp
fists
mov
push
inc
jb
jl
cmp
and
pop
jne
xchg
adc
or
mov
push
scas
or
sbb
cld
jns
data16
out
jo
mov
shrl
iret
xor
add
scas
push
add
js
cmpsb
cmp
sqrtps
jne
daa
xchg
mov
xchg
scas
cmp
inc
jl
lods
fstpl
out
xor
sub
jo
ret
lds
pop
je
or
lahf
pop
mov
insb
imulb
aaa
push
scas
negl
loop
andb
inc
push
add
popa
mov
cmpsb
scas
pop
lods
push
lock
dec
stos
add
sbb
outsb
jbe
ja
fwait
adc
jne
lret
mov
out
jne
jnp
or
insb
sub
xchg
mov
mov
mov
ficoms
mov
inc
dec
mov
mov
mov
aad
and
inc
xor
daa
fstps
xchg
sbb
mov
inc
les
jne
or
mov
lock
popf
pop
cmp
leave
adc
push
les
les
mov
outsl
pop
fsubrl
mov
insl
mov
cli
pop
bnd
xchg
inc
in
cltd
ja
push
imul
cmpsb
and
mov
jbe
and
enter
or
push
sbb
fidivl
sbb
fnstcw
cli
mov
in
test
shlb
mov
cmp
int3
subl
cld
or
jle
bound
mov
fadds
jbe
jp
dec
insl
sub
stos
add
enter
pop
or
ds
mov
test
and
inc
xchg
sbb
pop
jmp
shll
in
mov
repnz
movsl
jp
fsubrs
cs
dec
adc
mov
bound
pusha
aas
shrb
xchg
cmc
jae
cwtl
cmp
ficompl
xor
mov
fistl
push
jb
lahf
sbb
mov
jmp
push
outsb
add
movsl
loopne
mov
movsb
and
addr16
mov
loop
cli
cwtl
aas
dec
sbb
mov
lods
daa
aas
popf
gs
aaa
mov
out
adc
sbb
fistl
and
push
inc
or
stos
jmp
push
in
xor
dec
testb
fwait
stos
outsb
out
cmc
in
cmp
rolb
lods
mov
push
push
pop
scas
sub
jg
mov
clc
stc
cmp
rol
popf
data16
or
imul
in
inc
scas
and
xor
test
nop
shl
xor
sub
inc
xchg
mov
pop
xchg
xchg
stos
addl
es
ss
stos
leave
pushf
fs
pop
test
shl
lret
add
sub
sub
aam
stc
mov
pushf
jbe
xchg
popf
inc
fimuls
jnp
leave
fsubrp
enter
jne
cmp
or
imul
jmp
roll
add
cwtl
pop
adc
push
fisttpl
jmp
jbe
mov
push
repnz
add
imul
inc
xor
out
jle
ficoms
aas
xor
adc
clc
xlat
rcrl
shll
andl
and
sbb
mov
pusha
jmp
xchg
push
pop
incb
movb
jb
cmp
dec
jns
jge
mov
ja
jnp
call
sub
nop
add
adc
mov
scas
cld
nop
mov
cli
enter
call
push
negb
and
push
stc
nop
scas
nop
dec
out
push
mov
mov
mov
ret
mov
jge
push
xchg
fdivl
in
xor
lret
arpl
fwait
cmp
insl
std
inc
out
mov
sbb
mov
or
push
add
daa
aad
out
mov
xor
ds
mov
push
out
subb
jge
jne
or
mov
fnstcw
pushf
mov
mov
add
dec
mov
adc
ret
push
jecxz
sbb
mov
mov
int
jp
imul
fistl
mov
je
sub
or
shlb
je
xor
rcrl
and
sahf
adc
faddp
in
call
loope
jle
inc
sub
imul
xchg
lahf
sbb
repz
popf
mov
loope
ljmp
adc
inc
cmp
cltd
int3
jno
fildl
pop
mov
sub
sarb
insl
and
xchg
test
push
ja
test
jp
cltd
js
adc
sbb
or
sub
cmp
mov
addb
pop
mov
lea
stos
aaa
loop
sub
iret
fcoms
mov
cmpsb
adc
dec
out
dec
scas
jnp
mov
aam
inc
outsb
fisubl
mov
in
aas
es
sbb
sbb
inc
js
sub
sub
repnz
adc
out
ret
add
outsl
stos
gs
sbb
cmpsb
mov
cwtl
test
outsb
dec
dec
fldcw
pop
and
pop
shrb
mov
bound
lods
adc
jmp
mov
xorb
mov
dec
into
out
mov
fwait
cld
in
mov
fs
push
shlb
and
dec
adcl
mov
jne
push
dec
add
mov
add
dec
lret
push
mov
mov
jbe
cmp
je
push
ret
sbbb
adcb
dec
jns
dec
aam
xlat
mov
lods
mov
das
mov
cli
add
cmp
scas
mov
roll
ret
cmp
jle,pn
test
mov
je
or
insl
out
xor
sub
incb
call
in
or
test
jp
rcll
push
adc
loopne
ja
loope
mov
ror
sub
fnstenv
mov
or
lcall
int
cld
pop
mov
or
test
mov
push
shrl
push
pop
icebp
pop
xor
pop
clc
pop
mov
pop
cmpsb
cli
mov
mov
sub
add
cli
fdiv
nop
lcall
rolb
loop
int3
cmc
lahf
ret
push
lret
cmp
in
loope
rorb
inc
int
outsl
cmp
stc
fwait
out
mov
lock
in
cld
mov
mov
dec
and
inc
pop
push
mov
inc
test
inc
call
ss
xor
mov
cld
inc
xlat
inc
push
or
pop
sub
xchg
test
xchg
test
and
xor
filds
xor
fldcw
adc
dec
xchg
lods
fdivrl
adc
mov
cmp
outsl
ds
sub
xchg
imul
mov
dec
cmp
out
dec
pop
imul
fstpt
jb
xor
dec
cmp
cmp
jnp
jmp
loop
push
sbb
inc
adc
dec
les
repnz
scas
jbe
pop
imull
out
jnp
lret
mov
jl
and
test
or
dec
xchg
xor
jg
std
in
mov
aad
jo
inc
or
lret
orl
add
and
ds
add
movsl
subl
add
jge
push
jle
mov
mov
nop
and
pop
in
sub
inc
stc
push
les
jle
cmp
push
jo
rolb
cmp
dec
loopne
pop
in
lahf
ja
push
add
daa
loopne
xchg
loop
fists
stos
adc
sarl
xor
xor
adc
add
push
push
pop
mov
lahf
clc
or
jno
pop
mov
lods
mov
sti
jg
int
and
adc
repnz
test
nop
add
mov
lock
jb
fs
push
lods
mov
fldt
testl
sti
and
xor
mov
inc
cltd
fisubrl
dec
mov
sub
fs
add
xchg
daa
xor
or
xchg
mov
xor
cs
ss
out
push
daa
subl
pop
mov
inc
clc
adc
adc
xchg
cld
or
std
cld
ja
mov
mov
daa
stc
mov
je
jecxz
sbb
pop
out
add
push
sbbb
out
repz
mov
add
and
mov
mov
cwtl
jno
adc
test
cmc
cmc
hlt
and
popa
xor
jne
add
call
and
into
testb
jns
inc
imulb
popa
jbe
insl
lret
lahf
jg
in
push
pusha
mov
jg
stos
lock
xor
cmp
adcb
shll
out
cmp
mov
push
adc
jnp
shlb
je
stc
fcompl
cmpsl
shlb
push
xor
mov
ret
imul
aam
and
test
push
pop
inc
insb
adc
stc
or
pop
cmp
mov
jecxz
das
dec
mov
in
les
inc
sub
xchg
mov
imul
adc
sbb
lock
in
pushf
lea
mov
out
outsb
bound
out
adc
cmpsl
and
test
pusha
orb
movsl
cwtl
jnp
jmp
cmp
repnz
or
or
pop
rcr
mov
jns
jno
icebp
xchg
xchg
mov
mov
mov
xchg
popa
add
stos
or
fnstenv
add
xchg
mov
das
or
cmp
mov
mov
dec
xchg
lret
dec
psrld
sub
mov
fcmovb
mov
clc
mov
push
fdivrs
int3
imul
add
fsub
lods
push
mov
jmp
mov
sbb
call
sub
xchg
jl
xor
cmpsb
and
inc
inc
in
pushf
adc
cld
cmp
out
mov
push
sbb
ljmp
outsb
je
les
andb
pop
adc
push
jb
stos
cli
push
outsb
mov
mov
pop
mov
inc
div
cmp
js
push
sar
mov
cltd
clc
das
cli
adc
or
sbb
mov
fisubs
pushf
or
push
test
cmp
ror
push
movsl
jmp
mov
push
jnp
fcomip
lahf
push
outsb
cmp
repz
jl
cmp
cmpsl
mov
xorb
jmp
add
ficompl
mov
jb
pop
adc
and
and
adc
popa
adc
jae
adc
jmp
ljmp
mov
fldenv
sbb
or
cld
pop
lcall
xor
or
lods
aas
cmp
cmp
mov
fldcw
insb
jnp
mov
pop
idivl
push
add
dec
test
imul
pusha
rorb
aas
mov
enter
rcrl
jl
bound
jg
or
test
js
je
cmp
sub
aas
inc
mov
stc
sahf
sarl
out
adc
mov
and
rcrl
shrl
shufps
ret
xchg
mov
pop
clc
adc
dec
popa
cs
scas
sbb
nop
cltd
cmp
and
fildll
aas
mov
clc
repz
enter
push
int3
mov
adc
in
in
cli
sbb
inc
mov
xor
push
addr16
cmp
testb
pop
dec
dec
jmp
lahf
call
mov
mov
loop
loope
mov
lea
fistps
and
ja
mov
cmc
dec
dec
sbbb
fistps
clc
xchg
cwtl
icebp
outsl
lret
pop
ret
shl
pop
xchg
cmpsl
sbb
shlb
sbb
notl
add
or
pop
sbb
scas
mov
std
pushf
out
ds
mov
and
cmpsb
jmp
rcrb
mov
push
gs
das
lret
cli
ja
int3
cwtl
outsl
mov
adc
in
cmpsl
fcmovu
push
js
sarl
rorl
lret
aad
dec
mov
mov
xor
pop
xchg
out
mov
and
stc
mov
enter
cmp
cmp
jge
repz
or
lret
inc
mov
jo
stc
jne
rorl
repnz
cmpsb
in
pop
stc
jno
push
nop
xchg
mov
jne
lods
out
into
dec
lahf
pop
xor
push
adc
mov
insb
pop
fisubrs
or
mov
dec
jno
cltd
jns
stc
out
adc
xor
fbld
and
sbb
xlat
into
jae
shl
andb
jnp
xor
mov
sarb
dec
cmp
addr16
clc
inc
push
mov
cs
or
mov
int
sbb
mov
inc
xchg
cmp
je
pop
imulb
in
and
push
nop
adc
jbe
iret
repnz
xchg
xchg
dec
xchg
sbb
sbb
popf
icebp
test
imul
cmp
lods
dec
jecxz
fs
movsb
sub
adc
xchg
jmp
lcall
mov
mov
cmp
shrb
pop
insb
jmp
jl
popf
and
fsubs
jne
mov
adc
jge
out
xlat
xor
js
in
pop
les
push
rorb
sarb
loop
push
in
push
out
push
sti
fistpll
movsb
mov
je
iret
lret
inc
shll
xchg
adc
pop
jnp
stc
jp
and
in
and
test
int
lahf
xor
add
call
pop
lahf
cmp
jge
jl
loope
dec
sub
shlb
inc
jmp
cmp
sar
or
push
and
cmc
xor
jg
or
and
push
pop
push
ljmp
pop
jae
lods
xchg
xor
pop
sbb
outsb
sbb
movsb
mov
cmp
pinsrw
mov
shrl
mov
dec
dec
mov
cmpsl
jp
and
cltd
shrl
sbb
fistpl
or
loope
xor
in
mov
xchg
sub
sub
cld
test
lcall
dec
xlat
push
xchg
mov
pop
lds
push
cmp
mov
push
push
pushf
mov
add
xor
cmp
scas
cmp
icebp
inc
inc
dec
js
insb
add
push
dec
enter
int
je
stc
and
addr16
or
mov
int
cmc
jmp
inc
clc
into
fdivl
xchg
mov
aas
xchg
pavgw
fcmovnbe
mov
cld
dec
mov
push
out
ljmp
add
xor
sub
popl
iret
out
mov
xchg
or
out
mov
pushf
mov
xor
jae
loope
test
mov
scas
pop
fscale
dec
outsb
ret
scas
pop
aam
sbb
int3
cmp
lods
xchg
das
inc
es
pop
jno
sub
lea
sub
sti
jp
adc
jno
movsb
in
mov
fcmovb
arpl
jl
mov
lods
lock
lods
dec
mov
jno
in
scas
nop
rolb
jo
scas
movsl
xor
mov
std
movsb
cltd
inc
imul
psadbw
push
sub
call
mov
xorl
repnz
push
mov
xchg
in
sbb
dec
inc
or
xor
int
xor
mov
fisubrs
jmp
cltd
femms
loopne
pusha
mov
clc
pop
imul
nop
jg
jns
mov
stos
notl
cmp
jb
test
aam
sbb
scas
jno
or
rcll
mov
stos
jns
mov
and
cmp
xchg
leave
mov
fildl
jns
lds
xchg
inc
fcomps
fisttps
pushf
stos
out
cmp
adc
push
add
sbb
push
or
dec
or
mov
sbb
in
sub
xlat
mov
fisubrs
mov
adc
rcr
jg
imul
xchg
mov
sti
inc
or
inc
sbb
testl
xchg
mov
out
fildl
jmp
add
aas
addr16
jmp
inc
mov
fcomps
je
mov
sbb
push
jmp
xor
xchg
incl
out
xor
xchg
jo
and
sbb
cmc
sbb
mov
add
inc
test
xor
and
hlt
pop
addr16
mov
pop
cmp
mov
add
les
mov
stos
sub
mov
push
ja
add
sbb
out
xchg
cmpsb
out
xor
cmpsb
test
adc
push
roll
adc
cmc
push
and
pop
mov
cs
jp,pn
add
push
pop
iret
aam
dec
sbb
inc
imul
iret
adc
insb
insb
adc
pop
addl
pop
sub
xor
adc
sbb
loopne
pop
adc
and
and
sub
fmull
jb
aas
dec
add
fidivrs
sub
ja
add
in
xchg
lret
ficoms
fsubrp
adc
push
inc
or
xchg
lcall
stos
inc
fbld
ss
jle
xchg
iret
ficoms
xchg
cmp
std
mov
fistl
mov
in
pop
insb
sub
dec
mov
push
aaa
jbe
scas
cmp
sarb
testb
aad
and
pusha
mov
ret
push
pusha
aam
push
sbb
insl
icebp
lret
shlb
jns
test
js
pop
add
push
mulb
jo
lods
xchg
leave
fimull
adc
dec
xchg
icebp
ret
out
lcall
cli
xchg
pop
jmp
mov
out
add
fwait
sbb
nop
fimuls
cli
test
fwait
pop
orl
repnz
in
cltd
sub
adc
sahf
jnp
inc
add
mov
lahf
sub
push
xor
xchg
call
sti
jl
jl
ret
pop
xchg
xchg
loopne
inc
mov
test
mov
popa
mov
inc
mov
in
divb
and
les
fbld
jmp
fdivrl
fsubrl
xchg
aas
sbb
mov
bound
push
push
clc
add
lea
push
inc
lds
cld
jge
jns
push
pop
in
test
or
push
sbb
shll
imul
lock
call
repnz
fwait
push
xor
inc
mov
inc
inc
stos
imul
xchg
imul
dec
das
jo
divb
xchg
inc
mov
fnstenv
stc
or
cltd
pop
mov
ds
mov
add
call
addr16
adc
inc
and
in
dec
jmp
stc
xchg
xchg
lret
imul
jae
out
xor
jne
cmp
inc
cltd
xchg
aad
jecxz
fisubrs
movsb
mov
jp
dec
lcall
cmp
add
or
and
inc
cmp
repnz
out
jae
dec
and
sub
push
shr
push
jne
xchg
sbb
xchg
mov
sub
imul
cmp
jmp
cmp
into
cli
daa
pusha
xchg
mov
mov
iret
ret
jmp
sahf
sub
ss
addr16
sub
in
pop
and
add
push
xchg
sub
mov
gs
call
cltd
je
data16
jmp
mulb
or
and
dec
lcall
hlt
andb
mov
fld
cs
dec
sub
mov
jne
dec
cmpl
das
inc
inc
rolb
jnp
dec
icebp
mov
dec
adc
xchg
mov
dec
pop
mov
fldl
adc
gs
loope
dec
mov
push
aas
addr16
jle
pop
push
push
sub
enter
cmp
aad
jmp
aam
add
mov
push
cmp
lret
jge
ret
pop
mov
add
sub
test
cmpsl
pop
iret
fistps
lret
add
shl
sbb
mov
inc
leave
repnz
mov
push
roll
ja
mov
cmp
or
dec
fdivrs
jno
xchg
mov
outsl
loop
sti
mov
rcr
xlat
mov
mov
mov
ja
and
pushf
push
push
push
xchg
dec
popa
and
scas
jmp
xlat
mov
rolb
aam
fisttpl
popf
adc
xchg
les
sub
inc
sbbl
scas
mov
inc
inc
sbb
and
pop
cmpsl
notb
adc
inc
dec
std
mov
mov
es
ret
cmp
shll
je
push
push
mov
mov
int3
xlat
xor
inc
dec
mov
inc
mov
mov
lahf
inc
jg
nop
test
es
jb
mov
dec
dec
clc
sub
mov
mov
add
gs
arpl
arpl
xor
push
inc
rol
imul
dec
popf
leave
push
lcall
mov
mov
xchg
lret
cld
lret
inc
out
push
jp
xchg
mov
enter
or
add
cwtl
adc
fdivl
xchg
inc
stos
mov
outsl
jp
cmp
testl
cmpsl
mov
push
mul
je
pop
cmc
mov
cmp
jns
push
movsl
mov
mov
loopne
sbb
cmp
mov
shl
outsb
inc
shll
xchg
dec
mov
lret
mov
add
test
pop
push
iret
xchg
push
repnz
aas
data16
aas
jno
dec
cmp
leave
stos
mov
sub
fsts
jecxz
ja
scas
sub
mov
in
mov
mov
adc
dec
scas
push
insb
scas
mov
add
pop
sbb
dec
inc
mul
out
adc
insl
mov
dec
daa
dec
ja
lods
cli
push
js
mov
mov
jnp
call
outsb
inc
fs
sahf
dec
add
bound
inc
mov
add
mov
lea
insb
js
push
pop
cmpsl
mov
cmp
push
inc
ljmp
pop
add
in
and
std
pop
rorb
fstps
sub
and
icebp
mov
push
sbb
xor
xlat
or
lds
mov
add
cmp
inc
or
xchg
gs
cwtl
cmp
std
dec
adc
fstps
mov
or
lods
dec
stos
hlt
in
aas
dec
shlb
push
xchg
inc
mov
in
repnz
mov
pop
or
movsl
stos
mov
ds
cs
out
push
jecxz
adc
iret
or
ret
pop
sub
jns
push
bound
xchg
cld
loopne
sbb
nop
clc
cltd
fucomp
xchg
in
sub
mov
in
add
lcall
jp
xchg
xchg
add
sar
xor
mov
subl
inc
bound
cwtl
imul
inc
and
mov
jb
sbb
lods
or
daa
mov
or
and
cmp
adc
fildll
sub
dec
fsts
dec
push
ficoml
mov
pop
push
sub
xor
imul
lret
inc
pop
jno
add
inc
adc
je
ja
cmp
adc
mov
mov
dec
out
es
or
sahf
sub
adc
pop
inc
mov
mov
hlt
test
dec
adcl
push
mov
insl
scas
or
sub
push
popa
bound
xchg
fsubp
icebp
or
fwait
in
shlb
jae
leave
dec
sbb
xlat
int
jns
ret
push
aaa
popfw
addl
and
sahf
pop
jnp
in
out
push
test
lcall
orl
ret
call
outsb
pop
lods
cmpsl
push
push
int3
rclb
es
xchg
jp
fldenv
jnp
scas
adc
and
daa
xchg
adc
sub
std
and
pop
scas
mov
sub
jge
push
sbb
jle
stos
in
out
add
push
jmp
in
std
xchg
mov
cmp
add
adc
mov
mov
out
std
adc
adc
or
or
out
scas
aaa
xor
mov
aad
xor
add
pop
cld
sub
cmc
bound
cmp
dec
xchg
sbbl
jne
ret
das
ret
out
or
lcall
int
add
push
movb
push
fdivl
xchg
xor
popa
inc
mov
aas
aas
lahf
je
jb
jns
aad
and
and
xlat
mov
bound
ror
out
int
call
scas
out
cmp
hlt
lahf
add
js
xor
sbb
lock
mov
inc
lock
pop
pop
popf
and
daa
mov
mov
dec
add
js
or
mov
dec
xchg
adc
sbbb
mov
mov
mov
xor
jmp
pusha
ljmp
ja
call
es
out
mov
daa
out
sub
mov
pop
pop
push
dec
xor
jmp
enter
push
mov
ffree
sbb
dec
hlt
mov
cmp
inc
adc
movsl
inc
scas
dec
sub
xor
cmc
cmc
mov
aaa
sub
insb
shl
fs
sbb
sti
pop
xchg
pusha
lahf
out
mov
adc
sbb
inc
mov
sub
ds
rorb
je
mov
adc
adc
lret
movsl
fsubrs
mov
insb
loop
jb
mov
lcall
jo
mov
idivl
pop
mov
xchg
testb
sub
cs
jl
stc
sbbl
cmp
dec
cli
sub
repnz
xchg
inc
mov
or
push
push
cmpl
fdivr
arpl
aaa
out
mov
jp
adc
lcall
mov
icebp
jg
sub
inc
stc
add
aad
and
lcall
pop
inc
sub
xchg
add
sub
fisttpll
jno
daa
push
mov
loop
mov
pop
push
jmp
movsb
push
ret
add
fnstcw
fldz
xor
adc
mov
lret
repz
inc
jmp
sbb
mov
rol
pop
push
jecxz
lret
mov
mov
bound
cs
mov
jp
iret
jbe
jbe
lds
jae
inc
inc
loopne
pop
movsb
aam
rcl
xor
push
dec
jge
lret
jmp
and
xlat
mov
in
mov
or
or
push
pushf
jp
out
dec
xchg
lock
jae
out
into
xor
sbb
das
cmp
bound
mov
dec
dec
cmpsb
mov
fldcw
jg
cmp
das
test
in
push
jecxz
pop
stos
movsb
insb
dec
nop
jno
mov
lods
sahf
mov
shrb
les
js
fistpl
jp
outsl
in
in
sahf
mov
jne
into
push
lcall
mov
mov
sub
mov
adc
sub
mov
in
lret
and
sbb
push
sub
sbb
mov
les
dec
add
inc
je
mov
flds
inc
shrl
inc
divl
cmpsb
fcmovb
hlt
lcall
push
push
and
movsl
leave
loop
xchg
xchg
push
xor
xchg
push
jb
jg
pusha
xchg
inc
aad
cmc
mov
scas
sbb
or
aas
mov
js
adc
fdivl
std
repnz
jmp
push
mov
daa
icebp
sbb
jae
add
push
roll
jmp
lds
inc
cmp
pushf
push
fsubl
mov
iret
hlt
loopne
idivl
outsb
repz
push
popf
jae
jbe
jmp
jb
xor
test
divb
sbb
jecxz
ret
repnz
shlb
mul
in
ja
test
movl
jb
gs
popa
pop
das
push
outsl
pop
adc
in
mov
daa
mov
jbe
stos
dec
test
jae
iret
xchg
aas
shl
test
mov
xor
mov
sub
popf
or
fldt
xchg
adc
jne
lcall
adc
xchg
and
push
bound
and
movsl
negl
out
mov
insl
mov
mov
adc
insl
cwtl
push
xchg
dec
shlb
mov
enter
sbb
inc
jl
xor
jge
mov
test
imul
push
dec
int3
lods
sub
and
sbb
xor
jb
mov
mov
cmpsb
repnz
repnz
add
sbb
out
cmp
dec
js
in
xor
ret
into
clc
jo
xchg
xlat
jecxz
sti
std
and
add
sbb
daa
or
std
outsl
lahf
int
loope
in
imul
push
xor
call
bnd
mov
and
or
out
test
add
aas
sarl
jnp
inc
inc
pop
into
ret
lods
int
adcb
mov
pop
inc
push
jo
sub
idivl
dec
cmp
add
push
jnp
xchg
sub
jne
or
hlt
mov
mov
push
leave
stos
sbb
push
pushl
push
addb
or
imul
out
add
dec
inc
mov
nop
xchg
sbb
push
dec
rcrb
push
clc
es
mov
xor
nop/reserved
daa
aad
imul
loope
jno
adc
arpl
dec
or
sbb
movsl
icebp
insl
test
pop
adc
xchg
jmp
pop
xlat
xor
enter
test
mov
sahf
mov
pop
xor
pop
mov
push
hlt
xchg
lret
cmc
es
inc
lds
pushf
sti
add
insl
xchg
push
sub
sub
push
pop
into
cmpsb
imul
push
adc
lret
lret
xor
push
daa
sub
cli
jno,pn
leave
aad
cmpsl
fs
ss
mov
imull
xchg
imul
inc
or
sti
pop
mov
xchg
popa
imul
push
pop
in
scas
sbb
and
pop
xor
ret
fadd
xor
orb
add
dec
arpl
inc
sub
inc
shrl
adc
movsl
xchg
ss
imul
push
push
lcall
imul
push
repnz
add
sbb
in
xor
jno
sbb
inc
push
sub
mov
jecxz
fxch
sbb
dec
pop
sub
gs
mov
mov
iret
xorb
mov
loopne
xchg
fwait
scas
adc
in
xchg
pushl
and
inc
adc
in
jle
add
orb
popf
pop
mov
aam
sbb
sbb
loope
ficomps
or
lcall
xor
dec
out
mul
mov
jl,pn
mov
xor
xchg
mov
fdivs
lea
stos
inc
jne
into
sub
clc
pop
sti
lock
out
cmc
scas
push
push
sbb
fnstcw
and
pop
xchg
cmp
push
in
adc
mov
sub
and
sbb
jl
hlt
or
pop
into
jg
mov
clc
jns
sub
sgdtl
ja
notb
pop
inc
adc
push
clc
mov
shlb
xor
cmpsl
adc
lret
push
push
jne
cmp
cltd
data16
pop
dec
out
decl
xor
push
ret
pop
loop
sbb
jge
pop
popa
cs
and
cmpsl
inc
adc
mov
in
mov
xor
movsl
and
add
ret
and
push
enter
adc
mov
and
jge
test
add
inc
sub
mov
xchg
jp
sbb
mov
popf
nop
inc
mov
adc
pop
into
xor
psllw
xor
mov
cmp
mov
into
jl
pop
stc
xchg
cmp
cmp
inc
pop
loope
cmp
cmp
mov
lods
xor
clc
and
fsubr
loopne
or
or
in
les
loopne,pt
ds
ja
fistl
into
inc
cmp
out
dec
fmulp
adc
and
push
loope
lcall
mov
xorb
sub
dec
sub
jge
fimull
pop
test
les
jae
mov
cmp
push
outsb
sub
xor
test
sarb
xchg
aas
inc
das
bound
inc
std
dec
sub
add
inc
popf
push
xor
dec
sbb
cld
fsubrp
in
gs
cmp
nop
mov
ret
add
in
jmp
inc
mov
mov
gs
es
subb
mov
es
sub
out
xor
dec
lret
cwtl
jp
xchg
mov
imul
aad
movsb
xor
xchg
fs
mov
adcb
std
fldcw
int
fdivl
sbb
mov
pop
jns
movb
int3
test
sbb
xchg
ret
icebp
mov
sbb
push
cld
xor
pop
rol
mov
sbb
inc
scas
inc
orb
scas
call
xchg
mov
xlat
mov
fiaddl
xchg
jo
out
xor
ja
nop
xchg
dec
xchg
xor
push
js
mov
shrb
jge
xor
fmul
pop
pop
push
ret
jp
adc
popf
mov
popf
adc
sub
mov
jle
xchg
fisttpll
mov
lods
fimull
cmp
leave
lods
data16
and
cli
mov
inc
push
push
aad
mov
pop
dec
mov
rcrl
mov
clc
jmp
movsl
add
sub
imul
and
push
pop
lahf
in
inc
mul
or
imul
push
cwtl
push
pop
push
xor
in
aaa
sub
fidivrs
lods
or
gs
scas
ret
fisubs
cmpsb
test
fdiv
ljmp
ret
rorb
sti
cmp
xor
hlt
inc
mov
mov
cmpsl
and
jb
mov
pop
mov
bound
push
adc
and
test
mov
inc
xchg
movsl
cmp
add
push
push
pop
inc
xchg
sub
and
jge
xchg
leave
punpckhbw
insl
xor
pusha
rcrl
jmp
and
cmpb
mov
mov
clc
jge
adcb
andb
scas
cmp
mov
cmpsl
rcrl
stos
lea
xor
rorb
test
mov
iret
leave
mov
push
or
stos
repnz
mov
or
mov
arpl
shrb
xor
dec
dec
imul
lret
cmp
mov
aad
int3
imul
mov
fnstsw
inc
adc
insb
cmp
loopne
xchg
test
fidivrs
in
jg
sahf
ret
mov
dec
sbb
lods
push
push
cmp
jbe
daa
and
or
imulb
je
sbb
inc
mov
ror
push
rolb
xor
add
aas
jno
daa
mov
ljmp
jmp
mov
in
xchg
and
outsl
inc
test
push
dec
jne
and
jbe
sarb
cli
inc
aaa
add
or
jb
imulb
pop
cmp
ds
leave
cmp
int3
xchg
std
cltd
jg
fs
aas
fsts
scas
fstps
mov
mov
push
inc
or
mov
dec
add
lcall
inc
out
pop
dec
sbb
out
bound
fldt
sbb
mov
mov
inc
nop
aam
icebp
aaa
pop
in
sub
push
push
nop
dec
and
stos
jno
test
dec
shrb
jb
stos
out
adc
mulb
loop
xchg
inc
or
pushf
gs
imul
jnp
sahf
out
mov
outsl
subl
lods
push
jl
jnp
scas
inc
lock
mov
xchg
mov
ret
cmp
sub
add
stos
sub
or
mov
cmp
xchg
push
divl
divl
jl
shrb
lock
pop
out
outsb
and
mov
mov
jl
mov
test
cmpl
cmp
incl
cltd
sub
push
insb
ljmp
not
sub
insl
and
sbb
jecxz
mov
pop
rcll
sub
xor
ret
sub
or
mov
xchg
and
add
repz
enter
test
mov
std
sbb
cli
out
test
xchg
jbe
iret
nop
rclb
jo
stc
in
lods
xchg
popa
add
and
pop
cltd
mov
mov
pop
mov
aad
mov
mov
insb
aam
les
or
xlat
sti
xor
cltd
ljmp
jns
insl
stc
inc
jmp
scas
cmp
rdmsr
jl
fnsave
test
inc
xchg
fcmovb
mov
or
je
daa
pop
popa
aas
mov
push
bound
xor
jg
pop
push
adc
sub
int3
icebp
mov
adc
push
cmc
dec
call
iret
and
lods
fsubrs
xchg
jno
mov
adc
mov
push
jmp
aam
pop
loop
or
push
cmpsl
xchg
scas
xchg
mov
data16
ret
cmc
aaa
scas
cmp
push
adc
ss
mov
mov
iret
leave
in
pop
mov
xchg
ds
add
xor
out
lcall
shll
lock
jle
aaa
xchg
or
add
jb
mov
inc
loop
cmp
mulb
in
cli
fs
and
adc
daa
adc
sbb
jecxz
sbb
add
dec
push
scas
aas
push
sti
pop
jp
jo
mov
or
adc
bound
mov
pusha
call
je
mov
ret
cld
mov
icebp
sahf
sub
jb
and
jae
pop
test
mov
and
shr
xorl
jne
pop
pop
hlt
shll
mov
test
pusha
arpl
sub
xlat
pushl
or
ffree
xchg
jp
jl
loop
insb
lods
xlat
mov
push
ss
dec
mov
mov
inc
mov
rcr
and
and
push
or
xlat
pop
test
out
pop
iret
leave
dec
fmuls
adc
test
cltd
je
add
add
in
ret
xor
mov
jmp
sub
test
xchg
faddl
sub
popf
add
pop
inc
fiadds
jmp
inc
mov
rorl
call
push
bound
lret
sub
int
outsb
int
cld
or
jmp
add
inc
int3
mov
add
mov
jne
xchg
jmp
gs
xchg
pop
movsl
adc
sti
outsl
add
xchg
xchg
rcrb
or
lea
fidivs
jno
in
add
cs
cmp
or
inc
inc
xlat
mov
sbb
xchg
mov
inc
sbb
pushf
mov
pop
add
ss
mov
mov
stc
faddp
lret
out
push
jo
cld
jecxz
loopne
rcr
pop
or
sti
pop
and
addr16
in
fwait
adc
sbb
repz
fwait
jae
dec
push
les
pop
mov
sbb
mov
bts
mov
jle
rclb
sti
stos
adc
xchg
lret
fists
mov
popf
jle
add
stc
cmp
es
in
into
cmpsl
cmp
push
neg
stos
sub
mov
push
pop
mov
cmp
out
add
clc
jl
loop
xorl
cmpsb
adc
mov
mov
popf
sub
insb
and
ljmp
mov
loopne
sub
xchg
cltd
clc
mov
cmp
inc
ret
ret
xor
jno
nop
std
mov
mov
call
mov
das
in
cmp
stos
fucomi
mov
xchg
testb
cmp
rcll
adc
or
push
sub
mov
dec
mov
add
int
enter
push
lods
mov
sub
dec
mov
or
lret
aaa
or
pop
pop
or
pop
mov
and
dec
cmc
add
inc
xchg
insb
xor
sbb
les
sbb
mov
es
add
sub
cmc
inc
setl
cs
xor
loope
shr
xor
adc
stos
lock
mov
rorb
mov
dec
xchg
jg
aaa
cmp
mov
mov
repnz
ds
xor
mov
and
icebp
dec
cmc
inc
insl
addr16
add
int
insb
rcrl
lock
and
lcall
icebp
push
lock
insl
pop
add
gs
ljmp
pop
adc
scas
mov
pop
rcll
xor
out
fisubs
nop
cmc
roll
add
cmpsl
pop
xchg
in
rcrl
mov
aam
and
xor
mov
adc
pop
loop
fidivs
cmpsl
loop
enter
mov
mov
fsubs
push
inc
dec
inc
push
fadd
push
pop
and
xchg
add
add
dec
lods
sub
nop
lods
mov
lahf
data16
sbb
int3
xchg
push
adc
cmp
pop
imulb
mov
stc
imul
mov
insl
mov
add
leave
loopne
xorb
and
mov
mov
paddd
xor
pop
mov
mov
dec
sub
ret
dec
dec
outsb
pop
repnz
add
and
out
or
mov
imul
loop
stos
aas
mov
lea
push
and
mov
xor
ret
add
or
push
cli
icebp
aad
rcll
xchg
insb
dec
jg
push
cmp
sti
cmp
ficomps
add
clc
mov
daa
rolb
sub
loope
lea
sub
in
inc
xchg
test
pop
jp
fld
cmc
outsl
orl
outsl
sub
cs
cmp
add
fsubr
je
lods
jmp
inc
dec
and
cltd
movsl
mov
cmp
sub
or
mov
add
xchg
mov
lret
in
test
and
outsb
mov
sbb
into
push
inc
jb
cmpl
aad
pop
fidivs
jbe
cmp
imul
mov
dec
add
stc
cmc
sbb
jg
mov
inc
test
mov
jnp
mov
push
push
or
movsl
push
ret
sbb
or
push
cmp
enter
pop
test
jb
xchg
iret
out
and
push
mov
fs
mov
xchg
mov
cwtl
xor
fsub
adcl
gs
push
test
push
fwait
scas
dec
shl
js
jns
out
cmc
pop
dec
je
sbb
mov
fcoml
or
mov
adc
shrl
call
sbb
xchg
cmp
and
sbb
jnp
push
test
es
int3
pop
jb
xchg
icebp
inc
imul
dec
movsb
cmpl
je
repz
and
xor
or
xchg
xchg
out
xchg
or
sbb
inc
loop
cmp
mov
idivb
outsl
mov
scas
fnstsw
xchg
sbb
or
sbb
lods
push
inc
xlat
js
lret
fadd
stos
lea
or
inc
mov
out
mov
jb
fst
sbb
jmp
and
cs
popf
push
xchg
mov
mov
pop
cwtl
pushf
adc
fisttps
icebp
dec
adc
adc
cmpsl
rorl
data16
leave
pop
fcmovb
sbb
test
fistpll
imul
loope
jmp
leave
cmpsl
loopne
push
adcl
and
adc
mov
add
or
cmp
cmp
or
hlt
push
push
or
push
icebp
loopne
pop
jp
pop
lods
imul
sbb
cmpsb
std
xor
outsb
call
xchg
mov
out
add
aaa
dec
pop
lea
hlt
or
stos
lahf
mov
pop
push
jmp
negb
mov
testb
and
ret
nop
add
mov
pop
jge
dec
inc
movups
popf
inc
push
lods
mov
mov
std
xchg
sbb
add
pop
dec
jl
dec
or
mov
sub
jmp
pop
out
int3
push
mov
cmp
lret
jl
lea
xchg
cmp
das
xchg
inc
stos
sar
jae
jle
hlt
jge
or
pusha
sub
arpl
cld
daa
out
push
arpl
inc
and
es
test
mov
pop
cmp
data16
push
dec
shrl
cmp
repnz
mov
or
icebp
jb
lock
mov
pop
xchg
xchg
mov
adc
xor
xchg
test
addr16
fldcw
sub
bound
sahf
mov
xchg
pop
arpl
and
push
cltd
push
std
push
xor
cmp
imul
imul
in
pusha
mov
lret
adc
rcll
jae
lods
add
ds
int3
leave
and
sbb
ret
pop
mov
fs
mov
fdivl
pop
call
add
cmpsl
subb
gs
sbb
sbb
xchg
add
lock
in
inc
cli
mov
gs
lea
aad
push
mov
data16
mov
push
xor
adc
dec
pop
and
dec
bound
cld
divl
testl
mov
mov
imul
rcrb
scas
lock
mov
push
std
pop
enter
xchg
iret
sub
outsb
ret
jae
inc
pop
xchg
cmp
xchg
mov
xchg
outsb
dec
sti
dec
mov
sub
adc
leave
mov
mov
cld
popa
nop
repnz
or
test
xor
mov
sub
inc
dec
test
stc
mov
fwait
jp
push
icebp
and
fsubp
pop
or
imul
cmp
mov
lods
cmp
loope
mov
popa
jnp
fxch
inc
std
jb
andl
mov
mov
push
push
inc
mov
mov
xchg
inc
sbb
cmpsb
xchg
cmpsb
ret
fdivr
dec
cmc
ds
daa
jl
add
mov
insl
push
and
lret
fwait
pop
dec
int3
sbb
push
loop
rcr
cmp
push
lea
mov
lahf
loopne
ds
adc
and
ret
cmpl
push
mov
cmpsb
cld
inc
test
jns
mov
insl
ss
int
inc
in
inc
inc
xor
lods
shl
imul
jb
cli
les
add
pop
lahf
std
rclb
xor
test
sub
and
jno
ds
jp
adc
and
xor
insb
dec
xchg
je
ret
mov
xchg
std
push
imul
lret
cmpsb
lods
inc
adc
jmp
sti
pop
fisttps
shll
jo
push
fimuls
cmp
cmpsl
add
out
cmpsl
sbb
xchg
and
movsl
and
repz
pop
into
out
and
js
icebp
repz
mov
dec
mov
mov
lds
add
andb
xor
mov
rcrb
mov
sbb
mov
add
or
push
icebp
scas
in
cli
sbb
mov
jae
or
push
pop
orb
add
das
repz
stos
mov
and
adc
shr
xchg
dec
outsb
out
sbb
jmp
loopne
shl
jno
sub
frstor
or
movsb
ret
sbb
xchg
jae
ljmp
pop
xchg
into
mov
jae
sbb
sub
popa
outsb
idivl
jns
bound
sbb
jge
mov
test
mov
out
xor
aas
add
insl
xchg
sbb
jecxz
out
xchg
add
ret
push
sar
outsb
mov
mov
inc
in
pusha
test
cmp
sbb
dec
mov
cli
stc
enter
and
lcall
mov
sbb
mov
aad
out
fs
lods
jne
cmpb
das
stos
repnz
movsl
or
sub
les
in
test
notb
mov
add
fsubrl
xor
clc
adc
mov
rorb
mov
add
add
addr16
push
inc
adc
dec
xor
enter
insb
push
frstor
adc
and
push
call
test
repnz
into
int
sbb
fwait
mov
lock
std
cs
inc
sbb
and
mov
imul
imul
cwtl
fmull
xor
add
rolb
or
mov
rcrl
cld
mov
mov
std
fdivs
lods
mov
and
scas
dec
xchg
aad
jno
sbb
cmpsb
dec
mov
jns
out
mov
mov
sbb
int
push
mov
push
ret
inc
cmpsb
out
jmp
bound
pop
jge
cmp
aaa
pop
push
mov
xchg
pop
inc
mov
std
or
shll
enter
aas
cmp
test
push
push
push
pop
icebp
add
enter
or
lock
mov
insl
adc
and
arpl
sbb
push
push
push
jl
pop
xchg
push
insb
inc
in
gs
sbb
dec
add
jmp
lea
test
insb
pusha
insb
bound
mov
pop
cs
sbb
push
jae
mov
xchg
add
repz
sti
jg
inc
xor
jbe
jnp
icebp
sti
sbb
inc
ljmp
jae
call
push
lods
mov
fcmovne
cmp
xor
push
ret
popf
cmp
fs
fidivrs
cmp
int
jns
cmp
or
add
cmp
and
xadd
mov
fidivrs
insb
sub
icebp
sbb
es
pop
loop
int3
test
pushl
rcr
lret
mov
xor
inc
nop
flds
dec
arpl
sti
jle
push
rcll
dec
sbbb
daa
addb
pop
add
das
push
push
xchg
cmp
xor
pop
push
dec
cwtl
mov
add
repz
mov
or
jl
mov
or
mov
and
mov
mov
pusha
pop
daa
mov
test
inc
cltd
ds
test
xchg
jns
inc
loop
call
mov
adc
out
mov
je
repz
inc
cmp
nop
and
hlt
fldl
imul
lret
iret
leave
aaa
sbb
shll
sub
pop
stos
repz
and
xor
call
aaa
add
cmp
pushf
inc
mov
movsl
jnp
push
mov
inc
xchg
sub
pop
sti
stos
cmp
loopne
loop
mov
push
xchg
xchg
jge
mov
movb
in
inc
xchg
sub
imul
dec
fstl
sbb
movsb
add
sub
dec
or
dec
mov
add
cmc
test
add
jp
jns
dec
mov
cmp
xor
mov
roll
outsb
roll
adc
repnz
mov
xchg
sub
or
jo
fcoml
jne
syscall
push
insb
rolb
stos
sub
push
out
inc
push
mov
push
sub
lods
pushf
cld
stc
adc
mov
loopne
or
push
sbb
adc
ror
imul
stos
and
test
sbb
aad
lcall
inc
outsl
mov
pop
aas
push
mov
xchg
leave
adc
jae
sbb
je
inc
jge
inc
ret
add
fmuls
push
mov
adc
mov
push
ret
faddl
add
popa
int
int
cs
jbe
stos
inc
add
mov
add
ss
repnz
dec
push
test
jnp
inc
xchg
mov
push
out
pop
sbb
xor
xor
es
fcomps
push
mov
rorb
sbb
pop
in
jg
and
jne
mov
cmp
jl
mov
je
inc
mov
pop
mov
and
int3
or
frstor
cmp
add
lods
cld
push
push
add
out
jne
int3
pop
dec
arpl
cld
mov
push
lcall
push
fisubrs
pop
pop
jp
daa
imul
xchg
das
xchg
enter
fidivs
push
pop
inc
sahf
inc
mov
add
pop
es
int
imul
enter
inc
in
mov
mov
push
fnstsw
aad
fwait
dec
call
and
ficomps
cs
sbb
jmp
adc
ret
mov
or
sub
sub
pop
push
popf
iret
lods
ret
aas
nop
or
stos
movsl
bnd
arpl
pop
adc
adc
xor
adc
lret
jbe
xchg
and
jl
add
cmp
sbbb
lahf
pop
jne
mov
and
adc
adc
lea
loop
adc
in
inc
push
shll
dec
mov
or
ja
or
mov
dec
jno
add
fiadds
push
lock
mov
mov
sbbl
repz
add
adc
jl
sbb
sub
fsubr
cmp
push
andl
icebp
push
lret
add
xchg
stos
cmp
push
movsb
xlat
jp
jo
enter
and
mov
and
bound
mov
imul
xchg
push
imul
movd
push
xor
pop
dec
fs
lcall
cmp
xlat
jmp
mov
dec
mov
ja
outsb
mov
out
jne
sub
dec
mov
std
andl
adc
jns
in
fcmovne
in
push
inc
sub
push
das
rorb
sbb
xchg
gs
mov
cwtl
jo
adc
dec
aad
jns
daa
out
cmc
adc
cmp
mov
ret
and
and
dec
add
push
and
fisttps
pop
mov
inc
ss
fs
sub
push
std
adc
mov
shlb
or
push
jb
mov
icebp
jmp
mov
sub
push
lahf
mov
jmp
sbb
repnz
pop
adc
in
mov
mov
sbb
jns
je
adc
mov
scas
inc
fisubrs
outsb
push
push
or
mov
pop
scas
jecxz
test
stc
mov
rcrb
jns
test
mov
pop
push
sbb
pop
adcb
mov
dec
and
repnz
xor
je
inc
fadds
push
push
mov
testl
sub
notb
repnz
in
sub
in
sbb
push
xchg
out
dec
push
adc
jne
xor
jmp
insl
scas
in
xchg
sbb
std
in
popf
push
inc
daa
jmp
lcall
inc
adc
bound
leave
arpl
inc
push
mov
rcr
dec
inc
dec
es
imul
cmp
int
aas
in
aaa
cmc
data16
imul
pop
push
leave
add
or
push
aaa
xchg
sub
cmp
fisttpl
mov
add
iret
mov
xlat
push
gs
sbb
ror
jbe
jge
inc
cmp
pushf
jo
pop
lcall
inc
xor
sar
dec
mov
popf
cmpsl
cmc
xor
adcl
add
mov
jmp
cmp
dec
or
inc
ret
jnp
and
jg
jge
mov
xchg
pop
cld
inc
push
adc
pusha
or
orl
subl
ret
jnp
sbb
push
push
cmpsb
inc
enter
or
jp,pn
mov
and
jle
xchg
cmpsb
or
add
add
mov
xchg
xchg
je
scas
iret
inc
sub
pop
out
sub
aad
add
leave
movb
mov
sub
add
jge
test
stc
jne
push
lret
or
das
aaa
fsubrs
aam
cmp
xor
mov
add
ja
lahf
popf
out
mov
ja
roll
std
pop
ds
jae
mov
xchg
mov
mov
xor
sub
push
xlat
add
xor
jb
push
sub
out
mov
inc
clc
xor
je
jae
inc
inc
lods
inc
pop
mov
out
cmp
sbb
jecxz
in
test
std
loope
pop
sbb
cmpsb
push
addr16
cmc
je
adc
mov
mov
cmp
cmpsl
jbe
jp
xorl
gs
mov
cld
push
xorb
mov
popf
notl
das
sub
cwtl
push
scas
add
dec
aaa
jno
cmpsb
insl
mov
push
dec
ficoml
xor
int
out
pop
mov
enter
movsl
pop
aaa
jnp
lock
lock
pop
mov
push
jo
mov
lret
dec
jns
jle
xor
jns
iret
fs
cwtl
cmc
pop
xchg
repnz
sub
and
add
lock
push
int
mov
add
fwait
fwait
mov
inc
pop
repnz
push
push
popf
lods
push
in
or
push
aad
adc
xchg
jne
mov
pop
cmp
fdiv
aam
gs
repz
aas
adc
xchg
lret
std
sti
dec
push
int3
sbb
aad
loope
aaa
lods
push
lret
mov
and
jb
adc
std
mov
fiaddl
push
jo
mov
mul
inc
bound
push
rorb
out
xorl
aad
dec
arpl
stc
mov
cmp
aas
testl
mov
rclb
daa
rol
jb
in
scas
pop
mov
icebp
and
jl
js
cltd
repz
mov
sub
mov
sub
je
leave
and
ficompl
inc
stos
addr16
shlb
push
dec
movsb
testl
adc
lds
cmp
cmc
repz
xchg
mov
pusha
movsb
out
addb
aaa
mov
mov
idiv
into
jecxz
fs
fcompl
lahf
add
or
sbbl
mov
movsl
testl
int
mov
out
sub
sbb
mov
pop
mov
stc
sub
les
and
ljmp
push
divb
sarl
out
jecxz
mov
or
and
dec
repnz
xor
addb
test
and
jecxz
cmp
add
dec
out
idivl
or
fsts
in
shlb
xchg
test
push
test
xchg
xchg
outsl
out
mov
popf
vunpckhps
sub
test
adc
mov
aad
xlat
lods
pushaw
daa
rcl
sub
dec
cmp
mov
inc
repz
xchg
test
aaa
pop
or
adcl
enter
lahf
arpl
repz
xor
push
jle
mov
mov
mov
push
int
ljmp
cmp
cmpsb
cmpsb
imul
pushf
mov
lretw
xor
pop
fildll
rol
dec
sbb
xor
movsb
push
push
xor
stos
fcmovb
cmpsb
movsb
mov
ss
push
inc
je
insb
loope
mov
cld
push
and
pop
rorb
adc
aas
xchg
data16
gs
xor
mov
jmp
lahf
add
push
mov
test
or
and
xchg
inc
movsl
mov
jns
andb
adc
cwtl
xchg
test
pop
jge
fs
ret
filds
jp
jmp
inc
fs
lock
xchg
sahf
push
adc
adc
mov
loopne
add
add
push
hlt
cmpw
sbb
aaa
push
mov
data16
xchg
add
mulb
push
pushf
dec
icebp
push
iret
mov
fistpll
sbb
ljmp
ret
lcall
data16
hlt
or
jne
out
cmp
push
xchg
xor
and
jp
cli
jnp
gs
pminsw
inc
das
xchg
in
adc
jmp
testb
pop
je
inc
mov
lock
in
lret
ss
xchg
jp
in
xchg
mov
mov
in
and
cld
cmp
push
mov
and
jl
pop
jge
aaa
dec
adc
sub
jo
xchg
lret
xor
sbb
jle
lahf
mov
lea
jl
lods
add
jge
stc
ljmp
jb
sub
lods
mov
add
or
mov
push
fisttps
cmp
out
inc
lock
mov
inc
aam
jle
cltd
dec
xor
mov
lret
out
test
or
or
fnclex
inc
sub
addr16
stos
cmp
bound
add
callw
fstp
pop
inc
jge
popa
dec
mov
test
fwait
je
ds
insl
movsl
jecxz
mov
xchg
jbe
pusha
pop
adc
in
mov
aam
shl
mov
mov
sbb
mov
xchg
jo
movsb
adc
add
and
sbb
insl
loopne
imul
or
sbbl
fidivrl
xchg
popa
int3
je
sbb
jb
fwait
cmc
push
add
repz
cwtl
push
lods
jbe
fadd
or
jecxz
arpl
icebp
loopne
scas
fsubrs
loope
leave
xor
add
adc
cs
popf
jge
xor
mov
ds
and
lret
fcoml
mov
inc
incl
sbb
out
mov
adc
call
xchg
jno
lock
into
cmpsl
js
out
cmp
and
int3
das
xchg
cmp
pushf
inc
mov
jb
mov
or
cwtl
daa
jo
lcall
cmpsl
test
imull
insb
pushl
push
in
hlt
fsubs
sbb
jg
leave
sub
outsl
push
ret
sti
xor
add
out
dec
std
nop
movsb
lds
popf
loope
into
outsl
imul
aas
push
imul
in
xchg
pop
xchg
mov
cwtl
shlb
enter
rorl
lea
or
cmpsb
dec
sti
adc
lods
pushf
dec
add
mov
aam
mov
iret
push
stos
popa
icebp
sbb
mov
aas
sbb
push
dec
movsb
test
jbe
ds
test
cmp
adc
test
leave
sbb
sbb
push
iret
pop
inc
inc
test
dec
push
testb
sbb
pusha
sub
mov
mov
icebp
jmp
push
pop
add
fnsave
mov
cmp
mov
int3
adc
xchg
stc
orb
and
jmp
sub
xchg
mov
cmp
repnz
mov
and
ljmp
popa
out
loop
iret
mov
push
lahf
push
pop
mov
fstl
cmp
pop
repnz
jo
fisubl
insb
shll
stc
xchg
pop
sbb
push
mov
cmpsb
inc
dec
add
popf
in
pop
add
push
sti
outsb
push
pop
pop
jbe
sbb
cli
gs
inc
mov
pusha
popf
mov
into
cmp
add
or
js
lret
dec
leave
push
daa
add
mov
adc
push
add
fs
push
inc
pop
pop
mov
xor
jne
pop
mov
push
ret
ja
xchg
lret
push
adc
dec
idivb
fisttpll
aas
sbb
push
mov
mov
dec
ret
les
xchg
or
sub
dec
sti
xorl
in
dec
sbb
arpl
push
push
mov
add
fisttps
or
jnp
pop
ret
gs
pop
movsl
shlb
dec
mov
test
cwtl
andl
stc
ss
mov
inc
addr16
inc
jo
fwait
push
push
jae
sbb
mov
xor
xchg
mov
fimuls
push
cmp
push
flds
cmp
jnp
jecxz
xor
add
or
push
mov
adc
xchg
add
sahf
lret
sti
pop
pop
loopne
xor
adcb
xchg
iret
sub
cld
nop
inc
sub
mov
cld
sar
clc
sti
outsl
fadd
push
adc
gs
imul
cld
fidivrl
jmp
dec
ss
in
or
and
xchg
mov
stos
sub
fcoml
in
adc
or
pop
dec
jle
out
loope
pusha
xchg
inc
and
clc
test
cmp
dec
adc
std
lret
js
out
cltd
arpl
idiv
mov
mov
or
push
pop
mov
and
and
adcl
and
leave
pusha
fimuls
dec
mov
nop
divl
inc
sub
fimull
xor
mov
jle
rcrl
movb
mov
or
adc
jo
push
dec
inc
int3
inc
aas
mov
enter
and
jne
test
test
addr16
xchg
loop
jb
mov
push
fldenv
and
cld
dec
adc
movsl
and
push
mov
ljmp
push
mov
les
pop
out
clc
repnz
xor
lret
adc
in
mov
jmp
les
push
add
jne
cmp
mov
cmc
into
sbbl
dec
mov
xchg
cmpsl
sub
cmp
adc
jbe
or
shl
test
cmp
adc
test
dec
testl
inc
inc
or
push
mov
mov
push
xchg
inc
fiadds
enter
lcall
add
mov
pop
mov
loope
mov
sbb
mov
inc
and
push
xor
cwtl
mov
aas
lea
loopne
imul
arpl
dec
rsqrtps
arpl
dec
in
paddq
xor
inc
arpl
es
das
stos
in
shl
xor
stos
sahf
lock
les
out
add
mov
arpl
sub
add
addr16
mov
jl
jl
addr16
and
cli
and
inc
addr16
push
pop
loop
xchg
jg
inc
mulb
and
in
and
push
rol
cmp
fcoms
inc
adc
ja
lea
pop
mov
adc
cmp
jae
repnz
jmp
fimuls
test
orl
testb
addr16
popf
mov
fcom
lods
call
xor
or
popf
clc
jns
add
testl
push
test
push
scas
imul
push
repnz
pop
subl
dec
iret
aaa
cli
stos
outsb
mov
out
lods
dec
and
xor
pop
stc
xor
imul
lock
rclb
std
popa
dec
cmpsb
lods
jns
sti
sbb
jb
sub
fwait
stc
mov
xchg
jno
pop
je
cwtl
cli
lds
rcl
clc
pusha
jae
sbb
adc
cmp
mov
loope
cmp
fwait
dec
cmp
psubsb
ret
cli
xlat
ret
fcoms
je
push
sbb
sti
and
pop
adcb
xchg
aaa
imul
push
and
cmp
sti
orps
dec
xchg
inc
out
leave
in
mov
mov
or
or
out
mov
cmpb
arpl
cmpsb
pop
mov
sbb
dec
push
push
mov
push
je
lea
repnz
xchg
xchg
push
mov
rcrb
jb
aas
in
jae
push
sub
jno
pushf
cmp
mov
xchg
hlt
and
shll
jo
mov
lea
jl
scas
out
mov
out
loope
or
arpl
pop
aaa
jl
out
push
call
and
jge
jae
mov
cmp
out
insl
ss
xchg
jle
lea
lahf
jnp
mov
lods
sahf
sti
test
pop
xor
call
xchg
out
and
andl
sub
cmpsb
xor
sub
or
dec
rcl
mov
scas
and
or
pop
add
jmp
das
inc
inc
js
pop
aas
jle
pop
icebp
sbb
and
push
out
cmc
xchg
mov
fisubrs
and
xchg
pusha
sub
mov
mov
fdivrl
mov
movl
sahf
movsb
jle
jne
xor
pop
in
mov
pop
mov
popf
xchg
inc
push
rorl
mov
lcall
push
movsb
adc
sbb
hlt
movsb
aad
ss
nop
add
or
rorl
mov
popa
cwtl
insb
test
jl
das
pop
pop
xlat
in
jae
mov
cld
and
leave
fwait
ss
xchg
bound
inc
jmp
mov
imul
out
fabs
pop
cmpsl
pop
pop
lahf
inc
push
pop
xchg
int3
test
push
ret
loope
inc
movsl
sub
sbb
loopne
mov
xlat
lock
mov
js
lcall
inc
popa
addr16
jnp
mov
pushf
dec
pop
mov
jecxz
jp
aaa
shlb
and
sub
out
int
sahf
inc
pop
sbb
push
mov
insl
mov
mov
movsb
bound
cwtl
cmp
ja
jge
cmp
jbe
scas
jb
push
sbb
insl
fldenv
jbe
push
out
fdivr
rcrb
shld
jb
bound
push
mov
xchg
shl
mov
out
cmc
sub
pop
push
stos
daa
mov
xchg
inc
push
push
cmp
xchg
jae
rcrb
mov
lock
faddl
dec
xchg
pop
mov
arpl
ja
mov
adc
imul
cmp
ret
das
push
jo
xchg
jne
lock
rorb
cmpsb
sub
pop
add
jo
outsb
or
add
pop
imul
les
mov
aad
dec
adc
fnstcw
xchg
add
in
dec
push
mov
inc
jns
mov
daa
mov
or
arpl
adc
fwait
xchg
shrl
jge
jb
ss
adc
aas
and
sti
hlt
push
std
sarl
jmp
xchg
fimull
cmp
sub
pop
pop
push
pusha
pusha
data16
cmp
xchg
mov
pmaxsw
or
adc
rep
jp
mov
jne
and
je
or
inc
roll
ret
cld
adcb
mov
cmc
nop
xor
mov
lret
lret
sub
xchg
ljmp
inc
sbbl
lea
test
into
adc
test
js
and
lds
mov
test
out
mov
pop
subb
cmpsl
lahf
add
clc
xchg
in
pushf
mov
pop
and
sbb
jo
clc
repz
mov
cmp
cmp
aam
mov
xchg
inc
popf
stos
jnp
mov
out
fnstenv
mov
mov
mov
jge
cmp
xor
and
pop
addr16
or
in
mov
ret
stc
jmp
add
pop
aad
pop
dec
lods
icebp
lret
add
xchg
loope
or
mov
leave
sbbb
nop
loopne
xchg
mull
inc
aad
pop
push
dec
jae
sti
jg
pop
mov
inc
xchg
daa
pop
fisubrs
mov
sub
mov
mov
movsb
repz
mov
or
movsb
mov
call
pushf
mov
jno
fiaddl
ss
xchg
mov
and
ja
fsubp
push
inc
pusha
dec
mov
test
addl
in
and
or
stos
inc
fdivrl
mov
out
pop
add
rol
sub
pop
js
call
loop
or
loopne
ret
andps
jmp
test
pop
xchg
mov
movsb
insb
ret
sub
push
mov
inc
jp
xor
out
pop
aas
and
lock
sub
repz
mov
cs
push
lret
xchg
add
or
gs
rcl
dec
xchg
cltd
pop
test
jne
add
jge
mov
daa
sbb
sbb
adc
and
jns
xlat
mov
or
insb
test
xor
cmp
jb
inc
push
dec
dec
lock
dec
sbb
inc
ror
mov
sarl
add
lcall
sub
inc
nop
ds
daa
push
loopne
mov
xchg
lahf
or
pop
mov
jg
lods
subl
ja
xchg
and
mov
xor
inc
ss
mov
mov
or
pop
adc
and
iret
pusha
dec
dec
insb
out
or
xor
sbb
fs
vpunpckldq
stos
aam
xor
in
xchg
xchg
scas
push
loopne
testl
data16
mov
loopne
xor
cmp
rcll
mov
xor
inc
loopne
add
jo
mov
or
addr16
in
push
mov
bound
jno
in
xlat
jo
pusha
mov
fsubrl
jl
xchg
pop
in
test
faddl
push
stos
add
adcb
mov
sbb
xor
movsb
cmp
jo
mov
dec
es
push
ret
fbld
movsl
imul
dec
int
jbe
mov
rolb
push
stc
mov
xlat
push
and
das
out
ss
testl
je
dec
or
or
outsl
outsb
jmp
out
mov
push
fstpl
jmp
sbb
add
shlb
in
mov
and
inc
aaa
lods
mov
int3
jae
pop
ret
idivl
adc
inc
sub
leave
mov
stos
repnz
mov
and
cltd
call
and
imul
xchg
sbb
cmp
popa
sub
enter
movsl
dec
psrld
sub
in
and
outsl
bnd
fiadds
hlt
mov
pop
cmpsl
xor
cmpsl
or
push
add
mov
pusha
push
add
mov
jl
cld
lahf
les
mov
iret
push
stos
mov
out
inc
mov
std
mov
ret
and
into
insl
adcl
xchg
gs
leave
inc
cmpsl
sub
jl
stc
adc
dec
insb
inc
jmp
shlb
or
xchg
push
das
push
lds
dec
fwait
dec
in
jle
push
dec
or
pop
lret
or
in
aas
jb
mov
sub
pop
push
adc
cmp
push
scas
sti
cmpsb
cmp
pop
in
xor
add
fwait
or
cwtl
or
ds
es
push
loopne
mov
fs
dec
mov
daa
pop
js
sub
or
dec
popf
cs
inc
xchg
mov
sub
mov
jae
mov
popf
and
test
jecxz
pop
shr
dec
cmp
stos
pop
in
cmp
dec
push
cmp
sarl
and
push
cmovge
cmp
imul
mov
mov
sub
imul
in
in
and
mov
sub
aas
addr16
stos
insb
sub
fcmovne
push
das
adc
adc
out
push
aaa
mov
add
cli
out
pop
push
mov
mov
je
fcoml
int
adc
mov
call
xchg
je
push
pop
mov
dec
lock
ret
lock
dec
xchg
lret
cmp
enter
out
data16
xchg
adc
xchg
pop
push
cmp
push
adc
divl
ja
gs
jo
jb
pop
mov
jle
lahf
jbe
xor
xchg
inc
sbb
fcmovu
movsb
stos
sub
dec
mov
lea
jo
cwtl
adc
push
cld
dec
outsb
and
dec
jo
push
or
loope
mov
inc
lcall
push
adc
stc
in
mov
push
addb
fcmovne
in
daa
mov
add
mov
aam
das
cmpb
ret
or
add
add
pop
pusha
rcrl
rcrl
cmp
imul
lret
fs
ret
mov
pop
jo
fiadds
dec
ss
outsl
sub
divl
jne
pop
fdivs
repnz
in
and
add
clc
in
mov
imul
pop
push
fcmovnu
mov
rolb
notb
mov
aam
mov
lea
nop
lods
lods
aas
movswl
cmp
mov
sahf
or
jle
lods
cmpb
or
test
push
push
dec
jo
xchg
fcomps
fs
je
dec
push
addb
push
xor
loope
mov
addl
cld
je
mov
sbb
call
adc
jno
cmp
fprem
jb
adcb
mov
mov
test
xchg
dec
lcallw
stos
jle
or
add
mov
repnz
sbb
adc
ja
mov
xchg
mov
fldcw
and
mov
add
pop
xchg
shr
fidivs
dec
dec
aaa
and
and
orb
aam
dec
push
jge
lahf
inc
repz
aas
cmp
addr16
ret
incl
testl
inc
inc
inc
xchg
imul
sbb
pop
dec
je
pop
xor
xacquire
xchg
push
mov
cs
insb
jmp
xchg
push
mov
sub
xchg
xchg
push
and
inc
xor
nop
xor
push
push
pop
ficoms
rcrl
xchg
and
insl
ficoml
lret
in
mov
lea
or
pop
sarl
mov
testl
imul
test
or
ret
push
outsl
imul
add
push
lahf
ja
inc
outsb
cmp
adc
gs
in
pop
dec
xor
xchg
mov
sub
ss
sbb
test
imul
imul
cmp
push
and
adc
jmp
inc
test
push
jmp
adc
mov
dec
xchg
dec
push
adc
pop
lcall
adc
fs
mov
jb
inc
xor
dec
and
loopne
push
xlat
and
dec
addr16
mov
jnp
pop
mov
mov
rcll
or
sbb
cmp
jnp
and
or
push
repnz
jg
pop
popf
mov
inc
rclb
sub
sbb
imul
sub
scas
push
mov
sar
rorl
out
jb
aas
nop
aam
dec
xchg
pop
jmp
loope
ds
pushf
lahf
lcall
clc
out
cmp
lret
clc
push
push
je
dec
les
mov
imul
or
orb
es
sbb
cmp
int
addr16
and
adc
sub
jecxz
bound
pusha
cmp
mov
iret
out
xchg
outsl
stos
add
bound
xchg
push
jne
out
movb
out
cmp
push
cmp
or
sbb
int
out
sti
js
add
jg
push
or
xor
lcall
adcb
test
xchg
fstpt
jmp
sub
divl
lods
out
xchg
gs
bnd
mov
xchg
push
cmp
les
lods
jg
rol
adc
movsb
bound
sub
movb
fwait
push
shll
xchg
xchg
je
enter
insl
inc
push
es
cmpsl
lret
enter
call
ljmp
mov
clc
and
cmp
cs
fst
in
mov
jmp
std
sub
pop
xor
push
mov
mov
out
xchg
sub
movsb
lock
loop
dec
mov
cmp
adcl
sbb
loop
rorl
sbb
test
shlb
aad
push
cmp
jg
dec
xchg
imul
testl
inc
and
imul
test
mov
inc
lods
pop
out
data16
mov
leave
lret
lock
ljmp
out
mov
aas
cmpb
adc
dec
pop
add
test
jbe
scas
xchg
or
mov
dec
adc
xorb
movsl
and
icebp
xchg
call
mov
adc
xchg
mov
or
jp
sbb
xor
pop
ja
sub
aad
test
mov
cmp
pop
ret
mov
fistl
push
test
jp
and
mov
in
sbb
in
xor
fidivrl
push
jnp
add
ret
push
cmpsb
loop
aaa
jl
out
fnop
mov
add
enter
push
lods
xchg
jno
add
cld
mov
shrl
adcb
sub
lahf
dec
or
pop
sub
sub
adc
aad
je
ljmp
jns
inc
cmp
push
lock
jle
fwait
dec
cltd
inc
loope
adc
xor
scas
adc
icebp
and
cmpsb
ja
push
je
scas
xor
sti
icebp
push
dec
nop
mov
mov
mov
ret
pop
aas
movsb
pop
adc
fldenv
push
jmp
stos
push
cmp
loope
fimull
push
cmp
mov
or
mov
jb
and
cld
dec
jbe
push
loope
cmp
outsl
scas
sarl
and
scas
push
add
fyl2xp1
gs
or
pop
xor
addr16
fdivs
subl
sarb
fcmovnb
repnz
add
cli
hlt
in
adc
addl
mov
xchg
sub
lds
dec
mov
scas
push
inc
mov
pop
fs
sti
xchg
imulb
decb
pop
pushf
loopne
dec
icebp
cli
cmp
loope
mov
popa
fstpl
pop
jl
aaa
jne
xchg
jg
ljmp
sahf
imul
fnsave
jno
jne
add
mov
out
add
ljmp
cmp
notl
push
xchg
or
and
dec
or
std
pop
test
fsubs
cmp
dec
sub
and
inc
or
call
adc
mov
sbb
jno
inc
adc
push
xor
fcmovnb
sub
xor
sbb
out
sahf
push
sub
call
out
call
jae
push
lods
lods
test
mov
loope
popa
sahf
mov
ror
sub
lods
insb
or
lret
pusha
les
lcall
dec
aaa
hlt
sbb
shl
jmp
lds
in
sbb
popa
orb
jmp
insl
movsbl
mov
shrl
xchg
mov
mov
js
xorl
add
and
lahf
cltd
or
xchg
push
mov
aas
mov
lea
insl
xor
and
mov
jb
inc
jecxz
sbb
hlt
jmp
dec
imul
sti
stos
test
pop
ss
sub
sub
daa
jg
pop
xor
jecxz
add
cmpsb
gs
rcrl
into
cmp
roll
or
push
mov
sysenter
mov
lret
cmp
push
inc
cwtl
imul
dec
pop
fldenv
add
in
sub
sub
xchg
add
xor
push
popf
nop
outsl
mov
int
nop
test
mov
push
cld
movsl
inc
stc
or
jp
sub
shlb
imul
in
mov
inc
xlat
push
ss
jno
movsl
mov
cmp
dec
stos
xor
dec
call
ret
scas
in
jg
inc
repnz
fisubl
cmp
xchg
pop
adc
dec
cmp
rep
inc
icebp
xor
dec
jo
insb
pushf
pushf
hlt
mov
xchg
rcll
arpl
mov
or
shl
pop
push
inc
testb
cmp
cli
and
pop
add
adcb
pop
add
sbb
jae
pop
icebp
iret
mov
add
arpl
pop
fbstp
pop
cmp
mov
int3
cmp
cmpl
int3
xor
dec
sbb
or
nop
xchg
jae
test
popa
out
ljmp
test
notb
pop
push
ret
xor
push
or
add
push
mov
adc
orl
and
mov
and
xor
daa
and
pop
inc
leave
push
lahf
imul
sbb
cltd
cs
dec
pop
outsl
in
iret
mov
add
movsb
xlat
xor
push
outsl
mov
add
mov
add
jecxz
adc
sarb
lret
or
inc
push
add
adc
xorb
mov
xchg
fisubs
pop
pushf
lea
lcall
adc
pop
push
dec
and
mov
xor
mov
ljmp
lds
out
mov
icebp
mov
mov
inc
cmpsb
xchg
pusha
shlb
mov
inc
pop
bound
push
fcompl
fisttpll
xor
and
adcl
jae
fwait
and
add
imul
in
sbb
push
pop
dec
xor
daa
sub
std
mov
pop
shrb
add
clc
xchg
pop
cmp
push
mov
or
es
insl
imul
in
mov
cltd
mov
lret
sarl
push
jb
mov
pop
or
mov
bound
adc
xor
pushf
insl
jmp
ja
jne
jb
test
cmp
sub
push
mov
stc
lea
xchg
loopne
in
imul
testl
leave
out
pop
and
loop
pop
xchg
mov
cwtl
mov
mov
pushf
cltd
xchg
push
aam
es
push
clc
iret
roll
rcrl
push
pop
adc
adc
xchg
pop
aaa
fidivs
pushf
inc
inc
sbb
flds
adc
mov
in
adcb
js
popa
ja
mov
cmpsl
mov
stos
pop
jns
inc
jno
movsl
dec
scas
add
xor
cmp
rorb
mov
adc
les
xchg
jb
lret
pop
repnz
jae
adc
sub
aam
adc
push
xchg
mov
add
adc
pop
test
mov
push
roll
pop
mov
jmp
rcrb
cmpsb
pop
in
or
pusha
inc
scas
push
mov
xchg
in
div
mov
push
stc
mov
ljmp
out
pop
das
insl
or
mov
add
xor
push
jecxz
loop
out
mov
shrl
mov
jmp
xlat
imul
or
xor
push
cmpsb
jns
xchg
fisubl
mov
ret
insl
lret
dec
or
pmaddwd
pop
cmpl
fwait
fwait
adc
in
dec
push
inc
stos
scas
pop
clc
mov
cld
les
sub
iret
add
push
call
leave
xchg
pop
mov
mov
mov
and
inc
and
dec
stos
dec
dec
clc
or
jno
sbb
popa
lret
out
mov
adc
pop
push
insb
inc
mov
pop
insb
mov
push
and
lahf
icebp
in
jns
mov
cmp
inc
cmpb
xchg
scas
dec
incl
lahf
jbe
loopne
sbb
in
call
push
insb
repz
mov
or
call
jecxz
mov
jmp
or
xchg
jmp
jne
xchg
je
mov
push
sarl
mov
ret
dec
or
pop
push
jb
add
mov
mov
sbb
pop
loope
loop
pop
cmp
or
adc
and
mov
fsubrs
ja
inc
cld
xchg
mov
imul
sub
dec
inc
mov
inc
dec
push
loopne
ret
stos
frstor
arpl
jge
mull
xchg
jmp
dec
add
xor
sar
push
pop
iret
out
inc
push
push
sbb
ss
lret
adc
dec
mov
push
push
imul
fstpl
inc
jl
cmp
dec
aam
packsswb
push
and
test
lock
dec
dec
loop
push
je
mov
xchg
mov
shll
jl
out
out
push
mov
xchg
inc
incl
subb
cmp
hlt
aas
sub
stc
xchg
pop
pusha
add
xchg
pop
or
adc
mov
add
pusha
les
add
fwait
add
stos
cmp
loope
xor
loopne
inc
dec
push
int3
and
sub
jecxz
icebp
mov
adcb
sub
fwait
push
ret
xchg
or
xor
mov
mov
or
add
fistps
movsb
cmp
dec
dec
rcrb
cmc
dec
aas
gs
push
movsb
push
jns
add
lcall
xchg
ss
jo
clc
imul
popl
add
bound
add
shlb
iret
push
xchg
pop
imul
jne
inc
out
andb
adc
mov
push
sti
or
or
into
cmp
sbb
int
inc
fidivrs
outsl
clc
rorb
mov
add
and
pop
xchg
mov
cli
jno
sub
js
aad
out
and
ja
jle
mov
add
pop
and
cltd
test
dec
xchg
incl
pop
or
inc
and
push
dec
test
stos
in
add
adc
inc
sub
xlat
aas
movsb
int3
dec
scas
fwait
sub
mov
iret
test
xchg
imul
in
repnz
and
rcr
jae
dec
fldcw
sbb
pop
hlt
out
add
jp
jno
addr16
mov
add
lods
push
and
movsl
mov
stos
sub
xchg
push
rolb
mov
std
xchg
in
test
dec
xchg
pop
pushf
xchg
inc
pop
mov
out
iret
mov
dec
enter
mov
insb
jl
pop
rclb
outsl
mov
ss
fwait
insb
test
stos
mov
push
test
push
inc
call
aas
popf
mov
pop
into
aam
loop
adc
fsubp
mov
inc
mov
in
lds
rorb
push
push
js
add
mov
test
sbb
and
sti
outsl
leave
and
adc
icebp
icebp
lds
mov
dec
dec
jecxz
push
mov
adc
insb
inc
mov
adc
push
jne
nop
mov
pop
cmpb
xor
ss
sbb
pop
dec
ja
cmp
and
or
mov
faddl
loopne
aad
mov
ret
je
or
push
pop
xor
ficomps
cmp
pop
mov
leave
sti
lcall
movl
xchg
and
cmovbe
push
rorl
pop
iret
cmp
sub
enter
fwait
adc
xor
das
xchg
repz
or
mov
mov
outsl
adc
push
rclb
mov
sqrtps
mov
rcr
rcl
mov
sbb
insl
andl
sbb
push
push
or
repnz
mov
out
jb
cmp
lea
inc
jmp
movsb
out
enter
fs
jo
inc
push
xchg
fs
push
clc
mov
jb
fidivl
dec
sbb
cwtl
div
mov
pop
xor
orb
mov
pop
mov
stc
add
dec
mov
or
jae,pn
adc
jl
push
push
fistl
adc
test
js
push
push
cmpsl
aaa
mov
imul
cltd
sbb
or
mulb
jno
dec
xor
cmp
test
into
lods
pop
cmp
inc
in
popa
cmp
prefetch
or
mov
jne
sub
es
push
adc
insl
push
iret
fcomps
outsl
dec
mov
sahf
test
cmpsl
into
jne
cmpsb
fsubs
sub
je
mov
adc
pop
adc
jg
sub
bound
push
pop
push
cmp
imul
pop
cmp
popf
ljmp
fcoml
inc
in
cld
mov
int3
xchg
push
xchg
or
or
pop
sub
imul
xlat
mov
cwtl
aad
int
sub
int3
push
cmp
jg
lret
mov
xchg
xchg
pop
push
inc
scas
dec
es
or
nop
addr16
cmc
dec
mov
push
jb
xor
mov
cmp
jecxz
mov
cmp
in
sbb
insb
iret
repz
lock
xorl
push
fsubl
push
adc
jb
test
mov
aas
aas
aas
mov
xorl
cltd
lret
xor
xor
push
and
cli
sahf
dec
adc
xor
sub
sub
insb
and
leave
jle
jmp
pusha
add
cmc
sub
mov
lock
cld
adc
cltd
rorb
fnsave
xor
out
es
xchg
xchg
gs
fimuls
adcb
push
jno
xchg
lds
jmp
lods
hlt
jno
cmpsl
fdivr
inc
mov
popf
lds
clc
inc
stc
out
mov
rolb
addr16
or
fists
dec
ljmp
les
jmp
xchg
pop
ret
mov
push
insb
cld
push
sub
sub
rcrl
xchg
sub
idiv
repnz
mov
xchg
or
pop
adc
cwtl
orb
orl
jbe
and
inc
push
inc
jbe
lds
idivb
jnp
in
or
stos
xchg
or
xchg
in
test
adc
sbb
cmp
push
and
cmp
or
pushf
xor
shl
mov
sub
lahf
xor
int
cmpsl
fs
xchg
cli
cmp
jnp
dec
adc
mov
iret
push
add
mov
lahf
insl
inc
push
stos
in
jbe
sbb
fwait
les
push
les
jns
lahf
mov
and
movd
mov
mov
call
loope
push
xchg
mov
lret
sbb
cmpsl
mov
add
popa
xchg
add
movsl
stc
fmull
out
icebp
lcall
mov
sarb
pop
push
dec
sub
push
dec
aas
sbb
xchg
cmpsl
stos
int3
test
loop
loop
cvtps2pd
mov
adc
shlb
and
inc
leave
test
fwait
test
pop
pop
mov
dec
or
arpl
sub
sbb
sbb
and
aas
adc
xchg
mov
inc
add
xchg
xor
mov
mov
mov
and
xor
pop
mov
daa
rorb
out
lret
xchg
orb
fadds
xor
fcomip
div
insb
jmp
cli
dec
add
jge
and
aad
add
arpl
and
adc
fwait
test
adc
push
push
repnz
int
and
adc
inc
add
mov
dec
or
stos
rclb
out
mov
adc
dec
testl
int
add
pop
cmpsb
js
insb
jo
in
push
cmpsl
enter
inc
repnz
pop
aam
scas
sub
mov
in
cmp
shlb
bswap
pop
push
out
xor
cmp
adc
xor
inc
xchg
shlb
in
imul
pop
outsb
les
adc
cmovno
loop
fists
add
daa
mov
cld
stos
and
aas
xor
inc
cmp
and
leave
repnz
cmp
jp
in
lock
andb
inc
aam
mov
scas
out
dec
mov
in
inc
mov
imul
repz
in
mov
and
cltd
aad
cli
xchg
int3
mov
or
mov
scas
adc
jmp
mov
mov
inc
inc
mov
mov
test
cmpsl
adc
fildl
je
fadds
or
mov
pop
mov
shr
repnz
sub
jnp
in
movsb
adc
in
mov
dec
mov
xchg
jb
shrb
xor
aaa
loop
adc
mov
jnp
sti
js
das
add
arpl
repnz
lods
gs
fwait
and
mov
in
inc
rcll
dec
dec
or
sbb
dec
sub
or
pop
push
mov
push
add
cmp
dec
and
mov
lcall
or
outsb
pop
ret
mov
out
adc
dec
push
fcmovnu
xor
vzeroupper
mov
sub
xor
mov
mov
push
repnz
mov
cmp
mov
cmc
mov
out
fs
ss
mov
push
and
xlat
adc
into
pop
stos
enter
and
out
cmpb
imull
and
push
rol
push
sub
int3
push
ret
jne
and
sub
dec
imul
lret
add
sub
cmpsb
jmp
dec
pop
mov
mov
arpl
jne
stos
mov
or
sbb
jle
icebp
add
add
loop
movsb
push
sbb
popa
mov
or
pop
cmpl
int
jno
movsl
sub
fnstenv
lods
int3
pop
aaa
hlt
mov
stc
aad
sub
mov
sbb
and
sub
jp
ret
out
in
sti
incb
ficoml
mov
pop
test
arpl
arpl
jne
stos
in
cmp
addl
push
enter
cwtl
test
ja
push
and
iret
cld
jp
popw
xchg
or
add
push
daa
pop
add
ljmp
inc
pop
mov
cmpsb
pop
loopne
push
and
jo
icebp
adc
sub
mov
adc
push
sub
mov
inc
jb
push
arpl
adc
fsubr
ja
push
shlb
mov
push
dec
push
clc
cmp
push
pusha
adc
mov
fisttpl
mov
ds
fidivl
mov
inc
sub
xchg
inc
ret
movsb
push
mov
mov
ret
push
or
sub
shl
xchg
sbb
sti
cmp
add
add
out
fmuls
cmp
aaa
push
iret
jle
inc
fcompl
mov
push
lret
cld
fadds
hlt
cmp
leave
inc
les
subb
out
lcall
mov
lock
pop
cmp
push
stc
decb
or
mov
scas
mov
sti
cli
fwait
into
add
push
lcall
cmpsl
push
inc
bound
mov
dec
push
hlt
xchg
jle
test
mov
test
or
mov
sahf
test
xor
lock
jno
roll
subl
fldt
les
xchg
int3
shl
shlb
fldt
movsb
pop
jl
mov
jnp
fs
cs
mov
ret
fisubrs
int
dec
sbb
scas
push
jl
mov
xor
push
popa
push
loopne
loope
mov
outsb
xor
ret
repz
js
not
sub
add
int3
and
cmpsl
sti
jmp
xchg
mov
aaa
xlat
pop
push
loope
cmp
mov
fisttpll
jne
jecxz
scas
pop
subb
cmp
push
bound
push
test
ror
or
mov
pop
decb
xchg
xor
inc
sarb
mov
xchg
add
lret
mov
xlat
mov
xor
xchg
cwtl
pop
iret
movsb
stos
scas
ljmp
imul
jnp
sbb
pop
add
sbbb
fstl
sbb
std
xchg
dec
mov
lea
mov
mov
xor
fcompl
inc
xor
adc
or
xor
mov
mov
pop
sub
repz
or
dec
imul
inc
add
int3
outsb
or
jbe
push
mov
divl
or
test
lret
mov
aas
std
fnstsw
jl
jg
jne
dec
xchg
faddl
lret
inc
push
loopne
mov
les
jmp
mov
mov
mov
movsl
xor
or
loope
out
cmc
lock
sub
mov
mov
mov
or
inc
cmp
faddl
cmp
push
sbb
fidivl
addr16
movl
jecxz
js
jp
sbb
stc
dec
and
in
push
add
jns
stos
lcall
cmp
or
push
adc
inc
jbe
ja
push
or
cwtl
cmp
imul
pop
loop
ljmp
sbb
add
push
idiv
mov
mov
adc
cmpsb
aad
std
add
cli
in
stos
int
add
xchg
pushf
adc
and
dec
int3
imul
inc
pusha
adc
outsb
cmp
push
mov
xchg
pop
in
push
test
cmc
lret
aad
xchg
mov
and
dec
pop
repnz
jecxz
jo
mov
pop
xor
sub
xor
mov
jo
stos
and
mulps
lcall
mov
lds
pop
cmp
push
inc
adc
js,pn
in
lds
shrb
push
push
mov
stos
push
mov
mov
scas
xchg
jg
mov
add
cmp
sbb
xchg
dec
push
add
pop
xor
int3
subl
iret
not
movsb
push
xor
es
loopne
pop
hlt
ds
pop
dec
jae
nop
jne
mov
in
add
and
lods
push
nop
lret
call
xchg
rorb
scas
adc
pop
dec
jg
fwait
jecxz
mov
cmp
popf
inc
mov
addr16
sbb
cmp
mov
and
lret
sbb
ds
ficomps
add
fcoms
mov
cli
fmull
out
imul
std
mov
test
push
or
mov
movsb
push
xchg
lods
jae
shrb
and
and
shlb
or
dec
movsb
lods
sub
filds
test
xor
sahf
add
jnp
orl
test
mov
ss
pop
mov
mov
mov
sub
mov
jnp
mov
adc
jae
inc
enter
daa
cwtl
xchg
les
jmp
js
cltd
and
cld
inc
outsl
js
sbb
movsb
gs
cli
jge
adc
inc
test
xlat
dec
jecxz
and
call
fyl2x
xor
or
out
cld
or
jns
jne
notl
shll
decl
pop
xchg
sahf
test
shrb
imul
mov
sbb
scas
mov
lods
push
fsubrl
xchg
sahf
xor
dec
icebp
pop
repz
inc
xor
into
cmp
clc
pop
xchg
ret
push
lods
xor
imul
cmp
out
inc
ljmp
push
lahf
addl
or
arpl
dec
cmpsl
or
movsb
or
in
add
pop
aad
sbb
push
scas
insl
dec
mov
popa
xchg
fs
mov
pop
out
lea
test
ret
in
shl
mov
or
or
push
daa
mov
push
fsubrs
movsl
daa
inc
stos
fcmovnb
cmp
fdivl
pop
lret
mov
je
jmp
jle
inc
int
aas
in
mov
dec
jl
scas
pop
loop
testb
mov
shlb
subl
sbb
shlb
stc
cltd
push
mov
std
sub
les
bound
jecxz
xchg
ljmp
dec
jb
mov
cmc
inc
neg
fwait
inc
pop
mov
ret
mov
shll
icebp
or
scas
sti
dec
inc
mov
inc
jecxz
aaa
mov
push
mov
incl
mov
call
jg
sub
ret
je
inc
jo
stc
mov
dec
cmc
adc
xor
sbb
repz
das
xchg
xchg
fs
lcall
adc
mov
and
repz
pop
lret
or
sbb
cltd
jb
mov
stos
clc
hlt
xchg
shrb
gs
pushf
jb
pop
cs
xor
je,pt
nop
push
pop
arpl
lret
inc
ss
cmp
sti
push
sub
lahf
popf
mov
xchg
adc
xor
addr16
adc
push
sbb
pusha
and
push
lret
imul
cmp
pop
gs
pop
push
mov
sub
fcmovnbe
lahf
mov
neg
and
or
mov
sbb
jg
sbb
dec
xor
shll
sub
pop
sbb
and
aaa
call
ffreep
mov
stos
lret
mov
ljmp
mov
fstpt
mov
in
rcll
push
mov
mov
dec
ror
stos
adc
insl
xor
sbb
dec
imul
and
stos
mov
das
add
inc
ds
push
sbb
mov
push
mov
cld
into
sub
ficoms
int
pop
push
rclb
fcoms
sbb
gs
cmp
cs
xchg
mov
xlat
push
movsl
push
pop
jl
mov
mov
jo
cmp
and
cmpsb
cmpsb
sbb
xlat
les
fldl2t
mov
sbb
adc
fildll
out
jmp
test
adc
inc
fldt
jl
test
enter
aad
dec
outsb
shrb
mov
mov
shlb
dec
mov
pusha
mov
mov
xchg
call
lods
mov
rcrl
aas
mov
lods
and
push
add
lret
out
mov
gs
add
mov
ljmp
lock
xbegin
mov
scas
notb
xchg
mov
jo
pop
stc
dec
cmp
mov
sbb
jmp
mov
pop
xor
jmp
bound
or
sub
sub
jbe
in
dec
or
lcall
ss
mov
pop
sub
std
adc
adc
test
xor
pop
pop
add
test
int
incl
das
push
roll
idivb
sbb
ja
testl
pop
xorb
dec
xchg
stc
into
add
fnstsw
jge
push
dec
adc
mov
jp
pop
xor
jecxz
cmpb
pushf
ret
push
into
cwtl
lds
int
fistpll
sarb
jecxz
mov
mov
movsb
lods
pop
add
xchg
lahf
test
push
jmp
daa
jno,pn
lock
jl
jb
stos
push
testb
push
jb
or
cs
xor
or
jmp
xchg
repnz
pxor
jne
xor
dec
xchg
cld
cs
shlb
push
ficompl
push
rcll
xchg
xor
into
arpl
or
xor
dec
cwtl
pop
xor
dec
je
xchg
mov
sti
sbb
stos
jecxz
sbbl
dec
sub
stc
das
cmc
scas
dec
scas
aas
adc
repz
add
xchg
pop
sub
pop
insb
call
lret
dec
subl
xor
sti
mov
push
jo
cltd
cld
mov
addr16
les
push
loop
and
cmp
push
dec
dec
and
icebp
mov
mov
cmpsb
mov
push
pop
xor
test
xlat
sbb
leave
jns
xchg
aas
call
addl
sbb
push
xlat
push
lods
in
mov
shrb
ficompl
jle
aam
mov
sub
add
jae
mov
lock
notb
lods
ds
cmp
mov
gs
mov
in
inc
out
sbbl
aas
dec
cs
and
es
addl
data16
jg
add
sbb
lret
daa
jge
cmpsb
fldt
push
fwait
or
shrb
push
inc
jg
lods
jmp
clc
or
inc
xchg
xchg
and
sti
jo
faddl
push
mov
mov
or
daa
adc
rcr
dec
pop
lcall
loope
jne
add
pushf
and
insl
jp
sbb
clc
mov
andb
fsts
push
subb
mov
xchg
push
jo
nop
rorl
push
and
mov
mov
dec
cmpsb
dec
push
dec
lods
fiadds
std
pop
push
cmp
jnp
and
sub
xor
mov
repz
push
insb
les
adc
pop
mov
mov
ja
ss
rol
cwtl
pop
lret
stos
sub
imul
mov
jae
xlat
push
aad
inc
mov
lea
lods
sbb
std
mov
je
mov
std
aad
lods
rclb
xor
sahf
call
imulb
jle
cmpsl
add
sub
sti
xor
add
arpl
xor
test
mov
sub
jbe
fs
push
sahf
mov
adc
fwait
xchg
push
aas
push
sbb
sbbb
xchg
ss
adc
mov
pop
xchg
bound
mov
sub
leave
iret
mov
sbb
lret
je
jge
call
sbb
jb
rcll
mov
sti
repz
cld
add
adc
dec
inc
dec
sub
push
mov
outsl
ftst
dec
pop
stc
adc
pop
leave
fs
outsb
pop
incl
mov
insl
ja
cli
data16
and
pop
push
out
cmp
xor
lods
xchg
addr16
xor
rcrb
iret
dec
into
cli
mov
add
fwait
lds
pop
xchg
int
and
add
fwait
jbe
lea
lret
decl
push
sbb
lret
push
pop
push
cltd
sahf
dec
and
sarb
popa
popa
mov
rcrl
xchg
shl
outsl
jnp
xchg
sub
pop
popf
or
mov
subb
and
int
or
mov
inc
movsl
insb
les
das
int
push
adc
add
sbb
sub
mov
test
test
add
insl
pop
pusha
sub
cli
sahf
jo
decl
sub
and
pop
inc
imul
cmp
testb
jmp
mov
jns
lret
xor
fisttpl
dec
xchg
ret
aam
fcmovnbe
leave
jg
xchg
idivl
das
jmp
in
test
sub
mov
and
mov
mov
daa
and
popf
adc
and
pushf
or
in
xchg
lret
lea
addl
cmc
adc
cld
cmp
jp
mov
mov
add
xorl
fldt
or
cmpsb
popa
insb
xchg
or
adc
jns
or
or
or
mov
and
bound
lds
adc
mov
lcall
ljmp
adcb
cmp
test
lret
jecxz
test
out
scas
mov
popa
loop
in
add
clc
push
test
push
pop
xchg
movsl
testl
cmp
lret
arpl
mov
cmp
ror
cmp
lods
repz
out
sbb
adc
repz
pop
push
jg
cwtl
decb
lret
stos
in
fistpl
out
inc
rcl
loope
arpl
and
xlat
jb,pt
loop
aad
push
sbb
dec
fyl2x
leave
aad
pop
mov
ret
call
ljmp
add
outsb
jb
out
inc
ljmp
pop
jno
push
lahf
test
lock
add
ret
and
push
rcrb
add
les
fistpll
cmp
sbb
clc
sub
inc
shll
popa
les
jecxz
setbe
in
and
mov
add
push
dec
xchg
lea
push
repz
dec
xbegin
jae
xchg
dec
out
and
rcrl
cmp
or
lods
scas
push
sbb
insl
xorb
add
pop
jae
lret
push
pextrw
mov
push
mov
shl
mov
fucomi
jecxz
and
mov
nop
fnstenv
push
jns
jp
sbb
gs
xchg
clc
orl
xchg
lock
xchg
std
or
sbb
cmp
sub
outsl
imul
fdivrp
mov
pop
out
arpl
push
subb
and
cmp
mov
mov
mov
or
mov
cwtl
jmp
mov
mov
test
test
bound
mov
xchg
push
dec
fnstsw
ljmp
mov
dec
xor
imulb
xchg
ja
pop
push
hlt
rcl
mov
jecxz
add
push
js
inc
or
pop
shrb
loopne
popa
addb
arpl
push
icebp
sti
add
push
xchg
inc
mov
in
gs
add
cwtl
sbb
int3
cld
dec
jmp
xchg
dec
loopne
and
jl
lcall
jb
int3
addr16
xchg
jo
cmp
aam
aas
popa
jns
cmp
mov
push
sub
dec
or
push
nop
pop
xor
mov
pusha
jl
pop
inc
and
je
sub
xchg
adc
imul
add
insb
or
jb
and
ror
sbb
out
adc
outsb
mov
push
test
xchg
test
movsb
out
std
sub
jecxz
mov
xor
imul
sbb
dec
jbe
adcb
or
fldl
inc
inc
ljmp
inc
jnp
add
or
pushf
popa
push
sub
int3
mov
jmp
fsubs
popa
or
ret
fidivrs
jle
pop
aas
out
divl
xor
inc
rorl
ja
fidivrs
insb
dec
jecxz
or
sub
aaa
imul
outsl
mov
stc
push
push
mov
push
mov
in
aas
inc
out
dec
xchg
pop
fidivs
ljmp
push
fsts
push
divb
dec
cmc
sbb
push
sbb
lds
arpl
sub
adc
bnd
in
push
pop
into
cld
jge
pop
adc
ss
sub
loope
pusha
cmc
das
push
cmp
movsb
sbb
and
cmpsb
lret
and
daa
and
and
dec
loope
and
loopne
push
test
js
imul
into
fcompl
mov
out
test
jbe
add
call
mov
adc
popl
mov
enter
inc
shrl
bound
and
addr16
lods
sarb
xor
movsb
xchg
bound
push
loope
fistpll
inc
pop
mov
aad
dec
mov
pop
clc
xchg
adcb
mov
mov
mov
int3
nop
push
cmp
jmp
cmp
mov
xchg
stos
adc
add
out
mov
mov
jne
outsb
scas
lcall
xchg
mov
scas
in
jl
xorb
add
dec
add
pop
xchg
jecxz
xchg
adc
dec
lods
adc
into
gs
mov
sub
icebp
aas
pop
dec
jge
imul
mov
add
adc
fdivrl
pop
enter
test
push
in
or
or
sbb
sti
roll
cmp
push
mov
xchg
inc
xchg
add
addr16
jmp
cmpsb
sub
or
daa
lock
stos
mov
cmp
jg
mov
out
jo
ret
inc
les
mov
js
xchg
mov
lcall
and
dec
pop
inc
mov
test
popf
adc
icebp
scas
in
and
jecxz
scas
mov
and
nop
add
jl
je
inc
xorl
mov
fidivrl
and
push
lahf
xchg
inc
mov
add
arpl
stc
push
sub
mov
sub
mov
repnz
lods
mov
insl
xor
push
and
sub
lock
adc
dec
xchg
add
cltd
or
lahf
or
pop
xchg
pop
xlat
sub
imul
jle
les
xor
sar
testl
sub
xchg
popa
lea
xor
movsb
push
jl
shll
rcrb
pusha
or
and
xchg
jo
or
xor
jle
mov
add
pop
jnp
lods
xor
pop
insb
leave
add
adc
fucom
dec
test
jge
jmp
scas
xor
add
fwait
or
push
sbb
lods
add
shl
or
and
shl
jne
out
dec
cmpsl
out
inc
pusha
adc
sahf
mov
jnp
pop
inc
push
pop
xor
shl
xor
rcll
aad
int3
int3
aam
in
xchg
sbbl
cmpsb
enter
and
xchg
sti
loope
cltd
lcall
in
xchg
outsl
jae
inc
test
mov
and
push
push
bound
pop
mov
mov
sahf
rclb
sub
outsl
test
cmpsl
pop
push
mov
call
pop
clc
cwtl
mov
enter
xchg
push
fsubs
test
jge
push
repnz
add
inc
add
and
mov
popa
aad
xor
mov
cmp
mov
push
je
lcall
push
jg
out
in
fsts
push
jb
shl
pop
dec
fiadds
jno
mov
out
enter
sti
xor
add
ljmp
push
mov
cmpsl
cmp
mov
adc
pop
jl
in
cmp
sub
or
aaa
lahf
nop
pop
or
test
xor
sbb
cmp
pop
push
and
sub
into
inc
jns
push
pop
add
insb
dec
sbb
pop
dec
cmp
into
add
inc
xor
cmp
cmp
sbb
in
fadds
sub
test
mov
lcall
pusha
test
bnd
push
jle
jbe
sub
mov
add
xchg
jns
fldt
sub
sub
push
xchg
jecxz
loop
cs
xchg
loop
arpl
out
rcll
aas
mov
ja
fildll
rorl
xchg
or
lods
jmp
ret
add
jno
mov
lret
mov
popa
loop
jb
lcall
aad
sub
sbb
sub
repz
adc
add
cs
inc
in
push
rcrb
mov
mov
cmpsl
pop
dec
sahf
mov
clc
dec
jb
adc
adc
popf
dec
mov
xor
or
rcr
clc
daa
push
and
sbb
pop
dec
das
inc
and
fists
sbb
fstpl
aas
test
out
shl
int
arpl
adc
bound
fistl
popf
mov
lret
and
mov
je
jne
pop
push
andl
dec
sbb
ja
shrb
inc
aas
xor
jg
or
test
fxam
adc
lahf
mov
dec
dec
test
jb
lock
es
mov
sub
data16
jne
insb
aad
adc
mov
xor
cmp
test
cli
sub
inc
test
test
cmpsb
enter
cmpl
cmp
aam
xchg
stos
mov
popf
jl
movsb
mov
arpl
push
sbb
and
stos
cmc
xchg
rclb
jbe
test
push
into
mov
xlat
jbe
adc
xchg
mov
mov
inc
aas
adc
push
mov
jp
xchg
pop
into
cs
fs
in
adc
stos
mov
sub
sbb
add
pop
pop
lea
cmp
xor
je
addb
cmp
inc
testl
dec
test
hlt
das
outsb
imul
rcr
push
pop
inc
into
scas
test
das
pop
aam
jmp
mov
inc
sub
dec
cltd
sub
pop
push
xchg
stos
int3
ret
sbb
inc
loope
inc
or
ja
les
sbbl
push
adc
insb
sub
das
int3
in
ja
pushf
inc
inc
int
sub
aam
in
and
movsb
cmp
push
data16
adc
aaa
jbe
mov
subl
push
dec
jge
sub
fs
or
in
mov
and
out
push
push
cmp
cld
fstpt
jne
and
movsl
ds
cs
xorb
and
in
mov
xchg
xchg
mov
mov
mov
shr
in
int
push
cld
xchg
mov
inc
push
xor
push
jne
push
xor
mov
push
ljmp
push
daa
ret
lock
cmp
and
pop
mov
cmovnp
leave
xchg
and
add
je
insl
sbb
xor
mov
mov
adc
out
mov
aas
and
movsl
test
push
lahf
xchg
movb
mov
xor
stc
std
add
xchg
scas
icebp
aas
lcall
xlat
xchg
add
daa
addr16
repz
jge
pop
iret
int
das
mov
adc
xchg
pop
adc
xchg
daa
fmul
and
dec
sbb
dec
in
add
hlt
sbb
in
jnp
shlb
lds
nop
int3
ret
and
iret
sbb
and
or
hlt
into
and
leave
stc
insb
outsb
xchg
arpl
dec
mov
and
push
xor
sbb
imul
xchg
and
and
daa
icebp
lret
pop
lods
shlb
in
pop
fs
arpl
pop
inc
mov
mov
and
or
pop
in
jecxz
inc
fwait
clc
ljmp
ja
jb
cld
fs
jp
and
xlat
inc
xor
aaa
add
call
push
add
mov
inc
enter
xchg
pop
dec
adc
jp
pop
or
aaa
mov
cli
dec
pop
pop
std
shl
std
loopne
mov
fidivs
bound
mov
stc
lcall
sub
jo
jmp
push
cli
lods
in
pop
sub
insl
sbb
mov
cld
mov
fbld
ret
push
rcl
mov
cmp
les
ret
and
xchg
cmp
movsb
xor
push
hlt
in
cmpsb
xchg
daa
test
mov
push
xchg
or
push
cli
stc
mov
aas
mov
adc
adc
orl
rep
xor
test
aam
adcb
aam
gs
jbe
xlat
mov
pushf
call
mov
stc
xchg
mov
lahf
cmpsl
xchg
add
jp
sub
inc
mov
or
fsubrl
in
cltd
push
int3
addr16
insl
mov
aam
add
mov
ds
out
enter
pop
pop
pop
test
std
mov
add
inc
std
or
pop
add
inc
insl
or
adc
xchg
or
jae
aaa
out
imul
out
lods
lds
rcrb
xor
inc
sbb
add
pop
xor
dec
sub
sub
inc
mov
jmp
inc
idivl
mov
aam
jo
mov
div
or
push
mov
or
inc
cs
rclb
jp
and
add
jnp
rcrl
add
ret
hlt
adc
in
or
jb
or
sahf
xlat
mov
or
and
loop
sahf
call
add
lcall
mov
and
bound
fdivs
popa
mov
into
sub
lods
in
clc
test
jno
dec
xchg
jp
pop
mov
movl
test
ds
call
lahf
popf
clc
bswap
sbb
loopne
iret
inc
mov
iret
jns
stos
jle
fists
jne
adc
pop
mov
mov
mov
and
adc
adc
pop
cld
mov
inc
add
mov
in
fildl
mov
enter
call
jmp
test
shrl
jns
mov
mov
popf
inc
xchg
and
test
xchg
mov
lock
outsl
mov
insb
dec
pop
outsb
sub
rorb
jae
icebp
ja
add
pop
mov
pop
fmul
insb
jno
mov
adc
icebp
mov
or
nop
dec
lods
sub
mov
add
fwait
push
rep
push
ret
in
lods
fwait
sub
sbb
pop
out
bound
out
pushf
add
insl
pop
and
std
les
lret
shrl
imul
pop
cmp
xchg
dec
mov
stc
out
dec
in
jae
ret
mov
xchg
in
pop
mov
mov
sbb
int3
pop
dec
cmp
push
jnp
add
mov
fsubrl
mov
mov
jge
cmp
jle
push
or
sbb
mov
lret
stc
cmp
stc
jge
out
or
pop
test
jmp
inc
out
mov
roll
mov
mov
jg
pop
jmp
inc
fmuls
fists
adc
scas
dec
test
fsubrl
push
push
scas
xchg
cltd
sub
dec
cmc
mov
sub
icebp
fsub
das
fnstenv
push
ret
push
mov
push
xor
push
in
mov
ret
xor
sar
jb
cwtl
hlt
orb
jbe
push
fmull
in
xchg
and
mov
inc
mov
mov
mov
mov
pop
and
rolb
mov
or
add
test
adc
jnp
jno
mov
xchg
cwtl
inc
test
xor
stos
add
andb
lods
push
bound
cli
jle
in
nop
fistpl
fdivl
xor
mov
scas
cmc
std
sarl
je
inc
dec
hlt
arpl
inc
or
mov
dec
mov
in
pop
jecxz
hlt
add
mov
jno
cwtl
jg
and
xchg
mov
fwait
or
jb
mov
sbbl
xchg
jle
jns
dec
mov
xchg
and
incl
sbb
daa
push
lret
div
jmp
icebp
inc
icebp
xchg
xchg
mov
mov
lret
out
cmp
xchg
mov
nop
and
mov
adc
and
and
flds
mov
inc
ds
or
rsqrtps
es
test
dec
jo
adc
shrb
out
or
mov
data16
addr16
adc
int
and
movsb
pop
das
xlat
lds
xchg
mov
orl
hlt
pop
adc
cwtl
mov
pop
inc
mov
popa
cld
mov
cltd
lock
and
movsl
stc
mov
add
and
inc
adc
data16
test
mov
jmp
sub
add
lock
xchg
ret
jns
lret
or
xor
push
fdivrl
xchg
dec
dec
outsl
pop
into
jl
push
imul
xor
call
insb
clc
or
cmp
lods
xor
dec
and
mov
orl
inc
idivb
insl
push
and
test
jecxz
fists
mov
dec
imul
testl
in
lcall
xchg
ja
repnz
faddl
mov
data16
inc
stos
push
sahf
pop
lcall
fsubrl
pop
jg
je
and
dec
xor
push
jmp
outsl
clc
pop
sti
jb
cmp
xchg
movsl
sub
xor
xchg
pop
outsb
mov
mov
and
jle
inc
fnstenv
jnp
mov
push
add
xor
add
adc
sbb
inc
andl
test
loopne
mov
sub
and
jmp
insl
xchg
cld
iret
push
cmp
out
xor
shll
cltd
out
insb
call
xchg
mov
jno
xchg
fiaddl
push
xchg
movsb
ss
push
mov
data16
add
test
mov
lods
cmc
lds
shrl
aas
add
fsubs
mov
mov
sub
decl
arpl
cs
nop
inc
cmpsb
in
or
cmp
cmp
push
push
or
xorl
shrb
cmp
sbb
jg
fisttpl
cwtl
cmp
cmp
mov
xchg
jl
jbe
inc
adc
mov
or
adc
aad
out
rol
es
jl
pusha
dec
push
loopne
imul
prefetch
outsb
mov
loop
xlat
jge
inc
push
cld
add
mov
inc
es
imulb
or
lods
mov
stc
jmp
jo
cmp
cld
dec
ljmp
pop
out
adcl
adc
mov
xchg
dec
add
stos
imulb
int
sub
pop
in
es
fdiv
out
sub
xchg
icebp
mov
sbb
cmp
jnp
and
pop
adc
and
leave
scas
cmc
and
lret
push
testb
add
pop
dec
lock
xorb
push
or
fwait
sbb
inc
notb
mov
adc
aad
mov
div
cmpsb
pop
mov
aaa
mov
jp
pop
arpl
je
mov
pusha
les
ret
insb
push
mov
jne
sub
pop
in
and
xor
in
mov
jb
push
nop
out
out
pop
jns
mov
popa
inc
or
aaa
mull
add
and
inc
pusha
ret
push
cld
or
pop
dec
xchg
lret
dec
xchg
xor
dec
adc
cmp
xor
bound
ret
fiadds
push
push
stos
jb
fimuls
add
je
pop
dec
idivl
ficomps
test
popa
cmp
mov
lret
xor
mov
ss
push
outsl
es
jno
pop
push
mov
jp
sub
push
pop
jnp
fstl
ret
cmpsb
call
and
outsl
mov
xor
cli
pop
cmp
push
sbb
mov
pushf
jo
sbb
and
mov
dec
add
sbb
jecxz
jg
sub
xchg
ret
mov
cmpsb
push
pop
cmp
es
jp
cwtl
push
cltd
dec
mov
ret
popa
jne
mov
sarb
xchg
or
int3
mov
jp
dec
and
shr
sub
dec
ljmp
cmp
inc
int
cld
mov
push
sub
cmpsb
incb
rcrl
in
int
ret
jno
call
popa
adc
shrb
adc
aaa
shll
aam
adc
cltd
dec
cmpsb
xor
mov
cmpsl
lcall
inc
nop
js
mov
push
xchg
das
inc
mov
mov
fsts
mov
into
js
mov
mov
xor
aas
adc
addb
or
dec
jecxz
mov
cmp
aad
xchg
lock
aaa
push
sbb
fsubr
jmp
mov
adc
xchg
movsl
arpl
and
int3
jo
je
sbb
es
outsb
pop
in
mov
jne
dec
xor
adc
aaa
mov
pop
sub
outsb
dec
xchg
inc
mov
and
sahf
push
mov
pusha
push
xchg
and
mov
sahf
lea
aam
add
dec
es
lahf
jle
jae
xor
lds
fiaddl
mov
cmc
subb
mov
pop
in
adcl
lahf
dec
imul
pop
adc
test
add
cmp
cmp
jecxz
xor
sbb
in
add
mov
lods
mov
gs
mov
mov
test
jmp
add
add
pop
movsl
dec
lahf
sbb
dec
sub
outsl
mov
jge
stc
mov
rcr
stos
les
dec
jle
bound
stos
pushf
adc
jmp
xchg
add
pop
push
icebp
call
inc
xchg
je
dec
mov
push
pop
and
fcompl
add
mov
bound
mov
cmp
lods
orb
scas
jnp
dec
daa
mov
adcl
push
mov
cmp
xchg
outsl
stos
mov
mov
flds
lock
push
sbbl
arpl
jl
jne
jmp
lock
daa
testb
cmp
out
mov
xor
mov
outsl
mov
sbb
cmp
push
and
pop
stos
inc
pop
and
in
cmp
incl
adc
mov
or
in
mov
jmp
dec
and
out
fwait
inc
jno
mov
inc
mov
test
popa
pop
je
mov
sub
push
popf
aaa
push
cs
xor
jg
gs
outsl
imul
movsl
jecxz
cmp
into
mov
scas
jmp
mov
inc
or
or
sbb
mov
mov
and
mov
cli
enter
movsl
mov
mov
mov
cmp
cwtl
ret
lods
out
push
mov
movsb
enter
movsb
inc
rcr
xor
and
dec
lock
mov
shll
rcl
out
sbb
jl,pn
sub
xor
insl
inc
ja
xchg
cmpsb
add
pop
stc
cmp
xchg
addr16
test
jbe
ficompl
lret
cmp
imul
fstps
mov
pusha
jmp
jge
jo
jmp
scas
adc
mov
dec
fsubl
loope
out
dec
mov
adc
fldcw
dec
cmp
shr
add
jg
sbb
add
pop
xor
mov
std
xor
in
fwait
fwait
shll
pop
push
jne
loop
cmc
xorl
jbe
mov
fists
cltd
pop
cltd
lods
adc
iret
and
xchg
scas
mov
xor
aam
adc
sbb
sub
xor
jnp
jl
out
mov
movsb
cli
stc
cli
push
or
les
push
js
xchg
or
repnz
and
stos
iret
sub
lods
sarl
sub
jbe
pop
daa
cli
push
lds
std
stc
sbb
jo
dec
in
fdiv
popa
jp
sbb
sub
cmp
sub
mov
stos
xor
ljmp
sahf
nop
nop
or
pop
je
sub
mov
sub
jne
cmp
push
pop
cmp
jl
or
jg
out
cltd
into
xchg
mov
fbstp
mov
insl
enter
movsb
fstps
lahf
mov
cwtl
test
jl
sbb
in
and
ficoml
negb
inc
sbbb
sbb
hlt
xor
or
cmp
jno
xor
ss
mov
scas
add
popa
mov
jmp
lds
mov
aad
in
jnp
sbb
pop
std
sub
in
and
lods
mov
es
sub
xchg
mov
mov
repnz
ds
pop
std
inc
scas
adc
andl
pop
sbb
mov
icebp
nop
outsb
sbb
jge
jg
jmp
inc
push
pusha
incb
mov
int
das
adc
in
ja
stos
insb
ja
inc
lret
mov
push
arpl
popa
ficoml
into
and
icebp
and
inc
pushf
iret
jae
push
stos
mov
mov
sub
push
cwtl
gs
xlat
pushf
aam
fisubrl
mov
jae
pop
fwait
push
imul
shrl
shlb
or
inc
mov
stos
test
push
jmp
fildl
fstps
inc
scas
lret
popa
repz
push
xchg
pop
call
outsb
mov
mov
cmp
data16
mov
out
adc
ja
jae
sub
jle
rol
push
inc
int3
dec
adc
aad
fs
jecxz
stos
and
mov
fcoml
out
pop
cmp
sub
jp
and
or
or
ret
cmp
jle
cmp
or
je
imul
out
scas
xor
popw
cmp
jo
xor
push
arpl
jae
mov
ficoml
jmp
and
add
add
movsl
push
cmc
xor
mov
jae
pushf
ds
cmp
mov
sahf
pushf
sbb
decb
xchg
stos
out
paddusw
gs
cmp
fwait
out
pop
mov
pop
jmp
je
stos
mov
scas
push
mov
pop
fstl
dec
shr
cs
add
clc
nop
add
jg
xchg
lret
jnp
aam
fcmovnb
jo
jecxz
jne
popf
adcb
cmp
mov
mov
mov
dec
push
fwait
aas
mov
push
mov
adc
dec
mov
ficompl
repz
fwait
pop
xchg
push
les
lods
addr16
test
sti
cmp
das
adc
sti
lahf
jmp
divl
cmp
data16
jo
pop
mov
fucom
or
mov
xchg
and
fsub
insl
call
pop
adc
imul
fs
sahf
xchg
pop
popf
mov
cmpl
push
popa
mov
aam
mov
xor
adc
sub
pop
jecxz
and
cmp
stos
dec
imul
cltd
mov
pop
shlb
push
push
lret
std
loopne
or
xchg
idivb
int3
ljmp
xchg
adc
cs
mov
clc
movsb
sbb
in
mov
sbb
inc
dec
scas
inc
in
and
popf
outsb
addb
outsl
inc
sbb
out
sub
adc
sbb
dec
cmp
mov
mov
stc
xchg
test
pop
push
out
or
out
mov
ja
push
mov
push
lea
xchg
fs
adc
mov
push
repnz
repz
pop
mov
mov
sub
fisttps
imul
sbb
in
ret
aaa
ret
xor
adc
out
mov
push
dec
push
and
add
cmpsl
fs
or
dec
mov
ficoml
push
lahf
and
adc
sub
sub
add
addr16
fwait
jne
outsb
out
scas
xchg
movsb
in
in
and
test
lock
cmc
repz
lcall
fldl
lods
adc
sti
fimull
mov
fcomps
dec
adc
mov
cltd
lret
shrl
mov
mov
repnz
and
std
pop
pop
sub
add
dec
push
add
cld
fisttpll
lahf
and
leave
out
push
cwtl
aad
jecxz
test
mov
jae
ficoms
int
sbb
jmp
pop
sub
jl
mov
xchg
add
cli
sbb
add
cli
adc
mov
push
imul
mov
aas
int
pop
mov
inc
cs
pop
or
xchg
jmp
mov
in
stos
push
add
gs
sti
mull
icebp
into
cwtl
cmp
sbb
pop
outsl
dec
mov
shlb
and
ds
pop
mov
mov
imul
xchg
adc
cs
int
jne
sbb
lea
loopne
or
inc
push
inc
push
ret
mov
and
xchg
adc
xor
push
inc
es
mov
xor
les
movsb
cwtl
stc
ret
sbb
jle
je
dec
iret
jle
stos
add
rolb
repnz
and
xor
xchg
push
arpl
pusha
lahf
cmp
shll
adc
ret
les
mov
movsl
or
sub
scas
mov
scas
pop
cmc
aam
xchg
pusha
or
jle
mov
push
sub
rorb
daa
test
in
and
std
dec
sub
mov
fnstenv
xlat
pop
push
sbb
jno
aam
shll
mov
mov
xchg
std
push
iret
or
insb
movsl
fsubrl
push
bound
fwait
mov
movsl
mov
lock
jb
and
push
mov
jle
cmpsb
outsl
popa
movsb
cltd
mov
push
data16
lods
and
and
mov
scas
mov
and
xor
jge
imul
push
filds
jge
mov
pop
jae
sub
movsl
sub
lret
sbb
xor
fmull
or
add
pop
scas
leave
sub
shrl
pop
scas
inc
aam
cmp
inc
xor
and
and
add
push
push
loop
cmp
push
andnps
idivl
jp
dec
pusha
and
jns
in
push
out
outsb
lret
pop
lods
jge
dec
xor
adc
dec
mov
or
cli
dec
push
jbe
push
enter
adc
lock
mov
mov
mov
dec
aad
nop
add
int3
and
ja
ret
mov
fildl
inc
mov
hlt
into
call
pop
pop
lea
sahf
push
and
lds
add
cmp
sub
push
je
fs
pop
and
sarl
jb
mov
stc
outsb
les
dec
out
mov
rorl
pop
lock
sbb
and
insl
push
orb
hlt
xor
jg
sbbl
ror
mov
aad
loop
xchg
in
stos
xlat
movsl
mov
push
dec
mov
mov
lret
and
jecxz
out
dec
mov
imul
sbbb
and
inc
mov
data16
cs
mov
cld
add
cmp
pusha
adc
jmp
and
movsb
les
jle
hlt
dec
adcl
test
outsb
lds
cmpsb
inc
and
inc
imul
mov
lret
xor
es
xor
test
test
jno
sub
mov
out
dec
mov
cmpsb
xchg
popa
xor
xor
imull
mov
jbe
loope
das
push
xchg
pop
pop
imul
mov
cs
cwtl
leave
rcll
repz
test
pop
xor
and
dec
popa
dec
vrsqrtss
mov
jp
jb
xchg
mov
mov
cmp
xor
dec
jno
xor
sub
sub
and
mov
fnstenv
cmpsl
pushf
ret
dec
push
dec
sahf
cmpsl
adc
jns
add
scas
cmpsb
dec
shll
jo
mov
sub
push
loop
jns
sub
icebp
xor
in
inc
pop
iret
cld
dec
clc
in
mov
dec
adc
jecxz
sti
stos
clc
pop
jae
add
incb
sub
rcrl
jmp
push
and
cmpsb
and
lock
inc
ds
in
lock
dec
push
pop
fdivs
out
mov
push
mov
in
repz
mov
pop
cld
dec
out
sbb
mov
mov
cmp
lahf
loope
xchg
adc
inc
push
sbb
add
mov
add
sub
mov
mov
push
andb
pop
pop
add
mov
push
xchg
lret
mov
std
insb
inc
sub
or
ret
movsl
pusha
sbb
pop
adc
mov
sbb
idivb
lahf
dec
xor
jb
inc
je
xorb
push
lock
push
sub
aam
lods
mov
or
push
aad
popf
lcall
xlat
pop
and
cmp
mov
gs
sahf
mov
jo
xor
fs
mov
jp
pop
out
mov
or
enter
std
bound
jns
in
push
jl
jns
xchg
mov
out
mov
sub
cmc
ficompl
mov
push
dec
xchg
xchg
push
lahf
mov
xchg
pop
or
pop
inc
mov
data16
fisttps
jae
pushf
sbb
pop
cmc
bound
fs
mov
dec
dec
rorb
add
jb
shrl
std
mov
jecxz
sbb
rorl
inc
cmpsl
out
jl
fidivrs
push
popf
int3
out
cli
pop
pop
sar
cltd
outsl
stos
loop
xor
ljmp
sub
inc
dec
cli
push
lret
mov
lods
dec
mov
je
add
or
inc
fstp
mov
repz
repnz
add
sbb
iret
fists
repnz
ds
dec
xor
ret
sub
mov
leave
aad
fisubrs
pop
adc
sbb
mov
cmp
insb
divb
je
push
and
push
daa
stc
pop
movsl
jno
sub
jae
mov
scas
enter
fidivs
jo
dec
lahf
js
mov
fstpl
pop
or
lods
mov
repnz
lods
sub
mov
int
mov
add
outsb
jmp
adc
jecxz
push
cmp
cli
shrb
mov
gs
sub
inc
rorb
aad
faddl
ret
or
cmpsb
sbb
adc
ss
xchg
or
jnp
andb
sbbb
pop
mov
leave
cmpsl
mov
or
sti
jle
sahf
jb
daa
cmp
inc
aad
lret
xchg
mov
arpl
sbb
sahf
mov
pop
es
movsl
lret
pop
insb
in
xor
ficoms
jle
dec
movsl
fs
sbb
leave
mov
inc
jmp
cmpb
shrd
mov
adc
sbb
cmpsb
push
mov
sbb
inc
xchg
sbb
leave
fildl
mov
xor
mov
or
mov
inc
xor
outsb
mov
xchg
jl
out
lds
mov
mov
push
push
clc
or
aas
xor
ffreep
pop
data16
negb
cltd
xor
push
cmp
jae
test
mov
andb
inc
jmp
sbb
cmc
or
xchg
push
add
mov
lds
loope
mov
and
je
jg
and
roll
inc
mov
lock
leave
push
push
sbb
aas
push
cmc
rcll
out
fidivs
hlt
aam
popa
fdivrl
cmp
xchg
inc
les
ss
pop
jl
push
push
xchg
loope
fdivs
fisttps
test
sub
xor
out
mov
in
and
movsb
jp
adc
xor
xor
pop
insb
fidivl
and
stos
sub
cmpsw
inc
sub
out
pop
xchg
ds
sub
je
arpl
bound
arpl
inc
or
or
dec
push
pop
jge
insb
and
lock
mov
push
ds
and
mov
mov
dec
pop
mov
fstps
scas
sub
imul
cmc
les
fwait
and
sbb
int3
scas
pop
mov
mov
mov
out
adc
pop
push
and
push
sbb
ja
fisubs
aaa
inc
mov
jecxz
inc
test
pop
lahf
xchg
pop
push
and
jnp
mov
fucom
jecxz
rclb
dec
stos
add
add
in
pop
mov
adc
add
ljmp
pop
sub
jb
fldt
xchg
xor
dec
lods
pushf
jae
dec
pop
addr16
or
rclb
and
mov
inc
xchg
adc
push
test
push
lods
xor
inc
lods
push
sub
xor
inc
in
dec
cmp
dec
dec
jae
sarl
adc
fucom
cmp
or
fcompl
sahf
int
cmp
push
orl
lea
fistl
test
and
stos
and
or
adc
jg
andl
sbb
sbb
incb
inc
sbbl
std
jne
lods
push
test
xchg
mov
jno
or
and
loop
mov
xchg
jle
ror
pop
push
mov
xchg
pusha
jle
test
cmp
jmp
cmp
xchg
jns
sub
test
fwait
pusha
test
loope
fisttpl
out
ret
xchg
mov
lret
jmp
mov
pushf
xor
add
das
push
adc
fsubrs
in
scas
nop
pop
xchg
out
sbb
dec
hlt
sub
jmp
jecxz
shlb
test
incl
xchg
loope
dec
mov
push
jle
xchg
mov
mov
ret
out
mov
and
std
adc
adc
enter
stos
cmpsl
push
inc
ret
js
xor
push
pop
fistps
int
cmp
nop
jb
mov
int3
rcr
punpckhbw
roll
jo
in
test
push
pop
lea
jnp
jecxz
paddusb
adc
lock
aas
into
dec
movl
xlat
pop
push
or
lds
push
jmp
cmp
inc
cmp
xlat
push
cmp
dec
sbb
sub
xor
sub
mov
inc
sbb
insb
mov
imul
pop
shl
aaa
iret
cmp
into
push
or
mov
mov
cmpsb
repnz
popf
lahf
popa
sbb
mov
xor
pop
adc
push
mov
repnz
xor
daa
in
cld
out
sahf
jle
xchg
lock
bound
pusha
mov
add
xchg
cmpsb
and
std
testb
push
in
dec
jae
or
cmp
pop
cmp
sub
inc
leave
shr
ficompl
sub
dec
mov
and
sub
sub
scas
push
cmp
push
adc
repnz
push
push
pop
cmp
pop
addl
push
mov
jns
notb
dec
push
mov
stos
das
add
stos
adc
sti
enter
or
push
cmc
adc
loop
mov
int3
lret
inc
sub
pop
lcall
into
xchg
pusha
add
jbe
adc
pop
aas
inc
push
jns
jns
xor
mov
push
add
mov
mov
xor
and
aas
lret
mov
les
or
inc
jb
push
push
je
lds
out
pop
ss
mov
jbe
cmpsl
je
idivl
mov
clc
dec
mov
jae
out
xor
ror
ja
xchg
negb
mov
rolb
movsb
xor
pop
ja
fisttpl
pop
out
add
leave
mov
or
imul
inc
mov
cmp
add
xor
shll
js
dec
mov
lret
and
mov
in
js
mov
inc
cwtl
mov
mov
cmp
notl
inc
rcr
pop
inc
js
jae
test
shrl
icebp
dec
loopne
mov
and
push
pop
pop
mov
push
xchg
and
push
jbe
lahf
xor
add
sbb
push
and
add
loopne
jbe
rorl
std
push
test
ret
popa
push
fsubrl
test
nop
lds
mov
adc
pop
js
sub
add
sub
inc
mov
mov
mov
and
lea
scas
pop
les
or
mov
nop
push
mov
mov
push
xchg
cmp
in
add
xchg
cmp
int
xchg
inc
out
dec
jp
or
add
sbb
inc
stc
xchg
pusha
int3
test
jb
mov
lahf
inc
enter
push
mov
test
iret
std
js
jle
mov
gs
jp
mov
insl
pop
or
or
iret
xor
loopne
aaa
out
leave
int3
call
test
loopne
js
pop
jno
fldt
dec
pusha
pop
out
mov
int3
divl
mov
inc
ss
xchg
sti
jns
mov
mov
shlb
std
lods
arpl
mov
cmovg
pusha
fldcw
mov
cmp
gs
jp
fsubrs
jb
sbb
clc
int
mov
mov
jno
in
sahf
inc
pop
rdtsc
jp
stos
imul
aas
inc
add
sahf
idivl
dec
push
push
aaa
add
out
iret
sar
and
mov
dec
mov
jmp
jno
adc
data16
jae
push
mov
je
fldt
mov
mov
cltd
lea
push
js
cmpsl
add
mov
adc
scas
in
decl
popa
push
or
jg
insl
sbb
dec
xlat
addr16
and
cmpsl
cld
mov
pusha
mov
mov
push
daa
dec
mov
popa
aam
aaa
cmp
sbb
pop
aad
and
add
in
cltd
scas
xchg
daa
and
jnp
sbbb
jmp
inc
bound
rol
or
sbb
adc
xchg
cmpsl
xor
xchg
loope
ret
lahf
movsb
xorb
lods
setbe
sub
xchg
dec
jecxz
sbb
mov
in
push
cmpsb
int3
mov
fs
sbb
pop
xor
pop
push
test
out
push
rorb
jecxz
cmc
pop
ss
and
and
jns
fxch
and
leave
scas
lods
lds
pusha
fcmovu
mov
fcoml
jne
xor
push
aaa
call
mov
push
out
push
adc
fstpl
aas
sub
cmpsl
cltd
mov
in
add
xchg
pop
out
sub
or
les
repnz
xor
icebp
inc
dec
jb
insl
mov
aaa
orb
out
mov
jp
push
add
mov
es
push
in
mov
adc
adc
sub
pop
push
test
aas
pop
pop
cmc
jle
sub
jmp
movb
mov
add
test
xchg
dec
ja
fldln2
hlt
ss
dec
std
push
mov
lahf
aas
js
out
and
stc
es
lds
rcrb
mov
push
cs
in
inc
sbb
das
xor
xchg
dec
xchg
cmp
add
lods
push
dec
shlb
enter
movsl
cld
loope
or
cmp
push
mov
fcmovu
rolb
cltd
mov
pop
xor
jmp
dec
push
int
jbe
loope
push
mov
dec
out
pop
lahf
jmp
pop
mov
jb
push
leave
cmp
push
js
les
test
xor
subl
arpl
xor
cld
pop
dec
stc
mov
lods
lret
push
and
xchg
xlat
es
adc
jno
xchg
out
arpl
int3
dec
add
jo
leave
cli
cmpsl
dec
and
ja
fldenv
in
test
adc
nop
xchg
jle
cld
mov
icebp
cli
std
in
leave
add
pop
jmp
jecxz
xchg
scas
mov
xchg
repnz
push
and
add
inc
adc
stos
lods
ds
and
jb
in
mov
stc
cmc
aad
push
add
fs
xor
or
test
insl
xlat
imul
fs
push
mov
dec
cltd
mov
xlat
or
ss
mov
fmul
subb
cmp
loopne
test
ret
or
mov
in
inc
loop
arpl
in
in
mov
pop
aam
out
mov
outsl
push
push
mov
adc
clc
das
jl
mov
arpl
mov
testb
push
jae
pop
subb
adc
cs
pop
sub
or
fmull
scas
cmp
out
mov
and
or
pop
pop
test
pop
mov
rolb
mov
cmp
pop
lds
nop
dec
add
fidivrs
sahf
mov
rcll
arpl
xor
ficomps
jp
fwait
push
jge
loopne
push
mov
cmc
je
pop
cltd
jle
adc
mov
mov
mov
ret
sub
or
hlt
and
and
pop
pop
push
jp
enter
and
imul
and
repnz
mov
lods
stc
push
ficoms
sbb
imul
testb
lea
subl
cmc
stc
jmp
or
mov
jge
ret
test
into
dec
imul
xor
xor
add
cmp
cmpsb
rolb
lea
xchg
idivl
aam
adc
das
setle
mov
inc
xchg
scas
adc
and
ss
js
loope
pushf
leave
test
xor
lret
lret
leave
or
repnz
int
push
cmp
dec
std
inc
pop
push
adc
stc
or
insb
xchg
and
out
out
sub
cmpsl
loop
inc
xchg
push
xor
add
imul
sbb
mov
imul
outsl
xchg
mov
push
push
bound
aad
cmp
pop
cmpl
xor
dec
mov
stos
in
or
fs
jecxz
mov
push
add
add
pop
jl
inc
sub
repz
mov
fwait
pop
psrld
cmpsl
push
and
ficoml
inc
repz
jmp
hlt
push
icebp
sub
pop
sub
mov
add
subb
test
lret
jo
sbb
aas
cs
imul
and
jge
mov
or
loop
add
outsb
xchg
pusha
loope
ljmp
shrb
les
fwait
and
xchg
dec
xchg
and
arpl
nop
and
push
fst
js
mov
or
sbb
fsubrs
xchg
jle
aam
adc
sbb
and
cmp
in
fstl
or
scas
xchg
movsb
andl
fdivr
xchg
mov
adc
scas
xor
xor
int
imul
sbb
out
orl
push
adc
pop
sub
inc
sbb
jmp
cwtl
sbb
leave
sub
fstpl
dec
pop
inc
lea
insb
test
paddusw
cmp
inc
jge
xchg
jae
shr
adc
addr16
mov
jle
loopne
insl
cmp
mov
bound
icebp
mov
insb
mov
xchg
xchg
mov
jne
sub
and
or
mov
in
push
gs
out
sub
pop
leave
cmp
sub
imul
add
and
aaa
shl
mov
arpl
and
out
test
pop
cmpb
inc
movsb
pop
jnp
and
adc
xchg
sub
outsb
cmc
lahf
xchg
dec
fsubl
add
and
js
pop
or
jnp
mov
sbb
dec
lret
cmp
inc
test
push
adc
mov
repnz
dec
lahf
lret
repz
xor
loop
adc
jae
es
repnz
inc
fistps
fists
bnd
sbb
and
jo
push
sarb
xlat
jno
sti
xor
sbb
mov
mov
movb
jbe
and
or
ss
repz
sbb
in
in
xor
lret
in
xchg
jl
sbb
test
stc
shrb
sub
ljmp
jno
lcall
mov
mov
dec
jp
repz
pop
xor
and
xchg
push
orl
and
movsb
jp
js
dec
repz
cld
mov
add
mov
pop
clc
inc
adc
mov
mul
pop
pop
push
jb
jne
repz
sbb
mov
inc
loope
xor
sub
movsb
mov
enter
inc
pop
je
jo
outsb
lret
dec
dec
mov
sbb
dec
jmp
fwait
jnp
cmpb
je
push
cmpb
xor
pop
ljmp
mov
cmp
rorl
leave
dec
insl
jno
cmp
sub
sub
ffree
mov
jae
mov
xor
scas
push
dec
in
and
mov
mov
pop
adc
or
lcall
sbb
pop
std
inc
in
push
fdivrs
add
lahf
sbb
or
enter
pop
ret
lods
jne
mov
pop
pop
popf
pop
hlt
loopne
lret
pop
ljmp
orl
addr16
addr16
lret
sbb
sub
mov
dec
hlt
lock
xchg
loop
addr16
push
pop
mov
push
inc
iret
mov
push
sub
and
dec
xchg
cmp
or
mov
shrb
inc
cs
jl
pop
and
lock
pushf
int
lahf
test
sub
mov
icebp
mov
and
out
pop
mov
xlat
xor
push
shll
xchg
pop
fdivr
adc
leave
ljmp
xchg
inc
dec
pop
push
imul
xlat
pop
movsb
insl
xlat
test
or
movsl
lret
xchg
push
add
lods
pop
int3
mov
dec
lds
repz
movsb
in
je
jmp
cmp
repz
dec
mov
xor
jb
pop
sub
fildll
sub
ja
clc
pop
sbb
ror
call
test
dec
repz
push
jno
or
push
jo
dec
lds
inc
pushl
in
pop
into
repz
inc
sahf
pop
inc
or
mov
jecxz
xchg
dec
int3
or
add
in
xor
outsb
pop
sti
icebp
xor
mov
push
mov
lcall
sub
rolb
lods
jmp
xchg
jae
test
idiv
ret
cmp
scas
and
stos
test
or
or
push
mov
int
cmp
js
rclb
mov
jnp
xor
fistl
ds
sbb
xor
call
xchg
xor
lods
push
insb
and
lds
imul
mov
inc
and
ja
mov
adcl
add
dec
push
adcl
mov
dec
int3
jnp
xchg
inc
ljmp
nop
mov
adc
xor
jbe
lds
mov
mov
dec
push
mov
insb
pop
mov
mov
mov
pop
mov
push
and
or
sbb
aam
shll
les
xchg
sub
lds
add
mov
jae
sbb
xchg
jns
scas
adc
shll
cmpsl
add
adc
cmp
in
sub
fisubs
cmc
cld
movsb
push
jge
mov
push
mov
fistps
pop
test
mov
cltd
adc
mov
xor
out
cmp
pop
ss
nop
out
insb
stos
mov
sbb
ret
fistl
or
sub
adc
movsb
sbb
andl
jle
imul
addr16
rcr
nop
jl
cli
sbb
test
pop
pop
lea
xlat
push
lret
rcrl
outsb
cli
adcl
jmp
pop
cld
jmp
pop
cmp
fiadds
and
adc
loope
mov
xchg
test
xchg
sti
xchg
out
leave
loop
dec
in
xchg
leave
roll
je
lret
xchg
imul
out
jge
add
and
int3
add
and
fs
and
fiadds
jo
push
adc
sti
push
imul
fmul
or
aaa
call
or
push
xchg
sub
cld
mov
mov
or
leave
adc
mov
stos
xor
or
xchg
sub
mov
mov
mov
adc
in
inc
xor
jb
fs
mov
jns
shll
xchg
aas
ljmp
add
repz
push
hlt
sub
fmul
sti
cmp
call
rorl
clc
pop
mov
sub
jns
popa
push
add
aam
mov
pop
sub
dec
sbb
mov
pop
cmpsl
and
cli
ja
cmc
or
mov
data16
xchg
scas
push
loope
add
sub
ret
insl
in
jge
push
xchg
add
clc
cmp
add
pop
mov
mov
mov
dec
arpl
push
scas
call
pop
pop
push
fadds
fyl2x
push
movsl
add
inc
fs
xor
or
fimuls
jb
imul
arpl
bound
inc
sbb
test
and
jmp
xor
aam
imul
dec
mov
jl
das
push
subl
add
jg
xor
sub
sub
push
shr
push
jbe
test
sub
pushf
loope
movsl
out
inc
xor
fidivrl
mov
push
or
dec
pop
aad
mov
inc
inc
int3
and
sbb
fstps
cmc
pop
pop
hlt
push
lock
arpl
sbb
push
xchg
les
jmp
add
jno
inc
hlt
mov
inc
cmp
push
lret
ret
lods
pushf
dec
mov
dec
sbb
pop
mov
sbb
imul
add
insl
inc
insb
cmp
ficoml
pop
mov
mov
sahf
ja
stos
sub
in
or
mov
mov
lods
sub
mov
dec
cmp
mov
pop
mov
push
cmp
push
push
cmpb
std
std
cmp
stos
loope
leave
popl
pushf
cmpsb
dec
cwtl
mov
lret
enter
jmp
or
mov
sarb
pop
fs
jbe
adc
sub
xorl
stos
and
and
jecxz
and
push
adc
lahf
scas
cmc
sarb
aaa
jg
mov
dec
mov
or
lret
scas
or
mov
adc
iret
dec
xor
dec
sbb
sub
stc
je
cwtl
sbb
inc
dec
cmp
aas
mov
jno
dec
lahf
push
pop
out
loopne
daa
repz
sub
adc
mov
shlb
sahf
adc
pushl
xchg
fsub
dec
cltd
inc
jne
ror
sti
jns
inc
inc
loop
mov
inc
ljmp
sbbb
leave
fwait
push
lods
mov
pop
jg
ss
pop
sahf
lods
jns
ficoml
dec
mov
add
push
mov
stos
push
ret
pop
sub
ss
xlat
add
imull
mov
ds
push
inc
xchg
test
pop
lods
mov
jecxz
and
aad
shll
je
jne
imul
jl
andb
mov
push
sub
aas
jns
pusha
test
xor
jg
xor
jge
jg
mov
sbb
arpl
inc
in
stos
orb
ret
scas
loopne
pop
pop
or
push
loop
mov
mov
dec
push
outsl
and
fstpl
arpl
add
jg
mov
imul
call
shll
test
push
lcall
sbb
stc
cltd
jb
jge
popa
mov
in
nop
mov
mov
into
lret
xchg
mov
fwait
dec
loopne
and
scas
rcr
js
sbbl
notl
mov
ljmp
fisttpl
mov
cli
in
rcll
shlb
bound
inc
and
and
push
outsb
mov
sub
add
fsubrs
and
mov
aaa
hlt
pop
arpl
xlat
adc
inc
jbe
and
hlt
adc
imul
cmpb
mov
out
dec
stos
imul
mov
jl
add
mov
adc
pop
ljmp
jmp
cmpsb
int
fnstenv
nop
daa
nop
dec
pop
mov
and
pushf
cmc
lds
scas
nop
cs
mov
shll
roll
ss
lcall
cmc
int3
sub
pop
pop
mov
inc
imul
pop
je
mov
push
xchg
jecxz
mov
dec
pop
inc
inc
jne
push
scas
out
jnp
xchg
adc
lahf
pop
or
cltd
mov
mov
mov
mov
cld
insl
xchg
jecxz
sti
mov
xor
repnz
jge
imul
jl
testb
stos
jecxz
inc
in
jb
add
push
arpl
push
mov
frstor
dec
enter
pop
lock
sbb
je
xchg
les
inc
in
add
test
je
inc
icebp
fisubrl
cmp
test
mov
xor
out
mov
insl
adc
mov
pop
xchg
in
adc
sbb
mov
and
pop
mov
jg
jb
and
jno
repz
ret
xlat
xor
sarl
push
inc
mov
mov
push
add
stos
jp
sbb
sbb
in
arpl
dec
pusha
cmp
mov
test
add
inc
sub
movsl
pop
xchg
xchg
mov
mov
mov
addr16
or
add
sbb
sbb
pop
add
mov
icebp
test
call
sahf
faddl
adc
and
pop
and
dec
das
xor
jne
in
movsb
fdivrl
shll
ficompl
push
cmp
pop
pop
jp
shl
xchg
mov
fcompl
ss
fisttpll
and
add
push
stos
sub
call
push
aas
add
lahf
mov
movsb
je
ret
daa
inc
mov
push
enter
xchg
loope
js
jmp
sahf
sar
inc
adc
arpl
jb
repnz
dec
loope
mov
aas
inc
inc
xchg
out
loop
jns
test
cmp
std
gs
push
mov
xchg
xchg
pop
mov
adc
out
add
mov
sahf
clc
jnp
shrb
gs
test
movsb
add
mov
ficomps
dec
jge
cmp
cmp
pop
and
sub
loop
das
cmp
add
fbstp
xlat
dec
sbb
fildll
cmc
aas
frstor
pop
lret
fwait
dec
dec
sbb
mov
daa
pop
cmp
outsl
cmc
push
jb
inc
sbb
scas
add
mov
hlt
ficomps
pop
repz
adc
lahf
pop
cs
xchg
mov
into
pushf
push
call
jge
jp
inc
punpckhwd
push
shll
lret
jae
xchg
andl
and
jno
and
loope
xchg
sub
or
insl
stos
sub
and
negb
sbb
mov
xor
iret
jno,pn
pushf
mov
rcrl
fcompp
shl
mov
daa
movsb
mov
aas
cwtl
out
sbb
repnz
out
inc
lea
xlat
fnstsw
stos
adc
adc
pop
mov
call
mov
notb
jae
dec
in
iret
lods
xchg
push
fistl
ss
mov
cmp
aam
or
sub
addl
cmc
shrb
shlb
mov
fucomi
int3
push
iret
inc
rcrl
ss
pop
shll
sbb
xchg
rclb
sbb
ja
mov
decb
sub
push
xchg
sbbb
sti
push
fdivr
mov
or
or
jg
push
mov
mov
mov
loop
outsl
sbb
mov
pop
cmpb
dec
sub
pop
aam
jbe
dec
push
adc
sti
mov
cwtl
mov
outsb
xchg
push
in
sar
test
aaa
sbb
in
cmp
iret
sti
arpl
fs
inc
inc
xlat
outsb
xchg
scas
jne
ffree
fs
add
cwtl
inc
jae
push
cli
pushf
imul
add
outsl
add
dec
add
mov
aam
ja
fwait
push
cwtl
sub
xchg
call
movsb
push
mov
ret
jno
mov
push
push
mov
dec
inc
daa
mov
mov
pop
push
dec
negb
scas
in
and
pop
mov
mov
orb
pop
inc
mov
push
leave
cmpl
frstor
and
imul
push
mov
mov
push
and
jae
lcall
adc
pop
dec
ds
insl
iret
test
mov
movsl
jae
fistps
and
pop
iret
and
test
iret
shll
jmpw
add
inc
dec
push
jg
clc
push
jmp
push
or
outsb
add
cmp
fnstsw
inc
mov
mov
repnz
jge
pop
clc
fcomps
lret
loopne
stos
fbld
xchg
ss
and
xchg
pop
inc
mov
mov
push
iret
inc
out
sub
jno
inc
xchg
mov
or
iret
popf
jge
xchg
imul
add
test
cmp
out
or
add
mov
aas
sbb
out
jne
into
jno
add
incl
add
mov
sub
enter
shl
rcrl
sbb
xchg
mov
push
fbld
push
fmulp
cmp
shlb
xchg
fnstsw
inc
inc
or
inc
cmp
mov
add
sbb
adc
or
xchg
pop
mov
lret
in
inc
roll
outsl
sbb
jl
sub
sub
push
mov
xchg
sub
mov
imul
movsl
xchg
imul
push
dec
in
inc
ja
das
or
adc
stos
test
roll
shll
jge
call
loopne
dec
bnd
push
pop
aaa
ret
or
sub
clc
or
mov
lahf
cmp
xchg
jmp
out
sti
imul
subl
pop
fldl
scas
inc
cltd
int3
and
or
lods
pop
popa
ss
adc
pop
jns
push
gs
in
out
jmp
pop
sbb
aaa
sub
mov
or
xchg
fadd
add
adc
adc
push
aaa
dec
pop
sbb
stc
jns
mov
xor
enter
sub
int
adc
push
out
pop
call
outsb
push
mov
pop
sub
xchg
ss
sbb
or
push
fwait
xchg
fisttps
ss
mov
sbb
arpl
dec
mov
jne
cwtl
andb
sbb
mov
xor
inc
inc
out
add
orl
xchg
ljmp
push
mov
fstpt
lds
mov
cmp
pop
push
and
jecxz
mov
sub
cmp
push
loope
add
xor
push
int
jmp
cs
in
xor
push
jle
push
or
insb
sbb
inc
mov
cmpsb
sti
sub
enter
js
jp
outsl
mov
sbb
pop
xchg
push
and
cmpsb
xchg
mov
sub
or
mov
aas
sbb
mov
insl
mov
sub
psubsb
xor
jno
or
dec
mov
jo
ja
scas
adc
xor
inc
outsl
insb
dec
jne
dec
inc
fistpl
mov
outsb
pop
mov
out
enter
fistpl
mov
xor
mov
cmp
jecxz
mov
in
fcmovne
and
dec
mov
icebp
inc
out
das
lock
push
push
sbb
pop
inc
idiv
xchg
lds
inc
or
jnp
outsb
jns
das
outsl
sbb
dec
jmp
dec
outsl
stos
out
es
imul
push
push
add
sub
pop
lret
xchg
shlb
call
dec
mov
enter
pop
and
shr
pop
cs
rcrb
xchg
rorl
jbe
popa
sarl
mov
iret
mov
xor
pushf
adc
ja
push
sbb
xor
xor
xchg
push
movsb
inc
jns
dec
test
nop
prefetchnta
lods
shl
into
or
scas
mov
mov
fisubrs
out
inc
cmp
mov
nop
jl
fdiv
sub
loope
fistpll
sti
sbb
cmp
das
sub
into
sbb
int
das
add
das
mov
sbb
pop
inc
cld
into
xorl
add
and
inc
xchg
movsb
imul
add
in
adc
data16
inc
pop
xor
aas
add
aas
sub
adc
pcmpgtw
sbb
data16
xor
ror
loope
xchg
cmp
cmc
rolb
add
ret
push
mov
or
movb
push
stos
in
cmpsl
pop
sbb
push
addl
sbb
imul
cwtl
or
sub
fwait
jbe
add
loop
scas
jmp
out
ficoml
push
icebp
and
in
shll
ret
sbb
xchg
mov
and
push
cmp
js
mov
repz
mov
test
lret
outsb
mov
cmp
jno
iret
daa
repz
mov
faddp
cmpsb
sahf
jne
icebp
dec
idivb
sub
cmp
imull
daa
cmp
mov
addl
pushf
pop
add
test
dec
cwtl
lcall
cmp
scas
leave
imul
outsb
stos
in
fmul
sub
sbb
pop
nop
int3
arpl
mov
in
jo
push
mov
int
scas
sbb
pop
and
sub
sbb
lahf
in
xchg
test
sbb
fwait
jle
inc
divl
scas
std
xor
push
sub
je
arpl
adcl
or
pop
mov
mov
loop
inc
fisttps
inc
xor
cli
dec
inc
xchg
aad
loope
pusha
lock
adc
xchg
mov
inc
lahf
scas
js
and
inc
xchg
add
cs
out
xor
pop
aam
aad
jns
pop
je
lods
cmpsl
ss
jns
cmpsb
pop
add
mov
enter
mov
ds
es
pop
mov
add
jno
push
bound
imul
sub
sbbl
pop
inc
cmp
mov
xor
aaa
scas
fistps
and
pop
push
mov
ss
pop
popf
sti
insb
repz
iret
aas
fs
mov
dec
sub
jge
aad
push
lcall
adc
mov
shl
ss
aad
outsb
pop
push
shll
xor
int3
les
stos
out
test
push
push
mov
out
add
or
enter
rolb
ret
mov
outsl
sub
arpl
clc
sbb
out
jb
lock
movsl
sub
mov
scas
mov
ss
cmpsl
xchg
sub
jnp
mov
jnp
push
ljmp
testl
mov
jle
idivl
movsb
dec
cmp
mov
mov
pop
mov
jge
xchg
cmp
andl
test
jmp
and
mov
les
cmc
insb
inc
icebp
leave
push
dec
stos
push
fimull
mov
adc
xchg
mov
sbb
lcall
mov
mov
int
leave
sti
adc
and
mov
icebp
and
adc
add
sub
cmp
fstps
dec
push
addr16
dec
js
bound
mov
das
iret
outsl
mov
lock
xchg
or
xchg
xor
inc
and
jne
cmpsl
xchg
incl
roll
xchg
test
sbb
lret
add
jecxz
addr16
outsb
jb
lret
and
faddp
or
lds
shrb
lods
cmp
lret
scas
sbb
inc
push
out
fsubrs
or
scas
mov
xlat
fldlg2
inc
sub
pop
adc
icebp
sti
add
add
fwait
addr16
cltd
adc
negl
icebp
xor
pop
sahf
addr16
jge
mov
jle
sbb
shlb
in
xchg
ret
aam
out
pop
inc
fstpt
jns
inc
mov
lret
adc
jo
rorl
outsl
pop
pop
movsl
mov
mov
add
push
cltd
fistpl
dec
push
stos
sub
imul
pushf
stc
xchg
stos
ja
mov
fsub
pop
sub
out
pop
js
inc
mov
inc
bound
and
push
dec
call
push
into
inc
xor
movsl
aaa
out
add
and
aas
add
or
xchg
loope
jnp
ljmp
adcl
xchg
dec
push
xchg
xor
sti
pop
dec
fcomps
dec
in
repz
pop
jl
stc
jl
aaa
ljmp
daa
sbb
ret
out
cs
jne
in
mov
out
lret
and
ret
cmp
xor
cmpsb
lods
popf
loope
mov
xor
push
jl
scas
stos
pop
pop
ds
push
fiadds
cmc
mov
imul
xchg
adc
popa
push
aam
stc
jge
pop
pop
insl
sahf
leave
and
les
dec
mov
stc
mov
jno
mov
pop
or
pop
loopne
lahf
ror
cmp
adc
mov
cltd
mov
mov
pop
sbb
xchg
fsubrl
fists
cmp
cwtl
push
adc
int
dec
adc
cmp
mov
out
inc
sbb
mov
in
adc
sub
or
push
and
inc
aas
pop
xor
and
push
jae
pop
xor
mov
outsl
add
xchg
leave
lds
lock
or
pop
stc
loop
sbb
add
repnz
fcmove
enter
sti
ja
js
pop
cs
lods
mov
sub
pop
jbe
ret
cs
and
inc
jecxz
mov
jnp
loope
push
enter
dec
adc
or
int3
and
ficoms
adc
adc
sub
cli
lret
pop
jns
sahf
mov
jge
ljmp
add
test
scas
push
scas
adc
inc
fldcw
mov
outsl
enter
mov
dec
inc
out
fistps
insb
add
mov
sub
fcoms
and
or
or
lock
call
push
mov
arpl
mov
adc
sub
xor
mov
add
lods
movsb
pop
pop
xchg
xchg
scas
sbbl
jl
push
or
mov
stos
out
add
test
xor
jge
push
in
lahf
fildll
jmp
inc
imul
push
xor
push
jb
shrl
jb
jp
jecxz
aad
mov
or
enter
or
add
push
xchg
dec
and
int
pop
cmc
sub
adc
inc
mov
sub
shll
test
dec
mov
pop
bound
ret
pop
sbb
mov
add
cmpsb
adc
push
andl
dec
jb
call
movsb
pusha
mov
loopne
mov
adc
cmp
xchg
cmp
push
mov
mov
rcr
loopne
xor
cmp
data16
add
jmp
gs
cli
int3
dec
scas
mov
ds
jg
ret
adc
fdivr
add
loope
xor
addl
sbb
add
lret
or
dec
sarl
push
scas
testb
cmp
cmp
idivl
out
call
nop
cmp
mov
push
in
shlb
push
insb
fsubrl
mov
fistps
aas
jmp
leave
adc
fnstsw
push
push
jge
mov
xchg
xchg
jecxz
ret
adc
xchg
cmp
dec
xor
leave
dec
xor
xor
je
adc
out
sahf
mov
jne
into
push
mov
xchg
scas
jne
xor
in
call
scas
stos
adc
pushf
out
sub
shrl
lds
dec
imulb
fsubl
lods
sahf
cmp
lcall
jne
jbe
test
mov
cmpb
cmp
inc
mov
dec
push
pop
test
pop
std
clc
mov
data16
test
mov
lret
adc
inc
xchg
pop
sub
mov
je
testl
or
cmp
jle
xchg
and
inc
jle
test
or
add
xchg
push
inc
mov
xchg
mov
icebp
jecxz
aam
popa
xchg
loope
xchg
mov
inc
jg
dec
incb
sub
nop
in
fcoms
mov
je
ret
xchg
sahf
les
testl
ret
repnz
imul
cmpsl
add
adc
rcll
inc
jno
ja
mov
add
add
adc
lds
push
aaa
xchg
repz
xchg
cmpsl
xchg
jb
fsts
cmp
mov
cli
pop
push
ret
js
cmp
cltd
punpcklwd
dec
push
push
outsl
jns
subb
dec
inc
js
gs
mov
add
outsb
xchg
shlb
or
cmp
dec
fsts
or
test
sub
out
xor
sub
mov
aaa
sbb
push
stc
out
movl
icebp
sub
xor
je
cmp
jbe
cli
xorl
add
xlat
and
or
adc
ja
sbb
pop
pop
mov
sub
mulb
ja
fidivl
push
mov
sbb
aad
out
stos
jno
jb
outsb
dec
pop
push
outsl
bound
inc
fsubrl
pop
lock
push
cmpsb
negb
add
cmp
adc
sub
cmp
fisubrs
dec
mov
inc
mov
aaa
jns
push
and
adc
or
int
push
pop
sbb
movsl
inc
pop
adc
inc
imul
pop
cld
imul
js
test
cmp
jae
aas
aam
xor
sbb
lods
leave
fwait
cmp
pop
jnp
or
mov
out
out
cmp
sub
xor
adc
shld
loop
push
lods
ret
cli
dec
out
lahf
pop
arpl
loope
lds
jmp
pop
mov
lods
neg
les
js
leave
push
mov
jnp
ljmp
add
sbb
nop
repz
sub
lds
ror
pusha
cmpsb
push
es
in
sbb
or
xor
daa
pop
or
inc
aad
adc
sti
aad
lods
xchg
dec
jnp
jno
in
mov
dec
aas
and
push
push
lock
std
sbb
jb
pusha
shlb
lock
popf
and
andl
js
cmp
mov
loopne
cmpsb
in
jo
jg
push
rolb
mov
mov
repz
add
mov
push
call
cmp
fdivr
mov
pop
mov
pop
fstpt
add
or
outsb
mov
inc
jecxz
test
stos
clc
movsb
jmp
xchg
ret
sub
cld
popa
mov
or
repnz
stc
cmp
roll
and
popf
cltd
das
daa
scas
fmulp
pusha
pop
pop
aaa
mov
cs
push
je
or
leave
sub
mov
dec
push
jmp
outsl
sub
fs
movsb
mov
mov
leave
dec
out
ret
rol
mov
adc
jecxz
cli
out
cmp
xor
nop
rolb
fdivrl
bound
sub
fnsave
inc
sti
cmpsl
movsl
scas
and
adc
loope
dec
in
sub
jo
loope
sub
aad
xor
js
enter
adc
rolb
lea
sti
mov
mov
shr
std
cld
in
fsub
adc
popf
ja
xchg
fcoms
jae
pop
pop
adc
jnp
mov
scas
cmc
push
lock
and
adc
sub
testl
fmull
es
mov
sbb
dec
xchg
stc
inc
inc
es
jno
leave
dec
iret
dec
mov
test
int3
mov
xchg
mov
mov
mov
sbb
jne
in
add
mov
push
jns
cli
vxorps
shrb
xor
cmp
cli
aaa
add
rcrl
mov
out
inc
popf
jne
aad
dec
setp
or
rep
add
sbb
or
arpl
xlat
inc
out
pop
or
dec
call
mov
jno
ret
sub
nop
nop
or
mov
fistpll
xchg
shll
mov
ret
mov
mov
stc
mov
out
mov
xor
xchg
sbb
mov
mov
sar
pop
ss
std
dec
imul
popa
test
loope
mov
in
xor
popf
ret
mov
sbb
ror
sub
aam
hlt
pop
popf
sub
dec
mov
cli
adc
push
mov
jae
test
jmp
mov
inc
and
data16
aaa
fwait
dec
pop
cmc
loope
loopne
js
mov
neg
mov
test
test
cmp
fisubl
roll
sub
addr16
movsl
mov
fnstenv
xor
jle
ror
mov
repz
and
add
loopne
xchg
nop
or
adc
push
data16
cld
and
not
xor
imul
sbb
pushl
insl
inc
mov
add
cmp
xchg
xchg
insl
or
test
inc
mov
addb
jg
fldl
mov
jnp
adcb
cwtl
adc
cmp
pop
int3
rcll
inc
sub
mov
xchg
imul
jmp
mov
xchg
pop
pop
xchg
cli
push
lods
test
adc
and
mov
daa
cmpsb
add
aaa
mov
xor
cmp
add
push
out
mov
sahf
adc
dec
out
mov
jae
or
and
bnd
in
push
lods
jbe
scas
push
jl
jmp
push
jae
or
inc
push
into
ss
es
popa
jne
fnstenv
mov
xchg
cmpsl
jnp
sub
and
pop
and
mov
cmpsb
xchg
pop
jmp
cs
push
add
mov
xor
scas
das
jecxz
outsl
aas
jge
cmpsb
mov
lcall
push
push
and
js
getsec
push
punpckhbw
out
mov
xor
sti
mov
jo
iret
and
push
jno
add
imul
mov
xchg
inc
sbb
xor
fistps
lea
jge
sahf
jecxz
loope
mov
lock
push
bound
and
repz
dec
jge
sub
mov
inc
or
std
sbbb
into
xchg
cmc
sub
ljmp
std
mov
outsb
das
inc
addr16
lret
mov
jge
sbb
icebp
xlat
loopne
lea
stc
fidivl
out
push
mov
leave
ficoml
xchg
mov
imul
dec
mov
sub
js
inc
and
pushw
xor
loop
jno
bound
dec
js
pop
add
icebp
cmp
pushf
pop
jg
sbb
add
mov
or
cmpsl
xor
repnz
sarl
roll
push
in
rcrb
add
es
xor
out
mov
aad
push
lea
lret
clc
inc
and
lock
rol
jo
xchg
popa
mov
pushf
xor
cmp
testl
xchg
test
insl
pop
jnp
mov
cmp
pop
loop
movsb
mov
inc
jae
mov
mov
dec
push
mov
push
pop
or
clc
sub
dec
movsb
inc
roll
std
out
mov
out
pushf
dec
jecxz
mov
jbe
hlt
divb
cmc
int
enter
mov
sbb
jge
int
in
or
or
mov
test
push
call
in
scas
sbbl
dec
add
push
pusha
mov
cmp
or
stos
mov
xchg
lods
adc
push
xchg
iret
xor
xor
mov
lcall
dec
sbb
movsl
int
push
ja
mov
fadds
negb
cld
mov
sub
push
xchg
scas
rclb
xor
in
mov
jge
ljmp
inc
xchg
sbb
sahf
sub
pop
mov
push
roll
test
push
mov
pushf
dec
jle
rcr
mov
fstpt
lods
jl
jg
xorb
pop
mov
xor
cld
popw
mov
rcrl
jno
or
imul
xor
mov
dec
mov
xchg
xor
xor
sub
aam
pop
cmp
lods
std
cs
jb
mov
imul
inc
out
aaa
mov
add
mov
pushf
inc
mov
inc
fcom
push
out
out
testb
aas
and
fbld
lret
cmpsb
jo
dec
imul
stos
mov
add
jg
mov
push
inc
outsl
fwait
and
andl
pop
adc
or
ja
mov
enter
add
jo
cwtl
shrl
lock
inc
pop
mov
movsb
stc
js
shll
mov
in
rclb
add
fstpl
outsb
and
fistl
fsub
pop
pop
test
adc
leave
cwtl
test
stos
sbbb
add
stos
aad
inc
push
mov
sbb
sub
ret
xchg
add
jmp
push
stc
xor
mov
outsl
cld
sub
aad
jle
jg
fmulp
and
jo
push
push
mov
fbld
or
stc
sbb
fstps
cmp
inc
adc
push
lock
jne
aad
mov
xlat
sub
jp
push
fistpl
in
jns
dec
pop
cmp
adc
pop
hlt
lock
fsubrs
jns
inc
mov
add
adc
loopne
push
adc
push
or
xor
sbb
ljmp
into
mov
sbb
rcll
mov
ss
aam
mov
mov
popl
fcoms
sbb
cmp
dec
je
icebp
sbb
push
pop
lret
pop
scas
repz
dec
push
mov
les
out
inc
es
imul
cs
mov
cli
sbb
add
xor
mov
inc
jmp
jge
int3
lcall
xor
jmp
outsb
in
cltd
in
pop
pop
rcrl
ljmp
sbb
jbe
and
rcrb
lahf
xor
push
push
xor
loopne
push
mov
lret
pop
mov
call
cmp
cs
roll
or
loopne
xor
jnp
mov
push
or
inc
andb
and
orl
xor
xor
in
jno
lods
xchg
mov
lods
stos
clc
icebp
xchg
push
fisttpl
fmulp
push
xchg
call
iret
out
icebp
dec
mov
leave
sbb
popa
iret
xlat
add
jne
jp
mov
pusha
sti
outsb
popf
ffreep
add
sub
cmpsb
aad
std
test
hlt
xchg
mov
adc
adc
xor
ffree
test
sbb
inc
adc
xor
push
fwait
shrb
mov
test
mov
aas
fwait
out
lds
ljmp
push
lcall
cmpsb
push
dec
jmp
mov
adc
xor
andl
lret
push
add
xchg
and
mov
movsl
arpl
call
repnz
jl
ss
pop
out
jbe
inc
sbb
dec
jb
and
in
shlb
frstor
sbb
mov
fistpl
cmp
cmc
arpl
sbb
fnsave
xchg
into
fisubrs
sbb
jb
aaa
mov
cmp
das
add
adc
int
cltd
pop
ret
in
outsb
mov
xchg
pop
cwtl
xchg
shrb
mov
sub
mov
or
andb
fs
mov
xlat
sbb
push
sahf
mov
dec
sub
out
cwtl
dec
fisubrs
add
mov
stos
cmp
xchg
push
rorl
xchg
cmpsb
subl
jno
xchg
dec
aaa
jb
add
or
pop
mov
cmp
jo
sub
cmpsb
dec
mov
dec
cmp
and
rclb
push
aas
mov
dec
sti
adc
popf
xchg
and
xchg
fdivr
loop
xchg
cmp
mov
xchg
sbb
repnz
pop
aad
lret
adc
in
mov
stc
mov
cmp
cmp
cs
dec
outsl
in
fmuls
dec
xor
lcall
les
push
lods
popf
test
in
mov
add
test
inc
mov
xchg
mov
clc
mov
push
bound
lods
sub
pop
push
xor
xchg
hlt
sub
or
jbe
xchg
cmc
pop
rorl
lcall
popa
jbe
dec
imul
insb
sbb
inc
xchg
mov
cmp
xchg
cmp
testb
adc
lahf
aam
jge
es
and
inc
sbb
enter
ds
xor
mov
mov
pusha
xor
mov
lcall
std
call
dec
or
stos
xchg
int
popa
stc
inc
mov
out
add
push
cmpsl
sub
iret
sub
ret
popa
test
sbb
and
repnz
or
jo
cmc
pop
or
lcall
adc
or
ret
sub
mov
cmp
xchg
push
fldcw
scas
icebp
jmp
sub
scas
sub
shrb
sub
dec
cmpsb
jne
lcall
int3
cmp
or
cmp
insb
aam
add
ds
jle
jae
jmp
mov
jae
jo
xchg
jmp
out
int
mov
mov
push
cmp
aas
cmp
sbb
lds
subl
stc
jno
add
out
fmull
dec
movsl
mov
jl
lret
std
sbb
out
push
add
sbb
addb
push
pop
rcll
adc
popf
ret
bound
dec
lret
mov
mov
out
vphsubbw
mov
cmpl
sub
notb
xor
stos
or
cmp
add
pop
or
sbb
jo
adc
mov
sub
push
cmpsl
sbb
jg
inc
std
call
andnps
add
mov
mov
jno
and
movsl
mov
test
sarl
in
xchg
mov
mov
out
fs
js
repnz
lods
xor
sbb
stos
push
pop
loopne
arpl
mov
add
dec
cmp
and
push
add
shr
mov
xchg
push
mov
subl
mov
iret
jno
dec
ds
sti
dec
push
mov
mov
jecxz
xchg
cmp
mov
adc
call
push
sub
out
call
mov
cs
cld
push
movsl
mov
jg
dec
scas
aad
enter
xchg
jne
daa
lcall
std
out
icebp
mov
sub
inc
cmpsb
mov
int
shlb
cld
dec
mov
jg
arpl
out
xor
mov
je
xor
mov
add
clc
jno
movsl
ret
mov
sbb
sbb
sbb
into
loope
mov
stos
or
testl
mov
or
push
mov
loopne
dec
cmp
jl
jb
pop
lock
cmp
jnp
mov
dec
fldl
call
jl
jle
adc
adc
add
cli
add
aam
stc
cmpsb
enter
jnp
les
xor
or
dec
sbbl
aad
scas
cld
sbb
shll
adc
pop
out
popa
cmp
movsb
or
push
sbb
cmpsl
and
pushf
dec
loope
paddq
inc
lcall
stc
adc
pop
xlat
xchg
int
push
cmpsb
arpl
push
xchg
icebp
cmp
xchg
test
js
aas
pusha
fwait
adc
mov
out
add
lods
inc
push
popa
xchg
mov
sub
orl
xchg
xchg
mov
jne
ljmp
xchg
vpaddusw
daa
sub
adc
sarb
mov
pop
rcrb
ds
mov
jecxz
sbb
sub
sete
adc
stos
cltd
mov
bound
and
out
das
cli
sbbb
dec
aas
mov
std
mov
sbb
in
dec
movsl
add
mov
add
mov
or
ret
outsl
mov
in
sahf
push
movsb
or
pop
stos
fsubs
add
pushf
xchg
insl
pop
lea
in
jmp
pop
xor
sahf
pop
test
pusha
and
push
sub
mov
outsb
out
xchg
cwtl
or
adc
or
popf
popf
cwtl
adc
xor
lock
imul
js
out
ds
cmp
dec
mov
xchg
js
cli
popf
dec
mov
sub
sbb
jne
dec
mov
loop
mov
and
js
push
xchg
xchg
loope
pop
shll
mov
ds
out
aas
push
mov
jns
xchg
std
cld
cli
xchg
stos
out
inc
es
arpl
xchg
daa
rorl
int
lahf
cmp
stc
aaa
jle
push
pop
dec
jb
es
and
or
inc
pop
jae
lret
stos
in
add
sub
ds
cltd
ret
ret
gs
inc
insb
mov
in
push
ds
div
jge
and
daa
movsb
mov
scas
dec
movsl
jb
push
adc
jge
push
adc
add
inc
pusha
pop
ds
fs
cmpsb
pusha
movsl
xchg
jmp
add
repnz
loope
and
mov
test
repnz
or
jp
in
push
adc
jnp
push
lea
cmpsl
into
hlt
scas
stc
dec
ficompl
fld
jnp
xchg
push
and
clc
dec
push
or
in
mov
adc
nop
lcall
ss
push
pop
push
cld
in
mov
aaa
insl
pop
pop
dec
divl
pop
dec
sub
popa
pop
insl
pop
add
lret
popa
dec
in
test
lods
dec
push
scas
loopne
push
and
adc
adc
add
sub
pop
add
cmc
push
mov
cmp
pop
ss
aas
jno
push
popf
mov
xchg
sbb
into
lret
das
pop
mov
rcll
clc
insb
or
cwtl
ficoms
dec
adc
divl
push
aaa
pop
lret
jge
das
xor
cmc
arpl
mov
shl
mov
popa
iret
inc
aam
and
or
pop
mov
adc
aas
or
int
fidivl
jnp
aam
pop
mov
jmp
jno
adc
test
sub
jne
inc
leave
push
pushf
addl
adc
dec
movsl
xor
dec
imul
sbb
mov
dec
mov
out
mov
mov
cmp
lret
dec
out
xchg
rcrb
mov
testl
insb
jl
sub
adc
pop
lret
mov
xchg
mov
inc
pop
jge
mov
adc
push
mov
rcrl
cmp
cmpsl
cmpsl
inc
mov
inc
scas
jbe
ret
adc
push
test
mov
push
mov
push
ds
sti
ljmp
mov
dec
pop
lods
lods
stos
int3
lret
mov
add
mov
push
add
sti
jb
mov
cmp
adc
mov
out
and
cld
in
cmp
call
enter
test
lock
xor
push
mov
in
gs
pop
mov
ja
cmp
jge
rol
je
cmp
jg
add
orl
out
ljmp
xor
nopl
insl
aam
data16
pop
jns
stc
mov
mov
rcrl
sahf
push
pop
jmp
rol
inc
push
xor
inc
stc
or
inc
mov
repz
mov
fidivrl
int3
rcr
lcall
lret
mov
push
loop
jg
sub
lods
divb
loope
mov
vmwrite
sub
mov
sbb
in
sbbb
aas
aad
in
int3
cmpsb
loopne
movsl
mov
inc
xchg
dec
popa
add
xor
pop
jp
stc
sbb
sbb
pop
div
and
out
sub
push
dec
sub
pop
fadds
mov
rcl
hlt
or
or
cmp
fcmove
push
add
or
into
mov
mov
inc
xor
pop
mov
adc
addr16
fcmovnb
popf
out
mov
aas
js
in
bound
mov
sbb
cmp
push
lock
xchg
push
push
fsubr
mov
test
pop
pop
in
fyl2xp1
mov
pop
ja
andb
jg
nop
push
and
push
jns
jbe
jp
insb
in
filds
mov
mov
or
jecxz
cmp
pop
sarl
push
xchg
and
and
mov
dec
push
ljmp
push
dec
mov
jmp
push
int3
or
je
xchg
or
ss
hlt
enter
mov
inc
popf
repnz
in
testb
push
lods
shlb
shll
or
or
addr16
mov
dec
insb
inc
fcoml
outsb
mov
daa
mov
sub
lahf
imul
fs
cmp
cli
test
insl
out
cmp
inc
inc
lcall
and
ljmp
rep
scas
pop
or
and
inc
rcll
mov
xor
pop
mov
scas
push
roll
add
sub
add
movsl
pusha
mov
ficomps
or
or
stos
push
call
mov
xchg
adc
pop
test
dec
fwait
inc
sub
add
cbtw
in
add
pop
das
nop
mov
jge
in
add
sub
adc
push
fidivl
aas
jge
aad
mov
cs
rol
inc
mov
lcall
cld
jle
mov
mov
das
insl
daa
adc
push
or
cmp
or
out
lahf
mov
in
dec
shrb
jl
and
adc
scas
inc
or
xor
mov
push
lret
out
test
outsb
roll
dec
jae
lret
xchg
add
dec
sbb
andb
test
inc
icebp
dec
add
pop
or
adcb
rcll
lcall
ljmp
xchg
fisttpll
je
lret
scas
add
or
rolb
xor
mov
cli
mov
sti
mov
dec
mov
pop
jbe
mov
sahf
icebp
imul
ds
imul
jnp
mov
xchg
pop
pop
dec
in
pusha
faddl
adc
pushf
cmp
adc
mov
loope
test
repnz
push
mov
sub
adc
neg
dec
jle
mov
push
add
and
sahf
mov
popf
and
push
loop
enter
sub
cmp
cmp
ror
loopne
pop
jns
sub
mov
or
pop
sbb
jmp
cmp
mov
test
jge
xchg
jno
pop
repnz
pop
stos
in
ret
and
push
xor
dec
pop
imul
imull
rcr
xchg
leave
sbb
jmp
push
inc
addl
in
and
lahf
pop
ret
mov
decl
pop
lcall
adc
ror
mov
push
dec
sti
add
stos
aaa
jns
ds
std
jne
popf
jns,pt
xchg
mov
lret
sbb
dec
mov
jbe
lods
cmpsb
push
cli
pushl
cli
sahf
scas
dec
cmp
call
and
addb
inc
movsl
jnp
inc
xchg
int3
mov
push
adc
xchg
jecxz
aam
mov
xchg
mov
adc
jg
and
fimuls
mov
sbb
addr16
sar
sbb
jg
fcomi
inc
mov
addb
lods
cwtl
and
fisubs
aad
ret
xchg
test
stos
mov
pop
pop
mov
xchg
iret
jo
test
ret
popa
push
cli
mov
add
and
mov
pop
test
ds
movsl
pop
roll
sbb
xchg
push
adc
jle
add
sub
mov
adc
xchg
rcrb
sbb
push
push
cltd
repz
pushf
jnp
aas
scas
jl
push
repz
pop
lcall
pop
fcompl
daa
jae
jbe
fnsave
sbb
sbb
test
out
addr16
lods
mov
xchg
sub
and
mov
or
lcall
cmp
jno
gs
cmpsb
push
dec
and
add
mov
in
xor
sub
ja
scas
xchg
mov
call
inc
fisubrs
add
xchg
movsl
mov
jae
orb
mov
pop
xchg
pop
ljmp
sbb
adc
loop
testb
popa
mov
pop
shrb
data16
sub
imul
or
fldcw
mov
enter
loopne
xchg
inc
sub
sbbb
jg
cmp
sub
and
imul
mov
les
add
ljmp
xor
call
stc
mov
stos
adc
mov
fs
xchg
rorl
mov
scas
push
roll
sahf
loop
js
xchg
stos
test
xchg
cmpsl
jmp
lret
stos
xor
adc
cmp
fwait
sub
push
or
sbb
les
dec
mov
or
push
pop
dec
push
js
mov
push
jo
scas
jle
pop
mov
test
lret
shl
xchg
nop
mov
and
sub
jne
jo
movsb
cmc
mov
hlt
cmp
dec
add
lock
mov
adc
xchg
mov
pusha
push
or
jne
fldl
nop
push
add
xor
jecxz
mov
aas
fsubrl
cmp
fs
mov
dec
test
cmpb
mov
push
cmpsb
rorl
mov
xor
sti
adc
mov
mov
sub
push
es
insb
xor
and
addr16
push
push
xchg
jecxz
add
fwait
mov
and
sahf
inc
movsb
out
lcall
leave
into
mov
cmp
js
xor
and
pop
std
xchg
enter
cmp
imul
push
enter
mov
push
in
or
adc
movsb
push
sub
mov
enter
mov
inc
fisubrs
cmp
ds
test
mov
mov
int
ficomps
pop
push
xchg
jae
and
jle
hlt
and
xchg
sbb
pop
fstl
jmp
xor
dec
inc
stos
loopne
imul
inc
faddl
in
add
pop
cli
cmp
jecxz
es
cmc
imul
jb
ret
roll
xchg
scas
add
xchg
xchg
and
cmp
xor
rcrl
jmp
ljmp
xlat
nop
int3
push
data16
test
or
loopne
mov
or
adc
jg
add
movsb
fidivrl
inc
push
or
pop
sti
cmp
mov
fnstcw
jg
xchg
jmp
vpaddq
popa
xchg
ds
insl
lret
movl
push
pushf
mov
xor
shlb
icebp
push
insl
cli
pop
insb
fwait
mov
test
stc
mov
test
xor
jle
bound
std
inc
xchg
sbb
mov
push
adc
fstps
mov
jb
lock
inc
lret
aad
lock
lea
pop
iret
or
jmp
into
push
pop
cmp
push
lret
sub
dec
or
adc
mov
jnp
js
addr16
push
adc
sbb
lcall
jnp
ret
movsb
subl
lock
movsb
xor
mov
cli
lret
and
pushf
and
test
out
popf
loopne
push
xor
ret
lods
xor
xlat
add
jle
js
imul
mov
add
js
test
test
ss
add
dec
and
or
subb
incb
mov
fnstsw
jns
and
mov
xchg
dec
add
gs
mov
mov
inc
repnz
pop
ss
mov
inc
add
sahf
xchg
xchg
lcall
sbb
mov
sbb
fistpll
fcmovnb
add
jo
push
je
mov
insl
jl
cmp
ds
stos
pop
sub
xchg
inc
lcall
inc
test
xchg
inc
into
jo
rorl
int3
outsb
or
push
pop
jge
out
sbb
pushf
xchg
jge
mov
stos
repnz
mov
stos
mov
xchg
jecxz
in
cmp
mov
ror
pop
stos
test
cmp
es
xchg
xlat
fstl
mov
loop
pushf
into
inc
es
push
push
aas
das
in
jle
lret
cmpxchg
mov
cmpsl
fs
sub
dec
pop
dec
cmp
xchg
sbb
addb
dec
jo
hlt
icebp
loope
and
sbb
lret
call
pop
ljmp
fwait
mov
sti
cmp
inc
xor
inc
inc
pushf
movsl
cmp
rcll
outsl
shrl
ret
xchg
into
dec
cmp
jb
sbb
fidivs
ret
rolb
in
dec
pop
xchg
push
sbb
or
sub
imul
xchg
inc
or
jne
sub
pop
mov
and
call
xchg
sub
pop
loop
mov
adc
sahf
xor
cmp
dec
out
loop
fisubl
inc
inc
outsb
push
xor
mov
filds
inc
dec
jo
pusha
cmc
out
scas
lret
jle
or
dec
lahf
movsl
fistps
pop
test
je
pop
arpl
repz
push
jns
je
mov
mov
sub
loopne
out
fs
cmp
lods
sub
jns
dec
in
clc
addb
fwait
shl
mov
mov
sub
xor
push
jae
js
fstpl
data16
iret
cwtl
mov
pop
jns
jo
cmp
cwtl
adc
enter
cmp
and
sbb
movsl
cmc
push
push
movsl
jle
dec
js
and
sub
pushw
out
in
inc
hlt
mov
testl
imul
clc
cmp
inc
out
pop
bound
popf
fwait
in
std
sarb
loop
movsl
mov
outsl
lock
jno
pusha
test
cmp
enter
fcmove
inc
jno
sbb
jl
mov
in
movsb
or
mov
andb
loop
adc
xor
cld
mov
cmp
das
cmp
lea
xor
xchg
icebp
lds
in
and
mov
addb
inc
in
loop
incb
add
mov
scas
enter
loope
xchg
sub
push
pop
shlb
xor
aad
fcomip
sbb
mov
sub
inc
rcrb
mov
test
add
shl
fs
scas
insl
cli
movsb
inc
and
cwtl
and
mov
add
sbb
pop
dec
popf
nop
and
test
cli
stos
push
sub
int
xchg
sbb
neg
mov
aaa
loope
roll
pop
movb
mov
cmp
shrb
sub
pusha
test
in
fwait
in
or
aas
inc
pushf
cmp
in
data16
sub
or
xchg
call
or
fldenv
dec
outsb
push
xchg
in
jge
xor
faddl
addb
push
shrl
arpl
adc
fcomi
inc
xchg
loopne
mov
adc
int
sub
ffree
push
or
pop
rcll
or
outsb
aaa
push
call
mov
inc
shll
add
fwait
xor
loope
mov
mov
pop
orb
jnp
mov
sub
aaa
imul
fwait
insb
pop
outsb
jg
mov
imul
push
dec
cmp
mov
rclb
push
das
push
enter
fldt
push
sbb
imul
aas
add
push
pop
je
adc
jae
xor
fistpl
lret
inc
pop
inc
add
add
jmp
jnp
cmc
adc
sar
sbb
cmovb
pop
int3
dec
jp
sarb
ss
loop
adc
inc
test
xchg
jnp
and
push
mov
negb
xor
and
test
lret
loopne
mov
cmpb
fs
pop
les
xchg
das
cmpsl
orb
adc
xchg
push
push
dec
pop
nop
scas
lods
cmpsl
ret
das
shlb
popa
push
in
cmpsb
sub
xor
les
sbb
pop
add
inc
add
sub
pop
aad
loop
into
cmc
mov
add
jmp
arpl
sahf
int
jmp
das
roll
sub
iret
dec
leave
mov
dec
mov
xchg
mov
and
sti
and
ss
mov
subb
fists
call
lahf
xor
repnz
cmp
pop
xor
and
fstpt
int
push
mov
loopne
jne
jbe
mov
jg
pop
mov
and
xor
and
sarb
lods
cmc
mov
jae
xchg
int3
scas
icebp
stos
lea
test
or
cmpb
push
cmp
xor
subb
repz
add
ss
addr16
mov
enter
cmp
fldcw
fsubrl
pop
mov
outsl
cs
jno
inc
in
xchg
test
je
sahf
cmp
lods
mov
mov
jae
mov
cwtl
or
xlat
addr16
push
sarl
jb
push
xor
rcrl
jo
dec
lret
std
daa
mov
iret
das
and
and
add
sbbl
aas
inc
scas
jno
xchg
outsb
icebp
rcll
adc
mov
lds
or
in
mov
and
sub
xlat
xor
movsb
mov
pusha
out
push
or
daa
push
into
inc
add
pop
inc
into
lret
dec
in
stc
cmpsb
jge
insb
mov
sub
push
stc
js
das
mov
dec
cmp
insb
lcall
pusha
fildl
jne
mov
adc
adc
inc
push
insb
cltd
sti
cwtl
lods
iret
push
repnz
repz
fisubs
fcoml
push
pop
popf
cmpsb
repz
stc
pop
jo
mov
add
pop
outsb
cmp
sbb
jle
pushf
mov
and
mov
ret
test
fsubrs
cmp
jns
dec
xor
mov
adc
fmuls
push
stos
jno
or
xlat
sahf
addl
hlt
std
add
insl
test
jnp
jecxz
add
mov
jns
dec
add
mov
stc
insl
jns
jns
xchg
jge
mov
rcrb
shlb
xchg
inc
sub
jb
dec
xor
dec
mov
mov
fmull
sti
mov
jo
sarl
dec
adc
sbb
push
lock
dec
mov
or
cmp
mov
mov
mov
jp
aad
mov
mov
scas
xchg
mov
pop
mov
pop
adc
jg
mov
cltd
loop
push
sbb
out
mov
in
xor
push
jge
sbb
cmpsl
jp
jnp
xor
popa
fcomip
jae
cmp
xchg
sbb
push
fcmovnu
mov
nop
gs
inc
out
scas
fnstcw
fidivs
push
imul
jp
mov
cmc
fstpl
sbb
mov
imul
nop
insl
data16
mov
push
jg
cmp
jmp
popf
add
shrb
rol
jp
scas
add
pop
and
mov
es
add
mov
or
subb
pop
jge
stos
jns
scas
pop
dec
sub
popf
popf
or
aad
test
pop
loop
dec
test
sahf
mov
ss
imul
cli
push
rclb
dec
shlb
cmp
repnz
xlat
inc
push
jp
movsl
sarb
add
cmp
ljmp
xchg
ja
add
add
test
cmp
lods
or
sub
and
xsha256
cmpsb
pop
push
xchg
loopne
sub
xor
push
push
decb
or
jge
out
fldl
fsts
aas
inc
negl
icebp
lods
mov
fwait
cs
push
adc
cmp
xor
xchg
inc
aas
fwait
mov
push
stos
xchg
int3
je
xchg
mov
add
jae
mov
repnz
sub
aad
sahf
movsb
lret
add
jle
push
pop
aaa
and
jmp
xor
and
jnp
ds
ret
mov
sbb
ljmp
jb
cwtl
repnz
jmp
daa
out
add
dec
or
test
int3
cli
mov
mov
push
cmp
or
inc
jmp
roll
in
stos
sahf
mov
xchg
mov
adc
sub
or
jmp
xchg
test
lcall
xchg
cmp
or
adc
stos
aas
xorb
mov
in
outsl
cmp
enter
mov
stc
dec
add
mov
and
mov
imul
sub
insb
sbb
pop
cmpb
sbb
adc
jbe
push
js
fldz
mov
add
mov
adc
inc
fsubp
lcall
cmp
add
pop
into
sbb
aas
int3
xchg
popa
fcompl
ret
sub
pop
fldl
sub
int
out
cltd
scas
addl
out
pop
add
roll
lods
pop
cmp
repz
inc
out
cmp
jg
jle
ret
test
cwtl
pop
cmp
fxch
out
inc
inc
jnp
mov
add
add
sub
cld
lea
inc
xchg
decl
pop
mov
jg
xchg
inc
into
and
andl
gs
orb
or
sbb
mov
sahf
adc
sbb
mov
fcom
jne
pop
push
pusha
ljmp
call
andl
xor
jo
imul
rcl
mov
out
push
shlb
lock
xchg
mov
pop
aam
sbb
pop
dec
cmp
push
sbb
pop
sbb
fs
pushf
in
xchg
ja,pt
push
cmpsb
and
xchg
lret
in
cmp
xchg
sbb
lods
fisttps
jle
cltd
and
mov
scas
in
or
stos
pop
xlat
push
shll
aas
pop
jle
adc
in
sub
pop
in
mov
hlt
jae
nop
jns
xor
mov
outsl
lds
gs
push
outsl
insl
inc
mov
adc
insb
adc
pop
pop
inc
data16
into
scas
mov
add
or
inc
das
aaa
inc
testl
sub
test
jb
pop
mov
dec
popa
and
in
xchg
jmp
push
movsl
mulb
xchg
filds
xchg
addr16
inc
loopne
adc
inc
sarl
mov
and
adc
mov
mov
bound
js
and
andl
and
add
inc
mov
mov
xorb
out
cld
inc
js
jne
cmpsb
jg
cmp
adc
push
lcall
fucomp
scas
test
push
hlt
sti
lahf
daa
loope
adc
add
sub
repnz
sbb
xlat
shll
pop
cs
movsl
out
mov
push
loopne
or
xor
add
cmp
push
pop
adc
popa
insb
enter
sbb
ret
lods
xchg
pop
inc
ret
out
mov
and
in
mov
mov
and
dec
pmovmskb
xchg
ret
mov
sahf
test
sub
cmp
mov
stc
dec
sub
outsl
gs
cmpsl
jbe
sub
inc
fidivs
fcmove
or
shl
lock
pop
test
out
push
dec
pop
sahf
faddl
jecxz
pop
mov
jmp
bound
call
mov
sbb
sbb
fmuls
loope
push
dec
or
jg
inc
push
movsb
xchg
ficoms
movsb
in
aas
mov
aad
into
flds
xor
popf
push
dec
divb
fwait
jl
or
aaa
aam
fmul
cmp
mov
lahf
mov
or
adc
adc
ret
mov
ret
sti
movsb
xchg
popf
mov
lock
test
jle
lret
mov
mov
and
cwtl
add
lahf
popa
pushf
lahf
add
in
mov
xchg
popa
xlat
add
ljmp
jle
pop
or
fwait
mov
test
mov
aam
push
pop
dec
or
cltd
add
shlb
cmpsb
les
mov
mov
sbbl
in
outsl
mov
icebp
jbe
mov
xchg
icebp
mov
mov
push
xchg
fimull
arpl
push
das
data16
in
xchg
mov
and
cmpsl
dec
push
push
mov
xor
inc
loopne
fisttpl
inc
mov
jb
sub
pop
data16
mov
adc
lds
cmpsl
icebp
ret
pushf
cltd
inc
dec
mov
jmp
dec
fnstcw
sbb
rcrl
mov
sbb
pop
xor
sti
pushf
cmpsb
sarb
js
dec
jnp
outsb
insl
jae
jne
bound
repnz
xchg
mov
add
xchg
aas
sub
loope
xchg
std
addr16
inc
int
push
push
xchg
mov
and
dec
out
insl
enter
aas
inc
outsl
inc
lock
push
jl
fnstsw
negl
pop
out
mov
pop
mov
mov
out
adc
rcl
adc
stc
push
jmp
jno
daa
mov
sbb
sbb
mov
sbb
cltd
popf
arpl
enter
popf
cmc
fmul
flds
adc
cmc
shlb
cmp
call
call
add
mov
adc
sbb
add
mov
lock
adc
in
clc
push
imul
mov
insb
jge
mov
cltd
js
dec
inc
cmp
cmp
dec
jns
mov
lret
pusha
popa
pusha
cmp
aaa
ds
xchg
xchg
and
jmp
and
ja
add
int
data16
mov
stc
cmp
lds
jbe
fwait
push
and
mov
lret
or
add
aam
inc
ja
and
out
and
popa
dec
dec
lds
fisubs
stc
add
das
push
or
shlb
cmp
in
sub
inc
inc
dec
inc
dec
mov
jne
mov
mov
mov
andl
push
push
push
sbb
mov
arpl
icebp
popw
test
add
fnsave
mov
addr16
and
fmul
nop
clc
mov
dec
add
sbb
mov
cmc
mov
fldcw
lods
mov
nop
cltd
xchg
xchg
sbb
mov
mov
cmpb
or
subl
inc
inc
or
sar
push
add
mov
xor
adc
testb
mov
mov
in
je
jbe
jmp
je
add
add
or
arpl
imul
lret
repz
sbb
mov
jp
daa
mov
loop
movsl
pop
sub
stc
lds
inc
xor
test
push
dec
mov
mov
mov
cmp
inc
pushf
ds
or
push
clc
into
xchg
movsl
push
mov
jmp
jbe
push
cltd
mov
pop
push
jo
arpl
mov
and
cs
aas
xchg
mov
jge
mov
into
fisubl
cmc
imul
pop
fucomi
test
dec
dec
jne
fdivs
adc
xlat
stos
jbe
roll
jae
cli
das
push
pop
lret
lcall
icebp
and
xor
arpl
bound
jge
push
xor
jb
fcomps
aam
repnz
cs
push
imul
dec
lock
push
or
sub
cltd
imul
mov
cmc
sti
shlb
ljmp
mov
sti
cmp
pop
or
mov
pop
jecxz
dec
adc
dec
jg
and
cmpsl
scas
jmp
into
mov
ret
jns
xchg
ljmp
rcr
popa
dec
pop
es
call
aas
mov
sub
movsb
jmp
bound
push
inc
mov
sub
push
addb
mov
repnz
jle
mov
or
outsl
pop
inc
push
pushf
int3
ds
out
push
adc
aaa
adc
mov
cmpsl
into
bound
mov
inc
sub
stos
xchg
outsb
pop
jno
jg
lods
sbb
outsb
jl
scas
mov
dec
mov
dec
in
and
mov
mov
xchg
and
in
in
popf
pop
sub
ret
lea
push
dec
adc
or
fdivr
xchg
stos
mov
sub
out
jne
gs
mov
js
jmp
jns
inc
sbb
popa
in
std
jbe
push
xchg
pop
fcmovnu
mov
mov
les
xor
in
xor
inc
mov
inc
cmpsl
xchg
nop
cmp
bound
repz
xor
sbb
cmp
cmp
and
rcrl
and
inc
push
or
in
jns
pop
lea
adc
enter
dec
xchg
sbb
sub
popf
xchg
sbbb
jmp
or
jp
xchg
ret
jp
test
sub
pop
jg
jb
jae
test
add
divl
out
vpmacssdqh
out
iret
mov
jb
insl
divb
fs
or
push
mov
gs
mov
ljmp
cmp
hlt
xor
cmpsl
and
mov
cmc
sahf
lock
fld
out
sar
cmc
mov
cmpsl
inc
inc
out
or
cmpsl
hlt
and
mov
and
fwait
jg
pop
inc
jecxz
sbb
out
repnz
and
loop
outsb
cmp
fldcw
cs
and
xchg
fiaddl
iret
xchg
jle
aad
cmpsl
faddl
mov
jl
mov
xchg
icebp
aas
or
sbb
into
ljmp
and
insl
jo
cmpsl
jge
cmc
fwait
lret
je
dec
mov
mov
repnz
daa
in
call
or
das
cmpsb
outsb
aas
pop
mov
mov
xchg
fisttpll
repz
adc
pop
dec
loop
mov
fisttpl
push
xlat
loope
stos
mov
pavgw
popf
fldl
iret
pop
push
ret
sti
repnz
mov
shrl
xor
push
aaa
or
rorl
sbb
flds
cmp
iret
movsb
add
pop
push
cs
sbb
lret
inc
or
add
fisttpl
cld
lret
cmp
js
lods
or
sahf
push
mov
mov
jecxz
outsb
mov
ljmp
xor
mov
hlt
push
lea
lret
mov
fs
mov
cli
jle
mov
ret
jmp
js
lock
pop
movsl
inc
pop
cmp
pop
pop
scas
xchg
cmp
jnp
inc
lret
fsubrl
insl
test
mov
push
in
mov
mov
das
repnz
push
add
inc
jns
pop
idivl
sub
cmp
aam
jo
inc
mov
cs
jmp
mov
movsb
dec
sbb
repnz
ljmp
aaa
pop
dec
inc
out
stos
inc
dec
sbb
jge
lret
cli
jne
fnstcw
xor
movsl
inc
int
pop
and
dec
jne
cmp
or
in
aas
iret
pop
lods
adc
push
ret
add
adc
mov
add
subl
cltd
mov
push
inc
jge
mov
testl
int
iret
lret
dec
xor
leave
sbb
lea
cld
ret
mov
add
mov
jge
out
int
sub
adc
aad
fsubrl
stc
sbb
adc
aaa
dec
inc
pop
cs
inc
cmp
or
aad
xor
jg
scas
jecxz
jae
shl
mov
or
and
mov
pushf
into
lds
xchg
andl
hlt
cmpsb
jne
cltd
dec
cwtl
xorl
xor
jns
and
push
and
jp
xor
bound
cs
divb
in
jmp
icebp
push
sti
je
ret
jne
and
out
add
insl
pushl
push
sub
into
jne
out
not
popf
cli
int
rcrb
jnp
adc
cmp
aam
out
xor
jbe
pop
dec
xchg
enter
push
arpl
or
int3
mov
and
adcl
xchg
repnz
fdivl
push
lock
jns
xchg
pop
ss
push
sub
mov
mov
inc
cmp
jmp
inc
and
ss
or
movsl
adc
mov
pop
or
loope
or
push
mov
sbb
mov
cmp
sbb
dec
sbb
adc
xchg
mov
mov
xorb
call
adc
mov
cs
mov
and
cmp
pop
imul
adc
sahf
xchg
mov
enter
aaa
lea
mov
mov
int3
or
sbb
adc
adc
adc
das
jge
adc
add
push
loopne
enter
sub
pop
test
and
mov
stc
and
je
dec
nop
cmpsb
pop
aas
into
addr16
sub
dec
pusha
inc
inc
jle
lods
sub
mov
add
jg
hlt
adc
pop
xor
mov
sti
and
xor
dec
bound
inc
out
clc
arpl
jecxz
out
negb
sub
mov
sbb
mov
cltd
leave
sub
xor
sysret
imul
scas
bound
dec
das
leave
xchg
adc
mov
fstpt
xlat
sbb
jge
dec
pusha
push
adc
fmul
mov
outsl
insb
rorl
or
pop
jp
xor
adc
lcall
sti
int
sarb
cmp
mov
lods
mov
out
sti
or
cmp
adc
scas
jo
scas
daa
rclb
pop
and
inc
movsl
insb
and
stc
push
rcll
xchg
insb
adc
sub
pop
clc
mov
enter
mov
jmp
mov
cmp
fdivs
mov
arpl
or
inc
adc
push
adc
xchg
dec
inc
jbe
sub
arpl
jnp
jb
divb
scas
shrl
lahf
mov
dec
aad
test
xchg
xchg
mov
cs
jbe
sub
jb
orb
test
shlb
jecxz
ja
pop
add
jl
leavew
mov
xchg
das
outsl
in
mov
cli
cmpsl
xor
or
jb
into
mov
int3
push
mov
mov
sbb
test
cltd
and
out
bound
and
inc
mov
nop
fcmovnu
int3
jge
into
aaa
rclb
outsb
lahf
out
pusha
cld
lea
fimuls
mov
daa
out
xor
and
out
shld
xchg
sub
adc
nop
dec
push
outsb
inc
push
pop
jecxz
xchg
pop
pop
or
adc
leave
sbb
adc
adc
aas
sarl
sub
popf
cmp
sub
pop
sub
push
dec
clc
xchg
sti
pop
sbb
xchg
xchg
std
xchg
call
inc
lea
cmpl
add
pop
cmp
xchg
fidivrs
ja
cmpsl
decb
and
xchg
cld
pop
xor
leave
adc
pop
sub
lea
in
js
push
clc
std
call
cmc
leave
xchg
mov
and
add
and
inc
mov
cmp
aas
dec
sub
mov
dec
or
jbe
stc
js
push
jne
cld
shrl
fisttps
add
push
pop
mov
pop
roll
orl
jge
scas
dec
repz
push
xchg
push
in
push
push
shlb
cmp
ljmp
or
outsl
inc
add
nop
push
xor
push
and
testl
cmp
push
xchg
cmp
pop
sub
int
dec
jl
jne
fsub
or
mulb
push
mov
mov
and
std
xchg
int
pusha
fcmovb
aad
pop
dec
pop
pop
call
mov
sarb
das
pop
push
leave
jmp
lods
gs
imul
lds
sbb
roll
in
gs
stos
dec
popa
inc
mov
mov
aam
push
aam
pop
fidivrs
arpl
incl
or
lds
popa
push
sub
push
xchg
pop
pop
cltd
loop
iret
mov
xor
lret
pop
sahf
dec
mov
sub
test
es
mov
sbb
or
arpl
mov
cmp
lea
xor
or
test
mov
cmc
sbb
loope
pushl
dec
add
push
mov
mov
repz
shlb
push
les
xchg
jmp
aam
jl
xchg
cmp
or
mov
std
jp
into
subb
cmp
fildll
fiadds
push
xor
push
ljmp
icebp
xchg
mov
sub
sbb
popa
rcrl
je
cltd
rclb
pop
and
andps
pop
lahf
cmpsl
add
adc
add
mov
cmp
mov
inc
cmp
or
sbb
aaa
adc
xor
loopne
insl
mov
adc
jb
xor
nop
pop
xor
xor
mov
mov
test
fiadds
and
cmpsb
inc
mov
pusha
ja
adc
inc
inc
mov
loopne
fidivrs
stos
or
popa
mov
mov
repnz
push
xchg
mov
cli
and
imul
hlt
dec
inc
jo
jb
int3
push
aam
cmp
sub
xor
mov
mov
and
lahf
xlat
mov
out
clc
jge
mov
mov
stc
dec
push
xchg
and
jg
sbb
ljmp
gs
sbb
jne
sbb
mov
xor
lcall
push
mov
fs
push
scas
data16
dec
xlat
lret
push
push
adc
stos
pop
icebp
das
frndint
aaa
test
inc
fsubp
movsl
je
out
shlb
pusha
clc
and
dec
inc
cli
test
or
and
std
fmull
pop
jns
rcll
dec
pop
out
leave
push
scas
xor
ja
aam
lret
mov
jmp
jo
dec
sbbb
mov
adc
xchg
push
cmp
jnp
cmpb
loop
jp
pusha
add
data16
scas
lahf
in
stos
cmc
or
pop
les
sti
inc
lock
ds
add
cli
pop
dec
repnz
and
rorb
mov
sahf
in
lea
mov
out
cmp
push
push
push
in
push
ds
mov
outsl
popf
adc
inc
pushf
pop
add
xlat
cmp
xchg
flds
jae
adc
insb
test
push
add
imul
aas
out
xchg
push
rorl
jecxz
bound
sti
bound
ror
lds
ds
popa
in
xor
or
and
jae
add
lahf
js
sub
je
pop
lds
jmp
shlb
loop
loop
std
mov
hlt
fsubp
mov
pop
cmp
sub
push
outsb
mov
inc
inc
fwait
sub
test
add
arpl
repz
jne
mul
add
sbb
push
mov
js
lahf
daa
mov
xor
out
mov
popa
ljmp
adc
enter
cmpsl
mov
fwait
cld
push
or
lcall
mov
sahf
repz
lods
rcr
pushf
jecxz
push
mov
shlb
test
test
dec
std
out
je
scas
ficoms
cs
add
shlb
lods
mov
or
sarl
stos
icebp
sbb
add
and
mov
movsb
or
fistl
inc
stos
addr16
lret
push
jg
inc
push
xor
sub
mov
adc
out
inc
jge
jle
adc
ret
bound
sbb
test
pusha
cmp
jg
ds
sub
and
pop
mov
lret
cwtl
popf
adc
xlat
xchg
mov
inc
lcall
stc
aam
stos
arpl
add
cwtl
lock
fildll
xchg
fadds
add
cmc
sbb
aad
adc
jno
mov
add
movsl
ss
xchg
in
pusha
xor
mov
les
cli
testl
mov
test
test
push
push
sti
sub
mov
leave
xchg
mov
aaa
fistps
cmp
ret
clc
fidivrs
pop
mov
fistps
jl
jae,pt
mov
pop
js
aas
out
xor
mov
stos
test
std
mov
xchg
psubsb
mov
or
nop
mov
dec
cmpsl
or
mov
roll
pop
sbb
pusha
test
inc
pop
xchg
std
rorb
xchg
shll
ret
pop
fbld
mov
data16
int
ss
bound
inc
mov
sti
int3
in
sub
inc
or
lods
push
jecxz
fidivs
incl
mov
and
lret
fsubp
jne
jmp
fyl2x
rorb
cmp
aaa
mov
les
cmp
mov
add
lret
or
jmp
lea
add
or
cwtl
dec
js
jo
xor
fisttps
or
ret
shll
add
ljmp
or
sbb
stc
in
mov
sbb
add
repz
js
xor
mov
loopne
ljmp
cmp
fs
mov
loop
mov
push
daa
fisubl
mov
lahf
jbe
xchg
lock
leave
fstpl
pop
jge
test
sbb
jle
sub
fwait
add
fsubrs
xchg
out
jecxz
pop
xor
add
sub
stos
daa
add
push
cwtl
sub
push
jl
fbld
push
outsl
fistl
xor
mov
inc
push
mov
xor
inc
jmp
mov
sti
mov
and
hlt
out
sub
push
mull
stos
inc
shrl
jo
pop
xchg
roll
je
pop
ds
and
in
popf
jl
mov
pcmpgtd
sub
jge
movsb
jl
mov
push
test
push
out
xchg
popf
hlt
les
loop
sbb
idivl
or
sub
cmp
and
das
or
or
psubw
repnz
add
lret
stos
repz
push
mov
mov
mov
sbb
and
cmp
pop
jmp
outsb
out
popf
aaa
cmpsb
mov
out
jo
ss
fldt
cld
push
dec
mov
mov
cmp
jno
or
push
sub
inc
add
sbb
movb
push
rcrl
push
push
pop
in
or
into
arpl
fbstp
jb
pop
mov
mov
cmp
xor
mov
jmp
push
inc
mov
aas
or
pop
xor
xorl
sbb
xor
xchg
pop
fistps
mov
nopl
test
bndstx
sub
pop
cmp
dec
ficoms
jo
iret
xor
mov
into
mov
push
cmc
jmp
mov
mov
ljmp
hlt
hlt
hlt
mov
dec
dec
es
lds
mov
mov
in
cmp
mov
sbb
xlat
fxtract
call
dec
loope
and
ss
jle
cltd
stos
push
sti
mov
fisttpll
in
dec
sub
and
add
xchg
inc
add
es
sarb
adc
cmpsl
mov
fldcw
push
pop
mov
imul
mulb
inc
jp
clc
pop
xor
clc
sbb
fsubrl
xchg
ror
mov
mov
pop
or
sbb
roll
xor
xor
daa
repz
dec
jmp
push
sbb
adc
mov
add
or
cs
add
sub
xchg
or
sub
add
gs
cmp
hlt
jg
pop
mov
pop
movsb
or
out
stos
adc
sub
mov
repz
and
dec
cmc
icebp
mov
jl
imul
lret
in
rorl
aaa
sbb
lea
pop
sbb
dec
adc
mov
daa
and
scas
pusha
aam
shll
push
xor
rcr
jnp
mov
adc
movsl
push
rclb
imulb
clc
or
mov
das
movsb
cmp
shlb
test
dec
xchg
cmp
cmc
arpl
fimuls
decl
sbb
lds
lahf
leave
sbb
mov
add
and
fisubrs
enter
in
fstpl
mov
mov
xor
pop
out
cmpsl
stc
repnz
and
icebp
mov
rorb
loop
xchg
mov
cmp
push
in
sbb
mov
mov
daa
aad
xor
mov
add
lret
std
filds
repnz
adc
sub
pop
clc
sbb
int3
push
inc
fistl
cmp
adc
in
pavgb
xchg
je
es
leave
mov
xor
mov
fsubrp
pop
pminsw
push
rorl
clc
insb
ret
test
fldl
imul
in
sub
dec
outsb
lock
es
movsl
xchg
jge
sbb
sbb
pavgw
clc
pop
push
and
sub
fdivrs
cli
ficomps
push
push
xchg
xlat
sbb
test
lock
imul
mov
int
outsb
sahf
out
clc
mov
lahf
or
mov
mov
mov
lret
push
test
leave
push
xor
push
sbbb
sbbl
inc
xor
lahf
cmpsb
bound
outsb
test
addr16
sub
fs
sbb
and
int
xchg
into
repnz
and
xchg
negb
aas
push
notb
int3
xchg
cmp
shlb
mov
mov
or
sub
jle
mov
iret
test
xor
xchg
arpl
sbb
mov
adc
sbb
jl
add
xchg
popf
divl
test
subb
cmpsb
xor
push
lods
loope
and
das
sahf
add
sub
arpl
cmp
test
std
pop
cmp
mov
out
ret
pop
call
jl
lds
cmp
ljmp
pusha
adc
cmp
sub
add
mov
jg
arpl
cltd
ljmp
add
dec
fsubl
stc
scas
fwait
rcrl
shlb
adc
mov
aad
sbb
add
sbb
mov
out
sbb
xchg
loopne
jg
mov
outsb
xchg
jg
mov
fildll
into
fisubl
mov
jecxz
outsb
fsqrt
mov
sti
push
dec
popf
mov
imul
xchg
xchg
jmp
cmp
mov
insl
sbb
push
push
into
pusha
push
pop
orl
push
push
hlt
jo
cmp
lahf
xchg
lods
imul
jne
lcall
imul
sbb
adc
sahf
cmpsb
les
rcll
lret
repz
popf
push
jmp
sbb
icebp
pop
mov
outsb
and
adc
sbb
pop
sbb
rcrl
push
clc
and
daa
stc
fistpl
jl
xchg
inc
adc
add
or
sub
orl
push
xchg
and
pop
push
pop
fstps
xor
mov
and
and
pop
int
out
add
call
addb
dec
add
scas
addr16
clc
and
mov
ss
cltd
push
inc
xor
mov
repnz
outsb
pop
add
mov
add
ret
fwait
les
loopne,pt
inc
ds
mov
inc
cli
cltd
xchg
aaa
bnd
sahf
fmuls
mov
in
mov
sub
cmp
cmpsl
xor
imul
adc
xor
mov
and
mov
daa
repnz
fdivs
stc
jns
push
div
hlt
sbb
stos
mov
fsubr
push
and
cmp
repnz
mov
jne
rcr
jecxz
sub
sub
jb
in
or
xchg
mov
icebp
loop
inc
div
in
cmp
out
adc
mov
mov
std
mov
aas
xchg
adc
jl
add
pop
xlat
mov
xor
dec
sarb
inc
sub
sub
xchg
shlb
in
xchg
mov
mov
mov
cld
stos
or
pop
cmp
mov
or
mov
and
cmc
push
std
test
popf
shl
jmp
test
mov
rcrb
dec
sbb
and
dec
xor
lcall
adc
dec
cltd
and
xor
jnp
jb
mov
sbb
cmp
test
out
aam
xchg
lret
or
test
xchg
mov
addl
xchg
lahf
icebp
mov
lds
xor
movsl
orb
in
mov
gs
inc
les
cmp
imul
outsb
shlb
divb
insb
sub
jnp
fcomip
int3
xchg
movsb
sbb
ds
mov
and
cmp
ficompl
inc
xchg
test
mov
ja
dec
dec
nop
inc
adc
lds
xor
jp
cmp
stos
call
and
mov
sbb
shl
cmc
cmp
pop
pop
jnp
mov
jg
outsl
icebp
and
shll
rcl
mov
daa
inc
pop
pushf
gs
pushf
fbstp
sbb
sbb
jecxz
gs
aam
out
xor
loope
cmp
mov
adc
ljmp
cli
and
mov
and
mov
addr16
dec
mov
sub
lahf
stc
pop
xchg
lods
ret
mov
mov
and
add
cltd
pop
pop
outsl
in
lds
sub
movlps
movsb
sbb
and
mov
pop
push
xor
inc
loope
stos
push
sbb
xchg
xchg
push
or
dec
and
nop
jecxz
stc
add
xchg
cmpsl
cmpsl
fisubl
pop
add
cmp
stc
xor
mov
cmp
jg
inc
and
fimuls
mov
scas
push
imul
xchg
loop
fs
sub
adc
mov
cmc
andl
aam
mov
sahf
sahf
jbe
lds
and
into
push
dec
cli
lcall
mov
and
mov
push
arpl
iret
jb
adc
out
cltd
jl
push
aad
sub
dec
in
pop
and
popf
pop
fnstsw
adc
jmp
jmp
jbe
ret
cwtl
fnsave
leave
push
dec
jo
hlt
add
jle
mov
sbb
adc
cmp
dec
dec
and
test
or
ss
out
out
jae
push
mov
push
and
ljmp
pop
ja
cld
jge
and
mov
push
push
add
pushf
sti
inc
rcrb
mov
fildl
push
mov
jl
or
add
mov
push
inc
ljmp
mov
or
fisttps
call
pop
mov
data16
loop
dec
push
cmpsb
inc
sub
jp
jnp
push
fdecstp
mov
sub
aaa
add
xor
rcrl
inc
rclb
mov
pop
jp
das
cmp
push
ret
add
pop
push
or
repnz
sbb
mov
add
in
push
pushf
js
scas
sub
xchg
arpl
cmp
iret
fnstsw
ja
les
inc
sub
mov
arpl
cmpsl
stos
lods
jno
call
mov
testl
or
fistpl
xor
pop
sub
lcall
pop
mov
test
fldenv
dec
rcll
adc
mov
and
fmuls
pop
out
inc
sbb
lahf
xchg
or
lock
lret
pop
pusha
mov
adc
push
pusha
push
add
jmp
jecxz
jmp
out
shlb
mov
xor
jecxz
inc
pop
int3
mov
outsl
stos
xorps
testb
or
dec
and
and
cmp
mov
mov
mov
insl
pop
in
mov
and
dec
and
sub
addl
dec
sub
dec
push
js
push
aad
mov
push
daa
pusha
inc
test
mov
inc
out
adc
fcmovnbe
mov
les
add
insb
cld
jp
mov
aam
or
ret
sub
orl
xor
xor
rclb
mov
outsb
jns
add
xchg
cmp
or
ljmp
fsubrl
pop
out
in
inc
inc
nop
popf
pop
andb
mov
push
push
add
aam
shlb
push
movsb
cmc
testl
and
dec
jbe
inc
mov
xchg
es
lock
or
loope
or
dec
adc
dec
stos
icebp
movsb
or
push
sub
push
enter
roll
jnp
mov
mov
xor
sbb
push
int
sbb
insb
pusha
or
scas
jge
out
out
aaa
and
jge
ror
mov
int
inc
cmpl
xchg
lret
fimuls
loopne
push
out
imul
push
xor
adc
test
imul
pop
pop
adc
aam
add
jmp
mov
stos
mov
cli
cmp
imul
test
push
repz
adc
cmc
inc
idivb
fisubl
xor
inc
add
pop
loop
loope
pop
daa
xor
bound
add
mov
mov
xchg
jmp
cmp
mov
les
xchg
push
or
cmpl
cwtl
dec
mov
popa
dec
or
jecxz
fdivrp
mov
cltd
in
or
ljmp
jbe
sti
inc
popa
push
inc
cmpl
shl
mov
pop
out
stos
fucomp
push
sbb
vcvttps2dq
xchg
pushf
inc
pop
aam
daa
test
push
jg
aad
fs
cmp
into
xchg
lea
cmp
fucom
jno
inc
out
push
in
and
adc
movb
fadd
and
dec
xchg
mov
pusha
push
aas
ljmp
xor
fs
aad
mov
xchg
loopne
repnz
sahf
out
pop
xchg
outsl
push
xchg
add
xchg
popf
sbb
push
inc
repz
in
lock
xchg
insb
sub
movsb
outsl
adc
ljmp
cmp
pusha
sbb
pushl
xchg
cmc
scas
xchg
fwait
and
mov
js
pop
mov
ds
iret
cmp
inc
xchg
sahf
mov
dec
gs
mov
pop
pop
daa
inc
in
lcall
lret
inc
jge
pop
sbb
mov
repnz
pop
jl
xchg
lea
pop
pop
push
cmp
pop
mov
movsl
ss
in
mov
push
cmp
push
adc
sahf
fs
fidivrs
and
jns,pn
cwtl
pushf
dec
mov
dec
adc
mov
push
shrl
push
fsts
fnstcw
fs
push
cld
sbb
push
dec
and
lret
scas
outsb
or
repnz
cld
idivb
cmpb
adc
and
test
xchg
clc
movsl
or
and
push
xor
gs
mov
mov
ret
adc
mov
dec
test
mov
lcall
push
aaa
add
add
call
pop
sbb
mov
push
sbb
jl
pop
jecxz
xor
mov
push
leave
dec
out
lcall
stos
popf
orl
ret
dec
add
ja
jmp
add
and
add
fidivrs
mov
lods
mov
dec
jne
jo
jl
pushf
and
out
cmp
or
jbe
jmp
sub
fstp
imul
leave
or
lock
sbb
mov
into
dec
clc
lods
lahf
fiadds
roll
fs
shrb
push
ds
add
enter
out
cs
shll
in
ja
lret
pop
mov
dec
lea
ret
cmp
push
xchg
out
pop
push
mov
mov
jle
push
add
mov
mov
les
push
xchg
popf
jmp
mov
in
and
scas
or
pushf
jbe
je
loopne
js
pop
cmp
adc
xchg
mov
sub
out
mov
loope
sti
fildll
sahf
jmp
sahf
out
mov
cwtl
dec
xchg
clc
sub
imul
mov
subl
or
or
and
mov
aad
out
sub
fucom
fdivrs
xchg
test
insl
je
test
cmc
xchg
paddsw
addr16
rcrl
mov
push
pushf
mov
sub
scas
pop
pop
fs
mov
mov
test
mov
divb
hlt
lahf
xchg
or
mov
dec
in
int
jae
adc
cmp
negl
cwtl
test
jge
sar
jmp
push
or
adc
mov
and
push
aam
scas
outsb
cli
and
inc
ds
dec
pop
ret
mov
mov
movsl
or
mov
ficoml
cwtl
loope
jo
cli
andl
xor
mov
sbb
movsl
add
mov
mov
mov
xor
sti
icebp
mov
cltd
lods
and
sahf
shlb
lahf
xchg
pop
add
sbb
add
mov
xchg
add
mov
xor
je
sub
pop
fwait
incb
xor
push
mov
xor
icebp
out
orb
out
xchg
lcall
adc
or
clc
popa
es
mov
inc
jno
in
xor
xor
mov
jmp
pop
sbb
test
aaa
and
dec
lea
sub
xor
rcl
shlb
jmp
cmpl
lahf
fcmovnu
push
pop
lcall
lcall
mov
ss
imul
inc
push
pop
or
fwait
xor
cmp
adc
pop
sub
xlat
in
stos
pop
pushf
cmpsb
iret
mov
lock
aas
scas
lods
sub
mov
nop
jne
dec
scas
jbe
pop
int3
xor
cwtl
xor
jp
cmpsl
xor
fs
ja
movsb
fcmovne
xchg
xor
lods
or
pop
push
xor
loopne
loopne
insb
mov
nop
pop
push
cmp
lds
xchg
xchg
mull
loopne
add
arpl
gs
lods
ss
push
cmp
bound
sahf
les
cwtl
cmp
sbb
push
insb
cmp
aam
cmp
in
cmc
scas
int3
sbb
or
insb
aad
das
xor
mov
outsl
jb
out
int
and
mov
ud1
cmp
inc
lods
sub
adc
jecxz
movsl
push
fmul
dec
inc
xchg
repz
je
inc
dec
cmpsl
out
pop
adc
pop
mov
enter
ret
push
inc
jmp
in
jmp
dec
insl
ret
mov
aaa
pop
inc
ret
push
sbb
rorb
mov
jp
mov
or
cs
rol
push
mov
aad
fisttpll
loopne
jmp
loop
mov
push
test
adc
addb
sbb
ss
pop
pop
mov
xor
pop
add
out
push
repz
cmp
jge
add
pop
or
xor
xchg
mov
stc
xchg
mov
sbb
jo
mov
arpl
add
into
out
cmc
mov
inc
add
mov
scas
icebp
inc
xchg
jns
and
add
repnz
sub
das
rcl
jns
and
stos
xchg
lods
pushf
inc
add
cwtl
fisubs
mov
inc
into
xlat
shlb
int
int
filds
jns
int3
cld
sti
outsl
dec
loop
shlb
adc
sub
xchg
bound
xchg
into
dec
in
dec
imul
jno
ss
jae
fcompl
inc
leave
mov
fiadds
jl
adc
and
mov
inc
fmull
shrl
add
sub
xchg
or
cmc
mov
pop
push
pop
cltd
push
das
cld
addb
sahf
rcrb
push
gs
cmp
outsl
cmp
push
inc
scas
mov
lds
lcall
pop
xchg
je
cmp
xchg
jb
xchg
mov
sub
fistps
mov
sbb
flds
test
pop
mov
shrb
ja
push
lcall
cmpsl
or
jp
std
mov
mov
lcall
mov
movsl
cmp
or
or
mov
jmp
push
pop
enter
xchg
push
xchg
or
mov
stc
or
jmp
loop
and
mov
add
pop
jl
adc
jns
jp
ret
pmaxub
rclb
sbb
iret
outsl
and
jne
mov
addr16
ljmp
test
jb
xchg
shlb
fcompl
movsl
ss
lahf
andb
xchg
daa
jl
cltd
mov
adc
std
rclb
or
lods
mov
shll
movb
leave
testl
mov
jg
and
xchg
hlt
mov
xchg
push
dec
jp
std
mov
mov
push
fildl
insb
es
add
pop
jbe
add
jecxz
dec
push
test
sti
movsl
cmp
int
adc
xor
mov
adcl
inc
adc
fstpl
fidivrl
cmpl
cld
sub
inc
sbb
or
cmp
sub
rcl
dec
inc
sub
fldl2t
idivb
and
adc
push
xor
flds
mov
loopne
movsl
inc
push
outsl
cmc
lea
or
ret
adc
mov
inc
sbb
shll
cmpsb
popl
popf
enter
sbb
pop
xchg
inc
adc
xchg
xor
mov
into
inc
sbb
pop
movsb
scas
push
std
inc
test
add
jns
sahf
icebp
jnp
or
dec
jle
mov
push
loop
sub
out
faddl
insl
addr16
jg
pop
lret
in
and
test
push
sti
mov
out
sbb
xchg
pop
scas
lcall
cli
xor
pop
sbb
je
mov
xor
popf
add
jno
mov
mov
sbb
jae
add
mov
xor
mov
and
ret
pop
pop
ja
jne
jo
int
dec
outsl
fisubl
aaa
mov
lock
aaa
add
fsubp
rcl
mov
jbe
inc
adc
dec
mov
in
aas
sbb
cmpsl
subb
push
in
std
mov
sahf
fsubrs
push
xchg
loop
pop
push
and
mov
repz
push
adc
xor
or
rorb
shll
jbe
fmuls
push
jmp
jmp
mov
jmp
and
shll
shll
ss
mov
popf
mov
jmp
xchg
xchg
stos
mov
cmp
adc
lahf
or
cmpsb
ljmp
mov
out
lock
jmp
push
mov
aad
movb
rorl
les
inc
pop
xchg
jmp
or
sbb
mov
sbb
jmp
sbb
lcall
sbb
mov
jnp
jns
pop
lods
push
xor
mov
inc
pop
xchg
xchg
leave
cmp
addr16
pop
mov
dec
xor
call
sbb
imul
jmp
fiadds
sub
mov
sbb
mov
int3
imul
pop
pop
lea
xor
sub
mov
cmp
pop
aas
shll
pop
dec
xchg
mov
sbb
sub
daa
in
popa
sub
sub
inc
bound
jp
inc
bswap
stos
dec
dec
aaa
xchg
fwait
pop
adc
pop
in
scas
hlt
xchg
into
and
outsb
and
ret
and
adc
imul
xor
mov
dec
lret
rcrb
ss
mov
call
xor
mov
mov
push
xorb
mov
icebp
aam
adc
insl
jae
inc
dec
movsb
jne
inc
push
add
push
add
loop
mov
clc
aas
sti
add
adc
les
daa
in
popf
or
popa
clc
inc
xor
shr
push
jp
jp
inc
inc
divb
xor
ljmp
adc
inc
roll
decb
sub
repz
flds
rcl
or
stos
int3
iret
dec
xchg
cmp
loop
popf
fstpl
xchg
roll
pop
inc
xacquire
shll
cltd
sbb
push
mov
cmp
pop
imul
pop
mov
sbb
pop
push
pop
fmull
inc
fldz
push
ljmp
pusha
sub
mov
addb
aad
or
jb
rclb
lods
inc
adc
ss
push
push
fisubrs
xchg
call
mov
movsl
icebp
mov
adc
ret
mov
lret
icebp
ja
je
or
and
repz
faddl
cmc
lods
jbe
adc
cmp
jmp
in
vmwrite
aam
dec
out
in
and
ret
pop
stos
push
scas
sar
xor
lcall
sub
jo
lds
stos
fisubs
xchg
into
inc
sub
lret
sarb
ss
pusha
add
mov
cmp
popa
flds
xor
push
fdivs
xor
div
mov
jge
add
addr16
rcl
repz
mov
daa
or
aad
cmp
sarl
cmp
lods
lcall
jge
add
aam
mov
xor
xchg
mov
lock
and
pushf
imulb
iret
jmp
mov
push
lret
sti
lods
je
data16
dec
add
mov
int3
cltd
jle
pushf
push
sub
jp
cmp
stos
inc
jae
lret
sbb
sbb
out
outsb
bound
clc
push
jne
loopne
leave
sarb
mov
and
adc
adc
push
or
loop
das
mov
inc
sub
dec
adc
mov
test
sub
cmpsl
cmp
or
lea
dec
push
sti
insl
xchg
and
mov
push
pop
jns
jge
jb
pop
sbb
lods
push
insb
andb
sbb
enter
mulb
inc
sbb
jge
and
sbb
test
mov
stos
push
dec
mov
mov
jle
xorb
test
ss
lds
xchg
push
gs
or
scas
adc
sub
mov
insl
jnp
lret
push
sub
mov
jnp
popf
pop
fwait
push
and
cmp
rcrl
fs
adc
cmp
mov
clc
mov
push
mov
adc
adc
outsl
stos
bound
lea
cmp
xchg
xor
insb
xor
cmpsb
mov
jno
xor
pop
cmpsl
mov
inc
std
mov
push
pushl
outsl
dec
jns
out
scas
mov
das
mov
xchg
pop
test
clc
sarb
mov
mov
sti
mov
stc
mov
icebp
mov
cwtl
sbb
push
cmp
xchg
push
mov
cmp
xor
inc
out
in
inc
pop
sub
movsb
iret
mov
mov
andb
mov
mov
sub
mov
xor
pop
lods
popa
mov
loop
ja
aas
xchg
sti
std
shrb
jg
ljmp
iret
or
clc
pushf
scas
push
jp
pop
jne
add
in
shr
out
lods
int3
sbb
xlat
mov
dec
jle
js,pn
xchg
jg
sub
adc
sbbl
ret
iret
inc
jge
push
xchg
cltd
pop
dec
pushf
imull
xor
mov
mov
jno
adc
fsubs
mov
gs
test
lds
jg
pop
les
sub
std
jae
in
sarb
es
leave
fmulp
adcb
mov
pusha
inc
inc
js
inc
sahf
rorb
mov
outsb
pusha
lods
icebp
loopne
mov
ljmp
dec
stos
xchg
jp
fiaddl
xchg
add
adc
pop
out
mov
mov
sub
mov
pop
xor
adc
cmpsb
in
and
aas
pop
sbb
push
pop
inc
mul
fwait
or
sbb
and
jmp
out
das
adc
fldl
xchg
sub
ljmp
popl
xor
rorb
fstl
lret
aad
cld
je
add
ret
xchg
add
je
mov
rcl
push
dec
dec
test
pminsw
adc
loop
repz
lods
aaa
xor
xor
enterw
lea
sbb
aas
lahf
and
xchg
and
nop
daa
mov
mov
test
pop
loopne
out
out
stc
inc
inc
lods
push
mov
ss
cmp
popl
xchg
movsb
lds
sub
addl
mov
add
or
scas
sbb
cmp
cmp
enter
push
daa
inc
mov
xor
push
sub
xchg
loopne
test
inc
mov
popa
cmc
push
mov
jae
lods
and
pushf
out
jae
js
shrl
and
shrb
bound
push
arpl
push
shlb
inc
sub
inc
test
jbe
aaa
inc
pusha
insb
sub
pop
ljmp
push
jae
and
xlat
out
adc
in
aaa
jne,pn
subps
fs
es
and
push
ja
sbb
sahf
dec
jmp
ficomps
jne
jo
lret
jb
mov
lock
pop
cmp
fwait
xchg
inc
pop
pop
push
imull
dec
stos
ret
mov
mov
mov
test
dec
call
flds
es
aad
loope
lods
xchg
fwait
insl
cmc
ret
inc
pop
daa
jo
xor
mov
std
cmpsl
xchg
out
inc
jmp
test
push
xchg
rol
shr
add
aas
rorb
xchg
dec
adc
xchg
cmpsb
add
fwait
lds
xorl
iret
sub
cld
pushf
push
add
xor
cmp
movsb
xchg
hlt
outsl
stc
or
pop
fdivl
push
inc
push
lods
jb
and
andb
adc
fsubl
mov
sub
leave
push
jge
add
stos
out
into
imul
jl
je
pop
ljmp
xchg
sub
dec
int3
push
loopne
fucomp
psubsw
fadds
xchg
rcrl
add
jge
sbb
pushf
jne
int
sub
or
ss
frstor
mov
dec
loop
pop
jge
repz
iret
cs
fdivrl
aad
xchg
and
outsl
jge
repz
inc
push
lea
pop
pop
inc
cmp
add
dec
jecxz,pt
pop
pop
les
pop
popl
inc
mov
mov
clc
or
jo
dec
int
jns
repz
in
mov
ror
pop
loopne
je
sub
lock
cli
sbb
and
pop
push
test
cmp
fldl
out
xchg
adc
repnz
pop
xchg
xlat
jnp
hlt
mov
test
rolb
mov
sbb
dec
jp
mov
rol
add
xchg
adc
out
dec
lods
sub
xchg
add
xor
inc
ds
mov
mov
mov
inc
pop
jns
fdivrl
jp
cmp
push
nop
or
lahf
dec
ret
push
test
icebp
fmul
cmp
mov
mov
sbb
mov
push
fwait
outsb
inc
iret
clc
adcb
cltd
in
jecxz
movsl
adc
ret
testb
addr16
scas
xor
xor
xchg
lahf
sbb
and
jb
pop
cmpsl
lds
test
sarl
add
imul
mov
rclb
imul
push
sbbb
cmp
cwtl
repnz
std
xchg
sbb
pop
push
test
push
and
in
leave
and
add
sbb
fsubrs
fists
gs
out
rorb
rcr
cmp
and
fdivl
xchg
push
dec
jg
aam
negb
jp
jp
adc
mov
or
lds
pop
lods
mov
loopne
loop
iret
cmp
leave
cltd
push
or
sahf
push
sbb
popa
push
clc
mov
sub
and
add
ds
fbstp
mov
fstl
testb
pop
jecxz
jg
mov
mov
ljmp
stos
sub
mov
je
out
cmp
ljmp
dec
sbb
and
xchg
cmpsl
iret
jo
push
cmp
jno
push
pop
outsb
das
lahf
push
cmp
add
pop
mov
shll
inc
sbb
lret
lret
mov
outsb
mul
pop
cmc
mov
cs
shll
jge
pop
rcll
int
in
clc
arpl
cmpsb
jnp
jg
cli
shlb
insb
and
adc
movsb
dec
add
and
jno
lea
add
fdivrs
mov
mov
scas
sbb
ss
mov
aaa
adc
mov
push
test
push
add
or
jns
fwait
mov
push
sub
mov
popa
push
rcrb
lcall
pop
add
jns
shll
mov
pop
das
dec
int
xchg
or
mov
movsb
ficoml
mov
cmp
mov
adc
scas
add
dec
scas
jae
dec
dec
xchg
or
scas
and
push
adc
jne
mov
mov
cmp
xchg
mov
add
mov
mov
fistpl
int
xor
rcr
ret
movsl
fildll
add
adc
sub
loope
sahf
fsts
inc
and
jp
daa
xor
outsb
fcomps
jge
pop
adc
decb
sbb
into
cs
mov
xor
sbb
cmp
xchg
and
or
es
add
rolb
outsb
inc
mov
or
pop
xor
shrl
fildll
xor
xor
adc
movsb
pop
out
inc
ret
cmpsl
scas
jg
and
push
loop
sbb
mov
pop
ljmp
fisttpll
mov
subb
xchg
push
ret
push
in
add
pusha
jns
hlt
sbb
adc
and
sahf
lret
je
pop
dec
lret
or
cmp
and
out
inc
cmpsb
addr16
enter
sti
inc
push
xor
xor
shll
xor
daa
inc
fldl
ret
je
cs
stc
adc
cmp
cwtl
cmp
push
add
int3
in
push
test
dec
add
cmpl
sbbl
push
jmp
jo
inc
sbb
lods
and
add
popa
test
nop
dec
addr16
test
adc
xchg
and
rcrb
mov
pop
imul
repnz
std
shlb
das
and
ret
jl
scas
add
icebp
aad
sub
pushf
fwait
jl
nop
or
mov
jp
xchg
sbb
mov
inc
scas
cmp
jo
in
fisttpl
mov
fcomps
push
xchg
daa
jbe
dec
jae
mov
ret
rorb
xchg
and
pop
push
out
inc
pusha
push
inc
jb
lcall
into
aam
add
insb
daa
scas
hlt
jge
rep
lahf
pop
mov
outsb
sbb
out
inc
insl
sti
sub
pavgb
mov
cld
pop
push
inc
adcb
sub
sub
mov
insl
push
adc
and
inc
les
adc
es
lods
pusha
test
mov
ror
mov
jae
fildl
lret
or
lahf
jl
aaa
lods
xor
cmp
inc
adc
sub
mov
test
push
mov
cli
in
ja
sub
fisttps
xor
fs
jnp
in
test
mov
xor
lret
out
fdivr
mov
test
push
fs
inc
into
push
inc
fisubl
cld
add
cmc
jns
or
jge
push
add
fmull
das
inc
push
sub
aas
and
imul
imul
xchg
mov
test
rol
ja
xchg
push
pop
push
arpl
imul
outsl
rolb
loopne
pushf
icebp
shr
push
mov
mov
fsubr
test
pop
pop
pushf
mov
scas
outsb
inc
arpl
mov
shr
xchg
pop
fdivl
xor
sti
jmp
notb
stos
jle
push
subb
popf
adc
sub
addl
xlat
in
stos
xor
inc
mov
loop
inc
pushf
xchg
ss
bound
or
lds
je
adc
scas
outsl
adc
push
pop
jnp
add
or
adc
int
jnp
stc
pop
mov
or
mov
cmp
ss
push
lock
mov
mov
inc
imul
outsl
out
je
dec
popl
in
xchg
adc
sub
adc
cmc
push
or
loopne
ljmp
cvtps2pd
test
xchg
das
xchg
lods
ljmp
cmc
les
ret
xchg
mov
outsb
ljmp
test
repz
xchg
ljmp
out
fimull
mov
testb
pushl
shll
xor
jae
ficomps
scas
outsb
cmp
or
dec
arpl
adc
shrb
inc
mov
jnp
int3
pop
out
fldt
cmpsb
mov
adc
test
inc
dec
push
rorl
dec
push
sbb
pop
sar
add
outsl
cmpsb
test
mov
push
pop
sub
add
testb
data16
ret
cmp
sbbb
out
xchg
mov
jp
pop
ljmp
jl
adc
subb
loop
xor
pop
push
push
in
test
insb
push
ljmp
iret
movhps
fdivp
pop
inc
mov
cmp
out
dec
xchg
fisubrs
or
out
aad
xor
xchg
fwait
pop
jmp
push
mov
pop
pop
pop
test
jge
mov
lcall
js
fstpl
int3
add
and
or
aad
cwtl
push
movsb
scas
push
ret
lret
fidivrs
jge
xorb
pop
jns
mov
dec
fmuls
xchg
hlt
sub
sbb
dec
push
sub
nop
dec
es
pop
or
outsb
sbbl
adc
lods
pop
lods
shlb
dec
mov
mov
jmp
dec
je
jb
in
pop
sbb
xor
cmpsl
add
and
mov
ds
pusha
pop
fildll
ret
ss
mov
scas
xchg
pop
push
adc
int3
push
add
sub
popa
dec
andl
push
nop
out
cmp
mov
leave
mov
test
es
into
into
loop
pop
sarb
mov
les
mov
and
je
shlb
adc
jno
pushf
sub
fdiv
push
dec
sbb
imul
outsb
test
enter
and
das
dec
mov
lcall
add
push
and
jl
push
pusha
add
adc
enter
sbb
daa
imul
mov
mov
dec
ss
movsb
add
fcmove
jo
adc
aad
jle
push
cltd
cmp
mov
rcrb
and
mov
add
test
pop
scas
dec
pushf
sar
hlt
lret
imul
out
inc
fwait
push
adc
or
sbb
mov
dec
lcall
or
cli
inc
add
outsl
mov
into
lea
add
in
xchg
rcl
int3
stos
jo
mov
add
roll
fdivs
ja
test
cmp
xchg
les
jnp
mov
sub
cmp
sbb
inc
jle
pop
sub
ja
dec
or
dec
dec
rol
rcll
faddp
rclb
mov
out
aaa
jbe
into
mov
jl
and
sahf
dec
dec
mov
adc
xchg
arpl
add
fs
adc
in
add
lahf
lea
mov
and
in
pop
jmp
loopne
cwtl
cmp
sub
frstor
xor
mov
sbb
les
movsb
rolb
lods
ja
in
mov
push
push
dec
ret
icebp
push
add
rcrb
pop
ja
jge
add
and
dec
sbb
mov
pop
jp
xchg
xor
rcll
mov
mov
cmp
sarb
arpl
lret
je
xorb
and
add
lahf
in
xorb
outsb
fidivs
popf
into
imul
mov
cmp
inc
cmpsl
lea
int3
pop
imul
and
and
lahf
mov
inc
inc
test
lock
fucomip
mov
inc
ret
je
mov
mov
lods
dec
push
out
repnz
insl
dec
call
fsubs
jo
das
cli
clc
outsb
jge
lock
rcr
sarl
test
leave
adc
out
add
adc
sub
out
inc
int3
jecxz
pop
pop
push
cmp
inc
mov
push
daa
sbb
sbb
pop
adc
rorl
in
sbb
outsl
inc
js
subl
sub
inc
adc
lcallw
push
jo
mov
stos
ret
dec
adc
xor
sbb
cs
xor
xlat
cwtl
mov
lock
outsb
add
std
mov
xchg
mov
sub
mov
or
xchg
jb
dec
pop
inc
lods
ja
call
sarl
cli
xchg
sub
push
scas
repz
dec
add
aaa
rolb
add
sub
cmp
mov
xchg
xor
and
jecxz
inc
xchg
pushf
movsl
aad
push
mov
dec
ja
jge
stc
jbe
enter
sub
cmpsb
pop
stos
inc
lahf
ret
push
cwtl
jmp
ja
es
in
inc
inc
push
push
das
sahf
jmp
fldl
mov
push
roll
mov
push
cmp
cmp
cmc
xchg
lds
imul
push
dec
or
nop
bound
fdiv
pop
sbb
int
mov
insb
popa
push
pop
test
pop
bound
movsl
fwait
xor
xor
pop
outsb
stos
imul
pusha
notb
in
lea
push
or
push
fistl
aas
mov
pop
repz
push
adc
adc
add
or
out
sbb
jp
cmp
pop
insb
test
xor
in
jb
in
insb
pop
sub
jbe
xchg
aaa
clc
shr
mov
cltd
outsb
gs
sub
adc
and
dec
test
jb
xchg
inc
repnz
cmp
push
cmp
push
mov
aaa
mov
add
int3
sbb
mov
into
cmp
clc
mov
mov
arpl
pushf
fldl
add
into
jne
subb
and
xchg
cwtl
addb
ffreep
mov
jp
test
mov
adc
xchg
jb
sub
mov
xchg
push
push
lea
dec
push
add
repnz
or
flds
jbe
adc
pop
push
cmp
clc
inc
adc
push
push
ret
inc
popa
in
iret
sbb
cs
aam
outsb
ja
scas
and
and
jg
ffree
pushf
cli
push
mov
out
pop
dec
mov
popa
rclb
sahf
je
test
in
mov
mov
or
xchg
xor
cmp
in
out
sbb
idivl
cmp
pop
mov
into
sub
lods
cld
rol
pop
xlat
shlb
xor
adcb
push
cmp
push
jge
sub
sahf
into
xchg
xchg
movsb
js
das
xchg
push
cmpsl
add
mov
push
jns
shlb
jae
mov
adc
repnz
jg
mov
mov
sbb
and
cmp
andl
fmul
jmp
dec
push
mov
shlb
sub
in
cmp
jae
jae
add
jae
aaa
xorb
pop
addr16
mov
nop
cli
dec
mov
loop
in
dec
movsl
rolb
inc
sbb
jbe
inc
add
lods
loop
cltd
or
or
xlat
or
testb
sub
inc
cmp
xlat
in
sbb
xchg
stos
cmp
repnz
popa
dec
xor
dec
test
test
pop
jae
cmpl
add
xor
inc
cmpl
shrb
rclb
cmpsl
iret
adc
sub
lcall
aas
cwtl
add
sti
fcomps
adc
iret
jmp
pop
xchg
cmp
inc
inc
jns
jge
or
pop
xor
mov
sub
mov
jae
jae
fwait
pop
pop
loop
add
lret
cmp
sub
cmc
pop
cld
dec
jecxz
bound
mov
inc
daa
pushf
out
out
imul
jg
jg
adc
xchg
add
sbb
mov
scas
xchg
nop
fucomi
xor
cmp
xor
xchg
clc
push
jmp
jno
add
add
sti
push
dec
out
xor
enter
inc
pushf
pop
aad
sub
lock
test
mov
int3
adc
aad
sahf
in
jno
cmpsl
bound
pop
mov
add
sbbl
mov
enter
sub
out
push
cmpsb
add
add
adc
xlat
mov
push
xor
test
enter
add
insl
mov
cwtl
fs
and
jnp
repz
imul
sarl
xor
cmpl
ret
sub
adc
repnz
rclw
jns
mov
notl
lods
filds
test
repnz
mov
jno
orb
popa
push
xor
pop
bound
mov
cwtl
ret
fstps
hlt
xchg
inc
and
mov
inc
push
sbb
jbe
test
mov
mov
mov
or
sbb
cli
adc
sub
xchg
mov
not
pop
sbb
or
int3
out
pushf
mov
push
lods
dec
sti
sbb
ds
test
mov
mov
adc
dec
push
test
stos
or
add
push
int3
cltd
dec
lret
mov
das
xor
jmp
dec
hlt
cmp
pop
jmp
lock
out
pop
inc
xchg
movsb
mov
adc
pop
cltd
sahf
dec
pop
jnp
mov
dec
adc
call
adc
rcrl
inc
dec
cld
cltd
sahf
mov
mov
xor
into
leave
pop
or
in
outsb
pop
mov
iret
pop
in
mov
xchg
adc
test
and
and
cmp
leave
shl
push
enter
lret
test
repnz
mov
fdivl
xor
insl
jmp
xor
lahf
and
xor
rclb
or
jb
sbb
sbb
sub
push
test
xor
jbe
aas
pop
push
pop
adc
repnz
mov
dec
fimuls
stc
and
push
int3
push
into
repz
mov
mov
jle
push
mov
cs
push
push
push
mov
xor
arpl
fstps
dec
inc
lea
dec
add
dec
mov
lea
sbb
mov
pop
ret
add
and
fs
cld
ja
jecxz
and
or
sub
scas
cli
mov
mov
jle
addr16
imul
xor
push
testl
xor
mov
xor
add
subl
inc
arpl
repz
arpl
push
loop
push
pop
or
pop
je
push
add
and
mov
inc
lods
xor
sbb
mov
notb
mov
xchg
repnz
or
iret
fldlg2
add
loope
push
incb
out
or
je
rcrb
pop
test
pop
ret
add
in
ja
stc
in
xor
ds
mov
cltd
fsubrs
push
pop
xchg
movsb
jo
rcll
mov
jb
xchg
movsl
out
and
iret
mov
loop
dec
xor
pop
dec
aas
stos
xchg
in
aaa
cmc
jp
into
xchg
xchg
pop
out
add
stos
mov
jb
enter
pop
stc
les
in
icebp
into
add
pop
out
push
sbb
aad
add
or
inc
adc
add
adc
rolb
cmpsb
repz
lea
shl
arpl
arpl
xor
icebp
inc
mov
daa
insb
sub
das
push
notl
sub
push
sbb
int
ss
incb
or
outsl
dec
xchg
addr16
popf
cmpsl
pop
add
inc
cmp
repnz
fbld
icebp
and
adc
ss
sub
loope
xlat
pop
sub
push
dec
fsubs
pop
bnd
jp
les
jbe
add
aaa
sbb
scas
into
xchg
inc
or
ds
add
dec
inc
xor
adc
sub
pushf
outsl
dec
push
js
std
mov
lret
repnz
or
mov
push
into
jge
std
out
fisubs
and
xlat
add
lret
insb
mov
or
loope
iret
sub
insb
jno
pop
pop
add
and
lcall
mov
pop
dec
loopne
inc
sub
pop
cmp
inc
out
xchg
lcall
les
mov
test
sbb
mov
shlb
aas
aad
lahf
mov
push
cmp
iret
js
pop
shrl
lods
cmpsl
fldt
mov
push
mov
in
mov
shlb
inc
xchg
call
push
adc
pop
inc
xchg
cltd
popf
sub
push
and
movsl
and
in
mov
repnz
xlat
adc
cltd
dec
stos
pop
pushfw
fsubrs
cmp
outsl
lahf
push
movsb
jno
mov
jmp
aam
mov
fnsave
xchg
rorb
inc
shll
pop
dec
cmp
out
mov
sarb
mov
int
addr16
out
mov
mov
mov
jns
adc
mov
stc
adc
mov
cmp
dec
ficoml
adc
adc
dec
push
mov
add
popf
pop
add
jp
jbe
outsl
jg
xor
push
mov
mov
inc
lock
add
mov
popl
xchg
add
xchg
jecxz
lods
ds
loop
jmp
insl
lods
adc
mov
outsb
fdivl
outsl
aad
int
loopne
mov
imul
and
jno
pop
shlb
sbb
in
gs
pop
mov
xor
jne
pop
cmpb
rcrl
jno
push
mov
sub
push
dec
loop
xchg
lahf
jns
stos
push
inc
mov
cmp
pushf
aam
nop
mov
loop
repnz
stc
cmp
enter
and
out
sub
jle
sub
mov
push
xor
fsubr
and
iret
inc
pop
sub
or
pop
adc
xchg
lahf
in
mov
fmuls
or
sbb
jmp
pop
sbb
loope
or
nop
sbb
sahf
stos
xor
mov
out
enter
inc
add
xor
sub
xchg
loopne
push
pop
sub
push
sub
shll
pop
cmp
popa
inc
push
rcrl
fdivrs
xchg
arpl
dec
roll
iret
mov
inc
lret
cwtl
loop
add
push
dec
cmp
sbb
inc
add
mov
xor
dec
xor
das
fmulp
ss
xchg
sbb
xchg
and
ds
pop
jp
add
or
or
dec
sub
push
xlat
mov
iret
pusha
cmp
sbb
and
push
xlat
mov
bound
jo
movb
cmp
icebp
xchg
aam
sbb
movsb
push
xchg
and
test
cs
push
mov
inc
popf
and
loope
call
adc
ret
xor
jno
pop
fwait
cmp
mov
aas
das
in
loopne
loop
push
cmp
sub
bound
jp
int
xor
push
dec
mov
movsb
add
js
orl
sub
lock
imull
lea
stc
into
sahf
shrb
mov
xchg
inc
hlt
dec
pop
imul
xor
xorl
dec
aas
push
add
cmp
mov
js
sub
xor
adcb
xorb
fisttps
jmp
adc
sahf
adc
aad
sub
mov
arpl
bound
mov
test
xchg
cmp
adc
and
sbb
adc
and
icebp
xchg
loop
pop
mov
jg
fbld
adc
out
inc
outsb
repz
insb
ss
xchg
pop
aaa
in
into
pop
data16
push
dec
jbe
mov
scas
mov
leave
mov
rcrl
mov
in
pop
mov
jnp
je
pushf
aas
cmp
rcrb
adc
inc
and
jmp
fbstp
adc
xchg
xor
shll
jge
in
dec
loopne
les
aaa
sbb
push
push
mov
cmp
mov
movsb
jge
fnsave
sbb
push
sbb
lcall
in
arpl
adc
push
int3
addr16
rcll
int
mov
xchg
push
std
pop
out
or
inc
dec
ret
pop
rolb
add
shrl
xlat
push
lcall
add
pop
push
pop
inc
leave
dec
int
loope
pop
loopne
xchg
in
rcrb
loopne
lret
mov
incl
adc
sbb
andb
repz
daa
mov
repnz
fdivr
and
mov
jnp
mov
sbb
dec
pop
add
sbb
mov
xor
mov
mov
jg
aaa
insb
ret
lret
xor
lea
xchg
dec
fiaddl
and
out
fisubrl
xlat
inc
push
fisubl
mov
cmp
push
adc
jnp
loop
sub
fisttpll
fmull
icebp
stos
jb
clc
jae
mov
add
jmp
lds
shrb
cmp
repnz
pop
mov
adc
mov
repz
lret
xor
stos
pop
dec
xchg
add
pop
int
jmp
jo
push
int3
fimull
inc
jl
sub
ds
jecxz
jne
cmp
fisubrl
cmp
jp
add
sbb
xchg
push
cld
jno
jb
pusha
loopne
mov
mull
cmp
add
ljmp
aad
lahf
fiadds
mov
mov
adc
xor
jp
cmp
lds
inc
pop
lahf
sub
js
das
sub
orb
pop
xchg
inc
int3
sbb
push
hlt
sbb
outsl
xchg
jp
jnp
mov
fidivrs
add
xor
mov
jne
lahf
sbb
pop
ret
or
in
sub
pop
daa
adc
mov
fstps
inc
sub
xor
fcomi
and
xorb
imul
rcll
mov
jo
mov
push
andb
xor
fisubl
push
pop
rorb
mov
mov
mov
pop
adcb
dec
sub
dec
cmpsb
lods
les
in
mov
stos
inc
xchg
sbbb
fstpl
sbb
subb
shll
loopne
cmc
je
sub
dec
outsl
pop
pop
xchg
shlb
jmp
lret
imul
xchg
lea
cmp
sbb
icebp
push
push
adc
sbb
pop
pop
aaa
mov
push
lods
xchg
fistps
fimuls
and
icebp
inc
pop
stc
pop
mov
rol
cmc
jae
dec
cwtl
repz
dec
xor
inc
insl
shlb
lock
ror
cmp
stc
fwait
cltd
xchg
movsl
outsl
gs
jmp
and
xchg
mov
add
daa
jmp
dec
out
pop
iret
shrb
clc
pusha
sub
mov
inc
fs
leave
in
and
inc
push
jg
mov
pusha
rorb
out
mov
stos
into
aad
neg
outsb
pop
cmp
xor
lret
rorl
aad
sub
jge
push
clc
mov
pop
mov
movsb
fstps
lock
scas
xchg
int
add
shrl
incl
mov
sti
testb
xor
push
addr16
push
std
andl
dec
shl
lea
add
jno
xor
inc
lret
enter
sbb
sub
push
xchg
ds
sub
retw
push
int3
cmpsl
cmp
mov
insb
jb
movsb
push
popa
sub
and
fs
and
push
out
xor
or
fistl
push
in
sahf
repz
xor
dec
jb
imul
aaa
inc
sbb
shl
insb
mov
lods
and
stc
lea
xchg
std
test
cmp
xchg
cli
dec
push
insl
pop
in
fcomi
inc
fsts
outsl
sbb
sar
jmp
loopne
xchg
cmpsl
mov
pop
jae
push
imul
dec
xor
cmp
cmp
int3
ljmp
and
mov
pop
dec
cmp
pop
mov
stc
notl
xchg
xorb
sub
test
inc
xchg
icebp
fwait
cmp
pop
movsl
mov
cld
insl
jnp
dec
leave
inc
or
or
xor
repz
or
xor
push
pop
pusha
hlt
lods
int3
inc
and
stc
and
in
cmp
and
imul
pop
cmp
jl
test
xor
shr
rcrb
xchg
fsubs
xchg
add
int
fidivrs
popf
jecxz
push
repz
dec
xchg
push
call
add
clc
arpl
push
pop
lret
jne
sub
push
in
dec
jl
xchg
lods
mov
push
xor
or
shll
or
and
int
sti
pop
subb
stos
out
add
fcoml
xor
xchg
std
adc
in
mov
rcll
int
push
mov
ficomps
and
test
in
aas
cmpsb
lea
scas
mov
dec
sbb
dec
sbb
jbe
arpl
mov
xchg
pop
jbe
aad
bound
xchg
push
out
push
orl
fidivl
and
or
rorl
mov
inc
pusha
adc
jne
add
nop
mov
push
mov
decb
pop
and
mov
je
cmp
outsl
jbe
inc
push
sub
jmp
mov
and
cmp
xor
outsl
add
ja
adc
mov
jo
movsl
cltd
sub
testl
aaa
add
adcl
fsubs
shlb
loopne
or
lret
leave
xchg
sbb
es
mov
xchg
bound
mov
cmpb
imul
jg
lock
lret
add
xchg
mov
adc
mov
ss
lods
out
enter
xor
addl
jns
shr
les
inc
push
xor
mov
clc
jae
repnz
sbb
or
in
std
fs
mov
hlt
inc
aam
pop
data16
in
pop
add
into
cs
adc
jl
hlt
fistpll
xchg
sahf
mov
push
bound
notb
mov
mov
jle
mull
cli
adc
repnz
addr16
jbe
jmp
mov
cmpsb
ja
jg
mov
sbb
jno
jae
adc
add
popa
and
daa
and
add
push
or
xchg
and
mov
fstp
pop
cli
inc
cmpsl
stc
push
jnp
fwait
sub
xor
out
dec
lcall
mov
mov
fcoml
xor
mov
cmc
scas
cmp
pop
sub
test
insb
pop
xchg
xor
and
jne
mov
in
jmp
pop
ret
aaa
xchg
pop
insb
pop
out
xchg
popf
fcom
mov
mov
xor
loope
test
aad
insb
sub
inc
aaa
arpl
xor
iret
mov
xor
jecxz
cmp
inc
sahf
out
xor
push
daa
xchg
pushf
xchg
mov
cwtl
push
stos
jmp
xor
add
inc
push
sub
xor
push
jo
sub
push
rcrb
push
adc
enter
js
mov
repnz
adc
hlt
rclb
push
mov
stos
xor
mov
add
xchg
jg
mov
shlb
loope
sub
mov
mov
arpl
pop
jge
test
cltd
mov
int3
int
fsubs
leave
or
fcomps
loopne
jne
sbb
cmpsl
xor
xchg
icebp
lret
adc
sbb
out
movl
jns
sbb
pop
scas
out
mov
pop
pop
lret
pop
stos
mov
cmp
out
lret
out
mov
or
mov
push
cmp
xchg
lcall
mov
lds
cli
push
movsb
scas
repz
lock
push
sbb
jecxz
adc
xchg
pop
repnz
and
mov
push
push
scas
inc
mov
cld
mov
xchg
jb
inc
aas
mov
ljmp
test
mov
jno
mov
leave
mov
mov
xchg
mov
icebp
adc
popa
xchg
shrl
mov
movsb
inc
hlt
int3
and
in
sti
imul
pop
sti
int
mov
xchg
insl
lahf
mov
pop
out
sub
loope
dec
jmp
xchg
ss
xor
push
xchg
jno
testl
add
fidivrs
jne
out
fstpt
cs
ret
mov
fs
scas
stc
add
push
jbe
in
sbb
popl
inc
sbb
ret
lock
xchg
pop
push
gs
xorps
out
popl
mov
jns
mov
mov
inc
out
dec
xchg
or
jp
in
gs
mov
dec
fbld
imull
fiaddl
rol
call
insl
cmp
or
imul
mov
ret
mov
sbb
insl
push
inc
jo
clc
movsb
push
pop
dec
push
bound
dec
lahf
fsubs
icebp
adc
hlt
push
in
das
dec
push
icebp
fdivl
add
in
out
push
mov
mov
and
dec
movsl
pop
out
popl
cmpsb
jg
push
and
mov
or
pop
mov
incl
imul
lock
es
add
insl
arpl
jae
push
rorl
movsb
das
mov
jmp
jmp
js
push
lods
jp
fsubrs
rorb
mov
hlt
arpl
rorl
faddp
jns
cmp
std
es
std
mov
push
inc
shll
ss
nop
jmp
fsts
sarl
pop
xlat
out
mov
pop
add
ds
mull
pop
adc
ret
pop
jo
mov
das
or
push
xchg
data16
mov
insb
sub
adc
in
mov
and
out
frstpm(287
dec
jb
enter
adc
pop
mov
sub
cli
push
insl
mov
push
jle
iret
test
les
dec
lods
mov
insl
lret
mov
cli
out
lds
rcrl
in
es
xlat
cmc
call
mov
imul
jle
lods
mov
xor
add
arpl
cmp
mov
inc
inc
pop
insl
aas
sbb
inc
ret
inc
or
mov
ljmp
lahf
jno
movsb
mov
ja
out
sbb
sbb
add
rclb
js
push
cwtl
push
cli
pop
adc
loope
jo
stos
or
std
mov
outsl
push
add
in
outsl
xchg
jno
xor
mov
rolb
sbb
fidivrs
repz
adc
or
cmp
xchg
and
add
xchg
and
sti
mov
dec
and
enter
pusha
xchg
bound
xor
push
push
xorb
add
jge
push
js
in
sti
mov
enter
mov
jbe
dec
or
lcall
sbb
lds
xchg
or
push
mov
sbb
lret
mov
iret
lahf
pop
mov
jge
add
dec
xchg
into
sarb
popl
bound
lahf
or
call
test
cmp
mulb
sub
sarb
jp
ret
popa
dec
lret
push
and
sub
rcrl
or
out
das
imulb
and
out
inc
iret
mov
scas
inc
lods
push
xchg
and
les
lret
je
and
scas
push
jne,pt
inc
mov
cmp
cmc
mov
xchg
sarl
rcrb
xor
xchg
pop
inc
es
push
mov
cmpsl
dec
add
jno
mov
jo
or
pop
add
adc
divb
and
jmp
adc
lods
fwait
stc
ja
fcmovb
in
imul
jl
data16
lcall
incb
decb
adc
push
cmpsl
mov
aas
mov
repz
ss
rol
addr16
mov
adc
pop
xchg
sbb
xor
insb
sub
mov
aad
inc
xor
outsl
xor
push
ds
std
ret
fs
mov
lock
addr16
stos
add
xor
jb
jns
cltd
loope
mov
shlb
xchg
xor
dec
imul
push
sbb
js
xor
test
dec
cld
dec
fwait
jbe
outsb
mov
shlb
mov
dec
add
xchg
aam
test
ret
pop
aas
xchg
mov
aad
inc
jmp
dec
jl
add
daa
shll
sbb
test
push
das
jbe
jmp
jae
insb
pop
mov
pop
pusha
cld
cmpsl
lods
dec
xchg
mov
scas
pop
add
inc
stc
xchg
lret
adc
mov
ret
repnz
jmp
rolb
adc
and
push
pop
push
cmp
sub
mov
mov
pop
pop
fistl
add
adc
mov
push
icebp
lods
sti
cli
mov
mull
roll
lret
in
insb
pop
imul
xchg
sub
dec
les
adc
xlat
xor
leave
sbb
sub
in
lock
cs
int3
fldcw
aad
mov
pop
gs
mov
jmp
int
lcall
dec
sete
inc
jp
sbb
aaa
das
adc
jecxz
sub
mov
jle
cmp
inc
jg
pop
pop
xchg
repz
je
int
std
mov
xchg
jnp
xor
fstl
aaa
and
xor
aaa
fimuls
fdivs
add
out
fsubs
mov
ret
sbb
loope
xor
mov
adc
sbb
push
mov
or
ffree
adc
push
mov
sbb
loopne
std
or
inc
in
sub
cmp
in
addl
adc
push
loop
adc
repnz
inc
xchg
inc
inc
movsl
xchg
cmp
mov
fisubs
mov
push
adc
and
push
iret
leave
ja
or
pushw
xchg
test
dec
sub
xlat
pop
fistl
dec
xchg
and
ljmp
inc
xor
frstor
sbb
jecxz
cmp
inc
lret
repz
push
imul
lods
test
mov
fsubrl
movsl
movsl
jae
in
imul
cmpsb
mov
xor
jbe
jbe
pop
stos
inc
add
loopne
jae
out
sbb
mov
mov
aad
pop
adc
dec
ja
in
aas
adc
pop
cs
sub
aaa
pop
sub
cmpsl
sub
jmp
and
sahf
sub
jno
sahf
data16
outsb
mov
xchg
clc
roll
ds
inc
mov
popf
and
sbb
mull
jecxz
push
or
bnd
mov
lds
rol
dec
ret
aam
shll
cs
pop
mov
arpl
repnz
dec
jne
cld
push
rorl
jle
sub
mov
call
sarb
push
xor
jl
pushf
push
bound
in
push
icebp
in
cltd
cmp
out
leave
rcrl
fldl
add
or
lret
push
daa
adc
inc
jecxz
jno
fwait
es
gs
jne
mov
nop
xlat
cld
mov
jne
dec
mov
xchg
aas
push
fiaddl
adc
xchg
dec
call
in
into
push
add
adcl
mov
clc
push
add
cmp
sub
cmp
inc
xchg
sbb
xchg
popa
cmp
push
inc
pop
test
xor
and
push
loop
adc
mov
fcmovnbe
adc
jae
adc
lret
imul
call
mov
pushf
adc
cmp
or
iret
add
scas
incb
out
lods
les
jnp
jl
lret
sub
jmp
popa
dec
inc
gs
clc
mov
mov
xchg
je
adc
dec
mov
aad
outsb
dec
cs
cmp
insb
fisttps
xor
das
push
push
pop
mov
push
shlb
add
xchg
adc
imul
xlat
sbb
sub
and
out
xchg
inc
sbb
repz
inc
jne
fcoml
add
ret
lock
add
div
add
out
push
adc
iret
mov
in
mov
js
pop
les
add
jnp
aam
xchg
mov
cmpsb
push
rcl
mov
pop
in
aam
outsb
jb
add
test
or
pop
adc
repnz
cs
addr16
and
add
aad
dec
int
shlb
xchg
mov
iret
sub
jne
inc
mov
cli
rclb
incl
fstpl
cmpl
jl
sahf
inc
jbe
push
push
xchg
xchg
mov
in
int
xchg
ds
and
mov
jae
sub
inc
sarb
or
push
jbe
hlt
xchg
imul
push
lock
stos
cmp
xor
inc
push
clc
insl
push
cmpsl
negb
cmpsb
inc
and
dec
leave
test
cmp
lods
lock
std
hlt
popf
subl
sahf
insb
sbb
pop
lods
push
or
popa
xor
setl
outsb
incl
inc
dec
cmc
cvtpi2ps
out
cli
mov
xor
adc
cmpsl
mov
movl
in
dec
inc
lock
aaa
mov
fistpll
add
int
sbb
filds
stc
xchg
ljmp
sahf
test
into
cmp
adc
fldt
and
push
push
adc
cmc
mov
call
push
mov
adc
pushf
adc
es
jbe
push
inc
pop
and
aad
push
or
jae
pop
ror
flds
rorl
jne
test
stc
dec
jne
fsubrl
out
hlt
lods
push
fisubs
adcl
cld
dec
testb
cmp
push
cmp
jo
mov
aaa
loope
jle
xchg
loopne
push
mov
repnz
nop
xchg
xchg
test
sbb
dec
lret
mov
adc
push
je
jecxz
das
push
std
jge
push
or
aad
sahf
pop
mov
sahf
out
adc
or
and
cmc
aam
dec
loop
jmp
jne
sbb
jecxz
ja
pop
out
mov
ds
movsl
ss
xchg
lahf
bound
out
sahf
sub
cmp
or
pushf
pop
mov
cmp
imul
repnz
lcall
and
jb
sub
xchg
add
mov
ret
sbb
stc
jmp
enter
cmp
jmp
jmp
cmp
jp
and
dec
or
and
push
lods
adc
dec
cli
lods
pop
dec
fucomi
and
inc
mov
mov
pop
mov
jne
sahf
push
push
lret
cmp
sbb
enter
pop
cmp
in
dec
mov
cmp
sti
imul
inc
and
dec
inc
add
sub
jo
push
stc
lahf
fs
mov
and
push
scas
sti
sbbl
loope
push
bound
mov
xor
or
cmpsl
cld
outsl
push
sub
repz
sub
sbb
mov
fmul
inc
add
imul
inc
ja
outsl
rorb
stc
and
xchg
shlb
push
xchg
imul
fcmovnb
cli
xchg
in
movsl
pop
ret
mov
ja
mov
ret
fs
jo
insl
mov
out
and
pushf
out
pop
clc
or
js
aas
leave
xchg
arpl
sub
in
pushl
dec
push
jb
pop
daa
stc
cmpsb
call
cmp
aaa
fs
sub
inc
outsl
shl
shlb
shll
adc
mov
out
pop
dec
push
aas
les
imul
sbb
loopne
mov
push
sub
mov
das
je
mov
add
out
pop
dec
hlt
out
lcall
dec
insb
push
sbb
mov
daa
mov
pop
or
pop
cmp
sti
xor
outsl
stos
mov
lea
xchg
add
jae
cmp
add
pop
repz
out
out
pop
push
inc
bound
int
mov
ds
xor
and
decl
in
lds
cmpb
cld
or
les
cmp
std
jbe
lret
push
rcl
cli
xlat
cmp
mov
xchg
cmp
lock
jne
adc
out
adc
in
add
lds
dec
mov
sbb
fcmovu
mov
hlt
jo
inc
stc
test
pop
jg
push
negl
xor
or
shlb
data16
jb
push
xor
sbb
aaa
sbb
mov
pop
dec
mov
xor
shrb
adc
call
push
test
add
mov
test
insl
sbb
sub
jbe
xorl
xchg
dec
inc
lock
js
xchg
nop
iret
leave
xchg
in
and
lret
sbb
dec
sti
popa
pop
ret
xchg
mov
or
sar
int3
cli
xor
cwtl
sub
call
jle
pop
repnz
mov
aaa
sbb
pusha
mov
adc
std
dec
jns
jle
in
pop
lea
and
lods
in
xor
add
andb
push
cmc
dec
mov
stos
shrl
sub
jne
jo
and
or
out
sbb
aad
incb
jl
addr16
jp
adc
int
out
and
dec
adcl
jno
inc
lahf
sahf
imul
sbb
iret
push
sbb
in
jnp
sarl
popf
mov
and
insb
movsl
or
aaa
sbb
in
dec
inc
mov
or
lahf
push
out
add
pop
ds
pop
mov
imulb
cmp
ret
mulb
and
push
andl
cmpsb
jle
lcall
jg
and
std
lods
dec
jns
movsl
push
in
shll
and
lahf
js
icebp
cmpsl
pushf
xchg
adc
inc
lahf
cmp
inc
ss
inc
and
cld
rolb
sbb
dec
inc
add
jmp
xor
das
jbe
jae
jae
mov
insb
or
dec
xchg
sub
sub
xchg
cld
fucomip
arpl
mov
cmpsl
mov
mov
mov
aaa
mov
sub
mov
push
and
and
adc
mov
or
gs
sub
hlt
and
das
pushl
mov
in
mov
stos
or
adc
sbb
push
mov
dec
jb
lcall
leave
xor
xor
mov
push
cmp
add
enter
imul
sub
xchg
test
inc
out
js
mov
inc
and
sbb
sub
cs
addl
xchg
push
xchg
pop
mov
mull
mov
popf
cmp
fwait
jo
mov
xchg
inc
shlb
mov
adc
dec
mov
mov
std
inc
lcall
push
fdivr
inc
aad
test
seta
sub
cwtl
xor
std
outsl
mov
rcrl
pop
movsb
shl
negl
shrl
jae
mov
pop
mov
pop
pop
loop
cmp
es
cmp
dec
xor
inc
iret
sub
xchg
and
int
pop
pop
inc
test
jo
out
dec
lret
mov
orb
in
push
mov
sub
cmp
fstpl
xchg
lods
rcll
or
mov
ret
push
xor
pushf
sub
repz
xchg
sbb
push
pop
cltd
stos
es
sbb
dec
inc
jb
jecxz
cmc
cmp
jmp
inc
es
stos
add
xchg
or
stc
dec
fdivl
xor
jmp
pop
xor
mov
or
sbb
xchg
push
jb
inc
mov
push
popf
iret
pop
testl
push
mov
dec
cmp
inc
jp
push
xor
loopne
adc
and
adc
les
inc
add
add
mov
or
push
rorl
xchg
mov
hlt
and
bound
adc
in
pushl
roll
sub
out
mov
mov
sbbb
int3
movsb
push
lcall
clc
in
inc
in
loopne
dec
jbe
dec
imul
div
repnz
mov
jecxz
inc
test
enter
out
mov
add
addr16
jge
stc
xor
aaa
xor
jbe
or
pushf
inc
ss
mov
dec
lahf
pop
dec
xlat
lret
xor
or
das
dec
mov
xor
cmpsl
faddl
arpl
mov
cmp
or
pop
mov
shr
in
xchg
in
negb
xchg
inc
repz
sub
and
loopne
mov
adc
lret
or
loope
mov
sti
rorb
aam
sbb
push
xchg
jl
dec
adc
mov
push
inc
sub
sub
and
sub
push
aaa
iret
movsb
mov
popa
pusha
ret
popf
jbe
js
ret
add
and
clc
outsb
mov
addr16
rorl
repnz
sbb
sahf
push
das
loopne
push
jecxz
cwtl
and
push
push
xchg
test
rcrb
add
popf
sub
pop
dec
xchg
mov
dec
jns
cmp
push
jle,pn
stos
cwtl
push
popf
testl
jle
lods
sub
imul
aaa
xchg
call
out
inc
dec
stos
mov
jne
inc
pop
mov
in
adc
cmc
and
xor
cmpl
fwait
std
push
mov
hlt
push
iret
push
jns,pn
sub
add
sub
testl
mov
js
scas
xlat
mov
cwtl
in
mov
pop
jge
test
in
xor
push
rclb
push
cs
stos
or
cld
cld
push
scas
or
xor
and
push
mov
cmp
stc
sub
ss
sbb
aad
stc
xchg
mulb
ds
inc
dec
pop
xor
pop
adc
push
outsl
pop
sbb
lock
jg
jp
stos
out
es
test
imul
xor
push
mov
inc
push
adc
cs
imul
push
jne
mov
cmp
fcompl
push
int
sbb
add
jp
out
pop
dec
test
fcompp
add
repz
dec
fdivp
ret
mov
mov
xor
lock
rcrb
fdivrl
pushf
cmpsl
out
fisttps
sub
dec
cltd
enter
add
ja,pt
inc
sbb
fisubrs
outsl
hlt
push
call
adc
dec
jno
and
test
mov
js
push
dec
repnz
inc
pop
and
or
daa
xchg
inc
dec
push
mov
jmp
int3
push
ja
cmpsb
cli
scas
mov
mov
adcb
cwtl
movsl
sub
mov
jno
insb
lcall
in
dec
inc
pminsw
sbb
mov
imul
testb
ffree
dec
stc
sbb
lret
imull
jb
lcall
xchg
pop
mov
lret
xchg
xor
push
dec
shll
dec
pop
mov
pop
xor
rcrl
xchg
sub
popa
test
aaa
push
adc
fstps
mov
lahf
push
add
sub
call
push
jo
mov
push
lds
jae
test
fcmovb
push
pop
pop
mov
les
test
push
shr
xchg
dec
xchg
push
out
test
mov
fildl
mov
or
sar
mov
cmp
cs
jmp
lcall
aam
and
sti
popf
mov
movsl
shlb
pop
xlat
pop
inc
test
sti
inc
out
mov
std
cmpsl
aam
fiadds
stos
pushf
inc
clc
pop
sarb
pop
xchg
or
xor
int
aad
out
mov
testb
outsb
mov
fnstsw
push
stos
cli
jmp
popa
filds
or
lds
clc
or
pop
fdivl
sbb
mov
ret
dec
out
pop
push
and
in
inc
pop
or
pop
sbb
or
in
sar
imul
xlat
mov
es
sar
mov
or
mov
push
fmuls
addr16
push
mov
loope
sub
adc
inc
test
test
ror
nop
into
mov
outsb
rorb
cmpsb
mov
lahf
shr
cmp
cmp
mov
call
repz
dec
int3
mov
shll
and
dec
test
cmp
and
mov
fucomp
inc
movsb
add
mov
shrb
xchg
inc
inc
xor
jns
adc
out
hlt
sbb
dec
ljmp
jp
mov
ret
xlat
jmp
nop
adc
pop
std
mov
jle
mov
rcl
movsb
mov
add
in
sub
js
fsubs
addr16
stos
pusha
sbb
arpl
or
test
mov
jecxz,pn
inc
mov
test
xorb
push
adc
dec
inc
lock
cli
push
repz
ss
aas
in
mov
out
add
fstpl
push
jmp
fadds
sbb
pop
mov
hlt
in
xchg
sub
mov
test
setle
mov
jp
stos
jb
or
cmpsl
mov
notb
mov
fcoms
and
mov
push
push
mov
cmp
jmp
jnp
sub
lods
adcl
adc
out
inc
dec
xchg
mov
add
ret
pop
and
out
cmp
xchg
in
mov
pusha
xor
insl
xchg
jbe
pop
pop
sub
inc
ljmp
in
add
int3
lret
or
cltd
daa
mov
xchg
and
dec
pop
or
xor
inc
jp
mov
stos
pop
rclb
addr16
xchg
push
lahf
fadd
jns
cmp
es
xchg
xchg
lcall
lahf
jae
add
xchg
mov
int3
mov
cmp
lahf
aaa
and
addr16
jg
iret
inc
sub
cmp
fs
inc
cmp
dec
stc
lods
push
aam
ja
addr16
mov
ds
lds
lcall
adc
inc
mov
iret
rorb
add
leave
jg
cmp
dec
dec
xchg
jmp
mov
jle
repz
lods
mov
cmp
fmuls
stos
jp
shlb
and
movsl
dec
add
xchg
movsl
cmp
std
gs
int
fsubrs
ds
mov
outsb
jg
in
and
sub
nop
fwait
and
mov
pop
push
adcl
pop
add
cld
pusha
data16
inc
arpl
jmp
icebp
dec
xor
lret
mov
scas
repz
cld
dec
jmp
adc
inc
ror
inc
inc
sarl
rclb
and
sbb
xor
popf
xlat
aas
sahf
sub
test
or
std
lock
or
adc
push
sub
mov
js
insb
mov
push
daa
sub
sbb
inc
jmp
pushfw
int3
jmp
ds
fmuls
mov
mov
fs
add
imul
jno
test
cmpsl
in
xlat
pusha
imul
push
adc
and
mov
push
add
or
test
mov
mov
test
inc
stc
gs
dec
mov
and
sti
dec
aaa
jle
sbb
mov
andl
das
lret
pop
ds
ja
inc
inc
xchg
fnsetpm(287
inc
pop
push
dec
std
popa
sbb
fimuls
or
daa
jl
cmp
aad
int
inc
cmp
jl
pop
outsb
nop
out
xlat
nop
aas
mov
mov
filds
fs
push
outsb
sub
dec
jle
jmp
push
xor
rorb
pop
lahf
and
inc
jne
out
lds
inc
xchg
mov
adc
jle
cmp
sub
aad
sbbl
int
lods
cmp
and
mov
fldenv
je
lods
xchg
or
sarl
imul
fdivp
bound
or
cld
inc
popf
push
cltd
repnz
dec
loop
ficomps
stos
into
fwait
pop
lods
or
in
fwait
sbb
clc
lret
cli
jle
fildl
sub
inc
icebp
aad
jno
leave
and
jmp
inc
arpl
loop
mov
lcall
jge
xchg
inc
arpl
int3
or
outsb
sbb
add
jecxz
xlat
enter
std
xorb
push
mov
lea
mov
xchg
pusha
push
lret
sub
pop
leave
setae
pop
lods
ss
mov
in
orb
out
dec
lret
sahf
movsl
mov
inc
pop
in
xchg
add
xor
imul
fadds
fstl
aas
inc
mov
mov
popa
outsl
push
xchg
das
mov
mov
js
fcompl
pop
out
mov
pop
inc
lods
or
fwait
stc
jo
pop
push
push
jg
sbb
mov
push
jp
aaa
xlat
cmp
inc
es
nop
push
test
mov
jl
popf
das
or
popa
icebp
adc
scas
repnz
test
outsb
ja
testb
push
xor
int
add
cli
out
pop
fwait
jbe
mov
rorl
xchg
jbe
aas
push
leave
ja
addr16
jo
jl
lock
loopne
push
rcr
cmp
iret
gs
clc
popf
inc
xchg
inc
xchg
sbb
add
das
sbb
mov
xor
mov
shrb
push
pop
mov
mov
adcl
pop
lret
stc
ljmp
dec
xor
jns
fisttpll
ret
mov
fcompl
repz
in
dec
xor
loopne
repnz
mov
test
aaa
mov
aaa
lea
jle
ljmp
es
push
mov
outsl
jecxz
jns
or
js
enter
leave
hlt
cs
stos
xchg
fcomip
adc
lret
mov
or
jl
pop
rcl
sti
inc
bnd
push
add
aam
inc
gs
xchg
xor
cmp
fidivrl
cmp
xchg
ret
gs
or
inc
and
jp
shll
inc
stos
pop
push
ret
test
push
lret
in
das
jg
lret
pop
stos
bound
stos
adc
dec
pop
and
repz
inc
mov
mov
pop
add
push
mov
and
inc
xor
js
add
movsb
gs
test
aas
mov
dec
aad
and
ficoms
add
mov
jp
pop
pop
es
xor
lret
nop
roll
mov
add
icebp
jbe
fstps
inc
push
push
stc
call
jl
call
inc
repz
mov
mov
out
add
mov
mov
daa
nop
dec
jne
lret
orb
div
movsl
xor
jno
cmp
stos
enter
or
sbb
or
dec
inc
std
inc
lretw
cli
not
into
mov
pop
and
movsl
fwait
sub
int
dec
mov
and
jp
adc
sahf
iret
stos
mov
mov
or
mov
xchg
xchg
pop
cmp
xchg
nop
dec
and
into
repnz
pop
test
cld
loop
jns
cs
add
or
push
movsl
rcll
jle
cwtl
std
out
dec
das
mov
lods
repnz
lret
cmovb
imul
pushf
lods
or
das
cmp
and
inc
cltd
pop
inc
fs
xchg
xchg
fst
push
outsb
lret
pop
and
xchg
lods
add
mov
in
sub
or
sbb
ret
dec
dec
shll
in
xlat
sub
mov
mov
rorb
aas
sbb
rcrb
sbb
mov
or
fcoml
push
ss
gs
inc
stc
icebp
pop
addr16
movsb
jp
xor
call
adc
sub
enter
dec
sub
mov
scas
lea
push
lock
loop
mulb
sbb
popa
ds
dec
xor
popa
in
xor
aad
leave
inc
repnz
test
xor
shr
repnz
push
dec
das
ss
xchg
jmp
cmpsb
jb
les
mov
fdivrl
popf
xchg
aam
out
adc
imul
or
mov
mov
dec
dec
mov
lds
fwait
push
adc
test
mov
syscall
xor
sbb
out
out
inc
adcb
pop
arpl
mov
gs
std
mov
stc
cli
jmp
ljmp
popf
jne
stc
mov
mov
popa
or
mov
call
push
test
nop
out
pop
out
repz
mov
or
into
cmc
cld
in
loop
iret
push
mov
and
je
ret
inc
sahf
mov
bound
sbb
sbb
out
das
mov
mov
cwtl
addr16
stos
lret
cmp
aaa
jg
aad
push
pop
pop
pop
andl
jle
mov
push
mov
mov
push
dec
mov
inc
ljmp
ficoms
aaa
aaa
xchg
pusha
mov
mov
mov
ret
idiv
mov
call
push
xor
repnz
push
adc
inc
add
into
jb
adcl
addr16
aas
and
pop
fwait
dec
pop
jmp
push
and
popa
add
sbb
loopw
out
test
cmp
adc
pop
pop
test
dec
rorb
fsubs
and
xchg
or
push
push
es
scas
std
mov
aaa
and
mov
lock
movsl
js
mov
push
dec
jl
lcall
stos
jae
das
push
dec
icebp
call
fwait
jecxz
push
dec
clc
ficoml
out
or
aas
mov
repnz
cmp
inc
cmc
loope
mov
aam
adc
xchg
mov
mov
xor
add
mov
lods
sub
stos
rcl
outsl
pop
and
add
dec
cmp
mov
xorb
inc
mov
pop
lea
pop
mov
data16
jmp
daa
movb
popa
fisubs
les
sahf
inc
loope
sbb
das
mov
stc
sbb
mov
fnstenv
popf
adc
inc
fdiv
imulb
mov
add
sub
xchg
cmc
lcall
adc
xorl
push
cmp
mov
lds
or
subl
int
lds
addr16
addr16
add
xchg
inc
pushf
mov
data16
add
daa
lfs
add
cld
jb
jl
fxch
out
notl
pop
pop
lcall
cltd
nop
or
mov
mov
lea
ja
push
fistpll
pop
lcall
dec
addr16
xchg
jno
test
lods
mov
js
cmc
add
inc
and
dec
pushf
mov
or
testb
popa
call
sbb
sub
or
mov
and
inc
mov
mov
rolb
sbb
idivl
pop
in
popf
add
cli
jecxz
inc
add
push
pop
ret
out
dec
notb
jo
popa
into
push
push
in
das
cld
int
jbe
xor
cmc
push
outsb
test
inc
push
or
mov
mov
sarb
sbb
sbb
arpl
jnp
xlat
mov
lret
outsl
push
fsubp
frstor
and
jecxz
ja
sub
xchg
xchg
cmpsb
inc
ret
jmp
mov
xor
pop
cmpb
mov
nop
loope
pop
shlb
dec
mov
les
addr16
sbb
scas
fwait
and
mov
test
xor
jbe
or
subl
dec
in
rcrb
push
js
std
arpl
xchg
mov
cmpsb
or
adc
leave
sar
movsb
xchg
decb
iret
dec
icebp
mov
pop
inc
xor
jns
aam
ret
xchg
xchg
in
dec
das
dec
js
inc
add
cmp
loope
mov
mov
cmp
xchg
push
rcrb
xor
aaa
cmp
clc
dec
and
icebp
xchg
jbe
pushf
and
in
jns
fcomip
out
pop
pop
xor
inc
mov
sbb
pop
sarb
wrmsr
dec
je
movsb
mov
mov
jae
inc
push
pop
movsl
push
popf
clc
addr16
pushf
call
xor
mov
mov
push
mov
insb
and
push
xor
std
out
xlat
mov
jnp
repnz
sti
stos
cmp
hlt
and
cmp
cmpsb
loopne
clc
jns
mov
cltd
faddp
inc
adc
mov
jns
adc
frstor
ficompl
aam
test
mov
rolb
idiv
in
xchg
mov
insb
fbld
ss
shlb
xchg
int
mov
stos
xor
cmp
mov
jge
sbb
xor
sub
adc
xchg
jg
xor
stos
and
push
mov
lods
adc
cltd
push
stc
pop
pop
loope
sub
jb
std
stc
xchg
popa
lds
xor
push
rol
or
int
adc
rcrl
shlb
pop
pop
push
or
pop
sbb
inc
shll
repnz
push
adc
ficoml
into
les
mov
fxch
sbb
sbb
psllw
and
jg
subb
stos
push
sub
out
mov
push
mov
fwait
shr
xchg
addb
jg
sub
mov
jecxz
push
dec
push
icebp
rolb
sahf
xor
imul
out
xchg
lods
inc
outsw
daa
sbb
test
insb
push
adc
out
push
xor
movsl
xor
aas
cmp
les
sahf
sbb
jns
add
in
ss
in
aaa
movsb
dec
in
and
xor
jne
mov
jle
xor
iret
nop
or
and
push
iret
add
xor
push
jae
xor
daa
clc
iret
jo
test
dec
mov
lock
inc
jno
insl
pusha
dec
je
sarb
jo
jle
fnstsw
orl
xor
add
lret
test
push
jbe
or
outsl
aas
jmp
rorb
mov
test
add
dec
cli
jle
cld
repz
mov
lahf
cltd
xchg
and
mov
ss
fiaddl
aaa
mov
mov
imul
notb
jmp
push
inc
and
xchg
hlt
test
jns
inc
out
xchg
repz
mov
cmpsb
roll
and
dec
adc
mov
sarl
cmpl
pop
xchg
imull
int3
and
mov
repnz
jge
xchg
add
pop
inc
add
pop
sbb
sub
dec
std
mov
jns
and
ss
test
sub
or
cmc
lock
dec
inc
andb
lods
das
addb
jne
fucom
test
fldt
pop
xchg
pushf
popw
xchg
inc
push
faddl
gs
nop
pop
push
pop
mov
cmp
pop
in
sbb
inc
and
inc
sahf
sahf
xchg
dec
in
les
adc
shlb
notb
sbb
sarl
push
push
xchg
dec
mov
scas
mov
cltd
mov
sub
loopne
sub
add
and
mov
mov
jecxz
sbb
pop
pop
pop
mov
adc
lahf
mov
cmp
jg
mov
lret
aaa
push
in
lea
add
lret
stos
and
sub
je
data16
xchg
jnp
push
or
sbb
stc
leave
mov
jns
ss
cmpsl
inc
fwait
in
popf
in
xchg
loop
loope
ljmp
pop
xchg
mov
xchg
jge
jge
leave
lahf
out
lea
and
in
mov
add
xlat
cli
lret
fdivl
add
aam
lds
xor
mov
jle
inc
add
jb
mov
mov
push
and
sub
or
std
cmpsl
jae
icebp
add
jno
sbb
imul
xchg
cmovge
int
nop
push
rclb
xor
ret
ret
in
aaa
mov
adc
sub
xorl
mov
cs
daa
loop
fsubl
into
and
sbb
lret
xor
mov
out
das
jae
push
jg
insb
xchg
sbb
dec
mov
push
dec
cltd
cmp
imulb
arpl
jle
and
dec
out
mov
lock
clc
inc
or
fisttpl
push
aaa
cmp
pushf
in
ja
push
dec
or
adc
imul
xorl
aad
insl
jae
sub
adc
xor
push
dec
ret
add
sub
inc
sub
in
mov
imul
sbb
dec
cld
jnp
mov
sub
insb
dec
xor
jns
repnz
pop
xchg
in
aaa
add
imul
leave
mov
mov
mov
add
jge
fs
js
xor
ficompl
adc
ja
push
ja
clc
mov
out
xchg
pop
ds
out
bound
gs
cltd
inc
adc
imul
fdivrl
stc
xchg
js
mov
lret
sbb
fsubl
cmpsb
idivl
add
cmp
nop
fistpl
mov
cmp
and
and
push
and
ret
jbe
and
cmp
nop
out
jmp
outsl
sbb
push
inc
jns
cmpsb
imul
imull
xor
adc
push
insb
xchg
jle
xchg
sbb
cwtl
insb
and
or
test
lock
jmp
or
inc
outsl
cmp
bound
int3
outsl
xor
push
sbb
lods
sub
jo
sahf
jo
test
js
mov
mulb
out
ljmp
mov
cmpsw
inc
inc
xchg
inc
das
insb
lods
mov
outsl
push
daa
in
imul
xor
sbb
addr16
das
push
lret
loope
jae
clc
jmp
call
push
loope
test
test
jb
lock
sbb
push
scas
and
out
push
sub
js
je
xor
push
sbb
mov
outsb
jecxz
test
cs
into
movsl
divl
fistpl
inc
cs
inc
push
ret
int
pop
in
fistpl
mov
int3
add
cmp
or
cs
or
lock
mov
popf
ret
push
pop
clc
dec
jb
imul
cmovne
adc
xor
cwtl
xor
outsl
fs
outsl
rorb
inc
mov
push
dec
adc
xchg
add
movl
scas
xlat
lods
sbb
imul
mov
cmp
xchg
xchg
jmp
sbb
enter
sub
in
pop
pop
pop
sbb
das
pop
fcompl
and
or
aad
xor
xchg
cld
adc
xchg
push
cmp
jae
insl
gs
addr16
jmp
inc
std
push
sbb
bound
mov
mov
inc
pop
pop
ret
hlt
adc
pop
mov
loop
add
repz
mov
add
loop
shl
mov
cltd
cmp
out
sqrtps
push
cld
adc
xlat
shll
sub
stos
push
inc
stos
adc
add
xor
ljmp
out
in
rcrb
jecxz
and
insb
data16
jnp
lds
lahf
shlb
repz
popf
sub
rcll
lods
rolb
push
insl
es
pop
mov
add
je
cmp
dec
jecxz
jbe
xchg
xchg
int3
push
nop
push
push
push
ds
mov
lret
add
adc
scas
push
lods
xchg
fildl
add
test
mov
adc
je
jns
test
cwtl
and
aad
jmp
cltd
addr16
pop
test
adc
mov
dec
sub
ljmp
imul
cld
rcrl
cmpsb
dec
arpl
inc
inc
call
and
mov
scas
aad
out
push
ret
fbstp
lcall
push
pop
pop
mov
movsb
push
push
lahf
cmpl
fs
dec
xchg
adc
mov
push
fwait
xchg
in
cmp
jmp
out
mulps
les
lret
mov
mov
cli
pop
or
adc
xor
out
inc
jns
push
push
adc
dec
adc
ss
movsb
xor
clc
mov
test
ja
dec
sub
add
test
out
movl
data16
dec
aaa
bound
and
imul
pop
dec
cmc
insb
mov
out
lcall
imul
mov
jne
outsl
ret
and
loope
add
mov
inc
enter
notb
fisttpl
mov
sub
dec
mov
cld
inc
in
jl
dec
cmp
and
mov
test
mov
jp
add
nop
mov
fdivl
ret
movsl
imull
loop
sbb
inc
cld
daa
insb
adc
add
stc
out
pop
lahf
add
inc
jg
cmp
push
mov
pusha
lea
fldl
loope
cmpl
push
xor
int3
xor
data16
xor
xor
xchg
cmpsl
repnz
mov
out
addr16
mov
or
loope
call
pop
mov
push
mov
add
pop
fists
or
add
out
jo
lahf
mov
inc
xchg
xchg
push
push
add
cmpsb
cmp
add
xor
xchg
movsb
fdivrs
xor
rcll
inc
in
mov
test
mov
ljmp
jo
xchg
je
jg
cmp
cmp
xchg
fimuls
dec
push
lock
jge
rcrl
mov
lods
imul
xor
dec
lahf
sub
cltd
push
je
inc
inc
mov
add
push
jno
push
pop
mov
aad
cltd
ss
dec
bound
mov
cltd
aas
sbb
adc
mov
movsb
out
fldenv
js
inc
xlat
testb
mov
bound
mov
inc
dec
js
mov
xchg
hlt
out
js
mov
in
testl
jns
or
scas
push
jl
js
jle
aas
sbb
movsb
or
dec
cmp
xlat
enter
or
or
lds
xor
test
mov
push
test
fistpl
lds
add
and
mov
sub
push
mov
mov
or
and
jns
iret
xor
sbb
cmp
xchg
push
rcrb
xchg
pop
mov
push
sub
cmp
cmpsb
mov
ret
sub
add
mov
mov
sbb
sub
and
es
int3
dec
sahf
sub
and
out
sahf
mov
xchg
push
mov
sbb
cli
hlt
pusha
lahf
clc
sub
pop
maskmovq
xor
xchg
lea
jle
popa
add
push
pop
test
repz
push
shll
lret
xlat
out
xor
jmp
inc
push
jl
mov
adc
sar
xchg
pop
gs
pop
push
aaa
ljmp
ret
xchg
push
lret
adc
jmp
pop
repnz
mov
inc
push
dec
fmul
mov
test
xchg
cmp
jne
insl
jae
shr
pusha
xor
icebp
in
cmp
or
add
sbb
int3
pop
lods
push
xchg
jecxz
mov
nop
test
xchg
mov
maskmovq
mull
cmp
leave
sti
mull
mov
mulb
or
inc
test
fstpt
cmp
or
and
fiaddl
sbb
gs
xor
mov
outsb
xchg
push
jle
out
push
jmp
daa
sub
fimull
xlat
movsb
adc
shrl
mov
arpl
data16
or
hlt
icebp
mov
mov
cmpl
push
add
icebp
ret
jp
call
xchg
fcmovnu
cmpsl
and
xchg
inc
lods
cmp
ds
cwtl
push
aas
xchg
xor
jecxz
out
mov
inc
loopne
jl
jmp
lahf
sub
rclb
insl
mov
cmpsb
pop
subl
icebp
cmc
dec
mov
push
mov
jl
mov
sub
inc
out
sub
int
mov
faddp
pop
dec
pop
mov
je
cli
xor
arpl
loope,pt
sub
pop
pop
pop
pop
pop
lahf
mull
lcall
int
nop
push
lret
iret
jns
push
xchg
outsb
add
mov
sarb
mov
pusha
test
and
loopne
fwait
sub
xchg
fldt
mov
enter
lea
add
incl
loopne
and
xchg
xchg
dec
dec
mov
rol
call
add
jns
ss
mov
ljmp
inc
add
fnstenv
pop
dec
ja
fwait
lea
daa
and
adc
xchg
call
bound
shrl
mov
jg
mov
stc
call
jecxz,pn
dec
cmp
movsb
in
andb
stc
or
add
and
movsb
push
or
cmp
mov
pop
pushf
nop
jl
sub
cmp
and
ret
filds
adc
fwait
test
xchg
add
test
push
cmp
je
fcomp
cmpsb
xchg
cmp
sub
aaa
add
add
push
mov
inc
daa
shll
imul
inc
loope
jbe
or
cmp
jns
gs
mov
or
lahf
mov
ljmp
data16
dec
in
pop
dec
jle
pop
ja
jmp
ret
loop,pt
ja
bnd
insb
add
push
add
pop
repz
jl
inc
jle
dec
enter
push
cmp
xchg
or
lds
mov
sbb
xor
jl
dec
pop
test
adc
ret
mov
js
call
movsb
test
cs
jp
pop
add
imul
jmp
jecxz
shrb
ss
scas
out
or
pop
and
imul
and
and
or
jecxz
cmp
lret
adc
fcmovu
inc
xor
push
dec
mov
fmul
fsubl
cmp
cmp
mov
cmpsl
decb
mov
data16
pop
in
mov
js
dec
popa
mov
mov
movsl
mov
xchg
rcrb
xchg
arpl
pop
stc
and
mov
addr16
fidivrs
and
adc
into
cmp
sbb
push
icebp
lcall
fiadds
push
scas
popf
push
popf
mov
cmp
sti
sbb
out
ja
mov
push
leave
popa
testb
jl
fsubp
mov
cmp
rcrb
mov
into
scas
sbb
adc
ficompl
adcl
push
xchg
jae
test
mov
es
icebp
and
dec
test
sbb
dec
sbb
enter
mov
dec
out
rcl
and
push
add
je
cli
mov
addr16
mov
push
mov
jne
sub
aam
pop
outsl
push
or
add
js
dec
scas
bswap
jo
fwait
mov
cmpsb
into
jbe
xchg
xchg
xchg
cmp
icebp
mov
dec
popf
pop
jne
aaa
mov
or
push
stos
push
jae
xchg
arpl
cmp
cs
cmp
push
xor
loope
mov
cwtl
or
jmp
sbb
insb
jl
sti
icebp
fwait
call
and
fcom
mov
imull
jmp
cmpsl
test
pop
jae
fdivrs
cmpsb
jecxz
lret
mov
outsb
gs
add
out
xor
dec
mov
lock
and
out
mov
loop,pt
mov
add
cmpsl
pop
add
mov
ret
or
and
push
jmp
cli
xchg
xchg
fisubl
xchg
mov
repnz
jo
push
out
sub
loopne
mov
rorl
xchg
xchg
out
mov
cmpb
xchg
mov
pop
out
sbb
dec
fdivs
inc
in
mov
push
cli
ljmp
and
mov
inc
sbbb
rorb
and
jae
pop
pop
insb
jg
aas
sbb
aam
inc
rcl
shll
clc
test
ljmp
jg
int
add
and
in
icebp
dec
jno
inc
fstps
test
mov
sahf
imul
push
add
scas
sub
mov
mov
rcl
arpl
xchg
or
add
jl
in
xor
pop
pusha
in
jnp
add
pop
adc
int3
sbb
pop
xchg
std
rclb
daa
adc
pop
stc
enter
xor
insb
out
inc
or
add
imul
ss
roll
cmp
sub
sti
xchg
cmp
xchg
scas
mov
aas
jns
ret
into
sub
jmp
mov
or
shrl
fld
scas
push
sub
push
call
mov
test
aas
into
xor
mov
std
lea
inc
xchg
mov
out
sbb
jp
mov
testl
cmp
add
in
loop
mov
sub
push
cs
push
sbb
ja
cltd
bts
test
and
mov
iret
mov
push
cld
cs
mov
adc
stos
aas
adc
pop
lcall
inc
sbb
ds
jmp
push
dec
loope
or
imul
lcall
dec
outsb
call
inc
popa
add
fnstenv
rcrl
js
les
je
fcomps
mov
cmpsl
stos
leave
xchg
dec
outsl
dec
cs
leave
jnp
sbbb
in
lods
pop
adc
add
in
jo
fs
or
adc
addr16
xchg
xchg
inc
dec
nop
pop
or
push
pop
repz
fnstenv
xchg
es
xor
push
add
or
scas
stc
arpl
push
xchg
mov
data16
xlat
sbb
inc
dec
or
mov
push
arpl
in
loopne
scas
out
push
inc
dec
mov
and
dec
push
sub
loope
lea
mov
mov
mov
pusha
sti
inc
gs
pop
test
pop
push
incl
push
movsl
ss
fwait
out
fsts
jecxz
test
mov
fimuls
shlb
lds
das
imul
lcall
stc
lods
clc
push
mov
addr16
loop
sub
sahf
daa
pusha
inc
cmp
add
xchg
cld
jae
mov
pop
mov
adc
push
and
jo
dec
lds
mov
or
lea
mov
mov
sub
dec
subl
pop
mov
aam
sub
xchg
mov
sub
sbb
pop
jbe
sub
lahf
pop
adc
xor
adc
shlb
inc
add
adc
jmp
inc
in
js
xor
mov
test
into
negl
pop
xchg
pop
sbbl
dec
lods
jl
pop
fdivl
cs
mov
mov
test
stc
jb,pn
inc
adc
sbb
movsb
cmpsb
clc
adc
sub
int3
jg
sub
movsl
notl
lods
dec
in
inc
in
cltd
mov
pop
or
adc
lea
mov
xchg
xchg
mov
daa
sub
loope
sahf
mov
mov
push
ja
cmp
adc
test
inc
jmp
xchg
shlb
xor
push
mov
lret
lock
dec
push
in
push
cltd
out
pushf
insb
cmp
test
outsb
dec
mov
cltd
scas
jmp
dec
lods
jg
js
push
je
sub
cmp
inc
mov
dec
dec
sub
push
mov
das
rclb
jbe
mov
gs
xchg
les
notl
fdivrl
arpl
push
add
rorb
std
mov
ljmp
addr16
dec
dec
icebp
lret
insl
xchg
or
adc
aas
stc
int
clc
pop
and
ss
mov
dec
jo
and
adc
iret
test
mov
andl
cmc
in
mov
add
sbb
xor
lret
rcr
or
cmpsl
mov
int3
iret
fisubs
xor
adc
out
dec
push
scas
adc
into
cmc
push
or
into
adc
pop
xlat
or
in
mov
pop
jl
cmc
xchg
xchg
jae
imul
adc
or
adc
xchg
dec
adc
sub
pop
sub
inc
xor
jp
fisttps
cmp
mov
pusha
shrl
stc
sbb
roll
lods
sbb
inc
dec
mov
jno
arpl
add
jp
and
pusha
mov
es
cltd
or
and
outsb
sar
lret
mov
add
daa
or
stos
out
repnz
jbe
bswap
arpl
mov
leave
stos
in
out
jnp
call
jnp
clc
mov
mull
jmp
arpl
arpl
in
inc
mov
jl
mov
int3
fcmovbe
popa
xchg
or
dec
out
xlat
and
aad
aas
ss
fisubrl
das
icebp
sbbl
pop
fwait
lahf
scas
test
pop
outsb
imul
sub
and
dec
mov
add
rol
jge
mov
dec
mov
cs
std
pop
sbb
lret
xchg
pusha
sarb
jmp
in
pop
mov
aas
mov
xor
scas
mov
push
sbb
push
repnz
in
push
jbe
test
xchg
lret
mov
add
pushf
fldt
lahf
push
mov
aam
addr16
mov
mov
mov
pop
cltd
xchg
leave
pop
or
mov
arpl
push
xchg
dec
sbb
sti
sbb
push
rcrl
ret
sub
inc
sub
and
or
pop
js
jno
mov
jg
popa
popa
stos
cmp
adc
jle
jmp
loopne
jl
cmp
pop
inc
pop
mov
inc
adc
xchg
or
push
stos
call
jne
ljmp
inc
pusha
std
sbb
dec
sbb
loope
loope
loopne
enter
arpl
test
jl
jecxz
lods
int
jl
sarl
mov
xchg
scas
dec
lret
mov
clc
jns
push
ret
mov
fnstsw
sub
sbb
fnstenv
push
push
test
pop
push
ds
add
push
lea
fisubrs
push
repnz
rep
lret
mov
mov
ljmp
jb
jecxz
inc
pop
xor
cmp
aad
xchg
pop
mov
lret
jle
pop
sub
xor
pushf
jecxz
cs
cmpb
jp
xchg
pop
mov
push
pop
enter
inc
mov
fcmovnb
xor
and
fldcw
xchg
dec
das
fisttpll
mov
cmp
xorl
out
inc
mov
mov
sarl
push
and
out
std
mov
jmp
cmp
sub
aam
or
or
jnp
xchg
and
addb
mov
cs
push
xor
lea
out
xchg
push
fidivrl
into
sub
cmp
in
cmp
xchg
inc
push
add
jle
push
test
push
bound
lret
cmc
push
lods
in
out
mov
mov
mov
es
lods
xlat
outsb
mov
push
into
fs
and
pop
ds
mov
insl
popa
mov
add
arpl
lods
add
ret
cmp
scas
xchg
mov
iret
inc
cwtl
std
add
out
test
mov
in
outsl
or
inc
sub
ror
jge
lock
mov
xchg
push
jmp
sbb
lahf
xchg
push
stos
mov
mov
scas
lret
lds
adc
aaa
cmp
lock
sub
rolb
andb
mov
add
sbb
dec
loopne
je
outsl
cmpsb
test
jns
dec
or
and
fcomps
jnp
sbb
xchg
pop
jge
mov
mov
popf
ljmp
adc
sbb
popf
and
xor
imul
icebp
or
leave
cli
mov
fcomi
xlat
sti
out
fs
cmp
or
mov
add
mov
sub
aaa
je
test
aam
pop
or
sub
xlat
roll
cld
cmp
std
addb
call
je
mov
adc
or
and
mov
xlat
int
je
movsb
push
push
lcall
xchg
pop
mov
ja
mov
outsb
inc
add
adc
or
xor
jg
mov
and
xchg
and
cmp
popa
push
jg
or
jecxz
mov
or
sub
mov
pop
pop
testl
ja
add
xchg
sti
xchg
pop
add
inc
inc
push
icebp
dec
dec
and
pop
push
ja
cmp
and
push
sbb
jne
sub
out
or
nop
cmp
jae
jnp
lds
cmpsl
cmp
mov
addr16
inc
or
xchg
and
pop
data16
stos
cltd
add
xchg
push
leave
xor
rol
lods
loop
out
and
push
mov
fdivs
xchg
push
and
xchg
das
sbb
sahf
xchg
rolb
xor
shll
pop
push
sbb
mov
pop
gs
pop
sbb
mov
daa
int3
lds
lods
imul
mov
fcoms
int
cmp
pop
mov
fwait
xor
rorl
icebp
add
notb
cwtl
jo
mov
dec
xchg
pushf
pop
lahf
jns
stos
inc
aaa
int
imul
pop
jns
sbb
lret
test
push
push
sahf
shll
add
mov
adc
aad
rorb
fldz
imul
xchg
repz
lds
jo
and
outsl
add
cli
imul
pop
dec
cld
sbb
pop
shll
pop
or
xchg
out
jge
sbb
jbe
adc
pop
lret
or
lret
cmp
out
hlt
dec
ds
mov
jns
sub
sbb
add
sub
daa
cmpsb
or
push
jge
inc
imul
inc
es
sub
or
and
pop
add
mov
cmp
inc
mov
xlat
mov
aam
lock
xor
xor
test
in
push
or
or
mov
test
lahf
jecxz
adcl
fisubrl
push
jp
std
push
xor
iret
mov
mov
jns
insl
add
sub
sub
sbb
loop
sub
pop
jno
mov
ret
sbb
pop
pop
add
push
neg
or
lea
mov
test
and
xorb
dec
icebp
jecxz
xchg
lahf
push
out
adc
push
push
and
sub
jp
pop
int3
cli
repz
int
jbe
jp
arpl
dec
je
pop
fwait
mov
testb
mov
mov
xchg
cmpsl
imul
pushf
setl
sbb
and
in
push
outsb
mov
cmp
or
loope
les
test
lcall
mov
jp
push
cs
stos
loop
mov
loope
jmp
push
inc
xor
pop
jle
lgs
clc
mov
xchg
popf
push
hlt
fsubr
mov
xchg
insl
cmp
pushf
fs
popa
shll
jp
in
mov
pop
jle
dec
sbb
out
sbb
add
inc
dec
rcrl
cld
movsb
call
movsl
loope
jno
scas
dec
cmc
ss
xchg
mov
lcall
lods
xchg
rorb
dec
cmp
and
push
push
fnstcw
scas
lods
mov
xlat
popf
sub
test
repz
xchg
sub
je
mov
call
cltd
jb
sub
bound
ja
push
stos
cmp
js
xor
divl
out
add
into
or
push
push
fadds
jp
aad
sub
jle
sub
cmpsb
out
xchg
xchg
cmp
dec
pop
in
add
push
ror
jl
push
sub
mov
sub
mov
push
jp
pop
mov
mov
shlb
mov
jp
stc
add
cmp
push
jns
repnz
jg
jmp
sub
aas
std
scas
mulb
pusha
adc
divb
push
movsl
sbb
jno
ret
fcomip
jne
les
cs
dec
dec
pop
pop
jl
mov
dec
in
sbb
mov
shl
movsl
stos
test
popf
pusha
std
push
sub
stos
clc
pop
mov
or
inc
ret
cmp
sbb
hlt
inc
repz
divb
dec
mov
mov
mov
cmp
xchg
pop
push
leave
xor
hlt
movsl
pop
sbb
adc
or
int3
ss
pop
sub
mov
shll
sub
cld
push
and
movsb
test
cli
sbb
dec
into
pop
dec
push
arpl
dec
lret
mov
sbb
gs
int3
sbb
les
jge
shlb
inc
mov
or
jb
adc
jmp
fwait
push
aaa
arpl
ljmp
movsl
insb
sbb
out
aad
stos
xor
cmp
out
pop
les
jbe
inc
sub
ds
jmp
xor
repz
sbb
shr
xchg
or
into
cmp
loop
jne
jb
sub
mov
lds
pop
adcb
shlb
fnstsw
addb
push
xchg
xchg
fcoms
inc
sub
pop
in
inc
lock
mov
repnz
adc
fisubl
mov
jmp
arpl
aam
mov
pop
mov
mov
push
sti
mov
in
or
push
leave
add
in
sbb
in
aad
push
or
imul
repnz
or
ss
aam
push
xor
out
cmp
popf
mov
dec
out
cmp
cmpsl
cmc
test
lea
jns
mov
lods
lret
cltd
in
addl
cltd
push
popf
cmp
sbb
jns
in
sub
in
add
shll
sub
mov
lcall
push
fiaddl
jno
and
inc
add
fwait
pop
lcall
data16
and
inc
jae
xor
or
insb
sbb
loopne
flds
sbb
push
mov
xchg
daa
mov
inc
and
aad
arpl
add
cmp
jecxz,pt
add
dec
sarl
xor
cmp
filds
scas
pop
lahf
push
outsb
add
xor
dec
push
pop
mov
push
mov
dec
outsb
dec
lret
jle
das
je
loope
repnz
mov
movsl
js
sbb
sbb
std
inc
mov
jae
mov
lcall
inc
cmp
cld
mov
dec
mov
in
shrl
pop
push
or
add
in
inc
insl
xor
jb,pn
rcll
adc
cmp
dec
scas
lret
scas
push
mov
adc
setno
jg
cli
mov
push
or
sahf
inc
add
add
jbe
repnz
nop
das
test
fidivs
daa
push
pop
das
or
push
iret
rcr
dec
aas
test
jnp
fidivrs
add
cmp
stc
push
pop
sub
loope
fs
ficoms
jge
in
sbb
xor
mov
cs
or
and
pop
stos
mov
cltd
jg
ljmp
mov
icebp
sbb
cmc
adc
inc
adc
lods
inc
jo
cmp
mov
adc
pop
sub
enter
les
mov
fwait
js
cmp
cmp
call
or
hlt
add
sub
push
rorb
or
in
testb
aad
aad
xlat
lcall
xchg
rcrl
xchg
and
shlb
pop
mov
xor
mov
or
ja
fidivrs
pop
icebp
sbb
pop
aam
scas
sub
stos
xor
cmp
sub
outsb
das
or
sub
jp
xchg
pushf
pop
std
jle
add
mov
add
xchg
lods
outsb
loope
aas
adc
xlat
fsubrs
out
xchg
test
int3
push
scas
insl
test
or
icebp
test
fisubrl
push
cld
cmpsl
mov
mov
imul
mov
mov
mov
mov
loope
clc
in
or
cld
mov
push
inc
movsb
cmc
xor
repnz
bound
test
fsts
inc
popa
jbe
xor
xlat
xchg
sub
sahf
fnsave
xchg
scas
adc
xchg
cli
inc
mov
scas
mov
cmpl
int
pop
enter
fmuls
dec
cmp
sub
add
call
sbb
lcall
push
push
jbe
pop
lcall
sub
pop
test
fbstp
cwtl
pop
scas
test
sahf
pusha
dec
push
data16
lea
and
mov
mov
icebp
fsubrs
xchg
adc
push
out
adcb
enter
jbe
or
mov
fcoml
out
mov
popa
imul
jecxz
dec
push
pop
loope
and
fs
repz
bound
insb
mov
movsb
or
aas
add
and
mov
push
shll
inc
dec
cs
fstps
jp
sahf
cli
fisttpl
xlat
in
fstpt
in
push
push
cmp
sub
sub
fmuls
sbb
sub
test
or
and
fcomps
dec
mov
stos
cli
sahf
in
inc
mov
add
int
imul
shll
add
pusha
pop
jge
scas
sti
jg
adc
or
lret
sbbb
cmp
or
pop
lret
test
int
pop
cmp
mov
divb
mov
sbb
sub
cmp
dec
jae
fstl
and
cld
inc
jae
mov
out
sub
out
sub
movsb
test
out
add
xor
je
mov
add
and
pop
scas
jle
or
and
sti
xor
adc
mov
push
lods
lahf
sub
sbb
pop
dec
push
lea
mov
test
fnstenv
aas
mov
push
or
mov
je
fildl
xchg
insl
mov
jnp
xchg
and
rolb
out
add
or
fwait
cld
xchg
jge
int
int3
xchg
pop
push
fidivs
test
xchg
ret
lods
sti
dec
fnstenv
dec
xor
xchg
fidivrl
pop
lahf
ja
mov
in
int
xchg
sbb
dec
mov
adc
inc
ret
fdivrl
outsb
lock
xor
loope
pop
std
sbb
enter
pop
mov
push
je
imul
adc
inc
cmp
lret
dec
lods
add
das
rcrb
mov
dec
lea
push
push
cld
inc
lods
add
movsb
bound
pop
mov
and
fldenv
fs
inc
mov
imul
mov
cmpsb
adcb
push
test
das
or
pop
mov
pop
sahf
orb
rcll
or
cli
in
mov
jne
jl
test
in
leave
dec
or
es
lret
js
cmp
sub
pushf
jno
add
jge
mov
shr
dec
test
scas
js
fs
test
shrl
aas
mov
or
mov
lds
jae
test
les
push
sbb
icebp
xchg
jp
cltd
push
mov
xor
aad
cld
testl
les
repz
outsl
push
sbb
pop
push
js
nop
adc
push
arpl
imul
lahf
lods
push
push
push
inc
cmp
pmaddwd
cmpsb
pop
mov
jno
ret
pop
or
push
fstpl
cmpsl
in
xchg
and
out
or
inc
nop
outsb
int3
inc
cld
pop
decb
cs
xchg
mov
sbb
mov
icebp
mov
add
xor
imul
sub
or
push
adc
in
addl
push
cmp
cltd
je
imul
imul
daa
pop
daa
imul
ret
jl
imull
or
dec
mov
or
out
push
mov
add
add
orb
popf
mov
outsl
xlat
movups
push
pop
test
and
cmp
daa
add
test
ljmp
sub
or
jnp
out
mov
inc
inc
cmp
ret
adc
notl
call
lock
sbb
scas
shr
push
mov
ja
xor
cld
add
icebp
out
jae
and
imul
sub
jl
xor
cwtl
lcall
push
imull
in
imul
mov
xlat
adcl
scas
xchg
inc
cmp
jae
pusha
lods
push
stos
rol
sub
add
add
andb
es
inc
pop
mov
xchg
xor
arpl
mov
sbb
sub
mov
mov
or
movsl
inc
outsb
lods
push
inc
jl
dec
testl
mov
inc
sub
pop
xchg
add
adc
xor
pop
mov
adc
cmp
push
sbb
and
dec
pusha
mov
rolb
mov
cmc
bound
push
and
mov
sub
inc
outsb
pop
vmread
sbb
add
and
fnstenv
add
or
cmp
xor
pop
mov
aaa
test
aas
cmp
push
daa
and
and
fwait
jae
rcrl
sbb
pop
xor
mov
push
xor
xchg
mov
in
outsb
stos
push
lods
pusha
or
mov
js
es
pushf
pop
mov
lcall
cli
dec
nop
out
cli
subb
sub
sub
jmp
enter
test
pop
push
and
mov
in
push
data16
scas
mov
cmp
mov
mov
add
add
mov
xchg
in
ljmp
dec
jp
adc
jp
push
mov
imul
fsubl
test
push
jle
or
xor
sbb
ret
ds
mov
mov
icebp
test
movsl
push
jp
cmp
pop
push
loopne
or
sub
inc
sub
idivl
test
dec
sbb
and
int3
sbb
mov
push
imul
or
out
pushf
xchg
lock
lods
repnz
out
jo
icebp
subl
or
outsb
mov
adc
cmp
xchg
jecxz
aaa
mov
loopne
fs
pop
fdivrs
hlt
insl
push
or
outsl
flds
xchg
sti
sub
iret
inc
or
mov
jae
ds
adc
sub
lea
out
clc
rorb
mov
out
mov
fwait
mov
inc
and
xchg
cs
cltd
les
hlt
adc
iret
mov
cmpsw
push
out
adc
pushf
in
cmp
xchg
icebp
adc
inc
jmp
data16
jl
push
subb
dec
xorl
mov
fnstsw
fnstcw
xchg
jns
loope
push
pop
push
cmp
bound
ret
cli
out
daa
in
fwait
pushf
cmp
jmp
shlb
xchg
push
jge
in
cmpl
lea
push
das
movsb
push
inc
and
jne
sbb
imul
jae
stos
negl
add
pop
add
repnz
mov
pop
lods
nop
cli
in
hlt
mul
out
aam
sub
cmpsl
add
jns
or
inc
arpl
xor
lret
xor
lods
xor
cmc
sbb
lods
and
out
or
rorl
and
sub
repnz
inc
adc
xchg
loopne
movl
mov
aam
adc
pop
adc
or
xor
or
push
jge
popa
inc
sbb
xlat
mov
lea
sahf
pop
faddl
add
jne
fsts
sbb
mov
mov
add
mov
das
mov
test
fwait
inc
mov
aam
lea
push
mov
or
js
pop
fisttpl
outsb
daa
test
sub
adcl
jne
and
sbb
push
mov
js
push
dec
cmp
xor
test
cmp
or
or
push
cld
mov
adc
xor
pop
push
aad
pop
jmp
add
lret
cwtl
int
or
idiv
repz
mov
lret
sub
in
mov
scas
cmp
aam
enter
xchg
lds
js
pusha
lods
outsb
pop
sbb
gs
sarl
dec
lahf
push
jb
fcmovbe
in
pop
xchg
test
movsl
fstp
popl
jecxz
imul
dec
fnstenv
ret
jl
test
lret
rorb
jb
push
stos
adcb
push
call
fnsave
into
sahf
popf
in
fs
scas
leave
xchg
std
leave
add
es
in
call
pop
ret
push
jg
out
mov
fwait
jmp
sbb
cwtl
imul
pop
adc
gs
shrl
xorl
cmp
add
sub
test
test
jo
std
sbb
xchg
loop
inc
lcall
push
mov
in
pop
dec
xor
push
adc
test
inc
scas
in
jnp
inc
xlat
cld
and
testl
sub
mov
test
or
outsb
imul
xchg
add
popf
ret
aam
iret
lcall
test
dec
add
or
je
mov
cmp
sahf
jae
adc
pop
push
sti
daa
gs
enter
mov
movsl
jb
xchg
cmp
xor
out
ret
stc
iret
loop
add
aaa
pop
mov
and
scas
daa
cltd
scas
jbe
shll
jae
into
insb
outsb
movsl
inc
das
in
mov
jne
je
cmp
adc
or
decb
fsubrl
and
test
dec
sub
fs
push
pusha
jp
cmp
in
xchg
inc
mov
stc
shlb
mov
pop
pop
lret
lfs
pusha
xchg
decb
pop
int
pop
jg
dec
fstpt
inc
mov
adc
movsl
enter
xchg
xchg
xor
and
ds
mov
sbbl
and
mov
and
pop
add
ljmp
fs
mov
pop
push
xchg
outsl
adc
jmp
stos
mov
mov
mov
and
adc
and
cwtl
nop
mov
movsl
mov
dec
sbb
add
or
cwtl
in
lret
out
or
adc
cmp
lods
adc
dec
xor
sbb
adcl
xor
cmp
dec
inc
mov
sub
jbe
scas
mov
fwait
cmp
push
xchg
xor
cmp
xor
pop
ljmp
xchg
pop
sbb
push
and
mov
add
push
iret
cmp
sahf
mov
xor
movsl
dec
and
mov
adc
jmp
imul
push
cmp
mov
sar
ss
dec
or
xchg
cmc
sbb
shlb
je
dec
push
xor
icebp
mov
stos
pop
outsb
test
push
mov
sbb
aam
dec
mov
repz
xor
jno
lcall
outsb
cli
out
fiadds
les
testl
mov
and
imul
popf
into
adc
lcall
scas
add
int
sbb
cmp
scas
addl
scas
inc
pop
push
scas
decb
test
cs
aas
repz
incl
push
aaa
clc
in
stos
fmul
pop
std
mov
iret
mov
jle
adc
jp
outsb
cmp
and
jmp
pop
insl
int3
pop
push
inc
orb
push
enter
out
pop
mov
mov
sbb
jo
jl
jge
lahf
sbb
enter
ret
xchg
xlat
stc
mov
adc
mov
orb
lahf
xchg
and
repnz
mov
cwtl
xor
jmp
cwtl
jl
enter
ljmp
mov
dec
cmp
rclb
mov
push
outsb
arpl
or
jnp
pop
mov
leave
in
movsb
cmp
xlat
orb
jb
inc
mov
test
std
jnp
fiaddl
xchg
sbb
push
mov
cmp
fiadds
cs
jae
ret
gs
lea
push
lahf
inc
and
imul
mov
push
mov
push
in
pop
es
adc
inc
push
push
xchg
lea
mov
call
scas
push
push
pop
sub
aad
xor
ds
bound
xchg
cmp
mov
push
cmc
clc
dec
push
mov
aam
mov
cmc
popf
fcompl
rolb
mov
inc
mov
add
or
add
push
dec
mov
or
adc
iret
dec
dec
std
ljmp
add
cmp
out
data16
mov
loopne
cmp
inc
dec
mov
mov
mov
pop
pop
fs
mov
or
sbb
push
lahf
test
sub
sub
mov
push
es
or
xchg
loop
mov
lods
ret
mov
mov
out
mov
cmp
cmpsb
mov
out
mov
loope
jp
bound
test
adc
jecxz
hlt
mov
push
int
inc
jmp
mov
dec
or
jg
fstp
fcomps
jne
sbb
into
lret
xchg
jno
rcl
sbb
xchg
mov
cld
subb
mov
adc
add
mov
dec
jl
jbe
fcompl
out
cmc
sbb
push
cltd
cmpsl
pop
jbe
and
fistl
jae
mov
lcall
call
outsl
xchg
aaa
lret
syscall
add
cmp
sar
jne
xor
dec
mov
mov
loopne
adcb
cmp
adc
faddl
cld
test
mov
out
ja
test
cmp
cs
fimuls
pop
lret
add
add
adc
push
push
push
inc
dec
ds
pop
sub
outsl
sub
push
movsl
jo
pop
pop
aaa
mov
cmp
imul
cmpsb
lea
test
stc
mov
inc
imul
inc
or
mov
sub
push
push
and
js
ss
cli
ss
dec
sub
adc
mov
pop
fs
push
jl
ret
out
push
xchg
imul
inc
leave
jnp
incb
mov
jmp
xchg
or
xchg
int
mov
mov
testb
fisttpll
mull
outsb
adc
inc
mov
cld
pop
sti
sbb
cmpsb
jns
mov
movsb
or
pusha
rolb
xchg
xchg
lds
or
std
loop
fbstp
popf
or
cmpsl
in
fsubr
repz
nop
inc
std
push
ret
xorb
rcl
cmp
fs
out
mov
sub
push
popf
xor
push
das
lods
arpl
push
ss
pushf
ljmp
jns
dec
fwait
sbb
mov
int3
push
push
xor
out
xor
sub
fs
ljmp
lds
push
cltd
ljmp
sbb
jbe
rcl
sbb
add
xor
das
mov
insl
sbb
iret
insb
lea
push
into
sbb
dec
out
mov
stos
push
xchg
cs
add
cmp
mov
sub
mov
push
inc
pop
lahf
cwtl
inc
fisubl
lret
sub
pop
subl
jg
loop
stos
and
les
jg
or
dec
std
mov
push
pop
add
leave
ss
push
gs
mov
or
ret
icebp
scas
dec
sub
xchg
inc
stc
lods
mov
test
cmp
bound
mov
pop
inc
int3
mov
pusha
hlt
mov
sub
dec
add
xor
dec
sbb
aad
dec
int
daa
dec
dec
loope
sub
sbb
mov
inc
into
inc
fmuls
arpl
mov
jecxz
rorb
or
hlt
or
inc
xchg
test
mov
sbb
sbb
test
ja
xor
push
adc
repnz
arpl
add
xchg
imul
arpl
pop
adc
adc
add
daa
stos
mov
push
imul
or
push
or
inc
roll
jns
or
dec
clc
outsl
scas
cmpsb
pop
iret
push
outsb
rol
int
xchg
push
lret
push
dec
je
lods
repz
adc
test
sbb
int
dec
mov
iret
xchg
xor
mov
jo
cltd
mov
in
daa
std
adc
mov
xor
ffree
roll
daa
loope
jns
adc
fdivr
scas
jo
xlat
push
xor
xlat
push
or
jae
jg
push
loop
xor
dec
add
push
add
shll
xchg
and
ret
xchg
testb
mov
mov
pop
and
pop
push
sbb
jne
sbb
repz
dec
mov
insl
lods
jae
aad
dec
lret
arpl
stos
and
sbb
adc
pop
leave
hlt
pop
movsl
cmp
fdivrs
movsl
xchg
pop
fiadds
xlat
arpl
loopne
cmp
xor
mov
ds
xor
popa
outsb
cmp
mov
dec
rcr
arpl
in
lds
into
bnd
cmc
repnz
ljmp
rclb
aas
test
jnp
pop
mov
movsb
mov
lods
push
mov
shlb
out
cwtl
test
adc
cmp
jg
mov
cltd
adc
outsb
mov
popf
xor
sbb
jnp
pop
jle
and
scas
leave
xor
push
and
pop
ljmp
mov
sti
adc
fnstcw
ss
xor
jmp
lcall
loopne
insl
or
xchg
dec
int
pop
dec
xchg
cmp
cmp
das
pop
sbb
sub
cli
push
cmp
fldcw
cmp
adc
lea
mov
fcomp
pop
lods
insb
mov
lea
sbb
inc
xchg
fdivl
enter
incl
je
inc
repnz
sbb
sub
out
or
xchg
inc
inc
ret
sbb
cmp
xchg
jne
pushf
rclb
lock
iret
push
xchg
add
cmp
cmc
adc
adc
in
jle
pop
mov
loop
cmp
stos
xor
ja
jno
xchg
sbb
mov
and
popa
mov
arpl
daa
fistpl
loop
repnz
cmc
out
and
xor
adc
xor
ret
std
mov
mov
sbb
adcl
xchg
push
jae
xchg
icebp
icebp
cmpsb
dec
addb
repz
inc
push
sbb
fs
mov
dec
ret
dec
sti
push
imul
sti
sbb
movsb
xchg
js
pop
test
mov
cmpsl
add
pop
xchg
inc
jecxz
rol
add
push
jbe
inc
add
gs
adc
xor
dec
adc
xchg
xor
mov
in
insl
mov
iret
test
add
push
icebp
scas
out
movb
jns
scas
rcrb
scas
mov
aas
xorb
push
scas
scas
aad
mov
jno
dec
roll
sub
lahf
aam
adc
rcll
nop
lcall
push
mov
fnsave
inc
cwtl
ja
shlb
lret
adc
lcall
addr16
dec
daa
jmp
dec
mov
pop
jno
repz
mov
mov
sbb
addb
mov
lea
sahf
dec
lret
icebp
fwait
inc
sub
xlat
rclb
icebp
add
insl
cmp
mov
ss
mov
xor
fcmovbe
cmp
and
cmp
jno
inc
xchg
shlb
or
dec
int3
mov
aad
loopne
aas
adc
sbb
pop
mov
mov
inc
loop
xor
aaa
cmpb
sbbb
or
divl
sbbb
mov
pop
and
test
lret
aas
add
in
or
sbb
fsubp
inc
test
cli
xchg
jge
aas
fcoml
ss
xor
stos
jno
xchg
dec
mov
cmp
sbbl
dec
mov
dec
mov
clc
neg
mov
inc
in
iret
clc
cmp
inc
xorb
pop
gs
inc
sub
inc
adc
or
aad
mov
cmp
lret
adcb
xor
fisttps
pop
movsl
mov
xor
imul
ljmp
in
mov
fildll
mov
adc
or
sub
mov
out
aad
mov
mov
lea
fiadds
outsb
adc
mov
daa
in
adc
dec
out
push
inc
mov
fwait
jmp
cmpsb
in
mov
inc
mov
add
dec
push
xor
mov
jl
mov
jnp
out
xchg
fcomps
push
das
xor
xchg
and
mov
cmp
jnp
jnp
xor
test
aam
incl
mov
rcrl
imul
sbb
cmp
shrl
aam
adc
std
xchg
pop
test
popa
sahf
sub
add
out
mov
xchg
pop
imul
aam
decl
mov
nop
int
stos
jge
mov
xor
int
mov
aam
push
fidivs
inc
lret
mull
mov
stc
push
push
mov
push
shll
bound
cmp
scas
cld
mov
sbb
cli
sti
dec
daa
sbb
or
enter
dec
les
mov
gs
sti
cmp
data16
scas
pop
mov
cli
pop
stos
insl
cmpsl
and
or
add
lods
sbb
adc
je
in
pusha
lret
pop
je
adc
inc
into
mov
dec
rcll
push
mov
shlb
imul
fisttpl
mov
pop
mov
ret
push
fnstsw
sbbb
sub
lret
cmpsb
test
push
imul
je
sub
adc
mov
xchg
xor
sub
out
or
pop
repz
inc
dec
add
out
push
fcomp
in
xor
outsb
xor
or
pop
push
push
add
outsl
cli
add
ja
ret
mov
pop
lock
dec
out
adc
lds
hlt
xor
push
inc
push
mov
jbe
hlt
fwait
fists
mov
mov
lds
cmp
pop
add
pop
lahf
push
adc
je
sbb
ja
mov
movsb
mov
xor
loop
bound
out
and
scas
sub
aaa
into
int3
push
dec
and
or
sub
xchg
and
jp
dec
sub
test
or
push
or
cld
fildll
and
fcmovnu
push
mov
xchg
lret
mov
imul
jae
test
cmp
inc
in
nop
sahf
enter
ret
sbb
dec
daa
or
dec
stc
sub
or
movsb
xor
outsb
xchg
das
push
add
test
lret
push
mov
arpl
jge
test
sub
pop
push
outsl
fisubrs
pop
jae
mov
push
jbe
scas
addr16
push
fwait
shl
bsr
ret
pop
xchg
ljmp
call
cltd
mov
and
mov
jb
arpl
rcrb
inc
hlt
jp
or
fstpt
mov
outsb
and
fidivrl
sbb
mov
xor
stc
ret
mov
icebp
sbbb
int
lods
mov
sbb
loopne
lock
fwait
adc
gs
int3
cmc
dec
outsb
lcall
cld
jecxz
aad
mov
adc
das
cli
std
add
jg
rclb
add
jp
lods
add
pop
adc
ret
mov
mov
push
xchg
and
push
pusha
aad
es
and
and
lods
ljmp
jge
push
shll
loopne
mov
sahf
sti
ucomiss
add
pop
jnp
enter
sbb
mov
fdivrl
push
push
sub
sbb
insb
mov
sbb
mov
mov
mov
fisttpll
shll
sub
sbb
stos
lret
lahf
test
jne
outsl
dec
jne
inc
mov
jae
dec
int3
sbb
test
jmp
aad
xchg
out
leave
hlt
ret
mov
in
or
jp
add
add
idiv
testl
imul
fistpll
es
repz
int3
adc
sub
and
aaa
shr
mov
mov
push
fcmovnb
imul
bound
aam
fimuls
repz
or
rorl
shll
lock
popf
cmpsb
ja,pt
add
test
sub
clc
pop
mov
sub
lahf
cld
push
jo
mov
adc
inc
das
xchg
sbb
jnp
mov
add
fdivl
ret
stos
cld
or
jmp
lret
inc
sbb
imul
jno
in
xor
idivb
and
push
out
dec
mov
sbbl
pop
adc
and
popf
sub
repz
push
xor
inc
gs
aam
dec
enter
das
mov
pop
pop
sbb
push
mov
inc
imul
scas
enter
xor
repz
pop
jns
test
enter
rcrb
mov
int3
cmc
xor
je
adcb
clc
xchg
xchg
pop
cmpsl
jbe
mov
jbe
mov
jge
xchg
xor
dec
xor
nop
out
mov
mov
icebp
mov
orl
pop
negl
iret
pmulhuw
cmc
jae
xchg
xchg
pop
sub
stos
push
inc
das
fidivl
jnp
pusha
push
push
adc
lock
into
mov
adc
sub
fcompl
mov
cmp
int3
ret
insl
mov
xchg
sbb
xchg
nop
mov
cmc
xchg
cs
gs
adc
loopne
fiadds
cmc
pushf
xor
xchg
pop
jo
test
push
push
imul
jecxz
cmovne
sbb
out
jb
or
ja
mov
nop
sub
stos
ljmp
addr16
xor
sub
xlat
sbb
and
cmp
push
stos
lret
push
cs
sti
adc
inc
insb
mov
cld
lret
xchg
test
gs
pop
inc
clc
jp
pusha
cmpsl
aas
mov
jecxz
fcoms
lahf
xchg
pop
inc
in
mov
sub
decb
mov
jge
adc
outsb
push
mov
sbb
icebp
mov
sub
jne
cld
les
imul
mov
daa
lock
scas
sub
mov
add
mov
mov
nop
cld
imulb
fisubs
push
jmp
pop
xlat
push
mov
mov
movsl
dec
mov
aas
pop
add
pop
dec
movsb
cs
mov
daa
roll
lahf
mov
shll
jne
test
dec
lds
int
xchg
adc
sub
ja
jo
ljmp
jecxz
mov
mov
pop
pusha
xchg
cld
xchg
lods
sub
repz
jo
in
ret
dec
mov
sub
test
stos
jl
das
call
xor
sbb
fistps
or
stos
loope
push
or
dec
adc
push
leave
out
push
in
imul
mov
arpl
jne
out
adc
cld
mov
dec
xlat
dec
aad
jg
sbb
xor
mov
jle
cltd
aaa
mov
xor
test
jnp
and
mov
sbb
pop
lahf
out
mov
pop
pop
stc
adc
jle
popf
xchg
pop
mov
jl
iret
aam
mov
push
and
sub
and
sti
xchg
in
lahf
xor
push
out
pushf
enter
icebp
jo
hlt
sbb
sub
push
lret
cmp
movsl
ret
pop
pushf
aas
movsl
xchg
es
and
jmp
into
xor
sbb
fildl
pop
jbe
mov
push
xlat
call
imull
ds
push
sub
loopne
inc
aas
pop
cmp
pop
pop
add
daa
sbbl
jne
js
outsb
cmpb
scas
mov
shlb
jge
add
negb
mov
mov
and
and
fs
call
call
adc
jb
das
cld
out
fwait
push
sub
mov
sbb
inc
imul
dec
stos
movsb
push
imul
sti
scas
or
pop
mov
aas
cli
sbb
dec
int
into
pop
ds
dec
xor
adc
mov
mov
xor
mov
or
dec
pop
fwait
mov
pop
mov
pop
cmpsb
sbbb
dec
mov
cmpb
js
pop
sub
adc
orb
inc
out
xchg
shll
push
mov
call
xor
out
lret
cwtl
add
or
popf
sahf
xor
mov
pop
pop
pop
cmpsb
aad
das
cwtl
mov
insb
int3
enter
or
xchg
mov
push
cmp
add
imulb
sub
addr16
lahf
push
sbb
mov
mov
cmp
cwtl
test
sar
in
sahf
fldt
cmp
cmp
jle
xor
pextrw
mov
mov
pop
xor
xor
pusha
add
mov
mov
mov
shl
jp
jmp
sbb
push
cltd
jne
sub
shrl
inc
mov
aam
cld
loop
cmp
add
js
int
repnz
fsubrs
test
adc
mov
mov
mov
fwait
cli
cmp
xchg
mov
pop
les
mov
mov
add
sub
dec
pushf
gs
iret
popf
sub
xor
sub
sbb
push
and
and
push
out
push
icebp
xchg
cwtl
cmpsb
fildll
push
dec
and
scas
adc
cmp
xor
pop
mov
test
xor
xor
jp
loope
std
js
int3
dec
fwait
pop
push
call
imul
add
fsubr
aas
test
imul
ret
mov
daa
lret
je
and
in
pop
loope
push
mov
jp
inc
push
pop
jecxz
pop
xchg
lods
es
mov
push
mov
mov
mov
testb
pshufw
cli
insl
mov
daa
jg
and
ja
aaa
out
sub
je
test
pop
movsb
fmuls
jno
cmp
enter
xor
inc
mov
mov
pop
add
xchg
mov
dec
inc
std
jl
cmp
mov
add
sbb
sti
pop
pop
pusha
pop
cltd
add
ret
ret
loope
lcall
cmp
into
cli
mov
xchg
fs
sbb
in
push
xchg
out
mov
adc
ds
ss
cld
pop
in
inc
loopne
pop
push
inc
ds
int3
pop
pushf
add
inc
or
mov
mov
je
xorb
lock
sbb
into
dec
outsl
shrl
pop
std
xor
scas
add
mov
fwait
outsl
or
push
sahf
sub
adc
out
pushf
pop
js
or
cltd
or
jne
inc
cmpsb
add
popf
loopne
xchg
gs
xchg
psllw
sub
cmpb
mov
outsb
mov
test
sub
data16
cmp
test
xchg
aam
dec
cmp
dec
sbb
xor
pop
adc
xor
mov
les
data16
sub
shlb
nop
or
mov
js
or
out
pop
mov
pushf
jnp
xchg
rcll
jno
test
pop
sti
andb
icebp
ret
jne
cli
mov
mov
outsb
adc
sarb
mov
movsb
fsubs
stos
mov
add
push
mov
jl
mov
and
out
pop
lods
insl
adc
in
das
pop
iret
mov
out
pop
cmc
scas
fnsave
orb
jns
mov
xor
insb
es
jecxz
sbb
sbb
enter
test
mov
rcll
mov
insl
xchg
cmp
leave
xchg
bound
adc
and
dec
test
cmp
xchg
pop
push
jmp
sahf
and
pusha
js
inc
add
dec
js
jne
mov
add
cli
xor
mov
mov
nop
add
push
enter
notb
jae
adc
cmp
lret
cmp
add
inc
sub
rcl
and
fwait
xor
out
mov
mov
sti
ret
jg
inc
sbb
int
hlt
and
mov
lods
push
fistpll
repnz
push
dec
and
or
mov
jle
jmp
mov
les
lret
jl
add
sub
insb
mov
push
movsl
sti
push
mov
mov
movhps
int3
insb
hlt
sub
loop
pop
popf
mov
cmp
loope
iret
xchg
dec
loope
imul
in
mov
movsb
rcrb
cmpsl
pop
xor
mov
push
mov
filds
cmp
addr16
cmpsb
and
xor
in
adc
mov
repnz
popa
popa
pushf
pop
pop
or
lret
mov
dec
add
fiadds
xor
packsswb
in
jns
fldln2
xchg
and
idiv
ja
cld
jmp
cltd
daa
ja
or
dec
lods
sbb
adc
lds
xchg
clc
je
mov
insl
add
cmc
in
dec
int
pop
adc
sbb
test
xlat
movsl
jnp
dec
or
nop
dec
popa
and
cmp
ja
mov
push
cmc
xlat
push
jbe
shrb
mov
sub
leave
lds
insb
sub
scas
bound
ret
scas
and
dec
inc
lds
movl
pop
xorl
cmpb
cmp
or
leave
cmpsl
test
aam
inc
movsl
in
pop
cmpsl
lcall
enter
adc
lods
push
mov
cltd
in
pusha
mov
rcll
or
fdivrs
mov
pop
mov
in
hlt
popa
dec
insb
scas
mov
dec
mov
fcmovnbe
int
popa
xchg
test
loopne
jg
nop
or
fidivl
push
sub
sub
push
fimuls
pop
jb
sti
mov
cmp
push
hlt
pop
dec
aas
imul
dec
sub
cmpsb
repz
push
mov
movsl
xor
lcall
jecxz
add
mov
enter
dec
xor
push
inc
ucomiss
push
inc
leave
call
push
mov
mov
pop
dec
icebp
mov
dec
mov
divl
sbb
adc
test
lcall
jp
push
jle
sbb
bswap
add
es
and
test
adc
scas
mov
xchg
outsb
mov
xchg
sub
pop
adc
dec
cld
add
and
ret
pushf
subl
bound
pushf
loop
int3
addl
out
jle
testl
xchg
mov
xchg
mov
jno
repnz
sub
out
dec
dec
in
mulb
addr16
jns
lret
mov
push
xlat
daa
es
mov
push
cmpb
or
cmpsl
dec
pop
cwtl
stos
mull
push
dec
jnp
or
mov
or
push
data16
jno
cmp
push
and
pop
or
inc
pop
mov
scas
add
inc
xchg
pop
push
inc
aas
add
pop
mov
fstl
xor
pop
add
mov
imul
lret
dec
or
les
subb
or
pusha
adc
outsb
pop
inc
jle
inc
push
or
imul
add
and
sub
push
jge
out
mov
out
loope
incl
add
fs
bound
iret
mov
popf
mov
call
cld
add
sti
ja
xor
shll
lret
addr16
call
push
mov
adc
or
test
pop
cmpsl
sahf
pop
mov
jae
fsubrl
iret
sbb
fs
sub
cmp
inc
cli
mov
sbbl
pop
push
mov
jp
mov
data16
or
mov
repz
or
push
xor
rolb
cmp
popa
mov
push
les
mov
pusha
sub
sbb
xor
int
jp
cli
xor
daa
pop
sub
ss
sbb
mov
popf
call
jecxz
cmp
inc
and
push
cmp
sbb
rcr
mov
adc
ja
add
fisubrl
jnp
je
mov
cmpsb
loopne
stos
fsubl
adcb
insl
addr16
inc
pop
pop
and
in
xor
fldt
xchg
mov
ds
repz
test
call
mov
bound
lahf
push
mov
out
insl
decb
ja
roll
jp
lcall
ret
mulb
out
outsl
out
mov
sbb
add
mov
lods
into
push
push
mov
push
and
pop
cmpsl
pop
call
fsubp
sbb
orl
rcr
sahf
jnp
in
rcrb
jmp
aaa
test
inc
test
sbb
sub
fldt
imul
adc
mov
call
xchg
lret
sbb
and
push
dec
add
add
ret
sarl
jne
mov
mov
stc
ds
shl
jne
dec
push
popf
mov
les
push
mov
pop
outsb
stc
sub
push
adc
pop
pop
ret
sbb
popa
xchg
div
pop
scas
dec
imul
jbe
cmp
jbe
movb
enter
inc
icebp
sbb
push
dec
enter
mov
xchg
out
into
mov
loop
aas
mov
lahf
mov
mov
mov
push
fbld
push
pop
xchg
add
add
cmp
mov
mov
jae
fsubp
cld
ljmp
ret
imul
ss
mov
decl
or
ja
mov
ficomps
push
mov
bound
sahf
push
jl
fs
les
push
sbb
cmpb
mov
iret
sub
cmp
sbb
fmull
lret
shr
sahf
push
dec
push
dec
fiaddl
sub
daa
je
pop
mull
inc
mov
fsubr
jbe
fwait
test
and
dec
out
xchg
xor
push
loop
aam
mov
pusha
je
imul
lods
lea
mov
mov
dec
pop
es
mov
pusha
mov
jle
pop
sti
mov
and
adc
pop
inc
add
xor
cmp
adcl
mov
aad
mov
dec
sti
dec
mov
jae
in
mov
outsb
jae
stos
repnz
jnp
mov
out
aas
icebp
mov
rorb
xchg
es
push
icebp
sahf
int3
aam
daa
dec
adc
sbb
push
movsl
nop
ja
icebp
icebp
and
sub
pop
stc
jo
xchg
mov
ja
push
jge
xchg
scas
sub
adcl
test
inc
sbbb
pop
add
sar
sahf
or
cld
xlat
or
shrb
mov
andps
xor
jecxz
bswap
add
mov
mov
lahf
xor
inc
inc
rcr
lret
inc
dec
or
loopne
andl
push
jmp
fdivrl
rolb
bound
scas
aas
push
sub
insb
mov
arpl
rcrl
popf
pminsw
ja
cmp
testl
lock
push
cmp
mov
cmpsb
jne
std
pop
stos
mov
push
imul
out
cmp
jb
lea
bound
push
stos
outsl
test
shl
xor
jnp
inc
push
sarl
test
push
dec
push
testl
adc
loope
iret
outsb
xlat
mov
jp
jle
daa
outsb
jno
sbb
cltd
subl
shll
insb
adc
es
mov
push
pop
ss
or
sub
push
mov
add
je
movl
cltd
mov
int3
insb
test
add
pop
rorl
jg
jle
jo
xor
sbb
std
inc
adc
xlat
pop
mov
ret
fneni(8087
hlt
shl
call
adc
push
mov
int
arpl
inc
fisubrl
in
push
dec
adcb
push
clc
sub
mov
add
popf
stos
and
push
add
mov
lret
jge
in
mov
out
repz
sbb
das
lods
fcoml
aam
dec
mov
fcoms
hlt
ds
sbb
aaa
stos
push
cmp
lcall
push
inc
nop
icebp
xor
fcom
test
add
fcomps
jno
adc
int
lret
pop
subl
xchg
in
jb
sbb
fcmove
fwait
leave
mov
adc
or
fidivl
dec
idivl
adc
and
bound
inc
ja,pt
cwtl
lea
fisubs
cmp
sti
xchg
iret
mov
fmuls
xor
add
insb
mov
fwait
in
iret
xchg
jg
add
popa
out
out
dec
pop
push
xor
dec
push
pop
sub
jmp
popa
sbb
mov
in
push
insb
roll
pop
mov
test
xor
pusha
jno
aas
jb
cld
lods
mov
cmp
repnz
pop
cmpsl
in
int3
add
sbb
pop
mov
lds
xor
or
into
sub
jo
and
lret
dec
sbb
mov
lret
dec
mov
push
sbb
mov
cmp
imul
lock
dec
sbb
lahf
jl
jmp
rcr
push
ds
lods
add
adc
ss
in
add
cltd
push
xlat
or
mov
cld
cwtl
sahf
xor
jno
sub
push
cmp
test
dec
outsb
mov
in
scas
dec
sub
ss
ds
insl
clc
inc
or
imul
xchg
fcoms
sbb
sbb
mov
sub
outsl
push
test
out
aas
adc
pop
add
or
adc
icebp
jecxz
dec
sub
popa
repz
out
push
ficoms
dec
push
lods
mov
inc
aad
push
cltd
scas
pop
inc
fs
sahf
mov
aas
ret
jmp
cmp
cmp
aad
outsb
stc
stos
mov
enter
std
imul
icebp
mov
dec
pcmpeqb
nop
pop
pusha
dec
sub
or
push
pop
dec
push
outsb
jo
stc
ljmp
lds
hlt
or
xor
daa
fsubs
pop
inc
adc
addr16
loopne
mov
sub
orb
mov
jecxz
xlat
scas
push
push
jnp
jns
popa
sub
cmp
leave
daa
sub
adc
mov
mov
popa
clc
int
mov
sti
mov
sti
ficomps
push
jnp
push
xchg
addr16
pop
sbb
push
rclb
scas
inc
lcall
dec
mov
js
push
mov
inc
fwait
icebp
mov
mov
or
div
fdivrs
sub
int3
sbb
adc
xchg
mov
ds
xor
clc
cmp
xor
push
loope
dec
data16
mov
fstl
pop
sbb
jecxz
loopne
adcb
mov
and
mov
sbb
xchg
stc
std
xor
stc
pop
or
cmp
lea
pop
test
leave
cmp
and
repz
orb
inc
mov
sbb
or
add
or
scas
inc
sub
mov
dec
mov
mov
loop
les
jmp
loope
add
ret
pop
imul
in
dec
sub
jge
xchg
xchg
test
jno
cli
add
pop
jo
mov
scas
rorl
fisttpl
cli
cmpsb
mov
jp
into
leave
jno
push
movl
push
dec
xchg
inc
and
push
repnz
add
cmp
fcomps
dec
add
dec
jp
mov
pop
dec
jecxz
and
adc
pop
jno
fstps
mov
gs
jne
push
outsb
mov
clc
dec
sub
mov
xor
sub
jl
clc
shll
out
mov
dec
xor
adc
mov
in
iret
mov
push
mov
out
push
out
or
inc
rorb
neg
push
fcmovb
and
jle
nop
aad
cmpsb
hlt
mov
inc
icebp
loop
imul
fwait
sbb
pop
lahf
mov
inc
or
and
lods
pushf
int3
sub
mov
getsec
scas
or
xlat
and
pusha
xor
adc
push
int
clc
pop
inc
xor
scas
adc
dec
cmc
add
lcall
jno
jns
lock
cs
lahf
adc
pop
xchg
lret
cli
imul
jae
dec
add
in
jne
or
popf
xchg
js
or
dec
xchg
mov
out
mov
jne
xchg
movsb
xchg
pushf
pop
loope
ret
in
insl
out
imul
rol
add
out
push
pop
pop
lods
pop
ja
mov
ss
jae
jns
add
cltd
add
out
mov
adc
imul
daa
pop
adc
add
aam
mov
fistpl
and
sub
push
cs
test
enter
pusha
es
in
in
loope
cmp
ljmp
mov
mov
xor
bound
aas
inc
aad
stc
or
subl
mov
mov
xor
inc
insb
push
inc
sbb
int3
bound
jmp
push
leave
ret
sbb
jae
push
andb
mov
xor
arpl
and
repz
clc
aaa
fwait
std
xchg
ret
std
push
cli
popf
pop
pop
or
rorb
add
daa
fnsave
inc
add
loopne
inc
sbb
aad
lds
xchg
mov
scas
mov
sbb
cmp
pop
xor
cmp
lods
add
jns
push
das
sbb
fdivrl
ret
test
mov
adc
mov
xor
jmp
adc
subb
xchg
push
mov
lods
js
or
movsl
nop
cmp
inc
mov
xchg
das
cwtl
jo
cltd
xor
enter
pop
arpl
adc
pop
outsl
adc
imul
test
pop
mov
insl
cld
inc
into
mov
xor
loopne
stos
ret
inc
push
jbe
paddsb
inc
ss
xor
sahf
mov
idiv
sbb
cmp
lahf
imul
cmp
pop
or
mov
lcall
pop
jno
les
jno
push
sub
je
out
jge
mov
or
lret
cmp
aas
imul
xor
rcr
je
aad
mov
lods
xchg
cmp
fs
mov
bound
xchg
dec
ret
bound
das
aaa
or
in
aam
mov
cmpl
mov
repz
sub
jge
and
pop
inc
adc
jb
mov
push
xor
xor
mov
out
xchg
jns
lret
mov
xlat
scas
test
lods
mov
adc
int3
or
fsub
cmc
pop
mov
out
inc
je
cld
lahf
sbb
mov
popa
add
or
out
in
add
mov
add
adcl
adc
addr16
sub
mov
fsts
jbe
stos
xor
cmp
ret
movsb
jecxz
xlat
and
mul
xchg
pop
ja
and
sbb
cs
popa
popa
arpl
lods
push
out
es
test
xor
xchg
clc
rol
stos
cwtl
pop
mov
sti
int3
data16
dec
mov
adc
scas
popf
mov
jbe
sub
mov
add
or
test
pop
adc
fcmovbe
adc
push
inc
lods
pop
adc
push
mov
adc
mov
jl
push
adc
into
rolb
push
mov
aam
mov
rcrb
jl
pop
cmpsl
push
dec
test
mov
aad
in
add
jb
popf
popf
inc
mov
nop
stos
or
adc
nop
cs
imul
push
insb
mov
out
xor
inc
test
pop
cmp
sub
sbb
test
sbb
dec
cmc
sbb
or
cwtl
push
iret
add
cli
lock
xchg
jns
fdivrl
incb
popf
or
addr16
jg
push
ret
ljmp
pop
cs
push
ljmp
add
sub
or
sahf
jge
stc
hlt
mov
or
jb
cmpl
or
xlat
mov
lods
aad
lock
cwtl
ret
sub
out
sbb
mov
xor
jl
popf
insl
xor
push
iret
jp
popa
out
bound
mov
nop
addb
fsubr
iret
js
pushl
mov
sub
mov
outsb
aad
xor
sbb
xchg
fwait
ret
xor
push
cli
sub
push
add
fistl
movsb
lds
sbb
inc
sub
cltd
movsb
adc
dec
rolb
mov
and
sub
dec
mov
aam
test
arpl
jmp
iret
xchg
sahf
adc
jbe
adc
jne
out
add
mov
pop
push
outsl
clc
push
movsl
test
xor
mov
pusha
push
pop
orl
outsb
aas
dec
mov
bound
decb
ds
jae
out
lahf
or
inc
div
ds
sub
cmpsb
stc
test
addr16
dec
xlat
rcrl
dec
fdivp
or
enter
mov
push
xchg
jno
sahf
inc
adc
push
lret
jmp
dec
cmp
and
aam
adc
aad
inc
loope
in
loope
pop
or
out
push
jmp
sub
out
sub
and
outsl
pop
in
cmpsl
xchg
push
adc
ljmp
push
jle
call
jno
xchg
or
push
cmp
sti
mov
push
pop
add
mov
gs
outsl
mov
mov
lock
outsb
inc
dec
pushl
or
popa
lahf
pop
in
daa
subb
jg
sbb
mov
dec
cmp
xchg
popf
lret
sub
push
enter
popa
or
sbb
adc
push
and
stc
inc
push
push
mov
lods
sbb
mov
cmpsl
pop
insb
sti
adc
xchg
filds
inc
fists
and
or
sbb
pushl
in
add
and
out
xchg
arpl
pop
ja
adc
sub
jmp
movsb
fiadds
add
daa
frstor
frndint
jbe
and
or
inc
pop
stc
das
fmull
or
pop
rcrl
xchg
adc
jg
lahf
xor
push
lock
ret
loopne
mov
loop
popf
addb
pop
mov
and
push
pop
xchg
mov
cltd
sarb
jbe
test
fstpl
cmp
aas
xchg
xlat
in
mov
mov
popa
jle
or
jno
rcl
cmp
jb
push
xchg
rolb
test
jne
adc
jmp
lea
stc
jns
inc
stos
add
xchg
test
dec
dec
stos
cltd
pushf
jno
sub
sti
xchg
inc
sub
pop
mov
aas
and
dec
push
cmp
push
dec
and
jns
jge
lret
mov
int
jp
sbb
jl
xchg
int3
lahf
xor
in
mov
addb
outsl
mov
mov
ja
sbb
and
sbb
cs
push
test
das
scas
push
ss
inc
jg
xor
jp
daa
icebp
add
pop
or
in
cmp
adc
and
movsb
mov
rorb
fistpll
in
divl
imul
pop
lods
mov
cli
sub
sub
cli
jns
mov
sbb
jge
loope
sbb
sarb
cmp
and
jbe
subb
cmp
xchg
dec
mov
test
test
sbb
stos
jnp
inc
and
popf
es
pop
xchg
scas
push
out
cmp
mov
addr16
push
outsb
incl
pushf
mov
sub
cwtl
add
pop
iret
addr16
popa
lds
test
movsb
loopne
lods
cmp
mov
andb
inc
bound
stos
sbb
pop
insl
cmc
or
popf
fs
in
rolb
add
aam
stos
int3
js
xor
decl
push
jecxz
xchg
mov
nop
jl
or
add
mov
xchg
xorb
mov
imul
pop
xchg
mov
cmp
dec
sbb
pushf
adc
mov
pop
test
adc
mov
xchg
mov
ljmp
sbb
jns
add
xchg
in
sub
icebp
cmpsl
aaa
sub
mov
lods
fwait
das
test
pop
jmp
jno
pop
dec
lret
rol
fsubl
or
xor
cmp
popa
imul
test
mov
or
xchg
pushf
inc
pop
pop
jne
inc
xchg
enter
arpl
pop
push
add
dec
push
cmp
add
jmp
push
sti
add
inc
je
mov
sub
pushf
in
jo
popa
push
jno
xchg
int3
mov
jno
adc
and
andb
rol
inc
and
repz
push
sbb
push
add
ss
mov
jmp
and
mov
ds
mov
add
scas
cmp
lcall
add
cld
cmp
pop
jmp
aas
aaa
sub
and
cmp
cmp
cli
cli
lcall
mov
cli
aaa
frstor
inc
push
pop
call
mov
nop
xor
or
arpl
fnstcw
pop
aad
rol
sbb
xchg
pop
call
ficoml
loope
unpckhps
nop
xor
loop
iret
aas
cmpsb
scas
sbb
fmull
jae
inc
shll
lret
pop
mov
loope
push
and
andb
push
and
or
cmc
mov
ljmp
aas
add
fdivrl
mov
push
push
je
call
fdivrs
nop
fdivl
rcll
and
ja
jmp
sub
mov
push
cmp
sbb
aam
inc
xchg
pop
insl
mov
xchg
cmpsb
xchg
jg
mov
inc
into
mov
jne
or
dec
push
popf
clc
xchg
loope,pn
shll
out
xchg
ljmp
imul
jge
push
sbb
push
pop
lods
add
loopne
add
outsl
jle
insb
cwtl
pop
mov
add
aam
inc
nop
fildl
ret
ss
push
sbb
std
xor
adc
push
jl
cmp
mov
xchg
data16
add
xchg
ss
adc
push
mov
push
cwtl
jo
cmp
imul
push
jno
jne
inc
mov
lods
or
je
adc
push
movsl
inc
nop
aam
inc
jo
mov
mov
rolb
cltd
iret
sarb
orps
les
mov
push
fdivs
inc
repz
inc
testl
add
lcall
xor
aad
rcrl
mov
stos
add
hlt
imul
lods
cs
dec
icebp
fs
add
popa
pop
xchg
jcxz
test
sbbl
loopne
popf
and
cld
stos
cmp
fwait
negb
or
aaa
mov
adc
xchg
je
lds
and
push
pop
imul
cld
xor
cwtl
fiaddl
repnz
imul
loopne
aad
or
nop
sahf
sub
sbb
cmp
ds
ret
sbb
lds
mov
pop
lahf
arpl
ficompl
push
hlt
icebp
repnz
xchg
mov
pop
cltd
adc
xchg
mov
push
sbb
repz
outsl
shlb
mov
push
int
add
pushf
test
and
jns
jmp
jns
nop
adc
stos
ss
pusha
sub
pop
cli
mov
hlt
test
jle
mov
xor
and
repz
arpl
js
pop
push
movsb
pop
adc
inc
push
cwtl
mov
inc
xlat
pop
imul
dec
movsb
mov
and
or
cmp
dec
mov
push
sub
mov
mov
iret
data16
and
test
mov
gs
jne
insl
cwtl
ds
xchg
mov
rorl
pop
sahf
dec
xchg
adc
sti
mov
xchg
insl
dec
pop
dec
movl
loop
cmp
decl
adc
cld
dec
xchg
in
cmp
adc
mov
jmp
insl
sbb
push
data16
inc
push
mov
mov
scas
add
mov
sbb
out
jo
loopne
fsts
test
test
outsl
pop
push
jno
or
fsubl
repnz
scas
pop
sbb
out
adc
xor
mov
and
loop
scas
scas
int
stos
imul
loope
dec
xor
outsl
test
xor
pop
dec
inc
mov
cmp
into
jns
shlb
insl
ret
cmp
inc
scas
insl
sbb
mov
ds
negl
adcb
in
push
add
subb
jae
ds
in
push
es
enter
dec
mov
ret
xchg
jb
cmp
test
mov
jmp
enter
pop
cmp
iret
sbb
dec
mov
mov
sar
das
push
xchg
jbe
jbe
lds
mov
or
dec
cmc
or
mov
out
pop
sbb
push
popa
add
ret
lea
add
mov
xchg
test
stc
dec
jnp
movsl
decb
pop
je
stos
jmp
aam
inc
pop
iret
ja
hlt
mov
cmp
movsl
add
fstps
repz
insl
push
jle
fnclex
add
or
shl
jnp
sarb
lret
hlt
iret
ljmp
pop
icebp
je
sub
je
cltd
das
adc
mov
loopne
scas
push
mov
pusha
wrmsr
cli
nop
loopne
sahf
mov
or
jg
push
mov
sarl
push
scas
ss
loope
std
pop
pop
roll
in
std
ss
mov
ss
mov
ficoml
pop
daa
sub
mov
mov
xchg
mov
mov
sbb
pop
sub
cmp
mov
add
dec
mov
in
pop
popa
and
mov
xor
addl
mov
mov
lods
ljmp
add
mov
test
ret
sub
push
xor
iret
in
aad
test
mov
inc
pop
xor
xor
cmp
mov
aad
cmp
and
or
jb
and
inc
ret
scas
mov
outsb
je
pop
cmp
sbb
and
int
dec
out
push
lret
pop
js
adc
add
dec
in
arpl
cli
push
and
cmp
lea
push
cmp
mov
into
or
and
mov
mov
fwait
mov
mov
pop
movsl
adc
inc
daa
push
xchg
sarl
mov
mov
aas
imul
enter
cmp
outsb
iret
add
cmp
xor
lcall
imul
fwait
jge
xchg
jns
dec
adc
loopne
popf
add
andb
ficoms
adc
imul
mov
inc
sub
rorb
mov
int
xchg
xor
pop
mov
jmp
lods
sbb
push
lock
mov
cmpsl
fdiv
call
dec
xchg
ds
rolb
pop
fwait
movsb
pop
dec
outsb
testl
adc
xchg
cmp
sub
dec
xchg
sub
jp
xlat
clc
and
inc
aas
or
dec
test
jne
jg
sbb
out
xor
xchg
sub
jne
sbb
cmp
int3
in
repnz
test
dec
push
test
test
dec
ds
mov
in
loope
enter
popf
mov
xlat
cli
sub
and
xchg
imul
icebp
leave
push
test
js
cltd
add
popf
fsub
sbb
lea
pop
and
out
fwait
push
cltd
sbb
push
and
fistl
aad
cmp
xchg
sbb
adc
outsl
insl
push
add
aaa
or
lcall
mov
pop
pop
mov
adc
push
cmpsb
push
outsb
sbb
into
xchg
mov
xor
ret
mov
dec
psubsw
stos
enter
xchg
sti
mov
dec
in
xchg
mov
arpl
push
jb
mov
jle
pop
iret
adc
jbe
pushf
fldcw
ljmp
pop
inc
je
lods
lds
jge
dec
mov
ss
arpl
sbb
jle
mov
xlat
ret
xlat
enter
mov
or
adc
inc
gs
outsl
fists
and
inc
adc
inc
lahf
xor
loop
and
jne
lods
sbb
fildl
leave
outsb
hlt
popa
dec
mov
sub
out
mov
fsub
lds
jge
outsl
sbb
add
pop
mov
in
movsl
leave
cmpsb
les
sbb
hlt
loopne
sub
gs
outsl
bndldx
movsl
mov
jle
outsb
lea
pop
rcll
aas
add
in
pushf
punpckhwd
ja
loope
out
xor
inc
xchg
cmp
insl
lcall
cmp
add
test
fcoms
scas
mov
or
fmuls
arpl
mov
idivb
insl
outsb
leave
lds
rcrb
mov
fs
ffree
inc
or
or
jnp
jno
lcall
mov
jns
pop
pushf
pusha
jecxz
push
loope
test
jle
xor
fs
test
add
cmp
jbe
lahf
out
pop
xchg
inc
xchg
leave
insb
fdivs
ret
sbbl
imul
cmp
stc
xchg
mov
jb
test
push
mov
jb
ds
insb
or
out
and
icebp
sub
sarb
inc
jmp
int3
add
out
xorl
mov
mov
out
addr16
daa
cmp
mov
rolb
rcrb
and
jle
sbb
pop
fstp
inc
inc
dec
xchg
insl
mov
loop
inc
mov
mov
loope
dec
flds
int3
jno
cltd
popl
xor
pop
aam
xchg
adc
int
or
push
addl
pop
out
mov
addr16
or
movsl
loope
sub
test
jnp
inc
loop
push
or
lcall
sbb
outsb
xor
arpl
jle
sub
xlat
ror
movsb
cmpsb
inc
out
test
push
sub
push
in
xor
cmpsl
cmpsb
scas
jnp
leave
daa
sbb
xchg
adc
movsb
cli
pop
sarl
adc
sahf
push
lret
push
in
dec
cmpl
repnz
push
dec
mov
dec
test
pop
test
xchg
and
shll
push
xor
inc
incl
push
sahf
daa
js
or
add
cld
inc
addr16
jmp
pop
les
dec
pop
mov
out
lret
ret
cmpsl
push
mov
nop
negl
rolb
bound
movl
addr16
pop
pop
add
fmulp
pop
adc
inc
int
fidivs
add
and
sub
aad
into
scas
sub
and
in
sub
icebp
cmpsb
pop
adc
lock
dec
mov
loope
mov
popf
jle
scas
outsb
insl
roll
or
imul
xchg
mov
scas
sahf
add
addr16
fs
scas
ret
push
push
scas
add
jne
or
es
adc
fdivs
jg
xor
mov
and
dec
aad
xchg
push
test
inc
pop
inc
fwait
xor
int3
test
sarl
cmc
pop
cld
sub
pusha
mov
dec
mov
add
or
das
pop
jge
dec
pop
pop
lds
cs
out
sbb
andb
sub
xor
push
incb
fldl2e
sar
dec
jno
lods
scas
in
std
test
in
shrl
mov
outsb
enter
add
xchg
adc
pusha
fimuls
jbe
in
jmp
cltd
imul
sub
imul
enter
stos
test
cld
fsubl
mov
xor
leave
movsl
xchg
icebp
push
or
adc
mov
adc
mov
clc
imul
fists
and
lahf
sub
ds
jge
pop
add
out
jl
roll
mov
jge
cmovs
xor
fcmovu
cmp
in
das
mov
cmpsb
sub
push
andl
hlt
adc
jg
hlt
or
inc
test
enter
add
sub
xorb
outsl
fadd
cs
pop
mov
aam
movsb
add
ret
fwait
sbb
xor
xchg
mov
enter
test
adcb
push
push
int
xchg
ja
pushf
xor
pop
jmp
and
xor
outsb
cmp
adc
arpl
pop
push
ficoms
jbe
mov
push
ret
cmp
fsubrs
xchg
scas
dec
and
in
push
lcall
and
js
add
xchg
dec
pop
cmp
jg
test
mul
xchg
jge
dec
incb
or
pusha
in
pushf
icebp
test
mov
mov
or
xor
dec
xchg
mov
loope
insb
and
dec
cmp
jnp
cmp
xchg
data16
test
ja
inc
fsubr
push
test
movsl
push
jmp
sbb
and
in
mov
mov
cmp
inc
pop
xor
rolb
outsb
mov
jo
leave
aaa
fwait
out
cmpsl
inc
mov
stos
aad
cltd
je
mov
es
sub
das
mov
mov
cmpsl
sub
xor
leave
fnstsw
repz
call
cs
sub
sbb
repz
ja
lahf
sub
mov
fidivrl
mov
adc
dec
mov
ret
mov
push
add
loop
fistpll
ret
pop
movsl
push
xchg
repnz
int
sbb
repnz
pop
mov
xlat
jp
adcb
and
scas
gs
mov
ja
jge
adc
mov
aaa
inc
jno
add
mov
jns
stos
pop
lods
movl
jnp
das
imul
adc
iret
arpl
mov
push
cmpsl
mov
pushf
mov
jno
adc
cmp
dec
cmp
add
pop
femms
fistpl
lods
in
mov
xchg
mov
lods
dec
mull
jo
fnsave
or
mov
stc
or
xor
arpl
mov
lret
popa
xchg
ret
jnp
dec
ret
and
out
cmp
insb
dec
xor
loope
outsb
fucomp
jp
cmp
xchg
push
jbe
out
in
int
push
or
aaa
sub
xor
mov
inc
and
ret
push
sub
and
or
cmp
data16
pusha
push
test
lea
loope
cmp
mov
pushf
lea
insl
andb
gs
jmp
sub
stos
pop
loope
ja
add
jmp
aad
aas
cwtl
mov
fnsetpm(287
xchg
jle
lret
repz
test
ja
adc
insl
divl
xchg
jb
shrb
pushf
dec
repnz
les
mov
mov
xor
stos
push
and
mov
aad
cld
dec
push
add
pop
mov
mov
jnp
inc
pop
fistps
push
aaa
stos
out
daa
mov
cmp
pop
push
cmp
stos
sub
decl
push
lret
xchg
sub
stos
sbb
dec
inc
mov
add
dec
out
mov
sahf
jmp
mov
sbb
lea
mov
push
xchg
dec
mov
cli
lahf
xor
data16
push
inc
mov
lea
mov
lret
in
push
mov
and
inc
fwait
mov
and
push
js
cmpsb
das
xor
insl
push
xor
arpl
jnp
cmp
dec
and
adc
insl
xor
inc
mov
mov
mov
out
out
popl
mov
sahf
mov
dec
test
lds
adc
popa
and
inc
mov
and
pop
xor
ljmp
mov
mov
in
dec
pop
pop
adc
in
shrl
add
or
out
arpl
mov
leave
or
filds
fisubrl
jge
or
adc
pop
cmp
pop
loop
iret
mov
sbb
pop
dec
fcoml
xchg
cmp
dec
je
cmp
push
inc
int3
fldt
pop
sbb
ss
sarb
jnp
inc
aas
out
gs
mov
pop
pop
jnp
sbbb
xchg
or
dec
pop
pop
neg
mov
das
idivl
pop
push
test
adc
mov
shrb
fidivl
mov
iret
push
xor
out
and
jmp
les
fs
in
int3
add
lahf
push
cmp
sub
pop
cmove
jmp
clc
mov
in
mov
mov
push
inc
push
adc
and
pop
fadd
cli
dec
cmp
lods
int
sarb
cmpl
shrl
pop
out
xor
add
ljmp
mov
test
push
mov
xchg
in
push
cli
mov
fistps
sbb
mov
lea
mov
pop
sub
mov
or
fld1
cli
and
add
dec
fdivrs
fs
pop
jne
pop
std
sbb
icebp
pop
scas
adc
cmp
sti
data16
push
push
pop
jbe
dec
rcl
mov
rorl
in
outsb
fdivs
dec
jae
push
push
sbb
jle
sub
les
rorb
or
les
jae
fdivrl
push
cmp
daa
push
rclb
mov
aaa
xor
fucom
push
iret
arpl
jge
ret
push
cs
test
xchg
mov
test
and
lods
adc
dec
jo
leave
shrl
mov
sub
mov
mov
addb
cmp
mov
push
push
lods
roll
pop
and
lret
cmp
cwtl
adc
jne
in
subb
int
in
xchg
imul
in
andb
outsb
dec
flds
mov
xor
cmp
and
outsl
mov
xchg
push
dec
push
sarb
int3
mov
xchg
sub
mov
ja
int
cli
adc
mov
popa
add
mov
add
ja
mov
nop
adc
sub
testl
mov
and
lret
fs
aas
sub
sbb
sbb
adc
imul
jp
pushf
pop
inc
mov
pop
loopne
test
push
test
cmp
mov
dec
jnp
cmp
inc
popa
negb
scas
outsl
cwtl
mov
movsb
pop
pusha
arpl
sahf
sbb
pop
int3
xchg
in
pushf
dec
mov
dec
adc
mov
jae
sti
sbb
push
mov
push
or
push
jge
aam
enter
dec
cltd
sub
movsl
push
xchg
repz
cmp
fmull
and
arpl
int
rorb
jge
or
stos
fwait
pop
push
pop
idiv
and
push
mov
or
mov
stos
sahf
cmp
or
js
imul
hlt
jg
mov
ret
adc
and
mov
jecxz
cmc
inc
cmp
and
cmp
loope
jle
mov
inc
pop
les
mov
dec
jmp
jle
mov
push
testb
cmp
sub
stos
cmp
test
mov
fstpt
std
xor
pushf
or
or
in
adc
pop
arpl
push
mov
push
mov
int3
icebp
test
sub
or
pop
adc
jp
addr16
mov
shll
or
subl
addr16
inc
mov
push
imul
shr
jecxz
ljmp
jo
inc
xchg
and
sbb
add
lret
add
mov
jecxz
or
jno
jle
sbb
and
movsl
xchg
daa
sub
push
cs
inc
lret
ljmp
fwait
pop
mov
sahf
push
popa
punpcklwd
xchg
cmp
mov
leave
test
mov
fwait
es
das
cmp
clc
lcall
mov
repz
jle
loopne
es
pop
jae
test
or
push
jae
out
lods
or
gs
iret
or
sbb
enter
cld
enter
pop
loop
sub
decb
das
dec
push
xchg
sbb
out
jp
cmp
fs
push
sarb
cmp
inc
mov
fs
in
jns
lock
out
mov
jae
adcb
dec
out
shr
xchg
test
shlb
xchg
sub
mov
sti
xchg
imul
jo
dec
aaa
jo
stos
pushf
data16
mov
cmp
fistps
aam
int
outsl
pop
loop
jle
scas
mov
cmpsl
push
outsb
jbe
nop
mov
pop
cmp
lods
rolb
mov
and
jle
mov
xor
xchg
xchg
andb
cmp
add
inc
mov
repz
jne
outsb
lcall
es
aad
inc
adc
xchg
ficompl
mov
cmp
into
cmp
in
cmp
xor
adc
pushf
fs
inc
add
test
mov
xchg
jb
dec
arpl
test
mov
push
dec
jp
inc
out
test
les
je
lea
jno
ljmp
pushf
xchg
sub
jg
imul
test
mov
or
scas
push
pop
xchg
fnop
push
movsb
add
pop
in
lods
and
inc
out
cli
mov
cmp
inc
shll
xor
faddl
pop
cli
pop
test
cltd
pushw
pop
pop
je
out
stos
test
jno
icebp
and
rep
xor
dec
adc
push
cmp
add
cs
jp
sbb
pop
rcl
pop
es
cwtl
scas
adc
outsl
dec
jno
jnp
xor
test
fstps
into
or
scas
add
adc
adc
or
xor
mov
xchg
cmp
jbe,pn
add
jbe
int
jne
cmpsb
mov
outsb
mov
test
iret
mov
sub
adc
xchg
aad
insl
cmp
loopne
sub
daa
test
xchg
inc
mov
mov
cmp
pop
or
adc
inc
cld
jmp
push
inc
ja
cwtl
inc
pop
mov
insb
xchg
ja
pop
je
jp
arpl
push
and
mov
xchg
into
jb
adc
shrl
divb
aam
jmp
out
lahf
push
popa
mov
scas
pop
mov
aam
sahf
jb
jecxz
outsb
jge
ret
int3
or
in
add
mov
mov
lods
test
enter
je
pop
or
stos
lea
int
shrl
jne
mov
and
shlb
ucomiss
imul
push
mov
mov
inc
cmp
popa
jae
pop
cmp
sub
jne
mov
mov
subb
dec
mov
sbb
and
sti
sub
mov
sarl
andl
lea
cwtl
pop
dec
cli
ds
es
push
sbb
roll
iret
xchg
dec
or
test
xchg
pop
cmp
mov
pop
and
mov
pop
and
hlt
adc
jns
inc
sbb
aam
outsb
and
push
rorl
je
cltd
pop
jge
xchg
and
int
dec
fwait
or
and
mov
incb
sahf
insl
clc
movsb
stos
cmpsl
adc
dec
cmp
inc
xor
scas
das
pop
pop
cmpl
jle
inc
subl
xor
in
mov
pop
pop
aaa
sub
jns
jl
inc
imul
sbb
lods
sbbl
jecxz
movsl
ja
and
lahf
push
dec
loop
xchg
mov
xchg
sub
scas
xor
test
sarl
inc
xchg
cmpsb
add
mov
add
fistps
in
into
sbb
ret
push
push
mov
clc
mov
stos
cmp
jp
or
movb
adc
adc
aam
jle
sub
add
loopne
scas
mov
fdiv
cmp
fisubrs
enter
testb
cli
inc
cmp
xor
fcompl
jno
pop
or
ficoml
inc
aas
push
jb
iret
cltd
loope
data16
outsl
cmpl
cmc
std
dec
in
popa
mov
pop
filds
aas
jl
xchg
sti
rol
imulb
or
gs
daa
sbb
mov
stc
mov
add
dec
mov
sbb
pop
add
mov
adc
lret
clc
imul
imul
mov
jg
lea
sub
int3
mov
and
jl
rcl
inc
paddsw
mov
cmp
fs
int3
stos
hlt
into
in
mov
in
mov
lds
fcom
test
lret
inc
cmc
in
test
adc
fcompp
and
scas
imul
dec
push
iret
imul
outsb
or
mov
adc
daa
ret
xchg
xor
push
addr16
push
lods
into
push
loopne
fldenv
into
fildll
enter
cmp
es
int3
mov
push
stos
cmc
inc
popa
jp,pn
shrb
out
sub
repnz
jne
in
jno
xor
rcl
xchg
mov
jae
sub
daa
push
dec
xorb
outsl
add
push
roll
outsl
stos
cltd
test
jbe
test
stos
or
pop
je
fldpi
mov
mov
insb
iret
mov
push
or
push
jnp
mov
int
mov
loopne
pop
cmp
push
jo
int
cmp
cltd
push
xchg
mov
daa
bound
mov
sbb
out
movsl
dec
dec
sbb
filds
lcall
out
adc
loope
or
insl
xchg
fbstp
sub
jbe
cmpl
dec
push
inc
stc
xchg
cltd
cs
cltd
push
xlat
stos
sbb
add
stos
mov
or
push
fisttpl
push
push
sub
adc
mov
jae
adc
inc
lea
xchg
cmp
sahf
mov
leave
cmc
packuswb
ja
xchg
push
lret
sbb
das
sahf
mov
jno
stos
push
mov
mov
enter
pop
rolb
push
fimull
mov
sbb
adc
std
jecxz
inc
sub
movsl
and
mov
popa
mov
nop
sub
sub
pop
xlat
adc
sbb
mov
mov
sub
sbb
jp
sbb
fidivrl
inc
inc
or
mov
aaa
sub
gs
dec
push
aas
push
xor
lret
mov
ss
mov
daa
mov
push
lret
mov
out
pop
test
push
and
js
mov
jno
shlb
leave
pop
cmp
rcpps
scas
in
lods
lea
xor
sbb
test
and
xchg
xchg
mov
xorb
popf
add
outsl
add
std
sub
lcall
jecxz
mov
cmpsb
pop
movsl
dec
mov
icebp
lods
ret
sbb
or
xor
push
insl
pop
test
in
lcall
and
pop
lods
adc
dec
imul
ret
jno
push
in
mov
aad
xor
addr16
or
pop
int
and
mov
mov
pop
sbb
iret
mov
mov
roll
into
aam
lcall
xorb
lret
shll
fnstsw
jmp
lcall
stos
call
push
sti
sbb
jne,pt
imul
mov
mov
dec
movsb
in
ja
dec
in
push
jmp
cwtl
mov
push
mov
testb
test
ss
mov
scas
sarl
rcrb
push
roll
inc
into
pop
adc
lret
gs
mov
dec
adc
cmpsl
fdivrs
and
inc
push
cmp
fisttps
xchg
ud1
repnz
adc
lret
imul
cmp
cwtl
faddl
sbb
mov
and
or
movsb
pop
adcl
mov
pusha
mov
mov
mov
sub
fadd
add
xchg
mov
mov
lretw
sbb
ljmp
sub
rcr
cli
xor
dec
cli
pop
push
pop
std
mov
xor
lcall
repz
push
iret
stos
lea
out
test
pop
shll
push
pop
fadd
int3
sub
push
adc
xor
mov
das
push
cmp
gs
adc
sbb
test
std
jbe
mov
pop
lea
bound
adc
pop
dec
lahf
jns
lds
mov
mov
push
push
lcall
lock
sub
in
mov
dec
stc
insb
fisubrl
outsl
dec
jp
in
push
nop
and
pop
cltd
and
cmp
sbb
push
add
fistpll
repz
push
jne
mov
call
push
sub
inc
cli
cmpb
leave
outsl
mov
adc
aam
je
add
shll
outsl
push
and
and
out
sub
inc
fcoms
bound
clc
out
mov
push
pop
and
dec
lds
cltd
mov
mov
push
jg
sub
aas
xorl
sub
xor
fwait
add
cwtl
sub
rol
jae
adc
jo
rol
adc
jmp
pop
pop
pop
pop
or
cli
cmc
add
icebp
mov
outsb
pusha
cmovl
cmpsl
ss
jb
push
mov
hlt
ds
cli
mov
xor
sub
cs
mov
rcrb
dec
mov
nop
mov
mov
xchg
dec
repz
sub
xor
fbstp
les
mov
sbb
lret
push
and
push
xchg
add
jae
das
push
fs
push
sti
je
pop
rclb
jb
xchg
xor
xor
std
push
push
scas
mov
cmc
mov
stc
call
pop
in
in
jle
repz
les
pop
sahf
sbb
rcll
das
cs
sbb
xchg
mov
jp
pop
subb
test
jp
jnp
and
pop
outsl
push
xchg
dec
mov
mov
adc
jle
jbe
xchg
lcall
dec
mov
pusha
lcall
push
lret
cmp
cmc
jns
stos
sbb
mov
jnp
ja
add
sub
cmp
mov
cli
fisttpl
adc
in
shr
add
fiadds
mov
jmp
fxch
xchg
xchg
mov
jno
xchg
out
lds
repz
xor
rcll
outsb
pop
mov
icebp
mov
jl
jbe
addr16
sbb
inc
fsubr
mov
lods
lahf
mov
add
dec
mov
repnz
cmp
leave
test
das
and
mulb
insl
icebp
xor
pop
fbld
outsb
fwait
push
jne
sub
sbb
sub
ljmp
dec
sub
daa
cmp
add
inc
sahf
shl
mov
push
stos
xorb
in
aam
into
mov
jle
std
daa
fisubl
or
sub
and
faddl
sbbb
mov
fstps
dec
mov
or
push
pushf
das
mov
push
test
hlt
xchg
mov
movsl
push
imul
fcmovb
push
cltd
jg
jne
pop
push
popf
or
popf
test
pop
fdivs
loope
int3
jmp
out
lds
dec
sbb
iret
sar
sbb
or
pop
mov
into
fs
lret
inc
and
mov
cmpsl
cmp
jno
icebp
xchg
aad
std
cld
lret
sbb
dec
jmp
push
shll
addr16
add
enter
gs
cmp
pop
push
mov
pop
imull
shlb
daa
sbb
mov
repz
and
fwait
xchg
rdtsc
mov
movsl
jle
lea
push
ret
and
mov
loope
mov
ret
push
repnz
lods
dec
shrl
arpl
rcrl
push
pop
jae
push
inc
insb
test
jne
mov
inc
out
daa
mov
and
fstps
mov
ret
pop
hlt
icebp
icebp
std
dec
loop
sbb
fidivs
mulb
sbb
mov
ds
and
pop
pop
mov
outsb
das
fnstenv
lret
mov
fsubrs
xchg
dec
outsb
ss
jnp
mov
xlat
xchg
add
add
jno
inc
jae
cmpsl
test
bound
fldl
mov
xor
shlb
or
aam
and
jmp
scas
push
filds
popa
repz
aam
add
dec
xor
mov
enter
into
mul
lea
dec
mov
imul
addr16
int
sti
nop
in
test
mov
mov
pop
sbb
mov
loop
js
stos
inc
adc
lock
jo
scas
lods
or
shll
imul
aad
push
jbe
cld
xchg
pushf
adc
imulb
or
dec
pop
adc
js
das
imul
jns
out
dec
inc
sbb
popa
scas
lret
xchg
cld
loopne
mov
neg
cmp
out
inc
clc
jne
sub
lods
rcrb
rorb
cmp
test
pusha
popa
std
sub
daa
iret
lret
pop
mov
stos
cmc
mov
outsb
push
xchg
cmp
dec
clc
enter
cmp
stc
cld
xchg
mov
movl
dec
mov
sub
mov
mov
fiadds
push
jecxz
addps
es
mov
pop
xchg
push
jge
xor
lret
mov
int
movsl
bound
cmp
and
or
lret
push
sub
mov
call
lds
cld
rol
adc
es
jb
addl
xchg
int
mov
sti
insl
icebp
mov
add
and
iret
popa
add
push
inc
adc
mul
pusha
and
pop
out
sub
xchg
cmpsl
popa
ret
in
xchg
cmp
sub
fbstp
xchg
out
jl
div
xor
xchg
sub
mov
dec
daa
or
cli
shl
out
stos
insl
mov
imul
mov
push
and
addr16
in
leave
sbb
or
and
lret
pop
inc
push
les
add
mov
push
sbb
pushf
jno
jg
push
aam
sbb
add
ret
dec
sbb
and
idivl
xchg
ret
add
xor
scas
xchg
daa
fwait
jmp
std
push
shr
xor
incl
xchg
xchg
lret
mov
pop
out
pop
xchg
ret
inc
or
lret
sbb
mov
ss
mov
jns
ret
xchg
rclb
std
in
mov
jno
mov
push
fdivr
xor
cmp
jne
pop
movsb
add
ljmp
xor
mov
js
cmc
dec
imul
in
fildll
stos
subl
stc
cwtl
sbb
adc
sbb
jae
enter
push
scas
cmp
int3
lret
in
out
out
push
pusha
in
sbb
aaa
gs
mov
fisttpll
xlat
gs
cmp
sbb
fmull
adc
lahf
aas
fs
jecxz
shr
xchg
mov
push
iret
jo
icebp
lock
hlt
xchg
data16
mov
movsb
xchg
and
xlat
xlat
dec
sbb
push
int3
movsl
push
adc
imul
cmova
pop
out
scas
sub
aas
jg
or
stos
sub
insb
lock
pop
movsb
lahf
outsl
fs
fstpt
popw
sarb
mov
and
jmp
fisttpll
and
mov
aaa
je,pt
add
lock
dec
loopne
imul
push
sbb
rcrb
ret
cmp
jns
movsl
aad
mov
jl
pushf
outsb
add
pop
gs
jge
sbb
or
aaa
daa
fnstenv
lcall
jns
pop
inc
imul
addr16
loope
adc
push
incl
and
and
lcall
outsl
cmp
pop
call
or
and
sub
sub
lods
fs
stos
mov
jmp
jae
add
sbb
dec
jecxz
jno
cmpsb
adc
into
or
hlt
pushf
xor
xchg
push
fidivl
pop
xor
out
fnstcw
pop
movsb
mov
push
pop
outsl
or
cmp
lret
dec
jle
xchg
addr16
aaa
imul
push
out
pop
scas
mov
cmp
sub
sub
cmp
dec
dec
push
leave
and
mov
push
aam
ja
mov
xor
adc
cld
mov
lods
lret
orl
lahf
dec
rep
mov
dec
xor
mov
add
and
lods
aad
cltd
jl
imul
rorb
pop
mov
mov
das
jno
out
fs
jge
mov
in
jno
inc
fstps
stc
jp
fsubrs
mov
and
inc
dec
jae
fdivs
test
xor
les
int3
aas
lds
jo
jg
sahf
fsubrs
jecxz
push
and
xchg
cltd
cmp
shll
lret
jle
imul
adc
and
push
rorl
cld
je
movsl
or
adc
in
mov
aas
notl
das
lock
lahf
push
out
loop
mov
scas
icebp
jno
inc
shrb
mov
gs
loop
sub
or
fwait
jge
jbe
sahf
sahf
in
add
jge
adc
fmuls
dec
dec
pop
mov
cmpsl
popf
inc
imul
inc
push
mov
je
mov
jo
mov
clc
jnp
mov
lahf
push
mov
and
insb
pop
mov
xchg
ljmp
push
and
in
mov
test
out
inc
dec
inc
out
rcrb
or
jg
sahf
lahf
je
fisubrl
mov
or
out
mov
clc
pop
pop
in
aaa
int3
inc
jg
rorl
mov
push
push
jae
repz
pusha
mov
aad
movsb
push
dec
jo
mov
sbb
inc
stos
testl
cmp
mov
mov
imul
mov
mov
test
sbb
add
cmpsb
jae
ficompl
fs
jns
pushf
push
cmp
in
adc
push
das
inc
jne
das
gs
inc
mov
xchg
clc
test
ss
push
jmp
mov
xor
mov
int3
out
cmpsb
sub
clc
and
gs
and
sbb
inc
pop
inc
aas
nop
or
push
icebp
inc
pop
ja
inc
das
cmpsl
cmpsl
jae
out
imul
outsl
xchg
lahf
xor
outsl
je
shlb
fwait
out
mov
push
xor
test
pop
push
mov
xchg
adc
mov
mov
je
outsb
mov
mov
jp
xor
aaa
adcl
add
and
loopne
sbb
repz
test
fsubr
mov
outsl
adc
clc
scas
jle
pop
movsb
mov
frstor
loope
imul
cs
jno
stc
push
imul
jge
mov
or
inc
jno
data16
ds
cmp
sbb
je
inc
subl
fdivrl
jae
mov
mov
cld
mov
jl
data16
mov
pop
cmpsb
adc
jecxz
mov
push
mov
dec
enter
jno
in
add
add
sub
popa
scas
cltd
xor
mov
xor
xchg
pop
sbb
notl
dec
adc
inc
mov
xor
aas
test
cltd
or
add
mov
sub
sub
aam
push
mov
adc
icebp
lret
mov
nop
jmp
xlat
xchg
cmpsl
lret
outsl
xor
fimuls
cwtl
mov
sbb
push
insl
pop
add
adc
pop
cmpsb
movsl
into
cld
sti
clc
mov
mov
push
sbb
lock
and
pusha
adc
test
mov
aaa
mov
stos
xchg
leave
lods
sbb
aad
sbb
icebp
xchg
gs
add
lods
lea
inc
ret
test
shlb
pop
dec
out
push
leave
xchg
ffree
sbbb
pop
and
jl
push
fwait
add
test
pop
imul
inc
in
filds
sbb
inc
stc
lret
xchg
xor
std
mov
or
loope
or
lcall
repnz
mov
js
push
ficoml
sbb
add
addr16
test
jb
adc
fadds
mov
adc
sub
mov
das
je
orl
pop
mov
fs
xchg
or
lea
imul
adc
jae
xlat
stos
das
lret
pop
imul
inc
sbb
xchg
shll
cmp
loop
out
test
ret
mov
cmpl
ljmp
mov
sub
add
pop
fidivl
and
cli
xor
cmpl
in
jle
jno
add
fnstcw
xchg
mov
imul
sub
xchg
and
mov
jl
movsl
sub
xorl
mov
sbb
lods
lock
add
aas
call
shl
popf
jge
lods
jnp,pt
js
insl
je
xchg
das
add
les
mov
pop
jmp
push
lea
das
ret
adc
in
aaa
and
imul
pushf
pop
mov
lods
push
pop
cmp
sbb
scas
add
inc
pop
sub
arpl
sbb
stos
sbb
lds
xchg
sbb
push
xor
xchg
imul
aam
jne
ret
iret
cli
push
jecxz
popf
outsb
sbb
pop
aas
mov
xor
sub
pop
or
inc
mov
cmp
hlt
mov
jg
loopne
aas
lret
pop
aaa
or
and
mov
or
repz
insl
movsl
bound
push
cmp
loope
roll
je
sub
xchg
lahf
push
adc
xor
adc
jmp
mov
out
cmc
inc
nop
mov
notl
outsl
mov
sbb
cmpb
pop
aas
and
inc
hlt
lret
mov
jns
test
sbb
mov
mov
repnz
es
xor
in
cmp
inc
fmuls
in
push
mov
xor
out
sub
pop
test
mov
iret
popa
jb
pop
decb
jle
leave
test
cmp
mov
stc
add
mov
add
inc
dec
mov
dec
and
inc
adc
arpl
push
jecxz
add
jle
xchg
sub
lret
jl
ret
push
cs
test
lods
popl
sub
push
adc
jle
je
push
popf
xchg
dec
jmp
ja
pop
jecxz
in
inc
fldenv
mov
xor
jmp
out
xorl
pop
sub
add
and
xchg
or
fwait
fs
stos
adc
idivb
cwtl
shll
sbb
arpl
pushf
mov
cld
repnz
fcmovu
stos
sub
shr
and
adc
inc
inc
inc
jo
call
testb
mov
outsb
scas
leave
or
lahf
in
fiaddl
sub
mov
enter
or
or
ret
mov
sbb
pop
xor
cmp
pop
loope
lods
scas
pop
xchg
dec
push
xchg
arpl
mov
insl
mov
dec
cltd
sarb
jmp
add
aam
inc
in
jno
fstp
in
dec
aad
sahf
sub
pop
lcall
outsb
sbbl
xchg
mov
inc
data16
sahf
or
cmp
scas
xchg
stc
jl
xor
inc
imul
dec
ds
pop
mov
sub
cmp
jb
add
cli
cltd
loope
and
ret
xsha1
cmpsb
or
push
inc
and
jg
or
js
sub
pop
sbb
dec
repnz
sbb
es
lea
jg
jl
fildl
aas
shrl
loope
jae
add
dec
sub
roll
insb
jne
and
ds
jo
ret
shlb
ds
and
shr
daa
daa
sbb
iret
jle
xchg
jns
jb
sub
adc
je
out
es
jb
mov
jnp
mov
dec
jnp
sub
adc
mov
jmp
lock
aaa
lods
jle
cmpl
ffreep
dec
dec
imul
inc
leave
mov
mov
mov
out
pop
inc
cltd
xchg
xlat
xchg
pop
and
add
daa
lea
sarl
lock
cmpsb
arpl
loopne
hlt
sbb
inc
mov
inc
sub
loop
dec
dec
mov
jle
fstpl
mov
sbbb
fmuls
lret
push
jle
mov
out
loopne
push
jo
mov
rorl
in
imulb
and
imulb
aaa
jle
pop
inc
imul
fnsave
nop
jns
pop
jge
pop
lods
jg
icebp
popa
arpl
inc
mov
inc
pop
cmp
imul
test
xchg
dec
mov
cmp
mov
cmp
mov
xchg
dec
mov
jl
inc
cltd
roll
lret
jnp
xor
add
sbb
out
fdivp
jno
mov
push
pushf
or
cmp
mov
insb
adc
test
loopne
mov
nop
orl
lods
adc
insl
popa
adc
cli
sbb
push
mov
and
jbe
push
push
xchg
dec
loop
or
xor
xor
sbb
jb
cmp
mov
inc
mov
xchg
jmp
mov
mov
and
lldt
pop
jge
sti
out
fcoml
dec
fwait
inc
xor
pop
addb
push
pop
add
out
insl
imul
leave
test
mov
cmpsl
push
xor
or
pop
mov
dec
stc
lahf
mov
daa
iret
test
leave
xor
bound
push
into
and
mov
mov
jns
out
pop
push
test
ffreep
mov
test
out
xchg
jns
dec
inc
mov
push
clc
sub
fs
push
inc
lock
ja
jmp
mov
cmpsl
fimuls
les
pusha
dec
push
cmp
pop
mov
cwtl
popa
xor
or
mov
repz
or
mov
out
sbb
and
and
jbe
xchg
push
jge
fistpll
mov
and
loop
cmp
mov
pushw
jae
int3
adc
inc
jnp
push
into
jae
popf
arpl
ljmp
aaa
adc
inc
jns
ficompl
jbe
sub
stos
cmp
adc
lret
std
pop
mov
es
testl
out
leave
addr16
pop
push
xor
jo
mov
xor
cmpsl
pop
inc
mov
std
iret
cli
into
ljmp
mov
pushf
jp
lock
test
kmovw
mov
adc
int3
mov
std
and
mov
jl
ljmp
adc
int3
xor
push
dec
in
xor
dec
fidivs
and
cmp
loopne
cltd
rcll
test
scas
clc
dec
sub
fwait
pop
xor
cmp
sub
xor
dec
push
sbb
les
push
add
movsl
add
mov
fistl
fnstsw
inc
jae
adc
scas
jp
popf
jo
dec
scas
push
xor
sub
movb
dec
mov
maskmovq
das
cmp
xlat
jmp
imul
push
addr16
out
aas
lahf
push
xor
daa
stos
lods
sarb
scas
inc
pop
lock
xlat
shlb
popa
pop
movsl
sbb
xor
loope
arpl
lods
xchg
dec
mov
in
movsl
pop
xchg
loopne
xchg
jge
sbb
das
aad
mov
roll
add
xchg
push
or
xchg
dec
je
inc
pop
add
and
lret
dec
inc
mov
dec
lahf
cwtl
lret
inc
xchg
mov
jg
jmp
cmp
cmp
xor
adc
or
mov
jns
repz
or
dec
adc
addr16
dec
imul
lds
std
outsb
or
cli
mov
sahf
cmpsl
add
mul
sarb
cmp
mov
or
push
xor
out
shrb
mov
pop
push
rolb
dec
daa
ja
fisubrl
or
adc
fwait
cmp
std
aas
pop
ret
and
pop
into
mov
in
sbb
mov
mov
cld
std
enter
lock
in
enter
xchg
rcr
mull
mov
mov
cli
and
stos
mov
mov
call
inc
test
ror
test
dec
icebp
fld
int3
insl
sbb
dec
movsb
jnp
xchg
pop
pop
aaa
pop
cmc
imul
sub
stc
fcomp
loopne
ret
sub
add
sub
jno
dec
mov
cmp
sub
pusha
daa
scas
gs
or
out
mov
cmp
dec
stos
xor
mov
cwtl
cmc
aad
sti
push
in
add
loope
jno
xchg
icebp
sbb
adcl
mov
pop
xorb
cmp
idivl
mov
mov
cwtl
fs
insb
lea
shll
pop
jo
adc
adc
negl
adc
push
hlt
jecxz
or
lods
pop
divl
mov
ret
into
mov
mov
cmp
lcall
fbstp
dec
repz
stos
in
jl
mov
sbb
test
aaa
jge
fimull
loope
jns
pop
rcr
and
and
ja
xchg
out
lret
mov
daa
mov
mov
fidivrs
ljmp
daa
decl
xor
jmp
cmpsl
test
pushf
inc
scas
xchg
stc
xchg
lea
mov
jp
cmp
sub
fwait
inc
aam
mov
sub
adc
flds
mov
sbb
out
mov
add
inc
mov
ja
mov
pop
add
mov
es
sahf
sub
testb
jo
into
cli
idivb
or
cmp
vpsubsb
ja
mov
jae
outsb
sub
movsb
lret
inc
lret
movsl
ficoml
jle
int
jg
ret
cmp
adc
ret
lods
iret
sbb
cmpb
rorb
pusha
cmp
xchg
and
lods
sahf
push
popf
mov
mov
pop
ja
dec
xchg
stos
jecxz
repz
and
or
js
lcall
insl
pop
mov
enter
mov
stos
inc
pop
jb
aam
mov
mov
ljmp
cmp
lods
or
push
lds
icebp
dec
mov
bswap
popa
xor
cwtl
rcrl
pop
test
xchg
js
cmp
insb
out
jle
fdivp
and
dec
lcall
outsb
shlb
pop
and
sbb
mov
sbb
bound
sub
sti
pop
cmpb
int
fcoms
jns
add
shrb
jb
stos
or
scas
jmp
decb
out
or
mov
or
mov
jle
add
fstl
rcll
sti
fisttpll
aaa
lahf
push
sti
push
int3
int3
mov
push
stc
sub
popf
ljmp
call
mov
adc
aas
mov
adc
pop
je
mov
cmp
pop
push
and
cwtl
adc
or
adcb
idivb
add
or
jbe
pop
loopne
sbb
sub
sbb
mov
rclb
xor
pop
pop
pusha
int
jo
push
andl
pop
adc
pop
subb
daa
shl
adc
inc
add
sbb
push
dec
mov
mov
imul
xor
jecxz
push
cmp
cwtl
aad
mov
enter
sub
aad
movsb
bound
sbb
xlat
loope
andl
out
ret
mov
jne
cld
scas
sub
cmpsb
orb
cld
pop
xor
subl
orl
lcall
mov
mov
aaa
inc
adc
lret
sub
sbb
add
sahf
ficomps
scas
add
mov
scas
xchg
jb
cmpsb
xchg
mov
jo
int
jmp
inc
insl
xor
push
xchg
mov
enter
fldt
je
dec
xor
adc
push
std
arpl
into
lods
out
push
js
fildl
std
push
loope
in
stos
movsl
dec
mov
xchg
jp
mov
and
xchg
cld
inc
dec
ja
gs
push
sar
mov
xor
sarb
mov
mov
jno
jnp
xchg
adc
outsb
loopne
mov
ss
daa
cmp
pop
test
mov
jo
cmp
cmpl
lods
adc
loopne
add
push
xchg
int3
pop
aam
insl
mov
mov
mov
in
lods
cmpsb
js
jmp
cmp
jae
mov
xor
mov
push
lea
adc
scas
push
add
mov
fistps
rcrl
jns
cmp
mov
lds
scas
outsb
or
mov
enter
jecxz
dec
add
adc
outsb
sti
push
test
jle
mov
or
sar
popf
lods
mov
sahf
mov
add
xchg
out
xchg
xor
mov
sub
push
and
ljmp
add
cs
jno
inc
fildll
jae
push
xchg
jg
pop
in
test
xor
lret
aaa
mov
sub
cmpsb
notb
or
loop
shrb
push
sub
icebp
lods
jb
or
fistps
xor
ja
lds
mov
jae
lcall
lods
das
enter
in
scas
mov
scas
cmp
fildl
xor
mov
popf
adc
out
out
insl
pop
or
add
outsl
inc
or
insb
les
sti
inc
xchg
cmpsl
inc
dec
or
cmc
aas
scas
inc
mulb
mov
push
fs
mov
lods
fstps
xchg
test
idivl
inc
rcl
ret
movb
fcomip
xor
cwtl
add
mov
inc
pop
lods
mov
adc
pop
clc
roll
mov
fnsetpm(287
mov
insl
or
mov
inc
daa
xor
call
das
xor
movsl
lea
loopne
xchg
lcall
lret
and
mov
mov
lock
fwait
jmp
mov
bound
ret
test
aaa
arpl
scas
negb
adc
aad
mov
or
iret
loop
test
lgs
loopne
test
cli
jp
and
mulb
xor
std
leave
mov
or
aaa
cmc
arpl
std
aas
adc
adc
fnstcw
inc
mov
adc
mov
stos
or
scas
jo
push
daa
jmp
or
fiaddl
rcr
jne
mov
in
jno
adc
imul
movsl
fstp
stos
ret
jl
lea
sub
dec
and
inc
push
and
add
ja
js
cmovb
adc
and
popf
int3
mov
mov
mov
xchg
push
ja
faddl
sbb
sub
push
sbb
les
inc
shlb
inc
add
mov
lret
test
stos
jbe
rol
jbe
adc
xlat
es
inc
mov
mov
idivl
jl
sub
adc
lahf
inc
out
lds
arpl
cwtl
dec
xor
ret
cli
in
in
pop
les
mov
stos
jne
inc
jbe
js
push
std
or
in
sbb
das
mov
push
add
jp
xorb
inc
cmc
push
xor
stc
pop
adc
mov
inc
jno
insb
adc
jns
or
xor
push
jp
xchg
push
sub
popa
pop
jecxz
jg
cmp
pop
cmp
in
inc
inc
js
imul
sub
jecxz
or
arpl
xlat
sbb
arpl
push
xchg
aam
icebp
cmp
pop
sub
test
xchg
into
notl
and
jne
out
xorl
dec
and
rclb
addr16
mov
es
jns
sti
mov
sub
int3
xchg
into
sub
mov
ret
pop
and
subb
xlat
dec
xor
in
xor
dec
stos
aad
ds
mov
pusha
lods
in
lds
dec
lahf
data16
jb
int3
decb
mov
js
mov
mov
sbb
ljmp
ja
mov
int
cmp
sub
adc
psllq
inc
pop
in
dec
daa
xchg
fistl
std
psubb
cmpsb
data16
notl
add
xor
or
sbb
pop
xchg
cmpsl
stc
add
aad
sub
jg
inc
ja
or
lods
fs
mov
jp
mov
dec
dec
xor
ss
test
outsl
mov
ret
dec
mov
add
lock
mov
int3
fnstenv
sub
xchg
xchg
popf
leave
mov
push
cmp
popa
xchg
pop
dec
sbb
sub
ljmp
xlat
pop
lods
inc
lret
sbb
gs
fs
movsb
sub
xchg
and
mov
and
xchg
or
stos
int3
push
repnz
push
imulw
or
jge
aaa
push
or
scas
rorl
cwtl
enter
sbb
fwait
xchg
dec
dec
sbb
and
mov
push
dec
lret
lea
pusha
rorl
inc
mov
xor
fmulp
fucomp
subb
mov
arpl
mov
add
mov
js
push
in
inc
push
test
test
sub
int3
aam
fisttpl
push
test
jle
push
cmc
xchg
or
in
sub
pop
xor
sti
adc
or
mov
and
insb
mov
cmpsl
lods
hlt
stos
popf
pop
pop
adc
jo
or
roll
jle
movsl
lcall
sub
xor
mov
jge
push
call
sbb
sbb
push
filds
movsl
das
mov
wrmsr
aad
sbb
cmp
push
add
faddl
hlt
dec
xor
jmp
insl
je
arpl
shlb
inc
lods
int
add
mov
cld
pop
dec
pop
fidivrl
lret
xor
clc
xor
out
xlat
in
pop
inc
leave
insl
mov
adc
or
sub
jle
fidivs
loope
mov
mov
loopne
lods
sahf
icebp
aam
xchg
outsb
and
or
sub
jp
cltd
add
fidivs
xchg
ja
insl
xchg
add
or
mov
fwait
pop
inc
or
mov
pop
pop
inc
or
xchg
testl
cmpsb
insl
xchg
inc
movsl
mov
vpsllq
flds
cmpb
out
popf
test
test
jo
and
jnp
or
cli
xchg
or
out
fidivrs
testb
popf
xor
dec
xor
push
jle
xchg
push
jo
and
into
mov
dec
arpl
ret
insb
notb
sbb
test
jmp
aam
cmpsl
mov
outsl
nop
add
pop
adc
jp
lcall
shlb
mov
inc
sbb
mov
pushf
mull
mov
jns
push
push
ret
je
aam
push
jnp
add
fistpll
pop
or
ds
psllq
xor
mov
push
ret
jge
add
or
iret
mov
xchg
mov
or
xor
ret
inc
insb
jmp
and
and
inc
mov
scas
adc
je
adc
and
inc
jmp
stos
push
arpl
dec
cmp
inc
dec
mov
jne
aad
sti
call
sbb
js
les
xor
push
out
js
xor
out
cwtl
xchg
lret
int3
dec
or
pop
out
jb
pop
push
les
push
outsl
mov
xor
mov
ficompl
pop
pop
xchg
jecxz
orl
fcomps
or
pusha
test
fisubl
je
test
aaa
fwait
shll
rcr
js
scas
rorb
lods
inc
or
fs
out
pop
or
stc
lahf
outsw
arpl
dec
sbb
outsb
movsl
xchg
jnp
cmp
mov
mov
pop
mov
leave
lds
gs
roll
ret
xchg
enter
div
mov
in
ja
jbe
cli
and
shlb
popa
add
cmp
aaa
daa
push
mov
inc
push
stos
rclb
cmp
pop
insb
adc
dec
je
cvttps2pi
movsb
out
add
nop
pop
cld
adcb
lcall
cmc
sub
jno
and
outsl
jb
jge
mov
outsb
add
xrelease
ja
push
frstor
xchg
hlt
xchg
push
xchg
fidivrs
lods
cmpsl
dec
shr
xchg
stos
sbb
loop
ljmp
int
cltd
xor
xchg
sti
push
or
push
imul
lods
andl
add
ja
lret
lods
dec
mov
jb
mov
out
arpl
ret
insb
push
adc
test
cs
fs
xor
xchg
add
pop
push
test
jle
pop
loop
inc
and
idivl
or
mov
push
pop
sbb
aad
out
cmpsl
mov
sub
mov
mov
fstl
enter
xor
sub
outsb
cmpsb
out
jecxz
imul
xchg
mov
cmpsb
mov
dec
xor
add
jmp
int3
jb
xchg
lods
sbb
mov
sbb
sub
add
xchg
repnz
enter
or
out
inc
pusha
xlat
bound
mov
in
out
jge
inc
pop
xchg
push
sub
xchg
push
dec
sarl
mov
xor
push
outsl
xor
cmp
movsl
int
daa
push
jg
outsl
loope
sbb
jecxz
dec
inc
outsb
inc
scas
mov
jno
cli
jecxz
adc
fmuls
xchg
cmp
sub
dec
cmp
scas
shll
and
mov
out
cs
outsl
stos
clc
gs
lods
sahf
mov
dec
mov
aaa
jno
adc
test
pop
jge
jnp
loopne
xor
pop
cld
or
in
xchg
imul
push
or
pop
mov
xlat
dec
imul
dec
bsf
daa
outsl
pop
fs
dec
jnp
leave
pop
mov
fimuls
and
push
fdivs
add
rcll
psubusb
insl
iret
pusha
xchg
test
hlt
out
loop
into
inc
daa
or
xchg
xlat
mov
les
dec
je
add
pop
xlat
mov
jg
aaa
and
push
dec
setns
bound
jecxz
dec
xchg
pop
sbb
xor
imul
push
out
pop
das
repnz
and
mov
mov
inc
in
cmpb
pop
fidivs
cmp
scas
cmp
and
cmp
js
adc
inc
sbb
jae
mov
fsubrs
stos
pop
fldl
in
jae
leave
mov
xchg
and
data16
ficoms
aaa
aad
sahf
rclb
iret
cmpsb
cmc
jne
lcall
add
es
sarl
scas
int
mov
orl
repz
adcb
dec
push
mov
mov
cmp
adc
mov
inc
data16
iret
testl
xchg
adc
out
push
push
lods
stc
in
pushf
cmpb
dec
xlat
ljmp
dec
cmp
pop
les
push
and
push
dec
inc
repz
adc
test
adc
jle
sbb
pushf
inc
or
push
bnd
pop
add
dec
push
mov
leave
adc
leave
dec
jo
rcll
mov
xor
mov
jo
daa
adc
fs
js
inc
xchg
insb
lcall
xchg
fwait
out
loop
leave
dec
test
lahf
add
cmp
mov
push
xchg
int
push
dec
scas
shr
xor
ja
fimuls
icebp
fcmovnu
jnp
and
int
pop
push
test
cmp
out
inc
ror
into
mov
pushf
lock
mov
shrl
stos
lock
inc
fdivs
fists
test
dec
out
daa
lcall
cmp
scas
pop
inc
shrb
cltd
aad
cmp
or
mov
aaa
cmp
pop
sbb
ss
je
inc
int3
push
insl
mov
push
add
add
movsl
and
arpl
push
daa
mov
out
fidivs
xlat
repnz
mov
push
notl
leave
inc
in
cmpsb
dec
test
xchg
rolb
pop
xchg
and
mov
movsb
pop
into
stos
adc
loopne
mov
orl
decb
mov
jbe
push
pusha
pop
and
ss
xchg
mov
mov
jbe
push
sbb
or
push
cli
inc
arpl
fs
push
jp
xor
in
inc
test
sub
sti
sbb
stos
jbe
movsl
stc
subb
ret
add
sub
les
scas
add
leave
out
sti
mov
stc
sub
adc
test
je
mov
dec
js
or
mov
cs
cld
or
xchg
and
inc
cmp
cmp
xchg
mov
pop
std
adc
lahf
or
lea
das
iret
aad
mov
adc
shrb
mov
inc
outsl
or
jae
test
mov
fucomi
jecxz
xchg
addr16
jmp
gs
les
and
je
movsb
pop
mov
push
ficompl
mov
clc
push
mov
inc
xor
and
jb
xchg
mov
repnz
js
inc
test
cmc
lods
push
cmp
cmp
mov
mov
mov
stos
mov
rolb
pop
lret
sub
jp
push
pop
inc
add
icebp
push
nop
iret
pop
sub
mov
push
test
aas
dec
and
movsl
mov
dec
add
das
mov
cmp
insb
sbb
test
cltd
fstp
sub
js
pushl
pop
mov
sbb
mov
pusha
aas
out
fs
lea
lock
mov
push
and
mov
jmp
mov
pushf
push
lret
inc
mov
mov
in
mov
xchg
dec
lods
pop
dec
imul
xchg
xor
mov
pop
push
sub
in
sub
fsubs
outsl
clc
shrl
mov
clc
push
les
jmp
jae
add
call
mov
sub
adc
dec
adc
add
push
iret
jmp
cmp
jp
das
hlt
ljmp
fnstsw
ss
fdivrl
add
jecxz
cmp
lea
cli
mov
jmp
pop
enter
negb
push
and
xor
jg
dec
push
push
add
lret
jo
mov
sar
sbb
data16
out
out
arpl
ljmp
mov
and
scas
push
push
aad
jbe
mov
sarl
into
xor
sbb
or
lret
divl
aas
push
mov
enter
popa
xchg
fistl
sub
xchg
mov
div
pop
mov
push
pop
nop
pop
shrl
or
add
pusha
imul
mov
rcr
fcomip
jae
outsl
adcl
mov
out
sub
shrl
pop
rcll
fwait
jg
push
mov
lret
cmc
mov
mov
repz
lods
in
pop
pop
sub
lahf
push
stc
ljmp
data16
inc
cs
lret
les
fxch
mov
pop
pop
scas
orl
cmpb
fcmovne
les
test
cmp
fmul
or
das
nop
inc
sbb
dec
or
stc
movsl
pop
out
stos
orb
insb
lahf
xor
sub
or
jbe
cmp
divl
pop
mov
add
jns
movsb
xchg
ficomps
pop
test
clc
mov
mov
mov
cli
jge
imul
cmpl
inc
clc
outsb
jmp
nop
rcrl
jns
ret
adc
lock
push
repnz
cmpsb
cmp
or
push
in
loopne
pop
sub
push
mov
sbb
xor
dec
subb
insl
mov
pop
in
push
aam
add
pop
sub
fsts
es
iret
outsb
push
push
stos
sbb
rcll
mov
lret
or
fsubs
inc
in
sbbl
pop
and
push
stc
out
cmp
scas
dec
lods
pop
push
xor
mov
andb
inc
call
idivl
loopne
jne
inc
pop
dec
leave
add
add
add
sub
test
bswap
loop
pop
jl
adc
cld
test
pop
push
int3
adc
insb
jmp
mov
pop
lea
sub
pop
add
fistpl
xor
faddl
outsl
sbb
mov
insl
cmpsb
out
stos
cmp
and
mov
jmp
lahf
repnz
jmp
push
icebp
popf
cmp
add
adc
popf
mov
out
lahf
test
int
hlt
add
pop
scas
aaa
and
int
rcrb
in
add
loopne
cmp
push
sbb
push
lods
clc
pop
pusha
pavgw
rclb
cs
lret
add
jecxz
aas
inc
adc
adc
mov
jo
sbb
pcmpgtb
cwtl
sub
in
jo
dec
gs
push
gs
inc
repz
jl
pop
call
ss
mov
jle
outsl
mov
cli
jb
xor
mov
ficomps
push
jno
pusha
cmp
fcomp
xor
mov
jb
and
lds
ds
nop
fcmovbe
fcmovbe
shll
fsts
fimuls
cmp
ficoml
xchg
repz
xor
cwtl
stos
ljmp
dec
hlt
in
stos
lods
push
sbb
xchg
inc
dec
call
inc
rorb
mov
loop
lods
xchg
and
inc
and
data16
andb
jo
add
outsl
cmp
leave
in
xor
test
test
popf
int3
xchg
loopne
xor
lods
fadds
xchg
sbb
out
add
and
fstpl
and
fadds
sbbb
popa
call
inc
and
mov
sbb
lock
xor
test
push
jg
mov
lds
rorl
lahf
clc
mov
cmp
xor
lods
leave
and
or
jne
jmp
mov
bound
ret
repz
in
andb
imull
push
xchg
nop
iret
cmp
pop
mov
inc
mov
mov
xchg
das
mov
cltd
push
test
pop
out
adc
xor
pop
pop
jne
dec
mov
push
jo
mov
nop/reserved
mov
ret
loopne
adc
xchg
mov
rorl
push
mov
arpl
mov
push
sbb
cmp
enter
enter
icebp
sbb
pushl
stc
out
iret
shrl
pop
pop
jle
push
mov
leave
in
ret
jb
add
push
and
lds
fs
xchg
cmp
pusha
int
xchg
pushf
cwtl
fadds
inc
and
jnp
sarb
das
stos
and
lea
pop
add
leave
xchg
hlt
insl
dec
fiadds
movsb
jp
pusha
lret
add
aaa
mov
and
xchg
out
mov
stos
jno
nop
aam
out
fadd
sub
in
roll
scas
pop
lret
pop
fdivl
fcompl
add
test
hlt
cmp
adc
insb
add
or
idivl
add
xchg
mov
insb
nop
outsl
in
das
xor
pop
mov
addl
stos
test
push
test
pop
xchg
dec
mov
sub
imul
mov
mov
or
mov
je
mov
sub
arpl
loopne
mov
jne
or
arpl
xchg
pop
add
inc
mov
pop
daa
pop
xor
mov
cltd
aam
cmpsb
ljmp
inc
les
pop
lcall
ljmp
insb
xor
stc
sbb
pop
in
fwait
loopne
mov
jnp
sbb
shlb
adc
mov
clc
lock
ds
xor
loope
pop
aas
and
test
call
inc
mov
loop
inc
add
out
clc
mov
and
xor
andl
or
cli
clc
mov
mov
ss
lret
repnz
cli
pushf
stos
fidivrs
and
aaa
ja
aad
adc
fldenv
add
inc
jmp
push
mov
enter
jae
mov
sbb
arpl
in
orl
pop
xor
jo
mov
jmp
insl
xor
je
xor
adc
push
sti
jge
sbb
add
iret
dec
clc
push
dec
lret
loopne
dec
bound
out
add
xchg
jb
pop
fs
cld
dec
cli
insl
shrl
in
ja
xor
jae
cmpsb
pop
sub
aas
inc
push
jmp
stc
cmp
mov
in
sub
movsl
orl
rcrb
rolb
push
jo
sbb
mov
repz
jns
adc
and
jne
mov
cmp
push
cmp
or
sub
xchg
sub
or
pop
das
xchg
sahf
and
and
int3
sub
outsl
ljmp
cmp
add
aam
inc
dec
jb
decb
testb
ret
mov
jl
sub
shll
dec
in
xor
xchg
rcll
push
mov
mov
push
xchg
push
jle
fsubs
jle
mov
mov
icebp
sub
add
pop
int3
mov
jecxz
inc
mov
adc
cmc
andb
out
scas
mov
add
inc
cmp
dec
pop
bound
and
xchg
cmpsl
bound
push
jno
out
lret
dec
cmc
aam
insl
repnz
xchg
push
mov
mov
jmp
cs
sub
mov
jecxz
xchg
shl
mov
push
and
out
mov
mov
and
inc
fcmovb
mov
xor
test
mov
cmpsl
sbb
jns
les
ljmp
outsl
xor
cli
and
sarl
stos
aas
push
lea
add
mov
aaa
out
xchg
filds
cmpsl
dec
dec
and
iret
ds
push
data16
ss
pop
mov
lahf
mov
outsl
mov
sar
shlb
orl
lret
jb
mov
mov
scas
add
sub
int
jecxz
in
pop
rcll
mov
lret
xchg
rclb
jp
call
add
jbe
push
pop
outsl
pop
xchg
add
sbb
cmp
dec
dec
xor
lds
into
jl
out
pop
in
jle
add
lods
push
sub
xlat
arpl
lret
mov
pop
imul
pop
cmp
lret
mov
mov
fsubrs
push
dec
xlat
add
pop
loopne
into
push
xchg
out
fs
mov
and
test
stc
adc
adc
hlt
loope
and
sbb
das
mov
pop
imul
jecxz
xlat
jmp
out
popa
nop
out
cmp
insb
xchg
jp
sbb
xlat
inc
divb
test
ja
jns
mov
adc
push
lods
dec
dec
mov
mov
mov
scas
xchg
sarl
insl
popf
push
ds
fsubrs
int
push
mov
mov
test
inc
sahf
inc
mov
jbe
mov
push
inc
sub
xor
mov
rcrl
or
aam
mov
cmp
rcrb
mov
call
sbb
call
mov
xchg
jae
sub
xor
test
scas
into
ficompl
adc
push
dec
pop
cmp
aas
pop
cmp
push
cld
pop
addr16
movsb
mov
dec
mov
pop
push
mov
inc
addr16
and
add
dec
pop
mov
fsubs
scas
jg
fimuls
cmpl
push
add
xchg
fcomip
or
inc
imul
mov
imul
cmp
and
incl
les
outsb
lock
ret
stc
mov
add
mov
sub
arpl
xchg
or
push
cmp
xchg
enter
cwtl
dec
cmp
in
jp
and
test
sbb
push
jecxz
arpl
add
mull
jo
testl
xchg
outsb
cmp
hlt
scas
lea
cmpsl
divl
cmp
sbb
mov
into
fs
jge
inc
lret
dec
into
int3
sbb
mov
aad
js
iretw
xorb
lret
inc
stos
pop
shlb
push
mov
in
aaa
je
xchg
imul
jl
outsb
mov
stos
jo
and
push
test
push
dec
jo
fildll
cmpl
test
fimull
nop
sub
lods
hlt
dec
cmovp
sub
js
addr16
stos
adc
stos
mov
test
mov
and
shll
pop
mov
xchg
pop
imul
and
mov
cmp
push
xor
out
add
int
sbb
push
push
jae
imul
mov
mov
mov
push
ret
int3
jge
inc
cmp
fcmovne
stos
push
jmp
xor
mov
mov
sbb
mov
call
or
cs
dec
imul
push
pop
in
push
and
add
push
rcr
imul
test
mov
fldenv
jbe
push
sbb
mov
cmpsl
push
int
or
mov
push
ds
push
dec
js
nop
sbb
and
pop
pop
jo
mov
pop
and
les
loopne
push
push
xor
scas
inc
sbb
pop
pop
ljmp
mov
inc
mov
mov
xlat
into
push
sbb
mov
xor
aas
add
xchg
jg
adc
or
mov
inc
jno
rcrb
pop
dec
mov
mov
pop
les
fmul
ljmp
or
cwtl
aad
push
ficomps
xchg
je
in
psraw
mov
sti
jmp
test
xchg
dec
lahf
xchg
clc
shrl
dec
push
push
test
out
inc
lret
lock
jmp
or
dec
cltd
xorl
in
rol
sbb
mov
outsl
mov
std
jge
daa
adc
jb
out
sbb
insl
or
loope
jl
movsb
loopne
repnz
pop
cltd
xchg
repz
nop
faddl
jne
pop
insb
out
or
ss
cmpl
loope
and
jp
iret
mov
dec
orl
sub
adc
sbb
adc
mov
leave
cmp
push
aam
cmp
addb
sti
mov
sbb
icebp
sub
imul
add
hlt
adc
lods
out
fistpll
xchg
test
and
pop
add
push
mov
pop
cmp
ss
xchg
dec
in
insl
cmp
add
pop
push
add
hlt
movsb
mov
lds
inc
data16
icebp
and
and
jge
in
mov
sub
xchg
push
or
sub
mov
addr16
cld
inc
mov
sbb
xchg
data16
xlat
mov
xchg
fdivl
add
and
push
imul
out
roll
testl
mov
push
fldcw
loopne
repz
jp
inc
jl
subl
xor
clc
lahf
sahf
inc
jle
hlt
arpl
inc
jno
ret
dec
iret
sbb
loopne
jb
stos
je
es
push
jb
aas
leave
jb
push
inc
testb
xchg
push
je
movsb
xchg
push
aaa
cmp
into
ret
jl
repz
and
int3
inc
rcll
mov
xor
and
rcrb
mov
jmp
inc
cltd
movsl
sahf
mov
pop
dec
int
sti
or
jl
mov
dec
mov
out
je
push
ret
fnstenv
ds
push
mov
dec
mov
mov
loop
mov
mov
sub
mov
ficoms
pusha
shlb
mov
jmp
add
sbb
sub
mov
push
iret
push
dec
mov
mov
add
push
add
mov
jo
dec
jb
mov
xchg
mov
inc
sbb
test
mov
popa
add
out
pop
adc
add
push
shll
push
mov
xchg
inc
rcrl
add
inc
iret
jg
dec
pop
pop
fstps
xchg
cmp
jns
hlt
pop
iret
pop
xor
mov
dec
es
mov
sbb
ss
lahf
adc
mov
fsubrl
in
jo
inc
push
cmp
jecxz
imul
fstp
cmp
dec
mov
adc
loop
sbb
xchg
outsl
mov
sahf
pop
mov
cmpsb
pop
add
pop
jne
insb
scas
mov
push
nop
dec
mov
cmp
nop
fistpll
stos
popf
cwtl
cltd
out
jle
push
je
mov
bound
push
rorl
call
mov
sub
push
dec
in
jb
repz
insb
mov
add
pop
ss
mov
cmp
or
ljmp
fs
popf
mov
movsl
jns
sub
in
lret
lahf
das
int
xor
fdivl
push
fcmovbe
adc
orb
cltd
adc
imul
sub
test
cmc
les
jnp
test
adc
inc
pop
mov
sbb
cmp
jl
mov
and
cmp
aaa
push
mov
jmp
add
xchg
repnz
mov
dec
seta
add
cmp
sbb
insb
bound
cmp
pop
cs
push
lods
fsubl
push
jno
or
xor
daa
mov
ja
inc
stos
sub
daa
mov
pop
pushf
stos
mov
push
xchg
imul
inc
sbb
add
cwtl
xorl
or
pop
or
or
xor
dec
repnz
push
xchg
xchg
jne
xchg
bound
jp
or
push
add
hlt
dec
std
repz
test
mov
fildll
adc
testb
das
mov
loopne
adc
sub
inc
fmulp
sub
xchg
mov
mov
jne
pop
sub
mov
sub
scas
mov
adc
jbe
mov
clc
sbb
jnp
sarl
inc
icebp
sbb
sub
mov
out
pop
xchg
mov
in
addl
push
les
or
cwtl
mov
cmpxchg
pop
adc
ret
sub
clc
push
pcmpeqw
inc
pop
mov
mov
lods
sub
adc
rcl
lcall
dec
xchg
adc
mov
jl
mov
or
fwait
icebp
jae
add
incl
ljmp
push
sub
add
pop
jmp
sub
nop
dec
sub
jbe
pop
jmp
pop
sbb
aaa
addr16
fdivrs
in
mov
sahf
ret
shll
xchg
push
insb
pop
js
mov
inc
mov
rol
and
jmp
pushf
xchg
divb
adc
mov
outsb
cmpsb
mov
fstps
loope
scas
loopne
out
loop
xor
pusha
adc
push
test
mov
repz
pushf
sbb
repnz
pop
add
and
js
data16
add
push
push
push
bound
dec
cmp
jo
cs
and
repz
repz
adc
xor
inc
add
cmp
popa
jno
ja
pop
es
push
fidivrs
or
test
sti
xor
lods
ficomps
outsb
scas
cmp
add
je
adc
stc
push
out
push
jo
fnstcw
sbb
push
mov
jno
jmp
ret
cmc
push
stos
cmpb
fsubrl
mov
data16
cmp
jo
scas
dec
stos
pop
and
and
and
loope
fstpt
sbb
sti
lret
xchg
dec
es
movsb
xor
out
jae
imul
pop
ror
mov
sub
orb
xchg
lock
sub
push
pop
loopne
push
sub
push
je
adc
mov
aad
and
daa
test
cmp
xor
sbb
xchg
pop
clc
cmp
xlat
add
and
and
outsl
imul
dec
push
pushf
cmpl
test
ds
out
pavgb
or
push
xor
addr16
mov
jge
xor
inc
mov
xor
es
mov
mov
sbb
sub
int
inc
imul
xor
into
xor
sbbb
cmpsb
or
clc
pmaxsw
add
sub
cmp
cmp
aas
mov
push
das
inc
fdivrp
insb
push
adc
dec
mov
jbe
hlt
cmpsl
jl
popa
repz
inc
sub
cmp
adc
push
mov
adc
mov
andb
xchg
inc
mov
lahf
iret
mov
mov
into
xorl
inc
lock
cmp
popa
ret
adc
or
daa
aas
insl
es
sbb
pop
cmp
ret
xchg
bound
push
jbe
or
pusha
sbb
clc
pop
in
fistpl
ss
popa
stc
cmp
lret
jg
lea
jno
ret
sub
xchg
or
idivl
or
lret
test
sbb
pop
mov
aaa
das
scas
bound
sub
pop
mov
loope
nop
jb
pop
das
rclb
xchg
xchg
scas
aaa
fmuls
in
pop
imul
xor
lds
ljmp
xchg
pop
lea
cld
icebp
cmpsl
pop
adc
jge
stos
mov
jp
sub
sub
rcl
in
push
or
jg
movsb
jge
adc
xchg
popa
dec
inc
jecxz
mov
scas
jmp
mov
loop
mov
in
dec
test
es
call
or
cmp
jmp
push
mov
push
cltd
add
mov
pushf
bswap
push
cwtl
stos
dec
jge
and
and
out
xchg
pushf
lea
sub
lods
dec
push
stos
push
add
adc
faddp
movsl
push
mov
push
add
push
ljmp
add
out
adc
jne
lret
int
xor
nop
outsl
xor
sbb
test
cltd
sbb
in
sbb
cmp
xchg
les
adc
iret
mov
out
dec
cli
cmpsl
stos
int
movsb
and
xchg
mov
out
pop
mov
ficoms
loopne
dec
mov
sub
mov
sub
pop
int
loop
leave
mov
mov
push
mov
xor
std
out
fmull
cmp
mov
iret
addr16
ss
mov
sbb
stc
xor
test
mov
scas
or
push
loopne
push
jp
pop
xor
or
imul
mov
mov
xor
xchg
mov
insl
cwtl
cltd
sarb
add
mov
push
or
loope
xor
repnz
xchg
js
cmp
mov
lods
loop
push
rclb
pop
pusha
add
and
lret
pop
fiaddl
enter
push
mov
dec
inc
test
pop
jmp
dec
jg
hlt
clc
divb
fistl
push
fdivrp
sbb
shll
push
pop
nop
jmp
push
ds
lds
mov
rcrb
dec
push
mov
pop
cmpsb
rolb
push
adc
iret
ja
cmpb
pop
xchg
daa
nop
cs
cmp
push
mov
repnz
outsb
pop
loop
cli
loopne
pop
pop
sahf
push
dec
je
push
pop
mov
leave
xchg
pop
dec
xor
insl
shrl
lock
inc
daa
dec
out
jecxz
sbb
xor
dec
inc
out
xor
lea
sub
and
lret
adc
call
lds
lcall
push
pop
ret
adc
cld
insb
loope
mov
adcl
push
aaa
ficomps
leave
pop
dec
dec
push
std
adc
push
and
pop
inc
ret
inc
pop
add
fwait
nop
popa
movsb
pop
je
xchg
xor
or
mov
arpl
rorb
sti
imul
xor
sbb
popf
push
or
mov
mov
enter
ja
rcll
pop
out
std
cli
jno
fs
jge
xchg
sbb
in
sbb
lods
and
xlat
mov
sub
add
rcrl
mov
loopne
bound
movsb
adc
pop
dec
shlb
cmpsl
jmp
in
push
jbe
iret
add
jmp
ffree
ret
iret
ret
mov
mov
imul
ret
add
pop
or
aaa
sarb
xor
push
imul
dec
fiadds
push
stos
ljmp
jmp
lods
nop
je
fwait
jmp
stos
dec
pop
mov
loope
movsb
sbb
cmp
int3
cmpsb
push
lock
rolb
mov
mov
sub
aaa
daa
stos
dec
mov
or
and
dec
cmc
sbb
imul
int
loop
pop
fnsave
pop
daa
sub
loopne
sbb
xchg
sbb
out
imul
sbb
mov
lods
mov
push
mov
jge
and
jnp
mov
bound
push
jl
add
imul
mov
jae
mov
les
and
or
mov
cs
xchg
imul
pop
lds
icebp
mov
mov
shrb
adc
mov
sub
hlt
adc
lcall
gs
push
pop
das
dec
loope
mov
pop
lods
mov
mov
and
jp
daa
xchg
push
cmp
sbb
push
cmp
bound
insb
adc
and
mov
and
pop
and
pop
lods
stos
rcr
mov
adc
and
rcl
mov
stc
adc
in
je
jmp
mov
mov
fists
cmpsl
clc
mov
pusha
addb
jnp,pn
xor
sub
push
mov
fs
push
xor
pop
fs
movb
sub
inc
aam
cmpsb
xchg
pop
push
jbe
fstps
sbbl
mov
xor
test
mov
xor
mov
or
pop
push
ljmp
jns,pt
ljmp
xor
jbe
adc
cmp
jl
lahf
clc
jbe
jp
cmp
xchg
dec
movsl
popa
lock
inc
mov
add
pusha
clc
incb
sti
add
lock
pop
fmull
adc
mov
lret
adcb
push
clc
cmp
ss
dec
movsb
lret
sub
jle
wrmsr
leave
push
imul
mov
cld
sbb
loope
jp
mov
fstpl
mov
pop
inc
sub
sbb
or
addr16
les
cmp
push
or
clc
lcall
insb
jo
testb
pushl
xor
leave
loope
add
cmpl
xlat
or
push
mov
pop
inc
loop
sbb
jnp
rol
enter
fimuls
addb
pop
add
push
clc
lods
jl
loopne
mov
pop
addr16
test
lret
push
mov
mov
mulb
je
stc
mov
inc
bound
divl
fdivl
mov
orl
mov
mov
jo
mov
mov
mov
ffree
mov
fisubrl
addb
or
scas
mov
xor
outsb
cs
test
and
dec
repnz
je
dec
dec
cmp
lcall
jne
lea
mov
xchg
addr16
xor
lods
inc
and
cmp
mov
mov
loop
inc
insb
pop
outsb
dec
into
icebp
mov
popf
adc
jle
mov
adc
adc
je
loope
in
push
add
push
cwtl
and
xchg
rcr
push
jnp
or
inc
pop
pop
mov
cltd
out
gs
and
adc
or
jge
cld
xor
test
lods
shrb
fcoms
lods
or
dec
cld
lcall
stc
lds
mulb
or
xor
and
pop
mov
rorb
insl
insb
rorb
mull
pop
push
mov
cmc
or
or
pop
jno
orl
adc
in
or
xchg
lcall
jo
pop
lret
ja
lock
icebp
and
pop
loop
cmp
cmp
loope
xlat
pusha
pop
and
mov
or
pop
mov
push
xor
adc
sbb
and
cmpsb
mov
es
push
in
add
lret
stos
mov
mov
or
flds
mov
jecxz
adc
or
and
mov
lods
mov
push
or
and
dec
cli
mov
sti
xchg
sub
mov
test
sub
or
add
push
jb
enter
xlat
lret
adcb
test
outsl
dec
dec
pop
fiadds
mov
data16
push
cmpsl
xor
inc
enter
scas
popf
filds
push
loop
loop
aas
push
dec
gs
test
pushf
pop
xor
ja
mov
jns
idivl
leave
jb
popf
iret
faddp
push
aad
add
xchg
imul
jb
je
inc
mov
out
xlat
cmp
daa
arpl
push
push
js
sbb
cld
call
xor
popf
rorl
insl
push
mov
push
hlt
repnz
push
and
mov
mov
jl
dec
jo
mov
sahf
push
fstpl
cmp
shrl
fcomp
push
loop
jle
mov
sarl
sti
jns
ljmp
cmpsl
mov
std
lret
jb
and
lock
mov
in
std
inc
popf
arpl
cmp
sub
fs
lahf
arpl
es
pop
arpl
dec
in
aad
jne
arpl
mov
pusha
xor
inc
inc
ja
adc
in
adc
test
in
push
push
loopne
lret
sub
inc
pop
or
aas
dec
mov
inc
loopne
lcall
in
add
xor
aas
fs
mov
and
out
mov
iret
xchg
cli
pop
iret
jnp
mov
mov
jmp
inc
cmp
xor
inc
inc
dec
adc
iret
lods
aas
inc
mov
fiadds
jmp
jg
test
sbb
rcl
lret
xor
daa
js
cld
ss
dec
lahf
mov
jle
lcall
fldt
int3
jle
jmp
es
popa
sub
add
daa
lret
mov
cmp
mov
xlat
push
notb
scas
jnp
movsl
add
loop
and
push
rorl
xor
rcrl
push
and
xchg
dec
aas
ret
push
xchg
fstps
icebp
nop
cmp
pop
imull
push
xchg
inc
pop
les
inc
inc
cmp
mov
enter
add
test
push
xchg
int
jb
nop
stos
jmp
stc
push
jbe,pn
scas
loop
dec
pusha
rorb
push
ljmp
cmp
and
mov
enter
loop
test
xchg
fbld
xchg
cmp
and
dec
xchg
hlt
lea
dec
rol
pop
lods
mov
movsl
mov
shlb
mov
sbb
xor
fadds
imul
pop
adc
mov
adc
fwait
cmpsb
cmp
jb
cmc
and
not
scas
pop
mov
bound
loopne
dec
and
adc
scas
mov
and
cmp
mov
push
add
or
out
rorl
mov
mov
pop
sahf
inc
stc
sahf
pop
jmp
lock
cltd
cmpl
mov
out
push
dec
movl
xor
nop
jnp
lcall
mov
sub
aam
xchg
rcr
popw
in
fstps
or
mov
sbb
push
mov
add
rorb
mov
int3
fistl
test
pushf
adcb
xlat
pop
mov
sub
mov
lret
out
popa
notb
int
lcall
xchg
mov
lock
das
mov
je
add
jae
imull
repnz
mov
jle
and
xchg
notl
lds
dec
mov
mov
xor
mov
aam
pop
pop
xchg
push
xchg
pop
in
cmc
or
and
mov
outsb
das
adc
mov
mov
stos
lock
sub
add
adc
xor
or
std
outsb
jo
insb
leave
ljmp
xchg
dec
cmpsb
push
cltd
or
data16
mov
orb
pop
xor
or
lcall
mov
cld
es
lods
sbb
lods
cmp
iret
mov
fdivrl
and
movsl
mov
xor
sub
mov
mov
and
fnstsw
pop
sub
outsb
inc
scas
cmpsl
sbb
push
std
pop
cmpsl
test
push
into
push
inc
movsl
adc
pop
adc
stc
pop
stos
jbe
push
std
xlat
outsl
das
mov
std
aad
add
cmpsl
sub
ds
sub
cli
mov
daa
stc
push
mov
xchg
testl
fstpl
jmp
push
mov
dec
enter
aad
movsl
inc
mov
imul
mov
mov
jno
mov
mov
andl
and
outsl
out
pop
js
adc
cltd
outsb
insb
lret
bound
fstpt
mov
in
into
and
dec
add
or
aaa
inc
leave
cmp
or
lret
int3
inc
addr16
xchg
fcoms
push
mov
jbe
pop
outsb
mov
dec
fcmovnu
jno
mov
or
pop
mov
mov
xchg
push
jle
add
sbb
jmp
push
fsub
jnp
inc
add
and
cmpsl
xchg
sub
push
pop
out
lfs
mov
mov
and
aad
mov
pop
imull
iret
aad
fstps
cmp
cld
inc
ds
mov
adc
xchg
pop
xchg
sub
testb
mov
adc
xchg
jl
insl
cmp
lods
jmp
outsb
add
mov
adc
cmc
lds
inc
ficompl
sub
or
xchg
or
movsl
or
ds
or
cld
in
sub
and
add
fildll
clc
inc
sbb
sbb
fwait
repz
mov
dec
cmc
xchg
pop
pop
mov
mov
ljmp
or
xchg
jge
in
xchg
sbb
xchg
ja
pop
pop
js
cmpsl
cmpl
or
mov
popa
sahf
jns
sub
nop
dec
stos
lods
out
mov
sub
mov
jle
jo
lret
and
pop
or
lods
std
shlb
cmp
push
fs
add
add
push
xchg
cltd
xchg
and
adcb
mov
xor
pop
out
mov
xchg
test
pop
addr16
adc
adc
or
cmp
hlt
or
loopne
in
dec
movsl
push
mov
jl
inc
leave
cltd
inc
cmp
mov
mov
jnp
mov
movsl
popa
loopne
in
mov
dec
int3
push
jns
fildll
sbb
jns
mov
pop
sub
cld
outsb
jmp
jl
jno
nop
cmpsb
pop
cmpsb
jo
jbe
add
add
push
pop
and
xchg
or
push
inc
jne
leave
cmpsb
sub
jae
sbb
mov
push
imul
nop
add
dec
jmp
push
shl
sbb
add
mov
ret
sti
and
or
enter
test
movzbl
jno
jmp
lcall
inc
in
das
xor
sbb
and
jne
inc
mov
cwtl
sub
pop
or
stos
cmpsb
inc
mov
call
mov
cld
pop
in
cmpsb
out
cmp
hlt
repz
push
mov
dec
fnsave
dec
cltd
movnti
pop
sbb
loope
sbb
push
pop
dec
loope
adc
mov
lret
cld
aaa
mov
pop
into
scas
nop
sub
cs
cmc
inc
pop
fnstcw
aas
sub
test
push
or
and
dec
arpl
sbb
mov
sbb
andl
and
fidivrl
int3
mov
jne
and
gs
inc
mov
add
mov
xchg
ret
scas
push
xchg
mov
dec
mov
pop
ljmp
xchg
movb
pop
xor
shll
xor
and
ds
cltd
jb
pop
push
sbb
xchg
pop
cmp
xchg
sbb
adc
cmp
push
insl
mov
sub
push
or
xchg
lahf
jge
or
fs
lods
pop
pop
rcrb
repz
loope
xchg
in
addb
sub
addr16
sbb
cwtl
out
inc
loop
pop
lods
and
fs
dec
sub
pusha
sarb
and
adc
fistl
inc
jnp
out
mov
int3
and
cmpl
inc
scas
pushf
dec
inc
add
mov
push
mov
imul
data16
scas
lret
sub
add
int3
mov
sbb
xlat
adc
nop
shll
rcr
or
adc
fdivrl
or
cmp
testl
icebp
pop
mov
icebp
and
jns
in
or
inc
inc
and
rcrl
rorl
outsb
pop
add
push
sbb
or
test
and
or
inc
mov
std
scas
add
imul
xlat
jmp
cs
frstor
lcall
ds
mov
mov
into
xchg
loopne
dec
add
cmp
rclb
gs
outsb
sar
fidivs
pop
mov
pop
imul
les
in
ror
test
pushl
xor
jg
mov
std
push
xchg
shlb
lock
mov
push
enter
push
fstps
ljmp
mov
stos
mov
and
shrb
or
adc
lods
push
scas
or
push
mov
mov
jg
daa
loope
inc
mov
bound
test
dec
mov
mov
cltd
xchg
mov
sub
jge
cmpsl
mov
cmpsb
stc
test
and
or
decl
ja
mov
rclb
cmc
into
mov
adc
dec
push
lods
cmc
hlt
shll
jmp
rep
or
xor
adc
ljmp
nop
or
jp
pop
inc
sbb
shl
add
enter
lea
dec
lds
dec
or
mov
mov
das
push
ss
lock
sub
xor
testl
adc
push
dec
pop
inc
push
xchg
in
stos
pop
cmpsb
push
in
mov
cmp
adc
mov
push
sub
or
pop
push
xchg
xchg
mov
dec
xor
dec
cmp
xchg
fidivl
mov
filds
cmp
ret
insb
dec
pop
test
out
insb
popf
jp
testl
sbb
jge
or
xchg
xor
or
inc
jnp
mov
in
and
hlt
cmpsb
ss
add
icebp
add
ret
inc
shll
push
mov
in
lahf
dec
in
push
es
out
out
fstpt
add
add
dec
mov
in
call
testb
xor
cmpsb
pop
je
cltd
stos
inc
jle
cmp
or
cld
cltd
jle
leave
xchg
push
test
mov
test
daa
mov
jbe
or
sbb
ret
out
mov
mov
push
rcll
inc
js
addr16
dec
rorl
iret
xchg
mov
sbb
pusha
push
sbb
mov
jo
nop
insb
xchg
fisubs
ret
lcall
test
adc
cwtl
xor
sahf
mov
scas
xchg
mov
pop
and
ret
fistps
cmp
int
add
es
jp
negb
clc
push
dec
sub
cmc
out
dec
jne
xor
adc
sbb
mov
insl
inc
sub
push
dec
sbbb
pop
insl
cmpsl
test
mov
jo
insb
push
aam
test
sbb
sysret
negb
add
add
insl
dec
pop
popf
xorl
ror
add
push
roll
insb
push
cmpsb
jb
mov
scas
push
jl
sub
fdivrs
cmpsl
mov
push
cli
shll
xchg
pusha
push
ss
mov
or
js
dec
mov
xor
aad
cmp
cmp
gs
cmp
ret
sub
add
faddl
jle
mov
lcall
xor
push
popf
jmp
shll
push
jecxz
nop
push
enter
leave
fldcw
arpl
jecxz
xor
pop
rolb
jge
mov
sub
add
out
in
xlat
or
cmpsl
sub
stc
cwtl
popa
mov
adc
fadds
insb
push
sbb
mov
pop
aam
movlps
js
dec
dec
jnp
les
and
out
addr16
pop
pop
pop
adc
sbb
scas
mov
mov
addr16
cs
mov
and
pop
or
jnp
mov
mov
jae
push
cltd
movsb
pop
js
in
inc
fisttpll
test
daa
jg
movsb
mulb
pop
ficoms
rclb
push
hlt
cmp
shl
out
ret
xor
sub
addr16
push
jmp
push
pop
scas
jl
loope
lahf
mov
push
xor
lds
inc
jl
sub
xchg
mov
mov
adc
xchg
cld
lods
push
jp
loope
xor
jne
mov
sub
xchg
loopne
loope
je
data16
mov
mov
inc
ret
dec
and
jb
int3
adc
mov
stos
cmpsb
bound
aam
cmp
jns
into
pop
inc
pop
dec
cs
mov
icebp
adc
jno
gs
jmp
push
mov
jg
sub
mov
adc
xchg
lods
add
sahf
aad
cltd
test
fidivl
sub
xor
loop
xchg
arpl
jo
xor
ja
out
out
push
push
test
stos
jle
mov
push
cmp
sub
dec
daa
lahf
test
mov
jle
insl
cwtl
xchg
cmc
in
seto
loope
jo
add
int
xor
and
imul
cmp
shrb
aaa
xchg
cltd
mov
inc
push
xchg
loope
das
and
cmp
out
xchg
xchg
insl
cmp
testb
cltd
sbb
inc
add
sub
arpl
imul
out
lock
stos
pop
adc
pop
push
and
repnz
daa
mov
pop
mov
xchg
and
cmp
push
in
icebp
dec
insb
xor
adc
and
add
mov
cli
ljmp
hlt
int
push
jno
cmpl
ficompl
lea
in
popa
adc
cmp
js
fidivl
pop
stc
decb
jo
lcall
sti
pop
cld
xchg
sub
and
sub
ret
mov
add
sbb
inc
mov
xchg
mov
xchg
aam
pop
mov
lods
push
insl
std
pop
sahf
dec
jb
lcall
ret
dec
inc
add
rcrl
mov
lcall
rclb
xor
insb
dec
xor
mov
loop
insb
repz
push
push
jp
sti
aad
dec
sbb
lock
cld
add
inc
scas
icebp
gs
dec
imul
cmp
gs
outsb
scas
adc
imul
sbb
lea
lcall
add
into
pop
inc
jmp
movl
testb
test
popa
jno
inc
or
sahf
mov
andl
mov
cli
ret
dec
mov
xor
lcall
mov
decb
jne
adc
pusha
adc
stc
cmp
enter
inc
mov
cmpl
rcr
pop
pusha
sub
xor
jge
mov
aas
jno
mov
je
jmp
or
mov
and
xchg
ds
and
fcmovb
aas
leave
int3
sarb
push
inc
adc
push
hlt
loop
lret
dec
add
popa
dec
inc
aas
cmc
fnsave
mov
popf
out
stos
xchg
sahf
pop
and
or
cmp
lret
cmp
xchg
cmp
adc
lods
add
outsb
mov
mov
das
push
hlt
imul
mov
in
aas
repnz
dec
cmp
int3
push
push
adc
xchg
pop
jnp
incl
gs
mov
lods
shlb
mov
xor
push
jo
adc
xchg
add
adc
cmp
sub
lahf
pop
xchg
push
in
pop
in
icebp
inc
insl
dec
stc
mov
adc
aam
lock
addl
pop
ror
push
cmpsl
mov
sub
lods
inc
into
test
cmc
aad
repz
repz
inc
inc
sbb
mov
xchg
mov
mov
mov
sbb
fwait
xchg
ftst
in
cmp
and
pop
rcll
inc
push
cltd
es
cmp
xor
cmpsl
repz
push
aas
jp
add
inc
leave
into
cmc
aas
fistps
fisttpll
cmp
push
sub
fucom
cmp
mov
or
dec
mov
das
and
fwait
ret
adc
in
inc
pop
fyl2xp1
mov
xchg
sub
je
cmp
rorb
adc
hlt
pusha
and
push
jb
sub
add
int3
lahf
push
push
icebp
mov
dec
mov
and
xchg
add
lds
and
xor
sub
dec
and
add
sub
xchg
and
push
jns
ja
inc
sub
pop
and
jecxz
pop
fildl
lea
call
movsb
sub
icebp
leave
mov
je
popa
in
adc
loope
cmpsl
mov
mov
js
sbb
aaa
adc
movsb
adcb
rcrl
mov
mov
dec
xchg
cmpsb
jmp
push
xchg
pop
imul
cld
ja
or
test
arpl
fisubl
dec
lods
testl
xor
dec
lret
and
add
cmp
sub
pop
scas
test
mov
ret
int3
xchg
inc
enter
cmpsl
push
and
and
int3
xchg
lock
lret
pusha
push
scas
movsl
sub
mov
repnz
cwtl
inc
xor
fsts
ja
add
mov
jmp
or
inc
cmpl
xor
sub
sub
jecxz
pop
outsb
sub
in
sub
inc
add
push
repz
lds
lea
mov
xchg
mov
push
and
addr16
insb
jge
shl
dec
add
mov
xchg
pop
or
notb
jno
cwtl
inc
jp
ds
inc
mov
or
nop
xlat
incb
xlat
and
nop
jmp
enter
sub
iret
or
xor
mov
dec
push
fildll
pusha
pop
mov
dec
das
je
push
jne
bound
cwtl
mov
inc
fnstsw
fsubrl
lods
gs
in
xchg
pop
stc
and
outsl
mov
jbe
mov
mov
pop
sbbb
js
push
xor
xor
bnd
cltd
pop
stc
fwait
notl
adc
dec
jne
mov
inc
jecxz
call
jb
or
mov
adc
scas
mov
lods
repz
nop
loope
mov
jecxz
iret
adc
mov
sub
stos
cmp
enter
mov
xchg
push
inc
sbb
xchg
adc
fldl
jb
pop
pop
xor
loopne
add
sub
dec
into
in
repnz
stos
jmp
mov
or
mov
cltd
pop
not
lds
mov
push
mov
cmp
jnp
test
adc
and
out
xchg
mov
lret
mov
jb
sub
cmp
xchg
clc
aaa
sbb
add
xor
testb
mov
mov
hlt
pop
xor
jns
pop
lcall
xor
and
mov
inc
sti
push
jb
outsb
cmpsl
or
stc
inc
cmp
scas
movsb
das
loopne
scas
in
inc
mov
shlb
xlat
out
cmpsb
rcr
imul
add
nop
and
or
xorl
ds
rol
mov
call
and
je
sbb
jne
sub
jnp
loope
fbld
data16
fldt
sbb
iret
loopne
mov
mov
cs
or
sub
xor
rcll
sub
fimuls
mov
sub
cld
mov
or
scas
montmul
cmpsb
add
dec
cli
sub
sbb
cmpsl
sub
das
add
xchg
xchg
loope
or
ret
mov
sarl
inc
in
jns
mov
inc
add
std
sbb
cmp
xor
cmc
mov
outsb
push
aas
ljmp
loop
xor
sbb
out
in
xor
iret
pop
dec
xchg
les
mov
insl
in
add
test
popf
popa
in
mov
or
es
sub
mov
mov
ret
lock
iret
leave
aam
push
jecxz,pt
pop
enter
xchg
adc
cmp
loope
cld
sub
js
jp
scas
das
das
jne
movsl
jecxz
shl
imul
repnz
out
sbb
fwait
push
mov
inc
jle
or
adc
test
sbb
bound
add
mov
mov
or
adc
push
outsb
movsb
sub
cmp
repnz
inc
sub
add
cmpl
xchg
les
lcall
ss
mov
fidivs
mov
push
aam
cmc
dec
jle
push
imul
ja
mov
add
and
push
xchg
push
pop
inc
or
jmp
sub
push
mov
es
push
lods
pop
pop
lea
shl
aaa
out
xor
push
and
lods
lock
movsb
lahf
push
lret
and
adc
gs
sti
lock
jmp
mov
test
sub
inc
push
inc
imul
mov
add
push
sub
sub
popf
jae
orl
jnp
xlat
das
das
fadds
arpl
addb
xlat
push
pop
insl
jecxz
mov
gs
push
in
mov
push
lods
pop
iret
int
stos
mov
mov
enter
sbb
push
test
sub
loope
cltd
imul
popa
xchg
sub
pop
aas
add
pusha
scas
ret
push
dec
dec
loopne
xchg
into
dec
pop
iret
adc
mov
pusha
inc
add
movl
arpl
test
pop
stos
jo
lret
xchg
movl
mov
pop
jmp
movb
or
movsb
lret
pop
add
jg
test
out
mov
mov
mov
xchg
mov
cs
andb
test
shlb
addr16
xor
sti
fiaddl
loopne
int3
daa
pop
in
dec
sti
and
pop
push
mov
mov
aaa
xchg
xchg
shlb
bound
dec
clc
aad
xor
xchg
mov
mov
sti
push
dec
mov
mov
fwait
stos
out
mov
pop
xchg
aaa
inc
mov
aam
pop
cmpsb
imul
das
enter
pop
cli
clc
aad
sbb
icebp
test
icebp
je
aaa
test
movsl
inc
pop
and
mov
xchg
out
test
or
ljmp
add
jmp
out
iret
stc
imulb
xlat
pop
or
stos
inc
popf
cltd
push
mov
xchg
mov
cs
adc
cltd
dec
outsl
loopne
iret
aad
sbb
or
adc
xlat
inc
mov
xorl
icebp
insb
rcr
gs
out
xor
cmp
rclb
shrb
mov
out
lcall
sbb
push
mov
mov
neg
jno
cmp
ror
lret
lret
jp
negl
cltd
sti
and
imul
jnp
jl
or
call
sub
into
cmp
push
xchg
xor
test
mov
mov
push
repnz
ja
cmp
mov
xchg
subb
jp
test
inc
and
sbb
sti
pop
fdivs
mov
sbb
sub
test
test
push
loope
int
xor
jns
cmpl
repnz
scas
insb
pop
mov
cltd
mov
leave
aad
inc
and
cmc
inc
andl
pop
inc
icebp
push
mov
mov
aam
aaa
sti
jb
inc
pop
testb
mov
fisttps
xchg
xchg
mov
or
imul
mov
mov
jae
imul
loopne
hlt
sarl
ljmp
push
in
arpl
push
inc
aam
addb
jg
xchg
push
iret
sti
shlb
xchg
push
imul
andl
into
sub
fistpll
imul
clc
inc
ds
pop
sub
aaa
cmp
cld
add
sbb
in
ja
mov
jnp
or
dec
sub
push
das
pop
stos
cltd
repz
mov
in
insl
and
push
bound
cmp
cmp
pop
jbe
gs
sbb
mov
je
pop
or
mov
push
ret
out
push
jb
mov
dec
loop
adc
lret
and
inc
jbe
call
mov
cmp
lcall
mov
lcall
test
addb
aam
cli
lahf
push
or
test
test
shlb
ljmp
jg
stos
push
sub
std
or
sbb
push
in
mov
push
cld
inc
cmp
repz
bound
rorl
cs
inc
jne
xchg
adc
and
aad
pusha
in
ret
jmp
repz
leave
mov
icebp
ret
xchg
dec
les
fadd
and
imul
mov
ds
mov
mov
ficoml
mov
xchg
cltd
adc
lret
popa
subb
ss
xchg
sub
into
cltd
xchg
call
push
call
into
dec
mov
inc
push
push
pop
xor
push
adc
insb
push
imul
dec
jp
std
in
mov
mov
fimull
xchg
bts
push
mov
pop
xchg
cmp
je
mov
sbb
mov
ficoml
and
sbb
scas
sub
lret
pop
fisubs
lahf
subb
jne
jo
scas
adc
je
adc
push
leave
fsts
test
pop
orl
gs
sbb
mov
fcmovbe
movsl
mov
push
or
adc
fcom
add
imul
cmp
es
push
mov
test
sti
sub
ja
addr16
testl
or
xlat
cmp
insl
push
dec
mov
push
lds
and
add
dec
mov
mov
dec
xchg
xor
cmp
push
mov
in
lahf
roll
lret
repnz
test
mov
mov
xor
pop
lds
push
dec
jg
cmp
js
cmpsl
adc
nop
fmul
fdivs
mov
mov
out
sbb
lods
adc
dec
xchg
sbb
cmp
push
in
jne
popa
arpl
mov
mov
mov
scas
movsl
outsl
outsb
icebp
push
cmp
scas
stc
aad
pop
aam
aaa
mov
lock
inc
fistpll
sbb
add
insb
ljmp
lds
add
adc
in
push
daa
xchg
pop
push
hlt
xchg
xchg
jp
adc
adc
arpl
inc
mov
xor
add
push
add
sahf
pop
jo
cli
xchg
pop
test
adc
in
or
sti
dec
cld
mov
adc
call
insl
addr16
jmp
sub
or
imul
xor
mov
mov
das
push
adc
icebp
movsl
fiadds
push
addr16
aam
roll
lret
hlt
dec
pop
xor
test
push
mov
ss
jecxz
jno
lret
mov
mov
daa
sub
inc
imul
pop
mov
cld
sahf
sbb
adc
dec
push
lahf
leave
loope
xchg
call
std
arpl
mov
mov
sti
dec
js
push
sub
dec
mov
xlat
cmpsb
add
mov
sbb
bswap
int3
cmp
fwait
out
inc
adc
mov
mov
xor
sbb
pop
fnstenv
and
movb
insl
fs
mov
mov
repnz
fildl
in
loope
inc
mov
push
fists
jb
icebp
adc
mov
adcl
jno
sub
mov
insb
dec
ja
repz
fldenv
jnp
xchg
nop
pop
push
ret
cmpsb
sbb
pop
xor
lods
xchg
pop
fildll
dec
out
inc
fldenv
mov
repz
lea
mov
push
mov
mov
fildll
fistpll
fcomps
repz
push
and
add
sub
mov
ljmp
or
rcll
loop
fimuls
pop
jbe
adc
hlt
lcall
dec
push
int3
sbb
inc
adc
jae
out
dec
push
add
mov
jne,pt
push
pop
jp
or
iret
fistpll
ja
inc
xor
xor
out
mov
xor
loope
sub
pop
hlt
pop
adc
stos
bound
xor
std
out
sbb
test
add
jp
stos
aaa
mov
aas
mov
cmp
lock
subl
jmp
ljmp
mov
cmpsb
outsb
xchg
call
mov
stos
inc
or
lds
mov
pop
inc
dec
inc
xchg
xchg
fldt
push
scas
cmp
fcmovu
xlat
xchg
pop
mov
dec
jmp
int3
pusha
xlat
and
fadd
call
mov
filds
call
stos
and
addr16
push
test
xlat
sahf
dec
push
xor
cmpsl
push
cmpsb
adc
push
mov
push
mov
fs
cmpsb
pushf
mov
push
fwait
push
rcrb
mov
lock
aaa
jno
fucom
out
ret
cmp
add
or
xor
out
push
mov
scas
push
xor
or
dec
inc
daa
cmp
or
addl
mov
or
sti
fwait
out
inc
mov
out
xchg
stos
mov
xchg
lods
in
mov
insb
popf
movsb
add
test
mov
jne
repnz
loope
data16
insl
xchg
dec
xchg
xchg
and
pusha
adcl
cld
mov
insl
fnstsw
into
test
add
fmul
pop
xor
mov
out
sbb
lock
clc
call
lods
repz
call
loopne
xchg
pop
mov
push
iret
sub
int
pusha
shl
pop
out
in
incl
jnp
jmp
dec
jmp
pop
rclb
inc
adc
sub
cmpsb
mov
ret
jne
push
stc
xor
inc
fs
push
aas
adcl
out
jecxz
daa
repnz
rolb
add
cld
inc
pop
icebp
mov
jno
and
cmpsl
fwait
pop
pop
test
popa
cmp
mov
les
in
jo
add
inc
xchg
push
mov
outsl
outsl
jnp
mov
movsb
lret
jb
add
mov
cli
pop
dec
mov
test
popa
fmuls
pusha
add
dec
add
add
cli
push
rcrl
jo
xor
push
inc
insl
cmp
loope
sahf
sub
int
dec
mov
aad
xchg
jecxz
mov
int3
fstpl
shlb
add
call
inc
mov
jno
inc
xor
inc
cmc
and
push
jnp
loop
cmp
shrb
mov
lea
and
mov
adc
out
mov
daa
mov
scas
nop
push
dec
and
outsl
jmp
out
out
xor
pop
sbbl
nop
mov
mov
sbb
cli
mov
test
ds
and
call
adc
dec
cmp
push
and
add
and
shl
cwtl
xchg
movsbl
adc
sbb
movsl
lock
int3
and
out
sub
adc
push
push
loopne
test
jp
lock
lds
xor
push
mov
jge
lods
cwtl
adc
push
lcall
jecxz
aas
pop
and
movsl
stos
push
push
push
mov
cmovns
clc
in
lock
or
daa
xchg
arpl
popa
adc
fimuls
call
inc
xlat
bound
ljmp
mov
ret
loope
mov
clc
pop
sti
daa
mov
std
xlat
pop
js
mov
push
adcl
lock
or
fbstp
fbld
addl
mov
fsubrl
sbb
flds
in
test
mov
sub
adc
sti
bound
out
cmp
and
mov
push
jp
sub
add
cli
int3
leave
aas
mov
fwait
jne
dec
push
dec
lret
fdivs
subl
push
arpl
icebp
sahf
push
pop
stos
out
sahf
shlb
dec
sub
sahf
rorb
cmp
sub
push
shrl
das
pop
adc
add
insl
pop
push
cmp
fisttpll
inc
push
push
dec
inc
push
lock
xchg
mov
rcll
xor
les
mov
jnp
inc
inc
scas
ja
out
push
push
add
dec
sbb
adc
fiadds
jp
cmp
lret
push
xchg
xor
mov
std
xor
add
or
xchg
inc
aam
fnstcw
xchg
fiadds
adc
sub
push
mov
pop
rclb
and
xor
mov
stos
fcoml
rcrb
cltd
pop
and
es
inc
xor
out
and
sbb
add
xchg
push
shlb
int
or
adc
and
lret
mov
repz
push
out
cmpsb
jne
sub
dec
jg
push
adc
jle
jno
and
mov
xchg
sbb
js
sbb
mov
push
fistps
rolb
mov
cmp
add
mov
jno
gs
jmp
jp
fidivrl
push
stos
xchg
adc
sbb
outsl
xchg
and
or
or
ja
sub
sbb
mov
push
sub
jge
push
in
movsb
dec
loopne
mov
lcall
in
push
ficomps
loop
or
sti
rorb
adc
sbb
inc
cmc
mov
pusha
mov
dec
lea
loopne
out
scas
out
lods
adc
les
lea
pop
push
jl
adc
and
call
sarb
jne
jmp
sub
cmp
cmp
adc
xchg
xchg
lcall
inc
fdivl
inc
xchg
addr16
xorl
jl
gs
mov
jne
aaa
roll
sti
jne
movsl
dec
cwtl
mov
cmp
mov
arpl
sahf
scas
or
push
lds
test
add
xchg
lahf
add
sub
lods
xor
sbb
in
mov
ljmp
lret
fsub
sub
fwait
jo
in
xor
popf
jne
shr
cwtl
inc
cmp
cmp
clc
and
mov
xchg
xor
mov
hlt
lcall
ficoms
mov
mov
xchg
mov
jl
xorl
mov
gs
in
je
dec
scas
out
mov
jge
addr16
or
pop
cmp
das
or
fidivs
add
orl
rcrb
ja
loopne
add
xor
lock
add
push
mov
fstpl
andb
sub
pop
adc
rcl
dec
les
rolb
jo
sub
jmp
xchg
gs
sarl
shrl
ljmp
lahf
jmp
movsl
imul
in
imul
and
mov
inc
movsb
adc
mov
movsl
stc
dec
jle
fiaddl
mov
adc
ljmp
test
in
cmpsl
repnz
xchg
push
aas
pop
lahf
iret
jne
out
fcoms
enter
jae
sbb
and
popf
jge
xchg
nop
mov
orl
das
cmpsb
vminps
enter
enter
mov
outsl
and
mov
sbb
mov
cmpsl
jg
aaa
loope
iret
iret
out
nop
pop
jbe
inc
daa
mov
scas
daa
push
sarl
pop
mov
adc
call
inc
sub
cmp
rcll
mov
insl
and
xchg
sub
sti
jge
push
out
aad
or
jo
lcall
loopne
ret
jecxz
jo
push
dec
pop
jb
push
xor
cmp
mov
bound
pop
adcb
lcall
jg
mov
imul
cmp
mov
sar
mov
lea
jecxz
mov
mov
push
sbb
inc
cmp
xor
add
rolb
jae
aad
and
mov
inc
mov
dec
mov
sbb
push
jnp
push
das
negb
and
inc
fnstcw
push
and
jl
out
pop
push
and
mov
and
je
out
xor
jnp
push
add
movsb
addr16
pop
sub
dec
cmp
shrb
jl
lcall
sbb
andl
daa
ja
pusha
fisubs
or
in
sahf
int3
xchg
daa
jecxz
loop
push
mov
adcb
scas
das
stc
lods
loop
daa
pop
mov
rcll
mov
mov
negb
in
jg
lods
cmpsb
shl
cmpl
notl
pop
aam
xchg
in
push
int3
pop
cmp
jmp
fsubrs
fildl
mov
js
mov
adc
pop
xor
cli
test
scas
sbb
clc
inc
inc
mov
add
rcll
aam
push
xor
out
or
inc
enter
scas
lods
cld
in
loop
mov
mov
sub
pushf
xor
mov
stc
lods
addr16
lret
aad
icebp
add
lods
bound
sbb
mov
cmpsl
cmp
cltd
push
pop
cmp
sub
xor
mov
dec
jge
dec
add
cld
jne
orb
jp
cmp
sbb
and
pop
aad
inc
cmp
loope
aas
movb
mov
outsl
mov
shll
jne
pop
idivl
dec
ss
stos
shrb
jo
xchg
and
lahf
lds
adc
aad
inc
mov
aas
shlb
cmpsb
jns
leave
push
jo
leave
test
sbb
ljmp
inc
push
subb
xor
icebp
pop
sbb
adc
pop
sti
sbb
out
iret
in
fidivrs
fildl
ljmp
insl
push
jmp
jns
fs
shl
pop
sarb
and
inc
scas
and
xchg
insl
not
xchg
call
mov
scas
mov
cmpsb
aaa
aam
and
pop
lea
stos
sahf
ja
test
test
mov
insl
ljmp
push
sub
sub
stos
jmp
add
rol
loop
xchg
xchg
out
mov
bts
inc
repz
loope
iret
aam
sbb
pop
mov
jb
mov
push
jmp
adc
jne
aaa
cmpb
inc
shl
inc
mov
mov
pop
in
leave
add
or
out
inc
jno
fmull
sub
mov
clc
popa
cmpl
add
hlt
sub
imulb
xchg
xchg
xchg
lods
ret
cmc
sub
jge
popa
jmp
loopne
fwait
sahf
pop
jo
popa
jb
incb
and
lahf
and
popa
into
or
jno
repnz
dec
or
xchg
rcll
iret
subl
movsl
mov
mov
push
add
std
aaa
jecxz
sbb
xchg
test
test
sub
jg
cmp
daa
push
hlt
dec
jne
mov
add
loop
mov
mov
and
dec
xor
nop
inc
push
ljmp
add
in
repnz
cmp
adc
push
push
push
iret
xchg
stos
push
pop
lahf
enter
add
adc
xchg
mov
mov
or
jge
jge
xor
or
test
out
mov
sbb
insb
sbb
lods
out
gs
mov
push
jbe
add
lcall
lcall
jle
cmpsl
inc
mov
pop
aaa
test
loop
sbb
movsb
int3
and
xchg
pushf
movups
adc
scas
pop
js
test
sti
imul
negb
jns
bound
xlat
push
clc
call
cmp
iret
sub
mov
jle
push
aaa
bound
mov
inc
in
pop
jno
sbb
xchg
sti
pop
xchg
test
in
into
lea
outsl
daa
jle
push
jge
in
or
ds
out
rcll
std
mov
in
std
cltd
add
push
dec
js
mov
cmpsb
xor
adc
sarb
jecxz
movsl
dec
jmp
mov
fadds
lods
push
add
idiv
movsl
inc
lret
fbstp
aas
aas
cli
adc
xor
mov
xor
js
fs
sbb
or
pushl
cld
test
fiaddl
dec
jge
jp
jg
or
ret
out
jb
mov
test
sbb
xor
ret
fwait
inc
add
add
pop
bound
ss
or
add
jae
in
sbb
inc
add
in
xor
jnp
lods
es
std
cld
xor
rol
push
xor
nop
push
dec
inc
adc
pop
pop
movsl
leave
jl
lea
pop
mov
mov
cmpsl
clc
mov
mov
ds
std
mov
mov
nop
pop
aaa
jns
push
inc
ljmp
sbb
scas
fdivl
push
shrl
cmpsb
pusha
xchg
or
std
push
fwait
shll
scas
xchg
xchg
dec
jge
pop
popa
cmp
dec
and
loope
add
xor
icebp
sub
pop
add
roll
and
mov
incl
nop
dec
imul
lret
adc
call
es
sbb
clc
sub
out
int
inc
dec
and
cmp
fsubrp
push
adc
stos
lods
pushf
add
push
push
ret
adc
ds
mov
mov
pop
mov
and
lods
cs
dec
fmul
xlat
xchg
cmp
fsts
mov
mov
cmc
loope
xchg
adc
inc
shll
mov
fldt
addb
mov
push
xchg
in
add
pop
push
sahf
movzwl
outsb
push
in
jmp
sbb
shr
xor
call
dec
es
mov
and
cmp
insl
push
divb
lret
fdivl
cltd
inc
sub
aas
jg
lret
mov
icebp
mov
push
in
jb
insl
sub
lret
addr16
inc
add
shrl
push
repnz
cmpsb
sti
push
adc
loope
adc
pop
stos
jo
ja
andl
gs
cmp
ret
int3
into
dec
roll
test
in
push
jle
daa
dec
loope
insl
lcall
ret
mov
xchg
addr16
fistps
push
push
hlt
mov
pop
mov
ficoml
mov
scas
imul
ficomps
xchg
sbb
pop
lret
dec
adc
inc
push
scas
aas
ret
lahf
push
xor
int
int3
fldt
push
mov
cmp
fbstp
or
jbe
inc
or
xchg
pop
cld
sub
ret
in
inc
cmp
and
cmp
sbb
push
mov
icebp
fisttpll
push
sbb
jne
mov
rcl
and
xlat
cmp
jo
mov
xchg
pop
ret
roll
dec
xor
aas
or
mov
sbb
dec
out
leave
mov
mov
data16
mov
lds
test
gs
jnp
pusha
inc
lock
sub
push
jp
repnz
fcompl
xchg
out
fisubl
inc
push
sar
aas
rcrb
xor
xor
pop
xor
lret
xchg
dec
and
gs
push
sbb
pop
sbb
dec
sub
push
into
xor
fadd
jecxz
addl
movsb
dec
xchg
idivl
mov
mov
negb
pop
ret
sti
leave
testl
or
int
std
rcl
mov
push
or
inc
sbb
fsubrs
lret
cmp
xor
clc
pop
pop
mov
repnz
cmpsb
bound
push
test
sahf
mov
pop
mov
or
addr16
inc
popf
jbe
sub
xchg
adc
xchg
fwait
testl
add
es
xchg
mov
call
loope
jnp
or
imul
sahf
std
rclb
add
and
jns
insb
test
mov
adc
int
enter
xchg
ffreep
lahf
sar
dec
int
jg
mov
add
fimull
or
fistpll
fisubrs
sub
test
ja
or
arpl
sub
lret
insb
jge
mov
dec
or
popf
gs
adc
jecxz
cli
and
push
mov
jno
adc
xor
into
test
xchg
jecxz
je
mov
lock
stos
shrb
mov
stos
adc
pusha
je
mov
xchg
insl
clc
cmp
insl
and
addl
stc
push
or
inc
jmp
cmpsb
je
xchg
imulb
cli
adc
mov
sub
pop
mov
bound
fildll
out
and
mov
lods
in
and
cmpl
cmp
int3
sahf
repz
push
insb
mov
aas
outsl
sbb
and
jnp
stc
test
arpl
js
cmp
push
push
xor
loope
jbe
cmpb
xor
insb
js
cmp
enter
jb
mov
adc
fidivrs
mov
clc
dec
sub
push
xchg
jmp
pop
lcall
rorl
or
sub
xchg
ss
mov
pop
sbb
mov
pop
imul
or
inc
loopne
sub
cld
cmp
stc
jo
dec
jl
cmp
mov
mov
stos
jl
lahf
test
idivl
outsb
loope
lret
es
das
sub
pop
mov
adc
gs
pop
mov
aad
imul
cwtl
inc
sti
ret
mov
jno
mov
in
imul
popf
cs
lcall
setae
sbb
mov
sub
insl
jecxz
xchg
xchg
rcr
fdivrl
xor
pop
divb
sbb
pop
sub
pop
cmpsl
fmuls
jge
xor
jno
or
inc
xchg
sub
std
gs
mov
dec
popa
jmp
je
repz
xchg
lahf
xchg
nop
push
add
into
dec
sub
ja
sti
insb
lds
lcall
mov
in
push
add
test
out
subb
cmp
ret
cmc
or
js
cmc
pop
popf
or
test
xchg
lret
cwtl
jmp
push
cmpb
icebp
mov
imul
jmp
mov
jnp
es
inc
mov
in
adc
or
std
rclb
pop
jo
fisubs
jnp
xchg
add
mov
mov
js
out
pusha
stc
insb
cmpsl
xchg
push
loope
out
mov
andb
insl
jle
inc
fmuls
nop
cmp
test
jns
lcall
scas
addr16
dec
pop
arpl
outsb
pop
loope
and
xchg
loop
das
cmc
out
sub
xor
push
frstor
fisttpl
je
lea
lcall
dec
pusha
jnp
xchg
fisttpl
and
imul
repz
xchg
cwtl
ret
add
mov
adc
mov
and
mov
push
cmpsl
xor
jb
push
xlat
pop
fstpl
mov
das
mov
push
rolb
add
push
pop
pusha
xor
mov
adc
and
fadd
dec
daa
push
and
jno
cmp
loope
mov
scas
xchg
mov
pop
adc
sbb
leave
out
mov
push
movsl
push
lods
or
xchg
push
jmp
add
enter
cli
inc
cltd
negl
pop
pushf
stos
adc
ss
and
fwait
lcall
gs
loopne
push
js
scas
sub
mov
jo
ja
outsb
lcall
cltd
sbb
cmp
repnz
scas
pop
push
shl
scas
and
stos
mov
ds
clc
mov
inc
out
in
mov
pop
cli
inc
gs
lret
sbb
add
mov
dec
inc
bound
stc
adc
rcrb
adc
add
mov
shrb
mov
scas
jns
cmp
xor
mov
sub
mov
lret
out
mov
jp
push
mov
cmc
xor
in
sar
push
out
jne
xlat
mov
movsl
and
push
push
idiv
ljmp
inc
outsl
xchg
mov
gs
bound
ja
adc
cmp
push
and
xchg
outsl
jl
add
pop
or
into
lods
pop
inc
push
in
cmpsl
cmc
xor
pop
fidivl
dec
mov
push
loope
fdivrl
push
pop
sub
data16
xor
lea
test
fcoms
fstpt
mov
nop
adc
std
sub
sub
mov
xchg
xor
imul
push
or
sub
aaa
subl
lea
jae
and
imul
sub
mov
xchg
xor
push
push
das
dec
add
ljmp
outsb
fistl
imulb
lods
inc
icebp
mov
daa
mov
xlat
lods
or
pop
idivl
outsb
adc
push
popa
lret
notl
push
leave
test
add
dec
aaa
insl
jnp
sbb
push
jl
pop
call
sbb
xchg
clc
inc
xor
inc
dec
jge
jb
sub
adc
xor
popf
push
scas
push
negb
hlt
hlt
inc
dec
stos
mov
std
xchg
add
aam
loope
aam
cmpsb
cmc
cmpsb
xor
dec
fstl
jno
inc
in
stos
mov
push
pushf
add
xor
enter
lods
ja
in
mov
inc
dec
cmpsb
addr16
leave
pop
popf
xor
enter
mov
mov
pop
push
cli
fwait
cmp
insb
mov
add
icebp
aaa
xor
dec
ja
mov
jae
xlat
loopne
sbb
scas
adc
lret
je
mov
xor
push
mov
push
in
js
cmp
dec
lcall
sub
push
out
out
in
push
test
test
lods
adc
and
jle
jecxz
sub
fcomi
imul
rcrl
movl
xchg
adc
enter
mov
sub
cs
ret
ror
outsl
daa
cwtl
xchg
mov
mov
loope
sbb
stos
xor
inc
insb
jne
pop
mov
adc
mov
jb
popf
inc
in
dec
xchg
insl
daa
fidivs
mov
push
xchg
stc
dec
idivb
or
xchg
push
andb
pop
popf
sarb
cmpsl
adc
fwait
xor
or
or
pop
pop
shl
lock
sub
pop
mov
es
mov
xchg
ret
xchg
fcoms
icebp
or
sbb
adc
add
push
shrb
or
jl
xchg
dec
adc
xlat
mov
stos
hlt
pop
jg
jne
sahf
not
push
mov
add
sub
push
leave
push
xor
pop
fcmovnu
pop
negb
lcall
push
mov
jp
sbb
sbb
test
jne
mov
fmul
jb
cmp
popf
cmp
adc
mov
out
rolb
out
out
ret
gs
imul
cld
js
lret
movsb
xchg
mov
xlat
sbb
cmpsl
bnd
lods
mov
cmpsl
scas
dec
mov
movb
sub
push
stc
mov
fistl
push
sarl
insl
imul
out
add
pop
xchg
stos
inc
fistpll
fs
and
pop
xor
std
dec
fistl
adcl
cmc
push
in
cmpsl
fs
fs
jle
dec
and
fsubr
insb
imul
jb
and
aaa
je
cmp
push
sub
mov
and
in
mov
xor
repz
mov
mov
pop
fsubrs
inc
insl
and
dec
dec
pop
stos
sbb
test
or
dec
cltd
ja
movl
mov
clc
cwtl
lods
dec
inc
addl
pushf
mov
cmpl
sti
scas
lret
mov
ret
xor
jae
imul
push
sahf
mov
add
inc
sbb
fistpll
lds
mov
repz
ja
andb
sub
pop
out
into
sub
fisubs
rcrb
mov
test
push
or
xchg
xor
pop
pop
adc
inc
push
mov
ret
outsl
mov
or
pusha
sbb
cmpb
fcoms
pop
fistl
in
push
sbb
sub
popf
mov
pushf
andb
xor
xor
add
loopne
pop
fiadds
cmp
xchg
cmp
into
imul
jnp
sti
push
clc
jnp
and
hlt
pop
roll
ret
sbbb
das
int
push
jno
jns
mov
add
movsb
adc
xchg
mov
mov
icebp
jb
es
ror
push
mov
mov
lret
lea
inc
test
pop
aaa
xchg
xlat
xchg
sub
dec
pop
or
mov
dec
mov
mov
in
or
sbb
xchg
sub
sahf
sbbl
adc
pushf
dec
adc
add
xor
cwtl
or
testb
lods
lret
push
push
lret
cmp
movsb
push
scas
xor
int
shrb
mov
sub
jecxz
jb
sbb
dec
fimull
xchg
cltd
mov
icebp
rcl
or
movsl
arpl
and
dec
adc
loop
addr16
xchg
xchg
out
pop
pop
orl
popa
xchg
sbb
pusha
fwait
imul
dec
xchg
in
add
clc
sti
out
and
pop
out
jmp
xchg
push
push
ja
aas
jnp
sahf
outsb
rorl
loop
pop
scas
stos
and
dec
femms
sbb
lods
cs
xchg
or
mov
in
aam
shrl
push
mov
xor
out
cmp
push
pop
into
cmp
cmpsl
pop
mov
xchg
cmc
push
cmp
adc
sub
popa
sub
int
xor
mov
in
sbb
js
add
xor
xchg
sub
ljmp
in
repnz
push
call
mov
and
or
icebp
ret
shrb
cs
mov
dec
movsl
or
arpl
mov
fisttps
pusha
in
stos
mov
mov
popf
insb
push
add
mov
ficoms
or
cmp
aaa
mov
push
shlb
pop
or
inc
aam
mov
adc
test
sbb
pop
cmp
xor
xchg
cmp
fwait
lea
xchg
mov
or
imul
sub
fdivs
sbb
arpl
out
mov
xchg
sub
pop
mov
call
movsl
sbb
fisubs
xchg
jmp
sub
cmpsl
sbb
push
fists
pop
mov
mov
leave
sti
push
sub
testb
iret
or
aas
xor
insl
push
and
fcmovbe
dec
jno
enter
out
gs
sbb
inc
repz
mov
sbb
jecxz
pushf
mov
sub
pusha
cmpsb
or
bound
cmp
and
inc
data16
jl
ss
dec
mov
shl
lret
jae
aad
popa
mov
lock
movsb
call
rolb
in
and
dec
andl
cmp
mov
movsb
cmp
ret
loopne
out
sub
pusha
ljmp
idiv
in
dec
mov
cmp
bound
fwait
dec
icebp
adc
sub
ficompl
mov
data16
stos
mov
jne
mov
outsl
mov
das
jl
sarb
ja
subb
fmul
dec
fsubs
sbb
pop
adc
ljmp
imul
push
mov
xlat
cmpsb
dec
arpl
dec
sbb
jecxz
xor
into
push
fstpt
jle
test
pop
aam
xor
xchg
mov
pop
jae
shrl
aas
pop
movsb
xchg
dec
add
add
popf
fcomps
jg
out
xchg
sbb
or
push
test
push
cmp
xchg
insl
lea
sahf
fdivrp
inc
jg
jnp
int
mov
mov
xor
mov
in
hlt
aas
out
cmp
jmp
inc
push
pop
mov
xchg
test
adc
lret
mov
ja
cltd
and
icebp
inc
es
xor
dec
cmp
mov
add
dec
lds
sar
inc
add
adc
pop
fwait
xchg
movb
pop
or
push
imul
jge
sub
shll
loop
jmp
mov
xchg
sbb
xchg
sbb
ret
pop
jb
xor
xor
scas
lret
in
ja
arpl
sub
pop
adc
sub
inc
pop
add
jnp
addr16
subb
inc
mov
in
or
icebp
jb
jle
pop
lods
mov
in
ja
push
daa
jne
fwait
data16
daa
pusha
pop
push
add
in
sbb
mov
aas
cmp
mov
adc
in
xchg
mov
jno
xchg
aam
dec
sbb
cmp
mov
call
and
into
stc
mov
pop
clc
lret
iret
arpl
cmc
movsl
push
pop
fisubrs
mov
repnz
push
cmp
arpl
mov
add
in
pop
addr16
mov
mov
mov
add
scas
mov
push
dec
xor
mov
insl
mov
cli
jo
xchg
outsl
dec
out
and
lods
jne
xor
repz
daa
out
movsl
rcll
sahf
iret
lahf
or
mov
mov
mov
ljmp
mov
inc
push
into
or
movb
das
dec
es
cs
xchg
mul
rcrl
popa
jl
pop
mov
out
out
aam
rcll
out
adc
cltd
stos
mov
sbb
jp
xlat
daa
cmp
jmp
fdivl
aam
jmp
notl
test
push
rcr
cmpsl
dec
jmp
cmpsb
cmp
xor
test
inc
jg
mov
mov
insb
sbb
or
xchg
xchg
outsb
je
loop
push
mov
fldenv
stc
lcall
xchg
loop
pop
cltd
stos
int3
sbb
or
outsb
ja
mov
jl
adc
fdiv
imul
cmp
mov
xchg
inc
fmull
pop
lret
pushf
push
cmp
sbb
dec
imul
inc
leave
in
add
jg
adc
repz
stos
sbb
push
jns
insb
adc
imul
jecxz
jnp,pt
mov
mov
mov
js
in
cli
out
mov
loopne
jne
sub
lods
pop
inc
adc
pushf
outsb
lahf
fwait
idiv
adc
pop
loopne
popa
xchg
ret
shrl
pop
mov
cmc
popa
imull
insl
lock
out
jl
aam
jecxz
push
pop
jbe
add
nop
cmp
cltd
add
pop
je
insb
stos
xchg
mov
cmp
sarb
pushf
mov
jns
dec
nop
cmpxchg
xor
aad
mov
popa
hlt
ljmp
xlat
fwait
cmp
jnp
xor
fdiv
xchg
idivb
outsb
sbb
stc
outsl
or
add
pop
adc
adc
dec
ds
lods
mov
mov
inc
sbb
pop
cmp
pop
jecxz
dec
test
imul
cmc
mov
test
sub
inc
xchg
pop
cmc
push
in
or
pushf
xchg
sub
pop
and
fnstcw
aaa
pop
push
jmp
cmp
pop
and
pop
push
xchg
js
or
sti
scas
test
sub
jno
xor
les
sti
sbb
lea
adc
movsb
cmc
ds
sub
adc
inc
mov
int
jg
mov
jnp
andb
out
mov
push
and
mov
pop
cmp
lcall
push
jmp
daa
out
cmc
and
popf
inc
fstl
inc
adc
xchg
fnstenv
cwtl
je
sub
out
xchg
fcomp
pushf
in
or
cmp
sti
out
rclb
ljmp
lcall
and
inc
shrb
push
out
insl
inc
out
sub
clc
lret
inc
loope
mov
movsb
cmp
ficoml
arpl
fwait
xchg
push
add
mov
dec
add
and
mov
inc
mov
jbe
push
dec
icebp
or
int
push
push
jecxz
push
insb
out
push
inc
jecxz
dec
imull
lods
adc
and
xchg
jbe
mov
inc
mov
add
xor
loope
icebp
jmp
out
sub
xor
add
inc
ljmp
sub
mov
test
pop
and
mov
jl
test
jmp
ret
add
or
mov
push
mov
adc
dec
lods
jnp
mov
push
stos
adc
mov
push
incl
es
mov
xor
sbb
test
daa
mov
xchg
shl
hlt
and
jl
shl
xor
je
dec
dec
rolb
aaa
test
hlt
mov
xor
mov
sbb
push
fldcw
js
std
mov
cmpsb
outsb
das
jp
daa
jmp
mov
adc
inc
rorb
xor
mov
shufps
push
cmp
sub
pop
xor
or
loopne
jmp
cwtl
jne
loopne
ret
fldl
push
test
add
and
jg
mov
adc
jp
adc
jp
and
lods
or
lret
dec
sar
aaa
push
lods
inc
add
sahf
pusha
sub
enter
sarl
fdiv
inc
xlat
cltd
mov
mov
rolb
fiaddl
adc
das
out
sub
bound
lock
mov
cmp
cmp
xchg
lods
shrl
dec
loopne
or
add
sub
es
adc
lds
shrl
jnp
sbb
stos
mov
and
or
sbb
mov
mov
lret
stos
sbb
sbb
mov
adc
ljmp
xor
sbb
into
leave
push
aaa
inc
movsl
mov
pop
sbb
shrb
xor
inc
pop
nop
mov
imul
add
jecxz
repz
dec
cs
fsub
pop
cld
inc
mov
cli
imul
cmp
inc
mov
mov
jg
xor
roll
mov
rorl
adc
int
mov
push
xchg
out
cmpsl
jae
ret
sub
int
add
and
int
test
pushf
mov
cld
rorl
test
je
mov
pushf
sbb
repz
fists
orl
test
ss
call
fucomi
rcr
push
lds
movsb
arpl
fwait
mov
ljmp
xor
xchg
das
iret
inc
mov
sbb
cwtl
mov
push
inc
adcb
push
xchg
inc
ljmp
mov
jp
mov
jl
stos
es
addr16
adc
faddl
in
push
mov
enter
sub
sarl
testb
cld
in
movsb
fcom
out
jns
mov
xor
jns
ret
mov
jns
pop
adc
jbe
inc
mov
inc
out
mov
in
jge
inc
jmp
or
clc
or
inc
cmc
adc
pop
shl
loop
adc
and
inc
push
adc
ljmp
cld
push
lock
fabs
dec
mov
lock
int
aad
fnstenv
sub
and
push
clc
xchg
outsl
jl
inc
imul
dec
mov
stc
inc
lea
adcb
mov
adc
mov
clc
gs
bound
dec
test
and
sbb
cwtl
mov
pop
cs
xor
adc
ret
mov
push
test
pop
rclb
nop
xlat
sub
out
leave
pop
test
cli
ss
testl
lea
in
js
mulb
ret
xor
jmp
loop
adc
adc
lcall
dec
pop
adc
scas
setbe
mov
fucompp
loop
xchg
pop
aas
adc
test
add
xchg
mov
or
jns
stc
mov
jne
orl
bound
test
jnp
lret
pop
adc
bnd
repnz
adc
mov
push
jno
test
decl
xchg
push
ja
testl
push
mov
jp
fwait
push
push
sarl
push
mov
sub
subl
lcall
jecxz
lcall
enter
xor
and
leave
jnp
scas
mov
jle
scas
push
ds
jns
jmp
sbb
and
daa
pop
mov
cmp
inc
fwait
jp
leave
jge
daa
mov
cmp
arpl
icebp
sbb
rcr
lret
out
push
dec
pop
adc
dec
cmp
mov
xchg
inc
arpl
notl
shlb
sahf
loope
or
data16
xchg
mov
fisttpl
xor
dec
fs
jecxz
xchg
inc
fdivrl
pop
push
mov
outsl
sbb
jl
inc
cmp
inc
sub
in
inc
aad
mov
cmp
sub
mov
sbb
xchg
adc
insb
pop
aas
push
add
pushf
aaa
addr16
and
dec
sti
lods
cmpsb
decb
popa
adc
mov
inc
and
inc
xlat
sbb
rolb
stos
jecxz
dec
xlat
xor
jne
and
jae
xchg
loop
dec
push
mov
sub
cmp
xchg
roll
clc
add
pop
pop
fidivrs
xor
xchg
movsl
push
and
jne
pop
push
fs
hlt
orb
cmp
xchg
shlb
pop
insb
xchg
mov
cli
dec
and
xor
and
movsb
push
jle
outsb
dec
decl
pop
jmp
out
loopne
insl
scas
fldl
adc
lea
jb
je
fmulp
push
add
add
int3
inc
aaa
mov
adc
fwait
ret
into
push
test
dec
jb
mov
add
dec
jmp
shlb
xor
out
negb
orb
and
mov
shlb
cmp
sub
mov
adc
arpl
and
sarb
mov
sub
inc
lea
fistl
adc
movsb
xchg
cld
lea
orl
fstps
mov
mov
fcmovnu
push
add
dec
in
adc
cmp
sbbl
roll
pop
jns
insl
push
lret
lds
jne
insw
int3
xchg
or
rcrb
enter
out
mov
and
jg
sahf
mov
call
sbb
insb
inc
mov
nop
adc
xchg
pop
push
push
bound
popa
test
mov
in
into
mov
gs
jp
cld
testl
xchg
test
pop
fdivs
lock
test
shrb
insl
mov
out
cmp
push
dec
popa
sbb
jnp
or
or
mov
add
ret
xchg
movsb
dec
push
add
cmc
xchg
xchg
pop
push
inc
mov
push
push
jno
stc
jge
out
das
sarl
dec
sti
repz
xor
xor
sbb
fnop
sbb
push
imulb
and
lcall
out
movl
jo
sub
test
inc
aas
mov
sub
mov
cltd
mov
fs
inc
push
notb
stc
xorl
adc
fildl
fldl
mov
or
bound
insl
cmpsl
gs
mov
orb
push
fsubl
push
cmp
popf
mov
loop
dec
sub
pop
cmc
outsb
xchg
xor
xchg
out
adc
inc
test
or
jno
bound
mov
cwtl
dec
stos
jmp
inc
cmp
sti
xchg
or
mov
add
push
mov
jno
and
dec
jb
lds
cmp
cwtl
loopne
in
or
cltd
push
sbb
add
dec
scas
cmpsb
mov
or
sub
outsb
sbb
lahf
mov
push
inc
loope
push
mov
fimull
mov
out
xor
fidivl
push
std
call
mov
les
mov
dec
mov
mov
adc
aaa
addr16
mov
mov
popa
or
clc
adc
adc
iret
out
cmc
cmp
mov
int3
jne
jp
push
mov
mov
xrelease
pop
fsubl
sbb
dec
push
cld
inc
les
adc
std
jb
ret
movsb
ds
fs
mov
cmp
rcrb
call
addl
pop
mov
aam
push
aaa
mov
push
or
lods
in
sbb
pop
xchg
negb
mov
insl
xchg
rolb
xchg
mul
mov
dec
arpl
mov
dec
outsb
ljmp
fists
inc
adc
pop
bound
test
ljmp
sbb
faddp
mov
adc
cmp
jmp
lock
xor
jecxz
insl
lock
movsl
xchg
mov
ret
cwtl
jmp
sub
jne
xchg
sub
xchg
dec
xchg
jnp
inc
fdivrl
or
testb
imul
lods
into
xor
cmpsb
xor
bound
popf
test
stos
xor
xor
push
lods
jl
mov
adc
jl
cltd
rolb
sbb
lret
xchg
insb
ss
xlat
mov
or
mov
adc
or
stc
mov
repnz
leave
and
and
outsl
loopne
cli
xchg
mov
and
lcall
mov
rcr
sbb
dec
mov
xchg
jae
cmp
mov
subb
cmp
into
xchg
xlat
or
shlb
aas
out
ds
daa
fnsave
xlat
or
inc
shr
jg
xor
call
fs
mov
enter
fwait
stos
sbb
sahf
push
in
adc
fmuls
sub
jne
inc
mov
jge
in
shll
and
push
adc
imul
and
jbe
mov
pushl
movsl
jnp
xor
clc
scas
dec
loopne
les
sub
arpl
ffree
dec
aaa
xor
and
sub
sub
pusha
loopne
sub
push
lret
sbb
mov
addl
mov
out
mov
stos
pop
fadd
xor
and
shl
push
insl
dec
call
or
add
push
test
jp
sub
js
pop
neg
aad
mov
stos
out
insb
popf
add
in
inc
out
xchg
lea
gs
inc
aaa
cmp
and
dec
pop
mov
dec
arpl
outsb
lret
pop
adc
jae
push
jge
ds
test
lods
fnsave
iret
push
insl
xchg
pop
shll
cmp
fwait
and
js
inc
fistl
adc
add
xchg
xchg
arpl
jb
cmpsl
je
mov
xchg
adc
xchg
jne
out
mov
mov
shlb
add
lods
imul
cltd
or
loope
push
in
js
and
pusha
cmc
xchg
outsl
pop
lahf
push
outsl
add
in
cmc
mov
or
sbbb
mov
not
and
sub
insb
pop
push
test
xchg
cmp
mull
scas
inc
adc
loope
add
ss
and
std
xchg
inc
dec
add
add
inc
xchg
adc
ret
push
mov
mov
call
jge
sub
inc
inc
mov
decb
jno
push
dec
ja
jmp
je
popf
jecxz
popa
pushf
cs
daa
xchg
xor
jg
fstl
nop
pushf
fdivrs
addr16
imul
dec
cmpsb
cld
pop
pop
cmp
jbe
test
xchg
cmp
add
lods
push
roll
popf
ds
insl
cltd
inc
sbb
inc
cwtl
jge
mov
incl
adc
in
lea
shrl
pop
movsl
lret
dec
cmpb
loopne
movups
and
pop
xchg
jbe
xor
and
push
sub
inc
paddusw
sarb
cmp
out
and
das
cwtl
adc
adc
stos
pusha
adc
pop
movsl
scas
ret
dec
in
dec
adc
xor
cmp
call
into
adc
mov
nop
popa
rcll
sub
push
cmpsl
in
out
jmp
lret
push
pop
and
arpl
outsb
loop
dec
adc
push
xlat
mov
pop
scas
inc
insb
push
xor
mov
add
adc
dec
ja
mov
inc
outsl
dec
enter
push
pop
subb
loope
ljmpw
es
xchg
js
adc
dec
repz
pusha
add
xor
cmp
cmp
daa
lret
push
lock
loope
cwtl
xor
and
mov
jecxz
cmpsl
cs
call
and
scas
loop
mov
mov
mov
test
ret
cmp
add
and
xchg
inc
cmpsb
rcrb
mov
rcl
sub
inc
pushf
lahf
push
jg
cld
rol
xchg
add
nop
push
add
push
pushf
maxps
and
push
loopne
ss
into
jp
sub
out
mov
cmp
dec
add
mov
mov
scas
fs
mov
outsb
xor
sbb
pop
add
outsb
insl
ret
pusha
xor
test
cs
scas
cmp
inc
push
les
xor
or
pop
cmp
jl
jo
repz
daa
mov
leave
push
ror
fucomip
mov
or
xchg
into
divb
dec
shl
ss
out
xchg
xchg
xor
divb
xchg
push
pop
or
inc
push
rcl
add
xchg
mov
fsts
stc
fidivrl
mov
or
dec
cltd
xchg
aam
inc
test
lock
dec
sbb
loope
idivb
cmp
add
imul
or
je
cmp
shrl
aas
outsl
aam
jae
adc
cmpl
push
jae
imul
out
inc
mov
cmp
xchg
push
pop
xor
cmp
lahf
jns
shrl
add
mov
inc
cwtl
adc
mov
xchg
adc
in
dec
test
jle
pushf
or
lods
rol
repnz
push
xchg
leave
sti
test
ret
adc
mov
movsb
lock
xchg
jo
push
nop
shll
daa
lock
scas
cmp
jmp
cli
lcall
lods
adc
lret
and
shll
inc
cmp
fimull
dec
fidivrl
loope
dec
add
scas
scas
xchg
jns
mov
xchg
jbe
mov
add
es
mov
scas
loope
pop
test
scas
push
cmpsb
shl
mov
fwait
or
iret
das
mov
lret
jo
inc
xor
mov
add
xchg
lahf
sahf
or
outsb
push
add
jns
push
jb
cmp
lea
mov
rolb
mov
pop
sbb
rorl
test
std
push
dec
inc
shll
aaa
push
fucom
mov
or
inc
mov
inc
push
cmpsl
sub
aad
or
stos
jae
inc
ret
and
push
xlat
cmp
dec
imull
ds
push
rorl
fndisi(8087
pop
mov
or
add
cmp
dec
cli
xor
in
nop
mov
cmp
push
ja
xorb
or
mov
pop
pop
add
scas
inc
add
dec
lret
dec
inc
add
jmp
fcmovu
adc
addb
dec
daa
test
adc
sbb
es
movsb
pop
xchg
cmc
mov
lcallw
insb
dec
aam
sub
xor
pop
in
ja
sbb
outsb
aas
cmpsl
and
fwait
sahf
sub
lahf
repz
mov
xor
shrb
repnz
ljmp
inc
outsl
and
rcll
lret
dec
lds
fs
or
in
movsl
push
cmc
xlat
cmp
addr16
adc
inc
loop
shlb
add
call
push
sub
dec
js
movsb
adc
jns
xchg
stos
adc
ret
sub
fisubrl
xchg
sbb
mov
xchg
icebp
dec
sbb
adc
mov
jle
push
dec
rcrb
sub
loope
std
mov
sub
cmc
jne
xchg
stos
add
inc
inc
es
ds
stos
jns
movsb
cmp
shl
inc
sbb
mov
adc
cmp
jg
clc
fildl
sub
mov
in
or
jne
lahf
mov
rolb
aam
stc
shll
xor
xorb
or
shlb
cmp
sti
xchg
lods
movswl
loopne
je
outsl
xchg
mov
pop
pop
icebp
dec
mov
pusha
scas
data16
imul
movl
fnsave
push
jl
icebp
ret
aaa
xlat
mov
and
inc
or
lahf
pusha
and
xor
cmp
push
pusha
shll
inc
dec
pop
cmp
adc
dec
cmp
loopne
popa
cs
and
mov
mov
xlat
imul
pop
cltd
adc
pop
mov
adc
jge
pop
aam
jmp
adc
fisttpl
mov
ret
mov
testb
fistps
in
and
jno
repnz
jb
mov
add
fldl
cs
jbe
or
int
popa
movsb
das
or
mov
mov
jmp
insb
xor
inc
sub
addr16
xchg
es
enter
cmp
daa
int3
mov
push
cld
minps
sub
mov
sbb
mov
das
add
xor
jmp
repz
in
int3
or
adc
jmp
movsl
xor
fistl
sti
or
ret
push
cmp
arpl
pop
pop
nop
ljmp
in
scas
sub
popa
andl
outsb
sub
imul
push
cmp
fstpt
lahf
push
dec
ret
shlb
aad
add
cwtl
sbb
fmuls
repz
cmp
mov
jno
cwtl
rorb
lea
cli
in
adcl
cwtl
xchg
aas
ss
mov
stos
sub
inc
and
push
mov
mov
iret
mov
aaa
stos
ret
fistl
dec
mov
aam
stos
lret
xchg
and
inc
mov
sbb
mov
stc
paddsb
js
adc
std
xchg
je
push
repnz
loopne
jno
pushf
and
cmpsl
push
and
in
std
subb
jg
loopne
imul
out
push
jg
push
mov
push
sub
lods
nop
mov
dec
pop
mov
mov
inc
jbe
aaa
fadd
icebp
cmp
das
jmp
aam
loop
repz
mov
lahf
mov
popa
pop
fsubrs
es
lock
jmp
inc
icebp
sbb
int3
lret
lea
in
pop
push
xor
dec
xchg
gs
je
pop
jg
sbb
inc
int
outsl
mov
add
jmp
inc
imul
scas
not
ficoms
mov
mov
cmp
ret
add
push
jecxz
scas
aas
into
or
xchg
mov
mov
ja
xchg
inc
xor
jl
ja
and
push
xorb
mov
shlb
test
and
adc
lret
push
lock
pop
and
push
movsb
dec
mov
push
and
jno
daa
inc
add
adc
cmp
push
xchg
dec
dec
adc
dec
ret
adc
inc
push
hlt
iret
les
and
in
adc
lods
fmulp
xlat
hlt
ret
jge
faddp
out
out
shrb
xor
jmp
mov
out
lahf
in
sbb
in
lods
sub
jo
cmp
sbb
jmp
jnp
cld
adc
add
jle
int3
mov
pop
popa
mov
jbe
push
pop
cmp
xchg
int3
mov
jmp
out
xchg
nop
jae
push
cmpsl
mov
add
add
dec
jb
mov
loopne
dec
inc
cwtl
lcall
sbb
mov
loope
jge
push
adc
mov
repnz
jnp
mov
inc
push
mov
scas
pop
ret
and
incb
popf
add
and
loope
out
test
movsl
in
or
adc
mov
or
imul
add
adc
stc
loope
stos
test
xor
rcrl
sbb
shll
mov
add
jp
aas
push
mov
loope
and
mov
push
and
sub
add
push
cmc
fdivrs
mov
cmp
xchg
mov
aas
pop
sbb
xchg
je
pop
ljmp
sbb
and
push
push
pop
test
cli
xor
fbstp
cmpsl
aas
mov
hlt
mov
sarb
lret
cmp
rcll
pushf
mov
add
fsts
push
sub
and
lea
hlt
sti
xchg
inc
mov
xor
insb
mov
dec
out
stos
xchg
mov
inc
rolb
mov
pop
sti
daa
and
and
xchg
ret
xchg
mov
int3
rorb
and
movsl
and
fmul
fdivs
mov
aad
add
cmp
xchg
push
push
push
xchg
xchg
mov
jne
cmp
fsts
orl
orl
sbb
aas
rcll
out
int3
jmp
icebp
aas
xor
inc
test
jae
xchg
arpl
scas
jg
in
call
mov
sbb
cld
test
cld
cltd
shrl
sbb
adc
lret
loopne
add
mov
mov
cmp
inc
dec
arpl
or
jmp
pop
fwait
test
jecxz
imul
repnz
inc
mov
dec
shlb
jg
sub
test
inc
ja
xor
pop
dec
lds
dec
dec
leave
leave
pop
iret
in
add
pop
dec
ret
daa
cs
sub
mov
xor
pop
jns
insl
sub
and
test
xchg
pop
xchg
xorb
int3
xor
movsb
pcmpeqw
mov
iret
pusha
push
jne
inc
push
repnz
push
adc
je
pop
xor
mov
add
sub
cmp
leave
and
mov
xchg
inc
in
jae
mov
fnstsw
mov
addr16
in
sub
cmp
add
scas
jecxz
pop
jne
xor
or
into
in
sbb
in
addr16
adc
add
cwtl
repnz
dec
xlat
jbe
imul
loop
add
daa
dec
lcall
in
sub
imul
in
call
xchg
lret
xchg
std
lret
lret
pop
jge
jae
adc
jne
xchg
mov
mov
pop
sbb
fstps
and
sub
push
bound
xor
add
cmc
or
and
mov
pop
xchg
xchg
sub
pop
inc
loope
andl
push
jg
mov
lods
sbb
icebp
fildl
xlat
xor
mov
pushf
or
mov
sub
lods
lahf
pop
out
lds
jb
iret
repz
or
cwtl
aam
add
dec
in
inc
les
cmp
sbb
fiaddl
jge
xchg
inc
pusha
and
xor
popf
ja
cld
dec
es
pop
sti
push
nop
adcl
and
movsl
mov
fucomp
iret
inc
adc
out
lods
int
repz
mov
rorl
pop
rcll
add
xor
xchg
or
es
ret
pop
testb
or
pop
ficoms
orb
repnz
outsb
mov
les
insb
cmp
out
cltd
mov
sub
push
adc
cmp
xchg
mov
mov
adc
cmp
inc
pop
fnsave
mov
sbb
cltd
mov
clc
and
inc
mov
imull
es
pop
sbb
jns
outsw
adc
inc
faddl
sbb
les
movsb
daa
mov
hlt
dec
sahf
stos
push
ja
test
stc
loopne
fwait
bound
add
cmp
mov
xor
hlt
imul
pusha
inc
jo
dec
movsb
jl
mov
pop
insl
inc
mov
in
loopne
pop
or
and
cmpsb
sub
mov
add
movsb
pop
lret
sbb
aaa
rcll
inc
std
out
sahf
pop
sbb
push
iret
loope
leave
inc
stc
push
jge
in
fcoml
rcll
insl
or
dec
data16
cltd
clc
mov
data16
and
sbb
mov
stos
xor
aam
dec
loope
dec
fcmovnb
inc
add
cmp
fisubs
xor
daa
push
hlt
sbb
cmpl
outsb
or
cmp
pop
imul
stos
or
push
ljmp
cld
int3
loop
imul
in
lahf
jae
enter
cltd
bound
orl
jnp
sbb
std
lret
cmpb
lods
lahf
or
dec
push
in
pop
cmp
push
pop
popf
mov
xorb
fidivrl
out
enter
mov
or
xor
in
dec
pop
mov
dec
adc
mov
ss
stos
out
jmp
dec
add
call
ja
lds
push
add
mov
pop
cwtl
frstor
fucomip
int3
imul
adc
mov
in
mov
aad
mov
test
xchg
pop
pop
int3
mov
add
push
adc
scas
jbe
push
outsl
cltd
pop
and
cmp
and
enter
and
bound
mov
dec
mov
mov
cmp
outsl
ret
in
mov
lock
mov
add
pop
jl
adc
mov
dec
jns
dec
xchg
mov
test
sbb
adc
sub
cs
jmp
ret
popa
lods
pop
aaa
sarl
mov
lahf
inc
sub
popa
cmp
ret
test
test
data16
out
push
pop
iret
mov
mov
ljmp
fists
out
sbbl
sbb
push
test
lods
mov
sub
mov
lcall
xchg
out
movsl
or
sahf
and
in
jle
ja
push
fadds
out
ret
pop
sub
push
cmpsb
gs
and
jmp
or
roll
or
adc
cmp
pop
nop
mov
je
dec
push
push
cmpsb
frstor
stos
xor
jne
not
shll
std
jno
cltd
fcomps
jp
sbb
aam
sbb
outsl
repz
arpl
pop
das
mov
or
jl
icebp
and
jns
mov
popa
jnp
xchg
push
dec
push
xor
test
or
cwtl
fcmove
iret
je
dec
or
mov
push
sarb
mov
test
jmp
clc
and
jge
jbe
inc
inc
and
cmc
loopne
mov
das
xchg
dec
pop
addr16
push
iret
rcrl
xor
add
and
push
int3
fstps
test
gs
adc
and
push
pop
mov
push
aas
je
push
jmp
lret
mov
jl
push
add
sub
aas
and
ror
cmp
pusha
adc
or
sub
test
sbb
add
dec
lods
cmpsb
daa
inc
je
adc
hlt
dec
fs
push
mov
mov
mov
lret
mov
xchg
sti
xor
xchg
mov
xor
loopne
addl
ret
ds
mov
mov
hlt
adc
jle
imul
cmp
mov
add
cmp
sub
push
mov
test
inc
jle
aad
push
sbb
or
leave
sub
sti
dec
imul
cwtl
movsb
sbb
cwtl
mov
je
out
je
in
add
scas
sub
or
out
and
repz
jno
lahf
xor
xchg
and
push
cmpsb
popa
out
out
lods
jae
jae
mov
mov
pusha
stc
push
xor
lea
outsl
xorl
fimull
pushl
ret
mov
xlat
outsb
loope,pn
out
inc
mov
loop
lret
in
outsb
push
out
hlt
lcall
fists
jmp
cmpb
adc
rclb
jb
out
mov
push
inc
mov
iret
scas
or
testl
pop
or
jae
cmpsl
insb
and
mov
pop
or
sub
sub
xor
je
test
mov
test
sbb
ss
jl
loope
mov
daa
dec
je
or
pop
push
or
xchg
lret
jo
imul
enter
sub
sarb
ljmp
ret
scas
mov
cwtl
jp
sub
xchg
test
popf
xchg
pusha
adc
cld
xor
lea
inc
int3
iret
push
xor
pop
or
scas
fs
divb
leave
mov
sbb
nop
xor
add
pop
movsb
aas
or
andnps
das
jg
or
xor
lods
imull
daa
adcb
mov
xor
xchg
push
pop
outsb
neg
fwait
dec
rol
sub
sbb
inc
dec
mov
imull
repnz
adc
fadd
push
push
in
sbb
leave
out
or
ds
and
insl
push
sbb
leave
mov
and
movsl
dec
cmpsl
or
movsb
mov
ficoml
addr16
call
add
dec
enter
das
jmp
jg
cmp
in
xor
mov
jle
mov
cmpsb
xorl
jo
js
fcmovnb
test
cmpsb
fwait
es
cmp
ds
lret
data16
int3
arpl
lods
sub
inc
addr16
and
mov
sahf
jne
jbe
pop
cmc
push
jnp
shrb
cwtl
jo
ss
repz
outsb
addl
xlat
dec
test
in
xchg
pop
adc
add
mov
or
cld
jo
out
or
mov
roll
jne
xchg
insb
pop
pop
pop
cmp
enter
adc
insb
push
pusha
adc
pusha
sti
inc
adc
jae
jno
cmp
add
rorl
imull
xchg
sbb
add
es
sub
int
loop
shrb
push
fisubrs
call
add
mov
add
cwtl
pushf
ja
or
mov
addr16
call
subl
fidivl
mov
push
dec
fstl
cs
shrl
push
lret
mov
stos
cmp
sbb
pop
scas
stos
push
jo
cmp
mov
mov
adc
inc
dec
inc
cli
lahf
call
sarl
popa
int3
iret
push
hlt
push
and
bound
jbe
shl
notl
push
mov
js
or
xorl
pop
jge
stos
imulb
mov
add
fmul
mov
repnz
jae
add
lods
sti
and
sub
sbb
out
cmpsb
mov
ja
mov
mov
cmp
test
addb
arpl
xor
std
mov
lret
xchg
mull
push
cltd
pusha
into
cmpsl
mov
repz
mov
cmp
and
ljmp
cmp
rorl
pop
fnstsw
push
std
pop
popf
and
in
movsl
or
push
sahf
lret
test
add
imul
push
mov
or
lds
arpl
cwtl
hlt
rol
ret
je
cmp
jge
pop
inc
cltd
mov
dec
xlat
pop
adc
mov
shr
cmp
jne
leave
inc
ret
sbb
dec
repnz
cmp
jb
js
sbb
hlt
sbb
sub
pop
add
dec
xchg
mov
mov
or
sti
rorl
xlat
out
add
ljmp
mov
mov
out
mov
movsl
push
mov
arpl
shl
dec
pop
popa
cltd
addr16
mov
adc
outsl
js
or
pop
cld
mov
mov
pusha
out
cmp
cltd
add
xor
leave
clc
call
xchg
add
call
inc
and
enter
jae
es
mov
inc
sub
or
sbb
mul
mov
icebp
scas
jnp
mov
add
jb
sbb
lahf
stos
hlt
or
pushf
cmp
inc
out
sbb
mov
push
dec
inc
mov
push
mov
lahf
inc
pop
xlat
push
push
mov
cmpsb
push
lret
je
xchg
int3
out
dec
inc
stos
addb
inc
jnp
push
sub
add
pop
daa
jmp
ret
loope
into
ds
sbb
loopne
push
int
shlb
cmpsb
cmp
adcl
shll
mov
inc
mov
mov
and
fcoml
lahf
fstl
sbbl
or
mov
lds
iret
mov
adc
and
jo
popa
ss
xchg
add
mov
xchg
movb
and
xchg
or
lahf
xor
pop
mov
jp
jo
rolb
stos
out
mov
add
xorb
enter
fistpll
pop
aad
pop
sar
push
add
jecxz
daa
xlat
push
in
mov
je
lock
test
stc
dec
jae
cmp
and
fstp
test
cs
pop
xchg
icebp
and
mulb
inc
repz
or
jnp
xchg
insb
data16
add
xor
fisttpl
lock
cmc
mov
sub
push
insb
rorb
mov
adc
mov
xchg
arpl
sub
mov
or
add
dec
jp
xor
cmp
ja
repnz
dec
pop
adc
mov
xchg
lds
inc
inc
push
xor
mov
pusha
stc
lret
outsb
js
imul
add
mov
pop
mov
mov
cmpsl
lcall
dec
pop
lahf
xor
sahf
int3
adc
add
cmp
stc
push
adc
aas
cmp
add
ljmp
cmpsl
fidivrs
sbb
fimuls
push
cmpsl
mov
push
mov
sub
dec
mov
scas
rorl
cmpb
inc
lcall
popf
mov
or
int3
push
sbb
stos
out
fidivs
adc
aaa
jae
scas
mov
enter
push
sub
ror
jnp
in
and
fildl
mov
dec
pop
das
push
stc
cltd
pop
or
push
push
dec
loopne
add
adc
movsb
fsts
xchg
add
push
or
movb
adc
mov
movsb
daa
test
xorb
out
sbb
lcall
sub
mov
push
mov
xor
xor
fwait
or
aad
cmpsb
rclb
gs
std
popa
mov
hlt
in
inc
push
cmp
lret
mov
out
mov
xor
mov
test
mov
xlat
dec
test
xor
fnstcw
push
xchg
loopne
andb
or
dec
sbb
sbb
shrb
ret
jmp
push
nop
or
loop
push
pop
stos
pop
jne
xor
mov
and
jle
or
push
cmpsl
xchg
rcrl
xor
jp
shll
inc
and
dec
out
pop
enter
mov
fs
popf
lods
dec
jno
out
loopne
jle
in
ret
and
loope
push
cltd
inc
sarl
jae
cmc
jecxz
lret
push
insb
mov
loope
aam
mov
pop
xor
pusha
iret
add
lods
inc
push
adc
inc
mov
imul
push
sahf
or
sub
mov
fwait
fs
shl
dec
lock
iretw
pop
add
adcb
sbb
or
das
jge
mov
sub
add
mov
addb
inc
cwtl
add
add
jne
gs
cmp
adc
lahf
jge
pop
sub
xor
or
mov
ljmp
push
pop
notb
pusha
and
inc
bound
mov
aas
imul
fdiv
mov
lahf
punpckhwd
daa
in
fiadds
push
ret
add
pop
sti
mov
dec
mov
cli
lea
fsubrp
shlb
lea
repnz
movsl
mov
stos
repnz
jo
fstpt
jae
mov
cmc
cli
hlt
jnp
xor
adcb
jl
cli
dec
shll
pop
jge
dec
pop
push
and
or
jp
mov
scas
sarb
xchg
jb
movsl
les
push
xor
xor
aas
notl
mov
loopne
lds
mov
mov
cvtpi2ps
mov
test
scas
cli
jmp
hlt
cmp
add
mov
sub
and
fstpl
shrl
int
jbe
cmp
adc
cld
fidivrl
and
jmp
and
stc
push
mov
add
dec
jne
aaa
adc
mov
stc
adc
and
fnsave
or
mov
js
push
and
pusha
in
xchg
xor
xchg
add
dec
and
sti
or
push
stc
inc
adcl
sbbl
xlat
popa
cltd
inc
mov
aas
fldcw
mov
dec
or
jae
in
pop
pusha
ljmp
mov
hlt
cmc
inc
mov
jb
pop
test
mov
aam
in
mov
adc
pop
ja
rcrb
mov
xor
pop
mov
scas
mov
sub
sti
imul
pop
rorl
sbb
xchg
enter
adc
lret
loope
nop
in
sbb
mov
push
scas
sahf
out
add
repnz
push
xchg
xchg
add
pusha
insb
mov
jge
and
sbb
jno
rclb
pusha
sub
gs
lret
loope
xchg
test
add
ljmp
mov
imul
push
fldcw
fs
test
inc
in
rcrb
fsubl
mov
mov
fcomps
cmp
push
test
loop
lcall
dec
aaa
arpl
sub
add
dec
pop
jbe
add
fstpl
cmp
xchg
mov
call
inc
mov
xorb
addb
fcmovbe
jae
push
into
shrl
rcrb
push
test
cld
sub
and
in
das
popf
loopne
aam
xchg
and
dec
mov
adc
loopne
loope
andb
aaa
ficoml
repz
pop
jp
jnp
xchg
fwait
shrb
addb
pop
sbb
dec
mov
xor
xor
adc
sbb
loop
mov
pop
mov
mov
or
in
sbb
mov
jne
and
jmp
loopne
push
lock
scas
add
aas
xor
adc
push
cmp
jnp
dec
add
in
and
push
xor
mov
lods
pop
test
mov
or
jbe
mov
iret
mov
jb
mov
hlt
fnsave
mov
pop
js
xor
popl
fldt
in
icebp
adc
aad
enter
ds
or
nop
xor
push
int
cmpsb
push
int
les
loop
into
scas
mov
pop
inc
dec
out
out
dec
mov
ss
jmp
mov
or
dec
rcr
mov
add
fcoml
rcr
push
xchg
repz
xor
mov
lds
cmpsb
inc
mov
adcl
mov
add
sbb
xchg
or
loop
mov
ja
add
cmp
fistl
movsl
xchg
pop
movsb
mov
adc
dec
push
nop
adc
push
loopne
out
sti
push
mov
dec
dec
mov
cli
movsl
jno
sbb
es
cmp
jo
rorl
mov
adc
shl
dec
lea
out
adc
out
ljmp
cmpsl
scas
ljmp
pop
sub
rcl
lret
adc
sti
adc
xchg
ds
es
adc
xor
inc
push
dec
push
jo
sub
in
jne
push
aaa
jno
aam
and
adc
sbb
sti
loop
fs
clc
mov
rclb
mov
cmp
addr16
sbb
pop
xchg
test
push
jns
jno
push
cmp
sub
insl
fiadds
cs
int
insb
aam
pop
mov
jbe
repnz
jne
jb
cmc
loope
xor
jp
lret
pop
pop
sub
sub
in
out
sbb
adc
jnp
xchg
and
hlt
push
dec
cmp
rcl
outsb
add
dec
notl
pop
stos
or
xorl
ret
in
fldcw
push
jae
out
fildll
fbstp
fcoms
imul
jb
outsl
jl
or
adc
mov
inc
cmp
bound
pop
rcrb
sbb
aam
dec
mov
nop
hlt
adc
mov
mov
and
jno
arpl
popa
cmp
push
xor
jo
pop
sbb
enter
test
test
call
repz
jge
add
mov
jle
mov
sbb
xchg
repz
jae
xchg
add
sahf
sub
lods
mov
and
pop
nop
mov
jge
and
adc
jge
aad
cmpsb
mov
xchg
cmc
pop
jg
xchg
lods
scas
aam
mov
adc
adc
or
test
add
mov
lea
sbb
dec
lods
xor
cmp
push
mov
mov
test
push
pop
arpl
xor
testl
inc
dec
fwait
cwtl
jb
ds
pop
leave
mov
dec
pop
pop
mov
adc
mov
lds
jns
testb
inc
push
jae
or
les
hlt
pop
cld
jns
pop
or
int3
std
in
xor
pop
and
mov
mov
movsl
dec
add
lcall
es
lret
inc
fdivl
cld
jmp
fcompl
mov
xchg
inc
mov
ret
mov
pop
xor
int3
sub
xor
inc
addr16
sahf
minps
cld
nop
icebp
cli
in
mov
leave
inc
jo
je
sub
adc
jo
jle
stos
sbb
mov
int
push
lahf
lcall
scas
rcll
icebp
xchg
repz
xor
mov
test
incb
fwait
test
addr16
ret
in
jp
inc
push
insl
and
imul
dec
adc
outsb
enter
inc
jl
in
cmpsb
xor
cltd
or
mov
jg
mov
pop
mov
mov
xchg
subb
imul
hlt
mov
sbb
jnp
icebp
je
lret
in
loope
out
jge
and
out
cli
or
mov
sbb
fwait
hlt
insl
pushf
pop
in
addr16
scas
dec
jp
xchg
imul
into
mov
push
lret
cmp
stos
int3
xor
and
dec
cmp
mov
loope
ret
fildl
cmp
and
or
mov
adc
lock
repz
jae
add
sbb
lahf
xchg
or
mov
into
adc
xchg
in
sbb
enter
xchg
adc
xchg
xlat
xchg
and
add
mov
cld
mov
inc
pop
in
into
jle
shlb
pop
mov
test
in
shll
cmp
add
std
loopne
mov
mov
mov
push
std
out
dec
pop
pop
inc
xchg
and
daa
sub
fisttpl
pusha
dec
jg
mov
mov
cld
or
sub
add
mov
outsl
mov
fcmovne
push
out
xor
sub
loopne
xchg
dec
mov
pop
pop
scas
sarb
cmp
cmp
push
test
jg
lret
out
into
imul
push
mov
inc
mov
pop
pop
lahf
cmpl
or
pop
rclb
and
insl
in
js
arpl
push
mov
jns
xchg
test
sahf
dec
flds
xchg
sti
fildl
inc
jae
lcall
push
sub
in
xchg
mov
adc
movsl
cltd
aad
jl
cmc
cli
inc
pop
mov
jo
rcrl
lods
add
out
sarl
xor
arpl
mov
cmp
pop
stos
add
push
and
mov
xchg
xchg
faddl
frstor
jp
inc
pop
or
lods
mov
out
aam
cmp
pop
int
jmp
adc
jb
cli
scas
mov
jl
cmpsl
sub
sti
fidivrs
adc
fwait
push
cli
inc
jmp
push
add
add
xor
stos
mov
pushf
and
in
push
xor
cmp
stos
mov
aaa
dec
push
cmp
add
or
and
lock
sbb
pop
dec
popf
faddl
insb
popf
repz
nop
cld
int
push
test
jno
adc
rorb
xlat
mov
and
jae
cmp
mov
ja
push
dec
dec
aam
cltd
loope
std
jmp
lcall
sbb
mov
jno
insl
pusha
push
mov
ljmp
xchg
mov
das
mov
mov
cmp
sub
xchg
mov
xor
fwait
stos
xchg
mov
in
lret
dec
mov
cmp
pop
fucom
inc
dec
loopne
adc
outsb
das
xor
adcb
ds
push
loopne
inc
or
loopne
mov
loope
int3
out
mov
test
int3
test
jnp
xchg
mov
cmp
jecxz
push
test
mov
lret
mov
idivl
pop
cmp
push
or
push
or
mov
mov
push
fadd
add
sub
cmc
sbbb
das
mov
lret
inc
add
cwtl
icebp
jg
xchg
pop
cld
jle
sbb
in
ja
subb
les
fwait
enter
push
fs
lcall
jle
sub
add
mov
inc
fwait
ds
cmpsl
push
mov
lcall
sbb
pop
sub
jle
pop
push
jb
lahf
jnp
mov
test
fnsave
rep
pop
insl
out
pusha
dec
faddl
loop
das
jbe
sbb
sub
shlb
xchg
cpuid
push
imul
lods
xchg
aam
push
insl
jg
cltd
xor
fistl
andl
mov
or
ljmp
push
test
loope
jbe
cmpsl
fs
jnp
test
jle
adc
repz
dec
in
inc
and
rolb
fadd
gs
cmp
hlt
aaa
push
cmp
shr
mov
std
arpl
dec
cmp
mov
ljmp
xor
jecxz
aas
or
mov
dec
cmp
dec
les
loop
xrstor
out
shrl
ret
jge
loop
sbb
ret
daa
cmp
lods
ficompl
inc
fwait
shll
hlt
in
ds
fistl
and
cmpsl
cld
shrb
jmp
dec
mov
dec
adc
adc
adc
inc
xcrypt-cbc
cmpsl
aad
push
arpl
push
adc
mov
xor
push
xchg
adc
clc
push
ds
push
inc
loopne
push
cmpsb
ss
icebp
mov
adc
mov
aad
sbb
lock
cmp
andb
pop
das
cmp
mov
jnp
push
adc
enter
repnz
leave
jle
cltd
mov
fisttpl
cmp
dec
out
push
inc
sub
add
cmp
mov
pop
popf
mov
roll
in
outsb
dec
out
ret
inc
les
mov
sbb
mov
leave
loopne
push
xchg
std
sbb
faddl
dec
ljmp
pop
push
and
pop
sahf
cmpsb
insl
xchg
out
push
rorb
and
push
mov
inc
rclb
xchg
mov
cmpb
cmc
jmp
fadd
dec
popf
pop
rcr
cli
xor
jns
push
mov
lock
push
jecxz
add
int
jecxz
xor
mov
xchg
or
add
pop
ret
or
xchg
fnstsw
andl
cld
sbb
lret
mov
adc
loopne
idivb
fcoml
fiaddl
iret
cwtl
addl
pop
xchg
mov
aas
clc
adc
sub
push
mov
adc
sbb
nop
icebp
cmp
jns
xchg
add
jae
cmp
outsb
stos
rcll
add
and
aaa
hlt
out
push
incl
push
xlat
adc
xchg
dec
cltd
cld
sbb
stos
stos
sub
test
mov
sti
add
ret
outsb
push
and
jmp
sti
pop
mov
lret
sub
test
lock
in
addl
in
xchg
aad
push
pushf
test
pop
pop
imul
mov
sti
orb
pop
inc
push
mov
mov
xor
loope
subl
mov
sub
movsl
in
xor
push
jno
fidivs
push
xchg
sbb
fadds
lret
add
push
add
into
sahf
movsb
adc
mov
sub
adc
insb
cmp
fwait
xchg
ret
aam
dec
mov
imulb
push
mov
jns
jge
lock
cwtl
sub
scas
add
dec
sbb
sbb
and
in
xchg
mov
push
rol
pop
inc
test
pop
push
sbb
std
dec
pop
jl
mov
out
or
mov
or
dec
outsb
sbb
out
inc
jns
xor
xchg
mov
xor
bound
mull
xlat
pop
stos
int3
add
int3
lcall
into
or
sti
rcrl
xchg
stos
out
call
push
lds
ret
repz
xor
pop
mov
inc
jecxz
dec
jecxz
cli
dec
ret
cmpsl
in
pop
push
sub
push
and
mov
push
iret
js
jecxz
fcomps
out
int
push
or
pop
xchg
xchg
icebp
inc
jg
repz
in
mov
or
pop
gs
movsl
dec
fistps
out
pushf
push
add
cwtl
fbstp
pop
push
lods
add
pop
mov
lsl
mov
call
and
test
outsb
pop
fdivl
clc
cmpsb
std
xor
into
pop
test
push
in
xchg
xorb
dec
js
lret
jmp
fsubrp
xchg
xchg
dec
push
hlt
rolb
jecxz
ss
dec
aas
in
rorb
mov
jl
gs
ficomps
lods
xchg
cmc
fistpll
push
nop
push
aam
xor
and
popf
jg
cmpsb
mov
ror
aad
inc
xchg
mov
or
cmc
fsqrt
xchg
cltd
stc
fsubrs
ljmp
lds
hlt
mov
cli
mov
dec
mov
inc
pop
out
cmp
push
mov
xchg
fdiv
push
in
sub
aaa
xchg
setp
sub
mov
sti
or
mov
inc
pop
shrb
cmpb
nop
loopne
daa
fcompl
mov
insl
mov
sti
sbb
into
fdivr
outsl
pop
pop
xlat
push
bnd
fstl
jg
js
push
cmc
pop
stc
gs
dec
adc
mov
popf
fadd
out
pop
xchg
divb
testl
xor
xchg
inc
ljmp
adc
fmul
clc
fsubrl
mov
stc
mov
fs
andl
jae
or
jmp
xor
cmpl
cmp
pop
mov
lock
cmpsb
ret
int
pop
mov
mov
movb
pop
out
addb
jl
mov
shlb
mov
rorb
add
pop
inc
fs
pcmpgtw
or
add
shll
mov
dec
cmp
push
inc
cli
sti
pop
adc
inc
loop
adc
shr
dec
jmp
subl
sbb
daa
in
imul
push
sbb
cmp
add
add
add
scas
jl
jnp
inc
mov
jns
mov
sub
push
movsb
mov
jl
xor
arpl
ret
sub
cwtl
dec
test
insb
fisttpll
test
les
or
repz
cmc
pop
xchg
clc
push
add
adc
pushf
sub
jne
dec
cli
pop
dec
cmp
cli
mov
lods
mov
pop
pop
xlat
or
scas
adc
pusha
sub
push
add
scas
das
ret
cld
mov
jb
fstps
dec
es
loop
arpl
dec
pusha
mov
xlat
ss
pop
inc
dec
sub
dec
adc
insl
pusha
xchg
add
rolb
push
les
faddl
leave
cltd
rolb
mov
mov
lahf
test
hlt
fidivrs
xchg
fldl
mov
mov
dec
lock
js
aam
icebp
and
movsl
mov
or
push
ret
out
loope
sbb
or
jns
mov
dec
sbb
jo
fnstenv
mov
mov
cli
inc
dec
cmp
mov
push
xorb
pop
jns
sbb
pop
xor
pop
mov
cmpsb
pop
das
push
movsb
scas
and
test
dec
cmc
push
mov
jb
fcmovu
aam
pop
sbb
in
int
push
out
std
aam
pushf
sub
dec
mov
ret
cmp
mov
cmp
scas
mov
push
or
push
frstor
mov
ficoml
jae
int
sarb
push
cs
scas
test
dec
scas
or
pop
movsl
jb
unpckhps
mov
insb
cmp
sbb
fstps
sbb
and
jmp
push
adc
mov
mov
les
rcrb
ja
hlt
nop
scas
lea
popf
or
pusha
in
daa
mov
pop
stos
mov
push
lock
inc
dec
push
dec
js
mov
mov
les
fdivr
adc
loope
xchg
inc
and
dec
jne
xchg
mov
out
sbb
jmp
jp
fnsave
or
punpckhdq
mov
add
jno
jg
pop
cmp
cmp
dec
outsb
xlat
and
inc
push
aaa
xor
repz
decl
in
xor
pop
cwtl
add
adc
xchg
lds
arpl
gs
push
push
or
lods
jnp,pt
dec
pop
lret
lods
ds
bound
js
lahf
lahf
lock
ret
repz
pop
cmp
cmp
mov
sahf
mov
and
xchg
dec
jge
lret
into
and
das
subb
sbb
push
xchg
loopne
sbb
cwtl
xchg
jnp
or
mov
dec
jnp
or
mov
sbb
add
jno
xchg
and
data16
jle
fwait
pop
inc
stos
lret
movsb
sbb
cmp
pop
and
fstpl
hlt
lahf
and
lods
stos
test
icebp
pushf
fisttpll
jge
xchg
les
pushf
xor
cmp
test
jp
cwtl
dec
jns
xor
sub
fisttps
icebp
dec
or
inc
pop
add
sti
mov
clc
in
push
cwtl
adc
daa
pop
dec
int
xchg
imul
push
mov
pop
rorl
cltd
in
testl
jl
or
call
movsl
add
cli
add
and
mov
jp
fldcw
jmp
inc
or
lods
aas
mov
xchg
pop
loop
out
and
dec
je
popa
mov
std
mov
sbb
out
mov
push
in
pop
inc
cmp
clc
jmp
jecxz
imul
mov
lock
jge
jmp
mov
pop
addps
adc
cld
int
xchg
loopne
ret
adc
mov
jl
pop
lret
insl
cwtl
test
mov
enter
jnp
test
jecxz
sub
cmc
xorb
mov
xlat
je
rcrb
data16
xor
xchg
jl
lahf
pop
push
inc
popf
fsubrl
add
jg,pn
adc
notb
cmp
fcom
dec
roll
subb
popf
int3
mov
es
mov
inc
pop
sti
pop
mov
es
les
call
in
test
dec
mov
das
and
sub
inc
sbb
jge
mov
mov
int3
pop
add
and
or
aad
dec
mov
mov
or
in
xchg
in
mov
imul
dec
inc
sub
and
ss
divb
add
test
push
pop
nop
cli
movsb
jbe
fucomi
loop
pop
cmc
addb
int
loopne
adc
lret
movsl
jne
aas
inc
aas
lret
pop
xor
xchg
outsb
or
das
ss
outsb
scas
repnz
stc
scas
fisubrl
lcall
or
xor
sbb
outsb
jmp
out
jmp
imull
rcrl
jle
nop
cmpsb
subb
xchg
xchg
xchg
leave
loope
push
jae
das
mov
mov
inc
dec
mov
jb
adc
adc
inc
fnstenv
cmpb
ds
sub
movsb
mov
add
xchg
sbb
loopne
mov
fldt
add
cli
fsubl
and
push
xchg
sbb
sbb
pop
mov
gs
repnz
cwtl
sub
in
mov
call
push
js
scas
xchg
sub
xor
clc
push
lods
xchg
imul
xor
test
mov
stos
mov
push
pop
xor
dec
mov
mov
mov
fmuls
cmp
aam
and
out
jbe
dec
je
addr16
or
repz
cmp
decb
movsl
cmp
jp
popa
aas
in
test
pop
sahf
out
fists
ret
push
mov
fstps
ja
popf
dec
mov
pextrw
gs
push
dec
imul
lods
cmp
xchg
addb
andb
adc
inc
add
adc
stos
imul
inc
das
pusha
xchg
iret
xchg
sbb
sub
inc
mov
lret
mov
or
mov
adc
mov
inc
sti
adc
jb
mov
mov
sub
adc
jno
push
popf
outsb
inc
test
pop
sub
sub
call
cli
sahf
je
inc
dec
lods
lds
loop
mov
sbb
lods
sti
or
sahf
fstpt
inc
inc
in
ret
cmp
lret
test
jae
xchg
leave
insl
cwtl
je
cmp
inc
push
jle
xor
add
shrb
mov
sub
rcl
push
push
mov
jp
adc
inc
jecxz
or
xchg
aad
sub
fsubrp
jmp
outsb
lea
insl
fimull
fwait
cmpsl
int3
in
mov
pop
push
fwait
arpl
push
pop
xor
jo
stos
xchg
rcr
pop
test
push
cmp
iret
xchg
mov
mov
lret
mov
sarl
xor
push
lea
in
aad
imul
in
jmp
push
mov
aaa
mov
sub
xor
into
pusha
cli
and
xor
jle
fimull
adc
addr16
fidivs
addr16
xchg
adc
jle
pop
mov
popa
mov
sbb
xlat
xor
enter
dec
or
push
or
int3
jno
stos
cld
lods
mov
popf
mov
push
push
dec
push
xchg
aad
dec
inc
or
xor
dec
lret
ljmp
sbb
xchg
es
je
lcall
lret
aaa
mov
vpaddw
insl
dec
aam
fldl
dec
push
test
adc
fcomp
pop
ret
mov
push
mov
mov
sbb
iret
fwait
movsl
push
lret
mov
mov
xchg
sub
filds
xchg
in
pop
sub
mov
insb
xor
shl
mov
jmp
or
xchg
or
or
sub
mov
arpl
outsb
xor
loopne
add
sub
subb
shrb
dec
scas
mov
jmp
mov
mov
call
inc
pop
mov
movsl
dec
add
mov
pop
scas
scas
add
inc
imul
sub
xchg
ficomps
lret
cmp
movsb
test
dec
push
imul
lods
jle
mov
push
lods
xlat
jno
mov
inc
rcr
and
sbb
jne
xor
les
shl
test
rolb
push
dec
out
rol
push
push
iret
cmp
std
mov
imul
mov
je
mov
fisubs
cmc
mov
int3
jns
sub
mov
add
stos
xchg
sub
lds
pop
in
mov
ret
sti
adc
out
jle
loope
pop
lret
mov
mov
pop
add
cli
shr
test
xchg
xchg
pop
lock
inc
cmpsl
dec
es
pop
jb
cwtl
fwait
repz
push
xchg
scas
lret
pop
scas
sbb
cltd
mov
es
mov
test
inc
mov
sbb
addr16
sub
xor
jge
ljmp
jno
inc
sbb
repnz
xor
out
push
orl
cmpsb
inc
movsb
pop
and
jns
shll
out
loopne
sub
repnz
xorl
push
push
adc
repnz
fcmovbe
pop
fldt
gs
sub
inc
insb
cmp
adc
sti
ljmp
mov
and
rorl
xlat
loopne
sbb
out
push
cltd
addr16
push
rdtsc
or
adc
xchg
inc
ror
add
push
push
repz
aam
test
or
pop
mov
xchg
lea
or
rsm
jno
inc
pop
or
or
fldcw
mov
sbbb
movsl
lcall
jne
lea
stc
dec
xor
subb
fdivrl
sub
adc
push
int3
ret
lods
into
and
les
sbb
int
js
int3
jno
data16
fstp
push
rcll
lahf
mov
or
add
outsb
loope
movsb
jle
sti
add
xor
dec
mov
ss
divb
and
loope
cmp
sub
xor
lods
xor
jo
add
add
int
out
inc
xorl
push
pop
adc
testl
movl
hlt
stos
push
dec
mov
xchg
lret
fidivrs
and
insb
nop
fwait
sbb
outsb
dec
jno
insb
lcall
fnsave
or
popf
cmp
inc
faddl
sub
push
mov
mov
xor
leave
push
inc
cltd
inc
xor
sbb
xor
jecxz
pop
adc
mov
push
mov
out
push
lret
xor
sub
aad
adc
imul
adc
fdivl
scas
mov
push
jae,pn
pop
adc
scas
dec
add
sti
movl
lcall
daa
in
mov
cmp
daa
iret
xor
sahf
xchg
xchg
adc
sub
pop
ljmp
sub
xor
jge
push
shl
and
add
fsubr
in
jae
jg
fldt
xlat
std
add
lcall
jnp
pop
cwtl
sub
icebp
stos
or
sub
mov
mov
and
jae
nop
pop
mov
ds
mov
or
xchg
mov
clc
xchg
fisttps
out
jecxz
jns
addr16
sub
inc
add
out
jg
pop
add
xchg
movsb
stc
arpl
dec
inc
lods
rorl
push
mov
mov
gs
lret
mov
add
cld
mov
sbb
leave
in
fdivrs
push
nop
aas
cmp
sub
jns
and
popf
sbb
xlat
xor
xor
pop
imul
or
sbbl
cmpsb
xchg
mov
mov
mov
push
dec
popf
jb
cmp
mov
sbb
adc
xor
lock
inc
outsb
dec
and
mov
cld
push
outsl
andb
dec
mov
jae
jg
add
imul
call
push
jle
dec
aaa
dec
lahf
pop
jp
mov
mov
mov
fwait
add
xor
lods
sub
add
call
fwait
jo
stos
lods
adc
fwait
insb
std
push
mov
sub
adc
in
cmpl
mov
test
int3
lds
sbb
xchg
or
xchg
pushf
cmp
pushf
sbb
mov
mov
lret
dec
cmp
push
decb
and
clc
int3
ficomps
xorb
push
add
cs
test
xchg
push
imul
pop
roll
mov
in
jl
test
jp
inc
rolb
jnp
test
xchg
xchg
aas
jno
std
mov
pop
xor
jle
roll
jecxz
sti
rorl
cmc
mov
mov
mov
jns
test
dec
adc
insl
nopl
test
mov
adcb
mov
jne
inc
orb
nop
jnp
out
aad
xchg
nop
outsl
stos
fwait
xchg
inc
mov
jns
mov
icebp
cmpsl
stos
pop
arpl
jno
sbb
std
lods
subl
and
jg
dec
mov
cmc
shl
mov
andb
or
les
mov
sbb
cmp
je
dec
andb
cmp
mov
mov
js
in
xchg
test
dec
repnz
jge
pop
add
fldt
movsb
push
cmp
sub
xchg
rcr
lds
popa
lret
test
sbb
in
or
adc
std
or
jns
and
pushf
and
xor
call
stc
lods
int
push
inc
test
and
dec
out
test
adc
xor
xor
xor
mov
cmpl
stc
sbb
pop
cld
popf
push
nop
andl
fdivr
inc
and
xor
scas
pop
xorl
adc
aam
xor
mov
mov
sti
test
out
or
jecxz
mov
jae
pop
sbb
lcall
test
add
int
push
loop
mul
jecxz
nop
push
aam
jo
or
xor
stos
xor
ja
jb
sbb
fiadds
movl
push
fwait
inc
push
movsb
xchg
fsub
push
lret
hlt
and
mov
add
into
and
sti
mov
in
xchg
dec
cmpb
and
fsub
mov
hlt
and
xchg
fmuls
mov
dec
icebp
sbb
cmpsl
int
fnstcw
jno
mov
push
add
jo
cmp
aaa
icebp
pop
xchg
inc
sbb
and
jb
add
sub
push
test
jo
adc
pop
and
pop
movsl
push
mov
cli
in
cli
mov
pop
pop
xchg
cmpsl
sti
lds
stos
sarb
push
jmp
mov
and
xchg
fnsetpm(287
pop
std
fwait
orb
sub
push
iret
lods
aaa
cmp
xor
jae
fimull
or
adc
cmpsb
pop
mov
in
adc
xchg
movsl
cmp
popa
and
add
in
rolb
pop
std
notb
cwtl
stc
mov
lcall
mov
add
in
add
popa
adc
or
or
std
je
cmpsl
fbstp
push
push
stos
fdivs
adcb
cwtl
imul
lret
icebp
jl
jp
dec
faddl
xchg
mov
jno
mov
lods
test
in
mov
and
adc
cltd
or
xchg
dec
jb
jecxz
lahf
ja
movsl
rcrb
js
scas
out
mov
and
xor
sbb
data16
pop
pop
insl
xor
cs
jecxz
jo
push
and
mov
gs
in
loope
or
sbbl
cmp
jne
sahf
or
inc
sti
mov
inc
dec
divl
cmp
ds
jl
xchg
lock
add
imul
xchg
push
pop
mov
or
and
lods
ss
cmc
rclb
stos
sarb
adc
lret
es
pop
movsb
loope
inc
or
push
sarl
or
cmpsb
loopne
iret
enter
xchg
xor
xchg
jge
insl
sub
or
repnz
sub
das
aas
push
arpl
ja,pn
cld
pop
cli
mov
mov
in
repz
js
movsl
push
in
xor
cmc
inc
cmpsl
lods
push
sub
stc
fwait
push
stos
fucomp
dec
fwait
adc
sarl
popf
cmp
inc
jae
ss
test
jecxz
mov
test
lcall
in
inc
in
xchg
movsl
push
sbb
sub
xor
add
xchg
adc
movsb
sbb
jb
shlb
dec
mov
iret
xor
scas
pop
push
in
jmp
je
dec
outsl
mov
xchg
pop
shll
icebp
inc
out
imul
lock
mov
jns
add
lods
xor
add
fdivl
dec
add
push
add
sub
loopne
jecxz
push
clc
xchg
and
orl
adc
scas
xchg
ror
xor
in
xchg
insb
popa
adc
fnstcw
cmp
cmp
pop
test
sub
push
adc
mov
sbb
jbe
push
in
cmp
xor
adc
repnz
insb
mov
lret
test
jns
sbb
mov
lock
add
and
jmp
ret
movsl
mov
fmuls
addb
outsb
xchg
call
or
jae
push
fbstp
outsl
or
cmc
sbb
adc
filds
add
stos
lret
push
test
cs
mov
cmp
and
mov
lret
and
test
sbb
fldt
fnsetpm(287
and
mov
vpsubq
push
leave
popf
mov
fdivl
mov
ret
jle
mov
mov
mov
pop
inc
dec
rcll
loope
aas
push
sub
dec
movsb
sbb
sbb
test
popf
jmp
out
push
push
cwtl
cmp
jbe
push
add
ret
stc
jle
push
shlb
adc
incl
inc
and
mov
test
mov
lea
push
loop
sub
ret
into
lea
or
hlt
and
adc
fcomps
or
cmp
lea
outsl
add
insb
clc
mov
sub
sahf
cwtl
push
push
loopne
sbb
cli
add
xor
dec
jno
and
cmp
addr16
sub
sub
xchg
rolb
setns
das
xor
push
aaa
or
pop
xor
mov
adc
lret
pop
dec
enter
xlat
not
jmp
aam
outsb
cmp
lret
inc
clc
sbb
pop
cltd
popf
stos
shr
adcl
push
mov
xchg
sahf
push
and
test
dec
pop
jbe
stc
adc
es
mov
imul
int3
ret
add
jmp
std
arpl
jl
mov
aaa
add
or
negb
push
fcom
jge
call
mov
outsb
xor
mov
mov
sbb
pop
mov
push
pop
dec
sub
outsl
xchg
stos
cs
aaa
xor
data16
je
dec
dec
or
insl
add
inc
frstor
xor
out
jmp
and
ret
nop
and
mov
mov
dec
dec
jb
scas
dec
mov
test
mov
add
mov
jnp
adc
je
sti
out
mov
jmp
inc
rolb
cmp
push
shrd
xor
dec
lock
add
sbb
cmp
sub
data16
push
mov
mov
push
add
push
loopne
lret
push
push
push
out
ljmp
gs
xlat
pop
scas
xchg
mov
add
add
inc
lods
xchg
sub
movsb
push
mov
jl
mov
mov
push
cmpsl
das
les
mov
jbe
rcll
or
mov
ret
aas
cmp
and
mov
inc
xchg
ret
test
out
ja
jb
nop
bound
sbb
xlat
inc
pushf
jne
jne
add
cmp
stos
adc
movsl
lcall
dec
roll
xor
sti
pop
mov
ss
imul
mov
and
pop
or
fistpl
insb
lahf
jbe
sbb
add
sub
jb
mov
dec
sub
ss
jae
pmaxub
mov
shrb
sbb
mov
pop
out
mov
jns
lea
add
inc
lcall
in
lea
xchg
xchg
lods
xorl
add
pushf
or
lea
push
call
inc
xchg
insb
and
and
push
std
xchg
shll
add
call
inc
dec
sbb
dec
sub
xor
add
pop
fisubl
inc
adc
push
ss
cmp
das
pop
mov
lods
xor
inc
or
sbb
adc
loop
dec
sub
mov
loopne
fistps
mov
bnd
fldt
int3
cmp
mov
sti
das
push
add
test
push
dec
lret
bswap
sarl
aas
orl
push
cmc
adc
hlt
jae
repz
mov
repnz
adc
xchg
or
sbb
push
and
lods
stos
imul
add
cmp
and
cmpsl
test
cwtl
and
les
xchg
mov
pop
in
dec
cmp
ja
stc
out
sub
cmpsb
adc
mov
push
sbb
pop
and
cmp
lret
jg
mov
pop
inc
pop
mov
in
in
mov
ret
arpl
and
daa
daa
xchg
repnz
dec
xchg
test
inc
add
pop
inc
andb
jae
stc
loop
cmp
testb
icebp
ljmp
jle
pop
sbb
fcom
es
pop
dec
xchg
mov
mov
or
mov
xchg
pop
fdivrs
stos
gs
add
rorb
inc
mov
aaa
aam
cld
dec
shlb
fcomi
rcll
ret
mov
stc
sbb
jno
lcall
imul
scas
xchg
inc
pop
mov
daa
jecxz
sub
dec
cmp
push
aam
clc
cltd
cmpsl
movsl
mov
push
cmpsb
idiv
subl
mov
in
in
lods
cltd
mov
lret
hlt
push
incl
jns
testb
mov
jno,pt
mov
fistpll
push
repnz
filds
bswap
mov
xchg
inc
ucomiss
pop
lods
bound
sbb
fisubrs
push
ja
push
and
cmp
mov
sar
dec
std
add
pop
inc
cld
xor
es
cmp
lds
jno
inc
lea
dec
hlt
gs
push
idivb
aad
cmp
xchg
jp
pop
lock
fnstsw
imul
out
out
cmc
pop
arpl
mov
and
or
incb
pop
cmp
sub
ret
and
cmpsl
mov
mov
mov
xchg
jnp
jmp
or
cmpsl
int
dec
aam
adc
sbbl
dec
inc
cmc
das
ds
jle
adc
cmpsb
or
jae
push
mov
push
fsts
sti
lock
addr16
sbb
sbb
xchg
xchg
xchg
push
xchg
dec
inc
lods
sbb
icebp
in
fdivs
addr16
add
rorb
fidivrl
scas
mov
repnz
add
popf
loop
insb
push
xchg
jl
call
sbb
je
fmuls
pop
mov
ljmp
popf
notl
cmp
and
aaa
das
jo
mov
mov
cmpsb
ret
jo
xchg
scas
xor
cmp
pop
push
push
test
rorb
ljmp
pop
pop
lret
fs
mov
push
cli
sub
testb
in
inc
rolb
gs
dec
inc
add
add
outsb
adc
scas
push
out
mov
xchg
xchg
mov
jg
int
loop
pop
push
mov
lret
addb
add
adc
sub
lds
scas
sub
add
iret
test
xor
faddp
and
ret
aam
lods
into
mov
or
and
cmp
loop
pop
das
pop
inc
sbb
neg
push
cmp
pop
lret
fsubrl
mov
les
orb
push
fcomps
inc
xor
add
adc
mov
or
add
sub
push
mov
or
repz
sub
xlat
fldenv
mov
and
xchg
fwait
cmc
pop
dec
xor
mov
popa
or
pop
orb
cltd
fcomp
call
ret
sub
sar
mov
inc
xor
inc
jns
pop
mov
add
xchg
mov
lods
sbb
aaa
fdiv
sub
inc
cmpl
push
lret
cltd
xor
cmp
or
movsl
push
jecxz
inc
aad
mov
cmp
adc
decl
jno
mov
xor
cmpsl
ljmp
push
ret
or
jl
cmp
fcoml
lret
mov
jns
les
mov
lock
test
popf
xchg
ja
data16
xor
jno
loop
das
scas
nop
test
or
xchg
or
push
mov
stc
mov
inc
mov
xchg
insl
outsb
imul
sbb
ret
jg
pushf
arpl
jno
sbb
fstpt
and
add
xor
mov
cmp
mull
pop
push
test
loopne
std
test
insb
push
nop
adc
popf
fistpl
cmp
push
pop
inc
and
push
int
stc
xchg
mov
ret
mov
and
pop
dec
orl
push
sub
pop
jno
fdivrs
lods
add
test
hlt
pop
lods
or
int
outsb
and
sbb
push
and
ret
cld
sub
aam
push
int3
aas
mov
push
xchg
dec
jge
dec
fwait
lods
mov
sbb
roll
pop
mov
addr16
and
cmp
sbb
les
xchg
dec
mov
shl
mov
push
push
lds
mov
inc
mulb
cmc
push
subps
enter
int3
inc
daa
dec
pop
or
adc
xchg
push
pop
inc
add
push
push
xchg
outsl
inc
lods
std
lds
data16
sbb
adc
lret
xlat
ficoml
xor
lea
pop
push
mov
and
adc
pop
ljmp
sub
lcall
mov
xchg
dec
inc
mov
or
adc
aam
mov
ljmp
inc
rcrb
mov
mov
es
and
cmp
inc
lds
out
and
and
sub
cs
mov
aas
sub
rolb
lcall
fstl
mov
leave
xchg
ss
scas
stc
cli
test
mov
sbb
push
enter
add
jl
jmp
pop
pusha
int3
repz
data16
mull
dec
fstl
cmpsb
dec
cmp
popf
sbb
or
mov
popa
mov
pusha
xchg
inc
daa
lds
int3
adc
jecxz
mov
jnp
popa
test
imul
push
inc
and
outsb
adc
leave
insl
ljmp
jecxz
aam
dec
cwtl
out
fwait
xchg
sub
movsl
and
xorl
imul
jno
icebp
dec
mov
lods
daa
jle
push
push
loop
inc
sub
aad
jp
push
pop
pop
mov
push
adc
and
mov
fsubrs
dec
pop
in
fbld
fistl
test
aad
xlat
and
out
addr16
cwtl
aaa
roll
lcall
hlt
push
mov
xor
push
dec
aas
sbb
js
jno
orb
xorb
stos
add
inc
jecxz
sbbl
or
pop
fidivrl
pusha
lret
call
shrl
pushf
movsl
bswap
ret
mov
popa
loopne
cmp
dec
mov
mov
pop
jbe
cmpl
mov
push
push
xchg
movsb
je
lcall
cmp
push
jne
xchg
int3
sub
int
test
dec
je
hlt
or
push
fimull
rcll
loop
jb
fsubs
rol
dec
fsubp
jae
mov
pop
es
mov
jo
xor
xor
mul
dec
aad
into
ret
cmp
pop
jns
icebp
inc
aaa
loop
mov
fsqrt
xor
sub
lret
aam
andl
cmp
imul
cs
or
cmp
shrb
adc
and
shrl
dec
sub
out
push
data16
loopne
adc
inc
outsb
and
sbb
pop
adc
or
sbb
test
xchg
ss
and
je
pop
ja
fidivrs
jmp
xchg
insl
mov
les
inc
mov
sbb
addl
jge
jae
loope
lods
lods
test
mov
or
adc
and
mov
jge
outsb
jle
and
sub
sub
push
inc
mov
xchg
cltd
sub
sbb
fs
mov
xchg
mov
in
mov
xchg
jecxz
push
xchg
mov
adc
mov
xchg
out
mov
fistpll
xor
or
and
insl
push
int3
inc
mov
pushf
push
mov
out
push
call
lock
mov
loope
cmpl
xchg
mov
add
and
push
movsl
inc
add
sub
mov
fsubrs
and
in
sub
mov
or
fistl
ret
rclb
popa
push
outsb
or
push
cld
push
dec
es
ja
xchg
mov
pop
in
movsb
push
mov
popf
mov
jecxz
cli
mov
sbb
jg
scas
xchg
mov
nop
jne
aam
shr
mov
mov
andl
inc
rcr
dec
add
mov
mov
adc
jno
sarb
lret
sti
ljmp
outsb
jo
loopne
adc
push
aam
jb
push
cmp
stos
inc
test
hlt
cmc
add
int3
daa
int3
and
outsb
in
bound
sarl
fisttpl
repz
out
ljmp
xor
lods
inc
add
imul
adc
and
outsl
cmp
dec
ja
inc
push
lods
or
lods
add
mov
mov
sub
movsb
cmp
push
jb
xor
pop
shlb
call
and
scas
inc
jo
adc
xchg
enter
add
jl
inc
mov
loop
jb
cmp
pushf
cmp
and
ficoml
jge
out
mov
mov
and
fwait
es
pop
mov
add
test
mov
dec
push
imul
mov
enter
mov
jb
or
in
cmpsl
add
push
xchg
in
xchg
jne
mov
pop
xor
daa
xchg
adcb
dec
div
ret
push
test
loope
push
ljmp
mov
xor
dec
and
cmpsl
jmp
les
shr
lods
mov
jge
add
dec
cs
loop
push
test
lret
sarb
cmp
mov
xor
xor
pop
inc
mov
rcrb
outsb
paddb
adcl
inc
loop
dec
mov
leave
xchg
test
push
sbb
mov
test
dec
sbb
mov
adc
adc
fnsave
fst
enter
jae
bound
xchg
outsl
jns
adc
js
mov
ljmp
xor
add
mov
jecxz
adc
je
insb
rclb
lock
xchg
lret
adc
pop
dec
cmp
push
pusha
movsl
lds
xor
sbb
in
outsb
jbe
mov
sub
jbe
int3
pop
int
aam
sbb
dec
cmp
and
cmpsb
push
jmp
repnz
jmp
cltd
adc
out
mov
push
adc
lock
cwtl
jecxz
shl
lahf
inc
and
jle
div
pushf
stos
pop
pop
pusha
int
inc
pop
cli
movsl
jnp
add
push
mov
adc
cmp
in
ret
pop
jl
jns
adc
inc
mov
lret
jge
xchg
ds
adc
mov
clc
push
stos
sub
les
pop
sub
jl
inc
pusha
sub
es
cmpsb
pop
dec
mov
add
fs
add
push
inc
mov
or
addr16
shr
mov
or
and
dec
movb
mov
sub
jmp
jg
test
or
dec
lock
hlt
or
jle
xor
cmp
push
mov
addr16
imul
fisttps
fs
fcomi
pusha
je
pop
cmpsl
fidivrs
or
jecxz
inc
dec
dec
push
cmpsb
gs
imul
fldenv
pop
cmp
shll
xor
mov
jne
test
mov
imul
addr16
gs
cmpsl
inc
cmp
jle
inc
push
das
in
mov
in
pop
insb
divl
and
add
push
popf
rorb
int3
dec
repnz
mov
stc
mov
cmp
mov
jp
mov
cmp
add
push
daa
pusha
push
outsl
pop
stos
lea
mov
or
insb
add
fwait
popf
sbb
add
out
mov
loop
bound
push
sub
sub
pop
imul
jbe
mov
pop
inc
mov
stc
inc
clc
cmp
fistpl
in
mov
cmpsb
popa
jp
outsl
adc
cmp
sbb
xchg
rolb
push
outsb
mov
pop
in
nop
test
adc
inc
sbb
mov
cmp
andb
es
xor
fistpll
call
fs
push
test
jne
aad
and
adc
mov
fldl
jge
cmpsb
pop
push
xchg
lods
inc
and
cwtl
popa
fcmovu
stos
imul
lea
add
hlt
cwtl
mov
mov
fisttpl
hlt
mov
enter
push
jle
decl
lret
add
dec
push
addb
int3
mov
mov
leave
js
cmp
push
test
xchg
dec
movsl
inc
xchg
jbe
repnz
movsl
mov
dec
fcmovb
jne
mov
popf
mov
xchg
jns
cmp
outsl
push
lret
loopne
arpl
fst
mov
and
jp
clc
xchg
int
jp
es
in
cmp
xchg
lret
mov
ljmp
mov
or
inc
fdivrp
sbb
stc
xchg
xor
pop
mov
cmc
sub
dec
fninit
mov
dec
ss
pusha
inc
mov
rclb
ja
int
and
movsb
or
lock
aas
xchg
fisttpl
js
or
leave
shrb
aad
jg
test
jnp
lods
or
cmp
add
push
sub
mov
test
jnp
push
ds
mov
or
lea
mov
and
mov
in
xor
jne
inc
mov
pop
mov
push
lea
or
test
mov
sub
lock
sbb
sbb
push
mov
xor
test
repz
mov
inc
xor
pop
jno
lret
jns
clc
pusha
scas
pop
fs
popa
pop
fidivrl
xor
sbb
iret
push
pop
adc
push
xchg
dec
mov
out
pop
xor
leave
adc
repnz
mov
lods
xor
movsl
mov
mov
imul
mov
gs
aad
pusha
jne
test
ret
lods
movsl
pop
dec
mov
lds
decb
and
movsl
inc
cmp
in
push
cmp
xchg
out
push
mov
sahf
cld
lret
xor
inc
fadds
xchg
cltd
into
pop
fsts
xlat
jl
xor
xor
addr16
pop
shlb
push
adc
adc
xchg
icebp
nop
inc
xor
scas
inc
sub
adc
cmpsl
adc
add
xchg
leave
sbb
inc
fidivl
lea
addr16
imul
test
xor
pop
daa
xchg
call
add
insl
fwait
mov
lods
rorb
add
scas
and
divb
mov
and
pop
xchg
sub
sti
mov
pop
mov
jae
add
jbe
jae
into
inc
in
fcmovnbe
mov
mov
xor
add
xchg
lcall
xchg
sub
clc
push
mov
adc
push
aaa
dec
pushf
aaa
das
sbb
pop
jb
push
mov
push
jmp
cwtl
scas
mov
ds
jnp
sbb
add
mov
pop
enter
ja
mov
fdivl
xchg
and
pop
bound
dec
fsts
dec
mov
lahf
lret
pushf
mov
in
xor
xchg
cltd
in
xor
das
test
cmp
insl
mov
in
loop
sbb
lods
int
mov
test
cli
push
call
push
icebp
push
dec
stos
test
es
cmc
jp
outsl
sahf
ret
dec
ljmp
add
loope
dec
test
data16
lods
stc
movl
sub
jp
cs
cmpsb
xchg
mov
out
mov
xor
inc
gs
repz
stc
insb
jno
lahf
sbb
subl
lcall
arpl
ds
jg
dec
test
aam
bound
out
and
xchg
mov
into
cli
insb
jno
les
sub
mov
add
imul
sbb
xor
mov
scas
je
lock
inc
and
and
xor
dec
push
je
pop
jo
cmpsl
jmp
out
addr16
mov
std
out
fwait
loop
add
cmp
cs
or
movsl
mul
cmp
jo
movsb
lds
lcall
movsb
dec
cmp
js
sbbb
xchg
mov
mov
sub
into
in
mov
sbb
xor
lea
imul
roll
jo
sub
jno
jbe
in
fs
les
mov
adc
rcrl
pop
xor
hlt
inc
and
sbb
xchg
sub
jns
jmp
sub
inc
fstp
mov
mov
ljmp
xchg
mov
adc
pop
jno
shll
shrb
lcall
push
or
add
mov
mov
adc
ds
lahf
nop
insb
mov
loop
mov
fwait
cld
mov
adc
cmp
outsl
enter
out
mov
pop
mov
lret
mov
push
incl
mov
and
xchg
xlat
push
mov
pusha
or
subb
jb
icebp
add
jo
ficoms
popa
sub
mov
xchg
lock
sub
sub
lods
xchg
cmp
mov
mov
rcrl
push
in
imul
push
and
popf
cmp
test
mov
in
push
test
pop
ret
sbb
cmpsl
sub
adc
push
push
mov
pop
dec
imul
mov
mov
mov
bt
or
cmpsb
shr
push
pop
js
xchg
cltd
ret
aad
into
jo
imul
test
push
das
loopne
jbe
mov
mov
aad
xchg
negb
mov
pop
jecxz
ds
sub
xchg
mov
pop
mov
jbe
mov
sub
js
outsb
and
xchg
daa
dec
call
push
jno
or
jl
out
std
lret
and
jno
cmp
jnp
mov
xchg
icebp
lods
add
fsubl
and
add
add
outsb
mov
cltd
clc
jbe
out
mov
test
fists
xchg
push
fdivr
adc
mov
test
sbb
pushf
mov
lods
or
imul
push
dec
cwtl
push
jno
js
push
add
sub
data16
pop
dec
push
add
sbb
insb
mov
dec
repz
movsb
fst
jne
cmp
sbbb
mov
push
sub
pushf
das
xor
adc
or
mov
pop
add
mov
shlb
dec
dec
jnp
sahf
add
push
jg
sbb
push
push
es
sub
jo
fdivrl
mov
clc
ror
cmp
incb
invd
mov
lea
push
sub
pop
lea
push
sbb
jmp
je
mov
jnp
jne
ss
pandn
pop
mov
xchg
movsl
aam
insl
lret
imul
das
pop
jo
or
mov
push
or
je
inc
pop
and
popa
mov
mov
cmpsl
inc
inc
push
push
xchg
andl
adc
and
jbe
add
cs
sti
jae
sbb
ss
mov
cli
sbb
out
xchg
and
mov
xlat
inc
iret
jno
fadds
mov
cmp
es
push
push
ret
lret
imul
and
adc
insl
add
add
decb
xchg
mov
outsl
pop
sub
pop
mov
add
repz
push
insb
and
out
aad
or
in
icebp
add
push
lods
dec
push
je
ret
stos
push
jnp
mov
outsl
es
sti
sub
imul
xchg
mov
outsb
insb
orl
mov
add
xchg
shll
adc
adc
lock
push
mov
arpl
lcall
add
bound
int3
ljmp
cmp
lds
ljmp
shlb
cltd
test
xchg
or
divl
hlt
nop
push
popf
cld
sub
jo
mov
rcll
push
sti
je
cmpsb
mov
xor
push
mov
shl
xor
dec
je
popf
fstpl
mov
xor
movsb
sub
cli
les
xchg
outsb
pusha
cmc
mov
ljmp
incb
mov
sbb
pop
sbb
ss
js
orl
pushf
into
dec
std
inc
lds
sub
mov
add
lcall
std
ljmp
mov
popa
dec
mov
gs
inc
loop
jmp
pop
mov
add
xchg
or
and
scas
mov
gs
sub
mov
popa
push
mov
and
int
inc
push
add
repnz
ss
sahf
pop
pop
repnz
icebp
gs
push
in
inc
icebp
cmppd
xchg
sbbl
in
rcrl
test
adcb
orb
and
out
cmp
repnz
push
pop
adc
add
push
jbe
lods
xchg
mov
repz
mov
xchg
outsl
fists
xor
pop
clc
into
outsb
mov
lret
out
xlat
nop
push
mov
enter
lods
mov
cs
jmp
xor
mov
loope
dec
pushf
sub
lods
mov
pusha
xchg
xor
jns
and
aas
jb
cmp
mov
mov
sti
cltd
cmp
test
cmpsb
sub
dec
outsb
pop
ret
sub
xchg
aam
jnp
or
xlat
add
loop
lods
adc
fisttps
pop
ficoms
adc
sbb
lods
push
insb
xor
xchg
xchg
insl
cli
mov
pop
sub
pop
mov
and
nop
push
out
and
into
stc
and
inc
add
mov
subl
add
jns
mov
lcall
mov
dec
test
pusha
push
cmp
data16
mov
or
jno
outsb
adc
lahf
add
sub
mov
es
test
dec
sahf
xchg
or
pop
mov
stc
inc
ret
xor
ficompl
into
xchg
loope
cld
mov
cmp
and
test
cmp
in
faddp
jmp
xchg
test
iret
cmp
frstor
inc
mov
push
aas
imul
or
jo
ret
add
int
cmp
or
in
inc
xchg
mov
jecxz
fs
jne
pusha
sub
jns
movsb
in
aam
dec
loop
push
aam
dec
mov
sbb
mov
ljmp
and
and
stc
pop
cmp
push
ja
xor
inc
dec
loope
popa
das
jmp
mov
pusha
outsl
pop
adc
add
jmp
sub
fcomps
das
cmpsb
iret
lret
mov
data16
jne
fldt
mov
loopne
and
ret
aad
std
test
or
js
sbb
pop
jmp
xchg
sub
dec
mov
jne
push
scas
pushf
outsb
inc
jge
mov
add
mov
sub
test
cmp
fistps
adc
xchg
inc
or
cld
xor
push
movsl
fs
mov
and
mov
movsl
inc
jmp
orl
pop
cmpsb
cli
rcll
sbb
mov
mov
aas
xor
lds
je
sbb
addb
xor
lcall
mov
jmp
jae
push
mov
in
xchg
cs
stc
sbb
mov
ljmp
push
pop
cmp
imul
and
dec
mov
mov
std
lret
pop
ljmp
les
iret
mov
hlt
push
mov
xor
jnp
pop
jge
cmpsb
jle
movsl
les
cld
clc
ficompl
fistpl
repnz
sbbl
popfw
push
test
mov
in
insl
loopne
mov
cli
push
xlat
dec
das
cmp
lods
daa
jne
loope
ror
in
test
mov
and
inc
mov
mov
mov
stos
mov
int
notb
push
dec
add
xlat
mov
lret
jno
dec
mov
nop
xor
sahf
sbb
inc
pop
lret
into
pop
and
data16
hlt
sub
jb
or
jge
bound
test
pop
adc
mov
cli
mov
test
jnp
cltd
sti
sahf
aaa
out
pushf
and
fs
int
hlt
std
rcll
js,pn
pop
stc
xchg
sbb
pop
scas
into
jb
mov
movsb
pop
add
and
rorb
imul
jmp
mov
jg
mov
adc
mov
addb
mov
inc
push
jle
mov
movl
mov
out
les
loop
push
jecxz
stc
nop
test
or
lret
or
mov
pop
and
rcrb
push
sub
stos
dec
jge
jmp
push
pop
jle
jle
data16
test
cld
pusha
ja
add
les
jge
fisubrl
fcmove
mov
and
fdivrp
adc
into
pop
or
or
out
loope
push
sbb
outsb
leave
dec
ds
xor
add
dec
xor
int
into
add
lods
lcall
stc
add
fsubl
jmp
and
xchg
or
int
loope
test
stc
mov
fs
into
sbb
hlt
jle
insl
mov
inc
lea
mov
xor
dec
sbb
add
mov
repz
insb
or
add
imul
add
add
scas
sub
push
enter
test
aam
xor
sbb
orb
jne
mov
in
and
jno
repnz
push
mul
xchg
xchg
add
xchg
xor
jle
std
or
add
clc
mov
jo
add
repnz
xor
mov
sbb
mov
push
mov
push
ret
rcr
jp
ds
push
xchg
lds
adc
inc
sub
sbb
ficompl
add
and
subl
lock
mov
das
mov
pop
scas
mov
or
jmp
repz
mov
cwtl
pop
inc
pop
mov
out
mov
inc
xor
lds
or
dec
sub
ja
jo
jge
xchg
xchg
and
dec
rorb
loope
lock
add
and
lret
push
xchg
pop
xor
mov
xor
sarl
jg
xor
add
rcll
cltd
inc
les
bound
push
ljmp
out
jle
clc
mov
adc
inc
outsl
mov
pushf
xor
ds
jbe
mov
pop
jo
movsb
mov
pop
ds
mov
mov
mov
jg
jg
inc
xchg
push
seto
or
push
addr16
sbb
idivb
xor
test
fbld
cmp
dec
cs
add
and
sub
bound
scas
or
adc
loopne
pop
int
xlat
add
adc
in
inc
mov
ficoml
ret
icebp
pushf
sub
arpl
ficomps
das
xor
cs
mov
iret
or
adc
inc
clc
sbbl
loope
and
js
test
sub
dec
sbb
and
insb
jnp
test
cmp
add
push
shlb
cmp
jne
cmc
ljmp
pop
addr16
into
dec
imul
inc
les
cli
inc
mov
scas
jge
and
cmp
popa
scas
in
mov
or
cli
ja
xchg
push
insl
lods
push
aad
jbe
cli
sbb
lea
out
loop
mov
inc
scas
push
fisubrs
sbb
rcll
or
mov
jl
arpl
push
add
js
ja
sar
jl
lret
fidivrs
mov
sbb
sbb
lcall
daa
xchg
jno
call
mov
adc
push
sub
and
clc
mov
clc
pop
jno
inc
paddsw
dec
lcall
cmp
add
jno
xchg
in
jbe
cmp
ja
jae
xor
pop
pushf
fmuls
jle
dec
sub
cmpsb
enter
repnz
lods
jbe
adc
dec
out
pop
pop
aam
lcall
outsb
test
cmp
cmp
lret
xor
mov
add
sub
pop
popa
adc
xchg
leave
mov
add
insb
add
cwtl
outsl
aam
xor
mov
add
push
add
xchg
mov
sub
sbb
inc
rcl
mov
cld
lods
mov
sbb
scas
loopne
imul
sub
cmp
int3
and
pop
push
and
push
mov
js
mov
in
out
cmp
rorl
out
xchg
lods
adc
ljmp
popa
cmpsl
add
push
in
xor
daa
repnz
add
ret
data16
pop
test
inc
in
mov
mov
fwait
mov
xchg
stos
push
add
lret
loop
push
and
xor
xor
or
rcll
add
cltd
inc
add
jmp
inc
int
inc
and
sub
add
lret
ja
jnp
xor
ja
clc
push
jo
sub
mov
xchg
mov
jg
rcll
loop
lods
mov
aas
int3
xor
lret
icebp
aaa
jmp
push
xlat
sbb
nop
adc
insb
mov
adc
data16
rclb
rorl
rol
pop
stc
sbb
cwtl
or
pop
mov
testl
stos
pop
jb
jb
inc
movsl
adc
dec
push
mov
fwait
mov
push
gs
add
add
xor
fidivrs
jecxz
xor
stos
sbb
rcrb
xor
cmpsl
sub
pop
xor
jecxz
xor
sbb
jg
cmpl
xlat
dec
xor
sub
xor
sahf
addr16
stos
shufps
push
in
cmp
dec
push
test
mov
test
cltd
fbstp
push
loop
mov
fists
mov
fiadds
loope
lds
fcmovne
lcall
mov
mov
out
repz
sbb
les
loop
cltd
sub
aam
pushf
sub
inc
lock
and
push
lahf
mov
lret
test
pusha
das
sbb
push
cmp
pop
fists
mov
insb
stos
out
adc
and
inc
in
jno
cltd
sub
xor
sarl
adc
add
mov
jl,pt
repz
inc
je
lahf
or
push
add
call
push
mov
fldl
int
repnz
sub
stos
jmp
stos
ret
cmp
pusha
out
pop
daa
sub
jo
call
into
or
nop
jp
and
and
cmp
gs
pop
imul
shrl
scas
xchg
and
aad
xchg
xchg
jmp
jmp
adc
dec
xorl
jle
pop
aaa
xchg
cli
or
dec
pop
mov
cs
mov
nop
dec
sahf
cmp
hlt
mov
mov
jne
add
inc
lret
jbe
sub
aad
hlt
lahf
sub
pop
jae
sub
mov
into
dec
xchg
pop
dec
pop
pop
fwait
mov
mov
cld
gs
loop
push
test
and
fidivrs
pop
call
mov
in
or
dec
mov
mov
pop
imul
popl
in
push
sbb
inc
sbb
addr16
push
inc
aam
sbb
or
in
sbb
sbb
int3
pop
repnz
cli
xchg
aaa
loope
fdivs
xchg
push
pop
dec
loopne
dec
outsl
addl
mov
inc
sbb
ficoms
das
adc
cmp
iret
in
mov
push
mov
cld
jg
rcrb
mov
hlt
in
cmp
lods
shlb
in
jle
ljmp
je
insb
adc
sub
lea
addr16
lcall
mov
movsb
iret
jmp
sub
fildll
or
mov
aas
frstor
movsl
ret
sahf
into
ret
jae
or
shrb
decb
cli
out
mov
testb
stos
lahf
repz
jp
mov
pop
xorb
mov
fidivrl
push
mov
adc
sub
loop
lods
cmp
cmp
fadds
pop
lret
sbb
pop
aam
sbb
push
cmp
pop
insb
lock
add
adc
pop
incl
cmp
rcr
xchg
add
add
mov
pop
mov
cmp
adc
and
jle
notb
fstl
popl
inc
sub
mov
adc
dec
repz
mov
xchg
je
xor
jmp
xchg
xor
outsb
data16
addr16
sbb
jge
in
mov
mov
pusha
xchg
call
mov
in
sub
cmp
pop
lock
in
xor
mov
jmp
ja
lea
sub
cld
sub
scas
dec
out
ljmp
and
push
inc
ret
push
mov
mov
cmc
xchg
jo
leave
add
lea
lds
shlb
adc
test
imul
push
add
xor
inc
mov
ret
cmp
jne
test
mov
jecxz
shll
out
pop
cli
xchg
add
push
add
xchg
mov
push
pop
pop
fisttps
mov
jecxz
adc
sub
or
sub
xchg
outsl
outsb
insl
jb
data16
addr16
push
pop
mov
call
scas
or
loopne
push
js
or
aam
sub
push
imul
ret
mov
decl
jmp
in
inc
sahf
clc
jb
mov
sahf
int
adc
hlt
out
sbbb
shlb
push
enter
push
je
inc
jae
sahf
pushf
xor
and
aad
sbb
mov
repz
test
add
pushf
movsl
lcall
mov
mov
lods
push
lret
dec
out
inc
ja
fdiv
inc
or
jmp
dec
das
pusha
fisttpl
pop
mov
divl
add
mov
bound
fcoms
aas
jp
pop
das
mov
sub
in
mov
pop
test
arpl
fsubs
push
mov
loope
adc
sub
lcall
dec
lret
inc
jmp
jl
inc
pop
add
xor
repnz
mov
dec
inc
lret
cmp
add
popf
rorl
sbb
out
movsb
lods
push
popa
sbb
ret
inc
daa
loop
adc
leave
push
inc
push
hlt
or
push
je
jl
sub
iret
rol
xor
push
lods
jecxz
lret
push
xchg
adc
mov
inc
and
mov
push
pop
push
push
pop
out
push
inc
loope
insl
cld
xchg
std
jg
daa
sbb
addl
lods
sub
mov
in
xchg
cmp
cli
repz
or
addr16
adc
jge
xlat
dec
adc
jo
in
add
inc
and
daa
cli
or
arpl
repz
mov
sti
popa
xor
mov
sbb
mov
inc
or
gs
stos
sub
jb
imul
repz
imul
mov
jae
test
mov
cltd
xchg
or
mov
insl
cmc
lods
dec
or
pop
mov
leave
lock
into
pushf
imul
leave
mov
inc
push
add
mov
jno
aam
aad
mov
addr16
inc
mov
jmp
icebp
out
push
repz
mov
fisubl
and
test
pop
sbb
lock
xchg
xchg
movb
lahf
fnstsw
push
or
push
std
sub
fsubrp
xor
dec
loope
mov
xor
xor
inc
xchg
cs
arpl
cs
dec
jb
adc
mov
and
imul
mov
sub
cmp
push
inc
and
jecxz
popa
cli
push
pushf
xor
out
xor
ret
aam
add
and
loop
push
sbb
add
mov
out
sbb
and
inc
aad
jg
jbe
add
mov
lds
dec
mov
mov
dec
cmpsb
loop
nop
pop
cli
movb
stos
jl
xchg
adc
int3
jb
dec
cmp
shlb
mov
push
cmp
ret
in
add
daa
mov
sbb
stos
adc
mov
push
fsts
push
dec
jp
fbstp
mov
les
loop
cmp
ljmp
inc
lcall
add
cltd
arpl
xchg
jge
cmpsb
xchg
mov
and
mov
sub
push
insb
in
xchg
ret
int
and
cs
cmp
mov
in
and
dec
stos
ss
outsb
or
inc
xchg
dec
pop
push
in
sub
inc
adc
mov
mov
jbe
cmp
in
or
cmpsl
mov
inc
mov
imul
in
xlat
aam
aad
popa
test
push
jne
aam
push
or
lcall
add
push
shr
fwait
push
out
cs
mov
jb
and
pop
fs
xlat
sub
jmp
pop
mov
add
or
push
inc
mov
adc
dec
scas
sti
jmp
adc
addr16
or
lret
mov
pusha
xchg
scas
xor
jge
ss
pusha
ficoms
pop
mov
sbb
repnz
sbb
je
add
cmp
lods
push
popa
xchg
in
mov
push
pop
and
sbb
inc
fdivs
and
adc
sbb
jmp
loopne
xchg
push
mov
mov
in
push
cltd
aas
outsb
bound
push
scas
outsl
imulb
clc
mov
dec
outsl
sbb
ljmp
gs
push
and
cmp
fwait
mov
pop
movsl
loope
push
xchg
sub
test
pop
testb
cmc
ss
repz
mulb
scas
mov
scas
loope
shrb
or
test
mov
cmp
xchg
sbb
dec
mov
lods
xlat
aam
mov
rolb
pop
xchg
dec
xchg
inc
mov
cmp
add
test
mov
or
cmp
pop
sbb
jp
insl
sbb
aaa
rorl
push
js
mulb
repz
push
push
test
lea
mov
in
sub
cli
jnp
or
add
and
popa
mov
xor
mov
xor
xchg
stos
xor
pop
inc
ss
lcall
scas
out
add
or
ret
pop
das
arpl
insl
cltd
add
pop
lret
dec
mov
test
mov
xchg
xor
fndisi(8087
cmp
fstpt
and
pop
push
repnz
cmpsl
movsl
aas
test
sub
loope
sub
xor
shrl
imul
cmp
cmp
sub
or
dec
cmpsl
mov
rclb
cmp
loopne
stos
andl
add
mov
shll
sbb
je
adc
and
cs
mov
stc
add
and
mov
push
sarb
fs
push
es
mov
cld
cmp
cmp
out
mov
mov
mov
repnz
cmp
xchg
cli
jnp
cmp
dec
dec
call
push
sub
out
jns
rcrb
cmpsl
rclb
scas
or
iret
cltd
sbb
jnp
loopne
inc
lods
jo
push
inc
mov
xchg
jp
push
push
xchg
pop
icebp
mov
cmpsl
pop
pop
mov
shll
jns
inc
push
xchg
push
cmp
ret
lea
cmpsb
sbb
inc
add
popf
mov
and
sbb
stc
dec
mov
jbe
xlat
and
mov
in
mov
inc
and
std
adc
into
rcll
dec
popa
sbb
mov
pop
data16
les
in
incl
fldl
or
jnp
iret
ret
or
iret
pop
scas
addl
mov
test
mov
cmp
add
dec
mov
sub
mov
gs
sub
adc
mov
imul
or
push
push
out
je
xchg
or
cmp
and
cmp
push
addr16
push
das
shl
cmp
mov
or
dec
pushf
in
iret
faddl
cmpb
pop
jmp
insb
ja
xchg
mov
xor
movsb
ljmp
inc
outsb
scas
stc
add
imul
jmp
sahf
test
mul
mov
add
add
mov
test
cmp
mov
sbb
cmc
adc
add
jecxz
push
mov
gs
shll
cmp
fdivrl
cmp
dec
cmp
popa
movsl
sbb
add
dec
jge
hlt
std
push
push
shl
cmpsb
sbb
push
mov
scas
cmp
fs
loop
push
sarl
insb
dec
dec
rcll
inc
push
or
pop
fistpl
pop
jecxz
xchg
push
pop
xor
xchg
ds
and
daa
pop
pop
cs
out
shrb
notl
mov
insb
inc
mov
out
mov
cmp
sbb
mov
mov
jb
push
js
test
inc
pop
jmp
nop
enter
dec
sahf
outsb
xor
xor
jae
xchg
and
mov
ss
ja
xchg
and
arpl
and
add
in
aaa
xor
cld
loopne
mov
jp
xorb
pop
mov
xchg
sbb
cltd
cmp
std
fisubrs
arpl
xor
mull
adc
pusha
aad
xchg
push
push
andb
adc
jne,pn
mov
enter
xor
cmpl
mov
pusha
stos
clc
add
aas
jbe
pop
test
jp
cli
mov
fstsw
aad
xchg
mov
add
jnp
dec
test
xlat
inc
mov
mov
lret
push
into
ds
and
iret
and
push
lock
arpl
das
shl
repz
and
in
mov
adc
addr16
repz
mov
andb
into
sbbb
or
push
out
cmp
mov
pop
addb
sarl
jb
in
or
insl
rorb
lods
mov
inc
call
addr16
sub
out
popa
sbb
mov
dec
push
xor
sub
lcall
loope
in
jmp
and
fstps
incl
xchg
mov
pop
xchg
and
push
stos
push
in
lds
inc
lea
icebp
mov
mov
and
loopne
inc
div
data16
test
push
mov
int
mov
aam
push
mov
mov
in
lldt
mov
pop
xchg
test
sub
push
test
pop
push
jp
mov
in
popa
lds
out
xchg
out
push
lcall
mov
hlt
push
in
aaa
pop
and
inc
push
lods
dec
das
xchg
daa
popfw
mov
jge
loopne
push
das
or
jl,pn
data16
adc
rorb
pop
push
cltd
dec
mov
shll
ljmp
jp
push
addb
jnp
fstl
push
jmp
notb
mov
in
jmp
mov
mov
lcall
jmp
dec
adc
jecxz
dec
cld
cli
push
mov
movl
cwtl
and
mov
das
inc
mov
inc
popf
lds
mov
dec
adc
sub
inc
mov
fisubrl
inc
lret
pop
jnp
xor
mov
mov
mov
dec
es
repnz
movl
push
aam
pop
sub
jmp
mov
pushf
pop
mov
mov
mov
pop
xor
pop
hlt
mull
sbb
loop
jmp
jg
xlat
test
mov
jle
mov
bnd
mov
dec
add
andb
add
std
pop
cmpsb
test
push
ficoml
es
and
movsl
add
andl
rolb
push
push
push
pop
mov
rcl
iret
push
icebp
mov
add
ss
jecxz
pop
mov
dec
adc
imul
imul
inc
push
mov
xor
fs
scas
dec
ds
adc
aad
cmpsb
outsl
stos
fists
jbe
lcall
jbe
aaa
cmp
xor
pop
xchg
test
pop
sbb
dec
mov
pop
pop
nop
scas
jmp
aas
cmp
add
and
cmpl
out
jmp
fisubs
or
xlat
fldcw
test
loopne
adc
sub
add
lock
dec
ja
mov
std
mov
orb
push
pushf
es
mov
aam
test
push
lods
mov
insb
pop
sub
xor
adc
pop
mov
loope
lret
jl
lea
out
mov
js
mov
ds
pop
adc
jae
push
std
xchg
mov
pop
mov
and
fwait
dec
jb
xlat
and
aas
add
push
mov
mov
cmc
into
aam
jge
cmp
push
or
and
mulb
xchg
shlb
push
ret
add
adc
sbb
xchg
jg
cld
sti
lret
clc
scas
ja
lret
mov
subl
bound
fcomi
fcoms
cmp
xchg
pop
out
leave
mov
mov
jns
xor
xchg
push
jmp
icebp
out
int
test
push
pop
add
ja
loope
mov
pusha
int3
rorb
sbb
jmp
xor
icebp
and
leave
cmpsb
aam
out
in
xlat
mov
popf
sub
or
ljmp
fwait
mov
ja
jmp
xchg
fiaddl
push
push
xor
test
inc
mov
shrl
and
inc
sbbb
ja
pop
repz
and
xchg
push
pop
xor
dec
inc
inc
inc
sahf
mov
and
sub
dec
pusha
mov
xor
shll
mov
add
jae
adcl
test
xor
into
je
insb
and
ljmp
dec
and
push
mov
loopne
les
or
xor
adc
fiadds
movsl
jno
dec
jae
pop
dec
lcall
and
xchg
int
out
sub
int
mov
jl
or
shlb
adc
mov
mov
mov
push
fnsave
cmp
xor
aam
lock
inc
cmp
mov
ds
mov
sub
push
testb
les
dec
add
jmp
push
scas
sub
ja
add
jnp
loopne
in
repz
push
std
sbb
in
cs
xor
xor
add
jae
xor
nop
inc
mov
out
adc
sub
lea
sub
std
pop
lret
cwtl
arpl
xor
insb
and
lods
xchg
es
scas
sbb
fcmovnu
jl
cmp
lock
adc
div
push
dec
mov
jb
push
ror
loope,pt
sarl
pop
icebp
loopne
nop
lahf
lret
jns
scas
xor
mov
mov
jnp
fbld
cmc
js
pop
insl
loope
test
sbb
xchg
sbb
sarb
movb
lret
popa
cltd
push
enter
scas
mov
cmp
mull
jp
mov
dec
in
and
mov
jo
sbb
push
movsl
push
dec
and
fcmove
daa
arpl
xchg
xor
jl
imul
mull
popf
adc
cs
ss
pop
fisttps
sbb
xchg
cmp
bound
daa
adc
inc
xchg
in
gs
cmp
mov
push
out
fs
mov
mov
out
and
es
mov
call
pop
pop
jb
movsb
lock
scas
add
ret
fs
repnz
push
dec
add
mov
inc
lcall
imul
loopne
cmp
imul
xchg
xlat
inc
js
lcall
in
movsl
inc
mov
adcl
cmp
enter
xor
imul
stc
push
cli
in
data16
mov
sbb
add
fwait
sub
loope
pop
jno
scas
fstl
bound
inc
and
add
mov
inc
aad
and
lea
repnz
popf
jl
mov
js
mov
xor
and
ljmp
insb
lock
testb
nop
aaa
pusha
xchg
jge
gs
jmp
bound
sarb
mov
pop
mov
add
movl
sub
jb
sti
lock
pop
sbb
in
fbld
inc
mov
dec
adc
sahf
cwtl
ds
test
lahf
arpl
arpl
or
jns
popa
and
rorl
add
aas
mov
int3
shlb
data16
push
popf
clc
jae
mov
lods
cwtl
cwtl
dec
daa
mov
shll
leave
imul
sub
mov
dec
and
jecxz
test
cwtl
and
push
xor
cli
es
jmp
push
arpl
stos
sub
dec
fildl
jnp
jne
insl
mov
mov
mov
call
cmp
inc
mov
cmp
iret
es
and
push
imul
nop
mov
xchg
enter
sahf
pop
and
add
inc
out
adcb
and
xlat
xchg
jl
xchg
out
xor
inc
or
adc
xchg
push
sahf
cmc
xor
in
jns
scas
loopne
push
jb
or
add
sarb
divl
cmp
and
mov
jne
cs
xor
aam
lea
pop
xor
fidivs
js
test
sub
pop
jp
sar
mov
xchg
or
mov
mov
pop
lahf
sub
and
adc
cmp
iret
lret
fstl
stc
lret
and
cmp
adc
push
inc
cmp
cmp
mov
jg
loop
imul
mov
frstor
out
mov
add
jbe
test
mov
cmp
sub
sub
out
cld
ret
pop
mov
shrb
dec
mov
les
and
movsb
mov
aaa
repz
cld
push
fildl
lea
scas
in
insb
in
xchg
out
and
int3
add
mov
repnz
mov
cwtl
xor
sub
jbe
scas
mov
and
test
dec
push
mov
stc
rorl
cmpsl
outsb
xchg
mov
clc
mov
sarb
jge
inc
mov
pop
bound
dec
and
icebp
cmc
dec
cmp
pop
std
aas
fsts
sub
cs
sbb
sub
xorl
and
inc
and
imul
je
fdivl
inc
cmp
ret
jb
gs
rcrb
ljmp
cmp
xchg
das
fsubrs
cmp
out
testl
jbe
push
jecxz
pop
int3
mov
push
hlt
pop
and
jbe
cmpsb
cmp
addr16
aaa
sub
outsl
jnp
push
adc
loopne
jbe
adc
pop
xchg
frstor
pop
dec
popf
inc
push
repnz
add
mov
dec
pop
dec
mov
adc
fisttpll
or
dec
cs
ja
mov
sbb
pop
mov
aaa
inc
in
int
daa
mov
and
rorb
jne
add
call
aaa
or
xchg
adc
cld
inc
xchg
push
push
jle
fwait
sub
push
mov
lods
push
mov
mov
mov
mov
mov
jp
in
cltd
js
lcall
pop
mov
sbb
adc
mov
pop
jmp
sbb
and
insl
popa
mov
std
adc
mov
mov
shlb
and
and
mov
pop
mov
or
pop
leave
dec
fadds
or
mov
enter
push
mov
pusha
shrl
xchg
lods
rorl
xchg
push
xor
xor
dec
daa
jnp
mov
call
cmpsl
call
psubd
add
mov
inc
jmp
add
push
repz
or
test
inc
mov
jecxz
cmp
add
fisttps
jecxz
outsl
jg
outsb
pop
mov
sbb
xchg
call
mov
sbb
leave
pop
sub
aam
in
ljmp
pop
xor
hlt
mov
sbb
test
mov
mov
imul
loopne
pop
aaa
jge
mov
jl
js
sbb
jg
sbb
mov
push
subl
mov
mov
mov
leave
or
ja
cmp
sti
addr16
lcall
or
ret
and
clc
jecxz
jno
inc
daa
je
fisubl
arpl
bound
adc
mov
adc
jmp
pop
repnz
popf
or
mov
lret
mov
add
push
jbe
enter
std
aaa
xchg
cmc
jp
sbb
sbb
add
dec
adc
sub
jns
les
adc
popf
loopne
leave
jnp
push
push
mov
hlt
test
daa
aas
iret
add
cmp
mov
movsl
out
pop
mov
fwait
dec
jge
mov
adc
mov
push
fcoms
fndisi(8087
mov
sbb
ss
sbb
inc
xor
fildl
and
add
mov
cmp
dec
shlb
shlb
dec
jo
aas
fistps
call
fmuls
into
inc
fmuls
pop
cltd
push
shr
xor
mov
add
loopne
push
out
push
mov
cmp
mov
and
dec
imul
sub
mov
mov
inc
mov
scas
cmp
or
aas
push
in
inc
js
xlat
or
push
gs
and
mov
fldt
testl
pop
jmp
add
scas
push
lds
int
clc
test
in
fmull
shlb
pop
mov
insl
call
outsl
mov
mov
sub
pop
pushf
les
movsb
or
out
hlt
pop
or
in
lods
ds
lret
iret
rcl
xchg
push
xchg
in
cmp
popf
rcll
mov
sbb
xchg
mov
fisttps
or
outsl
mov
cmpsb
adc
sahf
push
xchg
push
cmc
ss
cmp
call
mov
bswap
or
mov
movsb
test
jecxz
ja
iret
xchg
adc
jg
xchg
xchg
sub
icebp
pop
add
imul
and
pushf
sti
jae
lds
mov
xchg
push
add
into
jb
addr16
sarb
dec
push
int
mov
inc
in
mov
andl
push
insb
add
and
clc
pop
adc
xor
pusha
out
ljmp
cli
repz
dec
mov
fst
sarb
jne
pop
ror
test
cmp
sub
es
loope
add
into
pop
pop
cltd
out
lret
pusha
adc
in
cmp
ret
std
out
xorl
mov
pop
pop
xlat
inc
and
and
cmp
and
enter
gs
ficompl
fimull
dec
push
lods
xor
adc
cmpsb
pop
inc
mov
xchg
mov
pop
test
pop
adcl
fbstp
xchg
fsubs
sub
cld
je
outsl
aam
mov
mov
mov
arpl
fnstenv
mov
loope
mov
and
inc
and
mov
mov
pop
shrb
notl
dec
mov
das
lahf
sub
into
pop
sub
pop
jo
mov
xor
jo
pop
pop
fadds
and
out
rolb
push
xor
fs
xchg
lret
dec
adc
das
insl
dec
xchg
shrb
xor
loopne
pop
dec
or
sbbb
inc
push
pop
loop
clc
jecxz
scas
insl
dec
sbb
ja
movsl
in
jnp
mov
ds
pop
xchg
pushf
dec
sbb
test
or
inc
movnti
cli
mov
mov
xchg
adcb
mov
mov
or
ret
add
sub
jnp
inc
pop
sub
sbb
addb
pop
enter
add
or
mov
fwait
add
xchg
lea
inc
sahf
mov
pop
dec
mov
inc
arpl
stos
adc
cld
dec
cmp
addr16
je
je
mov
dec
mov
mov
popf
sub
mov
and
dec
jno
xchg
lcall
jmp
add
scas
cmp
aam
lahf
jl
fmuls
xor
sbb
xor
pop
pop
cmp
jb
jae
mov
scas
shll
ret
and
jg
scas
popf
cwtl
ds
scas
mov
cmovs
sub
mov
pop
pop
popf
sub
or
lret
out
cli
inc
sub
fadd
jge
or
clc
cli
cld
clc
shll
mov
xchg
loopne
and
jecxz
adc
xchg
pop
pop
sbb
mov
push
aam
cmp
out
imul
test
jmp
dec
fcompl
idiv
mov
movsl
lods
fidivs
mov
popfw
pop
popf
lahf
inc
and
xchg
xchg
mov
clc
imul
jb
and
out
inc
fldt
sub
xor
aam
sub
fdivr
leave
adc
adc
repz
ljmp
mov
pop
nop
adc
pop
enter
xlat
jp
in
xchg
add
add
add
cmp
add
test
in
sbb
push
pop
in
adc
adc
add
ds
push
mov
push
iret
js
mov
int
mov
lahf
inc
and
jmp
pop
insb
in
lea
stos
sbb
mov
xchg
jecxz
jg
mov
shl
mov
mov
and
jmp
into
dec
shr
mov
addr16
mov
dec
ds
jl
je
clc
sbb
jg
fs
jno
jmp
fucomp
repnz
lock
mov
ja
mov
mov
sti
or
push
jnp
add
and
addb
push
pop
mov
add
ret
jg
nop
add
inc
mov
pop
mov
or
sarb
add
and
pusha
out
addr16
movsl
out
sub
inc
data16
push
xchg
cmpsl
mov
pop
cmc
push
out
pop
cmpsb
ret
inc
sub
cmp
mov
cmpsl
lock
insl
lds
dec
cmp
adc
dec
xor
lea
xchg
sub
aam
mov
dec
sub
je
dec
mov
arpl
out
into
or
xchg
xchg
push
sbb
sbb
out
fistps
push
in
mov
adc
jecxz
ficomps
pop
or
xchg
or
push
add
sub
push
sub
mov
mov
cmp
lea
aam
ret
sub
ds
push
xor
mov
mov
push
sub
stos
pushf
sbb
cwtl
jmp
repnz
fcomps
xor
pop
push
cmp
inc
push
mov
cmp
lret
pop
mov
xor
inc
stos
xor
add
mov
nop
jns
push
pop
insl
add
mov
cltd
pop
cmpsb
dec
roll
xchg
mov
mov
mov
loope
xor
imul
stos
test
mov
pop
pop
pop
repz
movq
xor
daa
and
or
test
cmp
int3
lcall
jbe
insb
loope
adc
dec
cwtl
subb
imul
mov
jb
sti
aaa
jnp
pop
sub
frndint
pop
stos
sbb
mov
mov
sbb
fs
sub
lret
cmc
and
imul
xor
sti
xchg
pop
lret
sbb
fdiv
jno
push
out
popf
sarb
test
adc
fcoms
mov
outsb
push
je
cwtl
lret
xlat
jb
pop
nop
lods
shl
stc
adc
inc
mov
lea
mov
jno
mov
enter
sub
mov
jmp
inc
xor
imul
imul
imul
mov
mov
repnz
jmp
xlat
test
jge
inc
pop
aad
mov
outsl
loopne
fs
xchg
mov
jmp
cltd
push
cld
out
loope
cli
fwait
gs
test
mov
leave
js
shrl
jle
xchg
inc
xor
loopne
hlt
stos
test
adc
xor
gs
pop
int3
mov
pop
and
imull
bound
pop
inc
push
jnp
jnp
movsl
add
or
ret
pop
out
cmp
repz
dec
sbbl
inc
mov
xchg
testb
aad
sbb
dec
dec
xchg
inc
lea
mov
adc
popa
test
dec
test
aas
inc
mov
cmc
inc
ljmp
or
xchg
push
xchg
in
or
mov
popf
dec
or
cmc
adc
push
jae
xchg
insb
cmp
pop
mov
jae
ret
lods
fcoms
push
push
jbe
xchg
iret
pop
pushf
jp
mov
sti
add
icebp
rcrb
push
push
mov
or
xor
cmpsl
xchg
mov
fdivrp
in
push
idivb
aas
cltd
fcmovne
mov
fcoml
loop
pop
dec
sub
sub
cmp
mov
mov
add
dec
sub
addl
cmp
sahf
sbb
mov
shlb
mov
pop
mov
adc
and
pop
mov
movd
mov
jl
jl
leave
inc
repnz
pop
xchg
add
add
out
pop
pop
add
mov
sub
jno
ljmp
ljmp
sbb
inc
repz
push
dec
in
insb
flds
movb
jno
or
and
push
lret
mov
pop
andb
dec
push
add
or
pop
fwait
aaa
lret
lods
push
into
out
jecxz
in
add
pushf
add
pop
sub
xchg
add
aas
fidivrs
mov
pop
add
mov
jl
sbb
bswap
xor
xchg
mov
das
sbb
stos
lret
mov
mull
xor
ja
mov
pusha
xor
jge
ret
xor
outsl
cmp
mov
or
jns
into
and
xor
or
cld
cmp
leave
lahf
mov
out
test
scas
push
push
fdivs
mov
jl
scas
shr
aaa
or
pop
adc
stos
pop
cwtl
andb
rcl
or
aad
add
pop
jle
dec
sub
and
sub
push
std
stos
lahf
mov
cmp
xchg
fisubrl
cs
push
cld
insl
das
jg
sahf
push
sarl
or
pop
fdivs
pop
mov
mov
push
cmp
mov
sbbb
mov
ds
gs
ss
test
adc
movsb
lret
leave
add
mov
in
sub
xor
lods
out
int
out
and
xchg
push
dec
xor
jp
mov
inc
and
negb
test
mov
gs
repz
pop
mov
hlt
and
push
xchg
repz
xor
ds
repnz
sbbl
lock
fwait
mov
pop
sbb
dec
imulb
sbb
sbbb
pop
arpl
push
stc
adc
jbe
sbb
fsubrl
inc
jbe
arpl
cmp
loopne
push
jb
cmp
mov
mov
xor
mov
add
mov
mov
stos
out
push
jmp
in
test
cmpsl
jmp
in
jae
test
lock
inc
test
mov
push
pop
mov
movb
shl
cmp
fisttps
cmp
idivl
sub
jbe
lds
lret
pushf
cmc
lahf
aaa
ljmp
shl
sahf
fwait
dec
hlt
mov
int
icebp
mull
xchg
pop
in
inc
pop
hlt
outsb
jbe
fdecstp
fcomps
das
cli
xchg
adc
or
icebp
sub
jle
aaa
jbe
les
sbb
imul
out
jbe
cmpsb
enter
fs
divl
ljmp
ss
arpl
inc
ficoml
jl
inc
mov
cmp
imul
add
test
and
jle
mov
sti
lret
imul
mov
bound
jge
aam
mov
mov
aam
pusha
cmpsb
fnstcw
dec
inc
aaa
pop
into
das
rcrb
jb
stos
mov
push
cmp
or
test
inc
jbe
es
or
mov
cmp
mov
sub
fucomi
les
iret
les
and
jnp
lock
cmp
mov
xor
sbb
inc
imul
jle
xchg
lock
es
imul
loope
movsb
pop
push
cmp
push
mov
add
sbbl
xchg
jmp
sub
add
sub
jno
push
ss
leave
sarl
sbb
mov
mov
lods
sub
pop
data16
in
or
daa
adc
das
ss
mov
xchg
jne
mov
jmp
sub
sbb
jno
shlb
mov
lcall
gs
stos
fcoms
rcrl
cmp
imul
mov
cmc
push
stos
mull
pop
addr16
sti
cmp
xor
mov
mov
dec
dec
inc
cwtl
xor
hlt
push
daa
push
mov
inc
dec
sbb
ss
movl
pop
xchg
push
pop
sub
gs
outsb
dec
jno
mov
scas
mov
cmp
mov
imulb
cmp
imul
sub
cs
pop
add
out
paddsb
add
pop
repz
into
xchg
aad
add
mov
dec
jg
aaa
scas
out
sti
or
cs
repz
xchg
jo
mov
adc
aam
jmp
out
inc
mov
lods
lahf
stos
mov
fs
lods
or
test
loop
push
inc
xchg
inc
rcr
add
data16
mov
dec
xor
mov
addl
sub
jb
add
jmp
add
xchg
push
lds
leave
cmp
xchg
mov
or
push
push
xor
stos
xor
movsl
cld
mov
out
into
pop
in
mov
imul
int
out
bnd
lcall
stc
and
inc
adc
inc
dec
mov
leave
lods
adc
lods
pop
cltd
fbstp
pop
fxch
mov
add
aas
cltd
jp
in
mov
mov
adc
mov
jnp
push
sub
inc
in
mov
int3
mov
add
bound
std
loopne
push
xchg
hlt
movsb
pop
lcall
popa
xlat
sbb
dec
mov
adc
jle
inc
dec
rol
movsl
je
inc
es
xor
or
rclw
sbb
sbb
xorl
test
stos
lods
cmove
xchg
or
push
jnp
sbb
imul
xor
xor
sub
das
in
pusha
rorb
xchg
bound
shl
lock
inc
and
sbb
lret
enter
pop
or
lret
in
loop
mov
movsb
outsb
nop
sbb
rcrb
or
sti
pop
pop
sbb
push
pop
sbb
fmul
jp
add
add
aam
fistpll
xor
adc
mov
pop
push
jmp
mov
sahf
xchg
imul
mov
mov
lahf
ds
and
scas
aam
in
push
js
jnp
dec
jmp
pop
les
ret
jno
ja
pop
divb
xor
mov
and
xchg
mov
adc
aam
lods
or
xor
push
inc
mov
out
mov
mov
insl
pushf
pusha
fdivl
pop
aaa
push
mov
lods
adc
xchg
jnp
cmc
jle
rclb
orl
popf
icebp
orl
push
mulb
and
aad
inc
xchg
adc
aaa
push
lds
mov
icebp
mov
stos
push
clc
xchg
cmp
mov
cmp
lods
lcall
xchg
loopew
insb
or
repz
add
into
iret
outsl
jl
das
xor
lret
sbb
jo,pn
sub
dec
imul
jnp
int
sbb
test
add
inc
mov
cmp
in
std
je
lock
and
xor
inc
push
pop
add
imul
and
mov
or
pop
aas
stc
push
lret
test
aaa
enter
ja
jl
ja
mov
bound
cmp
repnz
xor
xchg
out
fistl
mov
push
add
rcll
rcll
sbb
filds
sub
mov
mov
scas
xor
imul
in
into
aad
pop
in
dec
jbe
loop
fstpt
adc
mov
jg
lock
pop
inc
rorl
shr
decb
lods
dec
fwait
into
jne
subl
push
adc
mov
pop
push
jecxz
pop
inc
push
and
outsb
jmp
aas
sbb
adc
sub
hlt
insb
adc
mov
out
roll
xchg
xchg
call
lret
dec
loop
andb
les
sbb
das
lret
jl
jecxz
xchg
adc
push
ja
in
mov
repnz
std
mov
pop
adc
adc
and
scas
jecxz
mov
in
ja
mov
adcl
ret
icebp
jae
aaa
clc
out
test
imul
pop
pop
xchg
nop
lret
outsl
xor
mov
xchg
shrb
cld
and
cmp
syscall
and
or
movsb
in
pop
or
pop
dec
cmp
aam
mov
das
jns
call
mov
sub
inc
mov
sahf
lock
cmpsb
scas
push
cmc
in
lods
inc
or
test
cmpsl
mov
cmp
jno
jecxz
lea
push
sbb
xor
mov
mov
lcall
xchg
pop
xchg
pop
outsb
inc
xchg
push
sub
xchg
fcomip
inc
push
and
xor
or
incl
stc
and
lret
mov
xchg
mov
cmpl
inc
pop
lcall
mov
xor
or
out
lret
call
pop
std
pop
repz
jae
jnp
or
imul
mov
lods
cmp
cmp
push
fucomip
and
push
aaa
cltd
and
test
pop
into
pop
lcall
fs
jmp
add
aas
xchg
and
sbb
mov
in
shrb
mov
fadd
push
enter
pop
xlat
test
sub
cmp
and
xor
insb
mov
inc
inc
push
mov
cld
cs
and
and
add
lea
aam
mov
cmpsl
add
je
addb
fnsave
jle
aaa
xchg
or
incl
or
push
pop
dec
divb
mov
loop
sub
jae
pop
lret
shlb
inc
pushf
sub
aam
sbb
lock
sub
jns
imul
sti
ret
add
icebp
hlt
inc
dec
fildll
push
add
sub
xor
roll
mov
stc
jg
push
jb
inc
shrl
jbe
sti
jb
jge
mov
cltd
or
repnz
push
iret
sub
cmp
dec
fbld
jno
and
mov
hlt
add
adc
inc
int
sarb
mov
or
out
dec
fbld
push
lods
in
sahf
lock
jns
sub
jmp
repnz
popf
jecxz
push
int
or
inc
rdtsc
and
ds
mov
inc
adc
fstpt
xchg
daa
cmp
jno
xor
je
cmp
ret
mov
popf
and
clc
and
push
cltd
xor
daa
lock
adc
jae
xchg
jae
dec
jl
aad
adc
xchg
pushl
hlt
sbb
jmp
fneni(8087
ja
bound
xchg
inc
sub
fidivrl
inc
jb
xchg
sti
mov
sahf
insl
dec
shll
mov
xchg
dec
jmp
xor
pop
leave
xor
and
aaa
mov
dec
shr
xor
xor
jne
faddl
mov
cmp
imul
dec
mov
adcb
push
sbb
sub
inc
or
pusha
or
xor
jp
lock
jp
stos
jge
ljmp
imulb
xchg
sbb
mov
inc
cmp
mov
xchg
jp
xlat
sub
sbb
adc
add
daa
inc
sub
and
aad
adc
mov
dec
fsts
jge
out
pop
pop
sub
imul
push
repnz
loop
out
jnp
sub
sbb
sbb
pop
sub
xchg
sbb
ret
xor
xor
ss
mov
adc
lock
pop
fdivrp
js
sbb
mov
xor
inc
daa
out
popa
in
or
fildl
or
repz
jb
lds
mov
sbb
stos
xchg
shlb
inc
sub
cs
ss
clc
mov
out
es
scas
inc
sub
in
js
stos
mov
inc
mov
and
scas
hlt
call
mov
pusha
jg
loopne
adc
jmp
inc
fs
int3
jge
xor
int
push
pop
push
lods
mov
mov
aas
sbb
cld
stc
jae
mov
adc
cmpsl
push
inc
cwtl
jns
add
push
or
pop
aas
jnp
sbb
mov
dec
std
and
aaa
cmp
push
dec
stos
lods
cs
out
or
insb
insl
jb
pushf
jae
pushf
add
enter
xchg
mov
cmp
jl,pt
jge
mov
cmp
pxor
aaa
in
add
mov
popa
int3
rep
icebp
dec
xchg
mov
pop
hlt
jae,pn
xchg
stc
test
pop
enter
ss
jmp
push
jge
sub
test
xor
fcomp
fiadds
mov
sbb
sahf
lret
xchg
inc
mov
ret
lds
ljmp
mov
push
dec
cmpsl
lahf
js
scas
lds
lret
popf
shl
mov
mov
bound
mov
xchg
stos
cmpb
add
jg
mov
push
std
push
mov
xchg
cmp
aam
xchg
mov
mov
or
lcall
jb
dec
push
cmp
fwait
or
push
loopne
lock
in
add
pop
add
mov
movsl
mov
pop
mov
pop
xor
in
mov
cmpsl
pop
scas
xchg
je
mov
jmp
std
imul
cld
pop
jge
sti
fistl
cmp
scas
das
push
push
das
fdiv
sbb
loopne
ds
stos
cmpb
std
mov
test
inc
dec
jecxz
cmpsl
dec
das
push
mov
nop
mov
sub
mov
pop
and
adc
sub
fimuls
xorl
repz
mov
mov
push
lret
popf
out
mov
cmc
inc
roll
xchg
nop
stos
lcall
jbe
call
sbb
cmp
jbe
lods
jbe
push
sub
jle
arpl
cli
dec
push
cmp
xor
xchg
outsb
jno
lahf
push
cwtl
pop
subl
in
pop
into
adc
icebp
movsb
mov
mov
adc
pmuludq
in
fwait
jp
pop
cli
lds
or
adc
popa
clc
dec
lds
xor
sbb
xchg
stc
call
push
testb
iret
push
cmp
in
xor
dec
in
and
or
adc
movsl
xlat
fbld
es
push
fcoms
outsl
pop
inc
test
mov
sub
icebp
adc
add
fs
in
and
pop
out
pop
xlat
or
xor
fidivrs
ss
jmp
sub
sti
scas
xstore-rng
cmpsl
xchg
adc
xchg
mov
push
pop
mov
std
jge
mov
jge
pop
shrb
jp
sbb
dec
cltd
jg
pop
xor
sbb
stos
out
mov
add
movsl
outsl
xchg
push
xlat
aas
cmpsb
inc
in
jns
mov
inc
pop
dec
ret
jmp
xor
inc
sbb
aaa
jle
pushf
stos
lods
xchg
or
mov
push
mov
mov
out
aaa
stos
or
sub
aas
pop
mov
add
xorl
inc
dec
sarb
cli
clc
xchg
ds
lret
loopne
loope
mov
sbb
mov
mov
lcall
and
mov
push
mov
fwait
sahf
shr
pop
lea
dec
into
cmc
aad
jnp
leave
imul
sti
sub
out
clc
popf
jns
test
push
cmpsl
mov
fnstenv
out
mov
cmp
mov
and
sub
jo
nop
repz
mov
or
rcrb
pop
pop
cmp
inc
cmp
sub
aad
cli
leave
je
insl
dec
mov
sbb
dec
push
inc
iret
sbb
out
leave
add
mull
lods
lods
test
inc
or
sub
sti
push
sub
push
jb
in
mov
clc
jbe
add
jns
sub
xchg
sub
idivl
jl
outsl
mov
cmp
jg
jp
movl
adc
xchg
int3
xor
pop
cwtl
or
bound
ficomps
fs
mov
add
pop
xlat
mov
adc
dec
in
mov
fcomps
in
test
call
jno
or
cmc
pop
mov
adc
test
sar
fsubrl
arpl
aas
fmul
test
popa
dec
mov
mov
int3
movl
das
xor
xchg
add
jbe
xor
aam
sti
insb
int3
jecxz
cmc
in
push
xchg
notl
inc
aam
ljmp
mov
std
ss
xchg
bound
dec
int
xor
je
gs
xlat
fwait
imul
sbb
lock
pop
outsl
jle
jl
jmp
cmc
and
jbe
jmp
loop
aaa
les
xchg
lds
lods
jb
push
push
jae
dec
in
sbb
push
test
cli
sbb
pop
cmpsl
fcmovnbe
iret
cmpsl
sbb
xchg
aam
loope
call
pop
lret
mov
xor
and
lret
dec
sub
adc
jne
xor
xor
ds
xor
ds
or
imul
in
sub
subb
test
stos
nop
pop
inc
xor
sbb
jno
test
aas
pop
ret
lret
enter
push
cli
sub
fdiv
adc
in
pop
movsb
or
mov
outsl
dec
dec
and
jno
cmpsb
jbe
xchg
jns
fiadds
jg
jecxz
xor
or
sbb
mov
pop
insw
stc
int
in
mov
mov
cld
jmp
add
test
and
repnz
add
ficoms
mov
gs
jmp
stc
push
xchg
sub
push
cmpsl
mov
sbb
das
mov
pop
or
dec
inc
hlt
ret
push
nop
lods
and
adc
inc
and
cmc
gs
ljmp
arpl
push
mov
push
jns
or
push
mov
mov
pop
iret
cli
jbe
test
cmp
pushf
pop
fldln2
jbe
xor
repnz
es
insb
clc
mov
insb
pusha
mov
cltd
push
pop
jg
rcr
bound
call
pop
jge
mov
xlat
leave
inc
lret
or
cmpsb
and
mov
aad
dec
mov
jp
inc
xchg
push
loop
sub
aas
mov
test
pop
fwait
jbe
and
and
xchg
sbb
ljmp
loop
adc
pop
stc
or
xlat
mov
mov
fmull
fdivrs
xor
sar
cltd
sub
mov
stc
fistpll
cmc
sbb
fsubl
push
movsl
mov
lahf
cs
xlat
inc
pushf
xor
cmp
push
mov
adc
dec
shl
mov
popa
lcall
push
xorl
xchg
stos
testb
adc
sub
xchg
fsubr
push
jmp
pop
stos
nop
and
push
fldt
mov
jle
mov
cmp
sbb
push
aas
arpl
pop
mov
hlt
iret
or
das
cmp
int3
jle
ja
aaa
decb
stc
adc
dec
or
mov
jb
cmpb
push
push
and
arpl
cmp
leave
iret
sub
push
insb
add
and
call
jnp
aaa
cld
repz
adc
in
popf
shrl
jne
jno,pn
imul
or
pushf
popa
xor
shr
fldenv
repz
sbb
inc
cltd
loope
mov
mov
xchg
mov
movl
jle
imul
js
jg
mov
lock
lcall
adc
mov
enter
sarb
das
ds
test
mov
addr16
sub
jl
icebp
lret
xchg
lcall
or
popa
fldcw
dec
daa
mov
lods
cld
sbb
mov
push
sub
adc
lods
add
cld
xchg
jge
pushf
mov
jmp
fwait
lock
xor
and
sbb
call
xor
jp
enter
or
call
push
inc
cli
jecxz
test
dec
mov
mov
cmp
mov
cmp
test
dec
jno
movsl
mov
fs
xor
xchg
xor
fbld
addl
cmpsb
add
jb
out
fadds
push
arpl
in
mov
aaa
jno
jnp
pop
jge
mov
adc
pop
xor
or
cmp
ret
pop
cmp
lds
push
sbb
out
inc
movsb
add
mov
scas
jnp
pop
aad
ret
imul
xlat
jl
inc
inc
je
adc
dec
xchg
shlb
adc
mov
out
dec
cwtl
outsl
push
cs
or
mov
mov
mov
popa
push
sub
sub
jp
mov
cmp
mov
push
add
scas
and
mov
outsl
loop
cmp
js
pop
gs
int
imul
loop
es
mov
sbb
and
adc
adc
orb
xchg
jmp
push
fildll
sbb
jbe
scas
pop
jne
popa
xchg
roll
sub
flds
mov
mov
inc
stc
cmp
decb
xor
pusha
subb
dec
mov
popa
into
cmp
fcoml
cmpsb
adc
repz
scas
lahf
cmp
mov
notb
mov
hlt
inc
add
mov
shrl
and
aas
xor
and
int3
or
scas
adc
rcr
fs
add
cmp
rorl
xor
sahf
jmp
xchg
push
lock
jns
int
iret
bound
ret
mov
cmp
nop
aaa
dec
and
add
insb
mov
pusha
or
les
or
das
xor
aas
cmp
cbtw
inc
lret
cmp
and
test
adc
cli
pop
repnz
outsb
add
loope
mov
add
sbb
xchg
mov
mov
orl
jmp
nop
icebp
xor
add
xchg
icebp
or
cmpsl
inc
and
loope
dec
and
int3
xchg
in
cmp
pop
mov
sub
arpl
or
sub
xor
inc
push
std
jnp
push
mov
int3
or
test
sub
gs
into
mov
mov
pop
adc
sbb
out
mov
aad
lret
insl
pop
stos
or
fwait
aaa
cld
test
popa
aas
mov
xor
movsb
inc
mov
hlt
lcall
lcall
xor
shll
inc
in
ret
scas
into
test
add
dec
ret
fwait
loope
or
or
lea
sbb
adc
out
idivl
xor
sub
movsl
fistpll
pushf
push
out
inc
jae
mov
aaa
aam
and
pushf
mov
out
push
adc
in
xor
imul
fsubs
push
fcomip
stos
xor
test
rorl
movsb
imul
pop
sarl
fsubs
sbb
cmp
sub
sbb
xchg
iret
pop
popa
cltd
cmpsb
loop
adc
arpl
into
imul
push
sti
ja
push
add
clc
cmp
jp
xchg
sbb
fadds
stos
arpl
push
adc
mov
push
pop
cld
in
sbb
mov
inc
xchg
leave
sti
sub
adc
jg
cmp
xchg
sub
lods
call
dec
jno
or
jbe
adcb
mov
mov
je
rorb
mov
cwtl
frstor
mov
cmpsb
sub
xchg
outsl
mov
inc
dec
test
mov
jbe
popf
rcl
std
mov
inc
cmp
dec
test
fisubl
dec
mov
outsb
in
leave
dec
dec
into
fstpt
xlat
mov
sbb
repnz
aaa
pop
call
mov
inc
sbb
or
pop
add
in
fs
movsb
lods
push
sti
inc
roll
and
mov
dec
or
and
int3
cmpsl
loope
fadds
fildll
dec
adc
in
mov
and
jle
push
out
cmp
mov
jmp
jmp
push
and
ds
out
pop
dec
mov
mov
fldl
dec
jb
pusha
push
inc
flds
loope
cli
dec
or
mov
loop
movsb
incb
and
inc
mov
lahf
rolb
dec
ja
adc
xchg
mov
fnstcw
push
lods
dec
and
insl
es
shll
push
jle
movb
popf
mov
add
mov
jo
mov
rolb
lods
dec
pop
xchg
mov
xchg
fadds
scas
test
mov
shrb
movsb
mov
lock
dec
shlb
push
negl
dec
sbb
or
dec
sub
cmp
fcompl
mov
insl
mov
stos
ss
jns
cli
adc
or
das
dec
cmp
scas
xor
imul
les
cmpsl
pop
add
pop
xor
nop
lret
adc
dec
cmp
pop
or
push
aas
bound
mov
jle
push
adc
xchg
in
lds
jmp
adc
into
inc
neg
dec
stos
mov
jnp
sbb
inc
and
test
jnp
add
in
call
xor
lods
and
ljmp
mov
and
in
scas
rorb
mov
in
mov
les
add
stos
xor
xchg
jge
les
std
add
fs
mov
sahf
and
mov
test
aaa
cld
les
sbb
and
cmp
mov
mov
pop
ja
inc
jno
dec
fucomp
push
pop
fnsave
push
dec
or
enter
add
mov
or
sbb
call
dec
cmc
call
or
add
cmp
and
popa
jge
cmpsl
mov
stos
mov
loope
sbb
js
inc
xor
xchg
sti
dec
sahf
imul
jb
shlb
or
adc
popa
mov
inc
ss
out
popf
sbbb
fincstp
jl
lcall
cld
scas
imul
out
push
fwait
les
in
sbb
cmp
mov
and
add
and
repz
loop
std
pop
rol
dec
push
add
xchg
cmp
mov
mov
fucomi
mov
test
stos
insl
outsl
in
fistpl
inc
mov
xchg
pop
in
xor
pop
imul
add
mov
test
pop
or
push
sbb
cmp
lods
cmp
sbb
pop
mov
push
jmp
push
repnz
cmpsb
push
lahf
or
dec
jg
jmp
jp
dec
aad
dec
mov
xor
push
iret
mov
or
and
scas
inc
ljmp
sub
out
ret
mov
xor
sbb
sbb
hlt
js
jp
inc
and
pop
test
mov
scas
push
mov
sub
into
jg
jp
xor
aaa
jp
adc
pop
mov
mov
mov
inc
lock
arpl
sbb
pop
add
shlb
xchg
pop
pop
movsl
jecxz
loopne
cmpsb
ljmp
sbb
pop
pusha
mov
pusha
cmp
fcoms
test
fwait
pop
xor
iret
sub
adc
pop
pop
mov
dec
xor
cmp
or
mov
jecxz
inc
int
aad
outsl
std
jge
movsb
lock
fcomps
xor
sub
mov
mov
lahf
mov
movsl
xchg
cmp
stos
pop
push
sbb
mov
pop
and
stos
mov
pop
mov
dec
ljmp
push
in
adc
xchg
adc
dec
xor
hlt
test
repz
mov
test
lret
das
stc
scas
push
notl
xor
push
ljmp
loopne
xlat
js
pop
iret
aaa
cmp
push
jl
or
cld
test
std
aam
add
rcrb
lret
inc
mov
add
testb
or
fcompl
rolb
and
std
subl
imul
add
push
pop
addr16
xchg
push
enter
push
icebp
clc
inc
push
enter
jns
sahf
add
aad
mov
loopne
scas
test
testb
ret
xor
neg
push
fimuls
push
dec
xchg
pop
ljmp
push
out
or
push
jl
pop
push
out
inc
mov
push
sbb
and
inc
fcoml
in
inc
mov
std
lds
push
mov
or
insl
rorl
andb
notb
out
mov
push
es
pop
cli
sbb
insb
xor
or
fisttpll
test
insl
sbb
in
call
test
mov
cli
cmp
xchg
mov
rorl
add
fwait
lock
inc
mov
dec
adc
shrl
mov
sub
iret
jmp
outsb
aam
fsubl
insb
call
xchg
mov
inc
xor
jl
dec
lds
cmp
pop
sarl
pop
sub
push
mov
ljmp
push
pop
ds
mov
xchg
orl
lret
cld
jo
nop
sarl
xchg
data16
fistpll
movsb
das
cmc
insl
test
sub
or
je
nop
aad
filds
add
sbb
fisubrs
scas
stc
mov
scas
mov
sbb
fsubl
rorb
jbe
xchg
pop
imul
sahf
dec
sbb
jle
jl
jp
faddl
call
enter
pop
clc
jb
inc
ja
fbld
lcall
xchg
cmp
clc
sub
and
and
daa
das
cmp
call
mov
in
aaa
fwait
sbb
xor
cwtl
insb
cwtl
pop
mov
sbb
mov
cmp
mov
out
sbbl
inc
clc
stos
xchg
pop
dec
jnp
push
sub
lods
sbb
movsb
adc
lea
scas
xorl
aad
loopne
mov
adc
mov
inc
shlb
scas
stos
andb
mov
inc
or
cli
xchg
xchg
cmp
or
das
or
push
dec
adcl
in
cmpsl
pop
ret
lods
jmp
cmp
sbb
into
jno
dec
outsl
rol
mov
cmp
clc
push
data16
popa
mov
scas
in
add
fadd
adc
mov
jne
loop
addr16
mov
push
test
mov
enter
mov
or
mov
popf
push
cmp
outsl
cmp
mov
xchg
das
jb
inc
mov
aas
jge
push
xchg
push
xchg
lods
and
cwtl
jno
pop
shr
fistpl
cmpsl
lret
or
fstps
adc
xchg
xor
das
dec
outsb
call
fnstenv
or
xorl
or
xor
icebp
sub
jge
sbb
mov
clc
push
bound
mov
adc
xlat
xchg
pusha
adc
gs
cmpsb
nop
xchg
pop
xor
loope
push
scas
mov
pop
sahf
add
xchg
cmc
sbb
bound
outsb
xchg
pop
lret
rol
push
je
or
lds
lds
mov
mov
popa
stos
add
mov
out
xor
mov
popa
push
ficoms
pop
cmp
lds
mov
xchg
xor
push
in
imul
sub
jl
repz
les
push
sub
pop
dec
push
das
push
or
cs
and
pop
loopne
xchg
jns
daa
pop
lock
bndstx
fldenv
jecxz
add
dec
xor
dec
int
shr
rcrb
js
imul
enter
loopne
out
pcmpeqb
or
dec
adcb
les
cmp
xchg
xor
dec
jae
subb
or
in
mov
push
sbb
out
stos
sub
push
dec
lret
push
sub
jg
out
add
pop
mov
jae
jge
mov
lret
addr16
jg
loope
mov
push
inc
mov
arpl
mov
mov
mov
pop
xor
lret
adc
sbb
cmpsl
lock
jmp
xchg
jecxz
into
xor
mov
jns
pop
pusha
mov
nop
push
popf
jnp
adc
test
jns
out
xchg
stc
pop
mull
xor
cmc
sub
enter
aad
xchg
sub
filds
fcompl
cmp
adc
xchg
enter
jl
push
int3
shr
enter
loope
daa
xor
aas
pop
rcrb
fchs
and
jmp
roll
cmp
scas
jl
sbb
xor
lahf
ljmp
dec
fsubrl
pop
scas
cmp
ds
mov
dec
sbb
pop
cmpsl
in
jae
push
jge
pusha
adc
jle
pop
push
scas
mov
xor
mov
jle
pop
add
fisubrs
faddl
cmp
outsl
sbb
inc
mov
mov
fnstenv
fistps
clc
pop
inc
pop
jne
loop
mov
cmp
gs
add
add
pushfw
adc
jbe
test
xchg
pushf
jo
gs
sub
in
pop
xor
jge
clc
or
push
scas
mov
idivl
or
call
push
rolb
xor
xchg
in
jp
jl
ja
scas
lret
lahf
ss
shr
les
enter
mov
pop
push
cld
jbe
fistpll
push
cmc
mov
popl
adc
int
fs
repnz
ret
enter
mov
xor
in
stos
push
xor
jmp
or
lea
mov
jnp
adcb
imul
cmpl
in
xor
inc
push
ljmp
insb
in
mov
repnz
jecxz
test
lods
popa
mov
dec
lret
inc
jbe
mov
imul
cmp
dec
aad
js
repnz
sbb
jne
and
int3
mov
repnz
dec
rol
outsb
call
lods
jnp
int
outsl
mov
pusha
pop
sub
adc
shl
dec
ljmp
dec
xor
lds
xchg
push
movsl
sub
jbe
popa
cmp
dec
sahf
mov
fstp
andl
push
add
mov
aad
sbb
push
dec
adc
cmp
cwtl
xchg
mov
call
push
adc
int
mov
bound
pop
arpl
sbb
lea
cltd
mov
add
xor
fdivs
ret
cmp
rcrl
xor
cmpsl
dec
sbb
pop
mov
cmpsl
adc
or
cli
fisubrl
xor
adc
fistl
jl
add
test
mov
mov
mov
xchg
add
jecxz
lahf
orb
dec
shll
dec
jle
sbb
fldcw
aam
repz
es
pop
lods
and
fdivr
mov
add
mov
test
push
cltd
lds
mov
shlb
test
jne
ret
lret
adcb
pop
shlb
mov
push
cmp
jge
push
cld
fildl
xor
lds
outsb
mov
int
sbb
ret
sbb
mov
inc
daa
cmc
enter
addr16
push
pop
push
xchg
ret
sbb
stos
push
jg
inc
mov
lea
pushf
stos
sbb
popa
jecxz
test
insl
jno
xorb
cmp
les
cli
inc
sub
xor
aas
add
or
imul
mov
inc
xchg
inc
sbb
outsb
movsl
pop
ljmp
cmp
icebp
xor
repnz
cmp
sub
push
pushf
push
in
fs
cltd
mov
js
in
pop
ljmp
mov
xor
les
ja
push
xlat
xor
cmp
cmp
pop
and
add
ret
dec
std
mov
cmpsl
add
std
cmp
or
pop
add
rorl
aam
xorb
iret
mov
clc
ljmp
popa
push
jle
in
daa
aad
cmc
mov
or
sub
sub
jp
popa
jno
lods
cltd
pushf
popf
loope
cmp
pop
pusha
lea
ret
negl
cltd
rcrb
push
rcr
stos
in
bound
push
lahf
pushf
dec
sahf
nop
jmp
icebp
fistps
dec
mov
mov
sub
leave
mov
stc
adc
shrb
pop
lock
shrl
aad
push
or
mov
inc
ret
push
add
or
and
imul
movsb
loopne
add
bound
jae
mov
push
stos
insb
in
jl
push
xor
push
dec
loop
push
sbb
or
mov
mov
imul
nop
ss
dec
adc
and
push
xor
dec
sahf
std
and
push
jl
out
pop
pushf
sbb
push
sbb
pop
and
jno
mov
push
shrl
cli
nop
aad
cmp
cmpsl
mov
jg
push
xchg
push
push
mov
xor
mov
fdivrl
call
push
dec
lods
loop
sbb
pushf
inc
insb
pop
mov
loopne
dec
gs
rcrl
sarb
fidivrs
mov
addr16
enter
in
pop
stos
xor
sub
xchg
sub
aad
test
pop
xor
clc
rorl
ds
xchg
pop
mov
lods
cmp
leave
mov
rcrb
push
mov
call
stos
xlat
push
daa
mov
or
xor
push
jns
test
mov
adc
sub
inc
insl
ret
push
push
imul
out
mov
ret
stos
jne
repnz
push
fldenv
jmp
leave
clc
jge
add
jnp
imul
or
mov
mov
outsb
push
call
arpl
push
sbb
or
nop
sbb
push
jecxz
jns
lock
jns
jnp
pop
movsb
cld
mov
shll
in
test
aaa
pop
mov
cmc
sbb
push
addr16
pop
lods
pop
cmc
out
lods
push
mov
pop
scas
dec
push
fcmovnu
data16
call
outsl
test
lret
push
sahf
or
jmp
and
inc
je
lods
lahf
mov
mov
xor
inc
int
orl
loop
mov
popa
popa
jecxz
jge
add
stos
arpl
jecxz
mov
pop
fisttps
nop
cmp
sbb
pop
lcall
pop
mov
jns
xor
xchg
fwait
js
add
movsl
sbb
cmp
xchg
mov
mov
cmp
out
push
ljmp
sbb
in
mov
xchg
adc
xchg
inc
cld
cmp
loopne
inc
insb
push
cmp
ret
lcall
cmpsb
int3
sbb
mov
dec
inc
inc
mov
ja
jl
adc
adc
and
mov
call
pop
imul
or
xlat
or
rolb
mov
jmp
mov
or
sub
push
sbb
cld
adc
dec
dec
mov
imul
sbb
pop
ret
xor
jo
jno
mov
rcl
jmp
pop
rorb
in
xor
cmp
mov
xchg
arpl
dec
sub
mov
dec
mov
pop
popf
and
bts
mov
in
mov
ret
jg
jb
and
jg
sub
and
cmp
inc
gs
roll
inc
sub
shrb
fwait
jno
arpl
mov
loopne
dec
and
or
adc
and
fdivrl
xor
inc
dec
jge
lret
and
inc
xchg
adc
and
test
out
lret
push
stos
mov
cmp
xchg
outsb
adc
mov
or
push
hlt
dec
ljmp
enter
push
pop
mov
int
inc
sbb
fs
jg
xchg
push
mov
jb
dec
stc
movsb
xchg
inc
and
add
cli
in
add
jne
mov
add
cwtl
aaa
jmp
gs
pop
data16
and
sbb
out
insl
mov
ficomps
sti
mov
mov
ds
fs
and
mov
jno
and
jge
sahf
push
loope
mov
jae
push
xchg
pushf
lods
jno
dec
pusha
cwtl
inc
mov
repnz
mov
pop
aaa
push
outsl
mov
jae
xor
loopne
dec
incl
and
lahf
jmp
add
leavew
lods
inc
dec
imul
icebp
jns
push
mov
shll
stos
xchg
cmpb
mov
fsubs
add
or
mov
mov
jle
paddusb
push
sbbl
addl
movsb
adc
jp
je
jg
or
mov
je
add
push
fnclex
repnz
xor
rcr
sbb
or
cmc
pop
pop
and
adc
xchg
mov
push
sbb
rolb
pop
in
lcall
cld
mull
insl
loop
stc
adc
mov
out
rcrb
ret
das
or
and
sub
or
sbb
and
mov
fiaddl
xchg
adc
lcall
pushf
pop
adc
lret
into
insb
push
cmp
insl
fprem
fstl
ret
jbe
popa
jg
add
lock
fcomp
mov
leave
lret
push
push
dec
insb
adcb
insl
xchg
movsb
pop
or
dec
mov
pop
jp
and
stos
arpl
repz
lds
jb
out
test
dec
arpl
lock
mov
jg
pop
or
les
xchg
fdivrp
nop
mov
mov
and
and
or
fsubrl
push
dec
xor
pushf
ret
mov
insl
lahf
fdivs
mov
fisttpl
xor
daa
or
inc
xchg
dec
or
and
ljmp
jo
pop
loop
cmp
add
addr16
push
movzbl
popa
addb
xchg
add
in
xor
pop
pop
mov
lahf
push
jne
jae
out
test
test
add
aad
js
rorl
cmpl
clc
inc
stos
inc
adc
xchg
addl
jp
rcrl
jo
lods
or
xor
pop
lods
cld
or
sbb
push
add
insb
sbb
sahf
mov
insb
outsb
push
push
cs
stos
adc
out
outsb
std
or
int
jge
jno
cmp
mov
adc
add
jb
scas
push
loopne
and
test
sbb
fidivl
repnz
aad
xor
lods
lock
imul
add
xchg
sbb
out
lods
pop
jmp
xor
and
adc
rcr
and
xchg
mov
test
xlat
adc
inc
das
add
mov
rorl
lret
ljmp
sub
icebp
out
les
fs
imul
scas
cmpsl
fcomps
dec
fisubrs
mov
xchg
jo
out
into
inc
shll
enter
mov
hlt
in
xchg
sbb
insl
adcb
inc
cmp
or
lahf
mov
add
sbb
mov
push
or
sub
fs
cmp
jle
sbb
lahf
bound
in
mov
xchg
sbb
seta
pop
adcl
aas
call
ret
call
sarl
mov
push
aaa
xor
push
add
cltd
mov
xor
push
mov
push
pusha
int
inc
out
push
xor
mov
or
cmp
je
in
shrl
outsb
test
adc
out
inc
cmc
mov
shll
and
data16
sub
and
fimull
mov
vhaddps
andl
dec
jae
js
iret
sbbl
xchg
sbb
push
mov
repnz
xchg
addl
inc
push
shll
xor
loope
sub
je
movsb
or
inc
add
jl
xchg
lock
xor
inc
nop
pop
je
shr
xchg
data16
sub
or
push
jecxz
pusha
clc
add
lods
sbb
xor
stc
lret
push
std
mov
imul
or
jnp
int
pop
mov
jnp
mov
sbb
movsb
adc
push
push
mov
cmpsl
test
inc
sbb
adcl
sub
aas
test
sub
push
inc
cmpsb
insb
test
les
adc
jle
inc
arpl
cmpsl
xchg
dec
lcall
pushf
mov
cwtl
push
push
jle
clc
sbb
sbb
cld
aaa
cmp
loop
pop
jg
mov
out
ret
mov
xchg
dec
addl
sti
jae
loop
mov
fistpll
lret
outsl
data16
mov
lock
mov
sbb
ficomps
and
gs
push
sub
outsb
mov
pop
xlat
add
xchg
loope
mov
pop
sbbb
mov
mov
push
mov
or
rcrl
test
xor
cli
xor
push
xor
sbb
idivb
lret
sbb
pop
or
stos
mov
jge
push
xlat
jbe
push
imul
adc
popa
cmc
or
movsb
scas
mov
mov
pusha
add
jge
adc
jnp
ljmp
das
adc
inc
xchg
mov
pop
daa
bound
xchg
xchg
xchg
cmp
fdivr
xor
push
scas
jae
dec
mov
enter
mov
jp
or
sub
leave
das
mov
push
sbb
jge
xchg
push
jns
and
sub
test
je
lea
push
shr
push
and
and
adc
outsl
ljmp
ss
fwait
xor
jmp
stos
push
mov
sbb
jge
lcall
lods
loop
cld
rcll
or
push
cmp
push
mov
shr
xorb
mov
push
nop
dec
cmc
dec
sub
or
imull
fucomip
dec
es
int
mov
hlt
movsb
jle
adc
adc
mov
mov
and
xor
mov
push
rcr
add
pop
cli
push
out
mov
ss
mov
jecxz
mov
sbb
xor
xchg
loope
aaa
jge
jns
xor
mov
xchg
mov
jl
stos
aad
rolb
ds
jno
sub
sub
nop
xor
or
popa
add
std
mov
push
testb
mov
lds
mov
hlt
pop
cmp
pop
out
mov
and
cltd
enter
xchg
fildl
gs
lea
inc
insl
jecxz
dec
mov
out
inc
cmpsb
push
add
sti
test
jg
dec
shl
jbe
insb
jae
xchg
loope
lock
fldt
dec
sbb
xchg
and
xor
lods
cmp
sub
push
cmp
aad
jge
push
jmp
and
lods
adc
mov
loopne
cs
inc
repnz
push
dec
lahf
scas
push
add
push
ds
out
in
daa
and
dec
add
in
sbb
dec
cltd
out
arpl
lock
mov
and
or
insb
fistpl
dec
jno
outsl
pop
lahf
popa
inc
cmpsl
les
jg
rorb
out
ljmp
dec
shlb
repz
xchg
pop
test
bound
gs
xchg
in
push
aam
xchg
andl
imul
stc
fidivrs
xchg
sar
sub
xor
jl
stos
fildl
mov
sbb
gs
cmpsl
das
es
mov
in
test
ret
dec
dec
mov
sarl
mov
scas
ljmp
jne
movl
jnp
lahf
xchg
jmp
lahf
aam
xor
outsl
outsl
imul
adc
jnp
sub
outsb
movsl
iret
mov
adc
cld
sbb
cmp
sub
loope
movsb
and
cwtl
dec
aas
fucomip
rcrl
dec
insb
nop
gs
mov
mov
cmpsl
xchg
es
add
inc
clc
lods
push
das
out
and
fldt
sbb
cmp
sbb
les
pop
mov
imul
mov
lods
aam
pop
adc
ja
fxch
leave
fimuls
mov
rcrb
sbb
add
fs
fsubr
mov
and
inc
fs
jle
adc
das
pusha
out
xchg
and
jl
xlat
negb
mov
cmp
cmpl
inc
popa
cmpsb
push
and
jle
push
insl
pushf
ja
or
mov
push
rcl
inc
sbb
outsl
pusha
test
popa
jno
outsb
mov
stos
out
and
imul
mov
xor
mov
imul
inc
loope
dec
outsl
ret
cmp
in
xlat
cli
add
sbb
mov
inc
cs
clc
jae
mov
popf
dec
jbe
xchg
and
pushf
testb
arpl
mov
frstor
or
fistpl
pop
sbb
rorb
and
sbb
sub
pop
lret
js
cltd
mov
fcomip
and
into
inc
push
push
mov
jnp
or
mov
jmp
cmp
orl
dec
mov
pop
in
in
or
push
sbb
repz
nop
es
jbe
jg
arpl
xchg
add
or
in
jmp
les
pop
jmp
out
ljmp
js
pop
cmp
add
out
repnz
stos
xchg
mov
adc
or
jmp
dec
call
pop
leave
iret
lahf
lret
jp
jge
stos
push
or
sbb
icebp
push
fs
int3
or
mov
je
push
clc
adc
int
sub
in
ds
lea
mov
sbb
adc
aas
mov
mov
fcomps
cmpsl
ljmp
cli
dec
lock
mov
and
xlat
sbb
je
lds
inc
mov
adc
std
jmp
pop
pusha
push
mov
lcall
push
inc
pop
sti
jns
imul
test
dec
mov
mov
add
movsl
cmpsl
pop
js
inc
xchg
pop
div
jl
push
sahf
jbe
call
sbb
pop
add
idivb
and
shll
clc
jnp
shll
sbb
push
xor
inc
cmp
iret
mov
gs
ds
loopne
lret
inc
cmp
mov
sbb
out
aam
push
and
pushf
sub
pushf
ret
icebp
test
data16
dec
xchg
cmpsb
imul
ljmp
mov
mov
std
inc
rclb
sub
sti
cmp
xor
aas
adc
bound
pop
pushf
inc
sbb
pop
and
push
push
mov
movsl
fwait
mov
cmp
daa
push
push
mov
jle
adc
je
inc
pmuludq
adc
dec
cmp
xchg
test
test
or
fmul
adc
dec
or
inc
icebp
add
mov
lcall
dec
jo
xor
xor
lods
mov
sbb
inc
incl
mov
movsl
mov
sbb
iret
jmp
in
jb
mov
in
adc
pop
dec
mov
stos
xor
movsb
sbb
dec
mov
inc
dec
jno
mov
sbb
adc
and
xchg
push
mov
pop
inc
loop
jle
aas
les
repz
mov
popf
and
or
mov
pop
sub
mov
fcmovu
or
iret
mov
add
and
mov
mov
je
ja
sbb
mov
lret
xchg
outsb
ret
cmpsl
dec
aaa
subl
xor
mov
push
cwtl
clc
xchg
js
popa
aas
cmp
jmp
dec
mov
and
xchg
int3
ss
das
stos
push
outsb
push
outsl
movsb
lahf
in
xchg
sbbl
jno
rcrb
sub
pop
addr16
mov
sbb
push
mov
xor
inc
rclb
movsb
sarl
scas
faddp
fisubrs
in
je
xchg
mov
shrl
filds
lea
jae
sub
sarl
repnz
sbb
adc
mov
xchg
adc
jecxz
cmpsl
insl
mov
push
mov
sbb
adc
fwait
insb
lods
pop
iret
stos
cwtl
xchg
js
inc
xor
add
ljmp
fwait
mov
adc
and
cs
pop
xchg
add
jo
jne
mov
int3
dec
jmp
addl
sbb
into
addl
mov
cmpsb
pushf
repz
shll
into
pop
fmul
imul
hlt
jne
mov
dec
sbb
rcll
call
jne
test
ja
cmp
inc
mov
push
out
das
mov
mov
xchg
scas
cmp
jmp
inc
mov
xor
mov
mov
xor
inc
jge
aam
jo
and
jbe
test
and
les
adc
lods
jae
fstp
sub
dec
add
fnstsw
push
mov
stc
fs
addl
jb
icebp
inc
add
sbb
out
and
sbb
mov
xchg
cld
sti
shlb
lods
fs
shlb
call
lock
mov
les
pop
in
mov
push
pop
mov
daa
and
imul
mov
mov
sbb
pop
cmp
ret
movsl
mov
jl
and
gs
push
iret
scas
addr16
mov
in
mov
les
cmc
js
movsb
loop
inc
loop
add
scas
inc
stos
jg
into
mov
add
in
gs
or
fbld
push
sub
in
out
add
fldcw
push
daa
sbb
xor
fbstp
mov
jge
mov
mov
mov
mov
cld
inc
lret
or
andl
mov
rclb
fsubr
jg
xchg
jge
dec
mov
dec
test
xor
sti
cwtl
mov
movsl
add
add
push
adc
stc
jo
dec
ds
jmp
inc
lock
iret
sub
loope
dec
dec
mov
dec
lret
cmpsl
rcll
js
add
into
aad
jl
dec
scas
orb
cmp
dec
xchg
daa
and
sbb
out
imul
fsubrp
and
fcmovnb
xchg
push
cmp
hlt
add
adc
out
jle
push
jbe
push
push
jl
rcrl
sub
test
add
ja
test
jno
xchg
jno
add
rcrl
jmp
clc
lret
jp
push
sar
lods
pushf
lods
in
sahf
icebp
aas
test
pop
aam
pop
add
push
leave
dec
push
inc
pop
ret
xchg
idiv
xor
mov
pop
push
jb
cld
sub
xchg
iret
shrb
cmpsb
add
lret
shlb
xchg
pop
xchg
ljmp
test
in
cmp
in
aaa
cmp
jmp
jne
fstl
arpl
mov
push
gs
xchg
js
push
js
in
shll
repnz
cmpsb
mov
jp
mov
cmp
test
mov
subb
sti
mov
or
and
repz
sub
sub
test
fnstcw
mov
push
arpl
test
mov
ret
fcomi
rcl
sbb
pop
mov
mov
notl
movsb
inc
xor
lock
rol
dec
inc
xchg
cmp
cmp
mov
adc
pop
mov
out
stos
movsl
xchg
lock
or
jnp
clc
out
xchg
pop
sub
xchg
mov
mov
lods
aad
loopne
test
cmp
jecxz
xor
pop
sbb
mov
imul
mov
fadds
xor
aam
je
xchg
mov
fisubs
pushl
ja
jmp
adc
sbbl
jmp
or
inc
ljmp
mulb
loop
stos
jp
jp
pop
stc
hlt
mov
sub
inc
and
rclb
inc
ljmp
mov
cmp
roll
shll
test
inc
popa
mov
lret
inc
in
pop
fsub
jbe
js
add
mov
mov
dec
movl
outsl
aas
imul
in
fists
inc
hlt
or
pop
popf
fiaddl
mov
adc
inc
xchg
jno
sub
pop
sbb
cli
jp
leave
sbb
rorl
mov
in
cmpsb
jb
add
push
xchg
leave
out
and
dec
popa
push
lcall
arpl
mov
decb
dec
icebp
ljmp
repnz
mov
movsb
dec
inc
mov
mov
aas
inc
mov
push
mov
sub
cwtl
aam
imul
adc
xor
push
adc
pop
inc
daa
mov
jns
xchg
or
mov
mov
lret
mov
int3
jbe
and
cmp
nop
ret
xchg
adc
in
cli
inc
sti
sub
mov
nop
bound
jg
mov
jp
cmp
cmp
push
adc
cmc
add
add
push
xchg
mov
add
data16
ret
js
lock
insb
insl
es
test
adc
or
sbb
ret
js
xchg
iret
es
test
mov
lret
mov
enter
cmp
ss
std
inc
shrl
adc
scas
cmpsl
add
xchg
hlt
scas
sub
sbb
rol
pop
sti
jg
push
cli
mov
pop
add
mov
inc
data16
negl
cmc
pop
in
mov
add
inc
ss
mov
jns
cltd
movd
jae
xchg
imul
mov
lods
into
push
inc
inc
cmpsb
iret
mov
outsb
push
or
popa
icebp
cmp
jmp
inc
sbb
jecxz
add
inc
adc
das
stos
mov
mov
or
mov
popa
decb
or
mov
call
pop
enter
flds
lcall
lahf
mov
insl
cs
adc
repz
ljmp
mov
mov
outsb
push
addr16
dec
or
sti
and
push
mov
popa
shrl
stos
or
pop
icebp
jnp
cs
and
cs
xchg
mov
fnsave
aas
popf
test
push
jae
xor
pop
and
cmp
repz
mov
repz
sahf
inc
mov
lahf
lods
in
std
and
fbstp
popf
add
dec
mov
ret
mov
sbb
mov
leave
add
mov
scas
jmp
mov
cmpsb
mov
cmp
in
push
sub
out
dec
add
mov
hlt
lods
or
mov
aaa
push
sbb
dec
and
or
pushf
pop
or
lods
fildl
pop
push
sahf
stos
inc
fadd
jl
mov
jmp
call
cmpb
sysexit
call
int
in
lcall
in
lock
cmp
ret
lahf
mov
jb
lods
je
and
fs
xchg
fucom
test
mov
cmp
rorb
in
fcmovb
mov
mov
xor
xchg
ljmp
cmc
pusha
mov
imul
mov
xor
lahf
xchg
jp
mov
jb
orl
inc
out
xchg
mov
sbb
mov
loop
cmp
jmp
adc
insb
push
and
arpl
stc
mov
aad
cmp
rorl
cmp
addr16
loop
dec
jg
test
sbb
mov
cvtps2pd
xor
ss
adc
mov
mov
lcall
mov
mov
cld
ss
lea
xchg
xor
dec
es
pop
mov
pop
xlat
movsl
mov
in
xchg
mov
or
mov
lret
lds
xchg
sbb
movsb
arpl
imul
fcomps
sub
jne
cwtl
lret
aam
pop
into
pop
jl
cmc
cmpl
mov
rol
ja
incb
push
ss
test
fnop
inc
cmp
xchg
push
cmp
data16
push
mov
leave
pusha
jle
gs
inc
sbb
push
pop
jecxz
movb
add
mov
sub
rcrb
inc
xchg
push
push
inc
ja
pushf
fnstenv
out
test
lret
add
mov
jnp
test
stc
pop
test
sub
insl
or
xlat
and
mov
das
xchg
orl
push
in
add
fs
jnp
push
test
mov
lret
ds
xchg
je
and
rcrb
scas
dec
and
fisubrs
mov
dec
and
and
push
in
pushf
inc
mov
int
push
dec
and
dec
push
jnp
push
mov
sbb
adc
insb
xlat
fsubl
cmp
lcall
sahf
lods
out
test
cwtl
mov
das
sub
dec
imul
cltd
jmp
movzbw
xor
js
mov
movsb
pushf
ss
jno
xchg
lods
lret
les
scas
add
pop
xor
rcll
adcl
sarl
jb
pmaxub
cmpsl
pop
rorb
lahf
sub
loop
orb
add
clc
imul
aas
inc
imulb
xchg
push
push
fwait
cmpsb
hlt
pop
mov
xor
xchg
scas
cli
xor
xchg
cmp
cmpsb
push
or
cmp
cmp
test
mov
push
mov
test
jle
lret
out
outsl
and
xchg
stos
popl
stc
xchg
cmp
cmp
sub
fbld
mov
lods
lret
ret
push
xchg
repz
inc
addb
mov
ss
sbb
jno
lods
lahf
add
outsl
jecxz
dec
adc
add
mov
xchg
inc
test
dec
push
icebp
out
jne
dec
pop
sub
loope
outsl
jl
sbb
cs
shrb
pop
jo
outsl
jl
cmpsb
sub
nop
xchg
lcall
aam
mov
ss
sbb
out
push
andb
mov
fcmovnbe
lcall
adc
lock
subb
scas
mov
mov
imul
jne
ret
mov
mov
adc
je
add
insl
xor
cmp
divb
test
jb
dec
mov
addl
fistpl
xor
or
loope
js
xchg
faddp
xchg
lea
into
nop
lea
rep
add
or
inc
stos
mov
add
fisttpl
mov
fiadds
cmp
cmp
ljmp
pop
cmpsl
xchg
lds
stos
clc
pop
xor
repnz
pop
insl
repz
testl
scas
jl
add
xlat
or
cld
pop
or
shr
push
rcr
insb
jns
into
dec
ret
jns
jle
sbb
cmp
jae
or
insl
movsl
xor
shll
cmc
mov
dec
fsts
ss
aad
dec
xchg
outsl
fsubs
xor
add
dec
pushf
jnp
pop
pop
mull
decb
out
and
ficompl
add
mov
pop
sub
mov
lock
lea
push
push
sub
nop
mov
pop
adcb
scas
lods
out
in
in
push
jecxz
in
aas
lods
push
xchg
dec
and
jb
js
icebp
cmpsb
mov
popa
les
pop
jae
dec
lea
pop
or
into
ds
fbld
add
testb
je
xlat
inc
mov
ds
inc
mov
sub
in
mov
sub
xor
mov
gs
fcmovnbe
enter
loope
push
pop
fnstcw
cld
sub
push
aaa
add
fucomip
aas
ss
adc
sub
aaa
pop
fwait
lock
divb
or
push
push
mull
jl
ds
adc
std
test
shlb
movsl
das
jno
jns
loopne
pop
aaa
loope
push
pop
xor
cmp
xlat
pop
xor
inc
lret
clc
xchg
fists
mov
inc
loopne
pop
in
call
rcrl
mov
mov
sub
cmpsl
les
cmp
rclb
cmp
outsb
add
xchg
mov
mov
mov
adc
gs
loop
lock
mov
scas
mov
push
xor
push
xchg
inc
add
jp
cld
and
inc
mov
dec
push
push
scas
fimuls
imul
js
dec
push
push
cmc
push
outsb
int3
cmpsb
mov
sbb
push
xchg
xor
ss
mov
xor
add
fmuls
or
cltd
test
pop
inc
push
cmpsl
jns
jecxz
add
enter
popf
lcall
aam
or
ret
mov
push
loopne
jnp
das
xchg
flds
ficoms
ljmp
cmp
sbb
adc
inc
xor
fdivrl
xor
shll
dec
loopne
gs
dec
mov
cmpsb
mov
in
pop
sub
xchg
cld
cwtl
mov
in
jg
roll
cld
inc
hlt
pop
inc
sub
and
push
aas
add
nop
pop
popa
lahf
cltd
mov
dec
rol
seta
les
mov
sub
xchg
inc
jecxz
aad
test
pop
outsb
mov
mov
out
adcb
dec
loopne
jg
push
ret
fidivrl
push
popa
jle
rorl
out
loopne
std
add
dec
dec
daa
xor
dec
vmaxss
in
jp
outsl
mov
pushf
les
orb
nop
call
rep
jbe
fcompl
jae
lcall
insb
fisubl
add
add
testl
fs
int
xor
jmp
js
xlat
push
pop
push
inc
out
imul
xchg
jmp
sub
mov
daa
mov
cmc
sbb
arpl
push
push
data16
dec
xor
incl
push
or
xor
addps
sub
adc
dec
pop
pushf
into
in
ss
in
push
stc
jnp
cmpl
out
mov
fists
and
shr
cmpsb
std
je
into
aas
aad
add
and
gs
jno
and
inc
or
fcmove
scas
inc
hlt
cli
push
adc
stos
call
mov
adc
jns
mov
adc
test
mov
lret
cmp
ret
pop
xchg
cmpsl
dec
icebp
cltd
insl
jmp
cmp
lcall
pop
in
or
adc
je
adc
lods
lcall
aam
dec
xchg
dec
xchg
add
int3
cmpsl
fs
pushf
aam
push
dec
sarl
mov
gs
daa
es
sub
pop
int3
inc
ret
cmpsb
icebp
dec
jo
push
inc
aad
aas
js
out
dec
jle
jle
mov
fucomp
out
sub
inc
pop
adc
jbe
cmp
cld
hlt
mov
scas
cmc
iret
mov
jns
loop
pop
ret
movsl
cmpsb
xchg
add
and
push
movsl
sub
mov
or
sub
leave
cwtl
repz
rol
or
xchg
dec
icebp
andl
imul
js
mov
outsb
lcall
mov
pop
jnp
cmpsl
mov
mov
adc
jp
add
pop
sbb
loopne
icebp
out
pop
sbb
call
sub
mov
js
leave
stc
add
int
insb
adc
xlat
dec
pushw
cwtl
xchg
push
pop
mov
mov
std
push
and
cmp
aaa
xchg
loopne
inc
pop
test
pop
sahf
dec
pushf
out
pop
jns
mov
pop
stos
xor
ss
push
xchg
pop
mov
rcll
mov
cmp
push
sarb
adc
xchg
mov
mov
mov
imul
pusha
aad
pop
sub
test
and
jno
shrl
add
call
lret
mov
mov
in
lock
jge
mov
sub
mov
outsl
and
push
and
jb
js
inc
and
inc
cmp
fidivl
in
mov
sbb
jne
ds
adc
sti
stos
repnz
iret
aas
adc
jns
inc
push
or
aaa
mov
push
or
fdivl
mov
lret
incl
incl
add
add
fwait
xor
outsb
and
std
pushf
bound
add
fisttpl
lea
push
rorb
xor
push
or
cmc
imul
jp
mov
addl
sub
xor
hlt
fmull
and
repz
sub
test
pop
sarl
into
pop
addb
fadd
out
les
mov
jle
push
icebp
js
jle
stc
test
pop
in
mov
cltd
popf
mov
cmpb
mov
icebp
push
and
push
jmp
inc
ret
mov
and
adc
xchg
jne
jno
mov
lock
sbb
scas
push
dec
movsb
dec
ret
in
mov
loop
movd
jl
mov
cmp
and
mov
jle
call
push
insb
jnp
adc
clc
dec
cmpb
pushf
push
enter
xchg
pop
in
xchg
add
aas
test
lock
fldt
test
pushf
loopne
pushf
in
movsl
mov
push
push
enter
in
hlt
scas
loop
mov
pusha
push
mov
std
lret
and
fidivrs
sahf
xchg
jp
fdivrs
mov
xchg
mov
xchg
inc
sub
loopne
out
out
pushl
ss
xor
divb
fsts
lahf
sbb
clc
adc
adc
scas
pusha
aad
sbb
push
jae
loope
xchg
call
jbe
pop
fidivl
outsl
idivb
push
mov
or
jge
xor
andb
sti
imul
mov
jmp
test
fwait
dec
jle
js
xor
jecxz
inc
push
inc
pop
push
inc
lods
dec
push
jae
sbb
pop
jg
aam
iret
mov
dec
sub
mov
fcmovnb
cld
sti
mov
push
mov
sub
outsb
fdiv
mov
mov
out
sbb
jo
outsb
es
jge
inc
loope
lods
fsubs
add
fucom
mov
push
cmp
out
aas
mov
add
nop
push
enter
repnz
push
arpl
pusha
popf
and
arpl
sarl
divl
sbb
out
jmp
testb
pop
push
mov
mov
cmc
loope
dec
pop
inc
mov
inc
mov
xor
cmpl
sarl
jnp
sbb
push
mov
mov
pop
mov
mov
lret
shrl
jno
pop
call
jb
cmp
pop
add
pop
jle
test
les
cmp
mov
mov
mov
fmuls
icebp
lds
xchg
inc
aam
inc
popf
jle
mov
rcrb
dec
pop
out
sti
jge
mov
dec
pushf
lods
cmp
sbb
inc
cli
out
xchg
mov
jns
scas
mov
arpl
popa
xchg
gs
cmpsl
js
imul
dec
popf
in
sbb
filds
sub
xchg
out
push
popf
sbbb
cwtl
push
setge
bound
pusha
sbb
ffreep
cmp
call
lahf
pop
fcomps
push
mov
sbb
call
ret
ljmp
or
add
or
jmp
xchg
cmpsl
pop
fsubrp
aad
push
push
xchg
ficoms
je
ret
scas
add
mov
mov
outsb
cmp
and
aad
cld
rorl
push
jno
mov
jno
roll
adc
add
shll
dec
stos
into
lods
test
mov
jp
cmp
pushf
sub
push
lret
inc
jae
stos
pop
jae
outsl
cltd
cs
mov
or
pop
in
jl
ret
rclb
sarb
push
push
add
mov
and
pop
scas
punpckhdq
inc
ds
cmc
cld
imul
jae
mov
jns
repnz
jge
out
inc
movl
xchg
call
sub
push
dec
push
jo
mov
cs
inc
hlt
pop
cli
testb
subb
jecxz
mov
out
add
dec
mov
add
inc
or
cmp
mov
ret
xor
jne
push
xchg
dec
icebp
out
shl
in
adc
movsl
es
or
mov
push
scas
add
cmp
or
aaa
and
ds
mov
fildl
xchg
fists
popa
out
stc
and
mov
mov
adc
xchg
aaa
adc
fwait
jns
jmp
jne
pop
lahf
lret
addr16
jecxz
inc
add
xor
dec
fiaddl
xor
jns
mov
mov
scas
cmpsb
sbb
int
push
fildl
fcoml
shll
and
test
cmp
stos
aam
dec
divl
cmp
dec
mov
jmp
push
hlt
pop
in
sbb
movsb
cmp
mov
pop
inc
imull
outsb
out
adc
or
pop
insl
fcomi
movsb
sub
mov
mov
rorl
pop
jp
sahf
inc
lods
push
repnz
push
popf
xchg
jp
aas
mov
sbb
fistpll
lahf
ja
cmp
js
pop
adc
aas
inc
movsb
jb
out
cmp
inc
push
inc
leave
scas
add
push
sub
xor
cmpsl
mov
aad
push
dec
mov
push
je
push
scas
jmp
test
adc
cmp
in
xchg
xorb
push
dec
mov
or
cmpsl
mov
into
jb
add
test
push
loopne
negl
xlat
mov
jb
xchg
and
jecxz
jmp
xchg
xchg
out
pop
cmp
sbb
push
xor
push
fisttpll
add
jae
or
xchg
sub
push
fbld
daa
je
les
mov
cld
scas
lret
mov
and
iret
jb
mov
ret
imul
mov
insb
aad
insl
scas
daa
stos
xchg
xchg
inc
filds
rcr
iret
in
jno
adc
inc
xor
mov
hlt
enter
jae
ret
fsts
inc
and
data16
aas
jg
lahf
push
aas
sub
pop
cs
stc
mov
lcall
lods
sti
stos
xchg
insb
sti
aaa
xor
jbe
cmp
jno
mov
repz
add
mov
xor
cmc
int
sbb
fdivrl
add
pop
enter
xchg
push
xlat
and
mov
sbb
adc
mov
scas
xchg
imul
lock
std
xchg
das
ds
push
push
pop
popa
jmp
or
and
add
xchg
clc
jmp
filds
xor
ret
stos
cmp
sti
stc
xor
push
mov
pop
jne
enter
sbb
popa
sub
loopne
xor
mov
rcl
and
jg
cltd
jl
jmp
iret
mov
sti
xchg
gs
push
cli
cmc
or
push
jo
or
push
ret
mov
inc
sub
sub
icebp
in
loopne
sub
or
mov
xchg
cmpsb
dec
jbe
dec
lods
dec
loope
sbb
lahf
dec
sub
clc
mul
cmc
ret
lods
and
inc
sub
gs
lods
test
ret
faddl
not
and
mov
cmp
cmp
mov
paddd
push
xchg
aaa
jns
or
push
icebp
pop
push
cmc
movsb
sbbb
xchg
xchg
sbb
and
jge
push
rorl
ret
movb
sbb
mov
pop
lock
lar
bound
mov
aad
lret
push
pop
lcall
xor
testb
mov
test
iret
xor
pop
mov
and
daa
sbb
xchg
mov
pop
aam
sbb
jecxz
gs
bound
inc
push
daa
dec
int
dec
daa
and
xchg
mov
push
mov
sub
sbb
lds
arpl
mov
mov
dec
sarl
or
push
lret
lods
cmpsb
mov
in
jbe
imul
mov
jecxz
mov
mov
add
mov
xor
imul
or
mov
call
sub
xor
jno
repz
mov
popl
flds
mov
cmp
fwait
nop
adc
jbe
jmp
fistpl
cmp
jp
je
hlt
sub
push
push
data16
and
mov
and
lock
pop
mov
dec
mov
cmc
int3
pop
cmp
dec
out
iret
lock
stos
pusha
xor
inc
mov
mov
adc
inc
std
addr16
cmp
fstl
xorl
daa
cwtl
scas
push
inc
sbb
mov
repz
adc
lea
cmp
movsl
stc
xchg
scas
ret
mov
jle
pop
inc
or
adc
fcmove
dec
jmp
aaa
cli
xor
dec
int3
fnstcw
aam
aaa
mov
xchg
jg
ret
jecxz
mov
adc
pushf
aas
mov
mov
xchg
test
mov
in
push
push
std
inc
mov
inc
jmp
fwait
ror
popf
rcll
ljmp
sbb
inc
icebp
inc
inc
pop
sbb
test
sahf
add
xor
cmp
js
pop
inc
pop
inc
data16
cmp
and
ss
hlt
inc
sbbl
dec
jb
stc
mov
int
test
xchg
mov
out
stc
lock
add
and
mov
iret
pop
jmp
sub
clc
jg
sub
lock
push
sbbb
dec
mov
xlat
fwait
adc
adc
sub
jmp
push
add
cmc
cmc
xorb
movsl
imul
inc
ljmp
or
xchg
push
dec
dec
into
sbb
call
ds
roll
mov
shrb
dec
mov
add
repz
dec
not
repz
insb
lret
mov
and
jecxz
bound
shll
ficoml
push
loope
adc
jecxz
aaa
pop
push
int3
add
xchg
sbb
aad
pop
mov
mov
inc
cs
cwtl
aaa
mov
inc
bound
popf
lcall
out
filds
sbb
shrl
sbb
and
mov
cmpl
mov
jae
mov
adcl
push
cmp
adc
loope
cmpsb
cmpsl
pop
js
push
dec
and
std
xor
mov
dec
or
xor
sub
gs
in
bound
mov
mov
ss
and
stc
clc
jg
test
sbb
adc
or
ss
xlat
daa
or
into
mov
rcll
add
in
scas
push
loope
aaa
repz
fsubrs
es
dec
iret
xor
sbb
rclb
pop
mov
enter
sub
les
jo
shlb
out
or
add
inc
gs
mov
sbb
shlb
or
push
mov
cmc
mov
dec
push
movsl
push
xchg
fldcw
decl
dec
sbb
das
cli
mov
dec
data16
or
jecxz
inc
xor
cwtl
les
bound
and
stc
push
pop
outsb
push
xor
and
push
mov
es
stos
pop
clc
loop
sbb
pop
or
ds
je
xchg
pop
addb
mov
push
dec
out
cmpb
ret
jb
mov
mov
shll
push
mov
ljmp
xor
or
cmpsb
mov
cmpsb
data16
sub
mov
dec
ror
ss
cmp
xchg
fcoml
movsb
lods
sti
aad
outsb
jg
shlb
mov
stc
dec
push
loopne
cli
or
pop
out
cs
pop
stc
jge
xor
and
inc
arpl
dec
sub
fs
push
xor
inc
or
cli
mov
dec
dec
andl
inc
lods
fmull
pop
fcoms
jne
jb
xchg
fisubl
out
fisubrl
mov
movsl
loopne
sub
mov
aas
jb
jg
dec
icebp
cmp
jb
fwait
std
cmp
nop
jnp
and
and
sbb
cmp
jae
bound
pop
pop
sbb
test
or
jge
ffreep
mov
out
es
and
sbb
fldl
pop
int
mov
shlb
les
lahf
int3
jl
xchg
bound
mov
mov
jg
push
mov
fwait
adc
xchg
push
cltd
xor
subb
adc
dec
test
adc
stc
lret
jns
ret
add
outsl
or
cmp
xlat
cmp
leave
adc
movsb
mov
pushf
jbe
xor
sbb
or
jg
cmp
xchg
clc
xchg
add
xchg
es
outsb
mov
jbe
cltd
jns
cmp
adc
dec
or
mov
cmp
aam
pop
push
loop
and
xor
mov
fdiv
jg
gs
xchg
sti
xchg
andl
adc
popa
jo
lret
and
pop
jge
adc
out
inc
pop
push
pop
mov
test
insl
push
sbb
dec
les
popa
and
mov
icebp
mov
mov
in
jb
dec
test
ss
aad
cmp
pop
push
ds
xlat
xor
loopne
cmc
loopne
scas
jg
add
fcmovne
test
push
and
mov
pop
cs
out
add
mov
sub
adc
mov
pop
pop
bnd
out
mov
pop
add
mov
pusha
imul
lods
sub
bound
push
jle
xor
ds
push
imul
sar
or
int3
iret
lcall
sti
adc
insb
add
test
mov
in
xchg
fnstsw
sti
in
cmp
dec
xlat
sub
and
pop
hlt
pop
mov
push
das
sbb
pop
xorl
dec
mov
shrb
fcmovnu
or
mov
mov
ljmp
dec
add
mov
mov
lock
sti
jecxz
sub
cmp
mov
inc
popf
push
popa
mov
addl
and
inc
add
push
dec
cli
call
lea
sub
cmp
push
inc
xchg
lods
popf
ja
cmpsb
scas
adc
mov
loope
push
mov
fnstcw
ficoml
dec
cmpsb
call
aas
dec
jge
insb
cmc
insl
sub
jb
lret
repnz
push
jecxz
push
inc
leave
call
lahf
fs
mov
stos
arpl
adcb
out
outsl
pop
out
push
xchg
jne
jnp
or
aas
fbld
mov
push
xchg
mov
rcrl
out
notb
mov
xchg
test
adc
push
lahf
pop
repnz
adc
repz
cmpsl
test
and
pop
mov
out
cltd
test
insl
mov
test
inc
inc
pop
push
enter
push
ljmp
movsl
fwait
cltd
rcll
adc
push
lcall
pop
push
std
or
stos
jmp
xor
popf
and
fistpl
test
std
aaa
insb
dec
mov
mov
sbb
rorl
fdivs
adc
or
sub
imul
dec
ret
ss
imul
test
cwtl
mov
test
sbb
xchg
push
fcomip
adc
das
jnp
fadds
addl
fisttps
jge
cmp
sub
faddl
xor
bound
rclb
iret
lret
iret
imul
and
lahf
mov
mov
imul
iret
in
je
nop
sahf
jmp
or
jb
jge
insl
out
js
dec
pop
cld
out
adc
lret
repnz
sub
pushf
fildll
push
sub
xchg
call
outsb
or
loop
add
mov
push
fs
incb
out
jge
xlat
pop
lock
fcomip
aas
sbb
nop
and
pusha
int
mov
outsb
movsl
mov
call
hlt
sbb
repnz
pop
jo
insl
loopne
cmp
push
out
test
sub
rolb
xchg
imul
mov
sub
shlb
das
fnstenv
sbb
imul
dec
fisubs
inc
test
adc
fmul
daa
incl
xor
outsl
clc
insl
bound
xchg
pusha
test
push
ljmp
sbb
jle
fdivrp
mov
mov
pop
lds
push
movsl
pop
push
fisubrs
mov
inc
cs
mov
xchg
sub
popf
sbb
xor
mov
and
daa
int3
je
hlt
push
sub
jmp
pop
add
ja
sub
into
mov
mov
cmp
inc
sub
arpl
or
imul
pushf
stos
jl
pop
lods
sub
nop
sarb
ja
stos
and
ret
xchg
push
xchg
adc
jmp
test
mov
push
scas
mov
mov
daa
fildl
in
cli
ss
cmp
lcall
ja
or
jae
mov
decb
add
loope
popa
xor
bound
lods
cmpsb
out
sub
xor
add
mov
std
sar
into
insb
sbb
cmp
lock
aam
sbb
out
lret
mov
mov
mov
mov
out
adc
sbb
push
dec
ret
lret
dec
push
movsb
push
push
adc
stos
outsl
sbbb
cmc
mov
mov
and
jnp
mov
xor
jmp
dec
add
push
or
jbe
pop
out
mov
mov
mov
jbe
sub
sub
rcrl
in
pop
loopne
adc
jecxz
adc
decl
lahf
int
js
xchg
xchg
rcrl
outsl
sbb
jb
aad
icebp
aad
out
in
pop
pop
les
mov
xlat
cmp
mov
pushf
int
pushf
icebp
pop
push
dec
xchg
cmpsl
dec
inc
and
ret
aam
in
mov
ret
or
add
cmp
mov
ucomiss
insl
dec
mov
and
dec
lock
fcomp
inc
iret
lea
fsub
add
push
mov
stc
mov
push
into
add
stos
imul
dec
xchg
inc
pop
adc
or
setl
mov
xchg
pusha
xor
icebp
pushf
sbb
mov
js
xlat
xor
xlat
or
mov
inc
out
roll
dec
stc
push
add
in
cmp
dec
iret
jg
jecxz
addb
lret
sub
xor
lret
pop
cmp
rcll
lcall
bound
loop
addr16
mov
push
xor
test
bound
popf
jg
xchg
mov
mov
sbb
mov
jns
xchg
addr16
dec
sub
add
adc
loope
insl
cmp
xor
pop
push
sahf
call
push
sub
pushf
sbb
pushf
mov
in
pop
inc
insb
sti
adc
stc
or
jmp
outsb
stos
cmp
iret
mov
shl
jl
and
push
in
mov
xchg
push
pop
in
push
lahf
rclb
push
pop
imul
or
dec
in
cmp
cli
mov
pop
add
xchg
lea
in
nop
arpl
xor
iret
mov
pop
mov
dec
loop
inc
aad
inc
mov
mov
pop
leave
out
iret
in
add
cmp
cs
jecxz
loop
inc
ret
dec
mov
dec
jp
ficoml
or
inc
and
mov
xchg
pop
shl
cmp
out
aas
cmp
xchg
adc
inc
push
inc
cmp
daa
aam
pop
and
popf
sti
outsb
lds
pop
cld
fistpl
cmpsb
mov
push
xchg
imul
xor
pusha
adc
xchg
add
lea
fdivs
pop
xor
jp
imul
repnz
push
out
add
add
mov
inc
les
xlat
insl
mov
and
sahf
subb
add
scas
pop
lds
jl
popf
mov
in
cmpsb
sti
loopne
dec
dec
mov
outsl
pop
jg
xor
lods
in
sbb
sub
pop
jg
and
dec
cltd
jne
hlt
ret
cli
ret
rcl
mov
jle
inc
lret
mov
imul
sbb
subl
sbb
inc
repnz
mov
scas
inc
out
jne
jmp
shrl
outsb
les
fcomip
push
pop
mov
fimuls
pop
arpl
ja
cmp
std
das
jb
pop
cld
cmp
in
mov
subb
xchg
and
and
or
cmpb
inc
mov
out
xchg
xchg
int
rep
cwtl
popa
stos
mov
popl
enter
fs
mov
jb
rcll
and
xor
cmpsl
xchg
sbb
pop
sahf
dec
inc
pop
adc
push
pop
mov
or
lds
sbb
cmp
add
cld
dec
in
lahf
adc
out
pop
cmp
movsb
repz
push
cmp
leave
pop
fisttps
jb
repz
xchg
pusha
jmp
ret
js
outsb
jl
push
xchg
in
push
into
sbb
shll
push
push
lods
out
adc
and
add
inc
mov
push
mov
outsl
popf
adc
les
addr16
push
sub
ret
pop
mov
push
enter
push
pop
lea
enter
test
inc
jl
stos
jecxz
dec
or
sub
dec
jg
in
notl
mov
jmp
lock
cmp
adc
test
mov
jg
push
xchg
cmc
and
cmpb
jnp
push
fnstcw
adc
sub
sbb
pop
scas
push
jl
push
sbb
sub
push
pop
sub
inc
cmp
xchg
enter
xor
aas
test
ret
cmpsb
push
cmp
outsl
or
or
cmp
xor
and
cmp
cmp
stos
cmpsl
mov
jns
push
es
and
mov
and
inc
push
test
movsb
adc
mov
mov
dec
pop
ds
pop
out
xchg
insl
test
lret
push
pop
inc
js
adc
or
cmp
and
mov
fmull
in
jae
push
test
pop
mov
in
in
or
sbb
lods
cmp
fs
outsl
mov
lds
cmp
lahf
sbb
adc
iret
add
orb
jmp
ljmp
out
shr
xor
mov
imul
addr16
jg
sbb
outsl
ret
stos
or
outsb
dec
xor
xchg
dec
mov
mov
inc
adc
test
mov
sbb
scas
jns
mov
jle
movsl
push
push
cmp
cld
mov
pop
loopne
cs
mov
cmp
mov
testb
mov
mov
pop
pop
xchg
mov
and
mov
mov
rcl
jae
fsts
cwtl
cmp
sbb
sub
mov
mul
mov
pop
test
push
push
adc
cs
xor
int
es
xchg
inc
push
stos
mov
or
xchg
je
scas
adc
into
push
out
lods
add
push
insw
add
xchg
dec
leave
insb
mov
jmp
repnz
aad
popf
mov
sbb
xchg
pop
out
cld
and
mov
lods
ret
inc
ret
fistps
sahf
dec
mov
xor
mov
iret
and
lcall
in
lcall
es
dec
stos
mov
jno
test
and
rol
adc
fucom
les
cmpps
loopne
mov
dec
pop
mov
adc
ret
mov
push
ficoml
sahf
sub
cmpb
xlat
mov
add
push
ds
sbb
fists
test
inc
jae
sbb
adc
call
xchg
mov
mov
pop
mov
enter
cltd
adc
xchg
scas
add
out
ret
push
sti
in
dec
or
fcmovnbe
mov
fldcw
fistpl
mov
pop
or
int3
and
add
jae
std
roll
in
stos
ds
imul
sub
nop
imul
mov
xchg
test
idivl
mov
jbe
lea
shlb
add
in
cmp
pshufw
adcb
pop
dec
pop
mov
cvtps2pi
and
pop
ss
in
xor
shrb
xlat
call
or
cmp
in
mov
xchg
push
and
mov
rol
jge
push
int
push
push
sub
popa
shlb
lock
push
cld
mov
dec
es
jge
sub
clc
jns
daa
or
mov
scas
sarb
and
sub
cmpsb
xor
scas
cmpb
jns
or
icebp
and
in
rcrb
jle
sub
mov
mov
mov
fsubrs
pop
and
cli
stc
dec
mov
call
jae
mov
adc
jge
sub
add
idivl
jbe
jns
sbbl
inc
dec
notl
ret
push
sbb
sub
cmc
jge
stos
lret
sub
xor
inc
inc
mov
push
sahf
and
xor
sbb
jo
inc
shlb
stos
add
leave
icebp
mov
cmp
scas
dec
xlat
js
push
incl
das
jne
mov
ljmp
pop
insl
and
mov
ja
iret
mov
lahf
mov
dec
rcl
xchg
push
pop
xor
xor
jns
ljmp
lahf
in
sahf
hlt
outsb
cs
cmp
adc
push
in
mov
pop
ss
out
insl
xor
divl
xor
and
xchg
jnp
in
movsl
inc
push
shll
push
rcrb
ss
adc
std
pop
dec
xor
jno
xchg
jnp
add
nop
lcall
es
dec
dec
ret
jnp
icebp
subb
lret
stc
sbb
mov
lret
jne
inc
imul
fmul
jbe
sub
pop
out
mov
sbb
aad
cmp
pop
in
cmpsb
jno
sarb
inc
mov
lods
int3
aaa
dec
pop
lahf
clc
arpl
push
test
adc
mov
imul
cs
jbe
insl
inc
cmp
lea
jns
pop
cmpsl
pop
ret
xor
jo
test
xchg
jo
or
std
imul
dec
js
cwtl
stos
add
verr
in
inc
roll
jb
xor
pop
lea
lcall
ds
pop
mov
push
loopne
mov
test
and
enter
adc
add
outsb
mov
or
mov
mov
mov
in
xor
js
les
mov
mov
ljmp
scas
inc
xchg
subl
icebp
push
inc
dec
inc
dec
in
mov
subb
sub
fcompl
inc
mov
popa
fisttps
scas
sbb
cmp
sbb
dec
ficoml
scas
ljmp
andb
insl
add
adc
or
fs
fs
inc
inc
sub
fwait
in
jecxz
enter
cmp
popa
xchg
incl
test
jmp
loop
imulb
cmc
or
leave
fwait
and
jle
lcall
jmp
jmp
and
stos
cmp
outsb
sbb
in
fisubl
stc
scas
xlat
xor
adc
cltd
call
lahf
pop
loopne
movsl
aas
push
mov
stos
sbb
test
bound
in
lret
mov
add
cmp
clc
sbb
dec
push
les
aam
push
repnz
arpl
dec
stos
mov
test
faddp
adc
mov
lods
inc
pcmpeqb
mov
push
inc
pause
repz
stos
sub
adc
xchg
imul
add
pop
jle
fadds
out
lahf
fstpl
inc
dec
addl
bnd
fidivrs
arpl
test
inc
cmp
in
mov
sbb
lret
mov
lea
dec
call
inc
pop
mov
cmp
in
sub
jecxz
sub
movsb
out
sbb
fucom
or
insl
jp
js
int
out
lcall
cmpb
repnz
sub
sahf
ret
hlt
jbe
cs
xchg
addl
xor
xchg
lods
fcomps
aad
jle
rorl
inc
inc
jl
imul
scas
loopne
push
addr16
jmp
ljmp
cld
inc
sbb
arpl
stc
shlb
lcall
enter
mov
jno
ficompl
xchg
out
push
push
dec
jne
xchg
hlt
nop
fstpl
add
add
les
pop
mov
jg
bound
stos
cs
lret
add
xchg
mov
and
push
jbe
daa
adc
sub
mov
movsb
pop
rorl
test
test
outsl
sbb
sub
hlt
test
clc
pusha
loope
mov
aas
and
sbb
jne
pop
jbe
mov
pop
hlt
sbb
iret
sbb
pop
mov
mov
fdivrs
cmpsl
sarl
fsubs
or
stos
push
jecxz
dec
shll
test
sbb
clc
dec
inc
loop
out
inc
xchg
mov
cmp
xchg
push
jp
push
or
lods
and
lea
mov
jno
sbb
sub
fisubs
out
sub
cmp
movsb
rcll
nop
ds
ret
inc
enter
inc
test
mov
push
sub
mov
mov
jne
scas
shlb
arpl
fst
cmc
out
xchg
in
adc
inc
or
and
xor
in
mov
stc
stos
fisttpl
int
pop
and
scas
mov
insl
enter
lods
fstps
scas
cmp
test
lea
out
mov
jbe
mov
adc
add
loopne
inc
xor
outsb
mov
loope
mov
sbb
cmp
xchg
jo
xor
mov
jbe
mov
aad
add
dec
xchg
xor
jnp
test
dec
jmp
icebp
push
xor
inc
in
adc
rorl
insl
sub
sub
ljmp
adc
inc
jle
jmp
in
test
sub
mov
ret
sub
sub
inc
mov
jne
ret
sub
sub
push
cs
add
es
in
pop
fcmove
fsub
in
jecxz
cmp
push
popa
pop
jo
inc
movl
mov
lcall
mov
push
out
repnz
jb
add
pop
imul
dec
scas
lret
push
push
cmpsl
cmc
adc
adc
scas
popa
in
xchg
jnp
movsl
sub
lret
adc
gs
xchg
in
pushf
cld
ljmp
and
or
jns
xor
stc
mov
cs
sarb
repnz
dec
xchg
pop
sbb
jge
fwait
jne
outsl
jno
je
jle
lahf
inc
dec
pop
xlat
ljmp
or
mov
mov
lahf
insl
hlt
mov
insb
mov
loopne
call
mov
push
leave
mov
xchg
sbb
imul
dec
pop
or
mov
mov
out
int3
or
xchg
lods
cmp
push
mov
adc
mov
loopew
sbb
jl
mov
mov
cmp
mov
shll
add
pushf
and
adc
mov
push
xor
orb
in
rcll
cmp
mov
push
nop
push
mov
jg
neg
jae
dec
mov
leave
mov
jnp
jb
mov
out
fdiv
xor
adc
movsb
mov
pop
popf
lret
std
lcall
insb
std
add
adc
cwtl
sub
scas
imul
out
dec
hlt
fucomp
ja
pop
cwtl
leave
sbb
rol
stos
pop
insl
cmp
mov
mov
mov
mov
mov
mov
mov
adc
sub
xor
mov
out
icebp
and
jg
inc
pop
addb
nop
lret
xchg
int3
mov
push
rcl
dec
adc
sbb
mov
loopne
xor
outsl
add
pop
push
pop
out
xchg
aaa
jno
xchg
jnp
int3
lcall
inc
mov
xor
mov
xchg
adc
std
or
out
cmp
data16
mov
cmp
dec
cltd
daa
movsl
dec
add
daa
in
sub
sbb
push
push
outsl
xchg
mov
sub
ljmp
xlat
and
dec
test
filds
fildl
loopne
sub
inc
or
add
scas
and
icebp
daa
or
sarl
je
cmc
andl
bound
mov
sub
lock
test
sub
dec
sub
imul
sarl
insl
push
jle
movsb
ljmp
dec
xlat
push
out
xor
push
icebp
and
arpl
int3
movq
imul
adc
pop
jmp
rclb
out
add
lcall
test
in
cmp
push
or
add
sti
loope
or
movhlps
cwtl
test
testl
sbb
jecxz
sbb
in
push
out
dec
adc
mov
adc
repnz
fldt
or
push
push
popa
clc
fcom
xchg
cmc
dec
cmc
xor
icebp
addr16
mov
sub
or
insl
enter
add
dec
mov
and
arpl
fsubl
mov
sub
dec
adc
aas
jg
daa
sub
gs
push
push
rcll
inc
sbbl
loop
sbb
lret
and
cmp
pop
cmp
mov
mov
mov
jg
test
mov
les
roll
inc
aas
rorl
aam
test
sub
xchg
xlat
rolb
dec
cmp
sbb
call
or
push
xchg
pop
dec
dec
xor
and
nop
filds
das
or
mov
enter
dec
lahf
xor
in
and
xchg
mov
mov
xor
push
cmp
mov
or
xor
sbb
pop
filds
pop
pop
mov
clc
dec
adc
scas
dec
pushf
mov
lcall
lcall
jp
dec
sbbb
mov
addl
dec
pop
pop
push
pop
out
les
gs
mov
push
xchg
sbb
sub
or
xchg
mov
push
scas
push
ljmp
cmpsl
push
nop
pop
lahf
stos
arpl
pop
stos
enter
and
sub
sbb
or
and
xchg
pop
or
loop
pusha
pop
mov
notl
jbe
das
and
sahf
xor
xor
movsb
pop
jnp
mov
add
lahf
cwtl
add
pop
pusha
sub
jno
jmp
fs
into
enter
and
inc
out
push
inc
dec
mov
outsl
xor
lods
cmp
das
jmp
fwait
jmp
pusha
fwait
nop
sub
rcrl
fdivl
inc
test
cld
int3
pop
gs
leave
fcomps
arpl
or
cmp
xor
imul
enterw
mov
cs
xchg
sbb
adc
adc
dec
dec
inc
aam
and
jbe
push
pop
mov
xor
les
or
ja
adc
stc
mov
jecxz
rcrl
jo
add
int
cld
add
insb
test
xchg
xchg
push
imul
aaa
jo
xor
sub
idivb
in
xchg
xchg
out
stos
pop
ror
pop
decl
cli
adc
jbe
fidivs
mov
add
sti
into
outsl
aad
jl
rol
ret
ret
xchg
add
sub
pop
jp
pop
and
ret
fwait
or
dec
jne
ljmp
inc
inc
dec
mov
aas
mov
hlt
aaa
add
push
mov
imul
lods
push
les
inc
mov
shlb
mov
aas
xor
push
inc
xchg
stc
adc
dec
pop
imul
sbb
aas
out
ss
arpl
push
ja
push
dec
jae
repnz
pop
sub
adc
test
ja
sbb
movsb
das
mov
lds
push
pop
or
pop
jle
test
jb
scas
pop
and
ss
inc
jns
mov
xor
mov
sbb
insl
push
adc
inc
jb
cmp
adc
repnz
xor
dec
xchg
pop
adc
add
or
out
add
pop
in
enter
inc
mov
mov
jge
repz
pusha
shrb
and
sub
jmp
mov
aam
ret
xchg
cmp
cmp
cmc
pop
push
mov
cmp
ljmp
cli
orb
adc
imul
rorb
fs
cwtl
out
mov
stc
inc
push
sub
sub
adc
sub
pop
xchg
mov
js
roll
fsubrs
aas
mov
std
mov
or
lods
stc
push
bound
sub
mov
in
sub
push
sahf
fiadds
in
jne
icebp
inc
mov
fisubrs
lods
fwait
push
xor
mul
mov
out
pop
and
push
ret
sbb
out
pop
xchg
or
jmp
push
icebp
mov
add
cwtl
xchg
cmp
andb
je
ret
or
rclb
push
imul
xchg
jmp
push
mov
mov
jmpw
sahf
xor
out
sub
ss
sahf
add
rcr
push
in
push
nop
mov
fdiv
nop
or
push
jns
pop
jmp
jle
icebp
push
xchg
out
push
sub
inc
xlat
pop
in
iret
push
shll
into
xor
ret
and
nop
test
xor
mov
cmp
pop
lods
andb
cmpl
popa
sub
es
pop
test
dec
imul
or
jb
add
test
ljmp
scas
cltd
out
call
or
push
popf
loopne
add
in
cltd
fstps
sbb
xor
or
jnp
sbbb
mov
rorb
insl
icebp
sbb
jl
xlat
xchg
jecxz
fsts
ljmp
inc
sbb
lods
mov
xlat
pop
mov
sti
jmp
imul
mov
lea
or
jo
mov
lods
jns
xor
xor
in
add
jne
pop
out
sub
dec
pushf
xlat
xchg
mov
sub
in
xorb
inc
pop
clc
lret
ret
fstl
add
addr16
dec
adc
cmp
mov
sub
cs
bound
or
sahf
cli
je
jmp
mov
js
cmovl
xchg
push
add
repnz
xchg
test
or
mov
jp
in
mov
pop
push
or
das
pop
fwait
clc
and
add
jge,pt
inc
mov
popa
and
pop
mov
aam
mov
xor
ljmp
pop
push
and
push
and
xchg
mov
inc
hlt
xor
dec
xchg
xor
push
mov
mov
sbb
std
out
xchg
inc
push
mov
fldl
aaa
push
jmp
out
out
xchg
inc
or
lds
test
hlt
insb
lret
push
cltd
ret
pop
lcall
cmp
aas
pusha
stc
mov
roll
lret
cmpsl
aas
in
and
aam
out
mov
mov
lods
pushf
pop
add
movsb
mov
mov
mov
sbb
push
dec
leave
push
les
pop
push
fisubrl
hlt
mov
pusha
xchg
push
js
mov
xchg
push
cmp
and
push
jne
ss
add
bnd
shll
imulb
xchg
fisttpl
cmc
in
xchg
cld
shlb
adc
add
mov
loopne
inc
cmp
jp
shrl
ret
test
jecxz
rclb
mov
jnp
cmp
fmuls
lret
or
std
mov
or
lret
mov
jle
lods
cmp
orl
aas
loope
pop
lahf
fcomp
enter
add
fdivl
push
addl
push
loope
and
jmp
or
loope
decl
push
and
in
mov
jle
or
test
push
out
ret
fsts
fistl
mov
dec
inc
in
jbe
loop
popa
sbb
lds
adcl
mov
int
cld
xlat
gs
sub
cmp
orb
dec
mov
xchg
sbb
mov
cmp
cs
mov
or
stos
mov
mov
pop
je
fnsave
inc
fisubl
mov
pop
and
mov
jecxz
lret
scas
fwait
cmpsb
jne
outsl
call
pop
repnz
push
pop
pop
enter
cmp
scas
call
test
pop
roll
hlt
and
or
xor
jg
push
mov
sbb
loope
fiadds
pop
sub
les
push
push
ljmp
lods
cs
push
shrb
shll
mov
xorb
imul
and
les
repz
insb
sahf
mov
std
mov
setne
mov
push
rolb
mov
ljmp
movsl
cmp
loop
inc
xchg
cmp
or
flds
pop
jp
dec
and
loop
outsb
pop
jae
add
test
xchg
mov
mov
addr16
les
pop
cmpsb
stc
gs
add
dec
stc
in
sbb
push
cmpsl
inc
fdivrp
and
dec
xchg
pop
mov
mov
inc
push
xchg
xor
incb
inc
push
sub
xor
ljmp
xchg
xor
ret
xchg
push
cmpb
lret
adc
pop
loopne
arpl
enter
jp
stc
push
movsl
push
xchg
xor
in
add
les
rclb
mov
int3
push
test
aas
xor
push
mov
or
xor
jmp
mov
jne
and
testb
dec
sbb
jge
inc
push
add
aas
data16
out
lret
inc
sbb
fwait
lcall
cltd
movsb
xor
adc
ds
lret
popf
das
add
je
pop
jp
sti
mov
cmp
je
adcb
nop
loope
push
jns
and
in
pop
sbbb
icebp
adc
ret
hlt
cwtl
cwtl
jae
loop
mov
dec
sub
pop
pop
lcall
dec
cld
mov
mov
fstl
sub
mov
mov
gs
sub
mov
xchg
xor
and
cli
jo
movsl
cmp
push
cwtl
scas
xchg
and
das
fcoms
outsb
adc
jbe
out
push
addr16
pop
xor
mov
add
std
rcpps
cmp
imulb
shrb
int
mov
jae
mov
push
mov
mov
sti
inc
pop
ja
add
aam
lea
xchg
adc
sub
popa
bound
inc
in
xor
ja
jge
lret
mov
jns
pop
sbbl
faddl
jmp
mov
and
jne
dec
hlt
dec
jl
sbb
insl
inc
adc
cli
push
xor
nop
ljmp
repz
push
xor
jp
and
mov
xor
cltd
jns
mov
repnz
jge
pop
sub
mov
add
cvtdq2ps
rcr
idiv
xor
in
or
orb
mov
out
out
push
inc
mov
enter
aad
nop
dec
adc
jne
je
hlt
dec
sbb
out
pop
inc
dec
in
ret
and
imull
push
xor
inc
jns
ss
test
jmp
jae
xchg
xchg
hlt
dec
out
add
or
push
sub
sub
mov
fs
pop
ss
ret
sbbb
xchg
cli
imul
jns
mov
lcall
into
fisttpl
sbb
enter
pushw
rol
insb
push
or
mov
inc
fwait
jb
ret
data16
scas
xor
fdivrl
mov
stos
gs
inc
mov
and
fsubrs
sub
dec
orl
pusha
outsl
cwtl
inc
mov
repz
mov
movsl
test
aaa
sti
mov
or
mov
cmp
orb
ds
scas
dec
jg
nop
stos
subb
lock
nop
add
add
xor
popw
jns
cmp
test
adc
lahf
pop
out
clc
and
hlt
xchg
mov
aas
stos
inc
test
dec
push
sub
mov
sbb
insl
mov
mov
andb
in
add
andl
dec
push
cmpb
or
rorb
bound
roll
insb
adc
lret
stos
mov
mov
adc
daa
call
push
mov
mov
insl
movb
xchg
pop
in
fcoms
push
push
ljmp
mov
imul
dec
lods
push
decl
sbb
jg
jno
mov
test
mov
repz
lods
or
mov
inc
mov
pop
cmp
data16
dec
lods
jo
arpl
popl
sti
es
fwait
stos
stos
stc
mov
imul
dec
push
insl
fwait
or
xor
mov
adc
rcrl
fadd
inc
int
sbb
jmp
test
mov
int
sub
mov
mov
loopne
fisttpl
sbb
movsb
stos
mov
dec
cmp
push
and
ret
mov
jp
jnp
sub
or
or
jne
adc
inc
adc
js
xor
ljmp
int3
xchg
cmp
repnz
and
xor
mov
sub
pushf
push
cmp
cli
ja
mov
loopne
int3
mov
xchg
shrb
add
fstpt
iret
shrb
das
mov
jbe
lret
mov
js
inc
pushw
sub
push
sub
rorl
in
xchg
frndint
test
sbb
rclb
mov
ret
push
mov
add
jp,pn
mov
dec
mov
pop
jo
pusha
pop
fimuls
inc
adc
jmp
mov
jnp
push
or
fldenv
mov
mov
mov
leave
bound
xor
int
mov
inc
pushf
jnp
stc
sub
xor
xor
xchg
shll
sbb
xchg
add
es
in
sub
or
repz
std
in
jb
pop
push
add
cmp
sti
or
pop
mov
xor
rcrl
out
dec
push
mov
int3
rorb
fwait
dec
scas
imul
lcall
cli
inc
xor
cmp
cmp
into
in
pop
mov
sub
ds
inc
fadds
rol
dec
push
mov
sbbb
xchg
mov
icebp
fwait
xlat
cmp
push
mov
daa
or
mov
mov
mov
ficomps
add
outsb
clc
pop
pop
lods
jl
xchg
jecxz
mov
cltd
notl
leave
push
jbe
fldenv
xchg
dec
pop
lods
push
adc
sti
outsb
mov
cli
out
sub
jnp
mov
dec
call
inc
stos
sbb
mov
push
sbb
inc
sbb
and
jbe
es
jbe
jg
popf
dec
outsl
xchg
sbb
fstl
test
lds
rcll
xchg
stos
or
dec
shlw
xor
stc
add
test
rorb
and
mov
ret
xor
repnz
sub
xor
pop
inc
xor
addr16
push
cmp
rol
or
test
jle
jae
rcr
dec
out
loopne
xor
pop
push
pop
insb
dec
mov
es
add
mov
mov
test
popa
mov
nop
mov
or
sub
cmp
push
dec
xchg
mov
jno
iret
add
imul
imul
cli
mov
push
fcom
lcall
call
ret
sahf
shl
leave
mov
cmpb
jbe
test
mov
jne
or
ss
jno
stc
mov
inc
inc
jl
push
mov
int
mov
ror
sub
mov
dec
cmp
push
clc
fwait
mov
popf
xchg
mov
loop
cmp
cmc
pop
into
and
xchg
mov
and
jmp
sub
xchg
enter
cli
outsb
rcr
pop
fwait
std
adc
fdiv
pop
imul
aam
fbld
push
orb
scas
jg
lods
clc
inc
stc
adc
cmc
adc
add
out
jnp
sub
push
je
fisubrs
dec
jp
adc
pop
cmp
fs
adc
mov
mov
add
cltd
outsb
arpl
movb
adc
js
mov
dec
mov
sbb
shrb
pushf
push
xchg
andb
xlat
imul
mov
pop
cmc
sub
mov
iret
mov
mov
in
ret
adc
and
dec
int
lea
inc
mov
jb
dec
fiadds
stc
test
pusha
lret
loop
jecxz
and
adcl
lahf
dec
test
inc
imul
jl
sbb
xor
test
ljmp
rolb
jnp
fcoml
add
addb
out
xor
and
mov
push
lods
jle
jge
cmpsb
repz
fs
jmp
push
sbb
dec
bound
jl
clc
int
add
outsl
push
dec
fs
test
jmp
dec
cmpsb
mov
subb
repnz
jge
outsb
cmp
adc
jle
std
mov
movsb
dec
nopl
inc
popa
addr16
adc
jne
fcmovne
mov
cmp
loop
or
jecxz
outsb
sbb
ss
mov
mov
and
inc
fists
pop
lcall
negl
shlb
jge
hlt
insb
add
ret
push
popf
xchg
xchg
adc
icebp
cwtl
pushf
fisttps
stc
add
cmp
sbb
cmp
neg
decb
pop
xor
and
xchg
sub
sarl
mov
in
jno
cmp
xor
out
ja
pop
pop
push
pushf
into
cmp
hlt
outsb
int3
mov
or
or
mov
scas
dec
out
push
or
push
or
mov
cmp
lods
in
mov
xlat
lock
insb
sub
divl
mov
stos
lods
shl
aam
adc
pop
es
les
fs
or
scas
push
outsl
fdivl
dec
lds
and
xchg
ja
and
cs
mov
shlb
lock
movsb
call
lea
mov
popa
insb
test
mov
lods
sbb
aad
xchg
mov
out
push
mov
mov
xchg
xor
push
pop
sub
push
repz
lcall
xlat
sarb
inc
dec
pop
subb
cli
jns
aam
imul
xchg
cwtl
jbe
jp
enter
cmpsb
outsl
mov
sub
or
jo
mov
mov
popf
inc
pop
out
cmp
insl
cld
and
leave
inc
test
mov
rcrl
sbb
fsubrl
pushf
push
mov
test
popa
cmp
and
sbbl
hlt
inc
inc
mov
mov
sub
sub
sub
push
jae
test
inc
test
arpl
mov
jecxz
mov
xchg
ret
mov
mov
or
mov
lods
sbb
dec
xor
xchg
lods
or
std
in
mov
cli
mov
ficoml
mov
or
movsl
adc
sti
and
dec
jns
movl
jg
test
cmp
mov
lock
or
add
aas
xchg
jo
icebp
jne
lahf
aad
jle
pop
outsb
cwtl
ret
fsts
mov
popa
push
adc
cmp
and
pop
xchg
stc
scas
fs
scas
scas
insl
outsb
xor
shr
add
mul
enter
movsb
push
jecxz
into
mov
mov
test
xchg
mov
aaa
mov
addr16
or
testb
cmp
ss
pop
cli
jecxz
mov
lock
ljmp
lret
pop
mov
imul
in
pop
sbb
ljmp
sbb
iret
xchg
mov
xchg
push
inc
xlat
clc
bound
inc
test
mov
imul
sbb
inc
dec
inc
jp
scas
sbb
into
xchg
inc
lds
push
add
into
inc
cmpsb
push
mov
adc
pop
dec
jg
xor
test
mov
int3
sbb
adc
ret
inc
dec
filds
inc
cvtpi2ps
stos
mov
fisttpll
and
push
loopne
fildl
imul
subl
jnp
repnz
jb
out
adc
cmp
ljmp
inc
jp
mov
mov
jae
jno
dec
fwait
jecxz
xchg
testb
mov
and
mov
fwait
and
mov
pop
push
adc
jne
inc
cld
inc
ret
stc
test
repnz
in
jae
xchg
int3
push
pop
lods
rcrl
mov
lds
jo
andb
leave
add
push
mov
xchg
movsb
es
push
add
movsb
nop
aam
adc
test
xor
sti
cmp
cmp
and
inc
lret
fwait
dec
ret
test
pop
repnz
xchg
adc
cmp
mov
arpl
jg
insl
mov
lcall
add
scas
enter
flds
mov
popa
rolb
int
dec
or
and
aas
sbb
shll
adc
lcall
loopne
lret
ret
sbb
addb
into
inc
and
andl
ja
xchg
push
adc
mov
shll
fdivl
xor
dec
add
cmp
out
xor
jbe
cmp
lret
add
ror
lock
data16
cld
push
sarl
pushf
push
adc
or
stos
xchg
inc
dec
push
ss
and
and
mov
mov
push
xchg
xor
nop
stc
jmp
dec
fcomps
dec
enter
inc
das
and
fbld
lret
fsts
inc
ret
sbb
dec
sub
data16
lds
into
pusha
or
add
xor
faddl
mov
iret
shll
aaa
rcl
sbb
push
push
mov
mov
xlat
fstpl
jne
mov
cltd
or
clc
sbb
pop
iret
mov
mov
and
sub
sub
push
mov
scas
je
cmp
stos
push
out
in
shrb
daa
or
mov
mov
dec
stos
pop
cmpsb
and
mov
popa
cmp
inc
popa
sub
xchg
jecxz
std
jmp
leave
add
cmpsb
push
xchg
lods
mov
outsb
sub
sahf
add
sbb
and
xchg
out
mov
insb
fsts
movsl
lock
xchg
adc
sti
push
pop
dec
repz
fisubl
pop
xchg
push
cltd
pop
mov
ss
sbb
xlat
paddsb
xchg
roll
jle
fmulp
cli
lcall
xchg
je
scas
popa
lods
je
mov
jmp
or
call
iret
jp
punpcklwd
mov
xor
push
adc
sbb
fidivl
push
add
xchg
mov
mov
or
arpl
stc
sbb
pop
mov
or
test
out
pop
add
push
rcrb
or
das
sahf
and
pop
push
cmp
cmpsb
aas
ljmp
dec
push
je
cmp
xor
mov
jp
cmp
and
std
fcomps
jg
and
sub
xchg
enter
jmp
addl
out
add
lret
lds
and
mov
add
popa
mov
cltd
lret
insb
fucom
icebp
ljmp
pop
std
inc
das
or
aas
sub
lahf
mov
cmp
pushf
shrb
test
jbe
movsb
mov
stc
fstpl
jp
int
pusha
outsb
dec
int
out
popa
fstenv
sub
stos
sbb
push
push
test
sahf
pop
shrl
push
xchg
xchg
lods
loopne
pop
jp
pop
xorl
rcrl
add
inc
jecxz
std
xchg
add
and
sbb
add
clc
jmp
cwtl
and
push
and
pop
mov
mov
xchg
or
jo
mul
push
pop
pop
push
xor
xor
push
rorb
mov
sbb
lock
fcomps
das
ja
xor
js
mov
or
push
inc
pusha
jp
cmp
into
leave
ret
xor
xchg
cmp
scas
rcrb
in
rcrb
fwait
push
into
adc
ficoms
popa
add
dec
or
xor
jp
add
and
out
and
mov
sahf
in
mov
idivl
and
sbb
popa
js
xchg
int3
test
xchg
mov
testl
and
jg
xlat
lock
inc
jp
pusha
cmc
ret
lods
push
mov
ror
push
push
shrb
subb
xor
cmp
xor
cmpsl
push
cmp
cmp
push
pop
cmp
jg
movd
cs
repz
jecxz
lods
mov
fwait
or
xchg
inc
enter
mov
jne
or
divb
lcall
push
pop
das
add
push
filds
mov
fidivrs
popf
push
cmpsb
pop
cmpsl
mov
adc
pop
add
out
in
add
test
mov
mov
cltd
outsb
push
repnz
icebp
xchg
pop
push
xchg
iret
xchg
mov
iret
lcall
jo
or
icebp
sbb
loop
pop
fsubrs
and
sub
addr16
lret
js
jg
addl
dec
lods
xchg
jmp
popa
inc
or
bound
into
mov
xor
das
repnz
jge
jmp
sbb
jne
test
add
sbb
jae
xor
dec
sarb
mov
mov
or
jle
stc
repz
sub
cltd
push
cmpsl
jns
in
or
rcl
jb
popa
push
call
push
lock
imul
cwtl
movsl
addl
mov
cmpsb
test
sbb
ret
push
repnz
pop
stos
mov
push
mov
pusha
movsl
mov
sub
popf
jl
out
hlt
jne
jo
loopne
enter
stos
mov
jne
cwtl
add
push
and
pop
dec
adc
or
inc
push
adc
outsb
test
clc
ret
in
lret
or
inc
sbb
aas
xor
sbb
cmovb
decb
xchg
adc
scas
add
pop
test
iret
nop
lcall
dec
out
adc
addr16
fbstp
mov
daa
cwtl
jle
lahf
ret
mov
je
ficompl
dec
fcompl
ficomps
pushf
int
adc
sbb
fwait
xor
sbb
ds
adc
sbb
or
pop
xor
sub
add
loop
dec
in
add
mov
cmpsb
pop
pop
pop
adc
xchg
cmp
repz
mov
fsubs
mov
loopne
mov
and
cs
das
rcrl
xchg
xor
xchg
gs
ficoml
adc
adc
imul
or
cmpsl
or
aad
leave
fnstenv
repnz
pop
lods
imul
add
pop
mov
jecxz
lret
loopne
push
mov
test
sub
fs
inc
mov
ja
inc
push
or
subb
mov
xchg
inc
or
push
lea
xlat
push
mov
push
jmp
enter
ret
mov
into
in
push
or
fs
test
insb
sti
xor
ss
or
out
pop
mov
mov
pop
sbb
xlat
adc
jb
jb
scas
ss
sub
gs
mov
push
sbb
subl
ja
jmp
pusha
mov
jbe
fcompl
adcb
out
and
mov
pop
mov
outsb
repnz
out
pop
sbb
push
xchg
inc
mov
bound
or
pop
and
add
sarb
shl
adc
out
xchg
bound
mov
aas
and
call
adc
stos
gs
xchg
out
push
rcr
leave
pop
mov
mov
imul
cs
scas
mov
xchg
dec
push
sti
aam
inc
sbb
stc
inc
inc
push
addr16
push
mov
cmpsl
pop
test
sarb
test
fcoml
inc
xor
jmp
mov
lds
or
add
sarl
adc
sbb
and
pop
insb
imull
dec
sbb
mov
dec
fidivs
sbb
inc
cmp
dec
mov
mov
pop
cmp
int
dec
imul
mov
add
sbb
les
adc
and
pop
scas
fcoms
cmp
test
ja
and
mov
in
pop
sub
jmp
stos
cmp
movsb
pop
nop
fbld
outsb
in
loopne
stos
pop
leave
jo
out
bound
mov
arpl
out
pop
ds
xchg
push
sbb
mov
mov
xor
mov
jne
daa
loop
enter
sub
das
inc
jl
outsb
or
xchg
cmp
js
xchg
in
sub
or
xor
xchg
add
and
jo
push
ds
enter
or
jno
pop
fcoml
mov
jmp
push
adc
dec
imulb
sub
nop
arpl
loopne
and
mov
pop
inc
cltd
fcoml
sub
and
and
or
or
sbb
xchg
jo
adc
xchg
lds
xchg
ret
cmpsl
aad
add
mov
aad
xor
popf
pop
jnp
gs
add
sub
ljmp
stos
xor
sbb
scas
fldcw
adc
imul
movsb
add
mov
lcall
rcrb
mov
insb
xchg
sbb
push
cmp
add
cmpsb
or
and
scas
out
push
dec
je
enter
lods
jo
or
xor
lds
movsb
cs
aaa
scas
mov
or
dec
dec
xor
mov
insl
lock
ja
js
lcall
pop
fbld
mov
in
das
scas
jmp
sbb
pop
jmp
inc
dec
cmp
aam
push
pop
lock
push
test
mov
cmp
sub
inc
ljmp
add
xor
addr16
xlat
out
test
movlps
xor
dec
dec
int
imul
inc
add
lock
inc
xchg
jmp
int3
cli
inc
ret
stos
enter
lock
pop
subl
dec
test
pop
loope
xor
inc
jp
in
push
add
jns
pop
jno
adc
sbb
loopne
out
xlat
out
inc
or
cmp
mov
or
add
pop
leave
loopne
aas
push
xchg
std
xor
jno
jnp
in
popa
inc
adc
pop
gs
or
mov
pop
jle
dec
imul
cli
cli
sahf
xchg
lods
daa
leave
cmpsb
push
xor
int3
fsts
int3
jg
clc
jnp
arpl
sbb
inc
dec
push
mov
pop
sub
fs
or
push
mov
jne
jbe
icebp
mov
inc
lods
in
aam
and
sub
add
rorb
push
mov
fs
stos
inc
inc
add
js
insb
nop
imul
pop
sub
adcl
aaa
imul
rclb
or
popa
adc
inc
and
aas
cmp
or
dec
ret
loopne
jbe,pn
loop
and
dec
cltd
xchg
mov
or
adc
mov
ljmp
xor
popf
stos
stos
add
shrl
movsb
addl
int3
call
cmp
pop
jmp
adc
adc
pop
in
add
call
and
scas
int3
js
ljmp
or
push
sbb
jb
lock
cmp
enter
jg
lds
pop
xchg
stos
adc
pop
ja
add
xor
mov
fbstp
jp
rcl
insb
test
push
inc
pop
jg
std
loopne
pop
and
dec
mov
jno
xor
lcall
cmc
stc
ret
lods
ja
cmc
ja
hlt
shll
test
pop
push
notb
pop
shrb
add
cmp
inc
mov
aaa
sti
push
inc
mov
mov
jmp
inc
ja
inc
icebp
test
les
sub
bound
mov
sbb
mov
mov
sahf
subb
add
sub
scas
mov
sti
and
mov
mov
test
in
adc
adc
sbb
cmp
sbb
inc
add
add
fucom
push
mov
mov
dec
mull
stos
cwtl
mov
jns
mov
test
mov
stc
je
push
cmpsl
mov
xchg
cmpsl
std
dec
fildll
mov
roll
pop
xor
ljmp
and
inc
jne
mov
ficompl
sub
jl
add
fsts
fcomps
sub
jns
dec
or
data16
xor
push
pushf
shll
cwtl
jno
cli
das
arpl
jl
insb
ret
subb
xchg
lea
cli
ror
jmp
inc
iret
div
mov
jno
cltd
jae
out
dec
mov
jle
insb
sbb
popl
gs
jno
out
bnd
cmp
fdivrp
cmp
and
or
inc
stc
push
pop
jno
ret
mov
push
mov
push
ja
and
in
clc
push
popf
or
cmpsl
and
sbb
outsl
and
or
and
push
pop
nop
xorb
arpl
jae
insl
jo
xor
push
pop
rolb
icebp
pushf
mov
fucomp
mov
bound
jge
adc
sbb
adc
out
leave
in
insb
xchg
add
mov
cmpsl
jns
or
roll
adc
rcll
outsl
mov
in
jae
push
rorl
jp
mov
and
insb
xor
and
dec
sbb
add
mov
insl
mov
sahf
add
push
jmp
cmp
and
test
and
fbstp
adc
mov
xor
xchg
fs
push
xchg
xchg
icebp
xor
or
add
enter
jmp
push
mov
inc
or
mov
and
outsl
and
repz
arpl
fs
ss
xor
dec
jle
mov
mov
or
lds
test
xchg
ds
stos
or
lods
push
test
dec
cmp
inc
lret
inc
jne
pop
adc
cmpsb
js
adc
lret
pop
mov
dec
adc
popa
andl
lret
cltd
call
test
xlat
xchg
outsl
jge
mov
int3
jo
cmp
xor
lret
jns
leave
pop
or
adc
dec
push
aaa
push
jle
aas
dec
inc
xor
or
in
dec
hlt
pop
sub
xor
icebp
or
xor
lods
mov
mov
pop
xor
mov
adc
hlt
popa
dec
insl
mov
in
sbb
mov
daa
jns
and
xchg
outsb
mov
ficomps
xlat
sub
xchg
les
mov
dec
cld
stos
xor
or
inc
ja
fimull
insl
push
jae
pop
pushf
hlt
fcom
lock
push
out
mov
aas
test
or
lods
mov
cmpl
ret
je
adc
addb
out
push
push
fstpt
lret
mov
aas
les
mov
cmp
inc
pop
or
les
sub
xchg
pop
or
sub
rolb
into
sub
dec
jp
xor
adc
mov
cmc
movsb
mov
lcall
adc
jae
add
pop
cwtl
imul
sbb
push
pushf
jecxz
or
sti
out
repnz
cli
mov
loop
nop
aaa
pop
popa
sti
and
gs
mov
cld
aas
ljmp
mov
push
push
mov
jmp
jns
incl
pop
jns
xchg
sbb
jecxz
pop
test
popf
mov
test
out
jmp
std
and
xchg
inc
xlat
imul
rorl
popf
jo
mov
xlat
cmc
fildll
sets
cmp
xchg
lods
mov
pop
pop
in
icebp
adcl
push
iret
and
mov
rorb
insl
jp
rcl
mov
icebp
push
sbb
hlt
xor
mov
pop
mov
clc
adc
cwtl
xor
xchg
popf
sbb
xchg
add
jns
pop
ss
filds
pop
mov
push
cmpsb
push
mov
sarl
xchg
aas
cmp
icebp
and
fildll
fnstsw
add
cwtl
xchg
xchg
or
arpl
mov
mov
lea
ja
inc
dec
or
daa
dec
inc
inc
push
fimuls
repnz
adc
push
pop
inc
add
leave
adc
cmp
sub
jno
add
loop
sahf
inc
rolb
add
pop
and
andl
stc
out
imul
lods
mov
mov
fnstsw
cmpsb
cli
repz
loopne
fimull
test
lods
and
das
in
xchg
fimull
stos
or
push
mov
iret
int3
stos
xorl
test
mov
hlt
mov
popa
pop
jno
push
sti
in
pop
pop
adcl
push
inc
test
sbb
inc
xlat
xchg
je
mov
sbb
mov
dec
push
mov
rorb
repnz
fisubrs
xor
pop
and
mov
sub
push
xor
jb
rcrb
aaa
paddsb
outsb
mov
jae
ret
repnz
cmp
and
mov
sub
fcomp
mov
or
pop
sti
movsl
les
fildll
mov
repz
in
sbb
mov
and
or
push
xor
push
stos
std
inc
cmp
or
rcl
repz
or
mov
sbb
outsb
sar
aam
xlat
jl
out
pop
pop
mov
dec
cmc
sbb
mov
add
inc
cmp
loopne
jp
hlt
je
and
dec
stos
rorb
mov
sbb
stos
ret
mov
mov
aas
decb
mov
push
leave
add
popf
xchg
repnz
adc
cmp
ss
lds
sub
sub
jo
ljmp
scas
faddl
pop
xor
ljmp
mov
pop
cmpsb
lods
inc
mov
xchg
pop
call
or
dec
or
adc
dec
test
and
cli
lcall
outsb
add
gs
movsb
jno
mov
dec
inc
jle
mov
sahf
lret
faddl
push
adc
xchg
arpl
sbb
call
insl
inc
cmp
adc
push
imul
ja
in
insb
adc
loopne
fisttps
mov
sbb
pop
incb
cmp
repz
popf
adc
jbe
sti
or
lods
push
aas
push
fmul
movsb
and
inc
clc
out
imul
jge
add
pop
mov
das
jne
jl
cmpsb
lds
cltd
jge
jmp
xlat
pop
lds
adcb
xlat
jnp
cltd
scas
shlb
jmp
push
xor
cmpb
push
mov
je
jae
repz
adc
ret
mov
inc
push
mov
pop
xchg
pop
imul
cmpb
or
std
in
popa
test
in
dec
adc
imul
xor
cmp
jge
dec
mov
sub
in
push
push
mov
and
pushl
hlt
bound
andl
add
cmpxchg
rcr
rcrb
sbb
jne
xchg
orb
mov
inc
cmp
jbe
repnz
ror
or
repnz
dec
mov
xorl
dec
fnsave
sbb
rcr
jle
mov
lock
mov
jg
std
jne
jb
iret
mov
mov
ret
xor
test
imul
les
cmp
sub
loop
mov
imul
push
xor
inc
psubb
mov
rcr
fidivs
or
mov
lret
sbb
ja
cld
dec
push
and
mov
movsl
scas
inc
cmp
lods
adc
test
cltd
pushf
out
and
pop
push
cmpsl
jb
push
addl
xor
cltd
adc
fstpl
push
in
fisubs
push
and
vhsubpd
pop
mov
inc
jb
hlt
mov
mov
push
popa
mov
loopne
dec
and
icebp
daa
daa
dec
loopne
pop
cwtl
xchg
dec
and
sbb
enter
aam
dec
jge
adc
jge
inc
pop
xor
mov
test
mov
inc
adc
push
add
jb
mov
push
jmp
lods
push
cmp
orl
push
fs
les
aas
dec
mov
repnz
pop
sbb
stc
test
sub
mov
lea
push
sti
cld
jle
fdivp
jp
cmpsl
aam
mov
pop
mov
je
pop
and
cmpsl
sbb
lods
add
testl
shll
jns
insl
adc
push
pop
add
je
or
lock
jl
push
xchg
sbb
loopne
shrb
xlat
test
stc
int
and
cs
inc
bound
aad
mov
es
jns
lcall
sub
insl
sbb
icebp
cmp
pop
stc
add
xchg
and
mov
imul
repz
jg
push
cmpl
in
cmpsb
ret
sub
popf
and
iret
mov
es
add
mov
out
sbb
mov
lret
lds
shll
sbb
repz
sub
mov
mov
jecxz
xchg
xchg
outsl
stos
daa
fnstenv
cmp
push
out
rcl
ret
fdivs
dec
ret
xor
dec
xchg
in
and
mov
xchg
sbb
mov
xor
mov
and
pop
sub
das
xchg
cltd
push
mov
pop
std
xor
cmc
ja
aas
cli
sar
stc
xchg
insb
cmp
xor
push
cmpsl
ret
rcrl
dec
push
out
ret
fmull
add
pusha
jl
pushf
mov
inc
cmpsl
in
inc
push
sub
push
inc
mov
cmp
sub
push
int
mov
sahf
pop
and
jmp
scas
push
sub
xor
xchg
ss
out
test
or
test
insb
or
sbb
cli
xchg
enter
loopne
clc
ss
xor
sbb
mov
cwtl
rorb
cwtl
or
jecxz
andb
into
and
les
jbe
cmp
adc
jmp
vpmaddwd
arpl
jo
loope
stc
jp
les
mov
out
lods
adc
and
xor
xchg
movsl
lock
mov
mov
enter
andl
movsb
outsl
das
add
mov
mov
mov
xor
jne
push
fildll
or
outsb
iret
shlb
fiadds
imul
cmp
out
test
jbe
dec
push
xor
stos
mov
rcl
pop
fs
jnp
push
mov
xor
mov
dec
mov
shlb
sti
popa
mov
mov
fisttpl
sbb
lret
mov
jb
repz
in
lock
test
sarb
xorl
dec
push
jbe
mov
sbb
stos
dec
cmp
xor
lods
push
pop
xchg
sub
dec
lret
jle
adc
hlt
sbb
mov
out
test
repnz
je
stos
xor
pop
shl
inc
mov
pop
or
loop
jnp
cmpsb
mov
adc
adc
ret
inc
push
mov
add
push
fwait
pop
shrl
mov
xor
xchg
scas
dec
loopne
push
les
sarl
in
or
ljmp
inc
add
xor
cmp
ss
scas
in
and
gs
stc
xchg
pop
mov
mov
sub
adcl
xor
mov
sbb
push
lds
je
mov
pop
xor
push
pop
adc
inc
in
je
cmpl
or
les
mov
ss
into
rcll
push
mov
jle
sub
jp
pop
nop
xor
add
inc
jge
insl
clc
inc
mov
and
rclb
pop
sahf
mov
ret
in
test
je
xchg
std
mov
inc
movsb
rolb
cmp
sarb
fnstsw
adc
inc
movsb
mov
sub
add
pop
rcrb
test
jge
dec
insl
mov
and
lea
xor
iret
shll
mov
push
inc
xlat
xor
jb
and
add
mov
mov
push
push
stos
ljmpw
aas
pop
fadds
clc
mov
jns
push
jb
out
mov
bound
add
out
int
cmpsb
jge
mov
push
or
and
inc
popa
dec
sub
sub
scas
test
aam
loopne
and
test
dec
xlat
push
sbb
enter
cwtl
mov
clc
jbe
stos
mov
mov
dec
inc
add
in
lock
aas
and
ljmp
lds
inc
rolb
lods
inc
mov
xor
ret
jge
shrb
test
in
pop
movsl
mov
pop
mov
jle
xlat
inc
std
mov
add
outsl
pop
add
addl
out
lahf
insl
push
insb
enter
leave
mov
insb
rolb
inc
mov
jns
shlb
dec
push
les
loop
bound
xor
pusha
ret
movsl
push
popa
in
xchg
push
hlt
cmp
pop
imul
push
adc
data16
addb
emms
fs
fs
or
test
pushf
and
mov
fdiv
ret
daa
mov
xchg
push
mov
es
leave
cmp
adc
push
lcall
pop
std
inc
out
mov
out
dec
das
jl
cmp
fnstenv
fstl
sub
jge
sub
stos
jo
fwait
gs
xor
and
xchg
cwtl
fsubrs
mov
inc
xor
mov
xchg
or
lret
fdivl
arpl
jnp
fsubrl
mov
aas
jns
dec
mov
cs
cmpsb
in
lods
cld
icebp
loop
sbb
push
inc
loope
aas
ret
add
data16
stos
cmc
cmp
cmp
arpl
and
inc
xchg
mov
pop
rcr
test
in
ds
aad
add
add
push
out
add
dec
lret
mov
lds
mov
pop
add
inc
lock
xchg
mov
mov
repnz
andb
sub
mov
lods
xor
cs
je
add
insb
cs
xchg
lods
mov
clc
inc
sbb
jnp
in
popf
int
mov
jb
popa
outsl
inc
push
push
cwtl
jnp
ret
dec
jns
cmc
pusha
sub
sti
mov
in
js
cli
and
xchg
jo
dec
sbb
jb
pop
jl
add
int3
cld
pop
cli
in
pop
dec
js
test
mov
jmp
imul
push
ds
mov
fwait
xlat
out
lret
pop
mov
jbe
jae
mov
fcoms
add
out
aad
cmp
mov
hlt
fdivrl
pop
movsl
daa
inc
aaa
jmp
adc
movsl
fwait
inc
cmpsl
sub
and
pushf
sub
fiaddl
add
pushf
or
push
push
movsl
jecxz
sub
mov
sbb
mov
or
inc
sbb
add
jp
mov
mov
or
sets
rorb
mov
push
pop
xchg
cmpsb
pop
mov
inc
push
loop
rclb
test
scas
fcoml
pop
pop
jge
sbb
push
adc
int3
mov
stos
jl
pop
subb
mov
add
stos
mov
push
push
sarb
mov
mov
out
push
adc
addl
xor
xchg
ds
mov
push
add
cmc
outsl
cmc
cmp
xchg
jo
loopne
jbe
cmc
pop
mov
dec
daa
fs
or
mov
xor
fwait
loope
daa
stos
pop
iret
cmp
mov
xor
add
cmpsl
test
int3
xor
adc
dec
movsl
pmullw
addb
push
in
outsb
out
idivb
clc
jbe
test
and
sub
fsub
sbb
push
lods
add
insl
xchg
push
inc
push
pushf
out
test
out
repz
xchg
jb
mov
push
sti
sarl
jne
mov
dec
cmpsl
inc
jns
dec
lahf
insb
daa
mov
lret
out
adcl
and
add
std
add
mov
dec
or
push
dec
pop
pop
cmp
dec
jg
jns
and
in
rclb
cmc
sub
shll
mov
das
xor
sub
cmp
jl
xlat
enter
jl
sub
call
cwtl
test
stos
mov
in
mov
pop
subl
sti
lock
bound
dec
insl
pop
stos
rcrb
dec
daa
aad
lods
std
loopne
loop
mov
fiaddl
push
fidivs
pop
aaa
scas
sbb
sbb
lods
inc
ss
pop
mov
mov
testb
mov
xor
out
insl
dec
dec
pushf
or
rcrl
ret
pop
cltd
repz
xor
push
inc
pop
insb
or
in
in
test
into
pop
rolb
mov
pusha
cwtl
outsb
sub
in
scas
fidivrl
xchg
cs
fdivrl
lret
pop
lock
and
sbb
pop
or
push
shlb
cmp
addl
int
push
push
pop
cs
rol
mov
xlat
int3
cli
das
leave
dec
adcb
inc
data16
aas
adc
mov
push
and
or
scas
cmp
and
popl
mov
cs
mov
mov
jp
inc
je
inc
mov
mov
or
mov
mov
fsub
xor
and
dec
ss
mov
adc
xchg
xchg
iret
and
and
pop
push
cmp
push
mov
mov
int3
data16
jne
sub
enter
test
subl
outsl
cmp
adc
pop
sub
mov
repz
popa
push
push
insb
inc
mov
mov
ds
lods
loope,pn
call
and
jecxz
and
lods
fxch
jbe
cwtl
cmpsl
pop
rolb
stc
push
jb
mov
push
cmp
push
push
and
mov
xor
cmpsb
push
mov
pop
xor
add
dec
pop
gs
pusha
std
cwtl
push
aaa
pop
jecxz
in
jmp
or
or
and
and
aad
push
fsubr
push
mov
and
dec
dec
xchg
shll
inc
adc
push
sub
fs
jne
cmc
fiaddl
aam
push
mov
into
and
lods
push
test
rorl
aad
movsl
xor
aas
pop
fisubrl
or
outsl
repz
adc
add
ljmp
xor
add
scas
fs
dec
pop
adc
popa
shlb
and
jl
jp
fdivl
out
jae
out
es
mov
outsb
add
scas
jg
xlat
idivl
std
lock
scas
push
int3
push
mov
push
stos
cmp
push
xchg
dec
sub
pop
int
jg
mov
sbb
jae
addr16
jecxz
jmp
jno
mov
push
fwait
loopne
xor
add
aas
sub
int3
mov
repnz
mov
in
jp
or
roll
popa
lcall
sti
mov
cwtl
test
pusha
add
mov
or
shld
imul
test
add
mov
pop
imul
pushf
test
push
sbb
mov
loopne
pop
mov
cmp
sar
int
gs
xchg
arpl
xor
int
inc
or
jmp
outsl
test
lods
dec
ss
jnp
jl
andb
test
inc
shrl
and
push
add
addr16
repnz
jb
loop
stos
mov
inc
syscall
jge
lret
adc
mov
aad
adc
roll
or
xor
sbb
clc
movsb
pop
roll
pop
add
es
xor
outsl
mov
jo
add
and
sahf
js
stos
test
add
or
fwait
inc
test
xor
push
add
shlb
add
mov
mov
pop
xor
xor
lret
pop
imul
xchg
cmc
sub
pusha
out
adc
pop
ffree
xchg
arpl
fadds
lret
xor
mov
pop
sub
mov
movsb
xlat
int3
and
in
and
xchg
ret
aad
mov
fdivr
jle
test
clc
jae
sub
cltd
dec
pop
test
mov
test
outsb
adcl
les
enter
jne
ds
call
sub
bound
fwait
mov
dec
sahf
sub
lea
aaa
or
xor
adc
sti
sahf
mov
pop
in
jae
inc
mov
out
fistpll
xchg
jae
lahf
push
in
mov
sbb
fxch
ljmp
aas
add
mov
xchg
sub
ljmp
or
mov
push
push
and
rorb
mov
sbbb
xlat
mov
jnp
enter
and
push
jns
lcall
repnz
in
cld
mov
outsb
rorb
push
sub
sbb
pushf
movsl
or
and
filds
cld
sbb
fwait
pop
xlat
adc
ja
ljmp
jne
jne
insl
adc
sbb
inc
out
js
and
or
rorl
mov
and
pop
mov
lahf
mov
ret
sti
xchg
aaa
mov
movsl
outsb
push
loop
cmc
je
call
add
mov
arpl
push
and
outsb
adcl
adc
outsl
inc
js
pushf
dec
sbb
call
stos
leave
push
movsb
mov
das
xlat
jp
ret
test
pop
push
mov
push
mov
in
jge
in
inc
lock
sbb
mov
lret
and
lods
test
or
leave
xchg
pop
jno
sahf
pop
mov
sbb
inc
popl
mov
in
jnp
add
mov
stc
mov
jb
ljmp
js
scas
xchg
imul
lcall
fsubrs
sub
loope
xlat
sti
jb
mov
cmc
std
inc
pop
cs
sbb
cli
cs
out
cmp
mov
test
add
cs
or
jno
dec
popf
mov
inc
mov
xlat
dec
and
testb
dec
repz
and
sub
cmpsl
insb
mov
adc
shll
jecxz
mov
xchg
dec
shr
cmp
sbb
lea
data16
rclb
mov
jae
js
fwait
pop
loope
xchg
out
fimuls
subb
xor
loopne
lock
jns
pop
cwtl
jl
lret
sbb
std
fiadds
inc
xlat
rcll
std
cld
push
negb
loop
inc
or
out
push
js
xorl
shll
in
inc
pop
jb
aaa
testl
insb
movsw
push
mov
inc
inc
cli
push
cmp
mov
icebp
lcall
lock
xchg
in
cli
in
pop
in
jb
leave
push
int
into
data16
clc
pusha
fisubl
sub
jne
jmp
pop
in
fsubs
push
out
int
or
insb
pusha
repnz
repnz
push
mov
cmp
test
aad
push
cmp
call
ret
out
test
or
rcrb
mov
jge
decl
mov
sub
mov
ret
lea
dec
and
add
push
repnz
aas
sbb
iret
xchg
and
jae
push
call
stos
push
hlt
xchg
pushf
push
dec
jnp
loope
xor
out
fildll
stc
fstpl
cmp
mov
inc
lahf
mov
adc
and
pop
jecxz
jb
clc
adc
jne
jecxz
lret
frstor
inc
adc
fdivrs
jns
mov
fstl
popf
xor
adc
jle
pusha
add
dec
leave
stc
mov
inc
lret
out
xchg
mov
aaa
hlt
jno
cld
inc
dec
out
sbb
imul
imul
fnstsw
popf
pop
xchg
push
test
jle
in
mov
adc
pop
xchg
jae
clc
fwait
inc
xchg
or
imul
cmpsb
cmp
pop
rolb
out
rcrl
dec
cmp
jno
jo
inc
or
mov
gs
shl
push
xchg
mov
jl
jmp
out
inc
inc
pop
aas
fildll
lods
inc
daa
inc
push
jnp
pop
xlat
into
sbb
push
out
mov
xor
aas
scas
dec
loope
pop
and
daa
add
inc
dec
aaa
mov
in
push
jne
scas
movsl
mov
fists
jbe
cmpsb
ljmp
cmc
sub
or
lret
adc
mov
mov
roll
mov
push
jo
jb
lcall
call
loopne
int3
out
xlat
add
sub
pop
dec
aam
add
cmpsl
jge
pop
jle
jb
ret
mov
testl
xor
mov
hlt
out
fsubrs
scas
outsl
data16
xchg
mov
cmpsl
fistl
xor
dec
sbb
dec
or
dec
pop
out
popf
xchg
shlb
imul
mov
mov
sbb
pop
jo
push
cmp
pop
fimull
xlat
fs
repz
cli
shrl
cmp
sbb
push
pop
out
pop
dec
imul
sbb
mov
insb
push
push
test
xor
cltd
xor
and
dec
push
push
add
mov
push
imul
cmp
lcall
jg
xchg
repnz
cwtl
movb
xchg
aad
or
aaa
jne
jge
xchg
pop
shll
xchg
mov
dec
test
adc
push
sub
cltd
or
aad
faddl
mov
mov
pop
push
out
mov
xchg
xchg
dec
popf
out
adc
jno
xchg
and
rep
shlb
repz
sarl
sbb
cwtl
sub
mov
xchg
dec
jbe
out
xchg
sahf
push
pushf
sbb
loop
das
push
loopne
dec
bound
adc
xor
or
pop
mov
mov
decb
sti
cld
lods
sbb
lock
cmpl
outsl
inc
stos
fstpt
fisubrl
xor
or
outsl
jne
les
sub
cmp
jnp
aaa
cmp
add
pop
jne
or
cmc
int3
inc
dec
mov
push
push
stos
lods
ljmp
push
jp
jo
pop
ss
mov
mov
stc
ja
lahf
pushf
push
adc
pop
stos
pop
xor
popa
push
in
cmp
push
or
adc
aad
inc
ss
aad
inc
inc
mov
xchg
mov
daa
decl
nop
loop
pop
fistpll
mov
or
shlb
dec
cli
sbb
or
fisubrl
mov
das
mov
popaw
stos
add
iret
inc
inc
push
outsb
shrl
sub
ret
xchg
lcall
mov
sub
or
ret
out
lods
xchg
loop
imul
jecxz
clc
push
notb
stos
std
fmuls
xchg
mov
jae
jl
addr16
roll
inc
in
test
dec
pop
pop
cmc
inc
pop
std
lret
lock
orl
inc
mov
roll
push
fimuls
mov
pop
aas
jno
sti
push
cmp
jmp
popf
mov
cmp
inc
mov
into
push
and
sbbl
mov
dec
mov
nop
lret
push
nop
arpl
sahf
jns
mov
xchg
clc
mov
pusha
add
mov
mov
adc
push
leave
movsl
jp
mov
push
nop
push
or
outsl
mov
jo
xlat
push
cmp
fildl
xlat
xor
ljmp
sbb
movsl
aaa
rcll
add
lods
cmpsb
push
pushf
movsb
fdivl
test
outsb
fisttpl
cltd
test
adc
push
js
mov
mov
and
je
gs
lret
inc
xor
ret
fcom
sahf
std
inc
and
mov
aad
daa
gs
pop
xchg
fldt
pop
mov
jno
shrl
lret
inc
outsl
pop
pop
in
or
arpl
cmp
sbb
and
add
int3
adc
repnz
scas
aad
push
mov
xchg
sti
cmpsb
repnz
rclb
mov
stos
push
ja
xchg
dec
movsl
adc
push
loop
add
xor
xchg
sub
ret
push
imul
fistpll
hlt
stos
std
fsts
icebp
push
shll
sub
push
rcrb
jb
leave
pop
push
aad
dec
adc
imul
mov
out
out
dec
js
sub
iret
notb
and
aaa
leave
or
and
mov
bnd
mov
inc
insl
pop
push
inc
jp
and
sub
cmpsb
mov
sub
jnp
call
int
notl
xchg
jge
jmp
repnz
pop
mov
mov
pop
daa
or
inc
pop
lret
outsb
jl
mov
repz
jno
lret
inc
push
mov
xchg
push
nop
andb
pop
das
lea
leave
insl
int
subl
pop
incb
into
pop
push
adc
stc
sahf
aaa
cmovg
fsubs
jl
out
jnp
clc
out
mov
outsb
popf
add
add
fsts
aad
adc
mov
pop
loope
iret
neg
pop
sbb
les
xchg
iret
pop
and
sarb
out
scas
and
jle
sbb
sub
or
mov
sbb
mov
data16
lret
out
dec
or
lock
mov
xchg
xor
pop
shlb
mov
fildl
mov
aad
arpl
daa
iret
in
lahf
jns
stos
popa
inc
pop
and
js
jecxz
lret
and
scas
ret
push
add
jb
adc
xchg
fcoms
cmp
push
pushf
hlt
ds
ja
stc
addr16
nop
loopne
pop
mov
push
add
cld
mov
add
cmc
gs
jae
push
dec
lret
subb
adc
lahf
sub
jl
xchg
fmulp
xchg
js
ret
inc
fdiv
out
in
mov
lret
pop
stos
mul
xor
dec
push
xlat
data16
adc
inc
test
xchg
xlat
mov
int
stos
cmpsl
je
insl
push
push
sub
cmp
cwtl
les
fidivl
stos
addl
test
test
shll
sub
notb
mov
es
push
add
cmp
or
and
insl
xor
das
sbb
lret
inc
mov
push
into
sbb
sbb
js
dec
inc
stc
pop
outsl
sbb
loopne
xor
sbb
inc
cmp
loopne
in
out
mov
jno
cwtl
icebp
or
pop
sahf
insb
loopne
adc
pop
outsb
push
cli
xor
sbbl
jno
jmp
js
dec
mov
xchg
sub
push
or
cld
pop
mov
push
dec
jne
sbb
xor
and
lcall
cmp
mov
stc
insb
lock
cmp
sbbb
in
xchg
add
pop
push
orb
and
push
jp
push
adc
popf
callw
mov
pop
vfrczss
xchg
push
adc
mov
pop
int3
fldenv
in
popf
in
and
sub
inc
push
stc
lds
adc
mov
stos
test
fistps
add
aaa
sbb
test
add
push
pop
inc
hlt
popl
xchg
push
cmpsb
xor
adc
push
imul
or
negl
lahf
repnz
adc
lahf
aam
lahf
add
or
jmp
jo
sti
adc
cmp
ret
or
stc
fnsave
in
push
in
roll
in
xor
and
xor
pusha
and
jbe
jns
push
pushf
rorl
sbb
adc
mov
jp
aas
sub
mov
scas
jbe
ds
pop
icebp
test
add
lods
movsl
cli
movsb
mov
ss
push
lahf
mov
and
adc
fdivs
dec
lods
hlt
es
imul
sub
xchg
mov
adc
in
mulb
rclb
or
into
xor
pop
jns
mov
push
cmp
shll
jo
mov
pop
and
scas
sbb
movsw
das
sti
outsb
sbb
jo
xchg
mov
sub
shlb
lds
ret
inc
loope,pn
ss
movsl
sahf
test
cld
repnz
dec
push
popa
xchg
xor
mov
pop
lcall
ret
sar
cmp
lods
stos
insb
jl
cwtl
dec
jp
pop
jbe
push
seta
mov
addr16
mov
fldcw
mov
jo
mov
inc
xchg
push
ja
sub
mov
andb
div
imul
std
je
cmp
push
stos
add
xchg
or
scas
adc
sub
jp
pop
mull
mov
or
push
pop
roll
cwtl
leave
les
cmp
cld
sbb
repnz
test
xor
dec
cld
push
jno
in
sar
sbb
xchg
aam
mov
adc
xchg
int3
aad
movsl
mov
jo
sbb
lods
int3
lock
test
jb
fnstsw
leave
stos
push
std
lea
sahf
aaa
mov
in
or
bound
mov
jno
insl
mov
mov
mov
icebp
add
rcrl
jno
dec
outsb
pop
in
nop
fwait
push
push
div
cmc
xchg
lods
mov
sub
xchg
mov
inc
dec
push
enter
pushf
dec
push
add
adc
adc
pop
cwtl
scas
mov
or
dec
xchg
inc
jmp
sti
or
xor
jmp
or
push
popl
mov
mov
stos
aad
mov
lods
fcmovnu
dec
or
xor
mov
push
adc
xchg
dec
pop
daa
stc
push
gs
mov
mov
ficomps
pop
je
mov
add
jle
cmp
push
sub
cmp
push
push
mov
jge
test
enter
jle
fs
in
xlat
push
in
std
daa
dec
inc
in
cmp
dec
push
mov
add
dec
pop
insl
inc
xchg
jb
popf
lret
movb
repz
and
std
dec
sbb
jmp
hlt
inc
inc
mov
add
cmp
jmp
sbb
push
or
add
js
add
pop
add
aam
jle
inc
sub
xor
push
rcll
or
adc
fildll
or
hlt
xor
sub
jae
divl
mov
mov
rcl
jmp
sub
mov
loopne
lcall
ficoml
cmp
inc
add
push
addr16
adc
mov
add
inc
leave
hlt
sbb
aaa
pmullw
xlat
out
testl
fbstp
out
bound
add
dec
lds
xchg
sbb
repz
pop
out
ss
mov
bound
daa
pop
push
inc
adc
addr16
imul
cld
adc
push
nop
adc
incb
cwtl
and
mov
bound
sahf
arpl
sti
enter
ljmp
fldenv
mov
mov
in
jnp
xchg
or
roll
mov
leave
in
scas
fwait
mov
sbb
inc
or
or
or
lcall
addr16
inc
xor
cwtl
dec
inc
lds
xchg
or
jbe
jl
popa
adc
in
in
xchg
dec
rcll
adc
mov
jbe
fldl
int3
fidivrs
mov
or
inc
enter
and
imul
pop
dec
ficompl
in
aad
add
loop
icebp
outsb
ficoms
dec
js
lcall
lcall
or
jge
in
xor
mov
ret
sub
out
daa
ljmp
mov
pop
rol
xchg
dec
cmp
dec
jb
and
jb
adcl
dec
sub
lds
mov
push
mov
std
mov
mov
push
in
mov
pop
xchg
dec
arpl
in
pop
mov
push
jb
iret
or
mov
movsl
sbb
in
dec
push
cs
daa
bound
xchg
inc
stc
adc
cwtl
mov
xor
pushf
push
dec
mov
data16
jns
cmp
call
and
add
sub
add
xchg
push
imul
cld
cmp
push
shrl
xor
mov
cmpb
shll
mov
cmpsl
lds
mov
adc
inc
sub
fwait
inc
mov
pop
mov
mov
cmp
nop
test
in
sbb
scas
pop
cwtl
and
in
xchg
shlb
push
pushf
mov
fdivp
push
add
cmpsl
xchg
fistl
add
out
sub
and
call
xchg
aad
sahf
call
loopne
mov
mov
jns
data16
xor
mov
repz
and
js
mov
inc
call
xlat
xchg
lret
dec
into
xchg
xchg
or
loope
int3
mulb
in
sahf
out
cmp
jp
fnstsw
mov
and
or
mov
jne
cltd
inc
sub
cmp
stos
mov
mov
push
add
test
jmp
shll
sub
in
fimull
call
loop
xchg
movsl
in
cmp
lods
test
cs
mov
rcr
sub
xor
mov
lahf
ds
lcall
repnz
addr16
loopne
les
call
adc
fcmovb
popf
jmp
aad
in
adc
jl
dec
rolb
aam
pop
cwtl
pop
out
ret
push
and
addr16
sbb
sbb
out
push
sahf
sub
cmp
or
mov
adc
ds
jae
movsl
xlat
ljmp
jg
and
loope
insl
sub
pop
negl
das
jl
lret
xchg
mov
jle
cmp
inc
mov
stos
sub
inc
fs
rorb
scas
dec
inc
fistl
int3
icebp
mov
cmp
sub
mov
xor
push
test
push
jne
mov
subb
rcll
mov
push
jp
ja
or
sub
test
in
enter
jecxz
xor
ljmp
pop
jp
mov
push
jns
jns
mov
enter
test
xchg
cmp
scas
xor
jmp
pop
outsl
inc
popf
cli
adc
mov
adc
ror
mov
dec
push
out
dec
jnp
jo
sbb
idivb
in
mov
mov
push
ss
hlt
je
jb
xor
hlt
and
pop
scas
xchg
add
daa
mov
stos
shr
pop
pop
push
mov
xchg
dec
lea
jbe
test
mov
into
adc
stc
pusha
loope
cmp
loopne
mov
jl
mov
lret
cmp
jp
adc
xchg
ds
mov
add
jmp
pusha
mov
out
repz
sbb
ja
mov
sbb
mov
fwait
push
sub
test
inc
rcl
adc
xchg
in
fs
xor
and
pop
pop
stos
inc
inc
pusha
lret
clc
xchg
or
mov
sahf
mov
imul
pop
pop
mov
mov
add
mov
data16
inc
mov
adc
cmc
xor
stos
js
lahf
fnstsw
leave
ds
push
push
fwait
repnz
push
cwtl
xlat
stos
xchg
mov
imul
jbe
mov
arpl
jno
adc
test
mov
dec
pop
cmp
mov
rorl
dec
add
xchg
mov
sub
mov
sbb
pop
inc
or
xor
mov
push
inc
add
sbb
push
cmp
ja
push
push
mov
test
mov
pop
push
imul
inc
mov
in
fiadds
cwtl
jb
push
jl
xchg
mov
push
mov
xor
sahf
in
std
in
mov
aaa
mov
xchg
and
int3
xchg
adc
inc
push
lds
jns
cltd
xor
lcall
or
jb
and
cmpb
mov
scas
mov
add
adc
push
or
or
cmp
jb
cmc
xchg
push
mov
mov
push
loope
cltd
test
jae
in
imul
and
add
push
cmp
rorl
repz
ljmp
shrl
inc
addl
mov
fstpl
mov
cmp
int
add
lods
enter
aaa
fs
rclb
fsubs
xor
rcrl
mov
inc
gs
dec
pop
add
enter
jae
loopne
out
cmpxchg
fwait
cmpsb
sbb
negl
sbb
mov
jae
pop
std
outsb
push
outsl
push
dec
jmp
sbb
and
xchg
cmpsb
out
pop
fcomi
and
mov
lcall
add
cmp
addr16
add
je
test
popa
inc
cltd
lahf
add
cld
lret
or
and
outsl
jbe
push
jnp
mov
xlat
lods
mov
xrelease
jmp
dec
mov
jecxz
inc
es
push
pop
data16
jbe
xchg
sub
outsl
adc
aad
int
icebp
lret
aaa
or
negl
jb
push
clc
cmp
add
mov
adc
jmp
les
mov
fistpll
cmc
gs
in
lahf
int3
fs
push
mov
fcomip
test
lea
xchg
aaa
mov
push
mov
ret
mov
xor
xchg
dec
mov
sbb
xchg
mov
xchg
cmpsl
test
pop
cmc
cmp
ret
ret
cmpsb
and
jle
mov
ret
xchg
push
mov
loop
out
stos
mul
lcall
call
push
mov
loop
xor
dec
add
push
add
add
cmc
insb
jle
sbb
push
sbb
jns
jp
jg
inc
fcomps
loope
shrl
les
test
sub
outsl
cmp
jns
inc
fisttpll
push
stos
lock
nop
test
add
pop
rclb
push
fcomi
mov
mov
enter
insl
repnz
mov
rcrb
mov
inc
call
mov
mov
dec
stc
add
sbb
push
inc
jb
and
inc
xlat
sub
adc
xchg
rcrb
shrb
lret
or
sbb
sbbl
jae
scas
push
mov
bound
push
sub
and
out
jb
and
pop
insl
cmc
sahf
xor
add
mov
fbstp
outsl
sbb
outsb
clc
mov
pushf
pop
inc
cwtl
gs
jmp
shl
insl
shlb
mov
sub
lock
push
jp
aad
ds
or
sti
push
mul
outsl
cmpsl
fldenv
pop
clc
adc
pushl
ds
test
or
cmp
cmpsl
push
mov
inc
inc
xlat
outsl
xchg
mov
jbe
imul
xor
or
mov
cli
mov
movsb
add
and
aaa
dec
mov
cs
loop
mov
or
and
insb
aas
inc
dec
jbe
adc
ljmp
lret
imul
cli
push
rcl
outsb
pop
and
and
arpl
rcll
stos
int3
lret
or
adc
cmp
mov
leave
loop
bound
add
xor
inc
pop
bound
xor
push
loope
addr16
movsl
add
lea
aad
insl
cmp
xchg
pop
xchg
jge
lahf
jae
out
jb
out
scas
ljmp
shr
mov
out
and
jg
jmp
sub
dec
outsl
cmp
cmp
add
xor
push
daa
test
lock
xor
or
dec
jae
pop
lods
repz
dec
cmp
in
inc
sbb
cmpsb
sarl
stos
loopne
mov
adc
divl
mov
adc
xor
xor
jl
cmp
iret
dec
and
cmp
and
lock
lods
fsts
insl
mov
popf
or
popa
out
xchg
pop
mov
xchg
cmp
call
insl
out
cmc
lret
push
jp
fdivr
xchg
mov
mov
push
mov
mov
popw
in
dec
jmp
les
inc
mov
inc
push
pop
xchg
popf
insl
bound
loopne
repnz
adc
sbb
mov
pop
xchg
lods
fadd
aas
dec
dec
leave
rcl
imulb
pop
pop
push
mov
out
cmp
and
call
pop
pop
pop
push
cwtl
xchg
cmp
and
or
popa
bound
mov
lret
inc
lds
int
cmp
push
pop
push
xor
mov
inc
lock
popf
and
xchg
nop
enter
popf
add
adc
jns
pop
adc
fnsave
mov
and
adc
mov
push
mov
xchg
xchg
pop
push
or
lret
push
mov
dec
les
jns
popf
jp
add
jge
nop
lret
loopne
sbb
xor
mov
jp
push
sub
mov
std
sarl
ja
data16
pop
xchg
ficompl
xchg
sti
or
repnz
out
psrld
or
sub
pop
das
sub
orps
aas
stc
cmp
add
in
xchg
outsl
dec
notb
das
fdivrs
decl
sbb
sub
adc
adc
test
mov
add
mov
xor
mov
fisubs
pushf
xchg
mov
push
mov
cltd
in
and
and
pop
adcl
inc
xlat
xchg
mov
pop
fsts
inc
movsl
lcall
lahf
js
push
push
repz
push
enter
lret
adc
mov
add
inc
jae
mov
xor
inc
cli
cli
adc
sub
int
push
leave
dec
fidivrs
int3
movsl
dec
xchg
mov
jno
dec
insl
mov
cs
inc
arpl
mov
insb
popf
sub
add
adc
push
int3
push
lea
rcrl
xor
inc
ljmp
fidivrl
hlt
ret
repnz
testl
call
push
imul
outsb
cmp
sbb
inc
mov
adc
xor
xchg
pop
xor
pop
inc
inc
ljmp
mov
fildl
inc
les
jle
mov
test
or
and
imul
popf
sbb
imul
addl
stos
bound
cmp
lcall
rcll
nop
and
loopne
mov
pop
mov
aaa
or
in
repz
cmp
and
and
mov
push
sbb
add
push
push
push
mov
lods
inc
sbb
add
shrb
sti
pop
jl
xor
lret
mov
jge
dec
nop
pop
xchg
and
sub
and
mov
rolb
jbe
sbb
shll
rolb
dec
sar
fildll
iret
jo
outsb
or
jl
pop
shl
into
mov
ja
mov
add
push
inc
loope
fwait
pop
inc
ja
insb
fs
or
rcr
mov
xchg
sub
shll
stos
jno
xor
push
in
test
cmpsb
loope
xchg
jp
fimuls
sub
inc
les
ret
pop
test
into
or
push
loopne
adc
dec
stc
mov
ficomps
rorb
cmpsb
mov
pushf
out
sarl
aam
lds
neg
sbb
inc
mov
mov
xchg
ljmp
pop
sub
stos
cmp
in
pop
test
sahf
cmp
hlt
out
rcll
rcl
insb
mov
add
divb
cmpsb
test
mov
fwait
pop
mov
mov
mov
dec
pushf
mov
pop
arpl
jns
add
push
and
mov
lds
dec
into
test
inc
push
dec
cmp
adc
sti
sub
inc
rclb
mov
scas
inc
add
cmp
bound
mov
jae
repz
test
call
xor
int3
mov
fistps
test
repnz
idiv
xor
push
test
stos
repnz
inc
aas
sti
cld
cmp
jnp
and
shll
inc
or
xchg
rol
subb
lret
imul
mov
mov
push
fwait
leave
xchg
loope
roll
dec
xchg
data16
mov
sub
sti
push
cmp
xor
xchg
fidivrs
imul
scas
cmp
movsb
xchg
es
pusha
pushf
in
mov
mov
xchg
pop
xor
add
cmp
enter
pop
add
jb
aam
sub
inc
loopne
mov
fsubrs
ljmp
dec
lret
out
sub
pop
inc
out
jno
push
jle
dec
push
das
cmpb
mov
mov
jae
lret
mov
push
mov
mov
cltd
cld
sub
cmc
push
xlat
push
cli
nop
mov
xorl
insl
push
mov
mov
dec
add
push
lret
andl
mov
filds
cmp
daa
pop
jns
mov
jmp
lahf
xchg
test
popa
push
test
adc
or
push
cwtl
pop
lea
cmp
test
add
insb
fstpt
int
test
inc
loope
icebp
or
mov
lcall
ds
lret
fidivl
mov
stos
mov
iret
push
adc
hlt
test
mov
stos
nop
jne
sahf
ss
mov
es
insb
jnp
jmp
fcmove
ss
out
repnz
test
loop
rol
scas
js
cmpsl
ds
stos
cs
push
aaa
test
adc
out
ljmp
out
mov
cltd
add
dec
ret
dec
in
pop
cmp
sbb
mov
mov
ficoms
mov
push
dec
pop
repnz
lret
fpatan
or
enter
repz
or
sbb
std
ja
lock
or
push
add
addb
mov
mov
pop
add
push
mov
ss
xchg
lock
or
jp
sahf
ds
fildl
or
dec
push
int3
iret
cli
dec
jb
xchg
fbld
icebp
xchg
daa
or
xchg
lods
in
mov
xor
mov
lret
xor
scas
test
icebp
and
xlat
inc
pop
mov
inc
jnp
jns
sub
icebp
xchg
loope
in
jge
mov
mov
cld
mov
je
mov
les
adcl
pop
xor
enter
test
unpckhps
fstpt
cmp
xor
pop
or
add
sub
call
sub
xor
mov
jns
stc
inc
iret
lret
xor
jae
xchg
ror
fistps
xchg
pop
addr16
push
mov
js
int3
sub
mov
push
test
cmp
dec
sbb
or
sub
stos
mov
into
dec
je
mov
add
sub
inc
es
jecxz
jp
cwtl
pop
xchg
incb
ja
roll
adc
lahf
sub
in
jmp
out
push
pop
movsb
mov
das
out
cmp
sub
pop
in
jmp
mov
nop
mov
jbe
sub
jb
gs
enter
inc
faddl
repnz
xchg
inc
jbe
shrl
push
dec
push
jmp
or
adc
cwtl
imul
call
popf
sahf
pop
dec
test
adc
out
sbb
jle
lret
rcr
xor
or
dec
leave
dec
jne
sahf
or
or
sub
xchg
cmp
jmp
jne
and
xor
repz
xchg
in
iret
lcall
add
push
std
fs
aaa
mov
adc
test
loop
xlat
xchg
popa
lock
jl
mov
std
mov
inc
xchg
pop
push
shl
mov
pop
int3
add
sahf
pop
stos
or
xor
or
jno
push
stc
leave
fs
dec
pop
js
add
mov
add
aad
sahf
stos
es
mov
insl
add
add
pop
cmpsl
repz
in
outsl
sbb
rcrb
xor
insl
imul
pushl
movsb
mov
and
adc
mov
adc
cmp
rorl
loope
xchg
or
sarl
imull
cmpsb
repnz
jne
hlt
in
nop
arpl
aas
xchg
cmpsb
inc
sbb
jnp
sbb
ret
insb
or
push
push
add
mov
jle
into
imul
pop
movsb
sbb
loopne
sbb
sbb
faddl
ret
lods
pop
ss
insl
lret
and
cmp
pop
xchg
mov
icebp
sbb
xchg
bound
lahf
jne
push
sub
aas
repz
cld
jno
lret
lock
movsl
shrb
cs
add
xlat
add
cmp
xchg
es
fstpt
jg
lret
xor
lock
movsb
or
push
out
mov
dec
jo
gs
jno
jae
mov
fidivrl
push
ss
add
or
rorl
add
fsubr
shrb
out
aam
sub
push
and
icebp
adc
xchg
pop
cltd
inc
shll
add
jl
lock
inc
push
imul
dec
mov
mov
mov
aaa
add
je
adc
cltd
outsl
xor
add
inc
mov
inc
xor
ljmp
cli
sahf
mov
filds
push
push
inc
fisttpll
out
incl
add
mov
stos
add
add
mov
mov
or
sub
xchg
fidivs
fstpl
lcall
cli
clc
gs
jmp
mov
decb
cmp
stc
xor
daa
loop
mov
cltd
jne
orl
sti
shrb
push
dec
decb
inc
gs
dec
or
cmp
cmpb
xor
test
cmpsl
mov
ror
xchg
inc
enter
cmc
cmp
or
pop
pop
xchg
ljmp
jmp
test
out
dec
jnp
jb
inc
aaa
push
pop
dec
push
mov
into
in
dec
push
lea
test
xchg
shlb
mov
lret
sub
ja
inc
sahf
inc
mov
fbld
cld
jae
js
out
out
sti
sbb
lret
rcrl
lcall
pushl
add
mov
popa
mov
jnp
and
ss
lret
mov
or
cmp
pop
gs
mov
xor
fsubrp
lds
jae
inc
pop
cmpsl
pop
adc
arpl
mov
gs
push
int3
inc
int3
inc
sti
xchg
add
jns
pop
ja
cli
sahf
push
loope
cmpsl
in
ret
mov
or
pop
fnstcw
adc
movsl
rclb
popa
cmovbe
pushf
clc
loop
add
pop
cmp
sarb
xchg
sub
imul
cwtl
outsb
rcrb
aas
pop
test
inc
imul
lods
inc
movb
mov
jo
mov
add
sahf
jmp
in
lret
imul
push
jge
xchg
loop
mov
fimull
lcall
add
dec
fcompl
cmp
lcall
lea
cmp
jno
mov
mov
aas
add
in
mov
inc
nop
inc
or
dec
andl
pop
popf
fstpl
inc
mov
cs
test
sub
and
out
inc
xor
ds
xchg
std
xor
sub
mov
xchg
jp
jns
cwtl
push
hlt
cmpsl
jae
scas
rcrl
cmp
cld
mov
push
or
cmp
jg
call
stos
pop
mov
add
adc
imul
jmp
aam
js
in
push
or
or
roll
jne
pop
or
ljmp
cmpsl
xor
jbe
mov
hlt
pop
imul
lcall
call
call
daa
or
pop
nopl
mov
mov
and
and
mov
jecxz
mov
mov
xor
adc
add
dec
arpl
std
orl
imul
stos
add
push
adc
dec
int
jo
jge
ss
mov
xor
std
cli
pushf
arpl
xlat
dec
iret
or
sub
mov
lock
divl
es
fisubrs
jb
loope
int
push
cmpsb
or
pop
jbe
mov
inc
aad
pop
sbb
shlb
jne
je
stos
and
into
cld
mov
pusha
xor
cli
stos
or
mov
sbb
jg
repz
sahf
bound
xorb
mov
mov
dec
gs
pop
popa
mov
pop
ljmp
add
lret
sar
dec
cmp
xchg
lret
aam
push
sbb
mov
addr16
daa
ficomps
sbb
lahf
mov
and
stos
sbbb
adc
repz
inc
mov
mov
push
cmpsl
and
jecxz
rcr
das
adc
inc
ljmp
pushf
mov
outsl
rorb
scas
or
adc
stos
arpl
cwtl
std
addr16
sub
into
addb
xlat
loop
dec
scas
fiaddl
data16
sub
xor
jbe
fstps
xlat
clc
push
mov
aaa
out
shll
orl
lfs
inc
test
jle
cmp
test
clc
push
idivl
sbb
jns
push
xchg
testb
or
mov
mov
mov
adc
mov
rorb
outsl
test
mov
xor
lock
rorl
stc
xchg
cmp
add
lods
daa
gs
jmp
fnstenv
dec
dec
rolb
jae
clc
mov
cmp
lret
or
lahf
mov
repz
rorl
cmp
dec
push
cli
icebp
push
popa
xor
ss
jo
imul
xor
filds
jno
mov
and
jmp
hlt
daa
jb
out
dec
cmp
call
int
ljmp
and
jecxz
jp
imull
inc
mov
cmp
add
sub
mov
lret
mov
lea
sub
add
mov
mov
data16
push
fisttpl
and
pop
int
dec
mov
xchg
mov
xlat
adc
scas
shl
mov
mov
into
push
dec
fsubs
dec
pop
int
push
mov
sbb
jg
dec
mov
out
pmulhw
jmp
out
mov
add
adc
mov
mov
sub
cld
mov
hlt
fldt
mov
imul
jl
ficompl
xchg
add
ret
shll
xchg
jge
adc
xchg
jnp
sti
stos
inc
cmc
std
imul
inc
sub
std
out
fdivrp
ljmp
jg
in
and
sub
cmp
cltd
call
rcrb
inc
out
icebp
insb
popa
mov
lds
sbb
std
dec
xchg
test
cli
dec
sbbb
movsl
scas
imul
das
mov
daa
pushf
mov
out
shll
push
lret
inc
fld
inc
imul
sbb
jns
retw
iret
pop
jb
ja
and
xor
xor
mov
xor
inc
mov
cmp
fs
mov
int3
adc
xchg
jnp
clc
daa
stc
ss
pop
xchg
xor
dec
dec
ja
and
test
addr16
dec
popf
mov
cs
sbb
xchg
add
xchg
divb
cmp
outsl
fucomp
mov
mov
mov
fadds
mov
inc
cmp
mov
push
int
sub
jo
jg
or
lds
mov
imul
jl
jge
js
push
lea
shlb
adc
jle
rolb
push
mov
cli
loope
push
mov
pop
in
stc
fnstenv
push
orps
in
mov
test
aad
imul
shlb
add
xor
jne
sbb
aas
push
push
hlt
cmp
loop
pop
inc
je
lcall
xchg
xlat
loop
mov
ds
shrl
mov
pop
inc
enter
mov
inc
mov
ror
sub
sbb
mov
add
sub
mov
sti
in
js
mov
out
shrl
inc
flds
leave
sub
scas
mov
mov
out
mov
mov
hlt
pop
lock
xchg
push
sbb
add
jle
mov
cmpsb
pop
pop
call
push
pop
jne,pt
and
into
mov
daa
xchg
inc
mov
jo
scas
jo
sbb
fsubp
nop
xor
in
jmp
leave
dec
sbb
stos
into
jo
jne
fildll
mov
mov
js
adc
mov
lahf
mov
cmpsb
push
js
jne
mov
into
fnstcw
push
mov
stos
out
call
dec
repnz
sub
sub
pop
xchg
jbe
dec
xor
and
nop
jmp
xchg
lea
mov
fdivr
mov
sti
or
pop
cmp
cltd
test
aad
xchg
push
adc
pop
repnz
aaa
mov
dec
in
rol
fdivs
aam
xchg
insl
mov
sub
and
mov
pop
jno
cmp
add
and
shll
or
add
mov
daa
lea
add
sbb
sub
push
xchg
jns
jl
lret
jnp
jge
cmpsb
or
and
test
xchg
daa
iret
xchg
or
push
push
test
inc
mov
mov
add
xchg
sub
pop
inc
hlt
pushf
imul
inc
push
cmp
shr
or
adc
dec
cmp
mov
add
mov
pop
mov
adc
cmp
add
xor
pop
sbb
scas
cld
mov
sbb
clc
mov
lds
lcall
cmp
lea
test
jge
iret
int
sbb
xchg
cld
sbb
add
ret
sets
mov
rorl
aas
out
inc
test
lods
and
js
adc
rclb
movsb
bound
sbb
lcall
jnp
sarb
mov
adc
loop
scas
mov
pushf
pop
paddw
scas
sub
and
outsb
fmuls
mov
movsb
cmp
gs
addb
pop
ret
jbe
mov
cmp
dec
mov
dec
pop
or
stc
imul
popa
sbb
sbb
dec
movsb
jns
dec
dec
lahf
inc
dec
or
mov
adc
std
push
scas
lods
jns
sub
test
mov
cmpl
push
int3
decb
in
add
xchg
mov
mov
add
push
lahf
cmp
ljmp
inc
cmp
fisubs
ljmp
movsl
daa
lods
sahf
mov
dec
mov
test
push
out
sahf
sub
loope
mov
imul
inc
stos
pop
and
push
ljmp
insb
adc
popa
aam
push
pop
in
movsb
test
insb
or
cmp
xlat
mov
int3
pop
shl
cmc
data16
push
divb
jl
inc
mov
fists
insl
enter
mov
sahf
fistpl
nop
popf
xchg
out
scas
jne
mov
in
insl
pop
das
pop
insb
data16
fnstenv
cmp
sub
push
or
jmp
sub
xor
lahf
mov
push
push
jle
loope
inc
movsl
dec
mov
fnstenv
adc
adc
movsb
in
mov
jae
jmp
xchg
adc
mov
mov
jae
test
xchg
sub
inc
lods
out
xor
adc
jno
and
cmpsb
mov
pop
ljmp
mov
stos
and
or
push
mov
das
push
push
fnstsw
inc
enter
and
inc
mov
lret
inc
addr16
pop
sbb
jo
jb
in
mov
and
in
mov
mov
xchg
push
outsb
pop
sub
lds
push
push
jns
in
repnz
jnp
loop
lret
popf
out
lods
test
xor
mul
ficomps
gs
and
jmp
sbb
adc
pop
nop
and
loope
ljmp
xor
hlt
mov
ret
repnz
dec
movsb
push
cwtl
adc
imul
mov
inc
dec
sub
push
sti
mov
xchg
les
jne
push
sbb
jno
xor
jne
inc
jns
ficompl
iret
adcb
ret
outsb
mov
jmp
aam
hlt
pushf
xor
movsl
fwait
xor
xchg
and
dec
xchg
std
xchg
mov
or
adcb
std
pusha
push
cmpsl
imul
int
daa
jle
dec
push
pop
rcrl
inc
mov
call
popf
dec
push
inc
mov
cld
enter
rclb
in
inc
sbbl
cmp
int
jge
adc
int3
scas
scas
mov
mov
pop
test
add
int
inc
mov
hlt
das
sbb
add
push
and
add
inc
cmp
faddl
aaa
mov
into
loope
rclb
cmp
in
adc
aam
push
jbe
jno
cmp
lock
dec
mov
inc
clc
dec
adc
push
mov
outsb
bound
fs
mov
push
movsl
outsb
sbbb
push
bound
fidivs
mov
inc
mov
fcoms
lret
sub
int
hlt
inc
out
aas
lahf
test
push
fisttpll
inc
int
cvtps2pi
iret
inc
insl
adc
cli
sub
sub
xchg
xor
fidivs
push
outsb
mov
jbe
sub
lea
outsl
ret
fnstenv
int3
mov
add
daa
push
pop
push
push
fldenv
test
cmp
pop
xlat
adc
cltd
cmp
mov
or
mov
fs
rcrb
in
or
cmp
out
adc
pop
cmp
and
push
mov
xchg
and
fadds
aaa
pop
pop
sbb
mov
xchg
sbb
dec
mov
push
jl
fistps
jp
jnp
icebp
icebp
push
subl
xlat
in
inc
stc
clc
adc
div
pop
ficoml
lods
xor
and
pushf
inc
adc
mov
inc
fisubs
es
std
sbb
int3
jl
push
mov
xchg
cmp
lock
lahf
dec
cmp
fsts
cmpsb
push
mov
dec
adc
and
lods
imulb
lods
aaa
movsl
inc
in
fists
je
fisttpl
push
aaa
repz
xchg
dec
aam
jnp
sbb
sub
and
mov
cmovl
mov
pusha
in
inc
imul
mov
push
dec
out
into
stos
mov
add
clc
and
sahf
out
dec
adc
cli
mov
scas
adc
xchg
jg
inc
movsl
lcall
movsl
mov
movsl
pop
popf
scas
repnz
push
int3
in
mov
mov
fisubrl
pop
test
mov
sbb
cltd
je
pop
dec
arpl
or
lds
add
mov
xchg
xor
xor
sbb
arpl
imul
fisubrs
test
pop
out
loope
nop
test
mov
push
xchg
inc
test
fs
stos
das
lods
shr
ljmp
pop
and
ds
sbb
jmp
inc
lret
filds
inc
cmp
or
mov
mov
adc
in
push
imul
mov
mov
sarb
xlat
push
cmc
aaa
lret
out
push
inc
aas
push
xchg
cli
int3
jle
imul
nop
ret
jmp
aad
add
fisubrl
jb
int
ror
sub
mov
test
sarb
ja
sbb
cld
push
xchg
fadds
sbb
inc
add
std
jne
xchg
repz
mov
mov
sbb
popa
popf
sahf
fwait
push
mov
es
cmpsl
call
cwtl
jl
mov
insl
pop
inc
adc
cmp
les
aas
xchg
inc
mov
dec
xchg
cs
test
mov
in
inc
xlat
adc
movsb
mov
aad
mov
pop
dec
lds
pusha
inc
mov
xchg
stc
dec
pushf
mov
push
sbb
jp
jl
dec
insb
fidivrs
pop
addr16
enter
cmpsl
cwtl
jge
add
lret
sbb
hlt
and
and
std
int3
roll
ficompl
lds
fisttpl
adc
mov
sahf
push
or
outsl
fs
shl
push
xor
rolb
mov
mov
out
shl
and
movsl
dec
and
push
or
sub
jmp
hlt
test
mov
cld
fisttpll
xchg
in
pop
adc
ss
lock
test
add
movsl
adc
mulb
jno
cmpsb
push
adc
dec
push
lods
scas
jmp
or
loope
or
ficoml
aaa
or
xchg
mov
add
push
fcoms
scas
insb
test
in
adc
loop
xor
sub
mov
mov
aam
leave
push
inc
std
out
jecxz
push
sti
jno
sub
cmc
mov
mov
stos
int
push
test
call
leave
arpl
xor
imul
add
std
mov
pushf
dec
lds
push
stos
xor
fs
icebp
andb
data16
fnstcw
inc
lret
fbstp
mov
cwtl
push
in
in
xor
or
dec
pop
xor
and
mov
add
push
pop
in
lds
ret
mov
pop
jmp
pop
dec
add
ja
imul
mov
imul
inc
push
jle
pop
dec
jnp
jp
daa
mov
mov
push
xchg
cmp
and
mov
xor
push
or
mov
test
adc
test
fdivl
cli
mov
xor
movsb
std
out
add
outsb
inc
xorl
pop
sbb
mov
lds
js
pop
xor
inc
push
pop
and
outsb
pop
mov
insb
es
jg
loope
dec
or
iret
inc
jns
xchg
xchg
or
add
cmp
or
xor
xchg
xchg
stos
lock
dec
dec
adc
xor
outsb
data16
pop
insb
ljmp
jnp
inc
dec
fildl
mov
outsl
orps
gs
aad
ret
inc
pop
cmp
push
push
mov
xor
xchg
test
imul
cmpsl
pop
sbb
sbb
pop
push
pop
out
call
dec
aas
pushf
addb
mov
arpl
andl
sub
imul
and
xchg
js
jecxz
cmp
sub
cmp
movsl
dec
pushf
lock
pop
popa
inc
or
or
imul
ja
mov
and
cli
jmp
pop
and
cltd
cmp
xchg
pop
cltd
jno
out
add
and
hlt
sqrtps
sbb
inc
mov
fucom
dec
jnp
ljmp
or
and
outsl
pop
popf
add
xchg
push
add
mov
adc
outsb
mov
inc
cmp
loopne
mov
jmp
fstl
lods
push
xchg
pop
stc
outsb
inc
lods
subl
arpl
push
and
je
jnp
pop
jge
pop
mov
push
inc
push
ljmp
iret
adc
cwtl
jne
pop
data16
ljmp
fwait
and
or
sub
roll
push
xchg
adc
rcl
mov
stos
fs
jle
fisubs
jmp
andl
cltd
inc
pop
out
in
jns
movsl
fs
ja
dec
int3
mov
in
xor
xchg
decb
mov
rol
sub
cli
push
or
adc
push
rcll
mov
lock
ds
mov
sahf
mov
nop
cmp
imul
cwtl
sub
xlat
pushf
add
out
mov
das
loop
pop
pop
pop
or
cwtl
imul
sti
push
xchg
jbe
xor
xchg
subl
js
insb
cmp
cmp
mov
scas
pusha
pop
lret
in
sbb
mov
out
dec
inc
mov
pushf
and
mov
xlat
mov
std
addl
mov
cmp
cltd
xor
stc
jb
push
jl
insb
add
fmuls
xchg
xor
stos
cs
or
lahf
arpl
sar
aad
pop
add
xor
lcall
fcoms
jl
insb
iret
repz
push
cld
pop
dec
pop
and
addr16
pop
inc
xchg
jmp
stos
xchg
mov
pop
xor
nop
rolb
ljmp
push
jle
mov
inc
cmp
jl
and
or
in
rorl
inc
adc
cmp
cmp
je
popf
sarb
and
sbb
adc
or
prefetch
xchg
and
mov
xor
mov
mov
movsb
es
outsl
mov
adc
mov
xor
cmp
lods
aam
decl
cmp
dec
fsubs
ret
cmpsl
out
gs
add
cmp
call
mov
jns
popa
adc
inc
cli
push
loope
xchg
push
loopne
outsl
sbb
into
enter
add
xor
adc
or
stos
ret
in
int
insb
in
mov
scas
loop
mov
mov
jge
ret
xchg
xor
flds
cltd
stc
fucomip
test
not
xlat
dec
shrb
or
add
ficomps
or
insl
subl
dec
das
or
sbb
dec
cmp
add
fistl
lret
pop
into
int3
mov
push
enter
mov
aas
or
lret
sbb
stos
jp
aas
flds
inc
fwait
pop
mov
cld
int3
je
dec
cmc
or
xor
xchg
jmp
jb
loopne
lock
push
add
push
xchg
and
ss
in
adc
sahf
lock
adc
int3
out
shl
jb
cmp
xchg
shlb
lock
jg
orl
leave
test
into
and
sub
adc
lret
std
inc
cld
ret
adc
out
test
add
lret
test
divl
repz
repz
mov
popa
leave
stos
jmp
mov
mov
pop
xlat
cmp
ret
ror
daa
mov
lds
test
jle
push
lret
xchg
jmp
jb
scas
cmc
mov
xchg
fsubrs
jg
adc
inc
sbbl
add
jno
mov
pop
sarb
xlat
jmp
adc
movsl
nop
inc
sub
movsl
test
lea
fnsave
je
add
pushf
and
xchg
les
mov
mov
popf
fstp
mov
je
mov
inc
inc
popf
add
and
mov
push
inc
jp
mov
ljmp
imul
jo
scas
enter
cmp
sub
push
jnp
iret
xchg
pop
call
jae
fldcw
call
stos
loopne
jp
and
cmp
int
or
out
xlat
pop
pop
and
loop
or
icebp
sbb
jb
xor
sub
jge
daa
sub
sub
mov
and
push
mov
fmull
jg
stos
jnp
adc
and
mov
call
mov
test
data16
pushf
fiaddl
mov
push
xchg
sbb
lods
out
jmp
cmp
jo
push
lret
pop
sar
dec
jge
clc
sbb
repz
xor
fiadds
fmull
je
or
sub
inc
popf
insl
movsl
bound
xor
push
push
fnstenv
or
push
lahf
or
sbb
leave
mov
icebp
adc
and
addr16
dec
movsb
inc
mov
mov
ljmp
adc
fsts
je
push
sti
ja
repz
das
aas
imul
xchg
lods
cld
cwtl
test
push
xor
out
mov
and
mov
push
and
mov
out
adc
mov
and
dec
das
out
pop
push
sbbl
nop
xor
dec
push
jne
insb
xchg
aam
test
out
sub
sbb
or
jmp
xor
push
sahf
inc
push
call
loope
jo
xchg
enter
in
in
ret
xchg
lods
inc
stos
fidivl
push
pop
lret
arpl
loope
repnz
lahf
enter
stos
and
out
mov
gs
mov
test
jno
pop
jmp
inc
xor
sub
in
cmpsl
js
and
sub
dec
or
hlt
call
sahf
push
pop
jle
mov
or
rcrl
push
push
sub
xlat
or
push
sub
cli
in
shll
jge
rclb
cmp
inc
mov
nop
dec
cltd
mov
out
popf
imul
jmp
andb
sti
lods
lock
popa
je
xchg
adc
fstps
xor
icebp
or
icebp
sbb
popf
stc
dec
loope
jmp
fcomi
jl
ficoml
xor
cmp
mov
mov
sahf
xchg
pop
mov
mov
test
lcall
loopne
or
mov
jg
bswap
jnp
mov
inc
cmpsb
mov
cmp
pop
bswap
leave
fidivs
xchg
bound
cwtl
mov
insl
lock
xor
aam
inc
add
out
nop
in
lock
xor
insb
test
xchg
out
pusha
jmp
and
test
mov
xor
dec
daa
cmp
cmp
les
mov
and
shl
loope
jecxz
mov
xor
dec
inc
xchg
and
icebp
enter
push
add
push
and
push
pop
push
push
mov
lret
iret
mov
hlt
fisubs
lds
push
xchg
fucomip
jge
les
mov
inc
push
loop
push
inc
push
mov
inc
int
add
push
mov
and
xchg
loop
cwtl
pop
sahf
shrl
mov
sahf
and
xchg
jmp
pop
sbb
mov
scas
fistpll
xchg
mov
arpl
add
mov
adc
pop
icebp
pop
pushf
add
lcall
fidivl
les
shl
pop
std
pop
arpl
dec
jnp
mov
and
sbbb
js
stos
mov
push
adc
sbb
jno
loop
out
sub
xor
repnz
push
sub
sbb
push
sub
dec
mov
cmpsb
rorb
dec
cld
push
inc
inc
and
pop
mov
cmp
insl
sbb
inc
xor
mov
xchg
in
scas
and
lea
dec
adc
cltd
sbb
mov
pop
das
ja
lock
dec
inc
push
mov
cs
dec
cs
cmp
mov
jb
mov
push
push
xchg
inc
add
cs
mov
test
aas
mov
xor
xor
test
mov
cmc
shrl
add
loop
std
clc
jg
popf
jno
gs
add
cltd
aad
insl
xlat
jnp
lret
cltd
ds
das
push
sbb
xchg
jne
lods
mov
pop
nop
scas
divb
mov
outsb
lahf
inc
xor
or
mov
enter
clc
inc
mov
lds
mov
jno
sbb
sbb
test
jmp
jae
inc
fs
lea
xchg
add
jnp
imul
fdivs
mov
mov
lcall
cmp
incl
cmpsl
fstp
and
jne
push
sub
pavgb
loop
pop
xchg
sbb
fld
mov
or
sahf
insb
pop
int3
push
lret
mov
xchg
dec
aam
pop
test
and
fs
je
pop
pop
xchg
fstps
adc
mov
aas
xchg
popf
mov
inc
push
or
push
ds
xchg
mov
xchg
mov
call
adc
hlt
pand
add
mov
fdivs
ds
imul
jns
xorb
ret
pop
xor
inc
xor
ja
in
jl
test
cmpsb
push
add
imul
mov
pushf
imul
mov
loopne
shll
push
pop
sub
jmp
add
push
pop
mov
add
fcmovu
push
lahf
or
in
mov
jb
pop
xchg
add
add
out
cmp
lret
cwtl
stos
xchg
out
mov
iret
cmc
mov
leave
das
loope
or
fisttps
cmp
xchg
pop
pop
inc
mov
shll
mov
daa
push
mov
stos
fyl2xp1
sahf
test
leave
dec
loope
dec
cmpsl
int3
mov
in
inc
shlb
mov
sub
and
ljmp
leave
sub
ljmp
icebp
pop
iret
in
popa
popf
cli
sbb
pop
js
or
push
push
popa
sub
sub
push
cmpsl
inc
mov
add
int3
add
nop
mov
or
mov
adc
test
jne
in
and
inc
inc
pushf
cmpsb
jecxz
mov
dec
rorb
cmp
mov
cmpsb
cmpsb
lods
out
push
mov
add
lea
bound
mov
mov
scas
bound
sub
mov
sbb
test
sub
pop
push
outsl
push
imul
mov
cmpsb
jmp
shrl
mov
dec
and
sbbb
nop
jge
sbb
shlb
pop
xor
shll
pop
adc
mov
adc
aaa
repz
in
push
mov
add
lods
sub
adc
adc
aam
xor
sbb
push
jmp
cs
lock
in
push
inc
inc
ja
adc
jp
xchg
sahf
add
pop
pop
adc
or
jecxz
stos
jl
mov
mov
xor
mov
push
mov
jl
add
mov
shrl
repz
adc
insb
push
dec
lea
pop
imul
cwtl
or
jg
int3
neg
xor
push
inc
cmp
std
jb
xor
jae
xchg
mov
dec
and
or
aaa
inc
aaa
repz
sbb
js
test
arpl
fwait
incb
stc
adc
xor
loope
jnp
cmp
jecxz
adc
mov
add
into
mov
adc
js
jne
nop
aam
mov
pushf
insb
push
lods
xchg
pop
daa
xchg
mov
call
pop
dec
fdivl
add
pop
in
popa
lods
cmpb
pusha
or
ret
arpl
in
ret
jns
pop
imul
cmp
call
pop
lods
popa
insl
cmp
dec
mov
and
push
cmc
sub
adc
cmp
sub
out
and
mov
push
inc
mov
pop
arpl
or
dec
shrb
mov
mov
mov
sbb
rcrw
sbb
outsl
push
push
sbb
xchg
pop
stos
test
fcompl
aas
inc
fistpl
test
jo
and
shrl
in
outsl
repz
mov
xlat
popfw
aas
cmp
hlt
scas
push
test
aaa
push
jg
inc
pop
cmpsl
cmp
int3
divl
inc
je
mov
sub
mov
add
stos
loopne
popa
sbb
test
cmc
push
in
addr16
sbb
hlt
out
add
loope
es
mov
or
add
in
or
mov
clc
ret
sarl
adc
enter
push
mov
sub
stc
ds
leavew
jl
mov
cmp
mov
enter
jle
jmp
fucomp
aaa
es
pop
dec
gs
push
arpl
out
or
orl
pop
in
lahf
dec
and
ljmp
jecxz
sub
stos
imul
cmpsb
xchg
insl
sbb
aaa
mov
mov
jecxz
sti
cmp
repz
dec
cmp
push
sbb
popa
adc
dec
inc
push
in
aaa
dec
sbb
sti
into
rcrl
jmp
fbstp
aaa
dec
es
mov
incl
push
popa
test
lcall
jae
ds
push
mov
dec
jbe
push
aam
fisubrs
test
xor
stos
cld
stos
dec
cmpsb
sbb
mov
sarb
cmp
sub
insb
push
mov
sbb
cmp
sahf
sub
rol
stos
pushf
stc
je
mov
in
subb
add
sbb
fimull
sarb
adc
push
gs
inc
inc
mov
iret
dec
in
test
pop
mov
rol
xor
pop
pop
inc
in
lds
mov
int
push
dec
pop
xchg
pusha
xor
mov
mov
loope
add
loopw
cld
div
aad
aaa
or
ret
mov
mov
dec
mov
inc
sahf
leave
inc
xchg
mov
das
pop
andb
mov
repz
or
into
fadd
push
in
or
jnp
orl
mov
adc
xor
inc
dec
fidivrl
dec
movsl
lret
aas
jnp
int
pop
dec
pop
push
std
test
insl
dec
jecxz
xor
mov
sub
mov
outsb
test
xor
shll
cmp
dec
popf
out
mov
sub
cmpsl
inc
leave
pop
fdivrs
stos
xor
mov
pop
or
out
sbb
test
aas
shll
jp
lret
addr16
mov
call
mov
cmp
push
xor
mov
push
push
and
lahf
in
rclb
test
bound
cmp
in
dec
aaa
sub
loope
xchg
lret
xorb
inc
jno
and
xchg
out
es
xchg
or
push
aas
dec
sbb
add
cmp
stc
mov
cmp
clc
je
mov
or
in
stc
xchg
jns
mov
inc
out
scas
pop
fwait
gs
clc
into
outsl
or
pop
ret
stos
je
inc
mov
inc
arpl
inc
and
dec
push
movsl
inc
xor
lock
test
pop
inc
lcall
xchg
inc
movsl
mov
or
out
xchg
cmp
ret
leave
popf
or
lds
mov
cmp
mov
dec
mov
lcall
dec
test
mov
xor
or
jmp
lahf
fnstenv
ret
subb
fimull
sbb
loope
cmpsb
repnz
dec
mov
push
and
jecxz
pusha
faddl
adc
sti
lahf
xchg
cmp
bound
rcrb
sub
clc
in
arpl
fnstenv
clc
sbb
decb
cmpb
call
test
sbb
test
std
js
je
mov
daa
jle
loope
push
icebp
sti
sbb
jmp
sbbl
sub
repnz
int
jne
mov
addr16
stos
sbb
leave
movsl
cmp
cmp
adc
xor
dec
and
aaa
arpl
xor
cld
mov
mov
cmp
jmp
sahf
cmc
pop
leave
stos
imul
add
fcmovnb
pop
add
xchg
in
adc
js
push
adc
add
mov
out
sub
js
pop
sbb
jp
jno
add
aaa
loope
and
out
jecxz
js
push
cmp
and
adc
or
ficoms
cmc
mov
mov
rcrl
or
jle
pusha
mov
ss
jmp
insl
bound
cmp
jecxz
icebp
cs
mov
fistpl
movsl
push
daa
lret
push
shr
das
push
mov
cmp
push
mov
je
cmp
aas
xlat
dec
cmp
call
and
jge
add
loopne
and
scas
fucomip
mov
orl
and
push
add
je
nop
jb
shrb
mov
lock
sub
push
sub
mov
out
mov
dec
jb
outsb
xchg
jecxz
call
and
mov
aam
adcb
push
popa
or
popa
arpl
jle
sub
and
xor
adcb
push
roll
sahf
lods
in
cmp
inc
push
ljmp
imul
or
push
mov
sub
out
leave
dec
mov
or
mov
aad
lds
xchg
pop
ljmp
insl
add
jecxz
sbb
int3
sti
cmpsl
enter
inc
mov
xchg
and
in
push
sub
mov
movsb
ss
xchg
jecxz
arpl
lahf
ss
or
nop
loope
or
lock
ret
aaa
cltd
andb
jne
inc
pop
flds
es
xchg
mov
icebp
ss
addr16
fidivrl
testb
shrb
push
mov
jne
test
pop
cwtl
fidivs
in
out
pop
push
shll
sub
repnz
pop
jecxz
out
fdivr
pop
and
mov
inc
lock
inc
xor
pop
or
into
dec
push
fstps
lock
incl
jae
sub
lods
stos
out
imul
cmpsl
movsb
pushf
in
ficoms
std
lret
imul
dec
arpl
lds
faddp
je
rcrb
ret
jns
mov
pop
cmp
enter
inc
je
mov
sub
sbb
outsb
cmpsb
pop
sub
fs
pop
inc
jmp
push
cmp
icebp
inc
pop
pop
das
sbb
or
xchg
add
bound
xor
out
jns
cmp
stos
out
adc
jge
rcll
dec
and
in
pop
subb
jne
pop
or
xchg
cmp
loop
mov
jmp
jge
out
push
adc
xchg
push
out
sub
push
ret
adc
leave
sbb
ds
mov
xchg
filds
xor
cltd
or
xlat
hlt
fcoml
scas
or
mov
or
mov
pop
mov
mov
pop
les
push
ja
cwtl
mov
dec
or
push
dec
out
in
xchg
mov
lods
lea
dec
xchg
ss
xchg
enter
xchg
and
cmp
scas
fsubrs
hlt
mov
sti
daa
lock
xorb
fwait
push
pop
push
stc
lcall
dec
jbe
pop
and
cmp
xor
inc
enter
push
in
xchg
div
jbe
ffreep
cmpsl
or
inc
add
aam
sub
cmp
ss
cmp
push
loop
lret
popf
jge
adc
in
mov
dec
lods
pop
xchg
and
pop
mov
jecxz
out
ret
roll
pushf
imul
ds
fcmovnu
xchg
sub
shlb
jg
sub
inc
xor
or
jp
xchg
ljmp
sbb
rorl
lock
or
sub
stos
and
and
and
push
adc
mov
jne
loope
inc
js
sub
pop
lea
stos
and
test
dec
ja
dec
loopne
enter
sub
sbb
jge
lret
adc
call
xlat
ret
les
fnstenv
insb
sub
jg
pop
aam
test
or
adc
das
into
jp
test
imul
fstpt
rclb
int
add
adc
arpl
imul
std
xor
inc
movsb
outsl
inc
mov
mov
cmpl
addl
test
and
out
inc
jo
dec
fwait
push
inc
sbbb
cld
loop
xor
mov
fwait
mov
mov
jl
cli
mov
outsl
pop
mov
adc
lods
or
inc
sub
subl
mov
in
cmp
xchg
mov
in
pop
pusha
mov
adc
cld
or
cmp
inc
dec
pop
mov
loope
lods
adc
cmp
inc
push
movsb
incb
scas
xor
push
pop
xchg
cmpsl
cltd
xchg
int3
ljmp
xchg
jp
add
xor
pushf
ret
cmp
dec
lcall
shlb
test
ffreep
add
rorl
add
dec
cmp
in
xor
fistpll
pop
ror
add
mov
out
xchg
movsb
cli
dec
outsb
cmp
or
fstpt
mov
jmp
xchg
js
fisubl
stos
cmp
dec
mov
orl
and
pop
fsubrl
mov
jne
mov
imul
rcll
dec
or
fldcw
enter
aaa
pop
jge
es
pop
cmp
mov
push
sub
mov
pop
mov
cmp
rcrl
cmpsl
out
inc
hlt
push
jb
movsl
data16
push
cwtl
inc
sbb
fnstcw
inc
or
mov
jb
push
adc
push
shrb
scas
cwtl
cmpb
aas
jae
aaa
lret
fmull
sub
call
cs
icebp
sub
shrb
mov
cmc
pop
lret
and
inc
add
lods
cmp
mov
mov
popa
hlt
shl
jle
jge
sar
jae
mov
add
xchg
cmp
cmp
dec
sub
rclb
mov
pop
out
fdivr
adcb
dec
ficompl
popa
jnp
addr16
pop
paddw
mov
cwtl
jae
add
jbe
loopne
fbstp
cs
and
jno
lea
icebp
or
jp
lods
loopne
or
lds
arpl
idiv
mov
jmp
in
or
mov
mov
shrb
xchg
mov
xor
icebp
pop
aas
sub
repz
enter
pop
jae
sub
cmp
jbe
iret
test
pop
sahf
and
nop
dec
lahf
add
jne
xor
jg
inc
pop
ja
and
lds
lock
jle
add
mov
pop
cld
sub
xchg
xchg
stos
push
test
xor
push
push
cmp
rclb
jle
push
clc
pop
fsts
test
lea
xchg
push
ret
inc
or
mov
data16
inc
aad
mov
inc
jns
cmpb
jmp
cmp
loopne
das
cli
xchg
mov
jp,pn
mov
sbb
xor
cmp
jns
popf
scas
stos
add
outsb
push
push
sbb
scas
fucomp
inc
push
gs
and
in
xchg
stc
jo
dec
sti
jbe
mov
pop
test
xchg
pop
sahf
stc
jl
aam
and
xor
jnp
cli
in
cltd
fimuls
mov
testb
daa
jmp
fcmovbe
pop
mov
sub
pushf
mov
js
push
add
lahf
jo
or
stc
std
addr16
add
movsl
ja
push
lods
dec
jb
inc
sbb
push
push
scas
cmpb
push
ret
cmp
mov
xchg
jp
jnp
std
mov
mov
push
add
push
dec
mov
cmpsl
mov
pop
inc
jns
iret
loop
mov
pop
jb
xlat
mov
or
fisttpl
xor
inc
sub
lock
out
mov
xor
mov
lahf
sub
cmpsb
xchg
ss
fadds
sbb
hlt
sub
adc
mov
add
out
inc
ja
pop
fstl
movsl
xor
mov
mov
int3
or
arpl
lcall
sub
adc
mov
out
push
inc
or
dec
lcall
pushf
negl
xchg
push
pushf
hlt
sti
mov
adc
stos
faddl
sub
xor
cmp
adc
movsl
pop
idivl
mov
cmp
sub
mov
pop
and
inc
lock
xorb
cs
outsb
jnp
js
or
dec
in
jo
pop
mov
sbb
mov
inc
fnstenv
call
mov
in
sti
sub
aad
mov
mov
push
dec
pop
shrl
daa
and
scas
mov
mov
stos
jbe
data16
mov
test
decl
cmp
ret
and
adc
pop
xchg
xlat
cmp
cltd
mov
pusha
imul
das
movsb
dec
jnp
push
scas
xchg
or
ds
jmp
test
inc
das
rcrl
iret
mov
fcompl
scas
push
and
popf
mov
loop
mov
cwtl
js
inc
mov
jle
mov
out
std
pop
aas
pop
or
sbb
fstl
mulb
adc
or
pop
mov
and
out
stos
popf
pop
adc
stos
xchg
push
xchg
in
jg
jne
or
aaa
cltd
pop
jae
push
loopne
push
lods
ret
shlb
paddw
aas
sub
jne
fldt
mov
jnp
cmp
fdivs
push
rclb
cmp
inc
jne
inc
mov
mov
jp
xchg
sbb
loope
push
cmp
push
jnp
mov
fnstcw
dec
les
dec
pop
int3
shrl
or
stc
adc
aam
add
cmc
mov
pop
xor
negb
cli
adc
jnp
add
cmp
out
xchg
pop
adc
aad
sub
inc
ret
sbbl
cmp
fs
add
xchg
shr
push
push
test
hlt
cld
cmpsl
cmc
test
mov
sbb
test
mov
jno
mov
imul
subb
xchg
and
cmpsb
add
rorb
jmp
aas
mov
repz
shl
inc
fdivrs
mov
push
rcrb
out
sbb
mov
sub
cmpsb
jae
or
popa
dec
mov
std
adc
add
sar
jl
xor
scas
pop
or
push
mov
std
adc
mov
lret
xchg
mov
xor
pop
mov
repz
add
xor
enter
lock
aaa
das
pop
loop
cmpsb
add
cmp
lcall
dec
cltd
orl
inc
psllq
pop
imul
lods
in
inc
aas
mov
aaa
into
mov
or
lahf
push
add
push
pushf
dec
lea
adc
pop
call
adc
adc
adc
mov
push
jp
addr16
dec
sbb
mov
cmp
push
add
cwtl
mov
inc
sub
xchg
pop
xchg
push
pop
or
imul
sbb
add
xor
inc
mov
push
mov
dec
outsl
push
push
aaa
xchg
out
xchg
gs
cltd
lcall
inc
adc
pop
repz
in
outsb
cmp
out
nop
and
cmp
in
sub
rorl
and
sub
push
or
jae
roll
shl
dec
cmp
push
int
sub
jecxz
loope
jecxz
sub
inc
sub
ret
jge
test
and
mov
inc
aaa
sbb
cmpsb
xchg
push
pop
xchg
imul
mov
sti
dec
fnclex
xchg
sub
lahf
jb
sbb
sbbl
sbb
adc
pop
in
dec
outsl
hlt
pop
and
mov
loop
sbb
push
add
je
loop
mov
jae
mov
data16
xor
sbb
fwait
jbe
into
data16
iret
out
cmp
fdivs
push
jnp
sub
or
mov
and
jmp
adc
add
sbb
lods
xor
stos
hlt
mov
pop
in
bound
jne
das
pop
push
sbb
arpl
popl
das
push
stos
js
adc
lods
ja
aad
ds
aaa
int3
push
pop
cli
inc
hlt
adc
mov
pop
out
in
jnp
xlat
mov
test
sbbl
icebp
add
inc
ja
bnd
in
or
imul
sbbl
repz
ret
mov
movl
push
pop
cmp
fstl
imul
xchg
test
and
in
lds
out
lock
test
push
out
lret
jb
adc
mov
or
stos
fimuls
xor
and
xchg
xor
gs
daa
pushf
mov
dec
fwait
add
cmp
mov
dec
shrb
adc
sbb
push
push
adc
test
std
nop
scas
mov
dec
jmp
ret
fcoms
movsb
pop
inc
lods
jle
mov
mov
and
mov
rcll
adc
xorl
fdivrl
mov
mov
add
decl
lock
lock
mov
insl
out
mov
mov
ja
sbb
cmp
imul
les
push
push
jnp
sar
add
iret
push
pop
add
push
cltd
inc
and
push
jbe
add
rcrl
push
mov
rcll
mov
jns
sbb
pop
xlat
cmc
mul
sbb
jle
lock
pop
and
leave
push
scas
and
idivl
mov
cmp
flds
int
dec
cmp
jnp
lret
xchg
hlt
inc
movsl
inc
adc
cmp
xlat
dec
xchg
jno
ror
in
mov
mov
ljmp
jns
insb
or
mov
or
jecxz
loopne
scas
adc
dec
lahf
push
cltd
jecxz
dec
mov
cmp
daa
xchg
sbb
or
ja
das
pop
sbb
mov
mov
mov
inc
sub
or
pop
insb
jge
push
push
popf
jno
add
inc
inc
and
push
cwtl
sbb
testb
imul
sarb
mov
pop
sbb
mov
xor
or
mov
lds
test
lods
dec
adc
xchg
mov
call
outsl
xor
mul
mov
fnstcw
pushw
mov
jne
sahf
mov
pop
sbb
aam
mov
inc
add
lret
xor
in
loopne
int
push
mov
add
aaa
xlat
push
aas
mov
pop
and
adc
test
xor
push
mov
inc
scas
or
add
push
lahf
cltd
sub
pop
dec
add
pop
cmpsb
inc
fadds
xor
inc
lods
add
mov
ja
jl
enter
repz
mov
push
in
jge
push
xchg
popf
lods
mov
nop
into
std
xchg
out
mov
adc
pop
jecxz
daa
stc
sub
insl
imul
or
mull
xor
int
add
and
jb
push
ja
cmpsb
mov
mov
jp
add
push
into
ret
inc
shl
cmpsl
mov
es
aam
xchg
fwait
leave
xchg
inc
divl
orl
and
pop
ss
rol
insb
adc
sarl
and
std
adc
outsb
aad
fimull
xchg
inc
fidivl
adc
xor
ljmp
cmp
xor
push
and
pop
sbb
or
out
iret
icebp
divb
dec
pop
fldt
cmp
push
subl
pop
test
dec
xor
push
int3
repz
push
out
push
push
fsub
push
pop
inc
xlat
xor
dec
rcrl
pop
sarb
fsts
lret
push
jp
test
push
pop
cmp
xlat
andb
cmp
insb
push
jns
rol
pushf
jecxz
mov
sub
lret
mov
lods
icebp
enter
fsubp
sub
sbb
jle
imul
cmp
adc
dec
in
loop
jge
add
shlb
and
cmp
mov
ud2
and
test
fs
clc
xor
out
push
mov
xor
rorl
cmp
inc
sub
xchg
push
cmp
and
xchg
insl
dec
push
and
pop
add
pop
in
loopne
xor
test
mov
and
ret
jo
mov
bound
das
and
popf
jp
jo,pt
or
pop
loope
cld
aad
outsb
or
add
test
jbe
push
jnp
push
pop
push
fcoml
push
adc
testl
nop
sbb
push
pop
and
aas
jno
add
mov
jge
and
mov
fldcw
ret
insl
fildll
stc
in
imul
bound
rcrl
addl
pusha
dec
cwtl
dec
mov
sbb
test
cmp
test
or
or
mov
or
lock
add
adc
xor
mov
in
bsr
pop
dec
pop
ds
mov
notb
cs
lret
sub
mov
popf
lock
xorb
mov
or
and
and
loope
das
add
ds
movsl
push
push
mov
gs
add
xor
movsb
movsb
out
cmp
jl
and
jno
jle
popa
sub
and
sub
xchg
test
mov
xchg
scas
mov
mov
jae
or
push
les
fdivs
mov
mov
add
subb
add
testl
push
stos
popa
cli
sbb
mov
or
loope
out
adc
xor
cs
divb
sahf
ret
jge
xchg
adc
push
push
pop
arpl
clc
mov
lret
mulb
outsl
pop
call
outsl
cs
cmc
lods
sahf
adcb
pop
push
jno
xor
jne
sub
fisubrl
or
sarb
daa
int
roll
fsubp
inc
add
into
stc
in
mov
xchg
mov
in
inc
jo
mov
pushf
in
scas
mov
mov
mov
mov
pop
ljmp
cmp
cld
aas
cmc
and
int3
sbb
cltd
movsb
or
dec
movsl
pop
mov
cmp
mov
push
xor
cmp
cld
jg
inc
dec
dec
inc
pop
test
insl
xor
xchg
pop
dec
pop
inc
pop
jmp
lahf
aad
pop
pop
cmp
jnp
lods
test
push
loope
lret
ss
jb
mov
dec
test
cltd
sti
clc
pop
lcall
push
popf
int
jle
cmp
sub
jmp
adc
mov
pop
xchg
add
arpl
xor
cmpsl
or
in
sbb
adc
dec
cmp
incl
repnz
sbb
and
stos
mov
rclb
sub
inc
adc
insb
stos
dec
push
sbb
bound
or
cmpsl
sbb
js
pop
add
les
sub
jbe
or
sti
cmc
scas
fabs
sub
hlt
and
ret
ss
jo
dec
add
mov
push
mov
xchg
lret
xor
cld
ljmp
imul
int3
dec
pop
jg
xchg
jg
imul
das
cmp
or
mov
pop
adc
mov
pop
leave
out
mov
lcall
or
sbb
scas
ret
orl
jmp
lods
dec
pop
in
pop
imul
xorb
shlb
ja
pusha
push
jnp
idivl
cmp
pop
sub
dec
dec
hlt
icebp
jmp
or
adc
fldcw
out
push
cmp
add
mov
pop
adc
jo
shlb
in
mov
xchg
ds
pop
outsl
iret
shlb
popa
lods
pushf
pushf
add
sbb
mov
sbbb
push
jbe
pop
mov
mov
rcrb
frstor
rcll
jge
aas
roll
cmp
add
xchg
aam
push
and
cmpsb
icebp
sahf
stos
mov
mov
mov
enter
jge
lds
sbb
lgs
jns
xor
cmp
dec
lods
insl
popl
push
pop
aaa
or
xor
and
push
mov
xchg
xchg
scas
mov
push
leave
in
int3
sub
imul
movsb
cmpl
insl
dec
negl
in
cmp
jo
jl
rcl
cmp
push
push
sub
mov
fsubl
jmp
outsb
mov
test
adc
int
dec
and
add
aam
mov
xchg
jno
adc
lea
cwtl
mov
outsl
jmp
cmp
imul
stos
pop
movsb
ret
mov
push
mov
pop
les
dec
call
jbe
and
in
je
and
xchg
inc
cli
js
rcll
lods
clc
jmp
mov
push
jo
mov
mov
mov
roll
dec
push
pop
sbb
negl
xchg
xchg
fsubrp
xchg
pop
adc
std
iret
mov
jle
imul
movsb
cmp
pop
jns
mov
pop
pop
ret
or
in
loop
mov
gs
insb
mov
xlat
stos
dec
movsb
sub
sbb
int
repz
notl
push
fadds
addr16
fistpll
aam
shrb
mov
jp
cmp
stc
pusha
sub
je
loop
dec
aam
cmp
adc
jns
aas
and
jbe
std
popf
cmpsl
imulb
jbe
loopne
xor
mov
mov
addb
outsl
dec
sti
loope
test
call
cmc
pop
sub
rol
in
sub
mov
lret
add
popf
cmp
sbb
jo
xchg
ds
lods
sbb
pop
ljmp
ficoml
adc
or
addl
leave
add
or
js
fiadds
sti
imul
pop
mov
xchg
sbb
xchg
das
mov
pop
push
xchg
adc
lret
mov
cltd
sbb
aas
repnz
pop
neg
data16
push
mov
aam
dec
int3
and
push
popa
stc
aas
pop
cwtl
or
cmpsb
out
repnz
mov
lret
clc
sarl
xor
incb
sbb
sahf
fs
push
and
mov
movsb
push
out
push
pop
inc
mov
rol
imul
lods
fs
in
dec
xchg
cmpsb
xchg
fs
push
pop
mov
mov
aas
push
cmp
sub
sbb
jmp
inc
cmp
inc
inc
sub
clc
lods
in
dec
mulb
fistpll
in
lahf
aas
stc
sub
sbb
jae
pop
pop
jae
pop
xlat
out
fstl
cmpsb
add
enter
lock
fistpl
jb
and
push
sub
push
mov
mov
mov
sbb
lods
xchg
stc
xor
add
fildl
out
lret
in
and
mov
push
movsl
pop
xchg
xchg
push
stos
xchg
sti
ret
fiaddl
dec
imul
jae
cmp
and
mov
inc
inc
ds
xchg
xchg
aas
xorl
clc
ficoml
and
movsb
fs
adc
stc
sbb
and
xor
mov
dec
xchg
jp
mov
mov
aam
or
sub
aaa
add
push
or
pop
pop
add
addr16
sarl
aas
push
or
or
je
adc
cwtl
popf
adc
insb
mov
xchg
or
in
int
xor
jecxz
hlt
adc
push
adc
repnz
std
into
jnp
sarl
stos
mov
pop
push
ja
es
xchg
jns
dec
mov
popa
sahf
bound
popa
inc
sbb
sub
dec
mulb
sub
js
and
test
loop
jns
jo
xchg
sbb
pop
sub
out
inc
aam
add
cmp
stos
test
xchg
pushf
cwtl
mov
xorb
pushf
mov
mov
hlt
daa
mov
jno
xchg
jge
mov
or
ret
xor
mov
push
fwait
lret
pop
sub
out
in
jo
cmp
dec
inc
fsubrs
pop
ja
loopne
rcl
inc
jns
call
testb
pop
out
jb
idiv
push
push
cmp
add
jns
fwait
mov
cltd
lds
push
fsubrl
scas
pop
mov
jge
jp
mov
je
mov
fisubrs
ljmp
mov
pop
adc
movb
mov
push
pop
pop
ljmp
hlt
lahf
cltd
iret
inc
xlat
gs
and
lods
scas
rorl
dec
jno
mov
stos
and
and
cmp
pop
jne
cmp
dec
mov
pop
fs
sbb
add
pop
add
pop
mov
pop
ljmp
sbb
xlat
fs
mov
pop
test
fisttps
data16
adc
inc
les
push
mov
dec
mov
jecxz
ja
sahf
int3
cli
mov
mov
or
lret
es
mov
lods
aad
repnz
push
and
out
add
dec
push
aad
cmp
test
mov
jno
int3
xchg
fs
test
lods
loope,pn
jl
lods
aam
leave
inc
push
jmpw
push
push
test
adc
cmp
mov
or
inc
pop
in
mov
call
pop
js
ss
xchg
outsb
sbb
es
jnp
xchg
mov
jnp
repz
clc
stos
test
mov
or
push
mov
out
out
sub
fdivrl
dec
in
mov
das
push
mov
cmc
pop
je
sub
fwait
not
test
cmp
mov
out
je
xor
nop
dec
hlt
popf
pop
inc
ds
add
out
test
mov
in
inc
push
fldcw
stc
adc
dec
push
test
repnz
dec
ss
jnp
lahf
xchg
movsl
push
push
add
inc
leave
test
ds
out
fisttpl
dec
cmp
mov
popf
mov
dec
jmp
and
xchg
inc
aas
movsb
stc
test
push
add
mov
push
rcrb
xor
clc
sahf
insb
mov
shrb
iret
mov
mov
xchg
fwait
or
sub
push
stos
fidivrs
outsl
jg
jns
popf
push
cmp
lds
stc
scas
adc
mov
pop
das
push
ja
push
sub
nop
cmc
xchg
ja
xor
fwait
add
stos
and
inc
or
sahf
das
iret
jbe
in
dec
popl
mov
hlt
outsl
mov
sbb
sub
pop
out
fisubl
imul
loope
dec
je
and
fstl
fistpll
sahf
lahf
ljmp
ret
sahf
cmpsl
cmp
sub
add
nop
or
stc
int
fidivrl
ljmp
cs
pop
popl
xor
mov
xchg
andb
jno
push
leave
jp
fwait
iret
push
push
notb
shl
fcmovnbe
inc
push
xor
gs
inc
jl
enter
adc
xchg
shll
push
dec
mov
stos
outsb
fwait
sahf
xor
mov
jle
mov
test
shrl
mov
mov
cltd
outsb
fcoml
dec
dec
loopne
dec
sub
xchg
cld
mov
aaa
call
push
enter
add
cmp
xchg
int
mov
and
mov
fwait
int3
jnp
xor
push
jp
ljmp
inc
movsb
lcall
jecxz
and
mov
mov
es
jbe
xor
xchg
dec
push
repnz
dec
in
sub
pop
pop
int
pop
and
add
ret
sbb
sub
mov
adc
add
inc
adc
test
sub
dec
scas
push
rcll
xor
stos
daa
flds
xchg
push
in
ret
ss
lds
fstl
rorl
in
mov
jl
aaa
push
loopne
je
stc
addr16
sbbb
and
popf
push
test
jp
xor
in
sbb
mov
aad
pop
out
xchg
rcrl
cmp
and
dec
pop
push
sbb
popf
push
inc
repnz
or
xor
mov
add
mov
into
pop
push
lods
loope
hlt
add
mov
jns
sbb
mov
push
aad
in
adc
call
lcall
mov
iret
rcrl
sbb
push
dec
push
imul
inc
dec
cmp
cltd
mov
pop
or
imul
sbb
mov
adc
push
daa
lret
outsl
or
add
xchg
or
sbb
or
in
mov
sbb
in
mov
invd
cmp
in
int3
ljmp
fldz
sbb
fs
test
push
push
and
movsb
or
addl
dec
imul
dec
loop
jbe
scas
out
fisubrs
test
mulb
adc
jg
inc
adc
adc
ret
repz
or
mov
arpl
jnp
inc
repnz
iret
lcall
ret
sbb
sbb
jb
ss
add
fisttpl
call
ds
aam
push
ret
pusha
jbe
mov
mov
in
or
movsb
jp
mov
push
adc
lret
and
insb
in
jp
lea
xchg
and
ja
mov
test
add
push
jns
enter
jecxz
cld
icebp
lahf
or
addl
dec
fnstenv
mov
stc
jg
ret
mov
call
xor
sbb
and
incb
xchg
lods
adc
cs
jbe
vcvtss2sd
xor
je
scas
mov
addl
pop
sbb
add
aam
loope
mov
rorl
std
push
push
hlt
push
inc
rorl
sar
or
movsb
rclb
movaps
int3
cmp
mov
ret
sbb
push
repnz
getsec
scas
jmp
jno
xor
cli
xchg
xor
repz
jne
adc
clc
ss
popf
shrl
adc
and
cwtl
lods
pusha
fs
lods
sbb
mov
jmp
dec
bnd
pushf
push
cmp
jmp
or
fcomp
inc
int
incb
add
adc
pusha
xor
enter
inc
fcmove
aaa
cmpsb
mov
inc
mov
shll
sub
dec
or
sbb
xchg
and
mov
imul
jle
jmp
js
xor
add
add
mov
mov
pop
rolb
cwtl
jle
nop
aam
pop
inc
pop
pushf
imull
test
jp
movsb
lea
das
jle
sub
in
scas
pop
or
mov
neg
or
and
pop
pop
int3
out
xor
pop
into
xchg
xchg
roll
push
cmp
icebp
rorb
movsb
stos
movsb
pop
hlt
pop
add
out
adc
fildl
dec
insb
adc
pusha
cmpsb
or
cltd
ret
in
lock
insb
shll
stos
pop
repnz
xchg
mov
imul
in
addl
subb
cmp
aam
and
add
es
test
jmp
cmpsb
fcompl
xor
push
adc
shrl
lcall
popf
sbbb
aam
and
jae
fmull
leave
push
std
sbb
insb
lds
xchg
or
pusha
dec
lods
dec
out
dec
push
aaa
adc
add
data16
mov
xchg
cmpsl
lcall
outsl
dec
cmp
ret
scas
jbe
pop
pop
shl
xlat
and
cs
rcrl
lock
push
dec
lock
int
ss
loop
xchg
inc
iret
pop
cwtl
xchg
jb
adc
popa
adc
stc
repnz
pusha
adc
lahf
jo
sbb
pop
jmp
sbb
and
jb
rorb
dec
jge
adc
cmc
orb
fnsave
pusha
jo
mov
fistps
pop
cmp
fcmovb
mov
lods
adc
gs
adc
into
jns
dec
in
sub
ret
jbe
pop
ljmp
cmp
pop
mov
loope
push
sub
lahf
dec
mov
mov
inc
dec
aad
rcll
imul
out
and
or
pop
push
mov
adc
inc
dec
jb
xorl
jle
adc
sahf
movsb
icebp
sub
sarb
ret
lock
inc
sbb
add
push
mov
xor
fildll
pop
popa
sahf
xchg
cmp
fld
pop
ljmp
adc
and
xchg
imul
and
xchg
out
nop
pop
mov
sub
faddp
dec
cltd
aad
xor
add
cmp
scas
aaa
stc
push
mov
movsb
or
xor
mov
xchg
sbb
and
iret
std
add
outsl
ja
xchg
movsl
pop
pop
adc
shr
leave
ror
cld
adc
pop
sbb
sbb
push
push
cmp
in
repz
and
or
orl
add
push
ret
cmc
sub
mov
aad
out
leave
jp
mov
ja
in
or
aaa
and
jns
arpl
mov
adc
add
inc
mov
pop
pop
les
pop
sarl
or
mov
cwtl
jge
mov
pop
pop
cld
xchg
call
mov
add
jg
cmpsb
lret
dec
push
in
sbb
out
mov
leave
out
sbb
les
aas
jae
outsl
lods
adc
add
push
push
sbb
sub
int
sarl
icebp
sar
jne
mov
daa
sbb
fwait
ljmp
ja
push
cmp
mov
jno
fists
xchg
stos
adc
in
xor
aam
mov
lods
cmp
cs
inc
xchg
xchg
out
loop
xchg
into
pusha
jne
cmp
shll
cmp
or
insb
scas
fs
stos
inc
push
fcompl
dec
add
fcmovbe
dec
push
or
adc
in
pop
mov
outsb
std
lea
decb
cwtl
jae
mov
into
add
inc
dec
add
xchg
push
adc
rorl
das
lods
imul
sub
stc
scas
fidivrl
dec
mov
xchg
or
jl
add
pop
jg
cmpsl
adc
fs
ret
xchg
mov
jne
dec
xchg
pop
mov
loopew
insl
sub
sub
ret
mov
inc
scas
xor
pop
ret
fwait
sbb
or
or
and
out
loop
outsl
lods
mov
dec
push
xchg
ja
inc
adc
data16
scas
shl
ja
add
daa
mov
add
shll
pop
jae
jp
and
push
loopne
popf
icebp
cld
pop
loope
inc
sbb
jecxz
loope
scas
xchg
inc
scas
test
sahf
cmp
mov
or
cltd
pop
roll
test
or
jle,pn
mov
and
test
mov
mov
out
and
sbb
dec
addr16
mov
mov
push
add
data16
sub
xchg
mov
in
push
stos
int3
icebp
pop
outsl
in
enter
jae
xor
cmp
aad
lea
pop
jg
ljmp
sub
cmpsl
push
lea
aaa
inc
movsb
mov
mov
pushf
add
or
inc
push
fucomi
fs
or
icebp
push
dec
out
out
stos
out
or
mov
arpl
aad
mov
nop
stos
add
jle
imul
pushf
add
test
jecxz
or
lret
addl
bound
test
ja
push
cmp
call
movsb
ret
ficoms
push
dec
sahf
push
adc
pop
inc
clc
outsb
pop
push
push
lret
sahf
data16
jb
mov
inc
jle
sbb
cmp
or
stos
mov
xor
fdiv
sub
xor
mov
scas
pop
jmp
fdivr
loop
cmp
jg
cmpsb
enter
je
cltd
fstps
mov
int
ret
cs
lret
dec
sbb
mov
loopne
test
lock
int
arpl
mov
or
pop
xchg
fdivrs
ret
es
and
lds
fstl
mov
dec
xchg
test
icebp
pop
pop
fsubrl
test
mov
out
into
lret
pop
mov
jg
loopne
jle
sub
lods
xor
and
sub
xchg
jb
push
dec
insb
ljmp
repnz
lock
mov
pop
popa
inc
and
out
sbb
pusha
push
arpl
mov
leave
mov
mov
loope
xchg
mov
dec
dec
ds
xor
lret
inc
test
fisttpl
or
scas
mov
loop
sbb
push
dec
je
test
cmp
jbe
pop
loope
dec
cs
xchg
xor
push
lds
mov
stos
push
jl
adc
push
mov
mov
jno
ret
pop
cs
mov
adc
jo
fidivl
mov
loopne
mov
and
mov
pop
icebp
inc
mov
cmp
adc
mov
mov
push
inc
leave
daa
aad
test
imul
and
mov
mov
ljmp
enter
cmp
push
test
mov
hlt
cmpsl
call
and
jg
in
add
test
push
jmp
iret
lea
pusha
out
mov
xorl
cld
dec
jb
sti
xor
inc
xor
cmp
xlat
into
mov
xor
jecxz
mov
addr16
add
xor
pop
xor
lods
je
ret
lcall
jae
mov
into
push
mov
jae
xchg
les
clc
inc
sub
or
pop
or
mov
push
jg
loope
dec
and
adc
lds
in
or
bound
mov
pop
mov
pop
push
sbbb
sbb
popf
xchg
inc
dec
vpsubusb
sub
ds
jnp
fldt
add
and
les
add
jmp
hlt
loope
push
les
popf
stc
sbb
aas
repz
mov
in
jbe
jecxz
into
sub
lods
and
or
sarl
lret
cmp
test
mov
add
mov
rcrl
js
xchg
dec
push
inc
sti
jae
lea
jb
shrl
pusha
sub
dec
idivb
sahf
cltd
or
mov
ficompl
add
inc
jl
daa
orl
cmp
push
aaa
jge
cmpsb
cmp
scas
sub
mov
scas
adc
out
mov
add
aam
mov
cld
out
out
fldenv
mov
or
ret
inc
or
lret
bound
in
push
or
inc
sahf
sub
movsb
shll
xlat
xor
sti
sub
pop
movsl
and
jbe
inc
push
xchg
xchg
fdivl
insl
and
leave
push
mov
clc
mov
imul
scas
stos
cmp
popf
mov
in
arpl
shrb
outsl
mov
or
dec
test
adcb
fildll
sbb
mov
xor
je
lods
jmp
out
lock
and
or
insb
cld
fldl
iret
out
repnz
sub
out
aam
into
pusha
sub
enter
push
lods
arpl
out
pop
sub
scas
jmp
movsb
jl
pop
push
mov
iret
sub
sbb
sti
imulb
mov
ljmp
cmp
in
inc
shrb
ja
jmp
xlat
movsb
sahf
ret
cmp
pop
jns
shlb
in
add
cli
xchg
pop
mov
sub
jp
out
sub
ss
xorb
lds
and
xor
stos
sahf
clc
mov
stos
push
jmp
ja
adc
stos
pop
jae
js
sub
sub
mov
xchg
mov
scas
sbb
cmc
jo
loop
mov
mov
aam
dec
inc
notb
and
movsl
call
mov
jno
cmpb
xchg
and
adc
pop
xchg
orl
adc
pop
fsqrt
pop
ret
push
ret
pushf
or
js
jnp
xchg
and
add
or
aam
pop
in
jo
or
lea
aaa
out
sahf
icebp
xor
cwtl
pop
dec
addr16
dec
push
popf
aad
push
lock
mov
clc
dec
sbb
mov
hlt
jl
dec
flds
xchg
mov
or
push
lret
addl
push
add
shll
das
lret
mov
sub
sbb
aad
xchg
cmc
jmp
xchg
scas
test
or
xchg
outsl
add
mov
test
fbstp
mov
sti
mov
call
xchg
repz
jnp
mov
mov
cmp
ffree
cmpsl
push
loop
outsl
inc
orb
sbb
adcl
xor
cmp
sub
push
cmpsl
push
pop
inc
mov
cwtl
int
sub
ljmp
mov
cmp
jae
roll
jne
repz
enter
cmpsb
add
push
jbe
xchg
mov
pushf
pop
mov
mov
cmpsb
lea
jmp
add
loope
lea
add
mov
cld
mov
mov
dec
pop
adc
aaa
sub
les
sub
es
cmp
or
cltd
jge
loopne
pop
add
scas
bound
dec
mov
xor
jmp
aas
pop
daa
adc
fimull
add
loope
adc
jae
fldcw
dec
and
dec
out
mov
cmpsb
int3
mov
mov
sub
mov
aaa
mov
setbe
sub
jae
or
jne
iret
adc
int
stc
scas
outsl
xor
xor
xchg
lea
stos
sbb
push
test
movsl
xchg
cmc
push
popl
mov
push
cmc
pop
push
ljmp
adc
xor
jbe
out
fiadds
fstl
push
and
dec
cvtdq2ps
addr16
add
in
xchg
xor
mov
mov
cmp
xor
cmp
add
repz
lcall
cmp
lahf
pop
jle
stc
inc
adc
dec
test
lock
dec
inc
test
pop
jbe
subl
int3
pop
std
inc
add
test
lahf
leave
mov
adc
mov
hlt
test
inc
inc
jl
in
mov
or
lcall
stc
mov
xor
mov
frstor
push
mov
mov
lock
lods
stos
xchg
loopne
cmp
sbb
fwait
dec
adc
mov
int
in
push
and
sbbl
rorl
sub
add
xor
pop
add
adc
lea
repnz
xchg
jp
and
inc
pop
push
ljmp
and
fsubl
dec
popa
ds
aad
loope
pop
xor
pop
imul
sbb
lahf
cmp
cli
xor
adc
daa
std
jge
xor
push
or
sbb
xor
xor
sub
and
push
add
insb
mull
popa
jp
loope
lods
movsl
dec
sub
inc
orb
mov
sbb
sbb
mov
push
inc
cwtl
mov
bound
mov
mov
neg
cmp
jbe
ljmp
sub
movsb
add
rorb
pop
cmp
xorb
es
cmpsb
sub
inc
ja
lret
adc
pop
outsl
ljmp
add
mov
or
ja
aaa
and
sub
out
outsl
mov
test
push
dec
fs
rcll
lret
lea
xchg
pop
leave
aam
mov
jo
push
je
popa
ret
enter
loope
sbb
jp
je
inc
add
inc
cmpsl
addr16
movhlps
outsb
push
or
add
outsl
insb
lods
testb
pop
popa
leave
mov
pop
jo
incl
and
mov
xlat
sub
mov
and
xchg
out
stos
jecxz
xchg
sbbb
js
jb
faddl
adc
xlat
pop
arpl
rcrl
or
hlt
mov
aam
xchg
test
arpl
popf
and
aam
dec
cmp
or
stc
mov
adc
dec
js
adc
loop
movsl
sti
push
or
test
shlb
cmp
xor
in
daa
sub
xor
fs
scas
lret
sbb
or
mov
fcmovbe
js
pushf
sbb
adc
hlt
sbb
lcall
add
jnp
sub
xchg
int3
cld
jle
inc
sbb
je
sub
push
xchg
test
andl
jns
cli
enter
sub
in
mov
ret
add
mov
push
and
lock
cmc
test
inc
xor
imul
push
int
aam
inc
lret
sbb
iret
xlat
pop
sub
dec
and
filds
and
and
jne
lahf
in
arpl
cs
pop
mov
or
subb
int
jbe
and
inc
test
pop
pop
dec
sub
fldenv
outsl
cmpb
movsb
addr16
fbstp
sbb
arpl
dec
and
dec
sahf
push
pop
xor
jo
rclb
je
movsl
jp
cmp
sbb
in
fs
mov
scas
lahf
rclb
cmp
adc
into
cwtl
mov
icebp
movb
xchg
sbb
lcall
mov
aad
iret
ficompl
je
cld
dec
mov
push
pop
addr16
or
mov
push
pushf
push
jo
pop
ret
aaa
das
repnz
sbb
add
pop
cmp
lret
xchg
cs
loop
cmp
cmp
xor
xchg
pop
pop
mov
push
xchg
fdivr
in
out
out
mov
xor
mov
dec
or
jge
dec
mov
mov
repnz
xor
js
or
jnp
test
xlat
cli
addb
mov
pop
cwtl
mov
sub
and
sarl
cmpl
push
push
sbb
add
insl
sbb
mov
adc
mov
aaa
sub
int3
nop
or
out
mov
push
push
repz
mov
inc
test
or
cltd
sub
inc
jmp
lock
lea
lea
jae
or
sbbb
js,pn
and
in
jo
xor
cmpsl
shll
stos
cltd
jmp
dec
adc
jbe
pop
dec
stos
inc
out
stos
sarl
aad
inc
loopne
and
lods
pop
pop
clc
sub
rcll
scas
sahf
test
dec
jns
mov
fldcw
pushf
lret
divl
ja
pusha
or
daa
pop
in
test
cwtl
mov
push
sbb
sbb
icebp
stos
sub
mov
sbb
call
lcall
popa
cmpsb
ljmp
and
repnz
pusha
lods
adc
sarb
int
fnsave
xor
test
cmpb
or
gs
xor
ret
xchg
jl
or
cmpsl
mov
pop
into
jne
cli
fadds
icebp
push
sub
inc
lcall
fs
incb
xchg
pop
dec
push
mov
aaa
sar
cld
or
cmpsl
loop
rclb
cld
fnstenv
pushf
add
sti
jno
test
mov
adcb
adc
aaa
sub
inc
jecxz
push
addr16
push
mov
test
rol
push
fwait
adc
mov
stc
hlt
sbb
daa
pusha
jno
scas
sar
fs
sti
lret
jecxz
dec
xchg
xor
inc
mov
insl
cmc
push
sub
movsl
nop
mov
dec
fimull
pop
jl
push
imul
popa
cmp
ljmp
out
mov
jp
lock
pop
inc
xlat
sub
add
jecxz
xor
cmpl
or
mov
movsl
pop
inc
adc
dec
sub
test
fldln2
out
clc
push
xchg
jnp
fisubrl
inc
das
test
lds
add
insb
rcr
jbe
add
ss
call
bound
xchg
aas
or
and
mov
dec
imul
lea
dec
mov
xor
inc
mov
lock
adcl
xorb
lds
pop
fsubl
mov
mov
xorl
mov
nop
pop
inc
stos
xlat
dec
xor
inc
inc
mov
cld
movsb
jecxz
in
push
xor
je
pushf
dec
in
jne
push
aad
xchg
or
ljmp
jle
mov
jmp
daa
sbb
js
movsl
in
xchg
mov
fistpl
ficoml
adc
jp
push
repz
mov
loop
sbbl
stc
pusha
les
out
jl
lahf
sti
in
sbb
push
adc
call
xchg
cmp
dec
push
ret
sub
rolb
adc
lea
popf
arpl
loop
xchg
sbb
mov
iret
lods
mov
imul
pop
fiadds
xor
add
ljmp
icebp
into
outsl
repnz
js
add
cs
out
sbb
jb
inc
mov
add
push
out
xchg
mov
insl
sub
cmpsb
pop
mov
cmp
cmp
popa
scas
scas
adc
repz
pop
jbe
aas
or
dec
and
std
adc
test
inc
xchg
xor
mov
ret
lret
mov
int
fdivrs
push
mov
sbb
js
mov
pop
xor
xor
mov
mov
pushf
test
jle
es
rcl
jbe
jle
sarl
pop
cmp
fisubrs
divb
dec
aas
pop
inc
out
daa
scas
stos
push
paddw
mov
fdivrs
dec
leave
sbbl
xor
add
add
sbb
jb
scas
xchg
and
adc
movsb
mov
int
das
sahf
aam
aam
sbb
aam
cmp
divb
sub
adc
dec
popf
jbe
mov
cmp
cmpsb
cmc
xorl
or
add
push
faddp
pop
sbb
gs
insl
pusha
pusha
ss
cmp
in
xor
jbe
sar
repz
pushf
lret
adc
aam
add
fdivl
aam
cwtl
out
out
std
aas
movsb
cmpl
dec
and
adc
test
push
push
jno
or
dec
insb
jno
jecxz
pushl
testb
das
in
add
add
inc
movsl
enter
mov
scas
add
mov
rclb
pop
dec
nop
mov
shr
xor
push
sub
call
pop
cmpsb
clc
mov
xchg
dec
adc
stc
jmp
xchg
and
fldenv
cmp
lods
xor
ficoml
testb
or
mov
jns
mov
fsubl
jo
mov
cmp
mov
add
xchg
xchg
cmpsb
pop
xor
jno
pop
jecxz
test
sbb
iret
pop
xchg
jmp
xchg
push
je
mov
sbbl
add
in
jecxz
rorb
aaa
clc
xchg
nop
sbbb
mov
sub
cmpsb
std
and
inc
add
sbb
mov
xchg
out
push
sbb
dec
outsl
dec
cltd
shl
cltd
stos
cli
out
scas
lods
mov
hlt
call
xchg
sarb
and
and
add
arpl
or
cmc
in
in
bound
inc
push
push
sub
out
inc
shll
jnp
xor
test
adc
popa
mov
xchg
decb
arpl
inc
mov
inc
daa
mov
or
mov
mov
lahf
mov
loope
push
push
fxch
sahf
ss
jo
mov
xchg
xchg
imul
addr16
sbb
pop
or
xchg
lock
cltd
cwtl
push
and
mov
mulb
sbb
push
fisubs
push
and
mov
and
cli
iret
outsb
enter
sbb
push
dec
fcoms
lock
xor
or
and
addr16
mov
jp
adcl
sub
loopne
mov
fdivrs
mov
xchg
push
sbb
pop
insb
data16
pop
in
pop
sbb
mov
mov
and
jb
insl
mov
add
subb
sar
xlat
out
lahf
or
sbb
xor
fildll
cmp
lret
movsb
lds
andl
in
mov
cmp
rcrl
sbb
aad
mov
notb
or
inc
ret
and
lret
mov
adc
sub
xchg
js
cmpsl
bound
out
lahf
jnp
push
push
pop
push
mov
jg
push
cmp
sub
movsl
xchg
cmp
and
pushf
adc
decb
xor
pusha
out
sbbb
ss
and
xchg
popf
or
fistps
add
xor
fdivl
dec
lret
pop
jmp
dec
daa
dec
and
fs
lea
adc
sub
das
mov
aaa
mov
lods
push
mulb
pop
xchg
pusha
mov
stos
pushf
cld
mov
add
stc
pop
cmp
loopne
cmp
jno
cli
ss
jg
mov
inc
mov
fldt
cmp
and
add
inc
outsb
lock
loopne
loop
cld
push
inc
xor
jne
sub
stos
outsb
repz
ss
shrb
push
jmp
in
or
mov
hlt
dec
sbb
mov
sti
pop
and
enter
jb
jmp
mov
add
xor
mov
xor
mov
or
xchg
add
das
int
jbe
jo
adc
or
add
cmp
sub
stos
push
fsubl
mov
cmp
jge
pop
xchg
mov
lock
xchg
lahf
xchg
imul
pop
shlb
xchg
push
inc
hlt
fsts
std
test
adc
push
fcomi
xchg
xchg
iret
idivl
sbb
push
loope
jge
lahf
add
mov
and
mov
ret
aaa
pop
xchg
push
jb
sbb
mov
fwait
aaa
cltd
xor
adc
pop
lods
push
dec
sub
pop
fucomip
aad
pusha
int3
mov
nop
shll
xchg
inc
or
adcl
pusha
mov
mov
xor
popf
xchg
sbb
mov
sahf
dec
xchg
mov
add
pushf
shlb
sbb
or
loope
add
cs
jns
out
cmp
cld
shll
mov
mov
call
mov
and
xchg
jne
mov
into
sbb
cmp
popa
jns
lock
aaa
inc
mov
sub
pop
pop
mov
or
sub
sarl
push
clc
xchg
pushf
xor
aas
add
lret
cli
popf
js
dec
cmp
jns
in
stos
jb
fwait
clc
gs
lahf
cltd
and
rcrl
movsb
out
mov
jp
sub
icebp
rcrb
add
outsl
mov
jecxz
fildl
nop
and
push
es
push
loope
js
iret
cmpsb
cmc
repnz
or
ja
lahf
sbb
faddl
lcall
or
push
fisubs
and
loopne
bound
jle
insb
cmp
pop
sub
fs
mov
push
cmpl
test
shrb
jnp
rorl
js
scas
or
and
jge
stc
mov
test
iret
rolb
push
mov
mov
push
sbb
xchg
sub
aas
sbbl
push
shl
fistpll
jecxz
int3
jecxz
adc
add
outsl
mov
adcb
pop
pop
mov
jge
mov
jecxz
or
fcmovnbe
sahf
sub
push
xchg
jmp
xchg
shl
lea
xor
das
jmp
adc
pop
xor
test
mov
sbb
ljmp
in
push
dec
test
mov
test
jb
sbb
xlat
push
addl
shlb
shll
loopne
add
data16
int3
pop
adcb
adc
mov
das
repz
pop
outsl
inc
imul
or
mov
inc
or
pop
fistpl
xchg
inc
lds
sbb
adc
sub
push
pop
push
sarb
les
push
xchg
stos
xor
ret
lcall
inc
xor
fildl
fnstsw
test
dec
test
incb
add
movsl
into
jns
ss
outsl
mov
arpl
fmul
test
int
push
xchg
test
out
lods
outsl
cld
push
sbb
jns
xchg
mov
and
push
xor
test
pop
lea
and
xchg
shlb
std
adc
into
xorb
push
out
sahf
inc
jae
jmp
icebp
lret
f2xm1
jle
xor
jns
mov
sub
jo
stos
push
jo
cmc
shrl
sets
repnz
out
jo
mov
and
inc
testb
push
fwait
pop
or
push
mov
push
insl
sbb
inc
cs
add
mov
data16
test
push
vmwrite
mov
inc
jae
outsl
push
sbb
jo
pop
fsubrs
jns
in
inc
xor
mov
daa
in
imul
movsb
or
xchg
mov
popl
mov
js
pop
xchg
sbb
int
sub
mov
scas
test
cwtl
sub
test
cmc
mov
sub
ljmp
add
and
int3
inc
popa
mov
jnp
pop
aas
loop
popf
rcr
ljmp
mov
imull
rorb
push
adc
add
outsb
push
inc
lock
mov
jb
add
adc
stc
daa
dec
fstl
fidivrl
fst
roll
push
xchg
xchg
pop
jnp
push
pop
cs
xchg
ljmp
mov
loopne
add
dec
in
sarl
inc
mov
and
daa
push
push
shlb
fcompl
mov
inc
ds
push
sarb
jno
lret
stc
mov
push
pop
fsts
sub
mov
jb
dec
imul
lea
add
push
gs
adc
aam
xchg
outsl
fdivp
test
scas
and
pusha
movsb
mov
lret
adcb
mov
lock
mov
js
inc
mov
jae
leave
dec
xchg
push
sub
int3
rcl
dec
sbb
in
nop
pop
push
lahf
fstl
fimull
int3
push
or
inc
out
lock
or
cmp
and
mov
pop
popf
lahf
test
mov
stc
inc
pushf
arpl
inc
cmp
cmpsl
mov
push
popa
je
leave
test
dec
rcrl
icebp
add
mov
test
xchg
orb
xchg
pop
add
sbb
cld
cltd
lcall
mov
test
xchg
adc
push
lret
xor
clc
fs
sbb
and
es
mov
mov
sbb
pop
int
rorl
xchg
mov
popf
pop
loop
mov
dec
aaa
adc
add
fs
sub
ret
out
cld
fs
lea
or
add
ds
cs
inc
dec
repnz
adc
scas
add
ret
nop
test
add
aas
and
fldl
les
push
fwait
or
fbstp
jnp
scas
pop
xor
dec
sbb
push
add
stos
fwait
jo
fidivrl
jbe
sbb
js
push
outsl
xchg
lods
data16
push
mov
gs
xchg
cltd
dec
inc
xchg
js
and
cli
dec
cmp
sti
or
scas
enter
mov
mov
mov
clc
or
pop
mov
mov
add
outsb
adc
test
popa
push
cmpl
fimuls
cmp
mov
pop
out
subl
mov
mov
test
dec
daa
jb
xchg
in
loop
push
mov
out
lea
pop
adc
jp
and
inc
mov
push
or
xor
out
js
mov
cld
and
pop
sub
insl
push
sti
jecxz
pop
enter
loop
xchg
dec
jne
ror
std
pop
mov
subl
xchg
popa
popa
mov
or
mov
jg
jmp
lea
mov
mov
xchg
aad
push
fsubs
mov
push
pop
push
cmp
icebp
lea
ficompl
addr16
mov
xlat
xlat
inc
pop
fadds
pusha
push
sub
outsb
notb
leave
xor
xchg
or
or
push
xchg
loope
lret
ljmp
push
rcr
xchg
or
stos
in
ljmp
inc
cmpsb
dec
jge
dec
sbb
cltd
push
cmc
pop
lds
pop
xchg
sahf
push
jmp
pop
fistpl
push
push
sbb
push
into
fs
pop
mov
popf
lock
push
pop
std
push
into
dec
lahf
sub
repz
xor
mov
cmp
bound
arpl
das
lock
jp
repnz
cld
push
mov
jns
xor
add
cmc
cmp
inc
jmp
jo
loope
lods
push
sub
mov
repz
mov
pop
jns
or
mov
push
sbb
and
mov
fnsave
std
fwait
cld
adc
pop
imul
in
rcrb
in
dec
stos
call
cmp
cmp
xlat
pop
adc
add
adc
mov
les
jnp
mov
adc
mov
push
nop
xchg
push
adc
mov
ja
jp
cmp
ss
or
push
xor
cmp
or
sub
xlat
addr16
pop
test
sub
mov
dec
imul
mov
enter
push
and
sub
push
jle
divb
xchg
mov
or
pop
mov
aaa
shll
cmp
jle
mov
mov
adc
popa
mov
fmul
jmp
or
xchg
enter
into
inc
xlat
add
pop
xor
jb
stos
fdivr
cld
cmp
cmp
xchg
sbb
pop
scas
xchg
jno
or
mov
fidivs
dec
movsl
lahf
pop
add
icebp
shrb
or
test
or
jmp
adc
adc
inc
gs
scas
xorb
imul
adc
mov
lods
pushf
test
pop
mov
leave
inc
pop
mov
adc
in
cs
mov
movsl
jnp
aaa
jnp
mov
jle
or
int3
mov
outsb
sub
lods
fwait
cmp
pusha
dec
fdivr
das
ret
pop
fdivr
xlat
fwait
in
icebp
daa
test
je
sub
repnz
pop
jae
pop
fprem
clc
std
xchg
inc
or
cltd
jp
push
sahf
jmp
pusha
cld
mov
popa
mov
jns
lea
loop
jp
movsl
mov
in
mov
testl
stos
xchg
dec
in
in
gs
dec
in
mov
stos
xchg
push
xchg
popa
mov
iret
in
fwait
adc
repnz
dec
xor
pop
loop
fisubl
movsl
or
sets
cmp
add
ja
inc
outsb
std
inc
lcall
stos
jmp
cmpsb
inc
add
fwait
js
mov
ss
and
push
out
and
lods
fisttpl
xchg
xlat
xlat
xchg
pop
idivl
icebp
jge
pop
dec
mov
ficomps
bound
sub
ljmp
mov
addr16
stos
fcoml
xor
bound
int
outsl
outsl
mov
xchg
lock
adc
js
xor
jo
mov
adc
lds
xchg
nop
and
push
xor
and
insl
sub
mov
repnz
adc
insl
leave
loope
ret
sbb
or
mov
jmp
push
pop
mov
decb
popf
cmpsb
imul
shlb
jle
sub
loop
fcoms
out
push
or
je
xor
addl
cmp
jae
push
push
das
xchg
cmp
js
push
call
sti
ret
sbb
fcmovne
xor
das
loope
insb
cmp
pop
inc
movsb
add
sbb
jnp
outsb
iret
dec
push
cld
into
int
ret
loope
cmpsl
dec
xchg
lods
mov
mov
lahf
adc
into
inc
mov
jecxz
push
inc
dec
lods
je
cwtl
js
push
inc
sbb
mov
fstps
cmp
insb
xor
insb
cmp
bound
xor
movsb
cwtl
popf
cli
pop
add
mov
or
int3
cmp
mov
out
cmc
clc
fs
sub
aam
icebp
faddl
and
sbb
subb
jnp
lahf
clc
pop
and
inc
test
inc
xchg
xor
mov
pop
sti
dec
pop
mov
cmp
jecxz
cmc
cmp
push
lcall
xchg
adc
cmp
fimull
mov
rcr
bnd
sahf
add
arpl
dec
ret
sbbb
mov
repnz
cmp
dec
call
ss
in
je
mov
pop
data16
hlt
sarb
xchg
imull
cwtl
xor
sub
push
inc
push
mov
pop
adc
mov
mov
jg
outsb
sub
xor
popa
xchg
sub
pop
lahf
mov
mov
mov
mov
jo
sub
sbb
push
xor
and
adc
mov
xchg
mov
shl
mov
jb
fmuls
into
cwtl
push
inc
jnp
aad
push
push
inc
xchg
fisubrs
cmpsl
scas
test
xor
pusha
and
jmp
jg
aam
faddl
and
xlat
push
ffree
leave
cmp
xor
shll
pushf
popa
aam
fstl
mov
xor
dec
aaa
cmpsl
pop
push
jne
shll
mov
adc
mov
lret
mov
mov
mov
pop
pop
xor
clc
jae
bswap
call
pop
mov
xchg
sbb
out
mov
test
sbb
jno
pop
fcomps
cmp
xchg
or
stos
and
mov
test
xchg
jno
and
mov
sti
rcrl
and
jns
mov
xor
lret
sbbl
adc
test
xchg
cltd
jmp
enter
xchg
es
dec
pop
leave
jb
jmp
popf
bound
mov
xor
dec
push
rcl
push
or
push
pop
push
lret
cmp
in
jns
dec
rcrl
inc
or
rol
popa
and
xor
inc
loop
cmc
daa
fcoms
mov
xor
insl
js
mov
out
lods
inc
pusha
nop
incl
inc
fimuls
dec
or
lahf
int3
mov
in
ss
or
icebp
faddl
fs
or
test
imul
test
addr16
mov
loopne
jae
sbb
sbb
inc
add
or
pop
jae
into
dec
add
stos
aad
xor
xlat
ret
cwtl
test
xor
dec
sub
jmp
pushf
add
nop
mov
movsl
xor
lea
fsubs
xchg
push
js
or
xchg
scas
pop
popf
imul
roll
push
add
xchg
inc
sbb
outsl
add
jl
test
add
cs
rclb
add
scas
mov
mov
cmp
mov
pop
mov
sahf
shl
ss
cmp
fs
mov
sti
sbb
popf
push
lcall
scas
ljmp
and
and
jmp
notb
push
cmp
mov
das
cmpsl
out
sbb
test
popf
out
dec
jno
push
mull
iret
popa
xchg
pop
or
sbb
lcall
fwait
movsb
aaa
out
and
fdivs
inc
fstl
fwait
les
movsb
xchg
adc
nop
push
inc
mov
and
inc
sub
adcb
mov
outsl
push
fwait
pop
movsl
and
std
mov
pop
aad
mov
pop
fucom
pop
loope
xlat
xor
add
cmpsb
int
pop
fisubrs
call
in
daa
je
movsb
popf
pushf
sub
ror
mov
and
enter
addr16
mov
or
mov
mov
bound
sbb
leave
and
jnp
jecxz
inc
jne
pop
test
jb
jbe
btc
mov
out
cmp
fnstcw
or
lahf
lock
jnp
ret
mov
inc
jno
lret
aas
pushf
mov
popl
mul
xchg
jl
mov
sub
xor
inc
outsb
std
aas
fstpt
mov
gs
mov
movsl
cmp
scas
sub
aas
xor
jnp
dec
mov
jp
out
es
add
pop
add
lret
into
mov
std
jo
pop
adc
popf
sti
sbb
cltd
repz
lea
mov
fsub
test
nop
mov
push
dec
xor
adc
stos
in
ss
xchg
jg
aam
pop
cmpsl
mov
leave
mov
cmp
out
cmpsl
lods
add
mov
dec
test
outsb
pop
int3
mov
test
sarb
push
xor
sub
cmpsb
out
in
imul
lock
push
push
adc
xor
and
movsb
xor
sbb
add
loop
idiv
cmp
jmp
cli
inc
sbb
xchg
pop
gs
or
scas
push
mov
add
idiv
cld
hlt
push
cwtl
jo
or
sbb
mov
sti
std
test
cwtl
mov
and
callw
popa
fistps
fisttpll
lcall
loope
push
inc
js
iret
inc
bound
or
dec
cltd
dec
jl
sbbl
sub
fs
ret
cmp
scas
jmp
or
loop
insb
std
fisubs
mov
test
cmp
rclb
mov
mov
in
fistpll
jge
test
mov
mov
jnp
jno
push
lods
and
cmpsb
loopne
aam
ds
and
hlt
lret
xor
out
dec
xor
std
xchg
ror
xor
mov
mov
sbb
out
mov
or
mov
mov
adc
out
cmpl
into
nop
fnstsw
mov
push
inc
inc
sbb
push
lcall
sbb
cmp
mov
je
pop
cmp
adc
and
ret
xlat
xor
mov
pop
cmp
jp
dec
add
pop
lea
repz
push
fs
enter
inc
ficoms
add
testb
xlat
repz
pop
dec
jne
loop
mov
sub
sub
aas
imul
push
mov
xlat
mov
push
and
mov
mov
movsb
mov
repnz
dec
xchg
pop
xchg
mov
loop
fidivrl
mov
cwtl
sub
rcl
mov
imul
adc
loop
adc
xor
loopne
out
cwtl
add
or
fstpl
cmc
xchg
inc
loopne
movsl
imul
ss
daa
scas
jge
sbb
pop
out
sbb
es
addl
stos
jno
adc
out
sbb
cli
mov
mov
xchg
jg
out
xor
mov
fsubrs
scas
dec
arpl
mov
cli
fimuls
push
or
stc
int
divb
aam
test
xchg
sbb
lock
inc
daa
sbb
rorb
stos
sub
fbstp
mov
push
out
out
lea
lods
mov
in
mov
mov
lods
in
imul
repz
add
pop
ss
xchg
mov
adc
dec
cli
sarl
pop
jl
add
ss
es
jno
and
push
cmpb
repz
out
jecxz
enter
shlb
mov
pusha
je
cli
iret
leave
sbb
pop
test
rcl
push
jp
fisttpl
add
xchg
out
xor
orb
jne
jbe
jmp
inc
stos
mull
jg
outsl
inc
scas
push
test
filds
xchg
xor
insb
jp
dec
xor
add
hlt
xchg
cmp
xor
mov
xor
or
push
pop
xchg
cs
mov
and
sub
pop
iret
add
repnz
dec
mov
inc
cltd
or
test
adcl
or
push
filds
add
lock
push
vandpd
xchg
or
repnz
xor
and
ss
mov
clc
or
pop
pop
add
std
imul
cli
imul
fbld
je
sbb
mov
add
or
repnz
outsb
jmp
insl
addb
repnz
call
cmc
mov
negl
pop
xor
xor
mov
in
sub
sarb
adc
sbb
ficoml
mov
fistpl
enter
and
inc
shrb
push
lock
cmp
cmp
pop
inc
pop
ret
loop
fcomp
adc
push
sub
ljmp
fwait
data16
je
inc
and
incb
icebp
inc
dec
mov
in
stos
and
pop
mov
mov
rorl
and
mov
mov
mov
rorl
push
mov
jno
shlb
in
xchg
dec
mov
leave
dec
jb
iret
adc
das
mov
in
fnstenv
in
sbb
insb
inc
loop
mov
pop
int3
pop
adc
add
xchg
js
fs
stos
dec
add
out
aaa
pop
cltd
out
repz
les
test
jmp
dec
dec
stc
cld
xchg
bts
xchg
stos
sbb
movsb
out
sti
inc
or
loopne
add
ret
pop
insl
xchg
test
cmp
push
dec
push
pop
mov
lea
jle
jl
mov
and
cltd
lock
rcrb
add
jns
pusha
das
les
arpl
inc
stc
fwait
sub
popf
orl
rorb
adc
sbbb
inc
sti
pop
mov
push
rorb
sbb
decl
xor
in
aaa
mov
stos
xchg
mov
jp
cwtl
push
std
js
mov
mov
and
sahf
lds
inc
nop
test
popf
scas
popf
repz
xorl
loopne
mov
pop
in
idivb
and
iret
push
data16
rcrb
jg
rcll
adc
pop
mov
jns
xor
stos
jb
cmp
lret
lock
test
push
pop
dec
xchg
pop
inc
les
sub
push
fadd
mov
xchg
mov
popf
add
ret
int3
add
fsubs
call
sub
in
sbb
lds
mov
loopne
stos
fnstenv
and
lods
xlat
or
lcall
dec
jl
imul
xlat
in
lock
xor
ja
pop
mov
pop
gs
mov
roll
and
clc
icebp
cmp
aas
stc
pop
xor
nop
ret
ss
xchg
into
pop
in
loope
and
mov
adc
xor
pushw
in
inc
cmp
leave
push
into
inc
adcb
enter
mov
adc
imul
in
cs
and
pop
xlat
mov
jno
pop
inc
inc
mov
arpl
jno
inc
and
dec
outsl
pop
faddp
out
fwait
iret
jecxz
imul
xchg
ljmp
sbb
cld
or
sub
pushf
add
pop
inc
testb
popa
adc
push
popa
dec
xor
data16
mov
dec
pusha
jns
or
in
xchg
add
inc
jne
stos
icebp
es
cmp
push
ret
and
and
dec
sub
arpl
sub
push
xchg
notb
mov
rorb
mov
and
xchg
and
mov
loope
mov
or
and
sbb
xchg
jns
sub
enter
test
cmp
loope
inc
sahf
adc
sub
lret
mov
push
pop
mov
mov
jno
dec
lea
inc
mov
mov
outsl
jne
sub
xlat
fbld
pusha
mov
sbb
sbb
cltd
ret
iret
xor
lret
mov
pop
stos
dec
pusha
jo
push
testb
push
aad
or
mov
cmpsb
cmpsb
ja
xor
stos
xchg
and
fistpll
sub
mov
enter
xor
xchg
push
and
pop
adc
movsb
sbb
rcrl
xlat
arpl
pop
aad
inc
xchg
movsb
inc
adc
mov
sbb
dec
cli
sub
jl
mov
lock
test
jmp
jo
dec
ret
push
cmp
rcr
cmp
int3
pop
inc
adc
mov
popf
sub
push
lret
dec
das
clc
add
popf
rolb
loopne
and
mov
adc
iret
out
sub
cs
scas
cmp
dec
push
repz
dec
xchg
test
mov
adc
dec
incb
outsb
or
adc
jge
test
inc
and
mov
outsl
or
jmp
rcl
popa
ret
pushf
movsb
mov
adc
mov
mov
rorb
lret
jl
cltd
mov
dec
cmp
loop
mov
sub
or
cli
std
mov
shrb
aas
dec
dec
gs
cmp
lods
rorb
add
data16
xchg
cmpsl
and
add
ss
iret
call
addr16
pop
leave
or
cmpsl
mov
cmpsb
and
push
cltd
mov
xor
outsl
clc
push
pushf
daa
mov
and
mov
sbb
push
pushaw
adc
lret
insb
cli
imul
out
push
orl
call
or
das
jbe
and
push
int
cmpsb
out
aad
cmc
je
pop
inc
ds
and
sahf
lret
mov
popl
jmp
popa
movsb
mov
pop
sbb
inc
sbb
xchg
xchg
je
scas
shll
inc
aam
jg
xchg
test
movsb
adc
mov
sub
mov
add
lahf
push
repz
scas
loopne
dec
out
pop
shr
lods
sbb
aas
shr
sbb
ret
jne
jb
fisttps
push
jno
jg
lods
movsl
sub
push
mov
inc
fistpll
mov
outsb
movsb
gs
mov
aad
sbb
push
sbb
imul
fcoms
fs
adc
lret
or
insb
pop
dec
rclb
mov
lea
jl
xchg
sub
fisttpl
fs
add
out
adcl
out
aad
arpl
sbb
dec
sub
inc
nop
mov
push
push
fadds
jns
push
ss
inc
and
jecxz
and
loopne
pcmpeqb
jecxz
inc
and
inc
int
or
cmp
pop
lret
jl
mov
sarl
lods
aaa
pushf
pop
movsb
pop
incl
adcb
les
xor
jl
insb
or
hlt
or
adc
push
and
test
xorb
popa
mov
push
sub
inc
xchg
imul
enter
cmp
rcrb
test
mov
cmp
jge
push
scas
int3
sbb
and
mov
xor
push
mov
test
lea
mov
pop
shl
mov
and
mov
lret
popa
sbb
add
lcall
pusha
pop
or
sub
pop
mov
inc
imul
mov
sahf
xor
adc
and
fildl
test
pop
outsl
mov
xor
loopne
addb
insl
rorb
aaa
stc
imul
lock
daa
add
sub
push
push
sub
pop
pop
out
iret
dec
xlat
je
icebp
shrb
es
popa
cltd
in
pop
or
rcl
cmpsl
jg
xor
rcll
sub
cmpsb
imul
rolb
and
dec
fwait
mov
jb
jecxz
inc
xchg
out
mov
loope
rclb
xor
cli
stos
and
data16
stos
sub
adc
cmp
or
mov
jno
repnz
mov
fcompl
test
jno,pn
mov
daa
addr16
addr16
roll
lods
mov
repz
push
adc
sub
scas
jnp
stos
push
test
xchg
pop
into
pop
repz
xchg
adc
dec
xor
mov
cwtl
pushf
je
jmp
jmp
mov
ds
adc
xor
outsb
xchg
push
in
mov
shlb
mov
pop
xor
lea
adc
push
enter
rolb
mov
jle
push
xchg
orb
cmpsl
enter
pop
punpcklbw
ja
xor
fcmove
xchg
aaa
arpl
jb
jmp
xchg
mov
inc
sbbl
xchg
js
sub
lea
in
inc
and
mov
stos
adcb
daa
add
pop
call
cmc
scas
mov
mov
sti
mov
clc
cwtl
out
into
sbb
inc
bnd
sbb
add
cmp
mov
jnp
jae
repnz
sbb
movsb
lods
das
loop
cwtl
xor
sbb
aad
rol
cmp
cli
push
pop
jns
repnz
sub
mov
inc
and
fiaddl
cmp
sub
sbb
pop
sub
xchg
xor
fwait
mov
or
mov
iret
add
daa
inc
cmp
jns
jl
push
jo
dec
or
adc
test
mov
sbb
xchg
add
dec
xor
lret
and
pop
cmp
addr16
leave
insl
fs
xor
sub
test
jnp
push
imul
dec
xor
adc
mov
int
mov
push
sbb
pusha
fisubl
insb
mov
cmp
xchg
and
sti
test
fisubs
je
xchg
ja
cmp
mov
sbb
fchs
push
mov
mov
dec
ret
sbb
xchg
lcall
stos
mov
jl
cmp
bound
mov
xchg
push
and
adc
addb
addr16
cmpsl
dec
bound
insb
xor
mov
adc
inc
in
lds
cmpsb
or
or
jne
fs
popl
cs
sti
iret
or
les
fldcw
jnp
xchg
or
insl
je
int3
pop
pushf
inc
movsl
out
inc
jae
mov
cmp
fxch
push
jecxz
test
fwait
sub
mov
jnp
cmc
ror
cmpsb
lret
in
insb
xchg
jmp
sub
mov
inc
scas
in
int3
adc
data16
adc
or
pop
stos
push
mov
sbb
push
pop
leave
xchg
lock
rcrb
cmpsl
or
ljmp
add
add
cli
and
rorl
lahf
rcll
add
repz
xor
testb
scas
das
mov
stos
mov
gs
int3
push
mov
mov
enter
push
push
sbb
in
out
lcall
enter
sub
jnp
sbb
and
lcall
imulb
mov
push
pop
sbb
aaa
pop
sbb
xor
test
cmp
icebp
dec
movsl
loopne
push
rcrl
sub
xchg
aam
fs
dec
pusha
cmp
mov
shl
roll
mov
int
ret
out
jns
lret
mov
addr16
xor
cmp
insl
and
add
xor
and
xorl
add
loop
adc
pop
mov
testl
xor
xor
push
loope
mov
cwtl
popa
mov
sub
cs
sbb
popf
mov
sbb
mov
insl
dec
or
add
outsb
int
jnp
xchg
and
xor
dec
ret
cs
outsb
mov
cmp
jnp
into
lret
cmp
xor
in
or
es
pop
xor
jmp
or
je
xchg
mov
mov
sub
mov
xor
test
xchg
cwtl
repz
shll
dec
mov
push
cmc
sbbb
clc
dec
cmpb
sbb
ret
xchg
in
and
mov
pop
mov
or
popl
fwait
push
pop
aaa
inc
jmp
mov
test
mov
and
lahf
mov
aad
shlb
cmp
andb
faddp
popf
or
sbb
dec
pop
inc
fildl
dec
add
jo
cltd
mov
nop
repnz
dec
mov
enter
and
scas
decl
xchg
inc
dec
adc
jns
add
and
sbb
orl
add
sbb
in
test
mov
arpl
sbb
xchg
pop
cmp
jne
push
cltd
pushf
shrb
ss
pop
add
insb
cs
loope
das
fs
cwtl
mov
and
or
aad
hlt
inc
cmp
out
push
xchg
lcall
adc
cmpsb
sahf
test
fnstcw
aas
or
mov
mov
and
movsl
lea
or
sbb
loopne
xor
mov
ljmp
mov
cmp
out
adc
mov
loopne
xchg
ror
enter
adc
rcll
mov
sbb
mov
cmpsb
add
out
lds
inc
mov
fidivs
xchg
into
les
popf
imul
lods
ror
out
push
mov
cs
cmpsb
enter
xchg
and
cmp
data16
into
pop
adc
pusha
int3
lahf
push
sub
insb
add
mov
stc
or
sbb
or
ficomps
push
sub
fwait
inc
outsl
mov
outsl
push
sub
stos
add
std
or
inc
stos
test
nop
mov
leave
cmp
loopne
inc
leave
cmp
and
into
ret
mov
xlat
add
ds
mov
in
dec
gs
cwtl
iret
sbb
aas
xor
jg
cli
fsts
or
ret
test
inc
movl
stos
dec
data16
jle
dec
mov
cmp
idivb
jae
or
idivb
fidivrl
test
pushf
xchg
out
xor
popf
adc
dec
shlb
adc
ja
or
aam
sub
sbb
jmp
add
aaa
sub
loopne
push
fcomps
mov
mov
dec
lahf
out
xchg
addb
int
cmp
repnz
mov
and
pop
mov
bound
mov
testb
sub
push
arpl
out
movsl
cmp
sbb
sahf
das
sti
push
scas
push
les
sub
and
xchg
sbb
out
lods
arpl
int3
sbb
cmpsb
cmpsl
sbb
cmp
lcall
out
scas
push
fldl
adc
cmpsl
jmp
mov
cli
pop
jge
jae
cltd
out
imull
xchg
jo
or
testl
mov
fnsave
in
and
ss
cwtl
sbb
add
inc
inc
cmp
movsl
gs
adc
jmp
insl
mov
cmp
inc
test
mov
jmp
dec
mov
loopne
push
clc
xchg
bound
jno
cmp
sub
incb
sub
or
add
push
push
inc
mov
inc
arpl
mov
subb
sti
cmp
mov
inc
sbb
adc
sbb
insb
insb
or
dec
in
insl
lods
mov
ss
inc
popa
mov
or
fistps
add
lock
subl
cmp
cmp
push
std
jb
mov
stc
dec
ror
cmp
mov
sub
aas
xchg
xchg
pop
enter
ret
cltd
pop
outsb
bound
std
jbe
dec
nop
aaa
push
out
dec
jmp
xor
inc
xor
insl
add
mov
add
add
cli
inc
xor
fstps
jbe
fcomps
in
lret
dec
enter
adc
xor
sbb
cmpsb
fs
dec
movsl
test
cmp
jnp
jb
insl
cltd
aas
shl
add
lods
loopne
call
arpl
iret
sub
xchg
mov
mov
add
shlb
lea
bound
xchg
fiadds
cli
xchg
cmpsl
insl
jne
lahf
fmull
add
in
fcomps
mov
mov
push
xchg
add
lea
dec
cld
in
lret
and
fcoml
push
pop
push
aam
lods
lahf
add
fwait
test
ficomps
xchg
jnp
jns
jns
push
mov
mov
mov
mov
or
jecxz
fwait
shrb
dec
fcmovu
aas
in
out
fwait
or
stos
dec
mov
sub
adc
popf
scas
sub
xor
pop
xchg
mov
pop
or
jno
out
push
lods
out
sub
mov
jle
cmpsb
push
imul
cmp
jge
outsl
add
movsl
mov
or
pop
push
xchg
loop
mov
inc
dec
jbe
cwtl
dec
test
mull
xor
stos
out
add
notb
cwtl
adc
xchg
push
jg
lea
test
and
outsb
flds
out
and
mov
idivl
dec
out
nop
mov
inc
jecxz
add
addr16
mov
mov
shl
adc
imul
cltd
add
inc
imul
cmp
rorl
sbb
xchg
or
or
daa
pop
and
fnstenv
nop
xadd
dec
imul
fildll
outsb
mov
sub
sub
jmp
test
adc
popf
leave
or
lret
scas
jmp
jg
and
mov
jl
mov
fimull
out
int3
ss
cmp
out
lret
xor
bndstx
sbb
xor
fistps
mov
scas
int
test
mov
fstl
lock
dec
enter
cmp
popf
mov
add
lahf
cmp
stc
dec
sub
sbb
adc
push
cmpsb
xchg
or
mov
shlb
xor
out
gs
fcomps
arpl
fs
mov
mov
enter
push
dec
jno
mov
push
dec
inc
pop
popa
dec
pop
into
iret
leave
scas
in
add
push
or
push
mov
arpl
aas
dec
sbb
sbb
in
stos
and
or
jge
test
andl
sub
push
sub
xor
mov
pop
mov
dec
sbb
add
cmp
cwtl
push
ret
pop
sahf
and
aam
and
movsb
sub
out
mov
cltd
icebp
int3
orl
dec
or
out
cwtl
xor
push
movb
jp
xchg
or
test
daa
sub
cmp
pop
aas
mov
mov
repnz
push
push
or
xchg
sbb
and
in
je
cli
stos
data16
into
xchg
arpl
or
repz
iret
ds
mov
aam
jno
icebp
adc
lods
jb
cmp
pop
sbb
dec
pop
out
dec
nop
call
loope
outsl
popa
xor
test
push
inc
pop
jne
repz
lods
xchg
fsubrs
movsb
adc
jae
push
loopne
scas
dec
and
fcmovbe
jno
es
inc
pop
mov
xor
fdivr
adc
addr16
xchg
pop
stc
inc
roll
xchg
fstpt
jp,pt
or
mov
scas
ljmp
sub
and
add
mov
out
dec
popa
xorb
pop
xchg
leave
and
popa
jnp
js
jmp
pop
push
jbe
mov
sub
inc
mov
jmp
and
dec
dec
xchg
xchg
add
or
xor
scas
sahf
inc
repz
and
shl
inc
inc
jb
or
cmp
pop
mov
jecxz
inc
pusha
dec
xchg
pop
push
jl
hlt
aaa
xchg
dec
sbb
dec
cs
jae
xor
cmp
pop
push
sub
shlb
clc
mov
mov
xchg
jl
add
lods
aas
gs
cs
xor
repnz
dec
pop
mov
xchg
or
mov
sub
add
add
xor
clc
mov
mov
loopne
adc
mov
xor
das
out
int3
andb
popf
lcall
mov
shlb
adc
cmp
in
mov
dec
scas
mov
sti
xchg
dec
mov
lahf
mov
in
jno
adc
out
xor
cmp
mov
push
pop
dec
sbb
pop
iret
mov
cmp
ret
pop
adc
inc
mov
in
add
cli
inc
sahf
cmp
xor
or
mov
fwait
loopne
or
sub
fdivs
adc
lock
cs
lods
fdivs
push
mov
stos
cmpsl
jo
xchg
movsb
add
mov
mov
dec
mov
stc
popa
and
add
mov
cmpl
jno
jp
mov
jge
adc
jnp
decl
pop
jnp
pop
pop
adc
push
mov
mov
insl
call
dec
and
fisttps
jmp
push
adc
add
aad
bound
outsl
inc
repnz
pop
sbb
imul
cld
cmpsb
rcrb
outsl
sub
xor
stos
shlb
jl
mov
jg
out
pop
add
pop
push
cwtl
mov
call
mov
push
or
loop
push
or
ret
inc
pop
and
jb
cmp
neg
cmp
cwtl
sub
adc
inc
fmull
cmp
pop
test
lcall
icebp
xchg
jns
imul
pop
mov
mov
popa
test
lods
movsb
dec
subl
xor
add
sbb
in
add
sbb
stc
lods
loope
mov
ljmp
fnstenv
in
cmp
lods
aas
sbb
jp
enter
cmc
mov
adc
rcl
cmp
in
ret
ss
mull
mov
jbe
xor
and
mov
mov
or
popf
cwtl
cmp
push
rcl
xor
add
jg
cld
cmpl
shr
inc
jbe
stc
ss
arpl
and
ja
mov
cmp
mov
jns
cmpsb
cli
lea
mov
cmp
aaa
call
clc
aaa
dec
sub
mov
jmp
jo
icebp
cmp
xor
mov
mov
jl
push
mov
out
mov
in
and
negb
and
jl
aas
mov
jl
into
xchg
bts
clc
add
push
pop
sbb
xchg
add
cwtl
ja
pop
push
push
xchg
cmp
jnp
shll
adc
orb
lock
or
push
push
faddl
test
push
stc
test
inc
or
sbb
ljmp
hlt
fwait
push
mov
loopne
icebp
xchg
push
mov
xchg
jbe
in
inc
cmp
adcb
shl
mov
imul
jno
inc
insb
pop
shrl
cmp
arpl
xor
mov
stc
repnz
add
aam
sbb
xchg
outsl
loop
ror
inc
es
sub
xor
cli
push
sbb
mov
jge
inc
adc
sub
adc
adc
xor
push
dec
or
pushf
cmp
xchg
aad
sub
push
pop
push
pop
ss
push
adc
inc
sub
sub
shl
jnp
adc
leave
sbb
imul
fisubrs
mov
xchg
cmc
or
xor
popa
stos
aaa
cmp
mov
push
inc
jb
movsl
mov
inc
pusha
pop
loope
int3
rolb
pop
and
jle
cmpsl
aas
mov
sbbb
sub
in
scas
test
dec
cmp
fdivs
lock
xchg
test
mov
fs
jne
leave
jbe
lret
test
push
push
fildl
hlt
mov
movsb
lock
in
fildl
sub
mov
ljmp
adc
sbb
push
inc
in
jle
push
xchg
loopne
mov
push
out
ja
or
adc
xchg
mov
test
cld
xor
decl
sarl
and
jno
mov
cmpsl
ret
or
andl
aad
fadds
mov
fmull
rol
cmpsb
pop
jno
xchg
int
insl
push
mov
jbe
pop
push
dec
mov
push
cmc
xor
mov
sahf
add
adc
xor
imul
xor
imul
pusha
mov
ds
or
pop
cmpsl
lds
pop
push
fisubl
data16
sbb
xor
cmp
and
cmp
adc
testl
jl
pop
inc
and
hlt
xor
jbe
lcall
and
negl
sahf
pop
pop
mov
sub
xchg
jnp
mov
inc
add
push
icebp
ljmp
lods
das
es
in
shlb
lock
shr
loop
flds
js
xchg
stos
shlb
cmp
mov
mov
xchg
adc
mov
sbb
jmp
dec
xchg
xor
mov
in
imull
shrb
and
in
aam
cmp
loope
mov
and
mov
or
dec
mov
push
mov
sbb
ja
hlt
fildl
mov
push
aaa
cmc
or
ds
and
out
das
or
incb
lods
sub
pop
sbb
or
sub
cwtl
push
addl
stos
xchg
mov
aam
neg
push
pop
pop
inc
xlat
filds
repnz
dec
mov
jp
imul
jmp
push
scas
cmc
xlat
imul
mov
push
xor
cmp
cmpsb
adc
sbb
add
adc
ret
pop
test
pop
in
test
jle
loopne
enter
ret
mul
or
fildll
shlb
adc
in
cmpsb
insl
test
leave
rcll
pop
push
imul
adc
mov
pop
std
mov
and
movsl
ret
fwait
sub
pop
pusha
loope
fldcw
ljmp
lahf
xchg
cwtl
pop
lret
pushf
repnz
popl
jbe
sub
mov
ds
and
jmp
in
push
mov
push
sarb
pop
mov
jp
repnz
lods
inc
movsb
ficoms
and
mov
xchg
cmp
sbb
mov
pop
cmpsl
adc
add
fbstp
sbb
sbb
sbb
movsl
pop
lock
outsb
sbb
mov
cmpl
mov
int3
nop
cmc
xchg
mov
stos
and
je
or
into
cmc
and
lret
jg
mov
imul
jb
fadds
stc
xor
ffree
add
faddl
push
xchg
dec
lahf
movsl
adc
xchg
ja
loope
push
mov
popa
in
mov
es
icebp
sub
shr
in
mov
cli
cmp
test
mov
aad
fwait
das
jmp
add
inc
and
mov
sti
xor
repnz
in
adc
or
or
or
in
push
pusha
inc
pushf
outsb
mov
pop
test
popf
ds
in
or
scas
mov
mov
sub
and
dec
jno
and
add
dec
dec
adcl
jg
jle
mov
into
outsl
pop
lds
lds
push
inc
cmp
add
outsb
or
pop
pop
mov
daa
das
stos
inc
jle
out
inc
popa
xchg
push
mov
push
xchg
or
sar
jecxz
movsb
mov
push
mov
dec
lea
ffree
sahf
ss
mov
push
outsb
sahf
inc
pusha
mov
mov
xchg
mov
mov
mov
push
outsb
loop
jg
popa
lcall
sbb
int
xor
iret
pavgb
cli
ds
xchg
pop
adc
or
cmpsb
je
fcmovu
xchg
and
push
lahf
mov
dec
cmpsb
and
enter
jp
popa
outsl
sub
mov
jae
in
nop
pop
test
mov
orl
jp
hlt
popf
clc
jnp
loope
std
in
sub
add
xor
lret
and
shl
push
iret
hlt
fnsave
pop
or
loopne
jge
std
outsb
mov
xchg
pop
jp
sub
cmp
pop
lock
das
imul
xor
loopne
in
int
test
jne
pop
push
adc
jno
or
pop
sub
mov
or
scas
jb
jno
movsl
pop
xor
repnz
add
push
arpl
sti
loopne
mov
into
push
jl
subl
push
mov
call
jl
and
daa
push
mov
decb
imul
cmp
cmp
repnz
mov
inc
lods
mov
aad
inc
ret
inc
aam
cld
pusha
cmp
arpl
mov
add
cmp
test
fildll
cmp
and
and
mov
pop
push
dec
ljmp
push
popf
rorl
lret
lea
shlb
lea
subb
jno
push
jb
and
add
sti
mov
enter
sub
andl
add
shll
push
dec
cli
add
add
cmp
sub
and
int
dec
adc
outsb
and
movsb
imul
stos
adc
int3
js
mov
xchg
fadd
iret
sbb
jb
sbb
cmp
xor
push
mov
sub
scas
cmp
xchg
push
jbe
mov
lret
mov
push
in
repz
and
andps
push
fcompl
loop
daa
push
push
jle
roll
or
fwait
xchg
aaa
push
pop
push
and
mov
push
cwtl
mov
jns
adc
mov
push
lods
adc
lahf
insb
mov
mov
mov
sub
mov
or
pop
int
add
adc
repnz
popa
sahf
dec
hlt
sahf
stc
jmp
adc
scas
divb
lds
cli
mov
cmp
mull
ja
movsb
xchg
movsb
ud0
xchg
lods
in
in
fldt
jns
jp
in
sub
pusha
inc
xchg
push
popf
cmc
mov
scas
aam
mov
cs
fisubs
pop
xor
mov
js
test
cmp
xor
pop
mov
xchg
out
imul
xchg
fsubr
xor
adc
and
rolb
ljmp
mov
mov
ficompl
mov
cmp
lret
es
sti
out
sub
add
adc
out
cld
adc
imul
adc
out
mov
cmpsb
es
sbb
or
loopne
adc
ror
mov
fiadds
lret
cmp
in
inc
mov
int3
cmc
sbb
sar
jno
lahf
lock
movsl
into
push
xchg
sbb
cmp
jae
addl
movb
add
fstps
jb
jne
pop
pop
or
lods
xchg
mov
and
jmp
pop
int3
repz
jo
pop
nop
add
sub
movsl
enter
clc
scas
or
push
out
cwtl
mov
es
mov
fildll
les
or
sbb
mov
xchg
repz
add
int3
inc
pop
xlat
mov
jbe
pop
aas
add
adc
jmp
int
fwait
lret
sbb
sub
jns
mov
nop
fiaddl
cs
inc
xchg
aas
shlb
and
jecxz
shrl
outsb
xor
sub
cmp
and
stc
adc
cmp
ljmp
cmp
movsl
ret
and
xchg
insl
sbb
out
and
jecxz
lods
xchg
push
test
cmpsl
pop
fmul
aaa
jo
or
ss
in
fs
jns
jo
lods
push
jle
cltd
mov
mov
jg
adc
jo
mov
out
xlat
or
xchg
js
aaa
leave
dec
in
mov
ja
sbb
mov
clc
push
adc
push
cmp
push
inc
mov
addb
loope
mov
cwtl
and
aam
outsl
leave
in
sahf
js
sarl
iret
shrb
out
fildl
jle
inc
imul
or
jg
jae
es
movsb
jl
sbb
inc
or
jns
pop
xchg
dec
cmp
xchg
ja
mov
in
push
push
push
jecxz
sti
pushf
insl
shl
les
lret
fsubs
std
outsb
mov
into
jmp
lods
nop
push
out
sbb
shlb
sub
adc
pop
mov
xchg
add
inc
std
mov
loope
lret
jle
xlat
cltd
jp
scas
mov
jg
inc
mov
movsb
pop
fsubrl
movsb
daa
lods
mov
aam
pop
pop
iret
divb
cli
and
mov
mov
lret
inc
cmp
aad
movsl
inc
in
decl
sti
out
stos
add
jno
pop
daa
mov
sbb
nop
les
inc
out
fbstp
das
movsb
ret
test
dec
adc
mov
ss
mov
jbe,pt
bound
push
jno
pushf
fwait
test
and
adc
dec
shlb
and
stos
jbe
into
adc
lea
jne
xchg
dec
lods
xlat
sbb
cmp
xchg
push
mov
jge
insb
dec
fisubrl
into
push
movsb
fdivl
repnz
imull
xor
hlt
test
ret
add
add
movsb
pavgb
fmul
rcrl
adc
push
or
push
aaa
cld
xchg
aaa
jnp
xchg
pop
and
add
outsl
mov
xchg
pop
inc
lahf
lods
cltd
loopne
push
jmp
orb
mov
mov
sbb
mov
ds
rorb
shlb
sub
fiaddl
jb
stos
dec
sahf
xchg
dec
cltd
push
pop
je
mov
cwtl
jecxz
cmc
aaa
adc
adc
hlt
frstor
repz
jns
mov
xchg
mov
and
and
test
inc
mov
jmp
int3
sub
pop
pop
mov
mov
sbb
cmc
into
in
mov
int
test
pop
inc
mov
pop
or
icebp
mov
and
mov
sbb
imul
xchg
stos
sti
push
mov
outsl
push
mov
test
dec
jecxz
sbb
xchg
shlb
scas
dec
cmpb
ss
fdivrp
rcr
add
push
rcrl
adc
push
stos
sbb
and
pushf
dec
in
xor
adc
or
jecxz
push
sbb
loop
jmp
jl
mov
push
push
mov
stc
jnp
roll
adc
cmpsl
outsb
cltd
jno
dec
addr16
jl
inc
mov
iret
jne
dec
dec
mov
mov
std
enter
sbb
pop
adc
loopne
mov
xchg
cmp
cmp
fdivrs
stc
movsb
out
mov
enter
add
ja
pop
push
xorb
inc
bound
insb
jb
and
cmp
in
loopne
dec
jecxz
adc
push
cmp
xchg
jns
or
and
push
popa
and
es
pop
jp
jmp
cmpsl
sbb
sub
lcall
mov
sbb
and
pop
jno
pop
adc
mov
adc
arpl
adc
in
aaa
lods
dec
add
add
ljmp
pop
pop
gs
mov
fcmovnb
mov
cmp
sbb
fcoms
xchg
les
repnz
pop
dec
jae
lods
movsl
inc
inc
ret
and
into
arpl
iret
adc
sub
and
sbb
add
push
push
push
adc
adc
dec
in
ljmp
jbe
pop
movsl
out
inc
inc
in
int
dec
mov
pop
rol
cmp
sbb
inc
sub
cwtl
mov
pop
insl
leave
push
or
sbb
pusha
sarb
cmc
movsb
mov
mov
into
sub
xor
inc
or
jne
mov
mov
inc
xor
inc
mov
in
outsl
push
pop
push
orb
and
sub
sub
dec
fstl
dec
sti
popf
pop
add
cmpsl
repnz
jge
xchg
sbb
sbb
scas
fs
cmp
and
lods
fcmovbe
divb
call
pushf
bound
fsub
cmp
push
mov
add
xchg
in
adc
xchg
xor
daa
dec
jmp
and
repz
shll
push
push
jne
push
pop
popa
and
aam
pop
hlt
jmp
adc
out
repz
mov
sbb
in
cld
paddw
repz
sbb
add
pushf
mov
testl
imul
and
jb,pn
sbb
ror
xlat
push
push
out
add
and
inc
pop
fsts
cmp
icebp
add
sub
xchg
sbb
out
into
add
jmp
lock
jbe
jb
jecxz
lret
or
and
mov
out
xchg
mov
mov
xchg
rorb
fdiv
bound
mov
pop
jp
inc
pop
es
pop
and
loop
pop
xchg
lret
cmp
jns
adc
sbb
into
mov
cmc
inc
dec
pop
and
lods
sbb
push
aad
pop
cmp
push
cmp
xchg
jae
movsl
jo
add
mov
int
js
mov
cmp
xchg
scas
sahf
xor
mov
pop
xchg
push
xchg
inc
fucom
mov
xor
jo
mov
cmp
fisttpll
ja
xor
xchg
xchg
movups
xchg
divb
mov
fcomi
popa
push
mov
xor
loopne
xchg
pavgw
mov
js
inc
scas
loope
xchg
jg
xorl
cmp
push
pop
movsl
enter
and
sbb
loope
dec
pop
js
mov
out
sub
rorb
fiaddl
outsl
or
xor
jne
or
mov
fldt
scas
add
fisubrl
std
mov
cld
xchg
popa
push
cld
roll
adc
ja
pop
pushl
sbb
pop
js
test
dec
sahf
or
dec
int
mov
std
add
mov
icebp
sub
dec
mov
lea
cmp
pop
jl
pop
xchg
mov
cmpsl
dec
mov
xor
js
add
test
or
fidivrl
fcmovu
in
out
pop
nop
mov
ret
push
movb
push
xchg
push
ss
js
dec
aaa
lds
inc
cmpsl
sub
push
std
ja
movsb
ja
xor
test
notl
lret
cwtl
ret
cmp
data16
sub
mov
jmp
into
xchg
ja
aad
dec
xor
mov
mov
adc
fdivrl
xor
jno
jns
xorb
or
xor
aad
pop
add
rclb
rcl
dec
fcomps
into
scas
scas
cmp
daa
out
stos
popa
xchg
push
int
pop
cmp
addr16
stc
cmp
ss
lods
movb
push
in
push
gs
pusha
mov
lret
dec
xor
lock
or
cwtl
fsubr
sbb
add
orb
es
dec
jg
mov
lock
jb
push
stos
faddl
rcrb
shlb
add
fisubl
shl
sbb
lock
adc
add
in
movl
inc
jecxz
decb
or
leave
add
jno
xchg
cmp
push
movsl
mov
add
push
pushf
std
les
push
and
insl
daa
push
jle
loope
mov
mov
cmp
fwait
lock
mov
jns
mov
in
lods
jns
pushf
inc
addr16
fxch
jae
insb
decl
sti
jp
add
add
cmp
xchg
jo
xlat
pop
or
xchg
int
mov
inc
fstps
movlps
cmp
in
dec
xchg
fcompl
div
inc
mov
push
test
lock
rcr
pop
in
shlb
test
jbe
or
out
xor
xchg
out
mov
call
cld
mov
xlat
dec
pop
int
pop
pop
jmp
xor
hlt
mov
jo
out
jns
cmpsb
inc
fwait
mov
adc
sub
rcr
sarb
mov
shlb
xor
adc
sti
js
jp
nop
fs
stos
mov
in
aas
push
jmp
fistl
and
mov
cwtl
and
mov
test
cltd
dec
sbbl
out
or
dec
arpl
sub
sbb
cmp
inc
iret
mul
sbb
mov
dec
adc
jnp
repnz
scas
sub
mov
aas
pushf
dec
ds
lock
pushf
mov
pop
inc
sahf
mov
in
cwtl
push
and
jne
data16
jg
push
mov
inc
sbb
cmp
sub
lods
test
and
mov
pop
insl
push
mov
mov
cmp
in
fldt
or
sub
and
leave
movsl
and
scas
dec
xchg
adc
bound
add
aas
inc
jl
aad
mov
adc
mov
dec
mov
and
inc
pop
mov
lret
xchg
inc
cmpsb
adc
out
scas
iret
mov
pushf
enter
popf
setns
inc
jp
int3
fwait
orb
out
push
push
and
pop
mov
mov
sub
push
stc
cmp
sub
adc
mov
push
les
jbe
push
gs
dec
push
mov
sub
lock
xchg
and
cs
jns
mov
test
in
adc
rcrb
cmp
push
lahf
ret
pop
xchg
inc
popa
les
mov
sub
scas
jbe
dec
cmp
add
dec
outsb
pop
popa
jo
sti
in
fisttpl
fdivrl
aad
sbb
lds
pop
rolb
scas
jb
cmpsb
sbb
mov
pop
push
mov
jp
xor
mov
pop
fs
lret
xchg
mov
fsubrs
stos
push
fcomp
push
add
fisttpl
pop
jno
mov
mov
adc
xorl
sbb
clc
jo
xchg
dec
sub
mov
mov
jb
ds
outsb
out
sbbl
ss
xor
cmc
in
ret
push
fistl
and
rcrb
pop
movntq
inc
sub
in
mov
add
aas
outsb
adc
popa
ret
lahf
jns
imul
iret
insb
or
hlt
shlb
sub
mov
mov
orb
add
out
xchg
jb
loopne
loope
sub
test
test
sbb
add
xchg
fisubs
popa
sarb
jg
mov
sti
and
ds
push
sub
pop
out
cmp
orb
shlb
jle
pushf
xor
dec
mov
ds
jo
test
push
sbb
jns
fcoms
push
pop
lcall
jb
les
dec
cli
data16
mov
arpl
nop
push
xchg
mov
test
rcl
dec
mov
xchg
std
or
out
je
call
add
cld
cmp
jp
push
jns
and
stos
das
add
xor
adc
push
add
or
push
add
cmc
mov
lahf
xor
mov
loopne
adc
in
pusha
je
lock
inc
arpl
xor
and
das
and
mov
decb
out
mov
out
outsl
mov
inc
adc
cli
arpl
ret
dec
cli
mov
pop
rol
rcr
sub
push
xchg
cs
or
add
and
mov
xor
adc
mov
add
pusha
cs
nop
pop
mov
dec
push
jmp
ficompl
or
mov
shl
sbb
mov
lret
in
enter
cmp
sbb
mov
jne
sub
into
int3
cmpb
nop
bound
movsl
xor
jecxz
loop
mov
hlt
incl
or
xchg
mov
jmp
pop
ret
nop
sti
and
pop
add
push
xchg
push
mull
mov
call
fimull
push
stos
insb
add
lock
lahf
gs
cmp
jno
fildll
xchg
ljmp
das
es
push
insl
ds
pop
mov
stos
pop
aam
lcall
inc
cs
rcll
sbb
fcoml
mov
leave
icebp
mov
sbb
stos
mov
jno
fmull
cmp
aam
sahf
in
jle
jecxz
not
lods
and
lret
cmpsb
js
xchg
ljmp
jnp
aaa
ret
std
and
es
xchg
push
shrb
popf
mov
das
ret
xor
cmp
cmp
vpmaxsw
and
jbe
mov
test
inc
xchg
ret
testb
out
icebp
cld
nop
sub
cmp
inc
push
cmpsb
fidivrl
xor
push
nop
mov
negb
adc
roll
stc
push
sub
test
sub
adc
sbb
jo
mulb
mov
fldenv
lret
addr16
pop
and
dec
daa
stc
cmp
pandn
je
clc
xlat
push
lret
cs
mov
mov
insl
mov
dec
mov
sub
mov
int
jl
mov
loope
js
es
into
outsl
jp
cwtl
mov
adc
or
sub
out
or
gs
aas
cmp
setp
fimull
push
aam
iret
sbb
mov
mov
ret
stos
movsb
adc
inc
aas
jl
xchg
sbb
jmp
xor
dec
ss
inc
xor
pop
pop
mov
lahf
mov
fimull
and
dec
js
cmp
jb
add
dec
jg
jns
xor
int
mov
and
xchg
xchg
xchg
inc
mov
pop
lds
pop
xor
jmp
je
push
iret
lock
leave
jo,pt
arpl
shll
inc
mov
stc
fisubs
sub
push
mov
or
and
sbb
rorb
sahf
jae
sti
orb
sahf
pop
adc
sub
xchg
sarl
data16
in
and
xchg
adc
xor
dec
mov
pop
dec
xchg
loope
cmpsb
lahf
gs
adc
out
mov
xchg
das
test
or
popf
add
not
fsubl
mov
loope
imul
in
outsl
ljmp
shl
sbb
out
inc
pop
loope
test
lea
pop
repz
or
or
testl
out
or
push
ja
imul
fcmove
into
cmp
dec
mov
xor
adc
sbb
or
cld
scas
mov
repnz
jbe
sbb
cmp
mov
and
cs
cli
cld
sbb
xchg
sbb
jne
out
dec
jne
xchg
push
cmc
ror
roll
test
aam
xchg
pop
scas
inc
and
cmp
cld
adc
or
xor
and
fcoml
cmp
addr16
mov
lock
inc
jns
xchg
dec
mov
sub
fldt
int3
xor
inc
rolb
iret
or
aad
pop
sub
lea
pusha
mov
cld
out
in
xor
adc
aam
loop
mov
cmp
fldenv
cmp
test
aad
dec
dec
lret
ss
sarb
aad
dec
cltd
lahf
add
dec
std
shufps
cmp
aaa
inc
jecxz
cltd
sub
mov
test
les
sbb
hlt
repz
mov
sar
cwtl
push
jae
dec
mov
xchg
scas
loopne
lods
test
and
dec
ja
lds
int
sbb
or
xchg
call
ret
inc
cmc
and
fsubrp
and
cmp
push
pop
inc
jecxz
ret
mov
push
ja
lods
dec
and
jp
stos
imul
stos
xor
leave
andb
arpl
js
xacquire
shlb
add
jg
push
test
pop
int
out
mov
insl
add
push
mov
add
inc
cmpsb
sbb
pop
mov
jae
cmp
push
in
jg
push
xchg
cmp
fdivrs
push
mov
out
and
popa
push
jp
mov
out
push
adc
xchg
mov
movsl
xor
mov
xlat
lock
mov
dec
inc
cmp
jb
jbe
mov
cmp
xchg
cmp
mov
and
xchg
add
jg
sub
mov
push
dec
popa
icebp
movsl
push
dec
mov
pushf
pop
in
push
pop
inc
add
xor
xor
aaa
add
mov
pop
shrb
inc
gs
adc
stos
mov
cs
into
or
or
cmp
iret
or
insb
fistpl
dec
adc
jb
mov
mov
loopne
in
or
filds
sbb
mov
test
add
xchg
xchg
loopne
and
es
rcrl
push
les
or
adc
in
sbb
sub
mov
adc
jnp
inc
out
xchg
lea
fsub
add
pop
pop
lahf
aas
xchg
mov
sub
push
stos
or
sub
addr16
test
fmuls
cmp
mov
jno
icebp
lods
fisttps
xor
pop
adc
sbb
lcall
jmp
sub
adc
add
imul
in
inc
popa
mov
and
sbb
or
jecxz
dec
xor
sbb
mov
pop
mov
or
mov
stos
popf
lods
jg
xor
imul
sub
dec
outsb
cmp
lods
push
push
cwtl
jg
pop
hlt
in
or
shll
mov
hlt
dec
xchg
aaa
xchg
xchg
pop
in
sbb
mov
inc
dec
ss
sbb
push
clc
mov
cs
bound
or
addr16
xchg
repnz
icebp
stos
xor
sub
pusha
jle
dec
xchg
mov
aam
mov
add
daa
lock
pop
repnz
fmull
outsb
sbb
jbe
xchg
cmp
into
ss
out
add
lods
in
jbe
hlt
ret
add
mov
add
mov
push
into
xor
testb
adc
jne
enter
inc
popa
fldcw
jno
sbb
jo
push
push
mov
mov
loope
mov
mov
cmpsb
jnp
cli
pusha
leave
insl
in
int
xchg
fs
sub
cmpsb
outsl
js
out
rorl
add
cltd
lods
fcompl
sub
mov
cli
mov
out
ss
adc
and
jnp
addl
lcall
or
mov
push
xor
push
jno
xchg
add
mov
sub
xchg
popf
fdivrp
jl
jae
movsb
notb
jp
repz
inc
jmp
leave
mov
sub
mov
push
sub
jnp
mov
pushf
inc
mov
mov
sbb
adc
add
mov
jo
addr16
push
out
popf
ffreep
popa
cs
mov
mov
adc
inc
inc
xor
test
mov
or
push
test
mov
mov
jecxz
push
push
xchg
mov
js
in
sub
mov
push
sub
inc
xchg
scas
jmp
mov
and
xor
mov
in
cmc
pop
mov
or
enter
dec
mov
popa
pop
test
inc
sarb
mov
dec
incl
ljmp
push
outsl
rep
je
das
into
imul
scas
add
into
inc
mov
push
je
inc
push
les
inc
mov
sub
xchg
push
or
rcrl
rclb
jae
cld
xchg
shl
xchg
fisubrl
cmp
jne
or
sub
out
cld
ja
push
inc
mov
mov
mov
pop
aaa
inc
inc
lret
fucom
cld
cltd
sub
pop
repz
xor
mov
jns
mov
sub
mov
xchg
adc
loop
xchg
repz
xchg
xor
pushf
pusha
mov
pop
xor
pop
push
xor
jle
push
movsb
inc
cmp
adc
test
loopne
ds
sub
adc
fsts
lcall
adc
jl
lods
push
or
push
jmp
inc
cmpsb
adc
jp
pop
fcomp
mov
mov
or
pop
pop
into
shrl
mov
out
push
xor
dec
int
xchg
stc
out
or
enter
push
pushf
daa
lods
dec
adcl
loope
push
out
push
push
ror
shll
xor
pop
add
shlb
inc
mov
in
mov
add
jmp
push
lock
mov
mov
addr16
dec
sub
leave
fwait
sti
lods
pop
mov
aaa
fstpl
in
xor
aaa
in
mov
pop
xlat
mov
jmp
int3
stc
test
insl
ja
filds
adc
testb
jg
xchg
jnp
sub
mov
insl
ds
bound
pop
aaa
push
dec
pop
movsl
xchg
loope
aaa
repz
scas
addr16
inc
push
vmovd
rep
pop
dec
sub
fstl
or
xor
cmp
popa
mov
std
xchg
push
test
scas
int3
rol
xchg
jmp
mov
mov
scas
mov
and
cmpsb
xchg
sub
icebp
fnsave
xor
xor
outsl
imul
ret
xchg
jns
addb
pop
dec
or
clc
fidivl
stos
repz
aas
pop
test
pop
rorl
xchg
mov
lea
mov
sarb
jb
lahf
lret
and
sbb
fbld
iret
pushl
mov
mov
data16
test
lret
xor
sbb
ret
sbb
xor
movsb
mov
or
mov
mov
jnp,pt
aad
cmp
sbb
repnz
push
clc
xchg
push
jg
xor
inc
inc
jbe
ret
mov
push
insl
rcr
or
cmp
cs
mov
jnp
call
dec
push
shl
add
shlb
hlt
push
and
mov
je
je
mov
fdivl
roll
jmp
sahf
push
pop
mov
add
push
stos
shlb
cli
popf
scas
lret
jbe
out
imul
lods
int
insl
adc
aas
aam
mov
dec
call
addl
xor
test
lods
inc
mov
out
les
cmp
sub
xor
pop
or
jae
or
dec
sbb
popa
mov
pextrw
pop
xchg
and
shl
shrb
mov
call
sbb
sahf
mov
andl
mov
add
loop
dec
xchg
sub
popl
incl
sahf
pop
lods
cltd
js
cmpsb
ret
enter
mov
subl
pop
lret
testl
shlb
push
mov
lahf
out
mov
cmp
mov
popw
mov
pop
xorl
pushf
xchg
lds
ds
das
pop
sub
mov
les
pop
mov
stc
mov
pusha
jg
xchg
and
dec
mov
and
arpl
adc
mov
push
mov
ret
xor
into
stos
cmp
call
sub
mov
jmp
dec
jmp
xorb
stos
adc
daa
push
cmp
pusha
dec
sub
mov
pop
push
out
push
inc
xor
pop
push
dec
les
jmp
stos
sub
filds
dec
jo
push
sbb
sub
out
cmp
cwtl
pop
xlat
pop
mov
mov
xor
cmp
pushf
addr16
xchg
sub
mov
or
mov
mov
lcall
sahf
dec
xor
inc
push
cmp
mov
clc
and
rcr
mov
bound
xor
mov
or
ret
std
jo
pop
clc
jge
jb
xchg
dec
mov
loope
push
into
repz
icebp
mov
sahf
loop
xchg
dec
dec
and
ja
mov
repz
dec
dec
movsl
xlat
inc
pop
push
adc
push
mov
mov
or
popf
les
aad
in
sbb
inc
dec
in
and
int3
ficoms
add
ljmp
fildll
subl
cltd
lock
adc
rcrb
xchg
sbb
stos
push
jg
mov
cmpsb
adc
clc
insl
dec
imul
cmp
ret
mov
jg
into
push
xor
data16
push
mov
fs
and
jp
out
cmp
add
mov
insl
cmp
dec
jge
fsts
rep
insl
sbb
subb
cmp
bound
mov
mov
rol
add
push
test
lahf
push
outsl
pop
ret
mov
dec
lea
lahf
push
sbb
dec
pop
popa
lods
xor
icebp
fldenv
xchg
and
dec
shr
add
lds
aaa
mov
mov
adc
mov
andb
in
and
sub
add
std
sub
jno
out
sarb
cmp
and
adc
pop
push
lods
pushl
or
dec
stos
sub
add
inc
jbe
mov
scas
xor
and
ljmp
pop
dec
push
call
sti
les
sub
cmovae
jg
bound
movsb
xchg
push
mov
outsl
pop
mov
xor
repnz
and
add
xor
iret
mov
or
dec
sub
pop
push
or
sarb
insb
jnp
not
sub
cwtl
jecxz
push
icebp
cmp
lahf
inc
inc
fcmovne
mov
push
js
adc
insb
dec
jmp
mov
mov
or
inc
xor
jne
test
add
mov
dec
add
aam
lods
lds
sbb
xchg
cs
int
xchg
inc
aad
pusha
inc
popf
ret
insb
stc
cmp
out
icebp
fimuls
cld
jle
mov
push
push
mov
jecxz
jb
outsl
sysenter
sbb
or
jmp
popf
sub
mov
icebp
stc
mov
sti
stos
mov
add
daa
andb
push
sarb
fstp
cmp
mov
push
mov
ret
shlb
andb
es
fsubrs
mov
cld
sbb
cld
sbb
pop
test
scas
fiadds
lahf
test
adc
leave
and
loop
adc
andb
mov
out
ror
icebp
repz
xor
lret
xchg
nop
fucom
fsub
pop
rcl
aad
adc
in
shufps
mov
mov
fs
je
ret
mov
stos
add
xor
sub
inc
jl
pushf
sub
data16
pop
push
sbb
mov
data16
dec
sub
push
gs
fs
mov
xor
je
adc
jno
or
and
jns
xchg
dec
jno
dec
repz
pextrw
xor
bound
or
jae
inc
mov
xchg
jne
in
scas
cltd
mov
add
iret
add
mov
adc
mov
inc
xlat
std
mov
sub
inc
data16
cmc
mov
mov
jp,pn
iret
clc
in
jge
aam
decb
lods
into
je
cs
cmpsl
pop
fildl
add
sub
insl
jbe
adc
sbb
and
and
xor
or
push
cmp
adc
xor
mov
cmp
and
xchg
bound
lret
jae
into
or
test
jo
dec
and
repnz
lcall
es
arpl
or
push
mov
out
mov
hlt
aaa
dec
pop
cmp
mov
lcall
pop
cmp
sub
jno
cmpsl
xor
push
mov
adc
inc
movsl
cmp
sub
xchg
mov
add
push
mov
cmpsl
pop
and
pop
repnz
dec
outsl
test
cmp
pop
push
mov
pop
xor
mov
das
sub
js
testb
sbbb
xchg
sub
dec
sub
mov
pop
cltd
int3
stos
xchg
repnz
xor
scas
cmp
jmp
test
fcmove
mov
pop
pop
lea
hlt
jecxz
xchg
pop
push
dec
inc
addr16
lock
cli
and
mov
das
dec
dec
pushf
insl
cld
add
lcall
jbe
push
sub
add
sbb
xchg
outsl
cmpsb
mov
pop
cmp
arpl
cmp
mov
mov
pop
sub
jl
mov
movsl
or
pop
dec
xchg
xchg
inc
bound
dec
or
cld
jmp
lods
in
xchg
repz
push
and
lock
add
fs
imul
inc
cli
mov
push
mov
jae
fs
out
pop
sub
mov
push
sahf
and
stc
add
ss
inc
fsubl
sub
push
xor
iret
jmp
sub
shlb
add
or
jecxz
rcrb
jno
pop
fsts
es
iret
pop
jno
sbb
push
and
push
shlb
lret
shll
int
lds
push
lds
inc
aad
pushf
xor
repnz
ret
into
aaa
icebp
cmp
jno
mov
ja
test
xchg
mov
dec
lods
ret
mov
xchg
sbb
xlat
mov
rorl
dec
outsb
ror
pusha
pop
in
pop
push
xor
inc
imul
mov
cmp
in
lcall
inc
loop
cmp
mov
rcrb
cmc
xchg
in
and
repnz
jle
popa
lret
fstpt
sub
daa
test
xchg
and
mov
xor
mov
sbb
jb
sahf
or
dec
and
cmp
aad
jb
call
sahf
loop
or
fidivrs
adc
mov
dec
les
add
cmpsb
adcl
mul
cmpsl
mov
mov
inc
sar
in
jae
cli
cmp
push
fidivrs
imul
dec
insl
std
arpl
or
pop
mov
and
imul
xchg
mov
out
in
mov
or
gs
std
movsl
es
cltd
adc
pop
jno
scas
dec
mov
sbbb
scas
mov
outsb
sti
shrb
movsl
hlt
xchg
movsl
pop
cmp
cmpsl
add
jl
cmp
outsl
cmc
in
idiv
sbb
cmp
pop
or
leave
sti
fidivrs
push
daa
out
fbld
addb
inc
outsl
mov
sbb
out
cs
xchg
in
add
jl
jbe
stc
shr
popl
dec
nop
adc
pop
jb
push
movsl
jno
pop
mov
lcall
fadd
push
jg
enter
mov
mov
or
mov
jae
je
js
in
hlt
lahf
jp
xchg
ret
jl
fbstp
cli
xor
pop
jecxz
pushf
mov
add
mov
sarb
jle
dec
lret
mov
inc
and
out
jge
push
call
lds
pop
cmpsb
fsub
aam
inc
std
hlt
pop
push
pop
pop
xor
pop
or
push
mov
pusha
xchg
test
lock
inc
or
xchg
cld
fcompl
mov
iret
bound
ja
in
xor
icebp
mov
shll
jo
and
xor
icebp
jmp
fnstsw
xchg
in
ss
or
jo
dec
push
and
or
xor
and
mov
xchg
aaa
or
mov
icebp
add
neg
sahf
pop
mov
repz
cmc
jmp
popa
xchg
push
mov
mov
arpl
lock
cmp
mov
jns
cli
into
add
adc
lahf
pop
sahf
movups
lds
pop
lret
add
mov
dec
in
cmpl
lock
aaa
add
iret
iret
push
mov
popf
stos
cltd
in
cmpsl
pusha
test
add
jmp
ljmp
add
mov
shlb
add
sarb
rcrl
sti
sub
ja
add
mov
adc
sahf
jbe
ja
lock
leave
push
xor
adc
inc
mov
pushf
icebp
rcr
lods
pop
mov
subb
and
xorl
les
pusha
adc
mov
orb
sahf
xchg
sti
fs
decb
jmp
mov
repnz
clc
jb
mov
dec
adc
xchg
push
cmp
nop
cmp
push
xchg
mov
and
iret
nop
sbb
loope
loope
std
fs
xorl
push
xor
ds
movsl
repz
ds
lret
xor
mov
mov
pusha
dec
iret
fstps
sbb
in
inc
push
mov
xchg
mov
insb
lret
cmc
xor
inc
xchg
cmp
bound
mov
test
das
dec
fdivrl
lods
pop
push
push
lods
int
sub
test
fs
dec
xorl
into
lods
mov
lahf
leave
mov
sub
test
data16
adc
lock
push
ss
movsb
xchg
pop
scas
and
add
cmp
loope
cltd
push
int
dec
arpl
out
pushf
and
inc
add
movsl
mov
add
sbb
hlt
out
adc
and
cmp
gs
xor
dec
shl
inc
xlat
pop
push
shll
xor
movsb
leave
scas
enter
leave
cmpsb
sbb
sub
out
xchg
xor
cmp
call
jmp
mov
sbb
jns,pn
jmp
xor
aam
mov
pop
xchg
mov
loope
decl
xor
cpuid
xorl
mov
dec
fisubrs
out
fsts
out
outsb
ja
mov
mov
out
jnp
jmp
dec
sub
sbb
cmp
push
addr16
jmp
fsubrs
int3
add
mov
shl
das
push
add
std
loopne
xor
inc
decb
dec
and
xchg
pop
adc
xor
fwait
mov
les
xor
xor
sbb
fs
lahf
test
mov
add
notb
ljmp
dec
std
lods
cmpsl
lcall
arpl
cmp
fpatan
and
ret
fwait
push
fs
mov
fwait
mov
mov
iret
and
xor
pop
xchg
jnp
xor
xchg
mov
pop
out
fdivs
jbe
sti
inc
jo
adc
mov
pushf
add
test
popf
in
mov
rclb
sbb
je
inc
ljmp
pop
mov
leave
in
popa
loopne
pop
adc
xor
popf
jmp
adc
cmpsl
xchg
in
mov
cmp
shl
out
hlt
f2xm1
and
pop
xor
sub
mov
imul
mov
int3
fiadds
or
outsb
rorb
out
movsl
fistpll
ret
dec
stos
sbb
lods
arpl
cmp
cmp
jmp
arpl
jecxz
rcrl
sbb
test
sbb
mov
jnp
insl
jp
loop
or
and
mov
test
xor
inc
lahf
cmp
xchg
stc
jno
in
scas
jmp
dec
pop
or
shrb
iret
sarl
fimuls
mov
lret
pop
mov
jg
or
sub
jecxz
stos
lods
jne
out
andl
xchg
xchg
addr16
add
in
fs
push
stc
orl
adc
pop
xlat
jno
enter
ss
cld
or
dec
arpl
pop
xor
mov
imul
adc
mov
dec
jbe
sarl
xchg
inc
sarb
scas
push
mov
cmp
out
pusha
movsb
aam
inc
inc
push
pop
sub
mov
cmpps
in
in
sub
ja
je
lret
test
jbe
lods
loop
push
lods
inc
mov
pop
je
pop
pop
xlat
inc
lahf
inc
iret
fsub
enter
ja
imulb
cmp
push
shrb
add
gs
cli
xchg
imul
mov
pop
mov
xchg
adc
loope
clc
dec
scas
sti
or
ficoms
addr16
scas
adc
adc
push
xchg
xor
lret
push
notl
sbb
push
jns
insl
ffreep
inc
insl
ret
adc
xchg
les
data16
hlt
sub
mov
dec
out
push
mov
xchg
xchg
aaa
xchg
mov
loopne
mov
inc
or
jle
call
divb
xor
lds
mov
pop
std
cmpsb
xchg
lea
mov
or
mov
out
mov
cwtl
xchg
sub
mov
ret
inc
mov
fiadds
stos
dec
push
out
enter
push
test
sub
ljmp
lods
dec
jmp
push
sti
lahf
stc
push
jg
incb
xlat
lock
dec
pop
test
mov
add
xor
mov
mov
and
sahf
pop
sti
insb
inc
add
and
xlat
hlt
testl
fwait
negb
dec
js
test
adc
ret
pop
pushf
sub
data16
mov
push
ret
test
and
xor
scas
adc
popa
jo
add
push
icebp
mov
lods
inc
loop
aaa
call
dec
mov
push
jg
xchg
mov
int3
movsl
xchg
xchg
pop
sub
push
icebp
bound
push
imul
fisubs
pop
mulb
popf
and
mov
repnz
ljmp
mov
or
or
loope
lahf
xlat
or
dec
and
pop
fstps
sti
xchg
push
and
mov
das
fidivrl
mov
cltd
adc
es
test
mov
test
pop
sub
mov
sahf
xor
int3
lods
mov
and
adc
add
or
jp
and
cltd
mov
adc
mov
mov
shlb
push
mov
jo
lcall
cmp
bound
pusha
dec
ret
stos
lret
mov
rcl
rcrl
fistl
sbb
mov
nop
dec
into
ds
add
inc
sub
sub
sub
arpl
cmpsl
dec
leave
xor
sahf
out
cmp
mul
cmp
dec
cmp
push
rep
testl
jbe
rcll
mov
mov
pushf
or
push
xchg
jp
loop
push
lods
sarb
and
test
ret
test
inc
lods
mov
mov
and
ljmp
lock
pushf
push
mov
pop
sahf
test
int
ja
bound
or
fnstcw
or
xchg
cmc
shll
test
cld
cmp
lea
loopne
and
movsl
ret
call
or
push
push
inc
pusha
sub
fwait
insl
imul
mov
adc
inc
mov
shlb
sbb
xor
out
cmp
outsl
hlt
out
int
popa
fs
popf
and
icebp
pop
sub
ja
out
push
jg
lahf
mov
bound
inc
or
dec
fldt
sbb
cltd
mov
jno
dec
das
lds
cmp
das
clc
es
mov
mov
popf
lods
leave
das
scas
push
add
mov
jnp
outsl
xchg
movsl
icebp
adc
pop
insl
ja
dec
push
push
popf
movb
icebp
jae
mov
nop
out
pop
mov
xorl
xchg
push
stos
jecxz
jbe
push
jecxz
xlat
mov
cmp
mov
or
sub
mov
pop
mov
mov
imul
lods
jo
bound
sub
in
dec
lods
shr
cmpsb
stos
arpl
enter
in
imul
adc
clc
sbb
scas
imul
sbb
push
and
sub
jmp
lahf
cmpsl
cmpb
mov
or
sub
dec
loopne
jno
decl
push
mov
pop
sbb
adc
cmp
mov
cmp
out
sbb
dec
dec
adc
call
mov
jp
ljmp
pusha
ret
aam
xor
mov
adc
mov
inc
cmp
aad
sbb
mov
add
inc
loope
inc
es
add
data16
enter
cmpsl
pusha
jecxz
fimuls
pop
into
sbb
aas
xor
sub
cmp
ja
xor
adc
lcall
mov
addb
inc
idivb
mov
pop
popa
aas
fldcw
ret
dec
jp
sub
sarb
cld
push
lds
gs
movb
xor
mov
xchg
mov
repnz
pushf
loop
test
pop
ret
cmp
push
lret
add
jno
gs
inc
pushf
inc
mov
loope
aas
jne
mov
lret
das
add
movsb
inc
imul
in
lea
mov
and
mov
jecxz
fcompl
cli
add
jecxz
std
inc
imul
roll
addr16
push
mov
push
mov
arpl
ljmp
mov
mov
dec
jae
sub
jp
popa
test
ret
and
sbb
adc
fs
jg
adc
mov
mov
or
sub
loopne
mov
adc
jno
pop
and
stos
out
outsl
aaa
daa
mov
movb
adc
aaa
cmpsb
pop
cs
inc
js
dec
fbstp
mov
lret
repnz
je
cmp
jbe
xor
push
push
adc
mov
pop
cli
add
gs
xor
mov
adc
fs
pop
daa
cld
scas
mov
js
insb
pop
fs
adc
rcrl
lret
je
mov
shlb
jo
jg
push
jns
movsb
push
lahf
and
and
mov
out
ret
and
sub
inc
ljmp
xchg
enter
and
mov
std
add
mov
push
inc
cwtl
or
fwait
test
mulb
outsl
push
jns
mov
dec
subl
test
loopne
stc
mov
mul
pushf
sbb
cmpsw
outsb
sub
outsb
int
ja
mov
adc
push
xchg
cmpsb
gs
mov
jge
leave
lods
mov
in
ljmp
sub
add
cs
sahf
out
push
into
rcll
xchg
test
cld
add
sbb
cltd
sbb
test
jge
mov
sbb
aas
dec
mov
or
or
xor
aaa
leave
bnd
inc
aas
dec
fldcw
sbb
and
js
popa
insl
inc
jns
test
mov
lods
pop
mov
stos
xor
mov
dec
andl
xchg
fstl
clc
cmp
add
mov
mov
aas
sub
into
clc
cli
push
frstor
push
testl
add
out
gs
iret
xchg
pop
insb
adc
aad
fbld
into
sub
out
aam
cmpsl
pop
nop
push
add
sbb
clc
je
popf
movsl
xchg
sbb
pop
stos
enter
pushf
addr16
lret
daa
cltd
jmp
and
or
add
fstl
and
sbb
jns
sub
call
notl
test
int
clc
stos
adc
add
clc
scas
mov
adc
mov
shrb
pop
mov
cmp
idivl
or
pop
fdivrl
mov
and
jns
mov
movsl
cmp
mov
mov
rolb
mov
lock
fsubp
addr16
dec
mov
jecxz
xchg
jl
xor
push
les
cs
sbb
call
xchg
daa
jnp
push
imul
ret
into
outsl
jae
mov
dec
mov
sub
push
subl
movsb
mov
pop
shrb
mov
les
sbb
xor
ss
inc
adc
add
je
mov
fidivl
xor
stos
outsb
pop
insl
mov
xor
pusha
mov
cmp
add
cmp
pop
mov
push
test
inc
rorl
lock
sub
push
jecxz
mov
lock
js
lahf
mov
addr16
lcall
leave
pop
mov
in
dec
outsl
bnd
hlt
pop
dec
imul
repz
cli
cltd
repz
or
lret
sbb
loope
adc
outsb
mov
push
int
fidivl
push
fsts
dec
outsb
imul
iret
push
sarb
mov
or
rorl
out
cmp
test
push
aas
sti
popf
notb
push
mov
inc
adc
mov
mov
int
repz
orb
int3
or
cmp
imul
lods
shll
cli
sub
repz
aad
sbb
mov
jl
adc
pop
xor
cmp
sub
inc
les
xchg
lods
xlat
and
mov
xor
stos
mov
dec
add
mov
xchg
mov
mov
jnp
data16
repz
mov
ret
push
stos
jae
cmpsb
fnsave
mov
fs
sbb
es
ds
adc
jb
fisttps
inc
jbe
cmp
imul
lret
inc
shl
mov
pop
lret
pop
addr16
inc
fbstp
iret
or
jmp
fsubrs
sbb
xor
shll
in
cmp
xor
push
mov
inc
int
mov
call
mov
add
popa
stc
and
aaa
idivb
pop
or
pushf
aam
add
inc
mov
push
add
adc
out
mov
mov
pop
or
pop
adc
dec
rcl
pop
jmp
pop
sbbl
and
add
jmp
es
stc
imul
jb
cmp
or
loop
cmpsl
jb
sarl
andl
pop
inc
cmp
gs
div
dec
cmp
jae
hlt
sub
ss
lahf
clc
sub
adc
rolb
mov
movd
push
cld
fwait
lcall
fildl
pusha
pop
ja
stc
xchg
imul
pop
ljmp
movsl
push
dec
daa
jnp
call
shlb
inc
jmp
fs
cli
xchg
jmp
jmp
push
das
pop
mov
lret
int
inc
and
or
dec
xor
sub
sarb
shll
hlt
jecxz
pop
shl
xchg
or
cmpsb
push
mov
cmpsl
loopne
pop
lods
jge
fistpll
int
adc
ret
fnstenv
sub
fsubrs
cs
push
cmp
mov
stos
fsubs
xor
jmp
dec
imul
je
mov
or
pop
jnp
add
sbb
cmc
fiadds
insb
popf
push
movd
mov
nop
cld
mov
cmp
test
sub
mov
out
into
push
popa
sub
inc
pop
jp
es
jg
ljmp
iret
inc
dec
cmp
mov
aam
xor
xchg
push
enter
mov
push
xchg
scas
pop
xchg
je
test
pop
push
jle
mov
sti
out
loopne
lea
mov
mov
xchg
imul
popf
cwtl
push
pop
sub
inc
inc
rcl
lods
popf
int3
jge
loop
dec
xlat
mov
inc
mov
inc
cld
pop
bound
push
insl
out
call
and
ljmp
xor
push
filds
rolb
daa
dec
mov
rcl
aaa
popf
into
pop
enter
mulw
and
xchg
push
fists
mov
test
addr16
test
mov
or
rorb
dec
fidivs
je
mov
mov
mov
mov
aam
pop
aaa
mov
mov
mov
mov
sbbl
lcall
adc
and
sbb
xchg
sbb
mov
inc
sub
or
das
shl
into
cld
mov
xlat
imull
xor
cmp
popf
std
adc
xchg
scas
jle
cltd
in
in
sarb
mov
and
add
inc
mov
stos
aaa
repnz
daa
lods
andl
lret
xchg
lds
xchg
or
push
scas
rsm
jne
pop
test
ljmp
add
out
jmp
icebp
imul
pop
mov
fadds
loop
je
sub
push
mov
jmp
insl
mov
xchg
xlat
loope
dec
outsl
and
xchg
lods
std
jae
adc
xor
fistpl
push
lahf
pushf
in
fmul
pop
xchg
out
sub
out
xlat
test
lcall
je
pop
inc
mov
jl
mov
out
mov
lods
das
setne
pop
aaa
xchg
shlb
aam
ds
or
jbe
jnp
add
fsubrs
push
stc
push
test
cmp
test
lods
pop
jge
shlb
aad
in
xchg
int
aas
lea
and
mov
icebp
outsb
rorb
xchg
push
dec
mov
pop
sbb
dec
add
jbe
movsl
in
pusha
pop
xchg
add
jb
ficomps
sub
sub
and
mov
or
push
jb
vaddsubps
movsl
xorl
mov
sahf
negb
pusha
cld
fwait
dec
inc
inc
cmc
int
ljmp
das
aad
sub
xchg
adcb
or
jmp
xor
out
adc
inc
sub
mov
add
mov
ret
cli
and
push
push
add
mov
inc
jge
sbb
mov
decb
sub
mov
jns
sub
cld
push
push
or
mov
mov
das
in
call
or
rol
push
xor
jae
rcrb
pop
mov
mov
arpl
hlt
adcl
cltd
inc
je
jmp
inc
arpl
or
outsb
mov
icebp
cmpsl
or
test
lea
xchg
mov
mov
shrl
lea
jmp
mov
sbb
jo
push
sub
mov
mov
jo
mov
icebp
xor
push
orl
addr16
test
mov
popa
ret
lcall
cmc
mov
fsubs
das
pop
mov
adc
jns
ficoms
jmp
xchg
popf
xor
mov
das
xor
xor
out
hlt
movsl
icebp
mov
inc
and
sbb
xor
jbe
mov
adc
jnp
mov
add
pushf
test
push
push
xor
push
icebp
mov
psubb
push
insb
or
outsb
xor
out
fstps
int
leave
mov
jmp
fimuls
iret
pop
push
stos
dec
add
test
inc
pop
add
jae
dec
cltd
xlat
inc
lahf
sub
and
fildll
jbe
fnsave
mov
pop
and
jne
js
xchg
sub
and
sbb
or
cmp
inc
lret
mov
dec
scas
cmc
mov
aam
push
xor
adc
jo
push
bound
jnp
addr16
inc
lea
mov
lret
cmp
sbb
dec
popf
bound
clc
fnstenv
dec
dec
mov
pusha
sbb
sbb
cld
fidivrl
icebp
nop
pop
js
mov
ret
mov
lahf
adc
shlb
lods
shl
fdivrs
adc
addr16
mov
mov
das
in
imul
mov
lock
sti
leave
aaa
dec
daa
out
leave
ss
fisttps
and
adc
push
int
divb
lds
sub
adc
scas
mov
stc
cltd
in
std
aad
sub
jl
mov
mov
push
inc
imul
xchg
xorl
shll
or
int
pop
cmp
in
insb
fldcw
leave
lock
stos
mov
adc
jb
xchg
xchg
iret
mov
test
mov
dec
xlat
rep
movsb
mov
or
add
push
cmp
lret
push
add
mov
lahf
mov
cmp
mov
inc
iret
fadds
add
in
pop
xor
ret
mov
mov
mov
sbb
dec
push
xor
adc
in
mov
test
sbb
popf
nop
inc
mov
xchg
xlat
shrl
repnz
movsb
test
fwait
jp
rcrl
int3
add
mov
sti
mov
push
push
or
mov
xchg
push
inc
adc
in
sbb
scas
test
inc
mov
rcr
sbb
lret
icebp
sub
rcr
push
cli
cmpsl
pop
aaa
lahf
xchg
sarl
sbb
ja
cmp
adc
cmpl
mov
sub
cmc
imul
shll
adc
push
into
ja
ficomps
addr16
xchg
fwait
inc
dec
aaa
insl
inc
lock
xchg
repz
push
stos
gs
dec
cmp
push
pop
addl
cmpsb
ret
jecxz
sahf
ss
lret
fidivs
jle
push
mov
xchg
inc
push
mov
in
mov
test
leave
push
pop
movsb
outsl
cltd
push
mov
lock
cmp
mull
inc
add
sub
decb
xor
and
dec
inc
scas
mov
xor
xor
add
std
cmp
and
das
cld
lock
add
mov
cmp
mov
in
sbb
int
sub
cmp
mov
out
jnp
in
leave
cmp
xor
out
sbb
mov
into
andb
dec
inc
insb
jle
mov
gs
jbe
sbb
adc
cmp
arpl
in
mov
and
mov
mov
push
jmp
dec
inc
pop
mov
loope
scas
popf
mov
mov
pop
xor
mov
adc
stc
fmulp
adcl
cmp
xchg
enter
pop
sbb
mov
sub
jmp
mov
fs
in
loopne
or
push
jmp
adc
push
pop
out
and
fcmovne
sub
and
adc
push
bound
scas
in
add
popf
insl
aaa
sti
lcall
mov
gs
pop
sbbb
ds
pushf
inc
dec
cmpsb
test
and
ds
fadd
xor
sub
nop
lods
cmpsl
push
push
or
scas
fisubrl
scas
or
xor
push
jo
stos
and
fnstsw
rorl
lods
dec
sub
or
sub
xor
fadds
jmp
in
lock
jg
sbb
sarl
nop
cmpl
pop
mov
adc
push
push
pop
mov
pusha
je
adc
ficomps
dec
jecxz
jb
lret
in
out
lds
iret
dec
dec
mov
dec
mov
mov
pop
adc
jmp
mov
gs
push
cli
adc
stc
cs
xchg
aas
jbe
imul
hlt
out
jb
sti
outsb
push
lret
out
cld
mov
mov
push
inc
cwtl
ljmp
push
push
aas
lret
pop
adc
rolb
test
push
sbb
fsubrp
lcall
bound
pop
cld
lcall
pop
mov
sahf
or
in
push
inc
scas
out
inc
sub
push
mov
mov
xchg
cmpb
repnz
or
and
or
lods
lret
hlt
imul
jge
lock
push
test
fwait
pop
or
mov
mov
mov
mov
popa
xor
test
aas
sub
into
xchg
mov
push
dec
jle
cmp
leave
mov
aam
ret
dec
xor
rep
js
and
mov
mov
pop
fiaddl
xchg
xlat
adc
cmc
movsl
push
cmp
xor
js
pushf
pop
cli
hlt
test
cwtl
dec
pop
ret
gs
fwait
jns
jo
push
push
xor
orl
out
mov
sub
dec
repnz
ret
aad
add
cmp
arpl
pop
cmpsl
xchg
mov
dec
xchg
out
je
adc
cmp
sub
fs
xor
mov
sbb
dec
or
fisttpl
repz
lahf
mov
into
std
pop
fwait
push
mov
aas
ds
pop
aam
sub
and
mov
xchg
or
rcrl
push
dec
push
xor
cmpl
aas
aaa
dec
push
xor
xchg
lock
fwait
int
sub
stc
adc
inc
roll
mov
jae
dec
ret
cli
sbb
dec
pop
cli
push
dec
jg
jmp
in
mov
xchg
shlb
push
jbe
mov
xchg
into
lret
sbb
push
addl
adc
xchg
dec
les
out
mov
movl
cmp
xchg
cmp
mov
aam
cli
push
out
jns
icebp
mov
xor
ffreep
lcall
loopne
inc
or
lret
pop
mov
adcb
ds
cmp
xchg
aas
jecxz
lock
dec
mov
pushf
enter
out
mov
mov
adc
std
push
pop
inc
xchg
decb
push
pusha
mov
xchg
sub
xor
out
xchg
dec
xor
inc
xchg
leave
push
xor
bound
mov
outsb
xchg
arpl
sub
shl
sub
mov
xchg
test
fisttps
cmpsb
les
lahf
shl
jp
sbb
mov
mov
and
nop
add
cmp
mov
sahf
dec
push
sbb
xor
mov
fisubs
aam
and
test
out
sti
mov
sbb
lret
mov
xchg
pop
jmp
mov
pop
lret
lret
mov
and
outsb
gs
mov
gs
test
mov
cmp
repz
mov
dec
jge
add
pop
jecxz
sahf
subb
dec
dec
dec
lods
scas
in
addr16
xchg
movsl
ret
jle
mov
dec
cmp
pop
mov
sahf
jne
inc
repnz
ljmp
in
lret
pop
dec
popf
mov
fidivrs
ja
push
add
mov
lea
idivl
inc
xchg
dec
sub
pop
shrb
aaa
mov
sub
jmp
inc
add
pusha
cmp
ja
inc
lcall
repnz
daa
adc
sbb
lret
insb
stc
xor
cmp
xchg
inc
dec
pop
jbe
mov
sbb
mov
push
leave
stos
inc
xor
xchg
dec
call
mov
xchg
jns
push
push
and
mov
jbe
cmpsl
outsl
sbb
xlat
mov
stos
es
xchg
enter
dec
inc
test
jnp
xchg
or
jl
jecxz
cmpl
clc
and
sbb
ret
stc
outsl
mov
fisubrs
sub
add
rolb
insl
sbb
sbb
clc
mov
xchg
cmc
adc
mov
lahf
inc
stc
add
xor
cltd
bound
lahf
sub
les
dec
pop
pop
adc
shrl
and
lods
push
enter
addr16
mov
sub
subl
fcomps
ret
jp
movsl
ds
inc
into
xor
cmp
adc
push
inc
jp
push
cmp
jl
pop
test
jno
in
jle
and
or
xor
sbb
adc
shll
lds
jnp
or
or
sbbl
jl
add
add
adc
imul
lret
xchg
iret
jae
pop
jae
sub
movsl
mov
aad
dec
xchg
xchg
add
or
daa
xor
mul
mov
div
lods
sub
push
decl
movsl
jns
push
push
lcall
mov
dec
xor
sbb
cmp
sbb
pop
pop
add
push
xchg
mov
jl
mov
push
js
pop
arpl
cli
xchg
jmp
int
gs
pop
and
sbb
xchg
push
add
ss
clc
adc
in
pusha
test
fwait
jnp
bnd
or
leave
dec
outsl
inc
outsb
push
rorb
es
xchg
cli
jp
nop
ljmp
iret
stc
push
into
lds
cmp
mov
add
neg
xor
push
xor
or
cwtl
negl
imul
aad
jg
outsb
fiadds
out
in
cmp
ret
out
cmp
add
push
inc
sbb
lods
ficompl
push
stos
pmullw
out
rcrb
sub
cmp
xlat
cmc
jo
sub
lea
aas
pop
jne
dec
call
stc
aaa
fsubrs
and
arpl
dec
sbb
xlat
mov
inc
pop
pop
sbb
test
xor
or
xor
pushf
xchg
push
adc
cmp
jb
sti
loop
movsl
pusha
push
out
lret
and
decb
dec
jp
mov
mov
mov
cs
out
imul
cwtl
jnp
and
inc
stc
and
lret
xchg
andb
pop
aaa
call
and
sub
jae
jo
xchg
lcall
lret
sahf
mov
xchg
pop
sbb
insb
mov
outsl
fimull
shll
push
fbld
je
shll
mov
xchg
mov
in
cmpsl
cs
and
mov
imul
insl
aas
into
push
fisubrl
mov
cld
dec
mov
scas
sub
or
xchg
mov
and
pop
adc
cmp
mov
pop
xchg
out
xchg
jno
dec
movsl
push
dec
gs
jno
lcall
xor
add
mov
sbb
out
fdivl
push
xor
add
loopne
pop
cmp
std
pop
je
fs
loopne
and
mov
add
pop
push
push
aaa
out
daa
xlat
cmp
adc
or
jbe
mov
xor
sahf
or
sub
or
in
mov
arpl
fwait
roll
dec
test
mov
and
jg
movsl
cmp
lock
or
cwtl
dec
mov
aad
fwait
xlat
adc
test
jo
testb
mov
mov
vunpckhps
pop
sbb
mov
jge
dec
mov
js
sub
pop
loopne
roll
loope
das
loope
pop
mov
js
icebp
repnz
cmp
fstpl
push
pop
sub
mov
and
lret
aad
mov
inc
popf
mov
inc
sub
je
icebp
fisubrs
jo
cmp
lret
jo
cmp
mov
scas
dec
rcl
rol
jo
xchg
adc
int
popf
adc
mov
shrl
pop
imul
enter
scas
push
in
jo
fdiv
sbb
cmp
pop
rcl
in
mov
dec
sub
add
ja
clc
xchg
pushf
pop
pusha
cmp
and
xrstors
cmp
cmp
hlt
adc
adc
or
lods
xor
push
pop
mov
pop
fcmovbe
xor
or
fdivrs
push
xchg
sarl
push
mov
adc
and
addr16
out
nop
jb
xor
mov
addb
lcall
and
dec
cmp
dec
cmp
jl
adcb
adc
add
dec
cltd
add
lret
mov
ss
aad
es
fnsave
cmp
push
xor
xor
jge
pushf
clc
out
pusha
jle
loop
adcb
xchg
jle
insl
lods
mov
cmpsl
stc
lods
xor
lahf
lds
xchg
jno
mov
mov
push
in
movsb
out
rcrb
inc
add
jmp
xchg
add
cmpsb
jle
fidivs
cmpsb
aad
les
jecxz
out
mov
cmpsb
aas
push
add
call
add
cmp
pop
push
and
pushf
jg
add
and
shrl
xchg
lahf
push
add
sub
notl
push
adc
or
pop
pop
jg
adc
pusha
push
push
xorl
xor
std
imul
cs
and
sti
push
push
push
jno
jecxz
jns
xchg
leave
test
mov
dec
in
xchg
popf
dec
callw
xor
sarb
or
loop
xchg
dec
sub
xor
in
popa
push
lcall
inc
sbb
lcall
out
cmp
insl
adc
sub
mov
iret
pop
and
addr16
dec
adc
pop
mov
or
and
or
jecxz
sbb
and
add
data16
stos
aas
pop
pop
cmp
dec
leave
dec
cmp
iret
mov
bts
fbstp
insl
or
add
or
push
mov
mov
mov
and
loope
fistpl
or
rep
or
leave
or
fdivs
mov
pop
mov
addl
orb
pop
mov
js
jl
jbe
mov
scas
out
xorl
daa
push
inc
sbb
scas
in
lret
out
iret
cmc
arpl
sahf
push
repnz
xor
loopne
sbb
icebp
shrb
aad
stos
mov
or
mov
cli
xchg
adc
mov
pusha
movsb
les
cld
popa
movsl
cmp
lea
pop
pop
xchg
scas
pop
psrlq
fsubl
fldt
cmpsl
inc
sahf
cld
repz
dec
xor
or
mov
icebp
jb
add
jl
sbbl
int3
push
xchg
cmc
call
test
mov
lret
sub
ret
inc
iret
push
gs
jne
cmp
testl
jnp
imul
stc
lock
sbb
incl
adc
mov
xchg
dec
and
xchg
cmc
xchg
pusha
dec
cmp
adc
test
in
orl
xchg
sub
movsl
stos
test
jp
push
cmp
shll
js
inc
dec
adcb
insl
icebp
mov
pop
pop
and
inc
push
push
jge
mov
pop
xchg
outsl
testb
inc
push
les
loope
pop
cmp
stos
aas
inc
xchg
xchg
fisttpl
daa
in
adc
addr16
dec
dec
xor
cwtl
sub
outsb
pop
jns
jb
hlt
push
sbb
es
or
push
imul
cwtl
mov
iret
pop
and
xlat
cmp
xor
out
xlat
out
lahf
arpl
out
pop
popa
repz
jae
and
in
adc
cltd
vcmpsd
cmp
pop
mov
pop
cltd
xor
in
adc
test
stos
stos
jl
mov
inc
rcr
xor
call
cld
lock
inc
push
icebp
adc
in
add
scas
jns
cmp
movsb
mov
cmp
cmp
gs
sub
popa
and
dec
inc
mov
aas
lods
mov
dec
stc
jae
clc
insb
sub
push
or
push
scas
fsts
cwtl
mov
mov
cmp
ss
sub
xor
jae
int
mov
les
xlat
stos
jb
push
aas
xchg
xchg
mov
call
aas
inc
dec
fiaddl
mov
in
lock
iret
mov
pop
adc
jb
rcrl
dec
in
imul
imul
sbb
dec
rcrl
js
xor
enter
push
push
into
push
push
lret
call
mov
testl
aam
pop
xchg
dec
mov
sub
cmp
mov
sub
and
cmp
mov
fldcw
iret
int
cmp
test
mov
add
movb
mov
aas
std
mov
inc
lret
xchg
pop
sbbl
sbb
ja
xlat
repnz
loop
out
xor
into
xor
sub
outsl
cmp
adc
repz
mulb
scas
into
or
sbb
adc
out
sub
test
jo
inc
pop
in
pop
mov
out
stos
cmpsb
sbb
jecxz
leave
sahf
aaa
dec
adc
adc
pop
ljmp
outsb
cmpsl
pop
lds
pop
xchg
sti
clc
and
sub
dec
mov
xchg
pop
cltd
mov
inc
inc
ljmp
mov
xchg
mov
sbb
xchg
and
ljmp
mov
lret
mov
fsubrl
and
and
scas
les
add
outsb
test
mov
mov
sub
scas
loopne
jl
adc
pop
xchg
cmp
std
aaa
js
jecxz
popa
xor
mov
icebp
xchg
ja
stc
mov
jg
in
sbb
stos
mov
push
or
je
das
mov
shl
cld
mov
call
or
gs
icebp
xchg
xor
and
ret
inc
out
add
aam
out
push
mov
out
cmp
mov
stos
cld
push
ja
cmp
sarl
inc
aam
loopne
mov
test
xor
push
jecxz
xchg
pop
add
push
cmp
cmc
xchg
push
jg
repz
jg
incb
jp
arpl
das
mov
js
outsl
data16
mov
popa
xchg
push
cmp
xor
je
test
test
push
push
movsl
push
mov
scas
cmpsb
cld
adc
and
push
inc
call
and
adc
sbb
testb
sahf
inc
sbb
test
cmp
jmp
jg
xchg
xor
cld
gs
inc
dec
sbb
mov
adc
xchg
jne
jge
mov
adc
lea
xchg
add
rcr
sbb
jmp
fistpl
ret
pushf
add
pop
sbb
fldcw
pushf
or
loope
fs
bound
dec
lods
bound
sbb
xor
int
cwtl
call
jo
nop
inc
dec
jnp
xchg
add
xchg
leave
jnp
fstl
jg
mov
xchg
dec
jp
adc
fnstenv
jl
push
pop
adc
pop
lods
push
call
clc
xchg
sub
cmp
sbb
xor
mov
or
dec
mov
mov
out
or
jbe
loope
xchg
imul
imul
or
jae
push
aaa
adcb
mov
push
xor
pop
cli
leave
fdivrs
and
jb
repz
loopne
scas
sbb
cmp
repz
jecxz
push
stos
cmp
sub
pop
pusha
fs
push
jmp
repz
pop
call
mov
mov
push
aad
je
push
aam
sarb
xlat
stos
or
int
stos
arpl
pop
aad
sbb
xchg
add
inc
out
and
adc
adc
test
out
scas
out
dec
andb
push
mov
cli
aam
sub
jge
push
sbb
cmp
rcr
and
mov
jg
in
xchg
call
add
shll
popf
out
lahf
dec
cmp
mov
ds
jecxz
ret
test
cs
inc
and
pop
or
insb
scas
mov
std
in
adc
inc
test
jg
sub
mov
mov
xorb
mov
cmp
or
pusha
push
repz
pop
movsb
push
jbe
stc
inc
gs
scas
cmp
cmc
pop
cmpsb
hlt
sar
loopne
js
cmc
xor
xchg
cmp
xchg
dec
out
dec
inc
sub
pop
negb
in
mov
and
push
fistl
push
movups
mov
mov
cli
aas
sbb
cwtl
push
jo
enter
mov
mov
lcall
outsb
mov
pop
int3
fldl
add
fstpl
adc
or
push
inc
jns
mov
push
pop
lahf
enter
mov
ret
out
test
pop
mov
ret
les
xchg
in
push
jne
out
inc
xor
jo
fwait
arpl
leave
push
jg
add
and
cmp
xor
mov
add
fidivl
aas
ja
dec
hlt
dec
pushf
jb
xchg
inc
inc
mov
cwtl
jmp
scas
dec
orl
mov
leave
or
test
mov
add
aam
pop
imul
mov
fimull
mov
mov
sbb
repz
mov
jle
int3
fisubs
insl
jns
add
mov
mov
out
pop
daa
jno
outsl
pushf
add
pop
sbb
fs
dec
lods
dec
cmpsl
dec
fistpl
xchg
out
and
addl
sub
inc
cwtl
cmp
inc
dec
push
aas
out
pop
aaa
mov
mov
movsl
or
rcrl
mov
push
jns
pop
ds
jbe
xchg
je
bound
add
neg
or
pop
in
outsl
add
mov
idiv
jmp
aam
sub
cmp
inc
ljmp
vrcpps
insb
push
and
clc
pop
bound
dec
jns
pushf
aas
shr
enter
mov
inc
movsl
or
inc
fidivl
and
incl
fincstp
push
jge
sbb
adc
call
jbe
fdivl
xchg
or
aad
imul
push
cmp
or
nop
mov
sub
xor
dec
jle
std
cmp
stc
jno
movsl
add
mov
or
dec
mov
push
xor
loope
movsl
pop
sar
adc
mov
mov
jns
iret
cmp
call
push
cltd
lahf
sub
es
or
push
mov
mov
shll
data16
outsl
shrl
int3
add
outsl
jle
inc
inc
loop
pushf
pushf
adc
jb
and
movl
ret
pop
sbb
inc
cmp
dec
sub
out
mov
lods
aad
fwait
js
loopne,pt
and
xlat
imul
mov
adc
xchg
pop
ja
out
pop
or
push
push
jbe
lock
or
test
dec
fdivl
mov
fnsave
dec
stos
pop
mov
mov
ror
outsb
or
icebp
fmuls
fmulp
jb
adc
pusha
mov
push
xchg
cmc
divb
jp
gs
ja
icebp
fwait
fstps
push
sbb
inc
nop
cmp
leave
int3
aad
lahf
xchg
mov
cmc
fsubp
jnp
dec
in
push
lea
add
add
leave
add
cmp
mov
gs
xor
cmp
inc
pushf
out
xchg
jbe
pop
push
ja
inc
int
jae
notb
inc
jb
sbb
shlb
pop
xchg
adc
test
mov
cltd
pop
or
mov
add
cmpsb
les
cmpsb
push
test
mov
or
ficomps
outsl
scas
sti
addr16
sub
hlt
pop
sub
inc
pop
dec
sbb
lret
and
jne
sbb
fidivl
loope
mov
sbb
cmc
test
rol
or
dec
rcrb
adc
dec
mov
repnz
icebp
xchg
jno
inc
sbb
dec
cmpsb
sbbl
pop
out
mov
int3
jle
mov
test
and
mov
nop
clc
nop
jp
mov
jno
enter
out
mov
ljmp
adc
lock
mov
mov
sti
dec
enterw
aam
add
jecxz
pop
cmp
and
or
jp
aad
jge
into
addl
shl
mov
sub
xchg
lods
pop
mov
sub
pop
mov
pushf
test
inc
mov
mov
test
jae
pop
lods
repnz
jnp
pushf
pxor
and
mov
aaa
iret
into
outsl
pop
mov
cmp
push
dec
rol
stos
cli
push
cmp
js
add
int
insb
test
test
repnz
mov
clc
sbb
xor
jbe
insl
xlat
jno
repz
mov
decb
push
out
call
xor
xor
imul
add
inc
cmp
jmp
stc
add
lods
mov
mov
xchg
push
loopne
les
mov
es
lcall
lcall
or
ret
xor
mov
mov
leave
and
scas
sbb
scas
ret
iret
loopne
jp
mov
cmc
push
xor
ret
xlat
movl
aaa
pop
xor
push
das
mov
and
cmp
add
insb
pop
dec
insb
adc
inc
fstpt
les
test
mov
push
push
movsb
rcr
ret
jmp
lods
lret
outsl
add
ret
xor
mov
jp
pop
lret
hlt
js
push
test
sti
jl
add
leave
sub
mov
dec
sbb
fnstsw
xor
sahf
aad
aad
inc
or
icebp
jne
scas
aaa
in
add
stc
mov
in
jl
aaa
leave
lds
inc
inc
inc
mov
enter
add
js
xchg
lods
mov
push
pop
out
push
in
movsl
push
psllq
ret
fimuls
cld
mov
hlt
test
add
jno
and
pushf
mov
mov
pushf
push
add
inc
or
mov
inc
push
iret
rol
sub
ljmp
jae
insb
jb
xor
iret
jmp
into
inc
scas
mov
jle
adc
mov
mov
jge
ljmp
adc
mov
icebp
lods
mov
jae
mov
es
das
in
out
aad
hlt
mov
rcrl
push
jge
sub
xchg
ds
icebp
std
cmp
inc
mov
push
insb
xlat
mov
jecxz
lock
inc
mov
adc
scas
add
cmpl
call
iret
ret
jl
outsb
inc
jg
adc
xor
dec
mov
out
xchg
rclb
mov
ja
ja
mov
es
jno
out
int3
bound
fsubl
subb
cs
sbb
pushf
test
mov
xor
ret
mov
ja
mov
lret
pop
lods
lods
sahf
dec
in
call
stos
daa
jge
sbb
icebp
add
outsl
lret
lods
loope
xchg
xlat
cmc
inc
inc
jae
and
fsubs
daa
mul
cmp
ffree
into
sub
scas
fidivrs
mov
sti
shrl
cmp
mov
push
add
lret
mov
imul
and
xchg
and
jg
stos
sbb
mov
test
inc
and
in
sbb
cltd
push
or
pusha
enter
push
jo
add
sbb
mov
test
stc
mov
cltd
push
inc
add
es
mov
js
xchg
or
or
or
fwait
in
ret
ret
push
in
add
sti
stos
pop
or
cmp
mov
cmp
push
std
mov
mov
jns
inc
xchg
push
adc
stos
int3
inc
jg
jne
clc
loope
mov
add
imul
adc
mov
jo
push
icebp
mov
test
mov
adc
aam
insb
xchg
push
xchg
arpl
jmp
jns
add
incl
outsl
mov
outsl
and
jno
sub
xor
js
mov
sub
jl
xlat
loopne
xor
inc
mov
fmull
mov
adc
mov
cmpb
xchg
idivb
sbb
sarb
aad
int3
mov
lret
or
hlt
pop
into
movsl
cltd
pop
imul
loope
in
sarl
mov
sub
fldcw
mov
ja
cmp
jno
jge
test
ret
arpl
xchg
inc
daa
pop
pop
or
inc
push
popl
repnz
daa
fcoml
xor
lods
out
pop
sahf
out
out
adc
jg
xchg
pop
sbb
push
fildll
test
pop
mov
xor
aad
in
lods
and
push
xchg
push
inc
jno
sub
les
mov
lods
lahf
cwtl
jnp
int
mov
push
push
enter
xchg
pop
jle
dec
orb
int
adc
testl
pop
stos
arpl
out
sub
jno
mov
adc
pop
jle
lock
cltd
adc
xlat
leave
cmp
ja
pop
xlat
xlat
imul
popf
sbb
or
xor
test
aam
and
xchg
mov
mov
add
lret
into
sbb
inc
xchg
in
mov
popf
push
dec
lock
jecxz
push
test
cmp
cmp
and
out
pop
pop
dec
aas
dec
inc
dec
push
out
xlat
call
push
scas
mov
out
into
ds
inc
imul
notb
push
fisubs
mov
jl
adc
push
fisttps
movsl
fstpl
jbe
scas
or
pushf
pop
inc
fcompl
popf
or
dec
fisttps
dec
jns
in
sub
lea
cmp
jns
out
sbb
stos
andb
scas
mov
jmp
xor
sbb
push
out
cmp
jecxz
sbb
ret
push
xchg
adcl
mov
pusha
in
wrmsr
and
jno
insb
cltd
test
cli
inc
push
insb
mov
jns
xlat
xor
fsubs
int
arpl
inc
pop
add
adc
pop
jne
sahf
sbb
rorl
sub
popf
es
inc
leave
or
sub
arpl
push
and
push
es
mov
mov
add
add
mov
testl
adcb
and
push
out
pop
arpl
lcall
pop
xchg
cwtl
xchg
cwtl
sbb
mov
push
in
icebp
int
cmp
sbb
xchg
dec
adc
jge
cmp
xchg
cltd
adc
and
add
in
mov
mov
and
scas
mov
jecxz
out
testl
mov
in
in
cmp
sti
mov
mov
or
mov
xchg
mov
rorb
negl
adc
cmp
fcom
in
xor
push
dec
mov
mov
pop
dec
mov
mov
loopne
scas
cli
push
mov
and
ljmp
popf
fadds
cwtl
push
movsl
mov
add
movsl
dec
mov
push
or
xor
ret
xor
push
pop
loop
mov
out
subl
dec
and
mov
test
mov
stos
or
adc
outsl
out
stc
xor
push
sbb
pop
js
pusha
mov
lds
cmpl
pop
ficomps
call
ja
cmp
out
adc
xchg
notb
sub
jb
das
sbb
adc
test
divb
addr16
xchg
test
and
insl
adc
popf
add
lea
sbb
mov
fidivl
sbb
push
xchg
bound
or
push
or
leave
pop
mov
push
daa
int3
cmpsl
inc
push
xchg
sahf
imul
ljmp
sbb
jo
out
push
stos
mov
mov
or
cltd
jbe
lret
fstpt
lock
dec
inc
push
mov
push
rcrl
sbb
mov
jns
das
in
xor
push
aas
aam
outsl
add
cmp
fstps
pop
xchg
xchg
lds
xchg
arpl
fcmovb
jl
dec
adc
leave
push
inc
test
je
and
ljmp
ds
adc
push
xor
dec
cmp
mov
cmp
and
xor
add
fisttpl
popa
test
lods
pushl
mov
pop
xchg
cmp
pop
mov
cmpsl
int
popa
sub
inc
and
adc
scas
test
push
neg
test
clc
das
je
mov
ficoml
ljmp
outsl
mov
pop
mov
xchg
leave
jecxz
mov
jnp
add
cmc
fisubs
add
pop
movsl
adc
mov
xchg
stos
pop
sbb
mov
cmp
cs
sub
sub
mov
inc
je
and
and
inc
call
fidivl
ret
push
xchg
popf
shlb
and
in
jb
fimuls
or
inc
pop
popa
ss
inc
lods
sbb
dec
inc
sub
dec
xchg
ja
and
insb
mov
stc
popa
inc
idiv
cmp
lret
adc
jecxz
pusha
pop
movsb
add
adc
cmp
jne
xor
je
jmp
pop
pop
ss
mov
add
stos
lahf
push
ror
mov
lcall
or
jg
and
sbb
adc
adc
inc
sbb
mov
xchg
mov
push
cs
push
inc
mov
push
imul
int3
jmp
xchg
int
cmpsb
push
add
sti
sbb
sti
clc
icebp
leave
mov
lcall
test
sbb
cld
xchg
adc
aad
push
inc
jp
insl
test
mov
out
test
pop
xor
and
js
mov
lds
and
fisubrl
sbb
mov
mov
daa
sbb
js
enter
repz
dec
push
outsl
mov
pop
or
dec
popa
mov
int
mov
and
add
lcall
push
sub
cmp
popa
pop
fcoms
sahf
mov
xor
lcall
nop
push
filds
adc
pop
inc
cmp
pop
xchg
sbb
arpl
idivl
jle
and
lcall
dec
pop
ja
adc
jmp
gs
jnp
xchg
dec
out
xorl
rcr
sahf
mov
test
shrb
repnz
xor
mov
in
cltd
call
aaa
es
mov
or
bnd
pop
pushf
sbb
daa
pop
and
mov
lods
lahf
mov
xor
xlat
data16
pop
rdtsc
inc
fldt
out
dec
jl
je
lcall
popa
xlat
movsl
enter
mov
aas
leave
mov
sub
inc
mov
pop
mov
dec
out
push
clc
jmp
add
jg
xor
inc
xor
adc
rorb
push
xor
or
sarl
jecxz
das
mov
out
decb
xor
nop
outsb
loop
ljmp
cltd
jns
outsl
push
scas
adc
xchg
sbb
out
xchg
leave
mov
push
ss
xor
mov
push
int3
pushf
xchg
nop
sub
call
pop
lahf
xor
enter
clc
push
push
adc
xchg
int3
mov
and
or
pop
lods
iret
fs
inc
xor
cwtl
cltd
inc
fiadds
push
ss
sbb
nop
lret
imul
pop
jge
adc
jno
cmp
jecxz
fstp
fdivrp
mov
cmc
out
or
mov
inc
inc
or
cmpsb
into
aaa
lods
push
push
or
lds
lret
add
fcmovnu
sbb
push
dec
mov
arpl
fs
or
fsubr
dec
cmp
dec
mov
ljmp
iret
loopne
or
ja
fsubl
cli
and
mov
xchg
lock
ja
sahf
stos
sbb
call
sbb
dec
fwait
out
jle
out
out
call
mov
sahf
or
xchg
and
enter
dec
test
xor
sbb
dec
enter
pop
xchg
xor
pop
jge
sub
jnp
cmc
mov
gs
iret
mov
dec
pop
ds
outsb
xchg
out
mov
out
sub
mov
sahf
popa
adc
loopne
scas
jmp
pop
loopne
test
jb
sbb
push
loop
and
xchg
dec
insl
add
and
jb
leave
pop
sbb
addr16
cltd
shlb
sub
lcall
jae
ss
xchg
pop
pop
jecxz
pushl
sub
or
loope
mov
test
cmpsl
fmuls
pop
ret
mov
or
js
sbb
mov
xchg
je
dec
inc
mov
lods
mov
cmp
std
les
add
sahf
leave
dec
cmpsb
push
jmp
rcr
in
pop
cmpsl
jo
and
movsl
lret
cmp
push
mov
pop
xchg
mov
jnp,pn
push
add
cmpl
or
cmc
fsts
mov
xlat
mov
js
dec
in
mov
mov
aam
sub
push
adc
mov
nop
push
in
iret
enter
cmpsl
mov
dec
fnstenv
jmp
add
stc
adc
sar
mov
js
or
lret
rorl
inc
jecxz
jmp
cmpsb
aam
xlat
mov
jb
xor
push
xchg
xlat
or
popl
daa
mov
pop
adc
pop
fldln2
lds
jnp
int3
sbb
std
mov
xchg
add
test
inc
leave
mov
adc
inc
mov
loopne
les
jmp
mov
and
push
xor
xor
addr16
add
jb
rcl
cs
dec
and
sub
xchg
xchg
sub
insb
sub
dec
push
in
cli
mov
push
mov
ja
push
arpl
mov
sarb
sbb
or
sahf
pop
and
arpl
sub
add
int
jb
std
jl
xchg
push
mov
test
pop
add
movsl
jle
pop
adc
mov
sub
lds
jb
fsubrs
ret
push
xor
sub
lods
das
push
imul
outsb
shll
adc
push
xor
adc
dec
sbb
lea
je
js
xlat
cld
loopne
arpl
idivb
jecxz
fstpl
lret
push
ret
lea
mov
and
daa
shlb
cli
into
mov
test
or
jae
fldcw
ja
jmp
cmp
je
dec
cli
lods
fmuls
stos
push
cmp
inc
arpl
xor
aas
or
lods
in
in
pop
cmp
mov
andb
push
dec
cmp
shll
dec
bound
fldenv
lret
adc
jae
int
cmp
push
mov
xchg
arpl
sbb
js
sbb
jno
shrb
mov
sub
fisubrl
jp
leave
or
bound
jge
pusha
mov
and
jg
jle
cmpsb
mov
jmp
inc
jb
mov
lret
lods
push
mov
xor
inc
subl
cmp
lcall
sub
stos
add
add
int
cmp
xor
mov
jmp
dec
enter
mov
divl
mov
cmp
sub
mov
mov
lret
and
sbb
push
sbb
xor
shr
cld
test
xchg
add
loope
cltd
call
xchg
cltd
mov
jl
shl
xchg
hlt
scas
daa
push
mov
cmp
insl
test
dec
sbb
cmp
lret
add
jge
add
jmp
aaa
ljmp
jo
fnstenv
imul
mov
sarl
jp
xor
push
out
cmp
loopne
fdivs
xor
loopne
jp
fs
jnp
test
movsl
lods
mov
add
ret
scas
push
sarl
pop
xchg
xchg
lahf
fwait
mov
adc
or
sti
pop
adc
jae
test
lahf
cmp
pop
dec
dec
popf
icebp
add
inc
gs
sete
lcall
pop
adc
mov
pusha
sub
or
rcrb
addr16
inc
inc
cmpsb
jb
insl
sbb
stos
add
arpl
rclb
test
inc
dec
mov
mov
add
jg
push
fldl
sub
dec
fistps
mov
rcrl
xor
mov
movsl
shlb
mov
cltd
cmc
inc
mov
mov
mov
add
inc
fnsave
push
pop
mov
mov
xchg
pop
loop
xchg
sbb
jmp
rcl
in
aad
call
iret
or
sbb
pop
xchg
and
or
stos
stos
loopne
adc
out
cmp
movb
in
pushf
inc
sub
xchg
mov
sub
xchg
inc
test
add
sbb
or
lods
insl
leave
pop
std
add
cvtps2pi
into
pusha
nop
movsl
mov
jb
mov
lods
inc
push
cld
mov
ja
je
jl
cmp
sub
stc
push
rcr
mov
aam
imul
icebp
fsubs
inc
add
sbb
jle
ljmp
pop
ljmp
push
add
push
pop
or
in
mov
cmpsb
mov
pushf
data16
insb
inc
and
jns
cmpsb
inc
data16
add
icebp
lret
insb
adc
xor
jnp
pop
xor
jg
rcrl
scas
mov
ja
jp
add
imul
sub
ret
test
hlt
test
xor
cmp
shr
es
mov
push
out
mov
push
inc
mov
sbb
repz
add
mov
fnstenv
aam
jmp
enter
xchg
outsb
mov
jno
ret
sbb
lcall
hlt
addb
popf
loop
movsl
cltd
iret
xor
repz
clc
dec
push
int3
mov
xchg
pmaxub
popf
jmp
push
push
pop
mov
mov
popf
mov
in
fldt
add
inc
sbbb
dec
cmpsb
sbb
inc
push
dec
xor
xchg
jle
pop
out
imul
ret
mov
or
out
pop
jge
addl
out
cmp
xor
fadds
outsl
cmpsl
imul
mov
add
repz
pushf
xchg
xchg
sbb
cmpsb
leave
push
ja
inc
or
jecxz
movl
imul
movsl
push
jmp
cmpsl
stos
jle
sbb
jb
mov
mov
and
cmp
sbbl
add
jle
cmp
sbb
pushf
mov
movsb
xchg
fcmovb
jmp
data16
push
sar
roll
addr16
sub
clc
inc
cmp
aas
jae
nop
xchg
jo
xor
les
test
dec
lds
adc
dec
scas
pushf
rorl
sub
and
xchg
movaps
jle
sahf
mov
xchg
cmpsl
xchg
push
xor
push
and
sub
inc
rcll
nop
addr16
or
popa
dec
inc
ret
push
sub
pop
dec
cmp
inc
adc
mov
shll
xchg
or
call
outsl
mov
insb
xchg
dec
je
repz
idivl
stos
test
cmp
ret
vmread
lea
add
fldl
test
adc
addb
out
mov
mov
dec
or
addr16
sbb
in
jnp
mov
dec
and
fldl
sbbb
data16
push
enter
aas
sub
outsb
sbb
bound
in
adc
and
js
insb
sbbb
and
popf
pop
scas
inc
xor
mov
mov
insb
jecxz
imul
repnz
dec
test
cmp
fs
test
xchg
push
inc
ret
push
repnz
dec
out
mov
icebp
lea
dec
and
iret
cmp
stc
imul
xor
sbb
outsb
fstpt
shlb
or
ljmp
orb
jne
pop
xor
dec
shlb
popl
jno
or
jl
rol
jle
leave
pop
pusha
nop
leave
fdivl
bound
test
sbb
mov
test
shll
div
adc
cmp
and
adc
jp
clc
mov
add
daa
out
inc
push
lds
add
xchg
mov
rcr
scas
jmp
lahf
dec
jne
jg
cltd
mov
inc
lods
dec
xor
sbb
mov
gs
mov
pop
jg
and
movsb
repnz
cli
jns
dec
lahf
pop
int
cld
pushf
fcoml
pop
jp
push
xchg
cltd
jae
adc
mov
aad
mov
test
cmp
imul
dec
ljmp
aaa
pushf
aad
jnp
pop
push
adc
into
xchg
jp
mov
push
ljmp
pop
incb
std
cmp
test
sbb
add
mov
xchg
or
in
xor
mov
aad
cmp
jecxz
icebp
fcmovnb
shr
ss
mov
fildll
push
iret
icebp
les
mov
scas
popf
int3
mov
loopne
in
les
dec
adc
shlb
xchg
xor
cs
pushf
mov
cmp
mov
mov
rol
stc
imul
xchg
aad
jne
sbb
test
leave
in
loopne
inc
rorb
jae
pop
jle
sbb
dec
mov
mov
into
scas
shr
fistps
leave
cmp
loope
call
sarl
sub
and
orl
and
inc
push
cmp
adc
xor
xchg
cmp
push
mov
mov
and
mov
pop
pop
cmc
inc
adc
aam
pop
sub
out
in
imul
cmpsb
jg
test
jnp
hlt
cmc
es
call
sub
sahf
movsl
jle
cmp
ret
stc
enter
sub
sbb
inc
sahf
or
mov
std
mov
cli
sub
ficomps
and
jmp
lds
mov
aaa
pop
sub
aas
es
movups
dec
push
mov
inc
or
mov
cmp
sbb
pushf
das
inc
jae
clc
mov
bound
mov
repz
out
mov
cmp
jecxz
adc
pslld
inc
popf
cmpsl
or
nop
js
insb
mov
cmp
cmp
scas
xchg
add
fbld
negl
in
orb
mov
xor
inc
fisubrl
push
jp
cmp
push
xchg
fs
aad
lds
adc
sarl
push
mov
push
andl
ror
nop
xchg
xchg
repnz
cmpl
lahf
or
sub
dec
mov
adc
daa
jecxz
inc
ljmp
out
decl
or
jne
jo
sbb
test
pop
inc
popf
xchg
push
out
pusha
and
adc
dec
popa
jl
inc
movsl
xchg
lds
idiv
adc
lret
mov
jae
mov
mov
add
data16
xchg
jns
xlat
sbbl
insl
test
fnstenv
push
fprem
flds
cli
and
fdivrl
jmp
xchg
call
arpl
inc
ret
lods
fidivrl
mov
inc
dec
stos
enter
cld
push
stc
arpl
movsl
call
subl
push
xchg
add
or
cmp
pop
mov
nop
fcom
test
xor
sbb
dec
push
mov
adc
movsl
sti
add
rcrl
fdivrs
psrlw
sub
push
out
jmp
xchg
jl
pop
adc
push
daa
sub
mov
pop
pop
jb
push
cmp
mov
ss
xchg
and
or
mov
lret
in
outsl
or
cmp
and
jo
lods
inc
add
fs
hlt
arpl
clc
data16
xchg
shrb
lret
mov
loop
mov
xor
mov
sub
repz
in
add
jecxz
or
xchg
stc
or
add
adc
xor
jl
pop
jns
pop
fildl
add
outsl
adc
rorb
mov
test
js
ljmp
add
jne
mov
lock
mov
outsb
dec
cmpsb
movsb
into
sub
adc
and
cmpl
or
sahf
push
cltd
out
inc
popa
and
aad
add
push
and
lahf
jle
ret
bound
cs
cli
mov
shlb
dec
xchg
jnp
test
fildl
xchg
sbb
lock
mov
dec
jnp
addb
scas
mov
adc
push
inc
shlb
test
mov
cltd
sub
fnstsw
imulb
inc
jecxz
rclb
arpl
scas
js
mov
mov
loopne
lahf
mov
and
test
mov
push
cld
jecxz
cmp
imul
or
enter
push
pop
pop
xor
out
push
test
xor
outsb
rcll
scas
cltd
shrl
or
adc
cmp
mov
mov
mov
lods
dec
fnstsw
addr16
pop
cwtl
pop
cmp
cmpsb
inc
imul
xor
lods
icebp
fwait
push
fiadds
repnz
scas
cld
cmp
leave
pop
sbb
dec
jle
in
aam
andb
out
xchg
xchg
add
ret
and
mov
dec
xchg
xor
inc
mov
jo
insl
test
jecxz
or
dec
pop
int
xchg
mov
jbe
orl
lret
mov
jae
cmp
add
insl
lock
jge
push
sti
imul
mov
call
in
jne
pop
inc
push
lret
fstps
test
add
push
add
pop
adc
and
cmp
sbb
sarb
jno
jo
addb
jns
enter
sarl
aaa
mov
inc
insl
sbb
popf
shll
stc
shlb
xchg
mov
xchg
lcall
jne,pn
rorb
pop
sub
fiaddl
sub
xchg
movsb
pop
xchg
add
add
or
das
test
stos
inc
pop
xchg
je
dec
adc
andb
cmp
xchg
es
push
aad
pop
imul
and
push
mov
mov
aam
xchg
cwtl
dec
xor
bound
dec
mov
sub
mov
sbb
lret
and
aaa
fildl
push
sbb
ret
jmp
les
xchg
fidivrl
lea
stos
xchg
xor
loop
jnp
in
shlb
out
pop
ljmp
stos
mov
cmc
or
fimuls
jl
adc
ljmp
in
shl
fs
inc
addr16
sbbb
and
ja
mov
mov
cld
ja
pop
push
xchg
mov
mov
pop
data16
pop
fdivr
enter
mov
std
nop
movsl
dec
pop
and
xorb
in
stc
movsl
xlat
inc
js
sub
ja
std
mov
adc
inc
xchg
sub
mov
push
mov
lret
and
mov
pop
dec
add
fildl
push
cmc
dec
lds
dec
push
imul
call
xchg
add
inc
dec
xor
xchg
cli
cmpsb
inc
push
jbe
in
cs
jl
sub
out
and
out
pop
push
jns
xor
cmp
adc
mov
xchg
xchg
fsub
sti
sbb
or
mov
jg
jge
cmp
cmp
xor
adc
xchg
inc
pop
stos
push
mov
repz
sbb
xor
mov
and
fidivrl
jno
js
jecxz
add
icebp
xchg
pushf
jl
popf
imul
add
dec
or
lds
pop
shl
pop
in
into
dec
cmpb
sbb
xchg
sub
leave
sub
xchg
mov
popf
js
aam
jb
sbb
daa
sahf
aas
jns
push
push
ja
cmp
je
in
jnp
push
dec
fwait
int3
lock
cmp
adcl
xor
mov
popa
fisttpll
imull
mov
pop
fxch
int
inc
mov
adc
mov
testb
mov
rcl
clc
sub
repnz
fld
sbb
xor
roll
jnp
aas
or
fbstp
lock
imul
cmp
rorb
lds
sbb
push
add
push
and
arpl
or
cmp
ret
mov
mov
mov
jb
lds
ret
mov
jbe
test
out
mov
mov
sub
mov
out
sbb
out
add
cmpsl
mov
mov
push
sub
xchg
jg
mov
into
and
pop
adc
push
inc
rcrl
add
ret
mov
je
lea
or
dec
cmp
dec
xor
lods
or
sbb
repz
cwtl
xchg
cmp
neg
das
or
scas
dec
pop
ljmp
ja
imul
mov
or
inc
mov
jo
dec
cwtl
mov
xchg
arpl
mov
dec
xor
inc
es
adc
add
fwait
scas
int3
push
aas
popa
push
repz
adc
aam
xchg
and
mov
hlt
mov
outsl
or
inc
or
nop
cli
mov
data16
xor
sbb
lock
test
add
mov
sbbb
ljmp
cmp
lret
xchg
xor
adc
daa
aas
arpl
and
dec
push
out
daa
out
les
mov
jecxz
sub
jmp
sub
jecxz
push
inc
sbb
push
fs
add
inc
iret
xchg
mov
sbb
mov
in
sub
inc
lret
pop
add
out
jle
sub
out
xchg
nop
inc
icebp
inc
mov
xor
popa
jne
dec
addr16
pop
pop
sbb
pushf
mov
and
mov
xchg
leave
or
push
cs
ja
ss
jno
add
cli
adc
repnz
ja
int
int
push
fistl
jne
sbb
leave
repz
xchg
mov
push
xchg
clc
or
jl
mov
repnz
pushf
fnstenv
add
cli
mov
hlt
mov
shl
dec
cmp
mov
or
jge
inc
pop
jne
mov
testb
cmp
clc
push
iret
jl
mov
sub
lods
adc
push
jp
shll
lds
or
iret
js
hlt
sarl
jle
or
aam
xchg
or
mov
pushf
int
aaa
mov
inc
pop
xlat
cmp
push
fnstcw
hlt
popf
mov
add
es
ret
jns
xor
int3
jae
movsl
sub
test
mov
jne
ds
cmpsb
jle
ljmp
or
push
xchg
mov
pop
push
arpl
ret
push
add
shr
push
add
xchg
xor
pop
popf
fwait
xchg
pop
popf
nop
add
enter
out
icebp
scas
test
shll
lea
xor
popf
sub
add
pop
jl,pt
pop
jmp
movsb
xchg
lea
icebp
scas
enter
out
stos
mov
test
ljmp
mov
push
out
dec
aas
pop
cmc
xlat
jge
add
loopne
dec
mov
pop
sbb
mov
loop,pn
out
mov
or
jne
mov
shl
call
xlat
pop
cmc
inc
cmp
xchg
inc
jb
movsl
cmp
pop
mov
cmp
jecxz
push
movsb
pop
add
inc
lods
xor
pop
into
add
inc
mov
push
test
leave
aas
xchg
jnp
outsb
mov
cli
lods
jecxz
adc
fs
xchg
iret
rcrb
inc
arpl
sbb
and
je
hlt
imul
lds
and
shll
idivl
mov
ret
dec
insl
mov
mov
mov
imul
cmc
test
pop
mov
add
or
inc
cmp
cmp
or
inc
adc
push
aaa
cmp
xchg
js
sub
cmp
jnp
adc
mov
mov
xchg
mov
xchg
inc
imul
in
xchg
dec
popl
add
out
in
ss
adc
loope
mov
lcall
lcall
andl
lret
mov
cld
repz
xor
sbb
pushf
repnz
repz
es
lahf
jno
push
pop
cmpsb
popa
xorl
mov
je
insb
xchg
cmp
or
cltd
les
movsb
jmp
ret
push
and
pop
cmp
fcoml
xchg
rclb
scas
mov
mov
sub
fstpt
add
adcl
mov
mov
out
and
pop
sub
outsl
xlat
aaa
sub
ret
jp
mov
fdivrs
fdivrl
and
mov
mov
movsl
ss
rol
mov
xorl
aad
je
lock
popa
add
lea
push
in
loopne
mov
jno
or
sbb
loop
mov
mov
loope
or
xor
jmp
lock
mov
mov
add
movsl
insl
push
pushl
mov
pop
sub
cwtl
fnstenv
stos
pop
pop
push
loopne
sbb
inc
xor
nop
cmp
add
cld
jb
pusha
andb
movl
jl
jb
daa
mov
in
scas
repz
mov
push
sbbb
mov
rol
loopne
aas
mov
bound
frstor
dec
push
dec
sti
xor
and
add
cld
adc
pop
adc
inc
iret
scas
js
cmp
and
out
pusha
fsubr
sbb
icebp
add
cmp
les
cmp
in
aaa
insl
in
fs
out
rolb
repnz
or
xor
aam
push
pusha
sbb
jno
add
pop
les
inc
fstl
pushf
leave
ud2
nop
in
mov
stos
rcll
inc
and
js
mov
fldt
adc
ss
sbb
pop
add
cmp
loopne
xor
shr
pop
hlt
shrd
or
dec
xchg
lods
shl
dec
cltd
sub
jecxz
stos
mov
mov
push
sbb
pop
push
inc
jae
mov
pop
clc
mov
idivb
inc
je
push
in
push
push
sub
les
fstps
push
stos
arpl
test
dec
xor
and
cs
les
cmp
rorb
jns
movsl
gs
cmp
lds
fldt
pop
mov
sub
sbb
das
mov
jl
bound
xorb
sahf
lret
test
sub
add
xchg
pop
adc
xchg
push
daa
scas
addl
nop
movsl
pushf
mov
jl
adc
pop
dec
ds
or
gs
fisubrs
mov
mov
inc
adc
loope
movsl
push
jns
xor
xor
jecxz
popa
mov
fisubs
xor
mov
pop
mov
push
sub
je
adc
mov
or
jle
insl
push
jno
repz
jg
hlt
hlt
ficompl
mov
lret
cltd
adc
jg
leave
and
xchg
inc
lret
pop
movsl
sahf
or
mov
divb
dec
into
int
mov
fldt
pop
lods
mov
pop
mov
mov
movsl
sbb
and
xorl
fs
adc
addl
add
shlb
xchg
sbb
sub
out
add
fldcw
das
jno
ljmp
js
xchg
mov
jle
idivb
add
jb
not
test
sbb
imul
and
aam
out
jne
icebp
xchg
jne
enter
cmp
cmovnp
jmp
xchg
sbb
and
into
sbb
hlt
addr16
or
xchg
xchg
jge
in
in
addr16
iret
adc
and
xchg
fcmovbe
mov
lock
std
xchg
mov
hlt
or
test
test
and
cmp
sbb
and
filds
push
insb
dec
mov
fs
jp
cmc
flds
gs
negl
jns
xor
fsubrp
jg
adc
mov
add
adc
inc
cmp
mov
xchg
add
test
dec
dec
xor
sub
mov
sbb
int3
and
pop
jl
push
sbb
dec
push
ret
popf
loope
sub
jo
addr16
aam
rcrl
pop
jbe
push
mov
cmp
xchg
lock
add
hlt
imul
or
pop
jb
int3
add
mov
sbbb
bound
aas
movsl
sbb
cmp
mov
mov
in
sbb
sbb
jp
insl
test
jecxz
xchg
push
mov
dec
xchg
orb
push
lods
popl
fsubrl
adc
add
leave
in
dec
xor
inc
rolb
xchg
jmp
test
insb
mov
pushf
or
adc
subb
je
pop
testb
sub
mov
xchg
and
or
fcmovbe
in
rclb
lods
jo
inc
mov
and
enter
sbb
inc
fimuls
and
loop
scas
push
inc
pop
cld
vunpcklps
idivl
in
movsl
out
loope
adc
push
addr16
push
mov
mov
inc
sbb
push
mov
sub
mov
inc
jg
les
bound
pop
clc
mov
leave
and
les
xor
call
or
arpl
cmp
push
movsb
push
loopne
cmc
cmp
add
pop
or
push
or
xchg
sahf
outsb
jns
jne
aam
repz
jb
lret
cmp
lcall
sub
push
xchg
inc
xchg
cld
stos
and
mov
fnstenv
jl
aas
mov
mov
mov
roll
sti
mov
movsl
movsb
or
je
aas
out
pop
mov
inc
pop
out
dec
fidivs
mov
stos
pop
and
hlt
std
adc
inc
imull
pop
mov
data16
or
xor
gs
test
dec
repz
stos
add
lahf
enter
xchg
cmp
daa
push
cmp
pop
mov
mov
adc
dec
mov
bound
xchg
mov
inc
std
cld
mov
jno
pop
data16
outsl
stc
pop
pop
or
jne
jmp
in
dec
iret
xchg
imul
mov
out
repz
push
repnz
dec
scas
mov
dec
jns
aas
sub
sub
cmc
xlat
jne
add
cltd
xlat
xor
ljmp
sub
or
jne
push
inc
push
gs
shll
nop
fdivs
inc
sbb
mov
enter
sar
and
call
mov
jbe
mov
icebp
test
sbb
mov
mov
lahf
dec
dec
test
mov
pop
mov
mov
cmp
push
cmp
scas
mov
lds
inc
js
out
mov
inc
scas
ret
sub
mov
aas
xorb
jae
sbbb
push
iret
push
mov
mov
pop
outsb
xor
cmp
inc
jp
rorl
dec
pop
xor
mov
mov
inc
cli
cmc
sbb
int
jle
pop
cmp
test
sbb
lcall
lods
sub
pop
fldenv
or
dec
test
outsb
in
mov
dec
pop
add
mov
pop
xlat
xchg
sbbl
insl
ds
movsb
jg
dec
mov
loop
add
call
add
inc
das
cwtl
jbe
xor
mov
rorl
nop
mov
enter
xchg
inc
hlt
cmp
in
mov
xchg
jg
ja
lahf
les
xlat
and
cmpsl
fs
mov
jl
and
push
outsb
push
mov
sahf
fidivrl
js
insl
arpl
sub
xlat
fidivrl
dec
mov
and
cs
mov
or
xor
xchg
push
fcmovb
scas
shr
les
sar
dec
movsl
add
rcrb
mov
sti
fsubp
cmp
xor
lods
sbb
and
dec
push
into
or
pop
push
cmpsl
dec
pusha
adc
adc
dec
fldln2
jp,pn
aad
insb
fidivl
inc
int
jnp
sub
stos
inc
sub
aaa
inc
sbb
pop
popf
lret
xchg
rolb
mov
ror
pop
mov
push
shlb
lret
ss
pop
cmc
loope
test
addl
in
pop
sbb
xor
jno
out
sti
cmpsb
sbb
sub
cltd
mov
loop
mov
rol
scas
push
cmp
sbb
mov
xor
mov
cld
dec
ss
std
push
lcall
xlat
pushf
jne
movsl
xor
test
jno
mov
js
out
fwait
mov
sub
mov
xlat
dec
movsb
fcmovnbe
add
jnp
sti
bound
mov
add
nop
movsb
out
mov
sahf
adc
ficoms
cmp
lock
sbb
dec
les
mov
pop
mov
imul
out
push
push
out
fisubrl
dec
sbb
push
dec
mov
xchg
mov
and
jp
sub
dec
aas
jno
jnp
aad
mov
jle
or
sbb
movsb
add
xor
jo
icebp
hlt
xchg
lods
mov
fcomps
cmpsb
fsubs
stc
xchg
icebp
mov
inc
nop
outsb
xor
int3
sub
in
sub
dec
cmp
js
roll
mov
sahf
es
push
add
and
clc
lock
xor
or
inc
mov
fstl
iret
mov
mov
xorb
jmp
push
mov
ret
inc
jne
fs
push
out
into
jmp
addl
jne
jne
and
ficompl
adc
sbb
add
push
xchg
daa
jns
sbb
in
cwtl
addb
aas
xchg
es
lea
sub
cmc
sbb
adcl
mov
adc
xchg
movsl
push
movq
test
push
imul
jnp
push
shlb
mov
into
leave
test
push
push
jne
adc
in
xchg
cmp
or
sub
repnz
or
and
mov
push
push
lcall
mov
enter
jp
mov
mov
repz
sarb
cld
andl
fisubrl
fcos
fwait
cmp
add
imul
cmp
jb
or
adc
js
cmpsb
xchg
in
cli
ret
mov
lea
jp
clc
sbb
fucomip
or
mov
popa
lock
jl
in
aad
fimuls
incb
pop
inc
mov
fdivrl
dec
xor
int
stos
jbe
push
call
imul
push
cmp
xchg
loope
mov
aam
dec
add
push
cltd
insl
es
mov
sti
adc
mov
mov
test
inc
insl
popa
jecxz
dec
sub
pop
push
in
aas
mull
incb
jb
and
into
add
pop
cs
sbb
loope
fxch
jecxz
divb
call
and
js
push
cltd
rcl
dec
es
loopne
addr16
mov
in
jnp
mov
outsl
pop
shrb
add
xor
cld
test
clc
xorb
push
mov
pop
cmpsb
cmpsl
cmpsb
cmpsb
out
movsl
pop
and
mov
or
dec
popf
dec
sub
loopne
movsb
inc
stos
push
push
lret
jp
test
sub
pop
xor
add
repnz
sti
testb
or
cmp
xor
push
fistpl
int3
or
jo
lcall
imul
xchg
pop
mov
mov
or
pop
lods
test
jge
imul
mov
push
inc
mov
pop
pushf
cmp
cmp
xchg
push
cmpsb
gs
xchg
shrl
sti
daa
or
and
mov
ss
mov
cwtl
adc
and
sub
addps
cmp
push
or
dec
mov
cld
inc
cmp
inc
push
fidivs
incl
in
cli
dec
divl
aam
add
sub
aas
mov
cmp
pop
mov
cmpsb
leave
cmpsl
jno
sub
cli
lods
stc
test
rcr
pop
loopne
sbb
daa
imull
test
cmp
pop
imul
cmp
pop
int
and
cmp
pop
insb
sbb
mov
jb
in
xor
in
adc
dec
insl
xor
push
xchg
jb
mov
mov
jno
inc
ficomps
cmc
mov
cmpsl
jnp
mov
repz
cmp
sti
adc
inc
imul
into
out
push
pop
pop
aaa
jns
adc
ret
pop
adc
dec
or
andl
push
aam
into
sbb
cmp
imul
xchg
pop
inc
das
jmp
in
insb
mov
xchg
leave
pop
aam
stc
jg
xor
inc
xor
ficomps
pop
pop
mov
mov
pop
mov
das
jns
pop
repz
addr16
movsb
adc
mov
popa
fwait
es
aad
repnz
pop
jg
push
adc
testb
or
cmp
das
add
enter
jno
fisubl
orb
jne
call
add
in
faddl
mov
in
out
cmc
pop
into
shl
test
sti
int
stos
int3
jg
loope,pn
cmp
xchg
pop
fisttpll
fwait
test
jmp
sarl
and
push
rcll
jge
jnp
lret
out
dec
add
sbb
repz
loop
je
aaa
dec
adc
repnz
push
sbb
les
loop
inc
mov
test
add
mov
scas
dec
jle
call
out
adc
sahf
lods
sti
popf
popa
in
or
les
xor
push
or
shl
pop
mov
or
mov
pushf
xchg
iret
test
out
mov
sub
mov
push
lcall
test
mov
jo
lret
sarl
and
or
into
jecxz
mov
sbb
sarb
inc
jae
pop
leave
push
mov
rol
dec
jmp
lret
fisttps
lret
outsl
cmp
dec
ja
cmp
pop
push
jae
mov
loope
call
out
or
mov
sbb
mov
mov
or
adc
insl
jo
andl
mov
roll
xlat
push
lock
xchg
inc
mov
andl
hlt
rclb
and
xchg
cltd
add
test
daa
fistpll
jle
jecxz
dec
cmp
add
xchg
test
xchg
scas
or
pop
sbb
js
ds
mov
js
mov
lds
mov
mov
mov
cmp
lcall
mov
popf
loopne
lods
pop
jno
lea
hlt
jno
cmpsl
sbb
push
push
push
sub
into
pop
xor
jl
aaa
pushf
mov
pop
insl
daa
sub
adcb
inc
pusha
and
mov
jns
mov
pop
jno
push
les
xlat
cs
rcl
aad
inc
sbb
push
or
or
fildll
imul
pusha
mov
cs
jle
xchg
aas
adc
inc
aad
in
icebp
lods
ret
aam
idivb
cmp
xchg
inc
loopne
jle
rolb
xchg
xchg
mov
and
inc
mov
fstps
push
pushf
adc
out
push
out
in
repz
add
push
movsl
mov
gs
push
xchg
or
mov
xchg
push
call
xor
xlat
jl
inc
push
adc
loop
xor
sar
jno
add
out
jno
imul
adc
mov
and
mov
scas
out
mov
cmp
sbb
add
mov
jns
stc
negl
mov
pop
mov
push
test
mov
ret
test
fs
sbb
xlat
stc
cld
daa
pop
shll
push
jl
xor
cli
dec
ret
dec
and
test
inc
negb
test
movsl
push
loope
insb
repnz
cmpb
mov
loope
fstps
cltd
jnp
push
ret
jg
mov
sbb
imul
repz
xchg
loopne
adc
mov
dec
jo
test
aaa
pop
adc
pop
cmp
xchg
sbb
xchg
sbb
push
js
je
pop
sub
mov
push
in
fcoms
jno
popf
aaa
adc
cli
fwait
push
sub
xlat
push
push
pop
stos
add
subl
lock
jl
stos
mov
aad
repz
aam
imulb
jl
sbb
fidivs
fcmovnu
arpl
cs
push
leave
lret
fdivrs
hlt
adc
mov
mov
mov
jbe
enter
mov
add
fistl
xor
inc
add
and
rcrb
popa
inc
add
sub
xchg
lock
xor
lea
jp
scas
jg
xchg
fistps
push
scas
mov
mov
xor
mov
mov
inc
movsl
dec
adc
ret
push
xchg
repnz
loopne
dec
cmp
mov
inc
push
jo
push
xor
ds
jb
int
cld
imul
int
push
into
dec
push
mov
out
test
sub
cmp
cltd
out
in
cmp
inc
insb
or
jl
adc
inc
dec
or
je
imul
mov
jo
pop
mov
push
sbb
daa
mov
pop
mov
loop
aas
and
push
dec
int3
jmp
cmpsb
mov
cmp
push
fucomip
mov
outsb
jge
stc
sbb
and
clc
clc
mov
movl
or
push
xchg
jns
jae
nop
xchg
pusha
sub
add
shr
inc
cs
icebp
rcll
int
iret
sub
mov
inc
lahf
ret
lahf
cmp
insl
data16
inc
das
jo
fstpt
and
and
xchg
ss
fsubrl
inc
movsl
mov
cmp
ja
mov
outsl
aad
mov
rcl
push
mov
insl
testl
sbb
xchg
cs
lds
aas
sbb
mov
xchg
cld
jmp
adc
mov
enter
jle
arpl
ret
mov
cmp
ljmp
mov
mov
ja
mov
mov
or
mov
xor
shlb
adc
dec
sbb
lret
icebp
int
jns
out
out
adc
xchg
aad
cmp
inc
cwtl
int3
ret
push
jg
lea
pop
outsb
lret
xchg
popf
push
bound
lret
rolb
inc
mov
pop
aas
out
insb
and
sub
or
pushf
jne
push
pop
jp
int3
and
movsb
inc
rorb
lock
out
inc
or
dec
rcrl
aam
test
pop
sbb
sbb
mov
adc
pop
sub
lcall
call
bound
lahf
out
sbb
lcall
xor
sbb
push
mov
int3
pushf
adc
mov
pop
lock
movsl
fbstp
imul
adc
and
jg
and
add
inc
inc
pushf
ja
sti
aam
rcr
stos
mov
xchg
mov
or
xchg
rclb
mov
push
loop
jo
and
xchg
mov
dec
aaa
and
fisubrl
push
mov
inc
movsl
jle
or
sbb
sub
les
out
pop
dec
lcall
add
imul
fs
mov
pop
daa
popf
mov
imul
add
dec
pop
insb
arpl
jns
std
out
cmpsb
sahf
mov
data16
aam
cli
add
lea
nop
lods
and
nop
aam
xchg
scas
mov
push
jne
cmpsb
mov
jae
ds
lahf
inc
push
cs
ja
lods
xor
pop
and
add
int3
test
pop
lods
mov
inc
add
add
jp
mov
lret
outsl
inc
push
add
int3
pushl
pusha
mov
add
call
movsl
das
and
out
mov
imul
mov
nop
add
mov
xchg
push
fnstsw
enter
shlb
ljmp
mov
movsl
sbb
jg
jo
sbb
testb
sub
insb
js
icebp
ret
cwtl
arpl
jp
into
sti
lret
xor
pop
mov
fsubrl
mov
cmp
adc
push
jae
dec
jnp
jbe
cmpsb
addr16
outsl
pop
sub
xchg
jp
in
sub
arpl
jmp
lea
jnp
and
or
popf
push
movsl
pop
enter
jge
mov
mov
cs
cmp
jae
lods
adc
cwtl
imul
fdivrp
insb
out
pop
xchg
xchg
dec
insl
xchg
xchg
fbld
call
push
sub
fwait
les
subb
mov
mov
cmp
mov
mov
ss
cli
mov
das
lods
push
push
data16
shlb
ds
clc
pop
hlt
data16
insl
int3
jbe
adc
ret
push
ficoms
jp
clc
mov
mov
loopne
adc
imul
lea
add
cmp
dec
scas
jbe
fcompl
out
lcall
sub
or
pusha
out
insl
add
xchg
repnz
test
test
push
pop
dec
lcall
xor
jbe
inc
push
inc
xchg
arpl
jl
xchg
inc
sahf
inc
mov
inc
xchg
or
xchg
xlat
or
jno
out
sahf
imul
mov
or
add
cmpb
or
filds
outsb
pop
daa
cltd
lret
scas
outsl
lds
decb
dec
push
pusha
mov
imul
cld
sbb
mov
mov
jmp
scas
xchg
push
mov
mov
out
scas
xchg
arpl
je
jns
out
add
lods
fisttpl
lds
fcomps
pop
mov
aaa
mov
sahf
jecxz
fcoms
mov
into
hlt
mov
pop
add
lahf
jp
decb
jo
cmpb
test
jnp
fcoml
mov
adc
enter
imul
dec
fs
loope
dec
push
jle
adcb
mov
fisubrs
jecxz
loopne
pop
mov
xchg
jb
jle
rorb
mov
inc
lods
lods
lcall
xor
xchg
js
add
pop
mov
or
xchg
js
xchg
inc
insl
xchg
into
sahf
pop
or
mov
movsb
push
sbb
dec
pop
jae
and
dec
and
arpl
mov
pop
jo
push
dec
jb
ljmp
xchg
sub
fwait
or
adcl
out
pop
lds
loope
xchg
sbb
jmp
imul
lcall
fildl
daa
andb
or
repnz
mov
cmp
push
adc
iret
scas
repz
pop
xlat
fwait
or
iret
and
cltd
and
mov
bound
scas
inc
mov
clc
aaa
pop
inc
sbb
sbb
mov
enter
inc
jne
xchg
jp
imul
jne
icebp
push
pop
xor
shlb
rorl
xchg
push
leave
aas
push
add
insl
mov
push
inc
pop
mov
push
fldenv
or
mov
leave
test
inc
push
lds
cli
jcxz
repz
adc
mov
int
popa
mov
sub
lcall
cmpsl
or
loope
not
adc
add
in
push
push
xchg
inc
lods
jl
mov
dec
push
mov
adc
aam
cmpsl
loopne
xchg
cs
push
mov
cwtl
lods
dec
mov
jmp
cmp
mov
ja
arpl
mov
shl
stos
mov
test
mov
xchg
aam
mov
xchg
mov
sub
shr
sahf
rorb
lods
adcl
add
pop
stc
stos
mov
lock
rolb
push
testl
mov
pop
mov
aad
ret
pop
jmp
sbb
dec
push
xor
mov
or
cmp
lret
xor
inc
rolb
cltd
jnp
add
mov
ljmp
mov
loop
fisubrl
ss
mov
xchg
and
mov
mov
xchg
cli
insb
mov
cmp
jecxz
sub
es
mov
mov
aaa
in
insb
lods
pop
arpl
mov
dec
dec
stos
xor
sbb
inc
imulb
xor
leave
loop
les
adc
bnd
movsl
loopne
or
imul
cs
repnz
jge
repz
shll
add
int3
hlt
shrb
ja
sbb
popf
or
sub
adc
mov
mov
sbb
jl
call
xchg
inc
aas
adc
push
push
fisttpl
movsl
mov
int3
hlt
dec
cmpl
arpl
jne
mov
aaa
jb
or
pop
jne
or
mov
aad
or
loope
lods
iret
inc
iret
dec
repnz
into
adc
movsb
xchg
pop
sbb
dec
mov
cmp
lret
or
call
movsl
aam
mov
mov
lahf
iret
arpl
xchg
lock
xchg
imul
ret
ljmp
sub
mov
nop
push
imull
stos
xchg
ret
fisttpll
lods
or
in
call
push
push
dec
jno
add
add
push
cmp
scas
and
cwtl
mov
inc
movsb
add
mov
adc
mov
sbb
xor
out
testl
addr16
adc
loopne
jmp
and
mov
mov
mov
sar
icebp
movl
xor
pushf
mov
sahf
push
aaa
mov
test
and
inc
push
lret
xor
addb
push
inc
mov
es
xchg
jo
jne
inc
mov
je
pop
outsl
mov
pop
iret
or
lods
mov
or
in
js
mov
ret
pop
sub
xor
jmp
mov
or
stos
cmpsb
cmp
leave
xor
mov
inc
sub
les
add
mov
inc
fistpll
jmp
jne
adc
es
notl
aad
dec
outsl
inc
mov
cwtl
hlt
and
outsb
ja
dec
xlat
xchg
fists
pop
ja
cwtl
sub
pusha
shl
lock
out
pusha
mov
push
pop
arpl
push
ja
mov
shrl
cli
nop
lea
pop
pop
jle
movaps
out
in
mov
inc
aas
cmpsl
cwtl
cld
jp
push
pushl
testb
scas
ljmp
int3
mov
mov
addr16
loopne
aaa
aam
fwait
sub
pop
adcl
or
cmpsl
loop
aas
sub
ss
push
mov
cmp
clc
fdiv
jnp
out
or
sbb
lret
setne
jg
repz
dec
div
dec
outsl
scas
lahf
push
mov
ljmp
inc
js
das
cmpsl
fistl
insl
pop
cmpsb
shll
imul
test
and
and
mov
outsb
cli
aas
jns
fsubrs
mov
pop
lods
jle
popa
xchg
mov
xchg
shlb
fs
lret
push
sbb
stos
data16
aam
sbb
in
push
jle
jnp
xor
xor
mov
inc
add
cmp
xor
clc
jl
shrl
and
sub
xor
push
mov
and
aam
add
in
dec
dec
mov
jb
mov
fwait
sbb
pop
insl
pop
fnsave
push
and
cwtl
into
ss
fs
pop
jnp
dec
in
sarl
and
lods
cli
pusha
repnz
cwtl
pop
jmp
mov
dec
jo
pop
shll
inc
int
loopne
notb
adc
jmp
sbb
mov
addb
cmp
jbe
mov
pop
cltd
sub
imul
sbb
cmpb
push
popf
xchg
out
or
and
fnsave
mov
mov
xor
adc
stos
addl
adcb
out
cld
into
cmp
call
pop
and
ret
mov
dec
in
jmp
data16
lods
jle
lock
lret
outsb
push
mov
fcomps
arpl
sbb
xor
test
inc
push
push
push
adc
push
inc
adc
mov
push
mov
lock
sbb
cmp
insb
mov
mov
cmp
push
and
mov
ret
mov
movsb
jecxz
aad
fnstcw
leave
nop
inc
xchg
lahf
iret
in
and
and
pop
push
xor
add
push
mov
pop
rcrb
into
jle
mov
data16
pop
adc
add
stos
dec
movsb
cli
sahf
xor
pusha
mov
outsb
int
or
mov
loopne
pop
fstpl
jge
int3
ljmp
push
xchg
pushf
mov
xchg
sbb
test
pusha
movsl
daa
sub
cwtl
sarb
pusha
jge
add
adc
mov
test
cmp
dec
push
das
je
ljmp
movb
rolb
and
mov
leave
mov
popa
jns
movsb
cltd
xchg
adc
push
sbb
push
jmp
aad
jg
je
out
add
and
and
clc
bnd
adcl
adc
pop
xchg
lret
jecxz
movsb
aad
outsl
push
sbb
add
jge
or
shrl
and
js
iret
and
in
sub
je
jbe
and
mov
int3
mov
jmp
pop
and
mov
mov
inc
jp
repnz
aad
lahf
adc
xor
mov
and
xorl
push
cmp
add
nop
lret
adc
shll
jg
mov
jl
in
adc
into
aas
clc
imul
sub
stc
lods
add
adc
mov
notl
lods
fidivrs
pop
pop
cs
adc
cwtl
adc
dec
xor
xor
enter
scas
mov
in
daa
push
jmp
in
mov
das
outsl
lods
mov
cmp
add
adcl
sub
ss
inc
fiaddl
out
adc
aam
call
lea
pop
inc
in
gs
sbb
mov
and
ds
outsl
lock
inc
fnstcw
mov
int
xor
adcl
call
add
inc
sub
mov
add
inc
dec
or
cwtl
xor
imul
inc
or
jb
inc
xchg
push
popa
dec
push
js
rcll
sub
mov
sub
cmc
dec
stos
es
mov
add
sub
test
pop
xchg
scas
cld
enter
outsl
mov
es
outsl
sbb
cmpsl
sarl
pushf
mov
jg
dec
sub
insl
inc
stos
repz
js
addl
cld
jmp
dec
loopne
mov
adc
and
fs
mov
mov
mov
or
cltd
and
clc
scas
cld
mov
call
mov
push
add
pop
maskmovq
imull
lds
dec
xlat
push
int3
inc
mov
dec
xor
ss
xchg
stc
sbb
xor
add
sti
xlat
sub
popf
loop
xor
shll
ljmp
and
xor
popa
dec
rol
dec
cmp
mov
scas
jae
push
sub
ljmp
pop
pop
lea
cli
rolb
cmp
xor
jno
test
push
stos
cmp
adc
adc
pop
out
jne
xchg
mov
std
inc
cltd
jg
ds
arpl
pop
and
mov
sub
jge
enter
shrl
pop
mov
xchg
dec
iret
jae
ja
push
in
add
call
lock
testl
aas
rcll
jnp
arpl
movsl
fs
add
mov
stos
stos
or
mov
cmp
mov
dec
xchg
xchg
cli
add
mov
pop
xor
setnp
ds
and
in
lret
pop
cs
in
push
mov
lcall
xchg
cmp
fwait
mov
mov
movsl
cmp
jo
jb
pop
sub
loope
scas
jmp
sub
lret
sbb
sbb
sbb
sarl
push
testb
inc
inc
sbb
loopne
push
xchg
outsb
loopne
adc
rclb
mov
in
jmp
es
std
shll
movsb
jl
jbe
pop
mov
fmuls
jl
mov
lret
leave
add
movsl
es
add
jo
adc
xor
jo
lcall
mov
xor
jno
xchg
scas
xchg
xchg
popf
cltd
sarb
lret
lahf
es
mov
jbe
arpl
mov
hlt
sbb
sbb
push
insb
out
pop
xchg
jbe
adc
mov
push
adc
lods
lods
or
ds
cmpl
jp
jnp
mov
mov
add
mov
dec
out
push
mov
add
mov
std
pushf
xchg
dec
push
push
xchg
mov
inc
rcll
or
cmp
add
mov
andb
jno
outsl
pop
push
pop
add
jg
push
mov
call
xchg
mov
sbb
cwtl
icebp
and
push
xor
mov
adc
and
push
aam
int3
es
shr
int
lcall
insb
cmp
adc
sbb
sub
pushf
jl
jnp
jae
jnp
xor
wbinvd
ss
rcll
dec
sub
mov
push
push
inc
outsl
cmc
or
sub
inc
mov
pop
mov
mov
iret
insl
iret
xchg
fiadds
add
rcl
pop
push
ds
fisubrs
push
test
adc
test
aam
clc
addr16
mov
bound
sbb
cmc
or
sub
shll
jae
add
ret
jle
push
jnp
fldt
mov
ja
cmpb
dec
lock
es
and
stos
mov
stos
gs
sub
xor
je
dec
adc
cmp
jbe
cli
ror
mov
dec
fbld
inc
and
pusha
adc
xor
cmpsl
pop
cmp
fnsave
and
mov
ja
fsubrl
lret
mov
stos
jne
dec
loopne
pop
hlt
sbb
add
jnp
in
gs
push
pop
out
add
jmp
mov
enter
inc
fwait
lret
push
or
notl
cmp
xlat
loop
in
loop
loop
sbb
mov
imul
int
pop
push
add
loopne
std
pop
test
repz
pop
dec
adcl
ret
in
mov
adc
aaa
lock
lock
push
lock
std
loope
add
daa
jle
add
mov
ds
test
stos
out
hlt
ja
clc
ret
adc
xor
in
dec
popa
sbb
test
xor
xchg
fimuls
addr16
enter
fwait
jae
xchg
jb
adc
movsl
testb
ljmp
sbb
jl
repz
aaa
mov
fidivl
mov
xor
je
push
mov
ljmp
xchg
pop
sbbl
push
inc
nop
mov
les
or
bound
sbb
mov
lahf
or
xor
and
stos
call
enter
xor
push
xchg
popa
psubd
push
lahf
sbb
sahf
mov
out
cltd
and
dec
jmp
js
inc
inc
in
push
jl
or
loope
xchg
rcr
jne
imul
xchg
lds
aad
inc
push
fs
add
and
xor
test
adc
sbb
pusha
test
mov
dec
sub
add
xchg
notb
mov
mov
xchg
mov
aad
or
or
mov
jge
cmpsb
stos
push
xchg
xchg
lret
lcall
lods
ror
push
lods
imul
icebp
ds
add
pop
pop
popf
imul
outsl
xchg
sub
mov
jmp
cmp
fldl
scas
loope
jg
pop
jae
outsb
push
lcall
les
repz
jecxz
mov
pop
add
aad
ja
adc
aam
in
std
inc
pop
lods
das
rolb
pop
jns
and
jae
leave
xor
and
test
xor
loope
jbe
fiadds
fldl
subb
sbb
mov
cli
sub
xorb
inc
pusha
push
inc
loop
lcall
jo
mov
and
aaa
mov
insl
imul
test
pop
lret
sahf
insl
push
inc
mulb
int
movsl
or
cmpsl
mov
fstps
scas
xor
push
leave
aas
ljmp
xchg
jae
imul
pop
addr16
cmp
ret
mov
sarl
mov
sbb
mov
inc
into
xchg
stc
clc
jmp
imul
adc
in
push
dec
addr16
pushf
xor
dec
pusha
test
inc
fcompl
cwtl
jmp
aas
push
jecxz
and
subb
and
lock
rclb
and
cmp
push
dec
insl
push
icebp
jbe
divb
push
sub
ja
xor
pushf
dec
xor
ja
push
test
mov
jo
cmp
inc
arpl
test
ds
pushf
jg
or
push
mov
notb
loope
mov
dec
mov
aad
lcall
mov
push
xchg
push
scas
mov
xchg
dec
loopne
out
in
xchg
adc
daa
lods
ja
ret
cwtl
lret
pop
nop
jl
jns
push
and
inc
jb
mov
in
out
out
cmpsl
mov
arpl
push
mov
and
xchg
add
repnz
mov
push
out
es
movsb
out
adc
adc
rolb
int3
sbb
scas
push
dec
shlb
movsb
sub
scas
and
or
sbb
mov
sub
add
mov
loopne
push
fcompl
or
lret
dec
cli
mov
add
nop
sub
test
ja
sub
scas
adc
add
mov
xlat
cld
xor
leave
and
dec
cmpsl
lds
repnz
cmp
adc
push
insl
xchg
cmpsb
iret
push
aas
ret
lods
mov
shlb
xor
jns
inc
inc
push
mov
add
movsb
mov
adc
stos
sti
out
push
mov
frstor
xor
bound
jge
cltd
fidivrl
xchg
outsl
insb
cs
lods
loopne
decl
orb
mov
jge
add
xor
inc
out
xchg
lods
dec
xor
xchg
stc
adc
push
sbbb
rep
and
in
sub
nop
mov
outsl
xor
inc
adc
xchg
fsub
js
push
push
das
pop
int3
shl
xchg
inc
mov
push
mull
mov
sub
je
fnsave
aad
xor
lret
lock
or
push
and
idiv
and
scas
jmp
cmp
jnp
and
jge
jg
in
dec
inc
das
lock
in
daa
aas
jle
pop
cwtl
inc
outsb
lock
pop
loope
push
jns
mov
cmpsl
in
jge
addl
inc
jg
fcomps
fsts
and
mov
lret
addb
mov
mov
mov
push
pop
clc
fidivs
jp
push
mov
add
or
lds
xchg
mov
flds
jmp
outsl
out
dec
es
call
push
adc
xchg
push
lock
push
jle
fldenv
iret
and
or
mov
sub
shl
push
cmc
sbb
adcl
dec
mov
lock
sub
arpl
or
shll
or
out
int
pop
rorb
scas
sahf
inc
out
jle
or
mov
xlat
fiadds
in
cmc
sahf
stos
xchg
lcall
cmc
arpl
dec
pop
xchg
jb
sub
les
dec
jge
push
mov
and
clc
adc
push
adc
inc
mov
ja
repz
adc
cmpsl
jge
call
ss
fimull
add
cltd
cmc
es
xchg
xlat
add
xchg
stc
test
out
stc
xor
je
aad
fsubl
aas
dec
xlat
fidivs
nop
clc
inc
repz
mov
rcll
pop
jge
pusha
mov
out
cmp
push
mov
and
cmp
mov
mov
lock
jmp
push
jle
ljmp
cmpsb
lods
mov
or
lea
stos
xor
shlb
xchg
pop
xor
test
cmp
adc
add
in
xchg
ljmp
push
push
flds
addr16
xchg
and
add
dec
orl
push
xor
rorb
push
mov
fwait
and
lret
jno
cmp
jo
mov
add
cs
pushf
ret
adc
or
je
je
dec
sub
add
or
jno
fcompl
ret
fidivs
sbb
push
lock
xchg
sbb
xor
outsb
cmp
mov
jno
xchg
fcmovbe
mov
pop
fs
in
push
mov
add
xchg
je
packsswb
sbb
std
stos
nop
push
insb
jb
adc
movsb
add
xchg
repz
xor
jae
mov
xor
dec
jle
adc
push
andb
dec
out
movsl
and
ret
mov
das
cs
mov
jnp
cmp
inc
fadd
adc
aad
adc
test
popf
lcall
outsb
es
test
add
les
int
ja
cltd
repnz
fidivrs
xchg
sahf
fucomip
jne
stos
jp
jne
icebp
or
repz
jmp
in
mov
stc
stos
dec
xor
jp
sub
xor
outsb
es
addl
adc
data16
push
sysexit
das
jge
jmp
in
dec
int3
fistl
in
xchg
and
rclb
jne
daa
push
aad
inc
push
xchg
mov
and
out
ret
mov
lret
xor
add
clc
dec
adc
xlat
push
stc
inc
outsl
and
fimull
cltd
jno
mov
sbb
insb
pop
adc
pop
jecxz
pushw
mov
addr16
les
pop
jae
jl
scas
pop
cmc
or
and
rolb
lea
jle
stos
adc
pop
enter
pop
or
mov
jecxz
pop
rclb
out
pusha
adc
mov
lret
mov
mov
into
jp
in
lret
inc
adc
lahf
fimuls
push
jae
xor
sub
cltd
cli
mov
pop
cli
jge
fucomip
add
aam
mov
mov
lods
add
and
shl
scas
test
pop
pop
and
add
mov
sahf
or
je
and
add
test
dec
outsb
int3
scas
movb
mov
ds
pop
das
jp
push
xorb
scas
loop
sub
mov
lods
test
ss
lret
dec
push
int3
pop
inc
jmp
push
inc
add
adc
shlb
mov
loopne
or
sub
xchg
rcrl
pop
and
jne
data16
cmpsb
pop
push
push
sahf
sbb
pop
rcrl
push
mov
subb
dec
jno
cs
sub
push
ret
xor
fildl
js
pop
cmc
cmp
popa
stos
sahf
adc
push
outsb
ret
inc
jmp
or
mov
jo
out
inc
fbstp
pop
and
push
inc
pusha
test
lcall
out
dec
push
or
or
xor
lods
jo
scas
pop
inc
and
pop
add
add
icebp
fucomip
shlb
arpl
xor
sahf
dec
dec
mov
ljmp
mov
pop
lods
out
lret
out
imul
mov
fldl
lods
mov
mov
jg
jno
push
lods
xchg
lock
fiadds
addl
inc
idiv
aas
add
push
ficoml
dec
ficoms
movsb
mov
and
dec
jb
fidivl
inc
sub
insl
out
add
mov
push
push
adcl
pop
push
xor
stos
ret
cli
mov
aaa
inc
cld
sub
stc
in
push
adc
arpl
dec
icebp
rol
ficomps
push
xlat
dec
shlb
pushf
pop
repnz
xor
lock
dec
ss
adc
insl
icebp
add
or
mov
addr16
out
mov
incb
cmp
add
testl
and
xchg
shll
xchg
mulb
jnp
faddl
mov
out
mov
dec
clc
fsubrs
jae
push
adc
mov
mov
aaa
mov
scas
xchg
pop
mov
dec
test
test
mov
inc
negb
jg
dec
cmovle
cli
adc
mov
sarl
in
sbbb
or
ljmp
mov
jmp
ret
mov
mov
sub
pop
dec
dec
adc
mov
xchg
jne
ljmp
test
adc
mov
or
xor
rorl
dec
es
jecxz
mov
stos
aaa
inc
lcall
mov
add
and
out
lock
aaa
orb
mov
dec
inc
cmp
das
in
ja
ror
jle
xchg
js
sahf
push
push
movsl
frstor
insl
mov
scas
loop
call
test
cmpsl
pop
fadd
jp
sub
ljmp
lds
leave
add
sbb
ffreep
jp
and
sti
test
dec
ds
insl
mov
mov
mov
inc
push
mov
mov
adc
je
negb
mov
ljmp
jecxz
loopne
rcll
pop
cmp
push
adc
mov
cmp
and
inc
jg
cmc
aas
mov
scas
dec
fs
sub
xchg
pusha
or
jecxz
or
test
mov
fcmovnu
push
imul
dec
inc
mov
test
sub
outsl
std
test
push
xchg
dec
lea
push
or
stc
test
aad
fwait
or
sti
cwtl
push
xorl
and
mov
in
mov
mov
adc
sahf
insb
aas
cli
xchg
inc
mov
and
mov
icebp
pop
hlt
push
cmpsl
out
jp
mov
and
adc
faddl
mov
push
iret
mov
insb
fisubrl
xchg
scas
mov
push
lret
lods
cld
cmp
jp
mov
mov
leave
and
fldcw
mov
aam
cwtl
notl
mov
vcvtpd2psx
adcl
addr16
push
mov
sub
add
mov
adc
gs
inc
divb
clc
pop
push
xor
cli
shrl
push
sub
mov
pop
sub
adc
push
mov
clc
and
clc
mov
insl
lock
mov
jns
push
mov
shlb
jg
leave
push
test
mov
mov
cmc
enter
loop
mov
insb
int3
jne
imul
in
dec
scas
outsl
dec
cmp
cld
scas
fistl
ljmp
jb
xchg
mov
repnz
mov
adc
std
shlb
in
push
mov
sub
pusha
out
pop
call
mov
cmpsl
push
subl
insb
inc
sbb
cmp
cmp
cmpsl
push
lret
shrl
pop
ret
push
aam
pushl
jg
jmp
jno
stos
jmp
jae
test
push
adc
in
push
xchg
mov
sbb
ret
xchg
or
in
inc
and
ret
xchg
in
or
sarb
mov
xor
jae
stos
les
into
leave
sub
mov
push
fwait
mov
out
popa
mov
mov
ljmp
add
sbb
dec
mov
push
in
sahf
mov
adc
mov
leave
pop
pop
test
pop
add
inc
mov
outsl
inc
roll
loopne
aad
mov
in
in
hlt
inc
call
pop
mov
fbstp
pop
xchg
sub
xchg
sub
daa
mov
in
fwait
sbb
subb
decl
pop
jg
scas
cwtl
xchg
js
and
out
sub
pop
push
and
bound
xor
mov
mov
jo
mov
mov
push
xchg
cmpsl
divl
inc
jp
cld
rcrb
sub
cmpl
scas
sahf
loopne
pop
inc
xchg
pusha
xor
cmp
stc
jbe
xchg
test
lcall
pop
sbb
out
pop
xchg
jo
outsb
mov
ficompl
mov
push
adc
or
sarb
xchg
cltd
loopne
int3
call
pop
xchg
and
dec
out
add
mov
jnp
jge
and
and
fiaddl
sbbl
in
loopne
fwait
sarb
sub
stc
mov
cltd
jl
xchg
push
xlat
ret
in
sbb
jne
jg
ss
inc
cmpsl
and
sahf
mov
pop
pop
mov
xchg
fs
and
enter
jmp
divl
mov
sar
jno
xchg
xor
jl
mov
pop
ss
sub
or
arpl
sub
repnz
pusha
and
xor
enter
jp
xorb
and
xor
sbb
push
ljmp
mov
jno
popa
movsl
cli
loopne
in
andl
cmpsl
leave
cmp
push
xor
movsl
sbb
dec
nop
and
jb
fwait
aaa
test
cmp
or
fisttps
subb
ficomps
movsl
xchg
mov
mov
mov
dec
ja
int3
dec
push
or
popf
stc
test
ror
das
lahf
arpl
fxch
add
jmp
leave
test
inc
rcrb
mov
into
xchg
jmp
add
and
inc
or
lock
daa
cmpsl
jo
mov
cltd
fisubrs
xchg
jo
jnp
outsb
push
jne
fiaddl
movsl
outsb
mov
stos
fdivrs
inc
rorl
mov
out
adc
mov
or
cld
fs
xor
fbld
lods
sbb
add
cli
pop
jge
jl
mov
jmp
push
pop
aas
xchg
push
jg
ret
pop
sbb
sub
mov
call
sbb
adc
pop
or
jp
mov
icebp
je
test
dec
mov
lret
sbb
mov
test
lods
xor
inc
add
xchg
mov
mov
cltd
jle
pop
dec
or
cmpsl
mov
and
cs
jnp,pn
sbb
aas
push
mov
ja
clc
jbe
lahf
int3
push
xchg
add
xchg
xchg
movsb
imul
sbb
rcr
clc
push
cmp
imul
xchg
and
imul
mov
movsl
mov
jns
cmpsl
jbe
sar
bound
rorb
jecxz
mov
clc
pop
int3
fbstp
mov
and
jnp
and
sub
sbb
sbb
pop
data16
mov
add
dec
js
jecxz
shrl
push
mov
jg
lods
push
and
jae
xchg
cmp
sub
inc
xchg
pushf
mov
ret
cmp
cld
xchg
dec
pop
adc
mov
cltd
mov
mov
mov
add
add
int
fildl
les
rorb
or
mov
inc
sub
push
roll
dec
sub
xor
ja
repnz
out
outsb
mov
cmc
mov
cmp
cli
sar
push
lret
ds
adc
or
cmc
rorb
daa
sbb
inc
call
scas
mul
mov
imul
inc
fsubrs
lock
mov
add
lret
mov
push
xor
mov
xor
inc
fistpll
lcall
jmp
sbb
push
insl
adc
stos
mov
ret
hlt
lret
inc
lock
loopne
adc
dec
addr16
movsb
mov
iret
jp
pop
data16
add
mov
cmp
arpl
adc
jne
xor
push
fisubrs
sub
pop
adc
data16
and
pop
and
cmpsb
sahf
xchg
fstl
aaa
popf
call
data16
xchg
jo
sbb
addr16
adc
aas
push
es
pop
mov
add
xor
adc
and
inc
xchg
nop
mov
lods
cmp
fmull
sahf
stos
push
push
loop
mov
stos
shlb
and
or
push
leave
test
sbb
fldln2
stos
sbb
xor
and
mov
adc
push
xlat
hlt
out
xor
pop
in
pop
pop
xchg
and
fnstcw
sti
mov
xchg
mov
call
xor
xor
iret
push
int
push
mov
adcl
jmp
notb
rcrl
mov
xor
sbb
mov
push
pop
pop
and
outsl
cmp
pop
popa
das
and
mov
or
mov
dec
fnstsw
push
mov
mov
xchg
sub
sub
sbbl
xchg
loope
cmpsl
mov
mov
sahf
aas
pop
push
fildl
test
mov
fsubs
add
cwtl
mov
ret
stc
sahf
xor
aas
xor
pop
data16
inc
in
call
push
ss
jmp
cmp
jne
pushf
sbb
mov
inc
mov
shlb
fstl
repz
xor
fimull
cld
in
clc
and
or
ja
mov
imul
jo
les
scas
sub
sarl
xchg
cmp
cmp
test
lds
xchg
lcall
push
inc
jo
jle
inc
adc
addb
add
or
jecxz
outsl
or
adc
sbb
push
lods
cmpsl
jbe
mov
push
ret
mov
and
das
icebp
ret
push
int
icebp
andl
mov
aaa
jnp
outsb
pusha
jb
leave
xor
loopne
out
adc
jle
adc
int
rclb
dec
or
fnsave
mov
cltd
mov
mov
sbb
lret
mov
dec
push
insb
xchg
sahf
sbb
scas
cmpsl
jo
lds
adc
cmp
jl
mov
in
and
and
rclb
and
jl
mov
push
ja
shll
int
pop
test
xchg
mov
mov
inc
cmp
imul
pop
std
adc
and
xor
shl
mov
ljmp
aaa
mov
in
dec
call
loope
xor
or
sbb
mov
repnz
sub
inc
pop
inc
iret
or
sub
adcl
mov
xor
inc
insb
xchg
dec
fidivrs
out
shrl
inc
les
lds
or
lcall
sbb
dec
jle
adc
adc
mov
adc
xor
mov
adc
push
in
xor
push
dec
add
iret
inc
add
and
sahf
stc
sub
xor
xor
ret
mov
test
add
adc
push
int3
stc
cmp
add
nop
cli
inc
add
das
in
mov
jnp
sar
mov
push
insb
add
fs
or
lods
pop
pop
push
jno
loop
fmulp
xor
push
fsubs
jp
fmuls
cli
stc
or
movsb
ja
mov
mov
pop
pop
dec
cmp
mov
into
cwtl
mov
repz
sbb
ja
test
ljmp
sub
or
data16
jbe
lds
ljmp
sub
pop
jno
pop
add
or
jb
aam
xchg
push
push
dec
clc
dec
lods
push
lods
sbb
aaa
dec
push
add
popa
or
pop
test
in
push
cld
cmp
into
sbb
out
sub
popf
es
adc
mov
fadds
pop
cld
or
fadds
loopne
cmc
ret
mov
add
inc
sti
bound
sar
out
enterw
orl
or
jle
jnp
pusha
mov
int3
xorb
sbb
inc
mov
pop
ficompl
scas
pop
out
adc
imul
clc
xchg
daa
xor
pushf
rcr
pop
popf
mov
aad
jge
lret
or
mov
push
clc
push
mov
mov
push
int
fnsave
test
sub
pop
sarb
sbb
cmpsl
pusha
jl
sahf
repnz
pop
nop
xchg
cld
arpl
xor
dec
scas
mov
fistps
mov
ds
std
addr16
or
mov
aam
mov
in
jae
out
jae
inc
je
dec
add
shlb
jbe
pop
xchg
push
push
xchg
xor
sub
or
cmp
negl
sahf
loop
int3
pop
push
mov
lret
cmpsl
cmp
popf
xchg
adc
in
xchg
mov
pop
sti
pop
xchg
mov
lea
mov
lahf
scas
aad
data16
nop
hlt
popf
ss
sti
ja
cmp
call
sub
pop
ret
mov
jb
jno
outsb
xchg
outsl
sub
push
cmp
mov
ret
push
add
cmp
orl
testb
lds
popf
push
sub
add
pushf
out
aaa
ret
imul
jp
pop
lahf
push
push
lods
lret
pop
shll
mov
mov
ds
sub
push
mov
lea
sub
mov
out
push
mov
lea
cld
cmp
sub
fdivrs
pop
pop
call
jne
sbb
cmp
pop
mov
cmp
or
mov
ja
sub
push
aas
fimull
movsl
xchg
lahf
nop
insl
jb
or
mov
mov
cwtl
add
dec
jae
lods
xchg
cld
pop
adcb
or
cli
loope
mov
insl
xlat
stos
sbb
mov
ret
sub
pop
xchg
stos
jb
or
mov
femms
into
push
popa
ljmp
pop
xor
out
pop
in
mov
cli
das
aas
jbe
jo
les
std
mov
pop
fidivs
push
imulb
push
mov
out
inc
repz
inc
aas
jb
ret
aad
mov
nop
out
aad
pop
inc
pop
xor
shll
cmp
int3
push
int3
mov
mov
out
push
add
sub
icebp
pop
imul
into
int3
subb
out
inc
in
js
dec
fadd
jecxz
pop
insl
hlt
hlt
xor
adc
out
add
push
pop
mov
addl
stos
sub
enter
mov
cmp
pop
adcl
cmpsl
pop
xor
repz
rolb
cmp
dec
lea
and
lahf
iret
fistps
and
aam
les
dec
aad
or
dec
add
cwtl
out
sub
lret
scas
hlt
cld
fmulp
add
jge
ja
das
shl
dec
mov
adc
push
out
fstpt
pop
adc
mov
mov
mov
jle
lds
and
loope
jge
pop
xchg
cmp
addl
cmpsl
add
cmc
and
aaa
enter
cmp
mov
mov
pop
popa
into
fsubrs
test
pop
cwtl
out
or
imul
mov
stos
sbb
or
dec
push
mov
ja
push
movsl
fisttps
push
mov
les
xchg
jbe
insb
fsubs
rorb
test
push
dec
lods
jne
lds
jo
popa
or
sti
icebp
dec
pop
ss
pop
or
and
adcb
sarb
inc
aaa
jae
inc
inc
jle
jnp
cmpsb
push
js
mov
fildl
cmp
cmp
mov
testb
push
sbb
push
or
pop
push
andb
add
loop
std
and
fs
sub
ret
mov
mov
dec
call
push
adc
xchg
cmp
adc
mov
daa
sub
xor
nop
sahf
imul
adc
pushf
push
sub
and
xchg
mov
and
pop
clc
aaa
gs
jae
push
lds
int3
fdecstp
and
lods
inc
fstl
jns
xor
scas
lods
fists
jmp
rcrl
stc
add
mov
mov
dec
mov
repz
jle
xchg
out
cmpsb
mov
mov
mov
mov
and
shlb
inc
mov
fisttpll
sbb
pop
sti
outsb
pop
xchg
out
loopne
lret
jp
insb
nop
cmp
cmp
outsl
mov
and
call
adc
pop
mov
mov
iret
cmc
inc
in
cmp
cmp
or
into
nop
sbb
sub
xchg
mov
test
je
push
mov
aad
inc
xchg
xchg
lahf
add
stos
imul
repnz
add
or
cmpb
xchg
lea
and
or
icebp
call
icebp
scas
cmp
adcb
mov
out
es
stc
jecxz
fnstcw
adc
gs
in
mov
shl
mov
aam
loopne
mov
stos
add
es
imul
int3
in
dec
faddl
fdivl
rorl
into
leave
sbb
rorl
dec
xchg
push
or
data16
outsb
mov
cmc
lock
adc
clc
jne
mov
shlb
ret
xchg
jl
push
adc
addl
inc
inc
mov
xor
insb
jecxz
ss
rcl
outsl
lcall
psubq
aad
bound
iret
cmp
cmp
dec
mov
call
iret
out
cmp
roll
test
dec
jecxz
sti
xchg
xchg
aas
jmp
in
mov
movlps
popf
enter
repnz
cltd
cmp
pusha
mov
int3
stos
xchg
push
sti
addr16
dec
ror
xchg
paddusb
out
or
pop
cltd
and
push
aas
sarl
mov
add
xor
mov
sbbl
data16
xor
jnp
dec
mov
xchg
push
fldl
les
imul
es
scas
imul
inc
outsb
je
xor
call
mov
lods
imul
dec
adc
pop
dec
mov
pop
fadd
bound
mov
data16
clc
out
mov
mov
or
add
lret
adc
jmp
mov
xor
cwtl
mov
inc
mov
push
bound
mov
stos
xor
jp
dec
add
jns
das
push
jo
inc
mov
in
xchg
cld
mov
test
lret
push
das
cli
hlt
fisttpll
inc
aad
aaa
mov
ja
cli
and
cmp
dec
movsl
jl
js
sub
sbb
rol
xor
ret
hlt
loope
fwait
jns
js
out
std
mov
sbb
adc
add
mov
pop
lret
les
pop
jg
ljmp
cmp
ss
ds
pop
sarl
iret
xchg
inc
xor
shll
idivb
push
cmpsl
iret
test
jns
popa
lcall
push
push
push
sub
sarl
add
xchg
popf
adc
mov
mov
mov
dec
push
sarb
cmpsb
mov
mov
mov
fidivs
jno
dec
add
mov
mull
loope
cmpsl
es
stos
into
fdivs
pop
inc
dec
or
dec
pop
and
xchg
or
cmp
sub
jle
lods
pop
mov
andl
ss
mov
cmp
xor
pop
cwtl
pop
inc
mov
pop
dec
adc
mov
dec
mov
cmp
mov
xchg
cmp
mov
pop
jns
push
addr16
pusha
jno
arpl
xchg
sbb
cmp
test
push
in
mov
push
gs
repz
jle
rcr
ss
xor
add
jb
test
test
scas
push
lea
and
inc
das
sub
xor
movsl
stos
outsb
ss
stc
push
inc
jbe
cmp
push
cmc
mov
mov
push
adc
mov
mov
jno
inc
dec
jecxz
ss
jae
out
or
sti
loop
dec
mov
and
inc
xchg
mov
jl
xor
push
and
cmc
inc
pusha
xchg
jo
mov
cmc
fwait
idiv
and
jnp
xchg
movsl
dec
into
popl
int3
pop
notl
sub
mov
popf
adc
movsl
or
push
aam
cltd
rcll
fs
push
mov
loopne
jne
sbb
andl
loopne
lods
pop
xchg
cmp
or
cwtl
test
js
pop
cmp
inc
xchg
rorl
int3
aam
repz
mov
add
mov
inc
icebp
rcl
xchg
daa
mov
ret
mov
mov
pop
jmp
jle
and
add
xchg
test
repz
push
test
sti
xchg
jno
mov
movsb
add
push
lahf
jl
insl
dec
push
lods
lods
gs
pop
sub
xchg
test
in
call
stos
decb
dec
pop
cltd
push
and
xchg
sbb
cltd
inc
and
leave
aam
vpunpcklwd
out
repnz
push
pop
mov
mov
icebp
cmp
iret
mov
shrl
iret
pop
sti
push
es
lret
cmp
xchg
add
in
lods
test
das
movsb
xor
inc
push
add
xchg
and
jae
jg
jecxz
mov
in
jno
movsl
pusha
dec
in
adc
sub
push
mov
inc
or
nop
nop
call
pop
xchg
notl
inc
mov
add
sub
addr16
sti
fs
scas
out
fldl
movsb
mov
out
sbb
insb
aas
or
fs
iret
js
notl
std
scas
out
and
cmp
cltd
pop
push
jo
in
cmc
int3
push
mov
xor
inc
pop
daa
dec
push
add
jp
popa
sti
rclb
mov
mov
and
mov
mov
dec
lods
jp
xchg
sub
ret
icebp
notb
outsb
mov
or
addb
xchg
pop
in
and
out
cmpsl
test
js
jns
or
test
jns
add
inc
flds
adc
jg
out
cmp
push
bound
inc
cmpsl
es
call
fdivl
sub
dec
cld
aas
lods
addl
jle
sbb
aam
fcomps
movsl
lahf
cld
adc
jo
xor
jle
xchg
or
push
out
cmpsb
jnp
flds
add
cwtl
aas
inc
fwait
mov
aas
xor
rcrl
and
fsubrl
jge
test
out
dec
enter
lea
mov
mov
cs
movl
mov
dec
add
lahf
aam
xor
lods
pop
mov
mov
mov
mov
mov
lds
lods
inc
cmp
fnstsw
out
cmpsl
ficompl
inc
xor
xor
push
aam
subb
into
dec
inc
int3
mov
stos
adc
je
int
xor
sbb
xor
xor
sbbb
out
mov
adc
js
lahf
sub
push
int3
pop
sub
aas
adc
and
cmp
mov
call
pop
ret
mov
fstl
sub
xchg
aas
xchg
add
jp
stos
jbe
lret
repnz
or
aas
in
sub
test
cli
push
mov
jle
mov
mov
mov
mov
inc
pop
mov
add
push
pop
mov
inc
dec
sbb
xorl
jl
push
inc
hlt
test
and
mov
negl
pusha
pop
pushf
mov
mov
jle
std
inc
dec
sti
iret
and
adc
mov
lods
aaa
mov
fadds
nop
xchg
push
into
aam
into
add
pop
into
xor
push
cmpsl
sbb
nopl
jp
bound
fs
xchg
scas
call
push
xor
mov
dec
pop
adc
mov
stos
lock
mov
xor
lock
loopne
pushf
cmp
stc
mov
jg
or
scas
int3
adc
dec
leave
pop
movsl
hlt
out
in
xchg
inc
rclb
adc
outsl
mov
or
push
std
mov
leave
icebp
push
insb
scas
and
inc
rorl
fimull
xchg
out
fwait
insl
icebp
and
cmpb
xchg
mov
cwtl
ljmp
mov
sarb
fimuls
das
pop
movsb
mov
add
shlb
stos
bound
inc
cmpsb
scas
jecxz
mov
mov
call
xchg
mov
push
or
mov
ret
bound
push
mov
jae
cltd
ret
test
fldenv
in
lock
int3
lret
or
test
cmp
out
movsb
cmc
das
jbe
movsb
xchg
es
jbe
cmc
sub
xchg
cmc
xchg
mov
lret
pop
into
in
pop
dec
mov
lret
xchg
fmull
je
mov
mov
mov
inc
jmp
sarb
imul
xchg
adc
xor
xor
scas
jno
jmp
pop
jnp
mov
push
ds
pop
lock
test
outsl
mov
ds
lock
adc
xor
mov
lret
test
stos
sub
sub
pop
mov
add
enter
in
rolb
es
adc
push
mov
pcmpeqw
jno
mov
fwait
sbb
adc
ja
fwait
and
mov
je
xchg
repnz
call
sahf
and
rolb
aaa
sub
sbb
js
mov
and
or
xchg
cmp
sub
clc
movsl
ret
push
test
mov
push
dec
xchg
dec
jae
lea
fwait
je
xchg
cmp
and
push
test
loopne
or
lahf
cmp
iret
loope
jmp
adcl
jbe
sub
call
pop
dec
sahf
push
dec
and
xchg
ret
ret
jge
aam
pop
push
cld
sbb
push
or
loopne
inc
dec
jg
sub
js
xchg
xor
hlt
test
notl
adc
lds
xchg
in
incl
mov
jne
push
scas
repz
ss
pop
call
shlb
dec
xor
jo
mov
popa
packuswb
ja
insb
ficoms
pop
jecxz
movsl
inc
sub
lock
jno
add
push
mov
jno
shl
or
jle
sub
or
push
inc
sbb
out
ss
xlat
mov
cmp
scas
sub
inc
adc
xor
movsb
or
pop
nop
test
bound
xor
jg
test
or
je
rcr
fs
adc
or
mov
lods
and
ljmp
addr16
or
imul
iret
sti
jl
lock
add
sub
xor
add
cwtl
adc
inc
je
insl
jge
loop
gs
out
sub
push
nop
mov
lea
xor
adc
jecxz
mov
pop
adc
stos
cmp
dec
lahf
xchg
xor
pop
inc
sarl
jecxz
fsubl
pusha
jno
mov
loop
adc
aad
insl
lods
fidivl
jge
or
xlat
xor
mov
fwait
pop
movsw
xchg
mov
pop
inc
jnp
lahf
dec
mov
sub
std
add
sbb
dec
stc
enter
and
pop
mov
cmpsb
cmp
mov
mov
fnsave
decb
sbb
das
aas
dec
mov
ds
or
xor
fld
pop
dec
add
mov
imul
mov
sbb
dec
push
mov
cmp
cmp
lods
fcomp
cmpl
in
pop
fimull
popa
sbb
pop
mov
gs
shrb
mov
adc
mov
dec
fistpll
xchg
in
std
add
or
fwait
nop
inc
push
xlat
mov
lods
popf
ret
pop
sbb
jecxz
arpl
and
rcll
sbbl
mov
std
mov
mov
push
subb
cli
add
nop
imul
stc
mov
repz
lret
add
and
sarb
xor
mov
stos
inc
ret
dec
xchg
lea
in
scas
cld
cmp
cmp
inc
lret
fcmovbe
aaa
aaa
push
mov
push
xchg
movsl
out
pushf
pusha
fldl
inc
cmp
or
testb
mov
fwait
mov
sub
push
mov
jns
push
cmp
scas
inc
sub
mov
addr16
xor
cmp
dec
inc
sbb
or
fidivl
xor
or
in
sarb
jmp
jge
rcr
movsl
pop
mov
sub
fcomp
ficoms
lds
ljmp
sub
mov
sbb
adc
or
aas
lods
hlt
mov
ret
and
push
cmc
adc
nop
lahf
xchg
mov
subl
jns
jecxz
mov
cmpsl
divb
shll
lcall
sub
imul
jmp
in
stc
mov
cmc
leave
jl
repnz
jl
jno
cmc
or
aam
lret
and
jmp
je
pop
fsubrs
cld
movsb
popa
xor
ds
cmp
or
cmc
xchg
out
ret
cmp
jp
stos
cmpsl
push
jbe
leave
clc
mov
popf
pop
in
dec
dec
or
nop
sub
mov
icebp
shufps
test
dec
in
jns
lea
and
fsts
inc
inc
out
or
mov
fildll
fsubrs
add
aam
jecxz
inc
or
pop
mov
sub
xor
sub
lret
mov
jmp
loopne
subl
fnsave
pop
xchg
push
icebp
sub
push
arpl
add
test
push
jns
loopne
scas
not
shlb
inc
mov
adc
xor
mov
sahf
aam
and
int
push
das
mov
mov
xor
inc
ss
mov
or
push
sarb
or
scas
mov
add
ja
xchg
sbb
inc
lods
jl
or
rorl
add
jmp
scas
xor
aas
negl
popf
add
sahf
jns
call
int3
insl
lods
jne
sub
ljmp
cmp
in
popf
pushaw
pop
in
and
ret
stc
cwtl
in
dec
cmp
cmp
aas
mov
jnp
xchg
popf
ljmp
or
sbb
jg
pop
int3
movsb
lcall
jecxz
xor
push
cmp
aaa
push
rcrl
or
and
xchg
pop
push
xorl
cmc
jecxz
cmp
cli
addr16
in
sub
cmp
push
and
or
add
imul
xor
ss
je
xor
int3
movsb
cs
push
shl
xor
shll
addr16
cmp
dec
lea
js
in
pop
xchg
stc
pop
sub
loop
nop
jmp
cmp
mov
loopne
or
jbe
dec
sub
jecxz
push
popl
enter
insb
test
shr
jecxz
push
cmpsl
orl
cmp
divb
push
js
insb
out
xchg
xchg
xor
push
jo
orl
inc
std
xchg
rcr
mov
popa
in
xchg
mov
xor
push
and
sub
xchg
nop
shl
jno
mov
mov
push
repz
jecxz
sar
push
nop
jmp
xor
fisubrs
push
mov
cli
lods
in
inc
jbe
ja
or
or
into
les
mov
push
lret
lods
cmp
mov
insb
cmp
jle
adc
fstpt
ljmp
jmp
lea
scas
pop
fwait
test
cmp
mov
popa
pushf
xchg
dec
out
xchg
push
push
mov
mov
fsts
xor
in
sbb
inc
or
cltd
cli
hlt
or
cmp
addb
cld
imul
mov
mov
ds
or
jle
stos
adcb
xor
or
xor
scas
jae
sub
pop
and
xor
mov
push
mov
xor
mov
gs
push
scas
adc
ss
sub
das
xchg
lea
and
mov
leave
rcrl
ficompl
lret
es
jno
dec
subb
std
push
jecxz
andb
lods
push
lahf
lret
js
shrb
sub
mov
push
push
push
insl
sub
adc
rclb
push
dec
pop
dec
addb
ret
pop
movsl
jg
sahf
pushw
pop
mov
std
les
mov
mov
cli
lret
outsb
sbb
shlb
les
mov
xchg
les
aam
loop
jne
enter
popf
fisubrl
inc
cs
pop
and
jb
jge
call
lret
shr
cs
lcall
bound
push
out
pusha
fiadds
insb
or
mov
cmpsb
mov
stc
shlb
pushf
dec
loope
inc
add
imul
jle
xchg
jne
aaa
scas
pusha
sbb
cmpsl
dec
sbb
mov
and
mov
movl
jg
sub
adc
mov
or
divb
popa
lret
mov
loopne
mov
jecxz
jne
mov
fisubs
cmpsb
stos
inc
sbb
mov
filds
sub
adc
push
jne
jge
mov
cltd
add
inc
loop
sub
inc
cmpsl
mov
das
adc
sub
inc
std
insl
mov
add
icebp
push
test
xor
psraw
mov
ret
lds
lret
lcall
push
cmp
mov
xchg
mov
cli
je
adc
rorb
sub
lods
mov
jbe
xchg
out
sbb
jg
pop
nop
aam
mov
push
sti
xchg
loopne
test
dec
insb
dec
jnp
out
into
add
add
loop
aam
movsl
arpl
int
cli
push
fcmovb
cmp
stos
sbb
cli
xor
sahf
sti
fists
ja
mov
addr16
cld
xchg
add
aaa
sub
rcll
shlb
push
add
xchg
popl
cmc
pop
lods
je
dec
jecxz
adc
leave
ljmp
scas
dec
dec
iret
jp
pop
in
xchg
std
or
add
jecxz
ljmp
imul
sbb
or
or
pop
pushf
lret
mov
add
and
pop
pop
inc
jl
sahf
sbb
cmp
out
das
xchg
cmp
pop
sub
xchg
sbb
jne
adc
mov
xor
inc
dec
jb
test
add
stos
lock
push
xchg
jmp
insl
test
shll
aas
sub
out
scas
aas
test
jp
push
dec
fwait
xor
mov
mov
imul
loopne
lock
faddl
cmp
pop
lcall
data16
jecxz
dec
or
and
mov
add
fsubrl
jle
mov
test
outsl
outsb
insl
test
addr16
dec
mov
push
or
pop
fdivr
fnstsw
adc
stos
aaa
int
imull
aas
daa
lahf
imul
enter
out
es
lock
lahf
scas
outsb
pop
inc
dec
jp
push
xchg
test
mov
and
fwait
daa
dec
dec
das
push
xor
arpl
and
cli
fisubl
push
and
and
jecxz
jle
in
lret
imul
pop
sbb
cmpsb
push
out
cmp
insb
sahf
lret
fmulp
int3
pop
shrb
xchg
fbld
or
das
cmp
outsl
mov
aam
inc
cmpsb
movntps
loop
into
push
add
mov
pop
push
in
inc
popw
inc
orl
cmp
push
sbb
add
pop
and
fisttpl
addr16
jecxz
dec
and
fdiv
repz
sahf
and
mov
ljmp
and
cld
stos
mov
xor
sub
sar
mov
outsl
jmp
fs
sub
cmp
hlt
pop
jbe
xchg
iret
js
sbb
pop
and
xchg
or
pop
inc
fdivr
cmpsb
ljmp
jno
push
jne
xchg
cmpsl
negb
add
rcl
inc
inc
push
mov
lods
lods
lcall
adc
mov
add
shlb
scas
inc
sub
loopne
push
nop
mov
xor
int
scas
out
out
mov
ds
cltd
add
in
sub
out
sahf
lods
cmp
mov
and
mov
adc
in
or
iret
mov
xchg
ja
inc
bound
push
dec
inc
pop
les
adc
insl
arpl
insb
jnp,pt
je
pop
imul
jp
aad
lods
fiadds
enter
lds
sub
aaa
xchg
pop
mov
inc
rclb
xchg
subb
ret
push
js
jp
pusha
cmp
cli
sbb
ret
inc
mov
xchg
out
cwtl
push
xchg
movsb
or
cmc
and
fsub
or
and
or
mov
mov
jbe
daa
loop
xor
shl
cs
add
cmpb
mov
push
decb
xorb
xchg
mov
xchg
scas
decl
fildll
faddl
js
inc
jbe
mov
lock
outsb
push
push
jne
push
xlat
stos
fcmovb
and
dec
or
mov
clc
cmp
outsl
outsl
pop
push
fucom
and
and
or
aas
mov
lods
cli
jae
dec
rcll
pop
sub
push
jb
scas
jp
sbb
adc
loope
outsb
mov
outsb
insb
clc
mov
jle
sahf
pop
lahf
adc
jle
add
cld
push
mov
push
push
fs
and
xor
out
scas
pop
adc
pop
push
jmp
outsl
cli
xchg
jl
insb
mull
sub
stc
pop
inc
xorb
fldcw
cltd
mov
xchg
cmpsl
insl
repz
sub
push
mov
or
ret
xchg
push
lock
popf
or
mov
outsb
mov
lods
and
xor
cmpsl
mov
jae
adc
jns
fistpl
fsubrl
fwait
adc
rcrb
cmc
jb
fs
in
sub
dec
jnp
enter
into
xor
push
mov
out
sarl
cmc
mov
or
test
xor
push
cmp
and
std
fstl
push
sub
les
mov
insl
xchg
aaa
dec
lds
pop
lods
or
pop
aad
mov
jno
cmp
stos
arpl
cmpb
fstl
add
mov
cmpsl
test
inc
inc
outsb
ss
cmovge
imull
mov
pop
jno
push
adc
jno
leave
sbb
adc
es
repnz
lahf
mov
rol
inc
out
lods
mov
shll
imul
rol
xor
clc
push
mov
adc
pop
dec
mov
pop
mov
push
pop
sub
adcb
xchg
adc
xchg
push
movsb
inc
mov
sub
add
cmpsl
dec
and
and
out
dec
ret
push
int
aas
or
js
dec
insb
aas
movsb
iret
popa
mov
imul
adc
dec
sti
je
aad
xor
pop
clc
je
test
pop
insl
es
and
jg
adc
cld
je
leave
loope
xchg
sub
jle
std
data16
dec
movsl
push
adc
loope
and
hlt
jecxz
xchg
xchg
jp
je
nop
or
in
fs
popf
mov
add
sbb
aad
int3
sbb
adc
stos
jo
xchg
cmp
cmp
cmp
jae
add
mov
insb
pop
outsb
call
mov
sub
cs
pop
sbb
out
xor
sub
xchg
dec
mov
mov
pop
dec
rcrb
bndstx
xchg
jne
cmp
and
lea
js
sub
aaa
add
cli
mov
sar
xchg
jne
rcll
lods
cmp
xchg
push
mov
pop
lcall
sbb
jl
popa
divb
cs
cmpsb
shll
jns
pop
rolb
pop
fcomi
leave
lds
push
in
ss
dec
scas
enter
test
int3
and
lahf
or
push
sti
or
pop
insl
mov
int3
dec
es
dec
sub
js
sub
shll
dec
xchg
je
jecxz
mov
push
pop
mov
outsl
fmull
aam
lds
dec
or
loop
mov
mov
or
sub
mov
int
push
or
mov
call
push
rorl
sub
ret
lds
scas
sbb
mov
adc
and
and
push
cmp
mov
mov
loop
shll
push
cmp
orl
mov
bound
dec
gs
sbb
and
fwait
sbbb
pushf
mov
push
shl
mov
divb
mov
mov
push
insb
fucom
add
notb
fwait
outsb
mov
adc
jl
xor
mov
lods
fsubrl
add
or
movb
pop
ljmp
cmp
ret
push
xchg
imul
jmp
fwait
cmpsb
cmp
loop
clc
sub
xor
shl
ljmp
or
jge
pop
fxch
push
aas
stos
arpl
imul
enter
add
sub
dec
lods
arpl
mov
iret
jl
sti
inc
push
in
stos
mov
jne
pop
outsl
inc
inc
xchg
or
movsl
pop
fcoms
ja
lods
inc
add
in
fxch
jnp
inc
push
dec
cld
negb
cmp
dec
out
lock
xlat
cmpsl
fstl
xchg
jno
xor
lea
stos
test
pop
fisubrs
inc
les
pop
cwtl
dec
inc
mov
xor
dec
ret
inc
pop
shl
inc
push
fidivl
and
and
je
clts
lds
xor
test
add
inc
xchg
xlat
dec
cli
in
mov
js
popf
add
dec
xchg
in
negb
enter
cs
xchg
inc
jne
and
inc
mov
daa
cmc
mov
sub
cmp
sub
push
push
inc
scas
stc
and
es
lock
push
push
lahf
jge
lea
rolb
and
sbb
mov
mov
aas
xchg
or
or
je
jae
arpl
mov
add
in
or
cmc
pop
xlat
arpl
insl
jne
add
js
flds
adc
jecxz
hlt
repnz
xchg
pop
dec
mov
xor
popf
sbb
push
sub
test
adc
inc
adc
or
mov
or
sbb
in
dec
mov
mov
ss
jno
cltd
insl
sar
sahf
and
outsl
dec
mov
pop
cmpsb
adc
add
cmp
repnz
dec
cmpsb
sbb
es
cli
out
cs
jecxz
pop
jns
jmp
xchg
mov
fstps
aam
push
nop
jmp
jbe
pop
or
int
int3
dec
insl
jecxz
ja,pt
addr16
push
sub
add
xor
add
mov
cmpsl
aad
push
push
or
xchg
and
push
jp
movl
and
es
mov
push
add
fcmovnb
lahf
rcrb
or
mov
mov
testl
push
xchg
out
fs
xor
scas
repz
jle
addb
mov
sub
out
clc
ds
in
data16
sub
inc
mov
adc
out
outsl
cmp
adc
lea
or
or
sbb
push
mov
sub
push
sbb
add
xchg
cs
and
int3
lods
push
mov
xchg
testb
fidivl
and
sbb
notl
ja
icebp
xor
test
mov
push
mov
test
pop
lret
xchg
push
das
mov
mov
and
call
push
sbbl
ficoms
repz
push
loopne
ds
or
ret
mov
inc
fsubrs
cld
cli
loop
leave
es
idivl
cmp
orl
lds
jp
test
cltd
jecxz
out
adc
sbb
mov
pop
adcb
push
sub
push
jl
stos
xor
sub
jl
mov
outsb
jl
leave
scas
jbe
lret
je
es
push
iret
add
jb
aas
or
jg
sbb
mov
xor
test
adc
insw
or
sbb
mov
aas
clc
aam
lcall
or
jno
push
in
imul
xor
xor
pop
gs
in
out
call
cmp
or
aad
sahf
xchg
les
mov
pop
cmp
inc
jns
testl
xchg
sub
test
sti
xchg
jl
frstor
mov
out
mov
or
inc
cmpsb
xor
cmp
mov
in
jno
lahf
pushf
rol
ja
push
fs
and
push
mov
lods
sub
sub
test
pop
jno
mov
nop
or
or
sub
leave
dec
ss
xchg
xor
orb
mov
cli
clc
movsl
popf
mov
repnz
inc
shr
fisubs
lea
jae
inc
in
push
into
mov
mov
mov
and
jmp
xchg
es
inc
dec
sbb
add
setne
mov
sbb
rcl
imul
lcall
mov
jae
aaa
fdivrs
sub
clc
or
nop
push
js
fldt
jnp
mov
shrl
push
dec
sub
cli
loope
lds
xchg
aaa
or
adc
outsl
imul
das
jecxz
sahf
test
inc
dec
ret
shlb
xor
mov
pop
jb
cwtl
arpl
pushf
outsl
ds
fmul
in
or
ss
loopne
pop
std
cld
loope
add
sbb
mov
inc
or
ss
je
mov
popf
sub
movsb
mov
fmuls
jg
mov
xchg
sub
shr
jmp
in
mov
insl
ret
sbb
jo
or
stos
adc
and
or
fcomip
lcall
adc
xor
scas
icebp
mov
int
ret
test
repz
lods
cmc
pop
pusha
mov
mov
lret
inc
and
jle
mov
jne
jmp
out
icebp
xlat
cltd
dec
mov
or
xchg
std
in
fs
jns
cwtl
repnz
mov
push
lock
outsb
mov
movsb
xorb
outsb
cs
decl
mov
lds
in
pop
dec
dec
imul
dec
sbb
sub
icebp
jne
inc
dec
out
cld
dec
in
rorl
mov
cs
sub
clc
cmp
mov
in
ja
ja
pusha
imul
popf
inc
ffreep
adc
imul
pop
insb
pop
mov
aas
sbb
movsb
in
pop
icebp
cmp
shrl
jne
jbe
cld
jg
es
je
dec
inc
insl
in
out
add
inc
mov
cmp
mov
gs
outsl
push
movsb
decb
cli
xchg
push
ret
repz
sbb
out
lods
aad
add
mov
adc
popa
mov
inc
xor
sahf
dec
push
lods
scas
cmp
inc
sub
mov
dec
add
adc
cmpsl
jle
orl
add
push
mov
icebp
mov
fistpl
inc
pop
pushf
ret
aad
fists
int
jle
div
rep
jle
and
fwait
fwait
jne
into
dec
sti
cmpsb
push
outsb
dec
add
scas
in
mov
sbb
sub
jo
das
cli
jecxz
shlb
xchg
testb
lock
push
andb
je
or
aad
and
pop
or
push
cs
data16
enter
loope
xlat
jle
jno
mov
xor
imul
xor
xor
jecxz
sub
mov
loope
mov
fwait
inc
push
test
cwtl
pop
push
movsb
data16
mov
loopne
sub
dec
add
sbb
mov
popf
test
or
adc
fidivl
insl
sbb
jne
movsb
sarb
inc
dec
jnp
movsb
mov
inc
dec
dec
mov
pushf
xchg
dec
pushl
and
sti
repnz
aam
mov
pushl
or
punpckldq
lock
sarb
xlat
jnp
mov
int3
xlat
int3
out
cmp
mov
inc
imul
sti
mov
scas
add
cmc
cld
lahf
sbbl
pushw
and
adc
data16
adc
aad
adc
lea
in
cli
mov
dec
cmp
vunpcklps
loop
test
cli
ss
scas
dec
fadd
pushf
test
loopne
adcb
dec
pop
mov
dec
push
mov
cmpsl
les
jl
sub
mov
mov
mov
adc
push
xor
push
repz
and
lods
and
das
or
add
inc
imul
fstl
mov
sub
mov
aas
lds
fistl
leave
jnp
fists
add
pop
js
mov
outsl
and
stos
lret
lods
js
mov
fiadds
jl
jmp
push
lahf
pop
idivb
mov
mov
cs
mov
andb
fcoms
ficoms
jle
int
pop
clc
mov
pop
adc
data16
push
shll
adcl
test
loope
jns
xchg
out
repnz
std
inc
dec
xor
xor
xchg
push
lcall
inc
push
int3
and
push
cmp
rcll
sbb
xor
stc
fildl
pop
divb
ret
xchg
mov
test
xchg
pxor
sbb
inc
dec
in
jecxz
je
int
mov
loop
sub
and
mov
jge
mov
sub
daa
fs
pop
call
pop
aam
mov
ds
add
jo
aad
inc
out
and
out
dec
andb
lea
sbb
bound
fnsave
lahf
xchg
mov
clc
sub
ret
fisttpll
xchg
testl
stc
or
imul
dec
jle
jp
leave
jno
pop
faddp
cld
cmpsl
xor
call
lret
mov
xchg
les
cwtl
das
flds
push
jmp
xchg
push
pushf
fists
cmp
je
mov
roll
mov
mov
addr16
cmp
ljmp
mov
lret
adc
outsl
iret
xor
xchg
aas
fnstenv
push
popf
pop
or
out
sbbl
stc
leave
jnp
push
idiv
add
push
cwtl
and
lcall
and
lahf
hlt
dec
jge
cmp
mov
fistpll
add
mov
inc
cmp
lea
inc
stos
sbb
mov
in
outsl
fdivrl
and
dec
scas
call
mov
cmpsl
cmpsb
and
je
jns
rclb
lret
mov
and
ret
xor
jecxz
cmpsl
and
mov
or
mov
or
jg
push
push
test
add
inc
inc
mov
sbb
fists
mov
pop
ret
and
xchg
out
dec
bound
rcll
popf
divb
aam
push
add
jne
lds
loopne
ret
cld
jle
dec
inc
xor
negb
xor
dec
dec
add
lock
sbb
jbe
mov
pop
cwtl
mov
cmpb
xlat
pushf
xor
rcll
test
aam
adc
sbb
clc
inc
add
lret
cmpb
adc
xchg
adc
or
mov
fstl
iret
push
outsl
mov
add
pand
test
lcall
or
xor
aaa
jno
cld
xor
loopne
push
xorb
sub
mov
add
sti
int3
lret
dec
push
clc
xchg
push
aam
outsb
pushf
insb
es
add
inc
add
popf
mov
lret
std
dec
and
repnz
mov
and
filds
xchg
cltd
xchg
pop
xor
lods
pop
inc
and
hlt
mov
pusha
fistl
push
iret
mov
icebp
out
insb
or
mov
pop
jl
ds
hlt
in
add
add
dec
movsb
sti
and
adcl
xchg
jbe
jmp
test
xchg
in
sbb
fsubl
mov
cli
dec
mov
xor
stos
push
shll
sub
enter
mov
cmp
xchg
mov
js
faddl
popf
xchg
test
adc
aas
sub
sbb
gs
clc
jb
xchg
sbb
mov
stos
push
pop
out
mov
adc
iret
cmc
mov
mov
push
test
in
scas
lock
push
ja
mov
pop
push
jnp
loope
in
or
xchg
cmpb
dec
jg
add
fldl2t
push
imul
pushf
test
jge
fisttpll
mov
ss
or
adc
dec
push
bound
jge
nop
xchg
insl
jecxz
popa
and
pushf
movsb
cmp
shl
jns
sbb
or
adc
jae
cltd
jne
dec
into
std
sbbb
rcr
xchg
rolb
in
in
scas
mov
clc
mov
xchg
sub
ficomps
cmc
xorl
movsb
mov
rcr
std
cld
push
mov
and
cmp
dec
aaa
jo
loopne
and
xchg
pop
dec
cli
xor
scas
cmp
push
adc
repz
lock
cmc
jmp
int
ljmp
jg
sbb
ja
sub
adc
mov
mov
push
sahf
push
add
push
cmp
icebp
pop
popf
and
inc
stc
dec
in
cs
sbb
cmp
mov
divl
pushf
mov
ja
icebp
mov
rcll
ret
mov
std
imulb
mov
popa
scas
dec
pop
std
pop
inc
add
xor
cmp
mov
xchg
rclb
pushf
aad
shl
mov
pop
mov
insb
sub
aaa
mov
testl
adc
popa
add
icebp
dec
lock
xor
in
inc
mov
mov
sbb
jmp
popf
push
push
add
add
in
xchg
jbe
loope
dec
gs
imul
inc
in
lret
inc
pop
lock
stc
test
out
popa
mov
iret
push
bound
dec
push
add
inc
jns
push
sarb
inc
in
inc
mov
lahf
lret
mov
and
jecxz
inc
mov
aaa
sbbl
leave
lret
mov
push
add
cltd
xor
sub
addr16
clc
and
sbb
mov
cmpl
lcall
cmc
in
jmp
ret
xchg
cli
and
insl
xchg
mov
jae
sti
daa
es
shrl
cltd
nop
push
out
cmp
inc
icebp
mov
xchg
ljmp
sti
mov
mov
push
hlt
int
mov
push
cmp
cmp
lahf
cltd
push
fstpt
lds
pop
sti
fcompl
mov
int
adc
xchg
or
int
pop
les
mov
imul
inc
xchg
in
jg
and
jnp
inc
arpl
push
icebp
push
cmp
inc
idivl
loopne
mov
ja
stc
inc
add
inc
xchg
fs
loop
mov
sbb
and
sbb
popa
adc
adc
cli
aad
dec
pop
push
mov
xor
mov
pop
jg
pushf
movsb
add
push
push
and
or
es
and
punpcklbw
cltd
mov
pop
inc
dec
mov
mov
dec
shll
mov
push
into
xchg
loopne
dec
fcmovne
dec
pop
push
dec
lds
xor
aam
in
and
pop
je
fistpll
mov
xchg
fists
mov
int
mov
mov
test
addr16
nop
jb
lcall
jo
ljmp
or
outsb
lret
push
mov
dec
ret
aaa
sub
mov
outsb
mov
loope
xchg
or
ret
pop
jp
out
pusha
lds
mov
push
xchg
outsb
jle
stos
add
sub
call
push
sbb
fs
mov
sub
mov
cmp
aam
inc
scas
cmp
mov
cmc
sub
jns
xchg
or
push
and
dec
pop
cltd
cltd
xchg
mov
xchg
sub
sub
cmp
mov
lods
js
leave
insl
je
test
imul
mov
and
mov
hlt
mov
aam
push
xchg
fcompp
adc
aas
sti
clc
mov
xchg
or
sbb
xchg
fbld
mov
sbb
aad
ror
clc
rcll
imul
xchg
dec
cmpsb
icebp
bound
shll
jbe
subb
xchg
std
test
leave
inc
and
adc
or
and
mov
adc
add
push
add
jmp
mov
addr16
xor
sti
mov
sub
hlt
cmc
pop
pusha
sub
cmp
insl
mov
sub
sarl
test
or
leave
push
xchg
xchg
cmp
dec
dec
push
add
xchg
loop
jg
xlat
repnz
inc
mov
jbe
bound
mov
out
js
mov
idivl
sbb
cmp
push
sub
loopne
or
or
in
inc
xorb
pusha
sub
repz
loope
dec
imul
aas
les
inc
or
rcrl
add
mulb
adc
aam
push
jne
pusha
arpl
and
or
or
and
orb
outsl
and
inc
sbb
push
mov
and
scas
iret
pop
pop
ret
jae
add
inc
jg
push
mov
enter
jg
test
add
addr16
or
jp
cmp
cmp
add
leave
jno
cmp
dec
pop
lea
add
inc
call
scas
pop
mov
addl
add
lret
dec
push
sbb
xor
pop
push
mov
arpl
push
lds
std
sarl
fs
xchg
nop
pop
aas
shl
jmp
lret
jb
loopne
mov
aad
bound
insb
push
add
xchg
int
in
inc
cmp
ds
outsl
cli
in
scas
cmpsl
rcr
add
xchg
push
jp
dec
jle
mov
jno
pop
mov
mov
ret
lret
in
mov
repnz
mov
and
or
xor
xor
ret
cmp
sti
das
sub
test
jp
scas
rol
xchg
mov
add
insl
das
movsl
leave
fsubrl
ss
xchg
pop
cld
push
push
fdivs
adc
cwtl
out
movsl
pop
xchg
adc
adc
mov
dec
pop
popf
loopne
insb
vminsd
cmpsb
and
addr16
sub
in
push
xchg
inc
test
in
loopne
imul
je
mov
shll
negb
add
sbb
and
pop
jg
push
dec
clc
fwait
aaa
inc
xchg
loopne
popf
cmc
in
mov
lea
xor
mov
in
xchg
aaa
jmp
jnp
dec
shrl
adcb
cs
inc
dec
mov
mov
mov
pop
test
jmp
mov
fimuls
pop
mov
movsb
jecxz
cld
aaa
out
in
movsl
mov
mov
pop
or
insl
and
adc
jo
push
adc
popa
cltd
cmpsl
movsl
out
sub
push
and
dec
pop
push
pop
push
insb
jo
movd
and
pop
add
or
outsb
sarb
mov
mov
cmp
pusha
pop
gs
adc
inc
and
sub
sub
shrl
adc
xchg
xor
dec
push
in
es
jg
stc
mov
dec
sub
or
mov
mov
loopne
ljmp
inc
mov
inc
out
jbe
xchg
xchg
insl
xchg
jne
test
sub
jg
sub
xchg
xor
shll
leave
mov
cmp
xchg
adc
add
mov
int3
sub
jmp
mov
push
lret
pop
lret
jmp
pop
add
imull
stos
mov
pusha
and
addr16
fwait
roll
subb
or
pavgw
or
inc
lcall
mov
imul
jnp
bswap
inc
xor
in
pop
cmpb
push
push
jo
pushf
mov
sbb
test
xor
pop
hlt
mov
jle
shll
push
dec
adcl
cmp
shlb
add
sbb
mov
add
add
das
inc
pop
lret
cld
outsl
roll
sub
fldenv
mov
or
outsl
rorb
adc
push
call
inc
xor
xor
push
addr16
add
mov
xlat
pop
pop
adc
aaa
add
xorl
dec
sbb
mov
jnp
leave
mov
stos
imul
repz
ds
xor
dec
cli
inc
pop
mov
lods
dec
push
fildll
gs
mov
adc
loop
jle
xchg
loope
jp
ljmp
inc
dec
andl
pop
inc
test
pop
cs
mov
mov
mov
xor
push
enter
scas
add
fsubrl
push
cmp
pop
test
scas
fidivrs
mov
cmp
sbb
test
cs
sbb
mov
push
push
xchg
mov
add
aas
rcrb
push
outsl
cmp
repz
mov
pop
loopne
push
aad
stos
xchg
ficoms
jp
mov
pop
sub
sub
xchg
jmp
insb
add
jne
iret
sar
mov
add
mov
insl
outsl
sub
mov
sub
or
jp
pshufw
xor
jge
out
in
jbe
jbe
shl
rcrb
inc
ljmp
jns
pop
sti
rolb
adc
mov
lret
push
mov
sub
lods
std
fidivl
icebp
cmp
dec
cltd
cmpsl
sbb
fistpl
in
fdivrp
and
dec
loop
leave
push
pop
mov
sbb
xchg
clc
cld
mov
dec
out
xchg
inc
in
aaa
test
nop
xchg
sbb
push
shrb
sub
add
xchg
sbb
jp
jg
rcrb
push
js
repz
mov
mov
cmp
addb
xchg
push
in
inc
cltd
mov
test
dec
int
test
pop
push
daa
mov
imul
push
je
xchg
and
mov
movsl
and
subb
repz
in
inc
les
adc
ljmp
push
push
and
inc
loopne
push
mov
xchg
jno
mov
cmp
mov
push
pop
int
stos
jmp
frstor
jmp
xchg
inc
pop
imul
xchg
mov
fs
inc
dec
es
pop
push
fldl
pop
aaa
cld
push
test
push
stos
ss
or
icebp
notb
sti
popf
mov
aam
stos
push
inc
mov
rorl
adc
pop
ljmp
mov
pop
and
cmp
jae
xchg
and
and
aad
mov
fsts
mov
xchg
test
ret
movl
dec
mov
jmp
sahf
mov
inc
repnz
mov
add
addr16
inc
push
pop
and
push
ss
mov
lahf
ss
pop
gs
push
iret
mov
fneni(8087
ficoms
je
xchg
data16
pop
scas
jno
and
sbb
cmp
sub
stc
lods
xor
rcr
in
mov
and
dec
clc
cmp
lcall
sti
aaa
roll
push
jns
insl
icebp
sahf
imul
pop
fiaddl
jbe
and
int
arpl
mov
dec
pop
mov
in
mov
aad
lea
mov
xor
pop
adc
adc
leave
xchg
repnz
push
ficomps
orb
fists
push
inc
xor
call
pop
dec
adc
xchg
notl
int
pop
insb
xlat
push
add
popf
or
inc
mov
mov
mov
mov
sub
ret
sbb
lods
repz
or
add
xchg
shll
testb
pop
cwtl
inc
scas
cs
mov
out
scas
push
sbb
push
movsl
into
cmp
pop
sbb
adc
sub
call
jns
sub
jge
xchg
dec
add
inc
jne
jns
xchg
aas
pcmpeqw
ficompl
addb
jge
es
addb
xchg
xor
clc
ljmp
sahf
arpl
mov
enter
dec
jo
push
and
xchg
ret
popa
cmp
xor
dec
jmp
pop
in
imul
iret
or
addb
cli
stos
push
int3
arpl
mov
and
cmpsl
jb
jo
shlb
mov
movsb
mov
or
add
imul
push
pop
add
pop
mov
pop
push
orl
jbe
popf
adcb
xchg
lods
adc
and
insb
lock
lock
mov
popa
sub
push
mov
adc
add
add
dec
mov
mov
lods
std
rcrl
ljmp
pusha
js
out
pop
test
mov
testb
lahf
jmp
loopne
sub
add
mov
js
ja
jle
loopne
jp
inc
stos
pextrw
mov
enter
insl
sbb
scas
cs
mov
mov
jg
dec
test
es
popa
cltd
test
jmp
mov
mov
inc
pop
orl
jno
cld
add
xchg
adc
ror
dec
xchg
dec
add
shrl
js
push
mov
lcall
mov
pushw
leave
push
xor
add
lea
inc
pop
jbe
push
push
sbb
and
or
dec
mov
into
adc
jle
cmp
and
pop
popa
stos
mov
mov
repz
loop
push
xor
out
add
cmp
mov
fs
insb
repz
mov
outsb
fstp
mov
add
mov
ja
cli
outsl
xor
mov
push
lock
lret
or
lcall
cmp
clc
push
push
jae
xchg
iret
test
jge
adc
loope
test
lahf
dec
cmp
jo
mov
jo
sbb
pop
shll
push
js
or
in
inc
or
xchg
loop
mov
icebp
pop
bound
incl
std
and
mov
int3
mov
xor
sbb
or
add
lock
popf
add
or
cmpsl
enter
in
lcall
add
sub
xor
sub
pop
xor
lods
jmp
add
mov
lds
sub
or
sub
daa
jl
icebp
lret
sahf
test
sbb
fcoml
inc
outsl
mov
ss
adc
mov
nop
pop
or
test
xchg
in
mov
cmpsl
sarl
icebp
xor
mov
mov
shlb
cmp
gs
cmpsb
xchg
push
push
bound
mov
cmp
xor
pop
or
mov
leave
xorl
je
pop
int
dec
sbb
xor
inc
inc
add
std
subb
or
enter
push
sahf
inc
movsl
dec
daa
enter
jp
adc
inc
movsl
cmp
pushf
push
test
mov
sub
cmp
mov
sti
mov
xchg
mov
hlt
imul
repnz
aam
enter
mov
stos
mov
notb
fiadds
xor
and
xchg
into
push
movsb
sar
rolb
jne
ds
fidivs
rcrl
push
sahf
push
call
cltd
mov
mov
pop
cmpsb
push
pop
cmc
testl
adc
out
mov
std
mov
or
add
stos
inc
dec
push
push
or
mov
mov
pop
jmp
dec
ja
dec
mov
inc
insb
inc
xchg
xor
cmc
add
les
shlb
fadd
and
mov
cmc
xchg
mov
jo
sbb
rclb
jns
lds
daa
stos
hlt
lcall
dec
sub
jae
aam
xchg
push
push
gs
inc
jno
arpl
das
shrb
inc
rcr
sarb
das
gs
test
imul
rcrb
into
sub
out
jnp
outsb
xchg
imul
mov
int3
jne
mov
xchg
pop
aam
aas
dec
xchg
cld
mov
add
out
test
and
das
xor
js
push
mov
push
sub
inc
arpl
xor
adc
mov
mov
mov
push
dec
mov
adc
rcrb
testl
dec
push
dec
lret
out
xchg
jmp
jns
cmpsb
mov
test
mov
inc
das
sbb
es
js
push
cmp
scas
test
and
cs
icebp
jmp
rcrb
fwait
outsl
fcomps
test
fdivl
mov
into
xor
cmp
pop
outsb
addr16
hlt
pusha
jne
pop
lcall
adc
in
and
add
mov
hlt
gs
xchg
and
push
push
fsubl
loope
and
sbb
inc
cld
mov
lods
xchg
fdivs
mov
xchg
fildll
jo
add
jp
xchg
push
sbb
jns
aas
push
ja
cmp
mov
xchg
inc
add
or
mov
adc
cmpsb
fmull
bound
lahf
xchg
jl
test
jne
loop
push
mov
cmp
into
inc
mov
mov
add
pop
xor
test
leave
sbb
sub
push
pop
dec
shll
xchg
imul
daa
clc
out
mov
sub
scas
hlt
xchg
addl
loop
outsl
pusha
addr16
aam
in
or
dec
clc
mov
push
das
or
mov
xor
js
push
hlt
ja
jecxz
lds
daa
in
mov
flds
ljmp
or
pop
xchg
or
ljmp
push
outsb
mov
sbb
adc
inc
pop
mov
stos
inc
add
idivl
fistl
xor
xorb
jnp
and
je
aam
cmp
lods
outsl
mov
ds
outsl
dec
sbb
bound
orb
dec
leave
and
push
lods
arpl
jbe
test
sub
cmp
cltd
sahf
shlb
push
push
das
and
fxch
je
pushf
jle
xchg
mov
ljmp
xor
xor
push
push
sbb
cld
in
roll
xor
and
sbb
les
sti
and
push
jne
mov
enter
lcall
lods
in
mov
stc
dec
sub
xchg
ja
add
fnstsw
add
or
ret
lahf
pop
sbb
outsb
jl
sbb
inc
test
xor
mov
aad
test
jne
cli
loope
xorl
mov
inc
push
xchg
mov
sub
je
lahf
clc
dec
mov
inc
and
and
stc
xchg
outsl
dec
cmp
fisttps
or
lods
repnz
jbe
jns
inc
push
cmc
test
inc
outsb
call
adc
test
repnz
mov
imul
and
imul
fnstcw
lods
xchg
pop
jbe
movsl
or
xor
out
je
loopne
cltd
int
mov
in
mov
aas
xchg
jae
into
daa
sbb
mov
pop
movsl
mov
cli
dec
sbb
lods
xor
leave
ljmp
ds
xor
cmpsl
add
jle
jno
fnstcw
daa
enter
xchg
mov
xchg
icebp
xor
adc
daa
clc
popf
data16
jge
aam
nop
aas
inc
mov
sti
aam
mov
mov
pop
sar
inc
bound
sar
jne
sub
lds
loopne
insb
xchg
mov
pop
mov
pushf
dec
push
pop
adc
xchg
mov
insb
cmpsl
push
jecxz
mov
fsubl
mov
pop
popa
inc
pop
jl
sub
scas
push
pop
mov
rcll
pop
gs
insl
aas
fimull
xchg
je
xchg
jns
insb
pop
fs
in
sub
test
sbb
mov
dec
stos
cmp
mov
push
es
addb
and
fmull
adc
mov
and
loopne
add
xchg
mov
lahf
int3
je
sbb
jbe
sbb
add
pop
loope
add
rol
push
mov
hlt
push
push
cltd
mov
in
insl
sbb
test
sub
pop
fsubrs
jmp
aas
and
inc
pop
test
out
dec
cmpl
clc
repz
push
movsl
in
loop
push
test
adc
mov
repz
ret
push
fcmove
je
sbb
push
xchg
and
mov
fnsave
lret
stc
dec
sahf
inc
clc
aas
adc
ja
mov
adc
push
shl
jne
adc
imul
push
pushf
cmovnp
sub
in
xlat
fwait
dec
data16
mov
popf
add
xor
and
pop
jo
mov
mov
jg
insl
aaa
xor
adc
xchg
and
dec
mov
aad
cmp
cwtl
fdivrs
mov
enter
jg
jp
mov
mov
rclb
and
test
fisttpl
xchg
or
es
out
jno
test
push
push
rcl
movb
aas
ret
lock
mov
xchg
mov
lahf
push
push
sbb
dec
stos
jg
lahf
dec
lret
xchg
insl
jbe
out
mov
push
bswap
dec
ss
std
inc
out
pop
dec
repnz
sub
jb
out
aad
adc
pop
push
arpl
jno
jp
jle
adcl
mov
cmp
mov
movsl
pop
jo
std
pop
sbb
lret
pop
es
ret
lcall
sub
push
sarl
stos
pop
or
jle
adc
es
pusha
in
jmp
sbb
fwait
mov
jecxz
sub
ja
popa
add
in
outsb
aam
in
leave
cmp
enter
adcb
or
add
jge
and
dec
jb
sub
andb
ret
jle
insb
jp
repz
jae
lds
idivl
sbb
pop
jecxz
loope
out
aad
lret
push
sahf
mov
in
data16
stos
push
cs
sbb
adc
mov
xchg
xor
add
and
mov
cmpl
icebp
push
mov
test
xor
movsb
mov
jb
and
push
arpl
xchg
add
jmp
aam
stos
gs
rorl
subb
xor
shll
out
scas
dec
inc
inc
ds
or
dec
add
cmp
repz
outsl
ss
mov
inc
dec
iret
sub
mov
mov
push
inc
sbb
rcl
or
call
les
jmp
mov
leave
call
pushf
sahf
ret
mov
push
push
loope
mov
mov
ds
fcmovb
pop
xor
out
test
dec
cmpsb
inc
xor
pop
arpl
push
outsl
dec
add
jle
test
push
mov
inc
pavgw
jns
lcall
adc
cmpsb
faddl
andl
std
into
inc
dec
loop
jno
cwtl
js
or
xor
jns
adc
sbb
ror
scas
aad
fcomip
jge
dec
push
pusha
jno
repnz
adc
xor
popa
lahf
jne
cmp
sub
push
in
or
inc
add
jmp
jno
lret
in
sahf
int3
dec
sub
xchg
outsl
push
and
pop
adc
inc
inc
sbb
push
jmp
cmp
jb
arpl
repnz
mov
call
fs
ljmp
jnp
jno
ljmp
pop
fsts
mov
or
push
loop
sbb
jno
cmc
jl
cltd
mov
xor
jno
jge
leave
adc
jnp
pcmpgtd
int3
mov
jg
pushf
test
aad
jb
imul
xor
cmp
cmp
pop
movsb
nop
bound
loope
inc
mov
nop
fcmovnb
xorb
jb
sbb
xlat
adc
repz
cmpsb
and
mov
shrl
test
pop
dec
sarl
jb,pn
cmp
sbb
repz
and
mov
imul
cwtl
xchg
mov
scas
leave
fstpl
and
testl
sarb
cmp
mov
and
movsl
sub
xchg
fwait
popf
or
daa
out
sbb
js
cld
repnz
push
and
jo
sbb
lret
fstp
in
cld
test
pop
jno
bswap
and
out
pushf
ljmp
mov
cmp
pushf
fsubr
loop
rorb
cmp
jno
push
add
div
int3
push
sub
dec
dec
addr16
mov
cs
cs
pop
movsb
inc
shlb
inc
fidivl
mov
lret
xchg
aad
std
and
inc
loope
xor
adc
ror
loope
sti
loopne
mov
test
shlb
pop
mov
jle
and
sbbl
movsl
jno
imul
push
rorl
test
jge
stc
roll
rcr
inc
mov
add
xchg
aaa
lret
out
pop
dec
adc
xchg
push
inc
cmpsb
jle
ss
testl
ret
lss
lods
mov
pop
scas
shrl
jno
sbb
flds
cmp
inc
push
jae
stc
stos
daa
adc
ja
out
ret
repz
xchg
repnz
push
push
xor
fsubp
xchg
and
testb
test
cs
xchg
das
ja
int
ss
inc
neg
je
mov
or
jecxz
push
adc
testb
inc
lds
bound
sbb
mov
fs
adc
daa
inc
pop
movsl
std
int
cmp
dec
imul
daa
jbe
mov
fmulp
xchg
push
ja
ja
out
adc
xor
ficomps
les
movsl
ret
lods
ficomps
add
sub
and
clc
in
mov
add
pop
sub
push
arpl
xor
xchg
or
xchg
sbb
and
inc
jecxz
mov
push
outsb
paddw
mov
lret
js
mov
int3
ret
dec
mov
cmpsb
mov
mov
xor
out
inc
xchg
pop
add
stos
mov
test
jl
sahf
xchg
and
outsl
mov
cwtl
sub
cmc
xor
sbb
add
pop
fstpl
mov
and
gs
jb
pop
mov
les
lret
push
aam
int
ss
dec
stos
popa
js
xchg
cmp
stos
adc
call
shrb
lret
iret
or
mov
mov
lret
les
adc
and
das
test
cli
mov
ret
fnop
dec
dec
sbb
or
mov
cmp
xor
inc
stos
mov
push
and
adc
mov
pop
cmp
push
mov
xchg
rcr
sub
test
or
sbb
mov
rcrl
dec
cmp
sub
sub
and
mov
into
jmp
pop
and
stc
out
jo
mov
negl
mov
imul
cs
fwait
mov
sbb
xor
jg
test
cmc
hlt
mov
lea
pop
data16
cmp
xchg
mov
cmc
pop
pusha
dec
jge
ja
data16
cld
lret
pop
sub
loopne
jne
xchg
ljmp
das
jl
cmpsb
push
gs
push
xor
jae
out
mov
push
in
push
inc
out
jns
or
outsb
inc
frstor
mov
and
mov
dec
and
xchg
mov
rep
pop
ret
cli
daa
pop
andl
inc
call
pop
out
les
xchg
xchg
movsb
sbb
cltd
dec
mov
cmp
test
testl
mov
jb
cmp
add
lods
mov
sbb
dec
dec
das
mov
and
leave
out
sbbb
sbb
shll
jecxz
repz
je
and
xor
gs
lods
mov
pop
pop
or
adc
jmp
mov
mov
mov
shll
idiv
sbb
pop
loop
mov
or
lea
mov
mov
pop
or
dec
subb
push
rol
clc
mov
dec
push
lret
clc
das
rcrb
mov
je
insb
and
insb
xchg
and
aad
lea
add
test
jb
add
out
repz
mov
loopne
std
inc
xor
adc
jae
and
mov
cmp
dec
out
lods
and
loopne
jg
icebp
mov
cmpsb
mov
jl
inc
fwait
das
sub
ds
and
push
push
cmp
clc
mov
mov
cltd
lahf
aas
rcrb
lock
imul
outsb
xchg
push
xchg
mov
mov
iret
inc
inc
pop
sub
data16
xchg
adc
sbb
cltd
jmp
mov
mov
dec
aam
cwtl
pop
js
sub
fidivrs
pop
jecxz
add
cmp
jae
jl
dec
and
or
ljmp
mov
mov
into
and
ficomps
arpl
loope
iret
sub
scas
mov
fdivl
outsl
lahf
lahf
mov
add
push
mov
test
mov
pop
sbb
mov
inc
je
stc
jae
in
cmp
int
out
loope
out
in
aas
mov
jp
push
incl
daa
in
das
mov
ret
adc
ret
sbb
gs
mov
cmp
scas
xchg
loopne
jl
loop
gs
int
inc
mov
or
pop
push
cld
jns
dec
mov
add
outsl
lds
fs
sub
loopne
scas
dec
out
xchg
ljmp
add
orb
lods
lods
pop
xlat
jbe
notb
mov
xor
outsb
sub
mov
fists
fnstenv
stc
jecxz
push
in
xor
cmc
xor
std
js
cli
scas
or
aam
xor
mov
lods
and
dec
jmp
ffree
adc
call
xchg
cmp
add
mov
mov
mov
pop
push
mov
mov
add
push
imul
push
test
cld
hlt
xor
sub
pop
inc
cmp
pop
mov
inc
ljmp
xor
xchg
or
dec
xor
fisubl
sbbl
ret
cbtw
mov
addl
lods
hlt
in
mov
mov
aaa
data16
jle
test
and
sub
dec
xchg
pop
dec
adc
jmp
cmp
test
push
movsl
push
jl
fldt
pop
mov
popf
addr16
jb
sar
aam
adc
popa
lea
jl
out
stc
push
repz
adc
lahf
fstpl
lods
cmpb
das
xchg
push
mov
push
sbb
cwtl
and
arpl
lahf
push
push
push
outsb
xor
mov
outsb
mov
addb
dec
into
xor
adc
stc
mov
icebp
decl
xor
xchg
ret
scas
pop
cltd
pop
mov
xor
push
push
in
jmp
add
push
mov
dec
push
dec
xlat
mov
xchg
dec
jno
hlt
dec
test
jle
fidivrl
in
cmpb
cmpsl
jge
inc
in
push
imul
pop
sti
loope
or
cmpsl
roll
dec
push
aam
test
mov
dec
xchg
addb
xchg
jmp
das
in
mov
dec
and
pop
pop
sbb
into
pop
stos
inc
cmp
dec
mov
xchg
es
push
or
data16
mov
jno
mov
cmp
sahf
lods
leave
mov
out
jns
lods
add
xchg
add
push
pop
lds
lret
fdivl
or
test
test
enter
add
aam
push
ret
inc
xor
sahf
xchg
fmuls
int
fadds
mov
jl
and
sbb
inc
stos
fyl2x
sub
hlt
mov
jg
jp
mov
lahf
rorb
dec
popf
mov
scas
sbb
sbbl
test
push
out
jnp
mov
pop
or
mov
add
push
subl
addr16
sub
sbb
pop
in
add
add
push
pop
test
iret
jmp
mov
adc
sbb
ja
test
iret
or
test
sub
xchg
push
mov
sub
dec
xchg
inc
and
pop
adc
andl
out
sbb
insl
or
jo
enter
mov
loopne
or
xchg
popf
movb
iret
push
and
adc
lcall
sbb
mov
dec
roll
jo
adc
pop
jge
push
mov
aam
add
in
std
outsl
in
addl
mov
cmp
test
dec
leave
dec
push
mov
outsb
jge
adc
js
cmpsl
cmp
xchg
outsb
loop
bound
lret
fwait
popf
enter
lahf
pop
movsb
or
mov
jmp
rorl
mov
subb
push
push
or
test
mov
sti
sub
push
arpl
jo
jnp
je
cs
pop
ficomps
inc
cmpsl
cld
stos
aaa
mov
icebp
mov
fs
inc
xor
aaa
rolb
je
fsub
inc
mov
xchg
faddp
test
ds
mov
push
jl
jge
outsl
cmp
pop
adc
cmp
out
aam
push
pop
push
cmc
push
ss
aas
stos
cs
fisubs
inc
or
aad
dec
cmp
inc
mov
in
jmp
push
xlat
adc
mov
sbb
rorl
mov
push
popa
arpl
add
ret
dec
sub
dec
cltd
xchg
xlat
loope
pop
loop
aam
cmp
aas
js
aam
roll
notb
fsubs
push
jb
shr
ss
movsl
out
mov
jns
out
inc
mov
insb
sar
adc
lods
test
dec
jns
ja
decb
pop
clc
es
data16
pop
test
idivb
jecxz
mov
arpl
push
push
or
stc
lods
popa
ret
and
mov
pop
mov
test
sti
cmpsb
sbb
cmp
notl
fldl
mov
or
or
loop
scas
mov
mov
imul
imul
in
dec
mov
insl
push
pop
shrb
insb
nop
adc
jbe
push
adc
xchg
jg
gs
ret
loopne
cmc
cli
inc
mov
dec
and
daa
fsts
xchg
fmull
out
inc
adc
push
add
cltd
imul
xchg
scas
adc
inc
fwait
cmp
inc
movsl
lods
ficompl
push
int3
dec
mov
js
and
mov
ja
sbb
pop
test
rolb
push
mov
clc
jno
adc
movsl
aam
xchg
mov
cmpsl
bound
test
mov
adc
aas
ror
adc
jg
lds
scas
in
jnp
cmp
xchg
in
lret
scas
rclb
push
sbb
fcomps
mov
bound
pop
xchg
hlt
mov
mov
call
pop
je
scas
rep
jns
push
rcrb
mov
imul
sbb
fidivrs
and
pop
cs
adc
push
jbe,pn
mov
fucomp
test
pop
adc
jecxz
mov
les
sbb
leave
mov
insb
jbe
sbb
je
je
shrl
aam
cltd
pop
filds
sbb
lds
sbbl
clc
pop
add
dec
or
jmp
cmpsl
outsb
in
mov
jo
or
sti
movsb
mov
adc
lret
adc
imul
mov
pop
aas
inc
adc
and
aaa
pop
test
add
lock
mov
std
test
daa
ret
and
mov
xor
int3
lret
mov
fsubs
xchg
pusha
add
rcl
xchg
add
xchg
lods
cmp
or
xor
mov
imul
add
je
sub
pop
jbe
stos
lret
roll
or
fiadds
mov
in
or
out
in
arpl
stc
out
lock
xor
push
cld
xchg
pop
pop
jbe
das
cs
jb
sbb
addl
shlb
and
cmpsl
sbb
icebp
dec
and
sbbb
jb
aam
addr16
lcall
cmp
mov
jae
cmp
cmp
outsl
jg
xor
dec
gs
orl
sbb
test
addr16
sbb
int
addr16
push
jbe
mov
movsb
negl
mov
movl
or
dec
sub
push
shlb
and
scas
and
xor
call
fadds
cmp
cs
iret
adc
fisttpll
mov
inc
test
mov
ret
mov
call
pop
jb
repz
push
mov
push
mov
and
xchg
xchg
sbb
push
adc
push
jle
mov
mov
mull
addr16
mov
adc
jnp
and
push
adcl
and
in
jle
mov
nop
sbb
loop
movb
pusha
sahf
jecxz
in
lret
lods
jecxz
fadd
fucom
xchg
and
adc
js
ds
and
add
ret
popa
call
adc
mov
xchg
in
outsb
sub
subl
int
and
test
mov
mov
cwtl
iret
add
shll
mov
repz
mov
lods
ljmp
insl
je
lcall
jge
jmp
int
stc
fdivrs
mov
mov
push
cmp
loop
out
jl
movsl
sarb
lcall
lcall
inc
inc
int
cmp
in
test
jns
in
ret
addr16
mov
out
adc
shlb
push
cwtl
mov
repz
mov
dec
sbb
test
out
pop
ljmp
jmp
mov
jle
cmpb
adc
cmp
es
sbb
add
sbb
hlt
xor
xchg
fdivrl
shll
adc
data16
xchg
repnz
leave
sub
stc
ret
lods
stc
outsl
cli
jge
mov
movsb
inc
dec
shll
outsb
xchg
push
dec
mov
cmp
xor
fwait
jbe
bound
mov
jge
adcl
or
xchg
ljmp
jo
lea
cwtl
orl
pop
jmp
pop
dec
push
or
pop
lcall
push
cmp
jae
rolb
jle
ljmp
cli
fsts
mov
sbb
push
cmp
aas
loopne
cmp
sti
dec
pop
xchg
xor
xor
or
mov
notl
std
cmc
mov
fimuls
int3
lods
orb
cmp
call
dec
packssdw
nop
fistpll
push
mov
mov
out
dec
scas
xor
stos
add
rolb
fsubs
ds
insl
dec
pop
jge
fs
insb
push
pop
jg
mov
mov
cwtl
aaa
faddp
out
push
fidivs
test
out
repz
and
pop
cs
inc
repz
xlat
cmpsb
fistps
jbe
inc
jae
mov
cmp
mov
outsl
loop
push
pop
test
hlt
add
fsubrs
dec
or
mov
popa
xor
xor
add
aaa
inc
push
mov
jb
fbld
sbb
adc
mov
mov
fidivl
loopne
push
out
sub
jle
adc
xchg
lahf
add
and
outsb
shll
aas
je
mov
or
sub
xlat
adc
jno
xchg
arpl
and
fs
push
pop
add
inc
and
dec
clc
movsl
repz
rclb
adc
mov
push
pop
jne
add
mov
sub
mov
mov
or
enter
mov
pop
mov
add
pusha
adc
jg
loope
in
test
jbe
scas
imul
dec
test
xor
bound
pushf
jne
jb
pop
iret
push
into
adc
frstor
push
inc
mov
dec
and
fnstsw
xchg
daa
jge
repnz
sahf
inc
repz
push
cmp
cmpsb
push
je
shl
pop
test
add
mov
dec
xchg
push
push
sbbb
cli
push
fwait
push
push
adc
daa
ret
xchg
rcl
mov
inc
xor
and
cltd
sbb
jle
jl
mov
pop
ss
xor
jno
pop
jnp
int3
pusha
lea
jl
bound
inc
or
leave
add
lds
and
jb
xor
adc
inc
lock
test
pusha
insl
dec
pusha
xor
sbb
jmp
outsl
testl
sbb
cmp
shrb
jae
in
shlb
sbb
js
fcmovnbe
inc
cwtl
nop
dec
mov
jb
mov
mov
jecxz
add
inc
ret
out
jo
rclb
adc
jp
push
daa
test
negb
xchg
xchg
mov
push
fiadds
sbb
adc
push
dec
call
sti
pop
scas
cmp
xor
cmp
mov
lea
scas
and
pop
icebp
push
adc
leave
ljmp
xchg
push
add
jb
negb
ljmp
xlat
mov
pop
or
test
scas
out
push
daa
jecxz,pn
sub
adcl
push
or
adc
js
pop
aas
lods
mov
out
jp
add
test
adc
mov
lds
std
xor
jbe
test
dec
mov
push
or
mov
sub
fisttpl
loope
repnz
lds
pop
mov
mov
jns
mov
mov
andl
cmpsl
sub
pop
push
xlat
and
xor
lock
jno
fisubrl
or
nop
add
gs
cmp
mov
or
repnz
inc
aam
push
pop
jnp
enter
mov
xchg
pushf
pop
mov
int3
dec
cld
sub
popa
mov
sbb
sbb
push
dec
popf
jno
cmp
rcll
aad
rorb
iret
out
push
inc
sbb
mov
mov
outsb
arpl
mov
outsb
aad
push
aad
cmp
sub
shrl
stos
arpl
pop
push
sbb
aaa
in
out
addb
xchg
mov
cmp
lds
mov
push
daa
shlw
pop
xchg
aad
fbld
in
jb
sbb
popa
push
int
lock
mov
shrb
mov
pusha
adcl
ret
cmp
push
dec
imul
sbb
push
cmpb
rolb
sbb
jno
push
mov
ret
fnstcw
ljmp
in
stos
jge
lret
jo
jg
int
sbb
jge
cmpsb
into
test
icebp
pop
cltd
sbb
fldl
mov
cs
jbe
jge
dec
push
jl
hlt
sbbb
inc
push
mov
add
clc
fcomps
pop
or
iret
and
rolb
cmpsl
mov
out
aas
sub
ret
pusha
jne
inc
ss
bound
jge
lock
in
dec
pusha
add
fildl
call
mov
in
loope
and
jne
cmc
cmp
jl
movsb
fs
push
xor
add
lcall
cmp
or
jae
cmp
push
movb
lock
movsbl
jns,pt
lods
and
xor
add
scas
ret
ds
cli
xor
shl
mov
out
fdivp
lods
mov
push
imul
pop
and
sti
negb
push
loopne
aas
xor
mov
adc
sbb
stos
cli
push
cmp
cmp
rcrl
dec
int3
gs
jle
lahf
push
push
dec
addr16
sbb
in
push
es
jg
xchg
or
shll
xor
test
stc
cmp
jnp
call
inc
test
jne
mov
xchg
jne
pop
mov
leave
lret
dec
push
adc
dec
imul
push
es
sarl
add
into
pusha
push
sbb
shlb
cmp
pop
insb
in
sub
mov
inc
mov
xorb
in
mov
loope
popl
mov
jecxz
leave
pop
cmp
ret
mov
rorl
push
mov
mov
jb
dec
sub
and
and
or
jnp
pusha
movsl
push
sbb
imul
xchg
dec
and
aad
push
push
mov
mov
popa
xchg
mov
insb
fcmovnbe
xchg
push
pushf
stos
jb
mov
or
or
stos
pop
adc
movsl
or
jge
ficompl
xor
nop
xor
lret
ljmp
sbb
pop
adc
clc
pop
cmp
sbb
lods
ja
sub
add
out
mov
das
pushf
scas
loope
insl
cli
cltd
adc
in
or
add
stos
nop
daa
fldt
aaa
inc
sbb
fs
inc
cs
jg
mov
out
mov
js
xor
popf
setle
mov
inc
insb
xchg
daa
mov
bound
aam
imul
pop
mov
test
jge
mov
insl
pop
jnp
dec
sub
gs
mov
dec
repz
outsb
pop
mov
add
popa
xchg
dec
jns
xchg
adc
adc
mov
add
fsubl
dec
outsl
mov
test
cmc
repnz
mov
ficoms
leave
adc
mov
xchg
loopne
out
out
mov
subl
inc
xor
fstpl
cs
push
ljmp
xchg
and
cld
mov
leave
lea
pusha
fstl
loopne
push
movsl
add
data16
dec
push
push
xchg
test
push
pushf
xchg
negl
test
push
shlb
add
movsl
cmp
pop
inc
cmp
fistpll
mov
insb
pop
orb
inc
ja
jb
cmp
sub
xchg
stc
js
repnz
test
or
sub
cli
mov
dec
add
out
iret
jo
sbb
mov
and
mov
aaa
daa
push
imul
sarl
outsl
push
leave
testb
inc
mov
daa
test
std
dec
xor
adc
aas
into
test
push
xor
ja
repnz
and
jg
push
cs
jg
mov
jb
mov
xchg
mov
popf
cs
mov
shll
jne
fisttpll
ret
imul
xchg
inc
jnp
dec
in
arpl
adc
hlt
loopne
out
fmull
inc
sbb
aad
rorl
sarb
push
or
and
cmpb
test
imul
cmp
ret
divb
out
sub
fdivrl
inc
sub
sub
ret
mov
sahf
sarb
sbbb
or
dec
incl
cmpsb
stos
scas
dec
aam
loop
jbe
fisttpl
jae
sti
mov
jno
iret
adc
inc
out
test
movsl
sbb
pushf
mov
dec
xor
sub
dec
add
das
push
fcmovb
or
xor
out
pop
jle
xlat
stos
jecxz
xor
mov
in
jbe
sub
add
repz
inc
lods
mov
stc
dec
lods
data16
ffree
bound
add
or
adc
xchg
movsb
je
or
sbb
shl
xchg
fildll
shll
sub
lret
sub
int3
push
sub
push
push
or
aam
test
out
inc
push
icebp
nop
hlt
arpl
insl
mov
xchg
lods
andb
xchg
inc
hlt
xor
adc
sar
mov
or
jmp
adc
hlt
out
cld
ja
icebp
enter
mov
xor
aad
addr16
out
and
dec
in
popa
push
and
xor
sti
pop
or
test
out
out
mov
dec
es
les
lahf
push
cmp
mov
pop
call
out
jne
sbb
or
xor
jle
xchg
movsl
test
addl
mov
push
dec
repz
pop
test
std
xchg
or
outsb
mov
push
adc
pop
and
subb
jge
and
lods
das
fisubrs
rolb
adc
movsl
cli
mov
inc
jb
ja
out
test
loope
leave
test
sub
jo
xor
jbe
sbb
dec
ljmp
rclb
fiaddl
mov
je
ljmp
push
xchg
lock
out
jle
in
lcall
mov
jns
inc
or
xchg
xor
mov
adcb
lock
mov
pusha
cli
call
clc
mov
sub
test
inc
repnz
mov
leave
push
out
xchg
push
fs
sbb
xchg
movntps
mov
mov
scas
mov
adc
in
or
sub
cmp
aam
sbb
pushf
mov
and
fiadds
mov
lea
sub
arpl
daa
imul
sbb
mov
lock
cmp
push
push
cld
inc
fisttpll
sbb
andb
xor
and
aam
or
cmp
mov
mov
push
pop
or
pop
dec
daa
lcall
xor
adc
repz
imul
ljmp
mov
repz
and
sbb
loopne
test
in
fbld
dec
out
std
pushf
imul
inc
in
nop
dec
repz
push
push
jns
jg
pop
push
fwait
dec
push
in
sub
xchg
sub
fstpl
add
bswap
subb
icebp
mov
iret
pusha
sbb
ja
mov
movsb
sti
dec
jge
jge
fadd
mov
inc
mov
roll
ficompl
filds
test
xor
add
mov
shlb
push
jno
xchg
sahf
fildll
cmp
mov
add
jb
shlb
aad
cltd
lcall
lahf
into
push
adc
shrb
cmp
lds
ffreep
inc
shlb
das
lret
fisttps
in
fisttpll
mov
push
sub
fs
filds
lret
pop
movsb
mul
shrl
shr
out
xor
mov
cwtl
sahf
popa
loopne
jge
imul
test
mov
in
mov
je
out
push
push
mov
push
xchg
ret
and
in
jge
push
dec
lret
pop
sbb
xlat
push
ror
mov
add
push
sar
jl
test
leave
mov
inc
test
adc
call
mov
mov
sbb
mov
cli
pop
int
xchg
pop
sub
js
shlb
enter
xchg
or
add
ret
cld
jmp
push
dec
pop
imulb
loope
xchg
adc
push
js
es
sbb
mov
sbb
insl
sub
pop
bound
jno
mov
ljmp
ret
mov
add
insl
andl
mov
in
push
stc
dec
popa
push
and
inc
jle
pushf
dec
js
insl
dec
subl
dec
pusha
data16
pop
jo
or
test
pop
das
rcll
je
int3
xchg
int
push
jmp
mov
in
and
adc
push
outsl
repz
add
mov
clc
test
out
aaa
lea
addl
call
mov
jns
jmp
ret
jo
jne
inc
or
insb
subl
out
mov
iret
iret
adc
fldenv
pop
dec
pushf
clc
lods
inc
mov
xlat
sub
rcr
shlb
or
push
dec
orb
pop
pop
mov
push
push
testl
inc
xor
rclb
out
icebp
xchg
movsb
push
daa
lret
adc
push
pop
push
aad
cli
ljmp
jmp
cwtl
xchg
jbe
mov
fsubl
lock
imul
xchg
xchg
and
fisubl
adc
and
call
lret
add
push
mov
lds
cmp
das
imul
and
mov
sub
xchg
add
out
roll
test
std
jo
pop
inc
lcall
inc
cli
popa
cmpsl
daa
mov
xchg
rorb
ja
add
fsubrl
mov
push
xchg
mov
lods
call
adc
loop
jns
mov
ss
bound
popf
push
jmp
dec
enter
loope
movsb
out
xor
jae
push
mov
call
test
popf
cmp
xor
jnp
mov
das
xor
roll
jno
hlt
or
xchg
int
pop
loopne
dec
push
bound
dec
mov
inc
in
dec
jo
push
jecxz
xchg
inc
cmc
shrl
cld
xchg
fmul
outsb
gs
add
dec
lods
fdivp
jecxz
jno
and
lods
fwait
fwait
int3
shll
inc
mov
sub
mov
sub
inc
mov
sub
mov
sbb
sub
sbb
jl
aam
loop
add
xchg
js
dec
inc
xor
hlt
xchg
push
jns
xor
add
test
scas
sbb
adc
fmuls
pop
mov
push
xor
andl
xchg
mov
test
shl
enter
dec
mov
in
cmp
jbe
mov
cltd
pop
pop
xchg
js
dec
mov
xchg
jbe
inc
scas
jmp
insl
jb
mov
cwtl
loop
ds
or
cmpsl
out
in
or
fisubrs
xchg
in
lods
mov
pushf
fsubrs
xchg
dec
outsb
and
sbb
aam
pop
lods
sbb
add
dec
cmpsb
ror
pop
nop
xchg
nop
aad
pop
js
xor
rolb
mull
dec
lea
and
xchg
icebp
jmp
dec
xchg
push
and
pop
and
lods
lock
test
cmpsl
mov
cld
pop
jno
rolb
mov
sbb
mov
movsl
dec
jnp
xor
nop
push
pop
fs
or
add
lret
or
leave
and
scas
sbb
jle
in
xchg
js
pop
lret
jo
fwait
mov
mov
nop
jmp
sbb
popf
outsb
cltd
push
xlat
sti
mov
or
xor
dec
insl
inc
lods
lods
sub
clc
adc
rclb
incl
in
mov
lock
in
push
mov
shlb
cmp
sahf
xchg
cmp
lods
rorl
mov
mov
daa
push
cmp
loop
into
sbb
fs
in
call
enter
shll
push
in
sub
xchg
stos
mov
out
sbb
jb
dec
stos
lea
xor
clc
jne
test
cmp
sbb
inc
adc
lea
loopne
call
and
cvtdq2ps
adc
jae
rolb
sub
sub
pop
adc
pop
imul
xchg
gs
mov
push
and
fmuls
pop
xor
xchg
sub
pusha
jns
lods
stc
jns
outsb
jle
ja
xor
xchg
xchg
mov
rolb
iret
dec
mov
rol
loope
fisttpl
test
pop
xchg
xchg
pop
fnstsw
xor
aad
mov
sub
mov
jns
dec
xlat
mov
sbb
or
jmp
pop
or
sub
pop
or
mov
rcrb
add
sti
fsts
aad
inc
fmuls
inc
into
mov
fdivs
std
cmp
testl
je
xor
leave
in
out
aas
sarl
mov
jns
ret
icebp
jp
addr16
mov
dec
aam
cmp
mov
mov
hlt
jnp
mov
xor
lds
test
or
test
test
or
leave
sub
gs
call
sub
shl
xchg
mov
enter
inc
push
sbb
in
sbb
les
and
and
out
mov
or
loopne
push
pop
xor
sbb
in
movsl
adc
sub
xor
insb
inc
or
mov
pop
vdivss
dec
inc
stos
jb
mov
mov
cwtl
out
loope
pop
push
jnp
push
aam
cld
mov
sbb
sub
or
adc
or
jb
faddl
pop
add
jb
push
repz
stos
dec
in
pushf
jp
push
cs
mov
jp
cmpsb
dec
adcl
jle
inc
push
int3
into
popa
imul
mov
aas
inc
jp
add
pop
push
cmpsb
push
faddl
fsub
cld
or
mov
mov
cmpsl
mov
jg
mov
jno
push
pop
lret
pushf
pushw
add
add
lds
xor
test
or
pop
fidivs
lds
mov
and
pop
jl
jne
aaa
inc
push
mov
jne
sahf
sbb
in
orl
imul
pusha
ss
in
cmp
in
inc
mov
jg
xlat
pop
repz
ffree
icebp
inc
and
out
dec
in
popa
jp
out
or
daa
mov
or
out
sbb
popa
ret
mov
add
fdivl
or
mov
mov
pusha
shlb
imul
cmpsl
mov
pop
test
cmp
add
push
xchg
push
and
pop
rolb
adc
sub
ret
mov
mov
or
mov
repnz
mov
inc
rcrl
fmuls
movsb
int
fsubl
xlat
hlt
sbb
ljmp
aas
sahf
and
or
adc
sbb
sti
mov
and
shlb
fsubrl
or
push
push
inc
jecxz
push
push
and
lds
pop
cli
lea
daa
sub
and
mov
test
ljmp
pop
js
mov
jbe
cld
shll
clc
and
inc
and
mulb
add
pop
testb
xchg
in
mov
in
dec
call
jmp
push
sub
lcall
in
or
test
int
or
cmc
in
mov
imul
and
dec
push
push
leave
push
repz
jae
leave
dec
imul
adc
cltd
andb
xor
cmp
xchg
jp
aas
sbb
or
adc
xchg
add
add
push
xchg
cmp
pop
add
xchg
jg
cmc
sbb
push
inc
mov
cs
imul
cli
call
addr16
ret
lods
jae
call
mov
pop
scas
mov
add
sahf
pop
js
cmp
leave
push
mov
out
stc
lods
lret
inc
fmuls
sub
cwtl
pop
dec
push
xor
shll
or
jecxz
or
aas
out
mov
mov
scas
insb
jnp
iret
add
lret
push
mov
inc
lcall
cmpsb
xchg
iret
fnstenv
rcrb
aam
out
pushf
xorb
jmp
jo
sub
dec
push
xor
pushf
ljmp
pop
shlb
push
jo
jle,pn
xor
push
jp
das
ljmp
mov
repz
add
aam
mov
mov
pop
bnd
mov
pop
or
test
mov
lret
push
cmp
enter
repz
xlat
je
push
xchg
jp
xor
scas
ljmp
js
nop
int3
cvtps2pd
pop
arpl
or
mov
fwait
sbbb
jae
fsubrp
mov
sub
push
test
call
enter
cmpl
sub
fisubrs
je
jg
pusha
jge
mov
andl
dec
lods
adc
sbb
mov
jle
jnp
push
mov
pop
dec
sub
mov
mov
xchg
xchg
sti
or
imul
cwtl
mov
in
sbb
sub
and
inc
add
mov
dec
xchg
aas
and
pop
adc
in
mov
jp
bound
pop
hlt
push
add
test
xchg
jg
pop
out
fdivrl
ja
loop
popw
dec
fs
push
shrl
movsl
and
fnstenv
cmpsb
mov
jno
and
xor
ret
gs
cmp
insl
mov
lahf
mov
pop
jecxz
sbb
negl
cmc
jl
imul
push
int
cmpsb
ret
stos
jns
ficomps
xchg
lahf
pop
lcall
pop
sahf
adc
jno
and
test
hlt
bound
inc
es
jge
push
cli
gs
push
sti
scas
cmp
stc
mov
fwait
lahf
add
mov
push
jmp
xlat
mov
dec
sub
into
sub
add
push
fisttpll
movb
lods
ljmp
stos
lea
inc
push
jge
mov
mov
or
add
push
sbb
scas
push
mov
int3
outsl
cmp
aam
sub
adc
icebp
test
mov
gs
ljmp
and
push
mov
shlb
jo
ret
or
pop
ja
xor
push
cmp
pop
mov
add
shlb
sahf
cmp
xchg
addr16
out
adc
xchg
jg
std
sub
aaa
aam
rorl
in
cs
inc
imul
ss
jne
jns
xlat
aas
loop
test
push
lods
pop
addr16
pop
mov
fbstp
outsb
cmp
lea
jmp
cmp
mov
sbb
mov
dec
xor
jmp
jo
or
add
adc
lcall
scas
out
push
jo
inc
std
lods
adc
int
test
mov
and
xlat
movsl
in
aas
mov
xchg
std
notb
dec
and
aaa
cltd
scas
or
cs
push
push
add
add
jo
add
fimuls
and
cmp
lret
neg
xchg
notb
or
sbb
push
in
dec
repz
mov
mov
in
jno
insl
pop
mov
mov
sbb
sbb
adc
lds
loop
scas
in
rorl
inc
cmp
orb
add
or
cmp
lahf
subb
sub
add
call
cmp
adc
test
add
sarb
pop
or
insb
mov
sub
sub
mov
popf
roll
inc
xchg
icebp
mov
fs
lea
dec
loopne
mov
jmp
test
jns
mov
icebp
inc
daa
cmpsb
xchg
mov
xchg
jne
data16
movsb
cltd
pop
xchg
cld
pusha
loop
mov
fisubrs
out
insb
mov
ljmp
push
pushf
sbb
das
in
stos
es
test
pop
or
jns
ljmp
mov
xchg
cmpsb
scas
aaa
xchg
mov
mov
sbb
inc
mov
repnz
stc
cmp
fs
das
lret
fs
mov
iret
not
cmpsl
mov
sbb
loope
loopne
mov
in
xor
jnp
mov
adc
jae
js
in
gs
adc
sti
lahf
xchg
cmpl
das
cmp
sbb
sub
inc
mov
std
dec
push
sub
lret
pop
repnz
cmp
xchg
testl
xor
das
xchg
dec
jne
adc
lret
xchg
insl
mov
ds
mov
shrb
xor
into
lods
dec
push
and
notb
rcrb
mov
bound
push
sti
ljmp
test
testl
movsl
push
xor
imul
jb,pt
imul
mov
add
test
cmp
test
push
sbb
xchg
test
push
xchg
pop
jbe
and
movsl
mov
mov
push
movsl
aam
xchg
popf
push
rcl
cmp
gs
andb
cmp
xor
shll
nop
mov
pop
sub
cs
pop
add
not
out
mov
stos
or
pushf
adcb
push
sbbb
stc
inc
in
test
pop
dec
inc
leave
in
in
pop
shrl
ja
cmp
icebp
sbb
xchg
out
mov
xor
and
mov
and
fnstenv
addb
out
es
jmp
shll
mov
and
out
mov
jno
sub
or
sldt
std
int
clc
les
push
mov
add
test
sarl
das
imul
and
push
loope
lock
jae
popa
rorb
repz
std
push
cmp
roll
push
cmpsb
inc
jb
clc
mov
ds
pusha
cmpsb
in
push
out
cmp
pop
push
sbb
jp
sti
mov
and
sub
push
xlat
pop
or
mov
ds
lahf
inc
lods
cmp
fs
dec
and
popa
jnp
sbb
gs
test
jb
sub
mov
sub
sbb
icebp
mov
cmp
imul
xchg
test
repz
mov
aaa
outsl
or
test
mov
xor
sub
pop
out
pop
fistpl
loopne
sbb
out
clc
shr
mov
sbb
mov
test
subl
fcompl
pop
shr
fs
xchg
add
push
mov
xchg
jl
movsl
pushf
mov
jb
cmp
aam
xchg
push
leave
mov
movb
iret
repnz
jbe
push
jnp
dec
sbb
outsb
mov
lods
out
cmp
mov
fwait
hlt
lods
push
pushf
hlt
movsl
push
or
movsb
mov
and
push
dec
movsl
pop
pusha
rolb
xchg
or
mov
subb
cmpsl
mov
cli
mov
les
test
movsl
sbb
adc
and
or
enter
add
addr16
mov
insl
mov
fcoml
or
pop
xchg
js
push
pop
les
lret
test
jb
sbbb
dec
add
and
mov
cmpsb
xchg
mov
or
xor
nop
dec
adc
popf
les
or
cmc
in
cs
lock
jo
mov
inc
subl
rolb
xor
and
lret
xchg
repz
push
daa
test
mov
xchg
cmp
jmp
test
popl
int
out
or
xor
jbe
and
push
das
dec
int
xlat
or
loope
sub
mov
and
xor
add
cmpsb
mov
cmp
orl
cmpsb
adc
sub
xchg
sub
pop
rorb
aas
ret
cwtl
xor
jo
insb
mul
adc
cmp
cmp
ljmp
mov
daa
jle
or
fs
jge
cmpl
movsl
jnp
in
inc
xchg
iret
mov
pop
xlat
mov
push
mov
leave
xlat
jne
adc
jae
pop
xchg
in
add
psrld
rcrl
rcrl
and
jecxz
rorl
adc
or
inc
das
mov
bound
js
and
sub
je
sarl
outsl
and
sub
stos
pop
cmp
mov
ss
cmpsb
insb
jp
sub
mov
jne
and
sarb
sbbl
int3
imul
mov
add
into
sub
dec
jnp
loope
and
adc
mov
icebp
addr16
sbb
mov
pop
pop
stos
jg
mov
lret
cmp
cmpsl
push
jp
cmp
mov
test
push
xchg
or
clc
and
loopne
dec
xchg
push
sbb
iret
mov
sbb
ss
nop
call
repnz
mov
outsl
add
andb
movsb
test
jae
jmp
aas
push
inc
xchg
push
test
inc
int3
fisubrl
and
ds
xchg
in
cmpsb
push
dec
jl
out
aas
stc
mov
ret
push
xor
jp
test
dec
xchg
movsb
pop
xchg
std
push
test
test
mov
sbb
fldt
stos
cmp
sti
pop
inc
cmpsl
jge
pop
shl
in
dec
into
or
int
icebp
add
push
rcll
sbb
jbe
or
mov
jae
jp
mov
adc
dec
sub
push
pop
add
xchg
sbb
ljmp
lock
mov
jle
aaa
push
sti
in
clc
mov
dec
or
pop
test
lock
mov
jne
jno
shll
je
adc
out
repnz
stos
mov
in
loope
stos
xchg
cmpsl
pop
insb
cli
mov
insb
or
xchg
mov
shlb
mov
or
in
xchg
or
jnp
dec
push
ds
iret
xor
mov
jno
xor
push
stos
inc
loopne
ror
cmc
nop
sbb
cld
xor
xchg
fldenv
add
nop
or
loope
jns
fisttps
imul
xchg
int3
outsb
cmp
mov
cltd
mov
ret
or
push
dec
inc
jl
into
jae
ret
push
std
hlt
dec
mov
push
ror
stc
fnstcw
outsb
sbb
mov
and
xor
jno
jae
xor
cmpsb
inc
or
popa
and
test
or
sub
fnstsw
jle
or
int
pop
mov
push
and
sahf
lods
mov
pop
enter
fldcw
inc
inc
and
std
popa
mov
jbe
jl
popa
jecxz
repz
in
testl
lret
bswap
nop
mov
jns
jne
or
gs
pop
je
ror
add
hlt
addl
ret
mov
gs
daa
pop
mov
adc
pop
cmpsl
adc
mov
jo
cmp
dec
add
mov
xor
lea
lods
fidivrs
lret
sub
fidivrs
gs
lcall
es
mov
mov
cmp
jmp
and
in
adc
scas
das
xlat
cld
sbb
in
test
repz
cmp
sbbb
call
outsl
stos
xchg
or
cmpsl
rcl
or
loopne
mov
outsb
pushl
xor
sahf
sbb
mov
sub
mov
lods
lea
je
cmp
lods
stos
mov
pop
fmull
push
jnp
dec
fdivs
adc
in
stos
xor
fcoml
adc
sub
out
adc
data16
dec
faddl
movsl
adc
or
pop
pop
add
fadd
xor
rcl
push
jmp
pop
fldenv
mov
mov
lods
cmpsb
xlat
sti
ret
icebp
push
dec
enter
aad
jp
sahf
hlt
lahf
int
outsb
dec
loope
adc
xor
cmp
dec
out
loopne
lahf
push
mov
jecxz
stos
jle
mov
dec
in
mov
xchg
stos
iret
sub
xorl
push
pop
mov
inc
push
loopne
xchg
int
fs
xchg
jecxz
pop
daa
sti
ret
pop
aaa
dec
mov
loope
and
lcall
or
ja
inc
sub
fsubrs
adc
push
dec
sub
dec
ret
nop
fidivs
pop
imul
adc
add
sbb
loopne
or
mov
aas
cli
cmp
sbb
dec
sbb
jmp
adc
dec
pop
jmp
push
icebp
imul
mov
or
xorb
nop
inc
in
xor
pop
pusha
xchg
mov
nop
push
dec
sbb
dec
mov
mov
xchg
mov
dec
dec
xor
call
das
adc
adc
jns
or
cmc
mov
adc
out
mov
movsb
faddp
sbb
inc
cmpsb
pusha
divl
cmp
dec
add
scas
or
std
std
test
and
popa
int3
adc
ss
lcall
sbb
outsl
in
sbb
mov
enter
cmp
mov
in
push
sub
insl
dec
icebp
xchg
and
in
test
lds
inc
ljmp
popf
mov
push
jbe
test
push
pop
clc
imul
loop
ret
xchg
xchg
xchg
in
out
out
fcoms
repnz
xor
pushw
outsl
cs
sbb
fdivl
lret
push
shr
in
sub
gs
sbb
cmp
mov
jg
loope
dec
jge
andl
adc
adc
push
jecxz
out
ffreep
stc
jnp
inc
add
sub
jo
std
call
hlt
enter
cld
sbb
mov
lret
add
xlat
xchg
test
mov
dec
xchg
int
pop
ror
or
lods
xchg
arpl
imul
into
and
nop
adc
idivb
pushf
and
xchg
mov
pop
xchg
mov
mov
fbstp
and
add
push
sbb
dec
dec
xchg
js
mov
movsb
lea
arpl
repz
sarb
sti
enter
out
stos
stc
das
fildl
mov
sahf
lds
repz
inc
psrad
push
enter
adc
sub
add
and
aam
out
mov
xchg
out
aaa
or
dec
sbb
adc
mov
push
roll
popf
mov
lahf
jmp
push
mov
adc
fdivr
jge
jae
sbb
jl
push
or
inc
lret
popa
lds
push
repz
fwait
movsl
cmp
lret
clc
lcall
cmp
sub
dec
aad
or
mov
add
jecxz
sbb
xor
lret
sahf
sbb
jmp
push
xchg
popf
xor
sbb
in
ret
shrl
add
mov
out
xor
cmp
cmc
mov
pop
in
mov
mov
xchg
mov
sub
out
out
in
cltd
jle
mov
xor
push
push
hlt
sub
mov
lds
or
scas
ds
lea
iret
or
imul
out
fcoms
sbb
xchg
jnp
push
ja
inc
mov
shl
call
test
sti
shlb
insb
cld
sti
fsubl
outsl
imull
xor
mov
sarl
and
inc
mov
xlat
scas
cld
dec
push
push
aaa
dec
xchg
sar
inc
inc
or
pop
xchg
jle
mov
lret
mov
andb
inc
inc
push
mov
sbb
xchg
stos
clc
es
dec
shll
adcl
out
inc
sbb
sbb
pop
lock
xchg
fnstcw
into
fnsave
inc
fwait
lock
sbb
mov
xchg
iret
push
add
xchg
lea
out
xchg
mov
aam
add
jmp
xlat
mov
das
xor
mov
push
aas
push
into
stos
lcall
imul
and
inc
outsl
cmpsb
hlt
xlat
mov
sub
pushf
pop
push
pop
mulb
and
push
loope
xchg
test
loopne
stc
loop
aad
cltd
mov
jnp
mov
stos
sub
sub
dec
xchg
mov
cmp
out
and
dec
fistpll
stc
cltd
in
cmp
adc
mov
sub
cmpsb
mov
loope
mov
lret
push
jbe
mov
xchg
out
inc
stos
xchg
pop
int3
push
outsl
mov
inc
dec
sbb
add
ret
mov
sub
mov
mov
sub
mov
mov
jge,pn
cmc
mov
daa
push
push
testb
xchg
mov
jno
xchg
jmp
jge
aaa
orl
lds
js
mov
loope
lea
xchg
subb
lahf
pop
loope
frstor
xor
xchg
jecxz
inc
imull
out
pop
imul
in
adc
rolb
sbbb
push
or
dec
xor
pusha
sub
add
sbb
repz
sti
lahf
dec
add
cmc
mov
mov
fidivrl
mov
icebp
stc
pop
out
push
popa
jno
mov
mov
lods
jb
call
dec
test
inc
movsl
outsl
fistl
mov
sub
sbb
es
pop
xor
aad
jo
jg
mov
push
adc
sub
outsl
aam
pusha
jmp
xchg
dec
push
andb
mov
movsb
fdivrs
xchg
cmp
int
push
lret
jl
sahf
lods
jmp
jns
lcall
adc
push
mov
in
out
sub
int
xchg
and
dec
iret
int
push
iret
stos
enter
jno
xor
cmp
mov
subb
cwtl
jp
in
js
insb
jb
push
lcall
pop
imul
cwtl
fdivp
push
push
pop
clc
pushf
lcall
push
push
out
lahf
insl
std
mov
dec
stos
mov
rolb
and
sub
mov
adc
xchg
mov
cmp
lods
inc
sbb
sbbb
jbe
cmp
push
xchg
pusha
inc
daa
pop
mov
mov
jne
jg
shrb
dec
gs
movsl
or
mov
leave
push
push
adc
mov
lods
and
shlb
sbb
or
mov
lret
int
xor
inc
daa
xchg
in
xchg
mov
ret
ja
out
test
cmp
loop
jns
pop
test
xor
movsb
jl
ljmp
mov
jbe
lock
pop
jle
lods
fld
idivb
pop
addl
lods
pop
adc
fs
jp
lock
pop
aam
sub
insb
mov
dec
jns
push
xchg
xor
sbb
xlat
lea
xchg
xchg
rorb
pop
lods
sbb
pop
inc
push
int3
iret
add
sbb
loope
aad
mov
xor
adc
fcoml
xchg
jg
mov
hlt
xchg
xchg
je
rorl
gs
xor
cli
test
les
sub
faddp
mov
jno
cs
xchg
mov
sbb
and
mov
sbb
loopne
int
fisttpll
sahf
mov
cmp
sarl
and
jp
dec
lret
pusha
xchg
subl
adc
bound
out
pop
push
add
jle
push
add
fwait
jno
loope
popf
shll
mov
cltd
shlb
lret
dec
cmp
stc
pop
icebp
insb
adc
rcrl
xor
sbb
xor
std
jns
dec
add
sti
or
orb
pop
vcvttpd2udqy
es
lret
sbb
ss
xlat
and
cmp
jecxz
cli
les
ja
add
xor
jbe
or
mov
fnstcw
push
bound
lret
add
clc
sbbl
mov
mov
jp
in
outsb
gs
ret
mov
insb
pop
mov
test
dec
jmp
shrl
arpl
add
rol
movsb
push
inc
fs
gs
dec
mov
sub
lahf
pcmpeqd
sbb
les
sbb
sarl
dec
cmpsb
inc
fsubs
and
and
inc
mov
mov
add
push
mov
sbb
sbb
and
in
xor
or
jmp
mov
add
shll
mov
mov
and
pop
test
fwait
dec
cmp
fs
mov
adc
xchg
data16
jne
call
stos
dec
idivb
jle
gs
jecxz
adc
mov
scas
inc
lea
pop
jae
inc
inc
outsb
fisttps
sbb
orl
mov
pop
iret
cld
cmp
mov
shl
mov
mov
fsubs
mov
test
push
nop
inc
xor
mov
clc
inc
sbb
movsl
test
repz
hlt
movsl
jge
out
lcall
jge
mov
sbb
dec
mov
lret
ljmp
push
push
ss
and
mov
mov
in
mov
insl
aam
xor
sub
pop
jmp
dec
adcb
lcall
pop
xor
mov
ja
push
dec
cmp
xchg
cld
sarb
test
jecxz
imul
fs
test
lods
daa
xchg
jne
ljmp
cmp
mov
mov
mov
sbb
out
sbb
out
rcrl
push
in
add
push
adc
pop
insb
hlt
jae
mov
mov
jb
lea
xor
jle
inc
shll
fstps
ret
popf
aad
cmp
inc
sbb
jb
push
mov
mulb
sahf
pop
xchg
sbb
and
xchg
popf
adcl
xchg
inc
ret
imul
inc
mov
mov
or
cmp
icebp
in
mov
test
mov
xor
popa
push
xchg
pop
dec
jo
adc
aad
cmpl
and
mov
push
ret
popa
outsb
xchg
shlb
and
shlb
inc
jno
jl
add
loopne
mov
cmc
imul
cmp
scas
cs
pop
jnp
hlt
sbb
xchg
stc
pop
or
mov
out
pop
cmpsb
idivl
sar
add
aaa
insl
push
cmpsl
lea
pop
pop
bound
aam
cmp
loop
sub
adc
popa
cmp
fcompl
fisubl
mov
jae
and
stos
dec
mov
inc
xchg
lahf
xor
aad
popa
jno
mov
ljmp
ret
inc
jo
sbb
enter
add
imul
inc
std
enter
nop
mov
adc
stos
xchg
in
cmp
push
or
test
sub
scas
imul
cmc
mov
mov
test
fidivs
or
mov
push
idivl
adc
inc
enter
ficoms
mov
imul
xlat
imul
loopne
jecxz
loop
imul
cs
jge
and
sub
dec
push
in
inc
ljmp
cs
adc
dec
mov
jns
jo
scas
fwait
jno
pop
hlt
and
mov
pop
pusha
mov
sub
cs
and
orl
xchg
out
inc
inc
cmp
or
inc
lret
in
mov
test
xor
add
cmp
xor
sub
or
mulb
repnz
mov
mov
pop
lods
xchg
sbbb
roll
movsl
xlat
cmp
add
sbb
jno
and
dec
insl
cmp
das
out
cltd
cmp
les
loopne
xchg
cmp
sub
or
sarb
adc
aaa
scas
xchg
int
dec
mov
lahf
ficoms
ss
add
std
loop
mov
and
test
in
adc
push
int
dec
mov
adc
enter
jmp
add
aas
mov
inc
shl
pop
push
fwait
rorb
cwtl
sbb
push
ljmp
out
cmp
xchg
pop
sbb
mov
add
mov
pushf
ja
push
mov
in
pop
dec
mov
mov
cli
mov
scas
push
nop
insb
jmp
stos
ds
push
jg
push
mov
jecxz
xchg
fnsave
bound
dec
mov
pop
mov
out
mov
and
pop
popa
dec
sbb
test
frstor
xchg
das
lea
seta
hlt
pmulhw
mov
jnp
lods
jns
hlt
cmpsl
or
sbb
jle
jmp
clc
movb
ret
or
inc
fwait
pushf
fisttps
mov
repz
mov
sarb
iret
aaa
flds
sbb
mov
icebp
jmp
inc
subb
sub
inc
push
icebp
and
inc
scas
push
mov
out
pop
xor
sahf
faddl
pop
cmc
imul
insl
sub
imul
dec
lods
fstps
mov
mov
add
pop
int3
outsl
loop
aad
mov
lods
ljmp
div
fwait
inc
xchg
push
jbe
lods
sub
sbb
push
xor
sub
out
jg
loop
add
inc
repnz
add
outsl
pop
lods
shr
mov
js
mov
jae
jb
lcall
mov
aam
loopne
adc
or
sub
dec
lods
and
push
insb
cmp
shl
sbb
fistpl
xchg
add
popf
cli
stos
loopne
fiadds
mov
add
in
xchg
mov
icebp
jp
ja
fs
das
adc
xor
adc
mov
sub
fsubp
ret
cmp
dec
xchg
xchg
cltd
push
mov
shrl
scas
loopne
push
sub
lds
call
cmpsb
inc
mov
shll
ljmp
lods
push
push
lds
sbb
outsl
ret
fstp
pop
push
pop
or
in
jl
push
jnp
movsb
inc
filds
cmp
jbe
call
int
adc
cmpsl
fstps
fxch
jl
mov
hlt
cmp
push
push
hlt
xor
jns
leave
in
inc
enter
pop
cmc
sbb
loopne
lock
lods
pop
jge
das
scas
xor
out
movsl
xor
mov
jne
sub
inc
jno
roll
dec
std
aad
or
insb
loopne
or
jge
jp
pop
js
lret
jbe
mov
js
int3
out
pop
cmp
mov
add
xchg
int3
ljmp
push
das
dec
xor
pushf
mov
dec
adc
xor
sub
ret
mov
fisttpll
mov
je
ror
jmp
xor
jp
jne
ljmp
jg
dec
outsb
out
aam
sahf
mov
jecxz
dec
xlat
sbb
ret
and
mov
mov
test
fldl
inc
mov
lock
cwtl
push
lods
cli
pop
mov
cmp
sbb
adc
stos
push
fsqrt
aas
leave
mov
adc
enter
dec
je
popf
cmp
sub
out
xor
mulb
mov
mov
and
adc
or
lahf
cmp
pop
pop
das
lods
call
jle
xchg
xor
call
mov
sbb
cmpsl
test
add
popf
xlat
aas
cs
adc
lods
out
icebp
into
lret
subl
mov
jnp
mov
lcall
popa
add
fadds
imul
mov
and
daa
pushf
jno
cmp
adc
jle
adc
and
insl
ret
arpl
ja
and
mov
push
rcrb
insl
ret
mov
inc
mov
cli
add
push
mov
daa
ljmp
in
xor
dec
adc
push
push
lock
in
cmpsb
inc
addr16
outsl
insb
lea
subl
dec
out
cwtl
daa
sbb
xchg
ss
mov
outsb
cmpsl
push
xchg
imul
mov
inc
gs
mov
aas
loope
pop
add
mov
imul
iret
sarb
scas
mov
add
sbb
pop
xchg
stc
adc
mov
xchg
call
test
repz
popf
xchg
jmp
fwait
mov
push
stos
push
or
inc
dec
mov
neg
outsl
sbb
xchg
hlt
cwtl
pop
push
cmp
mov
or
mov
and
pop
ja
adc
jnp
xchg
adc
testb
mov
dec
shll
sbb
rcll
push
iret
xchg
shll
cltd
les
in
rorl
daa
jg
aam
and
leave
sub
loopne
imul
sub
xchg
test
add
xlat
nop
jg
dec
fwait
hlt
subl
jmp
test
pop
add
jle
xor
xchg
cmp
jb
xor
mov
xlat
sbb
dec
inc
in
test
fsts
xchg
sbb
cmp
adc
hlt
jl
movsl
call
and
xchg
lahf
ficoml
cmp
addb
mov
loop
shrb
push
jnp
icebp
push
dec
adc
sbb
jno
cmp
in
adc
pop
nop
add
es
cmc
int
popf
jo
dec
inc
push
or
xchg
jl
dec
aas
sbbl
js
sbb
mov
sub
inc
mov
cmpl
mov
decb
sub
ds
out
mov
mov
adc
adc
out
adc
andb
icebp
xor
cmp
dec
stos
je
mov
mov
pop
mov
loop
imul
inc
mov
inc
inc
inc
adc
ficoms
push
jecxz
out
push
push
sbbb
leave
cltd
shrb
cmp
test
xor
xchg
and
push
clc
inc
popa
cmc
addr16
cwtl
sub
fidivs
ret
subl
sbbl
jle
push
ljmp
mov
in
out
adc
lock
test
mov
lock
and
add
add
imul
aaa
mov
mov
lods
repz
lcall
adc
mulb
test
jne
cmpsl
and
outsl
push
fdivs
insl
dec
sub
add
adc
scas
popa
std
and
cmpsb
xchg
cld
test
sbb
inc
pop
in
push
mov
xlat
sahf
mov
les
mov
mov
xchg
push
and
sbb
mov
mov
fucomp
clc
lret
mov
in
sbb
xchg
sub
cmc
cmpl
data16
and
into
xor
inc
push
jle
lcall
fs
cld
fisttpll
hlt
fidivl
iret
bound
sbb
cmp
test
out
adc
inc
cmp
dec
mov
call
int3
rclb
cmpl
sub
lret
rcrl
jg
fs
pop
lods
adc
sbb
mov
push
daa
popa
adc
pop
sbb
jmp
cmpsl
xchg
xchg
sarb
incl
push
xor
enter
les
popf
sahf
push
pop
and
mov
jne
adc
rsm
ds
into
push
mov
cld
repz
insl
and
aad
test
out
popa
cli
push
into
cmp
bnd
cmp
mov
xchg
sti
insb
cpuid
cmp
cltd
push
add
mov
aad
cltd
pushl
out
ja
fwait
sbb
mov
std
mov
or
push
mov
sbb
pop
jg
inc
aaa
sub
add
jge
pop
add
in
daa
jg
pushf
sbb
out
pop
repnz
stos
arpl
out
sbb
outsl
sahf
fcmove
push
add
mov
pop
cmp
mov
mov
fsubl
arpl
cltd
pop
clc
out
adc
xchg
xor
cwtl
sub
or
adc
fwait
mov
outsl
jns
mov
xlat
add
mov
out
adc
outsl
mov
mov
rorb
fcomp
push
int
lods
cmp
mov
or
test
andl
add
inc
mov
push
xor
cmp
push
jl
enter
pusha
xchg
push
mov
imul
jne
adc
jne
test
cmpsl
lcall
jo
ja
out
test
fcmovnbe
scas
or
jae,pn
xchg
and
xchg
add
lret
js
or
or
dec
jle
popa
hlt
stos
fsubr
loopne
add
test
fiadds
stc
cmp
push
frstor
fildll
jg
popf
pop
push
call
push
out
enter
ljmp
add
pop
push
jg
mov
push
pop
xchg
mov
add
mov
sbb
in
mov
out
mov
sub
xor
xchg
in
mov
inc
mov
sub
int
rolb
push
adc
outsb
adc
xchg
repnz
or
lds
sbb
mov
jle
sbb
dec
xlat
mov
cs
jno
push
lods
test
mov
push
loope
cmpsl
inc
fwait
push
repz
popa
les
lahf
out
dec
ret
xlat
decb
xor
cmp
mov
jmp
sub
shll
lods
out
stc
jb
gs
ss
pop
mulb
jg
leave
jl
in
inc
rcrl
fimull
push
mov
cmpsb
mov
scas
cmp
sbb
cmp
imulb
mov
sbb
fcmovu
push
hlt
lret
jmp
sub
imul
mov
sub
push
mov
jns
cltd
mov
and
pop
mov
push
pop
cmp
scas
mov
mov
je
scas
pop
insb
fnstcw
pop
inc
pop
add
xchg
inc
int
data16
and
push
sbb
jge
jbe
jbe
jmp
jns
fwait
popa
push
inc
imulb
repz
mov
add
mov
sbbl
clc
outsl
xchg
inc
xor
pushf
cmp
sbb
adc
xchg
cmp
inc
ret
iret
repz
jno
ss
adc
and
out
loop
loope
in
add
and
push
addl
mov
push
push
cmp
daa
testl
jge
scas
mov
imul
mov
mov
inc
call
je
inc
sti
mov
inc
rcrl
out
scas
mov
sub
and
ja
outsb
push
shlb
lock
jns
lods
js
pop
fdivr
inc
mov
mov
mov
ljmp
inc
mov
andl
add
cwtl
mov
bnd
test
adc
mov
fistps
sub
cld
jae
vpunpckhdq
sbb
loop
scas
addr16
mov
gs
negb
out
cmp
mov
mov
adc
xor
sub
movsl
es
adc
out
xor
mov
fldcw
loope
in
add
push
pop
out
data16
into
xchg
scas
xchg
or
andl
or
mov
push
bound
jns
movd
dec
ss
push
ss
xchg
dec
mov
inc
in
mov
pop
nop
xor
and
es
int3
out
cs
out
popa
xchg
dec
fs
dec
gs
pop
das
lret
out
loop
mov
into
mov
push
and
stc
jl
mov
push
jo
and
out
jne
and
or
and
push
sub
je
dec
mov
mov
inc
repnz
movsb
lret
cltd
rcr
mov
popa
ret
adc
sub
mov
mov
xor
sub
aam
push
shll
scas
ds
ds
outsl
test
dec
in
xchg
scas
sbb
xor
sbb
xchg
xchg
rcrb
mov
xor
cld
insl
mov
push
dec
xchg
aad
in
mov
cmpsb
jmp
push
dec
adc
push
test
mov
push
mov
pop
mov
mov
xchg
mov
mov
cmp
dec
push
scas
fildl
test
out
inc
shrl
ljmp
add
push
xor
push
stc
mov
shll
sub
bnd
mov
lret
and
push
cld
or
cmp
movsb
pop
adc
pop
mov
lds
push
mov
xchg
add
fcoml
jbe
cmpb
jne
cld
dec
add
sub
pop
sbb
jo
mov
notb
or
pop
cmp
mov
sbb
and
ja
jo
sub
stos
jo
or
loop
dec
pop
push
insb
test
pop
sbb
aam
in
xchg
push
test
or
or
mov
sti
mov
insb
loopne
pushw
loope
xchg
int
stc
pop
dec
test
push
xchg
jp
mov
outsb
popf
jge
rcrl
out
rsm
add
cmp
subl
jbe
inc
imul
icebp
pop
dec
add
mov
push
call
es
subb
insl
add
inc
mov
mov
je
fcoml
sub
cmpsl
inc
mov
movsl
push
dec
fimull
mov
jge
inc
bound
mov
test
ljmp
test
imulb
dec
jbe
sbb
sbb
xchg
outsl
push
inc
ret
out
data16
jbe
ret
es
push
mov
stos
pop
in
inc
dec
mov
pop
popf
mov
jmp
xor
push
pop
pop
mov
data16
mov
mov
roll
push
sar
lods
sbb
arpl
mov
sub
xor
push
and
xor
sub
mov
or
imul
cltd
pop
push
les
push
pushf
std
hlt
fisubs
push
dec
sub
sbb
fimull
and
xchg
cmpl
mov
addb
mov
push
jo
repnz
pop
fs
leave
inc
cli
rol
stos
outsb
ret
stos
and
mov
out
dec
jmp
mov
cwtl
cmp
cmp
popf
mov
fsubs
inc
mov
stc
aam
xchg
mov
fidivs
sahf
adc
mov
scas
xor
push
fisubrl
xor
fisubs
dec
xor
jmp
shlb
or
aam
xchg
cmp
pusha
dec
jecxz
or
inc
cli
sahf
jb
arpl
ret
add
gs
jnp
pop
jge
lods
jo
aas
sbb
fdivp
loopne
and
lret
mov
cmpsl
pushf
add
in
stos
inc
push
jge
into
mov
jo
pop
subb
lcall
mov
repnz
add
rcl
test
out
cli
daa
and
mov
mov
movsb
cmpsb
inc
inc
mov
rorl
rcl
add
repnz
xor
or
sub
or
stc
lahf
jno
loopne
iret
sbb
sbb
aas
and
inc
adc
ja
popf
and
mov
mov
and
xlat
in
jns
adc
jno
pop
les
sbb
les
and
in
hlt
jae
push
hlt
push
mov
jp
in
sbb
es
neg
dec
jb
sahf
sub
jle
jbe
std
sar
jle
add
sti
imul
fsub
je
mov
outsb
cld
mov
jne
and
pop
add
mov
adc
dec
fiaddl
push
cld
inc
pop
imul
pop
pop
leave
fstpt
aam
dec
xor
cwtl
mov
cli
repz
dec
hlt
push
das
and
test
and
subb
addl
mov
push
pop
mov
push
fistps
fstpl
movsl
xchg
rolb
out
fsub
mov
lods
push
popl
mov
and
push
and
sub
addr16
cmpsb
fisubs
sub
jbe
xchg
aam
mov
cli
ficoml
movsb
cltd
adc
pop
gs
sbb
sti
jmp
adc
sbb
stos
add
cmp
mov
xor
sbb
lret
fcomps
roll
sarb
pop
out
pop
aaa
cmp
data16
xor
adc
rorb
sbb
mov
icebp
mov
stos
sub
push
xchg
mov
sub
sub
std
mov
cs
or
lds
jge
pop
cltd
dec
dec
fldl
icebp
mov
in
and
mov
adc
push
insl
mov
scas
arpl
addr16
test
or
mov
inc
js
roll
pop
cmp
ss
cmp
out
into
xchg
pop
add
xor
or
je
push
jne
mov
addl
add
imul
adc
data16
jg
fisttpll
adc
add
rclb
test
push
movsl
sahf
aam
dec
ja
xchg
or
and
mov
and
insb
pop
mov
sub
pop
jo
xor
daa
lods
leave
fistps
decb
dec
cmp
call
sbb
inc
add
mov
dec
in
jo
ret
lock
sbb
idivl
xchg
xchg
jne
sbb
mov
add
jae
push
ljmp
popa
clc
cmp
imul
xchg
in
icebp
push
sbb
ret
movsb
inc
ficomps
mov
rorb
mov
mov
pop
adc
filds
add
fcmovnb
popa
cmp
sub
push
xor
out
aas
or
in
fs
jb
cmp
das
mov
fs
cs
stc
je
inc
jl
mov
nop
jle
test
mov
xor
jns
cmp
adc
cmp
mov
sbb
cld
mov
lds
pusha
sub
push
xchg
add
sbb
stc
mov
dec
leave
lods
out
movsb
mov
jne
mov
jmp
out
sub
pop
adc
aaa
fdivl
sub
mov
pop
das
sbb
jne
cmp
pushf
cmp
mov
and
sbb
sub
push
inc
movsb
jo
lahf
add
mov
push
addr16
pop
sarb
jns
jb
test
pusha
adc
or
aad
add
jb
lahf
mov
daa
rcr
mov
pop
mov
clc
push
pusha
and
dec
lods
pop
pop
stc
jnp
lcall
outsb
mov
outsl
ds
dec
stos
mov
hlt
inc
scas
in
int
out
fsubrp
push
xor
enter
ja
lcall
mov
sbb
js
sub
ss
into
lods
mov
stc
mov
mov
pushf
shr
sbb
loope
in
insb
and
inc
dec
jge
addb
test
leave
xchg
aam
adcb
push
sub
icebp
loope
jp
scas
rolb
mov
mov
sbb
pop
dec
scas
pop
movsb
dec
test
add
fcmovb
jmp
pop
or
repnz
xorl
ret
les
subl
mov
jo
mov
cmc
adc
push
xchg
mov
and
fisubl
out
add
mov
movsb
sbb
mov
scas
es
mov
stos
cli
cmpb
gs
icebp
and
xlat
cli
imul
orl
xchg
inc
int
xor
ds
xlat
cmp
xchg
cmp
lds
cli
pop
stc
push
aaa
pop
sbb
icebp
cmp
gs
in
push
orl
out
sub
and
loopne
cmp
loopne
cmp
sarl
out
jmp
adc
clc
into
popf
push
dec
ret
lock
call
jecxz
sub
xor
and
ret
repz
adc
mov
xor
clc
xchg
lahf
das
sbb
jae
jg
pushf
sbb
xlat
andb
les
popa
cmc
filds
and
adc
icebp
sti
stos
and
push
stc
and
int
pop
mov
lds
or
adc
sub
lods
mov
mov
fimuls
jmp
hlt
cmp
jl
mov
insb
push
lcall
adc
popf
lret
jnp
pop
push
cwtl
push
lods
and
xor
fdivl
repz
mov
pushf
inc
or
sbb
leave
pop
aam
push
push
ds
les
lods
xchg
adc
mov
cltd
sti
push
cmc
popf
xchg
in
add
xlat
test
adc
mov
and
sbb
imul
or
icebp
mov
aas
or
gs
push
jno
out
rep
loopne
in
push
xchg
sub
mov
pop
fidivrs
loope
xor
push
push
inc
sbb
mov
mov
rcl
sbb
mov
ret
mov
test
and
cmp
pop
stos
test
stos
loop
pusha
dec
mov
mov
pop
sub
mov
sti
sbb
mov
jb
mov
pop
cmp
jbe
add
jecxz
fneni(8087
sbb
fnstsw
sti
cmc
orl
or
or
xor
adc
inc
fstpl
bsr
aam
and
popf
and
call
push
fisttps
es
xchg
test
inc
xor
pop
lahf
fnstcw
insl
xchg
sub
push
pop
cltd
scas
es
fmull
and
das
add
cwtl
sbb
mov
mov
add
sub
fiaddl
sahf
rcrb
bound
inc
movsl
cltd
mov
js
and
lods
test
push
sbb
cwtl
in
insl
mov
cs
add
icebp
push
call
dec
outsb
fsubl
add
aam
cwtl
fistpll
mov
sbb
mov
pop
clc
fldt
lahf
lret
cmp
ss
fwait
xor
dec
dec
mov
cwtl
mov
cmp
inc
add
mov
xor
stc
sub
test
adc
nop
xchg
sahf
push
in
mov
xchg
xchg
xchg
push
cmp
lods
std
mov
and
imul
mov
lea
dec
xlat
jb
push
ficomps
ret
fsubrl
sbbl
add
inc
pop
test
sbb
dec
xor
mov
xor
test
inc
lock
arpl
aam
test
jg
mov
lock
xchg
sbb
gs
test
pushl
popf
lock
lcall
cld
jmp
cli
dec
sub
fnstsw
push
jae
lock
rol
mov
or
inc
mov
call
es
or
cmpsl
cmp
scas
lock
loope
inc
nop
jecxz
dec
daa
fcomps
push
inc
pop
int3
push
push
js
mov
dec
bt
cmp
test
mov
sbb
xchg
sbb
rolb
cmpsl
pop
mul
int3
cmp
push
mov
rcrl
ret
aam
test
enter
icebp
jne
push
bound
insb
movsl
pop
bound
notl
inc
pop
pop
jg
loop
inc
pop
dec
cmc
mov
cmp
ret
pop
in
sbb
pushf
jns
dec
push
jno
xchg
out
shl
aaa
pop
pop
andl
aaa
aaa
pop
pop
pop
jbe
ds
xor
push
int3
adc
pop
leave
ja
and
repz
enter
and
in
fdivl
out
mov
jnp
sahf
inc
push
xchg
arpl
jmp
sub
push
jmp
notl
pop
mov
pop
sub
filds
decb
stos
mov
mov
mov
sarb
xor
icebp
and
xlat
add
push
mov
mov
enter
pop
lret
xor
ret
loope
data16
jae
mov
sub
xlat
or
lods
sbbl
loope
jns
dec
mov
daa
mov
rcrb
pop
jo
xchg
sbb
jns
shl
cmpsl
jp
pop
stc
cmp
sbb
sub
adc
call
cld
mov
mov
dec
scas
icebp
andb
adc
push
sub
pop
pop
icebp
mov
pop
outsl
out
andl
dec
sbb
mov
enter
and
mov
enter
ret
sub
xchg
mov
xor
fwait
or
inc
jecxz
pop
bound
aam
mov
jge
xlat
shll
in
icebp
jbe
jecxz
fcomps
popf
add
mov
pop
mov
repnz
pop
out
inc
movl
mov
cmp
fldl2t
in
sub
pop
pusha
ficompl
scas
push
or
jecxz
hlt
les
movsl
loope
add
pop
mov
gs
xchg
test
cli
adc
mov
jmp
shrl
xor
rol
add
mov
and
cmp
sbb
add
lahf
pop
popa
js
jle
sti
or
dec
pop
mov
inc
adc
jecxz
cmpsl
addl
push
mul
test
aas
push
mov
lds
pop
out
stc
jae
xchg
mov
and
jnp
jbe
es
inc
push
cmp
mov
and
jne
add
xchg
xor
add
cmp
sub
std
mov
stos
in
xchg
leave
cmp
popf
cmp
mov
mov
fs
sarb
mov
or
popa
mov
xchg
jle
push
cmp
inc
adcl
mov
sbb
ret
sub
adc
aaa
jb
addr16
add
lds
push
pushf
in
lds
xchg
shlb
fldcw
stc
mov
in
pop
xchg
ret
xchg
sbb
out
dec
outsl
push
mov
mov
int3
sub
loope
pop
scas
inc
xor
rcl
mov
lds
mov
insl
push
es
stc
push
in
ret
in
in
jno
xchg
pusha
or
outsb
pop
subl
xchg
mov
ficompl
movsl
iret
push
insb
dec
cmp
dec
add
lea
dec
cmc
insl
and
dec
aaa
and
pop
sub
dec
in
jge
iret
in
mov
push
mov
push
or
xchg
sbb
dec
mov
mov
pop
jo
scas
jo
inc
es
repz
movsb
adc
mov
inc
rolb
lret
cmc
dec
lock
ret
and
mov
shl
xchg
sbb
movsb
inc
jp
lahf
fldenv
es
sti
fdivrs
add
sbb
ljmp
inc
jne
es
into
sbb
push
mov
in
fcomip
shrl
dec
test
adc
jno
mov
mov
insb
cmc
add
cmp
scas
adc
sbb
pop
pop
cmpsl
push
cli
push
in
xor
repnz
or
inc
repz
test
or
js
xchg
sub
lods
popa
mov
adc
and
push
dec
imul
or
test
das
or
mov
out
leave
insl
push
out
cmp
iret
addb
sbb
divps
pop
jge
gs
daa
fnsave
xchg
xchg
mov
pop
ds
pushf
icebp
lods
ret
daa
loope
int3
sub
jle
insb
pop
or
ja
ficompl
mov
rcrb
shr
test
inc
out
popf
adc
jb
les
stc
mov
addb
sbb
ljmp
mov
adc
mov
inc
outsb
pop
movsb
or
pop
jns
ud0
cmpsb
dec
bound
mov
inc
scas
push
xlat
ss
aas
addr16
mov
mov
xchg
imul
hlt
mov
jo
sub
ljmp
cmp
imul
aad
sbb
ja
fidivl
ja
icebp
ret
clc
lds
ds
jmp
icebp
fsubl
jae
mov
fisttps
and
sub
pop
sub
aam
xor
test
jnp
inc
xchg
or
push
jo
pop
scas
movsb
pusha
scas
adc
pop
insl
mov
lods
mov
icebp
testb
repnz
into
or
pop
pop
push
sti
xchg
add
add
int
push
xchg
jg
dec
mov
jne
pcmpeqb
inc
aam
and
lcall
jmp
int3
jnp
loop
dec
leave
push
repnz
xchg
insl
adc
stos
arpl
mov
adc
out
cwtl
aas
xchg
jns
xchg
lret
xchg
mov
mov
sub
or
add
sbb
out
push
sbb
ret
sti
cmp
enter
xor
sti
lods
loopne
jno
ja
push
lcall
pop
rol
repnz
xor
pop
faddl
mov
sub
cmpsb
mov
inc
sbb
pop
test
ret
pop
outsb
jne
sbb
mov
roll
addr16
rcrb
arpl
popf
fnstcw
imul
test
lods
data16
pop
adc
filds
dec
lahf
or
xor
or
in
or
out
fsubs
cs
mov
es
mov
mov
or
data16
push
pop
jae
inc
add
hlt
icebp
push
sub
out
sahf
mov
iret
and
lcall
mov
out
call
or
adc
subl
mov
push
sahf
jg
lods
sbb
mov
xchg
aaa
cli
pop
shrl
fadds
and
imul
adc
imul
xchg
lods
jnp,pt
pop
dec
push
xchg
fdivl
call
cmp
push
in
shll
je
lock
pop
and
fisubrl
shlb
and
pop
adc
dec
arpl
out
pop
fbstp
push
rcr
int3
orl
rol
or
sahf
and
shl
insl
test
pop
leave
rorb
fldt
xlat
push
fs
xor
pusha
mov
lcall
hlt
pop
mov
imul
push
xchg
aad
jle
push
adc
stos
scas
push
xchg
mov
rol
jnp
das
lods
inc
sub
lcall
gs
push
push
jno
inc
pop
cwtl
adc
out
test
orl
in
fldcw
aam
outsb
mov
int
ficomps
outsl
aad
sub
xchg
mov
shrl
push
mov
push
adc
mov
rcrl
fcomps
outsl
nop
and
pop
dec
cmp
aad
movsl
test
xchg
jecxz
ret
ljmp
clc
test
not
mov
orl
pop
test
sarb
mov
lds
sub
cld
mov
sbb
inc
dec
outsl
fisubs
dec
aam
shrb
insb
pop
pop
sub
sub
mov
loopne
fsts
cmp
xchg
test
loope
pop
xchg
mov
cltd
cmpsb
xor
fs
jnp
sbb
xor
and
push
sbb
inc
aam
addb
lea
and
scas
fdivs
dec
lods
push
fstl
or
gs
fdivrl
in
fdivp
mov
cmpb
popf
scas
fs
mov
mov
push
mov
sahf
sbb
pop
pop
cmc
out
mov
sub
stos
cs
gs
lss
cmp
pusha
lret
inc
test
jne
dec
mov
testl
jb
repnz
outsb
xchg
into
mov
out
mov
addb
xchg
xor
and
fstps
stc
push
cmp
bound
inc
xor
repz
mov
push
imul
in
xchg
mov
xor
std
fs
push
repnz
decl
xchg
push
pop
mov
gs
xor
mov
test
movsl
aam
pop
push
mov
mov
test
add
mov
sbb
or
in
insb
mov
std
nop
adc
lods
push
lret
mov
inc
stos
pop
xor
in
jae
stc
shr
add
loope
imul
adc
sub
daa
mov
clc
repz
out
pop
inc
jmp
ja
test
bound
packssdw
push
imul
cmpsl
arpl
js
orl
cmpsl
fcoms
out
into
add
out
sub
inc
movsb
icebp
mov
mov
add
pop
andb
lea
add
or
mov
mov
cld
dec
push
lods
or
jl
inc
and
cmp
sarl
push
mov
rclb
mov
js
mov
int
add
xor
xor
jae
das
mov
cmc
movsb
loop
mov
daa
in
dec
out
sub
inc
fmull
and
sahf
out
pop
inc
pop
and
inc
add
sbb
rcll
lods
add
mov
jge
jo
sahf
sub
xchg
pcmpeqb
sahf
cli
mov
cmp
stc
push
mov
push
in
jg
dec
jnp
cmp
mov
lods
xlat
push
sub
fwait
repz
ds
and
cmpsl
add
ds
das
loope
inc
pushf
xchg
int3
sub
push
icebp
or
into
jl
push
scas
idiv
jg
lahf
inc
ret
push
in
jecxz
repnz
aas
push
inc
jbe
leave
jns
mov
cld
sbb
loope
ret
dec
aaa
aaa
or
pop
iret
aam
inc
mov
fiadds
hlt
stc
push
ds
mov
es
shlb
fs
push
jnp
add
pusha
lods
jnp
sub
xchg
cli
js
pop
add
or
je
jnp
imul
stc
mov
pop
cltd
mov
ror
out
ds
inc
psllw
pop
mov
in
inc
pop
xchg
sub
push
subb
push
push
fucomp
jmp
cs
lock
or
xlat
jg
imul
insl
push
loopne
cmp
sbb
xchg
adc
mov
cs
cs
inc
mov
mov
out
rolb
leave
repz
fsubrp
inc
mov
cmp
jne
mov
sbb
in
mov
imul
push
cmp
das
xor
inc
ja
fisubl
loopne
mov
mov
andb
and
neg
jae
inc
fwait
and
adc
cmpsb
fs
adc
adc
pop
sahf
outsl
xchg
xchg
and
orb
fwait
xor
repz
dec
stos
movsl
jns
xchg
sarl
pop
out
sub
dec
mov
in
addr16
jne
mov
stos
in
fcoms
notb
pusha
outsl
test
add
xchg
jge
xchg
inc
add
inc
add
out
mov
ljmp
mov
out
aas
sbb
sub
imull
xchg
adc
push
fbld
mov
sub
out
rolb
aas
call
mov
xor
jb
sbb
daa
aas
mov
lcall
shrl
push
or
mov
push
mov
sub
pushf
jnp
in
mov
mov
movsb
test
imul
inc
push
sub
cs
jecxz
sbb
rcll
xchg
js
sbb
mov
iret
dec
inc
mov
jmp
push
fs
dec
ret
or
inc
jp
xor
cmp
cmp
push
sbb
cs
aad
insb
imul
hlt
push
add
cmpsb
fmull
addr16
cli
or
test
pushf
xlat
mov
push
sbb
xchg
mov
fistpl
jp
jae
cli
sub
xchg
add
xor
jmp
jecxz
int
inc
mov
popa
cmp
mov
xchg
lods
insl
daa
xchg
les
xchg
sbb
mov
jb
pusha
mov
mull
bound
aad
pop
dec
push
popa
popa
scas
jae
jo
mov
adc
and
xchg
adc
xchg
sahf
pop
pop
enter
sahf
dec
xor
pushf
mov
cmp
push
push
inc
call
pop
cmp
mov
mov
stos
je
jge
cmpsb
jb
shr
cmp
imul
ret
out
inc
sbb
mov
jbe
incl
cmp
pop
add
xor
movsl
orb
xchg
inc
std
sub
and
pop
add
mov
inc
jmp
imul
jae
lods
add
into
inc
in
mov
insl
gs
dec
mov
in
or
jbe
push
lods
dec
push
xchg
das
rorl
and
sahf
adc
leave
insl
shrd
sbb
dec
sahf
jns
or
lcall
cmp
sub
inc
xor
in
inc
imulb
outsl
lods
mov
mov
sub
fsub
lods
cmpsb
movsl
jp
xchg
xchg
clc
add
add
int
and
in
lret
outsl
inc
icebp
add
ja
sbb
mov
adc
mov
adcl
lods
xchg
adc
mov
inc
pause
push
test
inc
fstps
and
scas
lods
rcr
mov
in
insb
gs
adc
dec
jb
inc
xchg
stos
mov
fimull
add
push
pop
nop
pop
dec
ret
pop
jecxz
mov
inc
add
or
leave
xchg
sub
int3
mov
shlb
dec
add
lds
out
addb
addr16
xor
sahf
stos
ficoms
jge
push
fadds
aas
lock
mov
scas
iret
cmp
push
mov
mov
adc
movsl
idivl
ds
xchg
inc
ja
mov
pop
sti
ja
popf
out
notb
js
mov
lods
mov
cltd
jge
enter
sub
dec
cmc
aaa
adc
lock
movsb
push
sub
out
sti
sub
fcoms
add
adc
insb
jae
push
jnp
pop
pushf
loop
test
jae
in
lods
fdiv
sub
pop
pop
dec
or
push
mov
cmp
movsb
mov
push
add
jae
ds
or
push
mov
jne
int3
cld
int3
arpl
inc
js
mov
loopne
movsl
jne
pop
adc
stos
push
dec
adc
jmp
mov
lods
hlt
dec
cli
cmc
xchg
jg
fisttps
sarl
cld
adc
leave
sub
movsb
xor
movb
lret
or
fisubl
mov
push
stos
add
test
lock
xchg
fs
jl
js
mov
push
xchg
mov
mov
xchg
lcall
jae
stos
data16
filds
lret
mov
loope
loope
mov
fwait
jno
xchg
mov
fsubrs
bound
push
cmpsl
dec
insb
xchg
dec
rclb
fmulp
add
or
mov
lahf
js
or
or
ljmp
mov
push
jne
xor
or
pop
stos
mov
xor
pop
stc
lret
cwtl
call
fs
data16
popf
jp
mov
jle
dec
enter
push
lret
test
mov
int3
outsb
mov
or
inc
adc
cmp
inc
sahf
lods
in
ds
push
cmpb
out
imul
adc
cmp
and
cmp
mov
ret
fisttpl
mov
stos
int3
dec
insb
popa
movsl
jae
push
out
dec
pop
cmp
mov
xchg
adc
push
outsl
xor
push
mov
dec
add
gs
cmc
lret
cmpl
dec
clc
scas
mulb
outsb
addl
lock
xor
leave
inc
add
lcall
adc
test
adcb
dec
dec
mov
js
out
pop
pop
pop
test
push
imul
out
cmp
or
cmpsl
push
add
push
loope
sub
sbbl
ret
je
in
orb
insb
fistpll
iret
cmp
adc
pop
push
adc
mov
pop
int3
jbe
cli
pop
arpl
push
fdivl
xor
xchg
or
sub
or
aad
ret
add
mov
inc
fsubrl
popf
lea
out
pop
jns
clc
cld
inc
lock
shlb
mov
jne
insb
sbb
loope
push
sub
jl
xor
lods
sub
dec
xchg
call
push
aam
push
fwait
imul
mov
loop
popf
popf
xor
cmp
lods
and
aad
ret
mov
push
adcb
ja
or
xor
jbe
cld
in
fisttps
stos
pusha
jnp
cwtl
stos
cmc
out
fcoml
push
lahf
in
sbb
cltd
jecxz
lods
and
cmp
stos
ljmp
out
out
js
or
pop
adc
aaa
cmpsl
stos
cwtl
inc
dec
mov
or
pop
jmp
cs
out
out
aas
lret
nop
repnz
add
imul
out
mov
ret
xor
ror
mov
pop
jg
loope
xchg
push
in
loope
mov
std
das
data16
stc
pop
out
outsl
fbld
arpl
mov
outsb
inc
pop
fwait
cmp
xchg
shr
dec
jmp
mov
jae
dec
mov
inc
lret
add
outsl
fdiv
lret
or
inc
cmp
sub
jb
xor
sub
lods
push
sub
test
jae
push
out
xor
adc
mov
lcall
scas
mov
mov
push
es
push
vpsadbw
inc
pushw
or
mov
add
add
into
xor
add
ret
inc
into
leave
push
xchg
frstor
xor
xlat
test
mov
fldt
loope
aam
loopne
insb
push
test
stc
mov
dec
xchg
fistpl
adc
sub
push
sbb
push
or
pushf
lock
mov
jle
inc
push
daa
jo
nop
data16
adc
das
scas
push
xchg
and
pop
sbb
sbb
pop
rorl
icebp
cmpsb
sbbb
adc
xor
mov
test
mov
mov
push
pop
shl
push
add
cmove
sub
cltd
into
adc
mov
lret
dec
dec
rol
or
push
cmp
ljmp
mov
and
sub
mov
add
out
cmpsl
faddl
cltd
divb
aas
addb
add
cmpsl
adc
fisttpll
lock
xchg
sarl
imul
and
ja
xlat
int3
push
jno
test
cmp
add
dec
jge
fdivrs
sub
cmp
rcl
test
pop
adc
mov
push
dec
adc
add
mov
or
shl
dec
lret
pop
and
movsl
add
and
or
jmp
scas
dec
xchg
shll
imul
push
push
xor
inc
mov
or
xchg
pop
mov
sub
mov
push
sbb
popf
dec
je
sub
aad
mov
daa
scas
push
into
mov
mov
inc
aad
jno
test
lret
cli
cmp
push
xchg
outsb
movsb
cmp
std
adc
loop
adc
lods
xchg
scas
fsub
sub
mov
adc
sarl
insb
pop
dec
push
pop
sbb
arpl
leave
mov
mov
loop
inc
xchg
jo
add
into
jp
dec
dec
ja
xchg
sahf
sar
sbb
cwtl
cltd
xchg
into
scas
mov
pusha
jne
cmp
add
mov
push
and
loopne
adc
pop
andb
dec
add
movsl
and
mov
enter
jecxz
jg
cmpl
repnz
mov
stc
pop
lds
lds
in
inc
sahf
rcrl
data16
out
add
stos
inc
pop
add
mov
out
jmp
dec
stos
insl
mov
aas
sub
fld
sbb
movsb
imul
dec
pop
adc
fiadds
or
repz
mov
cmc
inc
sbb
xor
xorl
push
adc
pop
pop
mov
notl
sbb
xchg
cmpb
add
repnz
mov
adc
mov
sub
daa
cmc
fistpl
dec
dec
lcall
addl
adc
les
lock
sub
pop
data16
cmp
out
mov
inc
mov
xchg
adc
roll
push
push
ja
decl
inc
std
fdivrs
xchg
lds
pusha
xchg
lea
pop
jge
cltd
lea
enter
mov
mov
mov
js
mov
add
inc
mov
cmpsl
pop
ret
sbb
outsl
mov
add
mov
mov
cmp
xor
jns
and
xor
out
mov
pop
dec
cmp
imul
lock
int3
cld
aam
xor
in
loopne
mov
push
testb
loop
sbb
stc
sarb
jmp
inc
in
jmp
cmpsb
pop
fs
sbbb
nop
subl
jno
or
and
jns
dec
dec
xor
fsub
cmpsb
add
cmp
sti
into
cmc
mov
adcl
adcb
sbb
mov
cmp
dec
jno
pop
int
jae
mov
movsb
idiv
xor
pop
xor
sbb
pop
pop
aas
das
cmp
or
xor
mov
cmpsb
testl
popf
dec
negl
cmp
mov
pop
movsl
dec
movsl
xchg
movsl
pop
push
jo
add
xor
adc
sbb
add
bound
addr16
cmpsb
lret
jae
sti
xor
ret
sub
sti
mov
fcoms
mov
in
ds
push
xchg
mov
loopne
push
iret
mov
ret
add
stos
xchg
lcall
jmp
insb
je
aaa
std
out
lret
and
andb
fst
mov
mul
adc
mov
mov
sub
clc
pop
pop
inc
jl
mov
les
and
xchg
dec
cwtl
jecxz
sbb
cmp
cld
adc
add
push
or
adc
add
add
shl
mov
sub
pop
call
and
or
xor
adc
mov
inc
mov
jo
jbe
bound
int
xor
jb
lret
jle
push
fisubrl
fld
jp
arpl
xor
test
enter
mov
xchg
cmp
sti
test
mov
aam
loope
mov
add
insb
mov
xor
xchg
jnp
leave
inc
icebp
inc
jns
jle
sbb
mov
push
fldl
rol
or
test
lahf
cmp
enter
and
lret
xor
popf
lds
in
popf
inc
loope
jnp
cwtl
jg
fdivrl
push
idivb
adc
xchg
adc
shll
mov
out
add
cmp
ret
cwtl
addl
fsubp
add
int
and
add
lds
xor
out
out
push
cmc
xor
ja
in
adc
add
xor
mov
push
lea
loopne
lods
stos
or
nop
dec
mov
dec
notl
push
or
and
pop
cmp
push
sbb
and
and
xchg
lcall
pop
sub
adc
mov
mov
mov
inc
sbb
add
shlb
addb
jns
leave
daa
pusha
or
push
inc
sub
mov
mov
xchg
addr16
add
daa
sbb
cmp
mov
mull
int3
xlat
dec
call
sbb
lods
jl
pop
sub
jns
or
adc
sbb
cmc
ret
sub
or
sbb
push
dec
mov
and
mov
repz
lahf
loopne
lock
mov
dec
pop
fdivrs
inc
cs
sbb
inc
testl
pop
and
push
shlb
aam
xorl
push
imul
dec
lock
fwait
outsb
pusha
cmpsb
repnz
sub
add
inc
into
xchg
inc
pushf
sbb
call
push
out
aas
fs
imul
jge
dec
pop
imul
push
rorb
and
leave
mov
inc
fwait
outsl
mov
repz
mov
push
xor
push
dec
add
mov
push
cltd
out
push
scas
testb
imul
dec
lods
adc
push
stc
ljmp
adc
jmp
shlb
lds
sub
jl
and
or
adc
or
lret
imul
clc
mov
cwtl
jmp
push
inc
popa
pop
les
stc
adc
push
push
jg
cmpsb
dec
stos
mov
xchg
mov
dec
mov
xor
dec
imul
cmpsl
rolb
dec
in
inc
mov
mov
jb
inc
outsb
scas
sbb
test
or
pop
lods
add
mov
mov
cmovle
mov
adc
popf
pop
push
pop
cltd
dec
aad
push
inc
inc
lcall
adc
js
ja
mov
jmp
ljmp
jp
shlb
mov
xchg
pop
sbb
sub
cmp
sbb
xlat
pusha
call
fisttps
inc
imull
inc
sar
pop
pop
pop
xchg
jno
lahf
les
test
je
sbb
add
xor
inc
or
pop
or
pop
shll
inc
jno
sub
lcall
sbb
in
sahf
scas
mov
jae
sub
data16
pop
iret
fsubl
fildll
adc
in
adc
clc
les
loop
dec
out
mov
pushf
sub
cmp
cmp
ja
cmp
in
jnp
and
mov
push
shrl
js
shr
dec
pop
mov
inc
jp
shrb
movsb
cli
cmp
ret
jbe
ja
movsb
dec
and
mov
cmp
sub
loope
in
sbb
and
fadd
and
testb
sbb
shll
in
les
xlat
aaa
and
fs
icebp
ret
rclb
and
jmp
out
pop
xchg
std
xchg
and
into
mov
repz
adc
mov
cmpl
dec
rclb
mov
mov
or
aaa
call
mov
jbe
xor
cld
enter
push
rcll
inc
push
xlat
cltd
jecxz
push
cmpl
mov
fwait
push
outsl
xchg
dec
dec
fdivr
mov
out
jle
and
in
outsl
jmp
push
sti
fsub
shrl
shlb
push
cmp
xchg
pop
sbb
cmpsb
cli
pushf
mov
jne
mov
push
arpl
and
xchg
sbb
sahf
mov
fcmovne
mov
cli
jae
fcoml
loopne
jo
adc
scas
xor
mov
stc
pop
ret
jl
and
mov
repz
std
sbb
loope
mov
lret
mov
add
mov
sub
cmpsb
icebp
jmp
dec
into
jge
pusha
inc
adc
lea
mov
dec
ljmp
mov
shlb
pop
icebp
addr16
mov
adc
imul
sbb
out
jecxz
sbb
pushf
leave
mov
cld
push
stc
add
clc
pop
xchg
fstpl
push
mov
insb
pop
insl
ret
mov
std
loop
and
sub
outsb
loop
mov
divb
aad
clc
and
xlat
addr16
cmpsl
out
dec
sub
sbb
and
int3
rcl
lods
xlat
mov
shrl
push
ds
cwtl
push
mov
pop
jl
je
dec
push
out
negb
pop
lea
cmp
jns
mov
and
add
pop
or
pusha
push
add
adc
ja
mov
sbb
movsb
adc
mov
sub
xlat
out
in
mov
aam
shlb
cltd
xchg
push
add
out
leave
roll
pop
xchg
rorb
aaa
int
hlt
imul
stc
mov
gs
je
add
arpl
and
lret
cmpb
lock
jmp
xchg
dec
dec
gs
iret
jmp
aaa
test
adc
add
lret
data16
mov
xor
mov
adc
in
ja
call
das
addr16
sarb
ror
sbb
fstp
fisubrl
jb
jmp
mov
xchg
pop
jecxz
sub
js
scas
daa
xchg
leave
mov
jno
and
es
sub
idivl
inc
add
sbbb
sbb
insl
testl
movl
mov
fadd
push
mov
leave
in
in
addb
sahf
and
xor
xor
jmp
push
je
fnstenv
or
jne
push
mov
push
out
or
xchg
xor
outsl
test
repz
jbe
or
adc
xor
push
sbb
movl
push
and
sbb
cmp
pop
std
aam
pop
mov
dec
mov
lret
jo
outsb
sbb
scas
or
notb
adc
push
sbb
fcomi
repz
push
sub
pop
cmpsl
cld
inc
sub
js
test
xchg
and
jp
int
push
inc
mov
add
in
xchg
xchg
lea
add
and
lret
push
add
in
push
mov
sbb
adc
adc
push
dec
pop
inc
aad
cmp
cmp
add
or
mov
addr16
push
call
int
inc
in
int
pop
imul
insl
mov
sub
sbb
add
loop
jl
pop
shrb
dec
arpl
pop
adc
mov
jle
adc
jnp
xlat
inc
mov
fcmovbe
scas
sbb
push
cmc
xchg
lods
imul
mov
mov
push
rorl
add
jg
popa
jns
push
dec
xor
mov
ss
add
xchg
sbb
sub
outsb
aaa
in
or
sti
mov
dec
jnp
pop
sub
and
stos
jecxz
xor
pushf
mov
das
ds
mov
ret
push
gs
xor
mov
mov
cli
pop
push
neg
jns
add
movl
roll
push
pop
cmc
lods
into
jno
imul
and
lahf
xlat
push
cmc
cli
xor
jno
lret
subl
sti
pop
pusha
loop
icebp
cmc
stos
dec
imul
pop
mov
dec
sub
xchg
idivl
scas
je
jae
inc
jmp
lahf
scas
sub
push
cmp
mov
out
dec
adc
pop
push
ret
mov
adc
or
lret
pop
sbb
xor
mov
fisttpll
mov
out
adc
mov
sub
insb
mov
sahf
in
sbb
cmp
or
push
iret
ret
jmp
inc
sub
sahf
shlb
ficoms
shlb
fs
adc
sbb
mov
jge
scas
mov
sub
xlat
shl
dec
sbb
call
inc
pushf
jmp
xchg
mov
xor
cmpsb
js
movsb
dec
or
jle
push
xchg
mov
lret
cmp
lret
pop
fidivl
mov
pop
dec
adc
test
jp
add
mov
dec
icebp
pop
cltd
outsb
lahf
dec
cli
pusha
mov
cmp
inc
xor
mov
fistpll
add
rcll
adc
pop
int3
out
sti
jbe
testb
cld
jle
pusha
lret
xchg
add
test
in
and
dec
or
add
xlat
cmp
cmc
stos
mov
and
sti
jg
mov
xchg
cwtl
jns
jnp
push
jne
scas
imul
push
leave
xchg
test
jo
pop
fiaddl
inc
adc
adcb
hlt
rorl
push
pop
or
pop
push
out
insb
sbb
mov
add
push
fs
xchg
jo
mov
test
adc
inc
and
insl
or
pusha
loopne
mov
pushf
adc
lret
rorl
sub
cmpsl
or
jo
inc
fildll
cs
pcmpeqd
jne
cmp
jae
sbb
and
push
call
xchg
lcall
es
stos
inc
push
loop
jmp
stos
fcoms
push
pop
rcrl
mov
pop
cmp
gs
popl
and
mov
repnz
icebp
popa
nop
xor
int
jge
sub
sub
fistps
icebp
aaa
push
fistps
imul
pop
je
and
mov
sub
push
mov
adc
add
mov
jg
imul
dec
mov
or
test
sub
pop
mov
inc
sub
enter
sub
xchg
jmp
mov
mov
ja
or
lea
out
lahf
jo
stos
dec
dec
ficomps
int
imul
out
xlat
xchg
xor
cmp
cmp
roll
test
xor
ret
cltd
mov
rcrl
push
dec
add
mov
xchg
lods
sbb
call
xchg
in
lock
lea
xor
dec
test
sarb
test
dec
mov
mov
cmp
sbb
stos
jnp
es
dec
in
mov
or
int3
and
rcll
mov
repz
jnp
and
xlat
lods
inc
gs
lea
inc
or
cmpsb
lahf
rcll
test
xor
xchg
sbb
push
jecxz
jp
push
fwait
xchg
xchg
dec
arpl
fwait
shll
cmp
push
out
into
shll
jae
sub
jno
mov
sub
cmp
cltd
push
pop
or
mov
push
outsb
dec
and
leave
cmpsb
loope
mov
sbb
mov
mov
arpl
or
push
int3
aam
pop
mov
adc
mov
mov
jmp
inc
lret
int
insl
bound
pop
ret
add
in
add
outsb
adc
or
popa
sbb
push
mov
in
pop
sbb
dec
or
push
jge
mov
stos
adc
sub
std
mov
inc
pop
imul
loope
loop
sub
cmp
std
pop
fistl
push
inc
mov
mov
loop
add
cmp
xchg
ret
mov
xchg
leave
push
test
adc
rclb
jns
movsb
repnz
jae
mov
loope
pop
enter
adc
ret
icebp
mov
and
xchg
xor
fdivs
enter
inc
mov
push
jbe
xlat
pop
inc
ja
adcb
scas
or
and
adc
es
inc
mov
jno
sbb
sahf
frstor
cwtl
mov
sub
test
aam
pavgw
xor
cmpb
pop
iret
mov
mov
jo
lahf
ror
or
lahf
adc
and
fsubr
xor
mov
mov
stc
pushl
loope
mov
loope
cwtl
pslld
in
mov
test
scas
insl
inc
add
out
sub
sbb
fbld
inc
mov
add
fcoml
in
mov
push
xchg
jnp
andl
clc
cmp
rcr
leave
shlb
and
inc
sub
push
mov
and
adc
mov
xchg
xchg
les
xchg
nop
pop
pop
xchg
jp
jp
ret
sbb
mov
and
pushf
or
shll
xlat
cmp
insl
pop
clc
out
mov
lds
mov
lods
enter
and
mov
cltd
negb
push
loope
xchg
cld
cmp
xor
push
and
lock
sub
xchg
scas
jmp
inc
adc
mov
xlat
fnstcw
inc
addr16
xor
test
mov
ret
cmp
pushf
int
jno
imul
out
shrl
in
pop
daa
sbb
mov
cli
adc
test
scas
add
mov
out
std
aas
inc
test
mov
dec
sbb
test
xor
mov
pushf
loope
enter
push
sub
cli
or
mov
in
test
int3
repnz
sub
push
pop
test
loope
add
outsl
sti
hlt
into
filds
mov
push
fsubrp
lahf
mov
cmc
bound
je
or
test
adc
mov
inc
hlt
cmpsl
dec
mov
pop
outsb
adc
cmp
inc
pop
xchg
sub
cmp
stc
fldl
dec
sub
mov
and
mov
xchg
outsl
jle
or
xor
xor
sub
mov
sti
inc
je
pop
into
pushf
mov
fwait
imul
into
add
stos
dec
pop
lahf
popf
enter
mov
xor
out
std
pop
sbb
push
ss
cli
iret
sbb
xchg
adc
imul
test
dec
add
mov
pushf
xlat
or
imul
dec
xchg
addb
or
add
add
jo
pop
bound
lds
push
mov
std
mov
dec
push
cmp
loope
sbb
lea
test
hlt
pop
test
push
add
into
mulb
mov
sahf
pop
push
sub
fsub
inc
sarb
pushf
inc
out
pop
adc
ds
dec
and
ja
cmp
dec
xlat
mov
pop
jbe
push
repz
xchg
movsl
cmp
cltd
in
push
mov
mov
push
scas
xchg
adc
push
jecxz
pop
data16
out
cltd
lods
sti
mov
mov
lret
clc
fscale
sahf
dec
popf
mov
sti
ja
mov
or
inc
inc
sub
add
call
decb
push
lods
dec
inc
dec
add
ljmp
dec
ror
fnsave
or
adc
popf
mov
pusha
sbb
hlt
addb
orw
mov
add
clc
dec
into
or
out
outsb
mov
adc
cmp
aam
mov
inc
scas
pop
dec
stc
out
pop
sahf
out
daa
pop
subb
cltd
add
int3
ljmp
adc
mov
cmpsb
movsb
lock
mov
repz
xor
rclb
arpl
rcrl
add
sahf
xchg
xlat
xor
lods
xor
xor
jl
pop
inc
sbb
mov
outsl
test
add
bound
add
xchg
lods
add
cmp
std
clc
lret
arpl
and
xchg
stc
rolb
aas
xor
lret
cmp
xor
cs
sbb
jb
aaa
or
inc
inc
pop
fsts
mov
stos
xchg
shrl
jno
mov
testb
inc
adc
das
int3
enter
cmp
inc
mov
daa
ss
js
ss
cwtl
adc
orl
stc
dec
sbb
dec
sub
movsl
sbb
adc
clc
jnp
int
sbb
in
sbb
xchg
jae
push
inc
mov
push
scas
or
xor
or
out
mov
popf
jge
mov
shlb
push
int3
shll
test
fdivl
adc
popa
int3
jmp
aaa
sub
mov
adc
loope
add
jnp
divl
sub
inc
cmc
lcall
mov
fmull
xchg
sbb
in
cmp
fimull
bound
push
xor
xor
repnz
lea
icebp
cmp
aas
or
sahf
roll
push
adc
jmp
ds
dec
cmp
or
call
xchg
mov
add
vpslld
addr16
adc
xchg
xlat
push
movsb
inc
fucomi
fnstenv
jp
js
or
xchg
mov
jns
xor
mov
and
inc
adc
sbb
sub
jle
shll
jl
sarb
imul
int
or
lret
bound
ret
out
xor
mov
leave
adc
mov
ja
push
sbb
mov
jae
push
pop
pop
rcll
add
push
inc
dec
xchg
pop
cltd
sarl
sub
inc
les
jnp
inc
xchg
scas
int3
pushf
adc
mov
lea
mov
add
es
out
pushf
fdivrl
jl
nop
add
push
dec
dec
ds
mov
or
rcrb
sarl
mov
leave
pop
ljmp
xchg
mov
jmp
cmpsb
ja
mov
cltd
push
push
out
stos
sub
mov
les
test
mov
rorb
mov
add
mov
mov
jmp
add
sbb
test
aaa
imul
mov
jo
pop
lock
jl
aam
or
add
int
push
icebp
dec
std
jecxz,pn
xchg
and
mov
in
insb
icebp
adc
loope
push
add
pop
insl
ja
sti
repz
mov
mov
sub
inc
pop
mov
sbb
push
push
cwtl
sbb
in
pop
pop
je
adc
mov
cmp
fisubs
mov
cmpsl
adc
cwtl
enter
lcall
fwait
adc
xor
jecxz
mov
sbb
movsb
in
jo
ret
push
cwtl
lret
lahf
sub
mov
lods
mov
dec
dec
xchg
rcrb
cmc
mov
pop
jle
add
dec
int3
mov
test
mov
sbb
adc
sbb
aas
mov
cmpsl
cmp
stos
add
xchg
xchg
or
aas
pop
inc
sub
or
jne
inc
push
xchg
dec
sarl
adc
cmp
scas
jae
shl
repnz
xchg
mov
or
call
adc
xor
sub
cmp
jb
cwtl
lods
push
xor
xchg
lods
in
inc
test
lret
fimull
hlt
scas
lret
mov
jl
fcmovne
test
push
icebp
shll
mov
fcmovnb
sbb
rep
cld
push
and
fildl
adc
testb
add
ljmp
mov
sbb
orb
je
test
sbb
mov
add
mov
sub
jmp
pushf
mov
inc
mov
add
and
jg
jae
push
leave
pop
push
aas
jle
gs
pushf
aam
mov
int3
or
sub
sbb
push
add
popa
adc
fcmovu
sbb
jb
sub
mov
or
orb
push
clc
mov
outsb
mov
lret
test
add
lods
mov
inc
lods
shlb
in
push
jno
lahf
xrelease
in
sbb
aas
jno
sub
mov
sar
pop
aad
xor
leave
fsubr
jns
jge
cmc
filds
jae
push
mov
scas
rcrl
mov
sbb
sub
scas
jnp
repz
pop
or
das
or
pop
mov
loope
sti
add
xchg
adc
pop
mov
dec
ret
stc
orb
mov
out
inc
push
inc
fadd
pop
ret
out
js
shrl
add
cmpsl
lret
add
addl
sar
imul
js
jmp
orb
adc
imul
and
xchg
aad
outsb
add
mov
addr16
xorl
shl
push
dec
imul
or
mov
addr16
add
aaa
sub
mov
idiv
mov
pop
lahf
jmp
ljmp
dec
xlat
rcrl
jg
and
pop
mov
fwait
and
xor
sub
inc
aaa
fnstenv
jp
movsl
cmp
test
inc
jmp
cmp
shll
int3
filds
shrl
jo
fwait
cs
fmul
pusha
xlat
xlat
xchg
loopne
cmc
testl
pop
sarb
out
mov
xor
fisubl
push
loopne
sbb
loope
hlt
lods
cwtl
cmp
inc
push
fcompl
and
cmp
jg
mov
mov
std
mov
pushf
and
pop
pop
nop
pusha
lea
sbb
ja
std
out
test
and
lahf
sub
dec
imul
sub
pop
rorl
jge,pt
dec
push
pop
int3
inc
or
je
and
jmp
push
stc
enter
stc
sbb
ljmp
test
or
jo
sbb
jb
pop
jge
mov
test
mov
loopne
cmc
push
sbb
jns
lcall
aam
xor
dec
xchg
push
outsl
xchg
aaa
stos
cmp
hlt
sub
insl
sahf
jne
jg
shll
out
cs
outsb
cmp
mov
sbb
scas
mov
test
movaps
mov
lret
cmp
andl
and
rcrb
jmp
sti
nop
in
mov
push
fs
int3
add
inc
xchg
add
cld
repz
fldl
jae
scas
jo
dec
push
xor
sub
mov
xchg
lods
jl
xchg
add
mov
popf
lcall
xor
outsb
jl
sbb
jne
jmp
mov
mov
adc
push
pop
xchg
mov
movb
in
lds
iret
adc
in
setno
out
not
push
xor
sub
pop
push
imulb
mov
cmp
or
mov
scas
sbb
dec
adc
ficoml
jmp
xchg
scas
or
and
and
mov
mov
jns
lods
dec
jns
ds
pusha
cs
aam
fisttps
call
xor
imul
jmp
leave
xor
push
das
out
data16
jb
sbb
mov
fwait
and
cmp
leave
mov
lret
lret
mov
mov
fldl
sbb
shl
cmc
cmp
xchg
movsb
clc
pop
bound
pop
inc
push
fsubl
jns
push
cltd
jle
into
inc
push
and
and
sub
fistps
lds
mov
sub
sarl
and
ret
cli
sahf
mov
ds
popf
mov
push
and
and
sub
xchg
out
xchg
dec
jae
std
ljmp
xchg
push
xor
movsb
fistl
mov
out
mov
in
cli
inc
and
ja
push
xchg
inc
xor
rcrl
mov
sub
or
mov
jbe
inc
dec
add
mov
test
cmp
loope
xor
or
leave
mov
cmp
in
sub
or
cmp
repz
rcrb
fucomip
repz
test
gs
adc
pop
push
xlat
inc
jmp
mov
stos
fisubs
ret
pop
outsb
outsb
add
jecxz
inc
test
sti
nop
popa
and
jbe
jl
cmc
ds
fsubs
push
rclb
cmp
pop
mov
cltd
data16
jl
inc
mov
dec
ss
cmp
adc
popa
ljmp
mov
out
push
cli
arpl
xchg
addr16
cltd
outsb
lret
test
cmpl
sarl
sub
or
sbb
aas
pop
dec
sub
dec
push
pop
cmpsl
and
imul
cmp
pop
jnp
jl
push
ljmp
mov
popa
aam
lds
or
and
sbb
push
fucom
les
push
xor
les
fsts
sub
loop
cmp
sub
inc
shrl
push
jbe
xor
and
mov
inc
cmpsl
jns
bswap
mov
loop
pop
and
sbbb
jo
dec
or
xchg
jg
nop
into
ja
pop
test
call
iret
pop
add
ds
cli
dec
mov
mov
and
jae
jne
lahf
daa
aam
xor
pop
sub
aas
mov
mov
popa
out
inc
xchg
add
mov
pop
gs
lret
mov
or
push
sbb
xchg
pop
ja
mov
lds
mov
ds
call
pop
jle
cmp
subb
imul
das
jp
shl
addb
rorb
lds
mov
fs
icebp
addr16
test
add
fcoml
cltd
rclb
dec
jmp
mov
popa
cmp
aaa
mov
ret
xchg
outsb
popf
xor
enter
neg
ret
add
and
in
inc
sub
mov
mov
loop
mov
ror
xor
push
xchg
movsb
xchg
lret
sbb
fnstsw
push
mov
push
jge
clc
mov
flds
add
inc
aas
add
pop
dec
cmpb
mov
inc
add
jno
cld
xchg
addl
cmpsb
mov
jne
sub
jmp
rclb
icebp
mov
cld
and
inc
cmp
mov
les
mov
fidivs
roll
pop
mov
test
mov
push
push
xchg
lods
int
mov
cmp
and
incb
cmpl
repnz
add
fistpll
mov
fimuls
insb
sti
inc
lock
es
adc
stc
cmp
dec
xor
pop
dec
bound
and
in
mov
roll
jp
out
adc
pop
push
and
dec
sbb
call
ret
pop
mov
jns
inc
mull
outsb
call
push
daa
sub
xor
ret
xor
in
push
lret
dec
aaa
pop
and
adc
push
out
imul
xchg
divb
push
add
das
jle
out
dec
pop
ret
ss
cwtl
mov
cs
je
xor
ds
ljmp
pop
enter
call
into
adc
inc
bound
lods
inc
mov
adc
jle
enter
jo
test
adc
inc
jle
imul
lret
frstor
jo
cmc
ljmp
dec
bound
out
and
xor
repz
lea
mov
or
pop
icebp
ljmp
out
mov
cld
xchg
cmp
adc
shlb
in
mov
lds
adc
xchg
inc
xor
cs
mov
clc
mov
imul
mov
js
insl
sub
cli
gs
aad
and
xchg
mov
inc
jnp
in
pop
es
pop
and
scas
mov
fisttps
push
push
mov
popf
addr16
mov
push
inc
and
movsb
mov
aam
push
outsb
stos
push
pop
jns
sub
pusha
cmp
mov
shl
push
xchg
nop
out
imul
jmp
inc
in
mov
nop
add
sub
fdivs
pop
addl
popa
aas
rorl
fs
fcomps
inc
mov
lret
sub
outsb
cmp
lahf
add
sub
push
aam
dec
xchg
push
or
je
xchg
adc
aam
mov
icebp
mov
fs
loope
pusha
dec
sub
inc
cmpsl
push
xorl
xchg
lret
stos
inc
rcll
cmpsl
add
test
pop
int3
dec
out
mov
sbb
mov
std
jmp
insb
mov
push
data16
ja
sbb
call
adc
mov
xor
xchg
lock
pop
faddp
mov
daa
push
cmpsb
jbe
or
xchg
push
jecxz
into
test
roll
les
flds
jg
scas
lock
and
cs
mov
adc
cltd
daa
mov
insl
xor
fiaddl
test
xchg
mov
fs
pop
dec
jecxz
sti
jo
data16
jge
leave
or
add
adc
dec
push
in
dec
les
andb
sub
aas
xchg
pop
es
enter
mov
adc
fisttps
pop
or
icebp
gs
and
div
dec
cmp
ret
mov
shll
and
mov
rolb
xchg
mov
gs
jo
xor
stc
in
xchg
aaa
mov
pushf
in
outsb
shrb
inc
adc
and
mov
xor
rcrl
es
push
sbb
inc
or
ja
das
sub
or
sub
or
xchg
aaa
pushf
sub
fisubs
inc
cmp
push
loope
mov
sub
xor
pop
scas
out
aaa
mov
or
imul
mov
int3
adc
mov
daa
stos
sub
into
fwait
mov
shlb
or
cmpsb
inc
xchg
repz
pop
stc
adc
lods
lock
sbb
and
or
call
sub
jge
cmp
pop
xchg
shrl
out
push
mov
pop
inc
dec
or
push
test
inc
mov
lret
loop
test
push
xlat
enter
aad
xchg
jno
sbb
xchg
sbb
loop
pushf
xchg
in
inc
lds
cld
sbb
push
fisubs
xchg
pop
sub
ror
xchg
sbb
inc
std
mov
push
jne
cmp
pop
sbb
jne
insb
mov
xor
in
cmp
sti
lock
out
pop
imull
push
loop
in
iret
dec
pop
sbb
lcall
mov
jmp
inc
loope
inc
ret
inc
addr16
int
stos
push
adc
ret
inc
pop
popa
xchg
call
dec
mov
orl
pop
adc
push
rcll
inc
loope
mov
xorb
sti
add
sub
aad
in
mov
jne
xchg
ror
arpl
int3
xchg
test
lock
push
mov
mov
mov
xchg
je
aad
sub
repnz
mov
pop
lock
sbb
or
shlb
xchg
clc
mov
das
pop
mov
and
sbb
mov
or
test
dec
repz
and
mull
mov
pop
outsb
dec
mov
xchg
adc
jo
or
inc
mov
repz
adc
cmp
sub
ss
pop
mov
psrad
cltd
int
cmp
push
fsubrl
push
inc
add
inc
dec
push
add
fstpl
je
mov
xor
cmpsl
outsl
xor
xor
shlb
adc
push
dec
pop
jle
or
insl
jnp
inc
imul
addl
dec
loope
dec
dec
add
mov
mov
mov
outsl
ljmp
push
les
and
pop
jne,pn
int
sub
push
or
popa
cmp
outsb
jmp
jmp
and
test
add
mov
movl
out
and
push
pop
fstps
mov
dec
lcall
sahf
inc
sub
push
dec
adc
mov
leave
xor
push
js
dec
test
or
js
sub
jnp
sub
inc
addr16
out
fnstcw
xor
xor
adc
mov
xorps
add
xor
bound
scas
ret
push
orl
cmp
iret
fcmovnu
in
shrl
nop
push
pop
jnp
push
sub
out
fisttpll
sbb
popa
test
or
lods
sub
fldl2t
bound
push
lret
andl
sbb
bound
testb
stos
xor
push
fwait
test
cli
in
scas
xor
mov
add
out
iret
cmp
in
push
or
in
or
ds
icebp
mov
in
dec
jnp
push
ljmp
pusha
fisubl
sub
sbb
fidivl
and
push
xchg
fcompl
inc
dec
xor
lahf
fwait
rcll
sub
add
push
daa
add
push
orl
or
inc
aas
cli
xor
outsl
xchg
push
shrb
push
idivl
push
mov
pushf
xchg
mov
int
iret
sbb
in
jno
and
add
aad
test
lret
pushf
out
pop
push
mov
sbb
mov
in
sbb
or
aas
lret
add
xlat
sbb
ret
call
jo
mov
lea
dec
andl
cmpsb
icebp
sbb
cmpb
xor
je
fisttpl
imul
adc
cmc
cli
movsb
lods
adc
loope
arpl
jb
adc
mov
xchg
cltd
stos
loop
fsubrs
add
xor
inc
popa
mov
nop
add
add
insb
jno
cmp
clc
pop
dec
jg
push
cmpsl
cmp
sub
lret
data16
int
outsb
pop
outsb
fiadds
out
xchg
push
mov
pop
adc
and
arpl
arpl
mov
lret
pop
push
lcall
push
cld
adc
hlt
xchg
paddw
shlb
test
cmp
mov
std
stos
ljmp
mov
cwtl
adc
xchg
cmp
jg
clc
lret
mov
out
adc
dec
mov
push
pushf
push
or
mov
mov
sbbl
add
popa
sub
sbbb
dec
dec
fstp
addr16
stos
push
jb
xlat
add
movsl
lahf
scas
mov
and
jl
push
or
inc
jle
cmc
sub
sbb
or
into
pop
loop,pn
cmp
xor
cmp
inc
sub
lret
dec
sbb
mov
aas
je
push
rcrl
pop
mov
dec
jg
adc
sbb
mov
dec
inc
dec
pop
push
mov
adc
scas
jg
and
mov
cltd
test
xor
xor
addr16
pop
add
add
pop
enter
aam
and
cmc
mov
push
outsl
sub
arpl
cs
out
gs
sti
clc
inc
dec
and
mov
push
stos
dec
and
jg
xchg
loopne
std
sarb
jb
sbb
scas
insb
call
lds
test
fsubp
push
hlt
ja
pushf
out
push
mov
movsb
cmp
inc
xor
push
jnp
dec
xchg
or
jmp
rorl
cli
or
mov
push
test
lds
ljmp
jbe
adc
jg
fmuls
daa
loop
fwait
xchg
jmp
adc
das
test
add
push
jbe
insl
xchg
adc
imul
stos
jge
ss
mov
push
jle
ret
dec
fisttpl
mov
sub
hlt
jp
add
test
fcmovb
inc
lahf
divb
cmp
xchg
mov
bound
loope
arpl
pop
lds
aas
cli
and
mov
xchg
add
fldt
std
push
push
outsb
ss
adc
xor
xlat
add
into
mov
stos
fldcw
sub
or
insl
xchg
addr16
cmp
out
mov
sub
sbb
fiaddl
shll
cmp
aad
hlt
jo
jle
stos
ret
mov
cmp
mov
inc
xor
leave
jns
add
loop
loope
cmp
bound
push
pop
jns
or
dec
or
push
mov
jecxz
mov
js
xchg
out
pop
mov
xchg
inc
idivb
xor
stos
or
push
pop
mov
xchg
imul
arpl
push
roll
negb
and
mov
inc
leave
stc
mov
xchg
aam
gs
neg
out
cwtl
dec
hlt
mov
adc
sbb
call
subl
pop
add
inc
push
jecxz
mov
dec
hlt
into
mov
imul
inc
addr16
in
shll
xor
repz
sar
movsl
push
add
adc
mov
stos
inc
pop
jnp
leave
add
inc
fadds
sar
js
sbb
jg
xchg
movsl
push
in
aad
jle
lahf
lods
jmp
lret
jge
mov
clc
inc
fstpl
xchg
xor
insl
dec
repnz
mov
sbb
mov
cmp
mov
inc
jle
and
jg
or
sti
pop
add
sub
jecxz
push
les
jbe
cmp
cltd
sub
sti
pop
cmovbe
mov
cmp
loopne
stos
jg
js
popa
push
xorb
bound
ss
loope
mov
je
out
out
fistpl
dec
daa
stc
shlb
fld
fnsave
jno
cwtl
pop
test
push
fnstcw
add
dec
lock
jbe
daa
xchg
jle
fidivs
fs
mov
mov
jb
scas
aad
mov
fisttpll
jge
cltd
test
and
lods
lret
jle
lods
adc
mov
xchg
xchg
ds
or
cbtw
inc
inc
fdivl
and
mov
jae
and
loope
das
int3
adc
ljmp
or
inc
pop
xchg
out
addb
cmp
cmpsb
mul
cmp
mov
pop
push
pop
cmp
xlat
getsec
repnz
mov
out
in
add
out
enter
outsl
sbb
pop
mov
lcall
ljmp
jl
testl
cltd
imul
push
mov
xor
mov
sbb
dec
cmp
mov
pop
lods
lahf
in
lahf
jo
movsb
daa
daa
mov
mov
lods
insl
out
or
xor
sbb
push
pusha
mov
inc
dec
adc
scas
inc
dec
and
push
in
test
add
mov
xor
es
gs
out
test
or
or
repnz
jns
jb
fimull
sub
loop
push
mov
adc
mov
adc
cs
mov
setb
adc
popa
movsl
es
sbb
f2xm1
adc
dec
inc
imul
je
stc
push
push
pop
lea
mov
test
orl
sub
sbb
outsb
or
xor
mov
pop
mov
mov
or
testl
xor
bound
gs
push
mov
enter
fs
adc
sarl
dec
cmp
sti
and
shrb
xchg
xor
adc
cmpsl
sarl
push
subb
push
das
cmp
insb
xchg
or
jecxz
lods
sub
mov
shrl
add
aam
and
movsb
add
jo
dec
test
dec
rorb
jmp
sbb
into
xor
daa
hlt
jecxz
hlt
rcr
dec
dec
xchg
andb
lahf
mov
test
push
xor
js
pop
lods
int3
xor
lea
icebp
das
shll
int
mov
push
int
cmp
sbb
xlat
fmuls
cmp
xchg
fiaddl
shlb
sub
cmp
and
adc
loop
adc
pushf
pop
mov
or
leave
adc
subb
into
sub
outsb
sub
jle
fsubr
sbb
mov
outsl
popf
xchg
std
cmp
mov
xor
call
cmp
pop
outsb
fsts
test
stos
int3
pop
icebp
mov
xor
cmp
outsb
jo
sbb
mov
pop
push
cmc
lea
xlat
xchg
push
jae
fisubrl
insb
sbb
std
in
pop
cmpl
jp
xchg
mov
pop
add
rorb
leave
cli
mov
push
or
lcall
sub
lahf
jae
jmp
adc
dec
aas
xor
dec
adc
lock
cmp
and
fcmovne
mov
arpl
dec
test
add
popf
cmpb
jb
pushl
or
lcall
inc
jge
jg
cmpsb
sbb
lahf
andb
pushf
iret
fisttpll
outsb
stos
mov
dec
dec
xchg
js
je
pop
xchg
stos
lahf
adc
cmp
mov
test
xlat
fsubs
adc
sarl
hlt
sbb
shr
aam
or
cmp
enter
insb
arpl
jno
xor
xorl
xor
mov
leave
mov
in
scas
negb
cmpsb
in
pop
aaa
jnp
push
jns
dec
mov
test
imul
xchg
inc
lods
cmc
movsb
push
adc
sbb
test
fwait
aaa
enter
or
mov
xlat
mov
push
movsl
mov
sub
jne
pop
pmuludq
iret
xchg
jbe
add
aaa
mov
push
lds
dec
mov
jle
fsubrs
jno
jno
fs
pop
aas
mov
pmaddwd
hlt
xor
pop
arpl
pop
xor
loope
js,pt
cwtl
jmp
and
add
mov
jns
add
sub
push
les
mov
loope
sbb
inc
or
xchg
sbb
aas
add
jae
mov
adc
out
adc
mov
stos
adc
sbb
and
pop
xchg
push
stos
sub
popa
lods
aaa
repnz
pandn
add
mov
dec
pop
xor
stos
idivb
aas
outsb
fisubs
inc
jl
movsb
mov
outsl
inc
clc
cmp
int3
pop
ja
out
mov
jg
xchg
or
or
pop
jge
mov
adc
je
pop
push
test
push
inc
fistps
jmp
mov
imul
mov
pop
xchg
add
stc
sbb
int
int3
xchg
pop
dec
jbe
add
cltd
sahf
mov
xchg
dec
clc
outsl
jmp
js
pop
inc
mov
std
leave
inc
add
ss
mov
jae
inc
lds
into
cltd
fiaddl
orb
pop
shlb
shll
cmc
imul
scas
dec
push
mov
testb
jbe
lret
subl
adc
sub
mov
mov
mov
loope
ss
and
push
and
fimull
les
hlt
sub
ljmp
jb
add
jge
ret
fisubrl
ljmp
sbb
push
fldcw
sbb
push
add
leave
mov
cltd
in
into
cltd
push
or
ret
jl
adc
cmc
add
adc
sahf
enter
pop
jo
cmp
into
test
or
jmp
mov
fcmovnb
xlat
or
fwait
cmc
push
leave
adc
cld
je
pop
call
insb
cmpsb
and
outsl
pop
sub
mov
pop
dec
lcall
imul
jle
xchg
sahf
mov
in
push
mov
inc
in
dec
jne
movsl
jg
icebp
mov
gs
mov
aas
rorb
movsl
adc
cs
push
fcmovnu
loopne
leavew
outsl
stos
push
das
mov
inc
icebp
jae
push
add
jnp
add
sbb
cs
shl
xchg
popf
inc
push
aaa
mov
mov
jg
imul
push
rolb
xor
xchg
and
lods
xor
pop
mov
inc
je
adc
sub
aad
xlat
cli
pop
shl
push
loope
fs
mov
mov
jo
add
inc
lahf
cltd
xchg
cmp
pop
clc
repz
out
aas
add
ja
mov
gs
cmpsb
fldcw
int
sbb
push
roll
dec
setae
xor
adc
cwtl
or
ret
lret
jle
fimull
pop
cwtl
xor
daa
ljmp
out
lahf
hlt
aad
fucomip
pop
dec
xlat
inc
ret
xchg
fadds
jge
cmp
push
movsb
stos
fstpl
pushf
in
push
cli
mov
adc
faddl
lds
cld
mov
imul
daa
dec
sbb
push
mov
pop
mov
test
xchg
mov
popa
rclb
pushf
adc
or
xchg
outsb
mov
and
pop
repnz
ljmp
sub
cltd
pop
je
outsl
sub
mov
push
sub
pop
cwtl
lods
dec
mov
pusha
in
in
sub
loop
mov
rolb
rcr
incl
sahf
js
out
pop
xor
cmpsl
mov
lds
ret
mov
inc
stos
jnp
pop
cmp
incb
xor
lds
pop
mov
gs
cltd
enter
fdiv
lods
data16
push
pop
pushf
cmpsl
xlat
in
mov
add
sti
mov
arpl
jo
mov
cwtl
push
jns
or
sub
mov
adc
and
jbe
repz
adc
mov
fidivrs
ficompl
inc
inc
jno
cmp
add
out
movsl
cwtl
pop
cmp
dec
cmp
test
mov
fbld
or
mov
ja
insl
xchg
stc
or
fldenv
insl
cld
sahf
movsl
aad
pop
in
sub
and
out
and
nop
cmpl
adc
mov
cli
stos
aam
andb
xor
mov
sbb
xchg
or
inc
js
negl
cmp
mov
sub
xchg
out
cmovnp
into
lea
pushf
add
xor
in
inc
mov
repnz
imul
lods
and
and
ret
push
sub
sub
shr
add
jno
mov
or
adc
scas
mov
push
push
aam
or
les
in
psllq
cmpsb
push
cmp
or
mov
repz
adc
andl
dec
cmpsb
cld
push
or
int3
cli
mov
jb
or
xchg
int3
pop
es
insl
dec
sub
sbb
daa
dec
movsb
and
enter
scas
mov
adc
inc
sub
mov
ja
pushf
int3
xor
sbb
fwait
popa
loop
or
push
push
lock
fmuls
jns
jge
ljmp
fldpi
push
test
mov
mov
fbstp
int
andb
and
fnstsw
push
aaa
mov
sub
inc
mov
stos
pop
sub
out
icebp
cmc
push
test
pop
pusha
xorl
inc
pop
push
adcb
mov
cmp
fwait
xor
cmp
lods
and
in
xor
out
pop
xchg
notb
xor
je
mov
push
pop
testb
pop
xor
sti
shlb
inc
decl
xchg
fs
push
test
sbb
sub
repz
leave
jmp
pop
dec
sbb
add
xor
enter
jb
ja
pop
jmp
and
testl
sub
adc
sbb
je
out
jmp
dec
shrb
jl
jo
aam
xchg
push
in
inc
cmc
add
mov
scas
add
das
fidivl
outsl
pop
xor
cmp
rcl
mov
sti
jle
outsb
shll
mov
cmp
cmpsl
insb
fidivrs
shrb
cmp
mov
fiadds
mov
xchg
scas
leave
ds
dec
repnz
or
cmpsl
sub
bound
mov
rcrb
or
mov
jns
mov
clc
shr
outsb
xchg
xchg
or
adc
aad
roll
std
rcrb
inc
inc
push
cmc
sbb
mov
adcl
stos
or
add
sub
out
ret
xchg
xor
mov
out
cmc
cltd
in
inc
sti
orb
adc
mov
aas
inc
subb
pop
mov
xor
clc
jp
dec
sahf
loopne
mov
ja
mov
mov
cmpl
push
sar
repz
stos
test
inc
cltd
out
inc
inc
in
pop
sbb
xlat
daa
cld
je
xchg
in
lahf
ss
jmp
loopne
test
scas
push
into
loop
pop
andl
push
sti
xchg
jge
inc
cmpl
into
push
icebp
add
loopne
ficoms
jnp
push
cmp
pop
clc
jae
push
jnp
adc
stos
add
or
sbb
lods
jnp
movsl
fwait
out
sbbb
add
shr
mov
mov
sbb
sbb
test
lods
in
fwait
sbb
jg
or
imul
xchg
jl
xchg
push
data16
gs
jp
movb
ljmp
sbb
fs
stc
in
testl
mov
jb
movl
dec
sub
pop
test
xchg
mov
and
cmpsb
aas
sbb
jae
std
cmp
mov
sbb
jg
ret
inc
daa
fcomi
mov
mov
mov
lahf
lret
and
sbb
and
pop
es
sub
push
jp
imul
out
xor
filds
jp
push
repnz
push
ret
xchg
mov
jl
inc
js
adc
jmp
adc
sbbl
shrb
dec
jnp
adc
push
insb
mov
in
ret
cmc
jp
orb
mov
mov
ja
jne
lret
repz
dec
xchg
fdivrl
pop
lods
or
fisubrl
fsubl
pop
insb
test
ljmp
or
clc
roll
push
or
sub
in
mov
daa
stos
push
sbb
clc
sti
add
fists
adc
cmp
and
pop
cltd
jp
sub
fdivs
mov
outsb
dec
test
jnp
mov
aas
pop
fcom
je
dec
add
mov
das
js
dec
movsb
cmp
cmp
ja
mov
cmp
jecxz
adc
jns
scas
push
aas
sub
mov
push
cmp
cmp
fldl
pop
loopne
imul
je
fucom
mov
daa
dec
nop
idivb
mov
enter
jb
ja
in
js
or
jecxz
mov
sbb
push
jo
inc
mov
and
push
in
sbb
lret
adc
jle
xchg
mov
pop
or
xor
mov
cmp
inc
clc
cmp
cwtl
jns
sahf
xchg
inc
sub
pop
lahf
push
out
sub
stc
in
lahf
hlt
or
jb
imul
lcall
lret
aas
pop
xor
in
shl
lret
jecxz
rorb
insb
pop
mov
or
mov
shrb
bnd
popf
in
out
lds
xchg
int
pop
daa
mov
sbb
fwait
mulb
jmp
iret
sub
mov
lret
movsb
fwait
push
push
mov
dec
xlat
xchg
sbb
mov
and
jno
fwait
les
mov
repz
push
inc
xchg
pop
mov
fldl
lds
fisttpl
out
frstor
clc
scas
fiadds
ds
movsb
stos
mov
sub
aad
lcall
push
sahf
aad
push
or
stc
lret
and
call
xor
dec
mov
out
pop
dec
xor
xchg
lahf
popf
cwtl
mov
pop
mov
ror
cmp
push
dec
inc
repz
and
xchg
bound
xchg
minps
cmp
loop
pop
fsubrl
cmp
cmpsl
mov
js
test
fmuls
cmp
out
mov
arpl
pop
adc
adc
mov
jecxz
icebp
and
or
mov
dec
ret
cld
pop
inc
jnp
cld
xor
mov
mov
adc
mov
sahf
cltd
mov
fsub
xor
mov
fimull
stos
test
lods
lea
loope
push
sub
iret
fs
outsb
push
mov
pop
adc
adc
push
loopne
or
lret
jle
testb
push
push
sahf
ljmp
testl
jnp
pop
je
rorl
loopne
icebp
outsb
stos
xchg
shl
xor
or
ljmp
mov
scas
ljmp
push
popa
es
and
aas
jl
ljmp
xchg
fcomi
cmp
cmp
dec
mov
jo
xchg
lods
mov
shl
aaa
push
mov
cmp
lea
and
int3
cmp
sbb
ficoms
add
cmpsb
clc
fmuls
movsl
bound
sub
pop
flds
mov
pop
fs
imul
mov
stos
inc
cs
jns
repnz
lret
and
mov
cmp
jg
xchg
sti
pop
sub
xor
aas
in
scas
in
fs
cld
lret
stc
fistpl
mov
sub
dec
mov
iret
jl
jne
outsl
setge
push
test
lret
jo
and
mov
stos
decb
push
cltd
mov
jb
sahf
stc
or
mov
cs
add
push
xchg
sub
and
cwtl
lret
xor
test
jle
inc
inc
test
hlt
mov
sbb
fldenv
hlt
leave
loopne
clc
loope
pop
adc
inc
jp
cld
xchg
fnstsw
or
nop
lcall
arpl
ljmp
and
test
into
fdivs
xchg
pop
xchg
sub
or
inc
cmpsl
test
les
cmp
rcll
aam
fwait
cmp
rcrb
mov
pop
out
lret
push
and
in
stos
lea
das
inc
ljmp
shll
lods
and
sub
adc
jmp
rol
cltd
mov
mov
mov
pop
or
mov
and
fcom
xor
jl
lds
add
fs
pushf
hlt
jnp
mov
shrl
dec
lods
sub
push
sbb
arpl
pusha
stc
or
cs
inc
xchg
popa
or
lret
xchg
xor
repnz
int
ja
repz
and
sbb
cmp
imul
adc
push
xlat
cwtl
lods
mov
imul
fcoms
repz
pop
mov
loope
fiadds
fisttpl
pushl
cmc
fucomp
sbbb
jno
andnps
mov
aaa
test
ret
fwait
iret
mov
add
xchg
stc
push
divb
fsts
stos
fidivl
stos
lods
mov
push
inc
inc
mov
cli
imul
xchg
or
fidivl
cmp
call
dec
mov
mov
arpl
lods
jg
sbb
ja
out
pop
xor
cmp
mov
rorl
or
cmovle
test
jns
fwait
dec
pop
dec
xor
dec
leave
outsl
das
jnp
xchg
or
xchg
repz
mov
lds
es
shll
or
adc
cmp
xlat
sub
adc
fdivrp
ret
movsl
pop
xchg
leave
call
popa
aas
pop
les
mov
ss
inc
sbb
push
inc
push
jno
xchg
insl
and
adc
pop
push
xor
in
bound
repnz
xor
mov
lret
mov
imul
stc
jmp
push
into
loope
inc
les
lods
xchg
dec
jp
bound
jmp
pop
push
jmp
inc
sbb
bound
jns
popa
mov
push
xorb
mov
lods
hlt
add
aas
movsl
jo
mov
mov
pop
push
sub
mov
jl
mov
fadd
cmp
fisubrs
mov
mov
or
int3
lret
inc
push
and
fdivs
xor
outsb
daa
lods
or
jb
pusha
mov
shrb
in
pop
pop
in
adc
and
and
push
mov
cmp
adc
mov
dec
addl
shlb
cli
cmp
cwtl
fisttpl
imull
and
fcompl
jns
mov
mov
jbe
loop
push
push
cmpl
loop
dec
jecxz
orb
mov
enter
xchg
sub
ds
add
imul
dec
cmp
push
or
jo
test
push
inc
mov
dec
add
sti
inc
mov
inc
mov
in
or
push
push
subb
pop
stos
xchg
pushf
iret
sahf
and
mov
or
push
mov
js
cmp
cmp
fstl
imul
push
xchg
inc
push
das
fwait
push
std
gs
lret
sub
mov
sbb
ret
nop
pop
inc
clc
pop
popf
sbb
daa
xchg
cmp
xchg
pushf
test
pop
dec
popa
fsubp
xor
lret
call
stc
mov
xchg
shll
lcall
cld
data16
mov
pop
inc
fdivs
jno
idivl
mov
add
cld
lret
scas
pop
ljmp
pop
mov
loop
aam
add
mov
test
testl
sbb
enter
or
or
and
lods
hlt
testl
inc
bound
jg
mov
jo
pop
jp
sbb
pusha
push
jae
lods
cwtl
popa
jp
inc
rorl
cmp
xor
lods
loop
sub
dec
add
or
ret
mov
adc
jmp
mov
fsubs
pop
sahf
and
negl
arpl
int
mov
push
cmovle
pop
clc
sar
and
and
ljmp
pop
mov
je
sub
lahf
dec
sbb
push
adcl
cmpsb
jp
incb
popa
call
shlb
jge
ljmp
mov
xor
arpl
sarl
adc
aad
mulb
out
fstps
add
adc
ret
mov
adc
mov
roll
jnp
mov
sbb
enter
ja
xchg
dec
dec
dec
insb
xor
pop
dec
push
pop
enter
inc
daa
mov
stos
sti
or
add
ret
dec
mov
test
fisttpl
pop
dec
ljmp
cmp
dec
aaa
fcomps
pop
jecxz
outsl
aas
mov
dec
lahf
dec
adc
call
fbld
out
push
lods
mov
jno
xchg
cmp
xchg
ja
in
xor
cmp
dec
jle
lods
add
pop
call
adc
movsl
test
rcrl
mov
orb
xchg
and
xchg
sbb
mov
or
inc
icebp
adc
jmp
call
jnp
add
adc
cmp
cltd
xor
pop
and
scas
push
ret
movsb
or
lods
cmpsl
rcr
xor
pushf
jae
in
pop
add
cltd
imul
sbb
inc
js
sbb
push
jge
push
xor
out
mov
jne
sub
pop
aas
bound
mov
rcrb
scas
addb
xorl
movsb
mov
test
popa
inc
inc
add
mov
or
lcall
in
cmp
mov
pop
test
xchg
sub
cmp
adc
add
test
mov
popa
fadd
movsl
push
lods
in
fists
lock
pop
out
mov
mov
inc
dec
ja
push
lea
mov
popa
sar
jne
mov
push
outsb
jmp
int3
and
imul
and
pop
mov
jle
fbstp
cld
stc
lahf
shll
inc
into
mov
mov
dec
mov
rcr
mov
mov
push
dec
out
jae
push
mov
adc
push
fwait
rcrb
filds
lret
dec
xchg
mov
sub
decb
ss
cmp
movsl
jge
mov
icebp
mov
lret
cmc
push
ret
xchg
dec
push
xor
mov
cmp
cmp
mov
iret
ficompl
bound
push
test
push
or
mov
push
in
mov
pusha
mov
inc
incl
out
sbb
out
leave
add
mov
aad
fildl
incb
dec
loopne
mov
xor
ret
lret
mov
push
sbb
dec
testb
addr16
jb
lret
jae
nop
jne
test
xchg
xchg
jmp
insl
mov
lcall
lret
jo
into
push
sub
pop
or
adc
mov
inc
fists
mov
imul
sub
pop
mov
push
mov
xchg
jmp
lret
mov
into
in
jbe
xchg
or
inc
lahf
test
hlt
dec
js
enter
ja
inc
jnp
xorb
lea
push
cmpsb
out
inc
sbb
scas
push
sub
callw
push
sub
sbb
dec
stos
and
repz
leave
pop
mov
pusha
push
insl
mov
rol
xchg
imul
push
or
jp
jne
repnz
sbb
fnstenv
loopne
test
pop
in
int3
outsb
lcall
push
in
xchg
push
ljmp
jmp
clc
incl
cld
fnsave
jg
popa
int
pmaxsw
and
mov
mov
lock
pop
sahf
movsl
mov
push
lahf
imul
mov
adc
lret
push
sbb
clc
sbb
sbb
pusha
jnp
inc
or
ficoml
add
push
add
pop
sbbl
bound
push
and
scas
push
outsl
pop
icebp
out
xchg
lea
dec
fwait
sbb
lock
jne
movsb
gs
enter
adc
cmpsl
les
mov
and
inc
mov
sbb
push
repz
fcoml
and
jle
je
jae
inc
sub
sbb
push
cmp
mov
cmpsb
or
cli
shlb
inc
iret
or
repz
cld
push
jle
hlt
jne
xchg
xor
addl
cmp
fstpl
mov
js
int
adc
int3
jle
stos
push
das
aaa
sbb
repz
iret
mov
push
cwtl
mov
jb
loope
imul
jae
and
sarb
xchg
cld
jg
das
fsubl
sti
and
dec
out
fsubrl
xor
lcall
push
add
pop
lcall
scas
rclb
mov
incl
hlt
sbb
nop
pop
mov
je
push
sub
mov
mov
sbb
push
test
int3
nop
mov
or
cwtl
pop
negl
arpl
xchg
aad
pop
mov
xchg
push
int
call
adc
insb
das
jae
das
push
dec
mov
shlb
push
fisttpl
mov
mov
jne
cmp
scas
fs
mov
push
adc
xchg
dec
cmp
fyl2xp1
mov
pop
sbb
mov
cli
mov
mov
adc
addb
mov
aaa
inc
ret
xor
jp
std
aad
hlt
out
popa
aas
or
sbb
lret
lcall
dec
pop
jg
int
icebp
in
xor
pop
sarl
jl
or
call
or
adc
aas
clc
cmc
cli
jmp
sbb
insb
pop
mov
test
mov
xlat
push
in
push
cmpsb
idivl
pop
adc
pop
xlat
push
es
push
rcrb
imull
mov
lahf
push
sub
push
fstpt
xchg
fcoml
pusha
ss
mov
rorb
aas
pop
fbld
dec
sbb
sahf
fidivs
push
adc
mov
push
leave
mov
frstor
into
push
xor
fs
and
ffree
in
test
in
cmpsb
out
xchg
xchg
mov
dec
popw
into
enter
test
pushf
scas
test
insl
cltd
insl
adc
ss
repz
ret
xchg
call
call
push
adc
mov
in
add
pop
out
cmpl
sahf
jno
test
test
lcall
mov
or
inc
lret
dec
jp
arpl
outsl
and
or
sbb
insb
cwtl
jae
fstpt
arpl
mov
or
or
sbbb
stc
mov
inc
out
inc
xchg
mov
scas
pop
dec
jns
popf
mov
pop
pop
cmpsl
sbb
ret
xchg
in
rorb
lahf
mov
pop
jecxz
leave
push
iret
fistpl
or
fidivrl
mov
pop
adc
nop
xlat
stos
and
add
xchg
sbbb
add
paddd
push
sbb
ljmp
mov
push
repnz
mov
mov
aas
and
mov
loop
loope
movsl
insb
popf
or
popa
and
mov
repz
pop
pop
xor
aam
push
and
pop
popa
pop
pop
xchg
lea
call
mov
push
adc
pop
mov
push
sub
cmc
in
rclb
pushf
lret
aas
pop
push
pop
xchg
push
mov
sysret
lds
xchg
pop
cltd
lds
adc
mov
push
xor
jns
orl
decl
jnp
add
or
mov
inc
idivl
mov
cmpb
sti
push
sub
inc
push
fdivrs
inc
fstl
dec
dec
and
out
push
or
push
in
popa
mov
add
and
sahf
jo
sti
sbb
adc
shlb
xchg
add
lret
out
das
push
hlt
push
repnz
frstor
mov
jge
inc
fadd
addr16
jge
bnd
add
jnp
or
add
pop
mov
cmp
scas
cmc
mov
out
inc
and
lea
es
adc
mov
les
es
fcompl
adc
fimull
cmc
pop
cs
push
and
pop
xchg
stos
inc
test
inc
pop
mov
lret
cmp
and
mov
imul
fisubrl
jp
bound
xchg
inc
adc
add
out
pop
lret
mov
or
mov
sti
or
loopne
push
sbb
add
push
test
jnp
loop
rorl
pop
sbb
mov
jnp
pop
sbb
jbe
out
decl
test
mov
addr16
mov
push
inc
sub
jnp
push
push
sbb
and
std
xor
mov
sub
notl
std
push
sub
js
in
je
gs
dec
dec
aad
fnstenv
mov
lret
cmp
sbb
mov
xchg
lods
and
sbb
hlt
jbe
fbstp
cmp
mov
inc
pop
out
jb
fidivl
decl
call
push
lret
out
jb
insl
repz
lods
fisttps
cmp
or
fs
or
into
mov
imul
xor
xchg
xor
dec
mov
fcmovne
shrb
daa
aad
mov
das
xchg
das
push
sti
sbb
sbb
mov
fwait
das
inc
cli
cli
test
push
loopne
pop
pop
es
jne
cmc
cmpsb
lods
jae
sbbb
daa
mov
and
ficoml
lea
lock
mov
push
jmp
out
gs
jecxz
ljmp
pop
or
jnp
stc
movsl
lret
mov
sub
movsl
popf
xchg
shll
push
lcall
mov
int3
and
js
adc
mov
cltd
xor
cltd
jmp
stos
cmpsl
roll
in
mov
cs
into
or
fcomps
adc
int
outsl
aaa
cwtl
rcrb
pop
adc
imul
xchg
jecxz
jp
andb
orb
sub
arpl
pop
pushf
insl
insl
sbb
faddl
jmp
mov
xchg
xorl
dec
call
xchg
sbbb
and
das
pusha
pop
xchg
mov
in
inc
adc
scas
xchg
cmpl
test
sbb
mov
rcl
xchg
pop
inc
lret
add
mov
mov
cli
or
outsl
mov
ss
cmp
pushaw
mov
sbb
aad
imulb
sub
lods
or
sub
dec
jp
cmc
int3
jo
imul
dec
add
sub
stc
es
mov
push
cmp
rolb
inc
mov
fsubl
sbb
xchg
push
sarl
or
dec
test
fldcw
cmpsb
loope
lret
sbb
mov
into
cwtl
leave
dec
xor
mov
mov
nop
push
or
fs
pop
pop
dec
lcall
mov
and
and
xor
pop
inc
cmpl
fadds
adc
or
mov
repnz
cld
ret
lods
fwait
popa
mov
sub
jmp
adc
mov
jl
dec
clc
add
mov
lods
test
and
dec
test
xor
rorl
add
mov
jnp
add
jbe
loop
push
clc
jg
cld
mov
enter
fistps
push
fbld
sbb
inc
fs
pop
cpuid
dec
fisubl
popa
loope
imul
aas
lret
push
and
loope
bnd
add
dec
sarl
icebp
xchg
push
stc
pusha
test
xor
pop
jmp
lret
insb
movsb
out
add
dec
aaa
push
add
cmpsl
sbb
cmpsl
mov
lods
mov
mov
inc
fidivrs
adc
mov
scas
mov
outsl
push
pop
movsl
push
popl
or
mov
fsubl
inc
cmp
subb
inc
out
fst
pushf
jbe
xor
repz
in
hlt
lods
repz
stc
mov
fnstcw
sbb
lods
push
leave
cmc
mov
sbb
adc
repnz
inc
inc
xchg
xchg
or
movsl
push
lcall
fs
lock
xchg
out
jl
mov
adc
and
or
adc
cltd
test
arpl
xchg
mov
xchg
sbb
add
inc
add
dec
es
in
pop
pop
jne
sub
jle
and
lea
rcl
adc
das
decb
cmp
add
pop
add
xor
dec
pop
mov
lods
or
stos
loopne
mov
pop
cmpsl
nop
cmp
sub
in
adc
push
rcll
lret
xor
jnp
sti
iret
mov
add
push
pminub
or
jne
lcall
adc
push
ret
pop
xchg
pop
mov
xor
mov
jae
adc
fs
xchg
inc
inc
es
fdivrl
add
ret
adc
and
dec
data16
adc
jns
cmc
xchg
mov
ret
mov
movsl
icebp
sub
sbb
xchg
xor
jae
int3
movsl
les
lods
icebp
mov
jecxz
adcb
pusha
add
xchg
xchg
stos
xchg
mov
rcl
ficoml
fwait
sub
xchg
and
fsubrs
mov
cmpsb
xor
call
inc
dec
cmp
mov
mov
imul
in
cpuid
test
es
les
mov
push
pop
sub
stc
test
outsl
add
stos
fs
adc
nop
les
imul
pusha
sahf
and
push
popa
fmull
push
add
sub
into
sti
neg
fistps
ficoms
out
sarl
aam
and
and
xor
mov
inc
mov
cmc
lret
insb
fiaddl
push
inc
dec
push
in
fisubrs
mov
jmp
leave
neg
cmp
mov
and
cmp
test
fsubl
mov
aaa
repnz
cltd
cltd
sbb
add
dec
push
mov
bound
mov
mov
sbb
push
movsl
mov
mov
fwait
dec
inc
divl
out
xchg
fsubrs
iret
sub
repz
adc
fwait
repz
out
inc
jns
dec
hlt
cmpsb
mov
outsl
sub
cmp
cmp
and
cmp
and
mov
fcompl
pop
sub
sbb
xchg
push
sbb
push
fwait
stc
push
push
pop
xor
cs
mov
cmpsb
push
mov
mov
cld
rcll
sbb
jp
or
cmp
xchg
lret
sbb
stos
mov
mov
int
roll
nop
jecxz
fstpt
push
mov
or
popa
add
cmp
jae
or
inc
orb
sub
mov
jp,pn
popa
cmpsl
sbb
add
mov
out
and
subl
inc
push
mov
repnz
das
sti
iret
das
pop
shlb
jno
repnz
fldt
dec
xchg
pop
fstl
fcompl
sbb
pop
gs
xor
jp
adc
cmp
jbe
inc
dec
addl
jge
jnp
inc
push
jns
aad
pop
adc
xchg
jns
test
dec
scas
inc
or
adc
dec
shll
inc
push
rorl
cs
pop
iret
cmpsl
push
xor
and
push
sub
outsb
lea
lret
gs
dec
xchg
jmp
mov
pop
jae
mov
mov
leave
js
push
dec
xchg
pop
jbe
mov
and
mov
js
push
dec
adc
data16
sbb
sbb
mov
cli
adc
cld
add
enter
das
repnz
out
out
sub
scas
subb
mov
xchg
rcll
mov
sub
add
mov
stc
cmc
mov
push
push
shl
fisubrl
incl
push
mov
dec
test
cmp
test
loopne
popa
sub
jno
sti
and
outsb
add
es
out
lea
cmp
sarl
mov
ss
inc
sbb
dec
xchg
xlat
hlt
jne
push
ret
dec
jnp
hlt
pop
adc
mov
stos
icebp
cmp
shlb
inc
in
jge
enter
mov
jg
aas
mov
mov
enter
fldl2e
arpl
inc
sub
daa
shrl
std
imul
fisttps
idiv
and
jno
sbb
or
loope
jns
aad
dec
sub
jl
add
out
out
push
pop
and
add
daa
sti
arpl
or
mov
out
jg
std
lcall
js
xor
out
test
fcoml
jge
add
pop
cld
in
or
lahf
inc
add
mov
ret
fidivs
in
shlb
gs
jl
push
out
cmp
mov
out
ret
mov
push
pop
push
stos
xchg
enter
lcall
in
sub
xor
pop
mov
outsl
movsl
cmp
sbb
fs
and
test
jo
sbb
push
mov
in
mov
sbb
test
gs
or
dec
xchg
pop
int
inc
mov
and
insl
xlat
in
pop
cmpsb
jo
push
jo
movsl
dec
xchg
pop
dec
xchg
xchg
sahf
les
mov
mov
fwait
ja
pop
dec
in
or
sarl
inc
outsl
pop
lods
and
std
xor
ss
movb
push
neg
scas
aad
fmuls
ss
jle
add
int3
mov
xchg
pop
in
push
or
enter
adc
cmp
ljmp
leave
or
xor
pop
jo
test
lock
dec
and
adc
or
jne
push
sbb
pop
enter
lods
push
leave
icebp
test
add
repz
sub
pop
lea
xchg
ja
jecxz
lock
shll
std
std
or
lds
cmpsl
xchg
jns
shll
hlt
daa
dec
ss
dec
pop
cwtl
repnz
push
mov
sub
into
paddb
cmpsb
add
cmp
xlat
lret
cmp
and
adcb
xor
mov
or
xor
adc
add
cli
cmp
push
cmp
xor
lea
cld
sbb
hlt
and
jg
jne
loope
leave
rolb
ds
mov
push
fwait
push
daa
in
je
mov
hlt
dec
mov
movsl
cli
lock
les
lret
xlat
xchg
ds
and
push
arpl
lds
pop
xor
icebp
mov
pop
in
int
dec
dec
cltd
mov
sbbb
repnz
insl
nop
xor
sti
lahf
mov
loop
cltd
push
cmp
pushf
jg
pop
jle
cmpsl
out
aam
mov
push
xchg
push
js
jmp
jns
adc
lret
andb
std
popf
mov
fcmovu
int
sahf
mov
inc
adc
movsb
mov
and
sbb
inc
mov
push
add
mov
cli
dec
ficomps
std
lock
prefetch
inc
stos
mov
jg
xchg
jle
sbb
std
ret
ret
lahf
test
jo
dec
outsl
out
push
inc
lock
cmpb
clc
adc
arpl
jmp
stc
push
adc
in
scas
cs
lods
lock
mov
jns
mov
lret
xlat
cmp
jns
pushf
pop
iret
bound
xchg
imul
les
test
push
xor
jnp
xor
mov
xchg
out
inc
and
pop
paddusb
dec
ja
icebp
movb
adc
xchg
dec
or
or
gs
imul
scas
push
mov
or
int
lret
lcall
jp
inc
hlt
andb
or
xchg
jecxz
filds
sbbb
outsl
xchg
add
cmp
dec
js
cltd
es
notl
adc
dec
cltd
inc
stos
js
add
dec
cltd
add
cmp
and
clc
insb
mov
mov
add
pop
mov
and
shl
int
or
jne
mov
jns
adc
mov
xchg
sbb
stos
xor
sbb
mov
mov
call
sbbl
sub
sub
int3
fidivs
cmp
inc
mov
outsb
mov
stc
loop
addr16
int
rcrl
inc
push
imul
xor
dec
orl
sti
jl
insb
fisubl
sub
shlb
push
xchg
cmp
pop
mov
jp
dec
push
mov
pop
test
cmp
inc
in
mov
and
mov
das
xlat
andl
sarl
jle
fldcw
dec
xor
nop
cmp
out
mov
in
mov
fmul
push
sbb
pop
jge
pop
xchg
dec
xchg
dec
sub
out
addr16
and
stos
daa
dec
test
and
pop
push
add
sub
in
and
imul
sbb
cmp
arpl
jge
jmp
lock
ljmp
aam
mov
dec
mov
xchg
sahf
jbe
pop
and
jo
xchg
sub
push
and
sub
adc
test
inc
push
jb
into
sub
ret
jl
or
stos
and
ds
pop
aaa
mov
movsl
int
scas
push
push
add
jns
cwtl
xor
cli
fsubrl
dec
and
and
test
jns
jnp
scas
mov
mov
mov
inc
push
stos
adc
add
xchg
pop
lods
lock
imul
hlt
xor
inc
out
jnp
push
stc
jns
adc
add
sbb
and
jae
push
sbb
add
and
xchg
and
insl
jbe
out
lds
add
scas
mov
cld
xchg
push
mov
mov
jne
mov
pop
mov
jbe
xchg
ret
jno
mov
jl
dec
mov
les
call
push
cmp
enter
mov
sub
call
fists
ds
or
imul
xchg
ja
xchg
pop
push
add
inc
sarb
test
out
rolb
jo
daa
push
movsb
pop
jne
loope
int
sbbl
rolb
sarb
popa
pop
push
rorb
popf
fbld
push
pop
mov
mov
cmc
jmp
std
lea
scas
pop
ljmp
lahf
dec
rol
mov
repnz
jbe
outsb
jbe
sub
xchg
sbb
dec
out
or
mov
enter
xor
add
push
or
aam
and
dec
movsb
push
jp
mov
pop
scas
nop
dec
push
sbb
mov
ret
push
mov
daa
jno
dec
dec
fnstenv
dec
inc
pushf
add
jns
fnsave
jns
add
jle
sti
xor
in
mov
dec
iret
addr16
dec
lds
aad
push
cmp
in
mov
nop
add
adc
add
xchg
loop
jge
lods
push
mov
test
xor
repz
dec
cmp
push
mov
sub
mov
pop
pop
shlb
shl
dec
mov
jb
dec
dec
je
adc
mov
or
enter
mov
ljmp
out
jge
dec
fucomp
int3
shlb
push
test
sbb
sub
clc
aas
xchg
ljmp
out
lods
js
xlat
hlt
inc
int
loopne
daa
clc
cld
push
mov
inc
jne
clc
imul
mov
popf
in
jns
popf
lods
cmp
ss
and
insl
xor
push
push
add
aam
repnz
mov
inc
icebp
xor
adc
ljmp
jb
or
or
pop
shlb
rorb
scas
js
ret
or
lods
xchg
lods
mov
push
inc
dec
xor
adc
pop
pop
lock
in
dec
les
ja
add
cmp
js
inc
pop
jns
xor
dec
jecxz
rcrb
lea
daa
fcos
es
xor
lods
std
sbbb
cmp
lds
int3
push
jb
sbb
cmp
mov
loope
sub
fs
out
xlat
xchg
push
jo
popf
movsl
lahf
sarl
out
and
push
mov
dec
fs
icebp
loope
js
sbb
fcmovnu
int
mov
aaa
mov
xor
loopne
dec
movsl
and
stos
mov
fidivrs
mov
inc
lahf
mov
inc
rcrb
daa
js
jle
xlat
inc
fs
ret
out
out
lret
fisubs
gs
xchg
mov
and
inc
test
loop
push
or
pop
pushf
movsl
mov
mov
in
lret
push
or
lahf
into
insl
popa
push
scas
mov
cmp
sub
add
je
dec
iret
das
push
push
das
out
ds
lds
cmpsb
add
sti
shl
clc
xor
aaa
add
adc
adc
leave
fdivl
mov
mov
ljmp
filds
dec
in
gs
jl
mov
lods
inc
insb
inc
orl
pop
mov
push
inc
jg
xchg
inc
xor
lock
add
xchg
sub
js
sub
push
movsb
test
or
imul
jmp
imul
dec
add
divb
mov
icebp
stos
fildll
mov
adc
mov
cmp
test
fdiv
out
jo
push
nop
shrl
enter
cmp
cmpl
mov
and
or
xchg
xchg
cmpsl
mov
int
test
sub
and
ret
push
or
jnp
in
adc
test
mulb
mov
testl
push
es
sarb
adc
push
aam
or
mov
iret
add
inc
pushf
push
push
dec
mov
xchg
fnstcw
jp
push
test
and
add
jge
xor
push
and
sbb
in
cmpsb
sbb
push
pop
pop
mov
fcomps
lock
inc
les
ljmp
cmpsb
push
mov
jne
sub
test
aaa
jbe
inc
push
js
and
dec
jecxz
outsb
or
or
mov
mov
mov
test
pop
pop
ja
fisttps
mov
ret
jmp
shll
jmp
sub
roll
cltd
shlb
xorl
pop
mov
sub
sub
test
pop
lea
lahf
data16
pop
add
arpl
ret
push
sub
inc
popa
pop
je
xor
fsubrl
mov
push
sbb
mov
fstpt
insb
ds
int3
push
repz
push
sbb
adc
xor
xchg
lods
push
or
pushf
repnz
jne
and
les
adc
scas
xlat
lock
aaa
int3
aaa
mov
test
push
adc
dec
ret
push
dec
test
je
dec
inc
fs
lock
pop
mov
pusha
dec
mov
out
roll
stos
iret
xchg
lahf
adc
out
cmpl
arpl
dec
inc
repz
xor
sahf
scas
dec
incb
xchg
arpl
push
add
testl
leave
outsb
inc
scas
xor
mov
mov
mov
lret
repnz
dec
addb
adcb
xor
cmp
loopne
mov
ja
test
cmp
sar
inc
mov
sub
stc
push
xlat
stos
rcrl
pop
jle
cmc
fimull
iret
mov
jecxz
fwait
loope
or
pop
decb
mov
pop
std
sbb
es
jmp
aaa
mov
int3
sub
push
fdivrs
js
repnz
dec
and
xchg
pop
subb
jg
rorb
xor
aad
pop
adc
push
lret
movsl
fcmovb
in
pop
cli
fst
pop
sub
lods
scas
xchg
jbe
or
fmul
outsb
add
or
lods
add
adc
sub
or
and
aas
mov
jmp
fsubrs
repz
or
scas
xchg
jg
sbbb
push
repz
jbe
dec
adc
xorl
lds
ljmp
je
flds
lea
cmc
mov
xchg
push
sbb
out
cmp
dec
jns
vmovups
jno
add
mov
add
inc
xor
push
pop
in
in
jle
mov
mov
sbb
push
push
arpl
andl
fisttps
sbb
cmp
ljmp
jle
ja
out
insb
insb
dec
jno
popf
and
inc
jo
daa
mov
das
mov
xlat
adc
dec
xor
xor
hlt
insb
rcl
pusha
add
aaa
xchg
cmp
in
jecxz
ficomps
xchg
cmp
adc
inc
filds
add
nop
xchg
movsl
repnz
sub
repz
ss
lret
xchg
sbb
xchg
sbb
jno
repz
dec
aas
jo
fiadds
sub
scas
ret
or
dec
sub
sub
out
loopne
mov
filds
arpl
sub
ret
popf
cmp
lds
push
lret
sbb
pop
dec
lods
xor
jae
inc
sti
push
int
xchg
sub
in
test
cs
lds
nop
ds
adcl
lock
test
or
xor
out
rcl
mov
inc
aas
hlt
scas
loop
mov
cwtl
jp
push
ret
popf
loop
ss
adc
push
pop
dec
inc
mov
out
mov
dec
aam
std
mov
imulb
jo
mov
cmc
lds
cli
push
sbb
xchg
fbld
data16
jbe
gs
push
add
repnz
xor
ljmp
sub
ret
xchg
loopne
popa
sub
cmpsb
jbe
popf
inc
mov
imul
push
jne
xchg
jmp
cmc
cs
mov
mov
pop
mov
sub
xchg
and
push
adc
daa
cmpsb
repnz
lods
xor
je
mov
and
hlt
jae
mov
xor
or
testb
cmp
leave
inc
and
jmp
cmpsb
jge
cs
xor
pop
push
cld
dec
notb
push
sar
in
pop
adc
out
inc
jae
pop
pop
iret
pop
sbb
xor
cli
fwait
gs
adc
jnp
xchg
mov
rcll
mov
lahf
fiadds
or
push
inc
pop
mov
or
sub
pop
andl
pusha
mov
xchg
pop
shll
mov
repnz
push
xorl
out
mov
mov
xchg
outsb
push
jnp
mov
sar
push
xor
int
add
out
adcl
push
test
mov
jg
imul
inc
sub
loopne
lret
add
mov
push
jmp
adc
push
popa
daa
jle
mov
lret
pop
imul
xor
pop
jb
aaa
call
daa
cwtl
xchg
add
fisubrl
cmp
xchg
bound
mov
jp
arpl
ljmp
dec
aaa
xchg
in
notl
push
or
xchg
or
jnp
mov
sbb
pop
int
sub
in
xchg
sarl
data16
mov
sbb
icebp
repz
insb
jmp
insl
cmp
or
sahf
mov
pop
repnz
xchg
les
scas
adc
sub
testb
mov
cmpl
xor
jne
cli
cmp
xchg
sahf
xchg
lds
push
jno
sbb
adc
xchg
ret
jbe
ret
jbe
or
in
pusha
pop
pushf
jno
cwtl
jae
and
mov
mov
cs
mov
xor
imul
jo
mov
dec
fwait
stos
fbstp
push
push
std
pop
sub
mov
mov
fsubr
add
sub
insb
lcall
sbb
cmp
inc
fistl
mov
aas
rolb
add
mov
mov
sub
jnp
push
js
jecxz
mov
mov
jns
test
out
inc
dec
inc
test
test
push
dec
or
xor
inc
into
push
shll
mov
xchg
adcb
xchg
sbb
and
stos
jmp
lahf
sbb
int3
andps
shrb
xor
test
jb
xor
add
pop
dec
mov
or
test
in
jae
add
xlat
lock
hlt
out
push
fmul
or
sub
mov
xchg
mov
add
lock
lea
xchg
mov
mov
and
movb
int3
cwtl
lods
ja
vmovhps
pop
or
das
jb
into
pop
pop
pushf
loop
ljmp
sbb
fcmovbe
out
xchg
cltd
mov
inc
add
jge
scas
pop
mov
fwait
lods
in
test
pop
adc
mov
mov
mov
lahf
fistpll
and
out
and
in
out
sub
cmp
mov
sar
pop
iret
xchg
pop
jge
jle
sub
repnz
jg
stos
cwtl
pop
aaa
mov
xor
cmpsl
fwait
mov
pop
sub
add
lret
loopne
arpl
cmp
adc
pop
or
dec
fidivrs
fldl
mov
leave
xlat
inc
inc
aaa
cmp
in
test
push
adc
adc
pop
jmp
frndint
cmc
xchg
sahf
push
jnp
inc
xchg
xlat
addr16
xchg
dec
cmp
push
nop
in
ret
sub
loop
jbe
int
subb
cmp
hlt
mov
dec
cmc
lea
mov
add
mov
pop
call
sbb
les
fs
mov
xchg
xor
jp
aas
out
push
xchg
jl
rclb
cli
xchg
xchg
mov
arpl
cmp
jle
jg
or
dec
sub
repnz
cmpsb
out
pop
aam
xor
sbb
in
insb
out
push
dec
rcrl
and
leave
out
sub
mov
sbb
jl
jmp
mov
fsubr
fimull
test
adc
adc
sahf
dec
xchg
pusha
je
mov
push
test
cmp
jnp
sar
aaa
mov
push
nop
aaa
hlt
push
mov
xlat
adc
and
inc
mov
jl
cmp
push
add
shld
sub
jnp
incb
out
shlb
mov
adc
mov
mov
sbb
adc
adc
and
sbbb
popf
or
fcmove
in
push
or
mov
movsb
cltd
outsl
aas
xchg
je
pop
push
or
mov
in
sahf
adc
adc
jns
jp
data16
and
mov
in
fnsave
add
out
adc
or
or
or
orl
mov
rol
xchg
pop
test
aaa
xchg
out
xchg
fsub
jl
outsb
jg
js
xchg
sarl
mov
into
jg
jae
pushf
outsb
push
or
jmp
cmc
and
push
leave
popa
ret
jecxz
roll
dec
or
cltd
jnp
mov
fsubrl
sbb
add
or
call
jmp
push
sub
stos
add
mov
lods
lods
xchg
push
cwtl
xchg
push
pushf
mov
mov
mov
xor
mov
jnp
adc
popf
ljmp
daa
sub
sub
mov
bound
insl
test
sbb
or
outsb
cmc
or
mov
rcll
xor
xchg
enter
lods
out
fistl
outsl
xchg
sub
jmp
mov
ficomps
jae
jne
outsl
ljmp
sub
sub
out
push
popa
pop
les
add
xor
pop
call
or
adcb
push
test
shrb
addb
dec
test
or
pop
das
xorl
popf
stc
mov
lock
insb
lods
pop
pop
sbb
gs
dec
xor
sbbb
test
pusha
push
dec
clc
mov
in
sbbb
je
adcl
push
je
test
cli
gs
inc
xor
jb
aaa
or
filds
sub
sub
loopne
imul
aaa
mov
pop
decb
mov
add
inc
pop
adc
xchg
xchg
ja
jg
orl
and
loopne
repz
loopne
ljmp
lock
and
lret
jno
sbb
lods
fidivs
mov
sahf
in
or
sbbb
inc
add
mov
test
pop
adc
aad
and
aad
push
jnp
dec
fwait
testl
mov
cmp
loopne
fiadds
ja
mov
dec
outsl
test
dec
xor
call
push
add
pop
pop
ror
cltd
ret
jge
xchg
sub
push
jnp
add
push
pop
adc
fisubs
not
dec
pop
cmp
mov
cli
scas
jae
push
sub
add
pop
andl
mov
popl
stc
mov
xchg
popa
cmp
push
in
sub
push
xchg
jg
jmp
and
ss
pop
test
mov
cmp
sbb
pop
out
jb
inc
repz
pop
daa
adc
pop
scas
push
sbb
movsl
test
jmp
fisttpl
aad
pop
push
pextrw
dec
pop
cmp
movsl
jp
jmp
insb
pop
lret
xchg
filds
push
xchg
and
in
jecxz
movsl
in
jp
sbb
adc
cmp
stc
fnsave
inc
loopne
inc
cld
and
inc
inc
das
dec
daa
mul
mov
cmpsl
pop
mov
mov
fidivrl
mov
cmp
push
rcrb
pop
push
cmp
aad
add
jns
jo
dec
jmp
or
xchg
mov
adc
in
rcll
inc
add
cwtl
jmp
outsb
inc
pop
lds
in
xchg
je
and
jnp
xchg
mov
dec
and
xor
aad
or
ja
mov
je
adc
mov
loop
cs
sub
xor
push
jno
outsl
add
negb
mov
adc
mov
pop
xor
push
add
and
sti
mov
cwtl
mov
mov
ja
ljmp
test
in
adc
add
imul
pop
adc
daa
pop
sub
cvtdq2ps
jno
adc
sub
lret
in
sub
mov
insb
lock
leave
jecxz
es
cmpsl
mov
cld
aas
push
pop
loope
xchg
cmp
jns
or
inc
adcb
xchg
or
scas
add
js
add
sti
mov
jmp
lret
and
aas
lock
mov
sarb
daa
dec
repz
push
xchg
fwait
or
pusha
lcall
sbb
movups
cltd
out
xchg
pop
add
aad
xor
xchg
xlat
cmpsb
gs
mov
stc
lds
cmp
pop
pop
pusha
enter
jns
xlat
cmp
pop
or
or
inc
mov
aas
and
jb
xchg
mov
sub
xchg
repz
adc
jle
sub
add
into
mov
sbb
bound
fsubrl
push
nop
es
push
mov
xchg
cmp
shr
sbb
stos
cmpsl
push
rorl
jmp
or
mov
adc
mov
cmp
adc
mov
push
imul
repnz
and
imul
fs
or
lds
fs
pop
cmp
sbb
cmp
enter
push
xchg
inc
push
sahf
cmp
and
sbb
scas
sub
dec
bound
pusha
aad
fldcw
fs
lea
pushf
test
push
xor
adc
out
sub
out
fimull
sbb
sbb
popf
pop
xchg
push
mov
rcll
sbb
jnp
push
dec
inc
jg
and
mov
or
add
arpl
cmc
pusha
xchg
pop
lea
lahf
xor
dec
inc
sub
out
lret
mov
xor
mov
adc
std
stos
xor
imul
jle
daa
mov
mov
cwtl
sarb
repnz
in
je
xchg
call
cmp
repz
es
push
cmpsb
cmpsl
iret
add
push
mov
and
mov
jp
push
pop
sahf
sub
fidivrl
fdiv
outsl
and
fisubrs
or
in
cli
mov
adc
mov
lahf
xor
cmpsl
in
push
movsb
sbb
push
ret
ret
cmp
inc
jne
lret
mov
jmp
cmp
stos
xchg
xchg
cltd
jne
xlat
push
outsb
jle
jecxz
ljmp
pop
adc
into
mov
stos
enter
jo
notb
sub
cmp
add
and
ficoml
add
call
movsb
adc
cmpsl
nop
xchg
and
ljmp
fdivrl
insb
stc
aam
jne
iret
pop
jecxz
adc
or
sub
shrb
popa
or
dec
or
inc
int3
in
iret
in
adc
movsl
add
movsl
sbb
add
in
scas
fs
dec
push
inc
jbe
jb
int
insl
and
clc
cmpl
test
lahf
sbb
pop
fimull
in
push
or
daa
pop
in
stos
in
adc
ljmp
mov
xchg
sar
cmp
sbb
dec
mov
pop
jl
xchg
pushf
cmp
cmpsl
lods
push
push
lods
xor
add
push
lret
push
cli
jle
xchg
ret
testl
ja
test
in
xor
dec
pop
and
stos
xlat
rcrl
inc
ss
aam
mov
nop
lea
cmpsl
lods
add
push
xor
and
clc
mov
mov
pop
mov
daa
push
hlt
xchg
cmpsb
add
inc
aas
insl
cltd
stos
xchg
cmc
mov
and
xor
test
cmp
or
jno
xchg
lahf
cmp
jb
pop
movsl
mov
insl
repnz
xor
ficomps
repz
cltd
adc
cmpl
push
pop
in
adc
mov
jl
mov
sub
mov
inc
ret
jbe
push
sub
push
inc
sub
xchg
inc
inc
stos
std
mov
xchg
jb
pop
fcoml
and
call
mov
fisttpll
add
jl
sub
ljmp
mov
js
mov
shl
adc
push
pop
or
scas
or
push
arpl
movsl
fwait
mov
xchg
sbb
dec
and
and
jae
shlb
sarl
mov
sub
and
jge
cmp
fwait
js
adcb
adc
cmp
mov
aam
in
adc
mov
sbb
xchg
loop
sub
mov
sbb
jns
dec
sub
cmp
cld
jb
pusha
loopne
lods
cmp
mov
xlat
dec
add
adc
mov
inc
xchg
push
push
or
sbb
add
mov
sbb
sub
into
int3
psllw
push
sbb
sub
add
movsb
fst
and
mov
vfmsubps
out
pop
cs
loop
pop
cmpsl
aad
or
ja
ljmp
cmp
data16
inc
sub
in
pusha
clc
in
pop
mov
nop
in
movsl
aaa
in
sub
xor
pop
popa
or
inc
mov
sub
arpl
loop
cmp
mov
xchg
push
jge
mov
sbb
dec
sahf
sub
inc
mov
push
daa
sub
sbb
push
adc
jl
add
rorb
ja
adc
mov
cmp
sbb
sub
mov
pop
stos
pop
cmp
in
fistpll
or
add
pop
push
cmpsb
cmp
jmp
pop
lcall
movsl
mov
mull
jne
sahf
cmp
cmp
xor
bound
shlb
jmp
frstor
ja
push
inc
xor
pop
jae
fwait
ss
out
inc
jns
outsb
sti
mov
fdivrl
mov
clc
je
xlat
dec
imul
out
outsb
ds
mov
nop
mov
lcall
pop
jmp
sarl
sbb
js
loope
pop
adc
insl
add
mov
mov
adc
pushf
pop
jmp
pop
jns
pop
pop
lds
insl
push
sub
mov
fidivs
mov
or
cwtl
mull
call
jb
fldln2
mov
jecxz
je
and
std
mov
jno
sub
push
aam
aam
push
mov
loope
daa
rcr
cmpsl
fstps
sbb
stos
jmp
iret
dec
dec
jecxz
mov
mov
mov
lret
mov
bnd
imul
nop
xor
mov
mov
jge
int
mov
and
mov
popa
adc
dec
cltd
fstl
leave
sbb
in
or
dec
pop
cld
sti
addb
popa
sub
push
dec
shl
jle
sti
mov
sbb
mov
addl
mov
adc
adc
push
mov
push
cmp
rclb
jl
subb
aad
cli
or
lcall
xlat
jecxz
push
leave
xor
leave
mov
cltd
repnz
sub
mov
cmpsb
cmpsb
test
inc
jmp
add
jae
call
mov
out
fwait
xor
out
aam
sub
movsl
aas
fnstcw
and
jnp
lret
xchg
add
mov
outsl
pop
jp
jns
or
adc
icebp
inc
sub
into
sti
ja
mov
jge
add
xchg
aas
into
sub
call
dec
jmp
mov
adc
dec
or
aaa
pop
mov
dec
stos
outsb
data16
jnp
jno
sbb
dec
mov
pop
pushl
stos
and
and
lahf
dec
mov
cmp
sarb
mov
mov
or
and
shll
popf
stos
lret
shll
mov
cld
mov
stos
mov
xchg
xorl
mov
and
xchg
mov
jae
push
lock
dec
addr16
fsin
sbb
xchg
pop
gs
loopne
pop
push
or
ficoml
sahf
jmp
or
mov
into
cwtl
push
jmp
mov
mov
or
ficoms
xchg
sbb
mov
je
insb
dec
mov
test
sub
sbb
movsb
or
pop
inc
loop
aas
lret
pop
sbb
popf
out
cmp
in
and
sbb
pop
adcl
mov
sbb
mov
int3
fadd
jno
pushl
sbb
mov
inc
addr16
cmp
test
lahf
pop
mov
cmp
arpl
jo
mov
testl
jmp
cmp
xchg
jne
out
mov
mov
push
and
out
xchg
mov
mov
mov
pop
pushf
inc
dec
mov
sub
test
jo
sbb
movsb
pop
adc
mov
xor
enter
mov
pop
jecxz
negb
sar
pop
sub
fbld
shlb
mov
mov
out
or
lret
mov
testl
mov
movsb
sub
subb
and
idivb
pop
incb
inc
daa
dec
test
xor
scas
jecxz
das
repz
movsb
jp
push
aaa
arpl
push
dec
aad
xor
add
add
das
dec
sbb
or
stos
add
xor
into
shl
rolb
xor
stos
inc
imul
shr
and
adc
repz
ret
insl
xor
sub
cmp
push
sbb
ja
into
dec
pop
xor
repnz
mov
mov
xchg
adc
outsl
jno
stos
mov
pop
scas
mov
mov
cltd
adc
push
jmp
mov
sbb
popa
inc
lock
popf
push
testl
sbb
mov
inc
dec
std
popa
cmpsl
inc
xor
jno
stc
in
push
aam
mov
outsl
ljmp
add
dec
scas
xchg
adc
xchg
and
xor
shrl
test
pop
push
rcl
shrd
mov
pop
mov
cmpsb
mov
push
clc
mov
bound
mov
roll
out
mov
mov
pop
lahf
push
cwtl
fwait
add
sti
mov
roll
jne
fiadds
xchg
xchg
jp
mov
mov
sub
push
js
fsubs
rorb
pop
pop
push
mov
jnp
adc
pop
lea
push
arpl
mov
scas
enter
jle
ljmp
in
xor
xchg
shrb
aaa
les
repz
cld
cmc
insl
adcl
add
imul
sti
repz
mov
lock
xor
or
cld
sub
pop
pusha
stos
mov
xchg
addb
cmpsb
cmp
fcompl
iret
int3
dec
cmp
dec
mov
into
xchg
xchg
loop
xor
cmp
in
popf
fldpi
sarl
rorl
sbb
add
xchg
lahf
bnd
adc
out
mov
cmp
leave
mov
fcom
mov
xchg
dec
cmp
cmpsl
mov
icebp
fdiv
fildll
mov
ljmp
adc
lea
lea
mov
mov
in
push
or
push
in
add
call
nop
push
jbe
sbb
out
fldl
xchg
inc
aad
test
jno
mov
and
hlt
data16
mov
out
pop
sub
adc
push
es
jns
roll
and
insb
cmpsb
xchg
nopl
jae
pop
call
mov
sbb
mov
sub
dec
jl
sub
mov
push
cmp
dec
mov
lcall
pop
mov
scas
inc
cltd
push
scas
sar
andl
sti
pusha
pop
jge
push
dec
repz
into
in
in
push
mov
movsb
ja
push
or
dec
mov
push
in
jl
inc
xorb
daa
into
inc
mov
sbb
sbb
mov
int3
daa
mov
test
xor
or
add
cmpsl
js
loope
xor
test
or
fwait
subb
cmp
pop
sbb
pop
push
ss
ror
push
jge
dec
lock
push
aam
adc
jae
fmulp
outsl
aad
adc
aad
int
shrb
popa
xchg
jmp
inc
inc
jmp
jge
sbb
mov
inc
hlt
dec
movsl
pop
outsb
out
lahf
nop
in
dec
orl
cli
dec
pop
arpl
aaa
or
dec
sbb
daa
mov
adc
adc
sahf
and
lcall
hlt
cltd
mov
cli
movsl
jg
sti
insl
je
sub
fwait
sub
adc
das
jae
clc
dec
dec
data16
loopne
jge
sub
pop
rclb
mov
je
sub
xchg
pushl
xor
in
jb
orl
insl
in
out
add
pop
cmp
mov
out
insb
into
fdivrs
pop
mov
popa
push
sti
addb
jl
in
mov
push
mov
sbb
push
sbb
arpl
and
fwait
rorb
fs
adc
in
pop
aas
and
dec
out
and
pop
xor
sarb
outsb
inc
out
jmp
sub
cmp
pop
inc
jno
push
or
fcomps
xadd
repz
dec
call
xorl
sbb
adc
mov
jl
jae
and
rorb
push
xchg
mov
ds
dec
loope
movsl
or
sub
mov
pop
jmp
push
insl
mov
mov
dec
add
mov
aam
rclb
and
sti
adc
in
fdivr
inc
nop
xchg
and
pop
pop
xor
fidivs
imul
imulb
sub
sub
in
sarb
mov
xchg
jb
repz
jne
icebp
push
sbb
cmp
sub
addr16
inc
and
fstl
ljmp
hlt
adc
in
hlt
push
and
push
in
xor
sbbb
push
xor
out
cmp
scas
adc
aam
pop
fcomi
cwtl
cmp
aas
pop
adc
ds
lcall
insl
ja
xor
xor
insl
push
insl
cmp
out
jbe
mov
test
lods
xor
sbb
ljmp
int
push
inc
lret
jae
sub
and
sub
sub
jae
pop
xorl
xchg
dec
xchg
sahf
loopne
mov
mov
out
stos
mov
aam
outsl
mov
inc
in
mov
sar
inc
jno
pop
pop
popa
outsb
aad
scas
jne
xlat
push
dec
adc
xor
pmulhuw
pop
xlat
add
mov
sbb
adc
in
sbb
fwait
insl
push
jge
mov
pop
js
cltd
popl
lock
mov
loopne
dec
imul
fiadds
addr16
scas
mov
das
daa
pop
dec
stos
sub
out
sub
outsb
adc
sbb
enter
dec
inc
lods
push
cmpsb
subl
lea
int3
stos
cmp
scas
inc
mov
ficomps
pop
mov
adc
push
sub
or
insb
xchg
ljmp
sbbb
pop
push
push
mov
jp
inc
sti
punpckhwd
test
fnstenv
sub
xor
cmpsb
imul
fs
and
pop
lock
sbb
ss
jne
and
ljmp
rorb
push
jle
push
aam
movsb
push
subl
mov
lret
loope
pop
cmp
pop
movsb
or
jp
and
insl
fisubrs
jmp
xor
pusha
mov
orb
inc
pop
shll
cmp
pop
movsb
mov
pop
into
pop
int
ret
pop
imul
sahf
nop
jg
dec
xchg
pop
jns
pop
push
pop
mov
xchg
sbb
loopne
mov
jl
cmpsl
sbb
push
loopne
daa
push
mov
jmp
xchg
and
lea
js
xchg
cmc
mov
test
dec
mov
or
mov
jp
ror
cmp
adc
adc
dec
rcrl
pop
and
and
cld
stos
sbb
cs
mov
and
dec
push
repnz
jo
push
insl
dec
loope
in
aas
or
cmp
jge
fs
or
subb
int
imul
aaa
add
or
or
jns
or
fsubl
out
jbe
js
hlt
mov
movsl
fisubrs
cmpsb
pusha
dec
xchg
fdivl
add
mov
and
cmp
mov
in
int3
scas
in
inc
decl
repnz
stos
adc
xchg
je
pop
sub
or
es
bound
sbb
stos
adc
scas
mov
mov
fwait
rcrl
cmp
or
push
xor
or
pop
push
repnz
xchg
inc
mov
imul
xchg
movsb
movsl
sub
push
bound
iret
flds
pop
sbb
repz
shrl
imul
mov
les
adc
pop
outsb
xchg
mov
dec
or
fmul
sub
pop
push
arpl
jp
addl
insl
jle
lock
pushf
jnp
sbb
add
push
and
sbb
insl
popf
add
dec
cmpsb
fwait
aas
popa
in
jge
cli
test
sbb
popf
adc
xlat
test
mov
dec
inc
nop
push
cmp
or
shr
sahf
ror
xlat
sbb
xchg
ja
cmp
jl
adcl
and
lahf
cmp
lahf
cwtl
and
pushf
int
cmp
fstl
push
js
les
shll
das
ret
inc
add
inc
es
aad
mov
and
pop
cmp
daa
mov
add
adc
jge
jmp
or
mov
mov
arpl
mov
pop
mov
mov
mov
out
push
inc
mov
push
xor
push
icebp
sahf
mov
inc
ss
mov
lods
ja
incb
rcl
mov
shr
fsubs
push
int
std
gs
fstpl
adc
stc
adc
mov
and
mov
sub
lcall
dec
mov
stos
cs
xor
in
mov
lea
aas
fs
imul
daa
loopne
sbb
inc
ret
fistl
movd
dec
pop
pop
dec
lock
adc
stos
jp
sbb
push
sbb
push
xor
and
pop
je
push
mov
fcompl
stos
ljmp
roll
fisttps
cmpsb
pop
sub
loope
lea
fmuls
add
pop
inc
cmc
ja
mov
fs
xlat
int
das
cmp
xchg
shll
mov
std
mov
outsl
adc
xor
aam
int3
test
scas
addr16
imul
sbb
std
das
dec
sahf
cwtl
sub
dec
mov
cltd
gs
inc
xchg
or
call
loop
sahf
call
pop
nop
es
mov
xchg
mov
xchg
jo
fcomip
mov
add
popa
mov
jge
sbb
xchg
aam
dec
push
les
mov
mov
movsl
insb
movsb
mov
adc
ror
fidivrl
sti
push
mov
xchg
sbb
popf
and
inc
mov
mov
out
shlb
pop
jo
cmpsl
dec
push
mov
stc
inc
in
add
jns
pop
push
inc
cmpsb
pop
fistps
lret
mov
test
dec
leave
jno
xlat
add
in
mov
pusha
xchg
xor
imul
inc
push
mov
or
ds
xor
movl
or
lds
xchg
mov
repnz
dec
xchg
add
dec
mov
lahf
cmovle
adc
mov
cmpl
icebp
mov
mov
pop
stos
test
push
bound
cmp
mov
lds
xlat
fdivrs
jecxz
faddp
mov
xchg
les
fucomip
stos
fisttpl
mov
add
mov
cli
mov
lea
aaa
scas
sbb
xor
clc
mov
push
int
jno
cmpsl
jo
in
mov
xor
mov
xbegin
mov
cmc
gs
cltd
jg
cmp
mov
imul
popa
adc
dec
int
icebp
pop
lods
nop
sub
inc
dec
cs
sbb
shl
fbld
subb
xchg
aas
mov
jecxz
mov
pop
xchg
leave
movsb
nop
mov
xchg
dec
jmp
ret
fnstenv
ret
ret
aaa
pop
and
iret
push
test
mov
jge
pop
fnsave
out
mov
add
ss
jo
mov
cmp
mov
adc
dec
xchg
lret
pop
sub
stos
aaa
xchg
test
in
ljmp
aad
test
lods
pop
mov
repz
dec
add
cmp
sbb
dec
cmp
call
pop
pop
scas
in
loopne
sbb
mov
test
outsl
mov
mov
fadds
in
xchg
hlt
mov
add
into
cmpsb
pushf
or
inc
mov
mov
xor
fwait
mov
xchg
lret
sbb
sub
xor
lret
xchg
adc
pop
adc
lea
cmp
imul
mov
in
pop
inc
dec
xor
xor
shr
scas
jecxz
out
outsb
push
adc
sbb
mov
jmp
enter
xchg
pop
shrb
lods
jb
stc
mov
jno
das
lahf
jnp
in
adc
adc
pushf
jl
inc
inc
or
or
jns
or
mov
pop
stos
jo
ret
xor
xchg
cmpb
dec
fdivrs
aas
loope
or
jno
push
mov
loopne
push
fnstsw
cli
mov
push
mov
xchg
loope
ljmp
dec
lret
imul
into
cwtl
jnp
fsubl
mov
jns
jmp
call
inc
mov
bnd
mov
mov
repnz
sub
push
int3
or
std
fcom
ret
xor
push
mov
lea
add
inc
mov
fs
pop
jg
xlat
call
mov
mov
xor
sahf
sbb
out
dec
outsl
mov
sbbb
leave
scas
pop
hlt
and
jmp
cmpsl
xchg
inc
sub
dec
daa
dec
fadd
inc
fs
sub
mov
mov
add
scas
or
xor
adc
mov
clc
sub
dec
pusha
loopne
dec
mov
jp
sti
imul
or
cmp
loopne
or
sbb
pop
jp
das
shll
orl
ret
lock
pop
leave
push
inc
mov
outsb
insb
loop
mov
xor
push
std
sbb
ljmp
add
mov
lret
arpl
inc
sub
sahf
lahf
inc
sbb
ss
test
inc
jno
xor
mov
vcvtps2ph
jmp
pop
nop
pop
rol
ds
out
in
loope
inc
or
adc
mov
xchg
cmp
popf
cmpb
mov
rorl
push
aad
sub
pop
popf
fistpl
mov
idiv
inc
out
stc
or
or
idivl
push
scas
or
fadds
dec
in
clc
adc
cmc
daa
sub
sub
outsl
sbb
ja
sub
pop
mov
pop
jmp
shlb
pop
inc
adc
pop
pop
add
and
loope
aad
pop
stos
inc
cli
xor
pop
mov
push
mov
sti
dec
loope
fdivrp
sbb
lret
ja
xchg
mov
add
or
and
andb
mov
or
dec
pcmpgtd
mov
xchg
pop
in
jne
into
pop
shrb
cmp
pop
xlat
or
jae
cmp
or
add
and
mov
test
outsl
xchg
or
addr16
push
std
sbb
rcll
push
mov
and
sub
popa
xchg
in
cmp
push
mov
arpl
cld
mov
jbe
pop
sbb
push
dec
inc
je
fisttps
sbb
mov
or
mov
cltd
pop
mov
imul
loop
popa
in
mov
dec
imul
ds
mov
dec
addr16
inc
jno
mov
sbb
mov
adc
loop
orl
js
addb
jmp
jmp
jecxz
mov
nop
out
xchg
sub
inc
lret
dec
bound
cltd
jb
adc
stos
aad
gs
out
lods
jbe
sbb
dec
cli
sbb
dec
sbb
test
xchg
ljmp
add
cmp
inc
popf
sbb
pop
pushf
xor
ds
or
orb
pushf
sbb
popf
mov
lds
add
xchg
sahf
testl
cmove
sub
mov
pop
ret
inc
mov
sti
shrl
mov
mov
add
les
add
shl
shll
mov
es
sbb
mov
sbb
ljmp
insl
xor
cmp
inc
mov
sbb
jp
popa
adc
xchg
mov
les
pop
jmp
mov
push
xchg
cmpsl
jmp
stos
lods
and
out
push
and
out
or
push
jbe
pop
cli
pop
testl
pop
test
and
mov
adc
ljmp
jmp
repnz
cmpsb
add
pop
fistpll
inc
lods
iret
outsl
fsubrs
ja
cltd
dec
jp
push
cwtl
repnz
dec
ja
pop
nop
and
es
adc
cmp
test
mov
xor
push
and
gs
sbb
inc
cmp
inc
or
dec
lea
lcall
sbb
ljmp
or
mov
pop
inc
jge
and
enter
stos
int3
js
fs
adc
sub
pop
push
arpl
out
es
subl
inc
mov
xor
dec
push
hlt
lahf
dec
sbb
in
jg
movsb
aad
push
test
add
test
jae
gs
sarl
popf
push
aad
push
inc
cmp
mov
inc
cmp
cltd
pop
rorb
outsl
and
sub
sbb
dec
cmpl
stc
dec
add
pop
add
xor
aad
push
inc
inc
mov
mov
test
mov
sbb
lds
or
adc
ss
arpl
add
mov
shrl
push
mov
inc
push
adc
loop
add
shlb
push
ljmp
cmp
add
mov
xor
stos
jl
fldcw
cli
movntq
out
adc
mov
xor
ret
jge
es
xor
hlt
out
cs
push
pop
subb
mov
mov
stos
sbbl
bound
adc
xor
std
stos
or
popa
ficomps
pop
icebp
pop
mov
xlat
push
and
test
les
mov
call
outsl
push
out
orb
xchg
outsb
push
adc
daa
inc
movsl
cmpsb
xchg
mov
fcmove
ja
pop
cmp
inc
mov
shl
and
mov
inc
mov
stos
inc
dec
daa
mov
dec
mov
jmp
lret
out
cmp
ljmp
push
lret
shl
mov
jb
mov
xchg
clc
jmp
or
sub
cmp
pusha
and
in
adc
cld
add
mov
dec
push
or
sti
mulb
mov
mov
mov
fbld
inc
push
pop
in
cmp
lods
in
std
pop
sub
and
sbb
cmp
push
xlat
bound
push
jne
mov
push
mov
arpl
cltd
push
lock
or
repnz
addr16
jo
pop
push
cmp
or
push
leave
clc
lods
mov
imul
dec
inc
fldt
xchg
orb
mov
pop
int3
inc
inc
xchg
jnp
popa
ljmp
int
cmpsb
ja
leave
jnp
add
push
xchg
lock
ficoms
pushf
movsl
pop
xchg
cmp
daa
cmpsl
repz
sbb
popf
mov
mov
mov
icebp
inc
outsb
mov
cwtl
push
fiaddl
jp
dec
jge
or
mov
and
cmp
add
jne
xchg
sbb
imul
mov
lret
into
mov
add
or
std
push
dec
in
mov
push
leave
pop
rorb
sub
and
aas
inc
pusha
or
or
ds
xor
mov
jns
popa
adc
adc
dec
hlt
xchg
ret
pusha
dec
push
addr16
pop
mov
jae
imul
xchg
and
add
and
fisubs
pop
sub
cmp
adc
push
sbb
scas
sub
cmc
sub
lock
inc
fsubr
insb
or
adc
mov
mov
subl
into
cs
jnp
repnz
cmpsl
aas
test
shr
ss
xor
jecxz
dec
repz
mov
adc
jp
inc
out
imul
push
and
adcl
sbb
adc
push
xchg
push
je
int3
gs
or
ljmp
mov
add
mov
xor
jae
jae
sub
or
stos
dec
pushf
out
ret
repz
sbb
dec
outsb
rcrb
testb
add
jbe
fisttps
xor
call
mov
pxor
mov
repz
jl
pop
cwtl
outsb
sub
inc
sarl
in
lret
es
ja
lods
out
jne
mov
jae
sub
jge
mov
lods
or
dec
lods
sub
cmp
push
ds
xor
imul
mov
into
lds
jle
nopl
hlt
loop
cld
je
out
repz
jnp
cmc
in
aam
or
rcrl
mov
outsb
nop
pop
sbb
fdivrs
adc
pusha
ljmp
sub
mov
aam
cli
inc
divl
fbstp
js
xor
jnp
ds
hlt
pop
push
mov
cmp
andl
scas
jg
fcompl
cltd
jge
fld
jecxz
out
inc
repz
fmuls
mov
push
fmul
aas
dec
iret
ja
ret
in
fadds
insb
ss
lret
and
ud0
and
fs
fndisi(8087
dec
dec
sub
add
xchg
outsl
xor
clc
mov
pop
mov
xchg
push
aam
jne
mov
dec
xchg
int
mov
or
out
ret
dec
sbbl
mov
push
mov
test
fstps
xchg
leave
hlt
inc
fstl
sbb
cmp
sti
xchg
ss
sbb
movb
sti
mov
push
pusha
stc
int3
dec
mov
enter
cs
aad
inc
mov
xor
dec
xchg
fiadds
mov
out
shll
out
fcom
in
mov
mov
xchg
loope
lea
mov
inc
rorl
stos
dec
aad
jno
je
mov
jecxz
inc
jmp
push
cli
adc
int3
stc
loop
jne
aas
sub
xor
mov
arpl
mov
sub
jl
cmp
es
cli
jae
lds
fs
mov
xchg
xor
inc
xchg
sbbb
xor
test
push
push
push
and
popa
notl
xchg
mov
adc
repnz
ljmp
mov
and
mov
xchg
push
or
mov
xchg
jmp
ret
push
add
xchg
jnp
call
test
xchg
cmp
std
mov
dec
ss
xchg
test
push
imul
inc
stos
mov
cmp
push
into
loop
enter
sbb
lea
and
dec
jp
jecxz
cwtl
ret
xor
int3
sub
sahf
add
mov
xorb
jns
lds
mov
xchg
lret
data16
fs
arpl
push
or
cld
push
pop
add
push
popa
gs
leave
or
jbe
cld
mov
je
xor
scas
fstsw
leave
dec
loop
dec
lret
sub
pop
cmp
pushf
pusha
idivb
mov
add
xchg
push
js
ret
jl
pusha
loopne
inc
fs
mov
lret
dec
jo
das
dec
sub
test
ret
repz
xchg
pop
dec
imul
cwtl
push
shrl
xor
fistpll
push
lods
frstor
pop
imul
rcl
test
xchg
clc
jg
or
ss
pop
xlat
cli
xor
leave
or
pop
xorb
xlat
lret
arpl
mov
dec
aam
popf
mov
sub
cmovns
rclb
fsubrl
cli
inc
pop
sub
decb
cs
adc
decb
xor
cmc
mov
sbb
pop
jne
push
lods
dec
push
enter
add
inc
cwtl
add
push
gs
cmp
sub
pusha
inc
mov
sub
out
jae
sysenter
xchg
imul
jnp
push
xor
shll
mov
arpl
or
repz
je
js
stc
mov
push
popf
aad
jns
stc
dec
xor
ds
cwtl
insl
push
cmc
fisubl
aaa
cmp
shl
mov
mov
add
je
dec
add
pusha
pop
xchg
or
cmp
xlat
adc
xchg
lods
roll
or
xor
mov
testb
inc
movsb
push
xchg
xchg
lods
hlt
lret
cmp
les
jnp
stos
loopne
fsubs
cmp
in
insl
sbb
inc
pop
mov
pop
adc
add
jbe
or
or
jns
movsb
imul
push
imul
dec
add
pusha
add
push
clc
call
gs
sub
or
dec
movsb
add
push
xchg
mov
repnz
arpl
inc
imul
pop
adc
jbe
add
arpl
std
lea
daa
xchg
push
mov
jo
movsl
das
xchg
mov
dec
ror
push
pop
and
int3
and
sbb
mov
mov
and
add
rcll
mov
push
lret
mov
push
mov
loop
cwtl
sub
jns
inc
inc
pushl
repz
xor
cmp
scas
push
push
jmp
scas
or
rorl
nop
xlat
in
lea
xor
pop
aaa
push
lods
xor
sub
bound
test
jl
test
imull
push
push
movsb
pop
mov
jge
pop
mov
ljmp
hlt
push
inc
pop
xor
popa
dec
pop
iret
sbb
repnz
xchg
cmp
jnp
jle
icebp
rorl
clc
or
push
stos
cld
iret
or
pop
inc
mov
ret
rcll
daa
cli
stos
stc
es
scas
scas
aad
mov
dec
fsubrp
push
inc
fdivr
outsb
cld
aaa
push
add
inc
mov
dec
aad
test
fsubrs
dec
out
push
movl
mov
jnp
popa
testl
pop
test
push
inc
mov
or
inc
add
ds
inc
lahf
xchg
fcompl
rolb
icebp
inc
xor
adc
pop
jo
outsl
lods
arpl
mov
dec
mov
stc
dec
lahf
mov
ds
cmp
cmp
sahf
jge
mov
icebp
lahf
jp
inc
testb
push
add
mov
mov
jne
sbb
add
mov
adc
xchg
jnp
add
xchg
mov
cwtl
cmp
xchg
jnp
movsl
cmc
jmp
roll
add
add
mov
insb
inc
sub
xchg
sub
mov
movsl
or
imul
nop
into
push
push
dec
mov
adc
in
lds
push
rcll
loopne
sbb
or
js
lea
popa
mov
ret
ljmp
lods
sub
pop
das
xor
dec
test
iret
andl
mull
inc
mov
shll
xchg
push
ret
inc
mov
sar
test
sub
push
fcmovnb
cmp
rcr
scas
cmp
jecxz
loop
movsl
and
adc
sbbb
out
xor
sarl
xchg
out
outsl
add
dec
faddl
iret
push
inc
inc
lods
out
in
pop
in
mulb
sbb
mov
jmp
xchg
mov
xor
xchg
sub
mov
arpl
jecxz
dec
jp
stos
mov
in
sub
mov
sbb
ret
fs
sub
pop
fldenv
mov
xchg
fsubrs
daa
js
pop
lods
ss
out
cmp
cwtl
cmp
mul
bound
cmp
in
lods
sbb
xchg
scas
xchg
mov
in
ja
in
add
push
cmp
xchg
aad
xor
and
xchg
push
xchg
pop
xchg
imul
rcr
call
stc
int
repz
cmpsb
sti
mov
jmp
jb
and
push
aam
ja
shll
cmpsb
fiaddl
iret
das
xor
pop
roll
inc
filds
push
fsubl
xchg
mov
sbb
inc
mov
std
inc
push
xchg
jns
sbb
push
int3
or
popa
insl
push
jbe
stos
and
adc
loope
stos
cld
or
in
lret
mov
or
movsl
pop
pushl
stos
mov
pop
sub
and
inc
lret
orl
jae
push
jmp
mov
fcom
inc
pop
div
xor
jg
in
add
or
ret
cld
add
pusha
arpl
lcall
mov
inc
incl
test
jg
ja
rep
add
push
mov
fstpl
movsl
addr16
cmp
aam
ds
xchg
mov
xchg
test
sub
test
xor
imull
push
push
dec
das
cmpsl
or
push
in
cmp
mov
push
xchg
dec
add
push
add
jns
push
dec
pop
inc
mov
cmp
add
les
sarl
sti
xlat
push
and
adc
adc
stos
push
into
roll
mov
sub
sarl
stos
mov
push
or
xor
inc
repnz
in
push
scas
add
sbb
cltd
cmp
mov
push
mov
push
dec
fcompl
mov
xor
sbb
xchg
stos
sbb
adc
mov
std
stos
leavew
adc
pusha
insb
xor
adc
and
stc
jg
cmp
aaa
jg
jnp
inc
in
cmpl
mov
push
mov
mov
xchg
push
inc
pop
jecxz
jns
mov
cmp
daa
mov
dec
ret
jno
add
or
outsb
xor
cmp
int3
call
sub
xchg
mov
inc
sub
mov
scas
fcomp
dec
fs
shlb
add
loop
test
pop
jnp
aad
movsl
lret
fisubl
sbb
popa
out
mov
mov
popf
das
mov
jmp
push
mov
es
leave
or
test
dec
je
pop
add
cmpsl
clc
add
aad
adc
adc
aaa
dec
std
inc
push
pop
int3
adc
jne
gs
mov
fsubl
or
out
push
aad
cwtl
sub
rcll
aam
aad
sub
rcr
xchg
mov
mov
sbb
lahf
mov
mov
inc
jbe
lods
ret
hlt
or
data16
inc
xor
adc
inc
jmp
cmp
adc
push
insl
sti
mov
insl
mov
mov
stc
arpl
inc
and
and
shlb
sub
add
lahf
popf
test
les
mov
leave
dec
aad
repz
lods
popf
out
cmp
sbb
jae
cld
mov
mov
aad
xchg
dec
inc
xchg
aas
cltd
add
fxch
sub
add
mov
cmp
pop
ljmp
icebp
lahf
mov
icebp
ja
incb
call
dec
mov
adc
mull
cltd
nop
mov
adc
in
arpl
sbb
enter
cmp
and
imul
mov
incb
call
lcall
cmp
inc
fwait
xchg
jnp
aam
mov
and
xorl
lret
into
mov
in
adc
cli
inc
icebp
add
fdiv
fxch
dec
mov
ret
xor
aad
push
push
addr16
add
cmp
jne
repz
fnstcw
inc
ja
js
enter
loopne
push
in
lret
sbb
fidivs
cmp
or
call
mov
push
popa
sbb
popa
mov
sti
pusha
cwtl
scas
mov
jae
leave
pop
sub
ss
jae
sbb
jbe
inc
mov
push
insb
pop
cmc
sbb
mov
in
scas
dec
enter
push
ss
fistpl
cli
push
or
sub
mov
popa
add
push
shrl
pusha
mov
insb
or
xor
nop
mov
cwtl
pop
xchg
scas
ds
xor
jbe
addr16
dec
sbb
xchg
scas
vcmpps
mov
pop
pop
dec
jp
addl
and
jne
sub
xchg
je
jg
inc
call
sahf
push
inc
aas
stc
iret
pop
clc
mov
stos
adc
jge
hlt
jecxz
jp
loop
add
mov
mov
mov
ror
mov
addr16
sub
pop
xchg
movsb
mov
and
mov
mov
xchg
push
cld
in
xor
imul
push
pushf
ret
sti
lods
sub
xchg
jns
sar
or
push
in
popf
xchg
insl
rcr
mov
fisubl
cmpsl
mov
mov
and
mov
mov
mov
dec
int3
ljmp
push
xchg
xchg
pop
push
xchg
arpl
push
pop
leave
jae
pusha
lcall
mov
scas
dec
push
shr
out
cmp
sarl
mov
js
aas
in
pop
enter
out
out
mov
subl
imul
jno
outsl
mov
or
es
repnz
out
rclb
xchg
pop
xor
push
push
lcall
mov
adc
jge
pop
sti
mov
jp
movsb
repz
xor
je
sbb
xor
call
cltd
jne
rorb
xchg
dec
les
imul
les
lret
out
sbb
cmp
adc
fbstp
out
out
push
lret
xchg
inc
push
inc
push
and
cwtl
jbe
imul
cmp
push
rcl
push
mov
inc
notb
ret
iret
xor
inc
push
leave
pusha
stos
cmp
dec
insb
jae
xor
jecxz
mov
mov
fmul
repz
sub
popa
sbb
mov
movsl
xchg
inc
mov
sbb
pop
test
xchg
inc
mov
enter
nop
push
inc
lods
sbb
jl
add
xchg
cmpb
jb
mov
push
adc
cmc
pop
xor
fmull
adc
out
repz
pop
sbb
test
or
mov
test
mov
je
ret
jl
sbb
imul
stc
add
sub
lea
cmpl
push
in
push
es
call
jle
out
out
lods
push
sarb
inc
mov
dec
jmp
out
jo
and
jge
sbb
mov
fdivrl
jae
out
fcomp
lret
jns
add
icebp
cmpsb
dec
cmc
mull
push
pop
xchg
pushf
aaa
jbe
jbe
mov
or
repz
sti
xchg
enter
push
arpl
fcoml
jl
in
mov
xchg
mov
inc
sbb
mov
lahf
add
jns
aaa
fistps
mov
leave
xor
pop
mov
fisubl
scas
fdivl
das
push
arpl
and
mov
jge
out
fs
dec
pusha
insl
and
add
insb
daa
or
sbb
pop
out
ds
movsl
cs
sbb
mov
cmp
ficoml
sbb
jb
out
fwait
dec
adc
rcl
movsb
push
mov
movsl
push
jno
pop
cmpl
and
add
pop
cmpsl
andl
iret
push
push
xlat
insl
push
shl
lods
push
jg
cs
push
adc
jnp
test
loope
aas
sub
fldt
scas
pushf
pop
cmp
cmp
test
mov
aas
jp
jecxz
inc
xor
fistpl
loope
add
jl
mov
sbb
stc
push
outsl
int3
es
mov
mov
xor
bound
mov
lods
gs
xor
push
mov
mov
ljmp
test
push
jle
add
addl
pop
mov
and
outsb
jle
or
adc
jns
fs
es
pop
jnp
pusha
mov
and
lea
cli
lock
popa
ljmp
pusha
ds
add
sahf
pop
push
mov
pop
sub
cmp
scas
jnp
stos
lods
adc
cmp
jno
vmovlpd
jecxz
xchg
inc
pop
push
cmpsb
xchg
fistpll
mov
push
cltd
gs
inc
or
xchg
movsb
push
leave
mov
es
mov
test
in
and
sub
jns
cmpsl
int3
cmp
ja
xor
and
dec
aas
stos
idivb
out
inc
push
aam
adc
ss
jg
pop
jb
jnp
in
insl
or
stos
and
push
mov
xlat
sbb
cmp
popf
add
or
loope
jmp
test
jno
xor
push
cli
das
jno
mov
popf
and
es
out
adc
inc
roll
hlt
sbb
dec
mov
ss
sub
and
fmul
push
jle
mov
push
xchg
pop
stc
js
and
pop
push
movsb
imul
aad
lahf
xorl
cmp
mov
adc
sub
loopne
frstor
lcallw
and
leave
dec
and
adc
out
jns
sbb
or
push
pop
mov
mov
outsl
pop
pushf
add
test
pushf
insl
dec
fs
cmpsb
inc
in
or
outsb
insl
xor
add
cmc
xchg
std
mov
iret
enter
push
dec
sbb
repz
lcall
scas
push
and
outsb
adc
xor
mov
mov
mov
insb
push
scas
clc
sbb
bound
or
icebp
rolb
pop
xor
and
fs
lods
sub
inc
ss
arpl
fidivrs
loopne
aad
das
in
adc
jecxz
mov
push
push
adc
repnz
push
sub
aaa
mov
xor
or
or
cmpsb
sbb
mov
cltd
in
in
ss
pop
sub
lea
cmp
xchg
idivb
pop
rorb
iret
jmp
out
mov
sbb
or
mov
adc
arpl
push
jg
sbb
std
mov
fsubrs
cs
dec
dec
arpl
adc
cli
inc
mov
xchg
das
jp
stc
cmp
nop
sub
and
mov
icebp
sarl
or
or
push
mov
pop
fs
or
imul
push
xchg
xor
in
imul
xchg
popa
lret
mov
jae
xor
jnp
repnz
jne
arpl
jno
inc
int
cmp
pop
cmc
std
shrl
push
loopne
xor
jnp
movsb
cmpsb
mov
fcoms
fistps
scas
push
idivl
fcoml
mov
in
xchg
insb
fidivl
jmp
pop
jle
call
push
adc
rcrb
inc
cmp
stos
jl
lahf
test
loop
lds
out
or
mov
xchg
outsb
jle
imul
jae
push
int3
mov
fmuls
in
inc
xchg
imul
cmp
dec
inc
jle
mov
jl
dec
xor
cltd
imul
in
cld
dec
xor
frstor
fsubr
jb
in
jmp
dec
andb
add
or
outsb
insb
ja
shr
lcall
inc
rcll
nop
mov
xchg
movsl
lods
je
cld
dec
pop
and
pop
jl
int
xchg
inc
repz
xor
insb
pusha
out
jo
cmc
ljmp
pop
add
es
mov
test
cli
add
push
dec
cltd
or
stc
fildll
insl
xor
xchg
pop
or
sbb
and
test
jae
das
mov
sub
jnp
cs
movsb
jno
jnp
inc
xchg
cmp
insb
aas
sub
test
add
ljmp
mov
fwait
mov
cmp
in
orb
sbb
clc
jno
adc
lcall
call
push
adc
or
fsubp
inc
add
xor
dec
adc
jge
jno
adc
divl
jp
mov
jnp
and
repnz
mov
sbb
cmp
mov
loop
stc
pop
mov
dec
pop
jnp
arpl
fldt
sbb
mov
inc
push
xor
popa
out
movsl
lret
add
shlb
pop
pushf
pop
xchg
lods
cld
repz
inc
dec
pushl
jg
popf
hlt
jl
in
data16
dec
jo
push
hlt
pop
data16
add
je
inc
or
xlat
push
mov
test
ja
in
or
push
dec
jge
sub
xchg
mov
aas
dec
push
push
aas
jge
fcoms
ja
fcomip
cmpsb
cmp
xchg
sahf
pop
pop
mov
and
mov
mov
jge
cmc
loope
fidivrl
sar
dec
and
jnp
fs
xlat
lds
out
testl
scas
mov
jns
add
pop
vpsubb
fistl
into
negl
cmp
sbb
jmp
imul
mov
cmp
mov
pop
test
push
xorl
mov
sbb
mov
ja
pushf
jae
cwtl
das
stos
and
rcrl
sub
jle
add
ljmp
mov
mov
xchg
and
cld
mov
inc
les
xor
push
push
and
stc
dec
push
cmpsb
cmpsl
pop
cmpsb
test
aad
gs
sbb
sbb
fistl
rolb
mov
dec
or
test
cs
nop
mov
mov
cmp
std
cmpb
test
cmp
dec
xchg
adc
dec
pop
movsb
add
cmp
loop
sbb
imul
mov
cmp
sarb
fimuls
mov
xlat
cmp
xchg
std
cmp
js
push
stc
orb
iret
jl
into
sbb
push
xor
mov
icebp
inc
inc
cs
cmp
sub
int
fidivrs
mov
push
orl
pop
inc
daa
adc
popf
js
lret
adc
or
setnp
scas
popa
mov
pop
lock
or
nop
fcoms
inc
in
inc
gs
daa
lods
leave
cltd
arpl
jp
dec
jge
jo
loopne
or
mov
xchg
mov
inc
push
jmp
cmc
dec
sbb
and
test
outsb
push
daa
inc
imul
push
js
leave
in
rcrb
jg
lcall
in
aam
clc
daa
psllw
xor
lds
call
mov
or
inc
nop
js
movsb
xor
mov
and
addr16
ljmp
xor
outsl
mov
fisttpll
dec
je
or
and
ret
sbb
ja
divb
out
or
pusha
cmp
lret
mov
pop
add
xor
hlt
int
rol
jmp
ja
int
leave
fidivrs
mov
lret
aas
mov
mov
rol
sbb
lgs
xchg
ss
push
cwtl
fbstp
loopne
test
push
jl
cmp
inc
push
mov
sti
mov
xor
sbb
push
cmc
mov
jle
mov
rclb
mov
std
dec
xchg
sahf
stos
stos
dec
popf
stc
xchg
mov
int3
call
stc
faddl
cmp
fidivrl
call
dec
inc
dec
fisubl
or
xor
push
inc
pop
jns
daa
cmp
outsb
pop
aad
out
loope
ror
adc
inc
jp
andb
dec
insb
mov
mov
xchg
push
inc
data16
rcrb
movsb
pop
mov
stos
out
int3
mov
out
push
mov
movsb
inc
out
popl
or
lock
adc
mov
mov
pop
or
sti
sbb
in
xchg
stc
mov
adc
lahf
aad
xor
movb
xlat
cmp
adc
mov
pop
ja
xchg
add
and
mov
lods
sub
jb
dec
cmp
pop
fdivrp
mov
sbb
xchg
outsl
sbb
pop
jl
pop
xchg
inc
stc
loop
loop
inc
pop
test
fmuls
mov
ljmp
jns
jle
pusha
scas
push
jns
lret
adc
and
hlt
xor
jbe
je
xchg
dec
popa
lahf
mov
inc
clc
sbb
leave
out
pop
jne
ret
mov
push
enter
ds
fwait
lret
xchg
sbb
push
cltd
sub
arpl
push
aam
mov
negl
aad
xor
pop
aad
pushf
dec
xchg
popa
fnsave
push
mov
outsl
ret
inc
sbb
mov
push
sbb
pop
add
cmp
sub
ss
popf
and
xchg
stos
inc
cmp
out
fisttpll
add
ss
mov
bound
pop
or
sahf
jne
xchg
xchg
fs
cmp
sar
lcall
pop
in
stos
jp
dec
pop
and
iret
push
in
xchg
jbe
popf
jge
out
adc
mov
add
jp
iret
dec
pop
or
mov
pusha
cld
or
test
mov
outsb
arpl
popa
adc
out
pusha
xchg
leave
fwait
mov
repz
pop
xor
test
mov
aaa
adc
cvtdq2ps
or
notl
aas
scas
movb
mov
sbb
outsb
aam
or
dec
pop
pop
push
in
test
outsl
in
sbb
fists
mov
push
rcll
ljmp
sub
movsb
mov
xor
xlat
clc
mov
sbb
xlat
add
inc
jl
sahf
push
sub
and
lret
push
rcrb
cmp
cmpsl
js
out
imul
ret
push
pop
mov
stos
inc
push
xor
cltd
cltd
int3
mov
sub
add
adc
mov
dec
jecxz
mov
mov
inc
popf
sub
mov
inc
mov
add
xchg
push
mov
add
out
insl
push
ucomiss
ljmp
sub
in
stc
jnp
mov
movsb
enter
jp
cmp
sbb
outsl
stos
jecxz
xorb
inc
mov
into
add
adcb
pop
je
nop
jg
pop
ss
push
sbb
mov
out
jae
inc
push
ljmp
lcall
push
pop
movl
jne
sahf
scas
xchg
mov
leave
loope
adc
mov
insb
add
jl
fsts
mov
jb
or
jle
mov
sbb
movsl
jp
adc
lds
push
lret
loopne
cltd
xchg
sbb
fiadds
adc
adc
je
adc
daa
sbb
cmp
mov
xchg
add
sub
cmp
into
outsb
inc
aad
dec
sbb
cld
sbb
mov
bound
mov
adc
je
inc
ret
loopne
and
movsl
sub
jmp
gs
and
dec
lods
nop
xor
adc
cmp
xchg
xchg
push
sub
add
xchg
or
pop
push
sbb
or
mov
cmp
cmp
enter
cmpsb
cmpsl
xor
fdivrl
cmp
clc
aas
xchg
cmp
mov
xchg
divb
or
gs
fs
pusha
push
pop
xorb
shlb
inc
addr16
outsl
dec
push
push
imul
nop
aad
dec
adc
xor
add
out
fnstenv
lock
cmp
ss
insb
pop
sub
sti
xor
push
mov
push
popa
xorb
aas
push
lret
mov
xchg
fsubr
jno
rorl
ja
dec
call
jecxz
sub
jns
inc
jbe
adc
sub
xor
pop
mov
xchg
mov
test
add
sub
fldt
fwait
pop
push
enter
mov
clc
stc
pop
rorl
xor
hlt
pop
or
les
call
jmp
mov
push
outsb
cmp
lods
pusha
mov
pop
push
push
out
cltd
dec
pushf
jo
std
jns
mov
xchg
insl
jg
ret
bswap
jae
rcl
pushf
mulps
int3
mov
pushf
daa
jle
mov
call
and
jg
and
pop
fbld
insl
or
cmp
sbb
cmp
or
nop
mov
cmp
aam
mov
mov
xchg
cs
pop
iret
cmc
xchg
jbe
sub
push
jl
test
sub
push
sub
dec
xchg
sti
xchg
out
sbb
call
mov
leave
repz
sbb
and
pop
inc
arpl
mov
outsl
notrack
dec
insl
imul
cmc
add
ret
adc
mov
jns
loop
adc
int3
lods
push
scas
imul
aaa
int
sbbl
lret
aaa
push
pushf
imul
in
dec
ret
ss
callw
dec
fucomip
xchg
xchg
fidivrl
aam
push
and
xchg
xchg
jbe
jge,pn
or
fwait
js
movsb
in
idivb
popa
push
xor
sar
inc
mov
iret
xchg
es
xchg
divb
dec
sbb
add
fwait
sbb
cmp
xchg
xchg
das
daa
mov
in
roll
sub
call
dec
stc
rorb
shlb
mov
push
stc
lcall
das
pop
inc
adc
push
or
addr16
mov
mov
lret
mov
sub
test
test
call
mov
aaa
cmpl
fisubrl
mov
xor
aaa
sub
xchg
mov
jle
loopne
pop
lret
dec
inc
mov
cltd
jmp
xchg
adc
hlt
and
mov
adc
idivb
aas
mov
icebp
xor
sub
fwait
push
mov
rclb
mov
push
fwait
out
shlb
push
test
ret
jo
sbb
cwtl
test
cmp
in
aaa
scas
push
sub
pop
incb
mov
cmp
fs
jo
ret
icebp
cmp
xor
mov
out
stos
cmc
xchg
int3
push
mov
add
xchg
stos
adc
fs
lret
inc
repnz
sub
pop
xor
sbb
lods
test
nop
aad
int3
test
inc
stc
out
scas
out
and
ret
lds
in
adc
xchg
jg
inc
out
sbb
cmp
mov
jl
fcomps
std
imul
lods
jge
pop
xchg
push
pusha
lds
jg
sub
adc
mov
push
ja
cmp
int
flds
arpl
xor
push
push
dec
mov
pop
sub
loop
cld
ss
gs
cld
or
sbb
lea
mov
mov
out
and
add
jge
test
sub
dec
jns
add
pusha
aad
push
adc
insl
mov
and
push
lods
mov
loop
repnz
fldl
je
insl
lret
pop
fisttpl
les
pop
adc
pop
jp
dec
mov
cmp
cltd
mov
das
cli
addr16
fstl
add
adc
jno
mov
push
sbbb
jno
ljmp
mov
add
clc
sub
cli
sbb
aas
orb
aaa
lds
addl
jmp
jae
or
shrb
imul
pop
mov
mov
movsb
outsb
pop
jl
out
sbb
jb
cltd
pop
negb
dec
lds
xor
test
inc
xor
stos
mov
in
cmc
popa
int
lods
bsf
fnstcw
add
lds
inc
dec
ret
inc
pop
xchg
xlat
push
mov
cli
push
cmp
mov
or
xchg
fwait
add
xor
sbb
in
test
cltd
sbb
and
mov
sahf
out
jg
sbb
bound
frstor
mov
and
xchg
pop
mov
jecxz
insl
xchg
or
movsl
sbb
popf
jmp
mov
popf
push
sbb
adc
mov
lock
dec
mov
push
add
cmp
xchg
dec
in
mov
xchg
aam
mov
hlt
dec
xor
cmpsl
xor
sahf
push
fcmove
jmp
mov
aad
push
adc
repz
and
push
lret
repnz
xor
push
jnp
mov
lret
cli
imul
cmpsl
jecxz
pop
int3
call
jno
js
imull
inc
mov
daa
lsl
test
je
cs
test
push
push
and
mov
idivl
das
aad
hlt
imul
sbbb
movsl
xor
xchg
test
insl
adc
popl
insl
xor
arpl
adc
jae
xchg
mov
xor
stc
inc
sub
mov
aam
mov
in
pop
xchg
add
popa
dec
addr16
cmp
cmp
xor
and
out
das
or
sub
mov
sub
repnz
out
cmp
mov
jbe
aad
adc
mov
stc
cmp
filds
cmp
mov
in
xlat
mov
sbb
inc
push
xchg
or
shll
fnstenv
lock
push
pop
stos
xor
add
outsb
sbb
pop
fbstp
dec
mov
add
movsb
loope
mov
out
push
or
jp
out
and
insb
insb
jp
push
in
jno
mov
icebp
fldl
cld
jb
jg
insb
addr16
or
jae
dec
negb
xchg
add
lahf
sub
cli
addb
ljmp
mov
adc
inc
in
cld
sub
xchg
sub
inc
or
imul
adc
xor
lods
shlb
push
cmp
push
pushf
divl
repnz
sahf
jge
rcll
dec
push
dec
ret
aaa
xchg
mov
mov
fcmovnu
sub
fs
xor
jecxz
pusha
loopne
aad
std
leave
mov
outsb
mov
lods
cmp
mov
add
andb
lahf
call
sbb
push
mov
js
jnp
xchg
stc
and
or
std
adc
sbb
in
mov
outsb
mov
lods
icebp
push
cli
xchg
sbb
daa
cld
and
sbb
mov
jo
push
movsb
xchg
lret
in
push
loop
in
lret
stos
out
jmp
inc
jl
outsl
mov
and
xor
je
jbe
shrb
jmp
mov
shr
sbb
dec
xor
mov
dec
shlb
lods
icebp
arpl
or
cmpsl
stc
test
lock
pusha
out
ljmp
mov
push
ss
pop
push
test
nop
scas
stos
aaa
push
int3
mov
out
lcall
loopne
push
mov
aad
inc
stos
ds
mov
sbb
sahf
jle
and
cmc
cltd
dec
aam
ja
cmp
jle
call
lret
mov
mov
fcmovbe
add
dec
cmp
fsts
jns
xchg
shr
and
sbb
mov
lcall
or
push
adcb
or
fisubs
scas
rolb
mov
dec
sub
xchg
movsb
divb
inc
and
dec
clc
fadds
xchg
cmpb
pop
loopne
int
xchg
ret
mov
and
sub
arpl
ja
loop
adc
push
int
mov
adc
adc
pop
out
mov
leave
pop
cmp
cmp
push
xor
lods
negl
ret
push
ljmp
les
xlat
loopne
or
pop
xor
adc
xor
cwtl
mov
sbb
push
pop
adc
xchg
fs
stos
jle
idiv
arpl
fisubl
ja
lods
inc
cmp
jno
test
ljmp
les
pop
mov
jge
std
int3
sahf
jge
mov
inc
out
adc
in
movsb
scas
xchg
call
xchg
cmc
xor
add
testl
lahf
sub
icebp
cmp
jns
into
mov
out
pop
test
mov
pusha
les
out
dec
xlat
mov
fcmovne
outsl
inc
mov
mov
dec
ret
sbb
push
pushl
mov
jge
adc
inc
adc
int3
aas
sbb
daa
mov
mov
outsb
and
or
mov
push
mov
out
cmpl
fs
lcall
arpl
mov
lds
mov
pop
pushf
jae
push
and
and
loopne
xor
js
aas
xor
add
fistl
add
xchg
js
mov
std
cli
lret
lcall
cmc
les
push
popf
push
adc
mov
inc
loope
ljmp
sarb
xor
dec
sub
in
sti
sbb
clc
leave
inc
nop
daa
lret
push
cld
pop
add
icebp
xchg
ds
inc
in
jno
aas
cmp
int3
gs
hlt
sbb
pop
aas
dec
xor
jae
xchg
stos
outsb
xchg
into
fdiv
inc
mov
adc
and
mov
dec
jp
push
xor
lock
jns
div
push
sbb
dec
and
mov
push
mov
dec
jge
adc
cld
mov
adc
test
jmp
mov
lahf
sub
jae
push
adc
pop
mov
dec
and
cmp
sub
rolb
jbe
pop
nop
mov
ja
push
sti
jo
adc
mov
xor
xchg
sbb
loope
jecxz
sub
cmp
popa
lock
or
rorb
mov
jo
cli
loope
jne
push
fwait
popa
int3
loopne
or
cmpsb
jnp
daa
cwtl
subl
mov
mov
out
or
or
ja
stc
sbb
dec
dec
cmc
or
test
dec
xchg
repz
fwait
xor
push
xchg
or
decl
mov
cltd
and
popa
lods
pop
lock
in
xchg
incl
cmp
jle
les
push
xlat
push
fadds
jl
xchg
xorl
imulb
inc
cmp
jnp
bound
mov
rcrb
jns
stc
adc
pop
push
jns
cmp
fcoml
pop
adc
stos
fnsave
and
jnp
outsb
sbb
fnstcw
sarl
or
jp
jge
addr16
fwait
mov
cs
pop
stc
hlt
dec
rorl
dec
jecxz
sahf
ss
pusha
xchg
sub
sbb
and
cmp
jo
adc
aas
cli
push
ds
mov
xor
rclb
add
out
sbb
jmp
xchg
jecxz
decl
mov
loope
icebp
dec
icebp
inc
lods
sbb
out
mov
mov
mov
mov
lcall
mov
mov
add
test
leave
sahf
andb
rol
cld
arpl
aam
mov
ret
popa
imul
lea
mov
xlat
mov
mov
jg
hlt
inc
mov
stc
push
je
popf
int3
sub
add
adc
add
mov
xchg
pop
add
jbe
push
dec
arpl
sti
sub
pushf
stos
pop
push
mov
mov
test
pop
pop
jbe
mov
push
sahf
cmp
dec
test
std
jb
ljmp
lods
push
add
inc
pop
pcmpeqw
stos
repnz
and
cwtl
cmpsb
fcmove
out
lahf
out
in
repnz
sub
add
sbb
xor
ljmp
push
dec
mov
jns
adc
dec
jbe
pop
mov
dec
mov
or
jecxz
dec
sbb
xchg
test
in
outsb
cmp
test
mov
mov
fidivrs
lret
dec
enter
andl
notl
repnz
pushf
mov
mov
out
inc
data16
pop
sub
sub
test
or
inc
inc
jo
add
repnz
into
stc
inc
int3
push
pop
jbe
mov
push
jns
cmpsl
subb
dec
adc
pop
cld
mov
cmpsb
sbb
aad
xchg
sub
inc
jge
mov
xchg
out
movsb
fists
xor
ja
and
adc
ret
ret
push
test
mov
lret
push
sahf
sub
push
jb
mov
adc
lods
test
adc
xchg
or
imul
mov
xchg
dec
or
bound
lock
dec
mov
subb
adc
stos
test
jb
xor
lret
call
js
stos
fs
arpl
movsl
fidivrl
fsubrs
loopne
mov
xchg
nop
les
imull
imul
sbb
cltd
or
in
add
jo
rcrb
inc
movsl
dec
xor
jns
pop
or
sbb
mov
es
dec
xchg
pop
cmpl
mov
sbb
clc
pop
push
es
or
leave
aas
sub
jns
add
bound
lahf
sbb
lret
popf
outsb
ja
inc
xor
mov
ljmp
pushf
jmp
ror
fwait
add
xchg
pusha
rcr
mov
sbb
cmp
xchg
xlat
lret
dec
jbe
nop
add
xchg
gs
push
int3
xchg
mov
nop
mov
pop
xchg
xchg
mov
mov
fsincos
dec
adc
ljmp
adc
outsl
aam
imul
cmp
add
and
mov
dec
mov
push
loopne
fxch
push
out
xorb
test
mov
int3
add
sbb
mov
mov
dec
outsl
push
lods
xchg
out
out
imul
dec
rorb
xchg
decb
adc
push
push
xchg
lret
cmpsl
add
call
jbe
push
jno,pt
pop
and
sbb
dec
push
out
adcl
imul
movswl
out
arpl
sar
push
out
pop
pop
mov
les
push
mov
dec
jnp
pop
mov
xchg
flds
call
jmp
mov
loopne
push
movsl
mov
into
push
cld
movsl
sbb
imul
lcall
mov
sbb
test
lds
gs
insl
sub
andl
imul
sub
mov
int
dec
lods
mov
aaa
lds
lds
fists
scas
lahf
xchg
jl
sbb
int3
inc
or
fildll
call
sti
jae
xchg
cmp
cmp
cld
xchg
xchg
inc
xchg
dec
cltd
in
pop
setg
sub
inc
xor
int3
and
inc
sarb
or
push
sub
fidivl
sbb
mov
add
xchg
lcall
loope
repz
push
fstpt
mov
incl
add
dec
xchg
xchg
xor
popa
ljmp
insl
scas
fsts
xchg
sub
xchg
dec
in
idivb
movsb
inc
dec
cmpsb
adc
les
icebp
cmp
adc
dec
cmc
call
cmpsb
push
in
call
xor
lret
test
je
pop
je
and
add
gs
dec
inc
testl
call
outsl
and
rcl
mov
and
dec
rorl
aaa
std
cmp
sbb
push
out
push
test
rol
and
dec
jo
jmp
sbb
imul
pop
sub
pop
aas
jbe
lods
pop
pop
outsl
dec
ljmp
rcll
mov
and
stos
pop
or
xchg
out
push
fs
sub
lea
out
cmp
push
fnstsw
xchg
sub
in
adc
insb
aaa
leave
adc
std
mov
and
movsl
andb
xlat
and
mov
mov
mulb
mov
movsl
popf
hlt
pop
jge
arpl
addr16
pop
add
add
or
adc
inc
inc
imull
movsb
and
stos
and
shl
fnsave
cmp
pushf
xor
mov
jnp
insb
adc
pusha
je
scas
sub
jecxz
or
testl
stos
add
jg
stc
pusha
cli
daa
mov
out
mov
mov
lahf
jns
inc
arpl
cli
cmc
mov
push
clc
aaa
sbb
mov
pop
ja
daa
lods
xchg
outsl
in
push
and
repz
jmp
cmp
or
cli
jl
cmp
std
pop
cmp
enter
push
jne
pop
and
sbb
out
sub
cmp
push
mov
mov
das
ss
mov
jb
and
xlat
pushf
and
out
sub
lea
jp
inc
outsb
mov
mov
inc
pop
mov
ret
stos
push
sub
fstl
mov
xchg
push
mov
or
mov
mov
dec
fbld
nop
jg
push
jecxz
xchg
insb
paddb
adc
mov
jo
mov
inc
or
jb
mov
adc
sbb
push
pop
in
add
cmp
dec
push
inc
push
in
mov
mov
adc
xor
add
fnstsw
mov
jl
aas
ljmp
ss
adc
jnp
adc
cmp
sub
dec
push
adc
pop
push
adc
nop
add
push
or
and
in
ror
push
add
jg
push
rcrb
enter
cmpsb
jo
fsubrs
xchg
xchg
fcomps
ss
jno
cmp
and
inc
or
dec
pop
lock
sub
mov
or
cmp
push
push
sub
push
addl
jns
ret
and
mov
mov
inc
shrl
decl
push
cmp
sti
sti
xor
mov
xchg
adc
xchg
pop
jno
in
adc
add
iret
movsb
scas
enter
cs
add
or
cltd
mov
jg
pop
insb
add
cs
movsb
xchg
out
aas
jo
jb
mov
mov
and
pop
mov
push
loopne
in
jbe
xlat
cmc
pop
inc
inc
push
fisubl
fisubl
xlat
mov
fildl
xor
dec
scas
mov
out
lret
push
std
jne
popf
aas
sub
inc
pop
icebp
sbb
pop
mov
lcall
sbb
movsb
adc
pop
xor
lret
push
cli
xchg
pop
rcrl
je
test
ds
shrl
aas
popf
mov
inc
mov
movsl
int
je
push
sarb
hlt
aas
sarl
and
xchg
mov
xchg
repnz
hlt
out
mov
iret
bound
pop
mov
cmp
addr16
pop
push
push
or
mov
ret
int3
xor
pusha
push
jne
inc
or
ss
and
out
in
cltd
mov
push
clc
std
fldcw
fildl
dec
cmpsl
fmull
mov
data16
push
fnsave
xchg
jb
push
xchg
inc
scas
push
jle
fstp
cmp
or
mov
jg
lcall
push
and
push
pop
and
cmp
rorb
adc
lock
sbb
movsb
xchg
notb
scas
clc
mov
movsl
imull
test
popa
pop
sbb
data16
lods
bound
mov
or
inc
adc
pop
inc
or
aam
les
insl
testl
call
scas
xor
mov
cmc
jo
cmpb
mov
sub
icebp
cli
lea
icebp
or
and
cmpsb
lods
es
push
sbbl
jecxz
dec
imul
push
inc
push
push
and
sub
cwtl
sbb
inc
pop
jne
pop
jge
enter
or
lcall
dec
cli
shrb
mov
inc
fdivrl
test
loop
lods
loope
inc
xor
mulps
xor
mov
jecxz
cmp
push
fidivrl
stos
adc
inc
nop
push
cmpsl
push
mov
jecxz
pusha
std
dec
sub
icebp
pop
pop
ret
cltd
mov
in
dec
in
fstpl
jle
lods
addb
movsb
mov
repz
das
outsl
iret
mov
cmp
add
ret
sbb
ret
mov
repnz
inc
mov
loope
mov
pusha
iret
cmp
dec
adc
fcoml
jp
xchg
loope
dec
sub
in
add
mov
pop
fcompl
cmp
sub
mov
int3
dec
pop
leave
xchg
mov
jo
cmc
imul
sub
lcall
adc
sub
push
andl
in
lret
sub
mov
sbb
adc
add
call
dec
popa
mov
jl
cmc
lret
loope
xchg
lcall
mov
and
mov
mov
mov
scas
lds
jle
mov
cmp
xor
cmpb
pop
cs
addr16
sub
cmp
sti
dec
dec
or
cvttps2pi
test
sub
std
lahf
out
xchg
push
xchg
loopne
pop
add
cli
pop
out
lods
jge
jne
addr16
popf
int3
mov
sub
bound
stos
and
adc
or
xchg
mov
test
sub
shlb
into
ror
xchg
sbb
xchg
inc
jmp
imul
mov
cmp
fdivrp
sbb
test
jl
cwtl
mov
and
in
pop
cmp
in
ficoml
iret
jne
sahf
cwtl
in
or
push
and
push
mov
daa
scas
jmp
es
subb
xchg
add
movsb
cltd
stc
dec
cmpsb
addr16
ss
in
repz
xchg
xchg
cwtl
into
fistps
mov
mov
ja
jns
in
in
mov
inc
ret
sub
into
adc
outsb
mov
idivb
not
sbb
icebp
dec
test
inc
xchg
ret
dec
iret
add
std
test
dec
aas
jnp
popf
ficoms
sbb
xor
test
nop
inc
xchg
lea
repnz
inc
adc
sbb
sub
imul
xchg
insb
stos
jo
jo
inc
cmp
testl
push
insb
pop
in
in
sti
fidivrl
imul
pop
mov
add
in
inc
enter
scas
adcb
stc
mov
leave
das
enter
dec
and
out
jl
push
lea
outsb
sub
adc
sbb
mov
lahf
ja
fcomi
push
fdiv
bound
adc
sarl
les
mov
subl
in
or
orl
jo
scas
sahf
cmpsl
cltd
or
mov
mulps
test
test
add
fidivrl
mov
jne
cmpb
pop
out
int3
sbb
dec
mov
or
jg
mov
mov
xchg
adc
loopne
push
dec
enter
fldenv
jns
fsts
fbstp
push
sub
das
mov
xchg
mov
fstl
xchg
pop
nop
push
std
pop
mov
cltd
stos
test
mov
pusha
xchg
adc
mov
xchg
and
loop
add
repz
xchg
dec
or
jp
adc
cmp
mov
mov
rol
iret
out
vpsrlq
gs
add
negl
sub
or
jp
nop
scas
mov
mov
add
push
stc
xchg
aad
movsl
jg
xor
mov
mov
dec
imul
jg
lds
iret
cltd
cltd
fisttps
rcr
mov
loopne
push
insb
xchg
lock
sub
xor
sbb
pop
outsl
es
jle
sar
lods
clc
mov
shr
aam
mov
arpl
insl
push
push
push
sub
rep
cli
cmpsb
mov
mov
shll
lret
push
flds
add
mov
xor
out
jl
out
inc
inc
aaa
icebp
sub
jns,pn
cld
and
test
jnp
sub
mov
xorl
repz
daa
test
jns
mov
push
bound
ds
mov
mov
adc
icebp
mov
gs
cwtl
push
aam
xlat
lea
mov
pop
mov
sahf
jne
mov
mov
sbb
test
mov
push
xchg
arpl
stos
das
out
mov
jge
sarb
xlat
out
or
xor
sub
cwtl
pop
inc
mov
loopne
and
mov
push
lods
shll
cmp
fcmove
scas
int
dec
call
insl
adc
xchg
xor
test
lea
xchg
mov
cmpb
ja
sbb
and
stos
sbb
repz
shll
mov
jns
rcrb
dec
jge
sbb
jno
lret
inc
sbb
xor
cmpsl
add
mov
loope
cmpsb
mov
xlat
xor
mov
push
xor
roll
mov
pusha
sbb
fcmovnbe
inc
popf
adc
rorb
pop
sbb
test
icebp
fcompl
and
shll
mov
fdivrs
ss
ja
pop
nop
inc
mov
mov
ja
js
xchg
jle
pop
arpl
push
add
adc
int3
cmp
xor
xlat
mov
mov
xor
lock
jbe
jl
stos
cmp
cmp
shlb
addr16
sbb
jmp
insb
push
add
push
mov
add
mov
cmp
out
mov
js
pop
shll
xchg
mov
sbb
out
sbb
clc
lock
fcmovnu
das
add
or
in
lret
jl
repnz
and
pop
adc
push
sbb
or
movsb
scas
lret
lds
cmp
lea
outsb
in
cmp
mov
dec
add
lcall
in
inc
mov
and
out
arpl
push
push
rcr
cli
inc
push
fdivrl
sub
ret
mov
add
cli
pop
rclb
push
dec
fisubrs
pop
loopnew
push
or
jmp
mov
adc
ds
call
jnp
jmp
testb
int
loopne
int3
mov
mov
add
xor
push
adc
incl
and
cwtl
iret
sbb
sahf
sbb
inc
xor
sti
es
shl
les
mov
dec
test
dec
pushf
pop
cmp
pushf
and
shlb
xchg
push
daa
add
mov
mov
mov
xchg
mov
mov
loope
and
push
xchg
jo
push
fs
aad
add
mov
imul
orb
mov
movl
gs
imul
sub
jge
sar
int
mov
ja
fwait
ret
loop
jp
int
push
aad
mov
lock
dec
xchg
or
xchg
pop
xor
cs
mov
or
mov
pop
cs
jmp
rorl
iret
lahf
call
jo
push
adc
pop
int3
sbb
push
push
push
mov
cmp
loope
mov
test
lock
mov
out
xchg
dec
test
lahf
scas
daa
sub
pop
push
sbb
push
out
pop
ds
fldl
inc
mov
dec
lock
aaa
fs
cmp
xchg
sahf
into
out
call
inc
outsb
movsl
and
add
lea
les
orl
pop
xchg
enter
xchg
sub
ret
nop
roll
push
mov
mov
insb
mov
int3
add
into
comiss
push
push
into
shl
mov
or
mov
in
icebp
fcompl
stos
dec
jbe
cmp
cmovle
fwait
push
inc
lcall
cmpsl
mov
pop
and
mov
fscale
filds
xchg
jo
enter
pop
pop
inc
inc
std
pop
adc
xor
sti
lea
pop
mov
push
add
dec
in
mov
addr16
pop
add
mov
or
jl
or
pushl
mov
xor
jle
sub
loop
test
lods
jg
sbb
in
jno
fnstsw
pop
and
cli
xor
pop
or
adc
imul
add
and
cmp
push
in
xor
jp
sbb
pop
imul
adc
pop
jecxz
aas
cli
or
jecxz
cld
sub
lcall
loop
or
outsb
stos
enter
cli
inc
and
leave
jnp
lret
ja
mov
pop
xchg
nop
cmp
jbe
movsl
jmp
or
pop
std
mov
fdiv
pop
lock
cmp
cmp
ds
pusha
nop
xor
shlb
sub
dec
jg
dec
js
push
mov
mov
or
shrl
mov
lods
mov
das
test
fdivrl
xbegin
lock
adc
xchg
mov
ret
pop
and
inc
sbb
aaa
cld
cmpsb
scas
shrl
mov
push
fistpl
pop
dec
push
dec
cmp
xchg
mov
and
sahf
inc
wrmsr
mov
inc
jl
lds
jmp
push
cmp
outsl
cmp
or
and
aam
int3
scas
in
jbe
xor
in
stc
cld
jge
daa
inc
das
sahf
and
mov
cltd
lock
in
es
inc
aas
xchg
movsl
mov
xchg
iret
push
mov
xorl
or
dec
sti
cmp
mov
inc
jmp
lret
scas
ret
adc
pushf
sbb
sbb
jg
out
jae
adcb
cmp
mov
shrl
sbb
pop
shrl
mov
pushf
push
lret
jge
adc
sahf
xor
jbe
mov
rcl
pushf
loop
push
outsb
push
test
sahf
and
popa
pop
and
cmpsl
sarb
jecxz
les
adc
fnstenv
xchg
xor
add
mov
pop
push
sar
mov
dec
inc
into
jbe
repz
in
xchg
mov
add
stos
fdivl
xchg
insl
jge
jl
pusha
adc
fists
test
in
dec
pop
pop
or
ds
cmp
iret
or
aad
add
or
xchg
mov
movsl
into
inc
mov
xchg
cli
pop
mov
mov
imul
rcrl
pop
xor
sub
into
push
add
cmpl
cmp
js
into
int
hlt
mov
inc
xchg
ds
aas
pop
and
iret
scas
push
mov
fsubl
dec
pop
mov
cmp
and
and
fdivrl
mov
pop
sub
mov
or
jmp
fwait
orb
enter
addr16
js
movsl
sub
push
ret
pop
ljmp
pop
push
int3
mov
add
cmp
push
jmp
jmp
mov
mov
push
jg
lock
outsb
xor
stos
cwtl
nop
pop
mov
shl
cmp
mov
pushf
pop
pop
and
or
out
dec
rcrb
cwtl
movsb
and
stos
lods
mov
cmp
fs
ds
outsl
and
out
push
push
fidivrs
mov
push
push
cltd
pop
mov
dec
jmp
push
push
mov
mov
xchg
lcall
or
test
sbb
test
aas
pop
cmp
xchg
lds
xor
xchg
mov
dec
mov
rcll
and
fiaddl
and
cltd
loop
or
pop
jnp
push
out
mov
out
bnd
mov
mov
test
mov
xchg
mov
ficoml
xchg
imul
cmp
int
xor
testl
jg
adc
in
pop
mov
fistl
push
fwait
es
sub
push
pop
pop
rorb
xor
mov
movsl
stos
dec
iret
test
lret
push
movsb
cmpsb
push
es
add
es
sbb
out
les
pop
mov
pusha
into
fldenv
mov
cmp
ss
add
sbb
mov
enter
ja
adc
jge
adc
cmpb
out
jo
mov
inc
int3
aaa
add
out
mov
pushf
xor
rclb
jae
mov
cltd
scas
push
xor
inc
push
mov
repz
xchg
or
adc
testl
sbb
jmp
test
jecxz
push
add
mov
popa
add
dec
out
sub
xor
add
addr16
insb
andb
xor
sbb
out
jmp
fnstcw
fldenv
test
arpl
push
daa
notb
push
inc
pop
sti
jns
enter
enter
adcl
imul
xlat
adc
lds
push
pop
imul
inc
sbb
shll
popa
push
pop
imul
push
sub
dec
pop
mov
push
push
es
leave
mov
decb
fdivr
jge
push
sbb
cmc
mov
dec
push
fwait
push
int3
or
adc
arpl
enter
jo
pop
ja
or
ss
sub
mov
mov
scas
pop
or
dec
dec
lret
movsl
cld
lods
sbb
mov
pop
outsl
mov
addb
mov
mov
jbe
pop
mov
xchg
xchg
push
push
adc
mov
push
out
call
insb
cmp
filds
sbb
fldt
jge
gs
mov
add
mov
in
push
insb
mov
add
jle
xor
mov
dec
outsb
repz
mov
sbb
insb
sub
scas
sbb
aad
mov
push
pop
jns
dec
std
adc
outsl
sbb
ret
jns
pop
stos
and
push
fs
call
mov
lret
sub
xor
pop
lahf
cmc
les
gs
sar
mov
mov
scas
cmp
les
adc
sub
shrb
dec
pop
adc
pop
pushf
cmp
call
mov
or
loopne
lret
das
and
cmp
dec
in
icebp
aam
sbb
clc
jg
jg
xor
xor
int
sti
test
mov
xchg
shlb
push
mov
out
sub
and
mov
sbb
ss
negb
loope
push
insl
push
outsb
jg
mov
adc
sbb
lret
inc
mov
mov
jmp
add
dec
outsl
lea
aad
mov
sbb
bnd
jmp
push
mov
pop
adc
hlt
xor
add
xchg
dec
inc
or
jle
mov
dec
adc
mov
nop
adc
xchg
pop
sbb
iret
ljmp
daa
push
add
test
add
push
and
faddl
cmp
icebp
ja
shll
cmp
cmpsl
adc
xchg
sbb
and
lcall
adc
int
bound
lret
lods
neg
cmp
jb
les
mul
addr16
lret
mov
rorl
jnp
cmpsl
lea
lods
pop
inc
adc
sub
and
inc
loopne
call
std
xor
bound
jecxz
mov
mov
lock
jne
and
scas
mov
xlat
xor
in
lret
es
arpl
sbb
test
je
and
push
int
repnz
sti
xchg
call
test
sub
enter
pop
clc
loop
imulb
ds
je
in
fisubs
mov
pop
add
popa
roll
in
xor
pop
lea
jmp
punpcklbw
xchg
into
xor
inc
mov
ja
pusha
xchg
test
push
cmpsb
daa
loop
sub
ret
aaa
rcrl
sub
lret
nop
orl
adc
repz
lds
mov
jne
add
into
stos
ljmp
xor
fcoms
sbb
shlb
mov
mov
sub
orb
ficoml
outsl
push
mov
pop
popf
push
cmp
xchg
insb
cmp
add
cld
or
or
lret
and
aaa
pop
daa
inc
shl
sub
jb
lock
mov
add
jne
testl
push
push
and
cmp
js
sbb
cmp
mov
fs
jecxz
subb
mov
add
std
xor
outsl
mov
pop
fidivs
leave
les
fcmovnb
push
dec
lahf
out
repz
dec
mov
mov
aam
dec
inc
adc
inc
sbb
adc
and
stc
push
std
decl
jnp
loopne
lods
dec
mov
or
ret
jno
je
sub
fidivrs
pop
mov
jmp
or
int
push
push
test
lods
mov
iret
fisubl
xchg
loope
xlat
dec
jb
cld
cmpsl
pop
dec
push
xor
sbb
push
outsl
fstp
pop
call
clc
enter
cmp
icebp
jns
add
fst
bound
jg
cmp
mov
mov
mov
jae
push
int
aad
loope
popa
push
gs
out
adc
sarb
xor
and
pop
dec
ss
sahf
rorl
lcall
cmp
clc
xor
dec
clc
filds
push
ret
test
int3
lret
out
jno
pop
mov
js
divl
int
pop
repnz
rcl
inc
mov
jge
lcall
mov
ss
scas
pop
add
jle
adcb
push
add
jl
jl
or
dec
out
mov
add
cmp
ss
inc
xchg
mov
jecxz
mov
cwtl
pop
cld
xchg
dec
mov
mov
push
adc
shl
lods
ds
xchg
mov
test
mov
inc
test
mov
ss
out
pop
test
aam
mov
rcl
jb
inc
cmpsl
pop
cmpsl
xchg
jl
sub
jns
dec
test
fisttps
out
adcb
add
push
repnz
mov
mov
pusha
mov
lret
pop
nop
mov
test
lods
mov
pop
pop
inc
inc
cmp
arpl
data16
cmpsl
in
arpl
xchg
cli
test
cs
pop
pop
pop
aam
mov
sub
mov
jl
sub
xor
jg
add
sub
xor
mov
dec
mov
push
jns
das
inc
int
imul
sbb
inc
xorl
jle
cmp
jo
in
adc
and
lds
pop
mov
xor
mov
or
lret
enter
push
pushl
push
push
adc
fwait
push
xchg
dec
add
mov
sbb
add
fimuls
popa
das
fs
adc
cmp
mov
xchg
pop
dec
xchg
sarb
pop
subb
shrb
mov
mov
dec
movsb
xchg
inc
sbb
sbb
adc
push
sarl
fdivl
mov
jns
sbb
arpl
cmp
xchg
rorl
hlt
xor
idivb
lret
faddl
sahf
mov
jmp
mov
jnp
sub
add
xor
push
dec
push
lods
and
lret
mov
adc
dec
push
jnp
rolb
test
mov
jnp
in
xor
xchg
enter
enter
and
push
lret
fs
inc
cltd
popl
pop
or
jmp
push
push
sahf
and
push
ret
push
push
aaa
lock
pop
and
fnstenv
add
imul
shrb
jbe
shl
outsb
add
sub
inc
push
xchg
and
dec
add
push
outsb
outsl
pop
push
push
xlat
les
sub
jno
popf
push
jmp
iret
fbld
sarb
sub
dec
add
daa
sbb
sbb
cltd
inc
lret
sbb
fcmovbe
mul
stc
es
mov
stos
test
or
in
js
adc
pop
add
jmp
pop
outsb
icebp
mov
std
inc
push
xor
addl
jge
out
xor
fsubrl
cwtl
sub
mov
adc
insb
dec
rcrl
and
adc
mov
repnz
fs
add
cmpsb
shl
inc
dec
loopne
scas
cltd
push
xor
mov
cmp
scas
push
gs
push
mov
and
fbld
mov
inc
sbb
test
or
mov
sarl
pushf
ret
out
pop
jecxz
jmp
mov
jle
sub
imul
sbb
out
lahf
aas
loopne
mov
sub
xor
pop
push
and
mov
fsubrs
mov
adc
push
adc
out
out
sbb
aas
lret
les
xchg
lret
loopne
enter
mov
jg
jnp
and
scas
push
dec
jge
mov
rcr
ret
and
les
out
jmp
xchg
enter
fidivl
mov
rorl
ljmp
mov
adc
out
lds
andl
aam
into
push
daa
sbb
pop
imul
xor
jns
mov
adc
shrb
cmpsl
cwtl
rolb
cld
repnz
or
cmp
fwait
push
mov
pop
dec
lods
mov
push
testb
cld
or
fdivrs
xchg
inc
cmpsl
adc
int3
scas
in
mov
mov
mov
mov
mov
mov
imul
inc
outsb
loop
sbb
fs
imul
sbb
leave
mov
insb
addr16
ret
lahf
push
lahf
popa
jno
icebp
xchg
es
je
and
hlt
aam
jnp
inc
ljmp
leave
push
sub
ss
mov
adc
iret
sti
cmpb
mov
jg
xchg
add
push
mov
stc
sbb
and
lret
jmp
lret
test
es
xor
inc
mov
test
fucompp
test
sar
pop
inc
mov
add
enter
sbb
add
daa
pop
mov
adc
insl
push
jne
dec
movsb
testb
mov
push
adc
test
push
mov
push
ret
int3
int3
mov
sub
gs
or
int3
ret
cwtl
mov
push
mov
mov
add
mov
cltd
rorl
mov
xor
xor
push
ljmp
cld
popa
sub
dec
repnz
pop
mov
ret
outsl
in
xchg
scas
xor
adc
add
inc
loopne
or
jg
in
pop
jnp
inc
xor
in
mov
or
cli
rcll
push
bnd
mov
fnstcw
repz
imull
jecxz
mov
ror
push
push
jp
testl
iret
and
lahf
xchg
and
add
mov
shlb
scas
insl
rcl
das
and
mov
xchg
dec
pop
mul
hlt
cmc
xchg
pop
mov
lds
mov
fdivp
sub
mov
cmpsb
sub
in
xrstor
in
rcrb
mov
lock
scas
lcall
les
and
fistpl
lods
lcall
xor
pmaxsw
sub
push
jg
mov
iret
dec
push
ss
or
rcrl
in
push
lcall
and
push
mov
push
add
loope
outsl
pushf
xor
js
ss
xor
std
and
xor
mov
mov
mov
fdivl
scas
ja
or
pop
sti
or
xor
in
sbb
inc
mov
test
aaa
mov
jno
dec
je,pt
aas
bound
in
mov
cmpsb
lcall
mov
and
and
add
jge
les
mov
cmp
or
out
xchg
mulb
mov
rclb
jg
jo
sbb
fucomp
mov
or
lods
dec
lods
ret
xor
pop
fdivrs
rol
outsl
pop
or
inc
dec
pusha
cmc
sub
mov
xlat
mov
ss
or
add
xchg
xchg
xor
cmp
mov
and
xchg
lar
mov
pop
fs
pop
sbb
jne
stc
dec
adc
pushf
or
inc
add
rolb
subb
dec
incl
jecxz
test
add
insb
mov
in
xchg
inc
cmpsl
add
lahf
sahf
add
pop
movsl
xor
xor
fsubl
outsb
stos
in
fcomps
fimuls
sub
pusha
jne
and
jecxz
sbbl
jnp
aaa
dec
test
push
movsl
int3
popa
pop
mov
mov
outsb
lahf
es
cmp
out
mov
nop
xchg
xor
mov
and
popa
nop
cltd
cli
arpl
imul
stos
xchg
ja
jns
xor
rcrb
or
stc
loopne
fs
mov
mov
cmpb
push
add
sbb
rclb
jle
fistps
leave
shr
and
mulb
pop
test
ds
repnz
sub
shl
jb
and
dec
sub
inc
cli
xlat
xor
fimuls
xor
hlt
shrb
test
cmp
repz
mov
jl
and
lcall
rclb
or
sbb
stos
stos
mov
mov
mov
dec
lcall
xlat
xchg
lahf
xor
jae
inc
mov
outsl
popf
pop
sbbb
mov
shr
mov
fisubs
jg
adc
ds
out
mov
mov
or
push
or
jns
adc
mov
or
add
xchg
inc
fwait
sarl
add
dec
add
shlb
jnp
movsl
icebp
adc
jp
imull
pop
out
out
push
movsl
cmc
imul
or
repnz
adc
mov
adc
push
out
ss
fsubs
movsb
repnz
inc
ficoms
out
mov
lcall
mov
leave
xchg
and
scas
adc
mov
clc
aaa
push
adc
xor
aam
cmpsl
mov
jmp
adc
sub
sub
jl
mov
clc
jno
popf
or
out
sub
push
mov
mov
mov
dec
ret
les
jp
mov
or
add
sub
xor
and
or
or
sub
fwait
mov
sbb
movsb
xor
std
sbb
pop
lret
mov
test
cmp
test
shlb
inc
repnz
and
sub
into
add
pop
scas
pushf
inc
jmp
sti
mov
jb
shrb
lahf
popa
mov
cmpsb
sub
pop
jp
lahf
ljmp
push
shrl
rorl
adc
and
xchg
push
out
jno
pop
std
xlat
sub
cli
fidivrs
imul
mov
mov
sysret
iret
push
jo
pop
pushl
stos
aaa
jmp
loope
ret
push
test
xor
xchg
bound
or
sbb
or
sub
push
or
popa
sbb
imul
mov
jo
pop
in
jnp
pop
xor
adc
mov
std
mov
into
mov
lds
xchg
fisttps
lea
into
adc
cwtl
arpl
sub
int
nop
or
insb
repnz
cmp
movsl
insl
sbb
int3
inc
sub
in
outsb
jp
jne
shll
movsb
sub
cli
imul
fcomps
push
aam
add
nop
jae
andl
enter
sbb
fs
dec
mov
rcl
push
or
mov
mov
xor
and
or
jg
add
pop
lahf
inc
sub
xor
cmp
insl
xchg
aad
gs
sub
jmp
fwait
or
jl
sub
shrb
popf
clc
lock
lahf
lea
aam
adc
jb
loop
pop
jb
and
loopne
adc
cli
mov
cmpsb
xor
pop
iret
imulb
mov
mov
enter
xchg
sbb
dec
or
mov
div
pop
lods
hlt
xor
add
dec
mov
pop
and
pop
sarl
popf
add
pop
xor
pop
and
gs
les
lret
mov
stos
jecxz
into
adc
and
mov
adc
lock
test
mov
sbb
mov
ret
and
lods
es
and
push
pop
out
popa
pop
mov
and
mov
lods
shr
stos
adc
xor
in
pop
pop
jecxz
lcall
movl
les
xchg
pop
fisttpll
pop
pop
and
sarb
jne
jmp
mov
add
pop
mov
mov
dec
rcr
add
icebp
push
push
adc
leave
or
outsb
jp
jne
mov
and
sbb
jb
les
pop
jnp
jl
dec
jno
or
cmpsb
arpl
mov
scas
inc
dec
pushf
jmp
xor
rclb
mov
filds
mov
ret
dec
pop
or
add
and
pop
add
fs
stos
rorb
pop
enter
popa
jno
ret
popf
mov
xchg
clc
pop
jb
sub
sbb
mov
xchg
inc
inc
cltd
insl
stos
cmp
sbb
lcall
sbb
push
sub
jl
ret
mov
adc
cmp
fisubl
aaa
fyl2x
cmp
out
or
out
sbb
sub
ljmp
push
js
icebp
loope
sub
sub
inc
leave
ss
mulb
stos
loope
adc
and
ficoml
daa
xchg
lcall
sbb
pushf
xlat
sub
and
jle
rcrl
jle
sub
int
jge
cwtl
mov
dec
pushf
lret
out
mov
jmp
and
aaa
lods
gs
mov
pop
inc
aad
lret
jecxz
add
push
cmp
xchg
sbb
inc
pushf
outsl
fcmovne
sbb
out
scas
pop
mov
js
hlt
inc
cltd
and
movsl
fstpt
mov
or
jae
outsl
mov
es
mov
inc
ds
sub
mov
leave
pop
mov
shrl
sahf
dec
idivl
arpl
fs
sub
pop
pop
fwait
scas
mov
sbb
dec
mov
or
jbe
dec
gs
nop
pop
cs
push
movsl
bound
fidivl
push
dec
pop
xchg
sbb
decb
in
and
lret
fchs
pushf
jecxz
adc
push
xchg
push
pop
inc
mov
dec
pop
fdivs
sub
xorb
pop
data16
aaa
mov
sbb
xchg
insb
fdivr
mov
mov
push
adc
sub
fildl
mov
jbe
mov
cwtl
cmp
int3
pop
push
hlt
loopne
cmp
stc
shll
fsubl
pop
inc
cltd
enter
fsubrs
push
popa
fldenv
inc
push
cmp
mov
jae
out
xchg
jns
cmp
xchg
addl
xor
push
cmp
add
in
mov
pop
push
lods
aas
int3
mov
push
das
jmp
add
daa
mov
sbb
adc
mov
cmp
aam
push
mov
sbb
inc
out
iret
push
adc
push
push
or
mov
fiadds
out
shl
sbb
arpl
push
cmp
inc
mull
xchg
push
outsl
shrl
lcall
mov
add
repz
add
test
pop
mov
add
imul
mov
imul
push
mov
ljmp
inc
mov
lcall
pop
cld
jecxz
je
mov
inc
jno
stos
push
xchg
sti
lahf
aad
xor
jle
in
jnp
sbb
fsub
out
inc
cmp
lcall
pusha
dec
adc
aaa
or
mov
push
mov
popf
les
bound
int3
and
pop
imul
sbb
test
into
out
sti
add
pushf
out
mov
mul
jae
inc
adc
test
fistpll
lock
jno
pushl
mov
pushf
out
ljmp
rcrl
pop
das
enter
or
movsb
test
mov
mov
push
or
loopne
xor
mov
and
test
ljmp
test
fdivrl
jbe
push
sub
fwait
lods
pop
cmp
adc
mov
sub
jg
lock
push
jmp
lods
inc
mov
out
out
inc
ret
movsb
fstps
adcb
mov
push
mov
je
ljmp
enter
push
dec
cld
dec
push
nop
loop
sbb
in
ss
sbbl
negl
xchg
and
xchg
xchg
fisubl
std
xchg
or
push
and
outsb
mov
cmp
in
cmp
adc
fimull
push
and
or
repnz
cs
test
stc
or
and
add
push
insb
in
fisttpll
mov
sbbb
loope
push
sub
aam
lods
outsb
inc
cmp
sbb
push
scas
icebp
neg
std
aam
cmp
inc
jns
pop
insl
mov
movsb
movsb
push
fldl
sub
ljmp
jae
inc
xor
cmp
add
mov
mov
push
nop
std
lcall
cmp
std
sbb
movsb
test
mov
pop
clc
fs
cli
jo
jp
pop
test
push
into
dec
call
in
sarb
out
or
ljmp
and
shll
sbb
loop
mov
neg
pop
mov
sti
mov
and
cmp
xchg
es
sub
add
cmp
jns
ficompl
insl
cmc
gs
outsl
sbb
jp
mov
stos
push
jge
loope
mov
jne
aam
xor
pusha
in
adc
pop
pop
iret
js
and
xchg
and
mov
int3
add
stc
jmp
fidivs
stc
fwait
push
and
and
mov
data16
jns
je
pop
es
ljmp
mov
and
jae
test
cmp
pop
mov
dec
sbb
push
mov
xor
cmc
shll
cmpl
xchg
jmp
call
inc
out
push
imul
ret
dec
lock
insb
jmp
push
test
xlat
or
xor
mov
test
pop
mov
push
lock
inc
movsl
loopne
aad
inc
pop
ss
loop
out
adc
xor
insl
fstl
xor
fwait
mov
pop
push
lods
inc
add
das
imul
dec
mov
mov
push
sub
rolb
mov
aas
fwait
ljmp
jne
sub
fisubrl
adc
dec
xlat
shll
stc
jae
xorl
sbb
adc
lret
mov
xchg
add
xchg
pop
lods
out
movsb
in
pusha
mov
sub
movsb
push
fists
xor
arpl
mov
mov
push
test
scas
lcall
sbb
mov
inc
icebp
in
push
scas
in
and
inc
jl
or
xor
loope
inc
mov
mov
ret
push
dec
xchg
es
sbb
aaa
mov
dec
sarb
add
push
xor
adc
gs
adc
mov
bound
fstps
add
push
outsb
push
and
rcr
jns
movsl
sub
mov
icebp
aam
xor
sub
inc
push
jp
adc
test
fbstp
xchg
icebp
mov
lcall
pop
mov
rep
push
push
push
jp
mov
ret
xor
pop
aas
repz
lret
mov
sbb
out
clc
clc
das
in
jnp
loopne
rolb
call
sbb
repz
push
outsl
push
icebp
push
sbb
sar
push
cmpsl
sbb
xlat
stos
repz
jg
lock
pushf
mov
push
pop
fistps
std
mov
or
push
mov
out
mov
add
add
and
mov
lods
cwtl
mov
aad
adc
ja
and
mov
cmc
pop
or
inc
add
xor
and
xchg
idivb
xor
or
stc
add
mov
mov
movsb
imull
sbb
inc
and
hlt
cmc
rcrb
loope
jo
add
push
fwait
xorl
repz
ret
xor
push
inc
daa
out
cmp
sbb
mov
movsb
je
pop
les
jg
add
xchg
lret
mov
lock
mov
or
add
inc
je
aas
xor
inc
mov
ficomps
add
pop
mov
insb
cmp
das
xchg
jle
das
jg
sti
mov
mov
dec
adc
mov
repnz
mov
lret
int3
mov
sbb
mov
loopne
inc
add
lret
mov
jne
jp
movsl
fisubrl
pop
ljmp
imul
pop
fidivl
data16
jge
inc
or
mov
inc
cmp
jo
inc
cmp
mov
mov
loope
lds
lret
ljmp
add
jle
ja
dec
xor
sub
push
mov
pop
in
dec
test
pop
addr16
sub
xor
mov
rclb
call
mov
outsl
mov
lret
mov
in
leave
icebp
jg
pop
pop
mov
push
movsl
fisttpll
push
lahf
ljmp
jmp
fwait
sbb
adc
jecxz
mov
jae
in
and
ret
fcmove
cld
jle
ja
or
mov
div
cwtl
pop
lret
add
fimuls
sbb
xchg
mov
and
and
push
mov
sbb
sub
rorl
pusha
das
fnstcw
in
aas
fs
sub
jecxz
fwait
in
inc
out
xchg
add
shll
adc
call
clc
sahf
add
rcrb
pop
lods
adcb
mov
cwtl
cld
jecxz
push
shlb
rcrb
dec
repz
mov
xchg
sbb
pop
mov
rorl
dec
in
mov
mov
repnz
das
imul
xor
jmp
dec
adc
stos
lock
jnp
mov
call
aad
jmp
pusha
sbb
pusha
mov
xor
scas
adcl
pop
jge
sti
cmpsb
divb
inc
clc
sub
jg
or
orl
inc
jge
pop
lcall
fnstsw
lods
mov
scas
scas
mov
fwait
dec
dec
sbb
xchg
rcrb
xchg
cmp
into
push
inc
inc
jbe
cmp
sbb
cmc
pop
jae
pop
jmp
sbb
rol
sub
test
cmp
xor
sti
shl
jg
push
mov
call
inc
test
loope
or
and
add
out
movsl
cwtl
sbb
cmp
push
inc
shll
xchg
jnp
xor
testb
enter
pusha
scas
aam
sub
or
mov
dec
push
xchg
nop
mov
jecxz
add
mov
lcall
push
push
pop
dec
jg
xchg
cmp
popa
dec
andl
loopne
fs
sbb
jae
sbb
js
pcmpgtd
test
into
sub
push
inc
mov
outsb
sub
dec
orl
lods
pop
dec
push
ss
into
jnp
mov
mov
xor
and
lret
push
or
out
pushf
mov
jge
mov
pop
mov
in
hlt
orl
jl
addl
nop
loopne
addr16
lods
aas
xor
inc
mov
xor
mov
lods
sub
xor
cmp
or
dec
mov
mov
mov
dec
aaa
int
ret
jbe
andb
and
inc
cmp
stos
dec
jecxz
dec
addr16
rolb
and
adc
data16
iret
aad
inc
emms
add
in
rcll
int
mov
outsl
sub
xchg
cmp
jne
push
out
or
mov
imul
mov
adc
jmp
lock
stc
movsb
xchg
pop
test
nop
das
pushf
cs
push
hlt
sbb
popa
in
pop
stc
xabort
shll
cli
adcl
xchg
sub
adc
sub
lret
in
mov
cmpsb
pop
int3
in
out
sub
in
adc
shll
xchg
push
js
mov
mov
inc
dec
add
lahf
bound
stos
inc
inc
lcall
mov
adc
or
dec
rorl
sahf
out
aas
mov
cmp
pop
xchg
jb
lret
gs
or
push
xchg
dec
push
add
xchg
sub
incl
pop
and
mulb
jo
pop
mov
xchg
pop
out
std
jg
xchg
dec
pop
push
iret
push
pop
lods
aas
push
or
xchg
cwtl
pusha
stos
movsl
aas
lcall
int
sbb
push
shrb
xlat
aas
decb
jg
fdivr
in
adc
cmp
add
mov
or
or
inc
xchg
cwtl
or
jecxz
or
mov
pop
daa
xor
repz
lahf
cld
and
out
adc
jno
xor
aam
scas
jl
loope
lret
jno
outsb
out
pop
outsl
xor
ljmp
mov
push
jo
mov
and
loop
imul
xchg
std
pop
mov
lahf
es
dec
icebp
test
mov
push
sub
mov
or
dec
cmp
or
les
inc
pop
dec
mov
lods
sarl
fsts
xor
cld
push
imul
xlat
aaa
movsb
push
fistl
cmpsb
mov
jg
out
xchg
mov
mov
fldenv
xor
mov
inc
les
or
test
sub
jb
mov
loope
mov
push
psubw
mov
sbb
xor
dec
out
push
pusha
cltd
push
pusha
ljmp
shlb
stos
imul
dec
jmp
jns
cmpsb
dec
outsb
cmc
pushf
ret
lock
outsb
jle
test
cmpsb
repz
jae
xchg
mov
mov
pop
xchg
into
jo
xor
js
jbe
sbb
popa
xchg
mov
xor
pop
push
jbe
mov
add
js
add
sbb
adc
dec
push
mov
sbbl
cmp
iret
mov
int3
mov
jmp
pop
jno
mov
into
addb
and
xor
and
insb
lret
sti
inc
fldenv
push
dec
jbe
sbb
inc
repz
mov
out
fiadds
imul
fnstsw
xabort
pop
nop
int
mov
mov
jmp
mov
mov
mov
xor
add
jb
imul
aam
or
lret
arpl
and
aaa
and
jmp
ss
inc
stos
or
or
xchg
fistpll
inc
jge
xlat
call
mov
adc
getsec
mov
mov
jb
sbb
icebp
cmp
push
enter
add
sbb
orl
std
pop
in
cmp
xor
dec
jecxz
scas
in
mov
std
popa
or
push
pop
xchg
mov
adc
mov
test
lods
daa
int
xrelease
mov
jnp
fldenv
arpl
les
pop
rorb
dec
mov
adc
aad
pop
mov
insb
jmp
iret
aad
jne
and
lret
sbb
frstor
fsubrl
out
mov
jo
cmc
popf
out
jmp
adc
cwtl
push
pop
mov
pop
mov
jb
aam
jge
jns
mov
sarb
add
shll
inc
add
cmp
jb
push
add
mov
test
lret
leave
jge
cmp
inc
cmpsl
ret
push
clc
cmpsb
mov
cmp
cmp
icebp
inc
dec
pop
xchg
mov
daa
fdivl
bound
dec
sub
ljmp
imul
push
lods
fs
loopne
into
incb
loopne
pop
leave
jle
std
push
push
test
adc
sub
pop
adc
enter
sub
ss
mov
pop
xchg
cmp
imul
popf
jge
pop
sub
xor
adc
mov
jecxz
dec
push
loop
mov
push
mov
mov
adc
daa
push
ljmp
cs
mov
jno
mov
cmpl
pop
inc
adc
sbb
out
outsl
xor
addr16
jns
pop
popf
mov
and
lret
lods
cmp
in
std
or
jecxz
xor
pop
js,pt
add
mov
aaa
fsubrl
call
stc
xor
mov
ret
push
icebp
adc
or
fmul
push
in
adc
sub
test
shlb
lods
fildl
and
stos
popf
sbb
imulb
fiadds
fidivrl
and
inc
popf
xchg
repnz
test
jmp
repnz
inc
and
and
mov
clc
test
adc
test
pushf
aam
mov
lcall
jne
pop
imul
out
aad
enter
or
jae
inc
mov
mov
das
mov
jge
xchg
sbb
xchg
mov
movsb
sar
mov
push
mov
sbb
stos
sysenter
adc
frstor
pop
sub
movsb
pop
stc
in
and
sub
xchg
loope
add
adcl
shlb
and
loop
lcall
clc
out
jno
les
mov
dec
add
pushl
stos
aas
jb
lcall
out
cmp
mov
stos
test
cmp
je
sbb
repz
push
pop
cli
adc
xchg
push
das
mov
mov
aad
stos
stos
add
addb
imull
test
inc
pusha
movsb
inc
add
js
xchg
add
xor
push
leave
jecxz
lock
popf
inc
inc
cld
ror
mov
in
cmpl
mov
xor
or
sub
imul
nop
jno
shlb
ljmp
sti
repz
mov
pushf
loope
popf
jmp
push
test
sbb
jbe
mov
repnz
clc
pop
push
sub
jg
or
or
jmp
lds
cwtl
pushf
inc
cld
fistpll
and
clc
add
test
testl
rcll
insb
jmp
insl
shrb
gs
bound
mov
bswap
sbb
mov
sub
push
lret
mov
push
aad
sub
gs
lahf
popf
imul
mov
jg
addb
in
sti
hlt
xlat
test
pop
cwtl
lds
cmpsb
mov
push
mov
sub
pop
in
sbb
cs
cmc
pop
aam
mov
dec
or
mov
rclb
bound
adc
das
jnp
test
sub
mov
stc
lret
jno
repz
dec
lods
outsl
icebp
out
mov
mov
imul
aam
xor
test
or
pop
loop
sbb
cs
fstl
cltd
aad
lcall
inc
fwait
push
jnp
fs
fistpl
movsb
icebp
scas
loopne
leave
fsts
stc
jbe
mov
out
rcll
aam
sbb
je
frstor
mov
push
mov
lods
rcrb
push
ret
bound
jnp
push
insl
xchg
dec
in
ret
or
shll
es
sti
mov
inc
mov
sbbb
dec
in
inc
mov
push
xchg
mov
fs
cmpsb
insb
and
in
lret
mov
in
clc
stc
xorl
or
pusha
xor
mov
fstp
movsl
xor
loop
xchg
cmp
and
les
jns
ret
mov
mov
aad
test
repz
mov
rcll
pusha
push
cmc
sub
or
adc
jmp
xchg
sbb
popa
std
mov
pop
mov
mov
sbb
test
outsb
jg
add
idivl
dec
xchg
inc
adc
mov
imul
xor
int
inc
adc
nop
pop
mov
movlps
mov
cli
in
mov
mov
fcmove
lret
dec
arpl
jl
scas
xchg
or
push
fldenv
jp
sbb
mov
fadd
xchg
dec
mov
daa
in
mov
cwtl
roll
cmpsl
aam
sub
out
cmc
fwait
ret
lds
ret
mov
and
push
push
push
rcrb
cmp
aaa
cmp
scas
mov
repnz
sub
sbb
out
je
fimull
push
jo
xor
mov
call
out
subb
mov
movsl
fdiv
push
imul
jl
mov
fidivrl
push
pop
sub
add
fcom
mov
sub
mov
inc
enter
jnp
lcall
lcall
in
push
or
sbb
in
incb
orb
ficoml
pop
adc
xor
or
insl
lret
fldenv
xchg
xor
sbb
lcall
data16
sarl
mov
test
cmp
adc
aam
jne
jne
inc
out
lret
push
daa
mov
push
jnp
dec
adc
jle
outsl
or
mov
and
int
insb
xor
pushf
jle
pop
lea
push
or
sub
aam
xor
lea
aad
jmp
sub
nop
hlt
lods
add
leave
mov
and
mov
jne
pushf
movsl
insl
mov
movsb
mov
xchg
aaa
cmp
pop
xor
les
fcoms
cmp
aam
sbb
or
insb
mov
mov
mov
inc
incw
push
dec
add
cmp
fwait
jge
int
roll
xor
cmp
clc
andl
add
mov
mov
adc
aad
and
movsb
pop
inc
cli
push
and
gs
dec
shrl
stos
pop
cltd
addr16
sub
mov
jp
aaa
mov
xor
imul
arpl
fstpt
jmp
adc
inc
ss
lret
xchg
and
andb
shl
mov
into
popf
test
jp
out
cli
enter
in
repz
xchg
dec
sti
xor
loop
xor
aam
cmp
dec
mov
mov
lock
push
addr16
add
add
jmp
imul
incb
loop
cmp
adc
push
ds
loop
sarl
cmp
jle
dec
fdiv
int
mov
mov
inc
xchg
stos
xchg
test
sbb
jno
flds
add
pop
add
pushf
fdivr
sub
cltd
daa
adc
jbe
sbb
adc
inc
mov
out
jecxz
sub
scas
adc
xchg
ret
mov
sub
enter
cmp
push
dec
imul
test
sub
xchg
mov
ret
imul
in
dec
stc
inc
sub
xchg
arpl
or
dec
jno
sub
inc
stos
jo
dec
mov
test
call
pop
inc
pop
es
cmp
cmp
inc
cmpsl
jl
idiv
pop
lods
mov
gs
stc
cmpsb
insb
mov
push
dec
jnp
inc
iret
jae
mov
inc
push
sub
push
and
jle
lds
pop
ss
pop
jne
dec
and
mov
xchg
dec
sahf
sub
pop
xchg
jecxz
or
sbb
repnz
jns
stos
mov
lods
lods
xchg
dec
sti
push
or
or
push
jbe
jmp
out
sti
insl
inc
lahf
mov
fs
mov
cld
mov
mov
andl
je
xchg
mov
imul
push
sbb
xor
test
mov
pop
and
jge
jg
iret
jae
add
loop
mov
lods
int3
mov
stc
xor
mov
outsl
mov
inc
xchg
out
pusha
xor
pop
jmp
push
jne
cmp
inc
in
sbb
fildl
cltd
mov
mov
jge
outsl
outsl
sub
inc
add
ljmp
inc
sub
mov
call
add
sub
and
sbb
adc
leave
int3
sbb
aaa
enter
xchg
popf
shlb
push
out
add
outsb
iret
pop
push
xor
sbb
shll
and
dec
add
jecxz
push
in
mov
sub
jbe
or
adc
popf
dec
pop
push
pop
scas
mov
lahf
pop
out
orl
insl
ss
inc
call
cmc
scas
and
std
mov
lcall
mov
insl
push
or
dec
xor
test
pop
pop
jbe
fsubrl
aaa
loopne
repnz
cmpsl
loop
loope
mov
mov
in
pushf
in
jns
sbb
xor
and
scas
call
dec
jo
iret
dec
leave
dec
pop
mov
mov
fidivrs
jo
je
mov
mov
sub
add
scas
ljmp
push
mov
xor
loop
fs
imul
mov
mov
call
mov
adcb
add
jne
std
test
call
pop
pusha
bound
jne
ret
fdecstp
fdivl
jne
and
jecxz
xor
bnd
inc
lds
xchg
out
lods
pop
stc
push
out
mov
xor
jns
icebp
call
sbb
mov
aas
pushf
rorl
iret
popf
pop
hlt
or
push
popa
mov
jge
adc
loop
imul
dec
fsubrl
aas
mov
stc
ja
jne
mov
cld
pop
inc
ja
sub
cwtl
in
push
mov
test
in
pushf
insb
in
fsubr
es
call
stos
pop
fucomip
mov
in
jle
add
movsl
call
pushf
jge
or
and
and
adc
push
xchg
sub
cmpsl
cmpl
orb
and
or
dec
out
xchg
mov
mov
add
fistpll
mov
das
jecxz
xchg
les
lret
cmp
add
ja
inc
xchg
and
and
xor
pushf
pop
add
add
ljmp
xlat
sub
out
in
jno
jo
add
sbb
mov
movd
cli
xchg
sub
movsb
pushf
pop
mov
jbe
mov
push
cli
mov
std
lods
movsb
cmpsl
xchg
fcmovu
sbbb
cmp
and
mov
cmpsb
loopne
sbb
in
nop
xstore-rng
cmpsl
subl
js
jmp
pop
ss
stos
fistpl
mov
dec
gs
pusha
sub
movb
adc
cmp
test
xor
lea
mov
movsl
mov
and
lods
ficomps
dec
or
sahf
in
pop
and
inc
ds
cltd
mov
pushl
cmpsb
or
cwtl
cli
sbb
out
loope
mov
or
sbb
bnd
add
and
mov
loope
adc
jle
sarb
cmp
jb
add
stos
jb
xchg
ficomps
enter
push
jle
int3
loop
inc
or
movzwl
pusha
loope
out
mov
scas
roll
nop
dec
push
ret
stc
loop
or
int
sahf
lret
mov
and
test
sbb
dec
insl
jne
out
push
mov
sub
adc
xor
pusha
xchg
push
sbb
fsubrs
cmpsb
movsl
and
ffree
popf
xor
int
cmp
jb
xchg
movsb
lcall
leave
pop
add
rclb
sti
pop
jbe
cmpsb
rorb
jge
inc
rol
cltd
dec
cli
movsb
aad
pushf
xchg
xor
stos
push
ds
pop
out
pop
fbstp
lcall
roll
ret
sub
or
clc
mov
mov
pop
sti
das
add
mov
fsubrs
outsb
mov
cmp
ja
pop
push
subb
fisttpl
lcall
lcall
cmp
call
dec
inc
call
mov
sub
ret
imul
sbb
cli
jb
aas
rcll
inc
adc
or
or
push
jno
fildll
idivl
mov
lods
push
mov
ds
outsb
popf
or
stos
loop
sbb
aas
pop
pop
cmp
mull
lods
jns
pop
mov
adc
loopne
into
sti
sub
pop
fwait
cwtl
rclb
cmp
cs
or
push
imul
adc
dec
cmp
sub
dec
jb
bound
shrl
cmp
dec
icebp
mov
jl
mov
lret
dec
imul
mov
test
cmc
dec
pop
inc
ljmp
and
out
jnp
inc
push
mov
pop
dec
popl
out
sub
jne
loope
lcall
test
mov
jno
iret
mov
jbe
out
inc
mov
scas
jb
xchg
or
pop
add
push
mov
and
adc
sbb
fcoms
shll
sbb
int
cmova
mov
addr16
mov
jb
add
int3
lock
push
xchg
sbb
sub
xchg
xchg
adc
fmuls
pop
jb
int
addr16
pop
xor
rcrb
outsl
adc
or
std
pusha
push
jg
sbb
movsb
insl
mov
xor
fldcw
mov
jmp
push
ret
cmp
ret
sbb
jge
xchg
jae
loope
sbb
test
js
cvtdq2ps
sub
and
aaa
rorb
fs
inc
aaa
mov
cmpsl
dec
add
imul
push
push
jg
cmp
clts
xchg
xchg
cmc
pop
xlat
hlt
adc
int
push
es
arpl
add
xchg
jecxz
movsb
movsb
inc
popa
sbb
rorb
aas
mov
inc
ja
and
mov
pop
xchg
mov
movsl
push
or
and
lret
sub
testb
xchg
int3
sbb
mov
push
aam
inc
test
push
mov
jne
cs
jmp
xor
adc
dec
sub
sahf
stos
and
dec
scas
jae
pop
adc
add
mov
aaa
xchg
test
or
pop
ss
fwait
push
scas
or
jbe
es
inc
shll
or
das
jbe
xor
xchg
inc
neg
jecxz
sub
call
mov
xor
lret
inc
das
or
stos
test
push
pop
push
sub
pop
lret
popf
popf
jmp
xchg
and
scas
jb
pop
loopne
pop
sub
dec
pop
xor
dec
xchg
mov
mov
add
cmp
stos
xor
dec
fmull
test
daa
xor
pop
mov
pusha
jnp,pt
sub
and
scas
dec
xor
jg
inc
aas
jne
xor
loope
shll
ljmp
leave
ret
mov
clc
arpl
jns
xchg
stc
lods
or
inc
notb
stos
mov
cmpsb
test
ret
push
rcrl
inc
sahf
push
mov
cmp
addl
iret
stc
fdivs
enter
ret
mov
lahf
sti
arpl
insb
inc
adc
je
inc
xor
loope
dec
xor
cs
sbb
dec
mov
cltd
lcall
add
sub
push
xorl
adc
ds
and
pop
data16
andl
icebp
add
jbe
mov
or
mov
push
cltd
je
push
movsb
cwtl
mov
aaa
nop
ret
mov
ja
out
testb
xchg
in
shlb
pop
dec
outsb
pushf
ljmp
cs
hlt
div
push
sarb
arpl
cs
and
fstl
cmpsl
jne
loope
outsl
xchg
push
mov
fiaddl
vmovaps
movsl
or
in
repnz
dec
xchg
jne
sti
lret
fildll
pop
lods
testl
cs
mov
jmp
inc
in
or
pop
cmp
je
lock
fmull
sub
das
sbb
jp
adc
cmp
enter
mov
gs
imul
mov
xor
shll
add
jp
lcall
push
repnz
outsl
and
pop
and
jns
pop
das
and
fwait
aaa
std
call
dec
andl
in
jmp
add
mov
push
lods
stc
stos
mov
pop
add
inc
lea
mov
jg
lcall
int3
adc
push
inc
jnp
push
pop
dec
cs
adc
cmpsb
xor
insl
mov
sarl
movsb
lds
push
pusha
int3
ljmp
jl
sbb
pop
sub
or
xor
cmc
pop
sub
sub
int3
rcrb
test
fsubrp
cltd
sbb
dec
cmp
iret
out
jp
push
mov
jmp
imul
lock
push
popa
shrd
popa
test
or
pop
cltd
aaa
incl
add
aaa
repnz
mov
mov
fstpt
outsb
add
bound
push
ds
xlat
pop
in
xchg
push
inc
les
in
cmp
or
imul
rclb
out
ret
push
insl
repnz
pop
test
lcall
and
add
inc
int3
mov
js
push
mov
pop
aad
mov
inc
xchg
and
or
in
lret
mov
dec
sub
fsubrl
and
dec
cmp
pop
pop
inc
test
or
xor
fldl
imul
les
mov
cli
ret
sub
cltd
scas
les
pop
adc
cmp
sbb
adc
pop
lods
xlat
daa
pop
es
movsl
add
jae
or
jle
xchg
xchg
jge
jle
movsl
int3
cmp
in
inc
and
insl
mov
cld
xchg
enter
jl
lret
les
fimuls
mov
clc
imul
aam
decb
int
fstpt
inc
and
mov
mov
stos
or
mov
out
mov
adc
bound
stc
sbb
jno
inc
mov
adc
adc
popa
mov
std
imul
add
xor
aaa
adc
stos
mov
xchg
int3
pop
dec
xchg
sub
push
sub
jecxz
jns
outsl
int
out
iret
xor
or
xchg
iret
mov
mov
or
adcb
cmp
adc
sbb
add
lret
nop
xchg
xchg
stc
cwtl
in
mov
sbb
xor
or
popf
arpl
pop
jge
outsb
lods
in
inc
adcb
jl
inc
push
clc
aas
arpl
sub
lea
ja
outsb
cwtl
mov
mov
mov
jno
aad
xor
lods
add
movsw
mov
xor
inc
adc
sbb
push
int3
aad
sub
sahf
push
inc
into
dec
test
adc
add
cmp
cmpsb
int3
and
adc
xchg
xchg
cld
add
or
push
or
out
push
scas
xchg
rcrl
iret
push
and
negb
xchg
dec
xchg
out
cltd
rolb
mov
xor
aad
lds
push
inc
push
rcr
es
mov
lods
lahf
mov
test
pop
and
int3
cmpb
ficomps
mov
mov
mov
fisubl
aad
outsl
jo
cmp
test
dec
and
cmpsb
inc
jbe
and
push
inc
loope
test
daa
mov
lock
dec
lock
leave
ja,pt
hlt
jecxz
in
mov
inc
dec
notl
fdivrl
call
les
rol
test
and
into
aas
jl
cld
call
ss
sahf
outsb
cwtl
stos
iret
inc
pop
adc
outsb
pop
mov
xlat
shll
insl
fldenv
mov
insl
xchg
dec
jl
mov
or
outsb
das
pop
push
xchg
push
repz
je
stos
out
xchg
aas
add
pop
es
mov
xor
jg
xor
sbb
aaa
orb
xchg
and
jb
movsb
data16
mul
mov
mov
xor
fldcw
push
mov
lret
mov
sar
mov
sub
push
xchg
imul
cs
outsb
or
dec
ret
jmp
mov
jnp
test
push
repz
fucomp
add
lds
sbb
cltd
std
aas
sbb
cmpsb
xchg
mov
push
cmpsb
sbb
je
or
insl
gs
frstor
push
dec
ja
ljmp
fdivs
sbb
out
adc
mov
mov
pop
mov
mov
shr
push
shll
cmp
idivb
in
sub
xchg
cmp
lock
mov
popa
dec
outsb
mov
loopne
push
mov
outsb
jle
aad
inc
mov
xor
out
scas
adc
mov
cmp
mov
repnz
jecxz
movl
into
and
lds
popf
add
inc
js
pop
aaa
xor
jno
inc
pop
cmc
push
jns
xor
icebp
ret
push
lods
movsb
sub
push
xor
pop
xchg
into
pop
add
or
outsl
fisubrs
or
mov
and
les
pop
xchg
adc
ds
mov
or
inc
lock
cmp
notb
outsl
dec
jmp
test
lcall
lock
inc
push
stos
int
inc
jg
mov
cmpsl
adc
jns
mov
sub
xchg
and
xlat
jmp
mov
insb
lret
insb
mul
mov
loope
dec
testb
int3
dec
dec
fildll
dec
sti
or
jge
das
stos
xchg
sbb
adc
cmpsb
ret
jbe
scas
push
pop
mov
cs
cmpsl
lahf
push
scas
std
scas
cmp
pop
aam
mov
ds
lock
mov
push
mov
call
sbb
mov
or
jl,pt
push
out
cli
sub
lds
rorb
in
das
stos
push
imul
pop
aas
pop
std
adc
faddp
icebp
pop
sbbl
and
pop
insb
adcl
and
addr16
mov
mov
xor
repnz
leave
es
jno
out
cmp
add
and
bound
add
sbb
bound
xor
or
adc
mov
mov
pop
cmc
and
sbbl
push
sbb
sub
rcl
jbe
and
push
out
sub
pushf
divl
cld
push
pop
mov
mov
or
sub
clc
adc
xchg
into
push
mov
aad
push
dec
mov
into
fnstcw
add
ljmp
sbb
jnp
out
arpl
push
cmp
sbb
jg
dec
or
mov
add
movsl
out
push
bound
stos
enter
sub
fwait
pop
jmp
cs
insb
xchg
pop
jecxz
adc
pop
aam
cli
adcl
stc
pushw
popl
test
sub
scas
or
cs
mov
lea
xor
shlb
xor
rclb
cli
jle
add
popf
xor
cwtl
jmp
push
cmp
fiaddl
rolb
xchg
scas
or
add
sub
or
push
sbb
aad
arpl
movsl
stc
pop
or
push
pop
cmpsl
ljmp
mov
loop
xor
cwtl
aaa
out
std
lahf
jae
bnd
sbb
mov
mov
and
rcrb
xchg
xor
fs
pop
nop
movsl
test
mov
mov
push
mov
repnz
cmp
push
cmpsl
out
or
stos
push
mov
cmp
mov
cmc
fstl
jae
test
cmp
cmp
enter
mov
jbe
faddl
test
shrb
movsb
adc
xchg
cmp
fadds
cmp
aam
push
adc
out
adc
sub
inc
sti
cld
imulb
add
je
sub
rcll
cmpsb
add
xlat
mov
mov
jae
out
adc
test
xchg
jns
fistl
pop
pop
cs
xor
mov
test
subl
scas
or
dec
pop
push
ljmp
xor
mov
dec
cmp
push
sarl
cmp
mov
test
aas
das
sbb
cwtl
and
inc
lock
leave
out
jp
sbb
xor
inc
test
fnclex
div
jno
cmp
cmpsl
aas
cmp
xchg
push
ljmp
mov
pop
jecxz
mov
shrl
fmuls
push
cmpb
movsb
cwtl
cmp
jno
pop
clc
jge
aas
lret
lods
add
pop
in
dec
inc
push
cmpsl
and
lahf
sbb
xchg
dec
in
cmpsl
insl
add
in
mov
mov
pop
in
std
mov
xor
jnp
out
test
ljmp
sub
adcb
cmpsb
mov
std
jge
dec
mov
shl
add
xor
incb
in
sub
lahf
ds
fistl
pop
pushf
je
or
jns
fldenv
ja
mov
jnp
dec
repz
shll
out
movsb
loop
mov
cs
int
mov
fcmovu
and
scas
xor
lods
add
adc
jnp
lods
pop
xchg
mov
test
jno
jg
jno
test
or
lea
jle
imul
cltd
xchg
and
jmp
cmp
inc
push
mov
xchg
mov
push
add
repnz
mov
loopne
mov
mov
mov
add
out
add
and
cwtl
aam
jp
fiaddl
sub
je
xorb
pop
xor
cmp
cwtl
dec
sub
dec
mov
adc
insb
in
cmp
popf
or
push
divl
xchg
pop
or
ja
movsb
ror
mov
push
dec
fmulp
ss
lret
js
push
std
mov
adc
ss
lds
pushf
rolb
test
dec
lods
cld
sti
lahf
inc
ds
jo
int3
mov
add
popf
movsl
cmp
pop
add
cli
pop
or
cmp
xchg
aad
mov
mov
aas
pop
jge
jb
pop
pusha
xchg
dec
jnp
cmpsb
sbb
lret
leave
push
lods
sbb
outsl
xchg
mov
mov
jbe
xchg
xchg
mov
dec
outsb
imul
mov
jae
idivb
xor
mov
jg
hlt
mulb
or
js
and
add
sub
fcoms
push
in
bound
adc
in
and
imul
aas
in
sbb
xchg
imul
xor
outsl
stos
hlt
leave
fidivrs
xlat
mov
xor
movsl
fcomi
test
or
jle
ljmp
push
sub
or
inc
xor
sub
cmp
cs
movsb
pop
pop
lcall
xor
inc
popf
cwtl
adc
mov
and
out
mov
adc
testb
inc
clc
push
pop
xchg
leave
pop
push
xor
pop
scas
test
pusha
add
jno
cmp
dec
jp
inc
inc
bound
ret
add
inc
dec
jmp
inc
scas
jge
in
ds
cmc
xchg
pop
stos
lock
push
pop
ficoms
loope
mov
cvttps2pi
lahf
insb
cmpsl
stos
and
es
or
adc
insb
add
sti
fcompl
jp
out
mov
adc
scas
sub
or
fdivs
jl
jmp
jnp
pop
add
repnz
mov
pop
sahf
gs
fwait
adc
or
adc
mov
movsb
data16
mov
mov
fcoml
mov
mov
fisubs
sahf
sbb
das
in
cld
pop
jmp
arpl
sub
rolb
xchg
stos
in
dec
fs
pop
in
xchg
fldenv
inc
popf
ficoms
xorb
test
in
mov
iret
dec
aam
imul
mov
or
xor
push
std
jb
in
sbb
pop
and
pop
iret
push
pop
sub
jns,pt
clc
loope
push
mov
hlt
adc
lcall
adc
push
call
testl
test
les
rcll
dec
sub
sbb
cld
mov
and
jge
shl
fsubr
shl
shlb
inc
xor
push
orl
lock
lock
adc
mov
les
xor
and
fs
rclb
inc
aas
mov
pop
add
test
mov
pop
hlt
mov
repnz
mov
mov
lcall
dec
mov
cmp
jecxz
pop
aad
sbb
popa
jns
add
pmaxsw
sub
rcl
xchg
pop
push
lds
and
adc
cltd
cmpsb
aaa
loop
pop
pop
sub
int
lods
icebp
loop
mov
push
jae
subb
pop
in
std
out
rcrl
lods
imul
aaa
jbe
je
xor
out
out
cmp
pop
enter
sbb
out
std
jae
jp
mov
xchg
dec
inc
mov
or
inc
loope
cmp
flds
test
sub
pop
dec
and
insb
cmc
call
cmpsl
ss
lock
mov
and
repnz
shlb
jmp
sarl
pushl
inc
stc
xchg
stos
jo
lcall
je
jno
pop
sti
sbb
nop
push
inc
fs
jno
mov
adc
and
out
push
xchg
adc
test
push
sbb
std
mov
cmp
mov
mov
and
pop
cmp
cmp
or
mov
add
mov
stos
outsl
cmc
jecxz
dec
stos
mov
leave
pop
push
out
inc
sahf
outsl
cmp
pusha
pop
test
scas
add
push
jl
imul
inc
and
push
fldl
and
in
bound
jp
mov
imul
cmp
imul
lock
xlat
jge
sub
jl
mov
mov
jne
scas
mov
mov
push
pop
addr16
mov
mov
cmp
cmp
dec
xchg
dec
and
add
push
lods
cs
ss
icebp
xor
jmp
inc
orl
js
sub
clc
xor
push
xchg
aam
add
jns
xor
loop
fsts
orl
sub
orb
pop
push
pop
push
pop
push
sbb
pushf
out
dec
loopne
lock
jne
jmp
xchg
xchg
cmc
add
xchg
call
pop
dec
and
dec
dec
outsb
dec
sbb
mov
xor
out
subb
adc
jmp
leave
aaa
ret
loop
cmp
push
sbb
cmpsb
lahf
hlt
pop
inc
sbb
fimuls
mov
movsl
sub
cmc
mov
adc
pushf
adc
stc
sub
popf
mov
cwtl
jmp
test
stc
push
dec
or
test
lea
arpl
fiaddl
imul
push
xchg
sub
cld
inc
xchg
push
jne
fnstsw
mov
fs
xlat
jae
pop
mov
sbb
pop
stos
repnz
cmp
pop
push
cltd
outsl
jp
jae
das
jo
ret
inc
sbb
int
fidivs
divl
mov
pop
lcall
iret
nop
fwait
repnz
jmp
imul
xchg
jne
pop
jb
pop
cltd
xor
add
mov
lret
or
inc
cli
pop
dec
mov
out
mov
jp
out
outsl
and
jg
scas
js
nop
adc
jge
pop
mov
push
mov
inc
std
jne
xlat
cmpsl
adc
pop
push
cmp
sbb
pop
pop
xchg
dec
dec
cmp
lret
jne
push
cmp
aaa
sbb
shl
shrb
mov
xor
dec
test
call
mov
dec
sub
xchg
xor
sbb
rolb
or
mov
fnstsw
jno
dec
pop
mov
jmp
sub
mov
les
movsb
inc
icebp
and
fiadds
cmpsl
add
enter
fwait
mov
xchg
test
std
fisubs
jl
adc
popf
cwtl
push
push
mov
jno
xchg
ret
push
xor
das
mov
mulb
sete
cmp
jne
cs
das
outsl
into
pop
pop
sub
mov
and
pop
xchg
add
icebp
jecxz
iret
aad
xor
lret
imul
dec
dec
xor
sub
js
test
aam
and
push
xchg
lahf
and
arpl
outsl
mov
insl
aaa
inc
scas
subb
fs
inc
lret
jns
mov
leave
pop
out
sbb
rorb
mov
dec
out
fcomps
into
fbld
push
or
lea
push
loopne
or
aad
xor
mov
pop
mov
push
push
sub
outsb
pop
xchg
aaa
ret
inc
imul
inc
repz
ljmp
pop
adc
stc
enter
sbb
mov
jg
sahf
fs
popf
les
jmp
jge
fdivrp
enter
lret
add
sarl
arpl
jle
or
cs
mov
mov
cli
xorb
push
jne
inc
add
sub
adc
mov
jo
lock
daa
popf
scas
push
mov
jecxz
jnp
mov
pop
add
xor
adc
add
loope
testb
mov
sub
push
pop
aad
das
dec
jmp
sti
loopne
inc
daa
bound
mov
sub
mov
mov
push
iret
push
imul
aaa
inc
add
lret
add
add
icebp
fldl
iret
push
xor
rcrl
xchg
cltd
mov
xchg
jbe
and
mov
push
ficompl
jo
adc
enter
repz
xchg
push
sahf
sbb
sub
nop
mov
push
jp
pop
iret
dec
adc
into
movsl
push
fdivrl
sub
out
mov
pop
xchg
int3
sub
cmp
out
test
inc
je
leave
adc
sbb
sbbl
aaa
rcl
rcrl
lea
jle
insl
outsb
ljmp
pusha
xchg
inc
loopne
jp
iret
mov
mov
insb
xchg
push
push
ss
push
xchg
aas
mov
stos
cli
call
shrl
stc
push
pop
sub
mov
add
loop
and
mov
icebp
sub
test
xor
jo
pop
and
mov
push
popa
mov
icebp
addr16
cmp
cltd
xchg
insl
add
xchg
in
loop
sub
fs
mov
mov
xor
rclb
mov
ljmp
out
sbb
xchg
adc
out
jge
cmp
xchg
jns
inc
in
cwtl
imul
or
imul
ljmp
xchg
repz
pop
xchg
mov
sbb
dec
loope
fwait
sub
and
rorl
and
in
xchg
jmp
cli
fcmovne
add
mov
inc
mov
mov
dec
sbb
mov
adc
movsl
lret
mov
or
fisubl
or
mov
test
insb
jge
scas
lahf
push
dec
ret
and
pop
insl
sub
sbb
push
jmp
cmp
sbb
mov
mov
cli
add
fimuls
cwtl
out
dec
std
insl
jl
cmp
daa
aaa
add
lods
popf
mov
and
iret
clc
pop
xor
or
aad
test
das
orb
dec
ror
xchg
lods
orl
or
bound
rclb
cmp
movsl
es
inc
add
sbb
js
outsl
ret
stos
lods
stos
add
mov
push
int
mov
aaa
pop
jp
in
orl
xchg
jbe
lcall
mov
inc
mov
cwtl
mov
jae
in
sarl
xchg
mov
and
iret
xchg
xor
negb
and
lahf
adcl
in
test
jb
paddusb
dec
mov
xchg
std
lahf
nop
imul
inc
mov
push
shrb
xor
inc
and
push
incl
mov
aam
in
into
roll
out
push
push
and
test
sarb
add
std
mov
leave
xor
cwtl
inc
push
or
xchg
and
and
nop
xchg
or
inc
sub
mov
movsl
push
outsb
test
dec
mov
mov
xchg
ficoml
movsb
mov
jbe
dec
dec
pushf
mov
xchg
lret
or
pop
pcmpeqw
scas
or
movsb
movsb
xor
into
in
add
xchg
push
and
xor
scas
jb
rcr
pusha
pusha
rorl
popf
inc
lock
mov
ja
sbb
inc
pop
dec
lea
xor
cltd
mov
ret
mov
scas
out
mov
shrl
stc
in
aad
cmp
jg
in
add
mov
popa
xchg
fsubrs
xchg
imul
pusha
dec
xor
movsb
outsb
iret
mov
outsl
xor
imul
fidivrl
repz
ret
push
loop
mov
pop
les
mov
and
pop
cs
dec
pop
xlat
ret
gs
out
dec
push
fdivrp
xor
mov
es
cli
mov
movsl
mov
sub
push
lds
js
xchg
pop
and
or
xor
mov
enter
xchg
fcoml
cmp
nop
push
inc
orl
and
mov
mov
repz
push
imul
pop
das
roll
dec
inc
mov
inc
mov
fwait
ret
inc
mov
inc
in
fwait
xbegin
cmpsl
mov
push
sub
mov
sbbb
jecxz
dec
icebp
in
add
rcll
xor
rcl
loop
jnp
fcomp
das
loopne
iret
jge
push
sub
cld
lock
clc
mov
cmpsl
dec
loopne
int3
sti
imul
enter
or
jp
loopne
out
jmp
push
rcl
mov
and
jne
mov
push
call
jecxz
call
xchg
pop
cmp
or
lret
lods
lcall
in
int3
jbe
sub
pop
push
jne
mov
add
int3
jg
arpl
cwtl
pop
and
or
out
sub
dec
sub
fldt
fimuls
xor
xchg
or
sub
sahf
sub
lret
jns
lcall
pop
fldcw
ret
imul
jno
in
orb
lods
jge
fnstsw
scas
or
sti
sbb
test
jns
shrb
inc
in
out
sub
xchg
test
int3
lret
ja
inc
outsl
mov
scas
inc
mov
fwait
add
cmp
sahf
inc
clc
je
call
mov
lahf
sbb
pop
stos
test
movsb
inc
and
push
test
lods
test
xor
pop
mov
push
shll
nop
jo
popa
push
sbb
cmpsl
cmpsl
scas
mov
pop
es
shll
js
arpl
stos
cmp
je
add
mov
insb
lods
addl
clts
adc
add
mov
loopne
dec
test
push
enter
jge
mov
out
das
repnz
and
push
pusha
inc
sub
sbb
pop
scas
and
or
in
repnz
or
push
insb
mov
scas
xor
push
or
in
scas
add
xor
enter
and
adc
jle
js
insl
out
mov
pop
movsl
jp
mov
dec
fcmovnbe
xor
lret
add
xchg
mov
cld
pop
and
ljmp
xchg
scas
cmp
cwtl
pop
sbb
lea
or
xor
fs
pop
test
or
stos
pop
add
adc
fiadds
pop
dec
gs
popf
das
sarl
xchg
mov
jns
jg
cld
scas
fucomip
das
shl
test
jne
cmpb
push
push
int
sbb
mov
pop
add
in
pop
mov
sbb
pop
push
gs
imul
sub
jmp
or
inc
aas
enter
jle
nop
or
sbb
lret
dec
push
ror
mov
ja
inc
xor
cs
cs
mov
in
inc
iret
mov
fidivrs
addb
add
into
out
xor
lret
cs
mov
xchg
lret
jp
jle
jmp
loopne
icebp
cmp
or
pop
adc
sbb
rolb
dec
push
push
testb
int3
xchg
clc
out
shrb
je
sbb
xor
imulb
les
xchg
fistl
mov
inc
es
sub
scas
xchg
in
fbld
out
xor
int3
dec
inc
xchg
xchg
inc
xor
test
and
xor
add
xchg
jbe
pushf
and
pop
in
icebp
push
into
cltd
push
addb
dec
mov
cltd
stos
mov
enter
test
out
xor
testl
pushf
out
cli
fwait
mulb
in
dec
lcall
jmp
mov
push
imul
testb
mov
int3
xchg
mov
cmp
add
lcall
adc
mov
cmp
lret
jb
add
lods
lahf
push
add
or
dec
jne
xor
dec
jp
cmp
aas
push
ja
mov
jp
shlb
out
pop
nop
pusha
das
inc
jecxz
int
mov
jo
xchg
add
mov
aad
push
xchg
or
lods
jmp
pop
test
mov
jmp
sbb
mov
and
scas
cmc
testl
push
test
jb
iret
sub
lock
dec
and
out
fisttpl
adc
fucomip
xlat
push
push
xor
ljmp
pop
jae
or
cmp
outsb
test
icebp
inc
das
inc
xchg
cmpsl
rol
push
test
faddl
mov
jge
inc
jae
movsb
inc
cmp
lods
enter
mov
stos
sti
mov
jmp
fldenv
dec
adc
push
aas
dec
add
mov
int
cmp
mov
loop
repz
push
dec
and
imul
int
fwait
sub
inc
pusha
push
hlt
aas
data16
add
ret
jp
into
add
fs
push
or
push
shl
and
outsl
xchg
or
mov
mov
dec
jbe
fwait
lcall
daa
popf
sbb
movsl
movsb
mov
mov
push
rolb
cwtl
enter
cmp
subl
xorb
pushf
xor
rcrl
add
ljmp
pop
add
movsb
outsl
push
or
gs
fstps
add
outsl
mov
je
loop
iret
fstps
add
ficomps
jae
je
fisttpll
ja
test
xorl
repnz
lods
and
xorb
add
test
ret
mov
push
inc
pop
dec
push
pop
in
cli
cwtl
mov
js
cmp
jo
xchg
and
movsb
adc
dec
int
imul
mov
xchg
js
or
mov
pop
hlt
xchg
dec
arpl
sbb
int3
cmp
lcall
adc
sub
cli
rorl
orl
adc
mov
or
dec
adc
add
outsb
cmpsl
cmovo
mov
cld
mov
dec
add
jp
xor
call
rcll
shll
inc
enter
call
and
ja
xor
in
jle
out
es
push
addl
and
pop
xchg
or
mov
mov
push
push
aas
xchg
insb
je
jno
or
push
cmpsl
sarl
pop
mov
lcall
bnd
mov
pop
pop
mov
mov
add
sbb
pop
adc
mov
and
push
out
and
dec
ss
push
test
cmp
adcl
xor
push
push
aam
imul
mov
adc
sub
mov
and
cmp
mov
outsl
push
xor
iret
add
or
test
int
pop
add
cmp
mov
data16
cmc
dec
dec
mov
out
push
sub
xor
mov
popf
adc
shll
adc
adcb
mov
mov
mov
aaa
jno
bound
scas
inc
movsb
das
sbb
fmul
push
decb
inc
jp
adc
int
mov
pop
jg
les
aaa
aam
mov
push
repz
sti
sub
sub
jle
mov
pushf
adc
xor
mov
push
cmp
jae
pop
int
shlb
mov
ret
shlb
out
mov
out
jno
ds
cmc
fiaddl
int3
rol
jmp
mov
adc
cli
imul
xor
mov
andl
and
insl
testb
insb
add
sub
idivl
test
xchg
add
pop
sbb
ja
push
cmp
jno
dec
sub
pop
mov
cld
jae
in
xor
jge
push
fs
stc
out
xchg
ds
jmp
lret
insl
xchg
dec
incl
xor
outsb
push
mov
iret
jne
push
clc
inc
adc
push
add
mov
sub
push
aam
test
sbb
inc
xchg
cmp
or
adc
jnp
popa
fiaddl
cmpsb
push
mov
pop
jecxz
lds
fadds
pop
push
sti
shll
mov
pop
outsl
addr16
xorl
sub
or
iret
cmpsb
push
cmc
or
and
cmp
dec
mov
cmp
imul
out
fadd
fnstsw
push
xchg
fwait
adc
insl
add
psraw
and
jp
shll
rorb
hlt
call
pop
sahf
adc
push
lret
jle
iret
xor
xchg
into
xlat
loop
in
pushf
xor
xchg
aad
dec
aas
lret
or
mov
and
test
push
jp
sbb
or
pop
and
xchg
sarb
inc
std
jmp
ret
aas
rcll
mov
cmp
mov
cwtl
fucomi
jno
sub
mov
sarb
pop
pusha
xor
mov
fmul
incb
std
pop
xchg
jb
adc
jecxz
jle
mov
push
jmp
int
jns
lahf
push
stos
mov
pop
in
loop
jp
sbb
pusha
or
xchg
cmpsl
pop
sbb
mov
sbb
mov
mov
push
sbb
movsb
adc
mov
out
and
xor
out
orl
stos
cltd
mov
cmp
mov
push
hlt
mov
mov
in
rcll
push
lods
call
aam
je
pop
and
leave
cs
push
jl
hlt
pushf
insb
inc
js
sbb
mov
and
mov
lock
cmp
adc
pop
sub
sbb
mov
xor
inc
add
nop
xor
xchg
scas
mov
mov
pminsw
test
aam
pop
or
fiaddl
outsb
push
call
stc
lods
loopne
mov
out
lods
push
test
mov
inc
jge
dec
loope
rolb
pop
lea
adc
mov
xlat
inc
out
xchg
or
fwait
lcall
mov
jnp
dec
mov
fdiv
sbb
sahf
mov
shlb
adc
outsl
int
fnstcw
cld
sahf
push
mov
add
and
or
loope
ficoms
jg
jno
aas
jbe
adc
lret
stc
je
ret
ficompl
test
test
mov
clc
pop
cld
push
outsb
enter
xor
into
stos
and
dec
add
jle
inc
mov
outsl
nop
push
sbb
icebp
mov
or
mov
mov
out
mov
aad
dec
int
insb
push
shlb
mov
mov
lahf
sbb
hlt
dec
pop
inc
push
add
xchg
pop
mov
xor
mov
js
sbb
addr16
icebp
adc
pop
dec
add
shlb
lret
mov
and
rcrl
jge
push
adc
fwait
push
push
xchg
or
test
ja
adcl
push
inc
scas
inc
mov
sahf
pop
add
and
cmpsb
cmp
into
xorl
mov
jl
lods
ret
lods
arpl
pop
or
inc
pop
or
leave
in
inc
or
sub
les
lock
cltd
lahf
addb
clc
sti
mov
rolb
idivb
data16
add
lds
js
lahf
ds
test
stos
shl
lret
mov
sbb
pop
sub
jle
sbb
sarl
inc
addr16
push
orb
sahf
stos
ljmp
mov
jecxz
inc
pop
ss
mov
lods
in
aas
das
sub
fadds
adc
out
sbb
pop
adc
fwait
and
sbb
mov
mov
and
mov
daa
add
cmp
out
cmpsb
adc
fisttpll
inc
sbb
mov
ret
jmp
jo
sub
repz
aam
sub
dec
and
pop
mov
mov
xor
pop
das
dec
xchg
icebp
pushf
rcrl
arpl
pop
and
mov
push
push
and
cmp
cmpb
xrelease
push
inc
sub
enter
loopne
mov
push
cltd
imul
cmp
enter
lret
repnz
push
push
sbb
ds
repnz
lret
or
inc
mov
fistpl
int
les
fisubl
mov
clc
mov
imul
cmp
dec
sub
jae
mov
lcall
or
jl
arpl
pop
gs
or
adc
mov
inc
cmp
mov
push
in
mov
jge
movsl
call
jl
inc
cli
pop
test
adc
fs
icebp
aas
repz
add
into
pop
xchg
test
cmp
push
aam
jmp
push
mov
cmpl
dec
rcrl
dec
mov
mov
pop
enter
pop
cmpb
mov
lods
adc
xchg
push
mov
push
xor
into
data16
pusha
jae
mov
xchg
xchg
sub
mov
inc
cmp
leave
and
cmc
subps
sub
subl
push
shrb
aas
cmp
cmp
stos
push
ret
ss
add
sbb
cmpsb
sbb
pop
aam
cmp
cmp
popf
pop
clc
fs
ret
loope
and
pop
cmc
std
and
push
adc
pop
cmp
jge
daa
aas
jp
icebp
cmp
aam
aaa
push
sti
jl
das
ror
xchg
mov
dec
clc
scas
rcrb
es
or
std
xchg
xchg
xchg
js
out
or
mov
cmp
pop
int
jnp
adc
add
push
push
mov
je
pusha
pop
mov
push
xchg
dec
scas
sahf
inc
push
push
pop
orl
xchg
mov
mov
adc
jnp
sbb
pop
cmp
shll
in
and
mov
ds
clc
jge
fists
push
mov
lcall
add
push
pop
sub
cmp
pusha
jmp
cwtl
xor
addr16
xchg
dec
xor
adc
inc
sub
aad
stc
sub
jmp
icebp
aas
inc
cwtl
lods
sbb
xchg
inc
xor
fwait
and
scas
jo
outsl
dec
insl
sub
sarl
push
adc
jl
negl
adc
push
pop
lods
adc
pop
test
data16
call
pop
mov
cmp
sub
pop
xchg
mov
addr16
mov
mov
mov
aad
fisttpll
mov
add
ss
inc
dec
pop
movsl
pushf
mov
repnz
adc
call
fstl
and
xor
pop
iret
jecxz
lea
and
sti
mov
cltd
jge
mov
insb
sbb
mov
std
shll
inc
push
std
jecxz
push
adc
xchg
fcmovnb
bound
mov
pop
cmp
push
cmp
shl
pop
jp
icebp
imul
dec
loope
mov
in
stc
rorl
fildll
aaa
add
add
or
push
adc
lods
shr
scas
mov
push
nop
daa
iret
lret
adc
and
mov
sbb
stos
mov
pushf
mov
sub
mov
ljmp
adc
ret
and
mov
add
mov
sub
mov
dec
push
jp
sbbb
add
jecxz
fdivl
dec
and
mov
mov
add
and
add
cmpsl
ds
and
out
push
bound
icebp
and
mov
leave
inc
pusha
mov
cmpsl
fnstcw
es
adc
push
pop
clc
lcall
mov
mov
scas
xchg
and
mov
xchg
repz
aaa
mov
sbb
popf
dec
in
out
pusha
roll
dec
ss
xor
mov
sub
repnz
add
jo
hlt
jmp
pop
js
je
shrl
sbb
ret
aad
or
mov
xorb
fstpt
idiv
aaa
push
xor
xchg
or
lds
sub
call
imul
dec
push
cmp
sbbb
add
mov
rcr
inc
add
rcrl
aam
clc
sub
test
enter
js
cld
mov
pop
inc
cwtl
adc
pop
je
movsl
scas
dec
inc
mov
cmp
clc
scas
pop
aas
cmpsl
xchg
pushf
mov
sbb
shl
xchg
adc
lock
sub
lea
or
xchg
xor
inc
test
nop
sub
cltd
xchg
jo
dec
jnp
or
lea
add
fwait
in
fwait
addr16
jo
cmp
jnp
or
lret
jno
inc
das
or
test
sub
int
test
leave
dec
sub
inc
dec
jmp
addr16
arpl
stc
push
jl
ljmp
ret
movsb
pop
jg
lds
xchg
sub
mov
fbstp
cli
jg
cmp
sbb
pop
jbe
cmp
sbb
loop
movsl
ficompl
jns
and
jo
ss
cltd
mov
rol
ficomps
xor
leave
jmp
mov
ret
or
fstl
add
push
out
sbb
rcl
jns
addl
les
mov
push
add
test
gs
pop
pop
push
aad
push
and
jl
jge
aad
push
test
cmp
cmovns
adc
push
dec
sub
xchg
cwtl
xor
imul
cs
push
and
mov
rorl
lret
gs
cld
pop
mov
push
or
inc
rcl
repnz
push
cmp
fdivr
fldcw
jg
roll
rclb
popf
arpl
mov
xlat
in
sub
out
int
mov
outsb
pop
jmp
xor
push
pop
negb
je
dec
mov
add
jmp
in
push
insb
xchg
pop
sbb
inc
mov
inc
pushf
mov
mull
decb
imul
jmp
inc
fisttps
aaa
add
movsl
mov
in
or
push
sbb
sbb
mov
xor
mov
test
mov
inc
push
fdivr
in
repz
mov
inc
mov
add
dec
daa
mov
pop
mov
jl
jg
and
sub
repz
jo
out
pop
jle
push
arpl
in
xor
andl
inc
loope
movsb
cli
or
and
jmp
fistl
jl
xchg
cmp
dec
cs
insb
pushf
sbb
pusha
ljmp
into
outsl
idiv
push
push
mov
daa
jo
or
xlat
imul
arpl
jl
out
testl
push
add
jmp
cmp
adc
rcl
in
imul
aad
mov
mov
and
scas
inc
notl
mov
push
dec
test
loop
mov
mov
xlat
sub
sbb
dec
jb
jle
pop
add
test
pop
daa
ret
xchg
adc
push
push
or
push
pop
ljmp
movsb
push
and
fcoms
outsl
or
xor
add
adc
fldcw
jmp
push
cmpsb
mov
jmp
inc
fistps
mov
inc
repz
pop
xchg
mov
jne
pusha
mov
fdivrp
pop
adc
mov
repz
ss
outsb
or
imul
aam
xchg
cmc
add
gs
mov
pop
test
test
mov
leave
adc
inc
sbb
pop
movl
dec
cmp
cmpsl
sbb
out
and
jns
push
xor
cmp
inc
jmp
out
lss
or
push
jl
push
pusha
shll
mov
mov
push
sbbl
jb
in
add
popf
push
lods
pop
insb
lret
mov
xor
xor
push
sub
xchg
in
loopne
sbb
bound
out
pop
fnstenv
scas
add
lea
push
movsb
inc
sti
pop
jo
or
ret
aaa
mov
jmp
mov
xor
mov
lds
scas
or
jle,pt
test
ljmp
clc
sub
mov
repnz
fs
dec
mov
mov
xor
xchg
sar
cmp
sbb
push
fucomp
insl
stos
popa
pop
add
jl
mov
mov
mov
or
loope
lds
out
stc
xchg
popf
and
push
sub
in
addb
inc
mov
pop
jp
adc
orb
pop
cmpsl
stos
mov
push
xchg
fcmovu
mov
cmp
sbb
push
dec
into
xchg
jb
xchg
roll
mov
sbb
cld
jp
xchg
ja
icebp
adc
push
xor
cmp
inc
sbb
adc
cli
mov
std
aam
and
sbb
sti
push
cli
dec
stos
xor
test
and
cmp
rcrb
lea
rorb
es
into
pop
dec
add
add
ja
fisubrs
hlt
xor
std
in
mov
in
aaa
mov
js
rorb
movsl
sub
ror
icebp
mov
sub
movsl
popa
test
popa
int3
pushf
sub
icebp
fs
invd
xchg
inc
xor
or
push
repz
dec
ja
xchg
int
mov
push
mov
aas
idivl
lret
lret
mov
dec
cmp
lods
outsl
push
imul
jle
inc
movsl
ljmp
int3
je
aad
or
push
popl
sbb
ret
xchg
add
ret
pop
mov
call
mov
mov
mov
sbb
std
push
adc
cli
int3
int3
popa
fstps
push
cmpb
push
cmp
mov
inc
and
inc
lods
mov
lock
cmp
xlat
mov
mov
rclb
xchg
inc
shlb
lods
lds
and
push
fwait
pop
out
les
mov
jns
cmp
mov
or
and
in
mov
mov
sbbl
and
nop
mov
nop
add
xchg
pop
xchg
jmp
add
jne
out
xor
bound
imul
sbb
adc
ret
pop
cmp
cwtl
jmp
cmp
sub
lock
enter
mov
or
or
xor
pushl
push
movsb
js
loopne
test
mov
aas
pusha
inc
push
mov
andb
add
mov
lock
inc
push
arpl
das
iret
dec
xchg
xchg
fdivrs
out
icebp
lret
aas
or
adc
insb
stc
dec
insl
inc
push
out
pushf
fisubrs
and
mov
jb
notl
fbld
pop
movsb
and
and
pushf
or
cmp
xlat
das
sahf
jg
pop
sbb
out
add
and
add
add
or
mov
pop
and
xchg
imul
icebp
xor
push
push
push
pop
in
negl
push
adc
push
dec
lock
inc
fstl
mov
or
pop
repnz
fucom
pop
and
lahf
fsubrl
popa
and
adc
and
fistl
xchg
pop
pop
insb
data16
std
lret
or
adc
xchg
adc
int
popa
out
mov
dec
leave
jmp
jnp
and
data16
lahf
fistl
add
rcrb
outsb
movsl
add
sub
lret
cwtl
push
into
or
outsb
add
dec
js
inc
lods
xor
popf
sbb
xchg
jno
test
mov
cwtl
inc
mov
jp
leave
jbe
push
insb
sub
mov
clc
ljmp
and
test
push
fs
aaa
add
dec
xchg
lret
in
sub
add
ret
and
cs
mov
cmp
and
xor
adc
and
int
jecxz
repz
xchg
sub
into
push
ret
mov
mov
or
les
inc
movsl
xor
dec
pop
pushf
sub
push
inc
aaa
mull
pushf
test
in
mov
cmp
aaa
pop
push
cmc
fptan
out
popf
loope
pop
push
lret
push
mov
mov
jg
repnz
aas
jo
pushf
add
cli
stos
adc
bnd
xchg
adc
fists
add
add
ret
fwait
inc
and
stc
jecxz
or
das
mov
ret
loopne
imul
pusha
push
xchg
repnz
shll
cmp
jl
mov
cmp
or
pop
pop
lds
dec
pop
and
ja
xchg
pop
mov
and
hlt
push
cmpsl
inc
nop
movsl
test
jmp
incl
xor
fisubs
inc
fists
fimull
xor
mov
xchg
cmp
nop
leave
lret
fcmovne
mov
std
int3
rcrb
int3
fisubrs
aas
lcall
and
jne
in
mov
push
aaa
jnp
xor
xchg
lods
mov
fnstcw
aam
jo
hlt
insl
adc
cmp
jecxz
in
addl
add
mov
xor
push
pop
mov
scas
mov
pop
mov
jbe
inc
fwait
imul
push
dec
cmp
outsb
pop
insl
push
cli
jge
cwtl
nop
iret
sbb
gs
or
push
cmp
sub
xor
ficoms
xchg
ljmp
subb
sbb
dec
and
xchg
push
push
cmp
lcall
addb
jnp
out
adc
cmp
cs
rolb
imull
jmp
cmc
or
cmpsb
sbb
arpl
cmp
cmc
pop
inc
addr16
cld
test
ss
mov
cmpl
mov
push
push
pop
das
add
pop
mov
mov
movsl
ret
pop
out
jns
rcll
lods
aam
scas
mov
jns
push
repnz
mov
jg
dec
jle
mov
add
outsl
or
out
int3
aas
ret
ds
int3
sti
cmp
int
std
xor
push
sbb
jg
mov
mov
xor
mov
jmp
pushf
mov
arpl
movsb
or
inc
pushf
sub
mov
shl
or
fcomps
scas
push
push
xchg
iret
cmp
outsl
fwait
xchg
shrb
pop
int3
bound
pop
adc
dec
es
push
push
sbb
std
dec
inc
fsubl
sbb
pop
and
addb
push
mov
repz
and
ret
clc
lret
ss
int3
out
movsl
or
mov
fnstenv
daa
in
icebp
cmpsb
push
out
mov
dec
xchg
aad
jae
imul
sub
lea
cld
and
lods
insl
negl
mov
mov
and
ja
stc
cmp
xchg
in
pop
push
push
fldl
in
sets
lock
inc
fisubs
js
mov
mov
cmp
fwait
aas
jb
aad
xchg
int
nop
fstp
mov
mov
pop
negb
push
pop
mov
mov
pop
add
mov
ret
jg
xchg
rorb
lods
xchg
cld
push
repz
fdivl
mov
sbb
or
in
cmpl
in
push
shl
iret
cmp
cmp
cli
sbb
test
push
rcrb
out
insb
inc
stos
hlt
rorl
popf
shr
or
mov
and
ret
lret
xchg
mov
adc
ret
sub
adc
push
movsl
cmp
adc
jecxz
mov
iret
push
push
jns
cmpsl
in
leave
add
aad
xchg
cmpsl
and
ss
fucom
cmp
inc
cmp
data16
xchg
lahf
xlat
jns
movsl
dec
jne
in
jl
cmp
xchg
mov
inc
stc
ja
xor
mov
mov
mov
into
jb
jne
or
shll
shlb
repz
addr16
dec
push
loopne
fbld
cmp
push
lahf
mov
cld
push
sub
lock
dec
stos
jg
mov
pop
mov
movsb
fdivl
stos
dec
jno
mov
pop
xchg
icebp
add
fstpt
mov
test
xchg
shl
stos
les
pop
inc
pop
cmp
inc
and
adc
cld
scas
lret
mov
xor
or
shlb
sbb
in
lds
test
stc
xchg
call
push
subps
sbb
or
bound
in
pusha
daa
scas
psubusw
testl
adc
or
leave
imul
mov
mov
push
in
fmuls
je
pusha
add
das
cmp
stc
push
shl
mov
pop
testl
scas
sbb
push
add
pop
mov
andl
rol
test
test
jne
leave
dec
test
adc
xchg
mov
pop
out
sbb
roll
out
decb
dec
xchg
or
adc
add
mov
xor
in
xor
pushf
mov
fistps
jge
loopne
cmpsl
jecxz
and
xchg
test
fs
fists
pop
mov
xor
mov
out
mov
and
mov
popa
mov
leave
loop
ss
push
push
data16
push
ja
cmp
stos
inc
jb
test
mov
xorb
ret
and
dec
sub
cmp
push
icebp
pop
or
push
push
in
leave
popf
pusha
inc
outsb
mov
clc
xchg
cmpsl
rcrb
add
imul
jne
ja
stos
sahf
push
add
bound
scas
mov
or
add
xlat
lock
jno
cmp
inc
dec
jne
dec
sub
out
pop
in
sbb
or
and
xor
mov
setle
leave
repnz
enter
dec
lcall
or
sbb
lcall
mov
push
sti
notl
mov
loopne
jno
cltd
repnz
out
pop
pop
shlb
sub
test
std
sub
xlat
outsb
in
mov
jb
adc
rcl
mov
les
jmp
xchg
lock
xorb
or
idivb
dec
insl
lgs
lods
adc
enter
sbb
pop
imul
je
mov
cltd
cwtl
or
popa
cltd
shlb
mov
cmpsb
jno
out
repz
shlb
nop
cmp
fistpl
rol
nop
sub
mov
ja
mov
jmp
out
dec
mov
xor
cli
dec
adc
stos
dec
ss
ja
add
call
imul
or
dec
icebp
and
popa
push
push
xor
mov
xchg
dec
imul
addr16
push
insb
lods
repnz
lea
test
les
mov
inc
mov
pop
fdivl
mov
pop
inc
and
cltd
pop
test
push
outsb
jnp
pop
cmp
aaa
outsb
lahf
movsl
jp
inc
test
or
ret
mov
add
pop
arpl
imul
jns
movsl
call
fwait
bnd
insb
xchg
ja
xor
jnp
inc
or
mov
fdivl
mov
inc
dec
inc
pop
cmpsb
xchg
add
fsub
loopne
pop
test
add
aam
sub
cmp
movsl
adc
xchg
popa
iret
mov
xor
inc
addr16
xchg
cli
stos
in
xchg
dec
sbb
dec
movsb
dec
aaa
mov
add
pop
out
lods
icebp
pushf
jae
xor
push
pop
cltd
movsb
xchg
jno
stos
sbb
jns
test
and
lock
in
inc
xor
adc
nop
or
rolb
push
mov
mov
mov
hlt
adc
rorl
pop
test
xchg
int
pop
ja
xor
imul
or
xor
xchg
adc
ficoms
push
jge
aas
add
inc
or
sbb
mov
xchg
cmp
aas
inc
fs
and
leave
loop
movsb
pop
inc
ss
or
shl
lods
in
lret
test
sbb
xor
and
sub
outsb
sbb
mov
add
cmc
out
mov
out
mov
gs
jmp
aas
call
rolb
push
mov
xor
push
push
imul
mov
pop
sbb
push
leave
sub
and
bound
jb
idiv
dec
or
pusha
pop
andl
repnz
divl
bound
mov
into
fldenv
xchg
int
mov
in
cmp
cmp
in
into
sarb
fbstp
outsb
sbb
push
es
and
pop
mov
dec
into
sub
mov
push
sbb
popf
sub
sub
lea
ja
cmp
mov
mov
dec
bound
pop
insb
inc
roll
lahf
dec
ja
adc
mov
add
mov
outsl
lret
mov
mov
push
jne
push
xchg
xchg
test
jne
cld
xor
sub
add
mov
push
aad
mov
es
xor
lret
jle
xor
loopne
pop
popf
arpl
leave
push
cmpl
jnp
xor
mov
push
jle
jnp
in
decl
adc
in
jno
mov
cmova
cwtl
push
mov
mov
mov
pop
cltd
or
stc
outsl
xor
dec
insb
jno
test
iret
enter
cmp
cmp
push
addl
rorl
ss
je
inc
aaa
out
call
outsl
pop
inc
ret
cmp
mov
or
mov
sub
enter
fnsave
into
incl
lret
dec
pop
xor
fistl
sub
pop
hlt
inc
les
mov
daa
xchg
push
mov
push
sbb
inc
outsl
inc
sahf
es
pop
lcall
cmp
fisubl
push
cmp
repz
cwtl
dec
jo
fisubrs
mov
xor
ficomps
out
or
insb
out
adc
ret
aaa
jae
sbb
or
aaa
xor
jg
xor
test
js
gs
push
xchg
fsubr
std
cmc
inc
mov
stos
jno
inc
scas
shll
cmp
pop
repnz
push
loope
out
and
jb
es
jecxz
jne
or
and
mov
inc
in
scas
movsb
dec
cwtl
jne
repnz
sarl
pusha
mov
stos
lock
cmpsb
aam
addr16
mov
push
lea
xchg
dec
xor
es
pop
mov
and
test
xchg
cmpsb
cwtl
enter
dec
fidivl
sbb
cld
iret
xchg
ret
in
inc
movsb
inc
jb
fdiv
mov
jne
lret
inc
repz
xchg
fildll
int3
xor
clc
dec
xor
xor
cmp
push
inc
xchg
movsb
or
sti
sub
fisubrl
xchg
xchg
cmp
xchg
lea
cmp
clc
jg
jl
inc
mov
aaa
out
mov
call
xchg
sub
mov
push
and
adc
loop
xchg
cmp
lock
mov
addr16
les
mov
dec
push
shll
lcall
inc
and
rcrw
insl
push
es
jl
nop
dec
cwtl
fstpl
int
faddl
jl
and
out
arpl
popf
aad
jg
jecxz
sbb
fwait
mov
cmp
adc
iret
and
xor
jb
lret
inc
mov
ffree
cmc
or
dec
aam
fnstsw
into
sarl
into
xchg
loopne
cli
dec
int
cmp
xchg
jmp
sbbb
mull
fsts
popa
jmp
push
in
jle
push
push
cmp
lods
sbb
cmp
and
aaa
rcll
daa
jns
shrl
mov
sbb
mov
push
mov
jmp
imul
or
shll
cmp
fistl
out
icebp
call
cli
cmpsb
xchg
mov
imul
sbb
insl
mov
mov
dec
jle
or
mov
jnp
imul
and
mov
add
xchg
mov
push
addl
jne
movsl
mov
aas
dec
cmp
mov
outsl
push
push
fcom
insl
inc
dec
jmp
or
jns
jne
sbb
push
add
lods
test
pop
and
mov
push
push
or
test
dec
pop
jge
cmp
cld
fmull
cmpsb
out
fildl
out
or
cmp
fs
push
pop
or
in
fidivl
mov
jge
repz
andl
stc
jge
ficomps
gs
rcr
jne
ljmp
xor
push
bound
icebp
in
pop
cmp
outsb
call
jmp
mov
xchg
int
dec
xor
dec
loop
pop
loope
loopne
stos
inc
inc
adc
dec
rolb
fwait
push
jo
push
or
popf
lret
jo
push
movsb
int3
cmp
gs
dec
mov
inc
push
and
push
fadd
dec
push
loopne
or
iret
adc
jne
xor
add
insb
scas
loop
xor
jnp
mov
outsb
aas
andl
les
fildll
shlb
test
xor
jbe
insl
and
ja
orl
arpl
dec
mov
adc
push
push
out
sbb
aaa
das
arpl
fs
xor
movsl
aaa
scas
xor
push
std
aaa
mov
cwtl
out
jp
lcall
test
dec
sub
xor
sahf
lea
jle
xchg
dec
xor
lea
in
imul
sub
ja
xchg
inc
ja
push
pop
out
scas
and
mov
adc
scas
cmp
inc
iret
or
std
dec
in
jp
loop
sbb
push
icebp
jg
jmp
mov
dec
adcl
lret
sub
or
inc
daa
pop
ret
add
mov
lret
dec
mov
mov
data16
out
xlat
pop
or
add
aad
and
cmp
out
pop
clc
push
loopne
enter
sbb
aas
cmp
lds
mov
pop
jge
and
push
or
mov
fbld
inc
cmpb
movsl
cmp
popf
inc
push
xlat
jb
inc
stos
dec
mov
sti
test
mov
lahf
into
mov
lods
dec
cmp
imulb
push
aam
mov
data16
and
mov
or
dec
into
xchg
push
in
scas
mov
cmc
in
sbb
stos
mov
xchg
jecxz
jbe
mov
imul
enter
xchg
dec
lahf
cs
xchg
jno
aas
sbb
adc
aad
loop
js
cmp
in
insl
xchg
lods
cmpsl
push
fwait
test
or
sbb
stos
jno
pop
or
je
cltd
adc
xchg
inc
push
fimuls
sbb
test
les
lea
mov
maxps
xchg
sbb
mov
testb
sub
xor
jne
movl
adc
loope
ret
or
add
inc
add
popf
ds
out
xor
push
and
sarl
in
mov
sub
popf
leave
sub
or
or
pop
adc
mov
rcrl
inc
ret
sbb
or
testb
jmp
cmp
xor
pop
sub
or
cs
jne
xchg
pop
mov
inc
cmp
and
dec
mov
mov
enter
xlat
rcrl
cmc
mov
sbb
sarl
in
cli
int3
xchg
loop
adc
ljmp
out
mov
inc
sub
in
pop
aas
mov
xor
loope
jnp
arpl
out
jge
fidivrl
sbb
add
popf
cmp
orb
add
mov
cmp
cld
movsl
add
stos
sbb
or
jl
push
xchg
xchg
add
xchg
inc
cmp
push
inc
jbe
enter
dec
negb
out
adc
xchg
test
in
xor
xor
inc
or
subb
mov
out
in
in
mov
mov
pop
lods
js
leave
repz
jle
stc
inc
insl
out
in
loop
jge
in
inc
movsl
filds
mov
push
cld
sbb
pushf
cmpsb
adc
imul
mov
ss
in
sub
loop
dec
lods
popf
push
cmp
lcall
shl
shlb
push
in
and
pop
adc
testl
in
jmp
add
inc
xchg
mov
xchg
enter
or
inc
push
popf
and
sbb
mov
scas
fwait
push
xor
lret
sub
je
jmp
push
xor
into
pusha
inc
sbb
arpl
imul
jmp
movsb
xchg
jb
in
dec
or
lcall
and
mov
insl
add
in
jne
push
js
das
je
adc
xchg
stc
cmp
jbe
mov
xchg
out
enter
push
mov
jb
test
out
dec
mov
adc
xchg
add
mov
or
jae
icebp
pop
adcb
push
ret
rcrl
fisttpl
or
xchg
inc
cmp
loopne
scas
jp
push
xchg
pop
fcoms
vpavgb
sahf
fcmovnb
dec
es
mov
ror
sbb
mov
icebp
pop
dec
inc
int3
xor
es
and
les
outsb
out
add
mov
out
or
leave
or
call
ljmp
and
test
lea
subb
cmc
pop
gs
lret
push
jp
xchg
mov
scas
imul
mov
out
fisubl
ljmp
je
jno
adc
jl
dec
fimuls
cmp
mov
push
lret
pop
sub
leave
mov
loope
sbb
sbb
lret
dec
pop
mov
mov
jge
test
sub
insl
cmpsl
pop
adc
mov
loop
sbb
lods
or
inc
repz
mov
xorb
jg
aaa
loopne
stc
enter
subl
pusha
pop
push
push
jmp
add
cmp
cli
push
push
jno
mov
fdivr
stos
and
pop
aam
cld
daa
int
cmc
pop
outsb
add
out
rclb
int
stos
jno
lods
mov
cmp
sbb
int3
xor
in
movsb
cmp
dec
sahf
subb
loop
jmp
sub
or
inc
ss
fsubrp
push
out
in
stc
lods
jnp
mov
or
scas
push
outsb
cmp
dec
mov
daa
leave
jnp
push
mov
xlat
xchg
out
mov
add
nop
jo
push
push
stos
mov
test
sahf
sub
insl
mov
or
loop
bound
and
pusha
test
add
pop
mov
test
sbb
mov
ficomps
adc
or
dec
pop
ja
xorb
sahf
int
ss
jge
ss
push
sbb
jno
fs
fcoms
ljmp
pop
dec
aam
js
int3
divl
add
jmp
int
cli
test
out
outsb
sbb
inc
push
pop
xor
cmp
mov
pop
outsb
les
pushf
fistpl
icebp
dec
jmp
xchg
adc
push
mov
jnp
mov
dec
cli
sub
cs
jp
mov
cmc
mov
mov
std
stc
insb
stos
mov
cmp
xchg
fwait
pushf
adc
fcomps
jne
xor
mov
pushf
pusha
outsl
push
inc
push
sub
jb
or
sbb
xchg
pop
xor
imul
xchg
call
popf
aas
pop
sbb
dec
sbb
mov
addr16
jae
add
dec
pop
iret
dec
xchg
mov
lcall
imul
mov
sub
outsb
roll
xor
or
scas
mov
andl
adc
cli
pushf
mov
sbb
jmp
xlat
shl
jmp
popa
mov
pop
sbb
cli
data16
imul
popf
cmp
adcl
test
push
frstor
mov
cmp
jno
cmpsl
test
lods
scas
stos
cwtl
movsl
adc
out
pop
int
xchg
inc
jbe
sbb
jp
shl
pop
sub
bound
jle
dec
fwait
lret
rclb
push
pop
outsb
loopne
mov
mov
inc
or
sub
inc
movl
push
loop
cli
push
insl
push
mov
pop
jb
test
push
test
addb
sbb
add
loope
loop
gs
add
xchg
xor
fldl
mov
xchg
mov
xchg
leave
mov
mov
cltd
data16
xchg
push
mov
popf
scas
push
ja
aad
ror
mov
leave
pop
shrb
and
push
xchg
jns
cli
sub
stos
mov
out
enter
insb
rcrl
pop
aam
or
andl
adc
pop
xchg
pop
imul
ja
popf
adcl
pop
or
push
adc
lods
test
mov
sti
mov
dec
adc
inc
sub
pop
lcall
xchg
push
mov
xchg
mov
imul
push
popa
sub
mov
or
and
mov
xchg
idivl
int
dec
cwtl
mov
dec
inc
inc
add
add
mov
xchg
pop
mov
pop
out
mov
jg
dec
lahf
xchg
cmpsl
mov
add
jmp
or
xchg
loop
data16
subl
sbb
xchg
cmp
cmc
dec
pop
push
add
pop
mov
fdivrs
stos
imul
cmpsl
cs
cmpsl
rclb
adc
sarb
fnstcw
sub
fdivrs
mov
inc
dec
insl
xor
push
sbb
es
or
pop
mov
faddp
int
dec
int
pop
fcomps
mov
jbe
fwait
repz
ljmp
inc
mov
add
fisttpl
inc
les
lcall
lea
or
inc
push
xor
in
mov
add
fs
xchg
test
push
ret
inc
pop
and
cmp
arpl
jno,pt
and
and
inc
mov
mov
pop
nop
imul
cwtl
cmp
push
sbb
pop
or
adc
add
lods
cs
jno
jl
pop
cmp
pop
stos
mov
cmp
and
divb
pop
cwtl
mov
outsb
mov
push
push
int
mov
les
daa
stos
movsl
xchg
dec
insb
mov
es
int3
cmp
xchg
mov
inc
leave
pop
stc
repnz
fsubr
imul
ficoms
push
lods
mov
jo
xor
pop
push
ret
iret
sbb
aam
lcall
std
or
in
arpl
dec
testl
mull
cmp
mov
cmpsl
inc
fisttps
push
js
pop
sti
push
lahf
sbb
inc
addr16
add
daa
mov
pop
lahf
lret
xchg
mov
xchg
lea
pop
sahf
out
add
xchg
aaa
test
push
jne
pop
and
mov
mov
sub
addl
push
cmp
xchg
shlb
test
jb
mov
pop
jns
jne
xor
lock
mov
mov
xchg
jne
adcl
sub
gs
sub
mov
stos
and
jg
xor
xchg
testb
clc
movsl
xchg
jne
jp
out
and
mov
mov
inc
rcll
imul
mov
loope
arpl
sub
ficomps
fsub
inc
lds
mov
out
xor
jnp
cli
out
in
mov
fwait
fs
hlt
lcall
idivl
cltd
fildl
int3
ss
add
cmp
sahf
js
cwtl
sbb
nop
pushf
lcall
mull
imul
adc
movsl
jecxz
jo
ds
mov
out
inc
into
stc
add
rorb
insl
pop
pop
inc
cmpsb
xchg
clc
stc
out
mov
sahf
pop
rclb
jnp
ficomps
scas
dec
dec
repz
xchg
xchg
inc
test
add
iret
test
idivb
sbb
cmp
lahf
adc
es
xchg
cmc
xor
lds
jnp
sahf
add
rorl
push
cltd
push
les
fcoms
mov
adc
mov
je
pop
jns
jmp
dec
mov
or
daa
or
pop
sub
je
and
xchg
sbb
lock
fiadds
jge
adc
int3
out
dec
outsl
les
or
mov
push
jle
outsl
int3
mov
in
test
lea
jnp
mov
into
ret
xchg
scas
fmulp
scas
pushf
aam
jmp
fisubl
imul
pop
mov
cwtl
aam
test
adc
or
mov
ljmp
sub
jbe
loop
lea
ds
gs
ret
rorb
imul
loope
mov
adc
sub
xchg
add
mov
fbstp
cmp
pop
and
inc
jmp
imulb
push
pop
test
mov
dec
stos
push
sahf
cmp
dec
notl
inc
add
cmp
into
das
mov
cmp
mov
and
in
fbstp
rep
adc
test
mov
sbb
jmp
lds
xchg
fistl
rol
shlb
cmpsl
fiaddl
pushf
cld
fcmovne
mov
inc
dec
jne
mov
mov
ret
das
hlt
add
cli
dec
xor
enter
inc
mov
cmp
push
mov
pop
mov
adc
lea
sbb
hlt
pop
mov
pop
cmp
pop
rolb
sar
jnp
cmpsl
popa
jecxz
mov
fwait
leave
stos
movsb
mov
add
leave
add
mov
inc
lea
insl
lds
pop
shr
outsl
jnp
sbb
and
mov
xor
xchg
mov
xor
pop
push
push
lahf
push
enter
adc
mov
divb
mov
out
sub
mov
gs
fsubl
aam
lock
lcall
mov
mov
pop
pop
cmp
dec
adc
jge
test
mov
pop
aam
inc
cmpb
orl
jae
lcall
push
cltd
xlat
gs
rcrl
lret
ja
pop
ja
shl
aaa
xchg
fidivl
retw
lods
or
emms
xor
bound
jbe
ret
into
ds
push
stc
jo
cmp
mov
test
inc
sbb
sbbl
or
mov
and
sti
lds
cmp
sub
mov
xchg
sahf
loop
adcl
jmp
dec
fmuls
sub
dec
adc
inc
xor
xchg
mov
push
fcmovu
mov
or
cld
push
or
aaa
mov
sub
push
sbb
je
mov
aas
icebp
test
out
orb
scas
fdivs
cwtl
daa
and
dec
movsb
rolb
push
jnp
mov
ret
imul
push
add
jbe
lds
movsb
scas
push
loopne
ja
pop
and
cld
aam
stc
mov
sahf
jg
and
and
mov
lcall
lcall
stos
mov
xor
ret
mov
aam
pop
lods
repz
outsb
sub
sbb
mov
jl
pop
movsb
xor
and
cmp
popf
loopne
jg
cmp
add
jmp
and
movsl
addr16
inc
ds
mov
push
dec
sub
inc
jne
jne
push
sahf
test
fimull
lret
dec
push
mov
xchg
xor
mov
or
mov
or
neg
inc
movsl
add
test
cmp
int3
es
mov
xor
scas
inc
rclb
shld
push
clc
mov
push
stc
push
cwtl
xchg
roll
and
cmpsb
push
add
sub
push
and
cld
je
js
push
gs
faddl
ficoml
mov
or
iret
scas
repz
sub
cmp
out
in
adcl
or
scas
popw
popa
jle
sub
dec
iret
fistl
in
testb
push
nop
and
mov
xchg
sbb
out
mov
movsl
outsl
les
arpl
stos
dec
dec
mov
testl
cmpsl
or
pop
out
and
ret
mov
stos
mov
repnz
push
xchg
mov
xor
dec
jle
in
and
cmp
ljmp
aas
pop
push
mov
lret
stos
sub
lea
mov
push
loopne
push
and
dec
cmp
dec
jle
scas
adc
mov
xor
or
je
xchg
hlt
ja
cmpsb
dec
jno
sbb
ljmp
icebp
inc
aaa
lods
jno
dec
sub
cmc
incl
out
mov
xor
jmp
mov
sbb
dec
scas
outsb
or
jecxz
push
mov
add
jl
jecxz
stos
loope
sar
jle
shlb
sub
or
stos
outsb
mov
ffreep
movsb
aaa
lcall
mov
jae
into
xlat
sbb
xchg
xor
in
or
jno
push
cli
scas
fistl
ficoms
sub
or
rolb
rcrb
and
fistl
xlat
pop
lahf
jo
aas
jno
fcmovb
imul
push
xor
sahf
iret
cwtl
or
sbb
pop
jnp
dec
push
pop
aam
ljmp
and
inc
mov
cmp
popa
inc
test
and
mov
shll
int
sbb
aaa
clc
pusha
out
pusha
mov
xor
adc
pusha
out
push
add
adc
and
adc
addr16
xchg
imulb
sbb
xchg
adc
cld
cmp
ret
mov
mov
sbb
push
outsl
dec
imul
scas
cmpsl
xor
push
addr16
data16
pop
out
sub
inc
push
in
arpl
rcrb
mov
imul
or
mov
add
cmpsl
fidivrl
xchg
mov
sbb
push
fisttps
inc
inc
push
add
add
aas
push
loop
mov
mov
sarb
dec
stos
xor
int3
mov
fs
bound
xor
or
insl
cmp
shlb
xchg
or
aad
ror
sahf
jae
xchg
es
sbb
cmpsl
mov
outsl
bound
movsb
cmp
pop
xchg
test
fcompl
nop
sub
mov
sbb
inc
push
dec
js
lahf
pop
mov
or
adc
adc
repz
icebp
xor
adc
lods
stos
lret
push
dec
lods
orl
test
das
je
lea
enter
pop
sbbl
stc
nop
xchg
sub
pop
sarb
mov
and
mov
mov
cmp
out
inc
mov
mov
and
fwait
insb
push
bound
mov
add
loopne
repnz
das
push
inc
pushl
insl
adc
mov
mov
movsl
adc
outsl
cli
xor
aas
jge
sbb
divl
adcb
insl
and
in
lret
mov
hlt
push
mov
mov
leave
xchg
inc
fwait
outsb
aaa
bound
out
mov
ret
cwtl
cwtl
jl
push
xchg
jno
lea
jle
in
insl
scas
mov
push
jecxz
jb
pop
gs
dec
imul
scas
or
mov
sub
pop
stos
push
imul
pusha
mov
xor
lcall
out
out
loope
minps
dec
cmp
pop
ljmp
xchg
mov
cmp
add
jb
sbb
push
rolb
cld
inc
loopne
add
lcall
adc
push
in
inc
xlat
xor
or
shll
das
push
addl
dec
sbb
imul
movsl
iret
dec
mov
jle
inc
stos
ja
call
lods
dec
jbe
pop
mov
mov
fsts
xchg
push
jb
jg
rcrl
inc
sti
fimull
lds
pop
mov
add
xchg
insl
jns
and
fiadds
push
popf
xor
pop
pop
sub
inc
in
push
mov
dec
in
lret
outsb
push
add
neg
jg
ds
lea
jmp
jecxz
sub
lahf
mov
push
aam
xchg
mov
scas
pop
je
push
cmp
xor
imull
dec
cmpsb
sar
cmp
hlt
pusha
aas
jb
ja
mov
jmp
fs
mov
or
repz
pop
xor
sub
daa
adc
cmp
cld
out
add
xor
sub
xchg
lds
int3
mov
push
mov
inc
adc
adc
and
pop
addr16
jl
jb
mov
inc
or
cmp
lret
int3
add
lods
jo
cmpsl
push
jb
push
arpl
push
xchg
add
mov
mov
adc
movsl
fnsave
mov
xchg
popf
mov
fdivl
push
push
pop
mov
hlt
mov
jmp
dec
ss
aad
fsubrl
xor
rolb
ljmp
inc
cmp
aas
shrb
mov
dec
mov
xchg
mov
xchg
test
inc
aad
shl
lock
xchg
push
mov
mov
sub
mov
ljmp
popf
cld
clc
push
sub
and
frstor
jb
pop
mov
xchg
or
lea
cmpsb
jnp
mov
test
lock
dec
jne
inc
test
leave
shlb
pop
xor
push
xor
imul
and
xlat
gs
pop
mov
je
push
enter
call
sbb
cld
mov
add
dec
dec
and
imul
ret
cmp
inc
insl
and
loop
push
push
inc
dec
sahf
neg
mov
jecxz
push
ret
add
sub
xor
mov
push
stos
movsb
inc
lret
lret
mov
test
mov
out
mov
fidivrs
mov
jecxz
jne
and
xlat
and
out
lock
and
aad
mov
dec
mov
inc
sbb
adc
adc
movsl
sbb
add
loope
jg
mov
xchg
adc
jp
fwait
das
pop
mov
in
inc
fidivrl
pop
sub
std
out
fadd
add
mov
cmpsl
popf
pop
push
sbb
push
or
fxch
or
hlt
out
mov
or
jmp
or
push
cld
lahf
lret
inc
jnp
and
sbb
fstpt
pop
adc
cmpsb
stos
adc
sbbb
sub
fnsave
sbb
aad
addr16
dec
je
arpl
sub
test
js
in
sub
sub
mov
cmp
dec
cli
inc
xorl
jae
lds
lcall
imul
fldenv
sub
enter
sbb
push
notb
sbb
dec
add
andl
cld
aad
shlb
push
sub
and
stc
in
adc
insl
push
cmpsb
adc
mov
lock
mov
ljmp
out
sub
in
movsl
lcall
inc
inc
mov
dec
je
mov
sbb
pop
cmp
mov
cs
push
xor
lcall
mov
jmp
adc
ljmp
cltd
cmpsb
ja
jmp
movsl
cwtl
cmp
cltd
rcrl
xor
sub
imul
mov
cmpsl
aad
xchg
and
jb
jbe
les
jge
ljmp
pop
es
sub
daa
addb
imul
test
push
mov
repz
cmp
enter
aad
outsb
push
or
into
in
sub
sbb
ljmp
mov
rolb
mov
add
jb
pop
les
ja
in
insb
xor
jb
inc
adc
push
push
stos
fwait
sti
xor
cmc
mov
aad
lret
pop
fmul
dec
fsts
mov
push
cli
ret
mov
gs
jns
adc
cli
adc
xor
std
jo
or
mov
jp
fcompl
push
mov
cmp
dec
mov
outsb
jmp
in
mov
outsb
xchg
insl
mov
in
jbe
daa
xchg
adc
daa
pop
sub
in
push
and
sbb
inc
pop
ret
or
inc
mov
mov
dec
xchg
outsl
mov
jl
adc
mov
push
xlat
ret
stos
or
test
int3
mov
iret
mov
outsb
push
inc
mov
stos
pop
gs
jmp
xor
icebp
push
mov
dec
mov
cmc
cmp
rol
cmp
pusha
adc
push
clc
pop
leave
mov
imul
mov
stos
push
adc
pop
lock
jb
jbe
cmp
mov
ret
pop
bound
dec
jae
dec
sub
inc
popa
mov
imul
fcmove
out
mov
push
and
cmp
out
stos
jns
sub
jns
cmp
call
mov
sbbl
mov
stos
repz
inc
mov
xor
imul
or
popf
std
out
inc
stos
icebp
inc
sbb
cmp
pusha
pop
lods
std
pop
cmp
ja
int3
pop
sbb
imulb
and
mov
stc
inc
inc
jmp
jecxz
mov
cmp
xchg
mov
mov
out
int3
sub
and
sahf
inc
jle
les
dec
cld
test
mov
or
pop
cmp
inc
js
inc
dec
les
dec
in
add
cmp
mov
push
fwait
mov
or
inc
adc
ret
sbb
or
rclb
inc
jns
mov
shl
clc
or
xchg
mov
call
and
arpl
pushf
outsl
movsb
lock
cltd
sarb
xchg
outsl
push
jmp
add
cmp
insb
lret
leave
mov
push
sub
loop
fldcw
or
pop
leave
xchg
ret
push
push
ret
sbb
lods
jo
mov
or
adc
mov
inc
je
mov
pusha
clc
inc
scas
vmptrst
mov
cwtl
cmc
testb
sub
outsb
mov
jg
gs
inc
and
lret
jb
repnz
add
sbb
in
and
loopne
jno
xor
mov
xlat
lahf
and
lret
xchg
repnz
aas
movsb
pusha
aam
adc
cmp
mov
add
dec
int3
dec
xor
mov
lea
dec
mov
sub
inc
hlt
adc
jae
ljmp
pop
mov
aaa
jo
outsl
imul
icebp
int
jle
ret
push
cli
scas
sti
adc
ljmp
xor
js
mov
pop
push
push
lods
movsb
cmp
or
dec
xchg
js
adc
jecxz
into
pop
leave
inc
sbb
and
adc
fisttps
inc
lret
add
sub
push
mov
int
imul
sbb
cmp
hlt
repnz
xchg
enter
sub
or
mov
dec
pop
jbe
aas
insb
mov
lret
mov
xchg
or
leave
xchg
sub
loope
repnz
sbb
or
cwtl
mov
and
sub
loope
push
push
or
dec
sbb
pavgb
sbb
addb
cmpsl
adc
xor
xor
rol
int
add
aaa
or
lods
pop
aas
decl
lods
or
cmp
push
xchg
jmp
fsub
and
fistpll
loop
loop
cld
movsb
aad
push
jle
sub
xchg
jb
pop
pop
leave
mov
loope
fists
and
cmpsl
xor
sub
sbb
jo
loope
mov
mov
pop
rolb
cltd
xchg
jge
pop
fadds
rcrb
negl
gs
orb
xchg
lcall
fst
push
je
dec
gs
lock
xor
pop
ret
fistpll
data16
sbb
add
dec
xor
jmp
test
push
xor
sbb
repnz
jno
out
outsb
jbe
mov
sub
into
jbe
sbb
jb
pop
mov
mov
sub
cltd
dec
stc
arpl
add
out
clc
dec
icebp
mov
dec
pop
leave
adc
adc
push
lret
mov
cmpsb
pusha
incl
gs
insl
xchg
loope
repnz
repnz
repnz
push
inc
ja
clc
xchg
aas
inc
sub
jg
lock
arpl
icebp
mov
and
cmp
out
addr16
cmpb
sbb
jns
sbb
add
stos
enter
mov
lahf
push
cmove
mov
rolb
mov
fwait
mov
bound
mov
pop
outsl
push
sub
adc
loope
scas
sarl
and
sbb
dec
sarw
bound
xchg
fisubl
pop
xchg
cmp
cltd
pop
outsb
loopne
dec
ret
jne
xor
js
jl
mov
lahf
mov
mov
das
pop
jbe
mov
pusha
loope
bound
sahf
lret
push
dec
cmp
dec
inc
stos
mov
inc
and
js
cld
add
xor
aas
mov
je
les
dec
out
rolb
sub
pop
bound
add
mov
and
and
xor
enter
sub
into
push
adc
sbb
push
and
add
mov
sub
jne
bnd
pop
mov
leave
dec
push
jecxz
rcrl
push
mov
lret
ss
std
jne
roll
sub
pop
jmp
inc
mov
in
xchg
mov
mov
mov
add
into
mov
cmp
in
cmp
aad
cmp
repz
mov
xor
sarl
add
dec
sbb
adc
mov
pushf
inc
stc
and
in
rolb
pop
push
lret
jo
adcb
lods
inc
mov
xchg
call
addr16
ds
add
lds
jne
jg
inc
ret
pop
out
or
and
out
push
sti
int
sbb
adc
out
jnp
or
jns
adc
test
add
enter
nop
in
repz
mov
les
iret
mov
jmp
cmp
sahf
les
xor
cmp
adc
cmc
pop
inc
fnsave
loopne
cmc
xlat
mov
jmp
mov
xchg
cld
pop
jp
orb
test
and
les
push
pop
cmp
pushf
jo
test
cmc
dec
xor
les
sub
cmp
xor
js
and
into
mov
or
push
repz
mov
xor
lret
pushl
mov
cli
je
pop
stc
inc
nop
mov
and
movsb
cwtl
into
push
sbb
push
jg
add
cmc
pop
and
jp
or
insb
fldt
dec
dec
pop
fidivs
aad
add
push
inc
fwait
xor
add
mov
cli
mov
out
lods
or
xchg
pop
pushf
sbb
lds
or
es
fists
push
jno
add
xchg
push
cli
push
imul
sti
sbb
sub
and
inc
or
mov
rol
and
shll
mov
in
or
fidivrl
jecxz
push
jbe
push
or
jl
sbb
or
xlat
test
outsl
mov
mov
pop
scas
pop
inc
cmp
dec
mov
ss
stos
aaa
xor
test
rorb
pop
add
test
jmp
cld
dec
inc
je
mov
xchg
inc
outsb
adc
jbe
adc
lea
mov
scas
dec
sti
arpl
nop
in
into
aas
cwtl
cli
clc
and
cmp
mov
add
or
mov
dec
xor
mov
jb
add
outsb
cmp
jg
push
sbb
mov
fdivp
cs
aaa
add
stos
shlb
aad
or
jmp
jnp
xchg
pop
sub
adc
jns
adc
sbb
and
lret
dec
int3
fistpl
jecxz
cmp
adc
ljmp
xchg
shl
add
iret
sahf
sub
fldenv
scas
sub
mov
fmuls
loope
fsubrs
negb
fadds
xchg
lds
call
out
loop
adc
mov
jmp
adc
push
xchg
pop
add
jl
inc
cwtl
mov
xor
inc
or
in
and
xor
mov
leave
and
push
or
shll
std
xchg
add
clc
das
mov
and
ja
adc
je
xor
lcall
loopne
xchg
das
ret
cli
mov
jno
xchg
test
xlat
mov
jnp
dec
inc
insl
push
mov
mov
push
hlt
jg
cmp
add
sahf
xchg
adc
stos
sub
popf
jecxz
mov
mov
push
imulb
inc
jbe
or
not
lods
xor
inc
pop
or
cmpb
push
in
mov
cmp
jecxz
pop
fwait
and
frstor
dec
mov
jns,pt
pop
sub
xor
mov
cmp
clc
jecxz
add
and
test
leave
xor
sbb
jle
mov
outsl
mov
mov
pop
xor
in
jmp
fstpl
sub
mov
cmpsl
xchg
push
push
int
xchg
or
ja
push
pop
shl
xor
xchg
xor
or
subl
outsl
repz
pop
mov
mov
cmp
fisubrl
push
xor
sbbl
xchg
mov
outsb
loope
hlt
push
call
push
or
out
mov
push
xchg
sub
and
jns
adc
adc
lret
mov
inc
cmp
dec
mov
lcall
dec
aaa
por
jnp
punpckhbw
ret
mov
jle
test
sbb
mov
xor
mov
push
cmp
ds
lods
inc
pop
insb
gs
cltd
movsl
fucom
ss
mov
aad
mov
movsl
mov
mov
lea
push
push
jb
push
sub
pusha
mov
ret
sarl
jae
adc
adc
mov
cmp
and
mov
mov
jb
mov
push
push
adc
cli
imull
adc
scas
adc
repnz
fisubl
test
or
rorb
or
adc
xor
inc
loope
cwtl
dec
les
pop
and
mov
sahf
mov
ss
inc
les
jno
hlt
stc
xor
in
mov
cmp
jecxz
mov
cmp
jb
cmc
jae
xorb
loope
imul
mov
sbb
ret
push
xchg
pop
mov
xchg
pop
imul
adc
push
pavgb
xchg
cli
in
test
and
and
iret
movl
popa
xorl
lret
jnp
dec
subl
adc
imul
pop
pushf
sub
lea
inc
mov
cmp
xchg
cmp
xchg
sahf
mov
movsb
out
push
jg
call
sti
in
pushf
ret
xchg
stos
lds
dec
push
mov
push
inc
pop
insb
lcall
push
inc
pop
mov
mov
push
push
bound
jecxz
add
push
or
aaa
ds
jg
push
pop
pop
mov
pop
call
rcr
mov
sbb
jae
dec
iret
dec
pusha
push
call
dec
jbe
sbb
push
lcall
repz
dec
stc
stos
cld
in
inc
sub
movsl
jmp
inc
out
dec
push
cs
fincstp
xchg
mov
pop
ficomps
and
mov
mov
jnp
movsb
or
pop
sbb
sbb
pop
sbb
and
cld
cli
into
jle
cmpsb
push
std
jo
ret
pusha
cmp
stc
mulb
cltd
mov
sub
sub
dec
lea
cli
cmpsb
add
mov
push
pop
mov
sub
lock
and
je
fisubs
xchg
mov
ss
sub
iret
in
pop
or
push
jnp
pop
push
sbb
mov
out
xorb
mov
int3
xchg
sub
pop
sub
push
popf
or
mov
out
mov
aad
pop
pop
mov
stos
jno
add
imul
mov
or
mov
les
sti
sbb
stos
scas
or
int
ljmp
lahf
pushf
pop
movsb
test
cmc
nop
add
jnp
mov
js
jbe
std
adc
fs
push
aad
cltd
pop
shlb
pop
and
sbb
rclb
sti
sbb
push
cmp
and
pusha
cmpsb
jl
xor
imul
leave
and
imul
loopne
jle
imull
cltd
adc
push
lahf
orb
inc
dec
stc
mov
vmwrite
gs
int3
mov
stc
outsl
cli
mov
xchg
in
sbb
insb
mov
mov
cmpsb
test
ds
inc
popa
sbb
das
out
inc
loope
push
dec
and
and
es
cmpb
mov
mov
clc
out
movsl
incl
insl
push
addl
stos
push
sti
jno
push
scas
or
mov
mov
lret
inc
jns
repz
clc
mov
sbb
or
cmc
gs
inc
jp
adc
fsub
ret
adc
pop
aad
mov
clc
call
xchg
testl
out
aam
scas
fstpt
lock
cmp
pop
shrb
test
or
pop
jne
daa
inc
rorb
pop
jno
adc
xor
xor
xchg
xlat
popf
and
sbb
mov
adc
sbb
and
sub
jns
loop
mov
loope
gs
adc
std
lock
icebp
cmpsl
and
jb
mov
cmc
cmp
jl
mov
fldcw
bound
mov
cld
mov
aad
push
out
add
and
dec
add
cld
xchg
dec
loopne
cmp
mov
push
out
xor
fdivrp
iret
subb
lods
rclb
dec
fadds
push
xlat
jp
pop
cmc
inc
out
pop
mov
mov
scas
sub
or
test
and
pop
ljmp
popa
popf
push
jae
cli
pop
call
push
ret
mull
dec
pop
inc
add
add
add
xchg
add
lods
mov
push
mov
sahf
push
inc
lea
mov
xor
dec
and
shrl
jno
repnz
and
jge
and
pop
xchg
mov
jp
jo
mov
hlt
push
mov
xchg
xorl
repnz
fimull
and
aam
push
in
data16
sahf
jp
fwait
inc
pop
pop
idivb
js
lds
rolb
inc
or
push
movb
icebp
sub
js
loope
jg
dec
popa
shlb
fwait
cmp
test
adc
lcall
pop
mov
jmp
mov
jecxz
dec
clc
pop
jb
imul
cmp
pusha
in
mov
and
and
repnz
aaa
pusha
jo
jle
lcall
cmc
mov
ret
mov
push
pop
adc
jae
mov
test
mov
sub
test
xlat
add
jb
fsts
and
inc
out
popa
in
pushf
int3
and
jnp
xor
daa
mov
scas
add
push
sbb
andb
adc
aas
std
sbb
xor
jp
xchg
pop
xchg
stos
dec
data16
bound
mov
dec
les
mov
mov
in
sub
mov
rol
fdivrl
dec
popf
mov
rclb
inc
or
cltd
in
push
std
jne
jbe
fisttps
push
push
mov
add
dec
inc
je
arpl
xor
mov
or
xor
pop
or
idivb
jge
xor
push
hlt
sbb
ss
or
inc
int3
or
mov
mov
fcmovnb
push
lret
add
cmp
jno
lret
pop
int3
adc
inc
dec
lea
add
adc
ret
outsl
divl
sbb
into
cmpsb
mov
xor
bound
jl
inc
and
nop
mov
nop
call
and
cs
dec
dec
movsb
addr16
out
adc
idivb
ljmp
push
in
lahf
xchg
cld
and
test
mov
mov
jg
mov
adc
in
ss
repz
xchg
push
add
mov
cwtl
pop
mov
inc
sti
add
add
push
ds
pop
sahf
dec
sbb
les
jnp
fnsave
iret
xor
and
cmp
adc
clc
outsb
fistl
dec
inc
fisubl
dec
xchg
dec
xchg
stc
mov
and
lcall
add
inc
jne
pop
int
mov
mov
cmp
andl
or
cmp
lret
scas
fsubr
dec
mov
and
sub
or
lock
add
dec
loope
xchg
and
adc
xchg
in
insl
inc
adc
mov
or
adc
jl
shlb
negl
mov
mov
js
pop
fisubs
inc
popf
inc
mov
out
and
mov
xchg
mov
fsts
cmp
scas
xor
filds
add
add
ds
outsb
xor
mov
jb
out
outsl
xchg
mov
pushf
shrb
adcb
inc
add
sbb
clc
lcall
mov
pop
fcoms
fwait
xstore-rng
cmpsl
sbbb
rep
lret
xor
mov
sub
lods
stos
mov
incb
out
subl
ja
test
rolb
fsin
test
cmp
pop
or
in
sub
sub
sahf
cmp
cmp
mov
repz
popl
add
aaa
adc
pop
mov
repnz
jp
or
jbe
push
push
out
stos
ds
xchg
test
cmp
jno
fidivrl
outsl
dec
lea
divl
mov
outsb
jns
dec
sub
ljmp
mov
mov
fs
popf
jbe
xchg
xor
aad
sbb
jns
push
arpl
imul
sahf
or
sahf
fimull
pop
aas
and
icebp
cmp
das
cmp
outsl
xor
jnp
and
adc
push
mov
sbb
mov
push
das
mov
cli
sbb
sub
mov
lret
or
sub
push
xor
dec
dec
nop
jecxz
push
cmpsb
mov
cli
and
mov
cltd
cs
sahf
leave
lock
jbe
sbb
jle
addl
lahf
jmp
sub
jae
insb
dec
push
negl
repz
xchg
mov
dec
dec
js
jbe
cmpsl
mov
pop
jne
cs
sbb
rol
dec
push
ljmp
jle
jns
mov
iret
mov
jge
sahf
pop
nop
push
adc
push
test
and
mov
adc
xor
mov
mov
shrl
mov
into
fcoms
gs
inc
and
and
shll
lahf
fsts
mov
inc
mov
xchg
call
mov
outsb
cld
fldt
cmp
fcomps
pushl
imul
pop
pop
popf
add
jae
mov
in
add
jnp
lahf
pop
test
fldenv
lods
adc
xchg
cmpsb
xchg
sbb
out
pop
mov
or
dec
pop
jge
xchg
out
mov
mov
inc
sbb
push
fiaddl
sti
loopne
adc
sarb
mov
frstor
add
dec
or
xor
fdivs
sub
push
mov
je
and
arpl
arpl
mov
push
mov
jnp
test
and
dec
cmp
or
dec
jle
push
ja
sub
in
mov
dec
push
sub
int3
mov
mov
jmp
xor
mov
jb
mov
sbbl
aaa
push
fdivr
rclb
ret
pop
mov
adc
movsb
mov
stos
movb
jae
pop
lea
mov
into
fimull
sarb
mov
cwtl
jl
mov
xchg
arpl
insl
fdivp
js
pop
hlt
fbstp
lcall
sahf
pop
and
into
mov
cmp
out
cmp
mov
mov
mov
cs
lds
fwait
push
or
in
push
push
jns
jmp
fsts
mov
inc
out
dec
add
cmp
adc
test
iret
cmp
push
add
pop
testb
les
push
shr
xchg
stos
dec
xchg
out
cmpsb
inc
push
push
int
sbb
jecxz
data16
dec
cmp
lods
insb
push
xor
bound
enter
adc
cli
xchg
or
cmpsl
fnstcw
fimull
aam
mov
imul
mov
aas
and
push
dec
lods
rcll
fbld
sahf
and
neg
mov
adc
repnz
loope
or
jg
daa
mov
inc
push
dec
xchg
bound
scas
addb
or
repz
aas
mov
push
repz
repz
mov
xchg
push
es
sub
aam
inc
repnz
insb
jno
jmp
popa
fmuls
cli
loop
mov
mov
scas
push
sbb
filds
push
adc
cmp
clc
nop
xor
lahf
fwait
lret
mov
cld
es
cwtl
push
jnp
lret
cmpsb
or
or
jl
xor
mov
daa
lods
or
mov
mov
sbbb
pop
jge
stos
inc
mov
xchg
fistps
push
mov
divl
lahf
sub
inc
or
test
out
stos
inc
xchg
cmp
imul
in
lret
ljmp
arpl
mov
mov
lods
shrb
add
jecxz
jae
leave
ss
cmc
mov
push
push
out
and
xchg
lret
push
andl
sub
mov
scas
sbb
sbbb
or
cli
aad
mov
jnp
movsb
xchg
cs
in
orb
popf
sarb
sub
add
mov
out
mov
cld
int3
aad
ficompl
inc
mov
lods
jae
imul
add
stc
imul
xchg
xchg
cmp
insl
cli
mov
push
sub
ficomps
hlt
adc
cmp
pop
mov
clc
popf
movsl
lock
sub
and
cmpl
dec
jp
fimull
xor
repnz
mov
push
lret
out
int
test
jecxz
jge
mov
sub
xchg
pop
adc
pushf
fsub
xor
xor
dec
lds
loope
fldl
movsb
sbb
loopne
rcll
xorl
push
loope
cmp
adc
ljmp
stos
adc
cmc
in
push
je
inc
scas
pop
iret
pop
shlb
cltd
mov
enter
mov
rcrl
jb
es
pop
sub
mov
adc
repnz
ljmp
gs
adc
mov
push
sub
mov
in
dec
sbb
jbe
cmp
in
mov
rorb
sub
mov
xlat
orb
xlat
stos
mov
hlt
or
je
imul
add
insl
mov
sub
pop
mov
jmp
arpl
test
movsb
sub
pop
enter
push
inc
fisubs
and
sbb
cltd
repz
sbb
pop
flds
or
popf
fistps
cmpsl
lods
scas
dec
in
sbb
lds
in
fisttps
inc
mov
xlat
sub
xor
dec
push
xor
lret
adc
cwtl
fwait
dec
rol
mov
and
adc
cmpsb
jmp
test
mov
cs
enter
mov
lds
data16
fwait
hlt
add
mov
cmp
les
adc
cmpsl
dec
subb
add
add
mov
or
xorl
sub
push
rcll
inc
fisttpll
loopne
movsl
lods
or
xchg
push
push
jno
jl
jo
fs
jmp
add
loop
push
pop
sub
mov
push
add
jbe
xchg
lahf
mov
xor
mov
sti
push
ret
mov
sub
stc
push
leave
jl
dec
mov
idivl
lret
filds
or
leave
push
dec
sub
mov
imul
fcomps
mov
add
push
and
cwtl
adc
push
outsb
jmp
push
outsl
mov
aad
cmp
xor
dec
std
sub
fnstenv
in
pop
cwtl
fisttpll
lahf
mov
jnp
shll
and
adc
loop
sbbb
andb
lcall
push
pop
pop
push
out
push
sbb
cld
imul
mov
scas
jge
enter
inc
sbb
mov
call
jge
lods
mov
fists
ffree
xchg
shr
pop
inc
dec
sbb
ljmp
arpl
and
and
rcr
push
int
or
dec
xor
adc
shlb
mov
sbb
mov
fwait
sbb
loop
pop
int3
cltd
add
das
or
fstps
sbb
in
pop
mov
adc
inc
fmull
inc
aaa
jne
out
mov
lock
popa
stc
jge
and
in
rol
or
scas
jb
popf
adcl
cli
cmp
mov
jne
push
int3
add
std
or
pop
mov
push
out
int
dec
xor
or
mov
jp
mov
stos
dec
jo
cltd
mov
sbb
add
ret
jno
cs
mov
jb
jns
mov
jle
in
enter
es
in
sbb
mov
outsl
call
imul
scas
or
mov
mov
lahf
fisttpll
pop
dec
iret
sbb
mov
add
push
add
sahf
test
pop
dec
cmp
xor
les
adc
jp
fmuls
xchg
aas
dec
and
mov
iret
sub
fiadds
add
jl
push
aad
hlt
dec
mov
scas
andl
cmpsl
sbb
inc
sti
sub
int
pop
xchg
fwait
xor
enter
movsl
push
add
mov
jmp
or
sbb
dec
mov
and
test
inc
movsl
push
push
dec
sbbb
pxor
insl
mov
push
mov
dec
fadds
jmp
and
leave
out
aad
push
push
lahf
cmpsb
or
add
loop
or
jl
fwait
int3
hlt
aad
rcrl
jae
dec
subb
idivb
jge
inc
repnz
dec
call
xor
jecxz
out
mov
popf
call
je
dec
mov
mov
decb
push
or
in
push
sbbb
or
jo
imul
xlat
sar
nop
ja
popa
icebp
or
clc
pop
cmp
jns
out
imul
inc
out
imul
test
xor
mov
jno
in
xor
test
aam
in
pop
mov
daa
loop
jnp
inc
sub
test
jne
xor
je
aad
roll
xor
lds
xchg
push
sbb
je
mov
mov
loope
mov
xchg
ret
pop
cld
jnp
pop
call
scas
xchg
outsb
cmp
pop
mov
mov
dec
push
popa
cmp
jg
and
mov
ds
mov
cmpsb
bound
and
cwtl
cmp
imul
cli
jb
loopne
rolb
fstpl
imul
and
mov
hlt
mov
adc
movsl
in
dec
mov
scas
out
adc
dec
or
adc
jecxz
addl
mov
adc
inc
call
pop
and
or
popa
mov
or
cld
ljmp
xchg
mov
push
push
dec
mov
loop
dec
add
push
xor
sbb
icebp
inc
test
xor
inc
sbb
mov
pop
push
hlt
push
push
and
repnz
add
cli
rolb
and
pop
and
lret
lock
in
mov
sub
gs
jg
hlt
mov
dec
out
cltd
lds
push
adcl
shlb
bound
push
iret
xchg
jns
mov
fcmovne
pop
nop
dec
mov
cltd
loope
cmp
xor
nop
cmp
fucomi
fwait
push
or
pushf
in
mov
jns
aam
ret
std
int
scas
mov
into
cwtl
dec
mov
dec
sub
sub
movsl
data16
pusha
out
push
push
add
mov
mov
lock
lret
xlat
imulb
icebp
sbb
lret
mov
iret
outsb
adc
xchg
out
lahf
ret
inc
lcall
movsb
cmpb
je
mov
dec
loop
in
inc
cmp
jb
inc
outsl
cmp
pop
cmpsb
push
sub
push
mov
pop
jl
pusha
adc
sub
mov
sub
repz
xchg
in
add
xchg
xor
jnp
mov
js
add
xchg
sbb
imull
push
jno
adc
test
mov
imul
inc
call
mov
ret
clc
cwtl
xor
in
push
push
adc
call
fstl
insl
icebp
subb
mov
mov
add
add
stos
and
mov
pop
push
hlt
mov
pop
pop
in
pop
rcl
fsubr
fisubrs
shrb
sarl
fmuls
add
adc
cmc
dec
enter
sbb
cmc
dec
cmp
data16
leave
mov
popf
and
ret
insl
int3
pop
sti
jbe
jno
dec
popf
iret
push
dec
mov
out
jmp
nop
aaa
adc
in
shll
cmpsb
sub
lods
in
or
dec
sub
cmp
mov
sub
lret
fnstsw
cmp
inc
movsb
dec
mov
xchg
cmp
jmp
fdivrl
das
cmp
clc
inc
and
out
push
xchg
ret
add
cmpsb
xor
push
sub
test
inc
add
bound
push
inc
dec
inc
test
lret
xlat
imul
sub
fcomp
and
mov
cmp
pop
add
enter
sub
loop
fcos
inc
mov
xor
mov
gs
repz
pop
adc
ss
cmp
inc
pop
push
mov
shl
cs
lods
cmp
mov
fstpl
ffreep
push
mov
lods
sbb
loopne
mov
cs
stos
or
outsb
pop
adc
fmuls
scas
stos
mov
hlt
jo
arpl
aam
testl
fcompp
je
scas
fnsave
push
fists
test
lcall
xchg
xchg
iret
fst
mov
aaa
cmp
inc
cli
or
daa
lret
xor
pop
pusha
fiadds
add
push
loop
sub
or
lret
std
add
cmp
mov
enter
mov
sub
mov
sub
cmpsl
arpl
pop
scas
fsts
sub
loop
lcall
or
lock
xchg
jno
movsl
in
xchg
roll
imul
mov
mov
sub
arpl
dec
mov
ror
cs
loop
jns
mov
or
sti
rcll
dec
divl
bound
push
addb
lea
mov
add
aas
cmp
mov
fwait
pop
dec
shl
addr16
mov
leave
mov
test
in
outsl
stos
mov
inc
sarl
cmpsl
in
adc
jmp
mov
stos
dec
push
fcomi
mov
in
test
aad
adc
or
mov
mov
xchg
test
je
fcompl
sti
dec
out
ror
mov
nop
add
adc
pop
ss
mov
sbb
das
add
pop
ljmp
mov
sti
cltd
cmp
je
sarl
or
inc
mov
jb
jne
sahf
clc
cmc
mov
scas
adc
mov
sbb
and
pop
in
mov
mov
jnp
sbb
sarb
lds
push
dec
mov
or
outsl
and
mov
sahf
in
cmp
jnp
nop
adc
call
in
jle
jl
mov
test
lcall
jno
mov
ss
push
sub
mov
push
lea
pop
xchg
mov
xor
stos
push
je
jg
sti
mov
adc
aas
es
test
pop
push
inc
xorl
add
lea
mov
mov
jb
popf
aad
mov
test
dec
hlt
dec
xor
inc
jge
insl
xchg
movsb
push
sbb
xor
das
fmull
aam
jae
adc
xor
fwait
pop
xchg
loopne
mov
in
mov
or
push
cltd
inc
sub
xchg
add
imul
xchg
fistpl
and
lods
into
stos
popw
mov
pop
data16
and
ret
and
sub
js
cmc
aam
mov
inc
aam
in
xchg
adc
cmp
rol
push
push
loope
sti
stc
jp
mov
and
mov
or
lds
xor
push
aam
dec
nop
lea
sar
dec
subl
lahf
cmc
cltd
dec
add
cwtl
iret
cmp
int
jp
mov
outsb
lds
mov
repz
and
fcoms
lods
pop
mov
fisubrs
ret
lahf
leave
mov
jmp
nop
aaa
adc
xchg
js
mov
push
pushf
test
mov
pop
xchg
bound
push
pop
cli
jmp
loopne
jne
dec
sub
adc
loopne
fwait
or
cltd
das
lods
or
or
pop
test
or
movsl
ja,pt
out
orl
xor
loop
insb
mov
mov
sub
in
scas
bound
in
mov
sub
cmp
fs
adc
mov
mov
cmpsb
enter
jmp
icebp
pop
and
decb
sub
or
dec
dec
mov
mov
inc
xlat
fidivrl
xlat
mov
inc
pop
sbb
cwtl
xchg
daa
mov
sub
inc
pop
outsb
mov
orl
sti
xchg
xchg
pop
in
mov
cltd
rolb
nop
hlt
pop
in
nop
arpl
sub
mov
mov
pop
in
fs
push
mov
daa
loopne
dec
test
out
sub
mov
xchg
or
out
inc
rolb
mulb
mov
scas
mov
sub
add
loope
leave
xor
dec
incl
and
decl
push
iret
lahf
inc
loopne
ficoml
cs
pushf
loopne
and
or
adc
push
test
mov
xchg
xor
mov
or
fsubrs
mov
add
out
dec
hlt
aad
fsubrs
subl
xor
call
inc
jl
xlat
pop
sub
in
jno
cmpsl
xor
cmp
dec
imul
pop
push
imul
ds
popf
stc
pop
xchg
lret
and
inc
inc
mov
js
pop
xor
adc
sahf
sub
aam
arpl
fcomip
in
mov
adc
cltd
sbb
mov
pop
inc
push
and
int
pushf
mulb
cmpsl
loop
xchg
dec
push
or
jae
push
pushf
repz
sbb
in
mov
jle
pusha
cli
fnstenv
dec
cmp
fsts
mov
jae
or
mov
and
fnstenv
xor
sbb
in
bound
pop
sbb
push
xor
mov
xlat
mov
adc
movsl
jo
ret
stos
pop
cltd
lahf
dec
add
pop
jmp
xor
div
int
sub
sbb
int
out
xorl
pop
dec
iret
add
mov
add
pop
pop
cmp
je
cmp
ljmp
outsb
dec
mov
cli
es
into
dec
mov
push
sub
scas
pusha
or
push
xchg
fistpl
lcall
ss
mov
fwait
cs
cmp
scas
je
ret
aas
mov
inc
daa
or
das
lret
cmpsl
gs
das
fdivrs
cmp
push
nop
rcrl
mov
mov
scas
or
std
rorb
test
pop
xor
xchg
push
mov
aas
psadbw
cmpsb
xlat
push
mov
cwtl
jp
jecxz
clc
xor
mov
iret
pop
js
mov
in
imul
sbb
pop
mov
xlat
sahf
aam
notl
fnsave
mov
or
xor
sub
shlb
in
push
mov
jne
aaa
lahf
mov
loop
xor
pop
inc
push
aaa
or
cld
fidivl
dec
pop
vmcall
std
add
dec
pop
shlb
push
inc
xor
xchg
xor
in
enter
xchg
pop
jl
clc
dec
pop
movsb
and
cmp
sbb
jg
adc
jp
xchg
cld
ret
aad
jne
mov
mov
mulb
push
add
mov
sbb
jecxz
mov
mov
pop
les
xchg
aas
in
icebp
or
loope
test
addb
mov
dec
mov
imul
pop
test
lods
daa
es
and
dec
sub
outsb
std
out
je
pop
mov
nop
ret
sbb
mov
jle
dec
jecxz
das
out
aas
add
leave
sub
adc
rcl
int3
mov
sbb
bound
jge
push
rcll
jmp
imul
xor
or
pop
movsl
imulb
dec
aam
call
push
sbb
lret
test
adc
fstpl
push
sti
xor
xchg
or
dec
inc
cmpsl
movsb
lock
mov
xchg
xchg
bnd
out
push
pusha
xor
sbb
test
incb
mov
data16
inc
rcrl
into
outsl
xor
mov
inc
js
in
xchg
push
into
mov
leave
sub
xrelease
xchg
std
ds
push
sti
mov
sbb
jl
sub
out
aad
nop
popf
and
test
les
and
loop
ret
jmp
pop
jae
aas
pop
movsl
repnz
cmp
pop
pop
push
testb
scas
in
xchg
mov
lcall
fisubrl
or
mov
clc
das
icebp
xorb
jecxz
adc
lcall
mov
adc
pop
fsubs
cmp
sti
adcb
xchg
je
rcl
add
lea
mov
cmpsb
and
repnz
and
dec
shrl
mov
idivb
pusha
sarl
cli
pop
loop
inc
mov
sarl
pop
imul
int3
mov
icebp
out
xor
subb
push
adc
dec
push
pop
and
xor
jecxz
imul
insb
push
jg
lock
and
and
xor
xchg
cmpsl
repz
mov
cmp
inc
lret
dec
hlt
mov
sub
push
pop
adc
add
nop
sbbl
repz
notl
insb
test
mov
sar
push
or
call
into
test
xchg
dec
inc
mov
js
or
loop
adc
lock
sbb
and
gs
loop
mov
jp
pop
jl
mov
bound
dec
add
mov
sub
in
inc
hlt
std
mov
jg
test
mov
icebp
jg
scas
test
lcall
jno
adcb
enter
int
cmpsb
decl
ljmp
or
jnp
call
xor
jne
lahf
cmp
jns
mov
aaa
inc
pop
sub
mulb
or
inc
movb
stos
dec
mov
ja
negb
or
push
ljmp
mov
call
sahf
call
leave
cmpsb
jge
adc
sahf
out
jns
xchg
jmp
xor
ss
test
pop
xchg
std
sbb
xchg
test
cwtl
mov
scas
shll
call
push
mov
push
jp
pop
sti
std
inc
xchg
adc
subl
jno
pushl
push
daa
lret
xchg
dec
dec
rcll
xor
sbb
push
inc
aam
push
adc
and
push
add
dec
dec
mov
jns
mov
sbb
fimuls
jle
fmuls
enter
lds
inc
jne
repnz
adc
xlat
adc
xchg
add
xor
add
mov
adc
push
and
cmp
adc
outsb
add
and
mov
mov
test
jge
jp
push
ljmp
aam
mov
pop
in
gs
adc
and
mov
push
in
xchg
jg
xorb
jnp
movsl
dec
xchg
push
fiadds
cmc
push
clc
xchg
adc
jge
and
subl
int
adc
insb
dec
or
sbb
pusha
xor
or
adc
or
in
mov
xchg
je
sahf
aaa
jne
fadd
repnz
cmp
sub
adc
enter
pop
xchg
orl
clc
cmc
pop
and
fsubr
cmp
jge
sbb
or
jb
xor
aas
inc
sbb
out
adc
cwtl
test
add
lcall
orb
psraw
hlt
jbe
pop
pop
and
adc
outsb
inc
rorl
mov
jns
imul
gs
jle
or
in
fisubs
add
std
push
lods
aam
jno
pushf
xchg
xchg
inc
dec
jb
hlt
xor
push
cmpsb
cmp
cmpsb
push
idivl
add
je
das
and
lock
nop
cmp
jb
sbb
jo
sbbb
add
leave
mov
adc
cmp
cmp
fbld
jb
push
or
mov
clc
repz
loop
aaa
imul
inc
pop
arpl
ret
loope
push
lcall
mov
mov
adc
aaa
jmp
outsl
mov
mov
je
or
inc
jl
or
pop
aaa
or
jb
mov
adc
or
test
adc
stc
xor
inc
sbb
repnz
mov
fdivrl
ja
push
pop
adc
mov
adc
test
repnz
or
lahf
in
aad
pusha
jo
popf
pop
pop
sub
dec
ret
mov
sbb
xchg
mov
aam
push
int
dec
xchg
loop
hlt
sub
clc
popf
std
jl
rorl
jmp
jge
in
and
incb
sub
pop
enter
test
jle
or
insl
scas
xor
and
mov
sbbl
test
push
jbe
cmc
ljmp
add
cld
mov
mov
jne
add
cmp
adc
aaa
dec
push
loopne
leave
lret
mov
jg
jp
les
add
andb
out
arpl
xlat
adc
add
sbb
jae
jecxz
fmull
pop
mov
pusha
mulb
dec
xlat
mov
ret
jae
repnz
push
mov
mov
cs
mov
bound
or
mul
xchg
push
xchg
mov
sub
push
pushf
cld
outsl
xchg
mov
fcoml
inc
inc
inc
push
jne
jnp
mov
fsubl
dec
fidivrl
pop
lret
cwtl
adcl
xchg
lods
in
jmp
inc
and
scas
ret
jo
xchg
enter
inc
pop
cmp
lret
pop
test
imul
test
cltd
mov
push
aad
or
jg
iret
aam
or
outsb
lock
push
adc
cmp
dec
xchg
call
stc
shrb
pusha
stos
lcall
xchg
mov
lods
jmp
test
shll
adc
add
mov
inc
mov
das
push
dec
loope
jbe
pop
loope
sub
out
xchg
pop
int3
cmc
fadd
imul
clc
push
je
inc
adc
hlt
decb
sti
hlt
push
aad
xchg
pop
jmp
push
sbb
sub
movsl
or
roll
mov
test
push
test
imul
jbe
fiadds
mov
inc
mov
fistpl
xor
sub
pop
push
outsl
loope
xchg
inc
in
push
pusha
pop
insl
pop
lcall
push
daa
bound
or
repz
push
scas
xchg
push
mov
or
or
sub
push
sub
arpl
cmp
and
fwait
jp
scas
inc
mov
pushf
fwait
pusha
dec
stos
leave
cmc
or
das
fists
cmc
loope
mov
daa
xor
rclb
jnp
dec
jns
pop
sub
sbbl
addl
jne
mov
int3
mov
inc
mov
jne
or
sahf
jge
push
stos
pop
jb
lds
push
in
std
pop
lock
test
and
lcall
sub
add
mov
clc
mov
rorb
push
cmp
mov
test
push
das
lods
xor
xor
jg
mov
dec
sbb
xor
sbb
dec
js
cmc
sbb
aas
out
dec
push
nop
rcrb
repnz
jmp
adc
cmpsl
inc
dec
sub
dec
loope
add
aam
mov
or
mov
pushf
repz
leave
loope
rorb
call
mov
push
inc
or
cmp
adc
je
mov
adc
and
cmpsb
push
fs
xchg
cmpsb
scas
in
ja
xorb
es
negb
push
sub
push
jmp
jb
xchg
fbstp
xchg
daa
arpl
and
movb
dec
stos
cmp
jne
jg
and
stc
push
lods
stc
into
enter
inc
insb
into
mov
xor
pop
int3
xorl
out
sarl
inc
inc
and
mov
into
aam
out
push
test
add
insl
sbb
jno
push
xor
aas
push
shll
lods
les
cmpsl
and
or
call
lret
fst
pop
popa
inc
out
and
adc
dec
sahf
insl
and
mov
insb
mul
xchg
mov
pop
mov
inc
sbb
lret
divl
add
xor
jecxz
jp
jne
add
pop
cmp
fidivrl
sub
xor
out
mov
dec
adc
fucom
xor
insb
xchg
xor
je
inc
repz
scas
xor
xchg
lret
mov
mov
pop
cld
adc
sbb
mov
mov
inc
fnstsw
xor
adc
xchg
outsb
pop
rolb
add
sti
pop
inc
jg
sti
lret
add
mov
insb
xchg
add
push
xchg
and
add
inc
adc
mov
push
push
in
sbb
divl
lahf
gs
lock
orl
pop
sbbl
adc
filds
int
hlt
mov
shrl
js
repnz
rolb
insl
cmp
iret
sbb
stos
hlt
adc
fistpll
js
icebp
dec
and
mov
cmpsl
and
mov
ljmp
inc
js
sti
js
xchg
inc
iret
addr16
clc
adc
or
fs
mov
mov
insb
outsb
imul
inc
lock
pop
hlt
mov
mov
dec
push
jo
cld
out
movsl
sbb
jbe
mov
adc
sarb
mov
mov
mov
or
pop
fcomps
cs
movsb
fistps
outsb
dec
ljmp
jae
test
mov
loop
sub
aaa
test
iret
mov
mov
pop
repnz
sub
pop
rolb
aas
cli
cli
inc
pop
lods
mov
test
lock
jbe
ja
cmp
xor
or
sub
fwait
pop
fstl
int
mov
fadds
lds
add
les
push
jg
pop
mov
popf
mov
leave
cmpsl
push
incl
in
jne
mov
push
rcrl
cwtl
pop
lock
mov
jg
out
pop
or
adc
shll
add
divl
out
dec
mov
ss
mov
int
mov
test
rcrl
xchg
push
rorb
or
pop
sbb
cmp
adc
imul
sbb
add
mov
ss
lods
ss
cmp
test
jg
pop
sbb
js
imul
jo
daa
pop
ss
gs
fists
shrb
das
mov
ljmp
scas
adc
inc
lret
pop
inc
mov
inc
movsl
lock
mov
stc
cmc
fistpl
pusha
pushf
sbb
stos
mov
js
loope
push
sbb
dec
faddl
add
mov
push
jb
inc
push
outsb
push
mov
imul
cmp
jno
mov
pusha
int
jns
fdivrl
add
pushf
xor
outsb
loopne
daa
pop
and
push
xchg
pop
add
dec
sub
and
pop
daa
aaa
aaa
scas
stos
pop
subl
insb
mov
inc
sub
popf
je
sbb
fcmovbe
adc
xor
sbb
inc
mov
jp
mov
movsl
adc
xchg
push
loopne
sbb
int
sbb
outsl
sti
popf
je
sbb
js
cltd
std
les
add
les
mov
bound
push
cmp
data16
mov
xchg
mov
mov
jmp
sub
and
stos
ds
test
xchg
fistps
fsubrs
or
lahf
jb
je
push
mov
scas
xor
and
inc
fldlg2
add
sub
push
add
cmc
xorb
fnsave
inc
cld
lahf
hlt
push
daa
or
stos
sub
push
and
adc
and
ljmp
dec
pop
jnp
and
mov
addl
or
lcall
push
dec
aam
jnp
or
fcmove
inc
mov
push
jo
lahf
test
std
rcll
out
add
aam
aam
es
mov
rcr
add
add
imul
inc
xor
cli
mov
outsb
inc
scas
sub
popf
jle
or
inc
stc
mov
shlb
push
sar
xchg
mov
imul
outsl
lea
xor
cmp
fidivl
mov
dec
ja
sarl
push
repnz
cmpl
int3
movsl
movl
mov
cmpsl
out
mov
cltd
jmp
mov
mov
es
loop
cmp
mov
dec
or
test
aam
andb
loopne
add
push
jo
dec
nop
arpl
xor
sti
and
inc
rcr
xchg
sub
cmp
scas
cld
mov
out
push
fimull
lock
add
inc
lret
xor
mov
loope
lock
out
int
les
push
mov
popf
dec
xchg
adc
jl
or
add
ret
in
mov
jb
push
mov
test
ret
ds
call
jg
imul
imul
js
in
inc
in
ja
lds
negl
xor
and
cwtl
iret
ljmp
movsb
stc
sub
xchg
add
mov
cmp
cmpps
sbb
push
sub
hlt
sbb
and
and
push
mov
rorb
outsb
pop
xchg
jns
or
lcall
ret
test
xchg
aaa
mov
add
dec
mov
pusha
add
in
psrad
rcr
sbb
js
pop
xchg
movsl
gs
xchg
add
pushf
sahf
jns
push
or
mov
out
xchg
pop
mov
add
xchg
movsb
jmp
or
bound
daa
ds
lret
inc
das
test
pusha
popf
out
xchg
stos
push
dec
sbb
or
push
xor
sti
fildl
daa
js
jae
mov
mov
lret
fcoms
sarb
mov
sbb
incb
add
sub
jmp
dec
pop
out
jns
lcall
loopne
lods
pop
lea
push
movsl
mov
repz
mov
jp
mov
dec
roll
int
cmp
sbb
mov
pop
sbb
movsb
mov
cmp
repz
mov
cli
int
sti
ficoms
cli
les
xchg
cmp
inc
xor
cmp
jmp
fmul
cmc
pusha
and
shll
out
sbb
in
iret
pusha
push
in
shll
in
cmp
jl
add
sahf
cmp
mov
or
mov
mov
mov
push
push
jg
loope
xchg
enter
rolb
shlb
push
std
adc
pop
das
jle
fidivrs
cltd
jp
adc
punpckhdq
and
in
lock
lcall
ret
rorb
xorb
jnp
lcall
push
mov
fsubrs
aad
rcr
mull
popf
xchg
test
mov
mov
inc
ja
fadd
mov
or
stos
rol
and
cmp
inc
mov
mov
jl
ror
aam
sti
ljmp
jmp
aas
imul
cmp
into
aas
rcrl
mov
clc
push
dec
pushf
mov
inc
jbe
imul
loopne
jmp
xlat
lods
sar
pushf
jge
jge
test
adc
mov
cmpsl
mov
test
call
mov
or
js
popa
fldenv
sbb
mov
lret
sbb
and
and
ret
sub
insl
popfw
push
leave
sbb
mov
cmp
imul
adc
push
xorl
fisubl
or
sub
add
aad
cmpsb
loope
cmp
mov
inc
mov
lahf
push
adc
mov
xor
sub
mov
sarl
pop
test
cwtl
jp
mov
iret
inc
ret
les
or
cmpsb
inc
cmp
mov
fildll
cld
cmpsl
mov
arpl
pushf
inc
js
popa
js
gs
mov
test
andl
arpl
dec
fstpl
arpl
mov
leave
xchg
rorb
push
add
xchg
jns
and
and
ljmp
aam
mov
sbb
hlt
pop
xchg
fsubs
cmpsl
and
cli
mov
pusha
xor
lds
jnp
jmp
fmul
pop
fneni(8087
adc
push
in
pusha
inc
cwtl
inc
push
lret
pop
push
xor
inc
cmp
push
test
cmpsb
xchg
xchg
cmpsl
pop
fs
xchg
pop
insb
mov
jmp
fildll
test
or
ficompl
sub
mov
cld
mov
jnp
sbb
mov
cmp
inc
push
pop
icebp
add
push
and
rol
out
pop
sbb
sbb
bound
insl
out
movsb
js
dec
and
aam
pop
push
into
pop
hlt
jae
addr16
mov
sub
adc
xor
call
bound
shrb
cli
xorb
arpl
mov
int3
jmp
neg
cld
pop
jge
xchg
mov
cmp
enter
sbb
fstps
inc
imul
movsl
arpl
push
pop
ljmp
in
sub
cmp
mov
adc
xchg
popf
out
mov
mov
inc
cmpsl
adc
xor
pop
sbb
mov
mov
cmp
fst
cmp
mov
mov
lds
rolb
cs
jmp
jmp
sbb
pop
mov
mov
cmp
jg
mov
sub
cmpsb
sbb
jae
negl
lock
imul
stos
fldenv
push
pushf
sbb
or
sub
in
mov
in
push
setbe
imul
scas
cld
lret
dec
inc
pop
aas
sub
inc
dec
cmp
xor
cmp
and
rcrl
stos
jnp,pn
sbb
mov
mov
xchg
stos
sbb
stos
adc
mov
fldl
jle
mov
scas
mov
mov
sahf
sbb
inc
outsl
ds
jecxz
ja
and
cmp
sbb
mov
fst
out
adc
rcll
jle
xchg
dec
es
push
xlat
ja
xor
mov
push
add
imul
mov
xchg
fimull
outsl
inc
xor
gs
sub
dec
cwtl
es
lret
mov
push
insl
rcrb
jle
dec
shrl
out
testl
les
jbe
push
pop
adc
bound
mov
in
sti
and
jmp
inc
adc
stos
inc
and
mov
rorl
pop
addl
xchg
iret
in
and
cmp
fdivr
sub
dec
ds
enter
ja
cld
lds
mov
in
int
mov
inc
inc
add
bswap
fildll
or
inc
out
sbb
add
out
jge,pt
jg
stos
sbb
lcall
xchg
rol
mov
push
hlt
mov
fmuls
popa
jnp
push
ret
xchg
adc
mov
add
xchg
sbb
pop
je
cmp
fldcw
sbb
out
fs
into
mov
inc
push
cmp
cmp
das
sub
out
adc
fcomps
xchg
lock
push
sub
ds
xchg
inc
mov
mov
push
cwtl
mov
ja
fisubs
inc
in
lods
lods
jp
pop
xlat
ror
pop
xlat
clc
lods
dec
leave
pop
clc
lahf
imul
mov
dec
cmp
push
and
aas
paddw
out
nop
popa
les
adc
push
mov
jecxz
mov
ja
imul
out
pop
in
test
fcoml
lahf
or
test
push
dec
jle
stos
xchg
call
js
mov
push
mov
and
cmp
outsb
add
jns
rolb
mov
cld
out
gs
sahf
into
push
xlat
cwtl
popf
data16
mov
ror
out
jo
lods
mov
testl
mov
dec
xchg
mov
sbb
xor
dec
pcmpgtd
fistl
mov
pop
icebp
mov
nop
cmp
popf
fcmove
mov
lret
cwtl
call
push
adc
inc
lret
mov
jge
shlb
pop
scas
cmp
les
mov
pop
fadd
test
ret
pop
and
push
bound
jno
je
cmp
push
mov
add
loopne
mov
sti
lret
cmp
adc
mov
jmp
test
jae
xchg
jp
xor
pop
pop
pop
cmpsl
jo
inc
push
cld
in
cs
mov
xchg
pop
dec
or
dec
xchg
add
jbe
mov
addr16
outsb
loope
xor
lret
mov
shrb
or
int3
add
push
lahf
mov
rolb
and
aaa
dec
sahf
daa
cmpsb
ret
ss
sbb
mov
shl
fwait
dec
mov
lock
sbb
leave
mov
mov
xor
jmp
push
mov
and
out
pop
pop
mov
add
int3
adc
icebp
repz
mov
cmpsl
sbb
adcl
push
mov
shlb
pop
in
imul
iret
repz
rcr
inc
call
and
jp
nop
in
inc
ljmp
mov
xor
cmp
das
sarb
daa
ret
mov
out
insl
jecxz
jmp
add
jp
arpl
and
sbb
rcll
stos
xchg
fstp
jle
cwtl
sub
leave
adc
pop
hlt
xor
movsl
adc
cmp
xchg
xor
ja
mov
pop
adc
jae
mov
cmpsb
iret
clc
mov
inc
ja
push
out
fists
pop
dec
xchg
xchg
inc
mov
inc
notb
fsubrl
sbb
cltd
rcrl
dec
xor
addl
sub
int3
xor
xor
jo,pn
jle
push
push
loopne
sbb
stos
pop
outsb
cmp
push
scas
or
jo
stos
jns
je
ficomps
lret
jecxz
pop
jge
leave
add
pop
dec
aaa
aas
in
mov
xchg
adc
and
inc
push
mov
adc
rcll
ret
in
pop
icebp
ret
dec
xor
or
jl
xchg
cmp
ret
shlb
movsl
in
cwtl
jmp
push
xchg
outsb
pop
jge
or
orl
mov
fnstenv
popf
in
jp
push
sbb
adc
pop
lea
mov
pop
enter
fiadds
mov
and
sti
out
leave
out
or
inc
and
das
loope
jg
inc
mov
jns
pushf
popa
int3
push
or
jl
cmp
pushf
leave
xor
data16
test
jp
sbb
loope
xlat
pop
mov
movsb
push
stos
lret
pmaxsw
lods
sub
scas
mov
bound
xlat
or
roll
xorb
lcall
ss
or
pop
sub
ds
je
movsb
repz
sub
jnp
sbb
mov
fs
sub
and
cmp
add
sub
inc
push
mov
cmp
sbb
popa
adc
imul
dec
arpl
and
icebp
shrl
scas
jo
ficomps
lods
fnsave
jg
push
out
add
daa
or
inc
test
push
push
mov
enter
inc
mov
imul
loopne
test
or
lret
insb
adc
cwtl
sub
clc
adc
test
lret
adc
addb
inc
push
stos
add
mov
popf
filds
int
add
sbb
jb
mov
pop
pop
jg
popl
dec
leave
mov
dec
or
shll
mov
fwait
das
ja
arpl
dec
xor
mov
nop
mov
or
sub
pop
mov
data16
out
pop
lods
stos
into
inc
in
cmpsb
fdivs
cs
xchg
mov
hlt
adc
icebp
shll
loop
inc
cmpsl
jne
mov
mov
stos
inc
inc
cmp
es
insb
inc
fidivrl
test
push
and
pop
rcll
mov
fnstcw
loop
icebp
popa
lret
sti
std
xorb
adc
enter
and
in
pop
pop
push
jmp
std
xor
ror
jmp
xor
std
jg
adc
inc
mov
xchg
xchg
push
dec
mov
imulb
or
out
repz
les
imul
mov
push
jmp
xchg
mov
inc
lds
dec
iret
lock
xor
mov
inc
fstpt
push
lret
xchg
outsl
sarl
stc
adc
aad
clc
mov
push
negb
lahf
sarl
inc
rolb
mov
mov
mov
jmp
cmpsl
inc
xor
je
lock
ss
pop
cmpsb
lcall
shrb
pop
jl
imul
push
jae
xchg
ret
xor
pushf
sub
jl
push
sub
outsl
movsl
out
pop
or
mov
loopne
jle
jmp
cmpsl
pop
mov
hlt
xchg
movb
jo
add
dec
pop
je
mov
mov
dec
aas
add
dec
push
sub
addr16
popa
and
mov
sbb
dec
xchg
pop
ret
push
lock
data16
imul
add
mov
mov
push
sbb
popa
aas
mov
or
jne
mov
nop
lods
adc
test
dec
and
jg
mov
mov
pop
clc
push
inc
xchg
fcomps
lods
add
xor
out
mov
pop
sub
lret
bound
push
fwait
jecxz
mov
or
loope
mov
lret
mov
inc
push
aas
testb
push
cmp
sbb
add
mov
sub
jp
fsubrl
xchg
mov
xchg
gs
jnp
movsl
divb
data16
scas
add
cmp
mov
cmpsl
add
insb
add
push
test
cmpsb
or
in
mov
testb
jge
aam
pop
mov
insb
mov
mov
mov
ja
fucomip
adc
les
int
push
inc
adc
xor
rcrl
stc
dec
stos
loopne
sbb
fistpl
xchg
sbb
pop
je
fimull
and
add
jge
cmp
jbe
push
movsl
idivb
fimuls
push
je
add
or
and
mov
inc
les
sub
mov
lcall
popf
shr
pop
testb
pop
mov
pop
cmp
cmp
sbb
imul
add
push
jne
xchg
sbbl
outsb
jge
pop
dec
xor
xchg
icebp
xor
push
lods
jne
mov
cli
aas
dec
inc
pop
movsb
rolb
mov
out
sub
pop
call
pushf
pop
test
je
or
call
jne
xor
popa
xor
sub
xor
and
fists
cmpsl
lea
imulb
movsb
jl
jle
inc
repz
std
jo
js
or
add
jle
push
dec
mov
mov
repz
aam
pop
pop
xchg
testb
sub
adc
inc
pop
or
test
lcall
jge
out
lcall
in
sub
inc
push
dec
jno
mov
sub
xor
sub
mov
inc
mov
divl
outsb
pop
sahf
dec
icebp
loope
jmp
jbe
xchg
pop
push
jp
jbe
imul
push
or
push
dec
sti
cmpsl
aam
cmpsl
scas
sbb
insl
leave
mov
pop
mov
add
and
sub
fimull
gs
push
xchg
call
dec
loopne
popf
mov
mov
push
pop
add
pop
adc
mov
jns
lret
rcrb
jne
adc
rorb
push
inc
lret
scas
mov
pushf
dec
jg
outsb
jnp
sbb
jae
or
loop
xlat
fistpl
mov
dec
lods
push
scas
cmp
cmp
and
dec
mov
sub
addr16
aad
and
and
add
outsb
popa
xor
xlat
jne
fsubs
dec
add
ljmp
dec
mov
pop
and
mov
aaa
lret
xor
outsl
pop
adc
adc
pushf
shrb
into
jg
ret
or
out
sub
mov
jns
dec
sahf
jnp
inc
daa
dec
mov
push
pop
icebp
sub
mov
loopne
ret
lods
imul
aaa
cli
cmp
or
sub
or
fsubs
jno
minps
out
push
inc
jle
incb
xchg
pusha
adc
mov
or
fistpl
jb
add
lea
cli
aad
cwtl
add
int
mov
cmpsl
rorb
cltd
mov
push
add
test
mov
push
mov
dec
cs
dec
fisttpll
stos
jecxz
adc
stc
hlt
movsl
inc
je
jne
dec
fists
or
xlat
sti
dec
mov
cmp
xor
into
xchg
sar
fwait
enter
outsb
pop
pop
fwait
out
popa
fstpl
es
fsubs
dec
pop
sub
push
cmpsb
add
adc
sbb
call
xchg
insl
arpl
sub
repz
cmpsl
inc
pop
outsl
add
mov
pop
cld
push
cmp
imul
pop
push
insl
fmull
lret
xchg
scas
adc
inc
mov
xor
inc
cwtl
inc
cli
push
and
or
es
xchg
dec
jns
jae
test
xchg
repz
lret
sarl
push
mov
push
fsub
int
or
jge
jecxz
mov
cmp
sbb
fincstp
push
insl
sub
dec
mov
loopne
out
jb
iret
xlat
sbb
or
or
xchg
cmp
leave
or
adc
or
ja
xchg
js
in
add
push
cld
das
mov
enter
jecxz
pop
jae
sbb
lahf
cmp
rcl
fldl
lahf
push
adc
stos
push
cli
int3
push
sub
inc
in
sub
and
shrb
aas
dec
iret
cltd
mov
scas
iret
aas
out
inc
mov
sub
push
pop
jle
cmpsl
hlt
movsl
aas
or
dec
sbb
xchg
adc
call
stos
popa
adcl
xchg
fiadds
enter
mov
and
sub
mov
push
mov
mov
aas
dec
mov
jbe
les
repnz
and
push
out
out
jg
push
popf
xchg
aas
out
adc
ja
adc
xor
lret
jecxz
popa
push
jb
hlt
push
mov
sub
in
sub
dec
xchg
out
sbb
and
cmp
cmc
cmovnp
into
dec
ret
xchg
pop
idiv
xor
lcall
insb
jecxz
movsb
and
sbb
test
inc
push
fnstsw
imul
loopne
and
fcom
mov
sbb
aas
jbe
mov
out
dec
movsl
scas
in
add
push
cltd
sub
mov
int
loop
f2xm1
out
mov
push
inc
xchg
sub
push
fldpi
in
push
mov
mov
adc
loope
popa
xor
inc
xor
mov
pusha
out
shl
push
cmp
or
rcrl
int3
pop
cltd
nop
das
mov
imul
shrl
add
jb
popa
test
les
leave
sbb
nop
loop
imul
lods
stos
lret
or
test
sbb
xor
ljmp
loopne
xorl
imul
xorb
inc
lods
mov
sub
mov
mov
lret
popa
daa
xor
fsubrl
xor
or
lods
insb
addl
loope
movsb
adc
aaa
movsl
cmp
xlat
cmp
push
clc
mov
enter
rcrl
mov
xchg
push
lock
pop
xor
mov
xlat
int
test
popl
add
int3
icebp
jg
les
mov
incl
mov
mov
or
xor
divl
dec
sahf
push
test
sahf
cld
adc
push
mov
fistps
sbb
push
sub
iret
ljmp
lret
jl
movsb
rorl
clc
cmc
out
js
or
xchg
lcall
sahf
shlb
das
and
scas
sarb
adc
or
popa
jne
cld
scas
fdivl
sar
filds
adc
xor
in
adcb
xor
loope
outsl
cmp
dec
dec
lock
roll
ret
loopne
addr16
cmp
or
jb
les
std
xor
pop
stc
notl
pop
mov
mov
add
mov
or
orb
inc
movsb
maxps
add
or
mov
mov
mov
int3
cmp
clc
movsl
inc
mov
lds
rclb
loope
fisubs
addr16
lahf
xchg
or
push
int3
and
inc
and
lds
and
inc
add
call
fwait
imul
imul
pushf
ret
dec
dec
and
push
lcall
arpl
pop
popf
mov
and
loopne
inc
jp
jb
enter
dec
pop
fwait
es
pusha
and
aam
mov
dec
cwtl
loopne
fidivl
rol
mov
xchg
out
lret
mov
out
sub
xor
cld
divps
negb
test
shrb
mov
cltd
ss
fbstp
mov
mov
je
dec
inc
xorl
shrb
lods
js
sbbl
mov
fwait
loope
push
jle
push
jb
cmp
scas
in
add
ret
mov
jmp
icebp
add
outsl
icebp
push
jno
pop
call
mov
insb
pop
cmp
aaa
adc
mov
ret
pop
ret
fwait
into
mov
push
scas
fwait
push
popa
imul
and
jge
mov
and
ret
insl
dec
sub
loope
sbb
mov
daa
je
lahf
dec
stc
push
sbb
and
leave
bound
push
out
imul
in
push
dec
jl
les
adc
hlt
xor
sbb
xchg
push
cltd
xchg
test
xchg
inc
hlt
or
jne
jl
hlt
jge
push
xor
adc
mov
xor
mov
das
add
movsl
scas
pop
add
mov
sbb
mov
push
and
jl,pt
fdivrs
mov
mov
ljmp
lcall
jns
lahf
movl
out
das
inc
xchg
test
int3
subb
mov
push
ss
and
sub
adc
mov
ret
xor
fisttpl
adc
or
xchg
lret
out
nop
cmp
inc
mov
and
scas
cmp
mov
and
pop
push
jp
cwtl
jecxz
fisttpl
dec
ret
push
fdivs
fnstsw
fiaddl
pop
test
pop
ds
pop
cltd
mov
xor
outsl
add
andb
shl
int3
push
cld
push
push
sub
cmp
outsb
jno
idivb
jp
mov
sbb
sbb
test
jne
mov
in
mov
fwait
xchg
pusha
mov
add
jmp
rol
in
push
push
sub
or
jle
shl
mov
push
cmp
dec
jecxz
cmp
filds
stos
mov
pop
js
ss
fcompl
aad
shrl
daa
pop
xor
pop
pop
pusha
dec
lss
insl
jmp
adc
cld
mov
test
mov
dec
mov
pop
mov
sbb
sbb
xchg
shrb
fsubrs
xchg
ja
inc
fldcw
or
pushf
test
inc
xchg
mov
xchg
inc
lds
dec
add
gs
lds
popf
rcrb
mov
xchg
sub
shlb
mov
mull
jmp
pop
outsl
push
outsb
adc
mov
xchg
sbb
sti
imul
fsubrs
mov
sbb
xchg
xor
ret
adc
dec
adc
xor
sahf
adc
stc
cmpsb
fildl
add
rclb
mov
std
in
out
mov
into
rcrl
cmpsb
imul
stc
push
jmp
test
mov
push
push
or
lods
add
lcall
aad
sub
int
pop
adc
xchg
into
add
fnsave
dec
in
add
mov
loope
das
push
bound
jb
gs
rolb
xor
repz
jns
push
cltd
mov
test
jne
cmpsl
inc
rolb
pop
adc
stos
adc
fwait
sbb
popf
jo
mov
sbb
xchg
jge
shlb
fsubl
inc
sub
movsb
arpl
mov
add
out
adc
aad
leave
cmp
into
xorb
stos
push
out
out
gs
sahf
mov
loope
imul
ret
popf
xchg
lods
sbb
jb
jno
cmp
cs
roll
jecxz
ja
push
mov
push
shl
popa
cmpb
aaa
push
mov
sub
pop
lret
gs
push
cmc
imul
mov
in
mov
sub
fdivr
andl
fbstp
fs
lret
jl
or
into
cwtl
jge
pop
daa
push
mov
inc
aaa
popa
daa
andb
test
lret
ret
sub
cmp
dec
adc
iret
xor
fsts
ficoml
cmp
mov
mov
test
add
mov
adc
push
loop
adc
mov
inc
dec
mov
xor
scas
or
push
divb
mov
cmp
lret
pop
lea
sbb
pop
iret
xchg
enter
in
push
cmp
xor
daa
cmc
push
push
mov
inc
push
jns
ljmp
pushf
pop
mov
pop
mov
ljmp
inc
stos
in
pop
sti
lret
movsb
loopne
rorb
enter
xlat
jns
pop
inc
xchg
leave
pop
mov
cwtl
jbe
lods
invd
mov
nop
push
movsl
ret
pusha
sub
loope
inc
dec
test
in
rcr
cmpsl
inc
pop
cmp
sub
int3
outsb
dec
push
scas
xchg
jmp
cmp
insb
mov
and
out
mov
pop
cmp
mov
fildl
push
push
pop
and
mov
pop
sub
xchg
cmp
lret
mov
adc
xchg
ljmp
addl
mov
cs
mov
xor
mov
jno
inc
push
mov
mov
mov
cmpsb
pop
lods
popa
jmp
lds
sbb
ss
out
in
push
xor
test
push
loop
xchg
add
repnz
xor
fisubl
jge
pop
lret
mov
pop
push
sub
test
cwtl
mov
cmp
dec
jne
sbb
mov
jbe
je
shlb
push
stos
je
mov
movsl
in
das
lahf
push
pop
and
test
fs
test
dec
dec
insb
js
add
in
add
lds
fwait
aas
shlb
lret
in
imul
inc
jl
cmp
shrl
sbb
or
mov
adc
jno
xchg
cmp
dec
scas
pop
pop
lahf
aad
in
in
call
roll
int3
push
movsb
xchg
sbb
inc
xchg
cmp
jle
cs
mov
sbb
jo
push
ljmp
cmpsb
ret
dec
adc
rorb
sub
jp
or
mov
test
es
jl
fwait
lock
mov
aas
or
xor
jns
cmp
mov
pop
aas
sbb
lret
sub
out
mov
mov
ret
fcomps
lret
rol
dec
sbb
sub
dec
insl
push
jo
sbb
add
stc
leave
inc
jbe
test
fsubrs
aam
ja
mov
aad
jb
pop
dec
sbb
jp
imul
pushf
int3
lds
jne
dec
mov
or
add
movsb
sti
popf
repnz
adc
aaa
insb
sub
mov
cmp
xchg
dec
nop
inc
fdivs
mov
pop
call
int
fisubrl
adc
add
mov
jle
fnstenv
shlb
ljmp
lods
sub
mov
pop
ds
inc
mov
scas
xchg
arpl
movsl
clc
or
je
aam
add
mov
sti
push
and
pop
jmp
jno
adc
adc
fldl
xchg
cmpb
push
movsb
in
xchg
or
and
mov
or
cmpsl
scas
jo
arpl
movsl
scas
je
xchg
xor
pop
adc
mov
shll
mov
add
add
in
and
xor
mov
inc
in
incl
movb
scas
scas
and
lods
loope
repnz
dec
icebp
cmpsb
insb
hlt
enter
dec
mov
testl
or
mov
rclb
or
sbbb
stos
push
or
push
mov
in
inc
dec
dec
fwait
mov
cmp
nop
cwtl
imul
jle
mov
cmpsl
push
in
pop
xchg
cmp
pop
aaa
cld
xor
test
add
add
pop
mov
xchg
cmp
and
dec
lods
ljmp
cli
sub
push
out
mov
mov
dec
push
aam
sub
rclb
sub
ss
fs
test
mov
adc
inc
jne
repz
xchg
mov
fidivs
inc
popa
fwait
dec
enter
stos
jno
pop
push
scas
xchg
xor
daa
lret
pop
scas
adc
xchg
cli
lret
outsl
movsb
and
mov
xor
es
mov
loop
mov
lock
add
rorl
xchg
add
adc
jae
xor
push
outsb
aad
in
je
lahf
jge
xor
mov
cs
mov
jmp
pop
hlt
std
icebp
iret
mov
sub
scas
mov
add
popa
add
push
ds
movl
inc
jle
iret
cmp
aam
outsl
xor
jo
add
jns
adc
jns
adc
movsb
out
arpl
xor
cmp
inc
push
sbb
dec
mov
or
sub
push
and
jns
and
inc
mov
inc
cmp
xlat
aaa
into
mov
and
jg
cli
fiadds
xchg
mov
lock
bound
call
lods
movsb
fs
inc
add
leave
jl
xor
lcall
out
jb
gs
leave
pop
dec
test
aaa
pop
dec
faddl
ss
test
sahf
fmull
jmp
cmp
mov
or
loop
sub
dec
popl
mov
fsubrs
xor
push
mov
prefetch
sbb
sti
stc
dec
leave
in
in
jmp
inc
push
jl
add
es
btr
mov
push
pop
daa
aad
sbb
adc
jecxz
in
test
push
push
or
out
mov
mov
cmp
pop
std
and
aam
or
fstpt
incl
inc
and
inc
fstp
out
cmp
decl
shr
sbb
jb
adc
sbb
into
scas
sbb
sub
cmp
push
pop
into
in
xor
xacquire
addr16
xor
dec
mov
mulb
loope
xchg
and
bound
fsubrl
data16
cmpsb
mov
fsubrs
mov
sub
mov
xor
inc
pop
jle
lds
jns
sub
shlb
call
push
stos
mov
sub
pop
cs
xchg
mov
jge
test
mov
pop
notb
or
xor
sahf
xchg
lods
je
jl
in
dec
lock
and
mov
xlat
cli
ljmp
mov
xchg
inc
es
mov
popa
pop
push
jnp
out
loop
ds
sub
pop
inc
push
xlat
pushf
bound
fwait
and
jnp
or
push
mov
sub
mov
xchg
fistps
jbe
add
mov
push
and
mov
imul
sbb
add
stc
shll
fsub
push
sub
sbb
sbb
rorb
or
arpl
xor
dec
popa
xor
movsl
sbb
dec
mov
dec
loop
cld
adc
lea
test
pop
addl
in
jbe
xchg
jmp
cmp
jb
clc
arpl
movsb
shrb
insb
pop
nop
mov
insb
mov
mov
jne
je
cmpsl
fwait
or
and
inc
add
or
int
loope
dec
sbb
sub
pushf
adc
sub
mov
sbb
xchg
test
xor
cmp
and
aas
and
sarl
mov
mov
outsb
insb
pushf
call
jmp
pop
and
inc
dec
outsb
inc
les
outsl
lret
mov
pop
pop
movsl
adc
or
nop
xchg
mov
in
jmp
push
icebp
mov
lds
pop
orb
sbb
push
out
inc
mov
jge
shrb
jle
test
jo
xor
fmull
jp
xchg
and
int
inc
mov
jno
sahf
lret
cmp
mov
lret
mov
jnp
mov
add
pop
aaa
and
jae
mov
pop
mov
stos
fwait
adc
cmpsl
pusha
push
dec
pushf
mov
jns
lret
es
lret
jle
int
push
xorl
mov
fsubrs
not
outsb
sub
in
cmp
sbb
inc
popf
pmulhw
inc
jns
gs
xchg
out
lods
push
mov
enter
sub
cmp
lods
pop
testb
and
xlat
pop
jns
and
cltd
test
mov
sahf
dec
jo
add
mov
fcoml
sbb
sarb
xor
and
loopne
dec
lahf
cmpsb
sbb
test
out
aaa
inc
pop
cwtl
dec
loopne
jge
fbld
lahf
fldcw
lret
cwtl
adc
push
gs
ret
ret
fistpll
popa
ljmp
pop
outsb
rcr
pop
xchg
add
mov
shl
call
push
adc
add
dec
jp
jle
iret
js
push
push
cltd
or
pop
adc
outsl
mov
cmpsb
mov
mov
mov
les
test
sub
cld
push
lahf
xchg
mov
push
push
in
dec
shl
cld
jp
ljmp
movntq
out
ja
dec
push
push
mov
out
insb
loopne
push
cmp
sub
bound
dec
cmp
jae
pushf
fbld
mov
xchg
fwait
jnp
adc
jmp
jp
sub
inc
xor
outsb
xor
inc
or
inc
push
pop
sbb
or
cld
mov
fidivrl
cwtl
ljmp
adc
iret
sti
bnd
mov
test
and
mov
jle
mov
bound
pop
push
lret
or
pop
jae
scas
jno
pop
sbb
repz
pop
lcall
jmp
mov
xchg
xor
jno
addl
lret
pop
mov
loop
or
pushf
jnp
push
and
xor
inc
jns
cmpsb
xlat
mov
pop
fcmovnb
inc
xlat
ret
jecxz
aas
push
loop
mov
notb
ret
insb
loop
push
stos
popa
dec
sub
in
into
popf
jmp
lret
xchg
xlat
cmp
or
lret
dec
stc
icebp
fstpt
mov
loop
mov
pop
xor
adc
push
addr16
cli
mov
xchg
out
stos
adc
mov
xor
lahf
push
call
push
aam
lea
push
aam
push
add
jge
leave
icebp
adc
push
jns
mov
aad
or
into
mov
in
movsb
xchg
stc
push
pop
movsl
xor
adc
jl
mov
adc
pop
mov
xchg
mov
scas
outsl
or
ljmp
imul
lahf
hlt
jp
pop
nop
mov
jb
fcompl
xor
shll
mov
outsb
mov
pushf
cmp
jno
and
xchg
cmp
imul
xchg
jmp
add
loope
mov
rcrl
adc
jbe
xlat
stos
jp
and
addr16
and
shlb
cmp
cld
xor
loop
and
push
std
stos
push
sti
jmp
xchg
pusha
cwtl
out
push
cmp
xchg
bound
sahf
jle
bound
sbb
jae
arpl
aad
or
mov
push
jae
decl
dec
mov
and
call
fs
add
div
lcall
cmp
jns
ficompl
gs
pop
mov
aam
pop
mov
or
jmp
out
xchg
lret
rorl
cmp
jne
and
pushf
cmpsb
mov
and
sub
and
or
mov
int3
repnz
ds
fdivs
aas
cmpsb
into
xor
mov
jo
dec
ljmp
movsb
inc
push
out
lea
pop
test
and
mov
lahf
add
incb
pusha
jg
push
inc
and
movsl
xor
cwtl
out
nop
pop
pop
scas
jns
fucomi
arpl
xlat
pop
sbb
outsb
js
bound
xchg
add
fistpl
push
fstl
pop
nop
mov
daa
cmpsb
test
sub
rcrb
mov
pop
mov
and
cli
cmp
xchg
xor
xorl
jb
xchg
lcall
data16
movsl
cmp
jbe
stc
xchg
subb
ja
sub
div
pop
inc
test
loope
adc
out
popl
cmc
sub
cltd
mov
sbb
or
xchg
xchg
add
in
stos
mov
mov
in
pop
push
and
xorl
add
mov
mov
jb
cmp
push
adc
or
push
int3
push
dec
mov
adc
lock
sbb
push
cmp
xchg
shrb
jno
mov
inc
mov
int
icebp
inc
pusha
fstpl
push
pop
int3
dec
push
addr16
sub
lods
sub
bound
loope
jmp
test
lea
adc
ja
adc
mov
jnp
stos
jb
mov
xchg
pusha
or
bound
and
jl
nop
mov
cld
mov
stos
nop
mov
in
jmp
iret
pop
popa
insb
pop
adc
ds
cmp
cmpsb
int
pop
adc
in
dec
and
scas
mov
cmp
mov
aad
sub
loop
jne
or
push
mov
mov
jno
cwtl
ret
pop
sub
repnz
repz
inc
cltd
cmp
push
sar
decb
dec
push
out
xchg
lcall
ds
fimuls
arpl
adc
adc
mov
outsb
mov
orb
fs
pop
and
push
dec
outsl
cmp
mov
adc
mov
mov
fsts
jecxz
add
aad
nop
xor
cmp
xchg
dec
mov
push
call
shlb
insb
daa
sti
cli
pop
xchg
inc
and
int3
nop
out
lods
pop
js
icebp
mov
pop
cmp
cmovp
sub
mov
loope
xchg
aad
inc
fidivrs
sbb
pop
cmp
into
mov
cld
imull
jle
jl
out
push
jp
aad
xchg
sub
out
in
dec
sbb
cwtl
jecxz
inc
pusha
call
jnp
ret
sbb
dec
leave
loopne
xchg
leave
xchg
pop
popa
sub
push
lock
cld
or
addr16
jb
pushf
call
in
cmp
sbb
ret
sub
movsb
mov
fidivrl
divb
mov
pop
sbb
cwtl
mov
iret
lret
dec
jbe
stos
daa
mov
cmpsl
add
cmpb
or
shr
fwait
mov
lock
inc
cmp
outsl
hlt
xchg
pop
dec
sahf
cmc
or
cmp
shrb
pop
xchg
ja
ret
or
rcrb
push
xchg
sbb
aaa
pop
cmp
aas
std
inc
mov
fdivs
xchg
test
adc
les
mov
pop
hlt
clc
adc
and
mov
call
sbb
cmp
sub
sbb
push
test
clc
shrb
xchg
movsb
imul
jno
jo
aaa
xchg
jno
jnp
push
jmp
repnz
pop
lock
mov
adc
add
mov
repnz
rclb
lods
loopne
shr
mov
mov
pop
je
sbb
cmpsl
ja
xor
pushf
outsb
jle
mov
addr16
push
xor
nop
fisttpll
arpl
push
sbb
push
addl
mov
xchg
add
aas
jo
lahf
xor
xchg
jne
adc
jns
and
aas
incb
or
mov
pop
cltd
pop
out
mov
and
pop
scas
add
nop
xor
call
mov
xor
and
shll
pop
cmp
add
incb
cmpsl
dec
cmp
into
pop
or
lods
xor
sbb
leave
xorb
jae
popa
jmp
mov
in
and
aad
fidivs
dec
insb
push
andl
add
movsb
mov
ficomps
outsb
jecxz
mov
call
inc
adc
in
lods
mul
or
sti
dec
ss
push
cmp
hlt
mov
adc
roll
push
test
mov
nop
or
mov
sub
push
xor
mov
pop
push
aad
push
mov
ss
mov
sub
xchg
xor
test
cld
cmp
cmp
iret
popa
pop
fadd
lods
add
sub
jnp
pop
aad
dec
push
leave
mov
shl
mov
orb
mov
xor
das
pop
mov
shlb
adc
mov
insb
jnp
mov
cmp
adc
pushf
inc
movsb
rolb
rclb
and
mov
dec
int3
lock
mov
psubsb
cmp
mov
ret
xchg
sub
fidivrl
pop
and
add
xor
rolb
jl
int
andb
mov
push
popl
inc
add
outsb
xorb
sub
jo
mov
add
mov
test
jbe
push
cmp
xchg
add
mov
dec
lret
lcall
push
xchg
shr
stos
jle
push
pop
fcoml
xchg
call
xchg
les
nop
xor
sbb
mov
dec
sub
shll
lret
fiadds
dec
mov
cmp
addr16
sub
lret
push
mov
fldt
out
clc
aad
xchg
add
adcl
testb
mov
adc
pushw
cmp
mov
into
lea
stos
and
mov
mov
sub
xchg
jbe
cltd
inc
push
sbbb
pop
enter
mov
jp
xor
sbb
inc
sar
xor
inc
cmpb
outsb
test
inc
pop
dec
and
mov
sub
ss
push
xor
loopne
mov
add
pop
adc
push
lods
inc
dec
shrb
pushw
in
jae
dec
or
or
mov
mov
lret
movsl
aaa
fisttps
fld
xchg
stc
or
push
xlat
hlt
cmpsl
push
ret
jo
and
xchg
push
jno
and
push
outsl
pusha
nop
pusha
cmpsl
push
cmpsl
pop
xchg
mov
fidivrl
sub
mov
inc
loop
fadds
adc
cli
iret
loope
rol
dec
stc
leave
clc
cmp
and
movsl
jae
pop
jmp
mov
xchg
fdiv
pop
xor
and
lret
inc
out
enter
pushf
and
xor
push
pop
decl
rcl
lods
jo
hlt
decb
or
out
jl
xchg
ret
sub
jmp
nop
nop
sbb
leave
arpl
aad
gs
xchg
sub
mov
pushf
nop
cltd
repz
adc
gs
and
test
int
inc
push
dec
out
mov
cmpsl
mov
mov
shrl
jl
cmp
mov
dec
sub
jo
rol
jmp
loop
ret
and
iret
dec
sbb
add
mov
lea
mov
jp
and
mov
incb
sub
hlt
jecxz
scas
push
jae
lahf
mul
out
out
push
call
jg
jp
aaa
adc
mov
in
mov
sbb
mov
jns
sub
clc
in
mov
pop
popa
cmp
push
mov
bound
ss
cmp
push
pop
clc
stos
sbb
dec
inc
lods
scas
jp
test
mov
mov
mov
fstl
sub
pop
fdivp
adc
fldt
dec
fdivrs
and
mov
xchg
aam
jle
movsl
mov
pusha
insb
daa
inc
mov
rorb
jg
push
add
push
jg
jnp
int3
mov
pop
adc
sub
lods
mov
imul
test
ret
stc
mov
mov
gs
add
or
inc
repnz
ss
mov
mov
xlat
pop
sub
pop
adc
and
jno
or
xchg
xor
andl
es
mov
cwtl
arpl
inc
pop
pop
enter
add
pop
mov
adc
fistpll
stos
lods
cmp
clc
jno
nop
test
and
test
arpl
rcl
lcall
stc
test
test
sub
adc
js
pop
sbb
sti
dec
loop
stc
sub
adc
scas
push
insb
cmpsb
push
mov
sub
movsb
outsb
mov
ret
int
lret
xchg
dec
mov
inc
pop
fildl
push
sub
adc
jbe
mov
push
aaa
push
xlat
fdivrl
js
bound
or
mov
or
test
mov
pop
or
mov
inc
div
aad
cmpsb
ret
not
jne
stc
jne
sub
mov
or
test
outsl
xchg
aam
mov
cli
stos
js
mov
mov
leave
pop
inc
adcb
data16
cli
loope
or
int
xchg
pop
movsb
stos
stos
mov
cmp
push
jae
lret
mov
jae
fildll
xchg
dec
adc
xor
add
xor
je
mov
sbb
mov
out
and
xchg
mov
mov
sub
mov
inc
push
rclb
mov
inc
das
fnsave
test
stos
mov
outsb
pop
repz
fsts
in
stc
sbb
loope
push
dec
ror
shll
pop
mov
mov
cltd
xchg
cmp
fsubrl
xor
nop
mov
pop
jne
xchg
imul
gs
dec
sbb
cmp
mov
push
scas
stc
in
add
jnp
adc
and
ret
in
hlt
cmpl
insl
stc
dec
loope
into
mov
add
push
adc
dec
pop
in
push
mov
arpl
mov
push
sahf
xor
jecxz
hlt
add
inc
mov
std
jae
insb
dec
dec
mov
es
lret
mov
jp
cmp
repnz
imul
mov
pushf
and
js
movsb
je
idivl
pop
testb
test
popf
fsubl
loope
inc
pop
mov
ljmp
or
std
mov
loopne
pop
mov
neg
into
mov
mov
shl
mov
std
dec
repz
je
iret
pusha
mov
out
and
mov
pop
stos
push
sar
pop
push
mov
and
sbb
xchg
or
fwait
inc
fs
pop
cmp
inc
add
and
or
dec
xchg
adc
jbe
cld
adc
test
xchg
out
pop
aam
inc
dec
jmp
into
push
cmc
push
xchg
test
jmp
fwait
push
iret
lcall
jmp
aaa
cmpl
stos
aam
mov
sbb
icebp
jg
scas
and
pop
loopne
jno
imul
dec
xchg
push
mov
or
push
adc
xlat
mov
xor
xchg
test
mov
gs
sbb
outsb
into
inc
mov
or
es
jle
mov
lea
lea
les
lods
adc
pop
outsb
sarb
dec
rorb
fwait
testl
mov
cmc
pop
lret
jmp
int3
jle
repnz
pop
dec
inc
cmp
sub
clc
sub
mull
ja
sub
fidivl
jge
jnp
and
out
adc
cli
or
cmp
stos
cmpsl
and
mov
push
adc
xor
call
cmp
shlb
add
mov
and
bound
sub
call
es
and
fcmovb
fildll
jnp
mov
lods
fdivr
or
cmp
push
cld
mov
push
pop
clc
lds
fdivrp
or
mov
sbb
jo
mov
sbb
pusha
cli
mov
add
sti
les
push
mov
jmp
and
xor
sbb
sbb
mov
mov
push
cmp
mov
pop
add
dec
push
stos
xlat
pop
int3
aam
dec
sub
add
dec
adc
cmp
cmp
xor
mov
scas
jne
push
push
xchg
lret
outsb
and
jno
mov
pop
inc
int3
mov
sbb
addr16
push
add
call
adc
scas
fld
hlt
test
mov
mov
xchg
iret
pop
jb
clc
sbb
int3
adc
dec
add
fidivs
cld
push
mov
test
mov
in
cmc
mov
sbb
mov
or
lock
mov
add
cmpsl
lcall
lods
xor
pop
xlat
xor
das
ror
add
push
in
sbb
or
add
shrb
push
rorb
mov
dec
cmc
push
fs
pop
in
push
rclb
mov
and
hlt
mov
mov
and
mov
pop
popl
pop
and
hlt
or
fs
nop
int3
mov
xor
mov
in
stos
push
adc
das
fwait
aad
mov
add
push
movsb
cmp
loopne
inc
ds
or
push
ret
or
dec
or
push
je
sbb
imul
test
add
xor
imul
insb
xchg
sub
stos
mov
jns
leave
add
jle
vpmaxub
and
add
mov
add
fwait
lock
cmc
and
fildll
xor
leave
fwait
and
fsubr
cmpl
sbb
call
cmp
cltd
mov
mov
jge
or
mov
xchg
pop
clc
inc
sbb
movsb
mov
mov
pushf
cmp
jle
jae
inc
or
cmp
dec
xchg
or
ret
add
xor
sbb
jmp
fstps
lock
mov
shr
cmp
pop
mov
mov
add
mov
or
out
pmaxub
xchg
lds
lods
sub
mov
xlat
or
adc
shl
jnp
call
ss
push
subl
jge
mov
xchg
stos
or
stos
les
negl
pop
and
jmp
xor
or
cli
in
dec
ss
or
loop
push
daa
divb
jae
cmpsl
xchg
cmp
ret
repnz
pop
jmp
insb
fisubl
cli
dec
jg
ffreep
push
test
leave
cmp
adc
mov
xor
scas
je
sbb
mov
movsl
xchg
xchg
push
pop
lods
mov
push
je
mov
jnp
adc
nop
lea
pusha
dec
aaa
subl
cmp
or
push
adc
push
add
cmp
cmp
aaa
cmc
or
mov
inc
into
adc
cltd
mov
test
sbb
mov
fs
aad
repz
xor
idivl
cmp
cltd
dec
cmp
das
out
jne
xchg
mov
lea
int
sbb
mov
mov
fisubrs
loopne
add
loopne
leave
and
call
pop
loop
aaa
mov
inc
imul
xlat
loopne
or
dec
sbb
push
loop
pushf
cmp
inc
bound
mov
xor
or
es
mov
cmpsl
stc
dec
or
lods
dec
pop
clc
je
push
popa
push
sahf
jno
and
cmpsl
xorb
stos
aad
enter
dec
jge
jp
fs
push
sub
mov
cmp
mov
pop
stos
adc
mov
adc
fsts
int
sub
aad
mov
sbb
pop
mov
mov
in
lds
out
imul
dec
sub
and
roll
adc
test
int
push
jae
pop
addr16
aaa
dec
addr16
xlat
push
pop
xchg
adc
xcrypt-ecb
cmpsl
or
or
jmp
sub
repnz
dec
add
inc
out
insb
les
dec
outsl
cmp
push
sbb
sti
call
cmp
test
add
decb
mov
sbb
ja
inc
enter
mov
xor
sub
leave
inc
cmp
push
and
iret
push
jo
loope
stos
nop
push
push
add
cmp
pop
pop
lcall
push
and
push
xchg
cmp
xchg
ljmp
push
or
adc
jae
arpl
cwtl
cmc
scas
inc
shll
jg
pop
jg
mov
cli
rcrl
enter
xor
jmp
mov
leave
mov
mov
rcrl
mov
fdivrp
ficoml
lods
cwtl
test
dec
mov
fists
sub
jmp
jmp
pop
mov
mov
xor
je
enter
sbbb
inc
push
and
mov
mov
jp
testl
leave
mov
icebp
cmpsl
int3
push
push
repnz
pop
ljmp
aaa
cmp
add
out
mov
in
stos
mov
lret
push
sbb
mov
adc
add
push
arpl
nop
les
negl
movsb
addl
fistps
mov
or
cmc
fnstcw
and
mov
push
lods
lea
int
jno
mov
ljmp
mov
mov
inc
fstl
adcl
dec
sub
push
enter
int
mov
loopne
adc
bound
icebp
std
add
cli
stc
aam
mov
or
cmc
dec
stc
xor
xchg
fistps
ret
hlt
pushf
stos
sub
out
je
loope,pt
shl
gs
insl
mov
adc
jl
lea
or
mov
out
adc
cli
cmpsb
jecxz
pop
push
sub
imulb
repnz
xorb
xor
movsb
lret
outsb
inc
pop
mov
or
dec
mov
repz
xchg
sbb
movsl
sbb
inc
adc
fnstcw
lods
xchg
mov
xor
outsb
mov
movsb
cmp
or
xor
leave
fs
pop
rorl
fistps
enter
cmp
jae
push
pushf
in
jne
lret
add
enter
mov
pop
push
and
cmpsl
push
lock
ja
cmp
fadd
stos
lods
ds
mov
fistps
int3
mov
sbb
mov
adcb
sub
cmp
mov
arpl
cwtl
dec
push
repnz
mov
xchg
into
mov
xor
cmp
inc
cmpsb
je
ss
arpl
cli
movsb
jecxz
or
mov
cmpsb
or
mov
int3
fildll
push
ja
lret
jns
add
or
pushf
or
int3
movl
xor
xchg
ret
adc
pop
xchg
mov
sbb
sub
add
mov
jns
mov
adc
add
bound
xor
es
lods
vhsubps
popa
fcompl
cmp
jmp
out
jg
sbb
xchg
ret
subb
sbb
jp
sbb
scas
bound
repnz
pop
mov
and
adc
add
xchg
iret
push
inc
int
or
int3
fs
push
mov
lahf
push
into
mov
decb
push
and
mov
inc
jbe
mov
xor
pop
data16
sub
lods
pop
int3
call
cmp
mov
inc
mov
push
enter
jp
lcall
inc
cmp
mov
pop
bound
nop
jmp
push
pop
pop
ljmp
mov
and
inc
xor
pusha
aaa
cmpsb
fdivs
mov
mov
hlt
mov
inc
pop
and
mov
les
sbb
pop
cmp
push
xchg
and
repz
jnp
xchg
ljmp
sahf
cmpsl
jge
fs
fimuls
mov
icebp
dec
daa
shrb
xor
fwait
int
xchg
mov
lahf
cmpsl
or
dec
movd
pushf
scas
xlat
cwtl
push
lods
sub
inc
sbb
mov
arpl
cld
les
cmc
das
jno
das
cmp
fsubrl
mov
adc
ljmp
pop
aas
cmp
push
jecxz
aaa
sbb
sub
inc
shll
and
xlat
and
movb
lret
xlat
jbe
into
pop
ss
add
sub
movl
popa
mov
mov
mov
jne
mov
rcrb
inc
iret
xor
dec
sbb
sbb
pushf
push
in
adc
shrl
mov
fs
insb
int3
in
repnz
push
aam
es
scas
adc
pop
mov
movsb
push
sahf
sti
xchg
sbb
jg
cli
pusha
mov
fstl
or
dec
popf
push
jns
push
rcll
cmpsb
das
int3
cs
out
dec
arpl
sbb
mov
fst
sub
adc
ficomps
xchg
or
sbb
rclb
ficoms
mov
pop
inc
loop
xor
cmp
xor
out
fmull
ljmp
cmp
lret
bound
rcrl
jno
sti
push
pop
lds
push
xchg
xchg
xor
cmp
cld
shl
aas
and
ret
jl
cwtl
loop
mov
xor
cmpsb
fwait
mov
and
jge
sub
add
push
mov
mov
mov
mov
pop
ljmp
and
jmp
jo
loope
test
aad
in
movsb
adc
int3
mov
inc
xchg
repnz
es
adc
cmp
sbb
bound
jg
jl
jg
lods
les
repnz
lds
sub
ret
repz
xor
loop
fistps
pushf
pop
sub
adc
sbb
pop
mov
sbb
mov
jo
push
adc
inc
and
lahf
icebp
fdivs
xchg
loopne
xlat
pop
in
xchg
shl
dec
add
repnz
mov
push
popl
or
test
push
xor
popf
test
mov
push
cmp
mov
outsb
pop
sar
insl
pop
lret
cmp
int
adc
mov
jns
push
sbb
jp
movsb
xchg
jle
dec
pop
push
negb
add
xor
mov
adc
and
cmp
xchg
mulb
pop
out
gs
fwait
call
call
or
sub
insb
xor
xchg
xorl
test
enter
outsb
add
loopne
cmp
mov
jne
xchg
test
cmpsl
inc
pop
inc
jne
sub
pop
hlt
jmp
adc
stos
cmp
xchg
stos
jl
mov
mov
jge
fwait
cmp
pop
in
lods
mov
push
mov
nop
inc
mov
sbb
loopne
loopne
xorl
mov
andl
dec
cld
jge
xlat
les
imul
daa
fildl
ja
int
out
popf
mov
aam
adc
test
stos
pushf
data16
data16
clc
in
fisubs
inc
pop
mov
popf
fmull
cltd
shrb
mov
icebp
popf
push
and
inc
ljmp
push
pusha
sub
pop
or
add
bound
mov
js
hlt
test
fisubl
cmovne
mov
loop
push
shll
mov
insl
adc
cmp
lahf
sbb
cmpsb
enter
pop
pop
mov
jae
bound
jle
imul
add
mov
js
cld
scas
arpl
jmp
jmp
mov
aaa
xchg
dec
out
insl
or
push
ss
xchg
sub
jmp
add
out
in
and
lods
add
roll
arpl
bound
add
test
cmp
out
xchg
or
lret
xchg
push
mov
mov
lret
mov
mov
jns
and
and
jno
icebp
scas
jecxz
lock
enter
jae
test
pop
pop
or
int3
mov
mov
jnp
push
sbb
xchg
pop
fstl
mov
mov
aas
cmp
mov
mov
les
dec
cmp
jb
lods
outsl
incl
lds
add
cmpsl
sbb
mov
addb
cwtl
std
add
push
scas
xchg
cmpsb
jp
in
daa
clc
dec
mov
xchg
push
and
sarl
jne
mov
push
jb
enter
arpl
push
inc
mov
aas
repnz
jmp
push
pusha
sbb
mov
call
xchg
jge
rcll
fidivl
sbb
adc
dec
imul
mov
lods
xor
or
xchg
and
adc
stc
out
inc
popf
push
lahf
loop
xchg
fstl
lcall
xor
mov
fstps
and
dec
loope
cld
mov
cmp
cmp
mov
icebp
xor
xor
jne
ljmp
ss
add
mov
cltd
adc
mov
jns
push
pop
test
and
or
and
sbb
adc
dec
pop
cmp
dec
push
jae
test
push
std
inc
sbb
mov
dec
cmc
mov
shrl
scas
fbld
add
xchg
loopne
sub
mov
lods
mov
scas
int
mov
cmp
xchg
aam
outsl
pushf
mov
push
rorl
xlat
cmp
pop
in
and
inc
call
in
xchg
loopne
inc
data16
pop
jge
jns
fimuls
cwtl
aam
std
stos
in
inc
xchg
icebp
inc
in
mov
add
in
imul
and
cwtl
jecxz
dec
outsl
add
pop
jg
jns
subb
inc
nop
lret
cmpsl
mov
mov
aas
leave
pop
sbb
pop
scas
incl
sub
inc
stos
or
lock
cmpl
pop
or
mov
sub
ret
addl
imul
fmul
loope
push
jge
test
sti
or
sub
xor
jb
jb
aas
std
into
add
jns
mov
inc
pop
arpl
out
lret
stos
cld
mov
pushf
mov
pop
out
in
inc
mov
aas
jbe
jmp
scas
pop
dec
in
inc
xlat
jmp
xchg
out
imul
les
xchg
jecxz
out
pushf
cmpsl
jecxz
xor
mov
jge
mov
cmpsl
jg
shlb
mov
cmc
inc
lret
cmp
in
shlb
add
xor
out
mov
jo
xor
push
cmp
add
ret
and
jno
shlb
lods
cwtl
mov
hlt
repz
push
and
cmp
outsl
jle
cmpb
mov
dec
sbb
adc
sbbb
in
iret
int3
outsl
inc
xlat
leave
jae
je
mov
xlat
in
and
enter
mov
dec
xor
loope
mov
cmpsb
dec
scas
or
adc
stc
and
mov
mov
mov
xorb
add
cmp
dec
lret
mov
mov
out
popf
mov
inc
cmp
mov
mov
mov
sub
push
ja
andl
ljmp
pop
scas
out
or
sti
add
cmp
jecxz
sbbl
jl
mov
in
add
out
into
int
mov
mov
movsb
mov
lret
jg
and
pusha
xor
cmp
aaa
cmp
xor
sub
iret
mov
outsb
xor
mov
mov
lahf
jne
mov
and
mov
call
cmpb
clc
mov
push
dec
jo
cltd
sbb
fsubs
out
sub
test
jne
jne
or
test
icebp
ss
or
mov
fistps
mov
stc
xchg
movsl
mov
mov
pusha
out
pusha
int3
int
das
mov
cmpsb
pop
inc
cmpsb
movsb
mov
push
divl
xchg
out
inc
cmp
mov
fadd
ljmp
out
inc
cmp
es
lret
add
aam
in
fndisi(8087
aaa
ud2
mov
cmp
bound
cwtl
or
xchg
cltd
push
inc
cltd
test
loop
mov
and
or
jge
cld
pop
xchg
insl
or
mov
jmp
inc
insb
jecxz
push
pop
imul
lahf
mov
das
int
cmp
dec
ret
outsl
cmc
mov
push
aaa
push
ficompl
xor
xor
push
or
sbb
push
inc
cwtl
inc
pop
add
outsb
daa
xor
mov
fstpt
out
outsl
lods
sarb
rorb
and
dec
jae
pop
dec
xlat
mov
or
fwait
nop
fidivs
xor
lcall
enter
cmp
aam
lret
sub
lahf
std
fldl
mov
dec
push
repz
jb
out
cmc
es
loopne
test
lret
lcall
sbb
orb
or
sbb
clc
rclb
dec
ret
sahf
cld
inc
pop
jns
mov
cs
sbb
pop
xchg
nop
insb
test
lahf
imul
add
xchg
dec
loop
add
add
mov
test
pop
add
lock
jae
and
rcll
adc
in
stos
outsl
inc
dec
adc
and
jns
sbb
xor
lock
mov
xlat
jbe
cmp
aad
pop
mov
sub
test
dec
inc
in
rcrl
push
adcl
sar
xchg
or
aaa
sahf
and
mov
push
push
shlb
and
icebp
sbb
and
pop
idivb
pop
push
push
out
jb
dec
mov
and
push
push
cmpb
test
lahf
jg
insb
add
js
and
bound
mov
imul
or
pop
aam
push
push
xor
cmp
xor
arpl
jl
fwait
seta
dec
int
pop
repz
int
adc
xchg
inc
jmp
and
xchg
jp
cli
ds
pop
call
sbb
pop
jmp
roll
xchg
dec
xchg
mov
pop
adc
test
shrl
in
pop
negb
test
mov
mov
lahf
inc
add
ljmp
pop
bnd
mov
jo
cld
mov
aad
mov
rcr
outsl
mov
push
ss
xor
mov
loop
cmp
es
imul
es
mov
test
lods
loop
inc
jecxz
mov
inc
mov
add
push
test
or
xor
popa
es
popf
jl
lahf
lret
mov
pop
sbb
sbb
sti
icebp
fstps
and
adc
push
jb
enter
out
cmpb
xchg
cld
js
fnstsw
add
cmp
pop
int3
mov
nop
sti
add
arpl
idiv
pop
jo
adc
and
loopne
into
pop
cltd
adc
and
inc
test
jo
call
fcomps
repnz
push
imul
das
add
pop
call
daa
not
mov
mov
movsb
mov
jmp
outsl
sbb
das
mov
dec
aam
add
mov
adc
push
cmc
cltd
icebp
sub
jae
pop
mov
mov
std
pop
and
dec
mov
add
cmc
lock
outsb
btc
push
cmp
xor
movsb
xor
mov
aad
rol
outsl
das
imul
into
lock
push
sbb
sbb
popa
test
punpckhwd
ficompl
loope
cmp
inc
scas
sbb
lods
mov
mov
inc
mov
aas
jl
lcall
fs
scas
or
xlat
movsl
or
pop
dec
push
add
jno
sbbb
adc
and
adc
pushf
sti
sub
iret
pushf
repz
sahf
fldcw
adc
mov
xchg
ljmp
sub
mov
pushf
cmp
jo
inc
out
fwait
cwtl
push
mov
xchg
shll
jmp
push
filds
arpl
in
repnz
push
pop
adc
xor
and
fstps
js
lds
or
out
mov
lret
xchg
sub
inc
add
cmpsb
xor
stos
adc
xchg
dec
adcb
sub
mov
vcvtps2pd
jb
xchg
outsb
scas
push
imul
int3
xchg
add
fidivs
adc
dec
stos
xor
jmp
fisttps
inc
sahf
addr16
inc
mov
testl
lret
push
nop
aam
jle
cmp
lret
cmp
cmp
out
repnz
mov
test
dec
in
mov
aad
mov
leave
xor
addb
stos
mov
cmpsl
mov
mov
add
out
dec
cmpsl
pop
jo
sbb
fdivrs
rep
test
lds
sub
in
cld
call
icebp
lcall
sbb
stos
test
add
cmp
scas
inc
cmp
test
or
les
repz
fdivrp
decl
sbb
loope
lret
aaa
or
jb
cmp
adc
jle
push
mov
mov
pop
mov
or
push
ss
sbb
insb
es
xor
mov
dec
stos
shrl
rorl
xor
xchg
sbbb
mov
add
lds
adc
mov
std
movsl
xor
aam
jns
or
xor
fildl
mov
dec
mov
inc
or
push
out
lcall
mov
iret
movsb
in
dec
pop
je
insb
mov
inc
ja
movsl
jmp
scas
fdivrl
sub
jp
mov
pop
addl
nop
push
call
dec
setns
push
nop
out
call
in
jge
cmpb
outsb
arpl
jecxz
lcall
push
iret
nop
fnstcw
push
popa
push
mov
mov
mov
ret
sbb
add
cli
sbb
test
pop
jmp
jo
xor
cmp
pop
jae
cmc
fwait
xchg
adc
or
rorl
shl
les
lea
in
cmp
xorl
rcrl
cld
xlat
pushf
pusha
lods
mov
add
inc
lahf
push
jg
and
das
fstpt
pop
daa
lret
push
dec
nop
in
cmp
mov
push
add
add
scas
scas
stc
inc
xchg
pusha
fwait
adc
cld
loop
add
and
andb
pop
adc
adc
dec
popa
shrb
lods
out
lea
bound
cmp
movsl
push
loope
dec
pop
xchg
pusha
cmp
lret
mov
mov
jns
mov
les
inc
mov
dec
pop
jle
xchg
in
repnz
in
xchg
push
cli
jmp
xchg
fbld
out
je
or
in
sahf
popa
rdmsr
pop
jecxz
shlb
outsb
mov
test
test
hlt
imul
mov
push
cmc
push
data16
loopne
push
movb
hlt
mov
out
add
ljmp
imul
dec
out
test
or
inc
scas
pop
imul
sbb
xchg
mov
loop
xchg
sbb
mov
inc
in
repnz
clc
adc
push
sbb
pop
std
sbb
sbb
out
xor
jbe
jp
xor
pusha
jmp
dec
lea
dec
out
xor
jle
stos
sub
dec
or
inc
mov
sub
xor
shll
rcrb
fdivrp
fnstcw
aaa
cmp
out
lret
pop
in
xor
inc
ficoms
test
xchg
frstor
stc
fwait
jge
cmpsb
popf
out
dec
jo
imul
xor
out
cmp
shll
pop
adc
or
xor
rcr
cmp
xor
xchg
mov
adc
ret
fwait
sub
inc
popf
out
sub
testl
xchg
sahf
cmp
mov
leave
adc
xchg
lds
loope
inc
add
shlb
lea
and
add
pop
ljmp
xor
out
loop
jmp
xchg
sbb
xchg
add
xlat
mov
fdiv
or
cs
sub
dec
aad
cmc
popf
enter
pop
dec
sub
lock
add
dec
in
cmp
roll
jl
inc
cmp
addr16
rcr
es
out
movsb
setae
dec
fcompl
mov
mov
adc
outsb
jns
pushf
js
outsl
add
pop
mov
lret
aad
jg
xchg
sti
jbe
push
push
fildll
and
sbb
bound
rcrl
notl
jge
xchg
or
push
dec
cmc
or
xor
loope
ds
xchg
sub
dec
lods
xchg
jno
leave
mov
adc
imul
inc
mov
mov
stos
jge
insb
sti
xlat
xor
ds
test
clc
fs
pop
mov
aaa
or
xchg
push
jl
mov
fwait
mov
lahf
aam
mov
pusha
rcl
sub
bnd
pop
int
lods
fdivs
lahf
rorl
or
mov
jo
jg
cmp
in
push
gs
mov
sbb
fisubs
inc
lcall
cmp
outsl
pop
xchg
addb
mov
lret
mov
xchg
sub
std
mov
fwait
insb
cli
jns
mov
inc
adc
bound
addr16
ss
lods
pop
adc
inc
data16
out
mov
and
popf
mov
aad
fldt
aaa
inc
push
sti
and
hlt
dec
shll
js
out
inc
xchg
xor
pop
lcall
or
sub
lods
orb
jns
dec
cld
je
sub
mov
push
gs
add
insl
or
pop
mov
ja
mov
push
jecxz
cld
jle
inc
add
xor
xchg
adc
or
aas
fisubs
insl
jl
xor
sub
icebp
cmp
mov
add
xchg
leave
in
cs
sub
fld
adc
ds
adc
and
mov
enter
test
cs
test
push
rolb
or
dec
aas
push
aad
in
hlt
xor
decb
enter
inc
nop
stos
inc
pusha
aam
sub
pop
sbb
mov
xabort
fnstsw
bound
dec
data16
inc
les
push
and
or
jnp
xchg
or
push
adc
cmpsl
adc
lods
out
dec
dec
mov
stc
loopne
mov
mov
xchg
cmpsb
mov
mov
shlb
mov
xor
mov
out
dec
cmp
add
mov
xchg
mov
enter
jbe
cltd
pop
pop
push
jns
aaa
inc
dec
jno
push
in
daa
cld
dec
stos
data16
rcll
sub
and
adc
lods
or
hlt
mov
inc
aaa
andl
mov
sub
push
test
fadd
add
dec
mov
fcomip
icebp
fwait
xor
aaa
sbb
add
stc
movsb
sbb
test
test
sbb
push
pop
jmp
ja
sub
in
add
jecxz
inc
cmp
inc
out
imul
sbb
pop
cmp
icebp
out
cld
aas
pop
lret
jnp
scas
repz
mov
test
callw
mov
in
mov
push
sbb
sub
mov
cmp
repz
xchg
sbb
ret
pop
and
mov
adc
mov
stos
loope
data16
sbb
cmpsb
jns
mov
cmc
aam
cmpl
je
pushf
lds
add
loopne
add
mov
cmp
or
xchg
aam
nop
cld
mov
lret
das
push
lock
and
or
cmc
mov
addb
js
inc
test
out
push
jle
lret
out
subb
lcall
lcall
arpl
push
dec
sti
int
cld
nop
enter
lret
fwait
adc
insl
mov
std
push
ds
les
jle
jle
and
xchg
mov
add
pop
mov
leave
mov
dec
outsb
popf
popf
lds
mov
adc
pop
adc
in
mov
sub
cli
xor
sub
inc
stos
imul
neg
or
int
leave
jle
icebp
pop
idivb
je
push
insb
insb
inc
fisttpl
loopne
pop
and
lcall
push
div
daa
push
mov
jb
das
dec
xor
test
pushf
dec
fdivl
mov
cmp
clc
mov
insb
jge
fimuls
or
inc
push
and
sti
fwait
adc
push
push
test
aas
add
and
mov
xor
sbbl
jl
mull
push
cmp
inc
xchg
sub
xchg
cmp
dec
add
adc
sbb
xor
jne
popaw
imul
lcall
mov
cld
inc
test
push
mov
rcl
sub
cmp
dec
xchg
test
sub
aas
mov
repz
sbb
or
cmp
movsb
sbb
mov
cld
inc
inc
arpl
mov
loopne
push
repnz
cwtl
out
mov
mov
notl
sub
in
shlb
jns
inc
push
push
in
cmp
sub
popa
sbb
add
outsb
add
inc
test
mov
in
fwait
es
std
cmp
add
out
dec
enter
mov
sbb
push
in
hlt
mov
stc
sub
mov
sub
and
lods
jle
popf
bound
xor
movb
push
scas
and
cmpsl
mov
outsl
inc
imul
fucomp
adc
xchg
cmp
fnstcw
jp
sti
subl
adc
sti
scas
xor
mov
mov
push
scas
inc
insl
push
loop
iret
push
cmpsb
mov
cmp
fisttpl
push
and
stc
outsl
sub
in
jmp
aam
push
sbb
pop
dec
dec
sahf
test
pop
pop
cld
mov
loop
rclb
mov
filds
stos
iret
loopne
mov
jns
dec
cmpl
insl
pop
fsubl
jmp
jns
add
xor
lahf
mov
cmpsb
lea
test
cmpsb
stos
imul
jbe
roll
jbe
insb
pop
lods
mov
push
pop
push
cmp
xor
mov
jns
sahf
pop
ret
mov
punpckhbw
push
inc
in
lahf
pop
lds
dec
xlat
jl
cltd
add
rcrl
xor
sub
sbb
jae
int3
lods
mov
xchg
repz
mov
shrb
sub
mov
fildl
inc
sub
out
xchg
push
bound
test
js
aam
leave
repnz
and
xor
movsl
in
xchg
adc
push
cld
pushf
cmpsb
sub
cld
out
pop
or
repz
shll
adc
dec
idivb
sub
popf
dec
xchg
sbb
xlat
lcall
sbb
cltd
lds
std
or
push
ficomps
std
add
rclb
xchg
fimuls
out
sub
inc
push
insb
lret
pop
push
push
scas
fldl
repz
es
dec
arpl
in
sub
jae
out
cwtl
mov
lods
ja
mov
cmc
jp
xor
mov
xchg
mov
add
rorl
dec
lock
pop
les
sub
jmp
sahf
cmp
mov
mov
inc
mov
in
cwtl
mov
inc
pop
jge
mov
cmpb
testb
xchg
fs
fstl
sbb
cmp
outsb
aas
jne
sbb
mov
clc
sbb
xlat
in
push
push
add
test
cmp
fldt
imul
jne
outsl
cmp
cwtl
sub
out
mov
push
xor
pop
dec
push
jae
fldenv
jo
pop
cli
pop
sub
in
les
repz
movsl
add
addr16
sbb
inc
arpl
shll
data16
and
push
insl
jecxz
sbb
addr16
lods
and
das
gs
and
rol
rcr
mov
ljmp
or
je
fsubl
ljmp
dec
pop
dec
jp
ret
mov
fisubs
mov
mov
push
add
xor
lock
popl
fnstsw
adc
xchg
out
mov
aaa
stos
lahf
pop
sub
mov
and
andb
nop
test
leave
sahf
jle
mov
rol
jb
and
pop
imul
mov
add
or
dec
sub
push
popl
into
cmp
pop
add
sahf
lock
xchg
pop
dec
mov
movsb
cld
pop
movzwl
pop
sbb
in
ss
in
mov
insl
mov
push
test
mov
pop
lret
loope
out
or
sub
lret
xor
jecxz
mov
xor
xor
jg
clc
pushf
fwait
inc
push
cmp
shlb
inc
and
lods
cs
xor
ret
bound
subb
inc
lods
dec
pop
mov
mov
scas
mov
push
xlat
lods
mov
pushf
mov
add
mov
push
cmpsb
jno
sbb
mov
push
xor
mov
in
xchg
mov
xor
cltd
in
jmp
jo
or
loope
xor
add
loope
pop
popf
mov
add
and
test
repz
lds
shll
mov
lret
dec
bound
int3
ss
xor
in
cmpsl
xorl
mov
mov
mov
inc
jns
xchg
arpl
out
dec
sub
cmp
mov
xchg
aad
xchg
inc
cmp
add
mov
pushf
adc
jecxz
sub
push
and
sub
cmpsl
mov
nop
jmp
test
and
movsl
pop
mov
xchg
xchg
js
stos
jg
repz
inc
inc
push
cmp
rorl
jb
mov
jl
adc
out
das
jmp
sar
push
jo
xchg
mov
xor
icebp
push
xchg
addb
orl
hlt
dec
pop
ds
inc
cs
xchg
cmp
or
jp
inc
or
adc
out
sub
pop
add
in
push
out
lock
mov
dec
scas
add
sub
sarl
xchg
xchg
shll
cmp
pop
inc
mov
out
xlat
lock
ja
clc
lds
mov
ss
mov
push
mov
jns
jns
aaa
hlt
mov
mov
mov
fimuls
clc
dec
dec
inc
cmp
mov
jge
movb
jne
jo
xchg
inc
add
daa
insb
cmp
sbb
bound
js
xchg
mov
mov
scas
sarl
push
ja
sub
adc
ret
test
scas
aam
cli
int
cs
mov
fs
dec
pop
or
xor
pop
loopne
orl
iret
test
repnz
mov
je
insl
mov
xor
push
push
mov
add
faddl
xor
jbe
das
add
sbb
in
pusha
mov
jmp
sbb
push
movsl
dec
imul
xor
loope
push
mov
dec
mov
inc
xlat
adc
ljmp
outsb
aas
jecxz
xchg
adc
inc
mov
sub
fs
insb
subl
xchg
mov
jmp
test
das
loop
sbb
ficompl
rorl
mov
mov
jge
and
ljmp
test
inc
jne
cmc
dec
cmp
adc
into
pop
dec
in
inc
push
mov
push
loop
or
mov
sbb
sub
mov
lret
cmp
dec
add
mov
jmp
mov
xor
pop
dec
rcr
flds
add
xchg
mov
xchg
lock
jne
stos
shll
jge
cmp
adc
pop
adc
into
and
movb
mov
mov
insb
xor
in
fisubs
mov
mov
push
or
lret
pop
mov
jns
hlt
xor
icebp
sbb
ret
jp
pop
push
push
fcmovnu
aaa
dec
push
adc
xchg
mov
xchg
inc
pop
add
adc
pusha
dec
mov
popf
jge
sar
dec
stos
cmp
stc
cmp
and
mov
cmp
sbb
or
xor
adc
mov
mov
mov
movsb
sbb
sbbb
adc
call
xor
cld
cmp
cmp
inc
cmp
xor
aam
sub
sbb
icebp
frstor
lahf
mov
adc
and
sbb
mov
mov
ljmp
push
fdivrl
xchg
jmp
and
cmp
divb
pusha
sub
push
enter
inc
mov
cmp
test
inc
ljmp
in
aad
push
movsb
lahf
nop
lods
mov
shll
jmp
loopne
pop
mov
dec
insl
fdivrs
loop
fldenv
inc
rcrl
mov
jg
xchg
aaa
fdivr
sbb
outsb
inc
inc
loop
mov
pushf
or
cmpsb
aad
hlt
xor
cld
and
pusha
fisubl
rolb
jg
pop
mov
xchg
add
fcoml
bound
push
repnz
rorl
adc
das
jmp
xchg
adc
cmp
ret
stos
shlb
mov
jg
cmp
xchg
js,pn
in
ret
cmp
stos
xchg
ret
jg
aam
movsl
xchg
jl
cltd
cmpsb
lcall
stc
mov
adc
fisttps
mov
push
add
repnz
out
jl
and
pop
fxch
mov
dec
mov
dec
paddd
sbb
cli
mov
inc
sbb
push
sbb
outsl
repnz
popf
xchg
dec
xchg
push
add
jb
and
mov
or
pop
mov
iret
xor
ja
mov
push
xor
dec
les
mov
ss
out
dec
scas
cmp
mov
pop
std
stos
das
jmp
ret
sahf
push
clc
into
push
cltd
int
lods
movaps
jne
lret
xchg
jg
cltd
push
imul
shlb
es
mov
leave
add
fldenv
cmp
add
fcmove
lds
add
test
ret
cmpsb
sub
es
pop
pop
jmp
xor
ja
jge
frstor
hlt
out
cld
pop
pushf
cmpsl
push
into
mull
xor
fs
ljmp
enter
xor
lods
arpl
nop
pushl
ss
fcomip
mov
push
jne
jmp
jo
cli
dec
mov
or
in
push
push
jae
int3
dec
ss
xchg
xor
jae
pop
fs
icebp
inc
pop
add
fdivs
xchg
cmp
cmpl
push
inc
xcrypt-ecb
cmpsl
lea
scas
adc
loop
jnp
cmp
cs
jns
cmp
jb
test
das
in
or
shll
mov
test
mov
nop
and
xor
push
xchg
ljmp
xlat
aad
iret
push
and
loop
addr16
adc
or
jge
andb
into
dec
lds
sbb
inc
jns
cmp
mov
sbb
cmp
xchg
lret
fnstenv
jae
xor
adc
xor
mov
mov
data16
or
rorl
dec
test
push
mov
xchg
addr16
inc
pop
and
sbb
scas
movsl
xor
dec
std
scas
pop
sub
lcall
push
cmp
testb
call
mov
aaa
add
arpl
pop
pmuludq
jns
dec
sub
dec
pop
fmul
jbe
loop
jns
dec
fsubrs
sub
and
stos
adc
mov
lahf
jbe
inc
outsl
rcl
cwtl
mov
sub
lahf
insb
testl
ret
repnz
shr
sbb
xchg
gs
fiaddl
stc
jo
jecxz
dec
pop
mov
push
cmpsl
jle
fidivs
pop
jo
pop
bound
mov
inc
cmpsl
jbe
push
pop
shlb
mov
call
jae
fimull
cltd
cltd
sub
pusha
pop
jae
add
imul
push
xlat
cmp
or
adc
sahf
fadds
jno
or
inc
push
aam
or
in
cld
xor
mov
jg
xchg
lods
test
adc
mov
or
inc
int3
sbb
mov
popl
test
and
adc
negb
jo
in
arpl
into
mov
and
push
xchg
push
ss
loope
mov
mov
sbb
clc
jp
loopne
and
lret
or
cmp
rcl
mov
push
jge
xor
pop
cmp
sbb
push
std
popl
sbb
inc
push
scas
mov
leave
mov
movntq
insb
imul
movsb
xchg
jns
push
decb
push
inc
push
stc
push
pop
rorb
pop
jmp
xchg
jge
lret
fldl
popa
mov
pushf
in
jmp
and
in
or
addr16
andb
cmp
cmp
sysret
lea
xchg
jns
clc
sub
dec
xchg
fstps
and
scas
xor
push
mov
sub
push
xchg
jmp
ljmp
cmp
gs
movsl
jno
push
push
add
mov
shll
sbb
dec
mov
fiaddl
inc
test
pop
roll
add
xchg
lret
jge
cmpsl
outsb
adc
out
sbb
and
xor
dec
push
pushf
mov
out
adc
xor
test
sub
call
jne
inc
and
clc
sbb
movsl
add
cld
icebp
decl
inc
dec
xor
lcall
or
inc
lcall
and
shr
mov
clc
popf
das
mov
push
aam
mov
mov
fstps
aad
mov
jnp
jns
push
nop
mov
leave
call
cmc
add
jnp
jmp
mov
es
pop
xchg
rcrb
ret
addr16
sahf
inc
faddl
mov
movsb
mov
add
inc
clc
cmc
roll
repnz
cmp
stc
push
nop
pushf
test
loope
std
int
lret
loopne
orl
jnp
lret
popa
ds
lret
xor
and
xor
outsl
mov
test
mov
mov
ja
daa
dec
xchg
and
jb
jge
jae
mov
or
daa
adc
sbb
add
andb
and
push
in
out
rolb
repz
cmp
inc
cltd
fsub
fiadds
aad
push
jbe
inc
adc
xchg
pop
jnp
lods
mov
sub
and
mov
cmp
arpl
add
jbe
lea
push
jge
push
adc
pop
jb
or
mov
popf
sub
in
inc
int
out
lods
adc
jecxz
int
es
scas
movsb
int3
jb
scas
add
cmp
adc
dec
movsl
mov
mov
push
mov
adc
pop
imul
mov
jae
jmp
out
cmp
es
push
aaa
subl
adc
mov
fnsave
dec
fcoml
dec
or
push
je
shrb
adc
imul
cmpl
jecxz
xor
mov
xlat
xchg
dec
pop
sub
inc
loopne
jnp
leave
pop
addr16
adc
pusha
dec
push
jae
cmpsl
mov
js
js
nop
dec
aas
mov
adc
pop
fisttps
nop
loope
jae
inc
fwait
sbb
dec
daa
sbb
sub
pushw
int
push
sub
push
jp
mov
pop
cmpsb
mov
push
mov
mov
sbb
hlt
dec
dec
pop
sub
test
push
dec
mov
bound
fisubrl
mov
pop
mov
jl
inc
sub
fsubr
cmp
mov
xchg
stos
cmpsb
insb
lds
addr16
jb
ja
jno
push
mov
and
pop
mov
int
sbb
adc
stos
cmp
add
ficoms
fsubl
push
je
in
fildll
arpl
and
movsb
cmpsl
sub
mov
mov
lret
movsb
mov
gs
mov
adc
mov
adc
inc
xchg
aas
xchg
inc
mov
fxch
or
jno
stos
in
adc
call
xor
out
sub
repnz
repz
cmp
test
std
sub
jmp
int
pop
push
out
rorl
popa
xor
push
dec
es
mov
jbe
fdivrs
inc
es
pop
mov
pop
cmp
dec
dec
jcxz
and
mov
enter
push
or
jb
pop
jge
push
push
mov
pop
push
out
insl
repz
pop
cmp
inc
out
int3
out
cwtl
sub
mov
lret
popf
adc
and
je
push
mov
mov
adcb
and
aaa
mov
mov
pop
rolb
jb
repz
and
js
sbb
mov
mov
ret
xor
into
push
sub
into
mov
push
iret
inc
hlt
mov
incl
lock
xchg
insb
lret
add
mov
pop
mov
mov
lods
mov
mov
mov
cs
arpl
ret
outsl
pop
dec
in
sahf
in
mov
jno
rolb
gs
cmpsb
and
sbb
fistpll
int3
jl
cltd
cmpsl
and
adc
xchg
mov
int3
imul
xor
into
rcl
stos
push
inc
mov
loope
lods
fcomp
mov
inc
lea
in
pop
and
jg
cmc
lret
sbb
cmp
mov
jns
sbb
fildl
gs
mov
loopne
mov
test
fwait
sbb
mov
add
lahf
push
add
mov
adc
aaa
mov
or
lods
loope
or
outsl
std
fidivs
mov
jnp
ljmp
sbb
jo
rep
das
mov
movsb
xlat
pop
movsl
push
xor
aad
jbe
cwtl
mov
stos
les
pop
repnz
cmp
into
sub
pop
addr16
push
dec
clc
ss
negl
outsl
iret
sbb
sbb
xor
cmp
in
adc
movsl
es
dec
movsb
jp
add
aam
inc
stos
stc
xchg
jge
push
icebp
subb
jmp
in
lcall
sub
mov
add
imul
outsl
mov
sahf
cwtl
cmp
insl
mov
in
mov
sub
in
shlb
mov
stos
fucomp
imul
push
adc
jae
and
xchg
or
jg
arpl
adc
xchg
xchg
hlt
jmp
loop
cs
xor
lods
movsl
xlat
clc
pop
dec
mov
mov
lds
icebp
hlt
aad
lcall
lods
ss
in
push
cmp
out
in
mov
or
insl
inc
and
movl
mov
mov
stc
jb
xor
or
jmp
js
mov
fsubrl
mov
cmc
testb
roll
lds
test
lods
mov
xchg
sbb
adc
push
addb
mov
lahf
inc
pop
orb
add
xchg
sub
xchg
insl
mov
cltd
jno
ja
fs
or
push
mov
repz
or
aam
sbb
popf
jg
dec
ja
cli
dec
cmp
nop
sbb
jmp
mov
jb
out
gs
mov
xchg
shr
or
int
hlt
or
data16
pop
fwait
mov
popa
ljmp
add
mov
dec
cmp
jo
jbe
arpl
sbb
dec
mov
stos
aad
jbe
fistl
jmp
mul
xor
pop
lcall
scas
mov
fisttpl
pop
mov
bound
int3
mov
nop
lret
imul
fsubp
xchg
or
mov
cmp
xchg
pop
aam
add
ja
cmp
sub
xchg
mov
sbb
sbb
adc
mov
xor
cmpsl
xchg
inc
int3
loopne
popa
in
mov
push
cmp
push
scas
cmp
jmp
mov
shll
out
stos
inc
mov
aas
xchg
jp
ja
cld
adc
int3
pop
clc
mov
fcompl
jne
mov
leave
add
mov
mov
inc
dec
mov
dec
in
movsb
sbb
test
rcl
and
iret
je
lea
mov
outsl
ret
ja
jo
hlt
pop
xchg
cltd
xchg
insb
mov
add
jecxz
sbb
push
jbe
or
aam
stc
inc
xchg
mov
cmpsb
aam
or
inc
inc
push
lds
adc
outsl
xchg
aas
fdivr
jmp
ja
xchg
aad
movsb
xchg
mov
out
into
jno
mov
cmpsb
mov
in
clc
fisubs
pop
xchg
popa
mov
cmp
imull
loopne
stos
jecxz
cmpsb
xchg
or
inc
xchg
mov
iret
xor
ljmp
xchg
sub
loope
movsl
xor
sub
jnp
aas
outsb
jnp
lret
pop
mov
gs
jmp
cmpsb
sbb
sahf
lret
inc
push
or
cmpsb
dec
cmpsw
pop
xchg
mov
xor
push
sysexit
sub
bound
sub
leave
pop
fisubrl
divb
es
stos
jmp
inc
add
les
sbb
orl
and
pop
lcall
int
nop
xchg
sub
jp
inc
out
pop
movsl
sbb
mov
pop
xlat
repz
out
mov
dec
cmp
leave
roll
movsb
daa
xchg
bound
adc
add
pop
mov
mov
push
ret
stos
mov
push
in
inc
loopne
mov
sahf
lcall
sbb
je
mov
fldenv
adcl
hlt
lds
mov
roll
ja
or
cmpsb
jl
loop
inc
add
aam
xchg
rolb
inc
add
movsl
test
mov
dec
pop
push
into
insb
xlat
bound
xor
outsl
cmp
shl
push
ss
lds
jecxz
lret
dec
sbb
ljmp
xchg
cmp
push
or
fistpll
inc
sti
mov
pop
add
es
std
and
or
push
pop
xchg
sub
xchg
nopl
clc
push
fcomps
add
dec
pop
and
add
jne
arpl
mov
mov
sbb
sub
enter
pop
shr
xor
cmp
cmpsl
aas
lcall
xchg
gs
mov
in
das
push
popa
in
add
and
leave
outsl
aam
mov
aad
je
divl
mov
or
das
push
pusha
mov
das
pop
movsb
jo
cmp
xor
lods
jbe
enter
or
lods
fdivs
dec
push
inc
push
jns
sbb
add
pop
vminsd
fstpt
inc
pop
dec
fisttpl
pop
jle
mul
lret
dec
popa
xorb
sbb
ds
rol
mov
and
aad
mov
xchg
xchg
rclb
das
push
and
divb
stos
jne
xor
cld
in
inc
test
mov
adc
cs
sbb
mov
cmp
jns
sub
cli
ret
jl
lock
sub
push
pop
xchg
fsubrs
fdivrl
mov
push
add
mov
mov
ja
mov
jnp
push
and
push
cmp
pop
cmp
sub
xor
hlt
pusha
outsl
push
inc
repz
std
inc
inc
std
mov
jo
in
iret
adc
imul
or
mov
pop
out
icebp
mov
gs
and
lock
dec
paddsw
mov
hlt
sub
pop
pop
and
ss
push
fnstsw
adc
pusha
in
adc
sti
neg
cwtl
movsl
inc
getsec
jp
in
repz
arpl
sub
jg
dec
mov
bound
in
jp
loope
sbb
dec
dec
pop
in
mov
dec
cmp
fdivrs
rclb
pop
add
cmpb
cld
mov
mov
pop
test
nop
sbb
xchg
pop
add
ror
xchg
push
dec
mov
and
aam
lahf
out
inc
rcll
cmp
xchg
in
mov
jae
dec
jmp
sub
lea
imul
and
fmull
mov
mov
outsb
addl
mov
sbb
sahf
ds
xchg
xchg
fsin
dec
inc
jmp
cs
jp
xor
sub
popf
xor
bnd
movsl
fdivp
test
dec
jl
inc
inc
jno
imul
mov
adc
jg
scas
bound
cmp
push
xchg
rolb
retw
inc
sbb
mov
out
rcrb
cltd
mov
loopne
daa
pop
ljmp
adc
js
dec
std
sbb
jecxz
ss
stc
push
cmpsb
pop
inc
mov
cmp
scas
ss
pushf
fdivs
xchg
test
clc
out
mov
adc
pop
hlt
mov
lret
or
sti
daa
or
out
lock
bound
xor
adc
xor
daa
mov
ljmp
jmp
jb
pop
std
sub
cmpsl
lds
cmpsl
movl
insb
or
or
push
sub
mov
push
data16
sub
lea
xchg
sbb
inc
jp
inc
add
add
mov
je
cmp
adc
dec
inc
inc
aam
sarl
mov
loope
test
psrlq
fldcw
inc
sahf
fadd
dec
dec
pusha
daa
cmp
mov
adc
pusha
imul
movsb
mov
call
xchg
cmpb
lret
iret
fstl
inc
xor
add
mov
leave
sbb
int
mov
lods
in
mov
scas
xchg
in
jae
mov
and
ss
les
shll
out
leave
xchg
mov
leave
aaa
dec
jne
cmp
pop
xchg
pcmpeqb
test
dec
pop
jge
or
or
ljmp
int
xchg
adc
mov
push
adc
les
fwait
push
dec
mov
lahf
loopne
sub
bound
mov
ss
or
fsub
and
xchg
mov
es
scas
or
addr16
xchg
mov
in
or
sti
jle
inc
out
arpl
outsl
xchg
leave
pop
pop
dec
mov
movntq
xchg
adc
je
int
or
jne
andb
push
lret
xchg
fwait
andb
xlat
xchg
out
lret
cli
inc
jns
xor
scas
movsb
pop
addb
mov
cmp
int
cmc
mov
insl
ret
cmpsb
mov
or
push
addl
add
push
inc
cmp
inc
incl
adc
test
cwtl
dec
insl
adc
mov
mov
mov
adc
sahf
popa
and
push
fcmovnbe
divb
es
push
jne
xor
outsb
clc
outsb
or
aaa
rorl
inc
loop
inc
aam
fisubs
xchg
xor
mov
pop
xchg
dec
test
jbe
testb
mov
fsubrl
scas
std
sbb
and
repnz
minps
jmp
xor
push
add
jl
outsl
jns
lcall
lret
imul
stos
push
sbb
mov
repz
fcomip
jbe
inc
hlt
imul
movsb
aam
imul
imul
popf
dec
dec
mov
mov
or
les
lock
je
dec
ljmp
scas
scas
addr16
dec
mov
mov
sub
xlat
mov
mov
fists
pop
in
push
xchg
inc
sbb
mul
ret
lods
outsb
mov
icebp
lock
es
add
sahf
movq
sub
sub
cmpsl
xchg
out
scas
out
int3
nop
pop
push
dec
int3
cmp
push
jecxz
push
mov
popf
inc
inc
cmp
test
jp
fistpll
std
sbb
mov
mov
jne
gs
adc
and
mov
popl
cmp
fldcw
mov
and
mov
imul
mov
and
ja
inc
loopne
in
js
xchg
xchg
jno
insl
les
ret
sbb
sbb
sub
and
push
sub
mov
jno
into
stos
xchg
sub
xchg
add
mov
je
adc
cmp
out
fs
fcomi
add
jno
jb
or
repz
push
je
ret
roll
cmpsl
and
das
sub
insb
iret
or
push
inc
pop
jge
pop
xchg
es
fidivrs
insb
idivb
lret
pop
and
shl
lea
clc
cli
addb
sbb
ds
aaa
or
cmp
inc
mov
pop
or
hlt
pop
pslld
sbb
jnp
sbb
jno
movsl
jmp
stos
cmp
cmp
test
adc
cmp
push
dec
push
rcrl
xor
shl
fildll
lret
dec
cmpsb
mov
cmp
js
and
cmpsl
lret
jne
ja
add
and
mov
out
iret
lret
das
pushf
subb
xor
mov
xchg
xchg
inc
jae
dec
ds
in
test
lds
in
outsb
shlb
jno
xchg
pusha
mov
dec
rorb
push
lahf
lods
js
fidivl
clc
mov
add
push
xchg
add
loopne
arpl
filds
sub
fdivl
iret
inc
in
pusha
and
nop
pop
cmc
icebp
out
test
out
add
xchg
jecxz
inc
dec
or
int3
sbb
pop
push
pop
pop
pop
fildl
nop
std
xchg
loop
xchg
ficomps
add
aad
add
xlat
loope
aaa
cmpsb
xchg
insl
lret
nop
aam
std
dec
xchg
mov
xor
stc
pop
adc
enter
add
and
jae
and
shll
xor
rorb
lret
mov
popa
pusha
rcll
ret
clc
stos
sub
stc
shrl
icebp
ss
psubsw
xchg
in
insl
push
lods
xor
addb
lds
popa
inc
jo
mov
popa
pop
cmc
jmp
mov
subl
in
mov
inc
movnti
dec
push
mov
in
dec
lcall
js
push
mov
pop
sbb
xchg
orl
imull
mov
addr16
jnp
test
outsb
sbb
out
xchg
adc
ds
je
in
ret
fwait
push
push
push
inc
stos
imul
xchg
clc
xor
xor
mov
pop
stos
push
lcall
push
pop
add
movsl
ret
cltd
pop
pop
jge
sub
mov
fstpl
ret
mov
setbe
push
gs
fnstsw
mov
jp
lahf
mov
push
lret
lods
pop
push
sti
loope
xchg
xor
aam
outsb
mov
insl
xchg
inc
jbe
bound
mov
test
aad
stc
nop
pusha
and
ljmp
aaa
movsl
and
or
iret
ffreep
mov
stos
jbe
cmovbe
push
movsb
adc
adc
or
cli
ror
sbb
jmp
in
sbb
and
adc
faddp
rolb
or
sbb
add
xchg
jno
add
pop
pop
cmp
adc
insl
lods
aaa
pop
adc
push
sub
lods
jbe
mov
aad
lea
dec
jne
imull
dec
inc
testb
push
lret
aas
repz
mov
aaa
xchg
sub
mov
mov
insb
dec
xchg
movsl
cmpsl
cmp
inc
and
add
dec
mov
arpl
jge
orb
and
push
push
repnz
je
mov
inc
dec
mov
fadd
rorl
and
jae
sub
mov
pop
in
mov
inc
mov
repz
dec
push
push
pop
mov
adc
xor
faddl
pavgb
outsb
stc
sub
das
mov
adc
or
call
adc
and
inc
jno
add
push
mov
sub
or
or
mov
push
xor
rcrb
xor
lods
xchg
jge
inc
data16
mov
jge
popa
sbb
cmp
movzbl
inc
cmp
cmc
stos
js
mov
xchg
pop
test
and
xor
out
lea
inc
in
scas
ret
xchg
cltd
call
mov
out
push
loopne
hlt
mov
sub
pop
inc
adc
inc
xchg
cmp
add
dec
imul
add
inc
lds
sbbb
add
dec
fiaddl
mov
out
ficoms
movsl
dec
add
pop
and
adc
mov
push
movsb
xchg
fdivs
lods
jbe
rorl
sub
pop
pop
or
les
adc
jbe
cmc
icebp
adc
je
lds
jg
cmp
sub
inc
jl
or
outsl
arpl
out
lret
dec
adc
dec
ss
jo
dec
dec
and
pop
jns
ret
xchg
mov
out
clc
aam
scas
cmp
jae
clc
or
sub
in
adc
imul
fsubs
push
push
cltd
adc
lods
pop
inc
pop
je
add
aas
in
jle
xchg
pusha
fdiv
aam
push
xor
and
cmp
push
call
jnp
call
pop
ret
loopne
dec
js
mov
cltd
enter
adc
or
push
adc
pop
inc
movsb
mov
sub
add
sbb
popf
add
push
adc
out
push
arpl
cmp
dec
enter
xor
outsb
mov
scas
in
das
add
cmp
dec
mov
sub
mov
xchg
cmp
mov
inc
add
push
scas
lret
aam
push
cmp
dec
in
push
outsb
inc
dec
cmp
psubq
jmp
cmp
lock
fdivl
test
push
or
outsl
pop
xchg
test
iret
fcomps
bound
mov
and
into
out
push
addl
in
push
in
sahf
fnstsw
mov
sbb
rorl
and
clc
xchg
inc
pop
jecxz
out
pop
int
scas
add
push
lret
mov
sbb
fs
lahf
dec
xchg
std
or
inc
pop
dec
dec
ficomps
sbb
inc
insl
out
xchg
test
stos
xor
cmp
adc
std
push
inc
mov
gs
call
and
ret
inc
into
cs
nop
loop
mov
add
sbb
dec
pop
inc
lcall
les
adc
fisttpll
jo
test
orl
jnp
lret
data16
rcrb
pop
movsl
fs
mov
pushf
dec
outsb
mov
hlt
test
fs
add
daa
and
pushf
push
xchg
inc
jae
jecxz
push
mov
inc
xchg
jbe
mov
cltd
gs
jns
movntq
adc
jmp
mov
out
rorl
es
mov
cli
dec
push
jmp
push
stos
pop
dec
cmpsb
iret
fxch
adc
sub
movsb
fwait
jmp
dec
lcall
mov
aad
xchg
ret
loopne
fdivl
lods
xchg
aad
xlat
pop
dec
fists
add
ljmp
div
mull
aaa
arpl
and
sahf
mov
aad
sbb
in
jns
mov
std
jo
and
in
xchg
es
popf
dec
out
cmp
aam
lahf
add
jae
lahf
sbb
push
in
or
aas
lahf
push
xchg
dec
mov
in
nop
adc
sub
xor
imul
pop
popf
or
dec
sub
push
mov
mov
fsub
xchg
xor
jmp
popf
pop
lds
pop
xchg
aad
cwtl
mov
int
shl
orb
loopne
sbb
pop
cmp
mov
xchg
jecxz
cli
inc
push
pop
mov
imul
dec
xor
pop
push
sub
inc
push
or
imul
out
andb
icebp
jp
fsts
mov
xor
push
movsl
inc
testl
dec
fsubrl
jbe
imul
or
jmp
jl
in
ret
imul
dec
sub
adc
clc
fbstp
out
into
leave
pop
movsl
sti
dec
jp
out
data16
fsubr
out
dec
cs
sub
dec
or
fnstcw
lcall
lahf
xor
mov
inc
mov
mov
jl
mov
scas
cltd
aad
sub
sub
stos
nop
iret
cwtl
jne
mov
mov
loop
stc
adc
lcall
js
sbb
div
xchg
pushl
mov
out
xor
xor
cs
lock
jle
enter
lea
out
bound
pop
outsb
ljmp
mov
cli
pop
clc
xor
mov
fs
ja
mov
push
rcr
and
or
pop
xor
insb
inc
rclb
outsl
lea
mov
icebp
in
mov
or
xor
adcl
and
mov
mov
push
push
mov
or
inc
ret
cmpl
xor
daa
loope
clc
or
fnstcw
lods
loopne
bound
test
add
in
ret
popa
inc
in
mov
xor
lods
sub
out
or
loope
sub
mov
fs
mov
packuswb
jne
adc
jl
or
sub
pop
sahf
sahf
push
mov
aam
push
pop
push
add
clc
push
loope
push
mov
icebp
cmpsb
push
fcmovnu
sbb
jp
jl
out
jb
fsubrs
lcall
cmp
cltd
stos
insb
loope
sbb
scas
pop
filds
jle
pop
cmp
mov
addr16
sub
mov
rcrl
mov
insl
inc
movsl
push
pop
pop
int3
in
xchg
jecxz
gs
inc
lahf
sbb
cs
and
xchg
in
jge,pt
jmpw
xchg
fsts
negb
add
mov
jne
cmc
mov
rclb
test
in
mov
push
xchg
mov
fwait
sbb
pusha
push
test
jnp
push
adc
push
dec
stos
xchg
dec
scas
scas
mov
pusha
xor
ficoms
inc
cmp
in
test
or
das
call
sbb
scas
lock
dec
mov
je
or
pop
push
cmp
mov
and
aad
ds
pop
add
insb
sti
aas
xchg
out
aad
lock
stos
jge
pop
push
xchg
repz
scas
aas
pop
add
mov
push
fsubr
lea
lock
sahf
sub
popl
mov
and
movsb
sub
mov
sbb
loope
outsl
jno
pop
or
sti
pop
sub
add
mov
jg
inc
pop
xchg
cli
sub
jne
lcall
pop
pushf
popf
sahf
out
cmp
cld
ret
mov
xor
mov
insb
pop
xor
jecxz
push
sub
incl
rcr
das
add
sbb
lods
es
jne
add
mov
push
or
pop
in
xor
shlb
lret
pop
inc
leave
push
ret
xchg
cmp
aas
xchg
pop
out
pop
movsb
add
leave
adc
jg
or
ja
ss
pushl
test
or
mov
stc
testl
shl
ficomps
mov
test
pop
sti
jmp
bnd
push
pop
icebp
cmpb
sbb
pusha
gs
test
mov
cmp
pop
pushf
mov
sbb
inc
ljmp
push
dec
inc
imul
lea
xor
jmp
jns
add
das
sbb
jns
repz
adc
les
xor
js
cmp
xchg
cmpsb
xchg
rcrb
stos
addr16
cmc
dec
jne
fsts
adc
jae
mov
test
imul
aam
xor
jbe
or
loop
loope
outsl
jns
addb
adc
pushf
das
jecxz
data16
mov
pop
sbb
mov
outsl
push
jp
fs
xchg
or
int3
test
cld
jmp
xchg
test
sub
and
add
ficoms
cmpsb
dec
nop
pop
mov
pop
cmp
ret
test
pop
and
mov
push
jbe
insl
lcall
add
shl
jge
xchg
mov
inc
andb
aad
test
lret
adc
rcrl
scas
and
cmp
mov
dec
jo
aam
nop
add
sbb
ds
sti
jle
test
add
lock
xchg
into
xor
fwait
into
adc
xchg
jb
add
cwtl
and
mov
insb
repz
push
and
rcrb
out
cmp
mov
fidivs
gs
popf
or
or
lods
int
and
int
or
fbld
loopne
mov
test
arpl
xchg
pop
or
mov
je
mov
out
movsb
sti
xchg
jbe
cmp
jl
or
loop
aad
cltd
icebp
sub
pop
push
andl
cmp
push
xor
mov
stos
push
lret
shl
arpl
mov
lock
or
pop
inc
xor
xchg
scas
idiv
iret
adc
push
push
inc
xor
sub
loopne
push
pop
out
and
ljmp
xchg
mov
xor
sahf
test
outsl
test
pop
clc
cwtl
mov
imul
inc
in
bound
fs
bound
mov
adc
adcl
mov
into
daa
lds
repz
lds
lahf
movsb
add
sbb
call
imul
or
fisttpll
stos
add
test
std
add
shl
and
data16
enter
add
mov
fwait
shrl
loopne
push
outsl
pop
push
pop
das
test
int3
push
mov
mov
imul
sahf
add
xchg
mov
rcll
cmp
add
mov
inc
imul
add
shll
add
jb
xor
adc
xchg
or
stos
iret
sub
add
int3
repz
clc
push
mov
icebp
mov
negl
lods
adc
aad
adc
push
arpl
and
into
outsb
in
bound
inc
push
add
mov
xorl
mov
push
cmp
push
cmpsb
cmp
or
les
in
sti
dec
push
jno
or
jle
push
call
dec
bnd
add
and
not
sub
jae
rcll
dec
test
cwtl
jmp
int3
sbb
out
xchg
push
inc
aam
je
push
in
or
scas
enter
in
les
scas
xlat
ss
icebp
dec
cwtl
daa
in
mov
icebp
mov
sub
jmp
jp
mov
movsl
pop
orb
test
add
cmc
sub
mov
sbb
jns
cmp
or
out
ds
xor
push
out
xor
cs
stos
jne
popa
inc
cmp
mov
int
jnp
mov
lahf
fxch
imul
adc
mov
add
ss
lahf
aad
and
incl
iret
dec
inc
lods
test
sahf
and
jo
cs
jbe
call
shl
jg
sbb
jae
inc
in
movsl
jbe
cmp
arpl
jmp
cmpsb
hlt
cmp
inc
or
or
int
adc
mov
in
mov
jp
sbb
insl
pop
aaa
rcl
sarl
and
in
add
stc
loopne
pop
pusha
sbbb
push
cmpsb
repz
arpl
outsl
imul
jg
mov
imul
pop
addr16
ret
inc
inc
jg
cmc
je
cltd
loopne
daa
xchg
jb
bnd
mov
ret
sbb
push
cmpsl
subb
sub
fwait
xchg
clc
cwtl
push
jns
hlt
lods
add
lea
ds
sahf
jg
jp
inc
fisubs
aaa
xorl
mov
sub
pushf
ror
mov
insl
cmpsb
xorb
cltd
sub
and
and
xor
sbb
das
jp
cli
scas
ficoms
jb
enter
mov
inc
scas
xchg
jl
cmpb
inc
cmp
pop
or
jmp
shl
cmpsb
cmp
cmp
shlb
test
idivl
data16
mov
or
test
mov
xor
jmp
movsl
testb
outsl
pop
outsl
cmpb
mov
pop
and
jae
fcoml
into
stos
into
loope
gs
jl
dec
sub
xor
bound
xchg
dec
pop
loopne
nop
movsb
mov
jl
cli
mov
sbb
sbb
and
shl
sbb
lock
dec
xchg
sti
jo
pop
fcmovnbe
mov
test
sarl
pop
xchg
stc
rorl
aad
sub
cmpsl
sub
jmp
popf
inc
aad
push
push
mov
les
dec
xchg
push
pop
in
xor
outsl
sub
inc
testb
jbe
mov
pop
and
push
ret
push
inc
inc
fadds
shr
popf
sbb
xchg
sbb
mov
in
pop
xor
insb
cwtl
cmp
mov
mov
or
sub
mov
faddl
aad
cmp
mov
jnp
push
imul
add
pop
cwtl
cmp
subl
mov
pop
loop
into
fnstenv
lds
jecxz
dec
cli
lods
ljmp
jmp
lret
cmp
mov
lcall
shrb
add
xchg
fsubrs
inc
js
dec
mov
xchg
mov
fcomps
roll
mov
ja
mov
cld
xor
push
imul
sub
inc
sbb
mov
sub
int
and
arpl
xchg
inc
and
imul
pop
rcrb
pop
cmpsl
jne,pn
aam
mov
sarb
inc
dec
cmp
mov
loopne
mov
mov
jle
cmpsl
inc
lods
movsl
lret
popa
ljmp
cmc
inc
sub
cmp
and
xchg
cmp
inc
fisubrl
fs
cwtl
pop
sub
push
mov
pop
mov
push
push
addr16
lods
outsl
nop
pop
xchg
sub
xchg
ljmp
lea
push
loope
push
mov
pop
adc
es
daa
add
rclb
cmp
add
mov
repnz
lcall
fs
push
inc
jl
or
repnz
pusha
xchg
cwtl
ljmp
cmp
mov
xchg
mov
sbb
scas
inc
dec
lahf
shll
in
shll
sbb
lds
dec
shlb
cmp
pop
pop
push
mov
ficoms
out
xchg
cmp
push
and
mov
add
pop
test
fcoms
fmull
gs
mov
notb
imul
push
aam
pop
cmc
fbld
push
cmp
xchg
mov
add
adc
aam
scas
mov
sub
mov
data16
aaa
mov
xchg
adc
loopne
faddl
xchg
push
xchg
inc
cltd
data16
and
and
sahf
imul
scas
or
sub
adc
hlt
and
cld
xor
fsubrs
mov
pop
movsb
ret
xchg
mulb
adc
popf
and
in
out
lcall
jl
or
dec
leave
sti
push
mov
and
mov
jge
sbbl
jecxz
mov
dec
das
or
sti
sub
lods
mov
add
lea
mov
push
push
pushf
pop
iret
cld
int
fs
jl
int
lds
adc
mov
pop
dec
cmp
shll
lea
pop
pushfw
iret
leave
inc
push
jb
leave
pop
mov
inc
adc
shl
or
add
and
xor
sbb
sarl
xchg
incb
insb
push
pusha
in
sub
mov
add
inc
mov
js
cmpl
mov
insl
jge
cmp
mov
je
insl
ret
insl
inc
mull
and
dec
addr16
xchg
push
dec
int
pop
or
mull
sub
mov
or
xchg
mov
pop
inc
dec
ret
sarl
ljmp
in
scas
addr16
popf
mov
mov
push
mov
xor
jbe
loope
es
jne
in
gs
scas
dec
inc
cmpsb
pop
imul
hlt
or
dec
cmc
shlb
xor
stc
xchg
sbb
add
sbb
mov
into
pop
mov
enter
inc
dec
sbb
jns
dec
decl
arpl
movd
ret
imul
mov
xchg
mov
popa
pop
pop
loop
xor
pop
adc
in
xor
int3
rcl
mov
or
in
push
sbb
cli
callw
rorb
dec
cmp
mov
adc
popl
shll
stos
pop
stc
mov
or
push
sub
out
data16
aad
test
and
mov
or
cmp
xchg
aam
xor
popa
pusha
cmp
mov
scas
mov
add
aas
insl
rclb
mov
gs
mov
cmp
cmpsb
ja
mov
add
sub
ss
mov
dec
sub
push
call
icebp
jbe
jns
cmp
sar
pop
decl
jo
ficompl
ret
xchg
pusha
mov
inc
dec
negl
pop
lds
xchg
or
fcmove
shll
pop
jmp
pop
adc
filds
adc
xchg
mov
xor
aam
add
dec
jp
pop
push
dec
add
mov
inc
jne
outsl
push
xor
cmp
dec
mov
loop
and
xlat
ljmp
add
shl
xchg
xor
mov
mov
xor
push
sahf
mov
ja
in
test
mov
cmp
jno
mov
sahf
fimull
lds
xor
popa
and
std
push
aad
mov
xchg
or
xchg
into
rorl
push
daa
nopl
out
inc
and
mov
movsl
add
jp
in
cli
js
jno
fwait
add
mov
add
shrb
pop
push
sti
and
rcrb
mov
aaa
out
loop
ret
imul
jg
out
mov
daa
shlb
das
movb
fisubl
and
or
sbb
push
inc
nop
cli
xchg
jg
and
lods
std
inc
pop
push
adc
xchg
mov
xor
add
into
lock
outsl
int
push
xchg
lcall
fs
dec
mov
add
dec
dec
pop
cmp
sub
inc
and
arpl
mov
enter
int
and
or
push
xorl
xchg
xchg
dec
imul
pop
xor
je
out
movsb
jb
rol
scas
cmp
popa
push
loop
ja
cmp
xor
lcall
push
hlt
out
pusha
sbb
jnp
add
and
into
lods
fstl
mov
scas
xor
js
pop
and
mov
dec
cmpsl
cs
sahf
ss
push
jmp
addb
cmpsl
aam
mov
push
scas
xchg
add
cmc
and
sub
lret
mov
cmp
push
or
lahf
fadds
shll
cmpl
sbbl
pop
sbb
sarb
pop
sub
pop
into
pushf
outsb
or
imul
in
adc
rolb
je
push
loope,pn
fst
jecxz
int3
xchg
pop
lahf
jb
fstl
cltd
pop
pop
xchg
outsb
mov
mov
test
rclb
int3
orb
stos
sub
jge
push
xor
dec
ret
push
xor
mov
mov
xor
in
cmp
jge
pusha
call
mov
ficomps
movsb
pop
push
lods
imul
fisubrl
daa
add
push
mov
aaa
test
shll
jns
ret
loopne
jecxz
pop
push
rolb
popf
mov
movsb
mov
sub
dec
movhps
bound
repnz
es
cli
add
pop
xlat
into
sbb
popa
and
and
mov
test
stos
sbb
adc
movsb
jno
cmp
std
insl
stos
pushf
xor
mov
pop
jmp
dec
arpl
pop
mov
sbb
xlat
xchg
int
mov
mov
jmp
adc
popa
sbb
out
fsubs
push
scas
sub
jae
xchg
ret
xlat
or
xchg
jl
fcoms
ret
int3
lret
mov
pop
js
pop
clc
ljmp
rorl
pop
jp
push
pop
lahf
dec
mov
dec
cmp
sub
or
daa
mov
jne
cmpsb
and
dec
test
or
test
dec
nop
scas
cmp
icebp
insb
jge
cld
outsb
jmp
cli
rorb
xchg
lea
push
sahf
shll
cmp
int3
out
mov
out
shlb
das
pop
addr16
inc
sarb
mov
outsl
clc
mov
incb
and
jnp
sbb
pop
cmpsb
xor
xor
xor
into
xchg
mov
scas
jl
frstor
dec
fstp
ja
pop
xchg
push
xchg
cmp
pushf
push
aad
dec
mov
ficoms
aaa
xor
aas
inc
dec
rol
scas
inc
faddl
cmp
sbb
push
xchg
or
cmp
xchg
sub
sbb
push
push
and
in
jp
dec
out
cmp
popf
ret
enter
cmc
inc
fcmovnu
dec
push
cs
adc
jle
aad
inc
sub
or
pop
daa
aam
add
add
adc
in
in
stc
adc
and
pushf
xor
pop
rcr
cs
cmp
mov
cli
sub
mov
lods
jns
pop
outsl
jg
iret
mov
fdiv
aam
add
mov
or
stos
aad
es
add
mov
cmpsl
in
iret
stc
pop
pop
mov
pusha
or
stc
xor
out
cltd
mov
mov
les
xchg
cmp
rorl
loopne
cmp
xchg
push
ds
jne
sbb
out
aaa
or
ret
scas
mov
cwtl
mov
popa
popa
jo
push
sahf
int3
jno
add
imul
xor
sbb
mov
ja
hlt
cmp
ficoms
jbe
int
jmp
pop
cwtl
add
pop
cld
pop
fs
dec
ds
sub
pop
dec
fstpl
pop
mov
or
cli
xor
imul
fsubs
mov
test
add
push
aas
dec
stos
inc
aas
fwait
loop
and
push
cmp
test
out
jb
or
pop
dec
cmp
xor
outsb
test
pop
and
cmc
mov
int3
push
ss
sbb
mov
popf
jg
adc
stos
pop
xchg
stc
lds
into
jmp
hlt
shrl
jo
pop
xor
xchg
jno
jg
xchg
push
lea
or
adc
mov
mov
push
inc
int3
enter
ds
stos
cltd
stos
push
cmp
pop
data16
cmp
xorb
repz
mov
adc
inc
jae
sbb
push
sbb
in
sbb
xor
out
mov
ja
pop
shlb
mov
aad
jae
imul
jecxz
jbe
rclb
and
lret
cmp
imul
mov
movsl
cmp
es
add
aas
mov
add
and
jnp
cmpsb
shrb
mov
hlt
and
mov
mov
dec
adc
leave
popa
sub
push
inc
popa
sbb
ret
adc
inc
ja
sub
fwait
mov
cmpsl
nop
inc
sbbb
adc
jl
xchg
add
dec
pop
jl
in
mov
adc
xchg
push
xor
add
fwait
jp
xor
dec
jo
xlat
lock
xchg
and
int
out
jecxz
xchg
outsl
jne
mov
icebp
mov
or
dec
mov
jecxz
mov
clc
sahf
dec
iret
cmpsl
out
push
mov
inc
jl
adc
cmp
aas
imul
ss
push
or
addb
fnsave
pop
ljmp
scas
imul
pop
ret
loope
scas
inc
xchg
add
stos
jno
jbe
fs
orl
push
cmp
popf
fs
jp
sarl
or
out
xor
stos
push
jne
cmp
repnz
sahf
inc
out
mov
cmp
mov
leave
aad
push
and
mov
push
in
fidivrs
add
xchg
pop
jnp
fxch
popa
xchg
test
pop
xchg
jno
jnp
lods
leave
xlat
sarl
sbb
sar
jmp
aam
out
xchg
jp
push
mov
cwtl
dec
out
sbb
sbb
jbe
das
pushf
pushaw
cmp
aad
cltd
ss
cmp
sub
pop
je
mov
mov
mov
mov
movsb
call
loope
jo
lahf
xor
test
loope
or
rcrb
adc
ljmp
out
lcall
cmp
arpl
dec
jp
lds
push
and
jge
js
out
movsl
data16
in
cmpsl
xor
pop
jecxz
lcall
mov
cmp
adc
jne
mov
add
aaa
lock
popa
ljmp
cwtl
push
sbb
stc
push
or
and
ja
sub
popa
adc
push
add
pop
adc
loope
jmp
sbb
inc
or
lods
pop
mov
sbbb
add
gs
xor
mov
lods
jnp
sbb
push
pop
outsl
sbb
jae
aam
imul
pop
mov
dec
addr16
orb
scas
andps
xchg
jns
adc
out
mov
jecxz
mov
jne
ss
idiv
dec
out
rorl
add
mov
jno
dec
pop
pop
sub
int
and
ljmp
jbe
insb
mov
les
nop
fwait
addr16
faddl
pop
lock
sbb
sarl
orb
inc
lcall
popf
jmp
cltd
dec
mov
fwait
iret
cmp
xlat
cmp
jne
mov
daa
inc
ss
lea
dec
lods
in
cwtl
dec
pop
nop
fidivrs
cmp
mov
sbb
test
repnz
cltd
jae
inc
int3
mov
sbb
insb
je
fisubrl
mov
out
aam
push
cs
sti
cwtl
fisttpl
das
movsl
inc
dec
add
je
sarb
cli
into
scas
jns
adc
pop
push
les
imul
inc
std
xor
jl
and
sbb
mov
addb
imul
sbb
jg
inc
mov
fdivs
ret
cmp
dec
jnp
aaa
dec
add
push
test
xor
jmp
insb
addr16
js
ds
pop
jge
ja
inc
cltd
xchg
add
and
in
insl
dec
xchg
push
xchg
and
mov
sahf
lock
cmp
rol
lret
mov
mov
pop
repnz
and
push
lahf
out
add
pop
fdivrs
mov
popa
lock
cltd
xchg
mov
call
outsl
pop
hlt
and
ss
adc
sbb
loopne
addl
in
aas
loop
mov
sub
inc
cmc
gs
dec
or
xor
bnd
add
cmpsb
sti
data16
and
sub
mov
sub
cltd
mov
into
jp
pop
popf
push
adc
mov
xchg
jne
dec
ret
xchg
pusha
and
cs
test
sub
xor
and
cmp
sti
rep
adc
in
idivb
jle
pop
pusha
bound
jecxz
jne,pn
and
push
arpl
and
jecxz
xchg
lret
icebp
inc
dec
andl
jmp
or
mov
imul
add
lretw
mov
jo
xchg
fwait
into
xchg
addr16
pushf
pop
mov
jge
in
pop
pop
into
jge
call
mov
pop
xchg
lock
cmp
sbb
xchg
jb
cwtl
and
xchg
inc
jl
cmpsb
stos
fsubrs
inc
pusha
sti
add
popf
inc
repnz
addl
pushf
cmc
into
in
enter
loop
inc
pop
push
lods
push
out
push
cmp
jno
jno
push
aam
xchg
push
shr
enter
cmpb
in
cltd
jmp
arpl
pop
jb
push
push
test
sub
out
std
repnz
and
cmp
mov
dec
mov
pop
jb
inc
mov
inc
cmp
push
lcall
rcrl
cmp
pop
or
dec
je
insb
in
add
ljmp
cld
mull
jnp
push
mov
das
cmc
jne
sbb
lods
call
addr16
aas
inc
mov
imul
push
inc
add
jge
data16
jg
or
add
cmp
mov
sbb
test
jne
aas
jnp
add
adc
dec
ljmp
aaa
fisubl
not
and
shr
xchg
insb
xor
xor
or
dec
mov
add
jne
pop
mov
iret
sub
imulb
adcl
pop
mov
lahf
sbb
jnp
sbb
xor
mov
lock
shll
xor
pusha
add
cmp
div
ja
pusha
cmpsb
lcall
dec
out
pusha
std
cmpsb
and
pop
push
jle
sarb
aas
dec
cli
xchg
jnp
daa
testl
int
es
imul
call
mov
pop
mov
inc
jmp
sbbl
jo
adcb
lods
adc
pop
sbb
fwait
dec
icebp
loop
pop
mov
push
dec
or
call
out
data16
mov
out
lock
push
int3
popa
cwtl
pop
inc
xor
push
mov
imul
movsb
xchg
push
repnz
std
mov
in
dec
jns
cmpb
push
sbb
lcall
mov
sub
pop
lret
sub
dec
bnd
mov
push
jae
adc
jg
push
out
cmpsb
pop
pushf
push
inc
jmp
push
daa
jg
add
mov
pop
outsb
lret
jecxz
xor
loopne
mov
shlb
push
cmp
cld
inc
into
cmp
pop
cmp
popf
test
das
pop
push
pop
jne
push
mov
push
jecxz
mov
loope
push
scas
ljmp
adcb
or
pop
fsubrl
std
addr16
cltd
aam
out
jmp
les
mov
or
lds
sbb
faddp
add
mov
in
imul
adc
out
sahf
test
int3
outsb
sahf
mov
sub
repz
stos
cmp
aad
dec
inc
and
mov
outsl
std
test
out
inc
mov
add
int
push
dec
addr16
das
add
xor
icebp
mov
push
jp
clc
or
fiadds
movsb
nop
shl
outsl
xchg
pop
xchg
jle
stc
dec
xorl
cltd
lahf
fcoms
scas
stc
sbb
xchg
aam
adc
adc
adc
jae
or
fiadds
fpatan
push
jg
dec
fbstp
xchg
mov
pop
push
test
ret
fstpl
sarb
push
lcall
fbld
ficompl
dec
fidivl
fnstsw
int
js
filds
sbb
mov
cmpsb
je
pop
hlt
mov
sahf
and
mov
jecxz
lock
and
or
xor
cwtl
lcall
aam
in
mov
sub
lret
adc
pusha
std
cmp
dec
rorl
loopne
fadd
jp
fmul
stc
pop
jl
pop
dec
rcl
and
inc
call
outsb
inc
fisubs
xor
insl
dec
xchg
test
cmp
fnsave
hlt
leave
inc
popf
aaa
cmpl
out
stc
popf
nop
inc
adc
pop
int
aad
cmpsl
push
fbstp
adc
ror
cmp
add
pop
icebp
int3
cmp
ficoms
jg
imul
cs
adc
iret
outsl
push
sbb
shll
ffree
pop
aas
xchg
pop
test
xchg
jae
addr16
push
shll
stos
into
xchg
xchg
jo
xor
pop
jbe
push
or
sub
lcall
add
jne
cmp
ficoms
in
inc
addr16
mov
mov
mov
xchg
push
dec
adc
xor
add
inc
cmc
and
arpl
mov
loopne
cmp
rorl
roll
out
shlb
scas
xchg
adc
shrb
add
mov
repz
cmc
xor
inc
xchg
push
lods
push
incb
adc
adc
shrl
stc
xor
adc
dec
les
popf
pop
ficompl
and
mov
mov
ds
adc
dec
cmp
test
lret
repnz
lret
sbb
lcall
and
mov
test
cs
mov
mov
push
ret
sub
ror
stc
jnp
xor
jl
lahf
je
stos
cmpsb
sub
clc
mov
add
dec
adc
mov
inc
loop
ds
mulb
repnz
or
js
fsubs
in
pushf
pop
xlat
xor
lea
adc
jb
fwait
mov
out
or
xchg
mov
push
mov
inc
addr16
sbb
psubw
fildl
pop
push
cmpb
mov
loope
dec
in
inc
dec
mov
pop
sub
xor
pop
mov
rorl
cmp
ja
outsb
lods
sbb
popf
pusha
ja
dec
cmp
clc
add
fistps
stc
sbb
mov
ret
xchg
fidivrs
sbb
dec
cmpsl
or
fstpt
jb
in
cwtl
xorl
push
movsb
test
cmpsb
in
push
mov
xchg
in
adc
leave
mov
sub
push
or
inc
xor
adc
in
cmc
pop
cwtl
out
filds
sbbl
mov
xchg
das
dec
aam
in
pop
fwait
std
cmp
jmp
sbb
stos
orl
fistl
push
lods
mov
or
sub
ret
out
stos
cwtl
add
jo
inc
cmpsb
pop
dec
pop
add
push
push
call
push
scas
pop
pop
or
fisubrs
add
fsubl
jae
push
cmp
cmp
scas
lcall
add
jbe
in
bound
arpl
addl
jp
push
xchg
mov
bound
pop
out
and
push
out
mov
inc
or
dec
sub
fdiv
cli
popa
mov
add
in
outsl
ret
xchg
mov
mov
fs
add
bound
cld
mov
cmpl
mov
not
jge
and
rorb
mov
lods
testl
add
imulb
push
inc
pop
mov
dec
fcmovne
out
mov
ds
leave
adc
adc
mov
popf
fidivl
adc
cltd
add
std
pop
push
mov
and
rclb
and
sbb
adc
shlb
xlat
divb
xor
and
icebp
rorl
mov
mov
xchg
cld
out
mov
enter
mov
adc
lea
push
or
pop
scas
jl
fstps
leave
pop
mov
pop
repz
jge
popa
fs
lock
std
and
jmp
out
rcrl
xor
test
jnp
jo
mov
mov
iret
lods
mov
cs
les
mov
leave
xchg
stos
jg
stc
xchg
mov
scas
andl
lahf
jne
xchg
sar
jp
mov
gs
out
mov
icebp
std
in
fisubrs
or
jno
popf
xor
adcl
push
jno
mov
jnp
out
add
cs
movsb
push
repnz
or
aas
push
ficoms
xchg
in
xor
sbb
and
lret
lods
test
xchg
ss
rcr
add
xor
xor
and
inc
adc
xchg
add
dec
cmc
push
popf
test
adc
iret
push
pop
lock
push
std
lret
add
xchg
fnstcw
sarl
xor
jecxz
dec
sbb
cmpsb
cwtl
pop
dec
fwait
in
enter
sub
inc
mov
cmpsb
cli
insl
dec
mov
pop
leave
jp
sbb
sbb
push
sbb
mov
mov
mov
and
mov
dec
mov
cmp
cmp
fdivl
test
cld
clc
je
sbb
pushf
dec
mov
dec
mov
dec
les
xchg
sub
mov
mov
push
push
fmull
insl
clc
or
test
mov
pop
or
jge
fwait
jbe
xchg
mov
out
shlb
dec
movsb
jle
cmp
loopne
mov
or
and
xchg
std
ret
fs
mov
push
scas
subl
mov
ja
hlt
enter
hlt
daa
lret
pusha
jae
sub
pushf
sub
push
ljmp
xor
push
lahf
test
aad
adc
pop
popf
fs
js
into
mov
pushf
in
push
add
jnp
loop
or
data16
sbb
push
and
mov
inc
mov
lcall
pop
inc
mov
fistl
sub
or
or
cmpsl
pusha
adc
das
mov
movsb
stos
sub
fstps
sahf
jle
mov
sti
lcall
test
adc
lcall
xor
lock
in
mov
xchg
and
xchg
sahf
mov
clc
std
inc
fldenv
lods
xor
fistpl
or
jg
ja
push
test
mov
test
dec
aad
or
dec
test
lret
popa
mov
push
es
push
ja
cld
dec
out
push
ljmp
push
out
adc
xchg
pop
mov
mov
mov
movsl
js
fidivs
mov
roll
mov
inc
cpuid
prefetch
icebp
sbb
xor
xor
in
in
cmc
in
das
test
lods
add
mov
or
and
add
pop
fcmovnbe
std
dec
jno
int3
push
or
cmp
sti
pop
outsb
jae
lret
sub
test
icebp
repz
mov
mov
xlat
cmp
fdiv
test
mov
stc
jnp
xor
shlb
lods
mov
fstpt
test
negb
pusha
daa
fwait
lcall
addr16
cwtl
push
xchg
cli
out
jp
iret
mov
push
add
rcrb
jns
push
fcomi
mov
mov
aad
fldt
pushf
lds
mov
arpl
mov
sub
sbb
inc
pusha
and
jg
aad
lods
icebp
pop
outsb
sub
cmpb
outsl
test
xor
insl
fildl
sbb
xor
mov
mov
inc
mov
inc
jmp
mov
pop
repnz
dec
push
xchg
out
cltd
jns
jae
mov
js
cmp
jb
clc
adc
pop
cltd
mov
sbb
lahf
jb
shrl
mov
sub
jge
fisttpll
movsl
cmp
repnz
shlb
pusha
mov
outsl
test
in
xor
xchg
mov
scas
jecxz
dec
rolb
jo
loopne
test
addb
jp
mov
dec
inc
cltd
int
insl
xchg
pop
cmp
imull
shl
pusha
into
out
mov
push
xchg
mov
pushl
sub
add
xchg
fidivs
fisubrs
out
sub
add
xor
decb
pop
xor
add
loop
insl
mov
push
shll
jae
lret
add
xor
and
push
rcrl
icebp
cmp
mov
js
jb
jmp
je
and
es
sub
pusha
movsb
divb
push
adc
imul
push
int
aaa
in
test
cmpsl
sarl
push
shrl
cmp
out
and
pop
in
shlb
xchg
mov
sub
vpcmov
fdivrs
test
hlt
mov
xchg
sub
ss
pop
adc
adc
js
jmp
push
mov
dec
lret
rorl
lcall
hlt
ror
int3
jae
dec
or
pop
fidivrs
fneni(8087
in
or
jbe
ror
aas
rcrl
fbld
mov
inc
xchg
lahf
cmpl
imul
adc
mov
incb
frstor
and
fwait
lock
xor
sbb
cli
fisttps
or
dec
push
scas
popf
notb
add
sbb
sbb
lock
cwtl
push
cwtl
aaa
sub
sub
lods
repz
iret
arpl
mov
hlt
jae
cwtl
pusha
pop
lahf
sbb
arpl
test
push
push
jb
inc
xchg
icebp
sarb
pop
rcrb
inc
imul
add
push
cmp
and
xchg
into
out
push
push
js
pop
lock
cld
lahf
out
imul
cmc
mov
and
mov
fists
mov
sti
pop
mov
jno
pop
xor
mov
mov
adc
add
or
sub
ja
pushl
xor
testb
or
inc
les
inc
fimuls
das
mov
les
or
sbb
xchg
daa
add
fwait
or
aas
movsb
xchg
lret
fcoml
fistpl
sbb
mov
cmp
sar
push
in
xchg
stos
jp
std
sbb
jo
js
cli
fldt
adc
test
push
js
xchg
arpl
lock
pusha
jb
movsb
inc
mov
pop
sahf
clc
jg
lret
and
add
jo
scas
add
jo
mov
test
xorb
repz
mov
test
jl
adc
add
pop
or
aad
ror
mov
add
das
inc
xlat
cmp
sbb
sbb
cmp
inc
mov
pop
xor
imul
shr
xchg
call
xchg
xlat
adc
cli
mov
push
mov
and
nop
ret
mov
and
sbb
out
xor
arpl
lods
and
add
mov
aad
xchg
pop
ror
mov
mov
sub
sub
lds
or
hlt
cwtl
pop
push
xor
das
mov
pop
or
or
scas
jno
cmp
call
cwtl
cmc
jbe
pop
sub
or
sahf
aam
fucom
lcall
imul
add
test
out
test
cld
dec
sub
lds
inc
push
test
sub
lret
out
or
mov
bound
enter
lret
es
push
mov
lds
pop
xchg
jne
ljmp
sub
sub
movsb
xchg
in
dec
mov
fidivrl
stos
sti
insl
mov
or
mov
mov
int3
ret
mov
int3
notb
and
lods
pop
xor
out
fstpl
std
mov
dec
cmp
or
pop
add
inc
adc
ds
mov
mov
ja
data16
mov
fcompl
xchg
orl
cmc
push
lret
mov
inc
sbb
xor
pop
pop
cmp
sbb
pop
negl
mov
stc
out
pop
push
test
and
movsb
cmp
mov
stos
imul
adc
mov
adc
arpl
js
gs
cmp
loope
add
push
mov
cwtl
test
cmp
lds
mov
hlt
jno
xchg
push
shr
xor
push
push
mov
or
or
push
push
xor
setl
in
add
shlb
xor
jg
imul
scas
bound
ds
xchg
cmpb
inc
pushf
hlt
insl
ficoms
shlb
pop
jnp
shll
push
jp
pop
cmp
sub
or
test
mov
add
bound
and
add
inc
xchg
push
adc
mov
and
ljmp
loop
lock
inc
daa
or
fwait
es
inc
mov
dec
adcl
hlt
sbb
adc
insb
xchg
xor
cmp
dec
or
call
jbe
or
add
lret
in
push
mov
in
dec
scas
mov
pop
popa
in
idivb
lahf
sbb
fistpll
push
cmp
jbe
orl
rolb
mov
pop
lds
iret
jle
mov
inc
inc
repnz
xchg
and
in
mov
adc
adc
std
sub
mov
shll
insb
push
jg
cli
adc
test
xchg
xor
mov
repz
lahf
adc
test
int
xor
pop
loop
xor
dec
jne
mov
scas
inc
movsl
mov
cmp
testb
jl
adc
rcll
cmp
clc
cmp
jo
repnz
lahf
xlat
sub
pop
aam
sub
mov
xchg
inc
xlat
adc
loope
jp
test
xchg
mov
xlat
jg
test
jno
dec
xchg
daa
xchg
or
mov
mov
push
shlw
dec
je
or
movsb
sbb
stos
sahf
mov
lret
pop
sub
cmp
add
sub
xchg
jno
jmp
insb
add
mov
sbb
add
jns
mov
xor
sub
incb
sar
lret
pushf
or
xor
dec
out
sbb
jae
fnstenv
pop
mov
or
dec
push
xor
sbb
mov
xchg
in
popf
jb
repnz
in
mov
push
insl
shrb
cmc
jmp
pop
sbb
push
cltd
ret
lret
out
insl
mov
imul
arpl
push
jae
inc
das
cmpsl
dec
push
and
xchg
xor
jecxz
push
dec
das
lahf
fldt
test
ljmp
decl
cmpsb
sti
enter
xchg
int3
mov
loopne
inc
mov
js
ds
pop
jae
adc
fwait
dec
xor
sbb
pushf
enter
jp
cs
fs
fsts
stos
sub
es
outsb
push
jle
mov
cmp
mov
lahf
fsubrs
in
and
sub
sub
sub
rclb
push
test
popa
jbe
cmp
aas
popa
jb
fnstenv
jno
bound
push
push
xor
xlat
xchg
jne
loop
mov
pop
xchg
arpl
lods
fldln2
out
jae
mov
cmp
es
and
stos
xor
jno
loope
ljmp
lods
inc
lcall
pop
addr16
mov
repnz
dec
mov
or
inc
mov
int
inc
notb
xor
sar
xorb
fnsave
test
push
rcrb
hlt
aaa
adcb
ljmp
adc
or
xchg
jp
dec
mov
jno
movsb
addr16
iret
scas
xor
shlb
jae
insb
lret
bound
inc
jle
jnp
mov
fiadds
jnp
loopne
loopne
dec
stos
sub
ljmp
shll
call
pop
inc
inc
outsb
mov
fmulp
nop
jo
clc
xchg
icebp
and
arpl
push
test
ljmp
mov
icebp
pusha
les
dec
sbb
mov
sub
sahf
inc
push
dec
das
jp
stos
shrl
cmpsl
arpl
dec
bnd
sub
inc
and
add
in
cmpsl
mov
stc
inc
jle
test
sbb
push
push
cmp
mov
dec
in
out
insb
mov
adc
and
and
fiadds
sub
push
cmp
mov
daa
fists
lahf
and
xchg
sub
out
jmp
insb
test
js,pn
and
inc
push
iret
arpl
mov
mov
out
lods
cmpsl
fucom
dec
shl
insl
je
sub
sub
sbb
inc
jge
movsl
pop
je
or
mov
cmp
fistpll
mov
les
and
loope
adc
inc
insb
xchg
lret
mov
jo
xor
enter
cli
or
rcrb
fwait
push
mov
clc
pop
inc
nop
dec
test
or
lret
std
iret
xchg
popf
jo
and
cmp
fmul
adc
xchg
dec
adc
and
rclb
cmp
mov
jmp
push
pop
mov
stos
out
sub
enter
inc
sub
loop
shll
jns
les
cmpsl
pop
xchg
or
and
gs
inc
xchg
pop
in
jecxz
out
xor
push
outsl
lods
mov
push
sub
lds
inc
mov
fdivl
inc
or
and
push
cmp
xor
aam
mov
shlb
nop
icebp
inc
or
xchg
lahf
sub
in
les
jnp
outsb
and
and
sub
pop
lock
jg
cli
in
rcrb
fiadds
mov
xchg
movsl
pop
cmp
cmp
loopne
popa
push
lds
fwait
int3
adc
out
cmp
clc
in
mov
testb
loop
adc
addr16
into
pop
jo
imul
sbb
add
jecxz
negb
sub
lods
xorl
push
fs
pushf
adc
sub
add
out
add
push
cmpsl
das
push
sub
xchg
push
pop
xchg
adc
fcoms
xor
sub
cwtl
xchg
dec
inc
int3
ret
xor
mov
shlb
aad
lock
popf
sub
iret
jnp,pn
ljmp
push
mov
stc
mov
cmp
jb
loope
scas
into
or
mov
mov
dec
jmp
mov
adc
lds
dec
xchg
mov
push
fidivl
add
arpl
jp
xorb
icebp
add
pop
fcomps
push
xor
lock
mov
xchg
in
and
mov
and
movsl
hlt
out
jmp
repnz
sub
rol
hlt
test
pavgb
push
testl
call
sub
jl
push
jge
movsb
and
push
or
movsl
add
pusha
lds
adc
imul
ss
inc
in
test
pushl
cmpl
push
bound
shlb
cmp
outsb
dec
scas
cli
mov
add
icebp
xlat
test
push
bound
cltd
ret
stos
or
push
xor
iret
int3
cmp
sbb
sbb
in
aas
mov
in
pop
test
outsl
add
cld
enter
test
mov
xor
fs
or
dec
stos
jns
dec
sti
pop
lock
or
cmp
gs
jmp
mov
cmp
mov
scas
jmp
add
cmp
gs
arpl
rorb
push
and
adc
icebp
cwtl
fistpl
and
fimuls
push
out
jb
arpl
cmc
fwait
es
pop
mov
push
jae
lret
fbstp
pop
cwtl
dec
dec
mov
dec
nop
pop
cli
and
and
and
cld
cli
fmull
fs
cli
call
sbb
adc
jne
pop
movsl
pop
jns
xchg
cmovns
mov
jbe
fisubl
rcr
aaa
push
lret
add
sub
inc
xchg
subb
mov
es
xchg
repnz
dec
stc
jge
mov
icebp
test
jle
imul
aaa
imul
leave
lret
sbb
or
repz
push
mov
outsb
ja
clc
mov
pop
xchg
mov
roll
rcll
pushf
sub
mov
adc
outsl
sub
pushf
fcoml
shrl
int3
sub
pop
dec
cmp
imul
pop
cli
ficoml
js
cmp
int3
inc
aas
mov
or
dec
sub
aas
popf
xor
pop
pop
lret
pusha
sub
or
decb
mov
mov
and
inc
sub
pop
rolb
push
jge
repz
mov
mov
das
jmp
and
pop
pusha
out
fisubs
cmp
xchg
lcall
mov
and
lds
sub
fistpll
dec
popf
mov
pop
push
push
inc
test
mov
aam
pop
mov
imul
shl
pop
dec
or
or
jl
adc
outsl
lods
xlat
xchg
sub
sub
pushf
sub
sbb
mov
aam
cmp
lds
xchg
clc
sub
xor
js
out
and
lods
inc
inc
mov
ja
inc
scas
or
inc
and
xor
pop
in
mov
jg
adc
push
shlb
clc
and
cld
pop
jno
push
int3
scas
iret
adc
mov
shl
fwait
fwait
mov
sti
cmc
xchg
jmp
in
outsl
hlt
ret
add
cmp
jmp
dec
jl
mov
pop
push
popf
dec
inc
jb
lahf
xlat
dec
jb
xchg
push
push
jmp
jae
fwait
fwait
push
dec
lods
pcmpeqb
enter
mov
sti
push
outsb
xor
sbb
add
pop
add
push
scas
mov
sbb
cmpsl
cwtl
xorl
push
insl
cmp
hlt
aam
pop
enter
lcall
out
aam
mov
xchg
stc
movsb
pop
pop
push
xor
push
fidivrl
fs
icebp
mov
mov
imul
test
or
sbb
inc
data16
pop
test
or
in
cli
sbb
jbe
lcall
scas
sbb
andl
fcompl
cmp
bound
sbbl
loope
sbb
lcall
cmp
into
lret
imul
sar
movsb
jb
scas
xor
xorl
mov
xor
inc
int3
mov
mov
ss
movlps
lock
lock
mov
and
add
stos
hlt
cmp
out
fcoml
push
sbb
test
sbb
sti
xor
ja
pop
ret
lahf
mov
pop
xchg
roll
inc
pop
aad
sti
adc
out
dec
jno
lret
lahf
add
out
outsl
sub
and
add
gs
ret
aam
test
cs
push
imul
imul
cmp
das
daa
pop
xor
xchg
dec
aam
pop
mov
and
iret
stos
xchg
pusha
scas
pusha
inc
push
test
hlt
mov
jle
mov
jge
ja
jl
cli
data16
mov
dec
mov
mov
hlt
cmpsl
cmp
jle
mov
push
xchg
loopne
pop
rorb
lret
repz
sbb
mov
fldt
or
or
sbb
das
add
pop
int3
ljmp
add
lret
jmp
addr16
or
pop
ds
and
sbb
pop
dec
call
xor
or
js
int3
and
cli
adc
cmc
mov
ljmp
cld
aam
cmp
xor
mov
cmp
in
fisttps
lock
cmp
mov
lods
decb
push
sub
ret
mov
into
cmc
push
mov
outsl
pop
lahf
test
imul
xchg
loope
xor
movsb
push
les
jno
ret
pop
push
xor
movsl
mov
or
mov
or
jae
add
out
popa
setbe
fadd
sub
stos
add
cmpl
pop
add
ret
xor
mov
out
mov
sub
adc
mov
fwait
mov
test
js
xchg
in
divl
or
ss
add
insb
inc
out
movsb
scas
imul
in
push
dec
cmc
jb
out
add
push
inc
adc
fstps
cmpsl
ljmp
sbb
inc
rcrb
into
sbb
push
lods
ret
ljmp
insl
and
add
mov
or
dec
add
xlat
lds
jg
add
mov
in
mov
imul
pop
add
enter
jb
lahf
pop
push
fdivrl
pop
js
mov
push
lret
rorl
cwtl
test
cld
sub
add
jmp
dec
cmpsb
xchg
jbe
xor
xchg
push
stc
mov
inc
xor
mov
popf
add
shll
pop
pmulhuw
clc
mov
pop
test
xor
or
stc
push
arpl
mov
pushf
divl
add
adc
xor
lea
cwtl
adc
mov
jns
frstor
xchg
or
jge
std
movsl
xchg
cmp
jbe
inc
insw
sub
test
and
cmp
lret
sbb
cmpsb
adcl
jecxz
sahf
mov
cmc
in
leave
scas
pop
insl
mov
cwtl
mov
loop
clc
sbb
outsb
or
cmc
jp
sub
imul
pop
cmpsl
ret
pop
xchg
ja
xchg
add
je
out
loope
fsubl
xchg
and
xor
mov
imul
out
and
fldenv
mov
gs
nop
add
or
cmpsl
fistpl
dec
or
outsb
mov
jecxz
sbb
mov
jbe
es
stos
pop
mov
adc
ja
clc
or
mov
pop
and
pop
lcall
gs
aaa
mov
xchg
xor
shrb
stos
xor
inc
or
add
lcall
pop
and
popw
test
enter
pusha
ja
mulb
sub
pop
or
push
movsb
insl
jecxz
popa
loope
xor
adc
mov
xchg
mov
fldt
adc
imul
add
imul
rcrl
movsb
in
mov
lods
mov
push
or
gs
or
mov
negl
nop
out
aas
jbe
or
ret
std
adc
mov
cmp
popf
jb
push
sub
loope
jo
xor
or
ds
jno
inc
xchg
push
mov
adc
aam
dec
int3
sbb
les
lods
out
ljmp
xchg
iret
and
mov
arpl
mov
iret
adc
and
mov
test
xorb
xchg
sti
add
mov
xor
mov
push
add
push
insb
lock
insl
cmp
mov
sub
repz
test
sti
leave
mov
inc
and
imul
lret
adc
pop
dec
or
xchg
aaa
inc
sub
dec
in
add
inc
aad
scas
push
lahf
jecxz
dec
or
push
insb
mov
lret
xchg
jb
mov
mov
movsl
lahf
cld
or
sarb
daa
fildll
ja
or
push
or
es
xchg
dec
jg
ret
mov
std
jne
icebp
jmp
nop
adc
push
xchg
popf
jge
jle
cmpsl
aas
jnp
sub
xchg
stos
add
pushf
xchg
repz
cmp
aaa
in
and
popa
ror
sbb
and
or
mov
icebp
xchg
push
and
xchg
cmpb
pop
jecxz
fs
das
in
test
push
stc
sub
iret
rorb
cmp
aaa
dec
fs
xchg
fwait
lcall
xchg
mov
lods
add
pop
inc
push
out
add
cmp
mov
sbb
pop
add
insb
mov
mov
inc
and
push
stos
add
inc
sbb
xchg
sarl
mulb
hlt
movsl
pushf
pop
mov
adc
lea
repnz
sub
in
ss
jns
add
add
xchg
jae
iret
dec
lcall
dec
aaa
popf
ret
lods
add
lcall
aam
ret
sbbb
mov
xchg
cmpsl
pop
xchg
jecxz
nop
outsb
mov
push
arpl
push
fcoms
pop
lcall
push
pop
mov
mov
pop
and
jle
or
adc
test
cmpsl
ret
repz
push
ficoms
dec
push
clc
and
subl
push
mov
pop
sbb
mov
xchg
lahf
jecxz
mov
nop
gs
sbb
cmp
nop
cmp
sbb
push
popa
fadds
xor
add
add
sub
xor
cmp
popa
loope
das
mov
movsb
mov
ja
jbe
insl
pop
aad
cmp
sub
sub
cltd
in
movsl
mov
xchg
pop
cmpsb
pop
add
push
jle
aaa
xor
pusha
in
leave
jp
cmp
mov
dec
dec
movsl
pop
dec
jecxz
cltd
pop
mov
es
pushf
lock
das
ret
rcrl
fadds
mov
mov
cmp
mov
cmc
dec
push
mov
sbb
push
push
mov
fstpl
and
in
fst
xchg
arpl
inc
leave
jns
add
sub
and
push
jne
aaa
fcmovne
cmpsl
mov
jl
popf
push
pop
cs
pop
sbb
ds
xor
jg
inc
ja
sbb
and
dec
mov
pushf
inc
pop
rclb
mov
xchg
inc
mov
fneni(8087
pop
cmc
or
jp
jl
pop
outsb
mov
in
shrl
xchg
aad
mov
sbb
dec
xor
mov
arpl
movsl
pop
movsl
out
movsb
andb
divb
pop
lret
int
mov
sbb
and
cmp
mov
enter
sbb
pop
cmp
dec
in
int3
push
sub
sub
mov
les
iret
add
xchg
mov
mov
and
cltd
adc
sbb
repz
add
inc
jae
ret
pusha
pop
pop
lret
push
push
sbb
pop
push
push
jne
imul
cmp
adc
aaa
add
mov
add
popa
mov
xor
aas
out
pop
sti
mov
cli
xor
inc
mov
sbb
xchg
pop
jae
mov
scas
xor
negb
imul
icebp
cmp
repz
dec
idivl
lea
out
jbe
mov
jns
ds
xor
insl
orb
ds
rcrl
pop
pop
stc
lret
mulb
movsl
cmp
sbb
cmp
cmp
pop
iret
inc
cmpsl
xor
inc
addr16
pop
push
dec
clc
dec
lret
pop
mov
mov
das
fwait
xchg
xlat
test
or
sbb
sub
shrl
adc
xor
dec
gs
leave
jo
xchg
xchg
cmp
jns
hlt
mov
fistpl
mov
pop
rolb
fwait
mov
lock
mov
pop
nop
fcomi
cmc
fdiv
sti
mov
push
push
lahf
shl
fs
adc
pop
jo
fs
dec
mov
pop
test
pop
out
mov
jns
ret
shlb
jnp
add
xor
shl
lahf
mov
std
and
and
push
sti
mov
push
and
lahf
fildl
sub
xchg
fisubs
jb
lret
leave
jno
xchg
inc
add
add
add
inc
sub
pusha
inc
mov
inc
push
mov
cld
fadds
test
scas
xor
pop
pop
insl
fwait
mov
lods
stc
sub
rolb
inc
inc
icebp
mov
data16
inc
mov
cmp
add
inc
jnp
inc
mov
dec
mov
inc
add
loopne
and
mov
int
mov
loope
rolb
xor
add
jg
xchg
xchg
cmp
or
jno
inc
in
lret
nop
push
mov
data16
sub
cmc
dec
cs
aas
mov
inc
daa
in
dec
mov
mov
stc
sub
jo
loop
daa
pushf
jp
popa
push
push
daa
in
lret
ja
sti
mov
nop
and
test
sbb
and
jg
and
out
jmp
xchg
push
xchg
shlb
mov
loop
fildl
or
hlt
roll
ret
adc
jle
aam
movsl
stc
scas
clc
add
xchg
push
pop
inc
push
xor
cli
mov
stos
lods
mov
pop
popa
imul
insl
cld
jmp
sub
jne
mov
jmp
std
and
jno
pop
dec
decl
je
push
cs
pop
xchg
aas
repnz
insl
stos
sahf
push
adc
add
jmp
jg
leave
addr16
mov
pushf
push
loopne
mov
mov
inc
adc
jne
cmp
sbb
dec
pop
call
iret
sti
popf
fdivrl
in
cmpsl
mov
xchg
push
stos
adc
iret
loop
cmp
clc
aam
scas
xor
dec
fldl
push
mov
sbb
lret
fwait
push
inc
int3
lret
stc
dec
imul
or
gs
data16
adc
push
sbb
and
inc
cmp
insl
inc
leave
adc
sub
test
mov
and
mov
adc
mov
mov
or
adc
mov
add
ficoml
sub
dec
add
xchg
inc
jl
push
cmp
mov
push
mov
into
addl
imul
adc
jno
pop
add
inc
xor
mov
or
dec
dec
xor
loopne
and
sbb
je
and
pop
mov
insb
inc
add
jge,pn
lds
bound
adc
add
iret
mov
mov
movb
mov
adc
sub
cmc
inc
xchg
cmp
adc
sub
ds
js
jbe
je
int
pusha
bound
mov
mov
xchg
dec
addr16
sub
lahf
xor
add
and
enter
sete
inc
inc
xchg
jb
sbb
outsw
nop
xchg
int
nop
sbb
dec
inc
add
gs
mov
jae
and
ret
mov
add
cltd
ficoms
mov
inc
fs
fs
cmp
sarl
mov
mov
mov
imul
in
adc
cmc
in
push
lea
pop
in
pop
jl
xchg
pushf
mov
shl
mov
pushf
xchg
popf
or
xchg
les
cmp
sbb
mov
pop
pop
mov
xor
cmc
push
pop
xor
divl
pop
or
jl
call
pushf
xorl
ret
pop
rorl
dec
pushf
mov
jnp
mov
or
fidivrs
add
cs
daa
push
dec
sub
outsb
in
das
lahf
mov
lock
arpl
rclb
imul
repnz
and
ficomps
jg
insl
in
lret
enter
mov
pop
scas
or
outsl
data16
jp
aad
mov
popa
mov
or
imul
cmp
in
jns
sbb
test
mov
jne
data16
xor
adc
sbbl
rolb
gs
cmp
fldenv
popa
ss
mov
pusha
xor
orb
sub
jae
sbbb
dec
cmp
sbb
xor
sbb
mov
adc
dec
lods
aam
jns
jle
into
or
xchg
fisubs
sti
xchg
sti
sbb
outsb
push
fsubs
cmp
enter
push
xchg
cmp
push
xchg
adc
lahf
jns
mov
fisubs
test
cltd
adc
push
ljmp
movsl
and
cli
sbb
mov
add
xchg
je
dec
mov
xlat
in
inc
jp
mov
adcl
pop
pop
loope
inc
mov
dec
std
pop
sbb
lret
bnd
mov
das
dec
fs
mov
leave
fs
mov
rorb
aas
jae
xchg
lsl
rcrl
lods
xchg
fisubrl
mov
lea
orl
das
loop
push
scas
inc
aam
jbe
ret
adc
and
xorb
mov
mov
in
dec
aas
sti
mov
mov
dec
push
fimuls
and
orl
pop
add
scas
je
movsl
out
sbb
cmp
ficompl
arpl
xchg
les
xchg
jl
jne
add
ret
sub
mov
aas
dec
pop
mov
rorl
push
je
cmp
push
cmp
cs
scas
xor
xchg
mov
mov
adc
mov
jnp
jbe
clc
and
fnstsw
iret
lea
or
fwait
pop
xchg
adc
push
adc
movsb
inc
or
test
sub
sarb
fisubs
leave
sub
push
mov
sbb
sub
jnp
in
xchg
in
in
inc
es
cmp
addr16
mov
jns
xchg
fistl
add
mov
popf
mov
mov
js
stc
inc
jle
mov
fisttpll
cmp
gs
mov
faddl
inc
mov
dec
mov
fwait
movsl
inc
add
je
iret
outsb
scas
rorl
mov
mov
add
mov
mov
popa
mov
pop
repz
lahf
cmp
push
sub
fistpl
divb
ret
loop
mov
inc
jg
pop
pop
adc
push
into
adc
adc
xchg
jle
loop
lock
jb
sti
adc
arpl
push
subb
xchg
sbb
cmp
and
or
push
das
and
out
xchg
cld
outsb
and
push
jp
push
push
sbb
xchg
push
repz
negb
dec
hlt
lcall
mov
lock
stos
sub
mov
lods
dec
test
lods
mov
testl
jmp
jae
aad
dec
shlb
icebp
std
push
subb
int3
mov
sbb
rcrb
leave
out
push
dec
dec
lcall
imull
sub
push
ja
lahf
push
pop
adc
leave
mov
loop
or
nop
in
mov
je
sarl
shll
fadd
mov
outsb
popf
jb,pn
pop
xor
lock
mov
test
call
addb
and
adc
sub
adc
inc
pop
scas
xchg
gs
scas
dec
das
pop
cli
mov
cmp
sbb
flds
test
push
lret
mov
pop
pop
lahf
cld
out
cld
adc
jl
lahf
arpl
loopne
imul
or
adc
dec
adc
dec
call
add
lock
je
ljmp
daa
popa
xchg
fdivs
xchg
dec
aas
scas
jmp
das
xchg
aad
xor
sbb
aad
adc
push
popf
push
push
dec
lcall
cmpsl
lds
lcall
ljmp
mov
sub
sbbb
push
outsl
lods
cmc
and
popf
inc
call
popf
mov
out
xor
cmc
adc
shll
sahf
in
and
mov
jbe
arpl
mov
loop
sbbb
mov
aam
xchg
jg
add
imul
mov
xchg
mov
mov
or
inc
cmp
pushf
repnz
jne
adc
or
xlat
push
icebp
gs
mov
int
in
push
dec
clc
dec
mov
mov
int3
clc
stc
inc
or
mov
xchg
cmp
cld
mov
add
cmp
sbb
xlat
mov
jnp
lods
pusha
push
fisttpl
xchg
push
pop
inc
mov
jbe
lahf
xchg
jp
sub
fdivrl
adc
adc
or
push
mov
loopne
dec
das
clc
gs
push
pop
sub
idivl
xchg
pusha
push
lea
mov
add
sbb
in
sub
sbb
movsl
out
mov
imul
sbbl
sbb
lods
jo
adc
ror
push
aam
or
fiaddl
lret
mov
adc
leave
inc
insb
mov
sub
inc
arpl
lret
mov
lods
xchg
cmp
fmuls
mov
stos
and
in
aas
jo
je
adc
push
lods
sub
adc
lea
in
stos
loop
repnz
xchg
clc
cltd
mov
loop
pop
mov
xchg
sbb
call
shll
cmp
dec
or
sbb
test
mov
push
call
lock
sbb
inc
or
insl
or
mov
add
aad
mov
sbb
pushf
loop
rcll
loop
jge
ljmp
xchg
incb
inc
ret
inc
scas
jnp
inc
push
or
fbld
int
push
xchg
out
aad
sahf
push
jb
popf
js
rclb
iret
das
mov
mov
jg
lcall
push
cmpsb
mov
cmp
jl
out
lcall
call
push
push
xchg
pusha
test
sub
and
lcall
cmp
add
jle
in
cltd
jne
addr16
jns
cwtl
push
ret
inc
push
iret
aaa
cmpl
ffree
or
xchg
je
sub
mov
adc
jne
xor
jne
inc
je
cmp
aas
sbb
mov
push
imul
cmpl
xchg
cmpl
jle
paddusw
sub
mov
test
inc
push
test
or
cltd
js
outsl
clc
sbb
out
stos
call
pop
into
push
xchg
js
add
aam
push
ljmp
pop
ds
dec
mov
movsl
jb
fwait
pop
xor
fsubrs
jbe
fnstsw
mov
lea
pop
pushf
aad
frstor
sbb
push
dec
pop
loopne
pop
lcall
in
xor
icebp
loopne
das
sbb
mov
idiv
in
jns
data16
sub
push
adc
or
test
push
or
movsb
xchg
xchg
pop
test
clc
pop
add
adc
inc
ja
sti
insb
xor
push
stos
fcoml
addb
push
jl
sub
test
xor
and
int3
fs
push
push
inc
adc
inc
jle
xor
adc
push
xor
sub
mov
lds
cmp
stos
negb
and
imul
in
jg
push
lret
sub
je
mov
or
cmp
loopne
cmp
push
push
das
inc
cmp
xor
pop
insl
add
enter
out
mov
pop
outsl
push
addl
mov
lret
insb
into
in
mov
pop
adc
movl
xchg
mov
fs
cmp
cmp
repz
mov
ja
add
out
out
xchg
leave
cmpsl
jecxz
mov
jg
adc
push
sub
inc
stc
repnz
pop
mov
pop
push
mov
lcall
inc
pop
sbb
imul
pop
leave
and
inc
lcall
repnz
arpl
xlat
dec
pusha
lcall
xchg
adc
hlt
lcall
sbb
jno
pushf
mov
movsb
jmp
stos
sbb
into
lods
pop
movsb
movsl
dec
stc
mov
in
push
cld
lds
movsl
nop
int3
or
insl
mov
push
roll
imul
pop
jne
daa
xor
push
test
lods
lock
es
push
dec
stc
leave
pusha
mov
lock
jl
mov
sbb
rclb
sub
mov
jns
mov
stos
jbe
mov
gs
sub
jae
mov
adc
xchg
mov
jne
ret
pusha
outsl
clc
int3
jbe
sub
loope
sti
cld
jmp
cltd
rorb
mov
cmp
add
int3
pslld
xchg
in
lock
sub
shlb
jp
dec
cmpsl
cmp
insl
dec
inc
inc
mull
mov
mov
mov
dec
pushf
cwtl
in
and
icebp
enter
mov
ss
add
and
mov
mov
cmp
xor
mov
movsb
out
xor
pop
pop
loope
add
push
icebp
sbb
aaa
movsb
adc
pop
add
cmpsb
and
mov
add
mov
jge
ja
rclb
cmpb
lods
std
adc
push
test
adc
jbe
das
mov
fs
jg
loopne
ljmp
stos
push
inc
xchg
mov
leave
mov
pop
and
icebp
ds
ret
lsl
int3
push
cmpsb
imul
sub
sahf
xorl
pushf
mov
inc
cmpsb
jns
bound
dec
nop
mov
jecxz
insb
mov
sub
sbb
xchg
fidivl
dec
add
jg
mov
jg
adc
or
shl
push
popa
popf
inc
cmpsb
divl
adc
out
clc
sub
dec
sbb
inc
dec
push
lods
loopew
jne
mov
inc
std
mov
scas
mov
imul
shll
add
das
jmp
pushl
cmp
lock
orb
mov
sbb
xlat
mov
test
mov
add
inc
mov
sbb
scas
pop
out
fisubs
sbb
push
lret
movsl
add
mov
imul
test
or
lock
jl
inc
jge
sub
cmp
out
pop
sbb
and
scas
sbb
lret
in
sbb
add
or
mov
xor
in
stc
mulb
and
xchg
push
nop
test
xor
aas
aad
out
in
imul
lcall
or
mov
enter
adc
cld
bound
cmp
fcoms
jae
xchg
add
mov
ljmp
push
cmp
loope
arpl
xchg
aaa
insb
mov
imul
bound
jmp
icebp
mov
pusha
cmp
mul
push
imul
ja
test
or
insl
mov
sbb
push
ret
negl
xchg
xchg
std
or
ds
outsl
sbb
adc
dec
aaa
dec
mov
dec
inc
negb
enter
inc
xchg
sbb
adc
hlt
mov
mov
push
stos
push
mov
testb
dec
in
test
in
stc
add
out
shll
xor
or
ss
xor
popa
pop
sti
cmc
ja
movsl
xor
fldl
dec
out
aas
sub
call
orl
fisubs
lcall
jae
sbb
adc
mov
or
mov
cld
push
mov
testl
pop
shrl
pop
mov
cltd
mov
jl
stos
arpl
cmp
add
test
mov
fdiv
repnz
mov
popf
icebp
test
test
out
mov
loop
bound
enter
jns
pop
cltd
sub
or
mov
aam
into
pop
mov
jl
rcrl
cmp
mov
inc
add
gs
stos
mov
movsl
and
cmc
daa
aam
fmul
dec
rcll
dec
jecxz
shlb
or
push
in
shrl
adc
mov
shrb
jnp
scas
xor
push
rcrb
outsl
adc
ficomps
push
mov
out
push
nop
sarb
mov
ret
dec
ret
mov
shlb
mov
outsl
out
jae
add
xor
inc
jl
cwtl
popa
jmp
fldt
mov
negb
jecxz
insb
sbbl
mov
test
pop
lahf
fs
push
cs
leave
test
aam
jl
mov
sub
cmp
add
mov
sbbl
mov
movb
mov
imul
je
or
xor
stos
inc
cld
add
nop
test
scas
inc
dec
xchg
mov
pop
rclb
sbb
loop
cmpb
xor
out
lret
sti
xor
fwait
imul
fwait
cmp
adc
mov
mov
cmc
mov
pop
adcl
mov
xchg
sahf
adc
cmp
sti
daa
xchg
aad
cmp
sbb
and
cli
mov
fcmovnbe
les
push
bnd
and
popf
cwtl
movsl
cs
add
mov
fsts
jno
outsb
repz
jge
push
add
push
and
sub
test
aam
pusha
xchg
sbb
invd
popf
inc
in
jl
stc
mov
jecxz
outsl
popa
inc
sub
std
dec
leave
fnstcw
ss
repnz
pop
push
sub
pop
fs
adcl
psrld
sub
outsl
add
outsl
sub
arpl
adc
inc
cwtl
pop
pop
mov
xchg
sub
xlat
mov
jo
push
mov
sub
rorl
jge
push
xchg
fmull
das
iret
fsubl
or
mov
xchg
inc
mov
pop
pop
bound
fxch
jne
lods
mov
lret
dec
fldcw
xchg
fisubl
add
cmp
xchg
jmp
push
xor
push
mov
scas
mov
into
shlb
lods
fistps
mov
mov
orb
jge
imul
sub
jb
mov
jmp
and
jle
les
add
adc
mov
lods
xor
js
call
xchg
repnz
in
dec
xchg
dec
jp
mov
xor
in
in
out
aam
dec
ja
cmp
dec
popf
xor
xchg
cmp
js
and
das
mov
jg
bound
aas
push
lods
pop
xor
repz
sarb
add
mov
jmp
gs
add
push
mov
shrb
inc
andb
loope
mov
out
iret
add
jae
jmp
adc
bound
or
int
or
fsubl
dec
cs
pushf
mov
sub
test
mov
scas
cmp
jbe
xchg
das
call
mov
sbb
insb
mov
pushf
clc
cli
enter
into
add
fisttps
ret
mov
out
push
adc
enter
jne
sbb
cltd
cmpsl
mov
adc
cmpsb
popf
stos
cmp
lods
loope
mov
adc
jb
add
sbb
mov
dec
popf
gs
test
and
or
mov
dec
add
adc
out
pop
aam
mov
mov
test
lds
mov
leave
mov
sub
mulb
jno
xchg
dec
push
jbe,pn
fildll
mov
lret
add
test
dec
or
vmaxps
enter
dec
lods
aaa
jno
mov
mov
mov
mov
hlt
out
push
out
lods
lods
push
leave
mov
jae
cmpb
xorb
xor
ret
mov
cmp
sub
stc
jle
cmpsb
xchg
jno
test
aad
lock
arpl
out
in
hlt
cmp
lds
repnz
or
dec
inc
stos
push
arpl
aas
pop
cmp
push
fiadds
mov
popa
cmc
sbb
iret
mov
sub
rol
cmpsb
mov
test
scas
iret
mov
ljmp
xor
lret
mov
loope
cmp
xor
into
cmp
push
in
lret
repnz
jge
mov
xor
push
adc
push
mov
push
dec
cmp
testb
aas
sbb
movsl
ret
xor
pop
dec
addr16
xchg
iret
call
shrb
xchg
mov
les
xor
dec
rcrb
mov
ret
cwtl
cmpsl
scas
ficoms
cmpsl
loopne
call
jo
rol
push
lret
xchg
push
add
jle
call
and
push
loopne
mov
push
mov
push
add
jno
out
sbb
jbe
jg
mov
enter
mov
insl
xchg
test
psadbw
mov
inc
lret
dec
lea
repnz
mov
xchg
test
jbe
mov
pushf
mov
test
mov
pop
and
jl
shlb
fisttps
cmovae
popa
mov
pop
adc
sahf
icebp
pop
outsb
loopne
andl
push
sub
cmp
out
js
imul
sub
mov
jge
add
bound
movb
incb
dec
pop
call
and
jns
or
insl
xchg
stos
mov
orb
xlat
fcompp
repz
pop
ss
pop
jp
add
ret
jmp
mov
pop
test
ss
pusha
ja
dec
xchg
inc
clc
lret
push
jmp
icebp
clc
sbb
test
pop
loopne
sarl
push
popa
xor
mov
xchg
imul
push
in
imul
in
mov
pop
cmp
mov
or
dec
add
jmp
lcall
mov
fcoml
in
pop
shrl
call
rcrb
sbb
jge
xchg
dec
jmp
dec
lea
dec
adcb
cwtl
loopne
dec
pop
add
lret
mov
pop
in
negb
and
cs
pop
ja
ret
jg
add
sarl
sub
inc
sub
inc
out
js
pop
fsubrl
iret
test
xchg
aad
cmp
sti
mov
int3
lock
jg
arpl
or
mov
sub
dec
fiaddl
mov
dec
or
outsb
daa
outsb
idivl
adc
or
jnp
cmp
aam
enter
cmp
inc
movaps
adc
xchg
sub
xchg
stos
or
stos
pop
out
cmc
shr
and
hlt
jg
fidivrl
mov
push
loopne
mov
popa
sahf
cmp
movsl
sbb
pop
testl
dec
imul
mov
daa
or
aam
mov
push
movsb
push
mov
aad
repnz
mov
cmpb
xchg
lds
ffreep
nop
jae
mov
push
scas
loop
lock
add
xchg
push
push
and
push
clc
adc
mov
and
mov
rorl
push
xor
fstpt
cmc
jb
imul
add
add
pop
lods
pop
data16
pop
jns
test
in
sub
aas
adc
int3
ljmp
xlat
and
and
jmp
push
std
mov
pop
jecxz
add
pop
fisttpll
mov
pop
cmp
or
inc
ljmp
mov
or
jmp
pop
xor
insl
push
daa
xchg
int3
adc
mov
add
or
popa
cld
push
xchg
fucomp
test
mov
mov
psubd
sub
movsl
cmp
mov
mov
jno
fadd
and
add
les
loopne
or
lahf
aaa
es
xor
ljmp
loop
sahf
mov
test
incl
adc
cmp
mov
jecxz
cli
movsl
jl
clc
outsl
and
cmp
jno
aaa
jbe
shll
ljmp
test
xchg
add
push
mov
ja
int3
push
jns
cmp
je
cmpsb
mov
mov
icebp
push
leave
jge
or
dec
sub
andl
std
jg
stos
jb
fucom
adc
jns
mov
imul
stos
cld
int3
mov
dec
jae
in
daa
clc
xchg
fisttps
gs
popa
adc
insl
fs
mov
test
or
jae
out
adc
or
xchg
sbb
shll
xchg
out
add
js
jno
fstps
cltd
jmp
icebp
push
xchg
lcall
hlt
add
faddl
stos
js
push
inc
and
test
popf
jl
inc
imul
inc
lret
xchg
or
outsl
insb
dec
xor
push
mov
xchg
cmpsb
pop
pop
mov
mov
lea
cltd
jle
pop
aam
xchg
stc
sub
popf
or
xchg
inc
push
rep
cmp
mov
and
lea
loope
dec
sbb
lcall
int3
mov
popa
sub
sbb
lods
or
mov
aaa
iret
fmull
js
add
mov
or
pushf
inc
icebp
jae
mov
imul
cmp
loopne
or
sti
mov
ret
cmp
out
push
pop
dec
jbe
jnp
das
lock
inc
insl
sahf
sbb
inc
jmp
fmulp
mov
mov
push
lods
cmp
add
jo
insb
and
dec
adc
jg
loopne
jne
lea
pop
jp
add
addr16
mov
jmp
cmpsb
lcall
das
scas
xchg
out
mov
les
adc
xchg
in
clc
pop
jae
add
enter
push
jg
cmp
fidivs
sbb
xor
shlb
or
bound
adc
sub
add
mov
aad
sbb
mov
cmp
mov
popa
hlt
out
mov
sbb
lret
dec
dec
inc
cmc
mov
out
stos
or
arpl
rcll
mov
jmp
push
std
jns
dec
jg
xchg
lahf
dec
mov
inc
ret
push
gs
sub
test
mov
test
jp
jb
or
pushf
aaa
frstor
and
repnz
repz
ror
std
lret
js
jl
dec
int
repz
cmpsb
pop
and
sbb
mov
iret
sub
push
popf
mov
insl
or
shrl
cmpl
gs
sub
jle
add
mov
dec
lock
cmp
xor
push
fidivl
or
ret
je
stc
and
insl
jle
in
cltd
cmp
ljmp
mov
shrb
testl
pop
pop
add
imul
add
cmp
pop
dec
ret
jmp
rol
pop
xchg
mov
cmp
push
lods
sub
stc
push
push
push
push
jne
shlb
pusha
cmpsl
hlt
rolb
mov
fstl
mov
cli
call
xor
punpckhwd
push
ror
sti
xchg
dec
insb
fdivp
ja
lea
aas
daa
inc
loope
add
cli
dec
dec
fs
enter
xchg
adc
fxch
xorl
add
push
dec
push
stos
movsb
lods
push
int3
fisttpl
fsub
adc
xchg
mulb
lds
shrb
daa
out
test
data16
inc
std
aaa
mov
sub
jg
dec
cmp
sbb
je
pop
clc
add
movsb
cmpsb
sbb
push
cmp
rcr
out
cmpsl
pop
adc
xchg
shll
mov
xchg
ret
xchg
xor
icebp
hlt
in
sub
mov
mov
cmpl
call
call
jle
imul
jecxz
sbb
push
jno
ret
decl
cmc
add
pop
rclb
lahf
pop
fcmovnbe
in
sub
jl
imul
adc
adc
fwait
repz
xchg
rcr
movsb
xchg
cwtl
pop
cmpb
in
jg
es
outsb
test
push
stos
cltd
push
fistps
stos
cs
mov
push
or
jmp
and
add
insb
and
adc
inc
enter
pop
mov
and
add
or
or
loop
mov
sub
sbbb
inc
icebp
fstl
subb
shlb
rcl
or
dec
push
pop
adc
mov
pusha
cmpsb
xor
mov
mov
xor
jp
or
sbbl
in
add
rolb
xor
lods
mov
ret
ds
dec
add
sahf
leave
xchg
stos
pop
cmpsl
popa
lods
inc
scas
pop
add
push
movsl
sub
or
test
xchg
dec
inc
ja
call
xlat
fdivrl
ss
mov
cmp
inc
dec
mov
ja
movsl
fwait
cmp
inc
push
es
ss
sbb
clc
jle
jmp
aas
dec
stos
mov
mov
ret
mov
mov
push
add
xor
inc
push
push
subl
cmp
inc
jg
lods
pop
and
adc
push
pop
add
lods
pop
push
mov
xchg
inc
sbb
rcrb
push
mov
cmp
popa
aad
add
jnp
and
test
int3
adc
mov
sub
lods
cmp
jecxz
jb
xor
movsl
sub
fbld
push
adc
rol
or
test
bound
dec
sub
adc
xor
ret
and
jnp
fcoml
int
xchg
jge
sbb
and
xor
lock
or
stos
jmp
nop
fildl
negl
es
sub
xchg
popf
out
nop
not
xchg
test
cmp
test
popf
jl
sahf
fwait
outsb
push
jl
push
jo
cmpsb
pop
cld
shll
fistps
pushf
js
adc
idivl
mov
pop
lahf
jg
shrl
movsl
push
ds
sub
fsub
out
sbb
push
repz
int3
jecxz
jns
mov
sub
sarb
imul
inc
fwait
dec
adc
add
ja
outsb
jg
sub
xor
sub
idivl
outsb
adc
inc
sub
stos
adc
mov
cmpb
sti
or
push
sbb
adc
mov
jg
in
pusha
pop
ss
sub
mov
loopne
icebp
sbb
mov
fsubs
mov
ds
mov
outsl
mov
outsb
ljmp
pop
dec
or
push
pop
mov
aas
das
sbb
adc
fcmovbe
mov
jo
fbld
adc
notb
jmp
shlb
push
push
roll
ret
into
ret
add
mov
inc
les
aas
test
arpl
jns
xchg
repz
cwtl
sbb
push
arpl
test
pushf
cwtl
pop
mov
out
insl
sbb
insb
mov
jne
or
adc
pop
popa
adc
and
jnp
out
sbb
jae
xor
cmpl
add
repz
fwait
mov
test
inc
out
sbb
cs
push
lods
popf
or
in
movsl
and
pop
arpl
in
enter
fs
and
push
xor
jne
enter
sbb
mov
mov
push
cmpsb
xchg
mov
enter
ss
cmp
adc
sub
mov
push
sbb
xchg
mov
xor
pusha
test
loope
lahf
adc
jle
mov
mov
lock
daa
fldenv
push
sahf
or
outsl
std
rolb
imul
jmp
aaa
iret
dec
pop
mov
test
test
loope
mov
xorb
xor
xor
adc
lret
lahf
adc
and
test
xor
scas
push
pop
jnp
jno
mov
mov
mov
xchg
ret
mov
fwait
or
int
nop
sbb
add
jbe
xor
rcll
jns
push
cwtl
xchg
pop
sti
push
mov
sub
push
add
fiaddl
outsl
popf
fwait
sbb
adc
cmc
sub
lcall
mov
or
mov
imul
out
push
lret
fnstenv
lock
pop
jecxz
repnz
int3
ficomps
sti
push
dec
jg
enter
pop
rol
cwtl
xor
inc
jne
xchg
ja
in
int
arpl
dec
rcrb
sub
xchg
xchg
cltd
xchg
adc
dec
lock
xor
jg
jmp
and
frstor
insl
dec
int
xchg
adc
lret
ljmp
xlat
call
sbbl
in
push
sub
test
mov
pop
inc
out
or
cmp
cmp
das
pop
cld
pop
arpl
lret
push
test
mov
add
cmp
jmp
das
syscall
dec
fs
jns
xchg
mov
fiadds
addr16
sbb
hlt
leave
int3
jp
pop
jl
lret
test
hlt
rclb
push
mov
cmp
ret
lahf
out
les
xchg
cmp
dec
adc
lret
fcmovu
lock
cmp
lods
int
ds
dec
int3
mov
sub
push
jno
inc
fimuls
jns
scas
cmp
jns
aad
lret
fmuls
lea
hlt
incb
adc
hlt
sahf
fs
xor
lcall
sub
jp
cs
push
mov
popl
pop
neg
cmp
stc
daa
insl
js
out
loopne
in
fildll
dec
mov
push
dec
adc
cmpsl
mov
and
mov
push
bound
arpl
mov
xlat
rcrl
push
lock
add
inc
in
les
into
xchg
cmp
pop
xchg
iret
cmp
mov
dec
push
jns
imul
repz
imul
shll
stos
mov
cmp
xlat
std
cmc
stos
add
mov
fcmovnb
repnz
mov
add
cld
int
roll
xchg
std
imul
loope
sub
ljmp
pop
add
orl
push
daa
addl
pop
cmp
shlb
adcb
out
or
ror
mov
pop
xchg
lret
and
cwtl
pop
mov
or
daa
cmp
and
or
jmp
in
cli
or
inc
dec
cmc
push
mov
sti
cli
push
xlat
mov
loop
orb
xchg
in
aas
and
scas
stc
cmpsl
mov
pop
imul
add
mov
test
push
lahf
mov
sbb
push
mov
dec
mov
add
pushf
xor
xchg
pop
testb
jmp
icebp
adc
xchg
pop
mulb
movsb
hlt
lret
enter
xchg
mov
mov
mov
mov
cmp
or
lcall
jne
popf
jne
fdivrl
sub
aad
notb
jle
bound
inc
xchg
mov
stos
mov
inc
xchg
xchg
lods
jns
xchg
xchg
ret
xchg
mov
insl
dec
xchg
xor
push
aaa
std
fisubl
xabort
test
imul
sbb
mov
ss
cmp
rcr
int3
add
pushf
outsl
shrb
and
sub
jmp
xchg
adc
lock
nop
scas
lahf
pop
inc
sub
and
sahf
cmpl
lea
in
mov
lods
mov
inc
fwait
sub
jp
adc
into
xchg
cltd
divb
inc
mov
les
push
sbb
out
cmpsb
insl
cmp
test
mov
sbbb
sti
add
dec
sub
cmp
dec
add
fistps
clc
ficoml
sub
inc
mov
stc
fiaddl
mov
push
and
mov
je
jo
mov
bound
iret
lahf
and
add
rorb
es
xchg
lods
dec
push
sub
lret
xchg
arpl
pop
sub
cmpsl
mov
dec
rcrl
sub
or
mov
shr
lret
jmp
mov
adcl
and
push
jbe
addr16
mov
mov
js
lods
add
mov
cmpl
inc
push
mov
fcmove
rol
loopne
jno
fsts
lds
xchg
repnz
sub
jge
mov
cmp
cmp
xor
mov
nop
int
inc
xor
cmp
mov
xchg
and
out
inc
push
xchg
jge
mov
out
fdivrl
sbb
cmp
jno
sub
xor
arpl
mov
jmp
sub
lret
mov
sbbl
mov
fcomp
loop
push
in
push
shl
sahf
push
and
loopne
into
cli
mov
or
mov
lock
aaa
sbb
cmpsl
adc
push
cmpsl
pop
xor
ss
leave
mov
jp
dec
xchg
sbb
dec
jbe
adc
stc
and
sbb
mov
push
and
mov
in
or
add
js
mov
ja
out
xor
push
lcall
data16
shll
pop
dec
ficoml
xor
inc
cltd
mov
pop
jne
mov
mov
xchg
add
mov
fnstcw
xchg
jge
xchg
aas
xor
sub
dec
lods
bnd
mov
in
xlat
mov
daa
test
fistps
pop
adc
jmp
xor
scas
in
pop
fists
jmp
pop
jo
jnp
xor
pop
or
xor
cld
xchg
je
mov
shll
aad
hlt
mov
nopl
call
mov
lret
sarl
jb
jns
mov
fdivl
inc
pop
movsl
jecxz
jecxz
cmc
sahf
leave
lods
lock
ss
pop
les
ss
imul
fincstp
adcl
and
mov
sar
test
push
cmp
cltd
mov
jecxz
rclb
in
sub
adc
ss
ret
cmpsb
pop
push
gs
push
pop
adc
fisttpl
inc
test
cmp
sub
xor
outsb
subl
lcall
movsl
int
test
cmp
divl
test
adc
dec
inc
sbb
jbe
mov
or
cmp
negl
pop
and
xchg
stc
in
jb
rcrb
cld
test
imul
rcll
push
mov
orb
adc
test
cwtl
mov
push
or
fisubrl
outsb
cmp
incb
sahf
cmpsl
adc
arpl
in
cmp
repnz
outsb
mov
aaa
push
ret
outsb
fucomi
jg
lcall
add
rcrl
cld
mov
sbb
mov
xchg
mov
jecxz
cs
jnp
mov
inc
sbb
movsl
movsl
jecxz
sub
jl
mov
xor
ds
nop
insl
dec
jl
ficoms
pop
arpl
neg
sub
mov
pop
pop
xor
add
mov
das
in
pop
lahf
loop
jno
jbe
push
push
cs
lret
cmc
in
in
ljmp
fcmovu
mov
pusha
insb
xchg
in
lods
push
cmp
ja
fwait
mov
pop
div
ja
aam
fimull
mov
ja
and
call
icebp
cmp
jmp
vpunpcklqdq
or
and
lea
mov
lea
adc
rorl
imul
cmp
push
add
cvtpi2ps
dec
aam
pop
adc
sti
loopne
pop
push
cld
jecxz
or
pop
inc
fistpll
fidivs
cmpsl
mov
jno
ljmp
icebp
je
inc
fildl
les
pop
mov
sbb
push
in
mov
cmp
cmp
add
adc
push
fists
cld
ficompl
dec
cmp
add
adc
sub
rcr
sbb
ljmp
add
filds
sahf
jne
adc
xor
or
or
sarb
mov
les
jg
lods
int3
mov
aaa
lock
inc
push
pop
adc
and
int3
push
cmp
ficoms
stos
mov
insb
inc
leave
adcb
shl
mov
push
lods
xorl
ds
js
mov
sbb
test
data16
lret
mov
xorl
jb
jno
pop
adc
sahf
in
in
sub
ljmp
dec
push
push
fcom
adc
cmp
es
mov
mov
ds
js
fdivrl
dec
shll
mov
jbe
out
jmp
xchg
hlt
pop
jne
cmp
inc
push
pop
mov
shlb
call
jne
jnp
outsl
mov
jp
adc
xchg
mov
cmp
es
mov
adc
fisubrl
and
cltd
push
scas
adc
push
daa
jo
xorl
shll
xchg
aaa
or
dec
sbb
fnsave
xor
popf
push
push
add
adc
jnp
mov
int
jp
jne
add
into
stc
mov
loop
adc
test
fistpl
sbb
cmpsb
jecxz
inc
sbb
addb
ds
pop
dec
sbb
data16
fidivl
mov
push
cmp
mov
repnz
mov
adcl
mov
test
dec
stos
pop
mov
and
jecxz
inc
xor
sbb
push
shll
pop
sub
mov
add
enter
dec
jle
cmp
movsl
xchg
movsb
clc
scas
ficompl
clc
inc
pop
hlt
pop
cmp
rorb
sbb
inc
mov
push
xor
lret
test
rorl
imul
dec
mov
sbb
mov
lds
push
lret
mov
dec
icebp
jno
xor
ja
inc
repnz
sub
cmc
add
sar
jmp
or
adc
sbb
sub
clc
mov
sub
pop
push
dec
lds
out
adc
mov
addr16
ret
rolb
lds
pop
and
xchg
stc
stc
pop
aad
bound
lods
nop
mov
mov
pusha
les
jl
js
xchg
ds
dec
movsl
mov
ja
jno
sbb
dec
mov
add
cmp
stc
arpl
ret
addr16
mov
xor
movsb
cmp
mull
mov
pop
out
add
push
pop
dec
adc
repz
mov
xchg
cld
fmulp
decl
lock
sarb
add
scas
scas
mov
jmp
cmp
mov
leave
add
mov
inc
add
mov
std
push
lret
or
sub
rolb
xor
jmp
mov
pusha
je
push
sub
pop
daa
iret
int
adc
repz
leave
div
mov
test
sbb
and
dec
pop
mov
xchg
or
int3
xchg
dec
jg
fmuls
lret
xchg
cmpl
pop
scas
cmpsb
lahf
push
sbb
fisttpll
or
out
mov
sbb
or
or
sub
in
and
out
jo
cwtl
pop
cmp
repnz
dec
mov
dec
repz
jl
mov
sbb
aam
popf
add
aas
pushf
gs
push
mov
cmp
cmp
popa
cwtl
mov
dec
mov
adc
gs
mov
xchg
jns
andl
leave
mov
out
test
sbb
mov
cltd
xchg
movsb
outsb
xchg
add
clc
pop
out
ss
pop
popa
rolb
jbe
mov
lret
inc
jae
fs
repz
dec
ljmp
ss
xor
jmp
scas
aaa
inc
call
or
mov
adc
mov
dec
ja
add
inc
lock
add
mov
shll
add
loope
or
or
test
push
sarl
mov
mov
inc
mov
dec
dec
test
mov
mov
add
out
test
cmp
call
les
push
shlb
pop
dec
in
inc
jno
ret
cld
sbb
sub
les
or
mov
jae
cmp
stos
aas
mov
ret
and
jecxz
sbb
jg
rcll
mov
test
and
pop
out
enter
popa
sbb
mov
cmp
lods
lea
out
push
in
sbb
mov
mov
and
pop
int3
mov
sti
mov
jno
adc
lret
out
push
xor
adc
push
pop
mov
and
adc
test
cmp
dec
repnz
enter
leave
xchg
push
dec
js
inc
aam
or
adc
out
cmp
idivl
rclb
pop
xchg
cmc
fcoms
xor
push
or
into
fdivrs
ret
sub
pop
cmp
add
es
jg
xor
xchg
sti
neg
rolb
clc
clc
push
or
push
es
add
xor
or
ljmp
test
jmp
outsl
popa
lds
pop
jnp
xchg
push
push
mov
jle
stos
lods
loop
xlat
inc
lods
cld
call
push
pop
rclb
stos
xlat
call
mov
nop
pop
cmp
dec
sub
jg
inc
in
cli
enter
mov
repnz
test
push
mov
les
xchg
scas
in
outsb
mov
lds
mov
push
or
mov
rcll
jno
out
sbb
movsb
das
stc
push
add
mov
mov
int3
outsl
pop
xchg
xor
lret
sub
call
fwait
in
dec
fsubl
pop
das
push
sbb
mov
fwait
mov
mov
push
imul
test
jecxz
scas
and
mov
arpl
lock
mov
inc
push
adc
fisubrs
xor
test
fidivrs
xor
ja
daa
xor
roll
int3
add
sbb
stos
cmp
and
rorl
jno
xlat
xor
je
or
mov
arpl
scas
cmp
xor
add
outsl
popa
daa
sbb
cmp
push
lret
jg
jg
int
xchg
mov
movsl
jmp
nop
std
cwtl
loope
push
ja
or
nop
subb
popa
movsb
add
imul
pop
mov
shll
cli
jbe
inc
sbb
mov
xor
lret
into
sbb
loope
mov
xor
fwait
xor
ja
stos
lods
stc
out
or
sub
subl
sub
adc
or
sub
adc
fisubl
pop
xchg
xchg
pop
mov
pop
mov
cmpsl
mov
xchg
xor
je
adc
lret
push
sarb
sub
push
mov
mov
dec
sarl
dec
outsb
dec
out
js
jp
xchg
dec
fidivrs
add
popa
addb
dec
pop
inc
popf
cmp
sub
push
lock
adc
dec
fidivrl
into
ss
or
out
stc
nop
and
fst
in
inc
fsubrs
jg
xchg
cmp
fstpl
and
sub
outsl
pop
jge
jns
pop
and
xchg
pop
push
enter
aas
testl
pop
in
lods
jg
nop
cmp
cmp
out
cmovl
loope
xor
pushf
rorb
adc
mov
adc
mov
outsl
rcll
jp
sarl
inc
or
sbb
ret
sbb
push
and
jp
ja
mov
add
in
push
push
test
out
pop
fistl
adc
and
sbb
xchg
inc
aas
out
adc
addb
pop
popf
inc
out
inc
push
dec
adc
call
mov
pop
push
andb
cmc
push
shr
push
lret
mov
or
dec
and
js
daa
sbb
push
stc
adc
xchg
jae
ds
xchg
add
lock
lock
jl
cmc
and
lds
or
aad
loope
sbb
pop
imul
and
adc
xor
daa
push
adc
mov
xor
cs
shll
push
scas
and
and
shrb
es
add
pop
mov
cmpsb
xchg
subl
jae
jo
jns
shlb
roll
sbb
out
push
sti
ljmp
imul
xor
in
xchg
mov
mov
mov
mov
or
lods
cmpsl
inc
cld
in
shr
add
pminsw
cmp
jbe
pop
cmp
push
xchg
es
mov
xchg
cmpsb
fwait
push
add
int3
inc
stc
ds
sbb
insb
xor
or
test
dec
and
add
mov
ror
jns,pn
into
xor
cmp
jg
clc
out
and
cmp
dec
repz
or
jb
dec
mov
push
rcll
xor
out
mov
cwtl
add
or
add
fidivrl
imul
sbb
data16
mov
dec
outsb
adc
data16
clc
repz
xor
push
cs
sub
jp
sub
mov
je
lret
or
notl
sar
pushf
sub
bound
aam
dec
or
cmpsb
mov
pop
cmp
cmc
jb
push
shlb
sbb
loope
int
out
mov
gs
or
in
sub
sar
lods
cld
adc
xor
lret
scas
int
xchg
sub
add
push
stc
adc
insl
push
adc
or
fadds
fimull
inc
les
dec
test
stos
std
mov
or
mov
inc
lret
test
je
icebp
es
nop
mov
in
dec
cmp
pop
stos
lods
in
xchg
rclb
sbb
popf
cmovbe
jg
add
enter
inc
dec
andl
push
xor
ja
sbb
aaa
mov
iret
cs
jns
daa
aam
and
xor
pop
inc
cs
ja
xchg
push
cmp
sar
mov
outsl
aam
sbb
inc
mov
mov
mov
xor
cmpl
cli
cld
xlat
push
mov
and
into
movsl
subl
lods
imul
push
loope
scas
mov
je
popf
cmpsl
mov
cmp
aaa
cld
cmp
cld
mov
add
cs
inc
addr16
stc
mov
mov
clc
push
sub
mov
pop
xor
leave
jg
shlb
fdivl
jb
je
outsl
mov
cmpsb
lret
aam
clc
cwtl
fwait
jno
xor
cld
dec
inc
xchg
insb
pop
cltd
lock
sahf
dec
pusha
xor
cmp
pusha
xchg
adc
int
fsubrp
pop
insl
cli
divb
std
mov
add
mov
push
sub
mov
xor
das
adc
cwtl
and
mov
dec
xchg
sub
je
sbb
mov
clc
call
inc
dec
in
cmpb
cs
gs
dec
mov
xchg
jle
mov
mov
addr16
pop
lds
cmp
add
mov
nop
jo
sbb
shrb
jnp
les
pop
and
xchg
jb
cmp
pop
ret
imul
adc
cltd
or
pushf
xor
xor
and
push
inc
cmp
jp
ljmp
ficoms
dec
pop
pushf
push
mov
shll
in
mov
jl
aas
push
xchg
insl
mov
mov
inc
push
sub
pop
jle
pop
test
push
cmp
leave
mov
into
push
push
data16
jnp
sub
pop
pop
or
jp
xchg
adc
scas
cmp
fsts
repnz
inc
xchg
sbb
jmp
xchg
cmp
add
shr
jmp
test
mov
cmp
bound
sub
outsb
mov
dec
mov
cmp
inc
fcoms
es
sbb
fwait
or
loop
inc
jo
popa
cmp
mov
push
addr16
inc
rcrb
loopne
cltd
je
adcb
aam
adc
mov
mov
jmp
pop
jge
stc
into
imul
scas
mov
push
cmpsl
xor
push
inc
flds
loopne
mov
bound
and
aaa
mov
lret
or
cltd
insl
fisubrs
mov
push
mov
mov
out
stos
add
xchg
ljmp
pop
xlat
sbb
imulb
fmuls
popa
mov
adc
mov
sti
and
jne
add
out
insl
sbb
packssdw
mov
repnz
arpl
or
ret
into
xor
adc
ljmp
xor
pop
and
stos
mov
pop
and
popf
sbb
inc
stc
cltd
outsb
int
jg
into
sub
xchg
pop
cmpsl
andl
cmpsb
test
xchg
cli
in
js
jae
push
pop
push
cmp
push
shrb
out
repz
jp
pop
iret
in
test
xor
pop
sub
add
inc
xchg
stos
inc
movsl
mov
push
dec
aaa
testb
sbb
jbe
imul
sbb
jl
push
jo
mov
jae
push
stos
dec
popa
call
pop
pop
pop
mov
jecxz
mov
pop
fcomps
push
mov
jb
popf
in
sbb
lret
mov
add
mov
out
pop
fstpt
mov
arpl
scas
in
sub
mov
shll
adc
loope
pop
pop
adc
outsb
xchg
cwtl
outsl
push
inc
pop
jae
movsl
mov
daa
sub
hlt
xor
jno
icebp
call
xchg
movsl
cmp
mov
xchg
mov
lea
fstl
cmp
and
arpl
inc
mov
repz
mov
sar
xor
jmp
fdivs
or
inc
ss
jmp
int
popf
imul
or
sub
push
push
push
and
mov
mov
cwtl
out
xchg
repz
adc
roll
repz
les
xor
pop
and
cltd
or
pop
or
jmp
push
movsb
push
sub
push
mov
sbb
sarl
int3
fcoms
push
sarb
mov
dec
jo
ss
ss
jg
fwait
out
add
aas
adc
call
sub
iret
rorl
jo
jno
mov
roll
stos
xlat
sub
or
setl
cld
jno
les
in
mov
popf
or
lods
jnp
cld
lret
cwtl
addl
jmp
adc
adc
into
jb
mov
pop
jl
lods
jno
mov
mov
lahf
push
push
sub
fs
movsl
aad
loop
lcall
icebp
out
jo
add
mov
movups
and
add
test
xchg
pop
add
cs
enter
test
pop
fmull
hlt
pop
xchg
pop
test
xor
inc
jge
and
inc
out
es
or
je
and
and
gs
insl
sbb
fbld
pusha
push
cmp
test
and
jge
andl
pop
or
mov
iret
mov
incb
shrl
inc
push
xor
mov
sbb
mov
dec
mov
mov
xor
inc
sahf
inc
insl
scas
ds
int
popf
jne
stos
jl
and
xor
push
arpl
fdivs
sbb
in
loope
dec
adc
leave
das
xchg
fldpi
mov
enter
jmp
in
loope
cltd
enter
push
sub
mov
mul
xor
mov
add
cmp
dec
fwait
push
push
test
sbb
in
inc
lock
adc
mov
and
pop
mov
out
es
nop
jb
mov
add
add
clc
test
push
fldt
inc
and
mov
push
sub
cld
cmc
jb
es
pop
scas
and
inc
lret
adc
lahf
in
mov
inc
das
xchg
notb
pusha
mov
mov
into
test
inc
sub
adc
addr16
mov
jbe
in
scas
sarb
and
fildl
sub
dec
or
add
sub
or
scas
leave
ljmp
sti
les
add
mov
dec
scas
adc
jae
insb
mov
or
sbb
adc
pop
orl
mov
pause
decl
je
sub
mov
xor
inc
aad
cmp
jns
ud0
mov
lret
iret
pusha
repz
fisubrl
mov
add
iret
inc
push
push
mov
or
lods
xchg
add
dec
lods
mov
clc
cli
sbb
jge
inc
push
jl
or
pop
fcmovne
shrl
jbe
or
lcall
out
jae
and
das
movsb
inc
add
xor
pushl
jno
mov
orb
push
lods
imul
adc
and
shrl
jg
mov
pop
adc
notb
adc
adc
xchg
dec
int
sbbl
out
daa
cmc
cltd
les
pop
subb
xchg
ss
push
mov
adc
es
push
cmp
adc
test
xor
mov
push
iret
test
sub
adc
rcll
lods
stos
adc
fdivl
mov
call
and
pop
iret
adc
mov
adcb
mov
repnz
stc
stc
lcall
stos
sti
enter
pop
push
add
sbb
jne
mov
xor
aad
test
push
outsb
sub
lret
push
popa
cmpsb
out
ljmp
push
shll
test
nop
popf
lods
divl
mov
push
push
gs
fnstenv
mov
add
imul
push
mov
inc
lods
push
andb
sub
inc
and
dec
mov
mov
out
and
roll
and
dec
mov
adc
mov
push
in
aas
add
lahf
sbbl
mov
pop
dec
cld
pop
mov
aaa
addr16
or
lea
jae
pop
inc
inc
sbb
adc
or
rclb
mov
push
push
loopne
sub
xchg
imul
stc
lahf
gs
test
test
mov
sbb
jne
lods
rcrb
xchg
push
scas
adc
imul
and
xor
push
mov
pushw
sbb
mov
mov
and
addr16
mov
loopne
xchg
mov
dec
jb
sbb
xchg
push
fs
pop
push
outsl
jae
mov
gs
inc
into
aad
add
jl
cld
lods
lahf
or
sub
fcom
out
mov
or
int3
jge
push
xor
repz
mov
mov
cmp
sbb
insb
push
xchg
fcoms
pop
cwtl
xor
lahf
hlt
aaa
mov
adc
out
adcl
sarb
xchg
fbstp
ds
xchg
or
mov
pop
cld
arpl
pop
mov
push
das
dec
add
mov
daa
jmp
fisubrl
das
xchg
pusha
in
out
jbe
sub
sub
femms
sbb
fistpll
stos
mov
add
fmuls
cwtl
fstpt
fisubl
test
sbb
mov
ljmp
ja
mov
fsubrl
cmpsl
loope
sbb
push
inc
pop
cmpsb
pop
sbb
pop
movsb
xor
or
je
xor
jg
iret
jbe
jle
add
out
popa
jg
adc
lret
sub
lods
sbb
mov
cmp
sbb
rcrb
mov
cmc
cwtl
mov
popa
fsubrl
test
sub
shlb
repnz
inc
int3
or
pop
lret
jle
lock
pop
andb
test
xchg
fwait
or
or
jmp
into
je
jl
cmp
xchg
popa
dec
cltd
ja
ds
outsl
sti
jmp
not
sbb
lods
rol
jb
fists
jnp
ljmp
jbe
shl
mov
popf
repz
stos
arpl
and
inc
je
mov
andl
aas
fbstp
cwtl
dec
mov
mov
jg
pusha
mov
je
cmc
dec
dec
sti
jo
test
mov
cmpsl
sbb
stc
in
xchg
imul
ljmp
scas
test
add
jmp
push
lret
sub
in
add
nopl
cmp
push
stc
or
andl
loop
cmp
dec
das
call
cmp
jle
mov
mull
inc
mov
jb
repnz
mov
fimull
jge
xchg
xor
fcomip
in
sbb
ja
ret
pop
inc
pop
add
lahf
jmp
mov
push
lds
sbb
pop
mov
dec
add
push
dec
sub
jmp
out
cmpsl
call
addr16
xorb
out
iret
jp
push
inc
push
aaa
mov
inc
cmp
loop
int3
test
xchg
push
sbb
pop
cmc
outsb
enter
test
or
xchg
mov
into
sbb
in
inc
xor
in
ss
sbb
pusha
adc
inc
out
jbe
xchg
int3
add
andl
jle
fcoml
push
mov
les
and
jbe
psubd
arpl
inc
jg
cmpsb
pop
icebp
testb
test
xchg
adc
loopne
pushl
mov
push
inc
stos
shrd
jae
or
xchg
inc
jb
push
out
dec
popa
pop
add
repnz
movsb
cmp
imul
dec
movsb
mov
sar
out
mov
fcoml
in
push
mov
mov
arpl
xor
cwtl
mov
rolb
add
addr16
movups
cli
and
fmulp
in
jnp
dec
clts
int
mov
and
repnz
repz
adc
aam
cvtps2pi
jo
test
movsb
sbb
insl
rcr
cltd
adc
cmp
push
push
lods
inc
gs
push
dec
fs
jecxz
and
xor
bound
mov
dec
push
cld
out
adc
notb
pop
add
push
lret
mov
sub
aam
jne
and
add
int3
or
pushf
bound
sarl
sbb
add
xorb
insb
out
hlt
adc
mov
jp
cmp
add
scas
adc
mov
jb
mov
ror
sbb
push
lods
aam
dec
add
insb
xor
adcb
mov
aad
sbb
dec
cmp
insb
or
push
cmpsl
xchg
in
stos
std
dec
fiadds
in
sub
jp
in
orl
xchg
sub
xor
sti
test
out
int3
mov
and
inc
mov
pop
out
inc
adc
jne
sub
push
out
dec
test
lret
shll
out
test
jge
pop
push
leave
jecxz
lock
xchg
loope
dec
and
loopne
cmp
mov
mov
jnp
push
pop
pushf
pushf
jb
mov
sbb
dec
lret
pop
insb
imul
pop
mov
push
les
xchg
cs
xchg
xchg
jo
xor
lock
xor
fmull
insl
movb
pop
xor
mov
stos
arpl
test
loopne
movsb
sub
stc
xchg
inc
cli
or
lods
testl
mov
lock
xchg
lea
stos
pusha
in
jno
leave
push
dec
adc
dec
push
pusha
rcl
sub
xor
push
scas
cmp
inc
ret
mov
in
lds
jae
lcall
icebp
test
stos
cld
adc
jns
dec
fcom
xor
pop
les
std
in
lret
movsl
mov
aas
add
push
dec
jg
push
adc
std
setne
int3
lcall
mov
subl
in
rol
sub
out
push
repz
xor
sub
xor
loope
xchg
pop
inc
add
hlt
les
push
scas
and
in
stc
test
shrb
ret
aas
jge
xchg
cmp
inc
sub
icebp
stos
cmp
sub
pop
insl
mov
mov
xor
repz
fstps
mov
push
imul
icebp
inc
mov
push
xor
add
and
xchg
jl
mov
ljmp
cwtl
sti
mov
add
dec
mov
sbb
cmpb
and
sbb
sub
hlt
imul
lahf
xchg
ret
nop
mov
fildl
sbb
jl
dec
inc
mov
loope
hlt
mov
or
mov
out
sbb
test
xchg
mov
jg
mov
push
or
sarl
pusha
aam
mov
lahf
xchg
fldenv
mov
stos
adc
jne
gs
gs
mov
or
outsb
jecxz
push
dec
fwait
add
pushf
add
test
adc
and
lock
fcomip
pop
ljmp
cld
icebp
xchg
pushf
aad
or
mov
ret
jb
adc
pop
jns
adc
pop
stos
jmp
daa
push
mov
xchg
data16
dec
clc
or
cmp
inc
call
aas
pop
mov
sbb
xor
pop
leave
shll
fcoml
icebp
mov
mov
shrb
xor
insb
pop
adc
pusha
mov
jne
scas
sub
test
aas
sbb
xor
adc
jp
push
sub
rclb
inc
xor
mov
imul
push
lods
adc
pop
mov
aas
xchg
push
loop
mov
xor
xchg
and
pop
and
mov
jns
mov
dec
cmpsl
push
je
pop
add
orl
sub
fdivr
jmp
mov
push
je
jne
shrb
fisttpl
in
xchg
sub
lock
pop
sub
jecxz
xchg
mov
and
mov
jmp
dec
adc
dec
xchg
pop
cmp
iret
negb
outsl
lret
stc
dec
arpl
inc
cmc
pushf
dec
rcll
jle
into
fwait
ja
adc
mov
mov
out
cwtl
mov
in
inc
jo
inc
data16
in
push
cmp
leave
add
sub
jge
mov
je
test
fimull
cmpsb
scas
dec
dec
xchg
mov
lret
in
cmpsl
push
or
add
sarl
jo
sub
cmp
cmp
jl
repz
jmp
add
pop
mov
dec
js
call
shll
idivl
shlb
jns
push
test
dec
mov
dec
cmp
xor
inc
mov
ret
jbe
mov
insb
mov
jbe
fstps
in
testb
nop
push
out
mov
pop
je
push
in
lahf
stos
pop
push
sub
clc
adc
hlt
bound
fstl
popa
outsb
mov
in
pop
inc
pop
mov
xchg
pop
and
call
cmp
xchg
ja
clc
and
pop
outsb
adc
push
mov
push
cltd
mov
fmull
or
enter
cmc
pop
fldt
pop
into
pop
mov
push
dec
testl
iret
push
xadd
lea
xchg
jge
xor
js
or
ret
xor
xor
mov
lret
or
mov
lock
jge
dec
push
sub
addr16
pop
shrl
or
jbe
cltd
and
xchg
xchg
mov
mov
add
push
mov
mov
xor
cmp
and
out
out
push
lret
dec
xor
adc
jno
imulb
and
scas
aam
pusha
pushf
add
sub
push
stc
gs
ret
adc
sub
and
mov
stos
sahf
clc
push
pushf
push
jge
in
lods
mov
in
aaa
mov
lret
dec
push
or
mov
dec
dec
xor
movsb
stos
mov
cmp
jo
das
push
push
xchg
jle
sbb
out
mov
inc
lods
scas
jbe
ljmp
sahf
pop
insb
push
repnz
dec
mov
mov
mov
movsb
repnz
dec
inc
push
jne
js
ljmp
es
mov
subl
mov
loopne
andb
xchg
int3
imull
ret
add
add
jmp
daa
shrb
imul
gs
pop
outsl
xor
push
je
sbb
lret
aam
mov
lret
push
ja
cmp
repnz
push
mov
aas
mov
mov
and
scas
fists
mov
aad
jecxz
sbb
out
hlt
jecxz
mov
mov
aas
adc
inc
out
xlat
hlt
add
cmp
ljmp
call
ljmp
xorl
aam
push
leave
test
xchg
notb
rorb
or
xor
xchg
notl
sbb
or
dec
js
shll
xor
data16
test
mov
ror
icebp
mov
popf
sbb
daa
cld
push
inc
ds
or
add
int
add
es
es
frstor
mov
jp
lret
fidivs
inc
cmp
subb
pop
pushf
and
insl
jge
mov
stos
out
iret
cmp
cmp
insl
jnp
lcall
hlt
popf
xor
filds
dec
jge
ret
stos
loop
cmp
or
ja
call
hlt
push
and
rclb
jg
sbb
les
cmp
orl
mov
popa
xchg
push
outsb
adc
mov
subb
mov
push
loope
addr16
push
dec
loope
rcrl
xchg
and
jle
adc
jns
test
data16
xchg
das
imul
push
jo
add
fsubrs
test
jecxz
daa
inc
xor
pop
stos
bound
xchg
ss
xor
stos
push
pop
push
scas
out
add
gs
clc
ds
hlt
xor
add
in
pop
movsb
adc
jae
lcall
mov
test
mov
lret
xchg
jb
mov
inc
das
loopne
pusha
in
arpl
sahf
das
scas
es
pop
mov
mov
jecxz
popf
lock
sbb
pop
mov
out
pop
push
lods
mov
fwait
push
fiaddl
mov
daa
xor
sbb
neg
iret
xor
mov
loop
xchg
sub
lods
xor
das
das
xor
mov
subl
cmp
rolb
shll
or
mov
jo
sbb
or
shrl
sbb
inc
xchg
jno
cmp
int
aad
push
adc
movsb
int
imul
adc
xchg
jnp
leave
and
pop
test
adc
cwtl
add
aas
repz
push
out
lock
jns
xor
or
loop
xor
dec
mov
dec
push
pop
lea
cs
or
lods
movsl
mov
arpl
or
adc
push
icebp
dec
cmp
jp
aas
xorb
sub
in
inc
fldenv
and
js
shlb
mov
das
inc
push
sbb
mov
mov
push
in
mov
inc
in
roll
hlt
mov
rol
mov
mov
xor
fsub
sti
psubusb
fildl
test
mov
add
mov
mov
addb
rorb
add
fsubrl
aaa
imul
or
mov
fisttps
orb
lea
subb
add
mov
mov
xor
lret
mov
shlb
or
sbbb
sub
mov
xchg
bound
mov
push
test
cltd
xorl
popf
mov
out
mov
mov
mov
sbb
sbb
out
jge
nop
sbb
stos
jmp
rcr
daa
jmp
lcall
movsb
stos
aaa
cltd
or
or
add
out
mov
js
mov
xor
add
xor
fs
inc
cli
mov
in
mov
stc
fisubs
xchg
sub
rcll
mov
stos
jmp
xchg
or
push
cld
movsb
int3
sbbl
subl
mov
out
pop
sbb
mov
dec
push
xchg
mov
mov
dec
pop
add
int
das
out
in
xor
sub
xchg
jle
pushl
mov
mov
rcll
in
inc
push
sbb
push
lret
add
fisubl
cwtl
xchg
cli
mov
fs
mov
adc
fimuls
pop
mov
hlt
test
pop
xchg
bound
jg
inc
addps
insl
add
negb
mov
cmp
imul
mov
xlat
pop
cli
cld
loopne
je
pop
push
sub
popf
out
xchg
xchg
sub
popf
add
pushf
addl
push
pop
push
xchg
lock
and
xor
fdivs
mov
out
mov
push
shr
mov
pushf
xor
xor
stos
mov
and
ds
lods
add
push
aam
xlat
enter
and
fdivrs
push
cmpsl
jne
in
cld
mov
inc
sbb
imul
and
ja
fs
rolb
cmp
fsts
in
shlb
mov
loope
out
and
xchg
mov
aas
pop
arpl
pop
aas
jg
sar
inc
jno
aam
cltd
lods
adc
add
fistl
lcall
push
push
sub
mov
push
mov
mov
imul
negb
sbb
aad
sti
or
ficoml
sti
mov
fwait
imul
cmp
lock
pop
cmc
add
jne
repz
ja
xor
add
dec
mov
push
mov
sub
fwait
addl
mov
xchg
sub
cmp
or
mov
les
pop
outsl
xorl
push
jno
push
dec
adc
pop
mov
das
xchg
adc
jl
ds
jecxz
sti
xor
test
xchg
cmc
movb
out
xor
jno
shlb
shrb
decl
leave
jle
push
es
rcr
and
shr
push
stos
in
int3
sbb
jns
pop
jmp
or
outsl
and
ret
lds
push
in
cmp
lret
add
loop
mov
xlat
imul
xchg
mov
leave
int3
rcll
inc
pop
xor
lret
cmp
out
test
mov
mov
ret
adc
push
and
lret
sub
push
fincstp
test
push
testl
jno
out
sbb
mov
adc
add
ja
int
int
cltd
shl
popa
mov
sub
mov
jb
orl
imul
in
fdivl
or
fadds
loop
stos
int3
pop
andb
mov
mov
mov
fdivs
or
inc
pop
push
mov
popf
int
call
mov
add
enter
jmp
xchg
jnp
inc
xchg
ss
aam
mov
mov
pop
mov
push
cltd
fisttpl
and
jb
in
and
sub
pop
hlt
cmpb
call
movsl
addr16
repz
or
pop
test
bt
fmull
adc
sbb
sub
ja
pop
sti
ss
das
mov
fwait
sar
leave
imul
movsl
mov
xchg
push
orb
mov
cmp
mov
repnz
dec
repnz
or
mov
cmp
lods
sbb
dec
mov
cli
or
dec
mov
js
cwtl
nop
sti
or
xchg
fwait
jg
jecxz
jo
add
or
pusha
nop
mov
sbb
sbbl
scas
pop
mov
sbb
cmp
in
jo
dec
stc
inc
jne
or
fisttpl
popf
dec
sub
es
in
mov
pop
push
inc
rcl
sub
add
out
icebp
stos
jnp
out
sbb
lahf
icebp
xor
cmp
test
cmp
fs
rcrl
pop
fiadds
mov
inc
out
cld
popa
pushfw
adc
adc
push
lea
sbb
addr16
xor
push
xchg
push
sbb
cmpsb
cmp
cmc
mov
inc
std
aam
scas
aam
jbe
into
xchg
out
inc
dec
in
adc
push
xor
dec
lds
inc
adc
inc
fldenv
inc
and
out
in
js
lds
insl
xchg
lea
fstl
inc
add
sbb
sub
nop
aam
clc
ret
ret
pop
mov
and
push
icebp
sub
addr16
fdivp
pop
xor
mov
mov
mov
ret
xchg
or
xor
out
mov
pop
ror
loope
mov
pop
outsl
dec
inc
add
inc
data16
sub
adc
fwait
add
add
sbb
push
je
stc
mov
mov
fimuls
test
lods
dec
loope
ja
push
adc
int
mov
mov
mov
adc
shlb
pop
sbbl
jnp
push
jbe
test
fdiv
clc
addr16
mov
cmc
lock
adc
dec
add
mov
pop
into
out
into
jmp
inc
sbb
cmc
cmpl
mov
bound
int
and
mov
rorl
dec
loopne
xchg
mov
scas
add
mov
xchg
dec
dec
lret
mov
pop
cs
adc
mov
cltd
lea
pop
add
jo
xchg
sahf
sbb
sarl
iret
mov
sbb
test
sub
ret
push
imul
inc
int
xor
mov
pop
js
sbb
add
stos
icebp
ret
ljmp
dec
js
js
test
pop
or
scas
xor
jns
mov
cmpsl
sti
xchg
in
notl
or
jge
in
inc
aaa
aaa
pop
icebp
adc
xchg
adc
push
or
imul
mov
out
repz
push
lods
test
ja
jg
push
fstpl
sub
push
and
loope
pushf
sub
jle
fldenv
jp
movsb
or
sbb
fdivrs
repnz
and
pop
pop
mov
xchg
hlt
inc
in
test
scas
outsb
cs
ss
out
arpl
negb
inc
pop
jnp
fsubr
xor
into
jl
ret
adc
or
cmp
shrb
dec
scas
sahf
cmpsb
ljmp
ret
dec
loopne
mov
mov
popf
sbb
out
sbb
inc
lahf
imul
jbe
xchg
mov
xchg
mull
mov
into
mov
subb
in
fstl
not
movsl
cmp
push
push
enter
jbe
nop
nop
mov
mov
mov
xor
push
in
pop
out
lcall
addr16
cli
push
shll
sbb
pop
or
stos
cmp
outsb
inc
lahf
lret
leave
sbb
ja
shll
pop
xchg
and
int
dec
leave
jmp
xor
push
jmp
push
mov
scas
cmc
mov
mov
pop
cmpsl
xor
add
xchg
in
pusha
or
xor
pop
mov
pop
repz
pop
inc
pop
adc
addr16
addr16
and
adc
sti
mov
cmp
pop
jmp
mov
dec
add
in
aas
idivb
dec
and
jb
imul
outsl
fs
es
mov
or
mov
ffree
aam
and
sbb
push
cmpsl
and
jne
dec
test
adc
mov
out
jno
mov
sub
pop
sbb
mov
mov
push
cmp
pop
out
inc
in
or
stos
adc
clc
pop
repz
je
sysenter
adc
daa
faddp
mov
out
sub
push
jp
jg
mov
pop
imul
cld
or
dec
rcrl
mov
divb
popf
icebp
dec
es
and
sub
inc
mov
pushf
mov
sarl
xlat
xchg
add
dec
xor
mov
pmullw
dec
imul
dec
stc
sar
cmp
call
outsb
jns
pop
cmpsb
test
push
popaw
or
push
cmp
and
adc
xchg
fsubrp
xchg
pop
mov
jg
cmp
jbe
out
add
fcompp
pop
stos
adc
out
lods
sub
or
mov
push
sbb
call
loop
sti
and
or
outsb
mov
rcl
pop
arpl
dec
repz
sub
and
cmc
leave
addb
aas
mov
aaa
cmp
xchg
xchg
xor
aam
out
xor
nop
test
lcall
mov
std
in
mov
fisttpl
cmc
mov
mov
pop
xchg
adc
xlat
mov
push
cmp
mov
lds
mov
xor
pop
aaa
test
cwtl
mov
mov
sub
fidivs
cmp
push
addr16
jg
loope
push
push
and
or
gs
pop
dec
push
xchg
cmpsl
inc
sbb
outsb
fldt
mov
jns
nop
cmp
adc
xchg
es
cmc
sub
pushl
cmpsb
sub
mov
mov
mov
loop
cli
and
in
fwait
pop
dec
jl
lcall
adc
pop
orb
jmp
xchg
xchg
jp
inc
push
xchg
mov
lcall
dec
adc
add
cmp
jg
xor
outsl
xchg
mov
pop
pop
outsl
pop
js
xor
inc
mov
xchg
fwait
dec
pop
add
nop
pop
dec
repz
cmp
sub
mov
imul
inc
ss
rorb
or
and
std
das
stos
sbb
cmpsb
mov
mov
sub
sbb
jl
addr16
cmp
jl
fldenv
les
mov
into
lods
imul
push
add
or
ret
aaa
das
scas
mov
and
movsb
hlt
das
aas
cltd
neg
add
pusha
mov
loope
pop
call
ror
xor
cmpsb
in
sbb
add
fwait
dec
sbb
adc
cwtl
pop
push
jae
cld
jno
imul
mov
daa
ds
sub
aad
lret
int
pop
xor
pmullw
mov
nop
filds
hlt
movsl
mov
mov
ja
adc
mov
xlat
mov
jle
xchg
adcb
test
in
cmp
mov
leave
dec
outsb
test
call
mov
push
pusha
pop
das
outsb
clc
daa
jo
test
xchg
dec
adc
nop
add
dec
rcr
and
lret
mov
sahf
les
rcrb
scas
ljmp
pop
lea
push
out
jg
shrl
xchg
fmul
out
test
scas
xor
ret
inc
mov
outsl
adc
pop
rcll
data16
rcr
incb
mov
jb
push
push
xor
loopne
rol
bound
leave
push
cmc
mov
testb
je
add
test
andl
sub
insb
or
nop
out
ret
xor
add
lcall
and
mov
or
or
adc
xorl
mov
push
xchg
movsl
inc
loope
push
sub
lods
cs
sbb
xor
in
les
jo
ret
xchg
data16
iret
mov
mov
xchg
stos
push
test
mov
mov
aaa
xchg
push
gs
xlat
stc
add
inc
xchg
or
pusha
push
fprem
pop
js
cld
ss
cmp
push
mov
fnstcw
sub
ja
movsb
and
adc
call
xchg
imul
cmpsb
cmp
cs
imul
pop
ret
shrb
cli
repz
rclb
roll
xor
mov
sti
adc
or
push
xlat
lds
mov
sti
mov
test
mov
mov
mov
jmp
dec
push
adc
jle
pop
dec
movsb
push
lods
scas
add
loop
adc
mov
sbb
sub
adc
mov
push
mov
cmpl
add
lret
aaa
out
xchg
add
pop
cmp
into
sbb
xor
lret
pop
mov
repnz
sbb
sbb
ja
and
cmpsl
int3
fdiv
jae
xchg
cli
lcall
fld
test
pusha
push
imul
add
jne
stos
test
sahf
push
test
aaa
sbb
stos
jb
mov
jle
mov
repnz
bound
jmp
mov
add
mov
mov
dec
mov
cwtl
lea
pop
pop
rol
sbb
shl
sete
sbb
xchg
xchg
push
adc
mov
icebp
sahf
mov
mov
lcall
lret
inc
lods
mov
and
dec
pop
push
sub
or
dec
out
not
nop
and
or
sub
gs
jbe
inc
xor
xchg
mov
sub
cmp
pop
pop
adc
dec
add
lahf
add
and
xor
lods
jmp
aas
arpl
ret
push
fwait
lds
sarl
cmp
subb
jle
int3
xchg
or
setb
inc
mov
scas
pop
cmpsb
jae,pn
mov
jne
rclb
movsb
test
decl
mov
cmp
jp
cmp
xchg
imul
aad
sti
popf
sub
test
stos
loopne
dec
shll
lcall
ljmp
pop
and
mov
cli
inc
adc
aas
lret
mov
adc
mov
roll
subl
add
lock
scas
and
and
mov
add
aad
push
or
push
push
test
sbb
pop
out
stos
aaa
sbb
loop
adc
mov
jb
cmc
cmp
or
rolb
xorb
dec
mov
lahf
shr
test
pop
mov
or
push
data16
pop
xor
ret
push
push
iret
pop
add
fiaddl
rolb
fwait
fwait
insl
ss
jb
mov
push
and
xor
or
imulb
sti
fcmovne
push
push
lds
xchg
pop
call
cmp
or
fidivs
addb
pushl
xlat
roll
je
push
aam
xor
push
xor
jae
icebp
int3
pop
and
mov
sbb
outsb
mov
and
or
adc
mov
sub
fs
jle
jbe
jg
jne
lahf
cmc
and
shlb
xor
jp
mov
jbe
out
fisttpll
je
jge
cmp
cwtl
add
jg
popf
inc
lea
dec
shll
pop
mov
jge
ja
mov
sub
in
call
clc
adc
xor
or
sti
push
mov
les
loop
in
dec
push
jp
fs
xchg
rorb
fs
cs
into
stos
icebp
fildl
mov
movsb
sbb
push
sub
int
negb
push
cmp
xor
rorb
xor
mov
gs
mov
and
jl
dec
popa
xor
mov
pop
cmp
push
pop
aam
scas
shll
sahf
lret
aam
adc
iret
sbb
call
fists
es
into
dec
pop
test
push
inc
rclb
jle
ds
mov
xor
neg
out
inc
ja
inc
lret
lods
ret
movsl
mov
fdivrl
loop
push
pushf
push
aad
dec
inc
cmp
sbbb
jg
jle
cmpxchg
fcoml
cld
inc
push
loop
dec
pop
inc
xor
cmp
pusha
or
fimuls
ficomps
div
lret
out
pushf
mov
movsl
sbb
mov
mov
or
push
add
push
and
lods
add
add
repnz
xor
xor
movsb
mov
pop
pop
mov
in
lret
mov
sub
movsl
xchg
and
dec
js
aam
rorl
mov
xchg
or
lret
rcrl
sarl
and
add
or
js
fcoml
adc
fcomps
cmpsl
stos
and
add
je
mov
add
cmp
stos
mov
and
xchg
mov
push
bound
xchg
rclb
scas
lcall
mov
pop
cmp
dec
scas
lret
push
dec
pop
lods
bound
xchg
sbb
xor
mov
or
movb
stos
fdivr
imul
jne
insb
inc
and
cmpsl
test
int3
lock
pop
adc
fs
xor
imul
and
and
imul
mov
cmpb
test
pop
das
cmp
fwait
add
in
jl
push
ret
and
inc
cmpsl
shlb
jcxz
xor
sarb
cltd
icebp
js
cmc
cmc
xchg
sbb
arpl
sub
sbb
pcmpeqb
lds
xchg
testl
mov
movsl
scas
loopne
add
adc
aam
xchg
std
sarl
xor
jno
sti
jo
cmp
cmovb
aas
in
or
icebp
adc
loop
xchg
push
leave
pop
cmpsl
xlat
push
and
test
cmc
mov
push
pop
iret
push
cltd
fs
mov
fs
pushf
cmp
pop
test
popa
lea
aas
and
inc
xchg
jg
roll
mov
jmp
cmp
or
fwait
test
mov
aam
cmp
cmp
and
jecxz
cmp
jae
dec
xor
mov
or
and
lock
adc
stos
repnz
or
sbb
out
mov
push
lret
cmp
mov
jle
stos
out
adc
sub
pop
lock
or
push
insl
adc
or
cmp
shlb
loope
clc
imul
push
lahf
xor
jb
pop
aaa
and
lahf
cmp
xchg
xchg
andl
dec
call
sbb
leave
jle
jge
jecxz
stos
fneni(8087
scas
or
ds
imull
add
jns
inc
mov
mov
or
mov
dec
and
jecxz
xchg
push
lcall
shl
or
imul
pop
mov
sbb
adc
push
popf
outsb
mov
dec
jb
xchg
sub
cld
sub
shr
fcmovb
mov
test
and
test
call
insb
insb
bound
negl
je
jbe
rcll
xchg
inc
sbb
stos
xor
mov
sahf
push
add
inc
popf
addr16
hlt
inc
sub
int
sahf
lret
adc
mov
xor
es
cmc
in
sbb
pop
sub
dec
ss
daa
or
out
cmp
xorl
outsl
fcomip
xor
mov
enter
dec
jmp
sub
inc
mov
call
cmp
or
mov
adc
inc
int
out
cmpb
test
pusha
enter
adc
frstor
inc
lret
std
jns
in
nop
mov
decl
and
cmp
insb
loopne
fldcw
enter
push
inc
jnp
loop
xlat
add
popf
pop
inc
mov
movsl
lods
push
leave
mov
push
and
add
mov
enter
jp
add
cmc
stos
loope
stos
orl
andl
mov
imul
shr
xlat
add
push
or
mov
dec
pusha
cltd
mov
orl
test
iret
lea
push
mov
jns
xchg
add
adc
mov
or
jecxz
loopne
mov
outsb
sarb
mov
and
xchg
rcrl
scas
cmp
cmp
dec
iret
xor
int3
push
scas
mov
loop
test
aad
cmp
mov
mov
mov
add
outsl
icebp
xchg
ret
vmwrite
or
mov
sbb
lret
fwait
outsl
lock
sub
sub
sub
in
and
pushl
dec
in
aaa
js
or
test
mov
jmp
jns
xchg
es
or
ljmp
and
lods
adc
jmp
ds
pushf
stos
push
inc
xchg
mov
adc
lahf
sub
inc
jbe
in
sarl
lock
insb
xorl
pop
fadds
in
jp
adc
inc
scas
push
data16
pop
std
stc
dec
or
push
bound
mov
xor
lcall
in
sub
nop
lock
loop
daa
dec
xor
das
cltd
cs
dec
sbbl
xor
stos
mov
jp
repz
inc
shr
aaa
mov
sub
dec
js
mov
cltd
xor
cld
cmp
mov
inc
into
pop
dec
int3
inc
mov
push
push
mov
mov
int3
and
mov
out
mov
add
mov
cmp
cmp
aaa
add
rcrl
jnp
aaa
outsb
pop
fs
sbb
xchg
adc
mov
adc
or
push
and
xor
arpl
push
loop
and
mov
and
sbb
mov
and
add
and
inc
xchg
dec
int
daa
push
int3
pushf
mov
leave
fs
in
lcall
push
outsb
mov
jle
cltd
int
push
lret
popa
adc
xchg
lret
mov
ficoms
inc
cmp
or
data16
loope
cmpsl
sbb
sahf
pop
mov
inc
inc
and
xor
scas
je
filds
ljmp
icebp
arpl
dec
std
xchg
pop
pushf
clc
je
mov
mov
outsl
jle
fists
mov
pop
cmpsb
enter
xlat
inc
pop
mov
loope
dec
sbb
repnz
ss
out
dec
push
fsub
dec
bound
or
push
mov
push
dec
mov
xor
xchg
pop
pop
mov
pop
out
stc
jecxz
or
lods
imul
out
xchg
mov
add
inc
add
inc
or
outsl
pusha
xchg
les
mov
jnp
xchg
cmpsl
dec
sarl
mov
push
mov
cmpsb
xor
dec
jb
mov
mov
jns
jge
mov
test
or
or
cmc
or
clc
imul
adc
std
and
js
imul
xor
mov
std
add
xor
mov
and
lods
lcall
xchg
iret
test
inc
loope
push
out
jbe
cmp
mov
loopne
cmp
and
jnp
sub
out
jle
in
xchg
fisttpl
lock
out
push
and
leave
adc
cli
scas
les
cmp
xor
daa
pop
dec
jecxz
lock
sbb
pusha
shl
fistpll
test
mov
pop
stos
sbbl
enter
dec
movb
inc
push
push
sbb
jb
pop
or
pop
xor
pop
pusha
jge
sub
test
push
pop
dec
loop
jle
mov
ret
sbb
sub
pop
lcall
pop
inc
and
inc
add
outsl
jle
xor
aaa
sub
mov
mov
cmpl
out
loope
or
adc
xor
and
aam
aas
mov
dec
lods
lods
cld
push
std
and
inc
incl
pop
add
repnz
loopne
mov
push
inc
mov
mov
fidivs
bound
pop
sahf
rcll
fidivrl
xorb
xchg
outsl
pop
adc
pop
mov
push
jb
aam
cmpb
sub
fistpll
into
sbb
push
mov
cmp
push
loop
mov
jne
or
lock
pop
insl
mov
stos
and
push
jmp
movsl
jl
add
pop
mov
outsl
mov
cmp
es
cmp
outsb
mov
xor
dec
call
xchg
pop
jecxz
xchg
push
out
adc
or
sub
push
je
scas
fwait
dec
into
ret
inc
pop
scas
pop
in
fdivrp
popl
add
int3
call
imull
jns
cs
dec
cs
out
dec
aam
mov
ja
and
xchg
mov
enter
jge
push
add
dec
inc
in
mov
cltd
leave
mov
jle
maskmovq
mov
or
nop
scas
ret
jle
aad
xchg
xor
fldl
dec
das
inc
adc
lahf
insb
push
lds
lods
out
push
das
leave
add
jp
lcall
outsl
lret
mov
ds
jmp
scas
xor
in
xor
mov
mov
aaa
xchg
xlat
mov
in
fsincos
dec
mov
dec
fcmovnu
xchg
xchg
or
rcll
fistps
mov
adcl
add
imul
cmp
mov
push
orl
ja
fscale
mov
xchg
call
cmp
jae
out
mov
insl
ljmp
jno
stos
and
adc
test
rolb
sub
rclb
pop
cmp
xor
outsl
jmp
loop
adc
test
mov
mov
fadd
mov
popf
icebp
push
dec
push
mov
mov
push
jnp
mov
outsl
or
pop
and
lahf
rcl
dec
pop
cmpsl
cs
frstor
jne
ljmp
fidivrl
movsl
adc
sub
and
jl
and
insl
enter
xor
mov
xor
jle
fs
jp
mov
or
cmp
shll
loop
ret
mov
jns
fdiv
mov
mov
andb
mov
fwait
ja
loop
pop
dec
shrl
out
cwtl
sub
jne
mov
fiadds
push
and
cmp
mov
mov
xor
scas
fwait
jle
sub
inc
mov
adc
mov
test
xor
jp
hlt
mov
mov
mov
das
xor
xor
mov
out
jns
scas
mov
sbb
bound
sub
dec
clc
ds
cmc
in
push
mov
lahf
les
jne
fsubrl
pop
addl
xchg
fsts
xor
shrb
outsb
pop
fstpt
sbb
lods
xor
or
jne
xchg
andl
push
shll
inc
aad
jg
inc
in
fcom
shl
and
sti
mov
test
imul
fistpll
addb
jo
mov
xchg
movsl
dec
shrb
lds
mov
ja
loop
cld
arpl
pop
dec
fmull
xor
mov
cmpsb
lea
scas
mov
or
mov
or
stc
cmp
cmp
cli
lcall
idivl
jo
lahf
rcr
stc
add
and
call
xchg
mov
data16
sbb
pop
and
mov
sub
push
inc
out
movsl
cmp
add
cmc
lcall
inc
imul
je
jae
sbb
in
inc
xor
std
cmpsl
mov
sub
and
hlt
xchg
std
mov
faddl
inc
rorl
test
loop
jb
outsl
mov
push
addl
mov
lfs
popa
jmp
test
push
clc
fcoml
push
test
pop
pop
jle
xor
pusha
cwtl
int
out
lock
cltd
add
pop
ljmp
push
jo
fisttps
and
rorl
sub
sti
les
cmpb
in
mov
dec
jns
sbb
in
icebp
fwait
push
rorl
dec
sahf
lret
movsb
clc
cmpl
ljmp
and
jle
movsb
sub
or
bound
lods
sarl
scas
sub
add
adc
lock
out
lds
mov
outsl
mov
out
dec
push
divb
mov
xchg
cmpsb
dec
add
and
mov
mov
jecxz
pusha
cwtl
mov
jmp
ljmp
and
add
mov
repz
push
jp
jnp
cmp
xchg
cwtl
js
xlat
mov
pushf
imul
adc
je
push
imul
arpl
push
in
adc
mov
sub
pushf
pop
cmp
aaa
cmp
sbb
inc
jmp
and
or
xchg
mov
jo
pop
and
fwait
out
loopne
iret
dec
dec
das
adc
popf
sti
xor
bnd
xchg
xchg
scas
mov
testl
xchg
jle
mov
mov
mov
and
xor
stos
jae
jl
push
mov
pushf
mov
fstpt
lea
cmp
mov
scas
cld
jl
ret
pushf
and
push
imul
dec
add
in
inc
sbb
gs
xchg
cmp
sub
jno
jae
popa
cltd
loopne
mov
mov
jae
data16
mov
or
lea
cltd
pop
test
stos
lock
sahf
xchg
jae
dec
cwtl
mov
test
clc
xchg
or
and
hlt
call
push
std
mov
jg
inc
jno,pt
pop
lret
or
lea
jp
std
pop
ret
jg
stc
movsl
jge
gs
fcoms
bound
jnp
sub
lcall
repnz
ja,pt
int3
cli
xchg
mov
pop
xchg
pop
pop
mov
and
dec
inc
mov
push
add
mov
sti
test
gs
sub
push
add
jecxz
clc
xchg
insl
in
loopne
aas
inc
jne
sub
push
cwtl
cli
or
mov
daa
mov
mov
adc
mov
scas
imul
xchg
popf
arpl
sbb
jns
imul
jge
outsb
rorl
mov
imul
push
mov
pop
pop
push
push
sbb
jnp
mov
jle
imul
push
add
push
daa
std
mov
or
sub
iret
push
jle
imull
mov
push
mov
into
bnd
arpl
scas
adc
leave
pop
movsb
lcall
xor
in
cmp
test
or
dec
daa
sub
rcrl
dec
adc
mov
pop
sbb
lock
and
push
and
pop
xchg
outsb
mov
jns
repnz
push
sbbb
loopne
pop
lahf
pop
push
and
mov
insl
notb
mov
push
popf
imul
loop
stos
arpl
sub
adc
or
jmp
pop
and
fsubrs
imul
in
mov
je
nop
sti
mov
pop
nop
jmp
xor
fsubrs
lods
cmp
xlat
cmp
cwtl
or
jg
mov
dec
int
aas
dec
clc
cmp
shr
or
sbb
sbb
mov
lcall
adc
xor
and
test
sti
or
mov
adc
lds
jge
out
mov
lock
lret
sbb
push
xchg
inc
pop
mov
popf
mov
xchg
stos
xor
sbb
xor
adc
je
cmp
in
sub
mov
push
sbb
imul
push
fidivrl
xchg
enter
cwtl
sbb
fsts
inc
imul
push
shrb
idivl
out
or
je
std
push
mov
fs
fdivs
cmp
shll
roll
add
gs
add
test
push
xchg
lods
sbb
fidivrl
mov
jbe
lods
pop
dec
mov
in
mov
out
push
jle
shll
lahf
inc
clts
sbb
dec
divl
ja
pop
std
movsl
bound
pop
xchg
inc
icebp
inc
xchg
cld
cmp
adc
dec
insb
ljmp
loop
xlat
pushf
xor
in
out
nop
mov
sti
xchg
data16
outsl
mov
mov
das
fwait
cmp
sbb
in
jecxz
in
adc
push
pop
jns
bound
xor
or
mov
fwait
gs
jl
pop
jge
push
pop
push
push
add
mov
fldcw
rcr
jge
or
adc
adc
fwait
push
call
out
inc
pushaw
cmc
frstor
add
xor
popf
cmp
sbb
cmpsl
jne
test
loope
loopne
in
outsb
and
arpl
add
adc
iret
repnz
repz
push
and
cwtl
mov
xchg
jae
sub
push
andl
cli
add
aad
and
inc
xchg
fcomi
stos
mov
push
rcr
and
or
push
dec
in
daa
and
mov
das
inc
push
inc
inc
jo
loop
mov
and
dec
lahf
popa
shl
insb
or
faddl
leave
add
sbb
aas
jb
add
fldcw
aas
mov
add
mov
sub
cmp
push
daa
push
or
cmpsb
lds
gs
icebp
outsb
stos
sub
xchg
sbb
jbe
mov
ds
xlat
ret
repz
in
test
jno
jne
and
push
sbb
push
repnz
xor
jg
xchg
loopne
adc
es
repz
and
mov
pop
movsl
and
jmp
adc
or
mov
sbb
in
lret
push
rorb
outsl
mov
pop
jno
shrl
cld
int3
cmpb
and
aas
adc
xlat
jge
mov
xor
pop
mov
add
pop
inc
pop
popa
mov
daa
xorl
mov
xor
xchg
xchg
pop
out
sbb
and
xchg
lahf
shll
repnz
add
dec
dec
stos
mov
faddl
cmpl
outsl
cmp
or
cld
inc
push
inc
scas
mov
clc
movsl
cmp
test
dec
hlt
adc
cmp
pushf
imul
cld
test
mov
push
push
es
fs
fs
and
mov
jle
mov
mov
movsb
mov
pushl
push
inc
jle
sbb
fs
sub
pusha
cwtl
lds
jb
int3
jno
scas
lret
mov
sahf
or
pop
loop
mov
mov
pusha
pop
ss
aad
cmp
dec
jmp
sahf
ljmp
adc
jne
stos
fwait
jp
ja
mov
outsl
mov
pop
mov
mull
int
push
cs
adc
push
bnd
pop
xor
xchg
mov
mov
movsl
filds
mov
cmp
loope
insl
jns
mov
stos
mov
sub
imul
xchg
xchg
flds
stc
cltd
cvtps2pi
push
sti
cmpsb
fbld
push
in
sub
fcmovbe
stos
jns
cmp
fsts
inc
mov
inc
adc
fldenv
scas
push
mov
call
lahf
xchg
into
lret
jbe
cwtl
clc
cmp
xor
mov
dec
sahf
cmp
mov
in
sub
fwait
popf
mov
lret
jbe
lret
lret
sub
insb
sbb
pop
rcrl
cmpsb
in
add
mov
gs
pop
test
xchg
loop
sbb
aad
fwait
inc
das
push
arpl
xor
dec
daa
mov
push
mov
sbb
es
push
jg
aas
adc
sbb
aam
shll
dec
or
jbe
jo
lcall
mov
call
mov
pop
jecxz
cmp
pop
mov
adc
outsb
data16
and
fildll
sub
push
jne
test
mov
sbb
movsb
xchg
cmp
into
jns
mov
std
jle
xchg
movsb
or
sbb
xchg
pushf
addb
sbb
inc
sbb
adc
dec
xchg
mov
jns
xchg
fildl
xor
add
call
push
or
xchg
and
call
push
sub
into
xchg
aas
mov
mov
clc
xchg
shll
cmp
xchg
popa
fildl
inc
add
lret
jl
lret
jbe
in
arpl
add
push
mov
movsb
push
stos
sbb
mov
insl
pop
cld
in
mov
add
pop
push
xchg
mov
js
loopne
mov
cmc
mov
test
fs
add
xor
test
mov
sbb
cmpsl
arpl
repz
sbb
pop
cmp
lds
enter
or
dec
xlat
and
sbb
int
setg
push
xor
fwait
imul
movsl
jmp
jns
enter
sbbl
mov
sbb
cmc
or
inc
push
or
ficoml
mov
mov
jnp
in
push
add
imul
aad
jle
sahf
lods
add
xchg
pushf
push
inc
filds
inc
jbe
outsl
xchg
stos
mov
iret
outsb
xor
mov
jg
push
fwait
lcall
insl
adc
mov
test
jne
pop
fs
mov
out
push
cmovle
ret
out
mov
inc
sbbl
int
lods
insb
imul
aad
sbb
or
rcrl
cmc
stos
bound
xor
xchg
add
movsl
jmp
push
aaa
repz
nop
iret
loope
aad
leave
jne
je
les
btc
adc
das
mov
or
mov
lret
jmp
bound
scas
xor
cmp
cld
jge
and
movb
fmul
incl
xor
popl
ret
cmp
pusha
fistl
push
test
insb
xor
push
movsb
push
dec
into
push
repz
ret
adc
sti
mov
in
les
or
mov
icebp
lea
bound
dec
lahf
mov
ret
es
sti
mov
dec
mov
mov
dec
xchg
adc
mov
xchg
inc
sub
in
push
mov
das
jmp
inc
stc
fistl
jg
cli
das
loope
and
adc
sub
test
adc
lcall
stos
pop
push
jo
mov
lds
inc
out
push
cltd
dec
inc
lahf
dec
div
test
std
out
leave
sub
xor
jo
inc
imul
mov
leave
add
mov
or
bsr
jl
orl
or
or
sbbl
mov
popf
shr
scas
cmp
arpl
or
inc
enter
imul
out
push
push
and
sbb
and
mov
cmc
lods
xor
sbb
mov
xlat
test
xor
fidivs
sbb
and
dec
data16
sbb
fs
stos
pop
dec
push
add
mov
les
adc
imul
icebp
push
scas
mov
cld
sbb
test
pop
aas
pusha
stos
jl
arpl
jmp
ret
sub
andl
into
popa
cli
arpl
mov
rorl
xchg
fsin
inc
insl
sbb
pop
shlb
aas
aas
js
arpl
into
inc
clc
cmp
stc
mov
loope
mov
xchg
gs
cmp
or
test
popaw
xor
sbb
pop
ret
orl
dec
xor
sbbb
iret
leave
push
inc
movsl
cmp
notb
leave
inc
dec
mov
jp
and
xor
cmc
push
push
dec
cmpb
test
je
pop
xchg
ljmp
sub
inc
push
ret
int
pushf
pop
push
std
dec
test
test
adc
pop
inc
mov
xchg
mov
pop
add
outsl
out
dec
repnz
out
push
icebp
lret
inc
std
push
test
cmc
cmp
int
cmp
cmp
mov
jle
mov
out
mov
jl
sub
lods
mov
es
xor
sbb
add
dec
pusha
inc
test
je
pop
scas
jae
pop
xchg
inc
jge
cmpsb
push
cltd
add
loope
fsub
outsl
mov
and
pop
push
add
shlb
sarl
fstps
lods
aas
xlat
xor
ss
icebp
lcall
cli
lahf
push
jmp
cltd
cli
scas
inc
xchg
and
lds
xor
outsb
cmp
mov
xchg
dec
stc
lds
sub
in
test
inc
stos
sbb
sbb
adc
sub
leave
cs
xor
jle
ja
loop
push
cmc
in
mov
outsb
sub
mov
xor
push
pusha
in
mov
out
sarb
xor
xor
or
mov
aas
mov
jmp
pop
mov
and
arpl
fldenv
mov
mov
push
dec
sbbb
shlb
sbb
push
pusha
fs
subb
xchg
repz
shlb
out
adc
enter
sbb
into
pop
cmp
xlat
hlt
push
lahf
mov
leave
fnstsw
outsl
fbstp
loop
mov
adc
aad
inc
in
dec
insl
addr16
or
adc
adc
mov
loopne
sub
sbb
sbb
iret
pop
out
and
cmpsb
notb
sahf
incl
nop
stc
in
fstps
adc
nop
out
pop
jp
pop
enter
int
adc
pop
adc
and
inc
push
xchg
cmc
out
sub
xor
mov
sahf
mov
sbb
shrl
popf
push
sub
dec
pop
test
add
outsb
aam
stos
pop
arpl
pop
mov
cmp
filds
fsubrl
or
push
clc
icebp
repz
inc
or
movsl
mov
mov
push
or
xchg
cpuid
and
mov
mov
std
insb
jle
idivl
sub
lahf
iret
cmp
dec
add
jns
lret
mov
sti
dec
jb
gs
inc
push
pop
push
fimuls
sti
loope
orb
xchg
pop
rcll
cwtl
or
or
inc
and
imul
xchg
mov
je
pop
int3
xlat
hlt
int
icebp
inc
je
xlat
test
stc
xchg
scas
fcom
out
test
jns
or
add
inc
xchg
and
test
add
mov
in
mov
pop
lea
pop
add
sbb
mov
and
fsubrs
sub
lret
inc
imul
int3
add
jle
das
or
outsb
add
xchg
xor
adc
das
jge
xor
movsl
sbb
push
xchg
loop
leave
cld
pop
addr16
std
ret
adc
aad
adc
jns
mov
add
and
adc
xor
idiv
xlat
inc
lret
cmc
into
xor
fadds
inc
dec
negb
cmpsl
xchg
nop
sbb
inc
pusha
aas
scas
cmp
mov
adc
jle
fisttpll
pop
jbe
xchg
add
rol
mov
adc
jg
sbb
sahf
cmp
int
inc
jnp
mov
inc
fmull
hlt
fstpt
sbb
lret
ret
mov
jo
frstor
mov
or
xor
jae
xor
dec
pop
mov
jb
loope
pop
addl
ret
xchg
andl
lret
iret
dec
mov
mov
adc
or
push
ret
mov
add
bound
dec
adc
xchg
mov
mov
mov
je
or
icebp
push
mov
call
push
jg
add
fists
cmp
jo
lock
std
popf
test
fiadds
movsb
lcall
mov
lahf
shlb
adc
inc
repnz
imul
insb
ds
mov
jno
lcall
inc
adc
stos
movsl
or
adc
arpl
mov
aam
mov
mov
sarl
call
xor
mov
push
sub
movsb
fmuls
inc
loopne
pop
inc
inc
jne
add
cwtl
andb
sbb
cmpl
test
xor
mov
jns
sbb
xor
fidivl
rcll
jle
mov
mov
push
xchg
xchg
mov
movsl
sub
and
orb
rcl
add
testb
jecxz
movsb
sbb
cld
imul
mov
outsb
jo
pop
fdivl
nop
mov
popa
add
mov
push
and
std
sbb
cltd
popf
pop
rcl
pop
inc
pop
add
jecxz
mov
popf
adc
xchg
outsb
jne
mov
add
cmc
or
cmc
rolb
icebp
andb
mov
adc
mov
push
cmp
and
test
je
sbb
out
add
pop
adc
dec
jo
scas
std
fstl
leave
xchg
mov
test
xor
or
xor
je
mov
rcrb
jl
add
push
scas
cmp
mov
insb
xor
sub
repnz
mov
fimull
popa
push
cs
pop
in
das
enter
pop
hlt
int
incl
jnp
jns
lds
test
insl
fcmovnu
popa
sarb
xchg
out
aaa
and
mov
sarb
push
cmp
inc
js
cld
jae
sbb
scas
add
cmp
xchg
ljmp
dec
das
push
and
aas
mov
movsl
xor
pop
adc
data16
pop
stc
mov
xchg
xchg
pop
test
xchg
loopne
movsl
jge
mov
dec
lods
cwtl
xchg
lret
push
gs
cmp
mov
jmp
mov
outsb
mov
inc
mov
push
arpl
call
fldenv
jle
inc
int
dec
fidivrl
jg
xor
mov
testl
mov
or
int
sub
daa
sub
push
ret
sbb
outsb
jbe
js
push
nop
xchg
and
add
mov
pmaxub
xor
xor
arpl
arpl
scas
sbb
shlb
pop
imul
out
into
insb
push
jle
int
push
ss
roll
clc
fs
or
push
lods
pop
pop
jg
mov
mov
push
ss
add
mov
sahf
sbb
push
pop
sbb
pop
lret
adc
jb
pop
pop
push
dec
add
xchg
fwait
push
cmpsl
scas
lds
hlt
and
aad
test
aad
mov
lret
or
filds
aam
or
clc
adc
mov
je
dec
out
movsl
add
lcall
insb
loopne
int3
adc
outsl
adc
call
cmpsb
add
cmp
fsub
or
xor
incb
bound
imul
sub
shl
testl
mov
shrl
push
push
mov
lcall
push
or
fisttpll
aaa
daa
cmp
ljmp
testb
jb
pop
jmp
lock
bound
jle
jl
dec
add
add
enter
loop
arpl
jle
inc
mov
out
jp
stos
mov
and
ds
cmc
xor
xchg
dec
mov
not
and
stos
js
mov
inc
imul
mov
out
dec
adc
mov
mov
mov
cmp
es
imul
test
subb
sub
data16
idivb
mov
test
add
cmp
cltd
es
push
push
imul
out
sbbl
enter
popf
or
jl
jl
stos
daa
icebp
in
jno
cmp
adc
aad
outsl
cmc
jo
jg
popf
xchg
mov
enter
nop
pop
fwait
pop
incb
jle
push
mov
add
fwait
popa
test
mov
adc
fnstsw
cmpsl
push
or
mov
dec
lea
in
sbb
sbb
aam
movsl
les
pushf
sbb
cltd
and
dec
pop
mov
fsubrs
inc
lods
inc
or
jp
dec
ret
call
add
test
jl
xchg
das
xchg
sub
mov
in
lahf
lods
dec
das
out
sub
aam
in
sub
mov
mov
inc
push
xor
es
dec
insl
lret
lods
jbe
cmc
xor
shrl
or
mov
mov
xchg
fs
mov
pop
inc
rcrb
lods
sub
ret
ret
imul
cmp
push
ja
sbb
call
aad
mov
and
or
bound
mov
sub
outsb
sub
data16
aaa
inc
shlb
pop
aad
mov
sub
cmp
dec
adc
cmc
mov
shl
mov
std
mov
jg
xchg
mov
cli
mov
nop
mov
push
data16
mov
xchg
ljmp
mov
clc
fs
arpl
fiaddl
push
inc
xchg
daa
inc
mov
fstpl
fmull
subb
imull
daa
push
jb
pusha
xorl
push
inc
jo
and
ret
in
inc
cmp
bound
movsb
rcr
and
shr
jae
dec
loop
das
aam
loopne
pusha
mov
jecxz
inc
stc
cmp
test
cmp
lds
sub
push
sti
aad
test
aad
rcr
jnp
pop
into
mov
pop
cmp
and
adcl
dec
dec
dec
ja
clc
adc
lds
mov
pushw
repz
aad
add
daa
inc
sub
in
rorb
addl
movsb
add
cmp
pop
into
push
add
and
outsl
das
ret
mov
mov
cmp
adc
mov
notl
fnstsw
mov
jl
xchg
lret
xor
out
repz
push
or
jg
dec
mov
idivb
es
popl
stos
xor
or
push
mov
add
mov
or
pop
add
cmc
pop
sub
push
mov
inc
int3
cltd
xchg
cltd
test
shlb
ss
add
xchg
mov
out
sahf
xchg
mov
mov
push
aaa
jg
lods
imul
adc
outsl
jmp
mov
outsb
mov
repz
fwait
daa
or
xor
lret
dec
push
xlat
add
bound
push
mov
or
out
out
or
stos
ss
std
call
fsubrl
xchg
lcall
in
in
mov
jns
out
repnz
pop
aaa
cmp
xchg
orl
cmp
pop
mov
pop
fldt
jno
mov
imul
xchg
add
adc
stos
lret
mov
lret
mov
mov
xor
imulb
ds
stos
sub
mov
push
repz
jae
xor
pop
inc
and
xchg
movsb
in
outsb
fdivr
cmpsb
mov
popl
cmc
adc
lret
and
lds
mov
dec
icebp
dec
pop
cmpsl
iret
pop
pop
fsts
loope
cld
les
ja
mov
cltd
fldt
jb
mov
mov
adc
xchg
jae
xchg
push
mov
adc
or
enter
fbld
push
mov
push
mov
mov
out
jno
test
pop
adc
cmp
pop
push
ds
jns
cmp
sahf
mov
rcr
sti
ja
ljmp
inc
pop
or
ret
sub
and
inc
lods
dec
arpl
daa
sub
aam
rcl
mov
and
or
lods
psrlq
mov
mov
or
repz
enter
sbb
stc
cmpsb
adcb
pop
dec
mov
pop
mov
and
out
mov
loopne
shll
or
pop
dec
clc
push
xor
cwtl
stc
pop
cmp
dec
jnp
out
lods
jbe
rorl
mov
fimull
pop
cld
push
das
scas
lods
pushf
fs
or
jle
dec
fistpl
inc
ja
mov
pop
xor
test
cmpsb
je
leave
lahf
cmp
lret
xchg
ficomps
push
jp
push
lods
out
sti
cmc
aad
fwait
out
or
hlt
dec
jno
fisubrl
jecxz
mov
adc
aas
leave
pop
int3
aad
sub
xchg
imul
jle
idivb
adc
std
or
mov
mov
pop
push
movsl
mov
mov
inc
mov
and
cmc
enter
clc
mov
test
add
dec
mov
popa
jbe
add
push
mov
add
imul
xor
sbb
enter
iret
sbb
mov
in
icebp
pop
outsl
push
into
orl
lahf
lret
cmp
mov
add
mov
fwait
ss
mov
aaa
pop
pop
inc
push
test
shlb
pop
cmp
xor
aad
out
sbb
inc
fimull
or
mov
shrl
int
cmp
movsb
aad
fwait
repnz
push
repz
popf
jmp
jns
and
jle
dec
fcoms
scas
fmull
bound
fists
cmpsl
mov
icebp
clc
dec
in
mov
into
jae
sub
lds
adc
cmp
push
mov
mov
test
mov
das
fists
sbb
rcll
mov
xchg
fistps
mov
fldlg2
cltd
push
sub
flds
fsubrs
mov
xchg
jecxz
fistps
add
rcll
jne
pop
xchg
in
cmp
jno
insl
scas
lods
in
inc
mov
pop
imul
sub
outsl
enter
sub
mov
pusha
popa
xor
pop
je
pop
sahf
insb
mov
in
sbb
jle
data16
les
xchg
mov
push
adc
filds
mov
sarb
mov
das
f2xm1
in
lds
sub
psubsw
js
data16
bound
inc
fwait
shlb
sub
in
decl
pop
inc
call
cmp
cmp
int3
loope
xchg
rorb
jns
and
ja
dec
xor
es
dec
xor
or
fimull
jmp
fcompl
inc
mov
jo
iret
lahf
push
mov
jmp
imul
add
xchg
bound
jp
rorl
pop
fdivp
adc
ljmp
rorl
sbbb
adc
push
jb
xor
mov
es
in
pop
push
aaa
pop
push
mov
xchg
adc
rorl
sti
cmpsb
pop
add
aam
lret
arpl
sub
cmp
outsb
ret
pop
mov
mov
add
xor
push
mov
stos
mov
and
or
xlat
cmpsl
push
loopne
ffreep
sub
mov
mov
push
cmc
dec
rcrw
fistpl
sub
aaa
pushf
and
cmp
xchg
mov
insb
ljmp
mov
popl
push
fists
insb
je
pop
sbb
iret
jnp
js
xchg
xchg
or
inc
popa
inc
out
test
pop
sub
sub
rol
jmp
cmp
push
dec
mull
shrl
adc
cmp
movsl
cli
xlat
mov
pusha
inc
inc
cld
aaa
push
inc
repnz
int
aaa
cmpsl
ret
mov
fcomp
call
push
insb
push
jae
test
in
call
pop
add
jge
not
jg
pop
xchg
xor
mov
dec
stos
clc
xchg
pop
xchg
cld
xchg
stos
imul
adc
scas
sbb
push
iret
dec
mov
add
scas
popf
mov
pop
mov
jge
cli
push
jbe
xor
movsl
rdmsr
mov
pop
mov
mov
mov
ffree
fcmovnb
loop
add
jmp
dec
sub
insb
inc
mov
push
and
outsb
jb
lret
push
mov
mov
xchg
pop
jecxz
lods
mov
sahf
retw
jl
dec
cli
adc
dec
pop
mov
sti
or
pop
scas
mov
std
jae
fcompl
out
shl
stc
decb
mov
dec
inc
push
in
adc
mov
xor
cmp
dec
pushf
add
pop
lock
inc
dec
cltd
xchg
fcoml
scas
jg
lods
test
xchg
add
jecxz
clc
scas
push
mov
push
sub
test
stc
jae
inc
xor
ljmp
sbb
call
jmp
jle
sub
xchg
test
push
loopne
or
out
fisubl
sub
outsb
aam
ret
outsb
mov
xor
mov
mov
cmp
aas
push
xchg
fs
jl
outsb
sub
push
inc
jge
xor
lahf
test
or
mov
mov
lahf
std
mov
push
ret
mov
fsubr
cmp
xchg
shrb
jns
std
aad
and
idivb
jge
test
test
and
adc
dec
fs
xchg
rorb
ljmp
aad
outsb
fwait
enter
sub
add
or
sbb
inc
jo
out
mov
dec
inc
mov
ficompl
jge
jl
arpl
and
mov
dec
lods
in
inc
and
adc
mov
popf
pop
or
ret
data16
jecxz
push
lret
loop
das
out
mov
xlat
cmp
inc
out
nop
add
sbb
pop
xor
out
sbb
inc
das
xchg
int3
mov
pop
mov
jnp
ret
pop
xor
or
es
sbb
fcomps
imul
jbe
aam
lret
rcll
xor
loopne
mov
scas
fcomp
cmp
and
ljmp
jnp
sub
roll
out
jns
lea
adc
out
or
mov
adc
sub
or
aad
dec
loop
cmp
lgs
add
mov
xchg
xor
aad
mov
mov
xlat
loop
repnz
repz
push
or
add
or
js
push
ds
enter
stos
push
inc
scas
jg
clc
or
add
and
mov
dec
outsb
xor
mov
cltd
fsts
lea
test
jge
adc
xor
and
sahf
out
int3
jp
addl
and
frstor
mov
jle
fadds
mov
popf
icebp
push
mov
xlat
das
or
mov
mov
inc
lods
cvtpi2ps
jno
jo
fcmovbe
xchg
mov
out
sub
cmpsl
adc
dec
out
repnz
int3
call
das
add
mov
scas
xor
in
dec
xchg
adc
and
std
lret
jmp
jmp
addl
inc
in
xor
jge
shll
int3
clc
iret
pusha
out
sarl
divl
push
cmp
adc
jmp
arpl
jp
xlat
jnp
inc
pop
lea
clc
and
dec
test
lds
aad
ret
jno
orl
or
adc
pop
mov
inc
mov
push
mov
outsb
add
outsl
adcb
jg
out
mov
inc
push
mov
sub
testb
cmc
push
cmp
call
push
lods
mov
add
push
push
lds
mov
cmpsb
dec
jg
stos
fdivp
xor
pusha
leave
loope
xchg
jp
fimull
loope
cmpsb
jns
add
push
xor
inc
jmp
loopne
jecxz
jmp
jmp
mov
jae
fscale
ljmp
push
sub
mov
test
add
roll
ja
divb
cmp
cs
add
stc
push
imul
mov
je
inc
roll
lret
cs
lods
cmp
mov
jae
mov
cmp
push
shll
inc
pop
mov
in
int3
or
mov
adc
mov
mov
fisubl
pusha
jae
sub
inc
cltd
push
ret
mov
sti
or
sub
in
add
mulb
or
mov
jo
mov
scas
pushf
mov
dec
adc
xor
jl
ret
jecxz
jmp
dec
inc
jp
lret
or
mov
or
fisubl
or
mov
lcall
shr
xor
int
mov
sbb
lret
pop
push
loopne
jecxz
dec
push
mov
fdivl
scas
rclb
mov
inc
ret
jmp
jns
cmpsb
sti
movhps
enter
es
pop
loopne
in
cld
pushf
jnp
xchg
adc
sti
push
fildll
out
sbb
psubusb
xchg
int3
mov
cmp
mov
int
in
rorl
fs
xchg
out
mov
adc
test
dec
mov
xchg
imul
lahf
icebp
fimull
sub
and
cmc
inc
and
xor
inc
xchg
dec
xchg
test
xchg
jo
dec
int3
lds
fsubrs
daa
loope
or
leave
pushf
scas
loop
es
fsubl
pop
lods
xlat
xor
addb
inc
incl
shrb
stos
in
mov
pop
add
mov
cmp
mov
loope
adc
xor
cmp
or
jecxz
in
dec
cld
pop
push
repnz
xchg
and
andb
add
scas
lods
loop
sub
mov
cli
mov
jns
xor
sbb
repz
lahf
cmc
mov
xor
mov
psllw
out
cli
push
sub
pop
push
push
adc
jmp
sbb
pop
cli
iret
adc
add
jne
mov
and
dec
iret
xor
imul
divb
jl
add
and
ss
stc
cli
push
or
into
lret
inc
inc
push
hlt
add
inc
fwait
int3
mov
mov
insb
lret
pop
pop
cli
loopne
in
jg
jecxz
testb
repz
out
repnz
cmp
loope
lds
pop
push
dec
fdivr
cmp
add
lea
stos
xchg
enter
sub
dec
pop
daa
std
push
pop
jb
push
push
std
outsb
test
je
inc
jmp
pop
enter
aaa
inc
std
movsb
daa
std
cwtl
jle
push
mov
sbb
adc
add
pop
or
out
dec
in
mov
cld
cmp
in
mov
or
sbb
xor
lds
mov
lret
pushf
std
cmp
jnp
out
xor
cmp
notl
push
sub
es
inc
in
mov
xchg
sti
push
dec
test
pextrw
xor
xor
iret
dec
xchg
add
push
mov
xor
push
arpl
jns
ret
or
xchg
adc
or
repz
push
bound
lods
scas
sbb
js
xor
in
mov
mov
outsl
neg
je
push
aas
mul
sub
adcb
pop
aam
outsl
or
xor
adc
or
cmp
mov
push
ficompl
dec
dec
pop
and
pop
inc
mov
sub
pop
add
mov
enter
inc
dec
faddl
xor
dec
outsb
mov
clc
pop
jnp
and
mov
test
xchg
adc
lcall
imul
mov
sti
repz
or
add
lcall
das
nop
das
repnz
jb
mov
lahf
mov
lret
int
sub
es
xchg
push
pop
incb
sbb
in
dec
arpl
jae
je
test
add
dec
jae
jecxz
in
lret
cs
nop
popf
xor
movsl
lods
xchg
add
movsl
cmpsl
call
repnz
xchg
in
sub
clc
mov
mov
aad
daa
addb
jmp
aaa
mov
aad
mov
cmp
arpl
jno
insb
adc
push
mov
scas
xchg
sti
jb
xlat
mov
les
inc
cs
xchg
sub
mov
rcrb
dec
cltd
mov
jae
cmp
cmp
ds
testl
sti
mulb
sbb
movsb
xor
in
jb
xchg
and
fadd
loope
stc
decb
and
xor
mov
mov
stos
xor
xchg
outsl
mov
not
xchg
cltd
aam
push
pop
or
icebp
lret
jae
xor
cmpsb
out
pusha
mov
stos
sbb
mov
mov
mov
pop
subl
je
pusha
add
cmp
pusha
cmp
or
add
rorl
dec
aaa
push
mov
enter
pop
cmp
inc
pop
popa
out
or
pop
cmp
adc
jle
lods
test
add
sti
leave
and
ds
xor
imul
test
sbb
mov
lcall
xor
test
stc
pop
xchg
or
pop
idiv
les
adc
lds
mov
push
test
or
ret
shll
mov
ds
pop
cltd
jg
dec
sub
enter
cltd
mov
shlb
fwait
or
jns
jne
cs
xchg
enter
mov
mov
aas
pop
xor
adc
mov
pop
inc
pop
movsb
dec
insb
sbb
loopne
and
mov
xor
fbld
mov
shl
jne
add
sub
add
jl
fildl
cld
xchg
cmp
pop
fcomps
test
lea
daa
push
imul
aam
inc
jb
rcrb
push
mov
es
or
inc
outsl
mov
adc
sarl
adc
mov
push
mov
shll
push
popa
nop
pusha
les
sti
repz
dec
push
imul
inc
cwtl
or
jp
sar
int3
jae
xor
push
negl
aas
cs
push
cltd
sub
mov
pop
adc
xor
inc
ja
cltd
cmp
mov
push
push
lcall
and
ret
xchg
mov
adc
ss
cs
cli
ret
pop
test
xchg
sti
or
inc
sub
cmp
ret
mov
inc
ret
aad
loop
aam
xchg
icebp
lahf
push
dec
lret
xchg
fildll
push
arpl
add
or
test
mov
je
sbb
sbb
inc
stos
test
xchg
push
or
stc
pop
imull
jbe
push
test
jmp
and
je
je
add
jo
inc
sbb
mov
aaa
fs
stos
shll
out
inc
jecxz
pop
lcall
inc
loopne
sub
lea
xchg
ja
add
les
cltd
mov
inc
jecxz
ds
xchg
clc
std
adc
out
xchg
jl
imul
add
scas
sbb
hlt
jg
inc
cwtl
hlt
rcrb
xchg
and
lcall
sbb
notb
or
dec
flds
adc
pop
gs
fs
xchg
mov
aas
ja
add
jg
scas
and
cmp
hlt
sub
test
mov
sbb
in
in
pop
inc
mov
aas
dec
xor
std
outsb
mov
dec
sbb
jo
dec
mov
inc
sahf
aad
xor
hlt
xor
xor
and
mov
xor
hlt
dec
clc
jp
mov
and
mov
mov
or
rorb
jno
jle
dec
or
daa
fcmovbe
cmc
imul
cmc
or
insl
lret
lock
xor
ds
or
or
cmc
mov
adc
stos
outsl
outsl
jp
imul
bound
sbb
adc
or
jnp
xor
mov
pusha
cmp
mov
ss
jle
scas
pop
jne
push
add
xor
xorb
mov
popa
cltd
dec
mov
stos
rcll
int3
dec
sarl
add
rdpmc
cltd
dec
sub
xchg
dec
xor
es
sub
aam
xor
imul
repz
movsb
iret
lock
mov
movsl
cmpl
arpl
es
or
mov
mov
aaa
inc
ljmp
rorb
adc
add
repz
jmp
out
mov
push
test
push
pop
je
push
lods
dec
test
inc
pop
mov
cmp
cmp
push
xchg
aam
mov
scas
insl
jmp
jl
cmpsl
out
inc
mov
cmpsb
mov
jg
ror
aad
xlat
mov
add
pop
mov
inc
lret
sub
xor
cld
xchg
jle
out
call
in
es
sub
dec
fsubp
add
cwtl
fidivs
je
ljmp
dec
and
pusha
pop
lea
push
pop
jb
in
sti
mov
pop
test
mov
dec
repz
ljmp
sub
movsl
stc
push
jns
imul
inc
adcb
out
sub
addl
mov
pop
push
push
aam
add
loope
or
xor
push
in
test
fldenv
dec
lcall
popa
adc
stos
or
mov
cmp
jns
rcll
lret
xchg
pop
or
xor
mov
lcall
enter
pop
shll
jmp
mov
xchg
pop
fdiv
pop
movsl
push
jp
jae
jbe
sbb
add
push
loope
adc
imul
sti
fsubr
mov
push
push
mov
call
es
mov
jae
cmp
xchg
ljmp
mov
into
adc
lds
fidivrs
flds
aaa
jno
in
adc
push
arpl
lahf
testl
fisttpl
xchg
jl
shll
int3
pop
ficoms
mov
push
lds
add
fsts
lret
imul
pop
sbb
lea
jge
ret
roll
pop
mov
and
sbb
outsb
mov
fisttpl
iret
xchg
test
test
cmp
lret
mov
mov
adc
and
pop
adc
sbb
add
in
shr
fwait
cwtl
fsubr
addb
mov
in
dec
pushf
xor
and
mov
add
add
add
test
dec
rclb
adc
fucomp
in
add
inc
mov
cmp
xchg
adc
pop
and
out
mov
lods
cmp
scas
stos
push
xchg
jp
sbbb
dec
xchg
stos
pop
dec
je
scas
call
lret
add
lahf
inc
inc
push
sub
jl
mov
test
xchg
mov
inc
sub
ds
dec
js
rol
out
mov
mov
sub
inc
cmp
push
dec
mov
addr16
adc
fnstenv
punpckhbw
insl
shll
xchg
lret
xor
mov
xor
push
pop
mov
int3
xor
jbe
aad
shr
aas
outsb
push
adc
in
ds
jae
mov
xchg
addr16
insb
jns
shrl
popa
mov
mov
mov
jno
sub
add
movsl
fcomps
jnp
jl
jl
rorb
push
cmpsl
xchg
xchg
mov
and
ret
rclb
adc
movsl
pop
cmp
jne
insl
aam
outsl
sub
sub
call
ret
daa
and
decb
add
sub
into
jbe
adc
mov
mov
xor
lods
jae
insb
test
and
subb
mov
jmp
pop
ja
pop
pop
imul
shrl
push
mov
cld
sbb
orb
push
mov
arpl
inc
jge
rcrl
dec
aam
lret
mov
call
jp
out
cmp
mov
and
fs
mov
ljmp
aas
std
jmp
pop
cs
pusha
lcall
add
jnp
data16
xor
ret
cmp
scas
bound
test
mov
cmp
mov
out
xchg
inc
add
lock
mov
add
jecxz
int
loopne
push
std
cwtl
les
xor
mov
and
jmp
mov
dec
mov
xlat
xchg
push
aaa
dec
repnz
sbb
sbb
push
push
fsubl
out
sbb
outsl
mov
out
add
mov
lahf
push
in
xor
aad
repnz
inc
addr16
jae
in
pop
shl
pop
fisttpl
sbb
mov
push
arpl
sbb
dec
rolb
mov
in
cwtl
jecxz
out
popa
ror
cmp
pcmpeqd
xchg
cmpsb
pop
fcmovb
cld
ljmp
ja
jae
push
shlb
lock
cltd
jg
data16
xchg
pop
mov
pcmpeqd
ds
jae
lcall
xchg
movsb
or
popa
pop
mov
push
aam
or
inc
cmc
push
pop
sbb
bound
testl
icebp
xor
popa
mov
mov
daa
mov
bound
jb
jo
cwtl
mov
mov
repnz
jno
ds
pop
jb
outsb
mov
sbb
dec
es
arpl
or
pop
jmp
or
adc
sahf
jns
mov
mov
jg
js
mov
repnz
push
sahf
and
fdivrs
out
out
lods
add
mov
clc
test
ret
push
aaa
ds
imul
ret
jns
xor
pop
jmp
sub
inc
jmp
adc
repnz
loop
sbb
dec
and
push
mov
jae
jns
inc
inc
ja
mov
mov
cmc
push
dec
sbb
sbb
ja
filds
adcb
mov
inc
push
lods
sbb
lods
dec
xchg
in
xlat
sbb
shrb
leave
pop
push
imul
push
push
aaa
data16
mov
inc
sub
sbbl
rcrb
cmp
fsubl
aaa
nop
dec
es
imul
push
jecxz
adc
xchg
cli
mov
fnstcw
push
sub
cmpsb
lcall
jmp
jbe
pop
andb
push
or
xchg
lret
adc
add
pop
xor
aam
je
imul
push
adc
sbb
jmp
aad
and
mov
mov
sahf
mov
mov
dec
lcall
xor
fs
sub
test
mov
xchg
xchg
sbb
xor
cs
xchg
fcmove
adc
inc
xchg
sbb
lock
jg
sbb
mov
xchg
sub
in
cmp
xchg
fsubl
ret
inc
sbb
inc
or
out
add
push
scas
sub
sbb
jae
jp
aas
pop
jmp
mov
in
add
add
lods
mov
sbb
dec
je
inc
jae
out
loopne
lahf
cmpsl
adc
fmuls
pop
mov
pop
neg
xor
hlt
dec
loope
imul
lret
nop
repnz
mov
je
xchg
cwtl
mov
xchg
out
sub
je
xor
rcrl
cmp
jg
push
adc
aad
pop
push
fsubs
cmp
in
and
xchg
mov
lret
lahf
sub
movsb
sbb
hlt
jg
and
pusha
pop
xor
out
dec
hlt
mov
mov
ja
inc
add
push
test
int3
in
pushf
sub
leave
jl
test
adc
inc
mov
test
loopne
or
mov
shll
push
and
inc
cmp
jbe
pop
cwtl
ficompl
push
ja
xor
or
dec
mov
out
clc
jae
lret
adc
and
cmp
mov
jp
aad
ljmp
mov
leave
mov
or
mov
pop
test
mov
shrb
pop
xor
or
push
sbb
pop
jp
ret
xchg
xor
add
cmc
xlat
movsl
pop
stos
ss
in
sub
mov
jb
adc
ret
xor
dec
cwtl
popf
mov
and
mov
xor
jae
cmp
js
into
jecxz
sub
or
dec
mov
push
sub
dec
jmp
std
leave
scas
mov
pxor
sbb
mov
mov
into
repz
lret
sbb
jecxz
aad
fcomi
inc
inc
jp
adc
and
xchg
jle
push
push
push
std
dec
inc
mov
arpl
mov
pusha
xchg
xor
lret
loope
lahf
ljmp
int3
insb
test
xor
fwait
arpl
xchg
xchg
add
int
or
inc
adc
mov
cwtl
mul
loope
xchg
sbb
lock
cli
icebp
mov
pop
out
dec
popf
xchg
fdivrs
mov
jno
aad
jo
hlt
fistpll
jno
add
sub
sub
xor
das
push
fcoml
or
mov
jno
xchg
cmc
rcrb
orl
pop
test
fsub
loopne
orb
icebp
imul
adcl
inc
xchg
rcrl
xlat
lods
outsb
or
leave
mov
mov
pop
adc
ret
jae
int
lds
sub
pop
push
pop
add
sbb
mov
cmp
ja
push
das
into
out
aaa
cmp
inc
iret
std
push
rolb
test
dec
pop
rcr
sbb
pop
movsb
pop
psrlw
jl
andl
pushf
sbb
cltd
push
out
add
sahf
adc
ds
nop
adc
js
mov
ds
mov
sarl
mov
xor
lahf
rcrb
in
or
jge
into
in
lea
sbb
cmpsl
mov
ljmp
sbb
or
movb
pop
xorb
sbb
cmp
fistl
mov
xchg
scas
lock
jge
adc
cmc
xchg
mov
inc
jl
stc
cmp
and
adc
jae
popa
shl
shlb
cmp
add
addr16
or
lcall
icebp
sbb
jns
mov
lret
inc
or
and
pop
cmp
test
sbb
shld
push
jns
lret
cmpl
movsl
inc
dec
sahf
push
inc
push
mov
popa
fdivs
add
lea
in
pop
or
lods
arpl
add
loope
push
rorl
xchg
dec
loopne
pop
mov
sub
lods
in
jne
mov
sti
fwait
mov
and
cwtl
lret
ret
rorb
xor
iret
jne
pop
xor
mov
cmp
test
and
data16
insb
pop
mov
out
rclb
or
cmp
push
mov
loopne
bound
cmpsl
pop
push
or
std
decb
inc
fucomi
cmp
ja
pop
ja
cmc
hlt
mov
xchg
xchg
cmpl
and
mov
test
inc
inc
add
dec
dec
push
sub
inc
cmpsb
mov
mov
and
xchg
mov
push
shl
out
mov
cmc
dec
das
insl
jb
jl
push
imul
xchg
scas
aad
cmp
in
mov
dec
data16
loopne
add
aad
jl
or
outsl
mov
xchg
arpl
and
dec
ret
or
pusha
pop
les
mov
adc
mov
das
pop
nop
xor
and
ret
push
lahf
jae
movsl
stos
dec
xchg
mov
pop
pop
jb
sbbl
mov
xchg
jge
and
clc
stos
stc
iret
lock
or
rcl
or
movntps
shrl
inc
cmp
xor
push
inc
dec
mov
and
je
inc
push
in
push
fneni(8087
in
inc
push
aam
cmc
jecxz
in
pop
push
add
cmp
mov
enter
loope
fidivrl
adc
adc
lcall
cmpsl
enter
in
push
or
push
push
jg
xor
add
mov
mov
mov
mov
daa
mov
std
mov
sub
jns
ss
jns
jne
inc
cmpsb
mov
and
xchg
aas
push
mov
mov
xchg
pop
sarl
cs
fucom
sbb
sbb
ljmp
mov
ret
pushl
mov
add
popf
adc
fs
mov
sbb
mov
aad
push
sahf
mov
dec
cmc
jne
aaa
or
std
andb
mov
adc
pop
or
push
test
int3
sar
mov
xchg
push
dec
jl
mov
xor
dec
pop
mov
pushf
jge
rcrb
xor
clc
icebp
nop
inc
sub
aam
lock
sahf
mov
test
repnz
xor
pop
test
sub
xchg
and
sarb
ljmp
xor
sbb
add
arpl
inc
mov
lea
lret
mov
pop
popf
cmp
lea
test
aaa
or
loop
mov
cltd
adc
xchg
ss
ja
jbe
std
mov
in
test
or
jo
jg
jmp
insb
adc
sahf
test
scas
scas
pop
frstor
and
xor
and
cmp
fbld
inc
cmp
push
call
or
in
push
pop
out
mov
inc
pop
repnz
ret
dec
repz
hlt
sub
sub
jb
xor
hlt
in
imul
mov
into
stos
jnp
sub
push
in
mov
dec
adc
pop
pop
test
mov
pop
jg
add
adc
imul
addr16
imul
daa
les
add
insb
in
jno
cmpb
jmp
loope
in
xchg
lods
or
inc
call
push
ret
das
fcoms
mov
mov
mov
loop
xor
je
xchg
push
mov
cmp
or
adc
lock
inc
mov
insl
in
lea
shlb
xchg
pop
insl
test
pop
nop
mov
push
sub
sbb
sbbb
jae
les
cmp
add
repnz
dec
sub
xchg
cmpsb
dec
push
sti
cmpsb
insl
jecxz
add
int3
mov
incl
sbb
cmp
subl
jge
pop
daa
add
aad
out
loopne
pop
sub
adc
jle
fisttpll
sub
rep
scas
mov
dec
stc
psrlw
stc
and
push
stos
sbb
pop
scas
ficompl
popf
xchg
nop
js
rcll
push
negl
insl
testl
mov
gs
arpl
mov
ja
xor
cmc
jae
dec
icebp
jbe
or
idivl
cld
mov
xor
cli
out
or
gs
or
push
jns
push
push
xchg
fildl
std
xchg
xchg
inc
adc
jle
xor
fcompl
mov
xor
inc
repnz
and
test
ficoms
out
sbb
pop
cmp
shlb
mov
xlat
rcl
rol
pop
and
xchg
fiaddl
cli
cli
cmp
roll
cli
and
icebp
fcompl
cwtl
inc
dec
add
adcb
ret
jle
sti
add
insw
out
sti
adcb
in
inc
out
movsl
adc
int
repz
jmp
lret
lods
pop
add
mov
stc
xor
push
xchg
push
push
out
sub
cmp
test
in
pop
loop
nop
out
paddsb
adc
lret
add
jg
sar
lds
fnsave
or
jp
in
jns
rclb
and
cmp
out
inc
stc
mov
ror
popf
cmp
decb
outsb
ss
jmp
cmp
outsb
mov
jns
mov
mov
push
or
jg
mov
inc
mov
pop
fwait
lahf
fdivrl
adc
cmp
dec
push
push
addb
mov
cmp
in
jge
inc
je
mov
dec
mov
xchg
inc
mov
popa
xchg
cmp
nop
int
movsb
inc
mov
sbb
loopne
popa
icebp
jecxz
int
fsubr
int
lret
push
and
test
xchg
imul
dec
pop
push
into
xchg
jbe
and
xchg
orl
xor
je
pop
loop
or
adc
jae
vpcmov
jp
lea
aaa
mov
rclb
imul
or
jns
cs
mov
sub
mull
test
sti
fsubr
mov
movsb
pop
mov
enter
lods
pusha
lods
scas
push
call
fstpt
loop
lcall
adc
cmpsb
sbb
adc
adc
jp
cmpsl
jmp
xchg
outsl
insb
and
mov
push
add
imul
jge
in
pop
ret
pop
or
add
sub
mov
dec
out
inc
cmp
and
and
dec
adc
cmp
add
push
adc
addb
mulb
test
add
sbb
ficompl
jmp
jp
dec
mov
pop
outsl
xor
push
pushf
mov
arpl
sub
sti
push
jle
cmp
lock
push
ljmp
ljmp
cmpsl
mov
ss
cli
cmp
jmp
sbb
and
xor
loope
scas
fisttps
or
push
aaa
rcl
lret
sub
scas
pop
fldenv
cld
cmp
mov
and
cmp
insb
or
push
push
fs
out
punpckhwd
pop
shll
popf
movsb
add
pop
mov
and
enter
in
or
push
scas
xchg
push
sbb
xchg
dec
rdtsc
mov
jle
or
add
dec
repnz
and
xchg
sbb
inc
inc
pop
cmp
jle
pop
jne
jmp
aam
scas
ret
test
out
jecxz
ror
sbb
test
test
adc
insl
out
ja
push
loope
jnp
pop
mov
add
into
iret
gs
das
cld
fwait
inc
mov
add
testb
dec
inc
std
sbb
inc
mov
repz
push
fwait
jle
or
mov
push
seto
pop
jne
jge
inc
repnz
cld
mov
pop
cmpsl
mov
push
cmp
in
test
mov
fisttps
xchg
rcrl
push
pop
xchg
jae
mov
xor
test
adcb
cs
push
sahf
dec
lods
scas
aas
add
add
in
lods
push
fst
sbb
cmp
das
cli
xor
jno
leave
mov
jnp
jns
xchg
jl
outsb
mov
mov
rcll
mov
push
dec
leave
sbb
jge
inc
sbb
fisubrs
adc
lea
xchg
std
pop
out
jns
mov
test
testb
adc
fs
and
and
imul
dec
jp
aam
jp
cmc
or
cmp
pop
xor
push
mov
les
cmp
cltd
inc
cmpsb
xor
push
mov
jecxz
popa
inc
rorb
adc
stc
cmp
cmpb
lea
xchg
lods
push
test
xchg
add
jnp
jge
iret
push
rol
xchg
xor
inc
icebp
jecxz
xchg
mov
pop
pop
cltd
repnz
loopne
mov
xchg
jp
leave
sub
xor
dec
in
jb
lods
xor
or
mov
loopne
cltd
outsb
jne
and
sti
dec
adc
lea
icebp
scas
popf
pop
dec
movsb
test
mov
lods
push
inc
out
jmp
scas
jl
xchg
dec
pop
fimuls
cmp
mov
cmc
loope
arpl
mov
add
sub
jp
mov
ja
rcrl
arpl
and
jae
cltd
dec
xor
and
hlt
push
shlb
mov
and
sbb
stc
jne
nop
mov
ds
test
div
jmp
frstor
push
push
adc
inc
xchg
mov
cltd
and
call
sbb
fisttpl
push
es
pop
mov
loopne
and
movsb
mov
js
mov
cwtl
adc
xor
mov
int3
es
cmp
sub
or
pop
pop
pop
mov
je
mov
or
jns
adc
popa
loop
mov
imul
add
movsl
dec
xlat
xor
insl
fistpll
clc
and
and
mov
orb
and
push
ljmp
nop
cmpsl
cmc
enter
stos
or
arpl
shl
out
jmp
push
xchg
test
outsl
sub
xchg
push
mov
rorb
imul
mov
loope
jb
lds
test
fstp
inc
or
sbb
rcrl
mov
movsb
and
out
imul
mov
mov
and
pop
ret
push
gs
mov
push
dec
and
jnp
and
cmp
dec
jp
and
lea
mov
rorl
mov
inc
mov
adc
stos
pop
stc
cmpsb
scas
notl
pop
out
xchg
and
xchg
or
dec
xor
mov
jo
loop
push
jns
out
lods
push
push
enter
mov
xchg
repnz
push
xchg
push
cmp
mov
add
jmp
cmp
sbb
ret
adc
sti
fcmovb
sbbl
and
cld
imul
push
adc
sub
int3
loopne
lock
das
pop
adc
push
test
and
lcall
push
xchg
pop
divb
cwtl
lods
add
mov
sub
lods
ret
mov
rcr
jmp
bound
mov
movsl
or
enter
pop
jle
cmp
aas
cmpsb
mov
cli
fisttps
out
rol
or
sbbb
mov
int3
push
mov
add
push
leave
mov
clc
dec
sub
ret
xchg
adc
divb
ffreep
xchg
int
push
stc
or
mov
fwait
cmp
pop
jnp
dec
mov
and
mov
dec
xchg
xchg
or
fwait
xchg
xor
pusha
enter
inc
and
and
jno
push
and
insb
pop
jnp
lods
insl
push
aad
subl
fnstcw
xchg
cmp
in
or
and
lock
int
iret
pop
hlt
cmpsb
cmp
pop
outsb
std
mov
out
push
out
and
jp
mov
push
xor
stc
jb
pop
dec
ficompl
pop
hlt
mov
xor
cmp
ljmp
inc
adc
mov
push
frstor
jmp
jp
mov
pop
jp
mov
imul
mov
ret
cmc
scas
inc
les
mov
pop
sub
xchg
cmp
mov
scas
int3
mov
out
xchg
xor
mov
les
outsl
or
scas
cmp
sub
dec
popf
xchg
add
call
sub
test
loope
mov
pop
xchg
nop
cmpsl
and
or
fcoms
or
test
je
je
jne
testb
push
xchg
daa
sub
insb
lds
pop
fdivs
sbb
mov
mov
mov
mov
aas
xchg
mov
bound
sub
pop
dec
je
sub
es
pop
mov
mov
hlt
mov
jl
dec
aas
ds
out
jl
inc
add
pop
test
sub
pop
jae
dec
imul
and
jge
pop
ss
lret
push
lret
add
sahf
shll
lods
push
fidivs
and
out
push
shlb
mov
orb
into
mov
jne
add
aas
pop
enter
and
dec
push
aam
imul
mov
and
xchg
nop
nop
out
mov
mov
jb
sbb
jmp
aas
int3
cs
adc
adc
dec
cld
pop
mov
sub
outsb
repnz
repnz
inc
mov
aas
lods
loope
add
jae
add
daa
xor
pop
jle
mov
sbb
push
inc
mov
bound
mov
out
scas
mov
xchg
shlb
mov
test
or
sbb
jb
lea
push
lahf
dec
divb
sub
mov
aas
lods
adc
push
cli
mov
das
popa
les
dec
shl
xor
mov
es
xchg
sti
dec
xchg
inc
mov
aad
out
test
mov
mov
mov
stc
enter
sar
or
and
iret
stos
fldenv
pop
fld
lret
aad
mov
fimull
sub
jmp
repnz
adc
jnp
scas
add
pusha
cmp
inc
mov
xor
adc
xchg
bound
out
lock
mov
pop
dec
test
and
jne
ret
jmp
jno
jns
leave
push
push
xchg
lds
cmp
fs
cmpsb
cmp
loope
cmp
jmp
bound
mov
ficoms
outsl
nop
ffreep
movsl
jbe
or
and
fs
inc
xor
or
pop
enter
push
mov
cmp
cmpsb
push
mov
enter
pop
mov
pop
dec
pop
in
jp
call
inc
out
mov
xor
std
orl
jmp
adc
push
ret
lock
jno
dec
and
jb
and
push
push
out
cmp
std
mov
xchg
add
pop
ljmp
xor
adc
or
call
and
pop
mov
cmp
cmp
dec
hlt
pushf
push
xchg
fisubrl
test
fstpl
pop
add
mov
test
imull
inc
mov
ljmp
xchg
sti
mov
jns
inc
push
aam
stos
pusha
push
in
scas
or
xor
dec
imul
fxch
fisubrs
sub
mov
mov
add
test
divl
push
inc
xchg
sbbb
sahf
xor
push
push
mov
xor
jp
mov
mov
xchg
jg
jno
lahf
loope
inc
inc
xchg
daa
and
and
add
cmp
pushf
mov
pop
inc
icebp
sbb
mov
mov
xchg
ret
stos
in
xchg
sahf
mov
fs
push
mov
or
insb
fnsave
rep
data16
xlat
xchg
xor
xchg
ficomps
popa
jbe
jle,pt
lret
fcmovb
push
and
mov
inc
es
orb
loopne
jmp
loop
sbb
cltd
out
aas
mov
pop
adc
bnd
inc
jns
shlb
inc
push
shlb
lods
bound
adc
pop
lret
mov
ret
loop
out
xor
movsb
xor
aad
iret
xchg
mov
cmp
nop
lcall
pop
pop
inc
sbb
dec
loopne
je
stos
sub
inc
in
dec
addb
imul
ret
addr16
daa
bnd
mov
mov
into
loopne
pop
jns
cwtl
sbb
cmp
adc
iret
mov
inc
inc
pop
loopne
cmpsb
xor
hlt
imul
add
cli
fimuls
cmp
lret
and
add
jge
add
xchg
mov
retw
loope
sahf
out
imul
pop
mov
sbb
ljmp
fistpll
out
mov
stc
sub
sbb
inc
clc
push
xchg
xchg
push
fcoml
and
push
sar
pushf
cvtpi2ps
mov
aas
pop
or
adc
lods
xor
rcrb
sub
rorl
std
cli
pusha
fnstsw
xorl
addl
xlat
and
stc
or
inc
jl
adc
jle
add
cmp
pop
sub
push
jmp
ds
pop
jge
fsubs
mov
or
push
push
mov
push
dec
xchg
mov
js
lcall
ja
xchg
lahf
addr16
scas
push
ret
mov
lret
add
outsl
sar
outsl
mov
mov
mov
sbb
cwtl
into
dec
or
cltd
adc
jne
aaa
jmp
imul
pop
or
pop
int
adc
adc
stos
jmp
in
lods
push
stos
out
lcall
jge
jg
pop
jo
push
out
sub
punpcklbw
sub
cmpsb
xchg
xor
jno
mov
dec
test
or
imul
aaa
imul
sbb
dec
mov
cmp
loope
push
add
fsubrs
rcrb
stos
das
testl
cmpsl
add
incl
add
cltd
xchg
sub
or
ret
fsubr
pushf
imul
mov
mov
std
aad
jecxz
stos
jp
icebp
cs
pop
xchg
icebp
mov
ljmp
ds
loope
or
enter
xor
pop
cwtl
imul
inc
pop
fdivl
lcall
adc
in
addr16
xchg
mov
mov
cs
or
jmp
mov
data16
insb
sti
mov
pop
or
push
stos
in
sub
mov
std
popf
dec
icebp
cld
loop
or
dec
inc
xor
xchg
pop
inc
adc
cmpsb
sbb
stos
and
rcl
jge
inc
cld
aas
mov
icebp
gs
movl
or
and
rolb
sub
mov
cltd
out
or
dec
ret
mov
fldcw
rcl
hlt
pusha
es
ss
sub
mov
sub
pop
or
sub
push
loopne
scas
push
mov
inc
adc
push
outsl
jmp
aam
xorb
and
mov
adc
push
rclb
incl
leave
mov
push
daa
pop
stos
scas
and
adc
jecxz
cmp
ret
outsl
mov
push
lret
jl
dec
adc
sub
pop
jno
ret
mov
jle
mov
cld
arpl
rorl
adc
and
iret
push
pop
xor
hlt
mov
stos
into
call
repz
cs
mov
pop
loope
inc
inc
push
cmp
mov
adc
pop
out
or
pop
sbb
aas
xor
dec
and
jecxz
mov
sub
hlt
sbb
mov
test
pop
mov
jno
out
fildll
ds
xor
std
lret
in
adc
mov
ret
mov
std
mov
stc
pop
pop
mov
jnp
cmc
push
and
adc
xor
add
je
push
in
xchg
jl
mov
sbb
cwtl
xorl
pop
jns
in
fistps
xchg
rorb
js
icebp
xor
fsubs
bound
inc
cli
xlat
dec
stos
insl
lock
fdiv
sbb
dec
out
and
pop
insb
dec
lret
cmp
xchg
mov
push
dec
mov
ret
lret
daa
cltd
movsb
cmpsb
sbb
cltd
jae
pusha
out
jnp
pusha
push
add
sub
mov
rolb
mov
sub
xor
lods
fdivrl
out
icebp
in
rcrb
sub
imul
adc
sbb
scas
cmp
movl
mov
xor
xchg
inc
cmp
or
data16
mov
js
xchg
jecxz
fisttpll
fimull
mov
sub
into
sbb
fsubl
push
leave
imul
test
jns
stos
rclb
aas
jmp
insb
mov
sbb
mull
inc
jnp
cmc
pop
roll
bound
in
jmp
push
hlt
nop
mov
jb
add
cs
push
arpl
jmp
repz
in
das
and
mov
sub
mov
add
or
mov
in
test
add
xchg
fs
xchg
xor
dec
push
std
addr16
mov
pop
xchg
js
pop
sbb
add
push
out
imul
push
push
ret
das
data16
pop
addr16
sarb
lea
call
xor
xchg
xchg
pop
push
cmc
cmp
xlat
mov
pop
add
shll
push
add
push
out
and
xchg
imul
jge
mov
pop
mov
cmp
cmp
popa
pusha
lcall
outsl
add
jmp
fwait
repnz
push
sbb
aam
xchg
xor
sbb
test
mov
sbbl
shl
push
mov
xchg
insl
fnsave
jmp
push
jae
scas
cmpsl
fisubs
push
sbb
adc
aas
scas
sbb
fcmovnu
insb
flds
mov
imul
fwait
rcll
xor
fs
jmp
jo
pop
sub
mov
cld
and
jmp
mov
push
orl
enter
xlat
pop
popl
cmpsl
outsb
je
dec
adc
inc
cmp
jle
mov
pop
inc
sbb
lcall
mov
jns
add
scas
sub
popfw
jae
inc
push
dec
mov
sub
xor
dec
xchg
daa
mov
pop
adc
xchg
xchg
or
es
xchg
jge
sar
sub
cld
xorl
inc
mov
data16
mov
repnz
scas
sub
or
pop
mov
cmc
push
sarl
push
loop
dec
data16
iret
xor
shr
jg
lods
lret
cmp
inc
cmp
lret
negl
cmc
addb
sub
shlb
jge
fnstsw
jp
int3
mov
ret
cmpsb
dec
sbb
addr16
ret
mov
xor
fiaddl
add
mov
aaa
sbb
adc
jo
inc
out
xor
mov
dec
jbe
nop
or
inc
xchg
sub
pushf
loope
cwtl
out
outsb
dec
mov
xchg
adc
gs
mov
clc
sbb
sbb
jmp
sub
xchg
mov
cmp
push
les
mov
cmpsb
lret
push
imul
repz
movsb
jp
cmc
test
rcrl
and
push
push
add
and
mov
sub
mov
js
add
mov
or
into
pop
ret
cmpsl
push
xchg
aas
loope,pn
in
outsl
add
loope
fdivrs
pushf
pop
call
ret
sub
pop
aaa
outsb
mov
and
fs
icebp
in
addr16
das
sahf
rorl
xor
pop
and
outsl
inc
in
pusha
fdivs
mov
pop
shr
add
adc
inc
leave
or
add
imul
add
scas
sbb
xor
sbb
cli
and
mov
in
pop
inc
es
fwait
divl
cmp
add
faddp
arpl
rorb
mov
mov
ret
pop
xor
inc
in
cmc
xor
cwtl
mov
xchg
lods
sarb
sti
mov
leave
cmc
lock
pop
idiv
or
push
pop
repz
lods
jae
stos
je
sub
sub
mov
or
leave
jmp
inc
aam
cmpsb
add
mov
push
bound
pop
push
shrb
lock
sub
das
jne
pop
sbb
loope
push
loopne
lods
movsl
in
ret
mov
dec
aaa
aaa
out
leave
filds
xor
jge
inc
test
and
inc
lret
mov
push
or
js
jno
push
popa
scas
int3
pop
test
loop
out
insb
sti
sbb
in
jno
mov
add
dec
push
shll
inc
jle
mov
push
ret
adc
int
movsl
scas
aam
aaa
sbb
jmp
xchg
scas
popa
pop
int3
movsb
ret
ret
lods
sbb
mov
mov
push
adc
cmp
cmp
dec
and
add
pop
arpl
repz
jne
xor
inc
popa
mov
rcl
push
mov
pop
scas
lret
lret
pop
in
push
in
std
mov
and
jl
xchg
les
push
or
push
adc
or
repz
cwtl
push
addl
mov
shlb
jecxz
sbb
mov
test
sub
inc
xchg
mov
mov
lret
lods
xchg
dec
adc
mov
sbb
dec
dec
lret
push
pop
push
dec
movsl
xor
loopne
sahf
sahf
imul
insb
scas
addr16
mov
jno
add
and
enter
push
add
cvtps2pi
jecxz
ljmp
sub
in
icebp
test
in
popa
iret
sar
testb
pop
out
test
mov
xlat
lret
xor
inc
and
push
sub
jl
inc
mov
loop
jmp
add
jp
movsb
sub
push
inc
pop
sbb
daa
xorl
xlat
out
sti
push
popf
and
mov
cmpsb
sbb
cmp
inc
out
insb
loopne
xchg
dec
fiadds
or
mov
push
push
cli
outsl
xchg
shl
je
ss
dec
enter
xlat
shl
ficompl
movsl
jb
push
mov
cmp
push
leave
pop
sub
sysexit
push
push
push
test
cmp
sbb
mov
repz
repz
jbe
mov
lock
js
mov
mov
add
popa
in
addr16
mov
fwait
sar
cmpsl
adc
xchg
sar
cmp
add
bound
mov
das
imul
addr16
js
cmp
fs
aaa
adc
dec
sahf
testb
xor
dec
movsl
jecxz
sbb
cmpsb
aam
xlat
movsl
mov
xor
sbb
lahf
adc
imul
shlb
cwtl
jbe
mov
adc
xchg
lcall
test
adc
rorb
das
js
into
sarl
test
mov
aam
sub
dec
lcall
lods
mov
mov
lods
cli
add
and
mov
movb
fbld
jbe
rolb
aaa
jns
and
ds
lock
ficomps
stos
ljmp
icebp
dec
in
push
adc
je
rcll
popa
cltd
xchg
filds
fistl
in
pop
and
jae
pop
aas
and
stos
and
pop
les
popa
push
lret
icebp
xor
sbb
fwait
data16
decl
jnp
rclb
popf
nop
xchg
cmp
sub
lds
pop
cli
lahf
insb
push
inc
xchg
add
dec
fincstp
push
pop
xor
das
mov
sub
fs
mov
xlat
cmp
mov
push
aad
cmp
and
cmp
rolb
je
pop
test
andb
jno
pushf
shr
pushf
mov
xchg
int
dec
iret
mov
hlt
and
fsts
sub
out
cltd
cltd
mov
push
jns
mov
pop
sub
iret
out
lret
ficoml
stc
push
call
fisubrl
frstor
and
fnstsw
scas
and
sub
in
mov
sub
and
inc
push
sub
fnsave
mov
icebp
pop
rol
dec
mov
call
cmp
les
and
add
adc
int3
dec
push
test
mov
jae
push
xor
inc
xchg
je
rol
mov
fwait
les
dec
imul
mov
mov
ret
outsl
ljmp
mov
sub
pusha
pop
cmpb
pop
mov
jg
fdivs
stos
jb
xchg
jmp
add
mov
dec
ret
jecxz
ret
lods
mov
adc
jmp
lea
dec
imul
inc
lods
inc
mov
inc
add
scas
dec
and
icebp
pop
dec
in
ds
adc
sub
out
push
inc
clc
lea
lcall
and
push
cmp
rclb
ljmp
test
ficomps
test
ret
lret
adc
adc
jbe
fcmovne
push
inc
xor
aad
mov
or
out
or
add
cmp
jb
push
pop
sub
scas
call
add
sbb
std
fdivp
int
or
and
lock
ds
rcrb
mov
inc
jns
popa
adcl
cmc
lock
or
lea
xchg
out
lea
cmpsl
repz
repz
add
fsubrs
mov
dec
scas
sbb
stos
jae
xor
jbe
dec
addl
adc
pusha
xlat
icebp
xchg
jl
jmp
mov
xchg
cmp
in
popf
xorb
or
addr16
mov
sub
jl
stos
mov
jp
xor
cmpsl
pop
mov
push
repz
xchg
ret
jmp
add
mov
dec
xchg
inc
cwtl
push
mov
adc
cli
icebp
dec
inc
ret
mov
test
pop
ljmp
jbe
dec
sbb
ds
les
pop
mov
jmp
aaa
mov
popa
jp
fsubs
push
lds
add
push
pusha
jo
xor
mov
es
jne
cmp
das
out
insb
cltd
add
xor
fcmove
mov
insb
loopne
ja
sub
sbb
hlt
movsl
mov
sbb
call
ds
xchg
gs
mov
cmp
push
lock
add
std
mov
cmc
and
mov
jmp
lods
sbb
fnstsw
sbb
jb
popa
popa
cwtl
fldl
fwait
adc
stc
or
jge
test
inc
push
repnz
in
repnz
sbb
pusha
xchg
ja
leave
or
push
cmc
mov
dec
add
push
sub
rcr
add
aaa
test
in
es
cmc
jb
xor
push
dec
cmc
mov
cmp
scas
sbb
mov
pushf
inc
pop
das
lods
shl
lock
stc
subl
rcrl
add
outsb
xchg
je
in
ja
xchg
in
loopne
sbb
mov
std
and
fbld
das
stos
mov
fstpt
roll
cs
imul
adc
data16
les
rcr
adc
or
stos
loopne
mov
in
rcll
enter
or
loopne
nop
sahf
lock
mov
mov
in
jo
xor
push
mov
fistps
and
mov
popf
mov
fbld
stos
sub
mov
cltd
movsl
and
dec
cwtl
inc
notb
stos
fsubr
or
mov
andb
mov
sbb
into
loopne
cltd
jp
mov
mov
out
push
cs
mov
sahf
in
movsb
ds
dec
xor
inc
xor
add
adc
cmp
or
jle
sub
mov
cli
clc
call
ds
testb
xchg
xchg
push
jg
icebp
cmp
rorb
push
push
pop
mov
hlt
int
push
xchg
xor
fsubrs
cmpsb
and
subl
xor
lret
enter
pusha
add
fmull
ljmp
mov
push
loop
xor
ds
add
aas
pop
sub
xlat
sbb
pavgb
popa
sub
pop
push
cmp
adc
call
inc
mov
jle
std
mov
loope
and
pop
aaa
xchg
mov
pop
imul
and
lret
add
in
xacquire
push
mov
push
sub
das
push
rolb
imul
pop
test
loope
jb
daa
inc
mov
mov
xchg
pop
enter
sahf
sub
pusha
or
daa
mov
push
shll
aaa
popa
stc
inc
fdivrs
aam
cmp
jmp
clc
jmp
scas
outsb
cli
fcmovne
push
adc
int
sbb
ja
cltd
sbb
icebp
mov
cs
in
arpl
loope
es
fbstp
cmpsl
inc
push
xor
push
xlat
xchg
pop
sbb
gs
cmp
lods
sbb
jp
mov
xchg
sbb
pop
js
hlt
in
xchg
push
cmp
dec
ret
in
loope
push
divl
stos
test
mov
jnp
mov
xchg
push
sar
mov
and
push
test
sbb
pop
or
adc
xlat
cmpl
and
test
retw
jo
into
stos
pop
xor
mov
ss
xchg
pop
lretw
out
pop
mov
cmc
data16
push
rorb
outsl
out
ljmp
out
repz
xor
addl
aaa
mov
pushf
lret
push
inc
scas
xchg
ffree
dec
loopne
test
xor
scas
stos
es
adc
jle
mov
int
jb
cli
xor
in
fadds
in
jg
or
ja
sarb
dec
inc
pop
out
and
dec
sub
push
or
data16
mov
lret
mov
sub
repz
cmp
sub
sbb
ret
hlt
mov
ret
repz
dec
rcll
xor
pop
lahf
push
aaa
out
or
xchg
and
push
push
out
aaa
test
les
icebp
cmpsb
sbb
cmp
ret
cld
inc
cmp
mov
fwait
inc
pop
mov
cltd
scas
fnstsw
push
cmp
fwait
and
sarb
into
dec
stc
scas
in
ret
inc
cltd
aaa
in
xor
xor
push
inc
pop
int3
xchg
lcall
std
test
imul
imul
popa
fsubrs
mov
gs
aad
mov
sbb
fists
fisttpl
cmp
xor
xchg
mov
ret
sbb
push
fstpl
dec
lcall
adc
xchg
jmp
adc
push
push
push
inc
add
jmp
ja
adc
dec
mov
int3
dec
popf
jg
cmp
arpl
sub
mov
lods
sbb
stc
das
ljmp
insb
faddl
loopne
scas
enter
imul
loopne
jle
jecxz
add
add
in
fisubs
cs
dec
inc
xchg
ss
fimull
or
xor
dec
popa
loopne
clc
xchg
inc
stos
out
incl
and
inc
or
iret
test
add
adc
adc
lcall
or
fwait
sub
loope
push
sarb
dec
and
mov
out
cmp
fstl
in
mov
sbb
lcall
add
es
int
ror
mov
mov
dec
js
and
popf
les
test
fiadds
cmpsb
daa
outsl
xor
gs
rcl
leave
inc
stos
or
sub
mov
push
loopne
repnz
in
mov
adc
inc
shl
loop
sbbb
and
pushf
dec
fnstcw
add
scas
out
mov
in
sbb
es
mov
repnz
or
sbb
push
mov
js
jl
fs
test
jmp
jg
or
ljmp
cmp
fnstenv
push
push
imul
mov
int
mov
mov
arpl
mov
lcall
sahf
ja
dec
and
mov
cwtl
mov
or
insl
fimuls
rorb
adcb
pop
xchg
lret
cltd
out
ljmp
mov
rcrb
and
jg
call
xchg
push
aas
enter
ficoms
mov
in
push
dec
movsb
xchg
sbb
mov
pop
dec
cs
out
int3
adc
adc
mov
xor
cmp
dec
pushf
sub
rcrb
loop
and
pushl
inc
clc
cltd
sbb
xchg
push
ret
mov
lahf
stc
cmpsb
pop
mov
ret
sti
xor
out
sbb
cltd
sbb
xor
xchg
push
scas
dec
std
inc
insl
sub
cmpsb
jnp
inc
lret
std
cs
test
popl
xchg
imul
dec
js
push
dec
sub
xor
setno
leave
jb
mov
das
or
in
mov
mov
inc
int3
das
test
lcall
jo
mov
mov
or
xchg
xor
push
sti
cmp
and
add
mov
xchg
or
push
aaa
cmp
push
mov
sub
add
in
jae
xor
lret
push
mov
add
popf
dec
sti
xorb
roll
leave
popf
lock
inc
mov
push
nop
scas
pop
sbb
cmp
je
push
dec
mov
sbb
aad
sbb
and
adc
jp
pusha
cmp
fildll
int
imul
sbbl
pop
mov
dec
sub
xor
inc
pop
mov
mov
movsl
je
push
fstpl
aad
icebp
jge
popf
insl
clc
mov
out
fisubrs
inc
std
jge
rorb
jns
add
inc
divb
ror
stos
int3
js
je
cli
repz
cmpsl
pop
lea
insb
mov
test
insb
andb
outsb
jmp
in
mov
jnp
loopne
cmp
add
sbbb
xor
js
inc
dec
inc
jecxz
sub
or
imul
push
out
adc
lahf
push
rcrb
jl
popf
es
enter
dec
imul
sub
sub
out
mov
adc
adc
cmp
int3
jp
fwait
push
dec
imul
mov
icebp
scas
les
and
clc
int
jmp
sub
jp
lods
lcall
jne
push
xor
dec
sbb
cltd
add
pop
mov
mov
inc
mov
jle
and
fs
popf
xor
jne
subb
imull
lods
dec
sbb
mov
xchg
cmp
xchg
ss
imul
pop
jg
fstps
adc
pxor
insb
insl
mov
xchg
xchg
dec
and
pop
jo
lds
cli
repnz
or
push
mov
mov
or
outsl
fwait
inc
pop
movsl
rcrb
mov
inc
lods
das
test
mov
testb
test
mov
shll
pusha
cli
dec
outsb
mov
mov
loop
mov
in
dec
jbe
jl
out
aad
pop
mov
loop
ret
adc
jge
jge
cmpsl
jns
pop
xchg
mov
sar
in
mov
dec
adc
mov
mov
pop
inc
inc
stos
or
faddp
nop
adc
outsb
lods
fmulp
fists
in
jo
repz
jo
or
cmp
xor
pop
arpl
dec
fisttpl
pop
sbb
jmp
fisttpl
cltd
and
jb
mov
adcl
imul
mov
in
inc
mov
and
ret
out
jbe
cmp
leave
or
aaa
and
jne
dec
lahf
jp
or
mov
mov
add
andb
jbe
cwtl
jno
adc
mov
lods
sarl
rol
sarl
pushf
sbb
inc
push
imul
test
lea
push
push
xorb
push
sbb
and
dec
mov
xchg
ret
sbb
popf
cwtl
jae
mov
jmp
mov
loopne
pop
pusha
lea
dec
ss
dec
inc
sub
ret
cmp
inc
add
cmp
sub
cmp
pop
xchg
cmp
lahf
xor
push
lahf
push
mov
daa
push
ret
mov
add
or
cmp
inc
mov
loop
sub
loopne
jge
mov
loope
cmp
cltd
loope
in
and
mov
mov
xor
xor
scas
cmp
cmp
adc
add
leave
fbld
xchg
addr16
int3
jbe
or
inc
test
push
adc
push
stos
sti
and
lret
pusha
pop
mov
arpl
pushf
and
lods
cmp
imul
sbb
and
clc
dec
dec
lret
in
subb
dec
push
and
arpl
xor
jp
lret
inc
push
push
sbb
cmc
es
sbb
push
dec
xor
add
xor
adcl
fninit
mull
int3
andl
sbb
mov
lret
adc
dec
or
movsl
mov
ljmp
enter
decl
xor
push
push
push
mov
daa
cmp
in
movl
push
stos
and
xor
aas
jnp
andl
push
fcmovb
pop
std
cmpsl
xor
jns
mov
jle
jle
popa
fldcw
sbbl
mov
popl
adc
call
xchg
leave
pop
shrb
pop
dec
jle
and
icebp
mov
adc
add
push
int
iret
enter
fcmovnu
xor
stos
ficomps
pop
mov
pop
andb
shll
push
stos
jnp
icebp
inc
ficompl
adc
mov
jmp
jle
sbb
xchg
cli
test
repnz
push
lods
xor
inc
push
xor
mov
aad
cmp
addr16
data16
ret
movsl
inc
cmpsl
add
loopne
push
xchg
jge
dec
dec
push
mov
fistl
scas
outsl
fidivl
xor
fdivrl
jb
push
mov
daa
fsubrl
mov
insl
dec
pop
daa
std
cmp
xacquire
inc
or
daa
xor
xchg
dec
mov
mov
xchg
inc
nop
ret
hlt
rorl
push
repz
or
pop
cltd
inc
lret
cs
adc
je
fiadds
cld
testl
add
shl
mov
sub
add
jl
int
or
out
xor
shlb
aad
int3
mov
jmp
aaa
out
addr16
sahf
es
or
jp
xchg
movsl
repnz
lret
jno
sarb
sub
push
inc
mov
and
xor
pop
sbb
push
mulb
popl
fwait
push
xrelease
or
sub
sahf
xor
dec
dec
cmp
test
je
pop
sbb
pop
adc
test
cmc
inc
cmp
cmc
repz
dec
jns
dec
or
adc
pop
fsts
arpl
push
sbb
dec
push
orb
arpl
push
cwtl
shll
dec
sub
mov
sbb
fwait
aam
cwtl
dec
mov
cli
pop
cmp
sub
repnz
mov
adc
mov
idivl
in
nop
inc
mov
inc
pop
sbb
mov
pop
aaa
and
test
jns
cli
mov
ret
outsl
rcr
push
adc
jno
mov
ffree
in
mov
sbb
stos
cwtl
cmp
dec
in
nop
add
jo
push
jp
xchg
mov
test
mov
or
lret
xor
mov
insl
jnp
inc
push
sbb
add
push
fnstenv
or
jmp
sub
mov
popa
movsb
jo
stos
or
ret
outsl
cltd
popf
push
pop
in
cmp
addr16
sub
orb
pop
addl
notb
cmp
movl
lods
js
push
sti
mov
sbb
xchg
into
xorb
pop
in
enter
mov
xchg
loop
sbb
sub
fbld
in
mov
cli
cli
fistps
dec
shlb
addr16
lret
pop
jecxz
jg
das
insb
adc
mov
imul
mov
cli
push
pop
lods
cmpsl
rolb
add
test
and
aas
push
repnz
xlat
mov
mov
dec
clc
sahf
add
lret
and
inc
add
adc
cvtps2pi
cmp
pop
jne
mov
mov
xor
pop
inc
mov
xor
pop
test
jo
fldl
mov
int3
dec
mull
push
xor
subl
xchg
mov
je
lahf
or
in
fldt
cs
mov
popa
xchg
popa
rcll
cmpsb
dec
dec
mov
cmp
cmp
or
nop
rol
jg
test
mov
movsb
push
inc
or
or
mov
daa
fisttpl
outsl
dec
push
cld
xor
movsl
sub
xor
iret
test
sbb
adc
inc
inc
ret
xchg
mov
shll
leave
xchg
jb
loopne
pop
dec
mov
into
loop
mov
mov
add
mov
push
into
xchg
mov
sbb
pushf
out
loopne
mov
in
es
jl
sysexit
jns
enter
dec
sarb
out
rcl
shrl
mov
aad
adc
pop
cwtl
imul
mov
sub
add
sarb
scas
fldcw
pop
jo
sub
loopne
mov
outsb
mov
nop
jge
push
fidivl
enter
xchg
push
pop
or
pop
out
mov
xchg
loopne
test
mov
sti
jbe
scas
ret
lea
jg
subl
jns
daa
mov
add
cmp
std
inc
mov
mov
scas
and
xchg
adc
sbb
pop
jns
daa
xchg
mov
and
dec
cmpb
pop
xchg
mull
in
js
test
fcmove
shll
call
xchg
fs
xchg
add
add
scas
cmp
out
pop
loop
xor
lods
cmp
pop
push
imul
inc
scas
and
scas
jne
loope
push
jbe
call
out
repz
push
sbb
lods
shrb
aaa
sub
sti
scas
jo
cmpl
and
mov
sbb
pop
imul
inc
xchg
mov
sub
cld
and
pop
pop
jg
insb
orl
jae
pushf
rorb
lods
xor
ljmp
dec
dec
loop
ds
nop
ret
lods
cmp
inc
or
aam
jae
jns
jne
and
cmp
mov
inc
repnz
lods
and
pop
cmp
ret
mov
push
sub
xchg
jns
xor
das
hlt
lret
pop
cmp
imul
push
loopne
dec
loope
xchg
fcoml
push
lds
aaa
repnz
pushf
data16
adc
add
inc
dec
wbinvd
and
adc
and
inc
scas
xchg
push
sbb
popa
mov
pop
cmp
jbe
push
cld
clc
fsub
jg
xor
mov
les
aad
dec
loop
sbb
xchg
stos
cmp
sub
and
dec
push
cld
inc
sub
ret
or
pushl
mov
outsl
fdivrs
add
lds
or
bound
push
adcl
jmp
aam
fs
das
faddl
and
in
sbb
sub
mov
jbe
outsl
inc
nop
out
popl
ret
lret
gs
jl
lock
jno
inc
and
cmp
pop
sub
sbb
xor
add
nop
pop
jecxz
ret
stos
mov
jl
sbb
push
sbb
xor
xchg
jmp
dec
xor
dec
shl
cmp
sub
sahf
rorl
and
ljmp
icebp
addl
sbb
cmpsl
adc
xor
mov
cmp
push
xor
sbb
mov
jecxz
sub
cmpl
xor
and
addr16
mov
stc
insb
mov
fs
loope
popa
mov
push
std
sbb
std
inc
pop
ljmp
mov
adc
popf
jns
sbb
lcall
mov
subb
push
rcl
push
or
fsubrl
or
push
xchg
filds
rolb
fs
adc
leave
jno
sub
std
ficoms
sbb
rcll
jne
outsb
fxch
outsl
cld
cmc
cmovbe
into
sbb
adc
rcrb
and
mov
aas
ret
add
insb
adc
dec
xlat
mov
fs
xor
pop
jnp
test
enter
loopne
push
jo
mov
add
inc
cmp
hlt
jge
mov
or
dec
add
fs
shrl
testl
dec
xchg
das
out
inc
add
mov
nop
out
jecxz
mov
cs
cmp
stos
sub
xchg
mov
pop
in
pop
add
jg
stc
push
jle
cs
xchg
mov
bound
mov
mov
jp
push
dec
mov
or
push
mov
repnz
not
xor
jo
pop
xor
std
adc
cmc
ja
mov
lds
insb
fldenv
je
dec
and
add
fsubrp
cmp
lods
in
ret
dec
ret
jno
jb
cmp
pop
cmpsb
imul
jp
cmc
adc
in
insl
mov
loopne
pop
xchg
lcall
mov
xor
cli
sub
inc
jle
in
sub
mov
adc
shll
xor
addr16
mov
jmp
in
ret
into
push
jno
pop
adc
test
sti
jl
dec
inc
int
popf
mov
cmc
cmp
out
add
or
int
mov
adc
bound
mov
lods
lahf
fwait
in
or
adc
les
test
jns
fsubr
loopne
inc
movsb
mov
in
pop
out
nop
adc
lds
rcrb
pop
loop
jbe
out
cmc
xchg
adc
arpl
int3
jecxz
or
aam
negl
inc
popf
std
lcall
inc
ja
or
sub
imul
aad
inc
roll
pop
lods
into
or
jnp
loope
dec
mov
mull
sar
add
push
dec
xchg
loopne
jecxz
adc
adc
imul
jbe
or
std
mov
dec
out
roll
cmpsl
add
cmp
push
lea
into
and
icebp
iret
shrl
cmpsb
fldt
or
xor
int
das
rclb
fwait
or
aas
cmp
mov
pop
js
subb
cwtl
leave
cmpsl
sahf
dec
in
repnz
jns
push
test
lret
inc
sub
pop
xchg
andb
push
push
xor
jns
and
fisubs
push
popa
xchg
xchg
and
stos
mov
inc
pop
pop
mov
nop
hlt
adc
jno
sbb
subl
xchg
js
inc
loop
sbb
push
push
movsl
cmpsl
inc
aas
repnz
mov
jno
push
add
mov
imul
xor
aaa
mov
add
dec
mov
jns
cmp
idivl
out
popa
fs
ljmp
cmp
sarl
dec
mov
push
mov
lcall
xor
pop
jp
xchg
dec
shll
ret
push
adc
lock
movsl
loopne
pop
lods
push
stos
mov
shl
int
arpl
cmp
shlb
and
pop
or
push
fmuls
cmpb
or
push
fsubrs
xchg
aaa
icebp
mov
cld
cmp
cmp
cmp
mov
ja
xor
pusha
mov
pop
inc
cmp
arpl
add
sbb
dec
ljmp
les
in
push
sbb
cmc
mov
or
adc
sbb
clc
xchg
add
imulb
orb
sbb
xor
dec
mov
xor
es
jecxz
pop
aaa
push
dec
pop
cmp
mov
lahf
mov
inc
cmp
ds
cmp
xchg
pop
mov
or
call
sbb
xchg
mov
in
nop
outsb
mov
dec
shrb
push
nop
adc
pop
in
jge
cmc
cltd
ds
jmp
pop
pushf
cmp
shll
aas
jne
sbb
sub
adc
sbb
mov
pop
arpl
fcoml
push
inc
cmpsb
popa
sarb
sti
jns
enter
pop
ss
cmp
sbb
sub
repz
lods
mov
or
fadd
inc
fiadds
call
or
mov
mov
cld
cmpsb
lret
sub
push
cmp
push
sub
adc
sbb
sti
cmp
test
add
pushf
leave
stc
enter
pop
push
push
xchg
pop
push
pop
push
fisubs
std
ss
hlt
sti
or
mov
shll
lahf
ret
pop
lods
ret
pop
jns
dec
jle
jne
nop
addr16
jns
test
ret
sub
adc
xchg
enter
enter
jl
andb
mov
cmpsl
lcall
lahf
jl
push
xchg
ja
sarl
mov
inc
dec
addr16
pop
sbb
loop
test
fdivrl
jg
imul
cmp
fs
fwait
lock
out
gs
push
inc
aas
out
xorl
shll
xorb
mov
and
mov
dec
and
xchg
fistpll
cs
mov
movsl
orl
pop
xchg
xchg
stos
push
loopne
jnp
and
shll
xlat
out
clc
mov
xchg
pop
cmp
mov
add
ds
add
push
cltd
imul
or
ret
mov
jnp
icebp
mov
iret
mov
shll
inc
sub
adcb
sbbb
in
pop
bound
adc
in
inc
aam
push
cmp
mov
dec
test
xchg
inc
inc
cmp
jl
faddl
jl
daa
mov
das
js
inc
sti
xchg
dec
in
inc
sbbb
or
pop
jno
sti
sbb
sbb
pop
add
and
lahf
jo
push
mov
mov
xchg
push
push
test
or
and
or
cltd
mov
cwtl
jge
cld
sbb
jae
addb
loopne
sub
ds
or
int
or
lcall
jge
xchg
nop
imul
inc
pop
dec
loope
leave
pop
mov
sub
adc
test
inc
and
outsb
test
fdivrs
jecxz
sbb
pop
mov
jne
aaa
xor
stos
cmpsb
lds
into
push
xlat
addr16
push
mov
in
adc
and
xor
sub
sbb
mov
cltd
and
repz
adc
int
push
mov
loopne
pop
lds
pop
sarb
jae
imul
add
jns
iret
and
dec
mov
enter
mov
lea
jo
mov
sub
or
insl
xor
rorb
push
mov
pop
jmp
jp
adc
in
jb
ret
adc
dec
push
inc
dec
mov
dec
dec
add
call
or
fs
xchg
or
loope
sub
fidivl
and
mov
mov
pop
mov
mov
testl
jbe
gs
daa
pop
xor
xchg
jge
out
jge
test
pop
addb
and
and
lock
inc
sub
arpl
mov
lret
and
cmp
enter
cmpsl
loope
sub
mov
and
dec
test
sbb
cltd
mov
out
out
push
jae
ret
shl
fdivs
outsb
ret
andb
dec
in
cwtl
cld
adc
add
jae
frstor
add
sbb
in
test
mov
inc
out
loop
push
sbb
bound
push
movups
xor
push
xlat
push
mov
push
mov
test
mov
push
dec
pop
jno
push
cmc
cmp
in
fidivs
imul
ret
pushf
mov
arpl
movsl
inc
push
mov
push
add
mov
outsl
pop
test
aad
jle
xchg
in
pop
outsl
mov
xchg
and
rorb
jecxz
loopne
mov
push
in
adc
mov
mov
mov
mov
mov
pusha
push
add
and
dec
ss
adc
std
inc
push
mov
cmp
sbb
int
loope
xor
jg
dec
cld
push
xchg
dec
cmp
dec
sbb
nop
or
cmpsb
pop
xchg
imulb
arpl
es
ja
xchg
sub
addr16
mov
inc
dec
addb
lods
xchg
lcall
dec
ret
mov
fiadds
int3
fidivrs
rcll
jbe
cmp
ss
lock
jae
push
loope
cmpsl
sbb
or
push
jle
and
fildll
cmp
ret
div
xor
add
testb
jno
sub
sub
or
xchg
sbb
mov
xor
xchg
inc
add
cmp
push
or
pop
les
jb
dec
cld
push
insb
adc
xor
sbb
jo
cwtl
ljmp
movsl
push
and
mov
add
xchg
insl
mov
xor
es
push
mov
jge
jg
aaa
or
jecxz
jl
and
jne
cmp
divb
sbb
and
lea
pop
lahf
lea
rorl
lds
insl
adc
popf
aas
jnp
mov
jmp
and
dec
inc
loopne
xchg
sbb
stos
and
xlat
into
js
repz
lret
mov
pop
test
adc
pop
leave
mov
jg
mov
std
dec
adc
pop
bound
sbb
test
aad
stc
inc
flds
addr16
pop
imul
cmpl
sub
sub
xchg
sbb
rorb
xor
and
mov
add
out
mov
mov
arpl
fwait
add
cmc
outsb
mov
packuswb
nop
std
inc
std
test
lods
jo
inc
cld
pop
inc
jl
mov
add
insb
inc
sbb
enter
mov
xchg
pop
imul
sbb
pop
mov
loop
jae
mov
sbb
in
xor
popf
mov
out
cmp
call
sarl
mov
push
outsb
pop
lcall
lock
pop
mov
mov
fbstp
mov
jg
cmp
pop
lock
sub
cmp
mov
inc
loope
mov
fcoml
jge
sbb
incl
pop
outsb
je
inc
fdivrl
inc
ret
jle
test
imull
push
adc
leave
xchg
jae
insb
pop
dec
iret
mov
icebp
ficompl
lcall
mov
sbb
shll
stos
lea
push
addr16
adc
test
rcr
push
mulb
mov
enter
push
jge
jbe
test
data16
mov
mov
pop
inc
add
andl
push
dec
mov
sbb
scas
xor
addr16
cmp
jns
cmpsb
loop
pop
out
mov
lods
and
mov
ffree
imul
mov
push
xchg
in
add
popl
pop
cld
nop
pop
out
sub
pop
pushf
scas
dec
nop
xchg
dec
cmp
push
rcrb
xchg
inc
dec
cmpsl
adc
sbb
icebp
mov
push
sub
push
stos
pusha
fstps
jmp
push
adc
dec
push
lock
sub
xchg
pop
leave
dec
fmulp
xchg
pop
mov
test
and
jmp
je
into
cltd
pusha
jae
pop
faddp
cwtl
pop
test
mov
sub
mov
cmc
sbb
mov
xchg
or
sbbb
rorl
cmp
pop
cli
mov
lahf
sub
loopne
dec
add
cli
mov
in
movsb
outsl
outsl
push
pop
aad
movsl
shll
icebp
and
add
jnp
xchg
std
jmp
adc
shl
mov
jmp
sbbb
notb
mov
cmp
dec
push
mov
les
pop
xchg
sub
or
mov
pop
ss
adc
xchg
js
imul
mov
jecxz
scas
pushf
iret
aad
out
pop
sbb
xor
fisubrl
std
fnsave
pop
push
adc
je
jg
pop
fistpll
aas
lcall
mov
subl
out
pop
repz
mov
test
xchg
xchg
mov
shll
mov
pop
jns
jp
cltd
sbb
mov
scas
pop
ret
gs
mov
lahf
xchg
aam
addr16
mov
cmp
xchg
sahf
test
inc
adc
mov
push
sub
fistl
cmpsl
push
lods
jbe
movsl
lcall
adc
mov
adc
mov
out
and
dec
nop
mov
xchg
xchg
add
xor
cmpl
ja
xchg
ret
ss
shrb
cmp
hlt
test
inc
in
mov
shll
je
negl
mov
xlat
outsb
sbb
ja
lods
fcomip
mov
and
mov
push
cs
enter
cli
nop
das
out
sub
push
mov
push
sub
adc
pop
pop
or
xchg
in
fmull
mov
test
push
outsl
pushf
dec
jmp
inc
rcl
scas
pop
insb
xchg
xchg
leave
jmp
xchg
push
rclb
mulb
shl
insl
cmp
mov
adc
and
jbe
dec
ljmp
rcrl
imul
fildll
mov
sarl
xor
mov
lods
shlb
sbbb
push
icebp
rol
sbb
xor
cmc
jecxz
mov
jo
cs
fcmovb
sti
pop
aas
sahf
mov
jge
or
sbbb
cmovs
jo
ret
imul
adc
jae
pop
loopne
daa
mov
mov
jl
adcl
hlt
insb
adc
jnp
push
mov
inc
inc
or
xchg
insb
inc
andl
aas
lret
imul
out
inc
or
mov
ja
sub
jg
adc
push
xchg
and
xchg
sbb
pop
xlat
inc
xor
das
loopne
xchg
lods
dec
ja
mov
mov
push
inc
xor
pop
pop
cmp
xor
outsl
fwait
push
dec
loope
cmp
addb
mov
add
push
loope
sbb
pop
adc
mov
adc
jae
push
dec
aas
push
xchg
int3
mov
lret
pop
sub
mov
or
push
je
orl
cmp
xchg
pop
jns
pop
movntps
aad
adc
pop
imul
ret
mov
test
cld
mov
xor
outsl
sbbb
sbb
mov
aam
jmp
cld
dec
jge
pop
pop
jmp
adc
rcrl
pop
pop
fidivl
xchg
jp
insl
daa
pop
sar
outsb
fdivl
mov
add
push
addb
inc
mov
out
mov
sub
imul
jno
lret
pop
fcoml
pop
mov
out
repz
outsb
mov
fldenv
add
or
test
daa
and
adc
push
loopne
jl
in
mov
popa
xchg
fiaddl
insb
mov
mov
sbb
repnz
repz
jmp
lret
pop
push
jge
mov
cltd
push
aam
sti
popf
aaa
lods
mov
pop
mov
sbb
push
adc
shr
push
adc
aam
mov
fstl
sarl
pop
mov
push
sub
imul
scas
popa
hlt
daa
add
or
scas
out
shll
out
inc
notl
pop
mov
je
dec
push
adc
pop
or
test
mov
sbb
xchg
imul
stc
fcomps
aaa
scas
imul
outsb
nop
cmp
icebp
mov
lods
sub
jmp
dec
sbb
adc
jecxz
sbb
jecxz
xor
and
mov
popa
rol
mov
and
inc
out
imul
cli
push
pop
movsl
movsl
arpl
ds
push
jmp
in
aas
jg
aad
testl
cmpsb
sbb
mov
out
lods
sbb
push
add
ret
in
jmp
ljmp
ljmp
imul
shlb
mov
hlt
xchg
xchg
int
ret
adc
or
ror
cmc
popf
add
mov
fbstp
out
clc
aam
ljmp
add
mov
xchg
sub
sbb
adc
loopne
shll
jmp
cld
lods
daa
push
aam
out
mov
and
repnz
ret
subl
mov
adc
or
fidivl
sbb
ljmp
scas
pop
add
outsl
jmp
mov
xchg
adc
cli
mov
pushf
cmp
stos
jo
cmp
dec
xorb
std
mov
clc
scas
test
xchg
imul
cmpsl
pop
jmp
mov
xchg
test
jmp
test
shr
sarl
xor
mov
cmp
out
dec
out
das
sahf
jne
jge
xchg
bound
inc
ja
dec
arpl
sbb
test
jo
and
add
test
xchg
sub
sti
shufps
pop
add
xor
int
scas
lret
inc
scas
adc
sbb
clc
cltd
xchg
mov
jle
mov
mov
call
fnsave
psadbw
sbb
push
pop
stos
push
push
jg
jg
jns
sub
xchg
filds
adc
sarb
repnz
fldl
sbb
mov
push
sbb
call
and
inc
repnz
int
imul
xchg
sub
hlt
pop
int3
xchg
fistl
sbb
std
xor
sbb
xor
xor
das
sub
cmp
mov
ret
sbb
iret
sub
mov
testl
arpl
les
lods
icebp
fisubs
outsl
adc
call
xor
cli
pop
jge,pn
mov
mov
push
jg
inc
lcall
sbb
push
pop
jnp
in
insl
repnz
cmovle
outsb
fdiv
mov
sbb
pop
jp
xchg
or
test
push
fisttps
xor
movsb
mov
mov
clc
in
push
mov
sbb
test
xor
sbb
scas
fstp
sahf
mov
or
test
add
xor
ret
lret
out
adc
cmpsb
and
or
xchg
mov
or
xchg
and
or
sti
push
jg
add
dec
dec
loop
fidivl
fcompl
mov
int3
mov
xchg
outsb
movsb
jecxz
icebp
jp
loope
sbb
ds
test
and
hlt
aad
xor
jne
sub
into
insb
sahf
pop
mov
daa
scas
xchg
sbb
sub
scas
dec
sub
mov
cmp
jp
pop
dec
rol
or
pop
dec
mov
adc
or
and
stc
jecxz
adc
cmp
clc
jl
dec
push
fdivl
inc
pushw
dec
popa
push
cmpsb
stos
das
dec
or
xor
pusha
jl
lret
data16
lahf
movsb
push
dec
dec
movsl
lea
adcl
scas
lret
and
pop
push
rorl
cmp
xor
cmpsb
xchg
or
addr16
pop
lret
mov
pop
in
lods
ja,pt
jb
sbb
cli
pushf
lods
out
rcll
dec
fmull
in
les
hlt
call
and
xlat
inc
iret
fcomi
pop
cmp
les
cmp
fldt
dec
mov
dec
fnstcw
int
idivl
sub
fsubrl
jg
and
js
cwtl
add
or
pop
adcl
cmp
bound
push
call
ss
mov
daa
adc
filds
imul
call
xchg
shrb
nop
sub
xchg
test
sub
aad
leave
inc
jecxz
jae
dec
xchg
hlt
xchg
dec
xor
inc
cmp
cmp
scas
mov
ss
mov
fadds
mov
std
cmpsb
test
imul
dec
or
adc
cld
xlat
shlb
repz
movsb
and
test
push
pop
aas
enter
les
mov
nop
je
aaa
ds
mov
cwtl
lahf
or
add
inc
inc
adc
sub
lcall
lcall
clc
xorb
or
iret
sub
sub
sub
shl
icebp
or
aam
stc
lahf
sbb
repz
lcall
clc
andb
add
movsb
ds
ds
mov
out
clc
ret
jp
loope
dec
andb
mov
inc
jmp
mov
lods
xchg
jno
mov
cld
stc
rorl
mov
push
add
mov
inc
fdiv
push
and
fadds
pop
add
sub
sti
pop
adc
icebp
jl
and
popa
addr16
outsl
and
or
inc
pop
dec
rep
push
out
into
xchg
push
aad
adc
mov
stos
pop
mov
mov
aaa
and
push
icebp
in
jge
cmp
movsb
out
js
jno
ss
add
cmp
mov
nop
ss
out
push
dec
push
inc
dec
and
push
data16
aaa
and
ret
sub
scas
xchg
ds
stos
pop
int
xor
mov
in
test
dec
mov
sarb
subl
pop
cld
mov
aam
jo
jb
ret
test
and
inc
stc
jg
push
in
mov
xchg
rcrl
aas
adc
add
in
inc
stc
scas
or
out
stos
les
xor
mov
test
or
test
js
nop
mov
imul
hlt
dec
into
shrl
dec
loopne
cmp
stc
sub
rorl
nop
jbe
dec
pushf
jno
mov
sbb
mov
das
add
aas
ret
mov
rcll
fists
rep
loope
dec
gs
in
iret
push
iret
in
mov
mov
icebp
jle
int3
add
fwait
mov
push
or
out
mov
mov
mov
aam
xor
xlat
xchg
mov
jp
and
sub
lock
sbb
outsl
fimull
adc
subb
outsb
xor
shll
dec
mov
and
shrl
xchg
mov
push
jnp
cmp
mov
or
enter
mov
ret
mov
test
mov
mov
bound
cs
pushf
push
enter
mov
sub
icebp
pop
idivl
dec
popf
jb
sub
jae
mov
lret
aas
lret
insb
pop
sbb
stos
rcrl
call
incb
lcall
add
mov
mov
mov
sbb
je
xor
out
sub
faddl
push
dec
stos
lods
mov
scas
imul
mov
sbb
fldt
and
inc
insb
aad
imul
adc
mov
or
cmp
or
insl
icebp
push
fs
into
cmp
pop
fsubrs
xchg
daa
stc
adc
dec
mulb
fistps
jg
cld
xchg
sbb
push
mov
add
sub
pop
xchg
pushf
and
mov
scas
sbb
xor
gs
popf
push
das
jbe
jno,pt
loopne
dec
add
cmp
inc
sbb
fstpl
fwait
loope
enter
mov
and
testl
lock
mov
rorl
repnz
and
sbb
inc
lds
dec
pop
ds
scas
mov
push
xor
mov
and
mov
out
cmp
insl
ja
clc
popf
mov
sarl
repz
call
xchg
scas
pushf
mov
jns
push
int3
icebp
dec
mov
inc
orl
mov
test
mov
rcrb
mov
sub
jmp
imul
loop
mov
mov
sbb
push
out
sbb
out
cmp
inc
jno
mov
pop
shrb
jmp
pop
daa
push
cltd
adc
cmpsl
or
and
icebp
sub
in
or
roll
ja
adc
adc
imul
pop
mov
sub
and
xor
dec
cmp
pusha
mov
push
rolb
ret
rcrl
cltd
push
leave
stos
out
arpl
jl
rorl
not
hlt
dec
ficomps
push
cmp
pop
loopne
std
sbb
subb
cmc
push
jns
icebp
stos
out
dec
aam
xchg
mov
scas
xor
decl
cmp
rorl
cmp
inc
xchg
loope
inc
push
mov
adc
xchg
mov
adc
out
and
mov
mov
sarl
and
mov
mov
outsl
xchg
in
or
xchg
cmpsl
das
push
sbb
stos
inc
roll
fs
xchg
xchg
sub
dec
loopne
out
in
and
jp
cltd
sbb
jmp
mov
jge
insl
xchg
adc
jmp
movb
aam
out
popf
cmpsb
jne
mov
test
cltd
fadd
dec
cs
cwtl
fdivrp
adc
mov
into
or
push
pop
push
xchg
fbld
test
aam
mov
sahf
in
and
shl
shl
pop
call
sub
or
add
adc
test
fimull
pop
popf
cmp
jns
int3
lcall
or
in
out
or
or
jp
out
mov
dec
aam
ficomps
pop
mov
adc
out
aaa
and
push
mov
push
and
sub
out
outsb
push
imulb
jno
aam
popf
into
push
hlt
cmp
movsb
test
mov
sub
inc
outsl
add
pop
mov
psubsw
and
das
dec
xchg
mov
stos
push
sub
push
pop
outsb
mov
popa
pop
js
cmp
mov
stos
jle
jmp
cmp
and
push
mov
imul
hlt
sbb
shl
addl
jg
lret
mulb
test
scas
push
sbb
xchg
lcall
sbbb
mov
jnp
pusha
cli
loop
pushf
pop
sub
and
clc
xor
dec
testl
xor
jns
pop
jmp
flds
loopne
mov
push
aam
and
push
insl
cld
push
inc
les
or
xchg
cmp
daa
sbb
add
add
ficoml
sahf
shll
dec
inc
cmp
push
clc
xor
lods
sbb
fimuls
cmpsl
addr16
or
repz
outsl
cwtl
push
pop
pop
sub
xor
sub
stos
lea
adc
and
cmp
sti
dec
push
inc
ret
jmp
rcll
mov
outsb
jo
pop
int3
mov
inc
loopne
pop
xchg
pop
inc
pop
dec
jae
mov
xchg
xchg
mov
rolb
mov
add
loope
test
push
fcmovu
pop
push
andb
xchg
loopne
pop
out
push
dec
pop
std
sub
std
sbb
xor
aas
pop
pusha
add
or
xor
orb
pop
xchg
ret
mov
or
jns
mul
push
scas
dec
sti
fildll
push
ss
jne
imul
xchg
mov
jge
push
stc
sar
mov
xor
inc
pop
inc
stos
xor
sbb
out
xchg
sub
cmpsl
pop
mov
xchg
add
pop
rcrb
mov
mov
inc
mov
hlt
mov
jp
shlb
inc
fucomip
pusha
sbb
fisttps
sbb
push
mov
pop
xchg
ret
xchg
scas
xor
mov
imul
xchg
pushf
cli
pusha
or
xor
mov
movzwl
dec
outsl
xlat
pop
sbb
sub
mov
sti
push
lea
push
sub
iret
jl
push
fwait
sbb
jno
xchg
xor
sbb
loopne
popa
pop
jp
push
inc
xor
and
mov
add
add
dec
inc
sbb
rcll
mov
negl
int3
lcall
enter
fs
pop
sbb
syscall
push
loopne
jno
inc
pop
push
movsb
xchg
cmp
cli
mov
test
les
cmp
mov
jmp
pop
or
add
loope
roll
add
jb
inc
jl
aaa
icebp
or
out
and
cli
add
adc
mov
push
inc
adc
aam
mov
mov
sub
sub
loopne
rcrl
data16
pop
jg
rolb
xchg
ljmp
ja
notw
inc
enter
cmc
xlat
icebp
mov
mov
sbbl
clc
jo
lods
cmp
xchg
push
xor
cmp
inc
dec
pop
inc
pop
fidivrs
or
mov
mov
into
cmp
mov
cmp
mov
mov
mov
mov
mov
jae
pushf
dec
aas
clc
inc
lcall
stos
mov
xor
xchg
scas
xor
push
xchg
das
lcall
cmpsb
mov
or
cmpsb
shrl
fnsave
adc
nop
dec
pop
lret
sbb
lcall
mov
fsts
cmp
aam
push
sbbl
leave
mov
rcl
cmpb
subb
mov
add
bound
xor
add
dec
mov
arpl
sub
dec
cmp
lret
jnp
adc
dec
xlat
rclb
inc
mov
xchg
fadds
shl
mov
out
mov
into
icebp
adc
jecxz
dec
cmp
int3
cmpsb
lret
fwait
xchg
dec
repz
mov
sbb
pusha
rcl
loope
hlt
sti
dec
fmuls
aad
pusha
and
sarb
inc
in
dec
sbb
or
push
ret
pop
rorl
mov
cmpsb
cmp
shlb
clc
sbb
dec
sub
cmp
mov
aaa
inc
repnz
mov
movsl
and
insb
sbb
inc
aas
jg
inc
fdivl
sbb
xchg
sbb
pop
mov
push
and
push
ror
adc
push
jb
iret
fimuls
aad
add
sbb
outsb
pop
or
fsubs
lea
js
idiv
pop
imul
and
aad
mov
mov
mulb
mov
int
pop
xor
xorl
stos
or
or
loopne
mull
rol
cmpsb
pop
mov
loope
cmc
mov
sbb
jns
fimull
clc
sub
dec
cmp
xchg
shr
push
fsqrt
adc
pop
xchg
je
imull
add
aas
inc
xchg
push
push
cwtl
mov
mov
aad
addr16
lret
pop
jmp
add
enter
inc
pop
push
xchg
out
xor
mov
mov
and
loope
adc
pop
sbb
data16
mov
subb
enter
movsb
stc
std
xchg
fs
sahf
mov
js
sub
pop
popf
scas
mov
push
push
mov
and
data16
daa
xchg
mov
pop
dec
sub
imul
andl
lds
jecxz
push
adc
scas
inc
pop
sarl
pop
mov
xchg
js
jecxz
testb
pop
push
xchg
repnz
iret
leave
mov
pop
js
lods
push
sti
clc
pop
inc
sbb
cmp
in
mov
xchg
mov
es
fisttpl
mov
adc
pop
outsb
test
dec
sti
loope
or
fidivs
jge,pn
cmp
stos
fbstp
xchg
movsl
or
clc
push
dec
jecxz
jne
sahf
inc
es
shrb
mov
mul
cmc
push
gs
cmc
pushl
and
jle
dec
fs
dec
and
push
daa
jne
xor
jns
je
pop
add
add
cmpb
or
mov
lock
outsl
mulb
mov
xor
ret
sub
xor
fnstsw
scas
jl
inc
mov
jmp
cld
sub
jns
jp
aaa
mov
aaa
mov
or
jge
fwait
cmpsl
or
mov
fmull
pop
or
jns
add
pop
andb
mov
scas
mov
cmpl
jmp
icebp
sbb
es
mov
xchg
and
popa
in
int
jge
pop
lcall
mov
scas
fisttpl
sbb
sarl
dec
aas
cmp
inc
inc
dec
test
xchg
or
cmp
je
lret
mov
mov
sub
fbld
ds
cwtl
push
adc
fnstcw
popf
add
popf
push
lret
test
mov
adc
adc
and
sub
xchg
int3
icebp
push
arpl
rorl
or
sti
scas
outsb
es
fcmovbe
fldl
inc
cmpsl
sbb
or
cmp
or
test
pop
les
or
cmp
mov
ljmp
push
insb
xor
adc
xchg
mov
mov
adc
dec
inc
dec
mov
addl
fwait
outsb
mov
shrb
adc
xor
dec
pop
lret
dec
cmp
into
or
pop
add
rorl
jge
idivb
pop
out
popf
aad
mov
ds
ss
lcall
fdivl
sub
hlt
sbb
sahf
inc
lret
sahf
test
sahf
jne
xlat
mov
or
or
jp
sub
std
xor
and
call
out
ret
inc
jg
add
out
scas
cmp
sahf
inc
test
mov
mov
jge
cmp
xchg
cld
cmpsb
pusha
fcoml
arpl
js
popf
cld
push
push
or
push
add
aad
dec
test
shll
jns
sub
xchg
test
movsb
mov
pop
pusha
insb
imul
xchg
jne
adc
mov
sub
shll
or
das
mov
jl
cmp
out
fsts
xor
jmp
data16
mov
dec
iret
sub
add
loopne
out
xchg
movsb
xchg
or
pushf
shlb
jle
add
fstp
jle
mov
add
xchg
adc
out
xchg
push
push
sub
mov
sbb
aad
xchg
jne
lock
xlat
aam
dec
sbb
mov
sahf
jecxz
lods
xchg
lock
in
cwtl
lret
lods
mov
add
mov
movsl
insl
adc
mov
and
into
mov
in
dec
pop
scas
ljmp
loop
lods
ja
mov
pavgb
inc
pop
pusha
faddp
pop
jge
inc
push
add
fdivrl
push
mov
cmp
lret
add
bound
inc
in
push
hlt
pop
rcl
daa
nop
repnz
add
shrb
cmpsl
sahf
mov
jmp
adc
add
test
mov
ret
sbb
sbb
loope
mov
push
lds
adc
lret
nop
cmpsb
pop
xor
repz
add
mov
mov
dec
xchg
imull
push
jp
cs
scas
repnz
inc
push
int
xlat
nop
mov
inc
inc
pop
movsl
std
negl
es
add
sbb
jns
ljmp
jecxz
cmpsb
jg
std
insl
adc
push
jge
cmc
nop
andl
mov
dec
out
mul
push
arpl
or
call
in
test
add
cs
decb
and
mov
mov
movsb
cmp
sti
orl
loop
mov
push
jns
add
xor
imul
lods
movsb
push
std
adc
fstl
jne
cld
add
fdivrp
cwtl
add
sbb
out
mov
xor
or
bound
nop
push
sub
sbb
jae
add
add
lds
adc
ret
cmp
es
clc
add
mov
xor
pop
data16
push
data16
or
push
iret
cwtl
rclb
int
insl
stos
add
es
fcmovne
cmpsl
xchg
cmpsb
mov
testl
inc
repz
mov
filds
xorl
fstpt
int3
mov
out
push
std
mov
xor
cmp
in
mov
mov
loop
mov
jne
movsb
inc
cmpsl
pushl
adc
aam
and
mov
rcrl
adc
inc
mov
out
pushf
sub
jge
loope
dec
das
jb
mov
jb
fcmovnu
sbb
pop
jg
or
fs
xor
data16
mov
cmpsl
mov
loopne
add
inc
mov
add
pop
mov
std
xchg
inc
adc
das
sbb
push
and
cld
fld
jle
pop
and
scas
test
and
test
xchg
das
ljmp
inc
gs
fidivrl
rorl
inc
imul
sbb
mov
pop
pop
imul
mov
push
loop
inc
sbb
int
xchg
mov
xor
rorl
pop
jnp
cmp
pop
lret
stos
aaa
xor
mov
scas
push
in
sbb
into
mov
shlb
fnstcw
pop
sbb
je
pop
pop
test
adc
aad
flds
dec
pop
ja
loopne
stos
stos
and
scas
xchg
push
or
je
enter
mov
or
adcb
push
push
xor
pop
es
pop
mov
mov
jl
or
jg
or
push
mov
or
popa
jle
ffree
repnz
into
arpl
dec
stc
movsl
icebp
outsb
sbb
test
push
sarl
test
pop
ja
add
stc
push
xchg
jge
mov
push
add
stos
sbbl
mov
jnp
or
loopne
movsb
mov
adc
into
xchg
pop
imul
mov
inc
mov
and
mov
cli
test
enter
push
cld
jg
mov
in
mov
add
mov
sub
scas
lret
mov
jno
ds
bound
pop
cltd
or
mov
imul
sub
sub
movsb
cltd
ds
rclb
jmp
insb
sub
in
jecxz
shll
push
xchg
xlat
fadds
push
mov
jne
or
adc
or
out
jmp
lahf
jg
mov
jmp
or
xor
pop
jg
ljmp
les
xor
ds
sbb
sbb
fimull
xor
or
push
icebp
pop
jbe
bound
test
xchg
fisubs
lock
decb
xchg
mov
add
add
xchg
into
inc
dec
stc
mov
jne
adc
jne
dec
out
lods
icebp
in
fs
cs
bound
out
lods
aam
cmp
push
mov
popf
sub
outsl
xchg
sbb
or
mov
lcall
insl
jno
push
out
outsb
xor
dec
fdivs
mov
aas
vsqrtsd
test
push
in
inc
push
test
xor
daa
pop
jb
pop
dec
sbbb
mov
loope
in
xlat
xchg
popa
and
adc
ret
out
nop
mov
add
mov
fnstenv
scas
mov
sub
mov
repnz
xchg
mov
sbb
xorb
xchg
pop
mov
ja
push
inc
call
bound
in
ja
test
or
mov
popl
and
stos
jg
rorl
sub
add
dec
jb
jnp
icebp
pop
data16
pop
pop
jmp
insb
jp
notb
and
xchg
addr16
inc
aam
pop
lods
andb
stc
ds
addb
and
in
in
shll
mov
dec
xor
jo
out
lods
fcmovnu
mov
out
mov
pop
push
pop
mov
fwait
cmp
jge
mov
mov
pop
sbb
scas
jp
cltd
outsl
or
fsubs
mov
dec
es
jns
lods
lahf
inc
inc
mov
in
sbb
decl
cs
sub
xor
daa
out
stc
scas
jo
test
sub
adc
fldt
sub
xorb
dec
movsb
lods
dec
leave
mov
sub
jg
ret
xchg
std
stc
pop
mov
push
bound
enter
cmp
test
mov
mov
and
icebp
ja
int
inc
out
mov
add
cli
xchg
pop
add
std
sbb
inc
jecxz
insl
out
fadds
gs
lcall
shl
push
sub
and
and
mov
sbb
push
jle
sbb
lock
pusha
sbb
lods
adcb
ds
testb
inc
mov
out
mov
test
or
je
pusha
movsb
lods
pop
mov
push
mov
sbb
repz
sarl
arpl
aam
adc
repnz
mov
lahf
cmp
inc
das
jae
stos
repnz
out
push
jp
and
inc
xchg
mov
xor
inc
fldcw
mov
jo
mov
xchg
sbb
jns
lds
pusha
sti
and
cmp
sbb
push
aad
pop
idivb
push
jae
insb
ss
dec
fdivs
push
inc
pop
lods
loope
pusha
mov
xchg
lock
filds
sub
sbb
cld
jno
mov
push
dec
js
push
in
xchg
ss
xchg
outsl
adcl
xchg
cmp
std
mov
popa
mov
and
rcll
xor
ja
lds
adc
lcall
jb
jmp
pop
push
dec
ljmp
out
dec
sub
adc
dec
inc
fcmove
mov
addr16
adc
inc
dec
sub
movsl
call
or
mov
mov
adc
les
mov
lret
cmp
jl
dec
cmp
movb
sti
cmpsb
dec
test
xlat
jle
dec
mov
in
or
mov
adcb
mov
cmp
fcompl
sub
or
sub
pop
cmp
iret
sbb
loop
inc
iret
adc
out
adc
pop
add
loope
frstor
dec
aas
sub
arpl
mov
fwait
push
adc
pop
xor
cld
adc
pop
lods
adc
out
mov
sub
cmpsl
add
imul
cmpsl
stos
pop
and
fiaddl
es
scas
xchg
pop
shr
or
ret
call
xchg
in
leave
ds
mov
cmc
mov
jbe
mov
mov
into
test
pop
imul
inc
shrb
and
pop
in
testb
cmc
jmp
jle,pt
scas
in
push
ss
inc
stos
cmc
mov
adc
sbb
or
push
clc
and
stos
cmpsl
push
jmp
call
repnz
outsl
adc
lret
inc
lret
mov
in
xchg
jmp
jge
xchg
ret
outsb
pop
imul
mov
inc
imul
movsl
scas
or
and
push
mov
clc
stc
aaa
into
insb
ds
add
es
dec
lods
xor
push
jle
cmp
outsb
xor
mov
lcall
jecxz
xor
mov
xchg
loop
inc
push
fwait
ds
lcall
call
xchg
sbb
mov
cli
push
jmp
jg
dec
mov
jns
lock
add
mov
dec
xor
sbb
push
test
cltd
dec
adc
sbb
add
fmull
dec
data16
aaa
push
push
out
mov
mov
xor
mov
pop
inc
and
mov
std
cmp
popa
pop
lret
stos
ja
repz
xchg
push
pop
cmc
mov
mov
subl
push
jmp
jl
arpl
loopne
or
dec
aaa
xlat
inc
popa
push
stos
jae
cmpl
insl
push
cs
mov
lods
adc
fwait
into
mov
cmpsl
push
or
xchg
mov
sub
sarl
rclb
mov
addr16
dec
cmpsl
xchg
loope
sub
add
jbe
lret
or
mov
popa
jecxz
or
test
and
addl
pushf
mov
inc
loope
push
mov
lds
data16
xchg
or
dec
push
inc
xchg
sub
cmp
loopne
popf
in
pop
mov
push
cs
rcl
mov
shrl
cmpsb
in
push
out
imul
iret
or
mov
sub
shr
int3
adc
addb
xor
add
fsub
inc
sahf
push
cmpsl
inc
adc
les
inc
fdivs
xchg
mov
add
cltd
test
lods
sub
or
mov
ret
in
js
rol
push
repz
xchg
inc
pop
add
sahf
test
roll
xor
mov
add
addr16
popf
ret
stos
scas
push
loopne
mov
out
add
in
push
add
and
pushf
data16
imul
loope
sub
arpl
fcomi
jo
call
sbb
sub
stos
lock
shl
jle
xchg
and
pop
lock
shl
jp
cmp
mov
aas
rol
xor
inc
arpl
jle
mov
int3
jno
mov
inc
in
inc
popa
in
ffreep
push
inc
pop
aad
mov
mov
fiadds
sub
cmpsb
pop
ds
out
cmp
fists
pop
lret
push
lahf
inc
pop
ds
jecxz
test
fisubs
xor
leave
dec
or
or
imul
sub
cmp
in
ret
xchg
sbb
cld
das
insl
xor
ja
mov
scas
push
cmc
jns
lods
and
sbb
sbb
dec
adc
xlat
cli
push
adc
sub
push
fadds
jbe
aam
cmp
mov
loop
outsb
sub
out
mov
cmc
xchg
outsl
adc
mov
in
sub
or
popf
pop
adc
bound
pusha
mov
cltd
mov
test
movsb
incl
sbb
sti
fwait
pop
sbb
push
cmp
sub
fidivrs
xor
push
add
sbbl
popf
lods
scas
mov
fprem
out
mov
xchg
inc
mov
shlb
mov
out
push
jecxz
sbb
imul
arpl
out
fstp
imul
cmp
inc
scas
or
rcrl
xadd
cmp
int
push
sti
xchg
dec
es
insl
into
test
rorl
mov
scas
push
loop
addr16
sbb
adc
lea
xchg
adc
jg
fsubrl
in
lcall
mov
insb
fcmovne
pop
ret
mov
jecxz
stos
push
xor
rcrl
leave
mov
xchg
mov
xchg
je
icebp
mov
and
nop
mov
out
aam
xchg
mov
repnz
cwtl
fwait
int3
pop
insb
in
nop
add
mov
into
xchg
ret
imul
mov
adc
fildl
push
mov
mov
pop
inc
arpl
js
dec
dec
pop
cmp
pop
aad
les
aas
sub
orb
imul
test
jbe
rep
mov
sahf
icebp
cmpsb
movsb
xchg
cli
and
out
mov
add
in
pop
xor
adc
xor
inc
in
cmc
xchg
adc
lods
fldcw
dec
movsl
popf
xor
push
pop
jecxz
nop
gs
inc
dec
add
dec
jl
das
xorl
test
jmp
fldt
lods
sahf
out
xchg
push
enter
stos
push
shr
movsl
xor
mov
dec
dec
mov
add
sbb
add
mov
ret
inc
inc
jb
push
shll
cmp
pop
jg
out
dec
cmovp
xchg
sbb
xchg
xor
mov
pushf
out
and
out
sbb
push
dec
out
mov
and
cmp
xor
jne
mov
push
pop
inc
or
daa
lods
sbb
cmp
ffree
xchg
leave
xor
push
sarl
inc
dec
pop
cmp
or
lret
mov
pop
inc
sub
out
test
scas
loope
mov
mov
push
pop
xor
lcall
test
enter
dec
in
stos
mov
mov
or
aad
imul
mov
call
xchg
data16
xlat
mov
bound
cmpsb
loopne
pop
xorl
sub
jl
jo
ret
xchg
xchg
mulb
aad
es
pop
lods
push
xchg
and
sub
mov
vmwrite
xchg
insl
adc
add
pushf
mov
icebp
mov
push
subl
pop
sbb
mov
inc
cli
js
pop
ja
das
inc
add
xlat
jecxz
jecxz
movsb
test
outsl
mov
and
call
mov
jns
mov
xchg
cli
sti
dec
sbb
xor
popf
add
mov
mov
xchg
sbb
or
movb
scas
scas
insl
ret
push
xor
js
jnp
push
out
mov
ret
push
aam
jb
pop
mov
das
push
push
mov
jge
push
test
mov
lea
pop
in
loop
mov
add
test
out
call
pop
pop
pcmpgtd
in
sub
xlat
icebp
xor
cmp
add
icebp
jb
cwtl
xor
pop
mov
in
lods
std
sahf
ljmp
inc
mov
pop
push
mov
inc
xchg
xchg
scas
xchg
jp
add
repnz
add
dec
xor
add
incl
roll
add
pop
incl
subl
notb
or
xor
outsl
sti
rolb
repz
cmp
cmpsb
ret
movsb
jp
out
rcrl
lcall
mov
ds
fnsave
ret
and
jg
in
jnp
rcrl
xchg
push
mov
in
sub
dec
icebp
aaa
jae
dec
sbb
pop
lock
inc
xor
or
lock
push
sub
or
or
bound
outsl
xchg
push
and
in
je
sbb
xor
push
and
aas
aaa
xor
fcmove
rorl
aas
jnp
pop
xchg
int3
mov
stos
add
rclb
cltd
sub
sti
fdivrl
je
lds
mov
decl
incb
pop
rclb
mov
sbb
aaa
pop
les
jge
add
pop
std
xchg
mov
push
xchg
mov
add
xchg
add
or
pusha
jo
inc
fwait
imul
cmp
mov
lret
xor
or
bound
or
mov
into
jle
pop
aad
sti
jle
pop
sub
test
cwtl
mov
ss
mov
mov
repnz
nop
popa
jecxz
jbe
scas
xchg
sub
xchg
mov
push
pop
in
xor
mov
or
xor
aaa
ret
pop
cmpsb
add
popa
push
insl
sbb
call
xchg
lret
ja
loop
mov
jle
lods
out
jecxz
xor
fs
fisubrl
or
out
cli
jne
add
sti
xchg
mov
into
repz
cld
mov
scas
pop
test
inc
push
decl
ljmp
mov
andb
test
add
mov
adc
and
add
repnz
mov
data16
ret
inc
rep
push
roll
xchg
mov
and
mov
mov
add
loopne
mov
vpshaw
xchg
iret
xchg
mov
inc
ljmp
cmpsb
mov
inc
in
fidivrs
mov
dec
mov
add
iret
pushf
add
xchg
cmc
push
mov
icebp
xor
es
push
jecxz
inc
cmpsl
sub
pop
jle
push
call
add
adc
xchg
mov
jg
adc
pop
in
jno
dec
xor
add
xor
inc
fneni(8087
int3
sbb
jmp
mov
pop
inc
sbb
or
loop
adc
shl
jl
leave
xchg
fs
xchg
das
fmul
pop
cmpsb
mov
xchg
xor
pop
fucom
or
shld
add
mov
int3
sbb
mov
jl
fwait
sbb
fimull
into
xchg
mov
add
xchg
mov
pop
inc
jmp
das
jmp
test
je
sahf
xchg
les
jno
xchg
mov
rorb
adc
jno
test
push
inc
roll
fsubs
cmp
mov
test
mul
xchg
or
mov
mov
adc
xchg
sub
stc
das
iret
and
sahf
mov
xchg
stc
mov
divb
push
imul
mov
movsl
aas
ja
movsb
in
xchg
jle
mov
mov
je
popa
outsl
sbb
dec
mov
push
adc
pop
add
scas
or
out
imul
dec
incb
outsl
sub
sub
ret
jecxz
xchg
imul
aad
jmp
int
les
andl
mov
mov
xchg
or
call
jo
test
jo
popf
jg
or
idivb
mov
int3
mov
sbb
shll
out
repz
dec
mov
xor
movsb
cmp
fcomps
xchg
cmp
xchg
cmp
fisubrl
aas
mov
clc
add
xchg
stc
in
adc
icebp
mov
xor
in
pop
imul
jno
push
lcall
outsb
shlb
in
cli
jecxz
repnz
mov
test
fldcw
dec
scas
out
pop
mov
sahf
lods
into
mov
popa
sub
lods
lcall
rcr
add
ret
imull
pop
or
scas
sbb
lods
enter
jo
xor
adc
sbb
inc
ret
cmp
sbb
pop
test
insl
gs
cmp
popa
fisttpl
add
inc
mov
fs
xlat
mov
repnz
sti
or
dec
xor
es
sbb
out
ljmp
int3
sub
pop
add
in
aad
mov
movsl
test
pop
jp
jecxz
xor
mov
repz
xchg
mov
mov
or
jge
test
lods
movsb
out
out
adcb
bound
into
lcall
aad
push
fcoml
test
dec
jbe
sti
sti
loop
or
cmp
xlat
jnp
stos
in
cwtl
xor
es
out
cmp
and
push
dec
mov
out
aam
pop
mov
mov
aaa
inc
push
push
xlat
orb
cmpsl
xchg
adc
jge
test
std
in
je
call
push
stc
jb
fidivl
adc
mov
mov
daa
mov
movsl
rcrb
daa
repnz
shlb
out
or
mov
pop
mov
shll
xor
sbb
push
mov
jnp
mov
push
dec
icebp
loopne
push
gs
ffreep
xchg
das
cld
lods
jp
dec
mov
popf
add
xchg
sbb
and
and
xor
gs
pop
gs
out
lcall
and
xchg
fcompl
xchg
aad
dec
jmp
push
mov
testl
ret
test
jl
inc
and
idiv
push
ret
ror
pop
sbb
orl
xchg
sub
jno
mov
dec
jge
lods
inc
push
cmp
loope
lods
stos
pop
insb
pop
frstor
in
jnp
call
lret
mov
inc
add
test
lahf
in
jnp
inc
les
cmp
sub
ficoms
lods
dec
daa
jo
mov
push
scas
aas
push
ljmp
movsl
mov
pop
aaa
cmp
shl
inc
sahf
aaa
cli
lods
pop
sbb
divb
scas
les
pop
lret
cwtl
xor
daa
dec
sub
pop
or
inc
push
int3
hlt
jns
inc
sub
lcall
cs
push
or
mov
jecxz
xchg
cmpsl
sub
cmp
adc
add
pop
fpatan
inc
jge
pop
mov
clc
pusha
insb
jecxz
pop
loop
mov
mov
imul
sbb
sbb
cli
inc
dec
sets
fst
jo
repz
push
push
add
xlat
cmp
jle
xchg
rcll
mov
cld
mov
xchg
in
stos
dec
repnz
imul
paddw
in
ret
test
inc
inc
xor
out
dec
sbb
pushf
ja
pusha
ds
push
sbb
mov
test
mov
insb
jp
loopne
xorl
ret
rcrb
das
in
xchg
push
pop
gs
sub
lea
jmp
jnp
xchg
int
loop
jmp
imul
xchg
rorl
lret
inc
xchg
push
sbb
fisubs
outsl
daa
fcomps
stc
out
pop
pop
xchg
into
and
sub
es
jns
jbe
add
sub
outsl
push
cmc
ja
inc
mov
cmc
sub
cmpsb
add
stos
cmpsl
pushf
je
adc
mov
dec
jb
rclb
inc
pusha
lds
lcall
imul
clc
mov
repz
adc
sub
pop
icebp
xchg
popa
cmc
cwtl
mov
cmp
fbld
sub
cmp
pusha
jmp
pop
sub
xchg
fidivrl
xlat
jb
xchg
jp
mov
lods
xchg
xchg
decl
mov
fistl
push
psrad
iret
jno
adcl
cld
dec
dec
jmp
lret
or
fwait
out
pop
repz
or
mov
repz
shrl
roll
das
add
cmpsl
test
popa
int
loop,pn
mov
pop
mov
dec
mov
push
or
cmovnp
jnp
cwtl
xchg
mov
xlat
movsl
jns
lock
add
scas
pop
and
mov
ds
mov
push
dec
inc
lahf
ds
movsl
sub
pusha
and
push
dec
rorb
es
arpl
jl
xor
lret
and
fisttpl
mov
out
xchg
xchg
mov
ja
data16
xchg
and
jb
pop
push
cwtl
ficoml
rolb
jg
inc
imul
ss
int3
out
mov
or
outsb
mov
dec
or
lods
xor
cs
lret
xchg
push
jo
cltd
cmpsb
sti
loope
cltd
data16
add
pop
loop
cmp
xor
int3
dec
das
xchg
add
loope
aaa
stos
js
in
movsl
nop
scas
mov
lret
pushf
test
mov
xchg
adc
fcomps
jae
into
or
inc
inc
jg
sbb
adc
jg
xchg
mov
and
xchg
clc
and
or
add
js
cltd
pop
mov
push
in
adc
fsubrl
out
bound
arpl
pop
or
push
add
xor
std
or
lods
cmp
popf
movsl
sbb
scas
pop
mov
mov
es
insb
cmp
jns
popf
adc
jno
ja
add
cmp
lods
jecxz
add
icebp
movsb
out
sbb
js
sbb
sub
daa
cwtl
mov
xchg
sbb
mov
adc
sarl
aaa
popf
add
test
add
fdivr
or
pop
mov
dec
sub
mov
inc
stc
adc
pop
adc
iret
repnz
and
call
xchg
clc
xor
sbb
js
stos
subl
sarb
dec
inc
in
push
outsl
xchg
dec
jne
push
repz
fsubs
stc
sbb
call
or
lret
rcll
push
rcrl
inc
not
pop
fdivrs
push
push
scas
and
out
lret
push
inc
cmp
or
daa
mov
mov
lahf
jecxz
xchg
into
and
int
fildl
subl
add
mov
in
mov
sar
pop
sub
out
rcrb
call
pop
out
pop
aam
mov
dec
pop
shlb
xchg
or
lcall
dec
sub
test
rorl
xlat
test
jne
cli
ficomps
jecxz
inc
sti
xchg
mov
call
lcall
aaa
push
shll
pop
aaa
inc
push
in
cltd
inc
jg
xchg
sbb
and
sub
sub
adc
cwtl
mov
sbb
add
nop
das
fs
inc
xlat
mov
call
les
adc
scas
and
sti
popf
mov
sar
ret
sub
sbb
inc
xchg
call
gs
arpl
cli
sub
adc
jmp
mov
xchg
shr
adc
pop
sahf
sub
xor
and
mov
xchg
mov
mov
sbb
and
popf
imul
sbb
lcall
call
dec
and
out
jbe
in
jns
das
pop
aas
push
ss
insb
add
jnp
jmp
pop
in
mov
clc
inc
ret
js
pop
popa
sub
sarl
pop
aad
sub
nop
int
cltd
dec
xchg
in
inc
sahf
xor
jae
add
pushl
pushf
cli
lcall
in
scas
dec
cmp
test
push
and
pop
or
push
push
in
and
mov
shl
aaa
in
lahf
andl
sub
adcb
cmpsb
dec
das
pop
push
in
int
sbb
xor
mov
loope
mov
and
lods
je
das
add
push
adc
inc
mov
daa
ret
hlt
pusha
jle
clc
mov
pop
rcr
into
sarl
mov
fimull
lds
push
inc
fwait
lock
lcall
lret
xchg
jecxz
popa
mov
sub
nop
sub
daa
and
or
je
pop
xchg
into
add
ror
xchg
out
packssdw
aas
inc
mov
cwtl
outsl
cmpsb
jns
sub
jo
pop
inc
test
out
sbb
mov
pop
and
cmp
and
pop
out
stos
into
std
jg
inc
jmp
and
mov
stos
movsb
rorb
ljmp
mov
jne
push
dec
jnp
jle
imul
mov
cmpsl
push
shll
or
sub
jae
and
cmp
jns
xchg
jno
or
divl
das
data16
test
repz
repnz
ds
jge
push
orl
cmp
hlt
imul
push
jmp
movsb
ljmp
jb
lret
pop
adc
outsb
push
ret
clc
test
pop
call
aaa
xchg
sub
sti
push
out
ljmp
add
scas
lock
popf
cmp
dec
loope
int3
outsl
pop
sbb
inc
sub
mov
xchg
inc
rcl
mov
cmp
pop
push
gs
push
mov
add
mov
pop
add
bound
movl
lods
jne
mov
and
xor
adc
rcrb
dec
pop
nop
popf
les
push
add
and
arpl
mov
rorb
adcl
shlb
or
fcompl
mov
sub
imul
add
push
lahf
cmp
mov
out
inc
pop
xor
xchg
xchg
jae
mov
imull
gs
ds
cld
lds
inc
cli
shll
mov
xchg
fstpt
and
out
fldcw
dec
rep
adc
loope
push
lahf
in
cmpb
dec
mov
fldenv
jmp
fsts
adc
mov
ja
repz
je
adc
or
js
scas
pushf
les
adc
mov
ret
mov
cli
sbb
xor
lcall
dec
cmc
cld
test
sbb
jp
fmul
mov
popa
sbb
inc
lock
and
mov
adc
jbe
dec
js
sbb
pop
jecxz
add
ljmp
sahf
ficompl
frstor
mov
xchg
in
dec
pop
xchg
inc
ljmp
sub
jmp
and
add
jbe
jbe
fildll
mov
idivl
ljmp
mov
adc
cmpsl
outsb
push
out
mov
rclb
or
lcall
adc
rclb
std
inc
jle
fs
mov
out
and
insl
jne
imul
outsl
ret
orb
jae
xchg
sbb
sub
mov
pushl
add
mov
push
mov
or
test
mov
pushf
push
andl
xlat
test
mov
loop
push
push
lock
sbb
inc
icebp
add
xchg
jmp
push
cmp
in
mov
adc
shr
das
add
jb
xorl
lods
pop
fwait
imul
addb
sarb
add
bound
xor
cli
repz
mov
repz
mov
popa
xor
std
xchg
fldt
in
pop
movsb
divb
jg
lret
push
mov
cli
lahf
testl
lret
jmp
push
jb
or
orb
in
adcl
movsl
test
xchg
pop
aam
push
cmpsb
fimuls
sub
call
fcoms
mov
mov
andl
xor
arpl
and
ja
push
testl
out
cld
lods
and
mov
loop
adc
adc
jl
mov
xchg
ret
push
jge
pop
cmpsl
cli
lds
aas
mov
call
cmp
push
es
fwait
xchg
mov
and
int3
sub
fdivr
psubd
repnz
push
pop
pop
pop
leave
sub
push
sarl
in
ja
push
dec
jnp
sahf
fwait
sub
repz
movsl
inc
icebp
ds
mov
bound
jbe
xchg
data16
stc
xchg
mov
jnp
ret
mov
bnd
popa
mov
outsb
iret
dec
cli
and
repz
lahf
pop
cld
cmc
mov
jmp
and
in
mov
fistps
mov
scas
sbb
pop
add
movsb
test
pop
or
mov
in
mov
jecxz
bound
mov
cmpsb
jb
push
leave
pop
mov
lods
and
mul
test
mov
in
pop
mov
mov
fs
daa
in
incb
ljmp
aaa
daa
mov
dec
adc
mov
mov
fstpl
stos
mov
shll
and
inc
mov
xchg
and
cs
lahf
rclb
push
dec
adc
add
in
sti
out
inc
jbe
push
mov
mov
add
jae
xor
jge
dec
jge
fsubp
sub
in
mov
push
lods
mov
mov
jp
call
jecxz
dec
add
push
or
inc
mov
adc
add
loope
add
xchg
xor
cli
sbb
dec
lret
push
movsl
dec
jmp
push
push
repz
jae
fldl
jmp
inc
gs
mov
sub
sarl
test
push
and
pop
rorl
mov
or
xor
iret
adc
call
in
mov
inc
ret
pop
mov
jecxz
fsubl
repz
xlat
xchg
sbb
inc
scas
lock
mov
jbe
cmp
or
dec
sbb
lret
xchg
push
pop
and
push
add
xchg
and
int
out
xor
rorl
movsb
push
or
adcb
add
cmp
aaa
stos
fdiv
xchg
fstpt
sbb
dec
sahf
push
fwait
cmp
pop
push
popf
dec
pushf
sar
mov
fdivl
std
jl
cs
aas
iret
jle
idivl
lea
jmp
aad
add
popf
push
int3
mov
add
mov
xor
pop
bound
push
lds
inc
popa
add
addl
adc
or
mov
movb
popa
mov
negb
arpl
pop
xor
out
mov
jae
jge
pop
jl
inc
push
mov
sti
lock
jl
test
jmp
roll
lcall
xchg
cmp
enter
int3
xor
adc
call
nop
xchg
fs
mov
mov
cmp
shll
mov
xlat
stc
push
test
or
cmpb
dec
fildl
push
xor
sub
sbb
xchg
sbb
jmp
lods
xchg
repnz
nop
mov
ja
jmp
add
sub
cmpsb
fsts
mov
adcb
jle
mov
jl
lock
mov
pop
mov
fs
sbb
cmpb
imul
pop
xchg
add
cld
sti
movhps
mov
shl
insl
mov
xchg
mov
cmovl
adc
daa
sbb
inc
mov
dec
push
popf
das
add
and
aas
popf
or
push
aam
lret
pop
pop
pop
mov
pop
mov
int3
or
imul
insb
leave
imul
push
xor
pop
mulb
xchg
rcl
pop
mov
jecxz
or
mov
add
xor
pop
loop
push
sbb
sub
pop
jp
jecxz
push
xchg
mov
add
cs
cmc
rcrb
mov
rcl
or
enter
push
push
les
js
mov
in
or
ja
rcrb
adc
cmp
mov
push
cltd
pop
addb
xlat
adc
jmp
and
add
push
pop
in
mov
loopne
fimuls
pop
cmp
lods
scas
ds
movsl
movb
fimull
mov
dec
js
sbb
outsl
decl
notl
lret
mov
mov
and
insl
loop
into
or
popa
mov
cmpsl
sub
jae
sub
xor
mov
test
pusha
add
pop
test
add
push
stc
addb
addr16
rcrl
push
hlt
jno
sub
push
xchg
jb
cmp
cmc
push
push
mov
out
jle
dec
dec
cmp
lods
and
xor
adcb
xor
stos
test
incb
lods
pop
mov
incl
mov
lahf
mov
sbb
cwtl
mov
mov
pusha
mov
mov
jbe
pop
jae
jo
bound
aam
fwait
sbb
xchg
lock
add
sbb
pop
push
xchg
pop
scas
pop
pop
sub
ss
ror
jmp
mov
jae
xor
outsl
jns
add
mov
idivl
inc
sahf
in
jl
push
mov
or
push
cmpsl
cwtl
cli
push
sub
jg
sbb
mov
xor
and
stos
clc
pop
addr16
pusha
lcall
add
clc
dec
aaa
scas
mov
or
cmp
fcomps
mov
lds
fisttps
lret
sub
sarl
or
dec
rcrb
mov
in
imul
inc
int
mov
cmp
in
push
je
inc
lcall
bound
mov
cs
dec
movsl
aaa
mov
inc
imul
mov
add
scas
sbb
jecxz
mov
xchg
aad
movsb
mov
mov
repnz
mov
cltd
out
out
les
xchg
sarb
lcall
push
xchg
mov
pop
xchg
cmp
pop
popf
inc
jne
mov
and
dec
xor
in
inc
pop
sti
mov
mov
popa
lret
sahf
insb
and
xor
decl
add
shrl
or
inc
stc
adc
outsl
adc
mov
stos
icebp
inc
mov
mov
and
xor
mov
movsb
xchg
xor
pushf
loop
cmp
or
pop
jg
arpl
push
sbb
pop
push
aas
sbb
pop
pop
add
mov
notl
sub
das
faddl
dec
das
movsl
orb
pop
sub
rcr
pop
dec
repz
dec
cmp
push
and
movsb
test
inc
in
xchg
push
into
and
lcall
aas
pop
xchg
loop
test
adc
jle
mov
call
adc
push
repnz
cmp
jmp
mov
lcall
aad
adc
out
or
lcall
pop
dec
or
and
imul
clc
dec
stos
pop
into
cmp
xchg
xorl
or
cwtl
dec
movsl
mov
imul
xor
mov
mov
js
mov
in
mov
insb
push
cmp
and
negl
xchg
and
addb
div
add
or
scas
repz
clc
mov
lods
pop
lahf
sbb
mov
lret
mov
out
jo
daa
sbb
inc
movsl
jle
test
fdivr
jae
inc
jnp
pusha
je
jno
leave
mov
in
or
loope
sub
cmc
lret
and
or
ljmp
dec
sbb
cmp
jae
mov
sti
idiv
jbe
sbb
and
add
es
pusha
mov
push
aad
mov
cmp
mov
adc
test
pop
or
clc
paddb
lds
jmp
cmp
pop
mov
call
and
adc
mov
test
stos
adc
or
xchg
mov
dec
mov
jg
outsb
push
loop
fisubl
pop
rclb
push
xor
daa
int3
inc
mov
or
in
roll
dec
stos
in
add
pushf
sbb
addr16
in
cmp
sbb
xor
and
pop
mov
and
imul
stc
ficoml
pop
lahf
xchg
cmpsl
fists
inc
in
ret
lahf
mov
mov
push
sub
cmpl
cmp
out
dec
inc
std
or
mov
pop
push
sbb
mov
repz
jg
xor
sbb
mov
or
push
stos
jno
sub
jmp
popf
jmp
lods
jecxz
inc
mov
mov
inc
cmpsb
in
jmp
jno
sbb
xor
lret
inc
cmpsb
mov
outsb
dec
push
in
adc
xchg
insb
hlt
mov
sbb
push
or
sbb
add
inc
jne
adc
leave
ss
lcall
adcb
inc
aad
sbb
jle
shll
loop
push
in
stc
sub
jb
mov
adc
stos
inc
xor
pop
daa
icebp
push
mov
sbb
inc
das
test
movsb
cs
add
and
add
out
aaa
add
xor
fldenv
rcrb
pop
in
jecxz
ja
rcrb
jo
sarl
sbb
shrb
jp
xor
xchg
jle
decl
xchg
repz
hlt
ror
arpl
ss
xor
iret
dec
into
daa
ja
shlb
cmp
lret
sub
push
repz
nop
jae
ds
jle
xlat
add
in
imul
mov
and
sbb
adc
aas
adc
fstps
dec
fists
mov
aas
test
fidivl
or
ss
or
into
pop
aaa
test
adc
adc
push
movsb
stc
mov
sub
addr16
pop
popa
cwtl
pop
push
jbe
add
sarl
pushf
ret
push
sub
aaa
movsl
popaw
insb
inc
mov
adc
xchg
xchg
ret
aaa
ss
dec
pop
adc
xchg
insb
shlb
aas
mov
int3
and
sub
std
adc
adc
int3
pop
cmp
repz
jmp
and
jbe
repnz
fistpll
hlt
loopne
out
pop
jl
mov
scas
cmp
stc
or
out
insb
sbb
jle
std
mov
orb
pushf
ljmp
mov
sbbb
popf
mov
aas
inc
lea
jl
jnp
iret
daa
cmp
add
sarb
fimuls
ds
xor
xor
sub
lods
std
out
pop
or
test
push
shl
add
mov
dec
sub
ficomps
jecxz
cmc
popa
out
sbbb
sbb
decl
aas
pop
xor
cwtl
popf
sahf
fimuls
sub
enter
test
jp
pop
adc
cmpsl
je
mov
adc
xchg
cwtl
and
lock
les
ret
xor
or
adc
jg
push
pop
lods
sub
and
sub
adc
pushf
stos
pusha
jns
rcl
les
cli
imul
or
aad
adc
xchg
sbb
out
ds
pop
loop
daa
mov
popa
jbe
loopne
jmp
pop
jmp
fildl
aad
mov
mov
cmpsl
jne
cmc
fnstenv
jae
insl
test
adc
mov
leave
cmp
mov
pusha
ds
cmp
bound
lds
mov
xchg
roll
outsb
mov
sbb
rcrl
pop
lods
cmpsl
xlat
pop
jb
stos
jg
int3
xor
jnp
insl
jl
scas
nop
and
jl
incb
cmp
loop
jl
fmull
in
sbb
jbe
lcall
inc
ret
mull
sub
adc
outsb
pop
std
testb
pop
pushf
or
inc
mov
test
jns
or
mov
xor
sbb
xor
mov
leave
mov
and
push
sbb
cmp
lret
pop
jg
loop
mov
cwtl
jno
mov
push
shrl
xor
sub
insl
mov
negb
bound
mov
cmp
fnsave
push
clc
mov
xchg
dec
pop
popf
sahf
cmc
repz
sbb
out
inc
das
inc
sahf
adc
mov
fdiv
jmp
cmp
outsl
int
push
cmpsb
add
and
mov
dec
iret
fsubl
je
dec
pop
mov
jbe
sub
cmp
shlb
out
cs
xchg
dec
xor
cltd
mov
loop
mov
cmpl
rcl
out
stos
mov
in
and
sbb
mov
ljmp
pop
xor
cmp
xor
jbe
jp
cmp
sarl
mov
fwait
pop
and
lcall
gs
sub
ljmp
inc
lret
sub
xlat
outsb
cmp
mov
fs
insb
xchg
hlt
fdivl
adc
out
adc
fcoms
add
push
push
je
das
aad
fsubrl
sbb
arpl
adc
out
test
xchg
imul
jmp
movsl
push
push
aaa
xor
jbe
leave
sub
and
adc
pop
push
fs
sub
js
ret
xchg
fwait
mov
out
orb
lcall
or
adc
test
call
mov
pop
and
mov
mov
lahf
cmp
and
xor
lcall
in
jmp
and
or
mov
mov
cwtl
leave
movsl
lock
pushf
adc
jecxz
add
xchg
bound
ret
or
cmp
out
push
insb
addr16
sub
cmp
mov
xor
mov
cli
jle
test
add
stc
xor
cmp
push
mov
mov
inc
aam
push
pop
shr
mov
mov
mov
inc
aas
lcall
nop
stos
xor
lret
xchg
int3
push
mov
arpl
rcrl
mov
testl
or
xlat
cmp
aas
jne
or
out
movl
nop
dec
aas
in
ret
mov
lret
lea
lahf
mov
leave
in
icebp
mov
xchg
notl
lcall
sbb
jg
repz
mov
push
xchg
adc
jno
shrb
push
pop
push
sub
scas
in
shll
gs
mov
scas
mov
repz
or
pusha
dec
push
inc
andb
cmp
adc
pop
jmp
cmpsl
mov
mov
lods
mov
into
insb
mov
popl
xlat
mov
xchg
lods
in
mov
clc
stos
stos
lea
dec
sbb
adc
lret
rcl
std
jp
pop
inc
or
or
call
mov
js
lods
mov
shrb
sbb
xchg
scas
arpl
fidivl
cmp
pop
cltd
sbb
sub
and
dec
ss
cmp
xlat
andl
xor
push
mov
pop
xor
mov
test
or
mov
mov
stos
jp
xchg
mov
dec
ss
scas
pop
fs
aad
or
int
mov
jg
int
cmc
push
push
dec
iret
dec
and
nop
and
add
sbb
push
ds
sub
jno
out
add
lcall
xchg
cld
data16
xor
and
and
lds
mov
sub
pop
inc
dec
cmp
push
mov
add
dec
push
pop
xor
insl
ret
inc
sbb
pop
dec
inc
movsl
movsb
cs
leave
outsb
fimull
fcoms
outsl
and
ja
inc
adc
dec
repz
leave
cli
inc
cmp
mov
out
or
mov
and
mov
mov
nop
adc
and
mov
xchg
dec
xorl
out
iret
lret
sub
leave
pop
mov
mov
xor
xchg
mov
stc
push
aaa
and
insb
mov
pop
lret
cmp
cmpsb
pcmpgtd
addr16
mov
sbb
mov
ja
fwait
cltd
or
mov
sarl
mov
imul
test
cmp
mov
xchg
push
or
cmc
push
out
shll
out
add
jns
inc
ds
jb
sub
lret
mov
jne
pushf
xchg
push
mov
xchg
lahf
dec
push
mov
jnp
jne
dec
mov
jmp
mov
jle
repz
and
popf
lds
and
push
fs
push
push
cltd
jecxz
cmpsb
jmp
sub
dec
ret
stos
js
fs
mov
lods
jg
mov
test
lret
insl
dec
jecxz
repz
push
cltd
jns
in
mov
inc
xchg
imul
fs
adc
inc
inc
add
into
jno
maskmovq
idivl
out
int
pusha
jmp
gs
dec
loopew
mov
stos
roll
cmp
pop
cwtl
lcall
cld
mov
inc
or
int3
les
jle
test
data16
jnp
test
in
iret
jnp
xchg
loope
cld
adc
lea
sub
pop
addr16
jmp
sbb
mov
push
stc
push
pop
xchg
cmovb
sbb
into
movsb
mov
xchg
loopne
rclb
jne
arpl
jle
mov
xor
out
dec
pop
loopne
je
pop
test
or
andb
xchg
ficoml
mov
in
add
dec
shll
fwait
in
out
scas
push
cmp
and
test
sub
repnz
aas
mov
dec
out
pop
xchg
int
loopne
shll
test
push
imul
dec
outsb
gs
mov
mov
xchg
pop
mov
jecxz
jo
xchg
xchg
lods
aaa
flds
jns
out
push
dec
insb
push
xchg
lahf
imul
out
roll
aas
inc
push
pop
push
sbb
loope
shlb
mov
and
jne
aad
adc
ds
dec
test
inc
xor
sahf
and
add
cmp
push
mov
xchg
sahf
fadds
push
mov
mov
adc
cmp
sbb
inc
test
or
icebp
mov
fiaddl
icebp
popa
push
jbe
push
jbe
gs
ja
pop
inc
lret
mov
inc
xor
xchg
mov
add
xchg
out
fnstsw
add
rorb
mov
xchg
rcrl
cmp
orl
inc
pop
jb
pop
loope
mov
jmp
mov
lret
imul
addl
jae
fnstsw
xchg
idiv
testl
bound
mov
xchg
sub
pop
test
mov
pop
mov
xchg
xlat
sbb
ret
mov
leave
pop
icebp
sub
mov
mov
imul
fcom
xchg
mov
push
jp
mov
and
xchg
push
shr
aas
push
ss
shrb
in
jg
sarl
lock
mov
sbb
and
shl
outsb
fs
ljmp
int3
cmpsb
or
push
loope
cltd
xchg
out
or
or
push
lret
mov
xchg
add
or
dec
std
mov
dec
out
cld
pop
jmp
outsl
data16
push
clc
xchg
lods
pusha
sbb
andb
scas
outsb
adc
mov
mov
ret
inc
testl
pop
push
lret
or
jge
sub
pop
test
push
dec
or
inc
mov
aaa
mov
in
subl
mov
adc
int
test
add
add
jae
xor
aam
daa
into
inc
cmp
jmp
fs
pop
sahf
ficomps
jo
mov
cmc
daa
pop
sub
mov
arpl
xchg
push
inc
enter
cmp
pusha
add
xchg
adc
outsl
jge
int
xchg
call
cs
mov
jg
negl
repz
mov
fistl
int3
stos
es
jge
mov
ds
fadds
or
sti
fistps
cmp
loope
jae
adc
or
cmpsb
cmp
das
xlat
in
lahf
push
ffree
repz
or
negl
push
cmp
xor
xchg
mov
jecxz
mov
cwtl
pusha
pop
add
inc
add
mov
mov
dec
xor
lret
daa
ja
pop
add
rcr
stos
mull
and
lock
adc
es
or
cltd
xchg
push
add
inc
push
inc
pop
mov
mov
ret
in
int
jmp
adc
mov
pop
ffree
negb
sub
aas
add
int
add
das
mov
popa
lcall
repz
fists
pop
sahf
mov
addr16
dec
aad
and
dec
or
jno
adc
pushf
pop
lods
insl
andb
cmp
push
outsl
imul
andl
dec
ljmp
subb
fistpll
movb
dec
push
test
cmp
fcmovbe
cmp
pop
mov
lahf
aad
or
xor
aad
je
pop
inc
inc
dec
aam
jns
cmp
xlat
push
in
les
aad
stos
lods
push
sub
mov
cmpsl
mov
inc
inc
dec
ficompl
cs
push
jns
rcrb
jl
iret
push
adc
popf
jl
std
adc
loopne
add
mov
add
ret
inc
mov
pop
out
mov
imul
push
mov
mov
lea
ja
and
fs
pop
or
mov
sbb
pop
jo
das
mov
pusha
xchg
pusha
sbb
fisubrl
sti
or
inc
xor
mov
mov
cld
mov
lea
pop
push
aaa
shll
lret
sbb
popa
push
test
fistps
xchg
js
xchg
loop
push
push
xchg
jl
push
je
jno
shrl
fldcw
pop
cwtl
into
or
jge
fadds
rolb
pushf
mov
jmp
sub
ljmp
repnz
or
ret
pop
shlb
ss
mov
add
scas
jnp
and
ret
cmc
bound
pop
push
jns
jecxz
lret
scas
test
insl
push
pop
in
mov
xchg
loopne
sti
mov
push
xchg
les
jne
xor
jno
and
lcall
mov
mov
lds
insw
xlat
inc
scas
adc
ret
mov
fdivr
adc
jnp
push
inc
xchg
push
cmpsl
lods
xlat
pop
hlt
iret
fldl
add
dec
xor
mov
leave
cwtl
movsl
pop
sbb
mov
lods
js
pop
push
pop
push
inc
push
insl
jg
xor
orb
pop
pop
data16
gs
or
pusha
test
fldenv
xchg
or
dec
or
mov
or
mov
adc
cwtl
inc
pop
mov
dec
clc
lcall
dec
sub
pop
push
mov
inc
jl
mov
mov
pop
add
mov
popf
cld
in
adc
sub
inc
or
into
sahf
push
mov
adc
and
inc
dec
imul
fsubrs
jns
in
mov
sbb
ret
pop
pop
jns
jo
loopne
and
dec
lahf
ljmp
inc
fstpl
ljmp
xor
sahf
sti
ljmp
addl
das
loopne
mov
fisubrl
in
mov
int3
mov
jnp
add
repnz
xchg
cwtl
jo
xchg
xor
mov
xorb
cs
mov
mov
push
scas
insb
lahf
addb
mov
mov
repz
inc
out
pop
out
stos
cwtl
dec
mov
mov
ss
sub
xor
mov
xchg
lret
rclb
movsb
push
sbb
cmp
arpl
shrb
inc
mov
data16
xchg
push
test
xchg
xor
push
leave
repz
dec
es
mov
js
or
inc
sub
inc
lret
dec
and
ret
stc
and
mov
les
mov
or
cmp
xchg
pop
or
mov
pop
mov
or
cli
sub
mov
or
xor
dec
ljmp
fsts
dec
sbb
je
aad
cs
pop
dec
adc
inc
andl
dec
enter
and
xchg
stos
popa
ffree
push
jecxz
sbb
sbb
inc
dec
test
imul
jge
popf
push
xor
xor
mov
sbb
les
stc
enter
push
xor
sti
cwtl
pop
jne
adc
stos
inc
or
ja
mov
mov
pop
pop
lret
jle
fptan
lea
test
push
xor
ficompl
mov
nop
test
pop
xor
mov
sti
jl
aaa
xorl
popa
or
test
sub
sbb
push
sub
mov
jnp
xor
fidivrs
test
test
loop
push
std
pop
or
hlt
add
loop
iret
mov
repz
push
fcom
rclb
push
sub
in
aas
popf
bound
loope
cmc
push
lret
or
stos
fcmove
mov
loopne
repz
aad
scas
imul
popf
add
out
xor
mov
js
lods
and
lods
pusha
cmp
out
mov
mov
cli
cmp
xor
fnstcw
jno
xorb
test
sbb
xchg
or
and
or
imul
outsb
sub
push
dec
pop
inc
mov
push
pusha
inc
mov
xlat
aad
jg
dec
popf
jb
jp
iret
sbb
cmc
adcb
adc
dec
xchg
cmpl
cvtpi2ps
mov
js
lcall
jp
lock
jo
sbbl
lods
aas
ljmp
mov
inc
push
or
out
sub
lahf
enter
mov
mov
jl
inc
out
mov
add
cld
mov
xor
push
cmp
and
or
stos
mov
mov
scas
mov
jle
adc
xchg
add
jmp
dec
mov
imul
enter
pop
cmpsb
iret
imul
shl
mov
cmp
xor
cmp
mov
dec
cs
xchg
push
icebp
push
push
adc
mov
add
fiaddl
push
mov
dec
mov
aam
popf
inc
sbb
mov
repnz
mov
jmp
adc
sbb
negl
cs
mov
jb
loop
push
cs
addb
and
push
pop
dec
sub
in
test
sub
and
push
out
mov
shrl
mov
or
roll
out
into
fisttpl
cmp
pusha
add
xlat
xor
adc
pop
mov
pop
aaa
inc
xor
xchg
cld
jae
sbb
out
xchg
in
cmp
cmpsl
pushf
jmp
sbb
sbb
inc
cmpsb
push
test
adc
mov
out
pop
xchg
sub
mov
and
cmp
and
xchg
fldcw
cs
mov
test
cmp
mov
dec
cmpsb
inc
mov
pop
pop
mov
cmp
inc
in
push
xchg
jb
lods
and
xchg
loope
jns
outsb
stos
inc
xchg
fildll
loopne
lds
sub
add
rcrb
outsb
cmp
pushf
xchg
dec
dec
iret
mov
lcall
mov
push
lcall
mov
dec
lahf
cmc
aam
dec
int3
stc
sbb
jbe
in
sub
push
dec
adc
mov
adc
fcompl
dec
cmp
push
out
stos
aaa
sbb
mov
xchg
inc
mov
xchg
mov
cld
mov
adc
sbb
mov
and
or
push
dec
in
xchg
hlt
mov
rcr
sbb
xlat
repz
xor
outsb
cld
cltd
repnz
push
loope
pusha
icebp
jne
sub
mov
ret
sbb
xchg
xorb
xchg
shr
mov
push
jmp
std
out
jae
push
xchg
sub
or
dec
cwtl
es
pop
pushf
cmpsb
jae
fdivr
xchg
pushf
and
add
inc
lcall
fsubrs
arpl
test
popa
je
pop
int
mov
in
lea
fcmovnu
jg
idiv
int3
jae
cmp
mov
out
mov
or
or
out
or
rorl
mov
out
es
xchg
lods
push
mov
xchg
adc
pop
xchg
mov
divb
fisubrl
fdivrl
movsb
xchg
imul
inc
stos
nopl
call
popa
pop
andl
mov
sub
mov
mov
jb
push
mov
sub
and
xor
cld
arpl
btr
sub
dec
mov
gs
push
mov
xor
loope
pusha
jl
xchg
mov
dec
mov
dec
jnp
jp
xor
ret
add
jmp
rorl
jecxz
aas
enter
sub
sbb
cmc
enter
push
call
mov
dec
add
xlat
filds
mov
mov
cmp
js
cmp
das
out
jbe
adc
out
out
jg
inc
sahf
jecxz
pop
xchg
xchg
mov
pop
add
int
mov
and
jns
int
or
orb
sahf
dec
fldenv
sub
or
sub
dec
pushf
movsl
scas
outsl
flds
dec
loope
jle
mov
mov
rol
andb
sub
xor
push
push
dec
fistps
orl
push
jno
sbb
sbb
add
js
fs
mov
repnz
ret
and
mov
mov
shl
push
push
mov
gs
add
jo
rcl
mov
sbb
fdivl
mov
mov
imul
xchg
sbb
in
lods
mov
adc
sbb
pop
pop
dec
xorl
pushf
mov
adc
test
in
repnz
aaa
dec
xor
adc
or
cmpsl
inc
sbbl
call
or
pop
jo
ficoml
sub
lcall
aas
insl
aad
lret
pusha
enter
add
subl
mov
jecxz
adc
xor
lahf
out
in
mov
pop
sbb
movsl
test
xor
pop
daa
push
sbb
mov
out
mov
mov
es
cmp
sahf
mov
notb
inc
fwait
insb
jl
jl
fs
mov
jb
fmull
setne
mov
movb
mov
push
push
and
icebp
hlt
mov
iret
jmp
sub
arpl
enter
jg
lahf
fdiv
cmpb
sarl
clc
popa
dec
pop
xor
out
or
sbb
and
xor
hlt
movsl
or
sub
pop
aam
and
sbb
pop
gs
stc
in
mov
call
in
push
insb
mov
sub
mov
testb
je
frndint
pop
psrld
fwait
mov
and
xchg
jmp
bound
sub
ja
mov
add
pop
pop
or
inc
popf
add
sub
imul
iret
dec
xchg
leave
and
add
jmp
outsl
sbb
mov
lods
cmp
push
shll
fucomi
int3
lock
cmp
sahf
sbb
into
out
imul
cmpsl
inc
aas
mov
stos
sbb
cmp
fmuls
jns
adc
data16
push
inc
daa
xor
pop
jb
adc
cs
jecxz
add
cmp
out
xchg
cwtl
repnz
cld
cmp
shll
xchg
jnp
pop
inc
sbb
dec
jae
fs
ror
dec
inc
and
mov
mov
xchg
ja
fdivrs
fisttps
notl
out
sti
pop
xor
push
pop
push
and
sbb
insb
aaa
into
sbb
fimuls
cmp
icebp
cmpl
xchg
mov
lret
jmp
xchg
xor
es
fcmovnbe
fistl
add
and
lods
outsb
inc
pop
cmp
sub
out
cmpsl
or
test
repz
adc
xor
push
and
adc
fbstp
xchg
sbbb
shl
push
mov
fstl
lcall
mov
pop
xor
jb
jnp
sarb
loope
jnp
test
test
shll
out
push
outsb
lock
fnstcw
jg
adc
lds
imul
in
dec
jns
cld
imul
pop
enter
sub
push
ljmp
lea
stos
jne
daa
mov
mov
lcall
jae
enter
mov
xchg
icebp
pop
mov
sbb
out
mov
and
cmp
or
ss
jo
in
js
cmp
outsb
inc
adc
dec
push
push
jae
or
jge
push
xorl
in
push
dec
fstpl
cmp
cmp
stos
mov
mov
pop
fsts
inc
inc
mov
sti
adc
test
mov
shll
mov
lds
ret
add
outsb
push
jbe
and
ds
aad
and
shlw
mov
mov
mov
xlat
outsb
push
lcall
nop
jmp
pop
fs
call
xchg
and
bound
stc
rclb
xchg
mov
enter
dec
mov
pusha
cmp
xchg
or
pushf
xor
adc
je
mov
mov
dec
or
jl
ds
and
lods
inc
push
jo
lods
jns
fwait
rclb
icebp
cli
xlat
arpl
fiaddl
pop
rcrl
lea
out
ret
ret
aam
lret
imul
ljmp
clc
js
xor
cs
sbb
bound
push
mov
cmpsl
dec
push
inc
cmpsl
lods
clc
push
cmpb
push
aas
icebp
into
call
adc
adc
cli
sbbb
adc
loopne
clc
inc
aam
mov
je
stos
out
int
cmpsb
jbe
dec
enter
decb
sbb
movsl
loope
repnz
cltd
or
loopne
shrb
mov
stos
push
iret
test
dec
je
jmp
sub
mov
cld
fwait
push
add
sub
stos
ret
jae
testl
sub
sub
xor
imul
mov
les
subb
push
dec
ljmp
lahf
push
xchg
and
inc
jmp
adc
and
dec
in
enter
xchg
sub
sub
fimuls
mov
push
mov
cmp
lret
stos
jns
fwait
test
leave
mov
or
push
push
or
push
xchg
and
fcoms
cmpsb
push
fldl
imul
add
and
cwtl
mov
fcomip
mov
movsl
rol
push
mov
sub
inc
cld
sub
push
inc
ja
cld
jbe
fcomi
sub
jecxz
test
xchg
add
sbbl
popa
cmc
jmp
inc
add
es
mov
mov
mov
mov
sub
xor
iret
mov
stc
lahf
fcmovnbe
repz
out
push
out
loop
and
fcmovbe
loop
fistl
fs
inc
into
rolb
xchg
mov
mov
sub
push
aas
mov
inc
aas
andb
dec
xchg
jo
add
jg
outsb
inc
or
aas
sbbb
add
popf
repnz
ljmp
push
in
rep
cmp
stos
cmp
andl
sub
lret
sahf
mov
cmp
add
jo
or
sub
inc
loopne
in
std
sub
push
push
fsubs
fidivrl
icebp
jmp
lahf
cwtl
pop
pusha
cmp
and
sub
xor
xor
xor
xor
les
mov
test
or
arpl
sar
fmul
xor
push
and
push
out
outsb
jnp
pop
xchg
push
lcall
out
ret
test
jl
inc
lods
adc
fsubp
push
aam
inc
pushf
gs
and
lahf
icebp
dec
shll
mov
lods
je
and
ss
mov
fistl
cltd
fimuls
pop
iret
andb
xor
gs
hlt
xchg
dec
dec
les
std
add
daa
loope
stos
mov
out
jns
mov
es
push
aam
insl
fwait
popf
push
gs
jbe
addb
mov
popa
mov
xchg
stos
aam
nop
and
xchg
mov
scas
ljmp
or
mov
fistpl
cmpb
jp
test
pop
xchg
fisttpll
mov
mov
cmp
ret
mov
int3
roll
lods
mov
movsb
adc
movb
sub
lahf
lock
mov
fbstp
xor
xchg
stc
fidivs
scas
ss
lahf
lods
or
xor
mov
in
xchg
cltd
mov
fimull
ret
into
loop
sahf
adc
xchg
sub
pop
aas
out
jae
mov
add
subl
fistpl
fistl
jnp
testl
outsl
and
and
or
cmp
ja
push
xor
cmp
lahf
push
sub
sub
popa
pusha
in
push
std
fwait
xchg
test
stos
mov
xchg
aaa
pop
jmp
xor
nop
or
mov
lahf
adc
lods
xchg
jo
dec
push
rorl
enter
push
pop
jmp
pop
dec
out
addr16
add
jmp
lds
dec
mov
mov
add
and
test
and
jns
testl
ja
cmpsl
lods
dec
enter
mov
jno
cmp
cmp
bound
adc
sub
fsubs
pop
jmp
xchg
aam
mov
lea
in
ffreep
dec
cmp
repnz
daa
test
out
sbb
mov
and
pop
fdivl
push
push
mov
out
push
push
data16
sarl
dec
mov
jl
mov
xchg
xlat
push
or
xchg
adc
jle
mov
add
sub
jge
in
xchg
jp
push
dec
in
std
push
add
cmp
fidivrs
clc
std
rcr
repz
and
fimull
inc
xor
sub
push
movsb
adc
bound
add
xor
push
mov
xchg
sbb
push
mov
pushf
cmp
test
incl
mov
inc
push
mov
xorb
push
pop
xchg
sub
add
fidivs
adc
adc
mov
repnz
sbbb
lcall
and
adc
jecxz
lahf
adc
mov
lods
cld
fsubrl
sbb
fwait
and
adc
and
add
in
jne
or
pop
mov
xor
mov
std
sub
movsl
je
daa
int
out
fnstcw
fists
pop
dec
jbe
inc
gs
adc
push
jbe
xchg
pusha
stc
pop
test
push
sbb
cld
and
mov
inc
jns
fnsave
in
fs
stos
sarb
jne
sbb
daa
mov
test
test
jle
pop
vpcmov
xor
stos
stos
cmpsb
and
leave
lock
mull
cwtl
jne
mov
shl
mov
fidivrs
je
scas
and
sbb
and
pop
mov
movsl
add
mov
cmp
xchg
outsb
mov
mov
pushf
insl
data16
int3
jnp
ljmp
fidivrs
cmp
and
adc
das
mov
repnz
rorb
push
jle
cmp
add
int3
xchg
movb
sub
push
sub
or
jbe
stc
filds
cli
pop
and
or
pop
mov
out
andb
mov
sub
shr
jno
push
inc
jmp
push
out
mov
mov
pop
jns
test
test
mov
subb
imulb
xor
push
cwtl
jp
test
stc
dec
pop
and
int
mov
or
mov
cmpsl
cmp
push
mov
adc
lcall
fisttps
movsl
mov
xchg
add
mov
out
push
stos
lods
mov
jmp
cmpsb
out
pop
add
fldt
dec
push
sbb
daa
inc
ljmp
popa
fstl
pop
lret
push
int3
inc
mov
sbb
icebp
out
push
addr16
mov
sahf
push
pop
xor
inc
outsl
out
inc
pop
mov
mov
mul
jp
xchg
dec
cltd
loop
scas
dec
repz
cmp
repz
pop
cmp
adc
inc
sub
xchg
lea
mov
out
shll
mov
add
lret
sub
dec
insl
in
imul
inc
gs
jne
subb
in
std
inc
sub
mov
fcoml
aas
sub
int3
and
push
jle
xor
sbb
ja
jo
out
popa
das
fiaddl
add
ja
leave
xchg
mov
jns
adc
ret
or
jmp
xor
stos
sbb
dec
dec
inc
add
and
pop
in
cmp
sbb
mov
and
into
pusha
fimuls
jmp
jmp
mov
adc
adc
rcrl
popa
mov
inc
xchg
push
ds
push
outsl
xor
xchg
jg
frstor
ja
jmp
ss
frstor
ja
pushf
dec
out
ficompl
fwait
in
aad
sbb
mov
xchg
out
mov
imul
cmp
rolb
outsb
pop
adc
stos
or
lea
and
bound
dec
repnz
movsb
sub
mov
and
andb
cmp
into
stos
pop
or
in
ret
jbe
daa
lds
stc
push
add
data16
hlt
xor
jmp
xchg
xlat
mov
and
mov
inc
mov
adcb
adc
xor
dec
fisttps
lock
cmp
pop
jl
aam
shlb
and
cmpsl
call
repz
sub
sub
dec
or
je
addl
adc
xor
cmp
mov
rclb
lods
and
mov
sbb
fcoml
stc
dec
fs
inc
push
inc
jmp
adc
outsb
aas
das
push
adc
popf
dec
in
call
imul
add
jne
xchg
xlat
dec
insb
fnstcw
fstpt
fs
inc
push
mov
scas
inc
inc
push
inc
pop
aaa
push
xor
cmpsb
add
adc
xorb
lock
or
lods
mov
jmp
jecxz
aam
pop
mulb
bound
loope
adc
stos
pop
mov
mov
test
and
jle
int
add
insl
jl
test
xchg
divb
and
or
lods
popf
adc
push
sbb
scas
mov
sbb
test
add
stc
xor
bound
loopne
pop
add
negl
push
jmp
mov
mov
and
in
jecxz,pn
xchg
lret
sti
fld
loope
cmp
in
adc
lea
mov
scas
jno
loop
fcmovne
cld
loope
insl
icebp
pop
xchg
arpl
mov
jae
enter
push
sbb
cwtl
rcll
mov
and
cmp
into
adc
std
hlt
cmp
or
and
out
inc
sahf
aam
repnz
ss
ja
push
mov
idivb
xchg
push
cmpsb
mov
stos
sbbl
shll
cmp
outsb
xchg
andb
add
test
push
test
jmp
jmp
jbe
or
mov
inc
cmp
jo
hlt
dec
cmpsb
add
mov
subb
or
clc
add
adc
lods
rorb
leave
and
mov
and
push
jle
cld
mov
jmp
sbb
cmp
dec
mov
xchg
xchg
fdivp
stc
or
test
xor
and
push
ja
mov
nop
sbb
popa
shrl
fmull
add
ljmp
add
pop
imull
or
xchg
xor
out
ret
sub
int
bound
sarb
cmp
bound
cltd
xor
mov
push
lds
mov
aas
inc
lods
clc
jo
cld
cwtl
mov
hlt
xor
sub
repnz
or
call
cmp
scas
fistps
adc
cmp
lods
in
loopne
mov
loop
adc
test
or
xchg
es
jmp
ret
cmp
mov
sub
call
or
and
jmp
or
push
fs
cmpsb
adc
aad
push
pusha
push
xchg
mov
mov
lods
fisttpll
stos
inc
push
dec
mov
adc
or
inc
mov
add
push
nop
shll
push
fisubrs
xchg
pop
dec
out
mov
add
mov
lcall
lods
inc
xor
fnclex
xor
mov
inc
add
push
inc
packuswb
sub
xchg
mov
call
cltd
les
aas
mov
lods
mov
pop
andl
lahf
mov
aaa
xchg
ds
gs
test
inc
jno
adc
fists
cmpsb
cmpsl
fists
mov
pop
mov
push
jle
or
filds
cld
test
icebp
dec
xchg
mov
cmp
movb
negl
xchg
inc
lret
mov
mov
xchg
add
inc
jns
in
pop
pop
lret
dec
push
mov
push
bswap
mov
stc
jb
test
mov
cmp
mov
pop
sub
dec
mov
xor
lds
xor
inc
into
mov
or
mov
std
lcall
mov
xchg
fs
push
xchg
out
mov
fwait
pushf
jl
mov
add
add
or
leave
ss
sub
into
in
push
push
loopne
push
add
sbb
out
mov
mov
push
xor
sbb
inc
arpl
push
push
popf
test
pushl
scas
mov
mov
xchg
leave
movsl
inc
sub
je
mov
movsb
into
mov
cmp
adc
push
in
mov
inc
jle
xor
inc
and
addl
xchg
jmp
push
jg
mov
dec
repnz
test
andb
cmp
mov
sbb
sbb
pop
pop
xchg
jg
out
icebp
divb
push
movsb
lds
fistpl
xchg
jecxz
push
mov
ljmp
pop
fwait
inc
hlt
xchg
inc
push
arpl
or
xchg
dec
push
push
js
inc
mov
and
dec
cmp
movsb
xchg
mov
dec
xchg
imul
icebp
scas
stos
pop
sbb
pop
mov
xlat
test
pop
lret
jne
pop
xchg
jb
or
or
mov
and
loope
shll
xchg
cmp
xchg
sahf
loope
push
ss
push
test
imulb
mov
xor
frstor
mov
scas
loopne
cmp
bound
mov
sbb
je
or
jbe
dec
xchg
mov
fistl
mov
dec
rorb
add
adc
mov
inc
filds
fisttpll
out
adc
cmp
mov
mov
cmp
dec
aad
fdivp
loopne
xor
pop
or
leave
add
pop
add
std
test
or
inc
scas
or
cmp
mov
outsb
xchg
pop
es
cmp
mov
fs
lea
ljmp
xchg
int3
cwtl
sbb
jmp
xor
or
sbb
shrl
repz
cmp
daa
sarl
mov
cmp
loope
push
popf
sub
sbb
fwait
lret
mov
mov
mov
stc
insl
xchg
and
and
sub
xchg
jbe
out
hlt
jmp
out
in
mov
nopl
fnstcw
ficoms
push
fistl
inc
jmp
mov
push
test
dec
movsl
push
xor
addr16
ret
dec
pop
movsb
enter
lret
dec
cmp
jecxz
das
and
or
push
cmp
clc
fsubrl
cmp
aam
cmpsl
adc
and
lock
ret
cs
mov
push
stos
pushf
test
ds
inc
les
enter
or
add
ljmp
inc
icebp
sbb
adc
and
ror
scas
std
ficomps
mov
add
mov
mov
xchg
repz
ret
fiadds
inc
out
adc
fwait
ss
cmp
sub
xlat
jmp
imul
mull
nop
jno
pop
andl
mov
mov
xor
rorl
dec
clc
hlt
lahf
jecxz
dec
xchg
sbb
stc
sub
adc
sbb
adc
and
incb
sub
pop
add
dec
jae
nop
iret
mov
sti
cmp
lods
out
cmpl
jne
sbb
andb
inc
imulb
and
lock
arpl
lret
call
sbb
or
mov
mov
xchg
dec
add
mov
and
bound
scas
sub
into
test
adc
mov
and
pop
and
aaa
subb
mov
cmp
icebp
hlt
dec
outsb
rcrl
sub
leave
fnstcw
push
cmp
int3
inc
jg
jae
jb
out
sbb
clc
add
sub
rcr
sti
test
pop
jne
dec
cmpsl
ret
push
lcall
jecxz
xchg
mov
test
adc
dec
lahf
mov
loopne
sub
movsw
mov
testl
es
ret
aaa
loop
fiaddl
adc
sbb
cmp
shrl
test
insl
cli
ss
andb
addl
cltd
imul
sbb
xor
cltd
ljmp
mov
cwtl
add
ss
aam
lods
loopne
jne
fldcw
jp
out
les
scas
sbb
push
fprem
data16
stos
es
mov
mov
pop
fdiv
movsl
adc
stos
sub
xchg
sahf
xchg
aam
or
inc
out
pushf
fmull
dec
clc
add
or
jae
inc
dec
sub
pop
outsb
clc
mov
mov
sub
loopne
mov
data16
jnp
in
jnp
daa
dec
mov
in
shlb
fs
test
inc
stc
filds
mov
pusha
add
xchg
daa
mov
lret
mov
mov
int3
mov
mov
dec
stos
sbb
add
rcll
adc
aas
test
inc
popf
clc
scas
dec
jnp
sbb
sub
in
push
push
orb
sbb
add
int3
and
fwait
xchg
lds
sub
xor
out
mov
inc
and
jge
stos
dec
loop
shll
xorb
xorl
fdivrs
add
mov
ja
sub
push
xchg
clc
in
adc
push
mov
mov
cld
sbb
iret
fadds
jo
lods
pop
loop
int
int3
and
xor
push
sti
mov
lcall
rcr
mov
cli
add
cs
dec
sbb
lods
cmp
adc
sahf
cwtl
push
pop
test
repz
sarl
xor
push
dec
enter
outsb
imulb
and
aaa
mov
adc
cmpsb
lahf
loope
out
jb
push
ret
insb
ja
mov
in
add
mov
add
mov
mov
shl
into
ja
enter
and
roll
popf
and
fdivs
test
jo
mov
fcompp
bnd
es
ja
jmp
sbb
jmp
test
fs
mov
xor
in
lds
lods
mov
inc
jns
pop
and
mov
sti
imul
lcall
call
push
jle
scas
test
and
scas
lds
pop
mov
test
mov
mov
cli
jle,pt
and
inc
lds
out
push
aas
or
mov
jno
daa
pop
js
push
imul
shrb
and
out
sbb
fstpl
sub
fdiv
testl
xor
mov
dec
mov
jae,pt
repnz
jecxz
and
mov
adc
pop
jmp
xchg
sbb
daa
loope
cmp
filds
aad
lea
lret
dec
sti
imul
xor
xchg
aaa
stos
mov
enter
inc
loope
es
into
data16
mov
inc
aad
jns
mov
repnz
idiv
push
mov
sub
idivb
outsl
decb
outsl
imul
add
add
mov
scas
pushl
xchg
add
ds
jge
dec
add
bound
cmp
test
inc
ljmp
dec
pop
add
stos
lea
test
and
mov
scas
outsb
dec
jecxz
test
or
repz
mov
jb
scas
imul
mov
xor
pushf
out
xchg
push
seto
stos
push
inc
in
gs
movsb
test
cmpsb
sub
in
int
xor
mov
push
push
and
fwait
call
negl
into
cltd
sub
add
or
jle
lock
into
mov
int3
mov
mov
mov
int
iret
xor
cwtl
mov
dec
test
mul
mov
movsl
cmp
es
clc
lahf
aam
sbb
stc
shll
adc
loop
cmp
lret
lret
call
dec
das
mov
fstpt
fwait
inc
in
roll
push
adc
add
mov
hlt
sbb
sub
jg
and
xchg
fistpl
stc
sysexit
inc
fwait
xchg
scas
movsl
mov
mov
add
test
pop
pop
loopne,pn
sub
or
push
out
pop
and
xor
mov
sub
xor
xchg
sbb
mov
daa
imul
xor
outsl
mov
inc
xor
rcl
fnsave
insb
test
cmp
clc
and
xchg
inc
pop
mov
sahf
cmc
adc
jp
clc
add
inc
sbb
push
popa
cmp
inc
adc
loopne
dec
mov
cwtl
scas
lcall
stos
ss
in
rcl
jmp
adc
movsl
das
mov
cld
adc
mov
add
testb
inc
sbbb
lea
ds
push
clc
push
roll
xor
mov
loop
sub
mov
lahf
loop
out
mov
mov
jle
pop
and
sbb
mov
xchg
addb
ret
jg
outsl
je
mov
inc
aaa
jecxz
test
mov
sbb
cmp
push
fisttpll
push
or
mov
lahf
sub
inc
stc
enter
or
cmp
data16
jno
lods
roll
rcrb
loope
dec
lret
jae
push
fldl2e
cmp
out
notb
lahf
cmp
push
stos
cmp
test
and
inc
inc
inc
es
and
xchg
cli
cmp
pop
lods
mov
outsl
jle
mov
ljmp
test
nop
shll
cld
es
jne
mov
notl
sbb
shrl
or
arpl
test
xor
cmp
add
stos
add
mov
dec
sbb
cli
cs
xorb
xchg
popf
inc
sub
pop
inc
cmp
adcl
mov
out
mov
mov
push
pop
sbb
mulb
fildl
pop
jo
lcall
imul
or
imul
inc
xchg
jb
add
mov
fdiv
sbb
loope
movsl
pop
xor
daa
call
adc
movsl
les
rcrb
ljmp
add
add
test
xlat
hlt
jbe
aad
into
mov
das
push
mov
mov
pop
jl
sub
test
xchg
push
cmp
lods
xchg
push
mov
mov
sub
jge
cwtl
test
cmp
lods
movsl
jb
std
testl
adc
xor
sub
sub
sbb
pop
add
mov
jbe
in
enter
inc
xchg
fwait
mov
pop
repz
jbe
popf
push
lcall
dec
mov
in
and
cmc
or
xchg
outsl
ss
and
out
sbb
add
lret
xchg
lcall
ror
inc
lds
push
mov
mov
jns
dec
jmp
add
icebp
ds
cltd
mov
cmp
das
insl
pop
rcr
mov
mov
cmpsl
in
std
int3
jecxz
push
sbb
cmp
negl
jmp
std
sbb
scas
lea
shr
sbb
es
sub
or
xchg
jmp
sub
stos
out
or
pop
mov
pop
add
insb
lds
rcll
icebp
cmpsl
xchg
xor
xchg
cmpsl
imul
xlat
enter
pop
xor
dec
and
pushf
push
mov
sub
dec
push
nop
fsubr
cwtl
outsl
mov
pop
sbb
stos
cmp
jnp
stos
push
push
mov
inc
dec
xlat
mov
rsqrtps
pop
sbb
into
mov
mov
and
sub
test
push
cwtl
xchg
outsl
xor
test
test
repz
nop
and
jno
or
adc
cmp
call
pusha
das
mov
pop
adcb
fldenv
sub
dec
jp
rclb
adcl
push
ljmp
push
push
mov
das
cmpsb
dec
ja
sub
bound
mov
jecxz
jno
push
mov
faddl
inc
mov
xor
xchg
sub
call
inc
scas
and
push
mov
test
cmc
mov
orb
dec
rcr
cwtl
sbb
cltd
jg
daa
mov
inc
insb
mov
jmp
insl
insb
push
sbb
push
mov
xchg
xchg
and
test
mov
fst
mov
adc
cwtl
push
inc
mov
dec
jecxz
jmp
push
mov
sub
or
das
cs
jg
mov
scas
xchg
mov
enter
sbb
in
popw
out
mov
sbb
add
sub
xor
push
enter
fistpll
addr16
arpl
jmp
iret
movsl
aad
jp
xchg
dec
jae
cmp
test
mov
adc
testb
dec
and
aas
xor
pop
gs
or
scas
icebp
btc
jmp
rcrl
inc
add
mov
cmp
lahf
pop
cli
aam
lcall
test
fs
cmpxchg
push
push
push
gs
jg
and
nop
or
mov
clc
stos
jl
dec
mov
jp
mov
xor
adcl
or
test
movsb
test
dec
push
mov
mov
lcall
int3
pop
and
mov
cli
insl
int3
shrb
insl
inc
or
xchg
pop
or
mov
or
cmp
jno
fidivl
inc
sbb
sbb
pop
mov
fsubrs
mov
xor
dec
mov
repnz
hlt
inc
mov
mov
xchg
mov
fstl
xchg
js
cmc
call
push
ficomps
pusha
sahf
cmpsl
es
sbb
push
cmpsl
lahf
mov
mov
xchg
repnz
ss
xor
adc
nop
popf
mov
pushf
dec
and
push
sbb
pop
xor
testb
cmc
mov
subb
cmpsl
mov
jp
jge
or
push
push
imul
or
mov
enter
inc
mov
mov
mov
das
rcll
outsl
sti
xor
sbb
mov
sti
dec
xchg
add
mov
mov
or
sbb
idivb
fidivs
xchg
push
test
mov
out
sbb
jns
loopne
lcall
psubd
xchg
in
cmpsl
xor
dec
dec
fstpt
jmp
enter
cmp
push
sub
jnp
xor
push
jecxz
pop
pop
xchg
lea
enter
rolb
mov
leave
xchg
push
sub
mov
aaa
repz
iret
rolb
int3
outsb
pushf
in
iret
arpl
mov
mov
mov
int3
in
sub
mov
ja
mov
mov
fs
adc
cmp
pop
jp
inc
mov
xor
jno
dec
pop
in
mov
add
xchg
fs
call
pop
ret
xor
pop
in
lock
mov
adc
cmp
push
fildl
in
es
fs
xchg
adc
lock
push
mov
xor
roll
out
sbb
leave
jb
clc
subl
mov
pop
test
inc
or
lahf
iret
fiadds
push
cmpsl
cs
out
adc
jmp
in
aas
mov
sbb
inc
lret
testl
or
xchg
and
jmp
lock
push
insl
mov
xor
jno
push
mov
insl
pop
sub
pop
leave
jb
cli
lret
push
jae
sbb
stos
or
popf
push
sub
repnz
sbb
pop
and
pop
jne
mov
push
and
loop
push
pushf
std
bound
xor
inc
jge
jae
shlb
or
ss
xor
frstor
insl
mov
cmovb
mov
dec
mov
aaa
lret
pop
inc
mov
ret
lods
mov
arpl
std
jle
movsb
pop
add
cmp
mov
cs
fcmovnbe
sub
scas
push
jp
imul
sahf
orb
cmp
enter
arpl
cmpsl
jl
popf
sbb
nop
bound
pop
dec
out
mov
cmp
mov
nop
scas
and
cmp
mov
pop
xchg
gs
or
ds
sub
xor
in
out
or
lret
out
sub
cmovne
xor
inc
cmp
ret
into
sub
ljmp
int
ficoml
aas
call
mov
mov
pop
cmp
testb
or
aam
xchg
gs
jnp
lret
or
adc
rcll
mov
out
mov
jmp
cltd
insl
into
in
push
mov
mov
fcompl
into
bnd
pop
adc
loop
movsb
cmp
pusha
adc
sub
pushf
inc
lds
jge
cmp
pop
jmp
xor
lods
fwait
sub
xchg
gs
or
lods
and
pop
dec
iret
and
imul
movsl
xor
push
cmp
out
and
dec
add
shrl
adc
mov
dec
movsb
jb
ljmp
pop
clc
push
pop
push
popa
push
daa
adc
scas
or
clc
loopne
sbb
scas
push
sbb
inc
inc
adc
pop
lret
xchg
xchg
pushl
pop
sub
iret
push
fnstenv
ds
mov
ss
xor
mov
sub
xchg
xchg
xor
mov
dec
cs
lret
outsl
pop
fcmovu
dec
ja
clc
or
inc
mov
dec
or
inc
inc
mov
inc
or
mov
in
sbb
mov
push
xchg
icebp
aaa
in
cmp
xchg
loop
cmc
sahf
pop
xor
lret
lock
sub
inc
es
mov
lahf
mov
lret
sbb
push
pusha
add
jmp
rcr
lahf
sbb
cmpl
cmpsb
fisubrs
xchg
out
jns
mov
inc
dec
test
in
pop
ja
int3
nop
mov
mov
adc
push
cmpsb
ret
das
in
mov
dec
daa
inc
divb
clc
jb
into
inc
mov
aaa
and
and
ret
das
pop
decl
mov
push
cmp
jb
or
push
call
or
rcrb
sub
pop
and
push
lret
mov
xchg
mov
sub
pushf
push
lcall
sub
push
jl
lret
add
lret
insl
icebp
jae
imul
or
lock
mov
fmuls
cmp
out
dec
lock
sahf
cli
je
insb
pushf
lea
aam
insl
and
xchg
push
fbstp
mov
inc
in
lock
mov
shlb
es
out
add
insb
test
in
fisubrs
push
idiv
lods
icebp
inc
scas
adc
mov
clc
cmp
and
scas
pusha
test
mov
je
adc
jnp
mov
xor
or
mov
mov
aas
jg
cmp
mov
lods
nop
lret
loop
mov
push
or
pop
adc
cmp
pusha
xor
xchg
psubusb
pop
loopne
cld
gs
rclb
jge
iret
push
loopne
in
sbb
lret
in
xchg
in
add
rorl
xchg
pusha
dec
push
lds
sbb
mov
ret
gs
rcll
and
jb
sub
sub
add
pop
sbb
pop
fimuls
mov
cmpl
sub
mov
fucomip
jo
imul
sbb
popa
scas
sbb
sub
sbb
shl
int
push
aam
lds
in
cmp
or
add
mov
jne
cwtl
xorl
jmp
ret
mov
mov
testb
into
sbb
pop
dec
jo
flds
lods
sbb
mov
jecxz
dec
in
dec
push
mov
jmp
push
pop
ss
push
mov
aaa
jnp
xor
lcall
mov
sahf
push
adc
and
inc
cmpsb
add
fnstsw
push
or
jbe
cltd
lea
fcomi
mov
dec
push
or
cmpsb
mov
stos
cmp
cmc
data16
test
and
jns
adc
in
sub
sbb
sub
adc
test
pushf
shll
cmp
mov
cmpsl
jmp
aas
push
lret
add
adc
cs
mov
jg
cmpsb
jb
add
aad
js
push
xchg
sbb
stos
test
repz
inc
rcll
cmpsb
adc
sbb
cmp
movsl
inc
int
inc
stos
xchg
jl
mov
mov
add
push
or
add
xchg
xor
lea
mov
in
xor
stc
cs
push
sub
ja
sarl
xor
pop
aas
mov
mov
adc
and
ljmp
push
cwtl
and
cmp
roll
or
insl
iret
or
jecxz
xchg
mov
out
stos
rcrl
outsb
pop
push
insl
cmpsb
jno
data16
adc
sti
in
xlat
push
in
add
outsb
pop
fwait
cld
inc
cli
mov
mov
pushf
cmpsb
add
mov
stos
sub
mov
mov
push
mov
pop
hlt
or
mov
xchg
pop
fcompl
test
xchg
std
push
xchg
aad
ror
and
cmp
xchg
lods
or
jnp
orb
mov
sbb
and
jmp
inc
push
cmpb
mov
mov
mov
test
ds
cmp
sbb
and
pop
mov
js
pop
int
test
popa
mov
dec
xchg
mov
ret
lods
inc
xchg
jp
xchg
jp
cmp
mov
pop
fstpl
add
add
fisttpll
inc
push
adc
mov
xor
addb
pop
sbbb
jo
test
popf
xor
add
sub
cld
xor
or
das
mov
and
clc
fdivrl
dec
shl
test
adc
add
ret
incb
mov
mov
ret
ja
jne
insl
out
dec
add
int3
xor
mov
mov
jmp
out
into
fimull
pusha
cmpsb
sub
add
ret
cmpsl
xchg
fs
cmp
jo
xor
dec
arpl
cmp
xchg
push
cmpsl
sti
fiaddl
jnp
xor
push
push
movsl
test
push
ds
dec
push
dec
xor
push
retw
cld
sbb
xchg
push
mov
adc
inc
adc
jmp
pop
and
sti
int
sub
outsl
push
je
xor
lods
fsubrl
or
sub
jnp
sti
stos
pop
ss
sbb
or
fdivr
sti
or
or
scas
adc
cmp
mov
and
sub
mov
add
xchg
add
cltd
push
push
cmpsl
imul
je
cmp
pop
jo
inc
rcrb
dec
rorb
jle
sbb
and
adc
sub
mov
dec
insl
or
jnp
xchg
test
or
in
hlt
add
inc
cmp
shll
jno
cs
lret
cmc
push
or
adc
fcmovnb
stos
ret
cli
mov
imul
cmp
inc
out
inc
int
lods
inc
nop
fidivl
into
mov
out
or
or
mov
xchg
xlat
push
leave
cs
sub
mov
outsl
sub
mov
xchg
push
dec
push
xchg
dec
outsb
or
xor
enter
test
sub
dec
jo
sub
fiadds
xor
mov
fimuls
lock
jnp
or
sub
sbb
std
push
sbb
sti
into
or
sbb
mov
jp
movsb
lret
push
add
or
and
push
js
test
lods
adc
mov
xchg
shlb
sbb
leave
cmc
out
jmp
fsubrp
mov
mov
xchg
push
or
mov
jecxz
mov
das
cs
pop
hlt
lcall
xor
or
scas
dec
mov
inc
push
pushf
pop
aad
push
mov
xchg
mov
inc
sbb
xchg
pusha
push
cld
cmp
sbb
inc
xchg
jmp
imul
mov
aad
popf
icebp
aas
aas
sarb
cmpsl
sar
sub
xchg
int
xchg
shll
movsb
adc
pop
popf
repnz
xchg
dec
sub
mov
fistpl
repz
push
dec
inc
sbb
cmp
pop
cs
fisubrl
xor
clc
cwtl
sub
scas
inc
mov
in
jmp
in
jge
inc
push
mov
add
jl
jnp
xchg
xchg
mov
jge
sub
test
mov
or
mov
test
mov
and
sar
int3
jnp
push
pop
or
sbb
push
es
push
loopne
and
stos
push
lock
cmpsb
scas
push
xor
loop
or
push
jo
jae
sub
push
xor
inc
lods
pop
gs
xor
mov
mov
adc
mov
scas
cli
mov
orb
push
sti
es
push
pop
mov
imul
data16
loope
sub
das
fimull
outsb
add
and
bound
lcall
mov
or
xchg
bound
aad
xchg
mov
into
xchg
xor
fmull
jne
add
cli
or
add
mov
roll
inc
mov
inc
jmp
insl
sbbb
inc
movsl
push
aas
fimull
fwait
xchg
dec
mov
outsl
cmp
sub
push
jle
mov
sub
mov
add
aas
test
xor
jecxz
adc
mov
sub
add
sbb
sbb
aaa
int
pop
mov
mov
pusha
out
add
and
mov
inc
bound
mov
mov
mov
sub
arpl
xchg
mov
or
mov
jne
mov
jp
xchg
add
jae
add
outsb
in
cli
mov
icebp
add
lcall
mov
pusha
incb
mov
mov
inc
arpl
pop
add
mov
add
add
or
lock
mov
sub
in
jae
pop
loopne
cmp
or
cwtl
mov
insl
sub
jbe
push
fcomps
shlb
cmpsl
es
es
cmp
xchg
pop
and
inc
fs
push
pop
insl
lock
cltd
dec
mov
das
and
lock
loope
cmpsl
push
out
popf
and
lock
fdivrs
inc
ss
pusha
rcll
mov
out
cli
imul
stc
mov
fucom
jne
pushf
xor
cmp
add
push
and
sub
inc
arpl
sbb
push
jecxz
fisubrl
dec
inc
sbb
shrl
repnz
in
push
popl
jl
loope
rclb
mov
xchg
test
dec
out
inc
add
pop
les
add
idivb
hlt
jnp
jbe
shll
dec
fistpll
movl
xchg
mov
icebp
ficomps
in
xor
push
movsl
dec
int3
out
stos
cmp
xor
mov
fsubl
mov
int3
in
mov
scas
test
aaa
mov
add
push
mov
jmp
ds
xor
cmp
pop
aam
int
push
jns
hlt
cmpl
mov
call
sub
jecxz
jnp
pop
sub
and
xor
stos
mov
mov
ja
std
or
lock
jbe
popa
jl
jno
lret
fstps
push
and
xor
subl
cmpsl
flds
in
push
mov
push
js
mov
int3
in
scas
mov
lahf
lods
cmp
hlt
add
and
addb
dec
cmp
push
add
cmp
jp
int3
push
sbb
add
lds
lods
sub
scas
sbb
dec
sub
daa
pop
mov
mov
enter
mov
in
push
inc
xchg
push
cmp
ret
stos
or
jb
add
int
lahf
mov
fildl
cmp
push
cs
fdivs
mov
xor
ret
in
mov
mov
mov
out
lods
js
mov
push
push
into
cmpl
lret
jmp
adc
in
cs
mov
lcall
hlt
add
imul
cmpsl
inc
lea
jnp
popa
rorl
or
inc
dec
int3
outsl
fstpt
mov
pop
rclb
je
push
pop
push
lods
or
js
lea
mov
jle
or
dec
xchg
and
sahf
sbb
in
ljmp
xchg
ret
add
cwtl
mov
repnz
jl
sbb
loop
cmpsb
int3
lods
cmpsl
pop
mov
xchg
add
bound
daa
xchg
insl
in
fwait
sbb
cld
push
aad
adc
pop
mov
ds
cld
sub
ss
popa
sub
jge
push
icebp
dec
jge
lret
push
test
imul
push
mov
mov
pop
mov
jnp
daa
mov
mov
mov
fstps
cmp
into
mov
jl
imul
imul
test
cltd
mov
jp
loope
jbe
xchg
stos
or
pop
das
push
mov
and
cli
push
iret
je
and
inc
cmp
shlb
bound
mov
inc
addr16
jno
cmp
inc
and
sbb
popf
pop
sub
lods
mov
cwtl
daa
les
dec
fdivs
inc
sbb
xor
rorl
sub
jmp
push
repnz
inc
cmp
xchg
push
fiadds
testb
pop
push
inc
push
cltd
jg
xchg
or
add
jno
jmp
pop
jl
inc
adc
adc
push
mov
mov
or
inc
mov
jne
lret
add
nop
inc
jne
cmp
xchg
dec
lods
ss
jo
inc
dec
mov
repnz
aam
imul
insl
incb
inc
imul
and
mov
or
aaa
pop
fildll
dec
inc
mov
aad
adc
xor
fcompl
lea
push
xor
jo
ficoms
cmpsb
lret
adcl
add
xchg
rcrl
lahf
mov
in
lahf
dec
inc
inc
orl
xchg
in
cmpl
pop
and
adc
je
arpl
add
imul
lock
imulb
adc
jl
push
sub
xchg
cwtl
outsb
aad
pushf
in
pop
arpl
sbb
scas
lock
push
les
out
push
bound
in
in
into
mov
shlb
mov
hlt
jae
xchg
sub
sbb
dec
mov
push
jno
xchg
xlat
cmp
sbb
in
daa
push
sbb
mov
es
dec
mov
push
mov
or
cmp
imul
cmpsl
popa
mov
inc
pop
dec
xor
in
aas
xchg
cmp
mov
add
popf
jecxz
repz
outsl
xchg
out
data16
loope
mov
cmp
fimuls
mov
sbb
cmp
ret
and
mov
mov
cwtl
jo
xor
pop
test
adcl
pop
in
add
imul
xchg
icebp
mov
fimull
mov
xchg
in
out
stos
into
fs
leave
repz
ret
pop
fildl
jmp
testl
mov
mov
movb
add
movsl
mov
repnz
push
imull
mov
nop
inc
jp
lret
push
sbb
mov
gs
leave
mov
stos
pop
xorb
mov
outsb
push
call
cmp
inc
test
adc
jae
mov
cmpsb
xor
ljmp
int3
jae
dec
pushf
push
movl
movsb
or
cmp
inc
mov
repz
test
xor
pop
in
mov
out
lahf
jne
iret
cmp
fwait
ja
xchg
adc
addb
xchg
pop
cmpl
push
dec
bnd
mov
bound
ret
ret
adc
push
sahf
imul
mov
lret
loopne
lret
inc
mov
sub
push
js
cmp
inc
jmp
es
sbb
ret
and
std
jmp
sub
shll
pop
das
xchg
sbb
lret
mov
push
sub
mov
sbb
or
cmpsb
xor
je
and
push
ficompl
pop
fstpt
sub
clc
jo
adc
out
jmp
lret
adc
mov
sub
cli
jg
jae
sbb
mov
das
jmp
adc
fisttpl
rorl
mov
std
fiaddl
push
jno
cmovb
sub
sub
popf
add
inc
scas
repz
mov
iret
mov
ds
push
outsl
insb
inc
pop
lea
xchg
arpl
mov
insl
out
inc
loop
push
push
pop
and
lret
cmpsb
mov
test
sub
adc
xchg
sbb
cs
call
ljmp
ss
dec
test
aaa
mov
add
int
ja
or
and
mov
scas
sahf
aam
mov
icebp
jmp
jbe
icebp
xchg
fiaddl
cmp
dec
shrb
dec
jno
sahf
ret
dec
jno
jne
xchg
push
xlat
aas
adc
rclb
xchg
shl
dec
pop
hlt
xchg
inc
popa
cli
mov
movsb
ljmp
mov
dec
notl
cmp
jmp
lods
pop
cwtl
mov
cli
adc
inc
mov
cmp
fmulp
fmuls
out
push
xorl
and
fwait
sbb
inc
sahf
icebp
loopne
dec
shlb
add
xlat
fwait
sub
ja
add
shr
dec
push
push
das
testb
imul
js
jg
out
les
mov
xor
cmp
iret
push
push
cs
outsl
enter
sbbb
mov
and
cmc
fwait
int3
loop
aam
xor
in
pop
sbb
adc
push
pusha
notb
fcoms
mov
jnp
fisttpll
inc
loope
ljmpw
leave
outsb
push
sbb
push
jmp
push
in
push
movsb
shlb
cmp
fistpll
mov
imul
aaa
ss
fildll
mov
mov
jle
cwtl
roll
cmpsb
sbb
xchg
shll
push
pop
cmp
push
add
mov
xchg
push
jo
and
cwtl
icebp
xor
cmc
sbb
shl
sub
cmpsb
cmp
out
test
mov
jl
pop
mov
loope
mov
je
mov
sub
mov
cwtl
mov
insl
cmp
jo
or
inc
mov
or
xor
push
lea
mov
int
xor
adc
xchg
jnp
xlat
and
add
add
mov
or
std
or
dec
cld
xchg
into
ficompl
fistpl
and
dec
jae
xchg
popf
scas
dec
cmp
int3
adc
scas
sbb
stc
es
mov
fmuls
mov
jecxz
xor
ss
mov
aam
in
cmp
leave
lcall
or
std
xchg
xchg
push
mov
inc
mov
adc
jmp
or
les
jp
incl
jne
jg
inc
lods
cmp
mov
dec
sub
iret
push
xor
xchg
mov
dec
xchg
mov
xlat
je
pusha
sbb
loope
aam
cmpsb
push
lea
aad
lock
cltd
test
ljmp
aaa
push
dec
shlb
adc
and
into
jae
js
push
inc
or
jns
and
adc
cmp
sarb
add
out
mov
cwtl
xchg
test
push
push
push
sub
sbb
jl
lods
jb
and
data16
inc
lds
pushl
aad
lock
cmp
lret
add
iret
cmc
fnstcw
push
clc
in
stc
imull
into
cwtl
gs
lods
dec
push
bound
jmp
rolb
jl
push
adc
movsl
dec
sub
aas
and
jbe
mov
or
popf
jle
dec
movsl
mov
mov
jp
test
mov
inc
lcall
fwait
sbb
jge
push
xor
sub
loope
gs
adc
out
aad
cmpsb
into
lret
mov
xchg
stc
gs
pop
push
orb
fists
test
icebp
movsl
daa
xchg
mov
movsl
cmpsl
xor
das
add
clc
arpl
fdivrl
jmp
jge
mov
mov
push
rclb
idivb
cmp
mov
jl
aaa
rorb
push
sbb
test
movsb
mov
xchg
push
cmpsb
loopne
movsb
shl
mov
std
fabs
cmp
jmp
popa
adc
add
das
adc
lds
test
jecxz
push
fstpt
mov
push
outsl
mov
fidivrl
rclb
pop
adc
pop
xor
icebp
xchg
gs
xchg
ret
xchg
jge
ficomps
pop
mov
add
lahf
sbb
aas
fstpt
ret
ret
subb
pop
or
fcmovnbe
xor
xor
fistpll
shrb
jp
jl
jle
or
sbb
push
movsl
fs
out
adc
pop
inc
mov
cmp
add
ljmp
int3
dec
daa
jl
into
icebp
push
decb
pop
cmpb
sti
mov
clc
sbb
and
or
fnsave
movsb
ja
fidivs
jle
arpl
clc
jno
push
xchg
mov
mov
dec
icebp
scas
jp
sub
mov
hlt
in
xchg
xor
dec
out
in
stos
aas
nop
jle
aas
pop
inc
cmp
mov
dec
mov
movl
fmul
push
ja
aas
fisubrs
fldt
mov
lcall
mov
jo
pop
inc
out
cmp
out
sbb
mov
push
inc
cmpsl
pushf
out
sbb
popa
adc
sub
adc
jbe
jbe
mov
fs
aad
jg
lahf
jle
push
stos
xchg
dec
jg
and
fs
rcr
cltd
dec
pop
sbb
dec
sbb
push
pop
sbb
imul
mov
or
jecxz
inc
ss
test
adc
ret
cmp
ljmp
sbb
mov
add
std
adc
test
inc
mov
add
lods
inc
lds
jle
sbb
addb
xor
mov
in
cmp
fs
rcll
jmp
dec
sbb
add
popa
movsb
int
popf
in
xchg
dec
or
mov
sahf
jle
add
adc
in
and
dec
adc
inc
into
in
jle
scas
daa
aas
lahf
loope
xchg
mull
fisubl
xor
push
aas
pop
fs
push
mov
fcmovb
out
cmp
call
mov
es
fldl2e
jg
jmp
bnd
std
jno
xchg
dec
in
or
je
fisubl
imul
pushf
xchg
add
div
int
sub
sbb
je
xchg
inc
ficoml
mov
lea
mov
inc
inc
test
inc
cmp
stc
inc
fisttpl
pop
mov
cmp
in
into
clc
push
mov
mov
inc
or
cltd
mov
pusha
insb
sub
dec
dec
dec
mov
cmp
roll
cwtd
pop
fsubr
lret
mov
sbb
lods
jns
inc
idivb
movsb
loopne
fidivl
shr
add
or
push
inc
xor
lods
sub
inc
lret
add
and
mov
mov
or
pop
add
fistpll
mov
xchg
int3
cmp
pusha
int3
inc
and
pop
in
adc
xor
mov
inc
ja
fbstp
push
pop
xchg
shrl
stos
ljmp
in
popa
fwait
popa
andl
ljmp
jp
inc
imul
stos
inc
sbbl
shl
inc
rolb
jnp
je
popf
andb
andl
ja
repnz
sub
enter
jno
jo
popf
and
cmp
xchg
stos
icebp
push
std
push
pop
sbb
or
inc
ret
subl
inc
in
js
jne
or
cwtl
xchg
daa
sbb
lods
jecxz
mov
pop
outsb
fbld
stos
addb
cmp
in
out
js
xchg
fstl
add
xchg
mov
or
cmp
daa
enter
out
mov
jbe
add
mov
inc
jge
mov
mov
xchg
inc
dec
sbb
jae
gs
hlt
mov
loopne
mov
cmpsl
loopne
sarl
fsts
jo
add
imul
add
cld
mov
pop
pop
outsl
pop
lock
lcall
sbb
add
sarl
dec
mov
mov
jne
mov
mov
xor
xchg
dec
jns
inc
add
sbb
lock
adc
shrl
mov
aam
xchg
push
adc
out
data16
mov
mov
dec
enter
out
rorl
orl
add
sbb
add
adc
pop
addr16
sti
sub
xchg
ds
adc
mov
pop
mov
inc
xor
push
orl
inc
add
cmpsl
fbstp
ret
cmpsl
mov
repz
sub
incl
inc
push
pop
fld1
les
scas
dec
loopne
adc
jl
xor
and
push
mov
dec
xchg
mov
xor
mov
mov
inc
or
loop
mov
iret
mov
rorl
xor
mov
push
inc
call
nop
repz
idivb
xchg
les
adc
lret
faddp
sbb
cwtl
and
fstp
sbb
dec
push
test
mov
lea
pop
negl
inc
scas
stos
jb
cmp
dec
xlat
imull
sub
out
out
into
cmp
test
jne
inc
jns
adc
frstor
lret
push
or
xchg
pusha
mov
popa
mov
cmpsl
xorl
bound
sbb
push
pop
push
jp
push
popa
push
jmp
fidivl
cltd
sbb
sbb
pop
lret
add
in
pop
xchg
out
in
cld
mov
cli
cmpl
bound
xchg
je
sub
mov
xor
movsl
cmova
iret
in
xor
push
push
psraw
sub
orb
scas
imul
adcb
test
lret
mov
xchg
clc
enter
mov
mov
dec
cs
scas
dec
outsb
das
dec
jle
testl
lret
pop
pop
mov
sti
les
lea
fisubl
mov
pop
pop
xor
jp
es
jno
pop
ret
int
outsb
fsubrs
shrb
sub
xchg
or
jo
fistl
rorb
push
sub
add
or
sahf
xchg
pop
aad
adc
fidivrs
xchg
jg
outsl
popf
jns
pop
add
lods
jmp
test
andb
adc
popf
test
push
addb
pop
xchg
popl
subl
and
lahf
sbb
sbb
mov
out
cmpb
xchg
fwait
mov
and
jnp
ficoms
mov
ret
das
cmp
jle
jnp
add
push
inc
pushf
test
hlt
je
fisubrs
dec
or
lret
fisubrl
imull
mov
add
or
pop
stos
lea
scas
fs
sub
ficoms
mov
inc
stos
jne
scas
jge
add
add
mov
push
push
sbb
push
dec
mov
or
jmp
cwtl
xor
add
cmc
pushf
imul
stos
icebp
repz
add
mov
je
push
stc
push
sub
repz
hlt
fmull
push
inc
addb
push
push
mov
mov
xchg
lret
outsb
rorl
push
jmp
outsl
inc
sub
inc
outsb
xor
mov
mov
lds
push
int3
xchg
xchg
mov
inc
mov
xor
add
subb
sub
ljmp
add
in
add
adcb
stos
pushf
sarb
pop
or
dec
and
sub
push
xor
hlt
xor
inc
xorl
pop
jg
mov
ret
push
jl
aas
jne
adc
and
lea
in
fiadds
jl
int3
xchg
pop
push
or
leave
xchg
ss
out
test
bnd
cmp
pop
in
aad
mov
or
out
and
fisubs
jecxz
test
xlat
sbb
xchg
fldt
pop
xor
cmp
out
and
or
jl
sub
test
push
add
add
inc
outsl
push
sub
pop
add
pop
shll
jnp
mov
push
roll
mov
mov
xchg
int
sbb
push
repnz
inc
cmpsl
roll
cmp
cs
add
gs
in
push
adc
or
outsb
sbb
add
or
add
fs
test
in
xor
test
imul
je
pop
and
ret
lock
xchg
adc
mov
push
int3
xchg
or
xchg
ficoms
inc
fwait
cld
fcomip
outsl
fimull
mov
mov
out
xchg
shrl
pop
shr
mov
popa
das
mov
pop
sti
mov
popa
outsb
sbb
dec
mov
out
scas
cld
cmp
jnp
loopne
pop
adc
fcoms
outsb
in
jae
inc
lock
popf
aaa
daa
pop
cwtl
int
scas
int
mov
int
push
imul
divl
push
push
add
adc
pop
xchg
rol
push
lock
xchg
or
lea
mov
adc
leave
cmpsl
xchg
jo
lock
push
rcr
ret
imul
int
mov
les
mov
fisubrl
dec
cld
dec
movsb
and
fcomip
inc
xor
jo
hlt
rcr
xchg
sub
aad
test
repnz
sarb
shll
jle
xor
pop
mov
outsl
int
pushf
and
adc
jp
xchg
xor
fcoml
xlat
in
add
adcb
sbb
fs
sub
mov
out
adc
cmp
fwait
inc
mov
mov
sbb
ret
test
dec
mov
js
xlat
out
inc
jae
or
js
xchg
shrl
fdivp
hlt
nop
pushf
jle
dec
out
mov
fimull
test
nop
mov
adc
std
lock
jle
pop
or
push
loopne
fidivrl
mov
fldl
int3
out
fadds
je
fwait
loopne
or
aad
mov
lea
mov
fcoml
mov
insb
lock
dec
stos
jmp
pushf
cmp
inc
imul
xchg
pushf
xchg
aas
add
mov
pop
pop
int3
lret
gs
sub
sub
pop
xchg
sahf
je
pop
repz
pop
test
mov
xchg
xchg
into
idivl
int3
or
imul
mov
out
sbb
push
mulb
loope
cltd
inc
ret
or
sbb
movl
xchg
bnd
inc
leave
iret
jmp
pop
inc
inc
movsl
insl
cmp
imul
loopne
xchg
loopne
inc
or
bound
fiaddl
jmp
mov
sub
int3
xchg
fldt
dec
jl
jle
xchg
jbe
push
data16
ret
adc
mov
pop
mov
mov
inc
and
and
adcb
inc
jo
fdivs
mov
out
imul
faddl
jp
leave
cmp
xlat
sbb
jns
push
inc
and
mov
push
pop
jle
sbb
arpl
add
aaa
aas
rep
or
lods
ja
mov
xor
mov
or
jae
mov
scas
cmp
jns
repnz
call
sahf
cs
fsubrl
pop
nop
fs
icebp
cmp
aaa
dec
mov
and
mov
cmp
jns
cmpsl
jb
sub
pop
push
ja,pt
std
jae
cmp
jp
adc
pop
add
pop
xchg
cs
jne
imul
call
out
mov
aas
inc
fsubl
xchg
test
enterw
popa
mov
imulb
imul
jg
mov
repz
test
pop
scas
scas
push
push
and
repnz
lret
call
pop
sarl
aam
xlat
push
lds
into
stos
dec
out
sub
jle
xchg
mov
cs
mov
push
inc
call
outsl
dec
xor
xor
lahf
push
inc
fildll
xor
or
lds
push
stos
nop
jg
cwtl
xchg
mov
jbe
inc
and
lods
ret
ljmp
cmp
mov
call
or
stc
xchg
std
iret
xchg
loopne
push
clc
cmp
cmp
aad
call
push
push
xchg
cmp
adc
sbb
sarl
stos
push
jb
cld
xor
lea
and
jns
mov
or
inc
lds
stos
shrl
jo
mov
scas
lds
dec
adc
popl
out
insl
xchg
iret
cmc
jmp
out
push
scas
mov
lods
aaa
mov
cli
pushf
or
insb
pushf
sbb
inc
mov
sahf
dec
sti
cld
ss
cmp
cmpsl
mulb
mov
pop
sbb
xor
rorb
aaa
inc
je
pop
sbb
int3
in
popf
addr16
mov
cmp
psllw
lds
push
fidivl
xlat
mov
jae
pushf
cli
inc
pop
scas
mov
and
std
notb
mov
jmp
hlt
ds
cs
arpl
sub
das
cmp
cwtl
xor
insb
add
int3
mov
in
cs
jle
jmp
push
fadds
cmp
add
dec
les
inc
jl,pn
push
adc
arpl
sbbl
sbb
push
mov
fcomi
pop
sub
sub
mov
pop
dec
sbb
xor
jg
out
iret
push
sub
loopne
sbb
pop
adc
xor
aaa
ret
add
and
pop
popa
shl
leave
jnp
push
dec
dec
lock
mov
cmp
xor
jp
xchg
lea
mov
psubq
nop
lock
std
sub
lea
dec
stos
mov
or
jmp
lods
hlt
orb
pop
sbb
stos
xchg
es
jo
fidivs
add
shlb
fwait
ja
xchg
ljmp
mov
mov
aas
push
fisttpl
lret
clc
ds
xor
shlb
add
shl
xchg
repnz
jb
and
rcll
mov
ja
ds
aam
clc
pop
daa
sub
pop
in
dec
decb
push
subb
stc
ljmp
into
arpl
stos
je
xchg
loopne
cmp
fstpl
iret
sbb
enter
or
pop
ja
mov
and
inc
std
sahf
adc
inc
sbb
pop
ret
dec
ljmp
aaa
sarb
scas
xor
mov
mov
cs
xchg
stos
aas
test
cmp
lods
mov
xchg
inc
adc
popa
repnz
adc
ljmp
push
jae
leave
adc
dec
scas
stos
sub
test
nop
push
ret
sbb
lcall
idivl
int3
sbb
ljmp
pop
shlb
je
mov
aad
cmp
mov
add
iret
mov
aas
mov
mov
movsb
stc
sbb
jge
fstpt
and
sbb
xor
rcl
popf
ljmp
mov
out
pop
adc
jo
mov
bound
mov
jne
sub
ret
push
test
in
scas
mov
into
xor
sar
fistl
jb
pop
mov
test
stc
clc
adc
adc
pushf
or
iret
sub
insl
jno
sub
pushf
int3
dec
and
cmp
in
or
sahf
dec
adc
cmp
pushf
lea
sahf
loop
fisubrs
push
mov
inc
xchg
and
mov
inc
ja
adc
adc
in
arpl
jo
xor
jo
dec
addb
mov
fiadds
lea
jns
adc
insb
or
cmp
push
or
push
iret
adc
aam
inc
add
lods
test
xor
inc
ljmp
fsubs
call
shll
jge
aad
mov
mov
mov
cmp
jp
mov
in
pop
arpl
inc
mov
xchg
or
pusha
pop
adc
mov
adc
sbb
cmp
or
lods
sub
sbb
test
shrl
out
or
sahf
out
lcall
stc
aas
ficoms
sbb
and
rorl
ljmp
jnp
jae
jb
loopne
out
int
jg
jmp
lahf
sbb
xor
lea
xor
popf
mov
adc
insl
or
xchg
mov
sbb
push
jnp
cmc
mov
mov
mov
jnp
stos
jo
aam
cmp
orl
cmp
aaa
xchg
add
mov
and
jl
in
dec
pop
fimuls
pop
mov
dec
xor
pop
cmpsl
inc
lret
mov
sub
in
cltd
stos
and
jns
mov
fildll
cmp
cmp
mov
sub
sub
outsb
test
out
pop
std
and
mov
pop
popf
pop
imul
fidivl
mov
add
or
test
mov
dec
andl
lret
add
push
lds
mov
jnp
addl
cltd
cs
outsb
repnz
mov
and
or
and
lcall
sub
test
xlat
pop
inc
xor
lods
idivl
lock
push
mov
push
test
gs
leave
cmp
test
xchg
sub
cmp
and
lret
mov
xchg
mov
push
sbb
xor
js
dec
xor
xchg
xchg
add
out
or
negl
push
jae
lods
subb
cmp
pop
mov
mov
mov
jp
outsb
mov
push
sub
and
dec
inc
cmp
mov
sbbb
orl
inc
iret
es
mov
xchg
xchg
nop
pop
and
or
lea
inc
pop
sbb
and
push
lods
adc
mov
cld
jb
xor
nop
hlt
out
cld
repnz
xor
cmpsl
das
mov
inc
and
sti
clc
mov
fidivl
cmp
dec
jp
mov
jle
std
adc
out
scas
es
and
xor
rcl
sbb
ficoml
mov
popa
jmp
xchg
stos
pushf
popf
faddl
mov
int
cmpsb
popf
hlt
xchg
jns
js
mov
inc
mov
hlt
test
sarl
in
outsb
cs
xchg
dec
movsw
pusha
dec
repz
shlb
sbb
fildl
jae
scas
fdivs
cmpl
and
mov
pusha
or
test
or
lret
xor
add
sub
arpl
call
mov
pusha
mov
inc
sub
ret
lcall
xor
or
push
imulb
jb
add
cmp
adc
pop
add
insb
push
add
adc
repnz
lods
adc
ret
push
out
dec
fcoms
iret
and
call
or
pop
std
ljmp
out
ret
xlat
lret
dec
inc
cmp
dec
pop
icebp
and
sbb
pop
sbbl
stc
iret
addl
inc
xorps
jb
nop
lds
js
sarl
inc
into
cmpsl
xor
add
scas
and
daa
out
push
inc
push
xorl
aaa
cmp
fs
es
loopne
adc
cmp
jbe
fstpl
xlat
fsts
out
scas
push
sbb
jo
in
out
fxch
add
sbb
jae
jle
mov
outsl
scas
or
mov
scas
dec
pop
pop
cmpsb
cmp
lods
in
xchg
out
dec
lods
cs
out
pop
in
outsb
lret
cmp
ds
mov
jbe
dec
adc
jae
sub
outsl
aam
push
push
js
scas
test
fdivrl
aaa
insb
outsl
roll
test
loopne
push
jmp
int
stc
xor
ljmp
mov
push
loopne
ret
sti
sarl
jbe
sbb
add
jb
nop
mov
mov
bnd
sbb
pop
sub
ljmp
jp
add
dec
xchg
in
lret
cmpsl
movsb
sub
and
lock
and
cltd
data16
inc
cmp
xor
or
lret
mov
cmp
push
adc
shlb
scas
fsubr
sub
mov
testl
mov
add
xchg
add
mov
test
jge
lea
cs
negb
movsl
xchg
xor
test
jp
repnz
lods
and
and
cld
pushf
test
sbbl
ret
dec
ss
mov
fdivrl
iret
sbbb
icebp
cmp
stc
cmpsb
adc
fnstenv
sti
imul
ljmp
or
loop
nop
and
jmp
das
inc
int3
test
ret
push
loope
dec
add
outsl
pusha
lcall
ret
jge
jmp
cli
hlt
inc
int3
clc
lods
mov
pusha
mov
add
sahf
adc
addr16
mov
cmp
insl
adc
fdivr
and
mov
loope
aaa
sbb
or
and
pop
loopne
push
ljmp
es
mov
pusha
push
pop
inc
or
push
xchg
addr16
inc
fdivrl
jge
fdivr
mov
cmpsb
sbb
dec
jecxz
ror
and
gs
lods
sbb
loop
cmc
add
push
jae
pushf
mov
aas
lret
aad
jmp
jmp
scas
stos
fsubrp
rcll
das
jmp
out
shrl
pushf
pop
add
cli
cltd
dec
mov
fwait
jno
push
adc
loope
movsl
inc
inc
sbb
int3
out
mov
pushf
jge
jl
jbe
xor
scas
popa
pusha
mov
push
pop
sub
or
pop
cwtl
mov
pop
inc
inc
idivl
xchg
mov
xchg
jae
push
xor
orl
fsubrl
hlt
shr
fs
repz
mov
push
jp
push
xchg
dec
popa
jl
xchg
sub
mov
jp
pop
fwait
out
ret
or
arpl
pop
aam
popf
lods
jbe
or
mov
fistpll
inc
add
dec
fnstcw
push
sbb
orl
enter
pushf
cltd
xor
fcoml
stos
or
xor
sub
mov
loopne
mov
xchg
scas
inc
cwtl
sti
jno
mov
out
cmc
mov
cmpsl
scas
pop
mov
add
xchg
sti
stos
add
jecxz
push
xor
fimuls
mov
daa
notl
jl
pushf
jmp
icebp
sbb
or
sub
sti
aad
in
addr16
cmp
cmp
ja
sub
test
sbb
mov
sub
sub
sbb
ja
repnz
lea
shr
ds
fidivs
mov
push
mov
and
jns
xor
jae
dec
add
xor
pusha
xchg
loop
xor
call
push
and
ljmp
xor
inc
cmc
fwait
cmpsl
leave
lret
in
faddl
add
pop
subl
mov
pop
push
lea
push
es
ja
div
dec
cmp
loopne
cmp
add
mov
rcll
xchg
repnz
in
push
insb
jg
int
xchg
aam
and
insb
add
dec
sbb
xor
ljmp
and
dec
xchg
jns
stos
pop
repz
out
push
mov
mov
add
or
and
lods
insb
mov
lret
pop
adc
fs
dec
adc
loopne
mov
or
aad
fisttpl
pop
jbe
xchg
sub
push
or
cmc
and
popf
enter
arpl
inc
xchg
fisttps
addr16
call
adc
lcall
lods
mov
xor
xorl
mov
sbb
pop
push
clc
xchg
ficoml
mov
adc
movsb
fdivrl
inc
jle
fcompl
mov
dec
pop
add
mov
test
int3
sub
and
lds
xchg
mov
mov
bound
sub
xchg
sti
jne
sti
repnz
and
add
data16
or
xlat
lret
xchg
sub
mov
push
mov
xor
orl
cmpsl
nop
pop
test
gs
cli
jp
xchg
cmp
sbb
cmp
and
inc
aam
cmpsl
jb
jne
das
clc
cmc
add
into
loope
rcll
push
lock
xchg
cmp
mov
mov
sbb
xor
lods
ret
mov
decw
mov
xor
mov
jns
mov
lahf
xlat
aaa
inc
or
popf
rcr
lahf
mov
outsl
sbb
mov
dec
jle
cmp
xchg
subb
sbb
adc
js
rol
xor
push
jmp
adcl
inc
es
mov
adcl
aaa
cmp
mov
sahf
dec
sbb
xchg
push
loop
ret
fwait
and
cmp
out
add
cmp
mov
outsl
cmp
mov
add
ja
ljmp
push
mov
mov
cmp
push
sbb
dec
push
cmp
pop
outsb
repnz
xchg
gs
add
movsb
repz
lods
out
inc
mov
push
or
pop
cmp
sub
lods
into
adc
inc
mov
in
testl
ret
and
mov
xor
sub
xchg
cli
scas
loope
in
movsb
dec
push
dec
lock
adc
xor
cmp
cmp
xor
xor
dec
push
mov
mov
inc
addr16
push
add
cmpsb
push
pusha
cmp
cmp
jmp
addr16
or
xlat
lea
sub
or
in
sbb
adc
insl
int3
in
pusha
xchg
repnz
mov
mov
cmpb
ss
es
movsl
arpl
aas
add
pusha
ja
inc
pop
mov
repnz
mov
imul
jl
cwtl
sti
out
and
jnp
add
mov
add
sbb
dec
test
lcall
orb
stos
fs
sarl
mov
mov
xor
or
sub
and
cmpsb
sub
in
shlb
dec
shl
push
clc
xchg
jecxz
ss
pusha
iret
test
push
test
or
mov
jge
lret
xor
pop
mov
inc
mull
daa
push
and
pushf
jmp
lret
cmpsb
stc
sbb
in
lret
jmp
js
xchg
je
dec
dec
inc
ljmp
setge
xor
dec
imul
dec
push
cli
dec
jnp
sub
cld
mov
frstor
add
xchg
cwtl
mov
pushf
movsl
lret
fmuls
mov
sbb
test
cmc
sub
imul
xor
and
ds
xor
mov
arpl
jnp
adc
inc
ds
mov
mov
mov
or
outsl
sbb
sarl
mov
sbb
leave
jg
daa
cmpsb
outsb
cmc
mov
push
rcl
sub
or
cld
mov
sub
xor
jmp
and
lahf
data16
pop
test
arpl
push
pop
mull
inc
int3
pop
xchg
subb
cltd
mov
inc
jmp
inc
sub
mov
ficomps
int3
pop
push
out
mov
scas
mov
ljmp
pusha
cmp
mov
mov
pop
movsl
lods
pop
xor
pop
bound
add
stos
push
mov
iret
or
dec
loopne
pop
jle
xchg
mov
mov
je
sub
add
repnz
add
jno
jmp
sub
aad
and
adc
mov
and
inc
lcall
dec
jb
arpl
enter
cmp
js
icebp
jno
sub
js
nop
push
divb
lods
jge
mov
ds
ljmp
cmp
outsb
shl
sub
addr16
insb
scas
out
inc
loop
fcomps
pop
jle
add
mov
sahf
and
les
xchg
insl
pop
ret
dec
in
mov
mov
ja
insb
mov
adc
jns
sub
fsubr
insl
sti
pop
outsl
xor
or
lods
push
mov
lcall
out
cmp
ss
xchg
sbb
pusha
mov
cmp
pushf
in
xchg
push
addr16
adcl
pop
iret
addl
sub
sahf
jle
dec
roll
stc
mov
test
pop
or
jns
xor
mov
mov
lds
xchg
fidivl
sub
loope
imul
sub
jl
fsubp
negl
xchg
in
rolb
mov
addl
jge
xchg
add
daa
outsl
pop
lret
sub
repz
inc
mov
popa
movl
bndldx
mov
push
xor
and
and
clc
iret
cmc
mov
orb
mov
mulb
lea
mov
mov
xchg
pop
jmp
ja
in
inc
inc
mov
xor
lea
jb
loop
daa
mov
fistpl
and
adc
aam
pop
ss
jbe
jmp
stos
fldcw
test
mov
push
imul
jae
and
and
dec
pop
jae
pop
add
inc
shll
ret
scas
fldenv
mov
adc
sbb
stc
mov
clc
stc
ja
lcall
sub
mov
in
lock
fiadds
adcl
adc
inc
jbe
cmpsb
jnp
pop
push
aad
jbe,pn
les
aas
xchg
rcrb
dec
pop
sub
into
stc
fnstcw
sbb
inc
xchg
nop
in
xchg
jnp
jg
popa
outsl
mov
out
in
out
push
popf
dec
xlat
xor
and
fs
jno
sbb
mov
inc
test
jg
sbb
inc
js
mov
mov
mov
sub
hlt
pusha
stc
jg
cmpsb
dec
add
mov
mov
cmc
pop
int
xor
addr16
adc
xorb
lea
stos
and
add
test
gs
popa
jbe
sub
jecxz
adcl
test
or
xor
xchg
mov
add
movsb
mov
mov
jb
fs
vmwrite
frstor
or
fwait
xchg
sbb
fbld
mov
push
inc
inc
imul
sahf
add
lds
enter
loopne
jp
rol
das
scas
xlat
pop
pop
or
mov
out
jmp
leave
popa
or
lock
idivl
aas
inc
imul
xchg
jmp
pusha
call
cmp
mov
in
fstl
fistpll
outsl
je
mov
push
inc
aaa
dec
cmp
cs
jge
cs
inc
fsts
jo
stos
xchg
lock
cmpl
jl
and
out
mov
and
dec
mov
addl
cli
lock
xlat
test
jno
adc
sub
xchg
push
call
mov
fdivrp
push
sub
lods
mov
xchg
cltd
xor
dec
sbb
lods
jl
adc
cmp
aad
shl
std
repnz
lret
xor
mov
gs
xchg
pushf
add
add
sub
es
inc
negb
dec
shll
jb
daa
scas
jmp
pop
insb
push
adc
jnp
loopne
inc
push
mov
aad
sub
mov
shr
or
sub
fdivrs
stos
pop
mov
pusha
fsqrt
in
jp
mov
jo
inc
insl
cwtl
mov
push
and
dec
loop
fsubs
std
in
pushf
jae
xor
adc
popa
rcrl
sti
int3
push
xchg
out
jecxz
mov
mov
not
jg
jne
xchg
jns
push
test
fidivs
fs
pop
bsr
and
stos
fisubs
int
mov
js
nop
mov
aas
fnsave
push
cli
cmp
test
mov
xor
jo
xchg
aam
sbb
mov
popa
cs
mov
pop
mov
cwtl
sbb
cwtl
push
xchg
outsb
dec
add
stos
mov
push
pop
pop
insb
sbb
cwtl
in
insl
andl
nop
adc
inc
mov
notb
cmp
pop
ljmp
xchg
js
pop
mov
pop
rolb
stos
popa
inc
out
pushf
daa
insl
sbb
add
insb
cli
addr16
stc
cld
in
fwait
cmp
cwtl
cwtl
sahf
ds
in
sub
push
xchg
js
scas
pop
lcall
dec
sbb
pop
je
int
aaa
cmp
out
dec
cmpl
jmp
ss
mov
das
sbb
iret
and
popf
inc
ret
xchg
sub
sub
inc
cwtl
add
sbb
adc
mov
jl
cmp
and
sbb
add
adc
aam
aad
push
push
pop
cld
pop
push
out
xchg
rorl
int3
repnz
jo
popf
or
pop
outsl
iret
push
shll
in
aam
pop
xor
adc
mov
jb
out
or
cmp
push
adc
scas
ss
inc
pop
out
sti
test
out
pop
fistpll
sub
outsl
push
jmp
out
ja
adc
xor
int
push
pop
xchg
and
sbb
adc
sbb
add
mov
sahf
and
pop
pushf
insb
int
jno
scas
aas
addr16
js
jb
or
jbe
pop
out
mov
bound
cmp
mov
xchg
pop
or
inc
mov
out
mov
dec
inc
jno
mov
xchg
test
sbb
cmp
xor
lcall
xchg
push
mov
popf
insb
xor
push
add
cld
lret
push
cltd
or
out
or
out
inc
mov
loop
jae
pop
fisubrs
aad
cmpsb
xor
icebp
dec
inc
inc
push
lock
sbb
bndstx
adc
inc
retw
pusha
sbb
jbe
add
xor
ret
popa
test
scas
stc
cs
or
mov
mov
sahf
sti
out
inc
fnstenv
aas
scas
inc
les
mov
loop
cmovno
loope
sti
mov
xchg
sahf
xorl
test
inc
aas
or
adc
ja
lods
xchg
popf
adc
decl
in
xchg
faddp
inc
dec
test
pop
and
cltd
fwait
data16
mov
pop
or
lcall
sub
insl
jns
add
and
mov
mov
clc
add
dec
fbstp
cmp
dec
or
jl
cli
mov
jg
adc
mov
dec
leave
xchg
icebp
and
mov
aad
adc
mov
pop
pushf
stos
incl
mov
xchg
mov
dec
mov
adc
cli
inc
popa
or
call
cmc
mov
dec
or
inc
enter
ljmp
scas
xchg
hlt
int3
mov
movsl
cmp
mov
das
cli
lds
lcall
icebp
mov
int
inc
lahf
loope
out
pop
mov
xor
inc
mov
insl
mov
mov
jecxz
dec
std
ss
adc
jle
popa
aas
jge
outsl
push
xchg
pop
mov
xor
loopne
cmpsl
fsin
pop
daa
adc
scas
loope
xor
and
mov
xchg
lods
rcl
mov
test
mov
dec
in
outsb
leave
sbb
jnp
mov
enter
mov
daa
mov
xor
pop
fwait
pop
xchg
in
addb
ret
or
mov
sti
push
nop
inc
arpl
daa
mov
add
mov
dec
add
mov
pusha
lods
out
aas
jno
jno
popa
xchg
inc
lds
jmp
mov
mov
into
mov
jmp
push
mov
popa
pop
sarl
push
sub
shll
ret
pusha
mov
xchg
or
jg
xchg
cmpsb
and
inc
xchg
cmpsl
adc
insb
in
mov
jle
sub
push
xorl
cmovle
jge
mov
stc
lock
pop
and
xor
hlt
push
sbb
mov
lret
or
and
mov
and
ret
dec
loopne
pop
xchg
push
adc
cmp
or
and
shrl
push
sbb
cmpb
insl
ds
mov
ffreep
and
push
pop
sbb
adc
adc
push
dec
lods
rcll
aas
cmc
in
jne
sbb
ljmp
push
sub
ja
add
jmp
and
nop
jne
in
sahf
call
push
mov
daa
xchg
ja
rorl
pop
out
lcall
stc
ret
inc
xchg
sbb
loop
mov
rcrb
lods
pop
jns
jl,pn
jne
dec
je
push
jne
mov
jmp
lods
popa
movsb
lahf
test
push
push
and
icebp
xchg
jnp
mov
ret
fwait
cmc
rorl
pop
lahf
xor
add
je
and
mov
cmp
fisubs
adc
vcvtsd2si
in
or
dec
xor
mov
cmp
inc
or
add
jp
mov
adc
fstps
xchg
loopne
xor
dec
pop
mov
sahf
data16
or
ret
xchg
sub
insb
gs
insb
add
mov
push
rorb
sbb
fiaddl
dec
aad
xchg
add
insl
jg,pt
lock
add
std
jne
add
and
push
dec
fwait
xchg
sbb
sbb
mov
mov
mov
lret
push
and
inc
xchg
test
add
lea
pop
rcll
or
and
andl
add
xchg
pusha
pop
test
mov
data16
mov
inc
push
pop
xchg
movsb
adc
gs
inc
int
lds
jmp
add
lds
sbb
lea
add
xchg
pop
andb
clc
and
lahf
jg
lock
lds
adc
imul
add
in
mov
inc
hlt
xchg
in
xor
inc
shlb
push
in
addr16
inc
ljmp
pop
sbb
xchg
xchg
xchg
aaa
cld
arpl
cmp
pop
es
push
repz
lds
xor
mov
cmp
psubusb
out
dec
data16
mov
ds
inc
mov
cmp
pushf
push
add
outsb
add
in
inc
adc
lock
sbb
call
hlt
xchg
sti
sbb
push
push
inc
sbb
and
icebp
pusha
pop
stos
leave
push
pop
inc
xor
cs
cmp
lods
icebp
add
fstpl
mov
ret
xor
es
imul
popa
sbb
cmc
je
adc
daa
test
jns
and
or
dec
xor
cmp
add
aaa
sahf
jnp
and
mov
and
adcb
jecxz
enter
push
lret
push
fsubrl
stc
sarb
sbb
pop
dec
imul
mov
ss
lea
imul
bound
push
push
jno
xchg
mov
lods
ret
pop
outsl
js
xchg
cmp
lock
cmpsl
jmp
adc
stos
and
rcrl
cmpsb
repnz
or
or
popa
sahf
mov
pop
ss
xor
fwait
iret
dec
mov
xchg
inc
xchg
mov
aaa
sbb
mov
push
mov
int3
inc
add
and
xchg
pop
add
aad
data16
push
jmp
bound
and
ljmp
mov
dec
cmp
jb
in
mov
pop
or
pop
pop
dec
pop
loopne
adc
jns
nop
sbb
add
adc
xchg
push
ss
adc
orl
je
or
push
subb
js
lcall
sub
ret
leave
inc
sbb
push
pop
fsubl
cmpsb
iret
out
test
in
test
sub
push
mov
nop
fsubs
mov
loop
inc
lret
push
rcll
sub
inc
incb
negb
icebp
adc
outsl
out
push
and
jne
daa
sub
fcmovu
mov
cmpl
bound
movsb
jns
out
popa
sub
pop
imul
cmp
lock
fsubs
jns
sbb
idivb
addr16
aas
out
mov
mov
das
push
rcrb
mov
mov
test
aam
sbbb
dec
je
sbb
cmpb
cwtl
hlt
sbb
xor
mov
push
call
xlat
pop
pop
into
lods
mov
sub
out
and
pop
xchg
ret
out
mov
mov
jb
dec
clc
push
add
sbb
xchg
xor
mov
cli
mov
lock
popa
fs
pop
cld
shrb
sub
cmpsl
xchg
sbb
dec
inc
lds
or
gs
movswl
mov
push
push
xor
sub
sti
cmpsb
imul
mov
push
stos
les
sub
les
les
iret
call
inc
rcl
iret
fcoml
pop
jne
pop
xor
orb
mov
pop
scas
mov
outsl
arpl
add
adc
inc
push
fdivrl
dec
aad
pop
inc
jg
repnz
adc
aas
mov
push
dec
mov
push
pop
xchg
xchg
flds
add
xchg
and
insl
push
test
jmp
rorb
pop
xchg
push
fldcw
int3
loope
lcall
imul
movsb
aam
ja
loope
aam
jle
mov
test
mov
inc
aad
xchg
mulb
scas
or
push
mov
scas
fsub
sub
aam
jmp
in
xor
add
sub
inc
mov
pop
loope
test
roll
jle
push
dec
sti
adc
add
negl
push
repz
lcall
xor
inc
push
inc
push
lret
xor
add
xchg
sbb
aaa
lock
pop
fstpl
fistl
sbb
icebp
rcrb
test
daa
mov
stos
test
mov
addr16
cmp
dec
or
mov
dec
push
repnz
pop
xor
and
lret
push
sahf
mov
call
fwait
push
in
sbb
pop
ja
jge
mov
js
cld
stc
hlt
mov
inc
xor
dec
scas
xor
stos
mov
sbb
mov
jno
mov
xor
cmp
pusha
inc
mov
ljmp
xchg
loop
xchg
and
in
mov
cltd
roll
lock
negl
xchg
push
aad
adc
pop
ljmp
gs
sti
adc
pop
popf
pusha
mov
pop
je
or
sub
dec
xchg
mov
inc
das
jg
mov
repnz
cmp
aaa
repz
std
fnstsw
jne
int3
cmp
das
sub
adc
sub
ljmp
fwait
movsl
and
loope
sbbl
sbb
clc
scas
iret
cmpsl
push
adc
negb
insl
cli
pop
cmpsl
sub
fimull
mov
cmp
popa
flds
push
cmp
mov
pushf
lock
or
or
out
add
pop
cmpsl
test
xor
cmc
push
sbb
cmpb
int
mov
mov
clc
push
arpl
mov
pop
leave
lods
lods
push
insl
push
pop
jmp
xor
pushf
mov
fdivp
ljmp
push
pushf
adc
and
mov
loopne
mov
out
pop
stos
sub
int
jge
push
rcll
es
sti
pop
insb
add
xchg
mov
pop
lcall
or
mov
xchg
pop
dec
ret
pop
and
cmp
inc
in
or
dec
fdivrs
adc
fwait
pop
test
dec
mov
xor
mov
inc
and
sbb
push
push
lods
sub
sub
enter
and
xchg
fisttps
insl
cwtl
pop
cwtl
ret
ds
std
test
sub
push
jg
dec
xlat
xchg
or
outsb
repnz
pop
lahf
pop
pop
inc
add
lret
pushf
fwait
jnp
enter
jns
jg
fldcw
xchg
inc
je
data16
pop
ja
daa
out
pop
add
mov
jge
adc
cmp
mov
arpl
andl
lods
sbb
adc
addr16
aad
xchg
sbb
sub
les
fnsave
mov
aam
adcl
sbbb
data16
dec
cmp
incb
jns
dec
pop
testl
cs
push
add
cmpb
or
cmp
js
mov
jae
push
jg
sti
or
test
cmp
lock
repz
lret
mov
enter
cli
or
inc
pop
ret
testb
push
dec
cmp
movsb
adc
push
push
std
addb
mov
sub
repnz
in
ss
inc
sub
mov
mov
mov
jo
sub
push
aaa
jns
pop
rcl
in
jle
sub
cmp
bound
gs
sub
fistpll
add
and
inc
mov
push
in
xchg
mov
popa
cmp
pop
popf
and
inc
xchg
jbe
add
adc
cmp
push
cmp
pop
mov
stos
lcall
and
mov
mov
rclb
pop
or
mov
aas
xor
test
push
fstpt
inc
das
jp
and
dec
sahf
test
and
cmpsl
jecxz
repnz
sbb
push
dec
sub
outsl
lods
or
addr16
test
incl
fdivr
and
push
cli
das
xchg
inc
jnp
add
pop
stos
add
adc
pop
dec
mov
dec
inc
mov
pushf
sub
and
cmpsl
jae
dec
movsb
xor
mov
push
pop
and
mov
jo
pop
mov
std
mov
insl
adc
sahf
std
fs
mov
jle
popf
aas
jge
sbb
inc
jl
push
leave
pop
das
sbb
push
or
cld
xor
pop
push
mov
icebp
fisubrl
or
sbb
test
sbb
mov
jmp
mov
test
jae
es
shlb
xchg
and
lcall
xor
sbb
rolb
mov
or
jnp
mov
and
stos
sbbb
jno
mov
mov
and
cmp
cld
repnz
out
pop
das
ret
std
fmuls
iret
stos
int
sbb
or
bound
arpl
jp
movsb
dec
jle
mov
add
or
ja
movsb
sbb
dec
leave
jbe
sub
fcompl
mov
lret
push
dec
rolb
outsb
bound
mov
adc
inc
sti
cmp
cld
shr
rorl
scas
sub
idiv
int
push
mov
dec
pop
addr16
fistpll
scas
aam
data16
or
xor
jne
mov
fnstsw
xchg
inc
fistpll
mov
mov
cltd
adc
icebp
loope
fwait
sub
data16
stos
leave
leave
aad
fimuls
push
addb
loop
cmp
xor
push
xchg
or
or
and
dec
iret
ljmp
outsb
sbb
pop
mov
push
mov
data16
sub
dec
inc
fcompl
cmp
int
mov
andb
jnp
cmp
insb
arpl
mov
cli
and
adc
fdivr
out
or
or
loop
sub
and
mov
and
sub
xchg
jecxz
lret
add
rcl
ficoms
stos
xor
push
out
mov
lods
jecxz
mov
mov
jae
push
int
insl
lret
loop
std
mov
and
enter
test
in
stos
in
loop
loopne
push
and
mov
cmpsl
dec
xlat
es
sub
or
fs
out
jb
cwtl
mov
fnstenv
stos
xchg
cmp
xchg
rclb
ljmp
pop
rcrb
arpl
push
lret
push
leave
cmp
das
push
cmp
pop
add
mov
adc
jg
int3
adc
push
data16
xchg
not
dec
popf
sahf
iret
sbb
insl
loop
pop
rcrb
nop
clc
sub
xchg
or
mov
push
or
inc
or
arpl
pop
loope
cmp
mov
stos
stos
inc
push
nop
sub
ret
fdivs
ljmp
jg
sub
mov
push
out
sub
mov
xor
loope
loope
cmp
leave
in
add
ret
xchg
sbb
jb
xchg
add
shl
xchg
fsubrl
pop
cmp
fwait
mov
push
jae
mov
add
movsb
ret
jnp
ja
icebp
pop
fwait
test
and
lea
adc
cld
xor
test
pop
fwait
scas
and
jne
nop
and
addr16
xor
iret
fidivl
int3
jmp
mov
fs
and
mov
das
enter
push
addl
cs
sub
mov
pop
comiss
out
ret
test
push
stos
addr16
iret
fbstp
sub
or
sarb
mov
or
mulb
fcomps
sahf
leave
sbb
pusha
ja
fwait
cmp
or
mov
or
sbb
mov
sbb
bnd
clc
xlat
jmp
popa
lds
push
data16
mov
xchg
jecxz
aas
jmp
es
fists
dec
pop
in
pop
xchg
push
shll
cmp
inc
sahf
add
out
and
and
add
sti
sar
mov
mov
lea
xor
pop
xchg
dec
cmp
lahf
test
and
push
and
mov
sbb
arpl
shrl
aaa
and
mov
fstpt
repnz
cmpsb
cmpsl
sbb
sbb
shll
popa
movsb
loopne
dec
lds
je
lret
call
push
cmpsl
mov
pusha
in
insl
stos
jge
in
dec
lock
pop
sbb
fldcw
cmp
int3
outsl
or
inc
xor
cmp
scas
cmp
cmp
or
arpl
mov
pop
mov
mov
push
repnz
hlt
cld
cld
stos
xor
pop
mov
xor
aas
fwait
stos
cmpb
scas
push
in
lahf
in
daa
adc
xchg
insl
lods
fcmovne
fisubrl
nop
aad
pop
or
sub
xchg
or
out
enter
icebp
add
ror
adc
jnp
mov
int
adc
xchg
mov
pusha
pop
xlat
pop
mov
loopne
leave
push
pop
inc
add
lock
les
rcl
js
negl
xchg
sub
nop
je
jp
aad
mov
insl
and
sbbb
rolb
xor
or
fdivs
daa
sarb
test
shl
aad
repnz
sub
jle
pop
mov
popf
rorl
stos
mov
inc
adc
es
mov
jge
xchg
pop
mov
xchg
dec
roll
jmp
loope
adc
scas
insb
dec
clc
adcb
push
data16
imul
sbb
leave
xlat
push
popf
add
out
mov
imul
movb
cmp
mov
or
je
les
adc
fcomip
mov
xor
push
xchg
out
fadd
jae
inc
leave
mov
andb
mov
cltd
movswl
xor
cld
jp
cs
out
xchg
lea
test
stc
int3
stos
fwait
lods
ret
lahf
pop
cld
call
jg
push
test
xor
lret
pushf
aaa
mov
flds
imul
xchg
arpl
ret
mov
cmpsb
outsl
loop
ljmp
jl
aad
dec
xchg
into
das
sub
stos
xchg
ss
push
sbb
je
pop
cmp
push
pop
test
mov
pop
jecxz
adc
mov
push
or
or
mov
cmp
adc
xorl
xor
xor
or
mov
xchg
addr16
xlat
adc
adc
push
push
aaa
daa
jnp
inc
sub
mov
xchg
inc
pop
mov
xlat
xor
nop
cmp
xchg
addr16
imul
or
in
gs
push
sub
push
push
cmpsb
mov
daa
rcrl
in
repnz
shr
xchg
xchg
mov
sbb
lods
mov
sarl
ljmp
imul
dec
stc
popa
add
pop
inc
dec
jge
adc
adc
cmp
or
mov
les
test
sqrtps
push
mov
jo
mov
shlb
in
jp
lea
insl
xchg
lret
pop
push
lods
pushf
sub
aaa
push
lea
mov
sbb
adc
out
or
je
sub
push
add
push
push
ss
bound
cmp
sbb
mov
mov
ja
je
insb
cmc
mov
mov
aam
movsl
test
jecxz
inc
sub
mov
lds
leave
mov
add
or
into
add
jg
mov
into
sub
shrl
sub
cmpl
cmp
clc
scas
xchg
and
les
je
mov
ss
or
mov
shll
scas
popa
rolb
mov
daa
shll
enter
xor
sub
insl
shr
xchg
and
insl
mov
mov
push
dec
mov
rol
test
push
or
arpl
sahf
pop
fimuls
bound
mov
xor
xor
inc
test
shrb
fstps
insl
push
xchg
je
cld
or
inc
adc
mov
xchg
or
push
jnp
sti
pop
out
pop
test
jl
mov
jns
iret
repz
pop
mov
repnz
iret
cmc
mov
xor
and
icebp
xchg
fdiv
jb
int
loope
pop
push
out
or
and
mov
stos
fildll
repnz
add
je
pusha
mov
adc
jno
and
or
test
add
ljmp
pop
js
push
add
je
bound
clc
xor
mov
dec
jle
cltd
pusha
pop
push
lret
call
jp
and
out
fcompl
jge
push
add
xor
inc
add
adcl
pop
xorl
pop
shll
in
scas
xchg
mov
add
das
xchg
mov
jno
aad
mov
notl
mov
xor
sbb
test
lea
mov
mov
insl
adc
ds
negb
jno
jae
outsl
xchg
jg
fcmove
imul
inc
mov
aam
out
xchg
out
mov
jmp
stos
or
xor
testb
dec
dec
push
shl
mov
inc
ds
xchg
ss
pusha
sub
fadds
shrb
pusha
lods
ret
sub
leave
lcall
adc
or
adc
cwtl
outsb
push
xor
pop
xlat
in
mov
push
cmovns
jg
sbb
cmpsl
shl
jns
xchg
sub
hlt
and
lahf
lret
or
jg
xor
fildll
sarb
lcall
jge
testb
pop
and
and
mov
stc
lret
pop
xchg
jle
testl
push
add
cmpl
and
fwait
test
inc
mov
adc
sahf
cli
arpl
pop
pop
xchg
jnp
enter
pop
insb
leave
or
pusha
and
pop
popa
cmpl
pop
cli
cli
iret
icebp
cmp
insb
insl
imul
outsb
add
add
sub
adc
popf
je
add
xor
add
jle
dec
add
scas
add
mov
scas
