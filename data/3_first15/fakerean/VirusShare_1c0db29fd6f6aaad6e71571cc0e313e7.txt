pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
add
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
daa
adc
dec
adc
insl
adc
jl
shlb
test
test
and
adc
push
adc
and
and
repnz
add
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
cwtl
loope
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
mov
adc
add
inc
add
add
mov
add
cmp
jae
mov
dec
xlat
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
call
add
or
shll
nop
ret
inc
add
dec
adc
add
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
xor
inc
add
call
mov
add
add
mov
add
cmp
jae
mov
mov
sub
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
in
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
cmp
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
int
inc
add
pop
add
insl
hlt
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
stc
jecxz
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
pop
movb
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
push
testb
pop
add
test
inc
add
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
out
inc
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
clc
movl
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
pmaxub
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
lea
push
push
push
call
add
movb
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
sub
add
push
push
push
call
add
movb
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
movl
mov
and
cmp
jne
mov
mov
dec
je
dec
je
sub
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
mov
movl
mov
movl
call
mov
lea
push
push
push
push
call
mov
lea
push
push
call
lea
lea
push
push
call
mov
mov
sub
lea
push
push
call
mov
add
lea
push
mov
sub
push
cltd
sub
mov
sar
add
mov
push
push
push
mov
add
push
push
call
mov
push
call
mov
mov
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
add
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
push
call
mov
fucomip
add
add
cmp
ficompl
popa
test
add
xchg
icebp
add
hlt
test
fstps
jmp
add
fmuls
shr
insb
popa
aam
jmp
call
add
test
adc
addb
call
leave
add
add
cmpsl
iret
add
in
add
xchg
add
add
add
add
add
stos
add
mov
gs
add
mov
add
add
add
cmpsb
roll
test
lret
test
bound
fldl
add
popl
push
push
lea
push
call
jb
add
add
test
mov
aad
addb
add
push
icebp
add
add
pop
popa
push
movsb
cmc
add
jp
add
add
add
clc
pop
push
push
push
push
push
call
add
push
add
mov
ret
jp
imul
add
add
bound
add
add
sar
lods
aad
testl
xchg
add
add
add
in
lock
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
add
stc
pop
mov
pop
mov
add
add
mov
pop
mov
mov
ror
add
test
add
je
add
js
mov
add
mov
jmp
lcall
jl
add
push
push
push
push
push
push
call
add
clc
data16
add
jnp
add
add
mov
add
icebp
ficoms
lods
in
pop
add
jne
sub
pop
call
push
push
push
push
push
push
push
call
add
aad
ja
mov
mov
add
mov
mov
add
loope
add
mov
jecxz
mov
add
add
add
cld
add
cli
sub
pop
call
push
push
push
push
push
push
lea
push
call
add
add
add
jl
add
lcall
pop
repnz
mov
popl
cmpsl
add
fsub
sub
pop
jmp
push
push
call
mov
mov
iret
pushf
add
mov
sahf
push
jge
int3
out
mov
pop
add
add
fiaddl
add
in
clc
pop
ret
push
push
push
push
push
push
lea
push
call
stos
add
add
add
mov
push
add
out
add
mov
jl
fcomps
add
loope
add
push
fildl
movsl
mov
pop
rorl
pop
add
fiaddl
loope
movsb
push
int3
add
mov
test
in
mov
mov
push
lea
push
push
push
lea
push
call
jns
sar
add
push
fldl
lret
bound
add
mov
int3
add
cmc
iret
add
addl
stos
add
push
add
add
mov
loopne
add
mov
add
add
fstps
in
lcall
pop
in
add
push
lea
push
call
movb
add
les
add
fdecstp
add
add
in
stos
xchg
add
add
loopne
lock
cmpsl
pop
gs
add
sti
out
out
add
nop
out
push
clc
lcall
ret
bound
add
xor
adc
mov
lods
push
xor
sub
sub
sub
push
or
inc
add
ror
add
sub
inc
xor
add
pop
shl
pop
push
push
push
push
push
push
push
push
call
mov
add
sti
test
xlat
jno
pop
jnp
add
mov
cwtl
add
bound
add
push
hlt
add
pushl
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
mov
xchg
addr16
add
add
add
lahf
push
xchg
test
add
add
add
add
add
add
add
xchg
repnz
add
add
add
lods
add
stos
mov
cwtl
fwait
mov
jae
add
push
push
push
call
add
jo
add
add
mov
add
aad
push
mov
mov
fcomi
popa
ljmp
clc
loope
rol
jge
add
push
test
pop
add
cli
push
sub
pop
mov
movl
push
push
push
push
lea
push
push
push
push
call
add
clc
rcr
out
add
lods
add
fsubrp
add
mov
lahf
aam
mov
movb
mov
mov
bnd
mov
icebp
jne
add
lcall
inc
call
push
call
ror
pusha
aam
mov
pop
lods
add
lahf
roll
add
lock
add
add
add
add
jmp
add
push
stos
lock
add
aam
in
lock
push
pushl
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
add
add
icebp
stc
push
in
xchg
cmc
push
add
add
pop
pop
pop
insb
aad
test
add
mov
add
stc
mov
add
add
add
xchg
add
sub
pop
pushl
call
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
push
add
scas
cwtl
out
add
xchg
push
je
pop
add
pop
add
lcall
enter
jmp
mov
addl
popa
add
pusha
add
shll
xlat
add
mov
popa
mov
in
fdivr
lcall
jne
push
lea
push
push
lea
push
lea
push
push
push
call
add
pop
pop
fs
outsl
aam
fidivs
mov
add
add
add
push
add
outsl
push
add
add
jnp
js
lahf
pop
mov
mov
jne
push
push
lea
push
lea
push
call
add
out
cwtl
add
add
stc
popa
rol
lret
mov
add
push
cmpsb
arpl
pop
mov
lock
add
filds
movb
push
lock
add
mov
lcall
or
add
push
push
shl
shr
push
and
add
not
sub
shr
not
dec
pop
not
sub
add
rol
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
jge
addb
iret
add
test
push
jp
jp
shll
iret
mov
cmc
call
add
xchg
add
push
test
push
call
jp
jmp
lret
push
mov
imul
add
stos
scas
clc
cwtl
mov
filds
jp
add
add
sub
pop
pushl
push
push
lea
push
lea
push
call
xlat
add
mov
filds
rolb
add
cmpsb
scas
rclb
rolb
mov
add
jno
mov
je
add
add
lret
pop
ja
add
out
sti
imul
rolb
outsl
push
jle
push
xchg
add
push
sti
imul
popf
sub
pop
call
push
push
push
add
push
xor
add
dec
lea
not
sub
inc
pop
xor
sub
pop
push
push
push
push
lea
push
push
call
add
add
add
loope
shll
add
ret
mov
jo
ficoml
jle
pop
fildl
jl
add
push
push
push
push
push
push
call
popf
add
xchg
aam
add
jne
pop
int3
cli
add
add
add
add
mov
add
add
popf
jge
mov
xchg
push
out
add
add
roll
cmpsb
loopne
mov
cld
mov
js
pop
add
add
sub
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
in
add
fidivrl
stos
cmc
add
add
jne
mov
mov
sahf
add
add
add
jl
ljmp
push
push
push
lea
push
push
call
add
rclb
add
nop
addl
jnp
incb
add
jb
aam
add
add
test
add
les
add
xchg
pop
add
mov
xlat
je
add
add
mov
cmc
addb
push
add
pop
add
add
add
lds
lcall
push
lea
push
call
icebp
mov
cmpsl
testl
loope
rolb
nop
mov
xchg
lds
add
add
add
push
pusha
leave
movsb
add
addb
out
add
data16
add
push
mov
ficomps
push
push
xchg
std
mov
push
xchg
notb
shl
ja
movsb
add
add
lcall
push
push
call
pop
mov
arpl
test
fwait
scas
popf
fmulp
add
add
out
xlat
push
jecxz
mov
popf
mov
mov
xor
xlat
mov
xchg
insb
add
loope
fstl
xchg
pop
loop
pop
scas
lret
add
lret
add
jnp
add
gs
lods
add
imul
xlat
add
xchg
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
cltd
add
add
add
adc
add
add
add
add
outsl
iret
xchg
mov
add
lcall
pop
in
add
push
push
push
push
push
push
push
push
call
add
addb
mov
mov
jle
mov
add
mov
loope
add
jmp
add
mov
mov
lret
in
mov
xchg
xchg
fiaddl
sub
pop
add
push
push
lea
push
lea
push
push
push
push
call
mov
aam
fistl
les
mov
mov
mov
add
add
mov
add
popf
add
in
mov
lcall
leave
std
add
sub
pop
mov
xor
push
lea
push
call
mov
mov
mov
add
add
add
add
add
jl
enter
jb
sahf
push
jo
loopne
add
addb
lods
xchg
add
mov
jno
jecxz
sahf
add
insb
mov
iret
add
out
fs
pop
rcrb
add
add
in
clc
pop
add
push
push
push
push
lea
push
push
push
call
test
call
cld
push
pop
mov
add
add
test
jo
mov
add
mov
insb
negl
add
push
lret
in
cmpsb
pusha
jb
add
add
mov
add
inc
or
jno
adc
call
inc
mov
dec
push
lea
push
push
push
push
lea
push
call
mov
jmp
push
mov
int
xlat
addb
in
add
cmpsb
jbe
pop
mov
mov
shl
test
aam
add
shlb
add
push
lcall
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
iret
mov
push
leave
movsl
add
add
incb
jge
int3
into
add
clc
pop
add
pop
pop
add
add
mov
mov
add
cmpsb
add
jl
in
fdivr
lcall
les
add
push
lea
push
push
push
push
push
push
push
call
roll
mov
cld
scas
outsl
sarl
arpl
filds
mov
scas
out
jge
pop
scas
jae
cld
popa
aam
roll
add
add
jb
pop
ljmp
jp
add
add
lcall
add
repnz
sub
pop
add
push
push
call
imul
movsl
add
out
test
add
sahf
push
add
lds
pop
add
popf
add
add
lcall
popa
add
add
lcall
push
push
push
push
push
push
call
jmp
lds
lock
sti
out
mov
out
jno
scas
pop
mov
jno
arpl
jb
push
mov
add
into
pop
add
jl
add
ret
add
add
sub
pop
mov
push
push
push
push
lea
push
call
mov
fistpl
add
cli
add
ja
mov
add
sti
add
add
add
lcall
or
push
push
push
push
lea
push
push
push
push
call
iret
add
add
add
add
scas
int3
lret
mov
nop
sarb
in
rorb
roll
fs
lahf
add
mov
scas
add
pop
jne
add
leave
std
in
add
jo
in
loopne
add
push
lea
push
push
lea
push
lea
push
call
push
add
lret
add
faddl
pop
cmc
add
add
add
add
xchg
shl
add
jl
add
add
mov
add
leave
int
jb
popa
stos
add
jbe
add
push
sub
pop
push
push
lea
push
call
add
add
lcall
jnp
pusha
rol
mov
jnp
add
insb
add
add
add
add
enter
mov
add
push
fs
cli
data16
add
rolb
mov
ret
xchg
movsl
add
mov
fisubrs
jle
in
clc
lcall
inc
or
adc
dec
loope
push
lea
push
push
push
call
in
lret
add
out
addb
mov
xchg
add
add
push
cld
xchg
jb
add
enter
shl
je
add
popa
add
lcall
enter
push
push
push
push
push
push
call
movsb
add
loopne
add
push
push
scas
popf
add
aam
mov
xchg
cld
sahf
jns
lods
nop
mov
int
int
push
add
jp
add
add
add
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
jmp
sahf
imul
xlat
jo
std
mov
push
movb
neg
xchg
xchg
add
mov
add
add
add
test
lcall
ljmp
outsl
xchg
out
lods
add
jns
pushf
rolb
add
pop
out
mov
cld
into
jb
sub
pop
rep
push
push
push
push
push
lea
push
push
lea
push
call
xchg
cli
movsl
add
add
add
lret
rolb
push
cwtl
cwtl
out
add
mov
stos
fwait
add
out
lds
add
decb
xchg
add
add
mov
je
add
add
add
mov
add
out
pop
fldl
add
push
add
sub
pop
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
add
add
add
add
add
inc
mov
enter
icebp
faddl
add
add
add
scas
mov
add
fcomps
pop
in
push
push
push
push
call
add
leave
sar
add
mov
pushf
imul
add
add
imul
add
cmpsb
add
push
imul
mov
xchg
jbe
leave
loopne
arpl
fldl
fiadds
sarl
xchg
add
add
shlb
in
lock
lcall
ret
add
add
push
push
push
push
push
push
call
add
stc
add
mov
add
add
cltd
cmpsb
mov
add
add
push
in
mov
push
cli
add
jge
add
mov
mov
add
jae
add
pushf
add
jp
xorb
mov
add
idivl
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
arpl
in
jbe
add
in
mov
mov
fwait
xchg
out
loop
pop
add
add
add
add
mov
pop
fldt
add
add
add
mov
sub
pop
mov
push
push
push
call
clc
movsb
add
add
jmp
add
in
add
movl
shll
push
mov
add
push
in
clc
lcall
add
push
push
lea
push
call
rcr
add
add
add
imul
add
leave
add
call
add
xchg
out
push
add
mov
mov
push
mov
rcl
mov
pop
insb
les
int3
push
mov
xchg
add
insb
ja
popa
test
sar
add
in
hlt
pop
add
push
push
push
call
pop
add
add
pop
add
push
xchg
add
add
add
test
lods
add
mov
js
add
add
add
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
cwtl
add
mov
stc
jae
cltd
lea
cmpsl
pop
add
add
add
add
pop
data16
into
add
add
add
loopne
mov
add
xchg
out
add
in
loopne
mov
xor
push
push
call
mov
aam
fildl
mov
add
add
add
push
add
add
add
add
pop
pop
mov
fldenv
icebp
add
add
sti
iret
add
clc
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
mov
out
sbb
mov
push
into
jae
aad
add
out
fwait
add
add
lret
andb
jmp
test
mov
add
jnp
jp
push
lock
add
hlt
add
add
mov
add
pop
loopne
imul
popf
add
ja
in
fdivr
lcall
rorl
stos
push
ror
shl
not
push
and
add
shl
add
add
sub
ror
not
pop
inc
pop
push
shl
pop
pushl
push
push
lea
push
push
call
xchg
mov
mov
add
cmp
std
add
xlat
divl
sbbl
mov
cmpsb
xchg
pop
mov
add
sarl
add
pop
call
push
lea
rol
pop
push
push
push
sub
inc
dec
shl
push
sub
add
sub
dec
add
pop
lea
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
add
add
mov
sahf
test
mov
add
addb
add
shll
add
mov
hlt
xchg
add
ja
scas
popa
mov
mov
jbe
pop
cmc
test
pop
add
into
add
mov
in
loopne
lcall
push
push
lea
push
push
push
push
push
push
call
add
add
addb
lret
mov
outsl
addb
mov
jecxz
mov
cmpsl
xchg
jge
aad
add
movsl
testl
mov
fldl
ja
cld
add
rclb
mov
xor
pop
call
into
mov
int3
arpl
mov
cli
mov
bound
cmc
xor
jp
in
movsl
roll
mov
add
add
mov
add
iret
add
je
add
xchg
pop
in
in
add
add
pop
add
cld
scas
aad
mov
lcall
mov
add
add
push
add
clc
push
add
pop
push
push
push
not
pop
mov
push
xor
add
ror
pop
add
add
push
push
push
lea
push
push
lea
push
call
add
xchg
add
mov
add
iret
add
add
pop
add
jle
push
std
add
jnp
add
mov
enter
add
mov
xor
add
data16
add
jbe
add
in
add
outsl
jb
sub
pop
add
mov
xor
push
push
push
push
lea
push
call
mov
pop
ret
insb
add
push
jecxz
xlat
pop
add
lds
push
add
cli
add
push
mov
add
push
add
jmp
in
in
pop
add
push
lea
push
push
push
push
lea
push
push
call
movsb
add
add
icebp
add
fnsave
add
add
cmc
movsb
in
idivl
pop
mov
add
cmpsb
test
ret
jl
les
add
add
add
ficoms
add
pop
lds
loopne
stos
add
add
jmp
je
add
add
loope
sub
pop
push
push
inc
rol
pop
mov
push
push
push
push
push
push
call
jo
in
flds
jmp
add
arpl
pusha
out
mov
push
lea
add
mov
in
push
lods
add
mov
je
into
sbbb
add
add
jnp
add
rolb
add
add
add
mov
xor
push
lea
push
lea
push
call
add
arpl
add
add
jle
add
lret
test
lods
leave
add
jnp
add
add
xchg
add
movsl
int
xchg
add
add
cwtl
add
rcl
mov
pop
add
add
in
add
call
popf
add
fistpll
pop
add
sub
pop
add
push
rol
pop
add
push
sub
xor
pop
pop
push
sub
pop
mov
xor
push
add
shr
pop
rep
mov
xor
push
not
shr
pop
or
je
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
addl
call
add
add
add
add
rorb
add
out
add
add
add
push
add
cmpsl
pop
jbe
movsb
jge
scas
xlat
add
ljmp
xchg
add
mov
in
and
idiv
mov
mov
mov
test
add
std
ja
mov
into
sub
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
jno
int3
jge
imul
in
sti
aam
add
push
int3
js
add
in
push
ljmp
add
push
push
push
push
push
push
push
lea
push
push
call
rolb
add
add
mov
fadds
jp
repnz
jmp
add
add
add
pop
lods
pop
mov
test
in
mov
pushf
add
imul
in
fdivr
lcall
push
sbb
jno
adc
je
stc
push
push
push
push
push
push
push
push
push
call
add
add
add
add
fildll
mov
add
loope
shr
jne
mov
add
jnp
fwait
push
add
lret
fcomps
adc
push
lea
push
push
call
add
add
xchg
pop
add
out
add
add
add
ja
leave
aam
mov
cld
rolb
xlat
add
cwtl
add
jns
lock
mov
add
add
jbe
add
lock
sub
pop
add
push
push
push
push
call
add
mov
fiadds
xchg
add
cmc
sti
mov
fsubrl
add
lock
push
add
mov
mov
add
scas
add
mov
addl
lret
sub
pop
add
add
push
lea
push
push
push
push
push
push
call
push
pusha
add
enter
mov
lcall
xchg
call
int
add
add
imul
add
add
add
add
add
mov
cld
test
add
add
pop
mov
mov
add
sahf
mov
clc
mov
add
add
stc
xor
mov
sub
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
int
mov
add
popa
push
aam
xchg
add
ja
jno
out
mov
mov
push
add
add
fdivs
ja
cld
push
leave
lret
jbe
test
xchg
addb
mov
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
data16
roll
add
push
jl
add
mov
mov
add
roll
int
data16
mov
in
fcomps
add
push
push
push
lea
push
call
mov
icebp
add
add
stc
xchg
loope
lods
add
mov
add
mov
add
jp
add
cli
xchg
mov
lcall
add
add
push
rol
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
cld
add
add
add
push
test
push
clc
lret
add
in
mov
cmc
cltd
add
mov
hlt
add
add
int3
add
jbe
jb
filds
lods
mov
mov
add
sub
pop
pop
rep
push
push
push
push
push
push
push
push
push
lea
push
call
enter
add
mov
lahf
fcmovne
jbe
pop
mov
lahf
out
ret
add
cld
xchg
out
cmpsl
jns
add
subb
push
mov
dec
sub
adc
rol
loope
shl
pop
or
je
mov
push
not
add
pop
add
push
sub
pop
add
rep
push
push
call
mov
add
add
pusha
add
jns
add
add
movsb
add
lods
add
stc
add
jbe
add
movsl
jbe
nop
xchg
arpl
add
add
add
add
cltd
imul
ficomps
add
push
imul
push
push
shr
push
and
add
shr
add
sub
lea
xor
pop
lea
shl
pop
push
push
lea
push
lea
push
push
push
push
call
add
mov
cltd
test
mov
add
add
out
add
add
add
fists
add
add
loopne
add
out
into
add
add
add
lcall
mov
push
pop
mov
push
lea
push
push
push
push
call
movsb
popa
in
add
mov
add
add
mov
int3
into
fcomip
add
fadds
add
add
cmpl
add
ja
popf
scas
add
add
cmpb
add
lcall
inc
and
push
push
push
push
push
push
call
cmpsb
into
call
scas
add
add
add
imul
pop
push
jbe
add
popa
push
push
fiaddl
mov
add
in
loopne
sub
pop
jmp
push
lea
push
push
call
add
into
add
add
test
jmp
gs
rcll
add
add
shl
popa
push
out
xor
scas
fsubrp
add
lret
mov
lods
jge
push
xchg
iret
mov
aam
add
insb
push
icebp
fsts
sti
add
aam
sarb
jl
test
sub
pop
push
push
ror
sub
shl
pop
mov
push
lea
not
dec
pop
add
push
push
push
call
add
pop
xchg
add
mov
icebp
xchg
add
add
loope
add
add
shl
add
lea
add
mov
mov
fucomi
test
fiaddl
add
add
lret
out
add
in
hlt
pop
push
push
inc
sub
add
sub
pop
push
push
push
inc
shl
ror
shr
pop
push
push
xor
sub
pop
mov
push
push
push
push
push
push
push
call
mov
add
add
notb
fstp
jnp
jp
add
test
add
test
pushf
pop
add
add
add
add
adcb
filds
jae
std
add
add
mov
int
add
jbe
in
in
pop
push
sub
add
pop
pop
pop
push
not
sub
rol
pop
pop
push
shr
xor
pop
leave
push
pop
ret
push
push
push
push
lea
push
push
push
push
push
call
add
sarl
add
cli
pop
pop
testb
xchg
bound
fsubrp
xchg
enter
in
mov
flds
add
clc
gs
xlat
js
add
outsl
fiadds
lret
add
push
add
add
add
fldl
jmp
enter
add
pop
add
loopne
lcall
in
push
add
shl
shr
pop
add
push
push
lea
push
call
add
add
add
mov
add
xchg
add
pop
add
pop
push
add
stc
lds
out
add
fs
add
arpl
mov
push
add
add
in
hlt
pop
push
push
lea
push
lea
push
push
push
call
ja
fwait
mov
push
pop
mov
insb
add
mov
stos
imul
push
mov
scas
cld
add
lcall
fiadds
ret
xchg
out
jns
add
add
shlb
ror
add
lcall
push
lea
push
push
lea
push
push
push
push
call
mov
stos
lcall
mov
add
fwait
mov
pop
ja
jecxz
mov
xchg
add
add
insb
jecxz
outsl
faddl
imull
fidivrs
add
in
push
hlt
fidivs
add
mov
add
popf
add
mov
in
in
push
push
rol
pop
push
movl
push
inc
not
shl
pop
addl
push
push
push
push
push
push
call
je
push
mov
add
xchg
add
testl
les
push
mov
addl
aad
mov
mov
sahf
add
add
add
add
add
add
add
add
shl
jecxz
mov
fiaddl
xchg
fiaddl
loopne
imul
stos
sub
pop
test
je
mov
push
push
push
push
call
popf
jp
addb
add
mov
cli
popl
add
add
add
in
loopne
add
jne
add
stos
cli
add
add
mov
mov
stos
add
pop
subb
int3
fst
mov
subl
mov
call
lock
lcall
pop
push
rol
pop
pop
push
push
call
push
add
add
add
fxch
xchg
icebp
add
mov
add
pop
in
add
stos
add
add
testb
xchg
add
add
fiadds
lea
lcall
push
jbe
decb
clc
lcall
leave
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
add
aad
add
fcoml
mov
add
add
add
pop
xchg
add
popl
jne
gs
mov
jmp
mov
add
testb
mov
in
push
sub
pop
ret
push
push
push
push
push
call
mov
into
lret
mov
add
add
add
mov
push
add
add
add
popf
enter
add
add
lock
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
add
add
ror
add
pop
add
fwait
fs
add
push
addr16
jecxz
add
out
sti
add
add
add
scas
add
pop
add
nop
push
xchg
add
jb
add
clc
xchg
add
rcll
mov
in
fcomps
cld
push
push
lea
push
push
call
jne
fsubrp
mov
push
clc
outsl
lods
shrl
sti
out
popa
lcall
mov
add
jl
mov
add
xchg
jns
js
int3
enter
hlt
add
push
test
jb
fildl
add
add
cld
sub
pop
push
push
dec
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
add
lret
mov
lock
add
add
ljmp
pop
add
mov
push
xlat
jnp
xlat
popf
out
add
add
add
add
mov
mov
ja
bound
jbe
add
lcall
push
add
shr
add
add
pop
push
push
pop
testl
push
xor
pop
addl
push
inc
pop
push
push
pop
call
mov
push
shl
not
pop
pushl
push
pop
push
push
dec
pop
push
push
add
pop
call
push
lea
push
push
lea
push
push
push
call
hlt
add
out
sarw
addb
lahf
mov
add
icebp
jo
jl
bound
rolb
rcr
add
jbe
add
hlt
jecxz
push
add
add
pop
mov
mov
push
add
add
mov
icebp
rcrb
add
pop
cmpl
jne
push
ror
inc
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
add
iret
jle
lahf
ja
lock
sahf
add
arpl
push
add
jae
nop
mov
out
mov
stc
add
pop
push
dec
pop
pop
push
shl
dec
add
pop
leave
push
dec
ror
dec
sub
pop
ret
push
dec
rol
dec
pop
push
push
push
call
xorl
add
scas
add
pop
add
xchg
add
add
add
rolb
add
add
xchg
mov
gs
mov
mov
cli
imul
xchg
mov
fs
xchg
pop
les
add
mov
pop
mov
add
push
push
push
push
push
push
lea
push
push
call
add
cltd
pop
add
push
pop
test
addl
xchg
js
icebp
sti
mov
mov
cli
test
pop
cli
add
add
mov
add
cli
loope
ljmp
lcall
push
push
lea
pop
push
push
push
rol
shr
sub
rol
pop
movl
push
push
push
lea
push
push
push
call
jp
add
rolb
add
mov
add
sti
mov
lret
test
mov
add
mov
xchg
add
add
popf
jge
add
push
pop
lock
xchg
add
push
int
fiaddl
add
fiadds
add
push
push
lea
push
lea
push
push
call
mov
add
add
push
jmp
add
movsl
add
into
lahf
into
add
lret
popa
out
fmul
fnstenv
mov
test
add
mov
lret
in
sahf
jp
mov
clc
stc
cmc
jp
add
add
jo
add
call
popa
add
gs
in
lock
lcall
mov
call
jmp
pop
push
call
push
not
add
inc
pop
subl
push
dec
pop
cmpl
jne
push
shl
not
pop
pop
push
push
push
lea
push
push
lea
push
call
mov
add
pop
add
js
add
add
jns
cmc
aad
int
fiaddl
add
int
push
jmp
mov
movsl
sti
repnz
mov
add
call
add
shr
add
pop
pop
pop
push
push
push
push
push
call
lea
ret
add
out
add
icebp
pop
add
add
add
cli
jecxz
add
add
xchg
add
je
sti
add
add
leave
ret
push
inc
add
xor
pop
push
push
dec
shl
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
lds
sahf
add
add
mov
add
push
add
add
add
outsl
shr
add
pop
call
push
pop
add
lahf
add
test
add
neg
mov
les
push
rolb
aam
sub
pop
add
push
push
call
test
std
add
in
pop
lds
cmpsl
add
add
adcb
add
roll
add
icebp
mov
popa
hlt
add
ja
cltd
movsl
add
jnp
shlb
in
clc
lcall
push
lea
pop
push
push
shl
lea
ror
inc
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
loopne
push
add
loop
push
cltd
ror
je
mov
cltd
lahf
addb
add
push
add
mov
add
test
mov
add
add
stos
xchg
add
add
stc
add
fistpll
xchg
sahf
cmpb
add
add
push
add
leave
xchg
cwtl
fsubrl
mov
lea
push
push
lea
push
push
push
push
push
push
push
call
pop
fiaddl
add
arpl
xchg
jl
push
jnp
jp
jns
add
jnp
jne
mov
add
nop
mov
stos
mov
push
mov
in
fdivr
lcall
call
mov
shr
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
add
fnsave
in
add
test
stc
jbe
scas
add
add
out
add
add
add
pusha
sub
pop
add
mov
push
push
push
push
push
push
push
push
push
push
call
test
cld
jne
fcoml
bound
scas
add
add
add
pop
add
popa
shlb
add
jp
lret
rorl
cld
mov
lret
into
in
add
jl
testb
push
xchg
add
add
add
in
fcomps
andb
or
pop
add
push
lea
push
call
add
add
add
repnz
ljmp
push
add
jae
fbstp
imul
add
lcall
sub
pop
mov
mov
push
push
push
push
push
push
call
je
subl
jb
lea
mov
aad
add
xlat
jmp
add
lcall
add
add
mulb
add
add
filds
lcall
pop
outsl
jne
push
push
call
int
pop
add
xchg
mov
xchg
pop
addl
mov
test
in
xchg
lods
add
arpl
add
imul
add
imul
push
mov
fisubs
xchg
push
mov
pop
roll
mov
popf
mov
lcall
cwtl
fadds
add
jne
push
push
push
push
call
push
add
jo
out
mov
add
xlat
add
xchg
mov
add
add
in
fsubrp
add
pushf
std
add
mov
mov
push
lea
push
push
lea
push
call
add
push
pop
pusha
les
add
out
add
add
lds
pop
add
jae
mov
add
add
add
lcall
add
add
add
ret
or
ret
mov
mov
push
sub
sub
pop
mov
push
ror
pop
sub
jne
mov
push
add
inc
add
shr
pop
movl
jmp
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
mov
mov
add
add
mov
add
jbe
jns
add
add
aad
xchg
aad
pop
hlt
stc
popf
add
repnz
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
std
add
add
jmp
push
add
lret
push
add
bound
add
xchg
mov
shll
icebp
jmp
mov
fwait
add
cmpl
sbbb
loope
pop
mov
add
add
add
mov
add
leave
ljmp
mov
add
cmp
jne
push
dec
lea
inc
pop
mov
movl
push
push
push
push
lea
push
push
lea
push
call
xchg
int3
lcall
add
in
add
out
movsl
out
add
mov
iret
vpperm
mull
add
add
je
test
sub
pop
jmp
push
shl
pop
mov
cmpw
jne
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
jmp
lods
add
mov
push
stc
add
lods
add
add
lret
mov
mov
movb
mov
mov
mov
add
add
add
sub
pop
mov
push
sub
ror
add
lea
pop
movl
push
rol
sub
add
pop
jmp
push
push
push
call
xlat
fmull
add
fildl
mov
jns
test
add
add
mov
add
add
add
add
add
push
arpl
mov
jae
add
add
add
fadds
push
add
add
mov
sub
pop
pushl
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
lahf
cmpsl
push
mov
pop
xchg
ljmp
testl
add
jns
add
jp
jno
mov
in
add
jecxz
add
add
add
add
js
into
add
add
sub
pop
mov
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
ftst
add
add
in
jl
jbe
add
jecxz
divb
std
sbbb
add
mov
add
xchg
add
fcoms
add
icebp
leave
add
add
mov
rolb
add
pop
add
add
add
in
fcompl
push
or
addr16
inc
push
shr
push
xor
add
ror
sub
pop
sub
inc
sub
lea
pop
push
push
push
lea
push
push
push
push
call
add
iret
popa
out
add
lret
pop
clc
repnz
push
add
mov
add
add
add
lea
mov
notb
cwtl
add
add
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
shr
xor
shr
push
or
not
add
ror
sub
not
rol
rol
pop
shr
pop
push
push
push
push
push
push
push
push
push
push
call
add
xchg
add
xchg
popf
add
ljmp
roll
add
fisubl
add
mov
addb
pushf
jne
jmp
pop
xchg
jns
add
stc
mov
push
imul
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
out
orb
add
mov
popa
add
pop
add
jle
push
add
add
push
pop
cmpsw
cwtl
xchg
pop
lock
add
mov
add
lcall
cmpsb
aaa
add
push
push
push
lea
push
push
push
push
call
in
add
add
call
fwait
lret
add
add
push
out
int3
lods
call
roll
leave
add
add
clc
cmpsl
sub
pop
cmpl
je
push
push
inc
xor
push
push
pop
add
ror
sub
sub
inc
pop
pop
push
push
push
call
jo
add
cmpb
add
push
add
add
add
jmp
clc
add
add
add
mov
push
add
add
popl
int
lea
add
fsubrs
icebp
jno
add
call
push
shl
pop
cmpl
je
push
push
rol
rol
sub
push
and
add
sub
lea
not
sub
inc
ror
pop
rol
pop
push
push
push
lea
push
push
push
lea
push
call
iret
mov
enter
pop
movsb
xchg
fcmovnbe
add
out
mov
loopne
add
xchg
mov
xchg
jno
lea
cwtl
clc
imul
add
in
push
push
push
push
lea
push
lea
push
push
push
push
call
jle
mov
cmpsb
jo
loop
jge
test
out
lods
add
add
test
lret
add
xchg
jb
add
stc
mov
add
loope
icebp
xchg
add
nop
xchg
lods
add
push
pushf
mov
jo
imul
xchg
add
add
add
ja
mov
sub
pop
call
push
push
push
call
jge
loop
cli
add
add
pop
mov
fnstsw
add
add
roll
movb
add
add
add
push
add
or
mov
call
in
cmpsl
push
leave
add
add
jp
add
pop
mov
jnp
push
cmpsb
in
faddl
cmpsl
sub
pop
cmpl
je
push
push
rol
push
xor
add
sub
dec
sub
pop
shr
pop
push
shl
pop
push
push
shr
pop
call
cmpl
je
push
push
shr
inc
push
xor
add
add
rol
ror
sub
lea
sub
sub
pop
sub
ror
shl
lea
pop
push
sub
inc
pop
push
push
rol
pop
call
push
push
call
add
ljmp
out
add
jne
jmp
out
arpl
push
add
add
pusha
mov
add
add
xchg
mov
in
clc
pop
cmpl
je
push
push
shl
push
and
add
sub
lea
pop
xor
add
pop
push
ror
add
rol
pop
push
call
push
push
push
push
lea
push
lea
push
push
push
push
call
lds
push
cld
add
add
xchg
push
ficoml
lods
mov
addb
cmpsb
add
add
pop
pop
into
ljmp
xorl
add
add
cld
add
add
bound
add
outsl
imul
cmpl
pop
cmpl
je
push
push
inc
shr
rol
push
push
pop
add
sub
not
shr
sub
add
sub
rol
ror
pop
rol
pop
push
shr
inc
xor
pop
push
push
sub
shr
sub
pop
call
cmpl
je
push
push
ror
add
push
or
inc
add
not
sub
sub
add
sub
dec
pop
pop
push
push
push
lea
push
call
flds
mov
cmc
add
scas
fcmovnb
add
mov
mov
shr
add
stos
xchg
mov
add
lcall
add
add
jne
pushf
fiaddl
add
mov
hlt
cmpb
jo
in
lock
push
push
sub
pop
call
push
push
call
mov
add
pop
add
pushf
xchg
fadds
add
popf
lods
jo
jmp
xchg
rolb
leave
jnp
add
pop
pop
js
mov
subl
add
addb
add
add
add
xchg
xchg
lea
out
xchg
add
jl
cltd
into
add
push
out
repnz
sub
pop
cmpl
je
push
push
shl
push
or
not
add
add
sub
shl
shl
rol
pop
rol
rol
pop
push
rol
pop
push
push
shl
pop
call
push
sub
rol
pop
cmpl
je
push
push
not
dec
sub
add
push
sub
add
shr
lea
sub
inc
pop
sub
pop
push
push
lea
push
push
push
call
add
ljmp
aad
movsb
add
js
gs
add
imul
add
stos
addb
movl
filds
stc
xlat
add
add
test
add
mov
add
add
roll
add
add
add
in
in
pop
push
push
lea
push
push
call
jp
insb
add
into
pop
add
add
add
mov
add
mov
stc
add
movsb
add
popf
xchg
add
lock
add
add
filds
mov
jns
add
test
les
lods
add
add
add
jbe
pop
add
jns
sub
pop
call
push
lea
push
call
add
subl
testl
ret
pop
add
enter
add
popa
add
sub
pop
cmpl
je
push
push
push
or
inc
add
not
sub
sub
inc
pop
inc
lea
sub
pop
push
ror
pop
push
call
push
push
push
lea
push
push
call
mov
sahf
sti
mov
popa
add
jnp
add
mov
mov
add
add
roll
mov
push
mov
add
add
xchg
mov
les
mov
popa
cld
add
pop
jno
mov
in
in
pop
cmpl
je
push
push
sub
rol
push
xor
add
add
shr
sub
shl
pop
xor
not
lea
pop
push
not
rol
not
shr
pop
push
push
add
pop
call
push
ror
xor
shr
ror
pop
cmpl
jne
mov
push
add
inc
pop
movl
jmp
push
push
push
push
call
mov
add
jp
pop
xchg
add
add
mov
jbe
add
filds
jo
loopne
add
lahf
fldl
cmpsb
loopne
add
xchg
mov
in
lock
xor
push
push
call
xchg
add
je
les
add
icebp
mov
scas
imul
xchg
add
testb
cwtl
add
sbbl
mov
lret
gs
add
add
add
rolb
stos
ret
loope
add
lcall
push
pop
pop
push
push
push
push
push
push
call
add
push
add
xchg
out
js
add
je
fcmovbe
add
add
je
add
jnp
subb
xchg
push
add
pop
add
testb
data16
decb
add
add
add
add
lcall
push
push
push
push
push
push
push
call
push
add
bound
clc
add
pop
roll
scas
lret
cwtl
in
fldl
add
fidivrs
xchg
aad
add
mov
scas
add
stc
add
add
in
add
fisubl
loop
test
in
in
lcall
leave
push
lea
pop
ret
push
xor
shr
shr
pop
push
push
push
call
loop
add
add
add
mov
cltd
push
std
ret
push
out
mov
jecxz
fcmovnbe
pop
add
in
push
push
push
push
push
push
push
call
stc
add
cwtl
add
pop
out
test
ljmp
addl
push
add
jne
add
ja
int3
add
mov
sub
pop
add
cmpl
jne
push
push
rol
sub
push
or
not
add
inc
shl
sub
sub
sub
inc
pop
shl
dec
lea
add
pop
push
ror
pop
pushl
call
push
lea
pop
push
call
push
sub
sub
pop
jmp
push
push
lea
push
push
call
add
mov
adcl
stc
mov
push
mov
add
push
fcompl
test
scas
add
add
jne
out
lds
int
hlt
stc
add
add
xchg
scas
imul
mov
xchg
add
add
movl
add
jge
add
test
add
push
add
lea
pop
cmpl
jne
push
push
push
push
call
les
xchg
add
je
scas
add
xchg
rcrb
add
xchg
mov
rolb
fwait
pop
add
add
add
ret
add
fs
imul
jecxz
lock
test
fildll
add
add
push
sub
pop
pop
push
push
push
call
insb
outsl
flds
xchg
add
jns
add
add
arpl
add
lret
add
out
std
aam
xchg
add
mov
iret
flds
pop
add
add
cltd
add
add
push
push
lea
push
push
push
call
or
add
js
fadd
sti
mov
add
nop
out
mov
push
rolb
add
pop
mov
jl
add
add
add
xlat
out
mov
out
add
lods
add
mov
add
lcall
push
dec
pop
pop
push
lea
rol
add
lea
pop
leave
push
dec
add
shl
pop
add
push
lea
push
call
add
add
add
add
jge
add
add
add
jno
xchg
arpl
pop
add
lds
push
xor
sub
not
rol
pop
jmp
push
sub
sub
sub
pop
cmpl
jne
push
push
shr
lea
sub
push
or
not
add
xor
inc
shr
sub
rol
pop
add
add
dec
rol
pop
push
xor
rol
pop
pushl
push
xor
sub
pop
call
push
push
sub
inc
pop
call
jmp
push
push
call
cwtl
add
addr16
add
add
add
cli
js
mov
push
into
add
clc
jle
add
add
jp
in
clc
lcall
jge
add
test
push
push
call
cli
add
roll
xchg
insb
roll
fcompl
mov
add
add
jbe
in
add
jmp
cli
popa
add
je
add
pop
push
jl
mov
bnd
fwait
or
hlt
lcall
add
add
push
rol
xor
add
pop
mov
push
push
push
lea
inc
push
push
pop
add
xor
sub
sub
dec
shl
ror
not
pop
lea
add
dec
pop
push
rol
pop
pushl
call
push
xor
pop
call
push
push
add
push
sub
add
add
shl
sub
pop
dec
pop
push
lea
inc
shr
pop
pushl
call
push
push
lea
push
push
push
push
push
call
xchg
mov
add
jb
mov
fwait
stos
lods
js
add
loope
sahf
lret
into
mov
add
push
cld
add
imul
add
rolb
jno
insb
test
add
mov
call
push
push
sub
push
sub
add
not
sub
shr
pop
sub
add
not
pop
push
push
lea
push
push
call
add
add
add
add
gs
lods
cmpsl
mov
mov
in
mov
fadds
add
addb
into
loop
xchg
enter
add
add
add
stc
pop
outsl
add
add
in
lock
pushl
call
push
xor
pop
call
push
push
shr
add
shr
push
sub
add
rol
sub
inc
pop
add
shl
pop
push
add
pop
pushl
call
push
inc
sub
pop
call
push
push
dec
not
push
and
add
inc
shl
sub
pop
add
sub
pop
push
add
pop
pushl
push
ror
add
pop
call
push
sub
sub
inc
pop
call
push
push
lea
sub
sub
push
push
pop
add
sub
shl
sub
sub
add
pop
sub
shr
shr
pop
push
lea
push
lea
push
lea
push
push
push
call
scas
add
push
add
mov
add
add
mov
mov
push
mov
push
subl
mov
in
call
pushl
push
push
call
add
add
mov
push
add
je
loop
push
lods
fwait
push
shl
xchg
add
add
add
popf
add
movsb
xlat
cmc
cmc
add
sub
pop
call
push
xor
rol
pop
call
push
push
shr
push
or
inc
add
dec
shr
not
sub
shl
pop
not
add
pop
push
lea
sub
rol
lea
pop
pushl
push
add
shr
lea
ror
pop
call
push
rol
pop
call
push
push
lea
push
or
not
add
shr
sub
inc
sub
pop
ror
ror
shr
sub
pop
push
dec
sub
pop
pushl
call
push
pop
call
push
push
sub
ror
push
xor
add
rol
sub
lea
dec
inc
not
pop
lea
dec
add
pop
push
push
lea
push
lea
push
push
push
call
push
add
add
in
add
add
add
add
ja
add
test
mov
add
jo
add
lcall
jne
push
push
push
lea
push
lea
push
lea
push
push
call
stos
add
add
jmp
add
lods
lock
lea
add
add
add
xchg
clc
add
add
aam
add
test
jbe
sub
pop
call
push
shl
sub
inc
inc
pop
call
push
push
inc
not
sub
push
and
add
xor
rol
sub
pop
add
shr
dec
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
push
mov
add
push
add
add
add
mov
call
add
shrb
add
add
add
fs
hlt
mov
ret
add
add
mov
lods
mov
add
add
lcall
jne
call
push
push
push
push
call
add
add
roll
arpl
sti
add
add
add
cmc
mov
mov
stc
fs
loop
pushf
test
lcall
pushf
and
call
shr
shr
inc
pop
call
push
push
inc
sub
add
push
xor
add
add
sub
xor
not
pop
dec
shr
pop
push
push
lea
push
lea
push
call
add
xchg
add
add
test
jecxz
lock
faddl
mov
rcl
clc
add
add
add
test
add
push
mov
jne
sub
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
push
call
test
shr
push
pop
push
add
addl
add
movsb
movsl
mov
add
mov
add
mov
push
mov
mov
mov
lods
ljmp
lret
add
imul
pop
call
push
push
sub
push
xor
add
add
xor
add
sub
add
inc
lea
pop
inc
rol
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jecxz
add
add
add
mov
sbbl
add
add
add
mov
xchg
add
iret
filds
add
add
mov
add
roll
push
push
idivl
cltd
add
push
add
add
ja
mov
pop
pushl
push
add
shl
pop
call
push
push
push
lea
push
lea
push
push
call
test
mov
shll
insb
jae
sti
sti
icebp
add
test
lea
add
add
xchg
flds
mov
aam
sub
pop
call
push
push
rol
shl
push
and
add
sub
sub
dec
not
pop
sub
rol
ror
pop
push
inc
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
jnp
mov
ficompl
xchg
mov
test
dec
add
push
xchg
add
add
mov
add
add
add
add
mov
add
add
add
add
test
out
les
add
mov
imul
in
fdivr
lcall
rorb
ljmp
popa
mov
push
pop
add
shr
xor
lea
sub
inc
shl
not
pop
add
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
fs
add
push
call
add
pusha
scas
rcrl
add
lock
cwtl
ret
mov
add
frstor
loopne
addb
rorb
lods
mov
pop
fiadds
lcall
jne
call
push
push
lea
push
push
push
push
push
push
call
add
push
jb
mov
out
mov
loope
mov
add
add
std
jle
add
push
out
add
lret
add
in
add
xchg
cwtl
add
mov
add
xlat
add
iret
stos
fwait
add
rclb
add
mov
add
pop
add
fcmove
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
imul
add
add
repnz
add
xchg
mov
lahf
add
add
add
add
mov
fsubrs
lcall
shrb
sbb
lds
push
or
inc
add
rol
add
lea
dec
sub
sub
xor
shr
pop
add
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
lock
scas
add
ja
add
add
filds
cltd
lock
add
jle
add
mov
add
add
mov
nop
pop
testl
aam
add
add
cld
add
add
add
popf
jae
add
scas
adcb
stos
in
mov
add
add
cltd
lcall
loopne
cld
add
pushl
call
push
rol
xor
pop
call
push
shr
add
not
pop
mov
push
push
not
push
push
pop
add
not
rol
sub
ror
rol
sub
pop
dec
pop
push
push
push
push
call
lret
add
mov
add
add
in
shlb
add
pop
xchg
shlb
mov
popf
add
fninit
add
in
lock
lcall
jne
push
dec
pop
call
push
push
shr
pop
pushl
push
push
lea
push
push
push
push
push
push
lea
push
call
ja
add
xlat
addb
je
mov
test
scas
add
add
mov
fidivrs
cmpsl
mov
rolb
add
sub
pop
call
push
push
push
push
pop
add
shr
shl
shr
add
sub
inc
shl
sub
sub
pop
sub
pop
push
push
push
call
push
imul
add
sti
mov
mov
mov
iret
add
fldl
mov
jp
xchg
push
jnp
mov
lds
movsl
mov
add
out
jecxz
add
aam
leave
xchg
push
je
rolb
jge
mov
jge
sub
pop
pushl
call
push
push
lea
dec
sub
inc
push
or
inc
add
sub
sub
add
pop
ror
add
pop
push
push
add
push
or
inc
add
shr
sub
dec
xor
pop
inc
pop
push
push
push
push
call
add
add
icebp
rol
add
imul
jmp
add
stos
add
mov
lcall
add
add
add
jmp
add
mov
jle
ja
fs
add
sub
pop
call
push
push
dec
dec
rol
sub
push
and
add
add
sub
add
not
pop
add
not
pop
push
lea
push
lea
push
push
push
push
push
call
add
in
add
sti
add
popf
jno
pop
add
add
test
stos
push
add
adcl
add
mov
loop
add
outsl
js
add
jmp
xchg
xlat
mov
add
jb
lahf
test
movb
add
outsl
add
lcall
jne
push
push
call
mov
mov
loop
push
add
add
add
add
gs
mov
mov
add
lods
add
pushf
xchg
sahf
lods
ljmp
cmpsb
add
jno
add
popf
mov
jmp
lcall
rcrb
add
jp
xor
add
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
hlt
mov
xchg
scas
pushf
out
iret
push
xorl
add
lock
cli
fldt
fnstenv
test
jmp
add
add
add
jmp
mov
add
push
ja
jne
add
repnz
gs
pop
push
lcall
pushf
and
call
rol
ljmp
test
call
lea
rol
add
inc
pop
push
push
push
call
add
add
add
add
stc
hlt
mov
rolb
add
xchg
pop
jge
add
jl
xchg
flds
jae
cld
add
scas
int
sub
pop
push
push
push
push
push
push
push
call
add
pop
mov
jne
add
add
mov
push
leave
mov
imul
add
pop
add
jo
pop
pop
test
imul
add
out
insb
xchg
add
scas
add
jae
addl
in
in
lcall
add
push
push
push
push
call
xchg
insb
ror
jnp
ljmp
addb
pop
filds
imul
add
fisubrl
add
jmp
xchg
jno
add
add
lahf
push
mov
add
add
add
test
bound
ja
stc
add
add
lcall
add
into
ror
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
int
ret
test
add
add
add
cwtl
mov
add
xchg
add
mov
test
rolb
fsubr
sub
pop
pushl
push
push
push
push
push
push
push
push
call
add
jp
jecxz
cmpsb
add
jnp
jo
add
xchg
fiadds
div
rolb
pop
xchg
add
cwtl
icebp
faddl
insb
add
push
shlb
add
push
add
add
add
add
jl
data16
xchg
add
mov
cltd
test
jbe
add
mov
add
add
loope
rol
pop
call
push
push
push
xor
add
not
sub
dec
pop
dec
add
pop
push
push
lea
push
lea
push
call
pop
jl
in
fldl
jp
mov
mov
add
bound
push
xchg
lods
add
stos
jl
cmc
je
cwtl
add
mov
add
in
lock
lcall
jne
push
push
push
lea
push
push
call
sub
xchg
add
loopne
add
jmp
out
fiaddl
mov
mov
bound
nop
popf
mov
test
mov
ret
aad
add
add
add
xchg
sub
pop
call
call
push
lea
push
call
add
add
add
out
lea
jecxz
add
add
mov
ljmp
jnp
test
xchg
lcall
insb
add
int
add
loopne
add
push
xchg
cmpsl
div
add
cli
add
add
add
faddl
out
add
add
iret
jle
aam
stos
add
push
popf
sub
pop
mov
push
pop
pop
push
rol
shl
rol
shl
pop
dec
jne
push
not
shr
dec
pop
jmp
push
shl
pop
call
push
push
push
xor
add
shl
add
sub
ror
shl
pop
shr
inc
pop
push
inc
pop
pushl
call
push
inc
ror
xor
sub
pop
push
push
lea
push
call
bound
add
gs
add
rolb
add
add
add
add
pop
xlat
stos
add
fstpl
enter
in
clc
pop
call
push
sub
pop
mov
push
shl
ror
pop
lea
push
push
add
push
xor
add
shr
sub
ror
pop
shl
dec
pop
push
shr
inc
inc
pop
pushl
call
push
push
push
lea
push
push
push
push
push
lea
push
call
arpl
jbe
add
filds
mov
add
roll
xlat
jmp
add
aam
sahf
add
mov
add
lret
in
fcompl
push
shl
shl
inc
pop
call
push
push
add
lea
xor
push
or
not
add
not
inc
dec
sub
lea
xor
shr
xor
pop
sub
inc
shl
shl
pop
push
pop
pushl
push
rol
pop
call
call
push
push
lea
push
push
call
add
jp
arpl
out
mov
add
fwait
add
into
add
mov
add
add
xchg
in
shl
mov
mov
movsl
mov
add
jnp
into
cwtl
arpl
imul
cltd
mov
add
add
xchg
mov
lea
push
push
shl
push
sub
add
sub
ror
sub
not
ror
shr
pop
not
add
dec
pop
push
push
push
push
push
push
push
push
push
call
mov
imul
test
jp
add
movsl
sar
scas
add
mov
add
data16
stos
add
add
in
int
out
add
in
add
fmulp
lea
add
sub
pop
pushl
push
lea
push
push
lea
push
push
call
add
mov
test
add
add
fdivrl
mov
mov
add
mov
add
add
jnp
std
je
pop
mov
jmp
pop
add
testb
adc
ficompl
add
push
push
push
lea
push
push
lea
push
push
push
call
mov
cmc
add
xchg
push
add
mov
out
add
mov
mov
add
mov
xchg
cmc
add
out
popf
add
add
jmp
add
add
call
mov
jp
mov
pop
mov
in
in
push
push
lea
push
push
lea
push
push
lea
push
call
mov
popa
andb
add
mov
add
jmp
jnp
lret
mov
add
jmp
stos
mov
leave
add
push
ja
loope
gs
loope
lock
pop
add
js
jns
call
call
push
push
push
push
lea
push
call
jle
mov
add
mov
jmp
add
popa
rolb
icebp
jns
sahf
xchg
in
insb
out
push
stos
ret
add
push
add
push
addb
add
add
mov
rolb
int3
add
add
mov
icebp
movsb
push
cmc
nop
add
in
call
push
push
sub
dec
shr
push
and
add
dec
sub
add
xor
xor
pop
shr
lea
pop
push
push
push
push
push
push
lea
push
call
add
lret
mov
popl
add
movsb
add
mov
stc
add
add
jl
insb
hlt
jae
add
add
mov
add
add
xchg
add
add
mov
add
stos
xlat
clc
je
add
pop
add
sarb
mov
in
push
call
push
push
add
shr
push
xor
add
sub
pop
sub
dec
ror
dec
pop
push
push
push
push
push
push
push
lea
push
push
call
out
fstpt
mov
add
jne
jae
add
add
mov
fcmovbe
add
enter
add
int3
jmp
shl
mov
fdivr
lcall
jne
push
lea
push
lea
push
push
call
loop
push
jle
stos
mov
add
add
cld
icebp
add
add
lret
fiaddl
add
add
jb
aam
aad
jl
add
stc
mov
les
add
add
sar
add
lcall
lock
add
push
dec
add
pop
call
push
push
shr
xor
push
or
inc
add
shl
add
ror
sub
shr
shl
pop
shl
shr
pop
push
inc
pop
pushl
call
push
add
add
pop
call
jmp
push
push
push
lea
push
push
push
push
push
push
call
addr16
cwtl
icebp
add
hlt
enter
add
popl
mov
outsl
fadds
loopne
aam
leave
add
mov
add
mov
pop
jl
mov
add
pusha
leave
popf
add
cld
cwtl
in
add
pushl
mov
push
pop
jmp
push
push
not
shl
shl
push
sub
add
sub
sub
ror
pop
not
sub
sub
pop
push
dec
pop
pushl
call
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
cmc
pop
sti
imul
push
add
add
add
pusha
jge
cltd
jecxz
into
gs
addr16
mov
mov
add
add
add
lret
cld
imulb
add
xchg
push
cltd
jno
mov
add
mov
mov
push
xchg
add
add
fisttpl
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
add
scas
add
out
pop
add
add
fbld
ja
test
pop
out
testl
xchg
add
cmc
jl
jmp
lcall
shrb
rcl
push
dec
not
add
push
and
add
sub
add
sub
sub
xor
add
pop
shr
pop
push
lea
push
push
push
push
push
call
add
addl
pusha
xchg
insb
mov
std
fldl
add
clc
add
mov
sub
pop
pushl
call
push
push
push
push
push
push
call
stos
clc
add
mov
add
add
lods
add
andb
iret
add
cltd
in
cwtl
mov
add
ja
add
push
add
xchg
movb
add
addl
push
add
leave
test
int
jnp
xchg
sub
pop
push
call
push
push
lea
push
push
lea
push
push
push
push
push
call
cwtl
add
mov
jnp
add
movsl
hlt
add
add
fildl
or
addr16
add
add
js
add
add
cli
mov
mov
imul
jp
test
data16
mov
add
add
add
xchg
add
add
add
add
add
fidivrs
add
xchg
add
add
jmp
add
leave
add
push
push
push
push
call
add
int3
add
in
add
add
lock
push
add
popf
stc
add
add
cwtl
add
add
jb
jne
mov
add
add
jno
add
negb
pop
je
push
mov
into
out
scas
add
je
sub
pop
pop
pop
push
rol
pop
pop
push
lea
shl
pop
pop
push
push
push
push
lea
push
push
push
call
add
lea
incb
mov
aad
add
mov
jle
add
cmc
stc
add
add
out
mov
mov
push
imul
mov
pop
in
mov
roll
sub
pop
leave
add
push
push
push
push
push
push
call
add
xchg
lock
aad
sar
rolb
add
xchg
mov
int3
add
jl
add
jnp
add
add
arpl
add
movsl
add
movsb
icebp
pop
leave
jmp
mov
loopne
mov
addl
add
add
lcall
push
push
call
add
jno
jnp
jb
fwait
mov
mov
mov
add
add
add
add
add
add
mov
in
add
xchg
add
fiadds
faddl
lret
push
mov
xchg
jno
mov
add
lret
mov
push
cld
add
pop
sub
pop
leave
ret
push
push
push
lea
push
push
push
push
push
push
call
cmpsb
add
xchg
add
jne
push
movsl
out
xchg
test
pop
add
push
mov
insb
jo
add
xor
popf
sti
add
jo
mov
mov
insb
add
add
add
add
sub
pop
push
push
lea
push
push
push
push
lea
push
call
movl
push
push
pusha
xchg
add
add
add
cmpsl
int3
jbe
add
jns
stos
fcmovbe
add
add
mov
add
call
mov
cmpl
jne
push
lea
push
push
lea
push
push
call
jae
mov
add
add
cltd
rcl
push
xchg
test
leave
outsl
add
bound
xlat
add
into
sub
pop
mov
push
add
add
sub
rol
pop
jmp
push
sub
not
pop
mov
push
sub
pop
and
push
sub
dec
pop
xor
push
not
add
pop
xor
push
xor
lea
pop
add
push
lea
push
push
lea
push
push
push
push
call
shll
add
add
pop
add
popf
testb
cli
cltd
add
shl
jne
mov
jp
arpl
add
lcall
dec
call
jmp
inc
inc
pop
dec
push
push
call
add
xlat
jae
add
jae
add
testl
add
push
int3
add
cmpsl
push
add
pop
test
add
add
imull
inc
jge
add
sub
push
sub
pop
jmp
sub
push
push
push
push
push
call
add
xlat
add
popa
jnp
fiadds
arpl
jno
pop
lods
pop
sahf
add
shl
mov
jmp
scas
addb
push
add
fs
mov
std
xchg
add
add
jl
add
add
gs
add
cmc
mov
add
xor
jb
push
push
lea
push
lea
push
push
push
call
outsl
mov
fadds
push
mov
add
add
mov
jge
add
add
test
add
add
add
add
add
add
jae
stos
test
add
add
std
add
mov
ja
in
in
lcall
push
shr
rol
rol
pop
sub
push
sub
shr
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
nop
add
repnz
push
add
mov
test
enter
add
add
push
loope
in
add
jge
push
add
out
add
stos
pop
out
xchg
jle
add
jne
mov
jo
pop
jle
add
mov
add
add
shrb
mov
pop
mov
lea
push
lea
sub
sub
pop
sub
push
sub
pop
mov
push
inc
lea
pop
shr
add
push
inc
shr
pop
sub
push
push
push
lea
push
call
fwait
mov
add
fwait
add
xlat
add
add
add
add
add
add
mov
add
popf
lock
cld
add
sub
pop
pushl
pop
push
push
push
push
lea
push
push
call
add
push
add
push
stc
add
add
ret
xchg
js
add
mov
push
icebp
push
jno
jge
rcll
je
in
add
in
call
push
push
push
push
lea
push
push
lea
push
push
push
push
call
movb
popf
add
add
add
arpl
jmp
add
add
pop
add
popl
into
add
fstps
in
fdivr
lcall
loope
incl
add
iret
loop
sub
push
lea
push
call
push
out
in
mov
add
add
shlb
jb
arpl
jmp
push
add
add
mov
jbe
jmp
sub
pop
cmp
jne
leave
push
push
push
push
call
add
mov
test
into
xchg
iret
xchg
outsl
xchg
xchg
mov
into
add
addb
xlat
int
add
scas
xchg
pop
roll
fisubl
stos
lods
scas
loop
add
roll
add
add
in
lock
lcall
add
push
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
add
add
add
mov
lahf
jb
xchg
add
data16
add
add
mov
add
jne
fcmovb
xchg
add
mov
loope
add
add
add
sub
pop
mov
add
push
dec
pop
push
push
shr
inc
shl
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
scas
add
xchg
scas
pop
iret
add
add
roll
stos
movsb
add
fmull
int3
repnz
aam
mov
outsl
in
jmp
sub
pop
push
push
push
push
push
lea
push
push
call
loopne
leave
add
pop
ljmp
push
add
add
pop
mov
push
pop
add
jmp
mov
add
int3
mov
add
push
lea
pop
push
push
shl
pop
mov
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
jecxz
lods
add
add
add
add
mov
mov
mov
add
add
mov
add
pop
add
addr16
mov
add
into
jbe
add
add
add
mov
pop
pop
sub
pop
sub
push
push
push
push
push
push
push
push
push
call
add
add
add
stc
mov
add
rolb
add
jp
add
sar
fnsave
imul
add
into
mov
add
push
mov
add
data16
mov
insb
add
nop
add
add
add
rolb
stc
add
add
outsl
xchg
push
sub
pop
mov
push
shl
pop
shr
add
push
push
push
call
pop
fadds
ljmp
enter
mov
in
jmp
push
mov
add
test
les
add
pop
mov
add
push
rol
ror
lea
pop
mov
push
push
lea
push
push
push
push
push
call
ljmp
add
xchg
add
sahf
imul
add
add
iret
jecxz
pop
movl
add
fs
pop
bound
popa
add
jne
mov
xchg
out
add
mov
add
mov
lock
add
push
in
add
add
mov
pop
add
xor
push
shr
ror
ror
pop
mov
and
push
push
push
push
push
push
push
lea
push
push
call
add
cld
in
stc
jno
xchg
add
in
push
xchg
mov
add
cld
mov
mov
add
jecxz
lret
in
add
andb
add
lahf
push
add
mov
push
cld
fdivrs
lds
add
rolb
scas
push
cltd
sahf
nop
in
aam
aad
add
sub
pop
rol
rol
push
push
push
lea
push
lea
push
push
push
push
push
call
xchg
add
add
js
xchg
sbb
pop
mov
lret
jecxz
mov
in
add
std
add
add
out
sti
push
add
add
add
add
out
pop
xchg
add
sub
pop
xor
push
rol
pop
inc
push
sub
pop
cmpb
jne
push
push
lea
push
push
call
add
add
xlat
xchg
gs
add
mov
test
push
lret
mov
add
add
mov
rolb
add
xchg
jge
mov
mov
lcall
mov
mov
sub
pop
add
cmp
je
push
push
push
push
push
push
lea
push
lea
push
push
call
addr16
pop
jmp
lods
add
loope
push
stos
les
jbe
stos
mov
hlt
jmp
mov
leave
xlat
iret
add
jnp
add
in
push
push
pop
std
les
lods
add
fildl
scas
pop
add
xchg
add
movsl
lods
add
pusha
sub
pop
add
push
rol
pop
cmpl
jne
push
push
push
push
call
add
popf
add
add
push
jo
mov
cld
add
add
repnz
jle
mov
add
add
add
add
add
pop
clc
imul
mov
fiadds
loop
fcomp
fwait
stos
add
fldl
rcrb
push
lea
push
push
call
add
out
add
mov
js
mov
jecxz
lcall
out
out
add
add
mov
cld
int
sbb
add
mov
add
jl
test
outsl
add
add
sub
pop
pop
pop
push
xor
rol
pop
pop
push
add
lea
pop
pop
push
lea
inc
pop
leave
push
push
push
push
lea
push
call
xor
lea
popa
idiv
mov
lahf
add
mov
roll
incb
enter
popa
imul
add
shlb
lcall
or
mov
push
push
push
push
call
add
shll
stos
add
sahf
add
add
add
add
jmp
mov
mov
add
in
add
lcall
push
or
lea
pop
push
add
push
push
push
call
add
add
testl
add
in
outsl
shll
push
add
popf
add
add
add
ret
xchg
add
add
jmp
xchg
add
leave
add
add
insb
add
sub
pop
mov
testw
push
push
call
push
add
mov
xchg
stc
jle
add
shlb
rcrb
add
add
xchg
add
enter
loopne
jo
add
ffreep
add
rolb
add
stos
add
add
add
add
add
fiaddl
call
add
sti
fstpl
sub
pop
pop
pop
push
not
pop
mov
push
push
pop
call
push
lea
push
push
push
lea
push
push
lea
push
call
cmpl
roll
add
imul
lds
roll
icebp
test
sahf
add
rcrb
xor
push
xor
lea
pop
pop
push
push
push
push
push
push
push
push
push
call
jmp
add
faddl
add
mov
mov
pop
add
lret
add
sbbb
push
lret
cld
insb
add
xchg
add
add
lock
add
out
add
xlat
xchg
xchg
pop
push
pop
pop
pop
push
add
dec
dec
shl
pop
leave
push
shl
sub
pop
ret
push
push
lea
push
lea
push
push
push
push
call
push
out
push
sti
lahf
rcr
jne
add
lea
pusha
add
add
add
ljmp
add
add
add
movsb
add
pop
lcall
sti
add
pop
mov
push
add
sub
jno
sub
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
bound
hlt
cmc
jno
add
push
xchg
add
add
enter
int3
push
ffreep
into
pop
notb
add
je
add
lods
in
test
lock
add
in
fcomps
in
push
shr
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
scas
add
jle
mov
push
xchg
loopne
ret
add
pop
push
jne
add
aam
fcmovbe
push
xlat
enter
lret
jo
loope
mov
add
lcall
push
push
push
lea
push
lea
push
push
lea
push
call
add
ja
mov
fildl
mov
add
shrl
add
mov
leave
add
add
in
add
int
add
add
jmp
add
jecxz
add
add
movb
leave
jmp
in
lcall
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
out
add
add
fcoml
iret
or
stos
je
arpl
incb
jp
xlat
add
movsb
add
sbbl
xlat
sub
pop
push
push
push
push
push
push
call
pop
add
jle
jge
add
lret
add
add
add
addl
arpl
popa
add
add
fstps
iret
jmp
fsubl
movsb
add
testb
add
push
arpl
add
xchg
test
jbe
faddl
add
add
pop
or
leave
xor
enter
push
push
lea
push
call
add
add
pop
add
add
mov
fwait
add
fbld
lods
add
add
mov
mov
add
mov
jle
std
add
ret
add
lcall
push
shr
xor
shl
not
pop
lea
sub
push
add
inc
pop
mov
shr
push
push
push
call
fiadds
repnz
mov
loopne
mov
add
add
ljmp
add
hlt
icebp
jae
mov
push
mov
add
arpl
mov
add
ficoml
cld
inc
sub
pop
mov
push
push
push
push
push
push
call
add
add
add
mov
fcoml
flds
add
add
addl
add
cwtl
aad
lock
js
lock
jno
shl
stc
add
cmpsb
je
jecxz
jne
xchg
add
jnp
add
push
mov
xchg
into
mov
repnz
add
add
bound
imul
lcall
fcos
jae
push
push
push
push
lea
push
push
push
push
call
jae
add
add
add
fadd
cltd
add
cmc
add
add
add
add
add
mov
push
push
add
push
hlt
add
aam
in
xchg
addb
clc
ficompl
roll
add
sub
pop
popl
mov
push
push
push
lea
push
lea
push
lea
push
call
add
aam
scas
mov
shl
add
add
scas
imul
mov
add
lea
add
push
add
add
pop
in
add
jecxz
add
xchg
iret
loop
call
fldt
push
mov
add
sbbb
int
lret
jmp
add
clc
out
xchg
add
leave
add
sub
pop
add
push
pop
xor
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
cmc
add
test
add
mov
add
add
loope
cmc
add
lret
add
cmpsl
add
push
test
adc
push
not
pop
mov
push
pop
add
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
bound
add
push
add
add
ljmp
add
hlt
sahf
add
add
scas
add
movsl
bound
out
lods
jno
xchg
jne
add
xchg
nop
stos
add
testb
pusha
aad
cld
std
mov
add
fiaddl
mov
mov
cwtl
sub
pop
xor
push
not
pop
rol
push
push
push
lea
push
push
push
push
push
call
push
add
xchg
mov
add
add
add
mov
add
mov
in
push
popa
add
cmpsl
add
data16
add
push
push
push
push
push
push
push
call
jnp
in
rolb
lds
pop
push
add
add
lods
add
test
add
mov
add
xchg
add
add
sub
pop
nop
push
push
push
push
push
push
push
push
call
je
pop
bound
xorb
mov
shl
jl
add
loop
add
cmc
test
je
add
movsb
rcrl
jno
xlat
dec
add
mov
add
aam
jae
add
xchg
add
test
mov
add
jb
mov
sub
pop
xor
push
add
pop
nop
nop
push
not
xor
pop
inc
push
push
push
push
push
push
push
push
push
push
call
fisubs
cwtl
add
sti
add
add
jo
add
add
add
out
jo
add
add
ljmp
in
fcomps
nop
push
inc
pop
cmpb
jne
push
ror
shl
dec
pop
add
push
push
push
push
call
scas
add
fmul
test
mov
fbstp
mov
add
add
int
jae
xchg
movsl
push
add
fdivrs
add
add
scas
jbe
pop
shlb
lahf
push
pop
add
jecxz
add
mov
out
cmpsl
add
out
add
mov
mov
pop
popf
sub
pop
nop
nop
push
sub
inc
sub
pop
cmp
je
push
xor
pop
nop
nop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
xchg
add
xlat
add
add
out
int3
add
add
add
in
fistpll
mov
xchg
xchg
add
imul
push
dec
rol
ror
dec
pop
nop
nop
push
push
call
mov
sahf
scas
jge
fs
mov
add
add
add
mov
push
mov
add
add
subb
add
add
data16
jne
out
nop
cmpsb
jb
jl
mov
push
add
mov
mov
add
enter
lcall
jne
jb
push
shr
not
ror
pop
xor
jmp
push
push
push
call
mov
out
cmpsb
add
je
ficompl
jl
movsl
mov
flds
xchg
add
test
add
add
bound
testl
mov
ret
mov
hlt
lcall
push
and
xor
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
add
into
imul
cli
data16
add
add
add
mov
fildl
add
add
addl
add
xchg
xlat
add
sub
pop
movzwl
push
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
pop
add
add
add
ficoms
fsubr
add
leave
pop
add
in
xchg
add
movb
add
mov
lahf
add
add
testl
add
push
add
mov
add
add
sti
add
add
push
inc
ror
pop
mov
xor
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
push
addr16
add
xchg
add
add
lea
xchg
jb
into
add
bound
mov
in
add
in
pop
add
out
jo
cmpsl
add
add
addb
add
add
aad
add
gs
push
test
add
add
add
jge
je
pop
add
scas
jno
add
call
add
xor
pop
add
add
arpl
push
fidivs
add
add
sar
add
add
outsl
pushf
outsl
fs
imul
enter
lret
mov
add
add
jp
pop
rolb
xchg
loopne
add
push
cltd
lods
movsl
cmpsb
add
mov
pop
in
std
add
lcall
loope
push
rol
pop
xor
push
push
push
push
call
add
add
add
cltd
fdivs
shll
mov
pop
add
rolb
add
jecxz
mov
pop
add
lods
add
ja
in
lock
shl
push
shr
ror
pop
xor
push
rol
xor
pop
shl
push
shl
rol
shl
dec
pop
xor
mov
push
push
push
push
lea
push
push
push
lea
push
call
data16
popa
outsl
add
fists
add
testl
add
clc
hlt
mov
jb
rcrb
clc
pop
mov
add
movsb
repnz
xchg
add
movsb
add
add
add
add
scas
mov
jl
iret
sub
pop
add
push
sub
pop
pop
push
add
pop
pop
pop
push
xor
xor
shl
pop
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
jecxz
pop
shll
push
add
add
add
jecxz
add
loop
add
shll
mov
in
fdivr
lcall
ret
push
add
shr
pop
push
push
push
push
push
push
push
lea
push
push
call
add
jo
add
add
add
imul
movl
push
cwtl
stc
xchg
jae
lock
add
in
push
push
push
lea
push
lea
push
push
push
push
push
push
call
shll
in
pop
add
out
add
jecxz
add
aam
add
pop
mov
add
add
cli
add
add
mov
xchg
add
test
ficoml
scas
cli
add
loopne
add
add
add
add
add
add
fiaddl
fwait
cwtl
pop
fwait
add
in
fcomps
push
lea
push
push
push
push
push
push
call
add
scas
nop
in
sti
jmp
push
in
les
push
add
out
jecxz
pop
push
push
add
add
mov
add
xchg
add
bound
mov
jnp
add
mov
add
in
in
lcall
push
push
push
push
lea
push
push
push
call
adcb
add
add
add
add
add
lds
mov
ljmp
add
lods
add
xchg
mov
jle
jnp
in
call
imul
push
movsb
push
push
lea
push
call
add
out
call
add
in
movsl
stc
push
ja
push
jns
add
add
fxch
jnp
mov
add
jmp
add
pop
add
pop
int
data16
push
xchg
lret
jge
mov
sub
pop
mov
push
push
call
fildl
add
mov
add
add
mov
jns
rolb
clc
add
stos
add
xchg
add
iret
repnz
pop
mov
push
sub
pop
mov
test
je
push
push
push
lea
push
lea
push
call
into
jns
in
add
xchg
lcall
cld
add
add
jl
in
jl
in
add
xchg
add
jbe
add
pop
push
add
add
mov
mov
outsl
idiv
arpl
mov
bnd
add
add
mov
add
in
add
mov
add
lcall
jno
test
je
push
push
push
push
push
push
push
push
push
call
jne
test
clc
popf
add
addl
bound
cmpsb
add
add
add
add
add
lret
push
andl
in
fdivr
lcall
notl
mov
push
sub
pop
mov
push
not
shr
pop
inc
cmp
je
push
shr
pop
test
je
mov
push
push
push
call
xchg
xchg
int3
add
add
fs
popl
mov
push
add
add
jmp
pop
pop
je
add
lcall
mov
add
movsl
xchg
jae
bound
je
add
add
sbb
add
in
mov
mov
mov
rcrl
add
cmpsb
add
lcall
cmp
je
push
add
add
pop
test
jne
push
pop
xor
pop
push
push
call
mov
add
cmc
add
jno
push
add
add
jne
jo
test
pop
test
mov
enter
add
lods
xchg
add
repnz
mov
lahf
mov
xchg
xlat
mov
ja
add
ja
in
clc
pop
pop
push
push
push
lea
push
call
add
stos
mov
push
lret
into
add
mov
out
je
mov
mov
stos
sti
int
filds
xchg
adcb
pushf
loopne
shl
mov
pop
pop
push
push
lea
push
push
call
jnp
lahf
jnp
add
add
jnp
mov
rcrb
mov
into
add
add
stos
add
add
add
xchg
add
sahf
fwait
scas
rcrl
mov
roll
loop
je
iret
addl
add
add
add
jmp
nop
sub
pop
pop
push
push
lea
push
push
push
push
call
mov
add
icebp
add
pop
pop
scas
xlat
loop
add
push
les
add
in
add
add
xchg
leave
add
add
add
add
push
ret
mov
fldcw
push
add
add
fs
add
ja
adcl
in
call
add
loop
pop
mov
push
shl
inc
pop
inc
cmp
jne
push
push
push
lea
push
push
push
push
push
push
call
leave
add
in
mov
add
out
add
out
faddp
add
add
add
add
shrb
add
lahf
int3
mov
push
add
jmp
add
int
push
cltd
add
fwait
scas
add
add
add
lcall
jle
push
lea
push
push
lea
push
push
push
lea
push
push
call
jmp
add
negb
nop
add
in
stc
cmc
add
in
add
mov
add
jle
add
pop
add
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
div
fwait
add
add
add
iret
les
add
mov
add
mov
jmp
add
sub
pop
test
je
push
inc
inc
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
aad
test
cli
bound
fyl2x
add
rcrl
mov
out
mov
push
pop
mov
push
lcall
movb
push
call
lret
hlt
lods
enter
add
roll
lahf
jno
add
add
cld
add
mov
push
add
mov
add
add
add
pusha
jl
sub
pop
cmp
jne
push
xor
pop
mov
push
ror
pop
test
je
push
ror
sub
pop
mov
add
push
lea
push
push
call
add
mov
enter
add
data16
mov
add
ja
add
sbbb
add
add
add
add
add
add
add
add
add
add
jle
xchg
jbe
in
hlt
pop
cmp
je
push
sub
ror
pop
jmp
xor
push
sub
shl
pop
pop
push
sub
pop
pop
push
push
call
movsb
cltd
mov
add
pushf
mov
add
add
stc
pop
js
sbbl
add
add
test
add
hlt
mov
add
lcall
push
rol
add
pop
pop
leave
push
lea
push
push
lea
push
push
lea
push
call
mov
add
xchg
call
add
add
add
add
lret
add
mov
add
mov
fmul
in
rolb
filds
mov
add
mov
sahf
add
lcall
add
add
add
lods
aam
jge
cmpsl
scas
add
add
add
add
xchg
sub
pop
ret
push
sub
lea
pop
lea
pop
push
push
push
call
mov
into
add
popf
push
add
lret
add
add
lea
mov
rcr
mov
mov
sub
pop
pop
pop
push
not
pop
pop
push
sub
pop
leave
ret
push
not
pop
mov
pop
push
lea
push
push
push
lea
push
push
call
jno
lods
sbbl
add
add
jge
call
cmc
faddl
lods
add
add
clc
add
add
scas
stos
in
push
xchg
icebp
pop
add
lods
fisttpll
call
mov
add
jecxz
add
add
add
add
add
pop
push
add
pop
pop
leave
push
not
shr
dec
ror
pop
ret
xor
cmp
sub
cmp
xor
adc
and
adc
cmp
loop
cmp
leave
lock
xor
adc
jb
adc
mov
add
js
test
mov
clc
xor
pushf
lea
into
jg
subb
xchg
cmpsl
cmc
in
call
cmp
xor
stc
jg
jae
rcr
jl
lret
or
sbb
pop
inc
cmp
cli
dec
sbb
push
push
sti
sbb
mov
pop
outsb
and
test
imul
cmp
pop
clc
dec
mov
push
loope
xchg
push
in
pushf
cwtl
subl
pop
cmpsb
adc
add
pop
enter
add
loopne
inc
imul
leave
popl
pop
insb
test
jne
xorb
push
push
and
sub
inc
sbbb
xchg
pusha
imul
mov
jne
into
out
mov
aaa
inc
lahf
rcrl
inc
xor
mov
pop
cwtl
mov
aam
lds
stos
xchg
mov
lcall
xlat
cmp
leave
ds
sahf
push
dec
fbld
test
sbb
pop
push
data16
into
mov
dec
push
mov
adc
lods
bound
out
js
jl
pop
int
imul
and
xorl
sbb
pop
in
xchg
ret
aad
movsb
mov
adc
ja
add
mov
pop
in
sub
cmpsl
xor
mov
inc
insl
mov
fs
test
mov
mov
pop
adc
jae
mov
adc
xor
idivb
sub
shlb
lock
out
sahf
out
adc
push
imul
xor
aad
outsb
sub
rcrl
popa
mov
aas
insb
insb
fxch
add
std
fcomps
out
sub
nop
xchg
in
cmp
test
sub
push
inc
pop
xor
popf
bound
inc
iret
mov
push
enter
inc
in
inc
pop
mov
pop
xchg
inc
addl
push
dec
add
pop
imul
cld
fiadds
mov
call
adc
mov
mov
scas
cld
stos
shll
inc
ret
and
stc
push
xor
push
adc
aaa
pop
mov
xor
jle
scas
cld
ss
es
add
dec
ret
xchg
inc
in
shlb
and
outsl
jno
mov
jae
test
ficomps
call
ss
roll
js
dec
jecxz
add
int3
mov
push
in
pop
pop
push
dec
pop
orb
in
idivb
stc
inc
dec
and
push
sbb
xchg
icebp
or
push
ja
xchg
loope
jne
movsl
mov
dec
mov
jle
data16
ja
mov
test
lds
shlb
mov
cmp
cmpsl
sqrtps
xchg
ljmp
mov
popa
in
lcall
ret
mov
fwait
testb
enter
loopne
std
out
xlat
iret
xor
mov
xchg
ret
sbb
push
into
pop
aas
rcr
push
jbe
add
repnz
jp
insl
cmp
xor
pop
mov
xchg
fdivrs
jmp
fwait
shl
sbb
push
sub
shr
jecxz
int
scas
xchg
push
test
add
das
inc
es
bound
dec
push
xor
cmp
aas
add
das
icebp
popa
push
out
mov
push
xor
int
pop
mov
lock
push
pushf
cmp
jae
cmpsb
pxor
xchg
and
mov
xor
cmp
push
mov
divb
loope
test
jbe
xchg
pop
mov
pop
xor
hlt
jge
out
popf
push
aas
mov
out
lahf
pusha
shrb
jo
mov
adc
xor
rcll
test
cmc
xlat
jmp
pop
sub
lret
enter
into
int
pop
aam
dec
sub
push
js
jle
sub
ja
scas
ss
call
add
fs
insl
leave
in
push
fwait
xor
jmp
mov
sbb
fcoml
push
push
stos
lea
ret
leave
lods
jne
scas
mov
adc
mov
inc
mov
fstl
addr16
inc
out
ja
in
or
or
imul
repnz
mov
cmp
daa
push
xchg
aad
cmp
inc
int
pop
nop
lcall
push
fnstcw
nop
gs
sub
subw
aas
xchg
mov
les
gs
push
cs
mov
pop
jecxz
fcmovnb
mov
ja
push
add
hlt
pop
cld
repz
fnstsw
pushf
mov
cmc
cmp
fwait
sub
test
jns
lret
fs
jp
ss
repnz
mov
rorb
lods
sub
sub
cmp
mov
mov
xchg
sbb
shrb
xor
push
xchg
fmul
sbb
jnp
push
cmp
fsts
jecxz
outsb
repnz
push
push
addr16
jnp
scas
add
push
xchg
outsb
jge
mov
cs
stos
in
inc
jno
inc
cmp
sub
out
mov
nop
imul
push
add
les
sbb
outsl
push
pushf
ljmp
aam
iret
sbbl
fdivr
in
mov
cld
bound
and
cmp
stos
jb
nop
ss
int3
cmp
xchg
dec
icebp
sti
fadds
outsl
data16
pop
pushf
in
imul
mov
cmp
push
jbe
cmp
movsl
ds
pop
insb
xor
outsb
mov
dec
shlb
mov
ja
and
cmp
sbb
fwait
repz
insl
add
pop
mov
dec
xchg
dec
int3
jnp
stos
add
push
cmp
xlat
xlat
mov
repz
mov
adc
sbb
rcrl
lcall
xchg
sbb
fwait
incb
and
and
rcrl
loope
adc
icebp
lret
adc
rcll
pop
push
push
test
xor
shr
js
dec
cmp
mov
inc
pop
daa
sbb
cmp
in
push
sarl
sub
mov
mov
jmp
loopne
ret
add
jo
dec
in
push
push
icebp
add
inc
dec
jle
sbb
mov
cmp
xchg
push
mov
mov
mov
test
cmp
ja
lahf
stos
inc
sub
cltd
or
ds
adc
mov
mov
jp
pop
and
inc
pop
por
fidivrs
lods
lea
or
mov
jle
div
push
dec
ja
in
dec
mov
or
sub
push
mov
xchg
cmp
loopne
les
add
push
lcall
lcall
pop
or
adc
inc
subl
test
push
shrl
xchg
or
cs
data16
xchg
sub
out
xor
mov
std
pmullw
jb
pop
push
cmp
iret
push
adc
inc
cmc
js
int
add
inc
mov
orl
dec
or
ds
push
sahf
push
sbb
lret
std
fwait
jmp
mov
jge
adc
inc
dec
outsb
enter
mov
push
sub
hlt
xor
bound
cmpl
imul
jne
or
lret
mov
popf
or
sbb
divb
stos
dec
or
inc
jns
lret
shll
or
or
xor
cmp
push
nop
mov
xor
jg
negb
enter
dec
mov
jl
ss
lcall
pop
lds
push
jp
test
popf
ja
xchg
xor
lret
icebp
lds
stc
pop
and
mov
es
xchg
ljmp
out
xor
leave
mov
inc
js
pop
cmp
ljmp
add
mov
dec
dec
adc
push
test
sub
mov
pop
enter
mov
push
test
sbb
ficomps
or
fisttpll
jmp
outsl
divb
xor
sbb
mov
lods
mov
pop
pop
sti
mov
push
cmp
push
hlt
pop
pusha
sbb
bound
in
cmpsl
in
popa
xchg
adc
das
nop
leave
push
pop
and
lcall
jb
xchg
popa
iret
ficoms
mov
and
mov
mov
push
sbb
mov
in
fdivl
mov
scas
pop
out
jle
cvtdq2ps
movb
sbb
mov
mov
jnp
jmp
and
pop
inc
sub
arpl
add
test
push
jns
and
and
sub
pop
adc
outsb
mov
lea
fwait
orl
xchg
xchg
shl
js
dec
mov
sub
fdivl
out
or
push
sub
arpl
pop
mov
sarl
sar
dec
push
andl
mov
sbb
aas
cmc
out
push
ss
add
cmp
scas
add
mov
push
mov
add
popl
addr16
xchg
xor
xchg
mov
jl
mov
pop
pop
sahf
xchg
and
push
jo,pt
cmp
outsb
stos
out
and
mov
dec
mov
loop
repnz
add
xor
push
ss
mulb
push
imul
and
mov
idivb
xor
je
jno
cltd
jecxz
mov
xor
sarb
adc
clc
scas
push
mov
xchg
dec
cmp
or
loope
aam
call
fcompl
test
orl
in
jno
lahf
xchg
fcmovu
pusha
aam
xchg
ds
jnp
xor
mov
cmp
pop
in
or
mov
test
mov
jno
frstor
rcr
jmp
cmp
xchg
loopne
clc
sbb
fucomp
aad
mov
push
and
jmp
sub
pop
and
pop
xor
sbb
and
mov
scas
loop
insb
ret
sbb
js
xor
push
lcall
ficoml
into
pushl
push
fmuls
xor
sbb
stc
adc
shlb
jb
or
rcr
cli
fadds
sbbl
lds
or
sub
ljmp
imulb
shl
xchg
push
sub
aad
out
cmp
cmp
movb
pop
xchg
inc
xchg
xlat
sub
cwtl
iret
in
cli
pop
in
push
enter
ja
fisttps
mov
mov
push
push
jge
psubd
add
in
cmc
test
mov
lahf
loope
data16
or
aaa
or
xchg
sub
adc
lcall
addr16
js
push
inc
xchg
arpl
jl
and
fsubs
mov
nop
push
enter
mov
aam
in
push
lret
loop
mov
pop
adc
leave
les
xor
xor
cmp
mov
in
gs
mov
stc
cltd
add
push
pop
int3
sbb
iret
xchg
imul
repnz
xchg
in
lods
xchg
xor
aad
xchg
jbe
out
int3
jp
outsl
xlat
add
and
ret
xchg
js
mov
lods
mov
inc
dec
test
mov
or
sar
lock
sti
sub
lret
dec
jg
cwtl
inc
mov
movsb
adcb
and
inc
testb
xchg
xchg
jbe
cmp
movsl
mov
loopne
xchg
stos
mov
push
sub
inc
test
pusha
mov
idivb
cmpxchg
in
rcrb
shlb
mov
out
adc
hlt
sti
xor
add
cmp
into
xchg
mov
xor
shrl
jb
das
imul
pop
or
mov
fiaddl
mov
in
lahf
lods
add
or
push
mov
lret
mov
sbb
dec
mov
outsl
jbe
fnstcw
xchg
sub
cmc
andb
push
jne
jg
mov
mov
xchg
jno
inc
pop
mov
subl
out
jne
out
xor
xchg
xchg
dec
in
rcll
negb
or
jns
xchg
pop
stos
movsb
push
je
test
cmp
jno
lret
lahf
stos
popa
test
pop
cmp
sarb
cmpsb
stos
mov
test
shrb
ret
inc
testb
xchg
mov
in
pop
jne
push
test
or
loopne
fiadds
shrl
sub
insl
cmp
cmpsb
testl
or
int3
in
loope
push
hlt
cmp
lcall
mov
mov
inc
jne
loopne
movsl
adc
cwtl
add
enter
xchg
popa
or
cmpl
arpl
xor
stc
jb
push
shlb
push
lcall
movsl
mov
ficoms
cmpsl
into
pop
xor
stc
mov
xor
mov
mov
js
xchg
mov
das
add
push
rcr
insl
jl
sbb
push
stos
sbb
cmp
dec
xchg
mull
mov
mov
fsubs
push
jl
mov
jbe
arpl
pop
mov
fildl
repnz
push
or
xchg
test
push
cli
cmp
sub
adc
xchg
dec
xor
and
cmp
hlt
add
add
lret
shrb
mov
cmp
incl
dec
pop
scas
or
xlat
push
sub
test
icebp
lock
cmpsl
fwait
jnp
pushf
stos
and
bnd
shlb
aaa
inc
dec
pop
add
mov
xor
cwtl
aam
decb
daa
sahf
pop
jg
and
lret
add
in
hlt
mov
dec
js
cmp
aad
ss
sbb
loope
stos
lahf
cltd
push
ss
fsub
loopne
sbb
sbb
xchg
and
fisubs
ret
adc
inc
or
cld
outsb
xlat
cmp
pop
mov
lea
mov
pop
cltd
jno
stos
dec
out
and
ljmp
mov
cmpsl
mov
jbe
add
pop
sub
pushf
mov
jp
or
dec
push
mov
out
inc
inc
aam
mov
mov
dec
or
ret
scas
filds
jl
push
test
mov
sbb
stc
mov
nop
nop
popa
dec
xchg
adc
mov
cltd
mov
push
add
ja
out
ret
sub
sub
xlat
inc
mov
mov
or
adc
aas
negb
cwtl
pop
mov
push
and
sarl
movl
xor
push
inc
or
in
sbb
scas
or
push
mov
and
movsb
sbb
loop
sahf
jns
add
dec
xchg
sub
les
push
cmp
add
ficomps
jmp
adc
fmull
or
ds
add
repz
mov
cli
insb
mov
xchg
add
mov
test
sbb
mov
mov
push
add
hlt
dec
ss
sub
fadds
rcrb
std
adc
dec
sbb
add
jecxz
and
dec
movsl
pop
dec
jnp
lret
lcall
fcmovu
imul
add
fwait
xchg
lods
mov
les
pop
xchg
test
mov
into
js
pop
repz
nop
xchg
insb
in
cmp
push
mov
repz
std
sti
mov
sub
int
cli
scas
and
mov
dec
dec
push
xchg
in
cs
pavgb
xor
popa
dec
add
xor
add
ljmp
ljmp
mov
and
imul
mov
or
lock
jecxz
mov
push
jbe
adc
test
nop
lock
jge
int3
clc
inc
add
xor
jmp
xor
loop
xor
enter
lahf
outsl
ds
fistl
jmp
fidivl
sbb
cltd
fwait
rcrb
dec
fldl
addr16
jbe
in
adc
outsb
ret
movb
fs
pop
mov
cmp
jo
sbb
test
dec
sarb
mov
xor
push
jnp
lods
xchg
jns
pop
mov
jae
or
sub
xor
add
test
test
add
stos
mov
push
mov
rclb
lret
fdivrs
mov
inc
lret
dec
push
lcall
cmp
fnsave
fistl
xor
std
mov
jno
in
pop
stc
cld
fdivl
dec
outsb
loop
mov
inc
fcoml
cwtl
fwait
loope
pop
das
sti
std
xor
jae
popf
sub
or
int3
xchg
pop
gs
dec
or
pop
roll
inc
pop
xchg
xchg
fcomp
xchg
sub
pop
nop
xor
adcl
sub
jne
js
cmpsl
mov
cs
pushl
xor
adc
push
jge
aaa
arpl
or
push
sub
mov
push
shl
jbe
outsb
jnp
sbb
push
push
mov
cli
mov
mov
and
popf
pop
sbb
ds
mov
mov
xor
fistl
mov
jmp
mov
xor
add
cmp
mov
gs
pop
cld
loopne
jne
loop
movsb
rorl
add
loope
cwtl
sahf
outsb
cld
pusha
fs
stos
fisttps
pop
repnz
mov
or
js
movsb
repnz
mov
fdivrs
dec
pop
ret
bound
add
cs
pop
push
out
pop
andl
jbe
adc
sub
mov
pop
sbb
add
jl
inc
divb
in
fcomip
imul
adc
out
outsl
cmp
push
xchg
out
and
mov
lock
xchg
popf
stc
movsl
loop
ret
das
insb
jge
orl
jle
lods
add
fmul
add
es
int3
add
shlb
dec
xchg
movsb
inc
and
push
insl
adc
rcll
dec
call
jecxz
mov
adc
or
ficoml
movb
adc
dec
lods
daa
in
adc
lods
mov
idivb
xor
test
imul
fwait
mov
mov
pop
sub
cwtl
leave
bound
shrd
push
aad
add
sub
cmpsl
lcall
stos
aad
ret
andl
add
ror
sub
sub
les
aad
sbb
adc
in
cltd
shl
cld
call
mov
arpl
adc
cmp
cwtl
xlat
out
imul
insl
xor
add
xchg
dec
and
sub
pop
loope
call
je
push
insb
mov
in
dec
and
mov
push
lods
mov
hlt
fildll
xor
sbbb
subl
in
test
pop
fstps
sub
mov
lret
clc
jl
fiadds
in
fcoml
xchg
mov
int
push
push
repz
loope
adc
mov
popw
sbb
adc
pop
aaa
sti
inc
sub
into
jecxz
sbb
sarl
lret
or
movsb
inc
push
push
fldenv
test
and
and
lods
and
dec
outsb
inc
cmpsl
sbb
int
inc
push
sub
jl
repnz
xor
iret
xchg
int
or
out
or
and
inc
jo
mov
xchg
sbb
imul
inc
mov
es
xchg
enter
clc
xchg
rcll
cld
pop
cmc
mov
es
imul
sbb
lret
cmp
test
leave
inc
and
loop
cld
lea
popf
push
add
mov
xchg
jae
mov
or
popa
mov
or
outsl
adc
xchg
test
xor
and
dec
inc
xchg
push
shrl
fstps
push
cmp
pop
inc
ret
cmc
and
or
add
arpl
in
loope
pusha
xor
aaa
xor
cmpsb
std
call
sub
cwtl
pop
mov
roll
xor
adc
jge
rorl
adc
push
rclb
sbb
sbb
or
pushf
in
sub
mov
mov
xorb
jns
test
xlat
call
xchg
rol
in
repnz
cmp
xchg
inc
sbb
adc
lret
mov
scas
dec
pop
pop
pusha
sub
repz
mov
jbe
mov
lahf
pusha
lret
adc
popa
dec
mov
lcall
test
add
push
inc
cltd
movsl
add
repnz
in
or
or
popa
arpl
aad
fcoms
push
xchg
push
add
jb
lods
mov
out
mov
xchg
call
clc
jecxz
pop
pop
push
iret
gs
add
and
jae
in
lret
push
lock
adc
adc
icebp
lods
stos
insb
jo
mov
xlat
jo
add
jae
mov
adc
mov
lret
popf
rcrb
lcall
repz
adc
mov
loopne
xchg
in
test
pop
fwait
arpl
adc
sbb
mov
sub
push
push
or
push
xor
ror
adc
mov
mov
in
cmp
lods
repz
jecxz
fs
lret
inc
mov
nop
push
mov
mulb
or
fmuls
push
mov
sub
sbb
lret
inc
jge
or
ret
xorl
ret
nop
or
sbb
jle
xlat
dec
sbb
or
shl
push
repz
push
popf
mov
test
sbb
loope
pop
loop
push
pop
repz
add
fsts
dec
pushf
and
push
roll
mov
outsb
das
inc
lods
or
std
push
lds
addl
call
int3
jl
inc
add
push
aas
xbegin
das
jge
pusha
mov
mov
fadds
push
lods
pop
outsl
scas
test
fidivrl
mov
or
movsb
mov
es
popf
sub
sti
test
ljmp
xor
shlb
jb
add
sbb
pop
fistpl
jle
adc
push
push
clc
pop
imul
sbb
dec
jae
aad
aam
mov
ja
or
push
pop
out
push
lods
std
decb
movsl
std
repnz
sbb
lods
xchg
mov
pop
popf
arpl
jmp
arpl
adc
arpl
repnz
pop
out
lcall
jb
daa
jo
xchg
jl
repnz
jae
imul
addl
in
push
mov
int
mov
and
popa
adc
xchg
add
test
push
sbb
mov
rcll
adcb
les
mov
xor
adc
out
add
inc
and
mov
push
in
push
mov
push
xor
mov
test
xor
push
dec
cltd
pop
push
inc
clc
jne
sub
lcall
lods
call
jns
loope
and
or
mov
lods
sbb
aam
push
and
and
push
sarl
jb
add
addb
aad
out
or
fsubrs
sbb
xchg
cmp
pop
not
stc
inc
insb
mov
and
lods
pop
inc
pushf
scas
and
lahf
cwtl
and
loope
dec
lds
sub
mov
outsb
in
mov
xchg
sbb
fs
fwait
lods
pop
xchg
lahf
jp
mov
jb
imul
out
inc
pop
outsl
jecxz
adc
in
popf
stos
iret
lcall
jne
insb
mov
mov
test
adc
lea
mov
sbb
aas
pop
rcr
stos
sub
arpl
sahf
das
mov
int3
push
jle
ds
gs
mov
call
push
adc
fsubrl
std
outsb
into
inc
lock
cld
call
in
imul
inc
and
insl
dec
cmp
loopne
arpl
rol
repnz
arpl
sbb
les
adc
and
movsl
mov
adc
xchg
lret
rcll
fwait
int
mov
in
jns
xor
mov
inc
inc
or
setp
out
sub
in
out
movsb
int
roll
push
cmpsb
xor
mov
pand
out
test
adc
mov
test
mov
lea
aaa
lods
es
xchg
jle
movsb
out
daa
fstpl
insl
jno
sahf
sub
inc
fimuls
call
dec
imul
push
lret
add
adc
test
pop
mov
fs
xor
ljmp
hlt
cmc
into
sahf
jns
pop
sub
aas
or
and
mov
std
pop
fists
add
int
lods
adc
jne
push
push
lret
jo
std
push
xchg
addb
mull
in
xchg
cmpsb
sti
lods
js
mov
mov
xchg
pusha
inc
and
test
shlb
mov
or
dec
push
xchg
pop
sub
inc
xor
adc
pop
mov
int3
gs
mov
sbb
jae
shlb
dec
push
lea
jbe
adc
dec
mov
leave
call
sahf
vpcmpgtw
mov
inc
dec
iret
fcoml
pop
push
pop
sbb
sbb
shlb
mov
ret
sbb
xchg
adc
adc
push
dec
push
inc
loopne
psrlw
inc
iret
adc
adc
xchg
xor
mov
push
jge
js
adc
mov
imul
loop
fdivrs
jo
dec
inc
icebp
scas
adc
clc
cmp
xchg
or
xchg
popf
outsb
fs
add
xchg
fsub
push
and
psubq
sbb
pop
push
push
sbb
aas
mov
pop
mov
pop
sbb
sbb
sarb
mov
xor
stc
int3
cld
das
adc
and
dec
add
sub
xchg
out
lock
jb
ss
sbb
lret
hlt
nop
jecxz
pop
adc
lret
cmpsl
das
mov
add
jmp
dec
sbb
xchg
xchg
dec
xchg
push
scas
cmpsb
ret
jne
sub
call
fwait
aam
shrl
jecxz
ja
mov
out
xchg
push
std
call
jno
jmp
push
xor
and
adc
xlat
lahf
std
subb
jmp
aas
sbb
jb
or
jne
xchg
leave
std
mov
cmp
andl
xlat
sub
dec
fsubrl
xchg
mov
push
mov
out
dec
cmp
inc
shlb
popa
out
testb
loopne
push
lahf
lcall
in
js
push
insl
je
mov
fildll
adc
cmc
inc
ja
iret
in
mov
dec
add
mov
les
mov
jmp
lahf
rclb
cwtl
aas
loopne
movsb
movsb
cmpsb
push
mul
rcrl
xchg
dec
aas
cmpsb
sbb
scas
or
and
outsl
mov
xchg
jns
in
int
int3
insb
xchg
pushf
xchg
std
insb
insb
data16
xchg
test
cmp
and
mov
pop
data16
jne
out
outsl
inc
add
xchg
mov
sub
cmp
push
adc
push
sti
cmpsb
mov
ja
xlat
cmc
movsb
lahf
mov
cmp
enter
mov
hlt
inc
popf
mov
cmc
ja
mov
ja
jnp
clc
outsl
push
rorb
cmp
iret
shlb
xchg
lret
cmpsl
jae
xor
or
sahf
cmp
shl
xchg
pop
in
stc
push
xor
pushf
xchg
subb
adc
gs
addr16
ficompl
int
stc
push
shrl
xchg
push
loope
daa
inc
sub
add
fisttpll
rcl
pop
js
cmp
push
pop
sub
push
pop
cmp
jle
int3
int3
inc
xor
fucomi
jp
jl
pop
inc
mov
inc
subb
jge
insb
sbb
insb
adc
mov
lcall
push
xchg
mov
aas
lcall
fsubl
in
mov
loopne
sub
scas
enter
jecxz
out
dec
lret
push
data16
fstp
insb
sbb
jae
xchg
mov
lret
clc
and
insb
mov
jp
lods
ss
aaa
mov
add
ret
fs
inc
xor
jae
pop
movb
push
and
push
in
enter
push
data16
mov
jmp
cltd
mov
ljmp
sahf
jno
cmp
xchg
push
sbb
jl
jmp
inc
jg
in
sbb
in
mov
dec
or
mov
jmp
add
test
outsb
pop
insb
sub
xor
and
and
push
cmpsl
sub
mov
sbb
ja
mov
mov
or
dec
ret
mov
jl
loope
xor
fstl
fstpl
hlt
je
ret
clc
or
jb
into
dec
insl
jg
sbb
leave
and
sbb
fstpt
inc
add
mov
adc
push
mov
jmp
lods
xchg
and
fistpll
mov
and
sbb
ja
outsb
xchg
rcrb
mov
mov
mov
adc
sti
mov
xor
flds
mov
shl
cltd
mov
pop
mov
test
call
xor
cmpsl
popf
or
add
test
stc
outsl
push
mov
sbb
pop
pop
out
mov
mov
icebp
jle
or
out
rol
xchg
std
cmp
out
std
divl
push
mov
inc
pop
cmp
mov
mov
xor
mov
js
mov
nop
pop
inc
outsl
pop
dec
dec
lds
adc
cld
stc
mov
push
test
std
xchg
cli
cmp
push
imul
push
subl
mov
mov
xchg
movsl
jmp
mov
aad
cmp
rcrl
jp
or
mov
cmp
and
mov
xchg
loope
cwtl
dec
pcmpeqb
das
je
movhps
mov
sub
mov
dec
mov
pop
and
or
dec
add
cmp
les
and
lahf
cmp
cmpsl
mov
jnp
dec
ljmp
outsb
lock
push
lds
adc
mov
stos
sbb
shrb
jnp
cmpsb
aaa
lret
sahf
movsb
nop
pop
push
pop
jmp
sbb
sbb
test
addb
lock
movups
ror
imul
pusha
xchg
adc
pop
inc
mov
pop
inc
fstl
imul
movsl
and
jno
loope
ret
je
push
inc
push
sub
push
arpl
fwait
jmp
inc
popa
mov
mov
and
pop
pop
popf
adc
cltd
sahf
xchg
cs
stos
popa
jmp
add
cmp
xchg
movsl
jmp
cmp
push
int
mov
pop
adc
mov
mov
lcall
jnp
lods
fwait
dec
pop
or
adc
sub
sarb
scas
jbe
mov
movsl
mov
ss
add
mov
les
leave
sar
jb
rcrb
lret
inc
jp
pop
test
fcomp
aam
fisttpll
insb
leave
sahf
dec
xchg
pop
adc
add
fsubrs
pop
fisubrs
inc
cmp
mov
test
dec
icebp
hlt
pop
push
ljmp
popa
fs
cmpsb
jle
dec
repz
imul
mov
pop
clc
sar
xor
jno
jg
adc
or
add
outsl
cmp
data16
fcoml
sbbl
in
mov
call
mov
out
inc
incb
jl
xchg
popf
into
loopne
test
lea
jae
lods
nop
insb
outsb
test
jg
adc
cmc
mov
test
cmp
and
sub
or
ffreep
xchg
loop
pusha
xor
xor
stos
inc
pop
sahf
mov
stos
and
std
mov
inc
sub
in
mov
das
sbbb
fdiv
pop
sub
jp
adc
mov
mov
jecxz
adc
rcr
mov
iret
jmp
cmpsb
out
inc
aam
sub
lahf
cmp
or
movsl
dec
xorl
inc
stos
mov
push
mov
test
xor
xchg
rcrl
mov
fldl
rclb
sbb
push
jbe
sub
fistl
dec
mov
jge
inc
cmpsb
dec
rcrl
aaa
fucomp
orl
notl
test
pop
ret
push
mov
ret
inc
inc
das
add
fsubl
xor
push
push
loope
push
xchg
rcrb
popa
repz
pop
outsl
cld
sbb
pop
sub
xor
out
cmp
mov
mov
jnp
js
jp
mov
out
sbb
add
in
sbb
mov
jmp
outsb
mov
leave
jp
push
dec
xchg
out
push
les
stc
js
xchg
jge
push
cmp
mov
mov
jg
cmp
mov
hlt
sub
push
loope
nop
dec
in
leave
das
push
sub
fsub
push
adc
push
hlt
mov
mov
int
cld
fs
out
lods
stc
mov
fdivrs
mov
sub
dec
addb
dec
mov
jp
scas
and
push
pop
cmp
imul
cld
mov
mov
dec
inc
pop
or
xchg
add
popf
loopne
sub
pop
push
mov
push
inc
negb
jns
call
cmp
mov
sahf
sub
cmpsl
and
mov
sbb
xor
and
cwtl
imul
xor
leave
cwtl
adc
jb
xchg
sbb
mov
shlb
cmp
add
and
fwait
cwtl
rorb
sbb
mov
push
lock
dec
jne
push
iret
adc
adc
loop
dec
add
and
cmp
add
out
push
cwtl
and
pop
out
pop
add
xchg
push
and
es
add
adc
xchg
sub
pop
lods
aaa
push
in
cld
mov
aad
mov
int3
loop
sarl
xchg
mov
sbb
outsb
test
andl
fcoms
or
pop
in
call
pop
rcrl
push
xor
pusha
iret
jge
sti
fsubrs
shlb
and
mov
fsts
cli
int
mov
or
leave
cli
pop
jle
mov
mov
orl
ljmp
enter
sub
mov
cld
jg
lods
loopne
cmc
idivb
bound
push
imul
sbb
in
pushf
ficomps
insl
inc
xchg
mov
mov
out
popa
mov
adc
mov
je
mov
dec
hlt
andb
or
jmp
aaa
cwtl
cmp
stos
lods
push
push
in
sbb
xchg
pop
jp
lea
xchg
imul
dec
decl
and
call
dec
jmp
xchg
iret
mov
sbb
xchg
andl
inc
hlt
stc
insb
popf
jnp
adc
movsl
mov
adc
cmp
fwait
dec
and
jo
dec
test
jbe
pop
and
mov
std
lds
jmp
in
push
push
mov
or
push
adc
push
cwtl
hlt
enter
or
mov
push
sub
call
sbbl
std
or
adc
in
insb
xchg
lret
add
mov
mov
loope
xchg
add
int
push
icebp
add
add
fs
dec
mov
daa
push
inc
rorl
cld
sub
cmp
push
scas
popf
push
and
mov
mov
mov
and
rorb
xor
pushf
xor
xor
mov
mov
add
jae
rcll
mov
cli
sub
lcall
flds
mov
imul
xor
out
sub
sahf
iret
pusha
jecxz
imul
lret
jle
std
sti
pop
orl
in
mov
add
xor
xchg
adc
inc
inc
dec
nop
pushf
pushf
push
adc
imul
aad
cmc
jb
sbb
cltd
cwtl
out
push
xor
imul
mov
jmp
in
fdivrl
outsb
gs
ja
pop
xor
sub
mov
mov
negl
icebp
aad
push
sbb
sbb
lods
xor
cwtl
js
dec
or
lods
pop
mov
push
jbe
ja
inc
fldln2
xchg
jge
push
mov
les
mov
or
icebp
adc
in
jne
mov
add
lock
scas
xchg
pop
movsl
and
and
stos
lods
rorl
dec
outsl
fnstenvs
gs
fwait
dec
or
nop
mov
ljmp
push
push
test
jl
mov
jge
push
dec
xor
lret
insb
data16
mov
jg
xchg
or
push
jge
lock
fbld
adc
xchg
xchg
mov
fs
jnp
and
enter
mov
nop
fmul
xor
aad
jg
jmp
lcall
xor
shlb
in
ret
pop
xchg
std
push
cmp
sub
jmp
clc
xchg
adc
cmp
sbb
mov
das
mov
leave
or
loop
ja
xchg
pop
inc
or
bound
mov
mov
xchg
push
lods
xchg
out
dec
cmp
lock
mov
imul
test
jl
roll
setge
loope
lods
and
stos
or
inc
mov
fsubr
mov
lock
pop
cmp
ljmp
sbb
xchg
jbe
push
xchg
incl
ljmp
rorl
xor
icebp
ja
dec
repz
jo
movsl
and
ljmp
fwait
and
mov
out
xor
dec
inc
cmp
push
mov
orl
sub
stc
pop
xchg
pop
shlb
jns
xchg
xchg
push
mov
jno
stc
push
dec
faddl
add
cld
jnp
mov
push
xchg
sub
sbbb
int
push
pusha
cmpb
push
sbb
adc
cs
sub
aas
push
dec
movl
jns
sbb
in
lods
imul
inc
push
mov
mov
pop
adc
and
jle
in
ss
scas
sub
ret
pop
cwtl
jo
rorb
adc
sub
loop
call
dec
repnz
ljmp
imul
xor
scas
sbb
jo
dec
inc
add
ss
xor
mov
sti
popl
movsl
cmpsb
pop
loopne
mov
dec
movsb
or
dec
ffreep
xchg
xchg
inc
mov
hlt
push
mov
in
imul
gs
mov
iret
cmp
insb
xorl
daa
xor
pop
jo
fsts
outsb
and
mov
aam
push
sahf
scas
std
call
mov
ljmp
and
push
aas
in
mov
sub
mov
gs
fimull
push
adc
push
and
repnz
scas
xchg
sahf
sahf
aad
arpl
stc
in
xchg
dec
sbb
xchg
pop
call
or
pop
jae
movsb
stos
push
push
mov
mov
imul
cmc
cs
cwtl
scas
mov
loope
movsl
out
push
add
stos
mov
out
je
mov
mov
sub
idivb
inc
mov
dec
loop
xlat
inc
or
mov
lcall
dec
dec
and
sbb
lret
cmpsb
cmp
das
js
sub
cmp
adc
pushf
fsubrs
pop
cmp
cmp
and
out
push
loopne
pop
push
add
jno
add
adc
mov
lahf
scas
test
inc
add
inc
and
lock
mov
sub
and
or
fwait
mov
and
push
cmp
push
lock
bound
fbstp
or
outsl
mov
mov
jnp
dec
push
repnz
lcall
mov
cld
mov
or
mov
xchg
jp
insb
mov
in
push
jae
push
sarb
test
sbb
sub
lds
popf
mov
mov
mov
loop
push
xchg
jnp
wbinvd
dec
jecxz
imul
ljmp
loope
lods
stos
mov
icebp
push
cmp
stc
in
in
js
mov
inc
cmp
mov
xchg
and
scas
and
pop
add
mov
rcr
outsb
pop
leave
outsb
xchg
jl
add
cld
or
repnz
hlt
lods
cmp
neg
out
jg
enter
sbb
sahf
fs
inc
push
jle
test
or
mov
sbb
jp
cmp
iret
iret
add
sub
mov
push
sbb
mov
lret
ljmp
sub
loop
popf
std
mov
sbbb
jecxz
or
pushf
imulb
add
movsb
ret
mov
mov
cwtl
cs
sbb
inc
fimuls
fmuls
stos
mov
sahf
mov
cmpsl
stc
cld
mov
sbb
mov
adc
testb
inc
adc
pusha
dec
sbb
push
cmp
xchg
rcrl
decb
shll
inc
out
inc
out
pop
jl
arpl
fmuls
mov
in
pop
cmp
xchg
xchg
loopne
loope
nop
mov
shlb
jg
fadds
mov
dec
and
mov
pop
int
sbb
daa
mov
test
push
ror
loopne
adc
data16
dec
cwtl
add
hlt
cmp
int
inc
add
ja
sbb
int
xor
sarl
cli
and
int3
negb
stos
dec
movhps
xchg
xor
in
sub
jb
int3
mov
xchg
and
jnp
faddp
jg
div
adc
rclb
sbb
xchg
movl
insb
shl
push
pop
xor
rcrl
mov
ret
push
rorl
stos
out
sbb
push
hlt
imul
repz
mov
popa
dec
fwait
in
mov
in
loopne
rclb
insl
lods
inc
outsb
cmp
pop
rcrl
stc
dec
ss
leave
and
cmpsb
in
fisttpll
ljmp
push
xchg
test
push
idivb
mov
pop
mov
jb
sub
stos
movsl
sbb
xchg
mov
idivl
inc
std
decb
push
int
repz
dec
xchg
fcomps
shl
int
and
in
mov
mov
jns
inc
lods
push
jbe
ja
adc
sub
jmp
mov
repnz
xchg
cld
or
in
jl
pop
lods
cmp
fldt
jo
out
call
xor
addl
dec
testl
sub
jge
cmp
jne
xor
lods
out
addr16
inc
cld
sub
xchg
cmp
sub
mov
jmp
push
jl
ljmp
lea
pusha
pusha
aas
repz
lret
mov
jl
mov
sub
xor
ret
mov
jmp
pop
push
out
bound
sti
push
add
sbb
ds
pushf
cmp
pushaw
in
fisubs
dec
cwtl
notb
enter
shrl
pop
jp
mul
scas
jecxz
adc
dec
pop
pop
clc
and
into
jmp
fwait
arpl
jmp
es
mov
pop
std
aad
lcall
mov
subl
lcall
ret
orl
mov
jmp
push
stos
rcll
das
ret
das
inc
in
les
icebp
lea
mov
mov
and
cmp
cmp
push
je
nop
sbb
mov
stos
ret
xor
pop
jb
jl
mov
mov
fsubrl
repz
outsb
xchg
test
pop
push
or
out
cwtl
inc
cmp
add
dec
insl
mov
xlat
lods
and
outsb
loope
push
stos
dec
pop
out
xchg
sbb
sarl
lock
jecxz
jp
inc
ja
sahf
jl
fwait
movsl
push
sub
push
mov
push
jb
ds
cmp
inc
ret
mov
jl
andb
or
into
jge
jl
mov
pop
fadd
into
jne
xor
roll
jno
fisubrs
or
loop
lret
loopne
insb
jp
mov
jecxz
jb
pop
scas
cmp
movsb
add
enter
nop
daa
sahf
xchg
cs
out
sub
add
or
xchg
test
jmp
and
xchg
adc
test
xchg
pop
inc
loop
insb
imul
leave
test
add
vucomiss
imul
push
stos
lret
pop
mov
pop
in
cmp
repz
jl
ljmp
mov
bound
sbb
push
fsubs
mov
fstpt
xor
cltd
stos
adc
div
push
inc
cwtl
out
cmpsb
arpl
stc
mov
fwait
leave
out
cmp
outsl
cmp
and
jns
jmp
mov
shrl
cmpsl
int
pusha
in
sub
daa
in
lret
mov
pushf
repnz
sub
mov
or
call
jmpw
sub
inc
lret
inc
cmp
cmp
sub
xchg
out
push
pusha
mov
mov
push
fs
sti
clc
iret
stos
orl
stc
cmpsb
daa
cmc
loopne
and
push
cli
xor
jno
mov
or
jbe
ljmp
adc
xor
aad
sbb
pop
pop
enter
fwait
push
pusha
insb
jno
data16
shrl
lret
std
shrb
inc
mov
mov
movsb
sbb
fimull
daa
xchg
or
call
sub
sarl
pop
out
bound
repz
add
lds
sub
cld
push
dec
mov
popa
das
pop
xlat
sub
outsl
inc
mov
pop
sub
out
loop
shlb
jno
mov
rcr
ljmp
jg
stos
sti
fs
into
repz
test
les
pop
sbb
fstp
iret
add
lahf
stc
sti
mov
mov
iret
out
and
jae
jae
xlat
cmp
mov
xor
jnp
fdivl
push
jo
dec
data16
inc
test
fisttpll
and
sbb
jp
sub
push
pop
out
leave
sub
rol
jnp
js
add
mov
test
sub
dec
ret
jo
adc
sub
insb
fldt
mov
test
cwtl
pop
rclb
inc
rclb
stos
xorb
sti
cmp
xor
mov
int
es
aas
rcrl
clc
xor
pop
leave
icebp
out
jge
into
out
test
dec
pop
xchg
vmovntps
cmc
nop
push
jns
les
enter
shlb
xchg
fdivrl
mov
aad
dec
jmp
in
ss
scas
rcr
aam
lret
lret
adc
cmp
pushl
inc
cmp
inc
fst
test
lock
ficoms
cmp
mov
lea
inc
cmp
adc
fwait
loopne
xchg
or
hlt
sbb
shll
loopne
jae
fnstcw
in
xchg
add
ret
sub
mov
xchg
in
loopne
xlat
push
inc
push
sbbb
sub
shlb
lock
ds
les
sub
pushf
push
mov
aaa
aaa
cmp
pusha
mov
inc
push
mov
mov
aam
sub
ret
sub
fsubrp
push
rcl
in
repz
push
push
jbe
mov
lret
pop
xor
in
testl
jnp
jnp
inc
jmp
xchg
mov
mov
into
test
mov
std
xchg
adc
mov
lahf
aam
repnz
lods
fwait
lea
shl
test
mov
xchg
cmpsb
pop
mov
inc
pop
inc
popf
pop
das
ja
shl
sub
fmuls
dec
xlat
int3
loope
imul
mov
xor
fildll
pop
stos
push
push
int3
push
stos
iret
push
dec
in
jbe
aaa
add
out
pop
cltd
cltd
pop
pop
xchg
rcl
nop
adc
in
xchg
push
jle
or
mov
cmp
pop
pop
cli
add
or
jg
pop
shll
push
mov
mov
je
int3
fildl
loope
fdivs
mov
sti
sub
int
iret
in
mov
inc
sahf
imul
dec
jns
mov
into
dec
into
jmp
sbb
mov
xor
repz
and
ficompl
fidivrs
jmp
fcmove
divl
mov
sbb
cmp
out
ja
jg
outsb
fcoms
fs
and
sbb
dec
out
and
jnp,pn
lock
lahf
negl
rcr
jbe
fdivs
test
xchg
or
adc
sub
bound
arpl
lea
mov
fisubl
cmpl
ja,pn
cmp
lret
mov
or
mov
or
mov
mov
hlt
xor
aaa
sub
mov
enter
mov
and
mov
add
sub
inc
cmp
pop
rclb
sub
lock
test
push
mov
repz
dec
push
cwtl
or
out
jbe
out
mov
jmp
dec
int3
cmpsl
sub
push
das
add
dec
addl
or
fdiv
hlt
gs
lcall
vmovddup
je
sbb
scas
lret
xchg
push
inc
push
shrd
adcl
popl
xchg
mov
ret
dec
mov
int
push
addr16
dec
mov
push
pop
and
mov
movsl
mov
scas
cmpsb
loopne
jns
and
inc
daa
stos
sbb
insl
add
ret
mov
inc
jns
inc
jge
gs
lods
sti
aaa
mov
ret
insl
or
pop
sub
js
sahf
push
adc
popf
and
icebp
xorb
rcrl
rorl
add
aas
loopne
cmp
xchg
stos
iret
fisubs
jns
int3
pop
mov
dec
ret
andl
mov
fs
gs
or
ja
and
jle
and
repz
jo
sub
cwtl
fs
pushf
mov
jp
mov
dec
sub
ss
pop
mov
shrb
stos
cmp
pushf
mov
and
enter
iret
xor
mov
mov
xchg
xchg
xchg
je
pushf
cmp
and
adc
or
sbb
xor
les
nop
test
jbe
add
shrb
fldcw
mov
out
add
cli
pop
test
rorl
push
in
shl
fs
and
and
incl
mov
and
testb
pop
loope
in
lods
dec
sub
ficoml
cmp
add
icebp
push
mov
xor
and
shlb
stc
xor
xor
xchg
out
and
mov
inc
imul
test
outsb
out
or
mov
xchg
xor
inc
inc
fcmovbe
and
movsb
xchg
icebp
mov
mov
sbb
pusha
movsb
jno
out
test
cmpsl
mov
inc
sti
cwtl
inc
test
pop
arpl
jns
fwait
or
sub
jns
xor
pop
test
xchg
movsb
mov
lret
jnp
jne
addr16
aaa
mov
jae
dec
push
scas
sbb
daa
push
nop
je
imul
lcall
mov
lock
lods
rcll
movsl
jne
sub
sbb
test
dec
in
xorl
insl
inc
cwtl
addr16
les
lea
les
shufps
fistpll
push
sti
xchg
mov
dec
inc
leave
pop
repz
sbb
jp
or
xchg
enter
packuswb
or
cmp
or
mov
rorl
fsubr
xchg
insl
jmp
push
xor
cwtl
add
dec
rcrb
dec
int
cmp
jmp
outsb
bound
sbb
sub
mov
sbb
bound
sbb
pop
cmp
int
test
ljmp
nop
out
in
jg
and
mov
hlt
mov
xchg
clc
fidivrs
add
cmp
out
mov
aam
repz
mov
xchg
out
inc
repz
inc
jo
push
dec
sbbl
xchg
add
xchg
add
enter
xchg
jne
cmp
gs
daa
out
xchg
sub
xor
lods
sbb
lods
and
push
in
insb
jge
lock
rcll
sahf
cli
xor
sub
repnz
xchg
aam
jae
sti
or
aam
int
push
mov
add
mov
adc
loope
cmc
je
ret
xchg
or
outsl
jle
lahf
cmpb
or
into
mov
shlb
xchg
jecxz
mov
lods
dec
iret
and
add
int3
mov
popf
mull
test
dec
movsl
outsb
push
sub
pop
clc
cmp
mov
jle
mov
xchg
sbb
cmp
repnz
xor
sti
hlt
or
mov
sub
mov
push
or
push
xor
jno
push
xor
insl
hlt
out
adc
pop
mov
xchg
jno
or
movsl
iret
stos
sub
popa
pushf
btr
or
loope
xor
xchg
add
shrl
out
cmpl
sarl
test
icebp
sbb
lea
sub
out
fldl
push
daa
ljmp
mov
pop
push
inc
lret
cmp
test
rorb
push
aaa
xchg
mov
pop
push
mov
xor
fs
icebp
push
aas
lret
cmp
sub
sub
xor
hlt
lods
xchg
mov
subb
cmpsb
and
sub
or
xchg
add
adc
sub
loop
jp
pop
cmp
cwtl
sbb
cmp
stos
mov
shlb
sub
xchg
test
push
mov
fxch
xor
int
pop
jae
pop
movsb
xor
lret
jno
std
mov
out
jns
arpl
test
cltd
scas
push
inc
insl
mov
push
outsb
sub
fs
pop
sub
popf
mov
dec
push
inc
sti
out
push
out
idivb
sub
xchg
xchg
clc
mov
push
sbb
cmp
mov
cmp
bound
jbe
sub
insl
das
imul
mov
repz
and
in
aad
lret
cmp
dec
ss
add
mov
inc
lds
rcll
pop
mov
push
out
aad
push
dec
in
das
test
jnp
out
jge
dec
or
leave
pop
lret
add
push
subl
and
out
cmp
xchg
in
and
out
inc
pop
or
je,pt
loopne
sahf
xor
jecxz
testl
sub
and
or
imul
mov
cmp
les
dec
mov
out
mov
xor
shlb
dec
pushf
fdivrl
mov
push
dec
daa
cltd
into
adc
int3
int
into
ret
and
xchg
dec
mov
mov
pop
dec
loop
xchg
jo
push
or
sti
cmp
loop
jmp
mov
dec
mov
or
inc
lock
mov
std
sub
sbb
daa
jnp
mov
loope
xor
cmp
fstl
fcomps
cwtl
lcall
adc
repnz
jp
outsb
and
and
mov
bound
add
push
push
cmc
imul
stc
add
push
cmp
add
pop
ss
cmp
out
mov
adc
pushf
addr16
push
push
ljmp
rcll
inc
push
push
push
outsb
push
mov
rol
insl
mov
bound
lcall
shlb
cmp
cwtl
das
je
jno
jne
inc
sbb
dec
jo
leave
jle
std
jp
pop
mov
mov
std
aad
leave
and
add
mov
sub
outsb
adc
mov
aam
add
mov
sub
test
clc
inc
and
xor
fsub
mov
bound
mov
mov
pop
jle
jge
pop
mov
lods
push
mov
jl
test
add
pop
add
xorl
sbb
in
mov
popa
push
ret
jg
pop
out
cmp
mov
mov
ret
or
or
and
cli
movsl
and
aam
push
jl
jno
pop
cltd
inc
sahf
sub
ret
arpl
sbb
xor
sbb
pop
rclb
mov
xchg
in
inc
test
xchg
orb
mov
jae
cwtl
push
mov
enter
fcom
sub
movsl
jge
or
call
or
adc
xor
sbb
lret
outsb
pop
sub
push
movsb
xlat
add
mov
jg
addb
xor
imul
rorl
push
jg
or
cmp
xor
mov
fldt
dec
mov
inc
push
ror
ret
push
cmpsl
mov
test
pushf
repz
or
mov
sahf
mov
xchg
mov
jmp
and
jo
mov
bound
scas
cltd
jo
and
mov
shl
pusha
sub
ss
test
pop
clc
jl
or
in
adc
mov
and
and
imul
lahf
mov
lods
std
and
out
ret
mov
shrl
int
ret
push
hlt
dec
sbb
idiv
xchg
mov
cmp
test
fisubrs
mov
daa
sub
or
in
lret
lds
loopne
jp
mov
incb
mov
sub
cwtl
sbb
push
pop
jb
push
mov
xor
ja
jb
lods
dec
push
scas
mov
shll
mov
xchg
pop
mov
jl
xor
test
adc
cld
leave
stc
xchg
clc
jns
dec
dec
or
inc
fs
xchg
jnp
pop
stos
or
inc
jbe
xchg
nop
push
cmp
jns
mov
mov
test
into
mov
adc
fcoml
xor
arpl
out
dec
pop
pop
lods
mov
repz
cld
fbstp
push
jp
mov
aas
pushf
mov
pop
push
or
cmpsl
fsubrs
adc
and
mov
loopne
fcompl
sti
cmp
leave
ldmxcsr
xchg
mov
call
mov
sub
test
inc
xor
in
adc
fcoms
mov
push
jne
jns
push
sarb
dec
imul
jae
sbb
mov
and
mov
push
movsl
aam
test
fsubrl
or
mov
or
stc
pop
in
adc
and
iret
movzwl
mov
pop
cli
mov
pushf
fcomps
nop
or
orl
xor
dec
sub
jbe
loopne
sbb
iret
sahf
push
ss
jns
hlt
xchg
sbb
or
pop
mov
xor
mov
cmp
mov
sub
mov
push
out
js
cmp
das
jns
idivb
inc
pop
sti
cwtl
stc
add
and
push
pop
push
xor
lret
mov
aad
sbb
jnp
outsl
mov
mov
fs
notb
shl
mov
push
jecxz
push
cwtl
jae
push
das
lods
mov
in
xchg
addr16
push
mov
jo
imul
dec
push
mov
lock
ret
mov
movsb
insl
das
rorb
rep
arpl
int
sahf
icebp
mov
and
dec
or
hlt
cmpsl
xchg
cld
pushaw
clc
nop
adc
pop
addr16
xor
pop
mov
lds
loopne
dec
mov
std
dec
scas
sub
xor
push
aam
lcall
add
lcall
aaa
xchg
pushf
push
and
xchg
imul
pop
cmpsb
mov
lret
fwait
push
adc
aas
fsubrl
pop
rcl
mov
mov
and
add
js
insl
pushf
mov
aam
inc
int3
jg
in
inc
outsb
sub
push
xchg
cmp
mov
in
insb
fistpl
and
sub
cmp
je
imul
pop
cmc
addr16
jo
fnstenv
mov
jo
jnp
test
jne
mov
lret
mov
xchg
push
sbb
push
sbb
xchg
push
ffreep
cmc
idivl
jmp
lods
nop
mov
jl
cmp
repnz
lcall
mov
adc
rolb
je
mov
imul
add
dec
and
lea
imul
lea
pop
daa
pop
arpl
pushl
push
inc
enter
lahf
ljmp
and
lret
outsb
lcall
lea
push
jp
pop
lock
stos
pmulhuw
pop
popf
add
xchg
in
dec
shlb
les
mov
mov
popf
fstl
xor
sub
repz
pop
push
cld
jo
pop
shlb
mov
pop
adc
sahf
pop
push
adcb
subb
sar
sahf
sub
jecxz
stos
xor
mov
loopne
mov
rolb
mov
add
repnz
push
jmp
xchg
aam
sub
cmp
fisttps
or
pop
lahf
inc
and
into
pop
shll
mov
xor
test
xchg
pop
mov
loop
hlt
dec
lods
mov
dec
in
addl
jge
decl
jg
in
mov
sbb
xchg
in
adc
fwait
sub
scas
adc
xchg
out
ret
lods
push
repz
dec
andl
dec
mov
fcmovu
xchg
mov
add
insl
icebp
andl
mov
repnz
cwtl
adc
aas
and
bound
stos
dec
int
stos
push
popf
inc
sub
pop
ja
sbb
inc
and
adc
jg
mov
popa
inc
pop
es
fimuls
push
enter
outsl
mov
dec
faddp
pop
add
lea
sub
out
adc
cmp
adc
mov
cs
mov
pop
mov
cmp
imul
xor
xchg
mov
or
and
ds
out
pop
pushf
bound
into
push
mov
scas
sahf
adc
jae
lds
sub
leave
jnp
nop
inc
push
adc
negb
rorl
out
mov
mov
aaa
inc
sbb
jge
cld
mov
and
jnp
sub
sbb
dec
push
xchg
cmpl
jno
inc
mov
movsb
sbb
sbb
pop
mov
mov
adc
xchg
fcmovne
sbb
les
push
push
es
or
mov
ds
int
mov
dec
iret
movsb
out
mov
or
push
dec
incl
adc
add
cmp
iret
int
fmull
insb
pop
mov
jl
imul
mov
add
insl
ret
jmp
fidivrs
outsb
mov
dec
push
cld
scas
dec
sub
jne
push
imul
pop
xor
loop
outsb
test
or
add
mov
in
sbb
ds
ds
inc
das
mov
adcb
mov
call
insl
lds
iret
jl
das
sbb
jge
and
das
mov
les
xchg
ds
shll
xor
add
push
add
adc
addr16
inc
in
mov
mov
cli
xor
push
push
xchg
xchg
jne
call
xchg
arpl
xor
jns
dec
sbb
call
out
sbb
or
icebp
fisubl
aas
loopne
dec
call
cmp
cmpsb
scas
das
pop
jmp
jbe
and
or
cwtl
push
loop
pop
fdivrl
cltd
mov
popa
stos
mov
shrl
insl
mov
popf
pop
fiaddl
fldcw
mov
inc
loopne
into
xchg
sbb
cltd
inc
sub
test
in
mov
adc
outsb
aam
cmpsl
xchg
repz
jmp
aaa
sarb
mov
popa
xor
xchg
leave
lds
rcrl
imul
lret
mov
xor
test
arpl
fnstcw
in
stos
push
jne
mov
mov
or
into
pusha
pusha
popa
or
xlat
stos
movsl
lahf
jo
push
imul
xor
pop
inc
dec
xor
xlat
xchg
xchg
jno
test
dec
mov
mov
or
cld
jne
inc
sub
ret
insl
rol
arpl
js
jg
cs
lea
cmpsl
lods
jle
adcb
mov
jecxz
or
imul
push
fs
stos
or
pop
lea
cmpsl
adc
adc
push
cmc
nop
dec
push
lret
loop
hlt
int
pop
dec
lods
daa
mov
sub
jno
es
adc
jae
mov
scas
jo
mov
xbegin
jo
xchg
or
jmp
xchg
iret
jae
sbb
jge
fwait
ss
leave
mov
movsb
mov
dec
lret
jecxz,pt
daa
sub
xchg
lods
out
jo
lock
dec
xor
out
fwait
xchg
shll
gs
mov
cmpsb
test
push
outsl
fwait
imul
test
orl
addr16
push
cwtl
adc
push
sti
xor
cmc
sti
mov
sbbb
int
lock
sahf
adc
add
cld
into
sbb
and
sub
xor
pushl
dec
stos
icebp
data16
mov
xorb
in
cmp
jns
scas
mov
and
jne
into
cmp
push
jbe
add
lods
arpl
xchg
out
repz
cltd
cmpb
adc
mov
shrl
adc
movsl
push
in
pop
cmc
addl
mov
das
icebp
mov
inc
push
popa
xor
or
adc
aas
or
jbe
jecxz
add
mov
add
cmp
mov
inc
mov
out
jp
scas
xor
jp
fs
push
pop
lods
addr16
testb
and
pop
lret
push
add
dec
xor
or
pop
sub
aaa
fadds
xchg
jle
ja
jne
movsb
sbb
leave
xor
pop
pusha
cmp
fstl
loop
in
dec
or
ds
ja
push
sbb
sbb
sbb
sub
fimull
sbb
adc
dec
push
or
repnz
cmp
inc
cmpsb
ficoms
cmc
test
dec
jp
test
fsubrp
jge
push
adc
jle
push
xchg
or
sub
pop
cmp
inc
jne
adc
add
aaa
bound
dec
push
movsl
jp
mov
mov
mov
push
mov
fisubrl
mov
xchg
es
and
lret
pop
jns
int
gs
imul
popa
mov
es
insl
sarl
popa
les
mov
and
dec
imul
mov
dec
movsl
sbb
movb
fwait
out
int
push
divb
or
pushf
or
jl
mov
mov
fnstenv
insb
xor
out
mov
add
lahf
sbbl
sub
mov
fstl
cmp
aam
out
lcall
fs
xchg
xchg
sahf
or
and
icebp
or
pop
inc
sub
cli
xor
cs
jmp
daa
fisubrs
movsl
imull
and
ja
push
push
stc
add
ja
iret
outsl
fistpl
cwtl
test
xchg
sbb
sub
cmp
mov
xor
xor
fcompl
sub
sahf
add
jmp
dec
mov
jo
sub
dec
orb
xchg
push
xor
cli
imul
pop
js
sub
push
mov
repz
pop
pop
movsl
jb
pusha
insl
add
xchg
sti
pop
adc
movsl
xchg
sub
adc
jecxz
stos
or
mov
les
mov
xor
dec
inc
lea
sub
test
imul
roll
sbb
sbb
call
insb
mov
je
insb
push
dec
xor
jo
pop
repz
jl
xor
xchg
bound
mov
push
pop
and
inc
sbb
pop
fsincos
mov
or
inc
xor
fdivrl
cmp
call
mov
out
add
xchg
pop
lret
in
fcmovb
push
inc
push
popf
sbb
jno
or
into
mov
sahf
sbb
fdivrp
jno
dec
cmp
jge
int
or
lahf
icebp
pop
scas
xchg
mov
xchg
in
movsb
dec
repnz
cmp
ret
dec
aad
jno
add
xchg
push
cmpsl
push
aas
xchg
cmp
mov
jae
cmc
fsts
push
pop
je
jmp
inc
pusha
in
iret
vpaddq
xchg
in
lret
cwtl
hlt
clc
andb
bound
lcall
sti
jmp
daa
adcl
je
ret
pop
adc
mov
loopne
sbb
xchg
add
popa
insl
inc
add
jp
inc
cltd
adc
cmpsl
xor
sbb
cmpsl
or
in
mov
lcall
jns
js
cmp
dec
fildll
and
dec
pop
addr16
les
inc
imul
lods
mov
dec
pop
cs
cmp
ss
data16
mov
xor
cmp
inc
push
test
mov
pushf
test
js
xchg
jbe
sub
into
or
fnstcw
lret
xchg
test
inc
pop
jecxz
adc
out
or
jg
cmc
lods
lods
inc
mov
out
rorb
fsubs
pushf
nop
push
in
push
into
std
mov
fisubrs
fdivrl
clc
adc
add
jl
jo
mov
add
inc
push
test
mov
inc
adc
inc
mov
and
inc
pop
adcl
out
or
and
adc
gs
fstl
adc
mov
loopne
loop
lcall
shlb
sbb
pop
pop
inc
sub
and
in
sbb
fisubs
fs
sbb
fdivrl
push
sahf
mov
fcmove
inc
shl
sbb
lcall
mov
fdivs
mov
mov
out
loope
lret
rorb
rorl
sbb
inc
fisttpl
cmovns
loop
pusha
dec
or
push
int3
sub
jmp
popa
pop
xor
imul
scas
cmp
xchg
cwtl
mov
lods
pop
test
cmp
or
dec
cmc
fimuls
sbb
adc
aad
jns
xor
mov
dec
frstpm(287
xor
xor
pop
js,pt
stos
pop
add
imul
inc
pop
loopne
test
mov
add
or
les
pop
insb
push
pop
bound
scas
jo
xorl
ljmp
inc
cmpl
xchg
mov
add
and
xchg
cmpsl
or
mov
or
lea
sbb
lret
lods
sbb
pop
mov
xor
enter
imulb
jb
jo
lods
dec
inc
cmp
and
add
xlat
jbe
insb
push
jp
call
scas
int
sarl
jno
pusha
push
xlat
inc
inc
ja
inc
mov
cmp
scas
nop
outsb
lds
xor
and
cltd
rcll
lock
ds
push
cmp
and
fwait
lock
dec
mov
mov
jno
push
xchg
sub
aaa
fwait
aam
rorb
cmp
in
mov
or
mov
das
pop
ds
ss
cmp
adc
jno
mov
sub
inc
ror
add
pop
mov
add
sbb
jb
jns
sbb
iret
adc
dec
push
xchg
push
stos
mov
fstps
out
pop
arpl
enter
mov
nop
std
movsb
pop
jmp
loop
ret
add
jp
cld
fsubr
xchg
cltd
enter
inc
add
mov
aam
lahf
xchg
add
or
addr16
pop
pop
frstor
xchg
xor
cli
in
sahf
sbbl
add
sbb
out
hlt
jg
jno
shlb
aad
and
sub
push
test
push
out
cmc
pop
xchg
adc
push
sarb
xor
push
pop
jno
jns
adc
shrb
push
inc
xor
pop
fbstp
add
xchg
xchg
in
mov
call
cli
aas
cmp
ds
shrl
je
iret
mov
lock
mov
shlb
pop
sbb
fcmovnbe
mov
pop
or
adcb
sbb
dec
mov
or
iret
enter
jae
sbbl
mov
sti
pushf
ljmp
mov
or
into
push
inc
adc
out
test
test
mov
pop
popf
flds
sub
xchg
movsl
and
pop
lods
add
test
fimuls
jmp
cltd
xor
test
clc
rcrl
lcall
push
pop
arpl
jb
std
repnz
jmp
jbe
mov
inc
in
xchg
dec
xchg
mov
and
add
hlt
fcoml
mov
sbb
test
mov
mov
stos
dec
or
pop
mov
rcll
or
cltd
push
mov
in
push
inc
call
nop
dec
es
mov
dec
decb
sbb
inc
stos
jecxz
adc
outsl
popf
sub
mov
or
push
mov
lret
xchg
fsub
dec
mov
mov
or
cld
or
jp
sahf
pusha
mov
addr16
dec
nop
jecxz
push
incl
pop
je
les
jecxz
pop
pushf
cmpsb
test
popa
bound
arpl
add
mov
inc
out
sub
and
mov
mov
jg
dec
rcl
mov
push
dec
or
insb
cmpsl
cmpb
jo
mov
jne
cmp
jle
roll
mov
ja
cwtl
and
hlt
loopne
arpl
fisttpll
mov
add
in
je
repz
out
jo
push
iret
jnp
jmp
inc
mov
mulb
and
mov
add
orb
fcmove
cmp
sbb
cmp
and
xlat
addl
call
sub
dec
jno
gs
jb
rorl
arpl
push
jmp
pop
lea
jmp
shrb
rol
pop
push
lea
ds
int3
xorl
adc
cmp
dec
fsubrs
add
xor
sbb
jg
ljmp
or
shl
shrl
shrl
mov
aas
jne
cld
and
test
outsl
sbb
scas
out
mov
cli
ret
jo
push
xor
cld
das
and
push
sub
and
push
pop
aam
fdivl
and
mov
push
movsl
mov
xlat
pop
mov
pop
inc
pop
push
loopne
mov
push
xorb
add
fwait
sbb
sti
add
fstl
jbe
cltd
fcmovu
cmpsb
cltd
xor
aam
loopne
aam
test
dec
jbe
mov
push
imulb
sbb
inc
test
add
sbb
in
aad
mov
mov
add
inc
adc
sub
mov
repz
repnz
pushf
ficomps
xor
add
jecxz
xor
xchg
and
je
pop
mov
push
out
and
call
cmc
mov
xor
les
mov
fistpl
dec
std
adc
shlb
sbb
int3
push
in
aad
jnp
add
jle
add
xor
lret
and
pushf
gs
in
pop
adc
and
sub
sbb
sub
lcall
mov
insb
push
movsl
xchg
cs
jp
into
imul
out
lea
mov
into
mov
movsl
cs
xchg
sub
pusha
mov
cli
or
sahf
pop
xchg
test
mov
fwait
xchg
jle
pop
mov
lods
lret
adc
fstps
movl
stc
scas
mov
out
add
inc
in
loopne
dec
pop
inc
in
inc
sbb
jge
xchg
cld
cmp
cmp
lds
call
ss
vcvttss2si
dec
sub
mov
test
pop
or
enter
dec
fisubl
mov
mov
es
filds
push
xchg
mov
mov
pop
bound
xor
jp
or
rolb
movsb
das
inc
test
or
sub
mov
fwait
xor
mov
inc
sbb
jp
outsl
lods
jp
inc
push
repnz
xor
incl
lock
dec
daa
stos
clc
fbstp
imul
jecxz
lods
sbb
pop
rcr
adc
or
xchg
mov
shl
pop
aas
pop
push
or
or
jmp
icebp
add
adc
and
push
aaa
or
sbb
push
imul
mov
nop
pop
push
sub
cs
add
mov
add
push
int3
xor
push
mov
inc
aad
les
imul
sbb
adc
mov
imul
insl
push
mov
in
outsb
rorb
movsl
sti
or
out
cld
outsl
sbb
mov
aas
lock
inc
and
xor
repz
push
adc
shlb
lret
pop
ret
fwait
insb
mov
sbb
shll
push
shll
ficoms
sbb
test
push
mov
mov
dec
fwait
mov
fucomp
bound
jmp
sub
add
pop
sbb
inc
mov
cmc
in
sub
adc
mov
sbb
fs
adc
and
xorl
push
add
notb
fwait
iret
cli
mov
xor
mov
cltd
daa
fwait
push
leave
inc
cwtl
mov
sbb
rcrb
jae
push
mov
int3
or
jbe
pop
cmp
daa
xchg
dec
stos
sbb
or
mov
aam
outsl
stos
mov
jae
push
pop
add
ss
dec
gs
les
mov
int
int3
cmc
adc
and
iret
in
bound
test
lahf
lcall
mov
test
loop
dec
les
cmc
mov
jecxz
loop
sbb
movsl
sub
stc
pop
sub
dec
add
movsb
mov
in
std
loopne
cmp
sub
int
fidivl
mov
shl
cmp
jbe
in
sbb
iret
adc
mov
ljmp
loope
scas
xlat
dec
xor
xchg
in
mov
in
sub
pop
lret
fcomp
fildll
xchg
sbb
sbb
mov
clc
imul
lods
adc
lock
shll
fists
mov
pushf
cmp
sbb
mov
cmpsl
inc
insb
enter
jno
ret
shr
pop
jne
jl
int
cmp
or
out
call
repnz
bound
xor
mov
and
mov
xlat
push
popf
roll
mov
mov
jns
mov
pop
adc
sarb
pop
repnz
sbb
fdivrl
arpl
sbb
mov
sub
stos
popl
ret
ds
sub
sbb
and
cmpsb
and
push
call
mov
ret
gs
xor
adc
mov
and
add
hlt
incb
cmp
pop
xor
inc
mov
xchg
sub
test
jae
jns
into
dec
add
jns
jnp
mov
rorl
push
test
das
adc
dec
lods
lahf
ljmp
rcl
jbe
xchg
lds
orb
jnp
mov
cmpsl
inc
push
cmpsl
push
inc
leave
sbb
aam
shufps
mov
jns
scas
jle
incl
sub
shll
pop
in
xor
mov
jp
fcomip
cmp
adc
or
cmpsb
popf
cmp
lock
dec
sub
mov
xchg
sub
dec
cmpsl
push
les
jmp
or
adc
mov
pop
and
rcl
mov
out
into
repz
cld
xchg
fisubl
mov
xor
out
es
in
mov
pop
mov
add
stc
inc
loopne
sbb
lods
xchg
push
lahf
pop
addr16
testb
mov
in
pop
push
out
call
jne
mov
mov
xor
frstor
lret
loopne
cwtl
jg
mov
mov
xchg
call
jp
es
lods
loope
dec
adc
cmp
jno
lock
je
jecxz
and
add
leave
dec
cltd
jmp
test
stos
enter
aad
cli
inc
sbbl
shll
cmpsl
ret
lock
cmpsb
jbe
enter
hlt
rcr
rcr
popa
jo
stc
fistps
loope
lret
lcall
push
sti
mov
jae
inc
pop
xlat
adc
jbe
mov
lret
inc
mov
rcll
mov
xchg
je
aad
out
loop
jle
addr16
cmp
sbb
xchg
or
jno
xchg
push
add
fnsave
inc
rorl
rcrb
in
popa
sti
add
ja
lods
ljmp
pop
xor
add
icebp
sub
sti
popa
push
hlt
xor
xor
out
jbe
add
inc
adc
stc
jecxz
mov
or
daa
and
fwait
stos
repz
sbb
fwait
test
test
scas
jmp
int3
orb
push
pop
jle
xchg
js
lea
jmp
adc
das
andb
arpl
mov
fstpl
add
add
ret
sub
mov
jp
sbb
adc
insl
and
fstpl
fldl
das
mov
pushf
xor
popa
in
mov
repz
xchg
lret
fdivl
jp
fildl
out
or
pop
inc
inc
test
ja
jo
inc
repnz
adc
mov
cmp
lret
scas
shl
and
push
xchg
mov
push
ljmp
addr16
mov
push
sbb
pop
jmp
sbb
hlt
stos
sbb
aaa
ret
xchg
jb
xchg
xchg
jo
inc
pop
into
add
cmpsb
or
cmp
add
test
dec
loope
sub
adc
pop
xchg
je
inc
movsb
std
in
pop
jns
sbb
add
or
shlb
les
arpl
sti
adcl
jne
xchg
add
lods
outsl
mov
jp
xchg
xchg
add
scas
inc
and
push
mov
fstl
out
adc
les
mov
jl
and
mov
mov
testb
inc
clc
pop
outsb
ja
insb
cwtl
enter
push
sbb
ljmp
ficompl
loopne
jae
inc
push
jmp
pop
nop
fwait
sbb
loopne,pn
add
add
inc
sti
sbb
inc
xchg
dec
movsb
lods
mov
sarb
push
dec
xor
stos
aam
stos
dec
and
xor
sub
add
arpl
add
lea
adc
inc
es
jne
out
enter
ja
bound
insl
in
into
dec
mov
and
gs
xor
fisubrl
push
mov
hlt
and
pop
cmp
sub
push
mov
mov
insl
pop
jg
imul
adc
inc
push
and
pop
xchg
or
add
add
or
cmp
ret
outsl
dec
push
jns
adc
adc
movsb
sti
mov
pop
lods
in
popf
imul
stos
dec
dec
push
xor
xlat
movsb
cmpsl
dec
aaa
fldenv
sbb
fwait
jl
pop
push
rclb
adc
xchg
lods
and
sub
mov
cmp
cmp
pop
xor
adc
popa
rcll
or
popa
leave
ret
push
sub
lods
sahf
xor
hlt
cmp
clc
sbb
scas
mov
mov
stos
ljmp
cwtl
stos
dec
cld
mov
jae
inc
cwtl
add
fiadds
fsubrs
rclb
xchg
fcomip
sub
ja
xchg
repnz
pop
jns
or
mov
cmp
cmp
decb
inc
int
fstpt
outsb
mov
sbb
xor
sbb
inc
dec
js
push
fs
cmp
adc
pop
add
xor
movsb
inc
out
ja
mov
jle
lods
add
clc
pop
mov
xor
ret
sub
and
xor
ja
push
movb
loop
ja
mov
pop
mov
movsb
stc
hlt
push
pop
pop
push
push
aam
push
lret
lret
push
mov
fstpt
cmpsl
dec
sbb
mov
mov
or
cltd
mov
adc
adc
mov
sbbl
xor
jnp
in
repnz
flds
cltd
faddl
jb
adc
int
cli
stos
jno
pop
add
cwtl
ljmp
out
mov
outsl
xlat
xchg
or
push
loopne
test
and
flds
mov
pop
in
mov
fcoml
leave
mov
mov
pusha
jns
sbb
or
push
adc
jge
loop
icebp
icebp
dec
arpl
imul
cs
or
mov
out
add
adc
test
sbb
repz
sti
sub
inc
sbb
cld
mov
sbb
mov
fwait
dec
or
arpl
mov
jae
sbb
loop
pop
rcrl
ret
mull
cmp
rorl
mov
mov
fnstcw
ljmp
inc
out
pusha
mov
aas
in
sub
cmpsl
jae
lret
loope
adc
or
lahf
or
push
pop
jmp
add
jmp
outsb
inc
or
outsl
insb
sahf
dec
sbb
push
rcr
adc
movsl
mov
add
pop
pop
pop
adc
outsl
mov
lock
mov
pop
push
movsb
dec
adc
pop
jmp
lcall
jge
andb
xchg
int3
iret
test
loopne
out
shrb
fnstsw
fistps
dec
mov
dec
ffreep
arpl
inc
sarl
enter
mov
pop
mov
sbb
insl
and
xchg
push
pop
shrl
push
mov
pop
mov
fdivr
push
push
mov
cmpb
aas
cs
adc
dec
mov
aas
call
dec
fs
aas
sarl
push
xor
fidivl
jg
sbb
in
dec
aas
nop
push
and
cmp
jl
in
inc
loope
test
in
push
jnp
lcall
adc
fdivp
iret
pop
xchg
iret
inc
pop
dec
mov
sbb
lods
mov
loope
push
ss
inc
add
add
ja
ret
fs
mov
clc
in
and
xchg
adc
imul
rcrb
sbb
std
pop
sbb
push
test
fwait
dec
or
inc
sbb
push
or
cmp
and
xor
out
xchg
fs
lock
mov
int
loop
sub
mov
sarl
xchg
mov
or
xchg
dec
mov
ficompl
das
mov
lock
push
bound
loop
mov
mov
jecxz
inc
test
inc
and
loope
jg
pop
xor
fs
or
jne
adc
push
push
add
adcl
cmp
daa
aad
mov
mov
cmp
mov
dec
push
dec
mov
jecxz
fsubp
sub
sub
pop
repnz
mov
loope
dec
xor
push
fmuls
xchg
hlt
add
addr16
icebp
cwtl
fst
add
aam
es
mov
push
pop
arpl
xchg
xchg
pushf
mov
lea
push
pop
es
xor
jbe
loop
pop
data16
rolb
mov
pop
repz
xchg
sub
and
cmp
xlat
lcall
pop
sub
sbb
in
inc
notb
mov
or
pop
cli
adc
sbb
jns
frstor
ljmp
xor
push
mov
imul
call
and
jecxz
xchg
xchg
lds
lods
sbb
test
push
xchg
dec
xchg
int3
fdivp
mov
jne
dec
inc
das
mov
pop
sbb
arpl
jb
xor
fdivs
inc
jg
jo
and
gs
pop
dec
jmp
xchg
push
out
xchg
push
jge
fs
fisubs
lcall
leave
stc
sbbl
lds
xchg
jg
sub
rcrb
stc
shrl
subb
or
xchg
xchg
outsl
add
mov
push
insl
stos
jb
sbb
mov
insl
jno
inc
pop
stos
jns
add
sbb
pushf
mov
and
or
xchg
insl
shl
sub
mov
pop
cmp
dec
in
js
add
push
outsl
test
in
push
arpl
popf
mov
xor
inc
jo
mov
and
pop
aad
adc
inc
ds
cmp
fimuls
mov
jno
adc
or
dec
xor
and
fldcw
jg
out
mov
and
addr16
and
fstps
xchg
dec
adc
aad
les
mov
dec
hlt
cmpsl
out
xchg
movsl
loope
popf
sub
xchg
ss
and
ja
xlat
xchg
mov
insb
inc
cs
dec
dec
xor
xor
jecxz
rcrl
jge
pushf
cmp
inc
mulb
or
pop
addl
push
ja
or
rorb
sbb
loopne
sahf
addl
out
orb
sahf
cli
xor
push
lds
pop
sbb
loope
add
sub
xchg
dec
lret
jne
rcrb
mov
cmp
in
imul
dec
jno
jae
orb
imul
add
test
xchg
mov
jmp
xchg
inc
out
inc
xor
gs
adc
mov
xchg
jge
jmp
and
mov
loope
xchg
inc
mov
xchg
pop
movsl
push
xlat
subb
mov
or
mov
lds
and
sub
lods
inc
je
mov
pop
movsl
imul
aas
push
push
inc
cmp
push
std
dec
fsubl
sbb
xor
out
mov
or
outsl
and
mov
jns
adc
cmp
xchg
test
js
das
shl
ss
stc
repz
test
sub
xlat
xor
push
jae
mov
int3
ds
pushf
push
lcall
xlat
adc
mov
mov
xchg
or
sbb
mov
decb
dec
inc
insl
aaa
sar
inc
paddusw
adc
push
lret
push
lock
ja
std
sub
jecxz
lret
mov
repz
inc
dec
stos
out
push
cli
sti
and
loope
adc
add
push
mov
cmp
jo
fwait
mov
and
and
jo
cmp
in
sbb
push
mul
ja
stos
arpl
cmp
rclb
outsl
lods
sahf
mov
jae
loope
fcomps
mov
addr16
dec
jg
adc
lds
orb
push
add
cmpsl
dec
pop
mov
push
movsb
shl
mov
mov
pop
call
insb
push
lds
add
push
fisttps
daa
out
cwtl
mov
mov
movsb
push
lret
or
cmp
into
pop
stos
or
lods
cli
nop
scas
clc
adc
inc
repz
stos
nop
xchg
cmpsb
push
and
pop
mov
sbb
cli
push
cld
sbb
pop
sarb
jae
xchg
loop
xchg
std
jge
add
fimuls
adcl
push
xchg
xchg
adc
adc
inc
scas
sarb
add
pop
sbb
je
inc
roll
cs
fdivl
and
ljmp
mov
push
test
fisttpll
cli
ror
add
iret
hlt
or
outsl
mov
mov
inc
mov
inc
xchg
inc
shlb
sub
mov
and
lea
inc
sub
and
into
push
push
pop
lods
cmpsb
mov
push
adc
pop
xchg
loope
das
icebp
dec
bound
divl
enter
push
fstps
mov
sub
mov
aam
jmp
out
lahf
pop
pop
dec
inc
daa
jno
out
lock
imul
dec
and
popf
mov
xorl
sbb
jb
cmp
testb
mov
jmp
adc
push
cli
jl
add
lahf
call
and
xor
push
mov
jecxz
ret
out
movsl
ficompl
dec
dec
rclb
or
pop
adcl
hlt
aaa
mov
jns
push
iret
into
dec
rcll
scas
mov
cmpsb
sbb
and
out
xor
es
mov
xor
or
mov
rorl
ja
out
nop
adc
orl
aaa
dec
mov
sbb
sahf
lods
arpl
call
call
xor
jo
push
xchg
lods
lcall
icebp
mov
xchg
dec
cwtl
pushf
dec
pop
outsl
push
push
xchg
mov
movsl
mov
xchg
stos
rolb
push
nop
insb
jle
insb
cmc
xchg
push
clc
pop
or
dec
xor
out
mov
cmpb
inc
mov
cli
adc
je
inc
and
ret
incl
imul
fildll
fmuls
fwait
mov
pop
inc
aas
cmp
es
mov
fists
push
mov
movsl
cmc
cli
loope
aad
xor
xor
mov
jnp
int3
test
dec
jno
adc
cmp
xor
push
rcrb
lcall
and
mov
mov
mov
mov
das
pop
jne
das
jb
mov
pop
add
lea
dec
mov
xchg
scas
sarb
push
push
nop
sbb
incb
sbb
dec
xchg
lds
jecxz
jge
outsl
dec
mov
mov
daa
jmp
push
dec
push
pop
jmp
test
aad
pop
fisttpl
pop
sbb
or
pop
ds
inc
in
repz
xor
loop
add
test
jecxz
push
cmpsb
xchg
arpl
das
sahf
add
loop
or
stc
pop
mov
mov
out
scas
aam
mov
and
xor
push
imul
xor
repnz
fsts
movsb
adc
mov
imul
and
jno
add
jo
insl
lods
mov
test
push
xchg
pop
ja
push
inc
inc
sbb
sbb
lods
stos
and
mov
sub
push
pop
popa
stos
leave
sub
int3
scas
xor
lea
cmpsb
shl
add
and
mov
in
idiv
mov
pop
mov
mov
xchg
loop
sub
pushf
push
mov
add
cmpb
mov
lcall
aaa
dec
mov
int
cmpsl
add
or
sub
or
dec
mov
repz
adcb
mov
sbb
xchg
push
stos
and
insb
or
xor
inc
inc
outsb
mov
pop
add
movsl
push
setnp
fildll
loopne
mov
cmp
push
bound
cwtl
fistpl
inc
mov
fwait
cli
dec
sahf
mov
ja
scas
xor
out
mov
sti
popf
cmpsl
adc
cmp
xor
popa
scas
push
ds
loope
xchg
xlat
fcmovnu
mov
repz
xor
mov
jmp
ret
add
pop
adc
push
or
out
stos
mov
lcall
sbb
sub
xor
mov
punpcklwd
push
icebp
jo
imulb
in
mov
lds
xor
daa
xchg
mov
mov
dec
sahf
sbb
adc
sbb
rcll
cltd
test
adc
mov
ret
shr
lret
jg
out
sarl
jb
cmp
fstpt
and
outsl
lods
sbb
scas
test
sahf
out
and
gs
data16
mov
pop
pop
imull
and
mov
sub
inc
in
mov
stos
stos
loopne
pop
adc
and
xor
push
inc
fldenv
inc
iret
xor
jl
or
jl,pn
fwait
leave
pop
cli
loop
add
leave
andl
loopne
mov
sub
pop
rcl
jmp
enter
pop
pushw
mov
jle
add
mov
scas
fisubl
imul
fists
lret
jmp
test
insb
mov
add
dec
adc
inc
int3
xchg
inc
movsl
mov
jg
test
adc
lret
mov
fwait
hlt
test
rorl
mov
jmp
bound
cmp
jle
pop
xchg
cmpsb
push
lahf
pop
addl
add
jle
mov
add
mov
fs
push
pusha
xlat
sar
pop
js
enter
iret
aas
insb
repnz
jns
insb
data16
out
xchg
add
movsb
call
mov
xchg
add
cmp
es
pop
ret
movsl
mov
inc
mov
fucom
popf
xchg
pusha
scas
push
dec
inc
test
cs
dec
rorl
div
add
test
dec
cvtdq2ps
pop
leave
jecxz
mov
ret
stc
jge
push
dec
arpl
xchg
xchg
sub
mov
fstl
outsl
jmp
cmp
mov
sti
mov
cld
jnp
mov
outsl
jnp
jg
and
outsl
jg
sub
outsl
mov
loop
je
add
outsb
ret
fs
push
cmp
les
dec
mov
dec
clc
xchg
sub
pop
adc
push
inc
pop
pop
sub
add
pusha
sbb
ficoml
lcall
mov
xor
jle
mov
xchg
adc
push
xor
fwait
add
push
lods
mov
cld
movsb
push
ss
call
call
jae
mov
xchg
lahf
loop
sbbb
fstpt
pop
dec
mov
adc
cli
cmp
and
xlat
popa
cmp
lods
sahf
out
pop
cltd
movsb
xchg
cs
and
xor
or
fcoms
scas
adc
push
sub
adc
mov
pop
shl
mulb
outsb
xchg
sbb
sub
cmp
mov
outsl
fsubr
sub
add
jo
repnz
stos
jns
mov
cmpsl
push
fcoms
sub
movb
ror
pop
aaa
adc
cwtl
enter
add
cmpsl
adcb
mov
push
clc
nop
mov
pop
mov
lods
shrd
ret
add
std
and
aaa
roll
xchg
test
cmpsl
fwait
mov
mov
mov
out
cltd
mov
sahf
lahf
rolb
jo
pop
cltd
iret
daa
cmp
int3
pop
sub
mov
jne
lds
pop
push
xor
adc
cmp
jle
movl
add
inc
pop
jnp
aas
mov
nop
dec
gs
leave
jl
pop
fptan
xor
xchg
ret
jae
jns
and
push
out
cli
sbb
pop
outsl
push
cwtl
jge
inc
xor
push
push
xchg
nop
inc
notb
pop
mov
rorl
push
sub
into
or
inc
inc
pop
fstpt
imul
fs
out
mov
pop
sbbb
gs
or
sbb
mov
mov
xchg
mov
shrl
loop
addb
cld
sahf
loopne
and
jg
mov
cs
inc
jbe
rclb
pop
inc
ret
jl
mov
shll
imul
xlat
adc
fisubrs
lods
dec
and
mov
jae
je
inc
fwait
mov
test
inc
gs
test
in
mov
adc
outsb
aad
fistl
jecxz
fbstp
mov
cmp
xor
jp
das
and
xor
test
and
mov
mov
pop
into
aaa
jge
enter
das
sbb
lock
js
lods
mov
iret
sub
and
push
mov
cmpl
push
in
add
and
mov
dec
fwait
test
push
mov
addr16
scas
pop
push
aad
scas
cmp
dec
iret
mov
mov
pop
jbe
mov
and
push
out
out
mov
jmp
sbb
test
scas
ret
fistpll
adc
push
xchg
or
into
in
mov
shlb
mov
dec
inc
call
popa
subb
lds
xchg
mov
arpl
dec
add
inc
dec
jp
inc
mov
cs
das
bswap
xchg
outsl
cmp
lods
scas
imul
les
mov
shrl
mov
adc
shlb
pop
xor
mov
mov
dec
lret
jns
and
inc
dec
mov
fadd
xchg
lahf
decb
dec
xor
incl
dec
imul
jno
out
ljmp
fstpt
push
sbb
aam
dec
jp
shll
pop
jb
fldcw
xor
xchg
push
les
jmp
fstpt
js
mov
inc
fdivrs
cltd
pop
add
pop
in
xchg
cmp
call
pop
subb
cmp
sub
sbb
add
cmpsl
mov
or
inc
mov
or
and
lods
jg
inc
adc
jmp
insl
xchg
jb
sahf
fsts
fwait
push
add
adc
adc
sub
fs
pop
xchg
enter
jno
jmp
jge
push
mov
pusha
and
lds
clc
pop
icebp
insl
add
outsl
and
jmp
out
inc
bound
mov
jecxz
fs
and
out
sub
push
mov
mov
pop
fwait
stos
sti
pop
repz
insl
push
test
shlb
sub
xchg
mov
mov
int3
push
repnz
inc
or
xchg
jnp
pusha
pop
xchg
and
jle
fildll
cmpsb
and
inc
jecxz
clc
inc
stos
fiaddl
add
mov
je
sarb
int3
pop
fisubrl
sub
in
or
rol
jg
cmp
lcall
and
adc
sub
push
fiaddl
jecxz
iret
das
rdtsc
xor
xchg
mov
pop
jl
push
ja
or
stc
and
je
mov
sub
fs
mov
mov
aaa
mov
out
and
and
xor
jl
sub
mov
mov
xor
std
ret
sbb
xor
and
shlb
adc
stos
cs
xchg
mov
mov
adc
or
jecxz
push
dec
xchg
gs
cmp
mov
mov
hlt
xchg
mov
stos
xchg
dec
push
cmp
cmp
push
cs
pop
add
add
fcmovu
push
xorl
sahf
mov
loop,pt
nop
outsl
cmp
add
gs
daa
jge
and
fnstenv
in
dec
xchg
mov
inc
xchg
push
fdivrl
lret
pop
adcl
data16
cmp
in
add
scas
cld
test
sbb
pop
jg
dec
push
cltd
mov
push
hlt
mov
andb
push
jmp
rol
ja
arpl
lea
popa
xor
mov
jo
shlb
push
mov
lds
test
inc
js
mov
ret
mov
pop
cld
loopne
insb
sbb
mov
jno
push
sbb
or
insl
sub
mov
cmc
leave
jle
dec
fsubr
call
jl
add
inc
cmp
jg
inc
xor
inc
mov
lret
xor
jo
or
adc
add
je
test
push
xorl
inc
outsb
pop
sbb
mov
shrb
mov
test
jmp
xchg
pop
dec
xchg
fmulp
fstl
mov
pop
xchg
daa
mov
aam
movsb
repz
rorl
lds
cwtl
mov
or
iret
das
jmp
popf
test
and
pusha
aam
sarl
jno
andl
fildl
cmp
jg
push
daa
dec
cmpsb
shll
pop
loopne
std
sub
pop
mov
pusha
mov
or
outsb
fwait
mov
mov
cld
movsb
insl
addr16
lcall
pop
out
and
push
mov
sub
fdiv
sbb
inc
bound
jb
and
std
lret
popa
jle
pushf
mov
xor
sbb
inc
jno
aas
lret
push
inc
sub
sbb
xchg
add
insl
jmp
out
mov
push
push
clc
xchg
and
jne
js
mov
cs
sbb
and
pop
out
mov
mov
roll
add
rol
jmp
repnz
lahf
push
or
jg
insl
dec
gs
inc
jo
sub
repnz
imul
movsl
jle,pn
or
iret
jbe
test
loopne
rol
out
orl
xor
loop
nop
bound
in
rorl
mov
add
sbb
sub
clc
shrb
pop
add
mov
shll
push
call
dec
pop
out
cmp
inc
clc
push
movsb
xchg
push
mov
sub
sahf
dec
xchg
test
or
ret
stos
sahf
imul
or
push
jbe
shll
jle
lret
sub
int
fistps
and
mov
lahf
arpl
push
ret
imul
push
add
jbe
push
aaa
lahf
add
leave
push
cltd
cmp
adc
inc
sub
aas
rclb
ficomps
pop
xchg
jo
enter
jle
mov
shrb
in
or
int
mov
mov
push
push
xor
inc
sbb
add
lret
mov
shrl
push
inc
cld
popa
mov
push
call
idivb
inc
sbbb
sbb
jnp
int
xor
jmp
or
bound
mov
push
mov
push
std
mov
je
xor
xor
sub
inc
mov
sbbl
fisttpll
psubw
outsl
mov
adc
xchg
inc
sbb
jecxz
xchg
cld
jbe
cltd
jecxz
mov
cmp
movsl
jl
or
push
mov
add
mov
jnp
loop
lock
cmp
jbe
adc
mov
sub
ror
dec
inc
out
fldenv
sbb
into
xlat
out
rcrl
icebp
in
repnz
push
xlat
bound
mov
add
or
pop
sarl
out
mov
fimull
xlat
fs
insb
mov
mov
cltd
sbb
xor
lea
cmp
outsb
aaa
mov
arpl
arpl
xchg
lea
in
mov
fnstsw
or
fwait
push
or
bound
fucomp
icebp
jmp
arpl
or
fcoms
cld
jecxz
mov
mov
lret
icebp
and
out
or
jmp
dec
notb
jle
mov
mov
insb
div
pop
mov
pop
pop
adc
nop
xor
outsl
jo
mov
dec
js
dec
stos
push
dec
push
repnz
jg
push
les
pushf
leave
ja
and
imul
in
mov
loope
sarb
push
mov
jl
sub
dec
sub
adc
scas
push
dec
cmp
cmp
dec
inc
jecxz
sub
ficomps
push
or
pop
jecxz
or
iret
lcall
pop
pushf
and
xor
push
fst
xchg
xor
cwtl
dec
mov
mov
adc
fucomip
lret
nop
inc
addr16
push
repz
mov
pop
lods
cmp
in
aas
lret
push
xchg
inc
in
fisttpll
inc
cmp
push
sbb
mov
ret
pushl
push
fs
outsb
movsl
popa
enter
rolb
cli
cmp
add
jle
lahf
data16
dec
adc
cmp
mov
in
les
jle
lret
je
push
rorb
mov
ja
jecxz
mov
jg
test
enter
push
or
movsl
sbb
push
mov
and
fisttpl
mov
bound
push
add
inc
xor
pop
xchg
out
xlat
push
pop
jmp
ror
imul
or
mov
cli
jb
push
lcall
ret
inc
std
push
fucomi
inc
adc
je
inc
popa
xchg
sub
popa
dec
dec
sbb
sub
aas
jns
and
mov
in
aad
cmc
xor
testb
or
fwait
jp
daa
jp
dec
pusha
mov
inc
das
xchg
decb
or
pop
pop
out
mov
xchg
insb
mov
je
std
lret
sub
push
adc
aad
fwait
push
cmp
mov
push
or
and
sub
inc
add
imul
hlt
stos
xchg
out
sbb
xor
adc
addr16
mov
inc
cmovs
pop
fs
sbb
aas
cmp
pop
push
mov
sbb
lcall
leave
pushf
int3
mov
or
sub
mov
push
mov
fsubl
lcall
and
into
pop
scas
mov
sub
adc
rcrl
add
ret
jmp
sahf
insl
mulb
mov
dec
std
inc
fs
add
xor
mov
add
fcmove
add
pop
push
jl
adc
insb
jmp
xor
dec
sbb
push
jmp
inc
and
adc
fwait
or
mov
mov
lret
mov
imul
mov
jge
pop
cltd
iret
sahf
and
scas
mov
nop
andb
jp
insb
mov
aas
cmp
xchg
gs
pop
call
mov
lods
lret
and
aad
add
stos
inc
daa
dec
mov
xchg
loopne
dec
addr16
mov
pop
filds
dec
sub
cmpsb
mov
movl
pop
negl
jl
inc
add
jo
or
iret
fwait
inc
xor
or
cmc
push
pop
add
les
jmp
lods
outsl
jl
and
jb
lret
inc
repnz
outsl
popa
and
xchg
adc
popa
in
jne
xchg
iret
les
and
movsl
jbe
test
mov
icebp
mov
mov
cmpsl
rcrl
or
adc
jae
push
int3
cmp
push
mov
adc
pusha
popa
pminub
xchg
pop
add
ret
stc
in
adc
pop
faddl
or
mov
out
ljmp
idivb
aad
movsb
test
and
test
and
mov
sbb
pop
push
lds
lds
sbb
stos
pop
hlt
cmc
repnz
jl
pop
push
dec
neg
rcll
cli
int3
push
mov
jnp
dec
in
pop
mov
data16
mov
iret
call
imul
fisubs
cmp
cmc
test
xchg
cltd
lods
ss
mov
xchg
leave
push
aas
xor
xchg
in
test
jmp
je
sub
rolb
mov
push
jecxz
dec
jmp
call
cltd
inc
repz
sub
jne
add
sub
xchg
std
pop
push
repnz
mov
dec
je
cmp
pop
enter
jle
inc
mov
outsb
mov
sbb
jo
in
ds
loopne
dec
addr16
fwait
mov
pop
lret
addr16
jno
roll
jg
jnp
bswap
dec
mov
pop
push
rclb
jbe
hlt
xchg
repnz
dec
inc
scas
sub
adc
imul
shlb
lods
add
stc
ss
aam
or
cmc
stc
mov
scas
nop
cmc
movsl
or
cmc
pop
je
mov
adcl
in
push
lret
pop
bound
xor
and
mov
das
icebp
pop
inc
sbb
out
and
pop
xchg
xor
out
in
test
jbe
dec
mov
mov
enter
test
pop
ud1
pop
inc
inc
into
dec
mov
movsb
cmp
jmp
jge
fdiv
movsl
jp
sbb
repnz
shlb
push
mov
jg
adc
stos
dec
leave
add
cmp
orb
test
lods
mov
mov
jmp
mov
pop
add
fsubrs
xchg
cmp
out
imul
aam
movsl
ja
fwait
or
add
lds
inc
ret
stos
add
or
leave
lods
sub
dec
shlb
lods
mov
mov
pushw
xchg
adc
in
rcr
int3
sub
add
jb
xlat
or
xchg
test
jp
in
mov
xchg
outsl
stos
shrl
hlt
push
cmp
out
aam
arpl
mov
mov
jbe
mov
les
sarl
and
test
dec
inc
jne
push
or
push
or
mov
push
mov
sarb
fninit
sub
inc
mov
lods
sti
imul
pusha
xchg
dec
pusha
jbe
push
push
dec
pop
sbb
imul
adc
hlt
add
adc
add
jae
mov
int
aaa
lods
lcall
mov
dec
cmp
rclb
jmp
push
xor
cmp
jge
pop
aas
mov
stos
adc
jb
pop
xchg
jg
add
cmp
data16
mov
mov
mov
and
xchg
fndisi(8087
insb
jl
popa
fisubl
xchg
or
aam
lods
jbe
dec
dec
div
setno
pusha
xor
add
inc
dec
sub
cmpsl
dec
clc
aam
cwtl
xor
cmp
cmp
mov
sbb
jne
into
out
inc
in
inc
jg
scas
cltd
pop
xchg
pop
lcall
jp
loopne
fsub
push
xchg
sbb
dec
ret
cmc
lret
out
or
sbb
fcomps
mov
nop
sbb
adc
xor
cli
das
mov
aam
lret
jb
jg
add
stc
xor
sub
mov
mov
jle
pop
addr16
mov
sbb
adc
jmp
add
gs
or
mov
call
adc
pushf
xchg
setns
fimull
lea
add
pop
adc
cmp
mov
stos
jmp
sbb
add
fists
mov
rolb
push
pop
cmp
xchg
lock
out
mov
sub
in
xor
xchg
or
mov
inc
dec
xor
out
sbb
cmp
pcmpeqw
sub
ficoml
cli
nop
pop
cld
jno
jno
stc
mov
test
adc
or
dec
ret
sbb
fwait
cli
adc
fadds
push
aam
ljmp
rorb
into
sahf
fwait
shrb
cld
xchg
dec
stc
fwait
and
int3
aam
pop
dec
ljmp
aaa
xchg
mov
xchg
pop
fnstcw
xchg
adc
xor
xchg
inc
fsub
daa
int
repz
hlt
cmp
xor
mov
sti
clc
and
pop
je
lret
vandpd
push
sub
jg
fs
mov
dec
push
popa
scas
dec
jbe
jg
pop
addr16
mov
and
arpl
push
int3
insl
or
popa
in
jmp
in
lret
test
jo
push
roll
outsb
mov
mov
sub
jne
mov
jg
les
pop
sub
add
fidivs
push
inc
loopne
cld
js
cli
xchg
mov
daa
test
jp
dec
sub
cmp
xor
data16
insl
adc
sbb
out
lock
in
push
mov
sbb
push
lods
push
cwtl
inc
loop
jns
pop
hlt
sti
hlt
ljmp
popf
push
or
ds
leave
das
stc
divl
lret
mov
movb
pop
in
shll
int3
sbb
pop
scas
jno
pop
mov
cmpsb
inc
test
sub
stc
jb
add
cmp
xchg
in
mov
pop
mov
sbb
outsl
lods
xlat
clc
jmp
jnp
lea
xchg
xor
inc
mov
test
jae
mov
rclb
sbb
cmp
popa
insb
fisubrl
arpl
sbb
cltd
stos
jnp
xlat
test
sbb
repz
add
dec
out
jo
mov
adc
lcall
scas
fimull
out
inc
dec
pop
fmulp
aam
negb
imul
call
cwtl
xchg
mov
pop
pop
pop
mov
imul
add
call
dec
xchg
mov
pop
pop
dec
stc
fcmovnb
cmp
adc
sahf
pop
out
and
sahf
push
sub
cmp
push
outsl
and
jle
xchg
pushf
and
aas
fs
cld
mov
mov
xchg
sbb
add
test
shrl
or
orl
mov
nop
repnz
jp
in
push
enter
aas
adc
cmpsl
testb
pop
testb
cltd
xchg
and
dec
mov
add
mov
mov
loop
mov
adc
pushf
aam
xorb
aaa
sbb
pop
out
cmp
insb
lods
ja
popf
jno
es
cmp
push
mov
mov
push
movsb
pop
pop
addr16
inc
fidivrs
arpl
gs
daa
pop
mov
and
dec
jne
repz
inc
stc
fucomip
mov
adc
inc
scas
mov
dec
cmp
sub
movsl
add
cmp
cmc
xchg
pop
out
lods
xor
jne
xchg
iret
out
jl
dec
dec
pop
mov
xor
out
popf
mov
rcll
lock
ja
arpl
mov
push
xchg
sub
sub
notb
cltd
cli
cmpsb
cmpsb
sub
cwtl
lods
adc
or
and
cmpsb
push
push
jle
cli
inc
dec
push
sub
nop
dec
fdivs
sbb
xor
pop
push
jge
flds
dec
cmp
dec
dec
sbb
jp
inc
inc
push
xchg
jne
add
lahf
xchg
adc
jle
out
lea
les
mov
xor
enter
jecxz
mov
push
movsb
and
inc
and
mov
roll
insb
jge
push
imul
call
dec
fldt
push
push
sbb
pop
pop
or
fnsave
jae
mov
mov
pop
mov
or
bound
iret
ret
enter
test
sbb
pslld
fwait
shrb
cmpsb
mov
mov
jg
test
fdivl
sbb
xchg
lcall
sub
in
cmp
xchg
imulb
out
sarl
cmp
in
scas
pop
xor
je
sub
xorl
jo
arpl
test
cli
pop
mov
pop
mov
test
add
stos
mov
in
mov
daa
or
mov
std
jle
mov
add
add
stos
jne
ffreep
add
ljmp
or
push
cli
or
push
shrl
lods
lods
adc
aam
loope
xchg
sub
ret
pop
cli
inc
dec
jmp
and
jecxz
xor
js
mov
add
mov
shl
insl
fbstp
aam
mov
mov
jmp
xchg
mov
add
mov
sub
or
cs
or
arpl
in
cs
jp
add
push
inc
test
je
fsts
mov
scas
or
push
xchg
mov
lods
nop
std
imulb
mov
push
in
push
push
adc
cli
or
loope
sbb
mov
adc
loope
or
psllw
pop
sarb
add
out
into
rolb
ss
xchg
push
outsl
xor
mov
inc
jle
push
es
mov
lahf
mov
lea
xchg
mov
sub
push
jp
loopne
sbb
cmp
fcompl
cmp
int
fldt
shlb
jnp
movsl
lods
mov
stc
das
call
jno
mov
das
popf
fstpl
jecxz
dec
adc
pusha
pop
xor
in
ljmp
loopne
mov
pop
push
jmp
sahf
orb
and
repnz
frstor
jno
loope
lock
aas
mov
aaa
aam
xchg
fdivr
repz
mov
daa
insl
mov
fwait
inc
dec
cli
xchg
in
das
inc
sbb
divl
add
add
mov
inc
pop
imul
xor
je
mov
sarl
stos
fisttpll
sti
dec
and
dec
aam
pop
jmp
ss
sub
dec
and
jge
pop
pop
addr16
aad
cli
push
sbb
ss
push
insl
sahf
in
ret
sbb
mov
aad
pop
int
fildl
fsubrs
das
mov
xchg
fnstenv
rolb
outsl
and
cmpl
jno
mov
cmp
mov
mov
inc
pop
xor
shrb
fbld
cli
jae
mov
and
stos
xor
fs
xchg
mov
lods
pop
and
fs
scas
out
cmp
mov
jae
enter
fcmove
xchg
fidivrs
jns
cli
adc
mov
or
mov
fwait
cmp
cltd
pushf
push
lret
cmp
out
sbb
std
lds
ffreep
xchg
mov
or
sahf
or
sub
imull
std
inc
lock
sbb
mov
jl
and
mov
xchg
imul
lods
mov
popf
les
insb
xchg
pop
cmp
xchg
cmp
stos
out
inc
int3
cwtl
mov
mov
sbb
mov
push
push
shlb
pop
jns
push
dec
incl
orl
imul
int3
gs
inc
ret
mov
or
nopl
mov
das
test
pop
fisubl
xchg
dec
daa
or
sbb
pop
incb
sbb
dec
mov
mov
jge
repnz
stos
push
ficoml
ret
shl
gs
mov
lods
sbb
rclb
repz
subl
or
sub
xchg
sbb
jnp
outsb
dec
ret
add
in
daa
rol
pop
cli
pushf
imul
lea
ljmp
out
rcrb
add
ficoml
or
push
inc
push
outsl
nop
pslld
cmp
ljmp
cmpsl
push
nop
mov
in
and
inc
jmp
int
enter
neg
scas
xchg
jl
test
mov
dec
push
out
xor
xor
push
jnp
mov
cmp
es
xor
rcrl
xchg
shl
xchg
clc
mov
mov
leave
iret
stc
jns
xor
fnsave
fldcw
leave
rclb
enter
aad
mov
cli
lods
inc
es
in
test
out
xchg
jne
lods
test
inc
mov
or
push
sbb
xchg
lods
loope
mov
mov
ljmp
xchg
xlat
lea
jbe
push
xor
mov
cmp
ds
iret
jae
dec
and
add
imul
jo
andb
add
mov
push
sub
addl
dec
push
push
mov
cmc
out
xchg
sarl
add
or
lea
sbb
test
ja
movsb
cltd
adc
mov
cmpb
in
loope
add
in
insb
mov
push
aad
rcrl
loopne
cltd
mov
dec
jl
dec
dec
inc
pop
adcb
stc
es
jecxz
cli
xchg
dec
jne
jl
in
or
and
pop
mov
pop
cltd
xchg
js
sahf
mov
out
jp
jmp
sbb
cmp
inc
pop
cmp
pop
sbb
adc
pop
dec
adc
iret
mov
mov
or
jle
xchg
aad
jl
fwait
pop
inc
sub
add
arpl
sar
imul
leave
mov
mov
gs
adc
jnp
dec
push
popa
out
rorl
lret
mov
xor
xchg
notb
stos
stos
xlat
hlt
out
push
mov
sub
les
mov
daa
aas
cmp
sub
cwtl
or
adc
push
test
mov
dec
clc
aad
bound
push
push
fwait
jbe
mov
pop
cmp
addr16
loopne
fbld
test
xor
pop
inc
cltd
mov
or
je
aam
lret
or
aas
std
sub
shll
in
push
aaa
pop
lcall
xchg
xor
aad
dec
std
xor
loope
inc
leave
xchg
inc
mov
sbb
cmpsl
loopne
rcll
xor
inc
es
mov
sub
subl
loopne
cmp
bound
scas
sbbl
sbb
inc
pop
mov
push
clc
imul
dec
into
inc
leave
add
xchg
dec
je
aas
jns
fstps
mov
lock
mov
fwait
lods
stc
ucomiss
mov
psrld
or
xchg
sub
mov
push
cmp
mov
es
cmp
and
push
pop
xor
jge
cmp
cmp
outsb
hlt
ds
in
out
clc
mov
mov
ds
sub
or
lds
xchg
mov
xchg
test
cmp
imulb
mov
sub
jecxz
arpl
pop
pop
jnp
push
inc
pop
lock
hlt
out
aad
rcrb
loopne
pop
jnp
and
or
mov
mov
inc
out
cli
mov
dec
iret
mov
pop
mov
hlt
adc
adc
out
pop
pop
int
rclb
loop
insb
pushf
lahf
sti
xchg
jmp
or
int3
xchg
lret
addr16
ljmp
pop
in
scas
cmp
jns
lea
sbb
insb
push
xlat
stos
cld
xor
xor
lock
test
cld
pop
sub
cltd
dec
xor
dec
stos
mov
push
adcb
cli
in
mov
call
loope
sbb
mov
add
ficomps
mov
xor
mov
adc
push
xchg
mov
xchg
imul
je
dec
push
negl
push
in
adc
stc
imul
inc
and
xchg
out
pop
mov
jle
in
jge
hlt
sarl
ret
push
cmp
xlat
inc
lcall
pop
mov
pop
jl
sar
mov
iret
lock
or
sbbb
mov
mov
pop
jne
mov
adc
mov
xorl
mov
imul
fmuls
mov
push
xchg
stos
mov
cmp
and
adc
leave
cmp
sbb
iret
inc
xor
imul
iret
sbb
into
mov
cmp
cli
js
fcmovnbe
inc
cltd
enter
leavew
icebp
movsb
mov
push
outsl
fistpl
and
pop
pop
fstpl
iret
mov
in
jb
sbb
popa
pop
negb
add
push
pop
cmc
mov
xchg
das
jns
xor
repz
clc
cmp
xchg
push
dec
js
pop
jp
sub
hlt
mov
xor
lret
jecxz
cmp
in
call
xor
mov
adc
pop
fdivl
rcrb
mov
inc
popa
js
ss
adc
and
je
dec
es
pop
leave
in
sbb
sbb
inc
cmp
or
push
and
mov
sbb
ja
lods
push
and
jo
pushf
repz
int
pushf
scas
bnd
xchg
adc
jle
iret
sub
add
cli
mov
test
push
lds
movsb
push
scas
icebp
mov
cmp
das
adcl
mov
cs
or
cmp
pushf
in
in
rorl
and
div
dec
push
xchg
rcr
xchg
or
negb
sarl
call
mov
or
dec
mov
popa
movd
das
mov
scas
adc
ss
jnp
ret
daa
jl
jmp
push
jo
cltd
scas
sbb
jo
jg
ljmp
sahf
out
cs
mov
lea
sub
sti
insb
shlb
jns
adc
pop
and
dec
xchg
das
pop
icebp
pusha
popf
int3
adc
sbb
mov
mov
fcmove
dec
jns
out
push
ds
lret
dec
xor
mov
lret
xchg
cmp
inc
sbbb
fistps
ss
push
lods
daa
loopne
push
mov
inc
cmovle
sub
cmp
jecxz
stos
and
scas
cmpb
add
sub
or
cli
fcoms
or
lahf
cs
outsl
push
gs
xchg
out
aas
pop
push
ret
adc
stos
in
insl
inc
mov
es
inc
push
dec
gs
rcll
push
mov
sbb
ss
push
add
cmp
xor
push
lock
loopne
cmp
adc
fcmovnb
pop
cmpsl
sub
adc
sbb
mov
jmp
movsl
js
imul
addr16
jmp
xchg
jg
mov
icebp
push
xchg
out
mov
rcll
in
scas
aad
pop
fadd
mov
sbb
das
in
fmul
out
dec
adc
lret
push
pushf
js
arpl
add
cmc
in
out
ss
orb
rol
pop
add
dec
xchg
pop
clc
imul
mov
dec
pushf
mov
and
fdivr
sub
jg
and
mov
xchg
add
mov
mov
fwait
jle
pop
sub
xchg
sbb
ds
aas
xchg
adc
xor
dec
mov
movl
cwtl
fs
or
icebp
cltd
sub
dec
jmp
fxch
sub
cmpb
test
xchg
fcmovne
mov
rcll
loopne
push
loopne
add
out
sub
loopne
adcb
push
add
inc
sub
icebp
pop
popf
sbb
ljmp
mov
daa
push
add
jne
scas
outsl
rcrl
xchg
das
push
repnz
pop
lcall
mov
ficoml
adc
mov
push
mov
pcmpgtw
cmp
dec
mov
cmp
mov
pushf
jg
iret
dec
lret
lret
and
andb
xchg
out
jbe
xchg
fsts
sub
mov
cmp
cltd
lcall
pop
ds
iret
es
ss
pop
mov
and
movsb
xchg
or
rcrl
add
lea
mov
sub
or
dec
ss
rcrl
push
cltd
daa
enter
mov
mov
pushf
arpl
fstl
xor
icebp
je
mulb
jp
imul
cmp
xor
loope
jmp
inc
andl
ja
mov
fiaddl
pushf
sbb
rcrl
shll
mov
imul
add
push
fwait
or
in
arpl
inc
jg
dec
xorl
adc
loope
sbb
test
stc
in
or
and
loopne
sbb
cmpsb
inc
push
mov
xchg
outsb
movsb
stos
test
add
push
movsl
mov
lds
or
lods
mov
xchg
int
pusha
pushf
jnp
das
xchg
inc
rcrl
jge
adc
mov
push
xchg
mov
pop
cwtl
mov
sbbl
aas
outsl
mov
in
xchg
js
loopne
push
fimull
fwait
sbb
adcl
and
stc
jmp
pop
pop
das
mov
inc
dec
adc
aad
lods
xchg
nop
xchg
outsl
inc
cli
sbb
cmp
jp
lock
jo
cmp
cltd
xor
mov
xchg
push
mov
aas
and
ret
mov
bound
int3
fistl
dec
push
scas
mov
in
mov
sub
into
insl
ret
push
ds
xchg
test
push
and
pop
mov
das
mov
mov
xlat
cld
cltd
push
out
dec
xchg
mov
pop
iret
cmp
stos
sub
daa
xchg
insb
cmp
inc
mov
mov
jb
shlb
sbbl
xchg
sbb
mov
cmp
xchg
test
repnz
pop
mov
hlt
jae
jae
push
xlat
test
pusha
cmp
out
sub
and
jne
cli
push
aam
das
test
xor
fnstcw
je
imul
ss
jb
leave
push
mov
loope
jb
adc
nop
sti
outsl
ficoms
je
enter
movsb
ljmp
repnz
and
mull
sti
addr16
adc
xchg
jno
std
dec
or
fwait
movsl
cmp
mulb
ret
xchg
jns
in
jle
sub
mov
and
aad
mov
sub
dec
in
jb
xchg
loope
shl
pop
xlat
add
sub
mov
fsts
cmc
push
iret
in
iret
loop
shll
iret
push
stos
sbb
xchg
test
add
sbb
sub
clc
mov
mov
test
sub
cmpsl
addl
jo
mov
dec
setg
scas
stc
inc
push
jbe
xlat
adc
pop
lods
xchg
in
mov
ja
aaa
insl
into
pop
rcrl
imul
int3
stc
mov
jmp
sbb
cmp
jmp
jo
mov
cmpsb
imul
test
push
jns
cmp
push
mov
cs
or
inc
mov
mov
ficomps
movsl
mov
outsb
push
repz
xor
out
inc
rorb
mov
push
iret
xchg
mov
movsl
into
sbb
jl
add
insl
jge
ret
and
jbe
lret
push
aam
xchg
adc
sub
scas
shrl
fidivrl
and
repnz
arpl
sub
inc
jne
lret
push
insb
lds
sbb
inc
pop
bound
xchg
push
loope
sbb
rcrl
mulb
mov
rcll
push
in
int3
jns
movsl
outsb
pop
testb
push
fstps
pop
xor
xchg
lea
loope
cmp
test
pop
jmp
test
adc
jns
hlt
jmp
xchg
pop
loop
adc
loop
push
fcomps
or
insb
fyl2xp1
xchg
mov
inc
mov
rolb
nop
sub
dec
push
and
mov
movsl
addr16
xchg
push
adc
movsl
aaa
mov
pop
mov
nop
ds
int
lret
mov
mov
sub
rclb
cmpsb
jne
jp
add
mov
lahf
imulb
stos
loope
fcompl
pop
pop
and
stc
push
mov
js
mov
sti
adc
mov
xchg
add
xchg
jb
aaa
shll
xor
jmp
pushw
mov
sbb
sarl
hlt
pop
aaa
dec
push
mov
dec
mov
aas
jns
mov
int
clc
out
and
pop
lret
jns
int3
or
mov
xlat
testb
push
sub
flds
popf
sub
lods
rorb
gs
ret
rol
out
out
xlat
xchg
jmp
jmp
pop
lcall
ficomps
adc
int3
addr16
aas
push
fildl
pusha
xchg
add
or
stos
out
or
and
into
ror
lret
ret
jb
xor
inc
ret
xor
pop
pushf
dec
mov
mov
insl
adc
push
iret
and
dec
cmc
dec
mov
add
or
push
jne
movsl
jbe
xor
filds
test
mov
addr16
xchg
popf
scas
outsl
shrl
shlb
lahf
out
test
mov
lods
pop
movsb
in
notl
sbb
jge
inc
and
adc
jl
idivb
popa
sbbb
jbe
sub
sub
and
mov
std
mov
std
dec
cmp
mov
dec
clc
test
mov
jl
adc
mov
xchg
inc
loopne
inc
dec
enter
test
nop
dec
cmp
push
dec
push
loop
pop
into
adc
jno
cltd
cmpsb
dec
pop
and
mov
jne
mov
jno
or
cmpsl
mov
mov
fimuls
aaa
xor
cmp
sbb
add
test
mov
mov
mov
xchg
add
pop
and
mov
repnz
and
inc
sbb
add
adc
xchg
mov
inc
scas
add
test
mov
das
mov
out
shll
or
ss
pop
cltd
or
clc
popf
aaa
fisttpll
hlt
pop
add
xchg
test
pop
sub
sub
bound
stos
sub
rcrb
stc
jmp
scas
movsb
cli
out
das
xor
xchg
outsb
fcmovnbe
mov
cmova
jnp
mov
adc
dec
dec
stc
push
loopne
lock
fisttpll
inc
jle
jmp
add
sub
and
js
inc
shlb
mov
mov
push
mov
add
pop
adcl
cwtl
cmp
rcl
jmp
push
ret
jmp
and
je
sbb
cmc
mov
test
int3
sbb
je
adc
pop
pop
hlt
inc
jge
lds
scas
push
nop
mov
jge
std
lea
or
icebp
lcall
mov
aaa
pop
dec
and
sbb
mov
jg
test
in
negb
add
dec
mov
aas
add
idivl
roll
mov
ja
jmp
pop
enter
and
pushf
inc
shl
out
jb
mov
xchg
pop
xchg
ss
sbb
stos
or
hlt
repz
popf
mov
out
call
xchg
mov
push
mov
fiaddl
scas
push
std
sbb
or
cltd
xorb
rcrb
pop
cmpsl
fwait
aaa
clc
pop
divb
in
inc
test
call
xor
mov
mov
inc
ds
std
in
fistps
stos
push
inc
aad
cmc
mov
sbb
ja
sub
stc
adc
stc
add
inc
fwait
or
sub
ja
insl
push
outsb
jle
sub
add
xor
addr16
and
add
cmp
adc
inc
bound
inc
outsb
cmp
xor
filds
dec
test
cltd
insb
cmp
ds
aam
jnp
ss
sbb
loope
pop
mov
outsb
mov
je
cmp
sbb
jbe
icebp
cld
daa
mov
or
xchg
push
inc
jbe
push
cli
adc
movsb
jmp
sbb
pusha
sbb
call
lret
pop
insb
ss
mov
dec
mov
pop
fwait
hlt
filds
loop
shlb
ss
js
outsb
adc
ror
xor
dec
mov
inc
push
pop
pop
cmpsb
push
push
daa
xchg
aad
stc
scas
inc
lods
ret
xor
push
fcoms
ljmp
dec
cld
leave
xor
call
lcall
or
jg
daa
sbb
stos
xor
aam
sbb
inc
xchg
or
aam
mov
mov
xor
sar
jg
jmp
push
stos
push
adc
cmp
sub
rol
lods
adc
mov
adc
cmp
cli
out
aam
cmp
adc
dec
mov
not
cmp
aaa
or
xchg
jnp
mov
jle
pushf
and
mov
inc
xlat
scas
xchg
cmp
pusha
testb
loop
stos
push
xchg
xchg
push
push
mov
cmp
inc
fmulp
sub
add
cld
fmull
mov
arpl
push
push
adc
dec
je
dec
jb
mov
jns
pushf
insl
add
mov
in
cmp
ds
mov
lods
adc
cmp
jecxz
add
mov
cmp
mov
cmp
adc
jb
mov
jg
dec
pushf
not
movsl
inc
cld
jbe
lds
adc
pop
jp
jmp
mov
call
sub
pusha
mov
inc
push
xchg
clc
add
push
mov
jns
adc
mov
add
lods
add
inc
shlb
adc
dec
nop
xor
lcall
in
decl
and
icebp
divl
xchg
les
in
sbb
es
mov
das
in
mov
xor
out
xchg
inc
mov
dec
test
xchg
xchg
dec
rorl
add
loopne
mov
movsl
call
bound
push
or
sbb
xor
roll
inc
xchg
sbb
icebp
dec
xor
push
mov
lahf
or
push
push
repnz
push
adc
stc
xchg
add
dec
lcall
test
ss
jne
cmp
push
aad
cmpsl
lock
and
mov
or
dec
jle
mov
pop
mov
sub
jb
lret
xchg
ret
adc
imul
push
push
mov
repz
loope
and
xchg
and
sub
cmpsl
out
mov
rcll
push
jp
insl
push
sbb
pop
call
shr
jecxz
movsb
cmp
xchg
mov
ret
pop
out
pop
sbb
xchg
push
test
fmull
out
mov
test
mov
loope
jne
push
popf
aas
cmc
inc
mov
inc
rcrl
xchg
and
xchg
mov
subl
sub
aam
imul
sbb
xor
outsl
cwtl
and
sbb
dec
and
add
lock
adc
fwait
lea
pop
xchg
adc
loopne
gs
inc
push
arpl
daa
popf
popa
loopne
push
pop
stc
test
pop
fmulp
cmp
sarl
xchg
ret
sarb
arpl
test
mov
push
mov
mov
pop
sub
into
sub
jo
jno
enter
pop
dec
popf
jmp
imul
adc
adc
push
ret
test
fildll
mov
sbb
mov
leave
add
loopne
cmpsw
lock
add
test
arpl
and
cmp
aad
out
push
adc
dec
ret
dec
pop
cmp
fs
test
sub
js
pop
cmp
enter
mov
outsl
ret
push
sub
fildll
shll
pop
push
ret
lea
sbb
xor
lahf
dec
insb
xchg
xchg
repz
mov
les
lods
xor
lea
out
xlat
fidivs
sub
inc
hlt
in
leave
fs
inc
sub
sar
fucomip
mov
mov
std
lret
mov
lods
fs
cmpb
dec
jmp
xor
sbb
push
and
je
lret
ret
pop
push
fdivr
add
out
stos
xor
out
and
mov
icebp
inc
xlat
jne
xor
aam
sbb
aas
mov
push
inc
insl
pop
movsl
mov
into
sbb
add
pushl
xchg
mov
jmp
test
inc
imul
xchg
mov
pop
pusha
add
xchg
mov
nop
adc
or
push
cmp
mov
jmp
dec
sbb
push
data16
sub
int
outsl
sub
cmp
xor
add
jae
in
cmpsl
inc
mov
pop
cmpsl
or
cmp
cmc
jecxz
and
divl
insb
repnz
lcall
xor
popa
aam
pop
scas
dec
mov
sbb
icebp
adc
mov
and
shl
pop
scas
ja
ficomps
fildll
repnz
xchg
fidivrl
stos
cmp
imul
inc
fidivrs
add
test
out
fmul
add
imul
js
out
cs
repz
and
jecxz
cltd
aaa
in
addps
insl
adc
call
mov
inc
mov
xchg
sbb
scas
add
cmp
sub
cmp
and
lods
clc
rorl
faddl
loopne
je
jne
or
mov
cmpb
add
nop
cmp
and
fwait
adc
mov
clc
aas
mov
mov
add
sbb
fsubs
dec
push
ja
push
or
mov
ret
push
in
lea
jmp
jae
out
cmpsb
call
sub
adc
cli
repz
and
adc
loope
das
lods
pop
into
aas
inc
cli
movsl
loopne
jg
ss
xlat
mov
sbb
cwtl
enter
rep
imul
dec
jne
push
aad
in
stos
inc
insb
mov
out
push
int3
mov
mov
or
pop
mov
inc
fwait
iret
test
mov
ret
lcall
sub
cmc
shrb
cmp
stc
lret
jp
jge
in
outsl
fdivp
xchg
in
rcr
ret
sub
shl
repz
sbb
mov
cmp
mov
adc
adc
arpl
sbb
enter
test
mov
pop
lock
xlat
ror
pop
inc
xchg
xchg
ret
sbb
push
jg
stos
pop
arpl
int
outsl
jbe
je
push
into
mov
gs
in
lret
xor
fs
sarb
jp
lahf
dec
jecxz
mov
cmc
add
xor
iret
fimull
pop
pop
inc
stos
jns
cs
cld
ficompl
idiv
mov
cmpsl
in
mov
xor
aam
popa
pop
ret
stc
xor
inc
mov
cs
mov
jmp
adc
mov
imul
fistps
mov
cwtl
das
arpl
sub
int3
xor
stc
add
pop
adc
cli
cmp
or
jne
jecxz
lods
insb
negb
add
xchg
jg
mov
popf
push
mov
mov
pop
adcb
fcmovnbe
mov
adc
stos
jecxz
jnp
cmp
push
adc
cli
imul
jno
das
mov
xchg
push
mov
pop
or
mov
int3
cs
push
adc
push
ljmp
xor
repz
lahf
in
sbb
adc
push
int3
jg
mov
adc
out
fldt
loop
mov
jbe
and
aaa
scas
xchg
sub
fld1
add
or
icebp
xor
loope
xor
mov
iret
add
enter
imul
cmp
xor
jg
jb
jge
icebp
lcall
shll
push
out
pusha
jge
and
sbb
imul
mov
cwtl
inc
or
rclb
hlt
adc
add
push
dec
xor
pop
leave
add
push
xchg
xchg
loop
adc
push
add
cwtl
sbb
add
data16
add
sahf
sahf
ret
push
dec
insl
adc
push
add
mov
aaa
mov
add
es
testb
test
es
add
sbb
jecxz
jmp
ret
push
out
or
add
leave
xor
pop
shrb
push
cmpsb
aas
aam
jne
adc
test
xchg
xchg
scas
xlat
out
insl
pop
sbb
cmc
jp
mov
sub
xchg
insl
push
mov
sti
jo
sub
push
js
push
push
and
sbb
les
push
push
mov
aaa
jge
stos
insb
mov
pop
push
es
test
add
dec
sub
mov
daa
push
and
pop
test
push
push
ljmp
mov
aam
or
xchg
or
repz
xor
sbb
xchg
mov
pop
push
or
add
pop
mov
adc
add
jg
dec
adc
inc
shll
ffreep
sbb
push
ret
push
iret
cmpl
pop
loopne
repz
mov
sub
lds
inc
loopne
out
lods
pushf
fildll
loopne
jns
or
dec
cli
jle
dec
loop
or
pop
adc
cwtl
idivl
adc
push
push
dec
inc
sub
mov
jne
cmc
les
mov
and
xchg
pop
sub
out
mov
xchg
pop
stos
fildl
pop
push
or
ds
jecxz
jle
push
test
add
dec
je
out
and
inc
rcrl
pop
mov
inc
aad
hlt
loope
add
xor
inc
xchg
ljmp
fcomps
push
sti
xchg
gs
push
loopne
inc
ja
push
push
lods
push
shlb
clc
movsl
lahf
xor
ret
xabort
popf
sbb
jg
jl
iret
dec
repz
add
push
pop
imul
cli
pop
sub
sub
xor
push
pop
or
sub
adc
mov
xor
call
mov
mov
add
mov
imul
jbe
stc
cmp
xor
aaa
adc
push
jle
pop
fcoml
mov
push
mov
imull
add
popf
shll
push
push
aam
jae
inc
sub
lods
jo
popa
xchg
add
sbb
hlt
mov
mov
call
mov
nop
mov
add
push
xchg
sbb
cmp
jns
mov
push
in
pop
into
pop
pop
in
in
loope
bound
cli
sbb
das
in
lods
xor
lds
je
push
push
inc
push
cmp
daa
and
push
popf
or
jae
or
jbe
fldl
addl
dec
adc
inc
add
xchg
jb
out
mov
lret
scas
inc
xchg
or
adc
fnstenv
hlt
imul
outsb
fisubs
mov
push
mov
xchg
daa
nop
stc
inc
mov
pushf
mov
dec
jecxz
ss
cmc
outsb
jle
and
mov
push
jnp
dec
adc
mov
test
in
sub
clc
or
jbe
icebp
xorl
lds
pop
sub
js
mov
lock
ja
daa
inc
xor
flds
or
cmpsl
out
jp
adc
aad
ficompl
adc
gs
push
dec
test
lcall
popf
cmp
fiadds
sahf
les
int
push
sti
mov
jae
lds
push
sub
loope
or
lea
or
mov
sub
jns
xor
dec
mov
cli
fwait
push
repnz
push
push
pop
xorb
sub
pop
inc
ljmp
add
mov
mov
add
pop
div
adc
fstl
jns
add
mov
and
mov
iret
xor
insb
sti
inc
call
and
pushf
mov
mov
scas
inc
mov
jns
cltd
xchg
out
cmovle
into
mov
inc
pause
sub
outsb
lods
scas
mov
mov
fisttps
adc
icebp
addr16
xor
jg
sub
push
rcr
stc
stos
and
cmp
adc
inc
jnp
mov
cwtl
test
mov
dec
pop
loop
jnp
nop
dec
push
jle
sub
dec
lahf
cs
and
scas
hlt
outsl
cli
ljmp
loope
pop
inc
negl
into
xchg
clc
out
mov
test
sbbb
cmp
cmpsl
lods
aam
sub
push
mov
push
push
ds
mov
add
lret
pop
mov
jb
dec
sti
or
mov
or
xchg
push
add
frstor
mov
subb
mov
jb
cld
call
test
sti
xor
ficomps
movsb
xchg
cmp
int3
les
mov
pop
je
fnstenv
call
inc
push
icebp
aam
stc
je
daa
dec
mov
mull
cli
cltd
add
test
aas
ficompl
mov
iret
mov
cmp
jmp
cmp
mov
ret
out
mov
cmp
push
and
or
mov
out
rclb
pop
mov
sahf
orl
mov
pop
stc
ror
movl
pop
adc
and
test
std
push
arpl
adc
cli
in
je
imul
xor
stos
outsl
aad
adc
cmp
test
dec
pushf
add
fs
repz
int
or
mov
pop
addr16
xor
and
mov
out
inc
cmpb
ret
mov
xor
push
push
sbb
subl
sub
cwtl
xchg
cmp
pop
push
xchg
lcall
inc
sub
add
mov
xchg
sarl
push
sarl
xor
cld
mov
aam
sbb
xchg
mov
cwtl
lret
mov
rorb
lret
imul
int3
dec
lods
popa
js
clc
out
adc
cltd
gs
nop
stc
push
pusha
fstpl
pop
repnz
dec
loop
int
inc
jbe
sahf
out
sbb
fisttpll
lods
mov
add
push
movsl
lds
cmpsb
lds
fcmovb
xchg
sub
push
mov
cli
inc
popl
es
push
mov
xchg
xchg
sub
popa
lret
sbb
out
out
or
bound
pop
xchg
inc
sub
mov
and
icebp
jae
pop
cmp
dec
and
xchg
mov
cltd
iret
push
sbb
jne
mov
adc
test
jo
inc
inc
sahf
push
push
movsl
insl
mov
sti
int3
sub
jne
bound
mov
mov
add
in
testl
pop
or
cltd
stos
aaa
xorl
or
int
cmc
mov
movsl
xchg
mov
inc
clc
es
inc
mov
xchg
repnz
xchg
ds
push
ljmp
rorl
stc
mov
into
or
mov
sub
in
mov
roll
push
cmp
xor
inc
mov
pop
mov
adc
mov
movsl
jb
aaa
imul
out
pop
insb
xor
rclb
repz
ja
mov
mov
shrl
rorb
das
negl
in
call
cld
push
ds
jmp
mov
call
xorb
and
xor
sti
dec
nop
pop
xor
fs
mov
sub
pop
inc
push
inc
divl
xor
sub
jle
jnp
ja
push
loop
outsl
push
mov
jae
sbb
clc
lret
jo
xchg
pop
mov
pop
mov
add
lcall
test
out
into
in
psubsw
or
aam
inc
cmp
shr
mov
stc
inc
mov
movsb
dec
lcall
fldl
cmp
repz
add
jbe
mov
out
ds
mov
clc
int3
push
out
rolb
test
adc
jns
add
inc
xchg
in
loopne
jg
mov
sbb
and
lock
and
mov
sbb
xchg
into
clc
into
cmp
popf
ljmp
pop
jns
test
outsl
add
mov
or
push
push
and
test
xorl
pop
xor
fisubl
enter
aas
push
aad
in
sar
pusha
and
and
stc
inc
cmp
in
rorl
out
pop
inc
mov
stos
cmp
pop
pop
mov
movsl
js
or
mov
xor
out
and
ss
fbstp
fwait
adc
adc
or
pop
push
cmpsb
jp
or
mov
outsb
jo
pop
xchg
ret
adc
out
adc
mov
mov
add
or
inc
pop
dec
test
jne,pt
mov
cmc
pop
lret
or
jge
testb
shrl
pushf
mov
push
dec
push
and
or
aad
loope
xchg
ret
testl
cmpsb
pushf
out
xor
aaa
and
stos
xchg
sbb
cli
movsl
sahf
mov
lret
aam
mov
cmp
adc
aaa
jo
mov
sbb
mov
push
shrl
rolb
popf
adc
push
movsb
jge
cmc
sub
pop
xor
xor
push
sarb
or
das
jge
movsl
push
jbe
adc
jp
lret
jp
lret
paddsb
mov
pusha
adc
or
jle
fldenv
dec
inc
jmp
arpl
cmp
cmc
or
or
jne
fsts
pop
sarl
sahf
hlt
enter
mov
call
adc
orl
xlat
adc
push
cmpsb
insl
test
cmpsb
jl
in
mov
int3
inc
stc
or
jmp
std
pop
ret
push
dec
mov
mov
inc
popf
fcmovnu
call
xchg
mov
lret
or
jp
xor
or
jp
arpl
fisttpl
cwtl
xchg
stc
adc
loop
lock
jg
lcall
or
dec
push
mov
mov
popf
shlb
insl
pop
addl
stc
jg
dec
push
mov
mov
insb
adc
mov
cmpsb
sub
lret
ljmp
insl
cli
imul
test
jb
ds
adc
insl
and
cld
jecxz
int3
mov
add
push
cli
push
sbb
mov
or
repz
shlb
sbb
pop
and
sub
xchg
out
fisubs
ror
or
jne
aaa
aaa
negb
pop
add
xchg
xchg
inc
push
fldcw
lcall
lret
repz
xchg
leave
ljmp
lret
push
dec
addr16
pop
or
fcoms
pop
push
repnz
cmp
xchg
xor
sub
and
add
add
jmp
inc
jmp
mov
sub
sbb
cwtl
inc
pop
mov
lods
add
jb
cmp
shr
lods
mov
jge
les
push
lock
out
mov
subl
add
imul
inc
xor
inc
int
stos
sbb
mov
sub
jbe
call
inc
loop
mov
mov
push
movsb
lcall
jp
fcomip
or
out
push
scas
in
mov
je
clc
das
mov
cmp
jge
xchg
adc
xor
loope
in
insb
std
xchg
dec
fcomps
xor
or
mov
fucomi
out
cli
testb
out
pop
push
mov
repnz
je
xchg
test
call
jl
int
push
mov
cwtl
mov
adc
pop
xlat
insb
xchg
and
push
int
outsb
cmpsb
call
xchg
inc
xor
rorl
jno
or
push
mov
jmp
or
jecxz
fs
pop
pop
lcall
mov
mov
aas
pop
xchg
mov
dec
xor
ret
cmpsl
mov
and
stos
xchg
adc
sub
aaa
and
fcomp
adc
int3
xchg
ret
mov
call
nop
aam
push
lea
xchg
loopne
inc
and
push
adc
ja
pop
xchg
call
mov
into
xchg
mov
sub
and
hlt
and
fildl
inc
leave
cmp
shl
les
mov
in
iret
out
adc
xchg
aas
and
mov
je
in
cmp
sub
shlb
xchg
int3
adc
push
mov
cmp
adc
imul
mov
cmp
enter
fisttpll
xchg
cli
in
call
push
or
sbb
call
push
ljmp
xorl
mov
xorl
fwait
not
cmp
jno
lret
ja
repz
cmp
out
pop
cmp
jmp
in
mov
or
sahf
mov
sahf
adc
pop
mov
clc
call
sbb
mov
push
mov
inc
movsb
sub
add
jbe
sub
test
packssdw
out
jle
lcall
push
imul
xchg
clc
mov
lods
mov
ss
xchg
test
or
xor
sub
insl
dec
mov
in
sbb
xor
cmp
mov
movsb
or
inc
call
sub
pop
loope
mov
cmpsl
lock
stos
pop
xchg
xor
xchg
loope
pop
pop
dec
xlat
or
repz
mov
push
mov
adc
mov
cmc
mul
daa
lahf
xchg
jnp
pop
lret
mov
push
jb
fcomi
cmpb
add
sbb
hlt
sarb
mov
leave
shll
imul
mov
daa
pop
xchg
outsl
jg
and
pop
loope
cmp
scas
loopnew
jecxz
and
jo
xchg
inc
data16
jo
jmp
stos
mov
or
and
in
in
add
fs
push
adc
in
popa
loop
sti
imul
out
cwtl
fcoml
pop
jle
and
and
pop
jle
jp
test
pop
test
in
lods
adc
xchg
cmp
shrl
les
iret
pop
inc
imul
or
lds
dec
ret
cmp
lret
mov
push
push
arpl
cmpsl
pop
dec
jmp
mov
or
jnp
or
rcll
push
mov
push
pop
pop
jns
xor
fistpl
jne
sub
fs
adc
ss
cmovl
jb
pop
stos
or
inc
dec
loopne
out
sub
push
pop
jge
movsl
cmp
cmp
fadds
out
bound
rcrl
mov
in
ja
and
mov
shl
push
popa
and
dec
push
ret
inc
in
cmpsb
lea
mov
loop
mov
cmp
jmp
inc
add
jnp,pn
leave
stc
cld
cmp
incb
fs
gs
push
out
out
aad
cmpb
inc
popa
adc
jb
jbe
in
cli
lea
rorb
dec
jge
cld
adcb
das
push
cmpsl
fisubrs
rcl
mulb
push
cmp
inc
loope
jge
ret
fwait
inc
outsb
shrl
lcall
sbb
push
inc
dec
sub
outsl
sti
cmp
cwtl
repnz
out
pop
push
cmp
arpl
dec
xor
xor
loop
xchg
pop
daa
jecxz
xchg
arpl
mov
push
pushf
inc
push
sbb
gs
testb
js
mov
and
xchg
es
mov
popa
std
or
rorl
test
and
jmp
imul
or
ss
loope
leavew
mov
mov
leave
loopne
or
fildll
je
sub
xchg
imul
jge
loopne
lret
outsl
mov
dec
sub
or
hlt
jle
sbb
fs
insb
xor
sub
lahf
insl
jns
cli
movsl
loope
jge
outsl
lret
cli
js
xchg
loope
pop
cmovge
xor
in
lret
shll
into
cltd
repz
mov
sub
fmuls
jmp
out
xchg
js,pn
xlat
cmp
pop
pop
jmp
pop
cli
pop
into
test
loope
mov
jl
mov
insl
and
cltd
cld
aas
xchg
outsb
adc
adc
sub
rcll
adc
sahf
pop
push
ss
adc
inc
push
aam
cmp
jp
stc
sbb
push
jl
aam
shl
loopne
jne
mov
imul
mov
sti
xchg
fimuls
aam
jl
jle
xor
inc
push
push
dec
outsl
sahf
sub
cli
jne
gs
inc
sub
insb
gs
ljmp
xchg
lahf
push
lds
shr
jb
xchg
push
mov
dec
ja
mov
push
cmpsb
jo
or
inc
inc
frstor
int3
xor
lock
fbstp
stos
cmpsb
mov
icebp
adc
mov
fbld
cmp
xor
lret
pop
loop
pop
xor
aas
rorb
divl
lods
dec
push
mov
lret
fisttps
add
inc
push
fisttpll
dec
rdpmc
mov
adc
stos
or
sub
ds
pop
adc
out
movsb
push
inc
inc
sbb
std
mov
mov
stos
cmp
arpl
sub
inc
cmp
sbb
mov
into
cmp
movsl
add
loopne
lret
xchg
imul
cmp
int
pop
dec
dec
lods
dec
test
dec
imul
and
sub
imul
jg,pn
cld
sub
pop
iret
jg
push
pop
or
loopne
adc
mov
fnstcw
jp
mov
xor
adc
inc
pop
adc
dec
mov
aam
ss
or
outsl
aam
stos
lret
jns
mov
sub
and
sub
rcr
fs
lods
mov
hlt
pop
add
pop
sbb
and
xchg
mov
mov
add
cwtl
adc
xchg
push
rcrb
cmp
xor
mov
es
inc
jae
sbb
inc
xchg
cmc
push
hlt
pop
pop
sub
dec
test
out
cmp
daa
sbb
push
add
xor
pop
and
fisttpll
sbb
push
xchg
jns
cmp
xchg
sbb
loope
xor
sti
or
cltd
sbb
push
clc
fidivrl
repnz
popa
mov
pop
push
das
adc
and
inc
jbe
mov
into
cli
idivb
into
out
jle
mov
insl
and
or
xchg
xchg
int3
cmp
iret
pop
rclb
rolb
xor
cmp
wbinvd
scas
sbb
lcall
mov
out
in
or
sbb
dec
mov
and
add
sub
outsl
mov
add
and
sbb
push
mov
pavgw
or
shrb
or
or
int
fs
or
cltd
out
mov
inc
dec
push
rolb
scas
mov
aas
dec
push
leave
mov
fwait
cld
push
mov
data16
popa
sahf
jecxz
aas
fs
sahf
xchg
cmp
mov
push
sbb
test
xrelease
cmp
cmp
movl
xlat
loop
ficoms
jb
mov
dec
xor
pop
pop
hlt
mov
mov
pop
jbe
dec
xchg
xchg
fsubrs
mov
in
rcrl
and
imul
nop
int
lcall
fidivs
sbb
and
push
roll
ds
shl
call
sub
adc
xchg
fcmove
inc
push
into
push
xor
inc
mov
insb
pop
lret
lods
inc
mov
jnp
pop
jnp
int
stc
mov
push
out
fsts
iret
or
int3
mov
xchg
push
push
ds
push
add
jle
xchg
aas
fmull
mov
cltd
mov
movsl
into
cmp
lds
sbb
in
adc
mov
stos
mov
repnz
xchg
adc
int3
cmp
lahf
mov
adc
mov
add
mov
mov
add
jmp
sub
repz
lock
aas
adc
mov
int3
add
fmul
sbb
loop
pushf
xchg
sarl
ss
mov
in
push
cmp
cld
add
cwtl
out
xchg
adc
inc
fildl
mov
mul
cli
push
push
push
js
out
sub
or
pop
mov
stos
pop
ds
hlt
aad
xor
insl
adc
test
mov
idivb
int
push
mov
dec
pop
out
insb
mov
cmp
insl
push
push
fcoml
cmp
pop
xchg
ds
lahf
in
iret
pop
fistpll
das
sub
sbb
push
pop
out
xchg
lcall
ds
jge
cmp
cltd
repnz
dec
adc
jno
cmpsl
inc
add
pop
inc
mov
les
dec
push
fcompl
aad
push
ret
pop
mov
push
inc
sub
ja
cmp
add
decl
je
xchg
sti
pop
push
push
in
and
inc
ret
loop
xchg
hlt
sti
stc
sub
out
add
cli
jnp
jnp
mov
sar
outsl
nop
cmovg
shlb
fmuls
mov
movsl
and
push
testb
pop
testl
add
lcall
xchg
ljmp
mov
jmp
inc
add
inc
lock
enter
rcr
xchg
jae
fidivs
loop
mov
push
lahf
imul
adc
or
enter
pop
and
cmp
cld
jne
pop
mov
add
push
dec
xor
mov
xchg
fadds
jg
sub
loop
out
push
jo
dec
aam
les
or
inc
je
inc
jnp
fst
push
out
js
adc
xor
stos
out
arpl
popa
jae
test
push
scas
loope
xchg
das
cmpsb
xor
cmp
fs
inc
add
cmp
jmp
push
insl
cmp
popf
jo
arpl
jb
jns
mov
pop
dec
sbb
mov
inc
shrb
adc
xchg
dec
int3
and
push
loopne
lods
xchg
push
jp
jmp
sbb
pop
popf
out
fidivl
mov
mov
pop
fdivl
dec
rcl
mov
rolb
xchg
es
mov
imul
ds
out
daa
lods
mov
adcl
mov
std
adc
sti
sahf
std
ljmp
mov
cmp
lret
pop
pop
mov
aaa
inc
pop
add
sbb
xchg
mov
push
popa
and
adc
and
or
and
jmp
push
dec
dec
push
cmp
and
aam
test
dec
cmp
mov
fs
in
imul
pop
call
sub
lcall
mov
gs
mov
sub
push
add
sub
shr
xchg
cs
jbe
ret
jae
jne
ror
aam
sub
or
imul
sub
je
ja
orl
pop
mov
adc
mov
inc
dec
add
sar
dec
inc
adc
jne
loop
std
lret
leave
lea
das
push
sbb
xchg
mov
jb
cltd
aas
push
std
push
add
xor
xbegin
shlb
sub
or
adc
ret
jae
and
pop
loopne
xor
leave
xlat
ljmp
addl
sub
jle
jae
add
cli
pop
adc
into
sbb
fnstsw
lods
insb
hlt
aam
lret
ss
shr
lods
mov
dec
dec
ja
and
pop
addr16
ret
shlb
and
or
mov
mov
into
test
xchg
pusha
sti
in
sub
aad
add
fwait
je
mov
inc
xor
stos
cmp
sbb
mov
jo
mov
pop
push
sub
push
scas
sarb
dec
scas
scas
fsubrl
or
hlt
pop
lret
loop
mov
xchg
cmp
push
cmpsl
adc
add
adc
inc
mov
add
test
adc
pop
cmp
ret
arpl
fistl
dec
gs
mov
cld
or
repnz
adc
cmpsb
sbb
inc
pop
cmpsb
xchg
adc
inc
sarb
and
push
mov
pop
enter
push
and
shlb
mov
add
add
fbstp
decl
adc
mov
add
xor
inc
jl
ds
jg
lret
addl
or
std
inc
jne
out
mov
aad
andl
ds
iret
in
repnz
and
popf
cmpsb
cmp
scas
aaa
dec
xchg
in
jae
loopne
lods
adc
mov
inc
jnp
add
xchg
std
pop
jg
stc
pop
jne
ret
cmpsb
fs
test
test
std
imul
imul
jns
leave
dec
or
fbld
pop
lods
inc
mov
outsl
mov
cmp
add
sbb
mov
loopne
sub
pop
sbb
ljmp
aas
ret
lods
call
xchg
imul
daa
cmpsb
gs
xchg
mov
movsb
out
fs
lahf
xchg
gs
out
call
cmp
mov
stos
rorb
je
mov
inc
sarl
dec
idivl
ffree
mov
push
int
mov
movsb
mov
and
dec
sbb
or
xor
pop
notl
mov
aaa
fwait
stc
mov
cmp
push
divl
pop
in
xor
jns
aad
dec
sub
cmp
mov
cmova
fs
push
xor
and
insb
sbb
pop
cmpl
jge
xlat
xchg
out
lods
call
or
inc
outsl
clc
jo
xchg
jge
sahf
xchg
dec
inc
inc
mov
call
jns
loope
fwait
popf
lods
rcrb
xchg
mov
adc
loop
dec
xchg
aam
pop
inc
fdivr
dec
push
jbe
les
pushf
add
xor
jnp
xchg
inc
stos
scas
push
arpl
jae
jbe
pusha
pop
in
mov
shrw
mov
pop
sbb
into
movsb
sarb
mov
lds
cmp
pushf
aas
scas
icebp
sub
push
jnp
imul
push
rclb
lahf
call
les
and
in
or
add
push
pop
shrl
aad
or
dec
subb
mov
loopne
std
and
int
dec
fwait
push
out
fcoms
movsb
sbbl
out
call
jmp
cmpsl
pop
jnp
cmc
outsl
and
scas
ret
cs
decb
adc
push
in
xchg
and
inc
jl
loopne
or
jle
decb
pop
cltd
jp
xchg
outsl
xor
imul
test
jmp
cmpb
je
mov
and
jp
ds
cli
ret
add
in
scas
data16
in
movsb
sbb
inc
test
cmp
aam
xlat
dec
sbb
rclb
jge
push
pop
xchg
inc
push
pop
bound
and
mov
xchg
les
add
jbe
hlt
adc
bound
lock
pop
lods
jecxz
cmc
test
xor
cs
push
test
lcall
imul
movsb
add
mov
inc
js
cltd
insw
sub
lret
jp
jmp
sahf
lds
dec
jb
push
int3
frstor
mov
sbb
dec
rcll
call
mov
pop
outsl
mov
popf
push
jne
mov
push
lret
jecxz
je
or
jno
faddl
mov
mov
jne
fildll
push
or
loopne
lret
dec
push
xchg
aas
jle
cli
repnz
aam
das
aad
gs
cmp
inc
es
cmc
xor
adc
pop
je
add
lea
or
inc
arpl
sar
push
mov
dec
rolb
xor
mov
addr16
fcomi
subl
lods
jg
fiadds
xchg
adc
mov
cmp
sub
cmp
lods
icebp
xlat
add
pop
mov
pushf
jmp
loope
sub
rcrl
mov
lock
es
xor
adc
and
cmp
rorl
or
dec
lret
lea
clc
sahf
mov
jmp
mulb
xchg
ret
cli
or
movsl
call
test
outsb
popf
int
loop
lahf
fmuls
cmp
mov
jb
incl
fistpll
add
mov
imul
xchg
xor
or
jmp
test
sahf
mov
cltd
adc
nop
add
out
cmp
mov
ror
pop
and
xchg
fadds
inc
ficoms
imul
inc
lret
push
jbe
cli
jg
xchg
push
out
dec
repz
ja
jne
scas
out
sbb
cmp
inc
add
sbb
sarl
loopne
js
inc
stos
sub
clc
push
push
adc
pop
mov
cmp
les
js
loopne
sub
lods
inc
das
inc
mov
pusha
pusha
dec
int3
shrb
mov
pushl
xchg
jecxz
dec
inc
inc
dec
push
jne
push
insl
scas
and
add
cmpsb
adc
int3
inc
dec
and
fstps
addr16
scas
shlb
pop
lds
xchg
and
fldcw
mov
jae
push
pop
mov
fsubr
xor
push
push
int
jl
adc
and
out
jle
xlat
jmp
or
in
sub
xchg
push
gs
pop
and
imul
pop
scas
cwtl
xor
out
xor
rcrl
add
jnp
sbb
sub
aaa
pop
jmp
call
mov
sub
in
sarb
loope
sbbl
data16
dec
lods
cmp
xchg
mov
sahf
stos
test
push
cwtl
out
adc
cs
cs
clc
mov
imul
inc
dec
cli
or
test
and
mov
enter
in
lock
cmp
xchg
mov
jne
or
cmp
inc
mov
outsb
inc
jl
je
and
rclb
fucomp
and
mov
outsb
scas
mov
xchg
sbb
mov
out
iret
call
dec
inc
icebp
pop
test
jle
lds
and
iret
xchg
repnz
mov
aad
fmul
out
cwtl
clc
jnp
push
sbb
lahf
std
lods
ljmp
pop
jnp
dec
push
jp
call
jmp
jae
mov
jecxz
fisubl
mov
scas
mov
push
pushf
iret
pop
stos
sbb
std
test
int3
jmp
fldenv
xchg
push
sbb
lods
push
sub
mov
adc
das
cwtl
js
in
xchg
and
int3
popf
call
adc
pop
mov
test
cli
mov
out
faddl
xchg
test
lahf
mov
sbb
or
leave
std
xchg
jmp
adc
cmp
or
xchg
in
les
xor
sub
andb
cmpsl
lods
mov
cld
outsl
enter
push
shll
lods
aad
jne
shl
mov
mov
lcall
mov
jae
into
sbb
ret
adc
mov
or
cmpsb
hlt
jae
pushf
pop
mov
xor
adc
jns
add
push
xlat
iret
add
push
cld
mov
pop
stos
xor
popl
jb
add
mov
iret
xchg
jo
lret
xchg
stc
orl
cltd
arpl
into
addr16
sub
je
pop
lock
stos
out
jmp
loopne
sbb
xchg
mov
test
addl
imul
lret
cs
sub
int3
push
nop
cmp
mov
sub
test
aad
mov
int
cs
shrl
mov
jae
pop
ret
jmp
cmp
loope
mov
imul
in
mov
pusha
mul
and
mov
das
enter
movsb
cmp
adc
ss
mov
xchg
xor
xlat
pop
xchg
out
dec
inc
fcmovb
cmp
and
in
jecxz
ficompl
cmp
pop
mov
andb
rolb
aaa
cld
dec
sub
push
and
outsl
testl
adc
cmpsl
in
mov
pop
addl
mov
sbb
dec
hlt
jo
pop
mov
lret
pop
cmc
pop
loopne
add
push
test
cmp
mov
call
inc
jae
cmpb
sbb
jmp
sub
repz
lock
sbb
popf
test
xchg
leave
cmc
addl
lds
pop
mov
test
sub
pop
lds
jne
dec
mov
lods
xchg
add
es
or
das
dec
push
xchg
scas
push
cmp
push
movsl
outsb
aas
cld
arpl
mov
mov
sarb
push
cmp
mov
pushf
gs
xchg
ret
jecxz
add
dec
push
popf
pop
sub
bound
pop
xlat
push
sbbb
jge
mov
xchg
fcompl
rorl
mov
lds
mov
xchg
frstor
sub
std
xchg
pop
adc
and
dec
or
or
sub
aad
xchg
add
mov
stos
push
xor
sti
test
push
dec
mov
adc
or
ja
fildll
xchg
push
cmpsl
dec
and
loop
cmp
iret
int
into
xor
jbe
push
out
mov
pop
sbb
ret
adc
or
in
mov
and
std
push
mov
mov
mov
sti
in
jecxz
inc
repnz
mov
adc
sbb
add
fldl
mov
cmp
sbb
and
rcr
gs
pop
cltd
ret
les
in
push
push
pusha
aaa
mov
push
stc
inc
add
sbb
and
sub
adc
mov
fsubrs
outsb
rclb
in
scas
jnp
faddl
pop
sub
fucom
xchg
test
rol
dec
xor
adc
push
popa
into
rcrb
rclb
push
popf
andl
rorl
and
out
dec
rcr
lds
lods
js
test
xchg
add
ds
adc
push
inc
iret
jp
adc
lcall
in
pop
push
mov
std
mov
loope
lret
or
mov
dec
and
mov
pop
insb
rolb
cli
mov
mov
sti
push
and
pop
push
int
and
add
jmp
mov
adc
notl
in
pushf
jnp
xor
fidivl
inc
fistps
in
shl
xor
rclb
or
inc
out
or
lods
out
adc
test
inc
cmp
pop
pop
xchg
scas
cmpsb
int
mov
addr16
mov
adc
mov
mov
jne
push
jecxz
sti
insl
jg
inc
sub
jmp
lcall
sub
test
test
out
pop
adc
or
or
and
xor
cmpb
paddd
dec
out
inc
iret
dec
jecxz
mov
pop
inc
nop
aam
mov
iret
mov
mov
and
mov
sub
sub
jl
xor
mov
fs
mov
inc
fldl
test
dec
mov
dec
aad
fcoms
adc
scas
pop
xlat
mov
repz
addr16
sbb
mov
xorb
sbb
or
cld
arpl
fsubrs
notl
cmp
sbb
or
les
pop
aas
jnp
es
shl
pop
dec
data16
push
shl
jo
mov
loopne
mov
adc
out
lret
test
in
mov
insb
dec
mov
mov
inc
dec
aam
outsl
mov
lds
cmc
push
in
sub
popa
xor
aas
arpl
movsl
rcrl
lret
shl
shr
inc
adc
push
je
xchg
icebp
add
or
inc
movsl
push
mov
inc
pop
in
cmpb
add
mov
xorl
and
push
cmpsb
out
fisubrl
ljmp
inc
daa
pop
mov
ja
data16
mov
xchg
in
movsb
icebp
cmp
ficompl
ret
cwtl
orb
jecxz
loope
mov
rorl
mov
test
push
stc
int
mov
jge
lret
cmp
xchg
lods
bound
mov
xchg
xchg
or
pushf
mov
stos
inc
mov
leave
mov
xchg
mov
imul
push
pop
jp
mov
xchg
mov
scas
faddl
popa
cmp
jg
fnsave
aaa
test
add
mov
jl
and
xchg
mov
xchg
xor
sub
push
adc
lret
ja
push
pop
cs
mov
sub
sarb
mov
mov
jno
fxtract
sub
cmpsb
out
push
lret
push
inc
xchg
push
pusha
pushf
push
in
gs
imul
test
idivl
out
subl
xor
cmc
imul
out
jns
mov
lock
hlt
pusha
xchg
ror
std
push
inc
dec
sar
sbb
xor
shl
add
mov
cmp
dec
cmp
push
fists
in
inc
das
test
adc
mov
xor
jl
xchg
pop
insl
jae
das
repnz
inc
push
in
mov
adc
aad
xor
cmp
loopne
cmpsb
sbb
stos
pop
mov
pop
ret
dec
mov
dec
nop
sub
or
xchg
xor
jbe
and
leave
cmp
and
mov
enter
xor
xchg
mov
adcl
in
repz
lret
ret
je
mov
mov
lods
mov
in
mov
int3
std
xchg
xchg
pop
jge
scas
aad
sub
mov
mov
sub
mov
xchg
jne
in
push
inc
or
mov
movsl
div
hlt
aad
jns
push
mov
aad
jmp
testb
inc
sub
stc
push
push
xchg
in
sub
icebp
callw
xchg
inc
inc
add
add
sbb
push
or
jnp
adc
push
orb
adc
adc
lock
jns
in
dec
inc
lret
sub
pushf
dec
inc
loope
mov
cmp
jp
sbb
pop
mov
jmp
addr16
mov
dec
daa
vmread
mov
jmp
mov
or
or
and
xchg
mov
loopne
sbb
dec
movsl
pop
push
movl
jae
arpl
mov
in
add
pop
mov
pop
movsl
xchg
das
jmp
shl
aam
mov
xor
das
inc
clts
sub
sub
sahf
jecxz
pop
and
test
mov
mov
pop
js
add
mov
push
inc
cld
in
loope
and
xor
inc
subb
fistl
jmp
sti
mov
rcl
icebp
or
popf
mov
mov
in
in
daa
push
and
stos
mov
or
lods
test
leave
cld
jg
mov
idiv
push
scas
inc
add
push
shlb
es
or
enter
movsb
stc
sub
loope
repz
push
addb
inc
fsubrl
sub
pop
in
movsl
cli
jbe
dec
sbb
leave
lahf
xor
repz
inc
jne
sbb
adc
aad
mov
cs
sub
sub
enter
sarb
frstor
ljmp
push
clc
pop
je
or
jl
or
mov
lods
inc
sbb
cmovnp
or
stc
jns
and
call
ss
insb
cmpsl
xor
popf
into
jmp
lret
fsubrs
test
adc
jl
sub
pusha
addr16
imul
iret
push
add
js
imull
jl
adc
pop
std
leave
test
or
cwtl
jge,pt
push
dec
lahf
jae
inc
and
aas
les
mov
mov
mov
sub
xchg
push
pop
and
or
scas
cmpsl
jae
lahf
pushf
jne
dec
jl
inc
jbe
xchg
mov
mov
stc
dec
sbb
sub
fstpl
fists
sub
inc
jno
insl
ss
stc
push
iret
dec
lcall
push
mov
lods
out
fisubl
pop
lock
shrl
stos
mov
add
jmp
mov
fimuls
jle
sub
inc
dec
mov
or
mov
je
pop
mov
push
ret
movsl
mov
dec
out
cmp
push
into
test
pop
add
clc
mov
popa
lds
sbb
sub
push
xor
mov
inc
add
imul
mov
aaa
mov
mov
jo
add
scas
fucomip
pop
sbb
fisubrs
scas
mov
movb
ja
stos
mov
adc
ret
sub
ficompl
orb
mov
stos
sbb
arpl
sarl
dec
fisttpl
mov
lret
mov
lcall
je
push
adc
lcallw
mov
in
nop
adc
aad
xor
sbb
sub
loop
inc
mov
jle
fistpl
and
aaa
das
and
mov
push
scas
lret
sub
rcrb
sub
mov
outsl
inc
test
cmc
xchg
xchg
mov
lea
test
mov
lds
cmp
jp
nop
xor
ret
mov
stc
xchg
push
dec
mov
clc
xorb
sti
mov
cmc
rcrb
notb
shll
xchg
jecxz
adc
das
dec
jae
and
push
cmp
jecxz
mov
pop
adc
je
push
xchg
jmp
cmpsl
fimull
pusha
loop
daa
lods
cs
xchg
xor
pop
lods
xor
mov
lds
aam
dec
mov
push
cmp
mov
js
mov
sbb
pop
jne
inc
popa
les
xchg
sti
test
push
daa
xor
cld
or
lods
arpl
shlb
out
inc
xchg
push
movsl
mov
ret
iret
out
popa
ss
mov
outsl
mov
mov
outsb
mov
sahf
lock
repnz
aaa
movsl
push
subb
stos
jl
jge
ljmp
pop
push
setg
dec
stos
dec
push
sti
gs
push
xor
test
ja
xchg
add
outsl
jb
pushf
jecxz
jno
out
or
mov
sti
mov
push
icebp
filds
pop
mov
into
mov
lock
jns
sub
popa
adc
testl
xchg
icebp
nop
push
and
xor
lods
jb
push
ds
push
mov
js
popa
out
popa
scas
jns
mov
adc
mov
test
repz
daa
xchg
rorb
rcr
pusha
cmp
add
mov
xor
xchg
fisttpl
jmp
subb
jae
pop
sub
push
sub
ja
test
mov
je
push
ret
pop
pop
pushf
lahf
js
dec
daa
jl
rcll
les
add
int3
adc
mov
or
fistpll
sub
jmp
pop
fnstcw
subb
icebp
enter
mov
jecxz
mov
adc
xchg
sti
push
jle
mov
jle
add
and
ficoml
mov
jmp
int3
xor
inc
gs
adc
nop
nop
and
push
mov
ja
jmp
int
fucomi
loopne
pop
sub
mov
jae
lock
push
mov
mov
out
ds
and
int
aam
xor
mov
arpl
aas
pop
out
gs
jb
cmpb
push
test
rolb
arpl
cli
ljmp
ljmp
js
dec
or
and
mov
xchg
cwtl
jg
enter
je
addr16
sbb
sub
jg
dec
dec
mov
dec
movsl
xchg
adc
das
es
mov
cmpsb
pop
and
sub
daa
stc
xchg
stos
push
and
in
mov
scas
and
mov
imul
and
popa
mov
ljmp
mov
aas
pop
lea
sbbb
jae
push
jmp
and
mov
les
add
and
jno
loopne
fwait
insl
or
mov
adcl
xchg
hlt
mov
ret
pop
std
mov
cmp
cmp
cmpsb
test
cmp
stc
mov
test
insl
xchg
mov
je
ret
fiaddl
enter
lods
adc
adc
jge
sti
aas
or
pop
outsl
lret
std
mov
bswap
pop
add
xor
into
or
push
inc
fimuls
and
cs
loopne
cmc
mov
mov
fwait
hlt
clc
lcall
aaa
mov
mov
int
lds
or
dec
xchg
test
bound
shrl
das
mov
imul
push
adc
xchg
or
mov
int3
je
push
push
sub
push
fs
rcll
mov
rclb
out
dec
jne
test
jbe
out
dec
clc
in
add
push
mov
movsb
lret
dec
movsb
mov
shlb
cs
dec
imulb
jecxz
add
adc
sbb
in
jno
insl
test
data16
sbb
adc
jl
xor
dec
mov
dec
popf
mov
popa
inc
jecxz
sub
lods
add
jg
pop
aaa
aad
stos
loop
stc
jmp
mov
cli
sbb
movsl
inc
push
iret
push
push
into
flds
xchg
cmpl
ss
dec
cltd
jb
inc
lds
roll
mulb
xor
imul
mov
addr16
or
xor
fnstsw
orl
pop
int3
and
aaa
adc
shrl
fbstp
repz
ja
sub
outsb
xchg
add
mov
insb
pop
mov
mov
dec
xchg
cmpsl
xlat
into
or
jae
cli
int
jns
jns
jbe
jecxz
or
subl
jecxz
divb
std
mov
cmpsb
and
dec
popa
je
adc
xor
pop
push
push
mov
dec
xchg
mov
pop
adc
fcom
pusha
stos
jg
push
dec
push
shlb
lret
push
mov
sub
fs
jnp
xchg
mov
mov
in
and
and
dec
dec
lock
test
push
mov
jno
pop
arpl
push
cmpsb
mov
cmp
mov
out
cmp
dec
jmp
mul
cmp
xchg
sub
mov
xor
jb
out
push
jo
add
jnp
movl
jmp
or
jo
or
lods
loope
repz
jno
mov
nop
out
call
mov
dec
mov
lock
lods
pop
jnp
mov
test
inc
cltd
and
add
push
dec
out
cltd
pop
ficompl
and
push
mov
cld
enter
sbb
ja
push
push
and
bound
cmp
jecxz
pop
lea
and
aam
cmp
push
outsl
dec
mov
xchg
loopne
mov
ds
xchg
repz
lahf
sarb
mov
sar
jmp
jl
mov
repnz
sub
ret
mov
es
cmp
aas
jg
pop
mov
pop
lahf
lock
movsl
test
ja
jecxz
inc
xor
inc
ss
insl
sub
nop
xchg
in
mov
cwtl
imul
adc
push
std
inc
and
dec
rcl
push
das
sti
daa
cltd
js
dec
push
sub
jge
sarl
loopne
jo
rcll
sbb
jae
cmpsl
cltd
sbb
mulb
jmp
pop
dec
adc
cmc
jo
add
stos
cmp
mov
or
push
out
mov
sbb
sbb
cmp
pop
testl
xor
and
stos
mov
fs
shl
mov
lret
in
mov
add
rcrl
scas
cmpsb
sub
cli
lods
into
xorl
enter
or
pop
arpl
inc
mov
outsl
fs
sub
test
ficoms
push
and
mov
sti
in
mov
jecxz
addl
add
jg
push
sbb
mov
ss
in
pop
xor
inc
push
pop
or
es
inc
cmp
dec
cmp
cmp
inc
inc
ds
sbb
cmp
mov
ret
rcrl
mov
leave
in
sbb
fstpl
repnz
les
in
fidivrs
and
and
aaa
arpl
ljmp
and
jmp
mov
jp
push
cmp
popf
mov
scas
sub
pop
pop
leave
popf
sbb
push
lods
rorb
push
and
ds
dec
adc
inc
jmp
or
movzwl
xchg
mov
push
fsubl
xchg
jae
mov
pop
mov
dec
pushf
pop
inc
repz
adc
insl
jg
divl
and
out
xor
rcrb
jbe
inc
rclb
xchg
test
ss
xchg
imul
xchg
mov
add
ss
adc
sub
aad
cmp
mov
xor
xchg
clc
xorb
and
jbe
cmpsb
fisubs
jb
push
int3
sub
mov
ds
mov
mov
dec
sub
int3
into
shlb
sti
xor
or
sub
imul
jg
cmp
jle
xor
pop
dec
js
adc
mov
add
fwait
jne
out
sub
push
mov
decl
push
and
cmp
subl
addl
aas
bound
mov
jno
xor
cwtl
roll
popa
pop
in
or
mov
mov
sub
cltd
jo
scas
add
pop
pop
mov
scas
shlb
scas
cmp
inc
add
or
insl
jmp
sbb
and
cmpsl
cs
test
xor
or
push
in
xchg
add
xor
cmp
enter
cmp
push
imul
notb
fcomp
testb
cwtl
repnz
and
test
aaa
jl
pop
inc
adc
push
jae,pn
jle
out
sbb
and
dec
lret
cmovo
sbb
enter
js
mov
push
inc
out
addb
add
mov
sub
ds
jae
sbb
pop
repz
xchg
out
sti
je
imul
out
add
fwait
dec
sbb
jmp
xchg
ja
sbb
adc
mov
mov
or
xor
test
out
jns
cmp
jbe
int
add
add
imul
rclb
pop
enter
jecxz
out
jg
xchg
lret
in
sahf
fs
sbb
jmp
stos
adc
dec
lret
enter
divb
arpl
outsl
pop
sub
mov
jb
aam
push
push
sbb
aas
dec
roll
cmp
cmp
jno
xchg
les
sbb
add
pop
loop
sar
jp
shl
jmp
mov
stos
pop
ljmp
cmp
fldcw
sti
pop
or
mov
cmpsl
xchg
jp
or
js
popa
icebp
inc
scas
cmpsl
in
xor
mov
lcall
out
sbb
mov
xchg
pushf
imul
sub
ret
or
stc
aad
pop
push
les
lods
fstpl
mov
les
test
icebp
mov
fmul
mov
cmp
adc
ret
repz
js
push
fbld
xor
jle
add
push
iret
xor
mov
cli
and
lock
int3
push
or
xor
add
scas
push
dec
test
jno
pop
fmuls
jp
cmp
push
mov
js
mov
cmpsb
or
ljmp
xchg
dec
sti
in
loope
outsl
inc
in
ss
adc
mov
jno
fiaddl
cmp
sahf
cmp
cltd
test
xor
bswap
cmpb
push
sub
mov
sub
mov
out
sbb
fldt
sbb
jge
fwait
or
sti
push
aam
loop
repz
cli
stos
jnp
mov
inc
dec
shlb
test
pop
shrb
pop
lods
stos
xor
iret
push
adc
sbb
call
mov
and
jno
lock
outsl
pop
pop
jo
in
out
xchg
pop
jb
frstor
adc
mov
mov
test
lock
pusha
jne
mov
pushf
inc
xchg
mov
lds
into
aad
xor
cmp
in
jecxz
aaa
fstps
je
shlb
jg
outsl
fisubrs
sahf
mov
shl
call
nop
leave
enter
mov
outsb
xchg
es
cmp
mov
dec
lret
mov
fdivrp
sbb
dec
pop
jb
std
or
decb
popf
icebp
and
popf
push
jne
adc
adc
mov
shl
rclb
and
les
push
lret
bnd
fimull
push
jge
fcoms
inc
insb
outsb
jno
mov
sub
pushf
mov
push
aad
sbb
push
xchg
repz
pop
inc
cmpsb
daa
sub
insb
cld
imul
xor
xchg
jno
outsl
or
cmp
xadd
sub
movsl
mov
pop
lahf
sahf
pop
loopne
sbb
mov
inc
mov
testl
aas
incl
shrl
xchg
and
lock
pop
push
mov
dec
jne
sbb
inc
jecxz
cmp
movsb
push
sar
cmp
rcrb
outsl
mov
sub
push
inc
lock
mov
dec
add
mov
ljmp
lahf
add
mov
imul
insl
into
out
cmpsb
cmpsl
daa
cltd
out
xchg
xchg
pop
dec
ss
leave
inc
jmp
jge
das
shll
mov
mov
adc
jmp
ja
push
mov
add
notl
aas
aaa
push
add
adc
std
repnz
nop
fldcw
aas
enter
jo
cli
xchg
dec
inc
sub
add
sbb
mov
popa
cmp
test
push
jl
or
jmp
js
adc
jmp
sbb
sbb
jmp
jne
cmc
divl
cli
mov
jno
sbb
xchg
mov
test
fstpt
mov
push
pop
mov
stos
shrb
inc
mov
dec
adc
push
inc
dec
icebp
js
subl
jp
sub
popa
cli
scas
iret
pushl
dec
xchg
or
jae
push
adc
outsb
in
mov
fmull
iret
mov
cmp
lea
jbe
pop
cs
xor
xchg
out
lods
adc
sub
mov
push
or
jmp
push
and
xor
jae
lcall
xor
cltd
roll
or
divl
sub
cmp
data16
push
fmull
push
mov
xchg
xor
fcoms
cwtl
jp
sbb
mov
outsl
cmp
mov
jl
lds
test
and
bound
and
mov
push
adc
jecxz
push
sub
iret
mov
mov
sbb
in
test
bound
je
dec
sbb
movsb
jo
sbb
cmc
adc
stc
aas
jo
mov
inc
mov
mov
loope
rep
mov
mov
cs
xor
pushf
imul
negb
test
xor
das
mov
ret
shl
sub
in
sbb
and
icebp
imul
sub
mov
cltd
mov
testb
push
dec
jnp
push
pop
outsb
decb
movsb
jp
cmp
cmp
push
cmp
jp
xchg
mov
pop
inc
out
insb
push
test
andb
movsl
aad
jmp
adc
insb
mov
addl
lret
dec
aas
mov
sbb
idivl
or
sbb
sahf
dec
push
mov
shrl
fcomip
les
data16
shrl
sbb
insl
in
arpl
int3
add
insb
add
pop
adc
mov
pop
push
dec
dec
jno
push
leave
mov
pop
push
dec
and
fwait
rolb
lcall
jl
lahf
cs
jmp
sbb
push
jecxz
das
cli
mov
pop
cmp
lea
lcall
inc
mov
jbe
movsb
aam
xchg
add
lcall
iret
pop
push
test
add
mov
mov
push
mov
aas
fisttps
push
movsl
pushf
aad
mov
fcomps
adc
pop
test
pop
xchg
ja
cmp
jp
xchg
popa
mov
fsubs
add
pop
mov
cmp
out
mov
push
cmp
test
or
or
leave
and
mov
jno
mov
jae
out
insl
aas
xlat
jge
add
das
je
push
nop
popf
stos
xchg
das
into
sahf
test
jge
stos
and
scas
push
mov
and
sbb
movsb
into
mov
cli
test
cwtl
stos
add
add
subb
cmp
int
sbb
xor
fisttpl
popf
add
test
int3
repnz
push
cmp
bound
int3
inc
xchg
aaa
lret
sbb
sbb
jmp
push
mov
addr16
scas
imul
fstpl
pop
cli
aaa
imul
push
cmp
dec
cmpsb
jmp
repz
inc
popf
or
jo
out
mov
pop
cmp
push
pop
lea
dec
lcall
xchg
fcomp
mov
popl
scas
or
cld
add
pop
or
adc
cmpsl
aam
lea
add
mov
fsubl
push
leave
xchg
add
mov
inc
push
popf
cli
jns
xchg
repnz
dec
int3
mov
jp
inc
movsb
jp
push
pop
jo
jnp
or
scas
mov
dec
mov
inc
outsl
xchg
sbb
scas
adc
cmp
cmp
pop
in
pop
jp
cs
mov
lahf
divl
mov
xor
xchg
pop
ss
pushf
mov
mov
lea
into
xchg
push
mov
pop
mov
xlat
xor
in
mov
cmpsb
dec
outsl
xor
out
insb
jno
je
sti
repnz
inc
xchg
adc
pop
not
aaa
dec
jge
or
push
push
jb
das
rolb
ljmp
icebp
test
cmp
fadd
cmp
jg
stos
test
push
arpl
test
mov
and
dec
pusha
add
and
imul
jle
pop
mov
sbb
das
push
cs
push
push
fildll
sub
xchg
test
push
push
sbb
mov
fnsave
mov
std
es
icebp
pop
jp
pop
ds
lcall
mov
xor
jle
jp
in
test
xchg
xor
jge
pop
mov
data16
pop
sbb
imul
scas
aas
popa
or
scas
dec
mov
rcll
push
rcrb
or
loope
mov
outsb
stc
cmpb
mov
mov
hlt
lods
mov
mov
pop
les
fidivs
cmc
subb
scas
roll
xor
dec
lret
jge
push
call
clc
jae
scas
jp
add
adc
add
cmp
movl
jl
jb
sbbb
or
mov
push
filds
test
orl
add
push
jns
fbstp
cltd
lock
rdpmc
adc
aad
and
and
ficompl
xchg
xchg
jp
std
pop
sti
sub
insb
outsl
cwtl
fdivl
pop
jbe
outsl
push
jae
outsl
dec
in
dec
mov
gs
jecxz
lock
push
mov
outsl
loope
push
fisttpl
outsb
in
ficoms
mov
sarl
mov
test
sti
int
in
movsl
and
out
in
cmp
mov
ss
push
lock
cmp
les
data16
fcomps
add
xor
lret
pop
or
push
add
outsb
or
mov
fcoml
outsl
fildll
in
es
sub
sub
dec
sub
repz
pop
jb
push
insl
jge
or
stos
or
dec
jbe
pop
in
addr16
in
in
insb
adc
xchg
add
into
cmp
and
sbb
sub
cmpsb
popf
das
sbb
test
fmuls
repz
add
xchg
mov
cmpsb
rclb
and
pusha
dec
xchg
dec
xor
jl
sahf
mov
sub
ret
xchg
add
fistl
or
push
jne
and
iret
mov
jg
add
mov
shl
cltd
inc
mov
orl
idiv
dec
out
xchg
lea
add
mov
dec
pushf
movsb
int3
push
jmp
repnz
sbbl
fs
les
mov
push
dec
ja
in
cmpsb
and
out
lret
inc
aaa
cmp
sti
push
int
in
sbb
pop
fcmovu
pop
xchg
andb
movb
xor
stc
inc
add
arpl
adc
and
gs
les
sub
mov
dec
inc
aad
lahf
adcb
push
inc
jb
push
jle
xorl
mov
jnp
cwtl
test
adc
xchg
dec
sbb
subb
loopne
mov
orb
imul
add
gs
lret
pop
xchg
je
fisttps
cmp
pop
sbb
popa
push
and
or
inc
mov
push
and
loopne
scas
mov
sbb
push
aas
div
xchg
xor
ret
xor
int3
aad
adc
cmc
mov
add
cmp
sti
inc
mov
loop
xor
mov
xchg
or
dec
xor
ja
sub
ss
in
pop
xchg
faddl
xor
dec
repz
push
mov
mov
sub
sbb
outsl
xchg
cmpsb
inc
xchg
jae
aaa
xlat
cs
jg
cmp
cmp
insl
dec
jo
loope
or
push
rcr
xor
inc
clc
cmpsl
lds
add
cmp
aad
inc
daa
push
dec
sarb
out
jp
mov
adc
dec
lods
adc
sbb
loop
mov
fcompl
popa
fucomp
push
dec
cmpb
sti
jle
std
pop
shlb
or
cmp
flds
lock
jp
push
popa
cmp
sub
xchg
aam
fucom
lock
nop
lcall
sub
mov
or
decb
jns
mov
push
ds
or
psubusb
mov
cld
xchg
or
out
cwtl
lret
push
inc
sbbb
sub
or
jnp
pop
dec
xor
insb
add
mov
rolb
mov
mov
fcmovb
bound
inc
mov
loope
stos
mov
push
frndint
clc
jnp
sarl
xor
and
stos
dec
and
sbb
mov
rorb
data16
fcmovu
push
dec
fdivrl
adc
cltd
xchg
adc
sub
lds
cmc
push
mov
push
leave
mov
add
inc
push
mov
mov
mov
cmpsl
subl
inc
lea
nop
add
pop
adc
fsubrs
sub
out
fmul
xchg
push
inc
sub
loopne
cmp
hlt
enter
aaa
push
xor
fld
dec
out
pop
cwtl
dec
pusha
cmp
scas
cmp
mov
sbb
pop
lods
push
add
sub
outsl
daa
add
shrb
and
lret
sarb
gs
in
fsubr
xor
xor
xor
sub
insl
stc
mov
call
cltd
add
clc
xchg
add
cs
test
or
pop
mov
frstor
mov
add
stos
andl
mov
ret
adc
jmp
mov
call
and
hlt
fs
sbb
cmp
pop
aad
scas
mov
push
ja
movsl
jecxz
or
and
insl
int3
sbb
cmc
les
fcomps
enter
int
mov
stc
dec
mov
xchg
mov
scas
jne
and
pop
sbb
and
mov
push
stc
mov
or
ss
imul
or
mov
adc
or
push
cmp
into
stos
in
xor
xchg
xor
jle
sbb
dec
fs
jl
aas
inc
cmp
fwait
lahf
out
jecxz
inc
lock
and
inc
push
je
jno
addr16
stc
aas
aas
pusha
mov
pop
cmp
sub
and
loop
lods
cli
movsb
iret
sub
out
mov
push
out
push
sub
xchg
jl
les
cwtl
sub
xchg
fdivl
inc
push
in
adc
cmp
or
and
sub
mov
lea
pop
cmp
lahf
call
out
inc
loop
xchg
cmp
pusha
xchg
sub
shrl
in
pop
sbbl
cmpsl
xchg
subl
daa
imul
ficompl
outsl
lcall
incb
cmpsl
sti
add
insb
daa
aaa
das
popf
sub
cmpsl
or
adc
xchg
sub
add
cmp
jmp
clc
push
hlt
rcrl
add
outsl
or
add
push
lds
icebp
loopne
test
sti
push
add
fcmovnu
iret
add
sub
movsl
adc
mov
leave
out
loopne
dec
xchg
fcomps
lcall
inc
jmp
push
xor
cmpsl
lock
pop
fidivs
dec
pop
mov
call
pop
das
push
mov
popf
icebp
xchg
sbb
push
scas
xchg
enter
imul
out
sub
and
pop
xchg
imul
or
cmpsb
lcall
xchg
jle
xlat
scas
lahf
xchg
and
lret
add
call
mov
sbb
pop
adc
insb
or
push
mov
dec
add
int3
lock
outsb
mov
shl
mov
nop
xchg
pop
and
mov
in
xchg
call
mov
pop
inc
shl
fbstp
inc
mov
stc
pop
in
fcomps
cmp
mov
aad
sub
lods
dec
sub
pop
pop
in
sub
outsl
or
loop
dec
pop
popa
inc
lcall
fwait
stos
mov
push
pusha
stos
dec
add
fmull
shll
subl
adc
stos
inc
mov
mov
inc
cmp
fdiv
inc
cld
mov
fucomip
mov
in
cltd
pop
daa
mov
push
into
mov
aaa
data16
jns
jns
ret
aad
inc
add
push
sub
fcomp
jne
xchg
mov
cmp
pop
pop
sub
ss
xchg
mov
mov
pop
dec
push
loopne
jne
add
dec
xchg
cmp
sbb
xor
sbbl
sub
popa
pop
test
jecxz
shl
fucomip
idiv
pop
push
adc
jbe
aam
in
xchg
fwait
push
jmp
jae
add
stos
incb
fcmovu
pop
sub
popa
xchg
clc
xlat
xchg
push
xor
jnp
sub
fldenv
and
push
jo
insl
cmpb
mov
xchg
and
adcb
jg
xchg
inc
mov
or
lods
insb
mov
xor
mov
push
icebp
ficompl
or
jb
xchg
push
fwait
inc
cli
shll
jp
testl
fdivrs
test
dec
and
xor
jne
rorl
js
mov
add
lds
loop
pop
mov
cmp
in
sbb
stc
xchg
popa
fstpl
dec
jge
stos
inc
test
test
push
jp
sbb
xchg
lods
dec
dec
daa
mov
pop
roll
sub
push
adc
test
inc
fs
shlb
loopne
add
adc
icebp
adc
cmp
in
jb
loop
fldt
mov
shll
cmp
pop
out
mov
sub
inc
out
lds
sbb
dec
jmp
xchg
xor
in
fisubrs
and
bound
insw
into
lret
adc
psadbw
mov
sub
adcb
lds
in
adc
pop
test
inc
test
inc
add
cmp
pop
js
xor
pop
int
push
jp
push
mov
mov
outsl
cmpsb
dec
bound
fstp
lods
mov
push
and
arpl
sbb
es
cli
jbe
dec
lret
xor
add
sbb
shl
scas
pop
fisubrs
std
scas
adc
cmp
in
xchg
scas
adc
imul
data16
sbb
xchg
and
pop
add
dec
adc
ror
dec
cmp
xchg
cmp
cmp
imul
ficoml
add
add
stos
pop
sub
cmpsl
scas
loope
outsl
imul
fmull
out
xchg
movsb
adc
bound
sarb
nop
adc
push
pop
movsb
popl
cli
inc
fistps
inc
mov
scas
ljmp
jle
dec
jmp
mov
test
cmp
mov
lahf
xchg
call
push
push
fldt
push
pop
mov
enter
pop
jno
mov
lahf
xchg
stos
movsl
push
mov
push
and
xchg
adc
enter
mov
mov
cwtl
loop
arpl
mov
scas
pushf
popf
pop
add
or
loop
test
jle
cs
cmp
test
jmp
push
incl
fistps
and
push
sub
dec
call
insl
xchg
xchg
insb
nop
jle
and
xchg
and
sarb
out
push
dec
sbb
outsb
scas
xchg
cld
lcall
lcall
xchg
cmp
out
pop
or
mov
cmp
or
sub
dec
lahf
sub
dec
xchg
out
sub
cmp
jbe
std
sbb
divb
cmp
sbb
jno
jbe
xchg
aaa
aam
std
roll
sbb
test
cmp
pop
push
in
call
sub
loope
in
or
ljmp
adc
cmp
cmp
and
lock
mov
aas
dec
jp
imul
xor
cmpsb
inc
ss
xor
js
cld
insl
sbb
pusha
jnp
xchg
xor
repz
outsl
push
jns
imul
nop
sbb
mov
ja
cmpsb
jge
mov
and
and
fiaddl
iret
xor
and
ds
mov
add
push
dec
out
aas
mov
jo
sub
mov
fdivrs
mov
cld
jno
mov
lret
pop
pop
jno
test
ret
cmpsb
sub
push
les
test
adcl
imulb
daa
outsl
lods
out
pop
jne
pop
cltd
fs
push
and
dec
lods
outsl
xor
mov
jnp
sti
mov
test
outsl
jnp
jns
inc
or
sbb
mov
loop
sub
sarl
test
sahf
mov
sbb
pop
repnz
clc
sub
adc
push
movsb
sbb
int3
inc
and
movsb
jns
inc
fstl
mov
pop
shll
cltd
pop
pop
aam
mov
imul
cmp
imul
cmp
mov
xchg
cld
add
pop
cmp
jp
adc
xchg
xlat
repz
mov
les
mov
fwait
inc
mov
xor
imull
jge
mov
push
pop
arpl
cli
sub
mov
jae
imul
sub
or
jbe
out
pop
lea
pop
mov
or
mov
lods
jno
inc
loop
inc
xchg
sahf
sub
in
fucomi
in
shll
xchg
in
cltd
fdivrl
outsb
pushf
xchg
lcall
je
cmp
out
shl
scas
inc
add
imul
or
in
or
jmp
mov
and
jge
sub
pushf
xor
jno
js
test
jg
out
or
mov
mov
loope
es
lret
outsb
sbb
mov
ja
add
sahf
shrl
mov
testb
lock
mov
sbb
dec
stos
cmp
mov
add
inc
cmc
push
fs
mov
jg
popf
add
xchg
and
sub
and
sbb
aad
je
add
dec
shr
in
ds
test
test
icebp
inc
scas
inc
fidivl
pop
xor
nop
clc
cld
adc
dec
push
pop
sub
aam
mov
cmpsb
xchg
das
cli
idivl
imul
add
and
add
fcomip
cmp
inc
fisttps
les
inc
jg
inc
mov
xchg
idivb
imul
icebp
test
jge
stos
out
or
in
in
xor
int
adc
loope
es
roll
push
pushf
faddl
lods
sub
dec
xlat
icebp
mov
jne
clc
inc
test
add
cmpsb
out
cwtl
int
jno
inc
pop
fcomip
test
rolb
repz
cmp
jae
std
mov
push
fistps
pop
insb
and
jo
and
nop
lods
adc
push
cmp
xlat
popf
ljmp
int
cmc
jmp
popf
std
gs
cmp
or
loop
add
sub
pop
icebp
sbb
push
in
sub
pop
xchg
lret
jns
or
and
aas
push
xchg
shlb
js
pop
and
sbb
fistps
push
ret
test
mov
dec
fistl
lcall
xchg
push
rorl
and
sub
xchg
fnsave
xchg
inc
dec
add
shrl
and
cli
out
subl
in
dec
inc
mov
jae
jb
sbb
add
jg
imul
mov
or
fiaddl
rorb
cmpsb
push
loopne
cld
sub
jbe
ss
lods
adc
sahf
and
xchg
xchg
mov
xchg
out
cmp
xor
or
pop
mov
sub
rcll
lods
inc
inc
inc
xchg
movsl
push
out
repz
sbb
ja
adc
int3
out
xor
mov
pop
mov
decb
in
outsl
xor
popf
mov
or
popa
hlt
push
add
aaa
inc
jmp
pop
push
adc
mov
or
ret
inc
out
and
in
push
fs
icebp
sbb
cmp
iret
and
dec
push
inc
mov
mov
shrl
in
xchg
adc
sub
jge
mov
cmpsb
test
pop
mov
cld
cli
xor
aaa
inc
aad
pop
cmp
push
sub
pop
fsubs
fwait
mov
xchg
mov
mov
cmp
xor
sbb
pop
ljmp
dec
sub
xor
out
fwait
and
mov
stos
inc
xlat
loope
xlat
adc
sbb
addr16
notb
mov
xchg
imul
cmp
pop
pop
lea
dec
ret
push
mov
and
jae
popf
sub
test
fwait
insb
sub
mov
sub
js
xchg
xor
loop
inc
test
outsl
addr16
andl
sbb
inc
ljmp
xchg
ss
stos
scas
pop
pop
jne
add
mov
cmp
ret
jecxz
imul
idivb
xchg
dec
cmp
dec
xchg
jmp
xchg
insb
in
in
xchg
lock
cmp
icebp
pop
cmc
in
shlb
test
xlat
popa
pop
sbb
mov
pop
bound
sub
mov
jae
add
addb
jge
clc
jns
pop
sbb
adcl
subb
into
ljmp
ret
cmp
push
push
lds
ss
or
sti
icebp
xchg
arpl
ljmp
push
pop
jle
mov
add
mov
addr16
mov
jp
dec
mov
sahf
cmp
test
sbbl
inc
pop
adc
rorl
adc
sbb
lahf
iret
jle
cmpb
nop
fisubl
dec
shr
pop
adc
mov
pop
aas
imul
mov
aad
inc
push
xor
stos
scas
insb
xor
lods
fdivp
inc
inc
jb
addl
xor
movsb
push
lcall
pop
scas
stos
xor
pop
or
gs
cmc
shrl
ljmp
mov
jae
xchg
xchg
jle
jge
adc
and
push
hlt
xchg
aas
sub
popl
scas
jno
cmp
add
cmpsl
call
stc
xor
xor
or
add
xchg
fidivrs
lods
mov
or
jp
or
inc
and
push
iret
pop
mov
sbb
imul
mov
cmp
call
in
xchg
shl
les
jl
mov
mov
pop
rclb
push
call
inc
outsl
sub
rol
mov
imul
mov
in
mov
lcall
xlat
cmp
xor
ja
popf
test
mov
arpl
fwait
pushf
xchg
cli
test
mov
test
pop
sbb
pop
inc
mov
xor
adc
mov
les
push
xchg
mov
cwtd
daa
movsl
xor
mov
sbb
out
adc
jo
loope
insb
or
xor
fldt
mov
imul
jmp
adcl
and
xor
in
xchg
mov
andl
push
jge
aad
inc
lret
stos
xchg
outsb
mov
add
icebp
cltd
pop
push
add
in
idivl
cltd
cmpsl
inc
sub
pop
into
sub
jmp
fsubl
loop
aaa
jmp
cmp
mov
test
adc
mov
mov
stos
or
dec
test
test
lret
push
push
ret
xchg
xchg
cs
es
test
btc
outsb
jge
int
cmp
in
xor
out
push
jle
push
pop
jae
dec
mov
mov
js
sbbb
mov
mov
rol
sbb
cli
aam
dec
aad
scas
cmp
dec
mov
nop
and
mov
jmp
and
imul
xor
pop
cmp
mov
out
push
shll
mov
sarb
hlt
fcoml
jl
push
jno
scas
xchg
fistpll
inc
cmp
mov
mov
mov
popa
add
xor
push
stos
mov
stc
or
aaa
push
jno
bswap
push
mov
je
shlb
lds
dec
inc
push
js
nop
imul
push
xchg
cmc
inc
lock
jno
fs
push
aaa
leave
arpl
es
sbb
mov
mov
test
inc
pop
mov
cs
imul
mov
adc
in
push
mov
popf
xchg
rcrl
inc
xor
jl
mov
xchg
mov
xchg
fcmovnb
sub
dec
rcrl
outsb
cs
enter
mov
data16
ret
xor
mov
nop
dec
sbb
add
mov
lret
movsl
pop
lods
adc
jne,pt
push
sbb
aad
jmp
xlat
and
pop
mov
sbb
push
mov
cmc
jp
int3
daa
xor
add
sbb
xchg
pop
fdivr
sti
popl
mov
fwait
aam
jle
lods
add
call
xchg
ret
test
cmp
xor
sub
mov
icebp
mov
aas
mov
push
adcb
mov
and
cwtl
adc
jne
in
fcmovbe
repnz
adc
cmp
fcomp
pusha
jp
fwait
adc
es
dec
add
or
gs
das
add
or
rolb
adc
cmp
int3
push
adc
insl
js
cmc
xchg
mov
ret
xorb
mov
xor
add
stc
dec
pop
shrl
cmpsb
or
dec
shlb
add
leave
dec
rcrl
pop
fdiv
js
ss
xchg
and
test
imull
dec
cmc
fdivrs
mov
xchg
adc
add
lods
shr
dec
push
push
mov
or
sub
rorb
pushl
add
add
and
jmp
out
inc
lret
and
jle
gs
pushl
roll
push
adc
out
jo
or
rclb
push
addr16
xor
aam
mov
adc
in
or
inc
jbe
sub
cmp
inc
test
and
cmpb
xchg
leave
mov
jne
mov
int3
mov
ret
push
mov
iret
dec
enter
or
cli
arpl
and
xchg
mov
sbb
mov
mov
int3
inc
pop
inc
sti
outsb
shll
fucompp
aaa
mov
adc
fsubrs
add
add
lea
add
jbe
add
push
js
ljmp
xor
in
or
push
mov
jne
and
int
xchg
std
es
cmp
pop
ljmp
cwtl
ljmp
cmc
jge
pop
fnstcw
pop
int3
jb
mov
rcl
mov
dec
mov
cmp
push
and
sbb
xchg
sbb
mov
push
add
and
mov
pusha
and
or
jmp
pop
mov
mov
out
fnsave
mov
loop
mov
or
into
push
hlt
dec
ficompl
dec
xorb
rorb
shll
stos
push
outsl
jno
sub
cmpsb
xchg
mov
pop
or
xor
in
es
orb
or
jg,pt
in
adcl
pop
dec
xor
xor
loop
loope
mov
js
add
mov
and
ret
mov
aaa
sub
mov
pushf
push
sbb
loop
adc
push
ljmp
xchg
xchg
mov
mov
ja
ret
ret
dec
push
popf
mov
mov
les
data16
pop
push
mov
cmp
adc
pusha
pop
aaa
pop
ja
cmp
fiadds
sbb
aas
or
dec
or
scas
out
aaa
stc
imul
sbb
bnd
in
xor
hlt
adc
jmp
mov
and
xor
or
xchg
loop
fwait
inc
add
ja
pop
stos
pop
push
xchg
insl
imul
mov
xchg
cmp
leave
int3
xchg
inc
pop
inc
je
and
pusha
icebp
and
lock
stc
or
popf
push
push
mov
fs
xor
je
lock
push
lret
xor
shl
cmp
or
pusha
pop
pop
pushf
aam
xor
add
pop
or
add
pushf
or
enter
adc
adc
stc
xchg
jno
inc
aad
hlt
pop
jle
test
pop
adc
insb
shll
adc
insb
pusha
mov
inc
sub
movsb
popf
pop
adc
leave
and
push
insb
rorb
push
mov
xchg
repz
aas
mov
push
pop
xor
sbb
xor
and
sarl
cmp
jns
xor
movsl
addr16
lret
sarl
xchg
fisubrs
clc
mov
sub
and
push
addr16
imul
mov
shl
pushl
inc
xchg
aaa
mov
push
int
and
out
jle
push
mov
mov
push
cmp
aam
and
xor
fldl
and
mov
aas
sub
cmp
hlt
xchg
cmp
je
lods
shlb
test
push
mov
addr16
xor
and
push
jg
mov
add
add
fisubrs
fcompl
pop
push
jl
push
dec
sahf
add
fidivs
lods
aas
mov
or
sub
jbe
lahf
iret
jae
pop
icebp
fisttps
add
bound
push
pop
mov
imul
mov
out
cmp
ret
xorl
je
cmp
fists
lcall
xlat
sbb
push
sbb
movsl
out
es
cmp
push
xchg
dec
mov
test
mov
or
xor
or
mov
xor
in
repz
cmc
xchg
js
insb
scas
xchg
mov
jne
lea
daa
mov
jg
leave
jno
mov
jmp
mov
popa
jo
cmp
mov
xlat
sbb
jns
xchg
dec
fbstp
adc
pop
hlt
fistl
sbb
and
mov
les
fildll
pop
and
add
insl
std
and
cmp
divb
fisubrs
jmp
jns
jmp
or
enter
lock
push
lahf
in
sti
or
push
sub
lcall
jbe
push
adc
or
mov
mov
jp
ror
adc
dec
mov
push
dec
mov
jno
inc
mov
dec
push
out
xor
sub
dec
fsubrs
cmpsl
sbb
clc
mov
scas
jp
lock
push
mov
lret
test
pop
jns
pop
es
std
sahf
out
cmpsb
jp
scas
pop
jle
rolb
outsb
test
fisubl
sahf
inc
sub
rol
xchg
in
xchg
out
push
lods
lods
scas
nop
rclb
xchg
pop
cmp
fwait
xchg
in
test
roll
xchg
addr16
pop
add
pop
xor
or
adc
adc
xchg
insb
add
mov
cwtl
xchg
jns
sbb
frstor
ds
inc
mov
mov
add
jno
mov
push
mov
push
jb
and
nop
andb
xchg
mov
fildll
jo
mov
adc
sbb
loopne
mov
int
decb
xor
negb
inc
mov
rcrl
fcmovnu
xchg
sub
jle
mov
cld
sub
movsb
fistl
mov
shrb
cli
add
lret
mov
cmp
int3
fs
jmp
int3
cmpsb
nop
or
dec
add
or
test
add
pop
mov
mov
pop
bound
jbe
mov
cmp
xchg
xchg
rolb
jns
adc
lret
push
mov
das
insl
sbb
stos
add
sbb
jp
sub
popf
mov
ret
int3
lods
xor
or
fldl
cmp
sub
dec
pop
jle
int3
test
rcrb
xchg
lea
mov
push
xlat
sub
in
xchg
cltd
xlat
mov
sbb
pop
out
sub
or
sti
rcrb
jne
push
and
pushf
scas
lock
repnz
imul
push
cld
lret
adc
cwtl
inc
cmp
xchg
push
pop
lock
add
fistps
pop
test
mov
arpl
daa
ss
dec
repz
shr
mov
push
fnstcw
push
aad
xor
mov
inc
mov
and
jo
fnstenv
sbb
xchg
rcr
push
fistpl
or
loopne
sbb
xchg
test
mov
loopne
push
dec
jmp
inc
stos
insb
dec
mov
xor
add
mov
jp
lahf
sbb
dec
sbb
xchg
scas
xchg
jmp
arpl
sti
into
inc
loopne
inc
jae
xor
lods
add
sbb
cli
or
add
lcall
push
movsb
add
cld
gs
call
cmp
inc
cmp
xchg
iret
not
mov
push
stos
out
hlt
fwait
es
sub
fcmove
data16
jl
test
pop
rcll
rcrl
dec
xchg
nop
push
fiaddl
inc
test
push
fldenv
sti
mov
and
dec
ljmp
sbb
cmp
fimuls
enter
push
clc
mov
daa
pop
dec
mov
or
sub
and
pop
cmp
ds
data16
push
mov
mov
jb
mov
loop
cmp
in
and
mov
dec
nop
pop
xor
aas
push
ret
cmp
ret
iret
cmp
int
pop
pop
fisubrs
sarb
jl
xor
pop
cmp
jp
inc
sub
cwtl
push
arpl
jo
mov
movsb
sub
cmp
or
cmp
pushf
aas
xchg
ret
and
dec
cs
fbstp
add
mov
repnz
lea
or
push
sahf
sbb
adc
ja
and
lds
ds
vpsubusw
out
mov
stos
xchg
or
clc
std
fs
and
sti
orl
and
cmp
sti
jmp
stos
stc
shll
mov
ja
mov
fisubrl
mov
sti
fsubl
fistpl
mov
js
aam
adc
mov
push
mov
jecxz
mov
imul
dec
addr16
outsl
mov
pusha
cwtl
stc
or
mov
in
lods
insb
fcoms
mov
bound
std
jnp
dec
xchg
mov
lcall
xor
test
cmp
rorl
mov
rcr
inc
cmc
psubsw
jne
testl
mov
out
push
das
push
ds
rolb
jo
clc
xchg
mov
xchg
and
sti
cmpsb
mov
aam
lods
push
sbb
push
adc
stos
sbb
divl
hlt
in
fs
test
mov
iret
test
stos
stc
aaa
lods
stos
or
hlt
sbb
add
rclb
loope
aas
add
das
rcr
push
inc
and
sub
push
out
dec
out
ja
inc
jne
push
pop
or
mov
lods
es
sbb
xchg
jg
mov
sbb
scas
push
insl
rcrl
stos
loopne
push
loopne
aas
ss
stc
divb
and
inc
cmc
addl
jnp
mov
sbb
cmp
sbbl
pushf
mov
xchg
adc
aaa
jmp
bound
test
sar
xor
adc
sub
popa
fisubrl
fildll
sub
inc
scas
aas
sahf
rcr
popa
and
testb
xor
hlt
cld
mov
rcrl
lods
dec
sub
pop
add
out
lahf
das
loop
xchg
scas
out
jae
jns
loope
cwtl
mov
icebp
mov
mov
mov
dec
dec
fistl
dec
sub
xor
das
sub
sahf
subb
pusha
xchg
imul
cmp
cs
mov
push
mov
mov
inc
xchg
lret
sbb
sub
mov
sete
lahf
or
mov
int3
jnp
inc
xchg
divl
out
je
cmp
xchg
xchg
lods
mov
ret
popa
xor
repnz
sub
cmp
sub
mov
pop
loopne
inc
adc
xchg
mov
mov
dec
and
scas
ss
jbe
inc
clc
aaa
out
sub
dec
repz
test
push
ja
mov
inc
lds
loop
and
xlat
jns
xor
stc
mov
sub
jnp
sub
adc
lret
je
and
xchg
lock
repz
dec
popf
sbbl
add
add
xchg
call
in
loopne
inc
fimuls
pop
sbb
adc
mov
stos
imul
fcoms
and
dec
fidivrl
lods
dec
jno
loopne
sbb
inc
pop
dec
ss
pop
int3
xor
add
mov
cmp
cmpsl
adc
adcl
nop
xor
test
mov
adc
pusha
push
mov
push
push
lahf
dec
or
adc
mov
and
adc
cmc
mov
subb
out
pop
sub
xor
aas
adc
jmp
xor
popa
dec
cmp
mov
pop
push
in
fcmovnb
cmpl
xor
pushf
shlb
arpl
push
cmpsl
mov
add
call
pop
pop
and
fimuls
add
and
ret
cld
mov
bound
xor
sbb
jbe
ficoml
or
push
cmp
inc
repz
lcall
pop
xor
inc
fisubrs
ret
fbstp
lcall
pop
xor
popa
xor
pop
fstpt
xchg
or
inc
jo
xchg
jbe
pop
mov
aad
int3
mov
leave
cs
cli
and
inc
dec
mov
test
cmp
lods
fsubs
jmp
jp
push
std
shll
in
dec
rolb
mov
lahf
jmp
pop
dec
loop
fs
jno
add
sbb
testl
test
hlt
fs
int3
movsl
or
outsb
xchg
lret
mov
ss
push
mov
mov
nop
inc
jmp
out
mov
and
dec
cltd
cld
xor
mov
loope
stos
sahf
mov
xchg
or
cmpsb
sbb
pusha
mov
ja
or
cmp
fdivrs
xor
test
lahf
jge
outsl
dec
jnp
imul
cmc
push
inc
cld
pop
popa
push
loop
outsb
ret
clc
add
sub
mov
adcl
xor
sbb
xchg
icebp
add
mov
pop
je
loope
jbe
sub
bswap
mov
cmpl
fwait
arpl
jbe
test
add
pop
es
dec
sbb
sub
rcrb
mov
adc
stos
sbb
sbb
pop
push
push
shrb
push
movsl
mov
sarl
rcrl
cmpsb
add
je
xchg
testl
test
and
cmp
jbe
jnp
lret
pop
sti
rorb
cli
dec
cmc
fildll
pushf
sub
sub
out
std
enter
arpl
std
mov
out
cwtl
jo
xor
pop
test
loop
nop
mov
lds
jle
inc
in
nop
push
test
mov
push
in
lock
bound
roll
adc
fiaddl
das
jns
stos
fcmovnu
and
mov
pop
pop
inc
fstps
cmp
push
das
sub
lahf
cmp
inc
xchg
mov
pop
ss
dec
fldl
adc
mov
loope
mov
lret
ficoml
fwait
sub
nop
pxor
jo
xchg
sbb
mov
scas
xchg
gs
mov
xchg
in
fadds
dec
push
xchg
in
icebp
loopne
dec
mov
adc
add
and
testb
repz
out
loope
mov
or
out
dec
add
mov
push
lods
inc
popf
xchg
fdivrs
ljmp
inc
int
loope
pop
lcall
test
jmp
cwtl
rclb
ja
scas
aaa
add
lods
insb
outsl
sbbb
mov
pop
mov
ror
cmp
lcall
add
adc
fsts
mov
sarl
xchg
add
adc
inc
adc
inc
and
inc
aad
orl
sub
sbb
cmc
in
test
test
in
ds
rol
ret
add
cmpsl
ret
leave
jbe
outsl
clc
adc
addr16
test
or
sub
test
or
cltd
std
mov
push
mov
pop
mov
and
xor
sbb
out
in
loopne
or
sahf
inc
aaa
mov
push
push
mov
cmpl
cmpsl
or
inc
fsubs
inc
mov
push
push
jecxz
xor
in
pop
xchg
ljmp
addb
pop
sahf
push
pop
xor
outsb
push
fwait
pop
shll
aaa
xchg
ret
lcall
xchg
faddl
lea
cmpsb
push
jp
lods
xchg
aas
jbe
push
inc
ljmp
test
push
cmc
das
adcl
inc
test
ja
mov
subb
scas
mov
and
cmp
daa
mov
mov
arpl
sbb
mov
and
pop
xchg
xchg
cmc
js
xchg
cmp
add
repnz
pop
mov
push
std
jnp
xchg
adc
mov
push
cmpsl
out
push
push
ret
or
mov
test
fwait
or
clc
pop
test
adc
out
inc
push
sub
fwait
jp
jmp
jmp
lcall
fsubl
std
sbb
pushf
sti
gs
out
arpl
mov
loopne
dec
idivb
je
mov
ljmp
stos
or
xor
shll
movb
cmp
inc
push
inc
insl
scas
jge
push
es
sub
call
mov
and
cltd
pop
sbb
adc
or
cmp
outsb
loope
xor
and
inc
rcrl
sub
pop
and
jno
add
mov
es
xchg
movsl
aas
in
xchg
clc
add
mov
mov
mov
jo
das
scas
cmp
and
stos
test
test
sbb
popf
loopne
dec
add
xchg
jbe
testl
gs
dec
ret
push
xor
pop
push
loope
jge
dec
ror
mov
mov
nop
loop
ss
add
stos
dec
test
daa
ja
out
fdiv
sbb
in
rcrb
bound
push
ret
fisttpll
dec
lods
shrl
daa
scas
pop
xchg
mov
push
add
faddl
lods
mov
mov
xchg
cmp
sub
aas
fcoml
sbbb
mov
inc
enter
es
cmpsl
leave
mov
ljmp
ljmp
mov
push
jle
mov
pop
jl
or
sub
inc
in
test
adc
rcll
pop
imull
add
inc
adc
ja
jmp
call
aaa
scas
inc
ficomps
dec
jmp
test
pop
and
fldenv
lock
xor
inc
and
xorb
lret
add
jecxz
or
add
mov
test
jmp
dec
mov
xchg
ljmp
mov
repnz
and
imul
stos
lds
shrl
lock
xor
mov
sbbb
cmp
xor
daa
clc
pop
lahf
ficoml
xchg
imul
aas
neg
dec
je
pop
arpl
cmpsb
mov
lods
cld
pop
insl
add
xchg
iret
fidivl
cmp
xor
add
mov
mov
add
xchg
aam
xchg
pop
out
mov
das
push
movsl
lods
dec
jno
ljmp
out
daa
and
sub
cltd
out
jle
rolb
into
mov
and
dec
mov
dec
adc
and
adc
or
nop
cltd
jne
mov
stos
mov
xchg
or
adc
icebp
mov
incl
mov
push
ret
shll
in
scas
adc
xor
sub
in
mov
sub
in
loop
andb
mov
dec
cmp
sub
sbb
in
hlt
mov
icebp
inc
inc
mov
dec
mov
cwtl
sbb
dec
cmc
cmpsl
data16
lret
adc
dec
cmp
adc
loop
ret
nop
xchg
dec
gs
mov
out
xchg
sbb
gs
sub
bound
hlt
mov
aad
push
fmuls
mov
jge
jmp
inc
push
pushf
jp
stc
or
push
sub
jg
and
xor
js
test
cmpsb
xchg
shll
xchg
dec
mov
inc
jo
stos
push
push
sbb
adc
scas
lcall
loop
test
mov
out
lahf
inc
lds
lods
dec
scas
mov
lock
hlt
cld
lods
cmp
pop
inc
push
fs
cmp
ret
iret
pop
in
xchg
daa
sarl
or
cwtl
in
ret
dec
sub
mov
and
popa
lcall
mov
cld
out
lods
mov
sbb
dec
and
or
fbstp
imul
mov
jge
pop
or
roll
and
in
cs
das
jae
insl
cld
mov
fimull
xor
mov
and
cltd
add
and
pop
lcall
pop
cmp
or
cmp
das
push
sbb
adcl
and
rcr
hlt
mov
xor
arpl
insb
cwtl
pop
xlat
jecxz
cmp
xchg
mov
inc
int3
sub
xor
sub
inc
into
push
loop
mov
mov
inc
fs
cmc
cmp
mov
xchg
scas
in
mov
mov
or
or
gs
cmp
sub
inc
cmp
dec
push
push
sub
loopne
out
sub
xlat
xor
mov
xchg
lods
out
icebp
xor
cmp
mov
sbb
cli
jle
fcoms
and
aam
xchg
mov
sbb
pusha
and
sbb
stos
xor
jmp
pop
xchg
aaa
sbb
inc
mov
fadd
sub
outsl
sub
loop
les
or
xor
repnz
jp
sub
fs
bound
xchg
pop
pop
idivb
adc
aaa
inc
push
jns
or
mov
cld
inc
fstp
adc
jl
movsl
sahf
rorl
push
clc
aaa
insl
sbb
xor
cmp
out
xlat
inc
aam
jmp
out
jmp
mov
decb
fs
out
rclb
and
in
cmpb
mov
cmp
insl
cmp
mov
and
xchg
mov
leave
and
sub
out
adc
cmpsb
fbld
jecxz
cmp
in
stos
int
jb
pop
dec
test
cwtl
mov
add
insb
jp
sub
jne
sahf
push
pop
jo
scas
stc
dec
arpl
outsl
or
dec
hlt
dec
adc
cmp
cwtl
push
movsb
shrl
popa
aas
xchg
inc
sub
fs
and
shrl
nop
loopne
dec
push
inc
xchg
jbe
xor
inc
cmp
xchg
scas
std
adc
inc
cs
in
lods
gs
stos
cmp
and
out
and
jle
clc
dec
in
in
int3
xchg
and
fsubrp
cmp
mov
dec
add
lock
and
and
lahf
dec
xor
inc
cmpsb
movsl
push
cwtl
mov
daa
push
fimull
arpl
adc
pop
cwtl
mov
and
pop
xlat
or
stc
cmpsb
lods
pcmpeqw
lret
iret
mov
daa
outsl
mov
add
mov
loopne
adcl
xchg
mov
lods
and
adc
mov
push
add
and
ret
fbstp
add
cmp
pop
subb
ja
cs
sbb
jne
rcrl
fwait
cmp
pop
mov
fildl
inc
pop
jle
cwtl
and
fsqrt
ror
stos
fsub
cltd
pop
mov
jne
pop
pop
clc
adc
add
stc
das
xor
ficomps
cmc
and
push
inc
imul
and
or
cld
sahf
jbe
cmp
inc
push
sbb
push
aas
push
jle
sub
mov
lock
inc
mov
adc
or
add
dec
cmp
xor
out
hlt
jae
stos
mov
ss
mov
aam
sbb
pusha
and
jnp
andl
and
mov
loope
imul
mov
std
sbb
fidivs
cmc
dec
sub
stos
mov
mov
add
mov
clc
adc
push
dec
xchg
xor
xchg
jge
mov
and
pop
dec
popf
jb
inc
repnz
push
xchg
lcall
jp
mov
loope
out
sub
daa
cmpsl
jb
std
xor
cmp
pop
mov
f2xm1
adc
add
jge
sbb
and
and
aad
mov
roll
imulb
loope
push
mov
mov
cmc
repz
out
push
jo
fcompl
sub
mov
jo
in
push
xchg
call
outsl
and
loopne
jmp
lock
add
cmp
sub
xchg
xlat
push
shrl
lods
fwait
add
test
rcr
popa
stos
ret
cmp
mov
idivb
mov
and
pop
inc
xchg
push
ljmp
leave
jo
xchg
mov
cmp
mov
insl
shlb
iret
inc
cld
and
sbb
je
dec
test
lock
int3
pop
jno
lret
inc
pop
inc
xchg
push
xchg
popa
faddl
cld
aam
push
push
loope,pn
jb
aas
movsb
xorl
jp
jne
psubb
movsl
xor
fs
dec
lahf
and
dec
xchg
pop
outsb
daa
cmp
pop
nop
data16
mov
jg
out
adc
in
shlb
cmp
out
sti
sub
test
adc
push
pushf
insl
mov
dec
or
mov
xor
cmp
rorl
and
xor
addb
and
add
push
xchg
icebp
shrl
mov
add
push
cmp
add
sbb
xchg
mov
movsb
adc
data16
rolb
outsb
mov
push
mov
xchg
add
dec
rorb
mov
in
cmp
cmp
outsb
cs
sbb
ret
sbb
lret
sub
int
fisttps
inc
xor
outsb
and
icebp
js
push
lods
cmp
repnz
mov
popf
and
enter
pop
pusha
sub
mov
push
cmp
cmp
nop
lahf
cltd
cmp
add
js
pop
push
sbb
mov
cmpsb
aam
je
leave
mov
jae
movaps
shrb
dec
mov
loop
arpl
stc
jno
inc
push
insl
or
push
scas
into
shrb
sahf
mov
fsubs
jb
sahf
mov
pop
subl
dec
xlat
push
fs
jne
out
mov
jge
xor
fdivs
pop
xchg
add
or
daa
and
pop
in
ljmp
mov
pop
cmc
mov
jmp
adcb
cld
lcall
mov
xorl
pop
mov
jecxz
imulb
sbb
arpl
cmp
push
and
push
lcall
push
shrl
imull
sti
pop
cmp
mov
xchg
in
fnstsw
add
xchg
es
iret
and
ret
addr16
notl
fldcw
in
loope
mov
lds
cmp
cwtl
push
adc
arpl
mov
rolb
add
or
mov
outsl
xchg
xlat
sbbl
mov
sbb
fwait
adc
pop
scas
imul
push
jo,pt
push
addr16
ficoml
jl
push
mulb
mov
aad
jae
pop
adc
rclb
int3
nop
fs
pop
adc
jo
imul
rcll
in
ret
or
je
push
mov
cmp
mov
adc
sbb
mov
int
jne
xor
leave
adc
clc
mov
jge,pt
out
jno
add
dec
ss
cmp
cmp
stos
fstps
sbb
fwait
shld
mov
dec
jp
faddl
je
and
jl
test
mov
jbe
int3
jo
mov
add
xchg
mov
rcr
imul
and
cld
push
popf
lds
in
jle
push
movsb
ds
in
int
jp
push
loopne
mov
lahf
bound
sub
push
pop
adc
pop
fcmove
inc
lret
xor
jge
mov
test
repnz
push
add
add
sbb
stos
mov
insb
adc
and
out
add
jp
add
and
jo
push
cwtl
xor
or
jno
aam
out
into
daa
mov
xchg
jae
fisttpll
mov
add
and
pusha
cmpsb
psubusw
daa
into
mov
rclb
ret
sbb
pop
add
jnp
or
lds
jb
fdivr
jmp
je
mov
mov
xor
cltd
nop
cmp
pop
sub
scas
test
jmp
xchg
orw
dec
in
adc
adc
lods
daa
xchg
xchg
adc
int3
bnd
pop
push
icebp
aad
ljmp
loope
mov
repnz
mov
sbb
sub
sub
test
lea
dec
cmpsb
jnp
repnz
add
jg
shrl
iret
sub
sbb
adc
ja
pop
inc
dec
mov
xor
movb
nop
inc
mov
add
push
into
stos
jns
lock
outsb
xchg
into
call
jl
fisubrl
mov
adc
ret
push
jo
scas
jo
clc
outsl
out
sarl
jno
daa
lcall
out
flds
sub
ret
jecxz
pop
sbb
mov
jle
iret
stos
inc
jge
adc
and
sub
mulb
js
adc
lea
inc
pop
jecxz
xchg
mov
andb
or
sbb
stc
aam
mov
pop
icebp
popf
repnz
cld
mov
xor
test
push
insl
or
shrl
sbb
das
sub
imul
jo
bound
jl
fxch
add
jmp
adc
or
int3
mov
shrl
mov
sbb
jmp
sbb
add
cmp
aad
int3
cmp
pop
icebp
adc
popf
popa
jb
jp
cwtl
sti
ljmp
aas
sub
fisubrl
push
sub
inc
dec
repz
gs
shll
push
mov
out
push
fwait
xor
sbb
lcall
xchg
inc
xorb
loop
jnp
jnp
hlt
push
push
dec
lcall
pop
fisubl
cwtl
neg
jno
cmp
ret
ficoms
jp
rcrl
cmc
into
mov
sbb
lahf
test
ds
ret
mov
or
and
adc
inc
mov
inc
rcll
insl
jns
and
ja
in
xor
adc
mulb
push
xor
movsb
sbb
cwtl
cmpsl
pop
loope
scas
leave
lods
pop
mov
cmpsl
fxch
adc
rolb
mov
daa
xchg
dec
ret
dec
dec
scas
es
sub
in
mov
sub
add
inc
pop
push
rcrb
dec
lretw
lds
push
arpl
int
je
xchg
loope
out
sub
out
shlb
push
push
jbe
dec
push
loop
adc
xchg
add
popl
xlat
addr16
xchg
ret
push
dec
mov
out
cmp
aam
sbb
jnp
mov
cltd
pop
sub
inc
add
icebp
aaa
nop
push
rcll
rcr
xor
adc
and
jo
pop
pop
jnp
mov
sbb
ja
mov
pop
inc
cwtl
rcrb
inc
xchg
outsl
jb
lods
es
mov
cmpl
int
lcall
xor
out
xchg
shrb
mov
enter
pop
inc
aaa
and
test
test
inc
dec
xor
sbb
push
xchg
into
pop
int3
in
or
ret
jns
fdivrs
movsl
xchg
or
mov
daa
cwtl
cmc
push
icebp
add
das
arpl
scas
int3
pop
xchg
mov
inc
clc
and
cmp
scas
push
adc
rorb
push
mov
and
icebp
loopne
jle
in
test
ss
xor
in
mov
ljmp
lcall
xchg
inc
cmp
inc
dec
std
xchg
xor
mov
jmp
cmp
add
cmp
out
lahf
mov
stos
out
mov
std
stc
gs
cmp
pop
and
adc
dec
push
movsl
xchg
xor
fnstsw
aaa
je
insl
pop
decb
movsb
or
fsubs
mov
cmc
xor
lahf
sbb
popa
dec
add
jno
call
outsl
inc
mov
cmp
lahf
ja
add
push
inc
add
or
mov
lcall
xchg
cli
ret
pop
int
leave
lahf
fwait
dec
xor
add
inc
pusha
jmp
in
in
or
ljmp
sbb
fisttpl
jne
xchg
mov
out
push
mov
xchg
movsb
cld
shrb
or
adc
jnp
sub
mov
ret
mov
imul
dec
out
add
add
insb
rol
movsb
hlt
jmp
bound
pop
scas
lds
or
or
xchg
es
and
xor
xchg
or
nop
xchg
test
es
xor
mov
enter
or
iret
sbb
push
scas
xor
sbb
xchg
mov
fidivl
pop
jno
dec
loope
imul
mov
int3
jp
pop
inc
stos
aam
out
iret
movsb
push
push
popf
es
imul
dec
mov
adc
cmp
scas
leave
and
cld
out
loopne
mov
call
xchg
sbb
cltd
testl
iret
jnp
loope
inc
stos
mov
adc
mov
popa
add
in
lcall
cmpl
xor
jge
inc
pop
push
ret
fnstsw
outsl
jb
jbe
outsb
jg
in
into
push
add
outsl
lret
rcll
outsl
mov
inc
enter
fcmovu
dec
xor
std
int3
repnz
iret
cmpsb
inc
pop
ret
scas
jne
push
and
mov
fs
test
push
cmpsb
fiadds
mov
cmc
push
sub
jo
xchg
enter
cmp
aam
aam
xor
jge
cmc
sbb
push
fwait
xchg
stc
xchg
xchg
dec
adc
fnstenv
or
lock
mov
data16
popa
inc
mov
xlat
inc
das
xchg
fsubrp
sarl
test
hlt
xchg
neg
mov
iret
mov
pop
fisubl
sub
add
rcr
and
out
or
xorb
loop
nop
push
enter
dec
jnp
orb
fistps
or
mov
push
sbb
push
inc
or
lcall
icebp
in
rcl
xchg
pop
out
movb
xorb
aas
cmp
inc
stos
popf
and
cmpl
ss
lods
push
dec
mov
leave
mov
sub
aaa
pop
mov
clc
aad
and
push
pop
xchg
jo
jle
push
movsl
dec
jecxz
mov
rcl
outsl
dec
mov
xor
xchg
mov
lods
cli
cmp
mov
adc
or
inc
mov
sarb
xor
mov
mov
lcall
and
mov
das
lods
push
sbb
scas
sbb
lret
push
push
stc
adcl
adc
xor
repz
inc
jnp
inc
jle
sti
jp
or
nop
inc
pop
cmp
lret
ror
mov
das
sub
adc
push
push
outsb
lret
fidivrs
repnz
xor
int3
cli
addr16
push
and
xchg
mov
cmp
jle
sub
test
mov
pop
mov
or
xlat
push
rcrl
dec
movsb
cld
cmpsb
xor
rorb
je
xchg
into
into
das
sarl
lea
and
imul
mov
push
dec
pop
mov
mov
xchg
add
repz
lret
adc
outsb
lock
push
ficoml
stos
in
inc
xor
mov
loopne
xchg
fnstcw
jne
rorb
rolb
aad
mov
lods
jbe
aas
jg,pn
lcall
sub
add
movsl
xor
add
mov
out
shlb
sbb
fwait
pop
push
jl
ret
inc
push
ja
dec
rorl
jno
adc
jo
mov
lret
fcmovnb
cmp
mov
scas
adc
or
clc
jmp
jp
rep
std
icebp
fldl
jge
movsl
das
xchg
addr16
push
mov
sub
mov
add
xor
call
ret
aaa
xor
mov
jg
and
mov
inc
lret
mov
jae
and
daa
inc
pushf
loope
mov
or
sbb
jns
mov
adcl
into
xchg
pop
sub
js
fcompl
lahf
mov
mov
pop
xchg
mov
add
into
sbb
push
mov
ficoml
lea
and
and
fiaddl
notl
sbb
sbb
xrelease
mov
and
mov
sub
out
cmp
adc
cmp
sbb
nop
imul
repz
sti
jl
push
cmpl
inc
sub
xchg
inc
std
lods
push
push
rcll
repnz
add
divb
cmc
sub
mov
sbb
lcall
jle
or
xchg
addr16
insb
in
xchg
mov
aam
test
or
sbb
cmp
cmp
or
lock
cmpl
shll
cmpsb
popf
or
dec
fwait
fs
clc
pop
lods
adc
rclb
push
call
popa
lods
sbb
pop
pop
test
js
lret
aad
mov
dec
sti
imul
mov
push
mov
fildll
pop
cmpsl
xor
mov
add
jnp
xchg
faddp
jnp
jp
ret
push
cmpsl
mov
popf
inc
cwtl
or
mov
imulb
jb
and
fidivs
and
shll
loope
add
out
jmp
jp
es
sub
jecxz
lods
shll
ja
mov
push
adcb
cld
push
xchg
aam
cmp
pushf
mov
push
cli
fdivr
add
pop
pop
fsubrl
dec
adcl
add
mov
sbb
or
sub
lods
mulb
das
shrb
stc
in
loopne
xchg
test
mov
inc
push
leave
mov
mov
jmp
aas
cmp
out
fs
pop
ds
jle
lock
sbb
mov
cmp
jb
lahf
push
mov
xchg
xchg
push
push
add
bound
push
and
xchg
shlb
rcll
pop
aad
cmp
push
and
fs
lock
sub
add
mov
push
sahf
cmp
ja
mov
lea
loope
mov
add
mov
fwait
and
lret
mov
cmpb
in
push
test
jmp
mov
pop
xchg
jle
dec
in
jecxz
or
and
mov
mov
scas
sbb
jge
or
dec
or
pop
xchg
jge
das
cmp
and
mov
addr16
out
mov
jns
in
cld
imul
and
push
add
or
cli
sub
dec
mov
cmpsb
sub
push
add
leave
xor
mov
pop
dec
mov
mov
or
movb
jnp
out
psrlw
icebp
push
push
mov
lret
sbb
xchg
loop
arpl
bound
dec
add
mov
repnz
mov
dec
dec
pop
jl
sahf
cli
loop
aad
xchg
add
fldenv
mov
pop
les
int3
mov
lods
cmpsb
in
cmc
inc
call
add
cs
ss
adc
mov
test
xor
clc
in
dec
inc
sub
fcompl
xchg
fbstp
or
lahf
imul
lods
jbe
mov
jge
daa
bound
scas
gs
leave
xlat
js
xchg
sub
jbe
mov
mov
loop
mov
fnstcw
xlat
and
test
mov
jmp
pop
ret
shrb
mov
cmp
jecxz
mov
mov
cmp
mov
aam
pop
insl
add
lea
xchg
pushf
shll
lret
sub
jp
mov
arpl
xor
imul
mov
pop
fdivr
and
mov
pop
popa
xchg
mov
jae
popa
in
jmp
push
data16
imulb
hlt
pop
lods
out
outsb
into
xchg
add
in
jle
imul
inc
xor
inc
js
enter
dec
and
xchg
add
jns
cmp
jns
sar
jle
nop
sbb
jo
adc
mov
sbb
data16
sbb
mov
loopne
mov
pop
adc
mov
xchg
loop
js
push
test
xchg
pushf
push
dec
adcl
in
adc
xor
cltd
aas
mov
test
out
in
mov
enter
aaa
pusha
arpl
lahf
arpl
out
cmp
xor
xor
mov
dec
adc
inc
or
fs
sahf
pop
out
pop
jmp
dec
dec
push
jbe
jp
nop
add
in
aam
mov
pop
pop
sbb
mov
iret
lods
pop
dec
lahf
cs
xor
pop
and
xor
adc
sub
push
push
movsb
and
mov
test
movsl
fsub
inc
dec
push
and
lods
rclb
data16
cmp
mov
jge
sbbl
or
cmp
xor
sub
loope
inc
and
inc
stc
imul
mov
or
and
mov
mov
filds
inc
movsb
lret
dec
mov
into
inc
aaa
push
jnp
mov
les
dec
and
aam
xchg
pop
movsl
xchg
lods
push
dec
sub
xlat
daa
mov
sbb
pop
mov
out
js
dec
in
aas
inc
sbbl
pop
jbe
jbe
test
cli
mov
ljmp
or
push
stc
sub
sahf
inc
ja
inc
frstor
adc
pop
sbb
loopne
fnsave
fimuls
ds
mov
fisubs
shlb
andl
mov
cltd
unpckhps
fs
ror
nop
popa
es
mov
sub
adc
sbb
cmp
fdivr
mov
jp
sbb
pop
cmp
cmc
pcmpgtd
loope
arpl
fcoml
push
mov
in
or
adc
mov
push
inc
and
dec
and
notb
insl
adc
cltd
xchg
inc
lock
pop
adc
and
es
leave
mov
cmp
cmp
test
or
ds
bound
add
mov
sahf
flds
dec
adc
pop
sbb
sub
pop
push
add
rcr
push
cmp
outsl
outsb
ret
mov
faddl
push
aaa
pop
xchg
push
lods
xchg
sub
adc
movsb
lock
cltd
popa
out
hlt
inc
cmp
mov
shlb
jecxz
adc
jnp
es
or
ret
jg
lods
out
pop
xchg
inc
setle
loopne
adc
xchg
mov
test
movsl
movb
jmp
pop
push
out
stos
lret
sub
out
hlt
dec
sbb
ret
sbb
jle
imul
filds
push
mov
enter
enter
sub
dec
movsb
push
jne
mov
fcmovnb
cld
cmp
pusha
sub
lret
sbb
lock
pop
add
sub
mov
jns
pop
stos
xor
fimull
imul
rcr
cmpsb
popa
xor
outsl
mov
jg
sub
inc
pop
dec
xchg
pop
sub
lahf
inc
add
clc
pop
inc
inc
aad
inc
mov
cmp
mov
lods
sub
out
xor
sub
xor
xchg
cmpsb
and
enter
push
ds
mov
adc
pop
mov
pop
jecxz
push
movsb
jp
cmp
lahf
push
out
pop
into
or
or
ror
sbb
enter
push
fstpl
sbbb
jle
pop
pop
repz
out
dec
or
pop
aad
outsl
mov
rcll
rol
test
add
repz
pop
inc
lret
out
hlt
xchg
inc
outsl
fcoml
adc
xorl
ret
out
sub
imul
sbb
or
add
je
and
scas
lds
cmp
push
push
fs
das
dec
sbb
outsb
mov
or
fdivrs
repz
dec
dec
aaa
int
xchg
xchg
dec
push
xchg
out
mov
out
mov
scas
inc
sub
sti
dec
ja
in
popf
data16
into
in
xor
pop
das
or
popa
loopne
and
pop
les
adc
sbb
leave
imulb
mov
add
ljmp
repz
outsb
rcr
mov
fsub
adc
inc
push
mov
xchg
addb
mov
cli
ret
push
or
mov
mov
jno
sbbb
inc
cmp
lock
cmp
ss
add
out
jl
sub
jae
sub
and
insl
cmpsb
sahf
xorb
and
jbe
fsts
xchg
pop
cltd
dec
inc
sbb
jns
adc
inc
mov
lods
stos
push
jmp
arpl
test
pop
pop
xchg
outsl
xchg
lods
cwtl
xchg
out
adc
jp
inc
iret
stos
iret
xchg
je
push
gs
movsl
neg
jmp
in
enter
shrl
je
jp
movl
jmp
and
dec
pusha
addl
call
or
mov
pop
push
into
push
dec
mov
fisttpll
adc
test
lds
nop
nop
jl
xchg
mov
scas
pop
mov
test
lea
mov
sub
lock
test
out
lea
cmp
xchg
push
mov
lahf
leave
and
in
fwait
dec
lret
and
fwait
mov
push
add
mov
dec
mov
aas
gs
add
pop
mov
sbb
mov
pop
xlat
cmp
sar
xor
in
jg
out
inc
mov
jno
imul
movsb
popa
lods
or
in
cld
push
into
jge
sarl
jmp
adc
sti
leave
mov
mov
out
mov
in
sbb
lcall
pop
push
mov
gs
cmc
ret
push
icebp
pop
aaa
pop
adc
adc
out
leave
dec
or
mov
push
pop
sub
mov
and
push
mov
iret
push
jnp
out
sub
cltd
in
add
imul
pop
mov
mov
add
pop
push
cmpsb
mov
orb
jmp
out
add
adc
push
pop
bound
stc
lods
insb
rcrl
cmp
mov
push
inc
push
dec
sub
out
xlat
divl
pop
lahf
shlb
imul
int
ja
cwtl
inc
sbbb
mov
cltd
xor
test
and
loop
inc
lcall
xchg
js
lret
scas
lret
out
lds
daa
adc
lds
dec
push
lock
test
rcl
dec
fcompl
orl
enter
out
pusha
push
xchg
push
xchg
popf
ljmp
mov
mov
push
call
rolb
movsb
xor
scas
rdpmc
and
outsb
pusha
fadd
adc
pop
cltd
es
loop
cmpxchg
push
loopne
xchg
jmp
push
lea
xchg
loope
push
push
clc
incb
fidivl
sbb
sub
test
inc
xor
inc
pop
aam
mov
mov
rcl
negl
ja
cmp
mov
inc
push
cwtl
pop
repz
icebp
lods
dec
and
xchg
inc
jbe
js
and
mov
xor
dec
jge
xor
pop
dec
rcl
mov
loope
js
in
addr16
mov
push
and
aam
scas
xchg
rol
push
test
out
dec
out
mov
dec
cli
mov
sbbl
xchg
dec
dec
mov
or
cwtl
push
outsl
inc
pop
stos
jmp
jno
das
push
pop
ficomps
adc
fdivs
adc
rcrb
jne
sub
cltd
bound
or
stc
dec
xchg
fisttpl
dec
inc
repnz
mov
cmpl
sbb
in
cmp
es
repz
jecxz
xor
movsl
fistl
adc
jle
sub
repz
call
xchg
popf
cld
cmp
sahf
sub
loopne
repnz
mov
mov
les
jecxz
add
imul
dec
iret
lock
cmpsb
pop
dec
shll
pop
mov
cmp
dec
mov
lea
sbb
jle
stos
adc
pop
mov
out
pop
mov
mov
rcr
cmp
sub
stos
and
jo
ljmp
push
cwtl
popa
bound
dec
xchg
stc
pop
scas
or
dec
mov
out
pop
testl
jg
stos
inc
xchg
sbb
sbbl
push
stc
or
ret
out
mov
mov
mov
leave
ljmp
sub
jmp
sub
iret
push
jae
pop
adc
loop
push
sbb
nop
pushf
and
dec
in
mov
mov
push
xor
adc
or
xchg
frstor
mov
cmp
lds
push
mov
dec
jns
out
adc
shll
sti
das
mov
sub
lods
xchg
inc
test
or
insl
in
lret
mov
leave
shll
iret
bswap
pop
lods
jb
dec
and
mov
int3
movsl
cmpsb
mov
pusha
add
pop
pop
into
icebp
mov
mov
out
stos
sahf
mov
fstpl
lds
xchg
ret
sub
or
or
sub
mov
or
mov
xor
inc
or
es
pop
leave
xchg
imul
cmpb
xor
loop
notl
clc
and
jbe
or
ljmp
jne
adcb
sub
jmp
dec
xor
in
loop
loopne
adc
xchg
sub
in
shr
xor
pop
inc
xchg
jne
ljmp
hlt
daa
scas
ljmp
cmp
jl
ror
dec
sub
mov
xlat
cs
inc
lods
inc
sbb
std
mov
fistpll
sbb
stc
sub
xchg
push
and
adc
bound
sarb
lcall
scas
or
adc
call
cmp
lcall
xchg
hlt
lods
out
dec
push
inc
push
enter
out
es
cmp
cld
stos
ret
insb
imul
push
shrl
mov
ja
mov
or
bound
arpl
sbb
xor
and
mov
dec
jl
mov
push
stos
out
sbb
pop
jae
arpl
add
test
add
loopne
ja
gs
cmpsl
mov
or
mov
loop
xchg
aad
cmpsl
test
xchg
bound
push
push
push
ficoms
nop
xchg
sbb
arpl
xor
or
sbb
in
mov
fisubs
xor
jmp
sbbl
mov
xchg
scas
mov
cmp
add
xor
xchg
xchg
out
iret
xor
sbb
fidivl
mov
dec
mov
mov
pop
adc
repnz
inc
push
dec
popa
mov
aad
pop
jne
lahf
or
jbe
cld
imul
cmp
mov
push
mov
inc
dec
daa
iret
shlb
or
loopne
sbb
jl
aas
negb
std
mov
jns
rcl
mov
test
lods
lds
add
pushf
or
es
into
mov
xlat
in
mov
orl
jb
jl
mov
out
pop
iret
in
in
mov
pop
xor
and
lock
cmp
scas
pushf
leave
test
mov
lea
sarw
jns
add
mov
jg
dec
pushf
dec
in
push
lahf
int3
push
cmpb
or
idivl
insb
stos
test
insl
mov
mov
jl
mov
bnd
and
insb
popa
movsb
stc
pusha
jne
jecxz
test
into
test
dec
inc
fidivs
and
jne
dec
sub
test
popf
shll
mov
xor
fsts
mov
ret
inc
jmp
mov
lret
pop
cwtl
sub
push
sub
int
scas
sahf
lods
cmp
dec
mov
int3
frstor
das
push
out
mov
jmp
dec
push
or
and
fidivrs
add
jmp
inc
or
mov
test
inc
lods
xchg
fdivrp
sbb
ljmp
shr
sub
pop
addr16
push
xchg
lods
xor
jg
scas
cmp
adc
fiadds
in
jo
mov
fidivl
aam
adc
xor
mov
cmp
lea
jbe
mov
fistps
lods
mov
cs
sbb
ds
mov
mov
dec
mov
out
cwtl
push
mov
into
push
rolb
add
pop
test
sub
fcmovne
fnstenv
pop
jg
mov
mov
cld
out
and
outsb
outsl
jp
xchg
out
les
xchg
stc
ss
mov
mov
xor
mov
mov
mov
imul
sub
ljmp
mov
cwtl
xchg
rorl
repz
mov
les
outsb
out
xor
es
or
shlb
addl
ljmp
sub
mov
arpl
jno
jnp
push
out
daa
mov
cmpsl
xchg
fadds
int3
lret
sbb
sbb
jne
mov
testb
cmc
sub
adc
adc
or
fmulp
jno
add
lret
cmp
outsb
ds
bound
inc
push
loopne
dec
fbstp
mov
imul
push
hlt
jno
int
lret
mov
mov
mov
jne
xchg
lret
lds
or
cwtl
mov
xchg
gs
stos
pop
mov
cld
and
sub
sbb
insl
xor
adc
push
pop
nop
insb
mov
mov
test
les
lret
outsl
rorl
repz
hlt
js
xor
push
add
mov
call
test
inc
leave
mov
hlt
mov
cmp
push
test
jle
mulb
outsl
ret
out
sbb
sub
inc
ret
lds
mov
xchg
test
pop
ds
out
pop
es
and
hlt
test
js
adc
aaa
cmp
popl
shl
imul
pop
sub
cli
je
mov
fwait
and
xlat
and
gs
and
pop
addr16
lods
cmp
repz
lock
js
xlat
push
in
hlt
mov
push
and
sbb
cmp
push
jb
hlt
mov
jge
nop
pop
cmp
lock
sub
pushl
mov
addr16
arpl
test
call
aam
popf
sub
sti
inc
add
add
inc
cmpsb
mov
pop
pop
decl
insl
push
xor
mov
fdiv
adc
gs
popf
stc
imul
mov
scas
cld
jg
xchg
insb
scas
aaa
outsb
jg
sti
fstps
call
mov
outsl
dec
push
fwait
xchg
push
add
mov
push
xor
mov
loopne
loopne
or
mov
add
sub
mov
mov
or
mov
cltd
jo
push
iret
sbb
icebp
rorl
js
outsb
vmovq
int
xor
dec
out
dec
lods
arpl
mov
jns
shrb
jnp
subl
inc
sub
pushf
push
adc
sub
aam
data16
push
scas
inc
xchg
je
push
adc
pop
mov
rolb
mov
jns
inc
jnp
bound
and
mov
addr16
fsubrp
jp
loopne
sbb
mov
orb
dec
popa
loopne
scas
scas
outsl
or
jg
push
fistl
dec
out
rcrl
push
aad
add
push
cltd
xlat
bound
push
es
cs
pop
repnz
jo
push
repz
mov
pop
into
pop
adc
insl
jo
cwtl
stc
in
inc
and
adc
loop
jnp
daa
push
int
cmpl
mov
and
cli
fistpl
mov
addr16
dec
lock
les
sti
out
ds
mov
jl
jecxz
js
cli
dec
icebp
cmp
daa
xchg
insb
test
inc
jo
sub
sbb
outsb
sub
sub
push
gs
sbb
jns
dec
sub
fbstp
enter
push
orb
jns
push
add
sbb
sbb
ret
imul
mov
cmp
cmpsl
fsts
sbb
data16
stos
mov
and
jno
jle
mov
scas
data16
push
dec
adc
rorl
cmp
cmp
dec
into
inc
add
push
sub
das
test
add
push
dec
mov
cltd
xchg
mov
jge
and
push
cmc
sub
scas
dec
push
jns
adc
or
lret
pusha
mov
jg
daa
push
aaa
adc
loope
inc
aad
jmp
mov
cmpb
lods
das
adc
jne
mov
inc
movsl
fwait
add
sub
push
cmp
pop
rcrl
xchg
xor
dec
and
popa
mov
test
inc
enter
lret
xchg
mov
sahf
mov
dec
mov
ret
adc
jmp
pop
call
fdivp
loope
call
lcall
and
stos
stos
inc
shlb
jge
jp
dec
das
and
sub
out
xor
scas
push
inc
dec
push
or
ret
sub
push
jecxz
push
sub
fstpl
or
mov
xorb
add
repnz
add
test
xor
push
add
mov
sbb
rcr
inc
nop
jecxz
out
sub
jo
fdivrl
sub
movsl
ret
aaa
lds
outsl
mov
xlat
push
test
lds
push
cmpsl
cmp
hlt
negb
xlat
cmp
or
shrl
jp
pop
cmpsb
cmp
jecxz
mov
adc
xchg
xor
cmp
and
data16
add
mov
xchg
pusha
js
insb
gs
dec
inc
das
sub
xchg
or
inc
nop
xor
jmp
sbb
xchg
das
push
out
mov
test
inc
and
mov
out
test
out
call
and
mov
ljmp
addr16
nop
dec
push
popa
lret
fwait
and
sar
and
lock
enter
gs
sbb
or
push
enter
xchg
or
loopne
pop
std
push
and
and
lock
aad
daa
push
mov
scas
inc
rorb
adc
xor
cmpsb
lods
clc
aam
xlat
add
or
cmp
pusha
test
push
subl
addr16
daa
push
pop
aam
insb
cs
and
in
adc
aam
inc
or
scas
mov
fnstenv
out
add
mov
iret
pop
pop
jo
stos
mov
jnp
xchg
test
mov
xchg
push
xor
push
fildl
cld
sti
jae
mov
dec
es
pop
add
mov
in
test
mov
sbb
enter
push
insb
add
sub
loop
and
jle
push
push
les
xlat
xor
daa
shrl
jmpw
popf
inc
sbb
popf
and
jb
fildll
jb
stos
aas
or
mov
add
imul
stos
mov
cli
push
fistpll
enter
roll
jnp
xchg
test
sbb
loope
jbe
negl
outsl
jno
mov
pop
scas
dec
sbb
xchg
mov
fnstsw
shll
daa
jns
lcall
add
xchg
int
sbb
nop
jp
ret
cmpsb
test
push
jecxz
test
push
cmp
push
sbbl
inc
mov
xchg
aaa
push
push
repnz
addr16
mov
sti
push
xor
xorb
sub
push
jns
test
int
cmp
daa
int
sbb
fcomps
mov
push
cmp
and
clc
icebp
or
xor
dec
outsl
inc
dec
jb
cwtl
inc
pop
lea
inc
jl
or
sahf
pop
sbb
sbb
xor
into
das
jecxz
push
mov
add
or
out
sbb
dec
xchg
repz
fwait
lcall
dec
jae
push
xor
mov
push
lcall
lea
ljmp
movsb
fs
fnsave
dec
je
pop
and
jmp
btc
stos
sbb
add
lretw
fimull
cmp
aad
call
fwait
repz
xchg
cmp
xchg
xorb
es
pushf
lret
xchg
aaa
xchg
dec
icebp
pop
test
and
pop
stos
xchg
or
xor
in
lret
inc
out
xchg
jo
fldl
shll
and
shlb
push
or
fs
lds
sbb
dec
and
fists
add
and
rep
lods
lds
int3
push
lcall
sarb
sbb
fldl
or
sbb
sub
std
lret
dec
ds
lds
xchg
jbe
fidivl
les
fstps
dec
testl
fmuls
aam
mov
fbld
adc
jns
popf
ja
pop
cwtl
xor
adc
lods
lds
xchg
jge
xchg
std
fcmove
or
or
cmc
sbb
addr16
jbe
push
push
add
xchg
adc
sbb
push
aas
data16
cmp
push
and
mov
ret
inc
and
push
mov
lods
xor
xor
mov
std
pop
jnp
xor
push
mov
test
lods
xchg
out
sarb
cmp
mov
fdivr
std
jl
dec
sub
push
movsl
mov
aad
adc
loop
mov
lods
mov
pop
dec
sahf
adc
xchg
jle
scas
xchg
inc
push
lods
aam
add
mov
cmp
lret
sbb
push
sahf
das
clc
out
adc
dec
out
sbb
xchg
pop
pop
cmp
scas
add
mov
adc
dec
cld
aaa
sub
daa
sbb
sahf
dec
loopne
adc
aas
adc
or
call
shlb
or
lahf
xchg
or
inc
dec
les
imulb
jge
cmpsl
jmp
pop
mov
repnz
scas
mov
test
lock
mov
test
addr16
sbb
enter
mov
jle
mov
out
fadds
jb
dec
xchg
repnz
lcall
popf
jp
sbb
inc
inc
scas
lret
cmp
adc
mov
scas
mov
jns
xchg
lret
pop
mov
mov
lret
xor
and
jp
gs
incl
daa
add
adc
cmpsl
test
scas
and
shl
pop
inc
mov
add
xchg
push
andl
jl
cmp
or
add
pop
mov
cmp
add
lcall
cld
scas
jg
icebp
cmpsb
pop
pop
jne
ret
stc
cmpb
dec
ror
popf
adc
scas
push
push
sub
std
repnz
inc
adc
loope
and
push
jb
sub
loop
and
adc
inc
fiaddl
stc
push
xor
int3
ja
push
shlb
or
jo
shl
dec
aad
test
adc
idivl
sub
cwtl
imul
or
les
stc
and
lret
dec
flds
jae
mov
push
add
mov
js
xor
out
xchg
rorb
push
and
and
inc
orl
or
jno
and
pop
mov
cmpl
sbb
addl
ficompl
test
xlat
aaa
js
cmpb
das
dec
das
push
mov
fstl
in
mov
fildll
push
mov
dec
fsubr
ss
or
mov
lds
cwtl
inc
adc
jmp
jo
stos
pop
ret
sub
fistps
xchg
loope
cld
sti
ret
hlt
shl
sub
and
cmp
fs
call
mov
lea
push
push
sbb
adcb
loop
mov
mov
jb
and
sahf
imul
pop
xchg
cmc
push
lahf
je
imul
jg
xchg
lret
push
sbb
mov
adc
aas
and
adc
xchg
add
aaa
bound
xor
jne
add
inc
mov
sub
imul
xlat
shr
xchg
adc
sbb
call
cld
mov
js
enter
xchg
fldt
test
sbb
pop
jae
push
mov
inc
fisubl
outsl
xor
jno
add
mov
stos
xor
xchg
mov
int3
and
dec
mov
mov
imul
xchg
scas
xor
rcl
repnz
inc
dec
add
mov
add
test
xchg
dec
call
cmp
fsubl
bound
inc
jg
pop
shlb
enter
jmp
dec
fimull
mov
movsb
pusha
enter
adc
popl
or
addl
mov
out
ja
jmp
dec
mov
aad
es
in
inc
adc
xchg
call
cmp
je
xor
jb
xchg
sahf
movsl
rclb
mov
test
fisubrs
mov
stos
cmc
orl
sub
imul
test
icebp
push
gs
aas
jo
xor
int3
push
hlt
cmp
mov
and
mov
cmp
mov
ret
adc
cmpsb
jns
mov
lret
xchg
add
xor
fbld
rcr
jae
fistps
test
mov
int3
les
cwtl
adc
xchg
orb
mov
nop
push
xchg
ds
jbe
adc
mov
loopne
or
pop
jno
mov
jmp
pop
les
pop
pop
dec
mov
lods
push
jb
jp
inc
inc
movsb
push
jno
rcll
push
cli
dec
rcl
mov
inc
mov
pop
rolb
es
xchg
or
pushf
mov
and
repnz
push
jno
popl
pop
out
imul
dec
in
adc
adc
iret
arpl
lahf
ret
xlat
imul
aaa
xchg
je
call
bound
or
pop
stos
xor
cmp
jno
outsl
cmp
push
push
adc
pop
pop
cmpsl
jbe
mov
sbb
inc
fdivrl
or
adc
push
sbb
or
ret
nop
mov
sub
mov
and
scas
iret
aam
lea
mov
push
pop
fldl
and
mov
sahf
stos
cmp
jmp
test
xor
loopne
test
jns
add
jae
imul
in
xchg
rcrb
ljmp
sub
out
std
xchg
aad
xchg
add
pop
in
xor
fisubl
hlt
cmpsl
jne
insl
popa
sarb
xor
push
mov
adc
popa
dec
and
dec
mov
inc
lret
fcomip
mov
idivb
incb
test
out
lods
xchg
push
and
adc
cmp
gs
scas
cwtl
inc
jl
shlb
je
dec
mov
mov
xchg
out
push
cmpsb
xchg
xor
dec
mov
add
aad
and
jg
xchg
xlat
negb
cld
jl
fsubl
cmpsb
xor
mov
in
mov
and
cmp
push
inc
repnz
aas
call
loope
test
dec
pop
das
in
mov
filds
jbe
das
mov
call
data16
sub
xor
dec
jl
adcl
int
dec
mov
loope
fs
sub
cmp
lods
stos
adc
xchg
lods
sbb
mov
mov
cmp
push
mov
ret
ss
sub
or
push
and
jg
jne
ret
or
addb
or
sbb
fsubl
clc
aad
xchg
hlt
pop
es
pop
and
scas
jb
repz
sbb
push
out
movsb
stc
mov
aam
push
mov
in
imul
lahf
add
dec
icebp
pop
xlat
ror
dec
ficoms
in
jmp
cltd
repnz
sbb
cmc
imul
xor
ds
xor
push
scas
sbb
gs
cmp
leave
jg
sbb
jb
aaa
or
and
adcl
jnp
inc
sub
mov
aad
hlt
inc
inc
aad
sbb
popa
add
loopne
sub
ret
mov
mov
mov
jo
fdivrp
shr
lods
addr16
jmp
mov
lret
inc
push
cmp
aam
ss
test
pop
fcoms
inc
dec
aad
sub
ret
popf
rcrb
jg
fdivs
pop
cmpl
mov
adc
jbe
into
sub
push
mov
push
pop
jmp
scas
out
mov
iret
fistpl
mov
xchg
scas
in
out
in
add
int
sub
ret
les
stos
scas
leave
sbb
pop
mov
inc
cltd
test
jmp
cmp
add
out
dec
mov
jmp
ljmp
aad
lds
in
roll
lahf
or
dec
sbbb
mov
fs
popa
outsb
lahf
push
push
repnz
dec
call
nop
std
mov
stos
xor
add
fidivs
or
pop
cmp
cmp
sub
mov
enter
sbb
mov
imul
xlat
cltd
xchg
loop
jo
dec
xchg
in
ljmp
out
xchg
inc
js
je
insl
dec
outsb
ss
dec
adc
cmp
les
adc
xchg
in
imul
pop
xchg
fs
dec
inc
sbb
adc
or
test
cs
jge
mov
adc
add
inc
push
dec
lds
xor
faddl
mov
pushf
inc
xchg
push
push
mov
cs
int
outsb
lea
loop
dec
and
fnstenv
mov
add
or
scas
stc
push
mov
outsl
fnstenv
hlt
stc
fs
inc
fwait
jecxz
shlb
sbb
stos
mov
cli
lcall
inc
cmpsb
mov
outsl
pop
clc
pop
xchg
or
imull
ret
repz
mov
push
xchg
sbb
fidivl
or
xchg
lret
mov
push
movsb
js
ljmp
loopne
add
dec
xor
cltd
fnstenv
xor
xchg
lea
inc
fldl
cmp
stos
pop
push
jp
dec
icebp
dec
mov
insl
fsubr
or
stos
jmp
xor
xchg
in
lods
cmp
nop
std
out
cmp
scas
hlt
rolb
mov
rclb
sbb
aad
jnp
cmp
movsl
pop
pusha
aaa
jle
pop
out
out
add
push
pop
cltd
jb
insb
adc
shlb
mov
gs
int3
dec
xor
and
es
lret
cs
in
and
sbb
jmp
test
cli
add
aaa
cmp
mov
mov
push
int
movsb
stc
in
mov
sub
mov
xor
mov
imul
cli
lret
iret
jns
cmp
aam
jnp
push
negl
mov
lret
adc
rcll
pushf
xchg
pop
xchg
and
rclb
test
xchg
shrb
leave
jmp
lods
dec
sahf
add
test
bound
inc
addr16
pushf
sub
xor
ret
jmp
rol
aas
push
in
xor
movsb
pop
or
and
xchg
in
pushf
and
ja
clc
jo
ret
add
fistpll
out
xor
xor
jl
out
scas
cmpsb
fldenv
jecxz
xchg
sbb
adc
mov
mov
and
adc
mov
stc
aad
pop
leave
notl
dec
push
mov
sub
imul
jno
ret
push
pusha
and
pop
xor
push
mov
daa
xchg
fmull
sub
rorl
test
xlat
sbb
or
xor
pop
jbe
cmpsl
inc
stos
add
lret
jns
data16
in
hlt
xor
pop
xchg
shlb
push
fisubrl
and
lods
imul
xchg
push
shrb
adc
inc
jg
mov
cmp
cmp
jecxz
sahf
hlt
xchg
mov
inc
add
sbb
adc
ds
jnp
jl
pop
push
jae
dec
and
stos
mov
mov
push
xchg
loopne
xchg
in
mov
mov
inc
add
mov
sub
aam
sarl
in
sbb
loopne
daa
ja
psraw
add
mov
pop
lret
inc
ds
dec
mov
pop
and
xchg
pusha
stos
out
aaa
dec
aas
and
pop
and
lcall
scas
pop
jnp
fwait
mov
jno
ret
xor
imul
push
adc
test
das
jp
sub
fcmovbe
gs
lahf
adc
shrb
int
stos
clc
or
xlat
xchg
and
and
ss
out
int3
mov
mov
into
xchg
mov
out
test
mov
push
stc
int
xchg
daa
jmp
inc
stos
je
pop
add
lods
aad
fstpt
and
iret
fmull
mov
jle
sub
cs
clc
pop
int3
add
je
bound
adc
fisubrl
lock
popa
sub
and
icebp
call
inc
mov
aas
sub
push
sbb
push
sub
lods
fmuls
ds
mov
icebp
fwait
bound
pop
xchg
cli
xor
repz
mov
mov
mov
outsb
mov
loope
loop
mov
mov
inc
loop
icebp
and
push
dec
xchg
mov
lret
stos
ret
ss
dec
mov
or
sbb
mov
sbb
lahf
add
dec
js
jmp
inc
enter
cmpsl
pop
je
sub
out
in
cmp
jae
sbb
js,pn
aaa
push
fnsave
mov
loopne
dec
imul
push
scas
test
cmp
xor
cld
out
add
jmp
mov
jg
dec
out
push
xor
shll
push
std
sbb
out
jnp
push
and
push
out
sbb
jbe
mov
insb
sub
shll
jl
mov
inc
xchg
in
mov
jg
mov
dec
dec
or
xor
std
pop
lods
sbb
fldl
les
fnstsw
xchg
sbb
test
mov
and
mov
mov
repnz
mov
out
movsb
jae
clc
jo
aaa
dec
sti
adc
mov
sbb
scas
sti
pop
mov
or
addb
mov
push
or
test
xchg
divl
clc
jns
sbbb
xor
shlb
loop
mov
mov
mov
inc
les
daa
pop
xor
das
mov
jnp
mov
insb
mov
mov
push
scas
push
in
insl
enter
ret
test
mov
rclb
gs
mov
or
mov
popf
mov
xchg
push
subl
mov
xchg
andl
cmc
pop
shll
push
fisubl
cmp
outsb
jno
ss
xchg
test
jle
popf
ljmp
out
xchg
xor
insb
sub
adc
fs
addr16
mov
mov
push
icebp
lea
out
push
or
in
les
lcall
lcall
loopne
dec
mov
mov
inc
jno
jae
movsl
leave
jnp
mov
xchg
jle
sub
iret
in
or
lock
and
xchg
sar
dec
xor
mov
rclb
mov
and
sbb
sbb
sbb
jns
add
pop
sbb
sub
and
js
xchg
lret
xchg
fwait
inc
sbb
adc
inc
push
xchg
dec
cmp
add
xorl
shrb
call
adc
xor
xlat
mov
pop
or
iret
adc
pop
div
scas
mov
inc
in
mov
adc
mov
mov
lods
loop
js
dec
loopne
cmp
imul
scas
cld
in
inc
aam
dec
inc
cmc
outsl
popa
pop
adc
shrb
mov
test
sub
cmp
lcall
out
fisubs
jns
mov
cwtl
mov
call
inc
and
add
shrb
add
pop
mov
push
mov
loopne
enter
daa
and
idivb
pop
add
test
movsb
xor
int
jecxz
cmp
stc
das
loop
mov
mov
loope
or
int3
jg
sub
jg
dec
je
xchg
loop
popa
xchg
mov
sub
jns
jb
std
das
dec
cwtl
pusha
ret
and
mov
mov
xor
out
xor
ljmp
addl
and
jmp
sbb
mov
push
adc
ret
adc
or
lahf
daa
push
pop
cmpsl
cli
or
lea
add
inc
pushw
sub
das
adc
cmp
ja
xor
daa
xor
push
mov
pop
sarl
ret
daa
cmpsl
push
addr16
das
sub
pop
mov
mov
lahf
mov
adc
outsb
aaa
gs
js
mov
jg
adc
int
popf
fxch
cmp
mov
loopne
nop
mov
pop
test
jge
adc
or
jl
pop
je
and
add
out
dec
jg
and
mov
xchg
dec
fnsave
dec
sbb
lret
in
mov
push
xchg
fwait
push
or
and
inc
pop
outsb
pop
and
push
xchg
xchg
cld
push
call
sahf
adc
adc
rcll
xchg
sub
mov
data16
mov
movsb
lods
adc
inc
shrb
lahf
mov
mov
ja
shrb
fdivrl
cmp
mov
mov
clc
and
adc
jb
jnp
push
outsb
xlat
lea
jp
inc
dec
mov
or
fmulp
jne
mov
or
fsubr
add
jmp
lds
pusha
jle
mov
mov
or
and
popf
mov
mov
add
add
jbe
adc
add
push
push
push
or
xchg
cmp
mov
repnz
inc
rorl
ds
jp
and
fstp
push
scas
cmp
aas
mov
pop
jp
stos
cwtl
mov
mov
xchg
sub
sbb
insl
je
mov
mov
fadds
pop
mov
jb
xor
hlt
repz
dec
cmpsb
jge
mov
rcr
call
mov
dec
dec
mov
loope
push
flds
push
inc
popa
fiaddl
cmp
je
int3
sbbl
cmp
stos
pop
sbb
movsl
xchg
ja
jecxz
xchg
in
and
testl
pushf
hlt
mov
imul
arpl
jne
mov
js
cmp
imul
lea
sub
adc
push
inc
mov
cltd
ffreep
jns
cs
repz
sub
cmp
fucomi
aaa
and
jp
std
cmc
jne
insb
mov
lahf
jnp
iret
imul
fistpl
shrb
mov
faddl
fdivrl
pop
jb
and
mov
sub
addr16
mov
cmpl
adc
mov
scas
out
mov
repz
pop
out
dec
sbb
fcmovnb
pop
aam
fistps
pusha
inc
mov
imul
add
cmpb
mov
xor
mov
push
lods
inc
dec
pop
cmc
and
sub
mov
xor
push
xor
and
stos
mov
lret
pop
enter
xor
push
cmp
bound
pop
cmpsl
push
xchg
inc
sub
pop
cmpsb
cmp
rolb
sub
adc
arpl
pop
iret
or
mov
xchg
cmp
jo
stos
lahf
sbb
or
mov
push
mov
in
push
jae
xor
jecxz
inc
xacquire
loop
sbb
outsl
int3
mov
adc
mov
jge
mov
push
ds
cmp
xchg
mov
xchg
dec
mov
xchg
popf
rep
cmc
sub
and
mov
xor
fsub
icebp
in
jmp
jo
lcall
add
sahf
push
outsb
adc
adc
or
cmp
gs
stc
xchg
pop
sub
shll
pop
xor
jno
aaa
arpl
pop
xor
jge
call
xchg
repnz
popf
aas
jne
inc
adc
push
mov
push
sbb
test
xchg
ficoms
lahf
or
jbe
add
in
iret
movsb
cmc
test
xchg
add
outsb
inc
lcall
ror
ja
lcall
mov
popf
movsl
sbb
in
fisubrs
loope
xchg
lock
testl
cltd
jno
xchg
cmp
fdivr
ret
push
push
ds
jmp
and
cmovae
cmc
packuswb
xchg
pop
aaa
jmp
leave
mov
idiv
imul
dec
mov
sarb
out
mov
cli
popf
mov
jp
jecxz
pop
iret
ds
lret
adc
pop
or
jmp
leave
repz
sbb
in
aas
lret
sbb
lods
mov
stc
pop
mov
shrl
nop
pop
pop
sbb
aad
pop
lods
xor
push
mov
loop
xchg
xchg
xor
cs
inc
push
int3
outsl
fmull
sbb
inc
push
fld
int
cmc
xchg
and
dec
mov
inc
int
xchg
roll
mov
les
mov
mov
inc
addl
fs
and
and
push
fucomp
in
subps
adc
lret
loope
sbb
pop
cmp
enter
xor
cmp
xchg
stos
and
es
sub
lods
stos
inc
lcall
mov
movsl
dec
test
icebp
jo,pn
mov
xchg
jns
or
sbb
test
orl
hlt
das
fcomps
mov
and
je
xchg
jo
mov
jno
dec
jmp
dec
rcl
ret
cld
xchg
std
call
or
pop
xlat
sbb
divl
addl
lods
faddl
jae
ljmp
sub
inc
sub
test
push
lds
and
jno
ljmp
mov
sti
mov
or
jnp
std
test
adc
inc
cwtl
cmpsb
daa
stos
das
sub
les
adc
rcl
scas
mov
xchg
shll
pop
repnz
dec
rcrb
push
mov
daa
mov
mov
clc
adc
fistpl
inc
jne
xchg
jle
xchg
faddl
cmp
in
and
sbb
nop
mov
inc
fiadds
mov
cmp
aad
push
lret
adc
sbb
or
inc
outsb
cmp
add
mov
xor
movsl
jne
divb
cmp
ljmp
sar
mov
pop
xchg
inc
jbe
mov
add
loop
inc
in
xor
mov
lret
add
jmp
or
adc
clc
inc
add
and
or
repnz
pop
xchg
in
cmp
out
mov
mov
out
sbb
dec
xchg
jo
icebp
mull
rcrb
sub
test
icebp
sbb
in
cli
pop
and
fdivp
pop
mov
aad
sub
mov
or
adc
imul
push
imul
jo
imulb
jmp
std
insb
pushf
sbbl
mov
dec
add
je
rcl
sbb
ds
js
cmp
push
jne
dec
aad
cmp
lret
incb
pop
test
lds
jne
insb
push
mov
rol
jo
frstor
mov
or
sub
dec
mov
ds
test
pushf
adc
or
repnz
mov
dec
jg
cmpb
movsl
and
inc
jp
mov
rorb
dec
iret
enter
enter
sbb
or
std
xchg
subl
scas
add
and
insb
and
and
inc
sahf
mov
cltd
int
sbb
push
sbb
sub
add
xchg
push
xor
and
push
insb
dec
sbb
mov
push
adc
or
movsl
jl
xchg
cmp
mov
addb
in
mov
addr16
iret
aas
mov
call
jle
loop
dec
jge
jmp
push
pushf
mov
orb
push
sar
push
inc
cmpsl
jg
push
pop
adc
and
popf
xor
shlb
and
ds
jmp
mov
add
sarb
and
out
xor
nop
mov
xor
fs
jne
fstpl
mov
mov
push
loop
dec
inc
pushf
mov
hlt
or
cmpsb
lea
sub
lea
movsb
ja
fildl
sub
pushf
addb
data16
push
pop
or
fiadds
call
adc
cltd
test
test
idivl
sbb
mov
repnz
lret
or
in
jp
out
pushf
das
stc
jno
imul
popa
inc
pop
adc
jp
mov
int3
cmp
scas
adc
or
sbb
jne
ss
mov
mov
sub
int
sahf
fdivrl
cmp
mulb
stos
or
xchg
dec
mov
stc
sub
cltd
iret
or
call
pop
add
push
outsb
and
sbb
subb
mov
sub
clc
jle
into
jae
cmp
stc
add
pop
lret
outsb
mov
jmp
cmp
sarl
cmc
fucomip
pusha
lahf
faddl
adc
xchg
cwtl
pop
imul
mov
adc
cltd
mov
or
shlb
push
pop
pop
cmp
test
cmp
push
dec
push
xor
imull
dec
rclb
cwtl
scas
mov
mov
mov
pusha
adc
jb
adc
xor
imul
cld
jmp
push
addl
filds
jbe
loope
daa
ljmp
dec
loope
mov
ret
sbb
adc
insl
stos
pop
sbb
mov
dec
xchg
gs
pop
xchg
hlt
popa
jnp
shl
inc
xor
daa
cli
ljmp
das
mov
stos
or
scas
mov
dec
or
ss
xchg
cmp
imul
leave
xlat
jecxz
jns
dec
stc
test
pusha
into
inc
cmp
insb
into
test
push
sahf
mov
sub
adc
and
mov
jecxz
cli
or
xor
nop
fs
imul
lods
pop
xchg
gs
push
add
dec
repz
scas
pusha
dec
mov
data16
push
lods
dec
sbb
push
jne
rcll
add
in
out
test
into
sbb
or
add
sbb
jp
in
sub
xchg
fxch
push
movsb
popa
lcall
or
sub
mov
jae
sahf
test
sbb
fs
adcb
mov
push
push
sub
divb
push
xlat
mov
add
out
push
enter
out
sbb
out
jne
cs
rcll
cmpsl
pop
xchg
das
pusha
xor
dec
jae
jns
addr16
into
testl
add
pop
add
mov
cmp
xchg
ret
rcrb
leave
xchg
push
pusha
ljmp
repz
pop
cmp
xlat
cmc
or
sbb
jp
xor
inc
pop
fstps
mov
dec
ret
xchg
mov
movsb
xlat
movl
ret
cmpsl
xchg
dec
cmpsb
cmpsl
xor
sub
pop
xor
push
sub
mov
and
or
rolb
rcrb
mov
lahf
or
push
pushf
lea
xor
jo
insb
test
test
leave
adc
scas
pop
sbb
jne
int3
and
add
scas
add
das
hlt
add
lret
stc
icebp
cmp
adc
xchg
out
ret
dec
rorl
mov
or
sbb
jns
or
add
loopne
lds
icebp
test
inc
decb
xchg
cmp
test
in
pop
dec
cwtl
lods
insb
jecxz
arpl
cmpl
or
ret
xor
dec
sahf
out
jno
jecxz
test
inc
mov
sbb
ficoml
clc
jnp
xchg
sub
mov
jbe
pop
xor
xchg
and
dec
push
add
lret
adc
add
pop
js
leave
je
mov
dec
push
adc
jns
lock
popa
hlt
mov
xor
xchg
jo
adc
fs
scas
pop
repz
push
pop
and
mov
aad
push
xchg
pop
jb
pop
popa
xchg
out
cltd
lock
inc
cs
jp
rorl
imul
jmp
enter
sar
ret
sub
or
cmp
lahf
push
scas
pop
sbb
imul
lds
jge
mov
call
push
lods
xlat
popa
addb
pop
mov
gs
in
sub
add
jp
xchg
std
xchg
in
test
mov
jp
sbb
pop
adcb
rcr
out
sub
sub
jb
ss
in
mov
xor
bound
fcoms
ds
mov
mov
pop
add
std
sub
movsb
addr16
aas
repz
je
imul
out
popa
aam
and
shrb
popf
hlt
cmp
fs
ljmp
cltd
fcmovnb
cli
lcall
imulb
mov
fldt
pop
pop
cmp
andl
pop
movsl
mov
adc
xorb
repz
xor
scas
lods
aad
js
stos
dec
lret
in
inc
and
mov
lret
movsb
ret
cld
scas
lock
mov
cmc
lock
lds
jge
imul
inc
push
repnz
pop
push
in
scas
push
xchg
mov
pop
test
push
aas
adc
jge
cmpsl
fisttps
and
cli
cmpsb
sbb
adc
sbb
jbe
outsl
popa
clc
test
out
movsb
or
cmpsl
loop
add
jg
and
sub
mov
fldenv
or
sub
add
jg
push
mov
xor
xor
aas
lock
jns
je
mov
and
xor
sub
scas
mov
scas
inc
mov
imul
xor
dec
mov
add
push
imul
adc
and
dec
add
shufps
in
rclb
mov
cmp
dec
pop
cli
gs
je
stos
sbb
mov
push
dec
test
xchg
sub
into
in
test
outsb
into
movsb
and
dec
mov
dec
xchg
in
int
cmp
xor
popa
dec
dec
add
mov
int
and
stos
dec
ja
cmp
js
insb
xor
fisttpl
in
sbb
and
mov
ja
jecxz
mull
in
push
repz
pop
jnp
in
mov
icebp
pop
cltd
aaa
cmp
mov
cld
fisubl
mov
xorb
stc
push
dec
mov
pop
inc
insl
iret
adc
push
jnp
data16
cmp
inc
int3
loopne
outsl
xor
dec
ror
mov
test
in
adc
pop
and
popa
roll
cwtl
out
xchg
xor
sbb
fwait
mov
sbb
push
lds
movl
outsl
ret
adc
sub
scas
movsb
sar
xchg
scas
push
mov
int3
pop
movsb
sub
lds
xchg
fistps
cmp
sub
dec
add
cmp
loopne
dec
int
jecxz
sub
push
mov
cmp
out
ret
mov
mov
enter
and
add
xchg
cmpsb
push
lret
xchg
jnp
lods
mov
subl
lcall
cmp
or
xor
jp
cs
rcrl
sbb
jnp
das
scas
jbe
xor
lock
pop
sub
and
in
jmp
pop
es
mov
fisubl
xchg
stos
jo
pop
dec
sub
mov
cmpsb
mov
int
enter
inc
cmpsb
push
mov
xchg
clc
push
lods
dec
mov
pop
push
xchg
loopne
into
fsubrl
push
mov
int3
mov
subl
mov
add
fs
les
loope
popf
repz
mov
int3
test
pop
xchg
adc
dec
push
add
stc
xchg
cmpsl
int3
das
lods
dec
sub
ret
push
mov
xor
addr16
sbbl
pop
adc
dec
lods
pop
sti
adc
adc
mov
mov
hlt
fimull
dec
adc
ret
stc
and
icebp
sbb
in
fisttpl
ret
fistpll
cmp
sbb
hlt
ret
addr16
push
pop
mov
jmp
or
push
pop
push
out
sub
aaa
loopne
into
add
mov
dec
jne
mov
shrl
iret
pusha
jnp
xor
push
sbb
push
mov
stos
push
push
xchg
inc
cmpb
insb
mov
popl
dec
imul
jle
cmp
pop
pop
push
clc
lods
fbstp
stos
mov
or
pop
mov
jmp
xor
push
daa
imul
ljmp
sub
lock
add
aaa
fsubl
jbe
sahf
push
mov
mov
adc
pop
jg
rorb
push
lea
push
dec
add
addl
xor
iret
inc
popf
and
daa
mov
and
cli
mov
mov
lock
js
inc
and
outsb
dec
inc
or
ja
sbbl
test
push
sbb
in
cltd
daa
or
nop
leave
std
enter
arpl
mov
fldcw
data16
xchg
popf
popf
imul
out
rcr
ja
les
call
call
adc
mov
cs
mov
lds
inc
push
xor
jb
mov
cmp
lods
cmp
loope
jmp
in
ljmp
orb
mov
push
mov
cmp
insb
sbb
lret
and
and
xlat
out
loope
cmp
jbe
int3
shrl
sbb
je
or
mov
sub
sbb
dec
jb
cli
subl
jb
in
pop
clc
lret
int3
lds
pop
jl
push
test
andb
es
xchg
sti
and
inc
pop
mov
sub
cltd
cmp
fistpll
jmp
xchg
loop
dec
ss
iret
aad
aaa
pop
int3
loop
fucomi
dec
js
rclb
cltd
sbbl
inc
aaa
dec
test
int3
dec
dec
xor
jecxz
or
adc
and
popa
dec
ljmp
int
out
popf
jno
add
cmp
jecxz
fs
xadd
vmovsldup
mov
or
mov
idivl
movsb
stos
test
jb
mov
js
jae
insl
cmpsb
mov
xchg
call
pop
pop
mov
mov
loope
gs
mov
cmp
inc
jbe
xchg
cltd
sbb
or
inc
popf
ja
int
bnd
loopne
lahf
dec
aad
sahf
les
add
push
movl
xor
sub
jle
movsl
sbbl
neg
xchg
sbb
data16
dec
lods
xor
scas
mov
popw
clc
mull
or
xchg
dec
call
or
inc
js
jae
mov
push
mov
jecxz
in
adcb
dec
pusha
jae
or
into
xchg
or
lock
arpl
cli
inc
repnz
into
xlat
xchg
pop
pop
into
dec
cmp
add
fsubrl
adc
subl
or
push
or
jmp
stc
insl
insb
cmp
push
sbb
je
cmpl
push
push
mov
and
push
jnp
addr16
pop
test
mov
pop
push
xchg
roll
and
pop
decb
and
mov
sti
aas
outsb
inc
mov
in
mov
packsswb
mov
stos
imulb
pop
iret
adc
add
xchg
arpl
mov
inc
pushl
mov
mov
or
sti
std
hlt
daa
in
ret
dec
xor
dec
mov
cwtl
lods
outsl
lret
xchg
lds
incl
or
jnp
jmp
dec
insl
cmp
les
mov
cld
out
aas
je
dec
popa
add
mov
arpl
xor
loope
push
add
test
xor
sub
fistpl
mov
cmp
dec
pop
call
scas
jo
fcoms
jmp
push
add
sbb
loope
cld
ljmp
push
sub
and
nop
lea
mov
pop
fsubrl
fdivrl
lea
test
mov
out
mov
roll
cmp
sub
jmp
repnz
add
inc
jg
ljmp
sub
dec
stos
rolb
mov
mov
and
jg
stc
leave
call
mov
ljmp
mov
xchg
mov
call
addb
insb
xor
sub
popa
or
adc
cli
iret
sub
dec
xor
leave
xchg
jb
sub
andb
xor
push
sub
enter
pop
sbb
fnstsw
xor
and
hlt
and
movsb
push
cs
pop
push
mov
loopne
xchg
repnz
fistps
stos
add
jmp
push
push
xor
jmp
mov
ds
out
arpl
test
daa
sub
pop
lcall
cmpsl
sub
enter
pop
dec
shll
lock
test
mov
mov
stc
cmc
cs
fistl
mov
enter
rcl
mov
xor
pop
shl
mov
or
mov
mov
mov
sub
test
out
push
sub
mov
add
scas
nop
int
out
sbb
inc
cmpsl
adc
adc
fimull
push
xchg
jp
xchg
mov
daa
pop
cmpsb
aas
shll
xor
cmp
add
aad
repz
cmp
not
and
jb
test
test
push
mov
mov
jo
add
addr16
xchg
scas
push
dec
jo
insb
lret
in
in
push
out
jg
das
pop
jb
leave
push
jmp
sbbb
jno
xchg
addr16
out
mov
inc
in
arpl
mov
push
push
lret
cmpsb
mov
jge
ret
sbb
test
xchg
pop
fwait
cmp
cli
stos
adc
cmpsl
xor
sbb
lods
pop
aaa
pop
fidivs
fisttpll
jno
or
push
out
pop
imul
xor
pop
roll
testb
push
xchg
jae
lds
jno
adc
popf
pop
xchg
mov
sbb
push
lods
and
mov
push
cmpsb
int
mov
call
xchg
sbb
sbb
fadds
jmp
cmp
sbb
xor
xchg
or
mov
mov
mov
pop
cmc
mov
movsl
cmp
push
fstpt
ret
cmp
pop
push
mov
mov
test
push
cmc
jmp
rcrl
movsl
ret
test
push
cmp
jnp
xorb
pmullw
mov
xchg
jns
push
fcmovu
push
js
push
call
pusha
add
enter
cmpsb
and
test
push
sbb
scas
pusha
mov
aaa
sub
lea
in
subl
daa
push
push
sub
jecxz
mov
pop
iret
insb
xchg
pcmpgtd
push
rcrb
push
ss
clc
mov
inc
pop
xchg
stc
lret
in
in
cltd
push
stc
fnsave
cld
mov
fcmove
sbb
sub
fists
pop
jae
jle
cmpsb
lods
into
popa
cli
jmp
aas
inc
and
sbb
mov
cmp
xlat
stos
testl
popf
push
and
pop
les
andb
jns
mov
sub
add
xchg
jmp
pop
adc
push
insb
rorl
sbb
shll
nop
dec
mov
cmpl
daa
hlt
mov
sbb
jo
mov
aas
cmp
ljmp
int3
ljmp
pop
insl
sti
jbe
lds
sbb
jg
cs
and
and
aad
scas
gs
sbb
int3
js
or
add
in
loope
xor
add
pop
outsl
enter
pop
and
lea
adc
push
mov
gs
or
out
rolb
xor
fsubr
fs
mov
cld
ret
cmpsl
mov
jne
sbb
jge
cmp
mov
movsb
pop
leave
loopne
xchg
les
xlat
fcoml
out
dec
jecxz
xlat
out
sbb
mov
repz
stc
mov
mov
jnp
stos
add
inc
pop
push
mov
int3
rcrb
push
shr
decl
imul
aam
popf
cmp
stos
cwtl
fmuls
xchg
push
or
mov
sbb
mov
jno
add
mov
in
jl
cltd
mov
test
sub
test
pusha
leave
push
mov
test
sbb
leave
pop
cmp
lea
jge
add
je
sub
gs
aaa
hlt
fnstcw
sbb
call
loopne
popa
jg
xchg
mov
shl
mov
xchg
mov
jl
dec
in
ja
orb
push
fs
xchg
push
xchg
test
subl
sbb
pushf
pushf
mov
out
lock
and
push
jns
xchg
mov
sub
jo
scas
scas
fistl
aad
mov
ret
sub
mov
push
clc
sbb
addps
leave
test
aad
fists
sub
inc
jmp
insb
scas
push
test
cmp
sbbb
lds
das
movl
xchg
xor
dec
mov
mov
xlat
cmp
aas
jle
jmp
adc
jg
or
and
xlat
addb
rcl
sbb
popf
lods
mov
xchg
and
sub
loop
xor
loope
xchg
xorl
in
mov
jbe
push
mov
xorl
dec
outsl
xorb
pop
fwait
sbb
inc
jge
dec
idivb
pop
in
iret
lock
jnp
incb
cs
xor
lods
add
ret
outsb
xor
xchg
cmp
fisttpl
pop
sub
ja
dec
cmpsb
pop
mov
mov
addr16
divb
add
sub
enter
out
xor
stc
xchg
rcrb
add
pop
loope
push
out
fs
sbb
pop
or
stos
fimull
cmpsl
mov
out
add
and
stos
add
lret
iret
cmp
dec
jl
inc
xor
fs
outsb
dec
mov
subb
orl
pop
cmp
or
ds
and
out
mov
gs
xchg
sbb
fwait
imul
into
shlb
decl
lea
push
inc
and
mov
sbb
out
mov
lods
jne
ja
push
and
cmp
and
pop
mov
jl
jns
outsb
sbb
mov
cltd
pusha
mov
rcll
fldcw
cmp
dec
icebp
jge
cmp
push
mov
mov
test
sub
sub
jno
xchg
inc
aam
pop
stc
or
inc
ret
xchg
bound
xchg
clc
arpl
cmp
repz
daa
push
pop
xor
inc
subb
dec
push
push
mov
sbb
sti
cmpsl
popf
shr
ds
aas
lea
mov
int
sbb
jecxz
and
cmpsl
outsl
repnz
sahf
and
repnz
inc
pusha
jae
call
ja
testb
fwait
js
lock
in
xchg
stc
pushf
imul
mov
icebp
test
jbe
adcb
outsb
int3
xor
inc
and
ret
push
xor
cmp
mov
add
std
lret
in
jne
jno
in
in
mov
je
scas
je
mov
mov
jge
xor
call
pop
fildl
imul
sbb
pushf
das
imul
xor
xor
pop
or
mov
pop
test
cmpsb
rcl
mov
mov
popa
jno
mov
mov
into
arpl
push
push
jno
xor
push
cli
push
jb
mov
xlat
inc
enter
testb
push
and
fwait
lods
ds
test
fcomps
jl
xor
dec
inc
rcrl
dec
stc
sub
mov
stos
scas
adcb
jbe
das
test
mov
mov
in
or
mov
mov
add
and
or
and
rol
scas
popa
sub
jo
or
xchg
dec
enter
mov
rol
mov
in
lret
xchg
pop
pop
fbld
push
lcall
out
repnz
sub
jg
cmp
sbb
cmp
fdivrl
pop
pop
fs
xor
mov
mov
xchg
sbb
pop
jne
mov
fisubrl
mov
idivl
lea
aam
mov
add
fwait
mov
cmpsl
sub
daa
pop
or
mov
aam
iret
repnz
in
mov
add
pushf
lods
inc
aaa
test
mov
aaa
cmp
mov
xchg
inc
outsb
sub
addr16
insl
or
xchg
xchg
or
push
stos
push
push
subl
xor
add
out
jmp
xchg
dec
mov
aas
stos
leave
mov
dec
lea
outsb
or
insb
nop
and
mov
and
int3
in
cmp
shrl
fimuls
in
test
adc
xchg
xchg
scas
sub
int3
int3
ss
push
out
pop
sbb
scas
or
push
inc
lret
insl
cmpsb
outsb
iret
dec
les
pop
mov
pusha
and
mov
adc
icebp
roll
iret
jbe
scas
xchg
out
cmpsl
loop
xor
sub
push
jbe
scas
push
fstpl
das
out
aaa
clc
fisubl
popa
jp
sbb
rolb
adc
fwait
into
pop
std
fidivl
lret
fwait
jbe
push
loopne
in
pushf
mov
pop
es
mov
and
sbbl
cs
inc
pop
dec
and
cli
and
idiv
dec
xor
gs
mov
lea
rcll
lret
push
test
dec
xchg
inc
push
test
adc
lcall
mov
push
push
in
jge
jae
lea
stos
and
pop
jmp
lock
shl
hlt
cld
orl
inc
adc
mov
shl
int
arpl
xor
rolb
mov
jmp
cmp
jbe
xor
mov
rclb
dec
ficompl
cmp
push
popa
adc
fcmovu
imull
push
pop
insl
mov
imull
cltd
out
addr16
lods
loope
fstp
xchg
lret
jb
xor
cmpsl
and
fwait
pop
push
nop
cmpsb
cmp
aaa
in
mov
dec
and
cmp
movsl
gs
and
jno
ja
cmp
mov
jbe
and
cltd
inc
test
xchg
test
jbe
out
mov
in
xchg
movsl
ljmp
aas
xor
add
loop
sbbl
popl
sub
jmp
mov
repnz
sub
imul
jne
ljmp
push
icebp
cmp
lds
mov
clc
cli
or
adc
ljmp
out
push
fdivs
loope
inc
push
inc
cmp
inc
fisubrs
pop
sbb
jnp
jmp
lcall
call
push
push
mov
cld
imul
sbb
in
ret
shrb
xchg
sub
fdiv
outsl
rorb
lods
cltd
mov
push
lods
pop
cld
sahf
sbbl
pushf
aaa
imul
or
pop
and
pop
pop
lcall
and
adc
cmp
shll
enter
or
and
add
push
jp
sbb
jne
out
sub
fmull
popf
jp
mov
inc
push
pop
pusha
xorb
dec
movsl
mov
sub
test
decl
cmp
fnsave
repz
cmp
je
cmp
cld
mov
mov
or
mov
mov
inc
or
sbb
movsb
inc
mov
mov
sub
cwtl
jle
mov
nop
mov
add
mov
cmc
in
pop
sti
add
push
push
mov
arpl
movsl
lahf
jb
sbb
pop
test
ja
push
int3
inc
ds
pop
inc
xlat
ficoml
and
add
imul
imul
lods
scas
push
mov
test
and
insb
add
ret
xor
push
fbld
push
sub
lahf
pusha
filds
aas
ja
mov
mov
ds
or
in
mov
rolb
ror
repz
push
pop
cmc
ja,pt
xchg
or
jns
arpl
pop
inc
fldcw
mov
lret
xor
xchg
jecxz
inc
mov
sub
fldt
pop
sahf
add
in
inc
test
push
sub
xchg
nop
gs
xor
sbbb
cmpsb
pop
mov
dec
push
xchg
mov
ja
clc
call
mov
gs
push
movsb
or
pop
repz
mov
and
xchg
mov
push
cmp
sub
cmp
add
dec
xchg
xchg
sahf
push
std
or
or
shll
sub
sub
sbb
and
out
in
repz
and
lods
add
xor
call
lods
icebp
and
mov
shll
dec
les
jne
pusha
adc
lcall
mov
ret
sbb
fcmovbe
cmp
andb
xor
mov
pop
push
call
lret
pop
pop
xchg
inc
cli
cwtl
jae
scas
lret
pop
test
daa
clc
mov
sarb
cld
nop
push
pop
cmpsb
fildl
loope
loopne
leave
loop,pt
stc
add
push
sarl
xchg
jmp
push
outsl
mov
add
xchg
pop
mov
in
xchg
cmp
lret
sbb
aas
cld
adc
dec
jg
loope
sub
dec
das
pop
sub
or
clc
inc
mov
incb
ljmp
dec
pop
ficompl
sahf
je
push
inc
pop
mov
xchg
aaa
mov
mov
stc
mov
pop
fucom
and
fadd
xor
adc
hlt
jmp
cmpsl
jo
and
cli
scas
bound
or
cmp
jne
dec
inc
aas
ficoml
mov
aam
xchg
pushf
inc
aad
int3
ret
xlat
add
xchg
clc
cli
cli
clc
popa
pop
shrb
jb
mov
stos
push
sbb
loope
pop
aas
cmpsl
ret
push
enter
aaa
dec
cmc
mov
addr16
cmpsb
aam
stc
fistl
repnz
nop
je
and
movnti
push
arpl
jae
add
fstpl
sahf
mov
stos
xchg
in
xchg
pop
imulb
pop
cli
dec
sbb
daa
rolb
stc
or
jb
jbe
nop
or
pop
add
repz
addl
mov
loop
add
xchg
push
lret
jne
lcall
pusha
dec
jg
lock
test
scas
and
add
and
and
inc
jmp
dec
lods
stos
mull
daa
scas
loop
mov
scas
sbb
fwait
mov
cli
loop
sbb
arpl
sbb
arpl
inc
lret
and
adc
xor
call
lret
data16
fisubrs
pop
repz
lret
cld
xchg
ja
fiadds
aad
and
stos
outsl
pop
jns
es
pop
push
xor
sbb
sub
insb
dec
hlt
jecxz
dec
pop
int3
inc
mov
cmp
scas
push
ficoms
leave
adc
lret
adc
xor
cmp
cmpsl
dec
jle
dec
push
test
fwait
adc
lahf
cmp
xchg
sbb
fwait
jecxz
insb
out
sbb
test
aam
mov
fcmovnbe
iret
rolb
mov
aad
loope
lods
or
pop
repnz
push
sub
xchg
cmp
sahf
pop
fsubs
leave
aaa
insl
je
xor
les
xchg
xorb
cmc
xchg
test
sbb
movsb
xchg
rcrl
test
or
je
push
scas
stos
jl
sbb
mov
inc
cmp
inc
push
push
ret
lret
mov
xor
lahf
scas
sahf
gs
mov
sbb
xor
imul
movsb
push
fildl
pusha
sub
adc
inc
ficompl
ret
mov
movsl
cmp
jno
pop
fldl
jmp
int3
pop
mov
cmp
mov
inc
repnz
xor
cli
sbb
filds
pslld
xor
orb
push
cmp
mov
mov
pop
fiaddl
in
icebp
iret
push
lret
xor
mov
inc
mov
mov
sub
fbld
daa
add
mov
outsl
and
sahf
push
pop
jbe
orl
adc
mov
test
dec
xor
iret
repz
add
jo
adc
addr16
add
lea
leave
or
cmp
mov
cmp
dec
test
mov
cwtl
cmp
xchg
inc
mov
pop
xor
dec
movsb
cmp
add
adc
ss
adc
gs
es
ret
aam
insb
data16
clc
call
out
das
cmpsb
lock
lds
mov
hlt
incb
in
sti
xor
fnstsw
rcll
imul
mov
out
ss
mov
scas
push
and
pop
test
push
or
jo
jp
push
cmp
jae
sbb
add
inc
sbb
mov
sbb
pop
sti
unpckhps
lock
sub
roll
repz
inc
inc
fsubrl
sub
test
jae
mov
jnp
inc
push
sbb
or
imul
jmp
inc
push
out
dec
adc
mov
mov
mov
test
jg
popf
add
xchg
sahf
xorl
cwtl
loope
xor
mov
stos
jae
fldenv
and
enter
sbb
jb
aaa
lods
lods
fisttps
jge
loopne
push
test
dec
push
xlat
sbb
in
out
gs
rcll
cmp
insb
sub
cmp
xchg
fnstenv
out
mov
add
jb
ss
cmp
imul
in
cld
pop
jmp
pusha
jp
sbb
arpl
lret
pusha
mov
xor
js
jae
arpl
jl
ja
xchg
pop
das
cltd
add
pop
pop
pop
inc
adc
es
xchg
out
int
push
ss
lods
adc
mov
das
sbb
mov
add
cmp
mov
xor
dec
fistpll
or
addb
int
decl
xor
decb
negb
push
stos
cltd
or
cmp
push
dec
push
adc
add
sub
push
pop
and
mov
xchg
sbb
mov
push
fcmovne
stc
jl
or
sbb
cld
out
xchg
mov
jle
cwtl
in
inc
mov
dec
repz
sub
cmp
icebp
int
aam
adc
int
ljmp
jmp
sbb
movsb
mov
cmp
test
imul
mov
je
mov
jne
and
push
jle
lret
int3
mov
sub
fwait
dec
xchg
jecxz
mov
add
aas
add
push
fildl
mov
shll
ds
shll
cli
dec
aad
out
imulb
jp
leave
add
sbb
lret
pop
lcall
ret
movsl
dec
mov
cmp
cmp
dec
stc
xchg
rcrb
pushf
arpl
xchg
stos
mov
mov
cwtl
aam
mov
imul
stc
sub
mov
pop
push
out
jg
mov
and
mov
adc
fidivrs
mov
xor
test
dec
inc
jmp
dec
adc
sbb
and
stc
xor
xchg
fs
test
hlt
scas
aad
jmp
dec
cmc
dec
xor
fabs
pusha
pop
jae
std
and
xchg
add
mov
out
cmp
or
mov
lods
out
adc
sbb
sub
push
lea
ud2
push
ja
fstpl
sub
dec
adc
xor
test
jnp
in
mov
daa
sub
sbbl
aaa
mov
mov
xor
push
dec
push
sub
shll
pop
aam
movsb
movsl
rolb
inc
je
jae
cmpsl
cmp
mov
insb
pop
inc
xor
and
sub
mov
sbb
int3
stos
ljmp
lcall
in
xor
nop
out
mov
iret
mov
or
add
movl
rorl
pop
adcb
lods
cmpsl
imul
clc
lea
test
cltd
popf
push
enter
pop
push
das
pop
or
adcl
fsubrl
popf
mov
scas
imul
in
arpl
push
xor
adc
mov
ret
cmpsb
aad
lret
gs
in
scas
mov
pop
xchg
pop
push
stos
pop
pop
sti
out
cmp
lods
adc
int3
xchg
in
mov
insb
stos
leave
jno
xor
pop
push
enter
out
sub
mov
insb
or
cli
jns
popf
sbb
out
daa
outsl
jle
dec
sub
mov
ret
fidivs
pop
mov
inc
in
mov
pop
cmp
or
push
idivl
jmp
jl
xchg
scas
push
rolb
lret
jl
nopl
je,pt
xorb
roll
movsl
mov
push
sbb
iret
loopne
divl
and
cwtl
mov
adc
cmp
jmp
cmp
push
cld
pop
mov
sub
push
stos
repnz
shl
iret
testb
add
jmp
bound
shr
or
ret
cmp
pushf
out
mov
jp
lods
xor
stos
jl
xlat
jecxz
push
mov
loopne
cs
cmpsl
int
xchg
push
and
stos
jg
outsb
addr16
pop
scas
and
aam
subb
dec
cmpsl
jl
jmp
dec
sub
pop
bound
out
push
movsb
imul
js
push
in
mov
sub
in
lock
int3
pop
and
push
and
jl
mov
inc
lcall
jb
adc
stos
stos
or
cmpsb
fimull
pop
int3
pop
mov
sub
pop
enter
xor
xchg
cmp
inc
repnz
pop
or
or
call
push
mov
roll
lahf
push
and
negb
xchg
push
pop
sub
cmp
pop
test
dec
decb
mov
sub
dec
mov
stc
cli
push
push
jge
popf
test
cld
subb
push
jle
sub
lods
xchg
ret
jmp
pop
jbe
aas
cmp
lods
push
ja
fmuls
adc
and
cmp
sub
jp
movsb
je
sbb
pop
stos
movsb
sub
mulb
sub
js
cmpl
inc
mov
pop
jecxz
shrb
lods
push
inc
sub
push
scas
xchg
cwtl
dec
call
jbe
xchg
sti
inc
xor
testb
dec
cld
dec
mov
jmp
test
sub
cmp
xor
or
pop
mov
psubb
js
int3
mov
lods
dec
pop
cmp
or
pop
in
xor
sbb
inc
push
adc
mov
fnsave
js
push
add
mov
pop
jge
push
push
jp
push
push
imul
sti
cmpsb
imul
xchg
cld
mov
mov
fldcw
ffreep
fwait
out
or
cmp
adc
addr16
push
scas
fs
ret
les
in
frstor
jo
inc
xor
mov
enter
lcall
xor
cwtl
std
scas
mov
flds
sub
add
lea
adc
xor
mov
ljmp
mov
and
and
xor
and
dec
outsb
inc
loopne
pop
inc
in
lcall
jne
bound
jns
mov
lret
pop
dec
fwait
push
loop
daa
xor
adc
hlt
pop
loope
pop
hlt
rorb
xchg
dec
dec
ftst
pop
subl
pop
fwait
add
shlb
xor
cld
sahf
sub
mov
imul
mov
fimuls
das
pop
dec
push
jge
je
pushf
jb
testb
enter
std
xchg
adc
jg
into
movsb
call
xchg
cmp
ret
xchg
mov
mov
clc
enter
lret
icebp
cmp
imul
ss
fdivr
loopne
cmpsb
imul
es
jae
lds
lcall
jmp
popf
daa
sbb
loop
fsubs
or
sahf
pop
jns
push
fs
push
ja
scas
mov
dec
into
sbb
mov
stc
call
pop
arpl
push
mov
lcall
fcomp
pop
mov
xor
fcoml
push
adc
mov
or
insl
shl
push
test
repnz
ds
jmp
push
mov
andl
out
fstl
rcll
jg
mov
jno
js
mov
aad
cmp
fisubrl
xor
xchg
push
xchg
pop
cmpsl
movsl
das
and
in
xor
fcoms
daa
push
lds
push
and
rcll
inc
inc
mov
daa
ficoms
jg
in
data16
push
add
or
insb
mov
test
xor
insb
fistl
ds
lock
push
fsubrs
sub
loop
cmp
fs
adc
out
into
xor
jecxz
sbb
xor
out
cmp
push
out
mov
pop
or
or
mov
sti
push
or
sarl
sti
lahf
outsb
in
pop
pusha
adc
stos
cmp
mov
push
fstpt
es
es
aaa
cmc
jmp
cmpsl
cmp
cwtl
aaa
push
dec
mov
add
cwtl
push
nop
xor
adc
cmc
jecxz
dec
cmp
pop
mov
and
jno
adc
jmp
cmp
out
dec
arpl
pop
into
lods
mov
outsl
mov
out
xor
icebp
daa
mov
cmpsb
out
cmpsb
dec
cmpsb
mov
loopne
dec
ret
int3
jns
sub
stc
loope
or
notb
xchg
or
pushf
xchg
cmp
rclb
mov
inc
xor
daa
dec
out
and
fnstcw
gs
stos
ret
imul
push
sti
aam
push
out
aad
mov
mov
adc
cltd
andl
mov
jnp
xchg
rcrl
movsl
out
mov
in
mov
mov
divb
test
sub
scas
imul
movsb
inc
sub
lock
lcall
lods
mov
dec
or
mov
sub
adc
xor
add
pop
leave
sbb
std
into
pop
pop
dec
push
aaa
or
adc
pop
mov
xor
cli
int
push
stos
pop
dec
lret
adc
and
mov
push
aas
fisttpll
mov
inc
inc
inc
dec
mov
mov
push
cmp
les
mov
aaa
test
lds
and
add
xchg
repnz
js
js
mov
cmp
mov
add
in
cmp
adc
and
mov
mov
or
pop
jnp
inc
into
or
js
nop
mov
jecxz
das
cmp
pop
fucomp
xchg
cmp
pop
in
les
into
cmp
xchg
sti
xchg
lcall
mov
stos
fstpt
aaa
mov
xchg
jne
ss
push
jbe
cmp
aad
scas
adc
jmp
pop
adc
adc
inc
ds
inc
cmp
xor
mov
insl
xchg
mov
sub
inc
movsl
cld
jg
mov
or
outsl
pop
faddl
sub
push
sub
sbb
std
pop
notl
mov
es
or
fs
shlb
repz
aam
pop
in
xchg
and
and
stos
loopne
in
fcoml
cmp
sahf
enter
sub
xchg
ljmp
in
filds
repz
sub
lret
cltd
xchg
push
les
xor
into
ljmp
stc
pop
dec
fstp
aas
push
dec
aad
lods
cmpsb
iret
sbb
jecxz
push
scas
fwait
xor
mov
sbb
xchg
iret
pop
sahf
pusha
cmpsl
fucomp
xor
ss
sbb
xor
pop
ds
roll
les
jg
popf
call
aam
in
insl
push
cmp
mov
xchg
lea
sub
arpl
cmpsb
xchg
push
sub
adc
xchg
test
pop
xorb
add
sub
jle
js
out
movsl
adc
cwtl
insb
jp
adc
jmp
push
or
mov
roll
filds
gs
movsb
or
mov
mov
es
mov
lods
push
sbb
out
stos
cmp
or
push
add
fwait
jno
inc
hlt
mov
mov
enter
leave
mov
bound
test
mov
popf
addr16
sub
cltd
out
lcall
add
jno
jbe
rclb
pop
fmul
mov
stos
cld
add
add
loopne
xchg
fs
into
lret
dec
imul
push
imul
dec
jns
leave
aad
add
sub
xor
aad
xchg
and
incl
mov
ret
and
fdivl
pop
dec
fstpl
fsts
icebp
pop
jns
inc
mov
scas
ret
xchg
mov
inc
mov
lret
imul
xor
call
cmp
xorl
jge
outsb
or
stos
pop
sbbb
std
pop
dec
sub
pop
lret
push
repnz
dec
push
sbb
and
jb
aaa
dec
test
add
mov
hlt
fs
push
int3
loope
ror
or
iret
mov
sbb
ret
test
dec
ja
fadds
push
call
fst
or
dec
mov
xchg
sub
repz
push
bound
jp
jbe
aas
mov
push
mov
hlt
scas
or
mov
sbb
inc
loopne
or
dec
fs
mov
and
fwait
mov
push
inc
imul
mov
xor
out
jne
jnp
jmp
jbe
into
push
sub
in
imul
adc
xchg
sub
mov
pop
fisubs
or
and
mov
xchg
push
inc
pop
dec
mov
insb
add
inc
lods
xchg
xor
add
mov
fisttpll
or
push
mull
je
push
add
call
rorb
xor
lret
jno
jmp
lret
add
jecxz
push
test
loop
lret
pop
xor
jb
outsl
hlt
xor
dec
rcr
add
add
adc
pop
xchg
loopne
cmp
aas
dec
jae
mov
out
cld
rcrl
inc
sahf
cwtl
nop
pop
inc
mov
fwait
xor
lods
push
lods
lds
popf
xor
lea
leave
js
lods
movsb
sbb
or
adc
xorl
mov
mov
test
aas
add
lock
mov
inc
mov
mov
mov
mov
fldl
loope
pop
imul
xchg
fcmovnu
xchg
ja
mov
mov
xor
pusha
cltd
xor
test
addl
test
adc
jne
divb
movsb
mov
mov
xor
fisttpll
mov
cmp
jbe
in
jle
add
repz
ficompl
jb
jecxz
inc
pop
adc
aas
fcoml
push
je
je
ja
pop
adc
jae
dec
out
hlt
out
sbb
pop
nop
mov
ja
inc
enter
add
mov
fstps
and
cmp
push
xchg
mov
std
xchg
and
push
xor
mov
dec
bound
gs
loop
jae
dec
lea
jno
ret
mov
shr
adc
push
inc
jg
stos
test
in
in
aas
push
scas
fptan
imul
mov
bound
insb
gs
les
pop
and
mulb
sub
fisubrl
sbb
mov
jne
sahf
aad
lret
add
cltd
sub
arpl
cmp
adc
cld
add
test
mov
stos
push
cmp
mov
ret
sub
push
dec
mov
jnp
xchg
sub
sarb
push
aad
fcomip
mov
movsl
or
xchg
sbb
lods
cmp
addr16
mov
mov
mov
test
pop
out
clc
xor
ds
fidivrl
xchg
mov
jnp
cmp
mov
in
sarb
xchg
or
scas
pop
mov
inc
sbb
mov
aad
lds
jns
rcrb
enter
push
lods
mov
sbb
adc
xchg
push
jecxz
xor
jmp
adc
sbb
nop
cmp
adc
sbb
repz
push
push
mov
stc
sarb
data16
xchg
and
mov
pop
jns
sub
jae
pop
out
xchg
xor
int3
pop
orb
jge
or
inc
pushf
fcoms
cld
iret
sub
iret
shrb
fdivs
jae
shl
push
fwait
outsl
pop
sti
test
movsl
xchg
mov
pop
sarb
ja
jno
nop
push
sub
mov
mov
adc
xchg
test
push
xchg
stos
dec
jns
xchg
imul
mov
outsb
cli
cld
popa
mov
cmpsl
ja
xor
xor
in
out
jne
xchg
dec
xchg
popa
cmp
inc
leave
test
sbb
outsl
xor
addr16
jns
pop
xchg
dec
xchg
inc
cmpsb
and
outsb
mov
xor
enter
pop
xor
dec
das
loopne
xchg
into
pusha
imul
testl
aaa
shrl
cmc
xchg
mov
and
stos
adc
ljmp
ja
int
cmp
nop
loopne
test
enter
sub
daa
mov
push
add
push
xor
sub
call
jl
sarl
adc
jns
sti
pop
mov
dec
pushf
xor
xor
iret
xor
lods
cmpsl
xchg
jp
loop
push
dec
in
decb
cmp
sbb
push
lahf
shr
adc
ljmp
jae
nop
roll
test
int3
cmp
xchg
cmp
repnz
and
cmpsb
cmpsb
jg
dec
mov
idivl
test
ja
mov
mov
std
sub
or
mov
mov
pop
fsubl
push
lret
xchg
test
xchg
imul
movsb
xchg
fwait
xor
mov
pushf
and
hlt
aad
pushf
cmc
jl
inc
jne
jle
mov
jnp
arpl
cmpl
cmpl
push
push
fiaddl
insl
xchg
sbb
pusha
scas
sub
cld
dec
inc
add
test
mov
aam
or
mov
addl
jp
lret
nop
test
stos
movsl
mov
ret
jo
xchg
inc
imul
inc
js
iret
subl
lods
fs
mov
out
xchg
lret
mov
push
pop
cmp
bnd
or
mov
mov
inc
mov
cmp
popf
stc
cmp
enter
push
pusha
cmp
mov
lds
stc
jbe
add
arpl
or
jns
aam
mov
jns
push
xchg
sub
and
out
push
in
cwtl
xchg
pop
sub
mov
jg
pop
pop
mov
mov
fldenv
sbb
rolb
push
sub
mov
sbb
mov
lods
fwait
inc
cmp
mov
push
mov
mov
cmpsb
daa
rorb
pop
js
pop
std
lret
stos
ss
repz
mov
sbb
and
iret
xchg
sbbb
inc
nop
enter
mov
rcrl
mov
dec
fs
dec
xchg
dec
out
dec
movsl
pop
lcall
gs
fdivr
stc
push
cmp
arpl
sub
cli
dec
pop
mov
or
lds
push
mov
pop
test
mov
cmp
push
dec
cwtl
lods
fwait
loop,pn
in
les
aaa
in
xor
add
mov
fwait
pop
sbb
rorl
inc
mov
jge
subb
sbb
ljmp
xchg
adc
rcrb
dec
sbb
xlat
jge
stos
xchg
xlat
jnp
lret
mov
sbb
pop
dec
xchg
mov
lds
in
pop
fiaddl
scas
cltd
out
mov
pop
add
adc
daa
pop
pusha
xlat
sub
fdivs
xlat
xor
mov
das
call
arpl
sti
dec
mov
cmp
and
mov
out
pop
or
xchg
sub
jg
adc
xchg
popa
cmpsb
sbb
test
inc
mov
pop
pop
aaa
or
inc
dec
jb
ljmp
aas
lea
sarb
dec
dec
test
enter
sbb
xchg
mov
adc
xchg
xchg
cmp
mov
inc
push
out
xchg
lret
popa
negb
or
test
arpl
mov
jmp
adc
and
mov
nop
push
pop
cmp
inc
icebp
das
cli
into
in
push
pop
clc
add
pop
mov
in
xchg
jbe
fwait
movsb
pop
lods
fisubrs
fcmovbe
push
and
jbe
call
and
out
mov
test
stos
push
mov
decb
push
add
pcmpgtb
inc
repnz
lods
dec
repz
dec
call
mov
iret
inc
lods
stos
dec
setne
insb
adc
sub
addb
push
stos
imul
cwtl
mov
jb
jnp
add
mov
outsl
push
les
lods
decb
adc
jl
enter
push
mov
scas
jecxz
movsb
push
push
add
mov
not
mov
dec
loop
sub
aaa
adc
pop
loop
idivb
mov
icebp
jno
stos
lods
test
insl
mov
jo
dec
out
cmp
es
rcrl
mov
push
xor
ss
adc
or
sahf
in
push
repnz
negb
andl
lcall
mov
out
add
shrl
fsubl
in
test
jae
stos
xor
cmp
adc
andl
loop
push
insl
mov
mov
je
hlt
mov
faddl
mov
std
loop
sbb
or
fiaddl
and
sti
testb
jmp
jg
sub
inc
test
shr
es
pushf
push
scas
dec
lods
adc
xorl
decb
negl
in
rcll
sbbb
sbb
xchg
movsl
nop
imul
sub
jl
lods
jbe
ret
sub
in
int
lds
push
ret
mov
lods
push
pusha
mov
scas
mov
pop
mov
push
aam
clc
fmull
adc
into
lret
pop
fbstp
jno
lods
subl
xor
pop
or
shll
push
dec
mov
inc
dec
es
insl
shll
and
lods
addr16
subb
mov
pop
push
push
lods
lea
imul
sarb
push
cmp
mov
jae
mov
jge
movsb
sub
sub
rcr
and
and
repnz
or
mov
and
data16
in
stc
mov
jecxz
imul
sti
cmp
aad
rorl
pop
outsl
xchg
cmpsl
jae
stc
dec
xchg
inc
jmp
outsb
imul
nop
xchg
pop
shrl
mov
jno
sub
out
gs
add
cmp
sub
push
gs
add
jbe
roll
push
cmc
aas
pusha
jge
xchg
xor
cld
jecxz
and
jp
test
adc
test
or
into
movsl
mov
and
out
fstpl
dec
scas
movzbl
arpl
stos
test
jecxz
sub
push
ds
addb
mov
shll
in
and
rcr
adc
adc
into
cmp
mov
iret
jg
or
insl
cmp
lock
push
and
daa
mov
mov
shlb
jg
mov
inc
dec
push
out
mov
mov
sub
or
xchg
loop
push
cmc
add
cmpsl
test
cmpsb
cld
shlb
push
shlb
push
int
std
in
push
pop
jne
loope
shll
pop
and
imul
rsqrtps
lahf
dec
xchg
mov
sbb
inc
mov
cltd
fdivr
adc
insb
insl
xchg
mov
int3
mov
jp
adc
pop
jbe
mov
push
sub
push
sbb
pop
cld
ss
cld
pop
dec
mov
lea
mov
cmc
shl
jo
es
lret
mov
loopne
jns
mov
mov
bound
push
or
xor
call
jae
fidivs
fs
sbb
and
or
mov
mov
push
rol
inc
lock
in
fildl
leave
lret
cmp
dec
loop
arpl
mov
aad
icebp
and
aad
ss
jne
mov
cltd
int
out
daa
mov
cmp
leave
in
jo
jne
add
in
jns
sbb
mov
fistpl
xchg
sbb
in
arpl
jae
fisubs
jle
movl
lods
repz
stos
push
cmp
das
cld
and
xor
mov
pop
fistpl
lea
cmp
xchg
mov
sub
pop
xor
push
dec
or
or
or
sub
lahf
into
loopne
mov
xchg
lods
fidivl
int
sahf
adc
into
int
add
scas
add
sbb
pop
mov
sub
jno
cli
test
movsb
inc
fsubs
sbb
scas
lahf
inc
test
inc
test
mov
mov
sti
cmpsb
mov
aaa
push
movsl
xor
iret
push
adc
fs
sbb
out
std
dec
lret
movsl
add
rcrb
pop
adc
or
hlt
dec
int3
fisttpl
adc
pop
clc
sbb
dec
fwait
scas
ret
cwtl
mov
dec
sub
adc
adc
pop
push
or
movsl
movsl
mov
repnz
and
mov
dec
nop
lock
movsb
push
or
in
sbb
xchg
aam
mov
leave
xchg
out
and
add
dec
test
xchg
cmp
add
and
jmp
and
adc
test
mov
push
inc
jp
sub
mov
push
arpl
add
mov
xor
pop
sbb
mov
or
test
test
mov
push
pop
sbb
enter
sbb
mov
int3
and
inc
xor
jmp
je
popa
pop
jns
test
mov
ds
into
push
das
scas
ljmp
das
mov
ljmp
int
mov
in
fadd
loope
push
adc
sbb
outsl
inc
repz
repnz
or
jp
push
xchg
or
pop
pop
test
fsts
nop
scas
je
push
sarb
cltd
and
push
xchg
sub
adc
test
pop
pop
pop
insl
imul
dec
testb
push
mov
jne
loope
pop
shlb
gs
es
nop
inc
je
std
pop
orb
scas
push
pop
mov
mov
sub
mov
stos
insb
emms
push
iret
fwait
xchg
jne
jecxz
jmp
jge
pop
mov
add
iret
hlt
cmpsb
sahf
imul
out
daa
pop
frstor
call
test
icebp
decl
pop
mov
pop
out
fstl
adc
mov
lahf
shrb
andb
jle
fildl
xorl
pop
es
inc
bound
inc
add
addl
faddl
mov
int
pop
pop
nop
das
mov
or
bound
loop
mov
les
in
std
adc
in
fidivrs
stos
sub
mov
addr16
cmovge
inc
lds
push
and
leave
out
xchg
in
push
adc
out
leave
add
mov
dec
nop
jmp
nop
divl
subb
outsl
aad
inc
test
popa
mov
icebp
sbb
pop
test
push
and
xor
scas
dec
stos
sbb
cmpl
push
popa
or
inc
xchg
pop
sahf
imull
xchg
mov
add
insl
das
dec
lahf
fisubrs
out
insb
sub
mov
pop
push
outsl
fs
add
lcall
notl
dec
push
push
int3
scas
cmp
loop
dec
pop
bound
pusha
insl
sbb
or
pop
stc
dec
sub
jno
push
or
and
jo
fildl
es
jns
call
in
movsl
cmp
push
call
mov
mov
ret
push
in
addr16
sarb
fildll
insl
sbb
js
push
in
push
fbld
push
hlt
enter
shll
add
mov
ja
and
push
daa
jae
insb
cltd
rorl
sub
cmc
stos
mov
in
scas
or
sbb
jp
mov
inc
add
testb
je
mov
pop
push
fstpt
loope
addr16
rcrb
ret
cmp
subb
fimull
sarb
dec
call
jecxz
pop
sub
inc
dec
fwait
mov
push
push
jb
int
dec
inc
and
leave
xlat
pop
pop
aam
push
lods
lea
data16
sbb
jo
push
mov
fdivl
cmc
jge
ret
testb
mov
sub
es
subl
paddusb
je
out
mov
mov
repnz
test
push
cmp
adc
lret
icebp
outsl
fstpl
inc
sbb
add
es
in
push
jle
add
sbb
mov
pop
inc
xchg
nop
mov
inc
int3
data16
lds
mov
cmpb
pop
and
sbb
jg
pusha
fdiv
dec
inc
push
fistpl
scas
push
mov
pushf
les
xchg
aas
jbe
ret
dec
imul
movsb
sbb
jae
sbb
lds
xor
stos
lret
jge
adc
jle
std
sub
and
es
mov
xchg
filds
sub
hlt
mov
fadd
or
scas
pop
in
adc
xchg
xchg
pcmpeqw
jmp
int
xlat
lcall
xchg
shll
sub
inc
sbbb
xchg
js
jo
mov
cmc
ret
insb
movsb
ds
add
fstps
push
cmpsb
div
cmp
mov
mov
nop
rcll
push
test
nop
repz
mov
std
rcl
xchg
in
push
dec
cwtl
push
outsl
mov
mov
fcompl
sub
xor
mov
loopne
roll
xor
ret
ja
push
or
dec
mov
dec
xchg
jno
aaa
pop
mov
dec
std
sbb
pop
ss
pop
cmp
mov
roll
in
push
faddl
scas
sbb
in
ret
pop
ret
or
in
andl
push
bound
jbe
in
mov
js
mov
push
jl
push
mov
jo
icebp
jne
lret
arpl
pop
xacquire
cmp
mov
cwtl
xchg
add
push
mov
dec
fadd
jge
pushf
outsb
iret
xor
pop
dec
aaa
movsl
pop
add
pop
jle
movsl
sti
and
mov
mov
and
int3
adc
mov
int
adc
jl
mov
test
fidivrs
push
jno
test
add
into
sbb
mov
sti
scas
sub
loopne
mov
pop
mov
nop
lcall
xchg
int
pushf
cmp
mov
cld
jg
inc
aad
repnz
mov
cmc
outsb
and
in
scas
sbb
hlt
mov
cld
aam
mov
mov
test
cmpsl
jle
daa
rolb
mov
addr16
rcrb
pushf
arpl
test
in
mov
repnz
or
lds
sbb
push
fmulp
jle
xchg
jmp
add
jecxz
mov
es
in
sub
push
loop
cmpl
cwtl
and
ret
stos
dec
aaa
cmp
fisubrl
ret
icebp
jne
push
imul
jns
les
mov
imul
cltd
ja
lret
insb
rolb
int3
out
xchg
jle
ja
sub
aam
lret
leave
mov
mov
movsl
pop
ljmp
aad
icebp
in
int3
ss
pop
lea
sbb
mov
pop
rcll
xchg
loope
imul
movsb
shlb
pop
dec
dec
jecxz
test
xor
sub
mov
or
aad
fdiv
enter
stc
aad
pop
mov
divl
enter
fmul
inc
adc
mov
mov
adc
aas
and
insb
pop
jmp
out
mov
jg
cmpsl
mov
dec
add
cwtl
cmp
aaa
rcll
jae
popa
push
hlt
out
xchg
xchg
sarl
out
xlat
sbb
sub
gs
in
ret
icebp
cmp
add
adc
mov
sbb
dec
xchg
pop
idivl
dec
scas
jns
pop
jmp
jg
mov
sub
sbb
jle
cmp
roll
scas
jns
jp
mov
xchg
pop
push
mov
xor
out
cmp
loop
imul
scas
das
dec
dec
ret
or
int3
mov
cmc
fstpt
shl
scas
mov
dec
and
nop
adc
jge
sub
mov
add
divl
pop
addr16
sarl
ss
jne
dec
repz
mov
xchg
jp
sbb
dec
in
push
clc
int
jnp
jge
je
int
pop
mov
lret
lds
jg
pop
mov
sbb
cmp
insb
out
add
cmp
imul
je
sub
and
push
xchg
xor
push
inc
ljmp
ret
icebp
and
push
rcll
insb
inc
inc
jbe
or
mov
or
adc
push
jb
sbb
jb
pop
xor
repz
nop
mov
loope
test
push
xchg
cmp
and
mov
enter
xchg
mov
leave
fwait
shlb
and
test
roll
imul
add
xor
xor
stos
dec
ds
sahf
shlb
sti
dec
inc
into
fwait
mov
sahf
shlb
jo
andl
mov
imul
xchg
sub
in
add
xor
in
imul
jo
xor
lret
cmp
fld
jg
and
ja
repz
add
xor
dec
sub
cmp
movl
dec
repz
push
cld
xchg
pop
jo
movsl
dec
jmp
and
lcall
dec
out
or
testb
mov
jg
gs
push
inc
stos
pop
int3
fwait
aaa
and
inc
push
int
fstps
and
loop
imul
push
xchg
lcall
jb
leave
arpl
dec
cmp
dec
pop
stos
xchg
add
insb
ja
imul
xchg
cli
ljmp
mov
repz
pusha
in
aad
pop
add
or
das
or
js
inc
dec
pop
and
sbb
and
stos
inc
pop
shl
clc
idivb
add
adc
push
xor
push
lret
jnp
fldenv
into
and
mov
dec
js
ficomps
cli
push
cmpsb
jo
xchg
test
nop
mov
xorl
testl
push
sub
orl
pop
push
test
mov
sbb
or
ljmp
add
out
xor
cmp
add
mov
out
cmp
popf
fsubrs
fistl
mov
daa
mov
in
jle
mov
scas
pop
xor
mov
fiadds
adc
push
mov
sahf
jns
loopne
or
test
repnz
lods
rcll
nop
sbb
mov
cmpb
rcr
push
push
dec
mov
movsb
outsb
cmp
outsb
dec
dec
in
ret
outsl
sbbb
dec
inc
cmp
cli
sbb
lahf
ret
ja
fdivl
popa
test
pop
or
adc
mov
push
enter
rclb
xchg
sub
sub
or
ret
out
sub
or
divb
sbb
mov
test
pop
nop
adc
xor
jbe
sub
repnz
cs
add
and
jne
jne
shrb
inc
ror
cmpsb
pop
xchg
sbb
xor
add
popf
cltd
imul
sti
xchg
or
test
pop
mov
pop
fbstp
add
inc
pop
mov
adc
outsl
cmp
xor
dec
ljmp
mov
pop
in
mov
xor
and
cmpsb
sbb
stos
fisttpl
push
add
jl
sbb
pusha
cs
movsl
and
dec
mov
inc
repnz
add
push
and
sbb
rcl
and
cmp
adc
xor
sub
sbb
xchg
iret
shll
pusha
xor
mull
stc
sbb
icebp
test
aad
mov
repz
in
jl
pop
push
clc
and
pop
jo
std
mov
mov
out
push
imul
push
jmp
clc
fbstp
rcl
std
scas
iret
icebp
ss
int
and
fsubl
les
fadd
sahf
arpl
test
mov
mov
cmpsl
push
and
or
mov
loop,pn
or
push
mov
push
mov
and
ret
clc
jno
push
dec
ret
lea
shll
inc
movsl
add
xor
scas
negl
negl
jb
ror
dec
cwtl
lret
add
add
outsl
test
lcall
int3
mov
insl
xor
xchg
jp
stos
loopne
rcll
negl
xchg
fsubrl
jbe
push
lods
push
and
out
faddl
xchg
xchg
adc
mov
repz
jno
inc
cltd
outsl
push
int3
test
pop
mov
adc
adc
sbb
sub
cmc
xchg
mov
sbb
mov
cmpsb
out
fnstsw
mov
shr
repnz
out
leave
gs
loopne
sub
pop
add
or
xchg
cmp
movsb
mov
add
data16
jae
enter
sbb
das
js
add
addb
xchg
scas
cmp
adc
xor
sahf
dec
xor
imulb
je
and
dec
loop
aad
jbe
mov
pop
hlt
cmp
mov
sub
push
mov
fimull
fidivl
icebp
and
xchg
mov
in
cs
arpl
jle
shll
xchg
test
pop
fsts
mov
mov
and
inc
mov
push
mov
mov
int
ds
mov
icebp
xchg
cmpsl
jb
jb
inc
jns
sub
or
popa
inc
call
aam
xchg
mov
cmpl
lcall
mov
das
add
js
xor
sub
out
mov
mov
mov
jno
sbb
lods
gs
inc
inc
out
xorl
xchg
daa
or
insl
or
lods
sub
sbb
mov
push
mov
jmp
adcl
sbb
xor
call
xor
or
aam
lcall
mov
in
fildll
lea
sbbl
sub
sti
icebp
popa
fisubl
pusha
push
scas
or
orb
cld
sbb
add
enter
flds
imull
aad
and
dec
repnz
cmpsl
and
xchg
pop
aad
and
sahf
inc
test
add
je
insb
mov
pop
enter
push
outsb
stc
nop
mov
fwait
mov
in
sub
jl
push
fs
sub
lods
ret
daa
sbb
imul
ficoml
xchg
add
pop
lret
popf
mov
leave
andb
out
fwait
leave
popa
xlat
cmp
pop
sub
mov
jl
out
add
jle
push
rclb
cwtl
loope
xchg
loopne
std
sti
aaa
sub
cltd
xchg
pop
nop
add
inc
arpl
jg
cwtl
imul
add
fmulp
xchg
mov
lods
pop
push
fwait
lret
sub
mov
pop
jl
lods
dec
jmp
leave
ret
gs
incb
pusha
mov
and
pop
push
fs
adc
test
arpl
push
call
inc
mov
and
adc
push
mov
hlt
inc
data16
or
cmc
sbb
movsl
daa
fwait
lret
mov
mov
add
or
inc
dec
dec
stos
lods
mov
cmp
or
xchg
xchg
xor
arpl
hlt
sti
and
pop
and
int
js
or
ret
push
jecxz
push
in
mov
push
rcrl
adc
pop
mov
loopne
push
jmp
or
std
notb
jle
add
push
sub
stos
loop
push
push
fildll
jo
pop
cld
jns
repz
in
push
lcall
adcb
mov
adc
xchg
ss
idivl
popa
shll
lret
jmp
inc
sbb
aad
ret
push
das
popa
push
jg
lds
cmp
stc
lock
jp
xlat
popa
add
inc
sti
add
ret
out
adc
fdiv
add
les
mov
adc
cmp
fcmovnbe
fstps
popf
and
rcl
inc
call
jae
adc
xchg
cmpl
int3
adc
adc
repz
jl
sub
sub
xor
cmp
push
xor
pop
in
cwtl
pop
adc
or
bound
testb
test
xor
inc
fisubrl
jo
mov
movsb
filds
mov
das
jge
cmp
idiv
push
pop
lods
aad
or
mov
nop
aam
les
jae
add
mov
jns
mov
pop
or
mov
push
fists
ljmp
xchg
xor
hlt
mov
cmp
mov
and
ds
push
jns
pop
cmp
scas
inc
cmc
pushf
cld
in
cmpsl
and
stos
fistpll
mov
inc
adcl
hlt
aad
xor
xor
sub
xor
das
mov
xlat
cmp
push
cmp
jnp
icebp
xchg
jno
rcll
adc
xchg
mov
ret
test
int3
xchg
xchg
xchg
jmp
stos
cwtl
and
and
cmpsl
outsl
pop
inc
push
inc
mov
lret
mov
pop
adc
or
xor
cmp
roll
jp
dec
lds
jno
xchg
in
ficomps
dec
mov
jge
in
stos
xchg
test
mov
inc
and
lcall
adc
xchg
loope
iret
sbb
addb
js
cs
mov
push
adc
popa
jb
push
jbe
or
jmp
addl
xlat
lods
fisubs
fsubl
sub
test
push
dec
or
in
mov
mov
jne
mov
bound
clc
incl
stos
int
movsl
push
enter
inc
hlt
xchg
lods
jnp
dec
push
es
adc
insb
rcrl
lods
pop
jno
out
out
call
mov
int3
jl
xchg
lret
cld
test
mull
inc
ja
sub
xchg
xchg
pop
mov
inc
or
pushf
inc
ret
xor
fidivrl
ret
shr
pushf
std
notl
xlat
and
xor
dec
iret
lret
fwait
pop
ret
and
xor
lods
loopne
xor
cltd
push
mov
shrl
push
lock
insb
lods
push
cmp
push
jecxz
or
xchg
ljmp
or
push
adc
xlat
or
movsl
imul
xor
xchg
movsl
sub
psrlq
outsb
aam
loope
iret
mov
push
adc
rcll
jae
jp
mov
mov
mov
outsb
adc
adc
cmp
inc
mov
add
arpl
fadds
out
lret
or
jmp
xor
shrb
popf
sub
lds
jmp
pop
repnz
adc
or
push
or
mov
lds
dec
mov
sbb
movsl
sbb
dec
push
insl
and
shrb
pop
xor
fildll
rcrl
iret
push
xchg
mov
jnp
add
es
or
xchg
add
inc
xor
sbb
out
mov
xchg
adc
enter
xor
jnp
das
cmp
push
ja
xchg
sub
push
in
push
outsb
sub
test
fcomi
jmp
inc
push
shr
sub
pop
sbb
jg
adc
mov
mov
rorl
lods
mov
nop
mov
lcall
xlat
add
xchg
jge
out
sub
gs
iret
in
shl
out
rolb
ret
out
sub
inc
jl
ljmp
lcall
or
iret
out
leave
stos
xchg
sahf
pushf
outsb
lret
stos
pop
test
mov
pop
pop
sub
cmp
xor
dec
jnp
sbb
xchg
mov
cmp
in
inc
mov
xchg
or
bound
cwtl
icebp
test
dec
push
adc
outsb
pop
pop
push
shll
add
int3
testl
sbb
fdivrl
cmp
jmp
jno
cmp
gs
xchg
or
adc
fidivs
add
xor
loop
ss
lea
and
add
jns
es
inc
daa
test
cmp
pop
shlb
push
mov
mov
scas
mov
xor
mov
xor
sbb
pop
in
or
xchg
push
insl
cmc
cmpb
or
aaa
pop
jnp
hlt
jbe
xchg
setne
cld
and
cmp
xchg
mov
sub
sbb
imul
in
xchg
notl
lods
cmpsl
pop
fistpll
pop
repz
lods
out
lods
std
and
clc
aas
cmp
mov
cmpsb
and
decb
clc
xor
or
pop
ret
sub
xor
hlt
cmp
ret
in
lea
xor
mov
pop
push
enter
inc
or
cmp
ljmp
jmp
xrelease
in
xchg
cld
fcom
out
roll
fmuls
sub
jge
stos
lcall
repnz
cmp
lock
inc
loope
dec
cmp
jns
int
add
leave
push
sahf
mov
test
xor
les
xchg
xor
jbe
sub
mov
out
jle
mov
sbb
xor
jb
push
aam
pop
ljmp
iret
out
xchg
jg
dec
filds
lahf
xchg
mov
cmp
shrb
bound
add
cmp
inc
mov
inc
and
addr16
daa
xor
add
lahf
jns
adc
ret
lea
mov
cmp
adc
push
jecxz
fsub
cmp
ret
mov
pop
testb
movsl
lcall
insb
adc
mov
dec
push
push
inc
mov
lret
adc
lock
into
or
dec
std
adc
icebp
push
popa
xorl
lds
test
fsubrp
mov
lret
mov
xchg
pop
cmp
loop
inc
es
sahf
cwtl
jecxz
lret
xchg
push
dec
fcomp
sbb
pushf
sub
lods
fsubrp
aas
insb
sub
flds
popa
xor
imul
push
je
lea
insb
or
jg
fwait
sbb
clc
push
imul
mov
lret
lret
cli
es
or
inc
push
cmp
test
mov
dec
jmp
notb
rolb
jge
cmpsb
stc
mov
mov
imul
jno
std
imul
int3
jno
jecxz
push
mov
cli
cltd
xchg
sub
jo
flds
mov
cmpsb
testl
lds
je
pushl
xchg
popf
fistl
sahf
mov
sub
bound
jae
mov
add
add
sbb
test
sub
inc
and
pop
pop
ja
mov
cmp
lcall
data16
push
js
or
jbe
fldenv
or
mov
lods
jle
fidivrl
pop
mov
dec
mov
xor
mov
icebp
lds
out
add
std
xchg
das
jbe
sahf
fwait
push
mov
xchg
scas
out
inc
sub
movsl
pop
mov
push
pop
jl
gs
add
in
aas
push
push
sub
imul
sub
add
mov
pop
mov
int3
in
dec
sbb
scas
jne
push
pop
sar
stos
sbb
fimuls
jecxz
into
push
imul
xchg
and
pop
mov
icebp
aaa
pop
jmp
cmp
leave
nop
ret
ja
xor
aam
mov
mov
dec
jge
movsb
lock
fs
dec
mov
scas
imul
out
xor
adc
pop
es
repz
decl
jecxz
or
jmp
arpl
push
jb
test
lock
push
decb
dec
inc
adc
in
daa
lret
cmc
and
scas
inc
test
jns
jl
pop
stos
pop
dec
into
adc
subl
ljmp
gs
clc
sbb
inc
adc
mov
call
aam
inc
sub
jmp
jmp
loopne
mov
ja
int
psllw
int3
shl
in
inc
test
stos
xchg
lcall
jge
xchg
bound
push
mov
cli
jo
xchg
cwtl
mov
data16
jg
sub
jb
cmp
sub
xchg
xchg
mov
xlat
popa
fistps
decb
dec
in
movb
nop
cmp
fimuls
mov
lock
xchg
repnz
lea
inc
adc
int
mov
ss
add
xchg
mov
cmc
js
pop
lahf
add
push
daa
loop
ss
mov
jo
in
ljmp
jbe
stos
xchg
dec
lcall
and
data16
push
stos
outsb
subl
sub
fsubs
add
clc
or
add
add
dec
lcall
outsb
sbb
pop
stc
lds
push
fs
inc
cmpl
pop
scas
xchg
xchg
and
test
jno
and
inc
jp
adc
orb
xchg
adc
add
cmp
sub
cmp
out
jne
sar
fidivs
sub
xchg
and
test
popl
outsb
aaa
jg
rclb
pop
rcl
pop
mov
lahf
dec
xor
outsl
pop
inc
in
lods
push
mov
fxch
ja
repnz
mov
lds
sbb
inc
add
mov
mov
jge
popf
and
lret
mov
iret
and
repnz
mov
pop
xor
xchg
out
xlat
invd
or
sub
sbb
mov
pop
inc
movsl
add
xlat
adc
inc
and
addb
sub
xchg
pop
fcompl
dec
xchg
mov
js
lea
jmp
dec
cltd
sbb
hlt
lds
adc
lcall
and
ds
and
push
out
pop
movsl
or
fwait
out
inc
iret
jg
or
mov
ja
pop
test
daa
shlb
fsin
scas
out
mov
add
or
inc
inc
sub
jge
push
cld
pop
and
dec
icebp
sar
or
out
filds
mov
xchg
fwait
pop
out
out
mov
or
add
loope
xchg
sub
xor
mov
inc
push
arpl
xor
loop
pop
aam
lahf
pop
sbb
jbe
mov
lret
test
in
loope
iret
add
and
shl
cmp
mov
sub
mov
jns
mov
dec
inc
fbld
mov
cltd
loopne
xor
test
sahf
mov
inc
ficomps
push
iret
push
mov
and
adc
gs
jl
std
aaa
xor
out
or
adc
shlb
sahf
dec
dec
xchg
out
shrl
push
mov
pop
sub
lds
ds
sub
cmp
and
mov
test
push
cmp
popf
dec
xor
repz
je
or
sbb
mov
std
ror
push
out
push
mov
imul
pop
int3
push
leave
data16
xor
insl
sub
mov
and
mov
dec
into
xchg
ljmp
cmpsb
incb
popf
cld
out
je
loopne
lcall
movsl
mov
dec
push
rorl
test
nop
out
pop
dec
daa
push
or
insl
bsf
inc
push
daa
pop
xchg
std
inc
call
pop
mov
mov
push
lods
out
pshufw
imulb
sbb
add
dec
xchg
cmp
scas
stc
in
scas
out
popa
arpl
push
jne
jecxz
orl
mov
push
scas
std
gs
or
dec
testb
sbb
push
call
addr16
pop
add
in
fstl
mov
mov
xchg
movsb
cwtl
movsl
insl
int
add
dec
push
or
movsb
ja
xor
cwtl
sub
rorb
pop
int3
adc
iret
call
les
pop
nop
sbb
inc
mov
popa
outsl
daa
in
rcr
sub
in
fldenv
inc
jno
insl
mov
add
inc
adc
jp
scas
jnp
movsb
inc
push
lret
mov
pusha
jg
sahf
fisttps
inc
push
scas
dec
les
outsb
push
popf
xlat
addl
hlt
aaa
loopne
sbb
in
sbb
andl
inc
mulb
insb
arpl
outsl
cld
and
cmp
and
cmpsb
pop
fimull
dec
and
pop
mov
pop
pop
sbb
dec
xchg
sbb
aam
xchg
rorl
ret
xchg
sub
ret
inc
xor
adc
or
test
aaa
inc
outsb
xchg
push
inc
in
mov
mov
and
add
mov
std
mov
mov
xor
sti
imul
outsb
jge
jl
les
mov
and
mov
xchg
or
cmp
xor
sub
jmp
cmc
add
repnz
shll
mov
push
mov
mov
ret
xchg
sub
jmp
call
add
pop
add
pusha
push
repnz
mov
push
fdivs
cld
xchg
xchg
bound
mov
sub
sbb
shrl
mov
inc
jne
mov
adc
sub
push
stos
insb
pop
shrl
cmpsl
adc
call
imul
adc
js
out
sub
sbb
js
mov
mov
sbb
mov
fwait
jbe
mov
jns
faddl
cmp
loopne
das
sbb
nop
dec
mov
imul
inc
fists
jbe
nop
clc
mov
rorb
jbe
jbe
mov
mov
jecxz
iret
xor
outsl
cmc
fidivs
push
mov
pop
mov
push
jecxz
mov
jo
pop
push
fwait
dec
nop
icebp
dec
cld
in
jnp
inc
mov
xchg
inc
outsb
in
lahf
or
out
das
in
insb
xchg
jns
dec
mov
jns
insb
stc
movsl
xor
sub
mov
addr16
mov
mov
jno
sti
and
xchg
lahf
xor
pushf
fldenv
cmpsl
popf
jae
out
sub
stos
outsl
out
fadd
rcrl
jo
bound
mov
jle
push
loopne
ret
aas
hlt
inc
sahf
popf
shrb
sahf
cld
test
push
jb
imul
mov
push
out
mov
in
dec
repnz
cmp
cmp
mov
outsb
mov
jmp
pop
insl
sub
in
call
clc
jne
pop
push
outsl
xchg
xchg
jp
jl
aad
int3
and
xor
out
cld
jbe,pn
sbb
repnz
sbb
jl
xor
sbb
mov
incl
mov
jecxz
cs
cmp
daa
jns
pusha
xchg
pusha
xor
insl
outsb
and
stc
dec
lods
pushf
lods
ret
pop
push
pop
jo
xchg
xor
dec
call
imul
aam
insl
adc
jl
test
fldt
dec
lods
jp
jae
dec
jg
sbb
cmp
mov
pushf
pop
repnz
int
aad
and
add
dec
dec
daa
push
sub
cmp
ret
dec
pop
cwtl
dec
int3
inc
stos
adc
lret
insb
out
dec
dec
cs
push
xchg
sahf
icebp
push
cs
xchg
add
insb
push
das
jmp
jg
inc
inc
push
or
sbb
sub
cmpsb
insb
mov
jo
mov
cmc
pop
aaa
sarl
cmp
pop
sub
mov
icebp
mov
push
push
inc
ljmp
cmpsl
jecxz
icebp
sbb
cmp
inc
subl
cwtl
aam
fdivs
pop
dec
or
push
subb
xchg
dec
sbb
jecxz
add
fiadds
mov
mov
pop
out
pop
sbb
into
mov
xlat
cmp
stos
push
push
in
daa
push
mov
arpl
ret
xor
mov
in
addr16
and
std
dec
xchg
imul
mov
jmp
jl
mov
jge
daa
inc
inc
sbb
inc
jnp
xchg
ljmp
subb
mov
stos
mov
inc
xor
daa
cs
cs
cmp
sbbl
test
adc
or
xlat
xchg
mov
ljmp
and
cmpsl
sub
xor
fwait
cmpsl
enter
insl
mov
or
dec
mov
mov
jb
lahf
lret
stos
mov
enter
add
mov
mov
bound
cmp
insl
loopne
mov
mov
sbb
ja
mov
outsb
xchg
clc
mov
mov
xchg
in
aad
pop
vrsqrtps
mov
dec
test
mov
test
cmc
fildll
mov
je
lods
ds
pop
sub
pop
gs
stc
icebp
inc
fwait
xchg
push
inc
add
repz
test
fs
mov
sbb
jb
push
sub
jmp
jo
in
xchg
pop
sti
loopne
sbb
frstor
mov
dec
stos
orps
pusha
cmp
inc
dec
dec
pop
pop
jno
jle
js
insl
mov
call
jecxz
cs
scas
dec
add
out
mov
sub
and
xchg
sbb
push
pop
cmpsl
cmc
ficompl
push
subl
jbe
push
movsl
inc
xor
push
sarb
jmp
out
jo
sar
dec
and
sti
cli
xor
jle
jp
sub
xor
and
mov
add
aaa
jg
and
imul
cli
or
mov
dec
push
pop
pop
enter
sbb
cwtl
jl
mov
int
int3
testb
arpl
pushf
jle
mov
cs
sub
xor
add
movsl
in
sub
aad
shrl
mov
mov
and
xor
aad
insl
fisubs
iret
mov
roll
add
push
push
stos
xchg
int
lcall
mov
fisubs
test
mov
cmp
add
pop
shrb
test
cmc
and
call
bound
dec
pusha
mov
fdivl
pop
fdivl
test
xor
dec
xchg
daa
and
push
xor
dec
fimuls
xchg
lret
sub
adc
jle
or
mov
flds
aad
or
or
in
rclb
sub
add
out
pop
push
mov
mov
xchg
pop
aas
aad
sub
out
fcomip
subl
cmp
and
sbb
pop
rorb
inc
sbb
mov
mov
dec
dec
mov
fs
mov
sbb
mov
xlat
fwait
xor
mov
add
pop
into
pop
enter
xchg
sarb
pop
pushl
mull
daa
cld
enter
loopne
sub
scas
push
in
fsubrl
adc
aaa
xor
and
push
in
add
test
mov
imul
push
scas
dec
fmuls
in
cmpsl
insb
test
cwtl
mov
cmp
and
mov
ja
mov
mov
out
push
out
push
rcl
sbb
lret
pop
call
fld
bswap
xor
xor
lea
test
test
es
mov
add
pusha
pop
or
inc
or
negb
adc
filds
popa
mov
data16
or
cmp
add
mov
push
rolb
push
es
jge
ss
aam
into
cmp
xor
mov
outsl
push
cmp
das
adc
mov
push
pop
jo
cld
lods
jnp
push
cmp
xlat
xchg
inc
or
push
dec
repz
outsl
jne
pushf
loopne
jae
arpl
lods
push
ljmp
shl
inc
and
loopne
adc
jl
fmuls
mov
xchg
adc
and
loope
push
sub
movsl
repnz
jle
sbb
ds
mov
hlt
cli
pop
mov
sbb
push
leave
inc
fadd
mov
and
pushw
cmp
jle
mov
nop
lcall
andl
repz
dec
insb
mov
pop
negb
testb
mov
jo
xor
and
mov
je
xchg
cmpsl
xor
sub
cmc
pop
mov
cs
in
adc
adc
movsb
and
js
cli
xchg
sbb
and
xor
daa
in
jo
push
sub
and
mov
cmc
sahf
lods
movsl
xchg
in
addr16
cmp
iret
enter
icebp
aaa
fs
cs
or
pop
mov
test
bound
fld
andb
xor
scas
dec
rcll
add
shr
pop
mov
popa
sub
rorl
lcall
xchg
aam
mov
xchg
repz
std
fdiv
mov
or
mov
mov
enter
jae
test
sbb
sub
fldl
cli
aad
inc
test
outsb
pop
push
data16
jns
jae
mov
inc
inc
sbb
lret
or
into
ss
pop
and
ror
outsb
and
ja
fnsave
xor
mov
out
ja
js
add
dec
inc
gs
inc
lock
inc
gs
sbb
stc
mov
call
cwtl
adc
sti
fs
adc
dec
sub
jo
into
inc
jp
pop
inc
jae
popa
lods
sbb
les
dec
in
stos
out
mov
ss
mov
jno
icebp
testb
or
or
mov
in
cmp
loope
fldl
sbb
push
jge
mov
enter
mov
pop
add
rcrl
jae
push
mov
adc
ret
inc
addl
inc
sub
add
pop
aad
mov
add
pop
inc
imul
push
js
outsl
lds
mov
fsubrl
addb
in
in
inc
imul
xorl
aas
mov
hlt
or
cmc
add
jb
add
dec
mov
adc
mov
addl
scas
jmp
ljmp
stos
or
je
adc
clc
jp
cmp
sbb
jbe
aaa
data16
xchg
into
fdiv
adcl
jp
pop
jnp
add
mov
inc
fs
xchg
pushf
repnz
test
fisttps
sub
inc
enter
pop
cmp
mov
nop
fwait
inc
andb
cmc
jecxz
fistpll
mov
mov
xor
dec
push
add
out
repz
mov
lea
lcall
lahf
sti
cmp
or
clc
pop
jnp
jae
jno,pn
icebp
into
je
pop
adc
andl
arpl
and
daa
lock
pop
sub
mov
push
push
pop
add
fstps
int3
sarb
add
mov
xchg
aas
pop
mov
insb
shll
daa
cwtl
enter
adc
xchg
mov
jge
push
ret
mov
xor
clc
pop
jb
in
test
addr16
add
stos
push
inc
mul
das
xor
dec
dec
out
mov
and
dec
xchg
mov
pop
sub
jge
repnz
into
clc
xor
rcll
push
clc
lock
aad
pop
popf
mov
or
push
cmc
push
divb
fisubs
mov
roll
adc
outsb
lahf
and
jecxz
lahf
dec
addl
insl
add
pushf
sbb
or
pop
sarb
arpl
and
push
xor
je
mov
popa
add
mov
movb
push
push
mov
fisubrs
in
push
into
rolb
inc
adc
stos
cmp
stos
punpckhwd
dec
dec
and
or
nop
xor
lahf
push
pop
pop
repnz
fiadds
xchg
leave
pop
sbbb
xchg
push
es
mov
mov
or
js
repnz
mov
push
lcall
out
xorl
cmc
out
dec
xchg
pop
xor
in
adc
je
test
pop
ret
pop
cmpsb
outsl
jmp
jle
loope
mov
xor
jb
mov
aad
or
dec
sub
jecxz
push
mov
rep
adc
int3
mov
adc
push
pop
sbb
mov
lret
and
dec
test
ret
nop
cmpsb
bnd
push
cmp
or
fidivl
popf
adc
push
push
pop
sub
push
pusha
push
enter
add
rcrl
arpl
and
cmp
cmp
mov
rolb
jecxz
jnp
insb
imul
pop
jno
mov
and
sti
push
mov
stc
cmpsb
or
cmp
gs
test
push
xlat
sub
dec
lds
sbb
movsb
push
mov
lcall
pusha
push
xchg
mov
loope
sub
pop
adc
fstl
inc
sahf
jne
dec
enter
repnz
mov
inc
mov
xor
popf
xor
testb
addl
imul
dec
or
adc
dec
mov
jb
xor
pop
adc
add
mov
sarb
xor
sbb
ret
icebp
push
xor
dec
and
dec
cmova
stos
cmp
dec
mov
xor
cwtl
stos
lcall
in
fdivrl
popf
dec
xor
xchg
mov
push
pushf
and
add
enter
add
fwait
loope
or
gs
cltd
test
lea
cmp
xchg
adc
iret
mov
movsl
fbstp
ja
mov
les
jo
sbb
mov
sbb
fldl
in
nop
in
push
adc
add
jp
cmp
inc
stc
mov
sub
stos
loop
push
pop
jecxz
lds
dec
iret
insl
push
vmovshdup
sbb
or
clc
mov
mov
mov
add
lcall
loop
xchg
push
in
clc
movsb
lea
jne
inc
dec
outsb
lret
jge
fisubrs
mov
lea
jnp
cld
popa
push
fadd
out
inc
pop
ret
std
scas
xchg
outsb
sbb
jb
jb
and
push
xchg
cmpsl
pop
sbb
int
dec
pop
fbstp
xchg
std
dec
or
leave
push
dec
add
cmp
adc
stc
xor
mov
mov
hlt
into
mov
cmp
mov
dec
inc
bnd
and
lret
mov
das
test
push
xor
push
iret
je
pop
adc
movl
fstpt
xor
test
int
push
sbb
into
mov
xor
lahf
xchg
xchg
test
out
xor
pop
jle
adcb
add
leave
ffreep
ja
shrl
outsl
sub
lahf
rol
push
in
notb
movsl
jle
push
fsts
gs
sbb
or
xchg
sub
clc
push
lods
xchg
xor
or
fiaddl
cld
in
cld
dec
and
out
lds
xchg
and
mov
mov
adc
sbb
lahf
and
xlat
outsb
test
cmpsb
xchg
lods
enter
xchg
jns
mov
pop
mov
pop
jne
and
lahf
adc
stos
fs
adcl
mov
cmp
test
add
dec
scas
rcrb
mov
adc
add
imul
int3
icebp
fisubrs
sbbb
cld
sbb
mov
sbb
mov
or
pop
push
imul
dec
cwtl
lds
test
xor
lods
lods
or
mov
mov
adc
lret
and
in
test
test
mov
lock
je
pop
or
mov
test
addl
inc
ss
cld
jg
adcl
mov
xchg
xor
nop
loop
lahf
movsl
jge
ss
rol
sbb
orl
stos
dec
mov
or
rcl
leave
neg
mov
cmp
pop
jnp
popf
sbb
pop
push
and
repnz
mov
dec
in
jne
xchg
mov
test
js
sbb
andb
dec
pusha
xchg
shrl
and
pushf
jbe
iret
lret
xlat
imul
imull
adc
cmpsb
adc
repz
pusha
fnsave
call
inc
mov
add
sbb
pop
push
pop
adc
xchg
repnz
addb
mov
fsubrl
in
rclb
xchg
lret
sub
jl
mov
cmp
pop
int
testb
out
clc
add
or
or
stos
pop
mov
pusha
pusha
adc
lock
mov
aas
mov
or
cmp
pop
pop
sbb
push
jge
pusha
mov
xchg
repz
push
inc
test
push
mov
push
in
cwtl
pop
testl
ljmp
mov
nop
leave
push
hlt
int3
jp
test
push
shlb
les
jae
fmull
pop
lret
sub
aas
hlt
push
or
hlt
inc
les
xchg
sbb
mov
jle
rcrb
xor
add
push
mov
dec
mov
test
daa
or
dec
pop
push
aaa
inc
loop
dec
lock
fndisi(8087
addr16
ret
sub
sbb
out
imul
int3
push
ljmp
out
lock
in
mull
les
mov
push
jecxz
adc
and
aad
push
adc
sub
jnp
sub
popf
lret
adc
cmp
xor
pop
xchg
hlt
inc
scas
mov
mov
cmpsl
pop
pmaxub
arpl
adc
cmpsl
ret
leave
cs
push
mov
xor
mov
lret
pop
mov
dec
sbb
fs
push
dec
jp
leave
jbe
xchg
aad
iret
dec
lods
mov
lea
fstl
aad
inc
add
push
mov
inc
imul
lret
lds
jge
jns
and
ljmp
stos
sarl
pushf
loope
and
stos
inc
jg
fwait
les
fucompp
popw
jnp
cmp
dec
mov
adc
testl
dec
lahf
das
sub
pop
cmp
js
mov
sbb
inc
pop
and
sub
dec
cmc
pop
outsl
mov
xchg
in
mov
aam
sub
mov
sub
lock
pop
imul
je
mov
popa
adc
and
pop
lods
push
xor
mov
sub
and
jno
inc
sub
and
jb
push
pop
sub
movsb
mov
xor
into
orb
scas
sbb
scas
xor
mov
mov
dec
sbb
sarl
testl
dec
je
fs
jno
les
sbb
subl
pop
test
add
sbb
inc
in
in
push
or
xchg
pop
lods
aaa
xchg
pop
pop
pop
adc
subl
xchg
mov
pop
rcll
cmpl
pop
leave
jmp
sub
or
hlt
sub
andl
xchg
mov
mov
xor
movsb
imul
insl
fsubrl
cwtl
out
push
out
arpl
add
cvtdq2ps
fbstp
cwtl
pushf
and
or
filds
sbb
addl
mov
and
inc
sub
inc
add
fmuls
pop
hlt
rcl
nop
and
into
xchg
sbb
cmp
pop
clc
popa
mov
lods
outsl
pop
out
call
or
or
inc
dec
mov
sbb
add
dec
adc
sub
js
dec
push
xor
rol
cs
sub
push
insb
lahf
aaa
pop
xlat
js
in
or
dec
sub
dec
std
hlt
cltd
and
mov
stos
adc
inc
pop
pusha
insb
jle
inc
out
call
bound
xlat
ds
cmp
inc
and
push
jmp
stos
xor
mov
mov
jns
loop
fsubr
shlb
jno
das
int3
adc
jle
mov
ret
lea
pop
pop
sbb
dec
shrl
push
popa
xor
imul
pusha
loop
push
fcoml
fiadds
fadd
sub
shlb
loope
push
rcl
xchg
push
mov
dec
xchg
int
cltd
nop
imul
jno
xchg
mov
cld
xchg
adc
in
pop
jno
mov
cmp
pop
cmpsl
jo
adc
out
out
orl
inc
or
push
xor
sub
fldcw
pop
nop
testl
pop
enter
pop
divps
gs
or
xchg
daa
pushf
pop
mov
jns
ret
outsb
xor
shlb
inc
out
mov
inc
xchg
mov
repnz
cmp
loope
mov
ret
subb
pusha
mov
je
inc
imul
push
cmp
loop
push
dec
adc
xchg
lods
jmp
je
scas
bound
cmp
imul
arpl
mov
mov
mov
shlb
pop
loopne
cmpl
push
or
add
out
xor
mov
lret
add
addl
pop
ficomps
sub
pop
mov
sbb
leave
xchg
xor
mov
test
ficoml
mov
insl
test
ficoml
movsb
mov
cmp
std
in
dec
cmp
cld
sbb
mov
outsl
adc
push
jno
lods
test
lea
cwtl
jle
lock
test
ret
test
jo
arpl
push
sbb
pop
sub
push
or
push
jl
adc
pop
inc
add
and
ret
or
sti
aas
lea
adc
xchg
loopne
or
int
or
repnz
jae
out
mov
scas
add
xor
loopne
cwtl
jle
push
xor
inc
cmp
pop
sbbl
shlb
adc
stc
push
pop
out
dec
sahf
mov
xchg
pusha
fadds
out
mov
push
dec
cmp
mov
sub
jecxz
out
push
test
add
movsb
les
adc
adc
push
out
paddsw
pop
in
cld
call
add
cwtl
jmp
insl
sub
mov
clc
adc
in
sbbb
dec
sbb
mov
mov
je
jl
or
cmp
movsl
xor
aaa
es
jne
lret
mov
mov
test
push
out
bswap
jnp
je
scas
call
call
aas
mov
shrb
divb
cmp
jno
jle
addr16
nop
push
xchg
adc
mov
sub
jbe
xor
cmc
xchg
gs
shr
dec
movsl
clc
mov
pusha
scas
call
push
rorl
loop
fisubl
outsb
ja
adc
clc
cmpsl
push
add
jbe
dec
dec
mov
sbb
mov
add
push
js
jo
xorb
push
push
repnz
aad
int3
pop
xor
dec
daa
cmp
jne
mov
xchg
add
cmp
sub
test
dec
sbb
loope
dec
cmp
lods
mov
pop
sub
mov
xchg
inc
outsl
xchg
push
cmp
xor
rcrw
push
aas
add
out
out
dec
mov
repz
adc
mov
xor
outsb
xchg
dec
xchg
in
stos
push
mov
shll
dec
aam
or
outsb
mov
mov
mov
mov
mov
pop
pop
adc
arpl
cwtl
and
cmp
call
cld
shlb
rclb
xor
lret
fidivl
xor
js
mov
aad
dec
mov
int
pop
mov
pop
cltd
iret
dec
fisttpl
xor
push
out
out
orl
pusha
aaa
lcall
pusha
dec
sub
and
jno
movsl
jle
fwait
daa
psrld
adc
mov
add
pop
sub
aam
push
inc
mov
cld
lea
stos
adc
push
in
sbb
pop
mov
out
cmp
dec
lret
popl
xor
push
mov
aad
push
orb
in
int3
mov
jecxz
movsl
clc
fsub
js
xor
xlat
in
adc
cwtl
adc
and
gs
push
pushf
or
xchg
repz
pushf
movsl
mov
inc
test
cli
mov
mov
ret
pop
movsb
imul
sbb
dec
push
das
pusha
std
sub
gs
ret
cmp
add
mov
mov
fnsetpm(287
movsl
hlt
std
into
jmp
or
out
cli
mov
mov
pop
pop
daa
pop
sbb
or
cwtl
rcrl
popa
mov
mov
jo,pn
std
add
push
in
cld
cmp
das
fcmovb
int
clc
sbb
add
or
adc
ds
xor
in
insl
and
push
jecxz
push
addr16
rol
xlat
push
in
cmp
iret
pop
mov
push
js
or
dec
leave
jbe
mov
inc
inc
repnz
imull
rcll
test
xchg
int
xor
jl
jl
or
dec
mov
dec
test
pushf
imul
xorb
or
insl
jo
push
imul
packuswb
cli
hlt
adc
or
dec
stos
or
mov
and
add
sub
dec
mov
fscale
mov
add
xchg
xor
dec
hlt
sub
fistps
imul
ss
outsb
jnp
shl
mov
sbb
push
jne
flds
and
pop
popa
mov
out
shl
jg
test
das
stc
lcall
mov
dec
cmp
sub
xor
jbe
and
fildl
movsl
fiaddl
mov
lret
mov
inc
mov
nop
dec
pop
inc
jnp
in
aaa
js
xchg
push
cli
push
arpl
push
pop
mov
jo
inc
jg
aad
jnp
in
inc
sub
xor
nop
sbb
cmpsl
in
sub
bts
cmp
mov
inc
int3
out
cli
jge
pop
pop
dec
inc
loop
sub
cmp
sti
jle
dec
or
xor
jae
inc
or
mov
mov
xchg
sbb
sbb
mov
cmp
xchg
push
mov
loopne
into
mov
mov
pop
sbb
or
in
in
mov
xchg
mov
mov
add
mov
fstpt
inc
jmp
sub
push
or
sbb
loop
dec
popa
aad
jb
out
and
add
dec
push
push
sub
sbb
fwait
jmp
test
xchg
and
or
dec
call
ljmp
scas
mov
std
iret
pop
popl
jo
mov
std
add
sbb
adc
pop
mov
in
mov
inc
shll
or
jbe
arpl
sbb
pop
sub
sub
xor
push
or
ds
add
and
test
and
pop
imul
mov
stos
or
fildl
push
into
and
add
shl
nop
mov
xor
lods
lods
cmp
fistl
mov
cmovns
xchg
mov
mov
push
jl
and
push
fnstsw
jecxz
loopne
jecxz
cmp
xchg
mov
in
dec
pop
sub
jg
push
adc
lock
and
pusha
xchg
in
cmp
add
ret
ret
fs
sbb
fadds
repnz
jne
mov
inc
clc
dec
mov
flds
mov
lret
mov
mov
xor
test
inc
sbb
push
jae
sahf
or
or
ds
out
pop
cmc
jne
mov
into
test
xchg
mov
mov
dec
inc
mov
sbb
mov
mov
sarl
dec
nop
or
or
xor
jecxz
mov
shl
movsl
xchg
aad
cltd
and
ljmp
je
or
add
cmpsb
movsb
xchg
push
or
test
xor
fildl
loope
xor
fs
lods
lcall
scas
mov
ss
imul
test
outsl
lcall
fiadds
cmc
sub
lds
push
outsl
push
shrb
pop
lcall
addr16
adc
or
fucomip
sahf
adc
push
jae
hlt
pop
fs
add
addl
jns
xchg
btr
or
frstor
mov
loope
push
inc
pop
test
mov
jg
lds
add
in
sub
inc
cmpsl
not
adc
push
movsb
ret
std
into
and
test
lret
in
jo
sbb
lods
jbe
pop
mov
jnp
daa
arpl
mov
cs
adc
insl
add
xor
lea
pop
adc
mov
sti
rcrl
ss
test
xlat
pop
dec
add
sbb
sbb
mov
mov
pop
addl
shll
xchg
mov
out
mov
jne
inc
sbb
shll
call
adc
inc
loope
dec
in
fwait
outsl
shl
ficomps
movsb
xchg
jge
jns
dec
ss
or
pop
lret
jnp
in
ds
adc
cmp
push
mov
outsl
cmpsl
das
xchg
push
push
cmpl
out
mov
cmp
sub
jg
xor
ficoml
inc
bound
imul
rcr
sbb
add
jns
mov
push
shr
ja
stos
jo
rorb
and
add
jge
push
pop
cmpsb
mov
divb
ja
mov
jge
mov
or
movsl
das
mov
and
pop
add
fiadds
loopne
lcall
adc
adcl
push
mov
xor
mov
pop
repnz
adc
lret
push
inc
and
es
pop
cmpsl
inc
outsb
cli
sub
mov
loop
cmovl
call
push
test
sti
insl
add
or
sub
ds
cmp
jb
xor
mov
pop
xchg
mov
shrl
dec
mov
dec
out
pop
ret
push
push
int
mov
shlb
je
movsl
xor
out
dec
sbb
jge
xchg
pop
cwtl
lea
sbb
shll
xchg
xchg
add
movsb
inc
test
sti
loope
out
fcoml
sub
inc
jne
aad
pop
mov
idivb
adc
jo
mov
jecxz
pop
cld
sarb
push
jle
js
subl
cmp
xchg
aad
cmp
push
jl
iret
fldt
iret
aas
jnp
xchg
lock
sbb
dec
xchg
inc
ljmp
mull
lds
dec
lods
cmp
ljmp
clc
hlt
hlt
movsl
icebp
mov
aas
lods
fs
fists
sbbb
subl
sbb
test
les
inc
in
cmp
lods
cmpsb
mov
inc
jecxz
movb
loopne
and
rcrl
cmpsb
pushf
negb
push
mov
sarl
push
pop
mov
iret
dec
repnz
icebp
pop
cmp
mov
lret
add
push
cmp
and
mov
sub
push
mov
out
movsb
push
cmp
ds
rol
fadds
adc
inc
cmp
xchg
or
jne
hlt
lret
xor
and
mov
adc
xor
cs
mov
movsb
xor
jne
xchg
lds
push
cmp
iret
mov
add
xor
xor
int3
pop
fsubr
mov
lret
sti
pushl
mov
mov
cmp
cmpsl
jg
mov
cmp
mov
cld
je
dec
sbb
mov
sub
jae
push
pop
mov
mov
inc
ja
cld
imul
push
sub
ds
movsl
mov
dec
xor
popf
sbb
fistps
in
lods
jg
pushf
cmp
inc
mov
or
push
mov
dec
lods
xchg
mov
add
je
ja
lock
jecxz
jb
mov
cmp
je
scas
scas
idiv
mov
xorl
sbb
sbb
xor
fldt
out
movsb
test
push
sahf
sti
dec
test
push
popa
cmpsb
bound
adc
adc
ja
sbb
cmp
clc
popa
insl
or
xor
dec
mov
mov
pop
pop
lock
xchg
xor
daa
add
sub
xor
data16
mov
arpl
cli
movsb
mov
iret
mov
das
xchg
pop
cmp
ret
and
mov
sbb
mov
scas
nop
fs
cmp
bound
bound
cld
and
and
rcr
or
loopne
outsb
push
mov
inc
cltd
xchg
aaa
push
std
push
loopne
sarb
rcrl
fildll
lret
movsb
push
jle
stos
mov
movsb
bound
lea
add
mov
je
jge
pop
insl
movl
dec
arpl
cmpb
arpl
mov
jno
jg
mov
pop
je
cs
fnstcw
xchg
cmp
daa
add
jb
test
lret
dec
add
inc
stc
sbb
and
in
or
pop
xor
shrb
and
and
clc
cli
stos
dec
aad
xchg
pop
icebp
jo
cmpsb
int
xor
lods
or
cmc
stos
cmovne
aam
mov
movsb
lcall
sti
loopne
jp
push
dec
adc
xchg
adc
push
push
add
or
mov
dec
jo
mov
dec
push
add
imul
gs
loope
es
mov
data16
jb
xor
mov
xchg
pop
hlt
fcompl
shlb
push
sbb
push
push
jne
mov
xchg
out
mov
cmpsl
cmp
aam
nopl
ljmp
stos
int3
daa
cmpl
adc
cmp
rclb
cmp
add
adc
lcall
push
mov
loopne
pushf
sbbb
mov
scas
test
pop
xchg
sub
jmp
push
jmp
pushl
push
aas
sti
pop
adc
xor
into
mov
into
lods
data16
sbb
push
mov
push
test
jp
or
push
pop
cmc
pop
sbb
outsb
inc
std
push
mov
aad
lods
das
out
xchg
jl
out
push
int
pop
jge
movsb
push
divl
mov
movsl
fists
ds
jno
jbe
xor
xor
fisttpll
mov
and
imul
jne
dec
adc
mov
inc
lret
sahf
ljmp
adc
icebp
cmpb
add
sub
mov
icebp
je
imul
mov
sbb
fs
orl
repnz
into
insb
fdecstp
jo
mov
dec
adc
loope
dec
xor
out
psubsw
xor
movsl
jnp
dec
lcall
repz
hlt
out
xchg
ror
inc
xlat
mov
lods
dec
loopne
jns
xchg
inc
push
fs
cmpb
aas
idiv
imul
movsl
jb
inc
cli
cmpsb
lret
data16
mov
mov
push
fld
and
aaa
mov
fwait
cmp
inc
clc
ss
bound
mov
movsb
push
les
xchg
ficomps
mov
popa
imul
jle
test
shrl
push
mov
lds
pop
rcl
pop
push
and
scas
mov
adc
add
xor
lcall
pop
pop
add
fs
test
adc
push
clc
ljmp
in
mov
dec
cmp
push
sbb
sbb
push
sbbl
fcompl
sub
or
into
scas
lret
push
add
mov
adc
jle
cltd
fwait
in
enter
mov
pop
orb
lods
testl
cmp
orb
fwait
into
outsb
mov
push
sbb
jnp
or
leave
pop
shrb
leave
sub
jl
xchg
jo
jno
sub
and
sbb
cltd
outsl
ds
std
rcrb
iret
xchg
push
push
xchg
push
xor
xchg
adc
data16
push
enter
jle
daa
in
notl
xchg
rolb
mov
push
xor
loope
and
loop
notl
gs
jns
mov
sbb
pop
mov
mov
popf
cmp
dec
mov
xor
arpl
jnp
xchg
in
lcall
ficoml
loope
es
dec
mov
mov
fs
in
and
dec
inc
add
stos
lods
push
call
pop
les
iret
pop
or
fwait
mov
cmp
pusha
iret
jg
test
repnz
sbb
test
lds
inc
or
movsb
mov
sub
sub
clc
dec
cmc
int
setno
and
stc
add
sbb
mov
test
mov
idivl
xor
and
lods
movsl
fists
xlat
rolb
cltd
cmp
ret
adc
xchg
in
mov
xor
pop
jo
rclb
cmp
shlb
cmpsl
or
icebp
dec
inc
bnd
into
sub
mov
pop
aas
inc
cwtl
adc
or
test
add
xchg
jno
jbe
cmc
mov
jl
push
orb
sbb
addb
pusha
and
and
sub
iret
sub
cmp
in
fdivrs
daa
mov
pop
and
mov
add
jne
xchg
sti
imulb
out
jecxz
ljmp
les
mov
dec
dec
arpl
or
lods
push
xchg
mov
mov
int
sbb
cli
mov
mov
cmpsb
pop
shlb
jns
lods
into
scas
nop
in
xchg
aad
add
cmp
pop
xchg
xorb
pop
inc
push
int
sarb
std
sbb
popf
lock
push
movl
sti
push
leave
insb
sbb
aas
adc
or
je
test
mov
xor
stc
sbb
cmp
insl
int
jae
sub
mov
int3
lds
sahf
push
and
int
jne
dec
cwtl
bound
pop
push
out
movsb
mov
add
mov
pop
icebp
xchg
mov
scas
idiv
testl
testb
sbb
and
out
test
nop
sub
push
sbb
nop
sar
loope
das
loop
ja
mov
jnp
ss
adc
cmp
inc
mov
xor
jl
test
or
subb
test
jns
call
in
xor
fimuls
and
dec
and
movsb
call
loop
sti
sbb
data16
nop
dec
std
pusha
cmp
call
addb
push
push
faddp
data16
stos
inc
rep
mov
sti
cmp
inc
mov
out
add
adc
repnz
xorb
adc
lcall
fsubs
pop
rolb
push
sub
pop
lds
push
push
dec
in
jle
inc
and
rcrl
ss
in
push
sub
stc
mov
lret
jbe
sub
sbb
stc
loopne
push
data16
insl
cli
inc
iret
mov
xchg
jns
mov
adc
and
imul
and
les
jo
inc
int
push
leave
fistl
cltd
mov
jno
xchg
xchg
jecxz
xchg
inc
and
dec
push
lcall
jno
in
push
xor
mov
sahf
or
mov
inc
inc
pop
movsb
outsb
movsb
xchg
lea
inc
push
mov
loopne
jbe
and
mov
push
cmp
std
xchg
outsb
push
push
shrb
dec
mov
cmp
std
push
test
cwtl
les
xor
aas
clc
and
lods
das
adc
mov
popaw
in
mov
js
inc
inc
cli
loop
call
inc
pop
in
or
and
push
mov
jecxz
loopne
mov
dec
dec
rcll
jmp
stos
insl
push
xor
jecxz
mov
pop
lea
test
and
xchg
ss
scas
mov
cwtl
xlat
les
push
xchg
iret
xchg
jl
xchg
fists
push
pop
cwtl
xor
adc
sub
lods
sbb
cwtl
pop
fsave
jns
jae
push
lea
sahf
leave
je
push
out
clc
mov
add
inc
dec
aaa
bound
cmp
rcll
mov
je
xchg
mov
adc
inc
addr16
mov
out
fnstenv
in
subb
push
add
in
shlb
pusha
outsb
add
mov
mov
aaa
js
addr16
les
sbb
pop
sbb
and
jmp
push
mov
push
dec
pop
test
and
loop
sbb
pop
into
ror
shrl
inc
jecxz
add
add
xchg
dec
sbb
js
pop
iret
xlat
cld
aas
sbb
shlb
sub
mov
mov
inc
call
popf
or
insl
and
jne
divb
jo
jb
lods
orps
cld
ffree
fldl
or
or
repnz
mov
pop
xlat
sti
mov
or
ds
scas
push
jo
shlb
sti
and
add
cmpsl
fildll
jnp
xchg
dec
cmpsb
scas
xchg
aad
sbb
xor
push
aad
push
add
push
add
dec
mov
pop
cmp
pop
leave
pop
add
mov
cwtl
data16
mov
pop
push
xchg
mov
das
sbb
sbb
lahf
lcall
rcr
cmp
add
cmp
push
test
inc
cltd
lret
dec
xchg
pop
dec
loopne
sbb
test
inc
ficoms
mov
or
xlat
ja
and
sbb
rolb
or
push
jb
call
xchg
loope
inc
cs
or
ja
sbb
inc
rcrb
in
idivl
test
jp
or
mov
adc
lret
jmp
inc
shlb
pushf
cmp
cmp
sbb
movups
sbb
jmp
adcb
out
mov
fcomps
mov
imul
jecxz
cmp
cmp
test
shrl
addr16
test
adc
movsl
xor
mov
mov
leave
roll
jb
mov
xchg
pop
fistpl
and
in
aas
test
aaa
sbb
pop
and
int3
les
mov
inc
ja
rcrb
es
xchg
sbb
cwtl
pop
cmc
push
outsl
insb
jmp
add
cmp
mov
les
sub
sbb
js
call
xor
dec
pop
or
mov
sub
pop
mov
lahf
bound
scas
push
mov
insl
jmp
sbb
sub
xchg
mov
addb
cmc
fwait
mov
push
fcoml
sub
xchg
lods
sbb
loope
loope
cwtl
ret
roll
out
vunpckhps
push
jmp
jne
add
and
dec
jnp
cmp
dec
inc
data16
mov
mov
xor
fldl
pop
or
xchg
mov
icebp
scas
and
cmp
in
enter
cwtl
mov
mov
outsl
lods
arpl
insl
xchg
xor
call
cmp
jbe
mov
jmp
jg
sahf
xchg
dec
adc
cmpsl
stc
jbe
dec
loop
popf
cmp
push
mov
push
cwtl
push
ret
outsl
cltd
xchg
call
cmp
add
stc
lcall
inc
push
cs
imul
xor
sbb
pop
jnp
bound
pop
sbb
jg
cmp
push
cmp
je
push
add
icebp
dec
cmp
inc
push
dec
mov
push
loope
enter
dec
jnp
rcr
fwait
repz
lea
jnp
in
xlat
push
test
cmp
shlb
punpckldq
jle
xor
shrl
pop
or
mov
pop
sarl
insb
push
mov
dec
sbb
loop
iret
push
and
shlb
inc
pop
sbb
push
pop
lods
ljmp
test
push
mov
sbb
ffreep
in
pushw
int
xor
or
sbb
pop
movsl
lea
stc
pop
ret
insb
jns
ja
sti
xchg
cmp
sub
int
lret
out
and
jb
es
dec
sub
push
jp
outsl
jg
fldt
scas
dec
ljmp
mov
aam
push
mov
lea
aam
ffree
jl
call
adc
loop
adc
mov
mov
clc
cld
aam
jo
sahf
adc
sub
cld
mov
dec
cmp
mov
pop
xor
mov
cmp
xor
push
out
dec
ficoml
pop
ja
ss
inc
hlt
pop
inc
xor
fldenv
mov
mov
cs
leave
test
outsl
sbb
bound
jge
sti
lret
popa
dec
dec
repz
lea
or
add
or
dec
insb
ljmp
xchg
fs
std
ljmp
and
and
sbb
jno
fwait
jne
dec
push
cmpsl
int3
push
dec
arpl
and
loopne
ret
out
push
push
push
cmp
inc
push
and
mov
push
rorl
cltd
sub
sbb
mov
clc
into
sbb
or
bound
mov
out
pop
or
fwait
jmp
cltd
rcrl
dec
cwtl
jo
push
dec
ljmp
jp
shll
or
push
or
push
pop
imul
cmp
cmc
movsl
test
sub
enter
scas
add
cmpl
mov
inc
aaa
or
popf
lock
mov
and
or
fsub
mov
cmp
loopne
jo
jns
jle
mov
cmp
xchg
pop
rorb
mov
xchg
mov
inc
lock
jecxz
pop
jb
rorl
pop
add
mov
fadds
jl
pop
xchg
mov
repz
push
imulb
cmp
jno
scas
repz
fstps
add
es
cmp
pop
movsl
fwait
sarb
mov
pushf
outsl
adc
loopne
rol
inc
push
dec
jnp
xchg
pop
aad
loop
xchg
xor
add
pop
sub
xchg
and
xor
push
xchg
xchg
daa
ss
test
push
stc
out
sub
xor
mov
push
fwait
jnp
adc
inc
sub
or
adc
or
push
cld
adc
jo
and
imul
jge
jno
dec
out
jno
adc
lahf
repz
repnz
pop
lret
pop
mov
cld
pop
or
jp
fwait
push
fisubl
dec
aam
mov
or
clc
inc
ret
add
xlat
sar
fnsave
popf
jmp
fisubrs
or
cli
push
xor
sub
inc
jg
cmc
out
sar
jne
mov
xchg
je
inc
fsub
inc
xchg
cltd
cmpsl
sub
push
das
dec
popa
push
and
mov
cmpsb
int
sub
push
ss
and
mov
mov
shrb
xchg
mov
mov
call
jne
imul
fdivs
data16
rcrb
push
je
rcr
adc
sbb
mov
jp
adcl
push
rorb
fists
dec
sbb
push
in
pop
xchg
std
push
fdivs
lret
push
jae
cmp
sub
data16
or
jl
jg
sbb
aaa
xchg
add
imul
cmp
stc
and
std
or
mov
dec
lahf
and
bound
loope
test
popa
addl
mov
std
les
jp
out
pushf
fldenv
mov
outsb
add
adc
cmp
movups
aam
out
fidivrl
in
inc
orl
dec
xchg
aas
pop
cmp
retw
loope
stos
or
push
fisubrs
setne
out
orl
or
push
popf
cltd
push
incl
loopne
in
int
and
inc
cmp
rol
sbb
psrld
adc
inc
push
cmpsb
push
pop
das
jns
clc
dec
or
enter
and
cmp
add
cmpsb
hlt
insl
out
insb
mov
pop
and
das
out
mov
pop
mov
hlt
adc
pusha
fadds
test
pop
lods
add
adcb
push
in
adc
pop
data16
push
loope
ret
mov
push
xor
mov
push
mov
push
fisttpll
push
loope
or
int3
cs
cwtl
xchg
cwtl
ss
out
xor
icebp
test
mov
pop
cli
lahf
pop
push
idivb
into
fwait
arpl
gs
mov
dec
xchg
aaa
mov
xorl
sub
loope
test
xchg
fidivrs
cmp
mov
cld
cmp
or
lock
inc
and
repz
movsl
scas
push
ficompl
xchg
push
aam
lods
iret
sbb
imul
cmp
imul
icebp
jp
sub
cmp
cmp
iret
sbb
mov
into
jge
push
shlb
sub
pushf
repnz
lcall
lock
not
xchg
adc
adc
mov
pushf
add
in
sub
in
aaa
fisubl
pushf
sbb
jno
inc
cwtl
mov
mov
add
push
mov
xchg
outsl
mov
xor
out
call
adc
or
xlat
test
sbb
hlt
adc
cld
ficomps
leave
cltd
data16
xchg
insl
pop
ret
mov
inc
fistps
fcomps
cmp
or
dec
mov
ficompl
fisubrs
cmc
dec
mov
and
add
jbe
gs
cmp
repnz
or
lods
adc
mov
insl
cmpsb
inc
fcompl
stos
fistpll
mov
adc
out
pushf
pushf
rcrb
xor
cmp
mov
cmpb
sbb
lea
dec
dec
add
lahf
dec
inc
xor
jge
repnz
push
loope
ret
jg
icebp
cli
ret
xchg
pop
js
aam
sub
pushf
aaa
mov
and
jecxz
adc
out
mov
fidivl
cmp
xchg
push
rcll
outsl
mov
dec
sub
je
adc
aas
mov
or
in
clc
sub
dec
sub
sbb
das
sar
scas
lea
lock
xor
imul
xor
pop
lods
mov
enter
and
add
fistl
pusha
sub
daa
pop
mov
push
scas
or
xor
test
inc
cld
inc
adc
popf
loop
rcll
xor
nop
lods
mov
ret
push
jge
mov
xchg
lods
push
adcl
sub
daa
cmp
push
fucomi
xor
mov
in
sub
xor
test
jecxz
xchg
xor
call
push
adc
sbb
xchg
mov
inc
xchg
and
and
sub
mov
movsb
jecxz
addr16
daa
push
adc
test
pop
clc
aam
and
sti
aaa
or
or
xor
mov
push
cs
dec
mov
cmp
or
inc
aaa
mov
sbb
sti
shrl
lcall
or
cmpl
mov
add
adc
push
orl
mov
push
xor
mov
xlat
xchg
mov
mov
mov
mov
add
addr16
cmp
and
mov
push
inc
sub
mov
mov
pop
sub
sti
adc
jg
fiaddl
mov
test
jbe
repnz
push
adc
and
test
dec
ret
pop
mull
mov
je
daa
dec
hlt
movsb
mov
out
mov
and
add
loop,pn
shll
and
lcall
xor
movsl
cmpsl
scas
insl
jle
jo
add
adc
lahf
addb
pop
stc
sbb
mov
inc
shll
shll
dec
loop
inc
dec
inc
cmp
cmp
adc
xchg
mov
sub
out
cmpsl
mov
addr16
and
ja
shlb
mov
outsb
out
mov
aad
or
mov
xchg
pushf
add
test
loop
inc
add
push
push
mov
arpl
idivl
xlat
inc
xlat
sarl
out
loop
stos
or
lret
aad
cld
add
push
pop
sbb
aaa
sub
push
dec
or
lret
mov
pop
cmp
mov
mov
aam
ret
xchg
xchg
jmp
xorl
out
push
fwait
in
stos
insl
push
adc
movsl
je
imul
pop
std
cmpb
dec
movl
dec
loop
aas
sub
pop
rolb
mov
inc
icebp
testb
ret
pop
rolb
mov
push
dec
lock
push
insl
mov
ds
insl
cmp
xor
popa
add
or
mov
push
gs
mov
scas
push
mov
xchg
lods
add
sub
dec
mov
into
push
and
xlat
jp
cld
movb
pop
pop
scas
loop
xor
jns
pop
addr16
add
int
mov
ds
mov
mov
dec
aas
jle
std
mov
adc
test
fistl
pop
out
mov
mov
fwait
push
or
mov
mov
adc
leave
xor
shrb
or
fldenv
lret
ss
mov
repz
sub
xchg
or
push
add
enter
movsb
mov
outsb
mov
movsl
popf
cs
jg
int
push
popl
or
fcmovb
pop
cmc
pop
xor
push
fdivl
pop
repz
and
and
loope
in
ret
inc
inc
cmp
or
pop
lods
xor
and
mov
mov
push
mov
scas
inc
mov
inc
popf
pop
movsl
push
xor
sub
jle
jmp
data16
test
add
push
cmc
mov
leave
rclb
push
jns
into
std
xor
fnsave
sahf
aas
inc
cmpl
fadds
jmp
sti
and
cmpsb
xor
leave
imul
inc
xor
popf
push
xor
xchg
lret
fsubp
mov
pop
pop
or
sbb
adc
mov
cmp
pop
adc
pop
pushw
jno
pop
test
mov
sarb
jne
ja
repnz
stos
insb
sbbb
icebp
sub
loopne
sub
std
in
mov
testl
jmp
jge
mov
aad
pop
xchg
mov
mov
int
xchg
xchg
mov
scas
push
mov
stos
scas
xor
stc
fmul
rcrb
in
sahf
inc
pop
sbbl
xor
call
lret
push
or
cwtl
in
cmp
inc
stos
jmp
or
imul
cmp
sub
inc
xlat
cltd
xor
pushf
adc
pop
pop
push
jl
and
xchg
aaa
sub
jbe
sub
or
imul
jp
lods
pop
pusha
jbe
jne
arpl
insb
fnstsw
jge
xlat
addl
ret
cmp
xchg
inc
cmpsb
and
adc
mov
mov
sub
mov
dec
push
mov
pop
arpl
mov
shrb
and
and
aas
data16
mov
cmp
jg
iret
aaa
xchg
xor
out
add
lds
and
mov
dec
out
mov
or
shrl
cmp
es
movb
lods
push
scas
aaa
sub
setbe
mov
lcall
imul
mov
or
sti
lret
aaa
fsubs
out
icebp
cmpsb
sub
hlt
setb
rcl
inc
bound
push
mov
xchg
dec
lods
gs
xorb
ja
stos
stos
and
pop
or
mov
xor
inc
jb
xchg
lcall
insb
adc
sbb
out
push
add
xacquire
call
fwait
inc
add
or
lahf
mov
mov
mov
jmp
mov
in
nop
push
dec
and
in
neg
jno
insl
cmp
add
scas
mov
cmp
xchg
in
mov
mov
inc
xchg
js,pn
push
jle
andl
jp
pop
repnz
sub
arpl
stos
aas
fnstsw
in
add
je
aam
xchg
aaa
pop
fisubrl
addb
xchg
add
xor
jno
jne
aaa
ret
inc
lock
jns
je
sub
mov
pop
mov
xchg
jbe
out
push
pop
mov
loopne
adc
ret
xchg
test
mov
dec
jo
inc
jbe
fstps
or
in
mov
sti
imul
sbb
jge
ret
stc
add
sub
ljmp
aam
in
or
sti
repnz
test
les
mov
jo
mov
xor
xchg
pop
dec
rcll
fadds
mov
rorl
jne
mov
pop
mov
jo
outsl
shlb
test
jp
jge
fucomip
ja
fldt
lods
xorl
jne
inc
dec
mov
sahf
clc
cmp
pop
inc
std
mov
sti
jne
js
or
xchg
out
lods
lcall
mov
pop
gs
xchg
cvtps2pd
jg
in
aaa
sub
sbb
lret
test
cmpsb
call
fldenv
rol
sub
jmp
cmp
ret
call
adc
les
fdivl
sbb
fsubl
mov
aad
pop
int3
lahf
mov
mov
xor
inc
and
mov
iret
fbld
fldenv
lret
insb
shl
in
and
out
arpl
cmp
add
xor
lcall
inc
fs
jle
test
insl
cmp
pop
int3
sub
inc
dec
and
rorl
xchg
push
jb
sti
and
pop
and
mov
mov
push
jecxz
jno
adc
scas
rorl
aad
sub
mov
jbe
dec
ljmp
xchg
push
inc
mov
xchg
cmpsb
iret
sbb
pop
repz
daa
mov
cltd
jae
test
dec
jb
mov
pop
mov
xor
lock
or
in
cld
sbb
nop
jbe
scas
xchg
mov
jns
jle
adc
daa
lcall
mov
push
pop
hlt
jge
out
xor
mov
push
sub
dec
dec
repnz
mov
stos
es
je
push
adc
jp
push
adc
cmp
int
ret
hlt
adc
or
mov
testl
sbb
test
xchg
ja
jbe
and
mov
push
dec
ficoml
adc
xor
jno
inc
insb
rcr
test
pop
sti
push
aad
jbe
addl
add
sbb
pop
pop
mov
xchg
cltd
stos
idivb
bound
cs
fdivrl
xor
dec
add
mov
aas
in
sub
mov
pop
push
imulb
and
pop
sarb
repnz
ljmp
sub
lret
jne
in
mov
mov
int
outsb
push
sbb
sub
enter
aaa
ljmp
in
fimuls
push
cmp
xorb
push
jle
les
jns
mov
mov
dec
sbb
sarb
push
mov
insl
sahf
rolb
test
pop
add
sub
movsb
jmp
iretw
shrl
test
jmp
movsb
pop
filds
scas
mov
jbe
aad
testl
cmpb
pop
push
mov
inc
loop
aam
test
adc
xchg
adc
insb
leave
mov
rclb
inc
jp
div
xor
lahf
loop
xor
xchg
adc
lret
dec
test
mov
xor
fdivr
ljmp
mov
sti
fwait
mov
les
cli
fsts
insb
popf
divb
sarb
jp
dec
insl
test
sub
js
test
mov
scas
push
and
pop
sbb
jnp
mov
fsub
pop
add
add
push
js
jns
lods
add
inc
cmpsl
xchg
jo
mov
push
jge
pushf
push
adc
jl
dec
sub
mov
cmp
pop
jmp
stos
rcrb
icebp
lcall
std
jo
and
inc
les
jle
lods
movsb
movsb
push
inc
lahf
out
loopne
inc
push
jmp
jecxz
ljmp
pop
test
or
push
sub
in
mov
mov
test
mov
cmp
mov
pop
cmc
orb
mov
pop
and
ja
mov
push
xchg
sahf
bound
adc
adc
adc
cmp
out
subl
stos
lret
scas
pop
jb
add
sub
and
push
mov
pushf
scas
cmpl
xchg
sub
mov
jo
stos
out
wrmsr
ds
sub
dec
inc
xor
fmul
cmp
adc
mov
inc
stos
jp
or
push
mov
in
aaa
loop
js
lahf
and
push
jmp
shll
mov
sub
in
dec
inc
push
add
mov
scas
push
ss
test
push
iret
push
xchg
iret
pop
mov
sbb
or
and
or
add
cmc
lods
dec
cmp
test
aas
push
test
dec
cmp
roll
cltd
cld
cmpsb
neg
mov
aam
cmp
jmp
repnz
in
inc
mov
imull
dec
imull
mov
scas
clc
movsl
lahf
mov
mov
mov
mov
cmp
adc
repz
pop
adc
adc
sar
enter
fwait
xor
jecxz
xor
cld
mov
jle
mov
jno
orb
mov
mov
sub
dec
negb
fbstp
cmc
das
out
mov
sub
jne
ret
mov
fs
add
in
je
iret
mov
imul
loop
adcl
pop
adc
int
rolb
adc
jne
leave
add
cmp
fmuls
jnp
lods
aas
dec
mov
repnz
jmp
mov
push
push
dec
and
xchg
in
test
dec
ret
mov
xchg
imul
xchg
dec
xor
inc
or
scas
mov
mov
mov
mov
adc
mov
mov
cltd
add
push
and
fstl
cld
jo
ret
sbb
sub
divl
ds
in
push
mov
sbb
mov
imul
shlb
stos
sub
pop
dec
jmp
add
jge
dec
pop
mov
mov
inc
push
or
push
inc
cmpsl
incb
sub
dec
mov
insb
push
je
sub
mov
xor
call
adcl
adc
mov
in
int
jmp
sub
xlat
in
mov
mov
lahf
jl
fsubrs
lret
xchg
push
movsb
outsb
or
inc
jp
sahf
add
cwtl
jp
push
ja
adc
sub
cmpsb
mov
mov
add
mov
outsl
sub
push
std
ret
popf
aam
fadds
inc
push
pop
daa
in
push
ret
xor
fcmove
filds
fstpl
lret
or
xchg
aas
rclb
xchg
dec
pop
mov
cmp
mov
test
xor
sub
sub
mov
xchg
int
mov
enter
mov
inc
lock
mov
iret
sbb
xchg
mov
stc
out
push
and
dec
mov
shrb
jl
fsubs
scas
ret
lea
rcr
rolb
in
mov
aaa
and
and
jo
lea
xlat
dec
adcl
add
pop
idiv
iret
pop
mov
cmp
cmp
mov
aad
scas
pushf
lcall
add
push
clc
dec
cmp
xchg
lret
sbb
push
inc
cmpsl
ret
stos
out
fisttpll
xor
push
imul
dec
mov
and
pop
mov
adc
mov
lods
shlb
add
sub
mov
arpl
xor
mov
adc
jecxz
rcll
int3
in
jecxz
push
lock
in
lret
jbe
aas
sbb
sbb
aaa
shlb
push
sub
lret
cmpl
test
inc
es
fsubrl
sub
sub
mov
sarb
sub
jo
stc
lret
fists
and
lea
js
fsubs
mov
mov
fwait
xlat
jmp
jmp
jge
fdivrp
inc
cld
je
outsl
lods
jbe
mov
leave
clc
ret
sub
aaa
call
mov
fldl
loop
sub
mov
xchg
cmpsl
jb
pop
sub
out
clc
mov
adc
jns
inc
mov
fadd
mov
js
movsb
dec
cli
lods
xchg
push
dec
cmpsb
test
cmp
imul
hlt
sti
jne
pop
movsl
fucomip
pop
leave
inc
add
outsl
xlat
pushf
scas
out
cwtl
mov
addr16
cwtl
outsl
adc
sub
lock
inc
movsl
cld
out
in
mov
mov
xor
cmp
daa
push
es
das
dec
cmpsb
sti
cmp
les
push
xor
fs
adc
sbb
or
fldcw
mov
cmpsb
push
cmpsl
xchg
leave
sti
sbb
sub
iret
je,pt
icebp
jl
jge
icebp
dec
sbb
mov
call
inc
in
iret
scas
xchg
ja
ficoml
cmpsl
pop
and
pusha
sbb
fstpt
movsl
cld
inc
mov
sub
cmpsb
inc
sbb
loope
mov
fistpl
fistps
fwait
or
inc
and
aad
ficomps
ljmp
test
aad
sub
in
cmc
insb
movsb
pop
out
in
cmp
fsubs
jne
out
mov
ficomps
push
jns
imul
push
scas
lock
jbe
add
pop
ljmp
mov
enter
add
cmp
add
mov
ret
sahf
dec
cwtl
mov
rorb
sub
dec
cltd
pop
add
lret
mov
in
or
lock
and
iret
mov
xlat
fistps
insl
xor
jae
and
popf
cmp
or
lods
stos
adc
xchg
or
std
sub
push
sti
adcl
pop
repnz
inc
mov
popf
cmpsb
fisubrs
jns
inc
jl
aad
ja
dec
fadd
fidivs
add
arpl
jno
popa
xor
sti
hlt
lahf
loopne
mov
xor
jmp
sub
fs
movsl
imul
lea
pop
mov
dec
mov
mov
mov
cmp
pop
repz
imul
pop
cmp
rcrb
pop
mulb
dec
aaa
xchg
mov
pop
test
addr16
add
sbb
lahf
add
adc
jmp
cmp
xor
mul
dec
mov
mov
test
sub
inc
inc
inc
inc
das
and
arpl
sti
imul
or
sub
movb
mov
nop
pop
and
movsl
test
pop
icebp
push
loopne
in
daa
mov
in
dec
sbb
nop
cwtl
add
xchg
std
repnz
outsb
je
call
add
fwait
loope
pusha
dec
lods
out
idivl
daa
push
xor
pusha
ret
fwait
aaa
xchg
xchg
loopne
sbb
lret
sbb
push
push
daa
sbb
xchg
in
pusha
pop
or
fists
sbb
ret
dec
incb
mov
mov
fists
push
arpl
lods
daa
sub
movsb
movsb
daa
sub
xor
cmp
add
dec
push
cld
pop
int
jmp
lret
outsb
dec
and
xchg
add
and
lds
push
jg
lahf
jecxz
lds
dec
sub
dec
xchg
pop
mov
or
jmp
popf
pop
jge
int3
sbb
xchg
ret
imulb
es
add
lahf
sub
pop
jg
dec
sub
icebp
mov
adc
out
cmc
pushf
loope
sub
mov
enter
xchg
ja
jg
lret
dec
inc
mov
fcompl
jne
fwait
out
fstpt
lahf
inc
sbb
sahf
out
fnstsw
cmpsb
xchg
jb
ja
adc
subb
in
stc
xchg
inc
sbb
sub
add
addl
cmp
rcl
pop
inc
pop
mov
inc
mov
mov
rcrl
in
cmpsb
std
nop
stc
rorl
pop
or
arpl
push
cmp
rcrl
mov
test
mov
fdivp
xchg
pop
mov
call
xchg
xor
daa
sub
xchg
dec
int3
mov
pop
in
jo
push
jbe
test
jp
push
shlb
rorb
dec
sbb
xchg
adc
loopne
mov
jnp
mov
orb
fildl
je
sub
lret
xchg
bound
pop
popf
xchg
mov
in
imul
push
xchg
dec
xor
js
sbb
jle
mov
xchg
nop
xchg
imul
lcall
popf
scas
add
jmp
jns
add
movsb
ret
cmp
or
dec
sbbl
cli
jbe
or
xor
js
hlt
lods
sub
xchg
dec
addr16
es
popf
test
jecxz
or
inc
dec
jb
xchg
sub
or
stc
xor
adc
divl
movsb
inc
lahf
xchg
and
fdivrs
sub
pop
ret
fs
fnstcw
xor
js
cs
xchg
cltd
xor
dec
jle
push
mov
fsubl
cmp
movsl
cmp
sti
aam
jbe
out
jl
imul
lret
popf
dec
mov
mov
into
lock
mov
repz
or
ret
lock
fld
pop
ja
call
popf
cli
sbbb
adc
subb
rcrb
or
and
push
xor
jg
pop
jecxz
mov
mov
xchg
popa
cwtl
push
cmp
dec
cltd
xlat
jg
test
pop
inc
sbb
in
shll
test
xchg
pop
ss
sub
loopne
push
out
out
popf
mov
push
add
cmp
adc
es
fldenv
aas
insb
or
or
add
inc
xor
js
cmpb
cwtl
jb
and
idiv
mov
xor
movsb
ficomps
test
mov
shlb
mov
mov
dec
mov
mov
fimuls
cmp
test
fimull
jns
jno
push
xor
lcall
roll
mov
add
xor
clc
xor
pop
hlt
cli
jo
jmp
clc
dec
cli
pushf
sar
push
adc
fisubrl
and
ja
sub
pop
lret
inc
push
jne
pop
in
add
mov
adc
mov
cmpsl
lock
add
stos
rol
icebp
std
fcomps
xchg
or
insb
enter
adc
xor
add
cld
ss
cmc
jnp
or
cmp
stc
fildl
pop
test
pop
sub
push
aas
mov
mov
call
jns
inc
or
int
add
pop
out
lock
jmp
repz
or
ret
arpl
inc
dec
push
adc
repz
add
aaa
or
pushfw
ret
aam
mov
jg
jp
jmp
fldenv
pop
cltd
jno
test
xchg
cmp
cmp
jecxz
push
push
sbb
dec
mov
mov
jmp
lea
test
jmp
lret
add
jmp
ja
aad
sub
lds
xor
and
decb
arpl
cmpl
push
adc
ret
and
loop
jae
sahf
lods
xchg
mov
aaa
leave
adc
adc
cmpsl
lret
rol
push
sub
cmpsl
cwtl
cmp
ja
ljmp
sub
rolw
or
and
pop
hlt
cmp
leave
sbb
push
jecxz
gs
jne
dec
cmp
mov
mov
dec
dec
enter
cs
scas
mov
xchg
mov
sub
scas
aas
cmp
icebp
loopne
ss
dec
mov
popl
jp
mov
data16
and
adc
inc
insl
mov
xorl
scas
testl
sub
out
shr
and
inc
sub
loope
mov
cmp
les
jmp
jecxz
mov
arpl
test
dec
setg
pusha
cmp
movsb
mov
outsl
gs
xor
cld
xchg
sub
cmp
sbb
dec
jmp
sub
add
add
in
lahf
mov
sub
push
xchg
dec
push
add
aad
or
repz
or
xchg
mov
lcall
repnz
ret
dec
adc
sbb
lahf
aam
sbb
fs
out
cmp
shrl
cmp
pop
imul
ror
jl
in
into
cmp
inc
adc
adc
xor
ja
mov
add
stos
cmp
pop
outsb
mov
jbe
push
jb
insl
mov
lret
movsl
iret
cmp
addr16
xchg
xchg
rorb
std
adc
sub
and
jl
sbb
shl
mov
ss
ret
mov
xor
mov
jge
ret
fistl
sbb
or
js
jecxz
insb
add
fwait
outsl
gs
sti
mov
lcall
loopne
mov
stos
cmpsb
jno
aaa
and
lds
xchg
pop
or
es
jmp
test
das
cmp
sub
push
outsl
cltd
push
loopne
mov
mov
cmp
or
mov
xor
movsb
mov
inc
in
mov
push
cltd
push
push
sbb
lea
stos
cmp
push
add
push
mov
pop
mov
out
or
cmpl
xchg
mov
aad
test
cmpsl
mov
enter
out
mov
daa
ss
jbe
pop
in
pop
ja
inc
pushf
pop
cmp
pop
stos
pop
xchg
sbbb
enter
push
pushf
jmp
js
lret
test
jp
mov
fisubrs
jle
sahf
call
jo
nop
cmpsb
push
push
and
xor
ret
push
cltd
cmp
adc
into
outsl
das
imul
in
and
xchg
xchg
add
in
fisttpl
jecxz
dec
or
mov
in
mov
stos
jo
aaa
push
pop
bound
xor
fcoms
pop
pop
add
jmp
sub
mov
cmpsb
orl
cmp
popf
and
insl
ret
lret
fildl
jg
out
addr16
mov
psrlq
nop
add
cmpsl
ficompl
mov
andb
adc
mov
enter
iret
lret
fwait
aas
and
adc
inc
orb
fists
cltd
mov
mov
jb
mov
shl
adc
mov
mov
dec
add
pop
sub
or
mov
inc
es
nop
jmp
xchg
stos
icebp
ss
inc
mov
xor
nop
mov
add
ja
ret
mov
icebp
out
or
push
jge
repz
pushl
cmp
and
cmp
jmp
sarb
xchg
jo
mov
pop
push
inc
jecxz
stos
mov
add
or
arpl
sub
or
int
dec
xor
js
fs
call
fsub
sub
mov
lret
add
arpl
xor
and
sti
lcall
mov
aaa
in
movsl
shrl
jb
jbe
stos
or
or
mov
sbb
mov
pop
jg
ret
rorb
fdivrs
push
pop
push
daa
out
add
fwait
ljmp
or
outsb
and
cli
cmpsb
loope
iret
jbe
enter
enter
mov
jo
add
dec
pop
cmp
cmp
aad
xchg
mov
dec
in
add
push
add
inc
nop
jge
addr16
xchg
orb
scas
shlb
ret
loopne
adc
pop
scas
jno
hlt
push
sti
pop
xchg
push
jp
out
je
aad
pop
lock
inc
or
and
test
shrb
push
dec
ret
push
fistpll
mov
imul
ss
cmpsb
adc
filds
sbbl
sub
xor
cmpsl
push
es
shr
inc
sbb
sub
mov
xchg
sub
pop
and
ljmp
jg
test
lahf
mov
bound
xchg
out
fldt
cmc
adc
dec
sub
inc
sbb
hlt
jns,pn
inc
and
mov
cmp
mov
dec
dec
sahf
ret
inc
sub
popa
sub
mov
dec
outsb
enter
jmp
sahf
sbb
jge
in
dec
jecxz
hlt
loopne
mov
dec
fstps
xchg
jbe
or
jmp
and
pop
scas
and
js
fisubrs
and
repz
dec
xchg
mov
xor
pshufw
sti
jecxz
mov
fwait
sub
jg
inc
add
fwait
xor
and
nop
or
aam
inc
pusha
aaa
fidivs
pop
adcl
imul
cmpl
and
cmp
cmp
or
mov
clc
test
mov
dec
cld
pop
test
jge
xlat
insl
add
popa
jb
mov
adc
pop
prefetcht1
popa
xorb
aad
mov
imul
jae
enter
mov
inc
inc
inc
mov
shrl
xchg
sbb
xchg
xor
pop
push
cltd
mov
fs
mov
add
popa
std
adc
fiaddl
ret
pop
andl
cmp
dec
movsb
rolb
and
cmp
les
adc
push
cmp
enter
addr16
mov
dec
aam
fwait
mov
andl
or
mov
xlat
inc
mulb
pop
pop
std
int3
jmp
push
adc
inc
fisubrl
out
pop
clc
rclb
or
and
jecxz
movsl
jb
xorl
pop
or
movb
movb
mov
pop
int
in
or
js
cwtl
xchg
scas
fwait
stos
sarb
sub
xchg
sub
fistpl
adc
das
pop
imul
mov
xchg
mov
bound
pop
push
and
dec
pop
test
gs
push
mov
pop
loope
insb
pop
in
or
inc
imul
dec
pushf
lret
push
sbb
es
pushf
push
jae
inc
xchg
iret
jno
hlt
jle
cli
aas
add
mov
pop
cmp
aad
fidivl
arpl
mov
test
imul
mov
mov
and
hlt
jno
ljmp
adc
insl
lods
int
fs
test
xor
inc
pop
outsl
lahf
push
fadds
jp
mov
add
rcrb
enter
es
jl
pop
sbb
and
mov
mov
cmp
inc
fs
push
adc
jno
out
pop
mov
xchg
sbb
push
das
pop
dec
nop
in
dec
addl
mov
xor
or
xchg
fndisi(8087
sbb
xor
popa
loop
mov
repz
pop
repnz
testb
je
mov
cwtl
in
pop
popf
sub
sub
unpckhps
repnz
and
shlb
das
sti
test
ja
out
repnz
movsb
sbb
dec
lret
cmp
outsl
gs
fwait
adc
pop
cmpsb
gs
movsb
clc
sbb
je
fcmovnbe
push
add
addl
ret
popa
xchg
cld
arpl
shlb
push
popf
adc
fcoml
nop
mov
sub
or
daa
test
stos
popf
shr
mov
push
cli
fcomps
mov
mov
mov
or
ja
enter
lret
mov
mov
sti
push
lods
andb
jp
stc
rclb
adc
outsl
repz
pop
mov
pop
sbb
fnstsw
dec
push
cmp
jbe
push
lcall
popa
mov
test
jmp
insb
mov
pop
xor
pushf
pop
in
cmp
mov
enter
mov
sahf
call
xchg
sbb
into
lods
das
pop
jg
repz
sbb
mov
jne
cmc
repz
pop
aas
fistl
mov
fwait
inc
imul
push
cmp
repnz
std
ja
dec
jle
cmp
inc
data16
fs
rclb
rol
int
sub
test
inc
cmc
clc
push
add
in
cmpb
add
mov
enter
jae
or
mov
add
aad
aad
inc
add
shlb
inc
jge
jp
mov
jle
lcall
das
inc
mov
mov
adcl
aam
jnp
shr
nop
aam
repnz
jp
mov
push
dec
out
icebp
cmp
in
loope,pt
aam
pop
or
push
rcrb
sub
icebp
jno
je
cmp
sub
in
lods
cmp
ja
xor
out
add
dec
push
test
shlb
jp
idivl
lea
daa
cmp
mov
fldt
mov
push
in
lret
adc
pop
sbb
inc
aas
sub
mov
gs
stos
in
adc
inc
lds
arpl
in
pop
cli
push
les
das
sub
jnp
sbb
jae
add
loope
into
mov
and
mov
adc
mov
jb
pop
jg
push
pop
sbb
in
push
shlb
ret
xor
js
push
cmpsb
and
bound
ss
cmpb
lds
fnsave
cltd
daa
scas
xchg
scas
inc
pop
addr16
movsl
aaa
shll
lods
add
cs
xor
repz
insb
insl
lods
int3
or
pop
adc
int
sahf
sub
xor
imul
push
sbb
adcb
cmpb
repnz
lret
stos
sahf
ds
in
fdiv
adc
repz
sub
fs
out
jge
pop
dec
cmp
xchg
jo
inc
prefetchw
in
loop
mov
scas
xor
bound
shl
js
test
jbe
sbb
int3
xchg
mov
movsl
dec
mov
fnstcw
pusha
sbb
add
into
dec
mov
jmp
sbb
pop
fildll
insl
fs
sbb
sti
imull
daa
lret
inc
and
push
xor
insb
jecxz
pushf
cmp
addl
fnstcw
repz
or
cmp
push
push
push
xlat
fidivs
mov
mov
bound
mov
pop
pop
inc
cmp
dec
dec
insl
cmc
aas
sub
das
into
fmull
fidivrl
inc
pop
xor
je
repnz
mov
inc
mov
call
add
adc
cld
or
and
push
mov
shrl
inc
ret
mov
mov
int3
stc
xor
dec
push
or
push
xor
add
sub
fmulp
and
loop
lret
inc
push
adc
mov
aad
int
ffree
fadds
rorb
popa
mov
bound
shll
mov
sahf
cmp
repnz
sbb
adc
ret
cmpsl
dec
pop
inc
rolb
dec
loopne
sub
and
push
mov
xchg
iret
push
sbb
out
orb
mov
out
mov
das
insl
aas
bound
adc
push
dec
push
dec
pop
mov
test
mov
aas
jns
fdivl
jl
out
fdivrs
loop
or
stos
gs
jae
or
xor
and
mov
rcr
dec
stos
and
daa
push
pop
xchg
mov
jnp
or
lds
cmpsb
dec
inc
repnz
push
mov
imul
xorl
aaa
xchg
in
or
ret
mov
divb
repnz
enter
cmc
out
mov
xchg
jle
mov
and
push
jecxz
cmc
sahf
jle
addr16
lock
popf
mov
mov
sub
push
xchg
pop
loope
sbb
ss
jg
pusha
dec
jne
jo
rclb
adcb
mov
je
push
mov
rcl
adc
sbb
jmp
cmp
ds
rclb
jp
test
jb
aas
fbstp
sub
add
sbb
adc
shrb
sbb
cld
call
mov
fs
sbb
sub
xor
fstpt
mov
es
dec
dec
mov
add
fstpt
pop
rclb
repnz
fisttpl
mov
cltd
adc
fsubs
inc
mov
sbbl
out
pop
and
inc
push
dec
mov
mov
pop
imul
xor
push
jle
mov
push
push
fildl
and
jnp
nop
or
add
mov
pop
jg
test
dec
pop
repnz
or
fs
cmp
std
orw
stos
sub
push
jnp
js
call
fstl
addr16
or
mov
xchg
push
test
xor
push
aaa
mov
sarl
xchg
push
push
xchg
rcrb
sbb
int3
mov
insl
loop
xchg
icebp
and
jmp
xor
nop
xor
cli
aad
dec
enter
ds
aam
out
stc
fistps
and
or
cwtl
push
cs
sub
add
shlb
dec
test
xor
cmp
pushf
xor
mov
mov
jne
cmpsb
sbb
xchg
dec
std
xor
adc
and
mov
mov
mov
jbe
inc
aad
mov
enter
pop
scas
repz
movsb
addr16
or
loopne
dec
sub
jno
xor
aad
lock
int3
jecxz
ds
lods
or
shlb
sbb
jg
push
sub
insl
jno
sarb
cmp
ret
fidivs
adc
sbb
mov
loope
sub
int
jp
pop
and
outsb
and
add
push
push
xchg
xchg
pop
dec
loopne
sbb
sbb
popa
aam
in
xchg
add
imul
cmp
sti
mov
push
mov
add
testl
mov
jmp
mov
adc
out
das
stos
and
loopne
popa
lahf
loop
ds
mov
sub
adc
cmc
in
push
jmp
add
ret
cmpsl
fsubl
jnp
push
rcrb
fwait
cld
jnp
daa
push
jp
add
sbb
fs
or
mov
pop
or
pop
push
mov
leave
lcall
push
stc
pop
mov
pop
xchg
mov
fmull
stos
out
js
stc
ret
inc
xchg
pop
or
cmp
insl
and
inc
mov
mov
test
sbb
jo
imul
insl
pop
sbb
repnz
mov
adc
or
aam
pushl
std
out
pop
push
xlat
push
sub
lahf
mov
mov
repz
lret
scas
pop
cmp
xchg
mov
les
or
push
add
and
fnstsw
clc
popf
mov
fnsave
pop
push
stos
dec
aad
pop
pop
jns
fnsave
or
test
sub
jge
outsl
sub
sub
lcall
cld
push
arpl
stc
push
cwtl
lods
sbb
sbb
mov
daa
or
pusha
lds
jne
js
xor
xchg
inc
mov
cmp
shrb
cmc
jecxz
xchg
subl
xchg
sarb
ja
mov
add
xor
fstl
iret
lahf
test
xorl
or
lods
adc
push
adc
lret
mov
into
push
push
pop
out
bound
shll
fbld
call
imul
shlb
mov
mov
fs
xor
faddl
outsl
stos
sbb
negb
adc
and
or
and
repnz
in
push
aas
out
addr16
push
lahf
loope
push
dec
stos
stos
inc
push
mov
loope
loope
ja
out
mov
mov
xor
outsl
fwait
and
stc
test
push
aaa
iret
xor
jno
mov
outsl
pop
xchg
xor
pop
xor
test
mov
sub
mov
out
es
outsl
js
jne
cmpsl
lods
xchg
in
stos
push
push
js
inc
sub
aam
imul
or
mov
pusha
add
mov
sti
ret
xor
aam
sbb
hlt
aad
push
les
pop
jp
push
push
jg
mov
repz
stos
push
xchg
jbe
fdiv
clc
sbb
pop
lods
cmp
fdivr
pop
mov
data16
cs
xchg
cmp
in
mov
cmp
or
roll
push
mov
inc
das
jne
mov
xchg
xchg
sar
jbe
jo
mov
xor
xor
and
pop
lret
mov
ljmp
scas
jb
je
insb
arpl
xor
add
sub
in
and
adc
or
cmp
add
ljmp
sbb
push
mov
mov
jb
stos
jae
mov
in
mov
inc
jl
daa
pop
adc
test
lock
fisubrl
shlb
mov
jge
pop
sbb
and
push
jp
das
lock
push
jmp
mov
pop
inc
adc
cmp
sub
icebp
arpl
cmpsl
mov
and
cmp
fcmovnu
in
sub
outsb
adc
adc
cmp
xor
cmpsl
sbb
jp
xor
push
aad
push
loopne
insb
mov
imul
pushf
in
xchg
enter
mov
sbb
adc
jmp
mov
adc
push
push
and
cmp
push
test
rol
push
pop
mov
lahf
xor
jecxz
mov
and
ss
lods
rcll
or
xchg
cmp
inc
dec
inc
sub
cmpsl
enter
mov
mov
rolb
lods
out
and
loope
fistpl
jg
or
nop
adc
sub
fstl
adc
inc
mov
insl
jecxz
mov
pop
cmp
sti
pop
movl
lock
mov
push
rclb
pop
or
push
cs
xchg
jae
sahf
dec
sub
repz
sahf
mov
add
int3
pop
inc
jge
or
or
cmp
inc
adc
out
fisubl
or
insb
pop
mov
lods
sub
js
decb
aad
xor
or
in
fisubs
rclb
xor
loopne
ret
lcall
rol
xchg
popa
mov
jno
and
enter
decl
pop
xchg
mov
inc
and
fwait
jnp
push
or
cmp
cmp
insl
sbb
idivl
fs
fsubs
jo
enter
or
leave
xor
cld
jns
loop
orb
add
dec
and
and
inc
xchg
add
sub
add
rorb
xchg
mov
jge
popf
lcall
sti
sbb
leave
stos
sub
mov
shr
mov
jmp
mov
lock
lahf
xor
adc
sahf
stos
cltd
inc
add
aad
xor
pop
add
ret
push
mov
jle
ret
rorl
jl
and
pop
iret
in
sbb
bound
cmpsb
pop
outsb
mov
jb
arpl
mov
sub
mov
pusha
or
jge
stos
std
jg
or
daa
push
aas
mov
jbe
and
lret
pop
mov
jmp
push
adc
lea
aaa
test
mov
jnp
xor
mov
faddl
sub
and
and
cmp
mov
addb
mov
push
loope
push
mov
scas
es
adcb
adcb
enter
stc
rcrb
repz
js
imul
mov
or
inc
out
out
ret
loope
cmp
iret
decb
rcl
loopne
lods
or
cmp
cmp
pop
pop
outsl
pushf
test
lahf
push
fnstsw
mov
repz
clc
jge
mov
add
mov
jmp
push
jmp
jnp
icebp
jns
lret
lea
outsb
jl
lods
call
add
sbb
sbb
scas
mov
daa
mov
sub
add
xchg
test
adc
cld
push
jne
mov
pop
loopne
lea
in
movsl
cmp
push
cmc
scas
pop
stc
addr16
mov
clc
ss
cmpsb
rcrb
mov
xchg
out
adc
loopne
sbb
gs
add
sarl
adc
sub
mov
pop
cmp
push
in
or
adc
test
scas
popf
or
mov
xchg
adc
xor
fnstcw
stos
mov
sbb
pop
rorl
jp
ror
lods
repnz
shlb
outsl
and
dec
scas
jge,pn
mov
sub
clc
pop
int3
test
fsubrs
cmp
or
mov
mov
ficomps
outsl
inc
mov
pop
pop
adc
sub
pop
lods
sub
sarb
mov
pop
cld
sti
leave
jo
push
sub
mov
popf
loop
or
js
or
mov
sub
imull
adcl
stos
andb
adc
loope
std
aad
push
push
movsl
stos
jecxz
cli
and
sub
aas
subb
mov
gs
mov
cmp
out
mov
dec
xlat
add
adc
aam
ja
test
dec
dec
lcall
sbb
jo
scas
mov
pushl
movsl
dec
sbb
mov
lahf
es
lcall
sub
sbb
dec
lods
pusha
pop
dec
sti
int
lds
push
push
fs
shll
and
xchg
aad
js
push
mov
xchg
pusha
sub
adc
shrl
add
mov
mov
test
mov
inc
sub
stos
jmp
cmp
add
bound
mov
gs
push
adc
cpuid
jp
xor
mov
xchg
repnz
inc
popl
out
xchg
das
add
shlb
nop
jmp
sbb
into
inc
rclb
inc
add
lret
push
or
std
sahf
xchg
stc
andps
out
adc
outsl
ljmp
out
shrl
cmp
rorl
or
mov
pop
push
cmpsb
stc
loop
xchg
mov
jle
or
cmpsb
in
jp
adc
or
mov
cmpb
data16
into
js
es
aam
inc
jbe
leave
mov
icebp
out
fdivrl
jnp
inc
dec
pop
push
add
sbb
repnz
mov
pandn
lods
cmp
loopne
ljmp
rol
adc
xor
cltd
fcompl
es
rcrb
adc
pop
imul
add
das
testb
data16
jp
stos
sub
lock
sbb
aaa
inc
adc
imul
cld
jp
repz
incb
std
int3
aam
loope
mov
push
sarl
int
pushf
jo
inc
rcr
jg
jg
in
jb
add
add
idivl
sti
push
int
gs
xor
out
mov
jmp
xchg
or
xchg
js
xchg
sbb
scas
jnp
cmp
push
dec
adc
and
xor
push
add
push
sub
xor
imul
lods
and
ds
add
mov
mov
or
in
test
pop
fadd
mov
push
popa
dec
mov
mov
jp
jns
xchg
stos
mov
in
jp
sbb
push
repnz
or
lock
pop
ljmp
cmpb
xchg
add
mov
push
pop
adc
testb
test
stos
and
mov
movsl
inc
cltd
popa
notb
into
jb
repnz
lret
roll
sub
jbe
jmp
cmp
push
or
div
lods
jae
pop
ss
push
shll
popf
sbb
movsl
ret
and
add
mov
sub
mov
stos
loopne
or
push
shlb
lret
mov
mov
xor
in
jle
pushf
popf
repnz
outsb
xchg
ret
subb
xchg
test
fmul
or
ror
mov
mov
jl
sahf
fstpt
mov
fcoms
cs
mov
in
push
fnstsw
sbb
stc
add
xor
xor
pop
jp
push
xlat
inc
xorb
aaa
arpl
sub
sbb
cmp
pusha
rcrb
jns
xchg
rclb
push
add
andl
stos
sbb
cmc
mov
jno
sub
push
dec
stos
push
jnp
cmc
add
fidivrs
fptan
cltd
cmp
outsl
call
in
mov
mov
and
cmpb
mov
in
lcall
mov
cld
repz
lcall
aam
cmp
std
nop
jae
popf
lock
pop
jle
jg
pop
or
inc
push
out
ret
in
or
pop
push
push
int
add
jae
mov
insl
clc
cltd
pop
sub
fcomps
fnsave
push
bound
sahf
inc
dec
sbb
mov
loopne
hlt
es
repz
fisttps
xchg
jmp
in
ss
mov
shrb
cmp
insl
ds
rcrl
aam
mov
dec
mov
sub
addl
cmpsb
fistps
cli
and
lock
fmul
loop
std
push
xchg
xor
test
push
push
pop
dec
or
mov
sbb
stos
sub
add
or
lods
and
lds
sbb
jg
pop
hlt
mov
mov
cwtl
fstpt
inc
sahf
add
fs
jecxz
and
test
jbe
jns
or
outsb
cmp
cmpsl
aaa
hlt
lds
and
ljmp
jle
sarb
dec
rcrb
leave
mov
dec
or
movsl
dec
jbe
xor
es
sbb
push
lock
pop
outsl
jl
repz
xchg
sub
fcomps
hlt
mov
adc
sub
in
or
out
sti
movsb
mov
imul
dec
push
jp
repnz
lret
inc
or
punpckldq
dec
mov
or
sbb
mov
mov
or
push
outsl
movsb
loope
push
divb
cld
mov
in
mov
xor
inc
aam
fnstenv
icebp
pusha
xor
cwtl
sarb
jo
mov
push
fmull
ret
icebp
outsb
cld
stos
ret
sbb
repnz
cltd
stos
dec
stos
in
inc
loop
adc
sahf
xor
push
mov
xlat
xchg
fldcw
loopne
outsb
push
mov
push
js
loop
test
sahf
mov
inc
call
outsl
mov
mov
mov
or
pushf
nop
or
pop
or
out
push
lock
pushf
mov
add
in
cs
jge
and
fmul
rcrl
jge
push
test
mov
xor
ss
in
pop
sbb
test
sub
or
push
fdivs
enter
jns
mov
fistps
xlat
push
xor
mov
imulb
and
cmp
stos
push
js
pop
addl
insb
or
jecxz
jge
call
adc
mov
xor
cltd
xlat
pop
jge
push
rcl
and
loope
fisubrs
cmp
jmp
hlt
in
inc
leave
fstpt
shll
mov
popf
daa
or
dec
jecxz
dec
rcrl
sub
cmpsb
stos
push
or
outsb
push
movsb
or
pop
test
mov
mov
lcall
adc
mov
add
popf
das
dec
dec
data16
lods
pop
leave
decl
ljmp
and
sub
push
sbb
test
or
movsl
cld
pop
pop
mov
mov
mov
pop
jmp
xchg
and
repnz
xlat
mov
js
xor
lea
arpl
dec
enter
mov
xchg
mov
push
idivb
lahf
add
xlat
sbb
mov
data16
adc
mov
test
xchg
xchg
mov
pusha
lods
pop
xchg
shr
mov
mov
sub
mov
outsl
jns
outsl
ret
push
out
jb
outsb
dec
aad
jns
fwait
daa
les
sar
movsl
cmc
cmp
cmp
lcall
sbb
leave
lods
jno
lock
dec
filds
inc
test
das
sub
loope
sbb
xor
jmp
jnp
jp
push
and
push
leave
stos
push
aad
je
cs
xchg
ljmp
sarl
das
in
je
or
nop
jno
jl
cld
out
cmp
mov
popa
mov
pushf
vmwrite
inc
dec
inc
push
mov
int3
mov
cmp
sysret
test
lahf
inc
in
movsb
jo
xchg
inc
test
int
in
into
xor
lea
inc
iret
or
in
jno
mov
dec
xor
cli
inc
sbb
mov
mov
movsl
loope
and
push
sbb
and
mov
rolb
jl
sub
or
pop
hlt
std
daa
dec
or
mov
pop
inc
movsb
mov
pop
cld
in
shrb
push
nop
dec
rorb
call
in
adc
jge
mov
mov
notb
enter
pop
xchg
or
fistps
aam
sbb
xchg
in
pop
mov
inc
arpl
inc
add
cmc
and
sbb
xchg
cmp
lods
add
loop
mov
loop
xchg
hlt
dec
scas
or
and
les
push
pop
xchg
jns
fldenv
xor
adc
sbb
bound
jno
data16
imul
shll
pop
nop
shlb
inc
mov
cmp
dec
mov
sahf
out
fwait
test
sub
loopne
and
jmp
and
mov
stos
int3
dec
cwtl
sbb
jne
inc
or
neg
rclb
mov
loop
loopne
bound
push
insl
pushf
iret
adc
hlt
cmp
cmp
fwait
sar
icebp
fucom
rcrb
ds
shlb
clc
mov
cmpsl
or
addr16
cltd
xchg
in
mov
dec
stos
cmp
lcall
jmp
pop
stos
fidivs
mov
fcompl
jb
nop
fmuls
lret
fstpt
mov
mov
jo
sub
adc
outsl
pop
push
mov
adc
dec
in
add
xor
stos
out
pop
lret
fwait
arpl
shr
faddp
xor
lea
inc
sub
sbb
cmc
dec
jp
and
test
stos
and
and
repz
icebp
cld
lcall
mov
cmpsb
and
inc
pop
cwtl
xchg
mov
xchg
das
cli
lea
stc
pop
pop
ja
and
xchg
mov
add
xchg
arpl
xorl
cmc
das
pop
pop
mov
into
mov
sub
cmpsb
dec
shll
data16
cmpsb
pop
mov
pop
in
ret
inc
ja
daa
xor
lods
sub
jecxz
pop
mov
lods
popa
icebp
and
iret
mov
xor
mov
aam
out
add
icebp
sbb
pop
cld
jmp
xchg
int3
f2xm1
out
mov
jg
mov
lods
je
orl
add
xchg
dec
cli
xor
or
sti
inc
orb
or
mov
mov
ffreep
push
cmc
hlt
mov
dec
faddl
inc
and
adc
add
cmp
xchg
pop
outsb
std
sub
pop
aas
mov
xchg
mov
or
xor
sbb
jo
aad
dec
call
out
mov
ja
aam
shl
xchg
iret
cmp
xchg
add
jmp
sti
adc
sbb
mov
ss
xchg
shll
clc
mov
mov
cmpsb
mov
or
int3
inc
push
out
dec
mov
add
loopne
ds
jp
addb
dec
sbb
pop
cmp
mov
rorl
les
aas
rcrl
pop
mov
xor
sbb
and
sbb
xlat
and
sub
out
test
inc
push
add
sbb
loope
out
sti
fildl
xor
jae
pop
push
pop
pop
bound
mov
inc
sub
xor
mov
jno
outsl
cli
idivl
pop
add
push
xlat
aas
pusha
pushl
cmpsl
into
xor
and
jns
mov
or
enter
into
mov
in
loope,pt
pop
push
sub
adc
cld
jmp
pop
sbb
jge
dec
pop
and
mov
xor
sahf
add
rclb
clc
xor
loope
dec
fisubrs
flds
add
push
jmp
mov
jae
daa
imul
scas
fildll
mov
call
push
pusha
std
ficoml
outsl
dec
lea
xchg
into
scas
jb
pop
inc
out
xor
add
rcl
push
ja
pop
or
sbb
imul
and
ja
push
push
fs
push
dec
mov
sbb
mov
mov
dec
aam
ret
test
mov
sub
push
jno
add
aad
push
jo
mov
and
xlat
out
xlat
inc
movsb
sbb
shlb
leave
pop
pop
jle
loope
push
jp
repz
outsb
push
ljmp
jge
ret
lods
rclb
pop
in
std
aaa
cmp
jno
movsl
jns
scas
jp
mov
adc
pop
outsb
je
pusha
mov
lock
pop
out
fcomps
adc
cwtl
ret
stc
mov
stc
test
and
sti
jns
outsl
faddp
inc
pop
outsb
ss
shll
cmp
rol
ds
mov
or
mov
mov
push
add
mov
ret
dec
ret
dec
les
xor
push
call
addb
data16
pop
sub
inc
adc
mov
xor
leave
test
or
aad
dec
or
loop
sbb
popa
xchg
pop
out
mov
jo
xchg
aas
repnz
sbb
xchg
inc
mov
iret
fidivs
cmp
cmpsb
imulb
mov
cmp
pop
aam
inc
lret
repnz
js
rcrl
cltd
jnp
mov
dec
aas
dec
rorl
xor
mov
nop
lret
jns,pt
ljmp
sub
mov
lret
lea
into
mov
mov
in
and
jbe
mov
push
inc
loopne
xchg
test
pop
adc
mov
aaa
loope
mov
add
dec
fsubrp
add
ljmp
in
in
cld
adc
xchg
movsl
pop
jnp
add
cmc
sbb
fsts
in
jmp
jp
sub
pop
popa
lods
fmuls
out
movsl
push
nop
pop
mov
xchg
mov
push
sub
rorl
call
imul
or
or
sbbb
fldcw
lds
or
inc
dec
stos
insb
into
ljmp
adc
push
xor
mov
pop
push
pop
shrl
cwtl
push
jb
adc
and
jnp
inc
mov
mov
in
mov
adc
push
mov
jo
test
push
mov
in
stc
xlat
push
mov
ret
into
xchg
ficoml
or
fisttps
mov
xchg
pop
sbb
mov
in
jg
xchg
in
mov
daa
stos
cmp
inc
jo
jmp
subl
add
inc
xlat
sbb
inc
andb
mov
imul
orb
or
mov
xor
pop
insb
mov
loope
bnd
and
bnd
mov
add
arpl
ret
lret
and
scas
mov
mov
add
mov
inc
mov
jmp
inc
andl
pop
popf
pop
cmc
repz
daa
subb
lea
xchg
ljmp
jbe
jns
push
sti
les
movsl
mov
or
xchg
pop
int3
adc
mov
int
pop
pop
sbbb
cli
gs
cmp
sub
bound
pushf
push
iret
or
sub
shlb
aaa
sub
dec
add
lock
test
mov
adcl
xor
sbb
mov
mov
loopne
mov
xor
dec
add
adc
inc
xchg
call
rcrb
fs
pop
inc
push
push
std
roll
mov
ljmp
in
popa
repz
lods
jo
jge
test
gs
or
mov
or
cs
std
js
iret
in
hlt
add
stos
shlb
lcall
xchg
pop
data16
mov
out
and
out
mov
and
icebp
bound
add
pop
js
cmp
dec
pop
sbb
cli
mov
mov
mov
jae
fwait
hlt
mov
loop
js
xor
xor
aaa
pop
pusha
pop
mov
mov
sub
xor
or
mov
xor
fiadds
push
mov
jb
dec
adc
das
bound
rcrl
or
insb
xchg
fstpl
push
aad
jle
xor
cmc
pop
out
push
pusha
in
fs
rcrl
out
into
xchg
lcall
cmpsb
mov
rol
fcoms
jmp
fwait
arpl
mov
rolb
mov
stos
dec
sbb
xchg
jecxz
inc
jmp
cmp
insl
loop
ja
outsb
adcb
outsl
daa
fs
mov
add
fsubs
or
fsubl
fmull
je
aam
hlt
gs
mov
ljmp
sbb
push
sbb
fincstp
jbe
ss
movsb
rcll
jbe
cmp
adc
in
cltd
stc
test
aad
mov
push
cmp
jge
dec
inc
popf
mov
and
pop
inc
cmp
and
jl
cmp
xchg
ljmp
ja
inc
mov
aaa
or
stos
xchg
iret
rorb
adc
jp
xchg
jp
xor
or
mov
jg
movsl
rol
xchg
mov
mov
push
scas
xchg
sub
jo
out
sbb
rclb
inc
roll
xor
adc
cli
cmp
mov
lods
push
cwtl
xor
std
in
jns
rcll
lea
sub
cld
movb
add
shlb
adc
adc
and
and
sub
pop
daa
mov
divl
adc
cmpsl
push
es
sub
rcrl
push
xor
pop
loop
mov
or
or
and
mov
inc
out
mov
in
cmc
rcrl
js
roll
movsb
mov
ja
cs
adc
lret
test
sbb
pop
mov
outsl
hlt
xor
pop
add
jns
push
daa
lea
js
jecxz
dec
punpckldq
mov
inc
push
fisttpll
clc
xchg
mov
add
cmp
std
lock
adc
push
nop
fcmovbe
cs
test
mov
push
xchg
movsb
lret
sbb
jg
or
lcall
ffreep
dec
dec
mov
pusha
iret
dec
or
insb
push
lahf
ret
pop
jecxz
testb
into
cmp
negb
ja
cs
pushf
xchg
cmpsl
or
out
push
insl
dec
xor
sahf
jns
fcomps
inc
lock
imul
xchg
adc
sahf
fnstsw
aas
arpl
jbe
subl
inc
add
cmp
jl
in
push
xor
leave
mov
xor
inc
js
xor
and
pop
int
dec
testl
fisubs
mov
or
iret
imul
mov
aas
loopne
cmp
xor
pop
ss
sub
lock
mov
mov
mov
mov
sbb
std
inc
inc
lahf
mov
cmp
and
rcl
mov
test
cmp
add
lea
shlb
mov
cli
xorl
push
hlt
dec
push
lock
dec
out
push
imulb
push
pusha
inc
cmpsl
mov
pop
dec
fcoml
or
stos
je
mov
lcall
xchg
cld
rcll
fs
hlt
cmpsl
xor
mov
xor
mov
loope
xor
jmp
push
ret
imul
push
ret
lock
test
cmp
lea
iret
pop
push
int3
jp
hlt
or
leave
mov
clc
or
add
add
test
xor
jg
jns
popa
cli
cmp
imul
fistps
addps
lods
xchg
inc
adc
mov
ljmp
mov
je
adc
pop
pop
mov
clc
hlt
mov
es
movsl
dec
stos
test
and
fsubl
ljmp
fidivrl
push
inc
aam
xor
mov
addr16
es
cmc
out
inc
insb
pop
inc
cmp
or
fwait
xor
push
dec
std
ret
inc
notb
and
jo
mov
outsl
or
mov
pop
xor
test
lahf
mov
pop
push
push
adc
fs
sbb
jbe
sahf
mov
push
in
xor
jg
lcall
adc
inc
pop
inc
jge
callw
test
adc
pop
cmp
fwait
scas
hlt
cltd
insl
pop
and
jp
ret
rcll
or
lods
je
test
bound
lahf
pop
push
xchg
mov
in
or
push
push
cmp
pop
movsl
inc
jbe
xchg
frstor
lret
int3
cs
mov
lock
inc
aas
testl
mov
orl
sahf
aas
fdivl
addl
test
outsb
test
or
scas
lds
xchg
pusha
imul
sbb
fdivp
adc
lret
insb
push
mov
pop
sahf
or
out
lret
cwtl
filds
rcr
adc
mov
shl
and
movsb
mov
scas
or
jg
lea
mov
dec
lahf
test
std
jae
hlt
mov
ja
dec
cmp
jmp
roll
cmp
test
lods
shl
mov
sbb
rorl
nop
scas
aaa
sub
in
fisubrs
es
adc
loopne
adc
add
sbb
add
adc
cmp
sahf
push
push
mov
or
add
jo
fdivs
je
retw
push
mov
fs
fisubrl
cmp
jp
adc
loope
mov
cltd
inc
xchg
pop
pop
dec
adc
jge
sti
jae
lcall
loopne
adc
int3
fiadds
push
sub
mov
and
sbb
xor
shrl
mov
dec
lods
adc
add
fcoms
jns
adc
dec
ret
and
pop
out
jecxz
jg
clc
xor
inc
scas
lds
pop
pop
insb
inc
loop
mov
pop
lret
cmp
js
xchg
push
shrl
sub
test
lret
lcall
inc
cmpl
cmp
sbb
clc
adc
mov
jae
sub
cmp
pop
test
mov
or
cmpsb
dec
shll
jg
cmc
test
adc
addr16
sbb
sti
mov
scas
cmpsl
sub
fsubrs
cltd
leave
pop
movsb
call
xor
adc
stos
sbb
incl
idivb
adc
cmp
outsl
leave
mov
in
pop
inc
pop
or
aam
mov
imul
adc
cltd
pop
push
xor
jb
fisubl
push
imul
fldenv
out
lret
loope
out
mov
inc
popa
cmp
mov
jnp
dec
or
hlt
mov
xlat
rorb
and
int3
xchg
movaps
ret
dec
mov
aas
jg
xchg
gs
test
add
jne
cli
pushf
ret
dec
sub
pop
lea
dec
dec
inc
xchg
push
jl
xchg
sub
and
inc
in
fnsave
xchg
inc
mov
push
cmp
add
dec
dec
inc
pop
mov
xlat
or
not
mov
mov
movsl
rolb
andl
hlt
lds
inc
dec
aaa
outsl
and
fcmovnb
or
leave
xchg
mov
dec
cmp
mov
js
das
push
leave
lods
sub
js
iret
loopne
outsb
std
push
or
adc
test
sub
push
fsts
sbb
es
pop
xchg
aad
jo
loopne
sub
xchg
mov
out
stc
jbe
lock
push
loop
adcl
or
mov
xchg
pop
add
loope
inc
or
cmpsl
xchg
inc
mov
int3
sahf
ret
push
cmpsl
in
cmpsb
movsl
dec
popf
popf
push
cltd
call
movsl
mov
xchg
ret
inc
mov
in
jnp
fucomip
pop
mov
mov
pop
xchg
gs
sbbb
or
sub
sub
lods
adc
inc
fmul
rcll
into
mov
mov
aad
adc
arpl
out
clc
jg
cmp
push
jle
int
lcall
mov
stos
xchg
sub
stos
fcomi
xor
add
pop
sti
rcrl
jb
imul
arpl
das
mov
inc
cmpb
aam
jl
in
sub
jg
jecxz
bound
adc
xchg
add
dec
movsb
rclb
int
pop
cwtl
inc
xor
iret
pop
xlat
aad
inc
cwtl
test
and
pop
add
inc
inc
xchg
cwtl
scas
iret
adc
insb
movsl
sbb
stos
outsl
incl
pop
pop
or
xchg
xor
dec
mov
push
cs
ja
pop
xor
aas
mov
push
stos
js
jle
xchg
and
repnz
or
xchg
mov
inc
inc
std
xchg
mov
imul
ljmp
aam
ds
xchg
cmp
or
fnstcw
leave
fisubs
or
xchg
mov
das
iret
test
dec
sub
xor
pop
repnz
mov
mov
jle
mov
pop
mov
lcall
inc
mov
aas
xchg
inc
rcrl
mov
jbe
stos
adc
les
add
jecxz
mov
cwtl
std
push
movsb
scas
and
aam
mov
sbb
adc
and
xor
lock
jb
inc
and
imul
and
push
mov
jl
xchg
pop
rorb
or
sbb
iret
push
outsb
cmpb
scas
rcr
popa
inc
pusha
sbb
out
push
adc
and
arpl
test
jns
fstl
mov
lods
pop
pop
outsb
inc
scas
mov
popa
fs
std
stos
gs
mov
xchg
jle
ss
enter
push
adc
add
adc
ss
adc
aaa
xchg
lcall
out
loopne
mov
jnp
pop
popa
mov
cmp
jmp
jnp
test
mov
cmp
imul
inc
mov
ja
out
arpl
pushf
lods
add
aaa
adc
sbb
fsubrp
mov
jp
mov
mov
arpl
sub
mov
xor
ret
out
call
outsb
hlt
mov
pop
out
in
xor
jp
inc
inc
outsb
push
shrl
femms
in
cli
pop
xchg
mov
xor
push
scas
cwtl
dec
cmp
sbb
pop
jbe
sub
loope
clc
nop
lret
adc
insl
or
imul
jg
mov
inc
nop
sarl
pushf
pop
add
leave
add
mov
xor
add
inc
sbb
push
adc
test
dec
dec
mov
cmp
jo
cmpl
and
adc
into
adc
into
cwtl
cmp
sbb
or
xchg
into
mov
push
cwtl
sbb
popf
sahf
fbstp
jp
daa
mov
movsl
push
push
push
dec
mov
cs
push
mov
mov
clc
push
push
push
mov
jae
cmp
sub
lahf
inc
mov
movb
cltd
enter
sbb
lock
cmp
add
jle
ja
jp
sbb
push
jle
scas
out
stc
mov
insl
inc
push
mov
mov
ss
dec
mov
fwait
adc
mov
rcrl
pop
inc
xor
sahf
das
repnz
push
ja
mov
mov
gs
shll
iret
dec
jb
and
aas
or
xchg
fs
rorl
inc
ss
hlt
scas
mov
push
xor
xchg
stos
stos
fildll
in
push
sarl
in
push
shl
dec
jl
jne
scas
cmc
push
hlt
push
push
ja
jecxz
test
xor
ja
ret
in
ljmp
aaa
sahf
push
mov
push
mov
adc
xchg
xor
lock
ret
call
test
in
jmp
test
xchg
xor
bound
cwtl
and
lret
nop
push
pop
aaa
xchg
sub
inc
movsl
stos
sub
dec
into
mov
jnp
and
push
xchg
add
daa
scas
jmp
mov
cs
fxch
rcll
enter
sub
popf
adc
mov
and
cld
lar
sub
inc
pop
mov
cmpsb
enter
rolb
into
sti
shll
add
in
call
lret
inc
imul
hlt
ja
repnz
lret
gs
out
shlb
cmp
idivl
xor
shrl
das
clc
jnp
xchg
cmc
xchg
inc
jb
icebp
test
ja
fwait
clc
fld
push
pop
inc
push
je
cwtl
jg
das
inc
pop
sahf
imul
ds
fdivs
dec
push
mov
jnp
inc
push
cmp
pop
test
leave
daa
daa
shlb
leave
mov
mov
rcrb
arpl
rclb
pushf
jb
repz
mov
mov
movb
adc
lods
jmp
jne
jmp
inc
lods
pop
xor
popf
push
flds
pop
js
push
jno
int3
iret
push
and
sbb
loopne
imul
popa
cwtl
sbb
ss
mov
sub
fwait
lret
gs
lock
jle
cmc
pop
hlt
or
es
imul
pop
push
xor
cmc
jle
xor
das
add
loopne
push
sbb
out
adc
in
rcrl
jmp
insl
mov
mov
pop
push
andb
sti
call
cmp
xchg
lret
test
sub
xlat
push
sub
ja
test
lods
ffree
xlat
or
inc
scas
lds
xor
mov
iret
push
divb
jno
int3
pop
cwtl
jbe
aam
inc
push
dec
out
cwtl
push
hlt
push
imul
inc
std
flds
or
test
cs
out
outsb
out
lcall
fs
notl
or
fwait
sub
dec
adc
sub
repnz
inc
inc
ljmp
fwait
pop
sbb
aaa
mov
out
cmp
clc
jns
fs
sub
push
xchg
inc
js
and
in
in
or
jo
mov
sahf
in
adc
push
jae
insb
pop
mov
loope
sub
stc
dec
and
shlb
je
adc
mov
cmp
es
iret
fst
xor
bound
movhps
lret
sbb
push
push
jl
sti
movsl
jmp
adc
cmc
je
jo
jmp
rcrb
inc
fcomip
nop
push
xlat
call
xchg
push
mov
mov
lea
int
popf
cmp
adc
call
inc
pop
inc
sub
hlt
stos
sarb
sub
jle,pt
jns
movb
fldz
orb
sub
lahf
pop
loop
mov
mov
aas
popf
popa
pushf
add
sbb
ljmp
jg
push
xchg
rcrl
sub
sti
sub
pop
push
dec
sbb
sub
dec
fucomip
cltd
scas
cwtl
leave
jbe
jae
mov
sbb
jae
scas
and
dec
ss
pusha
ret
int
hlt
rcrb
aam
sti
jne
in
jmp
loope
xor
mov
aad
in
xchg
mov
pop
push
inc
and
jge
dec
jae
imul
repnz
fldcw
sti
insb
popf
pusha
lds
jmp
and
mov
data16
push
hlt
std
outsl
mov
negl
fwait
pop
stos
sbb
push
sbb
inc
push
mov
or
in
insb
pop
cmc
outsl
pop
or
int
imul
cmpsl
dec
les
inc
mov
push
sbb
pop
mov
jp
mov
aad
mov
dec
aas
mov
outsl
dec
divb
lcall
sub
ljmp
das
test
mov
ljmp
addl
sbb
imul
fwait
mov
bnd
fwait
in
jnp
lcall
add
sbb
mov
mov
inc
sub
push
jmp
in
out
pusha
sti
mov
pop
inc
pop
or
and
ficoms
cmc
out
js
inc
stos
test
and
test
dec
sub
xor
mov
mov
sub
rcrb
dec
inc
test
addr16
push
jmp
and
lret
dec
andl
cmp
push
sub
dec
jne
das
push
stos
lcallw
xchg
adc
add
mov
aam
sub
lods
sub
sti
popf
sarl
dec
dec
pop
mov
sbb
push
mov
mov
xchg
cmp
addb
insb
daa
dec
ljmp
inc
fnstsw
cvtdq2ps
loope
dec
mov
pushf
bound
lret
jb
rolb
sbb
cmpsl
imul
fbstp
cmp
lds
mov
nop
outsl
outsb
xchg
add
adc
cmpsl
sbb
add
cli
mov
inc
imul
out
mov
or
insl
jno
int3
loopne
pop
clc
movsl
pop
sub
push
inc
dec
mov
add
arpl
inc
lret
bound
jne
inc
mov
stc
addl
jns
cmovle
ss
ror
sbb
pushf
icebp
dec
popf
sub
fcmovu
and
jp
addl
rcrb
rorl
xchg
mov
cmp
repnz
cmc
dec
aad
push
lds
les
mov
inc
sbb
fs
cwtl
fldcw
pop
cld
xor
inc
pop
shll
lahf
inc
int
lods
mov
lret
jno
into
jecxz,pt
inc
mov
dec
mov
inc
popa
fstpt
push
jecxz
test
or
ret
pop
sub
enter
pop
cli
movsb
outsb
xchg
cmp
mov
pop
mov
shlb
decl
cli
inc
sti
xor
xchg
cmp
mov
push
aam
xchg
jbe
pushf
out
adc
outsl
xor
push
in
fadds
push
xor
movsl
shlb
dec
and
mov
or
out
das
or
xchg
scas
fwait
js
and
cmp
stos
sub
xchg
mov
xor
ljmp
push
push
cmp
mov
dec
pop
jmp
decl
mov
insl
pop
dec
mov
mov
xchg
dec
fstl
or
pop
push
call
sbb
pop
insb
in
jmp
push
inc
movl
pop
iret
sbb
xlat
sbb
aad
addr16
idivl
inc
add
xchg
push
adc
dec
nop
sbb
inc
cmp
sbb
and
fwait
popa
pushf
jg
in
sti
mov
lahf
adc
push
inc
or
jge
fcmovnbe
mov
sub
mov
pop
pop
ret
or
lods
xor
shrb
fsubrp
dec
add
or
xlat
xor
test
mov
add
or
add
pop
xchg
sub
adc
push
push
shl
imul
fst
mov
and
arpl
pop
mov
jle
mov
int
in
dec
das
sub
sbb
pusha
ljmp
pop
inc
aad
das
cld
aaa
popf
jns
jae
mov
ljmp
js
jae
or
mov
sub
dec
repz
clc
negb
addr16
ret
cmp
jbe
adc
hlt
loope
cltd
xchg
sub
jne
cmp
jno
jb
cmp
rcrb
js
lahf
cmp
out
mov
adc
cmp
gs
incb
and
inc
mov
rol
daa
mov
cld
mov
xor
and
mov
push
mul
mov
pop
sub
sbb
xor
jmp
popf
ja
jae
adc
fs
imul
repnz
inc
dec
pusha
shll
hlt
iret
fdivrl
arpl
ret
xor
repnz
cs
cmp
dec
jp
mov
daa
insl
fwait
rcl
fisubl
mov
inc
fimuls
push
jmp
pushf
nop
and
or
scas
notl
mov
xchg
push
jge
bound
mov
mov
subl
adc
mov
outsb
outsl
jbe
int
xchg
xor
xchg
push
gs
sbb
sbb
dec
in
in
xor
dec
add
add
imul
fadds
movsl
cmp
stos
inc
xchg
cmp
hlt
inc
lds
add
cmc
mov
mov
lds
ficoml
sub
stc
int3
inc
cs
or
xlat
inc
repnz
inc
pop
icebp
or
push
nop
repnz
mov
fadd
xor
adc
add
mov
or
fwait
lock
jmp
ret
cmp
mov
sbb
mov
lods
sub
and
in
push
call
pop
mov
cmp
and
ss
push
pop
repnz
xor
enter
dec
sub
add
popf
jae
xchg
lods
sub
fmulp
in
into
xchg
mov
pop
add
mov
mov
ss
int
dec
test
test
push
gs
dec
mov
cmc
out
jmp
popa
push
daa
mov
inc
mov
mov
mov
sub
pushf
sub
sub
je
loopne
xchg
ficomps
push
mov
movsb
and
std
inc
inc
pop
jge
stos
cli
mov
mov
pop
push
insb
dec
lahf
pop
add
aas
neg
dec
inc
je
test
add
call
faddl
sub
or
mov
jne
cmpb
xlat
ror
les
out
sbb
inc
xor
repnz
mov
loop
jl
sbb
loope
movsl
mov
and
sarl
test
and
ret
cmp
mov
inc
mov
pop
popa
jb
xor
xlat
fnstsw
lea
inc
push
adc
cmp
sarl
sahf
bound
imul
and
popf
inc
add
mov
xchg
xor
insl
xchg
out
out
nop
push
mov
jnp
mov
pop
inc
int3
test
loope
mov
inc
rorb
repz
scas
shlb
daa
inc
lock
cmp
jne
stos
in
jnp
inc
sarl
mov
xor
ficoml
push
and
jno
mov
add
nop
inc
aas
pop
xor
in
iret
or
pop
sar
push
repz
test
test
jno
loope
sbb
lock
lock
mov
pop
push
push
dec
jge
lock
xchg
data16
push
and
push
push
std
sbb
shll
or
mov
xchg
inc
ret
or
clc
bound
sbb
xor
sbb
jl
jo
push
cmp
add
sahf
mov
pop
loop
mov
jb
xor
fdivrp
outsb
push
xchg
std
dec
cmp
mov
or
addl
sbb
loop
push
es
add
inc
lret
inc
ret
int3
cmc
or
add
es
out
xor
xchg
jmp
dec
int3
xor
mov
stos
xor
pop
fcomi
mov
jae
push
mov
inc
inc
lret
sbb
loop
andl
mov
push
popf
and
stc
xlat
fisubl
fs
bound
popf
andl
inc
subb
or
movsb
int
push
mov
xchg
mov
lods
pop
pushf
rorl
shlb
or
cs
mov
jle
pop
xor
push
adc
cmp
ljmp
arpl
movsl
xchg
fwait
jno
imul
push
cmp
int3
shrl
shr
sbb
clc
aam
push
enter
sbb
xchg
xlat
sahf
test
and
xchg
add
sub
mov
mov
loopne
jae
stos
out
mov
fbld
js
js
jle
sbb
pop
dec
fincstp
enter
fidivs
mov
jmp
mov
add
jmp
push
sbb
popf
pop
lahf
jne
cwtl
and
out
popf
jb
inc
xor
jg
pop
out
sahf
sub
fildl
out
xchg
add
aaa
pop
xchg
pusha
push
dec
mov
dec
push
push
sub
test
roll
xacquire
icebp
icebp
insl
pusha
scas
rcrl
fimull
or
cmp
xlat
xor
jg
xchg
inc
sbb
and
in
mov
movsb
sbb
xchg
jl
pop
stos
xor
push
or
inc
add
or
mov
fwait
popf
and
jns
jne
test
mov
mov
or
and
pop
fs
lahf
adc
sub
dec
aaa
cld
jg
out
fcmovu
xchg
sub
inc
cmp
cltd
int
fmuls
mov
repnz
in
cs
sti
imul
out
sarl
push
mov
dec
aas
adc
or
stos
call
or
popf
ljmp
cmc
cwtd
push
int
and
test
adc
mov
cmp
int3
das
mov
cmp
mov
adc
inc
sahf
dec
mov
sub
mov
xchg
int
ficompl
insl
adc
jecxz
loopne
pop
adc
into
mov
lods
imul
enter
push
nop
test
fdivr
adc
js
sbb
push
sahf
jns
xchg
pop
nop
pop
ret
in
ret
cmp
daa
jb
or
loopne
in
and
push
mov
ljmp
or
and
mov
adc
sbb
push
test
inc
out
fbld
jle
lret
mov
mov
pop
bound
lds
jecxz
leave
repnz
sub
cltd
clc
pop
mov
xchg
push
lods
mov
push
push
test
or
ss
or
push
repz
xor
or
shrl
pop
std
addr16
aad
mov
bound
jbe
mov
mov
jl
cmpsl
movsl
shll
pop
std
rcrb
cmpsl
imul
lahf
jae
icebp
inc
nop
cmp
mov
xchg
inc
jns
sti
push
mov
test
push
js
jp
dec
inc
movsb
inc
in
push
mov
mov
out
cmp
out
and
jecxz
sub
imul
mov
flds
adc
stos
mov
movsl
es
pop
or
lods
inc
cmpl
jb
inc
inc
pop
lods
inc
and
aam
sbb
mov
clc
or
call
das
adc
inc
jae
xor
push
fmul
pop
and
pop
ror
jmp
test
and
pop
cld
into
es
repz
push
cwtl
rcl
hlt
mov
mov
out
out
stc
pop
dec
xchg
dec
sub
movsl
jg
psrld
aam
icebp
xor
xchg
mov
loopne
mov
mov
mov
aam
jge
sub
push
jo
or
xchg
arpl
jae
scas
and
or
xchg
mov
pusha
insb
xchg
sti
xchg
gs
cmp
push
push
pop
push
or
nop
popf
sub
imul
ret
push
mov
mov
mov
mov
or
xor
xchg
and
mov
cli
cmp
add
dec
dec
mov
adc
stos
pop
out
push
or
lcall
push
pushf
std
sarb
jmp
lret
cs
sub
cmpsl
ficoml
jl
shlb
push
lods
lahf
lret
shll
cmp
lock
in
ss
aaa
movsb
push
adc
or
cmc
xchg
aam
mov
xchg
inc
cmp
test
test
out
shrb
push
bound
push
mov
mov
outsb
in
mov
xchg
pop
xchg
cmp
mov
mov
inc
mov
jmp
jp
cmpsb
in
repnz
out
adc
cmp
sub
pusha
jle
int
or
sbb
mov
pcmpeqw
outsb
cs
xor
mov
xor
dec
inc
inc
loop
push
sbb
ffree
in
jp
inc
popf
mov
inc
lea
xchg
mov
aad
sub
sbb
push
jb
xchg
sbb
loopne
cmp
pop
movb
dec
push
adc
aas
sub
push
push
push
std
inc
icebp
and
lret
and
and
int
and
inc
dec
push
or
xchg
movl
cltd
rol
cld
mov
in
aad
nop
ljmp
pop
inc
and
pop
dec
lock
das
mov
in
mov
add
insl
jp
shl
scas
mov
mov
cmp
out
lods
push
xchg
imull
pusha
pop
imul
inc
into
aad
jne
mov
cwtl
aad
fldt
mov
movsl
pop
int3
cmp
cmp
pop
jbe
push
add
sbb
fs
push
into
mov
loop
sahf
fidivrl
stos
cmpsl
int3
mov
cmp
nop
ret
mov
and
cmp
mov
mov
push
jmp
jl
xchg
jb
mov
sbb
and
pop
mov
xor
es
aad
cltd
arpl
sarb
insl
and
cld
or
xor
push
in
ss
cmpsl
insb
sbb
push
cmp
add
xchg
pop
xor
popf
push
jb
not
xchg
sub
or
cmp
sub
addl
cmp
inc
sbb
xor
mov
jg
sbb
xchg
dec
add
xorl
stos
push
mov
and
or
insl
fsubl
inc
fdivs
pop
popa
adc
push
cmp
lret
mov
scas
xor
mov
inc
or
push
les
shl
dec
and
sbb
mov
jle
push
stos
fcoms
cltd
jae
push
test
icebp
inc
adc
lcall
addr16
pusha
inc
cli
dec
sti
and
push
xchg
mov
adc
cmpsl
jnp
mov
and
loopne
shl
imul
sbb
jl
mov
jbe
js
mov
sbb
std
xchg
idiv
loopne
out
lods
out
movsl
adc
and
hlt
push
and
adc
cmp
mov
stc
xchg
cmp
lds
inc
add
into
cmp
out
cmp
push
jae
xchg
std
dec
subl
test
nop
rcrb
test
jle
or
ja
mov
inc
adc
jae
mov
and
jo
xchg
jmp
aaa
out
xchg
dec
mov
outsl
scas
fisttps
xor
mov
push
push
pop
sysret
lods
mov
imul
or
mov
aad
loopne
xchg
enter
fsubrs
call
ja
and
lret
lods
icebp
xor
rorb
push
rcrb
cld
adc
inc
jl
mov
inc
inc
mov
and
orb
pop
popf
and
out
add
popf
add
sub
movsl
cmp
stos
ja
stc
push
push
in
fstl
mov
clc
pop
cmpsl
test
push
sub
pmaxsw
push
je
push
cli
negl
fwait
insl
mov
adc
ljmp
popa
pop
test
roll
jmp
repz
lret
pushf
pop
push
pop
jne
pop
pop
jecxz
lods
mov
shll
lea
ljmp
dec
or
sub
push
inc
repnz
inc
jns
in
inc
divl
iret
test
inc
mov
mov
dec
cld
cs
mov
aad
lea
sar
scas
xor
jno
ret
jmp
adc
sub
push
movsb
push
adcl
mov
das
xor
andb
pop
addb
jne
lock
mov
out
ljmp
lock
aam
ret
fs
testb
pop
andb
sarl
scas
add
jbe
pop
jno
jle
cmc
ror
or
ljmp
or
or
aas
pop
jmp
pop
dec
jge
int3
sub
ds
pop
inc
xchg
ret
jns
xchg
int
fnstsw
adc
test
adc
loop
add
ljmp
sbbb
pop
mov
std
mov
xor
clc
bound
jb
test
jmp
cmp
iret
in
inc
scas
pop
sbb
cmp
xchg
arpl
sub
dec
xor
xchg
in
testb
or
rcr
jle
cmp
aad
pusha
ljmp
cmp
mov
daa
mov
int
sub
mov
jmp
fisubl
popa
cmpsl
aad
rorb
mov
xor
cmc
pop
aad
cltd
xchg
out
mov
xor
inc
in
sti
sbb
add
movsb
push
mov
jbe
or
int
mov
xor
mov
aas
sbb
push
lds
ror
loop
dec
push
insl
sahf
jns
pop
loope
fnstenv
mov
jae
shll
mov
add
fldt
and
call
inc
sbbb
sub
imul
inc
sub
xchg
jns
add
addr16
sbb
pop
int
enter
and
enter
movsl
insb
movsb
xorb
xor
or
sub
out
call
jno
fnstcw
sub
dec
jno
adc
mov
insb
xor
repz
jl
inc
sti
in
bound
repnz
pop
push
outsb
push
mov
in
jle
in
call
cmpsl
imul
cmpsl
addr16
dec
dec
cmpsb
cmp
mov
inc
in
jle
or
je
ss
clc
pop
lods
inc
cld
xchg
inc
fldcw
and
ret
nop
enter
adc
aam
jp
ss
fists
test
jp
dec
insl
xchg
ljmp
mov
test
dec
add
or
out
fcomip
push
lret
out
std
and
repz
daa
mov
mov
insl
scas
jne,pn
fiaddl
mov
mov
mov
sarb
int3
stos
inc
pop
dec
aaa
movb
into
xorl
sti
sahf
and
fdiv
xor
stos
shrb
loopne
fstpl
sbb
lret
fcomps
push
push
scas
adc
sbb
ret
sub
jp
jecxz
jo
push
pusha
fnsave
fs
mov
inc
test
bnd
mov
sbb
pop
ss
adcl
pop
rolb
push
xor
xchg
add
add
gs
clc
sbb
mov
ret
rorl
fs
cwtl
cltd
add
push
outsl
pop
imul
cmp
lea
cmp
icebp
mov
mov
xchg
js
fbld
scas
adc
sub
bound
and
add
test
shlb
xchg
mov
push
cmc
xor
pushf
in
jmp
mov
inc
cld
push
subl
push
mov
fnstcw
mov
scas
and
outsl
aam
inc
adc
push
ror
aas
or
dec
inc
popa
push
sbb
movsb
adc
fwait
jge
lock
cmp
mov
push
mov
adc
push
data16
shll
add
add
testb
in
or
push
mov
jl
faddl
insl
sarl
jne
lret
negl
inc
mov
mov
cmp
jb
rorl
pop
daa
or
add
test
enter
dec
and
and
jns
int
add
inc
fsubs
push
jno
xor
inc
es
popa
mov
ret
gs
jle
js
aam
push
cmp
lock
loopne
mov
cmp
in
out
subb
rcll
inc
lods
cmpsb
push
icebp
enter
lcall
dec
xor
and
iret
in
scas
xchg
aaa
xchg
push
int
adc
jne
push
test
mov
pop
sbb
ljmp
data16
xchg
xchg
fcmovbe
push
mov
or
jle
jp
mov
arpl
xchg
sub
xor
adc
subb
pushf
cld
outsl
stos
jns
adc
sbb
out
imul
jne
cwtl
adc
movsl
lcall
xchg
lds
sti
pop
bound
cli
int
dec
shlb
inc
dec
inc
adc
cmpsb
mull
xchg
dec
xor
lock
lahf
xor
popa
ds
daa
xor
ret
dec
out
xchg
popa
aad
arpl
testb
jnp
sbb
mov
rorb
cs
testb
ret
repnz
push
outsb
repz
int
shrb
or
fstl
jge
ds
cli
xor
mov
ljmp
mov
cmc
loop
jb
lock
xor
imul
imul
pop
decl
popa
fdivrs
push
fadds
and
push
xchg
loope
aam
push
or
cmpsl
arpl
jae
sub
mov
pop
lods
pop
int3
mov
addr16
sub
cmp
mov
cltd
xlat
xchg
hlt
loop
ret
aas
insl
adc
sub
adc
or
jp
mov
cmc
cmp
fldcw
adc
into
adc
fbld
sahf
cld
mov
in
mov
mov
leave
ret
shlb
inc
dec
iret
cmp
sub
sub
insl
arpl
mov
xor
adc
dec
push
in
inc
popa
jae
push
dec
mov
gs
adcl
out
pop
montmul
pop
or
rclb
jmp
imul
jnp
data16
dec
pop
cmc
in
push
aaa
out
out
and
or
pop
sub
sub
fsts
lock
cmc
adc
std
dec
loop
test
push
and
push
aaa
add
mov
pushf
jb
adc
lcall
aam
andb
movsb
or
sbb
push
fisttpll
js
pop
mov
sbb
pop
xor
add
sub
push
rcrb
mov
data16
ficoms
jmp
aad
filds
pop
pop
in
mov
stc
mov
mov
enter
pop
cli
shll
repz
xor
add
mov
ljmp
and
sbb
lods
mov
dec
push
jno
test
jne
shl
out
push
jecxz
push
lea
imul
int
fistpll
stc
add
mov
insb
imul
adc
xchg
aad
in
dec
mov
hlt
pop
sub
ss
lods
pusha
sbb
lcall
repnz
add
test
jnp
xlat
mov
adc
dec
or
int
jb
call
mov
jle
fldenv
cmp
nop
movsb
popf
sub
outsl
and
in
adc
lahf
das
les
inc
push
mov
xchg
pop
pop
inc
lcall
and
dec
addr16
or
rorb
les
jns
sbb
jmp
mov
jg
cmp
cld
into
mov
sbb
sub
dec
or
sbb
mov
mov
mov
push
testl
cltd
into
xchg
in
jecxz
jne
les
out
adc
mov
movsb
lock
daa
mov
cmp
cmp
jbe
in
mov
loop
cmp
aaa
mov
xor
pusha
xchg
mov
jmp
das
imul
sub
cmc
aas
cmpsb
or
ljmp
and
pop
insl
mov
inc
ljmp
dec
mov
mov
es
or
adc
jb
icebp
insl
xlat
stc
xor
xchg
adc
in
iret
mov
cmpsb
fstpt
enter
and
or
cmp
lods
xchg
adc
enter
fwait
jb
sahf
mov
add
inc
sbb
aaa
stos
mov
sbb
xchg
or
inc
sbb
fistps
cmp
clc
dec
or
push
mov
lcall
add
inc
aam
call
outsb
decl
add
push
andl
lret
or
imul
hlt
test
cli
and
push
bound
stos
popa
jo
mov
inc
push
fwait
add
push
loop
clc
cmpsl
push
dec
mov
bound
mov
jl
fdivp
sti
rcr
mov
clc
ror
cmpsb
aad
loope
xorb
xchg
filds
adc
aaa
ret
aad
popf
outsb
or
mov
mov
fs
mov
cmp
repnz
sti
in
aad
dec
sbbl
inc
lods
pop
loop
ljmp
xchg
rcr
nop
mov
jns
mov
stos
dec
jb
test
daa
jl
dec
sub
popl
shrb
push
rcrb
mov
in
xchg
xchg
ds
fs
fsubl
addr16
dec
mov
or
add
icebp
jge
outsl
xchg
mov
cmc
adc
out
jecxz
pushf
popa
repz
sub
es
xchg
repz
adc
pop
push
mov
addr16
dec
xchg
lahf
daa
je
js
jmp
iret
std
ljmp
adc
mov
push
sub
jg
ret
sbb
xchg
std
and
jbe
gs
les
dec
in
pop
mov
sbbl
pusha
call
sbb
aas
cwtl
fsubl
lcall
out
mov
test
aaa
les
pop
imul
mov
popl
movsl
repz
sbbb
sub
idivl
aaa
adc
and
sarb
adc
loope
ficoml
insb
lahf
adc
mov
mov
imul
aaa
lcall
cmp
jecxz
mov
pushf
add
ffree
pop
in
fnstcw
push
insl
pushf
mov
push
mov
sub
je
sub
mov
sbb
lods
mov
xor
fnstsw
loop
xor
leave
and
jl
push
enter
or
ficompl
mov
xor
rolb
in
sbb
cld
adc
fimuls
add
cmpsb
and
xchg
pop
push
dec
insl
mov
fucomp
nop
shll
fmuls
aad
and
cmp
and
fbstp
or
mov
bound
into
incb
ret
hlt
out
adc
stos
enter
xor
sahf
xchg
or
push
es
leave
out
cmp
aaa
pop
xchg
pop
bound
push
sbbl
lcall
nop
aas
pop
aaa
scas
xchg
aas
adc
xor
nop
inc
lahf
sbb
stos
mov
mov
xor
or
push
pop
cltd
adc
xorb
mov
add
sub
pop
cmpsb
imul
cmp
fisttpll
int
test
jmp
and
pop
mov
jb
dec
lahf
mov
aas
mov
push
enter
inc
cmpsb
lock
repz
iret
xlat
push
mov
data16
aam
pop
shl
and
sbb
dec
add
lret
les
popfw
les
imul
jnp
jl
rcr
push
mov
xchg
adc
cmp
xor
jbe
lahf
pop
fistps
daa
xor
fdivl
xchg
lea
jne
mov
adc
loop
dec
pushf
pop
jmp
inc
into
mov
push
pushf
repz
adcb
repz
and
in
inc
mov
inc
cwtl
cmpsb
in
cmp
jo
push
testb
cmpsl
lock
dec
std
or
dec
fs
xchg
ret
popf
jg
pop
push
and
je
xor
adc
sbb
je
in
jne
pop
pop
int3
dec
pushf
lret
mov
sub
pop
mov
mov
stc
enter
jmp
sbb
or
shll
sub
xchg
in
mov
bound
cmp
clc
xor
jno
jmp
insb
outsl
xor
inc
into
subb
xchg
cwtl
sti
lahf
pop
cld
adc
cltd
je
jns
aaa
add
faddl
xor
add
xor
add
xchg
add
mov
sbb
sarb
mov
push
scas
sbb
inc
out
pop
std
cld
pusha
xchg
xor
mov
xorl
repz
mov
in
out
push
movsb
pop
js
dec
popf
fsubr
sub
xor
cs
fidivrl
adc
cmp
adc
adc
notl
add
cmp
pushf
add
movsl
push
outsb
push
push
lret
add
int
rcrb
or
incl
push
mov
xchg
std
hlt
fidivs
pop
popa
cwtl
das
xor
mov
add
and
or
ds
inc
add
rcrl
cltd
popl
hlt
stos
pop
add
mov
lock
imul
xchg
or
mov
jo
mov
aas
outsb
push
in
leave
movsb
repnz
xchg
shrl
sbb
test
pop
mov
push
cli
push
cwtl
xlat
push
cmp
ret
mov
and
lea
and
xchg
mov
aam
pop
push
mov
lock
and
add
call
inc
or
pusha
push
jg
mov
dec
inc
mov
ficomps
push
movsb
mov
push
jl
outsb
pop
sbb
sub
cmp
insb
jge
lock
mov
cld
imul
js
jb
jp
ret
test
lahf
addl
mov
dec
jmp
xchg
cmp
pop
jb
scas
cmp
aad
cmp
rorb
push
cli
shll
cmpsb
icebp
inc
movsb
and
int
mov
dec
test
and
jecxz
popa
mov
adc
in
lods
in
inc
dec
fcmovnbe
lcall
stos
in
dec
shrb
mov
mov
xchg
scas
add
test
js
fadd
lahf
lods
adc
mov
dec
adc
add
es
inc
xchg
xor
push
cmpsb
shrl
and
inc
test
inc
mov
fistpl
lds
stos
adc
call
sbb
adc
popa
lcall
pop
std
jne
inc
bound
mov
les
nop
ret
push
sub
popf
or
adc
aam
adc
push
xchg
add
or
xchg
out
dec
out
xlat
mov
or
jbe
ror
jmp
test
xchg
push
fnstenv
mov
pop
pop
hlt
jnp
iret
loopne
xor
push
flds
cmpsb
lcall
mov
addl
sub
and
fs
adc
or
xchg
rcrb
test
sbb
mov
hlt
sub
pop
in
cltd
ret
jne
outsb
mov
cs
jae
lods
pushf
sbb
hlt
or
pushf
xchg
sub
insb
addr16
fdivrs
mov
imull
sub
xchg
and
and
fbstp
ja
pmullw
cmp
int3
or
subl
fsubrp
das
in
out
pop
out
iret
jl
jl
aas
shlb
out
lock
jbe
ljmp
xchg
and
sbbl
les
clc
mov
mov
dec
dec
and
mov
push
orl
cmc
inc
loope
inc
mov
xchg
mov
aam
xor
daa
hlt
inc
mov
mulb
sti
clc
or
insl
in
pushf
into
cmpsl
lahf
add
loope
icebp
cmp
outsl
pop
and
adc
dec
sub
cld
jp
fdivp
pop
into
je
fstpt
pop
cmp
lret
sub
mov
push
or
shlb
push
cmp
mov
sti
add
push
imul
inc
dec
sbb
xor
and
rorl
call
in
pop
inc
sbb
sub
add
loop
pop
mov
adcl
add
pop
rcrl
dec
dec
sti
mov
fcompl
lcall
mov
lahf
mov
pusha
mov
cmp
cltd
push
xchg
shll
out
cwtl
pop
inc
mov
xchg
es
test
orb
sub
dec
or
arpl
add
es
nop
aas
je
jne
cmp
jns
mull
inc
insl
mov
cmp
push
pop
sbb
add
mov
xchg
insl
jle
js
xlat
or
jg
and
mov
or
or
dec
pop
jbe
notl
pop
mov
into
mov
sbb
nop
daa
cmp
sbb
add
adc
inc
aaa
jbe
mov
icebp
mov
mov
daa
aad
cwtl
mov
lea
out
mov
sbb
pop
fnstsw
cwtl
push
lcall
sbb
mov
std
stos
jnp
negb
ret
jecxz
nop
call
imul
mov
add
xor
in
jp
mov
inc
jg
jge
out
neg
mov
push
nop
lret
push
jge
dec
cmp
sub
push
ljmp
or
out
jle
xchg
aad
lock
push
stos
mov
cmp
cmc
je
lock
das
push
jo
lds
pop
rolb
dec
cmp
adc
sbb
int
test
ror
ret
xchg
sbb
adc
or
jnp
std
or
dec
sbb
lahf
jg
pop
lock
push
pop
jbe
pop
sbb
pushf
sub
xor
push
rcrl
mov
bound
mov
leave
or
scas
vminss
xchg
ret
add
pop
pop
inc
push
mov
sti
insl
js
push
ljmp
mov
mov
out
mov
push
adc
je
mov
dec
ljmp
xchg
jb
es
push
jne
sti
pop
rolb
out
push
in
cmp
push
repnz
push
arpl
sbb
jbe
jle
je
in
movsb
jl
jle
sub
mov
mov
and
or
orl
mov
push
cmc
arpl
insb
mov
or
psubw
hlt
mov
mov
xlat
iret
ret
fdivl
popl
insb
fs
adc
subl
or
ret
clc
addl
ret
into
sbb
push
mov
or
dec
inc
mov
sub
or
sbb
lahf
andl
mov
mov
mov
pushf
aam
xor
aam
fbld
inc
loop
cmc
bound
iret
jmp
cmp
push
mov
out
jne
add
sub
jl
shll
sub
in
icebp
xorl
push
lret
in
mov
out
es
mov
out
daa
ljmp
sbb
mov
xor
test
sti
mov
inc
popa
xor
adc
pop
cltd
mov
cs
decl
popf
insb
and
jns
fiaddl
shr
mov
xor
cwtl
add
and
xor
hlt
popa
push
jle
ret
movb
mov
sbb
jl
xchg
dec
cmp
sbb
in
das
pop
fmull
ss
pop
pop
jo
cmp
and
inc
pop
je
movsl
stos
adc
push
rclb
ret
mov
dec
cs
jno
loop
xlat
scas
add
pusha
das
mulb
adc
mov
push
xchg
stc
mov
cmpsb
test
push
gs
jg
mov
push
lcall
sub
int3
in
xor
insl
test
lret
mov
shll
xlat
cmp
xchg
dec
fdivrs
cld
jmp
pop
lods
fidivl
imul
outsb
pusha
cmpsl
or
ljmp
andb
lods
pop
mov
gs
stos
into
lea
push
fisubl
es
insl
js
fisubs
xchg
insb
cmp
mov
push
out
pop
jge
cwtl
xchg
dec
pop
jl
daa
sbb
insl
aaa
stos
incl
ja
imul
imul
inc
loop
cmc
add
test
pop
sub
cmp
pxor
inc
cmp
mov
inc
imul
fsub
push
fdivs
cli
push
jmp
adc
arpl
jbe
aaa
dec
sub
xor
and
inc
lret
cmp
out
std
lds
xchg
fcoms
sub
adc
xchg
push
jmp
sbb
lods
aaa
push
jns
mov
dec
fsts
mov
cmp
inc
add
insb
in
icebp
aad
adc
lcall
mov
xlat
imul
dec
cmp
stos
and
loopne
in
out
add
cmc
mov
xor
pushf
stos
es
add
xchg
xchg
inc
or
mov
aas
add
mov
mov
lahf
sub
push
shrb
and
pop
mov
and
jns
inc
stos
jno
push
xchg
cmp
and
push
dec
dec
test
inc
jnp
mov
cmp
jne
shll
js
mov
xchg
xchg
ret
inc
in
stc
rclb
bound
sbb
jne
sbb
lea
repnz
push
shl
jbe
gs
movsb
orl
dec
stos
aad
or
adc
sar
inc
mov
in
or
repnz
rcrb
xor
jecxz
add
mov
pop
inc
call
mov
inc
jl
outsb
cld
mov
nop
loop
repz
and
push
jmp
aas
popa
push
xchg
mov
ss
jno
and
fnsave
ljmp
bnd
in
push
nop
xchg
out
aaa
add
inc
bound
dec
xchg
lret
xchg
dec
outsb
mov
test
xchg
adc
jno
lret
xor
cltd
in
in
ja
outsl
int
out
ret
xchg
aas
cli
and
push
imul
es
add
pusha
lock
jb
add
sub
lret
push
incl
dec
push
fistpl
repnz
gs
cli
std
push
pop
pushl
sub
lods
mov
inc
add
mov
sub
shlb
test
inc
mov
mov
aas
push
and
out
flds
iretw
ret
jo
orb
pop
xlat
lods
mov
xchg
push
iret
mov
mov
xor
test
scas
aaa
in
mov
mov
lods
inc
test
xchg
popa
cmc
nop
loopne
mov
mov
cmp
mov
and
and
es
inc
push
nop
je
and
je
sub
jb
outsb
hlt
ret
movsl
repz
testl
jge
ret
dec
inc
fdivs
aas
pop
andnps
dec
pop
int
and
push
lods
es
shl
push
and
inc
add
xchg
neg
je
pushl
xchg
dec
jae
or
out
mov
xchg
push
xchg
mov
mov
mov
hlt
xchg
pop
cmp
dec
jae
in
popf
js
rol
add
jg
xorb
inc
sahf
or
mov
mov
cmc
insl
pop
rorb
rcrb
jle
xorb
or
xlat
sarb
or
push
cmpl
sbb
sub
xor
pop
sub
mov
push
das
sub
sbb
jp
stos
mov
pop
mov
inc
loopne
or
arpl
std
lcall
outsb
aas
insb
push
je
sub
mov
lods
fwait
adc
add
stos
xchg
dec
stos
jbe
mov
sub
fwait
cmp
jb
call
movsl
sub
jo
or
or
pop
mov
pop
dec
fists
cli
mov
adc
dec
cltd
push
xchg
test
pop
cwtl
sbb
stos
push
mov
xchg
or
test
aaa
jae
dec
mov
push
lret
jb
mov
shrl
scas
scas
mov
jns
fistps
sti
es
mov
stos
mov
dec
insl
pop
mov
mov
inc
insl
call
movsl
jle
das
aam
hlt
lret
repz
incb
lcall
push
sub
mov
ret
out
fimuls
fisttps
xlat
in
mov
test
fsubrp
out
imul
push
and
js
scas
enter
out
ret
repz
or
arpl
push
sbb
sbb
pop
cli
mov
inc
insb
icebp
mov
inc
mov
xchg
es
mov
jbe
push
jns
cmpsb
lock
xchg
in
xor
mov
stc
int
xchg
int3
cmp
push
push
jbe
push
cs
jnp
in
aaa
enter
imul
push
xor
sti
or
pop
repz
popa
rorl
xchg
xor
fucomip
fisubs
dec
pop
inc
adc
pop
mov
test
jnp
lret
sub
inc
or
push
adc
sub
ja
inc
lods
movsb
lahf
movsl
pop
sub
cwtl
shll
add
adc
xchg
sbb
lret
push
arpl
fdivrl
mov
cmc
and
mov
mov
dec
dec
test
xor
js
inc
insb
lods
into
pop
fnstcw
mov
inc
lret
jne
mov
adc
jno
and
iret
push
scas
ss
insl
inc
loopne
jb
leave
mov
daa
outsb
xorb
jne
or
fdivrs
ja
mov
lcall
imul
aam
idivl
xchg
push
mov
mov
push
adc
cmp
xchg
mov
sahf
arpl
xor
jb
push
inc
mov
mov
pop
scas
outsb
or
inc
scas
cmp
mov
xlat
dec
orl
cli
xor
and
ds
aaa
inc
jb
pop
shlb
xor
sub
call
shrl
pop
ficoms
pop
xchg
in
xor
or
mov
out
push
adc
add
and
mov
adc
mov
fmull
out
fidivl
into
fcmovnu
popa
imul
outsl
push
imul
cwtl
dec
push
mov
pop
shr
repz
sti
jns
in
mov
xchg
aam
in
jae
jb
sahf
mov
orl
push
jmp
cmpl
repnz
cmpsb
paddusw
shl
aas
push
add
xchg
xchg
cmc
adc
ja
cmp
add
mov
test
andl
inc
subl
pop
inc
or
dec
sbb
fsubrl
dec
inc
and
loop
outsl
push
shlb
xchg
sub
scas
jae
sbb
push
or
stos
mov
sar
adc
fdivp
jl
dec
rol
roll
rcl
push
faddl
push
or
int3
jbe
cmp
pop
repnz
mov
loop
pop
cmp
fwait
orl
push
jae
mov
daa
jmp
inc
dec
dec
mov
mov
out
aaa
xor
cltd
loop
dec
jl
cmp
pop
push
aas
test
push
xchg
icebp
jp
cli
xchg
jnp
xchg
fwait
popf
inc
push
in
movsb
mov
jle
pop
je
loope
sti
inc
call
push
mov
mov
imul
fcoms
fdivrs
clc
loopne
sub
add
fadds
mov
xchg
dec
dec
hlt
sbb
lret
add
adc
mov
sub
jne
mov
xor
cld
mov
ficompl
out
pop
enter
jecxz
push
and
push
fidivl
xchg
andb
dec
adc
shrl
mov
mov
jo
divb
xchg
std
dec
lods
sub
cmpsb
mov
cmp
and
dec
inc
in
jle
into
out
nop
mov
cmpsb
and
xor
popa
ret
xchg
fwait
outsl
push
rcll
mov
enter
push
push
pop
or
leave
leave
dec
dec
mov
inc
insb
push
inc
mov
add
mov
pusha
cmp
lods
das
aaa
fcomi
mov
inc
mov
mov
xlat
adc
aaa
lcall
mov
push
sbb
lods
add
or
lds
push
imul
or
pusha
mov
ret
or
pop
lahf
clc
adcl
outsb
inc
add
inc
mov
cmp
adc
test
mov
sarl
andl
fistl
mov
outsb
mov
and
mov
adc
loopne
dec
subb
imul
das
sbb
pop
jnp
clc
imul
into
xor
and
bound
sbb
jle
and
scas
mov
movl
dec
push
cltd
fcoms
mov
sbb
mov
push
sub
pop
mov
clc
subl
xchg
test
les
mov
adc
and
mov
mov
adc
in
inc
mov
lock
mov
push
mov
repnz
into
mov
stc
push
imul
fistpl
cmp
jmp
arpl
clc
rcrb
lods
daa
push
inc
fdivrs
leave
xchg
ficoml
popf
sub
nop
aad
fsts
shlb
push
mov
pop
or
cmpsb
mov
jno
cmp
jns
inc
fdivrp
addb
xlat
subl
mov
out
and
mov
mov
xchg
sbb
stc
sub
stc
fmulp
add
lret
jo
mull
or
cbtw
lahf
or
out
fdivrs
popa
cmp
in
inc
out
inc
mov
add
add
pusha
and
inc
mov
scas
ss
lret
popa
pop
scas
mov
pusha
jno
inc
inc
adc
push
repnz
popf
leave
pop
idivl
mov
lea
addr16
mov
jl
push
call
push
jp
int3
addr16
fstl
into
test
fnstenv
dec
jnp
mul
dec
push
dec
fsubr
ret
arpl
lret
jl
sbb
mov
mov
mov
fisubl
or
push
mov
cmp
jmp
loopw
pushf
clc
icebp
lods
ret
push
xchg
and
loope
mov
cli
outsb
mov
add
pop
cmp
mov
aam
push
xorb
and
jg
outsb
dec
jl,pn
hlt
dec
add
cmp
or
test
fucompp
lret
fcmove
lcall
xchg
outsl
pop
lods
sub
mov
jno
sahf
mov
leave
pop
shll
clc
or
cld
int3
jge
fstps
xor
lret
loopne
dec
add
sbb
mov
mov
movsl
sti
movsl
in
inc
push
scas
and
jnp
into
and
js
add
leave
sbb
jno
testb
fstps
insb
in
fwait
mov
rcrb
mov
cmp
mov
mov
pop
and
shll
xchg
out
lods
loop
pop
inc
jbe
cmc
icebp
adc
pop
lahf
dec
or
das
loopne
insl
jo
fs
or
push
out
cltd
push
lods
xchg
outsl
mov
imul
adc
fcoms
sub
pop
or
xchg
js
push
jge
and
or
ds
stc
xchg
xchg
mov
or
or
and
ds
mov
mov
or
dec
xchg
pop
hlt
mov
push
nop
lret
cld
cli
rcrl
stc
push
and
andl
in
callw
push
add
scas
dec
scas
sbb
fwait
aam
push
push
pop
mov
xchg
add
xchg
xor
sbb
dec
add
sub
lock
adc
ja
cmp
icebp
lea
out
ficoms
out
cwtl
mov
int
fildll
mov
insb
jge
or
add
mov
jbe
sbb
sarl
inc
lods
dec
into
push
jle
test
out
push
stc
cld
in
mov
jmp
lret
ds
inc
test
pop
mov
pushf
mov
pop
add
jb
shl
mov
cmc
lcall
lret
mov
ss
andl
or
popf
out
mull
or
mov
call
test
ss
dec
rclb
inc
inc
fwait
addr16
adcb
mov
add
jbe
xor
jae
out
sub
imull
stos
testb
mov
loopne
clc
int
jg
xchg
cmpb
lcall
in
xor
dec
and
jle
jno
nop
push
popf
or
int
adc
pop
jmp
mov
add
push
sbb
repnz
call
call
out
int
adc
mov
mov
adc
repnz
add
sub
mov
xchg
sbb
call
jmp
divb
stos
insl
and
leave
hlt
aam
in
int3
call
mov
and
pushf
inc
inc
lods
sub
inc
jb
test
adc
mov
cmp
adc
cmc
int
ret
ljmp
adc
pop
shll
mov
add
inc
test
in
jmp
scas
xchg
test
dec
js
mov
sbb
pop
xchg
xchg
or
jecxz
gs
jo
ljmp
jne
pop
sub
xchg
lahf
gs
pop
xchg
and
cmp
and
mov
add
push
push
test
inc
icebp
jecxz
aad
or
sarb
push
mov
ds
and
sbb
pop
push
jge
inc
mov
xlat
cmp
xor
xor
mov
xor
leave
test
or
prefetch
mov
mov
cmp
in
cli
hlt
pop
mov
dec
nop
fistpl
imul
mov
sbb
loopne
dec
mov
fdivrp
add
clc
inc
in
add
or
push
mov
bnd
sbb
jno
pop
fisubl
arpl
add
mov
das
stc
pop
adc
mov
pop
cld
cmp
add
sbbb
mov
jge
rcrb
filds
cwtl
sbbb
fisttpll
movsl
in
stos
rcrl
jle
daa
out
mov
and
add
mov
inc
xor
std
cltd
mov
into
imull
push
mov
sti
sarb
push
mov
sarb
pusha
sub
jecxz
bound
int
gs
ss
jnp
ds
xchg
cmpsl
inc
mov
popa
pop
push
loope
xchg
pop
push
cmpsb
sub
push
fstpl
es
jmp
fistpll
mov
inc
inc
mov
cmp
mov
push
sahf
ret
pop
mov
adc
mov
call
adc
or
maskmovq
mull
adc
fwait
pusha
cli
iret
fdiv
pop
jle
lock
push
lods
sbb
sub
stos
sub
and
lret
inc
into
sbb
cs
movsb
jl
cmpsb
xor
fisubs
xor
cmp
dec
adc
inc
stos
orl
sbb
inc
add
movsl
sub
push
fwait
outsl
fisubs
xchg
int
mov
sub
orb
aam
decb
inc
push
lods
loope
push
stos
jmp
and
mov
loop
push
jbe
xor
mov
jno
fisttps
xchg
loope
inc
lock
or
mov
cmp
xchg
mov
enter
mov
jle
push
push
xchg
ljmp
xchg
push
lods
mov
and
shlb
imul
cli
push
jecxz
mov
sbb
jae
hlt
imul
and
pop
aaa
int
je
pushf
cmpsl
mov
mov
mov
fiadds
insl
adc
cmp
mov
cmp
sbb
ret
pop
dec
adc
in
shll
inc
aam
and
int
cmp
call
add
popl
in
test
push
add
cmp
negl
mull
orl
ss
loope
jo
rclb
test
loopne
mov
xchg
nop
cltd
dec
xchg
loopne
aam
sti
xchg
test
xorl
add
xor
aas
clc
jnp
add
subl
sbb
or
scas
hlt
lods
xchg
cli
pop
out
push
mov
test
push
fisttpll
mov
lret
sarl
ret
ret
and
push
cmp
stc
xor
scas
inc
lods
fcoms
imul
sub
mov
ss
mov
jg
xorl
pop
mov
test
sbb
sub
cmp
jge
js
lahf
cwtl
fucomp
into
jp
adc
mov
add
push
mov
cmpsl
adc
daa
add
xor
in
and
add
or
jo
test
call
out
jnp
adc
cli
lcall
arpl
fwait
sbb
rcrb
mov
aaa
aas
or
rorb
in
insl
roll
jne
mov
xchg
test
test
mov
push
inc
xchg
out
or
call
in
push
adc
int
mov
pop
fcoml
dec
or
in
adc
cmp
mov
push
mov
jle
sub
lods
test
push
add
loope
pop
fimuls
jle
mov
hlt
xchg
jb
adc
popa
mov
cwtl
iret
inc
cmp
jno
in
xchg
push
or
and
aaa
aas
pop
pop
aaa
lea
movsl
leave
add
and
fstpt
jne
into
jg
or
adc
ds
sbb
xchg
nop
cmp
or
loope
frstor
adc
es
xor
inc
lahf
subb
dec
adc
lcall
int3
mov
cltd
add
add
loope
inc
pop
in
or
out
and
xor
ret
dec
cwtl
push
frstor
dec
sub
xchg
xchg
mov
sub
add
out
pop
jno
and
xor
push
mov
push
les
aam
les
mov
sar
bound
ljmp
sub
into
roll
scas
test
test
int3
push
sbb
sub
pop
push
daa
push
cmpsb
and
adc
adc
mov
mov
int3
enter
sub
mov
lods
cmp
sbbl
popa
into
pushf
push
sti
cmp
pop
ss
insb
xchg
cmp
sbb
inc
mov
add
fisubrs
mov
jns
orl
out
pop
jg
pop
std
or
or
and
movsb
dec
xchg
inc
sti
mov
or
adc
sbb
js
push
push
test
inc
push
ja
cli
and
aas
arpl
cld
cs
sar
movsb
xor
in
add
fiaddl
jae
or
cltd
addl
xchg
sbb
add
xlat
fsubr
clc
shrl
leave
mov
pop
stos
lea
sub
rcrl
push
popf
mov
lock
mov
xchg
popw
push
push
xchg
mov
das
mov
mov
xchg
daa
push
pop
movsl
call
jno
dec
dec
fsts
or
and
inc
xchg
cmpsb
cs
stos
arpl
outsb
add
out
insb
insl
fisubs
xchg
scas
dec
jae
ficomps
pop
clc
jnp
mov
addl
les
mov
add
push
jg
pushf
sub
inc
mov
idivb
jno
adc
cld
out
popa
add
xor
test
jbe
data16
xor
fiaddl
aam
jne
or
js
cmp
js
inc
stos
xor
repz
mov
push
xchg
ror
mov
je
sbb
scas
jg
push
test
lret
shl
push
dec
out
fildll
mov
loope
hlt
push
lock
daa
cwtl
mov
sahf
xchg
cmpsb
cmp
in
shrb
push
mov
sub
jmp
dec
movsb
mov
hlt
sub
stos
or
fldenvs
or
xchg
xchg
xchg
cmp
ud0
xchg
sub
ret
or
push
dec
icebp
ret
dec
fnstenv
call
mov
lods
sub
jae
ret
sbb
sub
sbb
pop
or
jg
dec
addr16
sbb
out
pop
sub
aas
ror
pop
mov
xor
inc
out
fldenv
push
cmp
inc
pop
push
shll
xor
push
mov
fisubs
sarb
sub
roll
mov
repz
xchg
inc
dec
fcoml
cmp
adc
pop
pop
mov
insb
js
push
roll
cmp
push
daa
cmp
push
or
push
addr16
dec
cmpsl
mov
add
and
dec
xor
mov
pop
sub
pop
imulb
hlt
loop
jmp
das
sub
and
popf
insb
xor
adc
and
cmp
test
jne
mov
jle
sub
push
sbb
mov
pop
xchg
push
jbe
mov
or
mov
js
nop
xor
jge
movsl
shrb
mov
iret
lret
ds
in
dec
outsl
xchg
mov
xor
outsb
jo
cs
insb
lock
xchg
inc
xchg
add
jo
pop
mov
cmc
orl
mov
ret
lea
push
into
inc
neg
xor
into
push
call
outsb
add
add
cmpsl
sti
outsl
fsubr
inc
sbb
sub
sti
push
dec
push
mov
int
out
loope
mov
shrl
adc
mov
push
insl
pop
dec
and
cmpsb
shrb
or
add
pushf
push
mov
scas
xchg
mov
test
pop
xor
jae
inc
sub
int3
inc
shll
insl
push
push
mov
daa
sub
dec
cld
jg
push
sub
fnstcw
shll
lahf
bound
jns
or
push
or
lcall
xchg
mov
cs
sub
add
loope
int
push
xor
inc
mov
dec
add
lods
enter
dec
flds
inc
adc
xchg
mov
dec
xchg
mov
jp
repnz
mov
movsb
mov
leave
add
les
push
ficoms
cli
jecxz
test
jbe
push
pop
pop
push
icebp
mov
in
cwtl
cltd
call
push
pop
into
mov
addr16
push
repz
xchg
int3
fnstsw
push
gs
mov
mov
xor
fists
sbb
mov
adc
mov
fdivs
mov
shl
mov
jns
inc
or
push
and
outsb
out
pop
and
nop
aad
jge
iret
popf
push
xor
xor
xchg
les
cmp
add
outsb
jb
pushf
dec
stos
rol
nop
cld
in
into
jbe
lods
jns
call
xchg
into
in
dec
fistl
xchg
and
lahf
rolb
xor
out
pop
dec
push
pop
add
cs
leave
je
mov
xchg
cltd
mov
or
mov
dec
sahf
mov
and
push
fsubrs
out
jno
rcrb
mov
sbb
mov
jbe
push
mov
mov
sbb
test
lds
fimull
faddl
lret
push
icebp
nop
mov
mov
cmp
mov
scas
xor
jecxz
jns
add
pop
add
fcoml
inc
cmpsl
add
sub
add
jp
arpl
shlb
stc
ljmp
xchg
sti
mov
pop
add
jge
aad
gs
adc
xlat
lds
dec
pop
cmp
scas
and
xchg
jmp
dec
push
add
push
add
xor
lock
mov
xor
dec
orl
sub
jmp
imul
stc
jge
pop
inc
lock
push
insl
ret
jns
push
dec
pop
push
shll
stos
xchg
adc
std
mov
loopne
jp
sub
sbb
mov
adc
dec
inc
dec
jecxz
rcl
sub
jecxz
test
push
inc
pop
pop
je
rcll
aad
mov
xchg
jl
fsts
pop
fcompl
movsb
push
scas
jl
sub
sub
push
cmp
fists
dec
daa
dec
adc
push
add
ds
jg
push
cmp
cmpsl
push
inc
sahf
or
notl
enter
faddl
jns
hlt
inc
dec
or
cld
adc
mov
inc
aam
mov
lret
cli
inc
or
dec
out
push
mov
lret
pushf
int3
cmc
ds
cmp
jg
xor
popf
in
sbb
out
lock
push
or
jl
cmp
lcall
or
loope
jo
addr16
hlt
pshufw
cs
into
xchg
les
or
lds
adc
jne
mov
sarb
mov
sub
test
arpl
into
insl
movb
repz
xchg
dec
icebp
addr16
daa
leave
out
push
and
sbb
ficomps
mov
cwtl
jb
jae
sub
outsl
xchg
in
lods
test
mov
cmp
dec
inc
fimuls
dec
push
imul
clc
sub
xchg
push
mov
jno
cli
sbb
add
repnz
cld
cmpsb
adc
sub
push
addr16
push
xchg
test
scas
adc
pop
and
mov
fcmovnb
rclb
int
fimuls
leave
adc
pop
outsl
inc
push
mov
insb
pop
and
sub
shr
shl
push
xchg
or
or
add
cmp
mov
pushf
xorb
and
les
mov
enter
test
xor
sub
or
fwait
scas
jle
pop
jecxz
pop
mov
mov
fsubrs
adc
dec
jge
stc
xlat
lcall
sub
xchg
xchg
mov
xchg
sbb
imul
add
sbb
mov
testl
inc
lock
add
stos
and
xchg
js
pop
mov
pop
daa
mov
mov
pop
mov
repz
jbe
loop
or
mov
mov
jle
cmp
mov
les
daa
call
scas
outsb
mov
pop
mov
xchg
mul
and
insb
mov
lods
sbb
push
jo
pop
push
mov
xchg
jmp
movsl
and
dec
sub
cmp
orb
lods
subl
es
cmp
scas
ret
inc
out
inc
sbb
or
jne
mov
into
sbb
lds
movsb
test
enter
test
pop
fsubs
lahf
cltd
jg
jae
jo
xchg
sahf
or
jp
mov
in
sbb
and
leave
cmp
sarb
icebp
in
mov
lahf
lock
idivb
mov
andb
or
mov
mov
jbe
mov
mov
rcll
cmpsb
repnz
sub
test
js
xor
adc
mov
sub
data16
es
std
xchg
pushf
mov
xlat
and
or
or
sbb
cmpsl
je
das
add
push
fwait
imulb
and
push
pop
add
sbb
stos
pop
push
add
or
int
jns
or
push
push
mov
push
push
cmc
aad
in
push
mov
and
add
push
xchg
out
pop
into
xchg
xor
iret
out
scas
fldt
add
and
sub
xlat
sbb
or
fiadds
inc
or
adc
adc
stc
bound
pop
mov
sarl
data16
sbb
inc
fsubr
lock
add
mov
fmull
cld
test
cmp
jle
cmpl
xor
sub
ficoml
outsl
xor
pusha
push
mov
stc
hlt
gs
ret
mov
push
fists
setbe
dec
testl
popa
cmp
leave
sbbb
xor
cmp
addr16
dec
jge
pop
lret
sbb
rorl
daa
xchg
mov
sbb
into
lret
and
aaa
test
mov
mov
push
pop
lds
jno
mov
push
adc
aaa
push
push
imul
mov
icebp
xor
leave
test
adc
pop
mov
iret
loope
sbbl
jge
hlt
popf
aam
mov
callw
test
lret
cs
adc
push
fcompl
insl
pusha
pop
mov
js
push
add
cmp
aam
rclb
mov
pushf
lods
aaa
fucomip
shlb
std
add
cmc
or
sub
out
test
push
sbb
mov
pop
mov
fstpl
and
out
dec
xchg
xchg
insb
fdivrl
sub
mov
mov
push
lock
out
cmpsl
or
insb
mov
fwait
mov
gs
insl
push
push
popf
pop
jle
mov
insl
or
push
jne
sbb
repnz
outsl
ror
js
lcall
mov
divb
lea
mov
int
or
adc
cwtl
cmp
push
jl
jg
xchg
lods
or
stc
mov
shll
bound
insb
leave
loopne
lds
sub
inc
dec
enter
add
fs
je
test
es
fidivrl
xor
jnp
leave
outsl
lret
gs
push
jle
mov
enter
mov
jno
mov
imul
leave
fmul
adc
or
mul
loop
jns
and
cmp
out
fidivl
fcompl
orb
and
test
shrb
pop
out
ret
jmp
out
ds
xchg
iret
dec
call
adc
fsubrl
out
push
jae
mov
fldl
xchg
cmp
dec
or
dec
ds
dec
xchg
aad
stos
jg
xor
xchg
cmp
inc
es
jnp
les
mov
jae
nop
add
xchg
push
cmpsb
mov
xchg
fpatan
mov
andl
jmp
repz
mov
jb
orl
ss
outsl
into
scas
pop
dec
loopne
sub
data16
leave
insl
add
in
jnp
fidivrs
roll
or
out
xorl
inc
or
xor
inc
cmp
add
and
cmp
pop
es
lods
movsb
cltd
mov
stos
add
fcoml
jp
xchg
in
pushf
mov
in
xchg
lret
inc
ret
pop
mov
dec
aad
in
adc
xor
je
daa
mov
jo
fmull
int3
outsl
adc
add
mov
fs
out
hlt
fstl
sbb
push
cmp
ds
mov
pop
mov
jne
mov
sub
jo
mov
xchg
and
cld
jo
adc
cmpsl
and
adc
es
out
out
xchg
aaa
and
repz
inc
sub
sub
mov
dec
jmp
int
xchg
jnp
ret
shrb
pushf
sub
stos
xor
or
xchg
dec
and
mov
movsl
push
stc
xchg
sub
bound
cmp
pop
test
or
add
adc
sub
adc
pop
cmp
xchg
or
push
add
dec
cmc
lcall
jp
xchg
pop
je
or
dec
mov
sub
xor
jg
xchg
xchg
mov
dec
fdivr
adc
inc
cmp
mov
xchg
stos
aas
jno
mov
mov
jmp
mov
arpl
or
pop
dec
test
fistl
push
xor
pusha
mov
pop
das
sbbl
out
push
in
mov
cmp
sti
popa
ja
jne
sbb
xor
pushf
lock
rorb
repnz
jl
dec
jmp
xor
shrl
fsubs
or
push
enter
or
sbb
push
pop
pop
ja
cmp
dec
xchg
mull
test
ds
js
inc
cmp
mov
in
ret
push
add
das
pusha
adcb
outsb
mov
cli
adc
cmp
aas
mov
adc
adc
aas
mov
cld
pop
ret
mov
mov
mov
ds
iret
jl
dec
sub
sbb
cmp
add
orb
or
sbb
rcrl
lods
sbb
xchg
xlat
ret
fnstsw
push
hlt
idiv
fdivl
push
mov
test
or
lock
lahf
sub
repnz
mov
push
xor
aad
cmp
leave
enter
mov
push
pop
mov
stos
repnz
aam
sbb
mov
and
subl
insl
imul
int
pop
lea
cwtl
or
lods
or
gs
arpl
pop
pop
shl
loop
pop
mov
sub
xchg
shlb
sbbb
xor
sbb
cmpsl
jmp
ss
pop
mov
mov
loope
mov
mov
loop
sar
lods
hlt
gs
push
adc
pop
imul
mov
outsb
or
arpl
add
addr16
sahf
push
mov
pop
sbb
dec
dec
in
je
inc
sbb
dec
pop
lret
sti
add
jge
mov
iret
je
repz
fldenv
mov
cmpsb
out
loopne
mov
outsb
lods
arpl
icebp
inc
push
nop
fsub
mov
mov
jno
movsb
icebp
pop
dec
sbb
mov
jp
jo
xor
adc
adc
pop
xchg
mov
pop
mov
mov
push
mov
je
dec
dec
or
cs
jge
shrl
rclb
cmpsb
ds
adc
pusha
cmpsb
fdivp
sub
xor
shrl
sub
es
mov
dec
clc
imul
jb
jno
xorl
scas
fnsave
xchg
cmp
js
add
das
sbb
jp
mov
repz
mov
lock
or
mov
iret
sbb
and
es
cld
loop
pop
in
adcl
inc
cmpsl
pop
mov
ret
int
ret
jno
pop
sarb
jae
jae
test
das
or
jns
popa
push
jae
aas
xchg
jle
les
inc
aad
push
insb
mov
fists
adc
or
jae
js
jmp
mov
rcrb
adc
lcall
aas
and
dec
icebp
sti
mov
sbb
aas
inc
mov
js
adc
xchg
mov
rolb
pushf
push
in
pop
pusha
inc
loope
fdivp
mov
scas
mov
mov
inc
add
mov
adc
mov
std
das
mov
mov
add
fnstenv
xchg
movsl
adc
in
js
loope
sti
into
fidivs
push
sub
call
dec
jl
push
jecxz
movsl
lahf
push
push
mov
iret
cmp
aad
js
mov
mov
in
ror
xchg
pop
push
ret
add
imul
shl
or
repz
std
cmpsl
arpl
xor
flds
xchg
dec
sbb
fwait
jne
add
pop
mov
cmp
bswap
mov
loop
mov
je
jl
inc
aad
mov
mov
lret
mov
inc
jo
jmp
sub
in
jmp
xchg
dec
cmpsl
fwait
test
into
cmp
cmp
ss
add
std
int3
adc
in
out
jns
mov
xlat
insl
push
fiaddl
adc
lahf
mov
inc
inc
test
sbb
cli
cmp
and
stos
add
int3
ds
cmpsl
sbb
mov
cli
push
es
cmp
ss
adc
xchg
push
pop
push
xor
dec
dec
call
ret
stos
int
movsl
jo
flds
outsb
jge
add
call
and
lcall
mov
fimuls
xor
push
andb
mov
dec
push
or
sbbb
idivb
loope
pop
push
adc
cmp
add
sub
out
callw
aad
js
inc
jae,pn
inc
mov
mov
aad
pop
dec
inc
cmp
add
xchg
inc
orb
imul
arpl
stos
fcompl
arpl
push
adc
std
jle
addr16
pop
scas
mov
nop
test
rolb
cmp
adc
aaa
jae
dec
jge
and
sti
or
leave
jns
out
test
push
mov
decl
ds
popf
push
stos
and
push
sub
int
inc
cmp
sbb
pop
test
or
pop
out
rcl
dec
outsl
pop
cli
xchg
sarl
pop
bound
mov
popf
movsb
out
and
dec
jle
add
roll
repz
mov
inc
push
call
pop
jmp
int3
popf
pop
inc
jns
cmp
fldcw
pop
xor
sub
aas
xor
xor
in
or
mov
mov
ljmp
adc
out
mov
and
insb
out
pushf
sbb
jmp
cmp
pop
pop
pop
scas
lea
outsl
xor
lret
or
sbb
insb
decb
pop
mov
jns
xor
int
adc
mov
inc
sbb
mov
bound
into
stc
dec
mov
mov
pop
xchg
fs
and
je
popa
dec
test
push
in
push
daa
cmp
sbb
push
push
mov
pusha
or
insb
push
cwtl
jmp
or
in
xchg
xchg
aas
xor
pop
in
sub
inc
jmp
movsl
js
cmc
mov
and
cmp
dec
movb
ss
mov
xchg
mov
iret
pop
lea
sub
int3
pushf
pop
shlb
jmp
repnz
dec
stos
lods
sbb
pop
insb
mov
push
imul
pop
fstpt
ljmp
mov
jg
mov
cmp
addr16
cmc
push
dec
mov
orb
add
bound
and
fs
popf
jne
push
aad
push
add
icebp
mov
divb
lret
inc
das
inc
loope,pn
mov
or
bound
mov
adc
mov
mov
push
icebp
adc
ficomps
jmp
cld
pop
cmpl
in
aad
lea
iret
in
and
int3
or
bound
mov
pop
decl
bound
sahf
repz
dec
xchg
inc
xchg
sahf
lahf
inc
rdmsr
and
mov
dec
cli
mov
jl
push
sti
jne
shl
inc
outsb
lahf
cmp
xor
lret
xor
bt
nop
outsl
mov
arpl
dec
fidivs
dec
ret
mov
ja
dec
push
loop
dec
adc
jbe
lods
mov
or
xchg
shl
mov
xor
xor
and
push
dec
das
mov
sbb
in
sbb
inc
pop
pop
mov
mov
xchg
loopne
test
divb
das
out
outsb
mov
jl
add
fwait
sbb
cld
mov
shrb
or
add
mov
inc
outsb
xchg
or
add
les
cmc
pop
fmuls
push
gs
cmp
popa
enter
push
mov
jle
and
add
mov
out
jge
adc
pop
xor
xchg
push
stos
dec
xorl
or
mov
mov
mov
push
jno
stc
dec
cmp
or
pmulhw
fadds
bound
lds
mov
fldln2
mov
add
outsb
inc
fisttpll
adc
inc
in
inc
inc
mov
js
out
ja
inc
cmpsl
sbb
js
inc
adc
xor
stc
mov
xchg
sbb
add
iret
call
cmpsl
push
jl
cmp
stc
cmpsb
jecxz
push
insl
inc
jo
popa
cmpsb
lahf
lret
dec
inc
sub
shr
loop
cmpl
jge
xchg
arpl
ja
insl
mov
popa
call
inc
test
mov
sbb
push
dec
fsubr
icebp
aaa
das
adc
inc
sbb
clc
sub
xchg
mov
dec
pop
mov
xchg
jl
mov
in
andl
cli
mov
lret
or
mov
ljmp
add
int3
or
lret
jae
lock
lods
scas
xchg
dec
cld
cmp
jmp
sbb
sbb
jo
or
adc
call
fidivrs
pop
stos
pop
arpl
out
inc
adc
xchg
push
lret
daa
fmuls
daa
fcoms
add
loopne,pt
xchg
xchg
add
repnz
mov
stos
psubq
xor
add
fsubrl
adc
xchg
mov
test
sbb
cmp
mov
fildl
ds
mov
jp
fdivl
jo
dec
mov
in
lcall
out
insb
jo
ret
ret
xchg
das
push
pop
mov
scas
fnstsw
jno
aas
jle
int3
test
pop
lods
dec
sub
xor
or
shlb
xor
sub
hlt
loopne
cltd
mov
lds
mov
sub
rcl
and
mov
leave
repnz
mov
sub
xchg
inc
dec
clc
ds
jmp
push
loope
add
push
addl
popf
jae
mov
mov
push
jge
push
jl
repnz
add
or
pusha
jg
xor
and
in
lock
mov
bnd
mov
inc
xchg
js
stos
sbb
push
in
cmp
adc
scas
push
mov
adc
xchg
or
or
cli
pop
mov
inc
dec
out
and
lods
pop
xor
mov
inc
aaa
icebp
dec
in
mov
pop
test
adcl
cmp
jg
pushf
clc
jl
test
pop
out
cmpsb
ljmp
pop
mov
js
clc
test
pop
pop
inc
mov
in
iret
mov
push
lea
cld
mov
insb
sarl
stc
outsl
mov
sub
xchg
dec
and
lds
mov
repz
lods
aas
repz
dec
pop
cmpsb
mov
add
jp
dec
ucomiss
cmpsb
and
jp
in
fwait
out
cmp
in
add
outsb
fs
jo
shl
fsub
mov
shl
inc
ret
imul
out
push
xor
xchg
mov
rclb
mov
dec
pushf
sub
sbb
jle
aaa
add
or
cmp
and
cmp
out
lea
into
dec
fstpt
shlb
push
xchg
es
xchg
hlt
imulb
inc
push
inc
cwtl
lahf
sbb
push
pop
bound
lret
pop
push
shrb
orl
and
jg
out
xchg
pusha
mov
mov
aaa
mov
ret
jge
in
jno
xor
push
daa
aam
xor
push
lea
adc
adc
ja
fldenv
test
add
pusha
push
lahf
mov
sbb
xor
lds
fbld
call
mov
mov
cmp
xchg
bound
jno
fimull
jb
ja
push
test
and
sbb
sbb
or
dec
sbb
and
popa
frstor
xchg
mov
repnz
add
xor
add
dec
je
pushf
mov
jmp
inc
stos
mov
xchg
cmp
jp
lods
out
xchg
icebp
lds
cmp
or
cld
cmc
fs
shr
addr16
jno
mov
mov
sub
xchg
pop
gs
js
sub
mov
sbb
xchg
mov
sub
repnz
mov
nop
movsl
add
loopne
lds
enter
xchg
cmp
fisubl
or
jnp
fimull
movsl
enter
mov
imul
fucomp
shrl
sub
loopne
adc
loopne
dec
popf
dec
mov
jno
pop
rorl
lds
sub
lahf
dec
stc
leave
push
scas
ljmp
xor
iret
cld
lret
jmp
mov
jg
cmp
jnp
sub
push
int3
pop
cmpsb
sti
lds
pop
out
ljmp
cli
cltd
add
data16
inc
test
leave
je
and
xor
popf
mov
dec
insb
aam
inc
inc
xchg
mov
mov
pop
cmp
push
sahf
addl
mov
push
push
and
or
add
pop
cwtl
enter
fisubrl
push
sub
cmp
jno
jb
mov
push
lret
jns
es
sbb
fwait
call
scas
jne
or
xchg
push
xor
push
aaa
pop
mov
cmp
insb
outsl
jmp
and
xor
lcall
inc
xor
xor
cli
cmp
add
mov
mov
mov
in
rcrb
push
arpl
pop
pop
xor
fwait
or
add
sub
jno
cmc
push
mov
ds
fnop
xchg
loope
jno
iret
cli
pop
mov
mov
xor
movsl
xchg
mov
push
and
repnz
add
sbb
jns
sar
pop
pop
cs
jae
push
xorl
adc
dec
loopne
sbb
loope
scas
jp
and
lods
jae
sbb
popf
and
jae
repz
loope
in
loopne
sub
dec
test
pop
lods
fwait
dec
cmp
sub
dec
push
gs
xchg
testb
lret
pop
adc
push
add
loopne
ror
std
ret
push
in
add
ficoml
or
ds
dec
sbb
pushf
in
ja
popa
outsb
sti
int
stc
cwtl
fbld
and
mov
xor
xor
inc
mov
scas
aad
movsb
jo
fs
inc
lret
sub
inc
nop
lock
test
jns
push
stos
rclb
mov
cmp
cmc
xor
int3
repz
movsb
pusha
jecxz
sbb
stc
fisubrs
dec
ds
stos
icebp
jnp
cmp
neg
add
jl
jp
loope
pop
jl
and
insl
cmp
mov
rorl
data16
fnstcw
jnp
cmpsb
jae
inc
arpl
mov
push
das
aaa
out
andb
push
sub
fistpll
cli
dec
cmp
push
cmpsl
ret
cmp
test
fdivr
fbld
jne
sbb
mov
fwait
stos
sub
mov
aas
cmc
mov
xchg
inc
iret
xchg
pushf
ljmp
nop
jae
sub
inc
jecxz
hlt
cmp
cld
cmpsl
jnp
fs
stos
mov
gs
cmp
ljmp
add
out
fs
loopne
arpl
inc
test
jp
add
add
repnz
ja
mov
cmpsb
and
inc
mov
fidivrs
rolb
sbb
cmp
xor
fbstp
push
jmp
fdivrs
mov
sub
int
outsl
dec
gs
popa
and
and
sbb
xor
call
xchg
scas
orb
movsl
sbb
mov
mov
mov
xlat
mov
aas
pop
divl
gs
lea
pop
xchg
test
ljmp
loopne
sahf
stos
sub
shrl
push
push
imul
sub
jge
push
xchg
xchg
lock
jecxz
cmp
test
sbb
mov
mov
add
inc
and
int
fwait
aas
sbb
push
xlat
inc
lret
pop
lret
stc
xchg
mov
lret
movsl
in
stos
decb
outsb
lret
in
cwtl
lret
cwtl
sub
xchg
dec
in
sub
or
sti
leave
jge
lea
adc
dec
inc
xchg
ret
mov
pop
or
dec
xchg
fimuls
lea
iret
cmp
or
lcall
dec
dec
or
xchg
shlb
xor
ja
pusha
icebp
ljmp
mov
js
ret
add
lretw
inc
push
and
int3
addr16
call
sub
mov
cmp
ss
jmp
mov
pop
xchg
stos
stos
sub
xchg
jmp
jns
test
lods
jg
mov
jae
xchg
lahf
subb
dec
jbe
pop
adc
addr16
es
sub
mov
pop
or
test
xor
cmpsl
iret
sub
push
dec
mov
jae
cltd
jo
lahf
xchg
call
cmc
outsl
lds
inc
or
in
fs
or
inc
aam
cmp
pop
mov
cwtl
jl
or
cltd
xor
sub
aam
dec
mov
mov
xchg
adc
hlt
jle
popf
out
jo
sbb
push
push
and
mov
hlt
jecxz
cld
mov
das
push
mulb
or
and
cld
jns
xchg
dec
or
gs
xlat
adc
sahf
jbe
hlt
in
jbe
pop
stc
xor
xchg
rcr
cltd
dec
ljmp
jg
pop
filds
and
add
cli
sub
mov
inc
mov
mov
fistps
mov
jb
xchg
movsl
jo
mov
cmp
in
dec
xchg
jp
loop
test
pop
mov
cwtl
mov
jecxz
fisubs
pop
addr16
loop
pushl
mov
dec
inc
int3
shrl
jnp
mov
loop
cmp
insl
movsb
sub
mov
ljmp
movsb
jbe
jns
rclb
popa
xchg
sub
movsb
mov
mov
dec
jg
rcl
jmp
lret
outsl
push
xor
stc
movsl
sbb
xchg
mov
mov
leave
xchg
test
cmpsl
add
inc
or
out
lods
popa
lret
lock
shrl
or
insb
cmp
mov
inc
fstpl
mov
mov
mov
aaa
pop
mov
aas
mov
ret
xor
icebp
push
lods
push
ret
jnp
sub
test
and
loop
sub
dec
inc
cmc
push
cli
movsl
adc
shll
ds
fs
mov
jle
inc
cmp
push
bound
movsb
cli
jle
std
pop
mov
pop
std
dec
jl
push
insl
inc
mov
je
xor
mov
adc
mov
push
mov
sti
mov
mov
cli
bound
cmp
cmpsl
cmc
mov
lock
movl
cmp
xor
aaa
adc
push
xchg
mov
add
add
mov
xchg
mov
pop
es
push
das
shl
sbb
rclb
ljmp
xchg
leave
dec
test
lret
mov
fbld
mov
lods
pushf
cmc
out
jb
mov
or
adc
rorl
filds
fdivs
fdivl
push
inc
jno
scas
in
ja
out
sbb
nop
out
lgs
dec
pushf
daa
out
pop
daa
repz
xor
cmp
int3
aaa
andb
enter
add
adc
xchg
sub
dec
je
into
stos
mov
cs
cwtl
insb
xor
jmp
out
mov
push
call
sub
xor
outsl
push
divb
mov
ss
lea
mov
rcrb
pop
xlat
push
push
dec
add
fwait
ja
addr16
inc
inc
out
add
sub
nop
mov
push
repz
std
jne
mov
mov
incb
sbb
push
nop
mov
and
icebp
test
inc
orb
jp
push
aad
in
sbb
or
sub
or
push
movsb
out
insb
call
xchg
lret
xchg
xorb
push
sub
sbb
mov
or
pop
bound
push
ss
test
test
jmp
imul
insb
adc
mov
add
out
cmpsl
ja
jg
popa
stos
pop
mov
pop
aaa
jo
pop
and
xchg
out
xor
repz
mov
gs
jns
and
sti
sbb
mov
in
mov
fwait
xor
lret
imul
ret
mov
jle,pt
xchg
mov
arpl
pop
mov
cmp
hlt
and
cmp
inc
cmc
loope
mov
sbb
popf
lcall
jp,pt
gs
xor
sub
xchg
leave
in
jo
enter
lret
aam
frstor
and
push
es
adc
pop
add
jecxz
ljmp
cmpsl
inc
mov
insb
lods
pusha
xchg
jge
dec
xchg
jp
fcomps
mov
push
adc
ret
xchg
test
add
or
cmpsb
push
xchg
adc
xchg
int3
notl
xchg
sbb
add
pushf
arpl
mov
and
mov
cmp
gs
mov
scas
mov
cmp
roll
cwtl
out
pop
cmp
xchg
mov
pop
jge
enter
sbb
push
mov
mov
out
or
mov
jo
xor
sbb
rorb
sahf
lock
out
pop
jo
push
je
mov
mov
imul
rcll
xchg
scas
fwait
lret
orl
lahf
push
scas
or
inc
or
push
push
pop
push
mov
jp
inc
jns
stc
cld
dec
sti
out
enter
and
jecxz
adc
inc
shlb
jp
je
jl
popf
jae
out
mov
push
loop
cwtl
in
inc
push
dec
andl
sahf
in
mov
ss
lds
das
cs
in
test
lahf
push
dec
sti
ljmp
push
jl
lret
ljmp
stos
pop
jo
or
ja
mov
jg
or
xchg
pop
cltd
popa
jmp
sbb
cmp
neg
orl
pop
and
add
hlt
lods
inc
or
cmp
mov
jp
jae
ret
ss
jg
mov
jge
and
xchg
sub
sub
loopne
jne
bnd
pop
aam
pushf
ret
shll
arpl
loope
adc
outsl
pop
inc
xchg
mov
dec
daa
stos
pop
inc
push
jp
arpl
lret
cmpsb
jno
data16
lea
jl
iret
adc
pop
and
sub
cwtl
push
cmc
sti
pusha
out
ss
fcom
xor
aaa
insb
outsb
mov
or
jp
aas
mov
xor
cli
in
sub
mov
cmp
and
push
add
je
xchg
pusha
pop
loope
pop
or
push
ss
xchg
sbb
stc
mov
loop
aas
loopne
or
jnp,pt
xchg
mul
or
mov
xor
outsb
pop
nop
shl
jle
scas
mov
sbb
insb
pop
mov
xor
inc
outsb
xor
and
jge
inc
shll
shll
outsl
mov
mov
repnz
inc
xlat
cmp
mov
or
inc
push
mov
pop
pop
sbbl
das
int
sub
int3
adc
and
dec
es
inc
fldenv
mov
data16
outsb
inc
scas
xchg
sub
shrb
hlt
or
dec
jae
leave
xor
aam
repnz
lcall
jne
orb
js
ja
aaa
inc
pop
sub
sub
xor
insl
jne
imul
lcall
nop
pop
inc
ss
mov
mov
xchg
mov
cmp
cmpsb
mov
rcrb
inc
test
fisubl
sbb
lock
inc
push
mov
jae
sti
fidivrl
sbb
push
lret
fisubrl
inc
pop
enter
or
rclb
add
sbbb
cli
dec
inc
sbb
dec
pusha
lldt
lret
imul
nop
or
cli
push
jl
out
lret
pop
aad
dec
dec
fnsave
jg
sub
in
jno
ljmp
sbb
data16
pop
cmpsb
and
mov
xchg
out
out
xchg
mov
mov
pop
jns
jmp
add
movb
aad
pop
pop
rcr
loop,pt
ret
in
cmpsl
xchg
or
nop
rclb
mov
lcall
push
pop
aas
dec
jne
in
shr
mov
cltd
dec
xor
adc
xchg
dec
lcall
lods
gs
mov
repz
rcr
int3
add
xchg
inc
cs
in
lret
or
in
cmpsb
inc
inc
testl
or
jne
push
mov
pop
xor
or
xlat
imul
cltd
sbb
dec
mov
and
imul
adc
fwait
movsb
fstpl
lret
cmp
pop
adc
rol
jp
jne
int
pop
lea
aam
andl
jne
xor
mov
enter
in
mov
jne
sbb
imul
push
in
bound
and
push
sbb
out
fs
popf
lss
inc
mov
mov
push
xor
mov
inc
scas
mov
addb
add
dec
pop
cmc
and
movsl
inc
jno
push
int3
in
xchg
es
push
xchg
pop
add
sub
inc
jb
cmc
int3
in
shlb
push
clc
cltd
nop
insl
dec
push
jle
xor
nop
insl
ss
xor
cmp
and
push
gs
xchg
mov
ret
lock
sahf
je
nop
jne
add
xchg
push
scas
js
fistpll
arpl
push
inc
or
les
sbb
sbb
and
arpl
dec
dec
or
push
rolb
dec
mov
and
and
cld
cmpsl
pop
pop
loopne
jle
inc
xchg
setno
mov
xor
imul
repz
cli
sub
imul
je
adc
inc
sti
scas
imul
cmp
hlt
sbb
jg
imul
jg
out
test
mov
sbb
and
scas
pop
sbb
pop
repz
fcompl
sub
inc
arpl
xchg
pop
mov
addr16
hlt
push
bound
jecxz
out
fidivs
jp
mov
mov
lret
dec
je
jmp
xchg
lret
sub
in
and
lea
mov
pushf
out
in
loope
out
push
ja
jns
mov
std
leave
jmp
frstor
pop
pop
outsl
orb
pop
xchg
mov
add
repz
jae
push
pop
call
insl
jge
ret
int3
xchg
jae
mov
xor
cmp
mov
mov
loop
imul
sti
rcrb
fisubs
and
or
jmp
xchg
int3
arpl
fstl
iret
das
sbb
and
arpl
sbbb
xor
pop
je
imul
lea
fstpt
xchg
and
fcomps
pop
cwtl
adc
mov
dec
in
pushf
lods
and
push
movsl
add
fists
jo
pop
sti
aaa
scas
push
push
mov
push
orl
push
mov
aaa
add
lahf
mov
push
lret
scas
or
not
idivb
sbb
stos
sahf
out
mov
mov
test
cmc
inc
xor
dec
int
pop
mov
test
int3
fbstp
sub
jb
sbb
mov
lods
ljmp
mov
sbb
test
adc
popa
adc
xchg
xchg
xchg
push
or
rolb
jg
xorl
mov
jno
inc
int
xchg
push
lds
gs
adc
fcmovb
fistl
mov
mov
std
cmp
in
aaa
stos
cmp
fistpll
add
mov
mov
stc
lcall
repnz
movsl
mov
mov
jne
mov
add
imul
jmp
mov
testl
cmc
xor
cltd
adc
loope
jae
sbb
insb
jle
cwtl
ljmp
mov
arpl
repnz
xchg
sub
fistpl
add
cmp
jnp
fidivrl
fadds
imul
push
xor
xor
or
pop
cwtl
xor
push
stc
dec
loopne
std
aad
pusha
in
pop
neg
pusha
lods
popa
jb
mov
ret
adc
pop
clc
adc
mov
sahf
inc
xchg
or
dec
lods
ss
in
inc
add
idivl
pushf
xchg
mov
incl
xor
sti
cmp
mov
mov
ret
cmp
shrb
pop
mov
ret
lods
xchg
cmp
cmp
vbroadcastsd
inc
out
fidivrs
and
mov
ds
loopne
cmp
sbb
and
mov
aad
add
sub
maxps
mov
push
jmp
push
xchg
or
in
cmc
jge
hlt
lods
fistl
decb
xchg
adc
addr16
data16
cmp
dec
push
add
adc
fidivs
or
sub
cmp
xor
cli
push
cwtl
int3
push
nop
mov
jle
sub
xchg
xor
and
pop
aas
fnsave
aad
fsubrs
mov
jecxz
dec
addr16
xchg
fmul
inc
xchg
mov
ucomiss
test
daa
scas
icebp
and
lods
pop
jae
cli
push
stos
push
jbe
mov
xchg
in
rorl
xchg
mov
xorb
aaa
jp
arpl
push
lret
js
jecxz
mov
xor
inc
adc
icebp
mov
jle
shrl
pusha
leave
add
int3
lahf
js
mov
pushf
jb
push
imull
add
ja
sbb
ss
into
idivb
sbb
xor
andb
push
and
push
push
jle
adc
loopne
jmp
and
mov
inc
jmp
push
mov
inc
gs
jp
aam
movsb
xor
mov
cld
adc
lret
daa
and
jo
stos
xor
mov
xor
dec
xorl
cs
add
dec
bnd
pop
cmpl
dec
jae
scas
rorb
and
popa
in
or
xchg
jns
stc
push
jo
jle
arpl
pop
test
enter
shll
pop
icebp
push
xor
add
insl
outsb
fnstcw
jbe
jnp
jne
cmp
mov
sub
add
jbe
loopne
cmpsl
jmp
cmc
imulb
and
sub
add
fwait
xorl
in
outsb
aaa
sub
out
and
int3
add
adc
push
fnsave
movsl
pusha
mov
jb
xor
incb
lcall
in
movsl
add
pop
cld
es
lret
stos
mov
xorl
ds
mov
stos
popa
mov
mov
lcall
mov
js
data16
mov
je
jp
int
lahf
sub
jnp
push
push
mov
xchg
adc
sub
adc
mov
mov
repnz
movsb
imul
push
rclb
enter
inc
lds
sahf
mov
cs
jg
xchg
es
pop
pop
jno
test
xchg
loope
ljmp
push
xchg
js
in
outsl
int
out
mov
mov
jmp
mov
sub
imul
cwtl
xchg
mov
or
aaa
out
pop
mov
lret
insb
insl
push
scas
popf
xchg
sbb
mov
stos
cmc
jae
push
pop
out
aad
jmp
sbb
sub
xor
rcl
push
jb
inc
pop
decl
arpl
xor
cmpsb
push
mov
jbe
dec
cltd
or
pop
push
outsb
out
das
jle
xchg
jns
mov
sbb
or
add
add
sbb
nop
push
jle
cwtl
dec
aam
cmp
lahf
xor
out
xor
jne
icebp
mov
adc
ljmp
adc
inc
pop
das
icebp
popf
xor
lods
xchg
nop
mov
sarl
sbb
cmp
jbe
mov
mov
repnz
aam
into
jecxz
imul
test
sbbl
fwait
cmp
shl
push
xchg
mov
insb
push
pop
fnsave
pop
mov
adc
dec
mov
or
push
add
jg
fistps
mov
mov
or
jo
cmp
mov
cmp
in
sub
xlat
jmp
icebp
add
xor
mov
clc
and
inc
popf
cmpsl
inc
cmpsl
cmp
sbb
dec
cs
iret
or
mov
jp
xor
jle
stc
stc
lods
clc
xchg
test
inc
cli
mov
xchg
mov
mov
mov
jge
hlt
test
xor
lret
sbb
scas
pop
repz
and
push
xchg
pop
cmp
push
xchg
adc
inc
xor
in
call
call
mov
lods
push
push
jnp
mov
push
add
movsb
pop
inc
sbbl
xchg
xor
and
jmp
sub
cwtl
mov
filds
sub
pop
or
movsb
test
jmp
imul
pop
out
rcrb
nop
insb
xor
ffreep
jne
aas
pop
mov
pop
sbb
lret
cmpsl
ljmp
pop
nop
loopne
test
mov
inc
data16
inc
add
mov
xor
mov
lea
adc
pushl
sub
sahf
ret
xor
sub
cltd
inc
je
mov
or
dec
jmp
imul
mov
mov
cs
popf
mov
into
popa
in
inc
int
mov
insb
pop
ds
call
inc
je
lock
test
mov
mov
dec
addr16
cli
fxch
or
mov
jg
cli
push
mov
mov
popa
pop
inc
xchg
clc
adc
nop
data16
mov
pop
lahf
cmp
cmp
out
incb
rclb
push
idivb
mov
cmp
pop
pop
aas
mov
out
mov
pop
test
mov
push
gs
lea
cmc
sbb
inc
cli
pop
lods
jbe
sub
nop
jno
sahf
xchg
pop
xorb
jmp
cmp
ss
leave
sbb
pop
jne
subb
pop
mov
jg
repnz
mov
hlt
test
mov
in
arpl
aam
roll
xlat
cmc
stc
and
cmp
ss
mov
call
ret
push
mov
stos
mov
in
jbe
das
add
inc
pop
pop
imul
jecxz
cwtl
fwait
mov
push
aaa
mov
xor
jns
xor
adc
mov
insl
xchg
add
in
ret
arpl
out
dec
jg
out
gs
fcoml
std
jg
xchg
jge
lea
sbb
rclb
shrl
and
mov
addr16
in
popf
push
pop
ficoms
stos
hlt
bound
cmpsl
xor
push
adc
pop
outsb
lds
in
inc
cmpsl
outsl
sub
out
or
xchg
push
pop
jg
sub
add
mov
in
pop
cmc
xchg
stc
sub
or
jge
and
cmp
int3
repnz
and
push
imul
pop
mov
push
sbb
jo
xchg
repnz
sbb
daa
outsl
ret
cs
mov
nop
aam
and
arpl
scas
xor
int
sub
mov
loopne
cmp
lds
jl
and
jp
sbb
std
ret
repnz
or
rclb
dec
xor
or
dec
movsb
imul
cld
inc
jnp
int3
stc
mov
insb
pop
xlat
test
push
mov
shlb
test
pop
xorl
add
mov
insb
decb
cwtl
repnz
scas
scas
in
decl
mov
lock
insb
dec
stos
mov
lcall
lea
in
mov
negb
inc
movsb
pop
mov
cltd
insl
xchg
pop
mov
push
sbb
in
dec
ficompl
mov
mov
xor
loopne
sub
movb
and
add
mov
call
nop
mov
and
and
mov
aaa
aaa
mov
out
out
push
aad
loopne
sahf
je
dec
sub
inc
in
xchg
push
mov
loop
pop
cmp
pop
add
fmul
adc
xor
daa
add
iret
iret
jg
movsb
pop
imul
cmpsl
mov
loope
adc
sub
ds
mov
add
lock
stos
ret
sbb
dec
fdivrl
in
out
and
adc
or
out
fisttpll
push
mov
add
inc
inc
out
cs
loopne
push
xchg
xlat
loopne
jg
popa
inc
out
xchg
and
negl
outsb
call
movsb
mov
sbb
aaa
mov
iret
mov
ret
mov
sar
daa
jae
adc
adc
and
xchg
fistpll
inc
shrl
sbb
xchg
ljmp
ljmp
jle
lret
xchg
and
in
or
mov
xchg
ja
sti
in
inc
and
mov
sbb
xor
or
jne
push
push
jl
stc
mov
lds
jl
int3
es
sub
add
call
mov
fdivrl
pop
or
in
es
loope
fstpt
push
fnstsw
lahf
mov
jbe
push
shll
int
icebp
mov
stc
movsl
in
mov
dec
xchg
jns
addr16
and
dec
sub
xchg
sub
scas
dec
in
loop
out
mov
mov
adc
fisttpl
std
jnp
push
xor
nop
mov
sub
in
push
sbb
push
sub
rorb
inc
add
ss
mov
xchg
push
lods
push
mov
xchg
nop
cpuid
sub
cmp
cmpsb
and
lret
subb
and
push
adc
lret
roll
outsb
jae
push
xchg
push
cli
push
cmp
ja
inc
pop
pop
mov
inc
aad
push
out
add
jle
into
add
mulps
fwait
cltd
repz
mov
loop
in
lock
xchg
mov
mov
push
dec
daa
and
add
movsb
xlat
dec
xor
subl
scas
in
push
sub
add
sbb
add
sbb
insl
and
out
adc
outsb
pushf
dec
sbb
mov
mov
xor
push
pop
scas
popa
sub
jge
out
inc
push
lcall
or
push
jne
push
push
mov
nop
mov
seta
mov
cmp
testb
mov
insl
mov
outsl
sbb
xor
jne
sub
pop
mov
data16
in
into
cli
test
xchg
mov
pop
mov
adc
stos
mov
in
add
lods
pop
lods
jmp
add
lcall
push
ds
je
push
jge
insb
mov
fsubrp
inc
jno
jb
cmp
fists
cld
stos
shll
in
rcrl
int3
out
jnp
leave
mov
std
pop
cmpl
insb
lds
sbb
cmp
imul
jecxz
sub
imul
jmp
fs
push
cmp
jp
add
fwait
insb
loop
add
loope
adc
cmp
pusha
dec
mov
lret
jno
ss
fiaddl
push
dec
loope
push
fstpl
jecxz
pop
cli
jl
or
jl
pushf
shl
out
pop
movsl
or
xchg
andb
mov
adc
std
push
push
in
push
mov
divb
out
shlb
push
sub
test
sbb
mov
dec
dec
lret
and
repnz
fistps
js
push
jg
stos
sub
pop
mov
cmpsb
fistpl
fsubs
push
out
xchg
push
sbb
stc
pushf
in
mov
inc
inc
inc
jae
pop
push
jae
mov
clc
nop
mov
jmp
cltd
popf
aas
fwait
adc
movsl
lea
faddl
jge
out
stc
push
daa
sub
arpl
fstpl
cwtl
push
inc
sbb
inc
and
sbb
sbb
jecxz
inc
adc
push
popf
jmp
pop
jge
pusha
push
repnz
push
pop
sbbl
enter
scas
decl
jbe
mov
sbb
repz
stos
test
pop
stos
and
fsincos
outsb
int3
pushf
mov
hlt
mov
mov
andb
movsb
popf
imul
pop
mov
xor
lods
mov
jp
jns
or
jl
icebp
aam
xor
outsb
inc
mov
add
out
out
fnstsw
pop
test
mov
aad
aaa
mov
sub
push
into
dec
lcall
in
pop
popa
xchg
rorb
into
dec
out
xchg
pop
xor
mov
lods
and
push
cmpsl
add
loopne
cmp
push
mov
add
jl
jp
jo
in
test
or
cmp
aas
cli
mov
leave
inc
addr16
jbe
outsl
pop
or
outsb
inc
add
adc
movsb
push
and
push
sbbb
shlb
aas
stc
mov
test
imul
xor
xchg
pop
pop
addr16
and
je
inc
inc
dec
outsb
mov
sub
sub
mov
xchg
call
scas
fs
jb
dec
jno
adc
pushf
adc
insb
repz
aaa
fbld
xchg
popa
inc
push
pop
jno
push
rorl
or
fistl
adc
in
fucom
pop
pop
jnp
cwtl
cmp
push
dec
loopne
jmp
test
dec
xor
data16
lods
mov
stc
cmp
cmp
sub
popf
pop
mul
jne
and
nop
cmpb
ljmp
mov
aad
popf
out
inc
nop
jmp
les
mov
cltd
mov
imul
loope,pn
jbe
leave
mov
adc
cmpsb
and
lea
sub
stos
add
xchg
bound
mov
insl
mov
ja
shlb
jno
pop
movsb
or
iret
push
xchg
mov
cltd
and
dec
inc
fucom
cmpsb
leave
aam
aam
popa
dec
jbe
int3
fwait
mov
xor
clc
cwtl
movsl
xlat
daa
repnz
in
lds
adc
sbb
push
xor
xbegin
ljmp
ljmp
lcall
adc
test
mov
mov
mov
hlt
aad
ljmp
inc
cmp
and
in
cmp
push
pop
add
jp
fmuls
sahf
sbb
sbb
testl
pusha
xor
iret
adc
mov
sub
cmp
jp
xchg
sbb
movsb
rolb
iret
fldt
dec
push
sub
pop
xor
inc
mov
sti
shll
out
jnp
mov
bound
lcall
xor
jo
inc
push
cwtl
out
xchg
sub
loope
test
nop
mov
cmp
cmp
or
push
nop
push
sub
scas
jmp
mov
pop
fwait
xchg
mov
xchg
subl
push
and
jo
pop
pop
mov
scas
sub
xchg
pop
lret
les
das
shl
fdivrs
inc
jp
xchg
push
fimuls
mov
idivb
sub
jbe
test
bound
es
or
sbb
xchg
mov
data16
add
rep
add
inc
and
push
xchg
ficoms
and
fisubs
js
pop
mov
cltd
fwait
mov
clc
mov
inc
imul
sti
add
or
ds
dec
icebp
mov
push
lret
sbb
xchg
add
insb
subb
ja
inc
and
push
lods
adc
call
push
out
lahf
fadd
fwait
jp
xchg
and
add
jecxz
cli
pop
push
loopne
roll
jo
pop
dec
sarb
out
jg
pushl
inc
imul
jne
and
nopl
sub
push
addr16
xchg
and
jmp
lahf
test
rcrl
mov
xchg
xor
mov
ljmp
or
inc
int3
mov
mov
mov
test
pop
push
sub
pop
divl
and
jecxz
pop
jp
push
lret
or
rcrb
cld
movsl
jmp
insb
js
jmp
sbb
add
dec
mov
clc
push
xchg
push
sbb
fimuls
push
jo
leave
cmc
dec
xchg
testb
mov
mov
cs
loop
or
repnz
mov
testl
movsb
xor
pop
jb
cmpsb
mov
loop
push
jmp
jb
fimuls
psubsb
xor
cmp
push
mov
lcall
in
outsb
push
add
jbe
lods
fs
test
addb
cmp
pop
sbb
and
or
mov
les
shlb
or
inc
aaa
xchg
pop
lahf
scas
sbb
or
mov
lcall
rcrl
imul
pop
sub
mov
dec
int3
out
xchg
xchg
test
adc
xor
js
out
mov
xor
lret
push
push
popf
adc
mov
repz
cmpsb
jp
mov
ja
popl
decl
or
cmp
fnop
lcall
cmpsl
sub
dec
jmp
cltd
insb
sbb
xlat
dec
push
xchg
mov
sbb
jne
mov
mov
adc
dec
sbb
fs
cmp
sub
leave
sbb
or
imul
or
or
shrb
scas
fisttpll
mov
xchg
dec
jb
and
add
pop
repnz
adc
lcall
jecxz
hlt
cmp
inc
cmp
iret
lods
out
inc
xor
xchg
sub
movsb
push
int
pushf
ret
inc
cmp
call
mov
mull
ljmp
nop
movsb
aad
xchg
shl
cmp
jae
filds
and
mov
mov
pop
aaa
xor
cmp
insb
mov
jecxz
push
xor
shrl
or
rcrb
jmp
adc
jp
and
or
mov
sbb
mov
movsl
xor
cmpsb
fnstsw
mov
jl
leave
pop
cmc
xchg
int
jb
dec
sahf
lret
data16
loop
push
imul
shlb
add
xchg
aas
adc
and
mov
mov
pop
or
sti
mov
and
fnstcw
add
and
push
into
rorl
out
jmp
jle
push
pop
das
outsb
into
packssdw
jecxz
pushf
mov
and
or
aam
test
fiaddl
cmp
jbe
jmp
pusha
notl
arpl
fstpt
jns
lock
fcoml
add
aam
lds
repz
test
xchg
rcrb
xchg
imul
adc
inc
xor
fdivs
daa
lcall
mov
pop
addr16
sbb
pop
adc
out
fstpt
cmpsb
data16
sbb
fcompl
test
rcr
insb
shll
mov
scas
fsts
jecxz
imul
pop
push
or
dec
xchg
jno
imul
fisttpl
or
std
cmp
xchg
ds
sub
mov
lock
ret
mov
jp
enter
js
stos
pop
xchg
or
popf
pop
inc
stos
gs
xor
inc
xor
test
lds
and
mov
cmp
cmp
xchg
mov
addr16
add
and
add
sbb
fs
cmp
push
pop
les
movsb
mov
jge
pop
in
push
in
leave
cltd
inc
mov
and
mov
or
push
movsb
cmp
pop
pop
mov
lods
xor
xor
push
dec
dec
cmpsb
xchg
mov
and
hlt
in
aam
sub
mov
sbb
mov
cli
or
cmp
shrl
imul
iret
enter
nop
cltd
dec
push
and
jo
inc
fs
and
es
fbld
sbb
and
pushf
xchg
xor
js
jl
insb
and
jnp
movsl
dec
dec
popa
test
dec
mov
adc
mov
xor
rorb
pop
inc
mov
or
inc
jle
insl
push
insb
mov
lods
cli
push
sbb
mov
jns
ret
cs
jecxz
es
mov
aaa
pop
repnz
or
and
pushf
adc
xchg
pusha
in
add
jnp
pop
jl
icebp
mov
ja
fldcw
gs
jbe
and
push
lock
adc
xor
arpl
adc
lods
std
mov
dec
cld
lcall
out
and
pop
push
pop
pusha
dec
xor
push
arpl
clc
xorl
jae
pop
jmp
idivl
and
les
jbe
stc
pushf
xor
lock
movsb
in
jecxz
xor
add
mov
dec
imul
and
cwtl
mov
dec
cmp
call
inc
dec
out
orl
mov
jne
stos
mov
xchg
pop
xchg
stc
push
mov
stos
or
jns
mov
nop
mov
nop
lea
in
inc
inc
js
push
icebp
xor
add
iret
popa
xor
clc
jle
add
int
insb
shrb
cmc
rolb
adc
xchg
cmp
mov
mov
dec
push
mov
and
or
into
insb
test
icebp
xchg
int3
adc
addr16
ud1
mov
cld
popf
ret
sahf
xchg
mov
cmp
test
inc
shl
in
loope,pn
