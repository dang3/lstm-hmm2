sbb
add
mov
sbb
push
rolb
push
aaa
sub
push
mov
in
out
xchg
int3
mov
xor
loopne
lock
push
mov
sub
mov
cmpsl
xlat
testb
imul
cmpsl
aam
jnp
vhaddps
cmc
mov
and
push
mov
popf
mov
cs
notl
mov
insl
out
xchg
push
sbb
out
inc
sub
and
shlb
xor
pop
adc
mov
jne
pop
stos
adc
pusha
sub
inc
add
pushf
not
pop
mov
outsb
and
push
mov
mov
lea
jmp
scas
jp,pt
sbb
push
mov
mov
shr
or
pop
mov
pop
inc
imul
or
mov
xor
popa
inc
mov
out
add
cmp
xchg
in
ret
stc
or
out
mov
or
mov
incl
gs
push
arpl
into
ja
iret
push
sub
and
aaa
aas
lock
sbb
mov
dec
xor
bound
mov
dec
push
icebp
enter
adc
cs
add
int
loop
cwtl
push
pop
jne
cmp
and
cmpsl
and
adc
test
popa
pop
xlat
imull
fimuls
aaa
repnz
jl
lcall
push
test
jp
test
scas
push
xlat
jno
pop
icebp
ret
mov
cmc
inc
mov
loopne
outsl
incl
insb
pop
or
aas
push
lcall
add
lahf
adc
add
inc
jmp
popa
sbb
in
addb
jmp
rclb
mov
jnp
adc
sub
and
out
les
fstpt
subl
leave
and
shlb
mov
mov
mov
and
inc
outsb
jmp
pop
and
in
xchg
inc
sbb
sub
adc
and
in
add
push
gs
and
mov
cltd
in
mov
push
jle
ss
push
mov
jnp
add
cld
and
mov
ret
jb
push
movsb
jge
xor
pcmpeqw
inc
dec
dec
repnz
jno
stc
hlt
movsb
push
in
and
loope
mov
imul
jle
lods
mov
sbb
mov
in
sbb
repz
mov
nop
sub
lcall
mov
sbb
ret
mov
scas
pop
out
icebp
test
nop
shll
xchg
lcall
pop
sub
or
lods
add
fsubp
bound
pusha
jmp
fcompl
gs
cltd
cwtl
dec
lods
rol
or
fsubl
pushf
jns
popa
inc
ljmp
xor
pop
mov
sub
fadds
leave
inc
ret
pop
rcrl
fnstenv
jbe
ret
mov
push
pushf
aad
mov
repz
push
nop
cld
stos
xor
jmp
dec
xchg
xor
int3
jne
cmp
daa
mov
stos
scas
sub
enterw
and
mov
mov
cmp
cmpb
repz
adc
sahf
xor
test
pop
cltd
xorl
sbb
mov
in
push
fdecstp
std
iret
mov
cmp
arpl
push
adc
inc
jl
decl
int3
mov
dec
mov
into
inc
test
jmp
add
cmp
push
dec
fcmovu
loop
repnz
adc
push
xor
and
les
add
cmp
mov
iret
and
loopne
and
jmp
sub
add
jmp
add
enter
sti
pop
xor
xchg
leave
mov
pusha
mov
push
push
lret
push
lods
fs
sbb
ss
mov
dec
push
je
adc
lods
dec
xchg
dec
add
push
les
outsb
xlat
out
mov
sub
mov
loope
adc
mov
push
add
stc
fldl
cltd
es
enter
fisttpll
flds
xorl
cltd
mov
out
dec
or
xlat
sbb
movsl
aas
call
sbb
jnp
mov
push
mov
ljmp
pop
dec
sahf
hlt
dec
cmp
jge
lahf
pop
lods
dec
cmp
mov
popa
jno
lods
inc
push
sbb
rolb
pop
cmpsl
sub
loope
outsb
jno
enterw
push
fldt
dec
out
test
ljmp
mov
pop
jbe
xor
xor
cwtl
jne
cmc
inc
pop
xchg
testb
sub
in
bound
push
xchg
sti
mov
adc
scas
jo
jp
jns
call
ljmp
lods
scas
mov
mov
adc
subl
popf
jno
loope
jnp
pop
pop
mov
test
xor
leave
sub
insb
sbbb
movsl
xchg
xchg
out
mov
in
stos
jbe
dec
sbb
jp
iret
jle
loop
lds
pop
add
ret
jne
lcall
push
pop
out
call
outsb
out
mov
test
aam
xor
add
ljmp
jge
movsb
push
inc
les
lret
neg
xlat
mov
dec
sbbl
ljmp
aaa
sbb
or
adcl
stos
insl
shll
sahf
sub
xchg
or
pop
sbb
cltd
cld
les
xor
jbe
nop
pushw
jl,pt
dec
inc
js
loope
cmp
lods
jg
pop
mov
pminub
pextrw
cmp
pusha
sub
mov
inc
daa
xlat
aad
sti
push
out
lods
push
loope
cmpsb
dec
mov
mov
xor
jle
in
xchg
shll
out
mov
sbb
lret
out
jo
push
push
shl
mov
mov
add
sbb
mov
sbb
clc
imul
int
imul
fcoms
adcb
pop
add
imul
jg
or
sub
inc
jmp
pop
push
loopne
imul
adc
pop
pushf
mov
sbb
pop
ds
sub
idivl
sbb
fwait
out
in
mov
jo
shll
dec
sbb
sub
call
cmp
call
mov
sub
cmpsb
mov
push
adc
shl
or
mov
sti
shl
cmp
test
cmp
mov
adc
fsubl
pop
jmp
addr16
dec
pop
jbe
imul
fwait
xor
cmpsl
push
push
test
scas
mov
popf
adc
pop
mov
mov
adc
cld
pop
sbb
movsl
mov
push
xor
cs
cltd
dec
pop
adc
arpl
add
hlt
and
pop
cltd
mov
ret
add
cwtl
dec
lods
les
xchg
sti
pop
dec
imul
fimuls
cwtl
mov
les
pop
hlt
sbb
ljmp
fdiv
es
jb
mov
ds
cmpsl
fcoml
sbb
das
je
cmp
bound
add
jbe
loope
mov
lahf
iret
push
inc
pop
loop
jns
sbb
incl
movsl
repz
jl
xor
insl
and
pop
out
and
mov
mov
faddl
dec
fidivrs
fwait
notb
xlat
nop
dec
mov
ret
xchg
pop
aaa
push
notb
or
std
push
shlb
stos
test
cmp
mov
lock
mov
out
sbb
hlt
es
push
test
and
movsl
push
aad
and
xchg
push
cmp
inc
push
mov
xchg
icebp
dec
test
loope
jecxz
lahf
iret
xor
jb
xchg
repz
outsl
mov
jo
stc
jle
les
sub
or
mov
sub
in
pop
mov
push
sub
cs
loope
vmovhpd
or
mov
mov
jnp
daa
push
shl
inc
scas
xchg
sub
sarb
aas
or
pop
repnz
test
outsb
daa
ret
xchg
aad
inc
pop
jb
dec
mov
mov
xchg
fidivrl
out
pushf
int3
cmp
mov
imul
jg
int
mov
mov
fisttps
add
inc
repz
popf
inc
rcrl
addr16
xlat
enter
mul
push
std
and
mov
out
xor
pop
xchg
mov
fwait
iret
lret
mov
imul
outsb
popa
xchg
inc
cwtl
cld
into
or
xor
inc
loop
aas
or
lds
loopne
push
xchg
mov
mov
call
mov
mov
dec
imul
lret
mul
incl
outsb
adc
insb
pop
stos
or
inc
stos
dec
shlb
je
clc
xchg
push
mov
push
and
ret
xchg
sarb
out
mov
or
je
cmpsb
mov
insl
lahf
xlat
mov
insl
mov
dec
daa
or
mov
sub
xor
adc
xchg
and
xor
push
repz
movsl
adc
lods
mov
mov
pop
call
lea
ljmp
stos
bound
adcl
jno
mov
or
mov
pushf
dec
mov
negb
call
cmpl
cmp
fisttps
xor
cmp
jmp
pop
lods
dec
mov
sub
out
fldcw
adc
and
push
pop
stos
mov
cwtl
rorl
sub
sbb
das
repnz
jmp
addl
adc
xchg
cli
mov
inc
jnp
cmp
in
adc
int
mov
adc
jge
pop
add
popf
out
lcall
cs
test
cld
aad
pop
jo
cmpsb
aas
mov
test
jge
test
mov
push
dec
jg
jns
cmp
lret
in
push
jmp
stos
cs
jmp
inc
mov
sbb
or
out
and
mov
inc
mov
adcb
and
jb
add
out
adc
decb
sti
nop
pop
cmpsl
enter
arpl
push
xchg
rcrl
pop
xor
cmp
cmpb
push
test
faddp
mov
out
xor
push
adc
lret
add
clc
loop
scas
dec
mov
leave
or
or
pop
cmc
cmp
mov
mov
add
pushf
lock
or
add
jg
jbe
lahf
mov
inc
popa
fldt
mov
mov
or
sbbl
enter
jne
adc
sbb
das
push
xchg
pop
lds
sub
add
mov
xlat
push
dec
or
mov
scas
rcl
test
cmp
out
add
cmp
addb
or
inc
shlb
push
pusha
cwtl
mov
adc
orb
sti
inc
aas
adc
mov
jbe
push
push
cwtl
pop
xorb
push
andl
xor
imul
lret
sti
pop
xchg
int
lahf
lock
out
lcall
call
mov
std
repz
jb
mov
fmuls
outsb
imul
aad
jmp
pop
frstor
sub
push
jnp
test
xchg
xchg
popa
sub
pop
sahf
lea
pop
mov
sub
mov
jnp
xlat
add
insl
cmp
push
push
and
into
inc
xchg
cmp
pop
xor
sbb
cltd
ja,pt
inc
shrb
popa
dec
push
push
or
iret
aas
repz
cld
inc
pop
inc
adc
repnz
dec
sub
adc
inc
inc
xor
mov
lahf
push
enter
xchg
jle
adc
loopnew
in
adc
pop
repz
les
mov
ret
dec
negb
mov
cmpsb
jbe
dec
cmp
rorb
cld
dec
cmp
popf
xor
mov
push
ret
dec
fnstcw
ret
sub
fwait
jnp
jmp
mov
fistpl
or
loop
mov
mulb
pusha
mov
test
xor
and
sbb
pop
sbb
aaa
mov
pop
dec
fnstenv
add
jle
stc
push
hlt
xlat
adc
ljmp
out
lea
nop
push
lds
push
gs
xor
add
cli
repnz
stos
addb
out
mov
xchg
movsb
mov
in
inc
and
dec
mov
add
and
push
lret
jnp
pop
lods
insb
ljmp
sub
lcall
sbbl
stos
imul
jg
iret
bound
scas
cmp
mov
pop
mov
call
cmp
cmpsb
in
adc
lret
jb
pop
outsl
or
loop
dec
aad
sub
popa
xor
adc
or
lret
pushf
loope
out
cmp
or
xlat
xchg
stc
xor
daa
jae
jmp
leave
add
xlat
or
jmp
mov
ror
out
and
ljmp
mov
sbb
adc
adc
icebp
pusha
pop
lods
cmpsl
les
mov
and
mov
xchg
xor
jnp
push
jae
int3
enter
daa
mov
inc
int
sub
sub
je
or
andl
xchg
arpl
xchg
mov
out
outsb
mov
jae
aad
subl
fldenv
mov
pop
loop
pop
rcll
inc
and
orb
xchg
xor
xlat
and
dec
cli
add
inc
mov
sub
mov
lret
js
push
add
inc
pushf
inc
push
dec
and
enter
mov
xchg
aaa
and
mov
mov
xchg
adc
out
and
lea
mov
mov
mov
jne
jo
ds
push
xchg
xchg
scas
inc
filds
dec
cltd
push
test
lahf
ds
les
cmp
jmp
cld
mov
inc
sbb
scas
inc
mov
pop
push
inc
das
mov
dec
repz
stc
out
gs
lods
jno
cmp
and
add
mov
lcall
rcrb
in
xchg
mov
fmull
xor
mov
dec
jne
dec
sub
xor
adc
jl
jp
add
shr
sub
cmp
cmpsl
push
dec
sbbb
pop
sbb
jecxz
jmp
jbe
iret
jnp
sete
mov
pop
pop
inc
stos
jg
mov
outsb
xor
push
faddl
sbb
mov
mov
cld
gs
xchg
dec
es
sub
js
fldl
nop
cld
cmpsl
sbbl
andb
lods
and
int
mov
call
mov
cmp
lret
imul
add
out
popa
testl
pushf
jae
movsl
xchg
xchg
pop
xchg
pop
fucomp
lcall
jns
jnp
call
mov
out
pop
inc
dec
in
aas
jbe
cmp
and
xlat
push
or
jne
fdivrs
inc
iret
sbb
lcall
imul
in
xor
jns
dec
pop
adc
enter
sub
lahf
mov
rolb
daa
and
adc
cs
ja
insl
push
bound
push
cmp
jl
mov
cmp
out
mov
xchg
push
cmc
out
fstpt
cli
cmp
sarb
movsl
xchg
and
out
cmpsb
popa
mov
add
stos
in
repnz
popf
or
mov
add
sahf
inc
pop
js
rclb
aam
into
es
in
outsb
int3
jmp
push
test
test
sbb
mov
add
insb
popa
xchg
and
mov
mov
clc
sahf
or
jo
fsubrl
xchg
mov
xchg
pop
je
mov
in
stc
lods
lcall
ficoml
shrl
mov
icebp
push
jo
out
jno
ds
pop
insl
in
pop
rorl
cmp
xchg
pop
or
btc
jns
ljmp
aad
and
dec
iret
pop
lock
fstp
aad
outsb
adc
mov
test
int3
jp
mov
imul
cmc
in
stos
mov
inc
dec
pop
addr16
pop
cmp
mov
in
jp
in
insb
xchg
inc
jne
out
or
repnz
mov
and
or
push
dec
bound
loope
sbb
hlt
mov
leave
sub
sbb
stc
arpl
not
nop
clc
insb
enter
push
sbb
add
xchg
stos
imulb
jg
dec
imul
cs
inc
mov
stc
std
std
orb
xchg
pusha
hlt
sub
call
out
push
sub
dec
fsubs
mov
mov
movsb
adc
pop
pop
aam
jns
mov
jo
pop
insb
imul
or
repnz
cmp
lcall
out
xlat
mov
popa
xchg
pop
push
imulb
cmp
daa
sub
push
add
xchg
add
jae
cmpsl
push
out
or
dec
pop
pop
in
lds
or
lahf
and
pop
sub
xor
rorb
or
aaa
and
insl
or
subb
and
mov
and
loopne
or
sbb
mov
andl
sub
clc
stos
mov
mov
ss
jo
cltd
dec
addb
xlat
pop
out
loop
nop
insl
js
in
inc
xor
xchg
lcall
push
push
rorb
jns
frstor
mov
test
and
jae
and
pop
mov
call
sub
xlat
cmp
jp
or
arpl
into
sub
js
jecxz
sti
fisubrl
ret
sbb
dec
int
sbb
mov
fs
dec
mov
inc
cltd
mov
pop
loop
dec
in
adc
notl
mov
rcrb
cmp
mov
loope
bound
repz
jl
lock
in
repnz
jno
and
adc
in
dec
jo
testl
mov
sub
mov
lcall
xchg
pop
jecxz
nop
push
cmp
jle
ja
pusha
pop
sbb
jne
and
push
enter
jnp
dec
lds
andb
pop
jbe
sub
mov
fwait
hlt
es
add
adc
jle
sub
inc
cmp
push
fstpt
sahf
nop
das
sti
test
or
and
jae
mov
sarl
jne
add
daa
mov
out
pop
xor
out
cmp
mov
lcall
jmp
insl
jnp
or
pop
lock
push
inc
lock
pop
call
popf
sbb
jo
and
inc
dec
or
lock
cli
and
subb
xor
insl
pop
xlat
or
lret
push
and
ret
jl
fs
mov
sub
in
adc
insl
arpl
mov
lret
mov
movsl
sarl
mov
insb
jbe
jnp
daa
jmp
fimull
or
les
jne
mov
outsl
test
fxch
sub
fisttps
fisubl
mov
mov
adc
sub
push
cs
pop
pop
gs
in
sbb
loope
cwtl
stos
xor
repz
testl
pop
rcrl
mov
xchg
dec
and
inc
mov
sub
pop
sti
jmp
jmp
push
inc
mov
push
mov
stos
pusha
add
sbb
xor
daa
stc
pmaddwd
inc
inc
inc
and
or
xchg
jl
loop
cmp
inc
sbb
push
jae
push
add
cs
or
call
jmp
pop
adc
inc
xor
mov
ljmp
jnp
lods
outsl
pushf
pop
popa
inc
dec
and
push
lods
ret
out
stos
xchg
xor
shlb
lret
outsb
faddp
popa
xchg
aam
sub
pop
mov
cmp
bound
mov
popa
or
dec
jae
setnp
and
xchg
mov
jmp
shlb
loope
pop
push
les
ret
in
mov
test
pop
loope
sarl
and
mov
xchg
pop
lret
leave
fadd
stos
fstpt
icebp
dec
in
push
mov
iret
mov
xchg
lret
cmpsl
mov
adc
movsl
rcrb
mov
dec
lods
imull
xlat
in
mov
sbb
iret
push
pop
mov
loopne
outsl
stc
aad
jg
mov
test
fimuls
pop
test
cmp
cli
sbb
add
aas
push
dec
lea
pushf
loope
and
scas
hlt
push
inc
stc
and
into
add
lds
and
xor
imul
mov
xchg
adc
mov
and
jecxz
aad
pop
adc
dec
xor
int
mov
push
jmp
add
xchg
xchg
sbb
push
mov
daa
xchg
dec
shll
stos
aas
mov
mov
or
in
stos
fldt
add
mov
add
xchg
das
sahf
push
xor
sbb
test
xor
hlt
cmp
mov
enter
icebp
lcall
scas
sbbb
fdivl
cmpsl
ret
inc
sub
in
mov
fbld
ljmp
cli
das
push
ljmp
xlat
inc
out
sbb
cmp
loope
push
sahf
enter
mov
ljmp
pop
stc
mov
or
push
sub
dec
push
cwtl
loope
dec
enter
das
mov
dec
hlt
pop
int3
mov
push
cmp
dec
mov
arpl
addr16
insb
mov
sti
push
outsl
cli
stos
leave
ljmp
lret
sbb
mov
adc
decl
add
imul
out
clc
inc
mov
enter
ds
xchg
addr16
pop
imul
std
and
inc
call
fxam
dec
aas
subb
sub
pop
sahf
in
mov
cmp
jg
mov
fldcw
push
mov
subb
cmp
pop
pop
movl
sub
int3
ret
enter
jb
add
rcr
shlb
fs
lea
inc
push
add
xlat
fisttpl
dec
ficompl
test
movsb
inc
arpl
imul
out
sub
fdivrs
jg
jp
shrl
dec
int3
push
xor
lea
adc
add
icebp
clc
popf
aaa
insl
adc
xor
sbb
or
pop
mov
cmpsb
add
push
sbb
push
mov
sub
dec
fdivrl
aam
push
xor
sub
lock
mov
insl
push
movsb
stos
loop
enter
aas
rorb
jnp
clc
fs
popa
fidivrl
les
mov
std
push
cmp
adc
sbb
jnp
insb
out
dec
dec
mov
outsl
mov
sub
add
cmp
jmp
xor
movb
leave
pshufw
jnp
sbb
ljmp
fmull
and
in
push
insl
inc
add
incl
push
int3
jns
cli
test
dec
shr
sub
adcb
fisubl
mov
sbb
lds
lret
dec
sub
movsb
dec
or
mov
mov
call
test
jb
ja
out
mov
in
pop
popf
mov
or
jns
ret
cmp
out
das
sti
fcoml
jl
mov
sub
cmp
and
es
ret
fstl
xchg
mov
int3
add
jmp
pushf
or
jns
scas
mov
push
and
lds
mov
stos
xchg
mov
xchg
popf
aaa
fnstcw
cs
leave
mov
mov
or
jmp
push
out
orb
adc
in
add
ljmp
leave
or
jmp
scas
jmp
add
jl
addps
sbb
pop
je
jbe
int3
xor
imul
in
and
daa
pop
cmp
xor
adc
pop
jp
popa
adc
fdivp
push
cld
popa
loope
mov
sub
cmp
cmpsb
jmp
fnstcw
sub
jl
ds
dec
popa
stc
sub
push
hlt
push
in
int
jp
repz
call
cmp
popa
test
rcll
fisttpl
xor
jno
shr
sbb
xchg
and
adc
xlat
mov
hlt
jp
int
fistpl
loop
insl
sub
pushf
fsubrs
in
js
adc
pop
lds
shl
xchg
jo
lcall
mov
push
mov
inc
mov
xchg
xlat
fdivrl
cmpsl
rclb
mov
neg
mov
mov
mov
jae
icebp
mov
adc
mov
sub
mov
int
pushf
jno
mov
les
mov
outsl
aad
sti
aam
mov
dec
int
cmp
sub
lret
and
sti
fadd
jo
xchg
adc
rolb
xchg
mov
stos
inc
jl
push
popl
sbb
sbb
push
mov
jecxz
mov
xor
and
outsl
lock
fistl
mov
mov
adc
lahf
and
xor
cmc
test
cmp
jno
sub
push
ret
sbb
icebp
dec
push
sbb
add
fildl
sbb
push
cli
pop
xchg
ja
inc
jne
pop
sbb
xchg
clc
lret
dec
inc
jmp
cmpsb
rclb
fsubrs
lock
pusha
cli
inc
or
sbb
and
push
mov
movsl
jo
outsl
pop
lea
insb
xlat
lds
mov
bound
xor
aaa
lds
or
inc
pop
push
fsubrs
xchg
inc
rolb
pop
pop
out
loope
ss
jb
mov
and
push
into
mov
push
pop
inc
or
iret
cmpsb
dec
mov
loope
push
sbb
fs
mov
shlb
add
dec
inc
cmpsl
lcall
stc
xchg
mov
adc
sub
jg
mov
cmpsb
cmp
xchg
out
xlat
incl
es
aam
and
stc
dec
push
movsb
out
inc
and
clc
out
jns
xchg
jg
mov
xchg
popf
xchg
adcb
ret
dec
mov
cmp
mov
jns
mov
xchg
jg
pop
loope
jae
psubw
fcom
jge
popa
mov
xchg
repnz
js
nop
stc
std
xchg
cmpsl
push
cmc
aas
sbb
cmc
sti
mov
xchg
sub
jo
in
loopne
pop
gs
int3
jb
xor
dec
movsl
lods
and
lahf
adc
or
inc
rolb
mov
push
mov
js
mull
scas
movsb
inc
adc
sub
leave
push
xchg
and
pop
iret
sbb
pop
mov
pop
ret
es
adc
xchg
xor
out
dec
xlat
xor
pop
sub
test
popa
pop
or
mov
cmp
loop
inc
mov
in
push
cmp
std
cmp
fs
fwait
lods
xchg
push
mov
fisttpll
and
movups
lret
stc
push
mov
dec
pusha
pop
pop
gs
and
incb
cmp
push
out
test
call
std
ficoml
out
mov
sarl
repz
xchg
or
test
cmp
mov
dec
sti
push
push
adc
mov
bound
int
ret
lods
clc
aad
cmpb
xchg
rorb
stc
mov
xor
loop
jmp
ja
fildll
pop
or
mov
xor
adc
cli
add
jg
dec
stos
cwtl
mov
push
daa
lahf
push
cld
mov
push
mov
mov
jecxz
shrl
add
push
add
jle
scas
mov
fmull
cmp
in
lret
adc
mulb
dec
shl
cld
loope
xchg
push
jae
es
sub
push
imul
shlb
fcompl
pop
xor
jp
push
fsts
movsl
and
add
sub
add
imul
mov
pop
sub
or
push
add
lds
jne
jne
dec
mov
pop
out
lock
xor
vaddsd
int3
jecxz
mov
outsl
inc
mov
xchg
ret
test
stc
mov
inc
adc
pusha
dec
and
rcrb
mov
sbb
xchg
push
lock
xchg
dec
jmp
cmp
pop
cmp
push
in
and
pop
aad
fistl
fldz
or
hlt
xor
je
icebp
sbb
push
lock
sbb
lcall
dec
out
inc
aaa
stos
cmp
iret
push
mov
loop
fs
ljmp
lret
mov
shr
stos
loopne
imulb
cmp
jns
dec
icebp
aad
xor
sbb
fs
sub
push
add
sub
daa
hlt
hlt
inc
mov
aam
cmpsb
xchg
in
in
repz
jl
cmp
mov
inc
int
ds
inc
jle
mov
cmp
loop
add
fnsave
imul
mov
xchg
xchg
dec
inc
pop
xchg
xor
jbe
pop
adc
or
cmp
cmp
xor
and
lret
adc
lods
loopne
test
cwtl
dec
icebp
pop
iret
packssdw
pop
xchg
and
enter
orps
cmc
aas
and
popf
insl
sbb
icebp
xchg
sub
fildll
dec
in
mov
jo
and
fiaddl
xlat
adc
sbb
movsb
insl
sub
sarb
les
cmc
sbb
jg
xchg
pop
es
repnz
aam
aad
add
test
cmpsl
mov
jno
jecxz
mov
popa
clc
cltd
imul
and
data16
add
dec
xchg
jle
dec
scas
lret
inc
inc
test
enter
jnp
pop
aas
scas
repnz
jbe
lods
loop
imul
jle
or
shl
test
lock
or
rcll
int3
jns
mov
and
paddq
add
jae
mov
and
insl
fadd
stc
aam
inc
xorb
pop
cld
push
jle
or
xchg
addr16
iret
daa
out
push
xchg
pop
pop
xchg
mov
mov
jne
in
fidivrs
orl
cmp
xor
nopl
dec
sbb
loopne
adc
lds
test
mov
sti
add
inc
xor
mov
xchg
jae
dec
sub
pop
fwait
add
fchs
mov
les
adc
mov
xchg
pop
inc
push
jp
xchg
or
jo
dec
mov
dec
inc
add
dec
cmp
mov
in
and
push
daa
shl
rorb
inc
andb
inc
loop
movsl
dec
in
sti
std
outsb
dec
ret
flds
das
adc
mov
jle
nop
mov
push
daa
inc
dec
test
xor
cli
cs
xchg
std
dec
scas
xchg
inc
mov
clc
add
add
jne
add
aam
das
jle
adc
and
xchg
mov
femms
lahf
push
jmp
std
mov
imul
std
fs
sub
sahf
and
and
in
push
loope
lret
dec
mov
adc
int3
sub
dec
xchg
cmp
pop
cmp
dec
std
in
imul
sahf
bnd
pusha
and
jb
cli
sub
aam
and
xchg
and
mov
xchg
xchg
cmp
mov
inc
mov
push
dec
jp
and
sbb
ljmp
std
cmp
push
mov
imul
fimuls
stc
ss
popf
cmp
push
or
mov
push
stos
in
mov
in
mov
mov
not
cwtl
sbb
out
sbb
or
clc
iret
je
mov
add
dec
outsl
mov
ds
pop
lods
push
icebp
repz
bnd
and
jge
ret
pop
rcrb
cs
clc
cmc
add
jno
out
outsl
call
xchg
jp
mov
aas
outsb
xor
mov
addb
arpl
adc
sbb
jo
jp
stos
scas
cmp
sub
pop
jp
jno
out
scas
shll
fiaddl
orl
filds
jmp
fcmovne
and
push
sub
sub
pop
ljmp
out
push
jb
sbb
cmp
ja
scas
bound
or
mov
test
jne
adcb
push
adc
xor
lcall
cmc
mov
lcall
jge
sbb
inc
stos
cmp
mov
aad
adc
sbb
jnp
pop
xchg
jbe
mov
lods
mov
jmp
cmp
setp
aad
sub
vmread
jo
mov
jle
dec
orb
add
orl
or
in
in
mov
je
mov
sub
outsl
pop
push
cmp
loope
stos
fs
sub
mov
idiv
fsubr
fdivs
add
sbb
stos
inc
stc
lret
stos
adc
stos
xchg
aas
stos
add
dec
repz
cwtl
push
lds
pop
inc
push
jns
dec
push
cmp
push
pop
jmp
push
rclb
loopne
out
sub
scas
add
mov
push
mov
sbb
fstl
divl
jnp
dec
test
out
nop
sahf
mov
outsl
xor
out
sub
clc
jge
push
jle
sub
and
int
mov
inc
das
stos
cmc
and
mov
push
inc
mov
xchg
inc
sub
pushf
in
outsb
pop
lcall
push
js
loope
sbb
jb
mov
std
or
nop
das
imul
push
adc
out
or
movsl
filds
xchg
pushl
dec
dec
popa
jbe
in
lahf
adcl
je
test
add
bound
or
push
sbb
daa
xchg
loopne
sahf
mov
fsub
mov
sbb
mov
mov
lock
ss
or
into
pop
add
push
mov
pushf
daa
icebp
arpl
sbb
mov
enter
mov
ss
mov
rcll
adc
inc
mov
jbe
cmc
mov
addr16
fmull
pop
mov
xor
xchg
adc
leave
dec
cmp
mov
jno
xchg
xchg
ficomps
sub
cmp
sbb
adc
or
cmpsb
movsl
dec
mov
adc
callw
cmp
xchg
popf
sub
int
insb
jg
mov
sub
add
aam
xchg
js
cs
and
pusha
jp
test
push
jo
in
lea
cwtl
dec
pop
mov
or
lock
jno
xor
in
scas
xchg
jmp
enter
add
add
pushf
fisubs
pop
mov
or
ljmp
mov
insl
mov
je
push
fwait
push
cmp
mov
jl
xchg
aam
sbb
dec
hlt
fcmovu
hlt
pop
stos
mov
jge
push
popf
dec
loop
test
lcall
mov
add
sbb
push
pop
inc
or
cmpsl
xchg
inc
pop
and
mov
iret
sbbb
add
call
lock
stc
cmp
add
stos
inc
mov
pop
inc
pop
cmp
mov
in
mov
lret
clc
mov
stc
out
lcall
pop
fstp
fstpl
mov
les
mov
fs
das
add
pop
jns
insb
xchg
sarl
adc
push
add
pop
lods
push
fnstenv
push
pop
push
popl
adc
ds
mov
push
adc
adc
std
ror
inc
mov
iret
stos
cmp
insb
push
ja
aam
popa
add
push
inc
or
outsl
sbb
add
and
sbb
pop
ret
in
sbb
inc
mov
test
add
loope
les
push
xchg
imul
loope
sbb
add
xchg
adc
data16
rorl
imulb
fwait
push
loope
mov
imul
icebp
into
add
add
pop
bound
das
and
orps
data16
push
gs
xor
mov
add
push
lods
xor
xchg
lock
stc
jb
mov
push
xchg
push
add
sbb
call
jae
pop
ds
sbb
sub
xor
pop
cmp
bound
cmp
jge
mov
or
das
int3
dec
leave
rolb
pop
aam
pop
mov
xor
xor
push
fxch
add
cmp
lea
cmc
push
fsts
out
stos
inc
push
mov
jle
inc
pop
mov
cmp
xchg
pop
pop
lcall
fucomp
push
xor
xor
mov
pop
sub
cltd
mov
adc
stc
push
sbb
repnz
les
lret
dec
pop
shl
xor
outsl
jnp
add
push
mov
adc
xor
lock
pop
xchg
push
stos
out
cltd
sbb
mov
decl
int
mov
repnz
push
out
or
js
aad
inc
add
sbb
cwtl
stc
out
mov
sbb
mov
mov
adc
add
mov
adc
mov
fs
mov
and
push
adc
xchg
dec
pop
push
rcrl
roll
es
jmp
sbb
xchg
stos
mov
push
pusha
jle
lea
jecxz
adc
in
add
jbe
loopne
test
xlat
sarb
sbb
gs
rcl
mov
sub
or
test
push
gs
sti
loopne
mov
sbb
repnz
pop
imul
sbb
xor
addb
and
mov
push
sbb
ret
xor
xor
add
sbb
jb
rclb
daa
cltd
jge
fcompl
orl
rcrl
sub
and
int
cld
test
loopne
and
divl
lods
fwait
dec
pop
mov
xchg
mov
or
rorb
sbb
push
inc
out
sub
jge
insb
xor
pop
insb
les
add
inc
adc
or
pop
mov
sub
repz
aas
sti
xchg
sub
addb
inc
notl
xor
fwait
mov
dec
insl
es
jae
cmc
jl
rol
aas
aad
push
inc
inc
dec
cmp
jo
out
cltd
clc
jne
pop
pop
cmp
or
pop
pop
inc
jb
mov
pop
add
pop
mov
xor
jo
lcall
repz
mov
fmull
scas
xlat
nop
mov
and
imul
xlat
lret
add
aam
and
dec
pop
push
cmp
lret
es
and
xchg
shll
loopne
and
fiadds
pusha
roll
shlb
add
test
fxsave
lcall
mov
cmpxchg
sahf
out
cmp
shr
in
icebp
sub
sub
cmp
mov
sub
xchg
lock
icebp
scas
insb
scas
in
fbld
adc
or
add
lret
push
rep
xchg
jle
mov
bound
aas
fstl
jl
mov
and
loopne
fmuls
dec
pop
fs
mov
inc
fs
arpl
out
sbb
je
push
mov
test
jecxz
mov
into
add
fists
insb
bound
cmp
aaa
or
js
icebp
push
ror
mov
rcll
cmpsl
inc
pop
inc
gs
mov
and
setae
adc
cmc
cld
or
testl
cltd
mov
mov
rcr
add
mov
dec
stos
iret
xchg
les
add
mov
mov
or
outsl
fdivrs
test
stos
sub
jns
rcrl
xor
sub
inc
or
call
pop
push
sarl
bound
sbb
dec
lret
aad
scas
insl
ja
add
mov
jno
jp
lret
shlb
pop
leave
inc
das
and
lea
repz
adc
into
and
shrl
jmp
movsl
adc
mov
iret
cli
aaa
int
add
pop
jno
fmull
pop
cmp
icebp
mov
fcoml
inc
mov
adc
loopne
fsts
xchg
xor
insb
lds
jb
fstps
xchg
jbe
mov
and
mov
mov
ss
sub
pushf
jge
or
ss
fdivr
fcmovne
leave
sub
mov
popa
movsl
pop
jge
shl
mov
outsl
jae
decb
pop
je
mov
aad
jbe
sub
mov
cmc
pop
dec
pop
inc
add
cmp
aad
mov
es
popa
xchg
or
test
xchg
iret
adc
testl
ljmp
testb
repnz
fcoml
sbb
adc
sub
imul
in
mov
and
test
push
cwtl
mov
xchg
push
in
jns
mov
jne
test
inc
mov
test
ljmp
enter
clc
aam
ret
cmp
nop
xor
out
sahf
cltd
out
push
rcll
jge
adcb
fwait
clc
mov
test
cmp
jl
test
pusha
or
std
ss
dec
ret
xlat
mov
hlt
sub
inc
test
sub
sti
mov
lds
xlat
jg
scas
jle
or
leave
push
mov
xlat
fcomps
notb
mov
inc
xlat
popf
je
jno
push
push
std
insb
dec
int3
sbb
pop
int
dec
mov
sub
movsb
outsb
lret
lods
jbe
lsl
enter
out
xor
jp
adc
in
push
ret
sub
push
adc
sbb
inc
jp
xchg
imul
push
repnz
lock
lods
sub
lahf
sbb
mov
imulb
jl
inc
push
enter
mov
gs
out
inc
pop
gs
pusha
mov
lcall
shlb
nop
xchg
xor
and
xchg
lahf
cmpl
mov
xor
and
in
out
gs
shlb
aas
push
mov
cmc
out
mov
inc
lds
cmpl
push
pop
cmp
lahf
xor
clc
bnd
inc
add
ljmp
push
push
mov
ljmp
cmp
imul
leave
xchg
cmc
aas
push
es
je
mov
daa
stc
xchg
add
adc
mov
adc
movsl
js
arpl
mov
or
test
pop
sbb
mov
jne
divb
stos
mov
int3
or
jge
stos
ret
jmp
xor
gs
xchg
and
imul
jns
adc
jl
cmp
pop
pop
adc
rolb
out
dec
push
ljmp
xchg
ret
inc
sbb
xchg
push
js
imul
pushf
xchg
push
pusha
cmp
mov
ret
inc
cmp
pop
arpl
int3
jge
out
pop
pop
push
adc
push
and
or
movsl
outsl
in
decb
mov
push
in
inc
outsb
mov
test
loopne
mov
cmp
xchg
clc
sub
jmp
jno
aas
lret
or
les
push
lea
repz
sub
cltd
insb
sub
push
jnp
jl
push
ds
mov
push
push
pushf
xchg
dec
sub
or
or
lods
fistps
mov
shlb
mov
sub
inc
hlt
out
jbe
jns
cwtl
inc
negl
roll
jecxz
jl
xchg
insl
cmp
push
xor
pop
xchg
lea
call
roll
cmp
pop
xor
push
mov
aaa
fstpl
mov
pop
cs
leave
popf
testb
leave
jbe
add
sbb
pop
pop
jp
iret
ss
aas
cs
scas
adc
jl
push
inc
lret
jle
outsb
jne
mov
or
and
add
sbb
adc
lods
pop
daa
imul
rcll
scas
mov
inc
inc
push
dec
push
dec
pop
movsl
sbb
out
push
out
push
mov
push
fs
jnp
addl
loope
xchg
les
js
shrb
outsl
insl
dec
insb
mov
dec
lock
out
cmp
pusha
sbb
popf
sub
je
lahf
inc
jnp
pop
out
adc
int3
movsb
in
rorl
push
test
inc
cmpsb
ss
pop
in
xchg
es
arpl
cmp
cmp
xor
pop
sub
dec
hlt
or
es
sbb
or
cmp
in
and
movsb
ret
jp
data16
sbb
pop
sbb
push
sub
mov
dec
loope
pop
aam
sub
loop
add
and
mov
lret
enter
mov
out
cmp
mov
das
andl
dec
decl
mov
in
enter
popa
lods
dec
aaa
cmp
movsb
popf
arpl
jbe
jb
fdivrl
and
add
add
mov
add
pop
sahf
int3
pop
leave
push
cmpsl
shll
add
xchg
std
arpl
sahf
fwait
lea
jo
jmp
mov
daa
in
mov
jae
lahf
jge
pop
sbb
mulb
hlt
cmc
shlb
inc
sbb
jge
push
mov
sahf
aas
push
xchg
push
repz
shrl
mov
pop
andb
test
subl
mov
add
fidivl
mov
pminsw
mov
lock
mov
inc
add
xchg
fidivl
jecxz
or
jle
fdivp
fwait
ss
mov
mov
ja
aad
scas
add
push
out
loop
inc
rcll
mov
int
aad
jle
inc
xchg
mov
xor
jns
orl
dec
mov
or
xchg
adc
test
sbb
mov
push
outsb
mov
shlb
jb
mov
addr16
xchg
pop
scas
daa
pushl
test
inc
xchg
sub
and
ja
add
rcr
jl
out
rcrb
je
jne
inc
and
dec
into
mov
cmp
in
lret
in
jnp
dec
test
aad
nop
sti
stc
xchg
cwtl
ja
data16
repz
ljmp
mov
dec
out
cmp
aas
pop
xor
sbb
das
xor
negl
push
inc
into
in
stos
push
jnp
xor
cmp
pop
mov
aad
adc
test
aam
shlb
adc
pusha
in
fiaddl
inc
loope
pop
je
iret
out
cmp
insl
sub
dec
add
or
ss
jmp
js
lods
or
sub
push
imul
cmp
bound
inc
xchg
lods
xchg
lret
xchg
in
ds
scas
pop
daa
add
jns
push
jg
xchg
lret
int
adc
mov
push
push
ja
and
pop
das
sub
push
mov
test
xor
sub
jb
adc
sub
scas
pop
jmp
mov
test
ror
push
inc
lcall
and
ljmp
inc
pop
jle,pn
add
rcrb
arpl
test
insb
xor
out
lock
pusha
cmp
xlat
lods
das
outsl
stos
push
pop
mov
jno
lods
xor
mov
int
cmc
stos
cmp
nop
pop
sub
add
outsl
or
sbb
mov
push
jns
jo
add
mov
fcoms
outsb
push
push
cmp
adc
sub
loope
mov
fstl
fwait
push
push
lea
xchg
jbe
incb
cli
jecxz
in
rcll
and
insb
ret
das
xor
cmp
popa
jp
push
or
lahf
out
dec
mov
inc
fmull
scas
jp
cmp
xor
and
cwtl
and
negl
aas
lahf
xor
pop
js
adc
fidivrl
dec
mov
jo
fistps
lahf
sbb
rorb
xor
inc
stos
sahf
xorl
int
add
sub
or
mov
shrl
sbb
testb
jbe
adc
addr16
into
jl
popa
jge
jle
leave
jo
nop
add
cmp
sbb
aas
stc
pusha
push
sub
out
repnz
xor
cs
inc
movsb
clc
or
les
jl
push
pop
and
mov
fcoml
push
sub
call
mov
inc
cmp
outsb
mov
jo
jle
repz
test
mov
loope
and
sbb
xlat
rcrb
mov
roll
mov
ds
sbb
jp
std
mov
negl
mov
inc
mov
jbe
push
sub
ja
push
lods
dec
mov
cmp
lahf
inc
push
movsl
popa
int3
push
fildl
and
mov
mov
popf
xlat
dec
lock
xor
movsl
mov
clc
jmp
mov
mov
lods
fistpll
push
fwait
rcrb
imul
stos
jmp
mov
fists
je
jbe
in
sub
cmp
cmc
lret
loope
adc
xchg
int3
jmp
mov
or
or
aad
sbb
sbb
jb
imul
ja
mov
hlt
jg
xor
das
stc
sbb
mov
test
lds
xor
insl
xlat
dec
cwtl
pop
pop
cmpsl
jo
sarb
push
adc
xor
push
inc
hlt
faddl
or
push
mov
nop
pop
sub
inc
and
mov
rorb
dec
xor
loop
adc
repz
push
inc
loop
jmp
test
lret
lcall
shll
mov
in
sbb
cmpsb
aas
inc
mov
out
cmp
mov
lea
insb
jae
mov
push
popa
clc
or
sbbl
gs
testl
gs
rorb
cltd
pop
cld
ret
cli
lea
inc
cld
icebp
cmpsb
sahf
ljmp
jbe
lretw
aam
jp
sarl
mov
push
test
or
lds
int3
add
dec
adc
aaa
arpl
outsl
dec
daa
inc
inc
cli
xor
insb
push
pop
lahf
repz
mov
mov
in
xor
push
cmp
lds
clc
in
imul
push
xor
stc
push
pop
or
push
dec
or
jmp
xlat
fstps
sbb
pop
sub
jmp
pusha
loopne
mov
icebp
and
aaa
ret
xchg
xor
pop
or
mov
aad
lds
pop
push
sbb
push
or
xor
fs
jecxz
and
push
jbe
mov
mov
mov
xchg
or
mov
sbb
mov
mov
or
inc
jns
cmp
cmp
test
lods
adc
mov
ljmp
dec
sbb
pop
add
or
cmpb
pop
push
fidivrs
xor
mov
dec
xor
shl
out
mov
lret
pushf
sti
sahf
jp
sub
pushf
xchg
mov
pop
mov
sub
sahf
pop
mov
push
add
dec
sbbb
mov
add
or
or
aad
gs
mov
imul
push
jo
xor
into
loope
imul
jnp
push
cld
inc
and
mov
imul
push
out
aam
jg
scas
jne
pusha
xchg
cld
gs
xor
mov
sub
aam
test
jno
mov
in
movsl
pushf
lahf
je
sbb
outsl
insl
adc
das
sub
lcall
xor
pop
xchg
inc
sarl
jne
pop
mov
inc
loope
test
mov
xor
xchg
push
shlb
mov
cmp
xor
sub
and
xor
roll
jo
pop
sti
sbb
push
xor
rorb
lahf
bound
sbb
pop
stos
or
pop
jno
nop
mov
ds
add
jo
idivb
and
push
lcall
ds
sub
push
push
dec
popf
add
dec
and
push
inc
cmc
add
test
jb
push
adc
mov
jecxz
lcall
movl
add
push
jno
repz
fsubrs
adc
xchg
mov
test
popa
ljmp
sub
outsl
cmpsl
subb
shll
ret
and
adc
cmp
lds
cld
push
icebp
popf
jle
mov
xlat
daa
xchg
push
add
pop
adc
jb
pusha
fisubs
daa
movsl
enter
sub
inc
xchg
imul
mov
cwtl
dec
pop
enter
rdpmc
pop
pop
int
jne
mov
and
dec
push
jb
xchg
psubq
jl
dec
add
ds
inc
aaa
adc
push
cmp
in
sub
add
call
test
sub
sbb
loope
fmul
rcrl
lret
orl
sub
imul
lods
inc
xor
jnp
daa
pop
and
pop
push
inc
fcompl
or
inc
or
imul
dec
out
dec
push
cltd
cmp
imul
xchg
aaa
test
lods
cmp
pop
mov
mov
sbb
in
jno
cmp
sub
hlt
stc
enter
ret
sti
in
push
cmp
loop
lret
pusha
push
mov
sbb
push
pop
dec
jmp
aas
stos
aam
sub
adc
clc
mov
test
xor
cwtl
xchg
jns
aad
cmp
inc
hlt
cli
in
jle
jno
cmc
xor
jp
std
dec
test
jb
shlb
inc
xchg
add
xor
cmp
in
mov
movb
arpl
sub
cltd
mov
sub
push
lcall
adc
sub
imul
cmpsb
imul
xchg
sub
xchg
jns
mov
xchg
add
je
mov
xchg
ret
stc
int3
rorb
inc
fwait
pop
nop
xor
imul
push
pop
fistps
popa
jl
cmpsb
mulb
ret
inc
xchg
xor
pop
loopne
xor
mov
cli
push
xchg
add
popf
mov
cmpsb
xchg
inc
jmp
add
push
out
or
adc
mov
std
aam
jge
pop
jo
iret
mov
push
icebp
stc
int
mov
xchg
sbb
mov
ss
inc
mov
in
scas
inc
outsb
and
mov
imul
mov
sub
call
jns
adc
lock
cmc
sti
mov
dec
ret
out
popa
scas
jg
or
popf
push
xchg
and
ret
jle
jecxz
and
and
inc
outsl
cmpsl
icebp
int
xchg
cmp
popf
cmp
ficoms
andb
pop
inc
jb
pop
clc
mov
adc
mov
and
es
xchg
lahf
push
and
push
mov
jbe
pop
fcoms
mov
sahf
js
xchg
jmp
xchg
gs
cmpsb
xchg
icebp
mov
jae
shl
jle
mov
and
gs
addr16
js
lcall
lods
fcompl
rcr
xor
in
pop
aas
dec
scas
sbb
inc
push
cmp
pop
arpl
jecxz
mov
in
push
cmc
cltd
lcall
divl
push
xor
inc
scas
aas
ds
and
and
xchg
aaa
push
jb
arpl
xchg
lds
add
fbld
cmpsb
pop
pop
cmpsb
jle
push
aad
dec
xor
shrb
push
and
pushf
outsl
imul
xor
rol
mov
inc
not
mov
xor
push
pop
mov
mov
cmpsl
jg
ror
faddl
sbb
ret
cmp
cld
iret
shrb
mov
fwait
lock
push
popa
out
fistl
loope
mov
cld
xor
pop
mov
jo
aam
fs
idivb
aaa
inc
imul
adc
lds
icebp
cmp
mov
daa
mov
push
lods
mov
fimull
loope
aas
push
cltd
dec
shll
cmp
or
sbb
push
jl
cmp
pop
jo
pushf
rolb
insb
fs
mov
pop
nop
inc
mov
xor
aaa
imul
call
loopne
pop
dec
mov
jmp
cmp
add
lahf
and
lds
add
mov
cmp
adc
insl
pop
and
pushf
and
rcrb
mov
cli
xor
sub
test
and
clc
pop
ja
fiadds
aad
ret
push
hlt
push
cmp
xchg
push
mov
lds
cwtl
mov
cld
jle
dec
int3
daa
fisttpll
sub
xchg
js
mov
fs
xchg
fwait
dec
push
add
std
cld
jp
mov
inc
inc
cmp
xchg
es
jns
jb
mov
and
push
add
imul
mov
adc
inc
cmp
repnz
hlt
add
jg
cmp
inc
int3
mov
push
mov
mov
inc
pop
ret
punpckldq
mov
jmp
sbb
out
sub
gs
scas
adc
sub
mov
pop
adc
xor
pop
jl
jae
enter
clc
lret
inc
bound
push
fstps
xchg
mov
out
inc
orl
xor
stc
fs
dec
pop
rcll
or
mov
push
jmp
sbb
repnz
xorb
jo
mov
inc
rcll
rclb
ljmp
xchg
ds
xchg
std
cld
inc
jmp
cmp
sub
and
push
add
push
jbe
addb
les
add
lock
call
test
xchg
mov
add
mov
dec
leave
push
aad
xchg
lea
arpl
xlat
stc
fs
lods
lock
push
test
pop
daa
lock
jbe
js
outsb
mov
jnp
xchg
xor
out
xchg
pusha
xchg
cmp
pop
or
das
fs
xchg
inc
push
gs
add
ucomiss
adc
mov
icebp
lret
pop
les
inc
mov
xor
cmpl
imul
xor
adc
rcl
dec
push
sub
nop
imulb
rcl
icebp
mov
int
mov
xchg
jnp
frstor
fisttpll
aas
xor
mov
mov
cmp
cltd
mov
sahf
stc
lods
lods
sbb
subb
adc
and
lods
stc
lods
in
xchg
subb
adc
shld
adc
push
mov
xor
popf
mov
adc
ret
sbb
mov
das
xor
or
adc
loopne
xor
xchg
les
mov
mov
orb
js
cmpsl
xor
push
inc
cs
loopne
cmp
adc
sbb
aas
or
jmp
adc
mov
mov
mov
and
pop
icebp
dec
add
stc
xlat
dec
mov
mov
call
popf
dec
mov
cmpsl
das
and
dec
cmp
outsl
mov
pop
test
enter
aaa
jecxz
cmp
mov
pop
out
sbb
push
mov
adc
fists
in
xchg
xchg
mov
or
sti
cltd
movsb
and
xor
add
mov
add
lock
das
cmp
data16
pop
mov
int
push
mov
push
sub
jne
adc
mov
ret
jp
xchg
ficompl
insl
into
dec
or
sbb
out
cmp
iret
lea
lea
idivb
ss
jmp
and
fidivs
out
mov
lahf
jne
loope
jg
and
into
cmp
fdivrp
movsl
mov
cmpsb
inc
in
mov
jmp
sbb
sarl
in
subb
orb
cmpsl
sbb
out
fs
das
ficompl
jg
mov
clc
ret
outsb
jmp
or
imul
and
pop
fldcw
jle
sub
cmp
jl
dec
in
ror
pop
xor
mov
mov
not
push
pop
test
je
sub
mov
push
sbb
pop
dec
inc
adc
sub
dec
pop
mov
cld
jb
outsl
pusha
enter
cwtl
jno
xchg
xchg
aas
cmp
xchg
sub
push
cmpsl
pop
xchg
push
jb
shlb
inc
or
mov
outsb
add
push
sbb
lds
inc
adc
xor
xor
insb
stos
mov
jne
push
jns,pt
cwtl
push
pop
mov
imul
mov
and
cltd
xchg
test
test
cmp
cs
jg
mov
cmc
sbb
mov
rol
dec
push
popf
ret
cs
cld
inc
in
and
repnz
xchg
sub
out
cmp
negb
mov
out
cmp
loopne
lret
jb
xor
inc
call
jae
fnsave
mov
into
outsb
cmp
popa
sahf
lods
test
movsl
out
inc
jnp
repz
and
or
inc
arpl
loopne
scas
scas
arpl
data16
jns
sub
outsb
or
in
bound
lahf
test
mov
js
push
ds
mov
pop
scas
ret
pop
inc
clc
and
aas
movsl
mov
fdivs
out
jg
fucomp
adc
pop
mov
push
pop
xchg
popa
sbb
shrb
dec
lahf
inc
inc
arpl
in
sub
in
mov
mov
and
hlt
or
dec
xchg
inc
bound
add
scas
iret
dec
mov
test
lcall
inc
fcmove
dec
imul
adc
mov
push
clc
in
or
jmp
rcrl
jno
out
data16
aaa
push
jecxz
jno
aad
jg
pop
dec
push
inc
and
aaa
or
cltd
mov
push
xchg
xor
sbb
push
ds
xor
adc
xlat
and
mov
mov
push
mov
stc
sti
dec
sub
testb
cli
cmpsb
inc
sbb
mov
and
leave
cmp
repnz
lds
add
inc
insl
stos
loope
sub
insb
mul
dec
popf
dec
push
dec
rorl
stc
js
rcrb
jmp
out
pop
mov
jl
pop
out
in
dec
mov
ret
mov
cmp
and
push
aad
jb
dec
xor
xlat
jp
scas
es
xchg
or
insl
leave
push
mov
mov
xor
xlat
pop
js
fs
xor
mov
out
and
pop
frstor
jo
add
mov
mov
outsl
pop
clc
cmp
mov
aad
xchg
data16
xchg
mov
jl
out
in
cwtl
repnz
sub
lahf
daa
jb
jbe
push
fs
sbb
mov
insl
cmp
xor
and
mov
sti
test
xor
adc
cmp
sbb
loopne
les
jg
jecxz
enter
sub
repnz
cmc
push
in
cmpsb
inc
mov
pop
xchg
jp
add
outsb
stos
je
mov
mov
mov
add
push
cwtl
ljmp
ds
xlat
cltd
movsb
xchg
fwait
pop
xchg
imul
xchg
adc
hlt
test
imul
push
xchg
jb
aad
dec
mov
test
pop
sub
pop
xor
sbb
repnz
out
lock
clc
add
ljmp
stc
xchg
cmp
cmc
dec
push
sub
or
ficoml
in
lock
lahf
pop
cmp
mov
testl
clc
push
adc
ss
cmc
mov
fistps
sti
fnstenv
lret
pop
dec
adc
pop
sub
xchg
jl
jno
cld
sbb
shl
jle
stc
lock
push
lods
mov
xchg
and
cmp
mov
push
mov
mov
mov
loopne
data16
push
lahf
pusha
mov
mov
xchg
sbb
ss
shrl
jnp
bound
adc
ret
pop
dec
lea
push
sbb
or
pop
sub
rorl
push
fbstp
push
mov
cs
hlt
clc
aas
jle
rcll
jb
rcll
divl
mov
rcrb
les
xor
mov
sti
test
cmp
push
cltd
cltd
add
mov
add
mov
and
jnp
push
mov
mov
push
xor
shlb
pop
pop
xchg
out
loope
dec
xchg
push
push
popa
jp
dec
roll
mov
ss
inc
mov
push
xchg
lcall
addr16
jae
xor
lods
mov
xchg
subl
add
dec
and
repz
dec
fmull
mov
push
push
xchg
mov
es
add
or
dec
sub
add
lds
lret
cmp
or
pop
xor
pop
dec
inc
dec
push
cld
adc
fildll
sub
sub
lcall
popa
xchg
sbb
rcr
fucomip
int3
mov
sti
and
cmp
das
data16
xor
dec
inc
ss
jno
push
les
xor
test
lahf
and
jb
xor
inc
andb
scas
lahf
lock
shlb
jmp
cmp
jl
mov
mov
xchg
ja
iret
pop
jnp
in
rcl
pop
jecxz
mov
sub
xor
iret
scas
arpl
sbb
arpl
mov
mov
nop
push
sahf
outsl
stc
lahf
cmp
push
bound
inc
push
stos
jne
jae
leave
out
outsb
dec
cmp
inc
in
test
push
loop
imul
cmp
decb
adc
cmc
xchg
xor
push
mov
sbb
insl
mov
cmovno
inc
sub
and
mov
xor
movsl
mov
aaa
es
mov
shrl
ret
out
sub
add
rclb
clc
sbb
rorl
lock
mov
loope
scas
and
fnstsw
xchg
dec
xorl
dec
into
mov
outsl
pop
popa
mov
clc
fs
sbb
sub
jecxz
add
jmp
cmc
xchg
push
mov
push
stos
jae
sti
cmp
mov
mov
cwtl
push
or
xchg
cmp
push
or
and
cmpl
ljmp
in
pop
sub
mov
sahf
sahf
imulb
mov
nop
mov
and
into
mov
lds
sub
insl
in
jne
test
push
pop
jp
add
jbe
out
mov
adc
aad
add
mov
and
scas
push
fwait
lods
fisubs
sub
xchg
xor
loope
add
mov
test
movl
fiadds
andb
jns
adc
add
inc
mov
cwtl
in
out
psrlq
js
pop
cmp
xchg
fnstsw
pop
roll
lret
and
jge
mov
dec
sbb
jg
mov
cld
ja
aam
cli
jle
sarl
push
mov
clc
sbb
sti
jno
imul
or
nop
mov
jbe
add
jno
pop
hlt
dec
sbb
aad
cmp
xchg
cmp
jp
push
jge
outsb
xchg
push
cmpsl
mov
add
out
add
fidivrs
mov
and
idivl
mov
or
std
jmp
cltd
push
loope
xorb
add
mov
ja
fdecstp
aad
cmpl
lret
leave
ffree
sub
mov
je
pop
push
nop
cmc
mov
xlat
ret
mul
inc
nop
rcrb
sti
mov
int
mov
icebp
cwtl
mov
dec
repnz
js
adc
mov
dec
push
sbb
push
pop
mov
inc
test
negb
cmc
jnp
and
leave
lods
neg
lcall
stc
cmc
js
xor
mov
mov
add
in
jecxz
bound
ljmp
leave
inc
cmp
pop
sbb
pushf
mov
push
or
fcoml
loope
mov
pop
sti
mov
outsl
sbb
addr16
mov
pop
cmp
xor
push
xor
das
sti
jae
aad
mov
pop
pop
adc
arpl
scas
pop
sbb
lock
mov
rorw
fwait
addr16
sub
mov
push
stc
inc
mov
das
or
lcall
dec
pop
jp
stos
mov
pop
stos
ret
popa
pop
jnp
mov
fisubl
add
sahf
mov
push
xchg
or
pop
bound
sahf
leave
sbb
jle
daa
testb
or
flds
shrb
js
flds
push
pop
iret
ja
std
ja
mov
sub
es
mov
xor
cmp
inc
xchg
imul
sub
or
pop
jl
push
aas
jp
or
xor
fucompp
push
cmp
movsb
les
cmp
dec
lock
jb
xchg
xor
xchg
jl
add
pushf
test
ss
iret
xchg
pop
sahf
mov
lock
test
inc
push
cli
add
cwtl
xchg
jmp
jnp
shrb
push
ret
xor
inc
in
bound
xor
sbb
cmpsb
dec
mov
sahf
push
sbb
pusha
jb
fdivs
fstpt
mov
sbb
andb
mov
lods
inc
out
or
repz
and
scas
mov
sarl
xchg
out
outsb
inc
repnz
or
dec
xlat
mov
int
mov
cmpsb
cwtl
mov
cmp
lahf
jo
mov
bound
inc
pop
xchg
mov
xchg
cld
inc
mov
aam
pop
shlb
daa
add
pop
fidivrs
je
dec
loope
enter
pop
sub
mov
push
cmp
cmp
mov
imul
sub
push
and
fisubrs
adc
jno
push
push
add
ljmp
mov
add
mov
lock
mov
popa
loope
enter
mov
sub
loop
fsubs
push
cmp
enter
imul
into
jns
mov
addr16
adc
mov
mov
adc
adc
dec
xor
mov
add
mov
mov
mov
push
inc
iret
cmpsb
insb
clc
or
mov
repnz
push
adc
push
pop
pop
ja
loopne
xor
xchg
adc
loopne
push
mov
sub
out
lods
enter
imul
push
dec
dec
mov
or
mov
inc
cmp
into
cld
lcall
xchg
adc
sbb
repnz
push
pop
xor
or
xor
and
push
fistpll
sub
lods
clc
std
jg
or
add
mov
jno
imul
mov
sbb
xchg
and
test
cmpsb
xor
jae
jp
adcb
js
insl
dec
mov
inc
mov
adc
loope
xchg
aas
aaa
repz
loopne
repz
xchg
loop
outsl
outsb
cmp
test
repnz
insl
js
hlt
cmp
ss
cmp
fs
sbb
push
or
sub
and
cld
imul
push
arpl
adc
jge
mov
pushf
es
or
popa
cli
jge
fdivs
lock
into
sub
movsb
jne
cmp
inc
icebp
ficoms
mov
cmp
nop
push
dec
shl
mov
ja
mov
rcll
loopne
nop
fcoms
insl
mov
push
sbb
divl
aas
in
dec
mov
add
pushf
xchg
pushf
in
aad
out
je
cmpsl
inc
xchg
sbb
mov
nop
out
and
lods
mov
scas
mov
cmp
mov
and
in
iret
inc
lahf
push
cld
or
test
dec
idivb
lods
pop
repz
popa
dec
mov
pop
add
mov
cs
cwtl
inc
pop
int3
pop
and
fstpt
lods
mov
arpl
mov
stos
push
lcall
dec
repz
pusha
mov
xchg
dec
fwait
outsb
in
fwait
rcrb
inc
jmp
cmp
adc
add
xlat
fsts
mov
in
jecxz
clc
mov
loop
pop
aaa
pop
pop
mov
xor
push
mov
pop
out
loope
inc
subb
cwtl
pop
or
push
scas
lock
daa
decl
jmp
lret
pushf
jo
dec
cmp
fdivp
cmpsl
add
adc
push
xchg
iret
xor
cmp
lds
out
push
push
jecxz
dec
test
jp
add
xor
push
push
mov
arpl
test
test
cmc
jbe
xchg
and
loop
xchg
sub
stos
sbb
movsl
sub
or
inc
xchg
lds
dec
jecxz
mov
inc
adc
mov
push
ljmp
fs
stos
or
or
loope
into
popa
adc
mov
mov
jecxz
or
xor
stos
add
mov
mov
mov
push
sbb
nop
push
push
inc
pop
fsubl
cmc
mov
pop
mov
or
lods
mov
lock
cmp
and
adc
loopne
leave
jp
cs
sub
jecxz
lds
fidivrl
sti
scas
call
mov
xlat
xchg
arpl
or
test
sub
in
es
aaa
movaps
sub
push
xchg
jnp
mov
arpl
cmp
push
xorl
rcll
add
cmp
ret
xorl
mov
xchg
icebp
pop
mov
rep
ret
addr16
pop
jns
push
sub
xchg
lret
cmp
cmpsb
jmp
sbb
adc
dec
dec
sub
into
jmp
mov
dec
test
ss
push
ret
insl
jmp
push
mov
push
inc
mov
push
push
xchg
mov
hlt
aad
shrl
mov
cli
pop
cmpsl
lods
jns
add
stc
in
aaa
jle
ljmp
xchg
lcall
dec
jl
push
sub
add
pusha
ljmp
jge
dec
fdivp
mov
mov
lods
pop
lret
push
pop
push
sbb
adcl
jno
sti
mov
js
pop
popf
test
loope
xor
push
pop
gs
cmc
hlt
decl
push
imul
ja
inc
add
aad
mov
cld
test
inc
push
sbb
out
fists
xchg
sbb
dec
pop
cmp
insb
rcrl
xchg
leave
test
lret
jecxz
cltd
and
cmp
mov
aas
inc
cld
scas
mov
inc
adc
shlb
and
pop
mov
roll
cmpsl
stos
mov
cmp
inc
inc
sbb
dec
cmp
aam
push
jns
ret
sbb
push
int3
fisubl
cmp
cmp
les
add
arpl
sbb
fadd
and
shrl
insl
mov
fucomp
bound
jecxz
shll
mov
mov
inc
jo
lock
data16
and
jmp
dec
out
or
mov
xchg
mov
insl
dec
sub
cmp
ffree
mov
push
aaa
add
push
fst
setbe
adc
mov
outsb
sbb
out
pop
jno
bound
lret
or
ds
lods
cltd
dec
addr16
scas
daa
cwtl
fcompl
sbb
mov
cld
xlat
cs
mov
aad
jmp
mov
cltd
outsb
test
inc
or
test
gs
push
inc
into
mov
push
lcall
pusha
imul
mov
sbbb
push
lret
fldt
inc
rorb
inc
in
mov
xor
push
pop
cmp
add
pop
insl
fwait
push
or
cwtl
mov
inc
int
cmc
sbb
jo
bnd
or
dec
sub
and
push
shl
push
fsubr
cmp
mov
mov
xchg
sbb
xchg
jp
repz
xor
jle
outsl
das
loop
imul
scas
push
shl
push
cmc
xchg
inc
fmull
mov
movsl
rcll
mov
mov
pop
xchg
adc
pop
sbb
arpl
pop
dec
push
cmp
jo
arpl
lods
adc
icebp
test
jmp
fisubl
iret
mov
mov
mov
inc
mov
xchg
jmp
cmp
roll
adc
pop
add
scas
cmc
jp
in
pop
lret
inc
and
mov
add
rolb
ret
cmp
out
add
sbb
sbb
push
add
jmp
sbb
fnstsw
or
mov
inc
fcompl
fldenv
sbb
mov
sahf
xchg
orb
lea
pop
rol
sbb
sbb
imul
mov
push
or
mov
sub
out
dec
jp
sub
mov
mov
xchg
loop
arpl
xchg
xchg
lock
inc
xchg
dec
leave
loopne
outsb
sar
idivl
mov
fmull
add
scas
dec
popa
hlt
dec
nop
inc
in
iret
mov
data16
xchg
sub
dec
lea
sbb
mov
gs
mov
push
mov
movsl
sbb
in
fs
mov
out
cmc
xchg
test
out
inc
and
mov
jno
xlat
js
mov
xor
dec
mov
jbe
xor
enter
divps
shlb
fcomps
das
outsb
pop
dec
call
dec
jnp
mov
jns
lahf
jmp
mov
cmpsb
mov
xlat
jo
mov
lahf
pop
or
repnz
xor
dec
cmpsb
insb
push
movsb
repz
xor
bound
sub
js
cwtl
inc
cld
jg
xchg
lret
sti
sub
arpl
adc
aad
add
shrl
jo
push
mov
mov
testl
inc
jo
mov
pop
push
jo
mov
cmp
cmc
adc
mov
andl
dec
cmp
mov
jmp
adc
inc
mov
or
mov
push
imulb
out
divb
and
insb
lahf
inc
imul
sub
int3
int3
xor
xlat
adc
jl
jl
inc
stc
hlt
decb
xor
lret
add
mov
adc
movsb
loope
inc
jb
or
popa
imul
pop
mov
sbb
and
rolb
mov
adc
and
dec
test
aad
or
scas
js
dec
add
es
rcrb
cmp
fistps
jp
aad
sub
icebp
aas
mov
in
and
repnz
loop
pusha
js
dec
sbb
loope
xchg
and
mov
inc
xor
cmp
push
rcl
std
fistpll
lods
xchg
std
fldcw
leave
dec
roll
pop
xor
lds
cmp
dec
idivl
inc
hlt
jp
sub
mov
leave
xchg
mov
jge
dec
out
mov
dec
push
ja
sub
out
mov
popa
pop
jnp
sub
push
adc
and
addr16
repnz
fs
in
or
mov
and
adc
lret
mov
jmp
dec
jb
mov
mov
test
gs
fbld
or
popa
std
push
add
insb
adc
push
addr16
popa
adc
push
push
mov
cmp
cmc
enter
in
adc
fistl
shlb
pop
arpl
fcomps
aam
ret
in
bound
adc
scas
jbe
hlt
dec
rolb
ror
jb
push
aaa
aaa
mov
testb
sbb
pusha
pop
mov
in
push
pop
fs
mov
cwtl
adc
pop
mov
push
sub
inc
sub
mov
addr16
and
sti
loop
mov
sarl
stos
test
push
cmovl
xchg
in
mov
add
dec
adc
fstl
cli
shl
push
aaa
stos
push
cli
js
lea
dec
divb
add
pusha
lcall
arpl
cli
push
sbb
nop
sbb
mov
pop
mov
inc
fadds
inc
lahf
or
push
xor
nop
inc
insl
cmpsb
push
lcall
mov
pop
pop
andl
jl
mov
pop
scas
loopne
out
xlat
pop
jle
rolb
mov
or
jmp
or
jle
dec
mov
jg
pop
mov
ret
fs
jno
lret
fadd
rolb
cs
notb
and
mov
lret
add
cmp
push
fsubl
sub
pop
mov
jns
mov
popa
out
je
shlb
jo
push
in
xchg
call
movsl
outsl
mov
jecxz
mov
movsl
cmp
cmp
mov
int3
outsl
fbstp
dec
jp
ljmp
pop
aad
cwtl
pop
xor
scas
gs
push
push
push
sbb
xchg
jb
mov
insb
cmc
jb
adc
and
test
rolb
rcll
pop
mov
sbb
test
in
inc
cmp
push
stos
add
sub
or
into
shlb
jne
push
pop
jg
mov
into
lock
xchg
mov
or
jno
jbe
adc
pop
loopne
cmp
shl
mov
mov
sub
sbb
dec
add
out
mov
jno
push
ud1
mov
jnp
add
in
jg
jecxz
sub
xlat
cmp
divb
xchg
lret
adc
rcr
add
mov
loope
outsl
jae
inc
imull
mov
shrl
enter
pop
lock
pop
adc
js
stos
ret
es
xchg
add
lods
mov
ja
out
jl
fs
push
mov
int
push
adc
jge
arpl
jne
enter
xor
popf
pop
mov
jnp
aam
pop
push
stos
pop
gs
das
mov
mov
mov
jge
pop
jge
inc
pinsrw
adc
scas
rcrb
jo
daa
outsl
inc
sub
out
adc
rorb
jl
mov
push
jno
inc
mov
push
outsb
xor
jns
or
stos
stos
jbe
outsl
xor
push
jl
pop
push
mov
jle
and
push
add
clc
nop
movl
aaa
loope
loopne
xchg
lret
fmull
stos
pop
dec
mov
bound
test
mov
into
aaa
jecxz
orl
xchg
int3
mov
loope
sbb
mov
sbb
cmp
inc
dec
mov
pop
nop
lods
mov
mov
ret
outsl
and
icebp
ljmp
cmp
xchg
iret
idivb
repz
xchg
inc
mov
ss
es
inc
fcomip
bound
xor
out
nop
lcall
outsb
je
sub
faddl
movsl
aaa
es
mov
rclb
dec
sub
and
iret
roll
push
mov
add
mov
push
mov
ja
pop
or
test
repnz
inc
jmp
mov
hlt
test
js
add
gs
mov
fmull
mov
ss
ret
xor
push
lods
scas
mov
sbb
out
scas
xlat
push
aas
mov
jmp
and
std
out
adc
mov
sbb
pushf
cmpb
sbb
jle
pusha
je
add
in
mov
and
mov
mov
pop
jae
xchg
sbb
dec
mov
mov
in
xchg
in
std
insb
and
data16
sbb
fdiv
cld
xor
dec
ret
mov
push
push
xchg
xor
into
push
repz
add
out
add
jge
add
sarb
dec
pop
lea
outsl
in
repz
pop
mov
jns
or
jg
sbbl
xor
push
jl
dec
arpl
lods
dec
popf
push
xchg
jbe
ret
clc
mov
dec
or
adc
jnp
and
sbb
add
jnp
icebp
push
fsubrp
jno
ja
js
xchg
addr16
sbb
add
cmp
jae
adc
inc
and
ret
xor
notb
cmp
add
enter
adc
popa
mov
push
out
shll
divl
lods
mov
xor
xor
stos
xlat
jns
add
sub
add
jmp
xor
jp
out
leave
lods
es
mov
mov
fs
shrl
inc
add
and
aaa
pushf
pushf
push
inc
adc
in
sub
pop
imul
add
shll
cltd
jbe
xor
mov
and
aam
aam
icebp
mov
fimuls
shr
fnstsw
leave
ds
in
scas
addr16
xor
mov
aas
cli
fsubl
cld
xchg
mov
cltd
movl
aaa
and
notb
ss
inc
rolb
int
frstor
ja
loopne
lahf
arpl
jmp
inc
dec
or
xchg
or
inc
lods
movsb
pusha
shlb
sbb
xor
and
xor
mov
pop
sub
shrb
mov
call
mov
sub
jle
gs
lock
add
or
and
xchg
adc
xchg
dec
or
pop
cwtl
jge
mov
mov
cmpsb
mov
or
fwait
dec
ret
xlat
fadds
mov
lock
std
fadd
push
icebp
mov
push
adc
or
mov
dec
push
pushl
sub
inc
in
outsb
iret
or
into
std
jae
push
xchg
push
cli
in
cltd
push
test
fwait
sub
ja
cmp
in
test
jns
test
fsubl
or
push
cmp
lret
mov
in
adc
popf
or
mov
mov
cmpsl
mov
movsb
jbe
mov
jne
jo
sarl
sbb
icebp
cltd
mov
into
push
shr
lcall
das
lret
jmp
dec
dec
leave
negb
cmpsb
ret
add
dec
cmp
jae
ljmp
cmc
pushf
adc
jno
jle
flds
loop
mov
cmp
mov
inc
cmp
xchg
loope
mov
jno
movsl
jo
push
cmpsl
movsb
pusha
xchg
stos
jae
adc
xchg
mov
inc
imulb
cmp
notb
dec
dec
test
fmuls
jmp
and
xchg
or
gs
pop
cmp
push
mov
mov
cltd
xor
jle
lods
clc
add
mov
cmpsb
pop
movsl
jnp
stos
lret
mov
pop
cmp
fdivrs
dec
cmp
popa
fcmovb
cmp
out
push
fsubr
mov
mov
cmp
in
movsl
push
icebp
adc
mov
testl
inc
xchg
divb
nop
les
jmp
cmp
pop
aad
jbe
in
jle
in
sbb
mov
jb
xlat
cli
inc
jno
imul
iret
bound
les
xchg
hlt
pop
xor
cmp
jp
cmpsb
push
and
dec
mov
jne
push
pop
movsl
mov
shl
scas
sub
inc
mov
jae
into
decl
adc
cmc
or
mov
cmp
dec
xor
inc
sbbb
jo
repz
adc
stos
dec
sbb
push
sub
rcrb
cmpl
les
lret
sbb
lods
lods
sub
mov
sbb
dec
cmc
subb
test
fcmovnbe
or
sahf
mov
jmp
pop
sbb
xchg
cmc
addl
jmp
push
mov
lds
dec
push
out
pop
in
das
dec
mov
jne
dec
das
test
push
xchg
into
mov
nop
add
test
inc
inc
mov
cmp
iret
test
ret
stos
pop
jl
repz
pusha
icebp
mov
jmp
pop
mov
push
fwait
das
push
bound
xchg
mov
scas
xchg
fidivrl
mov
sarl
mov
sbb
fdivrl
jo
jno
cmpsl
cmc
enter
nop
mov
sarl
inc
loope
fcomi
hlt
fstp
insl
cmpsl
pop
movsl
outsb
xor
push
and
inc
dec
pop
xor
jmp
cmp
pop
mov
leave
and
jge
dec
mov
bound
daa
dec
mov
adc
lods
ljmp
or
mov
icebp
inc
cmp
mov
sub
in
inc
add
loope
jl
cli
testl
sub
dec
and
fiadds
in
outsl
imul
sbb
out
xor
or
push
xchg
xor
aas
jbe
sub
movsl
lock
das
repz
dec
pusha
mov
sbb
cmpsl
pop
pop
iret
jns
cltd
xchg
push
dec
add
dec
aad
push
xchg
fcoml
hlt
lea
clc
lods
or
jns
cmpsl
push
sub
shrl
cli
cwtl
push
push
sbb
lea
xchg
xor
adc
jb
lods
leave
jge
xchg
xor
xchg
and
incb
mov
mov
sub
or
ljmp
mov
xor
pusha
push
cmp
adc
sub
mov
nop
punpckhbw
pusha
dec
jbe
fsubl
adc
sub
lock
mov
in
bound
shlb
cwtl
lock
pushf
loope
push
push
push
pop
call
sbbl
popa
xchg
dec
mov
aam
mov
push
mov
cs
jbe
and
sub
push
out
int
sub
cs
aad
imul
shrl
push
adc
mov
mov
les
jae
fdivrl
and
pop
pop
inc
aam
cmc
shl
push
sbb
loop
cmpsb
lds
pop
insl
and
inc
xrelease
insb
lock
xor
or
push
pop
push
fwait
in
out
test
add
call
jae
or
faddl
popf
xchg
in
or
daa
lods
orb
mov
cmp
sub
or
xchg
jbe
sub
fldenv
fnstsw
jg
out
lahf
sub
mov
mov
fistl
loop
mov
mov
dec
and
ret
aas
out
jae
cmc
xor
sbb
not
lahf
ss
and
push
mov
ret
ja
icebp
xor
inc
add
imull
aad
xor
jne
lcall
stos
xchg
scas
sbb
jno
insl
cmc
push
sub
ds
jae
xorl
and
jecxz
add
cmp
arpl
push
mov
push
ror
mov
adc
insb
xchg
out
mov
scas
movsb
or
fidivl
mov
ja
fsubl
adc
jbe
sub
jl
ds
and
sub
pop
aaa
hlt
bound
ficompl
pop
std
cmp
in
lea
push
scas
jae
pop
leave
stc
call
jg
int
insl
sub
lds
insl
pop
xor
in
push
mov
fs
es
idivl
outsb
push
fsubr
nop
lgs
and
adc
dec
dec
push
ret
outsl
push
ficomps
std
lret
aaa
rcrb
je
pusha
xchg
sbb
inc
gs
dec
cmp
inc
int
rcrl
sub
pushf
cmpsb
stc
sub
sub
dec
mov
inc
push
mov
rcr
int3
ud1
mov
mov
lahf
shlb
fiadds
incl
pusha
jo
xchg
jnp
adc
mov
xchg
push
jmp
push
dec
mov
rcrl
das
sbb
cmpsl
test
push
add
jl
imul
or
and
xchg
movl
sbb
call
xor
push
jo
mov
mov
mov
out
dec
adc
mov
mov
cwtl
ja
es
xchg
xor
inc
xchg
idivb
out
add
popa
jmp
mov
ss
rcrb
mov
arpl
fwait
jo
int
lahf
and
jne
adc
pop
inc
iret
sub
add
cmp
insl
in
add
into
hlt
aaa
lock
or
mov
daa
xchg
psubsw
xlat
movsb
xor
in
push
out
mov
out
sub
xchg
fwait
lds
test
xchg
push
in
repz
stos
shl
fstl
lret
jmp
push
data16
inc
xor
inc
inc
push
lcall
jmp
pop
adc
or
or
jmp
lret
push
push
jne
xchg
mov
pop
cmp
out
in
mov
cmp
test
lods
cltd
jns
mov
movsb
mov
xor
xchg
sbb
and
nop
mov
cmp
mov
xor
add
pop
push
das
pop
sub
in
and
rcrb
loopne
test
shlb
inc
add
bound
dec
mov
insb
or
push
aad
pop
pop
mov
xor
dec
adc
js
popf
clc
sbb
and
mov
cli
cmp
clc
clc
mov
aad
and
aaa
cmp
jp
jp
jae
dec
adc
mov
mov
push
pop
adc
add
dec
idivl
test
aam
hlt
imul
loop
or
in
sbb
and
xchg
push
loope
movsl
je
pop
mov
lahf
lcall
pop
test
dec
jbe
and
imul
ds
push
push
mov
mov
jecxz
sub
push
or
lods
xor
fcoms
and
adc
shl
inc
addr16
fists
mov
hlt
push
xlat
jmp
incl
das
test
ret
dec
and
push
sahf
repnz
stos
inc
xchg
xor
pushf
jle
inc
xchg
pop
jnp
jle
pop
jne
dec
push
mov
cs
cmp
out
jbe
push
push
rolb
cmpb
push
cmp
insl
add
fstl
data16
mov
rclb
fmull
addr16
stos
pusha
sbb
divb
test
or
addr16
mov
push
jge
incb
es
into
mov
mov
add
mov
push
aam
mov
and
punpckldq
dec
insb
push
lea
cmp
sub
cmp
mov
pop
sub
lods
inc
sbb
call
jo
mov
testb
out
push
mov
in
iret
xor
push
mov
outsb
pushf
sbb
aas
imul
nop
rcll
mov
adc
std
insb
pop
jle
push
out
mul
pop
mov
nop
dec
es
pop
loope
xchg
xchg
mov
ds
in
sti
loop
pop
std
orb
icebp
paddw
mov
loop
mov
and
adc
push
cmpsb
or
sti
xorl
int3
xor
sahf
jg
das
fadds
shll
sbb
icebp
lock
sbb
jp
and
rcrl
or
pop
aaa
xor
add
adc
dec
cmp
lcall
sub
test
push
pop
pop
sub
and
fxch
ljmp
mov
pop
inc
or
outsl
pop
repnz
pop
lahf
sbb
jnp
adc
sub
xor
jecxz
and
lods
jg
add
mov
dec
lds
and
push
lret
in
and
and
push
sti
xchg
sub
pop
int
js
shlb
stos
mov
inc
in
loop
sbb
lods
popa
outsb
adc
in
fwait
push
xor
jae
push
stos
push
cli
pushl
std
xor
daa
cmp
insb
jmp
daa
fstps
dec
ret
xchg
or
imul
mov
inc
ret
ret
leave
sti
inc
xchg
cmpb
dec
cmc
cmpsb
data16
push
out
fidivl
lret
cli
cmpl
fs
das
push
pop
enter
dec
fldt
or
adc
addl
pop
pusha
std
lcall
and
jecxz
movsb
push
or
in
out
inc
cmpsl
xor
js
xchg
mov
rcll
popf
push
fisubs
je
push
inc
stos
cmp
test
mov
push
add
stos
mov
dec
mov
xorl
adc
add
rcrl
cs
test
pop
xlat
into
push
mov
fidivrl
repz
fdiv
mov
jge
mov
dec
rorb
mov
test
lahf
lods
mov
mov
adc
push
inc
mov
jae
movsl
fwait
imul
lods
push
outsb
mov
insb
es
cs
push
push
or
mov
sti
sub
leave
int
fs
insb
cmp
das
push
popf
mov
xchg
adc
mov
xor
call
xchg
mov
data16
jmp
push
imul
aas
rol
adc
lods
cld
fistpl
push
adc
xchg
leave
loope
in
mov
into
mov
mov
es
sub
cmp
push
pop
mov
dec
in
add
loope
lcall
push
mov
addr16
sahf
outsb
dec
mov
or
cmpl
push
lahf
ljmp
lcall
mov
mov
push
add
jbe
mov
out
xchg
jbe
arpl
int
cmp
subl
enter
jne
jmp
mov
insb
cwtl
mov
mov
in
call
arpl
std
and
jmp
std
imul
aas
jle
fcompl
mov
fs
test
inc
mov
movsb
xlat
ret
lock
cmp
lods
in
or
and
lret
das
out
add
je
decb
aaa
js
stos
pusha
jge
inc
call
jbe
mov
popf
stos
ret
lods
and
jno
mov
pop
or
jecxz
pop
xchg
pop
gs
addr16
xchg
mov
mov
pop
aad
or
jb
sbb
cltd
xchg
push
jp
fdivrl
jmp
shlb
rcr
xor
pop
jne
xor
cmc
out
xchg
nop
in
outsb
pop
pop
mov
out
and
jmp
insb
stc
in
repz
cmc
decb
xlat
dec
nop
inc
js
jno
pop
jle
dec
push
lock
arpl
adc
dec
fbstp
mov
pop
mov
fmull
mov
mov
push
sub
jbe
inc
mov
popa
push
dec
ljmp
adc
adc
gs
jnp
sub
lcall
xchg
int3
ja
jo
xchg
bound
movsb
add
mov
vcomisd
test
sahf
adc
jmp
icebp
in
movl
xchg
call
push
jo
inc
rcrb
pop
xchg
mov
into
or
sbb
and
std
sub
xchg
iret
push
pop
lret
pop
inc
mov
mov
xlat
add
xor
popf
negl
xor
push
mov
call
or
mov
sub
in
sub
test
rcll
cmpsb
mov
jp
add
fcomp
pop
xchg
rcl
dec
adc
aaa
jmp
or
in
xor
out
ret
mov
mov
jnp
mov
repnz
cmp
add
and
ja
cmp
lods
cmp
jmp
fldt
cmpsb
pushf
sbb
mov
pop
mov
nop
dec
add
mov
test
ret
mov
test
and
ret
push
js
mov
lock
adc
and
jae
pop
fistpl
mov
subl
fs
mov
les
lods
inc
cli
insb
lahf
adc
cmp
fstl
push
inc
add
mov
pop
sbb
punpckhwd
dec
call
adc
imul
mov
xor
push
pop
sub
rolb
xchg
mov
icebp
lret
incb
mov
sub
push
mov
or
lock
pop
gs
dec
addr16
imulb
xchg
mov
adc
aaa
sub
pop
dec
out
pop
pushf
dec
mov
cmp
xor
mov
popf
sti
adc
and
sbb
xor
jmp
mov
cmp
sub
mov
dec
xlat
in
mov
dec
ds
cmpsl
jge
jae
xchg
sub
inc
orl
xchg
loope
mov
pop
lea
repnz
lcall
inc
xor
ljmp
xor
adc
ss
call
sbb
ss
mov
cltd
in
jle
cmpl
cltd
cld
fwait
dec
pop
or
stos
sub
or
jmp
xchg
mov
arpl
cmp
sub
dec
pop
pop
ljmp
mov
or
inc
shl
push
mov
daa
imul
cmpsb
add
xor
mov
sub
mov
pop
pop
stos
fs
es
call
mov
les
xchg
pusha
pop
mov
and
xchg
sti
daa
mov
mov
sbb
xlat
cmp
shll
aad
mov
ss
daa
push
lret
cltd
pop
pop
push
xchg
test
shl
test
and
stos
test
roll
hlt
repnz
sub
loopne
cmp
jmp
std
and
push
movsl
pop
or
push
and
scas
aas
xchg
add
sub
lret
insb
daa
and
push
cltd
mov
dec
push
mov
xor
in
jle
jnp
cld
out
movsl
add
test
sbb
jno
and
inc
mov
inc
cmp
push
fldcw
shrb
jbe
sbbb
jle
adc
push
mov
xor
inc
push
xor
lock
xchg
cmc
adcl
add
rorl
lret
pop
testl
ja
add
mov
add
dec
inc
mov
xor
jnp
mov
adc
push
js
push
ret
xchg
mov
fwait
in
inc
shrb
xor
push
pop
dec
sbb
aam
and
or
mov
xchg
xlat
mov
and
push
dec
mov
jae
sub
in
ficoml
scas
out
push
in
dec
aam
ret
sub
ja
push
cmc
adc
dec
cli
jp
xchg
cmpb
mov
frstor
dec
xor
out
push
adcl
jmp
shrl
cwtl
nop
ret
test
sub
push
enter
clc
xchg
pop
icebp
movsb
mov
dec
jbe
or
fcoml
pop
adc
imul
add
shll
or
in
push
pop
and
jb
sbb
roll
je
jp
jno
inc
xor
or
push
imul
addl
mov
sbb
int
push
sarb
lcall
addr16
sahf
popa
jno
xor
test
push
hlt
test
jmp
divl
pop
mov
jae
pop
inc
adc
dec
mov
mov
xor
mov
jae
push
pop
lods
and
push
jae
testl
mov
xorb
aas
pop
into
or
out
push
mov
pop
shlb
mov
dec
int
ljmp
scas
xchg
add
sub
rcl
lods
sbb
fsubrs
and
pop
insb
jno
add
dec
jae
push
jne
push
adc
mov
pop
inc
xchg
sbb
stos
dec
push
bound
ss
adc
imul
xchg
xor
pop
cmp
int3
cmp
mov
jno
mov
es
iret
mov
lahf
rolb
fists
insb
jg
rcl
std
mov
lret
insb
clc
jns
mov
and
aam
cmpsb
out
ret
out
ds
lret
xorb
in
aam
das
push
sbb
pop
adc
lock
ds
mov
mov
sub
xchg
jnp
pop
push
pop
xchg
rol
or
cmp
jno
clc
jb
sub
adc
pusha
adc
xor
jne
cmp
hlt
addr16
jle
cmpxchg
cmc
jne
xor
cmp
dec
iret
pop
shl
jecxz
mov
add
scas
fidivrs
or
divl
cmp
jno
mov
sub
mov
mov
sbb
daa
iret
pushf
ss
and
xor
inc
scas
std
mov
or
mov
ja
icebp
outsb
cld
ror
fcomps
sub
arpl
aad
mov
cmp
mov
mov
fs
xchg
addl
cld
dec
and
push
aaa
fisubl
aad
ss
dec
xor
call
int3
stos
push
lods
xor
pop
call
std
add
xchg
bswap
sbb
jno
wrmsr
repnz
lahf
aad
es
pop
xchg
lret
mov
sbb
cmpsl
jmp
or
aas
add
mov
or
enter
dec
mov
fldcw
nop
fs
inc
and
mov
push
testb
in
outsl
lahf
push
fwait
dec
add
psubq
adc
sbb
xchg
loop
xchg
in
out
dec
dec
bound
in
lcall
or
mov
fsubl
push
js
shl
jl
or
add
ss
test
cltd
int3
mov
sahf
jno
out
and
sub
mov
pop
cli
imul
mov
cmpl
cmpsl
lea
mov
fbstp
or
leave
aas
aad
dec
sub
loope
push
xor
cwtl
negb
xchg
mov
sbb
and
and
dec
mov
das
test
mov
or
xor
shrb
repnz
pop
in
fdivs
nop
sub
fstpt
out
jo
xor
mov
shrw
cltd
orb
jnp
cmpb
scas
mov
sti
and
cld
add
push
in
dec
cmp
adc
loopne
fwait
lods
mov
sbb
push
sub
test
push
dec
fisttpl
xchg
or
lahf
add
bound
fcompl
into
pop
insl
pop
cmc
push
add
push
aad
fmulp
push
inc
add
jge
data16
mov
xchg
movsl
stc
mov
push
mov
push
sarb
jle
rclb
mov
sbb
lods
mov
sahf
sahf
add
inc
jo
jle
adc
xor
es
jo
lcall
push
pop
cmp
pusha
out
mov
call
xor
xor
inc
jecxz
addr16
clc
mov
rcrb
push
fwait
nop
xchg
or
stos
mov
icebp
push
loopne
or
push
inc
std
cmpsl
inc
cmp
insb
push
cld
xchg
ds
add
sbb
leave
push
popf
rorl
mov
jbe
xor
addr16
insb
sbb
sub
lods
xchg
ljmp
dec
lret
psubsw
mov
lret
mov
test
xlat
js
inc
mov
jne
inc
push
xor
aaa
jmp
cmpsb
repnz
fstps
jecxz
xor
adc
push
sub
sbb
je
cwtl
inc
popa
jbe
call
dec
pop
lea
xlat
jecxz
sub
dec
and
sbb
or
enter
stc
xor
in
aaa
mov
sahf
sahf
movlhps
adc
sti
rclb
mov
rorl
pushf
int3
mov
jbe
aaa
call
and
inc
jno
sub
fsubs
add
jecxz
cwtl
jmp
fdivl
push
adc
dec
push
outsl
and
lds
mov
sti
mov
mov
popa
xchg
pusha
add
js
daa
push
push
divl
loop
cmp
cmpsl
dec
jle
inc
ja
imul
shll
lds
enter
mov
push
repz
xorl
aaa
lds
or
jp
out
push
in
aam
cmp
insb
xor
cmp
sbb
sbb
cmp
lock
ss
xchg
popf
push
xchg
cmpsl
push
add
add
mov
push
xchg
les
mov
sbb
clc
gs
fsts
lods
popf
out
into
test
inc
inc
dec
push
jge
mov
cwtl
bound
adc
jae
stc
cwtl
out
jl
add
mov
inc
jg
jg
sbb
hlt
adc
push
fmulp
jge
sbb
inc
fstpt
ficomps
jo
daa
and
cmp
mov
mov
lock
dec
and
cmp
push
clc
sbb
dec
jae
sub
sbbl
adc
imul
inc
pop
xchg
inc
pop
stc
xchg
stos
pusha
divb
insl
rolb
mov
mov
mov
fldenv
bound
push
jle
pusha
aaa
mov
stos
dec
push
xor
cmp
lods
out
or
out
add
pop
lods
adc
jns
xorl
movsl
mov
lahf
cmp
out
xor
adc
stos
adc
lahf
punpckhwd
test
or
movsb
xchg
in
shlb
mov
mov
mov
pop
dec
pop
push
lret
inc
cmp
dec
xor
or
fucomp
lret
pop
loopne
repnz
or
out
fprem
xchg
rcr
or
pop
inc
scas
mov
inc
mov
push
ja
loopne
arpl
fs
pop
mov
adc
filds
test
notl
cmp
jo
loop
push
pop
in
aaa
daa
repnz
mov
sub
cmpsb
adcb
xchg
push
push
mov
pop
mov
cmp
xchg
dec
mov
scas
pop
pop
pmaddwd
dec
cs
gs
xor
in
insl
imull
sub
lret
sub
fcoml
and
pop
jmp
stc
mov
popa
xorb
xor
xchg
stos
leave
pop
aaa
adc
xchg
sbb
in
lret
sti
loop
into
lods
dec
inc
aaa
xchg
rolb
jno
hlt
pop
pop
pushf
aas
mov
repz
jmp
scas
mov
jno
mov
push
sub
repnz
mov
lock
push
sub
sub
xor
scas
loop
sub
scas
sbb
loope
js
xchg
test
inc
lret
pop
cmp
scas
sbb
pop
push
xchg
xchg
mov
sbb
fdivl
mov
adc
int
in
jb
add
sub
es
mov
lret
inc
icebp
out
pop
xor
jns
aam
mov
in
mov
test
mov
insb
jae
pop
mov
inc
iret
mov
pop
addr16
cmp
mov
jp
inc
mov
lods
cmp
inc
clc
pop
or
add
daa
in
adc
push
mov
loope
lds
xchg
out
xor
int3
and
cwtl
inc
jns
mov
and
or
sub
arpl
add
inc
aam
mov
jmp
imul
int
mov
mov
nop
sbb
add
mov
sbb
inc
stos
xor
add
enter
cmpl
lods
push
dec
pop
add
lock
xchg
or
mov
fstp
inc
insl
daa
mov
lods
mov
lahf
fsubl
ds
ficompl
sub
lret
pop
sarb
jmp
test
sub
fdivrl
icebp
and
mov
pop
iret
loope
faddl
imul
jae
nop
add
clc
xor
jbe
and
push
movsl
xchg
jbe
inc
jmp
es
std
mov
rcll
sub
scas
test
rcl
ds
mov
int
jp
xchg
sbb
mov
cwtl
ja
jne
call
addr16
cmp
shlb
xor
dec
add
mov
xchg
mov
aaa
notl
rclb
ds
ss
and
add
mul
int
out
out
inc
pop
dec
test
inc
push
xorb
add
mov
adc
mov
or
mov
xchg
cmp
fsubrs
push
jle
mov
loope
int3
dec
fdivrs
mov
or
dec
std
xchg
stos
into
or
into
xor
stos
lds
pop
sub
into
sub
call
adc
xor
mov
sti
pushf
stos
mov
scas
pop
push
jecxz
dec
iret
jnp
xchg
push
fistpl
sahf
add
clc
mov
adc
pushf
out
rorl
iret
cmp
inc
sub
push
out
or
decb
call
imul
jp
stos
jp
std
push
sti
cltd
std
mov
mov
pop
in
or
std
sub
jo
std
xorl
rorl
pusha
outsb
in
mov
scas
lcall
int
stc
movzbl
mov
push
xchg
or
adc
cmp
push
add
adc
mov
lock
inc
add
fcomps
jg
mov
data16
or
data16
mov
push
mov
xchg
jl
fstpl
insb
sub
sub
stos
stc
inc
cmp
mov
mov
repnz
or
je
push
pushf
pop
and
sbb
fs
sub
sub
popa
loope
pop
divl
pop
adc
pop
aad
dec
jae
or
punpcklbw
sbb
scas
and
pop
dec
mov
stos
movsb
int3
or
dec
sbb
arpl
jge
cmp
scas
mov
inc
pop
xor
sbb
cs
into
data16
flds
test
rolb
inc
xchg
loopne
sbb
pop
push
sub
dec
fs
cmp
mov
xchg
lds
dec
inc
xorl
mov
iret
movsl
jnp
xchg
fcompl
pop
pushf
push
data16
std
loopne
dec
lahf
add
int3
mov
daa
adc
push
add
stos
lock
lret
adc
or
loopne
sbb
data16
popa
ss
adc
jp
cmpsl
xor
sbb
xchg
xor
int3
js
pop
inc
cmpsb
call
cmp
loope
test
mov
adc
je
dec
pop
clc
into
mov
cltd
fcompl
jno
sub
movsb
fdivrl
cmp
lret
xchg
pop
scas
insl
push
dec
pop
jae
and
imul
mov
and
push
inc
and
je
mov
popa
or
leave
dec
pop
test
daa
test
mov
mov
add
xor
pop
or
jge
bound
fmul
pop
ret
or
add
add
mov
shrl
iret
xchg
pop
mulb
pop
in
rcll
enter
add
cmp
dec
xor
les
je
sub
jg
mov
fsubrs
jp
pushf
sbb
pop
mov
addr16
rcl
pop
lods
pushf
and
popf
cmpsl
fnsave
cmc
movsl
adc
cltd
add
pop
pop
jno
out
test
pusha
fs
push
fdivrl
xor
add
inc
add
mov
addl
ljmp
insl
pop
mov
xor
lea
adc
mov
xchg
arpl
cmc
jmp
push
dec
jg
mov
shl
mov
shrl
jo
stos
jmp
mov
std
dec
xchg
daa
faddp
pop
sub
or
add
enter
mov
fstp
sbb
jo
sub
pop
and
fimull
inc
cmc
inc
xor
insb
fidivrs
or
mov
jb
mov
loop
mov
icebp
pusha
mov
daa
push
pop
in
test
mov
insb
inc
adc
mov
movsl
pop
std
push
mov
idivb
pop
xor
jb
test
js
cmp
mov
movsl
sarb
mov
cmpsl
xchg
sub
jno
mov
inc
faddl
ds
and
or
pop
out
cmp
xor
hlt
xlat
jo
sti
fwait
in
mov
xor
or
inc
hlt
inc
ret
cs
inc
mov
in
addb
and
test
ljmp
in
pop
imul
and
cmpl
loop
jnp
lret
pop
add
push
inc
or
lahf
popa
jno
outsb
cmp
pop
mov
pop
lods
push
mov
dec
cmp
jne
loopne
mov
les
stos
jbe
fisttps
fistps
enter
call
dec
dec
mov
pop
jbe
push
imul
push
push
in
adc
or
inc
mov
scas
cwtl
das
iret
or
in
enter
out
shrl
test
push
mov
xchg
adc
imul
and
jnp
dec
pop
and
lods
out
cmp
movsb
fwait
sub
xor
out
sbb
pop
movsb
faddl
jns
repz
mov
sub
xchg
in
stc
lods
add
mov
jae
pop
movsl
pop
xchg
xor
or
inc
jbe
mov
xchg
test
cmp
xor
mov
insl
mov
js
adc
dec
or
jb
cmp
mov
cwtl
enter
dec
add
mov
add
adc
gs
cmp
test
mov
sbb
in
xor
inc
test
dec
or
xchg
xchg
cmp
lock
ficoms
shlb
aam
xchg
lea
pop
xchg
jmp
int
into
push
adc
sbb
roll
out
xchg
iret
sarb
hlt
ljmp
cmc
mov
xchg
sub
gs
into
pop
add
int3
data16
lahf
mov
ja
push
clc
jae
xlat
or
repnz
xchg
sbb
xlat
insl
cli
pop
dec
lret
aam
sub
ret
xchg
or
es
aaa
stos
imul
icebp
cmc
lods
pusha
mov
xlat
ficompl
dec
mov
fsubs
addl
mov
jp
and
fwait
push
js
fiaddl
and
lock
aas
arpl
shll
lds
mov
inc
lods
int
je
or
push
addb
xchg
cmp
cmp
jo
aam
cmp
pusha
repnz
add
add
cmc
cli
adc
and
mov
js
sub
add
out
lahf
stc
lret
mov
and
movsb
sbb
xorb
dec
push
xchg
jecxz
jo
cli
fs
addr16
ret
adc
pop
mov
and
int
iret
les
insb
sub
sub
inc
fwait
mov
jns
js
xor
negb
lock
xor
ss
mov
fcompl
jge
dec
and
xchg
mov
push
pop
mov
in
add
in
push
jbe
adc
in
inc
mov
push
xchg
stos
iret
ja
mov
test
or
imul
loop
sbb
pusha
cmp
sub
addr16
ljmp
sub
mov
push
mov
call
inc
jmp
out
fwait
jle
mov
subb
mov
jge
fwait
in
jp
sub
jp
je
or
adc
repz
jle
adc
and
mov
ret
loop
fdivrl
cltd
mov
ss
inc
push
imul
sub
push
adc
xor
adc
andb
push
cmc
push
mov
cmp
imulb
out
push
inc
and
into
xchg
xor
aaa
cmp
adc
cmpsb
xchg
pop
sub
push
fnstenv
in
imul
xlat
and
cs
loop
outsl
icebp
scas
jle
dec
pop
xor
test
jle
mov
xor
push
and
jmp
sub
lahf
mov
dec
push
mov
hlt
adc
jnp
fimull
in
add
stos
lret
mov
add
or
arpl
adcl
repnz
cmp
test
inc
sbb
inc
adc
mov
jno
mov
inc
inc
mov
int3
std
adc
add
push
out
or
xor
push
xchg
cmp
in
movsb
insb
sbb
repnz
add
xor
repz
adc
in
lret
pop
push
xchg
adcl
push
xchg
push
sarb
jmp
cmp
aaa
repz
aas
icebp
repnz
cld
pop
mov
push
mov
and
xchg
mov
rep
push
add
inc
push
mov
sub
imul
push
lret
popa
and
pop
push
push
cmc
dec
push
pop
or
push
mov
insb
inc
nop
sbb
inc
xchg
pop
mov
pop
pop
not
or
movsb
outsb
pop
or
sbb
push
js
sbb
sub
outsl
rcl
xchg
hlt
cmp
std
scas
sub
xchg
popa
sar
stos
push
push
pushf
into
xlat
out
arpl
sub
orl
dec
cmp
jne
dec
pop
clc
or
jno
cli
dec
and
or
lcall
stos
int3
mov
mov
pop
leave
imul
lods
xor
out
loope
movsb
fsts
stos
xchg
in
pop
outsl
mov
out
hlt
leave
jecxz
imul
mov
loop
cmp
sub
imul
movb
dec
inc
int3
and
imul
scas
inc
push
lcall
js
dec
push
sbb
sub
sbb
mov
pop
mov
sbb
xorb
je
cmpb
sub
or
test
in
adc
sbb
xlat
mov
or
enter
xor
dec
scas
clc
sub
jb
pop
call
adc
enter
and
xchg
cli
mov
sub
mov
and
pop
ret
shlb
mov
sub
sarb
jbe
mov
jle
cmp
mov
int
push
xchg
mov
les
jl
sahf
mov
sti
addl
dec
jmp
dec
scas
lds
or
daa
enter
pop
push
inc
rcll
das
in
jae
and
cli
adc
mov
push
shlb
cmp
movsb
push
aas
mull
stc
mov
arpl
repnz
jecxz
and
addl
fprem
dec
mov
popf
lret
in
dec
in
outsb
dec
jnp
sbb
jge
jp
orb
jmp
cld
adc
jae
mov
mov
push
adc
sahf
mov
sbb
mov
loop
sbb
push
int3
popf
in
jno
cmpsl
mov
lea
pop
stos
dec
xlat
repz
shrl
addb
jno
test
dec
lcall
testl
mov
cmp
bnd
cmc
push
lcall
loopne
pop
push
and
lahf
leave
mov
pusha
aad
in
jl
mov
sbb
sbb
mov
add
lahf
cmp
mov
into
mov
les
add
xor
cmp
mov
mov
sub
push
fisubrl
or
scas
pop
sub
insl
xchg
pmaddwd
push
inc
xlat
fwait
test
sub
pusha
pusha
cmp
es
xchg
or
add
popf
in
cmp
inc
pop
mov
popa
sbb
adc
inc
mov
pop
jecxz
es
mov
jecxz
jno
jg
sti
mov
loop
idivl
mov
add
cmp
shlb
jne
push
xchg
lret
cmp
sbbb
and
inc
push
mov
test
lret
mov
xchg
fisubs
adc
jge
es
xchg
sbb
jmp
insl
mov
sub
add
pop
mov
lock
call
add
fwait
dec
call
mov
mov
mov
and
hlt
stc
loop
dec
inc
test
rcl
push
bnd
call
enter
and
push
xchg
push
aas
push
push
fs
loope
lock
mov
loop
fldl
je
pop
inc
mov
mov
fxch
repz
sub
lret
push
sbb
or
pop
subb
sahf
jmp
insl
push
add
out
adc
xlat
fbstp
mov
adc
aam
imulb
cld
jae
add
add
subb
push
or
int
mov
ret
cmp
cmp
adc
subb
pop
movsl
fwait
cmpsb
xlat
sti
sub
pop
js
aad
jmp
jl
mov
fisttpl
dec
fildll
xor
push
mov
roll
arpl
jno
sti
mov
fimuls
sub
imul
or
shrl
out
fs
xchg
gs
mov
mov
jne
test
adc
mov
mov
in
ljmp
jecxz
test
aam
imul
adc
cmp
mov
xchg
sahf
or
je
gs
mov
ja
inc
rclb
jmp
les
imul
scas
inc
lds
movsl
mov
mov
test
icebp
je
out
xor
pop
inc
adc
xor
out
leave
jae
jecxz
pop
mov
stos
js
jne
and
mov
inc
push
iret
cmp
dec
mov
pop
pop
rcl
mov
dec
push
stc
jl
xor
movsb
pop
loope
and
pop
xor
outsl
mov
xchg
and
repnz
loope
push
pushf
add
iret
sbb
adcl
fistl
cli
jno
es
es
mov
orps
and
jne
orl
aaa
mov
out
sbb
sbbl
fsubl
and
mov
jae
pop
out
sbb
insb
or
and
hlt
aad
pop
lahf
movsb
pushf
scas
pop
xlat
mov
jl
loop
fidivrl
sub
clc
cmpsl
lret
or
jmp
mov
pop
push
inc
inc
shll
cmp
sti
sub
popa
cmpsl
push
dec
dec
or
mov
sete
inc
xlat
rorl
and
mov
lock
inc
jbe,pn
cld
or
jbe
mov
and
xor
ret
mov
xor
out
mov
xchg
fsubrl
push
fcmove
in
dec
adc
mov
adc
cltd
and
stos
ss
jl
sub
outsb
xchg
aaa
orl
mov
iret
test
inc
sub
outsl
mov
jo
sbbb
pop
add
mov
movl
cmp
andnps
jnp
mov
in
push
out
jae
roll
stos
ss
jb
xor
mov
mov
mov
negl
mov
mov
inc
movsl
movb
ret
outsb
out
mov
push
pop
lods
fwait
sub
jnp
and
dec
push
ffree
inc
adc
es
loopne
push
push
iret
push
mov
fwait
test
lea
sbb
jmp
hlt
adc
mov
xor
mov
dec
mov
add
or
mov
outsl
leave
push
stc
test
int3
cld
xchg
ficomps
leave
cs
or
or
or
jae
fmull
mov
pop
pop
bound
or
iret
push
and
cmp
rorb
lret
fisttps
pop
rorb
mov
push
mov
test
cld
movsl
cmpsb
bound
cld
in
sarl
cmp
sub
jmp
popa
jmp
mov
push
pop
fdivrp
out
testb
and
push
into
sbb
push
aaa
jp
push
js
daa
fxch
cld
mov
jno
jmp
cmp
and
lcall
repnz
cmp
aas
movsl
loopne
mov
daa
mov
shrl
loop
sub
add
sbb
popf
mov
xchg
clc
out
repnz
xlat
inc
cmpl
push
aaa
mov
add
mov
test
mov
mov
sub
push
sub
mov
dec
fnstsw
ret
mov
add
inc
adc
push
and
rcrb
cmc
jns
outsb
push
ffree
xor
sub
ja
cmp
push
fs
sahf
jbe
aas
cld
or
mov
test
loop
sbb
std
ret
out
popf
adc
and
mov
or
imul
repz
sahf
out
aam
pop
sbb
sbb
test
jg
xor
mov
push
inc
push
dec
fmuls
mov
movsb
adc
xchg
inc
inc
cmp
inc
push
filds
xor
adc
movsb
dec
sub
jb
jae
test
sub
sbb
adc
jnp
xchg
enter
arpl
bound
lret
incb
add
and
imul
mov
mov
les
xchg
fiadds
jns
data16
imul
enter
fstps
push
cmpsl
push
and
mov
jne
rcr
xchg
jne
and
pop
sub
clc
rol
mov
icebp
and
sub
inc
lcall
jp
sbb
inc
mov
jno
jecxz
lret
push
mov
mov
lock
mov
or
shrl
fcoms
pop
mov
jecxz
cli
dec
lock
and
mov
push
adc
lahf
insl
and
jl
fldl
mov
test
mov
cmpsb
es
cmpsb
sub
loope
mov
lock
jl
jp
out
loopne
dec
dec
into
sarl
inc
lock
cld
repnz
daa
cs
mov
ja
pop
std
scas
out
xorl
stos
in
push
fs
add
test
lea
in
shl
sub
insb
repnz
stc
lahf
imul
js
pop
andb
movsl
mov
scas
xchg
or
xor
mov
and
into
cmp
push
xor
jl
xchg
lods
adc
xor
mov
xor
jle
and
jb
imul
jge
ds
jns
aaa
sub
xlat
inc
out
push
cmp
mov
jae
mov
and
rcll
xchg
adc
push
notl
mov
pop
jne
in
insl
movsb
stos
les
adc
jge
mov
add
test
idivl
cs
inc
xchg
sbb
lret
add
fisubrl
sub
out
xor
mov
jl
jge
fcomps
jb
jo
leave
mov
shlb
out
imul
test
leave
pop
ret
xchg
into
testb
mov
push
adc
int3
push
ret
sbb
pop
mov
roll
je
fsts
jno
gs
mov
int3
jnp
loope
sbb
xor
gs
dec
cmp
adc
inc
jns
xorb
fidivrl
aas
nop
and
icebp
push
mov
push
ss
xchg
and
sub
mov
test
push
shlb
xchg
jae
xchg
scas
in
popa
jne
movsl
xadd
push
mov
push
addl
imul
xor
pop
pop
mov
daa
inc
adc
mov
lods
mov
push
cli
out
mov
add
sub
ret
cmpsb
dec
mov
pop
pextrw
jl
jl
hlt
aad
adc
dec
fmul
mov
clc
lock
aaa
push
adc
into
sub
dec
pop
push
mov
push
jno
xlat
inc
push
push
inc
lea
mov
xchg
cld
mov
mov
ret
enter
cmpsl
shr
aas
hlt
sahf
inc
stos
mov
mov
mov
adc
push
mov
les
mov
fisubrs
sub
arpl
adcl
pushf
fisubrs
jl
enter
test
out
push
out
cwtl
ret
cmp
jo
sti
pop
arpl
jle
xor
out
idivb
scas
xlat
push
add
xchg
cltd
pop
lock
jg
cld
bound
sub
pop
pop
xchg
xchg
frstor
inc
andl
cmp
outsb
dec
cmpsl
jbe
int
sbb
sbb
jge
movsl
push
lahf
pop
dec
pop
call
out
xchg
loope
xor
xchg
pop
adc
inc
fsubr
lock
scas
push
inc
jp
cmpsl
jno
adc
cmpsb
out
xor
and
scas
add
xor
adc
push
ss
dec
push
adc
inc
xor
fs
add
dec
shll
adc
sahf
mov
sbbb
jb
ljmpw
outsb
mov
dec
insl
xor
shlb
mov
xor
cmp
lds
popa
cmc
lahf
jle
enter
jnp
pop
sbbl
dec
or
xchg
addl
clc
or
das
movsb
mov
and
push
fiaddl
or
out
cli
in
or
xor
cmp
jg
out
loope
dec
add
xor
loope
aad
inc
mov
nop
push
nop
scas
repnz
testb
mov
out
jle
in
xchg
pop
cmc
fistpll
inc
clc
pop
rorl
std
mov
cmc
sub
mov
xor
aam
sub
cmp
lahf
xchg
push
andl
dec
push
xor
mov
mov
mov
push
mov
pop
mov
loop
sti
sbb
or
pandn
scas
or
scas
test
cld
out
xor
stos
sub
pushf
bound
mov
out
xchg
mov
cmc
adc
cli
in
test
add
fsubp
int
int
push
dec
adc
daa
xor
test
sub
or
adc
dec
and
and
lods
sbb
lods
inc
dec
insb
cmc
loopne
std
mov
xchg
mov
jb
xor
add
xor
fnstenv
test
sarl
repz
adc
inc
hlt
xchg
push
sub
arpl
xlat
mov
mov
out
mov
xchg
fidivs
cmp
iret
cmpsb
out
xchg
mov
pushf
xchg
mov
gs
rorl
dec
lods
mov
mov
mov
addr16
push
outsb
inc
stos
cmp
inc
sbb
xor
ret
int
push
sub
lret
sti
mov
mov
xchg
mov
adc
sub
fcmove
test
jae
xchg
or
lret
jnp
jmp
ret
cwtl
pop
xor
xor
mov
mov
in
cmp
lahf
movsb
jle
je
and
scas
xchg
lret
jae
xchg
jmp
jae
out
outsb
stos
add
cmp
sbbb
pop
popl
mov
mov
push
pop
push
mov
sbb
arpl
or
adc
test
daa
xchg
or
jmp
scas
sarb
cmp
loopne
out
mov
ljmp
in
pop
cmp
push
add
inc
out
mov
xchg
fdivrl
jne
add
sub
negl
fdivrl
fidivrs
icebp
dec
jp
ret
gs
jno
loope
push
mov
aam
ret
jl
lea
aam
push
call
stc
mov
out
addb
xchg
sub
or
jo
and
xchg
js
out
xor
push
and
inc
pushf
clc
jp
lea
insb
mov
push
cmpl
in
pop
out
pop
mov
cli
int
add
lds
and
xchg
jg
test
or
mov
ret
pusha
fwait
cmp
hlt
arpl
mov
cmp
cmp
outsb
aad
testb
test
aad
ret
out
push
xchg
cmp
mov
xor
pop
adc
mov
push
sub
xor
jnp
and
ret
pop
movsl
cmp
cli
mov
mov
or
loopne
mov
stos
sbb
in
mov
pop
movsb
rorl
shlb
sub
and
loopne
jo
gs
mov
leave
cmpl
nop
sub
adc
add
daa
sub
dec
insl
cltd
enter
in
sbbb
sub
insl
pusha
cmp
mov
pop
call
cmp
mov
imul
xor
repz
sub
in
cmpsb
in
mov
adc
iret
call
bound
les
out
roll
in
push
xor
cmp
mov
rcll
jae
jnp
or
add
call
ja
push
inc
xchg
mov
push
mov
roll
push
rclb
xor
scas
movsb
push
inc
mov
mov
loopne
fdivl
shrl
es
popf
mov
pushf
fwait
jno
imul
add
sbb
sub
in
cmp
mov
push
ficompl
mov
dec
psubusb
out
sub
popa
adc
aaa
cmc
lds
movl
repz
es
jnp
cli
fwait
nop
xchg
fimuls
mov
fwait
and
xor
call
add
mov
cmc
jo
loop
jg
pop
lock
bswap
pop
sbb
push
mov
aaa
xchg
cmpsl
jnp
lock
fidivl
mov
xchg
es
arpl
dec
and
jle
pushf
xchg
inc
ret
mov
or
outsb
jp
iret
dec
incb
xor
xchg
xchg
xchg
test
sbb
sarl
mov
leave
adc
outsb
fs
out
push
xchg
sub
add
xlat
jecxz
sub
repnz
stos
into
push
lahf
push
lds
movsb
lods
mov
mov
sub
das
adc
imul
and
fwait
insb
fstl
xchg
mov
ja
xor
or
aam
sub
fisubrs
fbld
and
cld
push
fs
aad
pop
cli
loopne
push
test
mov
hlt
dec
pop
call
mov
inc
push
jle
add
faddp
xor
sbb
ss
cmpsb
and
jo
adc
pop
fsubrs
jl
sub
pusha
inc
xor
scas
push
add
xor
sar
dec
pop
popa
add
in
lea
sbb
fimuls
cld
jl
mov
sub
jno
or
les
adc
jnp
or
pusha
fnstsw
and
adc
clc
lcall
sti
daa
scas
add
scas
fisubs
pushf
fs
pop
lods
enter
sbb
repz
xor
inc
jg
jp
and
sbb
xchg
xchg
aam
and
in
xor
popf
mov
inc
lcall
fnstcw
xchg
js
dec
out
movb
inc
mov
das
jo
dec
cmp
cmp
arpl
in
popf
outsl
ret
icebp
jp
inc
pop
stc
jle
inc
mov
dec
sarb
jl
xchg
or
and
jl
js
adc
cwtl
or
outsb
mov
out
pop
sti
push
mov
lods
call
lds
hlt
mov
adc
add
lahf
xchg
pusha
push
adc
mov
xchg
pushf
mov
filds
or
repz
sahf
sbb
jmp
cmp
push
out
xchg
sbb
adc
xchg
js
pop
pop
es
bound
add
xor
jecxz
xchg
ret
add
cmp
sub
push
pop
mov
add
push
cmp
lock
test
dec
ret
in
lea
fwait
mov
adcb
sbb
pop
and
mov
jecxz
lea
inc
mov
push
movsl
dec
push
fidivrs
sub
inc
push
inc
insl
pop
pop
fs
das
xor
mov
cmc
cmp
pop
xchg
mov
scas
cmc
dec
push
sbb
xchg
mov
inc
sbb
shlb
jp
adc
fs
mov
sbb
or
mov
rcrl
aad
push
stc
xchg
inc
jmp
mov
nop
aad
fldcw
sbb
fcoml
aam
add
int
cs
insb
mov
adc
jle
imul
or
shrl
pop
cmpsb
push
jl
mov
add
leave
loopne
sub
cs
push
clc
gs
stos
push
mov
mov
mov
ja
xor
push
mov
jg
orb
dec
jns
mov
xchg
out
iret
sbb
xchg
jnp
mov
aam
outsl
pop
push
cmp
xchg
push
imulb
push
jno
nop
xchg
icebp
andl
mov
xor
loope
mov
and
lret
xor
popf
mov
mov
aad
dec
inc
jne
mov
shlb
mov
jbe
jnp
xor
out
lret
outsl
arpl
aas
jle
sub
cld
dec
scas
inc
int3
pop
jb
aas
jmp
mov
cli
mov
xlat
pop
pop
lret
mov
gs
arpl
cmp
ss
test
loope
fsubr
movl
test
ja
test
scas
dec
jb
xlat
int3
cld
rorb
cwtl
aas
nop
xchg
mov
sahf
pop
jmp
out
ds
rolb
pop
cmp
pop
add
test
cwtl
pop
push
aam
lods
xchg
xor
push
cmp
adc
cmp
jp
mov
sbb
not
sbb
dec
push
dec
jo
ss
mov
mov
add
iret
mov
cmpsl
repnz
add
mov
push
cs
lret
test
fnstenv
lds
lcall
fs
repnz
add
xchg
scas
out
sbb
lea
adc
scas
inc
in
pop
nop
stos
int
pop
shlb
sub
rcr
daa
test
shl
sbb
push
mov
gs
lock
dec
add
repz
lock
and
mov
xchg
dec
ret
mov
test
add
mov
jge
jne
cmp
xchg
sbb
mov
mov
dec
jb
push
mov
mov
jne
repz
rorb
fs
popa
xchg
ret
xchg
inc
jmp
jns
sahf
cmp
jno
jecxz
jnp
shr
push
xchg
dec
cmp
and
dec
out
mov
lahf
mov
inc
std
jo
mov
inc
mov
xor
mov
lret
movsl
fwait
testb
sub
hlt
xchg
js
mov
call
fstps
pop
mov
incl
out
sub
iret
cmpb
fnstcw
sbb
fisubrl
ds
xor
test
xor
jne
jl
daa
shll
mov
xor
lds
cltd
pop
bound
add
lret
stos
adc
add
dec
lds
and
fs
notb
pop
outsl
pop
add
fdiv
loope
ss
xor
out
lahf
push
mov
mov
and
push
sub
or
repz
sti
and
push
pop
cmp
jmp
lcall
negb
sqrtps
cli
in
lret
inc
cmp
movsl
xchg
adc
std
or
push
mov
fcoml
cmpsb
mov
push
aas
imul
addb
xlat
jl
arpl
leave
out
incb
es
lock
inc
inc
cmp
cmc
sbb
push
sub
sahf
xchg
xchg
mov
push
aas
shl
adc
mov
cmpb
incb
ret
jnp
mov
xchg
mov
test
adc
fidivl
mov
inc
and
arpl
imul
cld
into
or
lods
fisttpll
add
push
testl
sub
nop
fildll
divb
cltd
mov
cld
dec
enter
shr
leave
xorl
dec
not
xchg
imul
fcompl
daa
nop
mov
pop
movsl
in
xor
fstpl
add
shlb
cmp
ficoms
clc
jp
test
ret
fisttpll
pop
dec
ret
sub
cs
clc
or
adc
xor
sbb
clc
cmp
arpl
in
adc
pusha
dec
xchg
jno
stc
mov
dec
rol
arpl
pop
mov
sub
jecxz
mov
pusha
insb
pop
daa
xchg
shlb
fsubrl
cltd
jb
push
push
inc
sbb
pop
xchg
xchg
lret
movsl
testl
jb
mov
fiaddl
mov
and
ds
sub
les
and
cmp
mov
imulb
imulb
popf
jbe
cwtl
sbb
jnp
adc
sub
pop
std
out
and
push
mov
jecxz
insb
arpl
outsb
rcr
int3
insl
add
cmp
inc
xchg
xor
stos
jl
addr16
out
std
fsubrl
fildl
jbe
out
add
rorl
xchg
cmp
mull
gs
cmp
jns
dec
lcall
or
loope
mov
fisubs
cltd
xor
mov
push
xchg
out
clc
cmp
imulb
mov
push
pusha
pop
enter
or
cmp
adc
pop
mov
cmp
shll
aas
mov
imul
mov
out
test
sahf
enter
addb
dec
push
cwtl
enter
into
jge
shll
jnp
mov
cmp
scas
and
push
and
arpl
jno
pop
add
mov
dec
scas
add
pop
scas
sti
cmp
xor
fimuls
xchg
test
aad
jae
fildl
mov
push
push
fisttpll
scas
jecxz
cltd
insl
or
add
cmp
rolb
jae
out
or
mov
sahf
test
jge
dec
stos
rcrb
js
out
ss
insb
mov
mov
cltd
push
dec
adc
in
dec
pop
dec
lea
insl
inc
jne,pt
jne
dec
xor
jb
lea
mov
and
push
int
pushf
into
cmpsl
ret
ret
or
cmpsl
push
fcoml
xchg
mov
cmp
ja
pop
mov
sub
pusha
dec
jns
pop
add
out
mov
pop
cltd
jnp
mov
cli
jno
push
adc
fs
sub
bound
stos
xchg
sbb
in
pop
xor
lods
pushf
addb
jl
jb
loop
stc
aam
clc
lds
jmp
adc
divb
mov
jl
adc
and
dec
sub
sub
fwait
sbb
xor
sti
adc
mov
cld
lret
stc
or
sbb
fsubs
xchg
dec
cmpsl
dec
lret
cmp
nop
mov
iret
pop
add
mov
sub
ds
jecxz
ljmp
cmp
mov
nop
or
js
fcom
sub
cwtl
arpl
insl
adc
mov
mov
fwait
sbb
sbb
inc
inc
repz
cli
add
int
lods
fcoml
es
inc
out
les
hlt
push
sub
jae
push
insl
jns
cmpsl
stc
fcmovnbe
les
aam
aaa
mov
out
int3
outsb
hlt
mov
rol
insl
bound
ret
pop
mov
mov
fsts
ror
popf
add
test
or
lods
sbb
test
jg
lock
xor
xchg
cmp
add
test
pop
repnz
mov
sbb
mov
rolb
dec
inc
jle
inc
out
xchg
dec
xor
and
fwait
push
dec
icebp
fldl
xchg
mov
enter
mov
push
inc
xlat
or
add
adc
sub
imull
add
xlat
inc
ret
push
fidivrl
aad
sub
jmp
les
je
call
mov
out
xchg
aaa
jmp
sub
push
mov
dec
or
loopne
or
xor
sbb
jae
scas
stos
inc
pop
cmp
jecxz
stos
fbstp
out
mov
lcall
sub
mov
hlt
sub
les
das
scas
mov
pop
dec
fildl
iret
mov
out
mov
jns
outsl
scas
xor
enter
std
jl
pop
dec
sbb
rol
fldenv
out
ja
lds
notb
fs
mov
sub
ds
xor
into
repnz
subb
movsl
adc
fs
cmp
push
loop
cvtpi2ps
sub
aad
call
aam
sbb
mov
jnp
leave
mov
mov
pop
cmp
inc
mov
and
xchg
mov
pop
scas
push
push
stos
jmp
cmp
jno
in
jmp
push
jle
fwait
nop
dec
ret
loope
or
mov
dec
push
sbbl
cld
clc
push
adc
push
sbb
or
repnz
movsl
std
inc
ret
insb
gs
lret
or
jae
and
xor
adc
cmp
lods
in
adc
adc
sub
pop
iret
mov
pop
rcll
scas
insb
test
rclb
cmc
idivb
adc
out
lods
cli
inc
lods
call
pop
pop
pop
mov
mov
sub
in
dec
icebp
in
aaa
pop
popf
or
add
cltd
outsl
xor
cmp
or
das
les
test
pop
xor
dec
mov
mov
jl
xchg
out
push
jmp
aad
push
jo
into
rclb
nopl
rcrl
in
push
sbb
jns
out
fcmovbe
pop
scas
sub
add
stos
int
xor
ja
sahf
and
lock
xlat
cmp
xchg
stos
xor
and
movsl
add
cmpsl
jmp
arpl
adc
mov
ds
lock
or
add
sbb
ja
loope
loope
data16
pop
call
into
imul
inc
xor
lds
pop
lock
test
dec
lea
push
fbld
mov
in
je
cmp
enter
sub
shll
aad
call
sub
xchg
push
popf
cmp
add
mov
pusha
clc
pop
or
add
in
mov
pop
aam
jecxz
int3
push
dec
mov
sub
test
ds
mov
ss
or
into
in
dec
push
add
jbe
sub
in
dec
add
xchg
inc
push
das
push
and
add
in
add
cmp
mov
pushf
lock
jecxz
repnz
add
sahf
cmc
fcomps
cli
jle
bnd
fsubrs
loope
lea
ja
inc
neg
pop
cmpb
and
popf
mov
mov
test
pop
push
dec
or
sti
mov
push
negl
push
insl
jg
push
ss
dec
int3
push
lret
inc
fstpl
ret
jmp
cmp
dec
xchg
dec
mov
add
out
aam
cmp
lock
inc
loope
popf
js
sub
pop
xor
add
aad
jb
imul
gs
cmpsl
daa
popa
inc
xor
repnz
insl
outsl
cmpsl
cmp
hlt
adc
xchg
push
fildl
fistpl
sub
add
lret
jp
cmp
cmp
mov
sbbl
movsl
js
push
push
mov
lcall
pusha
mov
outsb
mov
adc
xchg
xor
outsl
lahf
lds
xlat
mov
cmpb
cmc
sti
shlb
into
popf
mov
movsb
push
pop
add
pop
add
lds
movsb
sub
jns
lods
sbb
add
insl
and
test
jge
inc
mov
add
dec
enter
dec
and
data16
addr16
mov
pop
add
lahf
gs
push
mov
push
outsl
cmpsl
mov
adc
mov
out
jnp
orl
fstl
lea
dec
jg
daa
nop
cmc
cld
push
lods
test
mov
sbb
out
add
or
push
fwait
or
mov
dec
lahf
clc
push
subb
mov
das
ret
jg
mov
inc
cmc
adc
jbe
or
notl
pop
sub
add
xchg
je
or
mov
movl
mov
scas
js
hlt
and
cmp
int
jl
xchg
jae
dec
add
ror
xchg
loopne
add
aad
sub
xor
jbe
mov
repnz
loopne
int
xchg
cmpsb
mov
push
and
cmpl
mov
mov
in
and
dec
dec
xchg
mov
mov
jecxz
sar
sub
push
fsts
pushf
sub
testl
mov
mov
jo
nop
inc
xchg
jge
add
lret
addr16
imul
scas
sub
dec
addr16
test
iret
and
jge
push
jno
iret
sub
xor
jbe
sbb
aad
mov
xchg
pop
push
sub
xor
pop
je
ja
sbb
or
mov
jl
pop
mov
aam
pop
jo
jb
fwait
push
rclb
test
clc
push
pusha
pop
mov
sbb
mov
mov
enter
mov
or
ret
repz
dec
jp
lock
inc
mov
push
insb
aam
mov
sbb
mov
ror
outsb
jnp
and
or
gs
fldl
push
xor
in
push
dec
stc
sub
dec
rorb
adc
test
push
push
pop
jbe
aaa
scas
ja
leave
push
nop
push
dec
adc
lea
push
out
fiadds
push
push
mov
or
mov
jle
fisttpl
mov
xor
repnz
ss
xor
arpl
je
adc
imul
in
adc
arpl
cli
xchg
jg
push
leave
lds
in
or
cmp
loopne
pshufw
test
sti
jo
mov
insl
cmpsl
jns
lods
ret
jns
pop
mov
pop
hlt
cmp
aas
mov
fisttpl
pop
and
test
fdiv
testb
lret
jle
push
mov
shlb
xor
jle
popa
inc
xorl
rcrb
and
pop
ret
sbbl
or
hlt
call
lea
fimull
or
xchg
jl
cmpsl
imul
stos
or
bound
daa
outsb
nop
push
jl
mov
cmp
daa
xor
cwtl
pop
lret
push
int3
sti
pushl
pop
xor
call
pop
mov
inc
jb
addr16
push
lea
adc
jge
inc
sarb
push
push
ja
sti
pop
xorl
jmp
or
jp
in
retw
bound
mov
pop
pop
movsb
addr16
sub
push
dec
jg
pop
movsb
jl
out
sbb
pop
inc
add
lcall
cmp
loope
outsl
movsl
std
push
xor
mov
sub
rolb
or
sub
push
sub
dec
sar
popa
es
ret
outsl
adc
or
adc
loop
dec
mov
pop
mov
sbb
ds
insl
mulb
out
push
ret
adc
lods
pop
fimuls
movsl
ffree
scas
rcrl
stc
adc
xchg
lods
xchg
ds
xchg
divl
dec
mov
jb
dec
aaa
stos
movsb
lea
pop
sub
test
sub
sub
je
enter
ds
fwait
xor
inc
jl
ss
jecxz
pusha
push
cmp
mov
mov
out
std
mov
shll
addl
imul
dec
popa
out
out
cmp
mov
pushf
or
out
jb
mov
fs
mov
mov
arpl
inc
dec
xchg
jle
pop
and
lret
pop
out
dec
movsl
jbe
dec
adc
mov
ljmp
sbb
movsl
hlt
push
movsl
or
mov
mov
jo
test
and
nop
push
aaa
call
stc
jge
mov
fstl
cld
add
jnp
pop
andb
add
cmp
dec
pop
addr16
jnp
ja
iret
xchg
xchg
in
icebp
mov
out
inc
aam
into
fsubrs
daa
inc
push
nop
int
js
out
and
loope
or
mov
pop
pop
movsb
je
add
mov
rcll
mov
repz
repz
pusha
cwtl
lea
enter
ja
dec
jmp
fnsave
lock
push
push
dec
xchg
in
xchg
andl
sbb
mov
inc
dec
push
fsubs
lods
xchg
addr16
and
mov
mov
stos
in
mov
xor
movsb
sub
xor
cmpsl
sub
subl
popa
frstor
push
xchg
icebp
mov
sbb
mov
lods
jnp
rcr
sbb
sbb
cmp
cmc
pop
xor
aad
pop
mov
loope
jae
imul
dec
cld
lods
xor
notb
outsb
add
nop
mov
outsb
add
dec
mov
mov
add
repz
rorb
cmc
jge
jns
or
mov
push
push
into
das
icebp
dec
ja
cli
into
push
mov
sub
jle
faddl
sbb
or
repnz
mov
sub
notl
leave
sbb
cmpsl
or
sahf
imul
outsl
into
sub
loop
adc
imul
push
out
psraw
cmp
dec
call
nop
cld
aas
push
jns
mov
aam
push
sti
jo
ss
shrb
outsl
sbb
mov
mov
inc
fpatan
jecxz
imulb
bound
and
ljmp
leave
dec
cmp
into
or
arpl
sbb
aaa
mov
push
orb
lods
divl
fcoms
bound
flds
push
cmovae
insl
jbe
cmp
cwtl
orb
bound
lcall
in
pop
ja
jp
outsb
int3
push
sub
pop
repz
sti
fiaddl
pushf
ret
pushf
stos
orb
stos
add
in
or
sbb
mov
das
cmp
dec
pop
pop
lahf
sbbl
adc
bound
pop
mov
dec
fadd
jo
and
out
xchg
sarb
into
xchg
mov
or
push
jbe
iret
push
les
jmp
or
out
mov
push
test
data16
sbb
sbb
mov
movsb
sub
adc
pop
ret
jp
mov
out
adc
jnp
out
push
adc
int
aam
rol
adc
cmp
xor
orl
movsl
mov
push
imull
inc
cmp
scas
inc
push
mov
xchg
or
fs
adc
stos
shrd
push
mov
dec
dec
iret
pop
mov
jp
leave
stc
rorb
or
test
lds
sub
jmp
int
inc
push
iret
sbb
jne
mov
ljmp
subb
or
cmp
or
push
stc
lds
imul
push
loopne
fcmovu
outsl
fisubrl
sbb
test
mov
popa
into
sarb
lret
push
adc
lret
stos
rclb
and
mov
cmp
cmp
sbb
mull
cmp
or
test
loop
jp
pop
jl
pop
clc
lret
xchg
xor
movsl
mov
fmul
cmp
or
ja
mov
cmpps
test
and
adc
push
xchg
vmovntps
out
push
imul
sahf
xor
mov
mov
mov
or
hlt
mov
sub
rcrl
jmp
leave
mov
jmp
push
outsb
popf
rcr
jbe
dec
mov
sbb
xor
sub
shlb
outsl
mov
mov
cmp
sbb
gs
jne
clc
ja
cmp
pusha
and
dec
pop
push
adc
mov
sub
dec
xchg
dec
xchg
test
xchg
dec
push
mov
shlb
pop
adc
repz
xchg
xor
or
test
stos
orb
ds
sub
pop
and
fbld
mov
ds
mov
pop
push
xchg
stos
mov
inc
mov
not
or
mov
sub
jne
rorl
and
loop
rcrb
inc
nop
sub
sub
mov
sti
je
sti
std
es
repz
adcb
mov
cmp
lods
inc
imull
in
add
jg
mov
push
fisttpll
repnz
imul
xchg
sub
test
jns
push
mov
push
imul
in
pushf
fcompl
imul
iret
pushf
cli
lahf
jge
das
insb
push
sbb
fsubp
lods
sbb
insl
dec
in
ds
lahf
and
pushf
inc
fcomip
mov
cmp
imul
or
mov
add
cmp
int3
mov
push
outsl
push
inc
ficoms
and
popa
dec
jmp
pusha
mov
lret
and
hlt
test
negb
insl
adc
aaa
pushf
adc
mov
fwait
vmwrite
dec
enter
popf
scas
push
add
movsl
add
aaa
std
pop
addl
lds
sbb
jmp
adc
or
or
nop
shlb
mov
test
pop
adcb
push
jmp
scas
mov
lods
pop
popf
xchg
pop
sub
cs
xchg
xor
das
xor
lock
xchg
movsl
sarb
outsb
jne
jbe
xchg
xchg
xchg
pushw
das
jp
cwtl
loop
cmp
pop
ret
mov
adc
mov
insb
jmp
ja
sub
inc
outsl
shll
inc
dec
imul
fisubs
cs
lds
sbb
push
test
bound
fidivs
mov
scas
ss
adc
cmpsb
pop
stc
aaa
add
xor
pop
in
or
outsl
or
and
xor
and
push
fwait
jbe
pop
jns
add
push
pop
xchg
out
repnz
push
ret
xchg
sbb
rorb
ss
cmp
push
fdivl
cmp
xor
mov
rcrb
xor
scas
mov
out
sahf
xchg
jmp
jmp
into
out
mov
out
xchg
test
cmpsb
mov
dec
sbb
in
adc
insl
mov
add
ret
xchg
repz
lret
les
fimull
jmp
inc
inc
mov
and
mov
cmp
sub
das
arpl
push
nop
sub
into
mov
rorl
or
mov
xor
and
ljmp
mov
ljmp
pop
fadds
mov
data16
lods
xchg
mov
popa
leave
fst
cmc
fs
or
lret
add
enter
cmc
jmp
test
shrb
dec
out
insl
mov
mov
inc
xor
cmp
push
popf
das
stos
sahf
and
sub
arpl
mov
aad
xchg
push
or
test
inc
in
push
jle
lds
sbb
movsb
rorl
xlat
push
sbb
sarb
xor
lods
gs
nop
or
pop
dec
std
sub
inc
xor
xchg
mov
js
arpl
popa
and
rorb
inc
mov
clc
push
pop
pop
pop
cmpsl
cmp
cmpsb
dec
jne
stos
fdivp
adc
pop
xor
gs
cmpsb
arpl
mov
sub
fimull
jns
adc
in
cmp
aam
or
test
adc
leave
push
jg
lcall
xor
push
notl
in
ret
dec
nop
xor
xor
jb
cmp
or
push
inc
fisubrs
pop
ret
aam
fidivl
addl
jg
jp
jns
loope
insb
lcall
mov
imul
xor
insb
lcall
lds
enter
pop
pop
stos
inc
push
inc
cmpsb
jbe
gs
leave
cwtl
jne
sbbl
ljmp
pop
xor
ds
push
jo
mov
test
sub
jg
bound
sub
mov
cmp
popf
fisubl
push
shrl
or
movsl
cwtl
xchg
and
daa
sbb
loop
cmc
cmp
xchg
push
jmp
loope
mov
pop
push
sub
dec
inc
push
cld
shrl
mov
push
adc
fists
daa
cwtl
test
xchg
sbbb
mov
rcrb
or
hlt
insb
xor
adc
arpl
lds
fsubp
in
dec
mov
adc
mov
cmp
pop
insl
xchg
add
sti
clc
out
sti
arpl
adc
inc
pop
adc
pop
inc
jmp
sub
dec
dec
or
aad
push
sbb
pop
jne
nop
xor
and
sbb
sub
xor
mov
lcall
shlb
mov
sbb
in
mov
jns
cmpsl
rorb
add
sub
sti
sahf
pop
dec
lret
push
mov
adc
push
add
mov
add
imulb
jno
dec
bound
popf
fmul
sbb
test
imul
clc
popa
mov
pop
sbb
xor
lret
mov
pop
inc
jle
sti
jmp
push
xchg
cltd
lea
je
dec
testb
dec
jle
inc
stos
repnz
repnz
leave
jo
sti
cmpsl
xchg
push
js
leave
pop
push
sub
sub
orl
pop
pop
lahf
jle
mov
ja
sbb
in
sbb
dec
pop
pop
cwtl
test
es
cmp
and
fistpll
div
jecxz
mov
fs
aaa
or
push
pop
sahf
jl
pop
adc
add
push
mov
in
inc
add
lret
mov
xorb
shll
pop
mov
jne
xchg
int
andb
into
mov
xchg
or
adc
ret
dec
jae
mov
adc
addl
lds
inc
sbb
sub
xchg
sub
ja
jae
mov
jmp
sub
xchg
pop
sbb
inc
jnp
stos
int3
in
iret
and
and
ret
ret
add
mov
and
sbb
jmp
pop
sub
mov
popa
inc
add
jecxz
push
dec
cwtl
or
pop
int
mov
mov
pusha
mov
roll
xchg
inc
add
int3
test
add
sarb
xchg
push
je
mov
scas
mov
inc
loope
roll
mov
push
sbb
push
dec
sbb
in
ss
lahf
popf
lds
add
or
fwait
sahf
jl
mov
lahf
fdivrl
lret
loop
jne
add
xchg
pop
mull
add
out
shlb
mov
inc
leave
stc
cmp
lahf
or
cld
xlat
enter
lahf
inc
or
clc
mov
pop
ret
bound
jae
cmp
jmp
sarl
ret
or
jno
xlat
les
fildll
daa
loopne
pop
push
xchg
pop
lret
xor
and
mov
xor
popl
dec
jnp
xor
lret
push
pop
push
pushf
mov
jmp
xchg
xor
jo
lret
fisttps
rclb
mov
sbb
clc
inc
sbb
sti
push
pop
jns
cmpsb
jne
mov
push
cwtl
pop
and
outsl
cmpsb
pop
sub
dec
xchg
sbb
subb
mov
mov
inc
mov
popa
sub
decl
popf
push
jne
or
insb
mov
or
out
dec
inc
and
dec
jle
scas
jp
cmp
jle
insl
fsubrs
gs
test
aam
add
out
test
jl
cld
push
pushf
add
add
pushf
push
jecxz
cmpsb
mov
mov
or
jmp
lds
rcrb
mov
js
mov
cld
add
and
js
test
xor
in
andb
fisubrs
adc
arpl
cmp
mov
jns
lea
mov
sub
test
loop
inc
sti
aam
xchg
or
sub
push
pop
outsb
imul
inc
js
cs
xchg
rcrl
and
mov
std
adc
cld
add
cmp
les
push
imul
and
jp
int3
stos
or
jne
dec
jle
leave
pop
cltd
adc
loopne
and
lods
fidivs
scas
into
add
enter
mov
insl
inc
orl
push
jl
fisubrs
push
jno
rclb
cmp
pop
fisubrs
pop
mov
adc
sub
mov
cmp
enter
push
sub
mov
andb
and
aad
sub
adc
fildl
xor
cmpsb
into
je
hlt
mov
sub
add
cmpsb
sbb
inc
mov
test
ja
fs
sti
cmpsl
xchg
sbb
or
repnz
mov
adc
mov
dec
xchg
loope
cmpsb
out
nop
mov
ja
mov
add
sub
cmp
iret
or
cmp
enter
pop
dec
stos
pop
inc
dec
adc
ja
insl
pop
je
filds
les
dec
pushf
jge
rcl
xor
xchg
int
mov
cmp
lahf
cltd
das
mov
pop
adc
adc
add
xor
sub
cmp
mov
pop
pushf
repz
fwait
jo
js
and
mov
testb
xchg
xchg
add
shlb
addb
mov
loop
jmp
sbb
testl
sub
pop
out
repz
dec
loope
push
rcrl
cmp
addr16
rorb
fwait
push
inc
jmp
mov
cmpsl
ljmp
jmp
pop
add
decl
ret
mov
pop
adc
into
jl
jp
bound
mov
sahf
jl
popa
lock
daa
cli
adc
mov
sbb
adc
test
lahf
inc
pusha
lret
in
lret
int3
jno
cli
mov
mov
insb
mov
in
inc
rclb
mov
and
add
add
fnsave
cld
sbb
cld
and
xchg
push
push
les
rorl
add
imul
scas
cmp
in
xor
addr16
and
pop
jbe
pop
rclb
pushf
sbbb
jns
xchg
jle
dec
js
loopne
xor
dec
mov
std
mov
pop
ret
and
push
cltd
fcoml
sbb
aad
push
adc
or
sub
push
aas
pop
xchg
xchg
enter
and
xor
hlt
mov
ret
mov
add
out
push
imul
mov
inc
aas
test
dec
pop
sub
cmpsl
mov
hlt
ficoml
and
fildl
outsl
mov
js
insb
adc
fdivl
and
imul
mov
mov
pop
xchg
int3
test
jp
jecxz
adc
into
mov
or
ds
xor
push
fnsave
mov
movsl
xchg
mov
xor
test
pop
orl
nop
aas
and
ds
movsb
cwtl
adc
clc
cmp
pop
adc
fucom
nop
push
jg
imul
rcrb
outsb
rcl
sub
sbb
pop
jb
sti
mov
sbb
imul
mov
sbb
jmp
fsubs
and
rcr
xchg
mov
push
enter
popf
lock
test
adc
add
xor
dec
iret
scas
mov
aam
dec
mov
pop
idivl
push
adc
and
mov
outsl
and
in
repnz
and
mov
test
ds
push
mov
lock
cmp
cmp
add
jae
jl
and
lods
lret
xchg
subb
je
fisttpll
cmpsb
movsl
mov
push
cmpsl
inc
test
mov
and
push
popa
mov
cmp
cmpsb
dec
and
push
iret
out
into
xor
adc
add
jecxz
cmpb
sub
fs
sub
xchg
push
fdivl
xor
mulb
jbe
push
sub
mov
mov
insl
mov
and
lods
cmpsl
and
or
sub
call
es
and
cmp
pop
sahf
pop
add
out
arpl
cmp
popa
sbb
call
mov
ljmp
outsb
cmpsb
xor
jge
fisubs
push
in
notb
jne
sub
jg
cmp
ds
lea
xchg
pop
aaa
cwtl
mov
rolb
adc
je
inc
les
sub
sub
popa
movsl
inc
jge
xchg
sti
gs
and
popf
es
arpl
aaa
inc
sbb
rorb
inc
rcrl
imul
xlat
push
aad
popa
test
mov
std
push
adc
aam
and
cmp
fadds
cld
wrmsr
dec
shll
inc
loopne
sbb
cld
adc
jbe
mov
jae
mov
dec
push
inc
jo
mov
push
test
jmp
jne
fnstcw
and
imul
ret
pop
mov
into
test
ja
lods
aas
lret
fs
in
dec
mov
call
push
xchg
add
in
outsl
ds
push
cmp
std
sbb
shrl
jge
out
arpl
ds
dec
or
lret
enter
pop
andps
pop
and
lock
ficoml
stos
dec
adc
movsl
fildll
rcrb
aad
sbb
xchg
add
addr16
leave
lcall
adc
and
jnp
mov
mov
test
or
out
inc
sbb
icebp
and
xor
mov
mov
fistps
aam
shrl
outsb
add
pop
ret
loope
dec
inc
cmp
lcall
fsubr
fcoms
push
push
sbb
pop
xlat
sub
rcl
sub
mov
ja
jnp
mov
enter
push
std
cwtl
cmp
jle
in
sub
push
mov
mov
push
push
out
clc
stos
mov
leave
cmp
dec
mov
pop
lret
insl
jnp
xor
ret
ds
jo
inc
xor
test
jecxz
das
xor
arpl
movsl
scas
sti
add
cwtl
and
jo
inc
dec
pop
mov
aam
pushf
mov
mov
fsubrl
mov
xor
xor
outsb
push
xor
mov
sbb
sar
jp
push
sbb
pusha
arpl
cli
or
iret
mov
mov
and
icebp
ror
dec
ja
xor
int3
push
decl
inc
dec
dec
pop
call
loop
lock
rcrl
lods
mov
pusha
test
movsb
cmpsl
bound
bound
mov
das
stc
mov
iret
je
loope
cmpl
sbb
mov
and
pop
clc
mov
pop
xchg
add
push
mov
out
xchg
out
fsub
inc
sti
jle
dec
cmp
adc
out
jae
mov
shl
adc
aaa
pop
ret
add
in
test
jmp
jae
repnz
pop
movsl
xor
push
clc
jns
out
movl
adc
sbb
sbb
pop
addr16
inc
fisubrl
cmp
in
jb
dec
push
pushf
testl
pop
enter
or
imul
stc
add
mov
dec
adc
notl
sbb
jmp
leave
xchg
sbb
xlat
testl
adc
mov
out
and
flds
inc
dec
mov
or
and
jge
or
sahf
fwait
rolb
jo
dec
cltd
fnsave
add
fs
add
inc
push
movsb
out
lcall
jne
cmpsb
mov
ret
sbb
jg
xchg
shrl
dec
xor
or
iret
pop
arpl
test
test
mov
cmp
ret
dec
dec
mov
fucom
inc
cmp
xchg
test
ret
movntq
out
insb
inc
or
mov
mov
pop
movsl
xchg
sub
cmp
dec
sub
and
xor
int
shr
inc
mov
iret
in
dec
into
divl
add
jne
test
xchg
add
add
lret
jns
mov
lcall
cwtl
cli
hlt
out
mov
jg
test
mov
rolb
dec
cmp
push
gs
dec
bndldx
popa
pop
icebp
pop
lea
jge
fistpl
mov
pop
adc
mov
andl
addr16
jne
mov
sub
dec
jl
repz
mov
lret
stos
dec
xchg
mov
adc
mov
sbb
sub
jmp
inc
add
xchg
inc
jne
mov
inc
cli
cmp
sbbb
add
pop
movsb
jge
adc
daa
or
mov
insl
sar
push
xlat
or
or
scas
into
pop
lds
pop
add
iret
or
jb
xchg
mov
jmp
push
add
xor
pop
mov
adc
pop
pop
xor
inc
push
lods
cmc
push
in
xlat
mov
mov
jmp
pusha
cmp
jns
popf
pop
stos
lea
pop
les
jmp
dec
and
xchg
mov
mov
ret
xor
jb
xchg
scas
xor
ja
fcoms
imul
lret
das
lahf
xor
shrb
mov
iret
push
stc
sti
ljmp
cmp
sbb
lods
test
push
scas
jns
dec
or
fimuls
test
push
leave
fdivr
imul
lock
mov
inc
test
imul
cld
pushf
lcall
mov
in
cmp
xor
fs
jbe
inc
mov
bound
data16
lods
inc
jnp
aas
dec
jecxz
mov
ss
jl
cmp
dec
sbb
and
mov
ret
cwtl
pop
jecxz
out
lock
add
stos
push
cmp
cmp
gs
sti
lods
xlat
pop
imul
dec
xchg
into
iret
fdivp
test
push
push
xchg
pop
js
sar
mov
dec
jge
test
out
dec
mov
sti
xor
lret
and
xchg
pusha
xor
test
pop
mov
stc
or
repz
ret
jno
push
xor
loopne
or
push
sub
jnp
sahf
insl
mov
xor
pop
and
fidivs
subl
or
das
data16
mov
pop
pop
adc
nop
inc
sub
dec
and
jns
sbb
push
jns,pn
das
aas
insl
add
and
outsl
notl
xchg
push
imul
cmp
outsl
rol
mov
mov
loopne
jle
cmp
sarl
stos
xchg
cmpl
sbb
inc
sbb
dec
daa
sub
adc
rorl
dec
xchg
xchg
adc
pop
or
fstps
inc
adc
dec
mov
push
jne
movsb
pop
jg
vpsllq
sbb
scas
push
dec
mov
jmp
sub
imul
sbb
hlt
lret
je
inc
cmpsl
test
in
and
es
dec
in
aas
mov
xor
sub
rcr
dec
das
mov
lock
xchg
and
xchg
push
push
fcompl
adc
sub
sub
pandn
repnz
lock
mov
ret
add
test
jp
jb
xchg
push
add
mov
sbb
adc
pop
movsl
popa
push
pop
das
dec
add
in
pop
iret
or
cmp
rcll
loop
sub
xchg
pop
inc
testb
mov
cmp
sbbb
jmpw
inc
push
aam
jecxz
fnstcw
mov
cmc
fsubrl
fmul
incb
dec
ja
inc
cmp
ds
cmp
loop
cmc
loopne
sahf
test
adc
xor
dec
sbb
adc
sub
pop
bound
adcl
rcrb
cltd
mov
or
and
jmp
ja
lcall
ret
adc
addr16
pop
mov
sbb
cmp
enter
mov
cmp
mov
leave
cmp
out
xchg
or
jbe
add
adc
sub
les
pop
pop
pop
adc
pop
inc
push
data16
icebp
cmp
push
cmc
aas
enter
mov
jmp
xchg
call
push
fcmovne
mov
xchg
std
ret
hlt
xchg
inc
loop
test
lea
and
fxch
aas
xor
nop
iret
icebp
test
imul
sbb
pop
je
dec
push
push
sub
mov
adcb
xchg
push
pusha
rol
pop
ret
outsb
inc
ret
scas
scas
cmp
scas
and
lds
aad
adc
and
adc
mov
jle
inc
mov
ds
pop
pop
or
dec
inc
test
jnp
dec
repz
loope
leave
hlt
xchg
sbbl
mov
pop
pop
je
adc
roll
ljmp
ret
cltd
adc
push
or
pop
jmp
orl
xor
into
loope
lods
out
mov
add
out
scas
icebp
ret
stos
jg
inc
adc
insb
or
rclb
push
mov
frstor
xlat
leave
mov
pusha
scas
jne
ret
sbb
popf
mov
mov
sahf
lahf
pop
test
orb
cmp
test
or
test
rcrb
in
shrl
pop
faddl
out
inc
cmp
push
fucomip
mov
push
jle
mov
inc
mov
out
mov
lock
repz
subl
ret
xor
sti
pop
sbb
adc
mov
dec
in
cs
push
sub
ret
lods
and
pop
inc
xchg
mov
gs
mov
lea
movsb
sahf
pop
in
jp
cli
sbb
test
mov
cmp
sbb
gs
or
dec
push
jg
mov
sub
inc
dec
dec
ror
push
enter
stc
shlb
xlat
in
out
pusha
loop
xor
fsubrs
mov
pop
faddp
fmuls
test
fisubl
inc
dec
xor
out
sti
inc
pushf
clc
inc
decb
sub
jo
sub
xchg
inc
pop
in
leave
out
xor
or
pusha
ret
ja
mov
testb
jmp
das
out
imul
call
lods
adc
in
in
xlat
mov
xlat
outsl
sbb
ret
std
inc
and
or
push
mov
xor
ja
rclb
daa
fsub
hlt
pop
lahf
or
push
sub
stc
pop
inc
aas
insl
add
hlt
adc
dec
cmp
sbbl
jecxz
mov
sbb
cld
test
mov
push
aaa
movsl
sarb
incb
stos
cld
imul
push
lcall
test
outsl
pop
push
mov
jns
frstor
daa
and
mov
xor
mov
into
add
icebp
xor
xor
push
rcrb
pop
add
nop
aam
iret
pop
call
and
cmp
add
popf
insl
fisubrs
mov
repz
xor
inc
mov
aas
mov
or
and
push
xchg
sub
inc
shlb
inc
or
xchg
js
sbb
popa
stc
mov
ss
xor
jl
insl
scas
es
insl
mov
stc
push
dec
mov
add
ds
lcall
lret
add
loop
sti
outsb
mov
lret
scas
loop
aas
inc
mov
cmpb
inc
cmp
cmpl
adc
pop
inc
cmpl
div
add
fnstenv
adc
xchg
mov
fiadds
stos
dec
or
dec
xchg
add
cmpb
shrb
mov
inc
lock
stc
or
test
and
xor
and
jns
mov
mov
add
ret
sbb
out
xor
add
inc
and
sbb
xchg
jmp
add
mov
cli
lret
mov
lods
jb
cmp
push
push
inc
imull
push
push
mov
or
jnp
xor
lea
outsl
xorb
cmp
mov
cmp
jnp
push
inc
mov
mov
or
div
sbb
inc
jno
int3
cmpsl
scas
jns
sti
and
xchg
cwtl
or
scas
popw
mov
in
lcall
scas
cs
lret
pop
lret
sub
xchg
cltd
imul
adc
sbb
and
push
in
push
loop
call
scas
xchg
xor
shll
mov
jecxz
rol
out
adc
inc
and
sbb
sti
xor
andl
mov
jo
fs
sbb
js
icebp
mov
imul
dec
jbe
leave
pop
addr16
jmp
xlat
scas
fnstenv
or
pop
lret
jmp
xor
ss
sti
testb
int3
mov
aam
mov
jnp
cli
pop
and
jns
push
stos
outsb
mov
es
mov
in
dec
outsb
sbb
cmpsb
aam
mov
lea
fcomi
mov
cld
inc
and
cs
out
stos
jle
mov
lea
fsubp
push
aaa
pop
mov
fadd
xor
jbe
cmp
shl
leave
or
test
jne
push
ljmp
push
or
lahf
fdiv
inc
add
test
movsb
jae
jne
dec
js
jae
mov
fsub
icebp
push
and
and
imul
mull
cltd
pushf
cmp
sub
sbb
sbb
mov
push
xor
dec
jne
add
out
loopne
nop
push
lods
out
mov
out
pop
mov
mov
aas
push
xchg
lahf
mov
jp
mov
pushf
sub
loop
sbb
imul
loope
cmc
xchg
push
iret
jg
imul
lret
les
jnp
ds
stos
call
jge
jb
pop
loopne
lea
push
stos
or
sbb
push
mov
dec
sbb
push
mov
mov
inc
pop
sbb
dec
outsb
or
daa
adc
cmpsb
jae
pop
sahf
fmull
orl
pop
cmp
adc
pop
push
enter
mov
mov
ret
je
mov
sbb
dec
inc
jne
sbbb
push
adc
xor
dec
and
std
cmp
xor
dec
mov
je
cli
mov
add
lahf
mov
fnstcw
sub
out
addb
daa
pop
xchg
popa
insb
and
xor
pop
mov
xchg
js
push
ljmp
xchg
fildll
xchg
dec
in
out
mov
mov
adc
xor
ja
sbb
cltd
push
mov
iret
je
push
cmp
inc
sub
stos
icebp
fucomp
pop
mov
rcll
aas
xchg
push
cmp
stos
sub
push
dec
mov
addr16
out
mov
pop
stos
sub
pop
mov
pop
nop
aas
les
cmp
jecxz
xor
sbb
cmc
iret
nop
inc
movsl
aas
loope
mov
sbb
aaa
mov
push
pop
mov
add
sbb
mov
sub
lods
pop
xor
xchg
lea
std
xchg
jb
dec
outsl
repz
cld
sub
sbb
call
fisubrs
fisttpl
jge
jbe
inc
cmp
testb
sub
jbe
dec
test
call
push
jae
mov
xchg
and
cmp
mov
adc
out
mov
or
sub
call
cmc
loopne
inc
sbb
pop
and
cli
loope
in
xor
imul
adc
stos
fisubrs
push
pop
fnstsw
std
mov
dec
sbb
mov
mov
adc
iret
mov
rolb
mov
dec
xor
aad
push
xor
cmp
mov
push
insl
test
nop
or
xor
fidivrl
and
jecxz
test
fistl
out
andw
mov
sub
ss
mov
push
imulb
fildl
arpl
mov
sbb
sub
xchg
jp
dec
not
orl
jge
ret
fdivp
cmpsl
jecxz
jb
sahf
jp
sbb
ret
xchg
arpl
outsb
imul
pushf
pop
test
insl
jae
cld
or
or
sub
or
mov
rcl
sbbb
rcrl
stos
inc
fsubl
add
add
pop
stc
clc
xor
mov
in
xchg
daa
sub
push
add
xchg
dec
sbb
imull
and
dec
mov
jg
rorl
xor
push
aaa
pop
xchg
bound
jns
dec
pop
movsl
xor
inc
xor
adc
dec
xchg
cmp
in
jp
out
ss
ss
and
sbb
setno
and
stos
pop
sbb
ds
push
push
cmp
scas
lods
jo
cmp
orb
or
in
xchg
sub
aaa
and
mov
shl
ss
mov
inc
or
cmp
out
jb
push
mov
mov
popa
mov
sub
jp
sub
mov
mov
or
mul
movsl
or
push
pop
push
loope
lock
push
and
pusha
ljmp
inc
scas
dec
add
stos
lret
test
or
dec
mov
lcall
hlt
xor
and
scas
arpl
sahf
inc
push
insl
jl,pn
cwtl
adc
pop
jg
jo
nop
jmp
and
aaa
lahf
mov
adc
arpl
or
push
jnp
pop
bsr
sub
jp
in
sub
pop
cwtl
push
fisubrs
or
jg
mov
out
cs
or
shrb
js
clc
mov
fwait
imul
pusha
cmc
dec
adc
mov
add
push
loop
subl
inc
jne
pop
popf
cmc
mov
ret
aas
cltd
push
jns
cld
ret
stc
adc
data16
adc
loop
mov
xchg
aas
jne
xchg
or
mov
cld
inc
les
jae
loopne
push
movsl
dec
es
mov
call
xchg
or
movntq
fsubrs
loop
fisubrl
bound
mov
mov
movsl
in
mov
pushf
mov
pop
sti
xchg
or
or
test
shrb
jp
mov
xor
and
xchg
sbb
xor
cmpsb
out
xchg
mov
cld
das
mov
leave
in
xchg
call
push
gs
ja
imul
jbe
xchg
in
movsb
test
add
ficompl
push
pop
data16
dec
and
loop
push
repz
shr
imul
popf
andl
in
insl
stos
mov
pop
lea
pushf
outsl
aaa
inc
daa
out
mov
mov
and
adc
xchg
add
mov
inc
mov
stc
sbbw
icebp
xchg
shl
pop
dec
mov
cmp
fs
pop
out
push
and
mov
xor
out
lret
daa
xor
xchg
mov
xchg
cmp
xchg
inc
xchg
mov
popf
push
or
int3
outsb
push
xorb
pop
addb
xor
sub
push
bound
test
enter
fwait
dec
xchg
aad
cmp
ds
sahf
cmp
nop
push
nop
idivl
cmp
andl
adc
imul
pusha
add
in
js
int3
mov
cmp
jae
lret
fmuls
idivb
inc
ljmp
ljmp
stc
or
lds
loop
or
test
sbb
pusha
bound
popf
push
das
add
test
and
pop
xor
push
mov
test
hlt
add
imul
xchg
dec
shrl
popa
cmp
lods
lret
jns
add
pop
xchg
filds
pop
xchg
test
cmp
mov
mov
call
js
xchg
cmp
mov
in
mov
and
ja
pop
ret
inc
sub
sbb
mov
pushf
jne
stos
shrb
xchg
fcoml
push
insl
jge
mov
out
fs
add
mov
and
pushf
cmpsl
jb
imul
push
adc
xchg
xor
int3
lret
mov
adc
les
or
adc
adc
rcrb
push
fndisi(8087
icebp
repnz
xchg
lret
invd
cmp
das
repnz
outsb
aad
shl
xorl
mov
lret
xor
nop
xchg
stos
cmp
pop
mov
pop
pop
scas
dec
mov
lock
int3
mov
pop
jmp
push
sub
daa
insl
add
ret
fwait
and
lods
add
insb
adc
sarl
add
jo
cld
and
in
xlat
jb
xchg
es
pop
xchg
dec
fcoml
imul
std
les
inc
jo
insl
pop
movl
repz
stos
insl
mov
js
arpl
dec
out
out
push
inc
rolb
sbb
in
lods
or
jns
test
xchg
mov
leave
xchg
adc
lahf
rcr
mov
mov
cli
cmpsb
addb
lret
adc
inc
cmp
cltd
outsl
push
pop
add
add
lods
cmp
into
mov
jne
adc
mov
fbstp
je
mov
dec
out
xchg
cs
loop
xchg
setno
dec
jae
pop
and
pushf
xchg
dec
in
mov
inc
mov
push
movsb
fdivs
pop
jae
inc
test
dec
inc
jg
or
or
pop
pop
cmp
jae
mov
fs
call
cmpsl
adc
mov
mov
outsl
cmc
adc
enter
inc
aaa
ret
adc
mov
mov
lds
add
jae
shlb
andl
xor
stc
cmp
popa
jno
cmpl
add
jl
push
push
dec
jb
scas
pop
push
xchg
std
dec
cmp
mov
sahf
sbb
mov
ror
insb
xchg
popa
or
and
push
sbbl
ret
and
push
adc
mov
sub
xchg
inc
dec
lds
mov
mov
xchg
jg
or
test
in
add
aam
sbb
pop
jmp
cmp
loopne
cld
add
or
inc
pop
sahf
sarb
push
hlt
cmp
ret
lret
ja
mov
push
inc
in
lret
aad
lods
sbb
lods
bnd
enter
adcb
ret
jno
leave
jle
and
vunpcklps
imul
dec
or
pop
cmp
cmp
jbe
sub
popa
sahf
cmp
mov
adc
xchg
es
cmp
das
add
leave
rorb
mov
loopne
outsb
mov
pop
loopne
popf
push
pop
mov
test
mov
mov
or
movsb
enter
andl
mov
xlat
xchg
xchg
push
mov
cmp
js
int
lahf
icebp
insb
pop
nop
cltd
xor
inc
cltd
test
nop
or
lcall
lds
mov
into
adc
scas
push
push
push
xor
sbb
and
mov
xchg
dec
mov
nop
jecxz
jp
lahf
dec
push
pop
fdivrp
xchg
jnp
das
jae
cmp
jl
inc
adc
pop
jge
mov
jbe
inc
pop
not
movsl
and
sub
movsl
inc
add
mov
xor
sbb
icebp
into
loope
movsl
push
scas
sbb
fnsave
mov
jl
add
iret
cmp
jnp
xor
push
jns
add
out
add
inc
push
stc
aas
push
incl
jne
adc
leave
pop
sub
pop
adc
in
and
jle
mov
cmc
and
adc
xor
int3
jo
ljmp
jl
jecxz
adc
fldenv
pop
xchg
or
jo
outsb
shlb
shrl
outsl
push
shl
jbe
stc
mov
adc
ljmp
les
jae
jge
mov
pop
jle
in
sbb
loop
add
push
fcomps
and
aad
adc
pop
and
cmp
sbb
xchg
or
std
ficoms
in
pop
sub
inc
test
adc
push
lds
das
cmp
push
fnstsw
pop
inc
inc
inc
je
scas
add
negb
std
les
out
test
inc
pop
repz
push
mov
push
int3
or
pop
xchg
test
jle
sbb
adc
sub
mov
add
fidivs
scas
and
pushf
sub
sub
fstpl
pop
nop
imul
popf
mov
sub
negb
or
inc
out
div
fidivrs
sbb
in
in
jge
or
fimull
jecxz
movb
mov
insb
jnp
jge
mov
pop
dec
cmp
clc
out
push
or
adc
repnz
fdivl
push
lods
lock
pushf
shrb
fs
xchg
sbb
es
rcrb
mov
jle
xorl
fisubrs
inc
pop
mov
jecxz
andps
iret
add
jle
jmp
mov
dec
pop
jns
and
loopne
and
icebp
pop
xchg
clc
icebp
jmp
aas
mov
orl
jge
icebp
mov
cmpsb
sub
dec
addr16
aaa
insl
lock
aaa
loope
mov
adc
mov
pop
push
push
mov
js
xor
push
cmp
bound
and
cwtl
xor
test
rcl
adc
ljmp
xchg
add
idivb
js
jp
vsqrtss
sbb
xor
and
clc
add
or
rcrl
and
push
cmp
mov
nop
add
in
sbb
mov
addr16
sbb
gs
cmp
mov
into
mov
push
orb
sbb
jns
mov
das
and
ror
pop
pop
jnp
lods
and
decl
and
ret
push
out
insb
in
jno
push
jns
out
xchg
push
fidivs
pushf
aaa
sbb
sti
add
jns
mov
nop
outsl
inc
std
xchg
lock
xchg
sub
xchg
imul
icebp
cld
outsb
dec
daa
mov
mov
dec
enter
and
xchg
xchg
shll
mov
cmpsb
das
loope
ljmp
addl
mov
cld
enter
stos
adc
mov
das
xor
jns
fwait
and
loop
sbb
and
cmc
sbb
ret
mov
cli
mov
loope
repz
xchg
lret
mov
ljmp
fcom
in
std
jl
jo
or
std
pop
dec
hlt
pop
fstl
jnp
jl
xchg
aam
push
mov
add
mov
inc
cmp
sub
data16
inc
jge
lret
push
sbb
or
cmpsl
ds
push
cwtl
xor
fisttpl
out
xor
mov
mov
pushf
daa
dec
lahf
xor
insl
dec
test
movsl
arpl
lods
js
test
fnstcw
bound
pop
push
jmp
mov
xor
scas
and
xor
subl
or
aad
push
push
cwtl
imul
fwait
cmpsl
or
pop
out
xlat
out
pop
lods
int3
lock
bound
or
gs
lcall
adc
rorb
jmp
loope
push
aam
mov
xchg
icebp
pop
add
push
popf
mov
or
mov
lret
cmpsl
cmp
clc
addr16
xor
into
adc
add
test
and
mov
int3
mov
std
or
mov
pop
and
subb
je
rcrl
lods
cmp
pop
lods
fdivrl
lret
outsb
or
mov
sti
cmp
outsl
test
cmp
imul
push
int
mov
sarl
mov
dec
enter
inc
int
in
push
icebp
js
fucomi
and
push
dec
rcl
mov
or
pop
or
in
es
dec
jns
clc
xchg
mov
repz
pop
jo
jge
mov
mov
mov
addb
hlt
add
xlat
outsb
jge
pop
sbb
pop
sbb
sbb
imul
dec
repnz
adc
sub
adc
iret
jl
insl
mov
mov
adc
gs
sbb
ffree
movsb
mov
mov
push
ret
jmp
fwait
jne
cmp
loopne
cmp
popa
xchg
jae
mov
mov
jge
lret
stos
jmp
in
aas
mov
faddl
xchg
fs
pop
std
mov
daa
test
daa
cmp
inc
ja
inc
int
inc
cmp
popa
xor
pop
aas
ds
add
add
adcl
sub
adc
sbb
loop
sbb
sbb
pop
sbbl
loope
jg
push
rclb
push
and
ret
test
or
xlat
js
out
neg
call
in
lea
sar
and
adc
add
mov
sbb
adc
mov
mov
iret
clc
adc
and
inc
fildl
push
loop
xor
xchg
pop
add
loope
sbb
mov
xor
xchg
adc
js
popf
sub
ja
adcl
push
or
jmp
pop
testl
pop
mov
roll
fmull
test
cmp
iret
push
addr16
repnz
daa
out
cli
mov
add
stos
pop
sbb
xchg
adcb
jbe
int
lods
xchg
cmp
push
push
mov
dec
cmpsb
movsb
out
cli
jo
xchg
jb
mov
outsl
lea
imul
inc
jg
mov
xor
movsb
ret
test
mov
repz
pop
sub
rorb
outsl
inc
lods
push
shrl
out
xchg
int
mov
fstpl
xor
mov
lea
jne
jl
test
cld
aad
pop
pushf
lahf
cmp
and
cmp
pop
jmp
sub
mov
insb
les
lret
cs
stos
jae
sub
cmp
cltd
stos
add
in
lahf
adc
and
imul
pop
addr16
push
stc
clc
mov
aad
pushf
fs
and
jo
das
pand
xchg
mov
jmp
lahf
cmp
xchg
adc
lea
call
cmpsb
dec
and
adc
xchg
movsl
cmpsl
pop
test
loopne
dec
outsb
repnz
inc
sub
cmp
push
outsb
push
movsb
and
outsl
lock
stos
fimuls
sub
rcll
dec
enter
pop
sbb
lds
fwait
imul
insl
jb
cmp
jl
aaa
dec
int3
jmp
pop
pop
pop
mov
jb
mov
pusha
repnz
out
into
adc
pop
jno
in
fidivrl
pushf
icebp
repz
aam
aaa
scas
in
mov
lahf
or
inc
imul
lret
pop
popa
mov
adc
jbe
orl
sub
push
mov
mov
das
mov
pop
pop
push
shrb
pop
outsl
enter
ljmp
je
inc
mov
push
cltd
mov
mov
in
sbb
scas
lret
pop
or
aaa
or
jecxz
cli
int3
fildll
mov
fdivs
test
mov
cmp
cltd
inc
or
hlt
lahf
int3
jae
aam
mov
mov
cmc
adc
jp
jle
mov
out
sbb
loope
lcall
push
add
test
aas
jnp
xchg
push
out
movsb
mov
inc
mov
repnz
mov
mov
popl
aad
dec
sbb
std
sub
addr16
mov
into
dec
pop
pusha
push
pusha
incb
inc
cmp
test
adcb
clc
fs
cmp
cmp
fs
gs
std
jl
nop
pushf
into
enter
mov
pop
xor
movsl
mov
lea
in
call
dec
clc
sbb
les
enter
mov
pop
pop
out
xlat
test
mov
cmc
inc
aaa
sub
punpcklbw
cmovg
ret
mov
mov
pop
cwtl
mov
push
mov
test
pop
dec
inc
push
fsubs
fsub
mov
aaa
mov
jns
sub
mov
fcmovu
mov
add
pusha
mov
mov
cmp
outsl
js
lods
idivb
mov
pushf
test
fwait
add
and
xor
daa
fistps
push
sbb
sbb
loopne
dec
ror
sti
push
int
mov
mov
mov
js
add
sbb
out
orb
mov
jno
scas
jo
insl
shrl
mov
push
popf
cmp
cmp
sbbl
or
mov
fistl
aaa
sahf
cmpsb
int3
inc
cs
leave
testl
or
cmp
dec
mov
sub
dec
in
xchg
scas
in
add
sub
rclb
loop
and
cmp
xchg
mov
mov
push
jp
mov
cmp
sahf
and
xchg
jle
arpl
sub
add
add
insb
inc
dec
mov
xchg
dec
or
into
fildll
inc
adc
xchg
push
mov
in
je
mov
xor
test
pop
mov
dec
cmp
or
mov
mov
push
adc
xchg
mov
dec
mov
mov
xlat
push
mov
xor
pop
dec
repnz
mov
mov
pushl
lea
lret
jo
mov
pushf
cli
fstpl
push
pop
xchg
pop
out
push
mov
fimuls
hlt
mov
into
sbb
jnp
movsl
fisubrl
movb
dec
mov
ljmp
lea
sub
cmpsb
shrl
mov
pop
mov
in
fisttpll
pop
pop
cmpl
sub
pop
cmp
add
cld
cmp
dec
lods
inc
fnstsw
xor
cmpsl
mov
test
cmp
push
and
das
mov
call
push
cli
out
ds
or
mov
push
mov
daa
enter
mov
in
lcall
jp
jmp
xlat
and
shlb
push
out
dec
jmp
call
std
or
out
push
imul
arpl
mov
jbe
push
xor
cmp
mov
push
orb
and
inc
call
sub
js
inc
cmc
sub
inc
mov
sbbb
in
cmp
aaa
inc
ja
dec
mov
mov
mov
mov
add
enter
dec
into
in
test
ficoms
stos
test
push
subb
addr16
pushl
daa
addr16
lock
sbb
jb
insb
or
in
xor
xchg
push
adcb
adc
out
pop
dec
cmp
ss
aas
cltd
ret
mov
xor
mov
gs
shrb
xor
push
ret
stc
lcall
lcall
mov
je
mov
xor
outsl
push
dec
dec
mov
ja
sbb
popa
scas
imul
mov
pop
icebp
dec
cmp
xchg
cltd
call
lret
pop
or
in
ds
pop
lahf
jo
ret
test
xchg
clc
mov
sbb
sub
int
aad
pop
stos
mov
jg
in
repnz
test
inc
inc
or
ret
pop
cli
mov
add
mov
add
inc
popf
hlt
add
push
clc
ja
mulb
into
push
push
cltd
std
lods
popa
std
cmpsb
cmp
fbstp
cmp
out
ja
xor
negl
push
dec
jno
jecxz
std
jg
xchg
pop
pusha
pop
leave
mov
xlat
pop
fisttpll
sbb
xchg
out
cmp
mov
jge
sbb
popf
fiaddl
push
add
int3
or
jmp
ljmp
negb
idivl
push
cmp
cwtl
lcall
icebp
jge
movsb
incb
lret
fistps
out
mov
xor
pushf
pop
mov
add
sub
add
push
ds
int
out
in
sarl
and
incb
mov
mov
mov
or
mov
popf
mov
pop
out
cmp
imul
jae
fildll
pop
leave
out
fisubs
push
stos
mov
int
ret
insb
das
cmp
xchg
push
push
cmpl
out
sbbb
sbb
icebp
sbbb
xchg
cmp
lret
push
jle
iret
mov
and
jbe
data16
cmp
xlat
mov
sub
out
add
jbe
test
xor
test
adc
push
out
mov
jecxz
mov
js
pop
pop
lret
in
xor
xor
es
dec
fnstsw
push
jl
and
cld
fs
push
in
pop
xchg
cmp
cmp
adc
push
mov
out
mov
mov
xchg
dec
pop
out
dec
clc
ljmp
mov
or
lcall
add
cmp
jl
setns
mov
and
gs
jae
sub
cs
push
repz
outsl
dec
and
fs
fidivs
or
mov
mov
cltd
mov
sbb
nop
mov
sahf
jecxz
mov
adc
call
mov
mul
in
sbb
jl
cs
push
xchg
mov
int
push
pop
adc
cmp
aas
xor
stos
into
loop
push
aas
mov
fisubrl
jmp
stos
popa
inc
adc
je
pop
push
es
xchg
test
jne
ds
scas
leave
mov
pushf
xchg
fcmove
insl
bound
divl
out
repz
pop
inc
mov
pop
lret
push
jbe
scas
test
ret
mov
jns
and
pop
aas
mov
test
lock
adc
xchg
int
pop
dec
jle
xor
lret
add
sub
in
pop
mov
pusha
mov
pusha
test
fwait
jbe
and
push
jg
rolb
cmp
fs
inc
lds
and
cvtps2pd
xor
cmp
andl
sub
and
jne
bound
aam
cli
cltd
loopne
out
or
andl
out
insb
js
pushf
scas
rcl
mov
fisubrs
mov
ficomps
in
cmp
and
aad
addr16
push
test
scas
jp
and
inc
loopne
imul
mov
xchg
jnp
mov
dec
jo
and
addr16
xlat
into
fbld
lahf
jns
cmp
or
and
cltd
xor
out
les
dec
mov
mov
movsb
fmul
aad
das
rorb
loope
aad
outsb
lods
or
sbb
mov
and
adc
cmpb
pcmpgtw
scas
aad
scas
pop
mov
mov
cmc
int3
mov
pop
int3
inc
mov
enter
jbe
jp
insl
cmpsb
lea
cltd
loopne
dec
or
fstps
inc
int3
loop
fwait
push
jnp
sub
int3
subl
movl
outsl
je
mov
mov
test
jmp
and
jl
mov
out
sbb
subb
mov
clc
xor
sbb
mov
mov
test
test
fcompl
push
jl
mov
movsl
adc
push
shll
xor
mov
es
in
icebp
mov
insb
es
and
out
xor
cmp
mov
inc
fidivrl
fs
jl
adc
push
inc
sti
mov
jns
ret
xchg
les
shrb
add
mov
ds
popf
dec
clc
les
in
pop
rcr
sbb
dec
pavgb
push
clc
sbb
mov
adc
pop
mov
cltd
pop
mov
test
cli
rol
cli
dec
mov
ror
sub
xor
rcr
std
jo
scas
movsl
adc
inc
inc
sub
inc
ficoms
test
dec
cmp
pop
xchg
pop
fstps
push
push
int
lock
pop
js
pop
cs
and
call
cld
mov
mulb
imul
notl
and
inc
aaa
cmp
inc
push
inc
in
and
and
aam
cmp
pop
sub
push
mov
xor
jno
ljmp
aas
js
adc
mov
imul
and
lods
outsb
out
mov
push
shl
sahf
and
ret
aaa
mov
mov
das
jge
arpl
add
jmp
stos
pop
in
adc
xor
into
js
jb
adc
push
or
sbb
loop
push
shll
sub
test
sti
jge
sbb
dec
aad
insb
ljmp
mov
call
or
inc
divl
inc
and
push
addr16
loope
xor
sar
rolb
imul
lahf
jbe
sti
xorb
call
cmpsb
push
cmp
stc
lcall
cs
sbb
mov
or
push
notb
inc
pop
in
ret
lahf
test
adc
inc
cmp
fld
pop
popl
xor
sbb
cs
jp
std
xor
pop
fwait
xchg
sub
xchg
out
add
imul
sub
push
call
test
fmul
adc
dec
je
xlat
call
stos
into
repz
into
mov
mov
xor
aaa
mov
and
mov
out
scas
adc
aad
sbb
movsl
and
lods
cmp
bound
es
out
ret
repz
xchg
mov
pusha
xchg
push
cmp
lds
jl
jbe
rcl
repz
ds
jbe
push
jb
and
enter
in
and
cld
push
or
out
rolb
pop
sbb
push
pop
mov
or
add
les
out
hlt
mov
dec
popf
cmp
xor
mov
push
cltd
push
insl
decb
outsl
aad
sahf
push
std
out
fsubrl
push
fcoml
lds
or
pop
adc
sub
lock
aaa
cmp
enter
mov
addr16
out
inc
or
aam
sub
out
rcrl
inc
jns
mov
gs
push
inc
movl
and
mov
and
ds
loopne
mov
not
and
sub
cli
inc
cli
lret
fdivrp
mov
xchg
push
mov
loop
js
ja
ret
pop
repnz
test
mov
jle
adc
inc
adc
inc
bound
cmp
scas
sbb
repz
xchg
sti
sbb
cld
inc
outsb
pop
jmp
or
add
cmp
ret
inc
pop
and
pop
mov
xor
pop
push
out
int
sti
into
pushf
mov
cmp
movsl
sbb
cmp
adc
insb
mov
sbbl
ret
popf
adc
test
mov
sub
fnstenv
xchg
sahf
in
and
jle
mov
jno
xchg
cmp
jge
sbb
pop
pop
das
mov
lock
jl
sub
sbb
and
out
and
push
mov
es
jae
cmp
xor
mov
adc
sbb
clc
test
addr16
decb
xchg
cmp
mov
xchg
outsb
dec
aad
push
adc
add
insl
dec
mov
sub
xor
cmc
ljmp
sub
mov
xor
adc
push
inc
pop
or
sbb
xchg
in
jo
test
jp
adc
and
dec
inc
cmc
mov
push
negl
and
sbb
push
lret
push
pop
cmp
cmp
jmp
mov
les
add
sub
out
scas
cli
or
xchg
outsb
andb
repnz
jne
and
xchg
cmp
in
fisubs
loope
mov
lret
out
ret
jmp
jle
and
push
mov
mov
inc
jle
and
cmpsb
nop
add
loopne
adc
ja
inc
jns
insl
fwait
mov
mov
ret
jmp
sub
fadds
popf
aad
mov
popa
clc
imul
jne
in
imul
mov
test
dec
inc
and
aaa
test
scas
in
aas
outsl
dec
adc
xor
in
mov
aam
clc
ret
inc
sti
out
insl
icebp
and
push
outsl
cli
and
mov
add
imul
xchg
dec
mov
mov
mov
fisubl
scas
fdivs
jbe
adc
ja
pop
sbbl
ret
fisubl
adc
sbb
imul
mov
leave
jl
jae
jmp
ljmp
sub
or
jmp
test
pop
outsb
testb
lcall
mov
cmp
cs
dec
or
mov
sub
inc
and
subl
fiaddl
leave
cmpsl
sbb
test
repz
xor
adc
inc
aaa
ficoml
mov
or
out
cmp
xchg
ljmp
aaa
out
ljmp
mov
pop
test
pop
mov
jmp
scas
sbbb
mov
jae
in
insb
lcall
das
mov
ljmp
mov
fwait
and
dec
xchg
push
rcll
add
sarb
xor
add
stos
xchg
les
aaa
clc
mov
insl
or
test
and
adc
test
imul
dec
getsec
rcrl
dec
pop
movb
and
push
je
scas
mov
shl
and
dec
xchg
cmp
adc
stc
mov
mov
sbb
cmpsb
insb
data16
test
rorb
pop
fsubrs
mov
pop
stc
filds
pop
add
mov
sbb
pop
shlb
sbb
pop
jmp
jle
jmp
enter
cmp
loopne
adc
or
mov
adc
push
adc
inc
in
mov
imul
adc
or
mov
xchg
or
jl
inc
into
mov
xchg
insb
xlat
mov
outsl
or
iret
pop
jno
push
xor
aas
sub
dec
jbe
cld
cmp
ss
outsl
out
cmpsb
gs
pop
lea
mov
push
bound
dec
sbb
hlt
xchg
testl
pop
ss
adc
and
out
jno
inc
iret
and
xchg
inc
movsl
insb
jge
mov
inc
push
mov
stos
aam
jne
xlat
cltd
test
and
not
ja
test
js
add
jle
sub
sbb
push
and
mov
movsb
aad
sysenter
pop
push
dec
aad
cltd
es
cs
outsl
mov
fdivs
mov
jecxz
dec
xchg
mov
cmpl
add
or
and
mov
mov
adc
and
and
bnd
pushl
aam
rcl
mov
sbb
scas
dec
sub
pusha
push
and
sub
pop
push
mov
popf
cs
inc
xorl
adc
dec
pop
fidivrl
addr16
mov
aam
stos
shlb
repnz
repz
fstpl
jne
push
sahf
cwtl
cmc
pop
add
fdivrl
jb
push
ffreep
and
lahf
jecxz
ja
adc
cmp
stc
cld
push
ja
test
mov
adc
mov
stos
push
lcall
mov
lods
cmp
sbb
aam
out
hlt
addr16
jb
negl
xchg
movl
mov
out
sbbl
sbbb
cld
add
aad
mov
push
xchg
bound
aad
test
push
aad
mov
aam
hlt
fdivl
mov
push
xchg
outsl
adcl
cmp
enter
std
cmpsl
test
xchg
adc
xor
imull
inc
mov
rorb
rorl
pushf
inc
or
inc
jmp
cltd
adc
mov
mov
shr
out
or
jmp
and
dec
in
aam
fs
add
mov
mov
std
test
dec
pusha
addb
cwtl
xchg
jge
movsl
sbb
mov
in
sbb
stos
or
xor
mov
in
xchg
sbb
push
xor
aad
flds
dec
push
fs
push
imul
sbb
inc
or
cmc
imul
mov
sahf
call
mov
stos
lahf
fadds
fcmovbe
mov
lcall
imul
push
pop
int
adc
pushf
push
or
xchg
mov
lret
mov
orb
adcl
and
and
shrb
js
jae
out
or
sbb
out
jg
loop
lds
out
lock
add
dec
test
xchg
shll
lods
mov
or
mov
in
arpl
mov
xchg
aam
mov
mov
clc
jge
lret
lea
mov
call
lret
mov
dec
xchg
cmp
cmp
xchg
cmp
roll
push
pushf
add
rcrb
sbb
clc
loop
mov
mov
das
and
push
shrl
push
scas
add
ficoms
fcmovne
outsl
inc
adc
movsb
sub
loop
gs
loope
xor
insb
lret
jno
lret
pop
dec
cld
out
jae
fs
mov
or
out
fcmovbe
iret
jg
pop
setns
xchg
movsb
cmp
xchg
lcall
cltd
out
mov
mov
fbstp
test
jge
ds
lods
subb
sahf
add
js
cmp
rclb
xchg
and
inc
mov
call
in
clc
movsl
scas
in
pop
fidivl
inc
push
mov
sub
pop
sbb
xor
test
ja
dec
test
cmp
ljmp
scas
jmp
jp
shrl
pop
popa
mov
xor
sbb
outsl
lock
test
jns
sbb
inc
jnp
sbb
xchg
sub
repnz
mov
push
jle
bound
insl
mov
mov
adc
cmp
dec
scas
les
lds
xor
mov
mov
bsr
mov
mov
pop
std
xor
add
nop
adc
jne
dec
and
sbb
call
pop
mov
in
sbb
lods
stos
xor
loopne
push
lea
int
mov
xor
jnp
insl
xchg
dec
inc
into
pop
ljmp
mov
cltd
js
dec
add
add
stos
fdivrs
dec
sub
sub
into
or
inc
cli
sahf
imulb
sub
out
aaa
fsubl
mov
ja
pop
pop
dec
imul
sbb
mov
ljmp
xor
dec
push
inc
push
or
pop
jecxz
mov
ja
call
push
cmp
lock
mov
and
lods
stos
aaa
shlb
xchg
mov
mov
sbb
sub
mov
pop
out
getsec
leave
mull
out
mull
adc
or
adc
and
jno
add
hlt
mov
mov
sbb
imul
fcomps
ror
push
fcompl
ret
xchg
xor
mov
pop
jnp
pop
pushf
sbb
sahf
xor
mov
pop
add
mov
mov
cmc
lea
fidivrs
mov
scas
lret
loop
jp
push
and
das
daa
add
insl
and
jb
lock
mov
loopne
push
call
cld
xchg
test
sbb
fsubs
push
int
xchg
and
fidivs
adc
mov
loop
cs
dec
lods
cwtl
xchg
mov
fs
outsb
mov
xlat
cmp
jae
mov
data16
and
pop
arpl
dec
in
mov
mov
imul
xor
ret
enter
mov
lods
mov
rcrb
and
fcmovb
les
xor
inc
movsl
out
stos
and
outsl
rcr
lock
sbb
adc
pop
mov
sbb
imul
and
sahf
xchg
adc
and
xchg
lret
aam
int
movsl
mov
xchg
pop
cmp
and
cmpsl
mov
lds
pop
repz
mov
xor
adc
inc
fadd
dec
fsubr
dec
inc
jb
jns
call
or
cmp
and
lds
jge
leave
stc
call
rorl
stos
xchg
adc
sbb
mov
popf
dec
into
rcl
pusha
xchg
int
jno
ret
mov
roll
adcl
xlat
pop
adc
scas
rorb
test
xor
das
mov
fisttpl
or
aas
mov
ljmp
adc
dec
out
jns
fsubrs
mov
adc
scas
std
mov
stos
fwait
ret
push
pop
cmpsb
outsl
mov
cmpsb
cwtl
out
pop
incl
lahf
fisttps
and
ret
dec
cmpsl
jg
addr16
into
mov
enter
fwait
push
jecxz
sbb
cmp
cmpsb
or
fcomps
push
lahf
dec
movsl
pop
movsb
lock
jle
push
cmpsb
pop
outsl
enter
sub
or
test
negl
pop
cmp
and
adc
pop
cmpsb
and
pushf
sbb
xlat
jbe
pop
push
and
inc
fistps
xchg
mov
add
in
rcl
lock
push
sbb
imul
xor
lcall
int
jno
pop
aas
popf
and
pop
sbb
fld
ss
aad
sbb
cmpsl
outsl
mov
in
jle
addb
jns
or
mov
dec
cmp
orl
xorb
scas
adc
pop
hlt
arpl
inc
add
dec
into
inc
popw
inc
test
cmpb
in
mov
fnstenv
std
es
jmp
jmp
or
sbb
jmp
jns
xchg
das
cmpsl
push
mov
lea
movsl
inc
pop
das
insl
pop
je
out
das
js
test
or
sahf
iret
fldl2e
aas
test
nop
loop
sbb
and
call
xor
ffree
cmpsl
jl
nop
and
fidivrs
movsb
cs
dec
add
add
aas
shrb
jns
imul
push
int
lock
mov
and
fstps
pop
mov
sbb
mov
or
mov
add
aaa
sti
jg
pop
inc
and
inc
add
xorl
lea
sub
sub
inc
lret
in
sarb
adc
aas
dec
fcoml
ss
push
and
mov
popa
dec
mov
imul
jl
gs
push
and
jno
fwait
into
repz
dec
xchg
push
aam
mov
jp
xlat
dec
int
jle
xchg
cmp
ljmp
movsb
mov
jnp
cmpsb
fdivrl
sbb
jbe
add
inc
lock
adc
rorb
popl
push
repz
xor
sbb
xchg
rcr
mov
scas
in
sub
and
sbb
lods
daa
pop
mov
add
aas
in
mov
inc
cmp
jo
sub
cmc
mov
xor
out
xchg
and
cmpsl
cmpsb
out
inc
pusha
xorl
jmp
cli
sbb
fidivl
lret
or
or
pop
das
jo
std
ret
jo
iret
jno
arpl
push
stos
push
je
hlt
test
repz
mov
sub
cmp
in
jo
cmp
lcall
test
adc
mov
jg
bound
xchg
out
and
xchg
sbb
xorl
mov
cmovo
lcall
pop
mov
dec
fisubrl
push
insb
ficompl
aad
ror
cmp
gs
imul
jecxz,pn
cltd
sbb
fwait
or
insb
mov
fistpl
lods
test
les
arpl
jmp
pop
mov
cltd
inc
xchg
ds
das
lahf
cltd
pop
mov
out
adc
mov
insl
push
push
pop
xor
xor
pop
pop
cld
dec
imul
dec
add
fnstenv
fdivl
loopne
adc
aam
cmp
inc
arpl
or
pop
inc
dec
sub
cwtl
add
enter
mov
adc
in
cmc
add
std
add
adc
xchg
cld
push
sahf
ljmp
fistpll
rol
popf
std
clc
lcall
andb
push
sub
xchg
inc
or
and
mov
xchg
andb
lret
testb
cltd
mov
dec
repnz
fcoms
rclb
mov
add
pop
sbb
ret
in
incb
lds
push
fsubl
out
pop
inc
sbb
movsb
loope
loop
fnstsw
ljmp
test
fsubrs
jnp
clc
cmc
fdivrl
je
icebp
add
es
xor
adc
push
xchg
push
jae
call
mov
sbb
mov
dec
or
add
in
sqrtpd
sub
pop
pushf
in
cmp
fidivrl
jp
xchg
hlt
ror
sub
iret
out
lds
stos
cltd
push
imul
add
loopne
pop
call
and
test
cmp
neg
add
cmc
aad
adc
sbb
mov
imul
leave
sub
cld
mov
mov
cld
fstps
stos
enter
popa
mov
div
cltd
xor
ret
xchg
lahf
push
lds
push
filds
mov
add
xchg
dec
push
and
arpl
jb
push
int
mov
loope
cmc
xchg
sbb
mov
inc
jns
mov
addr16
das
or
xchg
inc
dec
lret
fsubrl
ljmp
cltd
add
mov
jne
insl
sub
movsl
sarl
andl
dec
and
test
add
inc
push
xor
imul
ret
or
mov
in
sbb
and
or
test
frstor
lahf
inc
cmpsl
bound
dec
scas
out
adc
clc
daa
lods
lea
pop
jnp,pn
or
mov
loope
ja
dec
mov
out
ret
push
inc
in
out
cltd
cmp
and
pop
dec
push
pop
cmp
cmp
mov
add
jl
ljmp
test
aam
out
loop
xchg
mov
inc
mov
int3
push
push
loopne
mov
xchg
xchg
push
icebp
cmp
stos
add
ret
ds
clc
iret
jne
mov
jecxz
mov
mov
jg
add
jle
cli
pop
mov
sbb
xchg
pusha
add
shrb
jno
in
xchg
fiaddl
cltd
dec
pushl
pop
cmp
lret
cmp
rcrl
shrl
inc
mov
mov
mov
adc
fs
mov
xchg
sahf
adc
jb
test
jmp
dec
mov
cmpsl
lds
cmpsl
jo
stc
jbe
pop
add
lods
or
sahf
popa
add
jnp
lcall
jae
loope
pop
cld
ljmp
and
cmp
movsl
dec
push
cmp
test
adc
outsb
cmpsb
fstpt
insl
sub
xor
loope
mov
gs
jb
hlt
or
and
and
call
sbb
imul
hlt
loop
or
pop
inc
or
gs
inc
mov
and
or
jns
mov
je
pop
lods
addl
mov
xchg
and
xchg
dec
test
jg
mov
addb
fucomi
pop
xchg
xor
js
ja
cmpsl
or
inc
mov
mov
flds
das
test
mov
das
xlat
mulb
pop
movsl
pop
dec
movb
mov
repz
lahf
jnp
mov
cmp
mov
bound
inc
jl
out
sub
xor
dec
cmp
add
mulb
movsl
outsl
xchg
cmp
sbb
inc
push
jns
imul
pop
mov
mov
xchg
cmc
inc
in
pop
push
fdivr
ss
jg
daa
sbb
shlb
lcall
stc
mov
pop
jb
push
movsb
dec
inc
in
xchg
pop
rorb
outsb
jno
mov
inc
mov
adc
xor
mov
xor
popf
lretw
mov
iret
push
cmp
repz
adc
push
adc
xlat
cli
jb
jns
shll
or
push
sbb
push
rolb
fisubrs
test
hlt
orl
fmul
addr16
aas
ret
add
pop
fdivs
insb
push
stc
or
cmpsl
xor
pop
dec
nop
stos
jle
dec
jg
jno
rcrb
cmp
fildl
std
mov
fimull
insb
fmull
sbb
in
int
daa
cwtl
lods
pushf
inc
subl
mov
cmp
clc
mov
stos
fcmovnbe
ljmp
cmpsb
mov
insb
cmp
mov
mov
mov
jecxz
jo
inc
sbbb
gs
fmull
and
sub
enter
or
cmp
mov
lock
cmp
xor
inc
adc
cltd
mulb
xchg
repz
mov
fwait
lret
fldenv
or
jle
xor
nop
mov
dec
test
inc
hlt
and
sbb
add
std
bound
mov
push
mov
dec
xchg
aaa
push
mov
cmp
xlat
lods
iret
pop
stos
cmp
daa
jecxz
pop
dec
or
and
imull
mov
jbe
stc
and
test
test
cltd
inc
pop
cmpsl
cltd
aaa
jbe
mov
icebp
adc
sbb
cwtl
push
cmpsb
jg
lods
movsb
and
inc
mov
adc
xchg
filds
adc
push
xchg
push
orb
fwait
cmpsl
popa
push
push
sti
mov
cmp
dec
add
mov
ja
xchg
iret
push
mov
add
xor
push
sbb
adc
shl
add
mull
inc
add
inc
mov
addr16
fbld
pop
sar
sub
dec
aaa
lea
daa
sub
jbe
push
mov
sbb
das
int3
movsl
addl
pop
sub
mov
fldl
inc
pop
pop
jl
push
and
fwait
cmp
inc
inc
adc
dec
out
mov
pusha
xor
mov
cmp
lock
fwait
ljmp
adc
sbb
imul
das
fs
jo
and
in
pop
and
push
into
xchg
lahf
scas
outsb
xor
mov
jecxz
outsl
icebp
push
dec
popf
popa
lret
push
int
sbb
adc
scas
shll
jb
jle
cmp
in
fadds
fld
bound
pop
pop
sbb
inc
shr
loop,pt
gs
js
sbb
insb
test
sub
jecxz
sub
jecxz
or
jl
aaa
mov
cmp
xchg
xchg
sti
cs
mov
xchg
xor
loopne
fwait
int
in
movsl
jno
jmp
xchg
inc
movb
jp
inc
lahf
mov
jns
repz
insl
lea
jmp
sub
aas
mov
pop
arpl
inc
adc
mov
mov
dec
into
dec
clc
sahf
stos
xor
dec
mov
mov
xchg
js
mov
cmp
mov
mov
sarb
stc
loopne
mov
mov
pop
cmp
xchg
into
xchg
out
push
sub
push
rorl
rolb
and
pop
mov
mov
pusha
jg
dec
mov
out
scas
ffree
fidivrl
adc
cmp
rorl
adc
mov
pop
stos
push
popf
popa
mov
hlt
xchg
int3
dec
adc
adc
jno
test
pop
fs
stc
and
lods
std
sub
jne
add
pop
sub
add
jno
aas
leave
js
xor
aam
mov
cli
lea
fadds
aad
push
daa
push
add
fidivrl
xor
aas
mov
inc
sub
or
loop
test
mov
leave
loope
add
scas
std
into
inc
mov
adc
pop
lock
jl
gs
mov
jns
pop
cmp
adc
mov
fsts
mov
loop
test
lock
adc
stc
sbb
ja
cmp
in
mov
lret
loopne
cltd
and
inc
aaa
xlat
mov
fdiv
mov
fstpl
dec
in
mov
stc
pop
xchg
int
fbstp
lcall
xor
bound
ja
ret
test
inc
fwait
shlb
push
pop
sub
mov
add
adc
jl
cld
sub
mov
shll
mov
das
push
xchg
sbb
fwait
or
into
scas
jae
scas
sti
mov
and
inc
idivl
xchg
outsl
xchg
lcall
pusha
jae
es
mov
add
sbb
in
ljmp
pop
adc
mov
and
sbb
ret
repz
aad
test
movsb
iret
pusha
pop
sbb
adc
sbb
int
cmpsl
mov
mov
test
ss
movsb
add
sub
cld
test
lahf
pop
lods
xor
in
mov
mov
lock
sub
and
pusha
test
fwait
arpl
shll
sbb
adc
in
mov
jno
mov
imul
inc
decb
repnz
repz
xchg
xor
dec
sarl
shrl
test
adc
cmc
xor
push
lock
pop
stc
sahf
push
sbb
aad
push
test
adc
mov
inc
out
loop
jns
pop
daa
pop
jno
rorb
add
movsl
out
add
sub
mov
pop
pop
inc
xchg
inc
callw
and
in
lea
cmp
sbb
es
loop
dec
out
test
movsl
mov
jp
mov
pop
andl
mov
adc
leave
cmpl
fwait
push
pop
rdmsr
int
cmp
jecxz
sahf
popa
push
leave
inc
dec
cmpsb
lea
pop
loopne
stos
rcrb
sub
sbb
cmp
loope
jecxz
imul
insl
icebp
push
or
repz
push
test
inc
adc
ret
jne
cmpsb
or
jnp
xchg
outsl
and
ds
lock
jo
add
rcll
mov
fidivrl
pop
pop
sub
inc
xor
out
loopne
shll
je
jecxz
fstps
pop
addr16
sbb
cmc
scas
adc
aaa
notb
mov
in
mov
sub
add
repz
push
in
sub
push
orb
or
fmuls
xchg
cmc
lds
mov
jb
clc
mov
pop
sub
xor
xlat
jmp
and
jmp
push
cs
mov
or
in
call
pop
iret
lret
fxch
add
mov
xchg
cvtpi2ps
xchg
dec
mov
push
xchg
inc
add
dec
inc
ret
dec
cltd
push
or
aad
js
idivl
pop
ss
jns
xlat
pop
sbb
in
movsl
mov
lret
or
mov
sbb
leave
lods
sub
and
xchg
push
popa
add
int3
vpavgb
btl
push
sub
comiss
test
dec
iret
fiaddl
mov
imul
test
sti
push
int3
inc
rorb
jne
nop
ljmp
loop
xchg
aad
push
jmp
lret
shrl
mov
jns
mov
fdivl
mov
pop
in
imull
into
test
ret
or
and
into
fisubs
and
mov
adc
addr16
stc
insl
out
lcall
pushf
aam
jp
push
jbe
add
sarl
mov
xchg
ror
fwait
out
xchg
icebp
jmp
lods
cmp
inc
inc
sahf
mov
arpl
mov
jne
mov
mov
pop
orb
in
cwtl
sub
stos
push
jne
and
imul
mov
insb
push
iret
into
in
add
pusha
dec
lahf
lahf
ja
inc
pop
cltd
inc
fildl
sbb
sbbb
mov
fisubrl
add
data16
test
arpl
jmp
mov
rclb
cmp
sbb
xor
and
arpl
sub
mov
cmp
cmp
pop
lea
inc
mov
xor
dec
mov
sbb
mov
fistpl
out
loope
cmpsb
fnstcw
mov
and
scas
push
aaa
negb
arpl
push
and
pusha
out
cmp
fisubrs
inc
mov
rcrl
leave
popa
clc
scas
and
lahf
fdivrs
push
lahf
sub
xchg
fiadds
or
in
outsb
fucomi
arpl
and
or
rorl
add
cmp
scas
aam
in
add
dec
xchg
push
lods
gs
add
test
bound
add
imul
sahf
jbe
sbbl
cmp
dec
repnz
push
out
jge
arpl
inc
cmp
mov
add
inc
xor
arpl
bound
push
pop
cli
jo
push
ret
lods
repnz
mov
les
pop
xchg
and
popa
mov
mov
push
loop
pop
in
gs
inc
mov
loopne
push
ds
notl
dec
scas
pop
add
dec
mov
sbb
push
and
cwtl
icebp
test
bound
or
mov
outsb
imul
jge
push
sbb
cmpsl
adc
mov
adcl
push
leave
das
xchg
push
sbb
pop
mov
test
or
imul
cltd
xchg
pop
xor
mov
sub
mov
sub
outsl
fwait
push
xchg
imul
mov
sub
mov
data16
andl
jae
or
lcall
dec
arpl
lahf
pop
std
or
cmc
outsb
pop
pop
ss
cmp
inc
jae
push
in
push
jae
sbb
arpl
sub
test
jne
pop
pop
test
or
push
adc
fistps
repz
or
stos
cwtl
icebp
or
fdivrs
divb
push
xchg
insl
pop
outsl
cmp
dec
scas
dec
aad
inc
ret
dec
and
test
popf
inc
pop
dec
lock
jne
adc
cmova
in
mov
or
ss
xchg
aaa
stos
cmp
mov
xor
fisubrl
jg
xchg
adc
sbb
push
cld
jb
pop
sbb
mov
dec
pushf
into
cmp
or
ja
subb
xor
les
mov
inc
lret
insl
int3
imul
testl
add
dec
cmpsb
jbe
inc
jecxz
sbb
fs
data16
mov
pop
outsl
ficoml
stc
xchg
mov
xlat
jp
push
mov
cmpsb
js
in
push
mov
mov
mov
int
das
add
pop
jmp
shlb
inc
xlat
test
sub
xor
int
xor
push
pushf
movb
jbe
xlat
sub
xor
cmp
pop
dec
rorl
test
loopne
xlat
pop
push
jo
push
mov
inc
cwtl
lret
xchg
xlat
mov
loope
dec
cli
add
adc
xchg
mov
out
sub
pop
out
jne
or
in
push
or
out
insl
lock
mov
mov
fnstenv
imul
stos
sub
inc
mov
arpl
and
je
push
clc
stc
movsb
sqrtps
xor
lock
std
dec
mov
pop
xchg
test
js
dec
add
lea
adc
js
xchg
pop
cld
sbb
flds
and
mov
inc
sub
mov
bound
and
lea
mov
jns
pushf
cltd
push
fildl
or
cmpsb
inc
xchg
push
outsl
mov
push
add
dec
leave
cmp
shlb
rcr
pop
adc
clc
fnstsw
or
pushf
mov
es
mov
push
jns
rol
mov
cld
pop
xor
ja
mov
lea
cmpsl
mov
hlt
fsubrp
stc
int3
mov
idivb
push
jp
cmp
leave
add
xchg
cltd
sub
lcall
out
mov
test
xlat
shll
jp
mov
add
into
pslld
sbb
and
mov
push
push
aaa
out
mov
iret
leave
fs
pusha
movb
jae
int3
scas
xchg
mov
cmp
ljmp
jl
adc
mov
or
cmc
pop
repnz
roll
dec
add
fadd
add
jnp
dec
push
pop
je
adc
push
pmaxsw
push
cli
cld
sbb
stos
aad
repz
push
adc
inc
add
push
clc
in
sahf
jbe
sub
cwtl
loop
and
mov
or
sbb
inc
cli
pop
jmp
and
ljmp
in
stos
xchg
mov
hlt
inc
and
nop
lock
loop
lcall
or
push
aam
test
push
push
and
test
push
dec
dec
sbb
push
out
sbb
in
add
or
shlb
in
iret
hlt
xchg
out
jbe
idiv
loopne
jne
push
out
cmpsb
stos
cmpsl
clc
mov
dec
cmp
or
and
dec
lds
daa
mov
ret
xor
loopne
mov
fldl
stos
dec
sub
inc
mov
adc
addr16
bound
dec
mov
fimull
dec
xor
shl
inc
mov
addr16
out
xor
mov
add
hlt
or
into
imul
and
jmp
dec
xor
cmp
stc
test
xor
or
dec
lret
sub
add
xlat
fisubl
cmp
inc
pop
dec
fiaddl
stc
adc
in
pushf
mov
mov
mov
inc
mov
push
cltd
jb
or
loop
pop
in
jns
aas
imul
lods
scas
jbe
cwtl
dec
jl
xor
mov
popf
stos
mov
inc
fldt
js
popf
mov
mov
mov
mov
push
dec
sbb
mov
sub
js
dec
mov
lock
mov
fidivs
jecxz
adc
mov
int
xchg
test
xlat
fld
sbb
shl
mov
dec
popa
xchg
enter
mov
scas
in
jo
mov
orl
adc
lea
jmp
in
test
xchg
mov
and
mov
push
xlat
xchg
es
call
je
lret
sub
pop
int3
inc
mov
loop
lods
out
mov
enter
xchg
mov
gs
push
cmpsl
mov
or
subl
sub
rcrl
sbb
mov
jp
jmp
daa
and
imul
scas
xchg
arpl
sub
mov
mov
test
rorb
out
pand
dec
dec
ss
fwait
daa
imul
mov
leave
mov
fldenv
pop
pop
xor
push
outsl
loop
fcmovbe
dec
sub
jns
mov
out
adc
dec
arpl
into
incl
dec
pop
mov
sub
xor
pop
jle
mov
pop
outsb
mov
xchg
cmc
dec
cmp
pushl
push
lcall
stc
fistl
xchg
sahf
jns
jbe
fsts
xchg
mov
rorb
jp
jbe
imul
or
enter
pop
in
cmp
insb
xlat
stc
sub
faddl
mov
push
pop
sbb
fmuls
mov
std
mov
andb
push
or
ljmp
jge
std
jecxz
sbb
mov
pop
mov
aam
popa
pop
cmpsl
or
aam
out
add
out
ja
pop
je
xchg
test
fsub
xchg
sarl
dec
add
cld
cmp
pop
adc
jne
fucom
xor
daa
sbb
pop
aaa
mov
pop
sub
xchg
test
lret
int3
imul
sub
sub
cmp
sbb
in
cli
or
sbb
sbb
push
sti
std
mov
pop
push
xchg
test
test
xor
mov
jbe
outsl
in
jb
dec
pop
loope
xchg
jns
movsb
add
ss
mov
jecxz
outsl
adcl
dec
mov
cmp
and
jg
push
or
sbb
push
xchg
fcompl
jecxz
and
dec
stc
or
jne
leave
sarb
xor
xor
sti
xor
testb
loope
out
call
xor
xor
mov
ror
push
mov
mov
shll
inc
mov
xchg
rcrl
xorb
nop
xlat
shl
cmp
sbb
sbb
and
iret
sbbl
push
cs
loope
sbb
push
ja
popf
sbb
add
pop
mov
sub
mov
xchg
add
mov
dec
xchg
sti
lods
faddl
out
gs
mov
jmp
mov
testl
std
adc
mov
xchg
pop
xchg
in
mov
in
sub
sbb
add
pushf
xchg
cmp
shrl
add
dec
lea
adc
add
dec
in
in
flds
jp
pop
xor
repz
leave
fmulp
clc
fdivs
mov
lret
xchg
push
mov
sarb
outsl
out
aad
dec
dec
into
xchg
pop
jns
xchg
jmp
in
leave
add
pushw
shl
mov
jae
loopne
xor
jnp
stos
inc
jg
and
incl
or
dec
test
enter
dec
pop
aad
sub
cmc
in
out
bndstx
mov
xchg
repnz
rcll
out
xchg
popf
mov
sbb
xlat
arpl
shlb
pop
mov
and
jecxz
ret
dec
jle
mov
or
adc
jae
dec
cld
inc
push
int
nop
mov
cmp
les
add
jg
mov
cltd
mov
pop
jge
cmc
imulb
in
mov
cmp
push
sahf
mov
xchg
frstor
fcmovnu
stos
mov
leave
xchg
stc
std
loope
xor
push
bound
xchg
scas
cmpsb
jge
int3
outsb
xchg
sbb
xor
rclb
jge
sbb
mov
xchg
inc
jge
mov
pop
pop
inc
sbb
add
sub
fdivrl
xor
add
fdivrs
mov
pop
cld
sbb
lahf
add
dec
stos
add
cwtl
int
mov
scas
jge
sbb
dec
bound
or
and
mov
hlt
or
scas
sahf
jmp
cmpsb
xor
fbstp
fstpt
mov
cmp
sbb
sbb
incb
scas
dec
and
adc
add
shrb
outsl
movsl
popa
cmp
cld
jl
xchg
clc
aam
neg
add
pop
jl
std
push
jns
inc
in
mov
inc
inc
lret
cmpsl
rcll
xor
cld
daa
lock
inc
stc
sbb
jmp
mov
mov
inc
call
out
push
test
mov
or
fcompl
mov
mov
pop
jno
jo
idivb
out
xorb
sub
testl
cmpsb
int3
mov
jp
pop
popf
mov
out
cli
mov
mov
pop
xor
roll
je
push
push
dec
outsl
orb
jne
pop
dec
cmp
repnz
loope
sub
sahf
call
sub
inc
mov
pop
movsl
movsb
mov
cmpsb
aas
fldcw
push
sbb
scas
or
xlat
jg
mov
aaa
in
jmp
mov
es
pop
mov
mov
xor
push
ljmp
mov
stc
and
call
xchg
sbb
inc
sub
inc
subb
fstl
and
bound
adc
fimuls
xchg
cld
insb
sbb
mov
or
mov
mov
mov
mov
sti
jge
push
jmp
or
jb
dec
push
xchg
mov
jne
out
mov
loop
xchg
mov
or
fprem
cmpsl
xor
ret
fistps
sub
or
mov
sbb
scas
and
mov
in
into
mov
stc
jb
add
aaa
lock
xchg
mov
sub
jg
mov
xlat
inc
inc
insb
dec
mov
jle
or
xor
jae
mov
inc
or
jmp
loopne
or
fcomps
sbb
or
mov
int3
shlb
xor
xchg
clc
push
leave
fxch
rclb
outsw
push
xlat
jno
pushf
dec
shll
sub
jns
dec
and
sub
push
testl
call
cmp
inc
shll
dec
call
daa
sbb
xchg
push
insl
scas
jge
pushl
adc
sahf
outsl
add
and
mov
push
shl
dec
jp
pop
and
jecxz
jno
sub
iret
sub
int3
nop
imul
cmpl
xor
in
andb
jmp
aas
mov
leave
sahf
jo
cltd
and
mov
rcrl
inc
testb
jne
cmpsb
cmp
rclb
sbb
cwtl
clc
dec
dec
notl
pushf
and
jnp
subl
loopne
lcall
push
xchg
fucomip
gs
loop
pop
jno
loope
repz
pop
out
sbb
bound
jno
add
sub
pop
lds
sahf
xrelease
aas
inc
or
stos
movsb
push
sub
cvttps2pi
out
cmp
xor
cmp
pushf
loop
pushf
xchg
arpl
iret
sub
in
fxch
or
xchg
jp
mov
sub
andb
xor
xor
push
sub
jnp
jmp
inc
lahf
movsl
scas
fwait
daa
sbb
or
sbb
jmp
and
ss
add
jecxz
in
adc
inc
and
orl
fiaddl
mov
notw
outsl
ret
jge
sub
into
xorb
jle
or
sub
movsl
dec
push
sub
outsl
sbb
loope
jg
lret
mov
mov
sub
xchg
out
cs
in
push
movsl
jecxz
ficompl
fs
pop
mov
xor
cld
push
sbb
sar
or
cmpsl
pusha
dec
fnstcw
add
sbb
mov
shrb
js
adc
jae
inc
test
jne
push
mov
lods
arpl
repz
xchg
scas
aad
xchg
cmpsl
das
call
into
lds
fcomps
jne
stos
ret
pop
aaa
iret
in
shlb
inc
xchg
pushl
or
mov
mov
inc
push
pushf
jle
adc
pusha
push
mov
jmp
cmp
cwtl
loope
jmp
sbb
ret
fistps
cmp
cmpsb
dec
mov
lret
xchg
or
clc
push
mov
ret
sarl
data16
mov
insb
lret
outsl
out
sbb
mov
dec
fimuls
pusha
xchg
dec
or
jb
fnstsw
push
icebp
cmc
push
xchg
sub
mov
out
insl
cmp
hlt
inc
rorb
sbb
in
repz
and
add
dec
test
insl
jmp
pushf
pop
and
or
jmp
es
sub
add
insb
lcall
adc
and
pushf
push
inc
pop
bt
in
lahf
icebp
inc
fidivl
xor
mov
xor
neg
fdivrl
jnp
add
fdivrl
or
sbb
subb
xchg
ret
rolb
mov
bound
adc
es
xchg
jnp
mov
in
out
fcomps
jns
icebp
dec
popa
movsb
lods
push
mov
pop
outsl
mov
sbb
stos
mov
adc
cmp
mov
pop
aas
loop
inc
push
ds
cmp
mov
aaa
xchg
das
hlt
loope
dec
mov
cli
mov
jne
mov
mov
insl
push
push
ja
mov
andl
pushf
sub
daa
sahf
jl
cmp
pop
push
jnp
push
xor
das
adc
je
adc
or
in
sti
aaa
mov
inc
imul
in
inc
pop
adc
ret
or
repnz
mov
imul
xchg
lret
dec
mov
pushf
jnp
ljmp
inc
push
push
mov
mov
add
sbb
mov
lock
xchg
pushf
xchg
aaa
decb
sub
icebp
mov
lods
stos
mov
out
mov
push
xor
or
mov
or
out
loop
sbb
sub
dec
xor
hlt
rolb
loopne
and
das
and
fadds
pop
ret
xor
mov
aas
xchg
out
or
push
addr16
jge
mov
jo
ss
sti
sub
sub
xor
ljmp
out
lods
mov
push
shlb
jno
adc
out
push
push
ja
sub
icebp
pop
stos
jno
mov
pop
cmp
xor
add
popf
outsl
xchg
mov
mov
push
pop
push
aaa
int3
push
ljmp
les
iret
fsubl
sub
jl
or
mov
insl
movsl
fists
mov
insl
sub
mov
jae
push
push
add
push
stc
adc
or
xor
jmp
scas
pop
dec
fsts
popa
out
sbb
hlt
xchg
mov
ja
ljmp
jecxz
out
cmp
cmc
div
xor
imul
lds
mov
push
adc
sbb
cwtd
in
cmp
incl
int
out
cmp
repnz
xor
xlat
fstps
imul
in
clc
icebp
mov
sbb
call
les
mov
lds
in
rolb
out
or
mov
xor
pushf
repz
shlb
xchg
xor
xchg
insl
sub
xchg
cmp
fisubl
mov
pop
call
mov
ret
clc
pop
pop
cmpl
and
fisttpl
lcall
mov
test
test
je
dec
mov
jg
pop
add
inc
aad
lock
and
lret
neg
inc
hlt
xchg
scas
push
dec
jle
mov
adc
jp
cltd
cmpsb
rclb
mov
pop
mov
outsl
je
cmp
cmp
xlat
clc
add
loope
aad
int3
cmp
adc
enter
xchg
adc
cmpsl
out
int3
jno
sbb
cld
hlt
and
or
int3
cli
fstpl
adc
add
fs
xchg
sti
test
mov
inc
mov
sub
les
iret
mov
mov
out
dec
lods
bnd
mov
xlat
sub
dec
add
cltd
lcall
into
jns
sti
mov
mov
shrl
or
fwait
adc
mov
dec
in
and
insl
pop
les
jbe
or
push
enter
ljmp
jg
sbb
push
mov
ss
insl
daa
test
movsl
inc
add
imulb
sbb
cs
or
push
pop
sub
pop
add
mov
aas
mov
jbe
sub
fs
cmpsb
fs
lret
roll
jmp
pop
negb
pop
lahf
mov
lock
rolb
xchg
ret
dec
nop
mov
xor
and
ret
cwtl
mov
mov
lock
add
mov
mov
fdivrp
inc
dec
sbb
shr
ss
cwtl
lock
cltd
adc
lea
and
int
mov
xchg
mov
rorb
sbb
out
push
push
or
push
mov
mov
scas
cmp
int3
fimuls
mov
xor
inc
xor
mov
jbe
pop
shlb
int
in
pop
add
xor
or
inc
sub
jle
push
loopne
pop
ret
lods
xchg
inc
add
inc
inc
lea
cmp
cli
xchg
cltd
jnp
xchg
ret
push
loop
mov
xor
call
cmp
and
adc
and
stos
adc
and
adc
stc
iret
pushf
scas
dec
fucomip
hlt
sub
es
mov
sub
mov
aaa
in
cmc
and
in
div
ffree
mov
xchg
add
cmc
or
push
popf
mov
xchg
clc
xor
pop
mov
push
ja
mov
test
xchg
add
dec
les
pop
popf
and
xlat
xchg
sub
dec
lock
jns
cmp
aad
cmc
ret
cmpsb
inc
inc
mov
cmp
inc
mov
testl
out
mov
ror
adc
in
jecxz
jle
jae
and
pop
bnd
enter
gs
push
mov
xchg
out
pop
push
sub
cmp
sbb
rorb
jbe
hlt
lds
add
sbb
push
push
dec
loop
jecxz
cmc
js
xchg
pop
xor
push
inc
mov
in
xchg
cwtl
je
mov
decl
ljmp
add
cli
mov
ficoms
mov
lods
scas
jl
push
fbstp
xchg
add
std
pushf
jb
inc
mov
add
xchg
pop
pop
mov
outsl
movsl
mov
dec
divb
movsl
sbbl
in
sti
dec
pop
sbb
and
mov
fists
lea
mov
dec
orl
push
mov
mov
lds
ja
push
cmpsl
mov
and
inc
xor
xchg
xchg
sbb
test
shll
cmpsl
imul
inc
mov
int
out
mov
dec
and
insb
xlat
dec
std
sub
pusha
adc
xor
rcrb
xchg
lods
jo
shl
adc
xor
repz
mov
and
push
ss
xchg
adc
jnp
insb
iret
xchg
dec
movsl
inc
mov
testb
pusha
jmp
outsb
shrb
xchg
pushf
mov
mov
mov
jmp
and
jae
dec
gs
and
xlat
mov
ret
sub
shrb
jb
dec
push
in
lret
sarb
xor
mov
xchg
push
bound
sub
vcmpsd
scas
mov
inc
push
dec
inc
aam
and
stos
jne
mov
jmp
xor
mov
ret
xchg
sarl
imul
popa
jae
mov
push
es
stc
ret
aam
mov
ret
aaa
and
mov
and
push
ret
rcrl
jecxz
mov
pop
cld
add
pop
lods
mov
xor
add
comiss
adc
aaa
jae
adc
jp
inc
int
push
cmp
mov
flds
imul
xchg
adc
mov
add
vxorps
out
cmp
xchg
je
xchg
pop
dec
cltd
stos
mov
mov
cmp
outsl
pushf
or
and
inc
sbb
push
pop
push
add
rcrl
loopne
adc
test
mov
mov
mov
mov
or
dec
stc
push
addl
dec
xchg
inc
jo
popf
dec
xchg
outsb
test
es
out
mov
sbb
fisubs
ds
add
movsl
into
pop
ja
pushf
inc
test
outsb
mov
leave
scas
mov
sti
test
cmp
stos
mov
dec
push
inc
rclb
inc
lock
inc
lods
sbb
and
xor
pushf
dec
cmpl
je
or
rorb
cli
iret
mov
mov
adc
inc
inc
imul
outsl
add
mov
in
dec
sbbl
push
mov
sar
sub
dec
out
jbe
insl
xchg
adc
pushf
push
push
add
push
in
inc
loopne
je
repnz
lret
subl
test
outsl
movsb
js
fdivrp
mov
dec
shll
jo
jno
cli
mov
xor
sub
nop
inc
stos
push
mov
movsl
cwtl
imul
ffreep
ret
cmpsl
leave
imul
int
faddl
sbb
pushf
xor
bound
mov
insb
fldenv
or
adc
sub
fsubrs
mov
jmp
push
mov
inc
in
pop
cld
xchg
fsubp
mov
scas
xchg
ret
or
scas
cmp
xchg
dec
lahf
test
fldl
push
out
cli
sbb
mov
sub
lcall
fisttpl
fstpl
roll
ljmp
cmc
and
mov
inc
inc
inc
or
sbbl
insb
test
in
jp
push
jne
sub
sub
js
xchg
jns
fwait
xchg
jae
out
and
sbb
dec
dec
arpl
xlat
mov
add
jno
fildll
and
in
xor
xchg
sbb
adc
xchg
arpl
imul
fmuls
shll
mov
push
inc
dec
or
popf
das
mov
nop
imul
mov
push
xor
push
inc
pop
lea
sti
sti
movsl
shlb
pop
in
mov
out
jl
cmp
mov
imul
sub
mov
xchg
testb
pop
xchg
cmp
insl
add
pop
hlt
cwtl
cmpsb
jb
mov
jge
adc
cmc
loop
shlb
out
push
insl
out
stos
loope
les
xchg
pop
insb
sbb
add
sti
sti
in
xorb
cmc
nop
daa
pop
test
pop
mov
sub
or
xchg
in
pop
jg
lcall
or
das
jns
fisttpll
dec
test
rolb
arpl
sbb
push
cmp
data16
or
outsl
inc
dec
call
fdivrs
test
xchg
mov
jecxz
lret
imul
leave
xor
inc
sbbb
fwait
cmp
enter
or
mov
push
insl
mov
adc
scas
mov
pop
mov
cmc
dec
or
scas
add
test
add
cli
pop
out
pop
gs
sbb
inc
insl
sbb
jno
cmpsb
icebp
fwait
repnz
push
fadd
outsl
mov
lahf
insb
scas
adc
cwtl
pop
jne
jb
loopne
and
int
jle
cmpsb
repz
shl
dec
ss
sub
mov
mov
out
lret
int3
gs
push
cmp
jo
popa
push
stos
ds
aad
mov
jl
adcl
in
test
out
push
add
cmc
mov
mov
sahf
int3
fldenv
pop
movsl
mov
jno
test
mov
stc
push
enter
mov
mov
scas
mov
pusha
push
mov
stos
xchg
int3
jne
and
les
adc
lods
in
sbb
pop
push
mov
jecxz
adc
into
mov
sar
xor
icebp
cld
dec
pop
cmpsb
shrb
call
jo
test
xchg
movb
popf
scas
or
xchg
clc
mov
aas
jns
mov
sub
cmpl
jbe
or
aas
sbb
aaa
inc
call
cwtl
jecxz
sbb
inc
faddl
or
sahf
push
pusha
cltd
adc
ret
fdivrp
mov
jl
addl
popa
in
fsubr
xor
pop
inc
mov
ss
addl
lock
xor
int3
insl
sbb
mov
xchg
adc
sbb
mov
outsb
jne
and
sbb
inc
icebp
sub
cmp
mov
loop
add
sub
lret
out
inc
and
cld
call
push
and
mov
lods
lds
sbb
dec
insb
fdecstp
out
enter
rcrl
test
sbb
imul
xor
aam
fbstp
add
cld
inc
jg
aam
xchg
push
add
aas
mov
shlb
enter
mov
in
sbb
mov
sub
jns
and
fldenv
rcl
push
jnp
push
lret
or
lods
inc
cltd
dec
push
push
pop
lret
mov
lahf
cmp
fildll
enter
arpl
outsl
lods
sub
jle
fs
pop
xor
scas
xor
push
mov
xor
pop
dec
cld
je
sbb
fs
cmp
sbb
lret
cwtl
mov
ret
pusha
push
or
scas
ds
cmpl
popf
dec
mov
pop
pop
cs
stos
jne
repnz
das
adc
jle
pop
inc
sbb
add
fdivr
add
jo
ficomps
jl
xor
or
sbb
jb
loope
adc
enter
orl
mov
mov
int3
cmpsb
cltd
push
jno
ficoml
in
int
and
adc
sub
jno
lret
clc
es
cmc
fcom
std
mov
sbb
scas
ror
imul
mov
subb
loop
testl
xor
push
sbb
sub
imul
test
mov
imul
cld
insb
js
sbb
jbe
fiaddl
out
sti
pop
clc
xor
lcall
cmp
inc
push
pop
cs
mov
jmp
std
repz
icebp
cmc
jo
and
jmp
pushf
pop
sar
pop
xlat
xchg
or
sti
orl
inc
aad
lods
xchg
jno
jno
rorb
or
add
leave
push
cmpsb
mov
sbb
inc
jnp
ljmp
lcall
lret
mov
scas
pop
setb
and
icebp
mov
popa
and
inc
ret
imul
cmp
cmpsb
aam
insb
inc
fdivl
inc
inc
jmp
in
add
jno
sbb
insl
jg
cmpsl
cwtl
dec
jae
adc
xor
sub
inc
rorb
imul
add
jno
push
daa
inc
adc
ret
pop
and
pop
call
mov
nop
jl
jns
dec
jge
xor
sahf
and
mov
mov
mov
lds
push
xchg
sub
adc
mov
leave
or
fnstcw
pop
xchg
cmp
xor
lret
mov
cmp
cmp
and
and
mov
cmp
pop
xchg
push
xor
lock
scas
aam
mov
lahf
jp
lea
cmc
mov
inc
test
jp
mov
dec
mov
cmp
stc
mov
cmpsb
gs
pop
pop
imul
imul
xchg
cld
xor
icebp
data16
aad
dec
push
jp
cltd
jge
cli
xor
popa
popf
fdivrl
mov
push
xchg
mov
test
mov
dec
imul
sbb
mov
je
lret
pop
add
inc
cmpsb
push
idivb
icebp
mov
movl
sbb
adc
jnp
mov
lea
xchg
out
dec
fdivr
mov
leave
into
add
push
and
idivb
ficoml
inc
and
lahf
adcb
out
test
stos
add
rcrb
dec
push
and
call
outsb
cmp
jno
push
inc
mov
jnp
cld
mov
mov
sbb
jnp
enter
inc
es
rcr
pop
movsl
cwtl
mov
data16
xor
aam
fdivr
mov
cmp
js
sbb
in
add
cwtl
mov
pop
loope
repnz
xor
fmuls
outsl
sub
mov
mov
push
scas
pop
ror
push
ss
clc
push
out
out
test
ret
scas
rcr
imul
mov
push
cmp
jbe
jle
inc
jnp
xor
subl
sti
js
mov
xor
inc
stos
loop
dec
mov
add
cmp
loop
sub
inc
cmp
adc
std
dec
adc
xchg
daa
frstor
test
jo
scas
rcrl
sbb
jge
popa
test
xchg
jns
mov
push
pop
and
pop
xor
cltd
in
setnp
mov
xchg
sti
xchg
sbb
ficompl
mov
in
sub
in
rcll
ljmp
gs
sbb
mov
mov
call
pop
je
iret
fmul
les
adc
sbb
adc
lock
ss
jp
loope
sub
dec
lret
jmp
ja
sar
push
xchg
push
push
mov
test
push
sbb
inc
in
jae
mov
popl
loop
jecxz
and
adc
inc
pusha
push
in
andl
add
add
push
pop
push
scas
ljmp
icebp
push
sbb
enter
sbb
and
jbe
or
data16
cmp
test
lock
mov
cmp
push
aam
hlt
sarl
cmp
push
cmc
fwait
or
mov
fwait
mov
xor
movsb
inc
add
sub
pop
pop
nop
call
pop
repz
inc
ss
mov
sbb
addr16
fsubl
cmp
inc
aad
scas
mov
mov
ffree
inc
mov
dec
int
add
ret
cmc
pop
sti
mov
iret
stos
sti
xchg
insl
push
faddl
mov
shl
pop
push
push
mov
xor
std
cmp
pop
and
jb
test
dec
jno
popa
imul
sub
and
and
jge
fucomip
pop
add
xchg
pusha
fists
sbb
movsb
pop
jb
mov
mov
push
push
adc
ss
and
sub
add
lcall
out
sub
insb
xchg
sti
jmp
rcll
sbb
mov
sti
lret
mov
dec
in
fimull
icebp
xchg
mov
jb
dec
inc
add
lcall
icebp
mov
mov
sbb
xor
out
popa
xor
mov
test
pop
test
aam
xchg
push
aam
insl
iret
jo
out
cltd
lcall
inc
mov
scas
mov
fsubrl
das
pop
mov
mov
sbb
mov
rorb
pop
sbb
mov
sbb
fdiv
aas
stos
sbb
push
das
insb
or
scas
or
pop
jb
pop
pop
cmp
pop
lock
mov
adc
pop
mov
adc
push
adc
add
mov
pop
sbb
addr16
push
ja
mov
imul
dec
pushf
jge
fiadds
in
sti
out
cmp
mov
cmpsb
fsubrp
gs
cmc
inc
jno
leave
or
aam
cmp
xlat
in
mov
lret
xor
movl
push
imul
ret
sub
fisubrs
and
fsubrp
jns
xor
andl
stos
stos
lock
adc
sub
sbb
sub
popa
sbb
pop
and
mov
insb
push
mov
fldenv
xchg
push
cmp
jmp
ja
ret
push
add
repz
cmpsb
fwait
inc
icebp
dec
add
cmp
jmp
adc
repnz
add
rcr
jle
and
dec
stos
outsl
pop
lcall
cmpl
fbstp
adc
sbb
jbe
dec
test
lods
je
movsb
or
push
mov
push
jge
or
mov
mov
rcll
lods
testb
pushl
jmp
lret
push
cld
xchg
test
sti
inc
pop
jp
pop
push
cmc
jp
stos
inc
sbb
enter
andl
mov
out
or
sbb
nop
hlt
inc
out
and
scas
test
int
iret
into
mov
cmpsl
cwtl
mov
mov
xchg
movsb
jae
jae
insl
das
sub
inc
push
adc
jo
mov
fsub
ret
mov
rorb
adc
insl
cmp
test
cmc
aaa
nop
pop
push
repnz
fldcw
inc
sub
cs
jp
add
xor
cmp
idiv
movsl
dec
mov
mov
sbb
insb
in
fnstcw
push
sub
mov
repz
clc
mov
fidivrl
push
dec
push
js
leave
xor
push
clc
mov
mov
jo
loope
imul
push
shl
loopne
dec
jle
and
cmp
fwait
mov
in
xchg
aad
call
sub
mov
jbe
mov
out
xchg
jns
xchg
stos
fstpl
dec
notb
push
add
imul
mov
popf
notl
cwtl
mov
add
push
inc
jg
pop
mov
xchg
fldt
int3
insl
mov
loop
dec
xchg
dec
in
push
mov
adc
mov
cmp
sub
mov
push
out
mov
in
rolb
cld
xchg
push
es
push
push
cmpsl
cmpsl
aad
mov
fwait
ss
dec
cltd
cmp
jmp
movsl
movd
int
cmpsb
sbb
mov
xor
push
or
adc
int
cmpsb
icebp
push
idivb
shl
ret
ret
mov
test
cmp
inc
inc
xor
aaa
cli
mov
sbb
pop
fistpl
sub
imull
dec
imul
mov
movl
in
mov
cmc
pop
nopl
cmpsb
cmp
int
mov
mov
sub
jb
sbb
pop
inc
stos
sahf
movsb
loopne
jp
dec
sarl
pop
jo
or
push
fsts
mov
pop
push
cmp
jb
fdivl
jbe
pushf
xor
fdivrl
add
lock
xchg
lods
mov
arpl
addr16
test
mov
loopne
cmpl
lock
mov
mov
mov
cltd
mov
and
ret
mov
xchg
dec
sub
stos
ror
xorb
pushf
dec
pop
pop
sbb
xor
or
xchg
lods
sbbb
je
outsl
je
fcompl
dec
iret
pop
xchg
xchg
popa
xchg
fdivrp
scas
cmp
mov
sub
bound
cmp
adc
icebp
xor
fisttpl
popf
daa
enter
adcb
stos
fwait
mov
adc
or
jae
insb
sbb
adc
bound
push
lea
xor
or
lds
lock
mov
sbb
mov
xor
ljmp
pop
push
aas
rcll
mov
or
mov
mov
push
movsb
fisubrs
movsl
push
xor
test
adc
jl
out
cmp
adc
jle
adc
in
and
dec
inc
ja
je
lods
aad
cli
push
mov
inc
sbb
popf
mov
test
test
and
mov
fwait
ja
cmp
mov
es
je
add
cwtl
push
aas
lret
test
pop
push
push
inc
je
js
mov
inc
iret
mov
xchg
sbb
aam
and
in
pop
xchg
fimuls
vminpd
mov
jp
adc
and
xor
shrl
xlat
leave
test
shrb
push
cli
push
rorl
jge
stos
mov
xchg
jl
xor
cmp
pop
cld
mov
pop
repnz
or
mov
jge
push
das
sub
js
pop
xchg
dec
xor
shl
call
jo
aaa
xor
jo
cmp
mov
xchg
inc
lods
repz
cmpsl
scas
and
decl
cmp
in
arpl
fstpt
ret
or
aaa
inc
subl
iret
mov
test
jns
sbb
in
jecxz
lods
repz
xor
out
cmp
scas
mov
into
sbb
or
sbb
xchg
add
ljmp
sub
mov
pusha
mov
pop
mov
vpsubw
andl
mov
aam
sarl
adc
mov
nop
pop
push
mov
pop
xor
outsl
xor
sahf
sti
pusha
mov
mov
scas
lahf
push
aam
jge
cmp
inc
sbb
pop
dec
loopne
movsb
lock
mov
jle
sub
pop
and
loope
sub
inc
and
add
icebp
add
and
sub
and
xchg
ja
repnz
aas
push
dec
adc
test
and
shll
sbb
pop
push
xchg
iret
icebp
int
mov
cmc
pop
or
and
cmp
and
data16
push
fldenv
pop
jb
mov
sbb
jg
or
jge
pop
or
mov
in
push
add
xchg
xchg
dec
xor
sbb
je
test
xorb
cmpsl
cmp
or
jecxz
fsubrp
and
cmp
mull
add
xor
lret
or
mov
loope
jb
pop
and
int
xchg
dec
sti
aas
icebp
push
sub
adc
bound
mov
in
lods
adc
shrb
lret
cmp
mov
xchg
mov
adc
scas
add
mull
cmp
cltd
cmp
mov
xchg
push
jns
fcomip
xchg
imul
mov
and
sub
out
add
mov
std
dec
mov
aam
mov
insb
lret
insl
filds
ds
sub
sbb
mov
mov
mov
incb
pop
inc
push
decb
inc
call
imul
fsubs
clc
inc
pop
mov
nopl
cld
gs
mov
xor
mov
movsb
sarb
loopne
cmpsb
imul
mov
dec
sub
and
fs
popa
dec
jnp
out
sub
push
cmp
lahf
cmp
enter
js
ss
rcll
jb
mov
or
jmp
fucomp
popa
pushf
fucomp
pop
jle
enter
xchg
inc
cltd
sarb
adc
out
shrl
adc
mov
lcall
xor
xchg
mov
ficomps
xchg
stos
imul
rolb
inc
pushf
cmp
push
scas
addr16
out
dec
and
mov
ret
adc
cltd
jnp
jae
mov
add
mov
arpl
clc
imul
mov
js
imul
add
dec
mov
repnz
push
add
test
out
mov
sub
dec
mov
int
int3
adc
cmp
jno
sbb
sbb
int
icebp
dec
fs
xchg
mov
fistps
dec
pop
test
loopne
aas
aaa
and
fldenv
ds
rol
dec
std
or
jp
cmp
fucomip
sub
xor
aaa
add
mov
add
pop
lret
and
repz
cmp
fistl
shl
popf
adc
cmpsl
adc
loopne
hlt
ds
lea
push
xor
mov
mov
add
scas
lods
xchg
test
xorl
push
or
int
outsb
or
dec
jb
jle
jge
add
and
adc
les
addl
xchg
shll
sbb
adcb
cmc
mov
xchg
push
lahf
test
bound
mov
cmp
js
pop
mov
pusha
ror
xchg
repz
mov
cmp
add
andb
das
cmc
loope
inc
ret
out
mov
movsl
arpl
or
orl
sbb
subb
cmpsl
dec
xchg
add
stc
mov
jecxz
lds
inc
cmpl
ss
arpl
rcl
add
mov
sbb
push
js
hlt
stos
mov
sub
adc
cmpsb
mov
mov
pop
insb
xor
cmpsb
mov
fstpl
cwtl
lcall
inc
mov
jno
popf
push
xchg
ljmp
mov
gs
mov
or
mov
cmp
mov
adc
jmp
push
fdivs
cwtl
icebp
movsl
push
push
or
sbb
dec
lret
pop
icebp
popa
loop
sbb
push
in
sbb
int
in
xor
hlt
xchg
push
das
mov
dec
rcll
xchg
or
aaa
rcrb
clc
pop
stos
aas
insb
in
test
mov
sbb
cmp
or
sbb
xchg
xor
mov
cmp
gs
shlb
sarb
mov
or
ss
into
pop
and
jmp
push
aas
adc
arpl
and
jmp
xchg
orb
jno
ffree
into
out
push
mov
jae
pop
lods
loop
mov
pop
rol
dec
lcall
leave
jmp
pop
imul
jp
xor
lcall
jne
and
shrl
and
lds
out
dec
jmp
cmp
mov
push
pop
cmpsl
push
scas
stos
sbb
mov
pop
mov
sub
orl
mov
es
ja
cld
xchg
sbb
cwtl
fisubl
aad
fcomps
stc
mov
cmpsl
jb
leave
scas
scas
adc
xchg
data16
and
aaa
mov
ljmp
push
and
fstpl
sub
jo
aaa
xchg
cwtl
adc
push
pop
mov
dec
jl
adc
cwtl
nop
dec
sub
or
xor
add
test
push
jne
mov
jmp
sbb
xor
sub
insb
xchg
push
sub
call
jle
imulb
pushf
pop
in
jno
dec
ficompl
jmp
sbb
enter
loop
dec
pop
rorl
cld
sub
mov
cmp
add
imul
in
mov
push
popf
xchg
sahf
cmp
pop
mov
and
icebp
outsl
mov
fwait
mov
adc
xchg
dec
movsb
or
cltd
enter
lret
in
sub
lods
out
scas
in
popl
sahf
loope
sub
jp
sbb
or
sarb
xchg
cmpb
sbb
jbe
fimull
cltd
inc
aaa
stc
adc
sar
ds
push
insl
push
mov
div
push
add
mov
es
jae
push
sti
pop
and
ret
sbb
into
xorl
cltd
fwait
cwtl
lds
nop
inc
rcrb
xor
push
inc
jb
cmp
call
cmp
mov
add
sub
scas
jb
gs
adc
sub
cmpl
in
mov
rol
aaa
sub
sub
sbb
mov
pop
in
inc
sub
pop
xor
loop
pop
nop
int
sub
popf
push
xchg
adc
hlt
adc
mov
push
xchg
sbbb
shll
in
mov
std
push
or
dec
out
movsl
adc
sbb
mov
cmc
and
mov
jb,pt
test
vmread
sub
push
jbe
notl
or
pop
aam
clc
xchg
fiaddl
test
and
int
pop
cli
movsb
aas
sbb
mov
adc
loop
xchg
out
iret
ret
rolb
shrl
pop
jmp
pop
inc
hlt
jmp
psubusb
jbe
cmp
jg
jo
outsb
cltd
push
adc
push
add
mov
andb
mov
mov
divb
push
or
push
inc
cmp
aas
stos
jne
and
jns
sub
cld
fidivl
lahf
imull
push
lret
aaa
int3
js
and
in
test
repz
mov
xchg
addl
dec
push
add
add
adc
and
mov
sbb
sub
insb
daa
repnz
dec
inc
cmp
push
fimuls
mov
fdivr
insb
sub
in
pop
int3
lret
iret
cmp
xlat
in
pop
inc
cwtl
bound
cmp
mov
xorb
sarl
repz
stc
xorb
push
lock
testl
sarl
stc
sub
or
or
fstps
aas
jb
mov
lods
lods
or
in
sti
sti
lea
ficoms
or
orl
push
icebp
out
dec
or
and
imull
call
sbb
mov
sarl
lahf
xchg
inc
js
mov
test
daa
fbstp
jl
mov
loope
mov
arpl
inc
scas
add
push
add
pop
mov
mov
jns
inc
pop
adc
sub
dec
ds
jl
shrl
shr
cmp
add
in
xchg
mov
ret
jnp
iret
je
mov
adc
jbe
sti
pop
mov
and
mov
mov
pop
cmp
loope
add
fiadds
test
jecxz
mov
frstor
call
or
xor
fucomi
jae
inc
enter
xchg
adc
or
adc
inc
jne
stos
or
push
in
fwait
jne
xchg
outsb
loop
loope
aam
call
pop
or
dec
and
pop
jae
mov
jb
sbb
xchg
ret
mov
dec
pushf
dec
mov
mov
lods
mov
sbb
add
insl
or
fsubrp
sbb
test
data16
or
pop
inc
stos
ss
cs
pop
cmc
enter
sbb
xor
rol
outsb
fcmovnb
aas
inc
jne
stos
push
cmp
cmp
loope
in
div
pusha
add
xchg
xchg
add
or
outsl
and
sbb
pop
sbb
loop
xor
fs
cmpsl
xlat
sub
and
mov
cli
inc
cwtl
sbb
and
add
ljmp
loop
pop
xor
pop
je
xlat
adc
cli
sbb
add
out
mov
push
xchg
xchg
lret
fisttpl
ljmp
imull
xor
pop
aaa
and
lock
imul
or
adc
cld
loope
ret
pop
add
into
sbbl
jb
cltd
adc
mov
int3
ret
push
jns
adc
cmp
sub
loope
sbb
dec
js
ret
push
adc
mov
jns
xchg
and
mov
jb
out
xchg
icebp
jb
and
jp
shlb
or
mov
frstor
dec
pop
push
cmc
xchg
andb
xor
sub
pop
fwait
push
ret
dec
xor
sub
push
xchg
pop
xchg
icebp
add
mov
or
test
cmp
or
and
jbe
out
je
outsl
mov
pop
add
sub
pop
pop
ljmp
xor
lock
pushf
push
pop
mov
inc
jnp
negl
repz
add
scas
mov
out
clc
pop
in
mov
mov
lock
jl
enter
repz
xchg
cmp
xlat
pop
in
adc
xor
rcll
jmp
push
jns
in
aas
adc
and
sub
cmp
stos
les
push
call
loop
leave
ret
dec
sub
std
jbe
jmp
bound
lods
lds
jge
cs
fs
repnz
and
mov
das
pop
loopne
jnp
adc
arpl
inc
adc
mov
outsl
sbb
dec
outsb
fcomps
add
mov
adc
loop
push
sti
mov
stc
mov
mov
ret
data16
sub
mov
pusha
hlt
sbb
xor
call
bound
jmp
mov
push
subb
scas
mov
mov
jae
or
add
ljmp
or
cwtl
xor
out
cmp
movsb
push
dec
loop
movsl
push
xchg
adcl
push
jbe
jo
outsb
adc
mov
mov
pop
inc
fdivl
cli
enter
pushf
pop
dec
mov
test
sbb
add
popf
jge
fldcw
std
outsl
arpl
mov
daa
jo
push
xor
push
mov
xchg
adc
ret
outsl
pop
cmp
xchg
add
jno
lahf
push
test
enter
xchg
jge
movsb
inc
insb
les
cmc
fs
mov
jg
jbe
aam
and
xor
jmp
push
or
pop
dec
mov
out
xchg
pop
out
pop
in
sub
push
and
inc
sbb
push
pop
pop
lock
sets
cmpb
rorl
pop
adc
xor
aad
jne
ret
sub
insb
xchg
lret
hlt
dec
xchg
aas
pop
or
les
das
js
mov
mov
mov
pop
mov
ret
pop
jg
and
sbb
jp
gs
roll
ljmp
push
cmp
jecxz
test
movsl
jbe
hlt
cs
out
hlt
dec
ret
sti
sbb
dec
lret
adc
pusha
fcmovbe
xchg
cmpsb
add
adcb
or
xchg
push
xor
jo
adc
inc
test
mov
xor
xchg
insb
inc
rolb
fisubs
push
dec
mov
add
mov
xor
and
sub
and
xor
or
or
shr
imul
xor
xchg
xchg
mov
pop
xor
das
cmp
imul
lock
rcll
adc
cmp
incb
cmp
xchg
out
cmpsl
pop
push
jb
mov
mov
xchg
test
mov
dec
and
pop
jno
push
xor
cmc
es
mov
xor
insb
stos
scas
push
or
adc
cmpsb
test
adc
je
loop
mov
je
cmp
xchg
jg
and
nop
mov
mov
jo
movsl
dec
int3
push
mov
ficoml
pop
stos
adc
fmuls
int3
movl
pushf
aad
jmp
mov
mulb
xchg
inc
add
push
xor
fisttps
xor
shll
imul
js
mov
fisttpll
push
jo
add
fisubl
mov
cmp
lcall
mov
rorb
and
mov
mov
shll
jg
dec
push
sbb
fcoms
pop
cld
xor
and
in
stc
adc
jbe
inc
pop
lock
popf
jbe
jne
pop
mov
into
push
pop
mov
cmp
sbb
mov
or
xor
ss
jmp
add
lea
dec
in
cmpsl
jmp
bound
xor
ret
push
cmpsb
das
loop
int3
jg
mov
xor
ss
ja
es
out
inc
in
lahf
cmp
popl
fidivrl
push
or
adc
testl
and
cmp
orl
out
mov
jmp
mov
pop
stc
sarl
in
or
js
dec
sar
aaa
pop
enter
pop
xchg
incl
or
pop
add
mov
adc
pop
test
add
push
sub
cmp
xchg
sbb
sbb
xor
inc
loope
adc
movsb
fs
push
push
adc
loopne
js
sbb
pop
xchg
fs
bound
push
dec
pop
jecxz
xor
add
pop
ja
scas
testl
lods
mov
iret
mov
out
inc
in
rcrl
insb
or
mov
add
pop
add
pop
test
insw
pop
push
xchg
pop
cmpb
mov
cmc
and
cmp
xor
clc
push
fimuls
or
jo
mov
mov
mov
adc
bound
mov
jle
scas
push
xor
lock
lcall
mov
sbb
out
jno
cmp
and
negb
xor
mov
sbb
sbb
add
pop
push
xor
out
pop
cmp
scas
dec
xchg
xchg
xchg
imul
sub
push
push
mov
test
fldenv
mov
pop
adc
into
mov
addb
sarl
and
mov
jo
pop
mov
cmpsb
iret
fsubl
xchg
jecxz
inc
pushf
push
sbb
inc
fidivl
and
pop
jne
push
lds
mov
xchg
inc
mov
add
mov
loopne
mov
int3
nop
mov
add
xchg
push
jmp
movsb
shll
mov
sub
adc
xchg
xchg
xor
out
dec
rol
int3
xlat
outsl
lahf
movsb
xor
test
sti
jae
pop
pop
lret
stos
pop
xlat
xchg
pop
lahf
aad
xchg
jns
ljmp
xor
xchg
xchg
or
mov
xor
ret
push
lret
dec
fldcw
xchg
fstpt
cld
fwait
fwait
fwait
and
pop
or
mov
cmc
repnz
sbb
or
fucompp
insl
add
dec
cld
and
dec
pop
dec
iret
enter
popf
popa
and
movsl
test
mov
gs
mov
mov
fwait
mov
sub
xor
int
clc
out
add
pushf
adcl
out
mov
js
dec
jmp
inc
pushf
test
andl
sbb
add
mov
aas
jge
mov
push
cmpsl
fmull
push
cmp
subl
out
and
dec
push
mov
out
adc
mov
adcl
and
cmp
mov
outsl
dec
sti
test
imul
outsb
lock
retw
cmpb
stos
js
cli
nop
cmp
fcoms
and
sub
repnz
sti
cmp
push
scas
fisubs
mov
inc
add
dec
popf
imul
dec
pop
jle
cwtl
add
arpl
rcll
mov
and
cmp
popa
cld
pop
mov
dec
pop
sub
xchg
dec
dec
cmp
xlat
inc
sub
mov
dec
push
push
mov
loop
fstp
lods
inc
out
sbb
pop
lret
rcrl
or
xor
leave
push
mov
jns
fidivs
add
popf
test
xor
mov
ret
dec
fildll
add
adc
jle
adc
rclb
lods
in
mov
add
icebp
outsl
adc
mov
lods
mov
orl
mov
fnstenv
in
cltd
lcall
sbb
in
ljmp
jge
pop
adc
sbb
imul
pushf
mov
int3
cli
mov
push
std
inc
lea
sbb
js
out
sti
arpl
cs
add
in
in
cld
xor
test
add
mov
pusha
cmc
insb
jecxz
cwtl
lahf
lret
iret
inc
jnp
add
test
ljmp
pop
jb
adc
push
cltd
pop
je
jmp
and
les
popa
fisubl
mov
cld
pop
imul
test
decb
lods
out
and
jnp
je
dec
sbbl
jae
nop
and
imull
aas
fistpll
icebp
shlb
sbb
repnz
xchg
adc
fdiv
mov
mov
push
ret
jbe
cwtl
fsub
push
les
mov
and
pop
fstpt
bound
or
push
xlat
sti
nop
iret
lds
clc
test
out
jle
addb
adc
mov
or
push
push
hlt
cwtl
cs
adc
push
xor
sbb
in
sbb
inc
insl
push
testl
repz
fsubrl
inc
pop
fstp
push
or
test
jg
sbb
lcall
cmc
mov
xor
cmpl
sub
and
fdivl
addl
and
stos
imul
dec
adc
and
push
das
and
ja
mov
pop
mov
es
daa
sbb
inc
fwait
dec
in
push
jle
mov
xor
leave
fcoml
mov
and
inc
jl
mov
inc
mov
pop
nop
inc
mov
jge
mov
out
mov
mov
jecxz
jne
lods
push
fwait
mov
sub
mov
and
dec
ss
sbb
fiadds
mov
mov
jae
mov
aas
out
add
call
or
jecxz
and
jo
not
notb
dec
std
jne
jmp
fldl
push
xorl
movsl
mov
sti
inc
mov
sbb
dec
push
cld
lcall
inc
add
stos
mov
pop
push
pop
pop
sar
adc
test
jmp
jg
pop
ret
outsb
out
cmp
test
inc
xor
sbb
mov
cld
fdivr
clc
push
repz
shrb
fistps
push
pop
mov
rcrl
add
mov
inc
ficoml
push
cltd
int
push
push
mov
pop
mov
xor
daa
pushf
or
fwait
lret
jge
in
sub
cld
sti
push
lds
jbe
pop
iret
movsl
rcrb
sub
mov
lock
rcrl
inc
cmp
sub
icebp
repz
mov
inc
push
inc
mov
out
sbb
cmp
mov
dec
aaa
movsl
sbb
mov
stos
mov
jmp
push
jbe
aas
fldpi
sub
dec
js
imul
imul
and
and
adc
xchg
xor
lcall
xor
icebp
mov
in
cmpsb
jbe
sbb
mov
and
lock
mov
mov
negb
out
movsb
cmpsb
cmp
add
addr16
cmp
xchg
dec
scas
mov
sub
mov
mov
outsb
mov
and
pop
add
mov
fcomps
lods
mov
fwait
inc
xchg
inc
fimull
pusha
daa
jge
icebp
mov
shrl
sub
stc
std
ror
loopne
subl
jge
imul
add
lock
popa
data16
mov
insb
lret
cwtl
jbe
mov
ja
out
js
lock
mov
jge
stos
mov
and
fsubrl
xchg
or
mov
cmpsb
add
fisubrl
pop
scas
fistl
push
ror
lcall
mov
ficoml
cmpsb
or
cmp
or
dec
sbb
inc
out
icebp
call
icebp
pop
jne
mov
cmp
push
out
scas
bound
xchg
mov
mov
lods
cmp
movsl
faddp
dec
pop
sub
dec
dec
js
lret
hlt
jmp
mov
out
aaa
imul
fildll
mov
inc
sub
or
sbb
mov
loop
and
mov
sub
inc
cmpsl
negb
add
push
das
out
or
or
insb
jnp
ja
mov
in
enter
scas
movsl
or
out
addr16
in
add
pop
push
pusha
mov
sbb
sbb
and
sbb
mov
fstp
xor
dec
stos
xchg
push
sbb
mov
pop
push
adc
pop
push
xor
mov
gs
movsb
cltd
pusha
sub
inc
hlt
and
jge
lret
dec
movl
mov
sbb
xchg
in
in
pop
fldcw
jecxz
pop
inc
aas
cmpsb
add
xchg
aaa
icebp
mov
sbb
sub
mov
popa
ror
cs
sbb
pop
lea
lret
jmp
test
xchg
icebp
nop
lea
adc
inc
roll
inc
mov
gs
adc
and
outsb
ss
fldcw
shlb
lcall
xor
mov
jo
mov
jne
stos
fisubs
mov
mov
lret
cli
xchg
push
mov
push
sahf
jb
lock
and
sbb
pushf
jle
cmp
dec
jle
pop
xchg
xor
outsb
pop
aaa
addr16
mov
lock
lahf
in
sbb
lret
xor
aam
pop
mov
jl
jno
movsl
jl
addb
pop
jmp
out
icebp
mull
jns
les
outsb
fnstcw
and
fdivl
or
push
xor
mov
mov
cltd
xor
addr16
push
dec
das
dec
push
pop
jmp
les
jg
fistpll
pop
mov
mov
roll
aad
js
push
clc
mov
fisttpl
and
stos
xchg
cmpps
das
pop
pop
test
mov
sbb
les
dec
lcall
aad
add
mov
jbe
and
sub
mov
mov
jo
fstps
sbb
or
sbb
test
sub
mov
stos
cmp
jl
fldenv
es
jo
gs
mov
leave
add
cmp
xchg
xor
push
inc
std
fsubr
xchg
push
pop
lcall
xchg
and
cmpsb
cli
ss
daa
or
ret
jo
shrb
xchg
adc
cwtl
int3
jo
loope
shlb
sbb
adc
adc
pop
mov
or
dec
lods
adc
pop
sub
das
sbb
shrb
xor
test
aas
mov
daa
dec
aas
push
push
cmp
pop
nop
xchg
adc
pop
adc
adc
pop
addr16
pop
jnp
mov
lods
jne
xchg
arpl
cwtl
jb
mov
ds
xchg
movsl
cs
pop
pop
dec
enter
add
outsb
add
fwait
stos
imul
std
dec
lods
dec
jmp
jnp
ljmp
mov
sbb
push
mov
ljmp
incb
je
loope
loop
mov
jg
push
jne
or
cs
jge
loop
loope
jle
or
adc
fisubrl
shl
test
sahf
dec
inc
mov
pop
ret
mov
les
lcall
or
add
lock
cmpsb
repz
out
xchg
stc
adc
cmp
cmpsl
addr16
add
mov
dec
dec
cs
mov
pusha
outsb
cmp
add
sub
push
mov
mov
dec
aad
fcomps
cs
es
daa
adc
fimull
lcall
int
mov
cltd
adc
leave
stos
jle
rol
rorl
fisubrl
iret
popa
daa
in
shl
pushf
das
jmp
push
mov
lock
aad
add
movsl
pop
fidivl
mov
xor
sub
popa
pop
mov
imul
cmp
mov
mov
fbstp
mov
lods
fwait
int
push
push
or
sti
rcrl
shrl
mov
xor
and
shlb
sub
push
dec
in
idiv
pushf
adc
pop
adc
xchg
pop
in
xchg
fwait
shlb
test
imul
pop
repz
adc
lret
and
dec
add
xor
repnz
or
and
mov
pop
in
imul
mov
in
xor
in
rorb
jnp
in
jb
shrb
test
adc
addl
mov
loop
cmp
ret
stos
ja
ds
lds
add
cli
ret
fildl
mov
sahf
arpl
jae
in
mov
and
pop
outsb
dec
lret
xor
lods
inc
inc
mov
inc
xchg
jmp
cltd
cmpsb
add
je
ja
mov
andb
and
scas
imul
je,pn
adc
jbe
push
mov
les
jg
je
pushf
push
sbb
movsb
rcrb
insl
bnd
push
xorb
mov
jb
bswap
mov
cmp
inc
xchg
shll
out
insl
sti
jbe
inc
xor
sbb
jbe
cmpsl
test
pop
mov
mov
outsl
mov
push
xchg
sbb
cmp
cmp
mov
xlat
jmp
mov
cmp
xchg
ss
insl
into
mov
nop
testl
dec
push
outsl
xchg
pop
mov
and
dec
mov
fld
insl
fwait
nop
jno
pop
inc
repz
fmul
xor
imul
cs
hlt
jle
outsl
std
xor
and
fsubrs
lds
adc
xor
repnz
gs
loop
jo
mov
sub
mov
cmp
push
xchg
ljmp
clc
lahf
xchg
shlb
out
jae
mov
jge
jge
popa
inc
push
out
jae
pushl
and
ror
aaa
rclb
fdivrs
rorb
hlt
movsl
scas
popf
ja
xchg
xchg
idivb
test
xchg
scas
sub
xchg
subb
or
or
movsl
xchg
push
add
mov
inc
pop
fstl
xorl
dec
dec
jp
out
adc
test
aam
lcall
test
pushf
push
xorb
pop
es
xchg
cmp
int
lcall
test
add
jns,pt
mov
pop
xchg
lds
jno
imul
jle
cmc
lahf
adc
jle
mov
mov
jge
bound
and
mov
and
popf
or
hlt
cmp
mov
out
pop
xor
sbb
int
sub
test
pop
push
fdiv
nop
and
arpl
xor
sbb
adc
add
adc
cmp
sarl
push
and
faddl
mov
addr16
jmp
sti
push
pop
fisubrs
add
in
jp
jecxz
dec
sub
movsb
mov
sub
stos
xor
mov
data16
in
mov
mov
xchg
mov
mov
clc
push
dec
adc
mov
push
les
aad
cmp
lret
into
push
icebp
adc
div
pop
lea
xlat
notb
xchg
shrb
ja
sahf
shl
and
mov
lds
sbb
jne
ss
cmp
pushf
jecxz
insb
and
fcomps
or
pushl
dec
xchg
cmp
xor
out
pop
sbb
enter
and
cld
in
mov
stos
addr16
fisttpl
jl
lahf
push
aam
mov
and
movsl
jno
lods
inc
jnp
cmc
add
push
mov
ror
sub
pop
jnp
cmc
dec
push
xor
loope
lret
and
lds
mov
cmp
in
pusha
ret
xlat
push
test
pop
add
lea
pop
mov
dec
mov
sub
mov
cmp
push
popf
gs
mov
rol
adc
rcll
sbbb
mov
add
mov
outsb
cmp
in
sbb
loope
es
xor
ljmp
xor
jp
sub
mov
push
push
push
shrl
jmp
push
lods
inc
lock
cld
sbb
in
loop
jo
fcmovnbe
fucomi
mov
lcall
dec
ret
add
iret
lods
sub
rcll
and
pop
jo
inc
pop
mov
pop
xchg
lcall
pop
jbe
fsubl
or
cmp
int
in
repz
cmp
loopne
and
sub
cmp
popa
inc
or
cmp
push
mov
cwtl
mov
xchg
dec
jmp
jle
addr16
mov
dec
inc
xor
outsb
and
std
fsubrl
pop
push
adc
push
jno
cmp
test
es
adc
sub
inc
xchg
andl
insb
test
inc
xor
shr
sub
push
inc
pop
sub
fwait
mov
bound
push
jmp
pop
les
or
jecxz
or
jl
pop
sbb
or
xchg
dec
leave
fistpl
xor
inc
sub
mull
scas
adc
mov
popl
stos
test
push
stc
adc
into
or
sub
jnp
sub
mov
daa
sbb
or
sub
push
repnz
mov
xchg
stos
int
push
out
imul
mov
dec
adc
imul
add
push
push
cmp
push
bound
mov
jb
mov
adc
inc
cltd
cld
test
dec
je
or
imul
dec
jl
loop
lds
jmp
test
in
jo
cld
or
jno
pop
popf
sub
adc
hlt
adc
insb
mov
sbb
and
mov
stos
add
lea
mov
jne
pop
fisttpl
ret
jg
addr16
fucom
sub
roll
cmp
aaa
aam
xchg
mov
add
call
jl
mov
aas
jge
orb
rclb
ljmp
addr16
sbb
mov
iret
loop
sub
lret
dec
or
mov
xor
je
inc
and
outsl
inc
push
movsb
ja
xchg
xabort
xchg
fstsw
mov
loopne
in
mov
js
lock
pushf
pop
mov
or
fisubl
fnstcw
mov
flds
hlt
loopne
ljmp
lods
and
pop
jo
xchg
mov
lret
sub
les
xor
cmp
popf
ret
mov
sub
pushf
dec
xchg
lds
lahf
or
movsl
idiv
mov
test
or
gs
mov
push
xchg
lock
lahf
pop
xorl
in
adc
imul
jne
inc
outsb
bound
divb
repnz
inc
in
cmc
jmp
sub
jge
xchg
push
outsb
push
jae
ret
mov
repz
iret
lahf
cli
jo
inc
nop
pop
cld
pop
call
xchg
jg
jp
jp
or
dec
mov
sub
cwtl
fmull
test
pop
repz
push
sbb
adc
lret
das
sbb
and
push
leave
xchg
xor
sahf
mov
xor
pushf
xchg
and
mulb
add
addr16
and
cmp
lcall
jns
cmp
mov
lahf
in
movsb
xchg
testb
mov
inc
mov
jmp
or
sub
mov
fildll
lods
add
lods
pop
xchg
jnp
adc
dec
jge
movb
add
fstpl
jecxz
bound
mov
daa
bnd
mov
test
es
jbe
cld
cmp
mov
imul
aaa
aas
addr16
push
cmpsb
dec
cmp
ja
lods
sti
mov
jnp
js
jns
pop
pop
push
mov
pop
js
add
in
fisubs
cmpsl
fisubl
js
mov
mov
mov
and
mov
pop
bound
aaa
xor
pop
mov
mov
dec
sub
sub
pop
xchg
cmp
xor
mov
ror
or
jp
jne
test
movsb
in
inc
dec
scas
cmp
loopne
clc
scas
ret
in
lods
mov
lret
xor
in
push
pop
in
ret
gs
in
ljmp
cmc
sarl
mov
add
leave
addr16
pop
je
cmc
xlat
jp
test
mov
and
jge
lret
add
push
mov
ret
ds
hlt
hlt
lret
mov
pop
mov
mov
pusha
subl
cmpl
nop
aas
xlat
mov
out
xchg
aaa
cld
pop
sub
dec
inc
push
cld
out
xor
xchg
test
mov
cld
pushf
and
test
test
lea
add
or
fcoml
or
pop
and
or
push
cs
pop
pop
xchg
mov
push
dec
mov
inc
inc
jle
inc
sysenter
sbb
cli
fldl
jle
iret
push
cmpsb
xor
idivl
sub
xchg
les
jo
popa
and
dec
sbb
dec
int3
add
sub
xlat
mov
mov
jmp
in
lahf
push
inc
xchg
rcll
cld
aad
iret
adc
xor
mov
inc
shlb
pop
lret
inc
testb
outsb
mov
incl
jbe
mov
adc
in
jo
shll
inc
ja
sub
pushf
xchg
xchg
push
push
or
inc
mov
ljmp
sahf
jns
ss
jnp
push
push
out
std
jb
add
mov
cwtl
fistl
rcl
pop
stos
jl
dec
jle
cmp
jo
pushf
addr16
pusha
sbb
int3
push
push
shrb
xor
lods
mov
insb
xor
mov
loope
mov
repz
adc
roll
notl
xchg
dec
mov
test
nop
inc
push
mov
jns
out
mov
lret
arpl
cwtl
adcl
mov
push
pop
jge
sbb
call
mov
inc
insb
lods
jecxz
cmp
push
inc
xchg
mov
shlb
into
xor
std
mov
into
out
xchg
in
lock
rcll
add
jl
add
push
inc
push
test
lcall
mov
xor
sub
mov
jp,pn
inc
pop
cmp
fstl
xor
jo
shl
xchg
sub
mov
dec
sub
enter
and
lea
aas
xor
pop
fimuls
dec
cli
fisubrl
jo
std
pop
jmp
push
leave
mov
bound
push
mov
jno
cmc
ljmp
mov
cmp
stc
jmp
and
jp
dec
jl
push
aad
loopne
dec
push
xor
or
ficomps
imul
sarb
xchg
dec
outsb
sbb
dec
sbb
ja
sbb
pushf
lahf
cmpsb
pusha
xchg
call
movsl
sti
push
sub
and
jbe
fisubl
loop
in
das
test
dec
pop
pushf
or
dec
fidivl
dec
push
mov
sbb
popf
or
jne
out
insb
xlat
cmp
xchg
pop
ljmp
arpl
clc
test
push
jae
gs
or
sub
add
adc
pop
nop
add
sarb
cwtl
mov
and
ror
incb
mov
js
mov
inc
sbb
pop
ja
jp
lods
cmp
sub
cmpsl
jae
or
sahf
out
xlat
xchg
xor
dec
sub
mov
add
movsl
sbb
or
fdivrs
jbe
andl
lock
or
sti
jnp
hlt
ss
dec
lea
sub
add
rorb
in
je
ficoml
adc
imull
pop
aaa
add
jge
aas
test
dec
mov
mov
decb
repz
cmp
sbb
cmpsb
jg
or
fcomi
stc
mov
inc
sub
mov
imul
dec
dec
pop
test
mov
or
lods
in
push
stos
bound
or
sub
rol
leave
inc
icebp
add
lret
xchg
out
lods
popf
rcll
pop
jl
xor
sub
sub
test
loopne
mov
repnz
lods
bound
or
inc
cmp
xchg
jne
sub
xor
mov
or
jo
and
loopne
jecxz
test
add
xor
mov
imul
and
cli
sub
mov
push
int
pop
or
pushf
and
or
fmulp
xchg
inc
mov
stos
push
xchg
roll
add
adc
inc
jecxz
xlat
imul
add
and
adc
add
popa
sub
jg
adc
call
in
enter
dec
sbb
repz
pop
mov
mov
test
or
xor
mulb
lret
mov
sbb
push
cmpsl
push
mov
shrb
in
jne
jne
imul
xchg
lods
cli
stc
sbb
mov
pop
sub
or
mov
pop
mov
xor
xor
dec
dec
xchg
data16
mov
add
xor
dec
shl
loop
adc
enter
cmp
outsb
fildl
cli
mov
faddp
add
rcl
xor
jno
and
mov
mov
cmpsb
insb
scas
int3
or
test
sbb
adc
push
daa
mov
imul
xchg
add
in
insl
stos
xchg
test
arpl
dec
in
and
mov
dec
das
sub
lods
lsl
mov
dec
add
fildll
inc
dec
inc
mov
jp
jbe
std
pop
push
scas
test
xchg
mov
lock
test
repz
loop
jne
inc
push
jecxz
fidivs
dec
jns
jl
adc
mov
shl
xor
jno,pt
cmp
jo
into
pop
cli
out
jmp
iret
out
aaa
test
int3
out
mov
mov
pushf
adc
ret
jns
mov
negl
adc
pop
add
push
daa
jge
es
mov
inc
adc
lret
jge
sub
push
jb
pop
adc
mov
mov
mov
aas
mov
cmpsl
in
jno
pop
sbb
inc
inc
out
xchg
cmpsb
cmp
insb
sti
cmpsl
sub
adc
jp
insb
push
jle
loop
lods
fsts
fbld
push
fistps
pop
mov
shrd
test
or
mov
xchg
mov
dec
arpl
ljmp
imul
ss
daa
push
stc
cmp
dec
orl
inc
imul
iret
pop
ja
imul
or
loopne
rorb
jge
mov
pop
out
scas
lret
pushl
adc
lcall
rol
std
inc
sub
iret
lahf
xchg
xchg
sbb
bound
adc
orb
je
jmp
leave
xchg
xchg
mov
cltd
test
add
inc
sub
inc
incb
in
push
adc
cltd
test
in
stos
fs
es
pop
cmpsl
out
xchg
sbb
add
push
aas
rcrl
loope
mov
mov
mov
cmc
in
mov
jbe
inc
cmp
movsb
cmp
cmp
mov
aad
mov
push
shrl
movb
inc
push
dec
cmpsl
cltd
lret
mul
sahf
sbb
aam
jmp
pop
push
cmpsb
repz
jecxz
pop
mov
cs
mov
lods
jo
push
int3
int3
xor
sbb
cs
mov
or
shl
int
sahf
xchg
subl
pop
mov
and
push
sbb
or
lcall
or
sbb
jbe
insl
push
jge
jns
sahf
sbb
inc
insl
popa
int3
dec
sahf
mov
jb
mov
cld
xchg
or
pop
pop
push
ror
ficompl
push
mov
sub
loope
dec
mov
inc
lock
pop
xchg
dec
loop
lcall
cmp
sbb
orb
lret
call
mov
mov
add
lock
gs
add
and
pop
je
test
cmp
jle
int3
call
inc
jp
or
push
push
es
cli
call
dec
call
stc
mov
scas
adc
cwtl
pop
pop
mov
inc
jnp
test
sbb
test
inc
aad
add
imul
dec
push
mov
in
je
cmc
pop
xor
jns
testb
xor
mov
rclb
repnz
fwait
lods
pop
xor
arpl
pop
inc
stc
jbe
int
pop
push
lock
jge
clc
jg
dec
pop
dec
mov
stc
cli
jnp
push
rorb
add
mov
cmp
add
sub
fs
in
int
mov
loop
cmp
jecxz
pop
lahf
xchg
lret
je
xchg
lods
or
push
loop
aad
xor
loope
jne
sub
incl
or
aaa
addr16
enter
jns
pop
xchg
into
cmp
mov
adc
xor
cmpsl
add
jne,pn
mov
ret
das
ljmp
mov
repz
mov
movsl
mov
mov
aaa
stc
insl
loope
push
mov
mov
lret
clc
push
sbb
in
arpl
xchg
sbb
or
mov
enter
mov
sti
lahf
jae
or
or
iret
popf
shll
jne
mov
cltd
ret
jecxz
and
inc
sbb
sbb
adc
sub
inc
test
mov
push
xor
push
out
imulb
push
xchg
ja
and
xchg
or
mov
jl
inc
mov
jmp
lahf
js
mov
cmp
and
and
add
dec
pop
pop
inc
scas
fisubs
mull
or
jne
aad
jecxz
or
xor
out
dec
push
jecxz
add
stos
loop
scas
inc
into
sahf
fmull
and
adc
mov
push
repz
push
daa
add
mov
cmp
sbb
adc
test
and
sbb
mov
test
fstp
cmpsl
fwait
lret
rcrl
pop
mov
dec
popf
insb
adc
mov
cmpsl
xchg
call
mov
pop
bound
leave
faddl
push
lods
pop
test
pop
jno
mov
mov
xor
divl
mov
mov
dec
popa
mov
fcom
pop
bound
out
lea
mov
gs
sub
aas
push
and
or
adc
push
repz
xchg
sub
dec
shll
sbb
sahf
repnz
push
inc
loop
addr16
call
adc
mov
ret
mov
sub
call
sub
mov
insb
aas
dec
fsubrs
ret
or
sub
push
out
lret
xchg
decl
fdivs
xchg
pop
inc
stos
mov
pop
dec
ja
push
in
add
scas
test
inc
xchg
cmp
stos
pop
int3
sub
mov
mov
xor
lds
nop
jo
push
call
fldenv
and
ret
adc
mov
orl
pop
jno
sbb
xor
or
mov
mov
lds
ret
dec
bound
push
jo
and
insl
mov
xchg
xchg
xchg
add
cmp
push
and
jbe
stos
js
inc
int
inc
lahf
adc
cmp
push
inc
mov
jle
or
mov
or
and
cld
loopne
mov
xor
fcomp
push
aad
adc
movl
data16
push
xchg
inc
xor
outsl
pop
test
leave
cmp
pmaxsw
loop
xchg
dec
addr16
adc
xchg
add
das
mov
fcompl
sbb
dec
dec
pop
cmp
lret
push
inc
es
cld
xor
xor
xchg
das
int3
into
popf
lcall
mov
cmp
mov
lds
cltd
stc
dec
mov
jae
mov
sbb
pop
cmp
cmp
xor
icebp
and
fcoml
mov
dec
cmp
into
sbb
loop
imul
test
mov
test
leave
dec
bound
push
jp
jbe
ret
shll
xor
in
not
mov
sub
mov
push
stos
je
or
daa
enter
jl
gs
aaa
cmp
cld
movb
hlt
iret
or
mov
data16
rcrl
mov
jnp
add
inc
pop
push
jle
and
addr16
nop
jae
fisubs
sbb
test
sarl
cmp
dec
mov
inc
pop
or
and
fcoml
popf
cmp
aam
adc
mov
ret
lret
xchg
push
mov
repnz
xchg
dec
movsl
loopne
cwtl
out
adc
jnp
arpl
cli
mov
cmpsb
insl
dec
leave
push
or
adc
jnp
xor
push
cmc
sub
dec
gs
jbe
sahf
es
push
lods
sub
arpl
test
dec
fidivs
sub
add
inc
hlt
sbb
inc
push
mov
jecxz
cltd
iret
fldcw
iret
icebp
mov
xchg
in
and
movsl
adc
sti
or
pushf
stc
or
fisttpl
add
dec
dec
and
popf
and
iret
inc
push
loop
outsl
ljmp
je
push
popf
lock
dec
xor
push
cmp
inc
outsl
arpl
or
aam
aaa
adcb
les
hlt
and
adc
xor
iret
fwait
xor
inc
or
les
ret
mov
xor
xor
lret
jae
idivl
push
xchg
add
pushf
push
cmpsb
into
mov
mov
lock
ret
jge
push
fsincos
mov
into
sub
dec
xor
sub
push
mov
push
shll
jle
xchg
add
xchg
fldl
mov
sub
xor
xchg
mov
sub
bound
jnp
adc
popa
outsb
subb
sub
sub
in
test
popf
adcb
sbb
mov
loop
inc
sub
cmp
push
rcr
lods
data16
add
aas
data16
xchg
sbb
or
push
and
mov
push
add
pop
add
mov
loop
stos
int3
and
nop
outsb
jmp
xchg
mov
mov
or
popf
jl
inc
cmp
in
into
or
mov
lods
leave
push
mov
icebp
inc
pop
orl
xchg
mov
xor
xchg
repz
ret
out
cmc
loop
mov
mov
pushf
or
jnp
shlb
ret
fmuls
aad
and
cwtl
adc
xor
hlt
and
out
fprem1
jp
xchg
or
mov
and
sub
dec
push
mov
in
dec
imul
aad
lret
fmuls
icebp
xor
add
sub
jp
inc
imul
dec
mov
push
jno
scas
inc
ss
cmc
scas
sbb
ret
in
push
mov
fisttpl
popf
arpl
shll
in
nop
fistpll
mov
inc
xchg
sub
leave
lods
scas
lods
fcmovnu
xor
jp
xchg
test
lods
sbb
jae
ror
and
inc
outsl
xor
dec
sub
sub
mov
imul
loope
subl
ficomps
inc
adc
push
pusha
mov
aas
lcall
pop
or
mov
leave
push
cld
in
jg
fsubl
jl
jo
and
jo
fsubrp
push
test
xor
jg
push
xchg
dec
cmp
in
je
mov
dec
into
test
pop
xor
lret
rcll
dec
enter
xor
or
jae
ss
mov
filds
movsl
shrb
scas
mov
add
insl
sbb
cmpl
xlat
into
cltd
xchg
les
dec
sbb
cltd
lock
adc
jg
andb
out
scas
jo
fstp
mov
js
movsb
imul
xchg
loope
pop
sar
aad
push
sub
int
fwait
insb
lahf
outsb
xchg
stc
ret
push
arpl
xchg
js
cmpsl
cld
int3
push
cmp
cmp
adc
cmp
ljmp
adc
add
test
sub
jno
inc
xchg
into
int3
or
lahf
jecxz
iret
push
cwtl
jecxz
cmc
jle
or
dec
sub
inc
cmpsb
mov
add
cld
xchg
xchg
out
sub
or
sbb
hlt
xor
arpl
jae
dec
mov
mov
xor
mov
inc
xor
add
and
mov
ja
popf
and
pushf
adc
adc
xor
sti
roll
adc
xrstors
mov
adc
hlt
or
jle
mov
sbb
xor
adc
incl
pop
mov
push
test
aaa
mov
add
adc
or
sub
je
mov
out
mov
push
cmc
push
push
or
filds
mov
pop
movsb
lret
out
adc
cmpl
loope
mov
hlt
daa
pop
pop
xchg
in
xor
loop
jecxz
jb
or
pop
out
push
lcall
mov
bound
stc
rcl
cld
mov
fwait
das
cltd
repz
add
ja
rcll
cld
rorl
push
lret
decl
cmp
jmp
mov
or
sbb
ja
jge
mov
outsb
leave
call
jb
fiaddl
pop
scas
and
lret
aad
xchg
inc
fnstcw
sbb
jecxz
aad
mov
xchg
jno
pop
ret
bound
adc
xor
je
out
push
es
add
cmpsl
jl
int3
in
fcomps
clc
outsl
fwait
and
outsl
jmp
mov
mov
pop
or
ds
in
and
xchg
into
ljmp
in
ret
inc
sbb
and
std
jae
jecxz
mov
pop
jmp
dec
push
rorb
je
or
lret
stc
xchg
imul
pop
jno
in
cmp
cmp
or
aas
fwait
sbbb
sbb
sti
inc
xchg
out
cwtl
lahf
out
pop
sub
mov
mov
pop
loope
dec
jae
sub
loope
das
adc
dec
aaa
jno
je
nop
mov
or
mov
xchg
cmp
sub
ja
aaa
test
aam
psubsb
pop
ret
fcoms
adc
mov
mov
arpl
mov
mov
cwtl
out
sub
and
les
out
dec
mov
mov
ret
mov
push
cmp
jns
daa
stos
mov
loope
sti
and
and
ds
sarl
icebp
push
out
cmp
adc
dec
into
dec
mov
add
lock
or
lods
cmpsb
push
sub
mov
es
popl
push
inc
xchg
push
add
jae
push
adc
xchg
out
ret
push
jle
mov
insb
push
jae
in
dec
dec
xor
ja
lret
rcll
repnz
cmpsb
or
scas
fs
enter
decl
xchg
test
and
and
aaa
repz
xchg
fnstenv
mov
cmp
sub
adc
add
cmp
ficompl
int3
rcrl
mov
outsl
lahf
in
xchg
dec
inc
out
jmp
or
xor
dec
xchg
pop
insl
cltd
mov
bound
adc
dec
cmp
filds
fldl
inc
push
repz
fimuls
dec
mov
jo
outsl
pop
je
sub
add
inc
jae
imul
push
cmp
add
jnp
push
repz
pop
or
mov
js
cmp
jle
push
push
fs
sbb
fistpll
add
pop
mov
xor
sbb
cltd
in
scas
lods
jae
pop
in
adc
sahf
cs
jecxz
or
mov
fs
or
push
pop
sub
xor
movsl
ja
jle
lcall
adc
fwait
cmp
add
pop
test
mov
mov
ffreep
aad
xor
push
enter
subb
xorb
jbe
cmp
or
mov
or
xor
hlt
nop
insb
popa
pop
pop
bound
fidivl
adcb
ss
or
repnz
and
xor
in
daa
sti
mov
xchg
jno
jl
sbb
inc
jne
test
aaa
btr
cmc
movsb
push
cmpsb
das
or
sub
pop
inc
adc
es
jne
push
cmpsb
pop
cmp
ret
adc
dec
lea
leave
xor
roll
insl
push
test
push
xor
lret
jno
int3
test
dec
mov
mov
stc
popa
pop
shll
mov
inc
adc
push
jb
add
inc
pop
je
cmp
lret
mov
xcrypt-cfb
cmpsl
mov
xchg
fimuls
je
out
mov
rsqrtps
push
dec
mov
lahf
pop
cmp
out
xchg
mov
bound
fdivr
xchg
inc
sub
mov
mov
imul
in
int
ljmp
outsl
repnz
inc
fs
std
bound
lahf
aad
fisubs
mov
xchg
aas
xchg
dec
call
ss
add
add
test
cmovbe
mov
inc
dec
pusha
into
dec
cltd
jp
ret
mov
push
rorl
inc
fsubrs
add
xor
fld
in
sahf
test
adc
add
and
xor
outsl
push
or
in
jecxz
outsw
leave
outsl
cmp
and
add
mov
sbb
scas
pop
iret
outsl
sti
mov
adc
sahf
rcr
push
stos
into
aam
dec
pop
insl
cmp
shl
xor
push
add
dec
lds
test
cli
int3
sbb
adc
pop
hlt
mov
jp
rol
lea
mov
xchg
xchg
pusha
and
sbb
cmp
dec
outsb
pop
ret
stos
lods
sbb
xchg
js
rcrb
add
sahf
repnz
mov
pop
jb
push
add
in
xchg
push
data16
mov
jp
lods
and
pop
lahf
fidivrl
cmp
lods
std
xchg
shll
add
pop
into
xchg
fmuls
add
sbb
loop
and
xor
push
es
add
imul
and
sbb
inc
nop
jecxz
outsb
das
dec
inc
add
outsb
insb
inc
jne
hlt
jno
pushf
xchg
fmull
lods
addr16
push
jne
out
dec
stos
or
and
mov
jns
es
cmp
pop
movsl
into
mov
push
mov
or
nop
lds
sbb
fcom
iret
or
lea
xchg
in
ja
inc
adc
lcall
sbb
mov
into
hlt
iret
or
mov
inc
rclb
pop
das
add
mov
lret
in
mov
fdivr
test
add
xchg
cmp
pop
adc
add
xchg
jp
repnz
adc
lods
scas
gs
jns
mov
js
push
arpl
loop
jns
mov
outsb
cmp
add
mov
add
cltd
popa
dec
ja
lds
js
out
mov
cmp
jno
imul
sbb
push
mov
aas
sbb
fs
mov
adc
dec
cwtl
mov
pushf
jno
lods
daa
add
push
mov
sbb
pusha
stos
nop
lret
xor
sub
es
and
xlat
ljmp
and
pop
std
lea
add
ja
sbb
adc
xor
mov
lods
and
mov
movsl
outsl
pop
aad
fnop
jle
loopne
push
ss
xchg
xor
jne
dec
mov
loopne
les
inc
cmp
push
add
aam
mov
adc
inc
movsl
aaa
inc
dec
aad
inc
arpl
push
subl
je
jno
mov
mov
pop
stos
or
jl
or
cmpsl
in
shll
jne
mov
pop
lods
les
sahf
stc
pop
test
xchg
push
dec
imulb
dec
jp
out
dec
xchg
xchg
int3
lods
pop
sbb
hlt
pop
pushf
or
push
xchg
test
jnp
pop
popf
mov
jecxz
pop
out
inc
gs
inc
push
out
dec
add
add
ds
dec
int3
in
lock
push
cmp
rorl
sbb
out
jle
dec
dec
enter
lret
stos
or
mov
pop
sahf
push
pop
popf
xchg
cmpb
add
inc
pop
pop
pop
lahf
and
xchg
xchg
pop
mov
xor
leave
test
adc
mov
xchg
mov
mov
arpl
addb
mov
add
mov
cmp
inc
out
sbb
push
ficomps
cs
mov
popf
mov
lcall
inc
xchg
inc
pop
pop
push
xor
shrl
gs
or
outsl
jb
test
jl
pop
xor
xchg
enter
hlt
stos
or
adcl
test
popf
ret
mov
mov
ljmp
add
adc
ret
xchg
fcomi
pop
mov
pop
push
xor
sub
movsb
push
add
mov
mov
stos
arpl
call
xorl
jle
sbbl
ss
mov
mov
rclb
lahf
adc
test
dec
jge
push
mov
out
jae
xchg
fisubl
xchg
lahf
xor
dec
mov
cmp
or
out
popf
mov
pop
dec
or
out
jb
rcrb
aad
inc
jb
jecxz
rcrl
and
dec
fdivrl
scas
and
sbb
hlt
jbe
cmp
enter
lock
sub
adc
and
jb
dec
shl
ret
lea
lea
mov
pop
mov
lret
aam
sub
cmpsb
gs
add
inc
das
adc
lahf
rclb
xchg
xchg
adc
xor
push
das
cmp
xchg
shll
loop
dec
mov
push
daa
les
shrl
push
push
mov
sbb
jp
adc
shrl
jb
fdivp
cmp
sbb
or
loope
fsubrl
ja
popa
dec
test
add
mov
jns
dec
fdivrl
xor
sahf
stos
and
aam
or
test
inc
mov
dec
inc
cmc
popf
or
nop
mov
add
negb
clc
or
xorb
pop
fnstenv
lret
shll
fs
jo
and
enter
xor
cli
mov
or
mov
jle
add
es
sbb
hlt
and
dec
aad
out
adc
pop
add
xor
xchg
lcall
xchg
das
inc
in
es
test
inc
test
out
sub
test
jae
cltd
cli
cmp
push
jmp
push
fs
adc
movsl
ss
inc
xorl
cmp
fcmovu
out
andl
aam
push
cli
lods
enter
sub
adc
jg
mov
scas
shr
test
mov
leave
in
popf
jbe
rclb
adc
add
or
push
sub
dec
and
aad
and
push
jnp
fcmovnb
les
testb
and
scas
xchg
stos
inc
xorb
lds
inc
stos
mov
pusha
gs
and
pop
jle
movsb
dec
addb
sbb
xchg
test
and
jns
push
jmp
push
sub
ljmp
movsb
mov
repz
add
sbb
mov
lock
mov
add
xchg
sub
daa
inc
or
xchg
out
in
lods
jmp
ret
mov
mov
scas
dec
gs
aam
mov
outsl
cmp
sbb
mov
sbb
mov
xchg
cwtl
mov
pop
lods
enter
xchg
or
out
sti
insl
inc
addl
add
pop
xchg
mov
add
in
lahf
cmp
inc
test
nop
pop
pop
pop
ljmp
out
popf
cmp
jmp
shll
jne
dec
int3
out
cmp
inc
imul
xchg
mov
inc
mov
xor
out
adc
mov
jbe
iret
popw
xor
jb
cmp
das
mov
mov
lods
cli
std
cmp
loop
lret
loopne
shll
push
aaa
loope
cmp
and
push
in
sahf
inc
insb
out
xor
mov
mov
aam
and
jl
outsb
fwait
scas
and
test
mov
lret
mov
xor
mov
inc
jmp
pop
dec
push
clc
test
lock
adcl
aaa
iret
out
push
sbb
dec
fcoml
dec
fidivrl
pop
push
jbe
mov
inc
cmp
and
dec
fcomps
outsl
int
inc
sbb
jae
mov
jns
pop
decl
dec
lods
ljmp
addl
das
xor
add
outsb
or
and
repz
jmp
xchg
or
mov
ret
add
cwtl
ret
mov
cmpsb
or
cmp
cli
cs
mov
or
and
imul
lahf
pop
jns
cld
jp
cli
sbb
call
loope
sub
daa
out
push
jge
shrb
stos
dec
adcl
sub
dec
push
pop
enter
insb
sub
aam
push
add
inc
pop
add
scas
xlat
dec
pop
and
es
xchg
sbb
xor
cmp
call
dec
call
add
jp
std
ljmp
mov
dec
sub
sub
inc
mov
pushf
cmp
dec
jb
xor
ffreep
dec
mov
jge
int3
outsl
sbb
cmp
add
test
add
fsubrs
jnp
leave
test
mov
xchg
inc
xor
or
sub
shll
or
ss
xor
pop
cmp
icebp
xchg
mov
out
lea
xlat
aaa
xor
mov
xchg
inc
and
daa
xchg
stos
pop
inc
out
pusha
cmp
push
push
dec
pop
dec
daa
test
jb
adc
xor
or
sbb
xchg
stos
sub
mov
lock
outsl
push
movsb
mov
sbb
cmc
jge
aam
dec
ja
mov
call
fisubs
int3
cmp
sub
repz
int3
push
mov
scas
inc
jp
sbb
das
subb
scas
mov
push
and
xchg
jl
adc
cmpsl
int
xchg
test
jb
nop
cwtl
loope
movl
inc
lret
xor
cvtpi2ps
pop
cmpsb
and
outsl
cwtl
cltd
subb
adc
or
aas
push
std
xor
xor
add
scas
jns
pusha
daa
dec
push
cmpb
in
xor
insl
inc
ret
sahf
or
inc
pop
cltd
push
hlt
pop
out
nop
lock
sub
xchg
xor
fldt
adc
cwtl
ljmp
jl
mov
cmp
dec
outsl
je
mov
scas
push
pop
leave
dec
add
cltd
lods
push
cmp
mov
andb
sub
cmp
or
xor
test
js
in
pop
inc
jb
mov
sub
inc
dec
stc
xor
xchg
ja
lock
or
sub
ss
mov
adc
daa
orb
test
push
iret
jb,pt
push
pop
mov
in
jnp
leave
push
roll
je
cmp
cmp
lea
sbb
add
ja
loopne
cld
mov
stos
and
gs
inc
pop
jge
icebp
es
xor
xchg
or
aad
jnp
repz
jge
and
add
insb
arpl
imul
dec
inc
sub
jecxz
dec
adc
pop
imull
dec
xor
test
push
shlb
pusha
add
aam
and
cli
mov
jp
icebp
ljmp
dec
loope
imul
pop
daa
fldcw
ja
cmc
xchg
loope
inc
lods
in
push
cs
pop
sub
cwtl
xchg
pop
dec
jns
repz
cld
mov
fldl
ds
movsl
std
xchg
lea
lds
dec
movsb
repz
or
hlt
dec
pop
and
daa
xor
in
js
and
pop
lds
inc
sbb
sbb
dec
jmp
scas
outsb
sub
mov
cmpb
aam
mov
fistl
stc
je
inc
mov
js
fnstsw
cmpsb
pop
sub
push
loopne
test
mov
test
insl
jg
add
jno
out
bound
idivb
xor
int3
mov
arpl
mov
pushf
jbe
inc
test
adcl
ret
loope
int
mov
ja
xor
inc
jno
or
add
mov
cmp
push
clc
sub
push
mov
insb
jns
loop
mov
or
es
sub
fucomip
xor
int3
or
pop
sub
xchg
cmp
clc
lcall
imul
xchg
jbe
jle
cmc
lret
dec
and
test
fwait
cmp
mov
jnp
cmp
das
aaa
add
dec
mov
pop
sarl
pop
out
and
divb
sub
inc
stos
fimuls
jmp
cmp
sbb
inc
lods
inc
data16
xchg
jl
or
xchg
mov
aad
dec
xlat
mov
lock
andl
int3
or
into
inc
jp
ret
jmp
mov
xor
cli
mov
bound
or
cmp
lods
int3
sbb
daa
and
sub
rcll
pop
leave
iret
xchg
sub
xchg
outsl
mov
xor
cld
adc
push
cmp
mov
ss
jne
mov
test
cld
xchg
push
dec
inc
and
gs
jno
fbld
jno
aas
aam
ret
mov
rorb
xchg
xor
jp
adc
and
in
cmpb
and
icebp
xlat
sbb
stos
fucom
out
pop
mov
xchg
rcrb
mov
sbbl
fisubrl
movsb
cltd
push
jge
xchg
xchg
sub
inc
sub
lcall
jge
shrb
add
lahf
aam
subl
repz
aad
mov
cmp
lret
ljmp
mov
repz
mov
fucomip
loop
jp
hlt
std
in
rolb
add
int3
insl
popa
cld
pushf
mov
inc
jge
std
and
mov
int3
add
lret
pushf
add
mov
aas
divl
ffree
ds
mov
fistpll
int
sub
mov
lret
dec
mov
repnz
in
adc
fs
lcall
push
in
test
cs
fidivrs
mov
nop
outsb
adc
fdivrs
shll
xchg
fstpl
daa
fmull
fcoms
jns
scas
nop
ljmp
fsin
sbb
or
nop
mov
int3
mov
insb
pusha
movsl
sub
jge
xchg
flds
fwait
addr16
adc
ret
stos
mov
stos
lcall
loopne
xchg
sub
test
sbb
cmp
filds
xchg
xor
cmc
jmp
mov
add
cmp
add
mov
push
jmp
mov
mov
lea
push
jp
sub
xor
mov
test
xchg
push
add
mov
or
and
add
dec
push
test
ja
or
test
or
mov
ljmp
lahf
decl
repnz
push
jge
pop
mov
xchg
xchg
mov
dec
ja
lds
divb
jno
aad
pop
mov
or
jp
lods
arpl
and
movsl
ret
lret
dec
and
aas
cmp
sub
cmp
jo
int3
mov
adc
rcll
imul
jno
repz
ljmp
mov
sub
inc
cli
mov
inc
xlat
jno
rcrb
mov
xchg
mov
sbb
rorl
sub
push
mov
pop
lods
mov
aad
data16
and
pop
pop
dec
cmp
mov
ucomiss
out
pop
xchg
mov
cmp
dec
inc
enter
in
inc
insl
jg
jmp
dec
jmp
and
pop
mov
mov
lods
int
xchg
les
sbb
xor
push
lret
cld
cmp
mov
adc
or
cmpsl
sbb
imul
cmp
sti
or
repnz
sahf
mov
sbb
loope
push
dec
outsb
or
xor
rcrb
adc
dec
lret
sub
in
das
stos
stc
inc
sub
pop
sbb
ja
ror
mov
dec
nop
cmp
inc
sbb
movsl
jns
outsb
mov
fnstcw
jns
test
mov
int
cmp
mov
mov
mov
xlat
sbb
and
adc
out
xchg
mov
jns
adc
jge
dec
in
sbb
fists
nop
les
insl
lret
jne
mov
xchg
xchg
mov
stc
fistpll
sti
adc
inc
jns
adcb
mov
into
std
std
push
stc
inc
xor
and
out
testl
out
push
test
jle
out
out
dec
jmp
cli
fdivrs
lret
mov
and
push
mov
adc
faddp
cs
daa
push
mov
pop
or
ret
cmp
int
push
cmp
pop
aaa
das
sub
xchg
lea
push
stc
dec
mov
pop
sub
xor
mov
stos
cmp
pop
addl
fucom
sahf
add
mov
cmp
rclb
ds
dec
dec
cmp
daa
adc
sbb
mov
cmc
test
cltd
lods
pop
icebp
mov
pushf
add
inc
mov
rorl
fidivl
ljmp
repnz
xchg
int3
fcmove
cmp
enter
xchg
mov
mov
push
xor
jno
add
pop
inc
xchg
imul
push
scas
div
sbb
sbb
lret
test
mov
mov
imull
ss
daa
or
or
ljmp
aam
inc
test
pop
adc
pop
push
mov
cmpsl
sbb
in
push
add
adc
mov
neg
xor
std
and
xchg
loope
inc
in
sub
roll
cwtl
or
push
daa
jne
testb
mov
inc
xchg
mov
push
pop
push
addr16
sbb
scas
xchg
aam
lea
out
decb
jnp
adc
shrb
fwait
out
out
jne
mov
stos
push
in
movsb
mov
mov
nop
cltd
repnz
mov
mov
sbb
mov
mov
enter
testb
xor
cmp
jge
rcrb
cmpsl
dec
adc
sbb
xchg
ret
lret
sub
pusha
loop
or
and
mov
int3
popa
pop
push
subl
ss
inc
lea
imull
cmp
and
sbb
pop
sub
orb
pop
in
push
xchg
inc
xor
lods
xorl
push
mov
inc
mov
cmp
rcrl
les
stos
mov
adc
aas
aas
hlt
adcl
jge
cmp
push
mov
adc
lret
adc
hlt
test
mov
push
dec
iret
mov
cwtl
push
push
and
push
jecxz
mov
ss
xchg
push
fists
mov
jo
sub
xlat
push
enter
js
add
aaa
dec
mov
cld
pop
cmp
mov
fdivrl
and
repnz
test
int3
stc
cwtl
pop
inc
jne
out
adc
loope
je
inc
sub
pop
mov
mov
pop
fisubl
cmc
jmp
testb
call
or
mov
movsl
mov
mov
movsb
ljmp
loop
test
xchg
or
mov
pop
mov
pushf
shr
dec
mov
xor
jnp
xchg
jg
sbb
cmp
int3
loop
push
mov
push
aaa
mov
nop
or
testb
mov
stos
inc
out
cmp
sub
mov
repnz
sbb
fcomip
cmp
mov
scas
rol
outsl
xor
add
ja
out
pop
push
mov
mov
add
addr16
mov
jo
fcompl
pop
cmp
test
dec
cmp
xchg
das
cmp
jne
mov
xorl
and
mov
std
jo
fdivr
test
inc
sbb
inc
sar
pop
xor
outsb
imul
ret
pop
fstpt
mov
loopne
mov
in
or
mov
rclb
mov
in
cltd
mov
cmp
call
adc
lret
dec
scas
cli
mov
cmp
or
std
pusha
mov
cmp
or
adc
cmp
pop
xchg
mov
fs
or
cmpsb
pop
std
xchg
jge
out
cld
jns
adcl
xchg
cltd
dec
mov
hlt
sub
or
pop
mov
xlat
fmull
mov
or
mov
xchg
mov
cmpb
scas
roll
arpl
jo
push
out
pushf
xor
enter
pop
fcmovne
in
bound
out
sub
cwtl
mov
lret
std
xchg
push
aad
loop
mov
stc
mov
mov
stos
loopne
inc
adc
gs
and
cmp
mov
xchg
insb
push
out
hlt
jmp
and
xor
mov
lcall
mov
ret
or
dec
in
test
xchg
cmp
sub
push
dec
rol
dec
lds
js
in
sahf
mov
cltd
push
push
iret
dec
cld
idivb
cwtl
out
jne
sub
mov
mov
std
ds
mov
push
or
jge
pop
sti
dec
pop
sbb
dec
pop
xchg
and
rolb
dec
ja
lods
or
add
movsb
fidivrs
cli
out
or
mulb
jbe
loopne
or
sahf
adc
sbb
sbb
lods
out
jae
add
lret
cli
jmp
pop
outsb
sbb
mov
movsl
push
into
out
jae
inc
cli
mov
sub
and
add
mov
push
lret
push
addb
cmp
jb
lret
stc
lret
sub
mov
dec
mulb
cltd
dec
lods
push
ret
xor
das
and
mov
add
addb
movsl
repz
scas
adc
xchg
xchg
lods
shrb
pop
aam
adc
dec
mov
test
repz
mov
aas
xor
mov
test
adc
les
or
addb
fidivrs
arpl
lds
cld
daa
cmp
mov
insl
mov
mov
stos
sbb
mov
dec
out
outsl
stc
inc
add
in
sbb
jns
or
adc
and
fwait
popf
dec
cmpsl
sbb
inc
and
inc
sbb
ret
add
xchg
jecxz
mov
out
loope
icebp
fmull
push
mov
lods
push
ljmp
fcoms
mov
aas
jo
cmpb
adc
push
and
sub
sti
mov
out
sub
sbb
fistpl
in
mov
repnz
lret
repz
and
in
mov
dec
dec
mov
xor
test
or
push
sub
dec
fisttps
adc
test
mov
arpl
scas
cmp
and
repnz
int3
jecxz
enter
mov
cmp
fsubrl
fs
push
cmc
cltd
icebp
bound
mov
lret
jo
inc
sub
push
push
loop
mov
jg
sub
xor
int
adc
je
je
test
xchg
ja
cmpsb
sub
xlat
mov
lock
popa
std
sbb
and
mov
inc
sub
and
scas
add
sti
aam
int
pop
int3
or
je
mov
pop
cld
popa
inc
add
or
add
xor
push
pop
jl
push
scas
pop
repz
in
ljmp
in
sbb
test
xor
inc
jnp
push
jne
sbb
or
mov
fwait
adcl
add
mov
pop
mov
adc
dec
enter
push
fildl
jle
das
pop
jb
scas
mov
jle
add
mov
ja
stc
stc
mov
jb
jne
cmpb
rorb
push
xlat
scas
pop
mov
jg
sbb
dec
ja
shlb
test
imul
scas
pop
lock
lcall
xor
and
repnz
mov
pop
push
insb
xor
ja
jbe
xchg
mov
ret
adc
mov
mov
push
ror
clc
push
sarb
sub
jmp
xchg
push
and
int3
test
getsec
push
in
lods
sub
mov
jmp
mov
push
pop
lock
rorl
xchg
add
into
cmp
nop
aaa
sbb
fsubl
inc
mov
dec
lret
ljmpw
push
cli
mov
leave
lahf
cltd
lods
pop
and
mov
test
inc
pop
aad
inc
mov
lcall
sti
cltd
enter
imulb
and
cmpsl
dec
rcr
dec
mov
bound
lods
test
sbb
jo
stos
dec
loope
jb
popa
les
push
cli
inc
inc
pop
push
mov
lea
pusha
or
clc
lahf
out
and
imul
addr16
adc
sbb
pop
testl
cld
xchg
add
jb
push
xchg
gs
push
cmp
push
dec
cmp
hlt
cmpsl
cld
add
xor
mov
rcl
mov
or
stc
lret
aas
mov
sub
xchg
sub
push
add
stc
fbstp
lcall
xchg
mov
mov
cltd
dec
in
loopne
imul
insb
xchg
in
xchg
ficoms
cmp
or
push
enter
addl
out
call
mov
jno
sarl
inc
cmc
sbb
inc
clc
inc
jecxz
pop
dec
int
jne
lods
sub
pop
repnz
or
sahf
xor
xor
mov
call
mov
cltd
pushf
cltd
and
fs
mov
dec
into
pop
inc
xchg
jp
xor
push
sub
dec
es
mov
mov
fcomi
xchg
xor
imul
popf
andb
out
sahf
mov
xorl
mov
andl
test
fdivrl
scas
xor
push
xor
add
loop
sbbb
or
mov
xor
testl
cmp
mov
jl
mov
sahf
pushl
mov
fnsave
jo
stos
push
mov
adc
sub
inc
sahf
divb
jp
movsb
imul
xlat
dec
cmp
int
aaa
or
pop
call
xor
mov
jo
int3
push
das
lods
sub
les
mov
rorb
mov
in
arpl
xchg
mov
lret
test
or
lds
pop
in
sti
mov
cmp
xchg
lock
xor
ret
mov
mov
mov
test
out
cmpsb
iret
push
add
aam
out
sub
mov
push
leave
pop
lahf
shr
ss
and
fdivr
ja
xor
cmp
jns
data16
lods
aas
add
lcall
jnp
xchg
dec
and
cmp
clc
pop
rorb
jp
outsl
pusha
shlb
out
mov
push
loopne
loop
dec
scas
hlt
sbb
jmp
cmp
stos
pop
popf
stos
aaa
mov
rcl
xchg
sub
mov
push
add
sbb
mov
mov
shll
and
rcrb
sar
mov
pop
sub
inc
and
das
fwait
adc
inc
movsl
xchg
adc
sub
sub
into
inc
inc
push
cwtl
iret
lds
ret
ret
aad
les
pop
ss
lods
sarb
sbb
ljmp
xor
popf
aam
roll
adc
int3
scas
inc
insb
mov
lret
mov
push
jo
cwtl
pusha
mov
inc
jle
inc
mov
out
les
jns
push
mov
adcb
mov
push
imul
sbb
jno
push
push
icebp
jmp
mov
rcl
or
jo
jge
xlat
stos
lret
jnp
fidivl
sub
cmp
pop
int
test
movsb
shrl
es
sub
std
and
push
fistpll
lock
add
sti
sahf
fwait
fs
push
test
and
jb
imul
cltd
mov
xor
out
xchg
aam
ja
mov
mov
inc
mov
inc
leave
int
pop
pop
fcoml
repnz
notl
jo
popf
fcoml
pop
sub
ja
mov
lahf
cltd
and
cmpsl
sub
test
sti
pop
sbb
adc
push
mulb
xchg
sub
xchg
lds
js
mov
sarb
xor
loop
and
xor
push
push
fsts
mov
stos
mov
jns
mov
xchg
dec
scas
je
xchg
inc
popa
test
dec
jbe
in
pop
divb
adc
daa
sub
jecxz
rorb
test
pop
cmc
pop
icebp
sbb
mov
aas
sub
stc
fmul
mov
lods
ret
pop
add
stc
mov
fwait
inc
mov
lret
fadds
out
sbb
in
out
ffree
jns
es
loopne
repz
movsb
or
push
les
xorb
inc
and
in
sub
ffreep
pop
icebp
das
out
jge
mov
call
mov
pushf
test
and
scas
lock
outsl
popf
aad
cmp
xchg
cmp
testb
pop
je
push
out
loopne
rcrb
mov
test
mov
in
out
jge
pop
inc
iret
mov
xchg
icebp
mov
jp
push
inc
pop
inc
pop
sbbb
fdivs
dec
ljmp
cmp
icebp
cmp
cld
loope
ds
jecxz
inc
xchg
and
mov
test
dec
mov
jmp
pushf
fistpll
shll
mov
jbe
push
cmpsb
pop
sbb
lock
enter
mov
dec
push
out
ljmp
xor
pop
std
andb
mov
movsb
stos
mov
in
mov
inc
push
push
mov
ret
lock
mov
sub
sub
ret
hlt
add
and
out
clc
inc
jns
dec
aas
leave
mov
xor
pop
push
cmp
cmp
in
daa
push
addb
mov
push
jmp
push
lcall
popf
jne
cmc
cmpb
pop
lock
mov
mov
xchg
xor
sbb
iret
cwtl
lods
push
push
jecxz
and
js
out
shl
aam
shl
fisubl
ret
jmp
es
push
push
fstpl
cmp
sub
xchg
out
jne
jnp
fldl
out
ss
pushf
movl
mov
je
scas
out
repz
xchg
mov
int3
divb
mov
daa
fisubrl
cmp
lods
inc
inc
sub
xor
shrb
popf
testl
cmpsb
mov
mov
sub
xchg
loope
mov
sbb
jmp
xor
imul
jb
push
mov
fcoml
xlat
lods
mov
mov
add
mov
fsubrl
outsb
push
sahf
movsb
sub
add
stos
lods
aam
jbe
push
and
or
test
jbe
and
insb
test
inc
stc
jae
push
mov
add
aaa
add
mov
insb
mov
popa
lahf
out
jp
loope
mov
shrb
divl
movsb
inc
pusha
iret
pop
pop
mov
pusha
std
jge
mov
inc
cmc
xor
std
fldt
dec
ret
cwtl
xchg
rcl
movsl
add
cltd
imul
repnz
in
arpl
push
xchg
imul
call
jecxz
mov
sub
push
add
and
outsl
xor
loop
xchg
pusha
aas
ljmp
adcl
aaa
popa
cmc
xor
int3
daa
stos
inc
fistl
push
mov
ret
aas
or
inc
stos
lret
hlt
xorl
popf
jl
stos
dec
sbb
mov
pop
fidivl
and
sub
or
inc
into
pop
mov
mov
dec
mov
pop
sub
cmp
xchg
cs
jne
pop
inc
or
insb
js
dec
add
sub
mov
les
rorl
push
push
loope
jno
jg
aam
jbe
je
nop
shll
shlb
jae
ret
js
rcll
data16
cli
call
add
cwtl
inc
inc
push
push
inc
scas
inc
mov
call
repnz
ss
dec
mov
push
push
mov
ret
adc
mov
ror
xchg
add
push
in
inc
mov
inc
pop
cmp
in
jmp
rcr
jle
mov
repnz
repnz
leave
ret
mov
test
out
out
arpl
lahf
sub
add
push
or
push
ja
in
push
pushf
xrelease
mov
jge
loopne
or
and
jl
repnz
sbb
cmp
cmp
dec
push
lods
out
stos
push
pop
ret
and
jns
or
dec
jl
aaa
in
ret
pop
stc
testl
iret
das
jbe
imul
sub
cmc
inc
pop
xor
shrb
mov
pop
clc
je
aaa
cmpsl
mov
xchg
push
inc
sbbl
inc
jb
test
mov
rcll
dec
add
jnp
lea
lea
jns
je
out
mov
movsl
inc
or
sbb
aas
fsub
mov
and
test
add
sbb
xchg
icebp
cmp
mov
push
ljmp
mov
mov
jbe
scas
jmp
ja
or
ret
andb
xchg
popf
adc
imull
add
jb
mov
clc
in
jle
xlat
mov
das
mov
int3
inc
xchg
out
or
xlat
arpl
sub
or
ret
mov
insl
iret
jmp
adc
mov
adc
filds
in
xchg
sti
gs
sti
push
sbb
add
inc
test
or
ret
hlt
lcall
xchg
sti
pushf
fisubrl
pop
sub
or
push
or
rorb
push
insl
inc
icebp
and
sbb
or
inc
movsb
sbb
lds
or
sub
inc
jns
xor
inc
add
icebp
jae
pushf
fcomp
int
js
and
mov
repz
scas
dec
adc
dec
arpl
add
pop
shl
mov
xor
adc
push
movsl
inc
xchg
pusha
in
fcomps
cli
stos
push
enter
fs
or
jmp
cwtl
inc
mov
sub
jmp
stos
jp
ret
stos
int
cwtl
adc
adc
jmp
dec
mov
int3
lcall
pop
adc
push
xchg
stc
xor
aad
push
and
xchg
xor
jl
popa
andl
or
mov
fisttpl
out
popa
inc
xor
sahf
xor
imul
dec
adc
add
mov
mov
pop
sub
nop
xor
jge
mov
enter
mov
rorb
imul
insb
cld
bound
clc
or
mov
std
lret
mov
lods
add
sbb
or
aas
jbe
rclb
cwtl
fcompl
subl
lods
dec
movsb
lock
mov
ficompl
mov
fs
ds
neg
ss
pop
and
gs
cmp
ds
xchg
fs
sub
mov
and
movsb
cmp
xchg
sbb
xlat
sahf
stc
jmp
adc
test
xor
xor
ret
out
push
pop
sbb
adc
adcl
daa
or
orl
inc
sub
enter
movsl
pop
mov
sahf
sbb
sbb
ror
mov
pusha
pop
ret
or
bound
test
mov
xchg
pop
cmp
test
mov
dec
xor
int
mov
ss
inc
sti
lds
jle
pop
outsl
xchg
imulb
and
mov
cmpb
lods
mulb
xorl
pop
jl
test
ret
arpl
mov
les
sub
add
jb
sub
or
gs
mov
jno
xchg
jg
arpl
cli
or
add
lahf
cmp
clc
rclb
jnp
dec
mov
jg
stos
mulb
mov
lods
jle
jne
test
jge
push
push
inc
loop
mov
jmp
lret
cli
sbb
pop
xchg
adc
rcll
sub
arpl
out
xchg
out
rorl
inc
xchg
cmpsl
ljmp
imul
cmp
xchg
int3
out
pop
push
bound
sbb
fbstp
sahf
in
fcomps
mov
mov
clc
arpl
jecxz
sbb
fmul
jmp
and
sbb
inc
call
dec
wbinvd
xchg
divb
and
mov
lret
pop
mov
mov
push
push
cltd
and
aas
jne
fdivrl
jne
das
fsubrl
xchg
fadds
pop
adc
pop
cmp
addr16
ljmp
add
lea
pop
ss
in
dec
mov
js
or
or
cmp
jp
dec
mov
bound
out
inc
jmp
lahf
dec
test
inc
sbb
bound
jno
cmpsb
or
jecxz
lds
jae
fs
adc
xchg
cltd
mov
ja
mov
mov
xchg
dec
movl
sub
or
dec
adc
push
shrl
push
out
jl
push
fwait
and
and
xchg
iret
scas
mov
push
repz
into
xlat
xchg
ficoml
mov
popa
mov
and
adc
cmp
xchg
iret
and
xchg
insl
add
jmp
enter
sbb
xor
mov
into
cltd
cmp
jae
outsl
int3
jb
popf
pusha
mov
cmp
cld
jle
jge
push
lods
das
jbe
test
xor
adc
mov
inc
out
sub
dec
loopne
lret
sahf
sbbb
popf
mov
mov
mov
mov
stos
mov
sti
cwtl
int
bswap
jbe
push
ficoml
pusha
pop
fs
pop
pop
mov
cld
or
in
es
or
int3
shrb
inc
push
xchg
scas
std
fs
call
sub
adc
rcrl
jb
xor
push
jae
ja
mov
inc
pop
fldenv
jo
mov
out
jnp
or
call
roll
jae
cmp
dec
cs
rorl
sub
cwtl
mov
mov
hlt
fstp
mov
clc
mov
push
jae
mov
mov
push
sbb
dec
cltd
and
add
fsubs
ret
sub
das
roll
arpl
pop
addr16
icebp
scas
cmpsl
pop
roll
mov
frstpm(287
xchg
pop
lret
fcoml
sub
mov
out
pusha
fwait
and
test
mov
daa
mov
cmp
pop
or
push
pop
cmp
fidivrs
ljmp
pop
fdivs
loop
lcall
inc
mov
aad
jbe
cmc
inc
lret
daa
pop
imul
dec
loopne
push
loop
inc
pusha
in
xchg
mov
iret
jns
shl
sbb
mov
shl
in
scas
fwait
mov
stos
test
cmp
pusha
pop
pop
popf
sub
pop
fadd
jle
bound
addr16
test
iret
mov
scas
stos
add
imul
inc
fwait
inc
lds
in
jle
and
arpl
pop
fldl2t
mov
std
add
in
jp,pt
xlat
lcall
lea
sub
insb
push
mov
les
xchg
jne
rolb
jp
mov
shrb
sub
bound
cmpsb
sti
lret
xor
in
shrl
push
lds
sub
mov
fistl
aam
sbb
enter
jl
popa
cmc
xchg
mov
lds
loope
bound
jbe
inc
pop
pminub
and
inc
dec
into
pop
jl
xchg
jae
icebp
inc
clc
stc
mov
hlt
out
not
xor
cld
cld
mov
popa
pop
icebp
pusha
xor
mov
cmp
int
ja
dec
ljmp
or
mov
push
jge
daa
mov
and
add
add
mov
insl
jle
ljmp
or
pop
mov
js
sti
jne
aaa
fbstp
pusha
stc
pop
mov
pop
mov
xchg
or
movl
fsubs
shrb
in
lahf
in
add
pop
cs
stos
lock
stos
ljmp
fisubs
adc
dec
aas
cwtl
insb
shl
jp
outsl
cmp
aad
cmp
sbb
notb
add
inc
mov
stos
xchg
outsb
mov
negl
push
in
push
je
jbe
and
outsl
pop
popf
shlb
adc
xchg
outsl
push
sub
in
ljmp
pop
pop
iret
fiaddl
inc
imul
dec
ds
sub
and
cmpsl
test
gs
push
dec
lea
fcomp
push
cmp
ja
add
adc
int3
jne
jb
clc
mov
adc
sub
je
push
mov
mov
inc
push
icebp
jnp
xor
loop
imul
dec
mov
imul
aad
xchg
mov
lea
ret
cmp
xchg
out
push
mov
adc
popf
pop
fimuls
jmp
pop
inc
inc
stos
loopne,pt
pop
leave
or
adc
jbe
addr16
push
push
stos
cmp
add
mov
cmp
es
pop
enter
dec
test
pushf
push
mov
insl
mov
enter
in
dec
and
pop
scas
pop
aas
popa
push
dec
add
flds
dec
fldt
shlb
adc
into
lret
lods
push
cltd
scas
xor
add
mov
es
dec
in
in
daa
sub
mov
push
mov
push
xor
lds
dec
je
clc
cmp
inc
lods
pusha
sbb
int3
fiaddl
lahf
nop
cmp
enter
out
sbb
test
xor
sbb
inc
cmp
ret
ss
lods
mov
push
and
sti
xchg
jp
mov
push
adc
push
pop
sbb
inc
sub
adc
inc
xor
inc
ljmp
enter
lcall
mov
push
xor
cli
jae
and
notb
aaa
cmp
or
mov
cmp
adc
pop
fcom
nop
or
jle
js
mov
sub
out
call
xchg
add
mov
loopne
roll
movsb
out
jne
add
mov
loopne
popf
xchg
jle
xor
cli
clc
jl
ljmp
std
push
pop
sbb
sub
push
sbb
sub
add
lds
mov
xor
ss
cmpsb
sub
imul
jp
and
fnstcw
orl
cmpsl
imul
test
dec
mov
xchg
pop
sub
roll
pushf
andb
pop
test
mov
xchg
xor
fdivs
adc
or
cmpsl
and
fimuls
imull
ss
dec
jbe
mov
inc
cmp
sbb
xchg
push
mov
mov
cs
mov
aam
fadds
divl
mov
jo
mov
mov
fwait
jg
out
dec
mov
mov
jo
add
push
movsb
test
mov
xchg
mov
orl
loopne
dec
inc
sub
jns
sub
pop
and
ret
pop
xchg
xor
rcrl
ljmp
mov
es
outsb
xor
sub
lcall
push
lods
faddl
dec
arpl
and
sub
sbb
dec
cmp
mov
add
push
xchg
inc
mov
gs
aam
rcr
fisttpll
lahf
sub
push
mov
in
jp
ret
movsb
mov
stos
mov
pop
adc
mov
add
xchg
xchg
sbb
xor
dec
in
xor
cmp
outsl
sub
pusha
push
and
enter
and
cld
filds
cmp
gs
sub
fstps
aam
jns
cmp
hlt
push
dec
dec
mov
push
addr16
scas
daa
hlt
call
sub
xchg
pop
dec
push
shr
insb
inc
addr16
push
ret
out
jae
loopne
sub
push
int
mov
lret
sahf
fcoml
jp
cmp
lret
stos
mov
jno
ss
pop
in
ret
loopne
ja
pop
pop
fsubr
jne
cs
jae
jns
pushf
mov
adc
mov
mov
or
push
mov
or
push
xchg
lock
sbb
xorl
test
enter
andb
fbld
and
mov
js
sbb
into
jb
lock
mov
add
pop
or
shl
aaa
mov
enter
bnd
or
je
or
sbb
subl
rcrl
fcompp
adc
sub
aad
pop
sbb
add
pop
push
bound
fcomps
mov
shlb
divb
xor
stos
out
push
hlt
push
mov
cmp
sbb
adc
leave
es
mov
add
mov
lock
inc
sbb
daa
test
inc
aas
dec
mov
stos
cmp
inc
es
and
xor
leave
outsl
sbb
dec
scas
popa
stc
cmpsl
rcll
push
mov
aad
fnstenv
mov
iret
xchg
push
les
enter
xchg
imul
mov
xchg
mov
hlt
test
pop
add
call
bnd
pusha
leave
mov
loopne
push
pop
test
sbb
and
sub
and
add
jbe
in
lcall
mov
and
orl
push
stos
mov
sbb
pop
xchg
pushf
pop
das
lds
push
push
cmpsl
test
scas
je
mov
lock
inc
fwait
pop
pusha
adcb
gs
outsl
xchg
fidivl
mov
ret
ds
sbb
push
das
aam
test
adc
cwtl
mov
push
outsb
lea
mov
rcr
cmp
fistpl
push
out
roll
jno,pn
mov
or
adc
loop
in
and
inc
push
xor
jae
les
cmpsb
ljmp
pop
insb
shlb
pop
faddp
lods
das
inc
cwtl
lret
movaps
sub
fmuls
adc
pop
jns
aad
loope
icebp
sub
sbb
jmp
leave
imul
add
addr16
sub
xor
add
and
jbe
mov
sbb
faddl
mov
aad
fs
inc
bound
outsl
adc
add
jmp
es
lret
sbbb
xor
inc
out
jo,pt
fisttps
inc
setl
imul
fs
fistpl
cltd
jg
push
sbb
add
xor
aam
call
sti
jns
negl
pop
out
add
and
in
push
adc
daa
xor
jge
les
xor
inc
inc
mov
pop
flds
xor
push
in
hlt
nop
rcrl
inc
push
adc
fisubrl
aad
cmp
hlt
ret
sarb
out
nop
aaa
fsts
bound
push
or
push
cmc
or
dec
jp
dec
outsl
jnp
dec
inc
xchg
scas
xchg
and
jb
adc
ljmp
xor
xchg
mov
leave
jno
cmp
test
arpl
fimuls
push
dec
sub
fstpt
sti
data16
pushf
sbb
xchg
aad
fsubrs
jno
clc
cltd
enter
push
stc
push
fcomi
mov
jg
and
es
je
add
adc
or
cmp
jg
xor
repz
jge
xchg
jp
cld
sub
adc
jmp
in
push
pusha
mov
lods
in
pcmpeqb
xchg
xchg
mov
pop
mov
sbb
pushl
sbb
sti
es
push
sub
jne
mov
out
add
fbld
inc
rolb
and
outsb
mov
divb
pop
test
push
adc
cli
xor
and
push
fstl
jo
mov
ss
cmp
shl
js
dec
jnp
pop
jp
cmp
call
pop
aad
or
dec
add
xor
push
les
ret
sub
rorb
mov
out
mov
popa
loopne
jns
rorb
mov
pop
aaa
fiaddl
jmp
jecxz
enter
cli
icebp
sahf
mov
pusha
lret
dec
ss
push
push
dec
ror
add
in
sbb
add
push
jno
ljmp
bndstx
cmp
mov
adc
push
pop
and
cmovnp
add
pop
jp
push
inc
xor
lahf
xchg
pop
shl
add
xchg
ret
dec
lret
outsb
push
add
pop
ret
mov
loope
pushl
mov
push
jo
mov
cmp
cmp
test
add
xchg
sar
push
lahf
jne
jp
mov
test
jecxz
lret
test
dec
sbb
dec
or
insb
test
ds
fsts
push
add
sbb
push
adc
loope
mov
icebp
test
jge
aad
sub
lcall
adc
cs
rol
es
and
lods
sbb
mov
add
and
jbe
and
in
push
pop
fsubl
xor
dec
cmpsl
push
pop
pop
and
sbb
sbb
repnz
mov
push
popf
lea
mov
mov
push
aas
sbb
stc
insl
sbb
lods
les
add
sti
mov
sahf
scas
test
test
cmp
insb
push
xor
hlt
xchg
dec
out
xlat
into
sarl
sub
jo
int3
pop
stos
int3
lcall
ret
ljmp
imul
dec
xchg
xor
test
test
ret
dec
popf
sarb
xchg
fsts
or
subl
fwait
push
jle
hlt
int3
lea
nop
mov
lret
pop
lea
add
aaa
daa
or
lcall
and
cli
outsb
or
pop
daa
in
push
in
mov
js
fwait
sbb
adcb
add
orl
scas
push
icebp
cmc
outsb
notl
fsubs
ret
loopne
sub
xlat
pop
jbe
ljmp
das
adc
sbb
lret
or
enter
inc
adc
test
fldt
mov
adc
test
out
jo
test
pop
dec
sarl
jecxz
lcall
sbb
ret
insl
lahf
dec
jp
sub
and
push
outsb
dec
scas
cli
out
stc
rcr
pop
dec
adc
fnsave
imulb
mov
sub
inc
dec
mov
sbb
push
lds
jge
insb
test
push
outsl
pusha
mov
and
or
cmp
or
add
xor
sti
jmp
outsl
cmp
dec
pop
xor
outsb
adc
inc
adc
add
movsl
push
dec
mov
and
mov
lahf
or
clc
xor
adc
ja
packsswb
and
je
mov
ja
in
mov
ds
sub
and
push
cmp
repnz
mov
rcr
in
cmpsb
push
cwtl
pop
sub
mov
movb
lea
jle
xlat
js
out
inc
sbb
pop
sti
es
mov
test
and
icebp
add
inc
stos
dec
ret
xor
loopne
jnp
cmpb
pop
lret
sbb
lds
ret
hlt
shlb
arpl
jmp
pop
sbb
aam
fidivl
add
daa
aam
ljmp
adc
push
jl,pt
lret
pop
jnp
add
lahf
dec
mov
dec
iret
mov
mov
lods
stos
int3
divb
add
mov
dec
jne
add
or
aam
cmp
out
xchg
and
inc
push
push
jne
roll
cmp
mov
add
stc
aas
jns
outsb
xchg
sahf
je
cld
pop
jne
mov
cmp
ds
push
sub
adc
xor
rolb
pop
and
dec
jo
mov
xor
faddl
daa
ds
cmpsl
mov
and
push
push
sub
xor
push
inc
arpl
cmc
nop
insb
push
xor
sub
mov
push
push
push
hlt
sahf
stc
aaa
test
pop
xorl
pop
testl
popa
and
push
or
jge
mov
aam
lea
arpl
mov
push
shl
add
in
addr16
push
xor
xchg
inc
roll
stos
int
pop
sbb
jle
inc
fidivl
push
lret
insb
jge
sahf
repz
lods
lods
jb
add
jp
xchg
imul
sbb
int
push
notl
daa
repz
jbe
add
pop
sbb
jno
lahf
imul
pop
fisubs
lock
ds
jl
fwait
xor
in
mov
out
les
stc
call
cmpsl
add
in
jno
mov
in
aaa
pop
mov
xchg
test
arpl
shlb
fisttpll
sets
gs
add
std
inc
xor
push
repnz
sub
inc
jg
imul
inc
or
rcll
loope
xor
ds
push
cmp
ror
push
aam
xor
xchg
aaa
push
and
js
or
iret
xchg
inc
mov
lock
xchg
push
xor
scas
rorb
xchg
add
push
shrb
push
aam
cwtl
push
mov
ljmp
test
out
incb
pop
aaa
test
adc
out
into
pop
stos
cmp
in
dec
sti
mov
cmp
mov
push
pushf
in
inc
xchg
mov
jmp
cwtl
sbb
jp
push
fidivs
push
xchg
mov
xor
push
rclb
or
insb
jle
sub
scas
mulb
push
add
lahf
jecxz
add
adc
fldcw
lahf
sbb
sub
arpl
nop
aad
ret
mov
mov
sbb
jno
fs
mov
add
sbb
lahf
inc
xchg
fidivrl
xchg
popf
add
inc
sbb
push
enter
ret
push
pushf
push
and
add
je
mov
xchg
pushf
sahf
dec
mov
pop
push
mov
add
inc
fbstp
jg
rcll
push
lods
push
mov
mov
xchg
ja
les
pushf
and
dec
jg
xchg
fadds
jne
ja
in
es
aam
out
mov
cmp
mov
leave
loop
rcll
imul
and
out
test
pop
and
movsl
or
dec
arpl
test
add
pushf
cmp
arpl
mov
mov
jle
test
and
cmp
das
ja
jl
in
test
mov
int
xchg
push
mov
inc
sbb
mov
xchg
mov
popf
cltd
fmull
or
mov
push
imulb
adc
inc
push
pop
cmp
addr16
sbb
xor
xchg
sub
xchg
xchg
xchg
mov
nop
fidivrs
sbb
add
dec
mov
push
test
cmp
and
and
lcall
int3
inc
std
jg
adc
imul
or
shll
pop
fcom
lods
sbb
cltd
aam
insb
xor
or
push
or
pop
dec
rclb
and
add
and
jno
stos
push
inc
mov
repz
in
out
add
ror
push
nop
pop
daa
insb
mov
ret
aaa
mov
dec
out
sub
jne
lods
push
clc
popa
sub
rcrb
scas
jle
push
sbb
outsl
jg
push
sbb
loope
mov
lds
xchg
sub
xor
add
inc
dec
inc
jmp
mov
or
rclb
orb
in
daa
cmpb
pop
adc
icebp
inc
aad
mov
je
inc
sbb
std
and
xchg
jmp
test
rcrb
test
push
mov
cmp
jge
adc
jbe
push
lods
add
pop
daa
incl
mov
test
lock
movsl
pop
cmp
push
icebp
push
mov
or
add
rol
adc
lods
sahf
xchg
jecxz
lods
mov
jbe
push
scas
jbe
pushf
inc
imul
jno
jae
popf
sti
fldcw
lcall
mov
push
jge
dec
jno
clc
fs
or
mov
sbb
shlb
in
fwait
inc
iret
ds
push
out
popa
or
sub
lcall
push
nop
sbb
mov
cmp
hlt
cmp
inc
in
iret
lea
sti
fimuls
or
mov
gs
xor
adc
int
cmp
clc
movsb
xor
jmp
popf
ret
and
gs
mov
lcall
xor
add
mov
gs
xchg
or
inc
inc
jbe
cmpsl
mov
inc
aas
cmpsl
lcall
mov
adc
adc
arpl
test
lods
leave
jg
int3
jnp
mov
sarl
xlat
adc
inc
cmp
mov
xchg
xchg
jecxz
sarl
pop
cwtl
dec
or
mov
xchg
mov
pushf
gs
add
mov
xchg
inc
adc
into
push
int3
mov
push
mov
in
push
jbe
fdivs
in
jno
test
out
pop
cmc
iret
xor
jecxz
xchg
arpl
ret
sti
mov
std
sbb
in
repz
push
push
add
std
faddl
pop
data16
cmp
xchg
fistpl
dec
cmp
js
or
lret
mov
xchg
scas
cli
xchg
mov
loopne
mov
neg
testb
adc
xchg
or
mov
ss
pop
sti
cmpsl
je
push
bound
or
jg
outsb
test
push
pushf
pop
cmpsl
mov
jb
mov
xchg
jno
cmp
add
aam
sti
or
dec
pop
inc
pusha
sbb
enter
dec
and
cmp
imul
fisubrl
mov
sarl
aas
cmp
pusha
xor
pop
mov
shr
fidivrs
jecxz
jl
and
ficomps
and
xchg
xchg
xorl
fbstp
push
adc
dec
rcll
lock
pop
mov
das
leave
and
inc
test
addl
jnp
jecxz
cmpsl
push
popa
movsl
cld
sub
icebp
addb
ss
xchg
lods
rcrb
fwait
in
aam
xchg
insl
jle
fadds
iret
mov
and
rolb
dec
lods
mov
ljmp
jp
loopne
icebp
adc
cmp
stc
xchg
push
adc
in
jmp
popa
stc
jne
mov
call
adc
enter
adc
das
jle
add
shlb
or
add
xor
add
lahf
fmuls
jno
dec
xchg
jecxz
mov
je
or
xchg
adc
sbb
xor
mov
pop
cltd
mov
adc
push
loopne
xor
xchg
rcr
shl
mov
push
or
movsb
mov
pop
pop
fistpl
mov
aas
cmp
sbb
pushf
mov
mov
insb
mov
in
adc
out
clc
pop
popf
mov
lahf
add
mov
mov
pop
fnstsw
xor
fnsave
aaa
call
jo
in
test
ss
fwait
loope
jle
inc
xchg
xor
sub
imul
cmc
shll
cmc
in
mov
sub
lea
jmp
jg
xor
push
test
or
add
sbb
shr
adc
std
testb
testl
lods
adc
mov
xor
rol
xor
aaa
leave
ljmp
frndint
jp
out
cmpsl
xchg
fisubs
lret
rolb
sbb
mov
ficompl
sub
mov
sbb
mov
mov
mov
test
mov
add
push
xchg
xor
gs
jmp
in
lods
cwtl
mov
dec
movsb
neg
repnz
fsubs
stos
lds
fildll
jmp
imul
cltd
pop
inc
mov
mov
push
cmp
sub
test
pop
pop
jne
inc
cmc
mov
pusha
mov
in
faddl
xor
mov
xchg
jbe
mov
icebp
test
adc
add
mov
xor
cmp
mov
xor
mov
pop
std
lahf
ds
cltd
aad
repz
xchg
mov
jo
cld
mov
fidivrl
test
loop
xor
pusha
jns
mov
aaa
repz
pop
fs
popf
shll
sub
insl
dec
cmpsb
pop
rclb
mov
cltd
add
shl
stos
sbb
pop
and
gs
sbb
xor
fldcw
out
cmp
ljmp
pushf
lret
dec
cmc
fadds
and
dec
aad
push
jo
inc
sahf
outsb
or
mov
sub
mov
out
inc
jg
out
jb
jo
jns
popf
lea
sub
dec
adc
cmp
movsl
jg
pop
ds
jno
outsb
add
xchg
mov
lods
jp
sbb
arpl
in
cltd
push
movsb
xchg
add
cmp
fwait
out
push
sub
sti
fmuls
mov
mov
dec
dec
or
ja
out
jl,pn
mov
dec
mov
and
daa
inc
dec
push
and
add
mov
jmp
jle
sub
out
shrb
sub
mov
data16
decb
push
aas
pop
push
out
andb
ja
repnz
pop
les
jno
mov
out
cmp
lret
testb
sbb
mov
adc
mov
outsb
outsb
aas
fldenv
fnstenv
cli
inc
int3
loopne
dec
outsb
pop
xor
fcmovnu
push
iret
ret
cli
xor
mov
pushf
push
daa
push
mov
test
cmc
sub
lods
sbb
xor
in
xchg
xorl
aad
hlt
out
loope
push
mov
mov
sub
lahf
mov
std
inc
jne
sub
fnstsw
mov
test
xlat
push
loope
dec
hlt
in
xlat
in
les
push
xchg
add
xchg
xor
mov
fldcw
push
add
and
mov
jle,pn
mov
aas
sbb
jmp
mov
add
cmp
imul
and
sbb
pop
mov
sti
mov
rolb
mov
call
neg
lcall
adc
jne
out
adc
push
jbe
mov
mov
fidivrl
shll
xchg
mov
jle
or
outsb
arpl
dec
ds
jbe
loopne
cmpl
mov
sub
test
sarb
push
fisubrs
out
aad
es
adc
push
xchg
jge
and
pushf
test
and
subl
jns
lock
adc
subl
add
in
inc
mov
sbb
mov
mov
mov
xor
mov
cmp
mov
inc
out
push
aas
jo
sub
mov
ret
xchg
jbe
mov
cmp
dec
sub
mov
mov
stos
cmc
pop
jl
inc
mov
xchg
int3
xchg
loop
mov
cmp
sahf
je
fisubrs
out
jae
stos
and
mull
xchg
daa
mov
jecxz
and
mov
xchg
arpl
ds
sbb
int
ljmp
pop
data16
push
stc
sbb
cltd
aaa
icebp
jno
in
pop
mov
shll
push
rclb
xchg
in
test
icebp
scas
ja
insb
je
jge
and
mov
adc
sub
lods
lock
nop
sub
inc
dec
movsl
mov
jg
xchg
daa
and
inc
icebp
mov
cmp
into
jne
mov
xor
inc
sbb
pop
fs
or
faddp
pushf
mov
sub
sti
addr16
push
inc
lods
dec
dec
ret
xor
sub
fs
xor
ja
sub
mov
add
aam
jmp
cmp
in
push
sbb
rorb
pop
mov
cld
push
push
movsb
push
add
enter
mov
leave
mov
jbe
dec
jl
nop
push
cmp
mov
add
sbb
mov
push
xor
arpl
cs
or
or
aaa
xchg
xchg
dec
mov
in
rorl
bound
pop
push
cmp
xchg
and
lds
jge
rolb
jno
cmp
in
lea
ret
sbb
orl
or
xor
sbb
inc
xchg
inc
mov
pop
add
lcall
mov
pop
mov
xchg
sbb
shlb
inc
push
movsl
dec
mov
shrl
adc
addr16
jge
data16
xor
das
fstps
dec
lcall
sbb
lods
ret
loopne
loope
or
mov
add
clc
mov
pop
in
jg
xor
ja
mov
out
sub
push
pop
in
shll
scas
in
pusha
inc
or
stc
pushf
jmp
cmp
shlb
test
lret
jg
icebp
jge
cld
daa
loop
imul
ljmp
dec
stc
add
and
inc
dec
out
sbb
dec
fld
or
mov
leave
mov
mov
jp
lods
aad
and
jle
or
adc
in
testb
mov
lcall
test
inc
sub
xor
push
mov
sbb
cmp
mov
movsb
xlat
or
bound
hlt
xor
xchg
add
shrl
sbb
clc
add
clc
ficoml
sbb
mov
add
and
jge
stos
cmc
out
dec
or
mov
xor
inc
fnstsw
call
subb
enter
mov
movb
enter
movsb
adc
xor
xchg
fstpt
xor
mov
push
cli
hlt
pop
inc
aas
outsl
mov
xor
stos
cmp
cmpsb
jge
leave
popf
cmpsb
pushf
lahf
enter
inc
mov
or
movsl
jge
movsl
test
sub
lock
pop
lret
sub
loop
ss
sub
sahf
fnstenv
popf
out
mov
andb
push
mov
sbb
pop
es
scas
jg
js
stc
xor
sbb
push
sbb
pusha
inc
sahf
inc
and
scas
dec
sti
dec
fcoms
icebp
je
fs
in
adc
push
cmpsb
in
mov
int
imul
ja
mov
sub
pop
in
daa
dec
test
adc
add
cwtl
test
mov
popf
xchg
add
fwait
test
add
xchg
fcoms
cltd
dec
test
mov
jge
add
and
dec
sarl
lahf
bound
push
or
cmc
cmp
mov
dec
stos
sti
outsl
lea
xlat
fdivl
cmp
sbb
lret
repz
fst
jle
or
cmp
mov
test
pop
add
push
mov
fstps
adc
div
xor
add
mov
out
pushf
decb
push
mov
test
sbb
add
popa
cmp
cld
cmpsb
pusha
in
lods
mov
xor
rorb
fldl
push
xor
add
adc
stos
mov
jle
sub
aaa
xlat
ret
mov
pop
stos
mov
or
sbb
or
jg
sub
mov
jmp
inc
adcl
jle
mov
stos
outsb
dec
pop
bound
jecxz
out
lret
push
xlat
xor
leave
test
xor
dec
sub
es
xor
mov
add
add
xchg
mov
and
pushf
imul
ffree
fbld
xor
insb
xor
stos
mov
push
outsl
add
enter
icebp
push
into
sub
cltd
pop
cli
sbb
sbb
mov
bound
cmpsl
add
push
hlt
test
xlat
outsl
std
xlat
into
mov
jns
movsb
xor
mov
or
cmpsb
mov
jns
jb
bound
leave
sbb
dec
push
adc
pusha
andl
enter
push
xchg
insl
xor
or
or
jo
and
out
inc
cmp
inc
jno
bound
sub
test
xchg
fisubs
pop
int
cmp
cmp
cli
int3
mov
mov
xchg
mov
ljmp
mov
movsl
loop
mov
aas
jge
inc
icebp
cmc
lds
das
aam
int
mov
ret
push
cmp
lahf
pusha
repnz
sub
lods
push
mov
orl
mov
dec
fwait
mov
mov
push
jl
and
xchg
adc
ret
push
mov
inc
cmovs
fildll
xchg
int
inc
leave
inc
cmc
inc
and
loopne
or
pop
xor
xchg
loop
aad
in
mov
shll
and
sarl
nop
pop
stc
imul
out
std
movsb
jbe
repz
insb
xor
and
push
cltd
jmp
aas
sub
popa
mov
in
mov
nop
push
imul
out
lods
rcl
in
nop
js
push
popa
inc
inc
pop
dec
aam
orb
imul
stos
dec
xor
sub
mov
in
or
mov
sub
jecxz
lods
std
ret
addr16
addr16
adc
jno
repnz
add
loop
inc
and
call
mov
xchg
pop
lcall
js
xchg
and
insb
adc
repz
jno
jbe
dec
cld
nop
mov
movsl
and
ret
or
mov
adc
inc
fidivl
or
je
mov
inc
movsb
loope
pop
push
add
testb
sbb
js
fsubp
gs
dec
mov
das
pop
pusha
fisttps
gs
or
sbb
cli
fidivl
ss
cmp
cmpl
fwait
xor
outsb
into
xchg
xorb
repz
push
mov
push
xor
pop
xchg
xor
and
mov
popa
clc
adc
mov
mov
stos
sbb
xlat
sbb
inc
movsl
inc
xchg
push
or
and
pushf
sbbl
fs
movsb
sub
hlt
or
jb
dec
or
add
bound
adc
mov
xor
mov
sub
xchg
xchg
cli
or
fwait
nop
inc
pop
arpl
sub
call
inc
pop
fnstsw
pop
in
fwait
xchg
add
xor
pop
xor
movsb
aas
dec
jno
mov
push
adc
adc
mov
or
iret
and
repnz
or
pop
push
outsl
repz
lock
jb
out
scas
lahf
flds
pop
pop
stos
ljmp
aad
push
daa
pop
mov
repnz
sbb
cmp
aad
shrl
jge
out
jns
adc
gs
and
jle
and
ficoms
sbb
cmp
cmp
popf
imul
cmp
test
xchg
ror
add
xchg
lea
mov
pop
sbb
adc
pop
add
add
dec
push
test
dec
xor
mov
or
fistpl
xlat
inc
fildll
icebp
imul
cmc
aas
mov
cs
aaa
loope
mov
xor
push
or
jo
cmp
mov
jmp
fisttpll
inc
ja
jmp
fsubs
and
mov
loop
xchg
jg
pop
hlt
fisttpll
add
es
cmc
xor
xchg
stc
lcall
mov
xchg
pop
dec
sbb
movsb
and
xchg
sti
and
sbb
lods
sbb
test
shll
clc
lret
push
push
mov
fwait
jno
jo
inc
enter
cmp
xchg
aad
in
cmp
mov
fistpll
ss
fdiv
icebp
imul
sbb
inc
pushf
repnz
mov
or
push
imul
dec
ficomps
dec
lret
pop
jbe
stc
cwtl
imul
or
dec
adc
mov
push
lds
inc
add
aad
cmp
icebp
aam
mov
inc
sarl
stc
cwtl
pop
push
pop
jne
sub
pop
jo
dec
imull
inc
cmp
or
aas
test
jmp
mov
sub
loopne
inc
inc
xchg
cmp
out
push
bound
push
test
mov
lahf
xor
cmp
movsl
sub
in
mov
int3
in
out
stos
pushf
paddusb
push
inc
subl
int3
and
mov
stos
xor
data16
rcrl
cltd
movsb
and
loop
imul
jle
jb
cs
je
adc
and
push
and
add
cmp
dec
xchg
flds
adc
ljmp
or
push
shrb
ds
xchg
test
movsl
pop
cmpsl
mov
rcrb
cmp
jno
stos
iret
test
mov
cmp
ret
cmp
bound
pushf
movsb
xchg
js
pop
bound
ret
movsl
sub
xchg
test
loope
fadds
and
add
int3
jnp
imul
or
cmpsb
adc
mov
push
inc
in
fimuls
mov
xchg
leave
outsb
and
dec
adc
xor
mov
subl
mov
or
xchg
rcll
flds
lret
dec
push
inc
mov
ja
fildl
cmc
fildll
mov
paddsb
cwtl
cmpsb
add
adc
jmp
cmpsb
ficoml
sub
jl
mov
sub
test
jle
jb
aaa
xchg
jb
test
repnz
or
fistl
out
cmc
cmp
xor
std
mov
js
mov
mov
fnstenv
xchg
or
lret
mov
mov
in
or
lret
add
jne
out
movsb
shrb
cltd
jp
mov
inc
sahf
lods
mov
add
add
sbb
or
aad
mov
loopne
jns
mov
adc
insl
xchg
xor
imul
push
lods
dec
popa
or
mov
mov
or
sub
push
add
pop
stos
or
xlat
in
ds
pop
sbb
mov
sahf
arpl
ret
in
pusha
repz
in
jle
cmp
lea
pop
inc
cwtl
sub
sahf
push
subb
testb
int3
je
movsb
sbb
push
gs
sub
cwtl
arpl
or
pushl
clc
jbe
mov
mov
call
stos
mov
cmp
lds
xor
inc
add
imul
jno
int
sub
mov
out
outsb
frstor
dec
aam
arpl
xchg
loop
std
lock
fadd
imul
mov
or
mov
inc
repnz
andl
push
arpl
ret
ret
xchg
or
vmread
daa
sarb
lock
push
or
cmp
mov
sbb
dec
out
roll
mov
call
in
pop
out
cwtl
lock
lods
mov
fcomps
dec
sbb
mov
mov
xlat
loope
int3
or
mov
mov
xchg
adc
inc
jmp
mov
daa
fwait
sahf
lcall
mov
mov
mov
mov
inc
pop
lea
leave
sub
pop
xorb
lods
xchg
mov
bound
repnz
scas
dec
xchg
adc
movsl
pop
imul
je
add
push
popf
sub
inc
cmpsb
cmp
pop
fs
outsl
mov
mov
push
inc
test
in
insb
ja
lahf
mov
fldln2
mov
jb
pusha
xchg
and
arpl
out
jno
sahf
test
repz
nop
xor
xor
div
adc
adc
mov
movsl
outsl
jecxz
shlb
xchg
or
mov
imul
fists
js
fcmovu
jl
jno
inc
jmp
jmp
lock
or
std
sbb
cmp
or
cwtl
mov
pop
pushf
mov
sub
mov
mov
orb
jne
fs
mov
ss
mov
and
insb
in
lret
stos
shll
pop
stos
mov
inc
add
xchg
mov
je
pop
sub
mov
ja
mov
cmp
outsb
rol
sbb
sub
imull
rorl
notl
sub
xchg
mov
and
xor
cltd
js
sti
xchg
sbb
test
xor
push
leave
fisubl
cmc
cwtl
xlat
es
in
scas
test
mov
push
mov
add
inc
in
push
jno
push
aas
sub
adc
fimull
stc
inc
leave
inc
ret
cmp
pop
sbb
push
sbb
push
imull
inc
inc
push
or
and
outsl
mov
enter
mov
test
out
jl
iret
aad
mov
dec
adc
push
leave
lret
lret
imul
clc
adc
mov
cmpb
dec
ss
adc
or
push
add
fdivrs
add
nop
inc
pop
and
test
lea
shll
mov
mov
mov
jns
fmulp
sub
iret
outsw
mov
mov
xchg
lret
cmp
xor
lcall
or
xchg
xchg
je
repz
inc
inc
cmp
pop
andb
lret
mov
inc
call
je
push
xchg
pushl
add
scas
out
mov
das
inc
aam
mov
rcrl
dec
jne
lahf
fimull
inc
mov
push
aas
jae
dec
sar
xchg
and
lahf
mov
xchg
xor
sarb
dec
outsl
inc
mov
out
pop
dec
fists
jge
jecxz
mov
in
jnp
in
pop
lods
jge
sbb
cli
dec
push
and
jo
imul
pop
cmp
cmp
dec
xchg
test
je
ss
enter
repnz
mov
test
lret
je
aaa
push
inc
ljmp
cmp
sbb
push
cmpsb
aaa
sbb
jecxz
mov
or
scas
mov
rcr
sbb
and
xorl
les
xor
add
and
xor
fs
jb
pop
adc
rol
movsl
and
adc
or
lret
xchg
test
xor
sub
repnz
mov
jns
add
jg
mov
rorl
cmp
aam
sub
xlat
mov
push
jp
xchg
sub
push
adc
inc
sbb
imul
jecxz
inc
pop
dec
cmp
loope
inc
je
in
mov
dec
scas
add
jae
fidivrs
stc
jae
sti
xchg
add
push
mov
fldl
sub
xchg
rcrb
xorb
insb
jmp
pop
push
js
insl
jg
in
sub
pop
mov
outsb
out
pop
dec
out
lahf
stc
mov
out
test
ror
test
lahf
lret
or
jnp
jb
push
nop
and
loop
les
mov
xor
xchg
jecxz
aam
push
in
call
adc
inc
imul
mov
mov
sub
rol
mov
cmp
xor
inc
mov
sub
repz
inc
or
xor
cld
imul
cmp
add
push
adc
mov
jnp
fbld
mov
pop
lods
fsubl
fs
outsb
aam
jl
gs
test
and
mov
cmpsb
pop
push
scas
mov
xchg
insb
imul
mov
outsb
mov
pop
mov
push
jb
jnp
or
pop
cmp
dec
push
inc
lea
rorl
sub
add
fcomps
xor
push
cmp
daa
sbb
jns
sbb
push
mov
enter
stos
and
mov
push
or
daa
fcomi
adc
dec
sbb
js
movsb
jnp
xor
leave
dec
test
adc
push
cmp
sub
and
add
and
mov
pusha
nop
cmpsw
fwait
or
arpl
into
loop
mov
imul
cwtl
jbe
sahf
mov
int
and
fwait
jb
dec
out
fisttps
iret
push
inc
lret
cmp
push
inc
dec
aaa
cmc
out
out
stc
dec
xor
xchg
leave
jle
test
loop
mov
stos
mov
cmp
aaa
test
rcl
fimull
and
out
iret
cmp
inc
fs
pop
ret
sti
pushf
fs
lods
push
mov
xor
sub
lea
cmp
icebp
das
insl
xchg
or
jmp
test
sub
daa
cmp
sub
lods
movsb
out
pop
rcrl
aaa
repz
inc
inc
xchg
inc
mov
nop
lods
fcmovu
cmp
daa
push
out
cmc
jecxz
mov
pop
lock
sbb
jp
aaa
sbb
fs
out
mov
adc
pushw
lea
leave
andl
cltd
movsb
mov
add
push
into
rep
jp
xchg
je
outsl
xchg
push
jbe
push
push
adc
test
jne
jnp
int3
ja
daa
add
or
mov
mov
mov
dec
lahf
xchg
test
jne
insb
inc
test
fwait
sti
movups
cs
lret
popf
fcmovu
adc
test
aam
nop
pop
xchg
leave
xor
pop
imul
jge
mov
leave
fcompl
out
push
imul
dec
push
aad
xchg
lods
aad
push
outsb
inc
je
and
in
sub
mov
sub
in
or
mov
shlb
test
repnz
loop
sbb
lcall
adc
push
push
aad
sar
or
ljmp
sub
popa
push
mov
scas
mov
push
enter
add
jl
mov
lods
add
cmpsb
cmc
ss
in
imul
pop
out
xor
out
aam
jle
cmp
cmpsl
int
jne
loopne
je
ret
push
and
add
je
dec
cmp
add
bound
cli
outsb
stos
jge
jae
lahf
and
xor
fldenv
add
xchg
outsl
sub
jnp
push
test
xchg
xchg
pop
adcb
stos
pop
sbb
and
xor
idivl
sub
push
sub
xor
shlb
test
das
lods
std
aad
pop
push
insb
lea
xlat
add
mov
ljmp
sarb
flds
pop
pop
sub
shr
test
push
mov
lock
jae
mov
mov
jp
iret
lcall
xchg
jg
sub
push
sbbl
inc
lea
scas
loopne
or
push
fbstp
jo
inc
push
lcall
inc
adc
ljmp
lret
mov
ficompl
mov
nop
shrl
and
sarl
movb
xor
les
add
mov
adc
and
inc
xchg
jecxz
enter
fldenv
xchg
add
push
daa
aaa
mov
mov
add
pop
sbb
adc
inc
cli
sbb
xchg
cmp
cmp
in
out
cmp
pop
shl
inc
outsb
mov
out
js
daa
dec
addl
ret
rorb
xchg
inc
aad
pop
lds
mov
jno
xchg
mov
mov
adc
and
shll
push
sbb
int3
mov
mov
add
iret
jns
lcall
sbb
mov
mov
subb
push
in
ja
stc
mov
adc
nop
sahf
mov
xor
jns
jle
cmp
jecxz
mov
sbb
mov
rcrb
mov
les
mov
lea
add
mov
cld
xor
jne
cmp
cmpsb
push
inc
mov
inc
ret
in
sbb
inc
sbbl
dec
das
imul
mov
orb
push
mov
inc
dec
loopne
frstor
cmp
sbb
pop
push
mov
push
push
pop
cmp
push
and
jae
mov
pop
loop
or
movsl
lea
ret
xchg
scas
popa
dec
xor
daa
fildl
repnz
mov
repz
xchg
dec
cmp
or
jl
push
push
iret
jne
nop
adc
lods
cli
test
imul
lods
lods
pop
sti
addr16
leave
cmpsb
inc
adc
inc
xchg
insl
or
and
into
loope
icebp
fldenv
shrl
push
iret
in
and
xchg
cmp
cs
adc
sti
pop
xlat
imul
adc
addl
pop
xchg
aaa
xchg
jns
rorl
enter
aaa
gs
adc
scas
test
hlt
lea
test
jae
or
pop
jle
lods
out
cmp
decl
mov
andb
xchg
add
les
scas
add
daa
inc
cltd
bound
movsl
inc
pusha
lds
adc
std
inc
test
inc
idiv
inc
loopne
ja
push
or
test
sbb
bound
add
and
lahf
pop
and
sub
sbb
nop
out
or
lcall
lock
loope
mov
or
rcrl
push
in
fnclex
leave
and
pop
and
pop
lcall
cltd
jo
sub
dec
xchg
into
dec
mov
mov
shrb
mulb
fnstsw
sbb
in
dec
dec
jp
aaa
push
and
push
jo
add
movsb
xchg
adc
mov
popa
jmpw
cmp
pop
imulb
ficoms
push
inc
rcl
inc
or
inc
pop
adc
mov
das
push
nop
xchg
mov
dec
or
inc
push
lret
push
push
cmpsb
lcall
cmc
les
cli
cmp
das
add
insb
mov
iret
jle
out
xchg
gs
adc
jno
pop
arpl
cmp
mov
and
inc
sub
test
xor
push
sub
push
xchg
mov
jle
cli
fistl
push
lahf
cltd
jp
aad
outsl
lret
cmp
in
sbb
add
mov
mov
pop
sbb
push
push
faddl
rcrb
adc
mull
subb
xor
pop
and
xchg
cmc
loope
mov
sub
push
adc
dec
out
jmp
or
sar
pop
mov
pop
cltd
addr16
jbe
and
pushf
lods
and
in
enter
add
inc
jne
jmp
sbb
jns
sahf
lods
in
mov
mov
jecxz
jae
stos
or
insb
xchg
test
insb
cmpsl
movsb
movsb
cmp
mov
fldt
adc
mov
add
xchg
fsts
cmpsb
push
js
ret
ss
add
clc
in
loope
stos
jge
push
sub
or
mov
lcall
inc
xchg
aas
pop
idivl
hlt
mov
insl
fisubrs
decb
push
mov
cwtl
jae
xor
cmp
push
shrl
mov
popa
mov
in
jne
sahf
xchg
sbb
mov
pop
mov
pop
jnp
adc
data16
sbb
sub
jge
cmp
js
adc
push
loopne
push
dec
and
mov
sbb
aaa
cltd
lods
rolb
xor
xchg
xchg
std
pop
mov
lds
jl
and
cs
dec
into
rcll
lcall
sub
dec
sub
cmp
xchg
mov
cltd
inc
xchg
das
outsl
fnstcw
test
xor
in
cmp
cltd
out
pop
adc
mov
repz
jmp
cmp
jae
mov
and
not
or
push
cmc
fisttps
jnp
daa
xor
lea
fcom
mov
jmp
sub
lret
mov
fsts
incb
xor
nop
cmpsb
stos
leave
dec
lcall
loopne
xchg
push
cmp
enter
push
and
push
insb
gs
pop
ljmp
test
mov
loopne
mov
inc
pusha
pop
push
jbe
aaa
cli
pop
mov
or
jle
push
das
pop
xor
les
ds
or
das
iret
sub
xchg
lret
clc
das
dec
paddw
repz
cmc
scas
popf
inc
cltd
fildll
cmp
enter
sbb
outsl
mov
or
sahf
bound
cs
dec
cmp
gs
jne
mov
iret
xchg
add
int
pop
pusha
into
rcr
xchg
rcrl
jne
clc
mov
ja
xlat
dec
int3
icebp
and
xor
icebp
mov
cltd
es
sahf
nop
cmpsl
cld
in
cmp
dec
add
and
fsubrl
mov
xor
test
addr16
insl
pop
xchg
daa
nop
sti
jmp
sti
je
cmpsb
ror
jg
outsl
jge
lds
lcall
and
movsb
into
lcall
rcrb
jl
ret
sub
aaa
xor
or
adc
sahf
adc
std
pushf
mov
les
ja
dec
adc
jle
or
in
test
std
mov
inc
ret
add
jmp
test
inc
sub
push
repnz
test
cmc
fs
insw
lods
call
fwait
lea
xchg
xchg
pop
cmp
mov
cmpsl
cltd
adc
sahf
add
int
or
mov
lahf
mov
test
push
jg
aam
pop
fs
lock
xchg
ljmp
fmul
or
cmp
decl
xchg
jg
sub
inc
scas
pop
nop
jnp
sbb
mov
insl
adc
fs
or
pop
in
inc
adc
xchg
test
xchg
lahf
mov
push
ss
mov
adc
mov
cmpsl
jb
mov
pop
mov
mov
dec
inc
shrb
push
mov
xor
lock
cmp
outsl
dec
jno
adc
mov
pusha
add
pop
xchg
sbb
dec
inc
mov
jno
pop
rcrl
test
out
sbb
jne
cli
mov
pop
and
add
test
lods
xchg
jb
rcrl
add
movl
int
push
lcall
push
cmpsb
add
sbb
dec
xchg
shl
adc
ljmp
mov
cmp
lret
rep
fimuls
jecxz
test
jge
dec
outsb
jp
ja
shrb
stc
mov
daa
jg
sbb
pop
sub
lret
pop
dec
data16
sbb
movsl
jne
sbb
test
push
out
jp
incl
call
or
xor
sub
cwtl
test
mov
jl
enter
scas
outsl
fwait
mov
dec
out
add
mov
push
ds
cs
push
sbb
mov
int
das
xor
sar
enter
push
adc
cmp
mov
nopl
pop
dec
or
mov
dec
shrb
push
or
adc
cmp
push
ss
shlb
jnp
adc
xor
push
mov
sti
mov
outsb
call
test
and
mov
sub
faddl
sbb
push
mov
pop
fs
stc
dec
in
xchg
or
shll
push
jb
ja
rcll
sub
pop
adc
mov
lcall
sbb
ljmp
jb
inc
push
push
push
dec
or
lea
dec
les
ret
push
inc
imul
sbb
mov
cmc
das
je
pop
aad
jp
fsubl
out
addb
cltd
scas
bound
cmp
cwtl
test
sbb
adc
loope
lret
add
sbb
and
into
inc
popa
push
data16
clc
les
subl
add
cmpsb
inc
push
adc
mov
mov
movsl
incb
cli
stc
push
cli
addr16
mov
pushf
xchg
xor
inc
inc
fldl
dec
enter
sbb
pop
jne
sbb
dec
sti
clc
mov
push
push
adc
cmpb
cmp
cwtl
inc
cli
sbb
aas
mov
jle
add
fisubl
adc
push
xor
mov
loop
in
sbb
insl
mov
dec
dec
mov
mov
std
adc
and
testl
pop
xchg
ds
test
rcll
mov
adc
stos
out
mov
aas
or
repnz
jle
push
jo
test
push
cmpsb
stos
nop
call
mov
stos
stos
xlat
cwtl
into
lea
jne
mov
add
add
dec
rclb
popa
mov
in
xchg
sbb
ja
decl
bound
iret
inc
mov
xchg
sbb
cmp
pop
and
ds
xorl
in
xchg
lea
and
ficomps
into
cmp
call
xchg
hlt
mov
push
stos
mov
ljmp
mov
fstl
mov
call
dec
mov
mov
xor
add
vphaddbw
jnp
cmp
or
idivb
fbstp
pop
ljmp
idivl
xor
hlt
pop
fldcw
loope
pop
sbb
dec
mov
push
sub
add
lcall
inc
and
jbe
shll
into
lods
decl
mov
push
adc
imul
pop
sub
sub
movsb
sbb
inc
movsb
movb
and
das
popf
cs
outsl
cmc
lods
mov
jae
push
sub
mov
push
ficomps
cltd
adc
xchg
mov
stos
mov
jne
xchg
xor
call
cmp
or
cmpsl
xchg
stos
outsl
sub
or
mov
jbe
je
mov
jns
jmp
cmp
roll
or
popa
fbld
inc
sub
mov
jno
sbb
xchg
sahf
imul
sbb
push
je
mov
mov
add
push
out
rorl
inc
add
jae
lds
movlps
push
arpl
pushf
lret
in
rorb
addl
mov
dec
fidivs
aam
aam
das
lret
cmp
mov
pop
gs
leave
daa
pop
sub
test
in
pop
sbb
out
les
stos
inc
add
adc
push
pop
ret
xor
mov
rcll
rcl
push
or
pop
bound
xchg
roll
pop
push
outsb
xchg
mov
out
std
loopne
fisubrs
mov
icebp
jmp
push
dec
or
incl
out
dec
aas
sub
sub
loope
lods
lock
sub
scas
out
cmp
gs
or
sbb
lds
test
push
adc
fwait
cmp
pop
adcb
jbe
mov
mov
xchg
xchg
call
fists
fistpll
cmp
mov
add
dec
sbb
xor
addr16
mov
mov
mov
push
cwtl
fisttpll
out
lods
in
sahf
sbb
mov
xlat
in
sbb
rcrl
add
and
push
mov
pushf
and
jae
xchg
outsl
sub
mov
roll
or
push
test
hlt
rorb
adc
pop
mov
pushf
fiaddl
jbe
insl
daa
mov
inc
mov
jns
aas
mov
hlt
mov
inc
popa
jge
cmp
shll
xlat
lcall
jl
insb
mov
lret
gs
adc
or
repz
stc
jecxz
addl
inc
mov
mov
enter
sbb
mov
and
mov
arpl
ficompl
xor
or
dec
dec
xchg
mov
fidivs
push
xchg
cmc
mov
fildll
loop
lea
or
pop
iret
ret
fs
sbb
sahf
lret
push
into
mov
mov
push
stos
mov
mov
push
imul
dec
pop
clc
pop
or
xor
test
popf
mov
es
cmc
or
jbe
cmp
in
int
add
repz
push
mov
movsb
fistl
fldt
or
ljmp
push
mov
cmc
push
pop
popa
sahf
sbb
std
mov
adc
mov
ret
jno
jmp
add
push
out
in
sub
pop
xchg
bound
xor
inc
cltd
pushf
sub
xchg
xchg
cld
sarl
sbb
adcb
cwtl
mov
fldcw
daa
mov
cld
pop
mov
mov
movsb
jg
lods
add
aam
test
cmpsb
xor
lahf
mov
ficompl
mov
jb
sub
sub
adc
cmpsb
lods
rcrl
pop
fadd
pop
aam
xchg
pusha
xor
repz
adc
sbbl
pop
sbbl
filds
xchg
jmp
ret
lods
mov
das
mov
pop
cmc
ja
add
mov
fnstsw
mov
dec
movsb
jg
add
add
daa
popf
inc
out
loopne
push
mov
pop
mov
cmp
mov
stos
xor
aam
inc
mov
add
shlb
add
loop
daa
sub
xchg
adc
out
stc
lods
adc
xorl
jle
das
mov
test
or
scas
cmp
pusha
insl
add
pop
cmp
les
clc
insb
xlat
inc
pusha
je
daa
in
mov
xlat
in
loopne
jl
imulb
jbe
rcll
sbb
jb
dec
cmp
out
daa
mov
lcall
pop
jns
pop
push
adc
mov
cwtl
mov
mov
mov
inc
or
adc
jge
add
imul
scas
jae
ret
sbb
dec
movsl
pop
dec
shrl
adc
lds
fstpt
andb
enter
dec
sub
cld
pop
sub
mov
and
pop
aam
mov
mov
adc
movsl
cmp
cmp
rolb
out
sub
mov
and
lock
je
cmp
push
cmp
icebp
fisttpl
lods
in
fstp
out
rorb
addr16
sbb
mov
testl
and
mov
stos
std
insl
xor
xchg
test
xorl
mov
ficompl
sar
inc
pop
sbb
int3
mov
xor
dec
mov
mov
jl
jecxz
mov
mov
jecxz
cmp
fadds
pop
hlt
sbb
jo
cmp
addr16
cli
add
out
mov
and
out
cltd
repnz
outsb
sub
sahf
loope
fisubs
cwtl
pushf
das
xor
add
stc
xchg
mov
fbstp
cmc
bound
jmp
xor
mov
jno
sahf
out
or
int3
pop
fidivrs
adc
push
sbb
or
jg
movsb
xor
add
in
testl
fcoml
dec
inc
dec
or
dec
inc
xchg
and
adc
mov
fists
scas
add
ds
cmp
pop
enter
repz
inc
jl
mov
and
mov
fbstp
iret
adc
daa
jge
imul
sbb
fstl
imul
scas
sub
in
dec
imul
es
push
xorl
adc
jp
movsl
xchg
cmpsb
xor
inc
pop
repz
push
or
jmp
inc
push
pop
idivb
cli
je
mov
idivl
xor
and
xlat
test
sbb
addr16
outsl
xchg
pop
pop
pop
push
jecxz
scas
js
adc
push
movsl
test
in
jl
incl
fistpll
pop
xchg
imull
dec
and
int
int
add
shll
push
lret
sbb
inc
movsb
repz
mov
movsb
adc
arpl
xor
adc
loopne
cmp
push
push
push
stos
popa
add
pop
popf
jecxz
jbe
mov
dec
and
xabort
inc
jae
pop
les
lock
aad
cmp
sub
loope
and
add
add
in
ficomps
xchg
jecxz
jo
fisubrs
or
or
mov
divb
mov
pushf
xor
je
mov
xor
and
pop
push
lods
push
outsl
push
push
jae
push
lods
mov
adc
jmp
ret
push
mov
stc
pop
mov
xchg
sub
pop
xor
mov
xor
push
cmp
sbb
mov
in
sbb
sbb
test
cmp
dec
push
hlt
in
pop
xchg
mov
ror
and
mov
out
cmp
shrb
add
addl
lret
icebp
sarl
mov
rcl
aaa
xor
rclb
mov
xchg
push
test
mov
cmpb
adc
fistpll
inc
fadds
enter
cmp
lods
out
sub
cmp
mov
shlb
jp
jo
add
icebp
test
rorb
cmp
cld
arpl
stos
cmp
lea
mov
imulb
or
and
pop
mov
or
les
dec
es
mov
lcall
jbe
xor
dec
sbb
xor
mov
xlat
mov
inc
stos
push
dec
jo
popf
pusha
in
sbb
fwait
sub
fimuls
loope
jbe,pn
jns
jo
pop
lds
outsl
mov
sub
dec
add
sub
add
cmpsb
xchg
test
push
in
jne
scas
sub
inc
mov
cli
jge
imul
sub
adc
test
stc
or
xchg
adc
inc
daa
or
repnz
and
cmp
fwait
mov
cli
sbb
mov
inc
ret
arpl
int
add
dec
pop
mov
jle
out
fiadds
cltd
inc
xchg
push
cmp
pop
push
out
fcmovbe
jp
jmp
and
xchg
fisubrl
and
dec
mov
lds
cs
cwtl
push
pop
idivl
lcall
mov
mov
jl
cld
mov
fstl
adc
lahf
add
iret
xor
shll
mov
pop
dec
and
mov
adc
es
xchg
or
test
push
jle
or
push
shrl
jae
jnp
mov
leave
scas
jne
in
je
push
imul
mov
push
cmpsb
inc
inc
pop
push
xor
outsb
add
adc
adc
mov
inc
adc
gs
shll
jl
pop
xchg
in
cmp
jns
push
jnp
inc
xchg
mov
sbb
call
dec
lahf
xor
pop
cmp
inc
xor
and
push
cmpsb
dec
push
sbb
sub
cmp
repz
and
fimuls
pop
sahf
fcoms
add
ret
pop
jbe
and
and
iret
cltd
dec
sbb
lcall
prefetchw
mov
sbb
lods
mov
jno
pop
adc
pop
ror
testb
inc
add
test
fcmovne
ja
cmp
jl
mov
adcb
scas
insl
imul
pop
xchg
and
shrb
shl
movsl
aaa
and
popa
mov
cmpb
xor
decb
outsl
ljmp
ja
in
and
xchg
pop
daa
pushf
adcb
xor
sbb
cmp
cmc
sbb
int
jne
insl
testb
push
inc
xor
push
push
pusha
in
push
shrb
ja
ss
pop
popf
jp
sub
in
adc
lea
jecxz
add
jne
stos
pop
adc
pop
lret
pop
fmull
jmp
jne
cli
arpl
icebp
add
mov
imul
in
xor
in
das
mov
shll
in
fsubs
pop
aaa
pop
inc
mov
inc
dec
pushf
push
add
cmp
and
mov
lahf
jne
mov
adc
mov
ja
mov
gs
movsl
xchg
inc
add
scas
mov
dec
or
adc
or
pop
jge
mov
or
imull
dec
jg
mov
les
dec
gs
mov
pusha
cmp
lods
cmp
pop
inc
mov
dec
nop
lahf
sbb
jge
out
inc
push
mov
or
sub
adc
inc
popf
dec
xchg
and
mov
stc
and
adc
xchg
cmp
mov
mov
adc
ret
cmp
mov
ret
dec
lds
jl
scas
xchg
outsb
popf
test
mov
inc
les
scas
sub
pop
pop
insl
dec
cmc
mov
and
test
and
xor
add
mov
adc
cmc
mov
xchg
add
enter
hlt
jnp
xlat
cmpsl
movsb
repnz
mov
push
lcall
int
int
aas
and
pop
add
cli
push
clc
and
or
cmpsl
dec
pop
stos
mov
loop
xor
repz
out
mov
clc
pop
dec
repnz
imul
pop
je
lods
mov
mov
js
sahf
push
push
and
sub
jl
fiadds
xor
pusha
jg
ss
inc
sbb
push
stc
shlb
xor
fsqrt
pop
sub
jl
mov
or
xchg
or
mov
jae
add
adc
repz
inc
andb
ret
xchg
fadd
cmp
pop
pushf
in
mov
imul
divl
push
jle
inc
cli
stc
adc
lods
in
dec
ficoms
in
bound
add
jno
cmp
push
in
sbb
xchg
mov
and
fisubl
sub
jge
ret
loop
jne
or
shrl
mov
cmp
ss
testb
popf
lahf
subl
loopne
lea
addr16
xchg
aaa
or
inc
lcall
jae
dec
pusha
xchg
fisttps
inc
add
test
test
adc
imul
xor
cwtl
add
int3
pop
pop
mov
mov
mov
and
int3
inc
adc
setno
dec
mov
adc
adc
test
mov
cmp
iret
sti
int3
push
sub
sbb
sbb
je
adc
je
scas
mov
push
push
lcall
aad
mov
pop
jge
subl
stos
cld
dec
mov
jle
fwait
mov
rcll
mov
push
aam
xchg
jae
mulb
pop
dec
lahf
sub
mov
popf
adc
out
push
xchg
and
pop
xchg
jae
and
in
pop
jne
pushf
dec
push
inc
cmp
add
imul
jae
decl
push
lock
lret
addl
pusha
or
cmp
adc
inc
add
push
push
sub
and
sahf
push
movsl
repz
cltd
hlt
mov
mov
scas
inc
pop
inc
mov
cmp
cli
jnp
nop
sbb
pushf
xchg
mov
push
cwtl
jl
fidivl
mov
mov
dec
fs
lcall
lea
push
mov
in
xor
jns
push
in
sahf
aaa
inc
jno
mov
dec
jbe
xchg
rol
cmp
mov
hlt
push
mov
add
icebp
xchg
outsb
fwait
xchg
mov
cmc
xchg
cmp
mov
scas
push
into
push
popa
sub
mov
test
or
pop
pop
fisttpll
inc
enter
cltd
inc
std
lea
pop
in
cltd
cmpsb
jmp
adc
imul
push
pop
inc
fbstp
mov
cmp
cmc
push
inc
xchg
xchg
lret
test
rcrb
sbb
dec
bound
jbe
cmp
sbb
mov
imul
mov
lods
ret
pushf
xchg
in
clc
and
call
mov
pop
incb
jle
dec
mov
int
dec
lock
sub
xlat
jb
pop
sbb
cmpsb
jbe
xor
push
ret
inc
gs
jb
pop
sbb
push
dec
dec
jecxz
and
negb
sub
xor
jae
jae
call
lock
stc
fisubrs
adc
xchg
mov
lret
mov
ret
pop
les
cmp
mov
imul
es
ljmp
mov
mulb
mov
inc
fiadds
add
mov
inc
adc
or
sbb
cs
or
addb
add
add
fistpl
dec
xchg
pop
add
lcall
jg
mov
popf
popf
cmpb
dec
mov
repz
inc
cmp
out
or
bound
imul
mov
out
pcmpgtw
pushl
in
out
sub
in
or
loopne
adc
xchg
sbb
sbb
mov
arpl
repz
inc
xlat
cld
xchg
pusha
xchg
rcr
xchg
pop
out
cmpsl
int
mov
dec
dec
and
fmuls
sti
gs
je
lds
inc
fiadds
or
pop
stc
adc
cld
cltd
in
call
push
push
push
iretw
mov
mov
xchg
and
imul
sbb
xor
xor
imul
fidivl
inc
shll
push
xor
sti
xchg
not
int
xor
iret
nop
cmc
movsb
and
mov
mul
aam
subl
pop
inc
test
test
mov
aaa
mov
adc
jmp
push
adc
lds
or
das
mov
dec
dec
dec
push
mov
inc
cmp
daa
mov
mov
mov
aad
xchg
adc
loopne
pop
scas
andb
dec
add
test
xchg
sbb
and
cld
mov
ret
sbb
sti
aam
xor
mov
pusha
pushf
jle
or
or
xor
mov
pop
bound
xchg
mov
addb
loopne
inc
and
lods
mov
jne
test
subb
or
mov
fisubl
or
sub
inc
cmp
ret
jmp
sub
outsb
into
mov
mov
jl
decl
mov
jle
pop
xor
in
xchg
dec
xchg
push
stc
leave
jbe
push
mov
fidivrl
inc
daa
adc
cs
repz
jmp
test
jns
cwtl
mov
loop
fcmovnb
call
inc
nop
xor
mov
loopne
pop
hlt
add
mov
cmpsl
addr16
xchg
mov
insb
adc
push
sbb
cmp
test
test
sub
lods
cli
arpl
test
stos
mul
aaa
add
and
sub
sti
push
mov
iret
xchg
aad
dec
dec
cmc
mov
sti
shlb
fldt
adc
add
out
testb
cmpsl
in
inc
fs
dec
ficomps
stc
push
xor
ss
sbb
in
sbb
inc
adc
loope
inc
sub
sub
xchg
aad
xorb
sahf
outsl
pop
and
and
pop
ljmp
ds
dec
rorl
repnz
fistps
idivl
inc
push
xchg
movb
push
cmpsl
and
or
mov
movsb
or
hlt
int
lds
mov
cli
fucomip
jg
inc
push
aad
and
xchg
jmp
inc
fsubs
daa
subl
dec
inc
loope
add
xchg
decb
cld
js
xchg
stos
cmp
ret
pop
inc
cmp
adc
pop
mov
mov
loope
stos
cld
aaa
or
fcom
enter
int3
hlt
fwait
add
xchg
mov
adc
daa
sub
pop
fs
leave
lods
inc
lcall
jbe
mov
mov
or
es
xchg
mov
mov
stc
mov
in
out
xchg
fs
repz
leave
aaa
jl
or
dec
mov
jbe
out
test
cmp
xor
inc
lret
pop
mov
gs
fnsave
mov
ss
lcall
or
add
ret
dec
pop
xchg
andl
sub
cmpsb
sbb
jl
fstl
mov
sub
jl
shr
mov
cmp
fucomi
pop
sub
les
loop
cld
sahf
push
jne
loopne
and
cmp
out
adc
push
xchg
sti
xchg
adc
pop
push
sahf
popf
loop
enter
test
cwtl
in
sbb
inc
mov
adc
in
rcrl
dec
movsl
jno
sub
inc
hlt
adc
fmuls
xchg
iret
fstl
jle
stc
xor
sti
inc
sbb
psubq
aad
shrl
pushf
jne
mov
push
ret
pop
aas
inc
inc
imul
xchg
test
xchg
ret
push
sti
enter
cmp
gs
mov
das
or
pop
and
add
xchg
mov
idiv
sub
sub
pop
inc
and
into
and
jbe
test
test
lahf
in
cs
ja
shll
sti
pop
sbbl
pop
ds
pop
fildl
and
jle
out
pop
icebp
fwait
xchg
das
outsl
push
xchg
sub
jnp
xchg
push
fwait
clc
leave
fs
mov
mov
cmpsb
lds
pop
lea
push
sbbb
xchg
jecxz
cld
push
shlb
stos
test
push
pop
jmp
adc
adc
or
jle
inc
jnp
sub
mov
test
dec
ds
ret
jge
movsb
imulb
fnstenv
pop
aas
mov
loope
enter
loop
enter
push
sbb
shlb
cmc
add
xor
push
sub
sbb
jo
mov
inc
cmpsl
dec
in
add
scas
in
testl
shl
xchg
push
adc
mov
jns
aad
int
pop
fidivl
popa
bound
and
xchg
pop
outsl
add
pusha
add
inc
push
shrb
lret
dec
aad
insb
imul
mov
or
cmp
and
cmp
rcll
jg
inc
cltd
inc
cwtl
mov
lock
repz
cmp
sub
and
mov
int
jb
and
aad
movsl
out
int3
out
pop
cmp
sbb
bound
sub
paddw
xor
ret
cmp
xlat
cmpsl
cwtl
sub
sti
sbb
stos
fistpl
xor
jle
fistpll
in
inc
jo
cmp
mov
fcomps
mov
sahf
addr16
pop
adc
pusha
in
rcrb
mov
xacquire
add
xchg
dec
lret
aas
mov
scas
xchg
int3
sub
fistps
dec
add
jmp
sbb
mov
xchg
or
and
movsl
adc
pop
sbb
out
inc
mov
mov
pop
cmp
dec
mov
add
sub
mov
shrb
popl
imul
push
adc
sarl
lret
pop
inc
and
xlat
and
mov
inc
ja
dec
clc
pop
and
mov
lock
ja
cmc
xchg
enter
dec
cmp
jge
int
fwait
out
aaa
test
loope
in
mov
imull
or
sub
in
sub
inc
inc
stos
adc
loopne
pop
cmpsl
filds
imul
ficoms
pop
mov
mov
subb
fisttpll
out
fsubrl
dec
inc
add
sub
js
mov
add
xchg
and
je
filds
add
push
out
and
aaa
in
stc
sbb
push
lret
push
mov
outsl
scas
cwtl
int3
jb
ja
adc
mov
pop
pop
and
sbb
sub
repnz
jge
or
push
adcb
ret
scas
inc
dec
data16
rorl
jecxz
ss
roll
and
enter
push
adc
js
stos
mov
fildl
mov
out
scas
jge
lcall
mov
out
iret
sbb
pop
cmp
cmpsb
daa
and
data16
outsb
pop
insb
push
add
adc
add
cmpsl
sbb
sbb
ret
mov
cs
add
jp
pusha
or
bound
push
or
add
rclb
repnz
shll
movsb
xor
idivb
mov
mov
adc
ljmp
and
jle
sub
push
dec
add
fisubs
stos
rcl
in
aaa
or
jnp
mov
xchg
jns
lods
iret
ret
and
dec
jb
fs
sbb
mov
jp
mov
add
outsl
lods
xor
dec
loope
mov
pop
push
ja
sbb
test
sti
mov
mov
fcoms
xorb
loope
sbb
cmpsb
mov
mov
xor
adc
and
pop
int3
fistps
into
mov
call
sbbb
das
add
addl
or
fwait
inc
les
mov
out
leave
lea
fwait
push
add
sub
shll
jmp
push
sar
dec
or
cmp
push
lods
xor
mov
or
inc
mov
popa
dec
dec
lret
ret
shl
xchg
mov
push
les
adc
gs
je
es
add
lea
int3
mov
js
mov
xchg
fwait
jb
and
inc
mov
push
add
mov
cmp
add
ss
sbb
jns
inc
push
mov
cmp
cmp
imul
fdivs
jl,pn
and
mov
cs
sahf
fcmove
jg
inc
push
stos
push
sbb
sahf
ror
in
roll
out
mov
or
frstor
sarb
fbstp
mov
loop
xchg
mov
cmc
sbb
mov
adc
mov
in
adc
and
out
loopne
cmp
fstl
test
xor
aas
push
inc
filds
jg
push
iret
jne
and
push
sbb
cmp
sbb
adc
add
loope
add
jmp
fdivrl
jnp
lock
push
and
shll
jnp
xchg
pop
push
fstpt
jle
mov
js
stc
inc
add
lds
sub
stos
add
mov
mov
imull
std
cmp
scas
lret
jns
fsubs
mov
stos
bnd
push
aas
and
jno
dec
xor
out
pop
pop
bound
scas
jmp
pop
adc
jp
addl
mov
jnp
lahf
and
cmp
xchg
xchg
shlb
jg
jl
push
mov
loopne
dec
pop
inc
push
insb
and
js
xor
les
arpl
loopne
in
movsb
and
notl
push
sub
popf
mov
xchg
ljmp
bound
js
testb
cwtl
popa
imul
adc
mov
jbe
xchg
sub
outsb
xchg
insl
and
mov
pop
jo
dec
xchg
aam
sub
mov
xor
loopne
jl
sbb
call
mov
insb
add
pop
lods
or
shrl
adc
leave
jb
shll
shrl
pop
loop
or
add
or
mov
imul
xchg
sbb
dec
lds
jnp
shrb
or
cmp
sub
jb
shll
lock
xlat
pop
not
stos
mov
jmp
and
popa
std
aas
xor
sbb
inc
or
test
xchg
mov
imul
push
loopne
stos
mov
or
adc
in
adc
icebp
adcb
cmp
dec
repnz
aam
data16
lods
sarl
pop
pusha
div
out
add
add
inc
leave
hlt
out
jno
add
sti
inc
leave
out
in
scas
sbb
ficomps
xchg
stos
in
dec
in
inc
mov
pushf
insb
gs
cmp
jge
cmp
xchg
insl
xchg
sbb
pop
push
sub
jns
sahf
bound
dec
and
or
mov
adc
test
xchg
sbb
adc
icebp
jno
xchg
push
sahf
or
sub
cltd
or
push
bound
movsb
inc
xchg
sub
mov
pusha
xorl
mov
xchg
mov
jns
sbb
paddd
shlb
pop
orb
mov
inc
dec
push
push
loope
xchg
and
mov
mov
xchg
sbb
add
cmpb
test
dec
pop
xchg
jg
adc
js
lret
js
jmp
adc
out
gs
xchg
ja
adc
adc
mov
out
ret
push
mov
jle
clc
push
push
mov
lds
or
adc
arpl
mov
mov
int3
ja
sbb
mov
mov
inc
mov
dec
jge,pt
cld
push
sbb
inc
inc
movsl
aam
outsl
and
popa
shlb
cmp
mov
ret
cld
stc
mov
aas
inc
add
in
out
in
cli
imul
dec
inc
sub
int
add
dec
frstor
in
adc
push
mov
std
aaa
roll
xchg
lret
inc
jl
pop
xchg
sub
int
sub
sarb
mov
sbb
sbb
rcrb
pop
addr16
push
jns
aas
jg
pop
mov
daa
enter
add
sub
mov
testl
gs
mov
mov
xchg
cmpb
and
insl
js
mov
mov
mov
test
push
cmpsl
cli
incb
xor
sbb
xchg
mov
cmpl
popl
loope
push
arpl
stc
repnz
es
add
jnp
mov
sahf
add
pop
addl
sub
fdivr
add
add
xorb
imul
jne
cmpsb
fbld
loope
inc
movsl
mov
sbb
out
mov
jmp
ds
popf
aaa
out
aad
int
jge
jecxz
add
cmp
pusha
in
inc
lret
lods
xchg
movsl
insb
nop
sti
push
sbb
mov
jecxz
add
jae
or
lret
les
insb
aam
popf
xchg
gs
subl
and
jbe
mov
xor
test
test
or
test
xchg
nop
mov
jo
add
cmc
sarl
inc
jle
inc
hlt
shll
inc
mov
movsl
xchg
pop
sbb
dec
sbbb
adc
ret
and
jae
xor
mov
xor
pop
rcl
fimull
mov
sub
shrb
adc
in
daa
mov
hlt
dec
dec
pusha
add
mov
xchg
outsb
jae
push
scas
rolb
or
cli
sub
sbb
hlt
xor
call
mov
dec
pop
sbb
xchg
adc
repz
mov
pop
xchg
xlat
jne
mov
or
add
sbb
pop
sti
in
xchg
add
int
enter
jbe
mov
and
jae
push
pop
sbb
mov
fldcw
xlat
cs
sahf
cmpl
std
test
mov
mov
pop
mov
lahf
popf
fs
clc
test
gs
cs
xchg
mov
sbb
mov
and
jle
jnp
inc
int
cmp
jge
adc
sbb
push
pop
arpl
lods
mov
mov
bound
data16
jge
inc
push
test
ja
sub
push
mov
mov
xchg
sub
or
fwait
xor
imul
add
arpl
js
mov
fcom
push
pop
sub
mov
xchg
xchg
test
insb
fs
sub
icebp
push
jge
rclb
fwait
mov
jge
repnz
dec
aas
call
lret
loopne
adc
rcrb
push
iret
mov
les
lcall
scas
cmpb
mov
gs
xchg
cwtl
pop
stc
aas
in
test
daa
xchg
test
jp
icebp
mov
push
xor
inc
lret
and
mov
test
das
xchg
or
shrl
xchg
sub
sub
mov
test
jl
lret
mov
cmpnleps
jno
je
jmp
mov
out
inc
add
cvtps2pd
mov
cmp
scas
subl
jb
inc
cmp
mov
jns
cmp
xchg
movsl
fcmovnb
es
arpl
mov
notl
bnd
cs
pop
jbe
adc
adc
mov
insb
rcrb
packsswb
mov
adc
xor
mov
cltd
cmpsl
mov
xlat
push
fmul
and
aad
cmp
xchg
lret
or
dec
cmpsb
shr
dec
inc
ds
or
pop
xchg
ret
rolb
dec
push
jmp
cmp
sbb
or
xlat
pop
mov
cmp
and
int3
mov
inc
dec
dec
gs
adc
dec
rorb
fldl
mov
cmpsl
js
repz
add
jecxz
je
mov
test
js
inc
outsl
dec
in
out
inc
icebp
int3
jl
mov
pusha
jecxz
mov
add
aas
fstl
mov
ret
into
mov
scas
scas
or
out
lock
mov
cmp
fdivr
dec
mov
jns
outsl
out
xchg
adcb
clc
xchg
test
cmp
fists
mov
std
mov
insb
sub
push
mov
xlat
cmc
xor
mov
push
fwait
sub
sti
or
scas
test
cli
pop
adc
xlat
in
dec
hlt
jle
mov
into
and
aaa
dec
push
sbb
loope
push
leave
rep
inc
stc
mov
push
fisubl
mov
mov
pop
sub
mov
bound
in
inc
mov
cmpsb
push
sarl
add
fmuls
mov
jle
jno
enter
xor
fcompl
pop
and
jg
xchg
or
lea
sub
rol
jecxz
and
ficompl
stos
es
lock
mov
js
rcll
leave
mov
adcl
push
dec
mov
sbb
shlb
xchg
test
lods
leave
inc
idivl
mov
xchg
mov
aad
ret
xchg
xor
dec
lods
rcl
mov
ds
in
sbb
in
jbe
loopne
xchg
cltd
push
sti
ljmp
movsl
out
les
mov
inc
sbb
sbbb
js
or
sbb
inc
pop
jo
dec
fwait
mov
ss
cmp
jb
cmp
icebp
xchg
rcl
mov
addr16
xlat
out
lods
mov
in
mov
stos
fwait
jns
sub
pusha
jno
enter
inc
cmc
mov
sbb
rcrb
jge
pop
push
ret
repnz
cmpsb
pop
aaa
sub
lret
add
rcrb
mov
or
dec
inc
shl
outsl
pop
test
cltd
mov
cltd
jb
xchg
fcmovu
xchg
jnp
leave
not
nop
enter
mov
mov
inc
xlat
or
pop
adc
imulb
aas
xlat
aad
jo
mov
out
mov
xlat
or
mov
out
mov
rolb
sti
outsb
rcrl
pop
pop
mov
ficompl
gs
sarb
addl
iret
and
ds
ja
sbb
addr16
movsb
aad
outsl
out
sub
inc
dec
mov
inc
ja
add
inc
push
jmp
jg
aam
in
js
movsb
sbb
bound
out
sub
lret
sbbb
inc
mov
pusha
mov
fistl
mov
arpl
adcl
cli
bound
mov
dec
loope
int
dec
in
orl
dec
jmp
jecxz
ljmp
pop
pop
adc
dec
sbb
cltd
shrb
xor
inc
outsb
clc
xchg
xor
mov
cltd
nop
adc
mov
mov
dec
jne
inc
xchg
sub
les
inc
mov
filds
sarb
cltd
test
xor
das
push
hlt
mov
sbb
and
mov
mov
xchg
mov
lret
insb
pop
fsubrl
pop
jg
mov
arpl
stc
push
jno
cmp
inc
orb
cs
leave
adc
pop
out
popf
fsts
lcall
or
js
sub
mov
outsl
test
inc
loope
mov
mov
insb
sub
int3
mov
push
outsl
sbb
bound
imul
testb
adc
aad
push
aaa
test
ret
or
mov
shll
mov
sbb
jg
inc
inc
jecxz
lea
or
mov
divl
jae
iret
push
int
stos
in
les
pop
or
inc
or
aas
test
fldt
mov
jb
mov
addr16
jno
sahf
xchg
lds
or
loopne
adc
cli
mov
jne
and
std
mov
and
add
nop
lcall
sbb
repnz
fs
jb
push
repz
mov
leave
stos
fnsave
in
adc
pop
test
inc
insl
adc
mov
mov
sub
ffreep
insb
in
dec
aaa
fxch
and
popl
mov
jae
js
das
rcrb
or
pop
mov
adc
push
std
push
and
mov
xor
sbb
push
test
cmp
fstpt
mov
dec
aam
dec
movsb
xchg
jo
mov
fs
sarl
jns
jp
test
sub
cmpb
mov
jle
add
inc
jb
mov
cs
gs
mov
imul
sub
mov
jo
sahf
and
fldt
inc
lret
loope
sbb
iret
test
pop
mov
or
or
nop
fdivrs
mov
mov
mov
das
add
xor
mov
push
mov
or
dec
add
push
push
pop
mov
fadds
sahf
xchg
xchg
into
cmp
clc
dec
jg
cmp
out
mov
pop
inc
pop
inc
mov
out
and
call
out
inc
ljmp
push
push
adc
add
popf
push
mov
test
inc
testb
popa
add
scas
push
movsl
std
and
cmp
cmc
sarl
cmp
adcb
ret
sahf
std
add
repz
aam
das
cmc
sbb
pop
xor
xchg
sbb
pushf
cmpb
ret
mov
out
dec
add
call
sahf
aas
sub
sub
xor
cmc
push
pop
mov
lods
aam
sti
lock
cmp
testl
push
pop
push
inc
adc
out
pop
rcll
xchg
les
jb
sti
push
cmp
jp
and
das
insb
ljmp
mov
xchg
xchg
inc
bound
xchg
cmp
sti
or
mov
sbb
inc
sbb
mov
js
pop
jb
mov
fildll
or
sbb
mov
dec
lods
dec
popa
jg
xchg
imul
jbe
pop
cmpl
imul
pop
aam
repz
addl
xor
mov
call
lcall
cwtl
mov
fldl
fildl
js
movsb
es
enter
addr16
ret
pop
push
out
sub
jbe
dec
xor
je
sub
cwtl
cmp
cmpps
jge
sbbl
xchg
ja
rorb
andl
insl
xchg
mov
push
sbb
ret
shl
dec
cmpsb
mov
aas
aam
call
jbe
mov
hlt
mov
aas
popf
push
bound
out
push
xor
pop
insl
and
adcb
mov
jo
sub
dec
cld
mov
dec
pop
insb
sub
mov
or
pop
inc
sarb
xor
xor
iret
ljmp
mov
scas
shr
jle
cmpsb
sbb
addb
dec
jmp
mov
xor
cwtl
pop
push
mov
inc
out
xchg
cmp
inc
mov
mov
std
aad
jnp
sub
or
mov
jnp
cs
call
repz
pop
outsl
inc
hlt
testb
js
mov
clc
cmp
inc
movl
xchg
fbstp
ljmp
mov
iret
addr16
ljmp
popa
mov
xchg
jb
inc
enter
push
sub
fs
inc
mov
mov
push
sahf
daa
push
jbe
pop
cmc
ds
aas
icebp
pop
das
cs
jmp
and
pop
push
repnz
hlt
movsl
push
mov
rcr
adc
or
icebp
sub
mov
xchg
movsb
xchg
mov
push
das
sarb
mov
mov
movsb
xor
mov
and
pop
dec
inc
es
jne
imul
js
sub
test
xlat
push
adc
pop
jns
xchg
incb
sbb
test
jmp
hlt
sbb
cmp
dec
sbb
sub
mov
sbb
nop
loop
dec
icebp
push
push
mov
xchg
inc
xchg
mov
mov
incl
mull
mov
mov
inc
sub
xor
lods
push
ret
and
ja
nop
add
stos
dec
pop
xchg
dec
jecxz
xchg
adcb
push
dec
faddl
fadds
sbb
mov
dec
outsb
lods
jge
inc
cwtl
jae
leave
int3
ja
mov
push
or
mov
pop
ja
popf
leave
icebp
pop
xor
jns,pt
imul
pop
mov
mov
pop
mov
pop
xor
fdivp
and
imul
mov
dec
xor
mov
aam
add
mov
push
lret
xor
adc
mov
and
push
sub
pushf
int3
fisubs
fisubs
cmpsl
push
into
outsl
jbe
subl
andl
push
add
inc
in
add
pop
cmp
xchg
push
das
dec
sub
pop
pop
inc
jl
in
sbb
scas
out
ret
push
adc
gs
lods
dec
mov
or
inc
inc
mov
mov
jnp
xor
cmpl
jmp
rorl
aam
mov
outsl
divb
mov
mov
adc
in
daa
je
nop
xor
cltd
cmp
jp
call
ficoms
sbbb
mov
sbbb
lcall
cmpsl
pop
stc
cmp
add
mov
ss
mov
xchg
mov
stos
sub
cmp
mov
dec
add
pop
jp
ret
ljmp
and
cmp
dec
fwait
ss
push
stc
imul
jmp
inc
dec
jns
insl
xchg
mov
out
jo
cld
pusha
push
xor
negb
outsb
in
mov
mov
movb
dec
xor
and
andb
cmpsb
sarl
pop
or
mov
cmp
pop
je
cmpsl
and
inc
lods
outsb
jle
and
mov
push
cmpsb
mov
sub
cmp
fistpl
xchg
sub
xchg
addr16
cmp
ret
ljmp
sbb
fwait
jle
xor
sbb
add
pop
jg
dec
sbb
cmp
push
test
shlb
adc
pop
fistpll
xor
insl
and
bound
lods
popf
push
call
xchg
arpl
or
and
adc
mov
xchg
fldenv
sub
or
rolb
add
shl
cmp
sub
adc
lcall
xor
or
mov
adc
add
pop
push
lea
jmp
stos
enter
jmp
dec
repz
test
mov
int
adc
jmp
daa
sbb
data16
mov
mov
out
pushw
adc
inc
mov
scas
inc
sbb
stc
leave
pop
push
xchg
test
sahf
ss
add
xor
xchg
sub
ret
fsubr
sub
xor
adc
xchg
orl
lret
lods
mov
mov
mov
dec
movsl
jecxz
push
loopne
js
sub
pop
sbb
mov
sub
dec
jl
sbb
stos
int3
mov
cwtl
outsb
add
cmp
xchg
or
xchg
pop
xlat
stos
imul
mov
in
popa
mov
mov
stc
sub
xchg
daa
dec
pusha
sub
add
lock
cmp
adcb
inc
xchg
mov
cmc
outsb
int3
pop
adc
mov
ficompl
es
lahf
ljmp
stos
dec
xlat
pop
pop
cmpl
jg
mov
leave
push
or
repnz
jnp
pushf
mov
inc
leave
clc
xor
call
pop
xchg
ret
jecxz
add
test
jg
test
in
call
inc
aas
mov
popa
sub
iretw
mov
shll
pop
es
daa
mull
xor
mov
loop
lods
imul
out
lds
ret
nop
ds
sbb
lret
mov
rolb
xchg
inc
clc
or
ljmp
subb
jae
arpl
in
push
jmp
mov
mov
mov
mov
and
pop
xchg
fists
fldenv
inc
cmc
push
mov
cmp
popl
call
push
mov
ja
fdivp
lret
sti
orl
movl
dec
mov
adc
push
lea
mov
hlt
mov
scas
inc
daa
cmp
jge
xor
mov
shll
pop
dec
addr16
out
fstl
adc
in
or
and
mov
pop
fnstcw
xor
sub
pop
add
sbb
add
mov
int3
mov
repz
sbb
adc
arpl
ljmp
fstl
xor
dec
mov
adc
push
mov
jbe
mov
dec
outsl
ljmp
dec
ja
or
mov
into
jl
repnz
adc
clc
nop
nop
push
xorb
jae
dec
mov
lret
and
and
jne
xor
jge
sbb
mov
or
iret
mov
cltd
shlb
gs
mov
sub
loope
mov
lret
cltd
inc
int
inc
and
xchg
cmp
ja
jbe
aaa
sbb
pop
and
mov
imul
aad
out
mov
mulb
pusha
cld
out
jmp
and
and
xchg
outsl
xchg
dec
jg
icebp
push
xor
inc
sbb
lahf
insb
cmp
mul
jg
dec
sbb
fstps
sbb
jge
inc
add
cmp
mov
incl
into
fbld
in
sbb
pop
ficompl
pusha
adc
push
andb
pop
mov
rcll
pop
pushf
loope
bound
ficompl
cs
push
lcall
loope
orl
icebp
es
xor
sbb
jbe
dec
loopne
add
mov
dec
in
repnz
jge
jg
sub
shlb
test
subl
hlt
popf
scas
xlat
xor
mov
pushf
push
xlat
add
pop
repz
sub
fisttps
das
shlb
fwait
cld
test
mov
outsl
push
lcall
mov
es
lret
xchg
jl
ljmp
fcomip
lock
add
or
imul
dec
inc
out
push
mov
mov
xchg
cmpsb
mov
sbb
add
push
inc
jmp
push
filds
push
sbb
dec
incl
jecxz
test
push
fs
pop
sub
push
pop
mov
adc
sar
sbb
ret
pop
adc
and
or
mov
lods
pop
negb
test
mov
dec
inc
popa
iret
mov
cmc
mov
inc
push
add
nop
mov
xor
lods
xchg
es
addr16
movsb
mov
test
push
lret
imul
push
jno
push
jae
and
sti
lods
lcall
mov
orl
out
cld
movsb
push
mov
enter
mov
pop
cltd
cwtl
pushf
int3
push
stc
xor
mov
test
stc
insb
nop
pop
mov
jns
insb
mov
jb
sbb
add
imul
xchg
sahf
jge
out
cmc
jecxz
xchg
and
xor
aad
in
add
xchg
pop
xchg
jno
push
std
mov
outsl
or
lds
fistps
lds
je
lahf
xor
cmp
mov
mov
mov
into
inc
fldt
or
lahf
sub
ret
dec
sbb
insl
arpl
add
mov
mov
mov
loope
fwait
jns
movsl
adc
xchg
dec
test
adc
inc
or
or
lcall
adc
xchg
inc
sahf
mov
clc
mov
popf
out
in
orl
and
inc
cwtl
mov
pop
or
ret
jp
dec
jmp
mov
mov
pop
and
xchg
or
leave
dec
xchg
aam
cmp
out
in
aas
aad
sub
mov
mov
rorb
ds
and
stos
int
cmp
sbb
gs
adc
rcrl
pop
rol
fwait
cld
popa
xchg
mov
pop
fistl
imul
ss
pushf
push
adc
xchg
and
lahf
arpl
xchg
lret
in
es
popf
mov
lret
mov
subl
loope
test
jmp
mov
std
xor
scas
popa
jmp
cmp
xlat
dec
negb
jp
mov
adc
fistps
mov
mov
cs
inc
imul
es
lock
mov
dec
movsb
or
test
imull
push
xchg
jnp
mov
or
cmp
rclb
stc
mov
mov
adc
shrb
fists
shlb
mov
and
fnstcw
pop
mov
and
mov
jp
jg
inc
dec
sub
sub
cld
and
mov
je
lods
lcall
ja
pop
fs
mov
daa
push
push
push
mov
shrb
sbb
lcall
add
enter
push
call
nop
in
loop
loope
jp
arpl
shll
arpl
jge
mov
insl
jecxz
push
scas
add
jno
dec
mov
fisubrl
fimuls
dec
insl
mov
xchg
dec
adc
or
cmp
sbb
xchg
xchg
dec
jle
jp
lahf
jb
lods
pop
or
pop
adc
inc
mov
adc
xor
or
add
cld
imul
sub
pop
add
sbb
pop
ss
mov
mov
movsl
fstpt
mov
xchg
mov
out
cmp
mov
dec
cmp
mov
sbb
mov
push
or
repnz
fmul
negb
cmp
pusha
and
cmc
in
fists
sbb
lret
adc
pop
in
adc
insb
mov
sti
sub
sbb
cmpsb
dec
jecxz
jbe
dec
push
imulb
scas
popa
in
sti
jo
adc
imul
int3
adc
aaa
xchg
in
and
push
lret
sub
fmul
pop
outsb
pop
inc
js
aad
fmull
add
iret
jno
xchg
mov
push
add
imul
and
ss
cwtl
pop
xchg
inc
ret
lods
dec
jnp
jecxz
test
mov
adc
add
mov
xchg
adc
in
add
into
push
out
repz
aam
or
testl
stc
cs
outsb
xor
scas
lret
inc
daa
rclb
dec
data16
push
jge
jns
sbb
mov
or
jno
fchs
mov
xor
jnp
xchg
inc
xlat
pop
rcr
fiaddl
sti
jle
sub
aam
iret
push
rolb
xchg
icebp
inc
lcall
fcoms
out
adc
cmpsl
jmp
int
lret
int
into
imul
cmpsl
push
aas
sti
jge
rcll
mov
sub
xor
cwtl
mov
addr16
fs
in
fs
outsl
jne
jmp
mov
mov
nop
int
sbbl
cmp
add
jmp
or
xlat
arpl
ljmp
lods
mov
sti
nop
out
stos
icebp
and
daa
add
fcomip
gs
lds
rclb
dec
cmc
push
pushf
inc
scas
cmpsl
or
les
or
sti
cmpsb
or
dec
fsts
mov
or
and
mov
xchg
pop
mov
xchg
mov
sub
xor
rcrb
sbb
xchg
add
pushf
sbb
nop
cmpsb
pop
pop
add
lret
add
mov
rolb
or
cmp
cmp
jge
mov
adc
test
push
leave
aad
push
and
dec
mov
mov
negl
mov
test
in
sub
cwtd
mov
cs
data16
fsubs
cld
sub
pop
sbb
mov
xlat
sub
into
scas
mov
mov
repz
dec
cmp
adc
loop
inc
dec
cmp
push
cld
jae
not
pop
cmpsb
sub
jo
test
dec
int3
stos
pop
mov
jle
repz
mov
inc
add
aad
mov
shlb
mov
xorl
dec
lret
iret
sub
cmpsb
stos
cwtl
lahf
and
xchg
fiaddl
jae
rcll
fxch
lea
fidivrl
inc
cmp
xor
aad
xchg
hlt
sub
inc
dec
incl
adc
pop
clc
cmc
push
je
sub
mov
mov
pop
int3
xchg
sbb
jns
rorl
enter
xchg
inc
sub
cmp
or
call
lock
cmp
sbb
leave
push
xor
fnstenv
mov
mov
leave
shlb
add
jg
hlt
mov
xor
inc
sub
push
add
add
in
push
jecxz
andl
aaa
cmp
aas
jne
add
jae
pop
ja
mov
cmp
jl
out
adc
sbb
daa
pop
or
add
cld
adc
inc
xchg
rolb
cmp
dec
fwait
mov
xchg
ficoms
adc
outsl
sar
lods
add
push
mov
push
call
dec
jns
pop
mov
sub
jno
jecxz
add
je
and
mov
sbb
push
lock
lods
jp
push
xor
sti
popf
adc
hlt
repz
loopne
jmp
mov
test
testl
addl
sti
push
pusha
test
or
or
mov
testl
pop
adcl
xchg
adc
stos
aaa
mov
vpsllq
mov
dec
dec
push
rcrl
cli
push
jmp
xor
dec
or
adcb
pushf
inc
dec
dec
pop
mov
sbb
out
adc
add
pop
cmp
popa
pop
addr16
pop
xchg
loopne
stos
data16
mov
xchg
fisubrl
imul
jae
xlat
mov
les
jno
in
cwtl
shrb
sbb
test
and
orb
sub
movsb
sub
jp
jmp
pop
mov
dec
xlat
shrl
jge
mov
sub
test
sub
test
aam
or
or
jb
xor
int
mov
xor
pop
sub
fstpl
movsb
or
repz
gs
repnz
jg
outsl
out
ja
pop
jno
push
ja
adc
push
xchg
pushf
in
and
mov
dec
adc
or
addr16
arpl
in
push
dec
cmp
jecxz
test
das
outsl
pusha
js
bound
gs
mov
add
push
fs
jge
js
pop
jae
sarb
add
xlat
sti
in
jg
push
or
shll
orb
mov
repz
test
repz
and
jmp
ret
or
mov
leave
outsl
out
pop
dec
mov
push
icebp
pop
rclb
lret
cmpsl
fldl
imul
xchg
push
out
fildl
in
je
lret
sbb
jle
mov
jb
or
int3
leave
mov
insl
sbb
push
popf
jno
xchg
lds
mov
jg
bound
ret
lock
fcmovb
in
jbe
mov
ret
hlt
pop
dec
xlat
mov
sub
push
loope
mov
mov
iret
sti
mov
and
mov
cmc
mov
pop
scas
jge
mov
and
jg
hlt
scas
stos
jl
mov
mov
rolb
jae
push
fnstenv
add
adc
inc
add
sbb
sarb
insl
shl
cltd
dec
add
push
pop
ja
or
xor
and
sub
mov
sub
popa
test
sbb
jbe
stos
fstpt
fs
adc
pop
arpl
jp
jbe
sarl
cltd
xchg
ljmp
or
insl
jns
enter
dec
in
xchg
and
inc
in
out
xchg
out
sahf
jbe
ljmp
icebp
cli
sahf
fcmovnb
testl
testb
into
xor
xor
int
jle
cmp
insl
lods
push
jne
nop
xor
jmp
fdivr
stc
inc
fwait
lods
into
jae
cmpsl
divps
mov
mov
je
adc
pop
mov
pusha
repnz
jbe
inc
push
ds
scas
dec
mov
inc
push
adc
or
es
test
ja
mov
mov
push
pop
jl
test
mov
in
popa
xchg
and
xchg
stc
push
mov
adc
clc
lock
popa
imul
add
insb
pop
inc
jmp
repnz
xor
fisubrl
mov
lods
jp
testl
fisttps
mov
or
cmpsl
sbb
jno
hlt
aad
jge
jl
popa
jne
test
mov
sub
mov
xchg
mov
js
sbb
xchg
rcrl
ja
pop
jle
xchg
push
mov
xchg
xor
ret
cmpsl
icebp
mov
jp
xor
sbb
lret
push
lahf
out
lods
in
pop
aad
cmp
mov
cmp
and
xchg
adc
mov
lret
jp
stos
inc
inc
ja
repnz
loopne
mov
int
out
out
addb
out
aad
outsl
and
xor
add
or
insb
xlat
jnp
mov
or
mov
aas
adc
dec
adc
mov
pop
idivb
sbb
shlb
addr16
sar
mov
loopne
movsl
out
cltd
cmp
and
outsb
jbe
mov
or
sbb
ffreep
ffree
push
push
repnz
dec
mul
repz
mov
movsb
in
dec
jle
arpl
dec
sti
gs
jno
add
iret
stos
pop
jmp
inc
push
movl
xor
in
xchg
mov
push
sti
push
push
nop
push
test
test
lds
scas
mov
pop
xor
test
sbb
stc
xchg
push
mov
sbb
outsl
enter
mov
mov
bound
cs
jg
cmpsl
mov
ljmp
ret
ljmp
push
lcall
xor
call
sbb
mov
sbb
das
stos
and
scas
xchg
out
push
enter
lea
das
xlat
cs
mov
sbb
pop
push
sbb
into
jp
aaa
xor
jne
mov
cmpsl
cltd
pop
fisubrl
xchg
sbb
sub
lods
or
inc
leave
push
neg
sbb
popf
daa
outsb
jmp
pop
lods
xchg
mov
xor
enter
lcall
dec
sub
ret
stos
mov
enter
das
adc
sub
mov
lock
mov
and
add
xchg
scas
dec
mov
sub
mov
jecxz
xchg
dec
jb
sub
fimull
lret
jb
xor
les
sub
cltd
sub
jbe
aad
cltd
lods
jae
inc
add
jns
xchg
xchg
inc
xor
jp
xor
ret
ja
mov
cmc
mov
sbb
mov
ds
idiv
push
jae
mov
and
out
jno
out
cwtl
mov
scas
les
hlt
fs
fisttps
out
mov
in
cmp
mov
pushf
clc
das
pop
mov
inc
mov
xor
fsubrs
adc
sbb
inc
mov
cwtl
leave
and
clc
fmul
xchg
dec
pop
cmc
sbb
mov
mov
mov
mov
test
outsl
mov
test
in
push
sti
or
cmp
out
inc
into
jmp
mov
xchg
adc
add
outsb
sub
mov
cwtl
sbb
into
xchg
push
xchg
test
cwtl
int
enter
or
in
cmpsb
mov
dec
mov
xchg
fnstcw
out
lahf
std
pop
mov
dec
xchg
adc
movl
js
jmp
mov
dec
rol
inc
outsb
cmpsl
pusha
aaa
rcr
popf
gs
sbb
mov
push
pop
pop
mov
pop
adc
cmpsl
cmp
rol
adc
insb
inc
xchg
fstpl
shrl
xchg
push
jae
pusha
pop
inc
es
push
and
lcall
into
roll
sbb
aam
sub
sti
decl
mov
outsl
sbb
push
inc
add
or
mov
popa
in
or
cmpsb
shll
xchg
cmp
mov
xlat
js
pop
or
loop
mov
or
and
or
lret
or
sbb
fistpl
iret
fwait
stos
cmc
lds
xchg
int3
pop
jo
lea
lret
jns
cmp
push
stos
xor
inc
xor
xor
arpl
jp
pop
rcrb
scas
push
addb
adc
lods
mov
cmpsb
fistpl
add
mov
mov
cwtl
inc
xor
insb
fiaddl
pop
inc
xor
and
mov
popf
sub
add
add
ds
popa
jg
daa
jns
mov
xor
sbb
outsb
popa
es
shrb
decl
insl
pop
cmc
sub
shll
add
mov
xchg
mov
negl
sbb
xchg
std
adc
xor
pop
insl
outsl
push
mov
pop
cmp
cmp
insl
push
sub
adc
jecxz
or
aas
repnz
mov
test
sbb
fsubr
push
jb
and
mov
push
je
push
rcll
lea
mov
jmp
daa
aas
fsubrl
sub
mov
scas
stos
subps
sbb
or
jp
test
xor
jmp
ret
pop
fcmovnb
jne
pop
push
and
bswap
mov
sbb
jle
ret
fsts
gs
sub
jmp
popa
testl
sbb
rcrb
mov
xor
pop
into
movsb
push
and
mov
xor
jmp
sub
je
mov
jecxz
xchg
sbb
xor
add
pop
mov
pop
idiv
push
cmp
test
adc
pusha
leave
cmp
dec
add
hlt
mov
adc
cmp
mov
push
inc
mov
or
mov
aam
mov
sbb
test
xchg
int3
sbb
jmp
jnp
adcb
outsl
mov
loope
push
mov
popa
dec
jge
shlb
idivb
sbb
mov
and
lods
sub
xor
lock
jnp
repz
lret
mov
shr
test
ds
loopne
push
stc
cmpsb
cmp
inc
cmp
pusha
out
ret
push
cmp
xor
divb
clc
mov
jge
add
xchg
push
lahf
clc
mov
fwait
aam
fsubr
pop
int3
iret
insl
or
je
xor
dec
mov
aad
movsl
or
push
jb
cmp
aad
sti
in
pop
movsb
dec
cwtl
mov
cwtl
pop
xchg
lea
movsl
inc
test
cmp
xchg
lods
xchg
mov
xor
jge
or
fstpt
rorb
into
negl
sub
mov
sbb
sbb
clc
es
out
and
jns
lods
add
cmp
mov
xor
mov
dec
jbe
xor
jno
ds
out
icebp
push
xchg
inc
mov
jo
int
das
xchg
loopne
cmp
shll
or
dec
shll
push
inc
loope
cmp
sbb
test
fsubl
stos
imull
mov
inc
push
xor
int3
mov
fwait
sub
movsl
sub
and
loopne
push
bound
cmc
je
loop
jle
dec
sub
pushf
leave
arpl
mov
mov
out
push
add
int3
int3
addl
push
std
imul
shll
sbb
xchg
inc
dec
mov
ds
incb
jp
pop
and
loop
xor
pop
cmp
or
inc
push
cwtl
leave
cmp
push
cmp
xor
pushf
xchg
aad
pop
fnstenv
mov
xchg
mov
xchg
cmc
mov
out
shl
inc
scas
push
test
push
mov
lcall
dec
push
pop
popf
shlb
and
fwait
dec
mov
sbb
cmpsb
test
loope
out
mov
enter
sbb
mov
inc
and
mov
femms
xchg
insb
mov
jle
cmp
out
cmpsb
jmp
addl
in
adc
popa
in
enter
mov
xor
stc
add
repz
pop
jbe
sti
call
or
les
mov
adc
push
fistps
call
or
cmpsb
roll
sub
jno
and
fbld
xlat
rorl
jno
push
ret
lcall
cmp
push
and
jae
pop
push
mov
mov
addr16
test
xchg
mov
dec
inc
xor
push
ret
mov
or
cmp
sahf
mov
aaa
lea
jmp
loop
adc
jb
mull
mov
fs
fnsave
pop
jp
dec
movsl
dec
jo
jmp
xor
pop
out
lods
sub
ficoml
mov
jae
ds
das
loop
push
int3
fcmove
ret
aaa
and
bnd
cmpsb
cmpsl
mov
out
roll
test
gs
das
mov
aas
pop
add
testl
jecxz
outsl
and
lahf
mov
aam
scas
aad
dec
lea
dec
or
cmp
test
add
loop
lods
rol
lret
jmp
sub
dec
push
sbb
ficoms
iret
adc
sahf
dec
push
push
mov
je
ljmp
lahf
dec
rol
sbb
subl
imul
dec
or
jnp
mov
or
mov
ret
and
push
jl
lret
iret
idiv
arpl
nop
cmp
mov
out
test
inc
test
mov
sbb
les
push
push
sbb
jae
mov
arpl
dec
ret
sub
or
xchg
and
pop
mov
cmp
mov
xchg
xor
lods
push
pop
lahf
and
lds
and
push
mov
xorl
test
test
mov
ds
out
call
xchg
mov
arpl
inc
sbb
movsb
imul
daa
gs
mov
cld
aam
or
cmp
push
cmpb
mov
cmp
inc
jno
mov
pop
jae
popf
ret
lods
pop
aam
cwtl
aad
mov
sbb
cli
test
inc
cmp
insl
inc
xchg
orl
mov
mov
ljmp
sahf
inc
xchg
cmpl
nop
adc
add
mov
xchg
add
mov
fisttpl
sub
in
xchg
push
cmp
add
cmp
lock
cs
pusha
pop
pop
ret
add
scas
les
mov
and
cltd
pop
mov
imul
paddsw
and
addb
fbstp
aaa
in
je
adc
in
enter
sbb
data16
movsl
cmp
test
aad
cmp
push
shlb
inc
sbb
mov
xor
repnz
pop
push
push
call
sbb
test
jnp
mov
mov
lcall
lea
imull
add
jno
add
xchg
movl
inc
mov
incl
adc
insl
push
xchg
fildll
stos
iret
push
mov
ret
ja
pop
adc
in
push
push
dec
addr16
add
cmp
popa
jno
xchg
xchg
xorl
iret
pushf
scas
dec
pop
mov
dec
cld
mov
mov
inc
sbb
xor
push
cmpb
lea
test
or
ljmp
cmp
sti
clc
inc
or
push
flds
nop
out
mov
jp
int
lret
xchg
cmp
jbe
lcall
mov
mov
mov
int3
jg
aam
cli
pushf
mov
xor
mov
cwtl
cmp
jo
test
jnp
and
out
sub
rcrl
mov
nop
inc
mov
popa
cmp
fmuls
sub
add
das
push
mov
push
addb
fistpll
xor
add
mov
in
xor
cmp
jg
aaa
imul
sub
or
push
inc
rolb
pop
call
or
loop
lods
push
lods
fdivs
imul
loop
mov
stos
cld
push
push
xor
cmpb
inc
push
pusha
adc
leave
imul
fisubs
xchg
cmp
cltd
fldenv
adc
cmpsb
test
push
cmc
mov
call
subb
and
sub
pusha
jge
mov
mov
stos
dec
jp
xchg
jp
jge
inc
stos
out
fwait
mov
and
out
aas
pop
add
in
sbb
cmp
fnstsw
dec
incb
mov
or
pop
cltd
rcrl
xlat
jecxz
clc
ja
aad
divl
movsl
ret
idivb
lcall
and
das
jg
xor
data16
mov
mov
int3
ror
sub
inc
fcom
and
dec
movsb
inc
jecxz
inc
mov
or
cmc
jmp
push
movsb
mov
loope
loopne
cmpsl
fwait
push
repnz
xchg
xor
call
insl
loop
fnstenv
aam
inc
jne
ret
ret
jae
sub
or
mov
pop
imul
out
fbstp
pusha
in
movsb
pop
fmuls
fsubrs
jb
addr16
adc
and
jb
popf
in
pushf
addr16
mull
mov
xor
cld
jmp
aas
sbb
cmp
test
xor
and
sbb
add
fs
sbb
sbb
pop
cli
mov
lcall
pop
mov
mov
mov
xchg
pop
xor
shr
and
cmp
push
iret
sub
jnp
jmp
cmc
jnp
fwait
add
iret
adc
aaa
gs
shlb
inc
lods
adc
test
in
in
gs
push
notl
add
push
jno
adc
xor
ja
int3
jbe
mov
and
jmp
lcall
or
mov
cmp
dec
int3
sub
inc
push
dec
cmpsb
ror
shlb
xchg
lahf
push
cmp
mov
mov
movsb
ja
pop
xor
dec
subl
dec
or
out
add
cwtl
adc
aad
ret
and
cmp
mov
jmp
mov
pop
push
addl
inc
xchg
repnz
inc
andb
subb
sbb
insb
popa
mov
add
sahf
inc
bound
fcmovnb
cmp
loopne
lds
mull
lods
inc
test
mov
pushf
test
push
dec
fcmovnb
pusha
lahf
out
ficomps
push
sub
es
inc
push
dec
sub
or
lahf
sbb
push
aaa
inc
or
jo
mov
fsub
mov
xor
js
insb
inc
jg
jno
lock
jb
jae
mov
repz
sahf
push
xchg
hlt
push
gs
out
lods
jp
sbb
cmp
xchg
sub
mov
pop
mov
out
stos
outsb
jb
sub
jge
add
push
xchg
xor
jae
shll
and
ss
push
mov
sbb
out
testl
push
stc
cmp
adc
fs
xchg
pusha
inc
aam
lea
jno
cmp
fsubp
dec
add
mov
iret
mov
inc
neg
test
test
stc
xor
cld
sbb
dec
cltd
shll
or
pushf
dec
icebp
mov
xchg
dec
pop
ret
cmpsb
pushf
pushf
fidivs
in
jg
stos
cli
jae
and
xor
xor
cmp
xchg
jle
out
ret
sbb
xlat
or
jecxz
clc
icebp
or
idivl
inc
jecxz
dec
push
fistps
pop
roll
jp
and
or
xor
aas
pop
aaa
mov
jmp
daa
pushf
jno
inc
mov
pop
sub
in
pop
lret
jno
cmpsb
cs
out
cld
loope
bound
jmp
scas
jno
dec
dec
and
mov
sar
nop
or
lock
lds
cmp
inc
xchg
test
stos
outsb
and
ret
bound
scas
mov
xchg
stos
xor
lods
xchg
jmp
push
adc
pop
rorb
and
lock
xlat
sbb
pop
pop
dec
jno
call
mov
and
mov
movsl
pop
enter
iret
into
sbb
push
sti
dec
sub
or
lahf
mov
mov
adc
clc
mov
nop
pop
icebp
ja
hlt
xchg
adc
sbb
imul
mov
cli
add
and
mov
push
jb
arpl
mov
jnp
cmp
dec
cli
mov
jnp
int3
inc
sbb
mov
fsubl
pop
aas
inc
es
mov
popa
dec
out
and
neg
jb
into
xchg
xchg
mov
mov
lods
xor
xor
outsl
loope
xor
dec
mov
addr16
mov
int3
movsb
pop
movsb
push
add
add
icebp
push
int3
xchg
xchg
int
push
add
sbb
cmp
rolb
les
and
sub
xchg
pop
cmp
into
xchg
mulb
lea
jge
lahf
dec
loopne
sub
jmp
ret
xor
pop
push
out
shll
cmp
adc
xchg
cmpsl
jle
xchg
aaa
nop
xchg
push
gs
jecxz
loopne
and
mov
cmp
dec
std
adc
pop
ja
or
lret
mov
stos
jo
nop
mov
loop
in
js
sarl
push
mov
movsb
add
je
fwait
and
xorb
rol
add
add
ja
mov
mov
ja
das
dec
ss
push
ffreep
push
je
ja
push
cmp
mov
test
sbb
add
sbb
out
aad
push
jb
jno
ds
fs
mov
aas
mov
add
dec
pop
fs
or
add
aas
rorl
jne
pop
mov
orl
add
xlat
or
push
mov
test
cmp
jae
pop
fld
iret
data16
push
out
cmc
sub
je
aad
mov
mov
js
inc
mov
pop
ljmp
inc
jecxz
jns
mov
push
shll
inc
stos
and
pop
sbb
sub
aaa
mov
mov
lcall
mov
mov
divl
mov
outsl
lock
data16
imul
sbb
pop
aam
mov
int
pop
xchg
outsb
xor
pop
call
loope
xchg
repz
xchg
ds
out
or
leave
out
and
xor
insl
pop
ljmp
fisttpl
inc
inc
mov
jg
push
repnz
adc
in
stc
cmc
je
jns
and
inc
scas
jmp
hlt
sub
jg
pop
fwait
lret
das
mov
mov
mov
aam
iret
sbb
rcll
scas
enter
sub
aas
pop
pusha
sahf
iret
aas
push
pop
inc
sbb
mov
mov
inc
cmp
or
mov
xor
into
and
mov
pop
mov
cmp
or
leave
inc
mov
rclb
adc
ficompl
lahf
and
jl
or
inc
rol
mov
mov
imul
stos
repz
xor
cmpsl
or
mov
xor
shll
jp
addr16
push
xor
sbb
inc
xor
mov
repnz
xchg
in
push
mov
and
pop
pop
rcrb
nop
popf
outsl
lods
daa
add
inc
stos
sarb
mov
sub
leave
fadds
or
gs
xor
xchg
sahf
or
dec
cmp
sub
pop
cld
jae
cmp
xchg
insb
add
pop
mov
orl
inc
lods
ficoml
or
test
mov
mov
or
pop
sbbl
pop
push
ss
scas
jo
inc
mov
pop
push
js
popf
pop
sbb
pushf
inc
rcrl
cltd
cmpsb
sbb
or
imul
jp
dec
jae
adc
jo
test
mov
xchg
jbe
push
outsb
repz
orb
pop
or
pop
test
sbb
mov
das
and
jge
mov
in
stc
mov
dec
sub
mov
xchg
dec
test
mov
and
loop
jmp
inc
mov
jle
enter
in
cmp
stos
push
jmp
ficoms
and
js
inc
test
scas
mov
inc
xor
and
push
jmp
cmp
dec
stos
in
scas
cmc
sarl
xchg
divl
repnz
cmp
fs
mov
sbb
in
xchg
and
cmp
mov
sahf
cmp
test
ja
out
xchg
inc
rcrb
xchg
and
sub
sbb
mov
fs
popa
cmp
push
sub
mov
pop
xlat
leave
push
sti
sub
test
cltd
inc
jg
jecxz
in
fisubrs
adc
int
cmpsl
push
and
out
jns
inc
cwtl
cld
or
fidivl
icebp
push
jmp
sti
sahf
or
insl
ret
mov
in
push
mov
xlat
push
icebp
mov
shlb
lret
mov
lock
xchg
sub
lock
das
lods
jge
push
imul
push
dec
sub
movsl
sahf
out
jg
nop
xor
dec
dec
xor
dec
lret
es
sub
push
xor
cmpsl
lahf
stos
aam
mov
aas
or
in
sub
adc
test
push
vprotd
nop
iret
les
add
in
xor
mov
mov
mov
mov
std
scas
inc
add
lcall
iret
je
int
xorb
cmpsb
dec
add
mov
mull
mov
mov
ss
jae
jae
pusha
test
jmp
cmc
adc
int3
mov
push
test
push
jno
lcall
in
jo
aam
sbb
out
cmc
repnz
fsubs
scas
sub
ficompl
pop
mov
jmp
xchg
sarl
js
mov
loope
data16
push
sub
arpl
ja
test
inc
cwtl
pop
jbe
cmpsl
cmpsl
pop
sti
sahf
mov
inc
cmpsb
dec
jecxz
bound
enter
movsl
sub
int
dec
scas
adc
adc
lods
sbb
or
dec
imul
push
gs
mov
bound
iret
cli
sbb
outsl
gs
das
in
imul
adc
mov
sbb
jo
or
hlt
testl
jp
cld
inc
out
test
jg
pop
jbe
cmp
es
movsb
adc
inc
sti
push
push
into
popa
xchg
lahf
and
cmc
repnz
mov
xchg
adc
in
fsubs
dec
cwtl
bound
sti
insl
adc
pop
out
fwait
xor
adcb
rorb
fs
ljmp
arpl
repz
cmpsb
pop
add
xchg
mov
daa
push
ret
call
pop
call
movsb
nop
sub
xor
loope
push
mov
dec
inc
add
loope
push
sub
insl
jecxz
jae
sub
scas
aad
xchg
sarl
out
mov
scas
mov
add
lcall
out
sbb
pop
out
ret
ja
mov
outsl
mov
je
dec
xlat
ja
xchg
mov
fwait
repz
cwtl
sbb
xor
fistps
cmp
shlb
push
cmc
mov
repnz
dec
cmpsl
stc
test
pop
mov
mov
int
fstl
fsubrl
push
int
adc
mov
cmp
imul
and
mov
lods
push
push
inc
mov
outsb
cmpsb
mov
pop
mov
popf
aaa
sarb
xor
leave
loop
aam
mov
lret
inc
es
jo
or
jecxz
jge
xchg
sub
inc
mov
push
fsubrs
lcall
push
push
inc
bound
pop
and
dec
arpl
and
fwait
xchg
fs
mov
add
or
cmpsl
roll
lods
and
cmp
inc
sub
loope
cmp
pop
out
inc
lods
xchg
push
push
or
cmpsl
or
cmpsl
push
mov
shl
test
stos
sbb
scas
daa
jb
or
sub
stc
rep
loopne
xchg
add
mov
mov
nop
fs
popf
or
gs
xor
push
xchg
dec
adc
xchg
in
stos
fdivp
jg
inc
repz
bound
and
dec
or
test
push
jae
cmp
pop
sbb
scas
movsb
push
xor
mov
xlat
lret
das
mov
sub
xlat
mov
jp
mov
or
xor
loope
out
orl
xchg
daa
jmp
push
cmp
in
je
mov
cmp
push
insl
mov
xchg
cmpsb
jmp
dec
xchg
hlt
pop
sub
sub
loop
test
push
das
cmp
mov
cmp
sti
ljmp
pushf
aad
stc
jge
int
jne
mov
push
adc
xlat
add
jge
pop
call
in
cmpsb
cmpb
or
sub
into
xchg
mov
fildl
pushf
outsl
fildl
insb
xorl
sub
outsl
mov
dec
mov
sbb
scas
and
les
fidivrs
enter
leave
xchg
pop
cwtl
in
cmp
sub
ret
cli
decb
out
xor
cmpsl
out
arpl
jo
leave
lea
inc
out
mov
into
inc
enter
add
mov
jmp
enter
repnz
pop
sub
cmp
scas
push
std
cltd
push
sbb
cmpsb
incb
mov
cmpb
pushf
pop
repz
mov
mov
cltd
imul
hlt
adc
je
repz
sahf
pop
adc
dec
gs
sbb
inc
inc
pop
movsb
mov
es
add
arpl
les
gs
sub
or
xor
data16
mov
cmp
fadds
aam
sahf
shlb
xorb
shrb
movsl
cmp
xor
sbb
pop
insb
jne
rorb
pusha
outsl
ss
lahf
rorl
sub
add
xchg
or
add
jp
iret
cmp
das
add
mov
inc
repz
and
cmp
lods
add
cmp
inc
arpl
movsb
mov
repnz
shl
pushl
loop
nop
icebp
or
push
stos
add
aaa
and
pop
mov
inc
ss
enter
outsb
insl
repz
and
xor
inc
call
jge
jns
pop
cld
or
decb
mov
js
pushfw
push
push
pop
and
lds
adc
or
mov
sub
inc
jmp
cli
dec
sar
cmp
xor
pop
add
iret
or
dec
mov
mov
xchg
idivl
xor
push
fdivrs
mov
xor
in
adc
adc
jg
inc
cmp
sahf
sbb
ljmp
cmpl
ljmp
dec
xchg
xor
adc
gs
or
inc
loope
sbb
mov
sbb
or
dec
inc
dec
in
mov
rcl
cmc
or
dec
aaa
in
sti
scas
xor
addr16
imul
sti
cltd
pop
int
aaa
xor
xor
or
lods
cltd
movsb
leave
mov
lods
mov
sahf
aaa
jmp
jp
iret
ljmp
pop
sub
inc
jne
jbe
push
jl
repz
push
in
cmp
das
sub
leave
push
inc
xor
int
push
sub
sti
in
add
cmp
mov
repz
imul
xlat
mov
repz
jmp
lret
xchg
loop
outsb
out
or
cmc
cltd
push
repz
push
ljmp
mov
cmpsl
sub
xchg
sub
into
sbb
in
arpl
and
arpl
mov
pop
mov
and
inc
sub
mov
in
push
sbb
xchg
iret
xor
xchg
cli
pop
mov
dec
pop
inc
and
int
cmp
pop
adc
cmp
adc
mov
jecxz
jmp
xchg
sbb
push
sbb
daa
aaa
dec
mov
pop
popf
mov
sbb
mov
cmp
mov
add
ss
enter
sbbl
into
clc
rorb
sbb
enter
xchg
shrl
mov
lds
daa
inc
outsl
insb
jnp
add
jnp
out
in
aaa
popa
inc
lret
jle
data16
push
cmp
into
xlat
gs
dec
mov
add
jbe
sub
cmp
insb
jp
add
inc
inc
aas
repz
sarl
mov
outsb
adc
out
shr
pop
leave
inc
aam
mov
popf
test
mov
sbb
inc
xor
dec
das
xchg
mov
mov
pop
mov
mov
cld
das
ror
add
push
aas
jne
mov
in
pop
sbb
cmpsb
mov
loopne
out
cli
cs
movsl
mov
test
negl
cmpsl
jno
imul
add
std
add
clc
pushf
lods
xorb
cltd
fwait
lds
mov
pushw
pop
hlt
in
sub
les
dec
inc
fwait
pop
fldl
ret
in
add
fcoms
xor
fidivrl
rcrb
dec
imul
mov
cli
sti
int3
adc
popf
bnd
das
jl
cmp
lret
psubb
nop
fs
data16
in
cli
mov
and
mov
add
inc
outsb
stc
jl
adc
xor
hlt
pop
outsb
xor
and
pusha
xchg
lods
sahf
jg
xchg
jmp
cs
roll
mov
pop
push
scas
aaa
nop
call
jl
mov
pop
xchg
aam
sbb
lea
gs
iret
outsl
fidivl
xor
out
push
sbb
mov
xor
pop
xchg
leave
pop
stos
nop
rolb
in
mov
push
xchg
xchg
lret
pop
fbstp
sbb
xchg
push
xchg
popf
iret
aad
rcl
add
dec
addr16
mov
enter
mov
jg
loop
jne
xchg
and
daa
cmpsl
xor
push
add
jecxz
mov
jge
lcall
repnz
xchg
dec
bound
sbb
nop
jo
or
nop
cmp
dec
pop
cltd
push
frstor
cmpsb
dec
icebp
mov
pop
stos
mov
sub
cld
xchg
movsl
rclb
insb
jbe
push
cltd
aas
mov
je
add
test
push
sbb
xor
in
push
and
jbe
cld
xor
jno
in
jg
sbb
addr16
jns
mov
or
lods
dec
jge
sbb
push
hlt
lret
mov
sub
std
push
adc
and
xchg
mov
stos
xchg
and
sbb
fwait
jb
sbb
jg
in
mov
ret
scas
test
xchg
ja
inc
hlt
shlb
push
faddl
cmp
mov
cmp
es
sbb
in
adc
dec
and
bound
int
xorl
xchg
push
pop
arpl
leave
inc
cli
sbb
int3
hlt
jbe
sarl
mov
fidivl
aas
pop
fisubs
frstor
scas
xchg
jecxz
sub
and
mov
xchg
test
mov
add
adc
les
aaa
cmp
mov
lret
or
jb
insb
sti
ret
xchg
mov
cmpsb
pop
cmp
inc
scas
and
enter
lods
popf
cwtl
push
loop
in
ret
adc
loopne
pop
out
xor
jne
sub
xor
jae
pop
mov
add
pop
jle
mov
fisttpll
dec
lahf
das
sub
xor
xor
sahf
and
xchg
jne
mov
cmpsl
call
repz
xchg
popa
xchg
ret
adc
sbb
jmp
inc
mov
pop
xor
or
cltd
mov
or
stc
or
push
inc
lahf
xlat
rol
jnp
rcrb
outsb
lods
sub
add
cwtl
lret
cmp
push
or
loope
cmp
in
movb
mov
fwait
movsl
fsubl
adc
push
xchg
test
adc
mov
test
mov
sbbb
xor
in
imul
sbb
cmpsb
sbb
daa
pop
mov
jmp
lret
insl
mov
mov
pop
int
xchg
cmpb
nop
jo
pop
cld
xchg
pop
lods
sahf
jne,pt
outsb
iret
or
jae
ds
lahf
lock
push
xchg
sahf
ret
lret
xchg
ljmp
sbb
cmp
test
icebp
fdivr
sarb
cmp
mov
push
lea
bound
mov
lret
test
cltd
clc
rep
cld
in
inc
mov
sbb
jae
cmp
sbb
or
xchg
bound
push
subb
mov
dec
ja
add
lds
xorb
stos
rcll
xor
fsts
test
cmp
xor
xchg
in
test
push
add
mov
mov
out
xor
pop
or
cmpsl
jae
dec
ret
inc
in
and
adc
or
movsl
cmp
mov
test
loop
add
xchg
or
push
jnp
pop
test
imul
sub
pop
mov
add
mov
pop
aaa
push
adc
cmp
mov
aas
into
inc
push
dec
imul
mov
test
fisubrl
popa
cmp
mov
rcl
mov
mov
aaa
dec
xor
inc
or
sub
or
push
aam
adc
inc
sub
adc
das
sbb
les
jle
cld
loope
push
xchg
add
daa
cmp
lods
outsl
pop
mov
mov
sbb
push
es
lods
sub
jns
insl
jp
loopne
or
mov
xchg
test
cmpsb
mov
adc
sub
rorb
shll
pop
pop
sub
push
and
out
xchg
aad
mov
xchg
jmp
lods
xchg
mov
loopne
jno
cmc
xor
pop
fwait
xor
pop
scas
fwait
mov
add
addr16
mov
and
enter
and
ret
mov
push
cmp
in
mov
and
xorl
hlt
dec
aaa
mull
das
mov
ret
stos
sub
mov
imul
scas
clc
lods
lds
pusha
lock
clc
fisttpll
and
add
test
pop
sahf
cld
lcall
mov
push
xchg
aam
mov
xor
mov
xor
mov
pop
rolb
push
inc
pop
push
jb
mov
dec
gs
sbb
lea
or
mov
cmp
inc
dec
xchg
add
jb
negl
into
lea
shr
xchg
and
or
movsw
sbb
inc
je
ret
mov
fwait
jge
push
sbb
push
inc
in
shl
icebp
add
pop
sbbl
cmp
subb
outsl
add
sub
movsb
jecxz,pn
xor
pop
lea
adc
sub
jecxz
repnz
jo
add
aam
movsl
sahf
sub
daa
push
push
lcall
std
shll
cmp
imul
jbe
push
sbb
mov
pop
cmp
jo
cmp
xorl
nop
sahf
test
sub
outsl
add
xchg
mov
arpl
mov
mov
out
gs
mov
in
and
cltd
cmp
or
dec
inc
cmp
fwait
out
or
gs
sti
lahf
cli
mov
mov
je
vpshufd
into
push
repnz
and
xor
or
orb
in
cld
add
mov
imul
and
push
sub
stc
inc
outsl
ljmp
xchg
mov
and
mov
popf
aam
call
int
or
mov
push
cmp
pusha
cmp
lea
in
pop
pop
dec
dec
xor
rolb
fcmovne
push
fcoml
push
pop
insb
mov
es
inc
pop
adc
stos
bound
fwait
outsl
data16
pop
mov
arpl
mov
jno
lods
dec
sub
and
lcall
push
cmp
mov
int3
jno
inc
mulb
xchg
test
mov
ficompl
in
mov
dec
mov
jle
xor
loopne
mov
mov
mov
mov
push
cld
cs
cwtl
ja
dec
sbb
push
in
adc
fs
and
jo
fisttps
mov
mov
adc
pusha
mov
mov
ss
add
lret
lret
jl
ret
or
out
aad
in
jg
cld
aam
pop
jbe
notb
inc
mov
das
gs
mov
push
mov
arpl
aam
cmp
ficoms
in
js
or
rolb
add
pop
jns
enter
cltd
dec
fidivs
inc
stos
fbld
mov
xlat
int3
push
testb
repz
cmpsl
ja
out
push
pop
sti
and
hlt
call
pop
sbbb
mov
shrl
imul
dec
dec
mull
cmp
adc
aaa
mov
cmpsl
xchg
jecxz
push
enter
popf
or
cmc
pop
popa
repz
add
jbe
addb
inc
jge
test
xor
or
shlb
xor
popa
cmpsl
pop
ljmp
cmpl
xlat
xchg
negb
mov
in
sbb
in
sub
or
fimull
dec
push
dec
lods
pop
jp
ret
aam
inc
inc
and
xchg
xchg
loop
dec
out
sub
stos
push
push
jns
push
icebp
pop
movsl
xchg
mov
mov
cmp
push
test
arpl
hlt
lcall
inc
sub
jl
fisttps
jb
leave
aad
jnp
add
add
pushf
sub
push
lahf
jl
fwait
out
outsl
mov
addr16
xchg
rclb
xchg
je
add
mov
lret
imul
pop
or
ljmp
out
iret
cs
mov
lret
cmp
data16
std
xorl
movsl
jg
popa
test
test
mov
mov
pusha
in
mov
xchg
and
pop
outsl
in
dec
pushf
fidivl
mov
lret
mov
mov
xor
adc
stc
int3
gs
ds
out
or
add
mov
nop
xor
push
rcll
mov
arpl
lret
cli
xor
jns
loop
fidivrs
mov
xor
repz
add
popa
adc
flds
jp
popf
loope
jecxz
cmc
or
lods
pop
aad
cvttps2pi
fsts
adc
inc
and
adc
cmp
repnz
sbb
push
stos
fstps
cli
lret
mov
iret
es
jmp
mov
dec
pop
outsb
ret
pop
and
ja
dec
jge
push
out
lock
sbbb
push
lret
xchg
aam
cmp
sub
xchg
repz
adcl
cmp
insl
or
jo
int3
mov
pop
lods
xchg
jno
aaa
jl
shll
notl
mov
ficoml
outsl
outsb
cli
sbb
cmpsl
cmc
jmp
movsb
pop
mov
mov
mov
pushf
dec
inc
imul
mov
jecxz
sub
xor
test
lea
push
xor
divb
mov
ret
xor
sbb
adc
mov
or
lret
sbb
dec
pop
rorb
test
je
shrl
xor
imul
mov
sub
or
sbbb
mov
xor
mov
sub
add
push
test
cld
or
adcl
loope
sahf
sub
fisubrs
ret
xchg
or
imul
fisubs
imul
cmp
notb
mov
push
push
jae
int
gs
mov
push
rolb
mov
mov
inc
imul
repnz
dec
gs
lcall
pop
mov
int3
pop
adc
lret
getsec
loop
jecxz
aaa
ret
pop
xor
testl
sub
mov
cmpsl
daa
lret
sub
dec
xchg
adc
ss
outsb
rclb
xor
jne
pop
nop
loopne
in
xchg
pop
clc
nop
cld
and
sub
dec
pop
sbb
lds
or
and
pusha
mov
xor
std
jae
xor
scas
fsubl
lcall
loopne
jp
sbb
mov
hlt
repz
orl
je
sub
xchg
fs
pop
popa
mov
repnz
fists
jnp
mov
popf
adc
cmp
pusha
fidivrl
or
lock
js
aas
jns
inc
mov
mov
js
into
jbe
add
jns
rclb
push
mov
int3
cli
js
sahf
inc
ljmp
xchg
inc
xchg
adc
test
fbld
ret
inc
inc
rolb
ficoml
and
not
gs
into
js
cld
aad
dec
subb
je
ficoms
pop
fs
sti
sub
xchg
mov
ret
ret
or
dec
mov
xor
cwtl
mov
cmp
sbb
aas
ror
lea
push
sarb
cld
dec
pushf
add
mov
dec
fisubrs
and
insb
pop
pop
ja
fistpll
cltd
sahf
dec
in
mov
sub
mov
addr16
test
mov
sub
push
loope
mov
mov
movsb
cmp
sarl
push
pushf
inc
fnstsw
sub
daa
mov
cwtl
xchg
fiaddl
lcall
clc
std
insb
and
sbb
mov
inc
jo
cld
movsb
movsl
mov
push
imul
test
and
insl
shr
cmp
inc
sbb
adc
jb
jecxz
adc
jno
sahf
adc
add
das
push
lret
jo
sbb
into
shlb
cli
cmpsb
jg
adc
inc
std
sub
cmp
cld
pop
mov
lea
lods
lods
xchg
push
sti
xor
enter
mov
jecxz
aad
pop
mov
xor
lods
jecxz
fs
jae
pop
jns
mov
addr16
sbb
in
outsb
das
lea
dec
ds
and
movb
aaa
sbb
stc
push
and
fistpl
imul
ret
cmp
and
decb
adc
jp
mov
mov
pop
outsl
add
add
insb
adc
scas
nop
jae
ss
jle
gs
int
in
inc
icebp
popl
inc
in
xlat
mov
mov
mov
mov
or
mov
andl
pop
loopne
sahf
aaa
pop
ds
stos
cwtl
int3
icebp
pop
cmp
ret
dec
xor
dec
push
xor
out
stc
into
xchg
lea
pop
push
inc
imul
mov
repnz
popa
fwait
popa
cmpsb
sub
or
outsb
or
sbb
sbb
mov
sub
jnp
xor
pop
jl
sub
add
cmpsb
jbe
push
xorb
and
into
push
mov
not
push
fdivs
fsubrs
sub
inc
mov
xchg
pop
popf
add
inc
mov
fcmove
mov
mov
mov
pushf
popa
push
mov
enter
push
dec
jne
sub
push
dec
jns
fmull
arpl
add
fs
xchg
pop
add
rolb
xor
cmp
lods
jl
das
pushf
ret
adc
jg
mov
int
icebp
xchg
sbb
shrl
daa
fs
arpl
adc
pop
push
out
mov
cmp
into
xor
mov
adc
in
xchg
xchg
jp
inc
or
mov
push
jmp
stos
dec
ret
and
dec
nop
mov
insl
lods
out
xchg
sbb
enter
xor
imul
or
stc
mov
lds
int3
lahf
stos
scas
mov
push
out
aas
gs
sarb
stc
adc
daa
lods
pop
shrb
or
cmp
hlt
fcomps
test
mov
cmp
mov
shlb
push
test
test
rdmsr
inc
xchg
jb
addr16
push
sbb
cli
xchg
imul
mov
hlt
xor
push
lret
leave
sarb
add
xchg
in
mov
or
fidivrl
xchg
loop
shrb
or
fisttpll
loope
filds
cmp
sub
ja
pop
add
jge
ss
fdivr
inc
mov
pop
loope
mov
add
das
and
mov
out
fnstenv
mov
cmp
stos
or
lahf
sbb
cli
jp
mov
outsl
lock
cmpsl
and
mov
add
pop
das
sbb
arpl
dec
fistl
fs
outsb
mov
sub
fildl
jb
cmpsl
dec
jmp
cwtl
es
into
popf
xor
ret
jnp
int
adc
xor
into
gs
mov
out
xor
mov
decl
js
into
or
cli
test
xor
fimull
movsl
xor
pop
lcall
leave
popf
mov
and
inc
and
mov
push
mov
pushw
shlb
in
arpl
aad
pop
test
add
or
push
mov
mov
int
fsubrp
lcall
mov
cmc
mov
xchg
mov
push
sub
rorb
lahf
test
and
cs
sub
pop
adc
nop
in
repnz
mov
test
daa
add
xchg
pop
dec
jp
cmpsl
and
lret
sub
mov
xor
dec
sbb
inc
mov
sub
push
fisttpll
test
gs
mov
cmc
sub
jl
dec
cs
mov
sub
cmpsb
fldl
adc
pop
ljmp
cltd
into
pop
aad
pop
jbe
imul
jbe
iret
inc
inc
push
cmpsb
out
imul
lds
xor
cmc
loopne
jle
push
jae
les
jb
mov
fsubl
les
imul
cltd
add
and
fisubrl
sub
loop
fsub
mull
test
jle
mov
mov
in
fcmovnbe
xchg
and
jae
jmp
pop
shrl
mov
adc
xor
pop
mov
shlb
pushf
repnz
mov
pop
shrb
fistpll
leave
mov
mov
les
sbb
out
add
fisttps
xchg
aaa
mov
lds
sub
xchg
mov
jnp
sahf
xchg
mov
jg
sbbl
xor
pop
out
shr
sar
leave
lods
add
fadd
add
lcall
dec
and
lret
movsb
mov
xchg
or
push
mov
pushf
mov
adc
fnstsw
and
fstl
dec
ss
or
dec
mov
adc
test
cmp
daa
movsl
jo
dec
xchg
lret
sbb
rcrb
push
sahf
dec
outsb
pop
ljmp
mov
xor
and
ret
in
xchg
push
jecxz
mov
lods
pop
rorl
test
push
outsl
aas
outsb
mov
sbb
std
and
lds
leave
push
mov
and
dec
ret
jbe
iret
cmp
loope
lcall
dec
push
inc
lret
popa
cmp
repnz
or
push
mov
dec
movsl
adc
cmpsl
mov
dec
leave
mov
lret
aas
out
push
insb
lret
inc
xor
andl
and
ss
int
fwait
mov
lret
xchg
add
jo
ss
movsb
jo
sbbb
fildl
mov
ret
inc
lahf
mov
inc
sbb
iret
fidivrs
inc
repz
sub
sub
outsb
iret
add
in
iret
sub
daa
leave
xlat
xchg
fidivrl
sbb
jmp
lcall
dec
mov
xchg
leave
xchg
pop
scas
lods
jle
fwait
ss
lcall
and
fucomp
ss
mov
repnz
aam
push
pop
xchg
andl
pop
adc
pop
dec
lods
outsl
mov
mov
dec
fsubl
inc
out
out
jno
mov
fistpl
loope
mov
or
leave
pop
jp
negl
mov
inc
inc
fmull
outsb
pop
das
test
mov
and
imul
fdivrl
adc
inc
push
sub
cmp
jb
cmpsb
push
hlt
inc
lcall
jmp
mov
addr16
ret
cmc
or
and
imul
cld
jne
push
dec
sti
aas
adc
sahf
cmp
rcr
inc
shrl
mov
ja
jo
into
rcll
or
clc
adc
in
mov
out
mov
lods
xor
jmp
lahf
bnd
push
inc
cmp
adc
mov
dec
inc
ss
enter
jmp
pop
loop
inc
inc
cmp
dec
jecxz
mov
add
push
mov
lret
dec
lock
test
subl
ja
test
inc
mov
popf
add
inc
mov
movsb
pop
call
sahf
in
mov
stc
add
pusha
xor
adc
pop
gs
into
cwtl
jns
jp
inc
arpl
lods
sbb
jmp
push
push
jb
sub
popa
cmc
inc
jns
ret
mov
or
loope
xchg
cmp
push
inc
sti
push
jnp
fcoms
in
jecxz
hlt
mov
cli
jnp
and
aad
rcr
out
stos
das
repnz
inc
push
xchg
lods
fsts
fcmovnbe
in
push
cmp
xor
xchg
cwtl
push
es
mov
xor
lea
andl
jae
ja
clc
stc
jbe
movsl
stos
shll
pop
cli
mov
popf
shll
cmp
ret
adc
cmc
xor
in
add
inc
ss
push
cmp
pop
das
mov
add
shll
xor
sbb
gs
out
push
fdivp
sub
jl
enter
sbb
lret
push
sub
sar
xchg
outsl
loop
cmpsl
or
add
mov
loop
add
test
and
fwait
mov
and
jp
xorb
pop
cld
loopne
repnz
inc
xchg
scas
or
test
mov
adc
pop
es
inc
xchg
jge
xchg
fstl
jb
cmp
jne
loope
cmc
adc
bound
mov
sub
cli
imul
scas
jmp
out
mov
outsb
or
jnp
es
mov
sarl
into
out
dec
push
or
and
add
xchg
jne
add
in
in
test
idivb
scas
pushl
adc
jnp
outsb
dec
adc
lea
mov
aam
cs
arpl
dec
jae,pn
inc
jg
adc
jno
or
lcall
int
and
sti
ret
adc
cmp
fimuls
dec
ljmp
xchg
int3
xchg
int
jl
je
out
pushf
mov
jl
cbtw
pushf
dec
call
or
dec
pop
aam
out
nop
scas
adc
jae
or
or
nop
push
xchg
rol
repnz
pusha
jnp
repz
cltd
xlat
fwait
lods
cmpsb
insb
les
jecxz
sahf
or
popa
mov
cmp
js
mov
inc
cmp
sbb
mov
dec
xchg
loope
movsb
mov
xchg
test
add
inc
cmc
jg
sub
xor
xlat
jbe
arpl
insl
lods
lds
bound
inc
xor
ja
xlat
cmp
imul
mov
sub
movsl
cmp
shrb
inc
dec
in
out
mov
and
insb
into
dec
loop
mov
iret
fisttpl
cwtl
sbb
in
sarb
sub
pop
or
adc
scas
shll
test
fstpl
inc
and
adc
jae
or
cmc
inc
jb
outsb
add
adc
lahf
sub
ret
fwait
mov
or
out
or
or
hlt
sbb
and
stos
fsubp
int3
fwait
adc
push
and
hlt
notb
jle
and
icebp
cli
xchg
mov
or
fcmovbe
jecxz
imul
stc
pop
mov
ret
adc
xchg
or
ljmp
and
xchg
mov
pop
xchg
mov
dec
ljmp
inc
or
cs
add
jg
ljmp
xchg
sbb
xor
int
dec
pmuludq
mul
test
shl
push
sbb
into
in
xchg
mov
sbb
xor
and
lock
dec
pop
mov
aam
jno
mov
cmp
popa
movsb
mov
xchg
rol
mov
pop
test
outsl
push
cmp
jae
add
pop
popf
push
fs
mov
sub
and
sub
xor
push
cs
in
loope
stc
pop
test
mov
pop
inc
sbb
jp
stc
aam
mov
mov
jecxz
jg
push
inc
shrl
scas
push
imull
push
cli
loop
idiv
adc
jne
bswap
iret
add
mov
jnp
shrl
in
arpl
inc
jno
mov
pop
pop
repnz
mov
mov
lret
jp
cmp
aas
pop
je
and
imul
test
dec
pop
int
out
lret
ja
dec
push
inc
iret
test
pop
notl
ds
and
fistl
in
sbb
mov
in
fs
adc
insl
sbb
cli
inc
mov
inc
pop
add
std
add
out
mov
lds
jb
mov
stos
push
dec
fiadds
js
ds
inc
add
ljmp
stc
test
push
dec
cwtl
inc
int
fiadds
jmp
xlat
mov
sub
jns
pop
xor
cs
mov
xchg
popa
lods
std
fildl
push
dec
cmp
jl
sahf
inc
adcb
xor
dec
testb
dec
imul
out
aam
xchg
mov
mov
xchg
idiv
xchg
adc
iret
sub
mov
out
fwait
out
outsl
arpl
mov
popf
ljmp
mov
dec
pop
lcall
sbb
jo
out
rol
or
push
dec
adc
dec
pop
push
fidivrl
shl
and
idivl
je
cmp
push
std
mov
mov
test
mov
sbb
hlt
arpl
daa
mov
test
dec
push
mov
pop
mov
dec
pop
push
rcr
andl
mov
sarl
outsl
iret
fucom
pop
mov
push
lds
arpl
jno
fsubl
or
push
jno
jmp
shll
pop
mov
xor
mov
xor
dec
icebp
pushw
xchg
les
push
xchg
movsb
mov
mov
inc
adc
repz
sbb
jecxz
mov
cmp
pop
cmp
lret
in
inc
repnz
xchg
rcrb
inc
sahf
pusha
push
lahf
mov
frstor
dec
or
and
movsl
out
jg
mov
mov
and
stos
inc
iret
daa
mov
adc
mov
je
movsl
and
rcrb
push
dec
push
stos
sbb
dec
dec
outsl
push
aam
push
mov
xor
test
and
aaa
xor
adc
xchg
test
leave
jb
sti
add
pop
pop
jno
outsb
mov
jecxz
aad
jmp
or
and
xor
out
rcrb
test
pushf
adc
jae
inc
or
or
pop
push
cmp
std
lock
call
sahf
sbb
arpl
icebp
mov
push
adc
xor
inc
cmpb
pop
bound
and
pop
jp
in
adc
icebp
data16
outsb
sub
lods
fstpt
xchg
mov
in
int
pop
ljmp
cmc
ds
ds
movsb
mov
mov
xchg
sbb
faddl
arpl
imul
pop
cmp
xor
push
xor
xor
fbstp
adc
sbb
ss
dec
lret
rcr
hlt
xor
ficompl
jmp
test
data16
imul
loop
jns
sub
popa
add
pcmpeqd
fcoml
mov
xchg
xor
sti
and
lock
xchg
hlt
and
push
rolb
inc
pop
test
data16
pop
mov
mov
pop
ret
int3
ss
bnd
cmp
fcomi
and
cli
jp
xor
or
js
xor
sbb
push
jmp
mov
or
aas
pop
sbb
push
repz
ja
push
add
pop
arpl
push
pop
mov
and
sbb
test
lret
lret
inc
xor
sti
and
int
sti
xchg
inc
aaa
ss
jmp
pop
les
pop
mov
adc
mov
xor
xchg
subb
mov
out
movsb
mov
adc
mov
shll
jne
xor
xchg
cmc
cmp
xor
xor
ljmp
jecxz
int3
je
lea
cmp
push
bswap
je
dec
arpl
adc
ds
out
aaa
lods
fldcw
jne
gs
pop
inc
in
clc
sbb
mov
ret
mov
xchg
pop
pop
push
add
lret
jecxz
dec
cmp
cld
pop
mov
fidivl
push
xchg
or
jo
out
jl
rorb
repnz
ds
clc
fbld
lret
movsl
inc
mov
jne
loopne
rorl
loope
jno
iret
dec
aam
push
inc
xor
test
aas
aam
cltd
adc
insl
push
dec
lods
mov
sub
cmpsb
xor
sbb
aas
addb
cmpsb
pop
jns
out
stos
push
pop
js
test
test
sbb
test
es
xchg
ret
sbb
lahf
pop
ret
jb
das
inc
cmc
pop
inc
fs
jp
addl
or
call
hlt
loopne
hlt
jbe
in
js
addr16
insl
stos
xchg
jg
push
mov
cs
pop
sbb
sahf
jmp
inc
pop
mov
mov
push
je
add
sub
shrb
lahf
xchg
lods
test
inc
push
push
sub
sub
js
cltd
cmp
in
nop
xchg
xchg
mov
lods
fdivs
stos
pop
jmp
xchg
das
sub
loope
jg
int3
push
jmp
dec
mov
mov
jp
xchg
and
pop
pop
cmpsl
pushf
dec
jnp
inc
call
or
repz
push
stos
in
fadds
je
pop
cmp
cltd
mov
cltd
xchg
je
push
inc
call
fcoml
mov
scas
push
mov
sub
inc
jmp
stos
insb
jl
mov
mov
jmp
stc
xor
enter
lea
xor
mov
xchg
mov
dec
insl
pop
xor
xlat
push
mov
ja
int
xchg
rcrl
lds
jle
dec
pushf
and
push
mov
inc
cmp
push
xchg
mov
xchg
hlt
or
shll
mov
adc
fsubs
in
clc
pop
xchg
stos
hlt
fmull
jmp
pop
mov
pop
mov
lret
sub
mov
or
xchg
scas
leave
dec
jns
push
out
push
fwait
lret
fdivrs
xchg
jg
loop
bound
push
stos
add
xor
out
iret
hlt
adc
jecxz
cwtl
or
push
inc
and
aad
adc
nop
adc
fs
push
xor
pop
push
cltd
fcmovbe
addb
adc
mov
jmp
ficoml
pop
jp
ret
lret
ss
mov
xchg
push
add
adc
aad
xchg
mov
inc
hlt
sbb
mov
popf
jae
push
cld
pop
or
loop
sub
js
imul
jge
aad
loop
addr16
inc
cmpsb
fidivrs
out
aas
cmc
mov
into
pop
push
push
loopne
ret
adcb
cs
mov
sbb
cmpsl
pop
dec
negb
push
add
lods
pop
arpl
repnz
inc
sub
movd
mov
pop
jecxz
stc
pop
adc
mov
mov
jno
pop
add
lock
aas
icebp
out
or
mov
mov
cmp
xor
repz
out
cli
ds
xchg
jns
nop
push
movsl
pop
pop
outsb
cmp
mov
sbb
mov
popa
sbb
out
lods
loope
pop
outsl
addr16
orb
cwtl
lods
fnstcw
or
pop
adc
mov
roll
or
call
rclb
aam
pop
mov
popa
and
cmpsb
ret
call
scas
pop
dec
and
mov
pop
and
cmpsb
add
and
adc
inc
mov
daa
div
lret
aad
cltd
cmp
repz
arpl
rcl
fldenv
jp
cwtl
mov
cmpsl
cmpsl
or
mov
out
jge
dec
mov
mov
out
sbb
sbbl
fcompl
mov
inc
ret
xor
into
or
sbb
mov
call
call
jp
addr16
lcall
in
sub
jns
jb
adc
adc
enter
dec
inc
ljmp
rorl
push
jecxz
and
add
in
pop
repnz
ret
loopne
sbb
sbbb
mov
cltd
push
mov
emms
and
aam
rcl
xor
xchg
cs
xchg
xchg
int
mov
jbe
lods
sbb
sub
add
dec
stos
xchg
call
xor
cmc
cmp
jmp
or
nop
fiadds
pop
or
jns
mov
test
cmp
cmp
cmp
movsb
arpl
and
in
cmp
push
xor
ss
xchg
pop
lods
out
lds
cmp
ret
mov
mov
and
stos
jnp
std
iret
clc
and
lods
cmp
jmp
fs
imul
test
arpl
push
lock
popf
rorl
addr16
fnstenv
cmpsl
jecxz
pusha
rolb
sub
call
icebp
sbb
cmp
stc
dec
xchg
loopne
push
push
xchg
or
jb
dec
xor
and
jecxz
pop
mov
jae
cmp
xorb
push
xchg
jmp
pop
sar
pop
or
mov
jnp
push
repnz
ret
hlt
call
out
aam
dec
mov
cmp
pop
mov
ljmp
jmp
xor
sbb
movsb
lock
stos
inc
pop
mov
dec
ret
xlat
stos
xchg
jo
arpl
in
sbb
or
int
lcall
or
test
or
shlb
xor
lock
ret
psraw
cmp
cs
cmc
pop
sub
mov
cmpsl
push
out
jo
adc
das
sub
push
fdivl
arpl
lock
jmp
mov
jno
insl
add
cmpsl
add
add
ja
in
jne
push
stos
mov
jg
lds
int
or
andl
pop
scas
adc
ret
std
movsb
shlb
mov
mov
mov
or
inc
jbe
cmp
fnstsw
jo
nop
cmc
xchg
jmp
ficoml
sub
pushf
fldt
lcall
repnz
jmp
mov
push
test
xlat
pusha
xor
sub
test
adc
cltd
adc
adc
ds
xor
inc
and
test
lds
inc
or
rcl
pop
int
sub
fldt
jns
pop
out
inc
mov
xchg
xchg
pop
scas
mov
mov
mov
pop
inc
int
jp
insl
arpl
cld
pushf
sbb
mov
ret
ret
mov
dec
bound
rcl
cmpsb
je
sbb
push
or
loop
icebp
dec
test
insb
xchg
rcrl
or
push
xchg
sti
daa
dec
dec
lock
xor
pop
inc
add
inc
rcrl
or
add
inc
imul
and
cmp
hlt
test
mov
dec
je
aaa
das
cmp
push
ret
out
jge
outsb
adc
ds
dec
xor
test
jae
mov
sub
mov
scas
cmpb
cltd
pop
faddl
jbe
ja
or
sub
add
out
movsl
loopne
fdivrl
bound
insb
std
js
decb
adc
sbb
mov
xlat
aam
mov
into
inc
push
setae
push
push
outsb
negb
xchg
into
mov
movsl
mov
loopne
rorb
lret
mov
std
xchg
inc
scas
and
and
scas
mov
or
push
push
cmp
sub
push
icebp
sbb
push
hlt
cs
cmpb
filds
cmp
scas
mov
divb
inc
push
push
pop
imul
xchg
xor
divl
and
call
outsb
sbb
rcrb
mov
push
xchg
std
je
cmp
xlat
sbb
add
fistps
jae
and
cmp
rolb
xchg
insl
fwait
cmp
xor
pop
xchg
xlat
cmp
rcrb
fbstp
xor
jge
mov
xor
mov
lock
inc
jne
jb
adc
cmp
insb
and
dec
sub
call
push
inc
mov
inc
mov
jo
pop
pop
inc
fwait
dec
pop
das
mov
nop
adc
sahf
outsb
pop
push
pop
sub
jmp
add
xor
push
and
rcrl
cmovl
test
daa
mov
call
push
xlat
stos
push
xorl
pop
cmp
fdivr
push
jbe
dec
push
ret
mov
push
notl
stos
outsb
add
jge
and
adc
xor
ret
out
push
and
inc
jb
movb
fistps
es
mov
das
push
icebp
or
cmp
push
addr16
movb
jo
mov
aad
icebp
xchg
das
pop
jmp
sbb
cmc
sub
mov
jmp
jns
push
jle
add
leave
adcl
cmpsl
sahf
mov
cmp
adc
or
pop
xchg
aaa
out
in
sub
je
mov
add
add
push
mov
or
push
jg
cmovg
scas
shrl
sub
cmp
sbb
lcall
repz
add
cmp
pop
xor
push
jb
shll
adcb
mov
xor
ds
push
sbb
imul
mov
add
stos
add
inc
mov
icebp
jge
cmpsl
cmpsl
dec
jl
mov
mov
imul
pop
mov
fidivs
imul
inc
pop
sti
mov
in
mov
pop
push
rcl
pop
sbb
scas
jb
add
mov
addr16
dec
arpl
jnp,pn
scas
cmpsl
lret
ret
outsb
cmp
stos
mov
ja
cli
or
shl
cmp
fiadds
jnp
lock
jl
inc
mov
jle
xchg
jge
imul
mov
add
fldl
cmp
add
cld
fadd
jae
in
jns
outsb
dec
mov
mov
cmpsb
addr16
cltd
std
and
scas
insb
hlt
ds
mov
nop
or
loop
pop
cmpl
movsb
pop
sbb
addr16
jns
lock
push
mov
sub
dec
loope
adc
notb
jo
mov
xor
and
dec
sbb
mov
jmp
mov
lret
sub
and
test
sbb
sahf
outsb
sub
popa
dec
aas
xchg
or
arpl
mov
add
cmp
loopne
adc
gs
sub
imul
cmp
sub
add
pop
icebp
cmpsl
imull
cmc
aaa
je
clc
in
out
adc
pop
leave
call
fldl
push
jo
or
dec
out
jnp
adc
lcall
shll
fprem
add
insb
hlt
xor
lods
pop
lock
pop
testb
jg
and
int
dec
xchg
ficoms
lcall
sarl
adc
xchg
sbb
jo
inc
js
push
mov
mov
shl
push
stos
xor
xor
rcrl
cld
mov
adc
pop
lret
mov
js
les
mov
lods
lret
out
mov
add
test
aas
mov
xor
popa
sbb
sbb
stos
cmp
scas
scas
add
std
incb
sub
mov
fmull
inc
xchg
push
add
movsl
mov
popf
jg
outsb
inc
pop
cltd
adc
mov
in
jb
jno
push
sub
mov
inc
data16
push
xchg
sbb
bound
jge
adc
dec
insl
outsb
jge
ficompl
jb
cmp
mov
mov
mov
adc
hlt
call
lods
push
jns
aas
adc
inc
fidivl
rorl
adcl
push
mov
jmp
rcrl
adc
push
xor
push
imul
lds
data16
push
jae
negl
push
arpl
lods
jnp
lahf
or
jge
and
dec
popl
cmp
inc
push
sti
adc
xchg
xchg
in
and
jg
pusha
xchg
loope
fwait
sub
sbb
xchg
stc
rcrb
ss
ret
push
popa
test
std
cmpsb
mov
enter
fstps
movsb
xor
imul
movsl
pop
inc
pop
xor
test
test
in
jge
add
outsb
pop
and
xchg
xorl
inc
pop
stc
lock
lahf
divl
jge
iret
shr
adc
lods
dec
xchg
int3
lock
xchg
ljmp
dec
in
rcll
pop
aad
arpl
xchg
sub
scas
pop
adc
xchg
pop
inc
mov
jnp
dec
lret
pop
mov
outsl
aad
out
dec
cmp
pop
rclb
pop
sub
push
pusha
mov
and
pushf
scas
xchg
aam
icebp
push
fcmovb
pop
xchg
and
int
sbb
sub
pop
push
aas
es
or
scas
and
xor
inc
lret
mov
mov
pop
in
cmpl
fbld
push
out
fldcw
add
xlat
mov
aas
xor
mov
push
rorl
xor
je
jbe
adc
add
stos
jp
or
dec
sbb
push
stos
out
pop
mov
xchg
sub
xchg
dec
or
ljmp
loop
cmpsl
xchg
add
sub
in
dec
loop
imul
enter
pop
lcall
inc
dec
mov
jae
in
adc
das
sbb
insl
cs
jle
fwait
fwait
mov
mov
rclb
inc
test
subb
push
cmp
sbb
testl
and
ljmp
sub
cmp
repnz
pop
lahf
int3
lret
push
dec
mov
cld
push
pop
inc
or
mov
push
xadd
pop
mov
fdivs
shlb
cmp
gs
xchg
jg
sbb
vphaddwd
cmp
xor
cmp
movsb
shl
test
pop
and
ss
and
cmp
sarb
loop
lea
pop
xchg
out
mov
rorl
fisttpll
dec
popf
cmpsl
jmp
jbe
aad
jmp
das
sub
jg
jnp
fidivl
in
sub
fidivs
mov
xchg
dec
add
cmpsb
xor
je,pt
push
leave
push
xchg
pop
mov
scas
or
shll
cmp
and
sub
arpl
andb
leave
inc
mov
dec
je
popa
xorl
sahf
push
inc
jae
xchg
xchg
popa
sub
adc
jl
add
mov
stos
mov
xorl
mov
ret
pushf
clc
int3
jb
rcrb
stc
fnstenvs
cmp
mov
enter
jo
jge
mov
call
out
test
add
inc
xlat
je
es
dec
inc
into
adc
gs
or
leave
mov
pop
fucom
xchg
mov
in
rorl
mov
sti
jo
popa
pusha
adc
mov
cmpsl
insb
aas
mov
test
sti
stos
movsb
ljmp
insb
scas
push
movsb
push
mov
mov
call
in
ret
inc
and
xchg
leave
mov
stos
xor
in
or
jle
call
jo
mov
xchg
sbb
adc
gs
sub
push
imul
pop
insb
popf
or
fisttpll
cld
mov
sbb
insl
xchg
and
push
jge
dec
shll
push
sbb
sub
syscall
popa
and
jg
dec
cmp
aas
and
sbb
mov
pop
es
mov
xlat
fidivrs
or
fs
adc
das
std
insl
and
dec
xor
std
shl
fildl
push
pop
out
adc
cltd
mov
xor
adc
add
faddl
ss
mov
filds
sbb
xor
out
pop
divb
dec
cmpsb
jns
xor
jmp
mov
inc
addr16
les
dec
sbb
roll
bound
add
push
xor
test
dec
enter
lods
adc
xchg
inc
clc
lods
inc
pop
jmp
subb
scas
lea
jb
jo
adc
xchg
or
outsb
int3
idivb
inc
cmpsl
dec
lret
bound
repz
ss
stc
mov
test
mov
jo
popf
add
add
and
push
mov
lea
clc
pop
pop
ss
pop
mov
mov
adc
cmp
lret
and
adc
movsb
stc
xchg
sbb
ds
sarl
jnp
add
mov
adc
xchg
inc
pop
add
mov
cmp
dec
and
cs
mov
loopne
xchg
test
xchg
les
adc
mov
lods
mov
outsl
outsb
xchg
mov
shlb
push
push
jo
xchg
lret
inc
fdivrl
xor
enter
dec
inc
mov
add
cmpsl
imul
lret
movsl
xchg
mov
mov
fldenv
jecxz
fidivs
aad
or
sbb
sti
int
mov
hlt
sbb
jo
adc
popa
inc
mov
dec
lret
xorb
inc
mov
in
pop
sub
sub
jg
or
xchg
mov
addl
sbb
jmp
mov
pop
xor
sub
loope
jle
pop
stos
mov
es
or
punpckldq
aaa
das
push
inc
wbinvd
les
mov
pop
xchg
fsubrl
insb
das
lea
cli
mov
xor
sub
jecxz
pop
dec
cmp
or
sahf
mov
ja
sub
add
mov
daa
mov
cs
pop
inc
loope
adc
scas
push
lock
shrl
in
imul
jge
mov
repz
jp
stos
cmpsl
jp
lea
adc
shlb
cmp
pop
stos
fistps
push
mov
mov
divl
movsb
cmp
ljmp
repnz
mov
imul
sbb
add
adc
push
dec
sub
or
mov
push
out
std
and
insb
cmp
scas
cwtl
mov
push
shll
mov
pop
gs
rorb
sub
mov
cmp
xchg
pushf
fists
jo
mov
or
mov
pop
mov
sarl
lret
mov
loop
or
hlt
jg
xor
xor
pop
add
cmc
push
xchg
xchg
add
sub
bound
fimull
stc
inc
mov
decb
dec
xor
xchg
fildll
mov
stc
mov
loop
adc
scas
fcoml
daa
or
inc
lahf
aaa
adc
cmp
fs
ficoml
jne
repz
sbb
mov
dec
icebp
fiaddl
dec
cli
push
ja
adc
subl
xchg
les
jbe
pushf
or
sub
pop
insb
bound
cmp
mov
je
hlt
pop
push
jnp
imul
call
or
xchg
sub
inc
loope
mov
out
out
inc
jb
inc
sahf
add
incl
rclb
mov
sub
lods
push
aaa
insl
sbb
jge
ss
dec
sbb
jo
clc
mov
fs
jecxz
repnz
bound
inc
add
xchg
add
inc
or
adc
loope
scas
jge
pop
mov
int
imul
rcr
fsubp
mov
and
cmc
sti
ret
dec
jecxz
rcrl
pop
stos
sub
popa
pushf
les
xchg
das
sti
mov
stos
test
cwtl
push
inc
push
sbb
add
in
mov
xor
gs
xlat
mov
stos
enter
xchg
xor
icebp
jge
xor
stc
fidivrs
mov
loopne
adc
dec
pop
aam
mov
or
sub
dec
xchg
in
jecxz
fisubs
sub
sub
sub
or
das
xchg
sub
imul
pop
ss
adc
cwtl
mov
push
je
mov
adc
cmpb
sti
lds
jb
mov
or
outsl
sbb
push
mov
mov
and
popa
mov
adc
sub
leave
push
and
pushl
pusha
cmp
cmp
mov
or
testl
pop
cmp
and
imul
mov
mov
xor
and
cmpsl
repz
xchg
sbb
mov
mov
jg
push
loop
pop
cmp
into
fwait
adc
cmc
dec
or
sbb
not
jge
je
cmc
adc
jo
jae
aas
aas
imul
test
neg
scas
sbb
sub
cmp
imul
outsl
push
loop
jl
xchg
hlt
arpl
int
in
js
or
add
xchg
jb,pn
dec
addr16
fidivrs
pushf
data16
dec
mov
in
push
out
sbb
inc
mov
les
push
push
dec
jns
or
or
mov
scas
pop
lds
nop
int3
stc
and
or
incl
xchg
lods
lcall
pop
sbb
pop
push
loopne
or
fldcw
loop
ss
imull
add
push
push
jb
les
sub
pushf
mov
dec
lahf
push
ljmp
inc
iret
adc
jecxz
cs
xchg
inc
gs
xchg
loop
sbb
xchg
mov
sub
adc
push
sub
push
lock
fcmovne
dec
xor
xchg
ljmp
fldenv
add
fwait
dec
imul
aaa
outsl
das
adc
movsb
mov
pop
jecxz
aaa
mov
loop
popf
push
dec
in
push
fs
ljmp
ret
pusha
loop
cmp
push
sub
inc
mov
cltd
mov
push
add
push
dec
jle
imull
push
mov
mov
sbb
mov
xchg
repz
pop
xchg
ret
push
lods
daa
ljmp
mov
xor
hlt
pop
daa
push
lret
int3
mov
movsl
xor
sbb
jne
add
in
dec
xor
inc
fwait
fwait
push
bound
aam
es
cmp
ljmp
in
stos
loope
lods
ret
popf
cmpsb
shlb
xchg
mov
pop
daa
or
out
stos
mov
repnz
out
pop
xchg
mov
scas
mov
shlb
int
lock
je
out
das
stos
xchg
mov
pop
dec
sub
fiaddl
fidivs
jb
dec
and
scas
fucomi
jge
popa
push
adc
lret
mov
jns
mov
push
push
sarl
mov
cld
sbb
and
dec
jmp
lret
subl
int3
push
push
pop
jmp
pop
add
cmp
mov
mov
and
call
addr16
lods
in
and
xchg
aaa
cwtl
adc
loopne
in
jo
lcall
xchg
fisubs
and
les
pop
and
adc
jmp
outsb
mov
and
addr16
and
dec
das
mov
xchg
jg
push
lods
out
lods
push
test
in
rorl
out
xchg
sub
cmpsb
in
lods
cmc
adc
ret
loopne
lock
dec
add
inc
ss
adc
and
cmp
cwtl
xchg
lret
dec
out
sbb
rorl
mov
mov
inc
push
and
loope
data16
sbb
dec
fstps
mov
ja
and
push
xchg
push
push
es
mov
stos
mov
dec
xchg
inc
aaa
arpl
insl
jb
jl
sub
data16
mov
jbe
cmp
js
jle
or
popf
mov
lret
pop
ret
mov
lret
lods
lods
xchg
xchg
dec
xor
push
call
add
pop
cmp
jg
mov
dec
jg
adc
mov
xor
fidivrs
push
mov
into
mov
outsb
orb
push
leave
imul
leave
dec
mov
pushf
aam
adc
inc
mov
jnp
outsl
test
xchg
in
xor
out
adc
push
adc
popa
mov
jno
add
int3
testl
jae
std
int
dec
enter
mov
pop
or
mov
cmp
mov
mov
in
mov
or
dec
and
sub
jae
jnp
mov
outsl
push
xchg
xor
cmpsb
add
and
pusha
xor
xchg
push
mov
adc
mov
mov
scas
test
mov
in
aad
rcl
adc
push
dec
mov
xor
xchg
add
adc
shr
jo
xlat
add
sahf
stos
adc
in
or
xor
sub
lock
outsb
outsb
push
add
into
leave
pop
adc
inc
push
push
xchg
xor
mov
ja
lahf
in
xlat
adc
mov
lea
fnsave
sub
pop
dec
inc
cld
mov
inc
mov
pusha
insb
mov
fadds
sbb
scas
enter
outsl
and
pop
mov
test
call
adc
jbe
pop
push
in
cmp
ljmp
imul
ds
shll
mov
fwait
add
lds
inc
jl
mov
and
popa
xchg
daa
or
and
je
or
mov
jge
or
jne
pop
adc
push
sbbl
movsl
pusha
cmp
sbb
outsl
mov
fucom
jecxz
inc
push
fwait
push
icebp
orb
jp
sahf
out
fcmovu
add
lahf
movsl
mulb
bound
sub
andl
inc
fwait
jno
repz
adc
push
cmp
sarb
sarb
cmpsl
pop
dec
and
inc
test
clc
data16
adc
inc
mov
cli
out
push
imul
xchg
in
clc
pop
pop
adc
cli
jae
push
and
movsb
out
fadds
popa
push
pop
test
in
and
lods
mov
bound
mov
cmp
push
outsl
mov
lret
cwtl
xchg
popf
mov
call
gs
loop
xchg
fs
cmp
mov
sar
xchg
outsb
sub
jae
out
jp
fistl
aaa
jo
in
popf
sbb
insl
sbb
lock
ljmp
fists
adc
jl
adc
insb
inc
mov
or
xchg
lods
movsl
lds
or
pop
mov
cs
sub
test
jg
dec
add
sbb
mov
outsl
adc
gs
pop
push
add
mov
add
lods
adc
cmp
into
testl
inc
xchg
jno
fiadds
mov
push
test
and
ljmp
arpl
pop
fcoml
xchg
mov
andb
or
xor
or
cwtl
or
scas
sti
test
int3
cli
ss
xor
sub
nop
xor
mov
add
jnp
out
and
jl
pop
pop
je
in
jno
xor
clc
xchg
cmpsl
dec
xor
xchg
xor
add
ds
je
sub
sarl
ds
xor
int3
rolb
clc
aam
sub
icebp
out
jne
out
or
in
int3
ret
movsb
sub
ss
jo
mov
push
ja
aas
push
stos
lret
jae
add
stos
dec
jg
lret
and
lret
sbbl
push
inc
les
push
jno
pop
jb
dec
and
xor
pushf
dec
xor
lcall
dec
jbe
jl
jns
and
outsl
loop
sbbb
jb
rcl
add
fldt
movsb
push
dec
pop
pop
ret
aam
xor
push
jp
je
sbb
cli
aaa
dec
arpl
pop
mov
bound
mov
jmp
add
aam
enter
xor
out
pavgw
jae
inc
clc
mov
adc
sub
push
pop
sarb
stos
xchg
divl
scas
xor
mov
in
mov
stos
mov
seta
dec
das
sub
inc
xchg
outsb
sbb
flds
dec
jge
inc
xor
mov
inc
insb
adc
fwait
int
enter
out
int3
dec
leave
mov
data16
stc
sbb
jg
fsts
adc
adcl
xchg
sub
rol
lret
adc
inc
pop
adc
or
mov
test
gs
cmp
adc
xchg
cmp
add
into
jl
iret
inc
xor
scas
fsubrs
clc
mov
shll
lahf
or
xor
out
fnstsw
sub
out
fbld
or
ljmp
dec
enter
ljmp
mov
sbb
out
adc
pop
xchg
or
sub
fwait
jae
pop
ja
add
cmp
js
test
dec
sti
inc
mov
ds
das
dec
xchg
mov
mov
ljmp
sub
dec
mov
push
mov
jne
mov
push
fistps
and
push
stos
add
enter
pop
and
ret
imul
cmpsl
inc
icebp
and
adc
push
fists
mov
enter
fs
lds
addr16
stc
jmp
xchg
mov
lahf
or
dec
mov
lret
ret
das
cmp
sub
cltd
dec
jb
and
cmc
mov
jle
mov
sub
jge
scas
add
loope
pop
mov
cmp
add
jne
add
je
adc
inc
clc
hlt
inc
icebp
pop
outsl
pop
push
ds
in
hlt
in
sub
xor
pop
xor
pop
shr
push
in
push
mov
adc
pop
popa
fs
jbe
out
pop
mov
lea
dec
idivb
nop
xchg
add
ret
xchg
pop
xchg
sar
pop
lahf
pop
sbb
aam
and
dec
and
or
push
mov
mov
dec
adc
je
nop
aaa
ss
clc
mov
jno
psrlw
xchg
push
mov
dec
in
pop
pop
xor
mov
mov
xchg
xchg
data16
dec
test
andl
mov
mov
jge
lods
push
jbe
mov
ret
lds
je
dec
xor
leave
ja
jp
dec
movsl
mov
popf
mov
mov
lds
xor
pop
adc
xor
sub
addr16
sbb
iret
mov
ljmp
and
ret
cmp
cmpsl
clc
mov
dec
aas
adc
cwtl
ret
int3
cmp
cmp
xchg
mov
stos
mov
pop
jnp
push
mov
daa
fldpi
xchg
xchg
gs
mov
aas
jle
cwtl
xor
adc
int
adc
jmp
jno
icebp
sbb
add
rcr
in
pop
mov
in
mov
repnz
mov
nop
test
pop
mov
test
shlb
jecxz
xlat
mov
imul
dec
mov
and
and
mov
and
push
mov
scas
stos
mov
out
push
mov
aad
loope
rep
mov
gs
cmp
lods
xor
mov
jle
cmp
xor
or
jns
adc
dec
mov
int3
std
jbe
out
sub
sub
dec
cmp
pusha
or
adc
jle
scas
dec
jl
jp
outsl
scas
shr
pushf
je,pn
test
push
jle
das
adc
sbb
add
enter
add
pop
sbb
xchg
ret
scas
adc
iret
cmc
flds
movsb
or
int3
les
mov
cmpsb
mov
and
nop
xchg
pop
mov
and
mov
test
mov
test
adc
xor
mov
push
cmpsb
imul
mov
in
push
mov
sbb
jg
mov
mulb
xchg
adc
mov
fdivl
jbe
arpl
fcomps
sbb
cmp
xchg
mov
data16
cmc
add
mov
ret
mov
nop
stos
daa
fs
and
das
out
movsl
ud2
cmpl
xor
in
in
and
in
jns
inc
rorb
shr
adc
mov
stos
in
sub
or
sti
jb
fstpt
dec
sub
aad
jmp
jl
into
pushf
dec
and
mov
or
inc
or
push
push
xchg
pop
addr16
push
test
jle
js
lods
xchg
pop
in
fsts
jp
dec
mov
jb
jne
rcr
cmpsl
std
insb
bound
push
mov
sbb
xchg
pop
adc
xchg
pop
fwait
jge
aaa
lds
push
dec
adc
or
inc
cmp
ja
mov
xor
mov
dec
pop
outsl
push
add
or
imul
rcr
sub
or
sti
dec
xor
jnp
jnp
cmpsb
in
push
mov
cmp
in
cmp
sbb
lock
jmp
fcomip
in
pop
out
loop
or
imul
leave
push
aad
lods
push
inc
arpl
jle
mov
shlb
sub
into
std
movsl
dec
roll
je
cmpb
aas
push
test
mov
in
rolb
mov
and
dec
stos
fs
shrb
pusha
dec
xchg
sti
dec
or
das
mov
and
add
add
inc
mov
cmp
in
or
enter
sub
into
imul
push
jns
inc
mov
lret
push
mov
sar
sbb
and
test
jge
in
push
add
and
icebp
jae
xor
ja
or
int3
out
push
or
out
xor
and
xor
xchg
stc
in
fldl
mov
into
push
shll
add
mov
push
sub
fs
mov
or
cmp
cmc
fs
cmp
cmc
inc
sbb
mov
es
enter
mov
pop
and
popf
pop
or
xchg
scas
bound
stos
xchg
mov
adc
leave
mov
in
inc
push
stc
sbb
and
out
test
cwtl
ljmp
out
dec
dec
int
push
pop
imul
nop
imull
xchg
and
push
push
cmp
imulb
add
inc
mov
call
ja
rcl
xchg
subl
and
subl
jmp
dec
dec
jno
hlt
xchg
jo
and
push
dec
adc
shlb
xor
stc
jmp
cmp
lods
sbb
addb
bound
lds
pop
scas
push
dec
dec
lcall
stc
outsl
sub
add
sub
dec
cmp
mov
negb
outsb
into
xor
jl
jg
adc
test
or
dec
sahf
gs
lds
xchg
mov
add
pop
lods
flds
xchg
cmp
outsl
add
jle
adc
jo
arpl
sbb
xor
xchg
sub
mov
std
sub
fimuls
dec
je
jae
jne
scas
cmc
mov
adc
mov
and
int3
fsin
fildll
jne
fwait
cli
xlat
aad
jmp
xor
xor
jp
frstor
push
in
sub
fs
outsb
ror
ljmp
jle
xchg
xchg
test
scas
loopne
cs
and
icebp
xchg
push
dec
lret
std
sub
loopne
aaa
mov
jecxz
out
lret
or
push
js
dec
cld
dec
inc
inc
mov
or
and
mov
int3
add
out
orl
fucom
lea
inc
insl
lods
das
ljmp
stc
arpl
dec
popf
add
mov
add
popf
stos
daa
shl
es
xor
and
movsl
cmp
pop
rolb
loope
insb
leave
push
xchg
iret
lret
inc
push
scas
daa
loop
into
xor
fidivl
xchg
loope,pt
les
aad
ret
push
in
out
mov
push
cmp
add
add
jmp
loopne
add
roll
stos
cmp
jbe
dec
mov
pop
sahf
xchg
aad
pop
cmc
rorb
jecxz
fidivl
xlat
dec
adc
leave
ret
nop
jmp
mov
add
pusha
ret
jmp
mov
add
daa
test
cmp
ss
imul
lcall
ds
jge
insl
inc
fwait
bound
aad
and
mov
push
in
sbb
xlat
rcll
shlb
push
cmpsl
stos
lahf
xor
inc
in
xlat
adc
dec
jle
aad
test
xchg
loop
popa
xor
int
in
cs
inc
xor
pop
pop
jg
fcomip
in
insb
jg
jle
pop
adc
test
adc
cltd
call
jne
push
test
push
jg
xlat
xchg
lahf
imull
int
mov
pop
cs
or
idivl
lret
inc
or
rcll
loope
cmpsb
repnz
cmp
negl
add
adc
sub
arpl
or
sbb
dec
dec
mov
cmp
ljmp
mov
xor
cmp
sbb
test
push
lcall
frstor
lock
inc
lret
imul
call
jns
mov
xor
push
fldenv
mov
repnz
loopne
lret
inc
sbbb
sub
sub
jno
shll
inc
hlt
aaa
ror
sbb
stos
pop
pop
pushl
sbb
sub
jo
lret
jl
cmpsl
mov
lock
mov
pop
and
popa
or
mov
aaa
fwait
int3
gs
shlb
add
shr
cwtl
lods
lock
popa
sbb
sub
push
andb
sbb
sbb
lds
sarb
push
addl
or
hlt
adc
jns
xchg
pop
sbb
inc
sbb
cli
sahf
addb
adc
push
outsb
cli
pop
hlt
mov
xchg
and
out
sbb
in
cmp
arpl
push
outsl
or
inc
std
add
pop
inc
mov
sbb
push
in
inc
adc
or
push
mov
cmp
neg
addl
jo
sbb
outsl
xor
pop
loope
rorb
jbe
push
movsb
rorb
or
repz
jne
mov
push
test
test
sbb
daa
xchg
rcl
mov
xlat
sub
bound
cld
inc
pushf
xchg
je
cmp
xor
daa
pop
pop
xor
cmc
std
bound
push
fs
and
add
and
addb
mov
sbb
ja
inc
cld
fdivs
test
push
das
in
scas
push
or
inc
orb
add
jl
pop
cmpsb
or
in
pop
dec
clc
jne
sbbb
fcmovb
mov
and
call
cs
lods
les
or
cld
adc
inc
mov
lret
or
jl
sti
push
add
sub
andb
insl
adc
and
jns
or
jae
and
js
movsl
jecxz
mov
sub
jge
shlb
sti
pop
xchg
inc
xor
sti
jp
pop
sub
out
xchg
frstor
imul
xchg
mov
adc
es
mov
pop
sahf
inc
mov
fstpt
iret
jne
idiv
je
in
xchg
sub
insb
iret
jl
sti
cwtl
pop
lcall
sub
xchg
rcl
pusha
sub
idivl
fmuls
cmpsb
repnz
loopne
adc
fmuls
imul
int
fsubp
push
push
pop
jmp
mov
lock
push
outsb
pop
rorb
mov
mov
outsl
js
scas
mov
ret
aam
push
cmp
adc
mov
xchg
pop
movsb
sbb
jg
mov
dec
scas
enter
inc
jecxz
push
xor
mov
dec
mov
and
adc
je
jge
insl
lods
fwait
insb
stos
cltd
repz
pop
jbe
movsl
sbb
sbb
push
or
jecxz
mov
outsl
ret
jecxz
movsb
xor
sbb
adc
movsb
mov
xor
lret
mov
cmpsb
and
dec
push
hlt
ss
mov
sub
bound
jg
ret
lods
shlb
jp
aam
adc
xchg
inc
pop
std
or
and
pop
dec
add
cwtl
cltd
mov
iret
push
aam
sarb
sub
xchg
cmpsl
in
fstpt
scas
sub
pop
mov
ds
outsl
mov
jle
xchg
mov
lret
inc
fldcw
icebp
and
add
js
ret
inc
js
in
dec
mov
adc
push
inc
int3
and
call
arpl
shl
add
jb
arpl
inc
jnp
mov
enter
lods
scas
out
test
sbb
push
into
movsl
in
fs
mov
pop
xchg
imul
jno
repz
add
or
jbe
bnd
call
cmc
adc
or
xadd
scas
cmp
mov
xchg
daa
xchg
mov
arpl
adcb
dec
or
push
jne
push
or
out
sub
add
sbb
lods
std
js
cmp
adc
loop
adc
lds
dec
scas
das
aad
jg
mov
xor
pusha
mov
pop
scas
ret
insl
xchg
lret
sbb
mov
ds
mov
adc
or
mov
sbb
fisubl
je
push
and
add
xor
mov
dec
enter
fildll
pop
aad
fstpl
jnp
mov
sub
cli
es
lret
pop
push
mov
idivl
popa
mov
push
ds
lahf
sbb
dec
out
sub
test
mov
enter
pop
adc
repnz
push
out
xchg
mov
adc
add
pop
into
mov
pop
mov
pop
stos
adc
outsb
dec
clc
jb
cmpsl
sbb
divb
ss
js
xchg
pop
push
movl
push
shrb
add
sbb
jp
push
mov
push
dec
dec
adc
pop
and
xchg
cmp
jno
dec
mov
xor
lds
inc
shll
sbb
clc
dec
xchg
pop
test
rcll
or
jb
movsl
adc
lds
aad
or
loopne
clc
fistpl
pusha
or
jae
int
or
aaa
push
dec
or
xchg
addr16
inc
jecxz,pn
adc
mov
lret
gs
nop
adc
scas
rolb
pop
mov
jp
xchg
push
idivl
test
lahf
inc
or
xchg
in
popaw
cltd
icebp
mov
jnp
xlat
push
pop
xlat
lret
xlat
hlt
in
aam
outsb
aaa
into
pop
lock
in
pop
fistl
mov
hlt
jns
xchg
in
dec
add
insb
jno
sbb
fnstenv
rol
push
popf
cmp
xlat
cmc
and
subb
mov
dec
mov
mov
movsb
push
frstor
push
mov
xor
dec
add
jg
cmpsl
das
push
in
and
push
icebp
outsb
jmp
sub
adc
mov
mov
inc
orb
dec
ss
in
cmp
insb
imul
mov
stos
add
push
mov
jle
movsb
inc
es
xorl
dec
testl
pop
mov
mov
sbb
call
xchg
xlat
subl
loope
lods
and
icebp
in
fildll
xor
add
mov
scas
mov
sbb
jg
fwait
mov
lods
hlt
std
insl
lahf
test
ljmp
cmp
mov
notl
mov
xchg
arpl
and
push
fwait
dec
jne
js
fildl
call
in
movsb
clc
or
or
push
mov
add
das
fs
pop
cmp
fs
inc
inc
and
arpl
sarl
cwtl
cmpb
inc
push
and
fwait
pop
shl
call
aas
stos
ret
scas
mov
dec
mov
xchg
jbe
cltd
xchg
mov
fildll
cli
xchg
mov
and
mov
js
jle
int
negl
std
push
and
mov
cli
adc
xchg
cmp
jp
fimull
xchg
xor
out
mov
insl
out
mov
xchg
or
pop
dec
mov
call
pop
dec
cmp
mov
add
jg
and
movsl
cmp
in
adc
jae
jns
and
cltd
mov
add
int
adc
push
xor
sti
inc
xor
aam
sbb
cmc
pop
sub
jnp
dec
ret
xchg
cmovbe
cs
fs
push
out
mov
xchg
leave
stc
nop
in
insl
xchg
cmp
lcall
pusha
arpl
sbb
stos
cmp
sbb
cli
cs
push
sahf
negb
inc
and
int
pop
pushf
cmp
mov
xor
pop
adc
adc
push
cld
dec
cmp
pop
and
rorb
fsubs
mov
pop
cltd
aam
fnstsw
dec
ss
push
mov
imul
sti
jno
scas
gs
in
xchg
pop
xchg
loopne
jmp
or
add
daa
mov
out
sub
xchg
pushf
pushf
icebp
xchg
push
adc
xlat
insb
sub
inc
push
dec
shr
adc
stc
add
cwtl
fimull
sub
icebp
adc
push
call
add
sti
and
popf
icebp
or
jmp
push
out
mov
inc
push
mov
jae
cltd
out
and
imul
jecxz
cld
addl
mov
mov
mov
fcoml
out
imul
jp
sub
jle
push
mov
bound
push
sub
push
sarb
mov
scas
sahf
jg
xorb
xchg
mov
sbb
or
sarl
jecxz
shr
xchg
out
inc
mov
mov
add
pop
repnz
mov
ret
pop
add
xrelease
cltd
outsb
jne
jge
movsb
sbb
push
push
adc
sub
push
or
adc
inc
or
pop
rclb
pop
or
xor
aad
and
ds
xor
pop
mov
sub
sub
adc
mov
cmp
into
lods
rorb
pop
mov
stos
fs
stos
mov
sbb
cmpsl
sti
sahf
jae
insb
in
dec
lds
push
push
xchg
jno
sbb
pop
fwait
clc
xlat
inc
lret
jle
pop
mov
cmpsl
push
dec
adc
insb
loope
inc
lcall
mov
fcoms
push
sarl
loope
sbb
add
adc
addr16
dec
mov
call
lret
fldt
rcl
dec
pop
jnp
push
sti
cwtl
std
push
mov
sbb
and
and
xor
lret
stos
sbb
loop
sub
inc
lret
popf
insb
lea
cwtl
mov
mov
push
mov
mov
mov
out
cltd
lods
pop
jmp
xchg
mov
and
or
or
or
movl
pusha
outsl
cmp
mov
add
adc
jmp
std
push
in
neg
out
jne
scas
mov
xchg
nop
push
or
dec
cmpl
sub
fwait
je
loop
xchg
cmc
mov
arpl
icebp
arpl
rcrl
les
cmp
dec
stc
mov
jg
pushf
pop
rcll
fdivrs
aaa
dec
cwtl
push
mov
jg
cmp
adcb
sub
dec
mov
pop
mov
stos
test
push
add
dec
push
push
dec
add
cmp
sbb
xchg
add
cmp
inc
std
daa
std
sbb
dec
dec
mov
mov
adc
subl
daa
aam
and
xor
sbb
es
mov
sbb
stc
int
adc
enter
sbb
cltd
roll
xlat
je
inc
push
mov
jb
sub
and
js
roll
mov
sub
inc
pusha
xor
pop
popa
int
cld
inc
int
sub
fists
push
addb
adc
shrl
cmp
or
cmp
cmp
inc
xor
icebp
int
xor
push
dec
hlt
mov
stos
cmp
inc
cmp
push
cmc
fs
lods
push
and
xchg
scas
dec
nop
mov
or
fsub
filds
lea
add
xchg
cmp
ret
jecxz
xchg
or
jo
cmpsb
out
xchg
sub
lea
dec
push
and
jp
jl
or
xchg
cli
and
adc
push
int
outsb
sub
cs
mov
xchg
mov
push
fisubrl
in
sahf
aam
add
push
pop
mov
cmp
nop
mov
ljmp
inc
sbb
mov
jecxz
pop
cld
test
negl
dec
push
or
loopne
cld
dec
jnp
xchg
cmp
pusha
ja
mov
ds
xchg
pop
imul
adc
cmc
cmpb
xchg
ss
add
enter
adc
xchg
lods
stos
std
popa
xlat
xchg
and
loope
ds
arpl
jg
xchg
dec
sti
mov
dec
pop
dec
subl
xor
dec
xchg
xchg
push
or
scas
adc
mov
inc
push
adc
test
xchg
jle
or
arpl
out
mov
cmp
clc
rorl
mov
jle
xor
lahf
xor
loopne
mov
popf
clc
inc
shlb
xor
push
push
jmp
pusha
pusha
andl
or
adc
add
sub
pop
mov
in
and
shrl
ljmp
stos
aaa
xchg
or
nop
add
int3
mov
cmp
and
popf
jbe
rclb
out
pop
or
lods
fstl
out
jge
scas
adcb
mov
rclb
xchg
sahf
xchg
stc
xlat
inc
inc
mov
ljmp
ds
and
pop
in
push
mov
cmp
sti
lcall
pop
jmp
fwait
jge
jae
pushf
cmpsl
int3
into
jne
jmp
add
dec
sub
mov
xchg
mov
imul
xor
hlt
pop
fcmovne
lcall
push
inc
gs
aas
rclb
sarl
adc
aad
ljmp
mov
lock
test
fldl
ljmp
jle
fldenv
daa
jb
mov
and
fnsave
fwait
or
popa
dec
mov
jbe
fistpll
mov
gs
mov
mov
xorb
repz
sbb
jne
bound
pop
leave
push
cltd
out
cmp
cmp
icebp
int
pop
jo
jne
or
dec
fldcw
push
in
movntps
pop
arpl
push
xchg
cmpsl
add
loope
cwtl
pop
clc
nop
jge
nop
aaa
mov
mov
or
sti
rcll
fsubr
mov
fiadds
int
mov
dec
or
subb
test
or
sbb
ret
out
inc
std
push
stos
sarl
jne
sbb
xorb
push
adc
aad
sahf
add
and
jnp
and
stos
mov
xchg
hlt
cmp
mov
adc
gs
orl
pop
mov
cld
inc
push
repnz
adc
add
jle
loop
lret
xchg
dec
stc
sub
dec
test
popf
lock
clc
pop
xor
int3
cs
in
nop
cltd
jb
push
mov
sub
mov
mov
dec
dec
fmuls
shr
repnz
icebp
jle
inc
test
cs
adc
ja
stos
and
adc
mov
xchg
push
dec
push
sbb
cmc
sub
xor
data16
xor
rcll
or
dec
adc
stos
enter
decb
testl
xchg
dec
shlb
push
outsl
or
and
cmp
aam
fsts
in
jge
xchg
inc
pusha
pop
sub
test
test
inc
scas
lret
les
jno
in
inc
xchg
push
sub
xchg
mov
cli
rorb
pop
cmp
insb
divl
xchg
out
mov
adc
pop
aaa
and
jle
dec
outsl
adc
pusha
cs
jae
jl
lods
sbb
sbb
cmp
inc
xor
cs
pop
push
and
les
xchg
out
mov
mov
mov
out
pop
xchg
js
pop
inc
andb
xchg
mov
cmp
mov
dec
jne
mov
adc
addr16
jge
lea
add
mul
mov
add
mov
adc
cltd
lds
mov
jno
icebp
mov
cmp
rcrl
lea
lds
adc
rorb
jns
rclb
or
frstor
popa
and
aam
adc
xlat
outsb
lahf
test
mov
cwtl
pusha
lea
or
loope
rcll
adc
dec
aaa
xor
pop
cmp
ja
decl
ds
xchg
cmc
lahf
and
mov
clc
mov
xorb
and
rcll
lock
dec
in
and
cmc
fisubs
mov
jo
lds
xchg
push
or
ljmp
cwtl
jae
lods
inc
call
ds
daa
pop
and
in
dec
add
push
movsl
icebp
ds
push
jmp
xchg
sub
std
xorb
dec
jmp
out
xchg
mov
fcmovnbe
adc
jmp
xchg
mov
mov
gs
scas
jno
and
sahf
inc
or
std
dec
push
fcompl
xlat
xor
jns
mull
sti
mov
jo
add
mov
and
jnp
aad
cmpsb
pop
mov
movswl
in
push
stos
sti
dec
or
ja
mov
push
mov
gs
pop
in
int3
ljmp
sbb
lret
rolb
popa
push
mov
pop
lods
xchg
xlat
jne
dec
mov
sarl
data16
or
mov
xorb
ficompl
stos
in
lock
or
push
sbb
xchg
xchg
shlb
and
mov
mov
dec
int
add
jl
lcall
fcoml
je
xchg
add
fdivrp
pop
push
and
fs
sarb
dec
mov
sub
adc
movsl
mov
jmp
cmpsl
xchg
xlat
jb
lcall
and
xor
ja
dec
jp
or
dec
push
push
dec
mov
out
dec
cmp
shll
jmp
xchg
stc
mov
jnp
sub
aam
ds
xor
cwtl
popa
cmp
dec
icebp
lods
fldl2e
xor
fwait
fwait
mov
jge
outsl
sarb
out
jge
popa
inc
add
mov
xor
pop
xchg
lret
push
repnz
je
jo
inc
fildl
mov
xchg
call
sahf
xor
scas
fildll
and
test
xor
out
ss
mov
pop
xchg
jns
inc
adc
enter
test
cmp
out
addr16
pop
jmp
ret
pcmpeqw
nopl
outsl
push
xchg
xchg
add
jbe
or
in
or
add
push
lcall
push
mov
and
gs
popa
and
mov
add
movsb
es
pop
cmp
sbb
repz
sub
or
mov
cltd
sub
dec
mov
dec
cmp
mov
stc
cmp
andl
cmp
sub
dec
cmp
icebp
mov
sbb
add
jle
pop
ret
xor
lcall
into
loopne
popf
movl
adc
aaa
int3
rcl
addb
mov
lock
aam
loope
and
ja
lret
in
mov
lock
cmc
dec
or
xchg
aaa
push
xor
add
ja
loopne
jns
push
or
popa
pop
popa
jbe
inc
xor
fistps
mov
push
cltd
or
es
fsubrl
int3
add
in
stos
lock
arpl
adcl
aad
push
jg
orl
cmp
je
bound
inc
int
add
outsl
adc
stos
or
mov
enter
das
jmp
test
sub
cld
cmpl
xchg
jns
shlb
xchg
sub
out
lahf
fidivs
jae
enter
inc
jne
mov
or
and
dec
fs
stos
insb
sbb
sbb
add
xchg
xchg
std
jl
cmpsb
ret
and
call
das
adc
pop
pop
xchg
jmp
test
adc
ficompl
repz
cmp
out
cmpsl
push
cvtps2pd
popf
xchg
loope
mov
dec
bound
out
orl
pop
fs
pop
icebp
push
push
push
inc
sti
push
stos
cmp
inc
push
fwait
icebp
andb
loope
outsb
pop
mov
sarl
jecxz
ret
mov
add
adc
iret
in
loope
iret
jae
inc
inc
and
dec
push
dec
pop
aad
in
clc
adcb
out
das
and
test
mov
mov
outsl
or
cltd
fdivp
insl
pop
sahf
adc
int3
dec
aas
insb
dec
shl
push
stos
packssdw
call
mov
fsubrs
fisubrs
idivl
pop
sub
insl
push
mov
ss
pop
jg
sub
lds
shrl
lea
aad
mov
mov
int3
jno
inc
add
add
push
mov
mov
rclb
fucom
les
lahf
sbbl
mov
popa
mov
push
push
cmp
dec
cli
int
or
std
rcrl
cwtl
push
and
insl
shll
dec
pop
into
aad
pop
jne
nop
js
iret
test
nop
jl
int3
sub
xchg
cltd
cmc
xchg
or
inc
or
lock
pop
push
sub
xor
mov
insb
cmp
ficoms
jo
shr
je
out
mov
xchg
jo
call
fisubl
push
jns
inc
xor
xor
sbb
popa
push
push
mov
dec
out
or
loop
nop
ret
sbb
pushfw
inc
imul
int
inc
movsl
xchg
arpl
lahf
imul
movsl
out
pop
pop
lret
adc
leave
sbb
inc
mov
fs
cmp
xchg
data16
enter
ret
aad
rolb
jb
imul
cmpsl
fisubl
lea
sbb
pop
stos
sbb
sbb
add
js
xchg
mov
mov
xchg
jns
outsl
cmp
sub
sub
sbb
and
gs
loope
sbb
in
push
and
ss
imul
pop
pop
mov
and
dec
add
insl
jl
pop
dec
add
mov
fld
add
push
and
cmp
pushf
cmp
mov
jbe
mov
je
out
pop
in
xchg
roll
push
push
pop
or
jecxz
xor
data16
dec
add
cli
xchg
mov
outsl
sbb
cs
jnp
pop
data16
in
test
call
test
pushf
in
iret
jp
mov
sub
mov
in
jnp
icebp
sti
fdivr
popf
enter
adcb
sub
shlb
insb
outsb
popf
lods
cmp
inc
out
pop
in
xchg
xchg
and
mov
decb
push
jbe
cmp
mov
aaa
cs
mov
adc
jl
mov
aas
or
adc
jp
repz
push
cld
xlat
cmp
mov
inc
push
fucompp
pop
jle
andb
pusha
lret
fmull
sub
call
push
inc
inc
pop
popa
xor
clc
cltd
push
or
test
clc
add
cli
inc
insb
push
xchg
lret
fnsetpm(287
mov
jp
push
cmp
shrl
xor
jg
add
push
jmp
aaa
jmp
cmpsb
push
jmp
mov
sbb
negl
jo
push
int
and
or
outsb
push
cwtl
jmp
mov
jbe
mov
jne
adc
dec
adc
insl
mov
jmp
push
rorb
sahf
das
pop
dec
bound
in
daa
xchg
cmpsl
fildll
and
push
fwait
mov
popf
xlat
cmpsb
fcom
sbb
movsl
out
mov
leave
add
mov
icebp
dec
stc
shll
dec
mov
adc
sub
test
push
mov
subb
out
or
popf
or
push
sahf
gs
les
sahf
pop
jl
inc
pop
ret
push
push
and
mov
xor
add
les
mov
pop
pop
jl
and
decb
das
mov
fisubl
xchg
xor
mov
pop
xchg
mov
pusha
jne
inc
xchg
dec
jmp
mov
adc
fstpl
daa
or
adc
mov
dec
add
movsb
out
or
sub
mov
loopne
repnz
cmpsl
xor
lock
repnz
sbb
sub
jl
addr16
or
pop
ds
mov
or
mov
jmp
cmpsl
stos
pop
sub
dec
roll
lret
xlat
aas
out
lods
mov
add
ret
jae
jne
in
jmp
scas
add
scas
lods
mov
xchg
xchg
out
or
scas
cli
jle
sti
mov
sbb
pop
fdivs
jmp
inc
scas
push
or
push
out
sub
les
xor
insl
in
rolb
xchg
mov
dec
out
out
sbb
imul
xchg
or
inc
mov
out
jecxz
or
js
les
jne
push
mov
cmp
push
pop
or
pop
add
repz
iret
mov
mov
stc
pop
lds
mov
mov
push
cs
inc
leave
iret
inc
push
xlat
push
into
mov
or
movsb
out
enter
and
popf
enter
inc
sub
enter
jmp
stos
outsl
sbb
in
repnz
loope
push
leave
lret
out
ljmp
in
sbb
lret
cmp
sub
sub
adc
int
mov
test
out
out
jle
mov
ss
mov
push
mov
sbb
pop
jmp
in
add
movsb
xchg
xchg
loop
push
lea
int3
sbbl
lods
inc
cmc
subl
arpl
idiv
xor
shrb
and
outsl
shrb
push
mov
aas
insl
mov
fstps
mov
repz
and
repz
in
cmp
fidivrs
mov
dec
xchg
ljmp
movsl
test
scas
sub
mov
cmpsl
sbb
sahf
cli
iret
je
pop
in
push
mov
lahf
mov
ds
inc
mov
lahf
adc
sbb
shll
scas
xchg
adc
insl
mov
add
sub
popa
out
les
sub
nop
imul
add
ret
or
adc
sbb
shl
cmp
xlat
inc
or
lcall
or
dec
mov
or
mov
repz
nop
xchg
jns
rcr
mov
lods
and
dec
imul
movsl
in
xor
mov
in
cmp
ret
and
pop
inc
and
adc
and
add
mov
cmp
cmp
pushf
hlt
sbb
jmp
pushf
dec
dec
out
mov
lea
and
jg
cltd
mov
push
cmp
loope
inc
sahf
push
outsl
mov
outsb
add
xor
lods
xor
cmp
mov
add
jae
dec
inc
push
adc
pop
aam
jecxz
fwait
jmp
cltd
jp
lock
xchg
xor
lret
jae
data16
pusha
or
mov
pop
ljmp
and
outsb
inc
mov
push
movsb
rcr
xchg
push
mov
enter
loopne
arpl
xchg
pop
pop
and
repnz
jae
sbb
aaa
daa
insb
cld
sub
into
add
add
out
xchg
repz
test
mov
rcrl
jecxz
lods
incl
and
out
jle
cmpsl
xlat
sbb
in
mov
mov
push
push
jg
arpl
loopne
adc
or
cmp
int3
pop
fisubs
mov
dec
jo
add
xchg
and
lret
rorl
sub
jae
in
cmpb
mov
adcb
rclb
push
leave
aad
inc
jg
add
xchg
in
and
cmp
sub
repnz
ret
cld
hlt
cmp
mov
mov
cmp
addr16
dec
sbb
test
lahf
les
loop
sub
out
aad
repz
and
data16
test
inc
inc
dec
out
stos
movsb
push
repz
in
cmp
xchg
mov
xor
lret
add
and
mov
xor
xor
mov
arpl
xor
ja
push
mov
and
xor
out
jg
ret
mov
addb
mov
pop
sbb
cmc
out
push
push
xchg
sbb
xor
loopne
pop
pop
std
out
sub
mov
aad
jp
push
cmp
xchg
clc
call
in
cmp
int
dec
xchg
push
sbb
push
out
and
out
test
add
sub
in
mov
adc
sub
insl
xchg
mulb
mov
add
mov
push
mov
or
mov
fsubrp
call
mov
cmp
cmpsl
sbb
in
lods
pusha
hlt
nop
cwtl
adc
mov
inc
pop
or
imull
xchg
clc
mov
dec
inc
mov
cmp
pop
push
cmc
jge
stos
shl
xor
mov
adc
mov
test
popa
adc
pop
mov
gs
ja
pop
dec
xchg
cmpsl
adc
into
cld
add
mov
mov
fdivs
xor
clc
jb
std
push
iret
pop
cmp
popa
sub
mov
mov
lcall
jp
pop
fisubl
push
dec
push
iret
in
adc
jmp
popf
insb
inc
repz
add
das
fs
jg
jmp
cmpsl
or
xchg
imul
pop
stc
stos
xlat
imul
cwtl
xor
pop
aad
cli
pop
mov
repnz
mov
sub
adc
mov
mov
jnp
dec
mov
cmp
daa
aad
lcallw
loope
mov
insb
arpl
ss
xchg
inc
and
adc
pop
incb
inc
dec
outsl
movsl
xchg
cmp
ljmp
insl
dec
pop
or
adc
jns
mov
xchg
mov
lea
xchg
sbb
and
loopne
xor
push
fnsave
aad
popf
xchg
mov
add
rclb
push
mov
std
cmpl
jle
movsb
lock
iret
mov
or
inc
inc
inc
cli
lods
xchg
jb
scas
insl
es
xchg
scas
bound
js
ds
push
fldenv
nop
insl
dec
push
fidivl
add
push
mov
cmpb
ret
cmp
insl
fistl
mov
out
std
cmpsb
nop
jnp
push
movsl
mov
aam
xchg
cmp
and
iret
sahf
xchg
fimuls
cmp
add
add
dec
jbe
ds
popf
dec
rcrb
jmp
mov
inc
out
pop
ljmp
lods
test
or
insl
xchg
mov
in
ljmp
xchg
jle
nop
xchg
cmpsb
aaa
mov
js
sti
aad
cmc
add
sub
popa
js
mov
movsl
mov
ds
les
das
loop
push
fisttps
add
dec
loope
adc
jg
outsb
test
mov
mov
inc
or
adc
pop
jne
cmp
into
push
rcrl
sbb
imul
push
popf
push
sub
aaa
dec
add
xchg
inc
pop
inc
or
cld
mov
into
iret
shl
pop
sbb
pop
sbb
jmp
addr16
xor
sbb
or
lock
or
pop
stos
ror
push
cs
adcb
sub
jle
add
mov
cmp
or
mov
les
push
cld
addr16
fwait
xchg
xlat
adcb
arpl
dec
jne
call
sbb
pusha
jnp
push
or
push
push
pop
mov
jmp
nop
mov
dec
leave
mov
arpl
addr16
or
pop
sub
add
inc
mov
adc
sub
xchg
add
push
jle
dec
out
scas
test
popf
pop
sahf
pop
and
push
sub
add
es
out
jmp
test
out
sub
xchg
ds
enter
cmp
pusha
xor
insb
jbe
pop
push
aam
xchg
cld
dec
inc
cs
or
out
cmovbe
call
sub
loope
insb
testb
stos
je
mov
adc
push
outsl
sub
dec
xor
into
jne
mov
das
push
mov
cli
pusha
int
bnd
in
adcl
inc
je
fisubl
mov
xor
mov
dec
mov
xchg
lock
sarl
xchg
jle
mov
shlb
jle
sbb
mov
sbb
sub
movsl
psubsw
sbb
addr16
popa
xchg
sbb
in
jecxz
aad
stos
sbb
mov
push
sbb
pop
les
inc
cmp
imul
loope
fstps
shlb
inc
shl
xchg
jle
jns
mov
cltd
nop
fwait
aad
stos
cmp
pop
mov
inc
ret
jge
mov
sahf
into
mov
imul
sub
loopne
add
add
ljmp
mov
add
fcos
cltd
or
xor
sbb
mov
hlt
jbe
xchg
jbe
sbb
jmp
push
jge
aad
lcall
add
pushf
pop
xchg
jo
push
sub
mov
and
das
cmpsl
scas
ret
call
cmpsb
push
and
adc
jae
lods
cmp
js
repz
dec
cwtl
ds
mov
fcoms
jne
adc
add
ljmp
rol
test
fsubrl
sub
pop
or
mov
pop
cmp
dec
push
jl
or
mov
loop
pop
repnz
cmp
dec
dec
jo
cld
mov
sbb
and
daa
pushw
xchg
mov
dec
inc
sub
mov
ret
outsl
pop
push
mov
xchg
mov
pop
lods
insl
pop
aas
icebp
inc
out
pushf
sarb
call
sub
cmp
daa
imul
adc
pop
cmp
divl
add
pop
jmp
or
les
les
jp
or
leave
inc
incb
dec
dec
cmp
fstl
test
int
cmp
xchg
push
ret
cmpsb
jmp
stos
push
sub
push
or
pop
daa
pop
imul
mov
je
push
push
cmp
pop
cli
mov
imul
ret
and
pushf
mov
push
or
pop
mov
je
xor
shlb
fdivl
mov
mov
adc
je
sub
xor
es
jle
lret
lea
ja
pop
lret
cmp
pop
inc
jo
frstor
xor
adc
jmp
les
jb
cs
sub
mov
push
std
in
dec
push
rcll
and
adc
lods
add
test
add
arpl
cmp
adcl
cmp
push
xchg
daa
and
lods
sbb
imul
test
loopne
shrl
popf
pop
adc
sbb
daa
fwait
inc
sub
and
dec
sbb
xor
js
xor
cmp
mov
popl
or
nop
jne
mov
in
in
mov
dec
xchg
add
cmp
mov
sbb
pop
add
ud1
shl
rolb
pop
bound
loop
jle
xor
insb
sub
pop
mov
adcl
xchg
lcall
xchg
jne
loope
pushf
jg
push
push
insb
adc
jb
ljmp
or
decl
pop
aad
decb
add
xchg
add
mov
std
fisubs
pop
mov
jp
mov
inc
jecxz
mov
das
scas
jp
dec
scas
cmpsb
in
xchg
dec
lret
movsb
js
and
popf
call
dec
inc
or
adc
jmp
sbb
jle
add
lcall
mov
sahf
in
cmp
cwtl
add
push
call
xorl
inc
push
add
les
ret
jno
push
fstpt
pushf
test
test
inc
dec
insb
stos
fwait
rcr
pop
pop
xchg
mov
nop
scas
mov
shrb
mov
cmpsb
test
fwait
scas
or
inc
ja
out
imul
loopne
fwait
add
dec
pop
es
xchg
sub
jno
adcb
and
or
pushf
mov
cmp
jmp
fsts
and
push
rcr
in
stos
pushf
cmp
mov
into
mov
out
ds
lcall
std
in
in
in
xchg
sbb
stos
or
aas
orb
jno
add
shlb
fwait
xor
sbb
mov
mov
mov
sub
mov
mov
pop
loope
cmpsl
es
dec
inc
mov
mov
arpl
adc
fsubrl
sbb
push
test
dec
cld
imul
into
lahf
jns
mov
pop
push
dec
je
and
lods
shr
pushf
push
dec
mov
inc
movsb
inc
cmp
fnstcw
lret
add
adc
lods
mov
add
movsb
fistpll
outsl
xchg
mov
data16
and
inc
mov
mov
pop
push
mov
xchg
jl
push
movsl
xor
sbb
stos
outsb
std
rolb
xor
pop
and
cwtl
bound
imul
or
mov
jo
xorl
adc
popl
movsb
cmp
mov
inc
adcl
xchg
mov
jo
xor
popf
jge
xchg
loop
repz
cli
pusha
stc
pop
and
xchg
push
notl
scas
jns
and
pop
test
mov
mov
push
clc
push
pop
int3
mov
mov
in
mov
pop
pop
lcall
divb
inc
sub
mov
mov
jbe
fimull
or
bound
sbb
push
dec
mov
add
sarl
cwtl
mov
fldenv
loope
out
cld
aas
inc
insl
testb
fs
std
xor
xor
lcall
push
push
push
adc
or
fxch
mov
xlat
xor
jne
pop
pop
pushf
popa
imul
hlt
jge
jnp
pop
andl
cmpl
pop
cltd
sub
push
xchg
or
mov
call
imul
mov
hlt
xchg
addr16
outsb
sbb
shlb
insl
insb
cmpl
into
aaa
jp
jbe
imul
sub
and
ror
shrl
fmul
ret
fwait
mov
cmp
mov
out
mov
pop
cwtl
pop
xchg
mov
adc
lea
loope
into
xchg
dec
mov
jb
iret
arpl
popf
movsb
loop
test
push
xchg
fwait
insb
repnz
push
adc
and
add
sub
test
xchg
ja
jne
lahf
int3
sarb
stos
ja
push
mov
std
sbb
pop
mov
mov
je
lds
das
fmull
bound
and
popa
adc
aas
lods
and
push
push
sbb
mov
pop
push
mov
dec
cltd
lcall
adc
in
sbb
mov
call
in
jno
mov
test
pusha
shlb
popa
pop
lods
fdivl
leave
icebp
scas
fidivl
std
bswap
adc
fisttpl
out
sbb
inc
aaa
push
dec
pop
xor
aaa
in
imul
mov
inc
and
jns
xorl
mov
pop
push
cmp
push
mov
dec
shl
aas
jmp
mov
js
xchg
xchg
loop
in
bound
inc
pop
cmp
xchg
push
popf
or
in
mov
xchg
jno
in
jge
dec
jo
add
mov
cmpsb
sub
insl
fdivrs
nop
jo
xchg
jbe
lahf
xchg
mov
mov
out
mov
popa
js,pn
sbb
in
mov
mov
popa
xor
pop
in
idivl
int
cmp
cmp
and
mov
cli
flds
xchg
jae
push
cmc
sbb
jb
push
daa
jecxz
mov
mov
int
cs
mov
xor
lcall
stos
rorl
jo
addl
xchg
in
popa
lods
pop
movsb
int
aad
adc
xor
xchg
ja
xor
xor
out
xchg
dec
push
push
xchg
xchg
pop
mov
push
sbb
mov
inc
lcall
movsb
inc
lock
adc
idivb
fdivl
jae
mov
fwait
fs
scas
xchg
lods
negl
nop
pop
mov
scas
imul
sbb
sarl
sub
lahf
divb
orb
cwtl
push
dec
int3
push
lea
xlat
out
test
or
icebp
mov
mov
dec
mov
pop
iret
imul
fcom
fidivl
mov
pop
int
inc
jns
jbe
push
add
cmp
cmpsb
xchg
inc
fucomip
lds
cmp
and
mov
mov
push
xor
lods
out
cmpsb
gs
xorl
push
shrl
cmp
leave
fwait
into
mov
das
jg
mov
xchg
pop
dec
flds
das
xor
stos
jmp
cmp
fdivrs
lds
lods
ret
push
adc
rcl
add
es
pop
push
xchg
push
inc
test
or
lret
outsl
ds
cmpl
jo
and
xor
mov
sbb
xchg
pushf
lret
mov
lods
leave
pop
sbb
in
pop
mov
pop
outsb
dec
stc
jns
mov
mov
pop
xchg
aam
add
and
sti
test
sbb
lcall
push
repz
mov
ja
jno
mov
mov
sbb
mov
xchg
mov
cld
xor
das
dec
stos
add
pop
test
mov
movzbl
push
adc
gs
adc
and
mov
push
sbb
pop
testb
sub
repnz
mov
cmp
jnp
pop
or
ret
cmc
or
orb
mov
jae
xchg
push
ret
mov
and
adc
imulb
pushf
or
aad
repnz
cld
mov
xchg
mov
mov
imul
movsb
in
scas
mov
cs
movsb
test
xor
mov
movsl
cmp
cmp
sub
fidivrs
inc
inc
pop
adc
mov
jns
push
cltd
mov
and
cmp
popa
fdivr
pop
and
outsb
addr16
in
push
mov
rorb
adc
mov
fs
xchg
xor
push
jo
and
test
rol
sub
stc
add
pop
add
ja
or
faddl
pusha
xlat
push
pop
cld
mov
int
cli
xchg
fists
in
mov
adc
jg
or
cmc
scas
test
imul
push
push
mov
cmp
sbb
bound
jmp
scas
xor
jns
jno
negb
or
inc
jmp
sub
je
mov
cmp
mov
bound
jmp
jb
fists
cmpsl
cltd
mov
testb
mov
pusha
popa
cmp
pushf
adc
jnp
iret
and
std
ja
rolb
into
sbb
sbb
jg
add
add
sub
leave
push
xor
je
out
leave
ror
inc
pop
xchg
daa
sub
xchg
pushf
mov
or
incb
aaa
scas
les
incl
adc
lcall
setno
pop
push
aad
add
loop
mov
loope
scas
cwtl
mov
xchg
add
shr
mov
and
or
cmp
ret
pop
pop
add
fnsave
push
mov
sbb
into
sub
rcrb
addr16
adc
lret
push
mov
iret
mov
sub
jle
popa
or
sbb
push
stos
subb
sub
push
mov
iret
lods
popa
in
jo
mov
push
test
and
es
pop
push
fcmovbe
iret
int
cltd
sbb
rcrb
mov
cs
hlt
bound
rolb
pop
cwtl
mov
call
jno
les
sahf
addb
jne
ret
scas
sub
arpl
cmp
add
lahf
jmp
out
movsl
scas
add
cmp
pusha
bound
repnz
sbb
add
cmp
bound
lret
sbb
and
mov
inc
adc
jns
fwait
sub
mov
push
jecxz
incb
sahf
push
outsb
pop
lock
les
fstpl
adc
cld
sub
mov
es
fcomi
ja
dec
fs
fisubl
pop
sub
aaa
lahf
pop
sbb
aas
call
popf
sub
nop
out
sub
xor
pop
test
iret
sbb
sub
out
xchg
push
sbb
ret
nop
jo
or
loope
test
jmp
lds
sub
addr16
xor
mov
loope
xchg
sbb
shr
in
stos
in
dec
cmp
mov
notb
pop
test
sub
xchg
cmp
jmp
mov
jg
stos
addl
icebp
cmp
in
in
ja
test
add
mov
sbb
sahf
mov
adc
insb
sub
pop
sub
aad
aam
add
cmp
lahf
adcl
push
pop
jle
xor
or
int
insl
icebp
cmp
dec
xchg
inc
mov
lret
mov
mov
lahf
test
or
shlb
pop
add
mov
repnz
xchg
movb
in
idivl
jl
lods
cs
out
stos
xor
xchg
loope
lahf
add
insb
out
sbb
xlat
jp
ret
in
lods
repnz
int
das
hlt
add
mov
aam
cmpsb
fstp
lods
inc
adc
fnstcw
or
pop
ss
cli
int
lahf
sub
jo
andb
loope
cmpsb
mov
add
mov
push
sub
pop
jo
mov
cmp
sbb
ss
pusha
add
cmp
aas
add
lods
ja
int3
outsl
sbb
mov
adc
popa
rolb
push
xor
es
lahf
jecxz
into
lods
adc
mov
stos
pop
aam
add
sub
ds
jmp
or
icebp
sbb
dec
lea
push
xchg
stos
jecxz
movsb
aaa
sub
out
dec
icebp
sbb
push
sub
in
and
adc
mov
xchg
push
sahf
ret
lahf
adc
in
ret
cmc
stos
jb
inc
or
xor
ds
loopne
adcb
mov
adc
push
ror
out
data16
ss
rorl
daa
mov
in
push
scas
sub
cmp
jo
popf
adc
cmp
mov
fcmovne
mov
pop
test
sbb
mov
pop
stos
xchg
das
pop
ret
push
js
sbb
inc
cltd
call
xchg
arpl
cwtl
inc
push
shlb
jge
jo
pop
jne
lock
mov
push
lahf
testl
jg
add
aam
inc
jne
adc
enter
add
jbe
imull
sub
icebp
or
or
pop
int3
loop
outsl
inc
mov
sbb
push
shlb
pop
jmp
cmp
mov
popa
add
les
add
ss
testl
jo
push
push
jbe
jmp
enter
std
mov
mov
imul
xchg
stc
sahf
das
adc
ja
dec
stc
pop
dec
rcll
test
jns
xor
push
or
popf
mov
mov
or
outsl
add
jns
roll
xchg
jecxz
jns
or
xchg
push
insl
test
fimuls
int
xor
scas
jg
or
mov
ljmp
lods
dec
push
xchg
and
jno
enter
mov
pop
mov
jp
daa
movsb
add
arpl
jp
incl
iret
mov
lcall
es
rcl
mov
xor
cld
mov
rclb
xchg
je
push
pop
sbb
or
pop
js
push
mov
data16
cld
cmp
enter
roll
loop
cmp
add
sub
movsb
cmp
adc
scas
ret
xchg
sbb
xchg
je
sub
arpl
xchg
pop
pop
xchg
adc
mov
std
test
mov
loop
xchg
sbb
mov
leave
imul
jnp
lret
push
mov
ds
cltd
clc
ffreep
inc
and
aaa
fstps
cmpsl
and
mov
cmp
jle
repz
push
sub
or
scas
imul
fsts
daa
inc
addb
xchg
mov
inc
push
xchg
outsl
xor
push
jb
pop
push
xchg
sbb
pop
in
insb
pop
mov
jmp
fildl
pop
aad
sbb
nop
daa
repz
mov
jmp
out
mov
push
dec
int3
xrelease
mov
push
cwtl
mov
cmpsl
scas
pop
xchg
sub
rcr
es
or
iret
jo
and
sub
rcrl
mov
int
jmp
pop
mov
push
es
cmp
ret
xchg
test
sbb
mov
cli
ljmp
mov
xchg
dec
mov
xchg
push
movsl
fwait
mov
adc
arpl
jno
adc
stc
gs
lea
inc
xor
jae
inc
sti
mov
mov
arpl
and
mov
in
sbb
and
and
mov
popa
jmp
movsb
sub
data16
call
xchg
sbb
ret
mov
xor
fistps
push
out
mov
push
or
xor
test
adc
adc
jp
pop
jp
outsl
xor
mov
push
sub
cltd
dec
imul
jle
fwait
mov
lahf
pop
cs
ja
aaa
stos
cwtl
fdiv
rol
inc
scas
push
inc
pusha
xor
push
fs
mov
mov
pop
fdivrs
inc
hlt
dec
inc
add
push
and
shlb
sti
dec
out
push
or
call
jae
mov
out
push
mov
add
aad
in
lock
xorl
js
lcall
mov
mov
pop
dec
popf
dec
inc
ljmp
xchg
jmp
mov
jl
stos
add
push
leave
js
push
cs
je
ret
cs
bnd
jge
out
jle
js
je
and
call
or
mov
sub
xlat
pop
lods
mov
ret
xor
sbb
int
mov
sub
out
jl
cmpsl
rep
sbb
cltd
jmp
push
ret
and
lds
sub
dec
mov
or
xor
lods
stc
dec
lods
loopne
call
dec
mov
and
cmp
sub
punpcklwd
out
call
jge
sub
xchg
notl
jns
sbb
popa
andb
mov
add
push
fcomip
fidivl
cmp
lea
jo
xor
gs
mov
mull
cmp
xchg
stc
jno
adc
fldt
cld
rcrb
out
push
or
imul
and
cmc
in
adc
lahf
testl
add
das
mov
addr16
bound
lcall
ret
movsl
jp
cli
es
jl
mov
xchg
movl
mov
fwait
shll
inc
ret
xor
bound
sbb
in
in
leave
jne
inc
rclb
nop
mov
dec
stos
sbb
xor
ljmp
ds
rorb
jbe
xor
loope
mov
adc
add
cmp
les
xchg
pop
sub
sub
fadd
out
outsl
xchg
cmp
aam
addr16
xchg
mov
pop
lahf
sub
ret
and
aad
push
std
mov
fnsave
lahf
std
aaa
push
cmp
stos
rcl
repz
or
and
cwtl
sarb
fdivl
into
imul
xor
adcb
sbb
fstps
jge
fsubs
ljmp
sub
add
sub
jle
loopne
daa
popa
mov
or
pop
pop
fisubrs
push
movsl
cmp
repnz
loope
mov
adc
fsubrl
cmp
sbb
ret
rol
mov
out
fcmove
cmp
inc
mov
mov
mov
jg
loope
out
mov
lcall
jl
pushf
outsl
in
sub
nop
scas
pop
sahf
xor
lods
xchg
shlb
fsubrl
andl
repnz
test
int
inc
jge
dec
stos
and
xor
push
es
pusha
mov
xlat
mov
adc
sub
mov
arpl
aad
retw
cmp
cli
add
ret
clc
push
or
pop
mov
lea
or
jge
jg
test
pop
loop
lret
xchg
aad
lds
stos
mov
and
cld
pop
xorb
cmp
mov
sbb
jno
sti
in
icebp
add
imul
lock
js
fwait
add
out
add
cmpsl
or
inc
les
pusha
pop
add
adc
addl
xor
aaa
mov
les
sbb
mov
add
jp
lcall
dec
push
mov
mov
pusha
jg
lds
cmp
aas
bound
inc
sti
sub
out
sbb
sub
mov
mov
inc
add
mov
jns,pn
jle
cmpsl
psrad
pop
add
push
testl
mov
cmpsl
inc
jmp
out
sub
scas
pusha
stos
das
fcom
sahf
ljmp
aam
cmp
arpl
push
mov
or
xchg
neg
bound
jmp
add
stos
xor
test
orb
incb
push
addb
and
add
rol
cwtl
sbb
bound
das
sbb
fabs
cs
xchg
in
mov
nop
pop
xchg
outsl
cmpsb
ljmp
pop
sahf
pushf
int3
imul
push
pusha
adc
pop
ds
insl
call
push
ds
pop
rcrb
in
in
repz
push
sub
push
scas
out
mov
aas
and
and
mov
push
cmpsb
scas
clc
andl
inc
ret
cltd
loop
xchg
and
dec
lret
test
cmp
jmp
push
ljmp
int3
mov
xchg
dec
cli
xorl
push
scas
sbb
das
gs
xchg
fnstsw
xor
loop
add
nop
cmp
mov
cmp
lods
xlat
jne
jae
fldt
fucomi
lahf
xchg
mov
or
add
inc
cmp
imul
stc
repz
jmp
sub
fists
iret
mov
or
cwtl
lret
jp
fs
hlt
or
cmpsl
scas
lahf
push
mov
push
xchg
jnp
lds
mov
inc
jp
pop
sub
movsl
in
inc
or
cltd
inc
add
mov
popf
adc
rcl
movsl
mov
xor
pop
lds
inc
jp
mov
add
cmp
mov
push
pop
fnstsw
pop
pop
mov
enter
push
or
sub
mov
pop
mov
outsb
mov
ljmp
sbb
sahf
pop
and
cmp
add
jle
lret
or
insb
arpl
xlat
dec
int
mov
add
sub
test
fldl
leave
mov
dec
outsb
sti
sahf
add
jl
xor
mov
ljmp
dec
pusha
jns
sti
nop
ret
mov
inc
outsb
push
int
fwait
jle
ja
cmc
xor
jle
out
sub
and
iret
into
mov
push
mov
cmpb
in
jmp
jb
or
inc
inc
jns
lahf
dec
fldenv
in
rcl
repz
xchg
rolb
std
jbe
jge
rcrb
mov
in
push
addr16
add
xchg
arpl
mov
sbb
cmp
add
fimuls
cmpsl
mov
fbstp
xchg
jne
mov
cs
scas
jno
hlt
mov
icebp
loope
and
out
pop
test
das
repz
popa
adc
into
xchg
xor
adc
test
rorl
jno
push
out
jns
sub
inc
cmpsl
cmp
filds
cld
sbb
ds
addr16
jle
mov
xor
out
sub
push
mov
xor
lds
out
shr
jb
pop
sbb
shrb
push
add
adc
pushf
insl
mov
stos
xlat
movsl
out
lods
out
inc
xor
push
or
xchg
or
call
test
fadds
mov
lock
fadds
addr16
xchg
add
push
push
cmpsb
xor
fincstp
inc
aaa
in
and
sbb
sbb
jle
xchg
sub
insb
xor
je
mov
pushf
fnstcw
mov
push
js
lock
sub
subl
adc
aam
jmp
jg
addr16
jae
movsl
lcall
mov
adc
inc
cmp
out
stos
call
push
in
xchg
mov
xor
xor
lret
out
lock
mov
je
iret
ja
aad
lcall
xchg
sub
jnp
jl
int3
add
repz
bound
inc
rorl
cmpsl
aaa
adc
pop
xchg
push
scas
das
ds
shrl
pop
push
and
sub
mov
lea
and
ja
js
out
inc
fmull
mov
imul
add
mov
pop
fnstsw
in
push
cmp
jl
ficompl
pop
jmp
and
xchg
mov
fists
stos
les
cli
inc
dec
imul
movsb
push
mov
pop
insl
mov
mov
adc
jg
shlb
leave
or
dec
xchg
repnz
clc
ljmp
sahf
sbb
sub
sub
pop
das
push
pop
in
adc
push
loopne
arpl
push
xchg
cli
lods
mov
xchg
shll
repz
xchg
mov
enter
sub
lock
xor
popa
pop
inc
aam
pop
aas
sbb
and
outsb
sbb
loopne
jnp
mov
rorl
in
mov
fildl
push
adc
fistpll
cmpsb
jae
lret
scas
pop
iret
flds
jge
adc
pop
xor
jecxz
into
lods
cs
mov
cmp
add
pop
jp
jg
push
aam
gs
hlt
out
aaa
mov
outsl
fstpl
aaa
dec
or
aam
ljmp
bound
add
and
adc
ljmp
xchg
and
stc
jb
dec
outsl
and
imul
jae
push
sbb
inc
jp
stos
pop
inc
notb
sbb
aam
xchg
cltd
pop
pop
rcrb
jae
sub
mov
insl
aas
mov
and
ja
jge
mov
cmc
bound
push
repz
stc
fnstcw
std
xor
sub
mov
dec
inc
mov
xchg
aaa
push
add
or
fiaddl
jno
jb
xlat
ret
dec
in
rcrl
js
mov
les
mov
jb
insb
xor
and
cwtl
cmpb
jg
xchg
clc
pop
jp
push
fwait
sbb
pop
and
push
scas
push
pop
xchg
xchg
sub
popa
rcrb
int
add
fstpt
xchg
popa
fwait
mov
mov
cwtl
sub
mov
aaa
sub
xor
mov
add
scas
outsl
outsl
pop
cmp
add
mov
adc
into
push
es
fmull
mov
enter
mov
add
sbb
mov
pop
mov
and
sbb
sahf
pop
mov
mov
test
dec
cmp
inc
repnz
sub
cmpsl
push
cwtl
rcll
data16
movsl
stos
sub
int3
and
jg
xor
lods
pop
and
and
xlat
roll
cmp
icebp
insb
pop
clc
leave
xor
xor
add
ds
fwait
push
out
mov
pop
push
mov
out
scas
lock
mov
mov
scas
pop
mov
jnp
jmp
cmp
fimuls
imul
xor
pop
bnd
adc
call
sbb
pop
jecxz
adc
pop
inc
ret
stos
sub
jnp
popa
imul
test
or
push
push
mov
cmpsl
cs
mov
in
or
div
fs
push
adc
or
mov
scas
sti
pop
and
dec
rcll
aaa
ja
cmp
push
fdivrs
or
inc
outsl
mov
jno
dec
sbb
loope
and
sbb
lret
std
js
push
mov
or
pop
add
test
mov
cmp
jnp
je
pushf
dec
ljmp
pusha
subl
inc
mov
mov
cli
pop
lahf
mov
outsb
push
aaa
mov
sub
sti
or
adc
ljmp
adc
push
and
xchg
xchg
lahf
jle
push
sarl
cmp
cmpsb
imul
popf
add
je
addb
mov
mov
mov
sbb
adc
mov
jge
aam
repz
cmp
dec
cmc
lcall
dec
xchg
stc
pop
xorl
cmpsb
in
cmp
cmpsl
adcl
and
pushf
xchg
xor
xchg
push
cmp
pop
pop
insb
sub
push
jecxz
lds
adc
std
out
add
xlat
mov
ja
xor
ror
mov
out
ljmp
lock
stos
dec
popa
lea
mov
push
shll
daa
lock
fisttpl
insl
repz
popa
add
icebp
popf
outsl
mov
jmp
jp
es
and
lods
sarb
insb
jge
aaa
bound
pop
mov
pusha
clc
and
loop
rol
fmul
sti
jnp
in
push
lock
xchg
inc
jns
iretw
fildl
cmc
sub
xchg
insl
mov
and
add
sub
push
pmuludq
add
popa
fcomip
xlat
sub
push
lds
test
sub
sub
or
jne
aam
outsb
repz
iret
jl
adc
sbb
dec
stos
inc
jb
cmp
mov
call
xor
nop
sbb
push
rcr
or
mov
xor
insb
and
imul
pop
iret
adc
in
mov
jmp
push
out
daa
jno
inc
add
push
mov
mov
loopne
mov
ret
and
sbb
pop
aam
data16
cld
inc
orb
inc
jl
or
jg
sbb
and
aas
adc
stc
mov
and
mov
sbb
jmp
rclb
xor
jne
cli
xor
lods
lret
lds
fwait
pop
or
or
push
sbb
js
push
ret
push
jg
mov
std
mov
mov
add
imul
or
pushf
push
dec
int3
sbb
mov
push
mov
pop
sub
jae
rol
divl
repz
nop
xor
iret
jmp
gs
sbb
movsb
addr16
or
fsubrl
inc
jns
out
fcmovb
jae
cwtl
popa
mov
fbld
sub
push
pusha
addb
cmpsb
ret
mov
sub
mov
es
adc
stos
stc
and
inc
sahf
dec
repz
and
call
fnstsw
gs
pop
inc
out
inc
in
shll
xchg
mov
je
add
jns
lahf
and
jecxz
adc
inc
pop
or
dec
dec
mov
pop
int3
aas
xor
fs
push
adc
subb
aaa
push
and
xor
mov
minps
pop
jns
pop
pop
divl
dec
xchg
mov
sub
xchg
movsl
stc
push
subb
daa
push
pop
fisttpl
in
in
bound
rcll
mov
mov
shr
lods
mov
jl
cmp
mov
push
adc
cmp
stos
add
int
jge
repnz
jb
push
lock
pop
testb
test
arpl
add
adc
das
cmp
adc
push
in
movsl
test
jecxz
pop
add
sub
and
and
mov
and
lcall
xor
cmp
jge
dec
cli
jne
or
les
pop
aad
jne
cs
mov
pop
out
js
subl
lcall
push
mov
jne
idivl
adc
fisubs
xchg
sbb
js
sbb
add
xchg
sbb
lret
mov
leave
push
push
inc
icebp
aad
ret
inc
out
jg,pn
and
pop
sbb
jno
pusha
fsubrs
jns
jne
out
cmp
jae
mov
pop
inc
in
cli
push
mov
push
cmpsl
mov
cmp
mov
sbb
mov
arpl
cmp
jle
iret
inc
sbbl
rolb
dec
lods
pusha
jmp
xor
and
mov
dec
xchg
mov
sbb
or
sbb
adc
xor
in
push
push
jecxz
cld
and
rcrb
pop
cmp
and
out
adc
mov
sub
mov
inc
loop
sub
idiv
int
out
pop
mov
cmp
stc
pop
sbb
mov
mov
std
sub
add
into
sub
adc
pushf
and
adcl
movsb
and
cwtl
inc
pop
cli
int3
mov
push
lods
das
mov
dec
in
call
pop
ror
jne
mov
mov
mov
xor
mov
shrl
ss
stos
int
das
mov
xchg
add
enter
iret
stos
into
fimuls
sahf
jge
fisubl
ds
mov
add
call
or
push
pop
sub
add
lcall
out
fisubrl
mov
jg
inc
push
add
or
pop
das
sbbb
arpl
lea
pop
cmp
sbb
std
hlt
or
mov
xchg
pop
scas
push
mov
or
pop
mov
jno
out
sbb
dec
cmpsl
mov
cmpsb
xchg
dec
lods
jle
insb
jl
filds
rcr
cmp
sbb
pop
out
addl
xchg
mov
in
mov
insb
jecxz
roll
das
cmpsl
dec
adc
les
mov
movsl
or
or
pop
in
cwtl
sub
imulb
dec
mov
adcl
xchg
pushf
inc
cmpsl
sub
push
pop
dec
xor
mov
pushf
jbe
and
iret
ror
lds
pop
jo
arpl
inc
pop
mov
dec
sub
shll
sub
xchg
test
adc
scas
in
stos
and
and
loopne
adc
mov
outsl
aam
test
loopne
or
aam
xor
loope
xor
xchg
out
sub
inc
mov
popa
mov
mov
add
pop
leave
shl
xchg
xlat
push
lret
lret
and
cmp
mov
xchg
add
cwtl
inc
mov
stc
push
cmp
inc
pop
je
and
sbb
cli
inc
push
mov
or
mov
and
mov
xchg
scas
movsl
jle
lret
imul
xchg
enter
push
and
icebp
lret
mov
ljmp
cltd
sbb
adc
push
inc
pop
jns
ret
inc
leave
cmp
mov
sbb
and
insb
xor
test
je
arpl
sub
into
inc
push
jb,pn
mov
jbe
fidivs
mov
dec
jecxz
in
hlt
sarb
jmp
std
fcomps
mov
mov
popf
push
jmp
cmp
into
push
std
push
fsts
mov
shrb
fbstp
insb
sbb
dec
in
push
movl
dec
jae
gs
std
cmp
jnp
add
mov
enter
les
mov
cmp
and
out
popa
xchg
je
mov
sbb
or
push
fwait
scas
rcr
mov
mov
insb
je
sbb
add
in
pop
pop
inc
mov
pop
jns
jbe
ljmp
imul
ret
arpl
stc
or
lcall
add
or
adc
cli
icebp
jecxz
xchg
pop
inc
test
roll
sbb
push
push
stos
mov
push
repnz
fistl
add
push
cmp
cmpl
inc
cmp
jbe
adc
std
enter
cs
jg
push
ret
das
sbb
fisubl
jae
mov
fmull
aas
xor
sbb
sub
cmp
xchg
mov
sub
leave
dec
out
jl
xorl
cmp
add
xchg
dec
sarb
jl
sbb
lret
aas
sbb
mov
and
jmp
int3
mov
fdivrs
and
and
xchg
addb
and
jecxz
fcomps
pop
in
mov
out
and
test
int
xor
xchg
icebp
out
push
enter
pop
adc
add
out
loop
into
sbb
inc
shrl
mov
sbb
jno
movsl
add
mov
imul
cmp
sarl
aad
cld
imull
dec
adc
mov
add
xchg
sbb
lds
jns
xor
loop
mov
push
int3
jbe
ret
clc
rcll
popa
movsb
mov
out
jnp
pushf
les
or
mov
mov
pop
or
lcall
mov
mull
mov
andl
fdivs
add
mov
sbb
mov
sub
movsb
pushf
sarl
les
outsb
popa
in
stc
push
mov
mov
sub
loopne,pn
xchg
mov
dec
movsb
jno
fsubp
pop
stc
es
push
mov
sbb
clc
lahf
mov
cmp
push
and
pop
sahf
xchg
std
movsl
push
lcall
jbe
cld
adc
sbb
cmp
adc
add
enter
cmpsl
iret
sti
shll
aaa
xor
js
addr16
sbb
xchg
cmp
push
mov
mov
imul
mov
mov
xor
je
and
inc
int3
and
rolb
sub
jo
add
cli
je
fwait
adc
mov
addr16
xchg
jge
jle
or
test
or
jo
jnp
add
cmp
jge
lret
sbb
out
xchg
mul
outsb
int3
cltd
add
aam
and
add
lahf
xchg
and
sti
mov
adc
lret
dec
mov
sub
xlat
in
and
shrb
sbb
outsl
outsb
xlat
or
mov
inc
add
adc
cmp
push
jae
pop
fisubrs
aad
mov
loop
insl
push
mov
xchg
and
int3
lea
in
cmp
loopne
cmpb
out
imull
or
shl
in
sub
adc
lods
xchg
jp
adc
mov
iret
filds
jo
dec
jmp
lret
mov
ret
pop
repnz
mov
and
sti
int
inc
push
mov
scas
movsl
clc
inc
and
or
push
into
add
xor
adc
mov
push
pop
lea
rcrb
fldpi
lahf
jl
or
push
cmovns
aas
cmp
add
fsubl
sar
hlt
lcall
sti
cmp
mov
xor
ficomps
jmp
xor
xchg
xchg
mov
fidivrl
into
insl
ljmp
lods
mov
test
jg
stc
push
inc
jmp
je
adc
or
mov
inc
scas
cmp
push
imul
mov
leave
inc
in
insb
lds
lahf
xchg
dec
xchg
or
fwait
mov
jb
lea
cmc
xchg
push
flds
sti
cld
out
adc
pop
call
and
test
les
xor
and
mov
adc
push
ljmp
insb
add
scas
clc
add
dec
sub
lret
fbld
cmp
cmpsb
sub
imul
or
jmp
fsts
inc
loope
loop
cld
dec
xor
lods
mov
dec
dec
mov
rol
out
in
cmc
sub
or
hlt
xor
sub
pushl
pop
push
sub
push
add
xchg
aaa
sub
xchg
inc
fnstenv
sub
push
push
cmp
mov
repz
insl
push
and
in
mov
arpl
jbe
loope
movsl
push
mov
aam
pop
push
xchg
lods
jecxz
pop
mov
push
out
popa
pop
rcl
call
mov
xor
pop
and
popa
add
push
out
inc
dec
mov
outsb
ds
fbstp
mov
lret
cmp
sub
inc
aam
fisubrs
sahf
cmp
pop
cmp
xor
jno
lret
inc
or
in
xchg
out
push
inc
outsb
js
addl
pop
pusha
shll
add
rcl
or
xchg
mov
daa
test
sbb
sub
mov
pop
add
lock
mov
xor
push
inc
push
ret
in
and
jb
jl
cmp
jae
mov
lea
sbbl
into
sbb
popa
testb
insb
repnz
mov
mov
out
mov
xchg
jo
loope
mov
call
mov
and
dec
imul
dec
mov
xor
cmp
imul
jmp
sub
stc
notl
test
cmp
jle
cli
jmp
pop
hlt
xlat
inc
lret
repnz
push
cli
or
aaa
lret
add
jno
call
gs
cmpsl
cmc
and
mov
jmp
fidivrs
faddl
pop
out
ficomps
sti
push
into
stos
add
mov
jecxz
mov
inc
fstl
aaa
adc
push
dec
jg
mov
das
fldt
inc
jno
cmpsb
leave
and
lcall
inc
lds
rcll
imul
cmp
mov
sbb
dec
dec
cmp
or
int3
xor
cmc
mov
leave
sbb
add
jae
inc
btc
rcll
or
cwtl
or
adc
aam
mov
push
sar
mov
inc
adc
inc
rcl
xor
addr16
shld
push
xor
xor
mov
cwtl
pop
pop
or
fxtract
inc
sbb
rol
pop
movb
cmp
push
stos
mov
ret
pop
or
xchg
inc
lahf
pusha
negb
sbb
pop
je
push
sub
jo
repz
mov
enter
fsubrl
push
data16
jns
nop
mov
mov
dec
sbb
sub
ja
pop
adc
cli
xchg
inc
cltd
insl
aad
popf
jne
in
clc
ds
cmp
push
inc
push
leave
cmc
add
into
xor
cwtl
sub
or
test
jae
lret
shll
or
sbb
repz
cmp
mov
lret
xor
aaa
loopne
sbb
and
inc
mov
or
mov
out
cmp
adcb
cmp
iret
rcrb
imul
in
ljmp
mov
sub
mov
xchg
dec
or
push
bound
push
call
insb
sub
dec
imul
sbb
jo
scas
push
sbb
in
push
add
cmp
int
sbb
xor
movsb
rcrl
sub
lcall
dec
aas
push
sbb
sbbl
les
adc
std
out
outsb
inc
pop
and
les
jge
pop
repnz
aaa
xor
les
out
sarl
mov
push
addr16
mov
popf
push
push
add
jb
clc
out
or
sub
stos
push
dec
jmp
push
cmp
mov
and
dec
cmc
push
mov
inc
xchg
fdivp
test
or
cmpsl
jae
dec
or
adc
icebp
fbstp
mov
test
adc
es
cmp
or
outsl
xchg
fimull
adc
cmp
je
jp
dec
mov
mov
popa
ljmp
std
push
enter
into
and
xchg
or
pushf
adc
xchg
cli
pop
push
dec
and
mov
xchg
adc
sub
pop
xor
inc
stc
outsl
push
cld
sub
cmp
popf
int3
mov
xchg
jno
mov
shl
pmullw
or
push
xchg
jl
fwait
push
cmp
sub
and
mov
inc
jb
sub
add
shlb
sub
lock
filds
scas
out
or
cld
lea
xor
out
or
loop
adc
fistps
jmp
scas
pop
popf
xchg
inc
jecxz
cmp
mov
sub
mov
out
sbb
shll
push
call
popa
push
mov
push
enter
jae
stos
push
push
mov
jmp
call
xchg
xor
shr
push
pop
dec
and
jg
pop
in
icebp
cmova
aad
les
lret
enter
enter
inc
aad
std
jp
mov
arpl
push
pop
dec
in
dec
stos
out
fadds
movsb
ret
into
sub
push
adc
pop
mov
push
fisttpl
sub
test
lods
xchg
ret
into
mov
or
mov
xchg
popf
rcr
pop
jge
xor
in
inc
iret
fwait
imul
mov
inc
adc
sahf
in
icebp
adc
mov
out
addr16
xchg
out
ss
mov
add
push
push
hlt
xchg
test
je
xor
or
out
xor
repnz
lds
xlat
jbe
lds
shlb
lret
jae
xchg
out
cmovl
enter
pop
and
mov
push
loop
aam
into
cld
xchg
hlt
out
into
psllw
mov
outsl
testl
fisubs
fucomp
pop
jge
push
mov
lea
and
mov
mov
dec
insb
ret
mov
out
push
lods
aas
test
push
add
pop
cmp
movsb
hlt
cmc
in
or
repnz
fwait
or
adc
mov
push
pop
dec
cmpsl
jmp
or
js
pcmpeqd
and
ss
push
and
xlat
in
adc
dec
dec
testl
out
push
cltd
fsub
movsl
jbe
in
push
pushf
rcll
sbb
cmp
les
imul
gs
push
les
shl
testl
jge
sub
push
sahf
mov
pushf
sub
or
adc
jne
or
jne
subb
adc
popa
cwtl
push
inc
xchg
xchg
push
aam
push
int
scas
sbb
jb
cmp
mov
out
adc
pop
shll
stos
or
fwait
out
xchg
fs
in
stc
dec
xor
inc
lods
fdivl
fs
mov
loope
dec
or
sub
sbb
cltd
sub
fdivl
in
shl
mov
pop
popa
test
imul
mov
add
xor
jbe
jmp
cmp
aad
jnp
jl
aaa
and
jb
pop
lods
cwtl
sarl
arpl
pop
sub
mov
mov
addr16
xor
cmp
pop
fadds
ret
movsb
fdivs
pop
jns
cmp
stos
push
push
mov
sbb
xchg
mov
sub
xor
mov
cmp
or
shrl
icebp
insl
testl
je
cltd
jo
adcb
or
jb
rep
inc
cmp
adc
insb
lods
xor
and
dec
jmp
pop
mov
sbb
add
in
push
jle
loop
and
lods
cltd
cmovns
hlt
mov
xchg
add
lret
push
es
fmul
lcall
or
pop
sbb
adc
jp
fdecstp
aas
mov
mov
scas
inc
dec
adc
pop
adc
push
test
scas
pop
inc
mov
lea
inc
mov
adc
ja
mov
mov
in
imul
in
ljmp
out
mov
mov
ret
inc
xchg
daa
xor
inc
and
divl
insl
daa
cld
jle
jo
movsl
sbb
lods
int3
or
jae
bound
inc
and
daa
adc
jo
dec
incb
insb
loop
mov
or
fdivrl
jne
jo
sbb
xor
adc
ss
or
aaa
orl
je
leave
enter
xchg
push
loopne
mov
jb
mov
mov
add
push
mov
scas
stos
jbe
call
add
mov
dec
xorb
loope
add
call
mov
fldl2t
jmp
push
dec
and
xor
jb
mov
cmp
repz
fwait
test
mov
mov
xor
leave
rcr
jl
stos
or
adc
lods
mov
ljmp
repnz
imul
jo
push
imul
inc
notb
pop
imul
scas
iret
ds
sub
imul
xchg
clc
mov
sbb
subl
xchg
cmp
jecxz
jmp
jne
mov
cmp
test
dec
test
mulb
stos
dec
cmp
pop
test
pop
stos
jle
insl
daa
scas
pop
sbb
and
jbe
out
inc
sub
xor
add
inc
hlt
sub
xchg
adc
nop
stc
movsl
mov
popf
mov
pop
std
mov
out
adc
lret
scas
mov
jecxz
ret
inc
leave
test
outsb
lret
pop
jns
cmp
nop
mov
in
mov
arpl
imul
das
sub
mov
js
iret
leave
cmp
fucomp
jns
add
sub
imul
outsb
test
stc
ss
adcl
xor
flds
xor
lea
cmpxchg8b
mov
add
test
dec
sbb
cmp
clc
es
stc
xchg
mov
rcll
pop
jle
cmp
dec
and
dec
xchg
push
jne
inc
mov
mov
dec
jae
push
mov
xor
daa
pop
cmp
dec
and
pop
xchg
sub
movsl
sub
mov
imul
imulb
xor
dec
xor
xchg
xchg
pop
imul
insb
call
ja
jne
mov
pushf
fldl
lods
add
adc
sti
inc
out
sahf
into
stos
adc
and
xor
inc
mov
add
pop
popa
pop
std
shr
mov
pop
inc
mov
add
fwait
pop
jno
dec
jb
mov
nop
pop
ja
adc
das
push
jbe
xchg
mov
and
in
pop
jns
shll
insb
mov
dec
jnp
mov
jecxz
or
or
sub
adc
pushf
loop
jno
lods
pop
lret
pop
lret
stc
xor
dec
fldl
outsb
jno
push
mov
dec
sbb
das
add
icebp
sbb
lret
pop
cmp
xor
pop
int3
adc
imul
fldt
inc
mov
mov
pop
test
adc
mov
hlt
jne
or
rorl
xchg
jecxz
fldcw
mov
stos
fcmove
iret
js
das
sbb
or
mov
push
jg
int3
repz
xchg
aaa
pop
loope
fnstcw
aam
les
out
mulb
sbb
adc
cmp
loopne
xchg
xchg
inc
sbb
push
mov
lret
cltd
les
sbb
or
mov
shl
add
xchg
xor
sub
in
mulb
clc
push
fildll
into
mov
adc
nop
popa
out
aad
lods
jbe
pusha
push
fdivl
loopne
mov
pop
das
xor
sbb
stc
shl
in
fmull
dec
push
jl
push
push
pop
cwtl
mov
or
or
jmp
or
pop
enter
push
movsb
adc
dec
roll
xor
inc
insl
negb
jp
sti
add
inc
pusha
popf
pop
xor
cmpsb
jle
outsb
fcoms
pop
aad
inc
mov
sub
cwtl
notb
mov
xchg
ss
mov
xor
mov
movsl
xchg
outsb
lcall
and
shr
inc
inc
pop
pop
add
add
mov
mov
jge
push
inc
das
lcall
icebp
ljmp
insl
push
test
aas
fdivr
sub
mov
gs
xchg
rclb
mov
rolb
nop
sbb
mov
and
outsb
push
or
fdivrl
mov
pushf
repnz
fst
std
pop
ljmp
pop
pop
cld
cmp
sbb
mov
test
stc
lcall
cmc
gs
cld
pop
adc
test
stos
jg
mov
loop
cmpsl
or
sub
cmpsl
enter
push
in
jb
inc
mov
mov
mov
test
lods
icebp
and
jo
cli
lret
xchg
in
rcll
xor
xor
mov
adcb
fnsave
xchg
pop
inc
outsl
stc
ja
sbb
mov
push
jo
outsl
das
mov
pop
dec
mov
xor
or
or
sahf
fmull
add
push
mov
out
cli
and
adc
lea
mov
es
ret
and
bound
cld
test
xchg
in
sub
test
xchg
adc
fisubl
in
pop
fwait
xor
xor
add
cmp
or
and
mov
mov
test
cmp
in
rolb
into
lahf
mov
adc
inc
popf
sbb
rolb
int
cmpsl
xchg
jae
sub
jg
cli
icebp
sbb
adc
arpl
jnp
cmp
mov
jle
xchg
fwait
stc
test
sbb
jo
sahf
sbb
xchg
or
mov
xor
adc
push
add
mov
nop
shl
cmp
cs
mov
fs
addr16
enter
or
fs
xor
in
int
add
cmp
push
stos
xor
pop
sub
sub
rorb
gs
cmp
out
fs
enter
jle
mov
cmp
push
aam
repz
or
mov
sbb
ljmp
mov
mov
sbb
push
cmp
xchg
outsb
mov
int3
push
mov
daa
test
int
ljmp
in
dec
xor
add
aaa
add
out
push
dec
lret
inc
out
mov
and
mov
xchg
fisubl
adc
sbbl
mov
aaa
dec
rcrb
repnz
inc
std
xor
enter
scas
daa
jp
cmp
cmpsb
fsubl
lds
jg
lds
adc
sbb
es
inc
xor
pop
push
xchg
mov
add
aaa
jp
jecxz
in
into
shlb
xchg
ja
test
xor
pop
add
daa
mov
mov
or
mov
in
outsl
and
cmc
mov
inc
mov
xor
cmp
xchg
in
dec
aam
push
or
sub
cli
fucomi
mov
cmp
cmpsb
xor
sahf
pop
cld
daa
lret
jl
loop
push
lods
adc
sub
jnp
mov
movsb
out
jl
aaa
roll
mov
outsb
push
sbb
insb
aaa
clc
xorb
add
mov
test
sbb
add
loop
push
add
xor
mov
lret
jle
mov
xchg
test
arpl
inc
jbe
cli
cli
gs
cmpsl
repnz
adc
repz
ljmp
aaa
repnz
jp
mov
test
out
sub
mov
dec
ss
push
loope
in
pop
cmp
xor
xchg
ss
adc
ss
pop
sub
push
lcall
pop
ljmp
mov
pop
inc
lcall
repnz
push
jp
out
nop
mov
add
pop
imul
dec
sbb
scas
test
fiaddl
lahf
enter
adc
sub
adc
xor
lds
addr16
sub
jp
lods
or
dec
movsb
mov
ret
shll
lock
shll
mov
in
xor
int3
dec
xor
cwtl
or
xor
insb
pop
cmp
mov
ficoms
test
ret
mov
and
mov
mov
inc
mov
and
sub
push
pop
add
mov
mov
ffree
and
int
add
jge
pop
inc
add
push
pop
dec
or
das
aaa
cmc
gs
test
xchg
dec
add
xchg
jb
scas
out
js
mov
mov
jne
popl
mov
mov
dec
sub
fisubrs
cmpsl
repz
xor
jnp
dec
call
aad
out
sub
dec
mov
std
out
mov
push
arpl
fstps
push
cltd
jg
xor
pop
inc
xchg
push
pusha
out
movsbl
pop
fldl
inc
inc
lods
push
push
mov
mov
in
movsb
movsl
xchg
add
mov
push
enter
addr16
xchg
leave
int
fs
cmp
fcomps
cmpsl
mov
pop
xorl
inc
inc
mov
repnz
inc
dec
into
sbb
sub
rcrl
push
mov
jns
push
inc
lret
add
mov
push
push
in
insl
sbb
lods
out
aad
push
nop
hlt
imul
out
xchg
inc
rcrb
lret
mov
addr16
xor
push
inc
pop
mov
test
cmp
aam
std
dec
popa
push
in
neg
fldcw
cmp
add
fiadds
icebp
call
lea
insl
xor
enter
xorb
inc
outsb
in
push
push
addr16
sbb
jmp
mov
fxch
ljmp
pushf
sbb
inc
sbb
push
mov
sub
add
push
mov
das
lret
movsl
push
inc
jb
xor
aas
xchg
insb
push
cmc
cmp
out
add
sbb
cmp
stos
sub
in
and
jle
fiaddl
add
jp
mov
cmc
sub
fdivrs
hlt
imul
jb
sub
sub
add
pop
mov
inc
dec
adc
push
outsb
lods
out
dec
jle
dec
pop
xchg
push
xchg
mov
daa
pop
xchg
in
adc
loop
jo
adc
push
dec
lods
iret
inc
into
scas
push
inc
cmp
lcall
in
mov
insb
movsb
mov
sub
mov
pop
xchg
cmp
adc
mov
pop
mov
out
mov
push
lods
or
int3
in
cmp
xor
fldcw
out
mov
pop
daa
mov
mov
mov
ja
push
adc
adc
stc
aas
dec
mov
sbb
mov
push
pop
jge
cmp
fcoms
mov
loopne
jno
pop
jmp
out
inc
fdivp
lret
add
imul
mov
sub
mov
test
mov
mov
push
addr16
nop
pop
cwtl
ja
and
inc
jl
push
imul
sbb
addr16
mov
ss
aas
pop
ret
pop
ds
gs
cmpsb
repnz
out
cmp
sub
mov
mov
push
stos
add
leave
std
push
mov
pop
push
jp
and
adc
xchg
cs
mov
jae
arpl
out
pop
mov
and
jo
mov
and
and
mov
xor
or
ljmp
leave
js
shrl
insl
jnp
loop
vpsrad
xchg
imulb
in
jmp
jg
adc
jno
pushf
jecxz
mov
rcr
imul
mov
in
and
sub
dec
outsl
std
pushf
fiaddl
popf
aaa
hlt
cmc
bound
sub
mov
test
xchg
jmp
ss
adc
lcall
dec
es
das
mov
aad
negl
mov
or
nop
xor
xor
xor
loop
ret
add
jnp
fldenv
iret
pop
push
test
pop
push
sarl
lahf
and
mov
push
mov
test
jge
std
cld
push
nop
add
call
mov
dec
add
jnp
push
inc
jbe
sbb
or
push
aaa
divb
inc
inc
arpl
xchg
jecxz
lcall
push
xchg
insl
scas
das
mov
fldl
dec
and
push
loope
jne
les
imul
cmp
dec
pop
lea
scas
add
adc
push
ljmp
push
push
ljmp
mov
icebp
rcrb
addr16
das
and
mov
mov
cmp
les
into
jno
test
scas
cmp
add
rorb
movsb
lret
push
xlat
in
and
inc
push
cmp
testb
push
inc
call
pop
push
adcb
je
mov
jnp
ljmp
or
lea
out
adc
sbb
mov
jns
adc
je
out
shl
loop
xchg
mov
xor
addr16
mov
cwtl
or
mov
repz
dec
popf
sbb
cltd
push
ret
stc
loop
stos
jno
cmpsl
fcmovu
mov
mov
sub
or
mov
fiaddl
jnp
test
shll
shl
or
xor
jb
fisttps
and
pop
pop
int3
inc
insb
movsl
and
imul
sti
das
sub
enter
jp
lea
rcll
aaa
jl
xchg
lods
inc
jne
cmp
inc
shrl
mov
inc
ds
sub
xchg
fsubl
or
xor
fstpt
out
pusha
adc
or
sub
inc
sbb
mov
outsl
mov
scas
movsb
pop
mov
repnz
jmp
mov
outsl
push
xchg
nop
ss
dec
cmp
sbb
lret
cmpsl
push
iret
pop
or
lods
fldl
scas
ljmp
inc
adc
adcl
iret
jne
cmpsl
jae
test
push
dec
jp
jnp
jl
sahf
mov
aad
jle
mov
mov
and
subl
xchg
stos
and
popa
jno
xor
pop
or
sub
insb
mov
xor
jnp
jmp
sbb
out
in
dec
sub
imul
pop
xor
popa
clc
lea
loopne
sub
ret
jns
cmpsb
or
sub
ffreep
jns
push
push
pop
int3
loop,pn
mulb
xor
ljmp
adc
in
dec
lret
hlt
pop
lcall
jbe
and
push
jno
fiadds
stos
mov
repz
scas
inc
inc
insb
pop
mov
jo
scas
lock
xchg
bound
xchg
fs
imul
xor
aas
inc
dec
lret
cmp
sbb
aaa
adc
pop
dec
xchg
pop
int
or
ds
lds
dec
jae
sub
leave
int
xor
ja
ss
int3
repz
jb
fmuls
cmp
pop
xchg
data16
lds
inc
loopne
xchg
mov
jp
les
sub
ret
mov
stos
pop
nop
ss
jle
inc
add
cmp
mov
daa
aam
xchg
out
xchg
push
fdivrl
popf
or
cmpsl
clc
push
sbb
outsl
lods
adc
repnz
jge
jl
mov
fcmovu
popf
pusha
push
and
cmp
ret
sbb
lret
lock
pop
add
stos
mov
jae
add
sub
mov
cmp
push
icebp
aam
xlat
mov
sbb
mov
data16
out
jbe
iret
popf
data16
xor
xchg
fcomps
or
xchg
cmpsl
cmp
inc
test
sarb
pop
cmpsb
add
lods
repnz
lods
jge
or
xor
dec
fmull
mov
mov
arpl
flds
movsb
outsl
xchg
popa
pop
xor
jle
pop
sub
xchg
inc
sarb
sbb
mov
rcr
icebp
mov
or
mov
sarl
adc
sahf
xor
dec
mov
sub
push
inc
cld
or
cli
js
inc
aam
mov
int
and
dec
jne
jecxz
add
ret
sub
jo
mov
icebp
cmp
sub
lods
mov
inc
mov
stos
fwait
loop
inc
mov
add
add
sub
push
scas
shrb
jmp
shl
or
or
push
in
push
sbb
or
adc
in
sbb
rorl
or
icebp
adc
loope
xchg
popa
fwait
hlt
push
mov
popa
rcrb
inc
push
xchg
std
add
jp
ja
popl
pop
dec
jl
ffreep
fsubs
negb
push
inc
push
lods
cmp
movsb
and
sti
jmp
std
roll
gs
mov
mov
negb
jmp
sbb
stc
and
mov
or
ja
in
ss
inc
cli
push
push
mov
fcomps
mov
xchg
xchg
xor
int
jecxz
pop
cld
add
das
or
add
push
imul
das
fists
or
sub
xchg
sahf
hlt
jnp
pushf
jns
fcoml
jo
je
xchg
jle
mov
jno
fmul
cmp
xorb
dec
lcall
imul
cli
xchg
in
in
jbe
push
push
push
fnsave
or
dec
cmp
movzbl
sub
repz
dec
out
cmp
movsl
mov
fs
lods
jp
pop
push
sub
adc
xor
ret
insb
xor
sub
sti
popa
mov
push
fidivrs
mov
inc
cmc
cmp
in
mov
pop
cld
pop
jg
sbb
or
dec
mov
mov
adc
adc
push
mov
adc
xor
cmp
and
jns
je
mov
fs
cmp
xchg
cltd
mov
jne
mov
out
jno
jb
sti
ds
sub
cli
test
fldcw
inc
pop
lods
ja
pop
sbb
mov
mov
loopne
xor
test
inc
movsb
fs
in
pop
push
xchg
sub
mov
test
ja
das
dec
pslld
rorb
inc
sar
inc
cs
ja
pop
leave
stos
add
pop
pop
cmp
mov
xor
adc
fsubrs
dec
push
repz
dec
ss
stc
mov
pop
decl
fidivrs
and
adc
push
add
mov
mov
outsl
lret
add
mov
sbb
iret
add
arpl
dec
push
pop
loopne
adc
popf
push
insb
popa
test
sub
hlt
cwtl
repnz
push
div
sub
jne
xchg
sbb
imul
jb
cwtl
mov
popa
ds
mov
jne
int
sbb
mov
push
push
ret
loopne
pusha
fstps
and
aam
sbbb
aad
mov
adc
push
xlat
stos
aaa
jb
adc
xchg
dec
push
jb
mov
cmp
hlt
data16
repnz
jge
mov
or
std
xor
mov
pop
fisttpll
imul
and
scas
jge
fcompl
inc
adc
aaa
out
adc
filds
out
sbb
movsl
xor
adc
outsb
shr
jno
and
loope
scas
ret
push
arpl
enter
pop
cmpb
int3
in
fildll
mov
xchg
add
mov
gs
dec
or
pop
insb
je
push
dec
push
jle
cmpsl
xchg
cmp
ja
bound
xor
mov
xor
test
and
push
mov
in
cmp
dec
and
xor
sbb
mov
lret
cmp
sbb
mov
das
pop
xor
scas
aad
and
push
xchg
sbb
mov
mov
and
rolb
lea
xchg
mull
push
xchg
lret
pop
out
lret
and
jo
adc
mov
add
data16
out
xlat
mov
or
stos
cmp
ja
push
inc
outsl
or
pop
lds
cmp
fwait
push
repnz
xor
sub
clc
pop
data16
sbb
mov
sarl
fsubp
popa
jnp
mov
repnz
lahf
int
adc
mov
repnz
push
mov
xchg
adc
cmpsb
repz
cmp
mov
jae
dec
xor
fistl
insb
adc
fisttps
and
lock
mov
rcrb
pop
xlat
jno
fld
leave
push
mov
sahf
fwait
add
cmp
or
fsubrs
gs
aas
fdivr
aaa
popa
jmp
pushf
xchg
rol
add
inc
cld
test
ret
mov
fcoms
adcb
dec
jg
push
xchg
mov
or
dec
dec
or
es
and
jecxz
cmp
jecxz
or
sbb
adc
fwait
mov
xchg
inc
movsb
cmp
inc
pop
call
jo
in
pop
or
sbb
shl
or
push
xor
add
or
or
push
jo
je
xor
xchg
movsl
mov
mov
movsl
or
int
pop
fnstenv
subb
out
add
mov
in
dec
cmp
and
in
out
mov
push
fsubs
push
adc
ja
jmp
adc
fs
mov
popa
adc
lock
jg
jp
mov
decb
add
addr16
mov
dec
jle
cmp
dec
xlat
jae
leave
enter
mov
pop
jb,pt
aaa
lea
pop
sbb
add
mov
bound
insb
mov
das
vpacksswb
in
pushf
cmp
push
out
add
lock
mov
das
subb
scas
out
inc
test
mov
adcl
jo
or
call
push
lods
inc
int
and
fisttpll
fcmove
mov
and
repz
push
int
inc
cld
push
pop
lds
clc
dec
mov
test
fisttpl
jecxz
testb
icebp
jge
inc
scas
enter
outsb
jns
or
xchg
repnz
into
fadds
repnz
ficompl
fstpl
and
and
jg
popa
add
pop
pop
mov
pop
test
sti
jae,pt
or
movsb
insb
mov
lds
lds
movsl
es
repz
inc
outsb
imul
addb
xchg
fsubrl
sbb
fldenv
dec
sbb
rorb
dec
cmp
mov
gs
out
test
cltd
enter
jnp
or
ljmp
push
in
jnp
ret
and
jo
fsts
lret
movsl
rorb
imul
jo
stc
mov
arpl
and
in
push
pusha
mov
aas
or
cmp
out
and
les
int
lods
mov
jae
cmp
lret
jg
es
repnz
movsb
movsl
xor
int
mov
xchg
mov
add
cli
mov
push
jmp
jne
call
std
xchg
and
pop
dec
loopne
out
mov
adc
sub
cmp
lret
jbe
stos
ds
pop
mov
xchg
sub
inc
mov
into
in
sub
xchg
test
aam
loopne
lock
rcrb
lahf
ret
rcr
testl
xchg
loopne
fildll
mov
enter
adc
mov
shl
addl
cmp
lahf
into
jae
shlb
adc
push
fnsave
stc
hlt
adcl
mov
add
cmpsl
or
jp
cmp
xchg
or
sbb
push
ds
lret
je
mov
stos
sbb
fs
add
imul
ds
lahf
in
add
js
popa
dec
mov
mov
repnz
aaa
decl
or
cli
sbb
in
jp
movsb
xchg
das
hlt
mov
sarl
jae
ret
add
fdivrs
dec
push
stos
or
jo
mov
in
cmp
add
or
dec
and
in
call
pop
jo
hlt
inc
gs
fwait
mov
pop
cmpsb
pop
pop
repz
dec
xchg
and
pop
mov
mov
jae
mov
fstps
xchg
aaa
inc
mov
stc
subb
out
mov
mov
push
ret
fdivrs
inc
imul
pop
daa
dec
stc
add
decl
and
cmp
adc
inc
mov
cmp
dec
pop
addl
sahf
dec
jo
lods
out
fs
lods
outsl
arpl
or
addl
test
pop
es
dec
and
xor
out
pusha
sub
gs
cmp
mov
jne
add
notl
pop
cmp
loop
push
sub
loopne
jbe
pop
add
xchg
cmpsl
jnp
ljmp
and
inc
mov
xor
ljmp
pop
cmpsl
pop
and
dec
scas
out
cltd
or
and
or
nop
add
cmp
adc
sbb
and
mov
mov
out
daa
out
and
imul
push
jl
arpl
mov
int3
cli
aad
mov
mov
or
divl
sbb
mov
sbb
sub
adcb
clc
popf
and
add
mov
cmp
in
les
roll
loope
mov
loope
cmp
adc
insb
cmp
or
push
sub
pushf
movsb
cmpsb
mov
mov
js
inc
es
rcll
sar
data16
sub
insb
pop
jns
in
call
fnstsw
cli
test
push
mov
insl
jbe
ljmp
rorb
xchg
addl
mov
xorl
lret
cmp
push
xchg
mov
ljmp
push
test
push
inc
mov
mov
bound
scas
xor
outsb
cwtl
or
notl
mov
xchg
add
mov
movsb
scas
mov
mov
aaa
ds
repnz
inc
out
lods
jle
imul
test
js
add
push
pop
pop
fwait
es
adc
jl
mov
adc
mov
lahf
std
cmp
or
testl
or
cli
inc
mov
sbb
lahf
push
or
inc
pop
test
dec
mov
jns
cmp
push
push
mov
fs
aad
enter
sbb
cmp
das
bound
pushf
push
mov
enter
ds
sub
push
ss
lock
xchg
add
lret
call
arpl
out
inc
movsl
in
movl
pushf
jge
mov
dec
out
mov
ss
add
std
jne
lods
mov
or
push
cld
xor
ret
add
shll
xor
push
push
cmp
dec
inc
ficompl
dec
xchg
xchg
pop
cmp
repnz
mov
pushf
pop
jg
les
mov
inc
lahf
scas
hlt
push
sbb
cmp
dec
mov
jg
add
ret
movl
inc
cli
xchg
pop
call
in
orb
pop
xchg
jno
lret
outsb
or
cmp
inc
cmp
sbb
test
scas
ret
fsubrs
dec
popa
sahf
outsb
aaa
subb
decb
mov
insb
pop
jg
fimull
mov
clc
daa
cmp
aaa
sub
xor
sbb
jecxz
fwait
pop
and
test
pop
mov
aad
cmpsl
sbbl
fwait
out
inc
pop
inc
xchg
pop
jmp
add
imul
daa
lods
jge
out
pop
arpl
add
pop
push
xor
dec
jnp
int
adc
aad
sbb
mov
pop
jb
adc
fdivp
and
or
cmp
jge
mov
std
jbe
mov
and
xor
push
pop
jns
mov
cltd
cs
insl
mov
cmp
je
add
js
testb
clc
xor
mov
insb
xor
adc
shlb
std
add
rorb
imul
rolb
xchg
pop
mov
mov
shr
jo
sbb
sahf
jg
xor
loope
xchg
addr16
fisttpl
scas
pop
das
jp
fisubl
outsl
sbb
jecxz
shld
mov
stc
dec
icebp
ljmp
popa
cmp
mov
ljmp
lret
ljmp
ret
mull
in
push
adc
jns
sbb
xchg
in
inc
inc
les
xchg
call
push
pop
fcmovnbe
test
test
mov
imul
mov
push
iret
loope
add
jmp
out
int3
lahf
sub
std
mov
int
mov
loop
stos
lea
xor
insl
cmpsl
fcoml
loope,pt
adc
je
out
repnz
push
stc
das
test
jnp
ret
fcoms
dec
push
jnp
and
cmpsl
xchg
div
addl
ds
inc
adc
cmp
add
out
and
jo
pop
pop
movsl
repnz
inc
cmp
fstps
adc
iret
in
push
cld
lret
das
jae
and
dec
jmp
sbb
test
and
or
push
repnz
pop
xor
lods
adc
sahf
inc
cmpsb
in
das
jmp
cwtl
xor
or
fs
dec
pop
mull
mov
and
xor
test
hlt
jecxz
pop
mov
jnp
pop
jo
out
scas
lds
pop
fstpl
xchg
or
mov
xchg
enter
scas
jge,pn
xchg
out
stos
aam
lock
push
fisubs
iret
iret
mov
insl
push
aam
in
push
or
fildll
insb
repz
stos
movsb
das
mov
add
cmpsb
or
into
inc
jmp
sbb
test
jbe
inc
call
pop
sub
pusha
ret
xchg
adc
stc
or
leave
lods
dec
cmp
jnp
jecxz
mov
mov
lods
aaa
jp
in
mov
ret
push
sub
dec
cli
xorl
stos
fwait
push
arpl
adcb
mov
cmc
int3
push
faddl
mov
mov
popf
xchg
jnp
rorb
shrb
fs
xor
imul
idivb
jo
cmp
cmpsl
cmp
into
sbb
lret
dec
cmp
lods
call
jb
je
and
or
ss
mov
inc
and
xor
inc
out
es
push
jns
stos
fucomi
sti
shrb
lcall
addr16
push
or
insb
fwait
shlb
cs
mov
inc
ja
xchg
inc
stos
mov
stc
adc
loopne
pop
fsubs
repnz
and
xchg
jecxz
jle
or
lock
and
mov
bound
loopne
or
add
adc
push
adc
sahf
push
call
or
jle
ljmp
shlb
std
xor
lret
mov
mov
or
add
ljmp
bound
inc
sar
in
mov
test
paddusb
fsubrs
push
outsb
mov
mov
js
hlt
lcall
mov
pop
cltd
sti
jle
mov
movb
xlat
push
push
xchg
icebp
or
mov
xor
lcall
mov
cmp
jle
movsl
and
pop
xchg
dec
sbb
cmc
aam
test
mov
mov
sbb
iret
xchg
aad
sbbl
mulps
loop
adc
aad
in
push
out
and
or
add
fdivr
xor
lret
mov
pop
sub
ret
jmp
add
xchg
aam
pusha
dec
icebp
xchg
das
fs
call
call
sti
popa
pop
xchg
push
pop
pop
jmp
and
cmp
aad
jg
xorb
stos
inc
cmp
jle
push
xchg
fildll
add
sub
sub
fsubrs
insb
in
divb
jnp
jo
dec
cs
xor
mov
inc
lds
shlb
aam
aam
xor
mov
or
stos
xchg
dec
mov
pop
in
and
test
mov
or
inc
les
push
mov
mov
fnsave
xchg
ja
nop
lods
cmp
cmpl
es
xchg
lahf
sar
jae
jno
mov
inc
into
jmp
mov
mov
fwait
mov
gs
xchg
mov
dec
mov
test
mov
mov
pop
mov
int
pusha
imul
cmp
fidivl
mov
mov
pop
mov
popf
outsb
inc
cmp
inc
iret
pushf
aas
pop
fwait
out
das
dec
aad
lds
fdivr
mov
call
mov
insl
xchg
cmc
sbb
dec
cmp
xor
xor
lahf
mov
iret
das
sarl
out
mov
pushf
dec
in
outsl
inc
pusha
jno
pop
dec
pushf
lcall
test
xchg
jbe
sbb
out
add
mov
sub
or
pushf
insb
in
mov
mov
dec
jg
add
sub
cmp
aad
sub
cmp
mov
inc
dec
push
dec
jp
xchg
ja
push
pushf
push
arpl
sbb
ds
push
aas
cli
dec
mov
pop
pop
fstpl
pusha
push
inc
dec
add
insb
inc
dec
mov
test
cmp
inc
mov
loopne
jne
lock
movsl
gs
stos
or
fistps
sarb
sbb
xchg
and
or
mov
add
mov
fists
mov
jle
xchg
sub
int
ret
arpl
cmp
xchg
mov
movsl
into
movsb
mov
cli
mov
clc
lret
popa
in
inc
imul
pop
push
scas
mov
push
pop
or
sub
mov
nop
cs
inc
jbe
mov
dec
cmp
scas
pop
mov
es
aaa
mov
adcl
xchg
inc
das
add
loope
sub
aad
push
cltd
aas
orl
pop
into
fists
dec
or
add
dec
loope
out
test
popa
push
mov
stos
scas
pop
cwtl
stos
aas
insl
loope
mov
push
in
sub
ss
sbb
sub
repnz
xchg
movsl
je
cld
sub
jae
lods
ret
imul
inc
add
lret
arpl
stos
push
nop
sbb
push
xchg
adc
push
jo
pop
paddq
shlb
in
inc
fisubrl
or
sti
push
gs
leave
in
jbe
outsl
push
dec
pop
mov
and
cmp
dec
mov
sub
mov
dec
mov
int3
sbb
inc
add
cmp
sti
arpl
push
mov
inc
pop
out
jns
sti
or
aas
push
aad
cmp
jge
inc
hlt
and
or
push
sbb
pop
sbb
ss
repz
sub
mov
cmp
push
mov
jno
mov
inc
lahf
and
addr16
mov
mov
push
cmp
xchg
adc
sub
push
sbb
movsl
pushf
gs
fisttps
les
ds
mov
mov
mov
adc
imul
ret
outsb
push
xlat
and
cltd
dec
xchg
je
push
jl
dec
adc
mov
in
stos
clc
dec
jno
pop
hlt
sub
aas
inc
pop
jns
xor
dec
loop
push
cmpsl
xor
sub
aad
jmp
sarb
mov
xor
xor
pushf
xor
adc
outsb
pushf
mov
test
out
popa
test
std
scas
arpl
insb
lea
pop
sub
sbb
jge
adc
or
aad
inc
inc
aas
mov
pop
fdiv
shlb
mov
stc
pop
jl
dec
pmulhw
ficompl
movsb
std
jmp
sub
sub
cmp
lods
cwtl
aas
cmp
mov
xchg
jnp
scas
xchg
and
movsl
pop
shl
jb
fs
fstpl
xchg
dec
inc
sar
bound
and
in
xor
les
dec
cwtl
sbb
push
mov
fwait
and
mov
das
stos
aam
in
stos
popf
lea
test
inc
push
add
shrl
sti
or
es
mov
xor
adcl
push
jno
sbb
and
std
out
adc
inc
enter
cmp
adc
mov
cs
sti
shlb
mov
sub
pop
dec
testb
pop
rcll
scas
add
bnd
or
pop
mov
or
loope
push
push
fwait
xorb
fsubrs
xor
pushf
dec
sub
in
mov
mov
pop
aas
sub
sbb
movl
mov
or
ja
mov
xchg
notb
jae
les
push
mov
pop
into
lock
sub
pop
movsb
fwait
mov
mov
inc
arpl
xchg
scas
mov
xchg
add
inc
xor
in
cmp
rcll
sub
pusha
xchg
pop
sub
dec
mov
std
out
push
iret
mov
ret
clc
mov
popa
aam
push
out
jb
loopne
fildl
sbb
loope
xor
ret
push
lcall
jb
add
and
pop
stc
mov
lahf
popf
mov
call
cltd
pusha
nop
push
pusha
add
lods
jge
aad
xor
push
jno
xchg
mov
fistps
pop
cmp
adc
pusha
aam
jnp
cmp
aam
popa
push
in
or
push
adc
mov
pop
mov
mov
dec
adc
mov
andl
stc
or
scas
dec
xchg
lds
xlat
push
inc
imul
lahf
push
inc
jecxz
fstpl
std
jne
stc
xchg
sub
test
xor
inc
rcl
add
jno
iret
leave
mov
push
push
mov
mov
push
add
sbb
xchg
lret
xchg
push
daa
mov
insb
cmc
loop
jns
pop
out
pop
mov
ja
imul
pop
inc
dec
stos
shrl
sub
ja
and
mov
pop
xchg
add
or
add
nop
add
mov
sbb
mov
or
mov
das
sub
sbb
test
leave
aam
mov
jg
mov
jg
mov
sbb
hlt
xchg
inc
jno
mov
add
mov
mov
jmp
jmp
push
cltd
mov
jno
cltd
fiadds
xlat
pop
cmpsl
or
lods
mov
outsb
ret
loop
cmp
notb
cwtl
add
and
and
subl
cmp
aas
and
pop
cmp
roll
push
loope
pusha
sbb
or
sbb
xor
insl
jbe
adc
cmp
repnz
test
iret
and
cmp
inc
dec
mov
pop
xor
pusha
xor
push
fcomps
cwtl
sub
ret
dec
dec
push
daa
sbb
dec
nop
cs
stos
push
fs
fnsave
insb
adc
cmpsl
test
std
clc
cmpsl
jle
sub
faddl
in
dec
cmp
je
xor
mov
arpl
pop
pop
push
xchg
add
add
add
pop
data16
jl
xchg
faddp
jmp
mov
cmp
inc
test
loop
jle
pop
daa
aas
addr16
add
mov
and
movsl
push
inc
dec
addr16
jb
jns
ds
dec
into
les
pop
sub
add
daa
mov
aam
das
mov
test
pmovmskb
movsb
dec
xchg
mov
ds
xor
popf
pop
in
cltd
andl
je
repz
lods
test
lret
jle
xor
push
mov
pop
mov
and
les
repnz
loopne
xchg
mov
jge
pop
out
add
popf
fistpl
mov
cmp
jp
gs
mov
scas
lcall
and
push
and
dec
nop
dec
mov
adc
lahf
jmp
shlb
push
outsb
jne
xchg
jae
fs
cli
mov
enter
or
push
jns
sbb
mov
pop
sbb
pop
out
jg
add
inc
mov
inc
jle
or
add
pop
imul
add
mov
fisttps
mov
popa
out
xchg
idiv
iret
or
pop
pusha
push
aas
insb
lret
ret
lods
push
pop
fidivs
dec
mov
pop
dec
repnz
rcll
pop
push
js
inc
out
cs
lock
xchg
adc
ror
xchg
xchg
mov
aad
mov
scas
add
xorb
mov
xchg
pop
ja
xor
out
mov
aam
xor
lods
ja
dec
fsubrl
xrelease
cld
mov
ds
sbb
pop
fistps
lahf
sub
iret
xor
inc
xchg
pop
stos
rorl
nop
mov
push
add
out
stos
shr
mov
subl
push
xchg
xchg
mov
fnsave
pop
push
je
mov
mov
call
imul
pusha
push
sub
loopne
xchg
jno
hlt
orl
sahf
or
insb
insl
cmp
fdivr
icebp
dec
js
mov
push
adc
mov
test
movsl
rcrb
pop
push
push
jmp
jnp
hlt
push
jp
adc
ja
iret
outsb
loop
in
mov
movsl
cmovl
xchg
mov
outsb
imul
ret
jg
outsl
fdivl
fcom
jp
call
jle
cmp
xor
cwtl
jle
push
popa
sti
enter
inc
iret
stc
and
lea
push
cmpsl
mov
stc
jmp
inc
xchg
xor
push
mov
mov
add
cmp
or
sbb
loope
cs
nop
pop
and
mov
or
cmpsb
fcoms
mov
lds
jne
mov
addb
push
xchg
jno
add
pop
iret
cltd
lds
inc
mov
divb
scas
push
push
cmp
aam
xlat
inc
push
cmp
popa
pop
daa
jecxz
int3
mov
mov
in
xchg
pop
rcrb
mov
sub
lret
mov
xor
cmp
adc
pop
sbb
out
or
dec
xchg
adc
inc
aas
sti
xchg
pop
mov
pop
jbe
sbb
push
addr16
xchg
js
cwtl
mov
mov
add
loop
push
xchg
jge
sarl
fstps
cwtl
mov
scas
scas
lods
mov
data16
sub
out
dec
jle
add
mov
lret
adc
adc
imul
mov
sub
mov
jl
lods
imull
sub
pop
leave
loopne
cltd
and
adc
ds
inc
xchg
fwait
jecxz
enter
nop
sub
sub
jbe
sbb
lcall
and
sub
mov
pop
adc
lods
imul
icebp
push
loopne
movsl
cmc
out
dec
push
inc
jnp
push
sub
out
mov
xchg
adc
sbb
inc
filds
push
xor
mov
aas
fstpl
rorb
xor
aam
cli
add
push
pop
cld
xchg
xchg
or
in
and
jne
sub
and
mov
inc
pop
jmp
add
enter
dec
inc
push
or
jns
daa
lret
jae
xlat
pop
jmp
xor
es
mov
std
cmpsb
cli
test
insb
sub
out
jmp
lods
out
loope
cmp
mov
lds
pop
cs
sbb
cli
lahf
lods
repnz
pop
iret
push
pop
scas
pop
push
push
jp
cli
jmp
mov
jle
stos
mov
dec
aaa
xchg
xchg
test
fdivrl
enter
adcl
jmp
cmp
jle
popa
sarb
enter
aaa
cmp
or
jecxz
int3
fcomps
xor
mov
stos
scas
dec
pop
cs
in
loop
xchg
mov
dec
jmp
xchg
negb
mov
pop
adc
lcall
shll
nop
adc
nop
notb
in
sub
and
jnp
inc
or
sbb
fildll
push
push
stos
push
sub
gs
mov
pop
in
dec
inc
jecxz
arpl
incl
xor
mov
sub
in
or
jp
mov
rcr
xor
sbb
xchg
xor
cmp
jno
adc
mov
lods
cmp
out
call
sbb
sbb
sbb
push
in
mov
loope
test
sti
test
jae
fcompl
mov
xchg
fistl
xchg
and
rcll
mov
inc
xchg
cmpl
loopne
pop
mov
push
mov
test
xchg
or
and
xchg
int
fisttps
out
repz
shr
or
jle
xchg
roll
mov
mov
xchg
mov
fwait
mov
mov
mov
or
lods
daa
dec
xchg
mov
inc
jle
pop
push
dec
call
and
int3
pop
popf
adc
sub
bound
stc
pop
ljmp
and
loopne
cmp
dec
inc
mov
mov
paddd
shl
add
jmp
mov
sbb
bound
cmc
sbb
push
test
xor
dec
sub
hlt
add
out
out
push
push
stos
lods
js
xchg
xchg
lahf
sbb
sbb
mov
sub
inc
jl
hlt
mov
les
ja
jp
mov
ss
jbe
push
mov
jae
in
lock
mov
pop
pop
ljmp
ret
inc
stc
cmp
ret
test
jg
cmpsl
mov
ja
sub
sarb
fsts
call
pop
and
sub
outsb
call
out
dec
lea
jno
and
insb
lods
out
fnsave
cmp
int
or
mov
repz
pop
xchg
sarl
xchg
lods
mov
sbb
fisttpl
sub
push
out
xchg
sarl
xchg
movsl
inc
lods
cmp
ret
div
inc
jge
xchg
in
mov
xor
cmpsb
scas
or
xor
repnz
bound
xor
cld
mov
popa
sub
je
sub
mov
mov
fistl
push
push
mov
orb
push
jle
cmp
pop
add
shrb
aad
cmp
mov
scas
inc
adc
decb
fs
xchg
or
mov
mov
loopew
hlt
call
dec
pusha
cmp
lods
xor
mov
in
xorl
je
pushf
add
popl
mov
js
pop
mov
bnd
repz
stos
and
mov
mov
int3
stc
incb
pushf
loope
add
les
cli
cmovb
adc
pop
pop
add
aad
lret
fs
fimuls
or
popa
push
insl
daa
and
mov
mov
jne
xchg
cmp
push
mov
fs
and
rcrl
mov
push
hlt
addr16
inc
mov
xor
jo
in
mov
mov
test
stc
mov
jl
aam
arpl
pop
xchg
jns
les
jnp
sti
mov
add
out
fnstenv
in
ss
lds
jmp
pop
sbb
xor
mov
mov
je
dec
xor
aad
jmp
cmp
dec
push
mov
mov
mov
xor
lea
movsl
pop
loop
lock
stos
int
jg
cli
stos
dec
cmp
push
mov
or
test
fdivl
push
push
std
test
add
pop
jns
in
mov
push
sbb
test
clc
push
jmp
cmp
mov
mov
icebp
roll
dec
mov
dec
xor
std
and
daa
inc
inc
gs
sub
movsb
jne
out
or
mov
sar
repnz
fsubrp
cmp
sbb
in
rolb
adc
xchg
jmp
das
repz
out
pop
scas
and
xchg
imul
inc
xor
adc
sub
ret
mov
inc
pop
mov
fldenv
mov
mov
dec
sub
sbbl
es
sub
xchg
insb
and
je
sub
jbe
imul
iret
iret
imul
test
mov
shlb
jp
aad
xor
push
push
xchg
inc
adc
dec
sub
addr16
pop
out
repz
cwtl
int3
dec
cli
insl
mov
test
xchg
fcmovnb
rorb
push
mov
fwait
cmp
sbb
fisubrl
lret
mov
cmp
into
clc
cltd
mov
bound
push
fisubl
clc
mov
mov
data16
cmpsl
xchg
inc
pop
adc
xor
aaa
lret
adc
loop
sbb
paddsb
scas
ss
int
inc
std
aaa
aaa
push
mov
and
outsl
out
and
cwtl
bnd
xlat
add
jg
fsubrl
insb
aad
sub
addl
dec
lds
lret
mov
jae
jle
mov
jne
mov
cwtl
fnstenv
pusha
test
push
or
aas
hlt
cwtl
mov
stos
mov
mov
add
imul
rcrl
stc
icebp
retw
call
mov
dec
insb
loop
lock
jl
push
dec
rol
or
subb
test
mov
sbb
arpl
or
push
int
out
in
xchg
les
daa
js
cwtl
xor
xchg
cmp
popa
xor
stos
stc
mov
sar
sbb
loop
add
aaa
out
jecxz
std
and
rcll
lahf
mov
sbb
inc
popa
sub
ret
jae
push
js
xchg
outsb
mov
xchg
add
cmp
outsb
and
in
insl
sbb
mov
outsb
fstps
mov
cwtl
dec
jge
iret
dec
mov
pop
pop
incl
scas
psraw
pushf
push
sahf
push
sbb
flds
cmpsb
inc
mov
pusha
xchg
shll
push
jle
jl
testb
dec
jmp
cmp
pop
inc
scas
xchg
pop
test
pop
fadds
outsb
stos
xchg
arpl
dec
mov
cs
fwait
and
pop
mov
or
out
add
cmp
mov
mov
movsb
ret
adc
xlat
inc
mov
sub
jp
dec
rolb
xchg
jne
or
jle
int
mov
and
test
dec
pop
jb
adc
xchg
and
xchg
test
mov
or
mov
movsb
mov
dec
icebp
fwait
jmp
sbb
push
xchg
aam
mul
pop
hlt
rorb
cmp
imul
shlb
pop
dec
neg
mov
adc
into
or
inc
sub
out
xchg
push
mov
lret
aam
out
and
loopne
stos
pop
fbstp
xchg
jge
push
inc
push
pop
ds
rcrl
stc
sti
push
inc
mov
gs
fnstsw
adc
leave
out
mov
ss
rorl
mov
int3
pop
add
or
jnp
jnp
fst
mov
push
clc
mov
or
pusha
xor
mov
daa
inc
stc
cmpsl
sahf
ds
push
push
or
mov
shrb
arpl
mov
out
adc
lods
addr16
ret
adc
jmp
xchg
ret
aam
xchg
into
pop
sbb
xchg
fwait
xor
mov
and
xchg
mov
xchg
cmp
xor
and
add
mov
mov
nop
bound
sub
rorl
add
pop
mov
je
jmp
pop
and
cmp
fnstcw
push
gs
mov
adc
or
lret
mov
mov
sbb
out
lods
dec
mov
mov
shll
in
pop
call
and
jae
test
mov
mov
pop
mov
inc
push
pop
xchg
inc
pop
xor
repnz
mov
cmpsb
in
addr16
int3
js
fnsave
std
or
imul
mov
mov
and
insb
popf
push
loope
pushf
or
out
dec
or
sub
pop
repz
or
dec
pop
push
in
daa
and
dec
cmp
sbb
call
pop
mov
rcrl
jmp
ucomiss
das
cmp
inc
sub
cmc
aas
xchg
test
dec
arpl
loopne
repnz
jae
and
sarb
sub
pop
add
or
dec
adc
jo
pop
int
hlt
jae
loop
or
mov
or
lods
nop
adc
ja
rolb
hlt
jno
pop
sarl
jecxz
jecxz
dec
loopne
jmp
pusha
or
inc
pop
inc
test
mov
stos
mov
sub
pop
add
in
jl
pop
dec
pop
xchg
add
int3
bound
mov
pushf
imul
add
popa
data16
test
and
mov
sbb
andb
shrb
js
and
fildl
aas
push
mov
iret
sbb
dec
dec
ds
mov
xor
lock
mov
cli
dec
push
adc
mov
mov
inc
in
pop
push
enter
or
lods
outsl
pop
aad
or
jne
lret
sbb
movsb
mov
sub
or
leave
cmp
lahf
mov
out
xchg
push
je
xchg
mov
push
sbb
fwait
xor
scas
hlt
push
dec
aaa
mov
js
out
jnp
xlat
jl
inc
stos
mov
lock
cmpsb
xchg
and
data16
and
sbb
adc
adc
mov
stos
outsl
and
mov
mulb
push
imull
dec
sbb
mov
js
jp
dec
push
loope
and
rorb
xchg
jo
testl
or
dec
test
nop
adc
inc
inc
pop
in
sub
mov
jle
push
mov
jae
mov
lcall
mov
and
add
mov
push
sbb
xor
call
ljmp
dec
xor
aad
outsb
cmpsl
cmpsl
mov
cmpsl
cmc
lret
mov
cwtl
out
mov
sub
fdivl
jnp
ja
stos
jmp
push
push
sarl
test
xchg
push
test
flds
loopne
das
dec
enter
push
aas
sub
mov
or
das
dec
xchg
xchg
xor
sub
mov
mov
mov
add
rcll
sub
repz
nop
je
adc
pop
add
push
shll
dec
daa
mov
pop
dec
pop
push
xlat
ret
sahf
mov
int3
movl
wbinvd
or
addr16
adc
xlat
push
iret
lds
sbb
popf
test
add
lahf
hlt
aas
xchg
jno
in
inc
sub
cmp
insl
push
add
and
or
or
addr16
jmp
cmp
arpl
paddsb
inc
in
mov
push
xchg
punpcklbw
add
inc
movsl
mov
add
in
adc
data16
int3
cmp
repz
push
mov
sbb
mov
imul
push
mov
call
mov
outsl
into
and
adc
pop
cs
in
add
outsb
push
mov
aam
xchg
add
cmpsb
in
sahf
adc
mov
xor
repnz
push
cmp
mov
pop
add
mov
outsl
xchg
jle
jns
adc
inc
and
movsl
adc
popa
push
lods
popa
punpcklwd
jecxz
cmp
jecxz
mov
sbb
push
mov
mov
rcll
shrl
imul
repz
mov
ljmp
xchg
and
insb
fbstp
repnz
xchg
lods
xchg
pushf
add
pushf
and
jbe
jl
pop
mov
pop
inc
jno
and
dec
sysret
cmp
jae
adc
push
test
xchg
or
cmp
and
clc
arpl
cltd
fbstp
hlt
cs
mov
xor
test
ljmp
mov
jb
stos
mov
clc
aam
or
jo
mov
jecxz
repz
mov
inc
push
mov
lods
das
dec
sbb
mov
mov
sbb
pop
ja
int
rol
pop
and
or
bound
roll
inc
and
pop
mov
ds
icebp
bound
cmc
push
xchg
dec
jecxz
es
movsb
js
adc
add
int3
mov
mov
dec
jne
aam
sub
pop
xchg
aas
popa
pop
jmp
mov
lods
push
dec
adc
mov
ror
inc
fbld
es
movsl
stos
fsts
jle
and
dec
and
jno
pop
xor
cmp
pushf
leave
pop
sub
in
and
add
mov
or
clc
push
arpl
cmp
jl
mov
cltd
push
pop
sti
add
ds
cmp
lcall
scas
cmp
in
push
mov
outsl
mov
dec
mov
xchg
lock
int3
push
nop
add
pop
bound
pop
dec
pop
jmp
add
scas
test
push
mov
icebp
or
call
into
adc
mov
incb
arpl
cmp
push
fistl
add
dec
mov
cli
in
or
es
lds
pop
inc
xchg
xor
and
into
dec
adc
pop
cltd
inc
and
test
pop
gs
jl
pop
push
inc
mov
adc
and
lods
pop
or
adcl
mov
repnz
sub
push
add
jne
inc
pop
push
movsl
aam
sub
test
fsubrs
mov
jge
fists
cmc
lcall
fwait
test
mov
imulw
push
imul
aad
sti
movsl
gs
push
jbe
xor
cmpb
ja
sub
js
fsubrl
mov
xchg
mov
call
inc
ja
sub
test
xchg
jae
push
cmp
std
jo
sub
jns
inc
xchg
pop
lods
loopne
jnp
push
sub
pop
cmp
aaa
adc
cwtl
enter
sub
push
jmp
inc
es
inc
inc
xor
push
outsl
sbb
add
lea
shl
xor
vmovdqa
pop
dec
sti
js
stc
cmp
cmp
hlt
scas
in
cmpsb
dec
and
xor
pop
inc
add
in
xchg
sbb
lds
int3
in
outsb
ret
xchg
mov
push
test
leave
in
gs
add
out
xchg
out
push
fnstsw
ds
lods
lds
nop
fisttps
mov
or
lret
mov
mov
insl
pop
push
popf
jle
jg
adc
xchg
test
cltd
lods
scas
bound
sbb
sub
sbb
mov
adc
outsl
mov
lds
jo
iret
ljmp
mov
aaa
aam
repz
xlat
test
push
sbb
js
inc
mov
push
push
dec
and
or
fistps
fldenv
testb
and
fildll
adc
or
inc
in
mov
cwtl
sbb
lahf
xchg
scas
adc
das
gs
inc
push
mov
adc
mov
icebp
push
loope
pop
into
in
shlb
in
addr16
ljmp
mov
mov
jg
sub
les
adc
aas
data16
or
jae
sub
push
aas
and
sub
xchg
loopne
arpl
jge
addr16
sarl
ljmp
mov
or
imul
loope
xchg
ret
push
add
pop
and
hlt
and
rcrb
xchg
rclb
movsl
enter
xchg
out
loopne
xchg
shrb
out
pop
das
sub
mov
outsl
pop
pop
mov
aad
pop
repz
fbld
add
jae,pn
jno
or
in
jl
cmp
subl
ud1
daa
mov
jae
leave
das
fimuls
frstor
cltd
ficoms
test
cltd
cmpsb
and
lods
loopne
xchg
pop
jg
pop
mov
pop
mov
push
jle
xor
arpl
lock
xchg
leave
or
add
mov
dec
mov
std
mov
icebp
sbb
or
mov
addb
pop
cld
jge
sub
cltd
jae
loope
dec
negl
arpl
fldcw
test
mov
adc
xchg
jl
fimull
add
mov
arpl
jnp
scas
sub
push
jge
push
mov
mov
add
push
adc
cli
arpl
fiaddl
xor
fmul
leave
std
or
je
insb
jl
enter
jmp
sbb
pop
add
jno
jecxz
jnp
dec
cli
movsb
rorb
xchg
mov
aad
out
adc
pop
dec
and
pop
sbbl
rcrl
sbb
jp
jnp
cmpb
testb
xor
outsb
pop
call
mov
mov
imul
les
mov
push
push
mov
push
push
cmp
adc
movsb
fdivr
mov
jb
or
addb
sbb
inc
pusha
int3
icebp
jbe
push
mov
testl
outsb
xchg
adc
ret
jo
sbb
ja
inc
pop
xchg
pop
jns
imul
lods
bound
pop
jne
rclb
arpl
lods
xchg
cmc
lea
lret
rorl
push
and
xor
lods
adc
insb
xor
mov
scas
movsb
sbb
jle
jnp
mov
movsl
add
push
in
adc
inc
cmpsl
dec
clc
jmp
jo
jmp
jge
push
cs
mov
jg
clc
push
jb
adc
add
sub
mov
xchg
in
mov
pop
sti
or
in
int
repnz
in
out
pop
fdivs
cltd
jo
xchg
popf
rcll
and
inc
jbe
or
rcl
pop
gs
gs
test
movsl
imul
aaa
shlb
cmp
shrb
pop
lods
int
sub
jg
inc
xor
jnp
cmc
cmp
lea
push
das
mov
loop
ret
fidivl
mov
mov
scas
xchg
sbbb
cmp
inc
push
shlb
add
or
sbbl
int
lea
fnstcw
pop
fmuls
dec
ret
adc
inc
mov
or
cmp
dec
add
push
addr16
stc
out
fisubl
or
add
push
mov
ret
incl
aam
rolb
push
hlt
fldcw
cmc
jnp
je
mov
jp
adc
iret
mov
adc
mov
sbb
inc
xchg
sbb
push
repz
hlt
or
push
sub
lahf
dec
jecxz
loop
jb
jl
inc
fildll
sub
aam
test
pop
adc
out
mov
daa
xor
xor
adc
cmp
ror
rol
mulb
popl
lcall
bswap
xchg
xchg
rol
xchg
nop
leave
adc
ret
out
movsl
jne
mov
xchg
inc
mov
sub
out
out
cmp
and
sbb
sbb
mov
push
adc
xor
pop
in
mov
sub
movsb
xchg
mov
xor
pop
cbtw
dec
xor
lock
mov
lcall
loope
sub
mov
cmpsb
dec
and
test
dec
les
clc
insb
cmp
int
ljmp
pop
das
fcoml
fidivrl
nop
jbe
out
test
dec
ret
xlat
jle
stos
xchg
dec
bound
inc
rcrb
ret
je
mov
mov
pop
cwtl
mov
mov
cmp
xchg
jbe
shll
mov
bswap
fildl
ss
ret
out
stos
mov
dec
sbb
ret
inc
arpl
adc
mov
xchg
inc
shlb
xchg
mov
shll
mov
movmskps
cli
pop
sub
adc
xchg
push
into
jmp
pushl
xchg
or
push
loop
pop
ret
or
and
out
addr16
into
and
cmp
fs
scas
xchg
fldt
sub
loope
nop
xchg
xor
xchg
in
call
out
xlat
xchg
sbb
sti
mov
adc
rol
mov
cmp
cli
popa
pop
movsb
insl
cltd
jae
inc
push
mov
xchg
insl
mov
cmpsl
xor
or
mov
aam
std
adc
cmp
lods
loopne
jp
int3
flds
push
mov
mov
test
lock
mov
lcall
test
fisttpll
into
xor
insl
mov
push
ljmp
sub
xchg
jl
jg
mov
and
cmp
shl
mov
inc
aad
adc
sahf
jmp
pop
scas
test
out
sbb
inc
pop
push
idiv
pop
imul
inc
mov
cmpsb
xor
jae
sbb
aam
push
inc
xor
pop
das
pop
inc
jbe
pushf
or
dec
cmpl
mov
mov
and
shr
in
aam
push
pop
in
aad
icebp
or
mov
cld
ja
ret
xchg
imul
dec
notl
xlat
inc
cmp
pop
ret
ret
add
and
jns
xchg
das
int3
imul
pop
dec
xor
movsbl
rcrb
leave
pop
pusha
sub
jns
addl
aas
jmp
mov
sub
aas
ss
orl
insb
stc
lds
popa
jns
scas
jae
push
mov
sub
xchg
mov
mov
mul
adc
add
lods
mov
ljmp
adc
add
sub
fs
adc
sub
inc
mov
into
mov
notb
jecxz
cwtl
scas
mov
push
lea
mov
mov
xchg
and
mov
adc
je
jmp
data16
insb
mov
and
fisubs
sub
aam
int3
mov
push
mov
nopl
sbb
repz
xchg
push
pop
clc
xchg
ss
in
dec
pop
filds
and
cmpsl
stos
mov
mov
es
jno
in
push
xchg
imul
pop
add
sbb
pop
mov
out
nop
rolb
sbb
dec
sub
adc
push
sub
push
sub
inc
xchg
mov
or
mov
insb
xor
call
jg
loope
cmp
jns
jmp
into
sub
jmp
cmp
xorl
js
ret
out
stc
std
xchg
loopne
inc
xchg
fmul
lock
in
and
int3
fsubl
loop
inc
and
ds
fisubrs
and
test
mov
push
repnz
outsb
icebp
mov
scas
mov
cmp
jmp
inc
hlt
pop
dec
rcr
adc
aaa
fisttpl
lahf
mov
pop
pop
js
stos
cwtl
into
icebp
popf
es
out
cmp
add
fdivrl
jle
lods
adc
pop
and
push
dec
xor
jl
repnz
dec
mov
or
popf
pop
out
ffreep
push
xchg
test
and
and
out
adc
mov
jle
cmpsl
icebp
cmc
adc
pop
cwtl
cld
jo
sub
outsb
lcall
mov
dec
es
je
add
pop
lock
sub
sahf
xor
or
jge
cmpsl
int
dec
xor
cmp
dec
jae
fcmovnb
xchg
jns
mov
add
mov
dec
sbb
insl
pop
cmp
mov
push
scas
mov
cmpsb
pop
hlt
fs
xlat
mov
in
fs
mov
out
mov
cmp
nop
int3
xor
xchg
sbb
lods
xchg
dec
scas
dec
jecxz
adc
mov
fiadds
arpl
es
push
dec
push
add
lds
dec
popa
sbb
sbbl
ficoms
stos
push
and
mov
lcall
jae
adc
cmp
repz
cmp
fnstenv
pusha
ret
test
and
movsb
out
outsb
pop
loopne
aas
and
es
jne
mov
sub
push
pop
lods
mov
inc
jb
js
xchg
or
jl
xchg
daa
jge
lds
jns
dec
mov
sub
or
fstps
dec
mov
and
xchg
test
icebp
mov
pop
lcall
sub
sub
in
fadds
mov
shrl
adc
cmp
inc
movsb
and
adc
dec
mov
adc
out
and
and
in
pop
lds
repz
lret
cmpsl
in
xor
test
jb
popf
loop
or
pop
rclb
mov
jecxz
mov
sub
cmc
inc
movsl
sbb
dec
sbb
xchg
cmc
outsl
out
xor
fcmovbe
mov
cwtl
xchg
jecxz
dec
js
and
adc
sub
imul
sub
bound
adc
cmpsb
addb
inc
scas
mov
test
and
inc
push
loope
outsb
in
test
aaa
or
movsl
or
cli
dec
sub
pop
lret
loopne
enter
enter
mov
xor
xchg
loope
xorl
daa
imul
inc
mov
shlb
stos
mov
out
push
out
ret
jo
fisttpl
into
int
pop
mov
outsl
das
es
xor
push
xlat
adc
dec
dec
popf
xchg
test
lods
mov
fcompl
lock
inc
push
out
pop
and
aas
mov
hlt
in
or
mov
or
inc
repnz
sub
xchg
sarl
sbb
mov
sti
lret
rclb
fnstcw
cwtl
and
pop
notb
xchg
aad
xor
jl
ret
neg
frstor
jno
lret
ficompl
or
push
inc
pop
mov
sub
ds
std
insb
and
inc
jge
daa
imul
gs
cmp
add
fistpl
cmpsb
testb
lahf
mov
mov
mov
mov
cmpsl
adc
jecxz
jno
adc
leave
add
out
mov
mov
cmpsb
pop
scas
rclb
fucomip
cmovns
mov
xor
mov
ret
push
loopne
push
ss
aaa
clc
push
mov
es
dec
mov
cld
fists
out
jge
mov
out
push
inc
enter
push
out
andb
imul
shrl
push
cmp
lahf
pusha
addr16
rclb
push
pop
iret
pusha
pushf
in
loope
push
or
out
jb
fmull
fidivl
fisttpl
pop
cmpsb
shll
pop
daa
es
out
push
and
or
push
mov
cltd
dec
xchg
dec
jns
cwtl
or
stc
xor
adcl
push
sbb
sub
lea
push
lcall
mov
int3
mov
inc
jae
repnz
mov
cmp
add
or
and
shlb
mov
and
cmp
and
and
lods
jno
or
jbe
in
std
out
sub
jle
xor
lahf
xchg
push
jbe
fistpl
and
aaa
call
inc
test
mov
cmp
or
xlat
fldl
cmp
push
cmpsb
test
push
fs
cmp
sahf
and
pop
mov
testb
pop
in
lods
or
das
sub
ficomps
fnstcw
insb
push
mov
sbb
dec
add
dec
xlat
push
cld
in
sub
jg,pn
sub
inc
out
mov
lahf
adcb
mov
shlb
jecxz
loop
pop
inc
sub
cmp
and
pop
inc
lods
sbb
shlb
ja
dec
mov
or
shrl
outsb
push
push
pop
push
mov
mov
ret
xchg
jmp
mov
rcl
jbe
mov
sbb
pop
out
push
out
cmp
dec
xor
cmp
es
sub
jecxz
ret
jle
inc
mov
fwait
and
out
xor
movsl
pop
mov
jecxz
fwait
mov
inc
mov
xlat
sti
es
shll
sbb
mov
aam
inc
inc
add
fdivrs
test
or
and
dec
stos
pop
cmp
push
fldt
aaa
movsb
jb
mov
mov
dec
insl
sbb
fnsave
lods
scas
push
addb
dec
inc
mov
mov
mov
mov
mov
adc
outsl
rcl
lretw
jno
out
mov
lods
jnp
aad
xor
xchg
mov
movsb
inc
ds
leave
push
daa
int
test
jbe
lahf
or
stos
ja
xchg
fistps
int
jns
arpl
out
sub
mov
xor
inc
jmp
aas
adc
imul
sti
jne
movsb
dec
sti
push
xchg
mov
sbb
adc
sub
loop
scas
or
push
les
jae
pop
fiaddl
test
repz
and
imul
mov
sub
dec
or
or
mov
dec
xchg
pop
ds
pop
mov
mov
test
loop
mov
out
push
fcompl
ljmp
xchg
pop
mov
in
mov
push
mov
sbb
jne
hlt
cs
jl
mov
mov
xor
jl
mov
loop
nop
ret
push
cmp
push
adc
xlat
or
pop
adc
int3
iret
lds
sbb
ret
popa
mov
divl
cltd
sub
out
imull
std
pop
cmp
sahf
jne
jp
jbe
add
adc
inc
push
lcall
dec
and
mov
jno
push
ja
xor
out
inc
divl
jmp
sbb
xchg
mov
or
jge
inc
movsl
nop
es
inc
pop
ljmp
pusha
sbb
pop
jg
pop
and
sub
cmpl
incl
xor
imulb
push
and
mov
pushf
icebp
in
or
pop
out
popa
sbb
xchg
jmp
cmp
or
xlat
iret
arpl
icebp
jns
pop
mov
mov
aam
mov
mov
mov
pusha
cmpsl
mov
inc
sbb
pusha
outsl
adcb
repz
mov
stos
sbb
dec
xor
cld
mov
mov
mov
sub
out
cmpsl
les
in
aam
cmpsb
xchg
push
xor
mov
repz
outsb
mov
data16
es
scas
mov
and
stos
push
jbe
das
dec
mov
push
js
notb
aas
mov
dec
xchg
pop
push
dec
stc
push
inc
xchg
call
test
sub
xchg
sbb
inc
lcall
jmp
mov
inc
lcall
testb
cmc
inc
sbb
cli
inc
cmp
mov
leave
xchg
leave
xchg
mov
cmp
cmp
out
fcoml
lods
imul
sbb
adc
jecxz
jae
fdivr
jns
push
fnsave
adc
inc
leave
or
rol
sahf
adc
mov
pop
ja
and
shl
iret
lret
and
mov
push
pop
scas
and
mov
int3
ljmp
jbe
mov
dec
push
adc
pop
je
jl
test
imul
jae
adc
fdivs
scas
inc
mov
mov
jno
dec
fisttps
loope
inc
mov
adc
mov
push
cvttps2pi
add
aad
loope
push
adc
mov
sbb
jmp
xchg
sub
idivl
xchg
mov
dec
daa
ret
movmskps
dec
mov
mov
mov
pop
mov
dec
inc
idivb
mov
jbe
sbb
mov
fistps
sbbl
sbb
mov
imul
cmp
mov
decb
aas
call
sub
xchg
popf
cwtl
aam
in
pushf
popa
mov
ror
xchg
xchg
ret
popf
pop
xchg
jmp
or
pop
sbb
enterw
movsb
add
call
dec
std
mov
mov
mov
mov
test
jmp
out
loopne
mov
adc
sbb
xchg
shrb
sbb
cwtl
sbb
gs
in
xchg
cmp
push
dec
gs
jg
js
push
xor
push
mov
push
in
sub
mov
mov
testb
cs
or
in
jl
ret
xchg
and
cltd
push
cli
ret
shlb
nop
lret
shrl
rcll
adc
adc
fistl
sub
in
inc
ret
cmp
push
xchg
lods
mov
in
leave
lock
cmp
nop
loope
mov
mov
aad
lods
int3
xlat
jne
out
out
and
imul
ljmp
fimull
cld
inc
lods
xchg
lahf
stos
dec
inc
std
jg
mov
aaa
fnstenv
jns
mov
into
push
out
jnp
popa
mov
xchg
sub
inc
push
adcb
das
and
xor
dec
imul
repz
lret
mov
xor
ror
xchg
nop
loopne
or
pusha
adc
and
dec
push
jne
in
call
fsts
pop
add
add
adc
sahf
or
and
es
rclb
scas
xchg
andb
push
pop
addb
and
push
inc
or
test
push
pop
test
iret
inc
xor
or
sub
orb
mov
xchg
in
outsl
cmp
aas
xor
and
addl
int3
iret
pusha
jp
push
imul
lcall
mov
jno
mov
lods
dec
inc
pop
mov
dec
dec
mov
popa
cmp
mov
xchg
rcll
jp
and
sahf
pop
mov
pushf
leave
jne
xor
dec
lret
jg
ret
xchg
xor
or
mov
mov
push
in
daa
xor
shll
fisttps
stos
inc
loop
mov
push
mov
or
mov
xlat
outsb
cmp
push
pop
int
jo
lret
and
push
lret
js
fs
or
cwtl
adc
jae
ja
std
jg
test
addl
cmpsb
inc
js
out
push
adc
popa
sbb
sbb
lock
lods
sahf
xchg
mov
cs
inc
movsb
xor
jae
lods
mov
inc
xor
or
dec
adc
js
in
add
ss
ljmp
or
mov
or
cwtl
fxch
sbb
or
lret
and
bound
scas
loope
lret
nop
stos
pop
sti
dec
pop
jmp
sbb
push
gs
stos
neg
mov
pop
sbb
scas
mov
stos
movsb
push
nop
push
repz
add
sbb
fsub
subl
pop
jbe
or
push
loop
adc
fisubrs
mull
loopne
lock
mov
sub
loope
jl
xlat
pop
cmc
aam
aas
jnp
mov
pusha
xchg
jae
setb
lahf
mov
outsl
cltd
add
xchg
push
stos
dec
in
cmp
repz
cltd
jne
and
aas
lea
stos
push
adc
aad
inc
popa
insl
shll
push
sbb
xor
push
stos
or
cmp
pop
push
mov
add
sub
loopne
insl
jb
test
mov
lds
ja
xchg
dec
xchg
aaa
push
mov
xchg
out
mov
dec
xorb
sarl
fldenv
lahf
sub
push
inc
jecxz
movsb
jl
in
loope
add
sub
inc
daa
rol
sub
sub
adc
mov
stos
pop
shrl
pop
push
mov
out
mov
lcall
mov
adc
sbb
scas
mov
movsb
cmp
add
mov
das
pushf
xchg
mov
fwait
out
xchg
cmovp
cld
mov
mov
rcll
add
mov
adc
loope
daa
ss
testb
mov
mov
sti
and
imul
movsl
popa
xor
mov
ds
loopne
mov
xchg
stc
jl
out
iret
in
std
mov
and
iret
xchg
ljmp
mov
mov
loopne
outsb
push
dec
and
dec
sub
test
lahf
shrl
clc
inc
test
cmpsb
jnp
popa
enter
xor
push
icebp
rcrl
shrl
jb
mov
fdivl
in
xchg
hlt
scas
sub
xchg
cld
js
lret
test
xlat
lret
mull
std
sbb
push
jne
lea
add
arpl
dec
mov
aad
lods
insb
add
mov
dec
shrb
into
std
cmp
inc
push
test
mov
or
xchg
in
subb
pop
dec
sbb
leave
ljmp
mov
inc
mov
std
orb
aam
jp
push
push
push
push
pop
cmp
cmp
dec
pop
jg
outsl
cmp
add
mov
xor
xchg
loop
sub
push
flds
movsb
xlat
clc
lahf
je
and
jmp
push
mov
nop
sub
cld
inc
pop
cmpb
pop
loope
cmp
cmp
cmp
cmpsb
filds
lods
inc
xchg
arpl
popa
stc
in
cmp
add
and
bt
add
into
lahf
jbe
out
lahf
add
mov
lret
or
or
stos
aam
gs
add
adc
adc
xchg
push
inc
pop
lcall
mov
pushf
push
sub
mov
sti
mov
mov
mov
inc
cld
imul
xor
mov
xlat
test
mov
fstps
and
repz
mov
movsl
jbe
sub
je
aaa
stos
out
repnz
mov
addr16
mov
cmpsb
mov
xchg
cld
les
data16
hlt
jne
xchg
sub
outsb
and
and
push
ss
mov
sar
pop
cmp
sub
push
repz
subb
cltd
adc
insl
imull
mov
push
sbb
jl
movb
frstor
cmpsl
jb
dec
movsl
clc
pop
movsb
xchg
pop
int3
scas
subb
fldenv
pop
or
jne
outsl
jo
xor
push
add
push
inc
pop
outsb
mov
imul
push
adc
adc
sbb
or
std
aaa
leave
je
int3
adc
or
and
outsl
scas
xlat
jle
xor
mov
xor
ret
or
adc
jne
jns
loope
je
outsl
adcb
addr16
jns
pushf
inc
out
sbb
xor
push
push
and
xchg
scas
and
leave
dec
sbb
sub
getsec
les
ret
add
je
nop
out
cs
or
insl
hlt
lea
fs
pop
dec
jle
jno
jb
and
mov
aad
push
or
repz
aad
jb
test
cmp
and
aas
fsubr
sub
insl
negl
call
dec
mov
cmp
push
jo
rorl
jge
jae
push
xor
mov
sbb
sbbb
pop
jno
jmp
lds
cmp
mov
sbb
xor
dec
sub
setp
mov
insl
aam
xor
cmp
sub
jge
add
out
test
adc
cmp
xchg
pop
cmp
adc
sub
sti
addr16
in
xor
sub
mov
sub
jle
in
mov
das
cli
cmp
adc
xor
aad
ret
mov
inc
push
jl
or
das
mov
hlt
lret
xchg
xchg
dec
fbld
xor
and
call
loope
cmpsb
pop
push
loope
lahf
sub
stos
push
repz
adc
cmpl
sbb
dec
xor
iret
push
push
sbb
dec
mov
mov
jns
out
push
ss
ds
adc
adc
mov
inc
pop
inc
ljmp
pop
jns
sbbb
mov
sbb
mov
inc
ret
sbb
adc
ret
andl
leave
push
mov
add
and
and
sbb
cltd
sub
pop
cmp
call
ja
push
inc
jl
cmp
ljmp
popf
cmp
mov
repz
sub
repz
out
push
cmc
jg
popf
cmp
xor
mov
xchg
rorl
cmp
inc
rolb
pop
daa
lea
dec
cli
push
and
into
rcrl
add
fcompl
popf
aam
gs
bound
mov
jl
and
mov
xchg
mov
je
push
std
cwtl
xlat
in
stos
ja
push
inc
mov
mov
mov
and
jnp
ret
dec
cltd
pop
hlt
cmp
cmpl
mov
addl
or
jbe
sub
aam
mov
bound
xor
inc
fnstcw
sbb
dec
add
stos
sub
push
mov
aaa
pusha
mov
sti
inc
icebp
pop
lds
movsb
bound
inc
rclb
dec
das
fs
outsl
lods
xchg
xchg
mov
icebp
sub
adc
ror
mov
mov
pop
into
jns
fst
lock
hlt
dec
es
pop
inc
pop
sub
inc
cmp
popf
inc
popf
stos
pop
mov
les
fmuls
xchg
and
nop
sti
jns
push
ret
ret
mov
sbb
sub
push
xor
js
inc
shl
jle
pushf
sub
lods
pop
out
push
int
xor
cmp
or
mov
pop
pop
leave
cltd
push
and
sub
cmp
fwait
dec
dec
pop
loope
mov
sti
mov
inc
and
xchg
jge
mov
lds
dec
arpl
sbb
ret
xchg
mov
and
cmp
into
mov
lea
mov
jg
add
xchg
jmp
pop
std
pop
fadds
xor
bound
loope
ja
adc
push
mov
scas
mov
aad
int3
stc
fldenv
je
insb
cmp
dec
in
in
fisubs
js
and
pop
push
outsl
jmp
jns
jno
mov
mov
mov
cld
mov
aaa
push
pushf
mov
out
pop
and
adc
clc
test
sub
cmp
inc
aam
out
cmp
fsub
xchg
test
adc
jae
jecxz
packsswb
push
xor
mov
push
push
aad
dec
jns
fistpl
stos
subb
xchg
pop
in
xchg
mov
cmc
fucomi
sbb
fs
jb
and
das
dec
or
pop
mov
pop
lds
cmpsl
push
into
mov
xorb
movsl
inc
and
push
out
pushf
sahf
mov
sub
jae
sbb
cwtl
add
sbb
dec
repz
jge
fidivl
xor
lods
mov
jb
nop
popf
gs
mov
hlt
imul
ja
jmp
push
cwtd
mov
mov
push
jmp
inc
mov
dec
shlb
cs
dec
mov
lods
and
add
pop
ret
loope
push
mov
add
push
push
mov
rcrb
mov
push
mov
cmp
rdpmc
xchg
xlat
mov
xchg
iret
js
shll
mov
push
fwait
aas
mov
xchg
pop
sub
jno
xchg
or
pop
or
cmpsb
imul
arpl
leave
pushl
loop
mov
push
add
mov
sbb
add
adc
inc
dec
rsm
sbb
bound
les
lret
stos
xchg
dec
bound
inc
scas
int3
mov
cwtl
mov
out
fidivs
das
imul
rcrl
sub
inc
pop
sti
xor
in
cltd
xor
mov
xchg
ret
arpl
ret
lea
addb
movsb
ja
jb
cld
push
mov
int3
and
dec
rorb
xchg
ror
sarl
cmc
mov
das
dec
imulb
mov
sub
das
jae
stos
aad
enter
outsb
xchg
mov
jmp
ret
dec
push
repz
add
mov
aad
mov
mov
or
inc
xor
ror
das
jecxz
mov
cmp
cmpb
inc
lret
lods
fmull
lods
jb
daa
jb
sub
lds
xchg
add
sti
int
loope
lock
inc
mov
rorl
add
dec
xor
fstpl
clc
arpl
test
das
insl
cmpsl
es
in
add
xchg
adc
cmp
pop
je
jne
mov
pop
aaa
lea
or
jnp
mov
fcoml
pop
dec
inc
pop
bound
cmpsl
add
pop
inc
adc
dec
dec
mov
lock
inc
or
sub
push
in
out
inc
sub
sbb
xchg
rolb
xor
jno
or
shlb
mov
and
loope
sar
or
andl
xor
push
jno
sub
out
outsl
fwait
jne
mov
lcall
add
jo
je
sub
push
pop
jle
data16
mov
or
in
loope
aad
lcall
xor
orb
hlt
clc
pop
lahf
add
ss
jmp
cmp
aaa
loopne
push
loopne
sbb
adc
shlb
in
sbb
mov
js
sbb
lds
testb
cmc
dec
xchg
adc
cmp
aas
pop
scas
arpl
repnz
xchg
lock
mov
dec
mov
nop
sub
ret
mov
or
xchg
lea
mov
test
xchg
ds
xor
fcomp
cmp
mov
mov
into
jne
xchg
stos
fimuls
adc
add
loop
mov
aad
push
fldl
lretw
lock
out
inc
aaa
stos
and
mov
lcall
ds
es
jecxz
mov
in
int3
cmc
fnstsw
popf
mov
xchg
fdivl
shll
cmp
adc
dec
mov
adc
test
fiaddl
or
std
xorl
sub
mov
mov
push
insl
mov
xor
fs
or
cmpsb
cmc
pop
sub
mov
gs
adc
jmp
lea
arpl
enter
inc
cmpsb
sbb
dec
sahf
aad
test
ljmp
ret
mov
xor
repnz
mov
xor
jae
test
ljmp
out
scas
repz
pop
scas
push
dec
pop
data16
xchg
sub
pop
xor
repnz
dec
mov
test
mov
js
inc
pop
aad
pop
dec
cld
mov
sbb
int3
push
cmp
dec
mov
cmp
and
or
push
je
xchg
test
inc
xor
or
jmp
insb
sbb
enter
in
cmp
sub
dec
xchg
loop
sbb
push
pop
xchg
jmp
nop
std
mov
in
inc
shrb
mov
mov
mov
pop
inc
inc
cmp
pushf
jmp
out
movsb
inc
lret
fisttps
cli
fs
jmp
jp
pusha
mov
jnp
into
push
xchg
push
iret
bound
sbb
or
lock
cld
cmp
sub
xchg
loope
leave
push
and
dec
loop
fwait
lea
lods
mov
xor
cmc
xor
loop
pop
add
adc
pop
lds
jecxz
xor
sti
in
inc
repnz
test
fs
cli
xchg
mov
ljmp
lea
subb
test
push
sbb
mov
xlat
dec
pop
lods
in
clts
js
nop
cmpsb
lock
sahf
lcall
xor
mulb
scas
add
aam
into
jl
and
push
out
scas
ja
rcll
xchg
dec
in
dec
or
push
or
stc
notl
cwtl
and
clc
fwait
movsl
pop
or
sub
fmuls
fcoms
ss
jnp
xor
test
gs
ret
jp
js
xlat
push
xchg
jl
mov
addb
cmpsb
sub
shrb
cmp
lea
sub
stos
scas
test
or
jno
mov
push
adc
cmp
cmpsl
test
add
mov
inc
imul
fld
push
or
and
mov
sysexit
mov
dec
repz
sub
imul
test
sub
in
xor
sidtl
pop
in
adc
fidivl
jg
out
pop
pushf
outsl
imul
mov
into
adc
in
iret
xor
push
dec
push
xor
es
xor
shlb
jo
int
addr16
repz
fcompl
es
jno
fisubl
pop
ret
insl
aad
xlat
push
mov
leave
gs
out
xor
adc
sbb
xchg
js
scas
dec
hlt
aam
outsl
fistpll
or
jo
gs
inc
xor
inc
les
or
ret
jmp
jmp
fnsave
cmc
push
and
ljmp
shlb
movsb
mov
push
mov
insb
pop
add
ds
cmpsb
sbb
ja
xor
push
pop
scas
aas
add
inc
adc
ud0
lods
loop
sub
decl
in
xchg
xchg
ret
xor
add
xlat
or
pop
stc
aam
push
lods
jg
dec
sbb
ficomps
or
mulb
je
jg
fmulp
cli
movsb
ja
das
jb
xor
or
outsb
mov
inc
jp
add
jae
and
inc
sub
test
mov
add
dec
xchg
mov
mov
fidivrl
repnz
and
and
je
clc
mov
cmpsl
repz
mov
hlt
push
mov
xchg
sbb
xchg
adc
hlt
pop
lret
mov
push
cmc
cmp
sbb
xchg
subl
jl
sub
adc
cmpsb
cmp
jg
push
adc
fsubs
mov
adc
jno
mov
addr16
loopne
dec
jmp
outsb
aam
inc
fwait
loopne
imulb
jno
pushf
mov
fisubl
inc
scas
pop
test
sbb
pop
into
push
aas
mov
adc
jle
jle
or
fimuls
add
cltd
test
or
ljmp
ds
aad
cmp
mov
mov
inc
inc
adc
in
cmp
test
xchg
cmpsb
push
mov
movl
xchg
jle
fcmovne
iret
add
imul
jmp
scas
mov
inc
and
pop
sub
ss
out
ljmp
bound
mov
and
rorb
out
xchg
adc
or
cwtl
or
repnz
aas
dec
mov
int3
mov
cmpps
pop
aaa
out
inc
loope
pop
sbb
add
cld
push
loope
fwait
sbb
jge
lfs
stos
jge
mov
mov
fidivs
inc
and
pop
daa
jnp
mov
mov
inc
test
loope
sub
xchg
jae
jl
inc
or
mov
fcompl
out
shrb
sbb
jp
rorb
int3
push
jmp
addr16
test
sbb
cld
mov
xchg
jge
pusha
or
movsl
mov
add
mov
dec
mov
xchg
xor
fcoms
adc
addl
outsl
ss
dec
test
shl
mov
sub
pusha
jecxz
icebp
xchg
daa
pop
ja
mov
in
lods
nop
lods
sub
incl
int
mov
push
lahf
xchg
repnz
push
inc
gs
lcall
push
pusha
mov
push
jle
test
dec
xchg
cmp
out
rolb
cld
mov
popa
xchg
mov
outsb
test
jge
mov
std
test
popf
cmp
xchg
mov
ret
jo
inc
xor
enter
push
in
ret
cmp
insb
push
jno
in
out
data16
sbb
mov
cmp
sbb
leave
scas
cmc
sub
repz
fwait
rclb
mov
in
xlat
popa
jae
push
je
dec
inc
cwtl
dec
xchg
pop
push
dec
cmp
cmp
dec
adcb
add
leave
fimuls
xchg
mov
rcrb
int3
mov
aaa
mov
or
sbb
lcall
pop
loope
je
jecxz
ljmp
scas
std
test
loop
test
mov
xor
sahf
add
repz
jge
and
dec
test
test
mov
mov
or
je
jge
inc
mov
inc
jl
pop
sub
pop
je
ja
jbe
and
fabs
out
repnz
enter
push
cmp
inc
icebp
lret
cmp
jae
xlat
jno
adc
inc
lods
fsubl
jnp
jl
popa
xor
add
dec
sbb
adc
mov
roll
xchg
icebp
cmpsb
jl
and
in
outsb
push
jle
insb
jecxz
xor
pop
mov
stc
push
divl
xchg
cmpsl
fisubrs
pushf
fsubrs
ret
in
std
push
clc
adcl
xchg
mov
jb
test
fwait
or
shl
cli
fbld
gs
test
enter
ret
into
pop
xchg
cmp
adc
and
cmp
jnp
and
jp
inc
push
inc
mov
lahf
imul
mov
cmpsl
adc
jne
xchg
jb
add
inc
data16
fsubl
mov
out
rcrl
hlt
xor
gs
nop
xor
jl
inc
xor
and
insl
loop
cmp
inc
stos
test
adc
or
ret
test
xorl
aam
and
outsb
xchg
pushf
insb
lods
jecxz
lcall
adc
ror
mov
int
popf
aam
cli
mov
inc
sbbl
int
inc
push
imulb
ret
sub
inc
sbb
aam
mov
cmp
cwtl
jno
leave
cld
xor
xor
xchg
pop
jl
ret
or
fsubp
fidivrs
vpsubsw
mov
andl
arpl
push
ret
mov
roll
fwait
pop
outsl
adcb
mov
mov
xor
out
add
pop
test
and
jecxz
adcb
mov
ljmp
imul
imul
gs
out
test
out
loop
xor
dec
dec
jb,pt
call
push
cmp
cmpsb
lea
out
movsb
data16
pop
jae
dec
and
in
loope
movsb
mov
outsl
scas
packuswb
jmp
icebp
shl
rcrb
pop
jmp
cwtl
popf
sbb
shrb
jnp
les
mov
pop
out
out
dec
inc
test
sub
adc
jmp
cmc
jno
cmp
dec
inc
sarl
fisubl
jl
mov
adc
mov
dec
je
das
int3
nop
inc
adc
push
or
pop
or
int3
cmp
in
shrb
loope
cmpsl
loop
daa
lcall
lds
pop
lods
push
movsl
and
xor
roll
sbb
sub
rclb
in
icebp
ja
pop
iret
fldcw
fcomps
lods
pop
or
cmp
fs
fcmove
push
faddl
rep
or
mov
stc
es
xchg
pop
jbe
nop
mov
shl
sbb
jecxz
ret
int
jmp
data16
imul
stos
cmpsl
ret
inc
mov
xor
lods
out
mov
mov
jnp
xchg
je
push
jle
mov
test
mov
xor
xor
sub
jnp
icebp
push
dec
and
sbb
inc
cwtd
loopne
mov
xchg
popa
mov
sbb
test
cmp
into
int3
mov
push
leave
fwait
mov
xlat
hlt
pop
shll
testb
push
and
mov
cmp
jp
pop
adc
cmp
lods
out
xor
xor
and
cld
shll
add
fidivs
jg
out
mov
mov
arpl
jle
and
cmc
sbb
xor
fs
lret
pop
jnp
push
pushf
xchg
sti
inc
into
call
sahf
pop
sub
ljmp
xchg
call
ficoml
jp
cmp
lcall
sti
adc
jne
andb
hlt
mov
adc
inc
xorb
nop
cmp
jbe
xchg
stc
imul
xchg
xor
outsl
sbb
insb
cmpsb
push
fadd
adc
xor
push
mov
bound
repnz
xor
mov
mov
psubusw
out
out
dec
int3
psllw
jle
adc
es
fdivrs
adcl
pop
and
jne
dec
out
xchg
dec
sub
lods
sbb
stos
mov
mov
ret
cmpsl
sub
mov
mov
add
scas
xor
push
or
mov
mov
pop
cmp
add
addl
ss
cmpsb
xchg
repnz
cmp
bound
sbb
mov
es
in
xchg
or
clc
push
mov
push
jl,pt
test
pop
sbb
mov
ds
jne
pop
or
stos
and
xor
andl
mov
test
sarl
cli
push
cmp
adcl
hlt
add
lar
rcrl
push
aam
lds
sahf
inc
dec
sbb
or
sub
xchg
sahf
stos
jo
sbb
lods
decb
mov
xor
cli
leave
dec
loopne
cmpsb
in
outsl
aam
mov
stos
dec
mov
pop
inc
push
fidivrl
into
cltd
xchg
scas
sbb
jno
out
lds
xlat
lret
jg
lcall
and
pushf
pop
sub
mov
and
mov
adc
mov
mov
add
insl
inc
pop
fisubrl
mov
and
adc
pushf
test
mov
pop
mov
mov
cwtl
inc
mov
push
inc
pop
sub
sarl
and
sbb
pushf
pusha
xchg
mov
push
add
and
cmpl
jb
pop
es
mov
jl
sub
push
jne
push
and
andl
addr16
jne
scas
jo
xchg
cmp
mov
or
push
cmp
push
loopne
imul
les
cmpsl
mov
fisttpl
or
lock
lahf
pop
sbb
pop
sub
jae
adc
stos
jmp
subb
testb
enter
addl
mov
sub
dec
int
mov
aam
rcll
pop
es
roll
out
add
aaa
aas
pop
cmpsl
test
fsts
pop
jg
cmp
incb
xchg
dec
inc
fimuls
inc
sysret
movsl
mov
popf
add
add
lods
pop
xchg
dec
es
xor
hlt
stc
stc
fcompl
test
pusha
std
js
and
repnz
loop
in
dec
xchg
sbb
dec
nop
push
and
sbb
in
cld
mov
fst
in
xlat
sub
cmc
outsb
lock
jge
vmptrld
cmc
pop
enter
cmp
jmp
sbb
jae
dec
aas
and
or
dec
sub
jmp
sti
mov
sub
inc
inc
dec
cmpb
out
mov
xchg
or
iret
insl
loope
or
mov
rcrl
sbb
test
mov
xlat
mov
dec
lret
sbb
ljmp
iret
mov
jmp
cli
loopne
push
ud2
loopne
sbb
iret
sbb
jbe
adc
sub
lret
es
out
lods
jp
popa
shl
std
add
add
dec
fcomp
mov
mov
fwait
jne
mov
xor
mov
or
dec
nop
sbb
icebp
or
xor
out
leave
mov
dec
lea
sarb
jmp
cs
fstps
pop
and
cmp
movsl
cltd
add
push
lods
mov
rclb
pusha
jno
icebp
mov
loop
fs
test
lret
add
rcll
int3
jae
jnp
adc
loope
and
cs
adc
repz
shlb
push
sbb
xor
ret
gs
cltd
lds
add
sub
add
dec
xor
negl
jg
imul
jp
mov
or
bound
daa
aas
out
jmp
lcall
add
push
scas
ss
inc
xchg
ss
sub
leave
fidivs
sbb
popa
movsb
addl
inc
jbe
subl
scas
cli
iret
mov
lret
mov
or
cmp
mov
dec
pushf
movl
insl
stc
sbb
jo
cs
sub
sbb
int3
sbb
jb
dec
iret
xor
sbb
pop
cltd
stos
xchg
push
cltd
outsl
xor
cmp
dec
xchg
pop
testl
shl
xchg
fstp
in
adc
stc
mov
mov
mov
filds
sbb
push
in
mov
inc
iret
xor
mov
adc
pop
scas
nop
add
scas
int3
push
jnp
inc
dec
fstl
sbbl
push
cmp
clc
mov
js
xchg
dec
add
add
cmpsb
push
arpl
cmp
std
loopne
jle
pop
fs
in
inc
pop
cmp
out
bound
mov
dec
in
sbb
pop
jns
adc
aas
mov
jno
je
push
outsb
pusha
in
mov
jg
adc
rep
test
ret
inc
js,pt
cmpsl
rcrl
fsubr
stos
ret
push
mov
popa
and
leave
jae
imul
jnp
jnp
repnz
in
xchg
push
xor
out
jae
pop
push
adc
push
mov
bnd
or
dec
orl
insl
dec
cwtl
lds
sbb
xchg
fcomps
gs
jmp
negb
xor
arpl
call
out
xchg
sahf
rcl
cmp
or
stos
mov
adcb
sub
out
ret
pop
fdivrs
adc
addb
fcomps
dec
inc
and
pop
outsb
rorb
xlat
das
cli
dec
sti
push
mov
imul
cmp
movsl
or
cmp
sbb
jecxz
shrb
aaa
push
mov
jp
push
fisubrl
inc
push
out
call
jno
xchg
xchg
nop
ret
or
out
test
jle
shlb
sbb
mov
inc
pop
sub
divl
xor
daa
pop
xchg
fistpl
icebp
movb
pop
mov
jge
shll
dec
dec
rcrl
cmp
stos
xor
in
icebp
arpl
pusha
jno
xchg
adc
cs
push
mov
sub
pop
fdivp
scas
xchg
sub
mov
pop
jb
jecxz
cwtl
iret
ljmp
je
mov
sub
push
mov
fdivr
mov
xchg
addr16
xchg
add
ficompl
jge
mov
inc
popf
nop
cmpsl
xor
mov
jmp
add
xor
fs
fcomps
sti
sub
imul
pop
jg
ljmp
lock
out
mov
repz
ret
pop
arpl
sub
pop
test
iret
push
idivb
push
inc
pusha
ss
bound
jle
adc
add
and
jnp
lods
fidivrl
sbb
or
mov
mov
jne
pop
mov
mov
shl
mull
sbb
and
out
movsw
inc
jb
xlat
add
je
mov
mov
ljmp
addb
insl
loope
ficoms
cmpl
fwait
std
pop
add
pand
push
adc
add
aam
in
sbb
fmull
pop
and
fdivp
xchg
and
mov
pop
into
xor
sbbb
push
into
lret
out
cs
ret
loope
and
xchg
adc
jnp
test
sub
mov
lea
dec
mov
adc
or
jp
cwtl
pop
cs
mov
adc
sahf
or
daa
add
jnp
mov
pop
adc
pop
iret
loope
add
xchg
sti
jl
insb
ret
dec
in
xchg
in
cwtl
lcall
iret
mov
out
add
stos
inc
push
shlb
jl
adc
mov
in
jns
xchg
rclb
stos
call
leave
jle
mov
mov
xchg
xchg
push
add
hlt
in
push
inc
ljmp
push
mov
mov
push
pop
mov
and
sbb
or
fisubrs
xchg
push
aad
xchg
lea
stos
aas
pop
jns
nop
aam
pushl
pop
loopne
xor
stos
mov
lea
dec
add
lods
inc
stos
aas
push
adc
xchg
push
lret
mov
les
call
fcmovu
inc
dec
les
and
inc
rorb
sbbb
sub
out
pop
test
mov
stc
movsb
push
fdivp
pop
lock
jb
shlb
adc
popa
add
ja
or
jge
mov
arpl
and
push
imul
mov
sub
mov
jb
fdivr
jnp
in
ljmp
ljmp
lds
cltd
xchg
xchg
sub
mov
inc
sbb
lea
ja
push
push
insl
xor
mov
or
mov
xchg
push
insl
mov
cmpsb
inc
fildl
out
lcall
scas
lods
fsts
gs
outsl
add
fwait
add
mov
imul
scas
xor
sub
cmp
xorb
fcmovu
fnsave
inc
dec
outsb
push
sbb
and
rolb
lcall
movzwl
xchg
mov
mov
popa
mov
jo
aam
lret
add
sbb
gs
or
xor
and
stc
loop
sub
adc
shl
mov
sti
sub
mov
xor
lcall
and
jmp
dec
aam
test
push
mov
fmul
cmp
fisubl
dec
out
pop
xlat
insl
popf
pop
loop
mov
xchg
dec
enter
cmp
lret
hlt
lcall
sbb
pop
push
ja
out
mov
ds
xchg
mov
or
lods
mov
mov
push
cmpsb
xor
outsl
lcall
inc
cmp
sar
test
es
push
xorl
cli
sahf
sub
stos
call
sti
push
lods
daa
push
add
push
add
mov
scas
ret
cmp
lcall
sbb
push
sbb
out
or
cmp
ret
adc
mov
add
xor
lea
lds
es
test
push
push
nop
and
imul
out
in
movsl
repz
mov
jbe
sbb
sub
mov
or
or
les
dec
mov
js
sarl
push
pusha
into
js
jo
shl
popa
add
mov
jo
shll
pop
in
mov
and
xchg
scas
and
int3
icebp
inc
add
test
out
gs
inc
dec
cmp
jp
add
add
lods
pushf
dec
out
clc
pop
fcomi
lcall
push
mov
push
pop
jg
adc
pop
movsl
push
pop
push
pop
inc
jns
jl
orl
and
popa
mov
fisubs
cli
int
das
loope
push
mov
adc
es
gs
and
pop
xchg
mov
xchg
in
scas
pop
popf
xor
xchg
pop
in
xlat
std
clc
mov
hlt
jp
sub
xlat
ljmp
cmp
ficompl
sbb
shlb
jmp
pushf
sub
subl
jo
sub
jmp
push
cltd
in
outsl
enter
stos
movsb
cmp
pop
loope
mov
repnz
fdivrl
es
push
or
in
faddl
sbb
mov
mov
aam
loop
sbb
xchg
xchg
andl
mov
test
pusha
stc
dec
iret
cmpb
push
loopne
push
xchg
cmpsl
imul
xchg
cmpsb
lcall
lret
int
int
xor
xor
push
dec
movsl
pop
ret
jnp
mov
ljmp
andb
sub
inc
into
pop
test
inc
xchg
popl
and
ljmp
adc
xlat
jbe
push
xchg
push
sahf
jge
xor
jmp
mov
loop
xchg
leave
jmp
popa
dec
popw
and
pop
mov
or
sti
lahf
add
and
jl
int3
push
loopne
pop
cmp
nop
fstl
jg
xchg
cld
scas
jo
jns
push
out
jo
and
movsb
mov
or
push
mov
inc
stos
fstpl
movsb
xor
lahf
push
push
adc
cwtl
inc
adc
jo
mov
int
sub
or
and
inc
or
test
adc
idivl
repnz
xorl
je
rcrl
pop
scas
lahf
pop
mov
incb
loope
shl
inc
ds
lret
xchg
push
mov
xor
pop
push
int
push
cmp
xchg
pop
push
cltd
add
loope
or
movsb
lea
loope
fadds
outsl
push
push
insl
adc
mov
dec
adc
pop
iret
sub
stc
loopne
add
and
sbb
mov
mov
inc
loopne
fstps
test
cmpsb
jg
or
adc
movsb
imul
dec
xor
mov
mov
xlat
mov
das
pop
dec
adc
and
icebp
fs
sti
das
cmp
cli
in
jmp
nop
mov
xchg
aam
dec
loop
jp
mov
insb
lds
cwtl
cli
inc
and
push
data16
mov
in
andl
jle
out
mov
into
push
and
mov
dec
icebp
and
mov
lret
cwtl
and
push
or
inc
cs
and
lea
je
inc
ret
pop
pinsrw
test
dec
dec
xchg
jle
psubusb
stc
xor
xlat
inc
shll
inc
cmpl
add
sub
jp
out
dec
sub
mov
mov
cmp
std
mov
pop
push
sarl
ret
mov
cli
test
xor
fisttpl
mov
lcall
inc
out
bt
insb
ja
stos
adc
imul
test
mov
sub
out
mov
rcr
stos
lret
adc
es
movsb
gs
icebp
lds
cmp
test
sbb
inc
push
stos
into
xchg
sub
arpl
fisubs
push
insb
imul
fmuls
cltd
xor
fisttpl
or
aas
testl
pop
mov
lahf
dec
pop
or
cltd
and
cs
sub
shrl
scas
sub
orl
inc
dec
test
add
cmc
or
and
inc
cmpsb
mov
mov
dec
pop
aad
add
pop
test
pop
dec
jl
sbb
jbe
addr16
fsubl
ljmp
mov
scas
cmpsl
mov
jp
movsb
dec
cmp
pop
or
mov
js
and
cld
mov
rcl
and
cwtl
shlb
xor
mov
pop
add
mov
push
enter
push
das
lret
lods
jo
jg
test
lods
inc
dec
pop
rcrl
or
cmc
js
lds
inc
pusha
push
fcmove
adc
or
cmpsb
fiaddl
push
cmp
mov
and
jecxz
mov
push
movsb
push
ret
movl
movsl
mov
imul
or
outsl
lret
pusha
dec
adc
mov
fsubl
add
fistpll
out
inc
jnp
add
adc
pop
or
add
jnp
mov
mov
fimuls
in
jns
cmp
pop
xor
aaa
jb
push
mov
mov
dec
in
addr16
sub
cmp
lds
aas
andl
arpl
insl
mov
cmc
std
outsb
xor
mov
es
jmp
cli
pop
rcrl
ds
xchg
push
mov
sub
mov
int3
mov
sub
ret
and
fbld
ret
inc
or
pop
loop
jp
shll
outsb
jg
xchg
repnz
inc
loope
sub
lcall
mov
les
and
and
sub
sbb
aaa
ret
inc
cwtl
xchg
jb
inc
mov
popa
sub
mov
sbb
mov
jbe
adc
test
add
andl
lods
pusha
imul
and
and
sub
ljmp
adc
jae
ja
push
mov
cmpsb
pusha
push
add
jo
arpl
mov
or
xor
out
mov
rcl
ret
jb
icebp
sbb
and
jge
pushf
cld
add
mov
ret
stos
xlat
mov
mov
enter
dec
clc
sbb
xor
cmp
loopne
mov
push
dec
xchg
xchg
dec
and
inc
push
pusha
int3
daa
mov
lea
dec
roll
aas
scas
sbb
push
aam
and
sarl
aas
stos
pusha
dec
lea
sub
jecxz
paddsb
cmpsl
pop
add
cmpb
aam
xlat
es
ret
push
in
adc
pop
jle
add
sub
mov
cmp
scas
lods
sub
movsl
mov
dec
enter
push
test
cmp
jle
fisubrs
sub
dec
pop
push
push
xchg
ror
cmp
faddl
fidivrl
lds
test
loop
xor
mov
cmpl
jp
adc
arpl
jp
lcall
sub
dec
mov
sbb
pop
dec
jecxz
jae
mov
xor
lds
outsl
mov
je
sub
cmc
mov
sbb
in
test
je
out
and
pop
movsb
mov
inc
fs
outsl
pop
jno
jns
sub
adc
shl
data16
sti
adc
stos
and
mov
adc
jg
aam
not
push
push
or
test
shlb
mov
xor
xor
insb
scas
clc
movb
mov
shrl
dec
pusha
ret
cmp
repz
sbb
xor
pop
jmp
in
push
push
cltd
jl
inc
out
pop
xor
dec
sub
xchg
jl
outsb
daa
pop
mov
shlb
stc
or
decl
mov
lods
inc
ss
xchg
jmp
inc
shrb
in
shld
hlt
dec
or
imul
andl
repnz
sub
push
xor
inc
addr16
imul
cmp
mov
xor
loope
sbb
sahf
out
rclb
fnsave
cmp
popf
int
movsl
push
cltd
stos
push
sub
and
and
outsb
sub
sbb
jp
push
add
inc
cmpsb
and
pop
mov
add
adc
xchg
jl
call
int
fcmovne
sbb
mov
pop
cmp
stc
mov
mov
int
rcll
int
lret
add
iret
dec
test
cltd
hlt
sbb
pusha
dec
mov
mov
fdivrs
pusha
mov
leave
mov
fidivl
add
imul
sbb
push
push
ret
xor
mov
fistpll
xorb
pop
mov
nop
test
pop
sub
push
pushf
jo
mov
arpl
mov
movsb
cs
mov
mov
insl
jnp
sahf
jge
xor
jb
jne
sbb
pop
test
jne
xchg
fs
jp
rcl
out
pop
rcrl
xlat
ret
lcall
mov
sub
addb
int3
cmp
and
push
jo
loop
iret
mull
in
out
jo
cmpsl
xor
imul
mov
stc
xor
pop
js
dec
mov
pop
dec
test
add
jp
fldl
fnstsw
ficoml
push
pop
testl
push
adc
dec
aaa
imul
loopne
outsb
nop
test
dec
inc
roll
push
push
jb
xorb
add
test
and
push
scas
bound
push
int3
int
add
leave
inc
mov
mov
stc
jl
inc
aaa
andb
popl
xlat
pop
push
fisubrs
push
clc
mov
jno
sub
jmp
sbb
ds
ja
lds
or
ljmp
popa
mov
cld
call
ja
and
mov
and
call
lea
hlt
notl
mov
add
sahf
jns
into
and
in
ret
aas
das
mov
sub
sub
in
jne
add
inc
fiaddl
rcrl
and
xlat
dec
or
push
dec
fstpl
mov
div
fistl
pop
cltd
xor
pushf
jae
push
dec
sbb
gs
scas
rcr
cmp
ja
jmp
xchg
push
xor
inc
fbld
popa
outsb
dec
fisubrs
push
add
adc
mov
andl
dec
xchg
mov
and
fwait
das
in
xchg
aad
gs
ds
jl
mov
stc
rcrb
jp
lret
inc
rorb
out
out
ss
jl
or
dec
push
dec
lahf
xor
stos
dec
xchg
dec
repnz
mulb
and
mov
icebp
fistps
lcall
cli
mov
mov
jg
fcomps
or
shlb
sub
dec
popf
mov
cs
lock
inc
inc
ret
fcoms
cli
test
daa
and
sbb
push
jg
inc
push
pop
mov
sub
cmpsl
fimull
imull
aam
movsl
xchg
and
test
ret
in
aaa
xchg
pop
mov
cwtl
out
rorb
out
add
add
xbegin
sbb
bound
add
mov
hlt
mov
sahf
mov
cmp
inc
mov
dec
rclb
sbb
and
pop
push
pop
mov
dec
call
inc
mov
jl
fsts
in
bound
adc
and
dec
cmp
test
and
sti
and
ret
mov
and
insl
push
out
jae
lods
adc
sub
scas
les
scas
inc
push
lods
mov
and
sbb
add
sub
sbb
lret
aam
lret
loop
in
sbb
xchg
mov
pushf
adc
dec
cmp
ss
or
shlb
or
inc
pop
in
gs
xlat
push
sbb
jbe
loop
dec
lods
mov
mov
fldl
movsl
sarb
pop
pop
insl
dec
mov
or
inc
mov
mov
ljmp
repz
je
xchg
dec
aam
dec
cmpsl
out
mov
fdivs
das
shrb
inc
test
loop
fwait
and
push
inc
jns
dec
xchg
cmp
int3
outsl
cmp
fcos
mov
leave
or
lahf
sahf
mov
sub
insl
mov
or
dec
jne
mov
loop
loopne
in
inc
cmpsl
out
lea
mov
dec
pusha
arpl
push
fwait
mov
in
in
jle
sub
out
mov
cmp
int
or
add
push
cmpsb
xor
inc
push
xchg
push
push
sub
addr16
mov
push
xor
add
jns
enter
out
cmp
data16
inc
or
into
and
aas
mov
ljmp
scas
loop
xchg
lahf
scas
les
push
sub
lods
sbb
loopne
inc
rcr
je
xlat
mov
inc
jecxz
cld
adc
jmp
adc
push
js
adc
mov
das
test
aam
mov
mov
push
sub
lds
js
adc
cs
sub
int
shl
and
stos
test
shl
jecxz
std
pop
leave
cmp
movsl
adc
cld
push
mov
out
mov
enter
inc
sbb
inc
adcl
pop
add
aam
xchg
push
in
or
pushf
xchg
jo
sub
mov
sub
pop
scas
and
stos
push
addr16
clc
test
mulb
and
mov
jmp
shr
popf
movsl
sub
lds
shll
mov
push
jbe
stos
fstpt
js
xchg
aam
push
incb
adc
dec
lods
sti
mov
xor
inc
icebp
add
lahf
fwait
lds
sbbl
out
pop
aaa
or
and
cltd
add
and
ss
xchg
lea
fcomps
sub
gs
push
adc
shll
or
push
inc
sbb
cs
movsb
xchg
fmull
stos
cmc
loopne
rorl
ret
fstp
ss
dec
lds
xchg
add
ret
add
xchg
bound
sub
test
mov
fld
scas
test
mov
xchg
dec
adc
push
mov
and
addb
xor
ja
inc
inc
roll
fwait
jb
cmp
cmovo
scas
std
cli
icebp
pop
or
addb
je
leave
jns
daa
stos
pushf
sbb
mov
loope
pop
mov
push
int
mov
lahf
inc
jns
scas
jne
hlt
adc
rol
or
ds
sbb
mov
cmpsl
adc
nop
push
in
cwtl
jmp
lret
cmc
sub
clc
mov
into
dec
ja
xchg
fwait
push
or
pop
pop
dec
movsl
jne
or
std
cmp
dec
shlb
push
xor
movl
and
out
push
repnz
pop
aad
dec
xor
mov
jbe
mov
xchg
or
jb
pop
repnz
xor
cwtl
lahf
pushf
lock
xchg
das
dec
int
lock
mov
jb
pop
inc
mov
nop
sub
aad
adc
shlb
pop
rclb
pop
sbb
sub
cmp
push
and
push
xor
adc
or
jnp
cmp
jbe
lret
arpl
adc
sbb
in
cmp
push
adc
fyl2xp1
imul
xor
adc
fdivr
fsubrl
xchg
push
or
mov
sbb
repz
int3
push
outsl
arpl
int
out
xor
push
mov
sahf
xchg
or
sub
push
xchg
add
out
dec
popl
jnp
push
hlt
and
push
les
aad
jge
sbb
sbb
push
push
xor
or
dec
insb
andl
dec
nop
cmp
std
loop
add
mov
xchg
cmc
in
xchg
dec
out
aad
in
xchg
loopne
jb
rclb
pop
sbb
popa
cs
dec
frstor
xor
or
popa
fcmovbe
dec
stos
pop
jmp
pop
pop
dec
adc
ret
jae
icebp
or
jns
sub
test
pop
jae
adc
push
add
inc
and
out
xor
jmp
adc
lods
adc
xor
mov
cmp
pop
mov
jge
fsubrs
test
leave
push
aad
mov
mov
shrl
add
cld
pop
sbb
lock
in
rcl
jle
fs
sub
mov
ret
dec
dec
cli
and
sbb
jl
add
xchg
push
pop
xchg
mov
or
bound
mov
add
inc
lret
pop
cld
push
aas
xchg
in
bound
sahf
xchg
imul
lret
xorl
outsl
jo
daa
pop
cmp
insl
sbb
cmp
xchg
xchg
jne
jl
data16
adc
or
and
or
aas
insl
sbb
sub
xchg
jae
subl
out
jl
fistl
push
js
xor
mov
sbb
in
dec
mov
push
inc
out
enter
push
mov
fwait
ss
insb
mov
cmp
das
les
std
sub
fsubrl
sbb
stc
nop
hlt
sbb
hlt
mov
xor
jnp
xchg
jle
xor
ret
jmp
in
xchg
je
test
lds
in
mov
sbb
xchg
sub
lds
test
xorl
xchg
adc
lea
jg
pop
and
push
sub
cmp
scas
hlt
test
adc
cmc
daa
rclb
cmp
fisttpll
mov
mov
into
arpl
mov
daa
sub
aam
rorl
in
sub
inc
in
mov
mov
test
paddd
fisubrl
dec
jle
cmp
rcll
jg
add
int
mov
inc
iret
mov
or
mov
mov
jmp
das
stos
and
and
sub
pop
repz
cmpsb
mov
pop
xchg
pop
sbb
inc
sbb
pop
mov
cmc
dec
push
jae
lret
cmpsb
mov
ret
and
push
fidivrl
xchg
fadds
dec
mov
loope
pushf
mov
xor
pop
stc
push
or
cmp
xchg
xchg
inc
clc
stos
mov
loope
je
ret
das
lret
ss
test
daa
and
std
je
aam
inc
imulb
add
mov
orl
jecxz
cmpsl
and
call
ret
inc
pop
mov
cmp
shlb
outsb
stos
andb
out
lcall
arpl
pop
out
sar
adc
push
sbb
pop
push
sub
pushf
jl
sbb
xchg
rcll
dec
push
shll
fldt
add
into
dec
outsb
cmc
jbe
push
add
roll
pushf
xchg
mov
push
push
ret
and
hlt
inc
pusha
jb
xchg
mov
shrl
push
cwtl
and
pushf
imul
push
outsl
sub
inc
adc
imull
flds
rolb
int3
int
sbb
das
popf
bound
adc
cmp
call
cmpsl
pop
test
inc
and
std
mov
cmpl
pop
xchg
testb
jb
enter
int
notl
lea
out
push
nop
add
adc
sbb
aam
pop
adc
enter
mov
mov
adc
test
lock
sarb
imul
sbb
and
testb
mov
scas
popf
xor
stos
inc
push
orb
loop
lds
pop
inc
mov
pop
mov
fmull
or
jne
aas
sbb
lcall
pusha
add
stos
and
shlb
push
pusha
je
fmul
sub
xchg
fwait
mov
push
and
and
cli
jns,pt
ljmp
addb
xor
sub
fucomip
insl
jmp
xchg
mov
hlt
xchg
lret
xor
lds
clc
and
pop
jp
stc
sub
aam
imulb
or
sub
cmpsb
or
int
aam
mov
push
popa
xchg
sub
outsl
je
and
sahf
lret
push
cmpsl
inc
jl
or
xorb
ret
or
sti
inc
into
test
outsb
dec
mov
xchg
lds
lea
jbe
add
shll
inc
lahf
lcall
push
cmpsb
xlat
dec
cmp
pop
stos
mov
fistl
fs
cmpl
or
ss
imul
mov
test
mov
sub
fsqrt
or
add
je
das
sti
in
imul
cmp
xchg
xchg
inc
dec
xor
mov
cmpsb
fists
or
mov
xlat
mov
arpl
jo
adc
inc
outsl
add
imull
bound
ret
cmp
lea
je
dec
loop
mov
hlt
dec
dec
jg
pushf
call
mov
mov
int
not
fidivs
test
mov
push
mov
mov
lea
sub
xchg
call
bound
mov
cmp
in
nop
xor
test
adc
inc
movsl
adc
cld
jmp
xor
shrb
xchg
and
adc
mov
xchg
testb
int3
mul
shlb
loopne
lds
int3
or
push
add
test
rcll
jmp
sbb
pop
mov
in
fsubrp
mov
or
mov
cmp
lods
mov
cli
rcrl
or
lahf
into
mov
imul
jge
cmp
clc
or
sub
jmp
add
notb
popa
movsl
push
imul
inc
test
clc
nop
repnz
notl
sub
fsts
dec
push
jecxz
lock
std
adc
jge
ja
pusha
movb
jecxz
mov
add
jmp
cmc
int3
lret
mov
fcompl
movb
pop
mov
test
aam
in
adc
xchg
or
mov
addb
sarl
outsl
sarl
int3
ror
out
jle
xchg
adc
pop
mov
dec
test
js
jnp
test
sub
testb
inc
cmpsl
popa
jge
pop
lods
sbb
dec
stc
stos
sbb
lret
and
mov
mov
jl
inc
sbb
mov
jns
and
jl
testl
dec
inc
inc
push
and
adc
and
pop
std
ja
inc
imul
cmp
and
push
aaa
add
adc
push
mov
imul
cmp
enter
adc
in
andb
enter
and
sarb
jno
dec
out
mov
leave
imul
je
nop
imul
inc
pop
cmp
fiadds
ja
ret
mov
shl
xor
xchg
inc
dec
jne
push
outsb
sub
mov
es
jbe
aad
dec
jae
mov
mov
inc
in
aas
jno
fsubs
jle
ja
push
cmp
xchg
cmp
in
out
adcl
std
test
mov
pushf
mov
pop
inc
leave
sti
inc
lret
or
outsl
stos
call
popl
lcall
mov
or
inc
test
and
mov
or
xor
imul
xchg
jl
std
cmp
fbld
stos
ret
sbb
gs
jnp
sti
in
clc
sahf
mov
and
loop
shrl
add
daa
add
xlat
and
mov
out
adc
sbb
or
inc
mov
inc
stos
sub
jl
mov
andl
cmc
ljmp
jge
and
gs
fwait
lds
pop
mov
fbstp
scas
sub
cmpsl
mov
adcl
jnp
jb
aaa
in
fadds
jp
jno
rorb
xchg
cmpsb
aas
cmp
mov
xorl
nop
icebp
or
inc
pop
stos
aad
sub
pusha
daa
repz
cmpsb
fisttpl
jno
or
sub
int3
test
repz
jl
mov
adc
xchg
leave
ds
push
jnp
push
mov
add
add
fdivs
or
pop
inc
out
out
in
adcl
xchg
add
mul
movsb
ja
cmpb
mov
loopne
or
jmp
enter
cmpsl
rcl
push
lcall
andl
test
cmp
shll
push
sbb
test
dec
iret
dec
sbb
loopne
clc
mov
mov
andl
add
mov
test
orl
pop
in
jecxz
jmp
ja
mov
pop
xchg
rcl
movsb
add
fs
roll
xor
jne
mov
mov
or
imul
in
adc
out
notl
mov
jns
xchg
mov
pop
out
mov
pop
push
dec
lods
ret
cld
sbbl
ja
jl
mul
jle
je
or
imul
pusha
lcall
fnstcw
dec
cltd
ja
inc
jb
pop
jbe
mov
mov
lahf
popf
in
pushf
mov
inc
sub
repz
sti
cmp
and
inc
insl
inc
mov
lock
cli
sbb
js
push
mov
inc
adc
pop
mov
push
outsl
fadds
aaa
or
xchg
mov
movsl
rolb
mov
lods
mov
pop
xchg
call
mov
push
pusha
dec
lds
sbb
mov
mov
aas
mov
enter
les
xchg
aaa
movsl
inc
add
cmc
test
out
cwtl
gs
dec
mov
pop
in
out
sbb
cwtl
pushf
in
add
aam
cmp
sbb
bound
cmp
jbe
int
add
ja
ljmp
sti
out
stc
fs
roll
mov
stos
jle
das
ss
sub
repnz
pop
ret
test
xchg
mov
ja
loop
scas
sbbb
test
mov
movsb
sub
cmp
push
and
xor
stc
outsb
push
push
inc
pop
arpl
in
sbb
dec
in
add
mov
or
loopne
mov
mov
aaa
mov
int3
inc
fwait
pushf
inc
js
add
int
fidivs
lea
inc
jle,pt
das
ss
mov
inc
cmp
cmpsb
jns
mov
pusha
xor
or
pop
mov
addr16
in
mov
mov
in
mov
xchg
mov
fistpll
mov
xor
add
stos
jg
test
add
push
lds
cwtl
pop
fnstcw
mov
and
cmp
insl
push
jno
aas
cmp
out
icebp
xchg
in
mov
imul
pop
dec
push
imul
push
or
pop
xor
inc
popa
push
in
insl
lods
scas
call
int3
and
xchg
push
mov
adc
data16
cs
jnp
xchg
xchg
aaa
inc
fisubrs
add
dec
mov
push
mov
pop
daa
mov
sbb
cmp
pop
and
cli
or
mov
imul
inc
les
mov
pop
mov
int
mov
stos
repnz
pop
dec
stos
je
mov
sbbb
sub
pop
mov
push
aad
clc
flds
addr16
pop
xchg
adc
push
les
lock
das
dec
cmp
aad
jl
xchg
ret
jl
sarb
xor
psubq
ljmp
repnz
pop
push
dec
mov
inc
out
sub
dec
mov
das
jnp
cli
decl
mov
xchg
shll
mov
xor
push
enter
dec
or
and
jmp
out
or
push
test
mov
ljmp
pop
dec
mov
out
fildll
cmpsl
imul
mov
outsl
jnp
adc
add
adc
pop
ficoml
ret
ret
test
xor
xor
push
and
mov
add
jno
mov
icebp
scas
ljmp
fisttps
mov
xchg
xchg
nop
imul
lcall
pusha
jmp
aam
mov
lods
xor
mov
mov
and
enter
cmp
add
scas
sti
addr16
test
dec
dec
test
dec
nop
or
jns
fstpt
or
rorb
pop
add
cmpl
test
pushl
addr16
mov
jg
rclb
loop
les
aas
push
inc
mov
mov
cmp
stc
aaa
dec
mov
add
aas
test
test
scas
mov
or
popa
xchg
pop
mov
ficoml
into
movsl
mov
fnsave
andb
iret
fstpl
loope
mov
mov
int3
lret
lcall
pop
fisttps
xchg
jnp
or
aam
lcall
cmc
loop
jl
mov
dec
jae
sbb
mov
lea
fs
jno
hlt
mov
xchg
jo
and
lods
sub
cmp
pop
cmp
xchg
sbbl
into
sub
out
xchg
add
fisubrl
in
add
lret
jno
int
cltd
sahf
xor
arpl
xchg
mov
icebp
pop
push
jge
xor
repz
repz
push
and
ret
mov
daa
push
mov
mov
js
daa
push
add
fnstcw
fiaddl
mov
cmp
pop
clc
mov
jns
lods
es
jnp
sub
jl
test
dec
roll
push
adc
mov
sahf
pop
adc
sub
sti
sti
push
pop
in
or
mov
icebp
je
mov
add
gs
pop
pusha
mov
or
or
ja
call
add
bound
mov
cli
addr16
push
sahf
pop
fmull
rcll
cmp
jnp
push
loope
shrl
subl
mov
pop
lahf
push
imulb
test
mov
mov
inc
cwtl
fisttps
xor
inc
or
and
xor
xor
adc
les
sets
es
xor
shll
sbb
stc
roll
pop
lods
adc
ret
in
loope
mov
xchg
or
xchg
stos
inc
and
lcall
jp
loope
test
out
mov
ret
push
je
inc
sub
movsl
sarl
popa
sub
int
sub
scas
std
popf
inc
dec
pop
mov
or
jecxz
rorl
insb
mulb
lods
inc
in
shrl
xor
sti
js
daa
iret
or
mov
mov
xor
and
or
xor
xlat
inc
inc
les
mov
testl
sahf
outsb
cmp
pusha
push
jmp
inc
loopne
hlt
test
push
repz
push
pop
std
add
xchg
or
fs
insl
jns
sbb
xor
arpl
lcall
jecxz
pusha
rorb
sub
push
imulb
int3
sti
mov
cmpsb
jmp
inc
dec
pminub
adc
bound
adc
int3
mov
int
and
mov
push
enter
xor
fwait
xchg
sbb
int
arpl
xchg
xor
pop
jecxz
in
jg
inc
or
xchg
mov
adc
mov
add
clc
rcrl
push
add
jb
cld
into
je
mov
push
push
xchg
push
or
lret
pop
or
sub
xchg
lea
lret
popf
bound
push
int3
hlt
xchg
fcompl
dec
or
inc
add
dec
in
adcb
cmpsb
jl
bound
xor
pop
dec
inc
pop
out
mov
frstor
cmp
popf
push
mov
and
push
test
sbb
stc
pop
or
enter
or
ds
mov
mov
lds
mov
fisubs
mov
and
mov
rcrb
pop
lds
std
icebp
xchg
inc
popf
shr
outsl
popa
ffree
dec
inc
adc
icebp
jns
push
mov
jns
popa
cmc
inc
xor
stos
push
movsl
sbbl
scas
push
das
cmp
scas
icebp
gs
mov
enter
push
jl
sub
orl
jg
jmp
stos
mov
jb
sub
and
mov
xor
jo
mov
clc
mov
fcoml
pop
in
inc
je
xchg
pop
pusha
sub
lahf
mov
clc
push
push
xorl
adc
or
xor
jg
testb
add
and
mov
or
mov
sub
jns
das
mov
cmpsb
push
les
sub
and
lods
leavew
hlt
push
ret
imul
stos
cmp
sahf
rorb
es
jae
ja
pop
cmpb
rcrl
mov
fcomps
imul
sbb
out
daa
ds
mov
add
sarl
bound
dec
jmp
ss
mov
stc
jge
pop
jne
mov
inc
test
cli
jo
les
test
mov
nop
jno
in
fs
lret
bound
mov
ret
aas
or
jge
mov
inc
mov
xor
add
lret
xchg
jmp
push
jle
das
pop
mov
imul
lods
jmp
popf
mov
imul
les
mov
cwtl
add
daa
sub
mov
fdivrp
inc
dec
lret
dec
jmp
into
pop
jmp
gs
mov
cmc
sti
dec
repz
das
and
fs
push
cmp
mov
clc
push
nopl
xor
je
dec
adc
shl
mov
dec
mov
mov
pop
test
dec
arpl
inc
xchg
push
arpl
mov
xchg
int
add
in
cmpsb
or
jae
sbb
mov
push
loope
imul
shll
cmp
lahf
sbb
push
or
mov
int
pop
cmc
fucom
rsm
mov
pop
orl
mov
pop
bound
mov
xor
and
roll
inc
jle
sub
stos
pop
shrl
test
icebp
adc
sub
jp
xlat
lods
inc
outsb
ljmp
jl
inc
push
shrl
and
insl
sti
loope
jmp
test
mov
dec
js
inc
les
hlt
mov
movsl
popf
xor
mov
push
rolb
rorb
pop
add
push
add
pusha
repz
xor
sub
pop
and
and
dec
dec
nop
mov
push
pop
add
add
pop
mov
inc
stos
adc
jno
inc
add
or
imul
pop
push
mov
fldenv
or
jmp
xor
jle
into
push
xor
out
test
imul
dec
ljmp
clc
cmp
orb
mov
mov
clc
dec
outsl
mov
lea
jnp
push
std
pushf
movsl
fadd
sahf
or
mov
mov
sbb
fcoml
add
in
subb
std
and
stos
jne
cli
push
cmp
mov
iret
cmp
loopne
scas
lea
push
inc
add
add
push
inc
sub
iret
sbb
in
movsl
jge
ss
negl
insb
cmp
and
ljmp
add
imul
dec
cmpl
daa
js
inc
xchg
in
jge
lods
sub
inc
push
or
loop
sbb
adcb
dec
mov
out
push
xchg
outsb
ret
dec
call
pop
cmpsb
dec
mov
xchg
stc
sti
add
cmp
or
push
mov
xor
inc
mov
imul
cmpsl
int
cmp
pop
lret
stc
je
dec
stos
cmpsb
lock
sub
sbb
cmp
popa
xor
out
sub
inc
mov
dec
dec
pop
pushf
sbb
stc
add
daa
jo
xchg
cmpsl
lods
push
imul
add
sub
pusha
sub
cmpsb
dec
ret
xchg
or
mov
adc
notb
in
ret
cs
mov
or
mov
sti
mov
mov
and
pop
inc
scas
aam
xor
push
mov
ljmp
push
testb
cmp
stos
insl
fsubs
ret
push
jns
ja
hlt
push
ret
jns
mov
mov
pop
or
mov
adc
clc
fdivrs
pop
sbb
neg
xchg
out
daa
aad
mov
inc
subb
ror
loope
repz
pop
dec
push
or
cmpsb
xchg
mov
sti
popl
pop
and
andb
mov
sbb
jnp
test
sub
pushl
and
inc
xor
dec
or
arpl
adc
pop
pop
out
popf
mov
mov
push
divl
lcall
pop
dec
cmc
andb
push
mov
stos
or
addr16
sbb
dec
pop
xlat
popf
xor
fistpl
inc
in
mov
sub
and
icebp
push
pop
adc
repz
int
mov
pop
outsl
cmp
mov
jno
repnz
imul
ds
inc
push
stc
leave
xorb
jnp
mov
mov
xor
xchg
sti
xchg
mov
popf
int
rcrb
imul
bound
mov
enter
push
xor
sbb
or
int
add
adc
aad
adc
jno
jp
imul
xchg
sub
loopne
adc
sbb
icebp
movsb
ja
pop
xor
scas
ror
ss
test
decb
push
pop
cmpb
xchg
lds
aam
loop
add
lods
iret
cmp
jecxz
xor
ss
jo
pop
jp
xchg
or
inc
lahf
pop
sarl
in
add
mov
mov
movsb
or
popf
iret
jb
stc
add
cmp
cmpsb
arpl
idivb
nop
ja
inc
sbb
clc
cmp
fnstsw
arpl
stc
mov
push
fsubr
and
into
int
pop
sub
sbb
push
in
add
repnz
js
inc
mov
stos
xor
es
xor
out
mov
push
xor
fstpt
xchg
and
xchg
xlat
dec
inc
stos
jne
cmc
xchg
test
movsb
pop
lcall
xor
inc
outsl
push
or
divb
dec
mov
aaa
add
aaa
push
xchg
cs
or
loop
out
cs
push
outsb
sub
std
ja
scas
cmpsl
dec
xor
pop
sbb
mov
int
xor
ds
mov
rorl
xchg
push
mov
push
sarl
sub
cmp
cmpxchg
lock
insb
repnz
ret
stos
jecxz
xor
cbtw
xchg
cli
cltd
into
mov
and
mov
or
cmp
sahf
mov
fnstcw
data16
cmp
inc
push
mov
imul
or
mov
inc
mov
mov
iret
dec
mov
idivb
lds
lret
add
mov
push
fwait
cmovl
mov
pop
cmp
push
jecxz
sub
sub
or
cmpsb
clts
pop
mov
stos
jbe
xchg
mov
popa
xor
outsl
ljmp
insl
xchg
sbb
shl
add
inc
lret
mov
push
cmp
push
adc
sahf
jle
mov
inc
mov
cmp
cmp
imul
imul
mov
cli
mov
aaa
popa
ret
push
fdivl
sbb
xchg
nop
adc
push
not
decb
in
mov
cltd
daa
jne
int3
sar
sbb
pushf
dec
and
or
aad
popaw
push
xchg
mov
inc
xchg
sbb
subl
popa
mov
sarl
xor
or
pop
mov
xor
mov
and
adc
pop
ret
mov
nop
mov
push
dec
cmp
mov
jae
and
rcrl
dec
and
push
lods
cmp
leave
arpl
xchg
inc
movsb
imul
xor
mov
sub
adc
test
mov
adc
dec
dec
pusha
pop
pop
inc
inc
pop
popa
jo
add
sbb
mov
mov
leave
mov
sbb
in
adc
sti
shll
dec
inc
cmp
stc
fimull
ss
adc
das
sbb
sub
jno
pop
sbb
xchg
xor
fisubrl
cmpsl
push
loope
fdivr
ficoml
movsb
mov
loopne
shrb
notb
mov
repnz
repz
push
pop
cltd
mov
loope
out
sub
add
mov
xor
fstpt
test
xor
mov
nop
out
dec
xchg
cwtl
outsb
pushf
outsl
sbb
notl
fmuls
repnz
mov
inc
iret
mov
sub
shlb
in
mov
dec
popa
jl
jns
mov
bound
je
and
rcrb
in
xor
out
addl
enter
int
push
push
jne
jge
jg
mov
movsb
fsubrl
rorb
mov
pop
ss
sub
iret
dec
push
mov
push
xchg
nop
pop
mov
enter
jne
jge
enter
shll
xlat
push
dec
and
sbb
fmull
cmovne
xlat
adc
stc
or
push
mov
test
ficoml
sub
fsubs
mov
shlb
pop
sub
fidivrs
ret
and
bound
dec
subl
and
jb
sub
fisubrs
fdivrp
mov
mov
les
xchg
fcmove
cld
jae
and
out
dec
mov
dec
mov
mov
cmpsb
int3
jg
mov
adc
fisubs
and
shrb
pop
stos
dec
xchg
cs
int
ss
cmp
int
out
outsl
fldl2t
lock
psubsw
jle
into
daa
pop
xlat
into
das
fs
and
sbbl
dec
cwtl
push
hlt
jecxz
jecxz
sbb
cmpsl
xchg
add
jp
jns
mov
ret
data16
mov
xchg
cltd
mov
and
mov
jecxz
xchg
pop
push
mov
ljmp
test
rcll
incl
xchg
cmc
scas
or
sub
outsb
pop
lds
lock
test
mov
inc
pop
pushf
sarl
sti
movsb
pushf
mov
imul
into
in
jns
push
inc
aam
test
inc
test
imul
or
sbb
clc
mov
push
add
dec
xchg
or
rolb
rcr
js
test
dec
pusha
cmpsb
aas
push
int
mov
rcl
push
popf
pop
add
out
push
sbbb
cmp
insl
mov
cli
xchg
int3
imul
mov
arpl
icebp
or
mov
mov
mov
dec
fldcw
lock
dec
lret
ret
xchg
xchg
push
movsb
pop
xchg
xchg
jmp
add
mov
mov
jne
sub
mov
mov
mov
push
sbb
jp
cmpsb
mov
aam
roll
movsb
call
cli
or
pop
arpl
pop
pop
sti
movsl
movsb
pop
out
mov
cmpsl
mov
xor
add
jnp
mov
sub
dec
dec
lcall
mov
cmpsb
mov
jl
mov
pop
hlt
in
add
ret
leave
jb
cmp
cmp
xor
es
and
or
mov
stos
scas
sub
scas
or
dec
daa
mov
lods
pop
sbbb
jns
lock
out
fwait
rcr
lods
jmp
sbb
ret
fdivp
xchg
xor
aaa
adc
xchg
pop
mov
pop
out
cmp
and
popa
fwait
push
lea
jle
loopne
pop
add
xor
mov
mov
mov
fbstp
jle
ljmp
inc
cmpb
sbb
call
inc
imul
mov
sub
mov
sub
mov
fwait
ds
push
sub
mov
cmp
cmp
call
popa
decl
inc
mov
add
cmpsl
out
out
ja
scas
mov
in
pop
adc
testl
scas
rol
push
xorb
orb
mov
jmp
jns
enter
sbb
adc
cwtl
fnsave
jbe
call
lret
push
mov
call
je
cmp
or
jge
mov
xchg
xor
mov
push
adc
mov
lret
movsl
scas
in
xchg
fdivrl
cmpsl
cmp
or
jae
outsl
cmp
sub
mov
or
clc
push
call
pop
cli
fcmove
inc
or
inc
adc
push
fistps
fmul
mov
sub
imul
add
sbb
inc
loopne
pop
clc
jle
bound
adc
xchg
or
inc
push
movsl
nop
mov
xor
xchg
sahf
stc
leave
jo
decb
popa
jno
push
sub
dec
cmp
sbb
add
inc
mov
es
adcb
loopne
jb
icebp
pusha
jp
movsb
inc
fisubrs
push
xor
sub
mov
shlb
iret
sbb
and
mov
fdivrl
mov
pusha
add
inc
ljmp
ljmp
rcl
out
and
fsubl
lods
push
mov
inc
and
out
arpl
inc
and
sbb
jle
pop
dec
sar
cmpl
and
mov
out
xchg
inc
mov
jae
test
or
int
dec
mov
ficoml
stc
rcll
jo
pusha
ficoms
jp
stos
fisttpll
inc
sti
mov
mov
rsqrtps
jg
or
ss
sbb
pop
sbb
imul
xor
lcall
dec
push
mov
mov
cs
pop
out
mov
sub
push
mov
std
xchg
pop
out
notb
fistps
sub
mov
pushf
lahf
test
stos
test
cld
lods
jo
adc
push
mov
daa
movsb
mov
adc
cmpl
dec
push
bnd
mov
pop
hlt
lret
jo
dec
pop
mov
adc
jb
ret
movsb
nop
ret
int
xlat
pop
shll
and
aad
inc
sub
aaa
icebp
add
pop
mov
popf
out
sub
outsb
and
lods
rorb
xor
mov
mov
outsl
mov
fs
test
xchg
mov
inc
out
sarl
stos
mov
ss
loop
xor
mov
xchg
adc
cmp
adc
subb
repz
cmp
jne
les
call
add
ja
push
fbstp
in
cmp
sub
or
inc
subb
pushl
mov
cmp
add
mov
leave
jge
jbe
push
jbe
fidivrl
jbe
fbld
add
hlt
stos
js
xlat
sahf
mov
xchg
push
ljmp
jb
and
daa
cltd
jge
adc
sbb
push
cmpsl
in
sbb
fisttpl
cmp
jmp
pmullw
push
arpl
or
aas
test
pop
push
mov
movb
and
push
dec
rcrb
dec
add
pop
imul
jg
lods
or
lods
push
fmul
decb
mov
andl
lea
outsb
push
or
outsb
dec
dec
out
mov
cltd
imul
mov
insl
insb
fistps
pushl
insb
jnp
mov
arpl
adc
pop
test
jns
jae
pop
xchg
jo
out
mov
sbb
stos
xor
scas
pop
movsb
xchg
aas
mov
mov
fcoms
jbe
dec
sbb
loope
jge
adc
sti
gs
mov
mov
jmp
sarl
sbb
int
les
movsl
mov
or
hlt
lds
push
sbb
cmp
repz
into
fldl
cmpsl
lock
and
and
pop
xchg
cmp
in
jle
jnp
cwtl
cmc
mov
mov
fidivrl
mulb
ja
or
adc
xchg
cmp
lret
xchg
lds
rolb
scas
adc
int
int3
mov
mov
cmp
jge
mov
dec
adc
scas
or
mov
dec
aas
push
add
hlt
lds
sub
adc
cltd
insb
add
pop
test
aad
and
xor
add
mov
iret
xchg
movsb
loopne
shrb
cli
inc
add
cltd
leave
mov
pop
out
movsb
mov
scas
enter
sub
in
xor
dec
push
test
pop
popa
mov
jno
loop
in
cmpsb
test
mov
sbb
xchg
andb
dec
fldz
nop
adc
stos
jno
dec
ss
inc
mov
jno
mov
mov
and
pusha
jns
inc
ja
cmpsl
icebp
xchg
dec
and
cmp
inc
aas
jge
shll
test
dec
jl
sub
mov
test
xchg
out
xlat
mov
popa
or
inc
leave
adc
jg
andb
lods
dec
sbb
mov
sahf
out
jno
jne
enter
cmp
mov
es
mov
xchg
sub
inc
xchg
ljmp
shll
pmuludq
int
pop
xchg
push
mov
lea
push
in
jne
loopne
int3
sarb
jnp
daa
xchg
les
pop
add
addr16
rcrl
insl
add
scas
loopne
cmp
subl
xchg
dec
mov
aas
push
rcr
les
xor
imul
mov
push
adc
mov
push
hlt
stos
ljmp
xor
ret
fisubl
xchg
push
test
loope
mov
int
mov
in
fbstp
shlb
pop
outsl
jb
imul
hlt
sbb
mov
popa
ja
mov
arpl
loope
xchg
cmp
gs
sarb
push
fimull
jne,pt
mov
sbbb
call
cld
mov
and
and
cmp
mov
addb
and
int
cli
shr
into
ljmp
int3
or
push
fldcw
pcmpgtw
add
add
inc
es
or
ret
add
into
inc
mov
cmp
ret
and
sahf
je
xlat
pop
xchg
addr16
jecxz
push
xchg
sbb
pushf
mov
lds
mov
xor
and
movsl
dec
or
fcomi
adc
jmp
fs
mov
dec
jecxz
lahf
pushl
das
dec
cmc
jp
add
loopne
inc
aam
push
scas
nop
mov
arpl
cmp
jbe
inc
mov
iret
pop
add
int
dec
scas
lahf
les
cmpsl
shlb
cmp
int3
cmp
sub
icebp
xchg
cmp
xor
out
add
pushf
jne
xor
aas
repz
mov
js
aad
frstor
xchg
or
mov
ficoms
fmull
xor
and
pusha
dec
imul
pusha
xchg
pop
cltd
ja
popf
adc
and
dec
dec
out
popf
int3
push
dec
pop
mov
mov
cmp
cmp
movsl
lods
cs
mov
mov
std
sub
out
or
pop
mov
inc
pop
dec
psubusw
xchg
dec
iret
js
cs
add
in
flds
arpl
je
mov
adc
out
enter
dec
js
jge
mov
sbb
and
in
jb
insl
xlat
mov
mov
imulb
fs
fdivl
test
cmp
cmpsl
inc
xor
fs
dec
sbb
mov
mov
push
mov
jp
xchg
out
test
sarl
mov
lahf
movsb
or
xchg
sub
xorl
sub
iret
cltd
mov
dec
sub
mov
push
pusha
adc
pop
jle
jecxz
fs
pushf
lods
inc
in
shlb
addr16
pop
outsl
cld
push
pushfw
jo
inc
cmpsb
and
push
and
outsl
mov
cmpsb
inc
inc
pop
dec
xor
nop
jb
gs
adc
pop
jbe
adc
insl
mov
orb
dec
mov
out
aad
out
sbb
in
stc
inc
sbb
mov
sbbl
sub
pop
scas
ret
fstps
in
add
sbb
stos
lods
cltd
ss
fdivrs
mov
cwtl
fldcw
jbe
adc
cmpsb
imul
inc
pushf
push
imulb
lods
aam
ret
pop
out
pop
sbbb
aad
mov
sbb
fistpl
enter
mov
arpl
pop
xor
int3
jmp
mov
loope
bound
pop
mov
jg
testb
test
sbb
pop
test
xchg
jg
xor
fiadds
xor
les
or
aas
mov
sbbb
orb
cmpsb
push
mov
ret
mov
mov
lret
xlat
jl
adc
ret
sbb
sbb
jp
arpl
inc
sarl
mov
dec
adc
and
mov
cmp
xchg
xor
jecxz
push
test
leave
cmp
jbe
insb
add
pop
cmc
xchg
inc
pop
xchg
or
jae
adc
push
push
icebp
pop
pop
cwtl
outsl
pushf
jbe
popa
adc
xor
mov
loop
adc
js
cmp
jb
mov
jne
fldcw
lods
frstor
dec
jle
sbbl
xchg
dec
lds
add
ja
fisubs
into
sbb
inc
and
and
mov
push
push
xlat
inc
mov
faddl
sbb
pop
and
enter
or
stc
arpl
test
clc
sarl
cli
sbbb
sbb
insl
push
jne
sub
popf
rcrb
dec
test
nop
fistpl
pop
jo
push
xlat
jp
loop
push
jle
sub
pop
pusha
aas
push
sahf
xor
push
addr16
fldcw
fidivs
mov
or
jmp
ss
add
or
cs
push
jne
cmpsb
cmp
dec
mov
movsl
push
pop
icebp
jg
xor
or
test
mov
jne
mov
or
cld
in
pop
and
push
lahf
in
ret
pop
into
pusha
xor
cmp
cmc
loope
mov
in
xor
movsl
loopne
mov
sub
idivb
cmp
shll
cmp
mov
sti
negb
sbb
clc
fcoml
in
xchg
mov
into
pop
mov
sahf
sti
mov
dec
mov
movsb
inc
mov
add
pop
jno
lcall
push
sub
cmp
mov
dec
ss
scas
dec
inc
subl
addb
popa
pshufw
insl
mov
scas
fnsave
loope
hlt
mov
out
or
std
outsl
sets
rorl
mov
jecxz
fwait
add
jge
jge
inc
sbb
ret
and
mov
fstpl
inc
cmpsl
loop
faddl
add
inc
fiaddl
inc
hlt
jecxz
leave
jl
mov
in
pop
bound
jl
dec
mov
movl
or
jmp
xchg
sbb
pop
jle
into
sbb
mov
cmpl
enter
mov
xor
mov
add
imul
push
inc
or
cmp
lret
cmpsb
orb
mov
mov
and
inc
jnp
or
cmp
ds
sarl
loop
pushf
jp
cltd
mov
loope
sub
mov
hlt
push
xacquire
sub
push
cs
mov
test
lods
inc
hlt
sahf
xchg
mov
mov
cmp
test
fildl
xchg
cmpsb
fiaddl
push
inc
pop
orl
push
push
xchg
pop
push
in
aaa
sbb
mov
sbb
jge
aam
jnp
pop
orb
add
ret
push
mov
mov
mov
jno
aam
fnstsw
jle
cmpsb
mov
xor
mov
scas
mov
pop
jbe
push
fwait
sub
aaa
mov
mov
lods
mov
sbb
sub
xor
cmp
loop
in
and
fcomps
fsubl
adc
and
sub
loop
pop
or
aam
adc
aaa
jg
push
mov
loope
adc
jno
cwtl
inc
dec
icebp
rcrb
jge
cmpb
or
stc
shl
cmp
or
pop
orps
fistps
aam
js
mov
into
shrl
pop
ficoms
dec
outsl
imul
outsl
movsl
push
push
mov
cmp
stc
mov
add
ja
mov
aaa
dec
in
and
mov
mov
mov
jle
dec
gs
push
ljmp
ja
push
mov
lret
push
xchg
xchg
out
inc
adc
pop
orl
outsb
pop
js
dec
xor
pop
dec
dec
dec
loope
mov
push
lret
mov
add
and
lock
clc
push
test
mov
imulb
xchg
in
pop
cwtl
cmp
mov
mov
cmp
pusha
sarb
mov
outsb
mov
ficoml
add
xor
add
and
sbb
shrl
push
arpl
fnstcw
mov
cld
lahf
inc
or
insl
xor
dec
call
test
mov
adc
mov
xchg
aas
je
cmc
ljmp
inc
testb
add
in
frstor
fisttpll
sub
jmp
icebp
cs
stc
push
das
mov
rorl
mov
jno
enter
shll
sub
xchg
roll
clc
mov
cltd
repnz
dec
or
sbb
inc
imul
dec
pop
add
dec
pop
cli
xorl
lcall
sub
cmpxchg
test
and
dec
cmp
das
push
adc
xor
adc
adc
das
sub
push
push
ljmp
xchg
sbb
jbe
lret
jecxz
or
popf
mov
dec
push
jp
outsl
and
mov
loop
das
adc
xchg
dec
mov
and
pop
clc
add
mov
insb
jo
testb
out
or
movl
rorb
push
cmp
xor
mov
lret
cwtl
repnz
das
dec
sti
mov
jno
data16
jno
mov
add
pop
xor
inc
add
scas
sub
jecxz
or
outsl
push
inc
cmpsl
scas
pop
cmp
inc
fcompl
pop
cmp
pop
pop
push
dec
andb
lret
mov
pop
sti
mov
jecxz
aam
shl
xchg
in
sbb
mov
push
mov
into
mov
mov
insl
and
push
std
lcall
push
lods
addr16
pop
pop
addb
test
mov
lods
sbb
call
lret
push
pop
inc
xor
pop
mov
sahf
call
sti
aad
cmc
lcall
out
sti
add
orb
jecxz
cmp
fisubrl
bound
adc
xchg
in
into
loop
cmp
aam
sub
lock
push
shlb
mov
data16
add
push
jns
sti
aam
pop
stos
adcl
pop
lock
cmp
bound
sub
xorb
sub
xchg
push
mov
pop
out
adc
cwtl
sub
push
sub
bound
xchg
lods
movsb
and
jo
sub
mov
in
inc
cs
jmp
jge
inc
sbb
pop
add
mov
cmpsb
ret
fildll
mov
pop
sub
jbe
lea
xor
arpl
adc
mov
inc
sti
or
inc
test
enter
cwtl
pop
push
movsl
add
jb
aaa
and
lea
lret
add
mov
xchg
cld
lea
or
push
out
mov
xchg
xor
add
in
mov
les
or
in
jbe
jmp
jnp
pushf
xchg
repz
notl
getsec
add
movq
push
cmpsl
xchg
jns
shl
loopne
jmp
push
stc
pushf
push
dec
xor
aaa
dec
jg
addb
ja
xchg
dec
fwait
shl
xchg
lds
fcompl
fs
xor
push
xchg
das
xor
add
stc
ret
sub
js
adc
jle
in
test
xor
dec
out
jns
or
popa
lods
clc
xor
test
push
mov
ss
cmpsb
jns
fcom
xchg
adc
inc
and
sub
imul
stos
mov
pop
push
xor
aaa
cmp
mov
stc
push
test
test
xchg
cld
push
push
mov
pushf
mov
fwait
mov
in
fucomip
jne
cltd
or
xorl
or
repz
push
int
or
inc
sub
sbb
ss
out
pop
frstor
ror
jecxz
cmp
lret
push
lret
callw
dec
outsl
cmp
and
add
push
or
jmp
dec
xchg
movsl
enter
fcoml
rclb
adc
pop
mov
dec
mov
shlb
or
xchg
cwtl
xor
add
cmp
cmp
inc
push
xchg
jl
mov
fisttpl
fs
movsb
xchg
sub
imul
inc
pusha
push
fdivl
add
insl
ret
or
jmp
out
lock
call
xchg
fdivrs
fstpt
loop
test
test
and
push
sbb
jmp
pusha
push
jecxz
setne
cmp
les
cwtl
inc
mov
test
ds
jecxz
mov
insb
inc
inc
mov
push
notb
mov
fists
jle
inc
dec
jbe
sbb
adc
lretw
lcall
inc
xor
pushf
adcl
scas
add
jge
or
testl
ss
jns
out
cmp
pop
je
or
fs
test
repnz
aaa
and
dec
cmpl
cmp
and
fcomps
dec
xor
push
shll
rcrb
and
dec
cli
mov
out
leave
mov
mov
sbb
inc
or
shll
enter
jl
push
mov
movsl
js
lahf
inc
mov
ss
pop
roll
int3
mov
sbb
adc
sti
add
or
cmp
arpl
lods
jle
test
or
or
push
xchg
sbb
mov
dec
dec
mov
test
inc
lret
adc
outsb
das
cmp
jb
sbb
enter
and
xor
es
adc
fcmovne
imul
ss
add
and
call
xchg
out
sbb
out
dec
xchg
icebp
jp
iret
sub
out
or
addr16
sub
push
pop
cmp
adc
ret
bound
xor
jge
rorl
adc
std
and
adc
and
call
or
lods
std
mov
cmp
mov
pusha
ss
adc
inc
jns
and
inc
adc
ret
imul
push
xor
and
mov
pushf
lcall
fwait
sub
insb
push
mov
hlt
push
mov
das
cli
mov
inc
ret
pop
xorl
jle
movsb
rorl
jecxz
sub
pop
in
fildll
fbld
pop
xchg
lret
cmp
daa
xchg
mov
ja
ds
push
push
or
jp
stc
jecxz
jecxz
fcmovu
jmp
js
lret
push
mov
adcb
movsb
fisubs
add
hlt
mov
pop
cli
or
test
mov
addr16
test
xor
lods
pop
mov
int3
push
cmpsl
sub
lret
cmc
lret
inc
outsb
test
std
cmp
lods
mov
insb
and
fs
xor
repz
shlb
xrelease
add
fsubrl
or
lods
fwait
inc
nop
xchg
sbb
es
pop
in
dec
test
call
test
pop
sti
adc
xor
adc
clc
push
mul
popf
imul
mov
es
cmp
int
push
jnp
inc
or
jg
and
dec
jo
mov
xor
popa
inc
icebp
push
sub
mov
cmp
jne
cmp
inc
adc
push
pop
cmp
mov
loop
push
dec
sub
sbb
cs
xor
sub
lods
or
or
iret
jnp
mov
scas
xchg
ljmp
in
call
sarl
xor
mov
adcb
jge
lods
lods
push
mov
pop
dec
scas
adc
in
lahf
cmc
jge
xor
icebp
sub
adc
mov
std
hlt
sbb
mov
xchg
bnd
loop
insl
lock
or
sub
sti
or
pop
or
mov
int
stc
cmp
in
pop
hlt
mov
leave
dec
dec
sub
pop
iret
jo
xchg
add
mov
push
sbb
mov
or
mov
lret
repnz
cmpsb
cmpl
pushf
push
sub
or
mov
add
popa
jmp
cli
push
sbb
addb
nop
std
xchg
or
inc
xchg
mov
lods
negl
add
mov
scas
xor
int
in
pop
sbb
cmc
xchg
idivl
pusha
mov
mov
leave
lret
call
mov
mov
jmp
dec
iret
arpl
push
pop
inc
ficoms
push
lret
out
mov
adc
pop
push
ds
sbb
push
cmp
lahf
shrb
gs
mov
lret
test
test
sbb
ss
les
in
push
mov
fs
mov
dec
push
inc
mov
dec
dec
dec
stc
inc
pop
cltd
and
mov
inc
std
pop
aam
pop
cmp
mov
cmpsb
lahf
lcall
out
xchg
xor
or
and
das
pop
cmp
enter
roll
imul
fistps
test
fildll
mov
fstpl
inc
sbb
test
mov
fsubrl
fcompl
jno
mov
dec
fwait
and
insl
mov
aad
in
in
int3
cmp
xchg
pop
insb
inc
dec
into
pop
pop
sbb
xor
cwtl
je
mov
lds
sbb
cmpsb
xorb
popf
xchg
and
ss
mov
es
xchg
push
xor
addb
sti
cltd
jne
out
int
bound
dec
rolb
outsl
lret
loopne
add
xor
jmp
sub
push
sbb
push
insb
data16
push
cmp
pop
mov
mov
jl
pop
cmp
jecxz
cmpsl
jno
rcrl
sub
faddl
xor
movb
fsubl
push
scas
cmova
shr
ljmp
or
test
pusha
es
push
dec
pop
inc
sub
add
out
mov
dec
pop
jo
clc
inc
fsubs
mov
and
stos
outsb
jbe
sub
hlt
xor
sub
inc
add
out
sbb
aam
mov
or
test
imul
repnz
and
scas
imul
add
fisttpl
popa
and
fadds
push
pop
add
cmp
popa
sub
incl
add
ror
pusha
cwtl
hlt
pusha
cltd
mov
adc
push
fwait
stos
inc
adc
or
sub
test
xor
mov
jp
iret
sbb
aam
cmp
int
jecxz
dec
loop
inc
adc
popf
xchg
mov
xchg
mov
pushf
xor
mov
mov
dec
int
pop
rcr
xchg
xlat
popf
in
and
insb
ret
mov
scas
outsb
imul
mov
fisubl
outsb
sub
pop
ret
inc
xchg
xchg
adc
mov
push
les
ret
rorl
int
fld
xchg
ljmp
call
or
mov
cli
adc
ror
cmpsl
sbb
rcl
cwtl
aas
iret
xchg
add
les
enter
roll
sub
jecxz
adc
lret
outsl
mov
fcmovu
nop
dec
adc
or
lds
jae
mov
and
fld
les
dec
and
inc
xor
dec
inc
int3
jb
out
lahf
mov
pop
fwait
cld
mov
pop
sub
mov
jb
ljmp
jle
mov
sbb
xchg
xchg
jns
int3
cwtl
inc
xor
gs
mov
cltd
ret
clc
push
sub
daa
out
xor
leave
flds
lods
push
loopne
fiaddl
and
jecxz
cmp
fmuls
fs
nop
daa
or
and
xchg
dec
dec
int
sbb
push
sub
xchg
pop
ret
inc
push
mov
stos
inc
xor
jg
lcall
insl
lret
sub
mov
add
daa
ss
sahf
aam
rolb
cltd
mov
mov
add
jmp
mov
jo
inc
sbb
je,pn
push
add
sahf
jge
divl
rolb
aam
dec
mov
xchg
push
push
stc
mov
adc
mov
jno
dec
fcompl
fcomps
adc
test
push
pop
cmp
adc
je
scas
pop
xlat
push
jmp
pop
inc
xor
xor
aad
cmp
lret
scas
test
test
push
pop
popa
mov
lods
mov
jmp
cmpb
xchg
jmp
jae
inc
cmc
mov
mov
movsl
movsl
sahf
nop
xchg
and
xchg
sub
insl
sbb
push
fcoml
lds
pop
sub
pusha
mov
cld
xor
rclb
dec
add
push
inc
mov
or
sbb
inc
jae
int
int3
shrb
mov
cmpsb
mov
jl
sbb
negb
mov
fptan
jmp
add
sbb
push
aas
add
mov
dec
jbe
xorb
imul
add
mov
mov
lret
mov
sbb
xchg
xchg
push
es
sbb
jg
sub
scas
pushl
out
jecxz
and
and
popa
xor
out
jo
xchg
dec
add
mov
push
mov
sti
ficompl
sbb
pusha
sub
call
ja
cmp
aaa
rcr
adc
int
dec
jg
lret
xchg
jl
scas
in
jmp
popfw
fs
inc
jmp
sbb
cmpsl
xchg
pushf
lea
fldt
call
pop
in
lcall
mov
mov
adc
ss
fbstp
out
dec
pop
outsb
mov
cld
clc
or
ja
mov
scas
insl
daa
and
aad
mov
pop
sub
sbb
cmc
dec
jle
pop
fcmovu
pop
push
in
bound
lcall
dec
sub
pop
cmp
andl
cmp
and
bound
jo
xor
stos
sub
sqrtps
and
mov
adcl
mov
adc
aaa
jne
lock
outsb
jae
inc
test
decl
pushw
addr16
xor
icebp
xchg
sarb
mov
jo
sub
stc
push
push
mov
sub
jae
lcall
mov
cs
xor
mov
jnp
and
pop
fwait
lock
popf
lea
movsb
mov
inc
jmp
fst
mov
popf
pop
fucom
fildll
add
mov
cmp
sbb
xchg
clc
data16
fstpt
pop
sub
rcll
dec
cmp
sti
repnz
std
sbb
fwait
sub
mov
pop
xchg
lcall
push
mov
out
into
mov
in
add
daa
jnp
push
ja
or
xor
test
shl
mov
ljmp
subl
std
cmc
pop
aaa
jl
test
sub
stos
mov
cmp
aad
pushf
xor
insb
xchg
push
mov
insl
pop
mov
mov
leave
jmp
push
loopne
popf
lcall
pop
xorl
sub
sbb
lock
adc
mov
pop
cli
push
fwait
pushf
jne
lret
icebp
xchg
int3
pop
cs
cld
or
pop
xchg
outsl
add
rcll
mov
ja
ficomps
fst
fwait
mov
sti
xor
xchg
push
xchg
fstps
test
pop
lret
or
mov
test
and
test
xlat
std
sbb
jb
add
aad
jae
push
pop
jns
insb
scas
idiv
mov
out
sti
and
movsl
jg
cmpl
sub
dec
xchg
mov
adc
cmp
cltd
fdivl
mov
insl
mov
in
jb
add
mov
mov
push
or
icebp
adc
flds
das
xchg
rcrl
loope
inc
mov
mov
enter
lods
out
cmc
push
mov
daa
jg
adc
outsl
mov
add
pop
inc
jp
mov
adc
ret
add
out
adc
int3
mov
and
lret
pop
jle
lea
cltd
cmp
sbb
cmp
mov
sbb
add
std
movsl
fisubrs
test
xor
xchg
sbb
lret
or
pushf
fidivrl
mov
xchg
jno
negb
cs
inc
dec
adc
scas
loopne
enter
adc
mov
pop
fs
mov
sub
cmp
sahf
lea
xor
out
and
rcrl
outsb
inc
push
jge
cmp
mov
inc
inc
pop
sub
jle
mov
xor
cmp
push
xor
dec
add
mov
sbb
mov
mov
lahf
push
inc
or
adc
movsb
fnstenv
cli
mov
outsl
cmpsb
or
es
sarb
mov
mov
lods
and
lods
mov
mov
push
ret
push
dec
addr16
test
xchg
or
fcmovnu
pop
add
xor
dec
fxch
ss
jb
mov
shrb
xor
bt
mov
xor
imul
mov
ficoml
mov
pop
pop
sbb
stos
mov
add
sbb
das
sub
mov
mov
xchg
aam
aam
jae
adc
cli
imul
xchg
xchg
jbe
addb
imul
mov
mov
xchg
dec
jg
jo
mov
movsb
add
xlat
sub
jns
jecxz
cmp
clc
and
xchg
jbe
jbe
xor
mov
jle
ret
mov
outsb
xlat
aaa
pop
pop
sub
test
inc
cltd
jmp
fbstp
cmp
in
mov
bnd
pop
bound
cwtl
outsl
push
dec
in
es
xlat
cmp
adc
adc
clc
jg
fwait
xor
push
in
outsl
daa
rcrb
fimuls
or
scas
xchg
sbbb
mov
push
push
loop
pop
adc
lock
pop
sbb
xchg
scas
mov
cmp
push
iret
sahf
jne
xor
fisubrl
mov
test
pop
dec
dec
or
icebp
rolb
xchg
pop
mov
dec
call
mov
popa
outsb
les
hlt
ror
mov
lock
add
pop
mov
pusha
inc
les
ja
rol
or
xchg
pop
mov
stos
lret
sbb
mov
iret
inc
jg
adc
jnp
mov
lds
test
lret
movsb
ljmp
fidivrl
repz
cmp
adc
lea
mov
test
stos
cmp
and
icebp
and
pop
xlat
mov
jo
jge
nop
clc
out
push
xchg
push
lods
inc
lret
jge
xor
mov
pop
mov
popl
icebp
add
adc
daa
sub
jnp
imul
test
ret
xor
mov
repz
mov
push
gs
imul
arpl
ficompl
mov
push
jo
pop
rorb
in
mov
je
das
xlat
mov
pop
xchg
adc
pop
push
mov
cmpsl
pop
frstor
pusha
inc
insl
xchg
iret
xor
mov
jne
add
ss
out
cld
xor
inc
jo
push
fs
pop
scas
arpl
cmpsb
jbe
outsb
and
adc
adc
mov
aad
push
in
mov
into
jle
jl
or
test
cmpsl
mov
mov
fisttps
shlb
mov
cli
icebp
jbe
pusha
rcl
mov
mov
inc
push
or
adc
inc
nop
add
cmpsl
add
xchg
adc
rcll
jae
fsts
loopne
fwait
test
or
sti
out
or
xor
cli
push
dec
mov
jno
pop
pop
sub
jg,pt
imul
cwtl
inc
mov
sbb
dec
fadd
cwtl
pop
rcll
push
cli
repz
mov
inc
jl
shl
pop
sub
aaa
lahf
mov
add
test
bound
jnp
or
mov
add
ss
push
dec
test
mov
jl
mull
pop
lods
jecxz
pop
bound
sbb
jg
jne
andl
mov
cmp
iret
ds
shll
pushf
sarl
xchg
ds
loop
inc
imul
cld
mov
or
xchg
jnp
jl,pt
jo
mov
pusha
or
or
xor
push
inc
cs
scas
cmp
and
pop
mov
pop
mov
adc
test
loopne
lods
sahf
test
jo
subl
push
add
and
mov
clc
xchg
xlat
lret
call
and
push
push
mov
popf
pop
mov
call
pushl
cs
or
cmpsl
add
push
popf
lcall
lea
fwait
or
stos
xchg
sarb
sbb
lock
aaa
in
adc
xor
add
cmc
loop
or
adc
out
fnstsw
lahf
or
leave
lea
and
pushf
out
pop
push
xlat
jno
in
daa
inc
shl
data16
hlt
clc
negb
mov
add
sub
test
movsl
ret
test
xchg
jge
mov
sbb
fcmovnu
mov
es
jae
push
jno
loopne
lret
dec
or
or
mov
ds
mov
inc
gs
cmpsb
xchg
jl
inc
rolb
dec
mov
xlat
daa
cmp
psubusb
xor
jo
mov
fwait
inc
mov
or
jge
jne
push
dec
sub
mov
push
jae
cwtl
jne
bound
jecxz
cmp
add
shrl
mov
mov
cmc
inc
sbb
or
sbb
pop
popa
lret
mov
inc
xchg
pop
xor
pop
cmp
sbb
mov
xlat
int
mov
mov
lock
sbb
rcrb
or
out
pop
mov
jns
adc
push
jo
push
mov
mov
cmpsb
sahf
mov
jnp
test
cmp
stos
fnstsw
xchg
add
cmp
cli
jns
add
inc
mov
repnz
fisubrl
mov
outsb
push
stos
mov
add
pop
jne
out
adc
xchg
sarb
shl
cli
out
cmp
inc
sbb
add
mov
gs
pop
fwait
hlt
iret
dec
aas
in
in
sbb
or
xor
push
sbb
cmp
adc
popf
sbb
lret
dec
pop
pop
cs
lret
ljmp
sbbl
in
rcll
gs
pop
lods
cmp
imull
cmc
push
sub
pop
out
scas
pop
stc
ds
xor
hlt
mov
dec
test
sbbl
mov
inc
mov
mov
adc
incl
jne
movsb
jno
push
xor
adc
xor
into
cmpsb
mov
arpl
cmpl
jmp
testb
and
inc
push
dec
mul
mov
xor
loope
aam
inc
push
loop
lret
js
stc
mov
dec
and
xlat
add
movsl
cmp
add
pusha
inc
or
jp
ss
cmp
jp
outsl
mov
in
jp
cmp
sbb
inc
mov
mov
sub
fs
xchg
cli
push
pop
and
mov
sub
fnstsw
mov
es
cmpsl
flds
mov
dec
sbb
xor
sahf
imul
adc
push
dec
aas
popf
repnz
push
mov
mov
cmp
jno
movsb
aad
test
pop
int3
scas
bound
sbb
push
add
inc
scas
dec
inc
or
add
dec
cwtl
jno
dec
repz
test
sahf
xchg
pop
push
int
fnstenv
sahf
push
adc
cmp
jge
jne
pusha
jne
xchg
daa
scas
cmp
jnp
lret
lahf
aas
pop
pop
pop
lods
lcall
push
mov
ds
lahf
icebp
ror
das
fmuls
mov
ljmp
mov
add
stos
xlat
ds
jl
mov
rolb
pop
xchg
xchg
ja
testb
xchg
pop
cmpsl
pop
inc
and
aas
cmp
inc
cmp
or
fsubrs
leave
divb
push
mov
xchg
mov
sub
xor
das
push
test
adc
add
add
mov
test
sbb
insl
dec
dec
and
and
scas
push
xor
rcr
aaa
add
mov
inc
sub
or
ds
push
mov
les
les
mov
fisttps
jno
inc
jp
dec
adc
inc
push
and
pop
bound
insl
jnp
out
aad
and
clc
sbb
fmull
push
mov
mov
imul
xor
ja
addr16
xor
in
mov
jle
outsb
or
dec
jns
mov
cli
xor
in
das
push
lcall
pop
sbb
pop
popa
popf
pop
cwtl
or
and
addl
shl
out
cmp
jno
jmp
mov
jb
push
test
jle
or
inc
push
addr16
test
jg
popa
subb
jne
out
sub
mov
aam
andb
cmp
mov
ljmp
cmpsb
es
jle
clc
cli
cli
cltd
popf
inc
nopl
fcomip
jno
sub
pusha
sahf
or
out
dec
inc
adc
out
add
or
ss
mov
xlat
roll
mov
pop
popa
add
adc
pusha
bound
loopne
fidivl
sub
pop
dec
lea
fwait
loope
pop
fwait
loop
test
cltd
adc
sbb
dec
mov
pop
aas
cmp
cli
pop
push
push
dec
or
stc
jge
insl
mov
mov
mov
cmp
les
cmp
sbb
cmp
jle
inc
mov
and
fcomps
subb
cmp
push
ss
cs
mov
or
push
addl
xorb
or
inc
out
movsl
mov
fsts
cmp
popa
lods
insb
xchg
mov
dec
repnz
dec
fwait
jae
js
js
sahf
cmp
popa
push
push
lahf
push
in
xchg
stos
mov
in
dec
xchg
push
or
or
repz
inc
mov
inc
or
xchg
mov
pop
dec
loope
sub
xchg
js
icebp
enter
aam
lret
or
fbstp
outsl
pop
adc
cmp
mov
mov
inc
xchg
subb
dec
arpl
or
leave
pop
xor
pop
in
inc
inc
adc
and
pop
push
roll
adc
pop
in
jo
xchg
popf
xor
jl
push
mov
mov
stc
sub
repz
out
test
test
jnp
js
fs
xchg
xchg
fldl
cmpl
int
and
xchg
adc
shrl
imul
cmpsl
mov
add
jne
test
lret
push
adc
icebp
add
sub
fwait
gs
mov
and
repnz
or
mov
stc
or
jno
xor
mov
in
lds
inc
outsb
pushf
or
mov
sub
jo
bound
mov
bound
add
or
cmpsl
into
or
mov
bound
stos
lret
icebp
push
push
pop
cmpsl
pusha
cwtl
push
loopne
icebp
mov
dec
fwait
std
jns
fnstenv
xor
addr16
sub
cmp
jmp
test
aaa
scas
xchg
adc
adcb
iret
xor
loopne
mov
adc
pop
std
cmp
not
fisubrs
ja
xor
mov
dec
leave
mov
pusha
mov
fdivs
jno
ljmp
xchg
ficomps
mov
aaa
es
dec
mov
inc
mov
dec
xor
pushf
sub
sub
mov
lret
xor
lret
popf
mov
test
mov
cmp
in
inc
mov
inc
push
sbb
add
aam
jp
or
sbb
sbb
outsb
lds
in
sub
jmp
inc
lock
xchg
cltd
xchg
xchg
stc
call
cmp
out
push
notl
das
jb
sti
ret
jecxz
sti
sbb
shr
jo
pop
int3
das
dec
dec
mov
leave
pop
orl
cwtl
adc
js
cwtl
mov
and
clc
fiadds
mov
dec
push
xor
pop
add
xorb
mov
adc
ds
clc
sbb
or
cli
mov
stos
xchg
pop
add
imul
dec
push
mov
lahf
into
pop
test
and
jb
cli
fwait
pop
sti
jmp
push
jns
clc
js
and
sbb
add
dec
nop
stos
and
adc
cmp
dec
scas
cld
sbb
sbb
dec
pop
and
popf
enter
jnp
inc
inc
cli
push
ret
hlt
jg
lret
in
adc
pusha
xor
mov
dec
jmp
aam
enter
gs
add
xchg
mov
xchg
fs
pop
mov
addb
and
mov
cmovle
mov
addr16
fcmovnu
pop
out
xor
gs
call
dec
inc
psadbw
sub
in
out
ret
ja
roll
lods
hlt
dec
pop
shrl
mov
push
out
xchg
outsl
sbb
pop
mov
leave
sub
testl
movl
out
pop
cmp
lret
out
mov
push
sub
xchg
icebp
scas
lcall
xchg
push
jl
lods
dec
pop
push
add
ljmp
cmpsl
ret
int3
adc
mov
cmpsb
dec
inc
testb
sub
add
inc
repnz
push
fsubrs
push
sbb
fmulp
pusha
out
push
in
sub
or
shr
clc
mov
test
std
nop
sub
xchg
lods
dec
cmpl
sbb
ret
mov
and
sarl
pushf
and
adc
xor
jbe
jg
fs
sti
push
jecxz
fwait
adc
cli
in
inc
scas
jecxz
iret
xchg
data16
lea
rol
inc
pop
pushf
subl
dec
addr16
gs
and
sbb
lcall
out
decl
mov
sub
gs
add
out
lret
stos
repnz
push
bound
add
pop
sahf
rcrl
sbb
cmp
mull
outsb
ss
out
ret
fistpl
mov
adc
cmp
sub
stos
lea
xor
xchg
ljmp
imul
out
pop
fwait
inc
adc
jb
push
imul
pop
daa
cld
adc
inc
mov
push
mov
mov
ss
xchg
mov
inc
xor
add
adc
aaa
inc
aad
or
loopne
jno
adc
mov
aam
loop
js
clc
int
dec
inc
dec
mov
sahf
pop
cmp
fwait
leave
pop
imul
cli
mov
addr16
jle
inc
into
jg
mov
pop
inc
cmp
mov
xor
mov
cltd
xchg
add
ja
xchg
test
add
jbe
outsl
sbb
jecxz
lods
xchg
popa
outsb
cmp
pop
dec
mov
pop
jl
gs
shl
popw
xor
outsb
and
mov
pushf
mov
or
sub
pop
pusha
xchg
xor
lret
push
icebp
ss
loopne
cmpsb
fdivrl
sub
testb
sbb
pop
lcall
mov
cmp
dec
mov
jg
xchg
fdivl
mov
adc
adc
cli
test
adc
fdivl
adc
xor
jp
mov
add
ret
dec
xchg
sti
mov
sub
clc
cmc
lret
xor
jae
arpl
shll
xor
jl
mov
mov
or
push
push
out
outsl
mov
dec
cmp
sub
mov
xchg
xlat
out
add
push
orl
and
xor
jo
insb
xor
js
scas
in
push
and
mull
dec
sub
rorb
sbbl
jne
shlb
loop
lods
fcomi
leave
jae
adc
push
pop
insl
cli
jae
push
aam
clc
je
xor
cmpb
popl
mov
int
into
mov
cmp
sbb
sti
test
push
adc
xor
mov
pop
ret
rcl
lea
xor
lock
fcmovnb
stos
jo
rcrl
out
cld
dec
cld
jo
mov
scas
movsl
adc
inc
loop
nop
mov
divl
je
mov
inc
test
mov
rclb
mov
data16
ret
sbb
adc
jecxz
je
jecxz
int3
fs
lock
mov
lods
es
or
xor
shlb
testl
addl
cmp
push
sbb
mov
inc
sub
in
adc
or
sarb
rcll
pushf
xchg
and
call
mov
cld
mov
mov
shr
jmp
inc
pop
and
outsb
lds
xor
imul
sbb
aas
dec
and
mov
jb
mov
fistpll
mov
mov
or
jge
xor
aad
xor
adc
jmp
adc
int3
mov
sub
std
or
fldenv
mov
cmp
sub
adc
inc
popf
jge
jo
mov
popf
dec
decl
ds
adc
inc
or
push
mov
ret
xchg
dec
push
xchg
fcmovnu
sarl
add
sbb
rcrl
pop
mov
enter
fdivl
mov
xor
andb
outsl
aaa
sub
shll
add
push
mov
mov
out
jp
jne
mov
cwtl
xor
adc
push
mov
repnz
pushf
popa
outsb
add
cmc
and
pop
dec
ficoml
shr
dec
addr16
inc
inc
int
mov
das
sbb
in
add
mov
and
mov
sbb
push
and
xor
add
inc
cmp
movsb
stos
xor
fldcw
sbb
shll
fildll
push
ret
mov
lret
mov
xor
add
fs
loop
outsl
cwtl
and
stc
aaa
mov
push
inc
inc
inc
out
rorb
pop
mov
add
sub
pop
subb
ret
mov
adc
sbb
xlat
sbb
daa
test
js
push
cmpl
dec
and
popa
movsl
mov
cmpsb
sbb
fistpl
lcall
xchg
arpl
loope
aam
pop
dec
les
adc
jge
into
push
sahf
cltd
fcoms
pminsw
in
mov
and
inc
rep
xchg
stc
cmp
data16
clc
sub
push
rorl
mov
pop
mov
cli
dec
dec
push
sahf
shrb
jp
inc
bound
pushf
add
pop
inc
insb
lcall
pop
int
gs
dec
dec
jp
or
test
insb
hlt
stos
mov
in
mov
mov
and
xchg
cmp
pushf
mov
sbb
nop
jne
xchg
jnp
movl
ds
jmp
imul
and
icebp
jmp
das
jg
insl
movsb
ds
mov
pop
cmp
jp
jl
and
or
aam
inc
mov
scas
adc
repnz
mov
mov
inc
insb
pop
mov
sti
sub
addr16
out
jbe
xor
xchg
icebp
test
push
mov
test
jno
jb
cmovb
add
out
ss
stos
add
ret
pop
sub
test
daa
shll
fstps
push
inc
jmp
sub
mov
sbb
push
and
xor
mov
fimull
adc
divb
iret
jp
imul
xor
lcall
and
cmp
out
dec
mov
cmp
or
pop
mov
or
sbb
jbe
push
loop
sub
adc
inc
adc
mov
int
idiv
lret
xor
lcall
sbb
and
mov
mov
loope
ss
fsubrs
pusha
sub
out
lods
mov
lea
xchg
aam
xchg
rcrb
cli
mov
cmc
mov
addr16
dec
enter
push
cmp
sbb
iret
inc
xchg
stos
xchg
fists
pop
std
mov
mov
dec
cld
aas
call
xor
jo
roll
daa
aad
and
cmpb
sbb
add
push
mov
cs
ret
jb
sub
xchg
push
movsl
es
clc
inc
push
lret
out
in
jge
sbb
ss
rolb
cmp
xor
xchg
xchg
mov
or
out
inc
stc
stos
lret
mov
or
cmp
adc
cmp
adc
dec
add
and
add
std
test
ljmp
adc
adcl
jb
out
mov
inc
icebp
loope
adc
hlt
pop
cli
push
div
mov
loopne
jne
lcall
out
movsl
test
cs
inc
test
mov
mov
pop
dec
sub
cmp
push
sub
push
test
int3
push
xor
es
lcall
mov
repz
pop
and
fs
inc
or
test
mov
lret
test
imul
aaa
imul
push
mov
int
push
stc
xchg
pop
adc
push
and
jae
andl
sbb
enter
xor
sarl
and
scas
les
scas
jge
stos
ret
fists
jmp
into
imul
mov
or
sub
jg
ja
xchg
stos
daa
jge
aas
mov
mov
dec
xchg
sbb
stos
push
outsl
incl
jno
in
lods
stc
push
fstpl
ficomps
sbb
pop
xchg
push
and
adcb
xchg
and
and
inc
mov
mov
jecxz
mov
add
sbb
lret
inc
mov
fiadds
cmp
sub
outsb
sbb
sbb
dec
push
xchg
xchg
push
fnsave
and
clc
lahf
xchg
or
lds
pop
mov
jne
or
cmp
xchg
fwait
divb
repz
pop
or
jp
fwait
sbb
pop
or
testb
push
jnp
stc
xchg
rorl
add
mov
jo
mov
inc
cltd
imul
push
rcll
xor
pop
add
adc
orl
int
in
push
loopne
xchg
lcall
rcl
xchg
stc
orl
pop
jg
jne
test
add
lods
xlat
scas
mov
cwtl
adc
cmc
xlat
pop
cmpsl
stos
mov
cmpsl
aas
lret
ret
pop
sar
cld
stos
sub
adc
cmp
iret
sbb
fndisi(8087
stos
add
movsl
pop
ljmp
mov
add
sub
lods
push
inc
and
xchg
das
fildl
xchg
push
dec
xor
xor
push
jne
sbb
mov
push
jbe
jnp
cld
lea
add
inc
in
cmove
popa
mov
shl
cmp
xchg
or
xchg
adc
fisubrs
cltd
xor
repz
xchg
pop
icebp
shlb
dec
xor
cmpsb
movsl
dec
or
dec
xor
push
fwait
clc
add
jmp
cltd
mov
std
adc
dec
repnz
or
pop
mov
enter
push
test
jo
repz
jbe
push
es
mov
lcall
scas
cmc
push
push
pop
int
jl
outsl
ret
push
lahf
mov
cmp
xorl
shrb
enter
mov
sbb
pop
xchg
pop
insb
pushf
leave
cwtl
and
sbb
cld
call
cltd
xchg
dec
mov
aad
out
lahf
mov
lea
mov
mov
imull
xchg
sbb
outsl
xchg
inc
xor
push
mov
mov
mov
bnd
loop
jle
loope
outsb
adc
push
rolb
jno
loopne
xchg
dec
fwait
inc
lods
out
cmpsl
mov
push
addl
pop
bound
nop
sbb
sahf
dec
lahf
mov
xor
sbb
mov
xchg
sbb
repz
pop
jb
lock
in
shl
cld
jge
or
icebp
add
outsb
cld
imul
fnstcw
fisubrs
je
out
inc
xorb
ljmp
inc
or
subl
popl
pop
mov
fidivrs
mov
out
call
push
gs
sub
imul
insb
cwtl
add
loopne
outsb
push
nop
sbb
pop
mov
push
insb
pop
cmp
pusha
pop
orb
jp
push
sbb
mov
mov
mov
mov
or
stc
mov
mov
dec
dec
ret
lods
ja
lock
leave
xor
inc
shlb
int
mull
inc
out
and
xchg
ss
rcr
mov
aas
jnp
loop
inc
mov
jne
pop
call
push
adc
mov
pop
pop
sbb
rcll
jo
xchg
lret
stc
jmp
imul
xchg
into
xchg
hlt
pop
fadds
lahf
jo
push
roll
or
xchg
sbb
outsl
ret
sbb
in
dec
insb
dec
pushf
hlt
xor
pop
sarb
mov
mov
in
arpl
cmc
jecxz
std
push
dec
adc
adc
push
mov
imulb
push
dec
sub
aad
lea
fnsave
repz
cltd
ffree
icebp
lea
sub
add
loopne
insb
std
dec
jg
mov
lcall
leave
ljmp
adc
dec
std
cmp
divb
lea
jecxz
push
push
sub
movsb
sbb
stos
sub
fsubl
adc
das
cmp
mov
test
lret
cmc
mov
aam
cmp
xchg
push
inc
sub
adc
loopne
pop
sarl
mov
vdivss
mul
push
loop
dec
movsl
jno
in
push
mov
fldcw
rclb
fs
daa
push
and
aam
cmc
mov
sbb
jg
imul
xchg
sbb
cmp
inc
xor
lock
and
sbb
pop
movsb
mov
rolb
mov
xchg
sub
icebp
jg
push
adc
ret
lret
fwait
rcll
dec
add
mov
cmp
hlt
leave
adc
cld
test
testb
rorl
sub
jg
repnz
push
pop
cmp
es
test
dec
or
fsubrl
out
call
add
scas
push
xchg
call
outsl
or
imul
add
loope
mov
popf
mov
std
xchg
iret
jmp
sbb
stos
push
adc
mov
push
jne
jb
out
sub
leave
sub
push
into
xchg
mov
ret
adc
out
dec
jle
das
or
int3
push
aas
pop
movsb
adc
lods
mov
jo
insb
jne
push
imul
addr16
cmpsl
add
inc
xchg
lret
jmp
lea
arpl
push
sbb
shlb
out
in
jmp
cli
cmp
sbb
or
or
jmp
je
jns
js
enter
rol
lods
les
sbb
pusha
stos
push
jmp
sub
inc
add
dec
jae
push
mov
jnp
and
mov
inc
cmp
mov
or
push
je
loopne
cmpsl
and
push
mov
dec
inc
xor
lahf
adc
aas
scas
push
popa
mov
in
lds
aas
push
push
mov
add
and
push
dec
xchg
clc
ret
and
mov
in
into
or
aad
call
js
cmp
mov
test
jo
jne
mov
mov
jl
call
xor
xor
jnp
js
dec
mov
cmc
mov
jg
test
adc
xchg
sti
push
xor
pop
inc
adc
shll
mov
lds
push
daa
jns
sbb
out
jbe
repnz
sub
call
fidivrl
fmul
icebp
xor
inc
stos
cmp
jecxz
decl
scas
sbb
test
in
adc
pop
shll
repnz
fbstp
inc
cli
mov
jb
frstor
loopne
in
add
pop
fs
inc
enter
call
xchg
aaa
loope
and
shlb
add
jp
and
ror
mov
mov
test
hlt
and
inc
mov
movsb
loopne
inc
fld
aam
out
out
sub
imul
cmp
lret
and
mov
push
popa
sbb
push
pop
xor
into
mov
orb
mov
inc
stc
shl
test
jmp
ret
out
cmpsb
mov
shrl
in
insl
xlat
test
or
roll
sub
test
cmp
lea
mov
loopne
add
mov
lods
mov
rolb
imul
int3
adc
icebp
sub
push
mov
arpl
or
rcrb
cmp
test
sub
insb
mov
jns
pop
mov
ljmp
fdivrl
push
inc
fwait
testl
dec
enter
push
lods
xor
pop
add
mov
scas
xor
out
lret
daa
sub
add
jb
fcompl
pop
popf
js
clc
popa
dec
push
xchg
dec
dec
test
sub
lcall
loope
pop
xor
adc
and
and
push
repnz
sbb
cmp
sub
mov
xchg
add
dec
pop
fisubrs
and
jns
mov
adc
jnp
test
lds
cltd
out
daa
out
lret
push
in
sub
xor
or
cmpsl
data16
sbb
push
outsl
nop
pop
negl
push
insl
mov
mov
mov
jns
mov
push
fs
adc
mov
icebp
pop
dec
mov
psubusw
cmp
lods
test
mov
stos
repnz
jmp
ret
jl
push
jae
mov
es
cld
xlat
stos
inc
outsb
arpl
daa
subb
scas
gs
inc
ret
pop
xchg
pop
dec
mov
cmp
cmp
add
int
mov
jg
std
mov
test
adc
pop
pushf
fnstenv
andl
testl
in
out
or
lock
cmp
std
mov
cmpsb
jnp
sbb
jne
scas
test
jnp
enter
adc
sahf
mov
jecxz
in
or
xchg
xchg
push
test
sbb
hlt
jp
mov
gs
jb
test
mov
inc
into
pushf
adc
adcb
add
sub
addl
xor
aam
pop
es
popa
aam
mov
dec
xor
push
dec
adc
addr16
in
adc
hlt
push
pop
mov
pop
add
add
rclb
push
ja
push
sbb
jmp
pop
cmp
je
sub
adc
inc
cli
jmp
add
scas
test
fwait
les
subl
mov
dec
mov
arpl
xor
fsts
pop
stc
leave
or
je
movsb
pushf
stos
das
mov
pop
lahf
call
cwtl
sbb
std
jmp
xchg
aas
jg
sub
pop
lahf
pushf
loope
mov
iret
testl
sbbl
push
out
cld
push
push
dec
cmp
inc
lret
jecxz
stos
aam
jge
pop
cmp
fs
lcall
cmp
xchg
repz
xor
sub
jbe
sti
pushf
in
and
inc
xor
jmp
cmp
in
cmp
loope
jb
sbb
fadds
mov
mov
mov
xchg
test
add
push
jle
lcall
ja
sarb
arpl
cmp
jnp
cwtl
pop
gs
push
idivb
and
mov
xor
orb
ja
cmpsl
jnp
sub
dec
aaa
push
push
or
lcall
cmp
dec
mov
pusha
lret
out
sub
loopne
repnz
xlat
jecxz
add
and
and
aam
cmp
loop
mov
iret
test
std
or
adc
xor
add
into
sbb
orl
neg
jno
xlat
popa
les
pop
push
adc
cmp
aam
sub
push
inc
mov
mov
xor
test
shr
clc
inc
in
loopne
imul
lods
cmpsb
or
or
int3
inc
cmp
fdivp
mov
fimull
and
mov
fisttpl
in
add
pushf
in
inc
dec
jle
loop
push
outsb
movsl
flds
fs
popf
mov
inc
pop
xchg
cltd
inc
xor
lcall
jb
fldl
ds
push
movsb
stos
mov
cmpsl
mov
cmp
push
insl
sub
shrl
jg
movsl
mov
dec
push
fstl
lods
cmp
shlb
mov
pop
inc
fisttpll
outsl
inc
cltd
mov
outsl
push
cmp
xor
pusha
addr16
sbb
push
mov
sub
adc
xlat
into
outsl
cmc
scas
push
mov
daa
mov
push
xor
push
mov
cmp
jge
mov
lock
sub
or
mov
mov
faddl
sub
pop
aas
jl
into
adc
movl
and
movsb
aam
aad
xorl
add
stos
inc
mov
int
aam
jg
dec
andl
xor
jecxz
std
adc
mov
lret
push
movsb
mov
daa
outsb
cmpsl
add
repnz
cmc
jbe
xchg
int
xchg
inc
sbb
bound
xchg
rcrb
inc
sub
sbbl
iret
insl
out
in
addr16
pop
xchg
test
cmp
test
xor
aas
and
imul
aad
outsl
stc
repnz
mov
add
add
add
call
or
icebp
lock
xor
jb
int3
jne
and
clc
fisubrl
rorb
xchg
mov
pop
cmp
rolb
aaa
lahf
aam
jno
jb
cmc
add
test
mov
jmp
cltd
mov
aad
pop
xor
icebp
faddl
fists
sub
xor
and
mov
pusha
roll
xor
mov
inc
je
or
push
cs
add
cmp
xchg
scas
mov
fcmovu
inc
pop
and
xor
add
sar
shll
mov
jg
out
hlt
sub
mov
xchg
negb
adc
in
dec
into
mov
incb
cmp
fdivrs
insl
dec
fbstp
push
add
call
insb
inc
mov
xor
pop
test
iret
pop
mov
int
mov
iret
jmp
xchg
sub
std
ljmp
arpl
and
pusha
jle
xor
cmp
call
sub
cwtl
add
push
sub
cld
mov
mov
incl
dec
xor
inc
int3
pop
mov
fcoml
sbb
clc
and
clc
into
jp
mov
arpl
lea
cltd
stos
stc
pop
sbb
mov
mov
xlat
es
movsl
dec
push
cld
jbe
xchg
rolb
test
sbb
imul
cli
pop
das
test
sbb
push
inc
repnz
addl
out
xor
data16
cmpl
mov
push
mov
pop
inc
out
or
jle
mov
jno
test
jnp
xlat
in
cltd
pop
jne
fisubrl
aas
cli
ja
ds
ljmp
dec
and
je
xchg
inc
vprotb
cltd
js
into
cmp
jl
daa
pushl
je
jbe
add
in
mov
jmp
pop
mov
cmpsl
leave
test
ss
rorb
xor
mov
outsb
call
and
ljmp
rcl
std
xchg
mov
jno
shrb
push
jnp
inc
dec
insl
mov
loop
hlt
xorb
xchg
sbb
stc
xorl
push
lahf
pop
out
lret
mov
push
ret
lcall
inc
push
mov
out
pushf
stc
xor
adc
js
add
ja
popa
jo
ds
test
jae
dec
mov
pushf
stc
mov
adc
or
int
add
sbb
mov
xlat
repnz
xchg
inc
jo
cld
mov
fmull
jne
dec
insl
in
jno
repz
or
adcl
xor
sti
mov
jge
cs
gs
imul
xor
inc
jg
sahf
movsl
push
ficomps
push
dec
dec
lods
loope
fs
dec
daa
lods
arpl
mov
xor
fstpt
sbb
jle
mov
push
jns
rclb
inc
jl
sbb
jp
add
pop
mov
push
pop
enter
or
dec
faddl
lods
icebp
pop
push
pop
mov
loope
xor
int3
sub
or
and
addr16
insl
daa
incl
xor
je
fldenv
mov
mov
xor
and
imul
cmp
mov
mov
repz
add
mov
jb
push
sti
pop
out
and
jecxz
inc
repz
dec
inc
and
sub
jle
mov
mov
jmp
aaa
inc
mov
xor
jg
push
stc
jmp
rorl
jae
and
enter
cs
push
dec
loope
int
fistps
mov
cli
clc
icebp
test
insl
mov
test
sbb
rorl
cwtl
inc
or
fistps
lock
iret
sbb
push
push
push
inc
insb
dec
bound
ficomps
sbb
cmp
push
insl
in
pop
jo
shr
insb
inc
cld
inc
dec
and
ffreep
and
stos
sub
jmp
aad
pop
xchg
sub
jns
jle
mov
ss
pop
cmp
jle
mov
sahf
mov
rcrb
xchg
incb
das
dec
jno
mov
or
idivb
xchg
movsl
ss
xor
bound
shrb
ds
add
loope
xor
insb
sbb
lahf
mov
mov
sub
scas
shl
xor
cmp
outsl
mov
push
cmpsl
into
jo
sub
call
aaa
push
adc
pop
mov
mov
jae
loope
adc
xor
or
mov
mov
jnp
fdivs
jb
push
es
or
push
mov
out
mov
push
jmp
rolb
cltd
adc
jno
jl,pt
addr16
mov
mov
int
mov
adc
int
mov
subb
aad
data16
sub
mov
leave
add
lock
xlat
ror
jb
push
push
pop
ret
push
cmpsw
fists
sahf
ljmp
cmpsl
enter
mov
add
int3
aaa
inc
aaa
cmp
and
xorl
out
xchg
xchg
adc
cmp
cld
add
test
inc
ljmp
and
out
movsb
loop
sub
dec
push
loopne
pop
rolb
jmp
cli
xor
ss
rorl
xchg
mov
out
mov
fstpl
lret
arpl
inc
mov
mov
rcrl
ds
cld
pop
mov
pop
sub
pop
lret
je
dec
repz
dec
xor
push
xchg
lods
nop
sbb
jle
mov
mov
push
sub
push
pop
fsubr
and
pcmpgtw
in
ds
daa
push
fwait
sub
sub
cmp
shll
sub
push
popa
clc
pop
fs
xor
add
sbb
cmpsb
push
fldl
sbb
je
jbe
xor
xor
popa
jg
orl
jp
sub
and
or
add
scas
pop
xchg
or
pop
imul
jge
out
dec
mov
or
jmp
add
ret
mov
stc
cld
std
enter
pop
xor
push
int
xchg
xor
lret
mov
or
lods
mov
dec
adc
fimuls
in
shl
test
les
out
leave
into
xor
adc
loopne
icebp
cld
and
testl
cmp
cmc
pop
push
cltd
lock
fisttps
bnd
and
in
addl
push
movsbl
mov
pop
adc
pop
aam
cmp
sbb
or
cmpsb
and
pop
push
xchg
fildll
daa
mov
testl
sbb
sti
cli
popa
and
jbe
and
scas
je
shlb
push
push
jge
jns
push
pop
sub
inc
cmpsl
lock
mov
push
inc
nop
push
fcoml
xor
xchg
jns
orb
scas
shrb
xor
xor
push
add
orb
stos
fstps
sub
mov
add
movsl
and
mov
add
adc
loopne
in
inc
ljmp
roll
xlat
movsl
ret
fdivl
sbb
addr16
jmp
mov
mov
inc
popa
int
pop
mov
int3
xchg
sbb
cmp
out
in
add
outsb
or
std
fisttps
cmp
inc
jno
pop
or
movsb
std
inc
and
mov
daa
stos
jae
out
icebp
xchg
jb
add
push
sub
je
shll
and
ret
insl
lock
adc
sbb
imul
inc
mov
sub
jns
jle
std
mov
push
scas
jp
shll
ja
mov
pop
movsb
pop
mov
je
lock
icebp
ret
inc
hlt
icebp
loop
in
push
lret
xor
dec
dec
js
popa
dec
fdivp
mov
and
in
out
add
inc
pop
cltd
loopne
pop
cmpsb
xchg
arpl
and
mov
lret
cmpsb
xchg
iret
cmc
jg
loope
arpl
mov
mov
jne
outsb
pop
or
in
icebp
fstl
cmpsl
inc
push
inc
out
push
test
mov
sahf
sbb
ss
sahf
loop
loop
push
bnd
jbe
add
cmp
ljmp
popf
rcrb
lds
cmp
fcoml
cwtl
addl
mov
popf
xchg
inc
fimuls
jle
fcomi
scas
and
dec
int3
mov
xlat
divb
jecxz
inc
test
cmp
xlat
arpl
mov
out
aad
loope
xchg
movsb
subl
addl
and
mull
insl
stos
popa
and
insb
jmp
je
repz
xchg
imul
out
xchg
hlt
sub
aaa
cmpsl
sub
push
add
hlt
and
sbb
iret
hlt
dec
pop
aam
or
or
add
aad
ss
and
mov
jns
popa
push
mov
mov
imul
xchg
arpl
stc
mov
sbb
iret
inc
dec
sahf
sub
xchg
sbb
dec
insl
test
leave
push
inc
and
pop
aad
ljmp
je
sbb
push
bound
jo
fdiv
add
jecxz
dec
cmp
es
xchg
enter
jl
and
pandn
inc
pop
xlat
xor
inc
dec
int
mov
dec
mov
mov
test
cmc
js
nop
xchg
icebp
dec
imul
dec
cld
fsubrp
jmp
and
pop
loope
pop
adc
jecxz
movsl
adc
gs
push
fisttpll
jns
frstor
fmuls
fsubl
das
and
cs
bnd
shl
xchg
jne
ja
lret
je
shrl
and
inc
jp
shlb
pop
loopne
cmp
mov
fidivrl
push
jb
mov
dec
dec
into
mov
or
aam
inc
sahf
xor
pop
or
mov
test
jae
les
push
cmp
stc
fsubp
sbb
shrl
fmull
cmp
inc
js
xchg
bnd
pushf
cmpl
test
add
mov
add
sbb
xchg
shlb
imul
int3
enter
push
nop
sub
fdivrs
mov
arpl
jle
inc
mov
ja
inc
inc
ret
inc
outsl
mov
sbb
insb
pushf
pop
out
mov
lods
repnz
lahf
fwait
int3
jns
jmp
xor
dec
gs
mull
or
ja
pusha
repz
and
out
add
ficoml
add
and
sub
jnp
popf
mov
push
cmp
sbb
pop
and
movsl
xchg
fstl
movsb
filds
cmpsl
leave
jns
or
lret
test
cmp
out
je
xchg
mov
frstor
cmpsl
cmc
rclb
cs
xchg
push
sbb
pusha
inc
inc
add
and
pop
mov
fcompl
outsl
pop
ds
jnp
pop
push
inc
inc
insb
cld
shrl
imul
adc
xor
xor
dec
fwait
mov
mov
lcall
inc
icebp
xchg
out
ficoms
pop
pop
enter
push
or
push
stos
jno
or
dec
mov
test
dec
dec
inc
xor
test
and
xchg
loope
mov
add
divl
outsl
mov
xchg
cmc
or
mov
and
mov
mov
ret
fnstenv
decl
mov
testb
xlat
xchg
xchg
pop
xor
cs
imul
insb
mov
adc
add
stos
sub
push
sbb
test
push
push
sar
cld
fsts
mov
push
jle
cltd
testl
int3
outsb
sub
inc
out
stos
ss
sub
in
out
out
xor
ss
cmc
sub
push
in
mov
cmp
and
and
xor
sahf
push
insb
ret
divl
push
movl
icebp
popa
ljmp
rorl
or
push
fldenv
jp
jb
push
dec
mov
push
pop
movsl
or
fcom
and
and
push
and
inc
repz
lods
and
jp
cli
add
mov
xlat
and
pop
out
dec
call
mov
jge
test
outsl
push
and
pop
bound
rcrb
daa
xchg
pause
es
lea
pop
ja
mov
adc
or
add
repnz
add
adc
stos
mov
in
pop
test
mov
push
sbb
push
ret
cld
lcall
lods
dec
mov
outsl
daa
jo
out
xor
stos
xor
push
enter
inc
cmpsb
and
scas
xchg
lock
into
shl
xchg
daa
mov
shll
sbb
sbb
sbb
dec
stos
push
outsl
xor
sbb
xlat
add
mov
and
cli
pop
pop
mov
ss
movsb
mov
hlt
adc
rolb
dec
cmpsl
cmp
lahf
mov
cmp
push
adc
sbbb
insb
shrb
add
loope
imul
inc
idivb
mov
adc
mov
faddl
fucom
ljmp
lret
mov
fisubrs
enter
aam
mov
mov
loope
mov
ljmp
jbe
stc
ficomps
cmp
stc
and
xchg
psubw
mov
in
pop
ljmp
insl
mov
adc
dec
lahf
das
inc
gs
lret
scas
in
mov
dec
out
out
jno
xorb
cltd
push
ds
and
mov
mov
mov
pop
leave
pop
add
push
xor
add
scas
mov
mov
sbb
cmp
push
insl
or
xor
xchg
dec
jo
jge
mov
xorl
shrb
pop
xchg
cld
xor
insl
inc
pusha
adc
call
ret
aas
cmp
xor
fidivl
mov
xor
lds
stos
or
mov
jo
cmp
adc
xor
and
add
add
js
jl
mov
pop
ja
jne
in
push
leave
xor
xchg
inc
pop
push
xchg
rorb
jp
and
outsb
nop
sar
dec
xorb
fstps
jb
mov
sub
dec
push
in
fcompl
mov
hlt
outsb
xor
loopne
into
dec
cmpsb
push
mov
fsubs
mov
add
adc
xorb
or
scas
or
fadds
ds
inc
pop
int
test
jmp
pop
push
loope
scas
lds
and
xor
ds
stos
lahf
clc
pop
or
pop
enter
shr
pusha
pop
sti
int3
push
nop
aad
movsl
mov
push
xor
in
cmp
scas
push
pop
icebp
adc
xor
adc
xor
sti
sbb
loope
xchg
xchg
lea
jno
sahf
mov
or
hlt
jg
inc
push
shl
in
loope
rol
xchg
inc
ds
inc
add
push
icebp
in
xchg
enter
fucom
sub
imul
out
or
adc
xchg
mov
stos
and
adc
xchg
out
fnstcw
fisubl
test
fcomps
xchg
mov
or
push
cmp
inc
lods
xchg
cmp
loope
addr16
mov
lcall
rcrb
lahf
sahf
cld
mov
stos
xor
and
frstor
mov
push
pop
dec
hlt
push
pop
rorl
rolb
dec
mov
dec
and
in
and
mov
add
pop
sub
insb
cmp
pop
or
ret
cmp
inc
xchg
ffree
insb
daa
sbb
cmp
int
or
aas
xchg
fisttpl
and
and
mov
mov
int
inc
pop
add
mov
shlb
bound
rcll
mov
jno
xor
loopne
call
mov
icebp
push
insb
jp
das
mov
leave
or
repnz
pop
mov
add
adc
jb
pop
mov
test
mov
neg
out
sub
xor
xor
push
xor
cmpsl
ret
pop
mov
lods
adc
fcoms
pcmpgtb
loopne
scas
pop
push
mov
push
outsl
and
jmp
imul
stc
inc
lret
sub
lods
test
xlat
pop
mov
pop
test
jg
mov
xchg
ja
sub
inc
fcmovb
xor
jmp
sarb
nop
mov
dec
or
or
out
pop
psllw
dec
shl
jne
pop
push
pop
mov
in
cmp
imul
jp
adc
ds
dec
in
clc
mov
ficompl
popa
lds
inc
adc
loope
add
cmc
leave
cmp
movsl
in
pop
push
add
aam
add
add
jne
jge
cmp
icebp
add
inc
pop
push
mov
je
jo
fmuls
test
push
int3
mov
pop
jp
push
and
mov
jl
pop
mov
fs
scas
int
dec
inc
fcomps
jecxz
shll
sub
fucomi
adc
mov
shrb
imul
jnp
fcoms
cld
cmp
and
cmc
cmp
and
mov
bound
inc
bound
pop
push
int
push
push
inc
push
aas
add
insl
push
cltd
inc
lods
loope
jo
jbe
test
push
out
jb
jmp
inc
loop
xor
mov
cmpsl
notb
icebp
fisubs
dec
and
jae
loop
scas
inc
addr16
sbb
arpl
or
incl
shlb
fwait
cmp
adc
popf
test
movsb
fadds
sbb
push
repnz
add
jne
mov
and
rcrl
insl
lods
mov
sbbb
movb
pop
mov
mov
sti
fnsave
mov
xchg
mov
pop
push
sbb
imul
xchg
pushf
stc
out
mov
pusha
mov
xchg
pushf
loope
and
inc
addl
or
jg
ret
outsl
into
loope
pop
cmpsl
das
mov
call
xchg
pop
xor
adc
rcr
aaa
jmp
cmp
adc
hlt
scas
and
cmp
sbb
jecxz
inc
lmsw
jp
and
cmp
jno
ja
fwait
xor
jle
popf
rorb
xchg
mov
add
andl
add
out
into
xor
push
inc
add
adc
sbb
insl
or
or
cs
push
xchg
push
fistpl
insb
mov
mov
cmp
mov
in
jo
lock
push
add
jb
inc
mov
scas
lret
int3
test
mov
aam
sbb
das
stos
test
pop
sahf
testl
xor
push
xor
fildll
shll
or
data16
aas
bound
testb
cmp
imul
into
stc
dec
rcr
popf
movsl
jnp
mov
xor
arpl
adc
imul
aam
fcmovne
out
mov
mov
jae
jno
sbb
adc
mov
cli
sub
test
push
ret
jns
pop
outsl
lret
divb
pop
cmp
sbbb
lret
lcall
mov
lods
ret
aam
addr16
fcompl
xor
add
jb
xor
inc
lcall
test
addb
stc
xlat
sbb
inc
out
pop
daa
into
int3
mov
imul
mov
mov
repnz
inc
xchg
inc
jns
or
jo
aam
add
adc
push
xor
call
scas
lcall
mov
xor
inc
push
xor
cmp
lock
lcall
repz
jg
or
jge
enter
into
les
pushf
push
lret
inc
ljmp
leave
jg
xchg
imul
mov
gs
mov
xchg
cmp
js
jo
xchg
push
fisubs
addr16
inc
xor
push
insl
push
popa
rcll
push
jne
popf
adc
mov
fnstsw
mov
repnz
pop
or
lret
mov
jno
jo
lret
push
call
pop
sti
mov
inc
mov
repnz
push
xchg
andl
out
sbb
adc
cmpsb
out
lahf
adc
push
dec
or
orl
in
xor
int3
icebp
jecxz
roll
lods
gs
out
mov
mov
jmp
push
insb
mov
leave
inc
push
lods
jbe
mov
push
shl
push
mov
mov
sub
push
mov
jo
xchg
jle
xor
lea
iret
sbb
leave
ja
xor
jbe
sbb
js
mov
xchg
pop
out
clc
sub
lret
imul
mov
outsb
mov
mov
ljmp
mov
outsl
jle
sbb
and
jb
movsb
sbb
sbb
lds
out
std
and
cmpl
ja
dec
mov
movsb
lretw
movsb
adc
jle
lock
sub
jbe
dec
repnz
sbb
dec
jmp
cli
loop
clc
lea
cmp
xlat
mov
mov
sub
dec
hlt
xor
sahf
push
test
stos
aad
ljmp
sbb
stc
cmp
arpl
xchg
fld
loope
mov
fsubs
mov
push
or
add
cmp
fidivl
mov
cld
dec
mov
daa
jae
out
ret
pop
sub
jmp
pusha
inc
push
daa
mov
pushf
jl
mov
push
pop
in
inc
and
pop
aas
jo
repz
test
dec
je
jp
cmp
dec
add
js
push
daa
xchg
pop
popa
fisttpll
loop
xorl
mov
mov
jns
hlt
mov
jmp
stos
mov
xor
xchg
push
sub
cwtl
xchg
cmp
pop
dec
in
ds
aad
jbe
push
xlat
test
gs
adc
mov
inc
dec
dec
clc
and
jg
sub
xor
mov
or
test
fidivrs
xchg
mov
push
pop
enter
jecxz
jg
mov
in
xchg
lods
push
repnz
fwait
cwtl
mov
cmpsb
scas
pop
lret
adc
cmp
xor
mov
shlb
ret
xchg
or
pusha
ror
cwtl
sub
imul
in
cld
mov
cmpsl
dec
aad
out
push
nop
add
sbbb
fildll
call
inc
pop
jo
das
jl
das
outsb
or
into
clc
push
outsl
add
fnstsw
mov
loope
dec
out
mulb
pop
std
movb
lret
mov
push
in
fsubrs
mov
adc
pop
repz
jp
repz
push
insb
aaa
mov
mul
and
out
mov
aad
sub
xchg
and
gs
pusha
icebp
inc
cwtl
xor
and
cmp
xchg
ds
sbb
xchg
mov
cltd
fwait
xorl
adc
inc
dec
out
cmc
outsl
orl
xchg
dec
sbb
loopne
ljmp
repnz
and
adc
mov
inc
cmp
repnz
movsb
mov
xor
pop
push
aad
aas
mov
enter
enter
pop
pop
pushf
xorl
data16
inc
xchg
movsl
sbb
stc
push
adcb
mov
imul
lds
in
lods
mov
cltd
shlb
dec
fcmovu
aad
add
push
das
adc
xchg
rol
and
aas
mov
or
mov
sub
xor
loope
push
push
push
xchg
dec
fldenv
dec
jno
leave
xor
lds
xchg
mov
mov
xchg
cmp
sbb
loope
jnp
adc
or
or
popa
pusha
cld
flds
jne
cmpsb
push
iret
and
aas
roll
icebp
dec
lret
mov
jae
pop
insb
daa
fldl
xchg
sub
mov
dec
push
and
mov
insl
cld
sub
inc
add
ret
icebp
out
js
sub
sub
loop
arpl
mov
push
out
cwtl
lock
xor
inc
cwtl
jo
ds
ss
mov
cli
jge
leave
out
xchg
dec
xor
insl
rcl
popf
mov
add
das
or
xlat
sub
push
jbe
loop
cmp
sbb
pushf
cli
pop
dec
divb
jmp
cmc
mov
sbb
cmp
mov
outsl
imul
mov
sub
adc
pop
out
daa
add
je
ljmp
les
xchg
nop
xchg
pop
out
push
sub
mov
stos
sti
sbb
test
shrl
pop
stc
mov
call
sahf
dec
xchg
add
ret
jne
stos
aad
push
daa
push
ja
leave
addr16
pop
mov
out
mov
lock
xchg
fcmovnb
jge
sbb
loope
sub
push
lret
or
fcomp
mov
ret
push
rolb
mov
and
not
imul
repz
pop
std
push
hlt
lcall
sbb
in
cli
push
xchg
sti
mov
bound
cmp
jge
mov
mov
js
jbe
cwtl
xchg
mov
dec
out
push
nop
rorb
in
jmp
xchg
mov
out
sar
cmp
and
sbbl
xchg
leave
into
outsl
mov
cmp
mov
sub
es
popa
jne
test
dec
mov
stc
and
fwait
in
cltd
lock
lret
mov
add
pop
dec
sbb
adc
into
jns
test
jg
in
dec
jns
mov
ss
stos
sub
sub
ret
mov
shll
in
mov
movsl
daa
in
jae
mov
popf
rclb
clc
gs
jne
test
sbb
neg
sbbb
das
aaa
xchg
loope
lcall
fsubrs
pop
enter
adc
pop
shlb
nop
xchg
loopne
enter
pop
leave
neg
dec
and
mov
and
ja
lds
inc
je
sbb
pop
shll
call
xor
fistl
adc
add
xor
fldt
and
push
add
add
jmp
push
mov
pop
fimuls
adc
sbb
mov
ficoml
cmc
cmpsl
mov
ret
sarb
mov
add
sub
pushf
mov
sub
movsb
pop
in
fbld
adc
pop
es
fdivs
out
cmp
fists
or
movsb
ja
or
pop
fs
sub
scas
cmc
add
push
orb
push
lcall
inc
int3
dec
and
xchg
ret
sahf
movsb
jo
pop
ret
or
xlat
adcl
leave
orb
sub
push
fsubrp
xchg
mov
mov
and
sbb
bound
inc
js
in
xor
jno
mov
fisubs
push
repz
jecxz
push
push
dec
aaa
pop
and
sarb
adc
ljmp
adc
cmp
stc
nop
shlb
leave
xor
dec
xchg
repz
add
and
fsubl
mov
sbb
jo
bnd
and
sbb
repz
mov
mov
mov
call
rclb
fcompl
pop
std
jle
jbe
push
mov
sahf
aaa
mov
xor
lret
dec
shlb
nop
imul
pop
sbb
lock
xchg
xchg
repnz
aaa
or
dec
outsb
dec
or
push
ret
sti
mov
or
test
inc
inc
testb
mov
imul
cmc
pop
fs
and
jl
repnz
inc
sbb
pop
mov
mov
cwtl
mov
dec
cmp
movsl
xor
cmp
sub
fcmovb
movsb
or
outsb
push
inc
out
cs
adc
sub
rcrl
xchg
loope
pusha
and
cli
inc
pusha
leave
mov
sub
data16
lods
shlb
pop
rorb
into
sahf
lret
adc
add
cld
call
adc
in
inc
gs
inc
jp
jp
jecxz
sbb
movsb
pop
pop
fisubs
add
xor
xor
enter
and
add
in
cmp
jo
or
xor
cmp
in
popa
js
pop
in
pop
push
mov
dec
xchg
addr16
sbb
push
loope
mov
insb
cwtl
test
push
sahf
scas
fcmovnbe
mov
inc
mov
inc
sub
scas
sar
in
mov
addr16
loopne
inc
nop
or
cwtl
ja
fisubl
sub
icebp
jle
cmp
shlb
or
add
add
in
sub
jl
aaa
rcrb
cmp
outsb
rorl
int3
inc
aam
int3
lock
stc
out
sti
jle
xchg
repz
je
mov
jo
sub
dec
mov
lods
add
push
push
lahf
ror
ds
cmp
call
mov
pop
or
pop
inc
data16
push
pop
and
out
dec
push
arpl
jbe
mov
mov
mov
sarl
test
in
inc
insb
sti
xchg
lea
in
dec
sbb
xchg
xchg
mov
jns
push
dec
xchg
test
fs
mov
mov
ret
sub
test
stos
add
sbb
pop
push
mov
adc
xor
cltd
xchg
les
hlt
mov
test
addl
adc
mov
ret
cmp
mov
mov
sbb
mov
fsubs
ret
xchg
loop
push
jl
out
lea
scas
dec
mov
in
test
out
push
xchg
xchg
jo
jns
push
mov
jecxz
imul
sbb
mov
xor
mov
or
mov
add
clc
adc
xchg
xor
dec
lods
push
dec
or
mov
push
cltd
lods
mov
cmpsl
mov
int
repz
je
ret
lods
pop
mov
mov
add
xchg
fisttpll
das
ds
les
cs
mov
jnp
ficoms
xor
repnz
jp
jmp
pop
mov
iret
pop
dec
stos
dec
cmpsl
dec
sub
xchg
shl
jg
pop
add
pop
rcrb
push
fs
jle
cld
ret
pop
mov
fstpt
movsb
dec
cltd
cmp
dec
cmp
movb
vpunpcklbw
mov
stos
or
or
bound
in
and
mov
sbb
xchg
push
xlat
jecxz
orb
xchg
push
mov
jae
mov
fldt
sub
add
dec
mov
push
shrl
xor
addr16
ss
cmp
aas
mov
lea
jecxz
cmpsb
cltd
fiaddl
push
jbe
in
jge
push
aaa
fdiv
mov
jo
and
iret
int
mov
xor
push
lock
cli
mov
fmulp
push
jnp
dec
aad
cmp
out
imul
jae
cltd
cmp
xorb
int
jnp
movl
ret
int
ret
add
jbe
cmc
cmp
movsb
bound
ret
out
aad
inc
ja
xchg
inc
sub
or
jbe
dec
inc
cmpsl
mov
mov
popa
pusha
and
in
arpl
pop
je
push
inc
aad
inc
push
dec
cmpl
mov
cmp
adc
mov
or
mov
loopne
lcall
jb
jg
mov
mov
sub
jg
aaa
xchg
mov
jbe
xchg
popf
mov
dec
clc
fsubrl
adc
imul
or
or
sbb
outsl
cmp
add
lds
add
and
dec
push
fstpt
test
xor
cltd
add
sbb
and
jne
sbb
dec
xor
mov
je
sub
mov
in
cli
sbbl
iret
fadds
mov
dec
mov
fdivrl
or
jne
into
add
jl
sbbl
xchg
nop
stos
xor
xor
jge
pop
sbb
and
lea
imul
jg
fucomi
mov
sub
test
fldenv
orl
cwtl
pop
sub
mov
out
cld
pop
dec
cmp
mov
push
in
aam
xchg
imul
add
pop
or
loopne
repz
push
sahf
subl
lret
cmc
inc
mov
or
adc
mov
jle
leave
lret
cmp
pop
outsl
in
jns
jno
test
hlt
stos
adc
add
or
out
xor
xchg
pop
jns
xor
shrb
adc
sahf
mov
or
int3
mov
and
hlt
rcrl
iret
sbb
out
mov
out
inc
data16
sub
jecxz
adc
arpl
inc
fsubrs
sub
lahf
insb
jecxz
xchg
test
jle
bt
jb
cmp
lock
cmp
dec
pop
add
or
cwtl
push
mov
sbbl
mov
mov
xchg
es
xor
out
xchg
xor
lea
or
adc
or
inc
int3
jmp
es
adc
insb
mull
pop
movsb
aaa
xchg
movsl
push
xlat
inc
or
jo
lea
sub
add
cmp
and
pop
sub
or
xchg
fst
and
adc
and
call
pop
dec
icebp
idivl
and
mov
jl
jbe
cmc
jb
jmp
xor
push
rcrb
fwait
cmp
lds
cmp
ss
sub
adc
pop
popf
jle
enter
add
data16
daa
rcr
pop
push
cmp
outsb
inc
mov
data16
inc
dec
mov
jns
ret
sub
paddsw
sub
xor
das
inc
dec
or
sbb
xor
mov
push
sub
lock
fistpl
lods
or
dec
inc
dec
and
jle
stos
ljmp
fstpl
out
fs
inc
add
pop
add
xlat
xchg
mov
xlat
scas
repz
aad
cwtl
mov
xor
lock
int3
xchg
test
test
push
sub
int3
mov
hlt
rclb
outsl
jnp
xor
xchg
add
loop
stc
in
add
add
insb
adc
pop
xchg
call
dec
sub
cmp
xchg
cltd
out
lret
lock
mov
divl
push
and
repnz
push
data16
lds
xchg
and
sbb
pop
adc
fmuls
pop
xchg
iret
add
adc
stos
stc
lods
mov
sub
popf
lahf
pop
push
popa
test
push
or
or
cmp
into
dec
and
and
lea
in
bound
push
and
mov
imul
scas
fincstp
cmp
sub
jb
jae
ficoms
lods
lahf
jno
faddl
pop
mov
jns
outsl
cs
psubusw
fwait
outsl
les
sub
cmp
sti
outsb
mov
ret
mov
mov
lods
cmp
add
sti
sub
adc
push
gs
aaa
cmp
ja
cmc
pop
jg
adc
lret
into
adc
addr16
or
sbb
ja
in
imul
or
or
sbb
jl
pop
mov
inc
jne
icebp
lcall
adc
lods
out
shll
add
sub
stos
fstp
push
mov
pop
jle
and
stos
push
shr
hlt
lods
out
mov
ucomiss
pop
int3
cmp
xchg
xor
cmpsl
hlt
insb
negb
ficoml
and
lock
scas
inc
les
cmpb
mov
add
add
sbb
data16
and
pop
mov
negb
jle
fildl
lock
xlat
imul
pop
xorl
rorb
ja
or
inc
mov
jecxz
popf
loopne
dec
lcall
jp
mov
lret
shlb
xchg
mov
adc
pop
sub
ljmp
add
popa
test
mov
jecxz
adc
lret
jnp
andl
imul
lods
cmp
lea
lret
cltd
shlb
mov
je
cmpl
mov
mov
scas
adc
stos
mov
jmp
add
cmc
pop
inc
cmpsb
push
jp
add
dec
add
in
xor
or
xchg
pop
jl
xchg
popa
rclb
pop
add
pop
push
dec
add
push
or
movsl
icebp
push
ret
mov
fwait
cmp
pop
mov
lods
inc
push
mov
xchg
aad
mov
push
mov
hlt
and
sub
mov
sbb
sbb
fdiv
adc
aam
lods
jo
mov
mov
addl
test
cs
rolb
mov
scas
mov
outsl
adc
cli
dec
sahf
mov
out
pushf
imul
out
cmp
adc
pusha
addr16
jnp
sub
xchg
cmp
add
lea
adc
sbb
jmp
sbb
inc
lods
and
movsb
cmpsl
or
mov
fdivrl
stos
push
out
test
and
fbld
sub
imul
fwait
sti
sub
or
pop
fists
rolb
inc
or
mov
cltd
mov
jg
cmp
fidivrl
jmp
and
stc
pop
into
sub
cmpsb
ja
inc
xor
push
adc
ljmp
loop
data16
je
bound
out
mov
inc
xchg
and
dec
xor
adc
les
or
mov
mov
data16
popf
pop
add
aad
adc
std
xchg
jb
push
sub
sbb
push
jbe
pop
lods
and
dec
push
mov
mov
stos
test
int3
or
das
lret
into
ja
dec
rcrb
mov
imul
aaa
cltd
xor
jo
in
arpl
fstl
adc
lret
fdivrl
popf
jg
dec
mov
loop
dec
stc
mov
orl
lcall
subl
aam
mov
repz
adc
xorl
push
mov
ja
mov
and
pop
ret
push
repnz
jb
jl
pop
jmp
inc
rolb
ficomps
xchg
popa
add
loopne
out
pop
adc
ds
hlt
pop
pusha
mov
pop
lcall
jle
lea
xor
or
cli
repz
adc
or
mov
jne
movsl
loope
cmp
roll
xor
popa
std
cmc
dec
daa
cmp
fnsave
xlat
fdivr
mov
add
pushl
mov
or
push
jnp
cld
movsb
rcl
mov
aas
ljmp
or
push
scas
sbbl
xchg
out
int
jl
ret
pop
lods
sub
xor
xchg
lock
jl
lds
mul
sub
xchg
js
sub
loope
in
jecxz
mov
idivl
inc
test
push
test
or
mov
int
sbb
pop
mov
imul
sub
push
loop
bound
pushf
andb
pop
dec
sub
mov
or
movsb
push
fcoml
femms
xchg
xchg
xor
xor
mov
sbb
cli
xchg
dec
outsb
faddl
xor
dec
mov
push
adc
enter
cs
dec
cwtl
fadds
mov
cld
mov
int
imul
sbb
out
xchg
xor
mov
xor
insl
mov
dec
xchg
dec
cmp
cwtl
sub
rcl
jae
pop
rcrb
lcall
lret
cld
mov
aad
sti
pushf
push
pop
fdivl
incl
xchg
adc
pop
subb
ljmp
xor
push
pop
push
mov
inc
test
test
cli
pop
out
lret
mov
bound
aam
cmp
mov
mov
cmp
lods
fwait
mov
cmpsl
mov
cli
stos
imul
sub
int
int
pop
icebp
jae
fadd
inc
fcomi
fadds
scas
sub
jnp
enter
pop
or
outsb
push
mov
pop
cmp
mov
add
push
aaa
jle
xor
add
mov
cmp
repnz
sub
pop
js
aas
popf
rol
fiadds
subb
jns
mov
push
cwtl
movsl
mov
sub
inc
jnp
movsb
and
shl
mov
and
push
lcall
push
mov
xchg
fwait
dec
cmc
sbbl
mov
mov
push
xor
xor
pavgw
push
cli
notb
in
insb
aaa
inc
mov
mov
push
loope
sbb
jle
mov
pop
jmp
xchg
xchg
jbe
iret
sbb
cmp
test
xchg
dec
cmpl
pop
aad
and
movsl
aaa
decl
mov
cmp
sbb
push
fs
scas
mov
add
int3
pop
push
lds
scas
pop
int
rcl
ss
imul
enter
jno
mov
lahf
inc
loop
or
push
push
std
push
push
pop
xchg
xchg
inc
fisubs
popa
lahf
pop
jno
lahf
ds
jnp
inc
fwait
aam
mov
gs
fdivrs
mov
sub
and
or
sti
mov
xor
sti
pop
pop
jb
mov
jo
xor
xchg
mov
or
mov
pop
cmp
mov
in
sbb
xchg
stc
mov
ss
andl
stos
js
lret
and
adc
jle
cltd
push
cmp
xchg
dec
rorb
lods
pop
jge,pn
call
push
xor
push
mov
adc
pop
les
mov
cmc
out
lret
dec
shrb
mov
mov
mov
xchg
mov
fcmovu
mov
sub
dec
js
imul
xchg
pop
jb
dec
jb
fcmovnb
test
loop
and
adc
mov
xchg
pop
mov
hlt
loope
daa
lock
dec
xor
cld
adc
pusha
mov
adc
xchg
enter
push
push
dec
sbb
insl
cmpsl
outsb
fldt
or
dec
jnp
sub
aad
pop
es
dec
mov
jno
std
aaa
push
push
add
push
xchg
push
and
scas
insb
push
stos
int
aas
sbb
xor
sub
in
xor
arpl
loop
js
mov
dec
repz
xor
push
xchg
movsb
fldt
mov
imul
xor
imul
fildll
aas
repz
cmp
cmp
sar
imul
test
pop
leave
sub
inc
stos
push
std
push
jne
fdivs
and
xor
hlt
insb
xchg
cmp
iret
daa
add
outsl
fimuls
fs
das
mov
sub
mov
push
je
fcomps
jl
mov
test
outsb
nop
cmp
xchg
add
dec
inc
or
push
out
inc
pop
or
sub
or
adc
xor
add
mov
sub
stos
pop
dec
stos
inc
mov
out
scas
mov
sub
mov
xchg
insb
inc
push
mull
mov
sub
sub
or
xor
jl
jo
fstps
aam
mov
sarb
xor
lea
or
jo
or
push
pop
push
inc
mov
push
ljmp
imulb
inc
add
inc
call
or
push
adc
adcb
inc
push
mov
sahf
sahf
push
lahf
xchg
shr
jmp
cmp
lcall
insb
sbb
decl
cmp
mov
rcrb
out
add
add
pop
mov
mov
call
xchg
pop
xor
fcmovnbe
mov
adc
xchg
pop
scas
jg
arpl
and
popf
mov
jnp
inc
adc
adc
add
sahf
cmc
loop
cmp
fucomi
jge
sbb
ret
jnp
mov
push
fwait
cmp
pop
rcl
dec
mov
ljmp
or
stc
cmpb
js
mov
int3
dec
sub
pushf
lahf
lods
and
ret
inc
adc
fisubrl
js
mov
leave
push
icebp
sub
or
imul
jo
add
loop
ss
aam
les
dec
mov
sub
scas
ljmp
jbe
pop
cmp
test
sub
sub
mov
stc
cmpxchg8b
jl
or
add
mov
je
mov
jp
call
and
mov
mov
hlt
xlat
stc
inc
sti
mov
dec
icebp
outsb
outsl
ret
and
lods
mov
push
popa
sbb
or
push
lds
and
adc
imul
xor
out
sbb
out
hlt
adc
fcoml
in
hlt
out
stos
xchg
cmp
fsubrl
mov
xchg
rcr
mov
mov
es
jle
test
push
sbb
add
addr16
sbb
les
inc
in
ret
lods
push
aad
and
arpl
iret
dec
jne
jge
bound
push
jle
inc
or
ljmp
in
outsb
fs
dec
jbe
in
lret
mov
fldl
xor
fmul
cli
xchg
daa
cmp
push
sahf
mov
cmp
xchg
andps
lods
mov
in
cld
sbb
sarl
insl
or
add
jl
mov
testb
mov
movsb
and
push
aaa
adcl
cld
xchg
jne
push
dec
outsb
xorb
test
loope
call
push
push
jmp
jp
mov
filds
faddp
sahf
mov
xor
jno
mov
pop
shlb
out
push
popf
push
adc
mov
fsubrl
les
mov
bound
inc
mov
jns
mov
pushf
xchg
push
insb
dec
pop
push
pop
popf
pop
std
pushl
outsl
bound
sbb
ja
mov
xchg
arpl
pusha
xor
imul
pop
imul
testb
cmp
mov
ror
dec
seta
and
jle
inc
dec
aad
or
mov
fsub
jg
jb
or
mov
test
jbe
les
ljmp
ljmp
inc
cmp
pop
inc
rclb
inc
mov
leave
repz
mov
js
fidivrl
in
xchg
call
test
arpl
stos
jmp
cmp
mov
jns
inc
cmpsb
add
pop
mov
and
xchg
test
test
jnp
sub
jmp
in
cmc
mov
fsubrl
pop
imul
enter
adc
xchg
or
nop
ret
scas
sbb
loop
pop
jb
or
or
cld
mov
and
sub
mov
and
xlat
push
jmp
lcall
testb
mull
sahf
test
jmp
jecxz
es
aad
jge
mov
pop
fisttpl
std
push
mov
sbb
add
push
jle
sub
pop
add
cmp
lahf
inc
push
jb
mov
out
add
test
xchg
mov
gs
sub
fdivrs
sub
pusha
bound
bound
cmc
xor
sbb
loope
adc
cmp
push
push
shlb
sub
fmull
hlt
pop
push
or
out
inc
adc
test
mov
or
faddl
fildl
ffree
pop
add
lods
shr
sub
pop
popf
ljmp
pop
test
in
push
cmp
jmp
and
xor
rcrb
adc
ds
adc
cmp
sbb
xor
mov
lahf
repz
mov
lret
cmp
loope
data16
stos
mov
sarb
lret
stos
popf
pop
add
aas
stos
xor
push
daa
cmc
pop
ret
fcomps
adc
and
out
push
adc
dec
jp
jbe
cld
cmp
test
xor
fldl
pusha
add
das
inc
cmp
and
pop
jnp
cmpsl
sub
cmp
js
in
adc
outsb
inc
push
rorl
mov
repz
paddd
shl
ret
aad
movsb
movsb
hlt
mov
sub
push
lods
popa
push
mov
stos
mov
lret
and
daa
pop
divl
stc
pop
jb
sbb
das
xlat
out
cmpsb
dec
bound
push
xchg
ret
ja
loopew
test
insb
rcrl
loop
xor
cmove
into
mov
mov
mov
mov
loop
cmp
jnp
inc
or
ds
aam
sub
and
test
mov
jo
mov
push
mov
and
sub
xchg
shrb
add
mov
sbb
push
xor
std
popf
sub
push
arpl
jecxz
lea
aas
xchg
das
sub
push
iret
inc
push
sub
mov
pop
push
fimuls
push
jnp
negb
mov
scas
insl
add
mov
hlt
mov
mov
or
fs
xchg
mov
scas
xchg
out
pop
adc
out
movsb
push
lods
in
xor
and
imul
les
mov
iret
pop
ret
xchg
inc
in
scas
mov
jge
roll
mov
fisttps
dec
jno
mov
cmc
ja
int
pop
lock
jg
loop
notb
rcll
cmc
int
cmp
je
mov
insb
mov
into
jecxz
cld
sub
mov
filds
ss
int
dec
das
push
add
int
test
test
nop
mov
pushf
sbb
push
outsb
adc
fwait
jecxz
test
adc
dec
cmpsb
addl
aaa
popa
push
mov
push
sub
mov
stos
push
xlat
in
add
fistpll
movsb
mov
bound
push
add
xchg
sbb
enter
cli
daa
test
mov
or
mov
cwtl
je
push
cltd
aaa
popa
inc
icebp
pop
in
hlt
xchg
jo
or
mov
mov
or
xchg
movsb
sahf
jo
lret
sahf
leave
xchg
push
imul
js
mov
aam
adc
aaa
inc
rol
shlb
inc
adc
sub
inc
pop
adc
sub
cmpsb
inc
xor
mov
call
std
cmp
pushf
cli
test
xor
mov
mov
adc
mov
mov
inc
divl
hlt
aas
cli
push
lret
lods
aad
loopw
inc
mull
imul
aad
enter
push
add
inc
push
add
call
fsubrl
aad
mov
loop
xchg
adc
xor
cmpsl
mov
out
lcall
or
loopne
sahf
cmpsl
repz
adc
pop
lods
fsubl
adc
sbb
insl
out
out
inc
inc
pop
push
inc
loope
xchg
in
or
stc
or
subl
inc
icebp
dec
les
sbb
insb
jo
daa
inc
sub
mov
aaa
push
fiaddl
clc
pushf
std
nop
jo
jo
out
inc
adc
bound
imull
jnp
jno
shll
popa
xchg
mov
push
aas
cltd
gs
ds
or
jae
scas
loopne
insb
sbb
sub
fadds
inc
test
adc
mov
add
cmc
sahf
int3
adcb
lcall
mov
xchg
add
inc
js
imul
in
aaa
data16
ficoms
cmc
out
leave
sub
sbb
or
or
icebp
clc
cmpsb
push
mov
sahf
stos
mov
mov
adc
sub
stos
addr16
mov
adc
das
or
pop
fisubrs
jnp
mov
add
push
lock
sbb
xchg
or
mov
ret
cmp
push
mov
sub
jl
pop
mov
xor
sbb
cmc
fmulp
or
push
fistpll
jg
mov
cmp
loop
shrl
xchg
fimuls
mov
std
and
shlb
push
cpuid
movsb
add
in
sbb
enter
pop
pop
in
getsec
dec
pop
ret
std
push
xor
and
sarl
das
mov
insb
xor
mov
outsl
cmp
mov
dec
add
fs
in
mov
inc
ret
mov
mov
pop
pop
mov
mov
dec
sbb
dec
ss
or
pop
fistl
das
mov
and
imul
xor
inc
adc
shll
sbb
fidivrl
adc
and
mulb
imul
inc
xor
add
push
das
xchg
xchg
xor
cmpl
and
cwtl
sub
xchg
aad
pop
out
aad
jbe
ud2
addr16
or
cmp
stc
lret
dec
fwait
push
push
and
lds
inc
jb
icebp
test
mov
pop
mov
add
int
mov
cmp
mov
repz
sti
add
sbb
jp
xor
dec
call
cmp
dec
aaa
mov
mov
test
xchg
cltd
sub
pop
rclb
les
mov
xor
js
fmulp
shlb
insb
mov
cld
sub
jmp
addr16
sbb
and
cmpsl
clc
imul
mov
call
dec
out
jp
jl
adc
rcl
inc
leave
xor
outsl
or
cmpsb
or
lods
or
movsl
ret
sbb
mov
pop
adc
outsb
leave
imul
xlat
mov
sub
xchg
fdivrl
mull
xchg
in
out
dec
fidivl
push
and
or
dec
inc
shll
imul
add
push
ss
ret
stc
adc
adc
repz
push
inc
decb
fiadds
sbbl
xor
cld
pop
outsl
rolb
sub
pop
pop
rcrb
sbb
jecxz
pop
insb
xor
call
stc
decb
jne
jo
or
das
into
idivb
sti
filds
pop
test
icebp
test
mov
adc
mov
sub
test
push
in
aaa
jp
mov
inc
icebp
xorl
cmp
dec
dec
dec
pop
addl
or
aam
inc
mov
push
insl
movsb
nop
dec
mov
adc
mov
ljmp
out
mov
loopne
cmc
fisttps
sbb
and
adc
iret
rcrb
cltd
loope
rcrl
dec
in
jb
pushf
add
pop
xor
nop
sub
fcmovnb
cmp
fwait
jo
jno
outsl
sub
movsb
fstpt
pop
or
inc
scas
in
outsb
shr
pop
imul
ficomps
xor
mov
cmpl
setno
int3
xor
jmp
faddl
pushf
cmp
mov
sbb
sbb
jmp
sbb
adc
sbb
jp
es
jne
and
push
ret
aaa
jle
ret
les
in
fs
aam
imul
repz
das
stc
sub
mov
xchg
enter
mov
push
int3
sar
ret
mov
js
shl
loopne
xor
jge
test
adc
push
push
aas
sbb
mov
outsb
arpl
lret
adc
pop
push
push
ds
ss
jg
pop
push
loopne
xchg
lret
push
mov
out
stos
add
jmp
out
add
popf
sub
jbe
jns
loope
dec
jle
mov
inc
xchg
xchg
cld
mov
pop
pushf
mov
rorl
psubd
mov
in
xlat
push
mov
andl
cltd
test
outsb
in
push
aam
lods
and
mov
pop
sbb
and
mov
bnd
cmp
lds
mov
dec
js
andl
inc
jge
test
sbb
orl
dec
mov
add
imul
dec
xor
cs
test
cmp
mov
pop
sub
pusha
mov
inc
mov
inc
dec
sub
gs
imul
mov
pop
out
sbb
add
sbb
or
sub
sahf
fcmovb
cmp
or
insb
jne
rcrb
jmp
dec
pop
sbb
cmp
test
mov
and
jge
testb
jge
mov
push
add
lock
movsb
out
xchg
cmpsl
lods
sbb
mov
pop
add
pusha
ds
inc
in
rolb
pop
mov
movsl
into
test
outsl
mov
push
cmp
sub
in
mov
sbb
cwtl
aas
fwait
dec
sub
push
es
stos
repz
adcl
es
add
js
pusha
xor
lods
loope
cmpb
fistps
jno
ds
subl
outsb
xor
test
inc
push
clc
mov
jecxz
push
cltd
stos
in
fmuls
ftst
pop
mov
xlat
lret
jl
mov
arpl
xor
sub
int
ficompl
ds
cmp
pop
xchg
outsb
sahf
outsl
pop
push
mov
jae
dec
xor
fcoml
pushf
pop
or
ret
jns
and
push
inc
push
daa
loopne
pop
push
sbb
test
pusha
in
mov
dec
pop
mov
in
fnstsw
repnz
popa
movsl
mov
mov
cmp
add
mov
dec
test
jne
inc
pop
lods
daa
cwtl
push
add
sub
je
push
mov
movsl
cmp
out
pop
jae
test
inc
outsb
push
jmp
push
mov
movsb
repz
adc
test
stc
add
test
lods
dec
sahf
push
shl
sbb
lea
inc
inc
dec
pop
pop
std
in
sub
fisubs
mov
or
lods
sub
cli
phsubd
xor
sbb
cmp
add
nop
sub
mov
roll
jnp
repnz
lret
mov
or
test
ret
pop
sbb
loop
adc
lds
lahf
xchg
pop
dec
and
loope
mov
fwait
mov
push
push
fists
dec
cmpsb
push
add
pop
loope
cmp
dec
je
fisubs
sahf
sub
adc
dec
roll
mov
sbb
fistps
pop
mov
xor
movsb
mov
xor
ja
insb
repz
shrb
pop
cmc
cmc
repnz
inc
pop
sub
rcrb
sbb
scas
sub
outsb
ds
mov
jo
jnp
sbb
xor
add
cli
mov
cmpsb
and
push
mov
rcrb
test
mov
faddp
andl
mov
pop
mov
nop
in
jno
adc
je
add
repz
shll
jbe
push
adc
imul
jnp
push
sub
or
mov
jmp
jge
out
lret
adc
stos
or
jae
mov
sub
cmp
sahf
adc
mov
push
and
or
pop
sbb
sbb
rcrb
cs
mov
ja
push
pop
or
fcoml
push
out
inc
addl
push
lea
push
fsubs
xchg
push
lods
daa
stos
shlb
ret
sbb
inc
pop
dec
ffreep
cmp
mov
mov
fs
fldcw
movsb
xor
clc
pop
notl
pop
xor
pop
push
stc
mov
mov
into
sti
stos
loopne
shrb
push
push
roll
or
daa
testl
test
fmuls
mov
sub
pop
lcall
enter
cs
repz
cmp
inc
mov
and
loopne
cmp
cmp
inc
std
mov
inc
js
add
dec
add
sbb
movsl
jno
xlat
jbe
rcl
cmpsl
push
mov
adc
ror
test
push
test
out
fsubs
mov
pop
adc
or
sub
pop
cmp
out
xorb
mov
pop
shl
or
jge
cmp
dec
pop
leave
jge
loop
jns
dec
xchg
push
adc
dec
pop
sub
or
inc
data16
in
inc
mov
xchg
jb
jbe
or
and
js
jne
mov
aas
and
gs
lret
mov
test
imul
iret
xor
jo
int
add
int3
mov
clc
hlt
imul
mov
sbb
mov
sti
pop
push
loopne
and
push
pusha
sbb
cs
stc
jo
fdiv
aas
enter
xor
dec
fidivl
arpl
out
lods
sti
ss
pop
fidivs
movsl
je
imul
loope
aam
out
cmp
std
pop
gs
negl
pop
nop
dec
mov
pushf
scas
jne
adc
cmp
dec
int3
cmp
mov
in
test
xchg
test
rorl
mov
jecxz
call
mov
sti
and
jge
inc
mov
mov
or
xor
mov
call
jge
shrb
out
cmc
faddp
mul
cmovae
outsl
inc
aas
inc
adc
push
cmp
sti
nop
sub
jg
mov
cmpsl
xchg
loopne
fdivrp
stos
movsb
aad
decb
dec
loope
loope
jnp
imul
inc
lahf
jp
xchg
mov
movl
push
loopne
insl
cmpsl
mov
jbe
xchg
jb
imul
orl
xchg
xchg
push
sbb
mov
in
aaa
dec
out
pushf
out
mov
outsb
mov
bound
lcall
pop
out
sti
sbb
test
jg
clc
fidivrl
pop
es
or
call
xchg
fwait
test
addr16
sub
lret
cmp
jp
mov
inc
sbb
fs
xchg
jnp
mov
call
negb
xor
sub
outsl
setle
nop
popf
sbb
in
xchg
push
cmpsb
icebp
mov
push
push
std
pop
fwait
jno
mov
test
xor
cmp
lods
call
cmp
arpl
pop
mov
mov
sub
xor
sub
cmc
aam
inc
andl
and
add
jns
mov
pop
mov
cmp
cvtps2pi
pusha
cmpsl
mov
mov
mov
xchg
jge
or
xchg
aaa
loop
jbe
in
lds
loop
cli
mov
pop
push
out
pop
mov
inc
xchg
or
sahf
cs
outsb
xchg
mov
sbb
mov
repz
or
jmp
xor
xor
cmp
ret
ljmp
sub
insb
ret
lret
clc
incl
fldenv
stos
dec
push
pop
clc
movsb
sub
jo
mov
dec
scas
dec
push
ret
pop
repnz
ret
xor
jecxz
cltd
ljmp
mov
cmp
xor
sbb
cltd
sbb
or
or
loop
jecxz
enter
adc
add
dec
pop
push
xor
xchg
lods
inc
jno
and
lret
flds
fs
andl
sbb
adc
sbb
bound
push
sub
test
loope
daa
dec
inc
add
test
mov
and
jno
push
sub
test
mov
es
lock
lea
fildll
fistps
mov
scas
pop
mov
mov
mov
pop
mov
xchg
inc
nop
xor
shll
in
test
jnp
dec
push
dec
sub
adcb
fistl
mov
pusha
rcl
popa
dec
mov
fdivs
js
gs
dec
repz
push
dec
popf
add
aad
cmp
bound
lret
mov
aad
dec
xchg
mov
push
sbb
mov
and
jecxz
jne
jg
mov
in
sub
aas
loopne
and
xchg
shll
mov
icebp
xchg
into
test
js
jmp
shlb
inc
into
sub
in
or
adc
lds
mov
dec
or
jle
ljmp
xor
push
adc
rolb
aas
ret
frstor
pop
mov
xor
test
adc
sub
push
jmp
pop
sahf
iret
mov
outsb
mov
cli
xor
les
sub
dec
xchg
sbb
mov
adc
inc
cmpsb
dec
inc
adc
ds
xchg
xor
pop
inc
fwait
pop
xor
sti
and
outsl
xor
out
xchg
jne
aas
mov
mov
fsts
sub
mov
xchg
xchg
inc
lock
and
les
adc
repnz
lds
pop
push
mov
hlt
aam
insl
out
mov
popa
cmp
cli
mov
cwtl
cld
outsb
sub
insb
sub
add
and
cmp
cmp
loop
fisubl
in
sub
fldcw
aaa
push
vmovmskpd
jo
cmc
dec
loop
imul
outsb
fdivrp
push
dec
loop
call
movsb
ret
or
mov
add
and
jmp
xor
pushf
mov
sbb
xchg
xchg
call
mov
sti
add
add
je
and
fwait
gs
mov
mov
sbb
insb
sbb
movsl
and
testb
mov
push
nop
and
addr16
xchg
xor
sbb
imul
jp
jae
pusha
xor
inc
add
pop
mov
sbb
hlt
push
insl
sub
aas
sbb
xor
daa
or
dec
cmp
dec
shlb
pop
add
fs
push
loop
mov
dec
xchg
lahf
push
pop
sbb
pop
cmp
in
lahf
imul
int3
sti
xchg
sbb
cmp
adc
int
arpl
add
clc
sahf
std
xchg
fidivs
cmp
dec
adc
int
mov
lods
shlb
dec
mov
lcall
xchg
sub
dec
in
mov
sahf
call
div
mov
pop
repz
push
testb
pop
add
push
scas
in
dec
sarb
lea
pop
push
sub
dec
into
cmp
push
cld
stos
clc
xchg
idiv
das
out
dec
shlb
add
shrb
add
mov
sahf
sub
and
adc
ret
clc
out
cmpsl
push
mov
daa
pop
cmp
negb
lcall
mov
imull
test
cmc
movsb
pop
mov
imul
pop
hlt
pop
jbe
xor
pushf
xor
icebp
test
jmp
jecxz
inc
mov
sub
mov
push
jne
in
fstpt
inc
and
fldenv
aaa
cmpb
and
cli
fistps
adc
lods
insb
dec
aad
sti
test
inc
fwait
sub
hlt
xor
mov
loopne
std
mov
xchg
jno
inc
push
ja
add
xchg
inc
push
std
sub
ret
fdivrl
ret
or
adc
and
xor
lahf
aaa
push
lret
cmpsb
sbb
enter
jno
or
sbb
shrb
lock
fs
cmc
test
push
bound
out
popa
out
fisttpll
mov
adc
ss
push
mov
outsb
lahf
jo
mov
outsb
adc
rclb
in
shl
subb
out
jge
inc
movsl
paddsw
xchg
ficomps
pusha
adc
jno
mov
je
sbb
push
mov
test
inc
movsb
push
ret
js
and
mov
test
adc
xor
inc
lock
sti
xchg
dec
push
fidivrs
ja
cmp
push
cmp
or
jecxz
and
cs
jnp
rcll
cs
dec
cmc
pop
enter
adc
addr16
data16
inc
mov
sbb
mov
hlt
xor
jns
out
or
jo
sub
ja
test
dec
insl
push
es
sti
add
cmpsb
pop
js
sub
jecxz
and
mov
inc
adc
pop
fstl
scas
inc
cmp
out
and
addr16
jae
mov
mulb
jae
xchg
outsb
xlat
mov
jl
cs
adc
jmp
outsb
jnp
dec
fsubr
mov
jle
mov
xor
std
dec
popa
push
dec
jo
jne
mov
addl
mov
mov
in
insb
insl
nop
cld
xor
mov
xor
mov
mov
sahf
and
das
repz
jae
mov
cmp
xchg
xor
out
ret
lret
sub
dec
xchg
je
push
or
push
dec
sahf
out
sub
inc
lea
pop
xchg
add
mov
jo
cld
xchg
fists
pop
icebp
mov
mov
insl
js
jbe
xchg
sbb
popf
fbstp
xor
js
sub
mov
lahf
stos
jbe
fistpl
repnz
ljmp
in
cmp
call
scas
add
test
xchg
mov
cltd
aad
mov
testb
push
mov
mov
push
jnp
xchg
dec
add
divb
hlt
and
xchg
mov
and
jmp
test
leave
fistpll
mov
jl
jnp
repnz
rcll
or
icebp
mov
mov
rcll
arpl
adc
in
adc
mov
and
cmp
adc
inc
dec
lea
xchg
aaa
fcos
iret
xchg
push
xchg
xchg
inc
add
mov
inc
push
jle
inc
pop
jae
or
iret
call
mov
dec
cmp
cmpsl
sub
add
mov
lcall
std
ds
xchg
mov
pop
xor
push
xor
stos
clc
testl
xchg
stos
jns
pusha
inc
pop
mov
sbb
shl
icebp
xor
pop
pusha
in
mov
rol
or
xor
cmp
mov
lret
mov
fimull
add
ja
cs
cli
das
adc
pop
push
ret
xchg
dec
adc
jl
sbb
xchg
xor
mov
jbe
adc
inc
jp
cld
jg
addb
imul
xchg
enter
cmpsl
push
dec
jmp
mov
jne
inc
clc
rclb
je
mov
std
outsl
sbb
int3
mov
push
clc
iret
add
xchg
inc
fmul
push
mov
pop
jmp
aad
sbb
sub
add
add
aas
add
cs
cmp
or
fsub
sub
out
xacquire
mov
imul
lea
cmp
xchg
idivb
dec
iret
xchg
mov
jne
pop
fcoms
mov
stc
mov
lods
inc
mov
sbb
test
test
lcall
dec
in
imul
loopne
inc
js
xchg
mov
insl
push
mov
jecxz
ret
out
rorb
mov
mov
push
sbb
inc
jbe
sbbb
mov
jb
xchg
cmp
ja
loope
jecxz
lar
mov
ja
cmp
and
repz
sbb
or
inc
jmp
cltd
andb
ret
mov
push
cld
push
inc
cmpl
mov
insb
push
and
mov
stc
iret
add
mulw
les
jg
pop
dec
jae
pop
jp
clc
xor
add
cld
cmp
loopne
loop
dec
mov
jbe
xor
ret
fwait
jl
aaa
mov
xor
loope
jl
add
into
hlt
mov
sub
and
sbb
xchg
aaa
imul
aas
out
xor
int
xchg
bound
or
inc
test
sub
scas
scas
cmp
std
cmp
pop
mov
sub
sarb
mov
out
mov
daa
adc
dec
scas
rclb
pop
call
cmove
sub
clc
and
lcall
popa
test
pop
mov
xlat
adc
pop
jbe
pop
add
lods
dec
push
inc
adc
xchg
nop
clc
sub
rol
sub
cmp
into
es
dec
orl
or
in
scas
sbb
jle
fucomi
cmp
sub
jno
mov
addr16
sahf
xor
pop
mov
xorl
mov
popl
xor
sub
idiv
push
test
dec
ljmp
sbbb
sub
mov
push
adc
pop
in
jbe
pop
addl
repnz
xchg
adc
cld
mov
jp
into
mov
testl
mov
jp
sub
xchg
mov
sbb
mov
xchg
rorb
add
dec
cmpsl
out
sub
insb
stos
jl
mov
inc
scas
sbb
pop
inc
aas
sub
inc
mov
loopne,pt
ret
adc
stos
nop
adc
pop
mov
mov
xchg
ljmp
aas
mov
dec
inc
pop
inc
mov
lea
out
sbb
mov
test
ret
jmp
mov
push
push
ds
mov
rcr
pop
sub
mov
adc
lea
lahf
ja
xor
mov
push
inc
dec
jb
xchg
adc
in
fidivrl
sub
fldt
mov
gs
cmpsb
loop
imul
xchg
and
das
pop
subb
addb
pushf
pusha
pop
jmp
inc
dec
jo
in
bound
and
mov
loop
jp
mov
movl
enter
stc
inc
pop
adc
loope
pop
enter
push
mov
jns
in
ljmp
mov
loop
jb
repnz
dec
xchg
adc
in
in
data16
mov
xchg
inc
fidivrs
xor
in
jg
repz
xchg
mov
jge
xchg
fisubs
jecxz
adc
add
int3
mov
lret
inc
add
iret
mov
and
les
mov
mov
cmp
out
xor
inc
fdivrs
out
daa
js
inc
enter
js
dec
sub
inc
scas
outsb
sti
bnd
jno
aad
push
mov
xlat
rclb
inc
lahf
adc
mov
mov
sbb
das
stc
ret
movsb
call
ss
scas
test
jmp
and
cltd
imul
cmp
mov
imul
jecxz
push
imul
xlat
das
daa
mov
imull
aad
xchg
jbe
adc
fisubrl
dec
int
cmc
mov
stos
out
pop
stos
mov
add
div
aam
mov
loop
es
out
dec
testl
inc
cmp
das
sub
ret
loop
pop
dec
jp
sub
shlb
xor
loope
orl
cwtl
in
xor
movb
jl
inc
rorb
dec
add
ja
test
sub
insb
push
push
mov
out
ljmp
cmp
pminub
movsb
mov
sub
jle
sbb
cli
adc
pushf
loopne
xchg
dec
and
divb
cmp
mov
mov
pop
and
lahf
rol
lds
cltd
push
jp
mov
in
push
push
inc
icebp
aaa
mov
outsb
dec
fstpl
mov
lret
inc
sub
mov
ljmp
add
xor
jb
xlat
pop
or
call
int
gs
push
es
shlb
fpatan
mov
rcll
in
jecxz
jns
push
inc
cli
pop
adc
aaa
jno
dec
cmc
push
cmp
test
or
sbb
ds
pop
loop
mov
xchg
inc
out
or
ss
fldenv
cltd
out
mov
xchg
mov
aam
inc
sub
sbb
dec
mov
xor
mov
jge
xlat
sbbb
sbb
aad
mov
dec
enter
and
mov
js
and
punpckhdq
cli
loop
ja
add
mov
pop
idivl
adcb
shl
test
fdiv
std
jbe
es
and
xchg
loopne
xor
fdivrl
mov
jge
lret
and
loopne
sti
mov
mov
jmp
xorb
add
or
pop
call
ds
out
sti
mov
sub
pop
and
iret
sarl
js
aam
out
push
xchg
gs
or
stos
daa
orl
mov
xor
jge
lret
sub
mov
adc
mov
rcr
imul
aam
sub
ret
xor
push
push
cld
mov
in
rclb
pushf
jb
xchg
pop
push
mov
hlt
mov
mov
out
pop
push
js
and
push
shrb
pop
add
lcall
in
mov
and
int
mov
adc
leave
out
sbb
push
cmp
out
incl
fbld
sub
int
add
adc
ljmp
jae
insb
mov
pop
iret
jl
ds
jnp
xchg
es
sbb
outsl
adc
jae
cmp
sub
iret
jecxz
scas
inc
add
pop
pop
fmuls
gs
test
ja
xchg
mov
aad
pop
rcr
mov
loop
jl
in
stc
subb
popa
outsb
pop
sarb
or
or
imul
sbb
push
pop
cmp
push
xor
rcrl
pop
data16
in
enter
mov
dec
mov
ficomps
mov
add
sbb
inc
cmc
dec
sub
fsubl
pop
fidivs
jno
dec
in
notl
in
aad
mov
inc
lahf
pusha
mov
xor
iret
imul
stos
ds
push
arpl
repz
jecxz
lcall
and
xchg
fs
jne
gs
pop
adc
mov
xchg
push
icebp
sub
xchg
jbe
iret
cmpsb
pushf
xchg
jl
in
dec
test
xlat
adcl
sar
adc
jnp
repz
dec
cmpsb
ucomiss
dec
mov
fcoms
sub
push
pop
push
fidivs
mov
mov
pop
push
pop
mov
inc
cmp
push
push
xor
ja
call
aam
cld
hlt
cli
in
sbb
dec
mov
dec
dec
popa
xchg
xor
mov
ss
push
jno
pop
cmp
in
in
jb
ret
outsl
outsl
inc
xor
push
and
xor
dec
mov
rol
cs
out
jle
jb
mov
lcall
into
and
lret
pop
adc
pop
mov
stc
lea
fnstcw
xor
mov
jo
test
icebp
pop
push
fisubl
bound
notl
mov
sub
sbb
or
or
leave
insl
xor
test
jge
mov
inc
mov
aaa
ja
xchg
pushf
popf
xor
ret
les
dec
or
add
pop
ret
mov
iret
jnp
scas
cmp
rcrb
cwtl
shrl
pop
iret
fistpll
and
jae
lahf
outsl
xchg
xchg
in
sbb
sub
in
sbb
xorl
aas
fbld
dec
imul
aad
pop
dec
repz
js
hlt
xchg
cmp
xchg
movsl
inc
pop
cmp
outsb
pop
int
mov
hlt
push
mov
jne
test
cmp
cmp
cmpsl
sub
das
push
pop
sub
jl
std
idiv
pop
push
aas
lods
lahf
nop
je
jg
test
and
xchg
jbe
mov
out
js
rol
loope
push
repz
or
and
nop
and
cmpsb
int
adc
jg
repnz
into
sbb
icebp
fisubrs
and
sbb
sub
xlat
int
jge
sarb
dec
and
pop
mov
in
fisubrl
jg
outsb
popf
pop
out
sbb
cmp
int
popa
jge
clc
jmp
aas
shlb
aas
inc
cli
sub
call
inc
pop
in
push
popa
sti
push
out
fisubrl
jp
loop
fimuls
mov
or
lods
jle
cwtl
fisttps
loop
push
stos
pushf
mov
mov
cld
xchg
add
sub
iret
xchg
fwait
sti
fsubrs
insb
out
jne
pop
sbb
push
std
shlb
jp
leave
and
pop
xor
lods
les
add
cmc
mov
adc
cmpsl
adc
insb
adc
shlb
test
icebp
dec
xchg
daa
lcall
loop
fcompl
jae
in
ss
xor
jmp
fwait
xchg
shr
sbb
insl
cs
inc
lahf
shrl
xlat
mov
inc
pop
sub
test
add
mov
xor
push
sub
push
ret
mov
or
inc
mov
fucomi
and
mov
sbb
andb
jo
jb
gs
and
jns
in
sbb
data16
mov
loop
lret
pop
mov
fildl
loope
out
or
ss
cmpl
fcompl
push
out
test
stc
loope
shlb
rcrl
inc
xchg
loope
or
ljmp
mov
mov
orb
repnz
push
sbb
fidivs
lret
lret
sbb
inc
xor
cmp
adc
imul
aaa
cmp
inc
test
or
jae
cmpsb
and
pop
out
in
adc
cmp
and
jno
mov
mov
fistpl
or
sbb
ds
jg
iret
rclb
gs
inc
ss
sahf
cli
orb
popa
sahf
hlt
ds
mov
cltd
xchg
aad
hlt
rcl
and
xchg
jle
hlt
sub
mov
xor
or
fdivrl
mov
mov
mov
scas
or
into
adc
bnd
pusha
es
arpl
cmp
mov
aas
pop
movsl
lods
sbb
sbb
rcrb
and
cmp
les
xor
insb
mov
mov
out
xchg
dec
and
rcl
xchg
push
lcall
add
jb
mov
lahf
dec
shrb
jp
or
daa
loop
pusha
sub
out
xlat
rcrb
lods
test
mov
xchg
pop
cmp
xor
sbb
pop
cmp
cwtl
cs
xchg
lcall
xchg
mov
ds
cmpsl
xor
inc
jl
and
pop
aad
xlat
pop
xchg
inc
cmp
mov
jle
int
sub
add
ret
data16
rcr
or
loopne
in
out
int
mov
std
cwtl
or
cmp
mov
mov
lock
aas
cmp
push
and
cmp
fsubl
testl
and
dec
cmp
addr16
jnp
xchg
sub
lret
dec
push
jg
push
notl
imul
sbb
aaa
cmpsl
xchg
add
inc
pop
imul
mov
movups
inc
adc
shrl
call
dec
repnz
insl
arpl
aad
cli
cld
call
rcrl
sbb
mov
mov
add
testl
pop
push
in
fstps
or
icebp
in
adc
or
adc
push
sarb
popa
push
mov
dec
add
shll
add
push
and
add
cmp
add
arpl
roll
mov
cltd
iret
imul
shl
outsb
lcall
outsb
les
or
pop
fwait
jl
xchg
push
xchg
addr16
adc
cs
imul
jnp
sbb
lds
mov
das
fcomps
xor
std
sbb
push
mov
sahf
scas
mov
cmpsl
jns
sbb
mov
mov
fwait
jbe
and
or
inc
jle
clc
sbb
popf
xchg
les
jae
adc
mov
nop
adc
add
inc
sbb
sub
inc
mov
mov
mov
int3
popf
call
adc
sub
and
popf
push
or
cmp
aad
cli
inc
sbbb
xorb
mov
dec
ret
mov
cli
adc
pop
shll
ret
sbbb
sub
ds
rcrl
cmp
or
adc
aam
stc
aas
shrb
and
cmpsb
cmp
stos
pop
pop
xchg
stos
jecxz
xchg
rclb
scas
aam
addr16
sti
shll
rol
mov
ret
popf
outsb
jo
mov
hlt
jmp
jo
mov
cmpsl
xor
sar
hlt
lods
cmpsl
sahf
aaa
or
mov
repz
pop
out
jb
lods
mov
jg
mov
or
lock
imul
fdivrl
sub
mov
js
push
sbb
dec
jmp
push
mov
xchg
fbld
aaa
xchg
into
je
or
out
push
das
hlt
je
and
push
and
xchg
mov
sarl
sub
xchg
cmp
adc
xor
or
test
dec
jl
sub
xchg
pop
mov
sub
fcomps
mov
cs
es
fs
mov
mov
lret
sbb
mov
daa
mov
mov
dec
sbb
add
cwtl
je
in
fisttps
lea
movsb
xchg
jp
mov
pop
lcall
sub
xchg
push
cmpsb
dec
xlat
clc
mov
cmp
test
icebp
inc
aas
daa
fiaddl
scas
es
in
roll
mov
test
push
in
push
sbb
ja
cmc
adc
jno
add
inc
mov
loope
imul
negl
sbb
add
add
adc
mov
pusha
sar
push
sbb
add
addr16
aam
scas
mov
sbb
lods
scas
lods
jge
mov
sub
add
nop
cmpsl
ret
mov
mov
jae
ja
cli
mov
push
aam
fisttpl
movsb
adc
test
int3
mov
mov
jnp
lret
out
jl
mov
pop
cwtl
and
add
xchg
or
xor
adc
xchg
jle
xchg
mov
scas
mov
xor
inc
lcall
inc
mov
aad
add
xchg
cmc
dec
inc
cmp
pop
rclb
pop
add
mov
leave
ja
mov
and
dec
in
jmp
sub
jno
outsl
cmpsl
mov
faddl
mov
jecxz
adc
lahf
imul
cmp
shrl
mov
jg
popa
cmp
and
ds
mov
in
cmp
ret
orb
dec
push
and
aad
ljmp
fisubrs
cmp
aam
test
cmpl
dec
out
addr16
mov
or
repz
icebp
add
and
jae
adc
jnp
lcall
xchg
or
push
xor
or
fsubrl
leave
adc
jg
sub
sbb
jne
xchg
cmc
and
leave
push
aad
dec
pushf
testl
pop
popw
sub
andl
cld
inc
mov
add
pop
cmc
int3
dec
stos
pop
jns
mov
orb
cwtl
mov
dec
cli
mov
dec
and
aad
add
sbb
and
cmpsb
outsb
push
or
adc
xchg
data16
aaa
fldt
or
xor
inc
ss
mov
fisttpl
dec
jmp
mov
xor
push
scas
or
and
addb
xchg
xchg
pop
fmul
aad
cli
pop
mov
insb
dec
inc
and
mov
or
lret
xor
insl
push
xchg
jp
push
mov
fdivs
inc
inc
out
lea
orb
push
es
lods
arpl
mov
push
jmp
inc
inc
rorl
dec
insl
adc
in
cmpsl
mov
icebp
lret
jnp
xlat
mov
lods
aaa
addl
mov
cmp
loope
insl
cltd
cwtl
shrb
in
in
push
push
mov
pop
jno
mov
mov
push
sbbb
push
out
into
outsb
pop
arpl
jmp
and
mov
in
fs
mov
add
rolb
xchg
cmp
mov
or
out
packsswb
cmp
pushf
dec
out
sbb
sub
push
fstpt
mov
mov
pusha
fisubrs
or
les
jmp
fsubl
lret
push
das
xchg
bound
pop
push
int3
mov
xor
inc
out
xor
lods
aas
add
mov
adc
mov
sub
iret
xchg
dec
jg
sahf
or
sbb
pop
fwait
into
rclb
movsb
xor
dec
lea
xchg
push
cwtl
dec
cld
push
fstps
hlt
mov
das
rol
xor
add
js
rorl
ja
loop
cmp
cli
inc
cmp
lret
or
pusha
aas
les
mov
repnz
jmp
pop
subb
sbb
push
mov
nop
adc
jl
jle
flds
ret
cmp
xchg
pop
cmc
ljmp
incl
push
xchg
push
cmp
sbb
cmp
popa
or
in
mov
int
cmp
mov
bound
mov
icebp
lods
jmp
ja
push
clc
sti
mov
insb
jp
inc
dec
lret
inc
cmpsb
lahf
xor
xor
aam
cld
pmuludq
xor
sub
add
and
sub
lahf
push
rcll
out
test
mov
dec
xchg
push
cmp
loope
sbb
dec
jae
dec
xor
subb
inc
ror
dec
cwtl
mov
add
cli
mov
out
call
fdivrl
out
scas
pop
sbb
addr16
rcll
pop
in
out
repnz
test
and
sbb
bt
mov
adc
inc
fldcw
pop
inc
fdivrl
je
in
adc
data16
stos
lret
xor
xchg
mov
mov
add
mov
mov
fdiv
into
mov
mov
cmp
pop
popa
or
stos
int3
push
dec
shl
mov
cmp
adc
cmpsb
lcall
cmp
mov
cmp
pop
mov
mov
pop
sbb
cmp
add
cs
clc
in
jb
leave
mov
int3
daa
mov
and
sbb
cmp
dec
jp
popa
dec
cmp
adc
lds
scas
xor
icebp
outsb
inc
xlat
int
ja
mov
sbb
push
mov
mov
pop
and
jmp
fsts
rorb
cmpsl
dec
mov
cmp
mov
jne
cltd
jle
testb
push
fs
stc
nop
movsl
sahf
sbb
lcall
mov
push
xor
test
loopne
xor
jb
daa
movsb
sbbl
xchg
add
adc
push
xchg
fcoml
fcmovne
enter
add
sbb
sbbb
pusha
push
outsb
int
and
adc
test
icebp
cmp
pop
sbb
or
fiaddl
mov
call
inc
fwait
sub
sbb
cmpsb
xor
pop
outsb
cmp
es
xchg
or
jecxz
pop
movsb
add
pop
lcall
pop
iret
call
mov
and
mov
xlat
dec
mov
mov
lods
add
pop
lds
jnp
sahf
and
loopne
mov
es
retw
dec
push
cmp
xor
addl
xchg
test
mov
or
shrb
rcll
pop
jb
cmp
cmpsb
insl
stc
aaa
push
mov
adc
mov
insb
dec
addr16
lcall
push
inc
int
fxch
mov
rolb
mov
jnp
stos
test
or
ja
push
out
ficomps
insl
les
jp
cmpsb
clc
jae
mov
mov
xchg
mov
mov
fists
jmp
and
out
push
sbb
cmpsl
mov
mov
std
push
aad
sbb
xor
xlat
cmpsl
mov
mov
jbe
scas
lods
add
push
loop
movsb
pop
popa
pop
call
push
clc
imul
scas
ljmp
sub
pusha
jle
sub
fdivl
fbld
jmp
je
inc
icebp
popf
push
xchg
pop
fstpl
xchg
pusha
dec
xchg
mov
mov
repz
mov
push
out
clc
and
sbb
mov
and
jl
outsb
inc
ds
xchg
sbb
in
dec
dec
and
push
jne
mov
shll
add
dec
jae
pushf
pusha
and
jmp
mov
and
repnz
and
inc
mov
or
pop
fcoml
pop
mov
cs
jbe
jno
repz
vpmaddwd
aam
or
cltd
mov
out
cmpsl
inc
cmp
arpl
idivl
repz
nop
movsb
cli
and
outsb
dec
dec
fcoml
inc
adc
jg
frstor
xor
sbb
fsubrl
pop
popa
dec
and
xchg
xlat
mov
mov
in
or
shlb
and
popf
xchg
inc
movsb
xchg
or
jns
mov
mov
cltd
sub
bound
jecxz
into
dec
out
hlt
mov
adc
andl
pop
jge
pop
add
lock
aas
pushf
push
mov
jb
add
repnz
add
sbb
aaa
mov
scas
pop
push
or
aaa
xor
xchg
enter
cmp
jns
jae
sub
adc
adc
divb
xchg
push
fcoms
cmp
movsb
lahf
daa
stos
xor
iret
cmp
adc
je
and
hlt
inc
cmpsb
pop
add
movsl
icebp
daa
cmp
je
loopne
push
adc
repnz
jl
js
inc
xchg
pop
sub
sbb
sbb
mov
cli
je
mul
sbb
or
outsl
loop
lret
outsl
lahf
pop
xor
mov
sbb
fwait
ljmp
mov
adc
leave
lods
inc
push
dec
push
xchg
push
mov
or
outsb
xor
mov
hlt
dec
dec
and
nop
inc
adc
fimuls
and
loope
mov
test
fists
movsl
push
imul
movl
pop
pop
repnz
sbb
pushw
or
adc
lods
jmp
or
pop
dec
ret
mov
jb
out
aam
cmpsl
inc
cmp
xor
jnp
in
push
stos
mov
pop
jge
fs
push
inc
cmovns
nop
or
cmp
cld
fmull
sub
push
jae
popa
xorl
testl
test
daa
daa
and
sbb
xchg
xchg
in
xor
dec
mov
cwtl
lock
outsb
jbe
push
mov
inc
or
jbe
addr16
iret
adc
repz
insl
insb
cmc
aad
aaa
sbb
sbb
push
or
pop
and
dec
scas
inc
je
sub
loope
call
jmp
mov
scas
push
lock
test
jl
out
dec
mov
out
mov
mov
clc
divb
int
in
or
sbb
popa
mov
inc
add
add
scas
mov
mov
jg
inc
add
adcb
dec
out
and
pushf
adc
loope
in
dec
vpunpckhwd
bound
add
dec
mov
sti
dec
hlt
mov
cmp
cmc
test
ret
xchg
xchg
mov
incl
or
inc
bound
stos
ja
cwtl
das
outsb
jp
xor
lock
mov
mov
adc
cmovle
lods
adc
mov
mov
outsb
xor
popf
add
mov
or
popf
fildl
sbb
stos
xchg
and
das
scas
cmp
fnstcw
xlat
std
in
cmp
stos
xor
mov
fdivl
je
or
ret
adc
push
test
loop
loope
std
inc
lds
dec
xchg
data16
cli
mov
fimuls
mov
dec
add
inc
scas
xorb
mov
xor
aas
mov
push
cmc
fisubs
popf
test
fs
sahf
lea
jp
cmp
cs
fcompl
scas
loopne
push
loopne
push
divb
popf
add
ffreep
pop
insb
and
cmpsl
dec
jge
mov
dec
pop
xor
jg
jmp
or
std
pop
cwtl
mov
leave
xor
mov
or
mov
mov
mov
mov
dec
sbb
pop
shl
gs
ljmp
xchg
cmpsb
roll
test
or
in
adc
std
xchg
pop
xchg
dec
test
mov
nop
mov
lods
push
mov
xchg
xor
inc
out
dec
mov
and
fidivs
mov
fisubrl
push
das
mov
loopne
scas
sub
xorl
outsl
adc
jb
pop
dec
inc
inc
add
jae
mov
rcrl
arpl
xor
inc
dec
pop
mov
mov
xchg
js
mov
pop
cmp
call
sub
pop
xor
mov
inc
pop
rorl
pop
push
dec
in
inc
xorl
pop
fsubp
cmp
int
mov
repnz
fisttpll
mov
cmp
xor
pusha
and
lea
xor
pop
mov
inc
test
test
bound
gs
mov
inc
cmp
jl
and
jae
std
xor
dec
add
mov
movsb
xchg
xchg
push
push
insl
sbbl
ficoms
xchg
jns
lock
out
or
lret
arpl
pop
call
or
in
fimull
mov
sbb
pop
das
mov
rcll
daa
mov
ja
sbb
jno
sbb
into
movsl
test
sarl
daa
mov
enter
add
or
les
cmp
mov
loope
push
dec
ds
pop
push
cmp
cmpsb
into
jecxz
xchg
bound
insl
fs
lods
pushf
jle
dec
fstl
xor
nop
and
in
enter
adc
cmp
pop
push
mov
fcmovnb
inc
ss
icebp
sub
std
addr16
dec
imul
cmc
jl
xor
sbb
jns
fs
xorl
call
adc
pop
xor
cmp
lods
add
push
push
es
ret
ror
xchg
push
inc
jg
push
pop
or
mov
aaa
sub
sbbl
fcomps
imul
mov
ljmp
xorb
movsl
aas
mov
add
jnp
sbb
mov
xor
mov
loop
dec
icebp
in
adc
movsb
jnp,pn
mov
cmp
ja
pop
addr16
outsb
andl
sub
xor
jg
mov
cmp
pop
out
dec
inc
stc
or
shlb
test
je
test
jnp
adc
test
push
inc
xchg
xchg
ret
add
out
aam
in
jnp
xor
clc
pop
ror
mov
loope
sub
les
sub
mov
xor
cld
les
mov
gs
mov
dec
add
fsubrl
sbb
dec
and
leave
mov
jae
in
mov
daa
loopne
jno
lcall
out
push
adc
inc
dec
sbb
sti
hlt
add
sub
rolb
cmp
lock
cmpsl
das
add
mov
xor
mov
pusha
icebp
inc
rcrl
dec
push
inc
inc
adc
xor
aad
push
jp
aas
dec
mov
jns
fistps
add
inc
inc
lahf
jl
inc
cmp
xor
pop
addr16
mov
push
iret
imul
push
and
es
rcrl
mov
push
lcall
mov
mov
adc
mov
dec
sbb
pop
iret
std
out
jb
mov
aaa
mov
cmpsl
pushf
std
dec
notl
xchg
add
fwait
leave
xchg
adc
inc
xchg
mov
ret
add
lcall
pop
shlb
mov
pop
movhps
sahf
pushl
xor
enter
xchg
cmp
movsl
xor
sarl
sbbb
dec
mov
or
jo
shlb
mov
cmp
adc
cmc
fisubs
cld
adc
add
fcompl
sbb
inc
inc
jno
or
push
stos
mov
hlt
jns
lea
add
dec
lahf
test
orb
mov
xor
outsb
arpl
and
cs
jae
or
je
dec
cmp
loopne
push
pop
mov
inc
lock
xor
pop
or
mov
add
mov
fcom
loope
push
mov
repz
repz
inc
mov
mov
iret
xlat
pop
inc
push
mov
lock
sbb
jae
jl
lock
pop
mov
clc
dec
mov
nop
mov
lcall
shlb
cmpsl
dec
jo
fimull
pushf
push
sbb
push
insl
push
adc
jl
or
enter
into
fs
and
pop
roll
add
sbb
out
push
lods
xlat
sbb
testl
lret
xchg
stc
psubsb
or
mov
loopne
cwtl
aas
aas
sbb
cmp
ljmp
mov
xor
and
push
pop
xor
cmp
stos
data16
sub
sti
and
mov
push
xor
aaa
or
insl
in
xchg
int
lret
hlt
sbb
ret
jmp
and
sub
xor
mov
lret
test
scas
dec
test
and
aas
jmp
lret
cmp
negl
aaa
sbb
jno
lret
and
iret
fistpll
adc
xchg
push
add
push
and
sub
aam
into
dec
repz
incb
sub
mov
fidivl
or
xor
out
lock
rcrb
outsb
jns
sub
and
loop
push
into
leave
or
cmp
xchg
into
pusha
and
dec
push
out
mov
push
aaa
mov
ja
negb
push
daa
jbe
or
hlt
mov
cltd
pop
pop
out
xchg
lea
in
lret
subl
shlb
xchg
add
mov
fisttpl
in
pop
mov
and
repnz
mov
cmp
jl
lock
fstpt
jecxz
in
cmp
jae
test
jnp
popf
fidivrs
lret
sarb
frstor
inc
mov
dec
push
xor
pop
hlt
push
mov
adc
out
pop
push
xchg
adc
aaa
dec
lock
and
es
subb
pushf
lods
les
clc
xor
mov
adc
iret
xchg
adc
ret
fmuls
sub
fistpll
sbb
js
and
cs
xor
mov
xchg
inc
je
xchg
sbb
arpl
repnz
lsl
jl
pusha
jecxz
filds
sbbb
fisttpl
mov
mov
and
les
push
xor
push
pop
daa
fwait
les
mov
mov
mov
mov
adc
pop
sbb
sub
popf
pushf
scas
pop
cltd
pusha
pop
int3
add
cmc
pop
sub
insb
sub
sub
jge
pop
loopne
sarl
xor
mov
sbb
mov
aad
sarb
pop
and
mov
sub
pop
mov
das
std
sbb
fwait
jbe
mov
fdivrp
sbb
mov
cmp
cwtl
xor
mov
lret
stos
jns
out
push
outsb
cmp
lahf
jmp
das
pop
jae
vaddsubpd
mov
pop
cli
inc
sbb
jbe
cmp
inc
insl
mov
sbb
or
leave
sub
dec
cltd
clc
xchg
inc
and
or
out
arpl
push
leave
loopne
mov
es
cmp
push
mov
int3
lret
push
in
push
ret
pop
push
jne
lret
adcl
add
or
int3
nop
mov
adc
xchg
mov
lods
mov
mov
mov
xchg
xor
movsl
shrb
aas
insb
dec
adcb
cmc
dec
and
mov
jmp
rorb
sbb
adc
pop
lea
icebp
jp
pop
out
insb
xchg
hlt
ss
rolb
sub
test
xchg
inc
jecxz
mov
sub
add
outsb
cmp
mov
aas
mov
cmp
xlat
clc
lods
pusha
or
push
lods
mov
shll
insl
adcl
push
sub
and
sub
popf
xor
btc
and
xchg
test
and
mov
jmp
and
imul
icebp
lahf
shl
push
mov
enter
xchg
mov
and
xchg
sbb
gs
sbb
out
inc
mov
mov
dec
filds
ljmp
daa
adcb
push
arpl
and
push
mov
fwait
jle
mov
lods
jmp
sbb
mov
jle
push
adc
and
cmp
mov
pop
ds
jo
sbb
movsl
out
imul
aas
sub
xchg
out
sub
lret
in
in
es
mov
scas
xchg
and
xchg
imul
aam
mov
xor
in
shrl
jo
add
cli
loopne
pushf
shlb
cwtl
inc
sarb
mov
nop
addr16
aad
add
mov
enter
fst
jg
test
pop
inc
mov
cmp
add
cmpsb
fdiv
addr16
addr16
bound
add
sbb
mov
loop
mov
add
inc
push
nop
dec
adc
adc
adc
mov
fcoms
mov
jae
push
dec
fcomip
mov
repz
mov
and
xor
sarb
std
sub
sahf
movl
push
or
sbb
sarb
xchg
xor
push
fsubp
imul
sub
pusha
push
sub
xchg
out
mov
leave
mov
jp
push
sbbb
push
pop
sbb
stos
into
and
mov
cltd
shrb
jbe
adc
loopne
xor
xchg
xchg
dec
lahf
adc
pop
push
adc
in
vpshufd
cmp
mov
pop
scas
adc
pop
data16
pop
cmp
cmpsl
out
shlb
cmp
inc
stc
jmp
adc
or
je
mov
notl
cmp
add
mov
sbb
lret
fcoml
jo
or
and
sahf
cmp
fwait
mov
cmp
xor
and
lret
lret
xlat
dec
push
xlat
jbe
sub
decl
in
sbb
pop
je
pusha
in
add
mov
imul
push
shll
ror
in
popa
jo
sub
and
mov
fs
mov
and
xorb
shrl
fisubs
outsb
data16
mov
push
cmpsb
mov
mov
adc
pushf
scas
sbb
pop
dec
lahf
shll
xchg
or
into
adc
inc
aam
lahf
adc
add
mov
loop
iret
mov
inc
cwtl
dec
pop
push
mov
and
adc
cmp
inc
pop
and
adc
pop
xchg
hlt
mov
sbb
mov
jno
dec
outsb
outsl
pop
insb
mov
mov
cmp
lcall
sbb
xor
jbe
inc
arpl
fildll
add
in
enter
sbb
gs
imul
inc
mov
add
xor
lock
enter
aas
push
cs
inc
ds
xchg
add
jg
das
popa
movsl
jae
pop
hlt
xchg
xor
daa
lret
jnp
mov
nop
mov
shll
insl
out
fwait
in
mov
es
test
cmpsl
scas
xchg
mov
xor
imul
or
sbb
and
cmc
sbb
pop
push
add
popf
or
xor
daa
es
jo
adc
xchg
out
ljmp
jp
test
pop
sub
sahf
pop
inc
adc
leave
cmp
rolb
push
mov
xor
aaa
loopne
cmp
jnp
lock
adcl
orb
sbb
xor
cmp
les
jg
int3
xchg
dec
orl
inc
ret
mov
pop
repnz
lods
lahf
jmp
pop
mov
xor
gs
inc
sahf
mov
lahf
xor
mov
mov
sbb
cmp
mov
mov
in
mov
out
xor
outsl
sub
adc
imul
sahf
mov
lcall
jl
and
mov
insb
ffree
pop
sbb
ror
pop
or
hlt
adc
add
pop
dec
or
movsb
fs
mov
clc
push
mov
fstps
sub
jno
pop
fildl
scas
dec
lea
xor
jae
jge
xorb
push
stos
fcoml
and
sub
add
nop
inc
jno
xchg
mov
rcll
pop
ret
rcrb
lods
mov
ret
xor
lcall
aaa
lahf
inc
into
mov
xor
mov
daa
ret
lret
sarl
aaa
cmp
sahf
mov
dec
loopne
pop
cmp
xor
dec
and
int
dec
sub
jmp
lret
loopne
sbb
add
xchg
shll
sub
int3
je
inc
mov
pop
iret
jmp
inc
and
cmpb
and
rcr
scas
stc
and
sub
ds
and
push
int3
or
cmp
sbb
dec
out
jns
and
movsl
arpl
repz
popa
xor
out
push
xchg
dec
and
mov
dec
cs
and
mov
or
enter
lds
cmpsl
test
cmp
gs
or
push
idivb
movsb
mov
mov
out
mov
cmpsb
int3
push
std
lds
dec
std
es
add
fstps
push
dec
js
stos
cli
push
push
sub
or
or
aad
mov
pop
sbb
or
sub
mov
push
dec
push
push
xchg
testb
ret
dec
adc
jae
frstor
push
stos
cli
push
pusha
cmp
arpl
enter
dec
loop
jnp
lods
sbb
sub
sub
add
sub
gs
adc
cmp
and
jg
int3
add
repz
in
adc
inc
adc
lea
or
add
sbb
je
mov
shll
fstpt
lods
cmpsl
aaa
xor
cld
leave
mov
into
mov
in
sbb
jbe
enter
xchg
mov
cltd
scas
mov
cld
insl
ljmp
sbb
push
sbb
add
xor
sub
jb
stos
sub
pminub
sti
dec
out
iret
or
clc
iret
cs
je
xchg
mov
or
test
mov
xchg
test
adc
imul
sub
jb
outsl
and
pop
lret
adcl
inc
sbb
fwait
sub
out
sahf
jo
pop
fwait
pushf
loopne
stos
lret
cmp
xchg
lods
enter
jb
roll
jp
xchg
xor
cmp
adc
ret
cmp
jo
aas
jecxz
jp
sub
push
and
mov
mov
jb
adc
mov
cmp
and
add
fdivrl
adc
sbb
sub
popf
scas
and
fisubrs
xchg
jo
loope
sbb
sbb
lock
gs
imul
inc
iret
idivb
pop
loopne
std
insb
sarl
sbb
lret
sbb
mov
jmp
push
dec
in
jne
jmp
add
sub
jnp
sub
xor
xchg
mov
inc
mov
adc
lea
push
xor
jle
je
stos
aad
mov
mov
lahf
adc
or
dec
xchg
sub
loop
or
xor
mov
xchg
loop
push
xor
addr16
insl
push
sahf
fisubs
mov
into
mov
test
cwtl
shll
outsl
inc
cmc
push
add
cmp
sbb
pop
insb
stos
sti
andb
out
pop
loopne
popf
mov
push
add
cmp
xor
out
jp
xchg
mov
sub
xchg
push
mov
iret
cmc
dec
jnp
jb
jle
push
jnp
mul
aaa
out
mov
xlat
fld
icebp
push
popa
push
lcall
xlat
daa
jecxz
dec
adc
push
adc
sub
and
xor
push
sbb
or
fistpl
xchg
push
xlat
dec
cwtl
mov
inc
xor
lret
scas
pop
add
mov
or
and
ja
ss
sar
ret
out
mov
add
xchg
addl
movsb
xchg
fisttpll
lds
loope
sbb
in
pop
out
call
add
jae
scas
or
daa
in
and
fnsetpm(287
mov
std
and
jb
jno
in
aas
in
dec
lea
mov
inc
fsubl
shrb
jb
cmp
push
loope
cltd
jecxz
sahf
mov
lcall
mov
pop
dec
mov
addr16
incb
sub
cmp
js
stos
js
in
test
mov
jb
daa
in
cmpsl
lahf
or
add
xchg
je
jns
jecxz
inc
jecxz
xchg
outsl
jmp
clc
xchg
jmp
sub
movsl
adc
out
push
pop
arpl
sub
jne
das
add
cmp
mov
stos
cld
shll
sub
mov
xchg
jl
dec
and
rcrb
mov
lret
cmp
es
mov
fs
dec
and
fwait
repz
aam
ret
ds
addl
fdivrs
push
mov
ret
push
cltd
aad
or
cld
jnp
dec
fildl
or
push
das
orl
into
adc
repz
leave
inc
adc
cwtl
add
scas
gs
cmc
jl
sub
inc
fwait
out
in
inc
dec
sub
cmp
fildll
loope
sub
in
push
push
movsb
pop
lret
inc
fildl
mov
in
push
sti
outsl
jge
jp
scas
mov
lcall
pop
cmp
jmp
push
mov
inc
out
fisttpll
nop
add
push
sbb
addb
mov
movsl
imul
aaa
inc
and
sti
mov
pop
jle
cwtl
mov
jg
mov
and
mov
xchg
imul
jg
sbb
push
push
cwtl
adc
inc
mov
sti
pop
cmp
sahf
enter
adc
shlb
dec
jnp
ss
push
outsl
out
pop
push
fisubl
and
xor
pusha
fsts
and
push
test
ja
iret
in
aaa
xchg
push
lods
mov
std
mov
adc
inc
js
push
nop
bound
mov
rcll
mov
sub
push
sahf
dec
dec
in
dec
imul
adc
lret
stos
jns
lahf
outsb
mov
jb
je
inc
andl
and
xor
stos
aaa
mov
shrl
leave
out
push
test
mov
sbb
jge
xchg
test
ds
stc
pushf
aam
filds
sbb
ret
cld
xor
inc
cli
scas
stc
loopne
mov
jecxz
loope
mov
daa
sbb
mov
je
inc
loopne
outsb
in
dec
js
mov
stos
das
mov
or
cltd
pop
mov
mov
mov
lds
xor
dec
mov
ficomps
sbb
in
ret
dec
push
arpl
test
ds
push
repnz
xlat
fidivrs
xor
inc
push
inc
and
mov
push
cmp
add
call
dec
orb
add
dec
dec
mov
adc
adc
dec
jg
fs
test
subb
xchg
faddp
imul
pop
cld
out
mov
dec
add
les
sub
int
js
rolb
add
sub
xlat
sbb
lret
adc
insb
xor
pop
aad
loopne
mov
push
aas
add
and
mov
dec
sarb
sbb
xchg
stc
add
ret
daa
in
enter
push
push
repz
push
shl
iret
push
xor
fimull
mov
and
sub
scas
lods
jns
pop
iret
xchg
das
sti
vpsrlq
push
xor
sbb
notb
xchg
dec
popa
dec
jbe
jecxz
pop
bnd
adc
sbb
cmp
stc
shrl
mov
dec
mov
mov
pushf
fs
pop
mov
movsb
push
xchg
mov
cli
jno
arpl
or
inc
jns
lret
xchg
jo
inc
mov
mov
inc
insb
and
jb
aaa
sub
mov
dec
sarl
leave
pop
int3
daa
stos
shlb
jl
inc
in
shll
dec
cltd
jmp
sbb
popf
sbb
out
pusha
jnp
je
add
ljmp
aas
fistps
dec
imulb
in
movsl
push
sbb
jmp
mov
js
cmp
jbe
movsl
mov
and
mov
daa
jle
sub
loope
das
lock
imull
sub
jns
pavgw
in
js
cwtl
hlt
out
popf
daa
dec
filds
cwtl
sub
orl
les
jbe
mov
hlt
sbb
push
jo
sahf
aas
push
imul
cmp
or
pop
std
lods
outsl
sbb
nop
das
ljmp
ds
nop
xchg
xchg
push
lret
push
movsl
cmp
popa
insl
xchg
stc
push
lds
repnz
jmp
test
int
dec
push
adc
fimuls
stos
cmp
add
and
dec
add
jae
daa
pop
push
push
in
push
orl
mov
and
sbb
mov
push
daa
test
push
imul
mov
pushf
cmpsl
int3
mov
sub
mov
mov
xchg
xchg
loop
dec
xchg
mov
enter
push
cmp
movsb
data16
mov
icebp
das
mov
adc
and
dec
add
mov
fistpl
ror
sub
andl
push
dec
xlat
push
cld
imul
stc
lds
rorb
call
inc
les
in
add
dec
dec
stc
mov
fldt
movsl
inc
ret
lcall
loopne
sarb
sub
addr16
xorb
es
leave
popf
mov
nop
loope
ljmp
pop
dec
adc
pop
lds
or
inc
jle
xchg
jne
push
stos
mov
pop
lods
push
push
fnstcw
movsl
xorb
leave
fs
sahf
orb
sub
xchg
mov
shl
pusha
push
gs
mov
xor
push
pushf
nop
cs
cld
movb
jg
outsl
xor
ljmp
testb
popf
out
icebp
imul
test
lahf
sbb
add
fadds
add
xor
call
cltd
aas
mov
mov
enter
outsb
adc
pop
cli
imul
lds
mov
mov
xchg
nop
push
xchg
int
pushf
adcl
repz
in
in
popa
pop
jbe
mov
repnz
lcall
inc
fnsave
jnp
je
push
js
sti
jmp
inc
mov
xor
jnp
arpl
icebp
mov
bound
lods
pushl
movb
mov
and
mov
inc
push
loope
and
inc
or
popa
or
popa
mov
and
out
test
daa
cmp
add
inc
mov
fwait
xlat
scas
xchg
fs
dec
or
jge
stos
mov
lcall
sahf
lock
loope
ret
aam
add
jle
xor
xchg
dec
insb
pop
pop
scas
loope
and
fwait
repnz
inc
inc
scas
out
in
movsl
pop
xchg
aad
jo
fstl
hlt
xor
jmp
cmpsl
sbbb
and
in
push
xor
xchg
mov
movsb
sahf
dec
ror
jno
aaa
repz
lret
inc
lret
mov
jle
pop
jle
or
pop
inc
mov
and
mov
shrb
popa
mov
pop
dec
sub
hlt
nop
shr
insl
xchg
sahf
jo
inc
fwait
push
call
mov
pop
lsl
cmp
xor
jns
push
fst
jns
shl
and
aas
cli
jle
imul
repnz
mov
jge
jl
cmp
shll
insb
leave
mov
test
mov
and
jp
std
cld
sub
sahf
inc
sbb
add
incb
push
stos
dec
scas
pusha
pop
and
or
insl
push
mov
inc
rcr
pop
and
sbb
adc
adc
pop
or
or
and
int
sbb
mov
cs
adcl
dec
popf
repz
aas
mov
sti
fcoml
call
mov
mov
xchg
pop
insb
pushl
jp
hlt
fcompl
xchg
sub
pushf
sbb
pop
pop
push
loopne
sbb
cmc
sysexit
test
imul
jnp
into
pop
in
push
out
cs
fstpt
dec
and
sub
mov
pusha
iret
jbe
mov
movsb
xchg
call
or
addb
or
cli
out
iret
fidivrl
push
and
adc
xor
dec
arpl
pop
insb
ss
stc
and
fstpl
fwait
jbe
xchg
rcrl
mov
cli
jb
inc
test
push
mov
dec
cmp
shrl
dec
fsubrs
mov
in
addl
incb
mov
adc
test
add
mov
mov
adc
shr
or
rolb
dec
ljmp
lods
jg
push
pop
ficomps
mov
rolb
inc
aam
inc
stos
fldt
pop
jnp
cmc
xor
movsb
mov
sub
xor
out
sbb
jle
jb
add
xchg
imul
sbb
dec
mov
xchg
push
mov
mov
xor
pop
js
mov
and
arpl
sarb
sarb
mov
lret
ud0
test
das
incb
clc
aam
pop
sub
andb
mov
in
stos
dec
cmp
push
sbbl
dec
pandn
or
std
lock
and
inc
ret
fwait
cmp
dec
sahf
adc
pop
adc
je
fisttpll
fsubs
mov
xchg
xor
cmpsb
dec
push
jno
mov
in
lods
push
loop
fstpt
scas
nop
das
iret
decl
xor
rcll
jb
fisubrl
and
mov
aam
or
jo
cmp
mov
les
shlb
mov
push
xchg
ja
ljmp
outsl
jae
rcll
adc
pusha
mov
movsb
xchg
jmp
rorb
xchg
mov
cmp
dec
push
xchg
cs
outsb
std
das
cli
leave
outsl
icebp
jbe
push
add
inc
lock
dec
mov
test
pusha
fdivs
divb
push
cld
aam
repz
nop
std
aas
loopne
add
jg
cmp
lds
pop
dec
mov
push
stos
xor
and
imul
icebp
das
bound
cmp
add
je
movsb
sub
cmp
mov
int3
ds
call
cmp
sub
daa
testl
cmp
and
xchg
dec
shll
xchg
loop
inc
ficoms
mov
jbe
repnz
and
bound
gs
push
push
cli
add
test
and
divb
ljmp
xor
mov
or
fadd
push
pushf
in
es
ja
pop
int3
add
fs
repz
jne
outsl
fsubrl
mov
or
jnp
sub
mov
ror
lods
xor
movsl
aas
mull
popa
rcl
cmpsl
push
xchg
std
test
ja
jns
lods
lods
cld
push
pop
icebp
daa
cmpsl
push
daa
js
pop
scas
testb
add
icebp
sub
in
push
xor
sbb
or
xchg
inc
stc
jecxz
pop
or
pop
cltd
int3
or
mov
mov
sti
cld
mov
push
sbb
aam
or
xchg
sbb
push
inc
gs
lods
sbb
enter
mov
insb
test
fistps
xchg
mov
sti
repz
ficompl
testl
sbb
xchg
jmp
mov
sbb
call
shll
sbb
aas
and
jle
sub
push
cmp
xor
xor
shrb
xchg
xor
es
cltd
ja
fimuls
push
xchg
mov
adc
jbe
bound
jno
out
mov
adc
popf
pop
sbb
repnz
mov
jnp
pop
mov
push
mov
mov
sbb
loope
out
jnp
fnsave
or
dec
rcrb
ficompl
sub
mov
adc
ret
adc
addr16
xchg
push
pushf
out
pop
sbb
sub
mov
push
xchg
sub
jg
ret
pop
hlt
leave
jge
sbb
jle
iret
lods
rcrb
and
dec
int
or
jne
call
cmc
inc
add
push
aam
inc
xchg
jp
dec
cs
shll
mov
push
inc
flds
repnz
and
imul
jmp
aad
xlat
pop
outsb
lock
bound
nop
int
xchg
mov
fstl
xchg
movsl
in
dec
adc
mov
mov
movsb
ficompl
out
mov
fmull
test
addl
and
popa
xchg
sub
adcb
xchg
add
nop
xor
mov
or
mov
adc
pop
or
mov
cs
push
pop
add
les
fisubs
adc
dec
roll
mov
sub
jmp
cmp
inc
outsb
xor
cmp
xchg
mov
nop
nop
lock
stos
lret
mov
movsb
sub
imul
cmpsb
fidivrs
daa
test
dec
jo
mov
insb
cld
lcall
push
adc
inc
push
mull
push
loope
jmp
pop
mov
push
out
pop
xchg
out
lret
test
pop
clc
xor
sahf
jmp
and
mov
into
pop
repnz
mov
xor
idivb
cwtl
mov
cli
jecxz
icebp
fsubs
sbb
icebp
push
inc
and
das
push
jns
and
inc
in
sbb
push
or
in
cmc
scas
push
sub
xchg
imulb
xchg
popa
or
sub
or
aad
mov
enter
adc
stos
jl
outsl
jmp
xor
push
in
and
les
mov
push
iret
push
pop
mov
xchg
sbb
xor
push
dec
addr16
cmp
int
cli
popf
out
into
aam
sub
dec
repnz
xchg
xchg
inc
pop
push
xor
sbb
and
jbe
mov
pop
orb
mov
fs
jecxz
lock
sbb
mov
inc
addr16
xchg
insl
push
add
cmp
fldl
jbe
test
cs
push
push
fcomp
out
insl
add
and
cmp
ret
sub
cmp
cltd
dec
popa
shll
in
lahf
mov
inc
cmpsb
ret
data16
sub
lahf
fs
icebp
pop
adc
mov
out
jne
rcrl
pop
test
pop
icebp
insb
add
sbb
xchg
adc
fcmovnb
fcoml
rcr
push
in
imul
outsb
bound
jecxz
in
dec
loope
mov
pop
sbb
decb
fwait
adc
sub
adc
test
mov
sti
fldenv
scas
imul
je
daa
sub
dec
dec
or
or
loopne
imul
ret
lods
mov
cmp
subb
or
sub
andl
lock
jp
clc
insl
xor
add
insb
sub
inc
enter
aaa
fwait
pcmpeqb
ss
cwtl
jo
insl
je
push
xor
sbb
test
mov
sub
icebp
stos
xor
or
xchg
jns
enter
xchg
jne
xchg
dec
daa
ja
dec
cmp
ffree
pushf
jecxz
sub
arpl
incl
fildl
pop
scas
xor
inc
mov
lcall
lret
mov
jl
mov
mov
inc
mov
stos
fsubrs
rcl
sbb
ss
test
sub
sbb
in
cli
xlat
aaa
aad
mov
imul
cmpsb
xor
fimuls
pop
push
lds
or
add
jmp
adc
and
push
movsl
sti
imul
ret
push
xchg
hlt
cmp
stos
out
jo
stos
jp
icebp
xchg
inc
xchg
pusha
hlt
es
or
jl
repz
scas
shlb
xorb
jmp
sub
or
ljmp
xchg
adc
or
test
js
ror
or
arpl
loopne
cltd
cmp
cld
adc
jbe
aas
mov
xor
push
or
sbb
pop
push
mov
inc
rcrb
cmpsl
lcall
jo
stc
jne
shll
push
fs
sub
and
jne
clc
or
test
lahf
cmc
sbb
jg
arpl
int3
int
arpl
mov
aas
mov
popf
repnz
push
test
dec
int
scas
lods
push
cmp
leave
lods
fwait
jae
mov
mov
jp
sub
add
gs
mov
out
sub
mov
push
jae
xor
xchg
movsl
mov
rclb
sbb
movsb
shl
das
fwait
sub
out
or
jo
pop
nop
mov
mov
mov
sbb
fsub
xlat
scas
jae
and
sbb
mov
shlb
outsb
lret
scas
fnsave
shll
in
mov
push
mov
hlt
xor
js
js
sbb
push
pop
outsb
into
shl
sbb
cltd
fwait
dec
clc
cmp
pop
jno
mov
lea
jge
mov
loop
cmp
cltd
pop
cltd
jns
adc
icebp
mov
mov
sbb
loope
jnp
fimull
std
jne
sbb
aad
dec
shrl
push
and
into
pushf
dec
dec
cmpsb
sbb
xchg
pop
test
popf
nop
outsb
test
cmpsl
push
mov
mov
pop
test
jno
push
mov
aaa
jnp
add
es
shlb
int
pop
divb
popa
mov
sbb
inc
jmp
push
mov
icebp
pop
xor
jge
push
mov
adc
dec
es
popa
rol
mov
fbld
dec
fsubrs
push
in
jg
fwait
cld
mov
in
push
je
outsl
loope
lret
inc
jae
jne
lock
shrb
cli
stos
adc
pop
stc
scas
add
popa
cltd
cld
fsubrs
test
clc
mov
xchg
test
lea
add
xor
pop
or
cmp
loop
cmp
mov
mov
rolb
mov
shlb
xchg
xchg
sti
jnp
add
lahf
sub
out
pop
ja
or
in
inc
sub
inc
inc
mov
pop
sti
fadd
aam
push
sub
shlb
daa
movsl
pop
int3
cmpsl
sbb
adc
adc
sbb
xchg
sbb
outsb
mov
xlat
xor
mov
enter
test
cltd
xchg
or
fucomp
pop
clc
inc
sbb
rol
dec
lock
lret
cmc
mov
popa
dec
stc
jne
xor
push
aaa
lahf
cmc
mov
dec
mov
sbb
inc
dec
enter
data16
push
andb
and
shll
addl
addr16
pop
mov
mov
ret
dec
hlt
mov
mov
push
cmp
cld
fidivs
pop
out
mov
jns
cltd
adc
push
sar
xchg
xchg
test
aam
push
mov
stos
adc
cmovns
out
not
arpl
xor
mov
mov
push
xor
negb
in
nop
aam
inc
dec
imul
xlat
cli
adc
push
pinsrw
push
cltd
mov
sbb
data16
fdivs
push
jbe
xchg
push
xchg
jb
sbb
movsb
es
xor
xchg
push
inc
hlt
mov
inc
and
cwtl
and
shlb
inc
adc
jo
test
lahf
call
int
ss
mov
jbe
mov
xchg
movsl
sub
fldt
insb
inc
enter
lods
leave
bound
enter
test
sbb
fwait
pushf
repnz
rorb
xor
add
push
andb
imull
stos
dec
xor
mov
dec
jge
push
mov
inc
das
jnp
push
push
xchg
pop
aam
repz
cmpsb
pop
incb
dec
in
xor
push
pop
jle
mov
test
jmp
addr16
cmp
push
sbb
push
mov
mov
lock
lods
test
aad
mov
aad
rclb
andb
adc
sbb
mov
into
loope
hlt
push
push
adc
and
int
adc
cld
jg
add
xor
pop
mov
and
dec
jecxz
lahf
xor
loope
imul
cmpsb
pop
mull
fistpll
loop
insb
cmp
int
orb
cmp
mov
inc
add
sarl
push
pusha
jmp
iret
jbe
sbb
add
repz
jl
aad
test
lods
push
outsl
into
sub
mov
cltd
sub
mov
stos
cltd
loopne
push
jg
cmp
and
jno
jmp
repz
sbb
cs
mov
pusha
dec
mov
lcall
std
adc
push
out
mov
inc
movsb
jge
out
loope
and
dec
add
repnz
sahf
and
hlt
inc
xchg
jns
sub
mov
insb
or
push
jmp
rcrl
xchg
mov
rcrb
dec
rcr
popl
outsb
mov
cld
adc
iret
xor
push
lahf
test
gs
out
inc
cltd
sbb
in
sahf
jno
sub
cltd
outsl
jne
and
cmpsl
movsl
sub
cmp
pop
sub
or
fsts
pusha
sbb
inc
lea
or
shlb
inc
xchg
sti
jb
clc
jmp
lods
or
movsb
movsb
adcb
out
push
sbb
je
mov
out
jge
aad
lock
call
add
pop
cmp
in
out
test
mov
cs
dec
dec
add
icebp
or
setns
lods
and
fcom
mov
push
out
out
adc
scas
mov
dec
fldenv
jmp
cmp
xchg
in
pop
cwtl
mov
push
mov
ret
push
aaa
inc
fadds
std
jecxz
inc
push
cmp
xchg
sub
cmp
cmp
shlb
imul
xchg
daa
jno
mov
xor
cmpsb
inc
adc
sbb
push
arpl
push
fiadds
cmpsl
jle
aaa
or
inc
ret
test
xchg
or
xchg
mov
loop
mov
xlat
lock
and
jb
test
stos
rcrl
or
mov
sar
add
cmp
mov
mov
add
jp
scas
push
loopne
cmpsb
dec
dec
adc
adc
leave
xor
jno
iret
stos
mov
add
shl
sbb
in
and
out
in
add
xchg
pop
mov
inc
cld
adc
ljmp
sti
add
mov
in
push
stc
lods
cwtl
orl
jmp
dec
inc
dec
ret
push
fbld
and
mov
cmpsb
jb
jo
push
mov
loop
push
movsb
arpl
mov
div
mov
lretw
rcll
mov
mov
mov
jp
lret
jle
fisubl
push
xchg
cmpsl
sbb
cwtl
sub
mov
lahf
jo
ljmp
lret
cmp
sbb
jg
sub
test
inc
neg
jp
push
out
out
cmpsb
add
adc
stos
mov
sbb
insl
fcoms
mov
movups
orl
lret
sahf
rorl
rorl
loop
cmpsl
mov
jl
add
dec
loopne
fldt
add
xchg
adc
push
push
xchg
aad
fsubl
js
inc
pop
inc
sbb
pop
dec
mov
repnz
pop
mov
jle
xchg
imul
dec
inc
leave
add
testb
addb
cmpsb
and
cli
push
sbb
lock
jo
xchg
mov
ss
fsubrs
push
rcrl
lods
ret
shlb
arpl
pop
mov
mov
pusha
dec
out
subb
mov
lret
dec
and
andb
in
xchg
das
push
xor
sbbl
mov
jle
movsl
mov
stc
es
pop
xor
and
icebp
es
mov
insl
movsb
lods
sbbb
in
add
add
in
jl
mov
dec
pop
push
sti
out
dec
add
std
xlat
pop
push
fs
stos
sahf
mov
sbb
mov
pop
xchg
daa
inc
add
sti
scas
jo
add
data16
ficompl
fildll
adc
bound
cmp
insl
push
imul
jmp
jbe
mov
mov
push
arpl
pop
stos
or
sbb
call
xchg
add
push
ficoms
push
fidivrs
pop
lods
repz
cmpsb
mov
aaa
mov
sti
es
fcmovnbe
shrb
pop
dec
jle
inc
aaa
fsts
mov
test
aaa
inc
int3
sub
addr16
lahf
pushf
scas
ret
cmp
mov
xchg
and
sbb
repz
int
inc
loop
mov
std
mov
xor
fidivs
mov
jg
lea
testb
lcall
orb
lods
jmp
imul
xchg
in
movsb
ds
fisubrs
inc
sub
pop
inc
push
cmp
scas
clc
aaa
mov
jl
xor
data16
or
popf
jns
cmp
mov
call
outsl
pusha
push
jle
jge
test
fdivr
and
call
xchg
sub
push
notb
push
add
xor
xchg
out
and
pushf
jecxz
or
xchg
sub
xlat
xor
mov
inc
jle
shrl
adcl
cmp
shll
int
pop
pop
cmp
out
test
xchg
xor
or
in
in
nop
and
cs
test
scas
xor
or
pop
sbb
scas
sub
jns
in
scas
jge
packuswb
loop
movsb
push
lock
sahf
ja
test
lcall
ljmp
out
aaa
mov
sbb
jno
inc
scas
in
ja
pop
sub
cmc
les
les
les
js
adc
mov
xchg
xchg
adc
xchg
cmp
fsts
push
cmpl
dec
jno
cmp
lret
ljmp
jp
inc
and
out
shr
cli
xor
in
je
repz
jge
cmp
inc
shlb
push
pop
mov
and
repnz
pop
mul
xchg
cltd
in
lock
fnstenv
cmp
cltd
adc
int3
sbb
sbb
int3
ljmp
push
daa
stos
add
pop
fidivs
sbb
testb
mov
xor
call
sub
push
xchg
inc
data16
inc
iret
xchg
lock
in
ret
dec
cmp
shlb
sub
mov
js
add
pop
inc
jge
in
cld
mov
push
pop
stc
fimull
outsl
les
imul
cmpsb
call
push
iret
and
mov
aad
out
mov
adcb
imul
or
mov
jnp
cmp
inc
xor
decb
pop
arpl
push
mov
dec
and
or
mov
scas
fldenv
inc
icebp
mov
sbb
mov
hlt
sub
sub
movsl
cmp
ja
push
and
repz
orb
mov
imul
mov
test
xor
repnz
mov
outsb
inc
ss
iret
inc
icebp
test
out
pop
clc
add
mov
inc
imul
sub
scas
das
xor
lcall
xor
fldcw
or
adc
push
cmp
fstpl
cmp
imulb
xchg
cli
mov
idivb
push
push
pop
test
xlat
pop
dec
aas
cs
repnz
mov
inc
in
lcall
test
push
leave
pop
js
ja
mov
push
mov
xchg
mov
mov
mov
out
lods
jo
xchg
mov
and
lods
and
jecxz
imull
ret
cmp
cld
jge
es
inc
xchg
lcall
ret
notl
xlat
or
dec
push
in
aad
and
and
aaa
push
fmull
add
adc
sar
rcll
xor
pop
cmpsb
loope
pop
mov
inc
jp
jge
pop
xchg
add
into
jnp
test
pop
sub
sub
in
data16
xor
ds
loope
out
pop
jp
jnp
push
mov
cmpb
xor
adc
bound
cld
jne
dec
mov
adc
jnp
cmp
cmp
xor
xor
aad
mov
rclb
xor
jb
push
dec
aam
cwtl
xchg
jmp
jbe
inc
out
dec
jge
cmpl
outsb
cmp
and
scas
fs
pop
in
jns
jmp
xor
cld
hlt
stos
daa
push
jecxz
xlat
or
and
jb
mov
imul
push
sub
scas
ficoml
into
xchg
fdivrp
flds
xchg
std
iret
jnp
hlt
rclb
xchg
in
in
cltd
xor
mov
jns
xor
out
imul
rolb
out
jbe
xlat
or
adc
leave
add
repz
or
dec
mov
push
std
aaa
cmpb
sub
fsubrl
add
xor
xor
test
ljmp
mov
imul
cld
enter
dec
lds
push
and
sti
jae
xor
movsl
pop
or
fucom
push
hlt
mov
adc
fsubrl
sbb
sub
out
test
xor
add
jmp
and
sub
mov
inc
int3
out
xchg
cli
aam
mov
daa
cmp
xor
rolb
jae
sub
adcb
jmp
ret
push
inc
aaa
cli
sub
xor
cltd
or
ret
sub
mov
mov
aas
fadds
pop
cmp
popf
lock
sub
fwait
jl
push
push
mov
pop
pop
push
loopne
cmp
cltd
pop
inc
cmp
mov
mov
mov
or
hlt
add
xor
fstpt
and
lret
call
pop
jecxz
and
inc
cmp
popa
add
sbb
or
aad
mov
xor
push
pop
cmpsl
pusha
jnp
pop
and
cmp
pop
sbb
push
cwtl
adcb
inc
repz
stos
jge
ficomps
lds
call
cmc
icebp
lock
hlt
mul
loop
stc
cwtl
inc
xor
int3
into
push
fdivr
xor
cmp
or
in
pop
jo
stos
inc
xor
adc
mov
mov
or
pop
fdivrs
aam
adc
mulb
out
jge
popa
out
cmp
stc
adc
sarb
dec
fildl
dec
add
adc
mov
jmp
inc
xchg
movb
push
aad
shlb
rol
daa
cmp
adc
and
nop
in
sbb
xor
mov
movsb
or
lods
sar
cmpsb
mov
fimuls
lea
ret
cwtl
aam
jno
cmpsl
adc
ljmp
andb
add
gs
dec
pop
or
cmp
pop
sarb
xchg
loope
push
mov
fdivrs
repz
test
sbb
dec
cmpsb
mov
adc
mov
jle
and
sub
fs
scas
xchg
mov
leave
sub
cs
or
xchg
push
sub
lcall
xchg
jns
sahf
andb
aam
mov
and
fildll
cld
test
xchg
outsb
outsl
testl
mov
out
lock
lahf
and
fsubs
rdpmc
scas
push
fcoml
in
movsl
iret
pusha
cmp
push
scas
or
in
and
bound
jne
xor
movb
jg
popa
dec
jp
aaa
ss
mov
inc
filds
or
adc
pop
and
jecxz
inc
push
jecxz
in
outsl
scas
addl
pop
and
add
push
inc
mov
aam
jne
cmp
nop
jle
jb
jle
sbb
cmc
in
addr16
not
int
setg
lds
out
cmp
push
adc
mov
mov
cltd
fstpt
repz
or
xchg
sbb
adcl
addr16
setns
int
imull
and
xchg
int
icebp
mov
cltd
dec
shrl
inc
fistps
arpl
mov
int3
hlt
or
test
jae
jge
cltd
xchg
cmpsl
js
and
adc
gs
push
mov
mov
or
and
adc
pop
push
jg
sahf
fsubrl
push
and
push
mov
xor
cld
outsb
cld
mov
loopne
mov
mov
sub
mov
cltd
arpl
jmp
or
addr16
inc
lods
mov
push
adc
and
addr16
shlb
cwtl
or
or
sbb
mov
dec
in
sarl
xchg
shrb
repz
pop
testb
add
adc
outsl
add
sti
cwtl
xchg
inc
sar
das
xchg
out
push
shlb
bnd
dec
out
out
insl
xlat
mov
test
in
and
dec
cmp
push
hlt
dec
add
mov
aam
loop
iret
sarb
imul
mov
mov
jns
dec
adc
ja
movsb
in
mov
sbb
cmpsb
push
cmc
jg
cmpsl
enter
lods
push
out
aad
cmp
rol
inc
scas
inc
cmp
mov
insb
fadds
dec
mov
iret
fiaddl
ret
inc
or
scas
int3
in
push
inc
and
jmp
xor
jno
inc
mov
repz
push
lods
aam
neg
adc
int3
popa
outsl
ds
pop
cltd
sbb
xchg
mov
add
mov
inc
xor
sbb
insb
lahf
popf
adc
shlb
inc
inc
pusha
mov
mov
push
inc
push
mov
pop
xor
ficoms
imul
dec
cli
adc
cmc
jb
mov
mov
dec
mov
pop
dec
es
in
cltd
rorl
lock
sbb
data16
lds
cs
and
adc
push
jbe
push
jg
jno
mov
xor
out
jle
pop
ucomiss
arpl
aas
mov
xor
add
push
ss
imulb
jne
mov
stos
int
daa
insl
orl
dec
mov
jg
sti
inc
movsl
icebp
inc
sbb
jae
xor
add
lds
xchg
cmp
cmc
mov
loope
cmpsl
int3
jp
sbb
ljmp
popf
push
inc
sbb
jl
rclb
int
hlt
pushf
pop
dec
jg
incb
sahf
mov
mov
or
sbb
adc
and
out
mov
stos
or
pop
jmp
cmp
or
mov
mov
outsb
cmpsb
por
push
lret
mov
jmp
jmp
or
das
cmp
mov
or
or
div
adc
imul
inc
xlat
xor
xchg
pop
repnz
insb
ljmp
aas
sub
and
sarb
jecxz
pushf
and
dec
dec
mov
jnp
pop
dec
rcll
mov
stc
into
sub
pop
gs
nop
mov
mov
ja
sub
add
pop
imulb
aas
in
and
cmp
cmp
push
cwtl
push
mov
clc
lret
addb
xor
jnp
out
imul
or
mov
xor
cmpsl
add
cs
out
cmpsl
pop
mov
add
int
movsl
ficoml
pop
es
jecxz
cmpb
cmc
inc
or
icebp
stos
aaa
int
jnp
adc
icebp
push
cltd
xlat
lock
mov
mov
and
mov
imul
stc
cmc
push
inc
push
inc
pop
mov
mov
fadd
jo
jnp
in
in
popa
jecxz
mov
pop
jle
and
dec
lahf
or
hlt
mov
setbe
mov
xor
fistpl
imul
int3
dec
cmp
nop
inc
xor
xor
cs
bnd
push
das
mov
add
out
in
int
js
sbb
scas
je
jmp
clc
xchg
es
add
add
sub
push
dec
cmp
push
xchg
or
adc
scas
loopne
or
pop
pop
sub
pusha
or
mov
xchg
push
ficoml
push
je
ret
test
push
jae
push
andb
cltd
sarl
scas
fadd
mov
out
ret
hlt
cltd
mov
dec
jp
mov
mov
xor
fstpt
mov
pop
adc
pop
clc
sub
inc
jecxz
cmp
inc
mov
xor
paddb
pop
mov
loop
lock
fisubrl
cli
cmp
dec
xchg
int3
fwait
push
cld
call
ds
xor
xchg
add
mov
aad
inc
inc
cmp
aam
in
jmp
cld
lods
int3
cmp
mov
ret
lret
add
add
les
iret
adc
pop
mov
push
rcrl
imul
push
das
cmp
iret
add
push
and
xor
arpl
popl
mov
push
xchg
fs
loop
insb
movsl
shlb
scas
jl
jle
sub
les
ret
mov
out
shl
push
fstps
push
fdivrs
adc
cld
or
dec
test
enter
adc
jge
filds
pop
sub
mov
xor
pop
in
xchg
jg
adc
stc
dec
adc
repz
or
mulb
push
test
xor
xchg
mov
adc
cltd
leave
sub
sub
and
fs
adc
leave
jmp
or
push
push
dec
mov
push
ret
cmp
adc
lret
cmc
adc
rorl
fwait
mov
repz
shl
sub
pop
ret
push
lcall
mov
mov
fsubrp
leave
out
add
scas
outsl
scas
mov
stos
adc
mov
sub
and
xor
mov
imul
scas
in
lods
stos
cmpsl
cld
jmp
popf
jne
mov
fnstsw
nop
imul
xor
push
sbb
lds
shrl
fsubr
negl
gs
ja
dec
lret
mov
addr16
add
fwait
mov
fldenv
int
orl
push
and
dec
les
insl
xor
pushf
and
aad
divl
lods
and
mov
add
xor
stc
xor
xorl
and
lods
pusha
mov
xchg
dec
jbe
inc
cmp
mov
mov
mov
inc
in
js
mov
out
fucom
leave
xchg
xchg
scas
repz
and
jb
adc
popf
fs
shlb
xchg
aas
out
mov
movsl
adc
adc
mov
push
sub
or
xchg
mov
sbb
mov
sti
jmp
gs
push
jns
aas
mov
into
out
mov
jne
loope
repz
pusha
imul
fisttpll
adc
repz
js
fsubr
cmc
sbb
jne
pop
push
lret
mov
mov
sub
ljmp
iret
xorb
dec
sbb
cli
adc
cmpsb
adc
mov
rcrl
sbb
and
sbbl
pop
shlb
mov
push
test
out
pushl
and
outsl
sub
out
sbb
inc
out
mov
cltd
roll
js
cmpsb
pop
out
fdivrl
das
shll
sub
sub
je
inc
ficoms
jae
outsl
hlt
xor
dec
pop
and
test
cmpsl
lahf
out
or
sub
mov
and
ret
jl
sub
stos
xchg
out
shrb
test
out
cli
scas
ffree
cltd
mov
mov
mov
mov
mov
das
aaa
ret
rclb
or
stos
ljmp
pop
sbb
pop
mov
mov
jnp
imul
sbb
sub
jg
add
jp
xor
mov
nop
dec
dec
test
insl
push
popa
rolb
mov
pop
mov
ja
xor
mov
push
adc
ljmp
repnz
hlt
cld
in
fldenv
pop
repz
pop
xlat
int
xchg
mov
movsb
cmpl
shll
enter
pop
or
lock
and
adc
mov
stos
lahf
xchg
mov
fisubs
sbb
or
call
pop
sub
sbb
movsb
add
inc
push
int
xchg
sub
shrl
jmp
push
mov
cs
jo
and
push
fdivs
and
lret
sub
stos
lock
std
int
push
movsb
and
bound
out
lret
aad
nop
in
lar
mov
pop
fldcw
jns
or
add
cmp
and
or
scas
fdivrl
inc
inc
cmp
popa
jbe
pop
bound
inc
jbe
imul
xor
xor
push
inc
cmpsb
adc
pop
cwtl
sbb
lret
loope
aad
into
xchg
test
lock
cmp
inc
test
repz
xor
shrb
mov
call
pop
nop
repnz
lock
in
dec
test
cmp
sbb
mov
sbb
pop
cmpsb
in
call
daa
icebp
jne
shlb
das
aas
mov
rolb
mov
cli
mov
or
loope
cmpsl
jp
add
ja
mov
mov
mov
jns
lods
and
scas
loopne
mov
out
or
roll
adc
push
sbb
fisttps
sahf
pop
std
sahf
xor
int
negl
xchg
popa
push
int
hlt
in
lea
inc
ret
pop
inc
mov
lahf
icebp
mov
and
mov
lahf
and
outsl
or
mov
mov
imul
imul
shll
xor
rol
sbbl
dec
sahf
into
mov
popa
popa
jl
aas
inc
bswap
mov
stc
mov
cmc
pop
cmp
cwtl
pop
inc
in
addb
xchg
push
ja
mov
and
test
cwtl
inc
xchg
in
dec
out
mov
nop
lea
out
xchg
push
popf
sub
addl
and
sub
add
es
adc
cmpsb
mov
adcl
cmpsl
jp
fisttps
out
cmc
insl
mov
and
nop
out
mov
testl
loopne
mov
push
jno
fwait
loop
sar
pop
fbstp
push
fiadds
xchg
jbe
dec
jnp
fbstp
pop
or
inc
sbb
jnp
arpl
or
aaa
loop
mov
dec
or
lock
push
inc
arpl
daa
cmp
push
pop
insb
fsubl
repnz
xchg
inc
xchg
aam
shl
icebp
outsb
push
mov
popf
xchg
in
loopne
aaa
ficomps
mov
mov
cld
sbbl
jp
repnz
pop
pop
hlt
out
arpl
pop
or
stos
mov
mov
repnz
iret
shl
mov
jae
pop
xor
std
sbb
dec
in
pop
shll
dec
repnz
out
adc
fnstsw
push
xchg
sub
xchg
ffree
out
xor
mov
mov
cmp
lcall
test
jns
mov
cli
cs
jge
mov
sub
mov
test
inc
sub
lret
fidivrl
or
mov
pop
dec
inc
inc
pop
mov
sub
mov
dec
jge
xor
sub
repnz
dec
adc
mov
enter
lods
sbb
test
jmp
push
xchg
out
cmp
adc
jg
mov
std
insb
dec
jecxz
mov
and
jne
pop
imul
lock
test
sbb
lods
sbb
aaa
pop
pushf
fadds
dec
out
push
push
cmp
jns
shrl
inc
add
decb
and
rorl
je
jnp
cmc
repz
add
mov
fisubrl
push
loope
xchg
sub
and
mov
sub
rcr
mov
movsb
popf
leave
jno
arpl
cmpb
adc
cmp
dec
movsb
sub
dec
rcll
pusha
jmp
cmpsl
lods
cmp
cmpsl
std
faddl
addr16
movsb
into
pop
mov
mov
or
add
pusha
ss
inc
sub
test
xor
ret
pop
push
push
hlt
mov
rorl
xlat
loope
hlt
hlt
add
insl
mov
or
hlt
adc
pop
xchg
mov
ljmp
sbb
ljmp
test
mov
insl
movsl
insl
ss
cmpb
mov
fisttps
repz
ja
cmpsb
clc
xchg
popa
jp
das
loopne
jl
rclb
mov
daa
jno
repnz
hlt
outsl
and
jl
repz
or
fstps
jle
xor
lods
fwait
ret
lret
scas
jo
ja
mov
sbb
xchg
push
int3
mov
movsb
fldcw
fnstcw
outsl
lods
ret
add
fistpll
lea
mov
xchg
xlat
xchg
jecxz
push
mov
fadds
loopne
imul
fs
aam
and
jns
xor
fistpll
out
outsl
es
sahf
in
mov
daa
lret
mov
daa
mov
popl
inc
mov
loop
xchg
fisubrs
lock
jbe
test
icebp
inc
sahf
sti
sbbb
pop
mov
adc
sbb
rol
out
clc
xchg
xor
mov
cmp
jne
xor
lret
sti
mov
out
sbbl
jnp
or
in
pop
not
daa
jle
sbb
out
xor
dec
xchg
jecxz
fcomps
xchg
das
mov
fnstsw
mov
inc
fwait
jb
es
pop
sbb
push
into
sub
and
xchg
sahf
pushf
adc
jmp
mov
push
sbb
xlat
repnz
outsl
mov
cmovo
cld
cwtl
and
add
sbb
scas
xor
fwait
cwtl
lock
push
push
lcall
ret
mov
push
dec
repnz
and
aad
loop
ret
mov
add
cmpsl
mov
sbb
push
cld
push
lods
cmp
mov
or
jne
jp
loopne
stc
lret
lods
ja
lcall
or
ret
repz
mov
xchg
sbb
mov
mov
gs
stos
jnp
movsl
add
in
cmp
popf
mov
test
stos
fwait
data16
inc
mov
push
fmuls
call
cmp
fisubl
popa
dec
mov
test
adc
or
outsb
cld
jne
fisubrs
insb
out
sub
xchg
das
xor
push
cmp
sub
adc
loopne
xlat
lcall
arpl
push
cmp
push
xor
mov
addr16
icebp
out
mov
int3
ficomps
xchg
data16
jge
push
mov
sub
pop
js
lds
mov
and
push
cmp
xchg
movsb
out
ds
inc
push
mov
movsl
gs
enter
pop
pop
or
or
xchg
push
out
sub
bound
inc
sub
push
xor
sbb
add
cmp
mov
add
ja
push
pop
ljmp
mov
shlb
out
adc
xor
inc
inc
mov
pop
int
fidivl
cmp
xor
xor
push
xor
fstpt
cmp
test
xchg
adc
dec
int3
push
aam
jl
xchg
adc
popf
mov
jae
push
dec
repz
xchg
test
aaa
out
mov
mov
nop
loopne
cmpb
lret
orl
sub
adc
cmpsl
mov
cmp
add
mov
call
mov
dec
and
sbb
push
insb
push
test
xchg
test
jo
dec
cwtl
dec
roll
out
jbe
sub
xchg
outsl
lahf
daa
lods
das
es
pop
popf
js
or
cmp
fisubrl
popa
and
jl
jno
jns
fs
lea
cmp
cwtl
clc
enter
sbb
std
and
faddl
mov
sub
popa
out
jnp
les
cmc
dec
fwait
xchg
xlat
scas
es
sub
and
xor
jmp
shll
loope
mov
imul
xor
pop
mov
or
data16
insl
in
inc
popf
or
pop
sbb
mov
dec
or
imul
pop
sahf
not
pop
lods
sub
fnstsw
leave
in
and
rcr
shll
jle
out
iret
sbb
push
and
loope
pop
inc
cmpsl
fwait
push
dec
or
cmp
test
xor
and
jmp
inc
or
and
loope
pop
inc
js
pop
pop
out
sbb
push
insl
jmp
mov
xchg
shrb
mov
shl
popf
pop
movsb
loopne
sub
pop
pop
imul
gs
scas
fldenv
ja
gs
lods
mov
sbb
xor
push
add
xchg
sbb
jo
stos
mov
and
jle
jb
sbb
push
ljmp
mov
mov
movsl
sahf
cmp
adc
rcrb
je
or
shrl
sub
mov
jae
cwtl
push
mov
jne
mov
loope
sbb
cmpsl
or
mov
mov
ja
mov
fimull
push
and
imul
dec
add
int3
aad
pop
fdivr
orb
stos
sbbl
arpl
mov
sub
mov
xor
clc
add
cld
jns
add
shlb
adc
inc
mov
inc
cmpsb
xchg
enter
xchg
dec
aad
jle
sub
sbb
inc
jns
subl
mov
in
add
fnsave
stos
inc
mov
dec
ja
imul
add
jbe
or
icebp
insb
out
jmp
in
adc
outsl
fcomps
loop
add
cli
rorl
jnp
push
cli
and
in
jno
lret
dec
mov
int
add
push
inc
adcb
lock
cmp
aaa
pop
popf
push
adc
popf
jno
test
pop
cli
adc
into
ret
adc
nop
addr16
mov
fs
stos
in
lock
adc
popa
jo
jecxz
loopne
mov
lods
inc
jbe
shrl
ja
sbb
jno
repnz
test
fidivl
out
jg
pop
xchg
popf
or
into
xchg
mov
xor
mov
pop
js
mov
adc
jb
scas
shll
ja
in
loop
add
cmpsl
jle
dec
push
enter
inc
sbb
fisttpl
xlat
cmpsl
mov
test
jmp
nop
mov
fimuls
pop
add
cmpsb
call
mov
negl
dec
and
jle
imul
mov
mov
outsl
inc
scas
inc
push
cmc
ss
and
fs
sub
out
sti
into
les
dec
clc
xchg
lock
inc
sahf
imul
sbb
push
jae
xor
and
arpl
jno
je
mov
insl
mov
movsb
sbb
cwtl
inc
push
mov
loope
repz
pop
pop
xor
iret
imul
shl
das
rcrb
xor
cli
lahf
pop
insb
and
shr
dec
addr16
fbld
and
and
or
in
add
pushf
lods
or
add
pop
and
movsb
aad
xchg
and
cmp
push
sbb
int3
movsb
adc
mov
in
fcomip
stos
dec
je
inc
jns
pop
lea
jno
jnp
mov
sub
js
push
xchg
stos
mov
xchg
loope
clc
loopne
sarl
das
orl
rcrl
sbb
decb
adc
or
sub
ja
lds
imul
test
pop
test
adc
ret
arpl
jge
insb
mov
in
mov
rolb
and
pop
int
fwait
les
dec
xchg
add
xor
pop
hlt
dec
mov
adc
xor
out
adc
ret
sub
push
scas
clc
add
dec
leave
or
loopne
iret
mov
xlat
inc
add
fmul
lock
mov
aam
testb
test
fstpt
xchg
sar
jne
loop,pt
push
push
push
adc
inc
sbb
push
clc
cmp
out
mov
aaa
mov
jns
inc
mov
and
dec
sub
out
mov
fisttpll
or
or
push
xchg
out
sbb
xchg
xchg
das
clc
pop
jno
sub
mov
mov
mov
ret
je
push
jno
hlt
sub
arpl
xor
sub
and
out
inc
mov
fsubs
dec
je
cld
mov
cmp
jb
pop
test
add
fnstenv
sub
mov
pop
scas
out
adc
mov
adc
out
scas
add
in
sbb
cwtl
mov
fldt
sbb
xor
in
scas
aaa
xchg
ljmp
aad
sahf
out
mov
push
inc
mov
lret
aam
sub
push
in
xchg
mov
pop
jg
scas
pop
icebp
mov
pusha
ja
cmpsb
push
pop
cs
stos
mov
pop
push
outsl
jp
push
jnp
inc
xor
and
push
daa
mov
fisubl
test
cld
testl
les
decl
lock
in
cmpsb
jmp
in
movsl
and
pop
sbb
push
dec
dec
arpl
jno,pt
sbb
loop
sub
mov
je
ljmp
lock
sub
pop
repz
outsl
sub
or
sbb
or
sub
push
cmp
in
mov
mov
add
outsl
call
cmpxchg
mov
or
cmp
jo
dec
dec
mov
sub
sub
scas
cmc
lea
mov
push
jg
lock
mov
add
add
nop
aas
push
shll
jl
inc
js
push
enter
and
cmp
clc
sbb
jbe
lods
enter
outsl
aam
dec
push
das
pop
leave
lods
pop
fwait
lods
pop
cmc
and
sbb
mov
and
scas
sub
cwtl
popa
ljmp
nop
jecxz
xor
sahf
xor
imul
inc
fcmovnbe
testb
iret
and
aas
pop
and
addr16
xor
mull
pop
or
sub
iret
push
xchg
fistpll
jecxz
out
int
hlt
inc
xlat
add
in
pop
scas
cwtl
pusha
mov
push
notl
jb
or
push
ss
jmp
dec
cld
arpl
xchg
or
and
aad
insl
div
imul
jmp
mov
pop
sar
pop
inc
mov
pop
cld
adc
rcrb
jp
mov
pop
hlt
jg
rcrl
mov
cwtl
jl
shll
pop
dec
adc
ljmp
inc
sbb
dec
push
xchg
int
sub
aad
shll
dec
xor
ret
fwait
call
test
pop
xor
pop
adc
test
test
pushf
inc
push
pop
pop
pop
popa
scas
mov
aaa
lea
push
pop
mov
or
mov
js
ljmp
fstpl
jg
lea
dec
jbe
nop
xchg
mov
mov
clc
cwtl
test
mov
shlb
mov
cmpb
jne
fs
test
jno
scas
and
into
add
scas
std
lahf
cmp
ss
enter
cmpsb
and
jle
das
mov
xor
mov
jmp
addr16
sub
jge
sbb
push
cmp
inc
std
mov
shrl
cmpsb
sbb
out
arpl
fwait
fs
push
cmp
and
lret
mov
mov
loopne
ret
fcomps
pushf
in
lahf
and
popf
nop
ja
pop
xor
imul
movsb
push
imull
test
pop
mov
scas
and
stos
gs
jl
and
mov
bound
or
dec
call
jne
popa
push
cmp
mov
inc
xchg
jnp
inc
pop
jae
push
das
jns
dec
sbb
fildll
mov
and
cld
rcll
pop
xlat
loope
ljmp
adc
iret
loope
addr16
adc
mov
pushf
jl
xor
stos
mov
test
out
jne
inc
add
xchg
mov
gs
fisubl
jmp
mov
out
nop
test
ds
push
and
mov
adc
ds
xor
push
ss
sub
add
in
dec
push
test
mov
hlt
pop
insl
jge
dec
aad
pop
shr
movsl
icebp
jmp
das
fiaddl
mov
scas
mov
adc
bt
pop
pop
stos
enter
fstpt
and
pop
jb
cli
push
cmp
faddl
pushf
aam
push
leave
out
lea
fstps
cld
lds
mov
int3
sub
mov
pop
dec
cli
or
ja
pop
and
fstps
push
ss
clc
mov
call
push
dec
inc
std
push
mov
in
and
aas
mov
and
lods
sub
cli
mov
aas
shll
cmp
subb
mov
push
daa
nop
mov
in
lock
sub
sub
ljmp
mov
dec
cmc
movsl
mov
xor
jle
lcall
push
sti
adc
scas
add
mov
push
lcall
jl
sub
lret
loop
inc
fldt
ja
scas
lcall
jae
mov
stc
fimull
stc
inc
repz
lock
inc
xchg
repz
jno
fcomi
xlat
in
ljmp
enter
fs
ja
or
dec
je,pt
jae
add
and
lret
pusha
and
in
xor
mov
rorl
xor
std
xchg
xor
add
stos
into
xchg
lret
mov
sbb
jmp
adc
hlt
cli
lds
or
insb
mov
fsubrl
test
pop
movsb
jmp
jecxz
xchg
repz
xchg
push
mov
repnz
bound
xor
decb
movsl
int
pop
repnz
mov
addl
in
inc
adc
call
cmpsb
ja
mov
mov
sbbl
inc
dec
xchg
pop
push
jl
sub
in
aam
into
mov
sub
loope
xchg
pop
daa
enter
shll
dec
into
or
insl
jg
outsl
mov
pusha
popf
dec
xor
dec
outsb
or
pop
outsb
xlat
pop
push
cld
push
mov
pop
or
cmp
xchg
pushf
sbb
push
and
dec
out
add
or
push
cmp
xchg
ds
mov
sbb
adc
xchg
repz
aam
xchg
xor
out
or
mov
jg
mov
pop
dec
test
outsl
sub
or
cmp
loopne
adc
test
int
cmc
pop
jo
push
xor
aaa
gs
cmp
inc
jmp
les
jbe
xchg
push
gs
mov
and
ja
xchg
stos
mov
into
ss
test
dec
jl
dec
lods
or
and
mov
xor
and
mov
and
in
add
in
imul
pop
adc
mov
cli
imul
nop
xchg
cmpsb
cltd
push
or
add
jne
or
add
out
mov
jae
jne
inc
and
cmp
fs
xor
xchg
sbb
dec
or
pop
ja
test
test
popa
stc
push
or
shlb
dec
not
mov
dec
daa
mov
aas
fs
cmp
ss
inc
pop
inc
sti
movsl
add
mov
icebp
jno
in
add
push
sbb
rcl
lods
add
jecxz
loop
repnz
ret
pop
insl
sbb
lahf
ljmp
or
mov
ret
pop
sbb
push
lods
test
sbb
mov
xchg
jb
push
xorl
mov
loope
lret
sub
repz
push
insb
leave
repnz
jg
gs
mov
cmc
inc
int
cmp
inc
cmp
hlt
push
mov
adc
in
fildll
sub
inc
sahf
mov
and
or
dec
pop
test
outsl
dec
dec
js
adc
and
fwait
stos
inc
inc
call
mov
sub
pop
sbb
in
mov
hlt
fimull
cmp
xchg
jp
push
out
dec
subb
loopne
jno
scas
sub
inc
mov
cltd
xchg
dec
sub
lcall
and
push
imul
xchg
js
mov
xchg
popf
sub
cmp
dec
lods
sub
ds
aaa
dec
cwtl
mov
cmp
add
jecxz
lret
leave
out
sub
xchg
push
repz
or
out
xor
cmp
ljmp
push
imul
push
sub
call
pusha
sahf
xchg
addr16
cmp
jns
add
sub
or
out
pushf
lcall
mov
lds
movsb
sub
test
mov
int
dec
mov
cwtl
add
fwait
fs
movsb
push
xor
arpl
push
push
mov
push
xchg
or
je
or
xor
insl
mov
leave
mov
mov
dec
sub
sbb
push
ret
sbb
jbe
fldcw
jne
mov
xor
mov
in
or
dec
scas
pop
jp
nop
addl
cmp
orl
data16
pop
adc
imul
jne
push
sbb
inc
and
stos
sub
mov
out
dec
rol
add
call
sbb
ds
add
mov
sti
xor
xchg
mov
das
es
add
push
inc
gs
fildll
jb
adc
and
xchg
push
stc
jae
test
or
pop
inc
sub
push
testl
inc
adc
out
cli
xchg
cmpsl
xorl
jmp
dec
lods
pop
out
xchg
enter
xchg
xlat
push
push
add
jg
jnp
mov
sbb
sbb
pop
mov
insl
xchg
pop
push
sbb
jge
in
dec
stos
push
dec
xchg
aad
mov
bound
xchg
push
ljmp
mov
push
fwait
movsb
clc
jne
out
inc
fbstp
and
pop
pusha
cmp
adc
dec
cli
pop
std
adc
test
je
or
add
xchg
push
rorl
inc
outsb
testl
and
pushf
add
sbb
movsb
adc
je
mov
adc
jne
dec
jb
lret
cmp
pop
adc
fadd
inc
std
cli
subb
cmp
xchg
test
mov
jge
mov
in
push
cltd
mov
xchg
out
pop
push
jmp
adc
cmpl
xor
popl
nop
mov
pop
mov
loope
pop
xor
adc
jge
sbb
lcall
jecxz
sub
into
xor
xor
add
mov
sbb
loope
and
lret
push
data16
xor
cmc
mov
js
sub
lea
dec
and
adc
or
in
rolb
jle
rorb
jg
sub
mov
push
into
push
in
cmp
movsl
sub
subl
mov
test
sub
mov
or
inc
or
imul
mov
cltd
les
pop
aad
sbb
cmpsl
cmp
sub
push
mov
jo
inc
xlat
fnstenv
xchg
in
in
sbb
aad
cmc
shrl
fisttpll
adc
dec
test
and
jle
repz
mov
inc
push
xchg
cmp
testl
push
mov
dec
addr16
mov
jg
mov
popl
pushf
mov
xor
les
add
or
aaa
dec
jno
cmpsb
inc
test
in
std
push
fs
sub
andb
xor
int3
jmp
ror
sbb
jne
sub
adc
stos
mov
xor
not
sbb
ja
mov
mov
outsl
jmp
lods
popa
push
mov
mov
enter
cmp
dec
ja
fiaddl
daa
dec
jmp
xchg
orb
mov
add
daa
out
or
add
pop
jp
xor
dec
inc
icebp
or
ss
inc
dec
ds
vcvtps2dq
cmp
imul
ds
pusha
push
mov
and
xor
mov
ret
or
mov
subl
aaa
cmc
stos
aam
test
push
lea
js
xlat
fdivp
push
out
jle
clc
stc
lods
pushf
fs
pusha
mov
mov
pop
and
orb
sahf
xchg
xchg
push
test
lcall
jae
aad
aaa
outsb
movsb
cld
rcll
cmp
or
in
inc
mov
adc
je
xor
jp
cmp
cmpsl
iret
mov
movsl
dec
jnp
add
fbld
pop
loope
repnz
testl
lock
bound
jno
mov
inc
xchg
stos
pop
xchg
lret
mov
adc
pop
mov
movsl
jecxz
sub
es
mov
imul
test
sbb
sbb
jnp
call
stos
call
xchg
pop
subl
mov
sub
adc
pushf
test
lods
stos
push
xchg
aas
xchg
xchg
dec
jle
push
outsb
sahf
jne
and
aas
pop
add
leave
mov
lock
imul
push
inc
jns
aas
pop
ret
and
loop
mov
dec
clc
gs
aas
jmp
rorb
cmc
lret
cli
mov
test
js
rorb
ret
icebp
push
mov
fsubl
cmpsb
movsb
outsb
adc
dec
jno
loop
pop
mov
daa
mov
push
int3
scas
cwtl
stos
inc
rdmsr
test
pushf
lret
dec
mov
dec
jmp
cmp
arpl
mov
insl
ret
icebp
fistps
daa
sbb
aaa
adc
mov
aam
mov
es
push
mov
into
or
add
pop
dec
arpl
sbbl
pop
and
cmpsb
push
dec
les
filds
adc
test
jno
xor
test
jns
mov
ror
fists
faddl
fistps
aad
insl
mov
dec
xchg
scas
dec
pop
mov
adc
repnz
mov
rorb
mov
outsb
mov
or
push
test
xor
les
les
lcall
jmp
mull
pop
cmp
dec
mov
mov
in
bound
xchg
iret
mov
aaa
in
loope
cmpb
inc
mov
idivl
sbb
xchg
sahf
fstl
repz
mov
outsb
cmp
mov
xor
and
xor
outsb
mov
or
mov
aad
jb
push
hlt
loopne
and
pop
fstl
scas
lfs
sti
push
mov
and
out
xchg
gs
imul
or
enter
inc
sub
ret
mov
jo
sti
dec
sub
addl
fmuls
dec
cmp
aam
out
cmpsl
mov
in
push
push
pushl
mov
adc
adc
nop
insl
out
xchg
or
fdiv
imul
mov
mov
movsb
fists
mov
adc
adcb
add
jbe
xchg
or
pop
xor
outsb
jmp
jmp
movsb
cmp
mov
test
cmp
xchg
inc
add
lcall
and
or
cmp
or
mov
mov
push
adc
divl
pop
adc
outsl
cltd
sbbb
arpl
fcom
nop
in
repz
cmpsb
ljmp
cltd
lea
push
sub
fcoml
test
mov
popa
sbb
pop
push
jl
aad
jb
movsb
das
cmpsl
cmc
insb
xchg
jmp
cmp
shll
mov
and
jnp
in
hlt
cmp
jg
in
shl
jge
rcll
cmp
and
subl
repz
sub
shlb
cmc
sbb
or
movsb
fst
add
enter
jno
sub
sti
int
mov
push
sub
lds
sub
lahf
add
sbb
xchg
xchg
movb
daa
mulb
in
adcl
andb
xchg
pop
arpl
ror
jo
sbb
jns
imul
movsb
xor
call
cs
pop
cwtl
add
mov
xlat
inc
cmpsb
push
sub
stos
xchg
nop
fsubrp
add
lds
push
lret
andl
mov
cmp
mov
mov
sahf
sub
pop
add
dec
mov
lcall
mov
sbb
shll
jb
cltd
xlat
mov
lods
mov
lret
mov
std
dec
lods
roll
clc
jecxz
ja
cmp
cmpsb
aad
psubusw
fistpll
fcomps
xchg
jno
push
sbb
jb
fs
lock
inc
adc
xor
xor
popa
jmp
mov
scas
fisubrl
add
insb
loope
test
mov
jg
addr16
or
pop
sbb
cli
cmc
sub
dec
add
adc
dec
or
cltd
push
jp
into
lock
push
js
push
mov
les
int
shr
mov
jg
mov
or
imul
sub
addr16
cwtl
mov
add
inc
jmp
xchg
mov
mov
jle
sub
ss
shlb
cmp
xorl
mov
xchg
jae
gs
add
push
xchg
jb
scas
pusha
adc
sbb
out
scas
lock
mov
ret
out
stc
inc
pop
aad
inc
pop
loopne
dec
jp
cmp
mov
xor
stos
inc
jb
mov
sub
push
xor
call
jge
loopne
or
xlat
and
mov
imul
bound
gs
shll
cli
les
and
add
xchg
adc
and
adc
cmc
out
jns
jecxz
popf
mov
mov
mov
mov
mov
push
and
mov
in
inc
fistps
push
fcom
iret
or
call
push
ja
aaa
outsl
pop
xchg
dec
int3
mov
inc
push
stos
outsl
xor
add
xchg
icebp
mov
mov
adc
pop
dec
repnz
sahf
popf
lods
ja
movsb
into
fmull
inc
jns
fimull
mov
xor
es
dec
inc
xor
jne
add
aas
mov
les
sbb
xchg
pop
cmp
pop
add
xor
or
fcmovu
add
xor
je
js
lret
ja
xor
ja
in
adc
cmpl
loop
fwait
mov
daa
pusha
aaa
mov
mov
shll
mov
xchg
push
push
mov
push
aas
or
and
add
int3
pushf
insb
insl
mov
andb
fwait
jns
inc
in
aaa
outsl
jge
cld
popa
mov
or
sub
cmp
fsubl
outsb
and
ret
repz
andl
test
fcmovnb
daa
mov
fiaddl
aaa
push
popf
adc
xor
pop
out
sbb
pop
mov
jl
lods
rolb
enter
cmp
jg
clc
aas
out
sahf
adc
in
dec
scas
adc
stos
rorl
or
in
addr16
std
jns
xlat
enter
sub
lods
mov
movsb
xchg
mov
jbe
imul
xor
fstpl
or
subl
adc
in
sbbl
insb
pop
pop
aam
mov
ret
xchg
dec
cwtl
adc
rolb
cli
sti
dec
out
scas
dec
sbbl
dec
add
push
cwtl
fdivrl
add
addb
jbe
pop
je
fildl
xor
mov
movsb
mov
jbe
or
dec
outsl
cwtl
cli
lcall
popf
movsb
xchg
test
outsl
sub
mov
leave
testb
adc
xlat
jnp
push
sub
leave
cmp
lcall
pop
adc
mov
mov
xor
out
ja
jnp
sub
fs
pop
shlb
inc
cli
mov
push
sub
pop
sub
or
pop
fldenv
pop
ja
sbb
out
dec
fists
mov
out
sahf
into
in
dec
pop
hlt
mov
jmp
insl
daa
mov
addr16
loopne
fisubs
test
mov
mov
jl,pn
jno
lcall
cmpl
push
xchg
adc
cwtl
cmpsl
inc
mov
test
lock
dec
test
inc
pop
jbe
adc
push
adc
negb
test
scas
dec
mov
imul
mov
jo
cmp
pop
insl
mov
cmpsl
xchg
or
push
jne
push
lods
or
shlb
push
in
outsb
bound
repnz
pop
sti
ret
push
mov
jecxz
jg
sbb
xlat
ja
das
lret
fldt
dec
mov
dec
and
imul
pop
in
mov
das
push
mul
loop
xchg
stos
or
es
mov
js
lods
push
imul
jo
and
aas
jo
call
jecxz
in
mov
adcb
jmp
mov
add
shlb
inc
es
jl
mov
add
xchg
xchg
cltd
dec
cld
push
iret
jno
and
cs
ss
sub
xchg
and
js
out
rorl
mov
mov
adc
add
in
shl
jo
push
pop
mov
jb
popa
fsubrl
inc
mov
imull
or
jecxz
jo
test
mov
mov
pop
xor
aad
fmul
push
clc
div
push
inc
and
xorl
call
inc
sbb
xor
mov
lahf
lock
insl
int
in
lahf
rclb
pop
pushf
cmp
cmpsb
xchg
cwtl
sti
cli
add
lret
sub
out
test
cmp
mov
mov
mov
rolb
kxnorw
and
push
push
les
icebp
sbb
shrb
adc
dec
jb
inc
sti
sub
push
push
push
jbe
fstl
push
leave
pop
push
mov
loop
pushf
arpl
mov
add
push
lea
dec
cwtl
bound
clc
jbe
insb
xor
clc
ds
jmp
fstpl
imulb
mov
push
cmp
loopne
lock
and
out
pop
aaa
cwtl
lcall
shlb
hlt
imul
dec
es
push
cmp
jg
inc
xor
loopne
mov
xchg
inc
mov
pop
mov
int
push
sbb
pop
mov
cmp
push
aam
pop
dec
lret
roll
stc
cmpsb
xor
lret
jae
addl
mov
in
into
xor
bound
rol
inc
add
je
cmp
and
or
and
ja
cmp
dec
adc
xlat
push
pusha
sub
sbb
fldt
add
and
in
push
repz
adc
push
push
inc
hlt
xchg
test
xchg
mov
sbb
cltd
push
xlat
xchg
data16
mov
stos
aam
insb
repnz
sahf
sub
xor
std
lds
arpl
in
fdivrl
negb
aas
adc
decb
fs
adc
pop
push
std
pop
lahf
lds
mov
mov
clc
lods
jae
sarb
ret
ljmp
jb
in
rcl
lea
xor
jle
dec
add
out
lods
lea
cmpsb
movsl
pop
and
sbb
mov
mov
int
pop
outsb
pop
xlat
sbb
test
movsb
cmp
jge
daa
addb
inc
ss
and
filds
loopne
xchg
mov
sbb
pop
addl
dec
sub
pop
mov
aad
rorl
loopne
inc
test
xchg
mov
aam
adc
pop
push
add
bound
and
mov
and
dec
pop
in
jecxz
sbb
daa
sbb
jno
jnp
mov
std
cmpxchg
jns
fisubl
sahf
add
out
xchg
and
out
cs
jmp
inc
dec
push
add
add
cmp
ljmp
jne
push
push
pop
lods
jmp
popf
rorb
xor
sbb
push
mull
and
mov
int3
std
xchg
fisttps
pop
cmpb
lahf
scas
mov
daa
aad
xchg
add
mov
inc
arpl
jmp
imul
and
ret
or
inc
xchg
test
hlt
mov
and
push
pop
insb
jno
push
and
aas
inc
mov
hlt
and
ss
testl
pop
mov
mov
push
addb
fwait
cmp
xor
cmp
mov
sbb
lahf
or
pop
das
lret
cmpl
adc
mov
adc
mov
fiaddl
gs
push
dec
shrb
xlat
jle
shll
outsb
fidivl
sub
das
and
sub
test
mov
cmc
das
cld
fldt
add
jo
mov
test
mov
mov
mov
xchg
mov
lret
cwtl
mov
andl
ficoms
nop
jo
jnp
push
push
cwtl
cmc
into
loop
inc
pop
movsb
push
dec
inc
xor
push
jecxz
push
mov
mov
push
movsl
xor
jno
push
push
loope
mov
fs
xor
mov
xchg
ja
add
lods
movq
lret
loope
push
cmp
xorb
movsb
out
icebp
mov
mov
xchg
data16
faddl
and
sbb
stos
push
jp
inc
hlt
aad
shrb
or
or
pop
mov
sub
dec
repz
pop
lahf
jb
int
lea
test
jl
mov
or
mov
pop
cmpsl
leave
push
lock
mov
jg
int
or
adc
je
lret
stos
dec
adc
push
inc
shll
nop
fwait
jnp
nop
in
out
and
subb
or
sub
in
mov
or
ret
sbb
xor
sub
lret
cmp
push
cwtl
je
push
aaa
int3
pop
inc
jnp
mov
sti
sub
loopne
add
push
mov
rorb
jne
das
pop
xchg
dec
dec
add
roll
xchg
jmp
stos
divl
imul
mov
mov
mov
mov
arpl
jno
cmc
loop
rorl
es
shr
mov
adc
std
cmp
lahf
pushf
out
push
adc
jmp
ds
test
cmp
sbb
adcb
add
fisubs
inc
out
cs
push
sbb
jmp
pop
xchg
add
call
sub
out
jl
cmp
dec
addb
leave
cld
pop
test
or
shl
in
push
inc
mov
add
jbe
fdivrp
jb
ljmp
mov
andl
mov
pop
repnz
adc
shl
fcmovbe
enter
scas
mov
arpl
mov
push
add
fistpl
adc
inc
pop
enter
inc
mov
xchg
repz
lock
xchg
adc
es
mov
shl
repz
jecxz
push
mov
rcrb
aam
ficoms
cmc
in
add
ret
or
loop
mov
inc
inc
aad
cwtl
adc
dec
sub
mov
cwtl
push
push
dec
inc
fmull
movsb
cmp
lret
sbb
xor
jge
xor
lret
sbb
stos
inc
xor
out
scas
sahf
mov
rorb
fwait
mov
outsl
ret
adcb
adcb
mov
adc
ror
and
xor
test
fidivrs
push
imul
pop
sub
scas
cs
jl
push
lods
adc
hlt
mov
xor
jp
lcall
ds
fcmovb
out
xchg
dec
rclb
sbb
bound
nop
fmull
jle
int3
jo
fcoml
adc
je
mov
push
out
dec
mov
sub
mov
sti
cmp
test
add
lds
cmp
push
jae
xchg
aad
test
jge
into
insl
cmpsl
stos
cmpsb
movsb
pusha
pop
inc
jne
lret
lcall
pushf
rolb
mov
pop
and
xchg
out
jno
test
or
mov
imulb
pop
arpl
pushf
jno
jmp
adc
inc
out
add
stc
inc
mov
int3
cmpsb
mov
push
sub
dec
push
popa
add
bound
cmp
sub
cwtl
popf
lcall
daa
push
in
push
cmp
mov
cmp
push
std
ss
lds
push
jb
or
cld
pop
ret
mov
inc
pop
out
int
test
add
lods
fstpt
ret
mov
dec
inc
cmp
scas
gs
push
xchg
movsb
stos
int
rcll
cmpsl
fisttpl
xchg
lcall
andb
mov
mov
lods
lea
fimull
cmp
scas
jg
pavgw
scas
xor
sbb
fimull
mov
lret
sub
dec
lahf
dec
fsubrl
fmul
dec
mov
pushf
nop
test
loopne
inc
mov
inc
addr16
add
arpl
jle
out
sahf
dec
shlb
in
fs
sub
stc
sbb
inc
outsl
xor
mov
mov
into
out
lcall
xchg
sbb
dec
ljmp
sarb
loop
jo
sbb
push
inc
cmp
imul
jnp
jbe
jno
popa
ret
mov
shll
sbb
fcomps
clc
out
mov
push
inc
cli
push
jb
cmpsl
pop
ret
add
xchg
sbb
adc
xor
repnz
dec
loopne,pt
cmp
imul
movsl
mov
sbb
and
push
push
jp
add
cs
repz
in
movsl
xor
add
andb
dec
loope
add
dec
mov
cmp
fwait
mov
pop
push
sub
iret
inc
jge
mov
mov
sbb
enter
outsb
xchg
jb
lods
pop
test
add
imul
movsb
fmull
mov
mov
add
and
js
lea
outsl
sbb
aaa
push
pushf
enter
aaa
jnp
sahf
cmp
xor
aas
xchg
insb
repnz
dec
imul
cmp
mov
repnz
pmaxub
xlat
loop
adc
mov
or
inc
cmp
push
lods
sbb
addl
mov
mov
dec
ds
mov
je
or
cmpl
xor
mov
and
mov
xchg
mov
outsb
pop
push
cmp
push
push
movsl
fcoml
cltd
shl
lcall
push
xor
mov
sbb
sahf
xor
ja
cmpsl
icebp
in
test
jle
daa
into
jmp
hlt
push
adc
add
mov
lret
push
mov
mov
jno
cwtl
mov
pop
jns
rcll
lds
dec
sbb
es
push
and
in
or
or
adc
pushl
adc
dec
jl
lahf
jb
jge
and
and
imul
push
imul
jbe
std
jae
pushf
dec
dec
rcrb
ret
ljmp
addr16
mov
add
lds
xlat
cs
jmp
popa
outsb
mov
test
mov
or
test
xor
test
add
ret
aad
xchg
insl
adc
ljmp
insl
xchg
pushf
les
lret
sbb
out
pop
imul
shrl
rcl
mov
addl
inc
aaa
pop
inc
jns
cwtl
test
loop
cmp
mov
add
enter
jmp
jno
rcrl
enter
pop
or
push
loope
pusha
mov
jp
push
insl
imul
test
pop
sub
push
sub
jb
loop
fists
mov
into
sbb
xor
lret
mov
inc
insl
cmp
jbe
mov
movsl
mov
sti
test
xchg
mov
adc
mov
or
imul
xchg
cmpsl
std
mov
push
and
lret
aam
cmp
clc
loopne
in
jecxz
and
xchg
and
sarb
inc
add
outsb
addr16
mov
push
ds
push
es
sbb
mov
fs
dec
fdivp
xchg
test
xchg
xor
mov
enter
cltd
push
repz
mov
sahf
loopne
mov
shlb
test
lds
sbb
xchg
mov
cli
fistps
jl
sub
add
adc
adc
mov
cs
push
lea
js
pop
sub
mov
gs
pop
testb
aas
mov
ret
mov
add
cmp
imul
fwait
loopne
jmp
pop
pop
pushf
out
cmp
call
add
xchg
nop
sbb
ljmp
lods
cmp
hlt
cmpsb
lret
mov
ret
in
and
mov
cmp
into
mov
ret
push
mov
nop
jo
addr16
sub
arpl
pop
sub
loopne
mov
cltd
lock
mov
int
popf
movsb
dec
pminub
push
ss
adc
xor
pop
adc
rclb
scas
fnsave
or
and
loope
cmc
push
aad
jge
into
add
adc
pop
sar
outsb
or
sub
mov
push
decb
xor
sub
inc
push
hlt
movsb
pop
lods
mov
jne
xchg
jle
popf
cmpb
lahf
add
jecxz
int
dec
sbb
jbe
mov
jnp
ret
pop
ja
push
aad
sti
adc
fsts
add
test
adc
dec
cmp
jmp
out
shll
xchg
xchg
add
sti
add
stos
adc
div
push
push
adc
mov
inc
aam
push
int
pop
push
sbb
add
sbb
fdivrl
fsub
push
inc
es
cmp
push
xor
push
movsl
out
test
sub
cmp
pop
cmp
mov
movsl
pop
xlat
cmp
aaa
imul
push
pop
sub
js
sub
sub
pop
outsb
ja
aad
in
lock
mov
add
xor
and
dec
fisubrs
cmp
mov
add
pop
cmp
add
fwait
imul
out
dec
cwtl
imul
fbld
dec
loope
or
je
fnsave
jmp
mov
lock
mov
je
rclb
out
movsb
fwait
gs
xchg
xor
pop
inc
movsb
scas
adc
and
pop
movsl
pop
addr16
rol
xor
mov
push
jl
imul
loopne
cmp
adc
repnz
inc
aad
call
aam
mov
js
inc
aaa
in
mov
mov
shl
mov
cmp
push
test
xchg
adc
ficompl
mov
lock
jb
arpl
push
jns
pop
xlat
add
mov
and
push
jns
arpl
test
add
in
cld
sub
mov
pushf
int
and
les
inc
sub
ret
or
test
pop
fwait
sbbb
and
nop
adc
fwait
popa
ja
inc
or
movsl
ja
sbb
fsubrs
mov
fists
pushl
push
sbb
xor
stos
sbb
add
adc
fwait
inc
push
hlt
and
sbb
pop
loopne
sbb
arpl
or
in
arpl
imul
std
mov
dec
pop
mov
icebp
xor
mov
imul
cmp
loop
int3
push
sub
fisubrs
and
lcall
cmp
aaa
loopne
dec
xchg
mov
mov
adc
add
inc
xor
fsubrl
mov
jne
jle
and
call
rclb
push
in
addr16
xchg
out
push
pushf
xor
or
adc
sbb
out
icebp
add
sbb
mov
clc
loopne
push
adc
adc
xchg
cmp
dec
mov
cmp
sub
pop
sbbb
pop
cwtl
popf
mov
bound
mov
sahf
movsb
mov
mov
inc
divl
xchg
adcb
cmpsb
pusha
or
mov
or
subb
fstpl
sub
jno
mov
dec
dec
sahf
andb
push
mov
jl
sbb
mov
lahf
in
stc
dec
add
mov
loope
test
xchg
jmp
and
shl
std
sbb
xlat
std
dec
aas
dec
add
push
aad
mov
push
adc
sub
cmp
push
shl
xchg
repnz
pop
daa
mov
inc
and
jno
cltd
adc
and
push
mov
cmpsb
sub
mov
or
aas
hlt
out
bnd
sbb
scas
das
pop
and
out
sbb
cmp
mov
decl
and
mov
push
out
hlt
pop
pushf
xlat
mov
xor
fwait
roll
xchg
adc
sbb
dec
xchg
ret
insl
jno
sbb
ljmp
push
clc
popf
shl
ret
and
pop
out
push
int3
ljmp
dec
repz
add
adc
or
shll
sbb
push
loop
mov
in
push
sub
imul
inc
shr
addl
cld
adc
ds
jecxz
stos
data16
pop
mov
pop
push
fisubrl
adc
in
xchg
out
hlt
cli
sbb
add
and
jne
dec
in
mov
push
xor
cli
mov
or
lret
adc
pop
sti
ret
xor
mov
in
adc
cwtl
or
mov
jb
pop
inc
or
vrcpss
inc
call
push
fwait
or
mov
adc
mov
ret
xor
cmpsl
mov
jge
mov
jecxz
pop
pop
sub
in
sarb
adc
mov
ljmp
imul
pop
adc
sub
mov
sbb
xchg
iret
out
xchg
inc
test
ja
in
and
sti
inc
jmp
in
dec
adc
rcr
or
pop
pop
fs
jmp
les
xchg
fsub
push
jle
stos
push
loopne
pop
jl
cli
mov
lds
or
dec
loopne
jbe
mov
inc
fninit
loope
or
or
mov
push
out
xchg
enter
into
fsubl
mov
lcall
addr16
pop
scas
or
leave
mov
out
xor
jbe
xlat
pop
cmpsl
sbb
adc
add
xchg
mov
lds
adc
inc
in
dec
mov
cmpsb
cs
ljmp
adc
mov
mov
xor
divb
fadds
imul
daa
daa
imul
sub
sbb
mov
xchg
aam
mov
xchg
dec
dec
push
push
ret
mov
sub
cmc
cmp
pop
xchg
call
in
cli
jne
push
lods
std
cld
add
push
push
sbb
lock
mov
cmp
push
sbb
xchg
arpl
test
sub
pop
cli
mov
loop
or
stos
lds
push
mov
push
or
mov
shl
jb
jns
subb
roll
xchg
push
loope
out
es
mov
mov
inc
loop
pop
dec
adc
or
enter
insb
pop
daa
test
sbb
push
jecxz
faddp
loope
add
ret
xor
jbe
mov
or
jl
or
rcpps
outsl
lods
lea
adc
or
scas
and
in
and
mov
fildll
imul
iret
or
xor
sbb
call
xchg
std
ret
pop
ljmp
pop
shrb
adc
mov
mov
repnz
dec
jecxz
inc
insb
cld
in
jl
jmp
sub
sbb
jecxz
push
sbb
push
into
cmpsl
push
jns
out
jb
add
jmp
mov
and
xlat
incb
lods
mov
into
pop
jg
inc
push
mov
cmp
sbb
insl
outsl
mov
lds
in
xchg
inc
in
xor
xchg
dec
mov
cmp
xor
sub
sub
cwtl
mov
add
test
xchg
cmp
pushf
mov
pushf
sub
sub
jne
and
push
cmp
inc
add
push
enter
pop
icebp
stc
or
sbb
lea
mov
ljmp
ret
push
cmp
or
aam
ret
in
ljmp
mov
fwait
dec
add
xor
inc
into
push
sub
pandn
mov
mov
cmp
stos
insl
dec
ret
popl
iret
or
adc
xchg
insb
std
jecxz
push
insl
and
xchg
pop
mov
jae,pt
inc
outsb
jns
lcall
sub
or
mov
adc
pusha
xchg
jae
cmp
sti
xlat
jbe
iret
mov
outsb
push
ret
test
pop
loopne
add
push
jns
inc
push
push
cmc
xor
pslld
cs
bound
loope
sub
jno
or
mov
bound
inc
and
test
jmp
mov
jae
cs
sbbl
iret
and
hlt
adc
and
xor
fcompl
pop
mov
jmp
mov
icebp
xor
and
add
or
dec
add
ror
inc
lock
push
imul
call
cld
inc
cmpsb
aam
mov
mov
mov
loopne
pop
jo
ret
xlat
sbb
sub
mov
in
mov
jle
lds
fdivl
mov
sti
mov
sbb
sub
ficomps
or
jp
and
loop
inc
lret
imulb
cmp
popf
lods
lock
in
dec
fdivrl
lret
xchg
out
stos
dec
fistl
inc
movsl
jge
jb
lds
jl
pop
add
insb
and
cmp
sahf
and
adc
and
stc
stos
pop
add
in
imul
jle
mov
sub
pop
mov
sub
or
leave
ror
outsb
out
leave
clc
adc
pop
adc
int
js
jne
aaa
xchg
add
int3
popa
les
push
adcb
mov
daa
roll
mov
dec
ss
sbb
scas
xchg
inc
ljmp
sub
dec
insl
xchg
cld
or
or
cmp
dec
pushf
xchg
and
test
sub
cmpsl
sub
or
dec
mov
mov
pop
in
arpl
cmp
addr16
mov
or
push
into
faddl
add
add
outsb
imul
pop
data16
cmc
js
into
or
mov
nop
movsl
xchg
gs
jl
xchg
jg
ret
aaa
xchg
lret
dec
xorb
test
and
pushf
dec
ljmp
push
imul
sub
pusha
cmpsb
sub
loopne
stc
fcmovnb
jne
in
fcmove
ret
fbstp
test
pop
es
jg,pt
push
lock
xor
jecxz
push
or
jns
sub
fisttps
add
sub
jns
xor
cmp
loopne
push
mov
into
aam
je
fisttpll
jne
mov
pop
and
cmp
sub
xchg
mov
xor
and
pop
fimull
hlt
ljmp
icebp
adc
aas
inc
jecxz
lds
and
and
clc
or
std
dec
cmc
insl
pusha
and
and
pop
es
dec
pop
fwait
test
pop
jmp
decb
repz
dec
jno
dec
lds
jecxz
cmpsl
push
inc
mov
or
hlt
adc
push
and
sbb
pop
call
shrl
push
stos
test
rcrb
iret
les
mov
idivl
sbb
sub
push
imul
or
lock
inc
subl
mov
jl
cmp
mov
vphaddbd
in
push
push
pop
and
jb
or
lcall
or
js
jae
adc
xchg
inc
in
sub
xchg
mov
leave
cmp
jb
test
adc
int3
mov
and
out
cltd
or
outsb
inc
inc
imul
test
jbe
loop
inc
sarl
push
fucom
pop
cmp
sbb
lret
leave
mov
dec
sarb
orb
fcmovnb
push
lods
dec
add
add
enter
outsb
loopne
push
pop
sti
dec
repnz
pushf
inc
test
jae
jl
mov
mov
push
call
ljmp
out
lret
out
jecxz
pop
dec
pusha
pop
xchg
xchg
fstps
imul
cli
lock
adc
xor
xchg
dec
pusha
sub
mov
or
arpl
ret
xchg
bound
pop
cwtl
jecxz
mulb
mov
cmp
call
add
fsts
xlat
jecxz
in
ja
lods
xchg
lcall
cmp
pop
jnp
pusha
cli
pop
cmp
lods
sahf
clc
enter
sub
cmp
aaa
push
fdivrl
test
and
and
and
addl
lock
mov
leave
adc
aas
pop
push
andl
lret
idiv
push
lcall
xchg
push
mov
pop
xor
test
es
movsb
push
repnz
lcall
cmp
xorl
les
adc
xchg
dec
sbb
mov
repnz
stc
mov
xchg
mov
mov
jno
and
out
adc
inc
stos
sbb
test
subl
push
mov
cmp
nop
outsl
dec
add
dec
in
cmp
adc
std
push
call
mov
gs
add
jge
roll
paddw
push
cmp
leave
adc
and
mov
insl
mov
pop
or
test
push
pop
popf
pop
clc
test
inc
lock
in
inc
lea
push
rclb
mov
mov
or
jnp
jb
mov
cmp
adc
xor
mov
imul
mov
call
xchg
frstor
mov
test
jnp
add
nop
cwtl
jb
xrelease
data16
repnz
outsl
add
filds
jae
cmp
cmp
push
mov
add
aam
aam
fsubrs
ds
and
pop
inc
add
push
sub
int3
popf
mov
mov
lahf
sti
hlt
fcoms
orl
adc
negb
mov
adc
mov
nop
inc
dec
aam
testl
lret
cltd
movsl
insl
cmp
mov
or
add
push
mov
sub
fs
andb
aad
and
bnd
mov
outsb
test
and
inc
sub
rcll
frstor
addr16
popf
cwtl
push
xchg
mov
rorl
mov
ja
enter
push
pop
jle
cld
inc
xor
pop
pop
push
insb
push
jno
pop
mov
mov
arpl
push
cmc
add
lock
fstpt
cmp
adc
mov
and
cwtl
ljmp
cwtl
sti
add
mov
mov
mov
rcrb
outsb
test
mov
xor
mov
inc
scas
push
sub
icebp
mov
cmc
rorl
xchg
mov
dec
jp
add
int
movsl
iret
mov
sub
ret
in
mov
ljmp
aam
stos
sub
cwtl
xchg
lds
mov
push
mov
xchg
call
in
adc
fiadds
sub
push
mov
imulb
mov
sbb
adc
rcl
idivl
cmp
shll
mov
sahf
or
into
mov
mov
mov
xor
data16
or
mov
loop
es
inc
cld
dec
mov
std
mov
xor
sub
shlb
cs
sub
cld
cmp
add
mov
jb
pop
popf
xchg
and
adc
mov
jo
in
xchg
lret
jmp
ret
mov
hlt
sbb
subb
or
icebp
push
pushl
pop
and
ret
sbb
ss
mov
rcll
fcmove
mov
and
sti
idivl
outsb
fadds
sub
xor
movsl
dec
or
sahf
sti
test
fidivs
cli
push
insb
jge
push
mov
jae
leave
arpl
aam
iret
push
jecxz
lea
sbb
xchg
imul
pop
lea
arpl
or
jae
dec
popf
popa
sarb
daa
push
jle
xchg
sbb
mov
jecxz
or
mov
mov
sub
push
clc
popf
push
jecxz
jno
xchg
into
mov
testl
cmc
xlat
add
adc
xsavec
test
cmpsl
jmp
enter
lret
pop
mov
sub
rorb
pop
inc
outsl
jno
pop
cmp
cmp
and
add
xchg
jmp
stos
mov
stos
mov
jge
adc
push
jae
fiadds
repz
xor
imull
xchg
mov
sbb
pushf
mov
mov
ret
lock
xchg
sub
dec
push
jo
std
mov
and
jns
push
test
pop
out
mov
mov
mov
lahf
loop
dec
push
cmp
dec
sub
adc
es
add
mov
pop
add
mov
push
sti
adc
or
iret
rorl
fst
pop
push
xchg
lret
pushf
xchg
in
or
pusha
sub
sbb
and
adc
push
xchg
or
xor
push
pop
fs
rol
or
xchg
mov
xchg
push
pop
outsb
mov
cmc
ret
xchg
push
scas
lock
pop
sub
push
test
jnp
xor
lods
adc
in
mov
aas
add
pop
cmpsb
jnp
mov
mov
aaa
ds
dec
push
xor
jae
rorl
add
or
mov
lret
pop
stos
into
mov
mov
stc
lret
in
mov
mov
je
dec
lret
xchg
mov
stos
enter
adc
lcall
mov
in
dec
xchg
cwtl
and
xlat
iret
enter
pushf
lret
sub
scas
push
add
pop
mov
pop
jae
fadd
xorb
jnp
addb
sub
cmp
sub
lret
arpl
pop
cmpsl
test
mov
outsl
sbb
data16
cwtl
loopne
sahf
lret
addl
adc
ss
jnp
jno
int3
dec
xchg
pop
dec
adc
std
push
lea
imul
push
mov
mov
mov
mov
jo
mov
aas
mov
movsb
mov
pop
clc
stc
jns
cmpsb
and
dec
gs
aam
sub
pop
jb
add
adc
lds
cmp
in
xor
test
aad
and
and
lock
sbb
and
and
das
xchg
adc
jne
inc
addr16
add
mov
enter
mov
loop
xchg
stos
push
pop
add
jl
out
aad
push
lcall
jmp
sub
push
ja
ljmp
mov
in
xchg
pushf
sbb
mov
pushf
inc
scas
aam
pop
sub
pop
not
or
mov
js
sbb
inc
shufps
loopne
std
lock
push
mov
sub
pop
jo
shlb
inc
addr16
lahf
mov
or
int3
adc
xchg
and
add
jecxz
push
jno
jecxz
int
adc
xor
push
mov
mov
dec
test
mov
lea
cmpsb
lods
js
addr16
mov
addl
and
cmp
outsb
nop
lock
mov
loop
xor
insb
rorb
mov
mov
aad
shrl
pop
cmp
loope
or
sub
pop
dec
sub
sbb
rolb
lret
ss
jmp
inc
pusha
xor
push
push
jl
hlt
mov
aas
shlb
les
or
sub
add
jnp
mov
adc
stc
and
push
call
add
fimuls
cld
add
sahf
pop
lds
ja
mov
and
aam
push
iret
pop
mov
shlb
out
xchg
mov
sub
sbb
sub
pop
aam
fcmove
cmp
aas
jnp
pop
adc
lret
es
mov
ficompl
rcr
test
dec
pop
sub
dec
inc
xchg
clc
aas
mov
repnz
stc
push
pop
push
aaa
aad
lock
cmp
gs
pop
pop
cwtl
or
pop
pop
test
arpl
mov
mov
inc
sub
repnz
test
mov
or
enter
jnp
mov
jns
jmp
sub
clc
mov
mov
mov
add
sbb
jl
in
mov
lods
ss
inc
pop
pusha
lret
push
sub
mov
mov
outsb
jns,pn
cmp
push
mov
add
rol
xlat
jge
into
and
push
fstps
lea
add
push
popa
sahf
fstpl
jnp
adc
popf
mov
fldlg2
or
scas
mov
das
cmp
orb
mov
das
test
mov
imul
mov
sub
fdivrp
adc
sarb
or
int3
xchg
mov
push
pop
fldz
xchg
xchg
xchg
sbb
pop
dec
pop
imul
out
fsub
ret
mov
add
stos
fwait
mov
rclb
stc
jge
xlat
loop
lret
mov
push
sti
scas
in
push
fwait
and
xor
daa
xchg
ret
push
leave
mov
rorl
arpl
pop
mov
push
lods
cmpsl
test
dec
sbb
jp
cmp
addb
lret
pop
mov
pop
cmp
outsl
cmp
adc
adcl
loop
fcom
out
call
add
xor
cmp
cmpsb
adc
int3
pop
pop
dec
insl
mov
pushl
pop
push
sbb
pop
push
and
outsl
out
in
sbb
inc
loop
mov
hlt
icebp
pop
icebp
shl
gs
mov
lock
jmp
in
push
push
test
add
inc
mov
pop
lods
or
mov
imul
addr16
out
sub
sub
mov
xor
pop
bound
inc
fs
lahf
mov
inc
daa
cmp
or
mov
std
dec
adc
inc
cli
pop
and
mov
sub
cmpsl
shll
push
push
rcrl
pop
push
cmc
sbb
fnsave
adc
into
mov
mov
jmp
jmp
clts
sbb
out
sbb
pushf
sub
lock
adc
cmp
aad
sub
ljmp
xchg
mov
lods
inc
rol
inc
xlat
aam
inc
mov
je
imul
adc
mov
push
and
jne
lcall
jnp
lahf
stos
push
xor
jns
inc
add
repz
push
movsb
fwait
jo
mov
cmp
les
outsl
xchg
xchg
fiaddl
rcll
adc
or
mov
cmp
sahf
out
cmp
repz
lahf
cmp
adc
popf
jne
adc
jbe
lods
sbb
aad
xlat
in
inc
addr16
mov
ljmp
mov
dec
sbb
leave
cmpsb
jb
inc
xor
repz
mov
test
rol
mov
push
sbb
cmpsl
arpl
cmp
lcall
xchg
sbbb
arpl
push
out
sbb
cmp
fsubrp
movsb
int
push
lahf
pop
test
xor
dec
sub
push
dec
sarb
aad
mov
mov
push
arpl
xchg
cld
flds
push
repnz
fdivrl
sbb
lods
xor
mov
pushf
ret
lcall
add
ljmp
mov
js
mov
fisubs
lcall
cmpb
stos
out
les
jb
outsb
mov
iret
gs
jb
or
lahf
push
or
mov
imul
sbb
pop
mov
sub
lret
addr16
mov
test
pop
repz
pop
pop
push
insb
movlps
in
and
popa
gs
dec
xchg
sti
rcll
jae
ret
jnp
jecxz
lahf
dec
jmp
push
ja
jns
pop
cs
push
lea
cmpsb
sub
mov
loopne
jns
mov
ds
stc
xor
jb
lods
mov
mov
shlb
popf
mov
mov
add
dec
fldt
fldenv
test
cltd
jb
adc
xor
pop
sub
jp
les
sbb
lds
shll
xchg
sub
sub
mov
jmp
mov
int
push
mov
or
jecxz
xor
pop
push
mov
xchg
rcl
test
stos
mov
push
push
dec
ror
mov
lahf
jns
xor
je
insb
bound
mov
mov
mov
mov
pop
push
mov
cmp
sti
xchg
ds
gs
or
adc
pop
leave
jmp
lret
daa
daa
mov
xlat
fstl
sbb
sub
bound
ss
ds
mov
enter
jbe
mov
adc
stos
push
gs
int3
xchg
stos
in
addr16
adc
aam
cmp
rcr
mov
inc
mov
daa
lret
jne
mov
jle
je
mov
mov
push
aad
xor
icebp
lret
and
xchg
jnp
mov
adc
fs
xor
imul
scas
xchg
adc
leave
fs
jmp
jle
xor
xchg
adc
mov
or
iret
stos
pop
mov
sub
inc
mov
push
dec
mov
out
xchg
lahf
dec
push
mov
andb
add
sub
jg
and
sbb
xchg
push
sbb
lods
in
adc
xchg
sahf
push
negl
clc
cmp
xor
notb
inc
rcrl
iret
push
sub
sbb
push
mov
push
sahf
inc
icebp
pop
cs
das
xor
cmpsl
push
cmp
stos
inc
and
add
adc
adcb
in
dec
jo
addb
les
cmp
jle
mov
enter
imul
jg
inc
pop
jns
dec
adc
sub
imul
sbb
call
dec
push
pop
sbb
cmpsl
aam
mov
push
mov
ljmp
loope
lret
mov
xor
mov
stos
fldcw
cmp
aas
icebp
scas
test
call
push
inc
cmp
inc
mov
mov
aad
cmp
jl
xchg
out
push
or
jmp
jge
imul
mov
adc
inc
fs
cltd
mov
icebp
iret
repnz
xor
addb
popa
int
and
mov
push
js
mov
push
fwait
call
test
push
cmpsl
add
inc
imul
add
daa
jno
sub
call
shl
decl
lret
mov
mov
jl
sub
ror
pop
jle
cmp
jno
aad
adc
mov
add
bound
pop
mov
dec
adc
je
push
es
pop
jle
xchg
pushf
xor
pop
in
and
lcall
dec
fdivl
fwait
jb
sub
cli
adc
sti
or
jno
or
jno
xchg
scas
inc
clc
cmpsl
adc
insb
scas
js
test
sbb
scas
ffreep
cwtl
jnp
mov
mov
sbbb
imul
xor
xchg
fnstenv
lret
sub
ss
lods
stos
icebp
decb
pop
mov
mov
dec
test
aaa
clc
leave
push
enter
pop
neg
adc
out
in
or
roll
push
aas
and
movsl
das
arpl
adc
leave
ret
cmpb
test
and
add
jp
iret
push
cltd
jle
push
pop
push
dec
jle
fiadds
ljmp
out
push
push
xorl
dec
mov
pusha
lcall
pop
mov
cmp
xchg
pop
je
clc
or
and
dec
adc
sbb
mov
ljmp
jne
das
out
hlt
add
popa
in
lock
sbb
mov
cmp
dec
adc
arpl
sbb
sbb
adc
sahf
jns
sbb
xor
dec
adc
scas
fimull
in
pop
in
jmp
sbb
sub
adc
dec
pop
clc
sti
fildl
inc
xor
je
and
inc
push
jne
insl
sbb
addr16
add
cmc
cltd
jle
popf
jge
mov
ds
out
xchg
in
loope
aas
test
aaa
pop
das
adc
sub
sub
pop
testl
call
push
add
mov
or
repnz
pop
and
dec
push
call
repz
mov
adc
xor
mov
mov
push
xlat
xchg
lds
or
or
lcall
cli
clc
in
xlat
in
fildll
jp
shlb
lds
inc
and
into
das
and
inc
daa
test
push
iret
xchg
into
pop
movsb
xchg
lods
and
cmp
xlat
idivb
popa
mov
out
fiaddl
jmp
adc
flds
xorl
lcall
not
jo
lods
or
jnp
inc
daa
jmp
scas
enter
sbb
and
push
xchg
mov
lods
mov
and
in
dec
ret
out
fdivs
movsl
and
ret
jns
loope
push
int3
cmp
test
mov
mov
push
add
inc
cmpsb
hlt
popf
cli
lret
aas
nop
orl
mov
fistl
xor
dec
movsl
stos
cli
xchg
stos
ljmp
lods
mov
push
jecxz
mov
movsl
cld
add
sbb
nop
inc
cmp
popf
mov
xor
in
ds
test
sbb
or
cltd
jo
mov
das
fisubrs
xchg
outsl
outsb
push
mov
mov
push
pop
mov
daa
cs
xor
lahf
icebp
pop
outsl
cld
push
popf
mov
mov
imul
sti
xchg
pop
fldt
dec
and
and
stos
jecxz
mov
fs
add
xor
cmp
and
jne
jl
push
add
adc
xchg
sti
loopne
inc
aad
push
or
lcall
push
lret
loope
lret
jmp
popa
mov
dec
push
out
cmpsb
sbb
dec
add
data16
pop
testb
mov
inc
sub
push
int
cmpsb
scas
imul
mov
dec
adc
xchg
cmpsb
decb
adc
fidivl
jecxz
sub
mov
mov
das
lds
add
xchg
addr16
xchg
insl
adc
aas
test
mov
jns
jnp
xchg
mov
xchg
test
fisubl
sub
inc
inc
cs
aaa
rcll
mov
test
xchg
stos
xchg
scas
jecxz
xchg
cmc
test
in
push
jbe
arpl
mov
jb
lods
lcall
push
out
jae
adc
add
mov
sarb
adc
sti
gs
push
cmp
xor
in
xchg
dec
jecxz
icebp
mov
cmp
mov
push
je
fildll
mov
cld
cmpsb
push
es
jl
xchg
lret
cli
inc
mov
into
and
repnz
sbb
lret
xchg
xchg
lret
call
mov
sbb
mov
daa
or
adc
fbstp
mov
mov
xchg
adc
jb
das
push
cltd
lret
dec
jecxz
das
xor
insl
out
daa
push
enter
mov
in
gs
fstpl
fcompl
out
add
icebp
sbb
push
xor
repz
out
int
imul
jbe
adc
mov
jecxz
dec
sbb
sbb
gs
fistl
add
ret
adc
addr16
ficompl
js
push
inc
xor
sub
out
nopl
jmp
lds
lret
fisttps
fs
fmull
pop
test
cmpsl
lahf
and
inc
inc
sub
sti
jmp
lock
mov
xor
add
repnz
mov
push
repnz
call
xchg
mov
and
je
sub
push
rcrl
mov
fs
cmpsb
fstl
mov
xchg
mov
sub
mov
stos
outsb
es
xchg
lds
inc
mov
cmpsl
xor
mov
jle
cltd
test
shrb
ss
repz
call
stos
pop
add
pop
xchg
dec
xchg
arpl
xchg
popa
out
idivl
mov
add
cmp
xor
pusha
jl
je
mov
adc
dec
push
pop
cmp
cmp
in
and
cmp
dec
xchg
jg
rcrb
popa
loope
jns
jmp
push
roll
mov
stos
cmp
sub
sbb
pop
adc
repnz
sbb
xchg
test
push
cli
xchg
movsl
cwtl
lret
aam
cmpsl
frstor
push
insb
fbstp
enter
sbbl
jg
lods
insb
dec
push
nop
movsb
fdivrl
sarb
jmp
pop
and
jae
xchg
xchg
repnz
mov
ljmp
cmp
imul
xor
int
cmp
and
mov
dec
test
loopne
inc
xchg
imul
dec
out
push
jg
pop
test
test
pop
pop
lret
jg
adc
mov
out
adcb
cmp
les
add
fdiv
hlt
lahf
iret
aaa
mov
xchg
mov
jge
mov
lcall
or
ss
cmp
scas
or
inc
pop
xchg
ljmp
lods
sbb
and
dec
repz
insb
or
rcll
xchg
int
sahf
or
sub
arpl
sahf
and
rcrb
xor
xchg
shlb
sub
adc
bound
dec
std
add
mov
movsl
sti
sahf
shl
popa
fdivs
iret
add
cs
cld
out
bound
push
dec
mov
push
addr16
je
sbb
roll
es
shrl
jbe
das
cltd
dec
ds
insl
sti
lods
xchg
pop
xchg
pushf
and
mov
adc
cmp
stos
outsb
jbe
scas
mov
jo
fidivl
push
test
out
in
dec
idivl
mov
mov
rolb
mov
repz
sti
pushf
movsb
roll
popf
pop
je
mov
rcrb
lds
nop
movsl
imul
cmp
movsl
test
xor
xchg
cmp
or
es
mov
insl
jno
mov
loope
and
xchg
inc
bswap
add
ficoml
stc
jmp
inc
jo
jo
pop
fdivl
mov
xor
mov
cmp
fdivrs
fwait
sbb
icebp
mov
push
sbb
mov
dec
pop
sub
jmp
fdivl
jae
xor
add
inc
repnz
repz
jno
mov
clc
jae
mov
sbbl
mov
lret
pop
stos
lea
or
sub
add
sub
mov
pop
in
imulb
nop
push
ss
loop
mov
dec
xor
and
cmpsl
jnp
xor
ss
fdivl
test
sub
mul
jno
or
or
jp
xor
mov
mov
or
inc
jl
push
xchg
sarl
mov
xchg
dec
imul
mov
in
js
mov
xor
mov
mov
popa
mov
cltd
mov
pop
or
xchg
ret
call
and
insb
mov
scas
jno
xchg
roll
lds
js
je
adc
loope
out
cmp
out
orl
sbb
add
out
inc
push
daa
cli
mov
xor
or
fsubrs
data16
mov
mov
fsubp
xchg
imul
mov
jne
mov
add
loope
ret
jle
addb
cld
mov
cmpsl
std
inc
mov
jp
lret
ret
insl
popa
or
pop
out
push
pop
out
sbb
push
mov
je
pop
xchg
pop
mov
aas
or
jns
push
mov
icebp
mov
push
jae
fidivrl
pop
clc
daa
insb
ja
lret
mov
pop
ljmp
push
das
shlb
stos
cwtl
clc
test
cmc
fwait
das
or
inc
in
mov
mov
shlb
push
pusha
ja
daa
lret
sbb
pop
cmp
outsb
and
adc
inc
pop
stos
cmp
pop
dec
add
xchg
fwait
jns
leave
push
pushf
outsb
pop
dec
jl
sbb
movsb
adc
xchg
repnz
lods
fistpll
mov
sbb
or
bound
iret
and
aam
pop
xchg
insb
mov
mov
xor
repz
mov
push
xor
stos
cli
in
shlb
sub
loopne
push
xchg
jl
enter
dec
insl
inc
adc
aaa
imul
loope
cmp
int3
mov
scas
xchg
cmpsb
or
ret
jno
aaa
jb
cs
xor
in
mov
xchg
out
xor
cmpl
and
das
pop
inc
mov
jns
mov
js
add
push
adc
pushf
adc
ds
inc
into
adc
outsb
sub
mov
mov
jbe
adc
push
xchg
aam
push
sub
lahf
pop
stos
jge
dec
daa
loopne
xchg
xchg
mov
arpl
sub
push
xor
popa
sar
push
mov
xchg
cmpsb
mov
into
jo
add
pop
jg
rcr
mov
lret
push
sub
mov
mov
lret
cmp
xor
or
fcoml
xorb
jnp
xor
dec
jo
xor
loop
jg
sbb
inc
or
sbb
and
or
ljmp
outsb
or
fldcw
mov
inc
mov
lock
std
gs
pushf
mov
dec
inc
imul
or
xchg
mov
rcrb
fxch
or
jp
enter
leave
xor
repz
jge
mov
mov
xor
enter
inc
aas
adc
loop
sub
jp
mov
mov
adc
mov
cmp
add
pop
orl
lea
or
push
cwtl
cmp
or
xlat
sub
adc
icebp
sbb
xor
hlt
sbb
or
adc
xchg
pop
and
pop
cwtl
lea
push
hlt
inc
xchg
popl
nop
sbb
test
cli
ret
mov
clc
pop
pop
sti
aad
lods
fiaddl
das
sbb
push
dec
test
mov
mov
mov
add
adc
das
xchg
adc
imul
mov
bound
jne
fwait
scas
fsubrs
out
clc
std
subl
pushf
adc
sbb
push
xchg
pop
jmp
les
or
pushf
push
clc
pop
loope
hlt
mov
repz
aas
lret
fisubl
pop
sbb
push
clc
loopne
cmc
jb
inc
push
aam
dec
pusha
icebp
sub
bound
and
mov
jp
inc
stos
aas
mov
adc
aad
pushf
repz
or
fwait
clc
bound
jb
adc
aad
xchg
stos
out
xchg
fcoml
in
pop
ret
roll
sub
vmovshdup
int
cmp
xor
pop
mov
jne
push
shl
loop
aad
loopne
fcmovnb
push
das
cwtl
inc
loope
dec
out
shlb
cmp
or
repz
and
pop
in
imulb
lret
into
xchg
jge
test
mov
pop
dec
js
mov
imul
push
addr16
jge
pop
fstpt
adc
pop
cmp
movsb
fdivrs
test
data16
cmpsl
loope
push
xchg
sub
cmp
int3
adc
sub
xchg
cmp
fists
cld
lods
das
test
lahf
fisttps
xor
pusha
in
push
pop
add
mov
and
sub
out
mov
lea
add
jne,pt
and
jb
out
into
xor
loope
xchg
std
in
mov
notl
pop
les
pop
les
sbb
pop
cwtl
sub
sub
mov
xchg
xor
fisttps
inc
nop
push
mov
int
mov
shrl
les
in
mov
xchg
xor
lret
out
scas
fwait
xchg
sarl
mov
lret
daa
jo
sbb
dec
sarl
imul
sbb
push
les
in
push
cmp
data16
sub
xor
pusha
sbb
mov
pushf
nop
inc
ss
pop
stc
fidivs
xorb
int3
int3
mov
int
shrl
icebp
mov
sub
leave
fisubrs
push
add
jns
leave
sbb
es
add
hlt
xor
js
pop
fstps
adc
push
adc
lret
dec
add
shl
xor
jmp
mov
pop
sbb
shll
movsb
dec
push
cli
inc
fwait
dec
dec
push
lods
or
shrb
jecxz
cmp
pop
test
and
mov
adc
add
xchg
fstpt
pop
xchg
mov
loop
xor
cld
sub
popf
cmovne
mov
loope
adc
pop
push
mov
jmp
dec
jp
sub
sahf
cmc
fmul
push
add
int
rol
push
or
aam
test
jg
inc
mov
sbb
aaa
int
daa
lret
jp
fs
sub
mov
push
or
mov
xchg
adcl
nop
mov
das
out
outsl
mov
fs
loopne
xor
push
adc
and
inc
cli
out
dec
or
stc
cld
mov
mov
stos
les
fsubs
je
dec
dec
sbb
inc
lret
cmp
mov
fucomp
push
cmc
lods
mov
std
test
mov
hlt
into
lock
jo
and
test
or
out
add
fimuls
sbb
lcall
mov
mov
mov
dec
or
jmp
pop
or
imul
mov
int
mov
inc
mov
adc
divb
sbb
mov
loop
enter
pop
push
cmp
inc
dec
mov
movsl
cmpsl
pop
xlat
insl
cwtl
dec
test
push
mov
and
dec
xchg
test
adc
sub
xchg
jg
out
fmulp
mov
aad
sti
sub
scas
iret
insl
in
lret
or
in
cmp
test
sbb
lea
pop
mov
add
inc
orl
sbb
scas
fisttps
lret
or
pop
push
pop
mov
arpl
or
mov
sbb
mov
push
nop
imul
add
aam
inc
dec
fldcw
xchg
rcrl
pop
cltd
xor
arpl
inc
lahf
xor
push
and
pop
dec
sbb
mov
es
movl
lock
and
or
pop
hlt
fstp
daa
dec
mov
adc
shlb
push
dec
cs
nop
lods
pop
mov
lods
mov
dec
shll
adc
xchg
mov
outsb
lock
js
int3
inc
hlt
insb
stos
hlt
push
pop
nop
dec
andb
sub
nop
add
sub
sbb
adc
adc
pop
inc
xor
subl
clc
les
das
scas
lret
pop
loopne
xchg
push
cvtps2pi
in
push
mov
data16
test
mov
je
jg
lcall
clc
push
adc
cmp
out
sti
cmp
mov
lods
pop
subb
pop
mov
mov
jmp
mov
inc
cmc
in
std
xchg
push
xchg
pop
lcall
push
sbb
pop
add
out
mov
stc
jecxz
stos
or
iret
and
lods
jne
out
shll
inc
sarl
bound
lock
enter
sbb
nop
jns
pop
imul
push
xchg
fimull
lahf
es
jns
pop
jb
jbe
jne
dec
shll
rolb
xchg
pop
pop
ficoms
scas
mov
leave
pop
mov
or
popf
das
stos
outsb
mov
js
inc
arpl
xchg
add
in
mov
imul
ret
or
scas
mov
push
dec
dec
stos
xchg
verw
dec
dec
repnz
add
jle
push
mov
cmp
aaa
add
sbb
in
movl
cmp
cltd
pop
movsl
outsb
aam
mov
jp
add
sbb
and
and
cmpb
push
push
jge
pushf
aam
cwtl
mov
jb
in
cmpsb
fwait
ror
testb
inc
outsl
xchg
lret
xchg
sqrtps
sub
xchg
data16
pop
sub
cmpsl
ljmp
add
stos
es
xor
mov
aad
and
xor
stos
and
cmp
cmpsl
adc
shrb
fwait
cwtl
pop
pop
movsb
fsubr
cwtl
loope
adc
jmp
lods
adc
sbb
mov
or
cwtl
inc
daa
adc
insl
jmp
sub
cmp
dec
popf
jo
insb
dec
cmpsl
push
hlt
jecxz
cmpsl
test
test
xchg
adc
add
lods
sub
push
es
outsb
mov
sub
jo
fbstp
stc
or
xchg
and
jns
add
movsl
mov
mov
bound
add
add
push
xor
cmp
add
andb
outsb
aas
fmul
testl
shlb
push
insb
jge
and
lret
dec
cltd
subl
arpl
mov
data16
mov
sbb
flds
movsb
cmp
push
jp
cld
jp
push
ror
xchg
adc
jae
mov
das
imul
or
mov
cmp
mov
pusha
aam
xor
int
push
xor
outsl
mov
adc
pop
inc
sub
loopne
inc
popf
sti
insl
inc
sahf
bound
mov
and
cmp
mov
shlb
push
sbb
sub
xor
adc
mov
xlat
or
xchg
push
pop
orb
stos
cltd
adc
cmpsl
aad
or
das
jno
dec
pop
in
lret
fs
pop
imul
clc
pusha
xchg
and
xor
push
idiv
sub
into
mov
imul
sbb
aad
push
fnstcw
jbe
fidivrs
fwait
cmp
dec
jo
into
call
mov
lahf
jp
fmull
pop
mov
jae
cmp
icebp
clc
add
inc
ja
pop
xor
shrb
or
jae
data16
aaa
stos
ss
adc
cs
lock
cli
jmp
clc
pop
test
gs
pop
jle
aad
insb
icebp
inc
or
sub
push
push
inc
jae
sub
movsb
jg
sbb
jno
negb
je
xorl
ss
dec
xor
pop
jno
movsl
jbe
push
dec
pop
lea
enter
addb
rolb
enter
in
xor
in
sub
inc
fiaddl
mov
lods
addr16
out
aas
out
inc
leave
push
pop
mov
xor
push
dec
xchg
out
pop
in
out
xchg
and
in
cmp
and
mov
add
mov
and
out
in
out
jne
pusha
lea
lcall
icebp
data16
lret
sub
iret
inc
cmpl
dec
cwtl
add
movsl
xor
sbb
ds
insl
cmc
inc
stos
add
mov
insb
xor
mov
jo
sbb
pop
xchg
add
fisttps
and
int3
outsb
xchg
out
aas
pusha
popa
xor
mov
add
in
rcrl
sub
shlb
pop
hlt
dec
dec
outsl
test
sbb
stc
xchg
lock
loope
fidivrs
cltd
jns
int3
shlb
test
push
adc
sbb
or
mov
mov
jns
jno
aam
les
sbb
add
rolb
pop
pop
test
add
dec
add
sahf
ds
adc
aas
add
aad
into
test
add
fcoms
stc
out
aas
xlat
adcl
lcall
lods
mov
push
xchg
sub
loop
in
xor
mov
add
stos
xor
notb
inc
mov
jle
std
mov
push
sub
repnz
sbb
sti
cmp
pushf
test
in
divb
icebp
dec
xchg
test
jl
outsl
ficoml
sbb
add
repnz
imul
fisubrl
pop
push
jp
xchg
fcompl
cld
mov
ss
cwtl
test
fmuls
jns
lock
xchg
cmp
xor
in
xor
subl
mov
xlat
int
cmp
add
jle
add
daa
je
mull
cwtl
shlb
inc
mov
pop
mov
ss
xorb
movsl
xor
movsb
call
adc
sbb
push
ds
lret
ret
or
sub
cmp
mov
icebp
jo
xchg
dec
out
dec
mov
add
in
pop
sbb
ret
xchg
sbb
mov
push
mov
pop
fsubrl
xlat
sbb
cmp
jg
push
inc
xchg
cmp
xor
ss
mov
mov
mov
sub
cmc
incl
iret
mov
fimull
sub
je
dec
inc
lods
jle
inc
push
kandw
fnstcw
pop
pop
addr16
xchg
dec
xchg
es
add
pop
pop
mov
mov
pop
fisubs
dec
les
imul
int
pop
clc
movsl
addr16
pop
inc
mov
dec
push
imul
dec
push
in
inc
jns
jns
mov
sbb
pop
clc
out
sbb
popa
fdivs
pshufw
ds
das
std
aad
ss
cmpb
mov
sub
push
add
sbb
pusha
mov
xor
js
sub
jns
in
test
or
mov
xor
mov
imul
test
iret
inc
shlb
fnstenv
cmp
push
ret
nop
push
imul
push
cltd
xchg
aaa
inc
cmc
adc
ret
jle
or
dec
inc
mov
sar
lods
std
mov
and
inc
lods
push
mov
cmp
cmp
xchg
cmp
std
lds
adc
cmpsl
in
cld
push
cmp
cli
pop
fistps
loop
lock
and
add
add
cmp
psraw
cltd
js
adc
cmpsl
or
cld
pop
mov
mov
and
lea
dec
and
daa
xor
in
std
cltd
int3
pop
inc
adc
mov
sub
daa
xor
sbb
push
ljmp
repz
and
mov
aaa
adc
fimuls
test
addr16
outsb
ja
dec
fs
in
cmp
jb
dec
mov
push
sahf
repz
sbb
mov
cmp
adc
cmpb
push
shrl
cmc
dec
nop
shlb
add
jecxz
xchg
add
ljmp
es
std
xor
mull
cmc
jnp
mov
pop
or
out
lret
repz
push
addr16
test
data16
ss
pusha
pop
cmp
sahf
lods
ss
pop
shlb
pop
dec
pusha
or
idivl
pop
lahf
xlat
enter
or
nop
jge
insl
pop
das
shrb
rclb
pop
add
inc
xor
jecxz
mov
fisubrs
pop
xor
push
adc
mov
adc
lds
xchg
add
jp
adc
jecxz
cltd
push
popa
mov
leave
mov
sbb
stos
lahf
insb
shrb
xchg
testb
jp
movsl
mov
in
adc
in
mov
sub
daa
lahf
insl
inc
sbb
cmp
test
mov
pop
rcrl
fs
adc
outsb
shl
cmp
rolb
push
inc
jo
xor
add
jle
loop
adc
in
fldt
cmpsl
aad
sbb
cld
pop
cli
popl
cmc
lods
xor
or
cmp
sub
and
mov
sub
mov
mov
es
fsubrs
shrl
sbb
add
and
pop
movsb
stc
xlat
inc
nop
loopne
xchg
fldcw
loopne
xchg
dec
int3
lahf
lcall
fcomps
mov
mov
clc
inc
cmpsl
aas
inc
daa
gs
jo
cmp
mov
fldl
imul
and
test
and
pop
or
in
pushf
and
sbb
popa
push
sub
and
mov
xorb
repz
lods
xlat
dec
mov
xchg
push
in
sub
clc
and
popf
mov
int
jno
ret
and
xor
inc
jns
xor
fsts
sbb
add
lcall
xor
fdivr
pop
sub
add
inc
scas
in
inc
ret
xor
and
outsb
lods
jge
or
mov
test
add
push
in
mov
xor
push
push
sahf
sbb
ret
popf
test
dec
repz
adc
or
push
sub
or
cmp
jnp
xchg
push
or
cmp
add
sub
or
jno
movsl
jg
add
nop
mov
in
test
shlb
aam
mov
loopne
loop
fnstsw
adc
std
jle
dec
jecxz
cmpsl
shrb
ds
push
dec
stos
outsl
cld
int3
xchg
xchg
mov
push
xchg
pushl
scas
js
jl
cltd
pop
sub
add
xor
fisubl
push
xchg
stc
pop
push
fcoml
mov
ds
negb
loopne
out
addb
sub
adc
sub
enter
cmp
mov
pop
or
fisttpll
sub
xor
fmul
jecxz
setns
in
pop
mov
aad
and
ret
dec
icebp
pop
push
testl
out
jnp
cmp
jnp
push
xchg
jnp
repz
cs
mov
or
sub
adc
jmp
sub
test
pop
mov
inc
pop
pop
xlat
mov
into
or
or
sub
int3
loope
jg
movsl
mov
fldenv
push
mulb
aad
outsb
lret
and
cltd
pop
pop
movsl
imul
mov
addr16
pop
callw
imul
fisttpl
ret
movsb
pop
pop
test
dec
jg,pt
shlb
jecxz
mov
xlat
movsl
pop
pop
cs
push
aam
or
data16
dec
and
aad
lret
addr16
mov
ja
repz
pop
lods
push
push
sub
je
dec
arpl
mov
repnz
push
push
push
add
mov
hlt
adc
insl
mov
push
push
mov
outsl
dec
xor
add
sbb
push
xorb
pushf
ljmp
lcall
jl
outsl
lock
or
cmp
mov
jmp
in
inc
mov
inc
cmp
jl
sub
cwtl
in
lock
mov
cs
scas
ljmp
outsb
int
and
adc
sbb
scas
addr16
jg
sbb
adc
push
movsl
jp
in
sbb
adc
out
std
into
lods
je
ja
mov
cmp
mov
adc
cmc
or
adc
into
out
mov
xor
adcb
inc
xchg
mov
adc
in
ljmp
shrb
push
cmp
push
fnsave
sub
jno
add
push
movsl
mov
insl
jb
sarb
cmpsb
stc
mov
pop
jno
add
test
sub
push
lcall
push
and
ret
addr16
inc
fildl
or
mov
aad
daa
loope
push
fdivs
pop
dec
je
insl
test
movsl
sbb
test
shrl
shlb
xchg
clc
rcr
cmp
pop
jne
lods
fcompl
dec
sahf
mov
int3
xor
repz
xor
push
pop
mov
adc
lcall
inc
sub
cmpsl
mov
mov
xchg
test
push
mov
test
rcrb
stos
stos
in
syscall
in
add
dec
adc
out
incl
sub
xor
outsb
loop
mov
push
icebp
adc
test
fidivl
fucomp
insl
orl
and
js
pop
mov
mov
push
mov
pop
xchg
das
outsl
jle
or
inc
cmpb
es
out
dec
xchg
and
lcall
sub
and
jbe
lea
mov
add
push
cmp
mov
jg
or
fisubrl
in
pop
fdivr
dec
inc
mov
rorl
push
mov
dec
aad
xchg
test
xor
add
jne
sbb
xor
popf
fcmovbe
in
push
push
sar
cli
jae
add
gs
lock
mov
mov
inc
sub
mov
push
jmp
call
and
pop
bound
xchg
stc
lods
push
jmp
enter
or
jp
jno
push
sbbb
mov
jbe
rorb
lock
and
sbb
xor
lret
test
adc
push
insl
sub
das
push
popf
add
stc
std
cmp
add
das
ret
xchg
les
adc
pop
push
aad
sarl
daa
popf
popw
xchg
dec
movsl
sbb
mov
mov
add
cmp
lcall
lcall
jp
movsl
pop
fisubrl
push
pop
sub
cmp
sub
iret
sbb
jecxz
xor
mov
mov
mov
xchg
or
cmp
loop
sub
pop
cmp
ror
push
sbb
mov
negl
sub
push
xor
mov
add
fwait
mov
add
ret
xor
lods
adc
mov
in
jnp
imul
lret
out
fiadds
xchg
dec
dec
jle
jbe
push
cmp
jle
mov
arpl
jns
xor
rcrl
dec
cmpsb
or
mov
xor
push
aaa
xchg
int3
inc
cld
cmp
adc
in
faddl
cmpl
subl
mov
mov
xchg
fiaddl
adc
xchg
jp
xor
inc
and
cli
repnz
icebp
gs
or
cmpsl
ds
in
ja
pushf
movsl
add
mov
mov
jb
xchg
adc
popf
lea
cmp
add
jge
test
and
mov
sbb
push
lea
cmp
lds
lods
ficompl
dec
adc
daa
xchg
jnp
mov
fmul
lcall
ljmp
dec
or
sahf
lods
jp
pop
sub
lahf
or
insl
pop
pushf
cmp
fiadds
fistpll
push
sbb
jmp
sub
loopne
ja
jp
sub
push
fsubp
clc
test
sbb
pushf
xlat
popf
mov
fwait
in
mov
enter
stos
xor
push
fmuls
call
inc
mov
lret
fsubrs
mov
and
adc
inc
pusha
loop
les
gs
ss
mov
push
pop
sbb
jno
mov
stos
mov
out
ret
nop
repz
xor
xchg
lock
lahf
movsl
xchg
xchg
cs
xchg
and
adc
test
xor
inc
dec
jno
push
push
leave
negb
mov
jno
rcrb
and
mov
jae
js
mov
loopne
mov
sbb
mov
inc
repz
sbb
mov
das
lds
in
out
lea
sub
test
js
js
sbbb
dec
xchg
lods
and
cmp
and
icebp
popf
rcr
mov
enter
xchg
jge
adc
out
cld
mov
je
adc
inc
jmp
push
or
sbb
sbb
pop
jge
fimuls
repnz
adcl
adc
xor
and
rcll
das
lds
mov
and
sub
call
mov
pushf
dec
inc
mov
lcall
push
adcl
mov
fimuls
push
movsb
xchg
sub
mov
cmp
enter
cmpsb
inc
sbb
mov
je
cmpsb
je
xor
dec
sbb
rolb
repz
jp
ds
inc
cltd
mov
cs
jg
push
jmp
xchg
into
fcmovbe
cltd
pushf
jp
jnp
vcmpss
xchg
rorl
int
cmp
xchg
or
clc
inc
addr16
neg
mov
xor
adc
jg
xchg
sub
das
xchg
in
enter
pop
loop
mov
subl
xchg
rorl
cmp
js
fildl
movsb
orl
test
lock
mov
sbb
lcall
xchg
sbb
mov
xchg
fmull
cmp
add
jbe
pop
jecxz
js
aaa
sahf
imul
lea
sbb
pop
mov
mov
inc
xchg
dec
ljmp
and
or
mov
jbe
xorl
stos
xchg
mov
popa
movsb
arpl
pop
and
mov
sub
outsb
lahf
sti
aam
inc
lret
mov
insl
fidivrl
shlb
loopne
cs
adc
outsl
pop
fwait
imul
inc
cmp
mov
fisubrl
cmpsb
mov
sbb
jae
hlt
fisubrs
xlat
push
jmp
cmp
fcoms
mov
clc
pushf
or
and
std
push
les
rcll
mulb
aad
jb
std
test
cld
es
outsb
movsb
in
mov
add
push
icebp
dec
inc
sti
mov
mov
lods
dec
fildl
sbb
outsl
imul
mov
aam
mov
xor
cli
fdivl
fiaddl
fdivl
xchg
repz
lock
leave
add
dec
adc
dec
jae
sahf
ret
jl
or
sti
addr16
mov
fucomi
and
dec
add
jno
xchg
add
jns
dec
ss
mov
add
mov
mov
add
jno
adc
adc
int3
inc
pop
cmp
push
jne
inc
out
push
lahf
inc
adc
add
mov
jns
add
scas
pop
in
jbe
int
ss
xor
frstor
fwait
add
push
mov
xchg
mov
imul
nop
adc
lret
stc
xchg
loope
xlat
xlat
mov
mov
mov
mov
dec
inc
pushf
insl
dec
sub
mov
call
sbb
mov
pop
xor
fsubs
into
cs
jns
push
xchg
test
jp
stos
add
pop
inc
or
leave
xlat
loope
push
inc
jns
add
mov
repz
dec
mov
or
cmp
in
and
fwait
jno
adc
pop
aaa
cmp
inc
aas
push
addr16
ds
movsl
mov
xor
sub
sbb
jecxz
lcall
lea
pop
gs
daa
dec
push
adc
sbb
sbb
xlat
adc
icebp
sbb
push
shlb
pop
aam
and
mov
shll
dec
call
std
push
dec
sbb
add
xchg
test
inc
push
das
mov
movapd
mov
pop
imul
int
push
xchg
imul
jmp
out
cltd
loopne
push
out
jno
repnz
in
dec
xor
and
xor
sahf
mov
insb
mov
cmp
mov
sbb
sbbl
mov
pop
xchg
pusha
scas
mov
mov
mov
int3
aam
gs
inc
mov
xor
pop
stos
add
out
and
xchg
adc
add
testl
lods
icebp
aad
cmp
sbbl
add
sbb
jne
or
fidivrl
adc
sbb
dec
xchg
dec
dec
popf
bound
inc
adc
push
lret
jmp
add
mov
rol
xor
or
push
mov
dec
movsl
fiaddl
ds
fsubr
int3
lds
jmp
int
xchg
jmp
jl
xchg
scas
xchg
or
mull
or
cmp
fistpl
adc
cmp
shlb
stos
rolb
jmp
fwait
xchg
dec
push
adc
scas
nop
xchg
data16
lret
sub
inc
int3
rorb
xchg
hlt
lahf
out
mov
jno
add
and
jb
repz
adc
lea
pushf
mov
jo
mov
call
jno
add
bound
test
mov
flds
pop
jnp
in
xchg
cmp
ret
rorl
in
pop
aaa
stos
mov
sbb
jg
in
scas
das
xor
bound
xchg
push
test
in
push
mov
mov
aad
mov
and
dec
or
sbb
inc
inc
stos
sbb
ds
add
add
shlb
xor
jg
dec
push
push
xchg
xchg
jns
lock
mov
sub
push
cmc
pop
xor
stos
or
test
pop
ret
mov
sub
stc
dec
lret
loopne
data16
mov
les
test
test
addr16
xchg
xor
ljmp
dec
pop
xchg
dec
jp
add
jbe
push
std
mov
inc
xor
adc
push
mov
stc
aam
push
into
loope
shlb
xchg
jmp
sub
xlat
imul
pop
gs
daa
or
jns
fsubs
inc
xor
addr16
xchg
lret
xchg
mov
mov
sub
outsl
jns
shr
mov
push
inc
ret
dec
nop
pop
push
mov
icebp
test
cmp
jbe
sub
mov
call
movsl
in
insl
ficoms
inc
sbb
mov
pop
mov
xchg
sub
mov
cltd
lea
fs
mov
scas
push
push
inc
dec
jnp
and
add
push
movl
sub
jbe
cld
cmpsb
dec
shlb
es
pop
or
push
push
and
sar
test
lods
lret
pop
push
dec
lahf
sti
xchg
lea
mov
daa
and
add
jle
or
ljmpw
sub
dec
std
mov
xor
test
cmp
jns
lret
pop
pop
in
sti
mov
push
lret
dec
pop
stos
fidivl
cld
add
aaa
cmp
scas
ret
movsb
bound
cmpb
dec
pop
fsubs
mov
iret
pop
fisubs
das
imul
add
test
jns
add
ds
cld
sahf
outsl
stc
das
bound
pop
loop
std
add
xchg
sub
sbb
lahf
repz
sbb
lcall
lcall
push
xlat
sti
leave
and
push
cmp
rclb
arpl
push
les
xchg
lcall
fwait
jno
repnz
arpl
sub
dec
arpl
rcll
inc
dec
and
adc
inc
lds
or
fsubrl
test
stos
icebp
daa
punpcklwd
add
mov
stos
push
pop
xchg
push
mov
add
pop
jp
push
rol
xchg
jnp
adcl
js
add
insl
pop
fcmovnb
adc
xor
ss
mov
sbb
imul
xchg
jne
push
cmp
dec
rorb
out
insl
xchg
imul
je
cwtl
fistpll
inc
inc
out
cmpb
adcl
out
push
cmpsb
je
daa
mov
push
dec
mov
jmp
lea
inc
pushf
sarb
xor
fmull
fstps
jp
mov
fs
int3
out
jae
add
push
add
xchg
adc
mov
mov
scas
packssdw
pop
mov
ret
pop
cltd
cld
xchg
push
jae
jno
movsl
xchg
daa
outsb
cmp
mov
sub
xchg
jb
push
fldt
add
fsts
xor
outsl
jmp
mov
and
outsl
in
pop
sub
imul
mov
inc
pop
repz
out
mov
mov
and
call
in
mov
mov
lods
add
out
mov
mov
sub
adc
enter
out
test
mov
and
add
sbb
push
enter
out
popf
test
mov
cld
aas
mov
dec
inc
lret
push
in
dec
inc
push
inc
out
es
push
and
imul
andb
xchg
ret
mov
add
das
push
or
sub
push
cmp
or
push
sub
mov
push
sbbl
inc
mov
xchg
js
inc
es
pop
gs
pop
mov
repnz
iret
fcmovnbe
stos
jl
sub
orl
lods
ret
pop
xorl
push
mov
ja
xor
jnp
scas
int3
fs
inc
jmp
movsl
xor
mov
mov
add
dec
sub
xchg
dec
rcr
lods
mov
sbb
stc
mov
sbb
gs
imul
fmuls
mov
leave
movsl
cmp
in
inc
test
dec
mov
xchg
push
pusha
into
mov
shlb
addr16
popa
and
pop
jecxz
jo
mov
cld
out
push
mov
sub
in
rorl
xor
mov
cmp
xchg
std
std
mov
mov
xor
mov
pop
shlb
jp
pop
test
rep
dec
push
jo
mov
jle
icebp
add
mov
nop
jne
pop
les
jno
in
clc
pop
and
pop
xchg
in
call
sbbl
push
jb
test
inc
jo
notl
inc
dec
jmp
or
cmc
lcall
inc
shlb
cltd
fimuls
mov
cmpsb
or
mov
add
mov
jle
pop
inc
sub
xchg
test
pushf
test
negb
ror
push
mov
cmpsl
test
push
popf
sub
mov
sahf
jbe
rorl
pushf
sti
rolb
inc
or
xor
push
cli
inc
jle
jne
sbb
fisubl
lret
popl
jnp
xchg
iret
push
jnp
movsb
gs
in
jo
xor
or
shl
mov
aam
aaa
mov
add
jle
popf
mov
insb
shrb
xchg
mov
mov
ret
jne
inc
stos
popa
adc
subl
xor
inc
dec
push
add
shr
xor
imul
mov
out
mov
aam
stos
mov
lahf
mov
pop
cmp
sbb
aaa
test
and
push
movsb
in
or
pop
mov
cmp
adc
loop
and
sbb
push
mov
outsl
jbe
insl
adc
call
fbstp
ret
adc
or
aam
ds
sbb
lret
mov
ds
sub
ret
pop
jg
pop
cwtl
add
jno
in
rorb
mov
out
cmp
jge
sarl
xchg
and
ds
add
push
xor
aaa
int
mov
pop
dec
jle
and
cmp
pop
fildll
or
add
cmpsl
in
inc
sub
negb
ss
cwtl
test
call
repnz
lods
xchg
icebp
into
popa
sbb
jne
ljmp
xor
mov
ss
rol
pop
pop
and
std
sbb
jmp
nop
xor
inc
pusha
mov
mov
jge
ficomps
push
ret
inc
cli
add
lret
loop
adc
bound
dec
cmp
push
dec
ljmp
and
lret
sub
mov
ja
sahf
loopne
xchg
mov
popa
adc
and
cmp
jae
mov
ret
imul
imul
jg
jg
xor
stc
pusha
rcrl
addr16
cltd
jp
adc
cmp
pushf
shrb
mov
aaa
jbe
sbb
cs
push
dec
pop
mov
or
sub
pop
mov
jns
cmp
jmp
cmp
inc
iret
inc
mov
sub
push
xor
xchg
mov
dec
imul
pushf
mov
popw
xchg
outsl
divb
or
vpmacsww
test
lock
mov
adc
call
push
or
jbe
ret
pop
int
xor
ljmp
out
mov
mov
adc
push
push
sub
mov
pop
hlt
xchg
ja
aam
cmp
inc
fstl
outsb
enter
aas
push
es
insb
push
push
bound
mov
mov
cmp
jle
sbb
inc
cltd
jmp
adc
mov
sub
mov
jecxz
jbe
out
and
add
shll
ret
add
ds
adc
nop
popa
xchg
mov
mov
hlt
lret
std
inc
data16
mov
cld
repnz
xor
dec
mov
push
cmp
shl
cmp
push
add
jecxz
cmp
gs
sub
mov
push
mov
or
enter
xor
int
dec
jge
aad
jns
daa
sub
sbb
fnsave
sub
clc
add
dec
add
out
adc
mov
call
adc
mov
mov
insl
inc
stc
out
out
call
fisubl
cli
jns
mov
ret
mov
insb
sub
fdivp
push
lret
hlt
push
jae
push
xor
sub
cmpsb
mov
mov
dec
cmp
or
pop
cmp
push
add
push
sar
fwait
mov
sub
inc
dec
das
mov
xor
add
pusha
mov
aas
fistps
sbb
or
int
icebp
lcall
insl
fwait
mov
jge
ja
adc
mov
push
call
leave
fiadds
mov
cmp
loopne
scas
cmp
mov
jb
int3
outsb
pop
mov
inc
push
add
std
inc
dec
inc
sbb
jnp
xchg
inc
or
test
or
dec
sub
sub
je
jae
mov
out
and
mov
push
push
outsl
loope
mov
or
jge
dec
xchg
push
jmp
stos
cmp
je
mov
loopne
mov
mov
clc
mov
mov
xchg
add
outsb
pop
inc
int
add
ds
xchg
jle
and
data16
movsb
mov
repz
cltd
sahf
call
mov
les
sbb
and
inc
mov
pop
scas
fcomi
jb
pop
mov
scas
sub
out
popf
sub
pop
hlt
imul
push
and
rcrb
rcrl
dec
adc
lret
lahf
lahf
shll
cmpsl
fimull
in
outsb
or
adc
push
ss
or
loope
sub
and
aaa
jg
inc
stos
jns
cmpsl
dec
cmp
jle
mov
int
loopne
jle
jg
fisubrs
fstpl
std
inc
cs
aaa
shll
pop
mov
push
stc
mov
add
scas
or
jb
jae
sub
insl
sub
mov
pushf
cmp
scas
cmpsl
data16
insb
pop
jno
xchg
in
inc
mov
mov
sub
repnz
cmp
sbb
test
arpl
dec
int3
mov
imul
std
pushaw
fisubrs
sub
ret
push
lods
mov
test
stos
pop
arpl
rcr
push
xchg
add
std
xor
out
xor
push
sbb
push
fs
add
mov
xlat
push
mov
stc
jge
rcll
iret
fiaddl
xor
adc
test
xchg
cmpsl
xor
jmp
lret
imul
mov
outsb
cltd
popa
adc
xorb
sbb
xor
in
jb
ret
scas
sub
int3
add
fld
lock
imul
jns
pop
inc
sbb
mov
push
sbb
push
lods
pop
rcrl
push
xor
cmp
mov
lds
jns
gs
and
mov
aas
mov
pop
push
xor
loop
sbb
xor
pop
gs
icebp
aad
lds
addl
subl
rcl
push
bound
xor
cmpsl
movsb
lret
jns
push
jp
cli
mov
add
sbb
push
jno
inc
popa
cmc
daa
mov
xchg
xor
rcll
rcrl
push
or
fidivrs
andb
or
andb
push
sbb
mov
test
pop
data16
inc
dec
fcompl
dec
popa
insb
dec
pop
push
xlat
mov
test
xor
pop
fcmovnu
pop
shl
notb
and
or
sub
loopne
dec
mov
dec
inc
movl
pop
sbb
stc
inc
adc
pop
test
nop
sbb
or
jle
fcom
xchg
in
cmc
cmp
sarb
ret
inc
pop
es
jp
mov
or
in
leave
aam
pop
push
pop
pop
inc
mov
mov
aam
loopne
jne
movsb
lcall
xchg
xchg
mov
push
mov
lods
xor
xchg
dec
or
inc
or
std
adc
or
fists
cmp
je
insb
inc
dec
and
and
dec
adc
ds
int
push
sbb
insb
pop
bound
or
test
mov
push
in
and
cmp
inc
lret
sbb
ficoml
fwait
popf
xchg
leave
repz
pop
das
xchg
push
sub
mulb
lret
cmp
jmp
cmpsb
mov
cmp
jmp
pop
push
jg
xchg
cmc
add
loop
add
js
xor
and
cmpsl
popa
add
loope
inc
lahf
fwait
push
arpl
mov
adc
mov
scas
dec
xchg
and
pop
imulb
xor
and
add
cmp
lds
pop
mov
cmp
cmp
adc
adc
xorl
sub
repnz
std
adc
xchg
push
jle
mov
cmpsb
pop
inc
into
rcll
loopne
mov
sarl
adc
imul
sub
push
cmp
popa
sub
shlb
mov
cmp
out
cld
pop
lcall
or
cmp
cmpsb
mov
in
rcll
adc
mov
mov
dec
daa
shll
cs
cs
scas
mov
fsubrl
cmp
push
in
inc
clc
and
sti
outsb
das
push
mov
sub
sti
inc
mov
mov
adc
or
mov
aas
mov
sub
adc
popf
mov
cmpsl
iret
and
cmp
arpl
push
cmp
rol
in
shrb
out
ret
jo
push
pop
and
mov
sub
mov
sbb
aad
push
es
push
ljmp
inc
inc
ja
mov
shlb
lahf
fxch
push
sbb
es
lods
mov
leave
sbb
sbb
xchg
idivb
mov
idivb
leave
sahf
dec
and
mov
inc
cmp
mov
stc
lds
js
adc
nop
mov
outsb
adc
addr16
mov
inc
mov
mov
push
in
mov
mov
iret
pop
es
jnp
dec
jns
cmp
mov
dec
lcall
xchg
xorb
ja
stmxcsr
xchg
xchg
xor
cmc
movl
add
popa
sub
clc
pop
aad
movl
adc
ds
cli
push
jnp
mov
int3
mov
sti
sbb
xor
xchg
ret
push
cmp
xchg
pop
inc
stos
scas
mov
mov
es
mov
pop
fdivl
mov
sbb
inc
out
push
lret
fwait
xchg
std
mov
push
aam
loopne
xor
ss
cs
icebp
insl
push
xchg
mov
mov
nop
rorl
add
and
pop
mov
outsl
nop
xchg
icebp
arpl
loopne
or
cmp
xor
leave
sti
cmp
jg
push
shrl
xchg
sahf
outsl
adc
mov
push
mov
fs
sub
addr16
pop
jg
mov
sbb
pop
sarl
popf
fmull
into
leave
mov
jb
in
les
push
outsb
cmpsb
xor
sar
loope
dec
add
mov
lock
fdivr
loop
dec
pop
nop
adc
and
loope
cmp
ss
xchg
lods
sbb
mov
inc
xchg
cmc
pushf
cltd
or
cwtl
stc
imul
mov
mov
mov
push
aas
xlat
inc
jp
mov
sbb
push
sub
cli
add
out
iret
pop
imul
enter
shrl
mov
sbb
sbb
ret
adc
js
sahf
add
ljmp
pusha
mov
xor
pop
inc
adc
js
sub
out
add
adc
bound
data16
pushf
jmp
out
leave
mov
dec
or
xor
je
int3
popa
add
cs
or
push
or
test
push
adc
push
xlat
sub
je
cmp
sti
in
out
inc
sbb
mov
dec
outsl
xor
cwtl
loop
int
addr16
mov
push
and
dec
bound
or
adc
int
adc
rcrl
pop
xor
or
nop
aad
mov
loope
sahf
mov
xor
jns
inc
adc
mov
pop
mov
adc
daa
mov
lock
lods
adc
jo
test
adc
or
and
adc
mov
out
notb
xchg
fstl
cmp
inc
data16
out
fbstp
add
addl
sub
dec
pop
pop
and
ret
dec
addb
and
inc
sbb
js
push
push
gs
cmp
cmp
mov
cmpsl
icebp
mov
mov
orb
fstp
inc
inc
ret
cmpsl
clc
jle
aas
ja
inc
adcl
rcll
and
pop
mov
daa
popf
or
das
adc
flds
test
or
sub
jno
sahf
data16
mov
nop
cmp
cmc
inc
scas
test
or
loope
xor
std
and
or
or
scas
les
ss
cmp
ret
jecxz
outsl
or
pop
lret
stos
or
or
sub
mov
jb
and
cli
pushf
or
inc
out
imul
jle
pop
sbb
and
jne
inc
aas
add
scas
rorb
cmp
sets
jns
aam
push
decb
movl
leave
jno
aas
leave
pushf
cwtl
test
xchg
lock
enter
aaa
lret
pop
aad
jp
add
lock
ja
aad
xchg
repz
mov
cmc
jg
inc
jae
jmp
jb
sub
test
dec
mov
mov
rorb
test
inc
lcall
pop
sub
imul
push
repnz
xlat
in
in
add
add
aaa
xor
dec
adc
in
psraw
lcall
leave
mov
jge
and
sub
and
insl
enter
and
subl
repnz
popa
sub
xchg
dec
pop
scas
fcmovb
cmp
js
inc
xor
jg
jnp
add
pushf
loope
adc
insl
sbb
ret
es
popa
test
xchg
cmp
cmp
leave
fidivs
sti
out
popf
das
loopne
pop
xchg
push
out
ljmp
pusha
jo
jne
jno
inc
pusha
add
mov
shll
sub
push
rcll
andb
fs
xchg
mov
in
push
mov
popf
cld
adcb
out
or
icebp
push
cmp
mov
lea
jnp
or
ja
and
cmpsb
pop
xor
cld
movsb
pusha
fldcw
loope
jmp
outsb
loopne
repnz
scas
fwait
xchg
lret
cmp
cwtl
dec
mov
cwtl
out
mov
push
jle
flds
aad
mov
mov
mov
sub
hlt
mov
mov
pop
sbb
pusha
pop
sbb
add
push
punpckhbw
or
lock
out
inc
sbb
data16
adc
sbb
subb
push
imul
xlat
into
loop
arpl
push
roll
and
jp
inc
sbb
subl
or
cs
mov
testl
push
cmp
inc
aas
mov
adc
or
lods
sub
test
rcll
lock
mov
sahf
call
rorl
pusha
enter
pop
lcall
int3
jecxz
addb
mov
cmp
scas
xor
mov
jecxz
fidivs
out
ljmp
jnp
cmp
hlt
jnp
cmp
flds
ljmp
or
cli
je
sub
daa
add
stos
stos
iret
mov
out
leave
adc
pop
jns
lods
mov
fistl
dec
ja
mov
mov
mov
dec
outsl
inc
cmp
popa
add
and
lea
cli
imul
dec
lods
jae
shlb
scas
mov
cs
sub
mov
sarl
loop
jb
dec
xchg
mov
testb
cmp
in
mov
pushf
jo
xchg
push
int
xor
dec
mov
sbb
leave
mov
mov
or
mov
movsl
mov
xchg
pop
fwait
pop
incl
adcl
inc
mov
inc
stos
xor
lahf
cmp
pop
sub
addr16
pop
sbb
xchg
or
sub
jno
cmpsl
dec
push
jb
push
mov
lret
and
mov
orl
aaa
das
xor
lds
sbb
in
rcll
inc
ret
push
lds
pop
inc
test
je
fadds
push
mov
aad
push
sub
xor
dec
fnsetpm(287
mov
in
pop
inc
std
ljmpw
loope
xor
sub
xchg
xor
and
bound
mov
xor
and
ljmp
movsl
pop
inc
hlt
or
add
xor
push
outsl
dec
adc
dec
nop
mov
adc
jns
push
aad
cmp
inc
fdiv
dec
aad
and
push
repz
push
aam
and
pushf
inc
imul
cld
cmp
in
adcl
pop
test
testl
in
mov
rep
or
cmp
in
shrb
xor
and
in
std
shll
inc
mov
inc
adc
ret
mov
xchg
push
mov
scas
outsb
ljmp
cmp
adc
pop
inc
mov
lods
jge
jg
sbb
pop
rcr
jae
dec
in
adc
clc
dec
rorb
cmpsl
xlat
mov
or
mov
jo
cmp
mov
scas
cmpsl
xchg
test
jne
mov
adc
lds
jge
imul
mov
mov
iret
fs
jnp
push
inc
fidivrs
sub
push
cmp
orl
mov
jmp
int3
mov
test
pop
cli
dec
mov
jnp
scas
sti
faddl
mov
mov
lahf
nop
stos
into
ret
mov
lock
ss
out
je
lret
hlt
lods
jp
iret
les
les
test
jp
lcall
xchg
add
movsl
mov
dec
mov
cmp
in
xchg
push
xchg
xchg
iret
je
mov
sbb
lods
insl
outsb
adc
aaa
lcall
mov
pop
dec
push
mov
pop
fwait
and
sbb
sbb
jne
mov
mov
adcl
fcmovbe
add
inc
xchg
sub
pop
jg
jno
jbe
pop
push
sub
or
scas
pop
out
imul
faddl
pop
into
dec
jmp
or
add
scas
pop
adc
test
lds
push
in
mov
or
inc
dec
ret
daa
adc
push
stos
fsubrl
push
testb
popf
aad
sub
dec
call
fidivrs
xchg
mov
adc
xor
xchg
rorb
sti
pop
jo
out
add
fcmovne
xchg
gs
test
in
xor
ss
xchg
sbbb
mov
mov
movsl
jp
clc
es
sbb
in
mov
imul
adc
imul
xor
out
jp
inc
inc
loope
fcompl
notb
xchg
jmp
lret
push
cmpsb
add
mov
sbb
jno
jno
test
or
sbb
sub
and
test
mov
repnz
jae
push
push
mov
test
daa
mov
ss
sub
push
mov
jbe
jmp
jb
mov
aas
mov
sbb
fwait
dec
cld
fmull
pop
and
sbb
or
fidivrl
fcmovnb
xchg
out
jge
out
call
into
enter
mov
mov
loop
shlb
out
into
lds
leave
aas
jne
mov
pop
test
test
adc
push
mov
enter
sbb
pop
mov
xor
push
imul
cmc
xor
xor
out
mov
push
sbb
shl
xlat
xchg
cld
lods
fmulp
mov
addr16
jne
push
mov
push
jl
mov
loope
in
fs
lcall
lea
les
jle
das
inc
lret
shlb
std
and
loop
push
in
and
push
lcall
bound
filds
push
push
lds
das
sahf
inc
xor
inc
cmp
pop
pop
xor
stos
push
shll
mov
jb
jg
pop
mov
add
mov
cmpsl
out
sbb
and
jecxz
jp
add
in
pop
push
mov
gs
adc
xor
or
inc
dec
mov
sub
pop
xchg
inc
into
iret
push
add
lea
sub
repnz
xorl
jno
lea
int3
add
cwtl
jne
adc
loope
push
clc
cmc
imul
nop
mov
cltd
push
jno
push
pusha
pop
imul
and
shrl
add
mov
addr16
fcompl
mov
test
fldt
repz
adc
push
mov
leave
and
and
and
mov
cmp
mov
pushf
cli
sub
sbb
mov
cli
nop
decl
mov
lret
cmpsl
inc
dec
sbb
push
push
int3
dec
scas
call
mov
out
out
inc
cmp
shlb
mov
mov
xchg
sub
push
in
rcll
stos
hlt
xchg
sub
adc
or
cmp
rol
push
shll
fstps
fwait
adc
add
mov
sti
adcb
stc
xor
stos
in
jl
mov
ss
and
sub
sub
push
cwtl
cltd
shrb
mov
xchg
mov
popa
daa
sahf
mov
sahf
xor
dec
mov
mov
xchg
cmp
test
cld
push
rolb
data16
mov
out
repz
in
ds
inc
adc
adc
sub
inc
outsb
inc
or
movsl
mov
pop
pushf
lock
fsubs
sbbl
call
fldl
mov
push
and
shr
xor
pop
mov
outsb
jno,pt
ret
shl
xchg
pushf
aad
mov
test
push
inc
xorl
lret
mov
mov
dec
or
cmpsb
gs
jmp
pop
jecxz
scas
adc
mov
cmpl
inc
ds
fwait
mov
cmc
push
flds
call
sbb
lret
sub
stc
push
inc
std
out
ret
sub
ss
int3
cltd
push
cmp
loopne
push
xor
cmpsb
cmp
daa
xchg
mov
daa
xor
dec
int3
add
ficompl
rolb
outsl
pop
cmp
xor
push
mov
es
repnz
int
add
out
pop
mov
test
dec
movsb
pop
jns
int3
cld
ja
xchg
js
mov
cmp
push
jb
xlat
mov
xchg
jp
and
adc
mov
sti
jbe
push
nop
xor
pop
xlat
in
rcrb
test
ja
movsl
and
mov
enter
inc
sbbb
in
sti
inc
xor
pop
push
daa
jno
ljmp
cmpsl
adc
jns
cli
inc
add
rcpps
arpl
sub
push
xrelease
mul
adc
sub
push
xchg
push
add
jno
bound
loope
lea
mov
lods
bound
add
dec
stos
popf
cli
dec
nop
push
fadds
mov
mov
fmul
sub
sub
fimull
mov
call
repz
push
pop
lods
repnz
or
inc
ss
adc
js
jmp
add
xlat
icebp
push
jecxz
cmp
sbb
ss
sbb
jecxz
sbb
enter
insl
push
dec
xchg
xor
hlt
jo
jl
or
adc
and
push
out
je
and
jnp
sbb
ja
int
in
dec
push
adc
sub
and
jo
xor
or
enter
leave
mov
jae
sbb
nop
mov
ror
loope
xlat
mov
dec
xor
add
xchg
je
fcompl
xlat
push
das
mov
dec
and
pusha
bound
jle
out
jl
xchg
fwait
orl
les
inc
or
int
xchg
mov
add
jg
xchg
mov
adc
jno
mov
mov
out
js
fcom
cmc
sub
xor
sbb
into
daa
imul
jge
lock
inc
xchg
push
mov
insb
mov
loopne
push
sub
faddl
std
fisubl
mov
addl
push
fcoml
mov
insl
cld
add
sub
arpl
sub
lock
les
xchg
outsb
roll
daa
adc
cmpsl
shll
jbe
fsubrl
add
out
lock
aas
cmp
and
subb
subl
and
aaa
cmp
ret
cwtl
cmp
in
outsb
pop
push
or
pop
cmpsb
out
roll
add
push
test
loopne
jge
sti
lcall
fcmove
push
ss
jmp
cmp
push
das
jge
std
lds
push
not
stos
sbb
jle
cld
jae
cld
adc
movsl
cmp
jb
adc
test
bound
loop
push
inc
loope
leave
sbb
call
mov
out
rclb
testb
movsb
xchg
sbb
sbb
or
push
adc
inc
shrb
pop
insl
push
push
add
enter
or
in
add
xchg
sti
aaa
adc
ret
dec
cmp
cltd
cwtl
out
xchg
push
mov
sub
or
je
cmp
push
xor
lods
sar
jecxz
cwtl
cmp
push
and
out
cmp
or
test
dec
aad
ja
das
hlt
sbb
cs
push
out
rcrl
pop
cmp
aas
pop
je
lock
cmpsl
cld
or
dec
pop
stc
sbb
inc
xor
jno
push
jo
ficomps
sbb
aam
pusha
mov
test
mov
cmc
mov
sub
enter
fcmove
adc
rclb
aaa
bound
popa
mov
stos
inc
ja
loop
push
pop
pushf
mov
push
sbb
push
push
jp
xchg
adc
xchg
mov
xor
lock
mov
int3
lcall
outsl
leave
call
push
jle
dec
inc
sub
mov
lods
xchg
mov
jnp
mov
rcrl
or
pop
fstps
repnz
and
or
ljmpw
adc
sub
incl
push
cltd
mov
cmp
in
cmpsb
or
mov
in
push
cs
pop
leave
push
jecxz
inc
lds
inc
or
aas
jmp
lds
repnz
mov
pushf
xchg
mov
push
std
fistpll
sub
ja
sub
xor
or
clc
lret
sub
and
sbb
mov
aaa
bound
fs
inc
push
mulb
out
pop
jbe
in
jecxz
pop
sbb
adc
xchg
cli
mov
add
in
add
xchg
xchg
dec
dec
mov
dec
into
adc
sbb
adc
icebp
dec
or
push
adc
cmpsb
jecxz
sub
inc
dec
add
mov
dec
loope
lret
pop
pop
aam
xchg
and
fdivl
shll
fldenv
popf
orb
sbb
inc
xor
ss
add
jmp
arpl
in
jbe
push
sbb
mov
lods
inc
imul
and
and
pop
and
test
xorb
out
cmp
adc
push
sbbb
and
adc
push
pop
cmp
mov
mov
pop
sub
lcall
popl
lcall
cmp
lahf
jl
shrb
orb
mul
inc
mov
xor
daa
mov
xchg
pop
sbb
cs
mov
add
icebp
inc
mov
mov
pop
nop
mov
pop
cmpl
lods
iret
or
in
out
add
divl
outsb
push
int3
ficomps
or
xlat
pop
std
push
cltd
cmc
xor
jb
pop
bound
sbb
jae
int
mov
inc
testl
jno
mov
adc
in
mov
inc
add
std
or
add
and
push
xor
xor
jne
push
shlb
fsubrl
push
movsl
add
inc
popa
mov
xchg
mov
mov
sbb
mov
pop
mov
stc
xchg
loopne
fstpt
mov
add
mov
sub
fs
inc
cmc
jge
push
mov
sbb
add
add
mov
cmp
dec
xor
sub
sbb
jg
xchg
stc
jo
ret
ret
dec
enter
add
mov
inc
push
out
jbe
pusha
addr16
dec
cmpsb
shlb
lahf
outsb
xor
inc
jle
fildl
add
orb
or
es
xchg
data16
daa
shlb
cmp
push
movsl
push
cld
iret
inc
and
lret
enter
test
jge
and
sub
jne
pop
mov
fstpl
and
pop
jle
pop
nop
mov
dec
cli
and
sub
and
aas
gs
or
mov
lahf
iret
rorb
jp
xlat
lahf
pop
push
and
inc
push
repz
pusha
sbb
add
mov
icebp
fsts
jg
xor
cltd
pop
lds
icebp
stos
jnp
fidivs
xchg
xchg
js
pop
out
add
xchg
add
push
and
fildll
fcmovbe
xor
mov
jnp
inc
jp
popf
out
add
jmp
mov
push
or
cmp
dec
dec
xor
xor
mov
inc
cli
insl
loop
les
mov
jecxz
add
scas
nop
repnz
pusha
push
ret
mov
or
decl
ret
xchg
pop
stos
xchg
and
push
pop
or
popa
dec
dec
mov
or
not
jle
insl
xchg
enter
leave
mov
push
push
mov
movsb
dec
jns
fwait
pushf
jmp
loope
ret
push
daa
fsubl
push
adc
mov
ljmp
sub
inc
hlt
pop
and
shll
jecxz
sub
pop
imul
xchg
dec
and
adc
dec
inc
inc
mov
nop
jnp
cmp
pop
aaa
mov
push
jl
pop
pop
loopne
inc
std
pusha
stos
adc
sub
stc
mov
leave
bound
xor
xchg
push
pop
mov
aad
out
cwtl
add
bsf
call
call
fistpl
jl
dec
cmp
mov
data16
iret
lock
pop
idivl
in
in
adc
nop
add
imul
ljmp
adc
lret
aaa
and
push
xor
popa
adc
daa
fdivrs
add
je
xchg
lahf
pop
insl
mov
pop
ret
mov
inc
cli
aas
and
xrelease
cmp
push
push
sahf
cli
mov
loope
ja
ret
pop
aas
loope
mov
xchg
sbb
loopne
push
mov
mov
adc
in
jae
mov
or
lods
xchg
notb
push
fwait
jmp
fldcw
pop
jp
insl
cmpsb
shl
inc
pushf
mov
aaa
pop
int3
enter
ss
pop
mov
pop
test
cmc
push
add
adcl
insb
push
pop
div
aad
mov
inc
in
push
pop
icebp
lcall
sub
vpavgb
jno
xchg
cwtl
jnp
lret
mov
pop
les
out
cs
cmpsb
mov
test
in
enter
mov
jo
xchg
jmp
mov
xchg
ljmp
pop
fwait
xor
sub
rol
loopne
in
xor
pop
mov
mov
ficoml
pop
lods
movb
push
mov
jmp
loopne
cmp
mov
and
and
sub
mov
ret
dec
loope
setge
mov
mov
xor
into
jecxz
push
sbb
js
add
jb
mov
shl
cli
out
shrb
adc
adc
inc
out
mov
pop
inc
push
xorb
add
mov
adc
push
rcl
outsb
imul
je
ss
jle
test
adcb
xchg
pop
push
scas
push
div
dec
sahf
pop
sub
sub
push
adc
push
mov
xor
hlt
cmc
xor
testb
pop
mov
fdivrl
mov
ficomps
pop
sahf
inc
das
cmp
sub
mov
or
push
jmp
pop
xchg
ret
arpl
repz
cmp
sub
es
fidivrs
adc
cld
ss
mov
cmp
dec
push
and
push
addr16
lds
popf
xchg
je
jno
sub
adc
out
sbb
je
lock
jb
popa
rol
js
and
cli
std
add
jl
push
sub
xchg
shl
cmp
pop
push
fcmovne
push
fnsave
fwait
mov
pop
dec
shrl
shll
push
cmp
enter
out
movsb
popf
call
aad
loope
mov
aad
call
data16
ret
fisubrs
jns
xor
fstl
push
sbb
mov
out
mov
loope
sarb
mulb
jns
ja
mov
pop
rcrl
lds
xchg
mov
sbb
dec
dec
fistps
sub
repz
addl
inc
popa
sub
das
in
cmp
mov
sub
outsb
push
mov
rol
mov
adc
fdiv
add
dec
gs
pop
xor
xor
mov
mov
or
scas
sbb
pop
pop
sahf
and
les
sbb
movl
mov
or
out
cwtl
add
jp
repnz
cmpsb
lods
std
jo
xor
orb
lds
push
mov
jecxz
jl
or
cmp
cmp
fucomi
cwtl
jae
sub
or
sbb
inc
test
and
or
push
sub
repz
leave
inc
ss
and
dec
mov
mov
in
ret
xchg
rcl
cmp
jp
mov
test
mov
in
xchg
sbb
inc
mov
dec
jns
push
test
sbb
mov
mov
jg
sub
bnd
cltd
jnp
lds
push
mov
inc
xchg
push
lods
mov
cmpsb
sbbb
xchg
fstpl
shl
push
stc
fcoms
scas
sub
call
sar
clc
jl
or
xor
loop
lods
jnp
icebp
stos
insl
and
pop
cmp
fists
into
lea
cld
inc
dec
mov
inc
push
and
aas
in
pop
int3
push
adc
sub
loop
push
les
shr
nop
loope
inc
add
std
enter
push
mov
shlb
loop
xor
and
or
inc
stos
fsubl
incl
push
xchg
orl
aad
addr16
xor
mov
dec
dec
movsl
sbb
pop
pop
jns
fsubl
jnp
lret
fcoms
cmp
push
out
dec
xchg
movsl
imul
and
daa
ficoms
inc
ficomps
xchg
jmp
outsl
cltd
push
sahf
lods
dec
es
xchg
xchg
xchg
xor
mov
in
jnp
adc
inc
adc
cwtl
popa
add
sub
std
xor
mov
mov
mov
out
inc
mov
insb
cld
dec
rcr
or
pop
add
das
and
insb
out
xchg
dec
addr16
xchg
adc
int
addb
insl
dec
sahf
jnp
int3
xchg
cmp
sbb
xorl
ficoms
das
sbb
xor
jle
push
outsb
mov
into
cmpsb
stc
cwtl
add
inc
mov
sub
sbb
shrb
repnz
fcompl
pop
cli
imul
addr16
push
jnp
cmp
mov
mov
insl
pop
jo
cld
jb
popf
dec
sbb
jo
xchg
cmp
sub
jecxz
push
xor
pop
scas
sub
negb
xor
cmp
and
out
sti
sbb
add
roll
or
inc
in
pop
pusha
out
sbb
or
pop
xor
adc
xchg
je
xchg
lcall
or
in
frstor
notb
fistpl
leave
sbb
xchg
cmc
add
fs
arpl
insb
je
subb
out
jge
rol
push
pop
pop
add
sbb
jne
lea
nop
or
adc
pushf
inc
lock
sbb
fdivrl
mov
jp
adc
xor
sbb
push
add
ss
rcl
sti
into
push
into
xor
outsb
add
inc
fs
rolb
nop
iret
xchg
cmp
and
subl
neg
inc
xchg
cmp
adc
adc
lret
sbb
jl
scas
pop
es
scas
xlat
and
jecxz
notl
xchg
pusha
imul
test
xor
mov
mov
adc
ds
adc
in
call
data16
lock
cmpsl
jmp
pop
cmp
cmpsl
mov
xchg
pop
dec
add
push
push
aad
jle
hlt
mov
jle
cs
cltd
jmp
stc
push
ss
lcall
out
push
or
lahf
xchg
cld
fstl
mov
push
adcl
in
jbe
rcl
stc
inc
ds
sbb
jb
out
mov
loop
jl
mov
leave
je
mov
xlat
add
adc
rolb
mov
cltd
cmp
xchg
mov
enter
popa
jmp
pop
xor
push
mov
int
stos
out
scas
sbb
pop
xchg
test
jne,pn
lds
ljmp
sbb
sub
mov
mov
leave
shll
jg
mov
testb
xchg
pop
pop
push
mov
or
cwtl
jmp
dec
and
jnp
mov
and
fs
jle
sbb
add
sub
mov
stos
sahf
push
sbb
push
fidivrl
pusha
mov
fdivrs
adc
pop
mov
int3
add
adc
pusha
add
dec
std
xchg
fs
mov
adc
pop
add
and
std
inc
outsb
inc
fs
add
push
or
jno
or
mov
sahf
push
daa
adc
fldl
cmp
pop
push
loop
int3
mov
test
sub
dec
jae,pt
test
clc
adc
add
adc
lods
inc
jmp
sub
int3
push
push
cmc
scas
cmp
fcmovnb
and
cmpsl
mov
mov
push
mov
dec
mov
inc
jb
stos
xor
push
xor
out
jecxz
mov
mov
loop
and
pop
ss
push
iret
sbb
cmp
pop
xchg
movsb
jns
fsts
daa
int3
inc
subl
cmpsb
sbb
loop
xchg
icebp
adc
lods
sub
mov
out
arpl
cld
jno
ljmp
rcr
cli
inc
xchg
shll
mov
jmp
shl
lds
movsl
ret
out
test
out
pushf
sbb
cmp
sarb
push
es
loopne
test
dec
notl
xchg
jmp
fimuls
sbb
lahf
sbb
test
roll
jae
cltd
aas
sti
push
push
xor
in
add
movsb
pop
lret
imul
push
adc
inc
add
mov
add
push
mov
int
sub
xchg
leave
cmp
dec
jmp
mov
jg
ja
cmc
dec
cmp
pushf
mov
icebp
pop
rolb
dec
or
sbb
cmp
jne
xor
sbb
add
mov
or
out
ficomps
mov
pop
xchg
std
cmp
sahf
add
mov
xor
rorb
test
ss
imul
adc
push
mov
call
sbb
sbb
xchg
xlat
sbb
inc
pop
sahf
leave
loop
je
jno
inc
cwtl
jp
popf
leave
pop
outsl
or
jmp
test
es
sub
es
xor
xchg
outsb
xchg
in
jno
nop
add
out
and
mov
repz
lea
and
inc
dec
outsl
sbb
pop
xchg
sub
push
fyl2x
sti
addr16
pop
mov
adc
inc
jbe
sbb
and
insb
pop
jnp
pushf
aas
or
jo
cmp
mov
xchg
inc
and
pop
xchg
mov
mov
xor
adc
adc
adc
mov
sti
adc
out
lds
push
shl
call
shl
adc
add
out
dec
adc
in
lock
sarl
pop
test
or
push
scas
push
icebp
sahf
out
dec
fcomi
loope
sub
rorb
outsl
jnp
fdivrp
ja
cli
stc
jg
and
push
and
in
lcall
push
daa
outsb
push
icebp
xor
in
push
lcall
xor
pushf
ss
xchg
push
bound
sahf
movsb
sti
add
bnd
fsubrs
lods
push
jecxz
jnp
pop
int3
outsb
enter
in
push
fsubl
repnz
xchg
jle
inc
and
repz
pop
data16
cli
les
jmp
adc
int3
xchg
xchg
or
cld
adc
movsb
stos
mov
mov
in
iret
aas
cmpsl
sahf
or
lds
mov
jl
cmp
mov
mov
jmp
movsb
adc
arpl
inc
mov
mov
das
out
sti
insl
out
pop
cmp
icebp
test
clc
leave
inc
pop
rclb
push
mov
jmp
je
xchg
mov
in
mov
mov
lar
sbb
fstl
mov
mov
test
mov
add
lcall
rorl
in
xor
or
outsb
push
dec
lret
lcall
test
test
stos
inc
cli
push
rcll
popa
dec
lret
inc
jecxz
xchg
lret
faddl
adc
ja
test
in
or
xorb
pop
in
xchg
pop
lods
das
incl
jge
push
sti
mov
stc
push
ret
cmpsb
lds
inc
mov
in
jl
jo
lret
lcall
lods
or
js
push
pop
das
les
hlt
jp
add
fcom
adc
loopne
fnstsw
xchg
mov
or
pushf
sub
cmp
mov
push
pusha
mov
adc
and
mov
lretw
mov
jl
mov
push
jl
xchg
push
lret
adc
cmp
idivb
test
outsl
loope
mov
nop
outsb
in
hlt
adc
mov
mov
push
mov
dec
mov
mov
xchg
jmp
imul
xor
fwait
or
pusha
pop
incl
sbb
movsl
cmp
jp
mov
lcall
setge
mov
in
jns
sbb
push
fwait
loop
test
fldl
or
mov
imull
sahf
jbe
outsb
push
xor
mov
jg
sub
lods
hlt
or
pop
add
psubsb
mov
lock
cwtl
pop
rcl
stos
imul
rcr
and
outsb
mov
jge
mov
sub
jg
shr
jl
and
cwtl
mov
in
mov
in
jmp
rcrl
xor
adc
arpl
inc
sub
xor
sbb
pop
out
sub
mov
dec
xchg
addb
out
popf
push
repz
mov
push
leave
jp
sbb
jmp
imul
xor
adc
or
or
lods
ret
xchg
sbb
mov
fsubrl
inc
mov
loopne
call
push
in
push
adc
or
imul
ja
shll
nop
pop
cmp
fistpll
cmp
xchg
popa
popa
push
icebp
and
scas
sbb
cli
fidivs
rclb
or
test
mov
mov
les
cmpsl
cmpsb
xlat
adcb
cmp
inc
hlt
mov
lahf
mov
xchg
jp
popa
lret
test
add
jmp
ficompl
shrb
or
inc
xor
lcall
outsl
lret
popa
sbb
fnstsw
cli
stos
loope
and
clc
push
push
int
push
jne
mov
xorb
out
int
daa
inc
jle
sbb
pop
sub
inc
repz
mov
clc
jns
mov
js
ss
dec
daa
outsb
add
loope
adc
or
test
xor
or
xor
test
lea
cmp
stos
mov
mov
rorl
cmp
pushf
sub
dec
xchg
in
cmp
fwait
addr16
xchg
cmp
mov
shll
add
mov
xor
xor
mov
pusha
or
add
int
repz
sub
cmp
add
adc
lret
out
sti
mov
insb
repz
jns
aaa
imul
mov
cmc
jl
cmpsl
mov
push
cltd
mov
dec
lock
shr
jmp
icebp
aas
test
mov
jmp
aaa
jmp
adc
push
int
imul
imul
rorb
iret
adc
testl
jae
pop
jg
sbb
xor
gs
mov
rorb
hlt
push
lods
cmc
iret
pop
imul
push
push
pop
bound
jne
fnstcw
push
push
dec
jmp
pop
ret
inc
sbb
mull
scas
lret
xchg
sbb
hlt
inc
arpl
popa
les
xchg
xlat
les
fidivs
imul
pop
pop
je
dec
dec
in
repz
or
cs
sub
sub
sub
mov
dec
push
mov
xchg
sahf
popa
scas
aam
rolb
mov
iret
add
rcl
pop
sub
pop
mov
cs
inc
ss
xor
xor
ljmp
bndcu
popf
pop
lret
out
sbb
add
icebp
movsl
cmp
jle
mov
ret
rorb
dec
cltd
inc
inc
adc
divb
aam
xor
popf
mov
mov
and
out
sub
cmpsl
inc
loopne
jecxz
inc
cmc
out
fistpl
cmp
jnp
bound
adc
or
test
push
mov
bound
ss
cld
and
dec
pop
inc
xchg
jmp
int3
pushf
mov
mov
or
xor
adc
jle
ds
fiaddl
shlb
mov
mov
jo
add
cmp
mov
cmpsl
fdivl
jnp
scas
jle
jnp
std
mov
mov
push
fwait
sbb
arpl
fs
cmp
scas
xor
pop
fstl
clc
push
or
mov
insl
mov
xchg
adc
dec
add
jne
add
mov
and
dec
mov
jb
jmp
in
clc
push
push
push
cmc
mov
subl
stos
jo
imul
aaa
add
cmp
mov
xchg
dec
mov
xlat
movsl
mov
jnp
movsl
jb
sbb
push
push
jne
cmp
adc
jl
lcall
stos
adc
or
lcallw
std
sbb
pop
inc
mov
xlat
call
je
push
push
js
cmp
adc
cmc
cmpsl
pop
inc
mul
lods
bound
xchg
stc
addl
fcmovne
aas
lret
dec
sub
xchg
mov
popf
scas
inc
xor
jmp
xlat
ja
push
mov
movb
loope
mov
dec
sub
shll
push
cwtl
neg
adc
xor
jno
inc
fdivl
pop
cmp
sbb
mov
sub
adc
dec
xchg
test
xor
push
mov
imul
mov
xchg
sbb
lret
inc
fsubl
jnp
cs
push
add
subb
xchg
push
mov
sub
inc
and
mov
jle
lret
sbb
xchg
out
gs
pop
pop
mov
cltd
dec
ja
popf
xor
adc
aad
cs
jmp
cmp
dec
mov
nop
out
hlt
dec
push
std
sbb
xlat
xchg
stc
xchg
mov
add
sbb
clc
sahf
es
stos
pop
push
xchg
lds
add
dec
mov
adc
pop
mov
loop
cltd
add
out
mov
in
bound
bound
pushf
mov
push
adc
fdivrs
add
and
jne
jne
fidivrs
idiv
xchg
xor
and
fmuls
adc
xor
mov
repnz
popa
fsubp
dec
out
pop
dec
jno
dec
sub
popa
stos
and
pmuludq
inc
xchg
push
mov
roll
in
cmp
in
je
jmp
or
cmp
mov
jecxz
das
inc
push
ret
cmpsb
loopne
xor
cmpb
sbb
jns
int
xchg
fmuls
filds
and
xchg
xchg
pop
leave
sbbb
and
flds
arpl
mov
lcall
cmp
scas
push
rolb
inc
in
mov
sub
add
into
jge
dec
and
lret
clc
mov
aaa
repnz
gs
lods
and
xchg
xchg
repz
cmpsb
loop
add
decb
lahf
loop
rcrb
and
jnp
in
cmp
adc
sbb
mov
add
xchg
sub
sub
outsb
inc
mov
cltd
mov
lret
push
test
push
inc
pcmpeqw
mov
int
push
adc
jbe
adc
call
add
stc
xchg
and
mov
in
rcrl
popa
cmpsl
pop
rcrl
add
xor
xchg
and
xchg
enter
arpl
mov
sub
outsl
xlat
insb
jne
data16
jne
add
adc
das
call
mov
jno
in
sub
xchg
push
jns
cmpsl
xchg
fwait
jp
test
movsl
jbe
or
and
pop
or
or
jmp
cmp
shl
fidivl
movsl
mov
loope
sub
dec
mov
sbb
stos
and
add
outsb
daa
cmpl
mov
xchg
imul
add
push
cmp
or
xor
dec
and
add
pop
sahf
adc
mov
mov
lahf
sub
jno
rorl
out
scas
sub
adc
imul
xor
dec
jns
cld
fimull
fs
mov
pop
mov
ret
xor
repnz
add
inc
mov
sti
int
insb
jg
cs
xchg
mov
pop
xor
inc
mov
xor
lret
push
xchg
jg
notb
aam
or
movsl
xlat
lahf
data16
add
addr16
cmp
or
xchg
fnstcw
inc
bound
pop
mov
sarl
dec
cmpsl
dec
sbb
daa
repnz
jecxz,pn
mov
xchg
ja
xchg
push
pop
mov
call
lcall
test
jno
enter
lea
cmpsb
mov
adc
or
test
fs
lcall
mov
and
jp
rcll
adc
cwtl
arpl
mov
lcall
clc
cmpsb
and
out
shll
adc
add
inc
mov
adc
out
aas
mov
ret
ret
sbb
sti
jbe
mov
push
das
jo
mov
mov
push
sti
jb
pop
jg
loop
cmp
leave
jo
imul
and
in
xchg
cmp
sbb
js
xor
stos
dec
imul
push
out
push
add
mov
or
mov
pop
xchg
clc
jbe
enter
sar
push
sbb
lods
sub
clc
arpl
shl
jl
fs
mov
iret
sbb
sti
aas
fisttps
jae
pop
mov
adc
add
das
out
push
fwait
sbb
pusha
out
lea
movb
mov
pop
mov
movsl
adc
xchg
pop
ror
sbb
fld
out
nop
pop
pop
xchg
out
cmp
xor
xchg
push
xchg
mov
pop
in
xchg
jge
out
in
sahf
mov
out
scas
in
or
cmp
fs
inc
cwtl
mov
in
dec
fcoms
sti
mov
sub
cwtl
cmc
loopne
popf
push
adc
sub
mov
jl,pt
mov
xchg
aam
lock
mov
add
test
aas
xchg
sbb
jl
or
xchg
decl
out
jl
icebp
adc
imul
inc
pop
or
dec
add
jb
dec
sti
cmp
push
in
in
mov
cmp
fcomps
push
inc
pushf
cli
loope
loopne
scas
adc
or
sub
andb
sub
test
in
adc
cmp
xor
xchg
pusha
mov
jl
popl
aad
insl
shr
test
sbb
sub
mov
dec
mov
jnp
push
aam
out
lea
iret
xchg
jo
stos
rol
lahf
movsl
fs
sub
loope
add
pop
subb
pop
cmp
push
and
rcr
outsl
aam
xchg
xchg
jmp
imul
enter
gs
ret
dec
addl
inc
dec
push
jae
mov
xchg
mov
insl
push
ret
imul
cmp
push
cmp
xor
xchg
inc
sub
ja
cwtl
mov
stos
cmp
push
call
daa
jb
mov
mov
out
mov
mov
xchg
scas
addr16
pop
or
sub
mov
sahf
mov
xchg
pop
daa
leave
pop
shlb
sbb
adc
in
out
loop
xchg
gs
push
cmp
rcrb
test
dec
je
pop
push
or
jmp
stos
mov
fsubl
push
push
adc
in
cmp
ljmp
lahf
das
inc
lock
arpl
jmp
in
dec
pop
stc
and
pop
jno
ucomiss
mov
jbe
cwtl
adc
cli
imul
mov
pop
divb
mov
int3
aaa
cmp
dec
cmpl
xor
loop
dec
pop
mov
sarb
add
fnstcw
jns
scas
scas
inc
loop
out
push
inc
fmull
sub
or
stos
out
cwtl
fcom
dec
dec
jbe
jno
enter
decb
hlt
ljmp
in
inc
jb
dec
ds
or
xchg
cmp
fsts
ss
lret
jne
add
push
xchg
test
push
lods
int
mov
nop
mov
pusha
mov
idivb
lods
jno
mov
movsb
push
das
pop
divb
lret
popf
jae
inc
jbe
mov
sub
mov
adc
ds
xchg
adc
mov
ret
lret
mov
push
stos
dec
in
sbb
shlb
ds
push
pop
loope
stos
adc
fcomi
sti
bound
jbe
in
xor
js
or
repz
jno
lcall
inc
shll
jb
push
mov
pop
mov
in
xor
pop
mov
andb
and
inc
stc
mov
push
ja
push
cltd
loopne
aam
inc
pop
mov
ljmp
cmp
mov
outsl
cwtl
out
mov
scas
xor
lock
jno
or
push
test
das
addr16
je
arpl
movsb
outsb
lcall
ss
cmp
fmuls
rcrb
movsb
mov
fnsave
jns
xchg
mov
jl
pop
out
scas
test
lods
push
dec
and
mov
dec
xor
push
movaps
pop
clc
sti
cld
sbb
loopne
orl
sbb
push
cmp
fnstsw
xor
ficoml
decb
or
mov
jp
stos
sub
mov
and
clc
ja
mov
cmp
test
or
xor
mov
arpl
cmp
add
push
xchg
ljmp
push
data16
and
mov
xor
cmc
sbb
mov
push
test
cmpl
andl
jns,pn
pop
push
jmp
mov
sbb
fstp
out
push
loopne
add
cltd
pop
xor
xor
mov
push
sbb
out
dec
cmp
xchg
xchg
jae
and
push
nop
popf
inc
add
or
ss
jg
add
ret
ja
lret
imul
aam
inc
aam
rclb
es
fidivl
scas
dec
in
adc
jecxz
mov
xchg
scas
cmp
mov
jmp
pop
mov
enter
jae
fwait
orl
or
add
sbb
xor
adc
push
iret
lea
xor
stc
popf
shrb
inc
mov
inc
cmc
fidivs
xor
stc
cmp
fmul
imul
xchg
scas
sbb
jns
ja
fwait
popa
popa
push
test
arpl
mov
aad
jl
xchg
cmp
add
jge
pop
std
lock
jmp
mov
push
add
stos
inc
sub
fcmovnu
sub
add
stos
lcall
and
cs
xchg
xor
xor
pmulhuw
lods
mov
cmp
aaa
push
mov
mov
mov
sub
jno
or
aas
sbb
aam
int3
imull
pusha
out
dec
shlb
xchg
push
mov
ss
or
in
adc
pushf
or
mull
mov
in
out
gs
in
inc
arpl
mov
pop
arpl
mov
jo
mulb
inc
mov
and
inc
sub
mov
outsl
jns
pop
push
aam
mov
js
mov
push
pop
xchg
lahf
hlt
xchg
ja
jne
mov
sub
aaa
xchg
insl
xchg
jo
jecxz
xor
shlb
push
test
out
stos
sub
leave
out
lahf
popf
mov
ficomps
testb
sub
sbb
sub
mov
clc
out
ljmp
mov
and
mov
pop
pop
sarb
repz
pop
pop
pop
test
add
sti
adc
js
test
shll
cmp
mov
push
push
mov
pop
pop
icebp
jmp
je
int3
cmpsb
fldt
dec
test
ljmp
or
leave
sub
jmp
fsubrl
lods
lock
xchg
in
pop
xchg
aad
mov
aas
push
lcall
scas
push
pop
test
cmp
sub
fiadds
cmp
mov
test
sub
push
int3
int3
pop
xor
stos
imul
test
addl
mov
in
shll
and
mov
adc
out
cmp
mov
aad
iret
xchg
ljmp
movsb
mov
jae
ja
xchg
das
leave
idivb
xchg
aad
dec
sub
fst
mov
sub
hlt
mov
dec
or
lods
movsb
mov
and
pushf
orb
and
out
mov
dec
in
les
xchg
nop
jns
mov
pop
nop
xchg
rol
cmp
mov
mov
cmp
sti
mov
and
testb
roll
adc
xchg
pop
push
sub
out
push
repz
push
rcrl
jo
cmp
push
ja
ss
call
add
out
mov
mov
pop
hlt
mov
jp
scas
pop
xor
rcrl
addb
xor
addr16
lret
aaa
and
or
mov
xchg
aas
test
lods
fmull
and
inc
mov
mov
addr16
daa
add
movsl
inc
push
rcl
and
mov
inc
pop
lret
hlt
push
stos
xor
stos
cmc
lds
mov
enter
push
mov
outsl
iret
add
repnz
sbb
rorl
sub
push
dec
add
mov
inc
lock
dec
mov
jo
nop
jo
pusha
out
mov
mov
and
arpl
xchg
rcrb
and
imul
push
mov
pop
mov
xor
imul
mov
and
push
cmp
inc
mov
xchg
enter
mov
mov
push
mov
add
inc
and
enter
mov
shll
jle
add
sbb
jo
jne
xor
sub
test
jns
inc
movsl
popf
push
jnp
les
mov
aad
daa
jbe
aad
fdivrs
fwait
add
sbbl
lock
pop
adc
out
sub
stos
jne
and
xchg
sub
sbb
jg
out
clc
adc
xor
dec
pop
sub
pop
lods
cli
repz
insb
inc
loope
stc
jb
and
addr16
xchg
add
and
out
fbld
mov
push
bound
adc
push
xchg
mov
repnz
add
lds
push
jl
outsb
repnz
shl
lods
xor
jge
ss
mov
sbb
imul
jmp
inc
mov
mov
adc
inc
repnz
fsts
adc
mov
cmp
mov
mov
das
sub
cmpsl
sarb
mov
cli
pushf
les
jl
push
and
mov
jmp
test
in
rcll
outsb
mov
insl
clc
sbbb
mov
xor
hlt
mov
xchg
imul
rorb
mov
aaa
or
inc
test
lods
btcl
cmpsb
jl
xchg
dec
clc
daa
cmp
mov
icebp
mov
test
mov
ljmp
xchg
ds
test
in
mov
xor
pop
pusha
sub
loopne
jmp
mov
test
adc
mov
or
push
and
xchg
or
cmp
push
shr
add
iret
sbb
mov
pushw
jmp
pushf
mov
pusha
scas
mov
subb
sbbl
xchg
insb
loope
mov
mov
sbb
lret
pop
inc
push
sbb
lret
push
push
ret
cmpsb
fwait
pop
lods
adc
ja
push
push
insl
pop
cmp
adc
popa
std
in
pop
arpl
dec
test
sbb
divb
frstor
add
jno
cli
push
mov
mov
lock
rcrb
sub
pop
or
cmovnp
push
loop
mov
repz
call
fcoms
pop
mov
add
lret
mov
jg
or
pop
ss
mov
shrb
xchg
pushf
movl
sbb
push
in
sub
movsl
cmp
mov
aaa
sub
data16
fmulp
mov
jae
outsl
xor
lock
fidivrs
fidivl
subl
ss
aam
nop
xchg
loop
mov
cli
clc
loopne,pt
lret
jp
scas
ret
jge
enter
jp
mov
sbb
xchg
push
adc
xor
push
dec
sub
mov
push
jg
dec
push
jl
push
mov
loop
repnz
and
cs
in
in
cmpsb
adcb
mov
jl
lcall
aas
stc
repnz
pop
sbb
mov
push
jmp
sahf
outsb
js
sbb
int3
test
mov
pop
add
xor
jge
clc
jo
mov
xor
xor
popf
lahf
lock
sub
mov
adcb
scas
mov
shll
jbe
pop
ja
imul
add
mov
ror
mull
mov
or
mov
in
cmp
bound
arpl
pop
int3
and
push
ljmp
cmp
pop
jge
cli
lods
dec
xlat
mov
sbb
xlat
scas
or
int3
or
cmp
scas
xor
dec
jb
jle
add
mov
add
mov
jb
pop
in
ret
and
push
dec
mov
loopne
rcr
aas
inc
lret
out
or
mov
negb
cmpsl
adc
out
loop
mov
push
xor
leave
inc
aas
movsl
jl
sbb
mov
test
in
add
mov
jnp
inc
xor
add
jecxz
jne
mov
daa
dec
and
mov
daa
aaa
sub
jl
inc
or
sub
in
pop
adc
je
jp
mov
inc
xor
pop
ja
scas
out
outsl
sti
sbb
sub
jnp
sbb
data16
mov
aad
inc
xchg
es
xchg
dec
xchg
inc
jl
out
aad
adc
sub
push
adc
jg
add
in
sbb
jbe
xor
mov
mov
hlt
aam
and
cld
sarl
aaa
insb
sub
stc
push
shrl
push
mov
shr
push
push
mov
sub
orl
pop
out
in
out
xor
and
addb
in
test
cmpsl
mov
insb
cmp
ja
pop
rcrb
adcb
and
popf
daa
shlb
push
jbe
cmp
pop
sarb
xor
jecxz
sub
std
imul
inc
lods
out
call
in
jns
and
rol
pop
jl
and
cmc
stos
pop
int
mov
mov
xor
sbb
pop
int3
popa
mov
aam
repnz
neg
jg
aas
fisttpll
cld
xchg
mov
or
fnstsw
es
dec
push
xor
jno
or
cmp
and
pop
pop
mov
test
out
cmp
mov
pop
mov
lcall
xor
out
iret
mov
cmp
add
insb
fcoms
dec
pop
jl
test
lret
movsb
push
mov
xor
or
mov
pop
fmuls
into
test
decl
push
mov
std
xchg
inc
pop
add
test
cwtl
sub
lock
sti
js
push
test
mov
flds
pop
rclb
mov
out
out
loop
sub
jle
xor
and
push
gs
inc
in
aad
flds
adc
hlt
jmp
imul
mov
xor
test
mov
in
imul
adc
cmp
sbb
xlat
dec
jecxz
movsb
pop
dec
push
out
jp
mov
mov
fistl
pop
out
xchg
mov
jnp
cmc
cmp
or
scas
jecxz
outsl
push
sbb
loop
popf
sub
scas
clc
cmp
mov
mov
jb
fsubrp
cmp
fsts
dec
jo
xchg
or
lret
aaa
and
jecxz
dec
mov
in
pop
bswap
or
and
mov
gs
pop
icebp
fs
inc
add
dec
adc
or
adc
and
fwait
add
jo
in
jecxz
jns
pop
movsl
fnstsw
and
jns
test
stc
out
adc
push
scas
outsb
iret
pop
add
inc
lcall
daa
test
lret
fs
jne
mov
outsl
ret
test
es
jo
cmpb
push
mov
cmc
cmp
paddusb
push
in
mov
ss
sbb
or
mov
xor
xchg
jbe
jge
fs
loop
xchg
arpl
push
test
outsb
sub
je
jg
incb
dec
fstps
aas
or
lods
dec
mov
in
in
int3
sbb
adc
out
pusha
xchg
loop
mov
mov
xor
pop
adc
push
outsl
pop
mov
mov
xchg
cmp
pushf
push
dec
roll
jp
daa
sahf
cmp
movsl
push
or
out
pop
jp
rorb
fiadds
mov
dec
dec
sbb
cmpsl
out
fildl
jbe
cmc
out
in
sarb
push
in
aaa
cmp
daa
scas
add
outsb
outsl
or
mov
mov
cli
fnstenv
sahf
push
push
ud2
lahf
pop
test
inc
or
imull
out
and
lcall
and
jo
fisttpl
stos
loope
jb
repz
mov
nop
in
lock
jg
gs
push
lret
imul
mov
mov
bound
mov
push
cld
jbe
or
jge
cmpsb
dec
inc
mov
xchg
aas
lds
xorl
mov
dec
cli
push
mov
or
mov
mov
xchg
leave
xorb
repnz
push
mov
fwait
or
mov
jnp
test
jmp
shr
adc
sbb
cmp
jae
inc
xchg
hlt
xchg
sbb
xchg
or
ror
cltd
mov
pop
stos
dec
sub
xchg
xor
jl
ja
dec
or
cli
adc
insl
xchg
push
inc
mov
dec
int3
mov
sahf
cwtl
cmp
lahf
pop
stc
scas
dec
add
jo
adc
mov
roll
or
leave
and
pop
outsb
or
pop
lods
xchg
xchg
push
ds
cltd
sahf
fldcw
mov
add
inc
lods
dec
cmc
lcall
mov
cmpsl
aas
aas
les
sub
faddl
ss
pop
imul
mov
aaa
adc
mov
stc
push
arpl
push
into
in
incb
jl
push
jl
or
pop
xor
cmp
js
mov
cmp
pop
mov
es
or
xor
and
ds
out
ds
jge
push
add
adc
cmp
fistl
cmp
std
lret
mov
mov
xor
mov
cwtl
repz
sub
mov
in
scas
mov
lcall
outsl
push
cwtl
scas
in
xor
leave
cmpsb
cmp
lds
pop
sub
sub
and
jg
loop
mov
orb
mov
das
mov
stos
mov
adc
inc
pop
xchg
mov
out
and
pushf
js
dec
jecxz
add
stos
sahf
sbb
hlt
gs
and
mov
pusha
lcall
add
or
sub
movsb
xor
lret
jnp
fcompl
scas
daa
adc
fcmovb
mov
in
pop
sarb
sti
mov
xor
mov
rorb
push
out
std
push
jle
and
sbb
je
lods
mov
sbb
xor
mov
and
or
rcl
iret
xor
xchg
repz
pop
rorb
aaa
pop
lock
cli
repz
mov
cmp
mov
xor
aaa
add
adcb
add
adc
lea
bound
mov
add
aas
je
mov
sbb
jb
xlat
aas
add
pop
repnz
cmpxchg
push
out
dec
add
call
enter
pop
dec
pop
jns
push
je
leave
jmp
ret
mov
outsb
les
or
dec
addl
pop
jge
movsl
js
call
xor
popa
loop
icebp
inc
cmp
cmpsl
xchg
xor
in
push
inc
mov
adc
inc
sbb
movsl
stc
fs
xchg
scas
fisttpll
push
fs
lods
enter
xchg
sarl
call
cmp
lds
inc
imul
xchg
cmp
xor
repnz
rolb
lods
jge
cmp
inc
xlat
int
int
repnz
push
insl
ja
jle
lcall
sahf
pop
mov
xor
insb
mov
fwait
dec
push
ret
jge
mov
jg
or
push
movsl
movsb
stos
movsb
push
cwtl
js
inc
xchg
stc
imul
cmp
mov
mov
mov
jb
jns
insb
aad
shr
movsl
sbb
imul
mov
shlb
clc
xchg
mov
fists
inc
jmp
xchg
jle
jne
adc
mov
mov
outsl
arpl
out
add
mov
out
push
cmpsl
pop
fimuls
lret
pop
jl
int3
pop
repz
ret
mov
int3
mov
out
call
sbb
leave
cltd
fs
bnd
ficoml
mov
test
popl
in
and
jb
iret
inc
adc
xor
push
and
bound
ljmp
orb
bnd
inc
call
xor
or
pop
mov
xor
dec
and
fnsave
sub
mov
dec
lahf
movsb
pop
push
sub
jmp
lock
std
jne
xor
lods
sub
xor
cs
outsl
and
pop
sbb
ret
lods
or
mov
jne
lods
or
fwait
inc
and
cmp
repnz
aam
iret
packssdw
xor
cmp
xchg
dec
inc
pusha
in
stos
and
ret
dec
sub
adc
fs
jmp
and
and
inc
repz
fcomip
push
int3
roll
ficompl
mov
mov
in
adc
flds
adc
notl
adc
int
or
mov
lds
and
cld
dec
or
jle
jl
cmp
sahf
filds
lahf
mov
push
cmp
xlat
jge
sbb
faddl
test
test
dec
or
and
shl
ja
mov
inc
stc
adc
mov
ss
adc
scas
push
add
cmpsl
add
test
or
scas
repz
jmp
movsb
dec
in
xor
xchg
and
adc
inc
out
decl
test
push
popa
jne
je
xchg
push
jge
jl
cmp
xchg
or
data16
lcall
mov
mov
pop
pop
dec
outsb
shlb
xor
in
jmp
xchg
fists
cmc
aam
and
insb
mov
test
mov
add
loopne
pop
jmp
sub
inc
mov
out
out
mov
sarb
inc
in
pop
fisubs
daa
jmp
or
add
xor
mov
into
out
xchg
xor
cs
jecxz
inc
dec
mov
pushf
gs
hlt
leave
sbb
push
repnz
lods
push
or
sbb
stos
fs
and
dec
je
les
push
call
pop
dec
cmpsb
push
pop
and
popf
dec
inc
scas
repz
fdivl
jb
js
sti
adc
push
jecxz
mov
aaa
loop
test
jns
bswap
mov
mov
ret
arpl
and
jne
dec
pop
aad
fsubl
test
outsl
ds
enter
cmpb
notb
sub
push
sbbl
and
das
or
xchg
jae
mov
pop
fwait
xor
mov
loop
cmp
and
xor
mov
lods
push
inc
lea
inc
xchg
imul
pop
inc
sarl
or
loopne
out
mov
mov
add
jl
iret
gs
adc
jge
xor
inc
and
pop
rcrb
cwtl
cmp
sub
outsl
dec
adc
or
mov
sbb
jl
dec
push
cmpsl
mov
shrb
lea
pop
aaa
mov
ljmp
mov
in
jns
adc
mov
mov
daa
push
aaa
movsl
cli
add
in
push
pop
sub
or
xor
lods
xchg
inc
je
and
mov
mov
sbb
jo
or
xchg
insl
arpl
fst
ret
out
sbb
cmpsl
push
rcrb
push
imul
ret
stos
and
les
sub
addb
add
cli
adc
fstp
aaa
mov
xchg
pop
mov
clc
fwait
shll
push
iret
cmp
xorl
data16
je
jecxz
xchg
mov
and
sahf
arpl
xchg
add
hlt
cld
adc
call
mov
mov
xchg
push
out
pusha
cld
xchg
cmp
ss
lods
cmpl
mov
testl
out
jb
outsl
int
jno
adc
stos
xchg
add
or
cmp
cmpsl
mov
or
jge
sarl
hlt
inc
add
in
insb
lret
mov
bound
popf
ret
mov
mov
iret
addb
outsb
mov
jne
jbe
or
lret
or
repz
xlat
adc
mov
out
sbb
cmp
add
push
stos
packssdw
push
mov
movsb
sbb
jle
lret
mov
test
scas
rorl
ja
jmp
cmp
cmp
into
push
subl
sbb
cmp
xchg
push
mul
jae
cmpsl
xchg
push
sub
hlt
loop
fs
shrl
jnp
push
aad
lods
enter
arpl
rorl
or
hlt
xor
cmpsb
mov
or
cmp
dec
and
outsb
cmp
rol
push
dec
lret
cmp
and
add
or
cwtl
push
push
stos
mov
push
nop
fidivs
xor
jbe
mov
fists
cli
inc
pop
mov
or
loop
fstl
sub
or
push
mov
in
data16
mov
enter
mov
and
add
push
pop
fcomi
push
cmpsb
and
cld
rcrb
mov
pop
and
leave
fdivp
aad
push
movaps
ja
xchg
push
mov
test
push
lods
call
xchg
fs
jle
cmp
jns
pop
mov
adc
push
aas
pop
loopne
pop
push
push
adcb
stos
mov
inc
fisubrl
jmp
popf
lds
nop
mov
orl
push
push
pop
jge
fs
jmp
sub
push
cmp
adc
icebp
sub
adc
xchg
sub
add
pop
out
aam
xchg
cmp
dec
shll
cwtl
xchg
aas
movsb
outsb
test
popa
leave
loopne
in
fs
sub
jae
in
cmp
jnp
push
xchg
pop
sub
cmc
xchg
jmp
push
rcrl
dec
loopne
sahf
out
push
sarb
fsubrs
inc
mov
call
mov
cld
not
add
push
cmp
cmpsb
pop
inc
movl
adc
mov
push
sub
addr16
jmp
ret
mov
lods
test
dec
xchg
xchg
cmp
and
nopl
test
cmpsl
pop
icebp
cmp
lea
out
inc
xor
adc
xor
gs
lcall
adc
or
dec
cmp
loope
xor
into
push
sub
dec
sti
inc
jle
pop
mov
add
mov
pusha
jbe
jno
xchg
scas
pop
or
xlat
test
cmp
pushf
lods
xor
and
and
xchg
cmpsb
and
and
dec
loope
mov
jne
push
bound
jae
repnz
daa
in
mov
imul
movsl
adcl
jmp
notb
and
cs
xor
add
loop
call
inc
pushf
call
jle
inc
jae
dec
or
sti
push
push
and
popf
push
ret
repz
or
cltd
dec
repz
add
mov
xor
cmp
jge
jbe
rcll
test
cmp
outsb
nop
sbb
push
lock
dec
sub
scas
loope
in
cmpsl
es
add
adc
mov
fisubrs
dec
std
cmp
out
fcomps
pushl
push
mov
inc
cmp
xor
jmp
scas
xchg
in
dec
clc
fwait
icebp
adc
cmp
das
push
popl
xor
xchg
jnp
outsl
clc
jp
push
push
fadd
addr16
xchg
jne
jns
repnz
les
cmc
mov
adc
xor
imul
xor
dec
pop
fsub
fs
pop
lahf
xor
aas
rorl
adc
fstps
imul
in
into
xor
das
scas
sbbl
int3
cltd
mov
loopne,pn
dec
mov
test
outsb
or
aad
mov
ja
and
xchg
fldenv
aaa
jmp
jle
outsb
cmc
xor
mov
aad
mov
and
or
lahf
cltd
mov
sub
cmp
inc
rcr
ss
mov
in
leave
ss
sbb
sbb
xchg
lds
into
push
mov
cmp
lods
pop
sbb
lret
xchg
and
dec
add
mov
ja
xor
cmpsb
xchg
mov
into
mov
xor
mov
das
push
aad
sub
xchg
jmp
adc
arpl
or
ficomps
fisubrl
pop
push
or
les
cwtl
sbb
mov
aaa
ja
popf
ret
mov
pop
daa
test
bound
xor
cmp
out
movsb
mov
sahf
push
and
mov
or
lods
dec
adc
push
pop
and
push
jge
scas
cli
fistpl
pop
or
mov
mov
mov
fiaddl
push
mov
addl
cs
addr16
movsb
xchg
push
pusha
inc
push
and
inc
outsb
xor
inc
lret
sbb
test
mov
icebp
test
out
mov
dec
mov
mov
fwait
in
fwait
sbb
sbb
cmpsl
test
scas
pop
jne
movsl
dec
fs
fildll
xchg
sub
sub
sbb
jb
cmp
aam
imul
je
inc
mov
sub
aam
leave
ret
push
or
aaa
cmc
daa
pop
aad
imul
xchg
xor
add
push
pop
js
outsl
cmp
mov
hlt
cmpsb
add
push
mov
in
enter
xor
cmp
clc
pop
mov
mov
push
mov
sahf
outsb
in
and
pop
lret
xor
push
pop
mov
inc
test
adc
scas
clc
and
jl
mov
and
mov
pusha
imul
mov
out
repnz
mov
cmp
fwait
leave
test
or
dec
or
jbe
pop
push
or
push
sbb
mov
into
fs
out
sub
repnz
mov
xchg
mov
in
std
adc
xor
xchg
push
iret
fistps
add
dec
cmp
iret
inc
sbb
xchg
inc
jg
pop
pop
icebp
fwait
loopne
mov
fstpl
mov
xchg
ja
daa
lock
lret
test
adc
xchg
xchg
add
incb
aam
out
mov
cmc
xchg
or
sahf
dec
rolb
xor
dec
es
push
mov
repz
push
gs
adc
push
jmp
imulb
outsl
lret
fwait
loope
mov
pop
pop
mov
push
pop
mov
mov
xchg
sgdtl
dec
test
jg
call
xchg
mov
cmp
jne
shll
mov
dec
addr16
ja
icebp
push
sbb
and
sub
aam
cmp
jl
mov
jp
cwtl
jl
sub
adc
cmp
stos
xchg
pop
mov
mov
sbb
insl
sbb
push
push
or
pop
cmp
push
ss
insb
push
dec
dec
fstpt
enter
dec
jp
shl
push
aas
cmp
in
test
cmp
push
scas
fsubrl
push
lock
jo
rorl
lret
lods
scas
lods
adc
inc
inc
shlb
adc
stos
mov
add
aas
cmc
es
push
push
mov
orb
movsl
jo
xlat
je
fimuls
xchg
dec
es
inc
jno
or
jmp
cmpsl
and
push
mov
js
popa
je
mov
inc
or
xchg
pop
pop
xchg
daa
jge
lods
pop
int3
sbb
sub
jno
daa
sbbb
daa
icebp
push
xchg
add
jo
jns
cmp
cmp
outsb
repnz
mov
fsubl
jecxz
mov
outsb
pop
adc
push
xchg
ucomiss
aaa
aam
xor
imul
mov
xlat
mov
hlt
daa
test
in
in
pop
sti
pusha
xor
cmpl
es
dec
insl
fdivrl
jmp
fdivl
sbb
dec
cmp
xor
pushf
adc
movsl
mov
clc
aam
loop
push
lcall
imulb
shl
rcll
push
call
push
mov
ds
mov
dec
mov
insb
mov
xchg
mov
pop
push
inc
dec
out
adc
jp
clc
outsl
mov
xchg
fwait
stos
ljmp
std
mov
out
pop
mov
or
or
pop
cmp
cmp
xor
inc
insl
mov
adc
mov
adc
test
jl
pop
adc
jle
icebp
push
add
mov
das
daa
movsb
xor
cmc
int3
mov
add
out
shrb
mov
js
cmpsl
popf
notb
out
fists
hlt
cmp
imul
adc
add
sbb
inc
out
mov
ret
jmp
popa
out
loop
lret
inc
sub
popf
mov
mov
add
cmp
ret
in
or
jp
push
jne
sub
push
mov
xor
xchg
inc
xchg
pop
icebp
add
push
fwait
lock
adc
test
jp
add
push
inc
outsb
scas
pushf
fidivrs
sti
adc
ja
mov
fcompl
mov
repnz
fwait
cld
xchg
aad
lea
push
sbb
cmp
lods
cwtl
mov
js
shrb
cmp
sub
add
roll
cmp
notb
ljmp
lea
jbe
loopne
sbb
lea
shrl
pop
clc
movsb
popa
cld
or
lret
cltd
xor
push
push
xchg
pop
add
mov
fnsave
movsb
cwtl
clc
lret
shrl
jecxz
adc
sbb
push
mov
loope
test
stc
xchg
pop
cmp
jecxz
cmp
aad
cmpsb
cmp
arpl
jp
dec
fstl
mov
push
inc
mov
mov
dec
fsubr
sub
inc
jmp
adc
sahf
je
cld
xchg
pop
ficoms
pop
jg
in
add
pop
rorl
iret
stos
xchg
adc
inc
xor
pop
push
aam
sbb
cmpsb
shlb
pop
js
xchg
es
cmp
push
sbb
pop
loopne
mov
rcrb
sbb
rorb
inc
imull
int3
mov
push
adc
leave
mov
xchg
clc
icebp
pop
sbb
cmp
fisttpll
cmp
mov
pop
lret
je
jg
pop
inc
test
out
xor
lret
mov
scas
cltd
cwtl
cli
out
outsl
std
stc
cmp
jne
loopne
push
cld
push
mov
out
sbbb
sub
iret
outsl
inc
pop
mov
adc
pop
dec
inc
sub
add
xchg
sti
jb
dec
scas
mov
mov
inc
and
popa
dec
lahf
xchg
je
jbe
lret
add
adc
ret
cmp
adc
ljmp
mov
xorb
enter
lds
pop
push
and
xchg
ljmp
outsl
xchg
pop
push
in
adc
or
ret
jl
jge
test
call
clc
cmpsb
jbe
push
pop
out
xor
add
or
jecxz
ja
jge
ret
xor
paddb
jge
das
mov
inc
jne
cs
test
fisubl
fs
pop
lret
sub
cld
sbb
jle
aaa
xor
cmpsl
je
in
stc
int3
mov
aaa
add
add
stc
dec
jg
cmp
push
and
insb
xchg
lahf
adc
jbe
or
jge
decb
rcrb
cmpsb
mov
call
mov
rcrl
movsb
dec
pop
test
xchg
hlt
cwtl
push
into
fimuls
mov
dec
add
jb
mov
arpl
jmp
mov
aam
cmp
fadds
jge
add
mov
int
jge
lods
cmp
xchg
fdivrs
sbb
lahf
inc
mov
ret
popf
push
sbb
in
pop
rolb
jbe
pop
pop
mov
iret
xor
stc
jmp
push
cwtl
pusha
bound
xchg
cmp
repnz
imul
inc
jmp
insl
imul
push
mov
xchg
pop
sub
mov
data16
pop
push
clc
cmpsb
or
and
cwtl
cltd
jg
adc
pop
xchg
test
aad
sub
test
les
pop
jns
inc
roll
jp
pop
stos
int
mov
je
pop
jb
mov
sub
aaa
pop
xlat
or
sti
cmpl
mov
sub
jle
sbb
sahf
mov
lock
sahf
sbb
or
shl
cmpsl
aam
imul
pop
pop
xchg
ds
sub
inc
lds
dec
test
loop
cli
out
das
pushf
sub
mov
iret
or
xchg
and
sahf
mov
push
mov
ljmp
out
jmp
popa
sahf
dec
push
ficompl
and
mov
inc
orl
in
inc
or
cli
and
pop
lock
push
in
push
adc
dec
outsl
loop
andl
inc
fimuls
adc
test
mov
mov
les
sub
pop
jecxz
lret
jbe
xchg
loope
mov
addl
add
and
pop
jae
mov
inc
xchg
xchg
enter
jno
cmp
adc
xor
dec
xchg
fwait
mov
mov
in
jns
cmc
jge
mov
push
adcl
fnsave
push
or
das
push
xchg
fstl
sbb
xlat
je
mov
aam
xor
stc
int
xor
dec
test
test
imul
stc
sub
and
and
ds
lahf
into
jl
insl
mov
loop
push
mov
adc
xlat
inc
xor
cmp
hlt
adc
jo
cmp
jo
xlat
push
adc
push
push
loope
sbb
inc
cmp
sbb
std
mov
push
faddp
out
les
push
xchg
aad
test
push
push
mov
mov
push
fcmovnu
pop
ljmp
aad
dec
aam
loop
aaa
movsb
outsb
dec
daa
xor
jbe
push
cmp
hlt
add
movsb
aad
push
inc
dec
loopne
mov
dec
inc
inc
ja
iret
push
jbe
loopne
sub
in
fwait
jmp
push
out
xchg
cltd
mov
je
push
lea
cld
xchg
or
adc
sub
pop
lcall
arpl
fistpll
cmp
bound
dec
push
add
mov
mov
or
jae
jns
and
cmp
imul
or
xor
sbb
test
imul
jecxz
pop
mov
and
sub
ret
call
adc
mov
push
dec
pop
insl
stos
pop
sub
shll
lock
sub
or
and
and
add
or
adc
out
pop
jnp
push
lea
sbb
movsb
test
sbb
push
outsl
jl
lahf
sbb
push
inc
adc
incb
and
push
mov
call
push
add
std
shlb
and
and
out
pushf
jnp
aaa
mov
cmpsl
mov
test
dec
bound
dec
andb
std
xchg
es
xchg
push
xchg
scas
mov
cmpsl
popa
jbe
sbb
rorl
push
loope
out
mov
adc
add
ss
inc
xchg
fisubs
mov
out
cmc
std
mov
sbb
mov
fstpt
and
test
and
lcall
loop
pop
cmp
xchg
sub
pop
mov
jg
popf
repz
les
mov
je
cmpsl
pop
and
shll
js
xorb
dec
orb
pop
scas
dec
cltd
push
sbb
movl
les
or
movsb
push
add
repz
sbb
rcll
or
addb
das
cmp
sbb
test
sub
outsb
rcll
pop
xlat
out
cli
repnz
pop
js
mov
test
jae
push
sub
mov
mov
mov
cmpsb
mov
or
repz
sbb
jne
clc
fwait
dec
pop
scas
mov
xor
rcrl
imul
hlt
mull
sub
push
ja
jno
sub
cltd
lret
cmp
clc
dec
mov
mov
adc
out
fsubrp
fmull
fdivrs
test
xlat
loopne
pop
mov
jns
mov
insl
pushf
sbb
jae
ja
sbb
inc
ljmp
inc
push
lret
js
inc
fdivl
xor
mov
imul
mov
dec
out
mov
jo
mov
hlt
sbb
pop
nop
xor
cmp
add
push
test
or
clc
and
enter
fsubrs
cli
push
sbb
xor
xchg
out
ss
repnz
lcall
xor
mov
jno
sahf
lret
pop
js
cs
push
fs
decb
das
in
loop
into
andl
and
xchg
pop
jmp
pop
mov
sbb
sahf
mov
mov
xlat
testl
mov
mov
dec
test
add
loop
mov
addl
je
inc
cmp
sbb
loopne
lcall
iret
iret
cmpb
fbstp
pop
sub
ljmp
test
and
mov
lock
and
jmp
cmp
mov
jbe
popf
push
decb
mov
das
sub
test
sub
pop
push
add
jnp
cli
bound
sti
push
cmp
insl
ljmp
js
call
in
sbb
jnp
inc
aam
shrb
xchg
repz
in
lock
fistl
sbb
inc
jmp
shll
adc
sbb
sbb
add
mov
mov
pop
push
push
jns
aaa
aam
cmp
dec
add
ss
es
dec
pop
xchg
sub
sbb
fs
mov
notl
repz
mov
adc
mov
xchg
jbe
je
into
call
jo
popf
pop
mov
in
test
test
movsb
int3
or
int3
cmp
test
cli
mov
pushf
pop
in
lcall
push
jmp
lds
movsl
adc
or
xchg
pop
test
cltd
jo
sub
dec
pop
clc
sbb
insl
sub
psubusb
outsl
or
xchg
int3
and
mov
xor
mov
jle
dec
fstp
xor
iret
or
xor
dec
push
push
mov
je
movsl
cmc
fnstsw
aam
repz
lcall
or
jns
daa
loopne
mov
cmp
cmp
mov
sub
pop
xchg
lds
lret
imul
jle
and
xor
adc
xchg
pop
adc
fwait
sbb
adc
lock
stos
or
es
jle
xchg
push
ss
pusha
sbb
pop
outsl
xor
gs
dec
mov
push
and
mov
lret
loop
add
mov
pop
pop
inc
lds
xchg
and
mov
aas
dec
xchg
inc
ja
sbb
push
ret
loop
xor
fstpl
clc
andb
sti
push
inc
mov
rcr
andl
and
xchg
daa
or
mov
sti
mov
out
lret
ss
mov
xchg
jnp
addr16
inc
jecxz
repz
push
xor
out
aas
shll
cmpsl
in
insb
imul
inc
xchg
xchg
xor
mov
stos
leave
xor
in
sub
xchg
sbb
jp
push
test
xchg
int
mov
and
daa
jae
lock
cmp
push
pushf
mov
je
lret
jo
ret
xchg
xor
outsl
out
or
lds
lea
push
pop
or
shrl
aas
adc
push
es
js
scas
mov
push
cmc
ret
pusha
testb
jge
xchg
leave
sti
mov
dec
lret
push
mov
es
fsub
jmp
mov
sub
ret
add
pop
fstpl
pop
loopne
int
push
in
fsts
shr
pop
in
sbb
mov
repnz
ret
cltd
push
inc
fistpll
push
lret
lret
xorb
sub
in
mov
sub
hlt
inc
mov
lock
or
shr
fwait
sub
mov
sub
inc
cmp
out
jle
das
add
sub
cs
pop
adc
popf
and
mov
repz
dec
lods
ja
arpl
testb
or
in
repnz
in
mov
clc
push
dec
pop
cmp
imul
inc
push
das
aad
push
pop
lea
ror
shr
dec
xchg
call
in
and
test
les
das
xchg
cmp
clc
out
mov
mov
mov
adc
data16
popf
ja
mov
stos
fptan
repnz
lock
loope
inc
stos
repz
stos
and
shll
fwait
sbb
push
mov
push
add
mov
adc
pop
stc
gs
mov
xchg
inc
cld
icebp
dec
lcall
push
pop
sbb
mov
or
inc
test
xchg
sbb
adc
popf
rclb
cmc
loopne
fbstp
pusha
push
push
push
cmc
xchg
sbb
push
jns
cmp
dec
in
pop
xchg
jl
sbb
jne
loopne
fldl
xchg
in
add
and
sbb
lock
je
fisubrl
jl
add
dec
push
adc
push
call
jne
ret
cli
popa
je
fsub
ja
es
mov
ss
ds
scas
xchg
orl
add
sbbl
out
loopne
ficomps
aaa
cs
adc
in
mov
or
scas
test
outsb
cmp
test
and
push
sbb
xchg
lret
pop
popf
fwait
repz
repnz
mov
int
push
pop
lods
adc
jg
mov
mov
imul
sbbb
adc
scas
sbb
cmp
lock
test
xchg
fs
pop
jb
pop
roll
repz
shrl
movsb
inc
in
ljmp
hlt
push
and
sti
xor
outsl
loopne
jmp
ficoml
push
inc
pop
mov
test
imul
loopne
adc
xchg
iret
ret
jnp
cmpsl
pop
dec
addr16
popf
mov
jge
and
popl
je
xchg
ds
cmp
out
jnp
dec
fsubr
pop
aas
mov
sti
sbb
jae
and
fdivrl
or
lods
sbb
sub
push
pop
test
gs
and
adc
cwtl
jae
lods
xor
mov
pop
stc
daa
push
push
lock
jo
push
dec
stc
daa
or
sub
push
icebp
ret
jg
sbb
in
adc
rcll
gs
lods
xor
popf
fdivs
push
or
or
daa
xchg
popw
xchg
loopne
int
lock
in
test
xchg
mov
dec
fdivl
inc
dec
aas
dec
outsb
loopne
lock
mov
mov
sahf
adc
mov
insl
hlt
ret
popa
push
in
fnsave
lds
jl
push
in
fwait
pop
adc
addl
xchg
aas
pop
mov
rol
ljmp
or
mov
in
mov
mov
jge
push
push
aad
lret
jle
sti
mov
xchg
mov
pmullw
cli
int3
sbb
mov
cmp
ret
or
in
xor
jmp
lock
cltd
shl
mov
decl
movsb
adc
pop
xor
in
data16
out
pusha
imul
xchg
cld
push
mov
pushf
xor
sub
in
lret
adc
fs
fistps
insb
outsb
xor
sarl
jnp
rorl
push
nop
repnz
mov
and
adc
idivb
das
jns
lret
test
test
or
das
add
mov
fisubl
mov
mov
shlb
mov
or
loopne
dec
xchg
decb
lods
sub
mov
mov
jns
pushf
fbstp
push
pop
push
movsl
push
fstp
pushf
cli
xchg
decl
xchg
icebp
xorl
pop
jmp
or
add
inc
cs
stc
pop
pop
cmpsb
and
and
push
jnp
call
xor
repnz
add
push
push
insl
push
jmp
movsb
popf
iret
in
test
add
imull
push
test
sti
cmpsl
sbb
xchg
repnz
jnp
stos
pop
xor
inc
add
xor
outsl
lret
push
xlat
xor
inc
or
mov
cli
sbb
jle
adc
sub
outsb
adcl
sub
pusha
and
adc
push
mov
push
test
insb
pop
xor
or
sti
js
out
in
and
shll
push
pusha
xor
sbb
movsl
lret
mov
imul
pop
cltd
mov
xchg
dec
sub
aad
mov
xchg
xorb
sub
pop
icebp
jge
repz
add
xchg
sarl
test
xchg
jo
sbb
jmp
subb
in
bswap
jecxz
ret
xor
sbb
cwtl
lods
fdivrs
roll
or
out
int
es
adc
adc
iret
push
clc
push
and
add
scas
jmp
pop
stos
jg
sti
sti
push
pop
std
mov
divl
adc
mov
pop
add
js
pop
dec
push
inc
dec
andb
mov
mov
shrb
inc
les
push
cmp
ret
ret
imul
push
inc
xchg
jecxz
mov
push
add
pop
xchg
loopne
gs
mov
pop
pushf
push
enter
cmp
pop
or
mov
popf
js
adc
add
pop
lods
push
add
std
sub
ret
in
bound
arpl
icebp
mov
jp
mov
inc
and
jmp
sti
sbb
imul
sub
jge
add
push
lahf
lods
push
mov
xor
add
shrl
cmp
cld
scas
cltd
sbb
xchg
mov
push
and
sub
mov
fsubs
pop
push
xchg
fucomip
push
sub
fcoms
xor
into
add
add
jnp
lcall
dec
sbbl
xlat
fwait
ljmp
xchg
adc
jl
pop
hlt
xchg
js
je
scas
dec
pushf
dec
mov
fidivs
scas
mov
jbe
sbb
lret
add
mov
push
mov
cmpb
movsl
push
xor
aam
jo
sbb
mov
jecxz
nop
mov
jae
pop
rcl
fistpll
fisubs
xchg
xchg
lods
push
stos
mov
mov
in
push
nop
fimull
cs
mov
sarb
arpl
jns
movsb
mov
and
inc
pop
xchg
inc
outsl
adc
mov
lods
lods
sti
xchg
or
mov
jno
je
adc
sbb
repnz
out
iret
mov
imul
or
jns
lods
sub
cld
adc
int3
mov
sub
add
push
sbb
pop
sub
adc
push
daa
andb
xlat
mov
inc
pop
and
fsubr
pop
test
popa
fs
inc
jl
jnp
push
or
push
subl
push
nop
push
lret
jo
mov
das
pop
daa
push
jns
push
dec
ss
inc
sub
and
int3
xchg
aaa
test
adc
hlt
ja
dec
jmp
xchg
in
push
lods
repnz
cwtl
xchg
mov
fisttpl
loop
movsl
cs
xchg
mulb
mov
in
sub
addr16
pushf
mov
cmc
popa
call
mov
incl
lock
cmp
push
stc
idivb
dec
aaa
lcall
lock
mov
dec
mov
jb
aaa
sti
popf
pop
or
test
xchg
aaa
pop
test
data16
jb
pop
nop
lret
imul
add
lods
loop,pn
push
pushf
push
lds
aam
dec
mov
fisttpll
das
fidivs
cwtl
xor
call
lret
dec
callw
jae
sbb
ret
and
push
jnp
jae
jbe
outsb
jmp
movsl
xor
sub
push
cmpsb
fistl
mov
fldenv
cmp
sub
sbb
imul
in
or
jp
std
aad
test
pop
adc
lock
push
andb
or
enter
inc
fwait
ss
imul
dec
inc
icebp
lock
inc
push
xchg
pop
daa
leave
imul
xchg
pop
adc
and
xchg
ret
push
xor
pusha
ret
and
or
fidivl
inc
dec
or
jmp
in
fcoml
inc
fdivrl
xchg
mov
test
mov
xor
out
xchg
sbb
stos
jge
push
adc
es
xchg
lret
pop
dec
jmp
and
popf
push
stos
mov
xchg
xor
and
scas
mov
test
jle
xlat
mov
push
out
push
push
scas
pushf
push
cmp
and
and
enter
add
outsb
aas
sahf
test
fcomi
sub
adc
adc
mov
add
jnp
mov
cltd
xchg
daa
scas
sbb
scas
and
lret
setge
stos
cli
sub
mov
or
adc
fistpll
jge
mov
fs
enter
jge
repz
in
mov
movsb
mov
sahf
out
xchg
sbb
push
in
imul
jno
adcb
call
ljmp
fdivrs
add
and
or
lea
mov
loopne
ljmp
rcll
push
in
cwtl
sub
ficoml
sbb
xor
push
stc
mov
add
jl
imul
inc
sub
roll
inc
sbb
adc
mov
or
mov
js
int3
and
xchg
pop
add
test
mov
lods
rcll
aas
push
mov
xor
cwtl
icebp
add
sbb
mov
repz
test
je
jle
lea
adc
insb
cmp
mov
fneni(8087
cmpsb
movb
mov
or
push
pop
daa
lea
sbb
or
pop
fists
bound
stos
cmp
mov
mov
xor
push
stos
enter
jb
xchg
jl
sub
in
pop
xor
pop
xlat
mov
loopne
push
xlat
loop
mov
pop
pop
jns
adc
jecxz
cmpsl
xchg
mov
fstpl
iret
xchg
push
sub
into
lods
adc
mov
aam
iret
cmp
stos
ljmp
or
in
xchg
dec
test
popf
fisubrl
sbb
push
cltd
xchg
inc
jae
mov
popa
mov
jbe
or
call
mov
repz
inc
xor
jge
pop
pop
outsb
inc
sti
or
stos
scas
repz
iret
cwtl
cmp
xchg
sub
mov
sarb
mov
xor
sub
sub
in
push
sbb
or
mov
sub
mov
xchg
mov
cmc
movsl
xor
add
push
mov
repnz
mov
inc
push
sbb
outsb
fs
repz
xchg
aam
pusha
mov
xor
cmp
lcall
data16
dec
hlt
scas
jae
mov
and
out
out
je
data16
addr16
shll
test
scas
lret
mov
jne
movsb
sti
pop
jmp
movsb
dec
sbb
xchg
jno
mov
hlt
sbb
and
inc
jmp
push
sti
cmc
pushf
inc
pop
push
out
xchg
push
inc
movsb
jns
out
mov
jns
aas
insb
push
pop
jg
or
mov
add
cmp
jl
sub
xchg
scas
mov
lcall
aas
cmpsl
mov
xchg
jle
inc
pop
adc
jle
mov
jg
movsl
adc
sahf
add
mov
pop
cmp
xchg
push
leave
out
push
xchg
js
mov
mov
dec
xchg
lcall
rcrl
jg
test
jnp
cmp
cmpsb
jo
lock
or
test
in
lret
out
pop
inc
add
daa
lret
mov
sbb
xor
lds
sub
fs
push
flds
stos
cmp
xchg
sub
mov
testb
in
rorb
aad
std
jl
inc
mov
or
fsubrs
aaa
out
cmp
inc
test
mov
cmp
das
cs
enter
jecxz
push
jb
mov
fucomi
cmp
dec
add
les
lcall
jge
push
loopne
jge
adc
clc
into
push
pop
ljmp
xchg
insl
sbb
outsb
push
mov
mov
mov
or
mov
inc
addr16
test
inc
int3
jno
das
and
jb
adc
push
adc
xchg
ret
mov
inc
pop
andl
mov
dec
mov
xchg
stos
xor
dec
add
push
xchg
inc
pop
jns
jle
inc
and
roll
insl
sub
xchg
ret
xchg
popf
and
incl
jmp
push
dec
jno
pop
mov
in
mov
jge
xchg
xchg
test
pop
add
jo
and
fwait
xchg
add
and
mov
cmpb
nop
nop
mov
pop
jecxz
in
fs
ljmp
out
mov
pop
cmp
in
add
pop
inc
push
pop
loope,pn
pushf
sub
pop
addr16
xor
push
dec
icebp
dec
pop
add
stos
dec
sarb
stos
mov
or
mov
das
adc
push
pushf
outsb
insl
mov
imul
jae
leave
int
push
nop
orb
insl
push
andb
mov
cs
mov
call
add
cmpsl
arpl
dec
and
xchg
sahf
daa
sub
icebp
xchg
push
imul
jle
inc
adcb
mov
or
cmp
cmp
arpl
jnp
aaa
fldenv
clc
inc
xchg
inc
mov
jno
insl
mov
adc
popa
lahf
imul
sbb
lcall
lds
pop
add
aas
fmull
and
mov
jg
jae
and
in
in
insl
sti
rcl
testb
in
dec
pop
hlt
mov
lahf
mov
sub
int
lret
pop
mov
lahf
push
rorl
loope
insb
adc
sub
lea
add
xor
push
or
es
mov
out
popa
sbb
or
pop
push
pop
decl
std
mov
dec
xchg
mov
sbb
jge
xlat
sub
addl
fs
inc
mov
adc
cmp
xchg
mov
and
movsl
aaa
dec
cmp
jno
jbe
xor
jns
dec
gs
fwait
push
jle
push
insl
in
jmp
ret
or
jb
outsl
and
inc
dec
test
mov
lea
in
jno
xor
fmuls
sub
les
or
sbb
add
mov
clc
addps
pop
dec
ror
sub
and
rcl
mov
movsl
xlat
sub
test
clc
dec
fcomps
stos
pusha
cmc
inc
in
or
pop
cmp
lds
fwait
loop
add
xor
daa
adc
sub
pop
xchg
sbb
pop
ja
leave
and
mov
repz
jg
add
in
or
repz
mov
sahf
stc
xor
out
enter
push
ror
cs
inc
sbb
pop
loop
add
mov
adc
xor
pop
cld
and
mov
add
jecxz
mov
ss
inc
xchg
mov
stc
je
push
cltd
and
das
jp
test
mov
pop
cmp
mov
add
enter
adc
jge
scas
fimull
das
pusha
adc
push
mov
dec
sbb
pop
xor
stc
stos
pop
adc
arpl
js
std
nop
stos
test
pop
push
sub
push
dec
cs
mov
jg
sub
or
add
shll
iret
fistpll
jbe
call
push
enter
lock
lock
mov
stos
aas
xchg
fadds
gs
push
push
pop
mov
lahf
sahf
cmc
cwtl
rolb
pop
sub
push
xchg
fimuls
mov
lock
or
jg
adc
mov
dec
mov
cmp
hlt
jo
jo
inc
xchg
or
movsl
lret
inc
je
sub
xchg
sub
push
adc
out
xchg
mov
sbb
adc
nop
iret
xor
mov
pop
cld
xor
mov
mov
jp
or
fs
mov
shll
inc
push
and
rorl
sub
sahf
sub
lret
fsubs
push
popf
scas
jmp
mov
ret
ret
cmp
sub
fstl
jbe
xor
add
leave
and
imull
xchg
or
fdivr
fs
das
test
jp
cmp
scas
mov
cs
sbb
call
shll
jne
lcall
ror
adc
and
les
aam
mov
mov
xchg
cmp
xchg
mov
sub
les
shl
int3
pop
loop
sbb
cmp
enter
iret
cmp
jp
mov
mov
aas
cs
xlat
in
xor
aad
lcall
push
insb
out
movsl
mov
addr16
fstps
fdivr
dec
and
pop
cmp
mov
xlat
dec
add
and
and
dec
shll
xor
inc
loope
cmp
sahf
mov
pusha
adc
sub
in
inc
sub
jg
arpl
pop
scas
in
iret
test
xchg
inc
pusha
pusha
pop
mov
shr
xchg
mov
test
fnstsw
mov
adc
sbb
push
pop
idivb
inc
sub
or
in
in
fbstp
mov
mov
bound
xchg
xor
bound
xchg
jnp
mov
arpl
pop
push
push
dec
daa
inc
mov
in
jecxz
fldpi
jnp
push
xchg
fnstsw
cli
call
push
lret
loop
roll
cmc
pop
aaa
adcl
rorb
shll
xor
inc
movsl
gs
js
iret
sub
insl
mov
cmp
leave
and
leave
pop
jg
push
dec
xor
adc
lea
mov
outsb
ficoms
adc
sub
push
sub
out
out
adc
pop
pop
dec
mov
mov
subl
cs
mov
jl
aad
or
push
mov
and
int3
jge
mov
mov
xchg
je
mov
and
mov
dec
sub
outsb
pop
cmpl
je
cmp
sub
add
andl
sub
loope
jl
popa
adc
cmpl
push
add
add
enter
dec
sarb
xchg
rcrl
cld
cmpsl
jmp
shll
lock
daa
mov
or
fsubr
mov
inc
mov
and
repnz
shlb
outsl
ss
std
scas
mov
push
pop
sub
xchg
adc
sub
push
scas
iret
js
cmp
popf
in
fdivs
iret
insb
in
cmp
test
std
popa
ljmp
or
enter
arpl
dec
pmuludq
les
fiaddl
xchg
test
sub
mov
pop
or
repz
cld
mov
rclb
fmul
cmp
mov
scas
xchg
test
jmp
shrb
filds
out
clc
scas
lret
fdivrl
cmpsl
mov
adc
imul
dec
mov
sbb
mov
fwait
or
out
imul
jmp
lret
and
lcall
jnp
push
cmp
jne
out
leave
cmpsl
jns
aaa
mov
fistps
bound
pop
pop
std
cld
xor
push
ljmp
xor
pop
mov
xor
add
sub
lret
mov
shlb
adc
je
test
insl
pop
cmpsb
push
sub
ljmp
enter
mov
jns
dec
push
cmc
les
fstpt
add
and
iret
insl
testb
jle
xchg
ss
dec
jp
or
mov
test
stc
fstl
push
inc
xorl
jo
fwait
pop
scas
lock
out
mov
out
pop
xor
mov
cmp
divl
dec
fwait
js
and
or
push
cmp
cmp
mov
mov
inc
mov
icebp
int
sub
setae
hlt
jno
mov
popa
xchg
cmp
xchg
enter
in
jmp
das
xor
std
mov
push
sub
arpl
pop
mov
cli
xchg
cmp
jae
cwtl
outsb
push
das
repz
sbb
lret
into
mov
xchg
cli
or
add
jp
mov
push
in
lea
mov
push
push
in
cli
or
lods
mov
ret
aam
xorb
in
in
mov
lret
stc
pop
jae
xchg
nop
pop
into
das
xor
repz
adc
push
xorb
jp
pop
insl
int
cmp
rcll
jne
cmp
adc
leave
dec
rcrl
dec
cld
xchg
call
into
jle
mov
pushf
jg
nop
dec
jno,pt
dec
or
and
in
dec
ret
test
sbb
push
jno
dec
add
xchg
sahf
xchg
inc
movsb
push
lahf
xchg
pop
mov
inc
jl
or
push
dec
cmpsb
mov
cmc
icebp
shlb
pop
aad
cltd
stos
das
mov
push
ljmp
sub
inc
push
cmpsl
mov
mov
mov
outsb
mov
test
pop
xchg
iret
push
sub
ja
sub
pop
mov
je
out
mov
fnstsw
in
mov
xchg
cmp
popf
gs
mov
outsl
testl
nop
mov
cmp
minps
or
xor
std
js
lcall
push
hlt
jno
loope
inc
cmp
mov
and
and
or
dec
adc
xor
mov
xchg
stc
outsb
xchg
jb
sbb
push
es
adc
jl
push
xchg
push
add
dec
fadds
cld
inc
mov
lds
jae
pop
jmp
sbb
or
mov
cmp
push
daa
nop
sldt
or
in
pop
push
sbb
jns
cmp
pop
stc
lahf
clc
add
sbb
pop
cmp
loopne
cmpb
mov
out
or
sub
into
bound
xchg
shl
xor
and
in
pop
xchg
and
call
test
iret
jae
jae
sbb
sub
cwtl
xor
shlb
sbb
out
xor
adc
int
sbb
dec
div
inc
adc
and
int3
push
xor
dec
mov
mov
jne
fwait
sbb
sub
jecxz
in
inc
jne
outsl
or
mov
and
test
lods
adc
jmp
pop
mov
and
pop
push
addr16
mov
fsts
mov
bswap
test
outsl
popf
adc
ja
ret
imul
stos
lret
das
loop
xchg
or
mov
push
loop
lret
fdivrp
fsubl
mov
leave
push
and
data16
loopne
movsl
and
inc
addb
push
rcrl
push
scas
sub
repz
mov
iret
out
dec
movsb
dec
scas
cmp
out
push
imul
call
ds
out
andb
or
clc
aas
daa
fmul
xchg
or
lds
je
jmp
cmpsb
icebp
pop
arpl
test
imul
xchg
pop
sub
loop
fsubrs
xchg
push
xchg
jecxz
sbb
adc
stos
jbe
in
jno
fdivr
sbb
int
sarb
cltd
xchg
mov
lcall
sbb
addr16
pop
insl
jle
push
mov
setno
pop
cmp
push
loop
push
out
std
cmp
out
in
aaa
cs
into
sarb
jg
lds
imul
das
loop
mov
mov
js
cli
out
xor
hlt
add
mov
clc
xchg
imul
push
cmpl
cs
mov
mov
repnz
inc
pop
push
push
repz
rcll
test
ret
movsl
inc
jno
ret
pop
cmp
mov
and
xlat
push
imul
xor
sbbb
enter
lret
sbb
in
aad
stos
pop
jno
cmp
inc
jne
or
cmp
hlt
out
xchg
ret
jge
fisttps
jnp
pop
mov
mov
arpl
subb
mov
mov
add
aam
xchg
iret
ds
movsl
xchg
enter
and
or
mov
mov
clc
xchg
fstl
pusha
mov
idivl
cltd
mov
cmp
daa
xchg
mov
lret
jmp
mov
dec
mov
add
orl
sti
pop
sbb
aas
sub
cwtl
js
insl
xorl
cltd
fs
xor
fbld
dec
mov
xchg
pop
cmp
xor
xchg
sti
or
fsubr
mov
and
add
sbb
cmp
dec
ret
ret
push
xor
aas
leave
stc
leave
jbe
mov
ss
sbb
mov
sub
xchg
push
imul
stos
xor
mov
outsl
clc
push
and
mov
mov
gs
int
or
rclb
repnz
popf
clc
sub
movsb
add
scas
push
aaa
lret
push
xor
iret
cs
call
lea
aas
xor
pop
mov
jb
xchg
mov
sbbl
push
push
jb
cld
push
adc
lret
mov
xchg
dec
ret
lock
jnp
or
and
insl
dec
jae
sar
loop
fdivl
inc
mov
lret
jno
push
loop
cmc
clc
add
jle
jbe
xchg
mov
lods
jae
icebp
iret
mov
stos
movsl
push
jns
cs
ret
mov
scas
pushf
icebp
dec
repnz
mov
loope
jb
dec
lods
fistpll
adc
cmp
sub
mov
sbb
scas
sbb
sbb
sub
jp
mov
xchg
fs
pusha
lds
cmp
inc
jmp
push
add
jmp
data16
xor
js
sub
mov
imul
in
add
aad
test
push
aas
jo
enter
push
cmpsl
fnsave
imul
popf
push
push
push
xlat
fwait
cmp
adc
out
aam
and
les
sahf
fisubs
out
xor
adc
ror
add
pushf
xor
dec
and
and
ja
jb
in
insl
add
outsl
sahf
sub
ret
add
icebp
rcrb
fwait
dec
push
dec
mov
sbb
sub
mov
and
mov
jge
mov
xor
shrl
push
pushf
ljmp
and
cmc
xchg
lds
mov
orl
mov
push
sarl
outsb
arpl
jecxz
test
push
and
mov
mov
xchg
xchg
push
adcl
aas
nop
xor
or
cmp
nop
xchg
mov
push
lock
ja
push
test
mov
jl
fucomip
add
pop
in
add
and
ljmp
jno
cld
mov
imul
insb
jl
and
scas
mov
xchg
adc
fisubrl
xchg
test
cmp
mov
lea
inc
lock
rclb
inc
add
jno
out
pop
fimull
aaa
imul
setle
bound
xchg
maskmovq
add
loop
dec
adc
test
inc
cli
xor
nop
add
add
xor
mul
fldenv
xlat
mov
stos
sbb
ficomps
xchg
in
jns
push
sbb
xor
push
sbb
loope
in
and
test
mov
subl
inc
stos
iret
xor
cli
sbb
jbe
sub
xchg
nop
mov
or
and
and
cmp
gs
cltd
test
fwait
mov
into
rcrb
sbb
mov
add
into
xchg
ret
sub
jbe
aad
pop
fists
divb
sbb
sbb
pop
insl
lds
loope
mov
xor
dec
jb
add
ja
roll
ljmp
je
jbe
addr16
lahf
jns
sub
cltd
loope
push
aam
sbb
and
fldl
pop
or
cmp
adc
sarl
outsl
fwait
cltd
pop
and
scas
shl
xchg
in
push
ret
mov
mov
insl
push
xchg
jno
mov
mov
iret
lea
mov
pop
ljmp
or
bound
je
jle
es
stos
out
adc
fs
push
sbbb
sub
dec
mov
adc
jne
decl
sar
push
out
pop
aad
fs
push
leave
in
out
lea
add
lock
lcall
jge
adc
es
daa
xchg
mov
cmp
pop
pmuludq
inc
test
popf
test
mov
sbb
rorb
jge
pop
lock
icebp
inc
add
aam
push
push
ljmp
iret
jge
ret
jle
xchg
test
push
popa
cmp
sti
out
cmp
sbb
add
js
pop
lret
xchg
adc
or
js
sub
test
inc
out
push
or
xor
jecxz
shll
nop
push
repnz
push
mov
mov
cmc
or
fwait
les
ret
enter
push
xchg
dec
dec
cmp
fwait
cld
jle
mov
nop
sub
sub
sbbb
pop
idiv
lahf
push
jecxz
cmpsl
mov
notl
jp
xchg
mov
push
pop
push
fidivs
movsb
jbe
pusha
push
add
out
dec
jle
sub
adcl
out
mov
lcall
mov
cmpl
mov
mov
pop
testl
rcrb
mov
pop
imul
add
sbb
inc
ljmp
fwait
test
xchg
sub
dec
cwtl
jecxz
popf
jb
add
cmc
inc
push
repnz
in
xor
fisttpl
lret
ds
mov
mov
aad
mov
repz
lret
push
mov
xchg
fsubrp
cmpsb
out
xor
rorb
shrb
xor
sub
cmp
cli
push
filds
add
loop
jne
cmp
outsl
fst
mov
pop
test
ficoml
addr16
ds
movb
push
or
mov
je
or
or
bound
adc
cmp
decb
mov
mov
mov
out
push
lea
mov
leave
cmp
mov
ret
ljmp
mov
cmp
mov
mov
adc
fxtract
xchg
sub
out
stos
mov
cs
jbe
testl
mov
pop
mov
push
daa
or
dec
mov
mov
xor
sub
popa
push
fcmovu
and
std
mov
or
imull
jne
sub
jbe
xor
add
addr16
ja
in
popf
xor
and
std
sbb
loopne
negb
aas
xor
dec
std
jnp
push
fidivl
es
sub
xlat
jmp
xlat
ds
inc
bound
adc
addl
repz
inc
je
add
add
push
push
mull
imul
fwait
sbb
xor
insb
push
out
dec
addr16
and
mov
dec
mov
fsubs
inc
jecxz
sbb
dec
adc
cmc
sti
inc
testb
and
scas
sub
bound
mov
movb
jmp
push
sbb
adc
push
pusha
and
cmc
jmp
adc
jo
pop
insb
fisttps
sti
mov
movsb
mov
cmp
jl
xchg
js
cvtps2pd
xlat
push
test
cmpsb
ja
push
outsl
adc
test
mov
xor
sub
cmp
mov
add
push
mov
jmp
jp
adc
pop
xchg
scas
cmp
inc
push
jb
scas
insb
sbb
push
repz
ret
mov
xchg
jge
sub
cmc
push
stos
in
mov
adc
dec
mov
ror
add
or
jae
fcoms
test
inc
pusha
imull
insl
aad
jg
pop
cwtl
jo
incb
cs
inc
cltd
loop
test
cs
testb
jae
sub
pop
jnp
rcrl
dec
push
gs
push
sbb
and
out
xchg
sarb
mov
jne
sbb
sub
xchg
sbb
out
xchg
jecxz
pop
imul
popf
sub
sub
adc
loope
iret
jmp
jo
pusha
jg
push
mov
push
jecxz
mov
loopne
insl
or
sti
icebp
test
lret
push
fdivl
dec
mov
mov
pop
pop
and
jo
jmp
push
push
ss
bound
fnstenv
pop
ret
sbb
jg
shll
inc
out
cmp
je
dec
push
jmp
ja
std
jle
cli
mov
ja
ficomps
cmp
lods
pop
cmpsl
mov
les
mov
rcrl
and
lret
xchg
out
inc
or
nop
sub
cmc
ret
lea
xchg
push
stc
std
out
push
int3
imul
cs
inc
push
in
mov
jbe
pop
aaa
repz
cmp
daa
pop
push
sbb
ret
bound
cmc
je
testb
dec
in
imul
test
fidivrl
push
or
imul
and
movsb
jl
sbb
mov
jmp
mov
adc
push
addr16
ror
in
xor
sbb
jp
addr16
jge
adc
xchg
cmp
jnp
push
scas
adc
and
in
in
mov
sbb
cmp
cmp
out
mov
inc
push
pop
movsl
into
lahf
xor
pop
jo
cmp
pop
leave
pusha
rorb
and
and
xchg
iret
jae
ds
das
inc
push
insb
insl
sub
test
jb
mov
adc
pop
insl
mov
push
sub
inc
mov
pusha
push
icebp
test
out
cmp
sub
xor
inc
lret
bound
push
ffree
repz
push
cli
adc
bound
les
dec
jle
lds
adc
push
pop
insl
sub
lds
fisttps
iret
daa
push
loope
outsb
mov
movsl
popa
addr16
push
jge
push
and
dec
fucom
aas
ds
mov
pop
daa
sahf
cmp
idiv
fldcw
cmp
dec
xlat
ljmp
in
fisubrl
xor
out
stos
cmpsb
jl
das
aaa
aas
jns
cmp
push
movsb
sahf
cmpsl
test
sahf
push
fildl
or
mov
jno
jns
test
push
daa
jns
or
cli
lock
ret
popa
lahf
jl
cld
or
cmp
leave
xchg
cmp
pop
enter
mov
push
xchg
and
imul
sbb
mov
jns
ljmp
jl
lods
into
sub
mov
mov
cmp
frstor
inc
in
jl
jo
popa
shrb
nop
incl
leave
fildl
fdiv
lock
cmp
fistps
jno
sbb
pushf
mov
xchg
or
sbb
outsl
cmp
test
lret
sahf
xchg
out
pushf
imul
pop
loope
mov
cmp
xor
es
out
imul
and
div
out
shld
dec
xorb
mov
mov
adc
inc
mov
push
test
cmp
mov
ret
jecxz
xor
test
arpl
scas
in
je
outsl
repnz
cmp
fidivs
mov
aam
add
test
cmpsb
add
mov
cmp
nop
movsb
xor
dec
cmp
mov
lahf
or
out
xchg
cltd
addr16
fwait
ret
mov
test
in
loopne
or
add
xor
imull
xor
sbb
or
push
mov
mov
adc
sbb
sub
icebp
sbb
hlt
scas
lds
mov
xor
inc
mov
popa
cld
cltd
dec
in
mov
xor
ret
inc
aaa
pop
daa
mov
mov
popf
gs
ja
push
and
lret
jno
addr16
lods
push
add
out
cmc
add
mov
jp
xchg
sbb
lret
push
mov
cmp
popf
xchg
daa
adc
mov
std
or
or
cltd
mov
out
popa
cmpsb
outsl
test
pop
es
adc
aad
cmp
mov
cmp
fsub
cmc
test
mov
stos
dec
inc
xlat
nop
mov
add
loope
lret
mov
cmp
test
cmpsb
pushf
in
ja
push
dec
lods
cld
xchg
outsl
fmuls
jb
xor
sbb
mov
iret
cwtl
or
push
sbb
pop
mov
subps
add
scas
data16
in
into
and
push
or
pop
sub
hlt
call
mov
sarb
daa
or
or
out
xchg
int3
sub
xchg
pusha
movsl
xor
cmp
loope
cmpsl
pop
mov
mov
dec
js
cmp
mov
adc
sub
xor
inc
rcl
jbe
mov
insl
inc
jne
out
mov
sub
out
mov
cmp
push
inc
push
rclb
imul
pop
dec
cmp
stc
insb
push
jbe
mov
sbb
dec
aad
xor
out
adc
fisubs
push
dec
mov
mov
pop
fisubrl
pop
mov
aaa
and
or
cmp
add
dec
jno
inc
push
dec
and
loope
xchg
adc
scas
imul
sbb
scas
add
fs
mov
dec
daa
pop
lcall
jmp
rcll
jge
pop
push
pushw
sbb
or
dec
add
xlat
or
pop
lahf
adcb
addr16
adc
mov
popf
jns
mov
pop
es
jl
push
lcall
jne
and
pop
aam
scas
or
sub
fs
lahf
int3
xor
cmp
or
push
dec
ljmp
loopne
fmul
sub
aad
dec
cld
ftst
cmp
rol
sub
adc
push
push
jp
movsl
int3
unpcklps
loopne
or
fldt
loope
sub
adc
fstl
inc
dec
shl
mov
fadd
out
lea
nop
repz
sub
sbb
adc
out
push
hlt
lock
arpl
or
xorb
jge
xchg
mov
imul
inc
imul
nop
sbb
mov
scas
cmp
sbb
gs
xchg
lods
jae
add
push
or
pushf
pop
enter
cmc
cmp
in
nop
lods
cmp
lea
jae
cmp
xor
addl
cli
ja
mov
test
dec
or
and
out
js
xchg
push
mov
dec
push
out
adc
lea
xor
aam
push
inc
in
std
repz
imul
scas
jle
and
lahf
sbb
adc
fs
sub
dec
sbb
jge
and
adc
shr
fmul
mov
xor
fnstsw
into
sub
icebp
aam
aaa
out
push
mov
adc
inc
push
fbld
andb
add
and
adc
adc
xchg
cld
in
loop
test
or
test
lea
xchg
in
add
dec
dec
sbb
aas
sub
insl
sub
cwtl
inc
clc
jo
adc
stos
fs
xor
sub
add
mov
mov
pop
xor
and
cmp
push
popa
dec
cmovb
sbb
xchg
xor
in
dec
fsub
arpl
out
cmp
dec
insl
ljmp
bswap
mov
pushf
aaa
xchg
mov
sarb
mov
xchg
es
lods
push
xchg
div
insl
int3
lret
xchg
jns
fcmovnu
test
sti
popf
les
inc
loopne
lock
int3
cltd
mov
sub
adc
mov
jb
rcrl
or
push
test
mov
mov
dec
push
movsl
test
loopne
dec
mov
stc
mov
sbb
arpl
cmp
addr16
in
jmp
daa
xor
sub
adc
pusha
popf
xchg
jmp
fnstenv
mov
xlat
xchg
stos
mov
insl
jge
pop
iret
inc
stc
pop
scas
pop
and
mov
movsl
add
dec
adc
dec
loopne
dec
ss
ds
lret
shll
mov
adc
jnp
hlt
stos
gs
iret
test
fwait
adc
std
jle
lods
imul
cmp
pop
cmp
xchg
mov
shll
mov
mov
cmc
test
int3
aad
push
jne
pop
jo
sbb
fwait
repnz
adc
pop
jge
in
je
mov
iret
je
cmp
dec
fmull
cwtl
dec
sbb
stos
adc
ljmp
aaa
xorb
dec
aad
sub
shr
dec
and
or
scas
sbb
in
jg
jne
mov
push
clc
lret
adc
aam
add
or
ss
pop
outsb
scas
pop
xchg
loop,pn
lods
sahf
and
dec
push
adc
xor
lret
xor
ret
mov
ret
cmc
sti
xor
movsb
sbb
mov
cs
jmp
pop
lret
mov
mov
fstps
pop
in
cmp
loope
sbbb
daa
cmp
push
inc
clc
inc
cmp
pop
jo
ds
sub
loop
push
sti
in
fistpll
mov
outsb
dec
xchg
fsub
incl
cli
sub
fidivrl
test
mov
subl
or
pusha
mov
adc
in
testl
popf
leave
imul
clc
cmp
lret
repnz
pop
adc
movsl
rclb
mov
test
out
les
push
roll
adc
pop
or
popl
fsts
dec
outsb
dec
cmp
lea
inc
jbe
ss
push
mov
test
std
aam
mov
cltd
fs
call
mov
push
lret
lret
lahf
sub
rorl
fidivrl
push
mov
in
imul
adc
fwait
adc
and
sub
xor
and
or
cmp
dec
in
cltd
mov
aas
lret
push
or
test
and
jae
or
dec
scas
jno
or
insl
or
lds
mov
adc
or
repnz
push
mov
leave
xor
pop
movsl
pop
cmp
mov
icebp
jns
push
fsubr
fldcw
ficoml
popf
and
imul
sub
lds
leave
push
stos
jb
lea
pop
pop
lahf
cmp
cmpsb
nop
jge
lods
inc
arpl
iret
add
test
dec
pop
mov
push
mov
dec
sahf
mov
pop
dec
fstps
das
dec
pushf
test
stos
fistps
fst
xchg
mov
cmp
mov
push
push
mov
fldl2e
mov
inc
outsb
push
xchg
jmp
xor
inc
push
cli
rcrl
icebp
xor
int
sbb
sbb
adc
cmc
mov
jle
add
in
add
push
cs
inc
mov
push
decb
cli
test
fsub
sbbl
xchg
mov
notl
in
inc
or
cmc
adc
mov
dec
test
mov
dec
jnp
shll
mov
stos
add
cmpsb
shrl
mov
insb
in
xchg
pop
dec
sar
fs
add
or
jmp
mov
je
aad
jmp
stos
sbb
dec
out
push
repz
xchg
mov
xchg
push
test
sarl
and
cld
xor
push
clc
movsb
jnp
fwait
xlat
roll
es
das
addl
dec
cmc
loopne
mov
icebp
xchg
lahf
arpl
jb
mov
jae
jns
ljmp
ljmp
in
leave
int
jne
xor
cmpsb
dec
inc
adc
dec
daa
cmpsb
mov
fdivr
aas
pop
aad
cmp
loop
scas
cmp
stc
or
test
mov
pop
sub
imul
clc
sarb
sbb
icebp
outsl
jbe
push
nop
sahf
outsb
cwtl
push
or
popa
or
dec
mov
push
ss
xor
add
aas
cmp
add
popf
dec
mov
insl
sti
jae
bound
ja
inc
pop
jo
xchg
lods
icebp
clc
pop
fiadds
unpckhps
push
adc
test
lods
jne
daa
lahf
call
aaa
inc
xchg
xchg
jbe
testl
scas
leavew
mov
sbb
jle
pop
or
outsb
cmpb
addr16
sub
pop
enter
cmpsb
daa
imul
xchg
jb
push
add
adc
iret
cwtl
popa
xor
jg
aaa
lea
aas
shll
pop
xlat
imul
push
jge
iret
mov
cmpl
mov
pop
jp
cltd
pop
jmp
xor
popa
pusha
and
ror
xlat
mov
data16
out
inc
sub
hlt
jmp
outsb
jbe
sbb
lret
cmc
call
cmc
cmp
lahf
int
sbb
mov
shll
xor
lcall
outsl
dec
dec
jnp
mov
push
push
clc
int3
and
out
dec
out
xor
test
lods
movsl
int
fwait
cmpsl
dec
jmp
jbe
or
or
dec
jge
shlb
jbe
stc
mov
pop
sti
addl
mov
je
fdivp
sahf
call
inc
mov
or
mov
fcmove
iret
xchg
dec
xor
dec
fwait
shll
pushf
in
rsm
insb
sub
push
xor
stos
rcrb
shll
cmp
pop
jge
adc
int3
lret
and
dec
repnz
outsb
xchg
clc
cmpsb
das
jns
insb
movsl
xchg
lods
mov
adc
xchg
or
in
mov
aaa
les
insl
sysenter
in
mov
ljmp
adc
stc
push
cmc
xchg
dec
scas
les
aad
andb
jo
and
scas
es
mov
and
mov
jmp
pop
mov
xchg
xlat
stos
dec
xchg
loop
push
std
popa
ret
or
fildll
inc
insl
mov
pop
ja
enter
sbb
and
mov
sbb
lock
cmp
aaa
push
gs
adcb
xor
jmp
jge
sub
shll
cmc
aaa
mov
test
loop
lret
xchg
push
xor
cmpsb
scas
stos
movsl
jno
sub
push
scas
mov
mov
loope
push
lcall
pushf
and
xor
insl
adc
ficoml
cmpsb
mov
adc
mov
sub
push
arpl
repnz
push
popa
or
cld
push
mov
shll
inc
sub
ret
les
incl
push
cmpsb
or
pushf
lods
mov
mov
fcmovnbe
mov
lock
cmp
rcll
nop
adc
xchg
and
or
insb
ret
cmp
ret
xchg
fistps
out
cltd
mov
subl
test
jne
icebp
mov
jp
call
movsb
aad
je
fwait
stos
fstpl
inc
adc
enter
fldcw
iret
shlb
adc
cmp
and
cmp
stc
lock
and
dec
jo
mov
ret
pushf
lret
xchg
pop
xchg
sti
push
sbb
xor
negb
bound
lods
addl
fnstenv
push
jno
push
jno
sahf
ja,pn
out
rcl
inc
push
push
pop
or
push
mov
mov
pop
repz
nop
mov
sub
xor
outsl
sbb
test
aad
pushf
sbbl
xchg
adc
test
in
lds
ja
sbb
cmp
test
add
shl
mov
ret
push
hlt
imul
popf
xor
loope
dec
mov
jnp
aaa
clc
aaa
sbb
mov
push
and
xor
lret
cmp
cltd
scas
or
mov
mov
sbb
lds
subb
xor
or
insl
daa
adc
cmpsb
mov
mov
push
sub
inc
imul
push
mov
in
ret
sbb
icebp
mov
enter
pusha
add
ficomps
and
cmp
jp
shr
add
sub
xchg
adc
into
cmp
sbb
ja
mov
dec
sti
je
loope
xor
adc
in
push
mov
mov
xchg
jle
xchg
popa
fwait
inc
cmpsb
add
rolb
bswap
movsl
movsl
scas
cld
adc
add
sbb
xchg
xor
mov
hlt
clc
or
popa
adcl
push
hlt
push
fistpl
dec
pop
xchg
pushf
push
neg
cmc
mov
push
addr16
jnp
inc
stc
arpl
loope
inc
inc
idivb
sti
lock
sub
xchg
sbb
sbb
cmp
in
fs
mov
scas
jns
jbe
imul
mov
push
dec
xor
pop
cmp
scas
outsb
xchg
je
into
repz
loope
push
xchg
inc
xor
xor
je
ficoml
xchg
cmpsl
or
mov
or
out
mov
lret
xor
dec
divb
sub
xlat
pop
lds
mov
ja
jb
hlt
in
inc
or
add
adc
int
inc
fldcw
mov
fsts
cmp
add
mov
out
or
outsl
and
lret
sub
ljmp
mov
faddl
mov
add
xchg
in
mov
sub
outsl
sub
pop
push
ja
dec
mov
sbb
cs
div
jg
xor
or
loopne
xorl
jle
pop
sarb
leave
popf
mov
sbb
push
loope
test
aam
add
movsb
fnsave
test
adc
rorl
dec
outsb
fldl
shrl
push
jge
mov
addb
jae
aam
loope
loopne
int3
lret
shll
adc
mov
je
xlat
jne
pop
and
mov
xor
xchg
addl
jo
mov
aad
jle
push
cmp
pop
jl
shlb
or
xlat
stc
insl
jp
icebp
daa
int
leave
pop
fsubs
imul
xchg
sub
aad
mov
imul
mov
pop
jno
mov
imul
sub
adc
ret
std
lods
out
push
xor
add
cmp
cld
mov
test
adc
jmp
jge
loop
vpcmpeqb
lods
mov
faddl
leavew
xlat
call
addr16
add
repz
mov
arpl
cmp
rorl
pop
jno
sahf
imul
push
cli
mov
xor
aad
lret
cs
xorl
data16
inc
mov
xlat
jge
lea
fisubrl
xchg
fnstcw
inc
pop
repnz
mov
int
mov
lahf
divb
inc
cmpl
nop
hlt
stc
cmc
clc
add
dec
rcll
movsb
cltd
or
dec
mov
adc
push
enter
scas
scas
ss
lds
push
rcr
lds
aaa
or
pcmpgtw
sbb
int
dec
xor
icebp
jo
gs
ja
mov
mov
je
les
repnz
test
test
and
jno
inc
sahf
xchg
movsl
jbe
pop
inc
ret
cmpsl
lock
jp
sbb
repz
or
and
cld
jns
nop
or
shlb
lret
cs
mov
hlt
aam
pusha
add
lods
sahf
mov
lods
jmp
lcall
stos
sbb
popa
std
fnstsw
out
inc
dec
adc
push
add
and
aam
pop
xor
dec
push
mov
mov
inc
gs
data16
je
sbb
lods
sbb
mov
icebp
decb
mov
jo
out
pop
gs
xchg
mov
or
mov
mov
mov
lcall
push
mov
insb
lea
cmp
mul
shr
es
and
add
adc
pop
xchg
test
fs
or
loope
xchg
xlat
dec
mov
adc
inc
leave
push
xchg
in
cmpsb
lahf
dec
movsl
dec
les
adc
cli
jne
out
imulb
fisubrl
aaa
pop
insb
sub
scas
out
mov
stos
adc
mov
adc
dec
jno
sub
enter
mov
jae
dec
jns
iret
rorl
and
daa
and
mov
popf
ljmp
jecxz
lds
ja
lret
js
jl
or
push
xor
and
imul
mov
cs
and
loopne
aas
cltd
xor
jge
test
dec
mov
mov
shll
cmp
jne
dec
push
out
mov
loopne
fwait
mov
iret
mov
f2xm1
je
mov
rclb
add
mov
aad
pop
jno
bound
icebp
adc
outsb
jg
mov
test
fistpll
xor
pop
mov
icebp
sbb
sti
xor
jb
in
sbb
icebp
sbb
in
aad
dec
jae
and
lods
sar
and
std
fildl
ja
mov
mov
pop
ds
mov
mov
cmpsl
xor
je
lcall
xor
inc
fisttpl
push
std
mov
jl
sbb
fisttpl
lea
stos
jmp
fcoms
cmp
fcoms
loope
sub
push
lea
aam
jbe
mov
leave
test
jb
cmp
adc
cwtl
lret
xchg
shr
or
xchg
gs
cmc
and
jne
inc
add
mov
pusha
aam
int3
mov
fcompl
in
cmp
cltd
jle
scas
mov
cli
jnp
pop
out
sar
fwait
loope
outsb
inc
xor
das
jmp
or
les
cmp
sub
pop
inc
push
push
ret
dec
mov
dec
jae
adc
push
testl
pop
adc
popf
push
ljmp
lahf
xorl
ja
fadd
mov
xchg
mov
sub
xchg
jno
scas
xchg
outsl
arpl
mov
shll
push
jno
dec
push
push
cmp
xor
xchg
mov
or
add
js
pop
sbb
fcmove
dec
js
add
es
outsl
or
mov
pop
or
cs
or
pushf
adc
dec
inc
ret
jae
and
xchg
cmc
sub
adc
out
test
sbb
jp
fiadds
lcall
fidivs
xchg
in
dec
or
ret
out
or
aam
add
pop
pop
or
or
stos
xchg
mov
rcrb
mov
test
je
cmp
in
addr16
adc
xchg
cmp
out
mov
pop
pop
sahf
pushf
add
test
call
sarl
std
pop
not
test
cmp
dec
int3
in
jg
lret
int
out
inc
in
mov
fcompl
jb
cli
dec
nop
cmp
mov
aaa
jle
inc
scas
insb
pop
mov
push
int3
xchg
jno
adc
sub
js
in
pop
bound
mov
xor
jmp
imul
and
lret
pop
mov
scas
lods
pop
dec
fbstp
es
xchg
mov
mov
mov
push
jno
cmp
mov
outsl
and
into
aas
mov
cmp
je
aad
xchg
enter
inc
frstor
dec
xchg
test
jno
adc
clc
lret
sbb
push
jp
inc
and
outsb
xchg
das
mov
incl
leave
or
cmc
mov
jg
push
fstpl
mov
xchg
in
mov
sti
leave
aas
dec
mov
adc
ds
sub
icebp
pop
lcall
xchg
xchg
cs
sbb
or
out
cmpsb
sbb
test
sarb
das
andb
push
xor
push
adc
pop
popa
mov
movsl
pop
pop
mov
adc
xor
sarb
sub
jno
cld
int3
fcomi
add
xor
pop
pushf
sbb
inc
cmpsl
and
sbbl
push
pop
out
inc
jecxz
daa
mov
out
rorb
cltd
icebp
shrl
add
inc
jne
popf
popf
jnp
mov
not
sub
and
rorl
fwait
daa
pop
add
push
loope
movsb
dec
pop
mov
pause
pop
test
cmpsb
dec
adc
mov
xchg
outsl
int3
popa
cld
inc
movsl
addr16
sub
adc
mov
ror
cmp
dec
lahf
add
cltd
jo
sahf
dec
loopne
push
bound
sbb
push
push
sub
cmp
in
sbb
cmpsb
les
dec
push
popf
leave
xor
or
adc
dec
cmp
adc
rolw
add
push
cmp
sub
outsl
mov
rclb
sarl
lret
cwtl
jnp
in
and
mov
add
pop
test
cld
push
push
cmp
decl
mov
clc
lcall
ds
jecxz
fisttps
lods
push
push
cli
fistpl
sar
inc
dec
jmp
mov
lcall
and
xchg
xchg
adc
int
sub
scas
cs
cltd
dec
fnstsw
jecxz
es
call
xchg
test
lcall
mov
sub
pop
in
out
aam
dec
and
icebp
loope
movsb
test
jg
les
push
dec
popa
dec
out
and
popf
sub
insl
ss
dec
jg
ret
push
xor
sbb
negb
rcr
je
jecxz
mov
into
xor
lods
enter
lods
dec
push
push
sub
sahf
jne
inc
dec
or
xchg
inc
cltd
jnp
mov
adc
push
loop
sub
loopne
jbe
sbbb
test
and
sub
rorl
mov
aad
inc
loopne
adc
push
xor
inc
andl
adc
cmc
lock
sbb
sub
sahf
mov
pop
cltd
jnp
shrl
jno
adc
pop
and
iret
pop
div
dec
xchg
adc
xchg
pop
out
jg
test
pushf
clc
sub
scas
addb
cmp
popa
test
inc
cltd
add
test
nop
cmp
cmp
xchg
clc
xor
lahf
hlt
xor
push
loop
and
shlb
adc
lock
fisubrl
insb
cmp
adc
push
outsl
xchg
stc
fsubs
push
add
jle
push
std
mov
adc
push
or
leave
sub
in
push
pop
in
pop
and
add
jp
mov
pop
add
xchg
cmpsl
cltd
cli
push
scas
jnp
push
js
and
jae
fldenv
and
fstl
fnstsw
xor
outsb
mov
and
push
dec
dec
test
jecxz
cmp
xchg
out
test
mov
add
enter
inc
bound
lret
movsl
je
loop
push
nop
shl
xchg
jg
adc
mov
adc
xchg
push
sbbl
mov
jne,pn
inc
xor
std
sahf
adc
push
and
mov
xor
jmp
jbe
les
scas
cmp
or
inc
sub
in
rcll
mov
cmpsl
xor
lods
addr16
xchg
xchg
mov
mov
cmp
jl
daa
sbb
pop
imul
in
hlt
push
sbb
mov
jbe
fdivrl
test
mov
add
pop
push
mov
mov
in
fidivrl
daa
sbb
rolb
or
popf
mov
ret
fcomip
push
aam
pop
inc
push
mov
xchg
push
pop
popf
daa
push
lea
inc
adc
pop
sbb
pop
mov
addl
sbb
inc
popa
pop
ja
scas
add
iret
sub
add
loope
shll
mov
in
adc
or
jnp
dec
adc
push
popf
sub
jbe
iret
push
ljmp
pop
out
shl
inc
fisubrs
dec
test
xor
sahf
cld
ret
sar
in
jb
xor
fcmovne
pushf
mov
jb
dec
shll
dec
mov
loopne
jnp
mov
mov
push
lods
imul
mov
sub
xchg
shl
fdivrs
adc
pop
xchg
jg
or
loope
faddl
in
fiadds
in
cli
rcll
aam
pop
xchg
pop
push
inc
lock
mov
sbb
jmp
adc
orl
and
pop
cmp
jge
xchg
cmc
gs
aad
push
stos
sub
or
sub
cmpsl
aaa
fwait
test
daa
les
add
rclb
sbb
ret
icebp
ss
pop
mov
mov
sti
push
mov
call
mov
adc
cmpsb
sub
push
jp
mov
xor
inc
imul
pop
sahf
aaa
xchg
cld
pushf
adc
sbb
ret
insb
or
das
notb
int
and
orl
jno
pop
cld
fs
in
aas
dec
int
in
stos
imul
xchg
or
add
in
lcall
flds
pusha
adc
add
inc
pop
xchg
push
pop
add
nop
faddp
jae
jbe
push
xor
fmull
adc
xchg
cmp
popf
popf
aam
ds
repz
sbb
adc
stos
leave
mov
enter
xchg
xacquire
pusha
imul
test
out
xor
dec
lock
mov
outsb
push
lret
sub
stc
arpl
jle
cmp
cmpsl
bound
inc
hlt
shlb
call
sbb
or
movsb
insb
or
sbb
xchg
dec
aaa
cld
cwtl
insl
mov
add
sbb
aad
ficompl
mov
pop
movsb
rorl
jecxz
xor
xchg
rcrl
xchg
pop
sub
jnp
push
aam
adc
fisttpll
loopne
or
or
add
adc
dec
in
imul
fsubrl
xlat
dec
cli
loopne
in
cmp
or
je
lock
subb
xchg
xchg
adc
push
ja
out
arpl
or
or
inc
addr16
or
mov
aam
icebp
pop
cmp
xchg
mov
loop
mov
test
iret
cwtl
lods
xchg
xor
xor
mov
ljmp
aaa
mov
in
repz
cmp
loopne
add
int
andb
cmp
push
jno
cmp
cld
inc
dec
push
pop
lods
and
add
cmp
push
test
stos
adc
cmpsb
and
les
sub
push
mov
rcr
push
cmp
lds
outsb
pop
mov
xchg
sub
jbe
xchg
mov
lock
fimull
cltd
shr
adc
pop
xchg
xlat
sub
add
loopne
fmul
int
jno
adcb
xlat
jmp
leave
rorb
jge
imul
sub
add
mov
fidivrs
add
mov
bound
xor
mov
mov
shrb
mov
ljmp
mov
push
lea
dec
repz
stos
pop
das
data16
or
cmp
mov
lea
js
in
loope
mov
add
pushf
add
jns
sbb
jbe
sub
cwtl
jne
test
repnz
dec
dec
ljmp
xchg
push
roll
fucomp
and
pusha
add
mov
cmp
loop
fisubrs
push
sub
mov
lea
pop
inc
adc
sahf
mov
cli
into
xlat
fisubrs
mov
sbb
add
divb
dec
fidivrl
or
dec
mov
mov
xor
push
sbb
test
cmpsb
xor
mov
pushf
mov
subb
and
sti
sub
jp
jne
popa
dec
sbb
ljmp
dec
addr16
jnp
and
adc
negl
hlt
sub
sub
pop
push
daa
mov
in
scas
xlat
cmpsb
jae
mov
xchg
andb
das
jbe
mov
movsl
mov
stos
movsb
clc
js
adc
test
pop
cmp
sbb
fdiv
adc
pop
loope
xor
xor
cmp
rcrl
push
inc
sbb
mov
ficoms
test
test
adc
in
dec
add
imul
cmp
fldt
dec
and
push
out
sub
enter
mov
or
sbb
scas
les
divl
pop
xchg
sub
mov
lcall
sbb
pop
jbe
shr
aaa
mov
scas
pop
dec
cltd
inc
lcall
mov
test
and
enter
cwtl
jecxz
pop
mov
jecxz
clc
fstp
loop
pop
stc
mov
outsl
sarb
pop
jno
jnp
insb
and
mov
popa
jg
iret
mov
fiaddl
mov
dec
pop
dec
push
add
xor
sub
lcall
xchg
repnz
nop
mov
into
xchg
cld
sbb
sbb
movsb
jnp
outsl
stc
mov
jbe
mov
pop
scas
cs
mov
lcall
xor
xchg
mov
outsb
or
int3
stos
sub
push
mov
ja
cmp
inc
cmpsb
test
mov
jl
les
outsb
loopne
xorb
ja
pusha
jno
loop
push
xor
fidivs
sbb
and
in
push
push
lret
sbb
sbb
pop
xchg
mov
call
xor
jecxz
sub
add
jno
xchg
jge
push
xchg
shrl
insb
inc
lock
fs
push
jo
rcl
push
in
mov
inc
jmp
repz
rorl
add
xchg
pop
inc
inc
pop
fst
push
pop
jle
mov
mov
lods
andb
mov
lahf
adc
mov
pop
push
pop
inc
stos
jo
xor
mov
mov
fs
mov
lahf
stos
jecxz
jo
jge
faddl
in
mov
mov
mov
popa
scas
fwait
scas
xchg
jno
or
xor
or
dec
fnsave
pop
jle
jns
xchg
int3
int3
dec
sbb
ds
jo
push
fwait
pop
mov
inc
out
cli
sbb
cwtl
imul
mov
cmp
mov
sti
cld
cmp
cmp
nop
out
in
and
xor
dec
add
std
ss
fsts
mov
mov
adc
mov
clc
shl
pop
or
fs
addr16
loop
scas
int
add
xchg
xor
adc
add
xchg
jns
pop
je
sahf
aad
pop
rorl
cs
addr16
cmp
insl
shll
push
push
iret
lret
imul
xchg
shlb
and
mov
cli
push
inc
inc
sahf
pushf
inc
outsb
xchg
repnz
lods
and
stc
adc
imul
xchg
loope
dec
fstpl
mov
pop
lret
pushf
jmp
inc
daa
jmp
mov
cmp
ret
out
mov
popa
imul
std
jecxz
sbb
pop
lds
jge
lret
push
and
jle
dec
mov
fcom
jae
push
jmp
inc
jo
dec
insb
mov
stos
or
call
sbb
cmc
lds
fidivs
into
lret
pop
add
dec
clc
push
pusha
cmp
test
fst
leave
test
imul
fsub
in
adc
outsb
incb
xor
lock
xor
aas
test
mov
enter
mov
shll
adc
xchg
popf
sub
in
aad
in
shll
loopne
pop
inc
xor
lcall
jbe
leave
stos
xchg
loope
and
aad
jg
jecxz
movsl
mov
movsl
sub
sub
or
cs
lcall
mov
adc
xchg
dec
and
or
ret
push
stos
js
or
pop
jae
push
sbb
xor
ret
inc
push
pop
adc
mov
test
pop
pop
pop
inc
enter
fisubs
aaa
dec
lods
in
xchg
int3
mov
jae
out
sub
loope
iret
dec
push
mov
dec
xlat
push
mov
lahf
inc
cltd
ret
and
jb
daa
mov
sbb
subb
adc
ljmp
cmpsl
xor
rclb
mov
popa
add
cmp
test
xchg
lret
pop
sbb
fs
mov
ret
test
jmp
fsts
stos
sub
mov
adc
bound
xor
push
and
push
leave
clc
dec
out
cmp
jecxz
push
inc
cmpsb
je
clc
push
ret
sti
mov
stos
xor
or
test
push
adc
iret
je
sbb
mov
aaa
std
add
ret
insl
mov
adcb
pop
xchg
int
xor
mov
out
jmp
rclb
aad
out
test
pusha
jb
pusha
in
sbb
add
out
das
clc
loopne
std
mov
mov
loop
pop
push
xchg
mov
ret
mov
stos
orb
pop
push
adc
xchg
xchg
divl
adc
xchg
mov
cmp
in
add
icebp
and
mov
push
jb
das
jecxz,pn
pusha
fucomp
cmp
pop
mov
and
pop
adc
sbb
dec
sbb
nop
icebp
push
hlt
or
out
imul
sub
lods
fwait
jno
loope
lods
mov
sbb
add
sti
ss
xor
and
push
les
push
sub
movsl
lret
shll
mov
mov
pop
pop
dec
sub
push
push
xchg
test
pop
jecxz
stc
int3
xlat
popa
aaa
negb
sub
xor
mov
iret
movsb
test
add
xor
fisubs
mov
xor
gs
pop
cmp
pop
outsb
test
cmpsl
pop
test
nop
cmp
or
loopne
pushl
test
stc
mov
add
mov
arpl
dec
pop
sbb
mov
adc
jmp
es
mov
xchg
inc
mov
ja
ret
mov
stc
jg
outsl
pop
lea
ret
dec
adc
call
push
push
std
jmp
frstpm(287
sub
adcl
fcmove
mov
push
lock
pop
sti
push
dec
pusha
add
fists
xchg
hlt
xor
mov
jae
and
push
mov
rcl
mov
test
lock
arpl
inc
push
out
sbb
ret
and
and
stos
movsl
roll
jecxz
in
roll
fs
push
or
dec
mov
std
roll
jecxz
mov
adc
jmp
jnp
xchg
data16
inc
add
sub
cmp
jecxz
xchg
mov
repz
test
dec
in
ret
xchg
imul
inc
mov
adc
test
pop
mov
push
aaa
pop
push
cmc
adc
cmp
cwtl
jg
cmp
sub
mov
jns
stos
adc
ss
lods
pop
lods
rclb
sarl
mov
cmpsl
aas
fwait
jo
das
icebp
pop
inc
stos
adc
inc
xchg
pop
push
ds
sbb
pop
jb
cmp
cmp
mov
int3
adc
or
mov
imul
popf
sbb
dec
add
xchg
cmp
push
mov
sbb
in
pop
adc
enter
dec
pusha
inc
adc
lcall
dec
les
clc
inc
mov
ret
jb
mov
add
xor
pop
mov
dec
lret
xlat
mov
imul
lea
push
mov
jge
jl
xchg
sbb
insl
fsts
mov
imul
pop
hlt
getsec
mov
daa
mov
in
lret
outsl
stos
ss
pop
push
test
and
mov
div
jb
mov
cwtl
mov
cmp
sub
es
test
jecxz
inc
data16
push
sti
call
mov
int3
stos
jb
lds
adc
mov
mov
divb
loop
pop
roll
sbb
xor
dec
mov
jno
mov
sbb
xchg
mov
mov
mov
pop
or
xor
mov
add
cmpl
insb
test
ljmp
adc
lret
cmp
cmp
mov
push
pop
int
sti
jnp
loop
scas
cmc
inc
xor
leave
mov
or
sti
jmp
push
xchg
lret
fnstcw
cs
jge
and
xchg
lds
popa
jl
ret
ret
incb
jb
add
or
loope
shll
cli
push
pop
mov
push
push
rcrl
cli
std
mov
out
xor
mov
outsb
and
add
xchg
clc
int
inc
or
fidivl
sub
inc
enter
mov
pop
mov
xchg
stc
xchg
shl
aaa
popf
mov
xor
fldt
lods
dec
mov
pop
mov
pop
sbb
add
arpl
sbb
lods
sbb
rcl
sbb
popf
lea
sub
fistpl
loopne
jmp
jns
dec
call
add
push
insl
ret
or
ja
dec
out
adc
and
or
mov
cmpl
scas
add
jo
mov
mov
jne
popa
pop
mov
je
fsubl
xchg
mov
cld
les
icebp
and
push
and
fiadds
jbe
adc
pop
jbe
lea
not
mov
inc
into
mov
mov
mov
cwtl
cmpsb
dec
mov
fs
dec
ja
jne
clc
loopne
inc
cmpb
fsubrs
lock
inc
roll
in
sbb
iret
out
dec
imul
cmp
repz
xor
bound
push
mov
outsb
pop
jmp
mov
sbb
adc
cltd
push
mov
xchg
test
sbb
pop
push
rclb
jp
jbe
filds
pop
mov
mov
jl
inc
mov
cld
push
lods
std
aas
aas
mov
call
inc
pop
push
pusha
or
imul
fidivs
ds
adc
hlt
lea
add
in
mov
mov
cld
jp
outsl
mov
ret
mov
mov
jecxz
and
stos
or
jge
aas
adc
sbb
gs
jbe
push
xorl
mov
rcrb
or
mov
nop
mov
adc
fistl
pop
inc
out
mov
mov
sub
and
jp
cmp
jecxz
js
xor
jae
shl
insb
sti
jmp
idivl
cmp
add
cmpl
dec
mov
cmpsb
mov
dec
pop
adc
rorl
pop
cltd
data16
and
xor
push
ja
insb
aas
jno
inc
test
add
outsl
dec
or
mov
push
mov
cltd
jno
movb
adc
outsl
movl
flds
leave
adc
or
sbbl
scas
cmp
push
outsl
int
loop
cmp
inc
fcoml
cwtl
xor
rcrb
mov
fstpt
push
in
dec
insb
stos
decb
inc
dec
inc
xchg
repnz
mov
in
je
addr16
idivb
pop
ret
sbb
mov
iret
and
inc
popfw
jns
mov
repnz
aam
pop
push
lds
push
xor
cmp
and
cmpsl
pop
neg
jo
out
push
xchg
nop
inc
add
je
loope
jbe
jne
lea
push
push
dec
mov
fsubs
rcr
mov
mov
cmpsb
push
aam
sbb
aaa
mov
add
lods
mov
jno
mov
popf
loop
sub
lret
sub
sub
orb
inc
xchg
pop
ja
fwait
nop
pop
jns
into
xchg
test
mov
add
rorb
test
scas
fcom
add
mov
jno
data16
adc
push
hlt
stos
out
xor
push
jl
scas
sbb
sub
jae
jbe
cmpsb
imul
cld
scas
pop
orl
mov
or
inc
lret
mov
jae
adc
adc
mov
pop
adc
xchg
and
movsl
push
test
stos
jne
push
cmp
xchg
int
sub
inc
lods
fcompl
outsb
aaa
pop
repnz
out
pop
cmp
pop
outsb
je
sbb
cmpsl
std
inc
jnp
sub
jne
subl
push
stc
dec
mov
jge
sub
inc
jle
fsubrs
mov
adc
lahf
mov
imul
push
xor
out
inc
pop
js
and
mov
hlt
push
imul
fimuls
rorb
addl
js
out
inc
ds
pop
jge
std
add
sub
dec
add
in
iret
push
sti
pop
cli
mov
mov
mov
imul
sbb
ds
mov
out
jne
pop
pushf
and
dec
repnz
loop
lea
sub
imul
iret
fucomp
jl
push
in
sub
ret
hlt
test
xor
out
jb
xchg
xchg
addl
std
ret
bound
sbb
in
xchg
arpl
arpl
or
pop
addr16
xchg
ret
mov
jge
inc
mov
push
and
dec
dec
enter
xor
int3
lret
lcall
ficoms
in
test
mov
cltd
in
dec
mov
inc
js
js
imul
xor
mov
sbbb
push
push
int3
mov
aas
adc
adc
xor
push
mov
lock
add
add
mov
jmp
cs
ljmp
stc
mov
mov
pop
bnd
adc
testb
lods
es
rcl
jecxz
loopne
cmp
js
xorl
lcall
mov
or
movsl
fstps
mov
fdiv
and
out
jmp
in
mov
inc
xchg
pop
or
lahf
into
es
mov
ljmp
ljmp
xchg
jne
lods
dec
lods
xchg
pop
scas
push
scas
lea
jo
stc
icebp
cmpsb
adc
rcrb
loopne
imul
sbb
fs
sti
cmp
prefetch
or
jne
push
int
push
cmpsb
sarl
pop
add
ja
jge
xor
cmp
mov
adc
lret
mov
add
arpl
inc
inc
or
or
es
mov
mov
pop
stos
test
mov
xor
negb
cmp
aas
cld
mov
add
sbb
dec
sbb
push
or
test
rorl
mov
out
ja
arpl
or
insl
cmc
mov
xor
dec
loop
and
push
jns
addr16
and
adc
daa
loop
add
sbb
shl
mov
shl
dec
js
xor
push
repz
call
jge
pop
insl
sbb
cld
cmp
adc
fwait
lock
out
dec
imul
jo
lret
das
mov
fisubl
jno
cmpsl
or
fcomps
adc
or
xor
pop
jl
jne
jno
mov
in
cld
ret
mov
call
dec
stos
lret
fldl2e
mov
xchg
and
je
jne
mov
pop
js
mov
mov
mov
lock
inc
test
fists
jge
push
mov
adcl
cmp
mov
push
add
clc
loopne
sahf
inc
or
jmp
scas
add
mov
and
lahf
pop
or
jae
mov
pop
cmp
das
in
and
pop
dec
inc
adc
mov
aas
cvtpi2ps
push
mov
hlt
enter
lcall
rcll
adc
push
adc
out
mov
jmp
cmpl
popf
shl
aas
dec
mov
sub
mov
out
cwtl
ss
mov
call
fcoml
ret
dec
movmskps
pop
fs
sub
aaa
xchg
or
xchg
aas
inc
daa
jecxz
ljmp
test
sub
mov
cmpsb
lds
lods
adc
jns
mov
sub
and
sarb
out
out
inc
push
ret
jbe
mov
out
sbb
aad
sbb
pop
adc
gs
or
inc
add
xchg
sahf
ret
pop
mov
jp,pn
pop
and
jle
leave
cmp
lret
movsl
xor
jb
dec
test
dec
dec
sbb
in
sbb
cmp
shll
inc
pop
lcall
loopne
mov
lret
or
repnz
and
stos
xor
push
jno
into
and
jg
aaa
stos
jne
and
lods
imul
adc
bound
ss
mov
ss
fldenv
and
jne
inc
lods
adc
das
in
xor
jl
mov
mov
xor
adcl
mov
loopne
sarb
test
xor
in
lret
movsl
std
fmull
mov
fstpt
ficoml
push
jmp
dec
in
push
outsb
cmp
enter
cmp
xchg
mulb
adc
mov
ja
stc
mov
scas
pop
jl
jge
pop
jne
xor
dec
lods
dec
movsl
jae
shl
icebp
lods
xchg
mov
push
mov
shl
jno
sbb
sbb
xchg
jge
les
in
or
popf
sub
push
push
sub
sbb
out
xor
xor
dec
push
out
cld
in
stos
popf
daa
rcrl
jp
sbb
scas
mov
jo
aaa
mov
pushf
inc
lods
scas
adcb
mov
push
pop
aam
xor
mov
jle
push
outsl
fsubl
sub
adc
jmp
std
mov
fstp
fs
mov
popf
cltd
scas
icebp
sbb
scas
aas
in
repz
push
sbb
pop
push
xor
std
jl
pop
cmp
add
int3
cmp
js
ja
jmp
sbb
in
movsb
lds
mov
lret
mov
or
inc
ss
lods
pop
xchg
fldcw
les
add
out
aaa
fsubrs
jp
mov
jns,pn
cli
fcoml
fdiv
ficoms
jecxz
xchg
push
jbe
test
jle
std
mov
imul
xchg
mov
iret
shr
or
inc
clc
inc
adc
push
ja
outsl
call
sub
sbb
fisubl
sbb
nop
pushf
icebp
lock
shlb
pop
sub
push
inc
outsl
pop
repz
push
push
mov
add
mov
movsl
stos
mov
mov
mov
sbb
subl
call
add
mov
mov
mov
addr16
jb
and
lods
cwtl
sub
daa
jae
or
mov
push
mov
jns
gs
xor
bound
mov
sbb
enter
mov
inc
push
adc
or
aaa
fdivl
dec
xchg
lret
scas
dec
push
xor
sarb
cmp
ss
test
paddd
add
mov
movsb
sub
and
js
ret
or
cmp
and
lea
xchg
pop
sti
xlat
push
or
mov
out
xchg
xchg
addr16
test
in
pop
add
call
lds
stos
in
repnz
setp
inc
pop
lcall
rcll
push
test
ja
inc
sub
pop
sub
mov
arpl
pop
in
into
outsl
adc
pop
jecxz
adc
int
out
lods
jle
xchg
inc
xchg
mov
fwait
shrl
and
iret
add
clc
lods
adc
outsl
xchg
xchg
int3
addr16
jmp
aaa
xchg
inc
dec
add
outsl
gs
orl
dec
int
xchg
xchg
sbb
sbb
push
pusha
and
cltd
dec
nop
jne
and
sbb
fbstp
int
inc
js
mov
daa
jae
inc
jnp
mov
scas
nop
push
mov
pop
dec
jo
lahf
subb
xchg
pushf
cmc
dec
mov
xchg
xor
fidivrl
mov
repz
adc
xchg
je
cld
lar
fstps
aas
jl
cmpsl
outsb
aaa
mov
push
cld
out
leave
ret
sub
pop
adc
inc
lret
adc
lods
lea
dec
in
lret
mov
adc
call
aam
test
mov
sarl
fs
jecxz
nop
xor
data16
bnd
cmp
and
cmp
xlat
push
dec
int
test
jbe
sub
inc
fldl
pop
inc
xchg
dec
pop
cmc
mov
mov
js
movsb
std
xchg
repz
xlat
bound
mov
xor
enter
or
jge
into
dec
lret
call
stos
das
xchg
call
xor
out
push
faddl
pop
add
insl
adc
xorl
xor
sbb
inc
jbe
add
xchg
cwtl
xor
cwtl
inc
xchg
stc
sbb
rcrb
addr16
inc
dec
cmp
gs
gs
das
les
or
insb
dec
or
or
icebp
popf
xor
cmp
fld
shrb
xchg
xor
fcomi
lea
mov
add
imul
inc
dec
pushf
and
lea
or
arpl
sub
push
mov
cltd
jmp
xchg
loopne
cmpsl
dec
xchg
cli
or
test
mov
movl
cmpl
arpl
aas
fs
cmp
and
dec
mov
mov
add
data16
fistl
pop
into
out
fwait
xchg
int
lds
push
cs
out
mov
pop
push
inc
aas
mov
jmp
mov
fildll
pop
push
lock
mov
icebp
jecxz
adc
popf
fisubrs
add
adc
testb
mov
mov
loopne
shll
int3
pop
das
lds
pop
sub
popf
mov
xor
or
mov
adc
cmp
add
cmp
add
jo
fsubs
insb
lret
js
cld
sub
daa
and
stc
pop
sub
rorb
mov
imul
imul
xchg
pop
mov
lds
mov
int
out
jl
add
push
xchg
jmp
cli
or
and
imul
fisubl
lcall
xor
in
fimuls
dec
jle
adc
cmpsl
int
mov
dec
movsb
mov
dec
sub
mov
cwtl
rorb
push
shl
inc
push
les
rcl
jae
pop
xor
out
test
add
pop
push
mov
repz
and
jp
pop
out
icebp
lahf
or
push
or
cmc
ja
xchg
push
inc
iret
fmull
repnz
cmp
mov
jbe
dec
lret
adc
insl
inc
cld
add
cmp
popa
mov
out
scas
adc
cmp
or
pop
add
mov
cmp
inc
xor
mov
mov
sub
cmp
mov
das
sub
out
dec
adc
out
test
pop
mov
movsb
pop
movsb
mov
icebp
inc
rcrb
jne
insb
xchg
adc
into
cmp
mov
int3
lds
pop
dec
or
pop
imul
leave
lret
fwait
js
fwait
mov
sahf
mov
jle
sub
pushf
jle
sub
loopne
js
mov
push
mov
mov
jbe
xchg
sub
movsb
in
pop
inc
sub
xor
ja
dec
fdivr
fucom
jo
adc
nop
sti
sub
push
cld
mov
xor
int3
into
mov
sub
push
push
movsl
out
scas
les
push
xchg
cmpps
mov
insl
and
adc
push
loop
stos
sbb
mov
and
outsb
inc
mov
mov
shrl
fstpl
stos
repnz
dec
cmp
in
mov
xor
inc
imul
xor
jle
outsb
scas
jmp
divb
fisubrl
repnz
pop
lret
jb
push
mov
scas
das
push
dec
jne
lods
movsl
xchg
mov
rclb
xchg
mov
mov
pop
jp
xor
push
rorl
test
sahf
sbb
lret
push
fcoms
loopne
jne,pn
andl
sbb
out
aad
adc
je
mov
sarl
sbb
xchg
movsb
sub
dec
pop
dec
xchg
in
dec
outsl
test
jb
mov
repz
add
xchg
mov
pop
idivl
fs
add
cwtl
loop
sbb
jmp
lock
pop
dec
xor
adc
mov
push
pop
sbb
mov
or
sbb
sbb
dec
loope
orl
jnp
push
and
es
hlt
add
adc
outsl
dec
xchg
movsl
cmp
sub
aad
adc
mov
jnp
arpl
or
jp
jb
cmp
and
pop
outsb
push
dec
imul
adc
sub
mov
and
mov
xor
dec
out
adc
mov
in
mov
roll
add
xlat
fcomps
dec
mov
sub
sub
jno
mov
filds
testl
mov
popf
and
sahf
and
in
or
rorb
jo
adc
push
adc
xor
inc
test
mov
and
or
leave
push
mov
mov
inc
inc
mov
loop
iret
clc
mov
cmpsl
cmp
mov
xor
xor
inc
mov
push
and
sub
dec
push
dec
out
jno
lods
or
xchg
jg
push
adc
rol
mov
das
and
int3
push
test
repnz
gs
push
jge
xchg
push
fistpll
cmp
mov
insl
jbe
dec
ss
mov
mov
sbb
add
jle
in
icebp
in
push
stos
pop
sub
mov
xchg
mov
adc
ja
sarb
add
out
int3
adc
pop
xor
lods
push
push
jl
fs
lret
daa
gs
add
inc
arpl
out
icebp
and
mov
shl
inc
bound
stc
stos
std
cmp
pop
mov
pop
cwtl
or
cmpsb
xchg
push
jge
sub
mov
aam
push
pop
push
jmp
aas
xchg
ficoms
rol
xchg
pop
pop
xchg
push
inc
lcall
shll
imul
cld
dec
mov
repz
shr
lret
xchg
inc
jmp
dec
dec
pop
out
nop
je
jb
repnz
cmp
fists
andl
inc
jnp
lea
sub
inc
mov
sub
test
in
mov
jbe
sti
daa
xchg
dec
sub
loop
pop
and
xor
cmpl
in
add
pop
pop
aad
aas
lods
scas
fiadds
xchg
mov
push
adc
stc
loope
jge
or
sub
cmpsl
inc
sub
inc
push
sub
roll
jne,pn
pop
xor
adc
add
fldlg2
adc
std
test
pop
insl
mov
lret
inc
mov
pop
sti
xchg
movsb
push
ror
les
scas
sbb
out
jo
mov
add
repz
imul
dec
cmc
cwtl
pop
sahf
aas
ds
mov
or
push
enter
push
out
daa
cmpb
inc
push
xor
mov
addr16
sbb
cmp
or
fs
push
pushf
in
xchg
push
les
pop
fisttpl
push
sbb
in
lcall
in
fsubl
test
fdivrs
mov
cmp
or
stos
pop
dec
test
leave
andl
pop
xchg
mov
adc
test
pop
jo
in
and
outsl
or
dec
jge
stos
fs
lods
stos
sbb
mov
xchg
cmc
adc
fistps
stc
out
shll
and
or
dec
xchg
push
fdivrp
lahf
out
cli
lods
or
out
repnz
fistps
into
inc
imull
xchg
mov
rcr
xchg
mov
jp
fwait
mov
in
dec
or
enter
mov
daa
xchg
inc
mov
sbb
std
push
pop
ret
arpl
cld
scas
sbb
les
or
dec
push
mov
sbb
sub
gs
mov
aas
ja
imul
mov
fiaddl
sbb
pop
push
js
add
sbb
aas
adc
mov
popa
enter
cmp
pusha
adc
push
pop
leave
cmp
jno
popf
sarl
and
stos
xchg
sub
push
add
testl
mov
add
mov
sbb
mov
mov
pop
add
lods
add
out
mov
xchg
xor
jae
sub
dec
xor
pusha
sbb
sub
xor
push
xor
sub
jg
enter
dec
jmp
push
or
insb
or
imul
pop
inc
and
pop
sbb
cmpsl
push
jnp
sahf
mov
xor
mov
jbe
aas
mov
je
sbb
lock
mov
pop
inc
xchg
stos
loop
aad
xchg
loopne
sar
aaa
sub
ds
adc
lock
pop
hlt
pushf
dec
js
cmc
jg
inc
insb
cmp
or
repz
in
and
inc
pop
adc
into
ljmp
sub
inc
mov
add
leave
jo
aam
jmp
ljmp
jnp
scas
fcmovnb
xchg
add
jo
sbb
mov
add
jg
jmp
lcall
jg
add
xchg
xchg
add
insl
aam
js
push
addl
jl
xchg
jge
cli
rcrb
leave
call
sti
dec
sub
mov
fisttps
int3
pop
stos
and
cmp
mov
hlt
dec
ret
enter
sti
and
test
mov
scas
sbb
xorl
add
adc
scas
jge
add
imul
mov
inc
outsb
xchg
movhlps
jns
sbb
inc
int3
mov
hlt
push
data16
jg
inc
mov
xchg
cmp
js
scas
mulb
and
cmpsl
add
repnz
lret
adc
and
in
clc
in
mov
push
inc
sbb
and
cmp
jmp
daa
jbe
out
insl
notb
addr16
cld
sbb
add
lock
loopne
push
lret
testb
cwtl
test
scas
mov
pop
adc
sub
mov
inc
dec
ret
jl
lahf
insl
or
jnp
add
adc
addr16
xchg
dec
jno
pop
movsl
adc
or
mov
pop
adc
pop
jns
mulb
jb
test
and
insb
jno
fcmovu
mov
sbb
filds
pop
or
dec
jecxz
and
sub
and
jno
sti
scas
pop
daa
jnp
rcr
lret
mov
addr16
cmp
dec
lcall
ljmp
fisubrl
mov
daa
mov
push
pop
pop
cmc
pop
lret
push
gs
arpl
ss
ret
jae
repnz
sbb
in
cmp
out
xor
and
out
jnp
out
mov
leave
xchg
sbb
shrl
add
fistpll
dec
sub
jo
xor
mov
loop
rcr
cmp
xor
roll
xchg
aas
pop
or
sbb
sti
movl
sbb
dec
inc
add
mov
mov
jge
jnp
fcmovnu
xchg
lret
pop
rcll
fmulp
cli
addr16
subb
push
leave
xor
cli
mov
es
push
dec
pop
sahf
push
inc
add
mov
mov
mov
pop
push
orb
pinsrw
int
lods
inc
lods
ss
add
out
repnz
adcb
daa
daa
mov
js
pop
mov
into
ret
into
inc
or
xchg
adc
push
loope
xchg
mov
xor
xchg
adc
fnsave
adc
mov
pop
shrl
pop
adc
sbb
sub
data16
mov
and
arpl
or
push
cmpsl
int3
xor
sbb
cltd
rorb
test
cmp
sub
lret
mov
in
dec
xchg
lahf
mov
jae
test
loop
push
jl
pop
popl
push
roll
insl
cmpsl
mov
aas
stos
mov
stos
in
add
sbb
lahf
push
imul
mov
and
scas
adc
dec
mov
push
jmp
pushf
mov
movsl
push
jge
and
pop
jle
sbb
movsb
mov
scas
inc
mov
dec
movsb
not
icebp
sbb
xchg
mov
imul
push
jmp
lahf
lahf
or
inc
jne
loope
sarl
pop
icebp
add
out
push
cmp
xlat
bound
push
ds
push
sti
decb
dec
in
std
int3
sub
adc
dec
sahf
cltd
in
mov
push
cmc
ror
pop
jne
mov
arpl
hlt
dec
sub
jecxz
jge
or
jbe
in
lret
out
or
inc
arpl
js
insb
mov
jb
jecxz
sahf
dec
mov
mov
shl
in
rorl
fnstsw
push
lret
cltd
scas
jecxz
clc
aad
xor
inc
jge
dec
sbb
jbe
inc
ds
cmc
cmpsb
mov
fisubs
mov
push
arpl
mov
xor
inc
movsb
fs
in
xchg
aam
jl
in
sub
pop
dec
faddl
cli
pop
leave
nop
xor
jb
sbb
or
jge
insl
add
cmpb
notl
xchg
pop
es
jle
mov
pop
shlb
cld
push
cld
data16
jmp
loope
cmp
icebp
jg
hlt
iret
movsb
mov
add
gs
aam
pop
inc
sbb
jnp
shlb
scas
xchg
and
xor
inc
fstpt
dec
push
fistpll
push
cmp
inc
in
fsubrl
and
addl
je
xchg
and
add
xorb
or
cmp
jb
pop
fistpll
mov
stos
xchg
pop
pop
addr16
jo
mov
mov
clc
scas
sub
out
lods
test
jg
scas
xor
lret
xchg
sub
xor
fwait
xchg
hlt
push
out
rorl
gs
cs
daa
pushl
sub
sub
add
ret
inc
jne
js
jnp
sub
or
sbb
sub
rol
orl
add
lret
int3
rcrl
add
or
movsl
mov
lea
sub
pop
pop
inc
adc
lds
repz
adc
mov
nop
cmp
fldcw
daa
std
loopne
leave
dec
dec
in
cwtl
mov
stos
add
clc
aad
cmp
dec
js
mov
pop
fwait
push
or
jb
stos
in
scas
shl
xor
subl
shlb
or
ss
push
fcoml
dec
xchg
psubusb
insl
fdivs
lcall
jle
jo
dec
cmp
sub
mov
push
fbld
mov
xor
in
dec
outsb
int3
out
outsb
pop
aaa
adc
scas
rcrb
adc
stos
or
mov
jnp
outsb
mov
int3
xchg
fmul
test
xlat
outsl
jns
and
cmp
lahf
cmp
out
pop
loop
bound
add
cmpsb
pop
cmp
movsb
push
mov
out
push
pop
aam
jno
cmpsb
mov
sbb
cmp
mov
dec
test
loope
xchg
add
nop
sbb
cmp
mov
add
mov
gs
xchg
outsl
dec
test
das
pop
xor
adcb
dec
add
push
in
gs
mov
cmpsl
cmp
fwait
inc
inc
aam
or
or
inc
dec
mov
test
incb
cs
xor
mov
aaa
push
clc
mov
dec
lods
jl
cs
xchg
or
cli
jae
sub
dec
lcall
lret
mov
dec
stos
cmp
mov
push
lods
and
push
push
cmp
dec
pop
mov
xor
pop
xchg
mov
cmp
mov
fistl
add
dec
data16
push
dec
add
inc
ss
jo
jnp
aam
pop
push
or
cli
pop
ss
imul
add
xchg
mov
xchg
aam
mov
adc
add
fmuls
lds
sahf
pop
sbb
out
fisttpll
aam
adc
add
mov
mov
mov
fdivr
push
ret
add
lea
dec
lods
push
mov
sarl
rorb
add
jl
pop
mov
iret
stc
fisubrs
movsb
sti
pop
stos
inc
hlt
pop
dec
popf
mov
push
adc
cmp
jb
jo
stos
loope
xorl
stc
dec
dec
call
sahf
js
test
fs
sbb
xchg
movsl
mov
out
push
nop
sub
pop
or
adc
push
aad
xchg
mov
mov
pop
push
pop
bound
sbb
pop
xor
push
jns
fdivrs
mov
test
mov
jnp
mov
ficompl
aas
dec
fimuls
and
cmpsb
out
in
stc
mov
aad
fld
xor
mov
dec
mov
jo
shlb
xchg
leave
in
push
mov
jne
cmp
call
jmp
inc
and
inc
adc
loope
inc
cltd
xchg
mov
lcall
mov
mov
cmp
in
dec
xchg
test
in
sbb
xor
into
icebp
inc
rol
jmp
pusha
or
pop
and
jle
ss
sub
mov
pop
push
dec
lds
pop
jle
cmpsl
outsb
imul
mov
in
ja
sub
aam
add
and
pop
mov
das
jle
jl
cmpsl
mov
push
fnstenv
pop
push
addb
xor
sub
fadds
jnp
xchg
data16
sub
bound
sub
fcoml
or
jne
pop
jle
ret
andl
into
pop
les
adc
jae
mov
daa
adc
mov
add
pop
insl
iret
mov
add
movsl
mov
out
lret
pop
movsb
scas
loop
stos
jno
pop
cwtl
add
mov
outsb
sahf
and
stos
cmc
imul
xor
fldenv
xor
mov
aaa
lods
lods
push
jns
mov
andb
mov
lods
aam
mov
mov
cli
mov
or
lret
jns
mov
stos
popl
imulb
xchg
and
sbb
outsl
scas
lsl
xlat
jg
inc
and
in
sub
fs
repnz
add
mov
jns
subb
add
test
addr16
and
das
sarb
push
into
orb
int
loopne
repz
add
dec
or
add
pop
lcall
add
add
add
sarb
in
cs
pop
popa
aad
addl
mov
xchg
cmp
cwtl
pop
stos
jns
pop
pop
pop
fucom
mov
sbb
out
lock
cli
repz
xchg
js
mov
xor
loop
pop
test
sub
lret
cmp
push
mov
add
leave
test
pop
imul
or
ljmp
loopne
in
sbb
int
lret
pop
mov
ljmp
push
adc
ret
daa
movl
mov
test
daa
sbb
jge
dec
out
loope
iret
or
mov
lds
jge
out
lds
jp
fnstcw
sbb
and
cld
xor
push
aaa
xor
jae
add
xchg
mov
aam
xor
sahf
inc
das
push
jl
test
sub
decl
push
test
fistl
mov
xchg
in
push
pop
cld
sbb
rcrb
leave
div
xchg
xchg
jnp
add
mov
inc
cmpb
jle
xor
pop
push
cmp
out
movsb
sti
push
cltd
dec
shll
call
gs
sub
arpl
fstpt
daa
jle
sbb
pop
jb
mov
push
mov
imul
clc
loop
jns
pop
jo
movsb
popa
push
lea
sbb
dec
int
loope
loope
sub
movsb
or
jne
ljmp
cmp
pop
cmp
mov
inc
cmpl
pop
rorb
push
mov
xor
xchg
or
xlat
push
cli
mov
push
dec
jge
cmp
call
mov
sbb
insb
outsl
xor
xlat
nop
xor
outsl
inc
insb
data16
pop
ss
scas
xchg
out
movsb
xor
outsb
sbb
cltd
mov
cmp
roll
in
lret
int
and
daa
or
push
daa
test
xor
push
repz
pop
pop
das
xlat
push
push
in
inc
out
scas
xchg
clc
mov
mov
xor
pop
cmpsb
mov
cli
cwtl
jb
jmp
scas
jns
fiaddl
rol
mov
stos
enter
cs
sbb
faddl
testl
or
push
xchg
xor
pop
fstps
rorl
mov
mov
and
dec
outsl
xchg
loopne,pt
addr16
sbb
bt
adc
das
or
push
sub
or
dec
push
inc
sub
call
fsubl
mov
push
jns
mov
jl
fistpll
arpl
in
test
inc
add
cmp
jbe
ljmp
push
pusha
and
enter
nop
push
int
push
ss
jl
jge
pusha
hlt
sbb
mov
pop
or
pop
mov
xchg
sbb
sar
push
push
mov
mov
mov
adc
imul
cmp
or
fdivrs
add
xor
mov
popf
daa
in
fmull
gs
call
jne
or
out
psubd
adc
mov
cmc
orb
scas
int3
cmpb
fs
push
test
cmc
dec
dec
mov
mov
js
jg
ds
lds
ret
arpl
sarb
fcmove
dec
cld
cmc
sub
outsb
out
lahf
fcmove
pop
cwtl
adc
jmp
push
hlt
lret
mov
fld
lea
push
es
cmp
scas
dec
fldl
xor
cmpsl
xor
outsb
sbb
aam
inc
icebp
adc
jmp
xchg
divb
jg
mov
aas
mov
fwait
je
rep
fs
lods
in
stc
xchg
sti
pop
fcomps
in
xor
insb
push
fnstenv
xor
jecxz
mov
push
in
mov
pop
ret
inc
adc
negb
dec
pop
jne
rol
cmpsb
mov
shll
jge
sbb
leave
in
adc
add
out
mov
in
pop
add
call
inc
mov
cwtl
sub
mov
enter
push
and
insl
dec
nop
pop
xchg
hlt
lret
push
push
jg
mov
and
push
add
pop
fabs
xor
ljmp
in
jbe
test
add
in
inc
loopne
in
cs
in
mov
xlat
inc
or
loope
decl
dec
inc
push
ds
pop
popf
inc
mov
xor
sub
push
cli
dec
jae
repz
inc
xchg
dec
mov
mov
mov
cmc
pop
jle
imul
cwtl
jmp
xchg
inc
adc
mov
mov
push
lods
pop
push
mov
lahf
cmp
adc
les
es
scas
pop
mov
push
outsb
push
sub
bound
jl
pop
push
imul
add
and
cmc
xchg
cmc
sbb
nop
xlat
dec
pop
inc
xchg
xsha1
cmpsb
push
push
clc
or
sub
scas
adc
dec
xor
rorb
int
popa
pop
push
sub
fnstcw
push
dec
or
lea
mov
or
leave
dec
push
push
mov
add
in
dec
xlat
cmc
xor
cmp
mov
loopne
cmp
leave
in
sbb
movsl
sub
fcompl
lods
shlb
test
xchg
lds
insb
inc
out
mov
and
push
subl
jb
data16
push
pop
repnz
icebp
or
cmp
dec
push
cmp
mov
sbb
jnp
loope
jns
ret
mov
push
imul
or
mov
int
mov
test
add
lahf
xor
or
aam
inc
ljmp
les
pop
movsb
or
fisubrs
bound
into
push
test
mov
andl
inc
inc
mov
test
jg
lods
es
mov
sbb
outsl
int3
jno
xrelease
mov
pop
mov
mov
cmc
dec
jno
jae
enter
xchg
dec
ljmp
jge
test
movsb
mov
jl
pop
andl
push
pop
xchg
mov
xchg
cmp
dec
jecxz
daa
ljmp
or
call
shl
or
inc
lock
icebp
sub
xor
loopne
insb
sbb
mov
or
xor
pop
fldenv
or
xchg
stos
or
xor
les
inc
loope
addr16
repnz
cli
fidivl
ret
imul
cmp
or
push
sub
xor
fs
push
mov
inc
popa
inc
mov
ror
repnz
xchg
cmp
and
push
fcoml
mov
jl
jae
sub
das
mov
bound
loopne
sub
jecxz
das
push
cmc
sbbb
mov
pop
pop
int
stos
xchg
mov
mov
fs
or
adc
sub
test
int3
sbb
enter
icebp
out
inc
cmp
aad
sbb
lret
jmp
call
sbb
enter
jno
cltd
fldenv
loop
fsub
jb
popa
test
leave
push
add
ret
nopl
daa
sbb
fwait
loop
mov
sti
jns
call
inc
or
push
push
mov
mov
dec
sbb
pop
jo
in
call
push
sbb
xchg
test
shrb
int3
je
xchg
pop
stc
jae
ljmp
lea
or
addb
dec
fucomi
pop
in
stc
lea
xor
pop
mov
jl
std
jg
inc
jge
xlat
test
and
les
push
and
sub
out
adc
aaa
clc
loopne
sti
mov
sahf
in
dec
dec
das
adc
stos
push
jge
add
inc
pop
sbb
inc
pop
pop
pusha
jl
jl
call
push
and
gs
fnstsw
mov
adc
adc
clc
inc
push
negl
xor
pop
xchg
jle
nop
adc
lret
add
inc
or
inc
or
add
and
cmp
push
mov
testb
lea
jno
std
out
fdivr
lret
xchg
sbb
mov
pop
jmp
inc
jge
sub
clc
fidivl
dec
dec
je
shlb
adc
push
push
lods
insl
lea
fnstenv
dec
inc
mov
jmp
lock
je
insb
fwait
ljmp
pop
sbb
mov
into
xchg
enter
or
ret
ljmp
pop
push
mov
push
lret
or
xchg
sbb
aad
mov
jecxz
lret
add
adc
sbb
into
pop
cs
mov
mov
sub
enter
push
cmp
cmpsb
lret
inc
cli
push
sbb
repz
cli
call
dec
cld
inc
push
or
sub
cltd
popf
test
idiv
movsl
mov
mov
mov
fidivrs
cld
or
adcl
enter
sbb
stos
pop
adc
push
mov
sbb
shrl
xor
add
mov
add
adc
push
pop
inc
jecxz
pushf
mov
stos
lret
sarb
jecxz
lods
enter
mulb
clc
movsl
adc
les
mov
dec
xchg
mov
gs
lcall
fbld
sarl
fxch
pop
mov
mov
jmp
outsl
dec
js
xchg
pop
loop
andl
pushf
outsb
add
insb
inc
daa
jmp
sysenter
mov
movsl
sahf
nop
call
pop
fsubs
rclb
out
dec
ja
int3
mov
fwait
pop
ja
jae
adc
inc
cmp
jle
xor
sbb
jg
cmp
iret
shl
xchg
ret
and
aaa
loope
fcompl
adc
jecxz
data16
popf
movsl
jg
out
lret
jo
test
gs
bound
fidivrs
rcll
testb
repz
lods
loopne
js
test
ret
ds
stos
mov
or
mov
or
dec
or
and
fmull
sub
mov
jns
push
pushf
call
test
xchg
mov
arpl
mov
cmpsl
or
push
inc
fs
out
pop
sti
lods
jp
adc
sbb
adc
sub
or
data16
cmp
fwait
dec
xor
mov
push
test
push
rolb
mov
sti
ds
inc
mov
outsb
fbld
xchg
scas
jmp
orb
sti
addl
mov
iret
mov
cmp
jmp
arpl
hlt
test
jecxz
or
es
loope
xchg
dec
sub
mov
setb
ds
and
loopne
push
lods
cmc
mov
movsb
push
adc
or
enter
and
pop
hlt
sub
jne
push
or
andb
stos
mov
stc
mov
jg
jnp
lret
call
add
sub
and
clc
cmp
sarl
test
bound
jbe
icebp
sahf
mov
les
push
aam
in
sbb
repz
rclb
push
jbe
stos
cmp
sahf
outsl
popf
scas
inc
pop
fstps
dec
rcrb
or
mov
lods
xchg
cmp
dec
imul
cmp
dec
call
mov
xor
mov
subl
out
jge
xchg
aas
divb
inc
fildll
outsl
xor
call
pop
push
shr
lahf
cmpb
pop
pop
ficoml
imul
and
data16
xchg
dec
sarb
or
mov
or
dec
xor
js
lret
addr16
adc
pop
dec
push
into
sbb
mul
gs
jecxz
ljmp
dec
sbb
push
or
ret
sub
xorl
xchg
adc
pushf
xor
out
lcall
or
fnstsw
bound
or
mov
cmp
jae
sbb
and
jbe
inc
mov
divl
cmp
sbb
std
and
sbb
adc
loope
lods
mov
fs
das
enter
pushf
popf
mov
jg
clc
inc
mov
cmp
pushf
imul
in
arpl
das
int3
rorb
ret
push
pop
lret
rcrb
ja
pop
fldt
cmp
das
sbb
flds
js
out
cli
divb
rclb
mov
data16
fidivrl
or
in
pop
inc
enter
test
mov
and
mov
sbb
divl
mov
push
data16
mov
inc
sbb
cmpl
fdivr
adc
in
and
mov
mov
gs
repnz
cmpsb
bnd
insb
dec
call
cmpsl
popa
dec
imul
sub
lret
add
into
inc
addr16
pop
sbb
mov
add
xchg
enter
repz
or
mov
fimull
adc
cmp
fmuls
jbe
push
test
std
bound
movsb
pop
mov
in
sub
dec
add
in
mov
int
gs
ja
loopne
adc
aas
aaa
mov
lock
aaa
fxch
imul
sbb
xchg
int3
xchg
rol
lds
addb
outsb
bound
push
btrl
nop
clc
shll
les
sub
sbbl
out
push
imul
sub
mov
loopne
and
xchg
outsb
test
sbb
cmpsl
das
insl
repz
pop
fildll
mov
shlb
xor
cmp
mov
mov
mov
out
xor
jno
pop
call
mov
sub
ret
pop
jp
std
fstps
in
xchg
dec
out
shrb
jg
mov
cmc
rclb
pop
fistpl
push
sbb
xor
scas
insb
dec
push
sub
inc
stos
and
gs
add
adc
xlat
adcb
pop
cmp
or
ja
inc
pusha
add
aam
repnz
scas
dec
or
push
leave
mov
xor
loope
lret
movsl
dec
jp
test
and
mov
push
movsl
rorl
es
push
dec
mov
stos
scas
repnz
iret
add
and
add
push
ljmp
jmp
push
mov
lods
fimuls
mov
int
cltd
or
xchg
lret
std
std
mov
lock
xchg
cmp
and
rcrb
ljmp
pop
push
popa
out
mov
mov
pop
es
jmp
xor
ret
hlt
mov
lea
jb
xchg
cmp
test
data16
gs
push
push
adc
shr
mov
repnz
test
insl
mov
rcr
mov
test
xchg
sub
dec
inc
stos
pop
xor
push
dec
mov
add
dec
ja
repz
cli
lcall
add
xchg
fldt
in
xchg
inc
test
inc
daa
xchg
insb
hlt
xor
jge
fldenv
xchg
mov
sarb
flds
movsb
add
push
push
push
outsl
mov
mov
cmp
outsl
inc
cmp
lret
jmp
inc
mov
mov
mov
outsl
stos
insb
pop
inc
dec
lahf
pusha
mov
mov
xor
ficomps
cmp
ss
mov
xor
jb
ds
pop
movsb
pop
and
inc
divl
sbb
mov
xor
xor
push
pop
nop
mov
jbe
or
into
push
jl
cmpsb
out
js
pop
call
cmp
popa
mov
cmp
jbe
ljmp
cmp
add
xor
jg
sahf
pop
in
or
mov
adc
push
filds
xchg
dec
repz
or
ret
pop
movsl
dec
das
repz
cmp
es
xchg
fwait
xor
push
or
ss
aas
shrb
dec
mov
imull
cmp
popa
fs
scas
cld
scas
push
loope
loopne
in
aam
stc
out
js
cmpsl
xchg
daa
in
mov
push
xor
sub
daa
pop
mov
sub
movsb
mov
push
jl
pop
xchg
fcmovu
addr16
and
xor
sub
in
and
jl
push
jne
push
jb
jne
jp
jge
into
das
xchg
cmp
dec
cmp
adc
mov
and
les
add
and
xor
into
xor
mov
hlt
mov
add
sub
out
push
push
insb
jbe
adc
lahf
call
fmuls
movsl
rcr
stos
cmpsb
sbb
jl
dec
lahf
jns
sbb
sbb
aas
dec
popa
sbb
pop
or
cwtl
ret
sarb
mov
incl
in
in
jne
lahf
addr16
outsb
cmpsb
xlat
fisttpll
jp
xchg
inc
out
es
sub
dec
shll
xlat
clc
mov
inc
subl
dec
pushf
lds
sbb
iret
imul
push
mov
jg
pop
push
cmp
and
push
and
fsub
sahf
loop
inc
sbb
xlat
popa
sbb
xchg
ret
cltd
shll
jg
in
push
test
jbe
mov
inc
out
push
icebp
bswap
outsb
sbb
dec
sbb
fdivl
adc
jp
addl
loop
mov
cs
push
std
lock
mov
lret
stc
cmp
mov
or
lds
xorl
test
jmp
jmp
push
sbb
movsl
mov
inc
mov
int
lahf
sti
mov
pop
out
mov
loopne
stc
rolb
add
mov
push
jge
pop
push
jg
lret
xchg
out
arpl
ja
in
xchg
clc
cmpsl
iret
pusha
dec
sub
loope
dec
es
int
enter
jg
mov
mov
xor
je
or
fucom
lods
popl
lret
fwait
mov
mov
lret
scas
sarl
push
shrl
xrelease
lea
cmp
xchg
sbb
jmp
bnd
push
cmpsl
dec
xor
cmc
and
ret
dec
jg
in
push
cwtl
jb
jmp
cmp
fld
fnstcw
pusha
mov
dec
mov
je
mov
dec
sub
sti
stos
imul
das
add
inc
or
ficoml
push
in
cmovle
lock
jp
mov
js
mov
dec
mov
movsb
pop
mov
xlat
test
xor
fsub
xchg
inc
cmpsl
scas
out
pop
sub
mov
gs
mov
jg
into
pop
sti
pop
mov
rcrl
std
cmp
pushf
in
sbb
subb
mov
inc
xor
fsubrs
test
push
cmp
out
xchg
or
jns
jl
sub
jns
adc
sbb
mov
ret
scas
xchg
cmp
push
push
rcrl
ja
dec
cmpsb
mov
jg
jecxz
pop
push
or
jnp
int
sahf
out
jno
leave
ret
xchg
xor
or
mov
mov
movsl
lods
fyl2xp1
sbb
lods
push
sub
mov
and
lret
mov
xchg
cmp
cmpsb
icebp
sub
pop
adc
out
mulb
cs
push
or
shll
pop
dec
in
add
xchg
push
stc
dec
xchg
hlt
pop
cwtl
or
fiaddl
scas
repz
nop
mov
sahf
ret
test
test
add
ret
in
rorb
out
push
jbe
lock
xor
movsl
cmp
call
lahf
test
mov
popa
fcoms
mov
inc
daa
xchg
cli
push
and
lock
adc
inc
cmp
or
stos
std
pop
xchg
in
ret
out
mov
mov
loop
lods
mov
loope
loop
fsubl
mov
mov
fldl
sub
inc
pop
ret
dec
jae
adc
pop
add
inc
aas
cmp
adc
adc
jge
sub
fwait
cld
jge
add
xchg
cmp
pop
das
mov
adc
movsl
sub
int3
push
fs
in
sbb
jae
in
out
out
dec
mov
dec
jbe
into
outsl
mov
enter
push
fistpll
je
loop
leave
test
leave
push
nop
jecxz
add
test
ja
jns
sbb
repz
gs
jmp
push
lods
mov
cwtl
fcompl
xchg
ss
push
lds
lea
lret
mov
add
sbb
sbbb
mov
xor
mov
xchg
mov
xchg
inc
jecxz
mov
sarb
adc
mov
fnsave
xor
cs
insl
vmovsd
inc
push
xor
lret
cld
mov
push
fwait
xchg
and
loop
addr16
in
or
inc
aam
aad
stc
inc
xchg
shl
sti
in
add
fidivrl
loope
lcall
mov
rorb
or
out
mov
pop
testl
loopne
filds
cs
or
jo
mov
xor
jle,pt
jnp
push
ds
cmp
orl
nop
xor
cmc
mov
stc
pop
push
fnstenv
fcomip
cmp
insl
jmp
sub
movsb
test
inc
mov
data16
dec
adc
loope
adc
mov
mov
mov
adc
jecxz
loop
sti
test
loopne
sub
lea
jmp
mov
jns
dec
and
cltd
push
cmp
mov
ss
pop
adc
xchg
or
mov
movsb
pushf
jne
inc
es
fdivl
and
cmp
je
cmovnp
lods
push
fdivrs
or
push
test
js
stos
add
test
pop
or
mov
cmp
lods
adc
testb
inc
adc
sti
gs
int3
dec
mov
or
mov
inc
lahf
mov
mov
dec
cld
cs
mov
xor
xchg
stc
je,pt
call
xor
mov
xchg
int3
xor
nop
push
jne
push
notl
xchg
test
dec
adc
out
adc
js
jne
je
aaa
jnp
inc
add
notl
in
or
aam
fstps
pop
daa
test
dec
xor
cld
jecxz
fsubl
sub
push
xor
and
jb
adc
test
lret
dec
jmp
inc
mov
jp
add
rcrl
sti
movsb
adc
dec
cmpsb
jmp
xchg
and
shlb
outsl
sbb
mov
xor
jmp
cld
stos
xchg
into
outsb
orl
inc
lods
sub
jecxz
lds
mov
push
test
or
push
sbb
loopne
mov
addr16
pop
leave
dec
xchg
out
and
cmp
ljmp
push
sbb
dec
pushf
outsl
cmp
sti
outsb
pop
icebp
leave
and
mov
mov
inc
mov
sahf
or
scas
divb
push
movsb
pop
xor
or
lods
movsb
or
inc
daa
or
loope
xor
imul
add
mov
jmp
dec
imul
sbb
int
xchg
xor
and
out
pop
mov
pop
jno
inc
out
fcoml
loope
inc
inc
cmc
mov
push
sbb
mov
rol
pop
sarb
cs
mov
shll
push
xor
and
lcall
add
aas
mov
scas
ss
jmp
mov
out
pusha
outsb
inc
movsl
test
fs
fadd
mov
stos
movsl
lds
rorl
imul
into
pushf
mov
imul
in
out
add
dec
mov
cs
clc
mov
add
jge
xchg
fs
in
pop
aam
sbb
dec
movsl
out
or
cld
lret
sbb
push
cmp
sahf
in
push
sahf
lods
out
lcall
push
pop
les
fstps
cld
mov
ja
sbbb
jnp
push
lret
pop
popf
pop
cwtl
push
mov
test
or
dec
orb
adc
call
test
jne
loopne
push
xlat
and
and
cmp
add
mov
inc
test
mov
pop
lret
adc
mov
adc
jae
in
into
test
xor
dec
xchg
xchg
push
mov
mov
daa
xchg
sub
movl
out
lcall
mov
mov
lds
out
pop
jle
sub
push
pop
stos
mov
dec
stc
lahf
leave
divl
jns
push
add
mov
arpl
test
add
mov
jne
xor
sbbl
mov
adc
call
mov
adc
xchg
xor
cmpb
push
insb
or
xor
mov
fsubs
out
loopne
je
xchg
xlat
or
out
out
push
or
add
cltd
mov
inc
rorl
pop
cmp
mov
and
and
push
sub
fsts
mov
mov
add
mov
inc
cwtl
mov
out
ss
mov
dec
jnp
cmp
inc
xlat
jo
popa
in
popa
iret
inc
add
xchg
add
daa
das
das
cs
xchg
lods
dec
repnz
jns
sub
adc
addr16
into
xchg
in
movsb
or
xchg
jae
sarb
xor
mov
adc
xadd
sbb
clc
lods
lahf
push
mov
lret
inc
je
ret
ror
sbb
movsb
sub
jb
leave
jp
pop
cltd
mov
leave
jne
cmp
loopne
jl
out
lret
add
ja
addr16
es
call
iret
test
sub
jge
sub
inc
xchg
jl
insb
xor
pop
lds
aaa
stc
mov
and
pushf
dec
imul
dec
testb
in
popf
push
aaa
or
mov
jl
ret
pushf
arpl
in
push
xor
lods
lea
ljmp
mov
jle
mulb
adc
lret
addr16
stos
mov
pop
imul
sbb
arpl
xor
cmc
mov
mov
aaa
clc
clc
mov
sbb
fidivrs
lahf
xor
xchg
add
out
sti
addl
lods
xchg
or
lds
mov
xchg
popa
popa
imulb
xor
pop
xor
mov
dec
in
dec
push
arpl
data16
pusha
call
adc
inc
mov
jge
push
outsb
fisttps
and
lods
pop
dec
mov
xchg
mov
rolb
xlat
mov
adc
mov
mov
addr16
pushl
imul
out
mov
xchg
scas
movsb
je
inc
rorl
fsubl
ret
hlt
mov
lods
loop
int3
fisubs
jno
scas
ror
xor
pushf
subb
icebp
pop
and
xor
imull
pushf
mov
dec
mov
cmp
push
sbb
xchg
dec
adc
cld
pop
adc
cmpb
and
mov
pop
cmpsl
cli
repnz
or
rol
mulb
sti
cmc
and
repz
inc
jge
push
mov
arpl
inc
or
mov
jno
push
sbb
sub
jge
push
or
fsub
stc
cmp
sub
xchg
popa
and
mov
sbbl
dec
cmpsl
and
cltd
or
in
inc
not
movb
rcll
inc
es
jbe
inc
daa
addb
mov
or
mov
rcr
adc
imul
jb
mov
push
adc
mov
aas
sti
inc
jo
movsl
aaa
iret
je
add
arpl
jo
stc
stc
lret
sbb
jge
inc
xor
lds
add
and
sbb
mov
sub
fcomi
or
repnz
out
mov
les
sbb
xor
mov
dec
push
int3
aas
les
js
rcrl
xor
or
cs
jns
cmpl
cmp
push
xchg
sbb
in
cmpsb
jne
pop
fisubrl
mov
lods
sbb
stos
pushf
xchg
fs
ds
sarl
fildl
mov
lret
shrb
sbb
or
sbb
shll
stc
ds
or
movsl
fsubr
lods
mov
push
movsl
push
scas
stc
out
jnp
mov
ret
ss
addr16
lods
mov
aad
sbb
sbb
add
xor
hlt
xchg
or
xor
lock
sahf
insb
mov
gs
loopne
aaa
add
adc
xchg
push
mov
jecxz
sbb
mov
rorw
push
cwtl
add
push
push
sbb
add
sub
sub
push
jae
pop
push
sbb
inc
out
inc
and
jnp
mov
popf
shl
lods
nop
into
xchg
push
ds
xchg
loopne
dec
pop
jbe
sti
cmp
sub
daa
int3
mov
iret
movb
sbb
xor
sbb
imul
and
pop
and
mov
pop
mov
leave
ficoms
daa
dec
or
mov
sahf
cmp
push
adc
aam
cmpsl
rclb
jmp
ja
movsb
jo
scas
xchg
test
jmp
push
lods
int3
stos
je,pn
xchg
dec
and
xchg
divl
repnz
cltd
add
adc
add
lret
adc
je
mov
ja
mov
std
sub
push
movsb
or
mov
popa
das
ds
pop
pop
or
jge
dec
xlat
mov
pop
iret
sbb
out
pop
xchg
mov
dec
pusha
push
aaa
call
pop
fcomps
dec
push
hlt
adc
mov
mov
jp
adc
ret
pushf
insb
in
je
mov
sub
mov
scas
popf
sti
adc
ds
or
push
pop
fsubl
or
inc
int3
into
aad
movsb
jb
add
lock
jae
fdivl
ret
leave
jecxz
xor
mov
mov
lret
test
test
pop
push
pop
mov
mov
stc
test
imul
repnz
adc
add
sub
fnsave
jg
cld
lret
scas
jge
das
out
mov
les
xchg
lcall
mov
mov
jmp
mov
xchg
mov
les
dec
ret
and
in
sub
xlat
pop
push
gs
outsl
in
push
jecxz
mov
pop
mov
mov
mov
aad
lock
lods
loop
ror
int
dec
pop
pop
mov
push
pop
xchg
jle
xor
xchg
hlt
notb
pop
aad
or
push
repz
and
lret
sub
jo
dec
push
sbb
popf
jmp
mov
push
sbb
imul
fstpl
js
xor
lods
lahf
adc
adc
in
movsl
pop
dec
test
sub
adc
out
mov
iret
and
std
or
cmc
fcoml
mov
push
pop
sub
fwait
lods
test
aas
xlat
lds
mov
push
xchg
ss
test
mov
xchg
or
cmp
mov
sub
ss
rclb
pop
jecxz
and
inc
popl
jmp
mov
sbb
adc
es
sub
and
jl
ficomps
xchg
popw
test
mov
std
ss
daa
jmp
fimull
outsb
mov
fisubl
and
mov
cmp
cltd
addr16
fidivrl
and
inc
xchg
addl
subl
mov
stc
scas
sbb
in
das
mov
mov
ror
xor
lock
pop
add
lahf
int
sub
cmp
lret
sub
jne
repnz
push
pop
cs
add
js
and
int
negl
xchg
daa
popa
sub
cmp
pop
sti
test
test
out
xchg
xor
fidivrs
lret
cli
push
daa
test
lret
mov
inc
repz
rcrb
cli
movsb
add
ja
add
and
jmp
int3
xor
push
sbb
xor
or
movsl
mov
sub
in
rol
ja
xchg
inc
pop
nop
pop
push
jg
retw
test
cmpsl
adcl
mov
push
sbb
std
mov
mov
cmp
ljmp
in
add
and
lods
mov
add
sub
nop
mov
xor
divl
jne
call
aam
lret
pop
pop
xchg
add
or
mov
mov
adc
je
shlb
sahf
lea
xchg
xchg
test
aas
or
inc
add
stos
sbb
sbb
xlat
cmp
mov
xor
pop
sahf
out
repnz
cltd
mov
jbe
push
mov
in
rclb
xor
or
pop
cwtl
popf
push
or
data16
add
xor
cltd
incb
aam
je
cmp
push
push
mov
in
sti
lods
test
push
mov
fildl
shl
mov
lods
mov
mov
aam
add
jl
push
cmp
out
add
jnp
cmp
sub
add
xchg
jl
in
cwtl
andb
pop
mov
inc
lahf
or
sarl
shr
pop
lret
xchg
xor
ret
jmp
mov
test
jge
orb
adc
pop
adc
or
hlt
pop
je
sub
cmpsb
xor
mov
imul
rcrl
icebp
daa
xor
or
cltd
out
mov
adc
cmp
ficomps
or
out
loop
mov
fisubrl
xchg
in
jecxz
mov
inc
cltd
or
aad
idiv
notl
mov
out
jecxz
popa
insb
push
jmp
jb
push
das
inc
jecxz
rcr
xor
call
xchg
aam
imul
add
lcall
mov
adc
scas
mov
jp
fcoms
gs
mov
jle
lods
jo
cmp
or
lret
dec
sbb
xchg
dec
lret
xor
rorl
mulb
test
leave
gs
and
out
xchg
add
sub
pop
enter
mov
pop
or
jmp
shrb
pop
jno
sub
fsubp
dec
adc
and
mov
mov
in
sbb
fcmovne
out
sbb
mov
sub
mov
xchg
adcb
cmp
cwtl
push
repnz
fsqrt
xchg
orl
xor
stos
ja
in
sub
leave
xchg
adc
mov
fwait
insl
stos
stos
test
sarb
cmp
fs
shrl
insb
xor
repnz
insb
mov
jg
aas
imul
mov
outsb
ud0
stos
and
pop
movsb
and
test
imul
mov
in
xchg
lock
mov
mov
repnz
jge
mov
pusha
iret
adc
add
or
leave
and
lahf
icebp
movsl
or
pop
stc
loopne
flds
add
int3
int3
es
insl
mov
mov
js
add
fmull
adc
out
sbb
xor
pop
pop
and
sbb
push
aad
and
and
in
xor
icebp
jge
mov
cmp
inc
and
xchg
mov
adc
ret
imul
dec
pop
stc
push
adc
sub
push
sbb
sbb
push
cmp
fs
fwait
sbb
and
jae
imul
ljmp
scas
cmp
daa
add
jmp
jne
jo
test
push
lret
rcrb
jle
outsb
sbb
mov
inc
push
sbb
pop
mov
dec
sbb
in
mov
and
inc
icebp
lea
and
enter
xchg
mov
jp
icebp
stc
adc
inc
xor
xor
push
popl
mov
adc
stos
sub
in
xchg
pop
leave
cmp
dec
lret
push
popa
fwait
adc
adc
xchg
cmpsb
inc
mov
push
fnstenv
int
or
sub
mov
lds
mov
test
pop
mov
daa
movsl
inc
xchg
idivl
push
push
xor
stos
adc
dec
inc
cmp
insb
sti
mov
jge
fs
adc
loop
inc
call
mov
mov
xor
pop
cmp
arpl
arpl
mov
lret
mov
push
out
inc
stos
cmp
adc
or
sbb
gs
int3
mov
gs
call
jns
pop
imul
adc
mov
mov
fcom
ret
mov
mov
jge
cmpsb
mov
push
ds
sbb
xchg
les
fisubs
sbb
mov
pop
mov
out
shll
or
in
jo
aaa
sub
push
rcll
in
loop
test
adc
jae
push
mov
lds
cmpsb
sub
mov
in
mov
movsb
and
and
cmp
jmp
mov
cmp
xor
repz
xor
cmp
xor
aad
xchg
out
push
pop
pop
das
or
test
or
cli
push
movsb
push
sbb
sahf
xlat
jne
scas
xor
lcall
movsb
adc
sub
mov
insb
pop
add
int3
inc
adcb
scas
out
pop
imul
es
fistpll
or
shll
xor
sbb
push
mov
insb
add
jns
sti
in
mov
mov
lock
and
test
inc
xor
fwait
mov
test
je
pop
or
leave
aaa
das
sbb
jno
aas
orl
nop
mov
jecxz
loopne
pop
push
sti
and
sub
sub
pop
mov
inc
cmc
stc
fsubl
and
nop
dec
xchg
cmp
mov
int
leave
push
xlat
ja
fdivs
xchg
or
jnp
mov
mov
cmp
push
cmc
adc
daa
sub
inc
push
call
mov
xor
push
push
idivb
shlb
adc
imul
into
mov
fwait
adc
addb
test
mov
mov
sti
adc
xor
sti
cli
cli
sahf
int3
aaa
loop
repz
mov
mov
gs
hlt
call
xchg
pop
cmp
iret
fbld
jae
xorb
test
loop
or
xchg
mov
push
std
jbe
test
dec
in
lea
stc
sub
push
add
jecxz
sub
aad
lret
rcrb
sti
fnstcw
adc
into
stos
fldl
out
xchg
stos
xchg
rcl
ss
jmp
mov
pop
or
xchg
sarb
jbe
jecxz
test
movsb
cmc
in
cmpsl
out
and
add
mov
jge
aam
fnsave
xor
rolb
xchg
les
aas
in
lret
add
pop
fsubs
push
jo
stos
xchg
adc
jbe
sub
push
and
out
clc
std
push
das
inc
cmp
lods
es
jl
adc
adc
outsl
bnd
jbe
addl
sub
ret
mov
mov
int
mov
mov
cmpl
cli
cli
jp
pushl
js
pop
popf
adc
inc
fdiv
sub
in
mov
int3
jne
dec
loope
dec
dec
pop
in
push
push
mov
or
xor
repnz
dec
outsb
test
lods
cmp
pushl
sub
cld
and
jnp
insl
sub
out
lock
xlat
push
jmp
sbb
pop
mov
scas
stos
pop
idivl
jns
sbb
testb
inc
dec
jmp
div
fmul
loopne
mov
cs
adc
push
addr16
les
fs
mov
inc
cld
dec
mov
sbbl
pushf
int3
push
add
push
ret
sub
inc
negl
incl
add
adc
adc
sarl
jbe
adcl
pop
ret
sbbl
cmp
cmpl
mov
pandn
push
dec
nop
loop
adc
push
mov
adc
fwait
adc
mov
mov
addr16
pop
xlat
mov
pop
cmp
cmp
jecxz
pushf
in
fldt
lcall
leave
lods
loopne
ja
dec
lret
ljmp
stc
cltd
adc
sar
adc
add
mov
jo
xor
test
mov
in
jecxz
icebp
xchg
addl
mov
push
andb
insb
sbb
jo
test
pushf
divl
icebp
add
lock
mov
xchg
loopne
mov
loope
and
rcrl
or
pop
inc
aas
repnz
pop
adc
lods
mov
cmc
gs
jbe
out
and
xor
mov
mov
insl
dec
ret
icebp
mov
mov
sar
lds
pop
or
out
dec
out
xchg
lret
xchg
rclb
jno
and
inc
repnz
push
pop
xchg
pop
sbb
lds
mov
ret
mov
or
mov
test
xchg
cltd
mov
sbb
insl
mov
xor
xlat
stc
cwtl
lods
sub
lcall
pop
mov
dec
mov
fwait
dec
mov
sbb
add
je
enter
pop
push
jne
cs
and
push
inc
lock
test
daa
enter
call
push
js
mov
scas
in
cmp
pop
out
fmul
subl
adc
popf
dec
imul
inc
dec
add
dec
int
aad
sahf
push
and
lock
sbb
mov
call
ret
dec
scas
push
sub
and
jmp
add
pop
rorb
ljmp
enter
loopne
lret
xor
lcall
inc
mov
jmp
lret
sbb
inc
test
rcrl
cli
push
cwtl
loope
mov
stos
insb
aaa
pop
lock
cmp
inc
mov
add
ficoms
cmpsb
jp
xchg
pusha
outsb
push
imul
inc
mov
or
push
jae
in
add
push
jo
fdivrl
push
jg
cmc
or
inc
pop
mov
stos
pop
pop
jp
out
jmp
push
add
les
xchg
pop
add
jecxz
lods
xchg
ss
test
sahf
add
gs
push
xor
aam
cmc
mov
stos
push
ficomps
mov
outsb
into
cmpsb
sbb
pop
mov
in
push
xlat
lock
sbb
and
mov
fadds
add
pop
test
mov
pop
push
push
inc
push
push
xchg
push
sbb
mov
dec
adc
popw
es
pusha
jno
fdivl
loopne
test
add
xor
xor
mov
ds
test
adc
jnp
popf
mov
insb
jge
mov
popf
jne
or
pop
rolb
jo
xchg
loope
mov
push
inc
stc
cmp
ss
push
or
or
stos
pop
mov
insb
movsb
popl
subb
ds
lret
push
les
cmp
sbb
lods
sbb
xacquire
fs
cli
xchg
test
lea
popf
jns
push
aad
ficomps
adc
mov
cmp
pop
fstl
xchg
loop
daa
push
gs
hlt
xor
les
aad
stc
stos
jmp
and
cltd
pop
add
ret
pop
jbe
lods
push
mov
fdivrl
cwtl
arpl
cmp
fdiv
test
adc
cmp
daa
addb
arpl
negl
in
pop
icebp
jecxz
sbb
leave
mov
arpl
jae
cmpsl
mov
adc
sahf
and
cli
pop
xor
popa
pop
add
mov
cwtl
push
dec
or
and
jg
cmp
sbb
pop
fsubrl
pop
dec
xchg
fsub
mov
or
lds
mov
mov
jbe
fadds
loop
test
mov
movsb
fsubrs
xlat
rol
fs
cmp
jmp
add
mov
lcall
cmp
ja
push
xchg
or
pop
jp
sbb
ret
pop
dec
and
push
mov
ss
cs
in
lds
sbb
mov
jl
pop
aad
mov
inc
sbb
jbe
or
mov
jne
outsb
idivl
mov
ficompl
stc
cmp
xchg
test
popa
loopne
scas
sbb
movb
out
mov
xchg
xchg
mov
mov
sbb
cmp
inc
adc
sub
pop
repz
push
mov
pop
gs
push
jb
mov
mov
sub
jmp
addb
mov
xchg
jge
mov
fdivrl
mov
mov
inc
lds
addr16
jmp
testl
mov
cmpsl
and
xor
mov
in
nop
xor
cmc
sub
or
mov
push
xor
fisttpl
xchg
mov
push
and
mov
ret
xchg
das
lds
ss
test
iret
cmp
dec
or
dec
jp
lahf
push
xchg
fistps
sahf
xchg
lahf
fadds
sahf
lcall
xor
pop
pop
inc
cmpsl
rcl
pop
adcb
jns
pop
sub
jle,pt
xchg
add
mov
sbb
rcrb
pop
seta
sbb
xor
adc
pop
inc
pop
out
out
push
lret
in
and
push
mov
adc
inc
sub
push
mov
shlb
stos
test
mov
dec
orb
jecxz
push
outsl
out
xchg
pusha
and
out
xor
dec
sub
sbb
bound
jne
add
fcomp
lret
aam
and
cmp
fsubs
aam
xchg
mov
mov
xchg
cmpsb
xor
rolb
popf
mov
xor
xchg
loope
ja
sbb
sbb
jge
addr16
cmpsb
js
inc
gs
sub
test
pop
ja
out
adc
dec
push
cmp
adc
sbb
lcall
xchg
scas
fxch
mov
sbb
mov
ja
and
pop
lods
dec
cs
ja
popa
out
clc
lahf
and
dec
and
sbb
cli
shr
sbb
mov
cld
stos
jae
pop
scas
sub
int3
jb
jmp
or
leave
jmp
lds
out
push
das
inc
adc
dec
daa
xor
push
loope
loop
and
mov
cmp
or
loope
jo
es
sbb
or
cld
out
stos
outsb
lret
imul
add
add
sbb
cmpsb
mov
testl
sbb
xor
sarb
jge
ljmp
xchg
mov
mov
xchg
imul
inc
xchg
add
cmpsb
sbb
rorl
sbb
insl
add
jge
jo
add
mov
imul
out
repz
mov
xor
out
das
ret
pop
fs
inc
mov
aam
ret
imulb
clc
jl
xchg
jecxz
push
cmp
mov
mov
mov
add
xchg
xchg
mov
push
and
test
mov
cmp
gs
add
cmp
subl
cmp
out
push
inc
xchg
dec
fs
fisubs
aaa
aas
mov
and
jns
pop
jb
je
jno
std
shl
mov
mov
in
cld
xchg
adc
sbbb
iret
push
pop
cmc
xchg
sub
xor
lea
jecxz
pop
xor
js
and
movsl
pop
cmpsl
test
aam
int3
rol
and
in
push
ss
pop
out
aam
sub
in
fdivrp
adc
or
mov
fcomps
sbb
out
test
jmp
nop
adc
dec
addr16
xor
out
pop
ss
cmp
je
jae
int
xchg
loope
jmp
scas
pop
aas
rep
aad
or
test
dec
xor
shll
adc
js
addr16
cmc
sbb
jo
test
in
lret
and
outsb
clc
mov
pop
repnz
addr16
xchg
xor
mov
cmp
inc
in
iret
lcall
inc
or
jo
dec
add
ljmp
or
mov
xor
rcr
mov
popl
stos
aas
cmp
xchg
aam
mov
les
xchg
fdivs
mov
sub
push
push
inc
out
cmpsb
iret
orl
rcr
adc
rcl
sub
inc
inc
push
hlt
js
daa
into
imul
inc
fmul
cmpsb
ljmp
and
cltd
xchg
dec
pop
dec
pop
xor
cmpsl
mov
push
xchg
fldt
and
xor
cmp
cmpsb
add
xor
and
cltd
sti
inc
pop
push
xchg
out
jl
sub
subb
popa
sbb
aad
mov
adc
in
xor
xchg
pop
and
add
pop
stos
sub
out
adcb
push
lret
popf
stos
or
ja
sub
mov
adcb
in
fcomps
mov
sbb
in
mov
mov
adc
fiaddl
icebp
sahf
jg
pop
adc
aas
in
sub
adc
fdivrs
push
rol
pop
mov
neg
inc
pop
push
aas
mov
daa
fistpll
cs
out
xor
and
inc
aad
adc
subl
and
aad
mov
push
sbb
and
cmovo
es
in
rcrl
push
les
xchg
sub
dec
mov
adc
jnp
mov
sbb
push
stos
inc
sbb
inc
xchg
cmp
aad
mov
push
mov
daa
push
adc
fcmove
js
orb
sbb
bound
sbb
clc
insl
fisubrs
mov
and
fldl
cltd
xchg
and
jbe
out
inc
movsb
daa
call
jge
push
sub
test
call
scas
loopne
ss
outsl
sbb
ljmp
mov
mov
testl
into
movsb
mov
inc
fists
mov
adc
ds
mov
sub
scas
jno
push
sbb
sub
das
ficomps
insl
popf
mov
test
mov
leave
ljmp
test
icebp
ret
pop
ss
loop
xor
xchg
daa
or
pop
mov
mov
cmp
adc
jp
push
adcb
xchg
mov
mov
add
mov
ds
mov
bound
fcoms
xchg
jb
loop
pop
jb
pop
shrl
and
and
sbb
dec
test
mov
or
out
cs
mul
rcr
arpl
xchg
inc
inc
sahf
in
pop
cmp
sahf
das
sub
int3
in
sub
sbb
mov
pop
icebp
cld
out
cld
shlb
data16
inc
imul
sbb
and
int3
or
xchg
jne
xchg
jbe
push
mov
std
mov
push
cmp
or
daa
pop
shr
xchg
jns
iret
pop
sub
mov
aaa
push
ret
cmp
imul
dec
mov
lahf
pop
inc
sub
xor
and
xchg
rclb
or
sbbb
mov
cmp
or
sbb
insl
jae
fldt
movsl
jno
mov
and
pop
mov
lea
rolb
inc
aaa
inc
push
outsl
shll
mov
dec
dec
test
clc
in
cs
sbb
scas
incb
mov
xor
pop
lahf
sub
test
dec
inc
and
test
add
mov
addr16
das
dec
outsl
into
cltd
mov
sbb
movsl
inc
or
into
icebp
sub
scas
outsb
out
xor
lcall
pop
lods
test
insb
add
add
lahf
ja
xlat
mov
popa
mov
pop
cmpsb
pop
push
movsl
fdivr
xor
xchg
mov
push
imul
je
loop
sti
repz
mov
sbb
cmp
push
cmp
dec
push
nop
xor
das
cmp
pushf
sbb
adc
mov
pushf
push
bound
icebp
pop
cmp
and
imul
fisttpl
cmc
sub
mov
testb
inc
push
inc
shl
cmpsb
cmp
lods
xlat
movsl
pop
pop
xchg
ja
push
or
rcll
push
leave
sbb
dec
mov
push
jl
bound
mov
mov
push
mov
cmp
sbb
pop
and
lds
jae
mov
add
xor
sbb
mov
shll
aaa
cltd
add
out
dec
sahf
sub
xor
push
leave
xchg
inc
pushf
test
fstl
popa
stos
add
pop
xor
lahf
idiv
gs
test
push
sub
test
je
fistl
mov
test
popa
data16
fstpt
mov
jg
dec
jl
outsb
push
insl
and
inc
loope
mov
rcll
loopne
movsl
inc
or
mov
dec
notl
inc
into
pop
adc
pop
movsl
fdivl
cld
push
push
xor
xchg
sbb
xlat
jns
mov
add
lret
pop
lods
bound
mov
adc
test
addr16
dec
imul
outsl
mov
enter
shlb
rcll
push
or
stos
jnp
scas
in
enter
lods
adc
aad
xor
inc
inc
pop
sbb
lret
pop
adc
hlt
mov
mov
addl
out
push
or
xchg
jmp
push
push
je
sub
es
movsb
stc
add
scas
jp
std
loopne
jl
pop
popf
sbbl
pop
cmpsl
or
int
or
mov
fnstenv
and
mov
jne
jnp
pop
mov
lock
hlt
pop
inc
cmpsl
shl
mov
dec
cmpsb
adc
fdivl
push
int3
stos
cwtl
int
push
xchg
mov
leave
add
mov
mov
fstpl
push
mov
jb
sub
in
mov
cltd
dec
adcb
xchg
test
sahf
fs
je
in
dec
shlb
push
jbe
mov
pop
bound
push
aam
rcll
dec
sbb
mov
loopne
push
push
mov
add
movsl
mov
fsts
or
push
scas
cli
repnz
pop
js
cmp
add
cmp
add
pop
adc
gs
mov
sbb
cmpl
cs
sub
stos
cmp
add
and
mov
pop
cmp
out
jb
add
nop
jno
int3
stos
hlt
jecxz
dec
and
sarb
decl
ja
push
mov
cmc
pop
into
mov
pop
adc
loope
fstpt
pop
lock
cs
pop
inc
out
test
fsubrl
mov
call
out
dec
push
ficomps
cs
push
and
jmp
aas
lret
push
iret
orb
adc
fnstcw
cmpsl
xor
test
cmpsb
aad
cmc
aas
adc
xor
jmp
xorb
sti
push
scas
inc
loope
enter
rcll
fists
push
fs
ds
sub
sbb
cld
stc
scas
int
add
sbb
ljmp
fcmovbe
hlt
clc
adc
es
or
jle
xchg
dec
cmc
add
push
push
cmp
out
sbb
cld
testb
into
pusha
scas
and
jb
xor
mov
sti
cmp
in
inc
mov
fildll
mov
popf
rorb
adc
mov
jnp
stos
inc
das
dec
daa
aaa
lahf
push
lahf
mov
mov
je
andb
and
ss
pop
add
std
cmpsl
les
xchg
subl
adc
dec
sbb
adc
loope
pop
leave
aad
fdivrl
lret
inc
xor
scas
int3
lods
xchg
ja
fmull
mov
cmpl
push
sub
jns
out
push
scas
mov
test
cld
adc
test
push
xchg
mov
pushl
jmp
sahf
mov
and
std
dec
push
dec
sbb
push
mov
mov
movsb
in
and
iret
fistpl
rolb
jns
rcrb
inc
cld
pop
mov
add
jle
fdivrs
inc
stos
popf
lock
dec
nop
sub
jns
rcrb
aad
pusha
lahf
stos
testb
sub
dec
dec
test
cmp
push
sub
push
jae
sbb
dec
imul
push
dec
or
mov
mov
fsubrp
jp
rcrb
out
icebp
loopne
roll
lods
iret
push
jbe
pop
pop
or
movsb
mov
inc
sahf
iret
stos
sbb
mov
mov
cld
into
loopne
xor
sub
scas
pop
nop
leave
popf
outsb
fs
push
xor
pop
js
bnd
adcb
icebp
xor
inc
imul
sub
popa
pop
xchg
or
push
add
fbstp
mov
lods
inc
fadds
dec
cmp
sbb
push
sahf
inc
inc
and
in
pop
in
out
pop
lods
shl
inc
fwait
mov
mov
lcall
mov
mov
xchg
sti
outsl
xchg
and
push
push
rclb
aas
std
daa
fisubl
dec
ficoms
int3
pop
xchg
loopne
lods
mov
xchg
cmp
pop
inc
mov
decb
cmp
cli
cmp
cmp
dec
inc
cmc
xlat
cwtl
pushf
cld
and
pop
lahf
xor
pop
jbe
in
notb
pop
cltd
in
add
subb
fmull
and
fisubrs
push
adc
insb
inc
mov
shlb
int
rol
adc
mov
jno
dec
jno
xor
dec
mov
push
pop
enter
pop
daa
push
xchg
loope
lcall
inc
pushf
call
aaa
sbb
testb
pop
xchg
mov
repnz
push
or
cwtl
out
xlat
push
incl
adc
sub
jg
mov
clc
mov
bound
push
push
popf
lahf
adc
add
xorps
cmp
in
cwtl
addr16
dec
mov
test
popf
cli
cmp
add
jbe
xchg
cs
les
jns
adc
mov
call
xor
xchg
addr16
xchg
push
mov
jbe
xor
cmc
jecxz
xchg
jp
daa
xor
sub
arpl
hlt
cmp
or
negb
repnz
icebp
sti
add
in
jbe
mov
sub
lods
shlb
ljmp
sbb
inc
adc
add
loopne
mov
push
mov
add
xor
lret
jmp
loop
test
inc
mov
mov
push
les
stos
arpl
pusha
repnz
fisttpll
pusha
jmp
fs
scas
mov
mov
cmpsl
repnz
imull
push
movsb
pop
cwtl
push
mov
lods
sbb
test
movb
icebp
and
dec
arpl
ja
cmp
lret
or
fsubrs
aas
lahf
or
pop
push
add
pop
notw
add
or
outsl
mov
subl
push
mov
push
mov
fcomp
pop
push
mov
shll
jp
das
loopne
or
test
stos
test
mov
push
ret
in
inc
adcb
mov
imul
pusha
or
test
jae
push
xlat
mov
and
repnz
xchg
push
xchg
lods
push
sbb
cmp
daa
out
xchg
cmp
iret
lcall
addr16
jae
nop
jp
inc
xor
push
inc
pop
cmp
or
stc
mov
je
nop
inc
ror
xor
cs
stc
rcrb
pop
pop
jns
cmp
sbb
and
int
cld
enterw
sub
out
jmp
xchg
jne
adc
mov
xchg
xlat
ds
jecxz
ja
lcall
jne
test
das
sbb
ss
pop
sbb
xor
mov
out
test
mov
dec
popf
inc
xor
outsl
sbb
mov
nop
ficoms
or
out
stos
jmp
push
pop
js
lret
pop
daa
cmpsl
lea
lods
mov
aaa
xchg
mov
jge
xor
outsl
sub
dec
add
fisubrs
xorl
dec
stc
int3
push
ret
pop
repz
sub
lret
jg
sbb
js
test
dec
xchg
jg
xor
sub
rclb
in
daa
outsl
dec
mov
jb
int
dec
je
adc
mov
int3
xchg
icebp
mov
push
add
pop
pop
or
xor
mov
mov
jp
push
std
fstps
xchg
std
lret
pop
add
imul
xchg
jl
jb
push
mov
add
rol
cmpsl
jnp
das
cld
sub
cli
cmp
xchg
stos
and
and
or
icebp
sbb
xchg
mov
mov
adc
mov
fwait
push
mov
mov
enter
test
pop
negl
push
jmp
mov
fstps
in
in
test
ja
test
pop
jno
inc
pop
adc
mov
decl
dec
cmp
fisubl
xlat
pusha
mov
sahf
xchg
inc
jge
fstpt
jb
mov
cmpsb
scas
xor
jle
scas
in
mov
lret
test
lcall
sub
fdivl
out
lea
dec
notl
fildl
or
sub
outsb
mov
sbb
insb
push
jae
pushf
jmp
and
cmpsl
gs
and
in
dec
aad
mov
jl
mov
xchg
popa
mov
insl
fistpll
mov
mov
or
xchg
fistpl
jp
es
popf
add
dec
jno
and
dec
adc
in
loop
pop
add
movsb
jo
test
xchg
push
inc
xchg
and
aam
adc
call
and
xchg
adc
or
test
mov
lods
lret
add
dec
adc
inc
mov
push
push
js
fbld
and
mov
sbb
jb
icebp
push
daa
pop
into
push
cmpsb
cmp
in
ret
push
inc
int
push
imul
push
call
dec
test
sub
jo
inc
hlt
and
push
stos
mov
mov
jle
pop
mov
cmpsb
sbbb
sub
lock
mov
popa
dec
inc
aas
testb
xor
imul
add
inc
movsb
xor
jb
dec
lret
or
adc
push
xor
xor
lret
sbb
push
xorl
lods
jmp
cld
fwait
jecxz
shll
jl
jb
cmp
loopne
jb
and
mov
hlt
jg
xchg
jmp
dec
mov
mov
stc
inc
dec
push
out
pop
loop
pop
mov
js
jmp
cmpsl
scas
cmpsl
mov
and
xchg
sbb
test
sti
int
xchg
xchg
sti
and
aas
and
rcl
sub
pusha
leave
fdiv
sbb
jns
mov
mov
or
in
frstor
testb
push
insb
scas
cmp
fimuls
cs
pop
loopne
das
pop
hlt
pushf
cld
xchg
sub
out
and
mov
add
aad
rcrb
xor
xor
inc
icebp
push
ret
lock
add
lods
ficoml
xchg
and
and
push
rorl
movsb
lods
dec
xor
int
dec
mov
es
aaa
add
inc
rcrb
mov
sti
adc
aas
leave
pop
fisubs
fistl
popf
lcall
xchg
cmp
adc
pop
loopne
mov
mov
loop
sub
pop
adc
loopne
cmp
incb
xchg
adc
jae
jo
test
pop
mov
outsl
adc
or
in
clc
in
out
mov
ljmp
add
scas
xor
inc
xrelease
rcl
fmuls
mov
push
cld
stc
dec
pop
dec
sahf
xor
ds
or
push
dec
clc
idivl
sub
inc
fstl
mov
jg
iret
jge
inc
cld
js
ljmp
dec
pop
inc
add
push
jo
out
lret
ror
push
jg
add
lods
mov
int3
rol
rorb
scas
daa
inc
adcb
add
xchg
pop
sti
jecxz
adc
inc
sbb
xchg
outsl
lods
pop
js
jecxz
and
ret
and
xor
jmp
mov
adc
mov
pop
movsl
cmpsl
jle
pop
cmpsl
push
dec
xchg
mov
pushf
sbb
test
xor
push
add
fistps
pop
inc
ds
push
jno
imul
adc
mov
int
pusha
adc
cmp
dec
mov
gs
popf
xchg
addr16
pop
mov
and
icebp
push
sub
pop
cmp
loopne
cwtl
xor
sarb
call
in
enter
dec
jnp
xchg
cmp
inc
insl
pushf
fdivrp
or
push
add
cmp
rorl
decb
and
outsl
lods
aas
ror
inc
repnz
sbb
xor
adc
jg
test
or
push
iret
test
jno
stos
jo
mov
std
and
cmpsb
test
mov
adc
dec
or
adc
fcmovbe
xchg
sub
fidivl
lock
sbb
cmp
mov
jbe
cmp
std
shr
nop
jl
mov
dec
adc
in
fldcw
xlat
pop
stc
xor
xchg
sub
add
out
dec
je
mov
pop
and
adc
loope
add
data16
imul
lcall
mov
dec
and
iret
arpl
push
jb
adc
mov
mov
lods
cli
jo
es
pushf
push
fisttpl
or
les
sahf
jg
lret
cmp
mov
mov
fistpll
sahf
and
fistpll
mov
sbb
adc
sbbl
sbb
inc
push
dec
dec
jmp
sbb
jl
pushf
xor
movsb
ds
sbb
push
xor
jbe
mov
repnz
aaa
dec
scas
cmp
cmc
loope
in
jnp
test
cmp
pusha
inc
xor
loope
and
out
out
pushf
jns
ja
or
aam
and
sub
fsubrp
push
lret
cltd
mov
mov
test
int3
push
jnp
push
icebp
test
das
or
xchg
add
ret
push
fcomps
rclb
in
mov
test
jnp
pop
mov
sub
stos
aad
idivb
pushf
adc
stc
mov
mov
add
dec
cmp
lock
mov
jbe
ret
movsl
cld
repz
shll
mov
sbb
pushf
xchg
xchg
push
cmpb
out
mov
nop
rcll
sbb
aad
jecxz
mov
inc
es
cmpsb
mov
jb
inc
lock
dec
mov
insl
push
ds
push
nop
imul
movsl
cltd
dec
lea
test
fistpl
test
fstps
sbb
into
ret
or
std
push
inc
lcall
out
cmp
into
popa
mov
sbb
jp
jge
xlat
adc
stos
inc
fcoml
ret
pop
mov
outsb
xchg
xor
xor
shll
push
inc
sub
or
out
pop
sub
cmc
push
jno
mov
aam
lods
adc
lods
xchg
clc
push
pop
add
pop
xchg
push
mov
imul
test
inc
push
mov
xchg
mov
sbb
sub
add
xorl
shlb
pop
lret
hlt
push
pop
xor
sub
jns
jg
sti
jbe
ret
lods
dec
cli
mov
inc
dec
cmp
or
mov
icebp
mov
subl
mov
dec
fisubs
or
mov
jns
xor
sbb
push
cltd
sub
push
loop
mov
ss
movsb
adc
fnstenv
mov
inc
lods
and
xchg
jl
imul
inc
pop
lea
je
mov
and
cwtl
das
pusha
or
inc
fld
movsb
jbe
sbb
mov
and
cmp
lods
cwtl
iret
outsb
outsb
xchg
push
mov
cmp
mov
loopne
dec
jmp
push
icebp
mov
mov
add
dec
adc
cmp
xchg
push
fisubrl
or
jb
or
add
cli
sahf
shl
cmp
out
sub
mov
inc
xchg
into
mov
push
inc
mov
lods
rolb
addr16
daa
iret
cltd
fbld
push
cwtl
mov
addr16
cmp
movsb
in
push
inc
loop
push
mov
out
inc
jle
push
mov
jne
jbe
andb
cs
xchg
pop
push
daa
sbb
push
call
outsl
out
dec
fisttps
xchg
push
xor
test
adc
ss
ret
pop
dec
or
inc
sbb
cli
mov
iret
icebp
nop
fisubs
push
fildll
aas
adcl
mov
sbb
inc
cmp
mov
ss
fcomps
or
add
addr16
mov
mov
roll
and
cmp
loope
andb
mov
inc
mov
dec
fs
sbb
cmpsl
sbb
lds
testl
in
arpl
clc
or
aaa
in
jp
addr16
mov
pop
push
cmp
int
daa
inc
push
xor
jp
in
insb
xor
inc
and
call
or
pop
scas
mov
sub
sbb
loopne
mov
popa
in
push
pmuludq
and
jno
cltd
lret
cmp
stc
and
shll
loop
push
xchg
mov
cmpsl
out
rorl
adc
arpl
sub
leave
and
fwait
stc
jo
bound
fs
and
mov
mov
ffree
mov
stos
push
js
ret
std
jp
imul
stos
lret
mov
and
jb
mov
outsl
push
out
xor
ficoms
jo
lcall
mov
sti
adc
and
inc
mov
xorb
mov
out
les
sub
pop
xchg
clc
sbb
mov
ret
movsb
pop
repnz
cs
mov
xor
and
adcb
std
xor
jae
mov
fisttpl
aam
inc
andb
sbb
shll
inc
jp
leave
dec
mov
and
test
push
push
popf
push
dec
inc
jo
ret
or
inc
aaa
scas
cmpsl
add
in
mov
shl
fcoms
cli
ds
add
cld
fistps
in
fwait
stos
lret
popa
sub
dec
stos
jno
test
popf
je
pop
xchg
adcb
lods
in
test
ds
fwait
xchg
push
pop
repnz
mov
outsl
out
lret
mov
fstpt
lods
jo
mov
rcll
test
outsl
adc
jl
sbb
dec
jg
int3
ficoml
xlat
mov
clc
and
pop
jp
push
jnp
sbbb
adc
jns
cwtl
add
mov
inc
jnp
jno
jne
mov
add
test
jno
fisubrs
fstpl
fcmovu
stos
dec
loop
js
scas
mov
out
in
push
mov
cmpsb
cmp
mov
lcall
add
repnz
xchg
mov
scas
dec
test
xchg
scas
jmp
push
fcmovne
sbb
sahf
adc
ds
cmp
jmp
adc
mov
mov
xchg
repnz
pop
icebp
xlat
scas
jge
fneni(8087
lret
ljmp
sbb
popf
fstl
and
and
cmpsl
jecxz
push
cmp
mov
push
call
ljmp
xchg
js
fnstcw
inc
sbb
lahf
push
cmc
sub
or
sahf
lret
adc
or
fs
jne
add
lret
inc
sbb
push
jmp
jnp
imul
pop
jl
rcrl
mov
decl
jl
cmp
negl
sub
jo
js
mov
into
adc
das
and
jge
aas
and
adc
cltd
clc
mov
out
stos
loope
xchg
idivl
mov
pop
adc
daa
and
imul
pop
insb
inc
shll
rcr
adc
test
xchg
xchg
push
popf
jno
fildl
mov
adc
sarl
ror
sahf
dec
lods
xlat
cmpsb
xor
test
cmp
and
int
pop
mov
aas
xchg
in
jbe
cmovbe
dec
outsb
ja
lods
cmpl
es
pop
xlat
xor
dec
adc
mov
fld
inc
arpl
mov
repz
dec
xlat
sub
ss
push
mov
pop
popf
lock
push
stos
ja
push
jl
sbb
sub
frstor
xchg
xor
pop
mov
jbe
rclb
out
lret
xor
out
fninit
cmpsb
in
std
cwtl
es
add
cmp
push
xchg
or
jns
adc
jo
imul
pop
cmp
pop
xor
xor
mov
sub
and
jns
popa
adc
mov
jns
mov
pop
cmpsl
aaa
mov
adc
arpl
in
sbb
out
je
mov
adc
ds
mov
jno
mov
je
jbe
shlb
adc
pop
mul
dec
std
orl
sbb
ja
push
insl
lahf
jecxz
and
test
mov
subl
popf
adc
mov
bound
adc
nop
dec
bound
aam
jae
sbb
sarb
dec
orl
sbbb
daa
rcrl
dec
popa
ret
push
test
fcmovnb
sahf
stc
aaa
jno
xchg
add
incb
lcall
dec
ror
pushf
xchg
adc
dec
adc
arpl
mov
sti
xlat
push
jae
leave
mov
jnp
xchg
mov
xchg
mov
data16
mov
push
mov
inc
sbb
sti
lea
mov
jmp
and
repz
fdivr
in
testb
add
push
das
adc
stos
xchg
cs
into
das
lret
lods
cmpsl
rcl
dec
icebp
push
add
aad
mov
inc
or
jne
and
pop
or
pop
and
stos
decl
jp
fmul
cmp
popl
fwait
decl
jno
aad
test
adc
or
out
inc
mov
lahf
ss
push
mov
push
scas
sar
cmpsb
popa
adc
jmp
mov
adc
mov
xorb
iret
sub
cmp
or
fnsave
xchg
sub
ds
popa
pop
pop
cld
adc
call
inc
loope
mov
mov
loopne
jmp
jle
dec
jle
bound
xchg
jmp
leave
jne
fnstsw
ret
dec
cltd
add
mov
and
cmpsb
addb
push
and
stc
aas
out
jbe
gs
loop
mov
jg
push
inc
dec
arpl
sahf
mov
sti
iret
push
popf
cmp
in
dec
and
ljmp
sbb
jmp
mov
add
sbb
xor
xchg
adc
movq
inc
push
mov
stc
cmpsb
pop
stos
sbb
xchg
loope
adc
mov
xchg
ret
cmc
lret
sub
jecxz
inc
fs
ds
mov
ljmp
pop
push
sbb
aaa
mov
or
push
adc
insl
xchg
insb
aaa
push
inc
in
dec
js
orl
js
test
sbb
dec
jo
ss
jge
and
adc
in
mov
repz
push
mov
mov
jno
iret
dec
inc
push
push
imulb
sarb
pop
mov
out
mov
mov
xchg
mov
je
add
fnsave
mov
mov
dec
push
xchg
mov
cli
ror
filds
or
shll
xchg
movsb
cmpb
jns
or
inc
pop
xor
mov
test
add
mov
cmp
jne
and
dec
xor
addb
pop
sarb
ficoms
movsb
ja
popa
cmp
fnstsw
movsb
mov
cmp
aad
aad
unpcklps
jle
mov
and
lcall
jae
in
iret
lcall
bound
jns
int3
bound
hlt
stos
das
mov
bound
popf
push
adc
xor
jne
cmp
xchg
inc
leave
sahf
or
sub
out
sarl
mov
mov
jmp
mov
ret
imul
mov
and
cmp
fs
les
inc
sbb
enter
xchg
dec
lcall
out
stc
push
push
ficoms
xor
out
pop
dec
mov
and
mov
scas
jne
mov
pop
fneni(8087
dec
xchg
pop
jmp
int3
aam
inc
pop
push
repnz
decl
push
jle
push
outsl
bound
lock
inc
xor
xchg
push
pop
fs
xchg
sub
sub
push
gs
lea
stc
mov
lods
xchg
lret
xchg
and
in
fimuls
test
xchg
push
nop
pop
fwait
mov
sub
sbb
andb
lahf
dec
lock
mov
cmpsb
adc
add
int3
movsl
pop
or
loop
test
pushf
xor
enter
mov
sbb
in
loop
es
mov
das
ss
mov
xchg
lret
mov
xor
pop
inc
mov
pushf
ss
filds
loope
or
add
sub
mov
xchg
pop
mov
fldz
xor
xchg
mov
iret
test
mov
fidivrl
dec
dec
xchg
pop
pop
ljmp
inc
mov
mov
fadd
push
xrelease
hlt
je
push
inc
and
aam
cmpl
mov
mov
int
xor
imul
adc
in
cltd
sbb
movsl
push
repnz
lock
push
out
jge
ja
or
lret
stos
and
movsb
scas
rorb
sub
sbb
sub
bound
or
out
popf
call
imul
lods
je
pop
int3
cmp
pop
mov
mov
arpl
mov
in
into
jle
or
pop
dec
push
scas
rcrb
sbb
inc
pop
mov
ds
or
xlat
xor
mov
sbb
hlt
out
test
cmp
lock
pop
movsb
shll
jmp
mov
in
imul
dec
push
sbb
test
stc
clc
test
xchg
push
notl
stos
add
jbe
and
dec
mov
movsb
lea
jbe
mov
push
mov
fwait
cmpsb
mov
push
mov
pop
pusha
and
ljmp
mov
lea
cmp
enter
aad
inc
mov
mov
stos
out
das
sbb
and
repnz
pop
in
mov
mov
cmpsl
mov
mov
mov
ret
clc
inc
dec
cmp
repz
out
jbe
pop
ficomps
addr16
fcoms
mov
cltd
inc
je
in
dec
dec
or
testl
and
pusha
daa
pop
fwait
adc
mov
lods
xor
jp
mov
cmp
push
xchg
dec
inc
or
adc
jne
push
pushf
mov
aad
mov
mov
mov
xor
mov
movsl
gs
out
divb
jge
jb
inc
popf
fidivrs
sub
cmp
lock
mov
lcall
inc
test
jne
call
push
outsl
xchg
mov
or
inc
fsubrl
xor
sub
jl
les
push
push
stc
jbe
and
push
int
ss
fwait
fwait
cmpsl
add
xor
icebp
std
out
ljmp
or
sub
pop
cmp
iret
adc
flds
xor
shlb
inc
jle
scas
mov
test
and
push
cwtl
aad
daa
fdivrs
add
mov
jbe
dec
xchg
cs
sub
clc
imul
popa
fwait
xor
mov
push
pop
push
out
mov
cmp
xor
stc
out
xchg
dec
xor
mov
adc
inc
icebp
out
sub
jnp
jo
out
inc
and
cmpsl
pop
inc
jmp
add
mov
adcl
inc
rcrb
add
jg
xor
cwtl
jns
jo
cmpsl
dec
lock
push
mov
or
pop
ss
out
stos
lds
mov
mov
out
test
gs
mov
cmpsb
pop
mov
test
aam
cltd
out
cmp
add
lea
repnz
mov
lret
dec
insb
cmp
or
lods
mov
mov
or
push
inc
and
out
or
lea
cmpsb
xor
jb
enter
or
pop
stos
sbb
or
or
inc
fsubrl
jno
call
imul
sub
add
repnz
sub
ret
fistl
pop
in
aam
mov
adc
pushf
mov
daa
xchg
mov
lcall
repnz
jge
daa
into
xchg
mov
dec
mov
aam
or
adc
arpl
xlat
shll
mov
je
dec
mov
adc
mov
call
jl
xlat
nop
sti
int
icebp
imul
push
std
mov
xchg
aaa
sub
cmp
add
mov
cs
mov
test
or
jmp
jl
cmp
sbb
rcr
and
test
pop
cmpsl
pop
xchg
imul
es
adc
sub
sbb
ss
mov
sahf
mov
mov
out
xor
sub
imul
lcall
xlat
repnz
cmp
or
or
icebp
ficompl
out
jno
push
cmp
stos
bound
movsb
mov
push
shrd
lahf
daa
sbb
sbb
dec
jns
mov
out
and
push
movsl
jns
and
das
fs
add
adc
fisubs
sbb
add
popa
adcl
jae
or
sub
lds
adc
mov
test
addb
mull
sub
push
sbb
mov
push
int3
jbe
xorb
inc
jl
pop
pop
out
add
aad
mov
push
sbb
mov
push
sahf
loope
sbb
xchg
push
cmp
jne
sub
loopne
js
cli
mov
add
out
xchg
and
xchg
adc
xchg
and
lcall
pop
in
adc
mov
jae
xor
movsb
xchg
xor
out
out
icebp
sub
mov
arpl
in
xchg
aad
out
mov
sub
pop
mov
mov
xlat
pop
push
repz
sbb
pop
lret
test
add
inc
xlat
mov
mov
push
push
jb
push
jg
pop
and
xchg
and
repz
sub
pop
sub
inc
push
push
enter
repnz
cltd
loop
addr16
mov
ret
jp
shll
xor
pop
adc
aas
push
or
add
cmp
xchg
dec
xor
int3
aam
push
push
push
loope
xchg
test
sub
xor
jno
xchg
mov
testb
xchg
sbb
or
mov
test
sub
jne
push
popf
movb
cmpsl
sbb
insb
mov
dec
sbb
sub
pop
sarb
cmpl
ja
popf
mov
inc
xchg
push
push
js
dec
popf
pushf
jge
fdivrl
ja
and
out
push
insl
mov
imul
jg
adc
roll
repnz
and
mov
or
in
dec
lcall
movsb
movsl
jge
pop
inc
lret
aam
lahf
fwait
add
or
call
adc
cmp
and
xchg
cmovs
cmc
add
addb
loopne
cmpsb
push
out
ds
xchg
rcr
add
iret
pop
gs
shr
popf
movsl
sbb
in
push
xor
addl
inc
dec
mov
adc
aaa
ret
fimull
jge
push
les
fs
jg
pop
sbb
popf
out
adc
cmc
fdivl
mov
repnz
xor
mov
daa
pop
ficoml
in
aad
push
gs
mov
lcall
cmpb
pop
add
dec
incl
mov
jl
pusha
add
push
sub
jns,pt
cmpsb
lock
ret
push
test
sub
scas
push
jg
jle
pop
mov
aad
imul
pop
and
push
xchg
clc
xchg
xchg
aam
test
pushf
stc
adc
and
push
aaa
sub
xchg
aas
ret
out
mov
or
addr16
lret
sbb
out
lahf
pop
cmp
xchg
std
stos
mov
popf
cmpsb
or
mov
dec
xor
fistl
or
xchg
xchg
lret
mov
xor
push
and
mov
leave
les
or
es
fcoms
js
xchg
leave
es
fwait
or
cmpsl
pop
dec
and
fistl
in
cmpsb
push
xor
pushf
loopne
xchg
mov
ljmp
inc
fldcw
arpl
lahf
test
fdiv
call
cmp
fsubr
add
leave
jle
sar
cmp
xor
lret
and
cmp
cltd
pop
or
outsb
insl
push
lahf
data16
xchg
orb
sahf
jmp
mov
push
stos
xor
xchg
dec
das
jbe
scas
outsb
daa
test
lcall
xchg
mov
ljmp
mov
hlt
sub
int3
push
or
push
imul
push
and
in
movsl
stos
jne
push
test
call
insb
enter
outsb
cwtl
xchg
inc
inc
out
repz
clc
inc
rolb
inc
js
lea
and
lahf
xor
mov
idivb
cmp
mov
popa
xor
ja
adc
jecxz
push
rclb
shl
pop
sub
cmp
jbe
lret
xchg
jno
fwait
in
shrb
sbb
rcrl
sbb
pop
or
sub
mov
and
jecxz
mov
popa
or
inc
sbb
mov
cmp
ficomps
popf
dec
call
jbe
xor
pop
add
xchg
jne
in
lock
adc
mov
lods
es
gs
inc
les
lods
test
popa
ss
pop
bound
jno
mov
push
jmp
inc
xchg
enter
push
iret
dec
jp
movsl
and
push
cmpsb
das
ss
cmc
arpl
add
adcb
dec
stos
mov
inc
and
inc
dec
enter
cmpsl
mov
push
mov
mov
sub
pop
cmp
sbb
xor
mov
repnz
dec
and
mov
loop
shll
pop
or
dec
push
push
pop
cwtl
popa
xlat
and
or
arpl
addps
mov
adc
imul
push
fnstenv
or
mov
int3
nop
shlb
adc
xchg
adc
not
test
ret
inc
cwtl
ja
aas
dec
stc
inc
sub
push
adc
xor
bswap
fstl
loopne
mov
fildll
cmpsb
repnz
or
lret
xchg
scas
xchg
rcll
loop
or
and
pop
xchg
shrb
aas
jb
cld
imul
xchg
imul
mov
dec
mov
xor
mov
jp
mov
data16
mov
add
das
mov
rorl
inc
int
mov
rcrl
push
loope
xor
adcb
repnz
shlb
cmpsl
addr16
fldenv
insl
lods
push
stos
pusha
fwait
push
cli
mov
or
mov
and
sbb
ficoml
add
adc
gs
adc
inc
push
dec
sbb
xchg
subb
mov
imul
xor
or
negb
stc
jge
roll
or
dec
ds
dec
or
inc
push
jnp
loop
inc
idivl
add
es
rorb
fucom
pop
push
xchg
and
rorl
mov
cltd
pop
inc
arpl
bound
sbb
mov
push
add
pop
and
mov
mov
sub
push
outsb
jnp
daa
mov
mov
pop
sub
cmpsl
incb
int3
mov
fstpt
inc
bnd
repz
idivb
test
mov
fbld
xchg
pusha
push
xchg
lea
and
mov
push
mov
inc
bound
push
inc
cltd
in
ficompl
xchg
dec
sbb
pop
or
or
imul
or
cltd
stos
mov
push
ds
daa
imul
mov
dec
fmull
stc
testl
lcall
dec
clc
out
xchg
ljmp
pop
lret
pop
mov
sahf
rclb
pushf
idiv
jb
int
adc
mov
xor
stc
movsb
in
jg
sub
mov
in
lds
and
sti
xor
pop
pop
sbb
testl
lret
shl
push
nop
pop
pop
std
jns
lock
imul
loopne
cmp
js
or
mov
in
test
mov
fildll
cpuid
xchg
movl
or
es
or
push
push
cwtl
fidivrs
pop
clc
inc
push
imul
nop
iret
mov
lret
sbb
mov
lods
scas
sub
add
xor
xchg
push
and
xlat
iret
or
push
les
xchg
push
dec
dec
mov
orl
inc
cmp
jae
mov
arpl
pop
ror
mov
jb
call
scas
inc
cmpb
testl
cmpb
xor
jbe
fadd
nop
cmpsl
sub
cmp
pop
push
mov
sbb
pop
frstor
clc
cmpsl
and
popf
adc
stc
ss
loopne
stos
jge
and
pop
push
adc
out
or
push
inc
iret
add
jmp
inc
mov
xchg
push
cmp
cmp
popa
ljmp
xchg
jge
cmp
cmp
je
jecxz
in
les
nop
add
ret
ret
iret
je
lcall
loop
mov
cs
dec
je
or
adc
sub
or
decl
cmp
cmp
in
fld
in
and
nop
arpl
inc
or
or
sti
or
mov
lret
mov
nop
inc
leave
push
movsl
lods
rclb
and
leave
cwtl
je
loope
mul
mov
pop
ds
out
mov
push
sub
daa
pop
andl
ds
mov
inc
add
movsl
sub
out
adc
les
pop
pusha
or
stos
cwtl
dec
cmp
inc
jno
cmpsl
xchg
mov
push
xor
mov
mov
jnp
ret
sarb
jno
movsb
fsubrs
inc
call
rclb
popa
add
adc
lods
fists
jbe
sti
bound
xchg
es
xor
inc
pop
imul
repz
lods
xor
jo
sub
sub
nop
cmpsb
fidivrl
mov
push
mov
lretw
inc
push
int
clc
andps
je
and
ror
xorb
scas
mov
rclb
mov
inc
adc
fs
fcompl
jo
ret
repnz
icebp
sub
cwtl
mov
or
nop
movsl
inc
and
or
cmc
mov
scas
push
push
push
fiaddl
aas
aas
gs
mov
and
xchg
fildll
filds
pop
nop
mov
push
inc
pop
fstpt
xor
inc
mov
mov
mov
inc
out
dec
pop
cmp
mov
popf
xchg
mov
push
inc
push
push
sub
movsb
in
or
sub
wbinvd
cli
or
outsl
daa
por
cli
mov
dec
adc
cltd
push
jno
adc
in
and
mov
pop
mov
aam
mov
mov
cmp
leave
sub
lret
lret
push
fadds
popa
std
negl
xchg
xchg
mov
scas
or
rorb
ljmp
xchg
negb
mov
out
das
jmp
outsl
push
popa
repz
mov
roll
cld
xchg
dec
call
fisubrl
push
and
dec
sub
pusha
mov
ss
pop
fcmove
inc
cmpb
lret
cmp
cmpsl
fsubr
xlat
jl
inc
out
adc
in
dec
ret
jg
iret
xor
push
mov
or
test
iret
out
cmp
cwtl
scas
xlat
loope
dec
push
lds
hlt
push
jge
cmp
adc
ja
push
and
out
aad
pop
ljmp
stc
leave
xor
mov
clc
add
mov
sysenter
push
inc
nop
movsb
in
adc
mov
cmp
lcall
lahf
scas
dec
cld
loope
jne
push
inc
push
sbb
jl
jnp
das
outsb
divl
sbb
push
out
cmp
hlt
sti
jecxz
add
fbstp
aas
sbb
cmpsb
fdivl
outsb
push
mov
xor
test
adc
jl
clc
add
xchg
cmp
xor
adc
pop
rcrb
mov
mov
and
mov
repz
adcb
cs
test
xchg
or
and
push
lods
daa
dec
mov
orl
nop
in
push
outsb
or
sub
test
shll
pop
jns
push
or
lods
jne
inc
and
lock
fcomps
subb
repz
out
mov
jb
xchg
xor
or
pusha
xchg
jbe
sbb
aaa
add
pop
pop
out
fcoml
and
rorl
cs
loope
dec
test
sbb
std
stc
and
dec
negl
ret
push
cmp
and
fucomi
adc
xchg
loop
arpl
outsb
inc
pop
cmc
ja
and
movl
sbb
jecxz
jmp
int
adcb
fs
lock
fcoml
jb
into
sbb
dec
lods
xchg
and
xchg
scas
pop
rolb
lock
out
push
push
mov
or
lds
lret
notl
bound
push
popa
xchg
cmp
xchg
cli
xor
push
push
fimull
call
rcr
add
sbb
cli
pop
xchg
add
addr16
in
xorb
bound
sbb
test
xchg
adc
scas
inc
push
scas
xchg
mov
je
mov
xlat
std
sub
mov
add
push
xor
aam
sbb
mov
stos
test
jae
hlt
sbb
enter
sti
mov
push
mov
mov
fs
movsl
adc
int3
imul
inc
ljmp
push
cmp
mov
jge
int
jle
lods
cwtl
mov
ret
xchg
das
adc
das
sub
jg
inc
clc
ret
clc
filds
stos
inc
pop
mov
jmp
jecxz
pop
adc
testl
mov
push
pop
mov
jge
xchg
add
add
out
dec
mov
xorl
or
mov
push
pop
pop
mov
jle
mov
jecxz
push
xchg
pop
les
push
loopne
mov
es
push
ss
mov
out
out
aad
das
push
dec
dec
js
subb
movl
inc
popf
sbb
pop
adc
in
sub
das
xchg
shlb
data16
addr16
lahf
js
loopne
aas
jmp
not
and
gs
insl
mov
add
bound
pop
call
and
xchg
adc
and
xor
push
imul
add
test
clc
and
mov
rorl
or
jmp
jne
lds
lahf
fimuls
add
pop
loopne
popa
mov
cwtl
fwait
test
cmp
jle
out
sahf
sarb
ss
hlt
sub
adc
fnstcw
pushf
loope
test
pop
sbb
lods
and
xchg
mov
mov
rolb
jg
push
push
xchg
cli
cmc
or
shrb
or
popa
pop
xor
mov
into
mov
rcll
stos
filds
lret
into
pusha
mov
jp
fsubp
loopne
jbe
mov
scas
xchg
xchg
push
or
mov
iret
mov
push
push
jge
push
and
std
sti
push
mov
stos
loop
addr16
pop
pop
test
sub
pop
cs
cwtl
cmp
push
sarb
sub
xchg
xor
in
notl
xlat
dec
dec
test
std
mov
sti
inc
and
sbb
mov
add
xor
test
adc
pop
imul
push
mov
adc
sbb
mov
or
popf
jnp
mov
jo
hlt
enter
addr16
mov
push
outsb
lock
sahf
divb
and
fmull
push
pop
xor
jno
xor
xorb
cmpsl
cmp
out
sub
pop
add
mov
bound
test
xor
mov
jecxz
scas
addb
jle
add
adc
or
imul
std
fstpt
jne
jmp
cmp
push
xchg
mov
inc
rorb
push
and
inc
push
cmp
adc
shrb
sub
dec
rorl
aad
imul
popf
mov
and
xchg
and
xchg
mov
fimull
xchg
inc
pop
scas
add
outsb
pop
mov
or
mov
cmc
cli
xchg
stos
fnstenv
xor
mov
push
rcl
pusha
cli
aad
add
lahf
rcl
pushf
jb,pn
jmp
aas
rclb
push
repz
and
rdtsc
out
clc
pop
rclb
out
adc
dec
ret
lahf
inc
inc
pop
cmp
cld
adc
outsl
add
pop
fdivs
pushf
es
sub
test
pushf
xchg
jecxz
sub
lret
xchg
pop
mov
xchg
pop
xor
outsb
bound
dec
in
into
lea
jp
pop
loop
es
sti
xor
ret
jecxz
push
and
xor
adc
mov
cmp
xor
adc
push
xlat
in
daa
push
sahf
fdivr
and
cmp
andb
cmp
lahf
das
add
pop
scas
sbb
test
sarb
test
inc
add
dec
mov
sti
fs
cmp
mov
loope
push
ja
cmp
lret
mov
lods
sub
ja
jl
xchg
dec
adc
nop
iret
sbb
ss
jl
add
insl
push
in
int
sub
ja
call
in
mov
outsl
cmp
mov
push
adc
cmp
ret
clc
test
movsb
imul
or
enter
test
jle
iret
add
xor
stc
xchg
cmp
mov
aam
inc
pushf
mov
call
in
sub
lods
and
lods
adc
jns
call
shlb
push
jp
lock
push
in
aaa
out
fcoml
test
imul
add
mov
push
gs
inc
mov
js
cli
cmp
pop
push
and
inc
push
lret
and
aad
sti
xchg
adc
mov
sub
insl
leave
cmp
daa
inc
xor
fisttpll
test
sahf
out
mov
cmp
arpl
push
or
jecxz
adc
xchg
mov
push
or
jnp
dec
xchg
movsl
add
call
jbe
insb
add
mov
push
sub
movsb
ja
dec
mov
jge
sub
int
repnz
xchg
dec
jae
inc
lods
jbe
rcrb
xor
mov
movsl
push
popf
xchg
dec
mov
fcomps
xchg
push
sbb
shr
ds
lret
dec
test
dec
mov
or
lret
and
sub
mov
and
movsl
xchg
xchg
cmc
lock
cmpsl
mov
in
pushf
das
lret
fnstsw
das
repnz
inc
daa
icebp
mov
out
cld
sbb
das
lahf
xchg
fdivrl
jle
jo
push
xchg
sub
sti
mov
sub
cs
add
cmpsl
adc
ficoms
aas
jge
sbb
cmp
andb
fwait
stos
pop
xchg
mov
push
jp
ss
inc
sbb
pop
mov
and
jmp
roll
cltd
aad
and
add
in
ja
sub
lahf
cmpsb
arpl
jbe
sahf
std
jg
pop
sbb
sbb
xchg
jnp
out
ja
push
int
test
pusha
aaa
scas
or
inc
and
jl
sahf
cmp
pop
sub
lds
aaa
cltd
in
repz
popf
push
sbb
mov
pop
cmpsl
mov
bnd
pop
pop
pop
inc
jo
mov
inc
pop
mov
popf
xor
xchg
add
push
mov
adcb
mov
pop
cmpsb
xchg
sbb
mov
or
scas
out
xor
pop
push
mov
pop
add
xchg
cli
test
dec
ds
mov
inc
sub
sahf
mov
shr
jae
loop
or
cld
adc
and
xchg
mov
sub
lods
jns
ja
push
fistps
fcmovu
lods
ss
lods
add
lods
or
or
outsl
int
test
cmp
push
je
pop
or
sahf
sbb
adc
cmpsl
jae
test
js
inc
xchg
sarb
ficompl
fs
adc
fildl
add
mov
fnsave
aas
jp
jle
shr
sub
mov
push
fwait
dec
push
cmc
cmp
test
jg
inc
je
xchg
xchg
ljmp
xchg
pop
adc
imull
adc
fs
or
add
add
int
fidivrl
or
rep
in
out
push
mov
jl
or
loopne
xor
add
leave
push
clc
sbb
out
xchg
push
loopne
adc
inc
mov
or
in
ljmp
push
xor
push
sahf
in
outsb
sbb
cmp
and
data16
pop
push
std
pop
imul
js
inc
pusha
iret
into
xchg
inc
mov
out
pop
add
loopne
xlat
sbb
iret
pop
pop
lret
sbb
mov
cmp
pushf
mov
test
xor
pop
jns
in
lods
dec
xor
jae
push
aas
shl
aad
xor
scas
addr16
enter
inc
insb
pop
loope
icebp
cmpsl
push
test
inc
or
inc
testb
clc
sub
and
sahf
dec
sbb
jne
dec
or
dec
loop
lret
fwait
push
mov
sub
mov
mov
mov
push
inc
outsl
in
clc
mov
data16
punpckhbw
xor
loopne
movsb
sbb
sbb
sub
add
jne
leave
mov
popa
push
ret
mov
xchg
dec
stos
icebp
out
xor
cmp
test
jmp
xchg
inc
inc
cmp
ljmp
ja
out
popa
stos
ret
mov
dec
fistpl
cmpsl
adc
push
popa
xor
ja
fildll
test
loop
int3
cmpsb
and
adc
push
cmp
icebp
mov
mov
fs
add
dec
or
mov
and
das
xchg
mov
add
cmpsl
movsl
or
insl
xor
dec
add
shrb
push
adc
pop
jle
xor
sbb
pushf
dec
add
mov
shlb
ss
xchg
sbb
hlt
lret
mov
dec
mov
aas
mov
insl
icebp
call
pop
jecxz
ret
add
roll
inc
movsl
mov
bound
pop
clc
fldt
mov
stos
dec
sub
lea
neg
push
outsl
cltd
sti
sub
pop
lret
pop
mov
add
enter
ficompl
rcll
jg
sbb
pop
jns
sarl
xchg
sti
sbb
call
xchg
dec
fcmove
leave
push
icebp
pop
jecxz
jg
sbb
xor
push
sahf
rcrl
add
mov
sub
stc
ljmp
rorl
inc
sbb
cli
xchg
mov
clc
cwtl
mov
js
imull
call
fistpl
in
popa
sahf
and
jnp
aad
int3
dec
dec
push
mov
xor
adc
pop
fldt
push
sub
je
dec
outsb
cli
in
sbb
jp
sub
adc
sbb
mov
pop
je
std
je
xor
push
int3
push
or
std
sbb
pop
sub
jl
jge
mov
mov
js
leave
std
in
pop
repz
inc
rcrb
xor
and
mov
xchg
mov
stos
sub
adc
rclb
cmp
jno
jnp
pop
pop
out
xlat
cmp
and
pop
add
push
sti
cwtl
int3
and
cmpsl
and
aas
pop
dec
sbb
or
pop
popa
ret
xchg
push
lret
adc
test
stc
xor
aam
into
xor
push
or
cli
jne
ret
fstpt
adc
scas
jge
add
dec
push
push
xor
or
pop
test
fdivrl
lods
pop
or
pop
lods
mov
enter
xchg
lahf
adc
pop
insl
mov
cltd
cld
mov
ljmp
inc
fdivrl
xor
fcoml
orl
fistpl
adc
stc
inc
pop
test
xchg
sti
mov
lock
aas
or
daa
fisttpl
test
incb
out
lret
or
pop
jg
jle
ljmp
push
push
dec
aad
cltd
call
inc
ja
adc
sub
inc
jecxz
add
jne
in
jno
pop
pop
in
xchg
call
or
or
inc
mov
das
filds
xor
mov
test
pop
iret
enter
cmpsb
jbe
loop
inc
shr
and
or
or
jmp
cmpsb
xor
stos
xor
jg
jno
push
cmp
jl
cmp
out
out
enter
dec
iret
lcall
lret
into
sub
fcompl
push
mov
dec
cltd
cltd
sbb
xchg
mov
inc
stc
testl
lock
je
push
fmul
mov
cmpsl
rclb
sbb
jmp
in
andb
inc
stos
loope
sti
jmp
cmpsl
push
bound
aad
or
loopne
and
out
pop
xorl
inc
push
add
ret
mov
int3
popa
cltd
fadds
inc
fwait
inc
pop
push
or
aaa
mov
movsb
lret
out
and
pop
sub
cs
ljmp
xor
les
ret
cmpsb
dec
movb
into
in
mov
cmp
shll
sbb
xorl
ficoms
jne
stos
mov
lret
sub
repnz
jno
dec
roll
push
mov
scas
hlt
or
sbb
test
xchg
and
fsubl
rorl
mov
jbe
jg
scas
mov
mov
shlb
sti
mov
push
mov
push
gs
aad
mov
test
in
in
mov
shll
jg
cmpsb
rcrb
and
push
xchg
or
sahf
inc
and
mov
movsb
and
lds
push
or
sub
or
shrb
push
movsb
mov
ss
addl
jl
mov
hlt
pop
aad
arpl
popf
mov
mov
fadds
mov
sbb
bound
lods
sub
add
or
adc
push
pop
or
push
inc
stos
aas
jg
inc
inc
les
stos
mov
jne
push
rcrb
push
sbb
rcl
std
test
scas
test
aad
inc
repnz
ret
in
subb
jl
sbb
outsl
dec
push
inc
shl
push
scas
mov
and
and
sti
or
push
xchg
imul
out
sub
stc
jbe
inc
insl
aad
sahf
repz
add
mov
mov
cmp
push
sub
fidivs
xor
adc
add
dec
in
leave
dec
jno
jmp
cmp
add
mov
and
mov
cmp
fwait
test
leave
aaa
mov
dec
sub
mov
pop
rcr
push
push
pop
xor
lcall
loopne
sbb
bound
scas
loop
or
popa
inc
sbb
mov
imul
push
or
testb
mov
lea
into
ds
in
mov
popf
call
fcomp
into
mov
xchg
dec
and
jbe
js
push
pushf
and
mov
mov
mov
sub
fcompl
dec
sub
sbb
ss
xor
arpl
pop
jbe
pop
dec
or
pop
fistpl
repz
imul
in
mov
mov
fimuls
popf
mov
add
and
jno
mov
das
in
jo
jp
repnz
dec
push
leave
mov
repz
cmp
pusha
xor
add
xchg
cld
adc
inc
xor
aas
cmp
les
in
or
mov
push
mov
mov
adc
xchg
dec
or
adc
mov
mov
or
sbb
or
aaa
leave
lret
xchg
push
test
subb
dec
or
xlat
cli
jg
mov
add
shll
xchg
jp
add
inc
incb
daa
outsb
add
inc
sub
and
stos
xlat
or
xor
sti
jnp
add
iret
je
pop
adc
cmp
adcl
jne
lds
push
xchg
std
pop
aaa
and
shl
xor
cli
push
adc
orb
mov
gs
push
sbb
push
int3
mov
adc
xor
or
sarb
aaa
imul
js
sub
adcb
mov
mov
lock
jle
lret
mov
xchg
ljmp
xchg
fwait
lods
pop
pop
adc
sub
xor
mov
cli
mov
pop
je
das
push
sub
aam
push
cli
das
jbe
mov
add
cli
and
out
sarb
lock
jecxz
popa
imul
mov
adc
sub
dec
sbb
jo
addr16
cltd
out
xor
xor
cmpsl
and
das
add
inc
or
notb
decl
nop
cmp
std
cld
out
in
shl
js
push
xchg
mov
adcb
int
adc
dec
dec
test
adc
std
mov
enter
sbb
adcb
dec
mov
test
out
dec
lret
mov
inc
jle
sub
lods
mov
mov
not
psubsb
movsb
rclb
mov
and
stc
xor
xchg
ja
xor
aam
adcl
cmp
cmp
sti
or
cmp
int
int3
mov
pushf
xlat
mov
addl
call
mov
fiadds
rclb
fs
cmp
jl
sbb
notl
jp
add
out
pushf
and
ret
and
sbb
scas
sub
lret
push
std
notb
and
pushf
arpl
xor
test
or
faddl
pop
add
or
push
repnz
ds
fwait
jae
push
bound
sub
pusha
push
test
loopne
mov
stos
mov
mov
or
pop
fsts
mov
mov
mov
andl
cltd
ja
in
loopne
mov
sub
mov
add
dec
or
iret
mov
pop
mov
loope
xchg
pop
pop
xchg
cmp
fmull
fs
push
pop
in
cmp
outsl
cmp
inc
rcrl
and
jbe
mov
mov
aaa
pushl
call
and
mov
pop
xor
adc
mov
inc
or
scas
fldl
sub
insb
push
inc
pop
cmpsl
adc
mov
mov
leave
add
cs
sub
sbb
outsb
mov
imul
cli
hlt
sub
sarb
mov
fsubrs
pop
imul
fnstcw
cmp
repz
pmulhw
push
and
addb
jne
xchg
and
js
or
xchg
in
add
lret
in
outsl
lock
pushf
cmc
cld
mov
push
push
mov
les
cli
cmp
shrb
je
lods
test
stos
test
adc
sbb
mov
fimull
lock
push
adcl
push
mov
xor
mov
xor
movsl
pop
or
xor
add
dec
pop
or
mov
pop
cmpsl
into
das
sub
ss
lahf
test
mov
cmp
ja
xor
inc
std
adc
adc
lods
jg
lcall
pusha
in
pop
jb
cltd
push
sub
lret
dec
rolb
push
movsl
jb
rolb
int
adc
add
and
push
les
mov
inc
push
scas
rol
movsb
adc
jge
cmp
jo
dec
int
mov
pop
leave
sti
fsubrl
mov
sub
pop
or
mov
xchg
pop
or
or
xchg
xchg
idivl
mov
inc
int
inc
mov
mov
in
xchg
ror
sbb
jecxz
insl
xchg
lahf
popf
lahf
je
fsts
dec
pop
aad
sbb
cmpb
fcmovne
xchg
pop
es
jmp
into
push
mov
dec
ror
dec
adc
in
and
sbb
das
jnp
cmp
mov
mov
sarb
dec
sbb
jns
jl
and
cmp
jno
jb
ds
adc
adc
add
jge
jg
scas
fnstcw
scas
or
ljmp
repnz
out
mov
pop
lods
aad
jp
lods
movsl
and
mov
mov
dec
jle
push
or
jb
mov
test
loope
test
js
sti
adc
lods
add
inc
arpl
stos
inc
xor
xchg
incl
imul
mov
push
or
cltd
pop
inc
inc
popf
repz
adc
ja
stos
aam
aaa
mov
cmpsl
inc
pop
cwtl
adc
pusha
fsin
popa
and
xor
jns
or
sbb
rclb
lods
jae
inc
pop
or
roll
mov
sbb
fcoms
jge
xor
pushf
fs
sbb
sarb
mov
or
or
outsl
in
out
xor
orl
xchg
subl
aad
jcxz
xor
test
repnz
mov
adc
leave
push
fcom
hlt
pop
fisubrl
dec
push
dec
pop
push
aad
xor
or
mov
movsl
insl
lea
or
mov
ret
jl
dec
fwait
pop
fdivs
mov
and
loopne
xorl
add
adcl
lcall
adc
mov
sbb
dec
sbb
mov
dec
les
ficoms
mov
in
outsb
sub
pop
loopne
or
ljmp
subl
xchg
sub
or
pusha
inc
lcall
dec
dec
inc
je
or
ds
int
push
lods
pop
xchg
fcoms
ret
inc
imul
xchg
stc
mov
jge
push
loop
push
call
fadds
mov
sub
pop
stc
popa
mov
pusha
inc
mov
push
or
xchg
rolb
ja
jp
fstps
cmpsb
movsw
pop
clc
fdivs
push
loopne
push
mov
fisubrl
mov
xchg
loope
lods
aas
cmpsb
mov
pop
xchg
out
in
dec
cmpsl
mov
jp
fxch
mov
sub
das
arpl
xlat
jnp
xor
idivl
jbe
push
inc
adc
dec
or
lret
aas
cmp
stc
push
jns
lods
pop
mov
mov
in
lea
lods
xchg
sbb
idivb
std
lret
rcl
pushf
mov
popf
rclb
and
dec
loopne
xor
lcall
mov
push
into
jnp
ja
pop
inc
mov
xor
in
push
scas
sahf
sti
in
int3
notl
nop
adcb
andb
gs
mov
mov
iret
dec
cmp
mov
push
or
dec
pusha
sbb
in
lahf
pop
loop
dec
gs
ja
adc
mov
push
lret
jae
jns
dec
jo
cld
into
or
inc
pop
mov
leave
or
addr16
lea
xchg
sahf
xor
adc
cmc
sbb
xor
adc
dec
jmp
loope
jmp
ror
mov
xchg
cmpsl
pop
dec
ss
fcomps
xorl
dec
xchg
jle
int3
popf
rorb
testl
xor
outsl
mov
jg
push
enter
push
daa
arpl
sbb
test
and
mov
decl
add
shlb
adc
adc
ficoml
cmp
sbb
fmul
jle
mov
in
dec
mov
add
mov
shlb
iret
enter
and
xchg
mov
pop
sbb
and
dec
and
push
in
repz
cmpsb
dec
insb
gs
cmp
cmpsl
std
stc
fisubrl
and
xchg
lods
mov
mov
arpl
push
out
fidivrs
add
xor
xchg
cs
sbb
adc
push
mov
push
scas
mov
mov
and
rclb
ss
jp
push
inc
cltd
ja
push
and
je
das
mov
lret
jl
cld
nop
popa
or
mov
mov
sub
or
je
je
out
pusha
daa
jp
les
leave
fcoms
inc
repnz
and
xor
add
fbld
int3
frstor
adc
fnstsw
fwait
leave
fs
cmp
aad
pushl
nop
jne
cmpb
clc
stos
mov
js
test
in
lock
gs
pusha
cmp
add
loop
jae
ret
pop
imul
inc
cltd
imull
sbb
aas
sub
out
add
xchg
inc
iret
int3
or
in
imul
cmp
stos
and
iret
aas
and
jmp
or
stos
pushf
lret
xchg
outsl
inc
adc
sbb
lcall
shr
add
mov
cmc
inc
adc
leave
add
mov
cli
lcall
movsl
dec
data16
aam
ljmp
in
push
dec
inc
loop
or
jle
jne
xchg
adc
or
insb
loope
lock
aam
int3
adc
jmp
insl
dec
and
sub
push
push
mov
cli
jno
jp
push
fmulp
dec
sbb
insl
or
mov
mov
lods
int3
push
pop
mov
movsl
xchg
out
adc
mov
inc
mov
lret
add
lods
pop
pop
shlb
in
mov
out
cli
or
xchg
jp
push
into
mov
scas
add
shl
scas
or
push
push
mov
pop
dec
scas
mov
add
jno
xchg
dec
push
jne
or
in
adc
pslld
inc
testl
jb
out
push
mov
out
les
adc
jnp
xchg
andl
adc
fabs
inc
xor
or
scas
mov
jmp
adc
out
std
mov
pusha
lds
pop
nop
hlt
mov
add
scas
mov
bound
stos
addr16
mov
addr16
lret
out
adc
inc
nop
jne
sub
lods
clc
jge
dec
inc
rorl
in
lods
jecxz
xor
xchg
cld
cmp
lcall
movsb
andb
and
sbb
outsl
ljmp
inc
ja
lret
jg
sbb
xchg
jecxz
xchg
xor
or
fildl
inc
cmp
xchg
aaa
ret
into
adc
hlt
enter
mov
cld
stos
lcall
jecxz
mov
fildll
flds
jle
outsb
sbb
mov
hlt
lahf
lahf
jno
enter
xchg
cmpsl
pop
ja
xor
or
fs
add
and
mov
stc
das
sti
mov
nop
fmulp
jmp
lcall
mov
or
imull
mov
negb
adc
shlb
ret
inc
sub
inc
out
xchg
sbb
popf
sub
cltd
cs
loopne
in
pop
push
insb
pop
xchg
sarl
add
cmp
rcr
jle
out
xlat
stos
sub
pop
mov
mov
insl
fs
repnz
adcb
test
das
lds
pop
sbb
ljmp
jmp
mov
pop
ljmp
lock
dec
dec
iret
push
inc
push
xor
fidivs
xor
lods
inc
xchg
mov
mov
mov
fcompl
test
jmp
out
test
xchg
cmp
mov
mov
jg
pop
fisubl
jl
sbb
or
aas
pop
es
lock
je
xchg
loop
xchg
adc
aaa
loop
inc
lock
jae
div
mov
and
inc
mov
sub
jnp
xchg
inc
push
xchg
lret
sbb
pop
sbb
and
push
fnstcw
cmp
test
xor
jno
popa
dec
or
mov
inc
insl
leave
dec
imul
jnp
pop
dec
lcall
add
aad
out
pop
icebp
mov
push
push
out
mov
push
sub
mov
stos
addl
push
xchg
mov
jg
adc
out
std
sub
arpl
cmp
add
sub
idivl
jnp
outsl
mov
movl
cmp
mov
pop
nop
mov
lcall
cmpl
xchg
dec
pop
push
das
sub
inc
jno
fwait
pop
pop
jp
add
cmpsb
dec
push
pop
ds
sbb
cmp
xchg
xchg
xchg
ds
bound
ret
or
sbb
push
lds
les
das
mov
insb
out
dec
das
cld
jge
mov
mov
cs
movsb
lret
test
icebp
mov
loop
lock
pop
lcall
sub
rep
cmpsl
dec
lods
and
test
ficoms
add
inc
sbbb
pop
jne
sub
addr16
aad
push
sub
inc
adc
outsb
xor
and
sbb
aaa
imul
ficomps
fs
fwait
add
push
inc
daa
popf
leave
add
out
pop
mov
push
sbb
jno
pop
pop
push
out
mov
mov
cmp
push
popf
out
dec
dec
cmp
or
pushf
test
jno
inc
push
fnstenv
imul
add
sbb
sub
or
shl
shll
mov
mov
mov
adc
fsubrl
xorb
adc
dec
pushf
rol
cmp
int
jbe
inc
or
nop
cmpsl
jl
jp
decb
clc
test
jp
outsb
xchg
clc
lret
or
adc
daa
add
pop
push
das
sbb
pop
sbbb
sbb
and
loopne
lods
mov
xor
adc
les
fdivrs
iret
adc
jb
mov
ss
jp
adcl
or
andb
pop
std
sbb
mov
xchg
adc
popf
stos
dec
lahf
jge
pop
cltd
outsl
jno
std
fucom
sbb
or
rolb
xchg
test
push
push
popf
out
lds
adc
cmpsb
push
jbe
out
xchg
pusha
fs
sbb
pop
mov
out
pop
pop
and
jg
sub
gs
and
mov
jmp
lahf
push
mov
xor
aam
adc
dec
test
cli
mov
mov
lret
add
movsb
in
inc
xchg
mov
mov
out
mov
and
es
sti
dec
xlat
shlb
pop
lds
daa
lret
cmpsb
sbb
popa
push
je
pop
clc
pop
pop
xchg
and
fimull
loop
push
rep
jle
jp
in
cld
xchg
jno
xchg
cmp
loop
test
mov
xor
pop
aaa
subb
out
std
push
dec
in
adc
scas
mov
outsb
mov
sti
xchg
jmp
adc
mov
addr16
or
adc
xchg
cmp
sbb
les
mov
add
lret
aad
call
pop
mov
iret
test
lcall
adc
movsb
cmp
add
sbb
mov
popa
or
mov
clc
mov
lds
sub
xor
ljmp
sub
pusha
imul
pop
or
add
xor
sub
sub
adc
xchg
adc
loopne
aam
mov
int3
mov
pop
inc
data16
sbb
jmp
and
testl
pop
pop
out
mov
inc
and
mov
mov
inc
sbb
clc
mov
or
test
xor
int3
add
or
lcall
in
dec
add
jp
sbbb
mov
jle
jecxz
icebp
jecxz
ror
pop
cli
push
mov
dec
in
push
addr16
add
ja
jp
pop
push
fs
jg
cmpsb
cli
cli
dec
xor
mov
inc
pusha
loopne
cmpsl
pusha
jge
fwait
test
daa
ret
ss
mov
adc
cmp
dec
push
insb
mov
shl
jecxz
test
jp
fs
xchg
jp,pt
mov
stos
xlat
jmp
aam
mov
sbb
leave
sbb
cld
sbb
jmp
cmp
xchg
push
inc
in
imul
stos
and
inc
or
jg
xchg
add
test
fsubrl
xorb
dec
jl
lret
sub
jge
call
mov
sbb
xchg
mov
inc
scas
add
dec
imul
int
dec
orb
inc
xchg
int
mov
fcmovb
shrb
mov
push
adc
mov
adc
jge
scas
hlt
leave
or
ds
popf
push
mov
shll
mov
dec
aaa
ds
jmp
adc
int3
cmp
and
scas
orl
xchg
dec
xchg
pop
sbb
pop
adc
out
push
bound
adc
loop
jo
dec
mov
imul
push
dec
int3
inc
or
outsb
sub
ds
ja
mov
jmp
testl
mov
sub
pusha
cmpsb
pusha
mov
or
push
jmp
mov
enter
xchg
in
lcall
loopne
or
or
pop
jp
sahf
xlat
sbb
fiaddl
cli
sahf
adc
pop
add
ficompl
xlat
dec
add
sub
mov
bnd
lahf
outsl
loope
dec
xor
jbe
mov
add
leave
shll
xchg
cli
daa
inc
out
jno
subb
repnz
add
shrb
iret
fbstp
call
xor
test
lods
push
add
push
fnstenv
cmp
cmpb
loopne
mov
dec
rcrb
testl
aaa
xchg
push
insb
pop
sub
ljmp
fs
insl
outsb
shl
fdiv
and
insb
lcall
movsl
cmpsb
mov
les
lret
addr16
dec
loope
xchg
inc
jbe
cmc
fldl
jl
aad
addr16
ds
fcmovnbe
xchg
adc
mov
les
sti
xchg
sahf
leave
mov
sarb
mov
cmc
je
popa
cli
faddp
in
xor
mov
fucom
gs
xor
pusha
rclb
repz
js
sahf
sub
mov
enter
je
rcrb
or
cmpsl
add
pop
and
mov
testl
xor
and
cmp
addr16
addl
push
cwtl
loop
mov
nop
cld
or
add
std
jp
xor
cwtl
testb
mov
cmpb
sub
scas
sub
sbb
enter
mov
inc
rcll
scas
xor
add
sub
sub
jp
lods
add
rcrl
sub
imul
test
rorl
out
xchg
sbb
xchg
mov
int
inc
mov
lret
sub
sbb
shll
add
cmp
mov
jle
notb
fcmovu
mov
mov
pop
add
outsb
leave
loopne
sub
sub
iret
pop
cmp
ret
lcall
mov
imull
daa
mov
insl
push
sbb
idivb
xchg
dec
or
pop
adc
shl
xor
xchg
iret
shll
out
jp
push
imul
cmpsl
les
xchg
jg
mov
adc
push
mov
fldcw
mov
or
inc
jo
mov
into
in
jle
test
pusha
xchg
repz
inc
subl
mov
subb
scas
fldenv
mov
imul
mov
mov
mov
push
mov
mov
pop
fmull
mov
jne
into
shrl
out
xchg
push
add
pop
aaa
jle
sub
cmp
scas
add
xor
filds
fisubl
xor
mov
scas
loopne
xchg
sbb
sub
xchg
les
jmp
and
add
inc
pop
inc
testb
test
into
into
mov
xchg
mov
xchg
add
sub
inc
gs
imul
mov
push
push
mov
rcrl
leave
and
adc
andb
paddusb
insl
add
pushf
push
cmovp
enter
notb
lret
sub
jae
mov
iret
loop
mov
stos
xor
push
mov
or
or
dec
sub
pop
xor
mov
jg
sbbl
insb
repz
jne
pop
push
dec
stc
stc
sbb
imul
xchg
fldenv
jecxz
sbb
sub
or
xchg
lret
push
shll
cmc
sub
cmp
popf
push
repnz
lods
sbb
clc
mov
test
hlt
nop
cmp
pop
je
xchg
mov
cltd
add
int3
insl
and
mov
cld
mov
adc
sti
fwait
cli
test
mov
testb
jno
xchg
push
jo
cli
je
add
sub
cmp
push
in
int3
lods
cmp
push
or
jne
aam
in
and
test
jp
mulb
popf
rolb
nop
mov
test
push
push
cmp
adc
dec
fwait
loope
pop
or
xor
inc
mov
mov
push
jge
add
xchg
popf
stos
in
nop
jo
ljmp
pop
mov
inc
cltd
das
adc
movsb
sbb
xchg
fdivs
and
push
mov
outsl
lcall
sbb
mov
pop
out
dec
sub
movsl
sbb
push
sub
mov
and
orl
lds
pop
fucomp
sbb
mov
and
mov
sub
jb
and
and
stc
je
mov
push
xchg
cltd
loopne
pusha
pop
cmp
ret
xchg
xor
mov
jne
aad
inc
lea
loopne
ljmp
adc
in
movsl
pop
adc
dec
push
jno
imul
ljmp
fcmovbe
mov
lret
test
faddl
mov
cld
mov
int
pop
adc
or
movsl
pusha
xchg
adc
pop
pop
xchg
inc
mov
dec
dec
jmp
xor
jbe
jne
negl
xchg
gs
cmpsb
add
push
mov
mov
pop
int
icebp
clc
and
popf
mov
iret
gs
or
enter
in
xchg
inc
rorl
pop
jge
mov
xor
pop
mov
or
xchg
in
xchg
or
cmpsb
fwait
loop
push
xor
pop
fsubs
outsb
dec
and
adc
sub
fiaddl
cmp
nop
sub
mov
mov
sahf
ja
adc
jnp
decb
les
push
and
dec
xchg
push
rcrl
xor
popa
push
sbb
push
xor
mov
popa
lds
jmp
cmp
jge
jne
push
jp
xchg
into
flds
jge
lods
xchg
jecxz
jle
jns
enter
xor
in
rclb
subl
dec
and
jg
shl
insb
dec
dec
les
sbb
gs
push
mov
add
rcll
jne
push
and
sub
mov
repnz
loop
jmp
pop
arpl
loop
or
dec
pusha
inc
dec
daa
cmpsl
mov
mov
xchg
lahf
imul
into
pop
in
and
lret
mov
insb
cmp
rclb
jl
jl
push
mov
push
jmp
adc
xchg
in
lret
xor
jbe
xor
mov
fidivrs
repz
call
jo
hlt
jbe
insl
cmp
lret
xor
xchg
stc
sbb
fisubrs
jmp
pop
fnstsw
mov
cmpl
fs
add
popf
mov
jl
ja
add
mov
pop
jg
xor
adc
xchg
std
imul
add
sbb
movsb
lods
imul
pop
inc
negl
mov
mov
enter
xchg
cli
xor
fldl
and
iret
sarl
pop
sahf
dec
mov
cld
aas
lea
and
and
test
div
cli
pop
lahf
fcoms
enter
sbb
sbb
or
xchg
sub
push
adc
insl
adc
popf
ds
cs
xor
mov
cmp
fcompl
lods
mov
push
shr
mov
js
data16
xchg
out
cmpsl
xlat
les
sbb
add
ljmp
aaa
xor
jp
je
lds
xchg
ljmp
sarl
or
push
cmp
xor
lret
and
adc
push
cli
notb
adc
and
push
int
out
cmpsl
ja
jp
pop
lock
inc
or
add
add
es
test
or
and
jecxz
or
test
xlat
lret
adc
cld
add
push
stos
mov
xchg
sbb
push
es
bswap
jno
loope
fs
insl
push
add
sub
and
xchg
rcl
mov
clc
movsb
mov
dec
test
cld
mov
fdivr
insb
clc
rolb
stos
les
mov
push
stc
int
gs
sub
mov
push
xor
cltd
dec
loop
je
xchg
xor
cmpsl
pop
xlat
cmpsl
mov
enter
test
shr
fs
roll
inc
repz
inc
cmp
push
insl
xchg
cmpsb
int3
push
je
int
mov
ficoms
dec
push
jne
pop
mov
sarb
cs
mov
mov
adc
imul
push
fisttpl
dec
cli
cmp
add
cmc
dec
xchg
jo
adc
mov
add
mov
xchg
cltd
lock
movsl
push
mov
sub
sub
pusha
jge
dec
ret
fmull
and
inc
hlt
lcall
in
mov
push
lock
movsb
mov
out
sbbl
leave
imul
ret
lret
push
into
mov
jbe
push
lahf
insb
adc
inc
scas
jbe
add
mov
enter
fstpl
dec
pop
scas
lret
iret
xor
jp
sub
inc
pop
lret
in
or
jmp
shlb
mov
push
jmp
imul
jne
push
loope
bound
lea
je
je
jecxz
inc
notb
mov
sub
addr16
fcompl
ds
sahf
out
mov
cmc
mov
cld
faddp
pop
cltd
stos
sub
dec
jecxz
imul
dec
pop
lahf
and
sub
int
adc
sub
orl
es
test
cmp
cltd
clc
mov
pop
mov
cmpl
in
fidivs
mov
xchg
inc
push
or
xchg
jecxz
adcb
loopne
pop
ljmp
inc
jno
sub
call
push
sub
jge
xor
enter
sub
fbstp
andl
stc
popf
jae
mov
jo
arpl
mov
dec
cmp
push
insl
rcrb
pushf
or
rcl
sbb
xchg
cmp
int
xor
in
fwait
pop
or
add
jp
mov
ret
mov
lods
add
mov
dec
fdivrp
push
sub
ja
mov
insl
outsl
fidivs
mov
fldcw
mov
imul
testl
mov
out
lods
aas
popa
stos
pop
inc
xchg
das
in
in
fldl
fnstenv
nop
mov
sbb
add
mov
das
int
outsb
lret
xor
mov
fistl
sahf
test
test
or
rcll
adc
cmpsb
pop
add
sub
insb
xor
add
xor
fwait
xchg
outsl
mov
and
sahf
fistpl
mov
cmpsb
xchg
sbb
add
mov
push
sub
pop
cmp
push
shl
sbb
scas
add
mov
daa
xor
shl
lods
cmp
jno
add
insl
dec
adc
lods
enter
dec
jns
das
adc
popa
xor
aad
and
jbe
out
out
dec
lret
jo
cmp
or
sti
ds
mov
pusha
dec
mov
ret
ret
add
add
insb
and
fidivl
and
mov
ret
int
outsl
cmp
mov
imul
push
mov
fldl
adcb
ds
jae
mov
xchg
cmc
jnp
push
sahf
sub
sub
push
cmp
pop
pop
aad
addb
insl
les
sbb
flds
testl
or
inc
xchg
jge
sahf
shrb
push
cmovno
xchg
xchg
aam
movsb
mov
adc
les
inc
add
out
in
add
sarb
lcall
out
mov
cltd
push
add
or
js
dec
in
jno
mov
or
les
push
out
icebp
push
pushf
cltd
aaa
sbb
fimull
popa
out
out
inc
xchg
clc
push
pop
into
loop
and
xor
jp
mov
dec
in
push
lds
cmpsl
movsb
ja
push
outsl
les
fwait
rcl
out
test
pop
enter
not
insb
hlt
add
xorl
push
movsb
pop
and
inc
xchg
cs
das
mov
mov
push
push
stc
xorl
mov
cld
fistl
or
jmp
jo
and
adc
insb
sarl
jnp
pop
push
lahf
repz
adc
adc
jg
add
movsb
movsb
sub
data16
lea
or
adc
test
sar
mov
sub
jmp
jmp
std
lret
lret
cmp
sbb
mov
enter
sub
repnz
sub
call
adc
popl
cmc
inc
mov
loope
cwtl
pop
sub
int3
ss
outsb
pop
fcoml
pop
sub
mov
mov
inc
adc
or
jno
out
and
jns
enter
pop
cld
jp
mov
int3
pop
std
xchg
pop
push
push
cltd
outsl
xchg
test
xor
test
xchg
inc
hlt
xchg
das
test
mov
sbb
pop
sahf
jb
and
dec
xchg
ret
pop
mov
mov
out
fs
sbb
lahf
pop
sbb
data16
jb
nop
lock
sbb
daa
stc
cmpsl
push
jg
lahf
pushf
and
decb
and
out
fmulp
add
stos
imul
dec
mov
fnstsw
jmp
lea
mov
add
out
scas
xlat
cmpsl
jmp
sub
bound
mov
lods
mov
pop
inc
jns
out
xor
dec
loopne
fmuls
out
sub
and
adc
mov
cmp
mov
fildll
imul
sub
push
gs
test
sub
jecxz
fisttpl
fstp
incb
fwait
mov
cwtl
push
cmp
movsl
sbb
enter
sahf
test
xor
mov
and
lret
or
loopne,pn
loopne
cmp
imul
and
movsl
adc
push
aas
cltd
inc
xchg
out
add
out
mov
lahf
stos
nop
scas
daa
xlat
mov
movsb
cmp
mov
pushf
inc
xchg
fs
jbe
xor
data16
jmp
pop
rorl
fisubl
jno
filds
ret
stc
adc
sub
fimuls
stc
and
popa
dec
inc
dec
sar
push
mov
mov
and
rcl
xchg
xchg
js
cmp
out
xor
imul
dec
sbb
or
out
ret
pop
nop
jp
stos
inc
mov
and
cmc
sub
adc
dec
rcll
mov
nop
or
inc
iret
popf
filds
and
inc
jge
pop
or
jp
and
jmp
sbb
sbb
jne
mov
dec
inc
pop
dec
jle
lret
int3
mov
xor
xchg
ds
bound
imul
ret
push
pushf
push
fcmovbe
scas
std
insl
scas
movsb
lret
and
xlat
test
or
outsb
adc
pop
mov
or
xchg
mov
sbb
aam
mov
mov
jp
inc
dec
inc
mov
pop
push
and
xor
sub
mov
arpl
imul
shrb
inc
vmovddup
inc
and
cmc
push
sbb
xchg
xchg
pop
mov
iret
cld
fisttpll
dec
out
scas
ljmp
xchg
ljmp
shlb
pop
mov
adc
arpl
and
mov
mov
jne
mov
xorl
out
rcll
imul
or
les
stos
inc
push
or
insb
ljmp
mov
push
pusha
cmp
mov
dec
push
sub
fldenv
stos
sub
mov
xchg
out
pusha
mov
add
jb
loopne
inc
mov
leave
outsb
mov
fistpll
adc
mov
cmp
pop
lock
idivb
out
imul
inc
mov
xchg
sti
add
xchg
cltd
sbb
xchg
scas
test
je
ret
sbb
inc
repnz
enter
lods
sbb
shrl
push
test
jns
js
sbb
adc
aaa
mov
add
repnz
jb
xor
pop
cmp
and
mov
scas
and
into
or
xchg
divb
xchg
pop
cltd
mov
mov
nop
dec
xchg
adc
cltd
pop
add
and
cltd
imul
cli
jp
push
imul
mov
dec
push
cltd
xor
arpl
cmpsl
fstps
jbe
mov
inc
fisubs
pop
sahf
mov
xchg
adc
push
jne
fsubs
sbb
xchg
call
and
mov
daa
in
js
pop
push
or
push
lcall
add
xchg
cld
bound
dec
stos
clc
test
mov
push
add
lret
xchg
push
lods
imul
lods
mov
cmovnp
outsb
xor
mov
outsl
dec
fimull
data16
hlt
repnz
or
iret
ljmp
jb
rcl
pop
fs
inc
repz
sub
imul
sub
dec
sbbb
imul
sub
popa
stos
xor
iret
xchg
or
out
fs
add
pop
ret
test
daa
popf
iret
mov
pop
fdivs
mov
cmpl
dec
dec
jle
push
aas
mov
dec
rorl
shrb
daa
adc
jbe
dec
dec
bound
jge
rorb
cmp
xchg
add
mov
mov
adc
shll
add
pop
jns
jno
rcrb
es
xor
es
pop
lcall
jmp
rol
jle
out
inc
and
sbb
mov
movsb
aaa
or
inc
mov
pusha
mov
ss
lahf
sub
inc
dec
cld
xchg
or
add
adc
add
fdivrs
mov
push
inc
test
insb
xor
je
and
fucomp
lahf
lahf
pop
cmp
sbb
ds
xchg
dec
insl
fs
dec
lret
dec
jl
pop
inc
pushw
out
into
push
divl
add
sub
cld
mov
push
or
shl
xor
cmp
push
push
jo
jns
cwtl
or
sbb
stc
push
les
mov
adc
jne
test
push
pop
andl
xchg
adc
out
xor
jg
mov
xchg
push
push
rorl
loopne
loop
pushf
jae
adcb
pop
jns
into
dec
sub
loopne
and
aaa
out
mov
scas
je
add
bound
xchg
loope
add
jp
int
xor
add
jp
sti
adc
lret
test
jae
sub
sbb
push
cld
or
add
and
icebp
outsb
stos
xor
in
mov
sahf
jae
lock
loop
sbb
in
xchg
push
lods
sub
jg
nop
dec
int3
add
lcall
push
ret
subl
add
dec
pop
lret
popa
pusha
add
imul
lock
xor
ja
mov
adc
push
dec
xchg
pop
push
popa
mov
imul
imul
sub
in
test
data16
iret
jnp
icebp
dec
add
xor
lahf
pop
shll
mov
idivb
aas
dec
test
xchg
jmp
xchg
dec
inc
cmp
lret
add
fiadds
decl
and
inc
inc
push
jbe
cli
mov
sbb
push
daa
push
mov
out
adc
push
add
sbb
xlat
test
push
repnz
jnp
pop
pop
jecxz
inc
push
sbb
js
lea
cmc
ret
or
test
adc
mov
popa
cltd
pmulhw
sub
lcall
dec
jo
jp
xchg
cs
cmpl
mov
xchg
adc
mov
negb
movsb
jb
adc
pop
aam
aad
adc
aad
test
sbb
fwait
loopne
ss
cmpsl
mov
loopne
dec
cmp
mov
xchg
mov
jb
pop
dec
in
call
test
pop
cmp
mov
jns
pushf
in
dec
aad
das
lods
jl
add
cmp
xchg
stc
jp
mull
ficompl
enter
mov
js
stos
sbb
fidivl
jl
addr16
mov
data16
or
call
inc
adc
xor
sbbb
sub
insl
inc
mov
aas
repz
movsb
jle
mulb
testl
repnz
dec
test
pop
cmpsb
xchg
inc
data16
loopne
pop
imul
shll
push
pop
insb
jg
outsb
inc
pop
mov
clc
push
clc
pop
mov
fsub
in
mov
dec
add
adc
and
mov
add
or
inc
rorl
mov
js
aad
mov
fistpl
insl
push
dec
cmp
jo
and
push
loopne
jg
jle
jno
js
dec
enter
mov
fwait
popa
in
mov
jae
fdivl
adc
fadd
ret
mov
fstpt
inc
xor
movsb
mov
fldcw
push
pop
mov
mov
jns
test
xchg
les
aam
inc
inc
sub
mov
iret
pushf
ss
out
sub
shlb
daa
dec
mov
and
xchg
xor
nop
aaa
mov
into
out
fwait
sbb
call
daa
call
sub
xor
inc
and
push
orb
lods
aas
clc
push
xchg
sbb
iret
pop
test
inc
mov
fwait
aad
jns
push
sbb
lret
pushf
add
or
mov
pusha
mov
jle
aas
mov
and
popf
add
sub
rcrb
and
shlb
jno
and
adc
dec
adc
movsb
outsl
mov
outsb
in
jmp
mov
pop
adc
test
pop
jae
in
xor
add
mov
sub
lea
sarl
pop
out
jp
adc
clc
fcoml
imul
xchg
xchg
popa
add
mov
jb
dec
shlb
mov
push
push
or
pop
inc
icebp
add
jae
xchg
or
movsb
jo
jp
pop
loop
jg
and
pop
andb
xor
mov
push
scas
push
lea
push
or
xor
ds
xor
aam
ja
cmpsb
jne
pop
mov
into
nop
rorb
push
inc
pop
mov
jp
xor
push
push
stos
pop
jo
mov
xlat
push
lcall
loopne
jne
ljmp
and
je
mov
or
ret
loopne
mov
or
jnp
xor
pop
mov
outsb
movsl
or
imull
xchg
inc
or
fstpt
or
push
cmp
outsb
xor
dec
stc
jno
jl
clc
imul
jne
cmpsb
inc
loopne
lret
mov
sbb
filds
mov
xor
mov
jg
lea
add
stos
ror
jp
leave
aad
lock
sarl
cmpsb
xchg
sbb
ror
cmp
aad
mov
lret
pop
aad
leave
sbb
mov
iret
call
lahf
iret
subl
movsb
pop
popf
add
cltd
es
mov
jno,pn
inc
lea
or
and
jne
call
dec
jo
in
mov
xchg
in
fstpl
pop
mov
and
push
pop
push
jbe
dec
mov
pop
pop
das
pop
test
cmp
icebp
rcrb
dec
dec
movsb
adc
mov
or
call
cmpsb
jae
cmp
cmp
jno
cmp
cli
in
shll
jne
dec
in
in
mov
ljmp
test
imul
add
xor
dec
lret
fwait
add
adc
out
or
jmp
std
rorl
sbb
pop
outsb
adc
sbb
rolb
push
mov
jo
pop
cmp
cli
mov
divb
push
in
jo
push
add
in
mov
ret
mov
dec
cmp
cld
mov
in
or
mov
out
repnz
cmpsb
push
pop
add
lret
stos
inc
fistps
es
imul
ret
fs
xor
cwtl
push
push
dec
inc
aad
mov
sbb
in
and
pop
cmc
add
scas
mov
iret
pop
into
adc
and
ret
fmuls
call
cli
cld
jle
pop
sbb
repz
xchg
iret
inc
add
cmpl
imul
lods
les
scas
iret
test
popa
scas
popa
push
testl
cmp
jecxz
jle
mov
inc
cmp
sbb
mov
jae
sbb
hlt
add
xor
incl
mov
mov
icebp
aam
enter
xchg
and
sbb
nop
dec
sar
ljmp
ror
add
mov
imul
sbb
xchg
in
shll
push
and
push
cmp
test
inc
push
adc
jbe
push
subb
jmp
cmp
pop
fidivrs
or
mov
mov
and
adc
repz
outsl
aas
adc
push
cli
add
call
push
or
add
jmp
pop
out
xchg
inc
es
and
pop
dec
les
shlb
add
loop
sbb
ja
xchg
xchg
push
cmpsb
dec
cmp
out
out
or
cmpsb
mov
cmp
push
int
push
lods
adc
sbb
mov
mov
rcll
adc
bound
mov
inc
xchg
mov
pop
cmpsb
ficoml
dec
test
push
call
ret
mov
iret
loop
add
dec
stos
out
jne
js
es
and
pop
xchg
jo
leave
pushf
subb
jne
xlat
dec
in
in
pop
xchg
mov
pop
fisubs
pcmpgtw
imul
in
fucom
je
pop
mov
daa
jb
stos
les
jp
mov
pop
xor
adc
stos
ja
add
mov
add
test
test
insl
sbb
jmp
sub
mov
fstl
push
sti
pop
js
cmp
push
test
add
repz
add
xor
lds
sub
mov
pop
sub
xchg
lods
popa
in
pop
stos
cmpsb
stos
sub
outsb
ret
dec
adc
fcmove
data16
cmp
jnp
cmc
pop
sahf
test
push
xchg
push
xlat
cmp
dec
mov
jns
pop
push
adc
ja
sbb
pusha
cld
ret
lahf
out
dec
xchg
daa
jp
mov
xchg
and
inc
and
daa
cmp
addr16
out
mov
pop
sbb
outsl
fwait
inc
dec
fwait
mov
lcall
and
cmpsl
outsl
push
stos
std
out
fdivs
mov
aam
out
ret
xor
jnp
fucomip
and
outsb
or
shlb
idiv
cwtl
scas
mov
sbb
xchg
sbb
aam
lahf
sub
in
shrb
out
dec
add
bound
mov
fistpll
mov
stc
fnstsw
push
xchg
sbb
push
movq
jecxz
imul
dec
jo
pop
lods
jae
mulb
loop
test
mov
pop
inc
iret
cmp
insl
jg
data16
adc
or
jle
pop
xchg
gs
std
mov
xchg
dec
jp
push
jbe
nop
and
ljmp
out
adc
fsubrl
xchg
xlat
cmp
pop
dec
lret
cmp
ljmp
sub
and
movsb
imul
mov
adc
cmpsl
pmaddwd
loope
mov
mov
add
dec
lret
or
int3
and
dec
mov
sbb
pop
mov
jns
sub
mov
pusha
cmp
push
imul
inc
dec
into
imul
push
sti
adc
mov
rcl
sub
fmul
test
fmul
jns
and
or
mov
and
out
rolb
sbb
mov
stos
jle
pop
es
cld
push
fwait
lret
call
cmp
push
ljmp
sub
pushf
adc
xchg
mov
or
inc
pop
fsub
pop
leave
lods
repnz
popl
push
adc
jl
fstpt
add
cmp
repnz
pusha
inc
adc
adc
mov
pop
mov
lods
in
lods
adc
sahf
data16
in
cmp
movsl
xchg
adc
xchg
push
stos
aam
scas
das
mov
test
test
jge
or
pop
mov
ds
insb
test
mov
push
out
sub
inc
orl
push
lcall
repnz
ljmp
shll
loop
cwtl
pusha
mov
ret
ret
repnz
push
addr16
cmc
cmpsl
xor
add
pmaddwd
cs
das
and
sub
jle
sub
out
adc
xchg
lods
cmc
xchg
sub
pop
xchg
sbb
jnp
cltd
sub
sub
or
push
bnd
cmp
setno
andb
das
stos
jno
jae
subb
daa
and
es
negb
mov
int
lahf
test
aas
add
sti
daa
nop
adc
outsb
test
jmp
test
ds
mov
sub
cmp
repnz
push
sbb
ja
sbb
clc
adc
das
inc
sbb
jle
xor
in
jge
repz
xor
sbb
cld
jl
sahf
test
outsb
jnp
jae
sub
xchg
movsb
out
pop
adc
popf
xchg
pop
dec
and
lods
inc
scas
arpl
das
pop
out
dec
insb
cmp
in
push
hlt
cmpsb
add
push
xchg
or
call
sub
adcb
daa
orl
pop
imul
mov
inc
sarl
leave
pop
push
fwait
sbb
cmpsl
repnz
mov
pop
mov
add
jmp
and
mov
rorb
or
imulb
push
add
inc
mov
xor
add
shr
dec
xor
std
clc
push
cmp
adc
fmuls
add
addr16
jecxz
mov
lods
inc
movsl
xor
sub
pusha
outsb
loope
mov
cmp
aas
repnz
xlat
sbb
out
fists
mov
sbb
push
xor
sub
mov
sbb
cld
jecxz
adc
xor
xlat
inc
out
out
test
mul
push
andb
pop
mov
in
mulb
lea
jecxz
jo
xor
and
pop
xorb
sbb
push
pushf
pop
or
jg
ss
sbb
lods
jae
pop
cmp
in
pop
mov
and
std
shrl
iret
insb
adc
xchg
inc
cmp
push
mov
push
xchg
mov
enter
inc
repnz
arpl
scas
shlb
adc
dec
rcl
and
xlat
xchg
add
mov
sbb
ret
cli
test
push
add
stos
pop
xor
cwtl
inc
mov
xchg
and
mov
mov
dec
dec
jle
mov
negb
push
and
push
int3
scas
imul
cli
xor
bound
js
loope
mov
pop
int
jne
icebp
loope
repnz
daa
and
in
js
cwtl
out
clc
mov
mov
inc
insb
mov
push
cmpsb
in
inc
jb
lds
adc
jmp
lods
test
or
jmp
scas
sbbl
inc
or
sub
aaa
rcrl
mov
adc
adc
jb
dec
push
clc
aad
xchg
mov
daa
xchg
mov
adcl
mov
xchg
add
loop
int
mov
xchg
pop
adc
cmpsl
out
and
dec
dec
mov
and
outsb
pop
into
jo
shll
movsb
sbb
out
ds
test
inc
dec
sti
cmpsl
inc
xlat
inc
push
hlt
mull
in
std
icebp
pop
mov
mov
xor
push
mov
popa
aad
fs
mov
mov
cli
inc
fstpl
bound
aam
sbb
push
pop
popa
lcall
or
xor
mov
cmc
test
xchg
pop
xor
ds
dec
idivb
jge
out
sub
sbb
push
aam
mov
inc
mov
or
jg
xchg
xor
jae
jecxz
scas
add
or
ret
sahf
int
lock
insl
insb
xchg
pop
sbb
pop
pop
lret
inc
outsb
js
fimull
sub
dec
xor
push
push
rcrb
and
into
inc
scas
dec
adc
add
adc
mov
loop
mov
lahf
std
insl
xorl
dec
jle
dec
ja
pop
shlb
adc
insb
stc
shr
fstpl
add
mov
dec
or
scas
xchg
daa
mov
mov
mov
pop
sahf
mov
sub
dec
mov
and
fidivrs
mov
push
loop
lock
jmp
pop
jmp
mov
mov
repnz
dec
mov
jbe
and
ds
push
or
jmp
daa
push
mov
pusha
clc
les
cli
scas
dec
jmp
dec
push
or
and
out
sub
mov
jno
pop
and
jne
xor
and
adc
lock
lahf
push
pop
addr16
stc
stos
cli
inc
in
stc
pop
aad
sbb
aaa
jns
mulb
pop
insl
gs
mov
sbb
into
mov
pop
pop
xor
pop
pop
adc
adc
out
addr16
data16
xchg
fmull
cmpl
scas
jae
daa
jl
mov
pop
fs
add
mov
mov
cld
inc
xchg
jle
push
out
adc
stc
push
push
jg
push
mov
fs
xor
inc
push
inc
push
sbb
push
mov
shll
stos
dec
testl
mov
shrb
jmp
and
inc
xor
mov
mov
stos
or
fs
jbe
inc
sub
call
push
std
mov
ret
xchg
ja
jecxz
and
push
sub
pop
mov
popf
ret
push
sub
lock
dec
pop
insl
mov
mulb
int3
bound
mov
jg
xor
hlt
aad
xchg
jo
movsb
ja
daa
ja
jnp
rcrb
jb
test
inc
cmc
jne
mov
fcomps
stc
xchg
rclb
jb
adc
push
sbb
jmp
mov
leave
and
xor
sub
lret
stos
inc
leave
in
inc
aaa
mov
sbb
std
decb
push
xchg
fwait
sub
mov
jb
aad
cmpsl
das
and
and
mov
scas
push
sbb
or
xor
sahf
arpl
stos
push
pop
jns
mov
bound
jle
and
movsl
lahf
or
push
rcr
mov
push
in
xchg
push
clc
mov
stos
shld
sqrtps
daa
xchg
mov
lds
mov
hlt
mov
pop
mov
leave
bnd
jle
dec
vcvtps2pd
xchg
fs
int
subl
fs
sbb
ss
add
fcomi
xchg
out
sbb
daa
out
repnz
repnz
mov
push
pop
dec
into
orb
jno
jg
jg
cmc
fwait
dec
mov
jo
jle
enter
ja
add
pop
mov
movsb
rcrb
into
mov
inc
inc
mov
out
pop
addb
xor
insb
and
outsb
dec
mov
cmp
push
dec
mov
mov
inc
and
arpl
dec
add
xlat
insl
mov
fidivrl
push
mov
dec
dec
xor
je
inc
push
pushl
mov
push
nop
leave
aaa
xor
xchg
test
push
inc
and
cmc
inc
sub
fildll
es
mov
mov
xor
inc
mov
daa
xchg
mov
cmp
ds
sub
or
addr16
mov
sub
inc
jge
sti
sbb
out
lock
jae
push
dec
xchg
sbb
sbb
sub
or
dec
dec
out
mov
daa
cmpl
mov
jecxz
or
xchg
rol
mov
in
leave
test
hlt
ret
and
mov
test
add
sarb
fdivrl
les
fnsave
xchg
jmp
xchg
jle
imul
addb
pop
pop
out
lahf
dec
into
xchg
lock
mov
pushf
cmpsb
lret
push
mov
call
xorb
xchg
les
into
and
frstor
es
xchg
or
adc
pop
mov
inc
mov
dec
out
push
sbb
fnsave
cmp
push
fdivrl
cld
pop
sub
sub
incl
aaa
and
adc
loope
dec
or
dec
pop
cmp
ljmp
or
pop
sbb
or
mov
lods
or
rorl
shlb
jl
push
std
es
inc
call
mov
jae
shrl
movsl
into
sub
mov
mov
pop
and
mov
arpl
push
xchg
push
ja
pushf
addl
add
test
divl
push
fisttps
stos
int3
in
pop
sbb
jno
xchg
inc
xor
addb
stos
mov
jp
sbbb
mov
and
push
test
mov
mov
push
loop
cmpsb
inc
ret
cmc
jl
js
xchg
lahf
lcall
sub
pop
pop
scas
fisttpl
cmp
push
aad
fidivrs
das
sbb
sub
ret
shrb
cmpsb
ret
add
aad
pushf
sub
rol
pop
pop
add
jae
test
pop
fcos
dec
xchg
sahf
ljmp
sub
add
push
push
sti
jl
cmc
test
repnz
std
jnp
or
cli
adc
dec
scas
inc
out
push
push
jnp
inc
adc
movsl
push
add
mov
das
rcll
int
stc
push
sbb
adc
imul
lret
cli
fsubs
push
mov
int3
mov
sub
lahf
outsl
sbb
fildl
push
cmpsb
pop
cs
lock
or
pop
mov
fs
sub
dec
xchg
xchg
jo
out
lods
inc
in
incb
mov
daa
xchg
cmpsl
xor
out
pop
mov
or
ficomps
aam
in
lret
dec
mov
int3
jns
sbb
pop
out
push
push
push
nop
dec
xchg
daa
mov
scas
mov
lds
mov
inc
sbb
jo
movsb
adc
add
jnp
push
lret
test
xchg
pop
cmp
shld
in
jmp
inc
mov
outsb
int3
lret
jo
or
loop
imul
sarl
notb
les
or
popa
add
fstpt
ficompl
jb
inc
mov
xor
fisubrl
call
mov
shlb
dec
idivl
pusha
mov
imul
ret
cli
cmp
pop
push
jo
neg
shr
sahf
adc
in
sub
sub
out
arpl
jmp
bound
mov
test
pop
mov
loopne
test
jle
loop
repz
shr
xchg
stos
popf
and
add
add
or
daa
or
mov
xor
mov
add
dec
jnp
neg
xor
subb
ret
adc
push
loope
aaa
jl
stos
xchg
pop
cmp
add
aaa
scas
sub
jae
rcrl
jp
sarl
sub
xor
jns
adc
jecxz
pop
sti
xchg
mov
or
xor
movsl
subl
jl
movsl
popa
xchg
mov
lcall
xchg
out
clc
cmpsb
pop
imul
push
mov
test
adc
lcall
loope
mov
xor
mov
cli
out
xor
lcall
jle
xchg
sub
push
scas
sbb
es
jmp
rol
sahf
movlps
mov
mov
nop
dec
leave
adc
mov
push
mov
mov
push
dec
movsl
mov
int
fdivl
adc
cwtl
jno
aaa
add
sahf
mov
enter
add
and
ss
out
mov
out
inc
add
pop
dec
jbe
into
arpl
aaa
xor
repz
adc
sti
push
lahf
mov
push
push
mov
adcb
test
ja
mov
rcll
call
jbe
sub
xor
sbb
subb
pushf
loop
pop
jp
mov
and
in
rorb
push
adc
mulb
enter
scas
fldenv
inc
inc
icebp
xchg
mov
mov
es
das
aas
scas
imul
das
push
and
jno
cmp
dec
mov
mov
scas
push
nop
iret
lock
dec
sub
ja
xchg
stos
loope
mov
flds
dec
or
loope
mov
push
loope
mov
cmpb
mov
xchg
or
push
and
aam
push
dec
sub
jp
fbstp
insb
imul
cmpsb
push
imul
jp
xchg
enter
lods
int
lea
mov
xlat
inc
ret
clc
sub
jecxz
jb
pop
test
xor
scas
pop
mov
scas
and
add
jnp
mov
and
or
sbb
dec
mov
jecxz
xchg
out
cwtl
lcall
xchg
lds
es
xchg
push
xchg
testl
cli
popa
xchg
pop
leave
push
xchg
in
pop
insl
or
arpl
sbb
add
mov
adc
adc
xchg
xchg
mov
sub
adc
xchg
js
mov
sub
and
xchg
aaa
iret
mov
movsb
or
in
push
lret
sub
das
cwtl
inc
and
add
mov
cli
icebp
repnz
scas
xchg
call
ficompl
push
push
push
mov
aas
fwait
sub
ja
cmp
lret
mov
aam
rolb
mov
addr16
add
cmp
int3
aam
add
mov
xchg
xchg
popf
push
push
arpl
movl
and
sahf
ljmp
xlat
jbe
pop
mov
add
sub
adc
icebp
cs
stos
or
addl
jge
cmc
xor
movd
push
dec
imul
pop
and
inc
xchg
pop
dec
cli
les
jg
icebp
xchg
sub
jg
movsl
or
pop
push
mov
dec
adc
pop
lds
adc
xchg
and
push
int
jle
lret
pop
fsubs
sbb
lret
test
adc
sysexit
mov
std
cmc
cmpsl
add
pop
mov
or
call
mov
iret
lret
sbb
lahf
pop
repz
jl
clc
mov
mov
push
or
sub
sahf
clc
bound
xchg
adc
jg
clc
adc
aam
outsb
xor
mov
in
loopne
xchg
push
ljmp
xchg
pop
ss
inc
pop
cmpsl
aam
or
andb
push
daa
push
jle
and
dec
pop
mov
data16
idivb
mov
xchg
repnz
pop
shrl
cmpsl
mov
mov
xchg
jb
ret
repnz
xor
ds
in
mov
mov
pushf
mov
pushf
xor
lret
rcl
loope
test
data16
icebp
dec
push
add
xchg
jo
push
bound
pop
rcl
mov
fadds
sbb
xchg
inc
sub
mov
sbb
mov
bound
push
mov
addr16
shrb
div
and
sbb
pop
iret
push
mov
mov
inc
cwtl
out
jecxz
sbb
cmp
add
pusha
inc
nop
pop
adc
mov
setne
lcall
fcomi
outsb
or
cs
or
sbb
aam
enter
daa
pop
loope,pt
mov
pop
fsubs
jp
test
aam
lock
push
xchg
add
lea
or
and
and
mov
xor
dec
out
adc
popa
popa
out
mov
stos
cmp
inc
xchg
scas
pushf
lret
jge
jp
and
jle
cmp
inc
xchg
sbb
xchg
popa
and
fsubs
mov
fsubs
mov
neg
inc
mov
es
adc
cmpsb
inc
push
loope
or
adcb
mov
mov
pop
xchg
pop
in
jb
mov
adc
imul
mov
push
popa
cwtl
sbb
gs
ficoml
mov
mov
shl
sarb
roll
nop
inc
or
dec
mov
stos
jmp
ljmp
in
imul
fiaddl
imul
jg
adc
dec
jl
adc
enter
pop
mov
mov
lods
pause
pop
sti
jge
es
popa
dec
jge
jg
nop
jne
movsl
fcoms
cli
adc
mov
sub
and
xchg
pop
or
adc
roll
loop
hlt
loope
movsb
scas
and
jg
push
xlat
xor
lods
test
cmp
jne
aad
addr16
mov
test
xlat
or
ret
xchg
lds
popl
movsl
lea
in
mov
lods
xchg
mov
in
gs
shll
bound
insb
std
sbb
pop
fwait
ss
sti
add
in
dec
stc
lret
out
push
loop
sbb
mov
fucomi
and
mov
cmp
loope
test
arpl
push
lods
jno
lcall
mov
lods
rol
mov
mov
adc
cld
dec
lods
negl
aas
xor
data16
fucomi
xchg
jnp
dec
cmp
roll
scas
lds
inc
ffree
pop
xor
cmp
adc
shrb
jb
dec
std
mov
movsl
cwtl
jmp
or
and
xchg
mov
xchg
pop
pop
lea
mov
xlat
negb
pop
inc
fwait
shll
out
rcrb
cmp
fsubl
mov
arpl
in
mov
ja
pop
sub
add
push
cmp
xor
jecxz
sbbl
mov
cwtl
pop
push
pusha
shlb
les
jecxz
call
setge
mov
int
cmp
ds
cwtd
jecxz
setns
into
add
pop
mov
pop
sub
cmp
popf
pop
in
aam
dec
push
fldcw
ss
pop
jae
xor
push
push
push
rolb
or
push
cmp
mov
subl
mov
pop
mov
adc
sbb
mov
sbb
or
cmp
push
add
leave
inc
dec
cmp
sbb
js
push
fimuls
fnsave
cmova
pop
es
mov
and
es
fmuls
push
iret
jno
sub
or
adc
mov
xor
das
xlat
ja
fwait
cmp
gs
push
popf
jae
sbbb
xor
add
repz
jo
fisttpl
test
xchg
xchg
or
outsb
adc
shlb
xchg
rolb
cmp
lods
pop
repz
xor
rcrl
scas
pop
pop
ror
or
lea
outsb
insw
scas
cmpsb
loopne
aaa
in
and
call
in
push
jg
sbb
jp
add
fldenv
push
jo
mov
or
mov
and
dec
jo
dec
outsl
inc
mov
cmpsl
push
sti
pop
and
add
daa
push
pushf
mov
sub
inc
aad
cmp
push
cmp
add
push
test
cmp
mov
fadd
or
mov
sbb
cmpsl
inc
stc
add
cmp
rcll
imul
ja
inc
iret
xor
lock
add
and
sbb
adc
in
cmp
std
iret
test
repnz
push
int3
and
or
mov
popa
leave
movsb
call
push
cmp
lcall
stos
sub
mov
mov
push
push
mov
out
xchg
adc
push
frstor
jmp
jae
imul
ljmp
shll
and
pop
in
jle
clc
mov
cmp
fildl
pushf
or
cmpl
stos
shufps
adc
sbb
popa
mov
fsubr
cmp
jle
cmp
xor
add
dec
or
sub
popa
mov
lret
and
lock
out
jge
push
lods
adc
mov
imul
pop
push
lret
dec
xchg
outsl
sub
ds
iret
nop
clc
cmp
notl
mov
mov
mov
movl
scas
xor
test
push
jae
decl
push
into
mov
pop
sbb
xchg
push
insl
or
lods
call
cmp
or
mov
adc
adcl
pop
jg
ja
orl
mov
stos
insb
lahf
cli
and
ret
or
dec
adc
mov
push
pop
and
rcrl
cwtl
stos
bound
sbb
aad
pop
adc
cwtl
jle
push
sub
mov
and
mov
cmp
stos
mov
add
popa
cs
ljmp
fistpl
int3
cmpsb
mov
aad
add
leave
test
or
data16
lret
loop
aas
mov
movsb
sub
sbb
stos
or
xor
lret
enter
mov
popf
daa
pop
out
jmp
insb
xchg
pop
mov
add
pop
popf
inc
mov
adc
subb
xchg
jp
lahf
mov
daa
int3
lcall
mov
dec
pop
divl
enter
dec
push
xchg
cmp
xor
movsb
mov
sub
les
insl
jmp
push
xchg
aad
xor
or
lahf
mov
insl
and
jb
shrb
inc
aaa
adc
shrl
shll
fmulp
stc
push
lret
push
popa
std
cmpsb
lret
push
adc
movsl
aaa
nop
jb
inc
push
cmp
ljmp
cmp
pop
pop
dec
push
jnp
je
mov
and
jnp
adc
cmpsb
sbbl
adc
jle
push
mov
mov
xchg
mov
xor
mov
fbstp
jno
dec
movb
push
in
push
inc
push
call
jge
mov
pop
dec
lds
mov
loope
inc
mov
inc
roll
in
fildl
mov
mov
push
or
outsb
inc
pop
enter
shr
stc
cli
je
nop
les
inc
and
xchg
inc
cmp
dec
push
clc
jmp
mov
fwait
mov
sub
jge
gs
adc
adc
mov
stc
sub
in
jl
aaa
dec
arpl
aam
fs
pop
rcll
jg
fsubs
mov
es
or
std
in
inc
out
xor
test
std
inc
adcb
test
inc
stos
les
sub
repz
pop
fsubs
ss
or
insl
insb
int
pop
popf
out
enter
xchg
inc
ss
push
pop
ror
out
pusha
aas
testl
adc
je
test
shrb
add
mov
cwtl
into
in
lods
imul
mov
push
loope
out
dec
cld
adc
hlt
divl
lods
push
push
mov
bound
mov
das
test
addr16
insb
ljmp
cmp
cmc
fxch
lret
inc
in
push
pop
aaa
cwtl
inc
dec
push
adc
iret
lret
or
leave
xchg
and
pop
nop
mov
sub
pop
xchg
push
js
jo
inc
mov
loop
ljmp
xchg
ret
dec
pop
xchg
imul
iret
js
dec
xlat
rorl
mov
lret
mov
jno
mov
js
add
adc
and
ljmp
repz
cmpl
adc
sub
testl
add
push
cli
gs
pop
xchg
add
mov
fs
ret
mov
xchg
gs
outsl
fiaddl
push
roll
data16
clc
shr
in
in
adc
mov
mov
repz
inc
jbe
decl
mov
stc
cli
push
dec
xor
fdivl
xor
pop
or
xchg
incl
call
int3
repz
popa
inc
roll
dec
xchg
mov
xchg
pop
sbb
adc
xchg
mov
cltd
mov
sbb
scas
adc
enter
test
and
jle
pop
lret
in
push
jo
push
mov
repz
mov
negl
inc
imul
fstps
out
add
mov
dec
sub
xor
cmp
loope
adcb
inc
scas
xor
mov
cmc
xor
push
imul
in
inc
mov
mov
ja
inc
xchg
fsubrs
loopne
mov
daa
jae
xchg
arpl
popa
xchg
fiaddl
int
xor
es
ljmp
push
out
movsb
push
ljmp
lods
push
mov
out
test
std
adc
pop
cmp
mov
sub
inc
mov
jp
lods
mov
sbb
xor
jb
outsl
shlb
xor
and
ret
xchg
lret
pop
mov
into
xor
cmpsb
rcr
and
gs
adc
nop
jne
int
mov
lods
push
inc
jae
ret
dec
and
scas
test
out
xor
adc
xchg
inc
add
inc
xchg
js
out
inc
fldcw
cltd
pop
mov
lea
fnsetpm(287
xchg
pop
lea
push
xchg
and
popa
mul
add
aaa
add
jge
jns
xor
mov
cltd
sbb
adc
dec
das
mov
mov
pop
adc
sub
rorl
js
fwait
and
mov
test
jge
xchg
xchg
jl,pt
aad
nop
mov
lds
push
push
or
cmp
arpl
imul
add
lret
mov
dec
shrb
add
hlt
aas
pusha
push
loop
int
das
xchg
loop
xor
dec
sarb
push
daa
pop
les
pop
mov
int3
cmp
clc
push
subb
dec
mov
insb
mov
xchg
outsl
pop
dec
fwait
xor
inc
ss
imul
idivb
sub
out
sti
sub
mov
js
in
and
push
push
cmp
pop
xor
popf
jbe
mov
lods
mov
or
lret
out
dec
add
sub
mov
movsb
pusha
mov
dec
push
fs
jne
sbb
aam
pop
xchg
and
insl
mov
sbb
cmp
push
push
mov
aad
scas
mov
test
test
and
dec
idiv
add
mov
jne
cmp
pop
pop
test
jl
scas
add
push
xor
adc
imul
popa
push
hlt
ret
fucomi
push
or
imul
xchg
movsb
popf
lods
adc
fistpll
or
adc
div
pop
popf
xor
inc
arpl
mov
xchg
dec
movsl
ljmp
sbb
xchg
hlt
ret
fsubr
in
fists
test
dec
jo
es
loop
jns
push
mulb
cmp
adc
enter
les
int3
ljmp
nop
mov
or
adc
inc
push
sub
and
cld
dec
sbb
add
xlat
scas
out
das
in
test
mov
inc
adc
mov
mov
leave
lret
loope
hlt
pusha
clc
sub
cmpsl
cmpsl
sahf
xchg
call
add
dec
subb
pop
push
jle
adc
adc
sbb
xchg
jb
aas
out
mov
dec
push
inc
jae
fs
out
pop
lahf
inc
pop
pop
dec
adc
dec
out
xchg
lahf
aad
mov
xor
adc
xchg
pop
fbld
push
push
add
int
ljmp
hlt
sbb
hlt
sbb
xchg
jbe
dec
sbb
and
dec
or
or
fstpl
int3
in
nop
jle
das
mov
or
fs
int
add
in
jge
inc
jecxz
push
mov
sub
and
inc
sub
cmp
xor
movsb
int
mov
mov
out
xchg
lods
popf
xorb
adc
mov
cmp
lret
inc
pop
in
pop
pop
dec
and
popf
pushl
orb
popw
sub
loopne
leave
dec
jge
mov
scas
ljmp
jle
push
mov
test
add
in
cli
adc
lods
add
imul
or
mov
ss
push
and
adc
je
cmc
enter
retw
out
push
loope
jge
mov
dec
xchg
inc
xchg
aad
adc
jl
imul
int3
pop
push
fstl
cmp
adc
lds
jno
push
aas
mov
jns
rcr
cmc
or
test
xchg
popa
shl
cld
mov
xchg
cmp
jne
enter
dec
repz
daa
nop
clc
push
jle
cwtl
rclb
mov
or
shr
mov
in
adc
inc
jo
xchg
fsubrl
or
inc
ret
popa
popa
cmc
push
lcall
test
loopne
push
jg
pop
xor
dec
xor
inc
mov
cmp
shlb
inc
mov
sar
scas
and
inc
scas
mov
xor
or
jp
xchg
in
movsb
cmp
pop
mov
gs
loopne
xor
inc
outsl
int
fcoml
test
lret
adc
adc
and
repz
addr16
adc
out
mov
movsl
mov
lahf
push
mov
xchg
cmp
add
shll
xor
js
int
cmp
mov
inc
inc
sub
add
addl
or
mov
scas
mov
push
mov
cmpsb
jae
mov
xchg
pushf
jmp
shll
inc
movsl
push
jmp
or
cmc
add
adc
je
js
mov
mov
jg
push
mov
lods
je
lods
cwtl
lahf
enter
push
cmpsb
repnz
mov
enter
add
xchg
add
movsb
mov
test
xchg
pop
add
jns
sub
and
clc
adc
jmp
cmp
or
and
push
adc
ror
outsb
int
mov
out
pop
xchg
mov
xchg
push
andb
xchg
mov
shlb
sub
shr
out
imul
xor
mov
push
sti
xor
lret
jne
dec
or
and
xchg
in
or
xchg
add
inc
cmpsl
fwait
sub
insl
jbe
mov
xor
xor
xor
push
add
daa
cmp
dec
dec
jnp
inc
sbb
and
mov
nop
imul
adc
xlat
push
dec
and
aaa
xor
hlt
mov
aam
rol
mov
rcrb
rcrl
add
or
cmp
fwait
stos
jae
inc
gs
push
pop
imul
cmpsb
jnp
in
rol
fcmovnbe
in
jo
shrb
arpl
push
icebp
into
hlt
jno
xchg
stos
addr16
in
outsl
dec
popf
push
jo
aam
push
mov
adc
leave
outsl
mov
cmpsb
dec
lret
lea
pop
iret
sub
lcall
jg
cld
mov
push
int
jmp
in
mov
mov
lock
out
push
sbb
sub
or
inc
xchg
dec
sbbl
cmc
cmpsl
sub
sub
mov
adc
aad
cmc
fidivrl
lret
push
pop
mov
faddp
sbb
ja
adc
cltd
es
enter
sub
pop
xchg
imul
sub
jns
sbb
jb
in
rcrb
fistpl
jmp
cwtl
cmp
cmp
repz
add
xor
jne
inc
mov
movsl
rcll
push
mov
xor
out
or
or
push
jno
push
lds
cmpsl
sti
mov
jo
rcrl
mov
xchg
fs
lods
popa
arpl
in
dec
cmp
lcall
flds
cli
mov
int
mov
mulb
inc
hlt
inc
fadd
insl
or
hlt
roll
jb
pop
stos
stc
sbb
cmp
sbb
leave
cmp
arpl
mov
inc
push
push
jae
jae
adc
push
jecxz
in
xor
or
pop
faddl
cli
cmp
xchg
mov
xor
mov
fdivl
or
lds
pop
push
cmc
insb
cmpb
cli
cmp
sub
and
jb
icebp
imul
xchg
imul
mov
or
sub
mov
stos
test
lods
mov
mov
cwtl
cmp
pop
orl
sub
xchg
imul
cmp
mov
lds
mov
xchg
lock
xchg
inc
mov
sbb
fs
pop
fimull
nop
ds
mov
adc
andl
push
sub
add
sub
mov
in
in
add
popf
adc
aaa
cs
negl
in
decb
or
ja
orl
xor
xchg
jmp
das
jecxz
push
das
ja
mov
cmp
fnstcw
nop
sub
xchg
out
aas
enter
subl
sbb
pop
in
jnp
inc
sahf
pusha
aas
push
add
pop
inc
xchg
xchg
es
jo
fisubl
dec
jle
cltd
les
cmp
dec
and
loop
rcrl
dec
mov
in
xor
jnp
xor
ficompl
push
inc
lods
stos
stos
mov
jno
leave
push
push
stos
sbb
cltd
add
stos
inc
jbe
ss
pusha
bound
test
daa
add
mov
int
ljmp
jnp
dec
fs
divb
lds
add
out
jb
jb
ds
out
dec
mov
jnp
xchg
ljmp
lds
or
cmp
inc
clc
mov
gs
ds
pop
push
xor
rcrl
scas
imul
subl
fiaddl
sbb
fldl
in
lcall
loopne
repz
ret
inc
jne
cmp
pop
cmp
cmpb
aaa
add
sub
imul
out
in
pop
lods
fs
das
xchg
inc
cmp
pop
adc
mov
or
sti
sub
mov
and
mov
dec
mov
jp
loopne
dec
fs
and
sarb
imul
pop
jl
mov
xchg
outsl
or
scas
mov
pop
xchg
push
icebp
jns
xor
repnz
rcrl
enter
sbb
shll
shll
insl
mov
hlt
test
adc
mov
movsl
addr16
fstpl
js
xor
add
push
push
repz
jmp
jmp
and
push
imul
or
xlat
jnp
adc
jg
cmc
loop
int3
fcomps
mov
jmp
sbb
xor
inc
push
ja
push
in
imul
mov
in
fwait
cmp
in
push
fsub
adc
into
jo
ja
std
mov
cmc
jne
lcall
rcrl
ljmp
fisubs
les
or
clc
push
add
jl
fimuls
hlt
xorb
mov
pusha
sbb
ljmp
mov
dec
jg
stos
je
or
in
add
pop
mov
insl
push
dec
mov
xlat
int3
xor
aas
cmpsl
dec
dec
popa
sbb
adc
aas
idiv
mov
ficompl
imulb
jno
mov
sub
sbb
subl
lock
lods
and
push
push
xlat
hlt
mov
sti
enter
fbstp
mov
pop
fcoml
adc
inc
ret
bound
mov
clts
push
ja
mov
push
xchg
push
cmp
rorl
and
roll
adc
push
jo
pop
scas
jp
xchg
iret
dec
mov
shlb
nop
sub
je
sub
rcrb
sub
xor
jns
adc
or
or
dec
add
add
fcomps
pop
xor
mov
mov
arpl
sarl
notb
dec
cwtl
or
mov
mov
sbb
daa
scas
jge
xchg
dec
lahf
fisubrs
test
cmc
and
jmp
fdivl
cmp
adc
xchg
inc
sbb
sub
sbb
fimuls
imul
and
cltd
pop
sbb
mov
bound
mov
cwtl
mov
subl
mov
aam
cld
jg
and
push
cmp
xlat
adc
movsl
add
ds
sub
aaa
lret
ss
mov
inc
xor
cmp
xlat
out
adc
ss
cmpsl
mov
sub
jnp
push
shrb
bound
adc
or
sbb
lret
sbb
pop
and
dec
sarb
lret
and
mov
pop
sub
dec
dec
push
jle
cli
das
aam
sbb
and
icebp
push
popf
mov
icebp
aas
jbe
adc
dec
cmp
jg
in
subl
sbb
jbe
test
stos
mov
xchg
jnp
out
in
lahf
sarb
fistl
sbb
dec
and
iret
mov
fnstenv
jmp
out
xor
pop
or
pop
xor
mov
shlb
push
mov
mov
outsl
stc
sub
adc
mov
dec
mov
imul
xor
cmpl
push
cmc
xchg
jbe
repnz
aad
dec
mov
test
xchg
mov
sti
int3
mov
jbe
inc
mov
mov
in
jmp
mov
ret
mov
aas
lcall
dec
stc
dec
dec
mov
or
out
mov
loopne
cmp
in
shr
jmp
push
xchg
aas
inc
jle
cld
call
repz
push
inc
and
cmp
addr16
mov
outsb
aas
add
ffreep
inc
in
inc
shlb
std
push
in
jae
push
sbb
push
xor
insl
push
xor
leave
imul
in
mov
scas
sbb
in
movsl
push
push
pop
out
push
jne
jmp
mov
cmpsl
nop
fcmovne
and
jae
and
outsb
push
mov
lock
addb
cmp
jno
add
add
jmp
imull
aas
aam
push
dec
repnz
adc
push
and
inc
mov
test
scas
movsb
cmp
test
cmp
mov
fs
adc
popa
sbbb
fsubrl
mov
cld
daa
mov
jo
jecxz
iret
leave
xchg
movsb
jnp
pinsrw
push
out
xchg
dec
xchg
clc
mov
mov
mov
sbb
sub
mov
lahf
and
jl
stos
mov
out
loopne
aad
cmpsl
fisubrs
and
inc
lods
scas
xchg
dec
pop
mov
sub
test
dec
sub
mov
jns
add
les
add
adcb
mov
push
pop
sbb
adc
or
sbb
inc
pusha
inc
sti
gs
sbb
les
fxch
dec
xchg
xor
in
xor
add
or
lock
adc
dec
cmpsb
adc
and
add
mov
xchg
dec
loop
or
and
cmp
adc
mov
or
cmpsl
mov
jae
lods
out
cltd
cmp
sub
inc
add
sub
cltd
fildl
add
outsl
adc
adcb
bound
leave
jmp
push
aad
popa
nop
sub
lcall
popf
jnp
lret
add
mov
and
cmp
xchg
sbb
xchg
dec
stos
push
xchg
mov
repnz
mov
out
fldl
pop
iret
push
insl
mov
or
jb
or
jp
inc
xor
and
add
lock
into
push
jg
xor
mov
out
mov
dec
stc
push
jno
jl
xchg
fcmovnu
dec
xor
jne
pop
jns
xchg
push
fbstp
push
je
int
mov
xchg
adc
leave
in
mov
lcall
repz
mov
sub
add
ljmp
or
ljmp
pause
int3
fldt
push
aad
add
xchg
push
notb
repnz
scas
or
pop
cltd
xchg
sub
inc
popf
cld
mov
js
dec
aad
jb
jge
xchg
xor
std
sbb
popf
xchg
cmp
popf
lahf
cmc
sub
pop
nop
xor
push
stc
adc
and
mov
negb
cmpsl
stos
fwait
or
pushf
pop
hlt
xor
sbb
into
push
mov
push
add
mov
adc
push
aam
fisubrs
and
mov
mov
imul
cmp
ja
and
dec
xor
loope
mov
sbb
rcl
roll
inc
sub
int3
add
mov
xlat
push
or
add
and
in
out
enter
mov
das
lcall
mov
push
cmp
or
std
xchg
push
xchg
clc
add
ds
fcmovne
mov
sub
mov
insb
xor
daa
pop
repz
and
repz
fcmovb
sbb
sbb
dec
iret
pop
fcompl
adc
mov
in
mov
mov
or
sub
adcl
xchg
dec
sub
cmpsb
fidivs
movsl
or
fadd
in
and
mov
adc
mov
lock
or
mov
mov
lret
adc
sbb
xor
pop
ljmp
out
es
inc
mov
out
or
push
fcomps
and
cmp
cmp
xor
xor
dec
out
adc
mov
jl
pop
pop
out
jle
test
jne
xchg
pop
push
and
fsubrl
xchg
inc
jb
mov
sbb
sbbb
cld
out
fwait
xor
shlb
pop
inc
je
imul
mov
and
pop
sbb
fnstcw
dec
lret
cmp
cld
mov
je
scas
inc
bound
dec
adc
jne
dec
out
push
aam
jae
mov
jb
mov
mov
jnp
call
sahf
inc
push
insl
mov
aam
ret
std
enter
jno
add
adc
sub
repz
mov
jmp
data16
cmpsb
mov
leave
jecxz
and
pushf
inc
js
mov
pop
dec
insl
test
adc
addb
fsubrs
pop
cli
rclb
daa
ja
push
mov
dec
fmuls
sbb
pop
sbb
ds
fisubrs
cli
and
insl
movsb
arpl
mov
addps
adcb
adc
das
pusha
xchg
je
mov
mov
push
sbb
dec
jb
cld
pop
pop
bound
lahf
add
lods
lods
stos
lods
out
cmpsl
mov
rolb
aad
pop
mov
pushf
movsl
sbb
sub
out
add
fs
lock
cmp
jl
xor
call
in
push
sbb
lret
mov
mov
xor
dec
sti
mov
or
mov
subl
loop
test
jg
lods
inc
mov
adc
daa
cmp
fmuls
aaa
xchg
or
jl
movsl
dec
and
mov
std
popf
rcll
jns
mov
cmpsb
fcomps
arpl
and
mov
jle
cld
inc
or
or
mov
je
add
sub
ljmp
mov
or
outsb
push
xchg
mov
and
pushf
sahf
repnz
movsl
addb
or
rcr
ja
in
out
mov
add
arpl
sbb
fst
fwait
stos
jle
mov
xor
pop
stc
fadds
and
aam
or
jne
jle
lcall
ljmp
lret
xchg
je
sub
jmp
jle
dec
cmpsb
and
in
popf
repz
sbb
mov
mov
popf
push
fsts
mov
lret
jbe
mov
mov
mov
adc
in
jne
js
xor
xchg
and
inc
and
dec
das
mov
fptan
frstor
out
pushf
inc
push
shl
jmp
fwait
and
das
and
mov
clc
test
iret
hlt
lods
dec
push
pushf
inc
sub
push
call
mov
xchg
stos
les
xor
mov
sub
mov
mov
mov
fisttpl
cli
cli
sub
xchg
fadds
adc
inc
ds
inc
test
pop
push
push
cld
mov
mov
dec
xchg
jle
xlat
xor
and
das
inc
pop
add
icebp
mull
add
in
fld
stos
jno
cmp
cmc
and
add
adc
arpl
aaa
in
sub
mov
xchg
in
in
sbb
sub
dec
fidivs
add
mov
stos
outsl
sti
xchg
fcomip
inc
add
jno
ret
shrl
sbb
sub
mov
pop
scas
push
cmpsb
inc
lds
mov
mulb
out
sti
dec
xor
loope
leave
cmpsb
movsl
sahf
loope
cmp
lret
addr16
arpl
jmp
or
inc
jnp
cmpsb
sahf
lods
push
pop
xor
push
popf
xchg
and
fsts
adc
or
inc
xchg
lret
aas
in
or
push
in
adc
sbb
cltd
jae
and
push
cwtl
dec
and
loope
pop
xchg
pop
bound
sahf
sub
aas
pop
lods
jl
or
fucomi
push
push
bound
sub
jno
jnp
lock
sbb
add
icebp
cmp
and
push
bnd
dec
into
xchg
call
je
jp
xchg
push
push
push
push
cmp
xor
sub
test
repnz
nop
lds
leave
add
lret
repz
inc
cltd
fdivl
clc
shrl
pop
pushf
shlb
xchg
or
sub
add
pop
cmp
or
nop
aam
jmp
pop
insl
addl
pop
xor
sub
mov
xchg
das
mov
icebp
sti
shll
out
nop
push
stos
fnsetpm(287
mov
in
cld
mov
pop
pusha
sub
les
fisttps
mov
jle
fiaddl
cltd
fs
in
pop
dec
adc
pop
xchg
loop
mov
cltd
xchg
and
add
mov
lods
dec
xlat
jne
mov
cmp
mov
inc
jl
sub
out
inc
sub
xor
add
dec
test
mov
subb
adc
mov
or
mov
int3
cmp
pusha
dec
or
jno
rorb
push
pop
out
insl
push
adc
lds
mov
loope
je
sub
jp
out
xchg
subb
mov
inc
loopne
push
mov
sub
and
imul
dec
movsb
jbe,pn
fildl
dec
test
adc
popa
mov
push
xchg
mov
je
pop
push
ja
push
cmc
mov
push
jb
nop
nop
pop
lock
test
in
rcr
cmp
sbb
mov
xor
leave
inc
pop
test
mov
dec
insl
sahf
xlat
or
insl
fs
push
out
pop
pop
add
scas
fadd
or
xchg
lret
jmp
xor
aad
dec
and
pop
cmp
rorb
push
cwtl
loopne
clc
out
and
pop
mov
inc
push
add
int3
rclb
jle
xor
pop
jnp
push
add
or
jbe
jns
loope,pt
imul
fst
aam
ret
cwtl
into
test
ficomps
mov
pop
mov
out
mov
int
mov
jecxz
insl
and
push
mov
jbe
jmp
xchg
bound
dec
aad
cmp
jnp
xor
repnz
add
mov
int3
fisubl
mov
shll
in
sub
pop
cltd
jnp
push
std
fldcw
pop
mov
fisubrs
sub
dec
cmp
dec
xor
mov
hlt
jl
mov
push
lcall
mov
or
mov
push
and
sti
int3
cltd
aad
or
inc
xchg
cmp
inc
push
rclb
mov
dec
cmpsb
cmpsb
mov
and
jge
sbb
or
and
cwtl
into
adc
sbb
jno
dec
and
nop
in
sub
cwtl
add
sti
pop
ds
and
and
testb
push
and
inc
and
cmovbe
pop
or
sub
xorb
push
push
dec
shl
lahf
std
cld
mov
je
xchg
sub
enter
fdiv
mov
xorb
cmp
xchg
cmp
fsubrl
aam
roll
push
mov
lock
fucomp
jno
cmpsb
xchg
mov
jno
xchg
push
imul
mov
jl
bound
stos
mov
aam
lret
inc
div
mov
push
push
scas
add
aad
cmpsb
fidivl
es
repnz
jmp
or
scas
sbb
mov
jge
movsb
lods
iret
mov
and
jb
std
cwtl
fiaddl
jbe
rcr
jl
das
das
sahf
sbb
test
and
inc
and
lcall
cmp
in
mov
std
pop
jae
pop
stos
and
and
lcall
stos
shrl
mov
cmp
sarb
sbb
xor
mov
or
adc
pop
mov
mov
in
push
movsb
mov
lar
add
shlb
mov
sbb
fs
lret
adc
notb
adc
jns
fsubrl
mov
or
xor
xor
icebp
cmp
daa
or
jnp
add
xor
shrb
mov
repnz
lret
mov
xorb
lock
test
clc
es
int3
nop
daa
xchg
push
fistpl
or
adc
data16
outsb
stos
or
imul
mov
xor
jb
inc
push
icebp
cmc
pop
jle
test
and
jp
mov
and
sub
stos
movl
xchg
lahf
jg
jno
push
or
jbe
int3
in
aas
pop
sub
xchg
fs
sbb
stc
fildl
jmp
xor
bound
pop
cld
jmp
jae
out
mov
fisubl
mov
shll
cld
into
call
pop
inc
test
or
or
imul
and
cmp
fdivrs
mov
pop
popf
mov
mov
and
insb
das
mov
mov
roll
mov
and
or
das
out
lcall
pop
xlat
test
mov
jns
lcall
dec
lock
sub
gs
inc
adc
addr16
cltd
adcb
lods
pop
sub
mov
mov
ret
outsb
mov
insl
jb
xor
jno
repnz
shlb
xor
mov
jne
mov
or
jg
lea
or
andl
inc
mov
add
dec
adc
movsl
jbe
stc
xor
pop
xor
jno
dec
mov
outsb
sti
aas
sub
sub
int
ds
lcall
fbld
fwait
push
push
add
adc
inc
addr16
dec
xchg
cmp
ds
inc
movsb
dec
mov
cmc
movsl
mov
mov
xchg
cmpsb
and
mov
sub
jb
movsb
add
repnz
int3
adc
mov
push
cltd
bound
xorb
pop
sbb
fdivl
stc
jnp
sub
rcrl
loopne
int3
push
inc
sbb
jns
dec
push
shll
and
movl
xlat
adc
fldcw
fisttpl
sub
scas
cwtl
lret
lret
push
stos
xchg
adc
adc
xchg
ret
inc
mov
mov
or
and
jp
ds
cmp
mov
inc
pop
insb
jnp
rol
cmpb
mov
sbbl
fbld
push
aad
xor
dec
push
aad
adc
in
or
mov
inc
push
in
sub
push
jo
aad
add
test
mov
mov
mov
outsl
adc
dec
sbb
ficompl
mov
mov
ljmp
dec
inc
fs
jecxz
in
ljmp
pop
mov
adc
repz
je
dec
xor
outsb
pop
jnp
sbb
testl
enter
mov
lret
sarl
nop
lret
testl
mov
jl
sub
sbb
mov
mov
popa
leave
cmp
popa
xchg
sub
das
xor
loop
sbb
mov
mov
xchg
jp
sbb
cmp
lret
cltd
aaa
xchg
dec
lds
jbe
jno
dec
add
dec
mov
nop
jecxz
shrl
push
jae
jp
push
push
insl
xor
dec
aad
fs
cli
dec
push
lret
jo
mov
pop
dec
mov
sub
sbb
cmpb
push
mov
ljmp
pop
dec
mov
push
xor
shl
jnp
icebp
pop
fwait
inc
in
pop
add
and
jbe
pop
push
xlat
fcomps
xchg
and
int3
aas
hlt
xchg
insl
sbb
addr16
lock
push
xchg
cmp
pop
stc
into
sbb
out
arpl
jg
cmp
rclb
or
sbb
data16
les
test
dec
pop
movsb
sbbl
mov
repz
or
push
rorl
xchg
adc
sub
jmp
mulb
shlb
mov
mov
add
xchg
dec
into
icebp
aas
xchg
lret
scas
pusha
xchg
dec
dec
add
xchg
call
xchg
fcmovnu
push
push
push
test
gs
pop
cmp
sahf
cmp
je
ljmp
cld
les
push
sbb
in
icebp
or
xor
xlat
dec
mov
popa
add
addb
loopne
or
xor
rolb
call
sbb
repnz
mov
adcl
ja
leave
push
mov
int
andb
stos
idivb
fsubrs
xor
movsb
cmp
xchg
fs
pop
in
shrl
in
xchg
mov
mov
or
fstpl
mov
pop
push
and
push
jo
sub
sahf
daa
cld
pop
and
outsl
inc
sarb
mov
shll
mov
dec
outsb
adc
inc
test
push
add
sub
and
sti
adc
cmp
inc
test
repnz
cmp
or
or
repz
loopw
xor
inc
out
adc
mov
mov
adc
ret
movsl
and
cltd
jne
ret
adc
test
adc
addr16
decl
mov
jl
jmp
or
outsb
add
inc
or
pop
xchg
jnp
imul
bound
loop
imul
dec
adc
ja
in
mov
mov
dec
clc
add
pop
outsl
nop
stos
mov
fdivs
sbb
hlt
shl
push
popf
lcall
cmp
xor
mov
or
test
push
imull
stc
or
int
jo
in
mov
sahf
pushf
aam
pop
xchg
or
inc
sbbl
ficompl
pop
insl
mov
push
cmp
mov
add
dec
inc
and
sar
xchg
loope
mov
fldl
cmpsb
shlb
add
jge
movsl
and
ret
gs
push
rorb
pop
daa
cmpsb
cmpsl
loopne
lret
repz
sbb
fidivl
jno
jge
xchg
pop
fwait
sti
jo
and
and
and
dec
mov
inc
pop
insl
sub
xchg
pusha
mov
ja
insl
dec
inc
sbb
int
dec
and
push
pop
xchg
lret
aaa
mov
pop
inc
out
mov
testb
mov
rclb
scas
or
mov
fiaddl
xchg
cmpsb
sub
aas
mov
outsl
adc
clc
mov
out
leave
pushf
push
out
das
or
jmp
jno
leave
je
xchg
cmpsl
loop
adc
test
mov
int3
xchg
adc
add
xchg
stos
xorl
test
adc
iret
push
test
loopne
inc
clc
jle
jge
pop
into
push
lods
sub
jmp
jns
jo
cwtl
in
repz
cli
xor
lock
jg
mov
insl
sbb
in
jle
jecxz
jo
mov
cmp
jg
push
jno
push
and
mov
ljmp
and
sub
mov
sbb
dec
mov
lret
mov
mov
mov
jmp
jne
movsb
mov
in
or
push
lea
xchg
sub
pop
fldcw
inc
cmp
das
mov
sbb
rep
imul
filds
fsub
rclb
jg
out
push
jno
test
push
sahf
adc
out
dec
sub
mov
test
inc
fwait
pushf
dec
jp
test
js
sub
mov
rolb
sbb
push
sbb
inc
test
movaps
mov
aas
add
loope
push
lahf
adc
cmp
jle
mov
xchg
xor
js
xor
lods
ret
jg
je
in
in
hlt
jle
dec
or
subl
das
dec
movsl
pop
push
sbbl
call
sub
mov
mov
mov
test
push
adcb
sub
fsubl
xchg
sti
sbb
adc
xchg
fistps
xor
mov
imul
mov
aas
cltd
mov
mov
inc
stc
mov
dec
shlb
jno
xor
sbb
jno
insb
fists
int3
stos
leave
push
and
addb
xor
into
repnz
sti
mov
or
jnp
loopne
jmp
repz
mov
scas
mov
inc
lahf
jb
inc
es
cmp
ret
lret
outsb
sti
into
lods
and
lods
xor
hlt
dec
out
lods
pop
ret
incl
and
leave
arpl
cmpsb
jnp
ljmp
inc
scas
rorl
cmp
xor
int3
mov
xchg
sub
sarl
push
imul
push
push
stc
and
mov
adc
call
push
cmc
insb
inc
test
stos
xchg
loop
pop
sbb
dec
adc
mov
out
pop
xlat
fsubrl
push
pop
pop
scas
pop
popa
inc
cli
aaa
mov
popa
mov
scas
dec
repnz
mov
ret
test
pop
and
sub
lcall
mov
shrl
cmp
mov
push
sub
sbb
jb
xlat
dec
mov
out
add
xchg
out
aam
lret
lret
mov
sarl
bound
pop
adc
notl
pop
test
add
shrl
xor
fxch
decb
cwtl
outsl
test
pusha
pop
fcoms
jp
aas
clc
cmpsl
cmp
mov
mov
push
or
pop
testb
mov
and
xor
loope
pop
loop
mov
adc
add
lret
sbb
jmp
imul
xor
ret
cmp
stc
fdivl
or
sub
fwait
mov
jecxz
or
xchg
adcb
dec
or
lea
adc
inc
mov
sub
pop
dec
sarl
in
sub
dec
das
push
jge
add
adc
cmc
lods
stc
ja
xor
nop
call
ret
addr16
mov
jo
jp
int3
scas
mov
xchg
and
std
scas
jae
jge
jns
std
pop
rcrl
mov
setb
shl
inc
and
push
sbb
push
push
ja
scas
push
cmp
iret
mov
jp
mov
adc
mov
icebp
adc
in
repz
std
xchg
dec
leave
sub
lahf
pop
mov
andl
pop
cmp
aas
mov
cld
xor
sahf
lods
in
mov
dec
push
sub
mov
or
mov
jl
mov
push
aad
es
lahf
movsb
lods
jb
sub
je
aas
aas
mov
add
call
sti
or
jg
cwtl
jno
adc
mov
inc
push
sub
es
and
adc
sahf
jge
jb
lock
mov
outsb
dec
cli
bound
lcall
add
mov
stos
or
gs
sbb
push
pop
xor
inc
pop
and
mov
sarb
out
sub
dec
in
or
cmp
mov
xor
aam
fisubrs
jl
add
push
xor
dec
test
jmp
rclb
hlt
or
enter
adc
in
nop
int3
fwait
stc
cld
test
adc
in
lods
aad
in
imul
adc
shlb
xchg
mov
and
jg
jb
sti
gs
fmulp
add
push
or
hlt
sub
mov
adc
loope
mov
adc
jge
subl
push
pop
jo
call
dec
lahf
std
mov
or
es
push
and
mov
mulb
test
int3
negl
mov
scas
xchg
dec
push
int3
jb
sarb
adc
sbb
dec
nop
cmpl
dec
shll
movsl
or
mov
nop
xchg
dec
stos
cmpsl
push
push
addr16
imul
fidivs
xlat
fisubrl
or
inc
test
lods
push
dec
pop
fwait
mov
es
test
adc
setae
jp
or
dec
lds
aam
or
in
dec
shrb
add
fnstcw
mov
int3
xchg
mov
shrd
fistpl
push
xlat
push
xchg
pop
or
cmp
call
imul
inc
pop
adc
jno
xor
push
lret
push
out
clc
mov
icebp
pop
rol
xor
rcr
pop
or
pop
xchg
pop
inc
jns
cmp
xor
xor
adc
mov
in
and
mov
repnz
je
and
add
mov
out
pushf
testb
adc
js
push
ljmp
imul
push
jne
test
or
fninit
xlat
mov
mov
fdivrp
stc
lahf
shlb
aas
cld
push
aam
imul
push
mov
cmp
test
jecxz
xor
shlb
cmpsb
jne
aad
dec
data16
jae
inc
xchg
mov
out
mov
mov
mov
flds
jg
fldcw
scas
fsubrl
inc
movsl
xchg
mov
fstpt
test
mov
or
arpl
pop
je
sahf
mov
ljmp
or
ret
nop
push
sahf
xor
inc
das
gs
mov
push
dec
aaa
jge
mov
mov
sbb
xchg
fwait
rorl
adc
hlt
mov
in
add
negb
mov
fstl
cmp
mov
js
cmp
stc
xchg
ret
stos
rclb
mov
cmpsl
mov
push
mov
push
lds
addl
in
add
movsl
cs
cli
mov
jae
push
sub
insl
add
stos
add
add
pop
mov
lea
sbb
aaa
jg
sahf
nop
dec
xor
sahf
pop
xor
fucomi
mov
jnp
bound
pop
repnz
pop
push
or
bound
shlb
mov
shrl
lea
shlb
mov
iret
mov
sbb
scas
or
icebp
inc
pop
rcll
fdivrl
testl
pop
mov
jo
popa
adc
aam
pmaddwd
dec
roll
lds
mov
repz
cmp
dec
jno
jl
inc
addr16
into
mov
mov
clc
dec
mov
adc
push
jns
and
loope
inc
or
pextrw
xchg
leave
nop
imulb
jnp
mov
rclb
sbb
inc
push
or
cld
rcr
mov
stc
push
test
cmp
popf
or
mov
push
jmp
mov
fwait
pop
cmp
xchg
xorl
call
or
ds
mov
les
pop
mov
rorb
pushf
mov
or
push
cmp
sub
rorl
add
cmc
out
xchg
adc
sbb
out
int3
jnp
addr16
inc
imul
data16
dec
xlat
je
mov
testb
sbb
pop
rclb
lea
loopne
call
daa
in
es
xor
lcall
adc
fisttpl
and
in
lret
jl
sub
shll
jns
ret
adc
mov
cmp
cmp
ljmp
iret
in
and
push
cmp
or
cmp
shrl
test
and
scas
hlt
mov
outsb
mov
mov
out
and
std
pushaw
push
outsl
or
movsb
mov
aad
cmpsl
cmpsl
int3
add
dec
scas
dec
out
mov
inc
xchg
mov
xor
push
mov
ljmp
dec
leave
xchg
and
ss
in
dec
xrelease
in
and
pop
sub
push
inc
es
repnz
mov
push
or
stos
les
mov
cmp
fs
jge
iret
xchg
or
jmp
fdivrl
ja
lds
cmc
call
sbb
xchg
pop
jmp
sbb
out
or
jno
xchg
jo
outsl
jno
and
and
fimuls
xor
hlt
addr16
xchg
psubb
mov
lret
jae
dec
pushl
ss
pop
imul
mov
xor
add
insb
lods
push
frndint
aas
aad
loop
popl
xor
mov
je,pt
dec
daa
ljmp
dec
jmp
xchg
jbe
xchg
aad
lret
dec
mov
xor
add
push
fsubrp
insb
sbb
sub
pop
call
mov
into
stos
es
sub
ret
cwtl
push
fistl
mov
pop
mov
mov
push
dec
xor
jbe
loop
aaa
xlat
mov
mov
xchg
je
push
add
data16
das
lret
cmp
and
add
push
hlt
push
mov
sbb
outsl
mov
test
jge
les
pandn
xor
adc
sbb
mov
cwtl
ds
out
mov
hlt
or
cmc
push
bound
xchg
les
sbb
pop
daa
clc
jbe
stos
xchg
push
sarl
xor
xchg
mov
fmuls
shlb
in
push
out
mov
nop
sub
test
imul
or
icebp
repz
enter
loop
in
add
jnp
stc
mov
js
inc
adc
rep
ja
fidivrs
lods
leave
imul
cmp
outsl
iret
outsb
xlat
lock
jbe
jne
out
adc
xor
and
repz
inc
js
ficoml
or
xor
and
mov
inc
xchg
mov
and
or
scas
add
fmul
pop
cli
add
add
mov
mov
lahf
outsb
shl
mov
es
out
pop
dec
mov
leave
and
mov
daa
mull
xor
xor
cld
xor
xor
sahf
cli
movsl
dec
cmpsl
je
ret
loope
push
daa
cmp
daa
iret
jle
inc
inc
ret
inc
scas
inc
iret
dec
aam
fisubrl
test
mov
cmp
ficomps
push
shl
je
add
adc
shl
cmp
pop
fwait
lret
lds
mov
jns
sahf
mov
pop
or
pop
in
mov
lret
negb
push
push
push
cltd
idivl
scas
add
out
cmp
pop
adc
test
pop
subl
and
adc
mov
and
xchg
inc
mov
dec
xchg
sahf
imul
loopne
push
daa
xor
push
stos
stc
jge
adc
mov
ss
xchg
fistl
jg
and
dec
xchg
push
rcll
out
or
sub
loope
rcll
cmpsl
pop
add
or
jge
add
aad
inc
ja
scas
mov
and
icebp
cmpsl
insl
and
jno
ja
imul
lahf
adc
push
mov
inc
xor
addb
cmpsb
int
jp
lea
out
push
xor
inc
or
insl
lods
mov
popa
adc
dec
cmp
leave
push
add
sarl
push
fsubp
dec
sbb
cmp
js
das
mov
in
add
call
test
jge
lods
xor
ss
dec
xchg
dec
clc
je
xchg
clc
pop
cmp
aaa
int
mov
test
test
xchg
or
loop
and
mov
mov
xchg
stos
mov
jle
and
insl
and
in
jo
mov
pop
pop
cmp
cli
xor
ret
in
jmp
mov
scas
addl
push
aaa
shlb
pushf
sub
fidivrl
sub
sub
mov
mov
lret
imul
xchg
gs
out
sahf
adc
aas
or
shl
lods
mov
xchg
and
arpl
inc
cmc
push
cmp
jmp
mov
movsl
imul
ss
push
loopne
mov
sub
lret
stc
xor
dec
in
pop
and
ss
ss
inc
shrb
cltd
mov
loope
jg
repz
jmp
test
mov
adc
sbb
orl
enter
dec
push
inc
pop
bswap
cmp
test
mov
out
mov
popa
mov
xchg
mov
imul
sbb
mov
dec
dec
mov
aas
fldenv
mov
dec
lcall
call
insl
xor
rolb
ss
or
in
int3
or
in
dec
and
mov
test
and
sahf
dec
insb
movsl
mov
mov
clc
pop
leave
in
cli
test
call
imul
and
jne
loope
push
and
adc
in
imulb
pop
push
insl
aad
icebp
mov
out
pop
lahf
cmp
sbb
fs
add
imul
sbb
sub
gs
sbb
cwtl
rorl
pop
insl
ss
mov
add
sti
ret
push
popf
pop
icebp
adc
and
mov
add
cmp
pop
jnp
sub
push
xor
pusha
movd
push
adc
push
fisubrs
stc
mov
mov
int3
fcmovnb
and
jnp
jae
enter
mov
sub
ret
mov
pusha
notb
dec
or
or
mov
lea
mov
sahf
and
sahf
push
jp
and
push
inc
fdivl
leave
imul
mov
cli
jbe
xchg
fdivrs
cmpsb
lret
xor
adc
mov
scas
cld
sar
sub
sbb
test
and
push
add
loopne
outsb
sti
cmp
scas
mov
xor
jns
or
jne
jmp
push
int
add
xor
sub
xchg
push
jg
ficomps
push
cmpsl
dec
leave
pop
cltd
cmp
iret
mov
leave
out
sbb
pushf
shll
push
jb
pop
dec
adc
mov
inc
push
cmp
jb
faddl
mov
data16
inc
in
xchg
xchg
cli
sub
mov
and
cs
lds
sub
and
loope
cltd
xlat
test
push
aas
pop
imul
dec
sti
int
mov
inc
and
in
sub
pop
hlt
imul
pop
stos
and
loop
or
push
xchg
scas
dec
sarb
int3
pushf
out
pop
scas
arpl
add
rcl
nop
fldenv
leave
popf
icebp
pop
jne
test
popa
js
js
int
dec
lret
cmp
xorl
add
mov
aad
outsl
pop
inc
cmp
cs
push
mov
mov
push
fwait
cmp
shlb
jae
mov
mov
inc
cmp
lret
dec
or
lret
and
rclb
jbe
inc
pop
sarl
jge
outsl
mov
ljmp
mov
jo
mov
pop
xchg
dec
jmp
push
pop
arpl
adc
cmpsb
sbb
xor
js
jne
sbb
hlt
xor
xchg
jne
push
cmp
lret
inc
loop
imul
repnz
cs
les
shlb
xor
jbe
pop
cmc
decl
xor
into
jge
data16
mov
or
cltd
les
mov
adc
pop
stos
popf
mov
xor
int3
xchg
and
jne
cli
cmp
push
sti
mov
xchg
imul
xchg
mov
mov
das
jbe
dec
jg
add
push
dec
pop
std
add
movsb
push
popf
pop
mulb
mov
dec
inc
mov
xchg
jo
test
xchg
sbb
dec
dec
ficoms
inc
fs
mov
xchg
js
add
mov
sbb
insb
adc
sub
outsb
pop
and
lds
add
and
pop
dec
int3
lcall
jp
dec
sub
loop
xchg
je
jl
shlb
das
fnstcw
sub
adc
cli
adc
mov
or
addr16
adc
xchg
in
adc
xchg
adc
or
rcl
xchg
push
test
mov
xchg
cli
cli
jnp
and
mov
inc
jns
mov
xchg
jns
ss
jne
xor
orl
test
sahf
pop
in
loop
mov
dec
mov
test
aas
rorb
jp
inc
sti
nop
jle
clc
or
cli
xchg
outsl
in
and
aas
push
mov
test
mov
push
lcall
xchg
or
sbbl
xchg
xor
test
mov
sbb
pop
or
ret
stos
jb
mov
imul
aad
lahf
xchg
sbb
or
mov
cmpsl
cmp
xor
inc
jl
jne
ds
mov
int3
dec
cmp
or
pop
push
xchg
add
xor
outsl
mov
in
jo
mov
mov
fdivs
cmpb
xor
jle
xchg
sbb
loopne
mov
jmp
push
icebp
bound
or
int3
push
mov
dec
lock
dec
pop
and
in
add
inc
in
mov
je
pop
xchg
add
inc
dec
push
lret
xchg
gs
pop
scas
pop
rcl
push
mov
inc
inc
sub
push
incl
outsb
mov
mov
push
add
test
cmp
push
xor
mov
icebp
sbb
sbb
jle
insl
stos
or
sbb
xchg
iret
mov
lock
fwait
mov
cwtl
fdivrp
ret
xchg
xor
cmpsb
jb
jb
jne
mov
pop
mov
daa
push
inc
mov
pop
mov
enter
insb
mov
xor
cmp
loopne
cmp
inc
jne
in
in
inc
sbb
std
and
das
dec
or
std
dec
mov
cmp
mov
imul
ss
cmp
out
xlat
dec
test
dec
bound
or
rol
pop
cmp
cmp
and
in
mov
mov
sbb
mov
aam
cmp
mov
dec
cli
add
push
cmp
insl
bound
test
sub
add
or
loope
movsl
cmc
cmp
loope
jo
mov
jb
vmulss
mov
pop
pop
nop
clc
push
pop
add
jg
scas
sub
enter
xor
add
mov
test
adcl
ret
jnp
pop
aam
add
mov
shll
fcompl
push
push
pop
imul
adc
xchg
lcall
repnz
int3
repnz
sub
jns
push
push
dec
xchg
jp
cs
mov
pop
inc
dec
ficompl
adcb
loopnew
in
lock
dec
cmp
add
scas
cwtl
andb
sbb
lret
push
xchg
jl
cmpsb
mov
daa
in
jp
subl
insb
xchg
inc
mov
sub
lret
xor
mov
jl
xchg
movsl
jb
shrb
add
dec
lea
lods
arpl
jae
mov
mov
adc
daa
cltd
rol
les
add
and
cmpsl
dec
sahf
lea
and
nop
outsl
push
add
jge
jecxz
pop
rcrb
cmp
sub
orl
ljmp
xchg
aaa
movsb
dec
flds
or
lret
mov
xorl
pop
shlb
les
ret
out
xor
std
pop
or
mov
jmp
sub
insl
fists
xchg
add
repz
adc
ja
mov
adc
sahf
mov
mov
cs
jno
push
mov
fcmovbe
sahf
pop
hlt
stc
rclb
movsl
push
push
clc
std
mov
xor
je
jmp
mov
stc
adc
mov
jl
les
cmpsb
cmc
xchg
fisttpll
lock
xor
inc
in
mov
cmp
mov
dec
push
rorb
xor
mov
mov
loop
out
xor
into
lds
cmp
push
in
in
in
inc
xchg
sub
out
cmpsb
ljmp
rolb
aam
sbb
inc
icebp
in
inc
ja
or
cmpb
pop
and
sub
into
imul
leave
pop
out
sbb
sarb
insl
fnstcw
rcrl
push
jl
xor
das
addr16
sbb
pop
pop
dec
add
shlb
lock
pop
and
mov
aam
or
mov
mov
jno
roll
outsl
les
xchg
in
cld
rcll
or
pop
push
sarl
add
ja
imul
mov
stos
jp
loop
test
inc
sti
xchg
ds
push
test
pop
loop
sbbl
rcrl
les
mov
cli
lcall
xchg
lahf
mov
mov
cmpsl
fisttpl
jmp
ss
xor
clc
xorl
lock
xchg
and
lea
repz
and
push
and
push
cli
icebp
pop
or
and
dec
add
add
adc
add
loope
adc
jg
sti
lret
stc
jmp
mov
test
shll
insl
lock
jae
ljmp
cs
or
scas
repnz
xchg
mov
sbb
jle
jmp
jo
cmp
icebp
mov
movl
xor
popf
fstpt
sub
and
lods
loopne
das
imul
xchg
mov
fs
sahf
enter
jns
push
jmp
push
dec
mov
aaa
xlat
icebp
mov
push
jae
mov
addr16
fmulp
inc
xchg
lahf
aaa
mov
orl
jns
aaa
nop
fildl
fidivs
push
sub
mov
xchg
pop
dec
incb
outsb
jnp
sarl
and
mov
in
cs
cmp
adc
mov
and
popf
adc
pusha
jae
cmp
popl
mov
push
rclb
in
mov
test
nop
fcompl
sbb
adc
xchg
or
mov
add
pop
outsl
jle
sub
cmpsb
mov
ret
test
add
imul
mov
dec
mov
mov
in
pushf
xchg
es
xor
mov
cmp
outsb
mov
jbe
mov
ljmp
inc
sbb
dec
dec
andl
mov
jb
les
cmc
enter
mov
mov
cmpsb
fwait
inc
sub
xor
xchg
mov
or
jge
dec
movsl
inc
mov
repnz
iret
daa
pop
mov
mov
shll
subl
xor
xor
lcall
out
dec
sub
in
les
insb
jmp
cmc
sbb
xchg
pop
adcl
or
mov
pop
push
cli
loope
cmpl
cmp
mov
and
adc
sub
add
sbb
adc
push
mov
cmp
add
lock
add
cmp
mov
movsb
add
out
int
sbb
mov
outsl
push
xor
pop
leave
sbb
and
mov
push
sbb
cwtl
dec
inc
add
xchg
mov
cmp
insb
mov
icebp
lea
aaa
xlat
divl
iret
imul
inc
imul
sub
pop
lret
aas
pushf
ss
push
mov
xchg
pushf
in
inc
push
jge
xlat
jmp
inc
movsl
insb
fcompl
mov
add
mov
or
push
xchg
out
xorb
mov
test
inc
dec
into
insl
xor
or
adcl
popa
mov
jp
sbb
in
int3
jns
jmp
inc
add
or
dec
icebp
adc
loopne
mov
stos
pusha
cmp
adc
jecxz
ljmp
pop
bound
lea
nop
ret
out
xchg
popa
mov
ss
add
pop
pushl
into
gs
cmp
push
loop
or
repz
dec
push
addb
jg
push
xor
xchg
inc
subb
adc
xchg
xchg
enter
fnsave
jg
add
jp
xlat
leave
mov
inc
fcoms
fdivs
ficompl
xchg
xchg
test
test
xchg
lods
adc
iret
jb
xlat
mov
sub
inc
int
xchg
and
in
cmpsb
mov
scas
add
js
mov
cmc
xchg
notb
rcll
cmpsl
test
and
bound
push
inc
xchg
push
xor
lahf
es
fcomps
xchg
adcb
fcompl
rolb
iret
adc
lods
loope
out
stos
fs
xor
xchg
pop
sti
sbb
fs
mov
lds
ds
loopne
movsl
cwtl
jae
push
lods
jge
or
dec
mov
mov
push
push
and
mov
out
jnp
test
imul
mov
push
adc
mov
scas
mov
lcall
aas
imul
sbb
or
in
jge
jecxz
mov
cmp
adc
inc
scas
mov
scas
mov
inc
movsb
fsubr
data16
mov
sarb
popf
lock
mov
nop
push
int3
into
sub
test
lcall
sbb
insl
shlb
icebp
movsb
mov
nop
ficomps
nop
sub
hlt
test
fwait
mov
and
mov
mov
xchg
outsb
fistpll
int3
fimull
xchg
int
or
mov
imul
and
jmp
popa
sbb
stc
add
fsubrp
dec
adc
test
cltd
add
push
or
aad
inc
mov
dec
inc
mov
imul
sbb
mov
les
jmp
cld
lock
shrb
std
jae
pop
arpl
fxch
aad
cwtl
pop
jnp
mull
pop
lea
stc
out
aas
fsts
cmp
cmp
xchg
in
adc
sub
fld
and
in
pop
adc
xor
mov
xchg
dec
mov
mov
mov
pop
inc
xor
pop
mov
push
ljmp
daa
pop
int
fcmovne
and
in
push
xor
out
pop
mov
xor
push
movsl
es
push
stc
inc
mov
mov
les
retw
mov
scas
and
ss
call
loope
mov
addb
test
std
test
aad
adc
jns
test
push
out
mov
mov
mov
sahf
shrl
pop
cwtl
pop
mov
ljmp
andl
into
mov
xor
std
test
loope
imul
lds
pop
add
pop
sub
stos
ret
sbb
push
add
or
insl
mov
sbb
rcrl
add
jo
jp
mov
mov
pop
addb
cmp
lcall
sarl
into
jbe
jmp
js
add
test
xchg
push
sahf
shl
outsl
mov
mov
rolb
lods
sub
ja
dec
mov
jg
xchg
sbb
cli
imul
jmp
aas
loop
lahf
pop
sti
mov
cmpsb
cmp
loope
flds
sub
and
daa
jg
xchg
jnp
ret
pop
mov
cmpsl
xor
aam
aad
mov
adc
shll
xchg
cltd
in
decl
pop
repz
lret
fsts
cwtl
jb
pop
idivb
imul
adc
jnp
mov
mov
daa
cmp
inc
aam
add
or
cmp
mov
repz
ljmp
mov
dec
push
mov
mov
add
xor
push
xorb
jp
pop
or
in
sbb
xchg
rorb
dec
imul
adc
jns
sahf
fists
xchg
enter
push
mov
sub
nop
rcrb
hlt
pop
xchg
sbb
in
adc
mov
push
xchg
mov
shrb
pop
popf
jo
aam
mov
data16
jb
dec
pop
out
pop
iret
movsl
shl
sbbl
lahf
xchg
mov
loopne
test
xor
sub
or
mov
lods
mov
adc
inc
rorb
jbe
inc
jbe
rorl
jnp
scas
test
xadd
mov
out
pop
dec
orl
pop
adc
sar
in
xchg
sub
cmpsb
push
lahf
pusha
in
sbb
cmpl
sti
test
mov
fists
mov
mov
mov
aas
int
cmp
push
mov
mov
mov
jl
pushf
pop
push
in
sbb
int
mov
and
cmp
xor
xchg
lcall
loopne
hlt
aas
xchg
dec
jg
add
paddb
xchg
push
adc
movsl
jns
in
in
clc
mov
xchg
stc
test
ror
xor
mov
add
mov
and
or
ds
test
daa
sahf
mov
popa
movsb
adc
aad
add
scas
fisubrs
pop
test
out
ficomps
mov
dec
js
cmp
ficoms
dec
cmpb
out
lods
fstl
dec
jmp
pop
and
mov
fisttpll
jb
test
sbb
and
psrld
int3
pushf
ret
loope
jmp
pop
adc
popf
ret
int3
dec
cmp
pop
dec
loopne
dec
leave
sub
and
xor
jmp
push
insb
xchg
dec
dec
mov
xchg
or
mov
xchg
shl
dec
ficoml
mov
arpl
adc
and
outsb
push
adc
mov
cmp
iret
pop
cmpsl
xchg
and
sbb
xor
jecxz
clc
push
popf
je
inc
out
sti
jb
stc
inc
add
in
jb
push
jecxz
and
ss
aas
into
stc
aas
bound
jmp
mov
jne
dec
inc
adc
adc
shll
addb
mov
adc
or
xor
push
mov
stc
fimull
pop
mov
fiadds
les
jl
jae
adc
or
xchg
negb
mov
inc
std
in
mov
int3
enter
jb
lcall
rcrl
cld
jecxz
dec
xchg
xchg
mov
test
sub
ret
sbb
ss
in
insb
out
mov
mov
cmp
scas
jl
mov
push
push
xor
cmpsl
add
or
jno
test
js
sbb
mov
and
and
pop
out
nop
or
push
std
pusha
cmc
into
es
or
pop
cmc
lcall
scas
jne
add
ror
out
pushf
fwait
sub
inc
pop
out
dec
push
cwtl
pop
test
mov
ret
mov
mov
xor
and
adc
daa
push
mov
fs
xchg
test
outsl
xlat
sbb
and
dec
fsubrl
movl
jecxz
bnd
push
fcmovnbe
xor
push
popl
in
xchg
jbe
fildll
adc
lret
jae
stos
xor
ss
cli
push
imulb
aad
data16
mov
and
out
divb
outsl
daa
jmp
xchg
dec
ficoml
out
std
popa
add
and
out
sbb
jnp
push
mov
loopne
xchg
sahf
push
enter
dec
insl
fiaddl
add
xchg
addr16
loopne
call
adc
mov
jle
lock
jo
and
inc
gs
call
inc
fwait
xlat
pushf
lods
rcrb
lcall
push
fbld
push
in
or
repz
sub
into
sbb
popf
push
lods
ljmp
jae
or
out
les
cmp
shrl
in
jb
sbb
in
sub
mov
shrb
xor
and
repnz
and
fs
js
mov
pop
mov
pushf
push
mov
testl
ljmp
pop
out
xor
jo
adc
inc
stc
sub
cmp
sbb
cli
scas
xchg
push
hlt
jb
aad
sbb
fnsave
sub
and
test
mov
rcrb
push
es
lea
push
xchg
hlt
sbb
pop
arpl
xchg
sub
hlt
dec
xchg
js
ret
jmp
inc
push
jmp
out
jns
add
pusha
idivl
sbbl
push
jmp
pushf
sbb
sbb
cld
inc
test
add
push
loopne
xchg
test
aaa
std
adc
in
and
mov
push
ret
fidivl
loope
pop
aaa
les
inc
fsubrs
int3
lret
add
stos
sub
into
inc
inc
inc
xor
pop
xchg
inc
fsub
mov
cwtl
insl
xchg
fistl
imul
mov
pop
pop
and
sbb
adc
push
stos
push
and
mov
add
lea
aas
aas
cmp
int3
rclb
mov
dec
ret
push
mov
ret
ret
stc
sbb
cmp
add
in
int
sub
adc
jno
fcmovb
cmc
lods
inc
in
dec
xchg
push
push
lahf
testb
jmp
stc
add
sbb
dec
loop
aam
lods
jns
decb
push
cmpl
adc
icebp
pop
fidivrs
inc
cmc
mov
fldt
cmpsl
int
mov
punpckldq
jmp
imul
je
shl
scas
jne
or
notb
cli
mov
fldl
xchg
fwait
clc
mov
clc
fs
decl
mov
xchg
dec
pop
sbb
mov
jmp
ret
outsl
sub
pop
shlb
xchg
mov
inc
nop
lods
into
push
adc
sbbb
jp
push
dec
fs
pop
imul
shrl
ffreep
jge
mov
pop
push
jne
jbe
sub
dec
mov
fwait
jns
dec
xlat
pop
int
addl
lret
xchg
mov
inc
pusha
sahf
xchg
cmc
mov
mov
fsubs
xor
xlat
imul
add
mov
outsb
and
dec
xchg
push
cs
cs
adc
sahf
lcall
loop
ret
mov
ficoms
cmp
jbe
cmp
cmp
std
pop
iret
push
cld
pop
jae
out
mov
dec
inc
adc
clc
sbb
xor
or
aaa
cmpsb
gs
mov
sbb
and
jl
es
mov
outsb
jp
push
mov
push
cs
sub
adc
in
push
jo
xor
std
jno
cmp
imul
in
repnz
aad
mov
rcrl
or
mov
les
and
xor
dec
outsl
push
insb
adc
adcl
outsl
fldcw
inc
cmp
ret
mov
ret
outsb
mov
jne
movsb
inc
sbb
jo
aaa
push
lahf
xor
cmp
lret
fldl
xchg
pusha
ss
stos
jae
jb
test
stos
jns
arpl
test
adc
imul
jge
mov
mov
loope
dec
sti
sti
and
repz
adc
push
in
cwtl
sub
outsb
pop
mov
ss
lahf
popa
ss
dec
loopne
cmpsb
mov
xlat
jnp
xor
shl
mov
xchg
enter
mov
cmp
inc
cmp
gs
pushf
push
sub
xchg
jne
jp
cmc
ret
mov
jo
aad
fdivl
repnz
xchg
jecxz
dec
mov
xchg
idivb
sbb
cmpsb
pop
inc
notb
xchg
xchg
pop
insl
nop
adc
xor
add
or
and
mov
push
push
push
idivb
jle
mov
inc
push
lods
xor
mov
call
adc
cmp
out
mov
mov
xchg
loope
arpl
shll
dec
jb
and
mov
test
sub
pop
filds
push
lock
js
in
pop
sub
lds
pop
push
repnz
jge
pop
jno
cmc
jbe
mov
xchg
jge
add
inc
add
iret
and
stos
dec
das
and
or
fsub
jg
push
dec
leave
jno
xchg
adc
mov
cmp
inc
and
dec
rcrl
jo
and
mov
pop
dec
and
stos
pop
mov
jle
push
jle
xor
notb
sbb
sbb
enter
sarb
dec
add
repnz
pop
push
xchg
xor
inc
inc
pop
leave
cmp
xchg
cmpsl
xlat
cmp
js
out
enter
and
xorb
xor
sbb
pop
scas
adc
push
push
movsl
cmp
mov
jnp
insb
jl
inc
mov
pop
leavew
and
hlt
fstl
cld
mov
repnz
fs
or
mov
jae
xor
xchg
cmp
dec
mull
cld
mov
aaa
loop
pop
dec
jle
and
or
lods
lret
in
inc
mov
xchg
inc
repz
cmc
sub
jb
cmp
add
jecxz
sahf
loopne
and
ljmp
jle
xchg
sbbl
xor
repz
outsb
les
int3
sahf
xor
mov
sarl
xchg
cs
cmc
push
std
mov
pop
test
or
jb
adc
ds
mov
ss
lds
mov
sbb
lea
push
lock
or
jns
clc
mov
jge
jge
push
cmpsb
dec
push
xchg
cmp
cmpsl
mov
leave
enter
jns
ss
std
jnp
hlt
xor
xchg
jae
or
out
imul
arpl
in
push
out
add
pop
rcl
mov
rorb
xor
push
push
dec
aam
mov
push
sub
mov
push
aas
jp
ret
stos
mov
es
xchg
fs
jno
xchg
repnz
imul
dec
out
xchg
mov
inc
dec
clc
push
or
outsl
pop
add
decb
or
cli
dec
push
jae
sub
in
sarl
dec
out
push
inc
mov
jg
cli
dec
pop
hlt
inc
xchg
les
fstp
jns
cmp
clc
out
out
mov
xlat
push
jmp
ds
into
dec
pushf
repz
inc
in
inc
add
sbb
mov
cmp
sub
fsubrl
out
scas
mov
loopne
imul
fsub
and
lahf
fistpl
lea
test
lods
in
xlat
cmp
sbb
adc
push
js
jmp
mov
call
mov
in
popf
cmp
fwait
xor
mov
cli
fs
rcrl
or
repz
sbb
adc
int3
add
sbb
testb
add
test
jno
push
gs
ret
scas
add
xchg
int
test
ficompl
lock
dec
ret
fildl
stc
pop
sahf
clc
sbbl
cmp
cwtl
loop
inc
mov
xchg
jle
pop
repz
lret
mov
inc
stos
imul
jg
sahf
repnz
aam
leave
std
jb
push
dec
iret
aam
jne
xlat
mov
mov
xor
adcb
adc
leave
shlb
push
out
or
enter
dec
pop
je
roll
test
std
sub
jbe
enter
rorb
fwait
adcb
clc
shll
xor
push
lea
sub
stc
mov
pop
push
jnp
bound
pop
dec
xor
xchg
fwait
cmp
lahf
movsl
enter
lds
push
enter
mov
xchg
test
inc
pop
sti
adc
mov
lds
stc
mov
int3
dec
sbb
es
xchg
dec
push
outsl
sbb
lret
pop
adc
inc
fstpl
push
pop
imul
adc
xchg
cmpsl
sbb
inc
xchg
mov
inc
mov
add
shlb
xor
stos
outsb
ja
pushf
xor
arpl
xlat
or
data16
js
lret
mov
xor
test
sub
bound
cmp
loopne
mov
arpl
cmp
mov
or
dec
lods
jmp
add
scas
js
mov
jle
ss
repnz
adc
addr16
roll
inc
insl
cmp
sti
movsb
mov
lahf
fisubl
out
adc
jbe
cs
lea
xchg
sahf
sub
push
mov
mov
mov
mov
fiaddl
faddl
xchg
mov
mov
mov
scas
int3
pop
call
sbb
mov
xor
dec
jecxz
mov
xchg
inc
push
sti
out
add
repnz
add
sub
test
or
mov
cmp
pop
ficomps
fimull
fdiv
adc
adc
insb
imulb
icebp
sub
dec
pop
rcrb
leave
or
cmp
pop
xor
int
lret
adc
cmp
dec
aaa
outsl
push
and
cmp
insl
loop
sbb
inc
adc
jmp
mov
inc
xchg
mov
push
aaa
xor
les
sub
rcrb
push
and
xchg
jg
sbb
dec
sub
xchg
mov
std
mov
xchg
mov
scas
or
mov
hlt
cmp
xchg
xor
shrb
in
movl
mov
gs
mov
cmpsb
inc
sub
jge
dec
and
push
aam
mov
jbe
mov
mov
insb
iret
push
fwait
push
mov
in
push
cmp
aam
xchg
and
sbb
jle
adc
test
les
inc
xor
sarl
rclb
in
insl
push
and
jne
adc
bound
sbb
or
stos
lret
mov
orl
test
adc
jmp
or
sub
fst
push
mov
jp
xchg
jge
test
push
or
pop
adcl
xor
xchg
clc
pop
dec
adc
rcl
out
push
cmc
adc
xchg
test
push
in
adc
hlt
add
fsubrs
in
mov
int3
fstl
into
and
cmp
test
xor
rorl
fstpt
insl
fnstcw
stos
les
hlt
dec
in
xchg
xor
lods
or
loopne
xor
mov
push
jle
and
in
cmc
daa
ss
icebp
scas
push
imul
adc
xor
inc
fcomi
jl
cmpb
pop
add
mov
hlt
pop
call
jmp
and
ja
call
in
cmp
sarb
sbb
outsl
ljmp
in
andl
push
cmpb
dec
scas
cmp
sub
loop
rorb
mov
adc
adc
fiadds
stc
mov
pop
or
xchg
inc
das
test
insl
pop
ljmp
push
sub
jge
pop
rcl
and
mov
lahf
jno
ss
mov
repnz
andl
mov
sub
push
cs
push
std
add
adc
test
fbstp
push
ss
cmp
mov
pop
out
aad
into
sub
lret
lock
test
or
push
and
fcomi
pop
or
pop
stc
add
or
jg
cmp
pop
ljmp
push
out
aad
test
push
pop
popa
dec
and
jb
cmp
movsb
push
mov
cltd
subl
push
mov
push
outsl
push
xor
lock
ds
ljmp
fs
into
jmp
subl
pop
std
dec
sbb
cmp
cs
insb
mov
out
jl
push
cmp
mov
mov
sub
dec
jl
pop
xchg
sbb
out
dec
movnti
out
test
jae
xor
out
rorl
or
nop
cmp
adc
iret
xor
push
addr16
inc
shl
outsb
jmp
in
rcrb
adc
dec
xlat
mov
mov
in
sbb
mov
jb
jae
icebp
insl
movsb
sub
fiadds
sub
out
test
outsb
nop
mov
cmp
mov
sbb
inc
or
or
xchg
xchg
cmpsl
mov
stc
ret
nop
lcall
dec
call
dec
leave
dec
cli
ss
int3
push
cmp
pop
push
in
mov
mov
xchg
aaa
repz
call
sub
jl
xlat
sub
std
hlt
inc
lock
mov
xchg
lock
cmp
cli
and
pop
enter
xlat
scas
fisttps
in
loopne
jge
mov
inc
sahf
into
icebp
mov
rorb
lahf
dec
jecxz
and
test
mov
dec
pop
cli
dec
dec
dec
inc
addr16
push
dec
mov
inc
pop
and
jge
push
jl
lahf
roll
fstps
pop
ljmp
icebp
jl
test
gs
cli
cmp
sbb
loop
aaa
cmp
inc
push
pop
mov
sub
jae
cmp
jo
inc
and
mov
das
inc
outsl
mov
cltd
add
add
repz
xchg
cmc
adc
popa
push
lods
mov
test
sahf
imul
cli
test
insl
popa
add
loop
test
and
imul
lcall
cs
out
push
and
mov
mov
xor
dec
inc
clc
out
stos
and
xor
cltd
dec
cmp
or
jo
loop
inc
push
loope
popa
or
dec
push
imul
cltd
out
mov
stos
or
or
iret
xlat
fprem
pop
mov
icebp
call
scas
sub
adc
jns
fs
rcrl
dec
pop
nop
arpl
imul
psrlq
jle
jmp
jecxz
rorl
sbb
mov
inc
add
in
rclb
leave
in
test
pop
loop
ljmp
push
sbb
movsl
addr16
sub
mov
sbb
push
lods
dec
jbe
pushw
mov
out
mov
push
dec
loop
push
or
pop
sbb
cltd
nop
push
sbb
add
mov
fdivrl
mov
das
es
dec
inc
xchg
hlt
cwtl
push
fisttps
cmp
lock
ja
xchg
xchg
or
frstor
push
add
push
ss
stc
sub
xor
fnstsw
lds
pop
lret
sbb
shrb
iret
or
push
lods
insb
popf
dec
push
push
mov
adc
mov
dec
dec
xchg
rcl
insl
mov
daa
and
loopne
sbb
mov
xorb
sbb
outsl
adc
pop
test
push
xchg
and
out
sbb
inc
cmp
test
fidivrs
dec
icebp
mov
pop
fcomps
lret
loope
call
sti
pop
cmc
popf
fwait
inc
xchg
cmp
aad
leave
adc
adc
xchg
xchg
xor
test
cwtl
insl
fmuls
or
test
fiadds
cmp
shr
mov
inc
pop
aad
xchg
xor
xchg
pop
inc
pop
push
and
sbb
cmpsb
ds
or
mov
sbb
push
inc
and
and
ret
test
shlb
push
jae
aas
push
nop
push
scas
mov
pusha
mov
cli
push
dec
push
dec
jbe
repnz
arpl
cmp
jg
insb
inc
push
repnz
push
add
test
adcb
inc
shrb
jno
sbb
in
push
dec
pop
push
mov
pop
insl
mov
mov
add
jecxz
push
jge
xor
decl
sub
sub
hlt
mov
movsb
fdivrp
mov
jp
dec
fisubrl
mov
and
loop
dec
fldl
into
jge
int
in
popa
icebp
lods
xchg
mov
out
arpl
mov
jle
jle
icebp
test
adc
popf
jae
push
fwait
je
dec
into
add
pop
inc
mov
testb
xlat
aas
jle
js
mov
in
pop
adc
sub
or
dec
into
insb
subb
jno
sub
lods
gs
lahf
icebp
mov
shl
jns
seto
mov
lret
pop
movsl
repnz
inc
mov
push
shll
dec
fwait
lods
loope
xor
jle
xor
jnp
inc
mov
push
and
adc
arpl
mov
jb
push
roll
aam
push
xchg
pop
mov
cltd
xchg
sar
add
cltd
roll
test
dec
js
nop
sbb
sub
mov
popa
pop
or
pop
in
pop
bound
sbb
push
xchg
sub
push
xchg
inc
dec
pop
cs
push
and
notl
fs
in
cmp
pop
sbb
xchg
mov
ret
fidivs
inc
or
lods
jno
pop
lods
mov
xor
ljmp
les
sbb
jae
fwait
ds
mov
xchg
outsl
and
repz
pop
stc
gs
jno
jbe
icebp
inc
push
loop
rol
popf
add
and
clc
pop
mov
into
stos
mov
insb
stos
mov
out
push
xchg
add
lock
icebp
cltd
push
adc
push
jmp
ds
repnz
push
mov
stos
scas
push
or
push
in
adcb
mov
cmpsl
out
cmp
cmp
loope
fs
dec
shrb
cmc
xor
inc
push
adc
or
inc
loope
lods
jecxz
pop
dec
lea
inc
sbb
cmp
inc
ficompl
insb
or
mov
dec
fimuls
pop
cltd
adc
and
rorb
es
lea
imul
mov
test
sbb
rcrb
test
xchg
mov
addr16
xchg
mov
push
jp
mov
arpl
xor
dec
xchg
mov
fcom
lea
cwtl
lods
jmp
mov
mov
mov
mov
pop
mov
push
fs
jge
or
and
js
daa
ret
pop
es
sarl
mov
jo
sub
push
rorb
sti
insb
push
subb
sbbl
xchg
jl
stc
xchg
orb
bound
ljmp
insl
xor
aam
rcl
jmp
cltd
sti
and
sbb
mov
sbb
stos
jb
jle
das
xor
adc
add
jne
movsb
jge
sub
cli
seta
or
enter
mov
xchg
adc
les
lret
jmp
addb
cmp
xchg
popf
xchg
into
mov
popf
clc
data16
add
xchg
xchg
inc
or
sub
inc
adc
bound
pop
addr16
cs
sbb
xlat
cltd
les
outsb
scas
mov
iret
outsl
push
xlat
decl
mov
adcl
popf
scas
cmpsl
jg
in
ret
pop
mov
jo
lcall
les
add
js
ficomps
bound
ret
mov
mov
jnp
xor
pop
in
ja
scas
dec
test
mov
adc
xchg
cmpsb
dec
xchg
mov
and
daa
daa
xlat
cs
and
clc
popa
fwait
imulb
cmp
push
fdiv
and
mov
pop
out
movsb
repnz
cmpsl
rcrl
mov
jnp
sbb
test
pop
xor
sub
and
ficoms
int
pop
out
push
mov
sub
shl
das
push
mov
adc
daa
xchg
pop
xlat
and
dec
sar
mov
out
int3
sbb
fadds
into
mov
and
or
or
fisubs
int
dec
cmp
int
push
add
push
sub
dec
popf
aaa
scas
cld
mov
inc
mov
adc
mov
int3
insb
sub
enter
mov
xchg
and
stos
bound
dec
mov
cmp
mov
xor
mov
imul
sahf
stos
mov
adc
mov
or
jb
lahf
push
imul
ljmp
and
das
fldl
flds
mov
pmaxsw
xor
iret
insb
jae
dec
ljmp
jle
or
pop
out
dec
mov
in
fsts
sbb
outsb
xor
sub
call
ds
sbbb
fbld
jne
hlt
pop
jg
push
imul
inc
fsubrs
inc
dec
xlat
imul
inc
xchg
out
pushf
and
jle
mov
lods
fsubs
sbb
or
mov
cmp
dec
scas
jnp
or
pop
fimull
sbb
or
jbe
pop
sbb
sbb
rcrl
jg
into
adc
fnsave
xor
shlb
push
add
mov
mov
andl
add
dec
ss
cwtl
and
insl
add
pushf
mov
sbbb
into
lea
daa
cmp
dec
aam
xlat
inc
mov
ds
imul
xor
cmp
jae
lods
cmc
lret
push
mov
movsl
outsb
cmc
and
xchg
cmpsl
adc
push
loop
movsl
out
cmp
mov
mov
fs
out
inc
mov
xchg
cltd
sahf
xchg
push
mov
clc
push
ljmp
cmp
adc
cmp
xlat
mov
stos
lret
ss
add
xor
mov
cmp
aad
sbb
mov
mov
xchg
xchg
cs
mov
mov
cs
mov
xor
push
imul
js
or
test
push
adcl
xchg
fucomp
pop
inc
sub
lret
and
pop
sbb
es
sub
push
jp
jnp
fcomps
mov
lcall
das
xchg
mov
adc
data16
and
jbe
popf
mov
call
adc
mov
sub
mov
push
push
ja
jecxz
sub
mov
mov
mov
fwait
or
push
sbb
mov
imul
scas
int3
dec
sub
xor
mov
ljmp
sub
inc
lock
das
inc
inc
mov
imul
adc
pop
shl
out
aam
pop
or
shrl
or
push
scas
push
sbbl
in
pop
or
jmp
lock
lods
fidivs
cmc
mov
popa
xor
mov
pop
and
adc
add
cld
loop
jecxz
pop
mov
hlt
jge
mov
dec
jg
sbb
inc
dec
mov
xor
stos
xchg
add
cli
cmpsl
sbb
sub
mov
pop
sub
add
out
add
cmp
loope
push
push
or
mov
insb
sub
cmpsl
xor
mov
ja
jl
mov
std
cmp
adc
nop
xorb
mov
jbe
jecxz
push
sub
repz
lds
add
adc
push
in
je
xchg
arpl
imul
loop
movsb
xor
mov
jge
jmp
out
cs
movsl
push
mov
scas
aam
adc
or
sti
adc
inc
ja
and
daa
aaa
dec
mov
mov
lahf
sbb
xor
jp
into
mov
into
fidivl
sarl
fsubrl
add
shrb
cmp
mov
into
sbb
mov
imul
sbb
loop
xor
inc
mov
pop
mov
jmp
inc
daa
inc
stc
inc
and
jae
xchg
ret
mov
push
jecxz
roll
into
movsb
lods
cmpsl
in
mov
dec
jno
mov
mov
xchg
ds
fcmove
shll
dec
jmp
push
and
xor
add
inc
xor
bound
push
jb
aas
fiadds
cld
hlt
out
filds
cmp
adc
lds
mov
std
xlat
fcoml
loope
mov
inc
leave
stos
or
or
mov
stos
enter
dec
adc
xchg
mov
lods
fbstp
orb
out
xchg
xchg
aam
xor
popf
jle
sbb
icebp
adc
mov
push
loopne
mov
mov
cmp
js
adcb
subb
es
mov
imul
mov
jns
or
adc
mov
lret
or
xor
rcll
mov
and
push
cli
ljmp
arpl
outsb
test
addl
xor
jmp
mov
mov
dec
lret
xchg
add
in
xor
and
add
lret
daa
pop
push
pop
or
dec
add
fsqrt
das
scas
cs
push
adc
jge
cmp
or
and
in
dec
jecxz,pn
dec
add
jnp
xor
push
cmc
rcl
lods
push
dec
xor
jmp
mov
jp
leave
sbb
mov
das
xchg
mov
js
push
pusha
xchg
repnz
mov
sub
leave
sbb
rcll
test
leave
sbb
cltd
jmp
arpl
fs
mov
repz
insl
pop
fstpt
adc
adc
sbb
pop
stos
mov
push
jbe
cli
xsavec
lcall
notl
outsl
rorl
xlat
cmp
cmp
addl
imul
leave
mov
fildl
jb
repnz
ds
aaa
mov
pop
movsl
outsl
je
inc
pop
fidivrl
push
sub
mov
push
lods
and
pop
xor
adc
nop
insl
rorl
icebp
cmp
cmc
cld
nop
mul
aad
sbb
lea
jb
push
faddl
jbe
sbb
ss
push
xor
out
out
clc
adc
fiadds
outsl
pusha
add
cmp
cmpsl
add
and
push
jns
mov
repz
and
adc
loope
mov
dec
gs
popf
loop
js
clc
xchg
and
push
daa
in
mov
stc
jp
mov
push
inc
stos
pxor
xor
rcrb
cltd
imul
mov
sub
rolb
push
xchg
xchg
cli
lcall
fwait
or
jl
popa
sub
jne
sub
dec
mov
jl
jb
aas
cmpsb
nop
pusha
mov
fistl
pop
mov
ss
mov
dec
cs
jg
jno,pn
sub
ljmp
mov
push
ja
es
movsb
movsl
inc
inc
mov
les
pop
or
mov
aas
xor
dec
lcall
in
dec
mov
call
pop
jno
test
mov
inc
stos
imul
dec
add
aad
inc
cmpsb
aas
lahf
push
mov
sub
push
cmpsl
popa
mov
imulb
or
push
fs
mov
in
push
dec
popf
shll
pop
inc
call
pop
push
enter
into
and
adc
mov
dec
dec
push
add
dec
imul
push
jp
adc
mov
mov
cli
fsubrs
mov
inc
out
mov
push
insb
and
dec
xor
popa
fldt
mov
mov
pop
addr16
dec
pop
mov
cmpsl
outsb
inc
fprem1
hlt
fs
xor
nop
mov
ds
inc
ss
in
test
and
dec
jns
fwait
stc
add
arpl
mov
sub
aaa
and
inc
pop
xchg
push
movsb
xlat
test
data16
xchg
xchg
sub
pop
ret
insb
jecxz
pop
jge
mov
nop
cltd
jno
dec
les
jmp
rorb
cli
fisubl
loopne
cld
sti
jecxz
push
daa
jns
lret
or
pop
cmpsb
stos
or
sahf
pop
push
pop
adc
insb
sbb
ja
rclb
pop
loop
lods
nop
jl
add
out
push
xchg
loop
xor
and
ja
aad
xor
aaa
loope
sahf
add
inc
push
dec
testb
dec
cmp
push
inc
sub
fidivl
scas
jno
and
loop
pop
pop
cli
xchg
in
repnz
pop
mov
xchg
or
decb
jg
in
in
adc
xchg
movsl
xchg
addb
bound
lahf
push
call
xor
inc
xchg
sahf
jecxz
test
push
out
or
xor
stc
xor
aas
xor
stos
or
ret
out
dec
lahf
rclb
dec
dec
mov
insl
dec
mov
and
cwtl
xchg
jmp
mov
subl
dec
outsb
enter
mov
sbb
inc
adc
pop
mov
xor
cs
loope
add
jmp
fidivrl
push
orl
or
xor
mov
pop
sub
in
push
lahf
nop
inc
sbb
mov
mov
jp
loopne
dec
mov
pop
sti
test
or
cmp
nop
mov
xor
out
jle
jmp
add
js
lcall
popa
stos
clc
ror
hlt
jbe
sub
and
ret
adc
fnstcw
stos
mov
mov
int
and
int
test
inc
xchg
sbb
push
hlt
fistl
enter
push
jmp
rorb
cmpsb
push
fcompl
pop
xor
xchg
pop
loopne
out
test
popl
jns
or
fs
pop
mov
cmp
cmp
lahf
mov
int
popf
scas
mov
loopne
dec
adc
lret
enter
push
xchg
insl
shl
cli
pop
mov
dec
cmp
imul
loope
rorl
sub
pop
fsubrp
add
mov
mov
push
aad
test
add
fsub
lret
xorb
add
jmp
lahf
fstp
cmp
jae
das
int
adc
mov
add
push
std
ja
cmc
mov
jne
jmp
scas
fisubrs
ljmp
or
les
mov
adc
aad
aam
sbb
std
test
lods
jmp
stos
pusha
and
xor
iret
mov
out
test
lret
and
pop
mov
jecxz
bound
lods
or
into
cli
popa
fcomip
scas
jb
out
and
dec
and
pop
addl
pop
jge
add
sub
xchg
scas
sbb
jge
push
repnz
sbb
push
and
inc
hlt
sbb
stos
cmp
xor
ror
int
jno
pop
fstl
cwtl
inc
xchg
xchg
add
in
xchg
aad
repnz
push
or
jle
nop
out
sbb
xor
fxch
pop
xchg
pop
jb,pn
and
push
jmp
std
repz
dec
adc
icebp
aas
ds
repz
mov
aad
test
and
pop
paddsw
fstpl
mov
xor
jmp
push
dec
dec
cmc
test
jo
out
xor
dec
mov
cmp
jmp
test
xchg
cmp
fistpl
rcl
sub
jns
cmp
scas
ss
ljmp
cli
hlt
sbb
push
mov
push
pop
pop
sbb
daa
mov
enter
ds
mov
out
mov
mov
loopne
mov
in
dec
cs
clc
call
mov
inc
rorl
mov
xchg
jbe
into
dec
test
add
aas
adc
lret
inc
sub
rcll
dec
inc
adc
or
jle
xlat
xchg
mov
push
rorl
in
pop
jmp
xor
aas
fwait
popf
lahf
mov
jbe
xlat
outsl
jbe
int
iret
push
jb
cmpsb
mov
xchg
shll
aaa
bswap
aas
hlt
fldt
lods
mov
cmp
fisubs
in
xchg
mov
ds
leave
sti
or
push
mov
dec
sbb
push
in
in
insl
lea
jbe
push
les
out
dec
fwait
shrb
mov
stc
mov
rorl
lret
push
testb
gs
adc
movsb
adc
int
jmp
cltd
or
xchg
add
stc
sbb
into
lret
xchg
ja
cltd
cwtl
pop
xor
xchg
fptan
stc
aaa
mov
and
sbb
pop
adc
mov
popf
adc
aad
jns
cmp
fdivrl
dec
mov
mov
adc
jl
fwait
xor
movd
mov
push
ret
mov
cs
in
addr16
xor
dec
imul
inc
into
or
das
push
cmp
sub
mov
inc
test
fldt
test
enter
fwait
pop
jno
dec
push
fdivrs
ds
stos
imul
int3
ffree
test
mull
push
loope
sti
ja
or
shlb
mov
leave
les
jne
movsl
ret
sub
imul
shlb
lahf
pop
lock
sub
pop
test
scas
out
in
cld
mov
outsb
fdivrs
scas
or
pop
sub
hlt
in
data16
jl
rol
push
in
xchg
sub
mov
lcall
xchg
and
and
lods
xlat
jl
nop
pop
nop
xor
mov
xor
sub
cmp
jge
test
cmc
and
mov
sbb
inc
push
adc
repnz
repz
arpl
in
lea
fwait
cld
mov
lods
imulb
mov
call
fiadds
pop
mov
mov
pop
in
movsl
push
cmp
stos
push
je
call
dec
dec
xchg
sub
mul
jg
sbb
sbb
in
and
out
popa
test
gs
popa
jmp
out
sub
scas
test
mov
dec
mov
das
aam
mov
xor
sbb
inc
xchg
movsl
and
or
mov
shrl
or
push
cmp
push
sti
js
adc
mov
mov
loopne
jecxz
xchg
popa
pop
inc
pop
cli
clc
cli
add
daa
push
jno
repz
sti
jbe
xchg
push
fldl
ljmp
cmp
pushl
inc
ret
movsb
inc
or
inc
fs
lahf
sub
xor
xchg
call
push
mov
mov
mov
xor
clc
enter
inc
lret
aam
mov
xchg
pop
cmc
sbb
lret
and
mov
loop
addr16
cmp
jno
aad
shr
pop
mov
bound
hlt
lret
sbb
mov
addr16
xor
shlb
mov
ficoms
mov
faddl
ja
jbe
jl
xor
test
dec
aaa
mov
sub
aas
iret
mov
and
mov
out
mov
push
iret
lods
je
ret
fcomi
movsb
push
roll
mov
dec
icebp
sbb
popa
lock
lock
push
imul
push
sbb
ror
nop
insl
xchg
push
insb
sti
subb
imul
pop
jmp
mov
repz
add
out
imull
push
xor
daa
les
outsb
xchg
imul
lds
dec
gs
cmp
add
jb
jp
bound
cmp
jmp
call
jne
test
data16
cmpsl
mov
call
out
mov
mov
cmp
dec
cmpsl
outsl
fnstcw
xchg
iret
out
push
mov
inc
iret
fs
or
sbb
imul
in
mov
leave
gs
repz
mov
fildl
movsl
mov
addr16
ret
cli
dec
outsb
iret
sub
divl
js
stos
mov
pop
dec
xor
imul
jns
pop
sub
mov
ret
sarb
movsb
cmp
xchg
jns
mov
lret
cmp
je
int3
out
push
popa
fcoms
dec
cmp
push
cwtl
aas
inc
test
mov
push
dec
dec
cmpb
stos
lods
pop
adc
lock
pop
aaa
leave
sbb
jo
jb
xchg
jns
fldl
xchg
xchg
out
xchg
lahf
sbb
xchg
mov
and
enter
xor
in
mov
jb
stos
lcall
scas
cwtl
cmp
push
xlat
mov
lds
xchg
mov
cmpl
aad
jp
xchg
jno
imul
mov
pop
sti
lods
cmp
aad
in
xchg
dec
aam
cltd
jne
cmp
sbb
cmp
mov
sub
testl
mov
ficompl
pop
fstpl
icebp
insl
adc
add
mov
jbe
sub
pop
cmp
jb
aam
aaa
scas
pop
mov
stc
hlt
sbb
and
into
mov
push
or
push
jge
jl
or
mov
test
xchg
pop
adcb
adc
sub
xchg
cmp
inc
repnz
ret
call
test
popa
negl
jecxz
dec
xchg
mov
inc
cmp
imul
fcompl
cmp
lds
cld
faddl
loopne
xchg
push
lods
das
xchg
bound
push
jle
adc
nop
stos
or
jmp
pop
insl
mul
jmp
cli
outsl
pop
dec
lcall
call
or
jo
ss
divb
push
sbb
iret
jle
push
mov
inc
addb
mov
xor
jle
jbe
ds
xchg
inc
out
inc
or
inc
stos
fscale
xorl
cmp
push
jb
lods
push
rclb
inc
mov
and
add
xchg
mov
jo
xor
test
dec
jbe
pusha
push
and
xchg
lahf
fs
mov
push
lcall
xor
ret
faddl
and
add
jne
in
mov
jo
jns
add
lods
push
pop
mov
sub
fnstsw
aaa
pop
push
and
inc
push
shr
movsb
out
mov
cmp
cmpsb
and
lcall
popa
cmp
and
or
fcmovne
mov
jmp
out
pop
adc
sahf
stos
xchg
fsubl
test
jo
in
xchg
cmc
mov
lret
dec
sbb
pop
adc
xor
fidivrs
lahf
sbb
filds
ds
push
mov
or
and
icebp
mov
int
xor
lcall
and
mov
shl
and
xchg
push
es
aam
aam
jp
in
dec
mov
sub
rclb
adcl
int
shll
pop
fstpt
mov
jbe
out
bound
ds
add
mov
lock
mov
paddsw
dec
add
mov
or
negl
clc
push
daa
adc
js
sub
or
stc
icebp
andb
int
dec
mov
insb
cltd
push
dec
cld
adc
jnp
fdivr
sub
sbb
fcoms
popa
and
fldl
jne
insl
mov
sahf
shll
je
imul
mov
mov
jns
or
jno
and
call
sbb
into
push
idiv
lock
incb
sub
int3
daa
mov
sarb
pop
inc
clc
out
test
imul
pop
mov
sbb
cmp
sbb
jne
pushf
sub
fxch
pop
or
jbe
fwait
insl
nop
aam
jecxz
out
mov
mov
fwait
xchg
xchg
inc
pop
sbb
sti
js
aas
and
cmpsb
int
insl
adc
ret
mov
inc
jl
imul
in
jns
sbb
push
pop
popf
iret
mov
test
xor
push
fldenv
mov
enter
mov
add
shll
lods
xor
ds
mov
xchg
sbb
loopne
aam
jbe
mov
push
push
pusha
sub
test
scas
inc
or
negl
ljmp
dec
js
iret
aas
movsl
iret
sahf
out
mov
outsl
jecxz
jl
jb
jle
movsb
aas
inc
jle
or
inc
or
push
ret
fdivrs
fisubrs
scas
pushf
jnp
popa
shll
in
loope
pushf
sub
lea
sbb
push
push
shlb
arpl
adc
mov
inc
addr16
xchg
addr16
xor
movsl
dec
pop
dec
lods
das
repnz
addr16
insl
cwtl
je
mov
mov
fstpt
xor
and
orl
aaa
sahf
xchg
mov
fcoms
mov
mov
fimull
fwait
pusha
imul
dec
out
push
or
add
xor
arpl
test
mov
jge
ja
mov
stc
mov
rorb
lea
xchg
push
jbe
rcrl
adc
xor
ficoms
dec
cmc
jl
roll
and
push
xchg
lea
fistps
shrb
mov
xchg
fwait
push
add
testb
fistpll
mov
jg
mov
repnz
cltd
cltd
int
push
sbb
mov
aad
inc
pop
divb
outsb
xchg
xchg
or
mov
dec
dec
outsl
inc
cwtl
inc
and
inc
notl
mov
test
jbe
pop
cmp
pop
cltd
loope
mov
jl
fbld
xor
push
jno
jg
ficoms
xchg
jmp
ficoms
mov
movsb
jmp
push
xor
mov
arpl
fwait
out
addl
xchg
stos
scas
fisubs
sbb
pop
mov
addl
cmp
or
push
roll
pop
fwait
mov
sbb
roll
filds
daa
xor
test
jb
lret
mov
hlt
lods
mov
pop
out
adcl
notb
add
in
data16
movsb
push
mov
add
aam
inc
icebp
scas
push
loopne
cmpsb
pop
xlat
jne
iret
cmp
stos
xorb
dec
pop
call
popf
push
fistpll
mov
push
sub
lret
jecxz
subb
jle
gs
pop
and
cmc
pop
xchg
aad
fiadds
hlt
ret
mov
add
mov
xchg
insl
int3
arpl
mov
xlat
das
lods
divb
aaa
fbstp
xchg
push
mov
rorb
mov
test
xchg
jmp
cmp
lea
dec
dec
adc
or
cs
mov
lods
mov
xchg
call
xchg
cmp
inc
dec
mov
ds
ret
jp
mov
das
mov
sub
inc
add
jb
loope
ss
push
push
pop
pop
shl
push
push
xchg
xchg
add
mov
jns
push
scas
loope
push
xor
jg
in
int
std
addb
push
in
out
add
push
jnp
pusha
ds
jmp
je
bound
adc
adc
nop
js
shll
out
lock
and
inc
fisttps
stc
xchg
nop
or
shr
out
adc
aaa
sbb
test
dec
mov
jp
or
fsincos
lret
insl
pusha
icebp
or
js
mov
pop
xor
fisttps
leave
mov
adc
push
inc
mov
xor
pop
into
sbb
fdiv
dec
pop
or
mov
adc
xchg
dec
js
insl
cld
jns
mov
push
loop
jb
pop
mov
sbbl
dec
inc
push
cmp
or
and
adc
pushf
pusha
mov
jle
inc
aaa
pop
cmp
xchg
cmp
mov
das
dec
cmp
lea
mov
insb
pop
fistpll
das
cmc
xchg
repnz
fwait
inc
je
fadds
jg
and
lea
pop
mov
pop
rcrl
cmpsb
divl
clc
int3
jle
out
stos
or
sub
pop
inc
cmp
cwtl
test
ror
dec
pop
imul
fmuls
mov
dec
and
lods
xor
inc
xor
push
in
call
loope
jp
js
scas
dec
push
push
sarb
add
mov
pop
pop
mov
sub
fldcw
mov
in
mov
jne
test
or
pop
jb
lahf
inc
repnz
mov
add
shrl
cli
stos
xor
movsb
fists
jno
xor
std
hlt
das
movsl
into
mov
fbld
fwait
out
ret
jge
stos
int
adc
nop
in
int
je
aad
outsb
pop
js
mov
fwait
sti
xlat
xor
mov
icebp
adc
mov
sub
into
add
rolb
and
jmp
xchg
mov
call
stos
aam
mov
les
sbb
sbb
repnz
add
mov
pop
and
mov
jmp
jno
mov
sbb
dec
in
sbb
xchg
in
cmp
mov
sbb
in
adc
arpl
push
pop
popf
mov
xchg
call
bound
xor
push
pop
lock
aad
sbb
fscale
or
jle
jbe
push
aad
sarl
inc
push
lret
out
inc
inc
clc
ss
mov
cmp
sarb
xchg
mov
xor
cmpsl
mov
dec
adc
sbb
imul
sub
movsb
out
cmp
in
outsl
cli
ficompl
inc
gs
test
jb
mov
jmp
xor
dec
rcrb
mov
jns
jg
scas
mov
xchg
inc
mov
movsb
sub
and
fildl
ss
mov
add
leave
cmpsb
jp
arpl
std
push
enter
dec
data16
sbb
mov
movsl
scas
stc
push
sbb
js
sbb
mov
movsl
mov
add
pop
mov
mov
jns
or
sar
xorb
pushf
dec
cmp
aam
idivb
mov
daa
mov
inc
sahf
jnp
cmpsl
mov
xchg
xchg
inc
mov
clc
shl
mov
test
fistpll
aas
aaa
xor
adc
sbb
fsts
test
push
push
lret
mov
hlt
jmp
pop
rcll
test
push
cli
jo
scas
and
lahf
cwtl
or
dec
cmp
mov
ret
dec
ljmp
popf
mov
test
das
je
jns
cmp
mov
jmp
xchg
fwait
divps
xchg
lods
scas
out
cmpsl
stc
addr16
clc
mov
add
popl
sti
ret
xchg
push
cmp
jbe
testl
push
loop
daa
push
sub
and
jmp
add
fdivl
push
cmpsl
or
sbb
mov
orl
pop
imul
insl
push
outsb
jbe
xor
mov
ds
aad
clc
or
cmp
dec
mov
xchg
xorb
sub
test
shll
mov
pop
clc
cmpl
jl
insl
jge
xchg
aaa
inc
rcl
inc
push
xchg
xor
pop
pop
clc
sbb
push
xchg
fcoml
pop
dec
mov
out
or
dec
mov
pop
cs
mov
mov
jbe
mov
pop
lret
jne
mov
dec
ret
icebp
in
add
cmp
pop
orl
fcoms
pop
push
std
jb
ret
sti
fimull
dec
mov
js
cmp
cmp
push
sbb
das
sbb
scas
jl
or
js
inc
shlb
or
cmpsb
cli
sbbl
fldcw
pusha
movsl
loope
lret
sahf
add
add
popa
pop
test
xchg
lods
sub
mov
rcr
jl
shrb
xchg
mov
das
mov
fs
jmp
insl
xor
js
dec
push
mov
gs
mov
jb
into
jecxz
add
ljmp
je
arpl
pop
lea
test
nop
mov
cmp
mov
int3
dec
testl
sub
dec
push
imul
stos
int
int3
mov
inc
sahf
sbb
cwtl
cmpsb
sub
or
daa
mov
sbb
mov
jmp
jmp
mov
test
adcl
jecxz
and
movsl
xor
add
icebp
push
in
scas
or
add
sub
aaa
mov
jo
mov
stos
and
loope
fnsave
sub
push
dec
jbe
iret
std
jnp
xor
mov
adc
in
scas
xchg
mov
pop
pop
loope
sub
loopne
into
rcl
lea
cmp
xchg
aad
or
and
xchg
xor
in
lods
jmp
mov
sbb
pop
dec
fstl
pop
jle
xchg
dec
arpl
fstp
or
mov
xchg
jl
xchg
scas
jnp
pop
cmpsb
sub
jo
in
stc
adc
popa
lock
stc
push
fcmovne
testb
or
xchg
mov
outsb
aad
in
hlt
mov
shl
xor
lock
fwait
shll
jb
in
xchg
nop
pop
jmp
add
test
mov
jbe
stc
xchg
jbe
fadd
scas
push
mov
sub
fwait
aaa
data16
dec
ja
pop
xorb
ljmp
mov
les
push
pop
mov
test
mov
xorl
push
lret
sub
imul
imul
mov
adcb
addb
fists
xchg
enter
xchg
popw
insb
xor
push
fstps
ficoms
ss
ret
push
aam
fs
cmpsl
or
push
in
sahf
pop
scas
fcmovnbe
out
adc
clc
addr16
push
mov
xchg
test
jns
dec
inc
mov
push
loope
xlat
ret
mov
inc
test
xchg
movsl
out
and
jnp
jne
mov
aaa
ret
lret
test
xchg
and
cmp
arpl
out
mov
test
fnstsw
or
stc
cs
xchg
cli
test
jns
sbb
pop
dec
xchg
push
add
xor
push
lods
add
cwtl
push
and
out
adc
pop
fstps
pop
rcrb
je
lds
test
sub
xchg
pop
rcl
push
sti
sahf
outsb
add
iret
cmpsw
call
das
popf
in
pushf
xor
jmp
or
insb
cmpsl
mov
lcall
sub
sti
sbb
dec
aaa
pop
sbb
adc
add
adc
jg
adc
std
inc
out
shlb
mov
roll
ss
xchg
imul
imul
fidivrl
movb
xlat
add
ljmp
add
stos
sub
repz
es
adc
scas
and
sbb
or
jo
xor
jl
outsb
cmc
mov
enter
rep
imul
add
jg
movsl
shlb
bound
ss
jecxz
sub
jle
xorb
ljmp
sahf
and
ljmp
xorb
mov
jne
xor
pusha
insl
sbbl
andl
push
mov
lret
mov
push
daa
xchg
std
imul
xchg
cld
ja
jae
in
in
out
mov
cmp
test
mov
ljmp
and
mov
ja
sub
out
movsb
dec
xor
lods
push
push
inc
sub
in
cld
mov
xor
fwait
sub
sbb
les
fisubrl
iret
out
adc
xor
dec
jo
lods
cmc
xchg
sbb
fwait
inc
daa
fwait
and
cwtl
pusha
repz
cmpsb
inc
push
lcall
aaa
adc
outsl
addr16
int
test
imul
fistpll
pop
ror
pop
insl
outsb
mov
cmp
mov
aas
lds
std
cmpsb
dec
cwtl
sbb
aam
call
and
lret
lea
pop
jne
mov
aaa
insl
mov
fmull
jnp
div
pop
mov
test
adc
cmp
add
mov
lods
push
inc
loop
push
dec
mov
outsl
stos
shrl
fmuls
jne
stos
out
dec
lea
popf
outsb
jns
insb
xor
mov
fistpl
mov
and
popa
movsb
sbb
pop
gs
out
into
movsl
iret
push
sbb
cmc
mov
add
mov
pop
mov
adc
push
cmp
ret
into
cmpsb
pop
xacquire
xchg
push
pushl
movsl
imul
shrb
jg
dec
mov
addl
movsl
adc
push
testb
xor
pop
je
lret
fcoms
cmpb
incl
jno
or
aam
enter
ja
xchg
adc
sub
mov
fmull
popa
cmp
stc
xchg
fbld
sub
push
daa
lcall
loopne
fwait
jmp
test
xor
test
call
pop
add
sub
lea
repz
sub
xchg
and
xor
rcrl
jnp
pop
cmp
mov
js
and
inc
sub
test
xlat
xchg
dec
mov
out
enter
sub
in
call
xchg
mov
popl
mov
xor
movl
jo
cwtl
ds
pop
inc
xchg
cmp
inc
xchg
imul
jbe
ret
das
mov
mov
movsl
fistpll
ficoml
aaa
xorl
dec
adc
inc
stos
dec
inc
fistpll
test
xchg
push
mov
aas
ja
fwait
adc
addr16
xor
sub
push
fwait
mov
out
inc
in
rolb
dec
addr16
mov
fidivrl
and
dec
addl
rolb
int
fisttps
mov
mull
outsb
popf
cmc
sti
jb
cwtl
ds
in
cmp
daa
pop
fisubrl
add
stc
sti
mov
ss
cmpl
jnp
jb
out
std
adc
jmp
mov
adc
cmpsb
sub
jo
add
sub
outsl
jae
jecxz
cmpsl
pop
mov
mov
je
fisubrs
add
cmp
xor
dec
stos
sarl
fisubrl
push
or
mov
jmp
out
add
jle
in
mov
ss
loop
lret
dec
int3
arpl
mov
lcall
push
mov
cli
dec
test
lods
sti
pop
xor
and
in
pop
xchg
inc
jae
fiadds
stc
lods
repz
hlt
jne
fisttpl
sbb
push
in
sbb
mov
sar
inc
push
outsl
fistpll
pop
into
loopne
inc
jns
jb
mov
jns
movsb
cmc
imul
pop
push
subl
and
leave
jb
movsb
inc
sbb
ja
cmp
mov
xchg
test
or
jo
jo
fwait
lea
push
xor
jmp
jl
mov
lock
mov
mov
add
fwait
inc
aam
ret
cltd
ja
push
mov
loop
xchg
mov
and
sub
xchg
xor
adc
jno
lcall
loop
sub
sbb
push
out
sub
nop
mov
dec
adc
cs
andb
mov
cmpsb
inc
lcall
cmc
sbbl
inc
dec
ret
mov
cmp
dec
aas
xchg
pop
int3
ljmp
inc
sub
subl
fldl
add
cltd
xor
mov
loopne
test
inc
test
push
mov
jle
divl
mov
mov
mov
js
out
iret
data16
movsl
popf
arpl
adc
data16
dec
out
push
int
iret
or
pop
repz
mov
pshufw
adc
xor
enter
mov
repnz
jmp
rcll
sbb
mov
movsl
dec
push
sbb
inc
addb
mov
cltd
loopne
stc
add
adc
shll
cmp
cmc
aaa
lds
sub
sar
call
adc
mov
insb
rcrl
orb
dec
arpl
into
sbb
mov
push
dec
aaa
dec
das
pop
stos
cld
push
cmpsb
inc
stos
xchg
inc
ja
and
loop
cmpsb
adc
out
and
adc
cmp
bound
or
out
dec
movsb
xor
adc
les
mov
lcall
pop
mov
fs
mov
popa
lret
enter
adc
mov
xor
ljmp
lcall
int3
pop
dec
or
inc
jp
pop
stc
xchg
add
call
pop
dec
add
subl
dec
fwait
cmp
lahf
jge
repz
sbb
arpl
rolb
mov
pop
fstl
or
mov
sub
repnz
xor
xor
subl
push
outsb
and
sub
jns
mov
add
daa
pop
and
dec
adc
aam
pop
cld
lods
mov
or
pop
adc
int
shrl
push
lds
xchg
jno
popa
jmp
jns
cmc
lods
clc
out
pop
inc
pushf
mov
imul
test
lods
mov
jecxz
push
popa
add
fidivl
mov
sbb
icebp
adc
test
out
stc
dec
jnp
test
les
fimull
js
inc
mov
sbb
pop
push
scas
test
iret
dec
mov
arpl
dec
dec
push
cmpsl
mov
sub
imul
aaa
add
cltd
mov
xrstor
rcll
andl
mov
inc
repz
pushf
adc
pop
push
jnp
push
jmp
pop
shll
jmp
shl
jns
aam
cmpsl
iret
std
cmp
pusha
jl
mov
repz
and
xor
dec
push
add
out
push
add
mov
and
jg
shl
cld
pusha
or
adc
arpl
sub
ret
aam
mov
lods
cmp
add
dec
pop
push
xor
out
fcoms
xchg
cmp
imul
or
not
imul
or
add
ds
sbb
xorb
sbb
js
or
sub
mov
sub
pop
gs
repz
repnz
fsubrs
std
sbb
cmp
in
xor
cltd
lods
sub
inc
cwtl
push
test
add
xor
jge
data16
sahf
sahf
fstp
test
xchg
add
fisubl
mov
lods
mov
inc
sbb
push
mov
pop
mov
cld
push
repnz
es
adc
popa
or
nop
and
pushf
ja
lods
pop
push
cmpsb
jp
loope
mov
in
cmc
dec
push
mov
pop
xor
fnstsw
sub
mov
adcb
icebp
mov
jb
outsb
int
add
pop
push
lcall
xor
xor
lea
outsb
xchg
sub
stos
jbe
push
push
cmp
push
outsl
cld
rep
dec
jge
enter
cmp
lret
or
cli
je
lds
ficompl
es
popa
das
dec
out
ljmp
adc
mov
cmpsl
shr
sub
fbld
push
add
mov
ja
ljmp
repnz
fcomps
jno
jbe
ficompl
cmp
shl
fnstcw
cmp
mov
sbb
sbb
add
shll
ror
inc
mov
or
xchg
jne
shr
jecxz
stc
xlat
ds
and
pop
cmc
test
mov
fisubrs
inc
mov
jno
add
mov
or
add
inc
fucomip
cli
scas
pop
inc
ficompl
pop
pop
shrb
mov
pop
mov
inc
cmpsb
mov
addr16
rcrb
adc
pop
mov
fbld
out
jecxz
outsb
adc
sbbb
icebp
fcoms
sbb
popa
test
icebp
scas
cwtl
aad
cltd
inc
ss
pusha
and
mov
adc
push
and
fsubrp
scas
pop
push
std
call
in
adc
adc
dec
pop
imul
pop
je
mov
movsb
bound
mov
inc
add
xchg
sti
fs
xchg
daa
jbe
out
int3
or
in
shlb
and
mov
jb
cwtl
sbb
negb
push
sub
repnz
xlat
dec
repnz
fstps
imul
fdivrl
inc
adc
jle
push
sbb
push
jle
icebp
mov
sahf
push
xchg
cmp
push
scas
insb
lret
fbld
push
es
cmc
repz
inc
mov
inc
xchg
fnstcw
testl
test
mov
mov
cwtl
mov
jb
testb
adc
fidivl
mov
and
ljmp
sub
xchg
aas
iret
or
icebp
mov
aad
add
inc
iret
mov
xchg
ljmp
inc
adc
inc
sti
adc
dec
pop
stc
mov
or
out
cmp
sub
shrb
jns
xchg
aas
or
jg
xchg
and
jl
dec
xor
jo
shll
ds
xor
sub
jp
ljmp
and
lret
mov
test
or
adc
push
xor
jne
mov
xchg
push
popf
movsb
in
ja
fildll
mov
shld
adc
push
aad
xor
cmp
nop
add
jl
movsb
push
cwtl
test
lret
sti
scas
jmp
dec
int3
ret
fwait
add
loope
mov
add
adcb
imul
stc
mov
mov
aaa
repnz
pop
mov
ja
and
lea
mov
cwtl
mov
sbb
mov
jp
mov
das
and
into
mov
adc
inc
or
iret
dec
xorl
stc
jle
push
mov
inc
or
xchg
push
outsl
dec
xchg
xchg
std
fwait
outsl
or
cwtl
mov
cld
xor
ret
jae
jl
jno
adc
in
jns
mov
fadd
aas
scas
xchg
mov
addl
roll
pop
sbb
mov
mov
enter
aaa
or
repz
push
xchg
ret
push
pop
cmpsb
out
fcmovbe
test
push
scas
sub
cmp
out
inc
cmc
out
add
popa
mov
fwait
dec
loopne
fs
mov
mov
xchg
aam
sti
add
out
es
add
fildl
jno
add
aam
test
jecxz
xchg
daa
in
or
mov
je
sbb
push
clc
jnp
or
ss
insb
mov
das
pushf
cltd
jmp
mov
shll
xlat
mov
sbb
nop
jl
push
nop
lea
sub
push
push
out
push
push
iret
in
pop
sahf
loope
mov
sub
jl
pusha
popa
popa
pop
xorl
dec
jmp
xchg
push
and
test
mov
mov
mov
mov
mov
add
imul
aam
cwtl
cmpsb
push
hlt
adc
xchg
insl
popa
addr16
inc
inc
pop
pop
divb
dec
inc
dec
cmc
mov
push
nop
clc
sti
in
in
and
cli
mov
inc
cmp
xchg
dec
adc
mov
cmp
xchg
ss
testb
shrl
loop
sbbl
cmp
inc
mov
push
out
jmp
jbe
in
cmpsl
lea
ss
insb
out
xor
scas
ret
jmp
out
mov
out
xchg
popf
add
sbb
js
pop
cmp
xor
inc
dec
jl
sub
out
mov
push
scas
xchg
stos
ds
push
notb
jno
les
lods
daa
add
incl
jae
pop
rcrl
ds
push
mov
and
or
mov
push
xor
pop
aad
test
or
repnz
push
clc
xor
ss
ret
ffree
in
jns
rcrb
mov
es
sbbl
xor
dec
stos
xlat
adc
mov
jns
repz
in
negb
jb
das
xchg
push
rep
mov
xor
rcrb
add
xchg
jo
test
in
ljmp
fwait
icebp
adc
inc
into
sbb
pop
sub
adc
sbb
jne
popf
pop
jae
shrb
fdivs
mov
mov
or
out
in
in
mov
inc
packsswb
sbb
lea
push
loopne
and
clc
adc
pop
sub
jle,pn
fmuls
sbb
mov
and
ss
add
icebp
or
jnp
aas
and
sti
pop
mov
sub
dec
bound
adc
cmp
mov
xor
es
xchg
adc
scas
aam
jnp
mov
jbe
cmp
xlat
and
jl
and
es
mov
stc
jmp
gs
pushf
mov
inc
sub
pop
fidivrl
dec
sub
dec
cmpsl
jmp
je
push
movsl
or
or
out
inc
mov
xchg
out
fstl
mov
cmpsb
pop
fdivrl
xor
repz
xlat
daa
aaa
std
scas
sahf
pop
jb
std
out
push
into
popf
or
pop
into
cmp
xchg
push
not
or
ror
xchg
dec
mov
adc
aas
lret
sbb
mov
sub
es
call
xchg
add
mov
push
dec
inc
sub
xchg
sbb
stc
xor
xlat
jmp
test
nop
pop
mov
or
jae
dec
pop
adc
mov
dec
mov
mov
int
test
pop
sub
sub
mov
sub
ljmp
fdiv
push
lds
dec
xchg
jg
pushf
cmpsb
aaa
ljmp
ljmp
sti
cmp
xchg
fildll
outsl
mov
jns
sbb
mov
mov
lret
xor
popf
loop
ss
jns
js
push
xor
cltd
inc
and
dec
adc
jmp
lret
adc
lods
call
ja
loop
sbb
in
jne
aas
push
das
push
push
push
pop
mov
pop
mov
notb
jnp
test
icebp
xchg
decb
pop
sbb
shl
jecxz
push
inc
stos
sub
ss
inc
orl
inc
jnp
jno
lcall
inc
repz
pop
add
jp
aaa
int3
inc
and
vmovd
daa
hlt
cli
test
cwtl
cltd
adc
in
stos
pop
fcomps
pop
ret
fs
sbb
fldcw
jmp
jbe
dec
add
cmc
xor
dec
or
xchg
or
filds
fisubl
lods
lods
and
shlb
mov
movsb
push
rolb
mov
push
lea
mov
sub
das
out
jmp
popa
push
ds
test
test
sbb
call
dec
ret
stos
cs
fdivr
gs
and
jo
loope
jecxz
cmp
jmp
pop
mov
popf
scas
sub
cli
or
or
mov
sti
push
dec
xchg
mov
cmpl
cmp
mov
mov
es
cwtl
ss
or
inc
push
dec
cmc
iret
aaa
cmpsl
push
cmp
imul
loope
ret
jnp
loopne
out
in
rorb
or
arpl
ret
lcall
push
pop
xchg
adc
test
inc
jmp
std
ret
insb
outsl
les
xchg
sub
adc
xchg
cmp
and
fidivrs
mov
fsts
xchg
fimuls
inc
mov
jp
lock
dec
or
ds
cmpsl
mov
mov
sub
mov
repz
xchg
dec
cmp
xor
mov
ss
orb
mov
and
pusha
hlt
rcr
mov
add
inc
and
outsl
and
jecxz
scas
loop
mov
mov
call
repnz
pop
and
sub
add
jmp
int
adc
into
xchg
xchg
cwtl
sahf
inc
pop
cmp
clc
and
jmp
mov
or
mov
dec
jecxz
add
test
jae
mov
add
fld
push
test
stos
add
lret
lods
ja
incb
cld
sbb
mov
arpl
jle
inc
pop
xchg
add
jne
sub
int3
cld
js
enter
or
in
sub
pop
mov
push
rorl
ss
imul
or
sub
pusha
lds
ja
pop
sbb
mov
faddp
cmp
pop
cmp
hlt
cmp
decb
jecxz
enter
jp
add
into
lods
ja
dec
inc
icebp
ljmp
out
sub
inc
or
lret
in
xchg
sbb
scas
lds
bound
insl
sbbb
jnp
add
cmc
pop
cmc
in
and
in
outsl
arpl
pop
mov
dec
sarb
int
scas
adc
push
faddl
cmovle
push
jae
sub
jg
jmp
addr16
xchg
repz
lret
jle
inc
jge
mov
insb
loope
in
fmulp
xchg
cmp
sbb
movsl
repz
mov
cmp
sbb
sti
adc
sbb
cmc
sbb
pop
push
mov
xor
xchg
xchg
adc
xor
inc
imul
mov
mov
lods
mov
lcall
or
cmp
sub
cmc
cli
xchg
push
mov
pop
clc
inc
jb
and
andl
in
loop
int
incb
test
dec
lds
xchg
mov
mov
and
fidivs
loope
je
fdivrp
aas
movsb
outsb
pop
sbb
and
jb
bound
push
addb
mov
pop
jmp
sbb
cmp
rcrb
in
xlat
push
push
cmp
xchg
pop
into
into
add
xchg
push
cmpsl
push
lock
lret
dec
daa
ljmp
cmp
ja
mov
mov
dec
xchg
or
jno
jne
push
cvtdq2ps
or
dec
pop
sub
pop
mov
ss
adcl
in
inc
cmp
mov
fadds
insl
les
adc
add
stos
fisttpll
push
push
adc
adc
fcompl
in
pop
outsl
les
fisubl
dec
adc
ret
jl
xchg
inc
insl
inc
fisttpl
or
je
lcall
and
push
insb
shrl
mov
mov
add
adc
cmp
pop
xchg
or
aam
mov
and
sub
push
cwtl
test
inc
sbb
inc
lock
dec
push
inc
mov
push
cmc
lcall
add
pop
std
shrl
rorb
js
testl
dec
in
mov
pop
fld
inc
icebp
pop
movsl
andl
test
push
adc
xorb
movsb
cwtl
xor
lret
and
mov
mov
push
inc
fisttpl
lahf
jne
ret
out
mov
jb
xchg
mov
mulb
xlat
in
lcall
lds
cli
repnz
xor
dec
push
mov
popw
jg
mov
mov
inc
pop
pushf
cli
and
dec
inc
xor
or
mov
xor
xor
add
mov
cltd
mov
test
jg
rolb
imul
adc
mov
or
jno
pop
jbe
pop
add
lds
jb
dec
call
push
or
repz
inc
into
xchg
int3
rcrl
not
imul
mov
or
or
inc
into
mov
push
fcmovbe
xor
les
dec
mov
push
or
push
pop
jp
mov
in
out
inc
adc
imul
mov
stos
sbb
aas
cld
cs
adc
frstor
fldenv
loope
mov
inc
mov
dec
jns
and
inc
jecxz
sub
or
arpl
sub
ret
or
fs
xchg
cli
cmpsb
jle
dec
sub
jo
in
int3
adc
add
pop
xor
mov
xor
lahf
mov
out
sub
repnz
push
push
mov
jns
and
or
iret
inc
xor
sti
sti
adc
mov
sahf
cwtl
scas
jb
xchg
pop
jns
movl
mov
sub
cmp
cld
ret
shrb
nop
ljmp
ss
cmp
fsub
add
inc
repz
sub
sub
xorl
movsl
loope
jb
mov
xchg
test
call
movsb
fcomi
mov
inc
cmp
or
cmpb
and
test
dec
jecxz
dec
xor
in
dec
imul
sub
pushf
sub
sbb
js
into
test
xor
ja
jo
xchg
test
test
out
sub
jmp
push
subb
repz
outsb
push
cmc
pop
push
add
dec
or
jge
rcrl
mov
or
cmc
mov
sub
mov
pop
mov
popf
xor
sbbl
cli
sub
ficomps
insb
aaa
sub
cld
add
sbb
pop
adc
shll
icebp
lods
ja
cmpsl
and
inc
jno
xchg
ljmp
sbb
jmp
jmp
loope
enter
jb
push
sbb
mov
cmp
push
add
int3
push
jae
mov
cld
or
cmp
test
imul
add
fcompl
sbb
stc
in
cwtl
aaa
mov
scas
push
push
lods
es
popf
mov
test
inc
pop
dec
inc
enter
addr16
pushf
or
dec
shrl
les
sarb
push
popa
fldt
arpl
pop
add
sbb
nop
je
sbb
jmp
adc
sbb
adc
mov
jae
push
add
pop
std
pop
mov
or
dec
sbb
hlt
nop
or
and
add
cmp
pop
faddl
push
nop
push
stos
lds
xor
fildll
xor
xor
cmp
xor
jne
mov
mov
jbe
cmpsl
xchg
add
add
stc
lea
clc
jg
cs
lds
lds
sub
rolb
icebp
add
dec
xor
lahf
dec
cli
dec
jne
adc
hlt
vpaddsw
lods
add
xchg
and
pop
bound
adc
mov
push
fidivl
lcall
rcrb
mov
or
push
xor
das
bound
pop
gs
movsl
and
dec
xlat
ljmp
push
dec
pusha
fadd
pop
sub
push
loopne
push
cmc
loop
sbb
nop
xchg
inc
js
jae
rcrl
push
mov
push
hlt
in
and
int3
test
cltd
sub
shrl
mov
pop
dec
pusha
cmp
fstl
add
jl
xchg
xor
mov
mov
leave
jmp
adc
jg
jl
add
inc
aaa
lahf
rclb
lock
sbb
sub
mov
loope
outsb
cli
cmpsb
ds
sub
out
xchg
mov
adc
jae
les
fwait
inc
pop
clc
and
lret
or
sub
push
add
stc
jbe
fwait
jno
fwait
add
jle
add
pop
and
clc
fucom
repnz
push
push
pop
repnz
out
ret
frstor
dec
cld
mov
fdivrs
sahf
loopne
or
pop
lahf
ret
cmpsb
jg
pop
mov
lods
daa
pop
adc
xchg
shrb
jecxz
test
test
jecxz
aad
sub
and
mov
loopne
jge
jp
sub
inc
jmp
std
ret
jo
movb
addr16
fsubrl
sbbb
push
xchg
push
lret
pop
cmp
sub
and
fcomip
push
sbb
pop
mov
shlb
mov
adc
jmp
shlb
lea
dec
lret
sahf
push
repnz
pop
lret
stos
mov
aad
mov
lock
jecxz
clc
enter
sbbb
jle
xchg
loop
dec
insl
mov
lea
xchg
aas
test
aaa
adc
into
mov
xchg
stos
push
je
fst
scas
lods
or
add
cld
dec
inc
pop
xchg
cs
out
cmpsb
mul
mov
stos
or
les
xor
xchg
mov
clc
dec
jle
sbbl
push
pop
testb
test
daa
ret
add
sbb
mov
stos
xchg
cltd
aam
pop
je
xchg
jae
jno
popa
adc
mov
test
jge
jmp
add
jmp
cmp
fwait
cmp
or
inc
inc
or
cli
mov
out
scas
or
nop
out
in
xchg
stos
or
xor
mov
mov
test
mov
ljmp
and
loopne
repz
sbb
mov
out
fisubl
push
xchg
pusha
and
repnz
push
adc
in
js
bound
sarl
sbb
xor
mov
mov
mov
xchg
movsl
subl
push
std
jo
popf
lret
xor
jp
add
push
es
mov
jle
fstps
scas
pop
sbb
nop
xchg
mov
je
cmpsb
push
lcall
mov
aad
icebp
loopne
sbb
pop
aas
jp
hlt
int
std
xor
cmp
sbb
test
pushf
andl
fsub
sbb
out
cld
or
sbb
aad
repnz
cmp
mov
push
sbb
div
and
xchg
stos
dec
cld
sbb
xor
out
xchg
jne
adc
popf
movsl
jo
stos
mov
arpl
dec
ficoml
loop
mov
and
jle
xor
pop
push
add
data16
sbb
add
movsl
push
mov
notl
jg
shlw
jbe
test
xchg
push
fsub
jecxz
pop
and
fistpl
inc
loop
movsl
data16
sub
aam
std
jp
inc
fdiv
shl
fs
and
out
inc
or
mov
gs
mov
test
or
push
loop
outsb
mov
int3
cmpb
sbb
jae
sub
push
stc
outsb
loope
addr16
aad
pop
push
jecxz
mov
std
sub
or
popa
cli
adc
xchg
mov
push
testb
imul
adc
shll
daa
xchg
mov
xchg
mov
mov
scas
iret
push
imul
idiv
imul
adc
std
jns
cmp
pop
stos
or
mov
hlt
call
xchg
daa
lea
sub
xor
and
xchg
cli
dec
and
pop
les
loope
ret
insb
jmp
aaa
add
dec
mov
fstpl
fstp
shlb
sti
ret
test
add
inc
cmp
xor
sahf
add
fs
mov
dec
movl
shrl
out
mov
imul
sti
pop
ss
dec
pop
cmpsl
dec
sub
dec
ja
or
jecxz
inc
in
jno
std
and
push
lcall
mov
ss
icebp
mov
ds
sbb
push
notb
in
cmc
fidivrl
cmpsb
cmp
lea
loopne
xchg
jbe
push
fiadds
sbb
test
jecxz
push
ljmp
inc
scas
aad
mov
xor
push
rcll
inc
ljmp
add
and
imul
pop
lods
jle
pop
arpl
xchg
fsub
out
sbb
pusha
mov
pop
in
push
xorb
scas
sarl
mov
clc
outsb
add
out
push
jb
and
cwtl
mov
call
int
repz
cld
push
sub
jl
out
arpl
imul
lock
jp
fs
jae
dec
ds
adc
sub
testb
sbb
mov
pop
dec
sub
and
jle
mov
mov
mov
mov
stos
pop
data16
sti
pop
shrb
xchg
add
pop
jo
movsl
dec
sub
out
jge
inc
add
in
lret
les
jp
pushf
push
mov
dec
sahf
out
push
xor
add
push
inc
bound
xor
dec
pop
push
cmova
cmp
arpl
aaa
sbb
add
movsb
jmp
repz
lock
sub
out
rcrb
jae
lcall
insb
ret
xchg
jns
push
mov
aaa
pusha
and
gs
dec
in
cltd
shll
outsl
rcrl
repnz
mov
dec
lret
lret
jns
cmp
lock
mov
sub
inc
adc
das
xor
pop
gs
adc
xchg
std
push
mov
icebp
lret
sub
test
and
lods
jp
sbb
in
sbb
mov
fsubrl
das
or
insb
inc
insl
jnp
xor
xchg
iret
pop
mov
mov
lret
mov
imull
cmpsl
fisubs
movsl
mov
mov
iret
dec
cli
xchg
scas
push
inc
orl
ret
rcll
test
xchg
clc
pop
lods
shl
mov
ja
jae
mov
shrb
stos
cld
aam
push
mov
pushf
xchg
jp
or
xor
pushf
push
and
fsubr
adc
push
shrl
lds
sub
dec
scas
loopne
xlat
jnp
sarb
cmp
aas
or
pop
test
mov
xlat
or
in
lods
push
cmpsb
shlb
adc
mov
mov
jecxz
into
inc
or
push
sbb
aad
push
mov
imul
ja
insl
push
in
cmp
adc
cli
lds
int
fwait
nop
loopne
cmpsb
mov
push
jae
push
scas
push
stos
dec
in
pop
pop
cs
aad
mov
lret
add
mov
xor
dec
decl
stc
dec
pop
xchg
pop
sbb
cwtl
mov
jmp
jb
push
aaa
mov
mov
xor
cltd
xor
das
push
mov
inc
std
mov
test
or
push
repz
jnp
sub
fcoml
jge
out
scas
jecxz
mov
cmp
shl
dec
xchg
sahf
lahf
ret
mov
xor
xchg
data16
insb
out
jbe
cmp
stos
movsl
ret
pop
sub
rol
sub
fdivrs
xor
xor
mov
mov
xchg
pop
enter
rorb
inc
jne
mov
cmpl
rolb
cli
jo
clc
inc
das
push
daa
mov
xor
in
pop
pop
xor
cmp
arpl
jbe
mov
inc
outsl
xchg
mov
insb
push
jns
aam
cltd
adc
bound
jecxz
xchg
loopne
lahf
dec
imul
xchg
out
out
or
sub
mov
inc
lock
push
pop
inc
data16
xchg
xlat
dec
fimull
mov
inc
ret
lock
pop
sbb
adc
fcoms
sar
and
loope
ds
mov
inc
sbb
jge
imul
and
pop
jecxz
out
insb
or
rolb
xor
iret
sbb
testl
pop
adc
jl
fmull
insb
cmp
jl
lock
xchg
loopne
rol
test
jo
lock
gs
movsl
lret
popf
scas
stos
mov
and
add
gs
push
pop
test
xor
mov
jg
dec
into
aaa
pop
mov
mov
mov
or
or
sbb
call
jo
xchg
jb
in
sbb
lahf
xor
fld
xchg
pop
mov
or
sbb
movsl
pop
out
nop
aaa
aad
ja
cmp
sub
nop
data16
jae
xchg
stc
dec
xor
ret
xor
das
inc
sti
add
jl
dec
jmp
dec
adc
mov
out
out
adc
ss
mov
popl
push
pop
xchg
out
mov
shlb
and
sbb
xchg
xchg
mov
sarb
fisubl
pop
jo
jne
outsl
sub
addr16
xchg
adc
xor
pop
lcall
ljmp
mov
xor
mov
es
bound
sub
pop
dec
sub
push
test
or
js
jp
loop
adc
bsr
lock
ljmp
dec
xor
adc
push
loope
push
push
adc
pop
sbb
push
sbb
in
ja
add
cwtl
fildl
push
adc
sub
cld
dec
test
xchg
call
js
push
xor
push
and
or
and
xchg
inc
dec
sbb
aam
inc
inc
incb
dec
shl
fidivl
add
cmp
iret
jo
ficoml
xchg
push
aad
xchg
jbe
rcll
stc
or
cs
pop
es
lods
add
push
xchg
mov
mov
outsl
sbb
push
fistpl
cmpsb
mov
aas
and
mov
ss
push
pop
jg
xchg
xor
mov
add
adc
data16
sub
scas
fwait
sbb
push
jb
and
xlat
inc
adc
sub
dec
sub
cli
lcall
mov
jb
pop
jp
xor
xor
dec
imul
std
nop
addb
orl
loop
rcrl
or
mov
sub
ds
mov
mov
rcll
mov
push
adc
mov
scas
jmp
push
mov
inc
dec
je
add
pop
sub
xchg
adc
ljmp
jns
inc
and
js
fistpll
por
pop
pop
in
inc
and
cmpsb
daa
data16
xchg
mov
lret
ret
mov
sti
push
or
data16
and
mov
insl
xchg
lea
fcomps
mov
hlt
add
mov
sub
out
inc
into
jo
jbe,pn
mov
cmc
mov
xchg
mov
sbb
int
pusha
test
mov
inc
push
and
loopew
gs
dec
rcrl
leave
mov
cmpsb
je
cltd
jns
jge
arpl
gs
mov
xor
dec
pop
mov
jno
call
jp
mov
insl
outsl
and
aam
add
call
cmpsb
lret
shll
js
push
insb
cmpsb
push
mov
mov
jecxz
aam
xchg
jb
or
push
jo
das
adc
jb
push
sbb
popf
insb
sti
jnp
mov
mov
jnp
loopne
adc
xlat
dec
push
mov
cmpsl
enter
aas
add
push
rolb
test
mov
nop
mov
fmul
icebp
pop
popa
mov
dec
fwait
sbb
adc
call
out
push
insl
ja
push
ljmp
xor
dec
add
mov
jno
or
in
cld
int
pop
mov
clc
pop
inc
mov
lret
lea
lret
inc
xchg
in
repnz
mov
mov
adc
or
jns
pop
inc
outsb
cmc
mov
or
test
gs
xor
outsb
lods
daa
sbb
sarb
test
sub
sar
add
xchg
fsubp
xchg
sbb
jp
inc
js
into
test
push
hlt
sbb
xchg
push
add
mov
stc
outsb
repnz
mov
xchg
fisttpll
ret
dec
pop
mov
xchg
jp
cmp
test
js
xchg
cs
fwait
inc
ret
adc
clc
lods
testb
jnp
dec
fmull
addl
imul
repz
in
ret
cmp
mov
add
pop
outsl
out
or
jge
mov
pop
inc
shr
mov
or
stc
rclb
mov
and
pop
xor
pushl
jmp
hlt
jno
out
in
incb
in
ja
sub
cli
sub
jo
jecxz
mov
jmp
aam
cld
inc
lcall
sbbl
mov
cmp
sbb
pop
ss
or
aam
mov
adc
push
cmp
scas
dec
loopne
test
int3
ss
hlt
add
push
mov
or
scas
dec
scas
push
xor
xchg
adc
testb
xchg
xor
mov
mov
into
fsubl
adc
cmovo
sub
mov
shl
add
rorl
push
cmp
xor
pop
pop
xorb
push
int3
jge
int
pop
or
in
pop
ja
popa
mov
xchg
xlat
lret
jmp
hlt
nop
out
in
lret
jge
in
inc
jle
orl
decb
shrl
xchg
jecxz
jl
mov
cltd
inc
mov
jb
mov
mov
xchg
fimull
fs
adcb
ss
into
sub
addr16
cli
adc
lret
sbb
push
or
push
adc
cmp
icebp
loopne
sbb
and
dec
mov
dec
mov
popa
dec
movsl
push
test
push
fidivrl
or
int
adc
outsl
es
and
inc
dec
jns
dec
inc
es
jle
mov
xor
fistpll
daa
cmp
sbb
cmc
push
dec
les
push
lret
fistpll
mov
mov
shr
xchg
out
xor
aad
mov
xor
out
fisttpl
jg
pop
or
hlt
ss
aaa
jns
adc
cmc
pusha
dec
movb
add
or
xchg
sti
dec
divl
push
jnp
je
loope
cwtl
cmpsl
or
sub
nop
hlt
lds
jno
dec
cld
mov
lahf
or
ljmp
adc
cmp
add
jo
push
pop
movsb
jbe
mov
out
mov
jl
mov
add
test
and
pop
dec
push
cmp
xchg
xchg
stos
push
subl
dec
stos
lds
or
fldenv
add
out
mov
inc
cmp
fwait
pop
lds
stos
pushf
xchg
add
inc
test
addl
fsubl
xchg
dec
std
mov
add
pop
iret
sbb
stos
jb
iret
push
cmp
arpl
orl
push
stos
xchg
inc
sbb
jle
push
push
movsb
ljmp
sbb
loope
mov
enter
push
out
sahf
lret
mov
std
add
or
xchg
hlt
movsb
adc
fildll
adc
cltd
scas
mov
outsl
repnz
mov
test
mov
xchg
and
sub
stos
xchg
imul
es
loop
mov
fcompl
sbb
dec
cmp
mov
inc
mov
ja
scas
mov
xor
mov
mov
popa
stos
and
enter
negl
xor
push
cmp
jo
jnp
push
mov
andb
push
inc
push
xor
adcb
and
adc
add
std
xchg
ljmp
inc
or
or
inc
pusha
mov
psllw
pushf
jae
mov
add
fwait
cmpsb
je
fiaddl
movsb
stos
pop
jns
and
lcall
adc
pop
test
jne
ja
imul
stos
push
push
mov
loope
fwait
cmc
add
xchg
pop
lods
fs
rcrl
or
adc
xor
sub
mov
ds
sbb
lahf
mov
add
ljmp
mov
cmc
mov
lds
push
lret
lret
rorl
ds
mov
jbe
xchg
push
fcomps
cmc
inc
xor
lea
fistpll
cmpsl
fldt
ja
mov
adc
dec
test
fs
popa
gs
sub
imul
jmp
stos
testl
jp
inc
sub
loop
out
pop
cld
pop
out
addb
push
pop
xlat
jae
cwtl
sbb
and
movsb
popf
insb
clc
pop
jge
test
sbb
mov
jge
scas
xor
insb
das
ss
in
inc
push
push
xchg
push
mov
fdiv
repnz
orb
inc
mov
in
xor
shlb
cmpsl
shrb
insl
mov
sbb
push
fdivrp
mov
sbb
adc
or
lret
xlat
fstps
imul
pop
rcll
mov
push
in
in
gs
out
jae
jge
adc
hlt
pushf
aad
dec
adc
push
push
jb
int
inc
hlt
enter
add
rcl
fcmovu
push
ja
test
mov
hlt
lret
into
cmp
imul
bound
jmp
out
or
mov
jno
jl
sahf
push
pop
idiv
subb
or
hlt
cltd
sub
outsb
inc
pop
adc
sbb
cld
outsl
stc
dec
in
std
jge
mov
enter
push
pop
jecxz
iret
dec
push
cmpsl
addr16
std
push
outsb
dec
arpl
mov
fs
or
andb
shll
dec
mov
out
cmp
fsub
hlt
sbb
mov
in
outsb
outsb
xor
scas
imul
jmp
jns
sub
and
and
inc
pop
iret
xor
fptan
or
out
mov
push
aaa
inc
pop
inc
aad
mul
cmp
sbb
test
sbb
jp,pn
fisttps
cmp
jle
outsb
fwait
ss
xor
rclb
fidivs
or
or
and
into
out
fdiv
adc
cmp
cltd
jg
mov
adc
gs
and
mov
mov
in
inc
adc
loopew
mov
clc
inc
cmpsl
enter
jmp
imul
and
arpl
sub
push
dec
pop
dec
push
cli
push
cmp
cmc
faddp
scas
lods
pushf
dec
cmp
rorb
sbb
mov
imul
sub
dec
and
push
cmp
pop
in
lods
out
pop
mov
mov
aaa
or
rorb
push
fmul
jecxz
lcall
mov
mov
sub
out
pusha
popa
sub
cmpsl
imul
adc
sbb
sbb
insl
add
sbb
pop
aad
cmp
sbb
push
xchg
jp
cmc
icebp
jge
jns
cmpsb
sarb
mov
cmpl
out
andb
repz
es
outsb
dec
sub
jae
negb
fistpll
shll
popa
cld
and
jl
jge
add
mov
pushl
xor
push
icebp
pushf
mov
dec
xchg
fistl
sbb
lds
shrl
dec
insl
inc
push
scas
imul
dec
test
outsl
jo
sbb
ja
mov
mul
ficomps
dec
out
lds
pop
cmp
iret
testb
adc
dec
subb
ficoml
adc
jns
jge
sbb
push
push
mov
sub
mov
in
or
xlat
divb
pop
out
sub
inc
xchg
stos
adc
sbb
iret
fildll
xchg
jne
sub
icebp
loopne
mov
and
stos
push
jmp
push
inc
in
std
mov
add
jmp
fistps
sbbl
shlb
sbb
mov
out
xchg
fistps
cmp
dec
cmp
adc
and
leave
cmp
or
xchg
push
cs
pop
jp,pn
leave
ljmp
sub
js
es
fcmovnb
mov
mov
scas
fbld
fnstsw
mov
mov
test
leave
push
sbb
fldl2e
cmp
pop
xor
xor
sbb
fsts
icebp
test
test
add
sbb
sbb
push
lret
push
and
mov
add
mov
movsl
outsl
das
inc
outsb
jnp
xor
adc
push
xchg
push
pop
xor
loop
test
scas
jno
nop
or
sbb
xor
xor
fildll
mov
scas
sahf
cmp
fimuls
lahf
mov
rolb
div
sub
cwtl
icebp
fdivs
cmp
in
push
cltd
in
jae
not
aaa
sub
int
into
mov
sahf
pop
sub
lock
nop
fisttpl
fmul
cs
or
xchg
pop
jbe
sub
adc
jnp
inc
pop
add
dec
and
shl
and
sub
push
or
xchg
push
mov
imul
test
std
stc
ret
xchg
std
sarl
fmuls
jle
es
mov
adc
jbe
inc
movsb
sbb
dec
jle
bound
movsl
in
mov
movsb
call
sub
pop
xor
sbbl
stos
xor
in
out
pusha
imul
mov
call
ljmp
cmc
imul
push
xor
adc
xor
pop
cmp
out
mov
aad
sbbb
xor
pop
cs
xchg
pop
ljmp
push
icebp
push
imul
rcrb
sbb
lcall
jbe
sbb
cmc
lret
lods
xchg
js
loop
sub
push
loope
fbld
and
dec
mov
movb
dec
push
sahf
cmp
aas
popa
lock
pop
int
fwait
push
dec
inc
mov
aad
xor
std
inc
sbb
lods
mov
sub
or
cmp
mov
and
mov
cmpsb
in
mov
inc
pop
jmp
mov
mov
addr16
push
mov
sahf
pop
int
into
sbbb
pushf
loop
rep
sarl
push
jecxz
cmp
xor
and
in
incl
dec
pop
jnp
push
inc
jne
jp
sbb
pop
hlt
adc
jg
pop
outsb
mov
mov
dec
sub
jl
rcr
jo
mov
pop
mov
xchg
jnp
lods
pop
inc
mov
in
adc
cmp
arpl
jmp
fnstenv
int3
flds
dec
adc
bound
jmp
cltd
inc
sub
movsl
xchg
pop
xchg
daa
xchg
loopne
ja
dec
movl
pusha
and
sbb
loop
ret
jnp
or
inc
adc
and
inc
jmp
jmp
imul
js
movsb
xchg
mov
xchg
hlt
bound
cmc
and
popf
jge
sbb
mov
lock
adc
fucom
fisttpll
ljmp
pop
lods
clc
mov
xchg
stos
xor
xor
cltd
pop
icebp
lock
add
mov
jb
dec
mulb
ja
ds
or
out
scas
mov
adc
mov
es
aam
dec
nop
shll
call
out
cwtl
addl
aaa
sub
mov
push
cmp
lods
push
sub
mov
dec
imul
or
jae
ds
scas
movsl
stos
jecxz
insb
addr16
call
xchg
loopne
push
dec
xor
icebp
in
repnz
and
popf
cmp
inc
xbegin
jmp
mov
cli
adc
cmp
sub
adc
xchg
adc
hlt
mov
cwtl
or
scas
fs
jb
adc
add
mov
cltd
fcomps
adc
dec
lahf
pop
lock
popa
push
mov
jno
mov
lock
test
lods
dec
xor
in
out
mov
sub
test
rcrb
jns
cmp
and
popa
dec
cmp
xor
div
jp
enter
inc
arpl
push
movsl
jge
cmp
jae
das
push
jbe
loopne
pop
adc
xchg
mov
dec
push
xchg
dec
mov
inc
jmp
lcall
mov
pop
cmp
or
jno
lods
out
xchg
mov
xlat
pop
test
repz
nop
int3
mov
lock
popa
mov
lods
lock
or
idivl
or
in
mov
out
aam
adc
adc
fs
movsl
idivl
std
int3
xchg
jne
sbb
push
jg
loope
mov
nop
xor
mov
mov
repz
add
jecxz
jns
leave
push
pop
mov
push
pusha
jge
sbbb
je
imulb
jmp
inc
rcll
sub
cmp
sub
xor
in
scas
xor
push
xorl
gs
jno
mov
and
out
sbb
loope
push
bound
add
cmpsl
insb
jl
mov
and
sub
enter
add
fisubl
popa
sbb
inc
and
addb
sub
xrelease
mov
push
outsl
and
jns
movsl
xchg
loope
and
sahf
sti
es
fildll
sub
std
inc
mov
mov
push
push
rorb
or
sti
rcr
dec
pop
mov
mov
mov
jge
xor
push
lock
xor
cld
insl
cmp
loopne
dec
jle
push
pop
push
adc
addr16
sbb
stc
adc
inc
aad
fldcw
push
into
pop
cmp
loope
sti
jnp
stos
mov
repnz
pop
inc
imul
add
subb
jnp
adc
or
push
icebp
insb
fadds
loop
clc
lret
sub
jne
push
push
enter
pusha
push
loop
into
and
fisubrs
fbld
testl
in
and
xor
movsb
movb
ret
int3
fwait
bound
arpl
jo
lret
ret
loopne
inc
and
mov
add
xlat
xor
test
mov
scas
dec
scas
xchg
add
or
dec
stos
sub
aam
mov
mov
cmpsl
jbe
sbb
add
lock
xchg
pop
jp
mov
cmove
int
cwtl
popa
insl
in
imul
clc
dec
xchg
cmpsl
cmc
ja
out
sub
cmpsb
mov
addr16
xchg
orb
fdivrp
lcall
lea
inc
fwait
loopne
out
inc
fimuls
push
cmp
mov
mov
push
sub
daa
push
dec
scas
fistpll
xor
pop
mov
xor
in
dec
subb
xlat
imul
sbb
es
js
inc
test
jnp
clc
mov
push
xchg
daa
stos
mov
pop
sub
ljmp
test
out
ds
movsb
jne
fnstcw
ds
sbb
push
js
jmp
pop
push
sahf
mov
sbb
test
sub
mov
cmp
add
das
mov
icebp
mov
cmpsl
mov
insl
addr16
and
sub
sbb
cmp
mov
decb
rol
xchg
stos
jno
push
cli
aas
sbb
cmp
cmpsb
mov
push
adc
push
outsb
inc
imul
pop
jge
inc
sbb
xchg
adc
lods
stos
mov
push
jle
pop
sahf
int3
inc
dec
rolb
push
dec
rcrl
test
push
push
pop
ds
adc
sub
mov
mov
leave
repnz
int
and
adc
push
inc
dec
mov
adc
dec
fcmovnb
or
jle
fmul
jbe
fcompl
icebp
xchg
pop
shrl
lea
pop
pop
shr
lock
call
cltd
lock
sbb
cs
inc
arpl
pusha
mov
inc
adc
dec
pop
sub
data16
mov
into
out
xor
push
daa
xchg
add
xor
insb
repz
push
clc
scas
cmp
fsubrs
inc
sub
pusha
push
pop
pop
pusha
cmc
iret
std
sub
jne
loope
roll
icebp
std
and
jp
inc
push
xchg
cld
cmp
in
dec
pop
adc
mov
sti
push
les
fistpl
mov
ret
in
sbb
xchg
out
imul
sub
or
xchg
lret
cmpsl
sub
xor
les
rcr
jle
mov
pushf
ss
push
bound
jne
xchg
loope
jecxz
jae
clc
push
add
fisubs
sub
push
test
push
add
dec
rcrl
pushf
dec
fdivr
sub
mov
xchg
stos
mov
fwait
shll
cmp
pushf
iret
test
cli
dec
or
fscale
sub
and
das
mov
clc
test
dec
loope
xchg
inc
call
mov
push
and
stos
pop
jge
xchg
push
and
xor
pop
out
stos
in
adc
rorl
xchg
mov
testl
cmp
jo
add
repnz
push
cwtl
dec
jne
repnz
iret
sub
or
je
cwtl
push
jae
outsb
sbb
push
out
pop
repz
das
stc
fisubs
fstpt
gs
xchg
add
bnd
arpl
push
add
js
imul
push
push
jmp
lahf
stos
sbb
dec
push
sbb
fsubl
imul
dec
add
dec
adc
or
inc
addr16
aam
mov
cmp
or
inc
sbb
sub
push
jle
js
mov
and
movsl
push
in
push
rorb
cmpb
dec
jl
mov
dec
push
cmp
fisubrl
in
xchg
jg
or
leave
adc
xchg
mov
cld
fwait
in
sbb
lods
arpl
push
aaa
and
test
loopne
cwtl
xchg
inc
outsb
cmpsl
pop
and
insb
dec
stos
and
nop
loop
or
adc
push
cwtl
jo
pushf
out
cmpsl
popl
cmp
repz
add
xchg
jnp
jno
ror
push
lods
sbb
jno
imul
inc
ret
pop
jno
js
stos
mov
mov
popf
lahf
repnz
jmp
scas
pushf
mov
in
insb
cltd
and
adc
pushf
stos
sahf
loop
sbbb
pop
rcr
nop
rorb
sbb
movsl
mov
arpl
fdecstp
test
test
jb
lea
cmp
push
mov
out
add
lahf
xor
inc
aaa
sbb
xchg
shll
movsl
push
sub
dec
jg
hlt
pop
out
arpl
xchg
pop
add
call
and
cli
sbb
pop
repnz
movsb
dec
stos
loope
test
call
cmp
test
outsl
int
mov
and
push
mov
out
arpl
mov
jl
imul
movsb
rolb
lods
or
out
xor
outsb
pop
out
push
jl
jg
or
pop
out
pop
ljmp
sbb
or
pop
xchg
cmp
cmpsl
aaa
sti
dec
idivl
or
dec
cmc
mov
loop
fstl
sbb
in
popa
jb
and
push
ja
inc
jo
sub
icebp
pop
in
arpl
sbb
cmp
bound
idiv
sub
into
or
rcrb
clc
mov
cmp
mov
push
add
xlat
cwtl
sti
fisttps
lahf
mov
xchg
insb
adc
and
or
cli
outsb
das
mov
into
pop
inc
scas
jl
cmpsb
ljmp
dec
inc
cmc
mov
cmc
xor
adc
dec
adc
adcl
outsl
testl
je
or
jg
sub
imul
mov
cmpsb
dec
mov
flds
or
pop
insl
pop
ret
sbb
inc
cmc
cmp
ror
lret
dec
sub
lahf
stos
sbb
fwait
xchg
dec
jne
push
xchg
test
sub
in
mov
mov
push
fisttps
pop
and
in
cltd
xor
ret
sbb
in
mov
test
inc
push
stos
mov
push
and
push
cltd
push
jb
pop
fldenv
imul
test
jae
insl
jo
insb
mov
mov
mul
repz
and
movb
mov
adc
sti
cmpsl
jno
cmp
jp
and
xchg
js
rclb
outsb
dec
mov
xchg
out
test
scas
sub
sti
mov
mov
mov
mov
dec
pop
sti
mov
mov
int
mov
mov
lret
lea
pop
mov
fprem
and
pop
mov
jecxz
loope
mov
dec
cltd
inc
xchg
mov
aas
stc
adc
lds
jo
or
push
and
js
sub
mov
fistpl
mov
or
jecxz
call
sub
mov
sbb
bound
sub
mov
test
sbb
and
mov
dec
cs
loop
cld
jle
int3
dec
cmp
and
mov
mov
leave
add
ljmp
ret
fdivrl
mov
mov
cmp
pushf
mov
pop
adc
mov
push
jl
aas
jnp
outsl
adc
sahf
mov
nop
mov
push
push
and
je
orl
loopne
rclb
fwait
xchg
adc
loop
int
filds
mov
call
rcll
or
pop
aad
mov
cwtl
lahf
call
push
sahf
cltd
loopne
int
push
in
pop
cmc
in
dec
mov
pop
push
pop
jg
inc
scas
fistpl
mov
scas
out
adc
or
sbb
fs
jns
or
cmp
dec
je
mov
add
dec
xchg
int3
and
das
xor
cmp
fstpl
insb
sbb
jmp
or
pop
fsts
shll
fwait
hlt
fsubl
dec
fwait
xor
out
cmp
int
fwait
sarl
push
dec
jg
xor
loopne
pop
mov
nop
add
sub
lret
xor
rolb
mov
adc
pop
push
sahf
les
xchg
mov
data16
jmp
pushf
sbb
xchg
lcall
ficomps
lea
cld
sub
sbbl
call
jbe
rcll
sub
sub
jmp
scas
xor
mov
cli
aas
popf
pop
adc
pop
sbb
cwtl
test
cmp
mov
adc
push
mov
push
pop
xchg
mov
mov
xchg
dec
sub
sub
lahf
ror
pop
cmpsb
lret
add
push
aaa
shll
xor
cmpsl
or
sub
lret
fsubs
cmp
xchg
mov
push
mov
mov
lods
xor
adc
out
jge
xor
out
loopne
lods
jge
not
mov
fs
and
sbb
inc
outsl
and
shll
int3
mov
bound
jne,pt
mov
sbb
test
pop
mov
xchg
pushf
inc
mov
mov
sbb
call
mov
std
dec
ds
test
stos
fcmovnu
mov
xchg
sbb
mov
jecxz
cmpsb
shll
cmp
sub
daa
adc
inc
sub
sarb
mov
sub
xchg
sbb
leave
mov
ret
mov
test
mov
or
dec
push
adc
fidivrl
push
out
sub
shrl
jbe
xor
test
add
loope
sarb
movsl
psubsb
cmp
stos
dec
mov
neg
lret
adc
adc
push
ss
std
lret
add
dec
jmp
xor
sub
ja
mov
xchg
cltd
inc
cmp
or
lret
mov
rcrb
cmpsb
dec
inc
int
imul
icebp
rclb
int3
jne
ljmp
and
adc
push
sbb
adc
fistps
decl
xlat
jg
jge
popf
and
ss
and
in
or
fisttpl
pop
jmp
xchg
cmp
cmp
cmp
mov
and
xor
ficompl
mov
xchg
sub
add
push
ror
loop
out
ljmp
and
loope
pop
sbb
adc
cli
pop
push
out
push
shrb
sub
xor
jmp
sbb
push
cltd
outsl
xor
inc
data16
or
loopne
dec
mov
push
popf
idivl
push
sub
fwait
or
addb
jle
lcall
ds
fwait
cmpsb
mov
jge
in
cmp
jo
xor
popf
mov
mov
pop
lds
gs
jle
dec
orb
mov
vorps
aam
add
jp
cmp
and
imul
push
cld
repnz
add
adc
sahf
cmp
pop
orl
xchg
dec
mov
jnp
dec
outsb
add
insb
sub
inc
and
pop
ljmp
inc
popa
mov
stos
mov
aas
push
mov
mov
add
xchg
xchg
push
adc
cmp
pop
add
inc
sbb
pop
sbb
jmp
cmp
mov
shlb
xlat
movsb
jae
insb
out
or
test
push
sub
pop
push
push
pushl
lret
ret
cltd
or
xchg
push
ficomps
cs
aaa
mov
mov
pop
xchg
cmpsl
adc
sbb
sbb
out
or
enter
shrl
arpl
jg
testb
nop
nop
mov
lcall
pop
sub
jns
sub
int3
mov
push
and
cmpl
inc
mov
mov
pop
or
xor
imul
xor
imul
mov
aad
xor
or
nop
sub
xor
pop
inc
fxch
add
pop
dec
adc
rcr
xlat
dec
inc
sub
lret
jo
jle
mov
inc
sbb
cmp
inc
flds
cmpsl
js
mov
xor
cmp
inc
leave
adc
cmp
dec
jns
cmp
sub
fidivs
movsl
or
addr16
fildll
jae
loope
repz
fsub
test
shlb
out
cmc
push
shlb
sub
je
out
icebp
popa
xchg
les
es
push
jmp
mov
sbb
xchg
ret
jmp
pop
jmp
test
scas
xor
add
adc
mov
jns
dec
gs
sub
mov
ljmp
dec
enter
in
into
xor
inc
aaa
inc
push
xchg
fsubs
jns
in
js
pushf
push
sbb
sub
out
mov
mov
lock
sbb
add
mov
lahf
insb
or
test
jmp
arpl
mov
int3
call
or
pushf
ds
cmp
cmp
cmp
xor
xchg
dec
gs
sbb
mov
into
rdmsr
or
movsb
loop
ret
lcall
mov
idiv
push
mov
shl
test
jle
xchg
rcrl
dec
sbb
xor
scas
xor
or
sar
inc
push
pop
out
mov
hlt
insb
jno
mov
fdiv
repz
sub
out
jnp
sbb
mov
loope
mov
lods
xor
dec
out
popf
fadd
dec
xchg
mov
lods
adc
sti
lea
sub
xchg
cld
or
push
shl
pop
push
xor
adc
les
cmp
icebp
test
enter
dec
fiadds
sbb
fiaddl
push
mov
in
sbb
orb
jl
insb
xchg
or
mov
mov
cmp
cmc
sub
or
das
insb
xchg
mov
xchg
rorl
pop
adc
in
shlb
pushf
jle
adc
pop
js
pop
loope
out
adc
mov
leave
aad
lret
cmpsl
cld
xchg
pusha
cmp
xchg
enter
sbb
pop
cltd
dec
mov
jmp
inc
cmp
push
cmp
or
xchg
inc
inc
cli
mov
push
xchg
mov
call
stos
cmpb
cmp
ficompl
mov
mov
mov
xchg
scas
and
mov
push
jae
lods
ss
aaa
cmc
mov
jecxz
imulb
sbb
mov
insb
shlb
orb
jae
push
out
fst
inc
jge
cmp
mov
pop
test
sbb
pusha
add
nop
sbbl
mov
pushf
jle
sub
pop
movsl
test
pop
jne
fcoms
stos
inc
lea
aas
arpl
sbbl
jns
fisttpl
fbstp
data16
mov
sub
data16
je
ss
adc
ljmp
bound
or
add
fxch
cmp
ror
sbb
test
jns
sub
mov
sub
dec
ljmp
push
stos
add
movb
jb
int3
in
inc
aaa
pop
aam
push
cli
push
dec
scas
and
mov
push
movsb
jmp
in
enter
insl
and
pop
sar
out
sbb
adc
repz
cmc
push
mov
or
xor
push
pushf
inc
jb
sbb
mov
sbbb
mov
jecxz
scas
push
push
es
add
mov
and
xchg
ja
adc
push
lcall
mov
mov
addl
xchg
add
mov
ret
movsl
fwait
push
inc
dec
ja
repnz
cwtl
inc
lock
xor
outsl
cwtl
cmp
hlt
mov
push
sbb
lds
stos
add
mov
leave
cmpsb
inc
adc
jle
ret
cmpsl
push
or
dec
mov
xorl
sti
pop
ficoms
cmc
adc
mov
pop
in
cmp
xor
jns
into
aad
or
out
xchg
ja
movups
into
or
fwait
dec
inc
loop
loope
and
loope
adc
clc
lcall
adc
sbb
clc
aas
loopne
inc
jp
or
push
cmc
sbb
lahf
daa
adc
fdivl
pop
mov
push
outsb
mov
xchg
movsb
xchg
xchg
adc
push
clc
sub
sahf
push
hlt
dec
enter
xor
fsubl
call
push
xor
mov
ss
inc
sbb
clc
dec
dec
push
pop
mov
push
test
cli
mov
aam
jmp
and
jecxz
jge
jmp
fs
push
sbb
ss
pop
out
adc
push
ret
mov
dec
ljmp
int
stos
int
xchg
nop
fists
sbb
lcall
sub
clc
call
mov
mov
xchg
outsl
arpl
fidivs
push
in
mov
dec
je
aad
push
xlat
test
movsb
pop
pop
or
fs
ljmp
and
cltd
pop
add
loope
sbb
add
add
add
js
lahf
pop
pop
push
ljmp
into
dec
stos
sarb
movsb
cli
movsl
je
xchg
mov
mov
popl
mov
sub
nop
mov
push
add
aaa
inc
inc
mov
xor
fs
lods
notl
das
loop,pn
test
dec
xchg
push
loopne
pop
xchg
adc
fbstp
inc
sbb
mov
lds
imul
scas
or
addb
xchg
mulb
xchg
cmp
or
cmpsb
sahf
mov
pop
gs
mov
mov
xor
lds
push
push
mov
hlt
stos
lcall
mov
or
mov
rcrl
cmpb
stos
loop
jnp
lods
jo
mov
mov
jl
ss
push
lcall
inc
xor
sbb
das
jae
nop
sbb
orb
jae
cmp
js
xchg
adc
sub
sub
jg
add
addr16
out
aam
in
dec
dec
cli
xchg
call
addr16
jl
sbb
incb
cld
daa
in
mull
xor
in
dec
mov
dec
mov
lock
xchg
sbb
or
push
pushf
pop
leave
mov
lea
lret
lret
xor
aam
repz
mov
mov
out
clc
push
xchg
xchg
mov
xor
mov
int
pop
adc
dec
xlat
dec
fldcw
mov
xchg
testl
stos
or
inc
faddl
push
add
mov
aas
testb
push
adc
mov
adc
lret
arpl
xlat
mov
dec
sub
das
pop
mov
inc
cs
mov
insb
push
das
cmc
in
pop
dec
inc
mov
xor
sub
shl
not
cld
ror
pushf
imul
shrb
pop
insb
outsb
fwait
cmc
or
inc
mov
repz
push
add
mov
imul
outsl
fstpl
and
das
test
int
pop
repnz
outsb
xchg
dec
jo
fimuls
mov
mov
sub
stc
movsb
scas
out
stos
bswap
cmp
call
mov
cwtl
add
das
mov
adcb
mov
or
leave
nop
cmpsb
xor
arpl
mov
push
gs
ret
jmp
xchg
loopne
sbb
fcoms
mov
fcmovb
dec
mov
and
jecxz
je
inc
xor
repz
push
les
dec
sub
cmp
stc
mov
sti
sub
data16
inc
clc
dec
loopne
push
cmp
scas
push
mov
js
in
movsl
pop
call
cli
cmp
mov
stos
mov
push
ret
sbb
adc
push
leave
add
fs
data16
mov
icebp
popf
bound
jmp
inc
outsl
push
insl
shlb
cmp
andb
scas
or
movsl
test
push
popf
xor
ja
jb
into
popfw
cmp
mov
sub
imul
fildll
leave
cmp
adc
xor
es
sub
scas
int3
push
imul
mov
cld
scas
jno
or
mov
data16
mov
pmovmskb
cmp
mov
sbb
fisubrs
inc
push
jmp
loopne
pop
mov
xchg
mov
test
push
cmpsl
sbb
push
xchg
lds
inc
jbe
flds
gs
xor
xchg
aas
jl
and
sbb
mov
rcl
xchg
mov
jnp
push
mov
ds
das
xchg
ss
out
xchg
dec
dec
paddq
mov
and
cmp
mov
jns
xor
sbb
push
cmp
mov
jge
dec
pop
add
xor
pop
ds
or
jge
cmpsl
adc
push
loop
jmp
xchg
xchg
mov
nop
xchg
scas
inc
jecxz
clc
mov
push
cmpsb
ret
mov
cmpsb
jo
push
loope
mov
lahf
lahf
lret
ret
inc
out
lock
aas
scas
repz
add
outsl
sarl
pusha
movb
das
dec
fldenv
jle
sbb
xor
jns
inc
or
insb
test
out
loop
push
cmp
fdivrl
cmpsb
pop
add
loop
test
or
cmpsl
add
add
roll
clc
int3
into
xchg
dec
cmp
inc
mov
mov
mov
mov
pop
jl
push
xchg
cwtl
jmp
mov
jno
mov
les
es
mov
add
pop
and
stc
mov
jnp
lods
fmuls
pop
jns
adc
fisttpll
daa
lcall
mov
addl
fistl
add
inc
fstp
fs
iret
push
mov
cmp
sbb
sarb
test
iret
or
xchg
sub
les
mull
test
fsincos
repnz
scas
das
cmpsb
inc
ljmp
ja
xor
inc
repz
cmp
out
and
push
clc
stos
and
lea
ret
push
mov
cmp
arpl
popa
add
cmc
shr
insl
push
xor
cmpsl
push
loope
fcmovu
in
imul
sbb
pop
out
stos
pushf
dec
arpl
adc
push
push
pop
jb
mov
mov
push
adc
and
out
into
push
out
popl
dec
movsl
fcompl
cs
cli
in
pop
lret
in
pop
rcll
inc
stos
push
lret
pop
and
inc
addr16
loop
int
in
das
lds
test
sbb
xor
xchg
or
cmp
mov
outsb
shlb
inc
jae
and
movsb
mov
adc
loope
sub
xchg
adc
loop
repnz
pop
loope
cli
inc
push
push
call
divl
mov
mov
ds
cmp
lods
stos
popa
clc
adc
xor
mov
ror
jno
ljmp
imul
xchg
fs
jb
cmp
filds
adcl
call
and
enter
jle
mov
pop
mov
and
mov
pop
sahf
aam
push
dec
out
outsl
inc
mov
mov
int3
jge
icebp
mov
push
jne
cmpsl
sahf
mov
adc
dec
jae
aaa
in
inc
das
sbb
jmp
and
sbb
xor
push
dec
fnstenv
mov
sarl
lea
or
cltd
lret
or
loop
mov
mov
push
inc
mov
add
out
rcll
jb
outsb
sti
mov
mov
in
adc
mov
icebp
push
lcall
out
mov
mov
js
adc
push
sbb
outsb
dec
je
sahf
clc
pop
mov
or
push
jno
pop
nop
stc
rolb
inc
mov
js
xor
mov
pusha
leave
pop
mov
loop
lods
rcll
iret
out
mov
adc
xchg
stos
xor
out
push
sub
add
or
cwtl
inc
outsb
pop
scas
cmpsb
sbb
sbb
js
sub
mov
rolb
das
arpl
xor
or
aas
sbb
test
cmp
fists
mov
or
sub
jp
rclb
push
imul
sub
dec
jg
daa
pop
inc
fisubl
push
pushf
jecxz
cmpsl
dec
mov
push
out
adc
cwtl
jae
mul
insl
ss
sbb
sbb
loope
push
test
jae
inc
mov
xor
les
mov
and
shll
xor
xchg
outsb
push
xor
ret
push
mov
mov
sbb
cwtl
or
mov
push
cwtl
inc
flds
pop
sub
and
sbb
pop
imul
push
ljmp
les
rcll
es
addr16
sbb
rcrl
repnz
jge
pushf
rorl
push
adc
ss
mov
pop
fisttpl
cmp
stc
int
icebp
sub
mov
pop
imul
pop
xlat
lret
loop
cmpsb
orb
jmp
rcrl
arpl
js
clc
push
xor
push
xlat
lcall
cmp
mov
jb
out
decb
inc
and
outsl
adc
ja
movsb
jmp
xor
mov
movsb
add
and
test
mov
inc
and
dec
push
xlat
ss
aas
and
out
sub
dec
push
jmp
xor
sbb
fisubl
mov
ret
sbb
inc
pavgw
out
fwait
push
mov
pop
dec
xchg
std
fiadds
cmp
ds
dec
repnz
ljmp
popf
mov
sbb
lea
xor
pushf
test
sti
fisttpl
and
push
test
das
xchg
imul
jns
inc
pop
jnp
hlt
imul
sbb
mov
out
cmp
add
sub
lret
mov
push
aas
aam
test
mov
mov
pop
jl
dec
sbb
sbb
lods
sub
xor
and
das
movsl
xchg
sbb
ljmp
adc
repz
addb
pop
push
mov
addl
push
add
es
movsl
cmp
jne
xchg
mov
loope
inc
sbb
aas
and
jae
push
xlat
adc
in
ret
outsl
jae
je
mov
xchg
mov
jno
and
jne
xchg
mov
jae
push
aam
adc
repz
cmp
mov
ja
pop
in
fwait
das
fmuls
mov
setb
jno
dec
daa
scas
aam
adc
movsb
fistl
and
cmp
out
jns
sbb
push
mov
xchg
push
hlt
xor
dec
aad
pushl
lahf
loop
mov
arpl
loopne
lahf
cmp
pop
pusha
jnp
movsb
outsl
je
sbb
mov
add
push
cmpsb
mov
mov
dec
xchg
xchg
dec
sbb
shl
mov
mov
pop
fbstp
lds
xor
ja
pop
fisttpll
jecxz
cld
aaa
pop
jg
ret
clc
nop
mov
fbstp
cwtl
dec
inc
xor
push
xchg
cmp
decl
jl
arpl
xlat
je
lds
mov
pop
shll
dec
or
xor
cmp
mov
or
shrl
mov
cltd
pop
scas
loope
pop
pushf
dec
cwtl
jnp
fs
jmp
test
adcb
bound
inc
sbb
push
push
pop
outsb
imul
xor
sbb
sti
ffree
das
adcl
add
or
push
sub
hlt
and
bound
in
inc
xchg
add
movsb
mov
jb
sahf
mov
je
test
je
mov
lcall
jg
movsb
adc
xchg
xor
jle
inc
int3
scas
shr
xchg
into
push
rcll
das
xor
cmp
gs
testb
dec
bound
ret
ja
jg
in
mov
push
int
orl
data16
cmpsl
or
mov
sbb
sbb
mov
mov
xchg
jle
jecxz
add
test
stc
sbb
int
inc
pop
push
lret
call
xchg
add
cli
int3
sti
xchg
outsl
in
sahf
jp
sbb
mov
outsb
sub
idivb
xlat
repnz
xlat
pop
cli
jo
mov
and
mov
jecxz
push
cltd
je
das
popa
push
test
xor
lods
pop
xor
cmp
dec
push
and
fdivp
int3
jecxz
das
aaa
mov
sbb
pusha
dec
or
or
or
enter
push
xchg
lea
das
push
and
mov
mov
shlb
jae
fcmovu
mov
sbb
push
div
enter
inc
cmp
paddsw
sbb
fistl
push
pop
sub
inc
fwait
xor
xor
ja
xor
push
ss
pop
dec
xor
in
xchg
dec
popf
inc
loopne
and
add
sbb
gs
clc
mov
out
cmp
pop
dec
test
xor
aam
mov
jp
mov
dec
xor
in
jecxz
mov
call
xor
sbb
add
dec
jae
add
push
sub
dec
outsl
jae
sbb
mov
xor
pop
out
orb
sbb
sbb
cmp
in
test
mov
pop
out
xchg
js
rcl
jbe
push
xor
mov
sbb
push
adc
arpl
cmp
sahf
mov
push
pusha
mov
lods
fidivrs
filds
sbb
repnz
lock
jg
push
jo
push
gs
int3
sub
sub
sbb
clc
sbb
dec
test
data16
adc
hlt
stos
inc
mov
fs
pop
and
mov
pop
mov
push
insl
imul
sub
xor
ror
jo
sahf
xchg
mov
mov
fwait
and
add
add
aaa
icebp
and
add
lcall
scas
cmpsl
or
mov
notb
les
xor
mov
push
push
mov
jns
out
test
jl
push
mov
push
lret
add
negl
int
movsb
lahf
pop
int
stos
popa
stos
or
mov
cmp
mov
sbb
dec
fdivl
lock
ficompl
aaa
lcall
pop
imul
out
mov
ss
sti
sar
mov
mov
in
xchg
push
lahf
push
shr
lods
or
jns
icebp
mov
loope
in
jns
adc
aaa
nop
js
outsb
mov
sbb
xor
mov
lea
lret
repz
mov
lock
clc
pop
jbe
mov
dec
fsubs
into
cltd
loope
out
into
adc
mov
es
or
adc
insb
dec
scas
out
cli
mov
fucompp
mov
imulb
sub
cmc
loop
lock
sti
mov
movsb
sub
ljmp
jnp
jb
ja
nop
clc
mov
mov
loopne
mov
ss
cwtl
pop
mov
adc
daa
xor
dec
jl
and
leave
adc
ret
mov
dec
or
cmp
into
pop
iret
xchg
fidivl
jl
fsubp
loope
pop
ret
adc
inc
ret
test
push
lds
adc
mov
pop
inc
aas
jle
jp
inc
popf
ss
lret
xchg
xchg
jge
sbb
movsb
add
xor
mov
fdivr
stos
fwait
inc
outsl
clc
lock
sbb
pop
or
mov
mov
mov
aas
cmp
inc
pushf
fldcw
cmp
mov
repnz
lret
pop
dec
popfw
cltd
pop
inc
test
sbb
and
xlat
and
mov
pop
mov
mov
xor
imul
jbe
sarl
fstl
inc
mov
dec
dec
aas
mov
and
inc
ja
fcmovb
mov
loope
test
sbb
fnsave
mov
inc
jbe
jle
cmc
sub
fcoms
push
dec
int
pop
outsb
push
test
outsb
loopne
inc
mov
pusha
test
aam
das
cmpsl
mov
mov
mov
lahf
jg
sbb
out
in
mov
mov
xchg
in
mov
push
daa
mov
xchg
cmp
std
jnp
addr16
pop
jns
js
pop
dec
xor
cmc
mov
gs
inc
adc
pop
xchg
sbb
dec
xlat
adc
xor
cmp
imul
arpl
jb
jne
cmp
pop
lret
lods
xor
fs
stos
int3
push
lahf
push
fisttpll
pop
pop
mov
cmp
outsl
cmp
in
je
jb
jbe
pop
mov
sub
inc
fidivrs
jge
fdivr
arpl
pop
pop
or
imul
pushf
inc
test
push
adcb
lock
sub
lret
adc
add
dec
xor
or
addr16
sub
sarb
or
jae
das
jo
mov
lea
lock
int3
pop
jg
loop
or
or
xchg
mov
repnz
dec
in
aam
push
fisubrl
jmp
jge
lret
add
jp
and
in
stc
sub
mov
mov
push
push
hlt
pop
ficompl
cmp
jbe
lret
and
cltd
inc
loope
or
mov
push
ds
and
lds
xlat
out
push
mov
aas
loop
sti
fistl
xchg
mov
mov
add
js
jmp
icebp
or
pop
test
loopne
dec
push
out
lds
jo
pop
imulb
scas
movsl
pop
jo
pop
cltd
rol
pop
lret
daa
adcb
pop
mov
mov
ds
sub
or
mov
nop
jbe
sbb
mov
xchg
subb
lods
add
stos
or
stos
dec
jmp
adc
adc
negl
in
xchg
shrl
inc
mov
inc
jb
jge
xchg
aas
jns
movsb
aas
andl
insb
dec
fs
test
je
movsl
pop
lahf
and
and
push
mov
pop
xor
xchg
clc
aam
pop
or
outsb
test
into
push
hlt
push
pop
push
lods
jl
adc
add
xor
insb
push
pop
testl
adc
jl
mov
outsb
mov
mov
adc
shlb
scas
lea
fdivr
push
sub
jbe
add
in
mov
adcb
adc
xchg
cmp
mov
or
je
sbb
lahf
ss
adc
xchg
jg,pt
lea
mov
xchg
or
test
sub
adc
lret
sub
lret
shrl
push
mov
sbb
sbb
rcr
jecxz
iret
mov
insl
sub
insl
sub
test
lds
pop
push
out
push
fs
jno
dec
mov
fimuls
jo
mov
stos
sbbb
ror
jne
inc
mov
xchg
pop
lods
repnz
adc
loop
shr
xlat
call
push
jle
repnz
mov
in
dec
and
test
cli
loop
sub
cmp
dec
fnsave
out
aad
bound
cmpsb
dec
addl
push
pusha
pop
cmp
adc
fs
push
sysret
iret
jno
push
addr16
jmp
and
inc
jnp
sub
leave
and
popa
test
rcrl
test
sub
and
add
jle
mov
into
add
and
stc
mov
mov
jg
movsl
xlat
cmp
pop
es
mov
sub
push
cmp
inc
out
sbb
enter
out
mov
dec
je
mov
add
inc
scas
in
aam
popl
out
les
mov
add
mov
stos
lods
pcmpgtw
dec
lods
aad
push
sub
sub
add
mov
fidivrs
lea
pop
xor
fdivs
rclb
nop
arpl
fimull
inc
pop
mov
shll
sub
aad
fwait
mov
rcrl
fstpl
and
mov
pop
push
sub
subb
add
stos
jp
call
and
loope
test
mov
in
jmp
dec
cli
shrl
dec
or
xchg
insl
pop
jb
dec
mov
jp
icebp
or
or
call
flds
xor
aaa
xor
adc
sbb
mov
call
es
in
xchg
jo
test
xor
adc
insb
mov
stc
inc
test
xchg
mov
jno
sub
repz
test
dec
pop
and
xor
jl
pop
mov
xchg
add
clc
mov
mov
ds
pop
sub
popa
dec
jae
mov
pop
gs
std
cmc
rolb
inc
test
mov
es
js
mov
jb
shll
push
mov
je
idivb
test
jecxz
scas
sbb
popa
pop
das
pop
inc
loopne
pop
pop
push
rorl
mov
insb
cmpsb
mov
ret
and
fmuls
enter
in
push
pop
dec
lock
daa
sti
sub
popf
fisubrs
jae
test
pop
test
jecxz
push
stc
mov
leave
mov
pushf
and
movsl
xchg
jne
cmpb
lock
jno
pop
lahf
pop
test
mov
xchg
div
movsb
dec
or
inc
rcll
push
push
mov
jl
sbb
cwtl
mov
in
in
mov
mov
lahf
xchg
adc
divl
adc
test
fcoml
mov
scas
ds
rol
and
out
inc
dec
pop
inc
cmp
cmp
and
cld
or
js
stos
std
fldl
mov
cmp
mov
fidivl
cmp
lock
sti
mov
add
mov
pop
in
pop
jl
mov
jp
lods
iret
in
clc
push
adc
push
cld
sub
mov
and
cld
mov
loopne
mov
add
sbb
call
sar
cli
pop
inc
jp
mov
xchg
jo
adc
packssdw
stc
test
cmpsb
dec
pop
cmpsl
adc
push
sbb
cli
inc
fidivl
movsb
rorb
mov
and
cli
test
dec
int3
sub
xchg
add
icebp
pop
int3
inc
adc
daa
dec
pop
loopne
std
inc
jp
jns
mov
sub
outsb
sub
or
dec
pop
mov
fcoms
adc
sahf
inc
dec
pop
cmpsb
mov
pop
sbb
sbb
push
fsubrl
pop
inc
push
cs
adc
or
sbb
jae
iret
lea
mov
hlt
mov
mov
sub
out
cmp
fs
mov
arpl
adc
mov
pusha
mov
adc
ja
outsb
mov
adc
int
scas
scas
sbb
lret
ret
shll
xchg
pusha
inc
cmp
mov
adc
inc
mov
insb
sub
into
cmp
push
nop
jl
movsb
dec
add
and
addl
sub
data16
and
out
mulb
sub
aad
sbb
xchg
add
and
add
or
out
mov
push
test
shll
into
mov
fbstp
imul
stos
test
jp
xchg
xor
inc
faddl
push
pop
imul
dec
sub
xchg
lock
jge
sub
push
ror
sbbb
jge
xor
ljmp
xchg
sarb
leave
ss
into
shr
out
scas
jae
mov
dec
inc
xlat
bound
dec
sub
int3
rcr
sbb
xchg
ja
mov
pop
insl
inc
lret
into
in
int
and
outsl
lea
dec
movsb
fs
rcll
arpl
fidivrl
cmp
fcoml
cmp
sti
fsubrs
fstpl
push
push
movsb
sub
adc
push
add
cmp
pop
xorl
or
mov
icebp
inc
jmp
cs
in
scas
enter
aas
sub
mov
out
sahf
jg
pop
sub
cmpsb
movsb
mov
fcomi
sub
push
pop
xchg
xor
loop
call
jbe
nop
xchg
xchg
cmp
mov
mov
rcrb
adc
mov
imul
ds
jae
xchg
sbb
adc
xor
xchg
jno
jnp
stos
test
dec
cmc
dec
xchg
xchg
clc
std
insb
mov
sub
in
test
inc
mov
das
rcr
dec
inc
nop
scas
add
std
push
sbb
mov
fldenv
fdivrs
and
daa
aam
jbe
cmp
scas
or
out
sbb
jg
sub
bound
push
gs
fs
insl
xlat
mov
pop
mov
add
pop
cli
mov
repnz
jnp
mov
adc
inc
mov
xor
push
push
lret
in
aam
push
inc
and
adc
mov
cmp
add
mov
bound
cwtl
mov
or
mov
sbb
cmp
sbb
stc
inc
cld
inc
mov
sbb
dec
outsb
cmc
repz
and
mov
add
fsubrs
xchg
pop
push
mov
sub
sbbl
leave
repnz
bnd
xchg
mov
cmp
mov
nop
xor
xor
add
mov
sahf
leave
rcrb
arpl
xchg
hlt
jecxz
dec
mov
jmp
insl
rcrb
test
mov
mov
lods
sub
call
ja
insl
push
hlt
mov
sbb
jbe
je
bnd
xor
mov
mov
xchg
pop
sub
push
fwait
add
jae
mul
mov
mov
and
movsl
das
xchg
mov
sahf
pop
mov
es
std
mov
cmpsb
inc
sar
repnz
xlat
rol
add
loop
ds
push
movaps
decl
add
cwtl
add
xor
xor
push
mov
cmc
and
imul
es
cld
xor
aam
fdivl
mov
dec
icebp
movsb
pop
adc
pop
pop
sub
jg
add
xor
jae
dec
decl
push
aas
rcll
ja
inc
leave
or
lcall
xchg
lods
mov
xor
sbb
fsubrl
inc
test
inc
mov
test
cmp
add
push
stc
fsubl
int3
out
mov
cwtl
rcrl
jne
pushf
mov
mov
in
add
mov
call
sbb
movsl
cmp
add
push
dec
dec
pop
and
fwait
in
mov
sbb
cmp
mov
mov
daa
and
xor
adc
and
ret
mov
test
add
loopne
and
lds
xchg
in
mov
xor
mov
lahf
loope
outsl
mov
inc
xor
insl
jg
jns
lahf
cli
ret
arpl
mov
mov
punpckhwd
jp
clc
dec
pop
xchg
movsb
jo
pop
mov
jo
insl
jae
int
sub
jo
es
fwait
inc
loop
out
pop
mov
adc
aad
insl
in
cmp
lcall
lods
sub
cmp
clc
push
dec
fidivrs
xchg
repnz
enter
nop
add
pushf
push
mov
xor
in
or
call
enter
xchg
pop
ljmp
sbb
mov
sbb
pop
mov
call
push
jp
mov
rorl
fcmovnb
push
jbe
lock
dec
cli
push
push
cmp
loopne
push
jb
rclb
loope
adc
decb
aad
pop
shll
jo
inc
push
inc
aas
enter
xor
test
rcrl
mov
popf
xor
xlat
xchg
test
insb
mov
inc
ja
push
mov
out
pop
fwait
sbb
loopne
outsl
out
xor
jo
mov
fildll
push
xor
pop
mov
data16
ret
aas
scas
mov
adc
xchg
jb
cmpb
test
add
out
xchg
dec
cld
lahf
mov
into
incb
mov
addl
popf
cmc
xchg
mov
fmuls
push
jg
loopne
aam
shll
andl
pop
sbb
fadd
mov
imul
int
sub
add
js
int
cmp
dec
pop
rol
inc
psrlq
lret
insb
dec
pushf
leave
jg
push
pop
pop
jne
or
cmc
imul
sbb
sub
adc
mov
js
inc
xor
mov
stc
loope
push
cmpb
mov
dec
inc
test
xchg
cwtl
lahf
add
xlat
mov
fwait
repnz
add
mov
shl
pop
mov
outsb
cmp
mov
xchg
popf
push
aam
stos
aaa
in
adc
cld
sahf
loop
pop
inc
push
movsl
dec
xor
addr16
xchg
lods
xor
aaa
pop
add
push
and
decl
mov
mov
int3
cmp
and
enter
or
repnz
adc
dec
lock
out
mov
daa
ss
pop
and
roll
mov
in
lret
push
insl
jo
xchg
clc
arpl
inc
andl
and
or
push
pop
addr16
sub
push
or
sar
xchg
xchg
mov
sub
or
cmp
sti
call
enter
mov
mov
stc
xchg
in
popa
inc
jp
out
push
test
jno
loope
popa
lea
lret
out
mov
adc
dec
jne
lock
fisubrs
fnstenv
pop
pop
jne
xchg
repz
pop
sbb
cld
mov
out
fs
or
inc
inc
pop
inc
mov
dec
adc
cmp
sub
pop
pop
test
pop
popf
repnz
les
gs
test
sbb
jle
lahf
and
xchg
mov
insl
add
aas
fstpt
rcrb
mov
shl
or
pusha
iret
mov
xchg
push
xor
jno
mov
pop
sbb
pushf
ficoms
bound
outsb
mov
imul
aam
aam
dec
jbe
xchg
sub
add
loopne
nop
push
xchg
in
mov
dec
rorb
stos
test
pop
repnz
in
xor
mov
mov
loopne
das
jge
divl
cs
fiaddl
sbb
fcoml
cmp
add
cld
mov
loope
hlt
movsb
bound
in
int3
push
pop
movsb
fists
sbb
repz
inc
sbb
outsb
jne
mov
ja
cs
test
in
cmp
test
xor
sub
hlt
xor
mov
into
inc
movsb
cmp
and
ja
int
push
fdiv
in
xor
cmp
test
stos
int
mov
mov
xchg
push
lahf
dec
ss
imul
jl
das
mov
nop
mov
out
cmpsb
push
adcb
jae
cmp
xlat
fadd
lcall
rcll
clc
mov
and
mov
push
jno
ret
sub
in
cmp
sub
andb
mov
lahf
cmpsb
rcrb
adc
cmp
bound
out
mov
lods
xchg
add
psubw
leave
cmpb
jbe
cmp
push
inc
xor
xor
nop
mov
sarb
pop
pop
dec
push
jb
cwtl
xchg
ljmp
xchg
loopne
rcrl
fsubl
push
xchg
xorl
out
xor
sub
inc
mov
cmpsb
sti
add
push
sub
jns
in
xchg
or
mov
fdivrs
inc
jg
shlb
aad
cmp
cmp
and
jae
mov
mov
mov
nop
stc
inc
jno
fwait
aad
pop
fdivs
shlb
sbb
sbb
out
xchg
sbb
int
dec
hlt
lret
movsb
ljmp
fsubrl
mov
jecxz
sbb
sub
jl
mov
xchg
xchg
mov
std
movsl
xchg
jno
pop
xchg
lret
mov
pop
psllw
ljmp
push
lea
dec
xchg
adc
xchg
fs
jl
shlb
mov
out
adc
xor
mov
mov
or
xchg
jo
outsl
movsb
ja
pop
repz
cmpsb
frstor
popa
outsl
sbb
dec
inc
sbb
idiv
scas
add
insl
pop
jmp
ss
cmpsl
nop
nop
loopne
lock
xchg
sbb
fidivl
aam
mov
pop
loope
scas
lds
sub
int3
or
push
mov
inc
orb
pop
xchg
lret
mov
and
sahf
sbb
int3
or
pop
movsl
add
jo
jg
and
loop
mov
mov
pop
movsl
out
xor
inc
sub
in
xor
ret
xchg
mov
popf
xlat
mov
mov
dec
jge
mov
pop
cmc
into
sub
adc
adc
lahf
mov
jmp
cltd
movd
mov
orb
fidivl
cld
fnstcw
xor
xor
cltd
movl
inc
nop
sar
jae
popf
pop
addr16
faddp
cmpsb
adc
mov
cmp
or
add
cld
shl
xchg
xor
mov
mov
aam
add
insl
pop
mov
mov
nop
and
je
pop
test
repnz
push
add
push
sub
jge
and
dec
mov
push
fisttps
cmp
sub
roll
cmp
xchg
ljmp
shll
in
std
orl
mov
jg
pop
hlt
inc
ffreep
push
aas
orb
mov
mov
fwait
xchg
cmpsl
test
cltd
inc
mov
sub
ss
bound
fdivr
xchg
pop
adc
rorl
mov
repz
and
mov
pushf
xchg
out
fcoml
push
out
inc
inc
loope
loopne
dec
scas
pop
in
inc
std
hlt
xchg
imul
out
mov
xor
cmp
lods
push
jp
and
subb
inc
xor
sub
and
dec
mov
xlat
sbb
mov
or
or
jmp
bound
push
mov
in
and
popa
cltd
outsl
test
jb
dec
mov
iret
ret
inc
lea
add
into
pop
xchg
cmp
neg
arpl
jnp
jb
ret
or
es
call
cmp
aas
push
loopne
sub
ljmp
fcmovu
xchg
stc
dec
in
push
lea
cmp
and
repnz
clc
ja
inc
lret
nop
add
xchg
mov
mov
insb
shll
cmpl
add
ret
mov
mov
push
xchg
imul
mov
push
jp
sub
popa
jle
fdivl
dec
sub
in
iret
dec
rcrb
dec
or
sti
ror
pushf
mov
ljmp
mov
dec
movsl
aad
mov
lcall
cwtl
leave
cmp
sbb
ja
sbb
xchg
lahf
inc
sbb
aaa
daa
ret
xchg
loopne
test
push
test
ja
sbb
movsl
decb
lahf
sbb
outsl
mov
cmp
fidivs
pop
adc
arpl
pop
mov
cmpsb
pop
rcrl
icebp
xor
pop
pop
popa
pop
fildl
retw
push
out
call
aaa
sub
scas
rorb
pop
cmp
mov
sti
iret
xchg
in
leave
mov
add
dec
mov
pop
in
push
mov
cmp
mov
inc
stc
mov
inc
add
stc
mov
push
fldenv
int
mov
or
clc
xorl
roll
jge
aad
mov
xchg
pop
inc
dec
xchg
mov
or
addr16
rcr
shrl
in
mov
add
aaa
repz
and
repnz
outsl
add
mov
call
pusha
test
jge
jno
fnstsw
out
pushl
adc
adc
add
cmp
cli
or
dec
mov
pop
jne
inc
out
imul
aaa
sub
pop
mov
fsubrs
cwtl
dec
daa
mov
sub
jmp
inc
lock
push
sub
mov
stos
cmp
jp
mov
mov
jecxz
xchg
xchg
mov
in
adc
cmpsb
xchg
inc
mov
sbb
cli
adc
xchg
mov
jnp
push
nop
pop
leave
add
clc
jne
mov
out
sbbb
pop
cmp
pop
outsb
jp
lods
aam
mov
push
dec
pop
dec
jnp
or
xlat
pop
shlb
test
outsl
in
jg
scas
mov
ror
push
divb
ss
or
and
adc
imul
test
into
inc
clc
out
mov
and
nop
cmpsl
icebp
xor
ds
pop
scas
inc
hlt
push
call
mov
adc
es
jbe
xor
test
or
adc
mov
ficoml
mov
inc
movsb
mov
les
test
sahf
pop
xor
push
cmp
sahf
xor
daa
and
push
or
stos
and
sbb
sub
xchg
sub
aad
cmp
js
inc
inc
mov
push
jae
push
cli
inc
in
inc
mov
push
inc
out
ret
pushf
cli
andb
into
imul
mov
adc
jecxz
mov
add
xchg
outsl
sub
dec
adc
std
shrl
lea
js
aam
pop
bnd
mov
cmp
in
pop
lea
mov
or
push
add
clc
ss
hlt
add
add
aad
xor
mov
enter
negb
push
jae
mov
push
insl
adcb
rorl
ds
insb
sbb
push
pop
pushf
jle
orl
fsubr
mov
or
or
adc
push
test
xchg
int
push
push
pop
and
jl
sub
mov
outsl
cmp
xchg
cmc
mov
insb
mov
lret
push
lds
pop
jb
sbb
div
jo
inc
ljmp
popf
mov
xchg
loop
mov
jmp
frstor
pop
leave
xchg
clc
sub
es
mov
or
int
sub
mov
sub
minps
hlt
daa
sti
mov
insl
fsubl
jecxz
cltd
cmp
test
rol
xor
mov
inc
jp
shlb
hlt
insl
dec
bound
fwait
push
and
and
rcl
lcall
aam
ret
xchg
inc
add
cltd
into
sub
jae
cli
and
sti
lcall
mov
shrl
aam
out
mov
aad
add
inc
xchg
dec
push
mov
insl
sbb
pop
stos
and
je
inc
loopne
sub
in
leave
push
mov
fcompl
imul
xor
in
xlat
sbb
push
inc
lock
inc
cmp
push
sbb
adc
jg
mov
pop
jmp
cmpsb
mov
es
push
out
mov
filds
xor
test
repnz
mov
in
mov
jmp
dec
clc
inc
pop
sub
repz
or
cli
arpl
outsl
adc
sbb
lret
or
stc
inc
cmc
movsb
loopne
lret
rorb
sbb
lret
ja
lods
mov
nop
cmp
push
insl
mov
xor
dec
loope
adc
mov
ljmp
test
jp,pt
lods
dec
imul
cmp
or
in
popa
sbb
pop
inc
push
and
cltd
xor
mov
jg
xchg
std
jp
mov
push
xlat
or
dec
call
iret
xorl
push
sbb
shlb
pop
cmp
sbb
ss
cmp
sbb
xchg
adc
in
lods
inc
call
xor
add
movsl
push
dec
jae
adc
push
int
test
xchg
scas
mov
aaa
mov
movb
mov
adc
cmp
add
fldenv
cltd
and
test
lods
fs
xor
add
sub
test
jmp
or
add
sbb
push
insl
sbb
les
inc
or
mov
popa
testb
outsl
or
arpl
mov
cli
xor
xchg
sahf
or
sbb
or
sbb
xchg
test
mov
mov
call
pop
xchg
dec
jg
ret
std
imul
outsl
mov
cli
jns
test
pop
push
xchg
xchg
xlat
insl
call
push
mov
mov
outsl
lret
outsb
dec
cmpsl
inc
iret
std
daa
xchg
adc
dec
mov
mov
or
aaa
insb
pop
imul
stos
out
inc
and
shr
ja
cmp
dec
jmp
cmp
xorl
cmpsb
cmp
sbb
pop
jo
in
fst
das
pop
pop
stc
add
pop
imulb
shlw
sbb
and
outsl
sub
rol
dec
lcallw
jge
lea
push
stc
loop
enter
hlt
lock
insb
fdivp
or
mov
push
or
out
out
aam
xor
mov
mov
xor
cmpsl
aam
popf
fwait
mov
insb
dec
movsb
fisttpl
iret
push
cmpsb
pop
dec
icebp
inc
int3
das
mov
aam
jge
lods
cmp
xchg
push
cwtl
ret
fstps
out
cmp
scas
push
sahf
mov
imul
push
movsl
push
andb
push
sub
cmp
lods
in
imul
xor
dec
add
mov
xchg
cmpsl
xor
dec
subl
andb
jo
xlat
adc
xor
stos
pop
pop
in
mov
dec
lods
dec
insl
cmpsb
call
cmpl
cmp
sahf
std
es
aas
cmp
es
cmp
inc
jnp
xchg
insb
test
push
xor
lods
jge
xchg
mov
pop
cmp
cmp
adc
jno
popa
nop
jge
mov
cld
in
std
ds
push
sub
fmul
dec
adc
mov
aam
inc
jb
cmpsb
imul
adc
sub
inc
or
and
into
add
in
shlb
push
cmp
mov
xchg
js
fisubrl
lret
pop
jecxz
inc
adc
add
lret
fbstp
imul
aaa
out
pop
iret
mov
dec
test
add
test
xchg
cmp
jo
mov
sub
xchg
fisttps
test
xchg
xor
sahf
adc
lret
mov
pop
mov
adc
rcrl
popa
inc
out
fsubs
jle
dec
fcomps
imul
pop
popa
aas
hlt
mov
jmp
scas
jns
leave
jbe
xor
jbe
ja
or
dec
mov
in
pop
jp
jmp
clc
in
dec
nop
aas
fistpl
bswap
xor
gs
stos
mov
cmc
push
inc
jnp
cmp
adc
cmc
iret
mov
test
cwtl
jnp
sub
shlb
xchg
sti
or
inc
cmp
adc
mov
xchg
mov
push
jl
sub
cli
adcb
mov
das
bound
inc
in
imul
pop
loopne
mov
mov
into
clc
mov
lret
pop
repnz
xchg
insl
lds
or
jno
imul
add
aaa
add
jnp
mov
movsb
arpl
mov
repz
movsl
jl
xor
aam
and
mov
aam
sahf
pop
rol
and
mov
bound
mov
sub
ljmp
adc
in
mov
jl
add
jno
sbb
lcall
jmp
xor
outsb
push
or
andb
jge
push
ljmp
stc
push
fcomps
movsb
popa
leave
bound
cmpsl
insb
add
ljmp
out
popa
out
and
xchg
mov
fdivrl
das
inc
mov
lock
bound
mov
pop
imul
fwait
mov
mov
fidivs
mov
jns
pop
dec
cmp
sub
cs
mov
hlt
lret
inc
stos
and
cmp
push
sbb
and
fnstenv
hlt
movsb
cmp
xchg
ret
adc
fcmovnu
mov
sbb
popf
add
inc
lret
subl
fwait
cmp
lods
mov
cmp
stos
cwtl
sbb
xlat
mov
es
fiadds
bound
mov
into
or
adc
sar
pop
ja
loopne
mov
orl
pop
add
adc
sbb
xchg
adc
xor
add
xor
ds
jns
popa
imul
andl
enter
incb
jle
mov
sub
push
mov
mov
cltd
cmc
sbb
cmp
xlat
ja
into
xor
js
arpl
and
inc
iret
jecxz
jp
push
sbb
out
sub
aad
sub
pop
in
dec
hlt
and
mov
cli
or
inc
add
stc
lds
cwtl
xchg
pop
xchg
xor
sub
and
inc
pop
and
mov
push
dec
jp
es
lret
or
sbb
mov
addl
and
scas
jmp
rorl
cltd
jge
dec
aad
mov
xchg
adc
and
jae
ret
stos
sbb
cli
lods
in
pushf
pop
shlb
test
xor
push
sbb
js
xor
or
jg
cmpsb
pop
inc
jl
cwtl
xchg
fwait
xor
fbld
add
push
jnp
loop
dec
pusha
stos
add
xor
mov
inc
mov
cmp
imul
adc
cs
movsb
push
adc
mov
sti
into
scas
and
mov
lret
cmp
ljmp
in
adc
xchg
inc
sbb
shlb
jp
lock
data16
xchg
out
addl
dec
shlb
jnp
add
sub
lock
jnp
sub
push
pushf
xor
lods
mov
jb
lods
xor
bound
out
mov
div
scas
call
stc
popa
insl
int3
ret
and
rcr
insl
popa
sbb
adc
lcall
add
std
lret
cmp
push
fs
movsl
xor
dec
xchg
jle
jb
sbb
push
cltd
or
adc
repz
mov
and
les
idivl
out
mov
repz
outsl
mov
js
out
sarl
jae
orb
les
es
mov
mov
sub
std
adc
mov
mov
sub
cmp
call
pusha
xor
clc
jne
leave
pop
mov
lret
xor
aaa
pushf
mov
add
andb
ret
pop
je
push
adc
push
pop
jb
pop
push
cmpsb
push
sbb
mov
out
xchg
xor
sub
cmp
dec
mov
add
in
int
push
loope
int
jno
xchg
add
pop
push
dec
sub
jne
jg
mov
sbb
stos
pop
icebp
adc
leave
out
out
or
jle
cmp
push
mov
dec
insl
jmp
movsb
jae
int
movsl
cmp
dec
fistl
mov
dec
rol
jo
mov
jg
xchg
test
jp
dec
mov
lret
xchg
lods
mov
push
out
rcrl
jmp
fnsave
or
lods
test
fs
cwtl
testb
lds
std
sbb
fistps
fwait
in
pop
jmp
fwait
in
xchg
inc
scas
cmp
xor
and
adc
xor
loope
pop
fildl
and
push
inc
lahf
mov
ret
adc
lods
movsb
cld
out
push
les
cmpb
fidivl
fdivrl
add
add
dec
mov
lcall
adc
nop
push
adc
xchg
add
idivl
mov
adc
push
ss
and
test
mov
jg
add
adc
ret
insl
sarl
pop
ror
push
iret
jmp
out
in
aaa
inc
test
mov
cltd
shll
aad
maxps
jge
xlat
and
mov
mov
cld
sti
push
pusha
jmp
sbbl
pop
mov
sti
pop
test
cli
and
jmp
out
cmpsl
arpl
sbb
cmp
aas
add
jmp
cli
data16
or
and
mov
lods
jb
sbb
jp
fsts
xchg
cltd
aad
or
sahf
sub
das
push
mov
inc
mov
mov
enter
into
stos
movsb
out
lods
or
dec
popf
into
mov
sbb
loope
or
push
bound
jae
lret
push
fwait
mov
mov
lock
ret
xrstors
cs
pushf
out
addr16
in
xlat
lods
cli
push
push
aaa
in
inc
adc
loopne
cmp
imul
fcomps
call
iret
sub
shl
xchg
add
lock
push
icebp
ljmp
inc
jmp
inc
cwtl
or
sti
loope
lcall
movsl
mov
or
data16
and
push
das
enter
faddl
pop
es
fdivr
jns
and
cmpsb
cmp
add
int3
popf
xlat
sub
sbb
in
movsb
dec
push
movl
loope
test
mov
cwtl
mov
xor
popf
xor
test
shll
mov
js
ja
into
xor
inc
int3
data16
or
cmpsl
jno
ds
sbb
call
fwait
add
mov
jmp
mov
ja
sbb
mov
popa
sub
popa
jecxz
orl
add
out
aas
push
or
shl
push
cmp
aaa
mov
int3
cmc
xlat
mov
and
aaa
inc
and
test
movsl
inc
xchg
mov
pop
shlb
lods
hlt
or
mov
and
cwtl
jo
push
mov
aad
sbb
xchg
or
mov
cmc
mov
or
cmpsb
addb
mov
xor
push
jl
shrb
enter
pop
xor
insl
pop
frstor
jbe
movsl
icebp
mov
sbb
inc
inc
and
dec
pushl
stos
lods
test
aas
int3
sbb
inc
dec
jbe
mov
xor
adc
push
imul
mov
std
loop
in
dec
sarl
faddl
jg
push
add
out
xlat
pop
mov
jge
rcl
and
out
sbb
jmp
aaa
add
pusha
outsb
sti
loope
cmp
shll
dec
pushw
mov
pop
clc
iret
imul
mov
lret
mov
pushf
adc
aaa
movsb
shlb
push
into
dec
and
lahf
or
in
es
jae,pt
sbb
or
in
iret
rcr
dec
ficomps
insl
inc
and
inc
push
jae
or
mov
mov
mov
jecxz
call
data16
iret
int
je
pusha
int
sub
inc
jbe
adc
xchg
sbb
jecxz
pop
jae
dec
sbb
add
pop
cld
cmp
sti
jg
dec
push
add
sub
adc
fsubrs
adc
leave
cwtl
fstpt
push
jmp
insl
call
test
inc
mov
shr
add
xchg
lret
out
or
mov
xor
mov
insb
mov
int
push
push
xchg
pop
aad
lret
xchg
cmp
jns
out
fs
jnp
xor
add
inc
ds
aaa
cmp
and
in
fdivs
xchg
cmp
xor
pop
and
cld
imul
push
and
jge
pop
shll
out
in
pop
popf
rorl
xchg
fdivrs
fistl
pop
ret
mov
mov
inc
repnz
cli
pop
inc
sbb
jno
add
out
gs
repnz
test
jnp
cli
stc
add
fiaddl
inc
dec
ret
or
cmp
out
popf
test
pop
lods
adc
movsb
dec
and
sbb
cltd
jno
pop
rcrl
popa
push
ljmp
fwait
mov
stos
pop
mov
pop
jb
out
outsb
pop
xchg
add
shrl
fdivrs
daa
stos
stc
enter
cmp
test
arpl
add
in
adc
call
xchg
fistpl
cld
push
adc
inc
test
push
mov
aad
icebp
lret
mov
pop
cmp
cmp
test
mov
movsl
scas
loopne
sbb
daa
inc
push
das
cmpsb
fidivs
outsl
adc
into
sbb
mov
in
add
mov
jnp
rol
push
daa
lock
pop
inc
lods
push
xchg
lods
jne
jb
fcoml
rclb
push
inc
data16
mov
aam
and
mov
rcrl
jb
jno
mov
mov
mov
add
xchg
daa
fcomps
add
jmp
jle
insl
jg
mov
add
out
scas
in
add
adcb
out
pushl
mov
sub
mov
inc
out
jne
mov
cmp
mov
stos
dec
sub
sbb
xchg
or
iret
cmp
push
pop
jne
scas
sub
lds
or
jge
mov
push
push
in
pop
mov
sbb
pop
adc
leave
mov
test
push
cmpsb
sarl
fs
scas
arpl
add
popf
sbb
mov
and
in
inc
loope
stos
fstp
nop
lret
mov
pop
ds
in
mov
repz
shrl
cmp
data16
pop
enter
pop
push
push
popa
pop
jle
sbbb
mov
jg
fimull
mov
mov
into
jp
pop
xor
mov
outsb
imul
mov
jbe
jns
lods
sbbb
jp
sub
push
pop
xor
pop
inc
dec
jne
mov
int3
mov
add
and
in
bound
jmp
ljmp
inc
addr16
faddl
or
inc
sbb
daa
xlat
fstps
ljmp
mov
cmp
cmp
push
outsl
xor
cltd
notl
add
and
in
cmp
add
xor
fidivs
sub
cs
stos
je
out
cmpsl
or
pushf
lock
sbb
test
inc
mov
jge
sbb
enter
push
inc
fs
out
lcall
cmp
inc
push
xchg
xchg
in
and
adc
pop
sub
addr16
test
out
jnp
or
stos
test
stos
adc
stc
addb
adc
and
xor
add
push
jmp
leave
into
ja
add
cwtl
sub
cltd
jmp
test
fcmovu
scas
idivl
fucom
fisttpl
out
int
and
or
lahf
fwait
sbbl
mov
and
int
push
jg
inc
notl
sub
inc
adc
xor
out
daa
fisubs
add
jmp
mov
cmc
icebp
and
cltd
orb
clc
mov
add
adc
mov
mov
and
xor
add
ja
scas
in
lret
out
js
mov
out
fwait
test
dec
lds
lret
mov
leave
insl
pop
addl
negl
jmp
ljmp
dec
aam
loop
cmovle
fcomps
nop
xchg
xchg
stos
or
xor
pop
out
movsb
decb
imul
loope
mov
pop
pop
test
mov
icebp
pop
scas
aad
fs
or
sub
jae
gs
insb
ret
cmp
sti
cmp
std
mov
inc
add
std
stos
lret
stos
add
repz
pusha
xor
dec
xchg
imul
xchg
inc
imul
mov
xchg
sbb
out
int
pop
cmpsl
int
stc
pop
jb
repnz
data16
dec
push
popa
ja
inc
cmp
dec
scas
aas
imul
fbld
or
popa
aam
loope
int
jno
xor
cmp
mov
xchg
xchg
add
cld
push
lret
pushf
cwtl
xchg
andl
mov
gs
adc
and
aaa
xor
leave
sbb
inc
adcl
push
sbb
add
or
jae,pn
aaa
nop
dec
stos
xor
mov
loope
inc
lcall
push
or
jge
mov
jae
push
aas
cs
roll
lds
mov
cmp
xchg
cmpsb
cmpsb
dec
jo
int3
decl
repnz
push
fwait
push
push
xor
test
pushf
ficompl
xchg
ret
daa
sbb
sub
fs
push
cmc
loopne
xor
das
dec
add
xor
and
mov
inc
test
leave
xchg
cmp
insb
fisttpll
mulb
adc
test
rcrl
cmpsl
mov
lcall
pop
orb
push
out
sub
mov
pop
flds
mov
hlt
or
jg
data16
pusha
or
and
lahf
pop
js
pushf
scas
sbb
shl
fcoml
adc
lret
or
stc
mov
mov
pop
mov
cmp
test
lahf
inc
sbb
stc
mov
aam
pop
sub
enter
pop
sti
mov
or
pop
lods
popa
je
add
cli
xorl
push
fstps
fcmovnbe
xor
cmc
cmp
lahf
xchg
repz
jg
xchg
pusha
mull
inc
sub
stos
mov
jb
pop
mov
add
cmp
xchg
and
mov
sarb
jne
cmp
cmp
ret
scas
mov
pop
in
fldt
outsb
es
adcl
arpl
daa
loopne
ficoml
mov
xchg
mov
jmp
jnp
lahf
mov
outsl
jns
push
cmc
leave
jne
cmp
or
mov
xor
insb
cmp
iret
int3
test
rcrb
popa
fadds
mov
or
xchg
aaa
mov
xchg
cmc
sub
xchg
ret
sbb
imul
jge
inc
insb
mov
inc
pop
stc
xchg
cwtl
or
rcrb
add
sub
adc
xchg
cmp
gs
push
cmp
xchg
into
fistpl
mov
addr16
scas
lds
push
sbb
lock
xchg
lret
xor
xor
cmp
inc
rorl
js
in
pusha
and
sub
enter
testb
sbb
cld
rclb
inc
push
int
inc
adc
and
outsl
test
mov
bound
out
or
pop
xor
ds
dec
xchg
add
enter
xor
adc
lea
add
sub
adc
adc
push
daa
jno
es
sub
mov
or
push
push
add
xchg
cli
fisttps
xlat
sbb
jb
lods
add
xor
pusha
adc
lea
cmp
or
mov
es
lods
loop
push
cld
jnp
mov
data16
inc
mov
cmp
mov
addr16
fs
xchg
or
leave
es
sbb
mov
mov
jecxz
adc
sub
mov
repnz
lcall
stos
jge
or
inc
or
cmp
ret
jbe
int
sbb
test
inc
jmp
or
cmc
fwait
fs
cwtl
movq
test
xorb
and
cwtl
pop
repnz
fwait
jo
jne
lea
cmpsb
push
fwait
jne
idivl
in
xchg
rol
mov
cltd
call
fdivs
inc
adc
dec
mov
aam
mov
scas
xchg
fxch
test
nop
les
aad
out
in
mov
test
jg
mov
lock
pop
fs
ja
cmp
enter
sub
fldl
movsl
xchg
dec
mov
push
or
fwait
imul
mov
xor
mov
gs
lods
arpl
mov
cmp
std
popa
adc
mov
push
push
rcrb
inc
mov
int
repnz
repz
inc
fdiv
fs
sbb
jge
lock
fst
pop
in
shll
sahf
cmp
sbb
xchg
pop
mov
xlat
sub
dec
cmp
mov
lods
push
and
lret
lods
dec
jg
adc
movsb
cmp
test
movsb
jae
jmp
sub
push
dec
push
mov
adc
sbb
mov
xlat
in
cli
inc
int3
rorl
add
mov
lret
fisttpll
sbb
jle
push
cwtl
jg
add
push
xchg
xchg
cmc
fsubrs
stc
ljmp
push
push
sbb
mov
shrb
cmp
jl
aam
push
jl
jns
test
pop
addb
add
clc
mov
inc
outsb
ret
outsb
sarb
sbb
cmpsb
ss
lcall
and
jp
inc
pop
fwait
and
loopne
mov
sar
adc
push
iret
popf
mov
push
divb
dec
xchg
fisttps
cmc
pop
cltd
adc
jb
mov
mov
xor
mov
call
in
movsl
mov
pop
push
loope
inc
data16
push
mov
ret
in
inc
cmp
scas
xor
lea
test
fs
jmp
aam
jae
adc
jns
push
fwait
lds
imul
fmull
fists
adc
in
lods
lret
pop
sub
mov
roll
mov
and
xlat
push
and
sbb
push
sub
sub
int3
lds
pop
int
jb
cmp
inc
or
arpl
or
mov
repnz
out
xlat
push
xchg
cs
add
sarl
hlt
call
xor
rorb
setae
popa
lods
xorb
and
in
mov
clc
push
pop
mov
ljmp
push
push
push
aam
inc
fistps
xor
sbb
orb
adc
and
iret
dec
add
adc
sbb
mov
xor
mov
or
mov
aam
dec
mov
jns
divb
mov
or
sub
push
cmpb
mov
cmp
inc
push
and
push
pop
fsqrt
fwait
jle
shll
in
pushf
jne
or
cmp
dec
or
jne
daa
mov
and
out
fsts
sti
xchg
sub
loop
loopne
movsb
lds
in
rolb
repnz
and
jns
mov
sub
scas
es
ss
pop
mov
cmp
mov
mov
jmp
cmp
inc
shlb
mov
pop
mov
cmp
fisubrl
imul
cmpsb
scas
pop
ds
cmc
sti
in
jmp
adc
pusha
add
lock
lods
repz
jmp
jne,pt
fistl
cmc
push
mov
adcl
mov
pusha
test
jle
negl
or
cltd
repnz
out
mov
gs
mov
out
adc
sub
jbe
in
jnp
mov
cmp
inc
cmp
clc
outsb
jecxz
xchg
int3
aad
das
js
xchg
pusha
cmpsl
divb
xor
xor
sub
pop
pop
and
ret
xchg
test
pushf
inc
add
push
or
lret
mov
les
test
add
add
dec
out
shrb
pusha
fadds
xchg
jnp
adc
scas
xor
sahf
dec
arpl
std
mov
rorb
addl
mov
xchg
out
pop
std
sbb
out
in
adc
cmp
test
push
or
mov
xchg
push
andl
mov
mov
mov
lea
subb
aam
aad
decb
push
push
std
arpl
sahf
adc
roll
andl
xchg
shlb
jl
ljmp
and
cmp
sub
push
sti
add
scas
sub
mov
push
arpl
inc
cmp
add
add
fs
je
scas
das
repz
int
xchg
jg
fdivrl
pop
sbb
add
mov
and
xlat
mov
adc
leave
pop
mov
in
outsb
add
std
jge
and
dec
xchg
add
andl
mov
add
lret
testb
aaa
pop
pop
repz
add
sbb
and
mov
les
pop
pop
lahf
and
cli
in
mov
ja
sbb
push
or
lcall
sahf
xor
mov
nop
sbb
mov
cwtl
push
inc
xlat
iret
ss
mov
sub
xor
dec
add
dec
jne
xchg
rcrl
mov
fs
fnsave
or
jg
rcll
icebp
notl
or
mov
xchg
cs
rcrb
int3
sub
idivl
loope
ss
nop
fwait
jecxz
jb
add
out
rorb
sub
cmpb
push
aad
adc
stc
mov
mov
sub
mov
and
and
pop
inc
dec
sbb
shr
ficoml
lods
mov
cmp
sub
ss
push
test
jno
jbe
js
in
lret
cmpsb
inc
and
and
enter
jp
mov
insb
nop
or
mov
xchg
daa
sub
mov
and
inc
pop
push
fsubrs
sub
xor
loope
into
xor
dec
push
mov
rcrl
ja
scas
movsl
or
fnstcw
cmp
test
repz
adc
loope
adc
test
jp
movsl
adc
in
or
xchg
cmp
je
cmp
bnd
adc
stos
jge
jmp
fistps
inc
jge
rolb
ret
pop
sbb
ret
pop
ss
scas
lcall
insb
int3
xlat
pop
loope
popa
and
push
inc
cmpsl
pop
adc
daa
dec
jg
loope
ja
sub
fisubrl
push
adc
cmp
sub
nop
insl
add
cmpsb
dec
lds
xchg
filds
sbb
mov
cmp
in
insb
in
adc
ja
dec
sbb
in
testb
pushf
sbb
inc
dec
and
ror
stc
push
enter
inc
mov
xor
cmp
lahf
aam
jp
mov
scas
dec
or
fcoms
ret
imul
push
ret
arpl
sahf
jl
sbbl
inc
js
and
sbb
inc
mov
sub
dec
mov
test
mov
fldt
and
pop
aas
je
ret
xorb
addl
out
js
pop
lock
cmc
adc
adc
xchg
xor
fmuls
mov
dec
inc
add
dec
dec
jge
pop
lcall
pop
xlat
push
ds
cmp
and
pop
lret
mov
mov
cmp
enter
dec
lcall
push
test
scas
imul
jl
cmp
add
call
xchg
loop
mov
add
xchg
dec
outsb
pop
fmulp
xchg
repnz
xlat
adc
mov
lods
cmp
and
aad
or
out
jmp
xchg
je
dec
ret
push
pop
hlt
sbb
add
or
lock
popf
daa
in
mov
lock
sbb
shrb
dec
sahf
in
xor
and
shrb
add
addb
test
std
jle
iret
aam
popa
pop
xor
inc
push
es
scas
sub
push
roll
add
jo
loopne
add
pop
ret
std
xchg
adc
cwtl
pushf
out
add
and
xchg
adc
cmp
adc
dec
fwait
ret
ja
imul
dec
jmp
cltd
test
cmp
add
mov
xor
adc
repz
jbe
imul
xchg
xchg
imul
ffree
lret
or
add
xchg
pop
mov
adc
sub
mov
mov
fimull
mov
cmp
icebp
das
push
lcall
loop
shrb
add
jle
or
cwtl
sub
stc
dec
jae
stos
lahf
dec
xor
and
jb
push
stc
test
or
mov
jno
stos
inc
sbb
push
pop
xor
arpl
push
add
sbb
pusha
xor
imul
es
hlt
cs
lcall
fld
pop
shlb
pop
sub
dec
mov
test
push
jecxz
mov
cmpsb
xchg
data16
pusha
mov
mov
and
pop
add
dec
xor
cld
lret
cli
mov
pop
imul
insb
sarb
mov
xchg
sub
mov
xchg
movsb
dec
iret
fsts
mov
loop
es
mov
jbe
jmp
enter
push
xlat
loopne
popf
aas
mov
icebp
scas
xchg
fsubr
mov
or
inc
or
lods
aad
call
pusha
xchg
js
xchg
cld
dec
cmp
xchg
out
push
aas
test
sbb
rcll
mov
cltd
jno
jge
imul
gs
out
not
push
xchg
incb
js
sub
or
xchg
inc
pop
aad
push
jo
cmp
push
cwtl
adc
push
cltd
fnsave
iret
cmp
push
rcr
lret
jmp
jnp
add
movsl
mov
jmp
je
popl
imul
scas
pop
enter
repz
mov
jp
inc
jno
push
and
mov
inc
cmp
dec
push
inc
daa
jmp
in
ret
dec
insl
inc
into
cmp
and
je
jge
mov
jnp
cli
cmp
mov
pop
adc
and
sbb
mov
or
int3
mov
popf
loop
and
pop
scas
nop
mov
mov
in
mov
inc
hlt
mov
mov
ja
test
fstps
pop
loope
lds
mov
int3
jmp
cmpb
xor
xchg
and
fnclex
pop
pop
mov
mov
cli
shll
nop
jecxz
outsl
inc
dec
daa
lock
inc
rcll
js
jl
scas
sbb
add
popw
adc
shrb
out
sbb
aas
scas
mov
shll
lret
dec
nop
dec
jl
dec
dec
lods
cmpb
and
sub
call
jo
and
dec
jns
add
int
fsubl
ljmp
xlat
scas
int3
scas
and
imul
xadd
pop
arpl
pop
mov
iret
pushf
cmpsb
or
les
int
clc
lock
xorb
jge
push
test
dec
sub
mov
mov
xlat
mov
in
addb
jmp
dec
xor
jle
ret
mov
ror
popa
loop
cmpsb
cli
push
mov
fwait
inc
push
push
add
enter
cmpsb
stc
lahf
cmp
cmpsb
in
pushf
inc
leave
shl
push
test
xchg
xorl
mov
or
sbb
xorb
fcomps
mov
mov
cmc
gs
outsl
mov
xchg
or
mov
ret
or
mov
test
push
push
dec
mov
jmp
cli
pop
adc
sbbb
xchg
mov
sub
push
inc
stos
js
cli
les
mov
out
ret
clc
sahf
inc
push
dec
adc
jo
dec
data16
jns
dec
inc
sub
mov
cltd
pop
mov
out
and
mov
divl
jg
scas
popa
lods
das
xchg
lea
dec
jg
mov
idiv
pop
das
mov
mov
dec
bound
dec
mov
cmp
mull
popa
jp
jno
aad
pop
repz
xchg
jg
push
xorl
inc
into
inc
and
push
mov
lods
pusha
push
mov
cmp
jno
dec
dec
dec
imul
jmp
lods
push
mov
std
inc
jge
xor
int3
adc
push
divl
fs
and
addr16
nop
push
lahf
inc
ret
jbe
push
mov
aad
cmc
out
push
iret
or
mov
rcrb
pop
stos
push
add
push
ljmp
int3
out
aaa
mov
jle
cs
fistps
ret
add
js
mov
inc
out
mov
out
push
mov
das
aas
rol
xor
aam
int
and
xchg
add
and
loopne
cmp
ret
arpl
rolb
fimull
sub
loope
sbb
rcrl
sub
lea
jmp
mov
xchg
add
call
int
xchg
jmp
ret
std
adc
xor
lret
shlb
mov
mov
sub
insb
lret
add
ja
rcr
inc
fs
sub
xorb
and
xchg
mov
mov
mov
dec
test
in
inc
in
xchg
inc
push
mov
dec
mov
mov
xchg
aaa
test
ret
arpl
out
cmp
popf
mov
shrb
lea
jg
in
sbb
mov
pop
push
mov
insb
or
sbb
aas
mov
and
cmp
test
daa
cmpsb
push
dec
cmc
andb
jb
fwait
or
adc
movsb
lea
sbb
lds
mov
adc
enter
sub
or
jge
and
pop
jno
cmp
movsb
inc
cmp
jne
decb
mov
and
xor
xchg
mov
mov
les
xchg
push
ret
fcompp
push
inc
push
test
sti
xchg
out
mov
jmp
mul
movsl
mov
leave
or
jmp
adc
xchg
jmp
inc
mov
pop
icebp
jnp
mov
fstl
call
mov
fbld
sub
sbb
adc
in
arpl
push
or
int3
std
test
add
xlat
aam
push
mov
aaa
cs
cltd
cmpsb
add
mov
mov
xor
sub
shll
inc
fbstp
pop
mov
rcrl
adc
shll
outsb
das
dec
aaa
add
pop
and
cli
in
sahf
out
and
dec
imul
pop
mov
cmpsb
mov
addr16
outsl
shll
sub
xchg
fisubs
pop
ljmp
and
sbb
pop
or
mov
fstl
in
cmpsl
addb
pop
call
and
inc
lahf
dec
and
push
push
lcall
outsb
out
incb
es
mov
dec
lret
dec
jl
arpl
call
add
jmp
ss
lods
jnp
push
daa
repnz
cld
mov
fsub
xorl
fdivrl
das
arpl
pop
in
rcll
xor
cmp
add
sub
push
sbb
inc
pop
movsb
xor
ljmp
pusha
inc
pop
fucomi
and
les
loopne
mov
xchg
ret
adcb
outsl
jns
xor
sub
dec
in
insb
add
inc
lcall
dec
mov
xchg
mov
xor
pop
jnp
loope
sbb
rorb
aas
push
lret
mull
cmp
fwait
sar
sbb
dec
jns
push
stos
js
test
mov
xchg
mov
popl
in
cwtl
sbb
hlt
insl
stos
mov
sbb
jns
cmp
push
or
sbb
xchg
push
pop
mov
cltd
aaa
imul
lock
or
call
pop
sbb
xchg
inc
add
int3
jg
std
std
out
das
lcall
xchg
jmp
mov
xor
rcrl
gs
int3
jmp
cmc
add
mov
mov
inc
rclw
pushl
sbb
or
scas
mov
lcall
fst
sbb
mov
outsb
xchg
jne
mov
test
add
lret
pop
pop
mov
sub
push
mov
mov
lea
mov
pop
xchg
jl
push
in
xor
mov
xchg
jns
fsubs
mov
jp
addr16
lret
cmp
push
incb
xchg
pop
adc
cmpsb
fisttpll
cmp
fsubs
movsl
sub
enter
imul
inc
xchg
push
sub
push
push
add
mov
cmpsb
pop
xchg
and
mov
imul
or
and
cmp
xor
jbe
push
pop
in
icebp
mov
sub
loope
jge
add
xlat
pop
pop
jge
cmp
sti
lock
push
xchg
or
and
or
sbb
and
es
push
lcall
fadd
imul
cld
iret
sub
mov
icebp
ss
dec
xor
or
fwait
loop
es
rcrl
inc
int
ds
mov
mov
jne
push
rcll
jae
sub
sub
jmp
test
mov
inc
bound
in
in
sub
mov
mov
add
addr16
jb
popaw
out
pusha
mov
mov
push
imul
imul
fistpll
loopne
adc
nop
sub
sbb
pop
rcl
outsb
into
scas
pushf
ret
pop
mov
gs
mov
cmc
sub
test
inc
lods
fisubrl
mov
mov
in
ds
push
xchg
orb
add
cmpsl
pop
push
xchg
push
fwait
inc
xchg
push
sbbb
dec
and
shrb
push
stos
adc
movsl
cmpsl
cwtl
int
sbb
loope
movsl
cmp
out
in
fstpt
jle
mov
scas
popa
pop
xor
push
xor
xor
push
adc
fisttpl
mov
inc
fwait
lods
in
pop
cmp
sahf
fistpll
sub
cltd
fisttpl
int
pushf
in
push
shll
jmp
xor
sbb
jae
bound
rcrb
pop
sbb
xchg
in
negl
dec
shrl
retw
and
loop
mov
fisubrl
movsl
test
mov
lds
out
fsubrl
cmp
in
jmp
andb
dec
mov
jmp
or
stos
dec
push
and
add
arpl
sbb
ss
sbb
sti
xlat
jne
lods
arpl
insb
xchg
imul
cs
cmc
in
es
jae
std
roll
inc
stos
hlt
xchg
decb
cltd
mov
mov
es
shlb
sbb
cmc
int
ss
out
push
fidivs
dec
mov
mov
xchg
enter
lock
mov
jns
lea
cmpsl
scas
xchg
adcl
push
dec
cmp
cmpsb
out
daa
adc
fldl
dec
inc
jno
cmpsb
fstl
sub
sub
or
add
aaa
jg
ljmp
les
inc
xchg
scas
ret
sbb
and
mov
es
or
enter
aaa
adcb
ficoms
pushf
adc
lret
sub
sbb
inc
fcom
pop
fisttpl
subb
lea
add
pusha
cli
aam
jle
sbb
pop
push
push
mov
das
jmp
pop
adc
cmp
jmp
lea
jl
dec
fisubl
in
daa
shld
rcrb
lahf
rcrl
call
lahf
mov
mov
jl
jmp
aam
ja,pt
add
lods
or
push
sub
dec
jns
mov
mov
cmp
mov
into
ficoms
xchg
lret
adc
adcl
xlat
pop
fld
or
out
mov
mov
add
sbb
cmp
test
test
push
mov
movsl
mov
mov
repz
je
lea
int3
inc
mov
stos
cmp
int3
mov
or
icebp
imul
jb
jmp
sub
xchg
add
mov
push
and
mov
movsb
ljmp
mov
enter
cmpsb
xchg
mov
fadd
push
outsb
stos
ljmp
loopne
out
data16
xor
inc
pusha
add
mov
test
lea
pop
dec
add
and
out
lods
fstp
or
jo
scas
mov
cmp
incl
out
cmpsb
gs
std
les
outsl
fsubl
xchg
lahf
les
cltd
mov
or
adc
jno
adc
mov
push
mov
mov
mov
cmpl
and
xor
dec
sub
mov
dec
mov
test
adc
int
subl
mov
sub
sbb
cmp
lods
push
adc
and
jae
popa
dec
xor
fs
js
insb
jns
mov
xor
and
xchg
sbb
push
jecxz
sahf
repz
or
fistpl
fldcw
aad
nop
push
enter
rcrb
or
lods
mov
ret
fwait
add
gs
sub
cmpsb
pop
fsubl
inc
roll
dec
cld
inc
cltd
and
jne
pop
jo
push
nop
and
sarl
addl
mov
inc
mov
test
sub
aam
repnz
stc
loop
inc
mov
outsl
cli
sbb
aaa
xchg
je
mov
cwtl
push
jge
nop
mov
and
cmp
frstor
push
sti
cmp
fcompl
and
inc
xchg
sbb
pop
fisubl
lea
lret
sub
xchg
fidivrs
outsl
pop
sbb
push
or
jo
fiadds
jecxz
test
cli
dec
xchg
xchg
or
xchg
sub
cwtl
mov
cs
push
mov
cmpsl
loope
in
loope
adc
jb
sub
adc
arpl
daa
mov
aam
out
push
fsts
fsubrl
into
jnp
inc
or
add
sbb
pushf
push
xchg
mov
adc
cwtl
add
test
rolb
or
repnz
mov
je
pusha
into
xchg
xor
xor
and
lea
dec
and
cmp
loopne
pushf
jbe
rcr
lret
pop
loopne
jle
insb
and
pop
add
and
gs
aas
or
lock
test
jg
push
lahf
sahf
pop
in
mov
mov
cmc
int
sub
mov
sub
cli
push
hlt
fcmovu
lods
sub
fbstp
out
push
push
sbb
pop
xchg
jmp
mov
sub
jne
int
into
pop
fadds
rcrb
mov
jns
ret
dec
mov
rolb
ret
cmp
xchg
call
outsl
out
dec
insl
nop
xchg
adc
or
adc
cmp
jecxz
hlt
xchg
setl
sbb
divb
add
inc
xor
or
adc
imul
cmp
loope
xchg
mov
inc
stos
scas
and
xchg
js
inc
xor
fbstp
push
daa
ja
pusha
in
add
pop
adc
mov
into
aam
mov
js
pop
pop
repz
loope
or
insb
cwtl
pop
popf
pop
pop
rcrb
sub
test
std
jmp
outsw
inc
adc
in
in
cmp
mov
mov
adc
bswap
fdivs
pop
sub
mov
pop
imul
pop
jge
movsl
push
dec
xorb
repnz
into
mov
sub
inc
adc
rorl
push
roll
push
test
xor
push
ds
cwtl
push
ds
jle
push
inc
inc
fmuls
xor
stc
pushf
pop
pop
sarl
loop
out
test
push
scas
mov
out
push
push
xchg
shlb
jo
pop
pop
popa
inc
lea
pop
xchg
and
popf
push
nopl
movsl
xor
jnp,pt
mov
mov
cmpsl
mov
xor
jns
pop
xor
call
repnz
frstor
pop
pop
out
lock
add
arpl
arpl
pop
fs
mov
inc
dec
test
mov
addl
adcl
inc
sti
push
out
sbb
addr16
repnz
frndint
xchg
enter
fsubl
sub
sbb
ljmp
push
in
cmp
xor
add
mov
lods
lahf
aad
imul
mov
mov
test
loope
outsb
scas
hlt
pop
push
not
popa
div
movsl
pusha
addb
in
sbb
inc
shl
add
out
push
inc
daa
sbb
mov
rdmsr
push
mov
in
xchg
and
and
fildll
call
dec
ljmp
outsl
out
xor
hlt
pop
adc
pop
lret
fnsave
int3
sarb
movsb
in
jnp
imul
pop
aam
es
in
into
outsb
push
jae
adc
mov
scas
pop
or
clc
and
jne
stos
repnz
sbb
popa
sbb
jb
jge
jge
cmp
cmp
dec
and
popa
jge
inc
xlat
ds
enter
pop
push
cwtl
sub
loopne
or
add
push
add
es
cmpsl
outsb
or
or
and
sbb
xchg
dec
mov
into
and
ljmp
insl
mov
in
sbb
fucom
and
and
cltd
and
jbe
int3
pop
stos
inc
mov
sbb
stc
xchg
popa
mov
jno
jecxz
hlt
stos
arpl
inc
xor
cld
inc
fcomi
mov
jmp
daa
pusha
fst
cmpsl
loopne
adc
jge
addr16
add
aaa
xchg
andl
pushf
sti
cltd
jne
pop
xor
data16
cli
jmp
cld
ret
int3
inc
adc
clc
push
sbb
arpl
int3
js
xchg
aas
lods
inc
dec
dec
daa
cltd
or
jbe
or
mov
mov
or
cmc
add
mov
inc
dec
or
aam
pop
int
ret
jmp
xchg
xchg
xchg
and
pop
jb
xchg
mov
sub
stos
sarl
mov
add
test
movsb
out
push
lea
push
bound
mov
fwait
inc
cmpsb
xchg
push
xor
int3
cltd
sub
rcll
rcrl
movsb
cmp
inc
xchg
fcompl
int3
mov
bound
jmp
fmul
jns
pop
dec
push
mov
sub
cli
jb
in
inc
test
mov
xor
leave
xchg
int
xor
ret
ret
outsb
fsubrs
jl
inc
mov
cli
aam
stc
movsb
xchg
pop
xlat
cmp
add
xchg
or
push
scas
add
enter
out
dec
jp
lock
mov
incb
push
pushf
shr
mov
rol
adc
data16
mov
sbb
in
push
int
sub
mov
jmp
nop
push
adc
and
sub
or
outsl
xor
pop
cltd
ja
pop
aad
cld
ficompl
loopne
enter
addr16
or
pop
insb
or
mov
mov
lds
cmpsl
push
cmp
aad
movsb
stos
sbb
xor
lods
add
jl
mov
cmpsb
push
lds
sbb
jnp
and
pop
jmp
adc
ljmp
mov
pop
mov
int3
loopne
sahf
les
sbb
iret
push
iret
gs
inc
pop
jae
imul
inc
sbbb
pop
ret
loop
xchg
mov
adc
bound
inc
fldenv
mov
pop
pop
sub
fwait
mov
mov
jp
adc
mov
stos
pusha
push
out
push
mov
xor
cwtl
cld
mov
push
imul
icebp
mov
mov
sbb
pop
cs
popa
cmp
inc
out
cmpsl
adc
mov
fsubs
mull
repnz
mov
fwait
jo
aaa
cmp
xchg
mov
sahf
popl
arpl
sti
dec
push
lods
add
daa
mov
push
jmp
sub
roll
bsr
mov
mov
aas
repnz
call
pop
sahf
push
jno
mov
xchg
and
insl
mov
and
mov
inc
mov
push
sub
insb
sbb
lods
js
repnz
sarb
int
cmpsl
ss
adc
pop
outsb
jle
or
pop
jne
std
pop
add
adc
adc
and
sub
inc
in
imul
icebp
mov
sbb
dec
dec
rcrb
cmp
xchg
cmpl
mov
inc
aas
xor
add
dec
js
fdivr
sub
popa
pop
dec
jns
repz
daa
call
hlt
lahf
lock
movsb
loope
test
daa
popf
push
bound
sub
je
cmp
loop
idivl
fisubl
push
les
and
jmp
jnp
xchg
nop
lods
adc
dec
jo
inc
ja
lea
js
or
push
jns
mov
mov
fiadds
lods
scas
pop
adc
adc
add
or
push
and
mov
paddw
test
mov
push
in
js
jae
dec
mov
insb
xlat
arpl
xchg
pop
xchg
pop
xorl
outsb
pop
push
pop
push
out
mov
pop
xchg
adc
inc
pop
jecxz
ret
popf
xchg
fwait
jns
in
pop
add
lds
and
pop
pop
mov
mov
adc
std
jg
addr16
jg
or
pop
leave
jecxz
push
popa
outsb
jecxz
pop
sub
jl
sbb
lret
arpl
add
out
jge
pop
dec
cmp
in
adc
cmp
addb
jne
daa
arpl
hlt
ljmp
and
outsb
inc
stc
out
pop
adc
repnz
and
out
hlt
loopne
push
outsb
mov
sbb
daa
pop
mov
mov
fdivr
insb
jp
mov
or
add
cmc
decl
xchg
test
loope
out
mov
sbb
jmp
mov
add
jo
mov
pop
inc
jo
adc
aad
popf
loope
sub
in
test
or
jne
jae
mov
sbb
test
lock
xor
cmp
add
test
xchg
mov
aaa
mulb
in
clc
push
adc
cs
mov
out
inc
pop
mov
mov
jle
inc
je
pop
xchg
out
and
neg
pushf
push
loope
insl
and
imul
add
mov
lods
addr16
lcall
cwtl
cmpsl
test
rcrb
xchg
aas
xchg
or
dec
loopne
mov
sti
xor
scas
inc
xor
xor
popa
jmp
xor
inc
call
pop
jb
lock
push
imul
sub
lahf
sub
in
or
mov
or
pop
cmc
mov
xor
jmp
outsl
lahf
out
dec
push
data16
in
dec
pop
jecxz
fstp
pop
push
test
push
les
adc
dec
in
or
sar
dec
xchg
divb
fbld
imul
mov
fimuls
lcall
pop
pop
js
jecxz
popf
add
icebp
cli
adc
lock
sub
inc
leave
dec
rcr
int3
sbb
inc
lds
stc
lds
out
push
lds
call
in
into
jmp
les
mov
mov
out
ret
sahf
insb
imul
cmc
leave
movsb
ljmp
lret
mov
pop
test
cmpsl
imul
mov
pop
lcall
inc
or
sbb
xchg
loopne
test
jg
testl
jns,pt
xor
sbb
fcoms
fdivl
mov
movsl
in
fisttpl
xor
sbb
stos
rcrl
ss
mov
cmpsl
mov
sbb
xor
shll
push
dec
aaa
daa
or
fdivr
movsl
add
pop
fs
pop
sbb
inc
mov
ja
mov
pusha
push
mov
and
push
test
enter
test
imul
lret
and
sbb
iret
iret
aad
rorl
ljmp
sub
xchg
ja
fsubp
shl
push
pop
popa
or
jns
sbb
testb
inc
cmp
scas
push
aaa
xchg
adc
std
mov
hlt
or
add
out
mov
stc
pushf
push
xor
incb
pop
cmpsl
xchg
mov
ret
push
push
out
js
sub
xchg
cmp
pop
negb
insl
xor
adc
fdivl
sbb
outsb
fwait
jg
nop
dec
cmp
les
repnz
xchg
jle
into
lahf
add
add
rcr
push
cmc
and
add
inc
lods
inc
push
mov
mov
mov
test
xchg
ljmp
ja
jns
jmp
aad
enter
sbb
mov
cmp
movsb
jno
pop
rcr
iret
idiv
push
das
adc
dec
iret
lods
mov
insb
sub
rolb
mov
jno
insl
negl
clc
scas
out
movsl
fisttpl
das
cmp
das
lds
add
mov
sbbl
jno
int3
or
fsts
sub
xchg
dec
hlt
out
or
mov
sub
xchg
in
jp
movsb
dec
or
int
roll
js
jle
fwait
cmp
sbb
xor
push
jno
pushf
repnz
out
jb
fdivs
pusha
dec
mov
or
pushf
adc
insl
mov
dec
xchg
mov
xor
push
icebp
loopne
jne
jg
sbb
fcmovu
dec
shr
jmp
ret
xchg
out
mov
push
inc
sti
test
cmp
sub
mov
xchg
xor
pop
in
punpckhdq
inc
mov
or
and
out
lods
adc
xor
mov
mov
cli
or
mov
sub
xor
adc
enter
sub
push
iret
mov
scas
mov
mov
push
imul
pop
push
cli
xor
mov
insb
std
orb
aam
dec
xchg
nop
adc
nop
sbb
pop
push
mov
dec
mov
cld
push
pusha
fimuls
mov
andb
movsb
lcall
in
call
cltd
sub
dec
andb
mov
in
mov
mov
fcoml
adc
adc
popf
jmp
js
movsl
xor
outsl
add
adc
shl
xor
mov
xchg
xchg
xor
dec
cltd
jg
fdivrs
in
pop
aad
roll
into
push
insb
sbb
nop
daa
inc
or
cld
insl
cltd
or
aaa
scas
jo
je
or
jmp
notb
aam
int3
out
inc
or
push
mov
data16
jp
xor
xchg
insb
mov
lods
iret
mov
lahf
mov
mov
xor
xor
cwtl
sarb
test
in
xor
test
sahf
jno
mov
and
stos
dec
nop
push
data16
mov
push
into
mov
je
xchg
pop
inc
lods
adc
in
test
push
ja
outsl
lahf
fstpt
xor
jno
mov
lock
test
push
mov
jp
daa
jge
out
sub
lds
or
and
jg
push
adc
lahf
out
outsl
mov
sbb
fwait
xchg
daa
dec
jne
dec
sub
xor
mov
jmp
cmp
sub
sbb
fiaddl
or
insb
popl
hlt
mov
aad
mov
ret
rorl
adc
lcall
pop
xchg
or
ljmp
cli
and
mov
mov
je
sub
movsb
sbb
sub
lds
xchg
xor
push
es
push
decl
movsl
out
push
mov
cmp
mov
ja
adc
es
nop
fsubrp
cmp
dec
jge
out
ds
bound
dec
stos
addr16
xchg
adc
mov
sbb
subl
int
mov
push
jp
xor
mov
hlt
iret
xor
cmpsb
pusha
clc
add
cmpsl
dec
mov
sub
std
scas
mov
add
push
add
jb
jnp
inc
cmp
rol
sarl
pop
stos
or
rclb
dec
ljmp
or
pop
lret
sbb
ret
pop
lahf
jp
pop
dec
push
push
push
mov
repnz
sbb
xor
xor
pop
std
cmovno
mov
jne
adc
mov
adcb
lods
push
ja
stc
je
insb
ss
sbb
lret
sub
sbb
mov
push
outsb
repz
xchg
scas
sub
dec
push
out
stos
test
xor
enter
sub
cmp
call
sub
fidivrl
fstpl
shlb
ret
enter
jle
jno
popa
push
add
ficoml
pop
sub
mov
lock
mov
mov
xor
push
pop
sbbl
mov
pop
pop
xor
jne
leave
in
mov
adc
xor
cmp
aaa
and
lock
jae
push
jge
fstpt
inc
ret
int3
shlb
xorl
pop
fidivrl
lahf
sbbb
movsb
call
push
movsl
lds
mov
mov
cltd
fidivrl
and
leave
dec
mov
shrb
leave
mov
ja
xchg
xchg
mov
inc
insb
xlat
fmull
mov
sahf
xor
popa
jg
nop
lock
mov
jmp
cmpsl
mov
stos
mov
mov
or
subl
adc
iret
adc
inc
push
jmp
sbb
lock
ret
mov
xor
in
xchg
jecxz
mov
enter
hlt
jae
mov
int3
xchg
mov
das
xor
jno
sti
sub
sahf
and
ret
rcr
repnz
in
add
das
sbb
sar
mov
or
movsl
sahf
arpl
push
pop
inc
out
pop
pop
xchg
add
pop
jno
add
shlb
cmpsl
in
pop
mov
dec
jmp
clc
std
mov
fcompl
cwtl
cs
or
dec
es
test
in
stc
pushf
mov
inc
mov
adc
mov
aad
dec
inc
sub
test
pop
mov
out
jne
sbb
cmp
loopne
lcall
mov
loopne
add
jmp
frstor
jae,pn
dec
adc
fstpt
ficompl
insl
mov
in
pop
inc
and
xor
popf
into
lret
scas
xor
lcall
xor
jmp
int
repz
push
xchg
adc
pushf
push
add
ret
cmp
loop
gs
push
cwtl
imul
pushf
int
dec
in
push
repz
popf
les
es
cltd
out
mov
mov
inc
add
add
pop
jmp
xchg
and
loopne
adc
mov
push
ds
loopne
mov
movsl
jae
push
fwait
incb
mov
fwait
xchg
mov
rorl
sub
lock
in
cwtl
dec
scas
pop
loope
repz
cmp
sub
xlat
lock
jp
xor
movb
push
pop
daa
add
jl
jmp
jp
lret
mov
rorb
lret
repz
push
jae
mov
cwtl
mov
je
add
xchg
xor
shrl
cmovne
hlt
add
pop
pop
rcrb
cmp
inc
and
fs
mov
aad
sti
xchg
insl
sbb
sub
pop
mov
daa
push
inc
push
pop
mov
lret
sbb
pop
into
xchg
or
mov
inc
push
add
xchg
push
lea
outsb
add
add
andl
nop
addr16
popa
dec
aam
ret
adc
adc
mov
inc
divl
adc
push
adc
sub
mov
mov
frstor
mov
cltd
inc
pop
loope
in
mov
jbe
cmp
fmull
xor
xor
adc
push
test
test
sub
sti
xchg
jmp
mov
pop
sarb
mov
stos
addr16
sub
enter
push
filds
mov
leave
and
sarb
push
xchg
or
sahf
cwtl
ds
fdivs
jb
xor
mov
lds
mov
mov
mov
inc
xor
pusha
mov
pop
dec
shrb
mov
or
sti
out
movb
add
loope
fisubrs
shrl
ss
dec
add
add
pop
leave
fwait
jnp
push
jo
xor
fnstcw
and
cmp
mov
push
mov
sbb
push
inc
lea
shll
les
hlt
je
icebp
repz
add
or
pop
pop
pushf
scas
pop
sahf
pop
fs
fisubl
loope
in
fwait
test
push
jmp
xchg
fsubl
ss
lcall
mov
in
loop
push
sbb
adc
notb
inc
lea
sbb
std
inc
hlt
sub
cmp
pop
outsb
lret
cs
sbb
aam
aam
jl
dec
test
imul
mov
mov
or
dec
mull
cmp
pop
xchg
out
or
daa
pop
mov
arpl
sub
sub
add
fsts
mov
dec
mov
scas
mov
sbb
lock
shr
cwtl
lock
xor
inc
shll
jnp
int
lods
test
scas
outsb
jl
adcl
inc
clc
mov
rcrb
repz
cmc
and
mov
ja
aam
sub
pop
insl
push
xor
mov
call
sti
sbb
push
inc
add
push
sub
mov
xor
xlat
call
imul
push
out
add
push
xor
filds
pop
aaa
ud1
fs
ret
mov
jmp
lods
gs
mov
sub
or
dec
and
lret
repnz
pop
mov
push
adc
push
cmp
cld
push
cmpsl
mov
mov
pop
test
hlt
int3
xor
in
dec
xchg
pop
ljmp
adc
pushf
into
add
xchg
push
or
fdivp
and
pop
outsb
nop
iret
jno
adc
enter
fwait
insl
lcall
subl
inc
pusha
int
xchg
into
dec
mull
popf
pop
and
subb
inc
inc
aam
fcmovnu
rorl
jno
cltd
insl
xchg
pop
into
popa
out
mov
xor
jbe
mov
loopne
xor
xor
add
outsb
dec
sbb
sbb
adc
jo
fildl
repnz
popa
out
js
test
mov
jle
or
addr16
xchg
int3
push
test
or
dec
sbb
jmp
and
test
outsb
xchg
subl
jbe
out
push
dec
fs
add
mov
lods
xlat
lock
push
mov
mov
mov
pusha
ja
cmp
mov
sub
iret
xor
fcoml
jmp
clc
shrb
mov
out
pop
jne
push
filds
inc
sbb
fdivs
or
shlb
rorl
movsb
cmp
in
xor
mov
push
gs
pop
xlat
outsb
lret
push
pop
adc
push
pop
pop
add
ja
push
addr16
xor
les
add
cltd
lea
sarb
enter
cmc
xchg
in
popf
pop
es
adc
lea
add
subb
loop
push
fbstp
insl
scas
mov
ror
push
repz
clc
repnz
popf
std
push
mov
jne
mul
sbb
cmp
lea
lcall
imul
mov
jb
or
and
pop
int
push
dec
popf
rorl
pop
stc
sub
movb
jp
adcb
and
inc
lret
push
mov
movsb
pop
inc
mov
xchg
jmp
cmp
dec
scas
cmpsb
and
jl
push
fmull
push
scas
push
jne
jp
imul
aas
daa
jmp
pop
xor
sbb
ss
pop
add
or
scas
sbb
outsb
sahf
push
push
lds
inc
add
or
jns
dec
and
je
adc
pusha
dec
ret
sub
pop
imul
inc
sbb
sbb
push
lcall
inc
jp
js
mov
inc
sub
stos
neg
and
test
cli
xor
mul
sbb
adc
hlt
in
push
pop
ds
mov
insl
outsb
jno
aad
lret
mov
call
add
aaa
mov
or
mov
jb
push
cmp
inc
cmp
pop
pop
lcall
divb
mov
inc
mov
imul
mov
lods
add
mov
mov
add
mov
cmpsb
cltd
and
lods
movb
mov
inc
mov
xor
push
loop
cmpsl
fisubrl
push
pusha
js
aad
imul
inc
sub
fsubs
repnz
pop
imul
inc
insb
cmpsb
lret
mov
and
pop
fbstp
xor
sbb
leave
xor
push
mov
stc
pusha
lock
dec
pop
loopne
jnp
imul
or
arpl
mov
add
cwtl
ja
faddl
xchg
or
jae
cmp
scas
cltd
lock
out
sbb
sarl
mov
add
xchg
fisttpl
add
mov
ret
push
xor
addl
mov
pushf
dec
xchg
loope
xchg
std
clc
dec
fists
adc
mov
xor
int3
jo
in
mov
cmpsl
jb
inc
ds
or
mov
std
jmp
punpckldq
lods
cltd
jle
jns
push
out
dec
cmpsl
std
mov
sub
add
mov
test
aas
aad
and
mov
sbb
lock
add
shr
js
pop
mov
dec
pop
sub
es
xor
push
pop
rcrl
in
into
fsubrp
fs
sbb
fstl
arpl
and
adc
jno
daa
push
or
mov
lods
jae
sahf
inc
add
ret
sar
addr16
lea
cmc
stc
mov
cmp
cmpsl
fisttpl
inc
mov
mov
push
test
stos
inc
in
mov
orl
xchg
shrb
or
lret
cs
xor
xor
push
jl
sub
mov
cmp
sbb
out
jnp
mov
cmpl
or
push
adc
xor
lods
push
nop
loope
movsb
bound
or
push
xor
mov
loope
shr
outsl
mov
sbbb
cmp
push
pop
iret
and
xor
gs
arpl
push
mov
int
add
dec
ss
xchg
sub
dec
xlat
loop
pop
or
testb
fidivrs
jb
mov
inc
movsl
stc
je
pop
ret
loop
pop
mov
std
pop
jge
insl
push
or
jl
mov
inc
and
in
add
mov
xchg
out
out
cltd
repz
popa
mov
jo
sub
subb
scas
add
jnp
push
dec
out
cli
add
ljmp
in
cltd
ja
cmpl
lahf
int3
mov
jnp
ja
mov
mov
inc
arpl
dec
mov
mov
and
jmp
jmp
xchg
and
adc
imull
movsb
shll
push
jle
push
jge
cld
out
lods
xor
adc
imul
pop
movsl
insb
and
rsqrtps
jp
ss
nop
inc
dec
out
push
pop
cmp
dec
adc
push
pop
sub
mov
sub
test
cmc
dec
xorl
lret
aaa
mov
rorl
sbb
jle
sub
mov
ja
iret
scas
inc
mov
or
xor
add
mov
out
mov
mov
xchg
inc
test
add
cltd
in
fistps
sub
add
mov
pop
rorl
or
ficoml
dec
mov
sub
cmpsb
xchg
push
sub
add
xor
sahf
stos
int3
or
pop
in
push
das
pop
loop
dec
jge
jp
lods
lods
icebp
cmpb
sbb
repnz
add
mov
jb
std
ss
mov
cmp
push
hlt
or
inc
lea
mov
mov
ficomps
ss
push
xor
addr16
push
out
mov
add
mov
push
jne
jmp
ret
sti
adc
stos
je
divb
ret
adc
daa
xchg
mov
imul
lahf
ret
in
xor
sbb
mulb
test
xor
out
addr16
lret
mov
lcall
cltd
mov
aam
daa
xchg
out
insb
outsl
jge
dec
je
jl
xchg
jl
jle
cmpl
fsts
iret
mov
pop
jne
cmp
jbe
inc
hlt
or
xchg
test
adc
jne
hlt
btc
jb
test
lahf
sub
adc
push
dec
sbb
ljmp
add
mov
stc
ss
jge
shlb
mov
ljmp
jg
sbb
xchg
sti
imul
ss
mov
test
mov
xor
jb
sub
lcall
dec
aas
data16
push
ficoml
pop
pop
mov
dec
mov
add
push
pop
mov
rcrb
lcall
fmuls
sbb
lds
xchg
repz
cwtl
frstor
push
mov
sub
or
stc
or
ljmp
push
jge
dec
icebp
fstps
mov
xor
dec
fildll
mov
enter
cltd
push
nop
rcrb
cs
cmp
sbb
addr16
das
fsubrl
mov
rcrl
cmpl
mov
clc
lahf
icebp
dec
jbe
incl
fbld
xchg
scas
xor
sub
jle
dec
lret
out
xchg
push
das
adc
xchg
insl
xor
mov
jo
aad
lret
rcrb
jle
cmpsb
lock
add
push
mov
cli
test
add
arpl
imul
sbb
pushf
test
mov
sbb
arpl
jbe
adc
xchg
pop
mov
inc
mov
cmp
mov
test
mov
sub
add
cmp
adc
fxch
lahf
stc
pop
call
push
mov
jbe
mov
jl
add
dec
dec
ret
pop
dec
shl
jno
push
mov
lret
int3
aam
push
or
popf
ror
adc
sbb
mov
mov
sti
fists
call
mov
and
or
pop
sbb
or
pop
ror
pusha
icebp
mov
loope
cmpl
mov
ror
into
mov
and
data16
int
push
xor
or
push
sbbb
mov
and
faddp
arpl
ja
les
xor
cld
xor
or
pushf
into
sbb
fwait
xlat
push
es
ret
in
out
xor
mov
rcr
inc
shr
dec
mov
loopne
inc
sub
cmpsl
outsb
jg
add
or
lods
cld
int3
pop
popf
js
or
incl
ja
cmp
test
inc
fldt
test
sti
cs
adc
lcall
jle
loopne
les
mov
cld
aas
inc
xor
pop
mov
push
das
mov
dec
out
pop
xchg
fcmovnb
cmp
xchg
stc
inc
xchg
pop
sub
std
add
inc
mov
cmp
fs
addr16
js
xchg
dec
xor
inc
add
pop
in
je
out
inc
inc
add
das
bound
pop
mov
pop
push
icebp
xor
loopne
fnstsw
and
push
pop
dec
sahf
xor
or
pop
pop
mov
lods
insb
not
lods
rolb
xchg
jl
fs
mov
ds
stos
js
sbb
push
or
mov
xor
imul
jle
lahf
mov
pop
mov
outsb
repnz
stc
mov
bound
xor
imul
sub
lcall
das
add
jo
sti
inc
jge
gs
pop
xchg
sarl
push
jle
sbb
es
cwtl
mov
out
push
dec
mov
mov
data16
sahf
sub
cli
fwait
call
addr16
add
test
scas
sub
clc
sbb
mov
addr16
push
xor
dec
mov
inc
imul
aaa
cmp
ds
pop
cmp
push
cmp
or
jmp
sbbb
add
jecxz
lea
add
mov
mov
loop
push
xlat
or
jo
loop
push
out
xor
xchg
stos
ret
adc
pop
add
xorb
inc
lret
fbld
cmp
scas
fs
add
stc
mov
sbb
mull
daa
pop
jbe
out
adc
ja
test
data16
inc
pop
repnz
cmpsb
mov
sbb
or
pop
or
mov
repnz
mov
or
notl
sub
xchg
sub
or
dec
add
mov
fsts
lcall
out
xchg
mov
or
xor
imul
mov
stos
fnstsw
fistps
into
pop
push
sti
scas
mull
loope
cltd
xor
jmp
inc
aaa
aaa
les
aam
cmpsw
stos
pop
aas
imul
sub
pop
adc
scas
cmp
in
mov
jmp
add
popa
inc
enter
cmp
data16
out
test
and
pop
pop
lds
movsb
fcoms
cmp
repnz
cmp
add
dec
insb
data16
sarl
inc
push
push
ss
mov
pop
pop
adc
rcll
fwait
pop
push
aad
ret
ss
imul
cmpsb
cmpsl
push
xor
sbb
sbb
cltd
xchg
and
mov
les
sub
not
loopne
xchg
inc
ret
xchg
and
test
sub
idivl
popa
adc
cmp
xchg
stos
lahf
push
pop
loope
inc
jne
push
jg
cmpsb
adc
push
sub
mov
sbb
xchg
ret
mov
or
loop
int3
inc
je
fwait
sub
les
dec
push
ljmp
test
or
dec
mov
mov
xchg
adc
ds
pop
stos
lea
andb
shlb
jns
pop
out
int3
pop
mov
mov
ljmp
inc
pushf
push
mov
enter
add
fmull
aad
inc
mov
pop
push
sbb
js
mov
mov
xlat
inc
test
imul
testl
stos
aas
push
dec
stc
push
or
add
xchg
stos
inc
shrl
fbld
aad
pop
mov
pop
mov
ljmp
pop
xor
sub
movsl
or
cmpsb
jp
pop
outsl
movsl
enter
mov
jl
daa
inc
ss
loope
aas
les
fiaddl
pop
daa
ds
push
or
sbb
das
cli
fmuls
cmc
testb
insb
push
cmp
int
sub
aas
jnp
mov
std
lcall
jae
in
push
popf
leave
inc
stos
push
cmp
xchg
sub
mov
rclb
push
bound
mulb
inc
jmp
push
fninit
inc
jge
pop
add
fbstp
adc
push
stos
addr16
mov
cltd
pop
lock
jbe
and
pop
dec
negb
addr16
and
cltd
ja
jmp
xor
jno
mov
xchg
hlt
push
inc
in
mov
cli
mov
sti
inc
das
jle
iret
pop
sahf
sbb
add
dec
jb
imul
cmpsl
mov
xchg
js
adc
mov
jl
lods
test
or
subl
outsb
and
and
pop
dec
das
xchg
or
lods
mov
pop
stos
xorb
ljmp
dec
in
cld
lock
std
jmp
pop
in
pop
sbbb
push
and
or
sub
out
fimuls
and
adc
rorb
dec
mov
jp
fmuls
jo
xor
mov
cld
mov
shlb
mov
in
xor
sbb
mov
mov
or
mov
out
call
and
jl
insl
cmpsb
aam
nop
dec
sbb
push
ret
test
std
inc
pop
pop
loop
es
fwait
xor
lcall
sbb
mov
xor
bound
jnp
inc
sbbl
outsl
mov
sbb
add
enter
jne
in
xchg
add
sarl
jbe
jbe
fstps
xchg
fs
lret
incl
mov
jp
mov
pop
inc
cltd
jle
out
mov
repz
or
negl
and
push
xchg
iret
ret
mov
repz
repnz
cmp
and
ja
xor
mov
jb
lret
push
mov
nop
mov
ss
and
mov
inc
jbe
xor
jle
pop
mov
scas
xchg
loope
test
lds
cld
mov
jp
in
sbb
popf
jns
faddl
stos
inc
insb
dec
test
mov
mov
lret
out
dec
mov
pop
fcomp
aad
or
in
sub
addr16
mov
out
loop
addr16
push
outsb
lahf
aas
popf
aaa
push
dec
js
and
lcall
dec
call
addr16
mov
pop
into
test
xchg
push
aad
jg
lret
out
sub
movsb
imul
xchg
cld
scas
push
ret
icebp
or
into
int3
cs
outsl
lock
adc
jl
rolb
outsl
adc
mov
xor
ja
fsubp
jb
shrl
lods
std
pop
in
push
jecxz,pn
xchg
jno
sub
push
pop
testl
mov
scas
push
cmp
adc
push
fsubl
and
adc
outsb
loopne
mov
jp
scas
cs
out
pop
xor
test
addr16
sub
xchg
push
loopne
sub
dec
mov
sub
stos
test
add
xchg
jb
mov
call
mov
mov
xchg
ds
std
bound
hlt
add
mov
cmpsb
insb
jge
aas
push
mov
push
and
aam
or
aad
adc
cmp
lret
mov
pop
cmp
in
outsb
aad
jbe
movsl
and
fmuls
adc
cwtl
mov
push
loope
sub
mov
or
popa
lods
mov
mov
push
lret
push
test
test
notb
repnz
sub
cmp
loop
or
hlt
fnstsw
inc
inc
pop
pop
stos
mov
add
mov
jne
addb
loope
shll
test
or
lret
mov
adc
xchg
push
xchg
cs
fmull
adc
stos
repz
nop
outsl
test
sbb
in
pop
mov
hlt
sub
add
mov
int
cld
pop
loopne
ret
push
lds
dec
stc
lea
xor
lds
mov
mov
iret
cmp
in
inc
testb
rorb
push
push
xor
jmp
push
ret
mov
and
or
arpl
stc
push
inc
js
fwait
out
jne
add
insl
cmpsb
inc
xchg
incb
imul
dec
sbbl
test
jle
sbb
fsub
sti
or
mov
aam
leave
leave
stos
jmp
push
inc
mulps
push
dec
or
mov
shl
jl
fsubl
mov
adc
stos
les
fcomps
add
mov
loope
flds
sub
dec
cs
jae
das
inc
aas
push
loopne
sub
sbb
or
popa
jmp
push
test
jmp
dec
push
cli
in
outsb
inc
adc
sbb
int3
sbb
mov
push
sarl
xchg
mov
adc
adc
mov
mov
faddl
lea
mov
pop
test
cmp
out
out
jle
dec
cmc
mov
stc
adc
jb
or
mov
lret
or
jnp
xlat
inc
jl
out
lret
and
scas
xlat
adc
cs
sub
cmp
pop
push
lea
std
inc
out
mov
dec
stc
and
push
sbb
fcoml
dec
andl
ljmp
xchg
lods
jmp
cld
in
adcb
inc
imul
pop
dec
sub
clc
pop
mov
xchg
xchg
in
jp
mov
lret
push
ret
arpl
fsts
add
fimuls
ficomps
jmp
or
icebp
adc
xor
xorl
aam
cmc
cld
test
xchg
cmp
add
dec
cmpsl
cmpsl
fcompl
dec
xor
inc
xor
xor
xor
fsubl
jle
inc
cmpl
sbb
xor
xor
cmp
out
pop
movsb
mov
mov
add
jo
mov
inc
mov
pop
push
cmp
add
loop
cltd
xor
and
aaa
push
push
push
gs
popa
or
movsb
push
dec
lds
lret
mov
push
mov
mov
sub
inc
add
lret
stos
out
sahf
mov
fcmovu
jecxz
mov
mov
push
cli
or
mov
fdivl
inc
push
mov
and
in
aam
mov
sti
cwtl
push
dec
testl
or
cwtl
pop
nop
sti
pop
aam
dec
xchg
out
aas
daa
jge
mov
xlat
loop
daa
mov
bound
aam
cld
icebp
inc
mov
jmp
sbb
filds
pusha
cli
stc
push
gs
or
xchg
in
stos
insl
cmpb
and
sub
mov
lock
pop
popa
cwtl
jno
outsl
dec
arpl
enter
pusha
inc
pop
xchg
pop
push
or
lea
inc
dec
scas
ret
sbb
cmp
icebp
les
jg
push
inc
inc
mov
xor
cmp
push
and
enter
pop
jl
and
imul
push
ret
imul
cmp
jno
dec
push
outsl
ds
xor
bound
ds
and
jl
addr16
push
mov
imul
cmp
mov
out
lock
hlt
xchg
xor
ficompl
ret
das
mov
roll
scas
ret
xchg
leave
enter
insl
lods
lahf
xchg
inc
add
fnstsw
push
repz
rcrl
xor
xlat
sbb
sub
call
mov
cli
test
pop
or
out
sbb
popa
jbe
or
and
hlt
sbb
sbb
dec
leave
inc
adc
aaa
mov
out
add
mov
icebp
ret
add
pop
int
mov
loop
or
or
lds
sub
xor
mov
jmp
ret
ljmp
mov
ljmp
lods
test
test
insb
add
dec
xchg
sub
in
mov
inc
mov
add
cmp
jecxz
imul
pushw
fmull
push
cmp
pusha
daa
outsl
xchg
aaa
jl
xor
mov
push
pop
addb
fdivl
leave
sub
fdivs
xor
cli
xchg
mov
dec
sub
js
fistl
repnz
roll
dec
pop
pushf
sub
cs
lcall
inc
inc
cmp
dec
and
insb
movsb
fiaddl
lds
dec
mov
mov
mov
mov
ja
std
xor
iret
adc
or
cmp
sub
cmpsl
test
aaa
pop
push
std
jae
repnz
push
mov
ficoms
cmp
cwtl
mov
jle
test
adc
mov
repnz
sbb
ffreep
in
lds
clc
cmp
or
hlt
outsl
xchg
cmp
xchg
cmp
mov
xchg
xor
aad
sub
jbe
jne
mov
push
pop
xchg
and
cltd
ja
jnp
sti
sbb
call
dec
fisttpl
jns
jmp
stos
xor
outsl
mov
cs
push
mov
add
rolb
lds
push
in
add
push
icebp
mov
std
arpl
in
testl
or
add
sub
xchg
jp
enter
add
cmpsb
pushf
jecxz
xchg
shr
mov
push
icebp
rolb
lods
sahf
aam
insl
insb
mov
or
ret
or
pop
push
pop
sub
in
out
cmp
sub
test
pop
push
ret
es
rcrl
bound
mov
je
scas
mov
mov
jmp
sbb
xor
std
mull
bound
push
mov
lahf
jecxz
lahf
dec
mov
ss
push
mov
or
inc
fldt
in
rcr
out
scas
in
sarl
in
add
pop
sbb
xor
jae
dec
mov
xchg
mov
arpl
fcomp
push
mov
aam
in
loop
xor
adc
out
sub
xchg
cltd
jne
add
xchg
xlat
test
mov
pusha
mov
cmp
roll
fs
and
stos
cld
out
mov
lea
out
and
mov
add
add
inc
out
in
dec
bound
lret
adc
repz
mov
jne
ss
add
and
or
and
imul
rcl
mov
fidivrs
popf
xchg
incl
aaa
mov
das
xchg
out
mov
jno
call
in
push
jg
xor
rcll
gs
lahf
jbe
fdivrp
push
mov
rcll
orb
cmp
dec
xchg
mov
outsl
aas
int3
insb
jecxz
add
scas
xchg
inc
pop
test
add
cli
inc
movl
nop
and
and
or
mov
fwait
xor
lret
add
lds
daa
imul
flds
pop
popf
mov
fwait
jmp
lds
mov
dec
jae
xchg
call
das
inc
enter
pop
loop
clc
inc
int3
pop
cmp
pop
xchg
rorl
mov
movsl
jge
adc
sbb
xchg
mov
mov
ret
push
sbb
push
daa
hlt
mov
pop
lods
stos
pushf
jle
add
test
sub
loopne
out
in
rolb
imul
mov
and
cmp
adc
mov
dec
push
ficompl
sarl
sbb
aaa
pop
dec
insl
insl
push
rcrb
push
punpckhbw
stos
outsl
xchg
ja
push
inc
in
push
add
mov
mov
or
lock
sub
xor
in
pop
cmpsl
jge
mov
ja
addr16
pop
mov
or
push
nop
or
lock
dec
add
xlat
fstpt
pop
inc
aas
mov
or
pop
cld
jnp
out
iret
jne
outsb
cmpsb
xor
push
sub
ret
js
xor
fs
push
pushf
dec
push
push
inc
jle
js
mov
xor
xchg
scas
lods
push
je
pop
pop
in
mov
loopne
out
push
fnstenv
cs
fists
subb
movsb
push
idivb
stc
cmc
cmp
xor
pop
in
repnz
shl
sti
adc
adc
jbe
fisttps
or
mov
test
push
mov
fwait
add
push
cmp
test
dec
mov
stos
out
cmp
mov
fwait
scas
xor
je
mov
mov
mov
fs
in
rcrb
cmp
mov
cmc
outsb
push
iret
xchg
mov
rcll
out
push
xchg
jbe
jp
xor
rcll
sbb
mov
bound
ret
cmc
xor
add
enter
xchg
outsb
lock
js
xor
ret
jl
out
mov
insb
fstps
pop
test
rorl
fstl
sarl
jge
xor
movsb
or
pop
pop
sahf
test
jne
mov
mov
xchg
and
pop
mov
hlt
add
imulb
fdivr
js
jnp
lahf
je
and
xchg
cli
nop
repnz
add
push
fadd
pop
dec
or
pop
mov
pop
movsl
pop
js
insl
jae
arpl
sub
ljmp
fs
sub
xchg
aaa
hlt
adc
dec
sub
aaa
push
and
out
leave
inc
test
fistpll
cmp
xchg
std
roll
xor
xlat
push
pusha
adc
jo
daa
adc
adc
sbb
mov
aaa
ss
push
fstps
icebp
mov
das
sbb
cmp
dec
lock
cli
mov
loopne
addr16
sub
mov
repnz
ja
mov
push
aad
popa
test
adcl
or
sub
xlat
fiaddl
xchg
push
push
andb
push
sbb
add
insl
pushw
std
bnd
push
jmp
or
add
repz
mov
jle
sub
jno
les
mov
xchg
or
pop
lea
adc
jno
icebp
enter
out
je
pop
ret
testl
or
rcrb
push
in
in
cmc
leave
fs
in
imull
xchg
pop
shrl
nop
leave
test
add
xor
push
popa
mov
nop
scas
fmuls
loop
push
push
xchg
xchg
testl
fdivp
jle
sbb
mov
jmp
jae
in
or
sbb
mov
xchg
and
xchg
inc
imulb
push
mov
into
fstpl
add
push
arpl
pop
push
int
jl
stos
adc
fbstp
dec
pop
test
mov
pop
es
les
push
cltd
dec
pop
xchg
adc
or
add
push
inc
lods
fdivl
jae
push
les
xor
aam
or
push
cmp
inc
xorl
ficoml
pop
cmp
adcb
jge
mov
stc
ljmp
int
lock
push
mov
cwtl
push
jle
and
and
outsl
or
push
adc
push
xchg
arpl
push
push
sub
xlat
in
cmpb
stos
cs
dec
popf
imul
mov
pop
mov
dec
and
pop
dec
movsb
mov
and
sbb
sbb
xor
inc
sbb
jns,pn
addr16
insb
testl
scas
mov
sti
lret
bound
xor
sub
xor
xchg
outsb
push
data16
inc
hlt
xchg
dec
stc
pop
add
sbb
pop
out
cmp
mov
outsb
mov
jns
in
mov
int3
cmpsl
movsl
and
jp
scas
pop
push
movsl
popf
sbb
sti
test
sub
pushf
je
cs
pop
sbb
mov
iret
cs
sbb
ret
xchg
sti
pop
cs
cmpsl
xor
sti
add
add
std
popa
sbb
gs
leave
mov
adc
fldl
popf
stc
test
hlt
and
fldcw
lods
sbb
fimull
notb
fisttpl
rcll
mov
lret
mov
inc
orb
clc
mov
pop
mov
paddw
das
subb
lahf
ret
cmp
cmp
pop
xor
mov
lods
in
cmc
out
add
inc
fnsetpm(287
push
neg
pop
add
mov
fisttpl
push
lret
lods
enter
sbb
adc
cmp
in
fwait
repz
mov
cmp
mov
or
pop
inc
sbb
in
pop
adc
add
adc
data16
or
addl
ljmp
jae
call
pop
cmp
popf
xchg
cli
push
mov
rcrb
jnp
loope
mov
arpl
int3
xor
stc
xchg
out
jp
mov
sbb
adc
dec
ss
fcmovnbe
inc
xor
jle
mov
aam
dec
mov
fstl
jmp
pop
les
xchg
loope
xchg
movl
jmp
sbb
fucomi
je
jmp
dec
mov
lods
jle
je
int
xor
aaa
or
lea
cwtl
push
stc
xchg
xchg
out
into
lret
test
int
test
movb
sbb
xchg
dec
filds
inc
hlt
addr16
jp
or
inc
sub
add
shll
add
fs
mov
outsl
xor
wrmsr
cmpb
sub
sti
inc
mov
adc
adcb
das
pop
mov
dec
scas
jge
leave
sub
push
cmc
stos
jl
es
xor
out
fcoml
mov
pop
add
cltd
stos
jo
mov
dec
shlb
adc
lods
and
mov
fisttps
mov
aad
aaa
stc
add
gs
push
jmp
mov
je
hlt
imul
sbb
jno
arpl
mov
inc
mov
lods
push
lahf
add
sub
add
push
cld
pop
sub
bound
test
pop
and
jno
lret
jmp
sub
and
sub
and
clc
xor
cmp
sub
int3
pushf
push
add
pop
and
fcomps
int3
sbb
in
and
adc
pop
mov
rclb
test
and
sub
mov
pop
xor
pop
cs
les
mov
dec
pop
jecxz
cmp
push
das
negb
and
pop
decb
pusha
ficoml
adc
lret
int3
nop
cmp
sub
push
jp
mov
mov
in
sub
and
lods
andl
lds
aas
sarl
xor
jge
jle
jnp
xchg
sarl
push
lds
jae
fsubrl
or
pop
jmp
decb
fldt
mov
test
test
icebp
mov
andb
out
push
stos
sbbb
mov
stos
sub
fistl
jb
shll
add
lock
xor
cltd
popa
cld
mov
fwait
test
dec
and
cmp
sbb
and
xor
xor
icebp
mov
ja
fldenv
lods
les
inc
test
ror
lret
fisttpll
mov
and
call
gs
pop
sub
bound
cmp
push
pop
stos
xor
dec
outsb
sbb
dec
push
pop
icebp
adc
js
in
cmp
push
fmuls
mov
loop
je
pusha
jnp
inc
pushf
in
dec
lahf
data16
mov
sbb
sub
xchg
push
enter
sbb
mull
iret
popl
pop
or
outsb
inc
pop
cmpsb
sbbl
mov
pop
fistpll
xchg
addb
pop
cmc
jne
jg
jge
xor
xor
cmp
mov
scas
gs
ja
out
out
adc
test
xor
cmpsb
xor
pop
push
int
hlt
rorb
ljmp
jg
mov
adc
ljmp
scas
ficompl
cmp
fdivr
mov
jne
xor
fidivrl
scas
mov
xchg
ljmp
and
rorb
xlat
inc
fisubrs
sti
leave
adc
push
lods
cmp
inc
mov
sub
xor
popa
fmuls
pop
imul
adcl
mov
rcrl
pop
ss
push
cmp
push
sbb
mov
shrl
adc
adc
lods
cmp
out
fsts
and
add
jnp
sbb
dec
or
in
mov
mov
outsl
mov
imul
movsl
arpl
stc
cwtl
lods
imul
repz
call
testb
loopne
jne
inc
test
adc
insb
mov
adc
add
adc
and
cpuid
shll
mov
push
cmp
mov
lods
dec
ja
pusha
dec
push
pushf
mov
sub
hlt
ljmp
add
or
cs
cmp
xchg
jle
push
dec
iret
inc
mov
or
or
mov
ret
aas
mov
add
mov
or
jno
cld
orb
ja
es
pop
fldl
repnz
stos
repnz
leave
repnz
lret
mov
and
into
lods
xor
daa
hlt
movsb
cli
imulb
mov
pop
scas
ret
add
cmpsl
imul
out
jae
dec
jle
mov
mov
cli
cmpsl
daa
es
ljmp
ret
jbe
sbb
sub
mov
addr16
rorl
cli
lds
maskmovq
mull
mov
mov
in
imull
lahf
dec
xchg
int3
mov
jmp
cmp
mov
test
push
cwtl
aaa
mov
mov
push
push
jle
mov
and
mov
and
dec
icebp
pop
jae
out
movsb
popf
cmp
push
xlat
daa
sub
inc
repz
in
mov
in
rcl
out
std
lret
roll
xchg
add
lret
push
mov
sub
mov
loopne
insb
pop
pop
add
insl
rcrb
add
cld
out
cli
mov
sub
in
pop
jecxz
ss
inc
fs
pop
loope
xor
nop
inc
add
mov
sub
lret
daa
dec
rcpps
mov
ficomps
dec
mov
scas
aam
xchg
mov
jmp
push
lret
fdivl
or
faddp
cmp
jmp
sub
ds
mov
pop
mov
cld
mov
push
int3
jae
loop
mov
popf
jecxz
xor
decb
shll
xchg
imul
js
xor
sbb
pop
pop
aad
stos
jbe
pop
movsl
mov
xor
xchg
jle
bnd
fsubs
and
imul
imul
sbb
out
insl
fisttps
or
jne
arpl
pop
jmp
push
pop
loope
imul
test
push
sbb
push
jno
push
push
inc
xchg
inc
stc
lret
mov
sub
adc
sub
shr
mov
je
ja
and
mov
arpl
outsb
test
jne
lret
push
or
jnp
in
jo
and
in
frstor
add
out
adc
enter
xchg
aad
and
cmc
dec
in
int3
mov
jl
push
pop
inc
and
int
push
repz
gs
and
sub
add
and
das
call
iret
or
pop
sti
lahf
sti
icebp
pop
fdivrs
imul
pop
call
bound
sbb
push
jmp
push
push
cmp
push
pop
call
in
inc
push
xor
fsubs
cltd
fwait
sub
and
adc
fstpt
xor
add
push
test
adc
jmp
xor
andb
or
jge
sub
dec
sub
movsl
and
enter
cmp
in
out
push
xor
popa
xchg
jmp
jg
push
hlt
jle
add
xchg
cmpl
ja
cmp
stos
sub
mov
jecxz
sub
mov
bound
in
cmp
sub
clc
lret
js
test
xlat
pop
mov
jl
lea
dec
cld
push
test
test
repz
dec
xor
rorb
pushf
rep
xchg
inc
or
sub
push
int3
out
lcall
fcmove
andb
clc
and
pop
outsl
push
sti
cli
icebp
sbb
shll
sub
mov
sub
mov
cmpsl
or
cmp
loope
fmull
testl
aad
cltd
or
adc
jae
xlat
rcrb
movsb
jbe
les
mov
mov
repnz
ds
inc
aad
testl
lods
pop
fidivrl
xchg
add
shll
xchg
vpunpckhqdq
inc
cmp
inc
popa
lock
ss
cmp
add
std
aam
stos
aaa
testb
outsl
addb
mov
adcb
lds
nop
call
add
adc
xor
mov
jae
mov
mov
fs
aam
push
shll
sbb
lret
adc
cmp
add
mov
test
dec
stos
mov
dec
bound
fsubr
push
dec
fs
jl
test
enter
rorb
int
fdivs
into
jno
shrl
mov
iret
cmp
int3
xchg
pop
sub
jmp
pushf
mov
jge
bound
mov
push
iret
mov
sahf
gs
xor
inc
sbb
mov
pop
xchg
xor
inc
imulb
xchg
shrl
pushw
add
shl
inc
adc
out
jb
mov
int
out
pop
mov
shll
repz
je
fwait
cwtl
xchg
push
push
cmp
daa
ret
mov
and
add
mul
sbb
mov
in
xor
and
cmp
leave
push
outsb
imul
ficoml
imul
shrb
adc
maskmovq
imull
test
shrb
cli
inc
jge
and
mov
cmp
mov
testb
push
or
lds
shl
ret
and
stos
jmp
dec
mov
pop
shrl
js
sub
dec
fimuls
dec
jmp
cmc
pusha
scas
lcall
sbb
xlat
jnp
enter
ljmp
or
xchg
insb
cmp
imul
insl
andb
push
jne
imul
jle
cmp
fadds
outsl
fcmovnb
jp
xlat
insl
data16
clc
stos
mov
aad
push
lea
rorl
add
sarb
fadds
outsl
imul
xchg
in
daa
pop
mov
cld
imul
test
jmp
and
cwtl
test
adcl
and
fdivrp
out
add
aaa
push
xor
pop
cmpsb
in
jmp
mov
out
popa
adc
arpl
std
jg
lret
out
sbb
xor
inc
mov
add
lea
sbb
jo
xor
daa
int3
mov
cld
adc
adc
cmp
clc
std
pop
push
xchg
into
mov
hlt
xchg
pushf
jnp
push
call
scas
adc
cmp
or
jmp
xchg
mov
jno
faddp
pop
pop
int
add
into
in
lcall
cmpsb
add
popf
rclb
and
out
xchg
sub
popa
pop
lods
adc
pusha
xchg
xchg
cltd
pop
push
sub
outsl
icebp
popa
mov
xor
add
std
es
inc
or
mov
ror
rolb
xlat
add
pusha
lret
sub
lods
mov
xchg
inc
or
mov
xchg
add
cmp
push
mov
add
lcall
cmpsb
pop
sbb
out
ljmp
shl
aaa
scas
push
call
jecxz
test
out
sbb
mov
mov
stos
jge
mov
fistpll
add
mov
cli
shrl
lods
pop
jmp
mov
pop
jg
xor
inc
push
fcmovbe
push
or
add
flds
pop
popf
pop
jb
hlt
mov
xchg
jg
jp
out
push
test
dec
cmp
stc
loopne
mov
stc
ja
or
push
imul
adcb
xor
mov
shlb
sahf
xchg
dec
cmp
push
mov
adc
push
xchg
dec
idivl
jno
jecxz
addr16
nop
cmp
pop
loope
sbb
ja
dec
ror
xchg
xchg
stos
dec
mov
xlat
add
loope
xchg
xchg
jle
je
mov
pop
push
hlt
mov
xlat
xor
xor
lahf
mov
xlat
mov
outsl
and
lods
shll
jbe
sub
push
and
sbb
cltd
rcl
mov
test
mov
popa
add
adc
stos
cltd
push
mov
in
cmp
popa
inc
sub
int3
cltd
xchg
test
cltd
mov
push
hlt
lcall
rorb
mov
inc
hlt
pushf
xchg
fiaddl
and
mov
leave
dec
jp
fistps
ja
push
xchg
ss
sahf
mov
testl
or
cmp
or
xchg
out
fmull
cld
inc
mov
inc
and
sub
repnz
dec
out
sub
sub
repnz
daa
mov
lock
mov
ss
ret
cltd
mov
pushf
lahf
ret
insl
xchg
es
jb
in
mov
sub
inc
sub
pop
imul
outsl
and
das
out
fistl
lods
stos
dec
mov
ficoml
inc
shlb
inc
or
sbb
cmp
in
sbb
sbb
stos
cmc
test
or
jecxz
cmp
divl
sbb
cli
mov
ss
pop
xchg
inc
jne
cmp
scas
adc
sub
ret
fwait
cmovb
mov
push
cld
add
pop
mov
cmp
lods
ja
test
aam
mov
push
std
std
scas
jns
fidivl
pop
mov
stos
jle
in
mov
or
mov
out
mov
js
dec
fbstp
enter
lock
cmc
sbb
mov
inc
hlt
lret
ds
jge
push
push
sub
outsb
mov
dec
ficoms
ja
cmp
sti
mov
int
imul
lods
xchg
sbb
pop
dec
cli
lahf
or
aam
sbb
xchg
lcall
mov
jnp
fadds
jle
jb
aam
repz
shr
mov
xor
dec
add
rorb
in
enter
lahf
and
pop
mov
call
cs
add
sarb
movsb
scas
mov
inc
mov
int
dec
repz
orl
dec
xorb
push
add
imul
mov
dec
lods
sbb
fsubs
push
pop
dec
test
lea
in
and
mov
cmp
in
orl
inc
push
cmpsl
arpl
insb
lret
add
movsl
mov
pandn
mov
in
pushf
pop
je
cmp
scas
add
push
mov
push
xchg
push
sti
or
dec
pop
xchg
mov
popa
add
int
out
fucomi
ljmp
cmp
cltd
sbb
popa
mov
xor
and
stc
loopne
sti
jb
pop
pop
jns
push
into
fxch
iret
jb
rorl
cld
xlat
jnp
sbb
adc
out
imul
mov
mov
fidivl
daa
cmp
pop
mov
fwait
push
into
cli
bound
add
das
loop
pop
xchg
mov
and
mov
in
js
pop
xchg
lods
fsubr
cmp
test
dec
ds
stc
push
dec
push
xchg
scas
pop
movsl
sub
pop
outsl
xchg
dec
aam
push
in
scas
cli
mov
cmc
fsubrl
loopne
stos
in
add
ja
dec
fs
xor
imul
push
jo
addr16
or
and
mov
pop
pop
std
out
lock
jbe
mov
mov
sub
cmp
insl
scas
leave
cmp
aaa
popl
out
pusha
out
int
dec
lret
jmp
push
fidivrl
add
stos
ljmp
stos
test
xor
lods
movsb
fs
addr16
ljmp
and
and
ss
xchg
insl
xchg
adc
stc
insb
addr16
sarb
popa
push
push
xchg
pop
jb
imul
pushl
jo
inc
adc
imul
mov
pusha
and
mov
add
idivl
jmp
in
icebp
stos
je
mov
xchg
sub
mov
and
or
cmp
xor
imul
sbb
mov
ja
xchg
fildll
jp
mov
mov
jmp
xchg
es
jb
pop
push
mov
fsubrs
rorb
xor
lcallw
ss
sbb
fcompl
in
nop
dec
sub
les
fistpll
add
imul
pop
ds
out
jb
cs
sbb
in
sbb
pop
push
adc
je
movsb
cs
xor
loope
ret
enter
cld
adc
xchg
push
daa
movsb
inc
sbb
xchg
mov
aad
ljmp
inc
sub
sub
inc
ffreep
leave
test
sarb
mov
xor
xlat
lods
dec
push
inc
sub
mov
or
ret
fstps
adc
leave
xchg
and
es
out
add
sub
popf
test
cmpsl
fwait
cld
add
mov
loope
arpl
stos
cmp
sarl
push
or
sub
ret
popf
jp
pop
mov
ret
inc
sub
push
pop
jmp
xchg
in
aam
dec
cmp
sbb
sbb
add
in
adc
rcrl
jno
xor
lcall
mov
stc
fwait
lret
idivl
sub
or
add
mov
add
dec
inc
scas
inc
dec
xor
rolb
mov
in
inc
pop
lret
adc
je
lcall
sub
sbb
jecxz
mov
mov
shll
into
rorb
repz
test
pop
pop
fnstsw
xchg
sti
dec
dec
fildl
stos
sub
and
sbb
dec
repz
test
mov
push
inc
loopne
mov
pop
ret
jp
sahf
popa
jno
mov
lret
lea
je
es
fistl
rolb
out
mov
ds
mov
sbb
add
test
lcall
add
and
int3
cmp
int
jae
pop
cmp
inc
std
jb
sbb
call
xor
push
and
inc
gs
push
jne
out
mov
adc
mov
adc
sub
push
mov
cmc
mov
sub
sahf
cmpsb
sarb
data16
mov
outsl
dec
adc
push
insl
mov
out
add
xor
stos
cmp
xlat
shl
push
ret
mov
sti
cli
loopne
negb
pop
xchg
cmp
mov
addr16
add
jns
into
icebp
push
cmp
ljmp
mov
in
jb
in
and
js
jno
xchg
cmpb
dec
mov
call
cmp
movsb
scas
dec
jle
loopne
lahf
scas
pop
push
ss
sbb
push
xchg
jno
push
cwtl
push
mov
or
adc
out
mov
add
mov
gs
add
jp
shll
pushf
mov
adc
stos
add
mov
imul
xor
ja
push
cmpsb
or
adc
jmp
aaa
out
jmp
jle
pause
test
out
int3
sub
gs
pushf
push
fidivrs
sti
or
cmpsb
ljmp
daa
mov
push
in
jg
pop
lods
enter
ss
push
sub
dec
mov
movsl
mov
push
cmp
int3
dec
mov
xchg
cwtl
out
in
mov
js
mov
dec
notl
fdivr
sub
js
sub
fs
mov
and
push
xchg
into
inc
out
add
sbb
mov
add
and
sbb
sahf
outsl
test
dec
mull
mov
lds
bound
leave
pop
loope
in
repz
dec
dec
pop
cmpl
aad
jp
cmp
push
pop
clc
enter
or
pop
stos
sbb
out
xchg
aad
addr16
in
pusha
sbb
insl
xor
fbstp
push
outsb
mov
jp
add
popf
into
das
sub
mov
fwait
cmp
pop
mov
insb
cmp
sbb
jge
mov
sbb
in
lods
cmpsb
and
stc
add
sbb
or
mov
loopne
dec
push
adcl
sbb
lock
xor
test
shll
add
cmp
arpl
push
lds
pop
orb
mov
pop
xor
sbb
int
popf
adc
cmp
negb
mov
push
ret
enter
xchg
fucompp
and
push
adc
fstpl
aam
jbe
mov
sbb
inc
or
jecxz
andl
or
jge
mov
cmp
das
or
or
iret
push
inc
cvtps2pd
repnz
ja
sti
lret
fnstsw
jbe
outsl
nop
ds
push
lods
iret
dec
xchg
or
adc
dec
cli
jmp
dec
ja
sbb
lret
jne
xor
adc
xor
test
int
ss
jge
add
push
and
cld
xor
pop
movsl
aas
dec
mov
dec
lods
jbe
cmp
and
mul
xchg
addl
add
mov
push
xor
stc
sub
cltd
pop
xor
inc
pop
ficoms
pextrw
mov
into
adc
sub
mov
fwait
roll
je
mov
jne
lret
fcomps
shll
mov
aam
bound
add
add
mov
sti
inc
imul
inc
outsb
add
jae
jo
add
and
cltd
test
sbb
inc
ret
shrb
pminub
jae
or
inc
out
push
sub
adc
mov
fiaddl
jge
scas
pop
inc
pop
cltd
push
sbb
outsb
dec
sbb
pop
jnp
xchg
dec
cmpsl
add
rcrb
daa
inc
or
mov
push
pushf
out
inc
cmp
xchg
nop
pop
xchg
and
int3
repz
lea
stc
inc
mov
dec
push
sub
dec
cmp
xor
push
rol
inc
rol
daa
test
cmpsl
sub
fdivs
dec
or
mov
les
mov
in
mov
sub
cltd
pop
mov
dec
xchg
loope
inc
push
hlt
jbe
nop
mov
ss
push
icebp
mov
ljmp
cltd
cmp
lds
lahf
mov
jne
dec
adc
and
scas
dec
dec
sbb
or
nop
xchg
gs
jo
pop
xor
and
in
mov
ds
inc
mov
jecxz
jge
pop
push
pop
loopne
jmp
pop
ret
push
jno
loopne
mov
shll
fnsave
je
lods
scas
pop
xlat
cld
add
rcrb
push
scas
or
stos
int
add
mov
pop
mov
in
inc
rclb
hlt
adc
jmp
fstl
push
or
xor
push
push
fiaddl
inc
inc
cwtl
adc
aad
cmp
or
jge
int3
cs
pop
xor
jnp
leave
ficomps
adc
in
sbbb
fmuls
popf
ljmp
push
dec
cmp
aad
xchg
xchg
dec
insb
xchg
cld
and
lahf
xchg
mov
repz
dec
mov
jge
cmpsb
in
push
mov
mov
cmpsl
pop
ja
pop
ds
insb
int3
test
sub
mov
dec
iret
inc
push
lret
sbb
jnp
int
lret
insl
mov
mov
mov
bound
sbb
dec
cmp
mov
call
lea
iret
test
sub
sub
adcl
sti
jns
pop
mov
sbb
and
push
fsubs
ficompl
jo
inc
sbb
pushf
sub
inc
adc
mov
addl
cwtl
fstpt
lds
push
clc
mov
dec
fildll
sub
adc
cmpb
dec
ja
xchg
cli
lea
jns
xchg
xchg
push
jecxz
pop
dec
shrb
add
push
jne
pop
jge
mov
cmp
cmp
mov
and
mov
ss
jo
das
mov
jne
fnsave
and
daa
iret
mov
mov
inc
fldcw
orb
stos
or
loop
in
je
and
addr16
fmuls
mov
dec
dec
push
sbb
data16
movsl
leave
sub
cmc
cmp
push
mov
sub
loop
fcmovnb
sub
and
fcoml
icebp
shlb
pop
std
sub
jg
daa
jns
leave
mov
es
cmp
jp
sbb
inc
addr16
cmpsb
fcoml
or
mov
push
clc
sbb
ret
mov
int
aad
loope
fwait
mov
insl
into
clc
jno
cs
shl
mov
gs
pop
fldenv
xchg
cld
cmp
inc
adc
mov
jecxz
xchg
cmp
mov
add
push
arpl
add
out
popf
cltd
mov
jecxz
pop
das
push
fstps
adc
mov
jne
sbb
mov
ficomps
dec
ss
sub
dec
out
aad
xchg
cli
ror
lea
sar
cltd
movsb
mov
xor
and
enter
jbe
inc
movq
aam
mov
sub
push
pop
adc
mov
cli
aad
cmpsb
pusha
jp
in
cld
add
adc
cmp
rorb
mov
fisttpl
push
cld
and
loope
jge
repz
lahf
push
gs
push
lret
adc
xor
dec
pop
rep
push
mov
mov
pop
inc
sub
decb
pusha
sbb
jns
xor
cmpl
push
lret
inc
scas
push
xchg
ret
daa
js
sbb
mov
scas
push
or
in
dec
ss
mov
jae
fs
rcr
addr16
mov
scas
pop
dec
aad
add
xlat
loope
rcrb
movsb
inc
push
loop
mov
mov
dec
mov
repz
jl
out
or
insl
repz
or
pop
fucom
test
insl
xchg
rcrb
pop
cmp
jo
mov
unpckhps
mov
mov
lcall
mov
mov
add
gs
aam
push
jmp
and
mov
popa
push
inc
or
cwtl
push
xor
cmp
cmpsl
jp
push
jp
shll
xchg
mov
push
dec
xor
mov
lcall
xchg
outsl
out
or
adc
adc
std
pusha
xor
bound
negl
pop
push
pusha
mov
lds
in
icebp
pop
push
das
and
int3
roll
and
fadds
icebp
lahf
pop
notb
sti
lahf
roll
ja
les
xor
hlt
fisubrl
jmp
mov
insl
test
in
xor
sub
sbb
shl
fisubrs
aam
sbb
or
mov
push
sub
sbbb
cmp
rcr
roll
in
sub
fldl
xchg
lcall
mov
insl
push
sbb
cwtl
cltd
xor
ret
popa
fldl2e
ljmp
test
jge
sbb
mov
cmpsb
sub
popf
lock
lock
js
add
sbb
jecxz
xor
jg
aad
add
pop
or
mov
lods
xchg
sub
pop
and
inc
popa
mov
or
rep
cmp
xor
mov
rcl
mov
cmp
or
leave
and
pop
pop
lock
scas
popa
addr16
push
enter
cmpsb
dec
jnp
mov
jmp
je
mov
and
aaa
pop
sub
scas
insl
xor
call
std
inc
cmpl
xchg
mov
dec
mov
data16
xchg
sub
sub
mov
sbb
outsl
repz
lret
insl
dec
cmpsl
outsl
xor
std
add
cltd
pop
inc
fwait
lods
push
jno
cmpsb
mov
movsl
data16
and
mov
out
aaa
pop
clc
pusha
dec
push
movsl
enter
shrl
jnp
js
das
or
sbb
jne
inc
shl
adc
iret
and
jbe
and
pop
shr
lahf
fcoms
xchg
pop
inc
addb
inc
ja
inc
ret
sub
xchg
mov
adcb
lock
pop
inc
stos
dec
popf
jl
ret
jne
mov
push
into
add
and
imul
addr16
mov
cmp
fcmovne
lret
push
ret
adc
ret
std
fisubrl
mov
mov
mov
mov
lea
push
in
jg
out
imul
shlb
movsb
subl
pop
mov
leave
xchg
notb
push
out
cmpsl
fisubs
lds
shlb
test
stc
mov
ja
dec
mov
mov
test
cmpsb
cmp
in
mov
or
icebp
pop
das
stos
cld
push
xchg
js
sarb
dec
jp
pop
inc
or
mov
lea
jnp
movsl
add
jp
mov
stc
rcrb
mov
jmp
push
jg
cmp
imul
movl
push
add
imul
fucomip
mov
insl
mov
add
int3
subb
xor
inc
sti
xchg
inc
or
jecxz
jbe
jb
lods
xor
adc
pop
cmp
sbb
cmp
add
jb
into
pop
xchg
xor
pop
cmpsb
pop
in
push
in
movsb
dec
sbb
jl
add
jo
sbb
into
cmp
mov
ret
pop
fwait
ret
movsl
jecxz
arpl
mov
fidivrl
xchg
inc
xchg
jbe
ret
inc
gs
in
loop
push
aaa
std
push
push
loop
movl
lods
pushf
xchg
lods
dec
or
movsl
rcll
dec
mov
shr
push
jle
inc
out
push
mov
or
popa
dec
sti
pop
lods
adc
call
cmp
pop
inc
xor
push
cltd
shrb
iret
and
pop
and
jnp
or
out
aas
lret
shrb
lods
or
mov
push
fiadds
or
inc
pop
dec
or
into
dec
iret
mov
add
dec
xor
sub
fs
ret
or
pop
mov
aas
imul
ss
repz
jge
mov
jg
push
pop
jecxz
loopne
jmp
jp
sub
xlat
inc
fsubr
cs
xchg
rcrb
ljmp
xor
or
dec
push
mov
vprotb
push
push
sub
lea
inc
or
aam
push
je
adc
imull
jnp
frstor
add
sbb
scas
push
mov
popa
outsb
dec
call
xchg
in
push
cli
sub
lods
xchg
scas
cmc
out
icebp
xor
and
mov
cmp
aas
fimuls
nop
add
cmp
and
cmp
outsl
sbb
lock
or
and
xchg
mov
mov
je
int3
jne
pop
lret
scas
dec
and
imul
aas
mov
repnz
sub
xchg
scas
mov
sub
add
popa
jmp
push
add
fwait
inc
aas
mov
outsb
push
cmpsl
out
pop
mov
pop
loope
sbb
outsl
popf
addb
in
or
aas
scas
sbb
pop
push
pop
mov
sbb
adc
dec
mull
shll
mov
in
testl
sbb
mov
add
ss
ret
mov
push
or
sbb
ja
push
push
nop
jbe
dec
iret
or
stos
stos
scas
and
push
hlt
call
sbbb
pushf
icebp
add
pop
sub
xchg
sti
mov
jns
out
jl
sub
xorl
loopne
clc
int
dec
lock
das
xchg
fcomps
stos
cmc
push
out
call
or
adc
lods
fnstcw
in
sub
dec
push
adc
lahf
mov
cwtl
xlat
inc
push
mov
xchg
mov
xor
jmp
data16
pop
pop
ljmp
sub
loopne
sti
inc
out
in
pop
cld
push
rcrb
pop
cli
xchg
test
push
enter
sub
or
nop
idivl
fistl
jl
jle
cmp
hlt
int3
mov
les
notb
inc
mov
fcmovnbe
or
mov
pop
jl
dec
adc
shrl
out
loop
fmuls
jl
data16
sub
sub
in
mov
sbb
push
stos
out
shl
ja
pop
mov
pusha
push
mov
mov
arpl
call
negl
xchg
jle
or
sti
loopne
lret
dec
shrl
jp
nop
lock
int
notb
xor
sbb
xor
add
insb
out
xchg
sbb
call
repnz
icebp
loope
das
je
mov
fcompl
dec
fsubrl
add
iret
fidivs
scas
jno
mov
push
sbb
mov
nop
jmp
xor
scas
xor
dec
repnz
movsl
into
mov
pop
pop
jb
xorb
fwait
mov
ret
push
dec
push
and
jg
ss
or
rcrl
dec
inc
ret
rorl
xchg
dec
mov
out
negb
mov
xor
int
push
jo
test
inc
pushf
push
das
sbb
flds
adc
add
scas
jnp
adc
or
cltd
jge
jnp
inc
dec
mov
and
sarl
xor
add
xor
into
loopne
popf
lahf
mov
rorl
mov
adc
imul
mov
push
inc
lds
xor
add
adc
imul
cli
xchg
inc
repnz
scas
mov
add
dec
orl
shl
cmp
ficoml
xor
mov
or
movsl
aas
pop
ret
and
cmp
sub
push
neg
mov
sub
xor
in
daa
xor
xor
test
push
jns
push
cmpsl
popl
mov
add
jns
mov
adc
mov
xchg
adc
mov
dec
js
cld
scas
adc
xchg
mov
and
cli
outsl
mov
push
pop
mov
mov
mov
cmc
sbb
inc
jp
sbbb
fsubl
mov
mov
iret
push
mov
push
adc
loopne
imul
dec
and
pop
ficoml
dec
add
pop
jmp
xchg
dec
roll
lea
out
in
sar
jge
loopne
mov
dec
test
adc
add
out
add
stc
aaa
sbb
jge
cltd
test
rol
orl
in
and
addr16
mov
jecxz
mov
mov
addb
add
sbb
out
out
xchg
sbb
xorl
mov
decb
xor
xchg
sub
inc
mov
into
adc
cmpsb
adc
out
adc
pause
adc
idivb
insl
push
test
insb
inc
dec
sahf
pop
ds
mov
addr16
hlt
cmp
in
adc
vcvtpd2dqx
add
xlat
xchg
xor
add
mov
mov
xchg
divl
cmpsl
jmp
mov
loop
pop
adc
bound
sbb
xchg
loope
lahf
stos
in
jns
es
push
xor
mov
lret
mov
cli
movsb
pop
pusha
cmp
int3
and
sub
dec
xchg
cwtl
mov
push
push
adc
enter
sbb
pop
ds
sbb
arpl
push
dec
adc
in
sbb
lods
push
les
push
cmc
sbb
mov
adc
xchg
jl
ja
or
das
xchg
fsubr
sti
movl
xor
outsb
add
loope
jecxz
adc
aad
nop
aad
xchg
cmp
mov
ds
popa
adc
push
inc
push
lock
inc
jno
andl
dec
push
movl
lahf
imul
mov
in
mov
cmp
ret
jnp
and
mov
jmp
fs
xor
cmc
loope
shrl
sub
mov
into
or
push
push
push
test
cmp
mov
pop
in
inc
pop
pop
ss
aam
jnp
pusha
push
dec
dec
inc
rcl
in
xchg
jmp
les
add
cmc
pop
jg
rcll
sbbb
pop
inc
pop
push
es
insb
and
out
jnp
adc
sub
add
fs
cmpsb
push
jns
push
mov
cmp
lds
pop
int
adc
xchg
sbb
dec
mov
cmpsl
dec
ljmp
inc
adc
pop
pop
inc
and
push
push
out
and
add
and
jns
sbbl
adc
subl
dec
sbb
je
loope
test
shl
adc
mov
push
add
mov
shll
out
jno
cwtl
push
mov
inc
gs
in
call
add
mov
es
rorb
or
lret
mov
test
mov
and
inc
mov
jo
sar
call
jnp
ss
sbb
in
mov
mov
mov
cmp
and
lret
mov
cmp
sub
ds
xchg
nop
aas
or
leave
push
loopne
and
data16
and
xor
jmp
mov
push
testl
shlb
sbb
cmp
testb
cltd
jno
inc
cld
cli
fucomip
dec
into
cmp
cmp
inc
mov
adcl
rcrb
jae
jne
in
adcb
rcll
scas
aam
neg
int3
adcl
loopne
jb
cmc
cltd
es
popa
cmp
dec
cmpsl
jo
test
jno
pop
iret
mov
sti
pop
jmp
sbb
mov
inc
mov
sub
add
xchg
sbb
negb
inc
imul
push
or
xchg
int3
repnz
mov
ret
push
mov
int
repz
mull
mov
sub
jne
mov
call
xchg
jbe
cld
stos
arpl
es
inc
mov
leave
cmpsb
fisttps
or
scas
nop
ljmp
and
mov
jmp
mov
xor
daa
out
fwait
incl
mov
outsb
push
into
imul
xor
xor
mov
push
sarb
xor
imul
mov
push
lcall
repz
or
sbb
jns
dec
push
mov
leave
dec
loopne
add
rcrl
adc
hlt
ficoml
in
mov
lahf
add
sub
xchg
and
pop
mov
popf
mov
dec
mov
dec
js
lret
inc
xor
outsl
jae
inc
int
xchg
mov
push
cmpsb
mov
mov
cmp
and
fsubr
xchg
test
sti
in
or
fstpl
bnd
jbe
inc
ljmp
push
adc
and
pop
lods
add
mov
leave
pusha
mov
xor
xor
sbb
jne
jb
ja
sbb
mov
rol
cli
inc
push
ja
pop
lock
pop
sub
call
pusha
sub
mov
mov
pop
pop
test
jle
outsb
out
divl
mov
imul
push
loopne
mov
jl
jl
in
sbb
inc
sti
inc
lret
leave
in
sub
xchg
inc
ret
push
pusha
fwait
push
rolb
sub
test
insb
push
and
arpl
jle
mov
jecxz
cli
xchg
fidivrs
jp
stc
jmp
jo
pop
push
sbb
jecxz
decb
mov
int
inc
adc
imul
push
dec
cld
add
shr
jl
mov
xor
out
adc
outsb
in
fwait
insb
jecxz
sahf
jg
cmp
das
clc
scas
adc
push
xchg
xchg
sbb
out
dec
adc
sub
mov
xchg
dec
xchg
xchg
pop
out
dec
xchg
dec
adc
jo
inc
sub
stos
test
dec
pushf
sub
jmp
push
jae
loopne
scas
and
dec
inc
inc
pop
or
jae
out
lds
fnstenv
xchg
mov
aad
test
sti
mov
and
jne
imul
inc
cwtl
xchg
js
adc
arpl
pop
dec
into
testl
sub
pinsrw
ds
fcmovu
popa
inc
sbb
in
test
mov
sti
lea
sub
iret
rorb
sub
outsb
das
push
imul
test
outsb
inc
pop
in
rorl
mov
enter
push
out
add
adc
stc
inc
jae
add
data16
jle
rorl
scas
dec
js
cmp
sub
xchg
call
fstpl
and
mov
or
sti
call
jmp
push
lea
jmp
popa
pop
cmp
adc
adc
jae
insb
push
sbb
mov
jnp
int3
cmp
jmp
cli
cmp
clc
and
mov
pop
or
enter
pop
std
nop
cmp
push
dec
in
sbb
lock
ss
ret
in
xor
lea
cmpsb
insl
sbb
pop
inc
jae
repnz
pop
mov
mov
jb
in
sarb
mov
lds
inc
cmpsb
ret
mov
lret
xor
enter
mov
out
cmp
scas
sub
lret
bound
shrl
cmp
mov
int3
addl
mov
dec
bound
jp
aas
out
xor
and
xor
enter
jb
mov
notb
fmulp
xchg
in
jo
je
lcall
popa
and
popa
adc
push
ljmp
popaw
inc
jno
jbe
scas
push
mov
push
imul
test
outsb
cmp
mov
push
insl
or
jp
pusha
xchg
push
inc
sub
outsl
jmp
or
sarl
das
cs
shll
int
sbb
pop
test
or
mov
cli
xchg
xchg
sbb
push
and
push
mov
mov
outsb
inc
mov
add
fnsave
xor
in
mov
push
mov
and
mov
inc
daa
jns
gs
imull
insb
and
in
scas
aad
dec
sti
push
mov
jmp
icebp
add
jl
push
ficomps
sti
sahf
shrb
je
orb
dec
xchg
stos
in
xchg
stos
sbb
sub
xlat
ja
pop
mov
push
andb
jp
in
outsl
lock
or
ficomps
dec
inc
inc
cmc
or
popa
les
call
arpl
jge
ja
out
pop
sbb
pop
or
movsl
fsubl
cmp
pusha
and
xor
add
jnp
fs
call
lods
pop
mov
lock
movsl
push
lret
fimuls
rcl
clc
xchg
loopne
fnop
mov
je
and
mov
ljmp
aaa
sub
inc
leave
mov
imul
dec
fs
jge
pop
sbb
aas
mov
and
cmp
shlb
leave
dec
or
test
lret
add
and
mov
or
xchg
in
mov
mov
shlb
clc
roll
push
cmpsl
sbb
and
filds
mov
cmp
fidivrl
cmpsl
into
adc
into
repnz
pop
aam
sahf
mov
jmp
adcl
mov
leave
cli
ja
int3
out
cmpsl
ret
pop
sbb
mull
pop
inc
jg
es
sbb
or
mov
xchg
push
xchg
sbb
and
ffreep
dec
jl
sub
jg
js
out
mov
jmp
mov
loope
scas
inc
loope
cmp
cli
testl
xorb
pop
insl
ret
mov
cmp
test
adc
lods
fs
cmp
push
pop
dec
inc
and
cmpsb
push
sub
add
lahf
adc
cmp
push
stc
cmp
mov
cmpsl
orb
pop
ds
iret
adc
push
cs
jns,pn
je
dec
mov
dec
cmp
mov
repz
call
mov
mov
push
inc
pop
pop
push
mov
stos
push
pop
xchg
dec
xorb
sar
and
rclb
cmpsb
mov
out
in
jo
sbb
mov
out
xchg
mull
jp
mull
jbe
lret
sub
pop
in
sarl
inc
addr16
mov
mov
dec
and
xchg
or
loopne
test
jg,pn
das
mov
sarl
jns
push
clc
mov
lods
hlt
dec
or
cmp
push
inc
js
lods
dec
pop
mov
jno
idivl
sahf
out
fucomip
insl
jg
pop
cmpsb
xchg
mov
xor
lret
jne
out
add
dec
scas
dec
das
jns
out
fs
test
mov
adc
cmpl
jle
push
mov
cmpsl
or
subb
aas
jno
pushl
ret
inc
outsb
in
aad
mov
bound
gs
into
data16
loope
std
adc
sbb
lea
and
hlt
mov
mov
inc
outsl
scas
cltd
jbe
push
fnsave
push
adc
dec
dec
jl
pop
cmp
sahf
cmp
test
mov
add
nop
mov
dec
dec
mov
or
aad
mov
xchg
cmp
push
gs
push
sub
jns
xchg
rorl
xor
xchg
jle
lods
stos
cmpsl
ljmp
icebp
mov
adc
jge
cmp
in
fisubs
dec
pop
jecxz
mov
xchg
arpl
push
jb
jl
aaa
mov
lods
es
adc
je
adc
cmp
aas
jbe
shll
mov
mov
sbb
or
loopne
shll
repnz
jmp
mov
mov
or
fisubs
mov
dec
add
movsb
aad
push
mov
ljmp
inc
stc
rcrb
push
inc
fwait
aad
jae
push
fxch
and
mov
sbb
sub
sahf
push
mov
xlat
jns
scas
xor
jb
stos
pop
inc
mov
push
inc
cmpsb
mov
lahf
jno
inc
cli
pop
cwtl
sbb
xor
nop
xchg
test
mov
divb
inc
jecxz
imul
cmp
adc
mov
in
adc
xor
scas
into
das
xor
sahf
popa
cs
sub
cmc
roll
add
stos
inc
sahf
lahf
push
sub
repnz
stos
cld
ret
mov
xchg
movb
mov
sbb
lods
hlt
mov
mov
sti
stc
xchg
dec
out
pop
pop
notb
bound
mov
dec
js
movl
push
int3
insl
es
scas
sarb
jnp
pop
insl
lret
xor
stos
pushf
inc
xorb
les
jb
int3
outsb
inc
mov
mov
xchg
push
shrl
stos
insb
and
fwait
lret
push
pop
or
out
and
mov
imul
rolb
xchg
mov
rorb
in
sub
cld
inc
jae
jnp
fiaddl
lea
in
mov
jg
cmpsl
adc
lcall
xchg
lret
in
test
pop
push
fimuls
sti
out
pop
and
cmp
and
repnz
loop
sub
cmc
or
sub
push
fwait
imul
in
inc
insb
mov
xor
mov
fsubl
lcall
sub
mov
dec
adc
test
push
adc
mov
shll
or
or
pop
dec
or
xor
hlt
dec
shrl
cltd
fwait
call
mov
adc
push
sbb
mov
mov
lahf
in
test
fsts
pop
jecxz
inc
mov
mov
out
inc
movsl
out
push
ffreep
dec
fdivr
adc
mov
mulb
push
pop
jp
cli
adc
mov
xor
jnp
popf
mov
ret
mov
add
pusha
mov
jne
insl
adc
xchg
stc
dec
sub
leave
mov
mov
hlt
cmp
cmpb
ljmp
or
test
fucomp
movsl
ljmp
sbb
mov
outsl
and
push
mov
xchg
in
xchg
xchg
dec
add
sub
dec
scas
fnstcw
sub
in
cmp
test
adc
gs
pop
adc
mov
inc
arpl
div
xor
mov
xor
adc
cmp
xchg
lret
fcomps
fsubr
inc
jne
jge
hlt
sbb
mov
xchg
imull
or
imul
or
lods
and
pop
popf
scas
and
cltd
xor
push
loop
or
xor
ret
aaa
iret
out
jecxz
adc
pusha
xor
push
xchg
int3
test
pop
push
mov
popf
leave
xor
sbb
or
std
mov
mov
dec
add
jno
mov
sub
dec
js
xchg
xor
mov
or
dec
and
jbe
mov
or
out
xor
mov
mov
ljmp
jnp
sub
inc
andl
push
add
add
add
push
adc
movsb
lcall
jnp
push
icebp
in
pop
mov
inc
cmp
and
pop
mov
xchg
negb
shlb
push
stos
dec
sub
das
sub
and
dec
ja
loopne
cmpsb
in
outsb
mov
inc
leave
push
rcrb
cmp
or
xor
sub
pop
mov
sti
rcl
push
dec
dec
mov
shlb
mov
or
cmpb
mov
pushf
jecxz
cltd
dec
jl
inc
mov
adc
ret
pop
mov
cmc
fnsave
pop
mov
lea
mov
loopne
mov
ret
cmp
mov
add
mov
data16
dec
dec
int3
cld
push
jns
addr16
and
push
sarb
aad
inc
inc
insl
or
pop
pop
shlb
mov
sbb
pop
mov
cmp
cs
ja
or
mov
pushf
loopne
sub
iret
mov
mov
mov
push
mov
enter
mov
in
fsubrl
adc
pop
push
insl
out
lea
xor
shlb
ret
push
pop
jecxz
push
lods
pop
test
arpl
push
aaa
ss
xor
jmp
in
xorps
lcall
mov
pushf
or
pop
aad
stos
fistps
ret
pop
stos
xchg
pop
loope
cmp
arpl
jl
push
cmp
and
or
dec
pop
gs
mov
addr16
mov
gs
xchg
insb
cmp
jmp
mov
adc
jb
jae
std
xchg
ret
jno
into
int
cmp
dec
cmp
jp
lret
and
orl
data16
loop
mov
push
add
call
and
cld
add
mov
in
xor
adc
push
mov
orb
xchg
mov
sbb
in
xor
shll
add
sub
int3
aam
push
xorl
aam
pop
push
fisttpll
scas
xchg
out
outsb
out
push
mov
push
sub
rcrb
and
dec
pop
jno
xchg
mov
jg
jp
inc
push
test
and
stos
jo
stos
jne
pop
inc
sbb
or
stc
adc
lcall
jno
daa
or
ss
int
cli
and
push
mov
out
out
push
mov
fistps
es
test
push
mov
mov
jo
loopne
mov
and
lods
pop
mov
and
addr16
fdivrs
mov
jns
loope
lods
push
add
loope
data16
lea
xchg
inc
scas
imul
dec
mov
iret
push
aad
dec
int3
pusha
adc
out
mov
adc
push
xchg
aam
push
mov
xor
cli
adc
into
cs
mov
call
xchg
fs
testl
dec
daa
inc
xorl
aad
in
rclb
dec
ljmp
lea
sti
ja
std
mov
sahf
adc
call
jno
into
cmp
jp
test
mov
faddl
jns
mov
sbb
push
push
xor
mov
push
xchg
mov
incl
jae
mov
imul
and
dec
sub
push
jmp
dec
ret
add
cmp
sub
es
mov
cmp
sub
pop
xor
ja
cmp
aad
fidivs
gs
jmp
in
iret
fdivrl
jp
repz
fs
and
shll
fiadds
stos
aam
mov
adcl
jbe
lds
sub
repz
in
std
xchg
inc
mov
and
aaa
add
adc
int
inc
popa
mov
scas
dec
ds
lock
dec
ret
sahf
insb
fs
sbb
dec
xor
mov
xor
dec
push
mov
add
testb
aaa
sbb
sub
pushf
insb
inc
push
lret
pop
mov
xor
inc
or
les
inc
insl
cmpsb
cli
sbb
test
fbld
and
out
dec
pushf
repnz
push
mov
adc
adc
in
sbb
push
add
les
adc
repz
test
xlat
pop
mov
into
mov
out
sub
xor
jae
repz
sub
outsl
xchg
data16
jbe
aas
imul
ljmp
xchg
push
sbbb
mov
faddl
xor
and
stc
push
imul
pop
inc
loop
fwait
xchg
jl
dec
lods
add
cmpsl
pusha
int
pop
jae
add
add
jmp
push
or
mov
xchg
dec
or
fadds
int
mov
inc
sub
inc
add
jle
jne
mov
std
movsb
xchg
push
push
xorl
fcoms
jp
adc
mov
sti
es
mov
dec
xor
stc
ljmp
in
mov
dec
icebp
int
addr16
add
push
push
cld
xchg
mov
in
inc
dec
fnstsw
mov
in
shrb
je
rcrl
rolb
sti
sbb
pop
dec
fidivrl
mov
fsubrl
sahf
adc
fdiv
enter
sbb
and
clc
or
mov
and
and
imul
pusha
stc
mov
cli
mov
xchg
sbb
jne
push
adc
xor
mov
adc
mov
xchg
pop
scas
shll
popa
test
pop
cmp
pop
add
and
mov
jnp
or
jge
fcmovnb
fcomi
inc
int3
cmpb
xchg
loop
loopne
repnz
imul
pop
movsb
inc
or
dec
adc
gs
mov
jl
cmp
adc
into
flds
fcomps
lret
push
inc
inc
and
imul
inc
mov
xor
adc
add
or
subl
mov
inc
sub
jnp
add
pop
pop
cmc
pop
cmp
push
lret
cwtl
xor
lods
add
dec
mov
shrl
stos
ljmp
push
test
mov
jge
xor
lcall
pushf
loope
les
pop
loope
push
sub
dec
xor
repnz
lods
mov
push
xchg
ljmp
dec
dec
fstps
ljmp
pop
in
mov
fildl
ja
pop
xchg
mov
and
sahf
xlat
xlat
fmuls
aaa
mov
shr
insl
mov
xchg
fmuls
xchg
inc
je
shll
or
push
popa
call
jmp
nop
cmp
push
xchg
sbb
mov
adc
in
mov
scas
jb
adc
pop
fcmovne
popf
push
fnsave
mov
movsb
test
mov
fnstcw
adc
xor
dec
adc
add
and
push
mov
sbb
xchg
inc
adc
pop
das
daa
ds
xor
xchg
add
in
arpl
stos
lret
shrl
ds
std
add
mov
rcrb
pushf
xlat
dec
sub
test
aaa
ror
in
aam
out
aad
loop
jnp
mov
push
aad
mov
mov
imul
sti
shlb
mov
pushf
int
pop
movsl
fisttps
test
pushf
fisubrs
insl
cmp
dec
rcrb
cmc
int3
mov
xchg
sub
shl
push
iret
xchg
pop
or
shll
or
dec
jle
sbb
xor
xor
fs
clc
lahf
mov
push
popa
pushl
aaa
push
mov
add
cmpsb
cltd
lods
jns
shlb
mov
mov
pop
stos
pop
loope
xlat
push
insl
dec
imul
das
mov
push
bnd
or
mov
out
mov
insl
mov
mov
out
mov
mov
mov
or
pop
push
cmp
insl
mov
into
je
lds
cs
ret
mov
mov
neg
cmc
repz
or
aad
xor
pop
jno
xor
pop
lahf
nop
jnp
clc
outsl
jge
jmp
lea
cmovg
sub
ficoms
mov
xchg
lret
xchg
pop
into
push
sarl
mov
les
popf
inc
int3
add
add
out
jno
les
sbb
push
or
inc
adc
loopne
inc
hlt
sub
lock
shll
inc
add
sbb
or
mov
add
das
jge
gs
cmp
lret
inc
mov
and
lret
adc
ss
and
dec
fisttpl
scas
xor
icebp
lcall
in
or
adcb
in
lcall
mov
lret
test
scas
inc
shrl
mov
sbbl
out
push
sbb
push
rcrb
call
or
repz
lret
push
in
mov
movsl
sub
scas
lret
jb
scas
aad
push
outsb
xchg
push
dec
or
or
jns
jne
int
or
aaa
jae
in
jbe
inc
and
in
mov
sub
push
add
sti
lcall
lahf
sub
xchg
data16
sbb
inc
imul
jno
imul
jg
inc
popa
stos
loop
aas
mov
mov
leave
push
sub
shlb
aaa
addr16
or
push
or
into
aas
and
call
and
add
shrb
mov
pop
js
lcall
mov
es
in
sub
call
cmc
pop
loope
and
lcall
push
in
scas
test
inc
movsb
or
add
dec
pminub
sbb
fsts
cmpsl
stos
clc
outsl
bnd
pop
sub
jb
pop
lock
mov
add
mov
and
inc
push
adc
orl
lods
call
cwtl
test
add
or
and
or
cmp
jbe
inc
add
incb
imul
and
or
pop
imul
add
into
mov
fldcw
mov
jb
fildl
jno
mov
sbb
sub
fisttps
add
jmp
mul
ss
sbb
cli
inc
test
clc
imul
roll
pop
dec
dec
pop
movb
sbb
and
mov
mov
aad
outsl
pop
out
call
ja
scas
add
pop
das
jb
int
fdivrp
fstpt
jae
add
pop
jne
sub
mov
test
jb
push
dec
aad
adc
lds
int
insl
add
dec
sbb
and
mov
xchg
negl
jge
repz
xchg
cmp
sub
gs
call
push
mov
mov
iret
es
sbbb
xor
xchg
xchg
movsb
cmp
cmpsl
pop
mov
jne
pop
xchg
jb
mov
cmpsl
mov
pop
fs
jmp
or
jmp
inc
dec
aas
dec
pop
je
cmpl
imul
popf
inc
pop
mov
jecxz
shrl
cmp
jge
add
dec
leave
mov
pop
arpl
jne
or
popf
mov
xchg
sub
push
jecxz
sub
mov
jo
push
insl
mov
and
test
push
int3
inc
pop
or
orl
adc
dec
pop
xchg
mov
jmp
adc
inc
pop
jl
sub
pop
mov
xchg
inc
sub
loop
mov
mov
out
sbb
push
jb
ret
movsl
sub
xor
aam
fildll
lods
sahf
cmpsb
pop
push
sarl
or
sbb
pop
push
ss
ljmp
imul
mov
int
lods
fistl
mov
sbb
cmp
aaa
sbb
nop
rorl
jbe
cmp
inc
ja
pop
rol
fwait
sbb
cli
out
push
or
enter
int
push
cmpsl
flds
xor
cmpsb
pop
ror
add
and
stc
std
sbb
arpl
test
or
xchg
mov
pop
pop
jne
cmpsb
push
in
pop
cmpsb
mov
jmp
scas
dec
mov
or
adc
int3
filds
xor
xor
pop
pop
lods
cmpsb
cmp
xchg
adc
jb
xchg
add
mov
pop
jbe
sub
inc
adc
int3
xchg
pop
xchg
out
into
js
fcmovb
push
jge
imul
jne
mov
jo
inc
xor
or
loope
sahf
and
jmp
sbb
mov
sub
jmp
inc
clc
dec
fwait
enter
shlb
mov
mov
sti
aam
push
imul
ficoml
push
pop
xchg
or
cld
aaa
pop
ljmp
lds
push
jbe
cmpsb
pop
xorb
mov
adcl
dec
inc
scas
fwait
cld
mov
aas
push
mov
add
arpl
lds
push
pop
imul
xchg
push
xchg
lods
push
push
dec
inc
jns
xor
mov
in
je
inc
adc
andl
xor
pop
xor
cltd
mov
push
jbe
pop
sub
jecxz
loopne
in
lahf
arpl
sub
pop
int3
imul
in
loop
std
pop
iret
sahf
lock
lret
jecxz
stos
loop
and
jo
rol
add
xchg
xlat
lods
mov
sub
mov
mov
cltd
jmp
shlb
cmp
xchg
arpl
mov
rcrb
cmp
xchg
aaa
xor
mov
fcomps
fimull
and
jge
push
cld
or
push
cmc
imul
xabort
sub
in
lret
cmc
mov
add
in
xchg
mov
mov
push
adc
call
aam
daa
aaa
dec
or
jno
mov
lcall
pop
iret
insb
mov
cwtl
pop
ss
es
movsb
xor
das
cmp
xor
das
insb
or
std
pop
push
loopne
bound
push
call
inc
pushf
pop
or
dec
add
inc
cwtd
in
sahf
mov
push
mulb
inc
imul
aaa
mov
jb
scas
jle
cwtl
mov
test
jno
mov
add
leave
sbb
adc
and
dec
lods
push
lods
jmp
push
cwtl
mov
sti
push
inc
loope
lds
out
fiaddl
xlat
mov
xor
sub
push
push
xor
sahf
mov
cmp
adc
dec
push
fldl2t
call
xor
sub
jmp
push
push
cmp
pop
pop
jo
and
fistl
pop
mov
dec
aaa
test
lods
and
cmp
pushl
jmp
cmp
hlt
sub
lahf
mov
pop
sbb
sub
xor
or
jp
fmul
sub
inc
out
cmc
cld
cmpsb
push
add
jnp
push
mov
push
je
fstpt
js
repz
cmp
idivl
jl
and
rdtsc
js
lock
dec
ret
xor
push
imul
jmp
inc
outsl
pusha
sub
pop
mov
pushf
out
movsb
pop
sub
mov
ret
mov
push
fidivs
fcompl
shlb
and
mov
loopne
pop
vmovaps
stos
add
mov
cli
sti
jns
clc
xchg
arpl
adc
jp
aad
and
xchg
mov
call
mov
mov
add
push
jl
mov
bound
hlt
pop
shll
out
jns
sbb
fisttpl
pusha
pusha
cld
pop
pop
popa
pushf
in
mov
xor
mov
cmpsb
pop
das
mov
cmc
cmp
dec
sbb
cmp
outsl
aaa
loope
movsb
call
movsb
lds
icebp
ret
gs
cmp
push
mov
getsec
out
cli
inc
dec
or
adc
jae
jmp
fwait
push
sbb
mov
ds
mov
out
sti
jecxz
jbe
lods
test
and
insb
dec
nop
movl
stc
mov
sbb
cmp
aam
or
mov
out
jg
test
arpl
loopne
push
mov
jne
jge
in
and
mov
push
mov
jo
pop
dec
test
fstpt
aad
pop
gs
push
push
mov
cwtl
mov
sbb
js
dec
adc
cmpsl
mov
mov
call
sbb
shlb
xchg
lahf
jb
add
pop
sbb
dec
imul
lock
inc
enter
je
stc
inc
mov
dec
push
inc
stc
adc
lods
or
sbb
mov
xchg
leave
lods
les
xchg
sbb
scas
lret
movsb
push
insb
cmpsl
sub
fistl
popf
ljmp
inc
jl
rolb
cs
mov
jp
cmp
rcrl
mov
jns
pop
ds
inc
and
jb
xorb
cs
inc
sub
cwtl
jno
mov
push
iret
lock
cmc
test
dec
or
aas
mov
xchg
out
ljmp
xchg
pop
xchg
cli
mov
sub
xorl
mov
cmpsb
inc
xchg
arpl
mov
mov
dec
cmpsl
dec
pop
adc
jno
sub
dec
inc
cli
lock
add
jmp
fdivrl
sub
mov
or
adc
aam
inc
or
and
xchg
mov
inc
in
les
xchg
lahf
pop
lcall
gs
out
rcll
cmpl
cli
movsl
mov
cld
xchg
stc
data16
xor
lret
adc
mov
ret
into
add
jle
or
push
outsb
add
mov
xchg
ja
or
mov
jb
mov
push
jmp
data16
popf
mov
mov
sbb
cmpsl
inc
mov
js
stc
cmpsl
sbb
pop
lret
pop
rcll
or
jl
xor
push
pop
push
out
rcr
ljmp
das
cmp
mov
scas
cmpsb
nop
cmp
lds
int
sub
pop
decl
or
xchg
inc
icebp
jbe
inc
scas
inc
pop
xchg
xchg
inc
je
mov
mov
pop
rcll
adc
jg
jge
aad
test
popa
mov
jmp
push
cmpsb
ret
adc
jl
outsl
mov
call
fisubrs
loopne
xchg
sub
insb
popa
pop
mov
pop
mov
push
imul
cld
add
or
or
jle
sti
loopne
loop
pop
loop
dec
cmp
xor
mov
test
pop
cmp
mov
js
xchg
add
mov
inc
outsl
xor
mov
or
mov
mov
dec
jbe
cli
xchg
sbb
mov
adc
lret
rcr
iret
dec
daa
mov
pusha
jp
sbb
mov
push
xchg
and
dec
ja
call
pushf
stos
push
fs
pop
and
scas
out
icebp
stos
insb
jne
das
jbe
dec
test
cmp
push
xor
fidivrs
push
arpl
or
and
in
ss
sub
mov
repz
ja
inc
out
sbb
inc
stos
cmp
sbb
out
ja
lock
daa
sbb
push
and
or
loope
sub
pop
push
sahf
dec
and
leave
ret
inc
aas
lret
jno
adc
mov
push
pushf
fptan
jnp
xor
pushf
jnp
cwtl
pop
mov
mov
rdtsc
adc
inc
mov
adc
dec
inc
test
and
jae
arpl
inc
mov
ja
mov
nop
test
jae
jns
outsb
outsl
pop
ror
movsl
movswl
fmuls
add
mov
ret
jge
imul
je
je
inc
sub
fistl
sbb
lods
xor
cmp
ret
add
mov
jb
sti
stos
aas
mov
push
jae
iret
pop
and
lods
push
xchg
push
xchg
cmpsb
dec
fs
into
lahf
lcall
in
rdtsc
jmp
ljmp
mov
cmpsl
imul
mov
push
insb
movsb
dec
cmp
jnp
pop
inc
push
mov
pusha
xor
add
jno
in
dec
inc
pushf
je
jp
add
dec
push
or
pop
stc
insl
decb
hlt
movsb
mov
icebp
int
testl
jle
int
xchg
das
enter
jbe
pop
mov
loopne
mov
and
fmuls
lcall
fs
jne
dec
xor
xchg
ret
cltd
xor
rep
dec
lea
pop
lcall
sti
jno
lods
in
mov
xchg
pop
mov
inc
mov
sti
repz
and
or
ret
jo
or
movsl
scas
add
mov
insb
mov
pop
adcb
xchg
inc
jle
aad
or
adcl
frstor
xchg
insb
jl
push
mov
stos
mov
int
adc
lods
pop
jnp
int3
lret
fisttpll
js
cmpl
xchg
es
push
out
scas
jmp
pop
jo
dec
aam
hlt
std
scas
cmp
pop
pop
xlat
xchg
mov
lea
call
cmp
fwait
idivb
push
inc
inc
add
jecxz
mov
xor
mov
lods
and
xor
sub
push
xchg
and
jne
loope
xor
xchg
cwtl
call
cmpsl
sub
jg
jae
or
add
adcb
jae
xor
dec
inc
arpl
jno
in
mov
sbb
bound
jmp
add
jno
sbb
mov
sub
pop
xor
repnz
lods
mov
fcoms
inc
jl
adc
daa
mov
les
repz
pop
push
clc
ret
pop
outsl
popf
xchg
add
dec
adc
outsb
push
ss
mov
mov
inc
leave
jne
ss
cld
addr16
add
pushf
xor
sub
cmp
test
in
xchg
cmp
fbstp
into
jmp
xchg
and
cmpsb
sbb
rcl
cld
pop
sub
xor
lods
mov
and
sbb
lods
das
in
arpl
mov
in
sbb
cltd
xlat
stos
and
ljmp
outsb
or
cmp
push
aad
sbb
out
jmp
lods
push
in
lods
lods
inc
rorb
lret
sub
ret
jmp
call
mov
insl
and
les
mov
les
pop
into
out
iret
push
mov
cld
pop
add
jnp
ja
test
jmp
adc
ss
jbe
mov
jle
pop
pop
sub
in
shll
lea
int3
lock
inc
mov
and
aas
enter
add
inc
cwtl
lods
adcb
jmp
cmp
mov
lahf
pop
adc
inc
adc
mov
outsl
movsb
cmp
sbb
xchg
jbe
jg
testb
and
cmp
push
jle
xchg
add
adc
jecxz
and
mov
addr16
add
icebp
pop
dec
and
push
mov
movsl
and
unpckhps
and
dec
repnz
aad
adc
sbb
pop
jne
or
cmp
cmc
mov
jp
push
cs
in
xchg
lret
test
loopne
cmp
dec
inc
pop
test
jnp
mov
je
dec
gs
loopne
addr16
loopne
push
pusha
mov
sbb
dec
jmp
test
push
sbb
fdivrl
out
lods
call
and
jbe
jnp
mov
push
jo
push
inc
dec
aad
pop
add
lods
mov
rcll
orl
mov
and
or
out
inc
in
pop
repz
jne
cmovbe
adc
inc
sbb
or
orl
aad
in
int3
inc
or
mov
imul
push
sbb
jmp
pop
or
mov
hlt
mov
pop
leave
or
push
cli
xchg
pushf
jnp
cmc
mov
scas
add
jno
and
insl
sub
cmp
sub
pop
mov
xor
cmp
out
jge
jb
sub
mov
and
jae
jno
xchg
xor
sub
push
cld
dec
in
lock
mov
stc
xchg
jmp
push
fcompl
daa
pop
hlt
sahf
dec
cmp
pop
mov
dec
push
sub
testb
ds
fidivrs
cltd
inc
sbb
and
pop
mov
icebp
add
mov
xchg
nop
xor
lods
test
add
rcr
sub
shll
lret
adc
cmp
and
lahf
cwtl
cld
dec
xchg
adc
pop
sub
pop
ret
or
sarl
xchg
arpl
cld
mov
and
adc
cld
in
arpl
push
mov
sbb
cmp
adc
mov
cmpsl
gs
xor
rorb
std
mov
shlb
mov
lods
cli
push
js
sbb
mov
xorb
jae
lea
mov
in
mov
and
jp
pop
hlt
cs
insl
sub
xchg
push
inc
adc
xchg
inc
ljmp
mov
aad
jb
sbb
mov
cmpsl
sbb
dec
dec
inc
mov
enter
loop
popf
lret
aad
outsl
cmp
ficoml
dec
adc
xchg
repz
pop
cli
stos
adc
lcall
call
sahf
add
loopne
inc
loop
rclb
and
aas
mov
and
mov
sub
ja
lret
stos
js
jnp
loopne
mov
into
je
in
cmp
mov
iret
loopne
dec
lds
inc
outsl
mov
jmp
push
cld
scas
in
sahf
gs
inc
pop
dec
nop
stc
jle
out
stos
popf
pop
test
bt
inc
or
imul
mov
lcall
sbb
add
scas
outsb
jp
jle
cmp
xor
push
lods
clc
enter
sti
lahf
loope
orb
popf
mov
mov
sbbl
and
dec
mov
ror
fldcw
mov
xchg
rcll
sbbb
jle
sbb
in
dec
lret
jns
dec
adc
push
in
data16
repz
sub
add
sub
outsb
pop
std
mov
fists
fs
fistpl
add
mov
inc
icebp
pushf
pop
adcl
mov
sahf
stos
xchg
mov
ljmp
sar
lahf
xor
rorl
mov
test
or
loope
or
aaa
std
and
dec
sti
push
popa
jno
ds
xchg
in
aas
notb
pop
pop
call
mov
in
cmpsb
in
xchg
fdivl
mov
xchg
lret
mov
or
loop
add
push
push
int3
sarl
cmpsl
call
decb
inc
hlt
daa
cmpb
xor
inc
scas
mov
arpl
sbb
jae
sbb
js
js
pop
in
pop
add
mov
dec
addb
push
rcll
pop
rsqrtps
ss
cld
mov
enter
mov
dec
mov
dec
xor
xchg
or
cmp
je
push
dec
jne
test
in
lcall
lods
xor
mov
sti
push
fimuls
rorl
or
mov
push
mov
adc
mov
mov
call
sub
nop
pop
inc
push
in
add
pushf
cmp
addr16
das
mov
insb
dec
or
pop
jno
int
inc
ret
jmp
ss
jmp
cmp
imul
popf
stos
out
xchg
add
neg
repnz
aaa
ljmp
mov
decl
xchg
jge
fldt
das
adc
mov
stos
push
aaa
cs
pop
sbb
mov
lea
cmp
sbb
jmp
sti
hlt
ss
sti
jmp
addl
mov
and
test
push
aas
inc
std
sbb
loopne
loope
or
hlt
add
jnp
lods
xor
sarl
mov
push
xchg
pop
or
mov
lret
popa
addr16
or
in
mov
insb
sarl
insb
std
jmp
movsb
js
xor
stos
jno
je
or
push
int3
insl
imul
ss
mov
in
inc
mov
rol
pushf
mov
xor
lock
pop
sbb
movsb
pop
cwtl
mov
sub
xchg
out
pop
sub
sbb
das
outsl
cmpb
es
loope
fiadds
xchg
adc
jmp
ja
and
movsl
mov
clc
push
jl
cli
push
mov
ja
lods
adc
gs
mov
rolb
mov
lcall
fcmovu
jns
fucom
mov
xor
mov
cmp
dec
adc
pop
xor
xor
popa
sbb
xlat
lahf
dec
dec
leave
fstpt
mov
fcoml
xchg
cmp
loope
xchg
sahf
movsb
mov
jp
imulb
clc
clc
pop
dec
clc
jns
dec
sub
loope
or
loop
jge
jb
scas
fimuls
inc
movsb
shlb
sahf
sbb
int
mov
scas
inc
fsubrs
mov
lods
mov
push
pop
out
fcoml
jmp
mov
mov
popf
xchg
cmp
ja
roll
and
in
dec
sub
push
lret
cmp
icebp
test
daa
int3
push
shrb
mov
adc
cmovp
lods
ja
push
sub
test
int3
mov
cmpsb
jle
or
adc
and
or
jae
test
sbb
hlt
xchg
push
and
mov
lods
dec
mov
stc
dec
flds
stos
or
ret
jmp
in
movsl
pop
push
xchg
cmp
imul
xchg
add
jb
testb
push
cmp
das
fs
out
stos
push
pop
iret
pushf
je
loope
push
pop
or
lret
fnstenv
dec
fnstcw
enter
iret
or
out
push
pop
stos
imull
lret
pop
aam
das
ret
mov
mov
and
sub
sbb
sub
push
das
sub
lcall
ret
sbb
mov
test
or
pop
ljmp
mov
sbb
mov
sub
adc
pop
fwait
add
hlt
jecxz
or
or
mov
push
stos
jle
xchg
cwtl
adc
shr
fcomps
mov
adc
mov
push
sub
cltd
rcrl
ja
pop
jl
rcr
mov
imul
push
lds
ja
das
popa
dec
jge
cmp
in
pop
test
push
push
mov
aaa
xchg
fimull
pusha
pop
ljmp
pop
mov
mov
add
rcr
push
xchg
and
sub
arpl
bnd
cmpsb
dec
repnz
int
aas
ss
out
lods
fnstsw
aas
push
cmp
movsb
out
add
inc
cwtl
inc
push
fwait
mov
xlat
add
push
loopne
mov
push
sahf
cmp
jb
lret
inc
inc
xchg
mov
mov
pop
push
fwait
movsl
inc
fwait
mov
jns
lahf
sbb
xor
adc
cwtl
push
hlt
sub
lods
cmpsl
repnz
stc
inc
sub
scas
inc
pop
xchg
sbb
stos
mov
xor
and
mul
aad
loopne
inc
dec
adc
insb
mov
or
inc
sub
pop
sub
jnp
pop
inc
xor
scas
pop
je
xchg
cltd
pop
mov
test
add
adc
cmp
fstps
add
mov
repz
xchg
xor
out
shr
jae
dec
adc
sar
popf
imul
fcomps
icebp
pop
lahf
mov
into
cmp
mov
repz
cmc
pusha
dec
push
ja
leave
ret
xchg
lret
inc
data16
mov
jo
or
pop
adc
or
repnz
pop
pop
outsb
stos
adc
sub
cmp
or
cltd
aad
fisubrl
sahf
or
fiaddl
inc
push
popa
adc
test
pop
push
pop
int3
sbb
fstpt
xor
push
jle
jl
jb
sahf
jno
movsl
ret
sbb
and
insl
call
inc
adc
jecxz
dec
gs
das
test
lock
mov
stc
mov
mov
jo
mov
mov
or
clc
sbb
hlt
cltd
push
jo
sub
lcall
jmp
and
loope
andl
pop
push
jnp
test
xchg
gs
inc
subl
xor
sub
movsl
insl
cmp
jg
js
jle
popf
test
xlat
xor
movsl
inc
nop
jbe
fiaddl
cmpb
mov
mov
cs
cmp
aaa
sub
cltd
push
daa
enter
loopne
pop
sub
mov
xchg
jo
jne
stos
icebp
enter
xchg
loope
jae
pop
pop
sbb
or
jmp
sbb
test
inc
jg
inc
dec
stos
or
rcl
jg
dec
popa
les
out
adc
ljmp
sub
fldcw
js
mov
test
xor
mov
fwait
mov
push
jb
test
pop
stos
add
inc
add
int
mov
mov
jae
popf
or
mov
xchg
cltd
imul
popa
testb
or
inc
dec
dec
xor
lods
sbb
loop
and
jb
mov
xchg
test
jns
pop
fstpl
aam
add
aam
lods
jg
inc
push
stc
add
dec
sbb
mov
jecxz
test
sub
std
mov
ficoms
mov
and
mov
cmc
mov
sbb
stos
add
and
ss
push
mov
stos
in
sbb
xchg
addr16
cmp
mov
fildll
in
and
jl
jmp
int
inc
test
pop
insl
mov
add
nop
fsts
sbb
and
sbb
mov
es
js
add
imul
mov
incl
cmp
jg
dec
adc
add
and
cmpsb
cli
arpl
call
scas
inc
pop
ljmp
sbb
fs
and
mov
push
and
dec
push
pop
push
test
xchg
mov
cwtl
adc
cmpsb
inc
xor
mov
cli
inc
pop
jnp
mov
cmp
cmp
fnstenv
adc
adc
scas
jl
push
mov
add
jo
adc
jb
xchg
push
pop
outsb
xchg
filds
das
in
sub
dec
es
test
int
test
mov
fisttpl
into
ja
in
sti
nop
mov
movsl
mov
push
mov
pop
or
insb
pop
pop
sub
cltd
mov
push
mov
jno
add
bound
popa
push
dec
jecxz
cmovbe
leave
or
inc
test
cwtl
cmpsw
sbbb
jo
out
xchg
xor
pop
into
sarl
push
int3
lock
lds
mov
shl
pushf
daa
cmp
push
ja
in
dec
mov
adc
icebp
imul
mov
mov
and
vpsubusb
iret
jnp
mov
and
and
lock
imul
add
xor
pop
lcall
push
out
fs
and
mov
add
jbe
xor
push
and
cmp
hlt
jge
inc
lret
mov
daa
adc
fxch
mov
lahf
xlat
inc
jbe
dec
bound
and
stos
mov
xchg
cltd
dec
cmp
mov
jbe
pop
sbb
adc
scas
cmp
mov
rcl
int3
xchg
movsb
into
int3
pushf
jmp
je
test
es
or
loope
xlat
outsb
les
sbb
xor
jle
clc
push
jb
icebp
mov
push
push
or
popf
mov
adc
add
into
mov
orl
mov
inc
insb
repnz
leave
xor
jo
and
call
add
filds
push
lea
xorb
cld
sbb
cld
mov
pop
mov
out
xchg
cs
cmc
cmp
daa
decl
in
cs
mov
pop
push
sub
pop
xchg
inc
add
shrl
xor
push
into
cwtl
pop
mov
js
adc
pop
sub
lods
mov
pop
xchg
leave
inc
cld
loope
dec
mov
pop
ss
xlat
jl
fnsave
shll
sub
loop
rorb
jns
dec
mov
iret
movsb
loope
shll
inc
int3
push
and
movl
sbb
movl
shlb
xchg
into
imul
fucomp
xor
dec
sbb
cmp
mov
dec
rol
mov
pop
push
sbb
loope
push
jecxz
ret
mov
test
test
test
in
xchg
sub
sub
loopne
sarb
xchg
or
js
mov
inc
rorl
out
or
add
adc
pop
sub
xchg
xchg
ret
pop
dec
xchg
leave
rcll
jl
fmuls
enter
invlpg
or
sbb
and
lea
push
scas
repz
addl
jbe
jb
sub
add
cmp
in
cmp
mov
js
scas
mov
mov
loop
cmp
adc
pusha
addb
add
dec
test
int
lsl
loop
cmc
mov
iret
jle
insb
lahf
out
push
push
xchg
pop
test
sbb
fildll
add
push
sbb
lcall
addb
fst
add
out
inc
rcll
aam
mov
push
or
jne
jl
jb
mov
adc
insb
push
adc
loope
les
incl
sbb
scas
daa
sub
das
jmp
shlb
adc
es
sub
popf
je
shll
ret
lock
leave
mov
add
push
jb
cmp
pop
pop
aas
outsb
sbb
xor
lea
jo
mov
adc
je
cltd
mov
jg
in
gs
mov
push
ret
cltd
mov
jo
mov
lret
or
in
xchg
rolb
ret
iret
fisttpl
ret
hlt
dec
pop
sbb
pop
inc
cld
out
aaa
dec
jmp
test
mov
inc
sbb
fimull
icebp
jp
add
nop
out
add
inc
and
pop
test
fnstenv
repnz
lahf
dec
shlb
sbb
sub
xor
outsl
jmp
sbb
mov
scas
jp
call
sbb
push
leave
in
std
push
mov
mov
adc
xor
dec
shrb
clc
sub
cld
aaa
add
bound
out
xchg
cli
ficoms
jae
sub
out
push
and
mov
adc
mov
lods
int
sti
lock
test
and
xchg
pusha
ja
mov
fistps
imul
and
call
in
repz
cmc
inc
and
inc
cmp
xchg
pusha
pop
or
dec
aam
dec
and
out
popf
sub
jmp
mov
inc
jno
adc
andl
adc
shlb
and
fdivs
add
and
xchg
les
lods
inc
mov
jl
inc
add
fistps
add
mov
call
int3
xchg
jl
mov
icebp
xchg
pop
mov
xchg
test
push
pop
push
push
lahf
pushf
push
adc
xchg
sbb
shr
sbb
cmp
imul
or
jle
dec
or
test
out
sbbl
stos
cmp
mov
mov
loope
or
inc
xor
cmc
cmp
push
jno
or
lods
xchg
adc
out
dec
sub
lds
push
out
cmc
popa
sub
syscall
jo
iret
int
xchg
xor
xchg
imul
add
hlt
xor
and
push
stos
mov
inc
mov
lcall
jg
sub
ja
loope
push
dec
add
in
popa
mov
xchg
dec
xor
into
int
and
adcb
push
fildll
pusha
mov
insl
lahf
mov
fnstenv
mov
sub
rcrl
in
cmp
sbb
imul
or
mov
repnz
testl
sub
jbe
sahf
imulb
push
stos
aad
shrb
jl
dec
lock
add
pusha
inc
mov
sarl
push
cmp
add
mov
popa
cmp
je
loop
daa
fs
jb
or
mov
push
fmul
hlt
xchg
lahf
je
movsb
mov
dec
cltd
xchg
pop
dec
jb
pop
xchg
push
inc
pop
mov
imul
mov
outsl
or
in
in
pop
dec
push
dec
inc
frstor
add
fwait
ss
ret
imulb
mov
les
sbb
lret
pushf
fisubs
shrd
movsl
push
lods
adc
orps
repnz
xchg
inc
mov
das
scas
push
sbb
adc
popf
cmp
dec
xchg
js
mov
into
out
int
dec
cmp
lods
inc
fcmovnb
mov
sub
inc
roll
mov
cmpsb
out
bound
cltd
cmp
sub
inc
inc
mov
insb
add
mov
mov
mov
ja
out
jbe
mov
cmp
fldenv
test
jg
dec
mov
movsb
lods
mov
ret
enter
sbb
xlat
test
lahf
out
cmp
jnp
decl
test
cmp
jae
in
sti
or
mov
sbb
jb
and
fiaddl
ss
punpcklbw
xchg
fistpll
mov
jno
add
in
test
pop
sbb
mov
mov
jmp
imul
js
cmp
push
push
and
sub
not
jg
cli
int
leave
sbb
cmp
inc
shrl
pop
dec
sub
push
cmp
pop
mov
pop
repnz
lods
push
push
jecxz
loop
mov
mov
stc
xchg
loope
xor
decb
sbb
pop
scas
mov
negb
mov
sub
cmp
xor
stos
std
mov
dec
inc
popa
cmpsb
or
sti
loopne
xchg
data16
leave
loop
popf
lahf
xchg
lods
push
aad
mov
mov
iret
rcr
xchg
sub
cmc
push
ss
push
or
dec
cmp
jl
and
ret
push
dec
pop
imul
mov
push
push
push
cmp
adc
jb
sahf
ds
push
mov
pushf
bnd
pop
adcl
cmpsb
sbb
xchg
xchg
xor
les
das
push
shll
jb
sub
mov
adc
and
pop
xchg
inc
stos
push
xchg
out
and
fwait
dec
clc
insb
or
dec
pop
cs
cmp
and
cmp
outsl
push
mov
inc
in
mov
adc
out
sti
and
repnz
mov
mov
sub
xchg
dec
xchg
int
pop
imul
pop
xor
fwait
sbb
pop
dec
hlt
lret
lea
shrl
xchg
clc
and
sub
popa
cltd
call
mov
aad
out
mov
xchg
fiaddl
pop
mov
fs
mov
imul
pop
fildll
pop
jne
sahf
les
stos
mov
push
or
dec
lcall
dec
jl
dec
lret
sbbb
dec
or
stos
lret
clc
mov
push
fwait
incl
jns
adc
cltd
pop
data16
mov
push
cmp
out
and
sub
and
xchg
loopne
test
push
dec
push
ss
xchg
ljmp
xor
out
test
sub
js
shl
adc
or
add
test
inc
adc
ds
inc
movsl
loope
push
dec
xchg
cmp
in
test
pop
mov
std
loop
or
sahf
xor
stos
add
push
sub
inc
stos
hlt
je
add
adc
stc
pop
push
and
fistpll
ja
sub
xchg
pop
in
sbb
ret
sub
xlat
test
and
push
mov
int3
xor
mov
ficoml
or
jo
xchg
inc
cmp
inc
lret
mov
push
mov
dec
mov
sub
clc
enter
push
sub
out
pop
push
lds
test
outsb
xchg
add
and
in
or
adc
dec
xor
mov
aad
cmc
ds
pop
push
hlt
inc
xchg
nop
or
inc
push
aaa
pop
scas
aad
leave
jo
jns
pop
cltd
repz
movsb
add
je
mov
lock
mov
popf
mov
iret
mov
mov
xor
xor
pushf
movaps
mov
adc
sbb
cmp
sub
imul
jo
ss
jmp
and
lods
cmp
mov
mov
icebp
dec
arpl
or
scas
test
out
mov
iret
mov
xlat
jbe
nop
loop
std
fstpl
out
fisttps
or
adc
and
jp
jecxz
jns
divl
fs
fmuls
sub
xchg
xchg
fs
sbb
lods
pushf
pop
mov
test
inc
pushf
mov
sub
mov
aas
add
repz
cmp
cmp
jbe
test
test
cmp
icebp
xor
mov
ret
pop
lret
xchg
test
cmpsl
pop
nop
mov
add
xor
push
lods
es
xor
push
dec
clc
imul
lret
add
adc
scas
xchg
imul
popl
jne
push
mov
sbbl
xor
add
pop
mov
push
daa
movsl
jge
insb
les
xchg
push
sub
jae
cwtl
mov
orl
cmp
pusha
dec
cmp
mov
dec
ror
mul
jmp
es
popa
mulb
push
adc
addr16
jno
repnz
gs
lret
lahf
cmp
imul
adc
iret
mov
xchg
int
arpl
cld
in
xlat
dec
push
push
push
push
je
push
jge
sub
leave
hlt
cmp
xchg
jp
xchg
js
xchg
outsl
popf
sub
in
subl
cmc
ds
cmpsb
jb
shlb
mov
and
or
jb
fs
out
mov
add
cmp
xchg
mov
adc
and
call
xchg
mov
shll
or
bound
inc
repnz
inc
add
push
enter
dec
jg
lahf
or
mulb
ret
sti
jg
xor
cmp
in
push
sbb
mov
jae
sub
in
dec
dec
push
dec
add
adc
divl
xchg
xchg
outsb
or
sub
mov
jnp,pt
cwtl
insb
add
mov
add
in
jmp
push
xor
add
aam
std
mov
xorb
in
adc
sub
cld
test
jle
inc
adc
sub
dec
jge
sub
std
clc
lods
add
sub
popf
add
inc
xor
adc
mov
or
fdivl
shll
pop
pop
out
mov
clc
jg
or
mov
adc
inc
sarl
mov
lock
cli
add
sub
mov
sub
in
out
fucomi
push
div
inc
pop
cmc
cmp
cmp
in
popa
stos
popa
jns
xchg
arpl
adcb
bound
sub
cmp
pop
pop
movsb
cli
ret
add
repz
dec
inc
or
and
gs
jb
js
push
dec
sbb
pop
loop
mov
fcmovbe
shll
sti
push
push
push
andl
lods
jno
mov
and
cmp
pop
daa
pop
push
pusha
fdivrs
pop
popf
shl
and
mov
sbb
fisttpl
cld
push
mov
adc
cmc
push
roll
mov
dec
lahf
arpl
dec
and
jl
mov
pusha
outsl
xor
push
sbbl
stos
addr16
js
negb
in
clc
sti
add
jg
mov
lea
and
or
lods
jl
cmp
lcall
sub
mov
addr16
adc
sbb
sub
test
frstor
sub
sub
lea
pop
outsb
cmc
iret
pop
and
jle
mov
dec
mov
dec
mov
xchg
or
les
and
and
xchg
das
adc
xor
test
add
jecxz
ljmp
les
out
aad
mov
mov
je
enter
ja
out
jno
pushf
inc
mov
loopne
xor
fistl
gs
mov
xor
test
dec
lahf
movsl
adc
xor
pop
pop
imul
sbb
in
xchg
in
or
loopne
or
loopew
ja
mov
lea
cs
cli
xchg
stos
repz
mov
or
sub
popf
aad
out
int3
std
jne
xor
mov
rcl
fdiv
push
aam
lds
lahf
scas
and
int3
add
std
es
mov
or
cmp
data16
into
addr16
xchg
sbb
mov
lahf
jmp
clc
mov
jp
mov
pop
push
dec
mov
fisubl
test
std
pop
gs
cmp
pop
push
les
xchg
jno
jmp
out
jae
jl
xor
call
lods
mov
and
jge
cld
push
sbb
std
dec
xorl
lods
sbb
mov
ss
int3
in
add
cli
pop
shr
cli
into
aam
mov
andl
pushf
fs
imul
lret
or
hlt
mov
add
push
clc
pop
or
jecxz
dec
test
fisubs
repz
out
stos
adc
je
mov
mov
mov
push
leave
loopne
fisttpl
sub
pop
jae
repnz
sub
jnp
sbb
pushf
shlb
xlat
push
mov
cmpsl
mov
or
push
pop
and
or
pop
das
fstps
movsb
test
pop
insl
out
pusha
push
xlat
dec
dec
adc
mov
lods
inc
push
jo
test
mov
in
out
orb
dec
aaa
push
shlb
ret
inc
add
sbb
loope
int
imul
jecxz
outsl
mov
sbb
cs
cmp
mov
add
imul
or
and
cs
add
test
mov
test
push
pop
pop
inc
das
sub
ret
pop
movsb
mov
jg
xchg
jo
lahf
xchg
or
push
xor
xorb
cmp
sti
scas
outsb
push
mov
lods
outsb
mov
add
or
mov
bound
sub
js
cs
xchg
arpl
leave
hlt
xchg
orb
aad
jg
stos
gs
and
sarb
test
scas
xchg
negl
mov
jae
mov
adc
jae
pop
mov
mov
sub
add
loope
jns
out
jmp
dec
push
pushf
mov
notl
push
push
dec
cli
insl
ljmp
aas
push
sbb
mov
push
pop
mov
fisttpl
ds
cmp
outsl
fnstcw
shll
dec
add
movsl
or
push
sbb
and
jb
call
iret
ret
cmp
cs
cmp
mov
cmpsb
or
xchg
inc
rol
add
dec
arpl
out
je
pop
imul
cmp
inc
mov
fcom
mov
in
test
push
sbb
adc
sub
mov
cmp
dec
cli
add
loope
sub
pop
cli
adc
add
gs
fwait
das
gs
incb
mov
insl
ret
or
mov
inc
imul
in
mov
std
adc
iret
or
loop
xor
push
lds
add
js
pop
outsb
mov
push
sub
out
pop
cli
fstpl
lcall
mov
sbb
addr16
jp
mov
lahf
and
pusha
mov
pop
popf
data16
sbb
mov
xchg
fistps
pop
mov
or
in
scas
and
scas
imul
leave
call
or
mov
push
or
scas
xor
lahf
adc
lcall
cmp
push
push
cmpsl
add
pop
mov
push
xor
adc
mov
sbb
sahf
imul
jb
sub
xor
inc
and
arpl
dec
mov
iret
bound
shll
dec
in
adc
insl
icebp
push
mov
push
scas
ret
jb
jo
inc
mov
lahf
push
inc
outsb
fsub
jne
je
loop
xor
cmp
das
inc
idivl
inc
sub
xchg
xorb
cmp
fnstsw
inc
sbb
add
fbstp
fs
push
fcoml
push
or
add
push
in
adc
testl
aam
dec
xchg
pop
cmp
cwtl
data16
pop
mov
pop
fildll
flds
fsubl
lcall
add
sub
dec
out
scas
and
mull
mull
sub
and
shll
sbb
into
pop
imul
stc
or
repnz
movsl
mov
clc
jg
cmp
jp
lret
les
or
add
push
das
dec
push
repz
sbb
outsl
insl
push
xor
mov
and
add
dec
aaa
andb
dec
pop
cmp
aas
es
pop
push
loop
aam
arpl
xor
push
pop
sahf
pshufw
pop
mov
stc
in
loopne
pop
add
shrl
ss
and
pop
xchg
ss
insl
mov
dec
inc
mov
out
add
dec
sbb
lcall
imul
pop
push
pushf
cmp
sub
sub
mov
aam
cmp
inc
nop
sbb
mov
out
pop
int
dec
xor
je
mov
xlat
aam
jle
dec
icebp
mov
sub
cmp
pop
gs
dec
push
or
pop
loope
jb
push
fisubs
fs
mov
cmp
pop
mov
and
xor
adc
jbe
fisubrs
sub
dec
iret
je
add
dec
arpl
add
or
cmp
push
aas
sub
cmc
ss
jl
mov
sub
clc
mov
sub
sbb
loop
enter
add
fcmovnbe
repnz
in
mov
stc
sub
jl
mov
sub
push
pusha
add
stc
in
sar
repz
push
roll
push
es
xor
sub
and
mull
mov
outsl
scas
cmp
xchg
aas
and
cmp
imul
cmp
xchg
cld
dec
in
cmc
cmp
jbe
roll
in
or
lahf
mov
xchg
sub
xlat
dec
cmp
push
icebp
jnp
pop
aam
movsl
lcall
lret
sahf
mov
pop
xchg
loope
dec
leave
adc
xchg
sub
lods
in
add
out
push
xchg
dec
sbb
and
xor
ss
int3
aam
lea
popf
popa
sbb
and
inc
sub
icebp
mov
xor
push
lea
mov
xchg
imul
dec
push
mov
hlt
xor
imul
cmp
sub
pop
aam
jb
adc
jg
aad
ret
xchg
adc
cmp
add
cmp
ficomps
mov
xor
jns
test
dec
fdivs
rcrb
dec
fistpll
xchg
jge
lods
cmpsl
imul
inc
and
mov
jle
lahf
fcompl
cmp
inc
cmc
mov
adc
lock
loopne
mov
mov
arpl
or
or
in
scas
jl
fiaddl
cmc
les
or
testl
mov
jg
sub
dec
lock
test
decl
aad
test
sti
jbe
dec
repnz
ds
out
inc
dec
outsl
pop
mov
jo
stos
xchg
or
mov
jbe
out
imul
mov
dec
pop
out
inc
nop
aam
or
jno
out
xchg
hlt
dec
rcrb
inc
ret
mul
out
dec
rcrb
movsb
mov
scas
push
cmc
ja
bound
pop
dec
test
xor
push
cmpb
std
sub
fldenv
cmp
dec
adc
adc
aas
xor
cld
lock
in
adc
int3
push
notl
xor
inc
sahf
push
fwait
mov
repz
hlt
stos
pop
inc
xchg
mov
xlat
push
dec
iret
sub
add
and
cmp
lods
inc
imul
inc
jae
add
test
push
scas
rorl
fdivr
xorl
mov
pop
scas
fwait
cmp
pop
aam
or
ret
mov
xchg
repnz
jecxz
imull
out
sub
push
ds
inc
bound
insb
pushf
lock
sub
cmp
sbb
lcall
push
cmp
popa
je
out
mov
add
mov
imul
cmp
repnz
cmpsb
cwtl
mov
shl
daa
mov
enter
jne
jle
sbb
repz
mov
jecxz
pop
mov
bound
dec
int3
mov
pop
clc
xlat
outsb
cmc
xchg
mov
or
xchg
xchg
jae
mov
out
ret
add
sbb
in
std
sub
xchg
cmpl
in
and
mul
cmpsb
xor
mov
clc
fs
je
jecxz
jp
loop
movsl
xchg
pop
and
mov
loop
sbb
sub
mov
mov
xcrypt-cfb
sbb
dec
cmc
inc
mov
xchg
sbb
mov
lods
stc
sub
push
pop
hlt
in
insb
in
movsb
jo
insb
mov
mov
movsl
das
fbld
lahf
int
lods
dec
xchg
xor
cmc
mov
pop
or
aad
xor
cltd
mov
repnz
adc
adc
push
jecxz
addr16
cltd
mov
loop
xchg
adc
adc
sbb
das
ja
push
push
out
push
pop
cmp
fcoml
aaa
out
out
mov
fstpt
xchg
or
data16
pop
ss
cs
inc
inc
mov
int3
push
outsl
repz
loope
inc
xor
stos
push
es
loopne
jmp
lret
outsl
roll
scas
ljmp
loop
into
inc
call
pop
js
cmp
repz
lcall
adc
adc
das
ja
jae
jbe
pop
dec
sub
pop
and
repz
xchg
push
jle
aas
stos
ds
insl
aaa
adc
loope
aas
cmp
outsl
push
in
std
pop
pop
out
lds
dec
scas
inc
jecxz
hlt
and
stos
and
shll
das
jp
mov
xor
mov
das
inc
shll
mov
jb
and
xchg
int3
scas
and
pop
pop
xor
jecxz
mov
pop
outsl
repnz
cli
fsubs
daa
inc
repnz
dec
je
into
pushf
cmc
push
aad
cli
inc
icebp
sar
adc
mov
cmp
sbb
jae
pop
in
lcall
lods
inc
lret
cmp
sbb
sub
cmc
ds
fidivs
adc
js
dec
outsl
mov
mov
out
pop
mov
jb
or
and
out
ds
enter
add
imul
cli
idivl
pop
mov
add
in
or
ljmp
and
sbb
fs
addb
in
pop
leave
pop
ret
hlt
outsl
xor
bnd
dec
inc
sahf
xor
loop
loope
stc
loopne
xor
xchg
mov
sbb
data16
inc
jns
pusha
js
xor
push
out
das
lea
cmp
add
sub
dec
xor
mov
addl
mov
call
xchg
and
lret
pop
ss
inc
insb
std
xchg
repz
lret
cmp
dec
sub
lcall
les
into
pop
test
aam
xchg
adc
adc
pop
popa
cmp
ret
pusha
pop
mov
fdivp
aas
aas
hlt
aad
xchg
lret
outsb
stos
push
sbb
xchg
pop
mov
xchg
push
jb
scas
mov
cltd
pop
push
and
fdivs
xchg
xchg
hlt
adcb
mov
pushf
repnz
jne
pop
rorl
add
mov
jns
cmp
adc
jns
inc
jae
shlb
lock
sbb
in
shl
test
inc
stos
popa
pop
mov
popf
lahf
fs
in
push
xor
decl
dec
or
repz
inc
and
mov
insb
jns
or
cmp
jnp
jno
adc
mov
or
addr16
mov
addr16
test
ret
fiadds
test
loopne
push
mov
sub
mov
hlt
addr16
push
cltd
cmpl
gs
ja
sti
out
pop
into
push
mov
pop
fidivl
addr16
movsb
xlat
mov
movsb
cmp
mov
sti
pop
mov
mov
cld
icebp
push
xlat
sbb
jge
das
shrl
or
ret
movsb
out
in
inc
add
xor
mov
out
xchg
push
cs
pop
add
or
xchg
cmp
or
repz
int3
sar
ljmp
es
fsubrs
das
mov
xor
mov
mov
mov
dec
cmpsb
sub
cmp
push
and
hlt
stc
lea
iret
ficompl
ret
popf
or
daa
fs
pop
ficoml
repnz
dec
es
and
loopne
push
jle
add
xchg
idivb
loopne
fdivrp
pop
mov
cmp
es
mov
push
negb
jl
test
mov
lods
out
cmp
inc
add
shll
pop
sbb
cli
or
jecxz
pop
sbb
outsb
push
rcl
outsb
popf
adcl
mov
es
cli
rcl
stc
jo
inc
xchg
data16
fldt
and
orl
and
xchg
sbb
mov
lahf
js
sbb
outsl
test
dec
ss
movsl
xor
adc
xor
rol
sbb
mov
jno
mov
mov
movsb
pusha
data16
sbb
fcompl
outsb
or
cmp
cmp
add
and
daa
es
aas
dec
and
xchg
or
cmpsl
pushf
addr16
lds
das
sbb
push
iret
shlb
es
cmpsl
mov
push
sbb
push
inc
pop
aaa
jnp
mov
iret
idivb
push
or
push
sub
xchg
mov
in
hlt
addr16
dec
lock
pop
ljmp
jl
xor
inc
test
imul
push
xchg
andl
sbb
loopne
dec
lods
stc
jmp
adc
in
gs
push
push
mov
ja
aas
xor
add
aas
mov
or
cmp
push
hlt
pop
xor
ret
cmp
add
pop
push
jne
xor
dec
mov
sahf
lods
lea
jg
addr16
cmpl
ds
pusha
popf
jl
in
dec
pop
dec
stc
inc
lret
mov
pop
lods
pop
shl
bound
jno
xor
iret
mov
mov
shlb
pop
sbb
adc
cmp
push
rcrl
dec
test
cmp
inc
inc
push
scas
xor
jp
shlb
push
fadds
out
mov
pushf
push
mov
out
mov
push
jae
movlps
pop
mov
insb
loopne
mov
filds
jno
sub
iret
mov
adc
pushf
popf
jmp
inc
cmpsl
ja
adcb
push
scas
push
pusha
mov
popa
popa
xchg
sbb
test
pop
cmp
pop
pop
and
dec
movsb
inc
sbb
mov
les
push
bound
inc
mov
lea
loope
pop
mov
andl
in
push
imul
aas
fwait
cs
mov
mov
dec
and
rcrb
xor
in
dec
add
pop
mov
ret
sbb
push
or
ror
imul
xchg
and
fisttpll
es
das
add
ret
jle
lret
mov
clc
jb
and
xchg
xchg
mov
mov
jo
sub
ficoml
jnp
dec
mov
inc
adc
pop
and
mov
aaa
jnp
lcall
cmp
jp
icebp
clc
int
sub
xor
jo
subl
jo
enter
push
lret
mov
inc
jbe
pop
frstor
addr16
push
lahf
bound
fists
push
imulb
aas
mov
add
sbb
rcl
mov
sub
xchg
movsb
cltd
test
mov
cmp
sahf
je
outsl
iret
push
pop
aas
mov
pop
pop
dec
idiv
lea
pusha
rcrb
cs
inc
xor
push
loope
pop
in
mov
enter
cmp
aam
mov
dec
nop
adc
push
mov
push
pop
or
shlb
sbb
xchg
sub
cli
pop
inc
dec
cld
gs
aad
pop
inc
jge
rcrl
dec
gs
add
mov
push
adc
pop
push
sahf
xor
sbb
nop
and
sub
pop
or
testb
mov
mov
or
loop
lock
cmp
shlb
fistpl
outsl
ret
les
roll
mov
cwtl
aaa
or
orb
cs
mov
sub
cli
fiaddl
lahf
cmp
inc
in
div
fstl
scas
pushf
cmp
inc
cmp
cwtl
popa
shr
push
pop
scas
or
jl
cmpsb
dec
mov
adc
ja
leave
icebp
sbb
and
imul
fidivl
fidivl
jmp
xor
popa
pop
sub
push
jno
jmp
push
ret
xchg
movsb
pop
adcl
add
inc
push
lock
movsb
std
loope
add
inc
test
push
adc
addr16
cmp
popa
jp
jl
pusha
iret
leave
inc
sub
es
pop
cmp
xor
push
addr16
in
daa
leave
pop
out
xchg
enter
in
imul
push
outsl
xchg
fildl
out
jb
and
pushf
jmp
xor
xchg
xchg
xor
popa
inc
fdivrs
rclb
or
out
stc
cmp
mov
mov
xor
fmull
pop
dec
pop
push
xchg
dec
and
addr16
fs
loopne
inc
lahf
jl
add
frstor
pop
mov
dec
int
cmp
inc
push
jnp
cwtl
insb
sbb
int3
and
sub
hlt
dec
fisttpll
lock
mov
sbb
das
mov
fadds
rcl
inc
or
xchg
jno
xchg
jo
inc
imul
cld
or
ds
push
mov
pop
nop
std
inc
lods
sbb
jo
inc
push
cwtl
out
cmpsb
repz
test
imul
push
fimull
vhaddpd
jmp
pop
and
mov
loop
sub
in
add
out
std
xor
je
xchg
testb
lock
in
pop
out
push
fcomps
pusha
divl
push
jno
mov
js
cli
mov
pop
test
mov
adc
push
cmpsb
movsb
and
or
mov
cmc
fcoml
xor
or
mov
js
mov
rolb
mov
fmul
out
jbe
shl
push
out
out
pushf
sbb
scas
fisubs
or
or
xor
mov
adc
sti
jecxz
xchg
cmp
in
xchg
sub
jle
add
cmp
ret
sub
mov
lret
push
jge
in
iret
jno
ret
iret
in
les
jns
adc
mov
and
mov
popf
sbb
cli
out
aas
lret
cmp
dec
ret
loope
mov
fbld
mov
test
cmpl
aam
dec
pop
flds
add
xlat
iret
sub
push
adc
cwtl
neg
testl
cwtl
test
notl
jbe
mov
push
je
mov
data16
in
push
lahf
nop
xchg
pop
jae
inc
test
pusha
and
rorb
add
cmp
sub
bound
data16
faddp
andl
andb
push
adc
jp
in
dec
xlat
add
lock
mov
sbb
push
inc
push
push
mov
test
lret
push
daa
int3
and
push
aad
cmc
iret
push
sub
fs
mulps
rcr
xchg
sub
adc
das
push
sbb
shll
pop
sub
dec
repz
jae
pop
je
sub
xchg
adc
fwait
out
subb
in
sahf
roll
aam
ja
cld
scas
cmpsl
sbb
frstor
inc
sub
outsl
and
add
in
and
pop
fyl2x
stos
and
mov
jl
lock
shl
and
and
mov
cld
cli
cmp
jno
outsb
mov
in
les
and
out
ja
jbe
shrb
lahf
and
lods
add
fcomi
xchg
out
pop
dec
test
add
jne
std
fsub
or
mov
sub
pop
inc
sbb
xor
ret
js
or
cmp
jp
and
lcall
cmp
push
sarb
dec
adc
cmp
mov
std
fs
add
push
mov
pushw
dec
insb
mov
cmpsl
fstps
cmc
iret
or
in
push
pop
ss
aad
ret
jle
mov
div
mov
pusha
loope
adc
sbbb
test
ds
pop
push
xlat
outsb
jno
cmp
push
ds
pop
outsb
pop
out
stos
cmp
movsl
cmp
mov
pushw
or
addl
add
sub
iret
cmc
push
sub
popf
movsb
cmpsb
aaa
cwtl
xchg
mov
hlt
xchg
js
xchg
and
sub
push
loop
jge
lcall
sub
jg
jns
daa
pop
repnz
mov
lahf
push
pop
push
aas
insb
pop
les
xchg
mov
cmp
adc
dec
xchg
test
add
imul
xlat
mov
arpl
loopne
mov
push
int3
xchg
push
lahf
pop
cmp
daa
sbb
mov
mov
mov
iret
dec
jne
jae
sub
shl
mov
cmc
pop
mov
call
pop
adc
mov
push
adc
push
cmpsb
rorl
lock
inc
in
xor
or
cltd
push
cmp
jl
lods
mov
adc
mov
out
dec
xchg
lods
sub
mov
iret
inc
popa
test
pop
lahf
add
ret
scas
sub
stos
subb
test
mov
es
sbb
jg
push
cmpsb
sub
sbb
test
inc
hlt
addr16
rcrb
sbb
mov
or
test
ficomps
inc
sahf
jnp
jnp
pop
dec
and
pusha
popa
mov
mov
pop
out
lret
push
jns
mov
push
addl
cmp
insl
in
addr16
push
mov
xor
mov
push
sub
inc
push
adc
and
dec
pop
in
pop
sbb
push
jae
test
push
sub
jl
adc
cli
add
or
icebp
and
test
repnz
cmp
in
das
push
sub
insb
cs
push
pop
jb
mov
mov
nop
lea
jne
lahf
movsl
ja
and
sti
jae
jb
sahf
bound
dec
mov
cmp
pop
test
out
insb
test
dec
lret
pop
and
mov
popa
ljmp
out
pop
cmp
inc
ss
lcall
pop
test
imul
push
je
out
popl
aas
pop
ljmp
test
cmp
jnp
xor
mov
decl
in
movsl
ja
loopne
pop
ds
insb
leave
mov
ja
int3
sbbb
frstor
and
push
out
cmp
dec
mov
inc
push
arpl
xor
pop
push
inc
pop
dec
cmp
cmpsb
adc
jg
push
mov
or
xlat
adc
mov
in
pop
mov
pushf
mov
xor
psraw
pushf
pop
cmpsb
arpl
stos
mov
sbb
in
mov
adc
adc
test
movsl
jb
and
imul
ficoml
shll
sbb
jge
mov
leave
push
push
jnp
jns
daa
mov
test
pop
shr
pop
adcb
test
incl
int
add
pop
push
adc
add
in
pop
stos
fs
cmp
adcl
inc
dec
or
inc
clc
add
fcmove
push
rcll
loope
or
adc
cmp
shrl
push
adc
lods
mov
mov
xchg
mov
outsb
jecxz
xor
mov
mov
shlb
mov
fs
or
iret
mov
xorl
pop
xor
jg
cmpsl
shll
mov
pop
or
pop
pushf
insb
stc
dec
incb
xchg
push
add
movsb
loope
cwtl
pop
mov
popa
pop
scas
xchg
add
andb
pop
lds
mov
fsubl
mulb
mov
sub
imul
cmpsl
mov
cld
and
jne
in
pop
xor
mov
xchg
es
je
inc
cli
add
rclb
jns
sti
pop
and
mov
sti
pop
jne
fisubrs
inc
jno
xor
inc
test
mov
aas
adc
repz
xor
dec
sbb
dec
sub
in
lahf
sbbl
pushf
cmp
push
jmpw
add
fldt
add
dec
pop
movaps
mov
jg
push
in
push
js
mov
jno
mov
dec
add
and
jne
jecxz
jae
xchg
or
cwtl
js
lods
imul
lret
insb
xchg
mov
int3
push
dec
jecxz
mov
and
je
ficomps
cmp
out
out
mov
vmovups
in
mov
xor
mov
inc
or
adc
mov
nop
dec
shrl
and
lahf
repnz
out
push
pop
push
pop
lods
xor
int3
jge
xchg
push
imul
mov
adcb
leave
or
ret
jl
aad
mov
jp
outsl
push
insl
pop
fwait
add
pop
shrb
loop
rorb
inc
xabort
repz
cltd
and
insb
inc
sbb
or
push
dec
jo
hlt
pop
ljmp
test
imul
add
ss
push
push
int3
sub
fistps
clc
lcall
dec
mov
push
fildll
cmpsb
fidivl
add
sbb
orl
pop
enter
aas
sbb
outsb
roll
mov
addr16
xchg
lds
pop
dec
jae
rolb
adc
aam
cltd
cmc
sbb
call
jb
hlt
out
mov
addr16
push
in
js
push
sbb
mov
stos
jne
pop
daa
int3
add
mov
nop
sub
sub
lea
fidivs
lcall
dec
inc
mov
jne
push
fsubrl
xor
sub
in
clc
xchg
push
aaa
in
lods
inc
scas
loopne
shlb
mov
xchg
adc
lock
fiadds
sub
push
mov
test
lock
jmp
mov
mov
dec
jmp
scas
and
repnz
dec
pop
aas
sbb
sub
add
imull
iret
pop
pop
adcl
push
mov
in
adc
or
aaa
lods
jne
add
stc
jg
pop
inc
ds
pusha
in
pushf
sbb
mov
jmp
jo
call
andb
shrb
inc
cmpsl
add
pop
inc
mov
mull
sbbb
ss
pop
shll
push
stc
or
pop
inc
adc
dec
dec
mov
je
mov
mov
add
stos
add
orl
mov
sbb
push
xchg
pop
cli
sbb
std
pop
mov
push
movsl
pop
inc
adc
xchg
mov
inc
jbe
sete
fidivs
xor
lods
mov
push
daa
shll
mov
xchg
mov
pop
mov
lock
add
and
inc
mov
iret
mov
ret
adc
push
je
inc
dec
or
mov
adc
sbb
xor
mov
inc
cmc
sub
sbb
and
pop
adcb
pop
sub
pop
and
jg
pop
lcall
test
mov
push
fucomip
out
xor
jbe
jge
or
enter
inc
sub
lods
mov
movsb
sub
stos
dec
insl
add
fcompl
iret
dec
fbstp
cmpsl
xchg
fcmovnb
outsl
and
pop
sub
test
inc
inc
in
inc
pop
sub
movsl
test
and
sahf
dec
mov
movsb
out
dec
push
rcrl
ja
push
mov
sahf
mov
xor
or
sbb
test
cwtl
jo
fsubrp
inc
icebp
mov
ja
sub
or
je
xor
lods
and
test
into
sub
push
push
inc
enter
pushl
adc
push
cli
add
mov
gs
cmpsb
icebp
sti
addr16
push
xlat
mov
divb
loop
mov
in
pop
sahf
and
mov
je
int3
add
mov
or
adc
sub
jecxz
cmp
aad
shrl
imul
cwtl
mov
or
out
dec
imul
push
add
fisttpl
dec
aas
cwtl
cwtl
dec
fsub
notl
xchg
cmc
or
dec
jg
test
stos
mov
push
outsl
mov
stos
mov
int
mov
testb
dec
mov
xor
mov
push
fnstsw
mov
in
fmul
fbld
fstl
mov
xchg
or
hlt
stos
cmp
add
jge
or
test
test
test
scas
mov
dec
inc
cmpsb
mov
dec
nop
ljmp
fld
or
xchg
cs
sbb
sub
test
dec
lea
xchg
pop
and
cmp
es
dec
mov
imul
inc
push
movsb
repnz
and
imul
movl
popa
divb
dec
cwtl
test
mov
pop
add
push
mov
sbb
and
andb
sub
ret
pop
jno
adc
aam
xchg
mov
pop
sub
shrl
inc
pop
das
in
jp
int
cmp
adc
mov
scas
jno
adc
pushl
loope
orb
cmp
push
push
lods
jbe
pushf
loopne
or
popf
test
cwtl
imul
sti
daa
jb
bound
lods
outsb
gs
gs
imull
jno
inc
repnz
sbb
mov
sub
lcall
test
add
or
cmp
popa
mov
xchg
jae
lock
push
shrb
jae
fldl
or
inc
pushf
lahf
push
rorb
add
je
push
lods
lcall
jnp
push
xchg
cmc
sub
and
mov
cmp
pop
popa
inc
mov
js
cmpsb
mov
loope
push
insl
mov
daa
mov
pop
imul
push
test
jle
mov
or
out
loop
jae
mov
mov
mov
add
fisttpll
mov
test
test
mov
in
adc
push
adc
mov
push
mov
cmp
enter
idivb
lret
mov
mov
out
sub
mov
push
cmpl
das
pushf
lcall
jae
inc
xor
out
xorl
loopne
ret
into
aaa
cmp
jae
out
xor
xorl
mov
or
sub
ss
test
daa
push
xchg
outsb
mov
sbb
mov
nop
pop
and
popf
stos
jne
cld
or
jl
sbb
repnz
and
push
scas
jae
pop
sbb
sbb
addl
pop
sub
in
add
dec
jl
daa
pushf
xchg
push
aad
lcall
mov
or
xchg
or
mov
mov
test
int
fsubrp
das
adc
movsb
jae
jno
mov
push
add
mov
fstpl
xchg
and
ja
lods
or
add
inc
lods
insl
movsl
aaa
movsl
xor
mov
in
das
inc
lods
test
inc
lret
jmp
and
and
sti
push
jmp
push
and
and
dec
xchg
ret
and
insl
test
xor
aad
sbb
outsl
jb
and
cmp
cs
clc
add
lock
mov
ficompl
or
lret
insl
sbb
clc
inc
or
scas
mov
decl
mov
loop
in
adc
lret
push
lea
out
xlat
mov
jb
rorl
cltd
xlat
dec
cmp
xor
pop
sbb
mov
mov
inc
out
or
sub
mov
push
inc
data16
cmp
xchg
lea
lea
repnz
negb
mov
jb
jnp
or
lds
je
dec
pop
insl
push
jecxz
aad
xor
ds
and
cmp
incb
mov
jg
push
lahf
add
je
in
icebp
cmp
jno
out
cmp
aam
jl
sub
mov
lahf
and
mov
mov
xchg
push
mov
mov
mov
pusha
shr
xor
xor
loopne
and
adc
hlt
cli
xchg
xchg
les
scas
fs
mov
or
std
sahf
pop
fsubs
sub
repz
js
pushf
lods
das
repnz
sarl
lock
jno
xor
xchg
ret
mov
add
js
jbe
into
jecxz
orb
sarl
das
std
xor
ret
or
push
dec
lds
ret
mov
xlat
mov
push
shlb
jbe
dec
dec
daa
xchg
lret
popa
unpckhps
sub
daa
push
ja
enter
mov
shrl
andl
push
std
sub
out
xchg
lret
cmp
pushf
test
inc
add
pop
add
mov
mov
cwtl
cld
mov
mov
cmp
int3
xlat
sub
push
mov
pusha
jnp
jg
add
and
jnp
dec
pop
jg
jg
sbb
pop
jecxz
test
mov
pop
lahf
fadds
insl
adc
or
lcall
sbb
loope
sahf
out
push
cmp
push
lcall
mov
jg
pop
sub
dec
sub
add
sub
add
icebp
loope
lcall
mov
push
movsl
aam
sar
mov
out
xorl
dec
mov
pop
nop
hlt
and
or
and
fdivrs
sub
mov
mov
cmpsb
cmc
insb
or
sub
fbstp
popf
scas
pop
shrb
adc
or
xchg
imul
push
cmp
push
inc
test
push
lahf
popf
arpl
push
mov
dec
inc
sbb
cli
push
imulb
outsl
mov
enter
mov
aaa
push
xor
sbb
das
fstps
fsubrs
cmp
and
mov
jp
jmp
jge
fildll
inc
gs
cld
or
mov
jle
loop
jg
loope
leave
cmpsl
rclb
lea
les
pop
mov
jge
add
cmpsb
repnz
xchg
mov
xchg
lret
adc
mov
dec
mov
mov
mov
jle
dec
mov
out
aad
xchg
aam
adc
mov
xor
aas
sub
pop
lods
movsb
mov
icebp
cli
into
xchg
shll
mov
add
mov
or
mov
and
inc
ret
push
hlt
cli
mov
pop
stc
add
or
cmp
pushf
jnp
pop
in
rorl
jo
adc
jl
rcrb
fsubp
lock
sub
mov
sub
inc
sbb
push
daa
out
sahf
pop
call
adc
loope
lods
dec
xor
ss
push
mov
xchg
jge
orb
arpl
loope
js
insb
shll
or
or
cmp
pop
roll
mov
flds
int
adc
test
lcall
mov
pop
frstor
mov
dec
ja
xor
cmpl
pop
aaa
cmc
adc
dec
sti
je
aaa
add
in
bound
jb
fdivl
daa
jge
cmpsl
fidivrl
xchg
out
cmp
daa
icebp
pop
adc
cmp
clc
pushf
mov
push
or
loope
ja
xchg
mov
int
mov
movsl
pushf
cmpsl
jae
clc
icebp
push
lsl
inc
dec
stos
xor
das
bound
lahf
dec
pop
sbb
dec
fsubs
ret
xchg
xorb
lock
mov
gs
test
add
and
adc
xor
adc
mov
and
outsl
ja
jl
sbb
mov
ret
xchg
jnp
cld
fildl
sti
in
xor
andb
pop
push
rcrl
lea
ret
xor
ret
sub
in
ja
pop
lcall
adcb
jnp
arpl
mov
dec
pushfw
mov
mov
cmpsl
mov
shl
mov
out
icebp
mov
cmc
call
xchg
sarb
and
loopne
orl
mov
test
jae
pop
or
fcmovnbe
or
clc
jmp
mov
mov
aas
add
bound
mov
out
xor
mov
es
adc
lds
dec
mov
or
test
xchg
mov
cmc
ds
mov
leave
stos
sti
scas
inc
outsb
test
dec
lds
mov
js
int3
insb
jae
das
lcall
cmpsl
fisttpl
jecxz
aam
fstp
pop
jne
jecxz
xchg
popa
jp
mov
inc
icebp
leave
cmp
cmp
pop
je
jbe,pn
xchg
loope
mov
fcompl
xor
xor
lret
add
push
fwait
jae
push
loope
jns
push
inc
cs
pop
outsb
stos
or
jbe
rclb
xor
cwtl
dec
jae
in
mov
ficoms
xchg
inc
xor
mov
movsl
mov
nop
jne
sbb
int
xchg
adc
cmp
or
push
aam
orl
ficoms
xor
xchg
or
jle
mov
ret
cli
jge
push
add
test
mov
mov
iret
ret
gs
mov
scas
cltd
add
xchg
and
mov
pop
in
pushf
jl
cmp
mov
inc
jl
xchg
out
popa
adc
cwtl
stos
jb
sub
cmp
mov
sbb
dec
dec
enter
xchg
scas
sub
aaa
cltd
out
rcll
xchg
mov
in
ret
scas
test
pop
jae
leave
mulb
ss
out
sub
repz
mov
and
mov
add
ja
mov
inc
arpl
and
mov
sahf
test
sub
push
push
xor
inc
out
ds
imul
push
mov
and
jl
add
fdivrs
xchg
cltd
jecxz
das
lret
jnp
lods
repz
js
push
cmp
xchg
mov
mov
stos
mov
fwait
sahf
mov
jnp
jnp
inc
insl
imul
xlat
fstpl
dec
clc
out
and
jno,pn
xchg
fistpll
jb
and
call
scas
jns
lret
lds
jno
in
lcall
das
xchg
jp
pusha
adc
dec
push
jl
mov
cmp
je
xor
xor
sti
mov
add
push
sbb
repz
into
push
sti
aam
ret
pop
lret
sbb
mov
dec
xchg
cltd
fwait
sysret
daa
add
fstps
push
inc
or
subps
test
xlat
and
icebp
push
imul
iret
dec
xchg
and
mov
movsb
adc
inc
repz
mov
cmp
mov
dec
test
sub
test
and
int
mov
mov
test
mov
ja
pop
xchg
cmp
xor
push
adcl
setae
mov
dec
xor
mov
add
push
cmp
ja
dec
pop
push
stc
jg
je
cmp
inc
mov
insb
mov
mov
mov
jns
mov
faddl
mov
lds
loope
xchg
cmp
mov
sar
jnp
adc
dec
imul
sub
and
hlt
push
xchg
lds
jmp
mov
add
dec
or
jnp
sarb
sub
mov
testl
lcall
add
outsb
mov
mov
mulb
adc
xchg
aam
inc
test
jns
push
push
dec
outsb
repz
sub
xchg
aaa
xorl
pusha
mov
and
jge
test
jbe
cmpsl
sbb
mov
addb
inc
fcmovbe
mov
jne
mov
xlat
adcl
test
dec
mov
lds
dec
xor
jne
pop
movsl
nop
movsl
sbb
sbb
push
fwait
std
testl
or
ret
sbb
mov
push
cmpsb
add
or
add
enter
nop
jmp
and
lods
push
cld
je
adc
pusha
push
sub
ret
in
mov
add
rclb
aam
add
mov
iret
xchg
mov
repz
jno
call
sbb
loop
add
push
pop
add
or
jl
roll
sub
test
jbe
test
lret
sub
imulb
stos
mov
jl
and
rol
and
imul
movb
mov
in
jmp
mov
mov
ret
inc
and
fs
jl
std
jo
int
outsb
inc
dec
mov
pop
cmp
jge
pop
ror
mov
sbb
fcoms
push
imul
je
pmaddwd
rcrl
aam
cmp
cmp
mov
mov
pop
popa
subb
push
pop
mov
mov
pop
xchg
or
mov
push
or
push
jbe
push
inc
aas
fsub
mov
mov
ss
mov
pop
push
out
mov
inc
push
sub
sub
push
dec
ret
mov
popa
jl
pop
insl
adc
mov
cmp
imul
sbb
scas
push
dec
xor
mov
repz
cmp
testl
mov
jnp
mov
sub
mov
pop
stos
pop
dec
jle
xor
insl
add
insl
in
sarl
aaa
lret
repnz
sbb
xor
pusha
arpl
xchg
stos
xor
fs
mov
data16
rorl
or
and
mulb
pop
cmp
jb
pop
and
icebp
call
test
inc
inc
mov
subb
pop
ljmp
movsb
jle
add
rol
push
cwtl
xor
lods
dec
loope
push
bound
jo
and
pop
mov
add
aam
dec
sub
bound
jnp
push
adc
push
cmp
arpl
pop
mov
ja
jae
lret
jns
out
andl
push
je
rcr
in
incb
repz
mov
js
out
mov
add
sahf
icebp
out
or
or
or
add
cmp
outsb
inc
and
adc
pop
mov
inc
mov
sarb
and
add
leave
roll
mov
daa
in
or
jbe
fdivs
xchg
adcl
mov
cmp
insl
fcomp
bound
jae
pop
sarl
iret
push
jp
mov
lock
stos
push
stos
cmpl
push
or
aas
sbb
push
or
lahf
les
fsin
js
mov
lock
test
daa
shlb
pop
lcall
pop
inc
inc
xor
pop
cmp
jnp
bound
les
sbb
ds
lds
inc
sahf
ret
cmp
pop
push
lret
mov
stc
sarl
test
shlb
jb
adc
pop
pop
or
and
movsl
push
cmp
cmpl
jb
push
add
pop
repz
sahf
add
dec
lods
int3
xchg
cmpsl
stos
insb
cmp
mov
idivl
pop
jbe
cmp
and
lret
xchg
mov
sahf
hlt
fs
enter
push
sbbb
mov
je
and
lret
or
mov
gs
enter
xor
sbb
vmulpd
leave
xor
pop
sub
xchg
imul
addl
cltd
orb
out
xchg
aas
iret
adc
sub
cmp
inc
mov
mov
in
jecxz
or
test
add
lock
ret
dec
add
cs
sbb
push
jo
cltd
clc
daa
fidivrl
mov
icebp
jmp
cs
std
outsl
and
lods
jecxz
test
fwait
out
in
insl
inc
mov
sub
add
dec
cmpsl
push
xchg
outsl
stc
mov
cs
jno
pop
dec
sub
es
or
jne
adc
ret
jl
popf
jl
xchg
aam
stc
hlt
dec
pop
push
mov
mov
adc
outsb
fistps
sti
in
mov
ds
adc
fdivrl
rolb
add
mov
mov
loope
bound
mov
mov
mov
fistpl
mov
or
test
sbb
bound
test
mov
test
imul
cmc
or
cmp
and
aas
out
push
mov
ror
xor
enter
stos
inc
test
add
mov
jp
dec
sub
fld
mov
inc
call
inc
ret
or
iret
mov
mov
je
scas
sahf
out
push
mov
jno
call
lcall
iret
adc
xor
xor
mov
sub
sbb
cli
psubusb
loope
and
mov
dec
mov
inc
push
or
loope
add
mov
mov
lcall
test
or
shrb
xor
xor
adc
mov
loop
inc
imul
shll
out
and
ja
xchg
es
pop
bound
inc
insb
add
call
xchg
mov
addr16
ret
flds
aas
pop
int3
xchg
pop
fs
add
das
scas
cs
xchg
jbe
xor
mov
jle
stos
sub
or
cmpsb
out
outsl
jecxz
jbe
cmpsb
inc
daa
sbb
sahf
roll
gs
mov
outsb
and
push
sbb
movsb
xchg
dec
adc
and
pop
cmp
sub
pop
push
cmc
fstl
cmp
rcrb
out
pushf
ljmp
rcrl
pop
stos
and
cltd
lcall
mov
pushf
lahf
dec
adc
fisttpll
stos
lahf
dec
iret
popf
rorb
jb
inc
leave
ss
sbbl
shll
mov
repz
pop
mov
cwtl
adc
aaa
xor
adc
lcall
mov
mov
sub
test
es
jo
inc
xor
lret
push
pop
mov
imul
pop
inc
adc
daa
in
dec
inc
rcll
jmp
shr
cmc
out
mov
sub
mov
jne
cld
cs
es
or
gs
fwait
icebp
sbb
lret
sbb
sub
leave
jne
in
pop
sbb
push
adc
mov
mov
or
clc
pop
cmp
in
nop
fstl
mov
jnp
call
lods
xchg
fmuls
bound
mov
rol
mov
adc
int3
xchg
xor
outsb
and
je
adc
outsb
inc
mov
es
das
xlat
mov
push
lret
mov
dec
loopne
cmc
fmull
xor
insl
shl
faddl
loope
pop
jle
mov
arpl
or
fsubs
jge
jbe
xchg
rcrb
mov
iret
mov
outsb
jg
sahf
fs
mov
mov
add
ljmp
lea
mov
jle
sahf
cs
iret
mov
sti
dec
dec
xor
stc
inc
fimuls
lods
xlat
into
inc
mov
jle
scas
iret
fdivl
dec
xor
bound
fildl
push
mov
mov
jmp
jae
mov
fisttpl
inc
add
jnp
test
inc
mov
idivl
jno
xchg
das
sbb
mulb
jl
sti
std
stos
out
xor
ret
and
and
loopne
jp
out
or
ljmp
lcall
push
dec
ret
aaa
dec
pusha
popf
aad
aad
out
out
hlt
jb
push
ja
xor
push
test
shrl
mov
dec
data16
mov
fcom
negl
hlt
sbb
shrb
mov
push
out
add
mov
imul
xchg
dec
mov
push
jmp
push
rorl
push
mov
mov
sahf
push
xor
cmp
loop
pop
clc
jle
icebp
cmp
ret
lcall
sbb
mov
add
insb
fldt
lcall
push
dec
mov
leave
enter
cli
adc
sbb
jg
test
movsl
xchg
ffreep
out
inc
stos
xchg
sbb
je
and
js
pop
and
fcmovb
repnz
mov
inc
jns
pop
mov
loope
les
int
push
dec
cmp
xor
loop
xchg
xchg
rolb
xor
testl
jmp
cmpsb
stc
outsb
dec
fimuls
add
cmp
enter
jb
pop
aaa
mov
mov
push
jnp
jle
push
aas
xchg
jo
aas
shrb
int
ficomps
push
js
aaa
decl
nop
outsb
cltd
mulb
push
movsb
sub
xchg
inc
push
and
mov
cmp
call
pop
mov
in
pop
add
icebp
jmp
pop
mov
push
jnp
lea
movsb
popf
clc
enter
and
js
jo
loop
mov
sbb
xchg
add
repnz
xlat
adcb
dec
push
xorl
icebp
xchg
or
mov
xchg
push
xchg
js
sbb
lods
adc
in
xchg
xchg
ljmp
push
gs
inc
add
mov
mov
mov
shrb
mov
pcmpgtb
adc
mov
push
test
sbb
movsb
or
in
std
sub
sahf
imul
jp
push
adc
ds
sahf
test
and
icebp
jecxz
xchg
int
enter
xchg
int
sbb
mov
xchg
std
neg
enter
mov
adc
adc
inc
add
imul
aad
jg
cmp
fistps
cmp
sbb
jnp
and
ds
ret
ficoms
adc
push
loope
movsb
dec
inc
rcl
inc
outsb
jb
pusha
test
rolb
and
cwtl
aad
enter
dec
out
pop
inc
inc
jae
rcrl
mov
sbb
daa
jne
jge
lahf
insb
lahf
and
jae
lods
pop
jle
mov
mov
je
sbbb
sbb
arpl
cld
or
test
addr16
xor
jae
jge
push
out
movsb
mov
pop
cwtl
imul
rcr
or
adcb
subb
sbb
outsl
dec
imul
mov
lret
xchg
ds
pop
daa
fstpt
lcall
ret
jle
cli
xchg
xchg
rcl
int
add
sbb
scas
adc
les
sarl
or
sub
adc
js
push
mov
pop
push
lds
jno
lods
pop
cmp
sub
popf
jne
icebp
addb
sbb
and
data16
add
cmp
adc
movsl
loope
lea
data16
fsubrs
out
iret
sbb
push
clc
jp
push
sub
adc
xchg
testb
adc
adc
daa
sbb
inc
jnp
or
xor
jne
push
lods
xchg
test
rcll
clc
loope
push
pop
mov
scas
pop
xorl
call
test
xor
push
stos
sahf
mov
pop
push
fwait
push
pop
dec
xor
mov
mov
es
mov
and
xchg
out
fisubrs
adc
stc
xchg
fimuls
into
cmp
adc
es
xor
ret
in
int3
fidivs
sub
popa
add
cmp
lds
fwait
lret
int
aam
test
or
mov
cmp
push
and
xlat
xor
scas
jle
hlt
pop
cmp
lcall
dec
mov
in
jmp
pop
imul
or
mov
mov
cltd
inc
xchg
jnp
dec
adc
mulb
cli
popa
push
jmp
inc
mov
xchg
jb
and
xchg
mov
adc
mov
mov
cmpsl
aad
xor
popf
xor
push
sub
mov
stos
xchg
sub
enter
xor
stos
ret
mov
in
mov
sbb
rcrb
movl
cwtl
hlt
push
arpl
or
cmpsl
inc
popa
xchg
jns
cli
mov
fnstenv
adc
arpl
ret
sbb
inc
jecxz,pn
push
mov
dec
pop
inc
dec
sub
inc
in
hlt
in
imul
scas
or
sub
mov
sti
insl
adc
in
and
xlat
test
push
xchg
mov
out
mov
fnstenv
rcrl
cwtl
sbb
mov
and
mov
sbb
sub
sbb
dec
sub
xchg
sub
cmp
or
sub
cmpsl
xor
push
filds
jl
icebp
lcall
aad
popa
aas
pop
je
scas
jns
mov
jne
mov
iret
inc
out
mov
sarb
inc
repz
sbb
movsl
sub
and
negl
mov
jmp
bound
and
jecxz
inc
mov
lcall
lcall
pop
ja
xor
les
mov
arpl
int
add
dec
inc
mov
in
enter
in
popa
aaa
mov
shl
stc
jmp
or
notl
mov
add
nop
fisttpl
xor
fmull
push
mov
push
cmp
scas
test
and
rcl
cmp
mov
cwtl
or
sahf
mov
into
fdiv
in
cwtl
bound
fstps
add
and
cmpl
mov
mov
imul
or
insb
xbegin
pop
xor
dec
mov
jg
dec
rcrl
icebp
inc
mov
scas
push
dec
fdivs
sbb
mov
ror
out
pop
lea
xor
pop
loope
leave
lds
fistl
cltd
xlat
push
jnp
icebp
pushf
sub
jl
mov
clc
inc
xchg
out
and
les
cld
cmpsb
aam
pop
loop
xlat
and
sti
repnz
cmp
mov
mov
xchg
mov
cmp
sub
push
jle
cs
inc
popf
cmpsb
cmc
xor
adc
es
outsl
repnz
loope
inc
pop
rcll
jle
ss
inc
add
cli
fwait
fwait
lret
add
push
test
popf
insl
aas
divl
mov
and
call
fisttpll
mov
scas
loop
and
sti
repz
mov
and
outsb
test
dec
mov
jl
push
fdiv
jne
sub
in
nop
rcrb
xchg
sub
movsb
jbe
and
push
mov
push
fadd
and
sti
mov
int3
pop
aas
jg
mov
adc
scas
sub
popf
sub
dec
iret
mov
xor
or
dec
push
cmp
adc
jo
inc
xchg
push
inc
loop
mov
xor
int3
cmp
jne
in
push
std
xchg
sub
ljmp
jge
add
pop
lret
and
popf
pop
mov
xchg
cwtl
es
add
pop
xchg
fdivrs
je
and
and
sub
outsl
sub
dec
test
ja
sahf
pop
mov
ficoms
shll
lods
and
inc
xchg
test
aam
and
sarb
xchg
testl
sub
or
cmp
lods
sub
sub
push
pop
data16
ret
xor
ficoms
cmc
inc
loope
mov
mov
aaa
mov
push
adc
lods
pop
in
xor
gs
test
mov
rcr
sbb
fisttpl
cmc
mov
jle
fldl2e
mov
imul
in
adc
sbb
imul
sub
pop
outsl
sub
aaa
int
cs
dec
divb
out
sarl
xchg
sub
test
stc
cmpsl
ret
insb
push
in
jle
loopne
xor
aas
dec
ret
sti
lahf
fiaddl
dec
int3
ljmp
xor
mov
mov
mov
out
mov
cmp
mov
orb
jo
add
xor
stc
subl
xchg
mov
pop
gs
mov
fisttpl
stos
or
mov
aam
inc
mov
lds
cmp
mov
jae
xor
adc
jae
loopne
int3
xor
ret
mov
jb
jne
add
cld
movsl
and
ret
inc
dec
popa
in
jbe
mov
sbb
fcmovu
xchg
lods
pop
clc
insb
enter
repz
scas
sub
aam
or
dec
sahf
mov
push
push
sbbb
out
jns
inc
inc
bound
push
int
xor
fldt
test
cmpb
inc
rcll
arpl
nop
repz
lods
aas
jmp
jl
mov
cmp
xlat
lahf
das
roll
aas
arpl
or
push
dec
adc
sub
sbb
jg
sbb
ret
leave
ja
pop
ficoml
addr16
jno
add
add
cmp
insb
ds
lods
mov
adc
xlat
insb
sahf
pop
pop
push
loop
pop
cltd
mov
sub
sbb
out
push
data16
add
sub
push
jp
add
xor
fsts
aas
imul
fdivl
in
popf
in
xchg
jecxz
cmc
lret
add
mov
rclb
lods
adc
or
and
fdivs
cwtl
xchg
add
frstor
and
jp
cmp
in
mulb
cmc
fcoms
mov
popf
out
shr
inc
push
add
aaa
push
add
add
cmp
nop
pop
ds
jbe
inc
mov
lret
call
cmp
outsl
xchg
clc
push
out
cli
inc
push
jl
jo
adc
lea
lret
lret
mov
jmp
mov
xor
insl
xchg
mov
push
sbb
jl
xor
scas
xchg
repz
or
xorl
sub
movsl
loop
cmpsb
ja
push
push
mov
cmp
xchg
and
dec
test
les
mov
in
fmul
in
mov
psrad
cli
pop
addb
arpl
mov
rorb
sub
clc
stos
insl
cmc
cmp
repnz
add
jo
xor
jno
push
pop
std
push
jne
sub
add
adc
out
mov
filds
andb
mov
cmpsl
xchg
jl
mov
add
mov
add
push
nop
xor
fsub
push
ljmp
jl
mov
fsts
xchg
aam
sbb
mov
add
mov
cli
dec
mov
fldl
aam
test
fs
dec
add
sub
rclb
pop
insb
add
lcall
xor
xchg
lahf
dec
push
add
adcl
or
aaa
pop
lock
cltd
cmp
cltd
jns
inc
aad
sarl
mov
out
gs
lock
cmp
pop
jne
into
in
cmp
sahf
stc
out
mov
punpcklbw
cmpsb
jne
xor
adc
outsl
daa
in
pop
mov
mov
dec
cwtl
mov
fsubrl
lcall
test
xchg
es
outsb
mov
insl
mov
xor
rorl
jns
idivl
out
jo
push
aas
or
call
ljmp
xchg
and
ret
push
icebp
mov
jb
pushf
push
ljmp
jae
push
test
jns
mov
mov
pop
mov
daa
cld
xchg
mov
arpl
mov
repnz
sub
push
jmp
push
mov
or
or
jg
or
push
add
outsl
xor
out
inc
add
push
jl
aad
mov
xchg
sub
test
fsubp
xchg
mov
pop
jle
insl
ljmp
inc
cld
arpl
arpl
jns
test
addr16
test
cmp
popa
xor
aad
xor
ljmp
loope
pop
pop
mov
lods
mul
add
lcall
jge
insl
ss
stos
sub
xor
outsl
incl
jmp
jbe
das
sbbl
or
js
xchg
sub
push
cmpsb
cmp
push
mov
push
movsb
jmp
test
inc
dec
cmpsl
sar
dec
mov
pop
ret
fsub
cld
pop
in
dec
or
xor
data16
adc
push
xchg
mov
xor
jnp
lahf
mov
push
in
dec
leave
stos
psrlw
loope
dec
repz
arpl
test
stos
stos
pop
jmp
cltd
pop
cltd
daa
dec
lret
jg
mov
jle
leave
icebp
mov
and
xor
fimuls
outsl
xchg
ret
jnp
pop
aaa
pop
inc
dec
push
xchg
jns
mov
jae
es
stos
xor
mov
bound
stos
jge
pop
mov
and
mov
push
sbb
fisubrs
xor
sub
jb
push
pop
test
mulb
ja
lods
adc
in
add
adc
fdivl
xor
xchg
je
popf
mov
andb
cmp
adc
sbb
cmp
sahf
sub
shlb
add
sub
push
xchg
lahf
pop
jne
fistpll
xchg
mov
xchg
outsb
cmp
repnz
das
repz
sbb
fs
push
adc
mov
mov
and
xchg
lahf
lret
adc
adc
test
jb
jle
xchg
rolb
dec
mov
sub
pcmpgtb
into
dec
and
pop
xchg
flds
jmp
push
sbb
sub
sub
fbld
xchg
fcoms
rolb
add
mov
xor
rol
adc
es
fs
xor
mov
andb
stos
daa
inc
push
imul
popa
xchg
mov
inc
stc
mov
or
sbb
out
notl
enter
sbb
rcll
xorb
mov
fucomi
ljmp
dec
jbe
push
insb
add
aam
cmp
inc
pop
adcb
daa
or
int
xchg
out
push
cld
add
dec
scas
cld
jne
mov
jnp
loope
outsb
lret
xchg
cmp
dec
jp
jle
mov
inc
outsl
inc
into
sbb
jns
sub
int
rcrb
xor
imul
mov
sahf
shl
in
dec
ret
jne
in
stos
and
mov
add
mov
adc
jmp
sub
jb
pop
or
clc
mov
cmp
cmpb
pop
dec
arpl
pop
cltd
adc
std
imul
and
frstor
xor
and
sbb
cmp
sbb
inc
clc
xor
fimuls
xor
dec
cmc
fidivs
out
gs
sub
xchg
jo
stos
mov
pusha
repz
jbe
fs
adc
sub
cmp
mov
adc
mov
mov
cmp
scas
jo
icebp
xchg
cwtl
addr16
adc
jp
jl
fisubrs
mov
imul
xor
xchg
pop
xor
jae
and
loope
mov
jmp
stos
add
sbb
push
jp
lret
rorb
jl
and
mov
jmp
mov
mov
push
cld
push
pop
rorl
inc
shrb
jg
out
fbstp
sub
shll
lahf
jne
push
adc
lds
mov
pop
xchg
mov
jae
sub
push
jo
lea
add
or
xchg
lods
repz
adc
mov
es
push
fildl
xor
cld
dec
push
lock
and
sub
add
mov
hlt
cs
gs
inc
xlat
out
sub
test
sub
cmpsb
mov
mov
aas
xor
sbb
dec
sub
arpl
mov
inc
cmp
aam
loopne
xor
inc
data16
push
mov
aad
pop
jae
pusha
outsb
lret
in
cmp
call
jo
mov
ja
xor
xchg
and
mov
mov
rorb
dec
sar
cmp
das
mov
stc
push
inc
pushf
or
mov
out
pop
xchg
clc
or
inc
adc
xchg
clc
sub
bound
add
mov
push
loopne
pop
mov
mov
jnp
push
mov
stos
jl
add
jp
stc
pop
lock
cwtl
movl
add
dec
fisubs
fnsetpm(287
cmp
test
pop
sbb
pushf
xor
push
xor
das
std
mov
cli
sbb
ss
xchg
dec
mov
mov
jl
push
cmpsb
inc
add
lods
add
pop
lds
aas
pop
mov
mov
incb
cltd
and
lahf
dec
movsb
sbb
mov
paddsw
enter
scas
jne
sub
or
call
adc
cmp
xchg
popa
in
movsl
arpl
adc
jo
pop
push
dec
sub
push
mov
das
sarl
inc
mov
scas
addl
insb
pop
mov
pop
arpl
sarb
mov
rolb
fwait
cmp
outsb
call
fcmovnu
cmp
or
fistl
notb
in
pushf
shlb
add
xlat
mov
and
insb
or
xchg
out
jae
out
and
cwtl
xor
or
cmc
lret
aaa
pop
sub
sub
ret
push
inc
popf
mov
notl
in
frstor
mov
loope
xchg
rolb
push
dec
push
insl
ljmp
jge
aad
fptan
cs
dec
add
dec
out
push
jp
or
insl
aaa
fmuls
iret
mov
ja
fmuls
mov
mov
test
test
fdivrp
fdivs
hlt
dec
pop
ss
cmp
orb
jmp
adc
mov
xchg
xor
std
push
fs
ss
into
or
out
sub
enter
repz
sbb
cs
pop
loopne
mov
mov
int
repz
fidivl
es
jmp
sahf
lods
cmp
ds
lds
push
inc
repnz
loope
dec
test
sub
or
lea
mov
mov
dec
dec
push
xor
inc
in
mov
int
mov
push
jg
ret
mov
sub
jnp
push
dec
out
push
add
negl
xchg
push
mov
test
inc
jmp
ror
lea
lret
jnp
scas
cltd
xchg
mov
ljmp
call
lock
xchg
pop
ss
aas
lret
add
inc
cld
jmp
aam
test
and
psubd
jne
sub
dec
cwtl
cwtl
ss
adc
cmp
aas
cmp
mov
jo
push
popf
mov
jae
out
icebp
dec
xchg
imull
adc
inc
hlt
leave
jno
xchg
sti
xor
mov
jo
mov
popf
jne
sub
clc
push
cmpsl
imul
add
cmp
or
mov
testb
push
mov
fnstcw
test
sub
mov
mov
mov
adc
and
insl
dec
mov
jle
stos
xor
mov
imul
jno
stc
clc
or
outsl
add
adc
mov
and
dec
cmp
or
adc
sbb
mov
xor
add
jns
hlt
loope
scas
movsb
add
push
mov
cwtl
sub
sbb
dec
pop
or
inc
xchg
fdivrs
cmpsl
das
and
pusha
pop
xor
cmp
sbb
aad
dec
out
repz
stc
push
in
dec
test
in
std
jle
ss
hlt
in
rorb
sub
sbb
dec
mov
push
dec
inc
sbb
xchg
cmp
jnp
jg
inc
mov
push
push
jbe
cmp
dec
in
iret
push
mov
pop
in
pop
mov
pop
push
nop
faddl
xchg
sub
jmp
movsb
loopne
or
enter
cwtl
sahf
movsl
daa
mov
pop
lods
mov
data16
out
push
or
jmp
cltd
lds
jae
out
pop
ret
xor
outsb
ja
jno
jns
std
inc
push
lret
repz
test
and
bound
sub
rol
inc
sub
in
add
int
xor
leave
stos
lret
aaa
fnstsw
lea
mov
in
lods
xchg
add
mov
xchg
mov
add
xor
add
out
mov
int3
es
je
out
pop
dec
inc
aam
test
ret
push
sti
pusha
pushl
in
popa
imul
popf
and
dec
push
icebp
xchg
popa
lea
or
and
mov
mov
inc
cltd
sub
sbb
sbb
jge
jne
insb
movb
mov
or
xor
mov
cli
ret
mov
pusha
push
jp
out
clc
mov
std
repz
jecxz
adc
je
test
xchg
mov
mov
xchg
xchg
and
aas
lcall
cli
jg
rcll
pop
stos
jmp
stos
cmpsl
and
xchg
add
lds
pop
xchg
and
ljmp
arpl
test
add
adc
dec
bound
sbb
xchg
test
pop
xor
pop
push
and
sbb
add
push
dec
out
fsubrl
dec
gs
js
xor
xor
pop
outsb
inc
xor
cmpsb
les
cmc
jmp
mov
dec
shrb
jbe
mov
xchg
jne
subl
push
jle
mov
xchg
mov
outsb
xchg
inc
pop
xor
sahf
fwait
pop
ljmp
xor
cmp
fidivs
and
or
loopne
aaa
fistl
fcomps
xchg
mov
pop
mov
fbstp
add
cmp
lret
or
mov
sub
aaa
lods
aas
ficoml
xor
add
stos
add
mov
popf
daa
pop
punpckldq
cmp
push
or
and
sub
cmpsb
jle
push
scas
cmp
gs
sbbl
mov
out
aas
insb
in
jae
mov
or
mov
jmp
xor
push
data16
push
sbb
sub
orl
xchg
xchg
in
sbb
lods
adc
mov
lahf
inc
mov
scas
loope
mov
mov
mov
and
enter
testb
jle
ljmp
xchg
sub
mov
add
add
add
js
xor
cld
test
repnz
ret
xchg
rcr
cld
addl
rcrb
mov
adc
xchg
fstps
int3
cmp
imul
popf
jg
stc
lods
inc
xor
ja
pop
or
push
jge
test
push
call
jbe
out
cmp
jo
test
shr
jmp
sbb
jb
xchg
ss
jecxz
xor
loopne
cmp
cltd
fs
je
mov
push
xor
aaa
mov
test
andl
pop
into
ficomps
jmp
pop
push
int3
mov
jne
add
hlt
cmp
scas
add
stos
jnp
daa
jecxz
imul
adc
push
cltd
fwait
mov
mov
mov
push
mov
push
mov
pop
xchg
insl
jbe
xor
cmp
bnd
es
jbe
fbld
push
vaddsd
and
dec
push
xor
loopne
mov
push
mov
inc
cmpsb
pop
mov
dec
lret
mov
je
and
adc
pop
mov
sahf
push
test
repnz
mov
mov
and
je
aaa
movsb
adc
fmul
xchg
pop
add
sbb
test
les
ljmp
cli
stc
lret
sub
jne
mov
xchg
cmc
lds
add
aam
mov
dec
mov
jmp
mov
div
inc
arpl
fcmovne
test
jno
and
xchg
mov
add
inc
and
out
jne
xchg
xor
stos
or
in
arpl
and
pop
sub
ja
jge
mov
push
jbe
inc
inc
add
mov
jne
and
push
mov
adc
adc
dec
or
push
shll
cltd
push
adc
jle
xor
mov
stos
or
cltd
testl
adc
add
mov
xlat
aas
pop
cld
out
dec
in
and
fisubl
scas
jle
inc
dec
xlat
mov
mov
rorb
xchg
scas
aad
and
inc
or
inc
sbb
and
stos
cmp
outsb
and
jp
arpl
mov
cmp
subb
je
jg
orb
fistpl
std
imul
push
xor
mov
and
xchg
pop
mov
lcall
mov
sbb
in
mov
out
adc
js
add
xor
mov
inc
mov
mov
ret
out
pop
jle
xchg
les
and
int3
movsb
dec
xchg
imul
movsb
mov
pop
cmp
mov
test
scas
mov
sbb
mov
leave
cmp
cmp
push
ret
aas
xchg
sub
out
hlt
push
cwtl
xorl
in
das
xlat
xchg
es
fdivs
sbbl
jnp
repz
and
dec
int3
adc
lods
pop
and
jb
rcl
jae
mov
push
imul
aas
push
insl
subb
push
das
popa
fcmovne
int3
dec
push
push
ficompl
sub
push
mov
pop
mov
sub
rcrl
cmp
pop
inc
push
sti
adc
out
cmp
jmp
mov
jmp
push
push
jl
mov
mov
pushf
in
lret
sbb
popf
icebp
icebp
pop
ja
mov
jg
mov
xchg
push
mov
test
pusha
lock
adc
cmp
shll
xor
push
ja
xchg
and
xchg
xchg
pop
in
add
bnd
inc
or
std
cmp
mov
jl
and
push
and
pop
mov
adc
inc
xor
dec
nop
in
stos
lcall
lahf
xor
sub
or
and
add
loop
pop
lret
je
addr16
scas
stos
jmp
lods
push
shlb
mov
fsts
push
inc
xor
pop
add
dec
xchg
jae
subb
sbb
inc
andb
test
aas
stos
sbb
add
sbb
aad
leave
std
sahf
dec
repnz
adc
int
cli
fsubl
push
shlb
mov
jp
sbb
fimuls
ljmp
and
mov
out
add
call
jge
insl
xchg
jmp
pushf
jmp
or
mov
inc
fsubrs
xchg
xor
sbb
jns
popf
xchg
inc
xchg
xor
out
ja
stos
mov
in
mov
mov
out
mov
and
dec
adc
mov
les
fwait
dec
add
mov
imul
shrb
cmc
cmp
jge
sahf
xchg
mov
rolb
ficompl
pop
adcl
adc
mov
push
add
mov
dec
push
xor
inc
pop
and
subb
ficoml
pusha
sbb
jmp
movsb
push
push
stos
je
push
imul
sub
and
insb
lahf
das
xchg
shl
fsts
mov
aam
mov
popa
and
jbe
push
jb
dec
lahf
aad
aas
push
les
adc
adc
or
in
test
call
jmp
sub
cmc
xorl
movsl
iret
jge
out
sub
cmp
lahf
insl
aas
loop
adc
ficoml
test
pop
outsl
mov
pop
push
xor
imul
jno
stos
push
sbb
sub
push
jl
inc
aam
or
xor
pop
sub
mov
pop
in
jmp
push
push
mov
push
pop
xorl
xor
xchg
fbstp
xchg
ret
cmp
dec
xchg
jno
push
mov
jne
testb
test
jnp
pop
xchg
in
lock
popa
adc
mov
das
or
xor
pop
inc
adc
adc
int3
or
popf
sti
leave
jecxz
add
jb
std
mov
into
outsb
and
and
dec
ljmp
mov
neg
inc
rcrb
repnz
jo
imul
in
pop
subb
outsl
pop
shlb
jo
ss
outsl
jge
push
imul
push
leave
shll
test
int3
jp
les
in
inc
das
repnz
ds
ss
stc
jae
or
push
sbb
aad
dec
rclb
sub
xchg
dec
std
int3
push
xchg
inc
push
mov
clc
push
sbb
xchg
pop
xor
in
cld
leave
sti
dec
inc
cwtl
cmc
xchg
inc
sub
fdivrl
jne
mov
inc
xor
cmp
les
push
std
outsb
loopne
jbe
xor
push
negb
shlb
xchg
adc
cmp
xor
fdiv
mov
out
push
push
push
pusha
add
mov
push
sarl
mov
ret
push
out
daa
xchg
adc
push
mov
icebp
jns
ret
lahf
lret
fwait
aaa
dec
inc
movsb
cmp
jle
loopne
fildll
mov
sub
mov
bound
imul
push
mov
nop
pop
adc
hlt
pop
mov
hlt
loopne
inc
jno
xor
out
xlat
js
pop
xor
push
shr
repz
sub
popa
push
sbb
out
cmp
std
sbb
jnp
imul
jp
jmp
inc
shrb
dec
xchg
push
loope
stos
cmpsb
icebp
xor
xor
xlat
mov
cmp
ficoms
sbb
notb
dec
bound
das
dec
jb
dec
out
xorb
pop
cltd
push
dec
lea
jmp
xchg
popf
or
addr16
xchg
sub
outsb
aam
movsb
mov
add
dec
movl
sub
fucomp
mov
mov
out
js
in
sbb
outsb
mov
ja
fildll
xchg
lret
out
lret
repnz
jb
pop
push
xchg
mov
and
imul
and
sub
sahf
dec
push
sub
loope
add
in
lcall
int
fwait
in
and
fsubrl
js
jo
xchg
rcrb
mov
dec
mov
adc
adc
in
xchg
inc
mov
shrl
add
cltd
cwtl
into
flds
xor
jnp
or
mov
ret
sahf
jp
fadd
cli
push
ret
imul
add
xor
add
setg
test
rclw
popf
repz
icebp
dec
jp
ret
cwtd
enter
daa
inc
test
cwtl
test
pop
iret
pop
addr16
repz
cmp
mov
fidivrl
popf
fnsave
inc
dec
xchg
sbb
test
lea
test
lock
push
adc
xchg
inc
out
pop
addb
push
fistl
or
in
pop
sbb
lods
lret
pop
inc
push
std
mov
std
dec
aas
pop
inc
lock
and
adc
cmp
imul
insl
clc
push
icebp
mov
adc
clc
repz
leave
pop
stos
fdivs
add
pop
popa
xchg
movsb
push
in
pop
xchg
int3
lea
sbb
push
popf
adc
out
sbb
adc
mov
push
mov
insb
insl
push
pop
stos
inc
pop
cmp
sahf
push
push
call
pop
or
jge
insl
pop
pop
inc
sbb
adc
imul
loope
jge
or
xor
jg
loop
and
enter
popf
aaa
sti
call
jne
jns
ljmp
mov
push
mov
jge
pop
ret
pop
test
mov
movsl
scas
ss
clc
push
jbe
pop
mov
mov
leave
pop
int3
xchg
aam
shl
dec
testl
dec
cmc
push
into
mov
sbb
sub
cmpsl
cmp
das
nop
jge
jle
repz
stos
cmp
push
orb
int3
fwait
jp
jb
mov
stos
insb
arpl
lock
loope
dec
andb
idivl
fmull
bound
add
clc
test
xchg
pop
sbbl
outsb
out
or
mov
push
inc
mov
push
lcall
push
outsl
insb
insb
and
outsl
dec
jne
sub
ja
out
push
cmp
gs
xchg
enter
outsl
jno
push
ret
daa
adc
cmp
or
jne
mov
xor
xlat
xchg
repz
jge
xlat
inc
arpl
sbb
push
ret
pop
data16
adc
aas
fwait
pop
xchg
movsl
fwait
push
daa
jg
or
sub
dec
xor
aam
ja
in
test
fstps
imul
in
testb
jo
sti
mov
call
in
std
mov
call
test
inc
lods
loopne
je
ret
stos
lea
inc
mov
mov
les
xor
xorb
into
je
jle
add
or
stos
push
sub
daa
stos
outsb
mov
jecxz
in
or
lods
mov
mov
cmpsb
jecxz
and
leave
dec
pop
mov
dec
or
push
adc
jbe
loopne
push
jno
cld
movsl
jl
aad
sub
gs
daa
jecxz
ljmp
je
loopne
pop
lcall
add
shrb
cli
xor
les
std
adc
adc
inc
in
rcrb
inc
iret
stos
add
pop
fdivrp
clc
cmc
lods
mov
push
add
in
dec
stc
ljmp
out
push
jno
jmp
and
sub
xchg
sub
leave
popa
ffree
add
pop
pop
sub
pop
movsl
sbb
add
movsb
sarl
pop
outsl
jns
frstor
push
push
mov
push
xchg
lea
or
lods
jg
lods
test
icebp
call
inc
inc
outsb
xchg
xlat
int3
mov
pusha
jb
inc
adcb
adc
cmpsl
xor
mov
mov
add
dec
in
out
pop
mov
call
lods
outsl
and
sub
lock
arpl
mov
jle
testl
adc
shl
pop
int
cmp
scas
push
cmpsb
mov
lods
fidivs
int
sti
xchg
mov
mov
jge
add
in
sbb
jae
add
divb
push
inc
xchg
mov
xor
mov
dec
iret
fwait
cltd
pusha
shr
fldl
repnz
out
inc
add
insl
mov
add
cli
mov
jnp
cmp
ljmp
cmp
push
adc
dec
in
cmp
stos
jae
and
inc
push
ret
arpl
popa
mov
popf
mov
mov
dec
mov
jmp
and
pop
dec
push
mov
push
push
push
jne
repnz
bound
and
repnz
insl
pop
popf
js
stos
lods
inc
iret
and
nop
dec
fwait
inc
cmp
leave
jecxz
adc
mov
addr16
cmp
pop
or
pop
scas
lods
mov
cmp
jle
xor
sub
adc
das
popa
aam
or
push
bound
pop
and
icebp
in
lods
ret
or
fnsave
mov
shll
mov
sti
push
mov
pop
adc
ljmp
sbb
adc
cmpsb
jp
mov
and
scas
pop
cmp
andl
fisubrl
in
dec
jp
jmp
jmp
jno
and
cltd
mov
push
outsb
mov
cmp
lea
daa
fisubrs
daa
jmp
jbe
add
loop
push
test
pop
inc
mov
shlb
mov
in
xchg
adc
lret
out
outsb
leave
add
ljmp
xlat
dec
mov
inc
dec
add
xor
cmp
mov
xorl
addr16
or
mov
shll
jo
jmp
imull
fsubrl
cmp
xor
jmp
add
icebp
repnz
jl
xor
aaa
lret
cmpsb
mov
insb
imul
aaa
insl
adc
cmpsl
montmul
cmpsb
lds
movsb
push
jne
imul
aaa
fcoml
inc
add
or
and
imul
mov
adc
jge
cmc
stos
stc
int
inc
xchg
xchg
je
xor
dec
popa
add
adc
lret
adc
scas
lods
jne
adc
sub
stos
sahf
inc
push
xchg
pop
jno
inc
icebp
fs
jp
xchg
push
pop
pop
and
movsl
fdivr
lcall
das
in
stos
fcmovnu
mov
xchg
pop
into
sbb
sbb
outsb
sub
adcl
ss
jno
jo
inc
int3
imul
mov
bound
and
jmp
mov
jg
mov
pushf
and
in
int
mov
clc
mov
jne
pop
frndint
lahf
in
pop
repz
or
cmp
inc
push
inc
jle
enter
andl
jb
xchg
lahf
dec
lcall
xchg
repnz
dec
addr16
ret
cmp
cmp
gs
dec
iret
and
mov
cmpsb
or
cld
cmpsb
pop
and
and
push
add
cmp
movsl
add
pop
adc
out
add
mov
jecxz
sub
lds
pop
cmp
adc
sub
cmpb
jne
iret
iret
int
mov
inc
pop
push
mov
adc
sbb
dec
xlat
jg
call
int3
je
mov
sbb
int
pop
inc
out
inc
jl
popa
jmp
mov
and
or
push
cmpsb
pop
rcr
mov
push
fwait
dec
aad
xchg
loop
in
adc
mov
push
lock
ret
fs
scas
cmpsb
mov
cmp
psubsb
popf
into
es
and
sub
jecxz
adc
push
sahf
jno
rorl
mov
adc
sbb
mov
push
adc
data16
rcl
dec
lods
cmp
outsl
or
mov
dec
fisubrl
in
mov
mov
add
inc
push
inc
xor
dec
dec
sbb
negb
inc
and
jae
imul
scas
mov
popa
mov
fidivs
fsubrl
jbe
push
dec
dec
sti
cs
in
rcll
aad
push
xchg
xor
cmp
les
and
in
xchg
pop
cmpsl
rcrb
mov
xor
ds
pop
movsb
add
adc
jl
xor
adc
push
cmp
jle
inc
dec
outsl
or
popa
stos
out
and
fldl
xor
pop
dec
xchg
bound
jge
stc
push
cmp
dec
cmp
ficompl
and
hlt
add
aaa
in
pusha
inc
inc
jae
pop
mov
cmp
movsl
sbb
pop
lods
lea
daa
mov
mov
shl
sbb
xor
push
dec
scas
jle
into
pop
dec
std
movsb
sub
ja
push
cli
add
loope
in
ret
lock
cmpsl
std
xchg
cmp
pop
sti
int
jmp
enter
insl
fisubrs
mov
jmp
ja
sbb
data16
mov
cld
cmp
pop
int
cwtl
jmp
outsl
xlat
mov
aam
sub
pushf
sub
push
sub
fsubr
xor
cmpsl
fdivr
mov
inc
push
or
xor
js
and
dec
ds
cwtl
jo
push
aam
xchg
xor
or
dec
mov
lea
sbb
cmp
aas
xor
cmp
dec
negb
in
nop
jmp
fwait
add
aam
dec
fwait
imul
xchg
xchg
hlt
push
cmp
push
sub
repnz
aad
sub
dec
cs
dec
or
pop
or
bound
push
mov
push
subl
jnp
xchg
cmc
or
jno
mul
stos
mov
push
outsl
mov
pcmpeqb
fisubrl
rclb
cmp
mov
rorb
mov
xchg
and
ja
arpl
xchg
outsb
sbb
stc
das
arpl
pop
sbb
je
mov
loope
sbb
push
outsl
rclb
fnstsw
xchg
test
pop
push
dec
add
aaa
imul
mov
mov
imul
push
loop
je
cmp
das
inc
cmpsl
pop
push
iret
xchg
cmpsb
mov
and
xchg
test
js
sbb
pop
jg
lahf
cmp
push
mov
mov
ja
and
lret
push
scas
enter
sub
and
frstor
nop
jle
adc
mov
jp
cmp
es
pop
cmp
add
mov
cmpsb
fld
mov
mov
mov
clc
sub
gs
push
mov
mov
xor
mov
push
pop
jnp
jns
ss
rol
loop
hlt
dec
scas
xchg
cmp
sbb
out
ffree
pop
icebp
sbb
fisttps
inc
je
mov
xchg
xor
xchg
repnz
sbb
out
jecxz
push
dec
push
test
aam
imul
movsl
leave
sarb
or
incb
sub
push
cmp
movsb
lds
pop
xor
adc
or
xor
les
repz
repnz
in
repz
inc
push
adc
sub
push
lret
test
test
lahf
add
pop
loopne
jae
or
pop
insb
lcall
clc
inc
add
mov
lahf
scas
ffreep
push
rorb
insl
push
shll
cmpsl
pop
je
addr16
mov
inc
or
jmp
jle
in
and
or
outsl
sub
insl
movsl
jbe
icebp
in
test
sbb
roll
mov
jmp
xor
mov
add
xlat
and
sbb
outsl
mov
test
pop
add
addr16
sbb
daa
aam
fsts
gs
out
push
jle
out
insl
pop
push
cmp
and
mov
xor
pusha
xchg
out
rolb
rcrb
push
sub
insb
xor
mov
loopne
stos
mov
adcb
jecxz
mov
sbb
mov
mov
xchg
int
push
out
pop
mov
sub
iret
and
lds
sub
out
lret
outsb
int
enter
cmp
in
and
jecxz
xor
mov
call
mov
sbb
lds
cmp
adc
enter
repz
push
out
repz
pushf
sub
push
test
fwait
jmp
add
loop
nop
test
push
adc
push
lea
add
cmc
and
in
xchg
int3
pop
dec
pop
xor
mov
push
ja
mov
xor
loopne
ret
xor
push
pop
pop
ja
adc
loope
lret
xchg
adc
pop
xor
jge
rorl
add
jecxz
jnp
adc
aad
cmpsl
int
adc
icebp
pop
cmp
sub
mov
das
call
mov
insl
jbe
push
mov
adc
xadd
shll
rclb
add
dec
push
lret
std
mov
and
inc
in
fdivs
jge
add
test
xor
ss
popf
push
and
and
pop
jge
ficoms
sub
jp
ss
xlat
inc
repnz
shrl
push
push
xchg
int
lret
bound
push
xchg
aad
inc
ret
pand
stos
xchg
sub
push
scas
mov
cltd
icebp
mov
insl
jbe
mov
mov
clc
mov
pop
aam
or
or
pop
mov
ja
negl
add
mov
mov
mov
lcall
jge
rcll
in
pop
xor
ss
sub
sub
inc
add
mov
aam
sbb
ss
ffree
sarl
test
xor
cld
lahf
xchg
add
je
mov
lret
jno
add
iret
pop
jmp
stos
sahf
ljmp
mov
cmpsb
sahf
add
push
cmp
mov
dec
adc
dec
cmpsl
dec
xchg
dec
add
shll
cwtl
inc
mov
sub
loop
lods
dec
movsl
mov
fisttpl
and
and
test
adc
sti
push
lahf
mov
int3
add
outsl
fidivl
mov
cmp
lods
hlt
xchg
sbb
dec
ret
jnp
int3
dec
cmp
jp
jno
scas
jp
jbe
push
xlat
sub
pusha
nop
push
outsl
pop
jmp
leave
dec
mov
insl
es
inc
cmpb
or
mov
call
rcr
shll
jmp
jo
cmc
mov
rol
rcrl
pop
rcrb
arpl
push
icebp
lret
inc
adc
imull
mov
push
push
addr16
cmp
jb
in
int
out
sbb
mov
inc
sbb
or
popa
ret
push
je
aas
and
pop
cmp
fcom
pop
sbb
fsts
lods
fimuls
mov
sbb
xchg
dec
mov
shll
jbe
sbbb
in
mov
pop
out
aaa
shll
pushf
jbe
fidivrs
adc
notb
pop
sbb
adc
inc
negb
xor
je
out
bound
in
push
mov
lea
cmpsb
int
bound
dec
repnz
aad
jmp
sbb
mov
cmp
popf
in
movsl
shlb
lret
add
or
cmc
stc
mov
sbb
mov
mov
inc
popa
jg
xchg
mov
gs
fisttps
xchg
pop
jge
paddsw
mov
shl
adc
pop
mov
enter
jnp
dec
xor
mov
cmp
insb
jo
inc
movsb
xchg
push
pop
lods
insl
pop
ss
sahf
inc
dec
jl
dec
movsb
add
clc
cmpsl
jne
lret
insb
sbb
stos
int
cmp
xor
and
pop
adc
clc
ret
cmp
inc
daa
and
scas
mov
pop
cmp
mov
repnz
xor
aas
push
rcll
test
sub
adc
adc
mov
dec
fimuls
push
inc
and
sbb
mov
pop
daa
hlt
or
mov
imul
sub
sub
inc
jae
lock
stc
cmp
dec
mov
mov
inc
test
outsb
jl
xchg
sbb
xchg
mov
pop
cwtl
mov
das
push
addl
lds
sbb
lahf
fists
mov
jo
imul
xchg
cmp
xchg
pop
loop
imul
loopne
dec
lods
inc
fmul
and
fwait
pop
dec
xor
lea
push
mov
stc
and
or
fisubl
cmp
push
add
sub
lods
pop
jns
mov
xchg
pop
lock
jno
hlt
repz
mov
fdivrl
ja
clc
mov
dec
fistl
ja
hlt
xchg
fnsave
movsb
lahf
xor
xor
cmpsl
and
cmp
sub
notl
out
out
inc
cmp
rcrb
dec
sub
and
push
in
lret
add
sbb
mov
icebp
jo
test
insb
stos
or
jns
and
pushf
sbb
push
negl
and
imull
or
inc
inc
nop
inc
cld
stc
shl
call
cli
mov
jne
jne
lds
test
pop
out
dec
jge
jg
jbe
xchg
shrl
dec
mov
add
in
cld
enter
int
lret
shrb
push
mov
lahf
rcrb
shll
sub
mov
lock
push
scas
fdiv
jle
in
je
mov
aaa
mov
inc
push
jle
fimull
push
lock
imul
rorl
inc
aam
mov
dec
inc
out
fdivr
aas
mov
ja
das
push
dec
lcall
add
sub
out
rcrb
mov
push
and
sbb
loop
add
aad
pop
sub
sti
scas
pop
dec
leave
xchg
test
arpl
lret
adc
inc
mov
in
ja
sbb
cmp
sbb
rclb
in
and
clc
bound
jne
fisubl
insb
mov
push
xchg
mov
cmc
movsl
push
rcll
popf
out
inc
jge
aam
hlt
cwtl
sbb
xor
fcoml
mov
inc
pop
and
push
and
popf
ret
fimull
out
sahf
in
je
rcrl
cmp
xor
mov
arpl
pop
lcall
int3
stos
mov
mov
add
inc
jecxz
inc
js
and
cli
les
xor
in
xchg
jmp
or
dec
outsb
sbb
mov
popa
dec
or
ficoml
notl
pop
xchg
push
pop
fiaddl
mov
or
jae
call
and
pop
push
adc
sub
shrb
xchg
dec
enter
lea
jp
popa
jns
inc
push
outsb
push
shrl
int
xchg
ja
arpl
sbb
xchg
adc
test
mov
lea
inc
xor
jg
lods
sub
pop
shrl
xchg
jb
js
inc
pushf
lcall
sub
add
pop
xlat
push
andl
pop
insb
cs
inc
dec
pop
xchg
cmp
loopne
cmp
fchs
pop
jg
out
aas
jb
in
ret
pop
add
add
mov
scas
leave
ljmp
mov
xor
dec
dec
mov
aad
and
movsl
pop
andl
adc
dec
shlb
add
dec
jge
movsl
ret
das
inc
jmp
dec
insl
jae
test
fstps
mov
add
sub
mov
rcrl
fadds
add
ret
lea
lret
aad
sarl
stc
cwtl
push
xchg
andl
xor
repz
imul
add
js
mov
in
clc
mov
push
rol
inc
pop
cmp
cmp
in
jns
into
loope
stc
push
shll
pop
xchg
inc
pop
test
or
jne
enter
push
clc
sub
jae
push
cs
or
lds
push
cli
pop
mov
dec
inc
jge
ss
adc
and
fcoms
mov
and
fbld
cmp
push
fucomp
fdivp
push
lret
lcall
sub
icebp
adc
icebp
push
mov
sbb
movsl
enter
pop
jb
loop
mov
sub
aaa
rorl
sub
jge
fidivrs
ss
push
xor
ja
iret
xchg
push
negl
sarl
mov
sub
pminsw
std
dec
test
bound
stos
push
push
dec
bound
lret
jle
jnp
iret
push
xor
insb
jecxz
push
push
setns
outsb
jnp
insb
sbb
pop
arpl
sub
sbb
popa
fisttps
fldenv
test
loope
adc
movsl
push
push
add
in
clc
scas
push
and
ror
or
dec
pushf
icebp
push
repz
test
subl
sbb
mov
mov
movsb
nop
gs
mov
scas
xchg
mov
xchg
add
mov
cmp
cwtl
and
sti
repnz
and
icebp
push
or
inc
scas
test
aad
ja
call
ja
loope
fdivrs
into
xchg
test
loopne
fnstenv
jbe
lret
inc
mov
pop
cmpl
data16
xchg
out
shll
jge
sbb
int
fcoml
xchg
in
out
xchg
in
bound
inc
or
mov
mov
xchg
in
mov
jns
clc
jmp
addl
jmp
dec
add
fildl
out
xchg
pcmpeqd
lcall
xchg
stos
ret
sub
addr16
out
adc
lods
arpl
lds
pop
lret
pushf
xlat
out
iret
add
mov
or
cwtl
cmp
inc
xchg
xor
test
clc
xchg
mov
or
or
jle
adc
jns
adc
mov
out
insb
and
gs
cwtl
adc
xor
shl
xchg
cwtl
mov
cs
or
negb
mov
lahf
pop
mov
shr
lds
sub
mov
pushf
or
insl
xchg
jl
sbb
cmp
sahf
test
outsb
data16
mulb
jmp
push
push
jne
mov
jge
aas
scas
pushf
sub
les
pop
cmp
and
ds
ljmp
and
pop
aam
insl
leave
xchg
adc
or
and
cwtl
pop
dec
bound
dec
dec
or
push
cmpsb
mov
pusha
mov
in
and
push
cmpsb
or
inc
and
test
imul
xor
xor
cmpsb
test
jmp
or
aas
sarb
rcr
push
out
jge
push
rcr
lret
jae
and
adc
int3
push
add
out
inc
push
rcr
sub
lret
in
push
xor
das
test
jb
stc
es
inc
push
jo
xchg
pop
iret
xchg
les
xor
sub
jmp
push
out
insl
add
sub
mov
xor
and
add
xlat
or
add
pop
mov
repz
mov
fbld
sub
sub
lock
pop
call
sub
in
cmpsl
sub
push
bound
and
lret
pslld
mov
shr
filds
aad
js
lods
inc
lret
jnp
or
stos
jle
lock
fwait
outsb
pop
add
push
lods
add
mulb
xchg
sub
lds
int
mov
enter
xchg
outsb
stc
mov
in
inc
mov
int
imul
lcall
and
and
fbld
xchg
rcl
addr16
call
scas
mov
imul
add
mov
ljmp
xchg
enter
push
sub
pusha
xchg
mov
mov
jl
sbb
mov
cmpsb
sahf
dec
pop
leave
and
xchg
inc
cltd
xchg
lods
push
push
sub
gs
movsl
sub
mov
push
pushf
out
pop
adc
jb
lret
mov
xchg
ljmp
push
lods
not
out
inc
dec
adc
in
testb
or
dec
inc
sbb
hlt
mov
test
roll
sbb
fbld
icebp
cmp
pop
outsb
imul
lds
jno
mov
ljmp
movsl
xchg
pop
sub
mov
popf
cli
je
mov
inc
jmp
xchg
cmovo
sahf
xor
xchg
mov
pop
ret
repnz
sti
or
mov
rep
push
stos
popa
xchg
lods
inc
dec
sub
cli
xchg
sub
push
lods
es
jg
sahf
js
push
mov
mov
adc
mov
sub
lods
negl
movsl
dec
xor
orl
hlt
lds
inc
mov
aas
sbb
add
repnz
lea
test
addl
dec
pop
lods
xor
shrb
push
int3
fdivs
sub
sbb
fdivp
dec
mov
fildll
lret
dec
inc
shrb
mov
dec
sbb
rclb
adc
popf
cmp
test
and
adc
dec
sub
icebp
loopne
or
pusha
xor
stos
and
dec
popa
push
aam
dec
push
inc
sub
mov
in
mov
out
mov
mov
pop
jo
stos
sbb
and
scas
mov
xchg
in
outsb
dec
aaa
in
dec
icebp
stc
insb
add
adc
test
test
shll
xor
push
out
add
mov
jae
xchg
push
sbb
stos
jg,pt
lea
je
push
cwtl
inc
sarl
xchg
popf
mov
cld
and
loopne
seto
and
inc
cs
test
and
and
sbb
or
inc
rcl
mov
fldcw
pusha
outsl
mov
mov
aaa
mov
add
lods
jnp
and
int3
cld
sub
jne
adc
adc
lret
ror
lcall
shl
pop
ljmp
pop
and
loop
mov
pop
leave
test
es
mov
rcll
out
dec
enter
mov
sbb
shl
xlat
xchg
add
lret
sub
fwait
insl
nop
jecxz
push
mov
imul
sub
mov
jmp
add
inc
addr16
adc
xchg
xor
add
push
mov
sahf
mov
out
ja
and
lcall
xchg
scas
push
popf
inc
sbb
data16
add
movsb
cmpl
push
in
cld
sub
jp
cmc
dec
insl
cmpsl
lds
inc
ljmp
sbb
sbb
rcl
aam
mov
cld
iret
clc
cli
out
out
xor
int
repz
push
rol
sbb
push
fistpl
lock
idivl
mov
push
inc
movsb
dec
pop
or
clc
sub
leave
cs
inc
cmpsl
inc
pop
cli
js
test
dec
aad
push
hlt
push
pop
sub
loope
jle
adc
movsb
jp
dec
loope
cwtl
mov
cs
lret
and
mov
mov
jmp
jg
mov
inc
inc
push
xchg
adc
aam
fisubrl
pop
sub
xchg
popa
adc
mov
mov
mov
cmpsl
decb
jbe
pop
mov
inc
mov
mov
xchg
mov
fdivrl
aam
jne
scas
adc
mov
inc
in
cmp
inc
lret
negb
aaa
dec
js
and
out
and
scas
adc
loop
jnp
lock
jge
inc
insl
nop
jmp
aam
inc
or
push
add
add
sub
sahf
mov
cmpsl
out
xchg
fisttpll
inc
jge
sub
inc
dec
push
ja
jno
fdivr
ljmp
popf
and
sub
inc
inc
pop
xor
jo
fwait
sbb
push
mov
push
pop
sub
jg
and
dec
data16
push
push
and
sti
inc
lods
es
lret
xor
dec
sub
pop
cmc
pop
sub
shlb
sub
ret
mov
call
or
arpl
repz
loopne
pop
ljmp
mov
in
cwtl
cmc
leave
pushf
or
pop
and
xchg
jbe
xchg
aad
in
adc
pop
or
and
jl
es
fisubrl
sbb
scas
notl
cs
jl
loope
inc
shlb
sbb
dec
aam
pushf
xor
sahf
add
adc
pop
xchg
in
fists
add
dec
inc
adc
imul
mov
dec
sbb
inc
cltd
pop
ss
mov
mov
daa
stos
mov
adc
gs
les
inc
xchg
mov
jmp
mov
dec
std
push
mov
daa
in
ds
outsb
dec
not
jno
leave
dec
sub
outsl
sub
add
inc
icebp
rcll
nop
dec
jle
add
in
out
pop
xor
cmp
aam
mov
lcall
mov
lcall
fsubs
fs
leave
sub
adc
lcall
xchg
ja
dec
out
jge
xlat
arpl
ret
sti
sbb
shrl
mov
add
pop
push
adc
add
stos
loop
cmc
imul
lret
push
push
arpl
sub
iret
das
sub
rcrb
insl
lret
js
sub
sbb
pop
popf
or
test
pop
nop
cmp
mov
jmp
rcll
mov
inc
mov
cwtl
add
add
push
xchg
test
pop
push
out
mov
es
fs
mov
stos
clc
sub
or
orb
repz
inc
jecxz
adc
dec
mov
stos
xorl
test
jbe
xor
pop
call
imull
and
dec
cmp
add
push
adc
ret
push
dec
insb
cmp
repnz
cli
in
adc
cmp
cmp
xchg
pop
cmc
ficompl
popa
jl
xchg
dec
and
fwait
sub
inc
mov
add
fidivs
dec
sahf
gs
dec
mov
andl
addl
in
and
xchg
out
movsb
push
lds
flds
data16
pop
push
gs
shl
jmp
cld
in
push
jne
mov
int
jnp
dec
repz
ljmp
push
jmp
mov
pop
shll
lea
sbb
aaa
int
xchg
dec
xlat
cmp
idivb
das
and
sbb
xchg
mov
lcall
xor
sahf
scas
ss
addr16
cmp
sbb
shll
je
push
lods
enter
and
sahf
fcoml
jnp
stos
clc
arpl
stc
cmp
pop
inc
pop
inc
pusha
cs
cmp
xchg
mov
mov
fidivs
jnp
fbstp
cli
les
lcall
cmp
leave
sbb
dec
adc
adc
lods
xor
orl
sbb
pop
mov
dec
pop
adc
pop
adc
mov
sbb
push
xlat
mov
sbb
pop
aas
lcall
jno
imul
jp
clc
add
aam
sbbl
add
and
pop
mov
xchg
pushf
out
cltd
adc
daa
stos
pop
cwtl
sbbl
push
pop
les
lods
insb
sbb
mov
loope
jbe
addr16
inc
or
scas
mov
or
std
rorl
pop
out
sbb
mov
movsb
gs
es
dec
dec
sbb
imull
xorb
jno
dec
test
ret
jo
nop
mov
add
sbb
cmpl
repz
xchg
xor
ja
jns
pop
mov
xor
or
mov
mov
mov
lds
pop
mov
lds
sahf
test
pop
bound
jp
mov
jo
lret
push
bound
or
jns
xlat
mov
mov
cmp
aad
dec
bound
mov
xchg
sub
sbb
push
add
loopne
insb
dec
loopne
insb
mov
fcoms
dec
xor
jmp
gs
clc
nop
mov
loope
xchg
and
mov
int3
test
and
insl
xchg
dec
insl
cmc
jecxz
push
lock
cmpxchg
cmc
push
idivb
and
pusha
lret
cmp
arpl
mov
and
mov
mov
orb
mov
repz
xor
fsubrs
xor
lods
jge
xchg
jecxz
mov
and
mov
pusha
arpl
dec
dec
cmp
lcall
or
mov
in
pop
out
daa
mov
mov
nop
xor
xchg
fimull
out
imul
mov
cmpsb
loope
lcall
jle
inc
movsb
fwait
add
daa
xchg
gs
fs
cmc
stc
not
sbb
adc
cmpsb
push
xor
setbe
dec
loopne
pop
push
jmp
ret
jle
out
jg
pop
pop
test
fsub
pop
mov
fildl
pop
pop
pop
or
jnp
pop
xchg
or
movb
mov
faddp
cld
sti
push
xchg
inc
mov
das
add
testb
nop
out
repz
lods
sti
das
cmp
adc
pop
pop
enter
sbb
pusha
pop
lret
sbb
out
mov
or
xchg
es
push
flds
push
nop
inc
pop
arpl
repz
inc
mov
cmpsb
and
inc
mov
and
subl
adc
jb
sbb
aaa
sar
inc
push
stc
lahf
sub
inc
in
xchg
jg
or
pop
rcrb
add
ljmp
and
insb
ja
sti
cld
or
cmpsl
adc
dec
in
notb
jno
adc
in
stos
mov
idivl
add
pop
testl
sub
or
sub
mov
fldcw
insb
insb
and
jb
mov
ficoml
dec
daa
mov
pop
loop
int3
mov
dec
mov
das
std
aad
stos
or
dec
inc
jge
lock
pop
out
out
xor
dec
ja
daa
fimull
add
push
stos
adc
push
adc
out
stos
xchg
testb
jne
cmp
lahf
rcl
fsubp
adc
push
fs
dec
rcrl
lods
xor
cmpsl
sbb
subl
adc
sub
loopne
loop
lods
adc
ret
jne
push
lea
rcll
adc
rorl
push
andb
ret
dec
xchg
scas
subl
lahf
loopne
insb
push
jo
sbb
stos
pushf
cmp
lock
cmp
repnz
mov
fprem
test
outsb
push
fwait
jp
js
sub
lock
pop
jb
sub
mov
stc
call
out
cld
jecxz
sbb
push
cmpsb
sub
into
jecxz
or
mov
mov
mov
fnstenv
mov
mov
lods
sbb
ds
out
jo
dec
push
mov
shlb
sub
pop
testb
pop
jnp
cmp
pop
mov
pop
push
jno
aam
push
out
push
jge
sti
mov
cmp
mov
lret
das
ret
jne
cli
xchg
imul
cmp
call
je
das
cmp
pop
shlb
cli
test
fnsave
std
call
push
fwait
or
mov
pop
mov
cmc
jl
add
and
cmp
pushf
add
mov
rcrb
xchg
ja
test
add
aam
cld
inc
aam
stc
inc
mov
ss
lcall
cs
pop
movsb
fisubl
into
into
mov
or
pop
aas
push
les
push
pushf
mov
cmp
addr16
lret
mov
sbb
push
mov
dec
xor
insb
rcr
mov
inc
cs
mov
mov
jns
fisubl
jp
fs
sub
lock
test
int
lret
fdivrp
lret
push
notb
mov
xchg
shll
inc
mov
xor
jnp
es
repz
add
push
aad
inc
fdiv
ja
ucomiss
mov
hlt
sub
mov
adc
test
enter
addl
pop
mov
mov
adc
jp
push
ja
adc
cmpsb
pop
mov
les
aaa
xchg
popa
push
movsb
repnz
repnz
call
add
xor
jmp
shll
xchg
iret
call
mov
jnp
std
sbb
lock
bound
fst
dec
dec
es
js
rcrb
in
inc
add
shr
push
pusha
add
xchg
mov
xchg
mov
hlt
cmp
pop
dec
shrb
mov
nop
incb
in
mov
dec
aam
ret
inc
pop
xchg
mov
jecxz
mov
repz
or
sub
ret
inc
bound
sbb
cmp
inc
inc
addr16
xchg
add
lcall
mov
hlt
xchg
and
outsl
mov
jnp
cmp
jl
lods
xchg
addr16
xchg
jns
lcall
dec
cmpsl
jne
gs
jne
push
iret
loope
out
repz
pop
ljmp
push
popw
add
sub
outsb
pushf
cwtl
xor
add
fidivrs
dec
mov
add
negl
push
enter
xor
sahf
aam
sub
cmpsb
xor
imul
jg
mov
fisubrs
inc
push
imul
lods
das
addr16
xor
jo
dec
and
rcr
cmp
sub
fcompl
adc
clc
push
cmc
jb
push
repnz
data16
push
insl
or
pop
sub
into
ljmp
or
jns
cli
outsl
mov
subl
outsb
sbb
movhps
js
sti
xchg
shlb
icebp
inc
or
psadbw
jne
fs
inc
add
sub
dec
lds
or
xchg
adc
push
mov
mov
sbb
sbb
xchg
jmp
aas
jg
and
push
pop
imul
push
dec
cmp
cmc
and
or
es
int
jne
add
inc
ret
xchg
int3
jle
cmpsl
test
imul
jb
hlt
inc
mov
int3
es
inc
cs
add
push
pop
movsl
sub
stc
mov
out
push
iret
mov
out
xor
test
mul
adc
pop
jmp
or
loop
mov
mov
fidivrs
rorl
adc
cmp
xor
aam
sti
adc
inc
scas
sbb
xchg
lods
jno
and
inc
imul
cwtl
shrl
push
fldt
arpl
jmp
mov
fsubl
fwait
mov
cmp
ret
fisubl
outsb
sbb
into
shrb
and
out
jecxz
lds
add
mov
sub
clc
mov
adc
movsl
mov
std
xor
push
jbe
lcall
adc
lods
xor
jg
call
decb
std
xchg
sub
jbe
rcr
fwait
js
imul
mov
cmc
and
rcl
xchg
dec
out
fistps
mov
cmpsb
cmp
pusha
std
clc
gs
stos
rolb
xchg
dec
clc
xchg
sarl
out
push
pop
int
jo
adc
enter
arpl
add
mov
mov
cmp
jg
sbb
dec
mov
mov
fstpt
subl
and
pop
adc
dec
test
daa
push
jae
and
and
inc
cwtl
popf
decl
pop
insl
iret
sub
dec
lahf
in
xchg
arpl
or
js
mov
lea
cmc
and
je
mov
add
lret
leave
xchg
xchg
sub
xchg
fucom
mov
or
sub
js
pop
pushf
jo
ljmp
sub
mov
sbb
dec
out
scas
adcl
dec
stos
and
cmp
das
addb
and
cli
cmp
movsb
push
or
mov
cmp
sub
mov
push
xchg
out
into
push
jmp
sbb
push
imul
add
inc
test
push
fistps
jne
pop
js
push
das
ror
fwait
mov
push
inc
leave
loop
mov
dec
sbb
pop
lea
outsb
sub
imul
sti
add
mov
fcoms
mov
ret
sub
flds
cmp
xor
out
movsl
xchg
outsb
addb
mov
test
sub
adc
in
dec
pushf
xor
jbe
jb
dec
pop
out
xlat
sub
or
rolb
inc
out
cmpsb
leave
jnp
jbe
rclb
pop
jle
cmp
jg
andb
into
sbb
ljmp
add
fdivs
mov
adc
xor
jecxz
jge
test
push
fadds
mov
sbb
divb
popa
or
jno
inc
lcall
push
sub
pop
inc
out
sub
fsubs
inc
out
adc
mov
dec
jge
lea
repnz
pushl
jno,pt
sbb
mov
sbb
mov
mov
fwait
sahf
xchg
mov
in
jnp
mov
jno
mov
loope
int3
cmp
lock
mov
push
sub
mov
test
and
out
xor
xchg
out
push
xchg
stos
mov
in
mov
lret
cmp
jmp
push
into
rorb
lea
mov
lea
push
cmp
xor
ss
popf
out
pop
std
dec
scas
loop
out
ret
ror
cmp
pop
daa
out
in
adc
cld
xor
jecxz
ss
and
inc
adc
loope
push
dec
and
arpl
adc
mov
mov
int3
and
dec
mov
shrb
push
shlb
dec
aaa
jge
and
shlb
inc
pop
and
lods
int3
das
jnp
fdivrl
pop
push
sti
pop
pop
cltd
ror
sub
inc
out
add
aad
xor
mov
xlat
pop
push
sbb
rcl
jae
mov
adc
and
or
subb
movsb
or
or
jg
xchg
hlt
add
dec
pop
jo
fdivr
xor
imul
or
in
mov
xorl
cmpl
cmpsb
mov
std
mov
push
mov
jb
lods
push
mov
gs
xchg
fsubr
inc
sbb
cwtl
es
lock
add
inc
scas
xor
xor
xor
xchg
fs
mov
push
sbb
cmp
negb
pop
aad
push
pop
into
and
bswap
pop
dec
inc
lret
sbb
jno
cmc
sub
ds
sbb
ficompl
and
repz
lods
inc
loope
or
push
adc
pop
clc
fisubrs
addr16
daa
cmp
sti
pop
jne
mov
cltd
out
nop
int3
or
or
jo
sarb
mov
cwtl
lock
out
scas
shll
mov
xchg
sbb
pop
or
adc
popf
popf
push
cmp
inc
test
popf
inc
inc
push
cwtl
sbb
insl
test
jbe
popa
lods
jecxz
ret
cmovne
fiadds
sub
je
mov
push
push
sub
lret
clc
outsl
xor
cmpb
cld
sub
cmp
hlt
fs
stc
mov
into
dec
add
jge
push
inc
xor
push
fiadds
adc
out
nop
insl
adc
inc
cs
mov
fdivrl
out
xor
sub
sbbb
inc
hlt
sub
aam
sub
add
iret
dec
push
mov
mov
xchg
test
std
loopne
movb
test
lret
repnz
inc
in
sbb
jne
pop
and
dec
dec
jg
xchg
fsubs
imul
insb
push
lock
lahf
push
fwait
push
xchg
mov
divl
mov
push
icebp
subb
js
hlt
popa
mov
cmc
imul
lds
push
xchg
test
mov
imul
sub
dec
ss
cmpsb
jo
cmpsl
test
xchg
std
shll
test
je
and
and
adc
push
add
movsb
mov
adcl
jbe
lahf
imul
jg
pop
das
inc
and
imul
les
jp
add
rcrl
mov
imul
faddp
sbb
lods
push
fcoml
bound
shl
iret
subb
xor
mov
and
jg
andl
xlat
loope
sub
sbb
add
xor
mull
xchg
mov
scas
ret
leave
ret
jno
sub
jae
dec
lret
shrb
sub
into
sub
pop
shl
pop
mov
addb
dec
in
es
in
push
imul
adc
dec
nop
push
push
es
xchg
mov
jno
mov
inc
xor
out
mov
add
push
and
in
or
and
and
pop
add
add
sahf
lock
or
inc
incb
notl
sbb
inc
das
xchg
jno
mov
xor
or
sbb
test
jle
mov
inc
mov
xor
adc
push
cmp
das
lods
push
mov
xor
xchg
std
or
push
sub
push
push
dec
jo
mov
xchg
inc
orl
movsb
fdiv
mov
movsl
subl
cmc
idivl
cmp
pop
cmpsl
sahf
mov
je
push
dec
lahf
mov
adcl
lret
sub
mov
daa
jecxz
aas
xchg
repnz
out
xchg
cmp
outsl
mov
sub
rcrl
dec
imul
imul
fsubl
cltd
out
mov
sub
mov
sarl
pop
mov
mov
and
cltd
loope
sbb
xor
mov
data16
es
aas
mov
test
fld1
push
ljmp
adc
shlb
sub
and
fscale
lret
pop
mov
daa
adc
jbe
lcall
in
and
loopne
ds
cmp
jo
xor
inc
inc
pop
xchg
inc
cld
mov
add
fdivp
sarb
cmpl
push
jne
sub
sbb
xor
mov
test
loop
in
shll
sbb
setg
iret
fcmovne
xchg
loope
jecxz
mov
cmp
push
mov
jle
inc
xor
mov
pmuludq
mov
pop
fiadds
jnp
int
inc
sub
js
loope
mov
movsl
cmp
call
ja
adc
sub
bnd
mov
out
aas
les
sti
cmpsb
pop
stos
sub
pusha
aaa
stc
sarl
dec
repnz
lea
jge
xchg
aas
arpl
lds
cmp
xor
dec
xchg
cmp
or
push
daa
mov
add
adcl
cmp
or
mov
scas
jl
movsb
cmp
push
addr16
rolb
test
shlb
sbb
ret
mov
push
adc
pop
sbb
inc
in
adc
pop
sbb
popa
sbb
push
test
sbb
mov
xchg
outsl
scas
jb
call
fst
and
inc
cltd
or
cmp
cwtl
pop
dec
fcoml
jp
js
mov
adc
inc
cli
push
push
orl
sub
or
sub
lods
es
mov
push
stc
pop
imul
test
or
das
imul
mov
sbb
lcall
shlb
mov
and
sub
mov
xchg
push
or
adc
ljmp
jl
push
shll
push
or
cmp
lock
lret
sbb
test
mov
sbb
dec
ss
xchg
into
adcb
into
add
push
subb
aad
imul
pushf
cld
cltd
out
jp
test
sub
ret
mov
xchg
jns
popa
or
jnp
mov
pop
lret
dec
xor
adc
pusha
xchg
and
insl
enter
loope
dec
inc
lock
ficoms
les
data16
les
std
add
cwtl
push
pop
addb
testb
lock
push
xor
xor
cmp
in
mov
rclb
ret
inc
das
jge
mov
dec
mov
lods
dec
outsb
subl
movsb
jp
mov
or
jl
mov
dec
adcl
mov
insl
cmp
mov
insb
dec
xchg
ds
lea
inc
je
data16
stos
lret
and
idivb
gs
iret
cmp
ret
cmp
xchg
test
pop
loopne
xor
jb
mov
mov
inc
gs
inc
mov
pop
mov
jae
lods
mov
leave
daa
js
and
lds
das
les
cmp
int3
pop
pusha
fidivrl
push
cld
push
and
js
dec
les
fiaddl
jp
ljmp
and
pop
add
shl
mov
clc
mov
insl
dec
lahf
jge
jg
daa
cli
cld
test
scas
leave
imul
dec
test
stos
loope
or
fists
or
and
pop
sub
adc
in
and
mov
jbe
dec
xchg
lds
cmp
xor
mov
or
sub
push
mov
arpl
mov
addb
hlt
xorl
mov
jno
aaa
iret
mul
sbb
sub
xor
stos
push
cli
push
mov
or
add
xchg
pop
add
push
addr16
sbb
das
js
pop
jle
pushf
add
incl
loopne
push
or
xchg
nop
adc
mov
gs
aam
lret
jbe
adc
push
std
div
and
cmp
xor
sub
dec
cmp
iret
xor
rcr
js
sub
jne
jns
push
movsl
cmp
test
pop
push
leave
dec
mov
loope
out
xor
or
or
shl
fcomps
loop
jg
pcmpeqw
and
fdivr
out
imul
add
in
out
ret
aam
outsb
leave
int
and
rcll
cmp
and
sub
pop
test
and
jbe
nop
and
mov
outsb
pop
imul
sub
loopne
adc
loopne
pop
mov
out
lods
insl
fcoml
sub
imul
mov
scas
pop
sub
sbb
repz
addl
rorl
mov
pop
push
stc
cmp
fs
pop
out
add
inc
nop
mov
popf
lods
xchg
push
test
shr
pusha
inc
adc
lret
sbb
and
movsb
xor
inc
mov
clc
pop
or
xor
outsb
popa
mov
jne
jmp
cmc
fisttpl
pop
lods
fldenv
dec
pop
sti
loope
mov
mov
adc
sbb
xchg
jle
pop
repz
filds
mov
addr16
cmp
je
shl
sahf
aaa
rclb
mov
and
inc
inc
pop
testl
sbb
dec
push
dec
loop
xor
loop
xchg
out
dec
mov
push
push
pushf
pop
fisubrl
scas
or
inc
addl
xchg
cltd
test
mov
cmp
or
or
in
fstpl
lret
cmp
pop
cli
jmp
movsl
clc
push
mov
and
in
jmp
hlt
scas
mov
aaa
mov
into
xor
out
into
mov
pop
push
in
lret
out
push
stos
sbb
leave
in
sub
jae
mov
iret
mov
cs
inc
inc
inc
rorb
repnz
add
add
dec
jmp
mov
jne
xchg
imul
and
test
push
xchg
outsb
jno
dec
imul
icebp
and
or
shl
subl
lea
pop
dec
or
mov
inc
outsb
leave
and
jno
pop
mov
iret
mov
jnp
pop
sbb
xchg
mov
jne
lods
mov
pop
pop
scas
sti
jne
popf
mov
jbe
jae
cli
push
out
jb
in
push
xchg
cld
outsl
test
pop
dec
fisttps
xor
cmp
cmpsb
arpl
add
pop
cmpsb
mov
mov
lahf
xchg
mov
mov
xor
add
dec
sbb
push
rcrb
popa
mov
pop
in
add
jbe
inc
inc
push
in
adc
enter
mov
and
mov
mov
and
adc
mov
ror
mov
inc
adc
lea
lds
xchg
pushf
cmp
or
fdivrp
lods
dec
ljmp
cli
sbbb
int3
pop
mov
clc
xorl
in
insb
xchg
cmp
imul
cmpsl
xchg
sbb
sbb
xchg
pop
test
mov
sahf
mov
xlat
push
pop
sti
xor
mov
xor
movsl
xchg
jg
dec
mov
add
sahf
and
push
lea
aam
mov
scas
rcr
std
mov
cltd
adc
inc
xchg
movsb
lods
push
cmp
inc
cmp
adc
jecxz
fwait
xchg
xchg
inc
das
sbb
es
push
fs
loop
mov
add
loopne
mov
arpl
es
ljmp
dec
insb
xchg
push
inc
lret
and
push
adc
push
pusha
jb
add
test
fisttpll
dec
mov
cli
add
mov
inc
sbb
push
push
cmpsl
int
xor
pop
xor
adc
ljmp
in
pushf
out
neg
sarb
ds
test
cwtl
mov
xlat
inc
fidivs
in
or
dec
adc
xor
cmp
cld
in
mov
nop
and
pop
cmp
inc
mov
aaa
mov
je
jp
mov
testl
push
cld
mov
jnp
xchg
and
ja
es
pop
xor
dec
scas
push
aad
sub
ja
pop
into
jmp
cs
add
test
mov
or
cld
jmp
inc
jns
pop
fcoml
mov
xchg
pop
repz
in
add
stc
mov
fcmovne
cmpsl
pop
cmpb
jns
lock
setp
mov
push
jg
xor
mov
lcall
int
loop
or
pushf
ljmp
movups
pop
xchg
lods
mov
leave
loope
inc
mov
jge
adc
sub
test
push
lahf
sub
push
inc
lret
repnz
fisttpl
push
pusha
pop
loop
stos
cmp
pop
mov
aam
std
jae
xchg
mov
lahf
add
test
inc
dec
je
push
mov
stos
xchg
arpl
jnp
jae
jge
jo
and
cwtl
in
in
movsb
push
jbe
imul
cmp
in
xchg
in
mov
and
stos
dec
adc
xor
jbe
fwait
shrl
cmc
scas
ret
mov
mov
orl
arpl
fmull
lret
in
xor
push
mov
cli
inc
fdivrs
loope
lds
ja
lcall
xchg
push
loope
xor
adc
sbb
sbb
and
and
mov
jnp
call
push
jno
or
cmpb
or
ret
sub
je
outsl
sub
mov
xchg
mov
add
data16
faddl
xchg
xchg
je
sub
sbb
xor
fidivs
cltd
call
mov
mov
and
inc
mov
fisttpl
insb
push
popf
aam
jmp
sbb
mov
loopne
adc
xchg
mov
xchg
cmp
pop
push
stos
hlt
mov
xor
sbb
xor
push
xchg
insl
clc
std
adc
xchg
daa
mov
js
int
aam
sbb
mov
aad
aaa
jmp
mov
iret
les
les
mov
cmpl
dec
aad
push
sbb
mov
jle
dec
cmp
jnp
push
ds
cmp
mov
cli
fs
arpl
inc
adc
fadds
out
das
add
or
inc
bound
inc
inc
and
push
or
adc
rcpps
or
mov
or
outsb
aas
lahf
or
das
jle
xor
es
int
mov
mov
imul
lds
xor
pop
mov
movsb
ret
test
lock
stc
leave
clc
inc
jmp
xchg
mov
xor
mov
fsubrp
pop
jnp
out
pop
add
loope
pop
mov
int
pusha
sub
bnd
and
test
stos
mov
mov
jge
lock
roll
push
lahf
aam
mov
mov
add
shll
jge
mov
jns
xchg
es
repnz
mov
and
add
xchg
ja
decl
ja
add
dec
and
cmpsl
pop
dec
sbb
add
sub
js
in
lea
sub
dec
fs
ret
shlb
scas
mov
xor
loope
rcrl
cmpl
sub
stos
mov
push
fnstsw
dec
push
mov
scas
ljmp
push
sarb
shll
sub
out
mov
insl
ret
cwtl
cmpsb
ficoml
jp
testl
es
xor
cwtl
inc
loope,pn
imul
rorb
out
jb
in
cmp
outsb
out
nop
roll
mov
push
clc
pop
or
sbb
or
pusha
test
or
pusha
sahf
lahf
in
movsb
mov
and
adc
js
xchg
outsb
mov
cmpb
mov
out
sti
mov
cmp
daa
mov
push
dec
xor
push
sub
mov
lock
cli
mov
rep
lahf
or
aaa
rcll
jge
sbb
ljmp
and
jge
mov
fwait
cmp
stc
mov
adc
inc
bound
sarb
andb
adc
adc
lock
cmp
or
xchg
ret
xor
dec
imul
into
cmp
or
out
cmpsb
jecxz
sub
mov
dec
movzbl
leave
xchg
jge
cmp
add
arpl
aaa
mov
mov
shrl
fisubrs
push
repnz
in
shlb
rcl
lds
shl
imul
sub
or
xlat
aas
sbb
fldenv
cmp
movsl
int
lods
or
dec
inc
scas
les
mov
xchg
or
lcall
mov
sub
shrb
cld
mov
enter
xchg
mov
sbb
jne
xchg
cmp
mov
mov
int
jge
cmp
mov
ljmp
dec
div
dec
test
das
xchg
sahf
sbb
add
xor
fnstenv
lea
push
push
lret
mov
or
pop
cld
pop
gs
js
jbe
aaa
shlb
sub
out
pushf
mov
test
mov
jns
test
or
xchg
dec
cmp
fiaddl
lock
ret
test
lfs
sub
pop
or
sub
cwtl
ret
es
mov
jmp
loope
adc
into
scas
push
mov
add
fidivrs
int
sahf
dec
push
sbb
mov
mov
outsb
in
and
push
jns
sub
arpl
xchg
cs
stc
into
in
iret
repz
testb
mov
or
xchg
xor
mov
mov
mov
jnp
ja
rclb
mov
mov
push
add
clc
ret
outsl
jecxz
sbb
fildl
jmp
xor
std
insb
loope
pop
outsl
push
mov
stos
jg
mov
sbb
inc
arpl
lcall
adcb
jnp
jbe
jge
insb
adc
hlt
cld
popl
popf
movsl
pop
xor
xchg
lahf
push
lret
out
add
movsb
inc
pop
fsubrs
push
lods
hlt
in
hlt
inc
cli
adc
pop
jns
or
ja
lret
xchg
cli
jb
dec
cmp
and
xor
popf
mov
pop
jo
hlt
aad
push
inc
xchg
mov
cs
ljmp
xchg
lds
rolb
sbb
int
push
sub
cltd
ja
xor
inc
sbb
jb
and
mov
inc
jl
das
xor
mov
or
mov
sti
insl
js
ret
lods
insb
push
jmp
mov
mov
mov
aam
popf
std
jno
das
sbbl
xlat
scas
adc
add
pop
push
inc
push
adc
loope
ret
cld
nop
adc
movsb
sub
test
cmc
stc
jno
hlt
sbb
std
bound
add
outsb
mov
insb
sti
and
inc
clc
mov
rolb
xor
and
in
aam
cltd
dec
jnp
popa
push
call
add
fbstp
sbbb
pop
push
scas
ret
xor
orb
adc
inc
dec
nop
pushf
fidivl
xchg
mov
imul
sbb
add
testb
cmp
ror
mov
das
insl
mov
xchg
out
bound
pushf
adc
fs
jae
movsb
inc
dec
dec
lret
hlt
push
clc
cld
inc
iret
out
aam
xor
test
and
into
lret
adc
lret
mov
mov
mov
mov
in
aad
push
andb
pop
sti
addb
fnstsw
insb
lock
int3
mov
imul
hlt
loop
insl
cmpsb
addr16
inc
cmc
insb
cmp
inc
xchg
aas
fs
dec
push
cmpb
shll
ss
icebp
add
push
enter
cmc
mov
pushf
and
cmp
jne
push
stos
leave
out
inc
sub
ret
loope
subb
pop
jecxz
pop
addr16
mov
rolb
lods
jbe
popl
xchg
xchg
push
addr16
pandn
fstpt
sub
je
sbb
mov
pushf
jl
loop
pop
les
repnz
push
mov
in
pop
jnp
push
inc
sarl
and
jae
lock
jb
cmp
mov
hlt
xchg
xchg
inc
test
stos
add
fsts
incb
mov
fdivrs
cmp
ds
outsl
out
aaa
fsubrs
ja
mov
ss
pop
push
cmp
adc
shrl
and
pop
jns
xchg
push
iret
cld
mov
dec
imul
ljmp
mov
lods
cmpb
push
cmpsl
lds
mov
and
jmp
addb
xchg
adc
popf
stc
sbb
add
sub
pop
jae
inc
cwtl
and
imul
ljmp
call
lods
cli
fwait
popa
notl
aas
push
test
mov
cs
out
jmp
dec
cmp
inc
pop
push
in
je
xchg
sub
jmp
mov
adc
addb
aad
mov
xchg
stc
cltd
lret
lret
mov
push
les
xchg
ljmp
sbb
cmpsl
ret
sbb
or
jmp
jle
fdivl
into
sub
cmp
ljmp
mov
cmp
or
add
dec
into
jne
add
popa
xor
out
dec
or
fwait
add
cld
test
or
fimull
mov
jnp
cmc
andw
xlat
mov
xchg
mov
mov
mov
xlat
sbbb
and
and
or
or
add
addr16
aad
push
pusha
and
insb
std
clc
pop
xchg
rep
jb
pop
cli
sbb
adc
out
flds
fbld
sub
jne
add
xchg
fiaddl
insb
std
mov
inc
adc
mov
gs
or
std
dec
incl
adc
pop
adc
loopne
ret
and
jmp
mov
or
mov
aaa
pop
sub
negl
dec
insl
adc
add
and
jno
aam
stos
fcompl
out
daa
cltd
push
loopne
es
push
mov
mov
xor
sub
fidivl
mov
outsb
scas
fs
cmpb
xlat
faddl
mov
sarl
mov
jecxz
into
and
pop
sarb
fwait
or
xchg
icebp
rolb
sti
inc
bnd
mov
and
addr16
xchg
xor
add
mov
in
mov
repz
out
dec
outsl
mov
cmp
dec
lret
popa
mov
sti
in
xor
arpl
daa
psllq
xor
mov
shl
xchg
and
or
sub
jno
lahf
mov
jb
rcrl
out
and
fldenv
mov
mov
adc
mov
add
scas
aam
sbb
push
mov
inc
sbb
sahf
idiv
in
mov
pushl
cmp
mov
add
mov
imul
mov
sbb
jb
add
push
insl
sbb
inc
popa
aas
or
insl
xor
and
cmp
mov
rclb
add
stos
inc
into
cmpsl
ds
jno
adc
int
aad
idiv
stc
lret
add
sbb
enter
clc
mov
lea
cmpsb
jne
paddusw
jge
cmp
fs
lock
or
sub
mov
dec
push
aad
mov
daa
adc
je
ret
into
iret
insb
lods
cmpsb
add
cmp
popf
xchg
sub
xchg
test
aam
repz
pop
jmp
adc
nop
hlt
xchg
ss
mov
shrb
gs
movsb
mov
fiadds
sbb
sti
pop
stos
dec
pop
ret
pusha
sbb
adc
sub
or
adc
xor
mov
pop
pop
fisubrl
or
and
sub
or
mov
sahf
pushf
shlb
loop
jno
lods
fldenv
in
jno
push
jno
clc
je
lret
fimuls
xchg
jne
fnstcw
push
jo
sahf
repz
fs
xchg
movsl
pop
inc
pop
or
pop
test
cmp
jne
div
jmp
sub
xchg
xchg
shl
xchg
xchg
addr16
call
jns
jno
inc
and
scas
mov
dec
xor
cmp
jno
pop
xchg
inc
inc
popa
popf
insl
dec
ret
aam
jmp
or
sbb
lret
test
stc
in
inc
inc
mov
inc
ret
push
mov
mov
xchg
fptan
mov
pop
inc
je
dec
lret
lods
mov
div
sbb
hlt
repz
cltd
js
push
dec
mov
mulps
mov
test
cld
orl
jecxz
das
stos
bound
or
pop
mov
dec
jmp
adc
push
cs
adc
int3
iret
sbb
jb
fstl
es
mov
pop
dec
and
xchg
dec
int3
sub
les
das
inc
push
dec
nop
pop
fiaddl
sbb
jge
jno
lret
cmpsb
mov
stc
mov
inc
pop
mov
repz
inc
cmp
dec
and
jl
test
cltd
inc
movsb
mov
sub
insl
fbld
out
xchg
pop
mov
sub
jns
mov
adc
cmp
dec
push
mov
in
or
xor
loop
mov
das
push
and
pop
xchg
jo
hlt
imul
add
lret
or
jbe
jnp
ret
push
mov
xchg
insb
out
and
fisttpl
and
mov
rcr
bound
adc
xor
in
roll
test
shlb
cmpsl
xchg
push
leave
pop
pop
js
push
cmp
push
movsb
or
lcall
ffreep
sbb
fldcw
repz
movsb
ror
arpl
push
rorb
mov
sbb
push
lcall
jl
daa
sbb
movsb
into
jg
aas
lahf
push
adc
or
loop
pop
cli
loop
dec
fs
jl
movsb
ljmp
jge
scas
ja
sub
inc
shll
ds
cmpb
sub
std
insb
inc
in
roll
out
scas
jecxz
scas
adc
xor
out
push
adc
lret
xor
cwtl
xor
mov
jae
mov
pop
sub
sub
icebp
lcall
or
shll
lahf
mov
pop
sub
lock
aam
into
and
or
mov
or
ja
push
jmp
adc
mov
cli
addr16
mov
mov
or
in
xchg
outsb
cld
outsb
pusha
pop
arpl
clc
out
jle
adc
mov
adc
es
pushw
rcr
push
adc
fbstp
or
hlt
stos
inc
fdivs
stos
sub
sub
jge
std
adc
in
scas
add
mov
pop
sub
lcall
xchg
xchg
push
cmc
jp
rcll
out
rcll
mov
insl
jmp
cmc
out
pop
je
pop
mov
adc
notb
es
loopne
ljmp
push
mov
popf
cs
les
int
out
cmp
stos
pop
jno
cmp
jne
rorb
ret
ret
pop
jmp
andl
jmp
movsl
fstpl
test
mov
lahf
adc
jne
leave
std
cmp
gs
sub
sbb
push
push
push
jno
jo
mov
sub
push
sub
xor
pop
mov
and
repnz
mov
loope
mov
mov
iret
dec
movsb
and
cmp
add
cltd
out
int
jge
adc
cmpsb
scas
xchg
sbb
scas
jnp
imul
rolb
sub
pop
push
mov
add
jmp
pop
imul
mov
or
mov
dec
pushf
cmp
pop
mov
lods
dec
daa
jg
mov
cmp
xchg
dec
or
xor
mov
mov
imul
push
clc
sbb
lods
xor
mov
add
sbb
aas
xchg
mov
mov
or
inc
adc
jl
rolb
cs
shr
arpl
fnstcw
iret
cltd
es
arpl
out
imul
movsb
mov
fistl
dec
push
jbe
push
mov
stc
rolb
mov
push
dec
nopl
mov
jmp
packsswb
addb
jp
mov
popa
jmp
lahf
stos
jge
mov
mov
call
cwtl
fidivrs
mov
std
out
and
push
sbb
cli
mov
into
mov
movsl
sahf
jg
insb
push
in
mov
sbb
xchg
divb
inc
movsb
repz
pop
lock
cmpsl
jecxz
popl
or
dec
imul
lahf
or
fucomip
mov
addr16
stos
leave
mov
dec
sti
ss
push
inc
mov
movsb
enter
orl
pop
sub
and
cmp
shll
ret
xchg
das
sbb
ljmp
icebp
mov
add
fcmove
push
inc
imul
mov
in
pop
adc
jl
push
ret
je
mov
inc
cmp
or
das
enter
push
jp
cmp
push
sti
adc
fcomps
cmpl
push
sarb
mov
adc
mov
aad
adc
clc
in
sbb
mov
inc
lods
out
hlt
sub
test
fcoms
mov
xor
mov
add
into
cs
or
movsl
pop
cmp
adc
xchg
loopne
out
shlb
cmpb
cmp
xchg
jb
leave
cmp
dec
leave
dec
jmp
add
int
jge
decb
imul
pop
mov
popa
aam
stc
mov
mov
dec
aam
pop
imul
and
mov
leave
mov
jo
pop
fmuls
mov
and
xor
popa
pop
mov
test
lcall
or
xor
ret
or
xchg
jb
jo
addr16
imul
mov
dec
movsl
in
mov
lcall
inc
cld
lret
lods
out
cmc
adc
push
mov
or
push
add
jmp
shll
mov
movb
adc
sbb
add
mov
cmp
in
xor
jmp
push
adc
adc
sub
push
sub
and
ljmp
xor
sbb
int
or
or
lcall
dec
daa
mov
ret
push
lods
sbb
out
push
fmul
insl
pop
adc
sbb
cmp
icebp
mov
arpl
xchg
jnp
cwtl
leave
push
mulb
xchg
mov
mov
stos
mov
cmp
scas
stos
cmpb
xchg
mov
xchg
loope
inc
pop
mov
fstl
sbb
add
gs
jno
mov
mov
add
outsl
outsl
mov
pop
pop
sbb
add
cli
enter
int
mov
cltd
jg
pop
push
cli
movsl
fldcw
in
rep
add
pop
mov
mov
and
mov
fistl
sub
das
xor
mov
icebp
mov
ss
xchg
mov
pop
sub
jecxz
add
and
push
cmp
xchg
inc
scas
push
cmp
mov
add
pushl
push
add
sbb
mov
sbb
cmp
outsl
mov
insb
out
cmp
cmp
xchg
repnz
addr16
cld
mov
in
push
jbe
xor
dec
outsl
fs
outsb
fnstcw
lea
sub
out
cmp
repz
fildll
enter
mov
das
xchg
xlat
pop
test
xchg
std
dec
rorb
xchg
insl
sahf
mov
add
int
pop
imul
cld
stc
stos
xchg
ljmp
imul
mov
jmp
sbb
dec
movsl
mov
add
jne
dec
dec
jp
or
sahf
jo
cwtl
ja
outsl
push
jg
push
jg
pusha
ljmp
mov
stos
in
adc
push
push
sbb
enter
js
daa
data16
inc
stos
sti
sub
xor
xor
out
pop
mov
rcll
into
scas
cmpb
fld
clc
mov
imul
scas
pop
imul
mov
shrl
fnstsw
mulb
jae
mov
cmp
inc
xchg
mov
dec
and
rcrb
inc
ret
cmpsl
push
mov
lea
in
mov
sbb
mov
pop
sti
lahf
xor
flds
lods
sarl
pop
dec
mov
push
ja
jo
mov
nop
std
adc
push
jmp
repz
lods
stos
push
jae
mov
jp
cmp
out
and
mov
push
and
in
loope
jbe
out
mov
add
adc
mov
lock
lret
lret
shlb
jp
lcall
fbstp
jle
push
loop
add
xchg
rcrb
add
mov
push
add
mov
sti
into
push
pop
ficoml
sbb
sti
add
jge
mov
out
jno
movb
mov
jle,pt
std
sub
and
movsb
clc
inc
enter
faddp
sbb
or
or
mov
push
push
repnz
lret
in
inc
dec
adcl
mov
push
insl
in
pop
imulb
in
out
pop
mov
into
adc
js
inc
in
push
cli
inc
movsl
push
out
jae
dec
adc
leave
mov
cmp
jl
rcrb
pusha
imul
sbb
sub
cwtl
and
sub
or
stos
outsl
mov
dec
pop
daa
mov
loop
or
mov
fdivs
stos
and
and
inc
adc
sub
mov
and
pusha
ret
pop
fbld
mov
adc
mov
ret
jge
ret
in
xor
jnp
xchg
insb
rcrb
adc
imull
jl
cwtl
aaa
adc
mov
popf
cmp
pop
xor
cmp
xchg
cmp
cmp
gs
add
ja
sub
repnz
sub
lock
leave
push
mov
pop
test
add
push
cmc
int3
jecxz
jl
jbe
leave
or
push
xchg
pop
pop
mov
pop
cmp
pusha
outsb
mov
incl
mov
dec
jge
mov
xchg
push
daa
out
push
lcall
or
popf
mov
lea
aad
or
pop
insl
pop
repz
fs
push
in
faddl
adc
add
out
xchg
pop
xor
push
shlb
jnp
pop
and
xor
stos
fdivrp
in
popf
sar
stos
xchg
ss
lods
xchg
xchg
les
xchg
and
mov
test
es
jb
stos
dec
cli
pop
xchg
pop
mov
jae
mov
jnp
mov
std
pop
negb
pop
dec
sbb
sub
imul
out
push
mov
jnp
cwtl
or
push
jmp
mov
addr16
es
bound
lcall
xchg
jo
adc
sbb
andl
and
mov
scas
xor
test
daa
add
mov
mov
ret
mov
pop
fistpl
fsubrs
fcmovne
pop
fucom
pushf
lock
rolb
rol
add
cltd
mov
in
or
data16
test
mov
out
test
pushw
int
fldt
mov
fildl
mov
les
call
cmpsl
sub
adc
mov
mov
fstl
lahf
xorl
mov
dec
mov
pop
adc
xor
mov
push
mov
mov
push
popf
mov
xchg
js
mov
sub
rol
pop
fsubp
add
cltd
inc
in
adc
pop
pop
mov
adc
adc
hlt
lods
lret
arpl
fcmovnb
sub
aam
js
aaa
adc
and
sbb
jb
gs
push
mov
add
cltd
pop
inc
aad
sbb
out
repz
test
hlt
popf
out
iret
cltd
fxch
jno
daa
pushf
xchg
mov
or
xchg
mov
jecxz
mov
frstor
push
int
mov
cmp
daa
or
fwait
xchg
push
lds
negl
fsts
inc
mov
out
cmp
aaa
test
int3
pop
out
xchg
mov
xor
dec
sub
push
sub
mov
sbb
aas
dec
push
fsubs
xchg
ljmp
jge
fistpl
xchg
aas
dec
inc
jp
xlat
push
or
xchg
seta
sti
or
push
push
lret
aaa
dec
loope
fbld
out
frstor
adc
ret
in
cmp
jb
push
inc
ds
fdivs
pop
mov
mov
inc
mov
pusha
sti
jnp
jecxz
in
mov
mov
icebp
or
mov
add
inc
inc
pop
inc
stos
mov
add
daa
imul
in
cmp
rcll
in
out
stc
dec
popw
jp
xchg
dec
cmc
xor
pop
sub
xchg
sub
sbb
inc
mov
lds
push
xchg
sub
xchg
inc
pop
call
dec
fcompl
fldl
daa
push
adc
aaa
sbb
sbb
fstpt
cmp
shrb
rol
mov
imul
cmpsb
inc
xor
inc
leave
popa
xor
fcomi
jg
mov
leave
mov
hlt
clc
mov
lods
mov
inc
pusha
pop
pop
rorl
xchg
sbb
xchg
push
jle
or
fisttps
insb
push
inc
int
in
inc
cmp
add
sbb
call
cmp
movsl
aam
imul
fistl
movsl
or
fmulp
daa
shr
lods
mov
add
pop
cmp
mov
pop
and
mov
lods
roll
cli
cmpsb
adc
leave
or
inc
mov
scas
xchg
enter
jo
lock
in
es
mov
mov
push
hlt
test
cltd
arpl
sti
sbb
jp
jecxz
imul
push
outsl
daa
mov
sbb
movsl
add
lods
jno
sub
cmp
dec
mov
xchg
int3
cmp
push
adc
lret
and
in
nop
mov
imul
repnz
mov
xchg
inc
pop
int
gs
data16
int
scas
push
jns
push
adc
pop
push
sarl
cld
int
in
adc
push
int
ja
bound
gs
sahf
es
fstl
fsubl
incl
lcall
sarb
jmp
ret
loop
add
adc
insb
sbb
insl
leave
dec
sbb
call
sbb
jae
inc
repnz
mov
cmpsb
loope
test
aam
jmp
or
loop
test
jne
xchg
clc
call
push
xor
mov
bswap
inc
add
jns
aad
ja
xchg
rclb
jae
dec
addr16
ja
and
push
in
push
ret
or
insb
and
in
mov
pop
pop
jmp
repnz
pop
sub
rep
mov
mov
mov
std
outsb
scas
mov
scas
dec
daa
mov
jge
pop
fstpt
cmp
pop
jns
xchg
les
les
mov
pop
leave
addl
mov
inc
add
cmp
je
ret
sub
lods
aaa
es
outsl
rcr
add
sbb
jns
adc
cmp
pop
mov
xor
popa
in
shll
cmpsb
lcall
fwait
xchg
cmpb
aad
addr16
rol
shrb
f2xm1
outsb
or
dec
pop
jne
movups
add
decl
pop
dec
jbe
call
in
clc
cwtl
xlat
dec
gs
xchg
ss
push
fnsave
push
orl
shrb
adc
or
push
sahf
mov
xchg
scas
shrl
cmp
push
test
in
inc
int
jg
or
mov
jle
repnz
ljmp
adc
jp
mov
rclb
mov
and
xor
jmp
pusha
ljmp
dec
cmp
cmpsl
sub
sub
lcall
inc
or
fistpl
xchg
lock
push
or
nop
mov
push
out
mov
mov
lret
mov
enter
adc
push
dec
std
imul
jp
test
push
adc
jecxz
sub
sub
aas
mov
and
push
add
mov
jecxz
jbe
in
insb
in
add
sub
inc
or
sbb
mov
es
leave
jp
mov
inc
test
xchg
add
test
adc
lret
inc
popf
jne
jl
ficomps
out
adc
ss
les
icebp
insb
and
les
lea
lods
cld
jp
fstps
sub
test
mov
aam
fstps
ja
jnp
subl
inc
fimull
repz
std
pusha
mov
jae
xchg
aas
xorb
or
repz
and
mov
adc
sbb
cmp
lods
jle
jle
dec
pop
fwait
dec
or
or
jae
outsl
movsb
stc
add
mov
aas
sti
dec
sbb
add
xlat
loop
cmp
ret
fidivs
daa
mov
adc
aam
cmp
movsl
sub
dec
fs
pop
add
ficompl
outsb
sbb
adc
mov
push
test
cmp
int3
shll
jge
jo
xlat
dec
mov
jle
fildll
cmp
test
mov
or
add
vunpcklps
mov
adc
les
fisttpl
test
or
adc
cmp
mov
dec
lods
daa
inc
scas
roll
mov
outsl
or
int
mov
pop
and
test
loopne
cltd
jg
gs
and
inc
push
out
dec
dec
in
das
inc
jmp
mov
call
dec
sbb
int3
and
movsb
pop
cwtl
dec
or
mov
mov
sti
adc
cmp
sub
mov
sarb
arpl
fs
push
cmp
jo
xor
pop
je
fmull
push
push
mov
sbb
push
inc
movl
lret
xchg
fldl
andl
push
cli
ja
addl
test
aaa
jle
cmp
cmp
mov
scas
adc
mov
mov
test
int
movsl
cmp
nop
scas
in
test
rcr
stos
nop
test
test
dec
int
loop
cmp
pop
cmpb
mov
mov
mov
lods
out
pop
pop
mov
jle
loope
mov
lret
and
decl
and
inc
aad
jmp
int
lods
cmp
inc
mov
mov
dec
aam
pushf
lahf
jne
into
sbb
call
add
loope
push
lcall
repz
or
std
jbe
in
cmc
jae
std
and
jp
shrl
iret
sub
sub
fsubs
in
insl
sub
adc
push
rcrl
mov
cmc
inc
in
adc
fwait
nop
inc
popf
jmp
bound
out
jb
in
popf
in
nop
or
movsb
andl
ret
cmp
repz
xorl
sbb
mov
jp
jmp
fidivrs
jae
cmc
mov
and
in
int3
arpl
in
dec
and
imul
pusha
pop
pushl
mov
xchg
lods
cmpsb
sub
dec
mov
xchg
lock
aad
inc
das
cwtl
loop
cmpsb
lret
adc
mov
fdivrs
test
xchg
js
int
arpl
sub
pop
xchg
mov
pop
icebp
adc
push
push
jl
outsb
sbb
or
imul
xchg
or
adc
xchg
cwtl
xchg
mov
jle
inc
pop
dec
sub
js
push
stc
in
gs
inc
jmp
sub
test
iret
xchg
test
scas
add
in
add
test
mov
push
std
sahf
and
sub
xchg
das
fadds
fisubl
in
int3
or
push
lret
rcrb
sahf
imul
jle
jp
and
cmc
and
mov
adc
aam
sbb
pop
pop
cmpsb
test
js
sub
sub
data16
scas
lock
cmp
mov
negb
dec
fisubrs
adc
mov
or
stos
push
scas
pop
cwtl
aaa
xlat
ljmp
insl
lcall
popl
repz
hlt
push
rcrb
aad
call
das
movsb
loopne
testl
adc
push
fcomps
jle
ss
arpl
stos
sub
insl
pop
jp
jnp
mov
xor
jmp
hlt
bound
mov
int3
jl
xor
push
lret
sub
in
sub
push
mov
sahf
rorl
xchg
gs
lock
ret
push
sub
fistpl
ret
pop
shlb
mov
ja
nop
jge
das
push
divb
xchg
adc
lds
les
fidivrl
jne
sbb
push
ja
aas
jge
push
outsb
xor
mov
sarl
ljmp
pushf
jl
mov
imul
adc
popl
sti
fisttpll
inc
js
sbb
lahf
ja
sub
aad
pop
xchg
dec
and
popa
out
ficoms
and
sub
leave
aad
les
shr
jecxz
sbb
push
inc
ljmp
lret
mov
ret
dec
mov
push
push
ja
cmp
cmp
push
pushf
inc
aas
cmpsb
cs
aad
rolb
sbb
imul
sbb
jne
pop
lret
in
mov
popa
mov
cwtl
stos
lar
xchg
rol
loop
cmp
into
add
jl
mov
and
gs
xor
adc
mov
push
lea
sub
dec
daa
or
sub
add
or
rcrl
shr
and
inc
mov
dec
fwait
add
ficompl
loopne
shrl
xorb
test
push
mov
mov
and
mov
loop
sub
mov
and
xchg
mov
push
les
orl
xchg
adc
psrld
lret
cmpsb
ficoms
mov
mov
mov
gs
sahf
cs
add
sbb
fidivrs
inc
stos
mov
adc
push
xor
pop
sbb
inc
in
mov
sub
mov
push
mov
clc
repz
mov
inc
imul
and
and
shrb
dec
cwtl
out
loop
cmp
loope
and
or
fiadds
hlt
outsb
mov
mov
add
jg
cmc
jp
inc
lret
dec
sbb
pop
pop
fisttpll
fsubl
insb
fdivrp
daa
push
ret
out
test
arpl
aam
inc
rcll
ret
sub
add
lods
hlt
js
scas
imul
movsb
movsb
bound
fstl
cmp
lahf
xor
out
loop
dec
sti
adc
clc
or
inc
xlat
ret
cmpsl
and
xchg
sub
dec
and
daa
lret
sbb
sbb
mov
mov
mov
roll
cmpsb
das
int
daa
add
jo
arpl
lea
xacquire
xchg
aad
stos
push
outsb
or
arpl
nop
push
ret
test
and
imul
out
jmp
mov
nop
adc
int3
mov
push
cmp
cmovge
mul
fwait
inc
cmpsb
leave
push
outsl
xchg
outsl
ja
sbb
pop
xor
rorb
aad
cmp
xchg
cmc
push
leave
dec
stc
push
loopne
cs
inc
in
push
in
xchg
dec
das
int
xchg
xchg
bound
push
dec
call
loope
nop
int
add
fs
das
jb
cmpsl
cmp
sbb
neg
xchg
test
sub
xchg
int3
sahf
jnp
push
test
cmp
clc
lret
lret
es
loope
pop
cmpsb
mov
jge
jo
lock
push
lds
sahf
cmp
xor
arpl
add
xchg
ficompl
or
mov
jne
jns
jb
sub
insl
cmpsb
call
sarb
popa
lods
cld
repnz
push
std
inc
ljmp
dec
mov
jnp
cmp
jnp
call
movsb
repnz
adc
pop
insl
xchg
lret
jp
dec
dec
out
xchg
sub
das
stc
sarb
jb
insb
jmp
jnp
jg
push
add
fs
shl
sbb
shll
pop
inc
mov
cli
popf
lret
arpl
dec
push
inc
sbb
mov
jb
adc
mov
pusha
into
mov
push
adc
popa
insb
leave
xor
add
jno
movsl
jno
inc
mov
mov
add
fisubrs
push
es
jecxz
and
std
adc
idivb
mov
mov
mov
inc
pop
lret
and
xchg
push
pop
ljmp
pop
fldt
clc
shlb
sbb
clc
ds
stos
xchg
mov
mov
fdivl
push
cld
aam
and
aas
xchg
popf
scas
mov
cmp
jno
inc
rcrb
push
adc
sahf
pop
push
fsubrp
jb
xchg
sbb
popa
mov
add
outsb
jae
icebp
sti
dec
sub
sub
mov
mov
outsb
out
push
lret
dec
jmp
test
loopne
and
das
clc
mov
jae
aaa
divl
push
sub
mov
jl
out
std
and
xor
lahf
enter
pop
dec
outsl
cs
xor
ss
xchg
mull
popf
out
mov
cs
or
jns
cmp
inc
mov
test
mov
out
sub
sbb
lret
aaa
sbb
xor
int3
xchg
sbbl
adc
cwtl
and
fwait
mov
je
mov
ret
mov
fiadds
adc
inc
sbb
jg
mov
js
cld
fstps
enter
push
xor
shl
ljmp
shl
jae
push
adc
popa
fisttpll
dec
sub
pop
ja
sub
stc
cwtl
stos
xchg
popa
call
xchg
ret
add
mov
mov
shrb
mov
add
frstor
adc
or
enter
movsb
fcoms
sub
enter
push
and
dec
mov
and
push
iret
pop
ret
xor
cmp
sub
jbe
popa
jo
cmp
ss
jp
insb
and
fs
enter
push
xor
inc
mov
insb
stos
popf
in
or
push
fsubl
call
jbe
mov
mov
stos
loop
xchg
sti
mov
sub
shl
sbb
xor
and
dec
adc
insb
ljmp
mov
xchg
pop
cmp
fisubs
jnp
call
jge
xchg
into
jne
popa
or
inc
stos
sbb
pop
inc
pop
cmc
push
lock
fildl
xor
xchg
xchg
stc
cmp
inc
decl
cmp
jbe
pop
push
inc
xor
data16
nop
outsb
push
pop
or
inc
divb
push
andl
sbb
mov
push
xor
or
push
scas
pop
sbb
clc
lds
sarb
ror
das
xor
mov
scas
add
xchg
ret
imul
das
jno
dec
pusha
ret
xor
popa
aaa
nop
dec
fstpt
adc
inc
lea
icebp
incb
xchg
inc
data16
fwait
movsb
nop
lret
std
scas
roll
idivl
mov
push
adc
mov
fsubrs
mov
xor
arpl
loope
jno
sbb
fadd
push
add
leave
xchg
push
std
dec
cmc
fbld
push
jmp
sub
pusha
mov
push
frstor
xchg
mov
dec
flds
cld
lahf
mov
fcoml
std
ret
cmp
push
or
xchg
insl
xchg
es
lret
cwtl
pusha
jmp
ja
loopne
sub
lods
movsb
mov
jge
mov
pop
mov
fcomip
pop
shlb
cmc
push
lea
cmpsl
push
aam
push
xchg
adc
fisttpll
clc
mov
mov
mov
sub
cmpsb
push
sub
or
or
fistl
add
sahf
mov
cmc
jge
dec
filds
dec
mov
rcrb
movl
pop
repnz
outsl
sbb
cmp
notl
rorb
dec
mov
cmp
pop
bound
enter
lahf
sar
and
add
test
and
pop
sub
pop
out
cmp
ljmp
xchg
xor
add
dec
cmpsb
dec
iret
inc
pop
mov
jne
lretw
sbb
js
mov
ljmp
inc
and
or
or
mov
dec
xor
adc
scas
ds
mov
or
jmp
jbe
or
mov
lcall
and
out
mov
fists
pop
mov
js
push
mov
sbb
cmp
push
test
jnp
rorl
push
ds
sub
mov
lahf
outsl
std
pop
push
pop
idiv
pop
inc
inc
xor
pop
add
mov
lods
push
mov
sub
cmp
mov
arpl
test
inc
push
inc
ss
outsb
out
xlat
jo
stos
es
mov
inc
sub
inc
xchg
mov
cmc
test
xor
lret
sbb
dec
sub
cmp
imul
mov
jp
ficoml
dec
push
and
cmc
cmpsl
call
inc
cmp
leave
imul
sbb
dec
hlt
stos
push
sbb
loope
and
lods
test
icebp
mov
cmc
xor
lcall
shlb
inc
popa
sub
iret
pop
lret
xchg
sbb
mov
mov
jp
mov
jae
sub
mov
push
sahf
push
divb
pop
aas
imul
xor
pop
add
loopne
scas
out
push
clc
jae
sbb
cwtl
cld
call
addr16
fsub
ror
xchg
pop
testl
fiaddl
test
mov
adc
jmp
notl
imul
imul
pop
insl
add
pop
sbb
adc
cltd
jb
leave
push
or
leave
dec
fwait
in
jl
adc
movsl
mov
mov
loope
push
hlt
es
idiv
mov
ret
iret
mov
fisttpll
xchg
and
outsb
out
mov
inc
stos
in
rclb
incb
jae
jns
std
and
pop
push
test
rclb
mov
aam
mov
mov
insb
mov
jecxz
gs
popl
cmp
jge
rcrb
test
cmpl
fadds
inc
cmp
jge
repz
iret
push
stos
cmc
add
sbb
cmp
aaa
js
mov
dec
std
xlat
push
dec
lock
jg
fldt
pop
jp
in
and
sub
mov
jno
cs
aas
cltd
push
cli
push
push
cmp
dec
mov
div
lahf
jne
rolb
aas
orl
mov
ss
les
shld
leave
gs
and
sbb
repnz
leave
ror
ror
in
xor
adc
cmpsb
adc
or
mov
add
mov
lret
aaa
sub
jno
test
fldz
sub
sti
lcall
jecxz
sbb
cwtl
sbb
xor
popa
hlt
in
sub
sub
rorb
xor
cltd
pop
lods
inc
or
popf
decb
int
xor
cmp
roll
int3
xlat
int3
and
sub
push
aam
std
ljmp
fwait
jnp
outsl
mov
inc
fdivrs
jl
aas
mov
mov
aaa
das
push
or
push
imul
sub
sbb
sbb
or
fcmovnu
mov
push
ja
push
cwtl
xchg
and
mov
sub
daa
xor
test
iret
sbb
loop
orl
mov
insb
push
repnz
adc
iret
js
insb
sub
lock
and
pop
jo
arpl
push
sbb
repnz
xor
inc
vaesdec
push
or
mov
loope
push
ror
fwait
sbb
mov
mov
lahf
mov
fstpl
dec
sbb
xor
out
sub
hlt
add
dec
daa
cmp
adc
or
call
popf
fists
push
pushf
scas
mov
fmuls
lret
jecxz
push
mov
inc
mov
icebp
fcomps
cli
xchg
cmpsl
imul
sbb
dec
push
arpl
pop
mov
insb
and
divl
adc
or
std
sbb
scas
andl
pop
pop
in
fidivs
jecxz
call
xchg
inc
outsl
into
data16
and
and
mov
mov
mov
mov
subl
mov
fdiv
ret
lret
jbe
dec
imul
ret
loop
inc
popf
in
or
inc
xchg
insl
gs
mov
sub
mov
add
ret
bound
push
lds
adc
movsb
dec
stos
movsl
dec
popf
loop
nop
dec
or
arpl
jae
dec
es
jbe
pop
inc
pop
push
jns
pop
scas
adc
inc
enter
mov
pop
pop
fbld
hlt
cmp
inc
sbb
shl
test
in
aam
mul
xchg
jmp
orl
mov
jae
call
jg
fildl
adc
out
sub
cmp
sub
flds
cmpsb
test
and
mov
rcrb
je
enter
xchg
sbb
in
aam
mov
jmp
pop
insb
pop
pusha
sub
pop
dec
cmpsl
jle
stos
movl
or
jne
nop
jmp
addr16
mov
dec
or
imul
cld
adc
mov
mov
dec
xchg
jg
aad
pop
and
cmpsb
mov
push
jg
aas
push
lret
mov
add
cmp
movsl
mov
add
nop
stc
imul
cli
jo
icebp
je
stc
pusha
mov
add
leave
inc
and
xchg
mov
ljmp
rclb
aad
out
js
orb
stos
out
or
xchg
push
adc
and
or
ss
ret
lret
out
sbbw
ret
popf
stc
nop
mov
rcll
jle
mov
call
frstor
pmulhw
data16
pop
fistps
in
jmp
xor
icebp
getsec
sbbl
pop
outsb
fistps
out
aas
push
xor
add
out
cld
push
jp
adc
mov
stc
sbb
add
add
pop
adc
xchg
les
sbb
aas
push
lret
and
cmp
pop
shlb
xchg
mov
mov
shll
add
jae
imul
jne
decb
xchg
sbb
insb
mov
test
sub
cmp
test
or
lods
scas
je
mov
mov
mov
jns
insl
bound
jle
aad
loop
push
inc
test
adc
cmp
sub
push
xchg
scas
dec
jno
xchg
mov
mov
jp
dec
push
sub
int3
js
lcall
repz
inc
mov
push
and
mov
add
int3
cmc
lcall
gs
xchg
xchg
push
xchg
fcompl
movsb
lahf
cld
inc
lret
shlb
mov
xor
lods
addr16
add
pusha
mov
icebp
pop
pop
pop
fldt
inc
fdivrs
sarl
xor
es
mov
ljmp
aas
mov
cmp
mov
inc
mov
sub
enter
es
cmp
loop
iret
pusha
push
test
movsb
gs
movsl
sbb
cli
mov
mov
jmp
loope
pusha
dec
into
xor
xor
popf
xchg
mov
mov
sub
xor
jae
movb
fcmovne
lock
and
daa
pop
xchg
jns
push
add
adc
mov
ret
stos
xor
mov
jle,pn
jns
lods
jmp
cmc
insl
jecxz
or
xor
sub
test
loopne
adc
ss
ja
and
inc
rorl
jle
scas
cld
mov
shr
outsl
adc
xor
subb
sbb
lods
hlt
cmp
fdivs
add
sbb
cld
pop
xorb
pop
insb
dec
insl
jb
push
cmpb
pop
aas
shlb
shrb
popf
icebp
add
test
pop
pop
lcall
out
and
xchg
in
sbb
jmp
pop
scas
mov
lock
jb
sub
xchg
sbb
add
jge
jae
mov
push
adc
cmp
lahf
cld
sbb
in
loopne
push
mov
push
in
fcmove
sbb
bound
lock
in
js
rorl
dec
in
mov
sarl
js
xor
or
lcall
xlat
addr16
pop
fidivs
sbb
xchg
fcmovb
fstps
stos
lret
lods
lahf
lock
testl
fstl
mov
das
inc
and
adc
mov
into
mov
cwtl
scas
inc
pop
out
or
jno
push
test
mov
mov
and
loop
jbe
test
loope
int3
or
popa
hlt
push
mov
cmp
lret
mulb
aaa
push
popf
repnz
ss
and
push
and
xchg
sub
rorb
shl
cmpsb
jg
enter
push
dec
pop
in
psraw
aam
jmp
cmpsl
aaa
sbb
adc
mov
xchg
sub
test
mov
sub
xor
loop
loop
inc
aas
lods
movsb
sbb
sahf
dec
add
inc
mov
add
push
mov
dec
mov
adc
add
sub
pop
pop
xlat
dec
sbb
sahf
ret
mov
adc
inc
adc
jecxz
xchg
imul
sub
lcall
shrl
pop
sahf
jns
lods
xchg
sqrtps
hlt
push
ljmp
sbb
jo
aas
scas
or
loopne
loopne
mov
cmp
sbbl
push
aaa
popf
pop
loope
lret
push
fdivrs
xchg
jg
mov
or
imul
inc
sbb
add
imul
jae
jl
mov
mov
mov
sub
jo
scas
dec
dec
xlat
stos
hlt
imul
ficoms
push
xchg
xchg
outsb
dec
gs
pusha
or
inc
sub
fldenv
ja
rolb
xor
outsl
ds
sbb
lahf
dec
or
int
cld
mov
push
subps
mov
lock
jl
mov
xor
xchg
adc
xchg
cltd
scas
fisttpl
mov
mov
jecxz
push
mov
xchg
adc
xor
dec
test
push
std
inc
stos
mov
pop
ja
pop
push
das
jne
mov
mov
aad
pop
loop
pop
xchg
inc
int3
aam
adc
test
aam
cld
sbb
pushf
js
mov
pop
cmc
fldl
sbb
xor
iret
pop
adc
repnz
stos
sbb
inc
jae
and
cmp
jle
xor
loopne
jbe
push
int
xchg
fsubl
pop
stos
inc
lock
inc
out
je
aad
adc
cmpsl
sbb
sbb
mov
mov
mov
adc
test
pop
xor
xor
fyl2xp1
ret
mov
jb
scas
nop
jl
xchg
ds
mov
cmp
sub
lock
cs
mov
sbb
dec
mov
or
or
test
lcall
jnp
js
sbb
aad
pushf
or
xchg
gs
mov
sbb
cs
loop
sub
mov
cld
dec
dec
jno
cmpsb
nop
iret
iret
and
rorb
jbe
and
das
mov
mov
cltd
call
test
ljmp
flds
fidivrs
dec
adc
ljmp
pop
or
fsubl
push
mov
repz
les
inc
dec
int3
inc
or
jmp
adc
inc
sti
mov
sti
and
test
xor
out
imul
adc
ret
mov
pop
jnp
xchg
jno
das
sub
mov
aad
in
add
and
push
int3
outsl
jae
add
stos
inc
add
repnz
aaa
sub
push
jle
cmp
fiaddl
ficoml
jo
pop
mov
scas
hlt
stos
and
enter
push
cwtl
iret
and
xchg
sub
sub
fiaddl
les
outsb
pop
aam
popa
push
repnz
sub
jno
sarl
subl
aas
push
loop
cld
pop
dec
xor
in
shlb
rcrb
ds
fidivl
xchg
inc
pop
and
aaa
push
lds
aam
xor
mov
inc
pop
mov
loop
aad
fldl
in
xlat
cli
movsl
mov
mov
xchg
jge
mov
ja
pop
pop
fldenv
das
inc
or
arpl
add
xlat
mov
pusha
inc
cmp
in
dec
mov
pusha
lods
push
cmp
mov
insb
mov
movsl
mov
jp
js
mov
inc
lds
insl
fldpi
aad
insb
jmp
sbb
adc
fs
xor
dec
push
push
pop
or
or
stos
test
nop
popa
or
das
arpl
add
or
xchg
sbb
mov
push
adc
sbb
pushf
sahf
pop
cwtl
insb
mov
adc
cmp
xor
movsb
pop
int3
push
ret
ljmp
mov
push
lahf
push
jle
jge
mov
and
mov
sbb
and
push
pop
lods
jle
fstl
mov
mov
dec
ds
xchg
jns
cli
sub
inc
lcall
or
das
xchg
nop
mov
mov
scas
pusha
mov
push
iret
cmovp
adc
in
and
not
ljmp
imul
bound
push
inc
jge
mov
or
outsb
ret
stc
std
push
mov
scas
push
in
mov
mov
push
aam
bound
push
mov
sarl
fucomip
imul
aas
int
movsl
por
pop
sub
jmp
xchg
push
cs
in
in
lcall
bound
scas
jns
popf
sbb
test
xchg
mov
cwtl
mov
and
andl
clc
shr
push
mov
mov
mov
jp
cmp
sub
aaa
sub
mov
xor
icebp
ret
mov
add
mov
popf
xlat
sub
bound
or
cmp
nop
xchg
pop
sti
bound
inc
in
stc
add
lcall
xchg
add
pop
and
fcomps
fbstp
add
add
push
into
jne
and
fdivrs
aas
mov
sbb
std
dec
mov
lret
xor
stc
sbb
xor
push
arpl
dec
in
jo
inc
leave
jne
sahf
and
push
out
push
std
xchg
lea
bound
testl
orl
add
dec
and
sahf
mov
adc
rorb
in
inc
leave
jb
outsb
ss
and
inc
les
cmpsl
push
mov
shl
ss
pop
xor
dec
push
bound
adc
adc
add
call
in
test
sub
insl
sbb
mov
jmp
das
lcall
jg
cmp
clc
or
shrb
dec
cmp
xchg
das
stc
mulb
fisubrl
jp
frstor
and
or
iret
sbb
pop
test
sub
cmpsb
rcr
jo
pop
mulb
add
loope
rorl
adc
cs
pop
jle
inc
inc
ljmp
push
push
pop
mov
ret
js
rcrl
cmpsb
dec
xchg
adc
andb
cmp
scas
mov
pop
cld
push
ret
mov
xchg
sub
test
jo
dec
inc
mov
addr16
adcb
loope
adc
cmpsb
and
push
faddl
andl
inc
in
cltd
and
stos
mov
jecxz
xchg
iret
mov
dec
mov
pop
xchg
cs
adc
mov
mov
or
push
jge
inc
cwtl
xchg
je
jo
lock
out
ja
stos
outsb
int
inc
std
lret
sub
sbb
mov
pop
xor
adc
add
add
sbb
hlt
adc
insl
sbb
adc
jnp
aad
loop
ljmp
or
mov
mov
jp
out
and
sti
loopne
jmp
push
xor
mov
cmpb
push
in
lods
call
sub
add
cmp
outsb
jbe
rorb
push
or
inc
mov
pushf
inc
sbb
sub
cltd
mov
js
xor
clc
fbstp
insl
jg
jo
xchg
mov
add
cli
iret
mov
and
mov
idivb
jp
repnz
aam
lret
nop
jge
xor
shll
sub
sbb
jno
lds
jecxz
jg
xchg
mov
mov
inc
scas
in
lcall
pop
push
xchg
inc
aad
jnp
in
lcall
clc
inc
pop
test
out
mov
ljmp
mov
cmp
mov
and
push
cmpsl
pop
xor
cmc
dec
bound
add
int3
push
les
loop
imul
dec
ljmp
das
jmp
out
mov
mov
or
outsb
dec
add
movsl
stos
mov
xor
or
test
add
fst
xchg
sbb
cli
push
mov
xor
cmp
mov
fs
pop
call
pop
scas
sbb
jecxz
fadd
cmp
out
xchg
mov
sub
addl
ret
mov
stos
xor
popa
and
fnstcw
bound
clc
imul
call
inc
test
and
sbb
out
pushf
inc
lods
and
jge
adc
fwait
sbb
aaa
cmpsl
jno
or
inc
inc
dec
in
jbe
leave
add
jle
pop
jne
in
add
adc
or
popf
insb
add
loop
aad
pop
jno
repz
fidivl
fldt
dec
test
add
int3
mov
add
add
xchg
stos
and
inc
lods
adc
inc
adc
mov
xchg
scas
scas
repz
loope
lahf
es
inc
mov
jbe
dec
ret
lcall
sbb
xor
jmp
add
lret
cmpsb
push
test
fldt
mov
cmc
mov
mov
mov
mov
outsl
into
push
mov
sbb
inc
push
jae
jb
push
push
enter
xchg
daa
mov
and
nop
out
pop
sbb
imul
test
add
gs
mov
fmull
test
enter
repnz
test
and
ret
sarl
das
inc
bnd
fidivs
por
movsb
ds
out
xchg
cmp
sub
and
mov
or
seto
mov
pusha
mov
repz
dec
ret
mov
std
ficompl
in
adc
cli
mov
mov
or
mov
aas
push
and
jae
lahf
lret
pop
adc
push
movl
pop
or
cmp
and
sub
or
fnstsw
fstps
mov
mov
jl
cwtl
sub
shl
call
insl
sbb
xchg
mov
faddl
jbe
mov
dec
pusha
mov
inc
mov
mov
mov
lods
xor
rcrb
adc
fs
cmpsl
cs
dec
mov
stos
out
or
inc
sbb
outsl
les
test
push
sbb
pop
scas
outsb
xchg
fdiv
jns
mov
aas
movsb
ja
xchg
mov
sub
cmpsb
pop
fisubs
cltd
dec
data16
jnp
pop
rcrl
es
out
pop
push
test
and
cmp
sbb
out
pop
aaa
fstpt
pop
dec
loop
and
dec
mov
icebp
fsts
outsl
and
pop
cltd
ja
aaa
leave
fsubrs
dec
inc
sarl
sbb
inc
fldenv
and
das
ljmp
sbb
mov
mov
into
mov
inc
jmp
sub
lcall
ret
into
sbb
sub
les
xchg
add
repnz
mov
xchg
mov
or
lcall
push
xchg
fnstcw
test
mov
lea
in
pop
push
mov
loop
je
outsb
jb
sbb
js
into
mov
outsl
hlt
aas
adc
lcall
fmuls
xor
cmp
loopne
dec
mulb
repz
xchg
lret
insb
jle
dec
sub
adc
bswap
xor
mov
mov
cld
movsl
icebp
jg
mov
pop
inc
pushf
pop
test
or
fcmovnb
es
lcall
fisttpll
std
mov
pop
mov
test
fidivrs
call
add
mov
leave
jl
add
lahf
outsb
mov
popa
iret
out
and
lea
mov
push
and
sbb
orb
xor
sbb
or
mov
ds
sbb
aam
insl
out
out
dec
push
stos
cmpb
jo
dec
rol
fisubrs
cmp
sbbb
ret
sub
aaa
inc
fdivl
scas
fisttpl
cs
push
jge
xchg
adc
cld
mov
adc
imul
addl
xorb
mov
mov
scas
dec
aad
scas
jae
jp
jecxz
mov
out
sbb
adc
scas
or
and
fs
dec
or
mov
pop
mov
mov
add
das
shrb
int
out
incb
jnp
orb
adc
push
test
adc
and
mov
add
jne
sti
and
ror
add
imul
jnp
xor
add
jb
int
jmp
jl
aad
mov
add
call
sahf
push
dec
and
in
scas
mov
dec
int3
jecxz
and
or
out
aas
dec
mov
scas
jle
mov
jmp
roll
mov
pop
xchg
dec
outsl
mov
iret
mov
and
pop
fwait
int
dec
jecxz
jle
jnp
mov
test
pop
pop
inc
cmp
lcall
dec
test
das
mov
out
pop
mov
fldln2
add
into
test
popf
in
dec
adc
pop
mov
pop
clc
mov
lods
test
xchg
gs
xchg
les
fstl
adc
jmp
pop
int
loope
into
inc
inc
inc
in
insb
jle
xor
repz
cmp
js
xor
jae
and
mov
push
pusha
addr16
add
dec
mov
adc
fimull
xchg
mov
adc
mov
fwait
mov
inc
test
cmp
pop
fwait
sbb
mov
and
mov
mov
aas
rclb
imul
fidivrs
cmpsl
scas
pop
shr
and
mov
or
push
mov
mov
cmp
pop
cmp
imul
mov
rcrl
addr16
cmp
cwtl
pop
test
mov
popa
add
add
repz
cmp
mov
aaa
mov
sub
cli
or
push
sub
mov
out
cmp
cmp
cli
cs
sub
lret
fldcw
xlat
call
loop
xor
divb
push
aad
in
xchg
dec
fsubs
test
icebp
mov
test
adc
fdivrs
sbb
sub
cmc
fisttps
fmuls
push
cmp
shrl
and
leave
mov
addr16
idiv
jecxz
es
dec
push
pop
mov
jnp
cs
sub
dec
movsb
cltd
adc
andl
lret
lahf
inc
sub
outsl
mov
outsb
in
dec
jle
adc
loopne
xor
daa
lret
fcmovne
mov
mov
loope
and
adc
les
push
dec
mov
cld
jbe
pop
outsl
mov
inc
mov
out
js
sub
cld
cs
or
jnp
pop
outsl
push
insl
aam
test
dec
loopne
arpl
shlb
scas
jecxz
jnp
jge
ds
xchg
or
movsb
hlt
adc
pop
dec
divl
sahf
into
cli
in
sarb
push
leave
mov
into
cltd
xchg
add
arpl
sbb
jmp
shlb
add
mov
pop
or
xchg
mov
push
xor
add
mov
or
xchg
mov
mov
ret
xchg
outsb
fstpl
sub
mov
inc
mov
xor
mov
mov
mov
add
or
stos
lret
pop
xor
mov
loopne
and
subb
xchg
sub
repnz
cmp
aaa
sbb
xchg
out
sbb
and
mov
xchg
pminsw
aas
imul
add
jo
push
jp
lret
pop
adc
outsb
jae
adc
pop
xchg
sarl
pop
movsl
mov
jno
pushf
xchg
fnop
sarl
sub
popa
insb
call
imulb
mov
fisubrl
and
orl
adc
jae
push
nop
mov
in
mov
ret
movsl
cmp
xor
es
add
pop
testb
pop
shll
add
clc
sbb
gs
popa
popa
push
jl
mov
dec
xchg
loopne
xchg
int3
sbb
imul
lods
cwtl
das
cmovle
flds
xchg
imul
outsb
cli
adc
in
cli
loopne
test
push
icebp
sbb
dec
adc
fdivrs
mov
push
cmp
into
xor
imul
outsb
push
cltd
adc
sbb
inc
stos
out
jmp
ja
jb
test
in
inc
stos
shrb
in
cmc
stc
movsb
push
sti
lret
and
pop
pop
test
mov
and
out
out
and
jg
pop
jno
inc
mov
ss
mov
movl
clc
adc
bts
mov
je
rcr
int
and
idivl
xor
cmpsl
scas
mov
adc
and
sub
pop
add
fisttpll
in
mov
dec
jb
mov
xchg
mov
ljmp
into
aas
mov
cwtl
adc
fcmovbe
test
and
pop
movsb
std
jnp
cwtl
sahf
mov
ljmp
pop
mov
hlt
mov
mov
loope
pop
pusha
adc
daa
mov
jnp
add
insl
fisubrl
jmp
cmp
or
pop
push
icebp
insb
call
rorl
mov
pop
stos
add
pop
popf
out
push
xchg
jge
fstpt
cmpsb
jns
syscall
fs
repnz
mov
mov
push
adc
sbb
into
ljmp
int
lds
fsts
movsb
or
rcl
in
dec
aaa
aam
ret
cli
movb
mov
movb
xor
shrl
cmp
les
imul
and
xchg
xor
sbb
nop
loop
dec
nop
js
es
push
add
loopne
mov
lds
mov
or
mov
add
mov
incl
dec
or
cwtl
inc
insb
inc
xchg
inc
cld
mov
dec
xor
sub
add
imul
js
and
lret
rcrl
cmp
mov
bound
add
jge
xchg
jo
mov
lret
xor
push
dec
lcall
repnz
dec
push
mov
push
adc
out
stos
xchg
icebp
and
adc
or
xor
xchg
cmp
mov
or
pop
bound
mov
sbb
or
fistl
cmp
and
pop
lods
ret
sbb
loope
sarb
ss
out
add
cltd
jle
mov
cmpsl
test
iret
in
stos
fcom
sbb
mov
aad
or
jp
push
pop
test
lahf
movsl
scas
sbb
test
dec
aaa
mov
lds
push
insl
mov
pop
inc
pop
jnp
jmp
xor
mov
stc
insb
dec
leave
cmp
add
stos
movl
test
cltd
push
mov
mov
int
out
stc
push
divb
mov
imul
pop
push
filds
scas
mov
cltd
and
or
xchg
in
mov
xlat
imul
dec
iret
pop
pop
xchg
push
push
popa
orps
lods
lods
ret
cmp
and
stos
pop
xor
test
shl
push
or
mov
incb
lret
daa
push
cwtl
xchg
in
dec
mov
fsts
push
loope
jnp
call
fisubs
jbe
notl
mov
sbb
push
cmp
xchg
sbb
rcl
les
adc
repz
sbb
andl
inc
xchg
lret
aaa
or
dec
pushf
mov
in
ret
inc
int
iret
in
int3
mov
data16
xor
xlat
and
cld
push
mov
add
fidivrl
ret
inc
push
push
int
mov
scas
push
mov
jne
inc
das
inc
xor
mov
es
mov
movsb
push
and
cmp
add
scas
lret
inc
push
nop
pop
jns
test
lea
push
cmp
movsl
sarb
xor
lods
cmp
aas
in
insl
or
inc
mov
cmp
daa
inc
dec
mov
inc
insb
xor
lea
sub
add
pop
cmpl
mov
lods
mov
jns
mov
sbb
or
shlb
sbb
push
or
mov
in
out
mov
xchg
inc
pop
push
lods
in
arpl
jle
sbbb
test
repz
xor
adc
mov
loop
mov
jne,pt
insb
data16
jmp
push
jns
scas
or
js
fwait
push
pop
pop
xor
call
cmpsl
mov
scas
pop
rorl
movl
cmc
negl
out
mov
int3
je
push
mov
xchg
dec
xchg
inc
loopne
xchg
call
mov
outsl
das
jl
mov
sub
mov
fiaddl
push
mov
adc
sbb
data16
insl
outsb
inc
sub
cmp
ja
or
ret
and
sub
lret
ss
insb
mov
add
movsb
add
push
mull
cmp
jo
jecxz
cmc
fiaddl
jb
leave
mov
sub
fdivrl
xchg
dec
push
arpl
sbb
out
add
mull
stos
pop
push
int
cmpsb
test
and
pop
adc
xchg
and
dec
mov
aas
gs
adc
add
sub
cmp
pusha
dec
xchg
arpl
gs
add
es
or
inc
and
push
aam
sti
leave
in
pop
mov
roll
mov
sbb
out
and
cmp
sbb
popf
insl
xor
dec
mov
adc
in
cli
xchg
sub
into
fsubl
or
aam
iret
jb
dec
sbb
loop
inc
ret
xchg
mov
jg
add
mov
out
ret
inc
pop
jae
and
cmp
push
stc
addr16
jbe
cmp
mov
adc
out
push
push
and
into
jne
popf
mov
dec
dec
sbb
lahf
pop
popf
gs
add
cwtl
aas
or
mov
xchg
stos
jecxz
pop
pusha
jge
cmpsl
outsl
test
push
or
loop
mov
rclb
mov
aaa
xor
xor
pop
jecxz
es
sbbb
cmp
cmp
and
push
pcmpgtw
shlb
int
daa
lods
stc
int
lcall
rcrb
call
daa
mov
xchg
push
inc
in
xchg
adc
aas
sbb
xor
adc
cmpsl
jge
int
jmp
sbb
push
jg
sahf
jg
push
pop
push
xchg
xor
addl
pop
mov
aad
lahf
scas
jge
xchg
cmovl
xor
jge
jno
js
mov
insb
mov
aas
les
sbb
push
out
sbb
jecxz
mov
sbb
into
jp
mov
loopne
push
and
stos
push
add
adc
stc
lods
cmp
movsb
xchg
xchg
add
out
mov
fs
mov
add
xchg
stos
iret
mov
sbb
add
dec
movsl
fistl
arpl
jge
sti
xchg
out
adc
pusha
sbbl
mov
jb
pop
pop
mul
and
filds
addr16
daa
adc
fxch
xor
cmp
push
mov
sarl
jb
dec
rorl
inc
mov
shrb
mov
jno
test
mov
js
or
xchg
jl
xchg
rcll
js
ja
add
decb
data16
movsl
sbb
inc
jae
test
lods
add
mov
jae
jbe
leave
stos
adc
sub
push
gs
in
dec
es
or
pop
xchg
xor
cmp
fs
pop
xor
adcb
pusha
punpckldq
in
mov
imul
sbb
insb
push
push
jns
test
jo
add
xor
fcoml
dec
aas
mov
jle
mov
sbb
dec
pop
out
divl
addr16
mov
inc
shl
loopne
aaa
aam
es
lret
pop
cld
dec
mov
mov
mov
cmpl
out
push
jnp
repz
stos
jnp
sbb
mov
xor
ret
jnp
fisubrs
jo
inc
push
jo
sub
cld
mov
lds
ljmp
cmp
sub
cld
jle
ret
bound
add
cwtl
or
xchg
add
dec
or
jp
andb
xchg
inc
push
xor
inc
movsl
imul
test
jl
dec
cmpsl
icebp
or
stos
cmpsb
sub
jmp
mov
inc
lret
negl
xor
dec
testb
mov
inc
movsb
sub
xchg
imul
mov
xchg
adc
mov
clc
inc
mov
inc
xor
shll
into
dec
outsb
pop
dec
fists
mov
outsl
cmp
inc
aad
jp
jle
movsl
in
ficompl
xchg
mov
or
in
mov
push
xor
mov
cmp
rcll
test
add
inc
in
imul
xchg
xchg
adc
loop
cld
movsb
push
nop
aaa
add
pop
xchg
push
add
dec
into
xchg
cld
sub
shll
sar
push
adc
xchg
stc
icebp
ret
mov
jmp
or
sub
test
fldcw
sub
std
lods
jge
test
push
aad
xor
mov
aaa
lods
pusha
das
jns
xor
scas
add
int3
das
add
test
adc
dec
orb
adc
lahf
sub
jae
shll
push
rcrb
xchg
xor
xchg
aam
mov
pop
inc
insb
popa
in
sub
fwait
mov
decb
outsb
sti
xchg
push
sbb
xchg
insl
add
mov
mov
es
aad
mov
xchg
sbb
xlat
aam
sbb
jg
aas
fdivl
mov
movsl
imull
cmp
and
into
or
lods
movsb
iret
fimull
int3
adc
orb
pop
dec
sarl
loop
ret
shl
sub
push
pop
sarb
jmp
divb
xchg
orl
add
jnp
jne
push
lahf
ss
xor
push
and
add
jbe
xorl
xor
inc
xor
sbb
mov
mov
jle
cmp
mov
xchg
out
lods
push
xorb
dec
std
dec
jge
xchg
push
xor
cld
xchg
push
in
jg
rcrl
inc
cmp
or
aad
add
repnz
jg
pop
adc
lds
xchg
add
std
xchg
int3
lahf
mov
jle
cmp
cld
imul
push
dec
sbb
add
cmp
rorb
or
aad
fisubs
cmp
es
leave
shrl
sahf
ja
jmp
lods
je
mov
jo
aas
out
jae
or
out
ss
repz
icebp
lods
xchg
nop
jle
fdivr
cld
mov
and
jbe
mov
cmp
add
decb
mov
and
popf
dec
lds
jb
jb
mov
xchg
clc
pushf
pop
dec
and
bound
cmpsb
lcall
ljmp
xchg
repz
popf
pusha
pop
test
mov
ret
sbb
lock
je
fisubl
imul
and
jo
cmp
sahf
insl
jo
jo
frstor
mov
sub
pop
mov
and
adc
scas
mov
mul
push
mov
test
mov
fwait
ret
cltd
ss
mov
xor
jbe
repz
cmp
and
ds
daa
rol
les
or
and
in
push
repnz
pop
mov
push
adc
sarl
scas
fisubrl
cmpsb
pop
dec
adc
enter
fwait
icebp
loop
push
mov
clc
pop
cltd
mov
mov
mov
sub
adcl
xlat
xlat
dec
jg
stos
push
cli
jae
xchg
iret
outsb
testl
and
dec
xor
in
cmp
fwait
dec
fwait
inc
adc
dec
movsb
cwtl
xor
ror
xlat
mov
scas
out
push
mov
push
test
loop
fwait
insb
pop
xlat
inc
iret
subl
ret
fincstp
push
mov
jle
addl
push
or
mov
enter
into
mov
in
sub
add
and
xor
mov
fwait
loop
sbb
ja
and
addl
mov
ss
call
jbe
add
xor
insb
addb
stc
jo
insb
add
push
push
out
lods
sub
dec
bound
leave
sysret
call
and
addr16
inc
cmp
test
aas
lret
inc
scas
inc
jp
mov
inc
rclb
jb
cmp
inc
add
and
sti
shrl
adc
or
sub
cmp
aaa
pop
ja
sbb
rorb
push
mov
cs
adc
in
sbb
sub
pop
shr
sbb
js
fmuls
pushf
clc
xchg
push
pop
loop
mov
xor
adc
pop
adc
mov
repnz
lret
fdivs
mov
pop
mov
outsb
in
jbe
ret
inc
std
mov
dec
ja
inc
xchg
lds
in
sub
mov
mov
fsub
jecxz
repnz
push
ds
or
cld
mov
movsl
sub
in
cmp
loopne
jmp
xor
pop
xor
mov
jmp
cmp
add
xorl
and
lahf
xor
es
xor
cmp
mov
mov
stos
jnp
bound
dec
out
ja
push
and
fcmovnb
push
sarb
add
out
cmpsb
xchg
lahf
xor
int3
pop
fldt
addb
rorl
aas
sub
sti
pop
or
and
push
adc
or
rcr
or
out
pop
les
sub
repz
push
mov
pop
mov
mov
pop
mov
ds
sbb
pop
paddd
stc
or
xchg
pusha
mov
loope
push
mov
orb
adc
out
sbb
dec
call
mov
inc
dec
es
jmp
les
or
push
jo
mov
jg
cmc
pushf
xlat
add
pushf
lea
inc
icebp
insb
push
mov
adc
xchg
xchg
jae
pop
adc
insl
push
repnz
daa
jb
jmp
mov
add
sti
aas
sub
fbld
fnstcw
jmp
jp
sbb
xchg
sub
xchg
xor
xchg
cs
cld
fldcw
bound
or
xor
iret
push
js
inc
repz
add
sbb
jbe
cmp
push
mov
push
cs
iret
push
cwtl
mov
dec
dec
push
clc
cmpsb
pop
mov
pop
imul
call
pop
mov
inc
and
out
lock
cltd
jb
lods
inc
xor
adc
test
in
xchg
sbb
fmul
or
js
out
push
test
fisubs
xorl
mov
xchg
fsub
xlat
rorl
icebp
mov
jae
sti
cmp
out
les
frstor
inc
dec
ret
push
jo
repnz
pop
bound
aam
push
mov
in
gs
xor
sub
cwtl
push
sbb
mov
fsubs
arpl
cmc
add
cli
sub
adc
clc
push
cmp
jb
sub
adc
xorl
negb
rcrb
addr16
push
cmp
cmp
cmp
adc
stc
pop
jecxz
pop
in
call
add
xor
test
cmp
sub
cmp
push
push
js
inc
pushf
aas
mov
inc
test
jae
adc
sub
jne
pop
in
mov
jl
jbe
loope
pop
popa
pop
sub
ret
adc
jae
mov
adc
push
insl
dec
xchg
cld
mov
loope
push
pop
add
lret
dec
jbe
push
sbb
outsb
xor
loopne
mov
ss
sbb
push
ss
iret
cltd
mov
sbb
mov
mov
mov
pop
sub
loop
enter
mov
jp
dec
mulb
cmp
jb
add
imul
xchg
add
mov
scas
add
leave
inc
out
cmpsb
int3
loope
jbe
loope
jge
sbb
dec
jg
pop
xor
pushf
daa
test
shl
sbb
aas
lret
add
mov
in
inc
xor
mov
imul
pop
aas
xor
mov
mov
xor
jmp
cmp
cltd
clc
stos
mov
inc
jae
in
out
mov
sbb
insl
mov
insl
cmpsb
jmp
jle
cmp
fcomps
and
es
jo
sahf
pop
sub
xchg
or
leave
add
sub
lret
mov
mov
ficomps
ret
jl
addr16
sarl
jmp
out
push
push
sub
or
xchg
shlb
adc
fwait
fs
add
mov
fcoms
mov
push
addr16
and
mov
xorb
adc
mov
cmp
lret
xlat
push
push
inc
add
jbe
fisttpll
or
sub
inc
movsb
sahf
shll
divps
lahf
jge
push
push
movsl
lods
mov
imul
out
push
popf
aad
push
xor
aas
fdivrs
add
das
cli
adc
aaa
mov
js
sbb
out
or
pop
outsb
mov
addb
inc
and
mov
push
iret
ds
push
dec
sub
test
mov
push
lcall
pop
xor
mov
aas
lock
sahf
sbb
and
and
loope
jns
pop
iret
or
js
pushf
std
and
sti
pop
lods
xchg
mov
icebp
fisubs
xchg
add
pop
in
movsb
sub
inc
dec
pusha
jae
sub
faddl
mov
loopne
mov
not
inc
sti
insb
pop
push
dec
movsb
jo
aad
test
movsl
lods
pop
icebp
aad
push
outsb
out
mov
sub
pop
imul
cmpsb
pop
adc
inc
or
aad
lret
sbb
fldcw
inc
mov
mov
fcmove
push
int
jg
leave
add
jp
push
rol
pop
or
jg
sti
cs
inc
lock
add
mov
or
mov
and
aad
das
inc
loope
xor
and
sbb
fcmove
mov
sbb
push
pop
call
xchg
sahf
cwtl
push
adc
mov
inc
ja
xchg
mov
jns
nop
aaa
add
mov
ffreep
fucom
inc
push
nop
push
cmp
xchg
cmpsb
shll
sub
bnd
push
mov
inc
xor
cmpsb
jns
in
cld
movsb
mov
ret
and
jns
cmpsb
xchg
mov
pop
inc
aam
popf
decl
and
jmp
in
pop
and
movsl
inc
cmp
ror
lahf
cmp
ljmp
repnz
cmpsl
sbb
pop
hlt
lret
mov
loop
sub
cvttpd2dq
push
pop
pushf
jno
pop
sarb
jle
icebp
add
push
inc
insb
cmc
outsb
or
das
jo
push
mov
inc
or
or
pop
fsubr
popf
inc
lock
xor
push
cmpsb
lret
enter
shlb
add
sub
dec
cltd
jne
pop
pushf
loop
pop
adc
mov
popa
dec
scas
xor
sub
push
mov
ja
rcll
vpmacsdd
mov
sub
adc
out
cmc
add
inc
scas
addr16
popl
lds
and
pop
fsubl
out
xchg
jecxz
cmp
lock
popa
xor
dec
int3
out
xor
jp
xlat
cld
std
or
aad
cmc
into
mov
int
dec
fdivl
sub
or
aas
test
ds
test
adc
inc
jl
adc
pushl
pop
lret
add
fldenv
fisubrl
cmp
aaa
sbb
sbb
stos
and
stc
xchg
mov
mov
iret
and
and
je
jnp
sbb
inc
and
push
or
test
psadbw
ja
das
jl
mov
out
adc
cmpsb
dec
pushf
pop
and
aam
loopne
daa
ficompl
push
sbb
lods
add
inc
inc
jp
or
enter
punpckldq
or
es
push
adc
inc
lahf
mov
enter
cmp
mov
adcl
mov
lahf
imul
and
cltd
jl
popf
testb
sbb
adc
push
push
jno
insb
lcall
shrl
add
out
popf
inc
shl
inc
dec
xorb
or
mov
into
aaa
jno
jnp
push
cli
dec
pop
ja
lahf
jg
movsb
mov
sar
cmp
adc
sub
xchg
movsb
xor
mov
andb
scas
inc
out
adc
enter
adc
jl
jno
jae
das
rcll
mov
mov
mov
mov
xor
jecxz
iret
push
loope
xchg
stos
jbe
aad
ret
dec
insl
loopne
data16
sbb
inc
mov
mov
dec
inc
sbb
push
test
iret
daa
mov
push
mov
imul
xchg
jne
jne
in
mov
cmpsb
push
movsb
movsl
xchg
or
out
daa
js
jae
pop
or
push
dec
dec
xchg
popa
test
dec
sub
cmp
push
push
das
bound
sbb
ljmp
xor
inc
adc
in
pop
pop
xchg
test
and
cltd
rcll
test
movsb
pop
push
fidivl
cs
mov
nop
jmp
popa
frstor
lahf
inc
clc
in
clc
cmp
adc
sub
push
in
add
cmpb
mov
stos
mov
scas
xor
mov
pop
jge
adc
or
movsb
daa
ja
hlt
imul
hlt
jno
xchg
sbb
sbb
gs
popf
cmp
test
fsubl
jne
sbb
movsb
lret
arpl
stc
adc
movsl
scas
in
cli
or
lahf
or
xchg
adc
and
mov
stc
scas
and
test
pop
popa
or
movsb
and
neg
pop
push
out
test
in
loop
xor
jne
xor
xchg
loop
and
pop
mov
sbb
pop
cmpsb
rolb
mov
es
rcl
orl
mov
js
add
movsb
divl
outsl
mov
mov
bnd
xchg
jp
fwait
arpl
test
ret
gs
jp
inc
or
xchg
frstor
in
out
pop
cltd
int
call
ss
dec
cli
mov
mov
movl
mov
int3
pop
outsb
fimuls
call
cmpsb
add
fwait
pop
iret
pusha
cmp
in
pusha
fsts
fildl
add
xor
imul
dec
mov
inc
fcmovu
add
hlt
mov
or
subb
push
xchg
and
stc
jl
lock
inc
push
jle
jns
cs
lahf
pop
jg
inc
sub
insb
dec
lcall
sahf
sub
xchg
pop
cmp
mov
jg
mov
jp
in
xchg
gs
adc
push
cmpsb
xchg
bnd
jp
in
or
nop
inc
fiadds
jno
ja
mov
mov
cmp
aas
lret
clc
lods
inc
repnz
mov
jmp
aad
and
cmpsb
js
mov
cli
xchg
stos
add
mov
sbb
enter
jb
pushf
loopne
xor
xchg
or
cmp
pop
sti
lock
ret
call
pop
mov
pop
sub
jne
adc
xor
sub
push
loop
jmp
jb
scas
leave
pusha
push
push
cmp
add
aam
sbb
inc
jnp
adc
or
mov
testb
cmp
shl
lcall
xor
inc
lahf
push
icebp
stos
xor
fwait
inc
inc
jo
sub
pop
xchg
mov
repz
movsl
mov
xlat
scas
pop
adc
loop
dec
pop
jmp
xchg
sbb
jg
inc
call
dec
cmp
mov
cmpsl
pop
out
cmp
and
clc
int3
cmpsl
add
mov
idivb
jl
movsb
ja
adc
pushf
xor
int
sub
push
inc
xchg
cwtl
adcl
shll
fcoml
test
je
dec
in
pop
repnz
in
dec
bound
out
ljmp
dec
sbb
imul
call
pop
ror
cmp
insb
cwtl
rorl
mov
add
fld
arpl
data16
inc
sbb
out
movlps
dec
test
data16
mov
mov
sahf
shrl
faddl
dec
xchg
or
jge
ljmp
push
xor
sbb
enter
movsl
jo
fisttps
cmp
pop
lea
mov
lret
cmp
or
xor
aad
cltd
or
and
sbb
jbe
pop
and
clc
fdivrs
mov
push
inc
push
xchg
mov
pop
jno
mov
push
sbb
push
test
dec
ja
push
inc
sbb
sbb
pop
mov
std
and
inc
xchg
adc
pusha
out
js
push
and
sbb
in
and
lea
sub
push
imul
mov
ss
repz
repz
int3
pusha
out
movb
cmp
sahf
nop
push
das
or
loope
leave
sub
push
jns
inc
movsl
int3
sti
mov
add
pop
adc
xchg
inc
ret
adc
cmpsl
fcoms
ds
dec
mov
jle
das
movsb
lods
in
insb
or
dec
and
pop
sub
js
lods
nop
arpl
inc
mov
int
sub
fstl
dec
mov
repnz
out
xor
pop
or
push
sub
stos
rcl
xor
mov
or
fmull
cmp
dec
adc
lods
adc
les
pop
lahf
dec
and
test
push
xlat
incb
xchg
add
adc
sbb
mov
scas
mov
xchg
in
pop
repz
jae
repz
es
mov
outsl
mov
add
and
pop
sbb
push
sbb
or
jbe
clc
in
sub
and
inc
out
mov
jl
fdivr
sbb
movsb
mov
adc
cwtl
lret
push
mov
jne
aad
iret
loop
xchg
movsb
mov
rorb
aad
int
mov
adc
xchg
shlb
jno
cmpsl
pusha
addl
sarl
fdivrl
daa
jns
add
sub
jns
add
pusha
push
das
jge
int
aad
cmovp
mov
movsb
inc
lds
sub
icebp
xor
shlb
nop
xor
mov
xor
lods
rcrl
int3
xor
jle
mov
loop
xor
jns
dec
int
rcll
enter
sbb
mov
bound
xor
inc
lahf
add
dec
sahf
subb
inc
mov
movsb
ss
in
and
leave
xchg
pop
cltd
loope
outsl
cmp
xchg
bound
adc
stos
into
mov
dec
xchg
test
mov
cltd
jle
pop
cs
rorb
pop
fs
popf
rorb
bound
push
push
arpl
iret
push
xlat
out
clc
orl
or
push
scas
clc
pop
and
jmp
dec
jecxz
mov
and
and
clc
mov
mov
mov
test
loop
stos
int
push
int
and
nop
push
dec
rcrl
sub
add
cmp
push
mov
aaa
jl
push
xchg
std
or
mov
push
sbb
fwait
sub
nop
inc
aaa
mov
in
mov
loop
gs
or
loop
fists
std
sub
dec
insb
std
lret
dec
sbbl
inc
mov
lock
pop
fs
or
leave
addl
jo
inc
hlt
inc
add
sbb
ljmp
outsl
xchg
aaa
jnp
fsubl
jl
fwait
and
movsb
pop
xorb
in
dec
leave
mov
in
cmpb
outsb
adc
sbb
out
andl
mov
rep
pop
sbb
adc
pop
xchg
cmp
xchg
popf
daa
sub
jb
test
mov
sti
rcl
jo
cli
inc
mov
dec
pusha
leave
iret
subb
pop
sahf
mov
pop
imul
sbb
inc
push
out
loop
xchg
mov
xor
in
daa
out
jmp
add
mov
or
xor
jg
test
mov
cmpsl
dec
xor
jle
sbbl
add
push
in
movsb
xchg
scas
lea
movsl
pop
in
insl
cmp
add
frstor
pop
out
nop
inc
lret
sahf
imul
test
xor
stos
cmp
jecxz
adc
lods
pop
jmp
mov
call
mov
cmp
xchg
into
cmpsl
jo
call
xor
lret
pop
push
in
push
fwait
pop
sub
nop
pop
xchg
mov
mov
in
sti
mov
ja
out
fisubrl
aas
jae
dec
mov
icebp
jg
or
jb
inc
and
sbbl
test
xchg
pop
push
ja
loopne
jbe
fwait
cmc
pop
mov
push
je
out
test
mov
das
and
mov
aas
test
imul
sti
mov
ror
xor
push
xchg
jg
and
push
xlat
je
xchg
dec
xor
hlt
popa
lea
cmpsb
push
or
cltd
ja
xor
movsl
add
xorb
xchg
fdivrp
sbb
shrb
cmp
dec
sbb
add
dec
pushl
fwait
jmp
jp
add
insb
stc
dec
adc
pop
gs
cmpsb
xchg
popf
imull
dec
cmp
cwtl
inc
lret
ud1
dec
orl
jl
es
das
dec
test
mov
push
pop
loopne
dec
mov
or
mov
xchg
into
es
mulb
adc
outsb
fdivrs
xchg
aad
sbbb
outsl
and
and
mov
xorb
nop
jmp
inc
pop
or
or
or
pop
sbb
lcall
pop
jnp
lods
sar
fisubrs
jecxz
addr16
mov
pop
dec
ds
cltd
icebp
stos
jno
add
mov
jne
push
cmp
ds
cmp
xchg
mov
cli
cmp
cmp
pop
fimuls
adc
jg
pushf
xor
daa
inc
mov
dec
adc
inc
jg
mov
iret
js
jo
mov
sub
rol
ds
add
ds
ljmp
inc
adc
xchg
add
dec
pause
or
shl
or
xor
movsl
and
push
jne
popf
jle
ret
leave
lods
mov
repz
dec
jmp
std
mov
dec
scas
push
in
add
popa
cmp
dec
lds
int
inc
jecxz
xor
pop
add
and
jne
shll
clc
add
mov
int
aad
inc
ret
mov
lcall
mov
imul
jge
jnp
or
push
mov
or
movups
sbb
push
int
add
repnz
and
popa
push
stos
roll
in
push
sbb
add
xstore-rng
cmpsl
ret
test
adc
adcb
fisttpl
jg
add
xor
jne
dec
pop
jmp
ds
pop
cmp
cmp
out
dec
jecxz
mov
outsb
test
sub
lods
inc
ffree
pop
push
out
pop
mov
jae
fidivrl
xchg
sbb
pop
and
fwait
rcl
jb
ror
jge
xor
pop
and
rorb
pop
mov
jmp
ss
gs
sti
leave
inc
jnp
popf
imul
fstl
popf
push
mov
jae
je
sahf
sti
aas
sub
push
andl
mov
push
lods
jns
stos
js
dec
add
mov
xchg
cltd
cld
push
mov
dec
int
imul
jl
andl
xchg
int3
arpl
jo
hlt
hlt
cmp
sbb
das
jo
mov
jmp
mov
ss
pop
je
popa
mov
inc
push
add
cwtl
loopne
mov
or
jns
insb
scas
cmp
movsl
adc
and
pop
test
in
mov
adc
pop
ss
xchg
xchg
and
cmp
out
pushl
stos
adc
mov
mov
sbb
fsts
bound
fmull
jb
push
push
imul
stos
pop
ret
call
dec
dec
inc
stos
cwtl
lods
mov
xor
xlat
ja
call
push
mov
push
xor
push
mov
pop
pop
into
sbb
and
xor
into
mov
gs
jl
lret
hlt
mov
loopne
jecxz
jge
stos
lahf
push
xchg
xchg
ss
icebp
inc
and
cmp
adc
test
pop
nop
jbe
jle
lcall
sbb
cmovl
testl
xor
sub
mov
mov
push
pusha
mov
repz
dec
jb
push
jno
push
fwait
imul
pop
adc
arpl
popa
inc
and
lods
shll
and
lock
mov
aas
shlb
and
mov
and
pop
iret
and
mov
mov
test
loope
sbb
push
and
sub
cmp
scas
inc
jae
xchg
imul
cmp
sub
xor
push
insb
aad
es
leave
scas
sbbl
xchg
fldenv
out
pop
icebp
or
stos
add
and
ss
adc
outsl
ss
orl
scas
mov
lods
push
mov
pop
lock
mov
xor
sub
pop
add
ja
mov
es
mov
sahf
cmpsl
push
push
xchg
push
shrl
les
lds
and
outsl
xlat
xor
push
hlt
out
mov
test
int3
in
mov
or
imul
lret
push
push
pop
xor
mov
add
movsb
sarb
cmp
shll
cmp
xorl
in
sar
in
daa
imul
das
adc
call
inc
inc
pusha
cmp
adc
fs
fcmovnbe
jg
and
sti
fwait
push
mov
jnp
std
mov
scas
jmp
je
or
fcoms
movsb
rcrl
jb
dec
fnstsw
adc
mov
rcll
mov
jae
mov
clc
xlat
data16
cmp
push
test
popf
sub
call
pop
or
cmp
jle
pop
mov
cmp
dec
push
mov
mov
lahf
shll
mov
push
pushf
hlt
mov
inc
mov
add
daa
mov
xchg
mov
xor
popa
add
jmp
mov
mov
push
pop
icebp
lods
jmp
aam
xchg
ret
out
lods
pop
loop
push
lahf
lret
xchg
sahf
test
loope
insl
jbe
sub
aad
roll
mov
test
and
mov
insl
cmpsb
out
lds
jmp
fldenv
xor
pop
mov
addr16
lock
or
add
and
in
out
sbb
ss
or
xchg
mov
inc
lock
inc
pop
shll
sbb
test
pusha
push
notl
dec
rolb
popf
xor
movsb
mov
adc
out
lret
mov
xchg
xor
icebp
adc
sub
adc
int
les
pop
test
es
fadds
mov
jbe
mov
enter
jecxz
xchg
pop
xor
adc
js
xchg
xchg
mov
pop
mov
adc
test
popf
insb
and
mov
xor
fstpl
in
out
sbb
stc
push
iret
movl
imul
add
push
stos
outsl
enter
sbb
stc
inc
cmp
ds
xor
movb
scas
scas
mov
sbb
xlat
xor
clc
fisttps
insb
dec
mulb
jg
or
mov
idivb
pop
mov
testb
rclb
pop
lahf
jl
or
push
outsb
dec
inc
xlat
inc
dec
sti
dec
pop
mov
pusha
xor
add
add
test
or
shll
in
or
jbe
fnsave
lret
mov
sbb
mov
dec
mov
icebp
inc
push
hlt
sbbl
dec
in
mov
push
mov
out
popa
adc
fwait
add
mov
popf
sbb
lock
addl
xchg
out
cmp
sub
pop
iret
sarb
dec
in
sub
mov
mov
fsubs
enter
push
xor
adc
sbb
inc
fimull
jecxz
pop
js
xchg
jmp
jle
push
xor
pop
dec
pusha
or
jo
ss
jmp
cmp
cld
jmp
push
stos
ret
fs
mov
and
inc
sub
pushf
hlt
or
xor
lret
jbe
scas
jb
inc
xchg
dec
scas
cmpb
or
aam
push
or
dec
sbb
xchg
pop
std
or
lds
xchg
push
fwait
cltd
scas
les
lret
repz
add
xchg
out
jae
dec
jge
and
fistpll
sbb
int3
cmpsb
pusha
movsl
orb
mov
cld
pop
push
leave
xor
push
ret
rcr
imul
shll
dec
sbb
or
and
lods
xchg
out
fmull
aaa
stos
lods
leave
mov
vmread
inc
cli
inc
arpl
adc
test
movsb
xchg
mov
xchg
stc
or
or
adc
push
mov
aas
movb
xor
dec
hlt
cmp
dec
mov
or
push
adc
and
pop
gs
and
ja
mov
in
std
jecxz
bound
or
push
mov
add
mov
leave
repnz
popf
push
mov
sbbl
mov
lret
jle
sbb
cmp
adc
insl
call
adc
cmpsl
cmc
int
je
sbbl
dec
insl
jb
mov
inc
lds
jecxz
das
inc
rcll
outsb
xchg
sub
cmpsl
inc
mov
push
pop
push
push
fdiv
repnz
leave
mov
push
inc
sarl
dec
fwait
sbb
pop
test
sbb
mov
mov
xchg
lcall
push
and
movsb
into
clc
jg
test
nop
dec
lcall
adc
stos
and
mov
imul
xor
cmp
sub
xor
mov
lods
dec
pop
outsl
push
jg
roll
aam
stos
xlat
loopne
mulb
jl
ja
cmpsb
loope
pop
mov
fnstsw
jbe
push
and
stc
pop
iret
aas
push
jp
push
shrl
test
cmp
rclb
push
sub
push
popl
cld
daa
xor
pop
orb
mov
popf
arpl
ds
pop
sub
push
and
les
lds
dec
enter
fsubl
cli
cmp
jnp
shl
sbb
pop
inc
fmuls
mov
add
pop
add
aad
shll
pop
out
aad
or
jg
dec
pop
jl
inc
in
xchg
stos
stos
stc
rcrb
lret
jl
sbb
push
lds
je
test
cmp
jge
in
int
fwait
stc
jecxz
shrb
adc
xchg
js
or
mov
push
cmpsb
cmp
push
jmp
jno
push
mov
out
xor
enter
insl
mov
dec
dec
push
cmc
fmul
ja
xlat
enter
jmp
popa
jecxz
mov
aam
in
cmc
jbe
jb
cld
scas
adc
push
dec
mov
lods
sahf
adc
ret
fadds
push
push
mov
iret
sub
dec
sub
xchg
addr16
jmp
cs
mov
lock
xor
add
and
pop
inc
pop
sbb
sbb
fstpl
add
xor
cmp
sub
std
outsl
icebp
cwtl
outsb
xor
rcl
lds
aaa
or
aaa
sahf
shll
jmp
out
mov
mov
xor
pop
subl
xor
addr16
push
scas
push
mov
fsubrs
cmp
add
xchg
and
arpl
les
sbb
shll
scas
rclb
cmp
push
popa
cli
daa
movsb
iret
ja
pop
clc
movsl
repnz
addr16
pop
add
scas
cmp
rcll
inc
mov
xorb
daa
pop
shrl
cld
pop
push
xor
push
jbe
js
imul
cmc
loop
sub
cld
push
sbb
add
xchg
stos
test
mov
xchg
aas
jbe
inc
dec
aas
mov
aam
es
iret
scas
push
lret
pop
xchg
pusha
dec
lahf
filds
clc
jl
inc
insb
out
je
jns
lea
cmpsb
hlt
push
fisubs
repnz
add
and
add
pop
sub
stc
mov
iret
jb
xlat
out
cltd
or
fs
fwait
mov
adc
pop
xor
pop
pop
loop
push
xor
and
sub
leave
mov
and
mov
lock
int3
arpl
mov
adc
push
ficompl
nop
xchg
movsb
jnp
push
xchg
xor
lcall
mov
ds
xor
jbe
pusha
data16
jl
in
jecxz
daa
mov
leave
cmp
dec
mov
pusha
adcl
adc
inc
and
mov
enter
push
loope
into
mov
ja
jle
adc
jp
popf
stos
lcall
lret
dec
mov
into
mov
adc
ss
pop
shll
shll
sbb
in
in
or
and
cmpsl
push
sbb
lret
sbb
in
lcall
or
adc
jg
leave
or
xor
and
sahf
lret
fs
jle
repz
or
aad
adc
inc
stos
popf
adc
jmp
push
shll
out
dec
mov
stos
inc
adc
and
lock
sub
mov
pop
test
les
sarl
je
mov
pop
and
mov
jo
in
out
in
sbb
mov
push
mov
scas
std
cwtl
das
repnz
out
pusha
inc
rcrl
mov
and
mov
inc
push
int3
adc
pop
insl
fwait
or
inc
cwtl
sbb
in
or
mov
out
ss
and
nop
mov
mov
jge
dec
sub
std
xchg
mov
cmp
fwait
aaa
inc
inc
mov
nop
jl
push
push
jo
clc
push
mov
xchg
pop
push
sbbl
daa
inc
scas
std
xchg
cmp
hlt
jecxz
shlb
arpl
popa
and
jecxz
add
sub
in
inc
int3
lret
lcall
rcl
loope
scas
cltd
push
cmp
enter
shl
pop
repnz
push
jb
iret
push
cmc
push
in
xchg
pusha
cmp
push
dec
es
sbb
mov
lret
dec
les
sbb
ss
mov
lea
dec
mov
adc
sbb
lods
fadds
lret
addl
lds
fwait
hlt
scas
in
xchg
call
lret
sub
mov
cmp
sbb
or
xchg
test
cvtpi2ps
pusha
icebp
popa
hlt
sahf
subb
pusha
mov
xchg
addr16
inc
jecxz
adc
int
or
out
xchg
int3
int
jmp
lret
in
jmp
idivl
cld
jb
outsl
lret
pusha
ja
jge
adc
mov
xor
sbb
xor
mov
mov
cmpsl
js
push
xchg
mov
sbb
xchg
xchg
lock
inc
lea
xchg
addr16
and
jnp
fiadds
xor
dec
xor
popl
mov
mov
outsl
nop
mov
mov
sub
sub
lds
popa
dec
add
and
fs
dec
pop
mov
fiaddl
xor
shr
mov
lods
cmp
or
out
jecxz
in
repnz
and
or
or
in
xlat
push
and
xor
mov
jne
lcall
js
add
pop
xlat
xchg
jle
and
arpl
popf
jmp
pop
icebp
pop
pop
add
or
fcmovnb
aas
inc
xchg
push
movsb
mov
inc
popf
insb
jmp
mov
into
xchg
push
insb
inc
or
inc
lea
addr16
sti
ljmp
mov
pop
test
adc
mov
aam
pop
adc
pushl
or
jno
xchg
fnstsw
les
and
dec
xor
mov
movsl
cwtl
fmuls
or
mov
gs
es
and
icebp
js
stos
fbld
lea
insb
lods
xor
aam
pop
rolb
leave
xchg
pusha
pop
test
psubsw
out
push
jecxz
pop
popa
pop
sbb
mov
jecxz
lret
mov
jmp
idivl
js
xor
sub
out
sub
dec
pop
stos
push
cld
or
movsb
jle
cmp
mov
and
add
test
xor
iret
and
and
xchg
insl
or
or
push
call
sbb
sub
fs
sub
jns
and
and
sub
sbb
out
loope
xchg
xchg
adc
stc
xchg
push
pop
mov
mov
sub
into
fists
std
jo
push
ljmp
cmpsb
mov
sbb
sub
jl
in
bound
jg
or
leave
ja
mov
or
mov
enter
outsl
mov
in
dec
or
or
filds
shrl
push
jge
mov
xchg
cmp
in
or
add
fs
and
leave
xchg
stos
jl
mov
mov
lods
xchg
cmp
xor
adc
mov
cli
out
test
cmpsl
lods
jns
fiadds
pop
popa
mov
outsl
jne
jle
js
jo
pop
pop
ret
push
dec
into
or
std
mov
cmp
out
stc
pop
push
aas
and
xor
call
cmpsb
xchg
sub
es
inc
inc
or
jge
push
pop
jb
sahf
mov
jecxz
dec
je
xchg
lods
insl
das
cmc
fdivrl
inc
mov
pop
inc
sbb
repz
jno
fdivl
imul
push
mov
xchg
dec
shrb
je
mov
fdecstp
jp
inc
adc
xchg
sbb
loopne
cmp
jnp
cmc
pusha
pushl
cwtl
notb
iret
cwtl
daa
push
test
ljmp
in
enter
sarb
fbld
xlat
pop
mov
mov
dec
xor
iret
addl
sti
int3
pop
idivb
lret
sbb
mov
bound
jo
js
loopne
mov
sbb
add
clc
imul
lcall
jbe
push
popf
repnz
stos
or
sbbl
and
or
adc
cld
jmp
inc
roll
shl
outsl
andb
aas
or
fsub
sub
mov
jg
xor
fld
cmp
inc
in
mov
cli
adc
mov
ss
jmp
push
out
xchg
or
jbe
cmp
clc
add
stc
enter
add
std
or
fs
icebp
pop
insl
cld
pop
loopne
pop
push
pop
faddl
add
incb
fucomp
sbb
test
xor
mov
ss
jb
call
mov
sub
ret
add
lods
push
pusha
mov
push
ljmp
rolb
cmpsb
std
mov
sbb
sarb
inc
dec
lahf
sub
insl
lret
mov
sub
cltd
in
es
push
pop
pop
add
push
mov
push
xchg
std
lret
mov
dec
cmp
and
inc
cmp
or
outsl
sbb
repnz
sub
inc
jno
cmp
rol
jo
notl
mov
mov
call
aad
cmpsl
xor
jbe
jge
fisttpl
cltd
mov
shlb
in
xor
les
xchg
xor
mov
adc
push
cmpsb
icebp
sbb
loopne
mov
inc
enter
sbb
dec
sub
sub
lea
sbb
das
sub
add
mov
shl
push
adc
dec
outsb
dec
push
lods
rorb
jo
pop
mov
inc
clc
push
cld
lret
fnstsw
repz
jno
mov
adc
repnz
out
mov
push
nop
mov
xchg
std
sub
xchg
ljmp
pop
dec
daa
adcb
je
xor
add
out
sub
clc
scas
xchg
aaa
push
mov
xlat
xchg
cmp
cmp
daa
adc
lahf
aas
mov
repz
rorb
mov
rcl
mov
loop
adc
jecxz
mov
mov
adc
or
cmpsb
shl
xor
fnstsw
dec
sub
jmp
aas
mov
scas
cmpb
pushf
popf
mov
jb
lea
in
cmpsb
fistps
insl
jne
out
inc
aam
das
inc
mov
shlb
xchg
enter
sarb
ds
adc
pop
pop
pop
sbb
xchg
mov
jg
sub
int3
adc
lcall
push
xchg
ror
rorb
xchg
pop
dec
or
mov
leave
inc
push
icebp
mov
jg
outsb
xchg
pop
jle
mov
jl
daa
icebp
inc
mov
movsb
mov
arpl
lcall
fwait
xchg
mov
cmpsl
inc
sahf
push
and
lds
dec
xchg
mov
pop
adc
es
ljmp
lcall
outsl
popf
outsl
lods
frstor
sub
adc
ljmp
or
xchg
imul
iret
in
cli
lcall
mov
cmp
fwait
adc
hlt
push
push
cmp
inc
inc
test
jl
sti
dec
insl
mov
scas
das
push
dec
cwtl
movsl
jne
lods
add
xor
aam
pop
xor
pcmpeqw
mov
lret
scas
lret
out
cmp
mov
xchg
dec
jl
pop
push
test
fidivs
cmpsl
jo
loopne
push
leave
ss
xor
loope
jg
gs
jp
call
fisubrs
jns
imul
stc
add
enter
loope
pop
sub
pop
cmp
addr16
sahf
stos
lahf
mov
push
mov
pop
xlat
data16
mov
cmp
dec
sbb
mov
stc
adc
shll
sti
mov
add
sti
fsubrl
in
arpl
jl
loop
cmpsb
push
lods
add
jge
cld
cmp
popa
sbb
add
hlt
fisttpll
push
sbb
loope
mov
leave
add
and
xchg
loop
int
fcoms
jg
cmp
xor
shll
insb
test
push
or
insl
addr16
mull
inc
dec
add
js
cmpsb
mov
out
stos
scas
pop
fdivrs
insb
fiaddl
daa
and
addb
pop
imul
pop
cmc
mov
push
dec
push
xchg
fdivrs
test
jmp
ret
inc
shl
sub
sbb
shl
cmp
jne
jns
mov
dec
call
jecxz
xchg
stos
sub
jmp
push
mov
inc
inc
inc
mov
pop
push
push
mov
rolb
out
lods
push
jae
les
in
push
xorl
sbbl
adc
je
mov
dec
mov
jno
std
add
cmp
lock
jmp
dec
adc
sti
into
cmp
fldl
ret
mov
clc
roll
mov
sub
xor
lret
fsubrs
and
cmp
xor
lods
divl
or
and
lcall
arpl
aas
push
mov
sbbl
mov
adc
ljmp
arpl
mov
cmp
movsb
xor
mov
inc
or
dec
fisttps
push
call
repnz
mov
ja
hlt
sahf
sub
mov
adc
dec
xchg
push
rcrb
sub
or
adcb
pop
xchg
push
dec
pop
mov
shl
test
and
orl
loop
cltd
popf
sub
lcall
jns
mov
lret
daa
adc
add
and
xlat
icebp
jecxz
cli
clc
fnstenv
adc
pop
popl
lret
pusha
stc
mov
sub
add
mov
mov
notl
pusha
mov
addr16
repnz
dec
jmp
sti
ljmp
or
and
pop
adc
jl
int
je
push
aam
pop
test
dec
adc
je
popa
jg
stos
int3
xor
loope
jg
add
cld
pop
add
inc
add
dec
popa
and
ret
xchg
cmp
sub
rolb
sub
inc
mov
fmull
enter
fsubl
or
xchg
and
add
imul
cmp
cmpl
data16
xor
aad
cmp
fwait
ret
push
and
int3
xlat
add
cltd
insb
pop
jne
mov
mov
lds
lahf
xchg
iret
movsl
das
aad
jne
fcoml
out
dec
sbb
cmc
gs
mov
enter
sbb
das
rcrb
ffree
jae
jecxz
add
mov
cmp
jne
jmp
mov
in
jnp
push
sub
and
and
xchg
and
repz
sub
xchg
jl
adc
in
pop
insl
push
xchg
adcb
call
dec
shl
nop
mov
and
inc
pop
lock
aas
enter
outsb
inc
lcall
inc
into
popf
fwait
arpl
pop
fisttpll
cmpsb
xchg
mov
jmp
pop
ss
popa
lahf
jae
jge
pop
je
inc
mov
ljmp
inc
rol
cli
push
and
and
add
cmpsl
mov
adc
cwtl
add
ret
dec
adc
pop
pushf
shlb
scas
leave
dec
outsb
or
pop
jo
push
test
icebp
pop
movsl
pop
sub
outsl
es
inc
pushf
cmpb
dec
push
scas
fiadds
mov
clc
test
add
leave
and
sbb
mov
xor
in
rcll
fisubrl
fs
orl
in
mov
cld
lahf
xor
pop
sbb
and
sbb
cmp
push
or
adc
cli
repz
ret
neg
pop
add
sub
dec
lret
out
and
sbb
cs
mov
and
addr16
int
push
mov
cwtl
push
mov
hlt
imul
lea
pop
xchg
pop
pop
mov
pop
sbb
pop
ret
sub
pop
jnp
fdivrl
cmpsl
in
in
out
mov
sbb
jl
and
or
outsl
outsb
xlat
popa
jmp
je
lret
pcmpeqb
pop
fsubs
push
pop
or
and
loopne
inc
mov
ror
daa
xchg
sbb
push
jp
popf
inc
sbb
sub
cltd
xchg
and
xchg
adc
das
xchg
loopne
cmp
mov
pop
pop
hlt
inc
enter
or
leave
mov
fwait
test
leave
sub
mov
shrb
adc
adc
sbb
sub
xchg
loop
stos
arpl
mov
sub
lods
cwtl
cmp
lock
mov
cmp
shrb
inc
push
sbb
or
int3
outsl
in
loopne
xchg
aaa
or
xchg
and
lods
pop
mov
aam
dec
jne
xor
lea
lods
jae
or
hlt
lea
cs
pop
mov
roll
inc
out
or
jno
mov
pop
xor
sbb
mov
movsb
out
ss
test
adc
loopne
sbb
inc
shrb
cli
setnp
lahf
rorl
cmp
sub
js
push
lcall
jl
xchg
jb
fildll
mov
gs
int
sub
mov
cmpsb
cli
inc
adc
push
xchg
cmp
cmp
sahf
jne
sahf
gs
cmpsb
mov
dec
ja
fcmovnb
add
popf
mov
xchg
repz
add
adc
call
mov
and
jmp
fldenv
jne
leave
push
jle
cmp
int3
or
repz
addr16
sub
imul
and
loope
jae
vmaxps
mov
inc
lahf
negl
subl
mov
mov
cli
daa
lea
call
lock
lret
push
jg
cwtl
stc
jns
xor
xchg
repz
ss
enter
push
xor
adc
pop
aaa
mov
mov
shrb
lods
and
jnp
inc
jg
test
push
stc
jno
cltd
push
arpl
sbb
jo
dec
mov
inc
pop
dec
or
pop
bound
sbb
subb
and
xor
pop
adc
push
cmp
hlt
push
inc
push
dec
outsl
dec
les
rolb
mov
add
jbe
clc
and
cmpsb
sub
lahf
imul
or
cmpsb
mov
loope
or
jnp
and
mov
add
iret
fdivrl
xor
sbb
jge
test
scas
sub
repnz
xchg
jo
adc
xchg
test
dec
ficoml
mov
test
loop
cwtl
cmp
cmp
sbb
mov
mov
cwtl
aas
fisubrs
out
jmp
out
mov
mov
pop
mov
mov
in
cli
pop
xchg
sbb
into
cmpsl
push
in
xor
fldl
push
fistpl
or
dec
mov
push
push
fiadds
popf
fs
push
adc
in
dec
andnps
lret
xchg
or
pushf
cwtl
orl
sbb
fwait
push
andl
add
jnp
out
pop
imul
jle
dec
mov
mov
jge
cmpsl
iret
push
test
out
inc
push
fdivrp
pusha
inc
icebp
cmp
sbb
push
jmp
add
mov
jmp
repz
sbb
rcr
addr16
insl
lds
jle
xchg
scas
lahf
out
loope
sbb
jb
mov
mov
jns
inc
bound
sub
clc
and
insl
add
cmp
cmp
or
push
arpl
pop
jns
push
rorl
pop
mov
aam
sub
jns
imul
inc
jmp
mov
shrb
cmp
cmp
cmp
mov
popa
ja
ffreep
je
push
jne
jp
push
test
shr
dec
jns
fwait
xchg
adc
shll
mov
lahf
int
pop
cmpsl
nop
call
jg
pop
or
adc
cmp
shll
sti
fmuls
cmc
pop
nop
xor
imul
inc
scas
popa
xchg
cmp
jo
stc
test
sub
lret
mov
mov
push
xor
sahf
fnsave
into
jge
xor
push
inc
outsl
shlb
iret
push
lds
mov
testb
rcll
xor
ljmp
jae
int3
cwtl
hlt
mov
cmp
leave
dec
xchg
mov
out
pop
fisttpll
in
jg
loope
add
sbb
arpl
dec
dec
pop
dec
push
inc
jne
fnstsw
ror
cmp
es
js
sbb
xchg
inc
inc
or
push
jo
mov
pop
int3
inc
jl
or
stc
pop
fwait
pop
inc
imul
mov
push
xor
fldenv
push
aam
and
push
and
or
inc
add
mov
scas
mov
or
jge
andl
fdivs
add
ficoml
adc
rclb
inc
sbb
or
jecxz
into
stc
in
test
movsb
pusha
mov
sbb
lcall
decb
imul
add
adc
dec
pop
mov
xchg
out
repz
ficomps
stos
xchg
dec
pop
mov
and
pop
lods
cmp
popf
les
pusha
cltd
jg
pop
outsb
scas
ljmp
mov
xorb
xchg
or
int
mov
sub
xchg
in
ret
mov
lcall
cld
mov
testb
idivb
cmc
and
mov
push
lea
fildl
adc
shll
shlb
out
inc
cmpb
aad
jnp
sbb
cmp
enter
out
dec
adc
mov
cwtl
rcrb
dec
push
or
ret
push
subl
and
mov
push
mov
mov
mov
fnstenv
sub
xchg
jmp
bound
xor
inc
sbb
outsl
pop
dec
pop
inc
cltd
test
pop
pop
dec
cmp
idivl
push
sbb
xor
push
movsb
cwtl
mov
rorb
jbe
outsb
ja
lock
test
pop
jno
and
es
pop
pop
repnz
and
stos
add
pop
ret
or
aaa
aam
or
test
push
test
cwtl
cmp
pop
xchg
bound
ret
add
mov
test
xchg
add
mov
rcrb
negl
cli
mov
int
and
cmc
inc
cmc
mov
sbb
andl
dec
and
push
xor
and
imul
xchg
jb
jl
rcrl
push
and
sub
add
loope
push
mov
xor
add
jb
inc
in
add
das
sahf
rorl
shlb
xchg
cs
inc
jno
lods
cli
loop
loop
ss
mov
test
push
std
fwait
rolb
mov
cmc
push
mov
mov
push
fdivs
sbb
out
ffree
or
scas
adc
mov
xor
jo
adc
mov
clc
pusha
lret
scas
mov
clc
mov
fwait
add
jns
cs
dec
push
inc
mov
aad
adc
and
daa
xchg
int3
outsb
jbe
add
jp
pusha
out
mov
or
ret
mov
jbe
lahf
ja
repnz
pushf
sbb
loop
mov
packuswb
lahf
push
pop
add
add
inc
cwtl
in
mov
cmp
sahf
add
cmpsl
mov
mov
xor
push
cmc
mov
push
xor
imul
cli
aas
pushf
sbb
or
test
xor
pop
mov
pop
ja
repnz
mov
cld
adc
inc
adc
xchg
in
xchg
in
adc
repnz
bound
or
orl
add
adc
into
mov
push
mov
jecxz
cmpsl
stc
xchg
mov
enter
push
mov
mov
inc
loop
mov
sub
push
std
jl
mov
sbb
or
testl
daa
enter
sti
arpl
jo
add
mov
add
out
push
cwtl
mov
mov
jp
cmp
and
cmp
xor
jge
out
ret
pop
push
inc
enter
mov
mov
shl
dec
mov
pop
cwtl
mov
mov
test
push
inc
daa
je
cli
xchg
dec
adc
lds
jns
adc
add
repz
outsl
jns
daa
sbb
xor
pop
mov
and
enter
pop
repz
mov
mov
shlb
shll
sti
mov
sbb
push
mov
xor
or
lea
or
lock
inc
popa
or
jbe
xor
and
mov
call
repz
adc
aas
clc
das
aam
loope
push
mov
scas
xor
scas
pop
jecxz
popl
sahf
fsubp
lret
mov
sahf
push
inc
mov
inc
or
xchg
lods
btl
lahf
and
dec
mov
stos
xor
sbb
iret
adc
push
cmp
repz
bound
mov
push
fsts
jl
dec
in
or
sti
cmp
repz
push
rol
stos
hlt
ss
addl
xchg
insl
pop
jo
inc
push
mov
dec
aaa
shll
cmp
int3
hlt
and
ja
mov
fs
sahf
jno
filds
in
pop
mov
push
test
iret
mov
jmp
xchg
aad
aaa
cmpsb
ss
ljmp
mov
popf
add
ret
lock
call
insb
dec
shll
mov
inc
push
xchg
sub
xchg
inc
jbe
jmp
gs
fldt
out
in
cmp
inc
add
aam
loopne
push
inc
xor
push
adc
rclb
cwtl
mov
pop
lds
xor
aas
int3
xor
cmp
shlb
pusha
xchg
leave
cmp
scas
arpl
xchg
shrl
in
mov
jmp
cli
pop
inc
rcll
nop
sbb
imul
add
jb
add
jmp
sbb
arpl
jge
xchg
adc
xchg
leave
dec
add
sub
adc
lds
das
push
pop
mov
fwait
xchg
lahf
hlt
jo
mov
fnstsw
lcall
push
das
loop
out
sbb
sbbb
pop
mov
xor
pop
stos
jo
push
xchg
subb
out
lods
pop
jae
cmc
push
insb
mov
add
int
popa
outsb
mov
loopnew
lahf
inc
mov
sub
cld
and
lds
jecxz
pop
xchg
jns
dec
test
jbe
cmpsl
jg
sti
test
js
lea
outsl
filds
mov
inc
lock
or
divb
sbb
jg
xchg
adc
das
data16
fdiv
cmc
in
sub
icebp
repnz
mov
sti
dec
or
or
mov
mov
mov
dec
pop
mov
pushf
loopne
out
push
jns
cmp
in
mov
sbb
fs
ret
mov
xchg
mov
fstl
sub
jno
inc
aas
rcl
adc
subl
jne
mov
adc
lea
pushf
jns
je
ret
xor
cmp
std
dec
inc
imul
scas
call
sbb
rolb
sbb
lret
xchg
aas
xor
mov
jo
cmpl
dec
leave
jge
mov
jb
sbb
cmpsb
mov
xor
mov
jnp
ss
jo
lret
pop
scas
push
imul
cmp
lret
sub
lret
cli
aas
test
lret
aaa
push
adc
mov
aad
cmp
ss
data16
aaa
les
ror
or
pop
inc
jmp
lahf
fcompl
mov
sub
sub
pop
add
out
enter
push
inc
xchg
in
aaa
cmp
data16
dec
and
sub
lods
insb
push
loope
outsl
or
adc
push
aas
insb
loop
aas
es
jne
mov
hlt
sub
out
sbb
rcl
sti
sbb
loopne
outsb
cmpsb
mov
cli
adc
and
dec
cmp
addr16
push
jp
inc
out
int3
lea
imul
inc
arpl
sarl
lds
jno
add
gs
repnz
sbb
fmulp
inc
xchg
sub
addr16
lret
ds
iret
sub
lahf
loop
stos
jg
loopne
mov
xchg
jge
pop
cmp
lret
and
in
push
xchg
adc
rcll
rcrb
insb
fcmovbe
roll
dec
in
test
mov
pop
mov
shl
arpl
adc
test
scas
es
mov
push
jnp
std
adc
mov
inc
outsb
xchg
mul
cli
gs
fisubrs
test
xchg
jns
cmpl
popf
pushf
add
outsb
mov
movl
int3
cltd
jp
sub
mov
inc
imul
mov
and
shlb
mov
inc
jp
mov
fidivl
adc
movsb
pushf
mov
call
pop
bsr
cmp
imul
or
imull
frstor
out
lods
std
cmp
xchg
xchg
sub
push
lret
xor
ds
push
andb
out
jecxz
pop
jge
cltd
inc
xchg
imul
pop
les
mov
pop
adc
cs
mov
mov
out
mov
mov
cltd
sbb
pop
sti
cmp
add
push
dec
mov
outsl
sti
fdivp
pop
or
inc
cmp
jno
jecxz
mov
jns
push
cmp
imul
mov
sbb
and
jnp
inc
hlt
scas
sub
mov
test
mov
out
stos
jg
jg
inc
out
jle
pop
adc
test
sub
push
inc
add
pop
call
xor
cltd
push
fimuls
lods
xor
pushf
scas
mov
ljmp
mov
pop
lock
dec
test
cmp
add
sbb
jl
rolb
loop
push
pop
xchg
les
les
std
mov
mov
leave
push
jecxz
sub
cmp
mov
mov
mov
addr16
mov
pushf
pop
push
enter
push
lods
xorb
movsl
jge
cmpsl
inc
int
idivl
mov
popf
test
push
adc
dec
jbe
addr16
enter
mulb
insl
iret
fsubrs
mov
xchg
pop
filds
out
andb
jge
xchg
movswl
shll
adc
in
inc
out
stc
pop
ret
ficoml
dec
out
xchg
cmp
rclb
pop
test
mov
pop
lods
dec
fsubrl
js
xchg
pop
sbb
or
testl
xor
cmc
sbb
mov
pop
roll
loop
fldcw
adc
jl
pop
and
ds
sbb
sbb
adc
vpcmpgtd
cmp
push
neg
xor
adc
test
mov
das
ja
cmpsl
mov
pushf
fldz
movsb
fcomi
sti
out
hlt
lds
cmp
rcll
es
outsb
push
adc
fmuls
sub
gs
sbb
jae
into
inc
xchg
xchg
gs
sub
addl
stos
xchg
data16
imul
lds
repz
mov
orl
adcb
scas
jle
add
pusha
rolb
jnp
mov
xor
mov
cmpl
stos
cmp
lods
xchg
mov
dec
clc
hlt
int
rcr
sub
out
sub
in
shr
mov
in
daa
pop
arpl
ja
icebp
fisttps
cli
out
xchg
aaa
adc
jae
mov
inc
push
ret
and
mov
aas
sahf
stos
pop
mov
pop
mov
test
rcll
stos
inc
insb
sub
xor
pop
sarl
fidivrs
xlat
rcrl
cmp
lret
popf
movq
dec
push
xchg
push
test
jmp
push
lret
pop
xor
and
aam
xor
jnp
inc
mov
xor
xlat
dec
xchg
mov
clc
test
dec
inc
jecxz
rorb
mov
xchg
scas
jmp
movsb
insl
cld
ja
dec
icebp
out
push
fs
mov
and
inc
jo
xchg
mov
adc
sub
pop
dec
xchg
inc
jnp
add
bts
inc
in
jecxz
push
rolb
mov
mov
or
pop
jl
mov
fnstenv
pop
movsl
test
movb
ds
dec
aaa
lds
les
adc
dec
idivb
aas
and
lret
dec
push
ret
fwait
mov
mov
insb
push
dec
mov
xor
clc
sahf
mov
ja
mov
xor
mov
pop
mov
jae
mov
cmp
sub
arpl
pop
cmc
ss
inc
adc
add
outsl
jno
pop
sti
out
xor
mov
mov
aaa
jg
sbb
aaa
inc
insb
or
pop
lock
fdivp
xor
iret
cmpsl
fimull
and
cmp
mov
dec
aad
shlb
cmpsl
cmp
push
jne
xchg
pushf
mov
outsb
test
je
ljmp
enter
outsb
lds
fldcw
cmp
aad
testb
pushf
xlat
repnz
cli
mov
movsb
mov
leave
andb
xor
pushf
fistl
mov
into
insb
test
int3
mov
cmp
dec
test
movq
shrl
jl
sub
and
sub
dec
dec
subb
arpl
jae
inc
rcr
ret
xor
mov
cwtl
sbb
loopne
xor
fwait
or
mov
insl
cld
das
out
adc
dec
negb
sahf
pop
inc
adc
int
push
xor
jns
in
imul
fwait
pop
jl
mov
es
jae
out
xor
mov
nop
cmp
scas
jne
add
sti
or
mov
arpl
xor
jno
loope
push
cmp
mov
sub
cltd
jmp
shrl
and
hlt
shll
sbb
mov
sar
inc
inc
adc
or
daa
cltd
push
mov
nop
pop
sbb
ret
js
sbb
and
addr16
cmpsl
push
mov
lcall
cmc
popf
xor
popf
sub
mov
fucomip
push
inc
inc
cltd
dec
mov
imul
jecxz
cmp
in
mov
popa
aas
dec
inc
pop
enter
add
push
gs
ss
popa
in
ror
jb
in
lret
mov
push
cmp
mov
test
xor
cmc
jne
mov
cmp
jmp
push
loopne
mov
pusha
loope
std
lods
incb
sub
into
sbb
jne
sub
es
stos
jle
clc
fisubrl
cmpl
je
jecxz
or
push
jbe
pavgb
scas
add
xchg
adc
dec
arpl
test
lock
push
lret
repz
lds
jb
jb
adc
cmp
jns
repz
dec
mov
clc
mov
fists
popa
sbb
lds
loope
push
push
mov
movsl
push
shlb
scas
rcrb
lcall
add
or
push
popa
inc
add
addr16
adc
sbb
mov
mov
shrb
imul
idivl
sbb
pop
push
adc
test
sub
dec
out
je
fsubl
sbb
outsb
mov
imul
sub
mov
or
cwtl
inc
and
lret
ljmp
cmp
das
rcr
add
out
jb
mov
push
adc
imul
mov
and
adc
lods
sarl
shrl
xchg
push
lahf
rcrl
dec
mov
push
add
test
or
scas
out
sbb
xchg
jo
cli
sbbb
push
cltd
push
enter
test
roll
adc
push
ljmp
psraw
mov
push
pop
or
dec
js
roll
jno
pusha
pusha
int3
gs
fmuls
ja
outsb
fs
jg
sbb
mov
out
dec
dec
xchg
cli
lcall
mov
mov
mov
js
add
int3
insl
arpl
jne
xchg
vaddsubps
ss
mov
jo
mov
xor
jp
dec
pop
daa
pop
mov
enter
mov
pop
push
in
pushf
es
adc
inc
fiadds
int3
and
test
ret
or
enter
and
cmp
shl
cmp
out
into
int
fsubrs
and
xchg
gs
dec
pop
mov
js
out
icebp
out
sysenter
sbb
lods
pushf
out
lret
data16
mov
loope
xchg
adc
push
loope
mov
arpl
movsb
fldenv
mov
fs
sub
fisttpl
mov
mov
int
int
repnz
adc
adc
lret
shl
in
sbb
inc
lods
int3
add
push
shll
jl
jae
ret
outsb
or
cmp
jae
fcoms
fldl
dec
in
cmpsl
insl
mov
repz
adc
xor
cld
add
jecxz
dec
xlat
ret
jb
lcall
inc
push
ljmp
test
test
ljmp
xchg
shll
jae
mov
cmp
sti
adc
inc
jecxz
push
iret
inc
dec
mov
inc
xor
pop
sub
add
push
stos
push
lret
aad
mov
inc
mov
dec
scas
fcoml
shlb
ja
or
xchg
sub
sub
sbb
int3
lods
lds
dec
out
push
popa
xor
test
imull
testl
mov
cmp
hlt
jmp
out
lock
loop
add
lret
leave
repnz
stos
xchg
add
loop
lods
jge
test
mov
sbb
cli
xchg
add
push
jae
add
jns
imul
mov
jo
out
fnstcw
xchg
call
or
or
cwtl
adc
mov
nop
cmp
icebp
cmp
mov
fiadds
fwait
xor
sbb
push
inc
mov
icebp
es
insb
add
scas
lods
test
popa
adc
mov
decb
idivb
push
sbb
loop
dec
jge
dec
inc
mov
imul
in
ja
in
movsl
in
mov
idiv
lds
jmp
fs
movsl
rcll
dec
imul
add
loopne
out
cmp
sub
push
mov
mov
mov
add
rcr
inc
cmp
inc
lret
xchg
cmpsb
loope
scas
lock
es
cmp
lea
lret
test
xor
vmovss
pusha
ljmp
adc
xchg
push
xor
imul
shlb
sub
mov
sbb
xchg
loope
mov
lcall
stos
xchg
sbb
push
xor
fldz
jae
cmpsb
inc
aad
popa
inc
divl
notb
sbb
hlt
aaa
inc
xor
rol
cmp
cmp
je
push
andb
enter
xor
or
getsec
xchg
fldl
pushf
mov
add
push
sub
aas
xchg
cmp
mov
mov
jmp
push
mov
aam
stos
dec
mov
popa
sbb
pop
sbb
push
in
mov
aad
mov
ljmp
xchg
xor
sub
cltd
bound
call
push
mov
sub
mov
popf
mov
xorb
add
xor
mov
sub
ljmp
xchg
push
cmpsl
test
cmp
stos
fists
pop
push
dec
lods
xor
cmpb
imul
xor
dec
cmp
cltd
fstps
test
pushw
dec
lahf
test
lcall
sub
stos
dec
mov
mov
pop
aaa
cwtl
and
pusha
ljmp
sti
popa
and
jbe
aaa
pop
dec
add
adc
mov
jl
mov
mov
cs
rcrl
hlt
xor
jbe
dec
push
jl
fistpl
mov
jnp
and
andb
cmpsl
mov
mov
or
in
cmpsl
idiv
adc
test
test
lcall
add
inc
mov
jecxz
add
xchg
andl
and
adc
loop
out
clc
imul
push
fwait
add
out
testb
sub
add
xlat
mov
pop
or
adc
xchg
pop
enter
inc
sub
fwait
icebp
mov
dec
mov
jp
add
push
addr16
sub
int
dec
in
jecxz
push
test
sub
insl
pop
adc
pop
inc
pop
mov
sub
icebp
enter
enter
inc
imul
lods
jno
enter
dec
fcomps
ja
push
in
das
lock
daa
js
dec
mov
sbb
aas
mov
adc
ret
cs
rclb
loopne
add
stc
mov
es
in
stc
sahf
mov
mov
cmp
jle
sbb
loop
fistpll
bound
adc
xchg
out
push
and
testl
into
test
out
mov
icebp
repz
fsubrs
bound
xchg
leave
fdiv
jmp
cmp
cmp
jo
int
mov
jae
dec
dec
out
sbbl
shll
fwait
pop
in
outsb
cmp
and
add
leave
sbb
loopne
mov
mov
adc
gs
fdivr
sub
lock
scas
pop
sti
idivl
popl
dec
cmp
adc
shll
pop
mov
lods
push
dec
adc
insl
or
testb
out
mov
xchg
push
mov
outsb
mov
fwait
gs
pop
fmuls
add
mov
leave
pop
or
inc
inc
jmp
andl
sbb
fs
nop
clc
xlat
pop
fsubr
pop
es
and
lods
cmp
popf
out
bnd
push
pop
lret
jge
ret
dec
cltd
std
insl
cmp
adc
xor
rclb
sbb
sahf
sub
add
cmp
push
arpl
fistl
mov
sub
cltd
cmp
push
pop
jo
std
mov
cld
cltd
mov
gs
repnz
cmpl
mov
inc
dec
scas
int3
arpl
fsub
mov
sbb
and
sub
movsl
pushf
repnz
sub
jp
add
xor
inc
loope
into
cmp
jmp
mov
outsb
sbb
bound
outsb
add
daa
repz
call
push
test
inc
pusha
sub
cltd
sub
mov
lods
int
cmp
sub
mov
cmp
xchg
add
test
pop
sub
idivl
push
sbbl
mov
andl
bound
fisttps
xchg
jbe
ja
inc
mov
addr16
cltd
leave
push
rcll
nop
gs
aaa
sbb
cltd
ds
add
mov
push
std
add
pop
pop
sbb
adc
dec
sbb
xchg
xchg
mov
or
lds
int
in
setg
jne
rcl
xor
sbb
adc
mov
mov
fildl
jle
pop
dec
insb
imul
pop
lahf
sbb
fdivr
pop
jp
gs
sub
aaa
cmpsl
fstps
cmpsl
in
nop
push
mov
dec
out
pop
adc
cmc
add
clc
out
cmp
fists
mov
adc
or
mov
rorb
sub
rorb
adc
jae
xchg
frstor
push
push
mov
cmpsl
dec
out
aaa
mov
add
iret
mov
cs
popa
inc
adc
add
xor
lods
je
iret
ljmp
mull
je
lahf
adc
aad
xchg
pop
das
pop
add
mov
inc
xchg
or
mov
pop
testl
mov
mov
outsb
and
in
mov
xchg
icebp
das
mov
jo
adc
rcl
ds
push
je
inc
das
push
mov
xchg
or
mov
test
pop
xchg
aam
push
pop
push
outsl
js
xchg
loop
jmp
cmp
and
mov
mov
mov
mov
sub
pushf
mov
out
cmp
adc
icebp
mov
cld
inc
ljmp
mov
sbbl
and
push
movsl
test
adc
jne
dec
xchg
shll
daa
lret
mov
add
test
xor
pop
inc
ret
icebp
inc
sub
inc
cmpb
cmp
mov
ret
mov
add
push
adc
movb
xchg
mov
mov
out
xchg
fdivs
mov
push
dec
jg
lea
les
push
into
adc
inc
clc
in
and
mov
iret
sub
std
pusha
mov
mull
int
xchg
sbb
mov
xor
sub
popa
add
and
or
stos
cmp
add
mov
lcall
push
ret
movsl
addb
out
or
aas
mov
mov
jnp
xchg
xchg
scas
mov
imul
mov
adc
movsb
pop
sbbl
jo
cwtl
adc
pop
leave
mov
je
outsl
push
ja
jne
mov
lods
cmp
sub
js
in
push
lds
cli
jle
or
or
sub
and
cmp
rep
sub
inc
or
inc
pop
adc
xchg
push
aad
xchg
add
jbe
jmp
and
lods
and
movsl
cwtl
inc
jle
and
lock
int3
jmp
add
cmpsb
mov
sbb
mov
gs
or
and
mov
adc
hlt
icebp
movsb
sbbl
test
fildl
in
test
cmp
je
mov
pop
cs
mov
out
inc
xor
inc
adc
int3
in
fnstsw
sbb
sub
mov
dec
outsb
test
mov
and
xor
jae
mov
pushf
add
cmp
jl
jmp
out
mov
scas
lahf
jmp
stos
dec
add
shrl
push
push
push
lock
sub
adc
inc
mov
aam
pop
cmp
pop
out
scas
movsl
add
fs
ret
pop
push
xchg
je
mov
sbb
jnp
into
xchg
call
das
jmp
sti
pop
test
and
add
mov
lock
mov
test
cmpsl
or
aad
jmp
test
loopne
ljmp
lret
xor
icebp
add
rclb
mov
mov
push
mov
loope
stos
sbb
xchg
je
mov
inc
inc
xorb
cmpsl
push
incb
arpl
mov
clc
xchg
sbb
push
xor
lods
lcall
rol
mov
clc
adc
stos
aaa
jge
mov
stos
test
mov
pop
mov
xchg
ljmp
xchg
in
call
cmp
inc
leave
adc
popf
inc
pop
xchg
out
outsb
addr16
pop
bound
sti
dec
push
repz
imul
cmp
jp
ret
aas
push
xchg
int
lcall
xchg
pop
rclb
ja
add
inc
ss
dec
lcall
mov
test
stc
jne
fnstsw
testb
jmp
dec
pushf
fdivrl
sub
pop
js
gs
ud1
icebp
mov
push
nop
jb
xchg
clc
push
in
fwait
pushf
and
enter
jecxz
pop
inc
push
cmpsb
or
fs
stc
scas
cmp
nop
ficompl
push
inc
daa
cltd
daa
jno
out
sub
mov
xorb
sti
inc
dec
xchg
pop
aaa
xor
xchg
lods
out
out
pop
dec
cwtl
int3
into
pop
in
jp
add
xor
movsl
es
sarl
sub
loope
nop
lea
cmpsb
mov
test
xor
fsts
cmp
loopne
rcl
pop
dec
xor
cwtl
xchg
in
inc
dec
jne
push
mov
add
inc
pop
push
mov
out
sub
mov
gs
dec
jle
and
add
and
outsb
dec
xor
ds
add
jnp
add
jecxz
xchg
pop
cltd
xlat
pop
lahf
sub
cmp
inc
ficoms
add
sbb
jge
push
jmp
fcmovnb
rolb
dec
outsb
mov
push
sub
mov
inc
jl
or
loope
insb
inc
iret
push
push
clc
into
rcl
pop
nop
dec
jge
fcmovb
je
and
cmp
xor
out
je
imul
int3
daa
xchg
outsl
xor
mov
push
insb
mov
das
jmp
cli
jl
mov
mov
or
adc
test
incb
jp
test
in
inc
imul
or
popf
lcall
lea
jg
xchg
adc
jns
test
push
add
sbb
inc
jecxz
lcall
sbb
and
pop
ds
nop
push
shlb
mov
xchg
pushf
inc
sbb
ja
inc
add
fstp
cmp
sahf
sbb
cs
pusha
pop
in
dec
in
ljmp
push
dec
fs
pop
sbb
cmp
dec
scas
jo,pn
push
jo
fs
push
vpsubusb
scas
stc
xor
je
mov
mov
cltd
repnz
clc
mov
dec
clc
in
inc
or
les
push
and
push
arpl
loop
cli
sbb
test
popf
push
leave
cmp
pop
push
jle
mov
insb
push
xor
out
es
xchg
rcrb
setns
mov
sbb
cld
mov
ds
mov
inc
sbb
sahf
pop
dec
adc
mov
or
insl
jl
lret
sbb
mov
jae
cmp
idivl
js
mov
add
jb
mov
mov
adc
in
nop
mov
mov
fidivrs
push
jo
lods
xor
push
in
aas
jecxz
je
popa
jne
cmp
pushf
cltd
xor
rcrb
hlt
or
movsb
insl
sbb
outsl
or
test
sbb
dec
fidivrl
cs
scas
loopne
incl
or
aam
inc
repz
or
jns
lret
movb
data16
imul
dec
push
enter
pop
adcl
adc
cmp
mov
pop
lods
pop
pusha
or
push
xchg
pushf
or
pop
orb
mov
lds
std
jg
icebp
push
movsl
sub
sub
xchg
bound
and
mov
test
imul
fwait
arpl
sub
stos
jg
sbb
movsb
stos
enter
mov
and
mov
sub
test
jb
outsl
scas
clc
aaa
inc
call
ljmp
xor
sahf
jg
pusha
mov
int3
into
inc
stc
or
mov
gs
mov
pop
adc
mov
std
imulb
sub
testl
sub
inc
addr16
cli
repnz
addr16
jnp
negl
insb
or
movsl
adc
lods
repz
jae
adc
cld
mov
inc
mov
repnz
add
jnp
out
test
push
pusha
xlat
pop
daa
xor
enter
mov
add
jb
mov
mov
dec
dec
mov
mov
adc
pop
test
inc
cmp
add
mov
push
les
or
dec
pop
sti
and
jge
out
imul
in
xor
sub
aam
push
in
xor
xchg
test
cmc
popl
sarl
outsb
push
lds
push
jo
sub
mov
and
inc
adc
push
mov
fbstp
cld
or
xor
data16
flds
mov
cli
ret
push
mov
daa
push
loope
cmp
std
mov
mov
add
mov
xchg
add
jl
pop
fbstp
cli
cmovge
div
lea
xchg
movsl
pop
adc
lret
add
lods
nop
xchg
pop
lods
out
adc
mov
sahf
std
push
pop
mov
movsb
in
inc
jg
idivl
sub
js
aaa
mov
pop
adcb
and
push
subb
push
ret
xor
jecxz
lock
or
inc
mov
add
fimuls
xor
pop
sti
mov
movsl
int
cwtl
mov
popf
call
stos
gs
push
insb
test
lret
das
fildll
daa
bound
sub
lahf
adc
mov
imul
in
push
icebp
mov
and
call
aam
int3
sub
imulb
into
push
scas
popa
cmc
outsl
popf
mov
fs
lret
pop
or
cld
push
push
jne
jnp
push
jle
jmp
sub
aaa
rcrl
idiv
negb
shlb
pop
iret
sub
mov
inc
xchg
outsl
movsl
dec
jp
sub
ret
or
adcl
mov
insl
xor
fsubl
int
sub
jp
iret
push
sub
jbe
mov
lret
popa
adc
mov
push
or
fcompl
ret
sbb
stos
test
push
das
inc
imul
outsb
mov
stos
lds
inc
xor
push
and
jl
mov
jl
fadds
leave
icebp
pop
pushf
push
push
sti
jp
movsb
jle
lret
icebp
add
dec
or
jmp
fcmovnbe
cmp
adc
idivb
or
pop
out
pop
test
xchg
inc
inc
sub
jo
call
push
cmpsl
lods
dec
inc
in
pushf
and
fidivrl
popf
push
push
dec
or
lahf
sub
movsb
push
push
cld
clc
sbb
jg
sub
cmp
into
pop
and
and
aad
cld
push
jg
dec
mov
rorb
inc
imul
int
insl
push
and
in
dec
xchg
and
inc
mov
addr16
pop
xchg
jp
ja
dec
push
or
cld
mov
dec
add
bound
inc
mov
rcrb
jl
inc
pop
sbb
xchg
and
fwait
popa
xchg
push
pop
es
add
ret
ja
jmp
add
test
jo
dec
int
jg
addb
lods
rclb
mov
rcrb
xchg
sti
push
mov
leave
scas
iret
or
add
out
and
mov
data16
and
add
stos
pop
pop
xchg
in
test
mov
pop
sahf
add
mov
add
ss
xlat
adc
adc
mov
jge
adc
movsl
popa
cmpps
push
adc
adc
xor
mov
sti
je
pusha
mov
xlat
xchg
jb
jnp,pt
sarl
push
rolb
or
xchg
push
xchg
xchg
pop
lea
and
add
insb
jg
mov
mov
push
push
and
xor
jb
cwtl
shll
bound
adc
mov
fiaddl
into
stos
aam
mov
fnstenv
inc
cwtl
jl
jo
popa
lods
lods
shrl
push
out
rorl
push
cs
setae
data16
test
add
xor
ljmp
loope
xchg
sbb
cmp
or
pop
leave
jne
bound
jl
mov
cmp
or
sahf
xchg
mov
ret
fxch
push
stc
fcmovb
imul
stos
data16
mov
or
fmulp
clc
or
dec
mov
ja
mov
dec
dec
adc
rcrb
out
fiadds
or
and
call
xchg
out
iret
lods
sbb
mov
out
mov
fidivl
xor
xor
loope
rorb
inc
mov
ficoms
sub
dec
mov
dec
pop
mov
inc
cs
jg
mov
lahf
push
xchg
mov
add
loope
inc
int3
push
out
sbb
xchg
jge
push
ss
adc
in
roll
lret
push
lcall
jne
cmp
or
sbb
xor
push
jmp
insb
push
xchg
jmp
add
loopne
jbe
movsl
enter
lret
shrl
push
add
addr16
test
out
das
pop
mov
loope
pusha
and
ja
lea
mov
sbb
push
pop
mov
repnz
outsb
out
mull
sbb
sub
jge
loop
pushf
mov
bound
repnz
lcallw
clc
fistps
cmpl
cmp
fdivrl
popf
mov
jecxz
adc
xchg
mov
push
add
andl
cmp
xchg
movsb
push
into
sbb
out
mov
fistpll
orl
lcall
xor
bound
ja
sbb
mov
and
push
add
xor
in
pop
adc
inc
dec
or
imulb
mov
lods
enter
jo
mov
jge
jo
inc
xchg
cmp
jbe
fistps
out
leave
fcmovnbe
sti
and
cmc
test
fstpt
dec
outsb
xchg
gs
lret
test
int3
jbe
dec
cwtl
mov
in
sbb
js
sbb
push
and
inc
push
mov
push
aaa
lret
dec
jno
fdivr
test
pop
sub
aaa
fs
jle
mov
ret
sbb
ds
incb
pop
jno
xor
mov
mov
shll
add
mov
pop
cld
xor
cmp
mov
xor
stc
stos
mov
pop
xor
xor
mov
aad
adc
mov
stos
test
xlat
sarl
out
push
xchg
mov
sti
lods
push
or
ret
imul
enter
lods
xlat
cmpsl
stc
lahf
jecxz
aad
xchg
das
test
push
stos
push
push
rorl
inc
int
xchg
jo
xchg
mov
or
mov
jmp
add
adc
flds
mov
dec
stos
mov
aas
mov
jl
dec
sub
iret
xchg
mov
fnstenv
jmp
jns
mov
movsl
insb
idivb
xor
and
aam
fiaddl
loopne
cmp
mov
dec
pusha
fldpi
jle
jb
sti
mov
mov
test
pushf
mov
fdivrl
lret
mov
aam
sbb
dec
add
rcrl
in
clc
aaa
int
pop
dec
cli
jmp
sbb
nop
pop
out
jbe
add
or
stos
jecxz
flds
add
mov
push
xchg
adc
or
or
inc
and
rorl
ds
int
stos
or
push
and
xor
in
and
loop
sbb
loope
arpl
and
push
out
mov
inc
aaa
inc
cs
jo
add
cli
cmp
adc
jle
jp
stos
jno
je
inc
inc
or
popl
es
inc
mov
stos
mov
adc
fsts
sub
sub
push
push
jle
lahf
fcomip
lea
cmp
aam
cmpsl
fwait
icebp
scas
pop
testl
push
std
ds
fnstcw
push
lret
imul
mov
cld
mov
mov
jge
arpl
out
mov
inc
jl
and
sbb
xchg
ljmp
rcl
pop
sbb
push
aad
mov
mov
cltd
sbb
test
je
pop
fiadds
mov
call
pushf
mov
mov
testb
jecxz
dec
mov
pop
mov
fsubrl
pop
cld
inc
in
push
adc
sbb
cwtl
addr16
cltd
fnstsw
jmp
jge
movsb
repnz
mov
fsubrs
fsubs
cmp
sub
inc
add
add
fstpt
nop
mov
xor
shl
push
mov
adc
data16
sbb
dec
mov
mov
data16
jp
pop
xlat
outsb
add
je
add
or
or
xchg
popf
mov
bound
std
bound
insb
mov
jne
push
ljmp
sub
xor
hlt
test
test
adc
xor
sar
outsl
inc
bnd
push
icebp
push
stc
out
ds
scas
mov
xor
cli
cmp
mov
xchg
cli
out
pop
lret
data16
cld
pop
push
faddl
pop
fisttpll
ret
mov
mov
cmp
sahf
inc
pop
mov
inc
adc
cmp
fwait
cmp
inc
add
or
repz
test
pushl
mov
call
xor
add
or
and
push
loop
sub
or
xchg
add
push
das
fwait
test
jg
jno
adc
pop
aaa
push
pop
pop
sbb
in
lret
mov
inc
inc
lret
adc
xor
fldl
lahf
movsl
ds
cmpsl
mov
mov
out
repz
ljmp
and
xor
je
add
gs
scas
jnp
loope
adc
xor
out
adc
add
pop
in
mov
jg
sub
sub
outsb
add
xchg
sub
push
pop
mov
pop
push
daa
arpl
les
and
test
lods
repz
mov
out
cmp
mov
or
mov
push
push
xchg
pop
pop
lret
cmp
or
and
gs
xchg
lds
test
mov
mov
test
aam
push
ds
add
int
and
cs
inc
aad
sbb
hlt
fsubrl
call
jl
loop
cmpsl
mov
ss
rclb
clc
push
pop
sub
inc
ja
fsubr
cwtl
mov
inc
mov
inc
cmc
jno
mov
test
push
push
fdiv
mov
push
push
push
mov
es
mov
xlat
inc
push
xor
jbe
cmc
into
dec
dec
pop
lds
sub
dec
inc
int3
xchg
aad
iret
data16
xchg
icebp
pop
xor
shl
arpl
popa
test
push
aaa
and
jnp
jle
enter
and
sub
pushf
andb
lock
jmp
repz
pop
sub
xchg
bound
push
imul
lahf
lcall
cs
xchg
mov
push
sahf
pusha
mov
and
add
mov
push
mov
outsb
mov
jno
xor
mov
leave
aas
negl
lods
mov
fwait
clc
fucom
cwtl
pop
xor
and
mov
sub
push
js
jmp
add
aas
push
in
xor
lret
cmp
dec
push
sahf
xchg
xchg
ja
xchg
jg
stos
mov
out
sahf
ja
push
mov
dec
xchg
sti
lock
ss
xor
movsl
sbb
int
jns
xor
mov
iret
sub
jg
sub
dec
and
add
push
jge
mov
adc
div
leave
sub
adc
inc
mov
es
mov
mov
inc
jle
mov
mov
xchg
ss
sbbl
mov
movsb
je
mov
rol
movsb
call
dec
jl
fdivrl
push
into
ret
add
inc
stos
push
add
fucomp
ja
movsl
cmpsl
sahf
inc
jl
sub
mov
mov
jno
jecxz
dec
aas
mov
mov
sbb
mov
push
stos
in
push
imul
inc
ret
cli
popa
jg
je
add
mov
arpl
fldcw
cmpsb
jg
jp,pn
mov
hlt
sub
sbb
mov
mov
aaa
sub
fucomi
cwtl
sub
mov
outsl
and
sbb
pop
mov
ret
in
and
jecxz
sarl
in
jle
repnz
mov
mull
push
lods
push
mov
or
add
sub
cwtl
mov
xor
pusha
xchg
cld
dec
push
adc
push
sbb
movsl
jecxz
inc
pushf
ljmp
cmp
or
cwtl
test
mov
xor
imulb
nop
adc
popa
sbb
scas
jns
jge
and
pop
into
mov
push
add
cmp
mov
mov
xor
xchg
xlat
add
cs
sub
add
xchg
mov
jae
mov
leave
add
mov
push
jnp
sub
in
leave
movsl
ljmp
jle
mov
xor
add
test
adc
inc
ss
jmp
push
mov
add
add
cmp
pop
mov
movsb
mov
ja
xchg
fwait
popf
and
lea
fistl
push
mov
mov
sub
jge
lods
add
xchg
je
movsl
inc
sbb
and
sub
movsb
mov
arpl
and
pushf
jne
ja
in
fdivl
stc
out
xor
adc
inc
xlat
repnz
in
data16
mov
adc
inc
xchg
jl
cmp
sub
je
lea
movsb
subb
or
jp
movsl
leave
cmp
jae
xor
imul
test
insb
cmp
stc
shl
push
and
test
ja
cwtl
jae
fstpt
or
jle
out
fcompl
dec
lret
or
mov
popf
bnd
aaa
push
pop
or
mov
and
add
lods
push
sub
or
add
fwait
mov
loop
mov
push
sbb
xchg
out
cmp
sub
sub
addr16
ret
outsb
sbb
lods
add
mov
xor
jns
or
jp
loop
fnsave
jp
and
in
das
add
out
mov
sbb
push
sub
mov
cmp
jecxz
iret
setnp
inc
call
xor
or
mov
test
jns
ret
and
sbb
test
jne
dec
inc
pop
add
jge
jns
xor
push
push
sbb
xchg
fwait
movsb
les
imul
data16
fs
inc
sub
push
gs
jo
adc
dec
fldcw
mov
ret
push
xchg
xchg
sbb
testl
leave
or
pop
arpl
mov
mov
repnz
pop
out
jmp
bound
loopne
lret
adc
xchg
popa
movsl
faddl
out
lock
cmpsl
lods
test
cmp
mov
adc
mov
scas
rolb
lock
add
mov
int
dec
rcr
outsl
in
dec
ds
loopne
subl
movsb
lret
enter
push
lods
adc
out
insl
mov
cwtl
xchg
and
push
sbb
into
in
jnp
bnd
sub
lods
add
jl
pop
nop
push
pop
cmpsb
dec
jne
fnsave
ret
out
das
push
test
push
sub
mov
mov
and
testl
cmp
clc
push
mov
lock
cmp
fimuls
loope
out
fldl
and
icebp
daa
xchg
push
subl
pop
fmuls
mov
mov
sub
cltd
sub
loopne
mov
cli
fdivl
lret
idivl
mov
mov
std
icebp
sarb
rol
imul
mov
cld
inc
xor
inc
enter
lods
fdivrl
int3
pop
out
shl
dec
mov
cmp
xchg
xchg
lds
sub
sbb
aas
and
pop
int
subl
jb
mov
pop
test
fisubs
adc
xchg
pop
adc
sbb
es
outsl
movsl
mov
push
push
xchg
sarl
mov
lret
scas
mov
rcrl
mov
loopne
push
addr16
sub
fcoms
cs
jmp
lock
aas
popl
repz
pop
sub
in
mov
imulb
push
xchg
sbb
addb
or
sbb
mov
lods
inc
ret
or
daa
inc
or
inc
dec
xchg
adc
ret
mov
arpl
jge
push
rorl
xchg
leave
push
xchg
xchg
sub
fucomi
xchg
iret
data16
mov
lcall
test
add
aam
dec
sti
decl
in
addb
insl
sub
jns
dec
rcll
push
xchg
sub
in
clc
repnz
sbb
daa
and
rep
pop
pop
cwtl
sbb
lret
xor
xor
xor
and
pop
dec
repz
jne
test
mov
sbb
jmp
popf
xor
arpl
sub
test
ljmp
mov
add
cli
adc
cmp
lock
jb
rolb
add
jae
int3
test
fcmovu
push
or
shll
fdivr
stc
dec
sti
inc
insl
aam
cmp
push
es
mov
cld
xchg
jl
mov
pop
enter
jge
mov
aam
sub
dec
adc
shll
in
inc
in
std
jb
add
in
fisubrs
add
fwait
test
push
shlb
int
addr16
dec
or
cmp
arpl
cmpsb
xor
sub
pop
test
loop
mov
xor
mov
mov
cmp
xor
lock
sub
divl
xchg
enter
jp
push
and
cmp
jno
inc
mov
push
fstps
push
aam
cmp
fdivs
pop
mov
mov
mov
scas
loop
cmpsl
test
js
and
or
mov
or
push
fdiv
xlat
cmp
test
push
and
push
stos
mov
cmp
aam
pusha
mov
lods
std
stc
pop
and
ja
cmpsl
lret
pushf
or
push
into
sbb
mov
sbb
mov
adc
sbb
hlt
and
xor
arpl
aaa
xorb
mov
xlat
xor
jl
and
xor
and
imul
inc
cld
xor
fdivrl
ja,pt
fnsave
arpl
ja
pop
mov
shlb
and
jge
or
mov
xor
jmp
cmp
pop
xlat
test
mov
fadd
sbb
inc
jnp
jg
push
ret
mov
test
daa
cli
std
jne
push
ljmp
sub
xchg
repnz
fldt
cmp
xor
ss
jo
lahf
ss
lods
idiv
xor
mov
push
or
xor
mov
ficoms
fimuls
or
stos
xor
imul
loop
dec
mov
xchg
roll
divb
cmp
test
scas
dec
std
mov
inc
jl
cli
xchg
and
sbb
sbb
int3
push
int3
and
std
insl
testl
or
xor
mov
jne
sub
mov
or
das
mov
or
dec
int3
push
cld
addl
xchg
and
jb
dec
movsl
inc
fs
adc
pop
mov
lods
into
jl
clc
loopne
shl
dec
stos
fstps
dec
cmpsb
ss
xor
pushf
jl
sub
dec
fimuls
test
mov
fiaddl
js
ret
imul
pushf
lods
daa
mov
and
insb
add
xchg
pop
fsubrl
push
dec
push
repz
or
mov
pop
daa
mov
push
int
fstl
lahf
mov
leave
and
inc
pop
test
pop
jae
ss
cmc
pop
nop
mov
mov
sub
cmp
loop
daa
dec
mov
mov
sbb
cltd
add
sub
pop
cmc
lods
push
inc
mov
inc
lcall
or
lcall
or
sub
sub
testw
fdivs
mov
dec
sub
adc
or
or
xchg
dec
cltd
mov
cmpsl
dec
mov
negl
sbb
jg
shll
es
sub
xor
inc
imul
or
or
fwait
sub
jne
fiadds
outsb
push
shlb
adc
mov
mov
ret
jg
push
lods
lahf
test
mov
xchg
jmp
pop
shr
cmp
xchg
jp
cmp
negl
mov
pushf
movsb
fdivs
sti
mov
pop
sub
je
inc
clc
sti
mov
push
pushf
roll
test
test
cs
test
xchg
cmp
test
jbe
ss
and
push
loop
pop
aaa
leave
ja
mov
xor
jecxz
jmp
jg
add
cmp
adc
pop
sti
or
aas
dec
inc
leave
aaa
jne
push
xchg
sbb
hlt
filds
jge
lods
push
std
push
xchg
jge
mov
mov
clc
cmp
xchg
mov
stos
je
daa
sub
mov
and
xchg
loop
pop
test
imul
pop
das
push
int3
pavgb
sub
fldcw
insl
ret
pop
jge
sbb
cmp
lods
xchg
mov
xchg
jl
xor
lea
mov
pop
or
cmp
jecxz
shrb
mov
cs
fnstcw
jmp
inc
xor
ret
mov
leave
jmp
jnp
push
mov
imul
and
rcll
and
sub
and
mov
adc
ror
ds
mov
sbb
jo
movsb
cwtl
xor
lahf
cli
in
sbb
sarb
call
pop
xchg
dec
sbb
jo
js
jl
ret
jae
pop
or
enter
cli
adc
mov
ret
or
lcall
add
xchg
testl
shlb
cltd
test
jo
mov
push
imul
aam
mov
dec
add
and
nop
test
pop
dec
sub
cmpsl
loop
xor
ss
sbb
shr
xlat
out
cmp
mov
cmp
or
adc
xorl
mov
out
or
arpl
rorl
je
sarl
sub
jbe
insl
repnz
xor
sbb
into
arpl
mov
jnp
sbb
sbb
sahf
push
push
nop
add
jno
sbb
dec
sub
iret
outsl
cmp
add
dec
lock
sbb
movsb
or
mov
or
scas
mov
lret
fldenv
mov
jns
addl
imul
leave
xchg
sub
iret
inc
jne
pop
adc
sub
jge
movsl
and
pop
out
stos
sbb
frndint
cmp
push
pushw
and
add
mov
testb
inc
cld
sti
jb
sbb
xchg
outsb
push
roll
outsl
in
gs
jns
adc
xor
mov
jne
mov
xchg
rcrb
inc
pop
mov
add
cmp
into
testl
mov
dec
cmp
jns
aad
inc
das
sub
inc
mov
int3
push
cmpsl
mull
dec
jmp
ja
jl
jle
in
push
addl
xor
sub
xor
mov
test
clc
popa
sbb
int
add
mov
insl
dec
popa
push
mov
pop
scas
out
dec
dec
sub
mov
mov
std
jecxz
ret
and
test
jns
fs
sbb
push
jno
xchg
mov
adc
and
adcl
push
out
das
or
and
pop
xlat
sbb
aas
loop
inc
mov
das
aad
and
sbb
push
xchg
loope
cmpsb
adc
ds
push
es
jo
push
mov
xor
mov
jns
sarb
cmp
ficoml
sub
pushf
mov
rcrb
test
das
xchg
xor
xor
pop
push
lods
and
repz
sbb
xor
mov
fwait
icebp
fdivr
mov
mov
int3
xchg
xorb
jnp
fwait
jnp
xor
adc
pop
jno
cmpsb
in
movsb
xchg
add
cmc
inc
fmul
mov
mov
adc
cmp
jecxz
sub
adc
stc
notb
dec
or
mov
popa
mov
sub
popa
xchg
mov
loope
mov
in
pop
sbb
mov
inc
add
jp
arpl
pop
cmpsb
or
test
dec
js
jl
idivl
pop
xchg
cmpsl
cmp
sub
lock
inc
push
jae
pop
add
dec
push
mov
add
inc
pop
fistl
das
insl
stos
subb
bnd
xor
mov
mov
mov
popa
jae
loop
mov
popa
aaa
insl
or
sbb
sbb
mov
loop
insl
in
sbb
hlt
enter
push
roll
push
sbb
hlt
mov
adc
fcomi
leave
std
and
sub
pop
jns
mov
jno
xor
inc
xchg
xor
enter
in
aaa
and
lret
and
fs
xor
pop
adcb
dec
jle
cmp
fcomps
loop
pop
popa
data16
xor
pushf
and
sbb
enter
cmpsb
pop
adc
fpatan
nop
sub
scas
inc
aam
fistpll
jns
adc
insl
test
leave
outsb
scas
jbe
pop
jnp
sahf
cmc
mov
insb
and
xor
jo
gs
test
mov
cmc
fnsave
out
filds
inc
sub
or
test
sahf
rcll
mov
popa
sbb
jo
xlat
adc
out
sub
jge
mov
in
pop
int3
and
jae
add
aaa
pop
ja
insl
call
popa
repnz
push
arpl
clc
insb
movsb
jmp
rcr
push
pusha
lahf
cmp
clc
pusha
pop
aad
xor
pop
fcmove
pop
dec
sub
push
nop
into
hlt
mov
mov
dec
imul
loopne
addr16
dec
outsb
xor
sbbb
hlt
ret
or
enter
stc
xchg
xor
adcb
popa
je
movl
std
jmp
adcl
ret
into
jae
cmp
adc
gs
adc
xchg
mov
fldenv
movsb
fnstcw
rolb
out
cld
push
add
jno
repnz
arpl
subl
pop
ds
sub
mov
out
pop
shll
cmp
cmpsl
xchg
adc
mov
dec
out
xor
or
sbb
addr16
clc
inc
loop
xor
test
aad
pop
test
and
lcall
lcall
xor
nop
dec
cmp
ss
imul
call
xchg
sbb
sbb
insl
jo
sub
pusha
lret
int3
es
and
mov
in
and
pusha
ficompl
js
sbb
notl
xchg
das
lock
jecxz
push
pop
cmp
sbb
cmpb
push
add
mov
nop
out
xchg
mov
and
push
bound
sub
xor
mov
ja
jo
jg
cltd
pop
js
adc
jg
ss
jle
sub
fcmovnu
and
sbb
xor
fildl
rorb
fists
cmp
inc
sbb
adc
inc
jbe
mov
int
dec
dec
test
das
mov
lods
push
or
rclb
loope
rcrb
xor
pusha
jmp
pop
decb
mov
out
dec
and
pop
sbb
push
arpl
sbb
ljmp
leave
aas
fstps
sub
sbb
fwait
daa
mov
dec
fiaddl
push
test
test
decb
pop
push
es
orb
xlat
sbb
mov
or
push
cmp
cmp
jecxz
jg
or
add
jns
adc
inc
or
ss
cmp
into
pop
inc
and
cmp
jmp
sbb
movsl
test
clc
jecxz
cmp
repnz
aaa
xchg
cltd
add
lahf
js
scas
adc
or
inc
test
and
mov
fisttpl
add
pop
xor
sbb
mov
cmc
ret
sub
daa
jae
adc
and
cld
fimull
mov
clc
dec
iret
int
daa
adc
stos
xchg
xor
inc
or
mov
ja
adc
in
imul
repnz
cmp
stos
faddl
lret
es
dec
dec
pop
aas
inc
gs
or
xchg
jnp
outsb
test
das
inc
mov
outsb
test
out
cmp
cmp
xchg
bnd
cmp
mov
adc
push
std
sub
mov
cmp
stos
inc
rcl
ja
aas
or
out
dec
stos
jl
fwait
adc
repnz
sub
dec
sub
loop
or
stc
mov
lds
stos
mov
scas
dec
mov
int3
sub
rcrl
mov
rep
xor
sub
cmp
and
dec
or
pop
decb
aad
and
sahf
test
les
into
inc
insb
jl
adc
jne
test
mov
fisttps
fcompl
out
jecxz
in
stos
push
icebp
ljmp
movsl
adc
data16
add
imull
sbb
inc
and
out
popf
mov
pushl
mov
aaa
callw
cmp
push
test
jns
push
cs
jg
jmp
movsl
lea
mov
scas
lock
mov
push
cmp
cmc
add
mov
and
pop
icebp
and
add
mov
ja
insl
fs
mov
test
in
lds
or
ret
mov
lea
das
sti
dec
mov
es
fimuls
movsb
mov
or
mov
mov
inc
mov
mov
out
mov
xchg
mov
pop
and
fdivrp
lret
repz
or
mov
and
sbb
loopne
xchg
push
popf
inc
or
xor
and
add
adc
and
pop
rorb
aas
ss
jecxz
movsl
and
leave
push
in
sti
sub
scas
nop
cmp
jl
add
xchg
pop
movsl
sub
jle
fidivrs
loopne
mov
loopne
pop
or
mov
lea
mov
movsb
add
ret
mov
aaa
mov
jae
outsl
mov
xchg
mov
inc
or
mov
ljmp
sub
sarl
sbb
mul
xor
int3
pop
sgdtl
je
aad
pop
test
mov
mov
stos
ja
inc
and
fs
add
popa
cld
push
out
push
jmp
stos
jl
sbb
out
jmp
dec
inc
xor
leave
lock
sbb
push
push
pop
mov
lods
adc
jmp
xchg
pop
mov
pushf
mov
or
fidivs
sbb
test
mov
addr16
jecxz
test
ja
dec
in
pushf
enter
sub
xchg
cmpb
popa
call
jecxz
inc
fabs
adc
adc
xor
adc
lcall
lock
roll
pop
outsl
mov
enter
cld
pop
xchg
test
xlat
sahf
mov
cltd
sub
fldl
add
jno
or
jo
daa
mov
in
shrl
mov
imul
clc
adc
add
inc
mov
xor
imull
dec
or
out
sahf
jg
les
push
aaa
push
int
ftst
push
gs
cmp
jecxz
inc
jmp
add
cmp
xor
pop
push
fs
addr16
pushf
cmp
inc
jge
daa
stos
stos
mov
mov
xchg
imull
dec
mov
stos
in
and
cmp
push
pop
stos
cmp
mov
push
cli
pop
cwtl
cs
xchg
fnstcw
mov
or
adc
test
inc
addr16
inc
leave
cmp
push
xchg
mov
or
mov
imul
cmp
iret
das
push
lret
test
stos
ret
in
sbb
sbb
leave
fwait
sbb
pusha
fisubrs
inc
imul
sbb
xchg
inc
popf
jno
movsl
xchg
push
int
cltd
add
xor
sub
lods
imul
push
or
xor
stos
ljmp
xor
lret
mov
daa
notb
test
ret
rcr
jns
dec
xor
std
sbb
enter
mov
and
mov
add
xor
mov
jmp
jp
mov
cwtl
imul
jno
mov
test
jno
icebp
and
add
icebp
lods
pop
aaa
daa
repnz
sbbb
adc
fcoml
push
cmpsb
loope
shlb
and
xchg
and
dec
out
xchg
sub
movsb
or
jnp
or
lock
dec
jbe
or
cmc
adc
pop
scas
call
lahf
idivb
lret
sub
sarb
push
lcall
cmp
dec
clc
sarl
rorl
push
cli
push
cmp
jbe
pop
jmp
jo
loope
es
in
and
xor
lea
mov
stc
shlb
sbb
mov
mov
rclb
loope
out
cmp
pop
jmp
pop
insb
push
jecxz
in
and
push
dec
sub
jne
mov
push
jg
es
mov
push
out
ficoml
fcmovnbe
cltd
test
adc
popf
or
or
push
xor
mov
cmpsl
aad
stos
or
inc
sbb
mov
inc
js
push
mov
sbb
ret
cld
addr16
mov
stos
sub
mov
dec
push
push
das
pop
mov
jmp
inc
lods
mov
decl
popf
adc
mov
jg
cmp
cltd
add
xchg
iret
xchg
out
inc
and
jns
cli
xchg
push
stc
inc
lret
push
cmc
push
jecxz
mov
mov
sbb
pop
mov
sti
mov
mov
or
out
mov
imul
and
fisttps
test
push
xor
add
fcmovnb
jns
sbb
and
rclb
sub
lahf
and
ret
mov
mov
jp
insb
ljmp
frstor
adc
fimull
sub
cli
sahf
jo
into
shlb
jo
sbb
iret
jle
out
movsb
roll
js
movsb
jne
icebp
repz
xor
sbb
fistpll
pop
and
aaa
daa
mov
mov
imul
mov
fiadds
lds
xchg
push
xorb
push
in
lock
popl
mov
cltd
mov
fs
cld
leave
rolb
mov
ret
add
mov
cmp
insl
add
cmp
pushl
inc
test
arpl
dec
js
leave
cmpsb
ficomps
test
nop
xor
popa
cmp
leave
sbb
dec
jle
mov
decb
mov
mov
lret
cld
fsubr
stc
mov
outsb
and
mov
stos
mov
cs
adc
jnp
add
push
inc
pop
mov
es
js
arpl
sbb
sbb
cltd
adc
je
sub
adc
adc
mov
push
repnz
cmp
and
shrb
push
jmp
xchg
es
or
mov
outsl
pop
and
divb
int3
sbb
xchg
cwtl
cmp
fs
lods
mov
jae
sbb
add
in
xorl
adc
add
jo
cmpsl
sub
aaa
xor
mov
nop
or
js
sbb
add
imul
pop
adc
aas
nop
int3
dec
pop
cwtl
lcall
roll
stos
lods
das
sbb
cld
jecxz
into
test
loop
add
sarb
cmc
ret
fmul
jge
or
mov
pop
aaa
jge
mov
out
imul
pop
cmp
mov
int3
shrb
fwait
rorl
dec
xchg
jns
shll
push
inc
icebp
jp
das
mov
mov
mov
cmp
sub
ja
jl
sbb
into
inc
pop
mov
lods
nop
pop
repnz
cli
mov
das
ficoms
loop
out
pusha
sbb
jp
in
push
call
xor
fsubs
cs
lret
dec
xchg
xchg
jge
loopne
cmpsb
dec
js
test
and
in
lock
cmpsl
jg
fcmove
dec
pop
in
push
ss
in
and
xlat
mov
stc
add
stc
fnstenv
loop
imul
lcall
mov
testb
cmp
lods
in
das
dec
fdiv
mov
jl
sbb
push
xchg
dec
test
jmp
xchg
inc
mov
out
cmpl
sbb
sti
cmc
or
lods
jo
xchg
mov
movb
mov
mov
clc
push
or
or
push
sbb
or
icebp
aaa
push
add
jge
ficoml
or
repz
aas
aaa
loop
test
imul
cmpsb
xor
jmp
roll
lds
cmp
and
add
and
inc
testl
dec
lea
sub
xchg
imul
leave
movsb
add
cmp
xchg
jno
push
jg
xchg
ret
push
dec
out
cwtl
mov
rclb
push
ss
addr16
hlt
jnp
fsubrp
pop
lret
dec
data16
mull
and
orb
push
jb
call
arpl
mov
jmp
push
bound
int3
xchg
pop
dec
pop
jmp
push
leave
imul
mov
xlat
push
call
int
sti
adc
mov
jmp
test
push
ds
and
xlat
hlt
fstl
push
dec
daa
xchg
into
xor
add
sbb
and
jnp
insl
push
jmp
pop
cwtl
lret
cmp
cs
lret
sub
jmp
icebp
mov
xchg
arpl
rorl
jb
js
fnstcw
fwait
sbb
sbb
inc
jl
dec
cld
ret
bound
in
push
mov
lods
or
aam
aad
cld
fwait
push
adc
jbe
les
ss
cwtl
adc
jmp
cmpl
aas
iret
loope
mov
sub
into
jb
cmpsb
enter
ret
shll
cmpsl
push
out
pop
lcall
lods
and
mov
push
lods
and
push
loopne
repz
ljmp
sbb
sub
fsubrl
sbb
pop
mov
cmp
sbb
in
je
test
inc
mov
sub
mov
mov
pop
mov
mov
push
sub
pop
dec
mov
pop
mov
mov
shl
sbb
cmpb
stos
decl
lcall
popa
fnstsw
cltd
push
xchg
out
iret
jnp
xor
pop
inc
lds
cmovl
dec
mov
mov
inc
lahf
fdivrs
jbe
mov
cli
adc
jp
lret
in
add
scas
dec
cmp
bound
movsl
add
mov
xchg
and
mov
mov
dec
xorl
rolb
add
arpl
adc
cmp
lods
jecxz
or
jecxz
loopne
lcall
stos
xchg
movsb
push
iret
sbb
aas
rol
popa
or
ret
push
sahf
mov
mov
push
int3
push
pop
inc
mov
js
and
adc
add
mov
and
fisttpl
inc
adc
in
push
leave
fs
ret
push
adc
ss
xor
test
in
enter
ja
push
cli
orb
mov
in
mov
add
jnp
cld
push
push
out
pop
push
pushf
mov
pop
scas
mov
push
cmp
xor
ficoml
push
rcrb
cmp
pop
mov
pop
or
rcrl
xor
mov
fisubl
sub
imulb
fmull
fst
push
ja
scas
and
mov
add
mov
xor
decb
xor
lret
movsl
sahf
pop
repz
and
fcomps
inc
iret
int
inc
sarl
cli
xchg
nop
sarl
pop
cltd
jbe
popa
das
inc
arpl
inc
stos
je
xchg
mov
icebp
ror
adc
and
dec
cmp
mov
fs
pop
outsb
xor
js
icebp
pop
outsl
and
push
bound
addr16
pop
shl
sub
idivl
js
jle
and
vmwrite
lret
push
mov
clc
mov
ret
mov
xchg
enter
dec
cltd
push
pop
shr
xor
mov
dec
hlt
inc
aaa
jmp
mov
cmp
lahf
and
inc
dec
scas
inc
pushf
int
xchg
and
or
add
test
pop
das
dec
jecxz
es
xlat
popf
sub
in
test
mov
jbe
jbe
fistps
dec
add
out
push
xor
fldt
lcall
inc
test
es
insl
cltd
jnp
sub
and
xchg
ss
mov
jecxz
inc
int3
sub
sbb
jg
mov
and
in
push
add
dec
or
jge
add
sub
rorl
pop
add
adc
gs
push
xor
xchg
sti
xchg
dec
xchg
mov
lea
adc
aaa
inc
sub
pop
pushf
loop
jb
cmp
or
lret
out
jmp
sbb
adc
pop
inc
cmp
int
shrb
inc
in
or
arpl
adc
vucomisd
and
inc
aam
subl
pushf
adc
dec
hlt
mov
cmp
stc
test
add
hlt
dec
jle
stc
xchg
mov
push
push
enter
adc
lods
in
sahf
idivl
aam
cmp
pop
jge
cwtl
shll
fildl
in
in
dec
hlt
je
push
add
js
mov
lods
lods
xor
xorl
sahf
aas
pop
mov
incl
nop
jge
daa
or
rcrl
mov
test
bound
je
jnp
sbb
inc
sbb
xchg
sbb
add
mov
pop
pop
adc
in
fistl
scas
pop
add
mov
gs
sub
in
jno
xchg
loop
mov
or
add
popa
das
jecxz
cltd
jne
ds
jl
or
dec
adc
jnp
and
jle
scas
fistps
fsts
ss
movsl
lods
jg
std
pop
js
test
call
sti
sub
stos
lea
fisttpll
fdivrs
xchg
sbb
or
pop
fs
faddl
dec
int
xor
mov
mov
fdivs
movsl
mov
and
xor
cmp
mov
call
insb
add
outsb
adcb
loope
lea
push
andb
inc
movsl
cmpsl
mov
sub
xlat
jmp
dec
xchg
push
or
dec
lahf
adc
mov
jnp
dec
mov
and
cmp
push
popa
test
dec
in
push
js
pusha
dec
cmp
pop
adc
insl
inc
pop
pop
jmp
clc
and
lods
xor
mov
lret
mov
dec
sbb
loope
pop
repnz
mov
sbb
and
and
fcos
hlt
pop
push
and
jmp
andl
xchg
andb
mov
int3
daa
clc
sub
sub
cmp
xchg
insb
ja
call
dec
jns
rcll
roll
out
aam
xor
lds
add
xor
rolb
xor
mov
ficomps
clc
jl
jp
cmc
push
ret
and
popa
mov
jle
mov
mov
mov
jle
fsubs
cmp
fwait
orb
stos
cmc
and
imul
sbb
mov
aas
and
jno
cmp
jp
aad
out
mov
shrb
sahf
xlat
xchg
pushf
push
mov
icebp
inc
nop
dec
out
dec
lret
xchg
jmp
test
jecxz
push
lock
pop
mov
adc
sub
push
out
mov
push
jl
mov
cmc
test
adc
dec
pop
inc
mov
pop
mov
xchg
and
out
mov
xor
add
jl
pop
mov
lds
inc
sub
pop
stc
add
cmp
adcb
push
lahf
stc
cld
data16
sbb
xchg
push
push
cwtl
sub
in
xlat
mov
sbb
enter
and
xchg
dec
aad
movsb
push
or
and
jne
lods
xorl
mov
jp
gs
sub
xchg
rorl
inc
loopne
ficoms
aas
add
jns
in
adc
mov
je
adc
loope
out
insb
addb
inc
movsl
mov
push
dec
test
inc
mov
mov
fnstenv
out
test
mov
pushf
out
cmc
fs
addr16
mov
fsubp
mov
ret
xchg
xor
std
cmp
rorb
hlt
xchg
aaa
xor
repnz
xor
mov
sbbb
mov
xchg
iret
dec
std
dec
pusha
mov
sbb
push
test
rcrl
inc
jp
mov
les
sbb
test
cwtl
dec
mov
fcmovne
out
in
rclb
shrl
and
data16
jno
rorl
arpl
cmp
lock
cmp
vpaddw
fiadds
inc
pop
cmp
cs
jb
aaa
mov
ficompl
cmp
orb
lea
lcall
imul
mov
xchg
in
xchg
test
cmp
inc
mov
cmp
test
dec
jmp
adc
rclb
repnz
data16
jae
add
rcrb
in
mov
aad
inc
fsubrs
pop
mov
cs
test
inc
dec
sbb
pop
xchg
add
xchg
mov
test
sbb
xchg
pop
inc
and
fs
in
icebp
xorb
xor
fwait
mov
daa
pop
inc
movlhps
mov
outsb
sub
xor
imul
stos
shlb
mov
adc
out
xchg
loop
inc
les
stc
in
lods
pop
cltd
into
imul
call
lds
push
jne
mov
add
rol
inc
repnz
leave
stos
mov
push
outsb
test
cmp
rclb
das
fwait
movsb
rclb
push
inc
cmp
jae
das
adc
stos
xchg
hlt
xchg
lret
imul
dec
cmp
adc
cmc
stos
dec
sbb
mov
sub
sbb
outsl
outsb
cmp
jl
js
jmp
push
inc
into
sub
dec
rol
andl
push
xor
and
in
or
jo
mov
addl
pushf
xor
push
adc
out
push
cs
stos
or
mov
dec
adc
in
je
ljmp
sub
add
test
ja
pop
cmp
cmp
cmp
into
or
and
inc
ss
jae
xchg
jbe
sub
scas
or
nop
scas
cmp
push
iret
mov
mov
sbb
jno
or
mov
lcall
fnclex
and
pop
sarl
mov
xor
and
shrb
in
imul
insb
clc
pop
lock
adcl
test
out
mov
cmp
add
lret
ret
test
jge
push
je
pop
xchg
inc
fstpl
add
xor
cmp
inc
ljmp
fldt
bound
pushl
jns
inc
mov
ja
enter
pop
hlt
jecxz
pop
jae
or
nop
cmpsl
inc
sarb
dec
jo
loop
inc
inc
mov
cmpsb
adc
lea
insl
and
xor
push
push
adc
daa
shrb
jb
imul
imul
mov
mov
jecxz
and
call
jle
push
clc
dec
push
imul
shr
daa
cmpb
imul
xchg
xchg
ja
into
xchg
pop
pop
mov
aad
sub
sub
inc
sub
push
cmp
lods
jno
push
inc
aas
jnp
int3
mov
jecxz
push
in
sub
xchg
push
cmp
inc
out
insb
pop
jns
mov
fs
sbb
stc
addb
rorb
scas
xlat
inc
jbe
mov
jns
xor
fbld
xchg
cmpb
lcall
test
push
jg
mov
push
loopne
test
pop
push
sbb
sti
mov
inc
aas
cmpb
jnp
adc
ret
dec
test
fidivs
inc
dec
cmp
sbb
std
push
mov
push
push
and
outsl
out
dec
push
sbb
cld
jo
iret
mov
and
mov
rclb
add
les
scas
jb
mov
pop
in
sbb
lcall
or
mov
sbb
mov
inc
and
sbb
cmp
sub
jg
dec
cmp
dec
test
subb
enter
fcompl
faddp
rcll
xor
sbb
mov
xchg
sbb
pop
mov
xor
lret
add
dec
and
xchg
inc
ss
das
scas
jle
push
dec
aad
movsb
inc
mov
outsl
mov
sub
fsubrl
sbb
popa
mov
enter
movsl
iret
or
in
sbbl
nop
imul
jno
popa
das
and
xchg
lods
adc
lods
pop
sarl
xchg
jle
fbstp
shl
jecxz
aaa
lods
insl
adc
or
lret
mov
and
xor
lods
ljmp
pop
push
jns
jae
dec
fsts
imul
popa
cwtl
sbb
fimull
fldenv
das
mov
loopne
mov
mov
arpl
repz
mov
std
xchg
dec
mov
rcll
or
push
shll
inc
fcompl
outsb
and
ja
and
ljmp
js
aad
sar
movsl
mov
jo
push
jbe
mov
das
jnp
fbld
enter
adc
movsb
mov
js
adc
test
test
push
jp
out
sub
jle
push
andl
or
and
or
xchg
jle
ffreep
push
scas
cltd
popf
outsb
xor
jae
adc
jno
xchg
cmp
xchg
mov
and
dec
or
dec
xor
jo
mov
mov
and
popf
test
push
cmp
xchg
and
add
hlt
lcall
xor
push
mov
enter
add
int3
add
add
sti
xchg
xchg
adc
ret
jle
mov
jns
mov
iret
int
mov
jne
cwtl
pop
and
stos
divb
mov
cmp
fidivrs
push
mov
pop
push
cmpb
scas
mov
jne
leave
add
push
or
in
or
xor
jecxz
mov
cwtl
inc
fstpl
outsl
xor
into
sub
pop
cmp
nop
and
out
in
push
mov
lret
adc
lahf
std
and
jns
femms
stc
ja
ret
cmpsb
pop
xchg
push
mov
jp
jp
pop
fistpll
push
jl
mov
in
fs
or
push
push
mov
es
inc
dec
pop
xchg
mov
jl
inc
sub
mov
movsb
cltd
adc
or
adc
sub
iret
shl
or
mov
mov
sub
repz
lcall
add
movsb
bound
add
xor
cmc
xor
push
shlb
ret
addl
mov
int
pop
xor
hlt
or
sahf
outsb
push
arpl
inc
and
mov
pushf
inc
into
popa
dec
sub
rorb
sub
mov
sbb
mov
int
lcall
pop
mov
inc
mov
jns
ds
jg
in
xchg
sbb
or
mov
adc
xlat
les
xor
mov
pop
jb
cmp
or
mov
add
std
sbb
dec
xchg
jbe
jge
add
jl
add
ds
mov
jl
xchg
inc
mov
pop
mov
shrb
fimuls
xor
clc
and
loopne
xchg
mov
ljmp
sahf
push
in
lock
mov
push
jl
ret
pop
loop
mov
es
and
xor
imul
jne
cwtl
inc
pop
fwait
lret
xor
push
adc
mov
vpunpckhqdq
dec
push
bound
out
femms
cmp
stc
mov
jns
pop
or
aad
sub
cwtl
cltd
sahf
xor
ljmp
sbb
sti
jmp
shrb
cli
push
pop
mov
cmp
xor
das
or
and
dec
stos
insl
cltd
add
inc
ss
out
xchg
adc
inc
push
mov
fiaddl
xchg
pop
sub
push
arpl
jmp
fdiv
inc
xchg
insb
push
jl
xchg
je
or
add
pushf
out
seto
cmp
mov
dec
mov
sbb
xor
inc
addr16
jae
ror
add
outsl
add
jg
rcr
xchg
dec
popf
xor
aaa
fsubrs
into
xchg
push
cmpsl
sbbl
sbb
sbb
mov
fs
cli
sbbl
cld
mov
mov
fmul
lcall
ficompl
inc
fcom
mov
fdivrs
jg
jg
xchg
jno
insl
fstps
inc
push
stos
mov
orb
pop
ja
aaa
cltd
out
add
bound
mov
sub
hlt
adc
pop
push
cld
xor
repnz
std
push
insb
fsubs
xor
ret
das
xchg
xchg
dec
pop
fimuls
repnz
aas
lahf
xchg
jle
xor
adcl
nop
rep
jbe
lea
daa
nop
lods
test
mov
mov
cmc
push
xor
es
inc
push
loop
or
xor
fidivrl
xor
enter
inc
xchg
push
push
int
cs
push
shrb
cmpb
sahf
inc
scas
add
sbb
jbe
int
dec
into
pop
shlb
jno
xlat
loope
adc
imul
cld
ja
outsb
cmpsl
pop
sti
jecxz
test
jnp
out
push
aaa
ljmp
jbe
lahf
jbe
out
or
or
loopne
cmp
stc
add
adc
mov
push
shl
out
iret
je
push
mov
xchg
mov
popa
or
fnstcw
mov
sahf
pop
jp
stos
enter
adc
sbb
pop
cwtl
lret
dec
stos
pop
jb
sbb
add
push
test
and
mov
mov
sub
mov
xchg
pop
hlt
mov
mov
and
aaa
in
mov
and
in
adc
dec
into
stos
push
lret
cmp
dec
mov
mov
push
cmp
sbb
inc
and
iret
sbb
dec
dec
ss
lds
movsb
imul
xor
and
aas
call
mov
pop
pop
pusha
roll
loopne
je
push
jmp
rol
add
pop
sbb
lret
mov
call
ljmp
in
in
xor
or
test
popf
and
in
cmpsb
shlb
adc
out
jo
fnop
stc
js
pop
fidivl
push
inc
inc
cmp
daa
jle
jns
lods
out
cltd
sbb
int
movb
bound
push
scas
and
push
int
xor
inc
sbb
ja
movsl
and
in
mov
sbb
xor
cmp
mov
out
add
cltd
push
adc
int
mov
in
test
sub
roll
hlt
xchg
cli
loop
scas
and
push
pop
mov
out
jp
popf
pop
xchg
xchg
sti
out
imulb
xor
sub
sub
push
das
xor
add
adc
inc
stc
aaa
dec
or
in
les
pusha
aaa
movswl
add
add
aas
rolb
mov
cmpl
sbb
imul
popf
ss
jns
dec
cwtl
pushf
sub
cmp
scas
sbb
fs
shlb
out
imul
ficompl
hlt
repz
out
and
push
xor
inc
addr16
into
sub
scas
lahf
out
push
mov
sub
adc
pop
xchg
xor
push
jb
xor
cmp
je
jnp
inc
jnp
xor
loopne
push
inc
jnp
or
mov
in
repnz
insb
divb
enter
aaa
cmp
jae
in
cmp
imul
cli
add
test
loop
aas
into
test
pop
sahf
push
lock
sub
cltd
mov
cmp
les
mov
in
xchg
loop
iret
dec
jb
inc
push
xchg
fcomps
mov
push
sbb
clc
fistpll
repnz
mov
in
ret
dec
pushf
adc
dec
mov
pop
rorl
ret
clc
out
dec
jns
addr16
fidivs
test
test
dec
jb
out
pop
mov
in
popf
fs
adc
sbb
inc
mov
out
sti
fistl
pusha
mov
jno
je
rcl
dec
inc
and
cmp
ss
cmp
mov
iret
push
inc
scas
mov
mov
mov
add
xlat
mov
fbld
daa
sub
loope
cmp
xchg
and
cltd
mov
pop
fnstcw
insl
jle
mov
mov
scas
push
mov
and
in
cmp
sbb
sbb
pop
push
push
sbb
fcmovnu
lcall
mulb
nop
sbbb
lods
push
movsb
inc
jno
xchg
sti
pop
idivl
pop
jmp
das
stos
imul
popa
adc
movsb
cld
adc
imul
sub
daa
cmp
mov
inc
adc
flds
xchg
add
sub
xchg
mov
mov
mov
lret
fldln2
cmp
dec
push
xor
adc
xchg
jge
jo
subb
mov
lret
mov
and
in
es
scas
sbb
xor
mov
ret
and
pop
mov
popa
dec
out
pop
mov
push
sti
out
jo
and
and
and
push
add
inc
push
mov
rorb
jecxz
repz
loopne
inc
push
dec
jne
pop
add
sahf
jbe
mov
jg
push
sub
mov
les
lods
dec
jno
push
int3
and
adc
pusha
adc
mov
jbe
fimull
or
xchg
fstps
out
add
sub
sbb
sbb
enter
xor
mov
dec
mov
pop
push
stos
movsb
sti
pushf
xor
and
repnz
xor
nop
fdivrs
rolb
dec
fmull
pop
dec
sub
aam
mov
push
insl
push
cltd
jnp
inc
in
aaa
loop
jns
mov
enter
out
nop
mov
movsb
mov
ljmp
mov
pushl
mov
hlt
insw
ffreep
pushf
mov
insb
cmp
sahf
mov
dec
and
push
leave
inc
mov
or
push
mov
mov
inc
aas
push
sahf
loope
inc
repnz
js
fs
sub
fwait
mov
iret
dec
mov
filds
xchg
push
xor
fs
sti
vpsubw
adc
loopne
cmpsb
jecxz
outsl
push
movsl
pop
and
push
movsl
mov
outsb
inc
inc
add
mov
jbe
cmpsb
mov
bnd
cmc
scas
adc
add
test
mov
pop
loop
movsb
shr
je
fstl
lcall
xchg
leave
push
fidivrs
cltd
sub
imul
test
mov
jno
js
sub
mov
mov
repz
xor
xchg
mov
std
stc
push
inc
sub
pop
rclb
aad
pop
pop
pop
adc
je
dec
movsl
mov
inc
sbb
out
xor
stos
and
cld
mov
sub
ja
pop
imul
repnz
jae
cmc
lea
mov
xlat
in
int3
ds
sbbl
or
es
into
pop
fbld
aas
xchg
inc
iret
mov
scas
xor
jb
jns
dec
addl
jle
sti
mov
and
mov
lea
sbb
inc
test
ret
cmp
sbb
pop
adc
dec
fstps
sub
outsl
insl
inc
push
lcall
adc
cli
mov
mov
mov
pop
ret
cld
jg
push
mov
xlat
in
mov
test
jae
dec
mov
sbb
sbb
pop
jl
sbb
push
jbe
inc
jp
out
lods
adc
icebp
es
mov
xor
dec
mov
xlat
mov
push
pop
and
xchg
inc
mov
jp
cltd
iret
add
aad
cld
cmp
popa
cmp
lds
mov
incb
je
mov
jbe
fmull
test
outsl
mov
inc
icebp
in
aas
dec
outsl
cmpsl
mov
lock
repnz
inc
xlat
repz
mov
adc
lret
inc
aam
mov
sahf
lea
xchg
stos
mov
jae
adc
xor
cmp
adc
push
xor
push
aas
out
aad
xchg
inc
xor
mov
pushf
pop
mov
ds
cmpsb
test
push
scas
jns
imul
sbb
fwait
sti
testb
insb
mov
sahf
and
icebp
out
pop
add
aam
cltd
jecxz
ret
mov
mov
loopne
jns
xchg
sar
jae
or
inc
push
ficoml
into
lods
push
into
es
adc
enter
sub
cwtl
ljmp
stos
cwtl
imul
popf
stos
js
mov
push
loopne
mov
mov
test
rorl
adc
mov
sti
aaa
in
mov
mov
fcoml
and
pop
pop
fs
jnp
mov
data16
jnp
mov
and
push
add
mov
and
jae
or
out
adc
inc
ljmp
ljmp
lcall
cmp
mov
mov
pushf
pop
pop
xor
movsl
ret
add
jecxz
in
sbbb
mov
loopne
rcll
fisubrs
movsl
or
test
xchg
mov
js
adc
inc
sbb
sub
adc
scas
insb
ss
popa
and
shll
lret
cmp
push
lcall
dec
push
mov
xor
out
sub
jno
sbb
pop
ljmp
lcall
fstpt
aam
lcall
add
cs
adc
add
cmp
add
mov
pop
push
std
cmp
xorl
in
cmpsb
out
mov
mov
add
mov
cmp
pop
loope
cmp
pop
cwtl
mov
fucom
push
ret
xchg
call
insl
shlb
mov
mov
mov
clc
popf
into
cld
mov
mov
stc
pop
fdivs
xchg
mov
arpl
inc
jle
pop
sbb
mov
out
mov
mov
add
adcb
xchg
sarb
popf
xchg
push
or
lea
or
xchg
scas
mov
add
sub
lods
jle
pushf
stos
pop
fisttpll
dec
repz
jle
les
addb
shll
mov
mov
push
hlt
out
sti
stc
lret
bnd
push
pop
mov
push
mov
mov
aad
ret
mov
xchg
andb
insl
js
mov
test
dec
adc
lods
clc
hlt
mov
jmp
loopne
mov
mov
push
mov
daa
jae
mov
dec
test
pop
lahf
movzbl
xor
push
imul
lret
cmpsb
popa
mov
imul
cs
pusha
inc
aad
aad
or
daa
pop
sbb
xor
inc
mov
add
lods
dec
pop
mov
mov
movsb
je
ret
and
lds
nop
lods
xor
mov
mov
pop
loope
inc
imul
hlt
inc
pop
je
enter
sbb
lea
mov
lret
ljmp
jbe
mov
lods
clc
cs
mov
cli
cli
bound
movsb
lcall
pop
xchg
mov
push
shrl
jge
or
bound
ja
and
mov
inc
repz
std
mov
push
mov
stos
out
dec
push
pop
sarl
ficomps
xor
jp
dec
je
out
sti
sub
mov
or
scas
fadds
iret
sbb
ret
cmpsb
fnstsw
mov
mov
inc
das
adc
repnz
outsl
inc
imul
lods
and
xchg
test
ljmp
sub
jns
lds
mov
dec
lahf
hlt
xchg
inc
cs
loopne
inc
int3
jmp
jno
hlt
loopne
mov
jg
dec
ss
out
mov
or
xor
jnp
or
or
movsl
dec
fcmovbe
dec
sub
mull
bound
xor
dec
or
enter
imul
addl
test
push
std
leave
push
jae
in
aad
cwtl
dec
into
or
sub
mov
push
cltd
pop
fimull
lret
ljmp
pop
jae
pop
rcrl
lret
xlat
out
mov
xor
pop
add
fwait
rclb
jle
jmp
pop
push
pop
imul
aad
adc
or
bound
xchg
into
lret
sub
push
je
mov
xchg
xor
cwtl
jbe
inc
mov
and
out
inc
bound
nop
hlt
in
push
inc
jg
xchg
sub
mov
xchg
sub
xor
lcall
adc
sub
stos
in
xchg
jns
pop
test
xor
mov
daa
das
mov
adc
ret
pushl
cld
push
pusha
movsb
cmpsb
dec
xor
mov
pop
repnz
out
inc
mov
enter
push
stc
movsb
sbb
xor
lea
int
inc
es
push
mov
sbb
mov
mov
lcall
inc
aam
ficoml
subl
out
mov
popa
enter
test
pusha
or
sub
jg
sahf
ret
das
in
push
mov
inc
pop
cs
xor
imul
cmpb
jmp
pop
daa
xor
insb
inc
fdivrs
push
into
xchg
lahf
cwtl
loope
pop
into
and
es
cld
lret
fcmovbe
push
popf
adc
imul
cmp
mov
les
adc
adc
sub
and
int3
in
mov
mov
arpl
idivb
jmp
and
cmp
jl
cmc
jp
adc
loope
dec
inc
in
fidivrl
jae
test
stos
xchg
add
lret
mov
pop
jbe
pop
mov
fdivl
mov
push
cli
mov
bswap
cmp
fadds
fstl
and
xor
bound
adc
add
jne
mov
mov
cld
pop
mov
arpl
push
mov
jae
jnp
pop
cs
lods
test
mov
hlt
push
inc
and
adc
int3
sub
jle
mov
repz
add
ret
jp
sub
adc
jo,pt
fnsave
or
aam
cmpsl
clc
in
xor
in
daa
sbb
fprem
jns
in
out
dec
scas
ficomps
lcall
sbb
add
jmp
pop
test
arpl
int
adc
add
cwtl
mov
mov
or
or
aaa
inc
add
pop
mov
aas
cltd
nop
mov
mov
in
test
or
daa
enter
inc
movsb
sbb
aad
cmpsb
leave
clc
sub
mov
xlat
ret
sbb
cmp
jecxz
aaa
push
and
push
icebp
inc
xor
sub
jnp
fdivs
out
or
mov
jbe
pop
sub
adc
xor
adc
mov
push
sti
adc
out
cmp
sbb
test
into
negl
in
add
rorl
into
pop
pop
xor
lcall
add
cmpsb
dec
aam
sti
sbb
cmp
push
les
pop
shl
lahf
xorb
hlt
sbb
in
xchg
loop
sbb
mov
cmp
sub
add
jp
pop
orb
push
push
push
xchg
pop
push
cmp
mov
lcall
loop
dec
out
xchg
sub
aaa
ret
sub
sbb
in
cmp
mov
xchg
jg
and
mov
imul
jecxz
sbbl
popa
popa
cltd
add
mov
sar
pop
lahf
jmp
repnz
and
imul
xchg
andb
jo
insb
mov
cmp
les
pop
jmp
mov
pop
popa
push
test
mov
aad
inc
jl
shr
pop
shll
mov
ja
out
xorl
in
push
add
adc
inc
sti
lahf
or
testb
aaa
add
mov
fwait
pop
mov
lret
lods
add
push
dec
pop
add
iret
xlat
call
jo
lea
inc
mov
pop
add
cmc
add
sbb
mov
mov
jl
leave
loop
negb
movsb
pop
cmpsl
add
sbb
cmp
add
decb
sti
cmp
adc
push
int3
ficoms
mov
lock
les
stc
lea
add
lahf
push
add
cld
adc
int
add
or
pop
fcmovnb
mov
cld
movsl
in
adc
mov
cmc
int
xchg
imul
and
add
in
pop
dec
fstps
pop
cmp
sub
dec
xorb
jg
add
int
xchg
mov
sub
je
out
pop
daa
inc
inc
ret
xchg
mov
jae
addr16
add
add
inc
fistl
adc
lcall
cmp
lea
std
push
push
jecxz
adc
inc
xchg
cmc
std
outsb
sbb
or
fs
jb
das
nop
out
fdivrs
push
jle
inc
roll
jge
movsb
sar
cmp
xchg
push
adc
test
popa
cmp
jge
into
mov
add
sub
xchg
dec
idivb
out
add
lds
mov
gs
data16
mov
fiadds
xchg
xorb
xor
cmp
jle
xchg
and
faddp
push
mov
mov
mov
dec
and
testb
jg
repz
test
mov
outsl
mov
cs
jne
repnz
pop
adc
dec
xor
adc
cltd
mov
and
or
inc
push
dec
adcl
cs
mov
adc
into
jmp
mov
or
lea
pop
jo
ficoml
sub
mov
dec
cs
xor
cli
and
adc
jle
sbb
in
xorl
sbb
jge
sbb
prefetch
or
xlat
ret
jo
mov
mov
enter
mov
xor
jb
insl
popf
cmp
fiaddl
out
adc
push
xchg
shl
pop
data16
iret
pop
sahf
std
mov
mov
das
cmpsb
aaa
cs
sahf
mov
push
lret
insl
and
dec
lret
pusha
cmc
mov
jl
ror
loop
mov
flds
mov
arpl
je
repz
fidivs
mov
dec
fnstcw
mov
in
push
outsl
popf
imul
ret
in
jg
xorb
adc
sub
test
mov
jne
inc
insl
dec
or
pushf
scas
xor
xor
add
xor
inc
mov
adc
stc
jge
pop
ficomps
pusha
outsl
je
stos
xlat
sbb
dec
loopne
jbe
ret
xchg
aas
imul
cltd
and
mov
add
rolb
mov
lock
in
jno
sbb
in
stc
out
or
cmp
sahf
rep
xchg
xor
pop
add
out
cmp
xor
push
adc
xchg
pop
lock
outsl
xor
bound
inc
mov
lea
call
pop
or
dec
adc
or
pusha
fs
repnz
ja
fdivrs
xlat
dec
negb
cmpsl
xchg
push
enterw
xchg
es
pop
add
jge
btc
cmp
loop
fsts
mov
subl
scas
or
pushf
and
stos
lret
sub
jg
xchg
scas
pusha
int3
sbbb
insl
daa
add
cmp
mov
xchg
xor
pop
mov
fmull
sti
pop
mov
roll
dec
cli
sahf
cmp
out
push
mov
pop
arpl
cld
icebp
mov
subl
mov
enter
dec
lods
mov
mov
xchg
fnstcw
jg
cmpsb
popf
mov
or
jmp
or
cs
add
test
das
inc
xor
or
jge
or
cmc
pop
popa
aas
mov
lret
adc
push
ret
inc
mov
sub
out
dec
mov
push
hlt
inc
icebp
jb
add
lcall
jmp
push
xchg
pop
xchg
negb
je
push
mov
cmp
rolb
mov
leave
aas
fwait
sbb
sbb
cltd
popf
cs
es
mov
xchg
or
mov
dec
les
mov
push
clc
lcall
cmp
pop
push
jbe
mov
daa
inc
shrl
js
fmuls
mov
cmp
jmp
fisubrs
notl
js
mov
pop
cwtl
push
jb
ljmp
push
mov
mov
rep
push
test
daa
adc
aas
lret
and
mov
mov
jg
ret
or
fsubs
sbb
ja
inc
pop
cs
stc
push
push
into
imul
push
sub
ljmp
std
lock
inc
sub
cmp
sub
pop
fdivl
loope
movb
mov
xor
lret
xchg
fsubs
and
test
xlat
pop
jo
ljmp
inc
loopne
loop
xchg
cmp
enter
jae
popf
pop
loopne
fiadds
push
cmp
mov
jno
mov
ja
lret
or
aam
jnp
lds
add
lret
adc
and
or
ljmp
and
dec
dec
rcll
or
xor
inc
add
gs
testl
add
mov
cmp
test
jmp
int
sub
pop
addb
jne
or
iret
mov
sub
repz
int
shr
cmp
cmp
aas
dec
test
jo
jl
daa
mov
mov
subl
pop
push
mov
imul
pusha
cmp
aaa
jp
lods
lahf
push
dec
adc
mov
mov
ror
loopne
fsubrs
movsl
iret
xor
or
sbb
int
xchg
and
jp
ja
pop
ja
mov
pushf
into
mov
pop
fisubl
add
xor
adc
cli
mov
std
sbb
das
xor
hlt
mov
fbld
xchg
ret
push
stos
mov
push
jle
sarb
popf
and
lods
cmp
test
test
xchg
dec
leave
cld
jae
jge
sub
out
hlt
ret
test
nop
sbbb
adc
inc
push
and
push
dec
lods
mov
in
dec
xchg
outsb
pop
stos
out
adc
mov
fdiv
sbb
xlat
mov
and
fcmovnb
in
out
aaa
ss
and
test
orl
mov
sbbl
faddl
ret
mov
insb
or
pop
mov
adc
mov
shrl
aaa
mov
pop
rolb
repnz
dec
imul
pop
lahf
stc
push
mov
xor
leave
movsl
adc
push
mov
out
adc
push
jmp
mov
inc
push
dec
test
call
mov
lea
lock
add
inc
test
sbb
push
mov
sub
xchg
pop
mov
lds
lahf
xchg
test
mov
add
jmp
xor
shl
out
loop
fwait
or
repz
jnp
cli
push
arpl
loop
jmp
xlat
sbb
adc
pop
in
cli
mov
xchg
jo
push
movsb
add
pushf
pop
icebp
sbb
sar
lods
fs
rcr
mov
out
cmp
outsb
popf
add
imul
sarb
pop
push
sahf
sahf
push
xchg
in
shlb
insl
ljmp
cltd
loop
loopne
mov
adc
xchg
pop
lret
jo
loopne
fistpl
fsubs
ret
jp
xor
in
test
rorb
dec
out
inc
aad
movsb
mov
jle
fucom
testl
vpunpckhwd
adc
ja
into
int3
out
push
xor
mov
test
mov
xchg
fisubrs
xchg
rcll
mov
repz
xchg
out
inc
dec
cmp
mov
jmp
mov
pop
and
pop
and
loop
and
adcl
push
mov
inc
je
or
out
sub
pop
cwtl
neg
movsb
sub
subb
mov
dec
faddl
mov
lret
xchg
jb
shrb
pop
aas
mov
mov
lret
or
sbb
dec
subb
adc
lea
push
mul
dec
and
test
filds
scas
cmp
cmp
mov
inc
mov
or
mov
insb
rorl
mov
and
movsl
inc
mov
nop
lea
lds
push
cwtl
adc
out
or
jnp
mov
xchg
lods
mov
pop
ja
adc
cltd
sbbb
cmpsb
ljmp
mov
pop
sbb
mov
and
loop
stos
fistps
sbb
xchg
mov
sbb
mov
and
push
mov
adc
dec
adc
iret
loope
iret
xlat
push
cwtl
add
push
dec
leave
and
call
sbb
and
xor
push
stc
fidivrl
outsl
repz
shll
and
imul
pop
stc
scas
jg
jnp
test
and
xchg
add
mov
fisubl
test
fstpt
fistpll
aam
adc
adc
test
pop
cpuid
ds
divb
push
mov
or
xchg
push
test
cmpsl
pushf
movb
sti
scas
adc
pop
lret
cmp
cli
mov
mov
xchg
mov
or
ja,pt
and
cmp
testl
clc
fisttpl
call
sbb
in
inc
insl
iret
std
or
repnz
lahf
jae
leave
aaa
push
cli
bound
idiv
in
cltd
les
fsubr
xchg
data16
mov
and
stc
add
sbb
cmp
sub
mov
jo
in
mov
dec
jg
cmpsb
sub
outsb
mov
sarl
in
mov
cmp
push
lcall
lahf
clc
adcl
into
rcrl
aam
jb
js
and
fs
dec
dec
cld
movl
decb
enter
jnp
add
xor
pushf
fiaddl
je
das
xchg
in
cmp
loopne
pop
mov
fwait
sbb
xchg
inc
add
xchg
sub
sub
dec
cltd
rorb
mov
sub
loope
arpl
loop
movsb
xchg
cli
sti
cmpsb
mov
je
das
fcoms
dec
shll
xchg
add
xlat
xor
pop
inc
rorb
out
loopne
cmp
adc
mov
push
push
pop
icebp
pop
add
test
aas
jnp
xchg
testb
dec
xchg
fs
inc
cmpsb
pop
ds
roll
pop
cld
shl
cli
or
xchg
jne
in
insb
mov
mov
stos
push
or
repnz
pop
ljmp
dec
mov
add
mov
mov
mov
lods
add
mov
xchg
add
jno
test
jp
jb
ret
add
scas
idivb
stc
lcall
lods
jno
or
cli
cmp
mov
ds
xchg
mov
dec
sbb
inc
loopne
js
fcoms
pushf
call
out
lock
xchg
mov
ds
test
js,pn
and
add
dec
sbb
shrl
inc
sub
xor
mov
insl
movsbl
push
cmp
fs
out
lahf
ja
outsl
inc
fiadds
xchg
subl
jo
sub
mov
hlt
movsl
mov
int
sbb
mov
inc
xor
pop
pop
lahf
mov
cwtl
orb
lahf
mov
popa
ret
cmpl
gs
les
push
mov
jno
sub
lret
pop
xchg
dec
jo
xchg
rcrl
std
sahf
and
adc
mov
add
lahf
pop
jbe
fbstp
push
sub
sbb
pop
xor
shlb
inc
mov
sbb
xchg
outsl
cs
xor
lret
jns
daa
enter
out
jmp
push
iret
inc
push
shlb
jge
or
aas
adc
aad
lret
and
das
ffree
rcll
out
emms
pop
insl
xor
xor
pop
sub
jge
aaa
mov
gs
jge
ds
ss
repnz
sti
mov
mov
outsb
adc
dec
push
pop
adc
cmp
and
lods
add
jg
cmp
push
dec
dec
push
cmp
xchg
add
scas
enter
inc
fstl
fisubs
loope
sub
scas
sahf
stos
outsb
adc
sub
xor
push
xchg
aam
adc
ds
inc
arpl
sub
push
mov
pushf
cmp
push
pop
add
mov
inc
and
inc
mov
shl
xor
xchg
pop
pop
add
lret
andl
sar
adc
mov
and
jle
sub
enter
mov
jb
mov
or
jne
popf
je
jl
sbb
mov
mov
sbb
sti
inc
fistpll
pop
ds
out
jle
xchg
xor
or
push
pop
mov
mov
mov
xchg
repnz
mov
fucomi
jb
inc
lds
sbb
popf
lea
push
jne
les
push
lods
and
xor
and
call
cld
loopne
jp
lea
mov
jge
mov
addr16
ljmp
push
test
push
roll
mov
jnp
pop
adc
stos
inc
mov
inc
jno
nop
lock
mov
icebp
bound
jbe
test
jp
int3
mov
adc
cmc
xor
scas
pop
cmpsb
xchg
or
inc
fsts
mov
out
fiadds
add
jno
into
cs
mov
sbb
gs
aas
add
or
outsb
inc
dec
xchg
jecxz
jae
jns
call
mov
dec
aad
sub
test
mov
or
sub
push
push
jecxz
sbb
movl
mov
mov
push
adc
test
out
popf
aad
lcall
imul
push
cwtl
popf
jmp
xchg
xchg
push
xor
lods
clc
and
add
jle
adcb
imul
sbb
push
or
push
loop
inc
sbb
and
pop
mov
and
es
fisttps
insl
stc
jmp
stos
inc
cltd
mov
push
fcompl
sbb
enter
fsub
jp
lret
lahf
inc
ret
out
arpl
psubd
xor
cmpl
push
cmp
xchg
jle
loopne
rcll
ja
in
fdivl
jle
and
rorb
xchg
mov
test
pop
push
pop
insb
dec
dec
aas
mov
rcrl
push
jne
add
je
mov
or
mov
push
ljmp
xor
adc
mov
push
shrl
mov
in
ret
sbb
ret
xchg
dec
fs
jecxz
std
sbb
cmp
shr
inc
fcomi
mov
icebp
inc
ljmp
jns
dec
ljmp
je
das
iret
mov
pop
push
outsl
xor
xor
dec
lods
lahf
js
dec
add
loope
lret
sarl
push
fiadds
push
pop
xchg
push
pop
ja
aaa
test
or
push
ljmp
lcall
pop
mov
or
insb
xchg
cli
test
cmp
movsb
fidivs
aaa
inc
pop
adc
mov
jecxz
bound
mov
adc
insl
and
cs
mov
push
push
out
mov
and
pop
addb
mov
mov
xlat
jge
adc
repnz
shlb
clc
mov
pop
and
lret
dec
xlat
jge
jp
dec
std
add
adc
cmp
dec
mov
dec
ret
xchg
movsb
lock
mov
lcall
adc
or
add
cs
sub
jecxz
push
cmp
cmpsb
in
cmp
lds
or
push
scas
ret
rcrb
rcrl
fincstp
xchg
dec
cmp
fisubrs
mov
inc
adc
clc
mov
jp,pn
sbb
shrb
cmp
rorl
out
jnp
lods
inc
hlt
pop
inc
add
dec
stos
adc
jne
mov
xchg
repz
movsl
jecxz
shll
pop
cmp
fs
mov
inc
xor
jne
push
lcall
aam
jmp
sub
mov
int3
sbb
fsubl
mov
xchg
lea
in
jg
push
and
sub
addr16
xchg
mov
ja
adc
dec
repz
loope
jge
or
mov
pop
call
sbb
sbb
jp
ja
loop
mov
add
int3
rep
call
sbb
jmp
sbb
sub
fwait
scas
aaa
popa
fidivrl
xchg
popa
dec
mov
imul
pop
push
pop
out
jl
push
mov
aam
ja
inc
xchg
and
gs
clc
xchg
adc
mov
in
pop
and
push
fnstenv
pop
ss
sub
push
and
fidivrs
dec
lret
loope
test
es
lret
xor
cmpsb
lcall
mov
and
cli
push
movsb
insb
inc
sbb
test
js
pop
sub
test
push
inc
jle
icebp
inc
pop
inc
bound
add
paddusb
sti
pop
or
das
dec
in
in
cli
inc
xlat
push
stos
stc
lahf
int3
mov
scas
cmpsb
and
mov
out
sbb
repnz
outsl
add
fdivrs
and
and
mov
js
and
adc
hlt
push
je
xor
jmp
dec
jmp
mov
out
pusha
adc
or
cmc
sub
movsl
dec
add
outsb
push
shlb
or
jle
mov
xchg
xor
xor
pop
sub
ror
jmp
pop
int
adc
xor
cwtl
xor
xor
sbb
xchg
loopne
mov
dec
loop
popf
adc
sbb
test
rorl
jg
faddl
insb
sub
imul
sahf
mov
mov
mov
inc
fisttpl
mov
push
mov
pushf
push
inc
pop
xchg
cmp
shrb
mov
xchg
pop
xor
cmp
or
js
mov
test
dec
dec
movsb
sub
dec
push
sar
enter
pop
dec
ret
mov
add
shlb
mov
and
aas
icebp
cld
push
fdiv
pop
pop
call
pushf
std
call
adc
aad
or
adc
push
outsl
mov
in
adc
dec
xchg
fidivl
add
mov
insl
mov
mov
rclb
mov
insb
push
mov
adc
aad
push
jb
add
and
push
andb
jns
test
fcomps
pop
cmp
repz
mov
fists
nop
loopne
and
mov
jmp
pusha
nop
or
mov
lock
sbb
and
pushf
push
cmpsl
adc
jns
dec
cmc
pusha
xor
cmpsl
ret
inc
inc
sbb
jge
test
xchg
pop
adc
js
inc
out
xor
pop
mov
add
cmp
sub
mov
cwtl
pop
pop
idivb
dec
out
lea
popa
pop
xchg
and
add
xchg
out
mov
sbb
call
inc
xor
sub
jl
sub
cmp
outsl
aaa
std
inc
pop
mov
lods
sub
fcoms
dec
clc
int
inc
push
push
jge
add
movsl
dec
and
pushf
push
aad
dec
pop
jge
scas
mov
cld
fistl
ss
cmp
cmpsl
pushf
rorl
lods
mov
jo
aaa
cmp
aad
insl
xor
and
and
adc
loop
lea
pop
fmul
lods
or
call
in
dec
rcr
out
push
pop
cmpb
test
popf
sbb
cmp
aas
sbbl
int3
repz
negl
das
mov
cld
mov
cmp
cli
pop
lds
lahf
xchg
out
stc
fmul
xchg
xor
fisubs
inc
dec
push
mov
xor
xchg
ss
and
sub
jmp
testl
addl
inc
xor
or
jno
mov
inc
imul
insb
adc
dec
dec
pop
int
mov
ficoms
mov
xor
test
mov
loopne,pt
aaa
bound
sti
push
bswap
push
add
bound
scas
loop
faddl
fidivs
rorl
and
fwait
xor
and
add
sub
movq
mov
adc
pop
sbb
fisttpl
xchg
push
mov
and
add
mov
sbb
pop
pop
mov
push
inc
mov
inc
xchg
pusha
fsubrs
mov
adc
sbb
inc
enter
hlt
fadds
lret
movsl
pop
inc
mov
nop
jp
lds
das
into
add
test
insb
into
mov
shll
shll
push
roll
fnstcw
pop
aaa
pop
xchg
daa
inc
sbb
pop
or
fidivs
xchg
cmp
scas
iret
scas
push
pop
aaa
inc
out
jnp
xchg
push
pop
pop
xorl
shll
lret
inc
cli
adc
xorl
ljmp
test
adc
sub
and
adc
xchg
mov
cmp
out
mov
orb
divb
jo
push
faddl
push
fldt
cmp
fsub
or
in
faddl
ret
adc
enter
jle
movsb
sub
int
mov
addr16
jg
ffreep
lret
outsl
adc
pushf
lcall
imul
dec
lea
outsl
sbb
ljmp
rcll
daa
adc
jmp
lds
repnz
sti
xchg
push
or
cmc
lret
pop
push
in
mov
jg
add
xchg
dec
ret
mov
jbe
sub
mov
scas
je
cli
sbb
aas
jae
movsb
cltd
shll
mov
jb
repnz
out
data16
push
roll
push
je
jecxz
out
es
out
xchg
ret
sbb
imul
sub
xchg
xlat
xor
mov
fwait
rcrb
add
sub
mov
mov
fmul
mov
fwait
adc
shlb
sbb
cmp
dec
es
out
sti
dec
xchg
js
lods
stos
fsubrp
clc
fdivrs
xor
les
cmp
mov
mov
sti
mov
add
std
or
inc
sahf
mov
test
cs
ds
lods
lret
enter
adc
repz
push
jmp
push
lods
jo
bound
shrl
std
inc
xchg
lock
add
fcoms
xchg
sbb
xchg
adc
sbb
fwait
sbb
or
jno
push
dec
in
syscall
jmp
notb
xchg
popw
pop
insl
lods
ret
xchg
push
and
inc
adc
mov
rcll
fsts
mov
mov
push
clc
ret
shlb
fmull
jb
ret
dec
inc
fstps
push
ret
popl
enter
mov
jns
filds
inc
push
sub
push
mov
xchg
enter
rolb
pop
sahf
and
imul
fucomp
data16
gs
jecxz
subb
jb
leavew
decb
push
xchg
push
mov
out
movsl
outsb
adc
cs
cwtl
lds
xchg
push
int3
and
aas
aaa
or
inc
add
xor
shrl
xchg
jae
xor
js
arpl
jne
and
inc
mov
orl
sub
outsb
bswap
negb
enter
cwtl
xchg
test
cld
push
adc
cwtl
out
pop
ret
out
call
dec
or
pop
sub
insb
jno
xchg
cltd
andl
jo
pushf
cld
and
mov
gs
dec
jnp
xchg
movsb
xlat
mov
jmp
mov
sub
daa
ds
lods
add
sub
out
ror
data16
xorb
int
sahf
cs
cmpsb
jne
lock
inc
data16
inc
add
addr16
sub
arpl
fxch
cmp
lcall
mov
lock
mov
nop
pop
and
adc
sub
in
add
fbstp
push
fwait
daa
lret
nop
or
iret
sbb
inc
dec
hlt
loopne
loope
fs
cs
add
xchg
mov
dec
gs
pop
mov
push
ss
jne
call
jmp
mov
pop
xchg
testb
inc
shll
adc
lock
adc
sbb
jb
inc
mov
mov
dec
lea
mov
mov
leave
mov
and
stos
push
shl
shrl
sahf
adc
or
sub
xchg
sbb
xchg
out
stos
std
fildl
lods
es
sbb
cs
outsl
movsl
pop
mov
lods
inc
mov
add
insl
test
push
or
add
iret
xor
stos
in
push
daa
cmp
mov
inc
sbb
push
and
scas
jmp
roll
cmp
mov
sbb
enter
jno
mov
cli
imul
iret
cmpsb
pop
push
push
sub
mov
clc
lods
stc
leave
adc
sbb
loopne
jg
jmp
mul
mov
jge
rcrl
sahf
cmc
pop
out
xchg
mov
fnstsw
push
icebp
or
je
mov
ret
je
in
mov
xor
js
popa
jo
movsb
cmpsl
test
aam
or
imul
pop
cmp
xchg
dec
inc
nop
mov
sub
sub
jl
movsb
inc
shlb
ret
scas
push
leave
cli
xrelease
in
inc
sub
outsb
pop
jl
mov
and
cmp
adc
fildl
pop
adc
cmpsb
xchg
cltd
xchg
fwait
addr16
adc
cmp
dec
dec
leave
inc
dec
xor
inc
ljmp
into
movsl
inc
pop
jbe
fcoms
femms
mov
popf
call
mov
push
rcrb
jb
mov
std
movsl
mov
xor
sub
movsb
ja
sub
jle
test
push
sbb
imul
insl
mov
dec
cli
push
cld
mov
ds
push
jp
mov
fsubr
mov
paddsb
mov
cwtl
cmp
sbb
dec
cltd
jge
cmp
or
test
in
insl
mov
stos
cmp
test
ja
mov
xchg
push
aad
add
js
sar
outsl
pop
test
scas
fcmovnb
fcmovnu
mov
mov
xchg
mov
mulb
ss
hlt
mov
int3
in
jae
popa
arpl
fadd
mov
jno
dec
xor
add
adc
mov
push
push
cmp
jne
jbe
insb
jno
mov
sar
stc
test
mov
xchg
std
in
pushf
jge
push
dec
xchg
mov
xor
loope
mov
pop
jb
enter
fstpl
jle
movsl
sbb
fcomps
ljmp
popf
es
mov
inc
push
hlt
out
mov
cmp
outsl
sub
xchg
sti
or
or
push
mov
ja
mov
lds
mov
xor
into
test
ljmp
divb
inc
inc
cltd
add
hlt
loopnew
adc
adc
jl
sub
out
fcoms
repz
push
xor
xchg
ret
pop
or
ds
dec
fiadds
fildl
and
dec
in
sub
dec
mov
adc
push
and
xor
scas
pop
clc
cltd
mov
popf
fstpl
push
and
mov
add
daa
jno
mov
cmpsl
mov
push
out
ret
out
lret
cmp
aas
mov
popf
dec
mov
mov
jns
out
push
jle
xchg
out
push
push
in
mov
aas
add
lea
cwtl
sub
std
dec
pop
pop
movsb
xchg
test
push
dec
outsl
dec
mov
ljmp
add
stos
out
push
dec
rolb
lods
orb
int3
jle
cld
add
adc
lret
and
xchg
ljmp
lds
mov
sbb
leave
or
sub
and
mov
enter
sub
xchg
imul
jp
or
cmp
punpcklbw
negb
add
repz
cli
jb
mov
dec
into
dec
inc
testb
es
jl
push
out
shl
insb
loopne
loop
add
sbb
frstor
jl
cmc
loopne
shl
xchg
cs
mov
push
out
xor
push
mov
imul
push
inc
ja
movsb
inc
mov
daa
leave
mov
lock
adc
outsb
sub
test
imul
push
imul
out
or
mov
rcr
mov
pushf
adc
fadds
pop
xchg
jmp
adc
xor
xchg
test
jecxz
test
cmp
fisubl
mov
inc
add
out
pop
je
cmp
outsb
ret
cmpsb
cmp
mov
shlb
mov
imulb
mov
bound
and
lcall
sbbb
aaa
adc
je
pop
lea
rcrl
into
pop
jle
sub
mov
mov
stc
in
mov
popf
pop
mov
cmp
cmpsl
lods
rorb
popa
icebp
bound
out
cmp
pop
mov
js
lcall
lods
adc
adc
cli
pop
xbegin
stos
into
cmpsb
sbb
and
cmp
out
xor
cmp
jo
cmp
cmc
sbb
das
push
or
jmp
fisttpll
jae
scas
les
ficoms
and
mov
js
pushf
pop
mov
jb
cmpb
loopne
stc
or
inc
ss
push
pop
pop
sbb
and
pop
push
or
jmp
push
repnz
lock
insb
lret
je,pt
cmc
stc
jne
mov
in
imul
pop
subl
fbld
add
iret
std
or
cmp
cs
mov
mov
dec
cltd
imul
and
ss
mov
popf
push
jae
lea
nop
sub
hlt
movsl
shl
out
mov
sub
cwtl
push
adc
repz
sbb
push
jae
add
pop
pop
pop
inc
sysret
es
nop
mov
mov
jle
mov
and
dec
enter
add
ret
je
mov
and
clc
push
cmp
lods
push
sbbl
sub
loop
jns
inc
add
loop
add
hlt
scas
mov
sub
test
jp
fadds
jno
jo
dec
sub
imull
adcl
pop
clc
fcompl
ja
bound
subb
and
into
je
push
mov
sbb
add
sbb
scas
inc
pop
sahf
arpl
testl
xor
cmp
sub
push
inc
hlt
push
xchg
movsb
inc
sbb
and
adc
into
sbb
notb
aad
jb
add
cmc
cs
scas
les
in
sbb
mov
fiaddl
cmp
repnz
add
xor
dec
mov
xor
in
xor
andl
in
mov
sbb
daa
outsb
sti
jns
add
shl
jl
or
movsl
pop
push
sub
push
jo
jg
outsl
cmp
mov
adcb
jbe
sub
in
and
adc
js
add
mov
xor
lret
js
rcrl
jecxz
mov
inc
push
ret
or
mulb
lret
data16
jno
xor
iret
push
popf
or
jae
shll
pop
popf
aas
push
dec
lock
inc
and
imul
jnp
xchg
not
adc
popf
or
pushf
inc
and
ljmp
mov
pop
add
mov
push
mov
insb
std
stos
cmp
xor
popf
inc
mov
mov
lret
testl
or
jbe
push
mov
or
das
sbb
cmc
sub
mov
lret
push
shr
xchg
add
les
and
cmpsl
mov
into
cmp
pop
mov
xlat
popa
repnz
imul
testb
out
testl
loop
aaa
xor
or
arpl
lcall
jne
pop
jmp
lods
fs
js
dec
int3
mov
in
dec
mov
iret
xchg
mov
mov
jnp
fsubrs
lea
leave
not
adc
es
daa
in
nop
mov
lcall
cli
and
pusha
cmpsb
data16
aad
ret
xor
add
inc
xchg
jne
sar
pop
loopw
push
fldt
xadd
lods
mov
jo
and
push
mov
pop
inc
dec
decl
sbb
pop
outsl
jecxz
lahf
fnstsw
in
mov
enterw
das
outsb
and
push
lods
popf
pop
aas
out
or
push
scas
ret
jle
push
inc
lret
pop
enter
popf
sbb
stos
stc
mov
jb
mov
mov
mov
cwtl
inc
jae
outsb
lret
jge
aaa
out
mov
xor
mov
sbb
xchg
divl
test
mov
pop
cld
sub
jno
pop
mov
dec
std
mov
repnz
iret
jb
out
sbb
fstpt
push
inc
cmp
popf
or
adc
dec
jae
jl
jns
je
mov
cmp
xchg
cli
sub
outsl
dec
jno
push
add
sti
nop
mov
xchg
cmpsb
sub
cmp
popf
adc
out
jb
imull
movsl
stos
das
mov
cmp
mov
scas
or
stos
pop
mov
jae
pop
mov
pmaddwd
xor
cwtl
mov
mov
test
add
fninit
or
outsb
cs
daa
cmp
sub
add
sbb
cmpsl
adc
push
frstor
stos
idivb
rcrb
mov
push
test
xchg
add
test
rolb
repz
dec
add
pop
test
push
cltd
xor
or
imul
das
stos
rorl
or
daa
pushl
popa
aad
fiaddl
ret
xchg
jmp
cmpsb
xchg
sbb
loope
addr16
push
mov
pop
xchg
sbb
addr16
std
inc
ja
in
lret
shrl
sbb
jns
or
daa
mov
mov
rorl
mov
push
xlat
pop
std
jns
mov
std
cmp
je
or
fidivl
pop
int
cmp
mov
test
sub
dec
push
cmc
cs
cmova
testb
pop
xchg
and
sbb
and
mov
xor
ss
pop
pop
inc
mov
sbb
ja
ror
adc
pop
je
mov
push
xor
mov
mov
test
xchg
fs
pop
mov
cmp
std
jno
call
mov
cmpsb
adc
outsb
sub
xor
lret
fidivrl
jne
scas
sbb
cmp
xor
imul
jmp
sbb
imul
and
cwtl
fidivs
sub
jb
push
jnp
pop
in
scas
mov
aad
repnz
je
and
aad
gs
repnz
sbb
out
xor
jb
int3
cli
xchg
jp
sbb
xchg
and
mov
movsb
fisttps
aam
sbb
or
fnstcw
cld
in
adc
pop
ret
movsl
cld
push
lcall
jbe
dec
xchg
lret
pop
insl
mov
inc
out
jle
lahf
inc
adc
ficomps
roll
fsubr
lods
adc
fnsave
lahf
dec
inc
add
std
movsl
into
xchg
sbb
fistl
lcall
push
jp
dec
cmp
test
sti
aad
mov
daa
lret
cmpsl
mov
imul
push
and
mov
movsl
popf
popa
and
sub
test
xchg
sbb
mov
push
arpl
repnz
xchg
sbb
push
stos
inc
add
mov
stos
out
loope
ret
mov
or
adc
andl
cmc
fcoms
popa
mov
inc
xchg
and
jmp
push
in
iret
clc
shll
fwait
inc
in
jp
ret
int
mov
mov
jne
lods
mov
push
sub
addr16
in
jecxz
lea
outsb
cld
gs
imul
insb
pop
lcall
lods
push
test
add
stc
jbe
add
jge
pop
cmpsb
test
lcall
repnz
xchg
push
popa
adcb
lock
out
xor
cmpsl
sar
shrb
adc
roll
aaa
shrb
icebp
sbb
aad
push
lds
and
lea
aaa
inc
dec
mov
mov
cmpsl
lahf
subb
stos
mov
or
out
imul
xor
movsb
xchg
rcll
inc
push
cmp
adc
ja
cmp
outsl
sub
sub
enter
jae
addr16
sub
cltd
loope
div
pop
mov
or
push
jl
xor
adc
incb
mov
mov
pushf
jb
jb
cwtl
mov
jle
aam
les
insb
mov
pop
xchg
popf
mov
nop
dec
cmp
out
jmp
jns
popa
dec
xchg
and
jge
aas
sub
mov
sub
daa
ret
push
xchg
js
scas
lahf
mov
adc
bound
out
movsl
mov
mov
adc
cwtl
and
int
add
pop
sti
push
pop
jp
inc
add
fisttpl
or
dec
push
into
rorl
mov
pop
out
sub
adcl
xchg
insb
lds
lret
mov
enter
push
data16
rcr
fnsave
mov
aam
cltd
adc
sbb
sub
adc
and
mov
and
bnd
orl
xchg
add
cwtl
jno
xchg
int3
add
mov
pop
xchg
jg
les
dec
jo
jo
push
or
enter
and
daa
mov
cwtl
das
rol
cwtl
lret
icebp
test
fcmovnu
cmp
js,pt
loop
in
jecxz
addr16
and
mov
and
mov
mov
sti
xor
pushf
ret
fiaddl
push
xchg
add
loopne
mov
pop
jl
adc
jle
loopne
xchg
iret
imul
imul
les
das
pop
adc
repnz
push
jl
sub
out
push
mov
and
cmp
out
pop
inc
jge
shll
js
jbe
sub
inc
loopne
clc
mov
push
add
inc
inc
add
sbb
jae
pusha
loopne
test
push
push
jecxz
jns
push
sti
push
out
push
out
cmp
jae
add
adc
xchg
test
ret
arpl
sub
adc
es
xor
vpand
pop
bound
mov
sbb
insl
pusha
jo
inc
or
test
sub
inc
add
jb
dec
int
jae
mov
shl
mov
popa
out
inc
ficomps
xchg
push
int3
jle
inc
das
imul
cltd
pop
mov
mov
mov
fcmovnu
addr16
in
dec
pop
push
dec
xchg
outsl
sbb
jmp
mov
daa
jae
ret
data16
xchg
mov
adc
scas
jno
mov
mov
mov
push
in
jo
sti
cmp
dec
xchg
adc
or
dec
mov
and
jo
scas
nop
rcll
inc
add
sbb
and
shlb
xchg
add
sub
and
test
jge
push
lods
cld
lock
add
adc
jo
fldenv
fildl
je
clc
flds
lods
sub
fildll
cli
call
cmp
das
push
sub
jg
jg
jmp
adc
and
inc
repnz
loopne
inc
dec
std
push
xchg
or
fwait
sub
adc
rorl
inc
adc
mov
fcoml
fchs
fldt
xchg
and
cmc
mov
jne
push
sti
shll
push
push
test
sbb
test
sub
adc
xchg
sub
jmp
mov
mov
xchg
push
fstps
pushf
adcl
loop
xchg
cltd
sarl
call
sbb
dec
insl
mov
out
leave
loop
cltd
jns
adc
pop
mov
xchg
inc
outsl
int
cmp
mov
call
in
or
out
ljmp
push
bnd
adc
xchg
xlat
sub
and
mov
xchg
xorb
jg
mov
pop
add
aad
cli
mov
filds
ljmp
xchg
les
mov
mov
loope
jg
mov
testl
pushf
lods
adc
cld
adc
aaa
mov
or
xlat
aas
pushf
mov
cld
out
inc
jae
cmp
stos
inc
sub
nop
and
mov
jmp
stos
fwait
les
sub
mov
xchg
outsl
mov
add
xchg
xor
call
bnd
add
push
push
rcr
mov
rolb
add
es
scas
jb
sub
jecxz
mov
mov
jp
btc
sbb
cmp
popf
imul
add
lahf
fstpl
push
mov
xor
mov
and
cmp
ss
jl
arpl
movsb
test
ljmp
repz
or
sbbb
xchg
sub
gs
lret
or
xchg
mov
pop
push
inc
add
jnp
std
cmp
in
nop
pop
je
push
cmp
mul
in
int
not
xchg
pop
xchg
ja
fwait
cmp
xchg
and
jb
arpl
out
inc
daa
mov
imul
or
pop
mulb
push
mov
xchg
aas
pushf
mov
stos
and
stos
outsl
or
jmp
adc
in
adc
dec
adcb
lds
imul
pusha
jno
push
popw
loope
cmpb
imul
add
adc
gs
adc
aam
out
into
hlt
ret
and
insb
loop
inc
pop
inc
fdivl
andb
in
icebp
das
mov
test
stc
std
dec
out
mov
add
cs
xlat
aas
mov
mov
xchg
lret
out
cmp
lods
imul
cld
cmp
add
test
pop
xchg
sub
lock
sbb
jne
fildll
aaa
icebp
repnz
mov
js
cltd
mov
fiadds
lods
xor
rclb
jle
dec
clc
mov
mov
xor
xchg
add
sbb
ds
push
test
xlat
in
push
adc
cmpsb
dec
mov
add
jae
mov
int
lcall
add
cmc
and
aam
frstor
out
jmp
jne
in
add
and
hlt
mov
mov
add
fwait
ss
stc
dec
pop
std
imul
ja
or
shr
sbb
bound
dec
in
ficompl
fcomps
insl
xlat
dec
scas
mov
xor
jns
addr16
xor
pop
inc
imul
fsubl
imul
dec
xor
popf
xor
cmpl
sbb
addb
into
mov
test
xchg
imul
aam
test
jns
inc
mov
inc
mov
nop
cmp
inc
and
pop
inc
pop
fcoml
sub
jbe
ljmp
pop
adc
in
stc
jno
or
mov
ja
cmc
inc
jp
inc
pop
fs
xchg
enter
aad
ficompl
cmp
rcrb
lret
mov
sbb
push
loope
adc
lahf
sarb
loop
fidivrs
popa
cld
outsl
add
in
lret
das
dec
xor
cmp
mov
inc
jne
jl
push
mov
push
add
mov
lret
pop
and
add
push
notb
and
xchg
xor
aaa
mov
xchg
mov
sti
jmp
cmpsl
frstor
scas
cmp
add
ret
add
inc
loopne
rorb
ffree
mov
lret
pop
out
and
cmp
jb
test
nop
jmp
lock
pop
inc
fwait
imul
les
mov
in
jno
or
sarl
imulb
mov
mov
pushl
and
push
pop
leave
js
adc
sbb
flds
and
xor
repnz
insl
movsl
or
int
imul
aad
call
outsl
inc
adc
or
mov
or
ss
aad
test
call
mov
xchg
jge
popf
mov
jnp
inc
jae
push
xchg
xchg
mov
xchg
call
jb
mov
lret
jno
shrl
mov
lock
pop
push
inc
inc
js
mov
in
push
into
mov
jb
pop
scas
and
out
jg
or
lea
dec
jge
jmp
xrelease
lods
sub
sub
repz
lock
out
in
pop
loop
or
mov
mov
inc
cmp
mov
mov
mov
shlb
movsl
loopne
xchg
push
sub
sbb
out
fwait
cmp
jb
dec
mov
xlat
out
popa
arpl
cli
loop
sbbb
inc
jns
dec
pop
xchg
fmull
insb
jg
stos
mov
cmp
dec
cltd
xor
inc
aad
lods
inc
outsl
popf
inc
push
xchg
lahf
pmaxsw
loope
mov
dec
jle
push
pop
jns
or
roll
push
mov
adc
outsb
flds
sub
insl
add
inc
dec
jmp
rorb
stc
test
cwtl
add
jne
stc
jns
inc
repz
addl
xchg
push
sub
fsubrl
imul
gs
je
nop
sub
icebp
sbb
adc
push
popf
into
jno
jl
cmc
outsb
pop
push
adc
push
adc
push
lcall
pop
fadds
jle
dec
outsb
xchg
sbb
andl
pop
mov
lods
mov
mov
lods
rcrb
push
imul
pop
xor
int3
fistl
dec
lret
mov
add
or
and
scas
fistpl
subl
push
jae
rcrb
sub
lods
repnz
out
call
ror
and
fisttps
in
jmp
lea
jl
mov
push
push
rcl
push
addr16
dec
jne
fmuls
inc
adc
andb
sub
cli
sbb
sbb
in
lret
fdivrs
or
or
test
jecxz
or
dec
cli
out
shrb
xor
shl
mov
cli
sbb
idivb
add
negb
lods
cmpsb
das
loopne
push
inc
pop
cltd
pop
cmp
push
into
jo
aas
xchg
and
mov
orb
xor
imul
xor
enter
mov
xor
movsb
dec
pusha
or
imul
cmp
pop
dec
daa
cmp
adc
pop
adc
or
inc
adc
aas
clc
mov
dec
mov
pop
mov
rorl
mov
xchg
adc
out
pop
bound
inc
cmc
scas
xchg
add
pop
cmp
mov
sahf
test
in
sti
xchg
mov
jne
out
mov
cmp
inc
or
lret
sub
mov
adc
lret
jmp
imul
movsl
sub
pop
sub
push
inc
popf
cmp
mov
arpl
enter
or
sbb
mov
negb
getsec
mov
and
jmp
add
pop
cli
cmc
mov
sub
and
fdivrs
push
mov
scas
jo
and
les
push
in
xor
repz
roll
iret
lea
mov
out
adc
insl
daa
addr16
adc
mov
aam
dec
test
jo
imul
dec
sbb
inc
inc
cli
lea
je
mov
xchg
clc
into
cltd
ljmp
outsl
pop
mov
icebp
test
fs
dec
shlb
cmp
test
int
es
and
int3
lock
xor
mov
xchg
lcall
dec
dec
xchg
mov
cmp
das
lds
ror
leave
dec
push
cmp
ljmp
repz
sub
lock
push
imul
pushf
jmp
dec
push
mov
xchg
mov
ds
mov
cmpsl
gs
pop
call
ds
mov
arpl
mov
xchg
cmpsb
jb
jge
sub
adc
andl
pxor
dec
or
stc
ljmp
inc
xchg
adc
mov
popa
or
popa
mov
jae
inc
or
into
pushf
pop
push
aas
or
mov
sti
in
cltd
xlat
lods
push
mov
push
lods
ja
pop
rcrb
mov
jno
fsubrs
inc
incl
aaa
jp
xor
fwait
lods
lea
push
push
pop
add
aad
inc
cmp
lods
adc
repnz
cmpsb
jle
cmp
out
xchg
test
into
aad
ss
repz
fdiv
add
call
arpl
sbb
inc
das
sub
inc
cli
dec
je
xchg
out
sub
outsl
hlt
pusha
sbb
data16
adc
or
push
loopne
pop
add
add
sub
mov
pop
and
imulb
cmp
fbld
sbb
and
cld
sbb
lock
ret
dec
push
push
mov
or
lret
pop
cmp
mov
loop
aam
out
jno
insl
test
movsl
mov
or
clc
dec
jle
jle
lret
imul
into
pusha
and
andb
sbb
sub
sub
addl
test
movsb
lea
popa
repnz
adc
ficoms
pushf
pop
jle
shll
lcall
sbb
cmp
orb
shl
shl
sbb
and
out
mov
sub
addr16
data16
lcall
xchg
or
xor
out
pop
js
ficoms
sub
jp
dec
jmp
mov
jge
in
pop
mull
in
mov
enter
xor
and
les
xor
popf
shlb
inc
stos
sbb
or
iret
push
cwtl
jmp
adc
and
dec
sti
outsb
lret
rclb
jp
cmpsl
and
cmp
jecxz
orb
imul
pop
fs
je
sahf
mov
cwtl
cmp
inc
xlat
and
xchg
jecxz
call
nop
insb
or
cmp
xor
fldenv
test
jecxz
aad
adc
repnz
adc
adcb
and
das
inc
pushf
jmp
inc
aaa
mov
pop
repnz
mov
adc
sarl
push
mov
rcll
repnz
mov
cs
dec
or
aas
mov
arpl
aad
pop
and
sub
nop
ja
loop
inc
lret
xchg
rolb
mov
mov
sbb
pop
addb
popa
adc
cmp
les
icebp
jecxz
mov
pop
mov
pusha
mov
gs
dec
sbb
rep
inc
sbb
loope
push
stos
mov
jecxz
ret
rorb
aad
inc
sub
push
pop
sar
inc
lahf
push
in
insl
aas
in
loopne
imull
movsb
lds
pop
cmp
movb
out
sbb
jle
pop
in
fwait
outsl
xor
pop
popf
setge
lods
arpl
or
add
inc
std
ja
not
cmp
cmpsb
cmpl
movsl
push
lods
orl
jmp
push
cld
cli
test
adc
mov
cwtl
dec
pushf
int3
jl
dec
add
arpl
lods
outsb
or
cmp
mov
jno
into
and
push
insl
and
shr
movsl
add
inc
daa
test
push
xor
and
lcall
ret
mov
pop
mov
outsl
popf
icebp
jne
mov
jbe
cmc
cmp
jecxz
stos
adc
stos
je
push
movsl
fidivrs
loop
sbb
sbb
push
insl
mov
stos
xchg
adc
leave
xchg
or
xchg
xchg
lea
cmp
push
inc
mov
jae
pop
mov
xchg
adc
or
cli
pop
icebp
orb
repnz
fnstcw
pop
pop
mov
add
and
cltd
and
xchg
filds
cs
mov
pop
pop
arpl
mov
push
adc
jl
ljmp
les
xchg
adcb
clts
sub
mov
xorb
or
or
jnp
fistps
inc
or
cmc
inc
pop
push
and
shlb
cwtl
adcb
pop
leave
sub
sub
imul
out
adc
aam
jmp
sarl
sub
fisubl
pop
iret
jmp
loop
fstl
addr16
mov
scas
subl
ret
jl
sub
subl
or
jp
fidivrs
imul
add
idivb
push
xor
and
sbb
xchg
xor
mov
add
xor
inc
aam
cli
stos
sbb
scas
jp
ljmp
mov
mul
test
movsb
cmp
adc
insl
or
push
popf
out
ljmp
xchg
push
inc
lock
cltd
out
jo
pop
sbb
xorl
dec
or
sbb
iret
mov
fidivl
fstpt
adc
pushf
jb
mov
es
mov
xchg
inc
cs
inc
xor
stc
inc
xchg
adc
mov
stos
rcrl
stos
mov
lret
fisttpll
push
lds
stc
mov
and
push
mov
or
inc
gs
fisttpll
int3
sub
in
call
mov
xor
aam
fsubrp
mul
dec
mov
pop
mov
das
mov
xor
insl
xchg
adc
test
fisttpl
dec
inc
cmp
incb
fs
push
es
sbb
cmpsl
xchg
xor
test
adc
into
xor
subl
loop
xchg
clc
mov
cmp
sbb
and
pop
sub
adc
dec
data16
mov
lret
adc
xchg
movsl
es
stos
or
push
mov
push
or
xchg
adc
out
jg
test
jno
shl
insl
mov
xor
push
mov
mov
jo
mov
sub
fistps
sbb
xchg
imul
les
daa
xor
loopne
sub
sub
fnsave
out
cwtl
dec
sti
dec
adc
testb
xor
lcall
push
and
sub
push
mov
mov
jno,pt
scas
stos
jae
outsb
rol
outsb
outsl
push
js
xchg
mov
cmp
mov
and
sbb
flds
or
dec
mov
popa
dec
sbb
mov
xor
sbb
jg
rorb
ja
test
imul
pop
jae
mov
pop
rclb
rorl
mov
das
ljmp
jmp
ret
cmp
into
xchg
jns
shlb
call
fimuls
flds
jg
or
sub
xchg
mov
repz
fs
clc
inc
mov
push
cmc
dec
mov
pop
imul
loopne
jb
jmp
test
sbb
cmpsl
xchg
fnstenv
pop
push
fwait
inc
ljmp
fldenv
fstpl
js
ljmp
xchg
adc
icebp
lret
test
fdivrs
push
aad
out
cmp
in
mov
mov
cmp
push
cwtl
maxps
push
jmp
pushf
jg
jo
stc
movsb
outsl
mov
and
ret
stc
cmpsb
ret
mov
mov
jecxz
popa
xor
outsb
push
pop
cmp
mov
xchg
inc
cmp
mov
movsb
pushf
xor
aaa
and
repz
jne
and
fcompl
rclb
repnz
cli
imul
ljmp
enter
inc
test
push
shl
cmp
and
or
ja
sbb
aam
mov
shrl
mov
adc
add
das
idivl
sub
pop
mov
daa
nop
cltd
inc
xor
adc
and
dec
mov
stos
or
pop
ss
push
inc
and
int
dec
sbb
out
push
ficoms
sbb
push
aad
jnp
push
push
sbb
outsb
mov
jae
popf
inc
add
jne
clc
mov
mov
arpl
sbb
fsubl
jo
mov
fsubrs
mov
js
ss
sub
mov
roll
out
xor
jecxz
int3
fcomip
sbb
js
and
outsb
subb
lds
pop
xor
pop
or
es
inc
cmpsl
jmp
pusha
push
sub
insl
jp
movsl
sbb
pop
lret
in
loop
cs
mov
je
gs
popa
cmp
mov
push
dec
out
fimuls
roll
cmp
xchg
push
stos
dec
or
movb
rolb
inc
arpl
xchg
dec
icebp
and
arpl
xlat
push
dec
jno
cmp
lret
leave
jmpw
fidivl
in
aas
fwait
sub
fmul
xor
shrb
clc
test
or
jle
jnp
loop
int
out
push
aas
scas
inc
idivl
inc
cmp
rorl
push
movsb
test
xor
jmp
cmp
notl
not
sti
movsl
push
mov
or
sarl
pop
sub
pushl
pop
fsubrs
pop
or
cmp
xor
mulb
into
xor
insb
push
xchg
test
roll
loopne
sbb
mov
orb
fisubl
movsb
sahf
cmp
mov
pop
cmp
outsl
push
loope
pop
cmp
sub
sbb
subl
ficoms
sar
push
push
pop
insl
inc
or
sbb
xchg
out
add
popf
xchg
call
popf
jbe
lcall
pop
shrl
push
repnz
lea
mov
lcall
insl
das
xchg
nop
mov
scas
pop
in
cli
loop
shrl
jmp
dec
mull
and
jp
clc
cli
push
test
inc
mov
fiadds
cld
mov
or
xchg
pop
mov
pop
pop
scas
mov
cmc
and
cmpsl
xor
xor
movb
lods
test
mov
mov
xchg
popa
pop
xor
mov
test
and
iret
out
xchg
push
add
cmp
pusha
xchg
lods
fisubrs
loop
out
jecxz
push
sbb
mov
sub
divl
pop
inc
mov
xor
add
imul
addr16
loopne
push
xchg
fidivl
xorb
cmp
pop
mov
pop
test
push
cwtl
dec
add
mov
mov
out
inc
jnp
mov
outsb
push
daa
bound
cmp
cld
xchg
cld
sub
pop
push
mov
pusha
insl
push
dec
xchg
xor
fs
in
fs
mov
addr16
popa
xchg
and
in
mov
jmp
push
jmp
sbb
mov
out
les
mov
inc
adc
into
xchg
dec
pop
sub
pop
into
movsl
roll
xor
in
into
inc
lret
or
mov
push
adc
insl
into
aaa
add
ja
insl
or
and
inc
dec
cmp
add
subl
test
fwait
xchg
adc
rcrl
cmc
push
adc
rcr
xor
xor
data16
xor
mov
mov
adc
cmp
pop
mov
mov
jns
dec
gs
sbb
add
popa
stos
mov
popa
incl
and
mov
roll
adc
dec
push
push
imul
dec
lock
xor
lods
xorb
aad
pop
dec
sub
or
or
xchg
push
enter
add
or
call
inc
orl
inc
cmp
cmp
pushf
pusha
add
lcall
or
xchg
hlt
js
push
cmp
adc
pop
fildll
sub
repz
mov
lret
fnsave
hlt
addr16
je
xchg
leave
sub
xor
loopne
lods
jl
push
cltd
outsb
test
sbb
jg
xchg
insb
or
xchg
lock
xchg
xchg
sub
pusha
test
add
pop
enter
imulb
inc
mov
cmp
roll
js
cmp
add
push
ja
push
jbe
in
enter
daa
das
scas
jno
and
adc
aaa
inc
jnp
rcr
std
fdivrs
mov
pop
incl
sbb
adc
sti
xor
incb
dec
pop
jae
sti
jb
ret
stos
jae
xchg
in
jno
xchg
mov
out
data16
mov
mov
cmp
inc
adc
test
stos
xchg
into
pslld
daa
testl
xor
in
andl
in
push
out
mov
sti
es
cltd
stos
insl
int
fcmovb
nop
gs
dec
mov
test
lret
cld
mov
cmp
ljmp
nop
out
fs
mov
pop
mov
pop
pop
int
fistpll
call
sub
dec
stos
push
scas
loope
out
scas
cs
add
xor
shrb
push
lds
cmpsl
pop
sub
adc
sarb
fsubrl
pop
in
mov
sbb
negl
mov
push
imulb
jmp
stos
popf
hlt
sbb
loopne
fidivl
rcrl
dec
aad
sbb
iret
push
pop
scas
insb
pushf
repnz
jb
imul
cmp
adc
xchg
push
mov
nop
adc
cmpsb
dec
scas
mov
xchg
xchg
mov
test
xor
push
rcr
xchg
adc
xchg
movl
dec
inc
jno
faddl
xor
cmp
mov
loop
sbb
scas
xchg
push
cmp
jmp
fs
xchg
dec
xor
aam
mov
cwtl
aas
lods
push
fisttps
ds
popf
movsl
iret
loopne
mov
adc
add
push
sarb
jne
xlat
inc
dec
sbb
std
mov
xor
ljmp
lahf
mov
call
jae
jp
mov
cmpsl
enter
mov
lds
or
dec
addr16
xchg
xchg
push
mov
pop
mov
aam
inc
test
into
cmp
out
mov
push
xchg
loope
popa
mov
cltd
push
sti
mov
inc
lock
je
add
in
push
dec
sub
jnp
lahf
push
pusha
mov
cltd
jle
or
sub
mov
cmpsl
sub
ret
fs
sub
ret
push
test
sbb
mov
aaa
lahf
lods
mov
mov
and
pushf
dec
xchg
adcb
push
movsl
cs
mov
mov
push
xchg
adc
adc
test
cs
leave
jne
jp
cmpsl
cwtl
lock
das
stos
sbb
sti
aam
fists
inc
add
sbbb
fsubr
xor
mov
rcll
xor
sub
and
loop
and
in
nop
lcall
jae
adc
inc
icebp
push
shll
jmp
xchg
or
loopne
cmp
jle
adc
and
push
xor
add
sahf
adc
mov
mov
inc
add
adc
push
stos
fs
pop
into
mov
vpsrlq
xchg
fstpl
jne
sarl
ss
mov
mov
jns
cld
jnp
fildl
mov
add
nop
sub
adc
int3
mov
sahf
mov
mov
in
ret
or
jg
xlat
bound
push
loopne
imul
cmpsl
fstpl
and
cmpsl
pop
ds
pop
ret
sahf
sbb
cmp
inc
mov
rolb
sub
jae
jp
hlt
in
pop
push
mov
sub
aam
les
in
into
xor
add
sbb
imul
jge
addr16
pop
in
dec
mov
inc
addb
shll
iret
pop
dec
and
out
inc
xor
arpl
adc
inc
lods
push
jmp
push
mov
ds
bound
adc
stos
movsb
push
aas
sbb
push
jle
xor
or
lea
mov
jae
test
adc
cli
cmpsl
dec
mov
test
popa
cmp
je
ljmp
ja
es
mov
out
daa
and
clc
int3
xchg
push
outsl
cmc
mov
and
data16
mov
cmpsl
int
aad
addb
mov
inc
mov
push
sbb
imul
out
testb
jb
movl
jl
test
jle
jmp
pop
dec
scas
or
or
mov
xor
fldl
int
mov
jo
mov
lea
mov
fistps
and
cmp
imul
stos
push
mov
or
in
mov
cmp
fdivrs
imul
gs
lret
or
push
pusha
mov
ss
movsl
iret
pushl
inc
dec
fcmove
jnp
pop
or
loope
jo
pusha
pop
add
insb
pusha
cli
inc
pusha
and
or
clc
jns
sub
sub
inc
int3
pop
add
xor
jl
push
mov
imul
sti
pop
int3
and
mov
sub
sbb
cld
shlb
pop
pop
lret
repz
mov
lahf
pop
cli
dec
and
xchg
inc
xchg
in
cli
imul
dec
in
aad
dec
mov
cmp
add
cmp
ret
mov
inc
cwtl
bound
pop
xchg
jno
and
popa
dec
mov
mov
or
test
jbe
mov
push
out
sub
push
fbld
cwtl
mov
fadds
mov
repnz
pop
adc
subb
stos
push
es
pushf
outsl
or
pop
and
or
sbbl
push
in
sar
xor
inc
sub
jb
lret
mov
add
bnd
pushf
or
js
jo
jmp
push
insl
mov
or
inc
dec
in
ds
std
in
cmpsl
mov
pop
das
movsb
adc
xchg
add
and
popa
push
mov
nop
fs
mov
mov
mov
cltd
pop
addr16
or
shll
inc
lret
repnz
decl
and
incb
adc
lret
rclb
xor
loopne
dec
pop
test
outsb
ljmp
imul
jmp
lods
pop
je
ss
add
push
push
mov
dec
fadd
or
cmp
ljmp
push
lds
add
aad
je
faddl
xchg
pop
jle
pop
and
fcomp
push
pop
sbb
pop
sbbb
inc
lods
inc
xchg
jmp
pop
dec
xlat
mov
aaa
mov
jne
or
pushl
test
popa
jb
pop
filds
aas
enter
ret
pop
jb
push
dec
add
push
xchg
repnz
or
xchg
xor
call
jl
shlb
push
push
enter
mov
add
sti
rol
hlt
or
adcb
xor
mov
jmp
jge
and
pop
jo
bswap
or
push
gs
jno
stc
adc
setbe
ss
rolb
loope
dec
inc
inc
ret
fidivs
subb
addr16
pop
inc
arpl
leave
adc
mov
mov
pop
push
mov
das
mov
jg
sub
push
ds
call
sub
xchg
jp
mov
xor
test
sti
pop
jmp
add
cli
cwtl
fsubrl
shrl
aaa
mov
enter
rcrl
mov
pop
mov
lods
adcl
cmc
jnp
push
cmpsb
xor
mov
add
lods
aad
cs
enter
fstpl
push
inc
mov
nop
jb
cmp
xchg
mov
dec
push
push
pushl
adc
imul
fstps
mov
inc
jmp
fs
inc
inc
add
leave
inc
dec
adc
pop
xor
enter
lea
adc
arpl
int
inc
mov
jp
xchg
imul
mov
push
lcall
jecxz
xor
jo
lret
ljmp
pop
loopne
inc
lock
jns
subl
dec
mov
xchg
lods
enter
adc
fdivrl
leave
mov
pop
test
mov
jmp
adc
dec
std
subl
push
xchg
es
mov
mov
insb
push
adc
out
dec
add
pop
jbe
fidivrl
jl
rolb
pop
xchg
adc
and
movsb
pop
jmp
sbb
xor
iret
mov
mov
adc
insb
push
call
fistpll
outsl
insl
jmp
mov
sub
jecxz
in
mov
xor
fisubs
das
sti
jae
mov
je
push
sub
mov
and
jp
adc
js
mov
out
lcall
imul
cli
push
xchg
lahf
mov
ss
adc
push
add
lahf
dec
jo
notl
imul
add
pop
adc
aad
mov
add
mov
push
divl
sub
mov
pop
mov
push
add
push
fidivs
in
popf
je
mov
pop
mov
aad
jbe
leave
pop
addr16
aaa
into
xor
jp
les
cli
rcrb
add
mov
je
imul
mov
sbb
pop
mov
add
mov
imull
jbe
and
clc
mov
loopne
xor
ss
mov
push
push
push
sahf
sbb
lret
stos
jo
xchg
mov
mov
add
ds
mov
das
inc
push
jmp
cld
mov
and
iret
xchg
lcall
or
sub
rcll
inc
pop
setae
mov
arpl
xchg
sbb
outsb
adc
inc
xchg
mov
xor
push
lcall
and
add
or
movsl
sbb
std
aas
repnz
clc
push
je
mov
call
dec
test
orl
add
andl
outsl
push
nop
mov
lock
or
loope
pop
mov
bound
aaa
mov
adc
lret
and
arpl
sbbb
jmp
iret
ljmp
mov
iret
push
scas
enter
shlb
lret
xor
imul
mov
in
enter
es
rcrl
loop
ljmp
out
sub
xor
jb
adc
push
fisttpll
inc
scas
xor
out
cmp
xchg
mov
jbe
jne
jne
jg
rolb
add
shl
add
pop
push
js
pop
fildl
or
cmove
sbb
arpl
mov
popf
lahf
sub
stos
imulb
ljmp
or
cltd
xor
test
xchg
nop
imul
and
mov
add
rorl
int
test
jo
jp
mov
push
sbb
dec
vpcmpeqd
fstpt
dec
push
pop
fcomp
aam
loope
pop
movsb
push
and
jle
hlt
push
push
and
or
sbb
mov
xor
xor
push
or
add
sub
adc
dec
inc
add
mov
hlt
xchg
xor
cwtl
mov
mov
xor
push
popa
mov
sbb
loopne
or
mov
insl
add
ss
xchg
cmpb
mov
pop
mov
xchg
inc
or
sbb
mov
sub
int3
lods
xchg
inc
inc
aaa
pop
xchg
xlat
fs
fistl
cmp
lret
fidivl
lock
inc
stos
imul
out
pop
mov
fcomip
sbb
dec
test
lret
mov
jp
inc
aaa
loope
mov
test
mov
add
imul
inc
inc
mov
orl
cwtl
scas
aam
jb
push
insb
lods
popf
mov
sbb
cs
adc
es
mov
jecxz
callw
frstor
inc
out
mov
fmul
lods
cmp
jg
jmp
jae,pt
and
popa
gs
add
mul
dec
fldl2e
inc
sub
or
pop
fidivrl
fs
jne
pusha
xchg
lds
adc
ljmp
jge
shll
jne
cmp
or
inc
rorb
add
pop
adc
test
mov
fidivs
cmp
dec
mov
test
dec
sbb
add
je
adc
mov
pusha
sub
shll
push
cltd
scas
xchg
jbe
adc
dec
or
in
test
or
es
bound
clc
inc
xchg
cli
mov
mov
push
std
movsb
xchg
iret
iret
or
clc
out
xchg
mov
setle
aas
in
jg
test
test
and
std
rcrb
into
rep
shll
push
lea
test
push
adc
lods
jecxz
outsl
arpl
mov
mov
popf
cltd
push
inc
fists
stos
dec
lea
inc
in
ficoml
push
push
in
popf
ss
pop
cwtl
lret
and
pop
xchg
adc
out
int3
mov
jmp
push
push
notb
aaa
push
aam
jb
addr16
adc
dec
dec
pop
pop
adc
roll
sub
pop
fnstcw
dec
cmp
clc
sub
fstl
sbbl
stos
ds
pop
xor
flds
jns
sub
fwait
addr16
inc
dec
shl
pop
jle
fisubrs
aam
jp
fisubrs
mov
ja
test
sbb
xchg
stc
jo
nop
fadd
sub
or
xorb
je
pusha
add
ds
push
jle
xchg
push
sar
addl
and
sbb
andl
loop
out
lcall
insb
test
clc
xor
inc
xor
dec
loop
sbb
bound
ds
lock
mov
mov
idivl
fwait
cmc
cwtl
pop
pop
dec
popl
data16
push
xchg
jne
dec
mov
or
jns
mov
sbb
push
add
push
mov
scas
jmp
lret
push
mov
repz
dec
pop
dec
ficoml
out
sbb
xchg
dec
sub
movsb
shrb
add
cmp
int3
imul
lods
mov
ja
xchg
inc
jmp
ja
sub
push
jg
das
aad
sti
adc
jno
inc
or
es
and
jne
in
into
adc
insl
mov
fisttpl
enter
aaa
push
loop
cmp
pop
subb
sbb
jb
jp
mov
jne
das
cltd
sub
pop
fucomi
and
loopne
add
and
scas
js
dec
xchg
sbb
out
addr16
aas
fmul
xor
popf
in
mov
adc
mov
fldt
push
ret
subl
xchg
jo
scas
add
sub
sub
jecxz
cmp
enter
pop
ljmp
rcrl
enter
and
mov
insl
aad
mov
push
xor
push
dec
js
mov
mov
sub
bound
add
in
inc
mov
push
cwtl
sahf
loope
adc
aam
adcb
xor
inc
lret
int
dec
add
test
push
adc
fnstcw
dec
dec
adc
inc
int
adc
add
push
sbb
scas
push
pop
sahf
xchg
movsb
aad
js
xor
adc
pop
jno,pn
lock
mov
inc
lds
js
jp
adc
call
sub
mov
dec
mov
jle
pusha
xchg
sub
nop
je
ja
or
inc
xor
cwtl
mov
pop
mov
lds
fs
jnp
mov
cli
cmpsb
lcall
and
add
mov
sub
arpl
ss
bound
fwait
xchg
add
sbb
push
or
out
add
jmp
sbb
out
mov
ss
je
cmp
sub
pop
lea
sbb
xor
clc
xchg
mov
mov
xor
mov
andb
lahf
sbb
and
bound
mov
dec
out
ret
push
cmp
call
faddl
xchg
shll
stc
sbb
mov
mov
or
or
arpl
inc
add
and
lods
sub
aam
cmp
cmp
not
inc
push
int3
or
dec
push
pop
stos
inc
testb
jmp
shrd
jno
pop
mov
clc
mov
data16
push
xor
lds
into
xchg
jp
rclb
xchg
jo
mov
pop
cmp
repz
pushf
ds
cmp
cmc
cmp
mov
xchg
xchg
stos
sub
jmp
dec
pop
mov
shrl
pop
mov
ljmp
clc
or
or
and
or
out
test
pop
stc
clc
testb
sbb
and
rclb
xor
scas
rorl
xchg
dec
adc
mov
pop
ljmp
cli
popf
mov
cmp
inc
xlat
les
push
or
jns
sub
adc
lods
sbb
mov
and
lcall
push
mov
insl
mov
fcmovnbe
push
ret
enter
push
cmp
inc
cltd
inc
ret
push
shll
xchg
shlb
test
pop
loop
or
dec
out
jbe
gs
push
xchg
leave
outsl
sub
sub
out
jle
pop
xor
imul
xchg
pop
movsb
sbb
outsl
aad
mov
or
sbb
jo
push
movsb
cmp
mov
push
outsb
aas
repnz
sub
jmp
test
cwtl
and
xor
mov
hlt
mov
clc
lock
insb
fsubrs
std
nop
sub
imul
lea
lock
sbb
inc
adc
je
insb
dec
xchg
sbb
addr16
out
aad
cli
cmp
bound
and
addr16
xlat
popf
add
test
push
mov
std
mov
shlb
jmp
lcall
push
gs
ds
push
stos
mov
and
mov
scas
ret
mov
push
sub
dec
ljmp
call
movsb
sbb
pusha
orl
ds
in
insb
jae
cmp
xchg
jbe
dec
xchg
push
pop
pop
mov
in
add
aaa
fnstenv
sbb
rcrb
mov
std
push
movsb
lods
mov
inc
mov
insl
adc
mov
mov
imulb
jno
push
rorl
sti
push
mov
mov
cli
roll
pop
or
mov
dec
adc
sbb
jge
mov
jmp
sub
mov
out
arpl
add
xor
mov
sub
mov
mov
test
ss
add
jmp
or
lods
xchg
mov
mov
push
jle
adc
hlt
ja
sti
iret
sbb
lret
or
dec
mov
leave
mov
leave
mov
sub
xor
shrb
ss
xlat
lret
test
vpunpckhdq
or
cmp
std
lods
btc
adc
jecxz
cmp
test
pop
push
xchg
inc
mov
xchg
in
xchg
sbb
mov
pop
jle
pop
inc
jge
mov
inc
andl
or
sbb
pop
imul
jp
movaps
adc
popf
jno
shrl
test
push
call
sbb
aaa
mov
mov
dec
xchg
jecxz
jne
imul
insb
dec
pop
xchg
enter
adc
push
cwtl
nop
fs
sbb
repnz
mov
jge
or
jle
mov
scas
aaa
stc
xchg
add
cwtl
mov
push
jge
loopne
les
cmpsl
cmp
int3
jmp
pusha
sbb
jle
push
das
aaa
jg
or
cmp
xor
not
jne
sbb
arpl
aaa
das
dec
cmp
mov
arpl
lret
jmp
gs
mov
cld
gs
lret
mov
divb
jbe
cmp
movsl
xchg
lret
sub
fsubs
jo
cld
xor
xorl
rcll
cmpsb
rcr
xor
loopne
lods
lea
dec
shrl
or
mov
sbb
fistpl
adc
ret
out
repnz
mov
or
dec
pop
stc
inc
popa
fwait
xchg
and
xor
xor
mov
inc
cmp
adc
pop
in
js
jbe
shll
arpl
jmp
adc
or
sbb
mov
repnz
adc
cmp
jbe
aas
rcr
pop
sbb
cmpsl
imul
cld
xchg
push
lret
dec
adc
loop
lods
adc
sbb
mov
jne
outsl
arpl
orl
insb
insb
lods
aad
lock
push
sbbb
cmp
sbb
imul
cmp
cwtl
dec
fwait
out
add
mov
push
and
popa
icebp
dec
arpl
js
push
mov
rcl
shufps
out
push
inc
or
add
mov
xlat
pop
pop
sahf
jecxz
dec
clc
lods
rcrl
mov
sarl
loope
sbb
sub
push
lods
dec
xor
xchg
and
inc
pop
mov
fsin
outsl
inc
pop
out
ret
shll
ja
xor
xchg
mov
pop
and
sbb
pop
scas
das
mov
icebp
stos
jl
mov
or
xchg
dec
add
cld
das
aam
push
xchg
jg
or
sbb
push
xor
sub
repz
aas
rcr
stos
fadds
out
dec
mov
mov
stc
xor
addr16
xchg
repnz
fistpl
fwait
enter
push
pop
pop
xchg
pusha
les
fs
shlb
dec
inc
flds
and
inc
add
push
mov
adc
adc
jl
ss
out
stc
stc
loop
mov
movsl
adc
iret
std
xchg
inc
pop
push
dec
inc
push
jmp
xor
in
push
cmp
push
add
xchg
jns
outsb
mov
rcll
rcl
dec
adc
pop
jno
cmp
sti
imulb
aaa
test
cwtl
data16
lret
ret
push
and
daa
xchg
and
cwtl
dec
push
mov
jns
clc
or
push
adc
sbb
inc
mov
mov
lret
cmp
std
xor
loop
repz
xor
xor
cmp
cltd
bound
push
mov
mov
ret
sbb
cs
lahf
dec
mov
jle
xlat
dec
movsl
ds
push
or
inc
test
push
notb
jb
std
imul
mov
mov
or
sbb
ficoms
test
and
mov
lods
cli
clc
sub
out
fidivl
pop
decb
rcr
int3
mov
xor
dec
sbb
les
mov
iret
addl
mov
sbb
push
out
xor
es
mov
mov
dec
mov
jmp
loopne
push
or
jg
inc
and
pop
lcall
inc
ret
sahf
movsb
mov
adc
push
or
leave
sarl
dec
stc
test
cli
push
cmc
push
gs
mov
imul
jle
jge
gs
dec
cmp
xchg
add
xor
xchg
test
fbstp
sbb
bound
pop
cmp
push
repz
fnstenv
stc
inc
dec
push
mov
and
out
sub
dec
test
mov
pop
mov
add
sahf
adc
stos
add
pop
lcall
dec
xor
jge
adc
jmp
shlb
xchg
xor
xchg
jp
push
sub
insb
xchg
sub
pop
push
or
cmp
pushf
xor
scas
pop
push
push
clc
mov
adc
into
push
inc
adc
mov
sbb
mov
sti
mov
sbb
je
jmp
imul
std
push
repz
fmul
popf
or
add
in
xchg
xor
xor
test
movsb
sbb
mov
stc
not
add
movsl
out
jl
lahf
mov
lcall
pop
into
sti
roll
loopne
mov
xor
dec
das
lahf
sub
jb
xchg
mov
and
shl
cmc
mov
sub
mov
sarl
out
jp
sbb
cmp
cmpsl
aad
rcl
jnp
mov
and
and
cld
sub
mov
or
js
mov
lcall
clc
jge
repnz
mov
dec
fsubrp
sub
and
jp
sbb
jp
std
push
add
sbb
mov
dec
sbbl
mov
insl
gs
xchg
mov
add
mov
fs
sti
shlb
adc
sub
pop
iret
hlt
loope
sbb
mov
mov
jns
sbb
es
or
arpl
xor
jae
xchg
xor
xor
imul
xchg
adc
ret
pop
or
andb
lahf
loop
and
lods
mov
push
inc
test
test
js
repz
dec
lret
cltd
jnp
sub
adc
xchg
andl
lea
xchg
dec
mov
lock
dec
sbb
leave
fs
mov
adc
xchg
dec
je
loope
mov
cmp
or
fmul
mov
gs
movsl
pushf
inc
add
std
lds
in
inc
sub
movsb
dec
mov
adc
lds
mov
fcmovb
ffreep
or
dec
jne
std
jo
xor
mov
inc
test
push
push
mov
cwtl
and
adc
call
out
ret
daa
xchg
bound
inc
in
nop
lret
incb
xchg
mov
sbb
fiaddl
mov
imul
outsb
jb
mov
jae
enter
xor
int
cmpsl
imul
roll
ret
and
dec
mov
pop
jnp
push
or
pop
mov
inc
call
jb
in
pushl
cwtl
out
dec
push
outsb
data16
lods
cmp
and
mov
filds
sbb
sub
data16
fwait
sub
add
insb
loopne
insb
out
sub
add
push
xchg
dec
adc
cmpsl
cmp
mov
cmpsb
push
or
pushf
addr16
inc
outsl
icebp
mov
dec
scas
adc
xchg
aam
push
outsl
pusha
into
out
fwait
test
cmp
jns
pop
outsl
and
sub
sub
ret
nop
stos
mov
push
ret
adc
or
mov
pop
imulb
cmpb
fdivrl
testl
cmpsb
mov
inc
test
iret
cmp
in
sub
mov
push
push
mov
stc
adc
cmpsl
scas
pop
sub
cmpsl
mov
loop
sub
lods
jae
cmpb
push
out
mov
scas
imul
push
cmp
frstor
stc
aad
arpl
aad
mov
lods
out
movsl
lds
aaa
lds
pop
sub
lds
in
add
xor
loope
dec
mov
xchg
lcall
js
out
xchg
aad
cmc
lods
cli
fldenv
mov
xor
mov
jmp
sbb
push
cmpsl
stc
js,pn
push
out
mov
xor
push
mov
and
mov
add
pop
mov
std
mov
pop
insb
movsl
adc
pushf
mov
xchg
sti
inc
or
xchg
dec
scas
push
add
cmp
movsl
aas
or
cmp
and
mov
daa
lods
mov
movsl
aaa
xchg
xchg
jecxz
gs
sbb
lods
testb
enter
mov
jnp
dec
sub
scas
or
dec
or
mov
lcall
pushf
xlat
pop
negl
xchg
xchg
xchg
btr
and
push
lods
add
pop
add
es
pop
std
mov
stos
arpl
in
sub
mul
popl
negl
faddp
int3
sar
sub
adc
ficomps
sub
stos
ss
imul
mov
inc
sub
cmp
xor
mov
mov
hlt
out
inc
aas
inc
jle
push
mov
test
lods
jge
fmuls
pop
push
xchg
cmp
enter
cmp
cmp
pop
xchg
insl
dec
pop
push
hlt
xor
sub
xchg
imul
sbb
in
jmp
mov
jb
inc
ret
pop
imul
xchg
ss
not
std
push
cld
jp
loope
pushw
adc
pop
movsb
sahf
xor
test
jne
faddp
insl
push
adc
xchg
and
add
std
out
dec
addr16
leave
pusha
movsb
jno
push
or
cmp
fdivl
pop
fnsave
dec
call
add
add
cmp
aad
adc
push
sbb
add
js
push
or
loopne
pop
into
dec
loop
add
mov
push
xchg
mov
das
mov
mov
fdivrl
pop
jo
outsb
inc
lods
mov
out
or
jmp
cmpsb
sub
or
je
cld
cs
and
or
xchg
imul
sub
fxch
movsb
test
lods
or
sub
mov
fildl
cwtl
sub
cmpsb
mov
mov
jns
sbb
movl
mov
or
jle
test
daa
icebp
jp
xor
repnz
test
outsl
psubw
lahf
int
ret
push
mov
iret
daa
fs
negl
sbb
por
pop
xchg
lods
push
fldcw
pause
lret
cmp
inc
repnz
aaa
mov
xchg
sub
push
dec
or
imul
fisttpl
fdivl
stos
or
push
cltd
mov
push
jbe
or
sbbl
loopne
cli
and
inc
popf
adc
sbb
lret
mov
je
cld
popf
imul
insb
inc
cli
lods
push
pop
sbb
rolb
aam
jne
jnp
stos
leave
xchg
pop
insb
dec
push
outsb
cltd
inc
jns
push
sbb
pop
jmp
fdivrp
addb
inc
and
xor
push
pop
push
stc
ja
sub
iret
xor
rclb
inc
xchg
lds
xor
mov
movb
cwtl
stc
push
imul
jl
stc
pop
enter
mov
xchg
or
fisttpl
ret
inc
and
stos
enter
lahf
lret
test
push
repz
imull
mov
out
xchg
andl
xor
imul
pop
mov
fstl
ja
call
xchg
movsb
test
repz
pushf
mov
mov
arpl
iret
nop
nop
add
dec
mov
dec
inc
or
bndldx
mov
sub
aaa
sarl
mov
pop
mov
and
mov
mov
push
adc
adc
mov
xchg
in
cwtl
iret
arpl
addr16
pop
out
jae
sbb
fwait
call
mov
hlt
fdivl
jp
xor
jnp
leave
insb
lcall
dec
dec
mov
inc
cmp
cmpsb
jle
inc
nop
adc
xchg
xor
fidivs
lock
cmp
ret
or
mov
mov
inc
mov
xchg
sahf
fiadds
out
jmp
pop
mov
and
adc
loop
add
scas
xchg
mov
jnp
das
cmp
cmp
sbb
add
adc
jnp
stos
xchg
adc
and
or
pop
es
sbb
sbb
jnp
dec
enter
push
dec
and
fwait
daa
inc
push
xchg
xchg
iret
ljmp
test
and
js
jp
mov
xchg
dec
xchg
and
insb
lock
jae
ja
and
or
cmp
sub
push
mov
sbb
inc
fst
cmp
inc
in
inc
test
push
jne
out
mov
xchg
popf
and
push
rcr
lods
popa
nop
mov
rolb
or
pop
cmp
pop
sbb
popa
mov
mov
lret
aas
hlt
dec
es
out
mov
jmp
sahf
loopne
mov
loope
or
jmp
pop
cmp
pop
and
ret
cli
dec
push
aad
ja
mov
push
call
fnstsw
and
jno
inc
ficomps
mov
scas
push
jb
addb
lds
adc
dec
or
sar
sbb
mov
push
aad
lock
gs
cwtl
cmp
mov
xchg
xchg
sbb
fmuls
movsb
pop
clc
xchg
insl
sbb
filds
arpl
std
mov
xchg
mov
test
dec
fadd
push
pop
mov
pop
rcrl
jmp
div
std
lock
nop
adc
and
or
mov
push
fmul
in
test
pop
cmc
pop
flds
xchg
sub
jne
xchg
mov
das
xor
int
test
int3
fmul
mov
jne
lret
shl
cmp
ja
pop
in
mov
ror
sub
dec
js
xchg
jae
xchg
pop
mov
inc
js
jg
jnp
adc
fildl
sbb
mov
and
cltd
dec
pop
scas
out
mov
pop
jne
flds
es
lods
mov
add
mov
aaa
pop
imul
push
pop
cmpsl
lret
add
movsl
movsl
jle
mov
scas
loope
dec
scas
pusha
gs
push
mov
cmc
fs
xchg
call
es
jns
xchg
adc
pop
adc
outsl
add
mov
call
inc
bound
sahf
jle
mov
dec
ficomps
bound
xchg
sti
xchg
loop
xchg
in
mov
push
dec
inc
mov
int
adc
pusha
sub
ret
adc
push
in
ret
pop
mov
inc
mov
sar
mov
aas
inc
pop
inc
xchg
shlb
lahf
add
inc
in
mov
sbb
insl
mov
mov
sbb
and
mov
andb
arpl
jae
xchg
cmp
push
jb
push
rcll
xchg
rcl
enter
dec
mov
popa
mov
cmp
sub
sbb
jae
loop
and
and
cmc
shll
inc
xacquire
jp
out
stos
repz
cltd
mov
xchg
adc
js
pusha
add
mov
dec
fcomip
xchg
cltd
inc
jg
addl
sbb
adc
out
cmpsl
xor
in
jnp
jecxz
inc
cmpsl
scas
scas
out
pop
push
jo
ret
and
cmp
imul
push
leave
inc
mov
addr16
sar
fs
jbe
fdivrl
sbb
js
adc
mov
aam
stc
pop
and
push
lea
sub
dec
sbb
cmp
pop
je
inc
dec
or
push
fdivrs
fnstcw
scas
xchg
clc
icebp
adc
pop
inc
out
cmp
lea
popa
xor
outsb
test
lock
cmp
inc
sub
mov
mov
out
std
push
sbb
stc
mov
aad
cmp
andb
test
sub
lock
cmp
add
adc
stos
pop
out
xchg
jle
out
push
dec
in
mov
push
sti
ljmp
inc
leave
mulb
test
pop
add
xor
sub
add
add
dec
test
inc
jno
add
push
pop
xchg
push
and
ds
pop
out
mov
or
xchg
pop
int
lods
hlt
adc
dec
aad
cmpsb
and
popa
fidivrl
je
es
pop
aaa
dec
xor
push
xchg
rcr
push
pop
mov
sub
test
lcall
inc
hlt
or
mov
cli
pop
sub
shlb
xchg
inc
xor
stos
fiadds
xchg
jp
mov
loop
jbe
jge
in
ss
mov
adc
pop
adc
adc
adc
adc
inc
sbb
xchg
push
or
das
or
pusha
je
add
mov
divb
pop
pop
mov
shrb
push
sbb
mov
mov
xor
aas
movsl
mov
data16
cmp
loop
and
dec
and
push
cltd
mov
rorl
pop
cmp
div
push
mov
mov
add
and
insb
cmc
push
mov
and
sti
jg
inc
inc
pop
loope
mov
jp
mov
pop
out
sbb
xor
adc
rcr
repz
jg
lret
jge
inc
xor
fwait
xchg
mov
shll
test
push
mov
push
jmp
pop
pushf
jno
push
sbb
loope
int3
xchg
aam
dec
out
ljmp
jbe
dec
adc
xchg
lods
pop
ret
xor
loop
daa
add
ret
and
lret
xor
dec
sbb
rorb
pop
jge
pop
rolb
dec
std
xor
mov
dec
pop
dec
sub
je
mov
cmp
and
push
cltd
xchg
imul
mov
mov
addr16
fcmovnb
push
cmova
mov
ja
jno
inc
push
aaa
stos
scas
mov
jle
inc
push
out
mov
das
add
pusha
lds
sub
shrl
and
jp
push
add
sub
leave
setno
pop
in
xlat
inc
dec
icebp
or
push
mov
mov
mov
in
add
cmp
adc
or
imul
call
add
lods
out
xchg
pop
xchg
push
cld
jg
leave
mov
push
pop
cwtl
int
mov
xchg
lods
imul
mov
mov
fucom
cmp
iret
pusha
mov
and
mov
movsl
int
gs
xchg
push
sub
arpl
or
scas
cmp
pusha
jae
filds
cmp
add
adc
sbb
cmpb
inc
add
inc
inc
adc
xchg
out
mov
mov
jl
pop
xchg
cmp
pop
in
fs
test
push
mov
push
add
or
lods
fucomi
stos
out
mov
out
mov
xchg
nop
int
cwtl
push
xchg
sub
pop
lahf
aaa
int3
lret
and
pop
inc
ds
daa
add
stos
pop
adc
das
xor
adc
js
and
sub
mov
stos
xor
es
test
push
test
lods
xchg
push
pop
fiadds
mov
or
js
pop
inc
stc
arpl
mov
in
mov
xchg
inc
mov
xchg
jno
popf
adc
pop
mov
div
popa
std
ret
sub
imul
jbe
xchg
and
inc
push
push
add
dec
popf
inc
inc
push
mov
leave
xor
jle
sbb
scas
adc
mov
pop
lds
cmp
out
jle
jg
dec
push
ja
fs
cwtl
js
gs
pusha
push
push
shll
or
dec
stc
arpl
push
lods
loope
cmp
cmp
mov
jne
pop
adc
shlb
stos
aas
or
ret
mov
xchg
jbe
test
pop
fistpll
sub
mov
pop
inc
test
mov
pop
pop
fnstcw
loopne
or
push
sub
adc
pop
imul
pushf
jne
sarb
dec
test
mov
mov
roll
ds
dec
dec
fcomps
xor
in
adc
enter
ljmp
dec
push
sti
mov
rcrl
and
out
push
sar
test
das
ja
int
xor
clc
jg
xlat
and
push
xor
cltd
lahf
ds
adc
rorb
iret
mov
popf
lods
mov
ret
jae
mov
mov
cwtl
sbb
aaa
icebp
mov
sbb
push
xor
loope
push
and
fwait
mov
cmpsb
in
xchg
add
mov
adc
in
inc
in
cwtl
shrb
mov
aam
xchg
pop
mov
cmp
test
xchg
pop
mov
xchg
or
inc
push
insl
clc
xchg
inc
shl
jecxz
in
and
std
xchg
pop
sbb
push
mov
xchg
cmp
fsubl
loopnew
es
jecxz
in
aaa
xchg
mov
push
xchg
std
xchg
xchg
dec
ret
mov
dec
mov
jne
lea
test
jns
sub
or
mov
clc
mov
das
and
les
xchg
mov
jl
shll
jecxz
movsl
popf
mov
push
das
mov
jne
inc
and
inc
rol
jb
jmp
inc
imul
mov
andb
dec
inc
dec
js
lcall
pusha
fwait
shrl
sbb
notl
or
push
mov
stc
lds
and
push
adc
shll
jne
inc
xor
inc
jb
mov
out
imul
jbe
imul
loope
into
sar
sbb
lods
daa
sub
pop
andb
dec
xchg
jno
shl
nop
les
aas
fucomip
sub
sbb
lods
mov
cs
fcmovb
shll
cld
inc
cmpsl
ret
xchg
test
insb
into
flds
mov
pop
adcb
scas
out
pop
out
xor
cmp
jl
mov
out
mov
dec
jg
fisubl
outsl
cmp
popf
dec
and
xor
imul
mov
inc
jns
out
adc
fistpll
loopew
popf
mov
test
lods
hlt
adc
push
imul
or
jecxz
outsb
jno
fxch
dec
out
push
cmp
jp
lds
inc
divl
adc
dec
inc
xchg
push
shlb
fwait
inc
add
ja
sbb
dec
das
adc
sahf
dec
clc
out
push
mov
jg
mov
add
cwtl
xchg
out
pop
mov
cmp
js
push
imul
fcomip
mov
xchg
shll
dec
push
ret
jnp
pop
dec
xlat
xchg
cwtl
jae
mov
mov
xor
push
cld
and
jecxz
out
cmp
aaa
out
pop
pop
pop
adc
test
mov
int
jl
xchg
pop
mov
fyl2xp1
push
pop
fadds
sub
pop
test
inc
cmpb
mov
pop
sub
jge
sub
in
daa
xchg
xorb
iret
es
iret
and
mov
xchg
mov
movsl
stos
sbb
mov
ss
sahf
nop
push
in
pop
adc
xor
push
mov
jo
gs
arpl
sbb
leave
xor
pop
or
daa
dec
insb
push
call
jo
jmp
mov
in
mov
pop
adc
movsb
pop
sub
or
push
popf
mov
into
xchg
pop
jge
push
mov
sub
xchg
in
mov
int
out
fsts
repnz
subl
ss
outsl
push
mov
popa
stos
movsl
mov
and
add
and
dec
pusha
nop
imull
fsts
cltd
mov
and
and
outsb
mov
cwtl
test
mov
and
lea
add
jns
in
or
xor
bound
adc
sbbl
mov
mov
andb
xchg
cs
dec
xchg
shlb
stc
pop
outsb
jge
fcoml
nop
sub
pop
leave
data16
push
xchg
popa
xchg
mov
xchg
scas
push
out
pop
enter
dec
jl
and
aad
jge
and
nop
dec
and
out
sub
add
inc
push
cmp
mov
cmp
sbb
cmp
sub
mov
ja
add
addr16
push
adc
ljmp
sbb
jno
mov
call
cwtl
loop
lods
xor
xchg
or
adc
jo
or
push
sarl
gs
out
ds
fistpll
xor
lcall
dec
dec
movsb
loope
xor
xchg
xor
push
ret
mov
push
push
mov
mov
mov
mov
push
push
mov
cmc
mov
out
add
in
mov
pop
aas
xor
into
pusha
mov
jmp
or
push
ljmp
inc
and
jo
push
shrl
aad
sub
xchg
cmp
test
xor
rolb
stos
aas
sar
add
pop
lret
push
mov
out
jns
xlat
jecxz
pop
jbe
leave
add
fcmovnbe
aad
jbe
shll
push
test
insl
popa
hlt
or
add
mov
mov
push
out
sub
xchg
ds
gs
push
push
lock
ds
xchg
dec
bound
xor
nop
js
fcompl
int3
add
jae
shll
lods
insl
push
in
mov
lock
push
fdivrs
jno
pop
fimuls
add
lahf
adc
dec
pop
pop
push
adc
lea
push
cltd
add
push
stc
ja
rcrl
repz
push
sub
scas
mov
sub
cmpl
xor
adc
cmp
cmp
and
pop
pushf
insl
inc
je
cmpsb
shll
stos
pop
mov
mov
call
int3
insb
xor
outsl
mov
lret
cld
jg
jo
lahf
add
bound
pop
inc
mov
mov
dec
or
fmull
pop
sbb
xor
test
fnstcw
push
std
push
xor
xor
mov
and
out
push
movsb
pusha
jecxz
jg
xor
pop
into
stos
int
jmp
mov
mov
and
je
xchg
dec
mov
repnz
xchg
push
ret
fwait
inc
or
push
inc
ret
out
repz
xchg
lret
xchg
xchg
xor
loop
insb
add
sbb
pushf
sbb
push
int3
rcrl
jg
xchg
cmpsb
outsb
or
mov
inc
mov
push
or
aam
js
sub
mov
lock
mov
mov
sub
push
scas
push
cmpsl
imul
out
mov
data16
inc
push
cmp
jae
inc
dec
insb
test
mov
insl
testb
aad
push
test
mov
mov
and
dec
fisubs
sti
andb
leave
cltd
jp
cmpsb
icebp
daa
lock
lods
in
cli
mov
pop
loope
xor
insb
js
in
xor
incb
cwtl
pop
iret
or
lea
mov
or
and
xor
sbb
fwait
sub
outsb
int
movsl
cmp
or
and
les
sbb
fnstsw
enter
shlb
nop
shrb
cli
push
rcrl
sbb
xor
mov
dec
push
into
clc
pop
and
push
mov
adc
xchg
add
jns
inc
or
mov
mov
jns
fs
and
mov
in
or
imul
mov
mov
add
inc
jle
js
jp
mov
push
in
js
sbb
cmp
shr
inc
int
pop
add
rclb
movsb
or
mov
lret
out
adc
test
push
mov
or
pop
adc
sti
lahf
jb
add
les
dec
cmp
mov
rclb
xchg
insb
push
sub
mov
sbb
cmpsb
test
sub
jb
test
ljmp
fs
sahf
imul
test
adc
dec
cltd
movsl
jle
cli
jno
mov
aaa
out
mov
bound
insb
jmp
arpl
jecxz
push
test
mov
mov
jo
fwait
out
popa
xchg
pop
adc
xchg
mov
aad
inc
sbb
jo
jge
or
and
mov
push
dec
je
lods
in
sbb
pop
add
lods
or
ds
cmp
shll
pop
jp
lds
out
sahf
mov
xchg
sub
push
xlat
pop
icebp
mov
jl
pop
lret
notb
mov
mulb
aad
push
sar
fnstenv
push
push
mov
jl
test
movsb
test
outsb
xor
dec
push
pushf
mov
adc
subps
jmp
iret
cmc
cmc
test
add
cmp
mov
out
out
jnp
and
test
or
shl
mov
mov
xchg
inc
jne
test
inc
pop
aas
mov
movsl
out
fwait
pop
sub
mov
test
jmp
xchg
or
adc
in
arpl
jp
subl
insl
push
sbb
cld
xor
lods
stos
call
cmovbe
add
nop
dec
adc
sbb
pop
jns
testl
push
adcl
cmp
popf
or
in
idivb
xchg
inc
in
jno
test
push
jl
mov
fs
xchg
outsl
ds
cmp
mov
pop
inc
out
dec
mov
icebp
call
xchg
xor
adc
idivb
mov
shlb
xchg
cltd
loope
int3
pop
in
adc
add
mov
add
xorl
clc
add
cwtl
mov
adc
mov
push
pop
mov
xchg
add
icebp
push
inc
or
cs
lcall
push
pop
das
xchg
ret
inc
dec
mov
pop
mov
xor
lds
push
hlt
or
jbe
js
sub
cwtl
stc
adc
adc
repnz
add
fidivl
loop
notb
imul
mov
lods
pusha
inc
xchg
int3
pop
fwait
mov
out
pop
mov
adc
fsubrs
pop
xor
sub
aas
add
or
call
popf
sub
stos
jl
popa
das
sbb
xchg
cmpsb
sub
mov
adc
mov
popf
mov
sub
add
jl
adc
test
inc
push
outsl
xor
and
cmpsl
fsubl
test
mov
and
lods
lcall
jb
sbb
test
in
lahf
inc
or
ror
icebp
stos
cmp
ljmp
out
jg
insl
stc
push
pop
test
push
jge
xor
adc
mov
sub
dec
rcrb
pop
push
call
sub
xchg
or
into
sub
inc
test
js
jae
cmpsl
pop
int3
jb
push
add
movsb
sub
xchg
and
mov
pop
mov
inc
cmp
inc
and
paddq
mov
inc
and
xchg
push
inc
cmp
xchg
jl
sbb
xchg
mov
dec
sub
jge
mov
aad
xchg
jl
es
data16
sbb
jns
das
enter
lds
sub
cmpsl
movsl
xchg
xchg
nop
loopne
xchg
jo
aaa
ss
dec
ljmp
mov
mov
sbb
cmp
shll
stos
cmp
ss
mov
leave
sbb
punpcklwd
xchg
sub
cmovl
and
pop
sahf
or
ljmp
das
mov
push
mov
mov
cmpsl
pop
xlat
test
pop
adc
jmp
loop
pop
dec
mov
out
test
cli
push
das
jae
cmp
push
cmp
ds
sbb
and
mov
jge
sarl
jne
mov
inc
jp
push
fsubrl
fs
or
pusha
inc
xor
lea
add
push
pop
into
sbb
sar
int3
in
inc
std
ja
jne
arpl
inc
flds
pushf
push
add
lods
cli
jg
push
pop
lret
and
aaa
adcl
lock
push
push
jp
and
out
pop
fwait
out
sub
dec
lret
lods
stos
mov
mov
je
fucomi
cld
iret
mov
dec
jmp
dec
and
cmpb
imul
sti
add
xlat
addr16
cli
mov
mov
adc
push
jo
or
fadds
mov
ljmp
imul
adc
repz
inc
lds
or
adc
scas
mov
mov
hlt
lcall
push
mov
mov
or
and
and
lret
mov
js
repnz
jo
add
leave
dec
inc
loop
sbb
jmp
pushf
in
sub
movsb
insl
stos
mov
stc
or
sbb
push
or
jg
xor
ret
cmpsl
nop
mov
rclb
jg
cmp
daa
jb
aam
push
dec
jle
adc
pop
neg
adc
xor
push
scas
movsb
repz
dec
shll
jns
mov
pop
mov
xchg
jbe
hlt
into
jnp
pop
in
out
imul
add
rorb
lock
out
cmpsl
cmp
das
mov
jnp
mov
mov
je
or
pop
add
bound
cli
scas
call
dec
ds
mov
jmp
pop
xchg
push
stos
jmp
pop
add
jns
xor
pop
hlt
pop
xchg
ret
andl
or
into
cmp
xchg
daa
lahf
mov
fcmovb
xchg
push
mov
mov
repnz
dec
imul
leave
std
mov
mov
adc
popl
hlt
and
cld
mov
or
rclb
outsl
int3
fnstsw
cmc
dec
mov
and
popa
pop
bound
aas
and
mov
push
or
inc
mov
mov
sbb
mov
mov
arpl
cmp
test
clc
insb
test
in
dec
in
xlat
mov
dec
shlb
pop
push
loope
jbe
ror
ljmp
push
mov
fstpl
imul
pop
cwtl
mov
in
out
lods
imul
aas
je
adc
pop
je
push
in
in
mov
xor
mov
mov
push
mov
add
mov
loop
fs
jge
dec
idivl
jecxz
sub
pop
daa
fs
orb
test
dec
lods
jb
decl
inc
adc
movsb
jmp
dec
outsb
push
icebp
in
add
fdivs
xchg
xor
prefetchwt1
shrl
movsb
aaa
push
test
sbb
test
jae
lahf
xor
arpl
fdivs
cli
out
push
stc
xchg
pushf
pop
pop
jmp
in
int3
push
pop
add
pop
add
and
arpl
loopne
mov
adc
sahf
xchg
ljmp
mov
add
dec
lds
les
nop
xor
repz
cmp
or
mov
test
fisubs
inc
mov
in
shll
dec
or
cmpsl
nop
outsl
jp
cmp
inc
stos
cltd
mov
popa
push
xchg
lret
test
sub
cwtl
shr
mov
mov
jg
leave
pop
fisttps
in
iret
push
test
jb
jl
mov
in
sbb
js
outsl
in
sbb
add
push
jg
cld
inc
cli
lods
hlt
cltd
imul
cmp
repz
mov
jnp
decl
in
cmpsb
test
sub
xor
xor
pop
sbb
jecxz
aad
mov
mov
repnz
dec
jns
repz
push
xchg
leave
sub
sti
je
sbb
out
imul
aas
cld
and
inc
sub
dec
test
jo
sub
or
data16
inc
push
pop
xor
int3
sub
xchg
lods
dec
sbb
mov
lahf
jmp
stos
in
cmp
or
dec
mov
mov
cs
shlb
push
imul
jo
jp
shll
es
add
xor
outsl
and
dec
cmpsb
sub
jl
pop
xchg
inc
push
inc
sbb
cs
sub
xchg
and
sbb
shll
pop
dec
push
mov
mov
xor
inc
repnz
cmp
movsl
add
cmc
jnp
in
orb
sub
sbb
in
xchg
jns
push
push
out
std
xchg
adc
sub
pop
pushf
mov
or
jle
mov
lret
test
sub
lods
push
pop
hlt
push
sbb
dec
inc
mov
in
push
mov
pop
cmpsl
mov
out
jnp
push
lods
mov
xchg
push
shlb
movsl
nop
adc
fld
xor
jl
scas
mov
xchg
leave
inc
das
xchg
shrb
mov
add
lret
adc
loop
sub
dec
in
lcall
pop
inc
inc
movsb
in
xchg
mov
in
rcrb
rol
push
dec
pop
test
fdivrl
push
inc
cmp
push
hlt
div
push
out
dec
es
xchg
inc
lret
mov
pop
mov
dec
sub
adc
mov
aaa
xor
lret
xchg
add
sub
cli
clc
aam
push
mov
lret
mov
mov
mov
sub
xchg
pushf
sbb
sbb
decl
inc
mov
xlat
adc
and
cs
jo
xchg
leave
mov
neg
repnz
cmp
push
xor
inc
pop
jp
push
pop
adc
adc
push
dec
stos
xchg
mov
and
fisttpll
stos
in
push
jbe
subl
cmp
js
push
inc
mov
xlat
and
in
and
sub
je
divps
xchg
cmpsb
ds
mov
mov
xchg
cmp
cmpsb
sub
cmp
lahf
sub
and
aam
das
dec
xchg
pop
mov
and
sti
fcomps
add
pop
mov
mov
push
push
lods
ss
mov
imull
push
jge
test
inc
out
jae
in
push
data16
cmc
call
arpl
add
test
inc
loope
mov
sbb
cwtl
add
cmp
nop
bound
dec
cltd
jecxz
fisubrl
and
pop
dec
sbb
lock
inc
xchg
outsl
es
call
xchg
loopne
sbb
loope
leave
mov
ljmp
cltd
and
pop
xchg
lock
or
mov
scas
push
sbb
insl
hlt
fistpll
jnp
daa
push
iret
lods
mov
cmp
mov
flds
add
sub
adcb
shrl
pusha
test
enter
pop
lcall
cmp
andl
dec
ror
stc
dec
jnp
repz
push
adc
sbb
inc
stc
outsb
test
pop
cli
xchg
sub
add
fisttps
push
ret
shlb
mov
xchg
cmpsb
dec
add
mov
insl
dec
ljmp
xor
lods
std
cld
sub
mov
dec
mov
test
icebp
insl
call
inc
test
mov
sub
aam
ret
testl
shll
imul
dec
icebp
pop
sbb
das
js
out
push
mov
filds
std
add
ret
pushf
pusha
sbb
dec
add
mov
sub
cli
iret
sbb
outsl
xchg
in
jae
outsl
dec
filds
cmpsl
push
lret
pop
sub
filds
repnz
pop
lcall
int3
cmp
int3
and
sbb
cmpsl
sti
mov
dec
fnstcw
js
or
sub
out
mov
jg
sbb
sar
mov
inc
fbstp
test
rcrl
mov
mov
iret
cmp
or
xor
mov
mov
xchg
loop
pop
pop
mov
jmp
cmpsb
push
jg
jno
adc
sbb
ljmp
pop
xchg
nop
loop
push
sbb
shl
push
xchg
repnz
xchg
stos
pushf
cltd
and
loope
sub
cwtl
pop
sti
xchg
push
mov
fstp
lret
sbb
push
daa
and
aad
cmp
inc
shrb
mov
xchg
mov
or
sbb
lret
fnstcw
cmp
jg
jle
movsb
test
mov
pop
xchg
push
or
fnsave
jbe
bswap
loopne
xchg
sbb
cmp
mov
adc
test
jo
lea
daa
into
inc
js
lods
xchg
in
sub
cltd
fstpl
popf
movsl
call
cld
sbb
and
mov
inc
dec
jbe
arpl
inc
adc
xchg
push
inc
rcrl
push
mov
jp
out
sub
lcall
cmp
mov
push
jae
icebp
add
inc
sbb
jnp
jb
dec
sub
sub
or
scas
addl
test
mov
cmpb
loop
dec
inc
aaa
lret
repnz
dec
ret
mov
test
inc
push
ud1
js
push
rclb
inc
add
orb
movsb
int
sub
sub
test
inc
aam
mov
js
faddl
xor
adcl
mov
add
cmc
testl
lret
dec
pop
xor
pop
test
and
repz
ror
push
mov
out
jg
add
out
fildl
in
fnstcw
test
xchg
popf
nop
in
or
ret
stos
loopne
out
pop
xchg
jo
pop
cmp
push
stc
mov
jb
mov
cmp
movsb
imul
andl
cmp
aas
fs
imul
mov
mov
mov
jge
add
mov
decb
fdivrp
jg
jmp
mov
ret
pop
pop
int
cld
jbe
insb
mov
jnp
pop
out
pusha
lcall
add
adc
and
or
icebp
inc
pop
adc
push
or
sahf
push
insb
ror
cmp
jmp
std
test
push
push
arpl
jns
push
out
inc
sbb
lods
daa
adc
xor
mov
negl
push
or
pushf
pop
shlb
fcmovnbe
xchg
in
inc
xchg
xchg
repz
scas
sarl
dec
push
shlb
pop
lret
mov
out
fxch
cwtl
inc
jecxz
and
cmp
push
sbb
inc
jb
mov
jp
fsub
jmp
aad
in
outsb
out
push
jb
mov
out
dec
cmp
pop
inc
mov
jbe
sub
mov
jg
fsubl
lock
sub
shl
mov
ret
in
sub
or
rolb
fmul
xchg
int3
daa
add
jns
cmp
mov
das
mov
cmp
dec
add
lods
and
push
push
jae
test
in
inc
int
pop
xor
pop
inc
popf
sbb
mov
cmp
clc
cmpsl
mov
mov
push
sbb
fdivs
fcmove
mov
xor
and
sub
cs
mov
sbb
xor
fstps
test
pop
das
mov
pop
fimull
sbb
ljmp
push
dec
pop
mov
push
roll
lds
xchg
push
xor
push
rol
push
mov
je
gs
pop
pop
rorl
push
call
cmp
mov
xor
icebp
mov
bound
or
pusha
mov
call
out
je
sbb
sbb
push
xchg
js
es
pop
fs
xchg
jl
inc
inc
cs
xor
pop
addl
mov
lock
dec
pop
int
pushf
imul
jp
jnp
dec
lock
inc
add
jns
pop
or
test
jns
sub
or
int3
jnp
or
inc
cmpsb
loop
sarb
or
adc
shlb
adc
int3
test
sbb
dec
pop
bound
filds
adc
fwait
sbb
pop
push
jne
pop
xchg
and
fldenv
add
and
js
ffreep
cmp
pop
clc
xor
jo
subb
push
cmp
push
ss
lret
aam
jp
loop
push
inc
imull
sahf
jb
cmc
jmp
mov
jae
mov
outsl
scas
push
fstpl
data16
sahf
mov
xor
inc
or
and
into
push
rcr
cwtl
push
out
test
jle
aam
gs
outsb
adcb
jp
add
fsubrl
pop
in
shrb
xchg
out
mov
jns
insb
popf
std
mov
push
xchg
pop
push
sub
xchg
inc
test
jle
xchg
leave
xchg
cli
lcall
test
mov
xor
call
add
push
outsb
stos
pop
cmpl
cwtl
mov
mov
nop
mov
repnz
xor
sub
ss
imul
xor
jecxz
arpl
rorl
sub
in
adc
andb
mov
mov
int3
or
das
inc
std
inc
mov
orb
inc
xchg
xchg
je
mov
lock
or
pop
mov
rcll
pop
and
cmp
ja
insb
sbb
jg
insb
jo
fmuls
imul
ja
mov
sub
int3
add
sbb
and
sub
lods
arpl
adc
push
cmp
xchg
pop
je
in
mov
std
dec
dec
hlt
enter
inc
mov
push
rcrb
jl
adc
xor
in
xor
aad
jb
pop
insl
push
rclb
dec
cld
push
outsb
negb
rorb
add
push
push
mov
out
stc
popf
xchg
xchg
repz
inc
add
xchg
mov
jo
inc
clc
bound
inc
fsts
xor
addb
jb
mov
xchg
ljmp
ret
lcall
into
push
add
add
repz
push
dec
loope
and
outsl
jle
xchg
mov
es
adc
inc
in
int
out
movsb
xchg
lock
add
les
sub
shrl
or
mov
sbb
mov
jmp
xor
mov
out
int3
and
xor
lcall
cmp
movsl
pop
in
cltd
xchg
rcll
lret
jbe
aad
dec
mov
jno
aas
or
fwait
xchg
cmpsl
jnp
outsb
jmp
rol
pop
iret
insl
push
mov
xor
inc
scas
fnstcw
lret
cltd
loope
rorb
ds
xorb
adcl
pop
popa
cmp
cmpsl
imul
mov
and
sub
pop
cmpsb
int
sub
std
xor
mov
adc
dec
jb
sub
dec
sub
in
arpl
mov
mov
pop
and
jae
cmc
call
adc
loopne
scas
fistl
out
or
and
jecxz
xchg
ja
jnp
iret
pushf
in
pushfw
test
jne
test
scas
mov
repz
mov
inc
adc
pop
lock
xchg
dec
push
and
cmp
out
add
lahf
movb
mov
pop
jecxz
out
or
add
jne
xchg
cmp
inc
jne
leave
adc
xchg
lret
pusha
ja
bound
icebp
aas
int
push
xchg
mov
fsts
xchg
mov
in
xorb
cmc
filds
arpl
inc
jle
inc
xor
cld
movb
add
xorb
fstps
push
sbb
or
ss
lret
adc
xor
mov
in
jne
ds
mov
sbb
fistl
xchg
cmp
jo
and
in
and
push
mov
repnz
aad
roll
rcrl
add
xchg
loope
pusha
in
cmc
xchg
inc
lcall
ljmp
insl
fimuls
outsb
iret
in
xchg
sbb
enter
or
pop
lods
cmp
std
jle
loope
mov
aaa
cmp
out
mov
out
xchg
xor
jno
out
dec
sub
inc
fwait
cmpsl
lods
xchg
jns
dec
lds
jge
subb
pop
lret
push
mov
test
gs
mov
push
or
inc
inc
movsl
add
push
nop
leave
add
cmpsl
pushf
adc
ret
lods
xor
js
aas
mov
adc
pop
dec
gs
inc
dec
mov
sahf
pop
jecxz
pop
jne
call
loopne
stc
adc
fucom
nop
jns
test
inc
inc
mov
aas
sbb
das
das
adc
ret
push
repz
mov
test
sub
mov
insl
lret
dec
or
mull
push
in
pop
sbb
lret
cmp
add
mov
cmp
outsb
aam
pushl
loopne
pop
lcall
cmp
push
cld
inc
pusha
xchg
hlt
cmp
lcall
mov
notl
pop
fistpll
mov
jns
sbb
push
pop
and
rcl
add
fnstcw
outsl
fldl
push
fldenv
loopne
mov
insl
cmp
or
sbb
stos
sti
mov
jl
xor
mov
xchg
jnp
inc
popa
stos
cmpsb
push
lock
jbe
into
je
mul
sti
and
sub
push
outsb
jne
add
and
jecxz
ret
int
sub
loope
gs
ljmp
repz
stos
out
push
and
inc
scas
dec
cmp
mov
arpl
cld
sbb
mov
xchg
call
pop
jmp
sub
sbb
dec
pop
mov
mov
es
movsb
push
mov
jle
mov
cwtl
dec
dec
sub
lfs
dec
sub
adc
push
jle
inc
push
sub
aas
jle
push
pop
scas
sbb
mov
pop
cmp
popa
imul
daa
inc
mov
jo
ret
adc
call
sbb
xchg
ja
mov
imul
jle
cmp
cmp
rcrl
int3
shl
inc
add
popa
push
and
test
sti
add
test
sbb
js
leave
repnz
xchg
and
adc
fsubs
mov
pop
mov
jp
sti
stos
and
xchg
mov
orl
mov
push
push
dec
int
iret
stos
sbb
leave
shl
adc
push
cmp
gs
pushf
add
int
mov
loope
test
lods
es
pop
mov
adc
fdivrs
mov
loope
adc
add
jg
inc
scas
div
adc
dec
jmp
bound
pop
pop
cmpb
cmp
mov
dec
push
xor
in
dec
lret
jbe
sub
mov
stos
pop
ret
xchg
test
jle
cwtl
imul
and
sub
ljmp
enter
or
adc
fsubr
pop
fistpl
xchg
adc
sub
sbb
push
push
mov
xchg
stc
mov
add
fisubrl
loopne
or
adc
mov
fidivrl
add
push
or
mov
mov
sub
jle
sub
mov
sbb
pop
mov
cmp
add
arpl
out
int3
or
jo
sbb
test
xchg
dec
lock
jp
and
cmp
imul
ljmp
out
ret
dec
rclb
cwtl
push
adc
cmpsb
or
push
aam
loope
inc
negl
push
pop
adc
adc
jge
xchg
add
push
icebp
jg
fbld
xchg
aas
push
adc
cld
roll
test
mov
fnstenv
and
int
aad
popf
add
shll
ret
xlat
enter
xchg
cwtl
or
sbb
mov
fs
lret
ja
iret
rol
cmpl
pop
out
cmp
push
push
or
loopne
jb
xor
cli
sub
jbe
lds
outsb
cs
call
fisttpl
jo
push
adc
xchg
push
je
inc
dec
mov
shlb
mov
icebp
mov
es
daa
mov
sub
push
and
bound
push
add
mov
popf
cld
stc
xor
push
stos
test
dec
cmp
decb
aad
andl
test
scas
test
leave
mov
xlat
jp
jmp
fnstcw
xor
idivb
inc
cmpsl
sbb
dec
sbb
jg
cwtl
mov
dec
inc
shr
fs
arpl
adc
pop
aam
mov
scas
adc
push
push
cmp
and
cmp
dec
int3
mov
pop
cmp
inc
daa
sbb
icebp
xor
jno
pop
and
sahf
adc
rcll
negl
lds
and
test
nop
jle
mov
mov
adc
push
cmp
sbb
cmp
ffree
or
adc
push
add
js
sub
out
test
mov
fwait
enter
aam
test
aam
das
and
mov
jmp
lea
push
aad
repnz
icebp
scas
mov
xchg
shlb
mov
mov
mov
iret
fcomip
enter
lcall
test
mov
sti
out
jmp
pop
and
xor
jle
mov
inc
jecxz
loopne
inc
incb
sub
pop
mov
fsubrl
js
adcl
adc
and
fcoml
xorb
fnsave
and
ss
gs
push
and
es
or
xchg
dec
aaa
aas
outsb
mov
enter
mov
dec
cld
rorl
push
sbb
pushf
mov
mov
inc
add
mov
cmp
imul
roll
in
outsb
sbb
adc
or
fsubrs
syscall
pop
sbb
leave
sub
bound
sub
rorb
mov
adc
inc
arpl
sbb
cmpsl
popa
mov
sbb
or
dec
push
inc
fbld
jns
jecxz
mov
mov
dec
mov
int3
xor
push
add
sbb
mov
testl
pop
inc
cmpsb
es
icebp
add
jae
ljmp
inc
ss
mov
inc
mov
cld
and
inc
sahf
out
outsl
fdivrl
shrl
stc
insl
dec
cmp
les
xchg
aas
into
pop
cltd
cwtl
mov
push
adc
xchg
jb
int
pop
gs
cmpsl
movsl
into
fs
insl
dec
mov
sub
mov
sbbl
pop
cmp
xor
adc
out
mov
imul
mov
adcb
js,pn
daa
xchg
cld
enter
out
sub
pop
xchg
ret
inc
fdivrs
mov
jae
push
mov
fistpl
lods
sbbb
lock
data16
xor
jl
ljmp
mov
das
adc
pop
xchg
insl
ds
adc
in
cmp
dec
mov
mov
sub
and
ds
pop
aad
mov
rcl
loope
jnp
in
xchg
test
arpl
movsb
call
mov
into
fnstsw
test
and
jecxz
xchg
cmp
sub
int3
lcall
mov
xchg
push
iret
popa
imul
dec
pop
aad
mov
jbe
sbb
dec
lea
mov
mov
ret
pmuludq
imul
mov
push
cwtl
bound
divb
xchg
inc
pop
push
sub
sti
jecxz
mov
daa
sub
out
cmp
jmp
xor
mov
popa
repnz
or
push
test
xlat
jge
pop
sbb
addl
and
fidivrl
sub
rcrb
int
clc
mov
mov
mov
sub
in
in
add
rcll
loope
mov
data16
sarl
push
fisubrl
bound
jge
scas
jnp
leave
jmp
dec
arpl
mov
mov
xchg
inc
js
pop
pop
sub
aas
mov
cmpb
xchg
xor
add
add
inc
and
and
rcrb
adc
scas
out
fstps
js
pop
shr
jmp
hlt
sub
aad
xchg
jns
jg
fistps
cmp
cmp
cmp
je
add
jecxz
jl
lds
aaa
mov
xchg
pusha
xchg
inc
and
ret
or
popa
sti
or
adc
mov
bswap
arpl
fistps
push
leave
sub
sbb
sbb
das
popa
pusha
nop
xor
sahf
or
ret
fldcw
mov
or
or
cmp
lahf
enter
push
jb
cli
push
mov
lods
cli
jmp
push
inc
mov
push
xor
push
aad
xchg
test
xor
scas
outsl
pop
call
jle
adc
xor
mov
repnz
jmp
jg
aaa
sub
out
jp
dec
jns
fbld
push
aas
push
or
mov
pusha
dec
jae
mov
dec
xorw
leave
dec
cli
pop
and
or
ds
adc
and
cmpsb
insl
sbb
popf
imul
push
rorl
stos
not
mov
jbe
or
xchg
insl
out
lret
mov
out
inc
arpl
lods
push
sbb
mov
lahf
decl
adc
imul
in
call
out
subl
adc
negl
pusha
lahf
cmp
ret
jbe
scas
lcall
jle
movsb
imul
xchg
cmpsl
adc
xchg
xchg
mov
stc
fisubl
mov
in
and
movsl
pop
scas
loope
divl
les
sbb
js
rorb
in
insl
or
not
jmp
push
out
lds
jge
add
push
addl
pop
jl
mov
mov
out
aam
popf
sbb
cmp
xchg
mov
sub
in
sti
fimuls
mov
jge
push
cmpsl
jl
sub
lret
pop
pop
scas
in
cli
and
and
rcr
roll
orb
insb
mov
adc
mov
mov
lret
das
or
fwait
dec
loope
mov
xor
int
and
lea
pop
mov
incb
stos
in
sub
loop
test
and
or
jb
scas
scas
pop
mov
pop
jl
cmp
aas
jmp
loop
ljmp
enter
xor
xor
xlat
pop
bound
and
popf
push
icebp
daa
jg
addr16
addr16
pop
mov
scas
int3
xor
addr16
mov
fdivrs
xchg
bound
addr16
ret
test
out
push
sub
lahf
test
push
xor
or
xchg
loopne
push
fsts
push
rorl
arpl
or
xor
push
xchg
gs
or
icebp
xor
or
and
adc
mov
inc
bnd
fmull
xchg
imul
push
into
inc
push
arpl
mov
xor
xor
sub
cmc
mov
cmp
std
ret
imul
lahf
ret
pop
outsb
inc
jnp
dec
rorb
fnstenv
pop
adc
mov
or
sbb
addl
mov
and
adc
dec
jo
loopne
dec
cmp
jns
mov
mov
pop
fstpl
mov
and
in
sub
jmp
popa
inc
negl
lea
outsl
test
roll
scas
or
dec
xchg
pop
push
arpl
movsl
adc
push
sub
mov
fwait
mov
shll
adc
dec
sahf
pop
push
jae
dec
add
repz
dec
inc
decl
fistpll
bound
stos
lds
sahf
bound
sub
in
fists
imul
lret
jns
xor
jmp
xor
shl
iret
jno
icebp
testb
fbstp
idiv
jbe
pop
or
cmp
rolb
dec
push
nop
ja
push
in
addl
hlt
push
xchg
push
and
repz
fwait
mov
adc
ret
sarb
mov
fidivrl
pop
adc
add
xacquire
xchg
inc
xchg
ljmp
iret
ljmp
in
lahf
dec
or
add
sbb
lahf
lds
fiaddl
jge
mov
sub
xor
stc
jnp
pop
lods
and
repz
imul
mov
push
sbb
adc
mov
xor
sbb
aas
cmc
subb
push
lcall
push
or
jmp
lahf
sub
js
sub
xchg
sbb
mov
scas
inc
call
sarb
lcall
xorb
push
dec
ljmp
cmpsb
mov
jbe
sbbb
add
test
out
ds
push
nop
fcomp
mov
shlb
push
cmp
pop
icebp
mov
stc
out
dec
cmp
and
out
mov
shll
mov
fmul
pop
orl
mov
adc
cltd
popaw
xchg
insl
jnp
sub
jl
mov
insl
dec
imul
push
clc
mov
das
add
cmp
xchg
jp
cltd
xor
mov
or
push
lods
mov
push
fdivrs
dec
sbb
sub
addl
mov
aaa
dec
arpl
push
mov
mov
dec
push
in
mov
decb
mov
popa
pop
subl
icebp
popa
inc
push
shl
xchg
inc
incb
shll
mov
enter
sub
sub
and
ret
sbbl
cmp
pop
adcl
pop
jns
repz
jg
inc
lds
dec
mov
xor
jge
outsl
frstor
lods
adc
ss
or
sbb
test
add
push
mov
lret
and
sub
xor
sar
cwtl
push
lcall
push
pop
out
and
inc
stc
fwait
in
scas
imull
mov
ss
inc
fs
mov
scas
repz
aaa
fcoms
fisubrl
add
and
ret
xor
pop
insb
cmp
dec
and
stos
xlat
push
pop
pushl
push
push
or
xchg
cmp
leave
dec
icebp
sub
adc
dec
cld
cwtl
test
roll
cmpsl
je
adc
dec
movsl
and
cmp
adc
mov
popa
push
hlt
sub
cwtl
das
stos
lods
add
or
push
dec
mov
pusha
and
jmp
dec
mov
loopne
xchg
or
mov
push
xor
push
inc
and
or
gs
out
xchg
pop
in
push
add
sub
mov
jne
jg
cmp
idivb
bnd
mov
fs
lods
leave
sub
filds
sbb
sahf
mov
mov
add
or
fstps
in
adc
pop
dec
dec
test
push
loop
into
icebp
lret
nop
pop
inc
mov
aam
lds
push
notl
aam
scas
icebp
arpl
imul
jns
cmp
xrelease
into
into
mov
push
pop
bound
cmp
addl
pop
mov
stos
das
roll
mov
cmp
iret
pushf
jmp
nop
movsb
stos
pop
mov
andb
sub
push
shl
sub
dec
stos
sub
xchg
fisubrs
mov
xchg
jg
adcb
mov
push
inc
mov
in
xlat
mov
scas
mov
add
orl
add
mov
mov
sbb
xorb
or
inc
pop
jge
enter
mov
call
pop
orl
add
aam
mov
repnz
insb
mov
cmp
mov
test
or
adc
cmp
notl
dec
enter
mov
mov
xchg
add
movsb
push
add
fnop
pop
ds
xchg
call
inc
incb
mov
push
pop
sub
xor
pop
inc
pop
mov
dec
in
pop
ja
mov
sarl
call
daa
movsl
push
rolb
test
fsub
repnz
inc
into
or
mov
jne
xorl
mov
sbb
cmp
xchg
stc
mov
test
jp
and
and
xchg
jg
movsb
dec
pop
lret
out
mov
or
xchg
sahf
cmpsl
sbb
loopne
add
mov
stos
inc
dec
sbb
mov
std
arpl
decl
into
or
enter
mov
dec
dec
push
jno
jb
pop
push
adc
pop
pop
test
cli
pop
pop
mov
mov
mov
sub
dec
jmp
pushf
int3
in
outsl
mov
enter
lds
sub
mov
fnstsw
dec
dec
test
popf
cmpsb
mov
sbb
sub
or
mov
pushf
les
je
ja
or
dec
adc
lock
pop
shlb
hlt
jp
adc
in
sbb
fnsave
subl
jb
or
addr16
lret
aad
fs
pop
jb
pushl
add
test
enter
sub
in
cmpsb
outsb
dec
test
in
push
mov
ss
ret
pusha
jmp
in
fstcw
and
ret
loopne
xor
jae
sub
aad
push
dec
or
dec
sub
roll
pushf
pushl
push
popa
jg
push
jbe
test
sub
dec
test
icebp
test
xchg
add
test
sub
lret
fisubrl
pop
sti
sbb
or
pop
cmp
add
push
xor
sbb
pushf
push
test
and
mov
ficompl
sbb
xor
jge
sbb
xchg
mov
mov
addr16
cmp
push
ret
imul
jmp
imul
dec
and
jecxz
loope,pt
js
iret
xchg
push
dec
pop
sub
aam
or
mov
add
cmp
icebp
dec
push
aas
dec
inc
es
cltd
mov
sub
lds
push
jne
ljmp
pop
das
or
dec
into
subb
clc
push
adc
mov
mov
ret
ret
or
push
mov
jle
sbb
andb
mov
mov
inc
mov
jl
jb
scas
xchg
inc
cmp
sahf
icebp
shll
push
cmc
pop
inc
and
push
gs
xor
xchg
adc
stos
enter
aam
js
clc
xchg
rcrb
lret
movsl
gs
sub
mov
hlt
or
sub
adc
outsb
adc
roll
sbb
mov
std
es
mov
fcomp
cmpb
push
adc
cs
add
pop
loopne
mov
lret
mov
pushf
out
std
inc
jo
and
fdivrs
rcll
xor
shl
dec
sbb
ds
stos
xchg
jne
mov
ficoml
push
ljmp
insl
push
adc
addl
test
inc
or
dec
int
ret
mov
cmp
ret
push
or
add
inc
jns
cli
pop
lods
cs
xchg
repz
in
sub
cmp
stos
loop
lods
shlb
cmpsl
xchg
fs
adc
fdivl
arpl
cmp
repnz
xchg
cltd
loopne
xchg
cltd
std
in
int3
filds
add
mul
sbb
adc
jno
std
iret
out
out
xchg
cmp
dec
std
shl
ss
add
call
or
mov
inc
faddl
adc
faddl
stos
into
cmp
lcall
subb
jge
aas
cmp
sub
cmpsl
sti
out
repnz
test
xor
mov
mov
add
outsl
push
insl
les
ja
inc
sbb
fsub
sahf
jnp
fiadds
data16
dec
jg
les
jo
in
inc
mov
xor
loopne
hlt
mov
clc
jbe
ss
add
add
iret
maxps
add
jo
push
cmp
inc
cmpsb
cmp
cmp
shlb
adc
add
popa
out
sahf
ja
push
adc
sub
xlat
jae
addb
nop
cmpsl
inc
int3
cmp
aas
and
rclb
jl
in
xlat
dec
cmpsb
inc
xchg
subl
neg
cli
pushf
or
mov
lea
sub
xchg
popa
sahf
adcl
cmp
ret
pusha
or
imul
std
out
and
data16
loop
dec
push
and
jo
cmpsb
add
cmpsb
stos
cmpsb
nop
call
int3
pop
mov
ret
mov
add
loope
stos
lahf
add
cwtl
cmpsl
nop
xchg
cmp
mov
incb
mov
imul
push
push
fisttpl
int
or
int
push
leave
push
adcl
clc
test
sahf
lods
mov
lret
out
mov
lods
xchg
or
shl
lods
leave
xchg
pop
mov
or
lock
sbb
inc
arpl
pfcmpgt
jl
cmp
jb
pushf
loopne
sbbl
sbb
fsubr
cmp
mov
pop
or
scas
les
jg
sbb
mov
pop
pop
sti
rorl
ftst
popf
js
xorb
push
iret
push
mov
sahf
movsl
push
rorb
adc
hlt
sub
imul
insl
ret
pop
push
in
das
hlt
icebp
repz
mov
jae
je
push
and
pop
sub
add
pop
mov
pop
rorb
loop
cmpsl
jne
test
iret
mov
jle
in
jmp
sub
lcall
cmp
movsl
pop
mov
mov
movsl
sbb
outsl
lret
in
mov
jne
inc
xchg
jl
mov
sbb
mov
mov
aaa
out
jns
push
dec
dec
and
or
rcrb
mov
out
test
mov
pop
stc
lock
push
imul
mov
jne
cmp
popf
adc
xchg
lods
inc
movl
rolb
test
fcoms
ret
adc
and
dec
xor
pop
inc
in
stos
adc
pop
push
push
inc
dec
pop
mov
cmp
xor
mov
popa
loope
fnsave
ret
jg
cmp
mov
pop
xor
fcoml
sbb
pop
lea
xor
sub
aad
xchg
fldenv
jnp
lock
jae
pop
push
push
mov
or
push
sub
fwait
lcall
mov
xchg
push
sti
ficoms
xor
loop
adc
clc
jnp
dec
inc
sub
mov
movsl
std
gs
push
xor
aam
out
divb
pop
xchg
icebp
sbb
adc
lahf
add
mov
imul
sbb
arpl
cmp
or
sbb
rcr
pop
pop
out
shlb
jmp
adc
popf
mov
cmpsl
mov
and
test
sub
pop
out
hlt
xchg
sbb
jge
sub
mov
pop
lds
dec
cmc
lcall
subb
jnp
jns
lea
pop
ret
ss
mov
sbb
lods
jae
jg
cmp
inc
and
test
stos
or
sub
add
and
mov
dec
cmp
xor
movsb
lcall
jb
outsl
xchg
mov
dec
mulb
add
push
aaa
out
mov
inc
rorl
mov
jae
testl
insl
cli
dec
std
sub
sti
scas
push
xor
rcll
push
sub
addl
fxch
push
imul
adcl
ds
pop
dec
lcall
imul
mov
mov
mov
push
mov
sub
xor
mov
jnp
subb
dec
icebp
xchg
and
mov
sbb
pop
popa
es
js
cltd
push
sub
sub
scas
xor
dec
filds
cmpsb
adc
stos
mov
int
add
sub
adc
sbb
pushf
mov
cwtl
rorb
in
jl
in
jecxz
sub
adc
xchg
pop
mov
push
xchg
sti
pop
sbb
pop
mov
mov
mov
ret
pusha
mov
inc
add
dec
sbb
sbb
jp
mov
pushf
sti
loop
cli
cmp
push
adcl
call
mov
pop
fcompl
in
loope
loop
int3
pop
inc
fnstenv
out
leave
or
enter
mov
jbe
cwtl
adc
push
inc
dec
mov
cmp
mov
jae
in
xchg
mov
lods
xor
xchg
roll
inc
mov
leave
inc
arpl
xor
push
sbb
aas
in
sarl
or
call
and
fwait
jae
jo
lods
mov
notb
fwait
repz
mov
pop
sbb
out
sarb
andl
and
in
push
mov
adc
inc
orb
add
mov
sbb
sbb
addl
add
rol
mov
stos
call
jge
jb
cmpsb
outsb
mov
mov
lahf
jae
sahf
dec
imul
mov
in
mov
xor
loop
rorb
mov
add
shll
movsl
enter
xorb
test
push
clc
int
pop
pusha
inc
fwait
add
pop
int3
lret
sub
xchg
inc
xchg
inc
push
cmp
js
push
cmpb
and
jo
out
loop
fs
lods
inc
add
jp
sbb
roll
push
jbe
ret
mov
mov
insb
push
ret
shrl
bndldx
rorl
xor
test
push
cltd
and
call
dec
inc
mov
sbb
sahf
mov
adc
int
es
das
mov
mov
in
daa
cld
fincstp
mov
ljmp
jmp
pop
arpl
cs
add
sub
mov
ja
inc
or
test
arpl
stos
lret
inc
cmp
bound
pop
daa
insl
fimuls
fs
cmp
loope
mov
nop
xchg
repnz
inc
fstpl
add
shlb
mov
mov
out
fucom
jl
push
mov
icebp
das
mov
std
out
cmpsl
mov
push
jg
inc
xchg
mov
rorl
inc
pushf
jb
mov
rcrb
inc
bswap
arpl
arpl
mov
jae
stos
nop
fwait
push
enter
cmp
sbb
sub
out
ljmp
pop
insl
out
pop
aad
movsb
and
push
cs
in
mov
push
adc
in
divl
xlat
shll
cmp
outsb
xor
add
mov
fimull
adc
jns
dec
sbb
ret
ljmp
fistps
jne
mov
pop
mov
cmc
fidivs
sbb
in
xchg
push
pop
push
xor
outsb
je
inc
and
outsl
pushf
lcall
test
out
in
lock
in
and
push
fldenv
mov
jb,pn
lahf
dec
adc
mov
xchg
lea
cld
or
ss
xchg
ljmp
dec
mov
xchg
test
add
dec
arpl
xchg
aaa
insb
xor
mov
repnz
loop
sbb
jmp
jmp
cwtl
add
jl
lret
sub
or
enter
add
jecxz
gs
jg
mov
ss
imul
shl
fistps
xchg
movsb
xchg
and
and
repz
out
aas
xchg
es
shll
jnp
mov
subl
dec
inc
add
in
jo
adc
lcall
jl
xchg
fdivl
push
sbb
jb
rclb
mov
jns
clc
aam
mov
xor
rolb
aas
mov
ljmp
inc
pop
enter
mov
in
repnz
and
jo
cs
decb
sahf
dec
in
add
ficoml
mov
aad
sub
pop
push
push
push
outsl
xlat
lea
ret
insb
push
and
xor
xor
jbe
fiaddl
or
out
fistpl
sbb
repnz
ficomps
mov
mov
push
cmp
imul
or
mov
es
jmp
popf
cmp
pop
sbb
mov
and
roll
fnstcw
inc
call
fldcw
scas
mov
adc
mov
cmp
shlb
and
xor
sbb
lahf
xorl
jmp
mov
add
sbb
push
mov
fdivl
push
fbld
or
and
je
aad
push
std
mov
dec
sbbb
outsl
and
dec
les
inc
add
adc
repnz
and
jo
and
pop
xor
addr16
mov
mov
sbb
xor
jl
dec
rcl
sbb
adc
into
xchg
lret
loop
sbb
lahf
inc
dec
fwait
cmp
ljmp
cmpsl
sub
addr16
pop
inc
outsb
sub
sbb
rcll
in
sbb
or
or
jge
test
ss
fs
daa
cmp
push
repz
sbb
clc
ljmp
xlat
rcl
mov
cli
cmp
outsl
xchg
fmuls
cmp
mov
iret
icebp
clc
mov
inc
jae
push
mov
sarl
mov
out
adc
jg
sub
add
pop
cmp
ds
in
sbb
inc
xchg
dec
cmp
jl
dec
lret
add
arpl
xlat
push
gs
sbb
fdivr
xchg
movsl
outsl
xchg
mov
mov
xor
mov
rcr
pop
mov
mov
xor
loop
mov
add
xor
iret
sahf
insb
jg
jnp
into
leave
test
outsl
jmp
sub
push
es
decl
sbb
jecxz
mov
das
scas
mov
aad
das
and
ficoml
in
in
xchg
insl
mov
mov
test
push
cld
sub
mov
pop
mov
outsl
jp
sbb
xlat
loopne
inc
fdivr
data16
fsts
pop
es
fldenv
aad
pop
push
push
jbe
xor
jge
repnz
repz
push
mov
sub
popf
push
or
sbb
add
dec
mov
nop
mov
mov
sub
sahf
lods
cmp
jecxz
add
shlb
jg
nop
rorl
divb
add
ja
jle
pop
mov
xor
mov
addr16
dec
add
push
out
pop
push
xor
imul
lret
adcl
pop
adc
mov
inc
mov
jno
mov
orl
push
xchg
je
mov
jae
mov
mov
dec
jg
xchg
push
jns
std
sbb
mov
mov
cli
mov
dec
lcall
nop
adc
push
ds
bound
xor
sbb
or
mov
sub
mov
mov
dec
sarl
jg
adc
adcl
lcall
in
dec
or
mov
imul
and
push
xor
mov
loopne
cltd
xchg
jno
or
shll
push
fwait
std
ret
jmp
insl
cmp
popf
xor
push
adc
jl
lods
jl
int
sub
pop
out
les
mov
jle
pushw
shll
sub
pop
stos
ljmp
ja
mov
in
adcl
das
push
xor
xchg
popa
dec
iret
mov
xor
push
les
test
in
imull
mov
lcall
adc
dec
and
inc
jl
hlt
pop
int
sub
or
and
in
inc
fildl
mov
rorl
cmp
push
inc
imull
loopne
mov
add
dec
sub
aam
cli
fsubr
jmp
ljmp
mov
sbb
jno
pushl
stc
cwtl
mov
es
push
or
pop
pop
jl
das
ds
jle
pop
cmp
call
pop
cld
sub
sub
adc
fs
into
lods
jb
xchg
pop
mov
cmp
iret
in
lcall
fwait
cmpsb
and
sarb
into
fnstcw
jo
lods
mov
or
icebp
lock
dec
fadd
jnp
xchg
in
stos
movsb
rcrl
push
adc
xor
adc
adc
outsl
mov
mov
lds
sbb
lods
lods
or
xchg
in
cmpsl
xor
insb
nop
int3
in
daa
mov
mov
mov
ds
repnz
mov
in
push
mov
lods
and
shrl
and
inc
fs
rcll
push
push
cld
out
movsb
sahf
pop
and
cmpsl
mov
clc
sub
nop
jno
push
fstl
jmp
push
mov
test
pushf
add
fwait
push
or
outsl
out
inc
inc
or
mov
fildl
repnz
testl
js
jmp
push
cwtl
js
mov
divb
push
mov
popa
xchg
cltd
and
fs
fldt
inc
sbb
inc
movsb
sub
xor
iret
inc
cltd
fcompl
icebp
dec
jle
ficompl
ret
je
rcrl
mov
sub
dec
ret
in
add
into
jae
aaa
or
cld
mov
jbe
in
loop
push
daa
ret
ja
jbe
xchg
testl
outsl
jne
push
push
push
jle
and
mov
sbb
xchg
xchg
test
jl
push
out
cltd
insb
ret
jne
sub
andb
cs
cwtl
ficompl
xchg
mov
xchg
test
in
mov
jecxz
stc
sti
inc
add
lea
xor
imul
push
shlb
lds
adc
inc
pop
sub
cmp
pop
jno
aaa
pop
inc
das
test
or
cmp
or
push
lahf
dec
or
sbb
lahf
cmpsb
hlt
push
adc
daa
or
cs
in
sbb
cmp
lret
sbb
xchg
push
mov
jns
call
push
lods
jns
sub
in
sub
sti
dec
decl
pop
into
push
test
cs
sub
popl
stc
repnz
mov
inc
ret
out
jmp
imul
dec
pop
jge
aas
or
stos
dec
xchg
lret
adc
andb
cwtl
push
movsl
dec
mov
or
and
adc
sbb
dec
mov
mov
or
dec
ficoml
cmp
or
xor
or
and
pop
sti
test
daa
ljmp
enterw
adc
xchg
xor
rcrb
cmp
imul
test
jp
and
push
ds
rorl
sbb
outsb
rcrl
popa
sbb
jbe
xchg
jge
aam
or
adc
xchg
mov
cmpsl
mov
push
and
mov
sbb
jp
stos
pop
cmpsb
ffree
adc
jb
insb
fisttpll
repnz
add
push
icebp
push
and
mov
mov
ret
sbb
and
dec
out
int3
inc
jo
jp
out
insb
arpl
jnp
outsl
xchg
pop
add
xchg
rorb
sti
mov
ficompl
sub
insb
mov
inc
scas
pop
push
dec
dec
popf
inc
lcall
push
pusha
mov
aaa
cmp
push
ret
mov
iret
xchg
in
icebp
lret
mov
movsb
adc
dec
stos
mov
in
scas
mov
outsb
push
push
test
ljmp
pusha
mov
jo
and
pop
out
int
ja
adc
jl
mov
push
mov
lea
and
repnz
loope
repz
push
ja
jno
xor
cwtl
or
outsl
orb
rcrl
jne
cmp
orl
sbb
jbe
fcmovbe
aas
add
cmpsl
mov
test
loopne
jp
cmp
cld
and
ljmp
sbb
std
mov
mov
loop
jp
roll
mov
or
dec
int3
aas
testb
pop
pop
cmp
shll
iret
xchg
or
ja
dec
popf
and
sbb
movsb
fincstp
sub
pop
jo
cmp
test
adc
stos
pop
orl
or
push
pop
xchg
das
dec
mov
stos
mov
mov
outsb
mov
pop
test
cmp
pushl
add
je
xor
into
mov
and
imul
and
popa
push
sbb
sub
push
aaa
push
inc
adc
int3
dec
arpl
cmc
add
sti
xlat
xchg
inc
pop
mov
stos
clc
call
and
jne
and
call
ror
lods
pop
clc
or
into
dec
jl
mov
daa
and
and
jg
cs
sarb
cmpb
lea
arpl
pop
outsb
mov
mov
ds
inc
enter
sbb
ret
jge
insb
fisttpll
inc
add
ret
in
movsb
incl
or
adc
icebp
adcb
mov
xchg
lods
push
bound
out
push
cli
hlt
mov
inc
jmp
xor
push
mov
mov
out
dec
sbb
js
pop
arpl
adc
inc
adc
pusha
js
mov
sbb
bound
bound
jno
jp
xor
pop
mov
or
mov
sbb
movsl
in
lahf
mov
lods
pop
sbb
or
test
xchg
pusha
incl
cmp
rcrb
loope
shll
mov
push
cwtl
mov
outsb
sbb
lret
in
xchg
and
cwtl
mov
pop
sbb
push
aam
into
das
cmpsl
jmp
fcom
js
fcompp
sub
pop
push
into
mov
bound
xorb
in
push
orl
push
pop
dec
xor
sub
jnp
repz
loop
lods
pop
inc
sbb
clc
test
dec
loop
push
icebp
adc
pop
ljmp
sahf
sbb
fcomps
lret
and
cmpsl
add
call
mov
adc
add
outsb
mov
popf
imul
xor
mov
jo
les
sahf
sub
adc
add
cmc
icebp
stos
cmpsb
inc
add
testl
sbb
shl
loop
xchg
mov
push
enter
aad
outsl
movb
mov
jle
xor
cmp
shlb
push
inc
mov
and
xchg
cmp
jp
ret
pop
push
cmp
xchg
rcr
inc
rcll
aam
mov
popa
daa
dec
stos
adc
mov
stc
lods
mov
xor
xchg
test
cwtl
cli
mov
outsl
imulb
cmp
stos
pop
lret
in
inc
mov
shlb
cmp
push
sbb
xor
mov
hlt
out
sub
jnp
jmp
test
in
fmuls
jb
fidivs
jo
xor
mov
add
test
and
push
mov
jne
fdivrl
loopne
jne
push
mov
push
jnp
sbb
sbb
inc
lea
scas
mov
imul
mov
sbb
aaa
jae
stc
ljmp
rcr
aam
inc
or
jne
insb
cmp
adc
jmp
jbe
mov
mov
xchg
or
lret
jg
jb
jns
mov
ret
das
ds
push
dec
aam
gs
cmp
divb
addl
xchg
lds
js
lret
or
movl
pusha
je
or
dec
mov
cmpb
mov
loop
ljmp
iret
les
mov
push
xchg
addl
sub
and
adc
cmp
fnstcw
jnp
cmp
mov
cmpsl
lcall
rcrl
dec
dec
and
stos
mov
lock
adc
push
cli
inc
stos
roll
das
sbb
xchg
jmp
mov
and
inc
cld
mov
jp
dec
mov
push
adc
mov
xlat
fsubl
push
fbstp
sub
mov
mov
in
push
outsl
insl
loopne
mov
mov
mov
jae
and
adc
mov
mov
push
mov
leave
icebp
rorl
pop
movsl
inc
idiv
shrl
sahf
fsubrs
jb
divb
stos
sbb
jo
pop
out
sarb
in
iret
pusha
daa
and
and
pop
movhps
push
sub
lds
pop
movsb
lcall
das
aas
loop
push
xor
xchg
push
jae
inc
lods
push
je
sarb
loop
add
pusha
test
nop
jmp
lods
enter
std
shll
aam
xor
jne
push
inc
in
mov
mov
sub
lcall
dec
in
xchg
sub
cld
mov
aad
push
add
test
mov
inc
or
add
test
push
test
imul
mov
fwait
sbb
ds
mov
popa
mov
dec
jnp
inc
nop
ss
mov
sarb
dec
lods
mov
je
repz
jae
lret
and
lcall
jns
push
out
testl
dec
imul
scas
adc
addr16
or
sbb
movsl
mov
sub
fs
scas
fisubrl
ss
outsl
daa
sub
mov
mov
lahf
mov
mov
sbb
out
mov
mov
pop
aaa
dec
outsb
scas
push
xor
cltd
lock
cmc
xchg
lret
cwtl
xor
inc
push
pop
test
inc
inc
in
aaa
jnp
xor
adc
arpl
pusha
mov
push
repnz
nop
push
fiaddl
lods
pop
mov
int3
mov
cmp
or
arpl
ss
popa
add
add
xchg
dec
mov
or
rcrb
adc
rolb
xchg
pop
iret
push
aas
xor
aas
fwait
adc
xlat
call
sub
in
jecxz
sub
rorb
aad
or
pop
xchg
mov
push
mov
pop
push
pusha
lock
pop
mov
mov
xor
shlb
neg
push
mov
xorl
addr16
xor
stos
sbb
sbb
or
rorb
pop
mov
mov
mov
lods
mov
mov
int
dec
mov
inc
push
add
into
or
ret
pop
xchg
in
fistps
mov
in
pushf
adc
test
and
mov
mov
dec
lock
sarl
mov
jo
inc
push
adc
fnstsw
in
pop
inc
mov
or
inc
cwtl
cmc
js
push
outsl
add
adc
ja
mov
or
push
jmp
adc
dec
mov
pop
cmc
xchg
inc
dec
out
mov
inc
push
and
sbb
hlt
mov
add
pop
jo
xchg
mov
js
xor
add
or
xchg
daa
faddl
mov
sbb
popa
lods
mov
sub
inc
mov
push
std
mov
jl
add
cmpsl
mov
or
je
lahf
lcall
not
out
jmp
sbb
pop
flds
jle
add
sbb
xor
mov
dec
out
test
stos
je
lods
gs
adc
jae
mov
aad
repz
inc
push
adc
std
lods
dec
lock
mov
stc
mov
andl
shlb
cmp
or
dec
mov
add
scas
loop
out
or
cltd
xadd
inc
shll
je
mov
cmpsb
push
es
pop
iret
sahf
ret
xchg
outsl
add
addb
xchg
or
add
in
decb
jb
mov
stos
inc
xor
and
cmc
and
push
mov
jns
cltd
scas
jne
or
mov
addr16
notb
aam
xlat
loopne
jp
pop
dec
inc
adc
xchg
mov
add
loop
adc
sub
jge
js
in
pop
sti
pop
cwtl
aad
inc
add
sarb
ret
dec
shlb
adc
xchg
aas
test
rcrl
and
jno
hlt
bound
cmpsb
adc
push
inc
mov
test
push
push
mov
cmpl
xchg
and
push
or
mov
jp
mov
add
push
add
sar
or
popf
mov
jo
and
jl
lcall
das
and
xor
mov
int3
or
insb
ret
mov
lahf
test
inc
jno
or
hlt
add
jbe
push
xchg
scas
adc
sub
cmpsb
pop
mov
mov
push
rolb
movb
mov
cld
pop
or
add
jns
adc
add
sbb
dec
and
jle
hlt
rcrl
pop
adc
out
push
les
xchg
fistpll
dec
hlt
sub
inc
popf
out
filds
dec
mov
lds
adc
cmp
inc
sti
ss
sahf
andl
adc
and
pushf
stc
jle
xor
mov
xor
call
mov
cmp
test
adc
fs
xchg
scas
ljmp
fwait
or
mov
iret
add
aaa
arpl
xorl
jno
test
jp
in
sarb
imul
jbe
sbb
inc
test
sti
pop
testb
push
mov
adc
cmpsl
pop
cli
mov
cwtl
sub
fldt
push
stos
sub
sub
cltd
cmp
gs
movb
cli
mov
rorl
fldcw
mov
and
in
loopne
cs
add
sbb
sub
fs
mov
and
test
out
adc
sub
or
jecxz
mov
out
push
rorl
rorb
test
dec
cwtl
fdivrl
fsts
jp
jg
addb
loopne
sub
shlb
jp
sbb
or
loop
movsb
xchg
imul
outsl
xlat
aam
adc
testl
push
mov
addr16
inc
pop
call
pop
push
js
out
jbe
xchg
jno
sti
ja
imul
xlat
bound
test
mov
pop
mov
add
clc
popf
xchg
repnz
gs
mov
dec
fisttpl
push
jno
fdivl
xlat
and
mov
popl
fcoml
aas
idivl
fldl
or
push
sbb
scas
fidivl
jl
push
cmpsl
add
cwtl
mov
add
pop
or
insb
aad
push
jmp
ss
sub
add
rcrl
lock
xchg
mov
push
bound
das
iret
loop
enter
add
fildl
cltd
jl
dec
cli
push
mull
cwtl
jnp
sti
or
and
jno
cmp
pushf
popa
add
cmpsb
cltd
in
loopne
jno
mov
fisttps
inc
mov
pop
test
movsl
mov
inc
add
idivl
es
div
inc
enter
iret
fxch
or
jb
cwtl
add
pop
mov
mov
inc
push
or
rep
or
or
aas
ficomps
jle
ljmp
ljmp
xchg
xchg
xchg
in
test
cmp
aas
adc
jno
je
mov
push
fdivp
cmc
dec
pop
out
fisttps
xchg
dec
pop
sbb
dec
in
insb
xchg
or
cwtl
ror
xchg
adc
jne
dec
fidivl
gs
mov
xchg
enter
out
outsb
aas
sti
sahf
push
sub
jp
mov
clc
dec
pop
imull
je
jb
mov
add
repz
jne
pop
push
sub
cltd
fsubs
dec
ljmp
out
mov
aad
pop
mov
loope
rorl
imul
xor
pop
sub
daa
add
mov
rorl
xor
sub
gs
outsl
jno
mov
adc
xor
cmp
adc
mov
andb
fldl
or
push
fldenv
inc
jmp
push
lret
loope
pop
repz
jne
lods
xor
inc
push
add
movsb
andb
clc
stos
mov
pop
and
xchg
je
fcoml
movb
jecxz
cmpsb
add
mov
pop
adc
ja
nop
xlat
dec
jge
pop
cmp
push
xor
mov
mov
aas
jg
aaa
cwtl
stos
and
and
js
add
je
lds
bound
cmp
leave
xchg
mov
jae
and
mov
ffreep
in
or
inc
pop
mov
mov
cli
in
hlt
pop
inc
jg
xor
mov
movsl
lds
mov
fsts
ljmp
insl
sub
leave
into
fdivs
mov
add
and
and
sub
aam
arpl
and
mov
rcrb
int3
mov
mov
push
cmp
mov
out
cmc
adc
clc
fsubrp
daa
stos
in
xchg
push
shl
push
and
ja
cwtl
sti
subl
cmc
scas
ljmp
jg
fs
xchg
xor
arpl
xor
add
xlat
sbb
lahf
dec
sbb
cwtl
stos
mov
repz
xor
lods
jns
push
jp
sub
ss
fldl
pop
lods
sbbb
push
es
pop
sbb
cld
push
jne
out
adc
push
mov
adc
dec
je
mov
pop
ljmp
addr16
aad
js
push
stos
xchg
mov
push
sub
repz
mov
add
cwtl
ret
fisttpll
fcoms
data16
push
mov
jl
outsl
add
adc
sub
lods
pop
push
jno
pop
lds
fistpl
adc
inc
mov
xor
hlt
push
sub
xor
fldt
arpl
xchg
shll
pop
pop
ret
orl
out
xorl
ds
sbb
adc
mov
pop
mov
in
mov
mov
pop
mov
push
jmp
inc
arpl
jp
in
ds
sub
cli
mov
sbb
daa
stc
div
xor
adc
dec
jecxz
popa
in
lea
and
push
or
mov
les
sarl
mov
pop
xor
inc
jmp
xor
leave
jnp
daa
pop
pop
subb
inc
daa
jge
nop
sub
jle
jge
jg
faddl
xchg
and
cmp
ja
xor
loop
popa
add
sbb
ljmp
divb
mov
or
ja
ljmp
pop
shll
fildl
rol
imul
push
push
mov
test
fiaddl
mov
push
mov
ret
and
mov
in
gs
lcall
adc
push
rorb
es
movsl
gs
jmp
seta
in
clc
stos
das
jp
test
popf
inc
int3
imul
ss
add
das
fcom
ds
dec
push
push
mov
dec
push
pop
arpl
ds
mov
cltd
mov
or
fisttpl
push
ror
adc
mov
sub
or
test
push
js
mov
xchg
das
mov
jb
pop
mov
shrb
or
pop
lret
mov
and
xlat
sbbb
push
loop
cmp
xchg
sbb
sbb
mov
mov
sub
in
scas
or
fs
cmpb
outsb
shrl
push
loopne
cmp
ret
in
cltd
aad
push
inc
pop
into
fcoms
pop
outsl
mov
inc
or
testb
dec
adc
push
jo
repnz
mov
adc
aas
mov
lock
jl
add
ret
sub
test
imul
xchg
lods
sbb
xor
xchg
lock
int3
sbb
mov
xlat
mov
sti
iret
sub
in
addb
sub
lcall
fsubl
outsl
mov
fsubl
orl
cmc
call
cs
adc
jns
cltd
adc
mov
or
xchg
idiv
adc
cmp
dec
jg
gs
jae
test
dec
outsb
stos
xor
jne
inc
mov
pop
in
in
iret
lods
or
xor
inc
inc
mov
xor
and
pop
push
dec
sti
mov
xchg
mov
movsb
scas
int3
cmp
xchg
divb
inc
mov
mov
sub
or
xor
mov
xchg
das
xchg
mov
xor
ljmp
dec
push
push
push
mov
movl
cmp
dec
and
adc
lahf
sahf
xchg
cmpsb
lret
pop
cmp
ss
stc
pop
mov
ja
add
xchg
xchg
inc
aaa
and
shl
shrl
out
imulb
push
mov
test
ja
push
pop
mov
insl
test
sub
pop
lock
add
jae
mov
ret
fdiv
pop
into
cmp
das
das
add
mov
sbb
xchg
incl
sbb
mov
stc
inc
divl
imul
adc
outsl
sub
lods
cmpsb
jecxz
jo
mov
std
inc
xchg
repnz
test
add
mov
mov
in
sbb
sbb
clc
cli
and
sahf
addr16
pusha
cs
insl
xchg
shlb
dec
jg
sbb
jmp
cmp
sbb
pop
movsl
xchg
jno
out
lahf
cli
dec
sbb
pop
mov
outsl
mov
lret
in
bnd
nop
in
out
repnz
sub
xor
add
pop
push
lock
mov
sbb
lds
inc
repnz
test
pop
movl
or
pusha
repnz
push
xor
adc
out
adc
and
rcrl
xchg
aaa
out
lods
inc
int3
into
pushf
and
and
jbe
or
scas
daa
cmp
add
adc
pop
mov
in
ss
in
inc
data16
movsb
jp
repnz
jmp
or
stos
mov
adc
loope
push
nop
ljmp
add
mov
mull
push
jge
pop
add
pop
xor
add
inc
inc
jnp
adc
sub
xchg
adc
mov
xchg
sbb
pop
mov
mov
jp
mov
outsb
push
fs
out
dec
inc
js
mov
jecxz
std
jmp
ja
cmpsb
faddl
ljmp
subl
mov
xchg
roll
lock
in
mov
aam
fnsave
lock
mov
icebp
cltd
movsl
cmp
sub
pop
adc
imul
sti
sbb
cmp
lahf
sub
psubq
xchg
add
pop
cmp
adcl
xlat
sahf
and
jo
sbb
sub
add
fdivs
dec
jmp
cmc
mov
push
add
andb
cwtl
add
and
xlat
dec
gs
lods
inc
xchg
sbb
dec
inc
repnz
fidivl
push
push
or
mov
inc
adcl
pop
add
inc
push
imul
mov
cwtl
add
ss
loopne
out
jge
into
test
dec
daa
cmc
cmp
inc
sbbb
xor
sub
mov
xchg
ret
addr16
dec
add
jecxz
xor
sbbl
dec
andb
rcll
cmp
cmp
loope
mov
mov
inc
test
pop
xchg
std
jae
jp
fs
aad
jmp
ror
cmp
sbb
adc
fwait
sub
gs
xchg
pop
cmp
mov
or
lods
and
mov
and
loope
insl
fnsave
lcall
sbb
fstps
mov
es
leave
or
pop
sub
xor
cmp
fimull
mov
mov
dec
pop
mov
mov
xchg
mov
xchg
negb
js
xchg
dec
aam
insl
xchg
sub
cmp
jle
xchg
ficoms
mov
movsb
sbb
insb
and
ss
pop
and
mov
push
sub
ret
lods
aaa
out
mov
pop
cmp
fbstp
xor
pop
icebp
cwtl
pop
mov
mov
mov
push
mov
xor
js
mov
test
inc
mov
lret
test
clc
pop
out
xor
push
and
shrl
dec
clc
shll
pop
mov
ror
data16
xchg
push
pop
sahf
xchg
sub
cmp
xor
test
and
adc
cli
lods
push
jnp
int3
push
sbb
xchg
add
loopne
fiaddl
int
mov
mov
dec
mov
cmp
jno
in
jbe
cmpsb
rolb
xchg
mov
test
or
popa
rorl
fldenv
test
jb
daa
hlt
ljmp
les
xchg
cmp
xchg
fildll
cmpb
int3
jns
scas
andb
pop
cmpsl
js
xor
mov
and
pop
mov
jb
sub
sub
sbb
cli
sbb
jmp
iret
sub
fidivs
scas
sub
fdivp
inc
stos
rorl
repnz
dec
dec
aas
dec
js
orb
movsb
xor
push
sahf
and
and
iret
xor
jg
in
sub
lock
notb
xchg
mov
jne
pusha
mov
xchg
lret
pusha
mov
ret
fidivl
jle
js
push
sub
and
repz
aaa
cmp
outsb
mov
pop
outsl
mov
fidivrs
mov
sub
push
mov
inc
test
pop
fs
test
mov
adc
aam
movb
std
jbe
cmp
outsl
in
clc
add
cmp
iret
inc
fdivrl
lret
loope
mov
cmpsl
xlat
fidivrl
mov
push
fnsave
push
sbb
pop
and
jo
sub
divb
mov
add
js
bnd
fsub
jp
insb
mov
adc
sbb
movsb
lret
adc
jnp
lods
fmuls
adc
std
rcll
sbb
jmp
sbb
js
lcall
cwtl
leave
add
out
fmul
jnp
sbb
adcl
jne
out
pop
in
mov
pushf
nop
push
iret
lret
push
gs
sbb
data16
in
xor
and
cs
add
int3
jmp
mov
sbb
ror
dec
mov
ljmp
jl
loop
stc
add
lock
ljmp
push
je
stos
lods
or
pop
decb
movsb
cmp
fs
and
sar
and
push
push
loope
lods
lret
pop
shlb
jmp
jp
aam
filds
and
and
xor
adc
and
cmpsb
loopne
pop
cmpsb
or
movsb
push
popf
icebp
sti
sub
popa
fimull
mov
ds
adc
adc
xorb
and
lret
sahf
or
add
pop
push
cwtl
cmp
sarb
jno
adc
stos
inc
jo
stos
mov
push
mov
add
dec
sub
pop
rcrl
test
and
mov
out
das
ds
aad
nop
test
pop
push
xchg
data16
or
push
and
xor
push
in
push
jae
pop
and
fsubs
rol
mov
fisttpl
out
and
xchg
push
shrl
sbb
shlb
outsb
aaa
pop
aad
jo
or
mov
sbb
push
fwait
xchg
inc
cmp
popa
or
xchg
insl
pushl
sub
cwtl
sub
cli
or
repnz
mov
inc
xchg
popf
addl
cmp
loopne
in
test
jne
insl
jmp
in
sbb
stc
data16
bound
sbb
jle
in
add
daa
mov
cwtl
adc
int3
scas
test
addr16
dec
jl
mov
push
pop
mov
xor
mov
sahf
inc
icebp
cmp
sbb
mulb
pop
or
shr
and
ret
sub
mov
xor
cmp
shll
pushl
out
les
xchg
jae
jecxz,pt
stc
or
jmp
pop
xor
and
mov
pop
mov
popf
mov
sub
cli
js
push
dec
sub
mov
add
mov
sbb
push
pop
add
adcb
sbb
fcmovbe
pusha
sub
enter
ret
cmp
push
mov
add
aam
cmp
or
xor
sub
fstp
sbb
repnz
pop
push
into
out
fnstsw
pmuludq
js
fnsave
mov
cmpsl
jne
iret
lods
imul
aad
jb
outsb
mov
das
sub
jno
faddl
fidivrl
fadd
addb
sbb
es
sbb
mov
into
push
xchg
jnp
mov
daa
sub
sub
inc
mov
js
ret
in
imul
dec
pop
dec
cmpsl
fadds
out
pop
lods
push
xchg
jns
insl
data16
popa
inc
add
dec
pop
rsqrtps
fistpl
inc
clc
lahf
and
and
xor
fmulp
jmp
push
cmpsl
inc
xchg
sub
out
mov
add
xchg
jge
fwait
lods
jmp
rcrb
push
pop
pop
fidivl
xchg
popa
loope
ja
iret
xchg
sub
test
mov
push
mov
inc
mov
or
out
mov
filds
jb
es
loop
icebp
mov
adc
pop
mov
mov
outsl
cmpsl
ret
pusha
test
mov
push
dec
pop
mov
or
sbb
inc
in
mov
inc
dec
xchg
and
mov
mov
lods
mov
pop
pop
mov
cmp
sbb
mov
loope
fwait
add
xor
and
sti
cmp
mov
mov
or
mov
cmp
aad
and
lret
out
outsb
mov
sub
adc
stos
aad
cwtl
fisubrs
xchg
sub
adc
in
shl
cmp
jge
cltd
or
in
shll
into
pop
cmp
icebp
xor
ljmp
adc
das
and
scas
mov
jg
cmc
sub
mov
push
lret
loop
mov
mov
mov
cmp
repnz
cmpl
hlt
in
fists
xchg
jae
test
fstps
testl
cmp
inc
sub
jne
movntq
mov
mov
or
jp
cmp
das
jg
call
and
jne
pop
mov
xor
les
mov
push
leave
jae
nop
in
or
bound
ret
sub
pop
imul
jl
shrl
mov
push
mov
and
stos
dec
and
mov
pop
out
or
jge
in
sbb
rcrl
jmp
in
add
dec
mov
ret
divb
cwtl
loope
rcrl
push
mov
jo
ja
adc
sahf
in
jne
pusha
shrb
xor
test
jbe
or
add
xchg
add
jb
dec
push
cmpsb
lret
mov
push
rorb
insb
add
das
mov
add
adc
pusha
or
cs
mov
testl
xchg
arpl
sbb
sbb
in
lret
ljmp
sti
mov
push
xchg
inc
dec
pop
push
push
fwait
daa
inc
loope
icebp
adc
shrl
adc
cli
inc
mov
icebp
cltd
push
lods
pop
cmc
or
mov
iret
bound
addb
clc
mov
gs
mov
movsl
xor
mov
xchg
fs
js
cmp
pop
jecxz
lock
mov
outsb
daa
pusha
std
dec
mov
mov
xchg
fsubs
and
xor
or
fs
lcall
subb
and
xor
out
in
inc
adc
xchg
dec
and
cmp
or
inc
xor
cmp
xchg
adc
adc
daa
sbbl
outsb
mov
test
xor
jbe
outsb
pop
mov
insl
mov
stos
frstor
dec
loope
lcall
cs
xor
mov
and
jle
cmp
adc
cs
inc
xchg
fmull
adcl
inc
pop
cmp
ja
dec
push
lock
scas
or
int
imul
adc
popa
dec
jge
jl
scas
fcmovnu
cmp
faddl
adc
pop
aad
xchg
lahf
ds
push
mov
pop
lods
aaa
insb
fnstenv
lock
push
lods
cld
pop
and
and
pop
dec
out
or
jnp
rolb
rcrb
je
or
adc
shll
shrb
shl
mul
jl
sahf
or
mov
das
dec
mov
push
shlb
rorl
sbb
stos
pop
out
in
xor
or
or
jae
cmp
stc
xor
ljmp
mov
cld
adc
cmp
xor
mov
inc
out
or
lret
dec
push
sar
jnp
xor
shl
and
out
dec
daa
add
popa
cwtl
adc
call
rcrl
inc
sti
xor
jno
test
mov
sbb
sbb
xchg
dec
mov
push
xor
inc
fdivr
jne
ret
sub
insb
nop
aam
bound
popf
insb
roll
pop
jnp
movsb
xchg
nop
sbb
sub
dec
and
int
aas
scas
mov
out
stos
sub
andb
loopne
inc
push
arpl
mov
mov
fldt
jecxz
pusha
pop
setns
arpl
sub
aas
negl
imul
inc
xchg
xchg
fwait
jle
mov
mov
nop
jo
fadds
mov
lds
out
dec
shll
subl
push
or
fcmovbe
mov
clc
push
cmp
push
lret
xor
mov
mov
and
into
and
aam
xchg
add
repnz
mov
repz
dec
aas
inc
mov
xchg
pop
in
mov
inc
out
rcll
adc
mov
xor
xor
ret
jmp
das
fsubl
xor
imul
jo
add
pusha
push
sarb
int
push
add
mov
mov
dec
imul
push
pop
aad
add
mov
stos
xchg
cmp
mov
in
inc
lret
xchg
stos
jae
cmp
mov
frstor
xlat
shrl
fldt
enter
sahf
fsubl
add
fidivrs
mov
push
lods
ljmp
sub
ret
outsb
sarl
mov
xor
rcll
and
lods
xlat
push
jbe
pop
inc
lret
xor
pop
out
xor
jo
call
sub
rorl
jp
pop
ret
scas
cmp
adc
pop
jno
adc
imul
jne
lods
mov
imul
dec
fldl
rol
add
repz
dec
dec
shld
mov
sbb
and
popa
aas
mov
fldcw
add
mov
sub
cmpsb
or
clc
loope
leave
add
cmpsl
in
sub
sbbb
push
mov
push
lods
adc
sub
in
lret
jg
idivb
inc
mov
mov
icebp
neg
jmp
sbb
cmpsb
ret
mov
cmc
lahf
mov
xor
test
add
stos
mov
sub
inc
lock
inc
bound
xchg
mov
inc
jb
xorl
fmuls
shl
mov
popf
push
lret
sbb
mov
xor
pop
xchg
cmp
jl
sub
insl
shll
std
mov
ret
pusha
fsubs
push
loopne
mov
or
sub
push
mov
adc
jp
push
push
and
pop
xlat
loope
pop
and
mov
test
jp
pop
rolb
aam
inc
repz
subb
xor
imul
into
or
mov
jno
adc
loope
repz
test
xchg
daa
pushf
sbb
cmpsl
push
mov
fsubrl
jo
sub
sbb
aad
push
js
add
or
js
jo
aad
xchg
push
mov
repz
popa
sbb
ss
cmpsb
pop
ficoml
iret
clc
mov
lahf
pop
arpl
inc
loopne
add
jg
adc
repnz
data16
data16
xor
lret
ror
mov
mov
and
sbb
fsubrs
mov
gs
std
lock
pop
mov
xchg
out
or
and
add
cmp
push
ret
adc
adc
mov
fisubrs
mov
rolb
xchg
cmpb
sti
popf
cltd
int
xor
les
mov
or
sub
in
rcl
insb
jmp
test
xchg
fwait
aas
cmc
xor
dec
push
sub
pop
or
jle
out
movsl
repnz
jns
lcall
daa
pop
mov
mov
fwait
xchg
lods
into
xor
xchg
add
fsubrl
pop
pop
or
jnp
pusha
push
xor
jge
pop
jbe
sub
xor
pop
or
test
fcomi
add
adc
cmp
in
pop
mov
mov
xchg
add
sub
mov
mov
or
movsb
pusha
aaa
cmp
or
push
imull
cmpb
clc
mov
xchg
inc
push
rorl
int3
testl
jbe
push
mov
faddp
or
adcb
jno
addl
test
and
dec
xchg
mov
adc
jbe
xchg
sub
and
push
cmp
cwtl
mov
sarl
dec
popa
pop
dec
adc
mov
pop
adc
push
aam
jmp
fs
mov
xchg
xor
xchg
jno
movq
test
inc
stos
sbb
popf
mov
cmp
lock
lahf
pop
jbe
jne
pop
sub
xor
cltd
jecxz
push
sar
and
sbb
pop
les
std
or
pop
and
jp
and
xchg
push
inc
xlat
scas
movsb
cld
test
arpl
jle
call
sub
mov
repz
sub
xchg
cltd
jmp
mov
fsubs
adc
fcmovnu
mov
mov
pop
xor
pop
jg
xchg
lea
fwait
jg
cmc
inc
pop
test
cmp
and
test
pusha
sbb
leave
cmp
lret
mov
rorl
insb
push
test
mov
sub
lds
ret
xchg
js
fs
jmp
adc
push
xchg
stos
out
or
repnz
repz
lds
sub
dec
xchg
ljmp
repnz
mov
lea
loope
or
lcall
clc
mov
int
sbb
jb
mov
jle
mov
in
pop
fs
and
push
mov
movsl
loopne
add
jle
outsb
les
hlt
fnstsw
sahf
jge
add
ret
sbb
rclb
lret
add
cwtl
mov
movsl
and
imul
bound
sbb
leave
in
mov
inc
jp
cli
adc
repnz
sub
jl
aad
inc
lods
cwtl
inc
or
mov
jmp
cmp
pusha
and
push
repnz
in
movsl
dec
dec
enter
sub
dec
sarb
mov
cld
mov
pop
sbb
in
test
cwtl
daa
aas
int
dec
rorl
fsubs
lods
inc
mov
pop
pop
hlt
out
dec
int3
orb
inc
and
popa
cmp
mov
mov
ja
add
lds
gs
js
push
hlt
mov
add
mov
and
xlat
mov
adc
push
xchg
inc
push
jmp
andb
lcall
mov
inc
ret
int
roll
ds
fdivr
jmp
call
sahf
dec
mov
pop
adc
leave
ficoms
in
mov
in
notb
pop
pop
icebp
fsubrs
mov
pop
jno
in
stos
mov
cmp
pop
movsb
pop
inc
push
push
fbstp
cmp
jae
bound
into
mov
inc
bound
and
pop
loope
mov
cmp
mov
arpl
inc
push
jg
adc
shll
xchg
lret
dec
test
push
pusha
out
or
jne
ret
lock
push
and
mov
roll
lds
mov
movsb
leave
push
dec
stos
cmp
outsb
push
fnstsw
inc
ljmp
inc
fdiv
gs
scas
inc
push
add
xlat
cmc
lea
cwtl
ja
loope
or
fsub
add
pop
inc
push
outsb
lret
mov
mov
jmp
pop
in
incl
dec
sbb
push
pop
daa
in
pop
add
pop
stos
or
add
mov
out
xchg
enter
push
xchg
push
and
mov
fcmovnu
lea
add
fwait
dec
jl
sbb
pushf
lock
pop
adc
jbe
jl
ret
insl
mov
scas
sub
pop
pop
divb
imul
pop
mov
test
sub
inc
mov
ret
push
test
gs
js
fwait
cmpsb
adc
jo
add
dec
sub
jmp
jae
mov
mov
pop
and
or
mov
lcall
xor
ret
call
cmp
and
adc
sbb
dec
fdivrl
out
jle
jnp
sub
jl
shll
jns
pop
xor
adc
sbb
notb
lds
in
and
pop
bound
mov
movsb
lcall
xor
aam
add
or
vmovntdq
push
gs
mulb
in
lcall
mov
and
push
gs
cwtl
shl
xchg
cld
mov
cltd
dec
inc
adc
and
cmpsl
aas
fistl
sub
mov
xchg
popa
pusha
lret
xlat
fsubr
outsb
into
int3
inc
test
scas
cli
popf
xor
adc
test
pop
out
or
xchg
dec
xchg
subb
shl
test
add
add
jae
cmp
rcll
pusha
xor
push
adc
lcall
xchg
in
aas
adc
movsb
inc
and
xlat
xchg
cmpb
movsl
outsl
repnz
std
push
xor
scas
or
push
pushf
iret
xchg
and
movsb
sub
lahf
mov
jp
in
and
mov
sub
mov
notl
daa
movsb
fcomps
rorl
subl
cmp
push
xchg
fsubrl
push
filds
jo
aaa
into
pop
pop
push
mov
jno
xor
cmp
jo
popa
cmp
adc
ja
push
enter
mov
or
or
push
call
xchg
cmp
test
hlt
push
and
add
pop
outsl
or
pusha
pop
cmp
and
enter
mov
enter
mov
push
arpl
cmpsl
lret
jecxz
adc
call
xor
mov
add
imul
or
inc
repz
jge
fcmove
enter
rolb
aad
mov
mov
push
or
cli
in
xchg
mov
iret
cmp
jo
aas
inc
jns
mov
lds
jb
mov
imul
test
pop
sub
mov
loopne
sbb
mov
arpl
inc
push
mov
xor
pushl
int3
dec
sahf
mov
sbb
adc
loope
cmp
push
in
add
and
arpl
push
push
ss
fmull
jno
inc
mov
aaa
and
in
pop
fidivrl
pop
stos
pop
adc
jle
adc
lds
lods
das
fwait
mov
jnp
xchg
mov
test
lret
jae
aas
ss
les
in
jp
mov
and
pushf
lahf
roll
shlb
iret
push
jne
frstor
push
ret
sub
dec
inc
ret
mov
jo
repz
xor
ljmp
cmpsl
jmp
adc
je
sub
jle
outsl
clc
jne
loop
aaa
leave
insb
pop
sarb
iret
jp
imul
dec
sahf
mov
dec
sbb
das
mov
test
add
sub
dec
aam
cwtl
orl
lea
and
faddl
push
sbb
sub
das
ds
xchg
mov
test
out
rorl
jg
mov
imul
lret
xchg
add
mov
fisttpl
dec
push
pop
push
adc
sub
xlat
jg
mov
xor
pop
movsl
pop
rolb
pop
xchg
dec
lahf
pop
aad
addr16
in
mov
dec
fcoms
pop
bound
mov
cmc
push
outsl
mov
ret
xlat
scas
mov
into
test
aad
dec
pop
mov
arpl
test
les
js
ds
subb
dec
dec
clc
mov
inc
rcrb
stos
mov
adcl
xchg
or
push
pop
iret
sbb
pop
test
out
clc
sti
mov
sahf
daa
je
add
aam
or
pop
lcall
pusha
mov
push
and
les
std
and
bound
lcall
sbb
push
out
stos
addr16
popf
out
adc
add
or
rorb
jb
bound
roll
sbb
fs
cmp
int
test
aad
daa
sub
dec
adc
and
pusha
lods
pusha
jp
xchg
adc
jne
loop
or
sub
stos
notl
int3
cli
lock
cmp
push
jb
inc
sti
mov
enter
mov
sub
cmpsl
sub
and
inc
mov
and
push
jns
mov
mov
scas
into
pushf
mov
in
mov
jo
push
lret
sub
fcmovnu
cmp
mov
jo
inc
repnz
iret
into
cld
xchg
cmc
cmpsl
adc
sub
xor
inc
cmp
cmpsb
fistl
mov
daa
stc
fidivs
cld
ljmp
jnp
cmp
mov
mov
ds
xor
fs
mov
nop
sbb
movsl
stc
and
rcrb
adc
iret
or
dec
outsb
popa
pop
cwtl
je,pn
in
adc
sbb
fstpl
es
loopne
mov
xchg
xchg
insb
fnstcw
iret
ret
xor
jg
mov
outsb
outsl
nop
mov
pop
inc
std
mov
xor
outsl
psubd
mov
lret
mov
mov
pusha
inc
push
lods
lahf
mov
aaa
fistpll
movsb
sub
aam
fsubp
mov
add
jae
or
mov
test
pop
cmp
test
cmpsb
fisubl
jp
movzwl
mov
ret
jp
rcr
hlt
int3
out
out
dec
add
adcl
nop
cmp
add
lahf
fsub
pushf
aad
in
cld
dec
stc
pop
push
aas
mov
das
push
mov
fs
pop
and
jecxz
shlb
mov
mov
insb
out
nop
fildl
mov
pop
dec
jge
pop
xor
popa
mov
pushf
pop
mov
rcrb
lahf
jge
test
mov
inc
inc
jmp
fcmove
cmp
inc
pushf
jne
lock
adc
das
fwait
or
fldenv
insl
xor
xchg
repnz
cmp
rolb
js
xchg
inc
cld
push
stc
mov
in
or
stos
gs
int3
clc
push
repnz
out
rcrl
push
sbb
dec
mov
sbb
in
mov
call
mov
ret
out
jno
lock
dec
lock
cmp
inc
cmpsb
movzwl
iret
arpl
inc
icebp
and
push
adc
mov
push
dec
and
cmc
push
cs
jns
mov
cmp
cmp
fucomp
imul
les
xorl
adc
sub
test
test
mov
jno
or
adc
sahf
das
xor
cmpsl
push
mov
xchg
out
sbb
mov
jno
popa
add
loop
ss
inc
add
leave
mov
cmpsb
pop
lret
cmpsb
add
sarb
jmp
leave
push
dec
mov
inc
das
and
call
js
in
push
loope
mov
scas
scas
cmp
shlb
pop
popf
cmp
xchg
es
loope
cltd
les
iret
sti
dec
aad
push
add
rolb
push
cmp
mov
add
adc
jmp
or
int3
adcb
and
adc
xchg
hlt
sahf
pop
sbb
sub
aaa
rclb
mov
jl
lock
test
daa
adc
js
hlt
ror
mov
jbe
mov
xor
mov
or
out
cmp
fcompp
repnz
imul
xor
aaa
orb
or
fcom
mov
cli
cltd
rorl
pusha
sbb
mov
mov
sub
loope
shr
jle
ficoms
mov
xor
lea
fdivl
xchg
sbb
or
jmp
dec
or
jb
pop
jno
cmp
ret
pop
int
or
xor
or
xorb
cltd
mov
mov
loope
mov
jnp
icebp
cmp
ret
push
cmp
ret
push
cmp
stc
stc
pop
nop
jns
xor
hlt
imulb
aam
sub
in
out
and
out
sbb
fsubrl
sbb
scas
and
lock
icebp
test
mov
xchg
or
ds
fcomps
scas
es
xchg
roll
cmpsl
aaa
aam
sbb
adc
push
mov
xchg
push
imul
es
fisubrl
dec
cmc
add
dec
or
pushf
stos
out
or
inc
sbb
or
idivl
push
loope
mov
dec
sub
sbb
pop
outsb
daa
adc
loope
fcoml
js
mov
test
sahf
nop
clc
inc
je
xchg
mov
stos
testl
frstor
stos
loop
jmp
lret
push
inc
out
mov
popa
test
mov
mov
int
faddp
lods
out
xor
xor
nop
in
adc
add
push
jae
mov
imul
inc
or
fisubrl
arpl
xchg
mov
sub
ret
movsl
shll
adc
mov
adc
in
dec
xchg
clc
jae
push
insb
lahf
xor
sub
sub
dec
add
sub
hlt
cs
xchg
fadds
dec
push
incl
mov
in
repnz
xchg
leave
pop
mov
out
push
addb
fisubl
jl
inc
outsb
inc
in
inc
push
int3
les
out
xchg
pop
je
mov
jae
rcrl
mull
jle
sarb
mov
push
mov
sub
xchg
stc
mov
fsubr
mov
and
lret
pop
jge
in
push
cmpsb
insl
shrb
repnz
jle
sub
cmp
cmpb
scas
fdivrs
mov
insb
push
sub
jecxz
ja
xchg
popa
dec
and
pop
lods
xchg
stos
pop
ss
dec
mov
std
ret
arpl
shlb
fisttpl
cmp
add
fsin
dec
sbb
sbb
js
mov
sub
clc
mov
jp
sub
or
xchg
cmp
pop
aaa
push
pop
es
sub
and
xor
loope
sub
pop
out
mov
scas
pop
pop
jb
pop
icebp
add
sbb
jb
fldcw
lods
pop
lock
cltd
add
xchg
addl
insl
pop
sbb
test
lods
jae
sbb
sti
xchg
hlt
inc
call
and
or
inc
stc
dec
cmp
push
jp
cmp
shlb
out
ss
jae
push
xor
push
mov
sbb
inc
xor
mov
outsl
nop
mov
jb
push
mov
insl
cmc
mov
test
sbb
call
sti
sub
test
or
aas
mov
inc
pop
dec
clc
mov
and
repz
imul
mov
xchg
inc
fisubl
es
inc
mov
sahf
cmpsl
and
jge
cmp
aad
pop
adc
ds
push
mov
push
push
data16
xchg
add
mov
sbb
push
mov
sbb
xor
xor
clc
mov
ds
cmc
out
push
mov
push
cmpl
sub
daa
adc
fimull
push
out
dec
and
mov
test
push
lea
sub
add
jb
or
in
and
sahf
les
inc
repz
insl
ret
cmp
outsl
cmpsw
bound
inc
dec
add
shr
mov
in
pop
mov
fsubp
cmc
into
xchg
jnp
jecxz
ror
push
push
test
jns
popa
add
sarb
ds
mov
fwait
and
pop
xor
fcmovne
adc
push
adc
loop
xchg
mov
pushf
cmc
add
movb
call
xlat
pop
sub
insl
sub
and
addr16
jecxz
aad
mov
cmc
cld
cmp
lahf
es
adc
outsl
fsubr
sbb
lock
sbb
test
and
shlb
sbb
in
push
sub
dec
stos
int
mov
fldln2
jb
stos
sahf
fiadds
faddl
lret
add
xorl
scas
ds
xor
mov
inc
add
inc
lcall
push
jnp
in
mov
xchg
cs
jns
jecxz
xor
xchg
ljmp
cwtl
movsl
mov
into
test
nop
push
mov
dec
push
adc
inc
imul
mov
inc
push
push
and
jmp
fcmovu
ljmp
push
push
mov
outsl
and
adc
adc
xchg
imul
mov
push
pop
xchg
dec
sub
pop
and
or
lods
imul
shlb
stos
repz
ret
sub
mov
xchg
cli
pop
and
mov
sub
push
scas
rorb
into
imul
mov
ljmp
or
sbbb
adc
shrb
xchg
call
bound
lret
mov
aas
repnz
sub
xor
xor
or
insl
xor
psrlw
adc
nop
movsb
push
mov
jbe
out
push
dec
fsub
popf
and
dec
fs
ds
sub
pop
sarl
adcb
mov
adc
pop
add
lods
fnstcw
clc
dec
mov
mov
lods
xchg
mov
imul
pop
adc
xor
rcl
push
cmc
out
mov
push
popa
insl
stc
cwtl
aam
pop
cmp
in
push
ret
mov
lahf
ljmp
pop
lret
sub
mov
cmc
push
inc
pusha
xor
mov
adc
add
dec
and
aam
sbbb
lea
xchg
ret
push
xchg
mov
sbb
lret
push
mov
ret
jnp
sub
cmpb
dec
xchg
cltd
inc
pop
je
lahf
scas
mov
jl
outsb
aas
lods
mov
iret
jae
aam
in
rorb
cmpsl
sbb
adc
xor
lcall
popa
stos
ds
outsw
icebp
lock
inc
cmpsl
sbb
and
inc
push
xchg
iret
shrl
mov
ret
stos
sub
push
mov
out
xchg
fucom
imul
lahf
cmpsb
sub
adc
mov
icebp
idivl
mov
add
mov
loope
xor
lret
jg
mov
gs
mov
dec
in
xchg
xchg
jae
jp
aaa
push
pop
dec
daa
popa
cmpsl
ficoms
adc
stos
rcl
cmp
mov
push
into
mov
dec
mov
adc
loopne
mov
dec
add
orl
lock
push
fwait
fs
push
popf
sbb
pop
test
push
xchg
aas
push
and
sbb
cwtl
movsb
movsb
pop
pusha
fistl
or
test
xor
mov
lds
outsl
sbb
mov
mov
push
pop
jo
lret
jae
cld
push
push
jp
jae
ss
jp
les
sub
cmp
testb
daa
ljmp
shll
jp
repz
mov
in
jp
sbb
orb
xchg
das
mov
aad
out
fimull
arpl
mov
rcr
stc
arpl
inc
or
adc
lcall
cmp
mov
sbb
mov
rcll
sub
dec
inc
inc
adc
es
daa
sub
call
fwait
inc
sbb
add
out
jg
pop
lcall
cmp
mov
sub
pop
repz
and
pop
out
xchg
int
lds
gs
insb
test
push
adc
in
sbbb
adc
add
push
imul
dec
lods
jne
xor
loopne
jmp
dec
sub
mov
inc
dec
adc
imul
and
cmp
jb
in
fidivs
mov
sbb
push
jns
std
int
lods
out
notb
add
sbb
lods
lds
push
xor
add
outsl
push
fcmove
mov
push
or
mov
sbb
or
pop
xchg
xor
cmp
and
pusha
jecxz
imul
dec
sub
inc
pop
mov
inc
fs
xor
call
jbe
pop
repnz
push
pushf
rorl
jle
aam
mov
jl
jbe
push
pop
nop
loope
test
enter
lahf
insb
loop
dec
or
mov
dec
clc
loope
mov
jmp
rcrb
add
pushf
xchg
sarl
scas
cmp
hlt
fisttpl
push
sbb
push
xchg
inc
pop
mov
clc
jmp
xorl
jp
test
or
inc
stc
cmpsl
cmp
jae
js
mov
mov
shrl
repz
scas
xor
jge
add
cmpsl
scas
cmpsl
fisubs
xchg
dec
xor
push
xchg
mov
flds
mov
mov
add
pop
mov
xor
loop
sbb
and
xchg
pop
mov
fsubl
enter
sub
ja
or
push
outsb
jae
xchg
add
pop
lock
mov
xor
xchg
imul
in
mov
popa
mov
cmp
movsb
rcll
dec
int
jns
cmp
rcrl
mov
xchg
xchg
lret
adc
lods
cmc
pop
aam
push
push
mov
lods
lods
in
stos
dec
mov
cmp
lock
mov
jb
inc
mov
sbbb
adc
sahf
dec
mov
aam
test
push
fisubl
or
jmp
stos
mov
fdivrl
mov
in
mulb
lea
mov
push
adc
inc
cmp
pop
lea
mov
rorb
jmp
js
cmpsb
nop
jmp
sbb
out
add
sbb
popf
or
fld1
sarb
mov
sbb
stos
cli
subb
mov
mov
mov
mov
lods
je
out
adc
or
jo
push
jns
hlt
sub
dec
add
push
sub
inc
mov
int
fldcw
inc
lods
int
pop
lret
xor
ja
in
and
sarb
lcall
movsb
pop
shrl
sahf
cs
into
mov
iret
daa
inc
and
shrl
in
and
lods
pop
or
addb
xchg
loope
pop
xchg
lods
cmp
repnz
sub
dec
push
sbbb
fmuls
pop
in
enter
xchg
cmp
testb
and
sub
dec
fs
cmp
lods
stos
movsb
pusha
pop
fisubrs
jno
fildll
lea
mov
inc
stc
or
dec
std
outsl
mov
jae
fwait
insb
add
mov
mov
mov
mov
mov
adc
mov
out
xchg
mov
addl
pop
mov
dec
movsl
lret
xchg
mov
fs
mov
cmp
mov
call
pop
or
cmpsl
popf
test
test
mov
or
lds
psadbw
push
sahf
int3
add
call
mov
out
hlt
inc
mov
xchg
dec
dec
add
dec
pop
je
aad
jle
iret
mov
pusha
cmp
pop
or
jl
shrl
jle
jmp
jge
inc
aas
cld
sub
xchg
sub
push
in
jb,pn
jbe
mov
add
inc
push
lock
push
jmp
push
out
test
std
clc
aam
arpl
pop
hlt
fmuls
fmull
es
and
out
push
je
sbbb
mov
pushf
rolb
inc
lret
leave
movsb
adc
xchg
dec
mov
sbb
xchg
inc
xlat
loop
dec
shrl
inc
cmpb
cwtl
add
hlt
dec
cmpl
dec
stos
jb
inc
negl
lahf
jg,pn
aaa
or
push
imul
push
pop
xor
add
or
push
sbb
pop
pop
jb
xor
jb
push
insl
pop
pop
loopne
jl
cmp
mov
jle
call
call
movsb
cmp
repnz
aad
scas
or
xlat
pushw
cmp
movsl
lods
fs
mov
cld
and
cmp
sub
lock
mov
scas
icebp
adc
insl
mov
arpl
stc
lcall
rolb
fisttps
jle
cmp
js
pop
jmp
icebp
stc
leave
xchg
or
xchg
add
test
ds
aaa
aas
and
icebp
data16
jge
cld
jo
jle
push
push
mov
mov
xor
bound
sbbb
ss
jmp
je
or
js
fsts
jge
push
jae
out
add
loope
xchg
adc
in
mov
imul
adc
ret
icebp
les
xor
leave
andb
test
cli
testb
or
ljmp
mov
xchg
push
mov
test
fnstenv
movb
xchg
ljmp
lds
adc
addr16
and
jp
aam
int
lock
adcl
jne
movq
lret
cmc
test
inc
aas
xchg
mov
std
xor
dec
sub
in
cmp
sbb
in
mov
fsubr
pop
shrb
or
fs
mov
mov
sbb
scas
loope
lea
dec
ficoms
or
test
push
out
stc
int3
or
push
xchg
lods
out
fisubs
pop
scas
add
aaa
mov
dec
mov
sbb
mov
std
mov
lret
iret
shll
inc
clc
jmp
call
std
frstor
cmp
stos
mov
outsl
es
int3
stc
jbe
and
and
das
push
adc
jecxz
aad
lock
inc
and
xacquire
mov
packsswb
lock
cld
lds
inc
inc
adc
je
pop
stos
dec
fisubs
push
call
mov
push
push
inc
cmp
lret
adc
cmc
mov
outsl
orb
rcl
mov
dec
mov
add
popa
lcall
stc
test
dec
push
lahf
dec
stos
inc
leave
jl
inc
xchg
pop
call
mov
lea
cmp
or
pusha
mov
enter
mov
inc
jmp
fcomps
popa
push
sahf
rcll
mov
daa
fstl
mov
mov
out
adc
mov
mov
cmp
arpl
xchg
xchg
xchg
stos
ss
bound
lahf
jmp
fldl
aad
ret
adc
aam
test
cmp
mov
fcomps
pop
insl
push
popa
inc
add
aas
sub
push
mov
mov
pusha
push
cmp
xchg
cmp
and
hlt
jle
aad
test
adc
ret
incb
das
add
test
pop
div
ret
mov
decb
cs
repz
xchg
adc
rcrl
repnz
hlt
add
sbb
fmull
jge
insb
movsb
or
push
push
add
cmp
add
xor
scas
fwait
mov
addr16
dec
int3
mov
xor
mov
lods
pavgb
enter
mov
imul
add
jno
jnp
xchg
insb
fwait
push
out
es
sbbb
inc
pop
cmp
dec
fmul
lock
popf
bound
iret
cmp
xchg
lea
and
and
cmp
pop
jp
fistps
roll
cli
cmp
add
out
and
inc
shll
cld
daa
movsl
test
xchg
hlt
adc
inc
pop
xchg
pop
mov
fs
inc
sub
mov
in
add
outsb
popa
ja
orl
xor
or
aam
add
jnp
std
or
int
scas
lock
push
cli
fnstcw
mov
pop
lds
sub
push
jno
pop
pop
pop
jns
fwait
insb
jmp
shr
inc
xchg
xchg
cs
std
lahf
out
jmp
inc
inc
imul
mov
cld
jnp
imul
mov
fcmovnbe
mov
cwtl
mov
pop
lods
jb
lret
sbb
iret
inc
pop
and
dec
inc
outsl
out
xorb
xor
cmp
into
push
and
pop
inc
pop
push
jno
push
mov
je
inc
xor
inc
rcrb
xor
ret
mulb
sti
sbb
adc
lods
int3
mov
fs
and
mov
arpl
andb
jae
repz
push
push
sahf
les
rolb
mov
loopne
inc
stos
ret
mov
adc
cwtl
dec
lods
jmp
mov
and
mov
fwait
sbbl
mov
insb
pop
or
loopne
mov
shll
fiaddl
inc
and
xchg
aad
out
loopne
jle
pop
je
xchg
cmp
add
int3
dec
jne
mov
push
ljmp
push
iret
mov
insb
xor
sub
cmp
cltd
push
or
test
pop
rcll
pop
sti
iret
sbb
sbb
lcall
dec
test
addr16
cmp
pushl
mov
scas
int
fisttpl
stc
xchg
outsb
fsub
lds
outsl
imul
push
sti
loopne
or
stc
outsl
mov
leave
pusha
imul
push
int
sbb
clc
outsb
mov
dec
adc
sbb
mov
test
xchg
sbb
mov
pop
gs
inc
sbb
shrl
xchg
int
and
mov
push
xor
movsb
and
in
lahf
sbb
push
mov
int
pop
shrb
test
in
xchg
roll
scas
pop
mov
clc
es
jmp
adc
pop
stos
mov
pop
or
mov
mov
vpmulhuw
xchg
in
mov
lods
popa
mov
sbb
in
xor
sbb
std
cmc
push
out
cmp
add
jmp
out
sub
xor
push
sahf
cmpsl
add
sbb
xor
insb
sbb
fnstcw
xor
add
mov
fistpl
fsubl
and
gs
jae
cmc
adc
inc
fwait
jnp
addr16
cmp
rcr
stos
lahf
testl
push
sbb
loope
lret
loopne
push
imul
jae
jo
push
leave
test
test
mov
in
cwtl
sbb
test
lods
inc
inc
cld
inc
push
pop
or
dec
jp
fisttps
add
scas
shlb
stc
push
push
mov
push
shl
adc
xor
in
loopne
scas
inc
outsb
sub
dec
lea
sub
mov
lods
adc
dec
andb
dec
pop
lods
jnp
jge
xor
mov
add
arpl
xchg
mov
out
test
fisttpll
repnz
mov
cmp
pop
int3
icebp
repnz
or
cmp
adc
movsb
inc
mov
cmp
out
add
dec
xchg
mov
movsb
rorb
pop
push
dec
lret
sbb
or
adc
repnz
fwait
cli
mov
fbstp
sbb
ja
repz
xor
fldcw
xor
test
jecxz
out
push
mov
inc
or
or
or
pop
loop
ds
andb
pop
fs
pop
inc
fldt
adc
cmp
fsub
pop
out
xchg
mov
jmp
pop
shlb
mov
dec
mov
xchg
addr16
ror
and
or
lcall
pop
jl
out
adc
sub
pop
andb
mov
jmp
jnp
mov
in
insb
in
pop
movsb
xchg
sub
xchg
jl
aas
pop
ljmp
mov
int
arpl
pop
add
mov
icebp
and
and
inc
push
push
mov
sti
in
add
push
movsb
movsl
lods
out
subl
insl
mov
movsb
cmpsl
add
ja
sbb
mov
sbb
mov
stc
xchg
pop
dec
ss
cwtl
push
insl
inc
fistps
out
push
mov
mov
loop
xchg
ss
pop
movl
sti
call
into
fstl
push
pop
int3
test
mov
lea
lods
fsubs
cltd
test
fsubrs
mov
fs
cli
xor
jecxz
cmp
xor
and
ljmp
inc
xlat
sar
sub
dec
dec
aaa
dec
addb
sub
pushl
xchg
xor
xchg
rorb
nop
lret
mov
pop
cmp
sub
jae
orb
outsl
and
rclb
lods
cwtl
pusha
mov
xor
inc
enter
loop
scas
adc
mov
test
pop
inc
mov
sbb
fisttpll
push
mov
fsubrl
mov
addr16
mov
and
mov
movsl
inc
cmpsl
sub
push
pop
out
outsl
adc
les
and
pop
dec
stc
pop
call
inc
mov
ret
push
mov
es
xchg
rcrl
popf
adc
rcrb
sbb
mov
mov
cmp
ldmxcsr
sub
xchg
clc
sbb
test
mov
aam
mov
dec
cmpsb
sbb
ja
xor
push
lea
in
adc
mov
int
in
insl
popa
xchg
sbb
nop
int
fs
adc
outsl
jne
ret
insb
sub
push
xor
insb
fldt
adc
mov
mov
into
push
pop
lcall
test
shlb
gs
scas
ret
xchg
aas
mov
mov
es
fidivrs
mov
out
ret
push
mov
fmuls
sub
lret
inc
or
jnp
rep
int
inc
sti
fdivs
cli
cmp
dec
addr16
mov
inc
xor
rcrl
xchg
sbb
xchg
lret
pop
ja
loope
jne
jmp
jae
push
fcoml
adc
mov
push
repnz
add
and
push
mov
sub
add
mov
sub
inc
sbb
movsb
fwait
add
cmpsb
inc
ds
xchg
loop
sbb
jge
jbe
lret
xlat
test
mov
unpcklps
iret
imul
adc
jmp
push
push
mov
mov
aam
out
push
or
xor
mov
xchg
in
gs
out
fsubrs
movsb
mov
aad
ret
mov
clc
jo
add
xor
dec
mov
mov
mov
ljmp
test
in
push
aas
add
mov
pop
mov
test
and
fabs
xor
jmp
sbb
stc
add
dec
ss
or
mov
cmp
in
loop
outsl
sub
xor
ret
or
call
pushf
cmc
jbe
pop
loope
decl
push
outsl
mov
rcrb
or
jp
iret
pushf
test
outsl
pushf
loope
add
jmp
lcall
adc
mov
mov
sbb
bound
ret
repz
arpl
dec
mov
and
adc
pop
mov
push
imul
test
cli
mov
pop
push
repz
filds
sub
fistl
add
sub
loope
std
inc
jne
push
inc
mov
mov
push
dec
sarb
mov
std
in
add
inc
add
mov
scas
inc
jo
loope
adc
shrl
cmp
outsl
stos
lret
jle
push
imul
dec
jmp
jl
jge
jno
hlt
data16
adc
xchg
dec
jae
pop
daa
mov
fwait
pushf
inc
leave
insl
cmp
push
ffree
lods
dec
mov
jae
hlt
ds
jne
in
test
add
enter
pop
cwtl
mov
lods
and
mov
pop
std
add
xlat
ret
test
aas
int3
stos
sbb
push
push
loope
sbb
mov
into
jle
ljmp
sbb
lret
or
mov
add
xchg
xchg
pop
aad
scas
or
inc
bound
dec
push
mov
mov
and
jmp
lea
js
and
js
xchg
and
pop
outsb
adc
mov
mov
dec
shll
repnz
xchg
lcall
dec
mov
dec
mov
cmp
mov
fmuls
sbb
dec
outsl
jnp
or
cmpsb
notl
repz
cmpb
lcall
popf
std
push
push
xor
ds
mov
daa
xchg
in
shrd
sbb
pop
lret
mov
xchg
dec
stc
rcl
ljmp
push
enter
push
in
std
insb
std
jns
jb
jne
inc
sbb
xor
dec
das
addl
push
xlat
pop
jb
test
mov
push
adc
lock
rorb
enter
lret
jle
out
popf
test
fnsave
jo
dec
test
ljmp
scas
pusha
incl
loope
cmp
lahf
insl
hlt
jecxz
jge
cli
testb
lret
iret
dec
inc
cmp
inc
push
add
add
cmp
jns
jb
cwtl
aas
mov
pop
mov
inc
mov
into
stc
in
mov
xchg
cmp
inc
out
das
imul
jge
push
icebp
inc
sub
adc
mov
scas
scas
jns
outsl
nop
push
add
inc
cmp
test
mov
ljmp
psrlw
sub
and
cmc
imul
jecxz
leave
movsb
lret
mov
pop
jle
xchg
dec
mov
add
loope
inc
adc
mov
mov
cmpl
pusha
push
xlat
xchg
cmp
dec
ds
mov
mov
sbb
outsl
xor
xlat
test
outsl
and
push
dec
mov
jno
fld
ror
fdivs
clc
mulb
cmp
cli
push
inc
sbb
adc
push
xor
lds
aas
cmc
out
test
leave
incb
xchg
mov
shlb
das
xchg
sbb
xchg
jnp
lahf
aad
call
hlt
inc
ret
and
je
insl
ficoml
andb
pop
cmpsl
shll
mov
cmp
std
mov
mov
ret
cli
stos
cmpsb
cmp
lods
add
fsubrl
aas
cmpsb
imul
add
dec
lret
pop
pop
cmp
sub
in
mov
aas
lcall
call
inc
fsqrt
mov
jb
dec
inc
dec
cmp
adc
mov
pop
cmovs
dec
rcl
jne
sub
mov
jo
test
mov
pushf
pop
push
out
dec
es
daa
rclw
mov
jmp
cwtl
insb
pop
add
aaa
jle
popf
jno
pushl
inc
popa
or
push
dec
loop
fsubs
mov
and
lcall
jmp
lods
adc
repnz
aas
negb
and
lret
jmp
adc
add
pminsw
inc
negl
adc
decl
mov
sar
pop
push
into
pop
ja
sahf
jae
or
sub
lea
add
es
sub
lret
filds
mov
aaa
mov
ss
adcl
loope,pn
push
and
lret
and
aam
ss
jg
out
call
arpl
mov
adc
cmp
testl
fs
icebp
or
xchg
ret
add
inc
mov
jns
out
push
movsb
icebp
cmc
in
xor
push
or
jle
push
dec
cwtl
push
mov
mov
es
jg
mov
or
push
adc
adc
mov
lahf
sub
daa
adc
sti
call
out
sti
pushl
enter
enter
lahf
pop
pop
sbb
inc
dec
jmp
inc
incw
fildll
cmc
cmp
adc
or
aam
push
lcall
mov
outsb
cs
inc
arpl
addr16
sub
push
outsl
xchg
mov
outsl
add
dec
out
xorb
cmp
jo
jp
push
shl
mov
pushf
cmp
sahf
lahf
lcall
inc
or
cmpsl
jl
inc
sbbl
mov
lods
cltd
fmull
pop
pop
sqrtps
les
add
fsubs
sub
dec
es
pushf
ja
jo
popa
xor
xchg
inc
jo
fimuls
mov
inc
jb
lds
leave
fidivs
jnp
stos
cltd
jno
mov
mov
shll
and
dec
pushf
mov
fcmovb
xchg
addr16
cmp
lock
insb
hlt
dec
xchg
adc
mov
mov
sbb
arpl
jecxz
lea
sbb
popa
lahf
xorl
pop
and
or
xchg
fcoms
shl
and
and
imul
test
adc
jne
sarb
ffreep
jl
enter
movsb
lds
pushw
pop
cmpsb
and
push
sub
enter
mov
nop
add
xor
dec
dec
mov
into
pop
or
icebp
sti
xor
out
movsb
ss
testl
call
mov
push
je
jo
adc
push
and
ljmp
mov
ljmp
sub
lret
sub
in
mov
sbb
ror
xchg
stos
mov
or
ss
je
adc
fisubs
dec
sub
sbb
icebp
dec
in
pushf
cmp
adc
popf
sbb
js
ja
test
les
pop
or
xorb
negl
mov
xchg
fsin
jae
sbb
fidivs
mov
mov
pop
rorb
inc
rcrb
into
pop
cmp
notl
jns
push
adc
jne
imul
add
xor
sbb
pop
rcl
xor
adc
adc
repz
adc
push
test
les
shlb
push
add
clc
repz
fnsave
out
push
pop
inc
orb
sub
pop
push
in
arpl
xor
je
cmp
inc
jmp
mov
sbb
jns
addr16
or
jno
sbb
shll
pop
int
jge
sub
sbb
faddl
sub
mov
jnp,pt
aaa
xchg
adc
aad
daa
xor
scas
fisttps
jp
stos
fldl2e
mov
and
mov
sbb
jne
jl
xchg
pop
fcoms
inc
cli
mov
loopne
lods
fistpll
jecxz
mov
xor
cmc
jo
inc
repnz
sbb
cmp
sub
addl
das
xor
in
pop
pop
xor
mov
imul
lods
in
aam
insl
fsubrl
dec
loope
fistpl
sbb
xchg
ret
sub
sahf
or
adc
rcr
mov
xor
jbe
outsb
add
jae
scas
mov
lcall
xor
test
or
push
mov
add
pushf
cmp
mov
cli
xor
out
lods
icebp
leave
mov
arpl
rorl
pop
cmp
mov
rclb
sub
dec
cmpl
push
mov
xchg
mov
sub
xor
mov
in
inc
adc
mov
mov
inc
popf
clc
pusha
scas
sub
adc
xchg
lock
jne
inc
cmp
out
push
das
sbb
inc
dec
or
jb
push
mov
loopne
aam
sbb
mov
jmp
inc
mov
dec
xchg
cwtl
les
enter
mov
inc
sbb
adc
xchg
cmp
test
push
stos
aas
or
out
stc
sbb
sbb
inc
push
sub
popf
fdivrl
in
lods
int
and
push
scas
lret
xlat
jmp
mov
sti
and
fiaddl
cmp
adc
out
nop
mov
out
mov
cld
je
xchg
cmp
adc
in
sti
cs
pop
stos
add
rep
cld
jp
mov
test
mov
aad
sbb
fs
mov
leave
inc
mov
xlat
cli
inc
leave
repz
shrb
jle
fisttpll
sbb
nop
cmp
rcr
jge
aaa
mov
xor
popa
pop
fdivrl
cli
subl
imul
sbb
mov
pop
and
insl
sub
dec
mov
xchg
fisttpll
cmp
mov
das
inc
les
sub
cvttps2pi
outsb
cmp
sub
mov
stc
clc
packssdw
or
jmp
xor
int
fwait
jmp
iret
daa
inc
pop
arpl
mov
inc
outsb
stos
adc
js
and
jl
jno
mov
xchg
out
notl
ja
pusha
lcall
int3
leave
aaa
mov
fists
aam
clc
add
sbb
inc
and
js
jg
add
mov
push
pop
jg
mov
xchg
loope
pop
daa
fucom
xchg
imul
mulb
push
inc
lahf
lret
out
popf
sbb
repz
and
pop
mov
jno
subl
adc
icebp
sbb
lcall
mov
shlb
jae
in
loopne
add
push
test
aaa
outsl
stos
std
mov
cmp
cwtl
jmp
adc
sub
je
cltd
leave
inc
fsubrl
rcrb
rolb
test
xchg
dec
cmp
pushf
aad
adc
aaa
popa
inc
out
jle
push
inc
rcr
iret
insl
add
popf
adc
bound
stos
push
js
pushf
xchg
jg
sub
neg
adc
inc
cmp
movsb
pop
jmp
or
repz
mov
add
iretw
cmp
and
xchg
leave
sub
dec
jecxz
into
cli
add
inc
shll
mov
adc
fisubrs
repz
in
push
subb
mov
mov
sbb
mov
stc
test
bound
jne
add
mov
insl
sbb
fidivrs
xor
mov
dec
push
ret
scas
or
mov
cmpsl
or
xor
jbe
sub
out
sbb
push
jl
ret
sbb
cmpl
icebp
inc
arpl
or
sbb
fldenv
xchg
xchg
fadd
jne
out
add
in
cmp
jbe
xchg
enter
lods
out
dec
sub
aam
inc
cmc
xchg
cmp
push
sbb
inc
out
mov
popa
imul
and
xor
movsb
data16
out
sbb
cmp
push
sbb
scas
pop
gs
test
mov
xchg
or
sbb
and
popa
loope
mov
out
imul
fimuls
mov
nop
or
lock
sbb
or
xor
ds
dec
movsl
pop
cmpsb
mov
inc
pop
sbb
loope
cmp
pop
push
cmc
xor
xor
pop
fmuls
fsubrl
mov
cltd
mov
rcr
xor
xlat
or
out
cld
mov
dec
jmp
into
xor
repnz
popl
js
adc
jbe
jae
cmp
clc
icebp
add
jl
out
shlb
mov
xchg
fld
repnz
mov
cmp
inc
jl
es
lods
pop
inc
push
loope
mov
ja
sub
fcompl
xlat
lock
xchg
fsubr
push
jg
xchg
cmp
inc
outsb
test
imulb
sub
lret
pop
xor
sub
and
rorb
cld
inc
mov
mov
cwtl
sbb
adcl
adc
mov
lods
std
and
push
bound
push
mov
push
dec
cmp
lar
call
inc
inc
and
mov
lahf
arpl
pop
mov
bound
sub
mov
xor
imul
cmpsb
out
cmp
inc
push
mov
dec
sub
mov
outsl
popf
ja
xor
jp
and
out
cwtl
push
mov
mov
lea
jmp
lcall
ret
decb
cltd
pop
push
lds
outsb
mov
jo
dec
sbb
pavgb
adc
ror
das
dec
mov
pop
dec
cli
aaa
dec
out
pop
xchg
das
ret
push
xor
lcall
inc
cmpsl
cltd
leave
jns
rorl
ret
pop
jae
xor
push
aas
out
sbb
pop
jne
sub
xchg
mull
fs
mov
in
cmp
mov
les
or
add
repnz
lds
js
inc
mov
and
or
je
mov
xor
stos
and
and
das
push
mov
rorl
push
mov
and
mov
fdivl
push
rorb
iret
pop
fists
loopne
or
mov
scas
ja
in
fiadds
jecxz
fbld
test
cmp
lods
daa
jmp
fstpl
das
mov
xchg
cmp
jnp
call
scas
mov
mov
jo
xchg
gs
fsts
movsb
sbb
lock
pop
inc
andl
out
sti
es
jmp
popf
shll
xchg
out
out
xchg
sbb
sbb
hlt
inc
int
jmp
mov
fildll
rol
mov
je
push
sub
inc
arpl
pusha
push
xlat
xchg
or
ds
mov
inc
or
push
in
fs
leave
mov
lods
ljmp
mov
sub
hlt
inc
xor
scas
outsb
sub
sub
stos
adc
and
cmc
inc
aas
jbe
mov
sub
jmp
dec
mov
or
sbb
sbb
clc
popf
adc
int3
es
frstor
dec
icebp
push
gs
xor
jo
in
dec
cld
jae
test
in
notb
pop
and
inc
cmc
shlb
in
movsbl
stc
movsl
sbb
js
or
rcr
sarl
cmp
jmp
sub
jl
inc
adc
or
cltd
push
insb
sub
lahf
push
movsb
lcall
das
out
dec
pusha
dec
pop
das
lods
sub
or
adc
test
mov
mov
aad
xor
fsubrl
js
enter
xlat
inc
xorb
adc
ljmp
fstl
add
pop
inc
and
cmp
xchg
ja
push
jg
jl
out
mov
add
aaa
loope
inc
sbb
or
add
pop
xchg
out
imul
aaa
sarl
pop
ja
in
pop
xchg
je
testb
xchg
fimuls
cmpsb
mov
popf
scas
mov
xor
pop
xchg
or
push
fisubs
rclb
clc
mov
call
add
cwtl
test
cs
ret
jne
and
mov
bound
popa
pop
xor
push
in
push
jmp
lret
daa
into
and
idiv
mov
pushf
dec
gs
and
fnstenv
adc
mov
out
cli
in
mov
out
loop
dec
add
enter
hlt
add
mov
xor
frstor
pushf
orb
mov
jbe
sbb
fs
das
jmp
inc
outsb
in
jo
xor
pop
xor
xor
cmp
mov
rclb
cs
mov
cmp
movsl
mov
cmp
adc
shrb
lock
push
cmp
test
jns
insl
pop
test
dec
test
xor
mov
loop
lods
data16
xlat
xor
call
add
sbb
das
fwait
cmp
mov
mov
lahf
push
je
mov
out
xchg
push
lds
mov
push
jne
push
bound
or
les
lea
pandn
repz
stos
iret
repnz
movsl
xlat
jbe
std
and
cmp
popa
sbb
add
add
sub
gs
xor
xchg
xchg
or
dec
mov
mov
sti
or
into
lods
fs
mov
inc
add
lcall
clc
aaa
aas
mov
xlat
push
sahf
leave
and
push
fcmove
test
mov
push
out
mov
mov
xlat
cli
adc
les
push
frstor
mull
lret
fnstenv
cmpsl
hlt
xlat
jo
fistl
add
jo
or
jg
mov
stos
cli
inc
mov
pop
adc
movsl
add
sub
mov
ss
hlt
pop
sahf
and
hlt
fisttps
jno
and
jb
sbb
mov
movsb
stos
repnz
or
mov
xor
lret
aam
vunpckhps
mov
mov
das
inc
aad
mov
mov
jle
xor
icebp
or
les
or
xlat
fwait
mov
xor
or
iret
pop
aas
xor
sbb
fwait
sub
mov
mov
subl
movsl
xchg
add
mov
add
ljmp
pop
inc
jno
cmp
scas
mov
xor
mov
or
loop
add
jae
ret
cld
std
dec
ja
cmp
cmpsb
mov
mov
sub
popf
hlt
fadds
mov
js
enter
pop
lea
jge
repz
lret
or
and
push
js
in
cmpsb
int
sahf
xchg
mov
fadd
ds
rorl
ret
mov
ljmp
repz
and
lret
cmpsl
js
inc
dec
test
enter
add
push
ja
nop
int3
sar
mov
cmp
cs
xchg
fsubrs
enter
add
ss
fs
jbe
out
cmp
jge
pop
mov
sub
std
pop
or
jecxz
les
sub
sahf
xor
xor
xlat
sahf
je
xor
fcomp
out
xchg
in
incl
lods
xchg
mov
stos
popa
jne
or
out
mov
push
jle
in
xchg
pop
inc
comiss
or
xchg
fildll
pushl
pop
orb
adc
cld
fsubl
add
xchg
dec
mov
or
jno
sub
int3
outsb
psubsb
jns
outsb
shrl
add
jno
icebp
cli
jl
fcmove
jmp
inc
add
sub
into
loop
push
test
add
jno
leave
jns
aam
testl
and
outsl
popf
sub
cwtl
mov
jp
and
sub
sbb
in
andb
repnz
push
add
jl
push
xchg
cwtl
push
lods
jnp
aaa
fcoml
aas
dec
jnp
jbe
inc
cltd
mov
in
xchg
lret
mov
xchg
push
loopne
mov
ror
call
in
std
jmp
iret
cld
pop
jo
xchg
daa
xchg
scas
push
push
cs
push
jns
mov
adc
repnz
mov
dec
insl
roll
pop
push
ret
js
inc
pop
clc
aad
xchg
cwtl
pop
jae
lcall
and
pushf
mov
or
jg
hlt
mov
pop
stos
ret
inc
lahf
adc
mov
lret
fisttpl
lods
xchg
pushf
and
icebp
sub
out
sub
sub
push
push
push
fs
dec
divl
clc
in
dec
push
sbb
mov
xchg
ret
hlt
jge
sar
sbbl
frstor
pop
and
scas
aad
sahf
andb
into
cmp
test
push
push
jns
xchg
xchg
or
and
jne
ret
test
lods
gs
cmp
mov
mov
aam
pop
jne
fnsave
mov
dec
and
jns
sub
jo
mov
pop
shr
in
mov
das
leave
insb
out
arpl
and
mov
andl
sti
xor
xor
and
dec
mov
xlat
mov
mov
popa
leave
testb
jb
or
lahf
cmp
push
push
daa
cmpl
daa
ret
mov
pop
jb
loop
jge
inc
fistpll
dec
decl
and
add
jae
xlat
ja
or
adc
or
pop
pop
push
lahf
adc
dec
adc
dec
arpl
movsl
jle
int
mov
scas
js
or
pushf
xor
sbb
mov
mov
stos
jns
add
faddp
clc
xor
inc
subl
inc
cmp
cmpsl
loop
gs
cmp
adc
inc
mov
in
mov
cmp
pop
cmp
jecxz
jecxz
mov
cltd
pop
out
cltd
cmp
and
mov
xchg
das
sub
ja
ja
adc
add
mov
inc
cmp
aaa
dec
pop
jmp
adc
aas
cmp
outsl
inc
pop
scas
pop
pop
mov
lret
inc
andl
cld
mov
add
push
xor
xor
xchg
inc
in
in
jmp
sbb
iret
outsl
push
inc
enter
mov
addb
mov
ds
xor
rcr
dec
fnsave
push
lods
jae
mov
add
and
aaa
frstor
stos
loopne
mov
js
jge
push
in
adc
mov
sub
xchg
dec
adc
dec
mov
fsubrl
xor
fists
jo
add
jbe
or
pop
das
lods
les
out
loope
xor
ficoms
push
dec
in
add
dec
or
jb
cmp
fs
icebp
mov
mov
cli
sbb
enter
sub
mov
pop
subl
add
cmc
pop
ret
xor
and
push
iret
ficompl
adc
lods
inc
pop
jle
pop
mov
sahf
aaa
fdivrl
pop
mov
cmpsl
repnz
scas
jecxz
js
adc
fsubp
xchg
sub
cld
mov
lret
insl
call
push
incl
test
adc
int3
fsub
movsl
inc
cmp
mov
sub
aas
sbb
stos
iret
andb
sbb
adc
fs
sub
lcall
aam
xchg
xchg
jle
sbb
inc
jmp
xchg
loopne
ret
rcl
out
xchg
cmpsl
cmc
xor
jns
inc
aad
mov
insl
leave
mov
sbb
mov
or
inc
sahf
ffreep
test
shl
dec
or
cmp
movsl
jle
inc
test
jg
dec
addb
mov
push
daa
mov
xchg
cmp
gs
hlt
sbb
ja
sub
fwait
pop
fimuls
mov
jnp
and
push
inc
jle
xchg
push
and
aas
mov
jp
push
punpckhbw
dec
test
pop
outsl
leave
popf
push
lock
xchg
xchg
ret
mov
lret
adc
dec
jne
pop
cmc
dec
stos
adc
into
fsubl
call
mov
xor
mov
adc
sbb
rdmsr
dec
orb
mov
inc
jmp
js
sbb
in
or
pop
adc
pop
sub
pusha
lea
cmpsl
les
sbb
std
stc
mov
aaa
loope
loope
lods
aaa
lret
xchg
jae
jns
jp
stos
scas
frstor
xor
sbb
fisubs
fcomps
push
cmc
xchg
outsb
push
xor
mov
pop
aas
jae
mov
outsl
push
test
lods
pushf
cmpxchg
cmp
mov
mov
aad
add
adc
hlt
cmpsb
sub
in
rcr
cmp
outsl
ficoml
outsb
jb
cmc
cs
jl
dec
fwait
mov
leave
pushf
and
loop
or
loop
scas
push
scas
imul
popf
cmp
nop
pop
mov
sbb
sub
mov
ret
sub
mov
and
sub
inc
push
bound
ficoml
shrl
sahf
jno
jmp
cltd
xchg
arpl
xacquire
insl
xchg
and
fcomps
mov
jle
in
bound
cmp
nop
mov
test
xchg
aaa
xor
jp
mov
dec
xlat
and
add
sbb
inc
xchg
ret
das
fisttps
add
fmuls
xlat
das
rorl
stos
stc
push
jg
shll
cmpsl
into
pop
jbe
lahf
sarb
xor
jmp
xchg
subl
mov
mov
cli
pop
pop
rorl
ljmp
jp
sub
in
cs
ret
xchg
rcl
push
mov
and
sub
xor
in
xlat
flds
mov
ja
mov
dec
scas
cmp
push
or
lea
lahf
in
out
cmc
sbb
sbb
out
pop
aas
dec
ret
xor
adcb
popa
cmp
ljmp
fs
mov
jl
fs
in
xchg
adc
ret
insb
add
xor
popa
push
jns
or
xor
push
add
aaa
jge
xor
push
add
jb
push
add
cmp
stos
mov
jno
aam
adc
or
add
inc
push
scas
xchg
mov
pop
and
xchg
int3
rcr
pop
jecxz
jg
fdivrs
loope
nop
and
call
xchg
pop
inc
aaa
add
out
dec
mov
aam
add
mov
lea
enter
adc
push
aas
jo
ret
xchg
and
dec
fstl
and
pusha
outsb
mov
popa
sbb
sub
sbb
les
pop
imul
lods
test
in
pop
fdivrl
push
clc
pop
mov
add
xchg
lods
dec
daa
dec
mov
jno
lea
sbb
push
mov
test
cld
cmp
and
cmp
sub
sub
rcr
xchg
call
jge
mov
jo
and
into
jae
lea
jne
xor
push
xchg
and
cmpsb
adc
mov
rcrb
cmp
lods
enter
and
sti
adc
mov
cli
enter
jp
das
mov
outsb
add
fimuls
arpl
sbb
xor
das
mov
dec
lcall
sbb
cmp
sub
pop
ret
pushf
leave
jae
inc
cmp
xor
mov
pop
adc
inc
mov
addb
sti
imul
add
xor
xor
cmpsb
cmp
push
cwtl
lods
mov
jecxz
test
ds
sub
xor
sbb
pusha
decl
xchg
fcmovnb
sbbb
xchg
mov
iret
fisubrs
jl
icebp
mov
mov
jg
adc
dec
mov
sbb
dec
add
pushf
and
xor
ss
out
in
loopne
mov
jbe
cmp
push
sbb
mov
mov
adc
stc
jl
shll
stos
out
je
stos
jmp
inc
ljmp
jbe
xchg
cmc
outsb
out
cmc
loop
mov
arpl
jecxz
xchg
dec
adc
clc
push
dec
inc
mov
xor
out
sub
add
jecxz
pop
aam
rclb
cmp
adc
adcl
insb
pop
xchg
dec
idivb
xor
stc
scas
das
mov
xchg
sahf
sub
pop
std
push
mov
cli
sub
das
add
pop
mov
add
shl
jae
pop
mov
and
adc
sub
inc
inc
push
pop
xchg
inc
add
neg
pop
add
shrb
xchg
sub
bound
sbb
scas
mov
mov
xlat
mov
push
xchg
pop
push
push
mov
shll
fs
push
inc
repnz
and
icebp
je
fdivrp
pushf
cltd
pop
out
push
pop
dec
and
cmp
cwtl
sbb
xchg
dec
testb
rcrb
sbb
das
sbb
mov
mov
mov
mulb
adc
dec
jae
and
dec
rcrl
popf
push
mov
lock
fwait
push
pushl
and
xchg
int3
pop
jl
in
dec
loopne
lds
sbb
adcb
inc
cwtl
push
cmc
shlb
inc
mov
pop
and
stc
idivb
xchg
cmp
sub
movsb
or
insl
or
test
mov
divl
aam
imul
das
cmpsb
and
int3
push
sub
in
xor
inc
pop
dec
inc
shll
test
mov
mov
fisubrs
pop
popf
lods
faddl
adc
adc
ret
mov
mov
bound
push
out
or
orl
test
dec
shll
mov
scas
mov
lods
jp
pop
cmp
lods
xchg
mov
lea
arpl
jns
lds
fisubs
add
test
and
pop
loop
or
dec
daa
pop
mov
enter
loope
or
lret
push
stos
and
ljmp
scas
and
mov
fs
fsubs
loopne
in
cmp
jmp
mov
xor
ret
adc
jecxz
outsl
out
std
out
push
stos
mov
nop
lcall
mov
ret
hlt
push
fidivs
loop
rclb
shlb
sub
adcb
fidivs
xchg
mulb
mov
lret
xor
xchg
arpl
in
call
pop
xlat
inc
lret
mov
push
sbb
adc
cs
in
int
mov
pop
fwait
mov
jle
xchg
aas
cmp
jmp
js
decl
jmp
adc
mov
in
movsl
into
std
arpl
mov
std
xchg
and
mov
insl
jne
mov
sub
jno
cmpsb
mov
insl
sbb
mov
mov
mov
fcmovne
cmp
ret
lahf
fistps
cs
shrb
mov
ror
pusha
mov
mov
in
cmp
sub
adc
push
mov
adc
add
sub
inc
std
ficoml
xchg
ret
pop
bound
mov
cmc
es
pop
adc
inc
mov
subl
call
popf
mov
sbb
out
sbb
mov
xchg
mov
mov
inc
inc
loope
sbb
jne
xchg
dec
mov
xchg
out
out
pop
inc
js
sub
aam
outsb
std
lahf
insl
es
sub
add
pop
sahf
scas
xchg
cmpsb
pop
xchg
mov
lret
add
xchg
ss
inc
adcb
cwtl
int3
jne
pop
imul
add
popa
and
popa
cmpb
inc
aam
jb
dec
mov
testb
es
out
divl
mov
mov
ja
mov
movsb
xor
in
jmp
cmp
mov
xor
cmp
push
sub
sbb
aam
jle
lods
shrl
xchg
or
test
movsb
mov
jnp
adc
pop
mov
pop
sar
jle
imul
xchg
int3
xchg
push
jnp
jle
in
fnstcw
stos
xchg
push
cs
adc
push
adc
sub
insb
push
mov
and
xlat
sbb
sub
test
pop
and
ja
inc
mov
dec
inc
cmp
inc
mov
imul
out
aas
and
js
mov
jno
xor
int
test
movsl
jns
fcomip
test
inc
xor
xorl
mov
inc
and
cltd
inc
inc
push
loopne
fmulp
outsl
sub
inc
cmpsl
fyl2xp1
test
bound
adc
mov
mov
stos
xchg
sbb
xchg
scas
bound
pop
pop
push
fs
fists
push
das
mov
mov
hlt
pop
add
stc
sahf
es
add
adc
data16
adc
movsb
dec
mov
es
mov
sbb
add
outsb
dec
push
sub
mov
pop
cmpsl
fs
add
xor
cmp
sbb
cmp
mov
out
mov
push
pop
xor
daa
mov
test
negl
pop
mov
ficoml
add
pushf
pop
dec
pop
popa
xor
test
cmp
dec
push
jo
add
xchg
mov
mov
hlt
aad
das
pop
pop
test
stos
cmpl
int
inc
roll
leave
scas
sbb
mov
and
call
jbe
dec
pop
mov
sti
cmp
fxam
dec
stc
and
push
fs
stc
mov
adc
clc
cmp
mov
mov
push
jmp
aaa
insb
sarl
jo
iret
daa
out
test
stos
cld
fistpl
sti
cli
inc
cli
inc
js
fisttpl
lret
aad
or
and
cli
mov
arpl
adc
cli
pop
lods
test
lods
cli
inc
mov
xchg
stc
add
dec
pop
xor
dec
js
sub
addb
mov
ljmp
push
and
stos
lea
scas
nop
fwait
cli
xchg
cmpsb
dec
sbb
adcl
cld
pop
shlb
loop
call
sbb
cmpsb
leave
push
sub
fisubs
icebp
add
mov
stos
imul
mov
clc
sbb
jmp
repz
push
xlat
sub
in
movsl
dec
pop
or
add
daa
mov
out
sbb
movsb
loopne
sar
cmp
xor
lcall
or
jmp
movsb
sbb
push
pop
ret
add
push
pop
and
lds
pushf
aaa
fdivrl
or
mov
push
pop
jp
iret
cmpsb
adc
daa
jg
or
in
and
aad
aaa
sbb
cli
push
pop
xor
mov
mov
add
popf
pop
mov
inc
adc
mov
popa
push
xchg
cmp
stc
in
shrd
or
ror
push
loop
imul
jne
rcr
xchg
daa
addr16
dec
in
movsb
out
mov
xor
adc
aas
iret
pushf
sahf
into
les
mov
mov
mov
xchg
xchg
loopne
dec
inc
ja
xchg
loope
outsb
jne
mov
fcoms
pop
cmc
jns
mov
and
cmp
bound
cld
jecxz
or
fcomps
mov
adc
xor
scas
pop
int3
inc
addr16
out
jl
insl
ja,pt
jnp
xchg
add
xlat
and
mov
mov
inc
inc
std
and
sub
pushf
and
out
mov
pop
js
in
cmpsb
arpl
out
xor
and
movsl
aam
pushaw
add
lret
out
clc
enter
jmp
cmp
int3
pop
mov
xchg
mov
adc
add
divl
push
movsb
out
pop
push
pop
adc
loope
jp
sarl
dec
cwtl
add
sbb
fcomi
popa
iret
movsl
lret
mov
lret
lret
jnp
jb
mov
cmc
cmp
addl
inc
fdiv
lods
xlat
gs
ss
outsl
pop
mov
mov
lock
or
out
insb
xor
rorb
js
jge
push
cs
cs
stos
mov
pop
inc
or
jae
push
dec
add
push
jmp
mov
pop
lods
cmp
aas
sbbb
cli
mov
pushl
jp
fmul
fnstcw
mov
sarb
stos
sub
xchg
das
loop
popl
xchg
pop
rol
push
xchg
aaa
xor
inc
aam
adc
in
lods
pop
je
nop
rclb
mov
and
xor
push
pop
mov
pop
xor
and
add
int
and
mov
fsubrs
lock
cs
xchg
test
int3
shrl
pop
or
into
scas
xlat
dec
je
xor
and
hlt
add
jmp
icebp
mov
sahf
rol
shl
add
lods
in
addr16
mov
adc
imul
jne
into
mov
sbb
xchg
sub
xchg
pop
mov
mov
out
jae
outsb
lods
popf
das
mov
or
loope
add
sbb
mov
mov
jl
pop
in
stos
repnz
mov
out
adc
xor
psubw
inc
loope
dec
adc
mov
out
lds
xchg
dec
pop
or
sti
mov
and
dec
xchg
cltd
sub
cld
mov
push
pushf
xor
es
inc
or
xor
mov
ret
push
push
dec
pop
xor
loopne
leave
jge
lds
rorl
addl
jl
add
xor
xchg
addl
je
inc
cltd
repz
scas
mov
mov
loopne
push
xor
imul
inc
mov
add
cmc
xchg
mov
xchg
dec
ja
imul
sub
fsubrl
sub
addr16
mov
dec
xchg
pop
cs
push
cmp
dec
js
sbb
sbb
cmp
add
jle
push
les
fwait
mov
cmp
in
jle
xor
shll
in
lret
pop
pop
or
test
jp
lret
or
add
data16
out
pusha
aad
pusha
les
cmp
test
pop
sbb
andl
std
pop
pushl
mov
and
or
jnp
push
pusha
outsl
mov
xchg
xchg
out
sbb
fldl
dec
ret
push
sahf
pop
std
imul
int
and
lcall
loop
inc
mov
loope
pushf
add
movl
fwait
or
cs
inc
dec
leave
lods
xorb
xor
add
movsl
aas
cli
push
imul
mov
or
in
pop
pop
dec
shll
cmp
sti
push
pop
out
popf
stos
pop
pop
add
fwait
cs
repz
in
push
mov
inc
push
xchg
mov
cmc
pusha
in
and
or
int3
cltd
mov
mov
rcl
cmp
movsb
adc
mov
bound
clc
lock
aas
sub
add
sbb
movsl
loop
mov
pop
setbe
call
adc
jb
sbb
sub
scas
and
mov
cld
lods
cmp
outsb
push
xor
mov
push
jo
pushl
int3
sbb
jo
dec
ret
addr16
mov
fisttps
inc
or
pause
xor
nop
outsb
cwtl
fs
scas
jnp
mov
mov
jmp
aad
pop
mov
dec
inc
xlat
out
jne
clc
xchg
flds
xor
stos
jne
adc
push
xchg
hlt
ret
sahf
push
inc
cmp
test
scas
gs
les
repnz
dec
repnz
jnp
lahf
rol
loop
jp
fisubl
out
dec
mov
out
add
lds
in
pop
sbb
movsl
adc
sbb
out
rolb
dec
or
jge
sbb
in
push
inc
or
clc
inc
popf
pop
adc
push
mov
lods
or
in
and
pop
loopne
sbb
test
cltd
dec
mov
add
loopne
mov
insb
mul
sub
cmp
sub
dec
cli
sub
es
jge
adc
bt
xchg
frstor
sbb
push
xor
mov
scas
and
xor
fdivs
bound
es
sub
jmp
and
call
or
sahf
mov
testb
or
cmp
cli
sub
mov
lea
push
add
addb
stos
int
cmpsb
sub
push
scas
push
dec
push
mov
mov
adc
ds
dec
data16
outsb
fwait
xchg
test
dec
mov
popf
dec
and
insl
add
cs
test
sub
mov
pop
xchg
lea
stos
xchg
dec
mov
jne
dec
xchg
xchg
adc
in
adc
andb
sub
cmpsl
lods
xchg
movsb
fmuls
push
js
rorl
jg
mov
jecxz
xor
loopne
test
into
add
push
inc
imul
mov
mov
addr16
sub
xor
andb
mov
ficompl
aam
pop
jp
inc
pop
dec
adc
nop
cmp
int
cmp
popa
push
imul
sub
lods
push
es
or
jae
inc
ja
inc
fistl
outsl
divl
cli
xor
adc
xchg
jl
cmpsl
movsl
lea
repz
mov
stc
stc
or
mov
or
sub
cmp
loopne
fimull
push
movsb
mov
pop
sbb
movsl
idivb
out
cmp
lds
inc
dec
dec
aam
xchg
fcoms
icebp
outsb
jae
mov
dec
sbb
orb
add
xor
jbe
js
outsb
mov
aam
in
lret
fsubl
in
js
xor
int3
es
pop
stc
fwait
xchg
jmp
cpuid
ljmp
xor
sub
andl
or
aas
inc
call
xor
stos
je
or
imul
xchg
push
push
cmp
adc
pop
stos
mov
jno
loope
aaa
and
mov
popa
in
sub
pop
sub
popf
inc
sbb
and
mov
xchg
and
leave
push
cli
mov
mov
or
jmp
dec
and
fdiv
xor
pop
mov
shl
mov
jl
jmp
push
mov
loope
inc
jle
push
mov
sub
sub
repnz
cmp
repnz
pop
in
ljmp
fildll
and
pop
in
push
fs
jno
dec
mov
jo
insb
jge
out
shrb
icebp
jno
pushf
add
inc
loop
sbb
mov
lret
nop
adc
sbb
inc
mov
fadd
jno
aad
imul
fwait
cli
sbb
out
xor
cs
jo
mov
neg
call
inc
outsl
mov
je
cmp
xchg
shrb
adc
popf
fildl
cli
orl
icebp
shll
shrb
je
jae
cmp
mov
cwtl
sti
pop
std
jp
ret
fcmovb
out
inc
neg
pop
push
sub
jmp
aad
vcvtdq2ps
and
sahf
and
xchg
je
xor
or
int
xchg
adc
mul
or
dec
aad
cwtl
sub
test
xor
loop
movsb
repz
clc
out
mov
and
ja
push
jmp
sti
inc
adc
out
lahf
cli
int
push
fiadds
fmull
and
arpl
lret
add
movsl
std
loopne
mov
rclb
push
movsl
jl
mov
jnp
xor
cmp
mov
imul
dec
mov
nop
sbb
popf
iret
pop
int
pop
sbbb
fimuls
movsl
out
sub
cmp
inc
out
sahf
push
dec
pop
xor
clc
or
cmp
leave
inc
sub
insb
add
add
add
mov
jl
ss
mov
cmp
leave
pop
test
pop
cld
iret
push
shlb
and
clc
test
jp
cmpsb
imul
mov
sub
test
jl
mov
lea
fsts
xchg
mov
pop
ret
sub
ljmp
dec
fwait
rolb
aad
in
stos
popf
push
push
mov
xchg
icebp
test
fisttpl
lret
scas
add
inc
sub
mov
adc
stos
lds
sar
decl
sti
adc
pop
insb
push
out
pop
mov
pop
mov
shll
cmp
or
mov
sbbl
push
pop
shll
repz
sub
push
mov
js
mov
out
fwait
test
jae
adc
sahf
lock
lea
mov
sbb
sub
loope
insb
or
jecxz
mov
jns
jle
cmc
mov
repz
and
adc
cmpl
jns
jb
cld
out
and
sub
pop
bound
pop
and
nop
out
pop
sbb
ret
mov
fldl
sub
movsb
lods
insl
in
lahf
loope
sbb
pusha
addr16
mov
lcall
add
xor
call
pop
stos
push
add
fbld
inc
xor
and
popa
imul
sahf
call
mov
xchg
iret
cmpsb
push
mov
decb
jl
lods
mov
lock
adc
pop
fmuls
js
out
ret
call
and
aam
sbbl
mov
mov
sub
in
lods
xchg
movsl
fldcw
jge
sarb
mov
sti
mov
mov
sti
and
popa
xor
scas
inc
cmp
push
adc
mov
popa
inc
mov
stos
xchg
cmp
xlat
test
outsb
dec
scas
shlb
into
pop
pushf
cmp
xchg
cli
cmp
pop
test
int
add
inc
pop
mov
sbb
stos
mov
outsb
xchg
mov
inc
add
or
xchg
out
cmp
imul
xor
jecxz
jge
mov
cmp
sahf
pushf
dec
push
ss
stc
fstpl
or
adc
jl
add
sub
xchg
mov
mov
xchg
inc
add
int3
nop
sub
or
inc
jae
repz
je
fdivl
dec
dec
pop
add
lods
imul
sti
xchg
pop
fcmovb
mov
pop
or
mov
and
ljmp
inc
in
leave
sub
arpl
int3
shrl
mov
pop
inc
inc
cmpsl
lahf
push
dec
lea
push
loop
int
lcall
insl
add
pop
sahf
push
gs
cwtl
lods
push
or
jo
push
mov
mov
stos
cld
je
fwait
stos
push
jmp
loope
mov
lcall
pop
mov
jl
mov
sbb
mov
mov
and
mov
push
dec
test
test
enter
cs
push
and
jmp
repz
mov
loop
out
aam
clc
mov
sarl
sub
add
cmp
or
inc
gs
xor
int3
sti
fcoms
sbb
mov
clc
pop
sahf
loopne
in
pop
enter
push
inc
jne
mov
pusha
mov
aaa
ficoms
invd
insb
in
ljmp
push
das
incb
ds
cmp
stos
dec
cmpsb
jmp
jns
out
sbb
shll
movsb
cmp
leave
xlat
pusha
cmp
mov
add
lods
and
in
inc
cmp
xchg
mov
xor
and
dec
sub
adc
enter
push
mov
sahf
push
scas
arpl
js
fadd
popa
push
stc
shl
push
out
scas
jne
aaa
repnz
int
dec
xchg
inc
in
test
int
mov
adc
subb
in
int3
push
cmc
arpl
mov
ds
pop
xchg
dec
cmp
ljmp
scas
sub
push
mov
push
add
xor
jge
in
mov
xor
cmp
fs
lret
movsb
sti
inc
and
clc
cld
inc
cmp
jae
lcall
pop
je
jne
jle
dec
cli
mov
xlat
subb
sub
add
or
shr
iret
inc
sarb
inc
or
mov
xchg
sub
nop
std
hlt
mov
adc
popa
xchg
push
xchg
inc
jbe
in
mov
fcoml
xor
fbstp
rolb
xchg
adc
cmpb
lock
nop
xchg
jmp
xchg
pusha
xchg
sbb
fmuls
daa
jo
add
jnp
jbe
andl
pop
mov
and
xor
pushf
sbb
call
sarb
jmp
arpl
in
hlt
mov
fistpll
mov
mov
into
add
push
mov
mov
cmp
mov
and
dec
sahf
arpl
or
gs
not
cmc
add
xor
insb
inc
adc
cmp
into
sbb
and
into
out
ljmp
mov
xor
mov
dec
les
out
push
orb
dec
cmp
call
add
dec
xchg
sub
sub
cmp
mov
fwait
test
mov
or
aaa
aad
lock
sub
mov
jge
lods
mov
push
enter
xlat
inc
push
addl
add
loopne
roll
pop
dec
mov
scas
movlps
add
outsb
dec
pop
loope
mov
stos
stos
sbb
adc
pop
aam
mov
stos
cltd
adc
or
enter
push
push
and
ds
push
pop
mov
mov
adc
in
and
sarb
pop
cld
shrb
stc
addr16
xchg
xchg
jno
xor
add
cmp
pop
inc
in
xor
outsb
xchg
or
and
xlat
sub
fmuls
inc
mov
cld
mov
ret
mov
test
mov
push
pop
and
std
pop
mov
out
sub
adc
jbe
loopne
mov
shlb
nop
out
insl
les
inc
lds
mov
mov
std
andl
decb
adc
sbb
dec
cmp
adc
addr16
hlt
jno
sbb
movsl
sub
pushf
nop
sub
or
fadds
sbb
mov
outsb
sub
leave
das
roll
loop
lods
sub
loop
movsb
loope
add
nop
jle
add
xchg
jp
lret
mov
jo
repnz
mov
pop
imul
std
into
data16
inc
lret
xor
xchg
mov
rcrl
push
out
iret
mov
mov
movsb
xor
stos
jb
and
push
std
shld
arpl
cwtl
sub
negb
sub
push
sti
loopne
arpl
fs
scas
xor
andb
xchg
dec
inc
dec
and
repz
xchg
ficoms
rcrb
add
lds
cmp
stc
loopne
icebp
cmc
addr16
icebp
sbb
sbb
ja
rcll
cmp
out
or
test
cmp
mov
cmp
xor
hlt
inc
stc
add
xchg
add
loopne
sub
inc
ret
and
lret
loopne
jp
out
mov
shlb
mulb
enter
cld
scas
dec
sub
jmp
pusha
dec
in
adc
sub
insb
inc
imul
xor
dec
mov
popf
pop
hlt
pop
xchg
fadds
andb
aad
repz
lock
ja
cmpsl
mov
fmuls
pop
jecxz
sub
mov
ljmp
adc
xchg
sub
push
fbld
fwait
sub
mov
adc
push
adc
popa
shll
sti
jb
push
sbb
dec
imul
movl
push
mov
ja
lods
scas
or
push
dec
sub
and
and
pop
fld
adc
sbb
into
sub
sub
xorb
sbb
sbb
adc
mov
aas
shll
out
cmp
or
lahf
and
xchg
push
mov
or
pop
or
aam
out
push
packssdw
cli
pop
lock
jae
inc
jge
outsb
nop
and
mov
xchg
dec
xchg
adc
push
and
or
aad
in
sub
fwait
cmp
sub
fmuls
and
in
ds
aad
out
sub
pop
ret
aaa
pop
in
sbb
add
push
out
or
daa
test
test
push
sti
fadds
outsl
pop
jb
popf
dec
pop
stos
mov
mov
xlat
js
popa
adcl
or
lret
and
sub
mov
sbb
xchg
and
addr16
lea
and
fwait
xchg
out
mov
lret
sbb
fadd
repnz
sbbb
jle
add
push
mov
push
add
es
or
jbe
adc
jb
movsl
jg
jnp
sub
cmpsl
fsubp
gs
pop
pop
stos
loop
aam
lret
pop
jb
dec
cmpsl
pop
adc
out
mov
ret
pop
leave
pop
rcll
fs
arpl
inc
gs
mov
pop
clc
pop
sti
sub
in
mov
push
mov
sbb
pushf
or
mov
add
cmp
ds
sahf
in
lahf
aas
cmp
inc
cmpsl
ja
push
push
mov
pop
cmp
in
lds
add
pop
cmp
mov
cwtl
test
sbb
lds
fildl
nop
test
pusha
mov
mov
jg
push
pop
sarb
shrb
stos
arpl
bound
adc
push
lret
cwtl
daa
fwait
mov
cmpsl
outsb
in
cs
xchg
pushf
mov
out
js
push
dec
inc
test
std
test
cwtl
push
les
jo
addr16
xlat
ss
cmp
call
pop
cmp
jg
stc
mov
push
mov
cmp
xor
and
and
adc
inc
les
mov
inc
pop
call
dec
outsl
push
and
in
adcl
push
ss
iret
pop
repz
xchg
jg
push
jmp
and
stc
jns
shlb
cmpsb
jecxz
mov
fs
dec
enter
fdivrs
jmp
loopne
shl
add
jp
fidivrs
mull
add
lds
or
push
mov
jle
mov
mov
cmpsl
test
rolb
inc
pop
aam
xchg
mov
out
sbb
enter
insl
dec
sbb
stos
call
mov
rol
cmp
pop
lds
insl
xchg
test
insb
test
fisubs
scas
hlt
mov
mov
xor
fwait
cmc
js
lret
push
cmp
sub
je
popa
adc
sbb
cmp
inc
sbb
xor
jns
pusha
aad
movl
fdivrl
stos
and
popa
mov
fidivrs
sub
fs
mov
sub
outsb
mov
push
or
arpl
dec
push
hlt
adc
xchg
xor
xchg
pop
sarb
ficompl
push
push
popf
mov
gs
push
fcmovnbe
push
xchg
pop
xchg
lret
pop
adc
jge
fs
or
push
inc
xchg
or
lcall
lods
popf
dec
jno
ret
add
shlb
into
dec
pop
push
jl
ret
ret
xor
xchg
rcr
enter
ret
cs
add
mov
xchg
and
xlat
je
fidivl
sbb
or
lcall
daa
out
data16
out
sarb
mov
fstpl
and
mov
aam
dec
mov
ret
cmp
xor
inc
push
stc
or
out
scas
sbb
sti
sbb
es
aam
mov
jge
push
int
es
outsl
jmp
jb
mov
loopne
rcll
jle
pop
mov
aas
fcompl
test
js
xor
in
or
push
std
jo
pop
mov
fimull
frstor
lds
pop
in
sbb
lea
shlb
push
cmp
lds
pop
pop
pop
sbb
lods
ret
ret
cmpb
cwtl
jge
pop
aad
pop
cmp
mov
fwait
das
movsb
pop
add
aas
popa
test
sti
rclb
movsb
ljmp
outsl
and
stos
les
ret
leave
xor
ret
jge
stos
aaa
mov
xor
nop
xor
shlb
cmp
mov
xor
lret
cwtl
push
sub
xchg
pusha
inc
and
inc
xchg
dec
xchg
jbe
ds
scas
ds
pop
jnp
pop
daa
or
movsl
sbb
add
pop
test
xor
xchg
jo
or
sbb
pop
fistpl
sbb
daa
jecxz
sbb
in
outsl
pop
loope
hlt
sub
jl
xor
test
ja
bound
mov
stos
pop
es
in
push
cwtl
lods
push
enter
lret
mov
fs
push
xor
and
dec
pop
lods
mov
cmp
cmpsw
sbb
add
pusha
mov
jg
xor
and
push
jg
mov
mov
add
inc
mov
push
add
or
outsb
hlt
dec
pop
or
es
aam
repnz
pusha
fisubrl
and
aas
and
push
ds
in
cwtl
jge
mov
cmp
xor
xor
or
lcall
cmpsb
jmp
or
mov
dec
sub
in
xor
ret
cltd
mov
add
das
nop
movzwl
clc
daa
in
add
test
aaa
xor
popf
or
addr16
jecxz
sbb
div
int3
push
mov
inc
mov
or
rcl
adc
dec
and
aas
jle
popf
mov
mov
mov
icebp
jbe
pop
add
sub
outsb
and
popa
pop
notl
movsl
testb
out
stos
dec
sbb
out
psrlq
out
daa
stc
fwait
jns,pn
cmp
sahf
aaa
arpl
cld
xlat
cmpsl
mov
pushf
jb
xlat
dec
jl
jmp
test
pop
ficomps
aam
dec
and
xchg
mov
mov
mov
js
fisttps
xchg
arpl
dec
push
jge
push
xor
shrb
or
insb
cs
jbe
ja
inc
mov
add
inc
pop
inc
or
sub
pop
inc
loopne
jns
ds
mov
mov
sbb
jbe
test
sbb
out
jbe
sub
xchg
pop
jae
lods
sbb
mov
mov
arpl
es
pop
sub
popa
xor
aam
jl
mov
test
lret
imul
les
jl
and
xor
xor
outsl
mov
sbb
add
jecxz
dec
les
cmpb
push
jle
aas
stos
pop
mov
test
pop
pushf
sbb
pop
or
cmp
fiaddl
and
cmp
andl
cmpsl
ret
inc
lds
sub
imul
repz
lcall
and
lahf
jae
sub
jns
ljmp
inc
hlt
je
rclb
mov
xlat
stos
dec
lret
lcall
mov
mov
lods
inc
mov
dec
lds
xor
dec
mov
int
push
adcl
fildll
hlt
jl
mov
int
or
sbb
pop
sahf
push
scas
inc
ss
rcr
adc
into
pop
je
outsb
push
jg
sub
loope
lock
mov
into
mov
xchg
ja
mov
xchg
jle
jne
xor
cmp
into
movl
mov
fstpt
and
int
dec
fisttps
mov
xorb
dec
mov
ss
adc
mov
pop
fwait
lea
arpl
scas
inc
mov
nop
xchg
pop
aaa
iret
imul
ljmp
xor
mov
and
and
xchg
or
data16
or
push
shrl
rcrl
dec
dec
lcall
jns
jb
mov
loope
in
repz
into
dec
loope
shl
add
shl
cltd
jo
js
ja
cld
loop
outsl
loope
lea
in
loope
icebp
jne
sbb
and
xor
push
mov
orl
sti
mov
cmp
dec
jmp
stos
dec
leave
mov
clc
fimuls
cmpsb
jo
call
cld
cld
xor
icebp
xchg
insb
xchg
mov
fildll
call
cmp
cli
jne
nop
jns
xchg
popf
push
into
xchg
xchg
lahf
and
push
mov
mov
aam
fcomi
and
ja
xor
adc
imul
sbbl
clc
fcompl
aaa
xlat
push
enter
jge
jae
popa
insl
add
jp
sub
leave
arpl
je
pop
pushf
je
adc
inc
in
push
jnp
jmp
sub
cmpsl
inc
sahf
gs
mov
aaa
into
sub
in
dec
negb
out
push
mov
pop
lods
fldl
push
pusha
lods
pusha
iret
xchg
sub
push
insl
mov
test
dec
mov
imul
jns
in
outsl
cltd
dec
xor
jp
inc
jnp
fdivr
pop
mov
orl
cltd
adc
std
pusha
xlat
imul
andl
loop
pop
inc
inc
lcall
cs
sbb
dec
cmp
cmp
jle
cltd
mov
inc
cli
pushf
ds
addr16
bound
and
sub
mov
or
sbbl
inc
iret
inc
data16
das
jnp
ret
and
ss
les
mov
bnd
sub
xor
pop
jmp
mov
mov
insb
mov
mov
dec
mov
jg
mov
xor
int
pop
into
ss
xchg
xchg
mov
fmuls
mov
pop
and
dec
mov
je
data16
sti
cmp
shrb
insl
sbb
add
stc
mov
mov
xchg
jnp
dec
push
xchg
fstps
mov
cmpsl
cmpsl
xor
mov
sub
leave
lods
loopne
mov
sbb
cmp
jecxz
ret
cs
pop
inc
pop
repnz
pop
insl
or
push
out
or
mov
mov
lods
loop
add
mov
sub
imul
xchg
repz
add
or
cmp
rcl
adc
icebp
roll
sub
mov
in
ds
mov
or
pop
insb
ljmp
push
dec
pop
out
popf
xchg
pop
cmp
xor
mov
pushf
in
mov
fdivr
xchg
lods
insb
jns
gs
mov
dec
or
addr16
loop
mov
sub
xor
mov
sbb
inc
cmp
in
push
mov
bound
iret
or
and
push
sar
nop
shrb
inc
push
sub
movsb
insb
or
jg
adcb
jae
popf
mov
lods
fwait
add
rolb
das
fmull
in
xor
out
ds
push
jno
pop
add
loopne
in
in
jle
and
rcrl
out
mov
daa
sbb
jl
or
push
out
inc
movsl
testb
rorb
hlt
lods
mov
or
das
fwait
rcll
xchg
jbe
int
fdivs
xor
paddsb
dec
inc
xchg
test
jns
cltd
dec
jmp
loop
fdivp
jnp
jnp
and
cs
jecxz
add
divb
mov
cltd
mov
jge
nop
lret
ret
pop
lret
or
stos
lock
add
xchg
ss
insl
aaa
jb
mov
mov
neg
add
scas
cmpsb
in
mov
aam
loop
lock
add
out
fildll
jo
cmp
out
int3
out
das
sbb
cmp
and
pop
ret
cmp
mov
insb
or
pusha
sbbl
das
pusha
mov
inc
repz
mov
inc
loope
sarl
add
pusha
push
mov
pusha
dec
dec
call
mov
or
inc
inc
mov
daa
push
insl
xchg
push
addl
aad
sbb
sbb
int3
lahf
stos
jmp
and
or
mov
rorb
movsb
jbe
out
iret
and
cmp
inc
loope
shlb
sbb
push
or
add
sbb
icebp
es
loop
iret
and
das
push
stos
loop
dec
fimuls
sbbl
fistl
nop
push
lret
sub
fsub
fldenv
mov
or
sbb
lret
aas
mov
insb
lret
inc
jl
in
lock
popf
or
adc
mov
jge
mov
mov
pop
sbb
add
jne
fsubrs
xor
idivl
xor
call
mull
jg
pop
cmp
pushf
lea
push
popa
fldt
fsubs
pop
pop
lahf
push
or
les
fcoml
xchg
movsb
lods
push
imul
sbb
les
pop
mov
push
sbb
repnz
and
xchg
mov
inc
sahf
pop
cld
rcrb
cmpb
aad
push
scas
or
mov
lahf
and
xor
movhps
scas
scas
sub
or
insb
ret
xor
data16
jae
sub
xor
pop
inc
lea
adc
les
cmp
ret
in
lock
or
enter
popf
push
rcrl
int3
ret
jle
mov
push
mov
xor
mov
xor
cmc
addb
jecxz
mov
xchg
sbb
lds
or
or
xchg
inc
in
dec
sbbb
xor
fcomps
ja
push
push
js
fstpl
aam
aad
sbb
sub
adc
fidivl
mov
jmp
stos
xchg
out
stos
inc
rcll
stos
sbbl
pop
mov
arpl
cmpsl
lahf
cwtl
adc
cmp
aas
xchg
outsl
je
cli
mov
aas
cmc
xchg
testb
test
xor
rep
mov
fstpl
rorb
sti
sub
rolb
shrl
jae
push
je
movsb
sub
push
popf
and
inc
mov
lock
scas
loope
mov
sub
lcall
addr16
mov
call
mov
jns
xor
test
jmp
outsl
mov
scas
cltd
lret
jo
xchg
lds
add
out
or
dec
adc
adc
cwtl
xor
fdivrl
lock
add
bound
cmp
fwait
sub
les
or
xchg
sbb
in
pop
stos
or
stos
add
popf
adc
out
ja
jno
call
daa
adc
push
cmpsl
add
pop
out
add
sub
mov
sub
and
pop
cmpsl
cmp
jnp
cli
push
inc
xchg
xlat
lds
sbb
addl
xchg
clc
mov
or
fnstcw
mov
mov
and
push
fxch
outsb
stos
push
cmpsb
stos
add
mov
pop
test
shrb
mov
jno
add
push
cld
jmp
data16
in
push
arpl
pop
and
stc
xchg
sti
shl
adc
mov
outsl
jo
dec
xor
mov
sar
nop
movsl
or
addr16
sub
repnz
mov
inc
add
jmp
loop
enter
mov
or
xchg
sub
test
gs
lahf
dec
push
pop
ljmp
cwtl
leave
fcmovnbe
inc
andl
push
xchg
fistl
mov
fwait
negl
icebp
loop
mov
sub
cmp
rclb
stos
pushf
pop
inc
add
popa
mov
repnz
jmp
mov
adcl
dec
and
orl
std
and
fnsave
scas
andl
adc
jge
pop
mov
mov
ja
movsb
imul
add
scas
mov
mov
xor
roll
mov
mov
orl
xor
js
aad
or
cld
mov
jnp
ss
mov
rol
data16
pop
add
fwait
or
cs
call
int
xorl
add
pushf
dec
lods
data16
stos
aaa
rcll
lcall
popf
cmp
inc
mov
test
sarb
das
data16
jmp
add
loopne
push
das
pop
mov
push
sub
sbb
les
test
pop
pop
sbb
mov
jmp
dec
and
int3
data16
cwtl
dec
fistpl
pop
jno
int
mov
add
add
add
xchg
in
ss
fimuls
stos
add
cmp
inc
or
repnz
jno
outsl
pop
sbb
pop
sbb
out
mov
add
and
adc
and
sbb
aas
dec
ret
or
mov
ds
pop
into
aam
aaa
inc
mov
rcr
inc
inc
in
lds
cmp
mov
outsb
imul
push
sub
test
iret
out
outsl
sub
mov
rcrl
inc
jecxz
xor
and
push
mov
stos
ret
cli
cmpl
pusha
push
aaa
sti
pop
sub
pop
inc
loope
pop
jl
xchg
int
dec
cmp
cltd
push
mov
pop
xor
xchg
stos
adc
dec
mov
inc
nop
ret
hlt
mov
xchg
jmp
lods
lret
cmp
cwtl
mov
dec
rcll
dec
jo
mov
jb
lcall
enter
sbb
mov
sub
adc
rcll
push
enter
hlt
rorl
out
fidivl
sub
fists
mov
add
mov
ss
pop
in
jae
subl
test
push
movsl
mov
leave
mov
scas
nop
cmp
push
xchg
loop
in
mov
mov
enter
xor
add
or
jge
jns
test
mov
xchg
jae
mov
movsl
stos
add
xchg
inc
mov
movsb
scas
aas
sbb
add
mov
cmp
lods
adc
jmp
lahf
adc
and
jmp
jl
call
add
cs
fists
dec
mov
xadd
insb
push
mov
jmp
jb
repnz
in
test
push
sbb
adc
lahf
orl
mov
sbb
jle
push
mov
sbb
fnsave
mov
stos
sbb
pop
test
adc
out
pop
inc
cmp
push
fneni(8087
or
icebp
pusha
jbe
cmpl
data16
scas
push
mov
mov
sbb
addr16
add
inc
aad
int
push
cmp
dec
sbb
jae
arpl
iret
in
mov
xchg
lahf
aam
jno
jne
lret
and
mov
jecxz
sub
insl
push
add
test
std
mov
das
mov
lcall
xchg
in
adc
int3
mov
stos
jge
data16
outsl
mov
arpl
cmpsb
pop
movsl
xchg
pop
push
and
xlat
cmp
push
stos
xor
cmp
popa
jb,pn
subb
fstps
cld
jae
stos
jnp
sub
dec
inc
xor
pusha
mov
push
fwait
xchg
pushf
jae
call
mov
icebp
mov
sub
pusha
add
push
cmp
mov
and
test
mov
add
xchg
add
cli
cmp
dec
inc
into
dec
inc
test
mov
push
pop
cmc
in
push
or
pop
mov
adc
pop
dec
jo
inc
lret
mov
imulb
pop
or
sub
and
movl
sbb
sbb
jnp
add
ss
mov
pop
lret
xor
sarl
lods
add
dec
out
jmp
inc
pop
out
mov
xchg
mov
mov
mov
cmp
sub
lods
es
mov
push
or
int3
js
mov
fsubrs
sub
push
jne
mov
out
out
mov
fsts
xor
sbb
jb
jb
out
mov
and
sub
in
dec
cmpsb
push
mov
repz
in
adc
push
lcall
xor
xor
pop
mov
daa
and
pushl
int3
out
and
dec
mov
cmp
xor
sbb
cmpsb
fsubl
mov
cmp
and
nop
cwtl
aas
lcall
aaa
stos
sub
xchg
inc
aam
dec
out
dec
mov
jmp
in
daa
mov
rclb
sar
scas
or
in
sbb
insb
mov
xor
xchg
xchg
sbb
test
dec
sub
loope
xchg
sbb
scas
stos
andl
int
dec
stos
gs
mov
out
sti
sub
repz
stc
mov
icebp
fsubs
ficompl
mov
fmull
stc
mov
xchg
adc
out
test
and
call
or
mov
or
pop
mov
js
outsl
cli
mov
lret
cmp
inc
add
add
jnp
ja
sbb
pop
xor
push
push
ja
fwait
mov
push
scas
push
aas
stos
jl
movl
aas
xchg
in
scas
mov
push
ret
orl
xor
clc
or
hlt
in
push
loopne
mov
jno
inc
idivb
and
leave
shl
xor
cmp
mov
daa
push
jnp
fisttps
insb
scas
ret
jmp
mov
dec
push
jbe
ljmp
in
adc
es
xlat
push
pop
lods
sbb
ror
xor
sbb
mov
ja
xchg
mov
pushf
mov
in
imul
movsl
rclb
mov
shlb
mov
adc
idivb
nop
and
mov
pop
test
cmpsb
add
out
roll
jle
subb
and
shufps
sti
pop
mov
pop
rorb
xorb
cmp
sti
in
pop
les
sub
mov
fcompl
adc
popa
pop
loope
jge
or
outsl
enter
dec
jmp
sbb
cld
in
adc
add
out
idiv
mov
icebp
es
mov
cmc
insl
test
adc
pusha
add
aas
or
popf
iret
xchg
jp
push
cmp
xor
mov
sbb
gs
mov
adc
test
lret
fsubrl
jl
sbb
dec
and
adc
and
push
jp
imul
jnp
aas
movsb
jecxz
pop
iret
rorl
cmp
lock
push
sahf
aad
push
mov
push
or
add
jmp
jns
sbbb
repnz
sahf
sahf
mov
jb
movsb
add
test
push
orl
movsb
bound
pop
outsl
pusha
jne
aas
push
pop
out
enter
rorb
movsl
xchg
mov
bnd
pushf
mov
mov
jl
ljmp
into
add
js
or
pop
add
mov
xchg
inc
shl
sub
sub
fwait
pop
sub
negb
push
out
mov
cmc
pushf
fstpt
lretw
out
jle
push
jmp
adc
outsb
mov
sbb
stc
sti
repz
jg
lods
test
adc
inc
mov
sbb
jo
inc
jg
xchg
lcall
adc
cmp
cmp
loop
inc
fisttpl
jle
dec
out
dec
adc
mov
in
cmc
mov
lods
sbb
mov
addr16
inc
orb
outsb
bound
push
or
xchg
pop
pop
mov
cmp
int3
inc
out
test
inc
subl
sub
in
xchg
aaa
sub
inc
rorb
adc
les
jp
mov
imul
scas
stos
push
push
push
inc
jmp
inc
sti
mov
push
mov
fwait
cmp
sti
fimull
dec
lds
mov
aas
add
ljmp
inc
in
rolb
outsb
cmp
mov
xor
mov
xchg
incb
dec
and
jne
lds
fistpl
mov
cs
mov
xchg
push
xchg
jae
adc
cmp
movsl
and
andl
mov
add
pop
xchg
inc
xor
in
jl
test
push
add
jmp
mov
pusha
fildl
xor
test
fstl
nop
cmp
add
adc
mov
pop
cmp
and
lock
lds
fistps
popf
aad
sti
lock
mov
push
jge
push
pushf
inc
sbb
jle
mov
adc
xchg
mov
fildl
mov
add
aam
add
mov
fcompl
out
out
fdivl
rol
pop
outsb
in
loop
cmpsl
dec
shl
es
push
aas
pop
mov
imul
lcall
jle
dec
loop
popa
das
push
mov
jae
sbb
lock
xchg
ljmp
pop
mov
popa
jge
loop
test
add
call
repz
inc
movsl
js
data16
push
movsb
mov
and
pop
fchs
mov
mov
movsl
test
sbb
mov
es
sub
xor
inc
sbb
sbb
in
and
xchg
jne
mov
pop
jecxz
lcall
sub
pop
cltd
negl
lret
stc
mov
in
aaa
ds
mov
push
imul
inc
pop
mov
mov
js
pop
mov
sub
fldl
in
enter
movsb
les
dec
cmpsl
testb
dec
inc
loope
add
ficoms
lock
jl
dec
dec
div
xchg
in
cmp
enter
xlat
fcom
adcb
dec
dec
jle
mov
mov
and
mov
test
imul
push
mov
add
sub
xor
cltd
and
pop
or
popa
push
push
jns
movsb
aad
adc
ss
dec
sub
or
cmc
sbbl
mov
add
pusha
cmpsb
and
out
add
push
arpl
add
sbb
lods
icebp
adc
sbb
int3
scas
inc
dec
pop
mov
mov
in
aas
cmpsb
push
add
dec
and
pop
dec
inc
dec
rol
fcompl
stc
push
cmp
jb
or
es
push
lahf
mov
or
adc
mov
sub
and
lock
push
xchg
lahf
push
pop
sub
mov
add
pop
push
pop
sbb
cmp
ja
add
inc
pop
xor
dec
inc
stc
jle
mov
and
gs
popa
out
test
nop
push
xor
pop
movsl
jo
xor
int3
xchg
ljmp
push
repnz
mov
mov
mov
xchg
add
and
push
push
adc
repz
fwait
push
add
mov
mov
xchg
enter
aaa
lods
jmp
loope
movsb
data16
push
scas
das
jae
add
push
xchg
pop
mov
outsl
insb
mov
jae
xchg
push
call
push
stos
aam
lcall
iret
mov
sahf
pop
or
mov
ljmp
ljmp
fisubs
sub
mov
clc
sub
jmp
mov
push
adc
add
gs
movb
dec
ret
in
jb
sti
dec
sbb
ds
out
xor
adc
mov
add
sub
cwtl
loop
pop
adc
add
outsl
cli
sub
subb
je
out
sub
push
addr16
sbb
adc
jmp
aad
cmpsb
test
daa
insl
jo
and
outsl
in
rclb
push
inc
movsl
loopne
sbb
imulb
imul
adc
inc
js
xor
daa
push
pop
fsqrt
fistpll
mov
adc
or
negb
and
inc
leave
outsb
test
push
mov
sub
push
scas
jo
xchg
clc
mov
mov
aas
push
and
or
shrl
out
cmc
in
xor
leave
jmp
push
cmp
cltd
rcrb
filds
dec
out
cmpsl
outsl
outsb
int
mov
aad
les
jno
xchg
cmpsb
in
sahf
jg
aaa
mov
cmpl
stc
xor
cwtl
push
cs
imul
sbb
add
testb
add
ffree
lods
add
out
cmp
or
xor
jnp
or
inc
ss
fisttps
in
mov
rcl
out
mov
jmp
outsl
aad
sub
out
pushf
xchg
and
sbb
popa
mov
idiv
or
sbb
je
dec
f2xm1
cltd
or
out
push
sahf
fdiv
pop
xor
xchg
std
jne
data16
cmp
dec
addb
cmc
stos
incb
aas
jecxz
lods
addr16
jno
jnp
xlat
fs
and
arpl
mov
ja
aaa
mov
aaa
mov
ja
fs
mov
in
mov
cmp
pusha
jp
insl
dec
inc
adc
mov
rcl
jnp
int3
stos
push
cs
pusha
and
movsl
enter
outsl
cmp
push
push
and
loopne
pop
ret
imull
and
adc
repz
aaa
xor
es
lret
add
pop
xchg
ds
rcrb
pop
pop
pop
inc
flds
stos
cmpsb
ds
lret
inc
fiadds
fcmove
push
nop
xor
inc
or
mov
outsl
sub
sarl
sbb
repz
iret
outsl
or
sti
rorl
pop
jmp
adc
iret
mov
and
xchg
insb
mov
xchg
cmp
arpl
divl
sbb
xchg
fisttpll
dec
xchg
xadd
fs
out
mov
shrl
jo
push
sub
stc
sub
test
push
xor
inc
dec
mov
das
mov
pop
xchg
js
and
fs
mov
ljmp
loopne
mov
dec
fsubl
aas
icebp
push
out
inc
in
roll
hlt
jns
jge
aas
or
jns
mov
sbb
and
xchg
insl
pop
sti
jbe
pop
dec
ja
or
xor
jmp
cwtl
jecxz,pt
push
cltd
cmc
shl
jg
jae
jnp
ret
push
adc
int3
pop
pushf
inc
mov
jb
les
adc
adc
mov
enter
xchg
scas
outsb
std
sbbl
pop
mov
enter
mov
dec
std
pop
mov
mov
mov
addr16
and
pop
arpl
lar
sbb
pop
shl
xchg
or
inc
loopne
popa
sbb
lock
push
inc
mov
cmp
jb
pusha
or
xchg
pop
repz
lods
notb
mov
out
pop
mov
loope
aam
int3
sub
mov
js
lock
pop
outsb
xchg
or
pop
cltd
ljmp
mov
xchg
add
dec
jnp
push
pop
jne
data16
les
int
out
insb
or
adc
mov
dec
mov
outsb
decb
sbb
aam
popf
cwtl
lahf
inc
js
inc
pop
outsl
mov
add
xor
movsb
xchg
in
jns
cld
stos
lock
adcl
icebp
push
jge
sbb
cmp
fs
xor
fldl
push
lods
mov
add
mov
aam
cli
jge
sub
outsb
aaa
adc
or
cmpsl
sbb
call
sti
cmp
inc
add
push
stos
fiadds
add
sahf
pop
mov
in
sbb
xchg
out
out
add
or
sub
mov
add
pop
inc
mov
sar
jmp
and
xor
insl
repz
out
push
fnstenv
add
lods
test
xchg
popa
loopne
test
js
xchg
mov
mov
clc
mov
stos
mov
xor
mov
push
scas
in
movl
adc
sahf
shrl
fildl
ja
jae
enter
out
dec
push
dec
dec
pop
movsl
cmp
add
fsts
fcoms
out
movsl
push
jge
nop
mov
or
cmp
push
jp
or
inc
leave
std
inc
mov
mov
push
or
dec
mov
adc
push
out
loopne
pop
stc
jo
adc
ja
inc
cmp
repz
cmpsb
sahf
jb
push
popa
in
push
leave
hlt
insl
cli
push
imul
negl
mov
fcompl
inc
xchg
and
aad
arpl
xchg
xchg
stos
inc
add
mov
cld
cmpb
in
sub
mov
std
and
fidivrs
ss
adc
sbb
cmpl
mov
or
in
inc
sub
pushf
sub
sub
cmp
out
repz
or
cmpsl
sti
imul
and
jb
aaa
mov
jge
add
icebp
pop
and
cmp
aad
stos
dec
push
data16
mov
in
push
mov
pushf
pop
inc
test
jbe
mov
cmc
mov
push
insl
sbb
jnp
sbb
enter
or
movsb
stc
cli
hlt
adc
loope
dec
outsl
mov
fwait
cltd
xchg
cmp
mov
mov
sahf
cltd
mov
add
fimull
add
aaa
cs
inc
add
jnp
imul
aaa
sbb
push
test
sahf
test
jns
das
dec
lea
aaa
imul
inc
loope
mov
sbb
clc
jle
adc
pusha
dec
mov
or
add
sbb
stos
fwait
push
cli
xor
into
cmpl
enter
sub
push
mov
jno
cmpsl
ss
and
add
xchg
dec
into
je
and
icebp
cmp
push
pop
add
mov
inc
test
jp
sbb
xor
jnp
clc
push
push
inc
xlat
add
cs
mov
pop
sub
jecxz
xchg
inc
xorb
sbb
movsb
fisubrl
pop
or
cmp
call
mov
aam
stc
or
dec
stos
std
insb
pop
pusha
jg
cli
mov
aad
aas
jmp
enter
or
mov
loopne
stos
jmp
mov
adc
dec
add
nop
ror
jle
xor
or
mov
int
or
xchg
in
and
cs
mov
fs
cmc
ljmp
movsb
das
cmpl
push
lret
xlat
and
adc
ficoml
ja
adc
cs
pop
outsb
pop
xchg
add
mov
or
adc
iret
pop
add
outsb
mov
lahf
mov
sbb
adc
rol
xorl
sbb
scas
sub
xor
push
movb
rolb
pushf
cmp
jl
xor
mov
scas
mov
in
insl
call
repnz
leave
out
push
sbb
outsl
cmp
push
jns
pop
imul
lods
mov
cli
mov
jb
movsl
sbb
lods
jg
scas
jg
dec
xor
subl
inc
iret
aaa
or
out
jmp
jecxz
or
mov
jp
cmp
mov
fidivrs
jg
aam
sar
rcrl
xchg
jge
mov
insb
push
sub
clc
fnsave
jle
fadds
adc
adc
mov
push
inc
sbb
je
push
mov
xchg
jl
lahf
xchg
jns
pop
out
scas
jbe
ja
xchg
xchg
pop
outsl
outsl
stc
push
mov
jg
out
push
js
scas
or
test
jnp
dec
push
call
out
dec
and
pop
jl
cwtl
imul
cmc
mov
xor
movsb
imul
mov
pop
push
in
aaa
rorb
outsb
sub
dec
dec
fs
fdivs
mov
hlt
jns
sbb
push
bound
mov
hlt
insl
cmp
call
insb
mov
xchg
iret
pop
aaa
inc
cmp
out
loope
dec
data16
aad
xor
and
cmp
sbb
in
xchg
cli
pop
jo
rorb
or
xor
movsl
or
dec
jnp
insb
cs
out
ror
lods
clc
mov
repz
mov
mov
add
and
out
dec
popf
inc
inc
cmp
cmp
adc
cld
cltd
loop
mov
movsb
out
jbe
jo
mov
lahf
mov
push
insb
test
inc
popf
push
pusha
test
arpl
xlat
inc
int
mov
pop
jge
jo
jg
mov
mov
cmp
pop
fnstsw
popa
je
jle
pop
loope
pop
int
jb
stos
dec
inc
in
mov
popa
mov
enter
ss
xor
shlb
jb
sub
adc
adcb
es
lahf
add
in
xchg
and
mov
cmc
cmp
out
icebp
stos
cmpsb
int
insl
cld
cmp
std
xchg
mov
ret
lock
lret
stos
adc
bsf
lods
jle
mov
repnz
aam
adc
es
sahf
lods
out
add
inc
pop
repz
fistl
enter
mov
mov
push
mov
cmp
into
xchg
or
imul
cmp
rcrl
or
outsb
mov
jno
sarl
mov
out
jg
jo
mov
movsb
add
ss
cltd
in
push
jle
es
filds
fiaddl
and
mov
neg
ds
mov
sub
push
shrb
jnp
dec
in
mov
lock
push
push
lds
popa
push
or
nop
dec
bound
inc
popf
inc
mov
mov
and
jae
arpl
add
mov
xor
loopne
test
mov
dec
mov
out
dec
mov
push
inc
xor
sub
outsb
loope
enter
icebp
pop
cmp
shll
aas
mov
inc
adc
es
or
fs
xor
mov
sahf
je
inc
and
mov
or
hlt
test
push
aam
clc
adc
pushw
push
mov
xchg
and
xchg
jg
aaa
fidivl
nop
icebp
jo
mov
cltd
xlat
aaa
js
fisttps
push
pop
mov
or
lods
sub
movsl
add
jmp
cwtl
aad
or
lods
repz
rclb
and
mov
nop
shlb
inc
push
adc
push
pop
aaa
imul
aas
push
or
pop
sbb
push
jge
pop
inc
in
dec
rolb
push
aaa
scas
aas
or
xorl
fists
loop
call
icebp
shlb
adc
nop
xchg
and
cmpsl
mov
movsb
jmp
mov
push
pusha
pop
incb
pop
and
push
rolb
aad
mov
add
mov
bound
sarl
movsl
in
xlat
push
push
pop
sti
xchg
mov
popf
push
loopne
neg
lea
push
addr16
cltd
pop
jns
mov
fldl
fsubrl
arpl
sub
xlat
sti
pop
je
jle
mov
jmp
inc
rcrb
or
or
sbb
jnp
mov
aaa
add
push
sbb
leave
push
dec
fcmovu
xor
rcrl
gs
std
std
or
jbe
dec
es
mov
mov
lahf
pushf
es
enter
int3
je
pop
pushf
out
lret
add
pusha
cmpsb
sbb
scas
fisttpll
push
mov
dec
ret
push
xchg
jo
scas
shlb
call
mov
test
testl
loop
xchg
testl
pop
add
pop
enter
or
inc
rclb
outsb
lcall
sbbb
popa
push
enter
xchg
jno
stos
jb
cld
xchg
push
daa
bound
cltd
je
xor
jnp
ret
mov
dec
mov
addr16
adc
cmpsl
jb
jnp
mov
ja
sub
js
mov
das
repnz
push
sbb
dec
cld
and
xor
movsl
push
xchg
push
inc
test
shr
aad
lea
bound
mov
fidivrl
mov
add
push
cwtl
adc
jne
cmc
mov
and
fildl
xor
push
mov
sub
pop
ljmp
or
add
imul
daa
imull
imul
lret
call
aam
mov
xchg
add
dec
xor
xor
jnp
or
mov
cmc
stos
inc
lahf
rcll
mov
cmp
hlt
aad
xchg
clc
cmp
pop
loope
push
xchg
sub
xchg
outsl
addl
jge
xor
xchg
xorl
fisttps
out
mov
ret
pop
rcr
dec
mov
sahf
and
fwait
push
out
ja
inc
adc
jecxz
and
add
xor
dec
inc
mov
data16
adc
ds
out
pop
mov
in
testb
inc
cmp
out
mov
mov
sbb
jg
addr16
push
add
fisttps
pop
jmp
stc
out
mov
fwait
fwait
jnp
pop
push
sbb
pop
jne
mov
push
loope
dec
subl
push
xor
rorl
popa
inc
push
repz
mov
js
int
jge
xchg
xor
shlb
mov
ss
leave
pop
push
lret
mov
loopne
into
pop
xchg
push
jbe
les
dec
cmc
mov
aad
xor
push
or
sar
sub
ret
cli
scas
mov
fs
call
cmp
shlb
adc
loop
mov
and
pop
ss
mov
addr16
cmpsl
imul
lret
jbe
imul
jle
les
jb
push
pusha
add
or
mov
jnp
sbb
or
jae
fcompl
jbe
push
sar
cwtl
fwait
mov
es
xor
inc
add
mov
insb
xlat
hlt
int3
ret
push
test
mov
in
adc
push
jnp
lock
sti
mov
and
pop
sahf
in
push
jecxz
jg
xchg
sbb
pop
push
or
add
inc
in
fwait
jge
call
inc
in
in
aas
movsb
pop
inc
mov
pop
pop
push
and
jne
push
cmp
mov
inc
mov
mov
cltd
sub
adc
clc
dec
adcl
xchg
cmp
scas
in
scas
sbb
je
and
fwait
lea
in
enter
ljmp
mov
daa
out
inc
sti
mov
out
stos
and
shll
scas
pop
in
jbe
scas
sub
jo
aad
sbb
mov
mov
cmpsb
test
and
test
push
shr
push
rolb
jae
jne
jp
push
mulb
test
mov
push
push
push
hlt
outsb
add
pop
into
and
or
jno
xchg
dec
mov
xor
shlb
in
test
icebp
sbb
xchg
mov
aas
pop
cmp
xchg
or
mov
mov
sbb
push
popa
es
sbb
repz
adc
push
cli
jmp
fstpt
pop
add
inc
lret
mov
jb
js
dec
pop
sar
push
pusha
xlat
xor
inc
aam
jo
mov
mov
movsl
inc
jmp
std
mov
ljmp
inc
fcmovbe
in
pop
sub
jl
add
xchg
std
call
pop
jecxz
pop
mov
inc
lret
and
push
cmpsl
cmp
pop
push
push
ret
hlt
push
xor
outsb
ljmp
mov
and
jo
xchg
cld
fstl
lds
ficoms
mov
cmp
std
ds
rorl
sarl
dec
xor
or
daa
jecxz
push
and
mov
sub
test
enter
sahf
stos
mov
out
frstor
push
inc
mov
daa
arpl
or
mov
lcall
mov
es
sbb
mov
xor
jge
cmp
push
movsb
popf
repz
pop
cmpsl
cmpl
sbb
jbe
push
or
jl
fdivs
enter
fnsave
sarl
scas
cmp
daa
jge
or
sahf
js
lahf
fs
push
insb
dec
pop
mov
or
ja
lcall
scas
pop
out
mov
popf
fsubrl
push
or
popa
movsb
iret
std
fcmovnu
adc
jns
xor
push
sarl
sti
fildll
push
dec
nop
push
mov
js
mov
cmc
or
push
test
mov
mov
inc
movsl
aaa
inc
into
xchg
and
pop
jge
lret
ds
jmp
test
shlb
pop
pop
mov
dec
dec
inc
or
add
iret
test
push
push
jge
negl
sti
ret
ja
pusha
push
enter
add
cltd
imul
aam
aaa
jl
add
icebp
out
lea
lret
in
mov
shr
popa
push
cmc
push
cmp
stc
enter
test
push
and
lret
mov
ljmp
rcrb
sub
arpl
sub
enter
stos
loope
dec
fnstsw
xchg
fistps
movsl
into
xchg
push
in
out
adcb
push
mov
push
mov
je
xchg
mov
out
jo
pop
jl
lret
mov
repz
fcompl
aaa
add
aam
data16
gs
cli
sbb
adc
push
fwait
xchg
jo
xor
xor
jmp
and
jb
sbb
faddp
cwtl
jbe
fwait
clc
dec
aaa
aas
cmp
pop
inc
sbb
cli
push
inc
jmp
int3
pop
shr
iret
add
ds
push
addr16
imul
cmp
add
cltd
adc
pop
lcall
mov
push
push
xor
jle
in
sbb
dec
ror
outsb
adc
out
in
pusha
xor
addr16
iret
adcb
and
movsb
fsubrl
dec
mov
mul
mov
hlt
outsl
pop
push
mov
test
mov
push
jle
gs
cmpsb
push
jp
repz
fs
pop
pop
inc
sarl
adc
loope
dec
inc
mov
dec
loop
push
mov
sahf
testl
test
outsb
cld
push
lahf
push
inc
jle
inc
out
dec
mov
in
lcall
in
cmp
inc
in
lock
shlb
movsb
jne
ficoms
outsl
dec
mov
iret
dec
or
push
or
jb
sub
xor
adc
dec
testl
cmp
cmp
nop
lret
repz
xchg
cmp
imul
sbb
or
bound
out
in
daa
cmp
fcomps
out
inc
outsb
stc
les
add
idivl
or
fmul
adc
pop
adc
jne
test
rcrl
add
mov
ds
ret
push
in
add
push
ror
mov
inc
xlat
repnz
movsl
mov
or
sbb
ljmp
xor
test
dec
cltd
pop
out
mov
mov
add
out
mov
test
pop
dec
loopne
mov
imul
test
leave
jle
ljmp
sub
or
orl
test
adc
adc
stc
stos
js
mov
and
pop
pop
fsubl
pusha
cmp
aad
sti
jnp
jo
add
imul
cmc
cmc
mov
sub
cmp
or
in
out
mov
aad
jl
pop
cltd
jae
mov
mov
lock
add
jnp
or
int
addb
repz
rorl
jge
inc
pop
test
xor
fs
call
and
mov
xor
cmp
sub
jb
or
pop
ss
add
cmp
arpl
push
push
testl
mov
loope
mov
je
mov
xchg
sahf
jmp
inc
int
mov
faddl
jno
movsl
cmp
aam
push
sbb
cltd
insb
and
testl
stc
out
cmpsl
lahf
inc
stc
in
insb
cmp
fists
stc
popa
jg
jnp
xchg
stos
int
add
jmp
mov
mov
dec
adc
test
lods
dec
aas
scas
adc
repnz
add
shrb
in
jecxz
dec
adc
orb
cmpsl
outsl
lods
dec
lock
mov
add
fisttps
sbb
cmp
push
pop
pop
adc
dec
jb
mov
pop
stos
pop
lcall
and
loope
scas
pop
test
ret
icebp
shrl
cmp
mov
mov
or
push
test
stc
push
aad
adc
mov
and
jbe
movsl
jne
cwtl
lods
pop
inc
in
pop
and
les
jmp
sbb
xchg
sub
movb
adc
jbe
aaa
push
dec
test
js
push
cmp
stc
int
fldcw
mov
out
movsb
in
or
inc
add
jno
pop
mov
mov
pop
sbb
popf
sarb
mov
cs
icebp
cli
inc
outsb
mov
xlat
inc
lret
popa
fdivs
fmull
mov
sarb
rclb
mov
fwait
outsb
pop
dec
sub
jp
hlt
mov
subl
push
cmc
out
adc
inc
sub
sub
jmp
jmp
scas
pop
out
scas
cmp
inc
stc
push
jecxz
push
shlb
jne
inc
in
xor
hlt
aaa
mov
mulb
fnsave
jbe
sub
inc
scas
inc
pop
sub
cmp
cmp
je
out
mov
add
call
fwait
mov
out
push
add
push
fiaddl
scas
push
pushf
push
xchg
xor
pop
mov
xchg
lods
inc
inc
mov
cwtl
lods
jl
imul
cmpsb
int
outsb
add
jo
mov
dec
inc
mov
lods
push
and
sbb
out
mov
movsb
mov
ret
fs
jno
mov
mov
popa
lds
scas
ret
aas
xor
mov
xor
insb
xchg
shll
nopl
pushf
call
inc
int3
pop
cmc
sbb
mov
or
scas
rcrb
or
stc
ds
lods
dec
scas
cwtl
cmc
pop
loopne
nop
or
add
add
in
pop
cmp
fs
outsl
nop
push
mov
popf
cmp
popf
cmpsl
xor
fistps
pop
das
aad
mov
dec
mov
fcompl
sub
repnz
ja
mov
loope
sbb
mov
lcall
mov
adc
mov
sbb
shll
aaa
cmp
xor
shlb
push
cmp
lods
subl
lcall
sub
dec
test
or
pop
mov
jbe
jmp
in
hlt
clc
pushf
insl
mov
cli
std
xchg
add
pushf
or
xchg
mov
mov
out
jne
stos
or
ja
je
fisubrs
mov
repnz
mov
push
test
jle
xor
rcrb
xchg
push
ja
jnp
mov
das
pop
jno
fisttpll
je
cmp
mov
imul
mov
mov
or
ljmp
mov
lds
xchg
jecxz
adc
ss
sbb
lock
xchg
pop
in
jg
jle
movsl
shll
mov
xlat
push
ljmp
xchg
je
data16
stos
lock
in
jg
lock
adc
jb
inc
inc
addr16
das
std
xchg
jmp
sub
sti
xor
inc
jns
ret
leave
stc
scas
push
jnp
aad
sbb
mov
push
mov
xchg
mov
add
lock
sub
scas
lods
call
add
ja
sub
loope
das
mov
aaa
repz
dec
sub
int
jp
imul
sbb
mov
fldenv
sbb
test
imul
mov
das
js
sbb
int
sbb
xchg
scas
or
loope
and
addb
mov
pop
xchg
sti
pop
in
jo
rcrb
imul
int3
insl
jge
imul
inc
outsl
dec
mov
xor
add
inc
sbb
push
push
cwtl
adc
divl
sbb
mov
sub
stos
jns
pusha
lods
aas
loop
bound
or
push
pop
inc
mov
in
movl
xor
imul
pop
imul
stos
pop
bound
xor
leave
cmp
loop
cmpb
lds
ja
fnstenv
mov
or
cmp
cmp
cld
movl
and
xchg
mov
sbb
fcompl
push
loope
stc
mov
mov
mov
sub
mov
or
pop
pop
sar
outsl
movsl
nop
loop
inc
inc
jmp
cmpsb
sbb
test
inc
or
push
and
dec
sub
stos
clc
leave
pop
jns
jl
je
mov
sbb
xor
pushf
ret
ret
lods
into
rep
inc
mov
inc
xchg
sahf
ja
sbb
out
jmp
mov
sub
jg
cmp
inc
hlt
cmp
jg
dec
sub
sar
out
push
jge
icebp
data16
push
pop
push
sub
pop
add
inc
jae
aas
mov
aad
das
stc
movd
ss
iret
loop,pt
lcall
cmp
insl
sub
movsl
loope
push
jne
and
pop
outsl
xchg
mov
mov
push
inc
fisubrl
adc
sahf
xchg
stos
leave
test
mov
mov
aas
xor
mov
lods
arpl
gs
xchg
sbb
jne
jnp
ljmp
in
aaa
lds
testl
dec
inc
cli
in
mov
inc
dec
mov
add
repnz
push
jnp
enter
jmp
push
mov
notb
int
add
xlat
xchg
stc
fs
in
shll
and
mov
js
push
cmpl
stos
notl
mov
imul
pop
lahf
sub
or
dec
xor
push
xchg
push
adc
daa
frstor
enter
push
jg
negb
setnp
adc
push
xlat
lahf
mov
xor
pop
or
movsl
fwait
jno
jb
bound
and
push
xchg
fldl
adc
xlat
rorl
pop
mov
sbb
fcompl
mov
nop
xchg
not
sbb
and
adc
pop
push
js
and
jmp
lret
push
les
mov
cmp
aam
add
xchg
pop
adc
dec
or
sub
or
loopne
sub
repz
push
lods
jbe
fistl
loop
jb
jae
jae
and
ss
xor
stos
push
xlat
xor
sbb
icebp
xchg
push
insl
or
lret
inc
fnsave
or
ret
clc
mov
sbb
ds
loop
imul
or
in
dec
out
out
push
loopne
das
mov
lahf
push
movsb
cld
ja
sub
mov
rclb
inc
dec
sbb
lret
out
push
push
daa
movsl
push
add
lea
test
push
push
and
and
std
orb
test
imul
test
out
sub
xchg
daa
daa
pop
gs
sbb
xor
sub
cmp
sbb
cmp
xchg
sub
sbb
mov
jns
inc
cmp
xor
mov
in
out
shrb
jbe
nop
popf
and
dec
push
cld
cmp
dec
sub
sahf
imul
pop
jmp
jle
lds
fstpl
scas
xchg
xchg
roll
fisubrs
pop
xchg
lret
xchg
in
fcomps
fsubrs
lods
popa
stc
pop
inc
loope
frstor
mov
jns
ljmp
dec
mov
jle
add
inc
or
pop
xlat
mov
mov
stc
iret
iret
ret
mov
jecxz
icebp
lock
stos
xchg
popa
divb
and
test
scas
lods
cmp
jae
pop
cwtl
sbb
in
ss
int3
push
test
and
cmc
adc
jbe
sbb
push
lods
pandn
iret
xor
aad
push
std
movsb
pop
stc
xchg
inc
mov
cmc
fidivs
lea
arpl
fwait
jge
rclb
jbe
pop
jge
push
inc
add
sbb
stc
test
out
ja
fisubrl
mov
jae
les
jno
mov
add
push
sub
cmpsl
rcrb
fsubrs
les
inc
imul
dec
or
push
or
dec
add
cwtl
sti
push
repnz
push
aas
mov
mov
sbb
testb
mov
fwait
stos
jbe
mov
xchg
outsl
fcmovbe
jbe
pop
fwait
stos
or
mov
mov
daa
push
jnp
fs
and
addr16
xchg
shll
aam
sahf
inc
add
cmp
outsb
dec
mov
scas
push
mov
hlt
iret
mov
add
test
add
lret
mov
pop
jo
imul
lcall
pop
adc
cmp
aas
aad
mov
inc
jle
enter
push
pushf
cmc
xor
shl
xchg
data16
ret
push
pop
repz
lds
sarb
mov
lcall
mov
hlt
in
xor
rclb
xchg
jbe
mull
mov
bnd
mov
push
test
bnd
addr16
imul
sahf
xor
popa
push
cld
push
xlat
mov
add
jle
aad
or
cmpsb
sbb
push
xchg
inc
aad
in
and
outsb
sbb
sbb
imul
int
ds
out
adc
mov
je
sbb
and
sti
add
adc
mov
out
add
gs
sbb
out
and
pusha
les
lds
repz
dec
cmp
jge
fstpl
sti
adc
xor
adc
fisubrs
sbb
push
sbb
lods
das
and
mov
mov
inc
mov
cmp
adc
inc
lods
pop
jmp
sarl
repz
adcb
repnz
sbb
ret
mov
inc
aas
mov
jmp
sub
sbbb
sbb
jno
push
ficompl
cmp
dec
dec
imul
dec
mov
ljmp
imul
insb
iret
imul
cli
jnp
sub
and
nop
ds
xor
lds
test
fldt
lret
call
decl
xlat
outsl
add
mov
cltd
sbb
mov
mov
insl
sbb
int3
insl
push
push
xchg
and
push
lret
or
loop
insb
out
lret
imul
lea
pop
sarl
push
xor
jnp
addr16
dec
mov
add
cltd
mov
mov
jp
sti
into
cwtl
int
sbb
xchg
pushf
dec
sub
cmc
sbb
or
sbb
lret
ja
dec
dec
add
jnp
adc
stc
inc
jmp
inc
push
inc
loopne
out
mov
lds
lret
fisubrs
mov
sub
push
inc
xchg
mov
dec
xchg
ficomps
lret
jno
outsb
int
mov
mov
je
fisubl
sti
icebp
insb
add
aas
xchg
sahf
popf
je
pushf
jl
adc
mov
add
sub
loopne
in
mov
fmull
cmp
les
push
mov
jmp
dec
cmp
mov
enter
loop
or
ret
in
adc
stos
cld
xor
xchg
test
jnp
mov
cmp
dec
sti
xchg
iret
mov
scas
or
add
or
push
cmpsl
adc
push
inc
push
dec
adc
add
mov
push
cmp
movsl
pop
rcr
or
inc
dec
xorb
mov
pusha
mov
xor
test
ror
push
popf
mov
mov
jl
fidivs
pop
fsubs
jbe
stc
add
fs
cltd
hlt
nop
push
aam
aaa
arpl
leave
jg
jo
clc
popa
rorb
jle
sarl
lods
cmp
cli
stc
rcrb
int
imul
mov
pusha
adc
xchg
push
pop
ljmp
mov
push
and
std
cmp
cmp
shrb
sahf
imul
dec
mov
and
inc
pop
das
dec
test
push
or
mov
iret
imul
push
xor
stos
jbe
push
fdivl
sub
jl
adc
xlat
in
jg
pop
mov
std
lea
sahf
loopne
pop
and
sub
enter
push
lock
xor
loop
jbe
jmp
hlt
mov
mov
xchg
sbb
loop
mov
mov
pusha
movsb
icebp
popl
adc
mov
lcall
repnz
test
inc
or
pop
push
mov
fwait
out
pusha
test
cmp
xchg
in
add
sbb
jo
lock
add
sahf
xor
mov
mov
and
inc
xchg
push
mov
inc
ja
rol
pop
lret
pushf
mov
mov
pop
cmpsl
mov
push
std
in
cmp
dec
xchg
cli
pop
mov
nop
fsubl
pop
inc
pop
cmp
xor
pop
in
popf
sub
mov
aas
cmp
and
xchg
roll
adc
push
jle
loope,pt
fstl
mov
mov
lcall
jbe
je
ret
cmp
filds
das
ds
aam
or
mov
int
sbb
int3
aad
mov
push
dec
loopne
sbb
push
xchg
in
lods
push
mov
or
ljmp
sbb
mov
mov
outsl
cmc
mov
mov
or
lret
adc
out
or
in
mov
push
push
lret
popa
movsl
xchg
movsb
mov
jne
cmp
xchg
inc
xchg
lcall
ds
aas
fcomi
sti
popa
enter
lock
dec
xchg
xor
ss
mov
cltd
adc
daa
dec
popa
mov
dec
jne
nop
jns
push
dec
or
xor
cmp
pmulhuw
test
lods
test
lods
movsl
aad
fcom
cmp
gs
xor
xchg
dec
mov
gs
mov
mov
sub
jb
mov
js
andb
jne
aas
jle
enter
sti
pop
xchg
adc
outsl
xor
iret
mov
xchg
xor
mov
sbb
sbb
or
mov
dec
orl
cmp
loope
pop
pop
sub
add
add
pusha
lods
idiv
jno
jl
xchg
aam
hlt
stos
dec
push
rclb
mov
mov
imul
cmp
shll
mov
dec
dec
xchg
fstp
xchg
pop
bound
push
cmpb
repz
mov
in
adc
xchg
cmp
push
adc
jns
xor
mov
sbb
mov
ucomiss
aas
lret
pop
mov
shl
addr16
add
jb
pop
loope
sbb
jno
push
dec
loop
adc
mov
out
mov
addr16
jno
loop
das
and
xchg
mov
jae
sbb
cmp
iret
jnp
outsl
or
arpl
dec
fidivrs
testb
mov
xor
scas
push
xor
ds
jmp
inc
xlat
jb
std
fabs
dec
push
xchg
cli
imul
sbb
xchg
stc
sbb
loope
adc
adc
mov
mov
push
incb
cmp
pop
add
pop
rcrl
dec
or
fldt
fldcw
mov
xorl
sbb
xor
add
repnz
call
xor
call
movsl
ret
sub
pop
lahf
or
fwait
adc
test
mov
sti
fadds
cmp
scas
lret
test
lea
jbe
sub
push
push
cmp
inc
ja
fldt
aad
aad
xor
mov
xchg
lcall
xor
pop
add
pop
jne
jae
mov
inc
inc
mov
js
shll
popl
scas
cmp
xchg
xlat
adc
sbb
jae
jb
push
insb
sbb
add
or
jns
nop
fistps
lds
mov
push
hlt
aad
mov
mov
sub
add
mov
mov
mov
ret
jns
xor
in
jg
je
xchg
push
cltd
sbb
mov
loopne
add
cmc
divl
popa
pop
jecxz
dec
pop
cmc
push
mov
loop
movsb
adc
ja
jnp
ja
xchg
adc
insl
jge
lods
jmp
icebp
xor
xor
fdivrs
out
out
scas
sub
and
xor
imul
fsubl
lods
jb
in
sub
xlat
iret
clc
adc
jnp
push
jge
mov
xchg
les
jnp
or
stos
outsl
insb
cmc
pop
ja
mov
mov
scas
mov
test
xchg
or
pop
add
jmp
inc
nop
repnz
shl
mov
mov
sar
or
out
ljmp
fsubl
and
jns
mov
dec
add
lcall
scas
xchg
sbb
imul
and
pop
test
hlt
inc
sbb
je
mov
push
push
sub
rorb
stos
lods
jnp
loopne
mov
test
xor
rolb
es
cmc
adc
popf
sub
jnp
lret
and
cmp
jmp
inc
pop
lods
mov
out
jle
enter
test
push
push
cli
aam
cwtl
xchg
bnd
mov
inc
push
dec
js
adc
jne
cmp
orb
mov
mov
mov
aad
pushf
imul
sbb
add
push
gs
jno
popa
xor
add
jne
mov
dec
sub
jecxz
jb
cmp
leave
mov
dec
daa
pop
dec
popa
xor
xor
adc
lret
add
aaa
add
adc
mov
fsub
xor
in
mov
mov
mov
icebp
dec
push
push
xchg
test
add
movsb
xchg
insl
rorl
cmpb
mov
outsl
js
dec
push
in
stos
mov
cmp
rcrl
adc
mov
stos
cmp
mov
add
jmp
iret
add
add
aam
or
dec
gs
sub
fisttpll
mov
pop
repnz
enter
pop
hlt
jg
pusha
adcb
xor
jno
andl
mov
test
lock
sbb
js
scas
dec
adc
cli
sub
ja
sub
test
pslld
repz
xchg
dec
inc
jp
sbb
lcall
or
test
lcall
cmp
dec
int3
mov
push
test
sub
insb
lea
pop
inc
jno
or
push
jmp
das
xchg
and
in
xchg
shrl
mov
insb
ret
fimull
fdivs
fdivs
inc
out
push
imul
filds
addr16
mov
xor
xchg
push
pop
sub
sub
movsl
adc
ret
mov
inc
xchg
push
xor
push
hlt
xchg
ret
loope
xorb
push
enter
sub
rclb
dec
lods
cmc
cmp
iret
push
out
mov
ljmp
fcoms
js
mov
bound
jbe
add
mov
xchg
jle
or
hlt
pop
dec
mov
adc
pop
mov
add
xchg
test
in
in
lahf
xchg
loopne
repnz
push
cmpsl
jmp
xchg
mov
scas
dec
in
out
loopne
int3
jae
in
outsl
icebp
mov
pop
inc
add
nop
or
lods
and
rcll
loope
push
mov
push
adc
aam
movb
imul
cmpsl
ljmp
xchg
jnp
inc
fisubs
jp
imul
data16
fists
pop
clc
int
ja
jnp
imul
jo
es
in
mov
dec
incb
jo
push
bound
push
dec
mov
mov
stos
das
daa
jnp
js
xchg
mov
mov
push
roll
int3
mov
movsl
test
push
pop
or
out
push
adc
test
cmp
and
fwait
push
int3
popa
cmc
ret
data16
adc
inc
aaa
add
loopne
std
out
dec
push
xorb
shlb
shlb
mov
xchg
outsl
pop
cmp
nop
testb
cmpsl
jnp
aaa
sub
mov
ljmp
inc
pushf
mul
fcoms
ds
popa
movsb
imul
addr16
ja
and
xchg
arpl
xchg
lea
pop
mov
fs
mov
push
insb
jae
cmp
add
ljmp
stc
mov
push
fcmovnbe
insl
rcll
adc
inc
or
or
push
sbb
push
nop
icebp
je
ficoml
push
jle
fldcw
add
xchg
lret
mov
imul
fidivs
pop
in
out
jg
fisttpl
loop
bound
out
add
jp
mov
xor
ljmp
dec
pop
jmp
mov
arpl
sub
add
fwait
outsb
insb
mov
adc
mov
xor
outsl
jl
sbb
aaa
jcxz
test
popf
push
mov
ror
ret
loop
cmp
and
sub
mov
dec
sbb
icebp
pop
mov
rorl
insl
imul
inc
xchg
repz
dec
lcall
lcall
js
cwtl
lret
call
shl
out
bswap
pop
popa
jno
mov
out
mov
xlat
test
popa
ret
or
sub
jmp
das
mov
lret
lret
cmpl
mov
dec
sbb
int3
sbbl
mov
dec
sub
and
pop
push
xchg
dec
mov
scas
add
xor
mov
loopne
std
or
out
data16
mov
mov
scas
shl
sbb
jb
mov
popf
push
mov
pusha
pop
add
sbb
scas
xlat
gs
xor
mov
stos
int
or
sbb
aad
lock
cltd
jp
popf
add
pop
xlat
test
in
and
lods
push
hlt
push
inc
xor
sbb
fdiv
std
lods
jbe
aad
std
fnstenv
sub
adc
sahf
test
sbb
icebp
and
es
pop
in
mov
outsl
popf
fildll
daa
roll
out
jno
push
insb
nop
inc
sub
mov
mov
dec
lods
ds
sbb
adc
jno
leave
jl
ret
xor
mov
dec
add
in
iret
dec
imul
and
popa
cmp
in
xor
shll
and
jo
fisubl
fmull
and
mov
ljmp
inc
fisubs
lahf
stos
xor
xor
leave
stos
cmp
push
int3
sub
les
xchg
stos
mul
ret
mov
pop
cmc
fsubrl
jne
arpl
aas
jne
stc
mov
in
ss
adc
cmovge
test
loope
cmpsl
inc
in
inc
mov
xchg
adc
test
int
adc
pop
pop
xorb
in
adc
mov
push
inc
inc
fcompp
push
popf
sub
pop
mov
ja
fcompl
pop
out
pop
and
dec
push
mov
mov
cli
lahf
stos
les
inc
cltd
sahf
fsubr
pushl
or
xchg
pop
mov
aam
ret
lret
fistpll
addr16
movsl
cmp
cltd
pop
push
pandn
aam
out
xchg
jbe
sbb
inc
rcrb
push
movl
pop
sahf
daa
insb
add
nop
fimull
cmpsl
jp
leave
sbb
iret
test
mov
mov
pop
icebp
cmp
pop
dec
push
sub
pop
dec
mov
sbbb
sbb
sub
jmp
in
and
cmpsb
pop
xchg
inc
cltd
sub
dec
adcb
mov
rol
sub
mov
jl
push
sbb
mov
rol
xchg
and
pusha
popf
inc
addr16
pop
test
sbb
or
push
out
ljmp
pusha
test
out
mov
mov
jecxz
ror
test
fcoms
adc
add
jae
cmp
mov
and
push
xchg
fcoms
in
push
test
imul
imul
subb
fisttpl
iret
je
aas
mov
rcr
lret
fisttpll
cmp
lcall
js
cmp
test
dec
std
sbb
xadd
pop
or
sub
sbb
ljmp
into
lods
xchg
lret
push
inc
ss
jecxz
addr16
xor
push
or
ror
inc
rcr
test
pusha
daa
aas
mov
jge
xchg
cmpb
cmpl
pusha
rcrl
pop
hlt
aam
xchg
pop
or
push
cmpsl
pop
mov
rclb
cmp
pop
inc
adc
and
repnz
cmp
push
xchg
cli
out
imul
arpl
lods
xor
idivl
xchg
push
cli
scas
adc
fs
aad
cmp
xor
lret
xor
out
insl
or
imul
or
add
dec
out
ret
popl
inc
sbb
jg
push
dec
or
fildl
cltd
gs
and
jge
pop
cld
lahf
scas
jp
inc
mov
cmpsl
mov
subb
cmp
ret
sub
cmp
subl
sti
jmp
incl
insb
jo
add
adc
pushf
push
and
jne
pop
lret
mov
xchg
mov
adc
sbb
jbe
mov
xor
andb
xchg
and
stc
sub
bound
jnp
cs
xchg
loope
ds
ds
mov
aas
jmp
jecxz
aas
xchg
adc
out
inc
enter
pop
push
cwtl
cli
movsl
jmp
mov
sti
push
or
mov
inc
push
pop
hlt
adc
pop
arpl
mov
and
arpl
pushf
push
xor
aam
pushf
adc
in
mov
add
movsl
addr16
mov
scas
push
cltd
lock
mov
pop
jp
ss
jecxz
mov
xor
out
push
jmp
jg
push
lahf
add
pop
cwtl
enter
sbb
mov
push
cmp
lret
fisubrl
outsl
mov
push
clc
in
dec
stc
dec
orb
data16
sbb
aaa
or
adc
pop
xchg
fdivrs
sub
scas
push
out
adc
fidivrl
loop
pusha
push
lret
imul
lds
push
loop
jae
test
xchg
add
adcl
xor
sbb
and
push
jo
clc
push
movsb
call
push
xor
inc
add
mov
or
and
xor
fmul
inc
lds
add
xor
js
ds
adcb
mov
xchg
inc
mov
push
stos
sbb
xor
mov
ficomps
mov
sub
test
out
in
sub
cmc
repnz
lock
mov
ss
jns
mov
test
cmp
cld
fwait
and
lahf
jno
nop
lea
inc
sarb
stos
push
mov
jmp
mov
xchg
dec
pushf
in
rorb
push
pusha
push
cmp
ficomps
hlt
clc
sub
pushf
add
scas
dec
add
mov
cmp
cmp
xchg
pop
cltd
pop
cmc
mov
fsubrs
cmp
in
dec
cwtl
int3
jbe
mov
popa
cmp
jbe
test
push
cs
cmpsl
roll
dec
xchg
call
subps
fisubs
and
lcall
push
dec
test
jecxz
adc
mov
xor
repnz
jg
outsl
incl
test
adc
lret
insb
mov
mov
iret
and
xchg
sbb
mov
jg
stos
mov
or
pop
pop
or
adc
dec
testb
and
push
and
scas
pop
xor
fmull
sbb
adc
ret
push
pop
mov
push
jbe
pop
repnz
jnp
adc
jecxz
nop
loopne
imul
xchg
pop
aam
xor
dec
cmp
inc
ljmp
rcr
mov
pop
aam
rcr
inc
ds
push
push
or
cmp
inc
pop
into
in
les
jecxz
icebp
mov
pop
int3
or
fidivs
pop
and
in
jmp
pop
inc
pushl
test
fidivrl
jns
popa
xchg
push
and
mov
subb
xchg
add
adc
divps
loop
mov
cmpsl
sbb
stc
sbb
test
aad
inc
scas
mov
rep
add
in
adc
cmpsl
subl
xchg
imul
mov
sub
pop
ljmp
testl
jmp
test
imul
or
inc
xor
mov
icebp
cmova
mov
jg
into
mov
xor
lods
push
jnp
jp
xchg
lea
cmpsb
push
and
popa
or
test
jbe
iret
fcom
cli
xor
add
add
jmp
jp
add
or
imul
inc
push
ds
push
fs
push
push
jbe
das
sbb
inc
ljmp
dec
enter
out
cmp
dec
jns
and
sbb
fmuls
pop
mov
je
xchg
adc
ja
loope
or
xor
addl
notb
dec
ret
mov
push
cli
adc
jle
sbb
jbe
es
jp
mov
inc
fs
subl
std
aad
add
mov
punpckhdq
mov
or
popf
fwait
push
clc
out
xchg
xor
inc
lods
sar
mov
out
cld
adc
mov
dec
fcomps
adc
popf
andl
mov
jge
imul
or
mov
stc
into
or
stos
mov
inc
xor
into
push
inc
dec
pop
loop
movsl
xchg
jnp
add
movsl
mov
adc
inc
sti
sarb
sub
test
ja
int3
and
es
dec
pop
stc
sbb
cmp
sub
jmp
call
data16
ret
sahf
aas
push
push
sbb
test
push
ja
adc
inc
xchg
outsb
loopne
addb
adc
lret
mov
mov
or
and
pop
dec
lock
xchg
icebp
pushl
mov
and
cmp
stc
pop
bnd
add
daa
fcmovu
daa
mov
jne
mov
adcb
cmp
pop
jb
sub
stos
out
int
jge
add
adc
stos
scas
mov
negl
push
push
dec
fsubp
rcl
into
adc
mov
vandnps
out
mov
in
xchg
fdivrl
jno
add
test
mov
or
xchg
roll
das
inc
push
scas
mov
aas
sti
inc
in
orl
jmp
sbb
adc
stc
out
xchg
into
les
int3
icebp
inc
loopne
sub
xchg
xor
stos
jl
mov
fdivrp
fcoml
mov
popa
adc
push
jmp
cwtl
xchg
iret
mov
or
inc
sbb
cltd
mov
and
xchg
xchg
test
jmp
outsb
xor
dec
push
xchg
jnp
jp,pn
ret
adc
sub
and
aaa
xor
inc
cmp
inc
lods
bound
cwtl
ljmp
out
adc
xchg
xor
and
out
mov
mov
inc
cmp
sbb
jbe
and
push
xor
fldpi
mov
dec
cmp
sahf
lods
repnz
nop
xchg
repz
mov
push
hlt
and
push
popf
inc
add
or
push
xchg
testl
fstl
xor
test
inc
ljmp
cmp
mov
cmp
or
dec
xchg
mov
sti
pop
dec
daa
ja
das
adc
push
jecxz
mov
add
pop
cs
push
sbb
fs
in
mov
xlat
dec
fistpll
dec
in
mov
dec
in
movsl
pop
mov
jns
jp
mulb
inc
sbb
cmp
mov
push
test
push
testb
fs
loope
jne
in
push
mov
jnp
mov
sbb
push
mov
jnp
jbe
push
push
shrd
test
in
or
fnstsw
pop
mov
mov
jecxz
cwtl
pop
inc
es
or
mov
loopne
xor
pusha
and
inc
inc
xor
nop
hlt
and
push
lcall
ja
push
fwait
mov
fwait
lcall
insl
loope
lock
mov
cmp
aaa
cltd
in
icebp
mov
xchg
add
fs
jmp
ds
std
es
sbb
fsts
daa
sbb
pop
stos
divb
popf
mov
movsl
sbb
add
xchg
pop
out
sbb
push
dec
stc
in
mov
insb
mov
inc
and
cs
dec
ljmp
js
xchg
addr16
cmpsb
ret
xchg
or
xchg
jns
scas
dec
nop
push
jge
fxam
fcmovbe
mov
push
lret
cmpsl
imull
jne
ret
pop
lret
loope
mov
cmp
jp
test
imulb
cld
push
shrl
sub
es
push
jo
jno
imul
pop
hlt
adcb
lret
lods
and
ja
jmp
adc
mov
cli
lds
dec
pop
int
out
and
cld
mov
cli
cmc
out
mov
movsb
pop
xchg
imul
push
mov
add
lret
push
in
push
pop
ret
xchg
fdivs
push
cmpsb
dec
sub
or
rcrb
pop
dec
lret
test
push
mov
or
xor
lcall
imul
mov
sbb
sahf
cmp
and
sub
aas
mov
xchg
js
out
xchg
push
jnp
fists
fildll
aam
sbb
dec
divb
adc
iret
lds
or
loope
and
ret
cmpsl
dec
mov
bound
fdivrs
or
jle
mov
dec
test
pop
push
popl
loopne
js
shrl
xor
sub
inc
sbb
dec
ret
pusha
loop
in
dec
mov
sti
mov
mov
push
sub
nop
out
lods
push
decl
shrb
cmp
inc
das
jb
repnz
insl
cmc
aaa
ret
dec
cs
test
outsl
ret
or
insb
mov
sub
pop
pop
pop
push
ficoms
mov
xchg
xorl
stos
sbb
stc
mov
cltd
enter
cmp
icebp
sahf
stc
sahf
and
dec
dec
push
sub
dec
je
mov
sub
xchg
arpl
xchg
adc
mov
and
ljmp
ljmp
outsb
vmread
scas
aam
or
aas
enter
cmpsl
add
testl
clc
dec
xchg
or
sub
adc
dec
stos
inc
pop
dec
loopne
sti
sbb
pusha
dec
lods
push
or
mov
dec
dec
aad
push
testl
and
insl
and
inc
pop
scas
in
into
pushf
cmpsb
dec
jno
mov
insb
push
jnp
mov
shlb
inc
sbb
xlat
mov
shrl
daa
dec
pop
ret
mov
scas
push
pop
or
mull
mov
xor
mov
enter
stos
sbb
notl
inc
sub
mov
repnz
add
or
mov
out
aad
mov
call
jae
into
mov
pop
add
xor
push
stos
call
adcl
arpl
sub
lret
mull
scas
mov
es
inc
sti
sahf
and
inc
jbe
sub
lahf
or
sub
push
lea
jl
xorb
shll
jo
and
les
ja
fcmovnbe
xchg
jmp
mov
in
stos
mov
iret
movl
adc
aaa
std
add
loope
fwait
push
mov
push
push
mov
jmp
loop
cmp
movb
iret
cmp
jl
dec
inc
mov
sbb
xor
lods
jae
stos
sub
leave
movsl
add
adcl
fisttpll
int
mov
mov
mov
ret
or
int3
jmp
je
dec
adc
xchg
in
or
pop
out
lahf
mov
pop
inc
jecxz
out
and
aam
lahf
xchg
je
hlt
sub
fcomps
add
imul
add
or
fstl
int3
adc
pop
xor
jle
mov
inc
pop
pop
jge
cs
iret
fcom
or
stos
mov
xchg
das
ds
les
or
enter
fwait
pop
push
xchg
mov
pop
inc
fiaddl
pop
cmp
test
mov
pop
sub
push
jnp
inc
je
pop
cmp
adc
mov
ficompl
sub
xor
dec
adc
xchg
and
and
ja
gs
shlb
dec
nop
mov
dec
or
or
sub
dec
mov
mov
fs
mov
pop
push
bound
push
xchg
stos
push
pop
fstpt
roll
and
pop
insb
rcrl
aaa
sbb
xor
aaa
pop
shrb
in
js
in
mov
pop
das
scas
icebp
mov
mov
fisttpl
out
pop
or
sti
push
sub
ss
imul
adc
jae
test
sti
ljmp
xchg
dec
popa
or
xor
mov
jb
shrl
sbbb
clc
outsl
add
clc
or
xlat
shlb
mov
jne
in
push
scas
jecxz,pn
jnp
repz
ss
adc
lock
cltd
sbb
nop
sbb
jne
cli
call
ja
pop
jecxz
adc
test
popa
xor
sahf
cmpsb
pop
stc
loope
scas
mov
xlat
jno
rcrb
sbb
loopne
test
incw
xchg
out
and
rcrb
or
ljmp
and
pushf
jae
dec
cwtl
dec
es
pop
cmp
stc
and
fwait
cmp
xor
icebp
adc
mov
cmp
xor
sub
dec
sti
rcrl
mov
in
mov
call
lahf
pop
add
call
movsb
lods
ret
push
scas
out
outsb
data16
cmpsl
inc
dec
int
dec
xor
adc
shr
sub
cs
mov
jl
mov
mov
cmp
xchg
push
xchg
xor
jg
jne
ret
inc
mov
lahf
jo
ss
out
fwait
es
or
dec
insl
or
ds
xchg
out
stos
push
cmpl
cmp
fisttpl
cld
in
mov
aas
inc
movsl
push
jp
sbb
jnp
out
fidivrs
xor
xor
fsubrl
xlat
imul
xchg
aas
cmp
cmp
or
sbb
lret
dec
ds
and
push
jae
mov
mov
adc
mov
adc
insb
cwtl
addb
and
jnp
jns
mov
out
push
dec
add
cmp
pop
xor
pop
das
std
or
cld
sbb
jno
mov
sub
pop
push
pop
adc
aad
int
dec
out
repnz
sbb
pop
xchg
sti
rorb
xchg
pushf
fcompl
xchg
test
or
or
push
nop
push
inc
stos
jge
inc
call
ds
insb
fstpt
outsl
jne
pop
cmp
stos
cmp
inc
int
jns
jp
mov
sub
sub
and
mov
push
dec
outsb
inc
push
cmp
mov
sub
fsub
push
jno,pn
jae
insb
xchg
cmp
add
pop
dec
adc
jge
ss
xor
pop
push
jle
call
fnstsw
jno
push
imulb
les
push
pop
mov
aaa
lret
jns
xor
mov
dec
ret
loopne
rep
enter
add
test
xorb
into
adc
pop
arpl
pop
scas
test
xorb
ds
cmpsl
push
fidivs
sub
cmp
aas
js
icebp
stos
inc
add
push
lods
sbb
push
inc
fmuls
sbb
mov
jle
sahf
nop
pop
aas
jo
pop
push
add
cwtl
scas
aad
mov
sbb
out
outsb
fwait
pop
dec
pop
loopne
pop
aad
adc
mov
mov
jge
mov
aad
pop
test
xchg
out
xchg
sti
pop
xor
je
rol
int
pop
sbb
sub
push
xchg
adc
pop
jno
cltd
sbb
lret
mov
mov
lods
mov
adc
cli
mov
int3
push
into
xchg
jmp
sbb
xor
xor
mov
mov
testl
addl
out
and
xor
dec
dec
mov
jp
jb
or
aaa
dec
or
sbbl
inc
xor
jnp
repz
inc
nop
or
mov
adc
add
inc
pushl
orl
jne
xchg
and
ss
testl
and
xor
icebp
lret
int
sub
mov
loopne
pop
dec
add
lahf
pop
sub
push
jo
addr16
xchg
icebp
lcall
aam
sbb
lret
out
loop
loop
in
and
lds
in
pop
pop
cmp
mov
dec
test
push
xlat
cmp
and
mov
pop
sub
test
icebp
idivb
inc
or
pop
icebp
push
rcrb
sti
pop
cltd
push
mov
out
push
sti
nop
movsb
ret
out
xor
imul
jb
pushf
xchg
cli
push
insb
mov
out
xchg
or
out
pop
xchg
jmp
scas
cmp
and
mov
lods
xchg
push
pop
stc
in
flds
jb
insl
loope
or
popa
call
adc
sti
rorb
push
lahf
push
lahf
mov
out
push
filds
stos
imul
pop
push
sbbl
cmp
stos
mov
jg
push
jno
add
cmp
push
pop
jbe
cmpsl
mov
loop
mov
push
ret
cmp
gs
popa
dec
outsl
and
daa
pop
and
shl
xchg
cmp
pushl
xchg
xchg
stos
mov
sub
mov
ficompl
roll
mov
stc
xchg
loopne
mov
ja
sub
stc
gs
dec
insb
icebp
add
ds
xchg
sbb
mov
dec
aam
and
lods
xor
push
test
xchg
xchg
xchg
pop
xchg
add
and
ja
notl
and
movsl
inc
xlat
inc
lcall
push
mov
popa
push
pop
insb
and
fldcw
stos
mov
jl
dec
aam
jl
fistpl
popf
decb
mov
lods
test
ret
pop
movsb
mov
cmc
jnp
fildl
popf
movsb
out
pop
shlb
shll
repnz
in
data16
cltd
dec
add
sub
call
roll
push
adc
xor
fistpll
dec
fmuls
test
jmp
inc
aaa
xchg
mov
fistps
testb
rolb
sbb
shrl
lcall
mov
pop
clc
arpl
out
icebp
hlt
mov
xchg
ds
mov
pusha
mov
shl
lods
pop
cmp
rorb
das
in
dec
xchg
je
je
sbb
insb
xchg
lahf
adc
sub
frstor
jg
sub
and
push
lods
dec
les
jne
xchg
lea
inc
ret
dec
cmpsl
popa
into
mov
jae
xchg
and
in
cmp
out
jg
stos
sub
push
loopne
shrb
push
inc
or
and
dec
dec
out
xor
aad
xchg
cmc
mov
out
stc
imul
xor
pop
repnz
push
xchg
sbb
adc
mov
rol
fldl
mov
les
mov
sahf
inc
lock
andl
pop
rclb
int
xor
sub
pop
and
pusha
gs
sahf
push
call
sahf
js
flds
push
flds
addl
pushf
xchg
pop
jb
xor
loopne
dec
xchg
outsb
xchg
bound
enter
pop
cmpl
or
rcr
out
ret
cs
aam
dec
or
mov
jno
pop
mov
mov
xchg
mov
jno
les
in
lock
xchg
test
dec
nop
push
push
cmp
push
scas
inc
loope
adc
cmc
and
push
shll
pushf
and
jmp
cmpsb
jbe
or
cs
xchg
subb
popa
pop
mov
sbbl
orb
xchg
out
pop
lock
pop
lods
or
iret
repnz
mov
adc
add
out
adc
mov
inc
orl
mov
jp
outsl
loop
rorl
push
sbb
cli
and
adc
xchg
push
or
sub
push
popf
add
xchg
sub
pop
push
pushf
arpl
les
mov
xchg
inc
out
or
shll
dec
or
jb
rcrb
xchg
dec
loopne
fnstcw
jg
mov
dec
test
jb
cltd
rcll
xchg
add
push
pushf
inc
mov
fwait
loop
cmc
sarl
jg
sbb
jb
push
inc
and
adc
or
inc
rcl
mov
mov
clc
test
pop
int
sbb
mov
aad
pop
es
stc
std
dec
movl
loope
or
mov
addr16
inc
mov
xchg
call
mov
hlt
sbb
fsubrs
xchg
jne
jecxz,pt
mov
mov
pop
inc
push
inc
xor
add
lret
cmpsb
xor
jns
aaa
pop
and
mov
cmp
test
pop
pop
mov
inc
jge
xor
fs
std
scas
mov
mov
insb
fisubs
mov
and
xchg
clc
and
xlat
cmp
aaa
mov
ret
or
jle
sbb
mov
inc
popf
stos
xchg
in
gs
arpl
sbb
aam
adc
fbld
cmp
dec
repnz
xlat
jge
inc
push
sbb
sub
leave
push
and
inc
push
cmp
mov
add
push
enter
popa
out
scas
or
fs
mov
add
xorb
jmp
mov
cmpsb
push
loop
or
sub
sbb
xchg
hlt
sbb
repz
lods
loop
push
sub
sub
pushl
cwtl
xor
jmp
outsl
xor
imul
dec
adc
mov
fsubrl
orl
ret
mov
inc
into
sbb
insb
pusha
sbb
repnz
sub
mov
mov
mov
jbe
add
cmp
or
push
jb
enter
aad
mov
inc
mov
jmp
js
jle
and
orl
subb
push
xor
push
mov
mov
arpl
je
and
imul
sbb
cmpsb
sub
test
inc
aaa
pusha
arpl
insl
xchg
jg
iret
cwtl
les
and
out
jl
test
xlat
jbe
jmp
cmc
dec
pushf
mov
out
dec
push
adc
lcall
sbb
bound
jge
jge
outsl
shll
mov
test
mov
aaa
sbbl
repz
shll
sub
cmc
xchg
enter
jo
mov
loop
xor
in
mov
rorl
mov
push
xchg
mov
dec
xchg
inc
pop
inc
in
xor
mov
mov
mov
push
cmpsw
adc
cmp
sub
add
push
xor
loopne
aam
dec
jg
mov
add
mov
fisubl
les
and
jnp
rcl
cmp
orb
xor
scas
pop
testl
das
out
pop
loopne
pop
sbb
dec
stos
xor
cmp
lcall
ljmp
fiadds
sub
das
mov
push
jmp
test
subb
jbe
pop
daa
loope
mov
loop
sti
ficoms
inc
dec
push
leave
mov
mov
or
shl
add
es
and
sbb
inc
pop
scas
cmp
idivb
sbb
mov
xchg
xchg
mov
lds
mov
ja
mov
xchg
cli
jae
mov
dec
sarl
lcall
sti
shr
jb
outsl
or
pop
push
lcall
icebp
mov
sbb
sbb
add
add
sti
pushf
std
push
mov
adc
xchg
mov
aad
push
push
mov
ficoms
lret
mwaitx
and
inc
repz
xor
inc
outsb
lea
popa
shrl
mov
add
jb
in
mov
push
or
mov
cwtl
mov
xor
mov
adc
pop
sbb
es
mov
and
bound
and
jno
mov
enter
mov
pop
adc
add
test
lods
pop
and
push
and
rorl
rorb
popf
or
adc
loop
sti
xchg
mov
mov
jo
pop
js
test
movsb
cwtl
xor
mov
nop
cmp
xchg
or
fnsave
mov
dec
fidivl
fwait
enter
or
lds
push
rcrl
cmp
lods
nop
in
out
jecxz
fnstenv
mov
mov
pop
push
or
sbb
push
cmp
cmp
nop
imul
pushf
hlt
mov
xchg
xor
subb
cmovne
in
dec
in
cld
jecxz
bound
fcmovne
pop
lea
gs
jbe
mov
mov
xor
mov
mov
xchg
sub
push
add
xchg
mov
pop
mov
jb
in
gs
xor
mov
outsb
ret
xchg
test
cmp
jmp
in
repz
scas
movsl
loope,pt
fidivs
js
aaa
lods
jle
mov
shr
xchg
into
ss
in
lods
xchg
jnp
ljmp
mov
mov
jne
mov
mov
movb
icebp
mov
in
outsb
lret
push
test
fwait
or
sbb
dec
clc
cmpb
jge
subl
push
test
mov
lods
sub
call
ret
test
inc
int3
mov
jns
out
inc
adc
push
inc
sbb
lds
mov
pop
imul
stos
cltd
pop
push
ret
push
shlb
stos
enter
vpminub
mov
sub
sub
mov
lret
cmp
in
fadds
inc
push
es
mov
xor
repz
rcrl
and
pushf
jb
loopne
ror
les
pop
insb
notl
test
or
xor
in
sub
fsubs
je
ljmp
int3
int
rcr
div
or
inc
xor
ja
cwtl
in
ljmp
sbb
adc
lahf
insl
enter
adc
ret
push
add
call
loope
dec
adc
jne
pop
sub
daa
ljmp
cmpsl
mov
xor
xchg
jge
xchg
xchg
in
or
leave
dec
push
aaa
sub
in
adc
dec
ds
jge
jae
cmp
iret
sti
adc
cmp
pop
movsl
test
mov
pop
jmp
iret
nop
cli
imul
loopne
ret
and
push
sbb
iret
stos
int3
pop
adc
or
dec
cwtl
inc
adc
fcmovbe
jbe
sub
imul
pop
jecxz
ljmp
subb
cmp
or
add
dec
and
shrb
mov
sbb
or
pop
lods
fstpl
sub
push
mov
pop
dec
pop
lret
test
jl
mov
mov
lds
inc
sti
or
fs
stc
pusha
loope
lods
add
add
test
dec
mov
test
idiv
div
jl
mov
inc
cmp
add
pusha
mov
add
pop
and
ror
cmp
xchg
sub
lea
lods
pop
adc
xor
pop
sbb
fwait
cmpsl
fxch
ja
pop
jp
cmpl
ret
jno
adc
out
or
mov
pop
mov
popa
arpl
mov
push
rclb
stos
data16
das
daa
sbb
fcomi
into
les
iret
ds
inc
xor
pop
cltd
inc
jno
sub
test
lcall
das
insb
sahf
jge
mov
movl
enterw
adc
into
adcb
sbb
pop
aaa
push
and
add
sbb
xor
pop
add
loop
inc
pop
repz
mov
out
ret
jge
les
mov
pusha
pop
lret
scas
stos
dec
fiaddl
add
push
dec
push
fnstsw
sub
sbb
jle
sti
nop
iret
repnz
push
repnz
ficompl
repnz
test
es
cmpl
popa
test
sub
mov
clc
aam
stc
xor
stos
xor
dec
adc
sbbb
push
mov
daa
repz
push
call
lcall
mull
fs
and
push
jb
inc
jae
push
mov
imull
xchg
jg
sub
subl
pop
dec
jmp
popf
cli
sarl
mov
movsb
call
sub
xchg
fcmovne
rclb
dec
sahf
loope
fisubl
lds
mov
add
jmp
sti
ss
mov
inc
mov
pop
rorb
mov
xchg
push
test
push
adc
dec
std
je
iret
aam
mov
jecxz
aam
inc
sub
mov
fidivrs
cwtl
test
into
push
popf
js
cs
inc
imul
pop
notb
jbe
push
push
arpl
pusha
lock
sbb
shll
rolb
imul
fsubrl
iret
popa
inc
in
sub
das
rcll
sub
inc
push
loopne
and
push
fldenv
lods
xchg
mov
mov
cs
push
icebp
mov
pop
xor
arpl
push
scas
addb
test
jmp
sub
outsl
test
in
cmp
loop
daa
pop
cltd
in
dec
mov
mov
shr
addr16
insl
sub
mov
lret
rcrl
int3
sbb
xor
sbb
mov
or
xchg
xchg
xor
add
xor
aad
cli
xor
in
ljmp
cltd
xchg
bound
stc
or
leave
dec
jle
push
hlt
push
dec
filds
pop
push
mov
fwait
dec
je
addr16
repz
into
rcrl
dec
iret
mov
shlb
inc
das
or
sub
mov
adc
loop
das
dec
fcmovbe
inc
xchg
pushf
xchg
mov
push
popf
testl
inc
hlt
aam
push
pop
test
popf
jae
push
fidivrl
movsl
mov
fisttpl
cmp
in
pushl
loopne
leave
push
es
xchg
pop
popa
scas
jle
or
jno
jmp
fistpll
pop
mov
add
shrl
pushf
push
mov
stc
jl
outsb
out
nop
loope
jns
popa
loope
cwtl
and
and
popf
cmp
out
push
mov
stos
ja
movsl
cmp
call
call
or
sub
repz
test
or
adc
sbb
jno
in
mov
cmp
adc
inc
sbb
add
nop
mov
jae
mov
rcr
ljmp
test
sbb
push
ja
movsb
or
out
call
sbb
incb
jl
cwtl
mov
push
push
dec
inc
sbb
sar
xchg
nop
add
jp
xchg
shlb
pop
pusha
cmp
jbe
imul
pop
pusha
loope
in
rcl
lods
mov
mov
mov
int3
lret
and
push
out
and
push
scas
mov
inc
outsb
cwtl
push
mov
fisubrl
inc
inc
enter
xchg
leave
dec
xchg
jo
mov
dec
mov
imul
xchg
pop
mov
popf
pusha
xchg
lret
push
mov
fnstcw
leave
leave
das
insl
push
lock
jl
imul
loope
addl
test
arpl
fs
push
aad
or
xchg
adc
add
xchg
loop
into
mov
add
lcall
mov
hlt
dec
add
ja
addl
mov
je
and
clc
fldcw
outsl
mov
daa
lret
lcall
mov
lock
das
mov
fisubl
test
mov
jecxz
and
adc
add
xchg
xchg
aas
mov
aad
jp
push
imulb
mov
test
stos
cwtl
xlat
adc
pusha
adc
out
es
pop
adc
cmp
xchg
daa
scas
pop
pop
cmp
fadds
dec
inc
pop
popa
mov
inc
pop
cmp
enter
cli
mov
aaa
js
addr16
cmp
sarb
and
push
cs
push
sbb
push
or
and
adc
cld
pop
or
pop
push
or
add
aam
dec
sbbl
sarl
sub
inc
mov
ja
sub
mov
les
jl
push
stc
lcall
pop
xor
xchg
sbb
dec
pop
sbbl
movsl
test
jge
pop
xchg
or
in
adc
xchg
test
xor
sbb
test
rcll
scas
es
xchg
pop
outsl
in
rorl
out
imull
add
cs
sbb
aam
dec
inc
jae
ret
pop
pop
shrl
arpl
or
std
test
jle
outsb
mov
mov
add
add
movl
push
push
or
bound
fimull
pop
inc
dec
mov
test
mov
sub
pop
arpl
in
je
pop
cld
fcoml
fistpll
cmpsb
cs
push
fmull
repz
cmp
pmulhw
sti
mov
insb
fstpl
xor
call
mov
ljmp
xchg
les
add
pop
loopne
mov
movb
out
xchg
or
loopne
icebp
push
and
mov
cmpsb
sarb
adc
adc
push
xlat
xchg
jne
cmp
cltd
aam
fcom
dec
inc
fsub
fwait
mov
sub
popf
sub
lret
data16
loop
pop
loop
and
push
sti
in
jmp
jle
add
imul
fstpl
mov
dec
lock
or
jb
mov
dec
mov
lret
stc
jns
mov
xor
sub
inc
jmp
sub
or
out
imul
fistl
jns
fcmovne
std
scas
mov
lret
push
sbb
inc
rolb
mov
xchg
pop
pushf
jae
push
popf
daa
dec
daa
push
lods
sbb
inc
repnz
cltd
ret
pop
mov
pop
rcrl
daa
and
test
outsl
jle
push
mov
aas
mov
shrl
addr16
adc
pop
popf
fs
shlb
stos
imul
into
fidivl
push
lahf
fstp
pop
mov
push
loop
arpl
cmpsb
sub
in
adc
sbb
adc
outsb
aas
dec
fstpl
and
cli
imul
jl
call
jo
push
xchg
inc
add
cmp
sub
xchg
jns
cmp
mov
xlat
sbb
test
pop
repnz
xchg
lods
fmulp
and
ret
mov
mov
ret
stos
mov
mov
jae
xchg
imul
or
lahf
lahf
imul
int3
aaa
adc
in
xchg
js
mov
cld
mov
lahf
fisttps
jecxz
mov
xchg
fidivrl
push
sbbl
pushf
je
fwait
push
sahf
bound
lods
insb
cmpsl
push
outsl
add
sub
insb
sahf
ljmp
popa
pop
push
mov
mov
sahf
cld
lock
sti
push
sub
mov
add
sub
lock
movb
fwait
and
aaa
sbb
mov
shlb
imul
pop
xorb
insl
divb
fisttpll
jbe
add
and
dec
insl
inc
popl
icebp
fsubl
sub
bound
xor
out
pop
dec
cmp
nop
dec
testl
cli
mov
mov
mov
fwait
xchg
xchg
mov
aaa
add
scas
call
dec
xor
cmp
xchg
inc
dec
std
push
push
jecxz
xor
arpl
fisubrl
dec
cli
mov
push
mov
sbbl
mov
cmp
mov
shll
jle
add
mov
test
xlat
int3
mov
mov
sbb
scas
in
jo
insl
jnp
iret
sbb
mov
push
out
mov
pushf
shrb
lock
rep
jge
cmp
fxch
pop
jb
jae
dec
xchg
insb
xor
popa
notb
and
mov
ja
mov
sti
insb
push
jl
sbb
ljmp
fdivl
jae
inc
mov
inc
sub
xlat
addl
fdivrl
sbb
fidivrl
sub
pop
insb
cmp
cmc
add
mov
int
lea
push
lret
mov
jmp
cmpb
es
popl
lock
xor
dec
jne
mov
jl,pn
add
lcall
int
jg
and
sub
cmp
push
push
pop
adc
sub
iret
lret
movb
adc
jge
cs
xchg
aaa
mov
mov
cmp
sub
sbb
cmpsb
push
icebp
push
mov
clc
lret
xchg
shll
mov
lcall
sub
ret
ljmp
adc
jecxz
rcrl
ljmp
inc
mov
mov
or
sbb
repnz
stos
sub
fistl
inc
mov
or
sbb
jle
cld
rclb
or
push
test
dec
into
mov
or
push
pop
adc
and
dec
xor
mov
sbb
iret
ret
cmp
repnz
sahf
cld
shl
xchg
pop
fisttpl
mov
or
mov
jae
mov
cltd
mov
or
mov
lcall
arpl
fucomp
inc
inc
adc
stos
pop
movsb
push
fildl
dec
cmp
scas
lret
mov
outsb
andl
pop
test
sub
or
sbb
pop
stc
outsl
mov
fstps
clc
add
in
fmuls
xchg
inc
mov
push
cli
dec
negl
cmc
les
push
fmul
and
aam
cmp
jnp
repz
pop
sbb
sub
and
popf
ficomps
ja
iret
jne
inc
xchg
lea
stc
mov
add
inc
jl
sbb
lret
xor
mov
std
in
push
cs
ret
dec
jns
pop
xchg
push
push
ror
pop
cmp
pop
mov
pop
ss
adcb
ss
pop
mov
xchg
fmuls
lret
scas
mov
or
adc
sbb
ret
es
stc
sub
mov
jecxz
sub
popa
mov
gs
std
ficomps
push
dec
mov
sub
ja
mov
jp
sbb
orl
push
or
pushf
addr16
inc
add
lret
jbe
pushl
lds
fabs
mov
push
dec
nop
xchg
cmp
aas
jp
mov
cmp
arpl
dec
lea
insb
mov
out
arpl
pop
iret
dec
xor
js,pt
jmp
aam
mov
mul
inc
pop
sub
push
xor
push
sbb
in
xor
or
stc
push
jmp
push
addr16
lahf
and
sub
pop
jae
xor
int3
mov
inc
in
rcrb
loop
je
xchg
dec
sbb
or
cli
push
out
pop
lods
xor
dec
sbb
lahf
xchg
jbe
into
out
int
movsb
shrl
mov
ja
inc
cmp
jmp
jge
inc
dec
icebp
inc
ret
pop
dec
test
in
rcl
and
mov
mov
lret
aam
mov
add
mov
mov
xor
sbb
iret
fmulp
in
mov
ljmp
sub
sbb
sbb
mov
aaa
sub
xchg
jno
mov
mov
loopne
xor
imul
sbb
enter
int3
leave
adc
scas
mov
push
adc
cmpsl
cs
sbb
pop
lret
aad
or
pop
fldenv
and
fisubl
sub
addr16
mov
jle
icebp
out
mov
popf
add
sbb
pusha
out
jg
jle
inc
scas
lret
into
loopne
pop
subl
cltd
imul
pop
or
inc
pop
dec
aas
adc
inc
add
cwtl
int
movsb
pop
call
leave
or
sub
push
pop
add
jnp
jne
dec
pop
adc
pop
jns
pop
cmp
dec
xchg
dec
push
and
pusha
and
insl
pop
fcompl
mov
insb
pop
arpl
push
xchg
icebp
push
fisubs
enter
notl
add
dec
fcmovu
addr16
data16
imul
mov
or
repnz
pop
sbb
movsb
shlb
jbe
out
idivb
xchg
pop
or
popa
jecxz
adc
adc
enter
xor
sub
orb
call
flds
jge
cwtl
add
enter
adc
mov
out
shll
dec
leave
cmp
push
sub
fdivr
mov
push
lea
add
mov
xorb
cmp
add
sub
daa
xlat
inc
dec
cmp
rcll
cwtl
loope
push
lret
mov
xor
mov
test
pop
jle
scas
call
xchg
insb
lcall
aas
enter
push
call
and
sub
xor
jbe
adc
jp
sbb
clc
jbe
mov
lahf
mov
jle
fldl
push
cmc
test
jecxz
jp
test
daa
mov
mov
add
or
imul
mov
sub
dec
mov
mov
xchg
sbb
lock
imul
pushf
sub
cmp
arpl
hlt
outsb
cmpsb
mov
add
sub
dec
xor
jb
mov
pop
pushf
es
hlt
sub
jbe
pop
cs
stos
cmp
jmp
cli
ror
repz
xchg
xorl
fsubrl
sub
leave
loop
scas
pop
faddl
sub
daa
jecxz
pop
or
xor
mov
mov
mov
int3
ret
stc
pop
add
jns
mov
leave
in
jae
aad
icebp
xlat
adc
nop
mov
pusha
cwtl
ret
sbb
aas
sub
sarb
and
mov
fidivl
fimull
sub
cs
xor
push
flds
jecxz
xor
sti
jge
lret
xchg
push
loope
xchg
sti
xlat
neg
push
sahf
in
mov
or
adc
lock
test
xchg
rcl
cmp
loope,pn
jae
sbb
push
movsl
sbb
xor
mov
pop
pop
pop
adc
add
add
xor
arpl
push
pop
sti
and
inc
je
pop
cmp
inc
scas
inc
xor
in
inc
pop
into
test
aas
lret
xor
jmp
imul
sub
cli
sbb
pusha
and
imul
push
xor
and
dec
pop
cmp
fldl
outsl
mov
test
push
inc
lret
sti
sub
and
pop
xor
jbe
mov
pop
push
repnz
jecxz
xchg
jp
jbe
movsb
movsb
jle
add
mov
hlt
inc
aas
and
mov
and
mov
sub
stos
jno
sahf
clc
cmp
sub
jge
out
rcrb
pop
and
aaa
das
sub
cmp
and
sub
test
mov
outsb
stc
dec
stos
jb
sbb
sahf
push
mov
pop
jg
scas
jbe
call
shrl
test
jmp
imul
lods
and
dec
popf
addr16
jmp
xchg
adc
and
mulb
jo
jbe
or
cmpsl
negl
cmp
and
push
in
adc
icebp
push
imul
or
cmp
or
mov
clc
and
lods
adc
jns
jge
ja
movsl
dec
pop
aaa
inc
loop
lahf
inc
popf
inc
subl
push
xor
xchg
push
mov
aam
pop
mov
dec
jb
test
jo
jb
fadd
jne
sbb
test
pop
pop
inc
out
mov
push
pushf
arpl
push
ficompl
dec
cmp
mov
mov
lret
pop
pop
inc
mov
mov
outsb
mov
sahf
and
daa
adc
push
ja
test
inc
lock
mov
lods
cmp
stos
movsl
fbstp
rorb
fwait
in
mov
sbb
and
es
pusha
aaa
xor
mov
cmp
and
adc
lea
push
call
in
lea
out
data16
icebp
pop
jmp
and
sbb
es
xor
leave
adc
or
and
inc
xor
or
stc
cmp
push
jge
sub
sbb
mov
insb
daa
sub
inc
lods
push
lcall
pop
cmp
int3
push
push
mov
daa
stc
fistpll
fwait
mov
xor
cmp
inc
jbe
repz
xor
cmpsb
jge
lcall
jbe
pushf
stos
leave
and
lods
mov
or
cli
sub
mov
loop
sub
cwtl
pop
sub
in
cmc
in
push
and
pop
or
addr16
mov
mov
js
xchg
clc
decb
inc
nop
sti
mov
in
mov
sti
fldl2e
lret
sub
in
jg
int3
jno
mov
dec
cmp
mov
inc
rol
ret
and
jb
bound
cs
pop
fistpl
mov
dec
sarb
sub
jne
mov
mov
mov
ja
mov
push
inc
and
mov
bnd
jge
ljmp
jp
lahf
mov
adc
cmpl
jg
cmpsl
push
ret
clc
out
in
scas
cwtl
pop
cmpsb
test
iret
shrb
or
mov
outsb
pusha
roll
sub
push
sbb
mov
cmp
int
movsb
adc
mov
dec
out
sub
sarb
push
xchg
jecxz
sub
ljmp
pop
xchg
ret
pop
cmp
or
pop
push
xor
jnp
pop
push
sbb
cmpb
out
pop
hlt
call
in
daa
stos
js
lcall
adc
mov
and
rorb
cltd
call
jg
stos
mov
jo
sahf
mov
sbb
and
mov
js
jecxz
mov
and
push
add
in
xchg
ja
mov
fs
pop
hlt
stos
insl
ja
nop
xchg
xchg
movsl
mov
inc
fdivr
mov
adc
leave
cmpsb
lea
nop
mov
lock
pop
mov
daa
push
jne
dec
jb
and
in
xor
mov
lahf
xchg
loopne
repnz
push
add
push
outsb
sub
fisttpl
mov
fimull
cltd
xor
push
push
popf
adc
lcall
inc
shrb
mov
mov
hlt
xchg
sub
mov
enter
decl
outsb
jno
cmpsl
stos
outsl
aas
mov
stos
xor
adc
sbb
cmc
aas
dec
jnp
xchg
dec
xor
dec
ret
cld
push
dec
mulb
xchg
mov
xchg
mov
pop
hlt
insb
ret
repz
jp
je
fsubl
lret
xchg
jnp
dec
dec
jb
pop
mov
aas
sub
inc
inc
pushf
ret
jne
movsl
mov
pop
das
xor
push
push
sbb
aaa
dec
subb
push
adc
xchg
push
pusha
lret
cmc
dec
cli
mov
mov
xor
ds
sub
ja
repz
jb
in
push
push
js
ja
das
mov
add
imul
jg
sti
sub
les
sub
jle
inc
jb
jge
inc
rcrb
subl
jnp
std
cmovb
mov
ljmp
in
jmp
ret
xchg
lret
add
ror
and
jo
sbb
rcrb
les
pop
sahf
or
testl
jecxz
xor
decl
insb
push
and
push
jp
pop
js
mov
dec
inc
enter
cli
popfw
add
jl
sub
ja
lods
out
jp
and
lret
into
mov
fisubs
dec
in
out
ret
scas
pop
and
jne
ret
add
mov
dec
rcll
cli
or
and
mov
jno
in
xor
stc
ja
jb
rorb
xchg
xor
add
rorl
sbb
mov
incb
mov
daa
aam
std
mov
aaa
lahf
xor
lods
jno
or
jnp
cmpsl
inc
je
scas
popf
lret
sbb
and
into
inc
xchg
es
dec
roll
sbb
cmp
pop
sbb
cmp
mov
cs
xor
add
jns
loop
push
xchg
inc
mov
mov
insb
add
pop
xor
pop
mov
out
inc
dec
sahf
push
scas
clc
call
shrl
cmpsl
adc
or
bound
jno
test
sub
cmc
jecxz
negl
add
pop
test
gs
scas
aam
fildll
int
repz
pushf
lcall
pop
mov
inc
icebp
jg
js
gs
mov
cwtl
mov
xlat
push
inc
in
sub
sbbb
pop
and
fcoms
cld
fdivr
mov
test
aad
aas
add
jmp
rcl
cmp
sbb
mov
int
mov
jp
sbb
and
ret
sarb
int3
fiaddl
sub
imul
fnstcw
movsl
in
clc
repz
pop
dec
movb
pop
mov
shll
test
mov
mov
sti
sbb
mov
mov
xchg
fdiv
mov
jns
outsb
or
ret
adc
out
or
test
jmp
mov
dec
xor
cld
int
das
xor
and
test
inc
std
loope
dec
mov
ret
fistpll
pop
repz
cvtps2pi
lret
mov
imul
mov
ret
add
movsl
int3
out
xor
mov
dec
movsl
sbb
add
dec
ret
sub
lods
adc
adc
push
add
fsubr
or
cmc
cltd
aad
add
mull
sbb
in
add
dec
mov
lea
fnsave
std
in
daa
add
mov
das
mov
dec
pushf
cmpsb
pop
inc
shlb
nop
mov
fcompl
fbstp
popf
pop
sub
in
push
xor
std
sahf
and
mov
sub
mov
aad
aad
orl
stos
lret
inc
cmpsb
lods
stos
rcr
inc
mov
in
je
dec
lock
mov
dec
push
xlat
mov
push
loop
lock
lock
pop
cmp
xchg
jmp
jg
cmc
jno
push
hlt
int
in
adc
fsubr
fidivrs
add
cmp
mov
mov
xchg
or
inc
in
add
test
cmp
push
popa
cmpsb
aad
adc
sub
pop
mov
mov
test
mov
xor
insb
jae
dec
cld
pop
jae
mov
and
jbe
sub
dec
mov
out
gs
test
out
inc
add
dec
inc
push
xchg
lods
sbb
rcr
out
aad
lahf
std
popa
jbe
mov
push
sub
add
popa
loop
rcl
dec
and
mov
xchg
add
orb
stos
mov
repnz
movsl
in
mov
or
nop
daa
std
pop
push
mov
dec
xor
and
test
pop
jecxz
jp
int
adc
lea
mov
fiaddl
fimuls
adc
int3
sbb
outsb
test
test
hlt
adc
mov
pop
and
iret
shl
lods
mov
shrb
int
clc
shlb
mov
js
mov
dec
fsubl
xlat
scas
ljmp
mov
sub
fsubrp
mov
jno
out
mov
cmpsb
cmpl
stc
pushf
or
nop
aas
inc
jmp
jecxz
iret
out
sub
lods
pushf
movsb
lods
into
out
dec
xchg
movsb
je
fcom
adc
rcr
or
inc
inc
push
adc
std
lods
fildll
xorl
mov
ret
mov
hlt
iret
jmp
or
jg
mov
xor
leave
outsb
sub
scas
mov
mov
pusha
jae
cmp
xor
mov
push
test
xor
insb
loope,pt
testb
xchg
jecxz
cmp
sbb
sub
lods
inc
jp
pop
lds
aas
lods
push
loope
add
mov
sbb
jno
dec
dec
or
sti
inc
mov
push
push
int3
sub
jge
lock
jle
into
scas
insb
pop
fisubl
push
outsl
mov
aad
add
and
cmp
pop
fs
ss
jle
aam
sub
add
pop
jne
add
cmp
or
jg
test
bound
out
int
hlt
mov
jmp
mov
inc
jg
sbb
add
jo
out
jmp
aad
pop
pop
ds
xchg
mov
ltr
addr16
mov
or
xorl
sbb
add
movsb
push
mov
adc
test
ss
push
clc
or
addr16
insb
outsb
inc
or
dec
bound
push
or
ja
pop
test
mov
outsl
lcall
inc
and
shlb
adc
fnstcw
jp
psubusb
lret
cmpsl
ret
jmp
and
div
enter
ficompl
fisubrl
dec
jg
repz
inc
scas
and
dec
test
lahf
ljmp
lock
mov
inc
sub
pop
add
addr16
push
push
stos
mov
fistps
mov
mov
mov
insl
repz
mov
scas
fdivs
mov
add
call
mov
fcoms
mov
pusha
push
mov
and
gs
pusha
mov
rorb
pop
shl
inc
in
cmp
lcall
jge
movsl
add
pop
andb
and
testl
int3
out
and
in
movsb
bound
mov
or
lcall
cmp
push
pop
shr
or
jno
and
sti
mov
insl
pop
xor
nop
rsm
loopne
movsb
xchg
repnz
pushf
mov
jo
fndisi(8087
cmc
std
ret
push
and
jns
cmp
cltd
daa
jmp
dec
xlat
lods
jbe
fistps
enter
les
xchg
mov
inc
hlt
add
out
jae
mov
sti
mov
xor
fidivl
mov
out
adc
cmc
push
fists
std
les
jmp
mov
mov
mov
jmp
ja
daa
cs
icebp
scas
sti
and
push
lcall
not
in
je
push
in
in
cmp
icebp
ss
cmpsl
mov
cmc
or
sahf
popa
push
addb
push
mov
jl
mov
inc
or
mov
movsl
in
out
mov
fadds
push
hlt
imul
dec
or
in
adc
or
pop
and
mov
mov
test
inc
mov
sbb
xchg
push
adc
mov
ss
push
xchg
sub
lods
rorb
cmp
push
ljmp
jmp
sub
mov
sub
push
xor
addr16
js
adc
stos
leave
dec
fdivrs
and
adc
xor
call
scas
call
jge
push
cld
dec
pop
shlb
dec
mov
sbb
divl
xor
lret
outsb
inc
pop
inc
cs
in
jae
push
fwait
lahf
xor
adc
jnp
xchg
outsl
pop
xlat
mov
js
jecxz
dec
xor
cmp
mov
nop
inc
push
test
das
add
das
pop
and
xchg
cltd
mov
jnp,pt
push
push
mov
lods
arpl
sbb
popa
jl
pusha
sarl
leave
cs
aam
xchg
enter
testl
inc
aas
movsb
pop
lds
and
dec
sub
or
xor
jg
hlt
and
xor
aad
sbb
add
jbe
push
xchg
adc
xor
cmpsb
cmp
daa
mov
pop
mov
les
insb
push
inc
dec
push
ja
dec
repz
dec
dec
imul
decl
sbb
and
stos
pop
mov
es
xchg
outsb
push
inc
leave
mov
imul
adcb
scas
lods
sbb
pop
and
mov
push
mov
dec
loope
dec
cmp
xchg
in
sti
cmc
loopne
and
adc
add
xchg
pushf
jg
jne
and
fistpl
dec
cmp
sub
cmp
ficompl
mov
cs
mov
inc
mov
mov
aaa
sbbl
andb
mov
stos
in
cmpsb
push
jp
mov
into
adc
push
std
xchg
loop,pt
fstpl
mov
inc
outsl
sub
stos
ja
xchg
cwtl
pop
int
xor
push
pusha
inc
out
out
stos
inc
cmc
jge
inc
jns
movb
loopne
outsl
inc
fwait
xchg
dec
das
fstl
ss
fsubs
xor
mov
andl
fldt
les
push
fbstp
addr16
lds
push
xchg
stos
call
nop
js
es
daa
push
xchg
scas
adcl
int3
je
addl
and
fistl
or
in
cmpl
aaa
out
mov
xchg
and
pushf
add
bound
and
bound
xchg
imul
jns
aas
push
jl
and
test
ret
push
pop
popa
jp
stos
lret
shr
ja
rol
pop
jbe
pop
je
insl
aas
stos
pop
xchg
push
je
or
add
mov
mov
mov
adc
out
mov
rclb
adc
cmpsl
in
sub
pop
mov
sub
stc
add
je
sahf
je
sub
sarl
push
push
mov
int
addb
loope
inc
int
shll
pop
pop
inc
xchg
jo
or
push
scas
sub
gs
fsubrl
inc
jl
cmpsb
ja
jo
ljmp
mov
test
or
dec
repz
es
int3
lcall
add
pop
lahf
mov
jle
push
xor
push
cmc
and
pop
xchg
pop
fldcw
ret
xchg
std
stos
lock
xchg
cmpsl
xor
pop
jno
popa
mov
shlb
rcrl
scas
push
fisttpll
adc
ljmp
cmp
adc
sub
inc
pop
outsb
aad
dec
scas
sub
jo
xchg
mov
xor
scas
and
jb
nop
int
clc
test
mov
or
movsb
sbb
and
xchg
mov
hlt
inc
sub
int3
imul
pop
pop
rcl
out
cmp
mov
call
imul
ss
int3
inc
pop
xor
or
jle
dec
and
pop
jno
pop
and
add
jle
pop
xchg
lret
fcoml
outsl
push
out
ja
dec
sub
dec
test
aad
stc
jg
xchg
xchg
aas
pop
pusha
xchg
xor
mov
fwait
adc
mov
mov
and
or
xchg
jle
dec
fstpl
loope
lds
cmp
mov
popf
add
out
pusha
jns
cmp
pop
fsubp
movsb
shlb
hlt
xor
mov
imul
orl
fs
add
cmp
add
test
push
incb
nop
callw
sbb
lods
xchg
pushl
dec
jo
mov
xorb
xor
xor
xor
cld
inc
sbb
stc
sbb
jmp
clc
ficompl
mov
mov
rep
mov
mov
stos
inc
in
sbb
sahf
xor
nop
loopne
fstpl
aam
call
or
push
mov
sbb
lds
dec
ror
and
rolb
das
int
mov
dec
shrb
mov
imul
cmp
or
insl
cmp
cmp
stos
xor
aas
aaa
insb
adc
mov
push
jbe
in
sbb
adc
pusha
jns
pop
adc
repnz
push
notb
mov
push
repz
xor
pop
call
icebp
out
repz
scas
jnp
jo
cld
xchg
movsb
incb
mov
inc
daa
in
push
inc
sub
sbb
cwtl
adc
fldenv
xchg
fadds
shl
jns
jbe
jge
lcall
lds
fldl
cmpsl
cmove
leave
inc
and
add
pop
in
aas
jl
pop
add
insl
sbb
subl
fcmovnb
pushf
and
ret
pop
das
xchg
je
jns
sbb
jle
ljmp
dec
sbb
jle
aas
cli
xchg
push
aad
cmpb
les
ds
sbb
pop
adcb
xchg
xor
lods
mov
stos
loop
add
inc
dec
or
push
movntps
in
cwtl
sub
jns
or
jnp
je
push
sbb
pop
mov
into
gs
scas
mov
dec
testl
sahf
cmpsl
test
fsub
push
stos
scas
sbb
int3
jne
jl
cmp
pop
subb
sbb
xchg
test
jns
jge
jnp
mov
sub
test
mov
and
into
or
xchg
aas
leave
pusha
call
lret
in
jbe
aaa
and
xor
mov
mov
int3
jne
test
mov
int3
scas
stos
push
int3
pop
inc
lret
mov
xchg
cltd
dec
daa
fcmovb
xchg
rorb
or
scas
mov
mov
xor
mov
jns
inc
or
enter
and
add
pop
xchg
call
clc
mov
mov
pop
cwtl
imul
ret
ja
incl
sbb
push
jnp
imul
push
xchg
int3
popf
outsb
push
adcl
es
stos
sub
xor
inc
cmp
mov
sub
in
jl
mov
or
clc
stos
cmp
lcall
shll
ret
aaa
es
or
or
inc
faddl
sub
jae
mov
clc
sbb
lds
dec
mov
test
lea
repz
add
xchg
lahf
loop
inc
jl
or
sbb
test
dec
cmp
js
inc
divl
pop
dec
pop
mov
gs
jmp
xchg
mov
test
inc
sbb
lds
mov
shrb
imul
jo
dec
outsb
mov
in
xchg
outsl
push
sbb
mov
mov
adc
movsb
adc
out
testl
cmpsb
mov
mov
hlt
push
aad
fldcw
pop
call
shrb
push
add
ret
pop
sub
xor
shrb
xor
push
push
pop
loopne
lahf
adc
leave
cli
push
xor
or
fidivl
cli
sahf
or
ret
cmp
dec
enter
aas
mov
lcall
xchg
mov
xchg
fadd
and
out
out
sbb
into
or
movsl
int3
mov
inc
dec
outsl
lds
loopne
inc
sub
push
sbb
dec
or
ret
fsubrl
sbb
adc
sbbb
jecxz
push
push
lret
jmp
sbb
lcall
and
push
or
pop
in
aaa
sbb
sub
push
dec
test
adc
mov
js
jmp
add
jbe
xchg
jnp
pop
mov
xchg
jno
ret
lret
sbb
std
aaa
cmc
iret
call
mov
dec
in
add
dec
jae
movsl
xchg
pop
test
ss
fs
sbb
aad
vdivps
mov
and
testl
in
mov
add
or
jbe
int3
and
push
cmp
cli
jnp
decl
xor
mov
imul
add
test
sbbb
jl
push
inc
cmp
mov
fs
loop
mov
into
gs
mov
in
inc
out
push
fdivl
test
ret
or
and
sub
inc
mov
adc
or
or
lret
mov
push
and
pop
std
push
gs
jno
insl
sti
dec
test
mov
mov
fisubs
xor
fildll
mov
daa
mov
mov
lds
add
or
cmpsl
fwait
jnp
sub
lds
mov
jmp
fidivs
push
aaa
mov
sarb
leave
jbe
lret
push
ret
mov
je
cmp
pusha
lods
or
xchg
and
mov
in
pop
dec
int
push
pushf
jl
test
adc
jne
in
ret
lahf
iret
jbe
lods
and
and
ret
shlb
arpl
jb
stos
in
mov
sbbb
mov
xchg
or
cltd
cmpl
pop
imul
lret
call
adc
mov
fcmovb
cli
cli
ljmp
std
daa
mov
pop
adc
aaa
int3
sub
xorl
sbb
cmp
hlt
add
ja
arpl
jmp
xorl
stc
in
in
sub
gs
fldt
cld
mov
ljmp
jns
in
dec
in
push
mov
push
fprem1
adcl
mov
jo
icebp
cmpsb
mov
xchg
push
and
jp
xlat
jno
xchg
adcl
xchg
jl
push
cmp
push
lods
fsts
push
stos
push
decl
pushf
icebp
sbb
and
loopne
in
jle
out
mov
fwait
mov
aas
ja
pop
int3
scas
jo
mov
call
movsb
cmp
add
xor
or
fucomip
scas
je
pop
mov
pop
push
xchg
pop
int
aaa
adc
jmp
iret
sub
dec
mov
movsb
pop
lods
std
popf
add
test
dec
adc
iret
cld
xor
stos
ror
cltd
std
pop
hlt
cs
mov
push
or
test
hlt
adc
xorl
hlt
movsb
inc
dec
stc
adc
call
repnz
pop
cmpsb
or
ret
sub
jbe
mov
inc
lods
jp
and
sarl
add
push
add
mov
sbb
fwait
mov
xchg
and
cmc
jno
mov
push
sub
xorl
js
movsb
mov
decl
ja
cld
push
lock
hlt
ds
sub
xor
pop
out
mov
mov
ret
jl
ds
sub
daa
lret
push
mov
cltd
cmp
hlt
test
jecxz
push
repnz
sti
sahf
add
outsb
lahf
popf
shll
fsubrp
in
mov
inc
jg
cmp
pusha
mov
scas
rcrb
stos
cmp
xchg
inc
leave
rclb
lea
ja
cmpsl
mov
mov
push
mov
roll
jmp
inc
add
out
and
lret
xchg
push
xor
xchg
fsubrl
mov
adc
jp
in
mov
mov
lods
add
test
inc
dec
jp
repnz
sub
jecxz
sub
sub
out
xor
fstpl
shrl
jae
or
lods
adcb
aaa
push
mov
ret
int3
pusha
dec
push
sub
dec
js
mov
rep
cmpsl
adc
mov
and
or
orb
mov
xchg
xor
imul
jae
push
add
sub
je
outsb
xor
mov
mov
ljmp
or
ss
mov
xchg
shlb
mov
lea
jle
sbb
jne
pop
mov
pusha
div
add
add
outsb
fidivrl
mov
dec
mov
iret
jne
fstl
xchg
scas
fdivrs
dec
mov
fucomip
ror
fs
fsubrs
adc
aad
rcrb
pusha
jb
outsb
xchg
mov
in
sbb
jmp
sbb
dec
add
in
xchg
mov
mov
mov
sbb
sahf
mov
mov
adc
sub
sub
xchg
aas
sbb
lahf
jg
sub
je
push
add
out
fcoml
or
fldl
rcll
loop
ficompl
xchg
push
popf
mov
mov
mov
mov
stc
pop
or
adc
jae
movsl
push
or
xchg
les
pop
pop
jae
adc
mov
out
dec
pop
jbe
xchg
sbb
loope
jnp
cmp
inc
out
dec
movsb
jbe
push
or
movsl
dec
or
push
jb
xor
insl
push
xor
int
incl
jp
shll
pop
orb
ret
cwtl
mov
and
sbb
movsl
les
push
lcall
push
jmp
lret
lds
sahf
clc
mov
sub
push
cmpsb
hlt
inc
jno
add
cmp
imul
jbe
aaa
es
ss
test
jno
scas
mov
ss
adc
jbe
scas
xchg
pushf
add
xchg
sub
test
jp
jno
sbb
push
adc
push
xor
inc
decl
pop
mov
xorl
test
add
fs
sub
adc
out
mov
nop
sbb
sti
mov
sahf
jp
push
push
cmp
pop
mov
xchg
fstpt
add
xor
repnz
and
imul
test
imul
iret
loopne
rcrb
mov
lds
dec
lea
shlb
mov
test
sub
shlb
mov
call
call
negl
pop
push
or
dec
mull
dec
pminub
jle
sub
inc
movsl
pop
sbb
sub
scas
push
xor
lcall
in
sti
mov
ja
inc
hlt
xor
stos
lret
aad
push
mov
push
jnp
mov
xchg
jge
arpl
add
xor
cmp
pop
dec
push
cld
loop
mov
addr16
stos
les
pop
les
fnsave
fldt
inc
int
add
adc
pusha
mov
mov
push
or
mov
repz
pop
test
xchg
in
mov
ljmp
mov
add
and
or
inc
push
cmp
sub
xchg
sub
pop
rclb
inc
pop
xor
jmp
jp
or
lret
and
loope
jnp
daa
movsl
pop
inc
dec
sbb
ret
rolb
sbb
test
insb
loop
movsl
cmc
push
push
shl
pusha
lock
aad
fisubrs
inc
mov
sbb
push
cli
sub
jmp
mov
mov
cmpsl
cmpb
push
pop
and
xchg
lahf
repnz
fisttpl
dec
loop
pop
loop
inc
jns
das
cmc
ret
outsl
dec
enter
cmp
lock
pushl
inc
sbb
xlat
dec
out
ljmp
jmp
pop
out
mov
adc
mov
pop
xor
xchg
add
and
jns
into
test
sbb
pop
jbe
cmp
jb
add
and
and
cs
movsl
or
imull
xor
push
pop
sbb
lods
pop
and
rdmsr
sbb
inc
insb
pop
jnp
xor
mov
fwait
mov
outsl
inc
gs
lock
popf
sub
mov
jnp
and
lea
fimuls
adcb
sbb
cmpsl
xor
or
mov
xchg
cmpsl
fwait
mov
cs
xchg
mov
or
ljmp
xor
mov
adc
jg
pop
add
fsubrs
mov
iret
adc
or
push
inc
adc
mov
mov
pop
xchg
outsl
loope
sub
xchg
or
push
or
jg
and
xchg
shl
xor
or
push
popa
sbb
pop
xchg
outsl
jp
cmp
add
inc
mov
or
sub
sub
lods
int3
and
roll
mov
shlb
xor
popa
ja
pop
inc
je
mov
jne
test
xor
xor
sahf
mov
cmp
sbb
iret
fcomps
stos
ss
hlt
jmp
and
fcompl
addr16
scas
jo
mov
mov
rorl
arpl
cmp
dec
cmpsl
loope
test
cmp
dec
dec
mov
ja
xchg
inc
cmp
jge
pop
mov
shlb
out
test
jne
mov
pushf
mov
ds
mov
pushf
jmp
mov
fcomi
or
jmp
sbb
mov
std
es
dec
jge
cmp
ror
insb
inc
mov
pop
pushf
dec
sbb
aaa
and
and
call
loop
mov
sbbl
into
cwtl
adc
lahf
lret
pop
sbbl
insb
mov
ret
or
adc
mov
in
mov
pushf
adc
std
dec
jl
mov
dec
js
mov
sub
push
mov
rclb
cmp
sbb
lahf
imul
push
inc
shr
mov
fidivrs
notl
pushf
adc
jbe
je
mov
dec
in
pop
sub
fimull
mov
inc
aas
sub
mov
xchg
dec
repz
push
in
jne
mov
stos
rorb
mov
enter
sti
aas
test
pop
mov
pop
jp
andl
adc
cmpsl
adc
stc
notb
push
adc
rcrb
stc
or
nop
mov
ljmp
or
push
test
mov
sahf
xor
xchg
sub
bound
movsb
jge
adc
mov
sub
fs
pushf
cld
fsubp
icebp
ret
insl
aad
jmp
dec
dec
add
or
test
call
cli
dec
rolb
push
cwtl
xor
mov
orl
lock
scas
jbe,pt
hlt
sub
mov
pop
subl
and
jbe
push
jl
les
in
ret
or
aad
pslld
bound
add
mov
cmpb
push
ret
push
or
push
xchg
inc
fnstenv
out
mov
adc
cmpsl
dec
and
cmp
jae
fcoms
mov
adc
aad
mov
inc
jmp
push
mov
and
lods
scas
pop
das
mov
mov
inc
pushf
cmpl
mov
xchg
jg
sbb
mov
pop
loope
call
movsb
in
mov
cmp
xchg
or
inc
jbe
pop
jbe
call
ss
outsb
sbb
mov
inc
jb
mov
fistpll
hlt
out
je
jmp
dec
and
test
in
sub
mov
push
and
adc
jl
test
aad
pusha
nop
mov
ljmp
mov
jg
cmc
in
inc
pop
cmc
adc
sub
sbb
mov
jg
sub
out
sti
shl
pusha
add
movsb
aaa
jae
imul
mov
call
push
sub
mov
lods
pusha
sbb
js
iret
cmp
jg
push
scas
mov
pop
mov
add
sub
mov
jnp
cmpsb
and
bound
mov
jns
std
jl
cwtl
stos
dec
dec
pop
xorl
jg
shll
and
and
sbb
add
popf
test
ja
mov
sub
daa
jbe
mov
fsubl
popf
out
fidivrs
leave
scas
sarb
outsb
mov
or
jb
fstl
add
inc
icebp
imul
and
xchg
mov
scas
adc
mov
mov
cmp
adc
scas
sti
andb
loope
add
ss
pop
stos
insl
pop
or
adc
push
out
rcrl
pop
scas
jle
ljmp
frstor
mov
lahf
dec
adc
enter
lods
adc
out
adc
and
jbe
mov
add
sub
orl
cmp
and
in
aaa
push
sbb
push
push
pop
sub
sbb
enter
sub
mov
nop
cmp
fstpl
std
in
cmp
xor
and
cmp
push
jg
sub
call
push
cmc
push
loop
and
push
cmpsl
orb
rcr
shr
jecxz
lahf
push
inc
xchg
jge
cmpsl
mov
inc
push
mov
fwait
lods
or
pop
cwtl
jge
ja
or
addr16
mov
jg
dec
jo
inc
adc
stos
cltd
stos
inc
sbb
rorb
pop
jmp
jbe
movsb
xor
xor
mov
cmp
outsb
imul
fcoml
sub
mov
inc
push
mov
pop
cmc
pop
repz
es
stos
insl
fsin
dec
mov
fcmovnbe
sti
adc
adc
jmp
stos
in
sbb
push
adc
mov
sti
pop
cmp
scas
hlt
stos
fs
clc
mov
movsb
int3
lret
inc
push
and
sub
push
out
loope
xchg
or
lret
dec
cmp
stos
xor
insl
test
mov
jbe
outsl
add
xchg
mov
push
aas
sarb
aam
jmp
out
xor
jecxz
adc
pushf
push
subl
cwtl
repnz
pop
addb
sbb
xorl
mov
nop
sbb
push
movsl
negb
lods
xchg
xchg
or
mov
into
loopne
insl
xor
mov
das
repnz
popf
test
xchg
cmpsl
sbb
and
movsl
pop
xor
inc
or
mov
push
fidivs
mov
lret
push
in
sub
cmpsl
jp
dec
loopne
mov
fisubs
js
aam
icebp
xchg
pushl
fiadds
mov
xchg
mov
cli
xor
sbb
push
cli
jge
and
xlat
lock
ja
pop
popa
mov
push
sbb
cmpsb
call
mov
jo
movsl
lods
sbb
scas
add
fwait
lret
hlt
in
movsb
jle
int
dec
jl
inc
add
jo
repnz
mov
leave
subb
jecxz
sub
push
scas
std
jecxz
inc
icebp
cltd
repnz
jecxz
bound
push
sbb
rorl
iret
test
xchg
mov
int
les
shll
jno
cmpsb
inc
add
das
nop
stos
fucomp
in
mov
push
mov
inc
out
xchg
mov
add
iret
repz
lea
or
push
shl
imul
dec
ds
push
cmp
push
ret
ja
or
jmp
outsl
sbb
enter
adc
sub
cmpsb
push
insb
mov
sbb
cmpsb
leave
cmpl
adc
mov
insb
xchg
cmc
sub
sub
movsl
inc
jle
nop
pop
dec
sbb
lods
push
lds
loop
dec
popf
dec
test
sub
xchg
lahf
xchg
flds
mov
clc
xor
or
loop
mov
xor
pop
nop
jno
decl
mov
in
or
out
es
inc
xor
and
cmp
cmp
imul
mov
fcmovnbe
push
xor
push
lahf
cmp
pop
test
or
mov
inc
push
dec
ja
int3
sub
dec
mov
jmp
xorb
sbb
das
stos
nop
jns
mov
or
inc
stos
mov
pushf
or
jmp
or
cmp
xchg
int
jp
jge
pusha
adc
pop
pop
or
push
repnz
push
dec
adc
or
iret
mov
push
insl
push
rorl
mov
call
scas
mov
xchg
imul
pusha
test
pusha
popa
gs
or
in
ret
fcoms
cmp
mov
imul
xor
call
aaa
sti
xchg
mov
movsb
mov
ret
and
enter
jge
pop
clc
daa
ja
in
push
test
jmp
xor
sub
int3
insb
and
jle
add
push
sbb
pop
fwait
mov
jmp
test
sub
inc
xchg
jb
popf
clc
out
xchg
or
nop
and
push
pop
in
sbb
dec
decb
dec
mov
or
sti
movsl
ret
add
jl
popf
daa
fimull
mov
and
mov
sbb
adc
mov
shld
mov
test
outsl
mov
dec
pop
ja
repnz
push
lods
ljmp
ret
imul
mov
push
adc
inc
and
jbe
or
loopne
mov
mov
enter
lods
daa
imul
movsb
dec
hlt
pop
lea
aas
and
icebp
dec
xorl
in
int
push
and
mov
out
mov
mov
pop
dec
jae
xor
mov
imul
aaa
in
and
enter
lods
ret
and
jp
ja
in
lahf
push
cmp
rclb
pop
xchg
call
iret
mov
fsub
lahf
xchg
data16
call
xor
das
icebp
xchg
iret
sbb
movsb
mov
stos
and
cmp
inc
sub
aad
lea
or
fdivp
jecxz
jno
imul
push
sbb
mov
repnz
pop
pushf
mov
lea
fisubrl
sahf
add
pop
aam
into
mov
aas
mov
mov
mov
sub
scas
iret
and
xchg
dec
fiaddl
fs
filds
aam
push
pop
xchg
mov
repnz
sub
in
test
sbb
xlat
sub
mov
lds
sbb
mov
pushf
cld
loope
divb
and
jne
sub
and
xlat
ss
sarl
xchg
jae
push
jl
pop
into
pop
mov
aas
pop
sbb
xorl
divl
xlat
cmp
or
in
jbe
scas
out
test
push
pop
and
addr16
lods
movsb
sub
sbb
aaa
xor
mov
add
dec
das
pusha
fwait
xchg
orl
in
insb
int
xchg
xlat
nop
pushf
jge
and
jnp
movsl
test
scas
loope
jo
adc
jno
jecxz
xchg
sti
mov
mov
lahf
xchg
fwait
loop
mov
cmc
cmpsl
popf
ds
push
push
mov
sarl
into
jnp
cmp
sbb
jmp
ficoml
jo
xor
jge
test
subl
inc
and
mov
aam
mov
sbb
inc
xor
mov
lea
jb
lea
movsl
fcoml
stos
dec
xchg
mov
jae
lock
out
or
mov
shlb
jl
fstps
pop
mov
and
push
jns
repz
decb
stos
xchg
movsl
xor
inc
lods
sahf
xor
into
fstps
inc
fs
lds
iret
xlat
scas
or
cmp
popa
inc
xor
cmc
leave
fnstcw
add
out
xchg
dec
adcl
imul
lahf
popa
dec
cs
push
jb
aas
dec
test
les
jne
test
fldt
lock
fnstsw
loop
or
mov
nop
jbe
rcl
mov
sbb
in
popa
and
xor
leave
mov
aaa
aaa
add
mov
popf
lcall
cltd
mov
outsb
div
inc
loop
push
mov
sub
bound
scas
out
rcl
lret
dec
jo
arpl
xlat
mov
and
aad
or
jns
xchg
leave
lods
push
out
xchg
sub
push
in
pop
rol
push
inc
dec
into
cmp
dec
jne,pn
lret
sbb
sbb
sub
data16
je
fld
sub
fsubrl
sub
roll
pop
sub
cld
pop
fcoml
or
fcomp
pusha
mov
fnstcw
leave
xchg
sub
scas
adc
or
xchg
xchg
dec
and
push
es
notl
cli
lahf
mov
add
push
mov
adc
cmpsb
ret
cwtl
and
outsl
je
aam
loope
sub
repz
hlt
push
sbb
cmpsb
stc
ret
adc
push
push
sbb
and
aas
sub
mov
pop
pop
add
sub
adc
sbb
push
xchg
fsubs
pop
cmp
sub
imul
push
xchg
cmp
rclb
xchg
mov
sbb
popf
test
jg
push
ljmp
std
add
scas
sbb
mov
out
pop
push
add
jns
jne
jae
lods
fadds
adc
mov
xchg
mov
lret
int3
sbb
mov
loope
dec
xchg
fisubrs
subb
sbbl
cmp
adcb
aaa
repz
pop
mov
jge
repnz
subb
mov
fdivrs
insb
push
into
js
dec
ret
mov
mov
push
xlat
enter
hlt
xor
mov
push
push
and
test
adc
jle
cmpsl
jecxz
imul
popa
mov
lahf
adc
cmp
cmp
pop
lods
push
pusha
lcall
add
cmpsb
xor
cmp
lahf
dec
jns
dec
test
jns
push
nop
xor
pushf
arpl
and
mov
or
fmul
dec
daa
mov
inc
push
cltd
mov
cwtl
or
xchg
mov
inc
or
pop
jmp
das
loopne
sbb
dec
idivb
fidivl
ss
sbb
nop
xor
push
mov
xor
mov
mov
xor
pop
out
jle
loope
addr16
test
mov
fstpt
scas
mov
push
pop
pop
add
push
das
adc
pop
mov
outsl
xchg
in
loope
cmc
stos
outsl
sub
daa
or
push
mov
ljmp
leave
fisubrl
xor
xorl
jle
xchg
daa
testl
or
fwait
lret
xor
mov
out
outsl
loope,pn
push
rclb
and
imul
jns
jbe
and
insb
mov
in
lods
xchg
scas
pusha
xchg
bnd
inc
ss
movsl
iret
les
lret
or
cs
scas
fidivrl
sbb
jp
mov
push
xchg
arpl
dec
xor
cmpsb
push
adc
enter
sub
push
nop
push
or
or
xchg
and
xchg
rol
in
and
cld
rsqrtps
pop
mov
and
hlt
scas
and
dec
in
ja
bound
and
fisttpl
stos
adc
jecxz
jo
inc
mov
inc
sti
pushf
sti
dec
in
imul
add
je
pop
nop
dec
data16
xchg
enter
add
pop
cmpsb
popf
xorb
dec
data16
dec
inc
loop
jns
in
stc
cltd
call
outsl
sub
movsb
fucomip
jmp
addr16
fisubrs
pop
sbb
dec
pushf
adc
lcall
lcall
aaa
cmp
stos
dec
inc
jp
inc
data16
test
enter
es
test
xor
add
sub
xchg
ret
mov
enter
push
xor
into
bound
sub
cli
sbb
fwait
dec
pop
callw
inc
aaa
pop
mov
adc
imul
cmp
pop
stos
sub
in
jns
mov
jbe
push
pusha
daa
sub
dec
rorb
movsl
cmp
pop
es
cmp
jmp
mov
mov
pop
mov
mov
fcom
movsb
and
sti
pop
dec
inc
cmc
scas
add
jb
mov
imul
push
jno
sbb
cwtl
cmpsb
rcr
fbld
pop
cld
rol
adc
pusha
divb
jbe
movsb
jo
adc
jecxz
leave
fmul
iret
daa
xchg
in
jle
daa
pusha
push
push
mov
pop
movsb
and
pop
icebp
cli
pop
sahf
adc
adc
test
xorl
xor
sarb
imul
stc
lcall
xor
jb
jle
sub
les
enter
fcomi
adc
ja
pop
jno
sbb
jno
mov
in
sub
mov
aad
cmp
hlt
mov
push
scas
fidivl
cmp
pop
test
xlat
sub
das
data16
lret
stos
and
repnz
arpl
mov
addr16
in
sbb
loopne
pop
sbb
fstpl
jbe
ja
fdiv
dec
frstor
lock
fstl
mov
cld
rcrl
mov
sub
out
inc
out
jg
and
mov
xchg
nop
jae
cmp
call
insb
lea
mov
into
sti
das
outsb
jmp
dec
push
and
fimuls
or
ds
pop
cmp
pop
outsl
fs
sbb
xchg
push
jo
stos
aam
pop
mov
push
popf
int
rcl
and
out
mov
shr
mov
cmp
mov
in
xlat
std
pop
std
movsl
or
lods
ret
fisubl
jmp
xor
lds
orb
lock
pop
dec
fwait
add
aas
shrb
das
mov
sub
inc
jmp
pop
loopne
lahf
pushf
fsubs
push
subl
les
push
andl
add
stc
es
xor
sahf
xor
add
push
sub
in
mov
push
aam
pop
cmp
fisubrs
mov
addr16
iret
inc
hlt
jae
inc
cmp
stc
out
in
loope
mov
and
jecxz
xor
jno
push
sahf
inc
push
inc
dec
mov
add
es
es
js
subb
sarb
or
cmpsl
mov
ss
jg
fs
jnp
pop
ffree
or
sbb
pop
repnz
int
lcall
dec
popa
push
cli
cmp
arpl
sbb
loope
add
sbb
shlb
or
orl
xchg
xchg
mov
data16
lods
xchg
mov
xchg
sbb
aam
push
lcall
sti
lret
ss
arpl
fsubl
imul
aas
inc
or
add
dec
lods
icebp
out
mov
js
mov
push
xchg
xor
in
or
jecxz
mov
xor
pop
popf
scas
ret
aas
dec
mov
andl
inc
xor
mov
andl
aam
inc
outsb
repnz
out
call
push
les
insl
jmp
es
les
out
std
bound
out
mov
push
mov
push
sbb
loope,pt
mov
mov
mov
jb
inc
pop
mov
shrb
sbb
xchg
fs
pop
push
xor
mov
sbb
push
scas
mov
out
gs
pop
pop
int
movsl
rcl
sub
xchg
pop
jp
mov
sti
jb
xchg
sub
dec
fcoms
stc
adc
push
xor
dec
outsl
pinsrw
outsb
add
lods
xor
jge
inc
jecxz
xor
clc
inc
add
jnp
add
inc
fidivs
in
ds
fadds
or
ljmp
sub
mov
js
aad
es
lret
xchg
mov
pop
jae
cmp
aaa
sub
sahf
sbb
mov
lahf
clc
data16
js
jo
dec
rol
repz
jne
fsubl
jbe
jp
pop
push
pop
ret
ret
xor
int
xchg
sub
popa
ss
inc
clc
and
adc
test
loop
xlat
sub
pop
daa
add
pop
lret
shrb
add
push
push
dec
cmp
cmpsb
push
dec
and
cmp
lea
in
sub
xor
dec
push
pop
aas
xor
jg
sbb
mov
cmpb
jecxz
and
mov
inc
cmpsl
ret
add
fimull
or
aam
jae
push
clc
sahf
or
sub
jmp
dec
add
jb
pop
in
ja
or
or
push
ja
or
inc
cli
adc
imul
push
add
push
sar
mov
pop
dec
in
out
or
or
fs
pop
and
scas
push
popf
sbb
aam
bound
pop
popa
ds
test
nop
iret
lods
xchg
xchg
mov
adc
bound
or
fisubrs
inc
sahf
mov
add
sbb
lds
mov
lea
push
out
and
jp
adc
aas
mov
aam
cmpsb
sub
add
cwtl
jmp
xor
cltd
sbb
into
out
in
in
out
mov
add
imul
dec
jge
xchg
addr16
inc
jnp
pop
mov
sbb
pop
stos
pop
scas
cmpsb
xor
inc
insb
dec
pop
jnp
cmc
je
or
sti
cmp
mov
sub
out
int
lahf
mov
js
xchg
or
jo
je
jge
sbb
outsl
push
insb
push
insb
pop
or
mov
aad
fdivrl
mov
inc
xor
push
orb
hlt
int
mov
fnstenv
and
sbb
add
icebp
cmp
test
cmpsb
daa
sub
js
adc
xor
hlt
pop
test
ljmp
xor
inc
sbb
pusha
mov
add
mov
ja
dec
mov
or
test
ret
mov
xchg
and
in
ss
fadds
aaa
mov
inc
subl
adc
loope
pop
sub
ljmp
pop
sti
jae
aad
adc
rclb
adc
jo,pn
lcall
push
sub
jbe
mov
clc
pop
insb
xor
pop
jns
das
lret
xchg
movl
leave
frstor
xchg
jno
sub
mov
inc
ss
jl
and
mov
dec
jmp
fsts
jae
lahf
sbb
fucomip
shr
jle
or
mov
ret
mov
xchg
fs
int
mov
add
xorl
push
sahf
add
cwtl
inc
stos
fdivrl
js
mov
or
cmpsl
jmp
insb
xchg
mov
fs
dec
dec
xchg
inc
cltd
jge
scas
sbbb
mov
and
add
test
cltd
or
inc
out
ss
xlat
test
jns
loopne
mov
test
push
pop
push
xchg
es
mov
sub
and
sbb
repnz
mov
xchg
pop
jb
add
imul
nop
nop
inc
aaa
push
jmp
cwtl
xchg
lods
sbb
pop
lock
jecxz
addr16
call
mov
push
into
fdiv
lahf
std
lods
inc
push
mov
scas
mov
mov
ror
jne
sub
xchg
leave
popa
mov
sbbb
cwtl
sub
outsb
data16
mov
aaa
cmc
out
popa
pop
ds
nop
hlt
leave
and
insl
lret
or
hlt
popf
jne
lods
cli
add
xor
inc
add
enter
mov
jbe
jle
push
pop
push
inc
mov
insb
xchg
mov
xchg
and
jns
int
jle
inc
adc
push
jecxz
pushf
push
lods
push
lock
daa
dec
xchg
insb
sub
popf
xchg
data16
cmpsl
repz
and
repnz
pop
mov
gs
sbb
iret
lea
outsb
mov
es
lahf
ror
fmul
imul
repz
jae
mov
repz
les
cmp
inc
mov
je
es
icebp
push
jnp
pop
scas
mov
mov
mov
adc
in
popa
xchg
xor
push
loopne
mov
xor
sub
repz
cmp
jnp
jp
mov
mov
stos
out
mov
gs
mov
or
cmpsb
imul
sbb
jo
mov
lret
enter
std
mov
cmp
test
sbb
inc
insl
jle
xor
insl
es
ja
mov
test
lds
loope
scas
add
stos
jns
push
pop
ficoms
sarb
sbb
outsl
data16
pop
hlt
dec
hlt
dec
sbb
or
clc
push
xor
ret
mov
cmp
push
movsl
lea
and
lcall
or
mov
mov
fimuls
fisttps
cld
fsubrs
inc
sub
jb
cwtl
and
sbbl
aaa
stos
mov
cmp
icebp
in
and
cltd
inc
les
and
inc
clc
lret
mov
fcomps
or
dec
adc
mov
push
scas
shll
je
and
jmp
mov
jnp
movsl
push
movsl
xor
test
pop
ffreep
xchg
xor
test
stos
les
je
and
cmp
xchg
loopne
adc
addr16
jnp
jo
loope
mov
xchg
inc
dec
push
sub
test
cmc
stos
xor
andl
sbb
mov
mov
sahf
add
sub
repz
insl
mov
inc
ret
testl
sahf
ja
dec
ja
dec
xchg
add
push
jle
xchg
mov
and
xchg
test
into
les
leave
sub
or
aad
or
mov
shll
dec
add
mov
and
subl
aaa
mov
out
sbb
jl
add
daa
mov
loop
sbb
add
arpl
pop
xor
or
subb
and
outsl
push
into
mov
xorl
mov
mov
mov
fsts
adc
xor
jne
xchg
fsubr
test
mov
inc
jmp
push
sar
insb
cwtl
addr16
or
aad
loopne
or
jnp
popa
ss
loopne
push
mov
in
das
sub
jo
jns
pop
pop
cld
add
cs
movsl
out
sbb
std
data16
and
and
dec
jne
inc
shl
or
shr
push
cmp
mov
dec
mov
idivb
flds
lret
mov
ret
in
mov
andl
inc
cmp
push
int
and
ja
shll
and
adc
in
jns
outsb
xlat
sbbl
jmp
mov
inc
shlb
mov
pop
pop
jmp
or
jno
cli
outsl
add
pusha
cwtl
jnp
ljmp
jno
jge
imul
jge
cld
cltd
lods
lods
pusha
cmp
in
xchg
or
pop
enter
popl
mov
ljmp
mov
loop
and
push
jno
adc
add
jne
cmp
or
popa
leave
lods
mov
xchg
enter
mov
in
push
pushf
jle
push
xchg
das
mov
cmp
out
aaa
loop
das
pop
or
outsb
vpsubb
pushf
sbb
push
mov
enter
lods
insb
pop
shrb
push
pop
xchg
xchg
pop
aad
rorl
test
imul
movsb
mov
mov
call
mov
push
lret
xchg
jmp
push
sbb
pop
add
and
sbb
lods
jne
ffreep
ja
pop
and
mov
stos
or
ret
stos
adc
add
push
pop
iret
adc
leave
popf
inc
mov
repz
in
mov
and
xor
xor
lahf
push
jbe
lods
filds
inc
shrl
dec
mov
adc
imul
mov
mov
sbb
push
sub
call
lods
push
out
sbb
cmpb
into
pop
in
mov
adc
mov
sub
leave
std
mov
lcall
jbe
fxch
dec
or
sub
sbb
jae
hlt
cmpsb
mov
lahf
pop
mov
test
and
push
insl
xchg
xor
repz
shrb
js
fmull
sarl
lds
or
jns
dec
out
hlt
test
je
mov
push
sub
or
test
push
dec
js
push
pop
shl
push
loope
call
xor
dec
aam
and
xchg
testl
pushf
inc
in
jge
add
cltd
mov
push
xchg
loopne
lods
aaa
pop
ja
out
clc
test
push
mov
mov
jne
outsl
or
test
out
pushf
in
in
mov
lret
sbb
mov
mov
std
or
subl
pop
mov
dec
xor
jnp
rcl
or
push
repz
aas
in
mov
insb
sub
pop
mov
jmp
or
xor
lahf
xchg
cmp
dec
inc
push
ljmp
pushl
adc
mov
sub
push
sbb
jecxz
inc
incl
cmp
mov
repz
ss
insb
shrb
xchg
xchg
mov
daa
std
dec
xor
mov
push
cmp
sbb
xor
pop
les
pop
int3
inc
mov
sbb
sbb
pop
lcall
lock
cmc
roll
mov
int
movsl
pop
adc
push
lret
sub
lret
enter
std
add
dec
inc
mov
repnz
enter
mov
mov
jmp
or
mov
in
pop
xchg
jp
jge
jo
xor
mov
and
xchg
fs
push
movsl
pop
out
mov
cld
xchg
mov
cltd
lahf
cmp
testb
ja
xor
aad
add
js
int3
sbb
fs
movsl
mov
jno
adc
lock
aas
mov
mov
adc
insl
and
push
out
mov
mov
test
fisubs
inc
shrb
addr16
and
mov
ficomps
mov
fistps
jae
mov
adc
loop
mul
sarl
mov
inc
dec
or
js
addr16
cmp
rolb
outsb
call
mov
out
dec
or
bound
push
adc
cmp
mov
in
sub
sbb
push
xchg
int
pop
fadds
loop
mov
adc
icebp
jae
daa
fadds
xor
test
in
sbb
ja
mov
jg
mov
mov
xchg
or
and
out
cmpsl
ffreep
call
push
test
inc
jmp
outsb
js
sbb
dec
cmpsb
hlt
sbb
cmp
inc
fcmovb
xchg
scas
out
jo
push
in
pop
fstl
pop
movsb
push
fsubp
test
add
dec
dec
mov
inc
aam
aaa
push
push
sbb
cmp
fucompp
xor
push
and
out
lds
outsl
jge
dec
frstor
sub
jo
dec
subl
and
mov
icebp
mov
cmpsl
pop
std
mov
or
mov
mov
pop
leave
xlat
fucomi
pop
into
mov
jl
jbe
pusha
mov
cld
xchg
mov
sbb
jns
jbe
jecxz
mov
rol
fwait
cli
into
fs
pop
pushf
xchg
arpl
daa
fisubl
decl
add
std
jecxz
push
outsl
hlt
repnz
into
popa
push
jb
or
sahf
jle
jge
divb
inc
or
lods
in
lock
cmp
xchg
adc
outsb
and
or
mov
inc
sub
out
testb
cmp
popl
push
push
adc
adc
gs
mov
popa
jmp
xchg
add
shlb
imul
mov
imul
nop
imul
clc
inc
adc
popf
into
push
cmp
rclb
roll
cmpsb
inc
mov
inc
push
sbbl
or
xchg
inc
xchg
fnstenv
mov
jecxz
sahf
sub
pop
lcall
sub
cmp
xor
jge
sub
cmp
or
add
sbb
aaa
shll
dec
fisubl
ret
dec
push
inc
or
push
outsb
jns
shrb
push
push
daa
xor
aad
inc
mov
hlt
arpl
js
sub
fsubrl
test
xchg
icebp
in
mov
mov
sahf
test
dec
cmp
jnp
in
rorl
call
call
push
add
lcall
cmc
data16
daa
fiaddl
rolb
jae
daa
jp
clc
ss
rcr
xor
aas
js
scas
cmp
ds
scas
ficomps
pop
push
cli
fiadds
push
xchg
or
inc
push
mov
mov
push
das
mov
or
in
shlb
inc
mov
out
push
mov
cmp
mov
xchg
cld
sub
push
adc
sub
push
loop
and
add
add
movsb
sub
pop
mov
jo
mov
ljmp
iret
jecxz
jo
xchg
ss
pop
inc
inc
or
ljmp
icebp
stos
ja
mov
sbb
inc
dec
mov
push
xlat
add
inc
mov
push
push
mov
adc
test
iret
aam
jg
sti
rclb
addr16
rorl
jp
lea
pushf
push
fstl
adc
mov
into
stos
mov
push
inc
xchg
cli
sub
jmp
jl
addr16
js
dec
mov
dec
push
or
or
adc
in
fstps
lcall
mov
mov
sbb
inc
cli
push
and
sub
repz
push
jo
test
shl
sbb
mov
ss
and
jecxz
les
pop
mov
ja
push
addb
loope
std
or
mov
mov
inc
int3
sub
fnstcw
mov
shll
bound
xchg
adc
add
mov
filds
mov
push
jns
mov
loope
adc
or
jle
sbb
xor
or
je
daa
fmulp
cmp
arpl
push
pushf
mov
sbb
sarb
jecxz
outsl
std
mov
mull
orb
cli
sub
dec
insl
ret
hlt
loop
loop
mov
icebp
mov
pop
rcl
pop
ret
mov
in
xchg
cmp
fcompl
ss
push
aad
xor
pushf
es
pop
dec
je
jae
adc
icebp
jp
outsl
push
inc
aad
mov
std
hlt
mov
jo
loopne
pop
out
ljmp
jecxz
cli
push
dec
and
fwait
adc
and
fistl
or
mov
pop
jmp
hlt
in
lret
mov
inc
sub
insl
xlat
mov
sub
or
jnp
dec
aam
mov
push
fucomip
lds
clc
arpl
mov
out
icebp
jmp
jle
out
repnz
loop
scas
stos
xchg
jne
out
mov
inc
dec
inc
das
dec
imul
xor
inc
dec
or
fisubrs
mov
xlat
cmpsb
mov
lcall
jp
adc
fiaddl
inc
jns
cltd
in
jmp
or
inc
dec
push
mov
xchg
mov
inc
inc
outsb
cli
inc
xchg
mov
popf
push
cmp
sub
fs
sbb
mov
jb
stos
or
mov
xchg
mov
push
fiadds
pop
cmp
in
inc
lds
xor
adc
pop
or
out
jnp
out
test
insl
inc
pop
mov
int3
hlt
in
lcall
push
xchg
out
xchg
test
loope
insb
adcb
ds
mov
inc
push
or
enter
sbb
xchg
jbe
sbb
mov
push
in
in
push
sub
cs
add
cmp
mov
movsb
out
lock
add
neg
sub
cltd
outsl
loopne
daa
mov
test
into
jge
ss
fidivs
js
data16
pusha
mov
sbb
ret
jnp
dec
push
scas
subl
jle
ficomps
daa
int
mov
mov
push
ficompl
jb
cmc
sahf
xchg
addr16
mov
push
cld
mov
xor
xchg
shll
sbb
jns
pop
dec
xor
sbb
sbb
xor
movb
fneni(8087
pusha
dec
sbb
and
enter
jl
rcrl
xchg
cli
call
loope
push
adc
andl
cmp
mov
mov
add
sahf
xchg
cmp
loopne
or
adc
imul
or
sbb
pusha
jmp
mov
cli
sub
test
int
and
xchg
aad
das
shrb
pop
inc
cmp
pushf
data16
js
loope
inc
mov
mov
push
inc
mov
stc
mov
push
add
adc
inc
pop
add
shll
pop
popl
xchg
in
jmp
fcoml
jnp
negl
xchg
fwait
sub
dec
pop
aas
mov
mov
inc
or
inc
xchg
orb
cli
fldcw
das
pop
pop
jne
ss
push
iret
xor
into
xchg
gs
fwait
out
sbb
lcall
insb
mov
mov
xchg
aam
daa
roll
inc
xchg
test
adc
cltd
mov
ja
test
out
push
fs
mov
out
mov
pop
insb
dec
outsb
inc
addl
mov
push
fxam
pop
mov
mov
cmp
cld
lahf
pop
adc
lcall
testb
jmp
sub
xchg
outsb
add
push
inc
cld
sbb
xor
out
cmpsl
int
and
sbb
std
xchg
mov
fldcw
fisttpll
imul
jo
pushf
or
cmp
call
out
mov
pop
daa
lds
sub
mov
mov
loope
imul
pop
ficoml
sbb
cmc
in
mov
clc
rcrb
out
jo
inc
push
xor
xchg
fs
xchg
cli
or
js
xor
es
pop
mov
sbb
jmp
dec
or
std
mov
mov
cmp
sub
inc
and
lds
mov
sub
xlat
jmp
push
adc
ss
adcl
imulb
sarl
leave
xor
addl
pop
insl
jae
testb
ja
sti
or
jmp
pop
leave
rolb
cmp
and
in
push
cli
push
and
rcrb
call
popa
add
or
lret
xor
filds
outsb
pop
int3
pop
jnp
dec
jno
and
mov
xchg
in
loopne
or
lcall
mov
push
std
pop
repz
iret
ss
dec
push
fnstcw
mov
mov
mov
imul
and
rcrl
or
fnsave
es
jmp
cwtl
and
or
inc
mov
add
rolb
pop
xchg
pop
loope
dec
push
xor
lods
mull
das
xchg
iret
jmp
sbb
jns
pop
aam
mov
xor
jbe
and
mov
mov
mov
int
inc
test
xchg
push
add
and
ja
test
push
inc
push
push
adc
fwait
mov
jg
jns
jnp
lcall
push
icebp
jbe
rcl
mov
pop
add
ss
or
push
xchg
xor
adc
mov
arpl
mov
mov
push
add
stc
imul
inc
idivl
stos
loope
jmp
fwait
adc
les
dec
rorl
clc
adc
cmp
dec
adc
sub
xlat
cmp
pop
xor
push
xchg
xchg
into
mov
add
xchg
fistl
stos
sbb
inc
xor
pop
out
lds
pop
adc
ljmp
loop
adc
scas
pop
int
rclb
movsb
shll
repnz
or
fisubl
in
scas
cmp
ficompl
add
stc
mov
aas
cwtl
in
jbe
shlb
ret
xor
adc
outsb
or
add
push
pop
into
aas
inc
dec
push
in
sub
cmp
cmp
inc
or
mov
popa
test
mov
bound
in
mov
adc
adc
inc
mov
jbe
adc
xchg
xor
and
jmp
inc
ret
fbld
sub
cmp
or
fwait
loopne
stos
push
mov
adc
imul
sbb
jae
data16
filds
sub
sahf
mov
inc
mov
push
jecxz
push
mov
add
iret
insl
sub
xchg
xor
dec
test
xchg
das
inc
sub
loopne
mov
xor
repnz
repnz
mov
lods
push
sub
inc
xor
cld
xorl
xchg
pop
loop
cwtl
je
sub
xorb
in
sti
popf
repnz
outsl
pusha
inc
stc
sub
pop
xor
pop
cwtl
mov
in
lcall
iret
and
push
xlat
std
adc
fistpl
roll
lret
inc
sbb
xchg
sahf
mov
lret
out
xchg
sbb
xchg
pop
ss
pop
jg
push
ljmp
insb
cli
add
xchg
adc
sti
out
dec
mov
scas
lret
imull
scas
pop
sub
mov
fstl
and
rolb
jmp
adcb
sub
scas
andb
enter
inc
mov
adc
fnstenv
mov
push
xorb
mov
js
sbb
mov
add
mov
out
pop
sahf
sub
and
mov
add
adc
int3
ss
es
sahf
add
rcrl
pop
scas
mov
jg
fs
scas
ljmp
es
subb
sub
sbb
es
mov
idivb
fcmovnbe
push
adc
and
or
mov
shll
or
inc
push
dec
inc
test
andb
sub
sub
sbb
adc
jae
gs
mov
or
call
adc
and
jge
xchg
inc
mov
mov
sti
std
call
and
gs
cwtl
xor
sub
mov
mov
scas
pop
mov
mov
imul
inc
iret
sbb
stos
and
pop
stos
adc
out
jecxz
mov
dec
pop
sbb
mov
add
test
bound
jne
add
outsb
and
mov
pop
xlat
adc
and
mov
pop
data16
push
push
push
dec
jecxz
fdivrs
fiadds
cmpsb
jp
add
xlat
icebp
insb
test
nop
xchg
inc
or
xchg
push
leave
cmpsl
iret
inc
gs
fstps
mulb
sbb
out
mov
mov
stc
jns
pop
jnp
and
hlt
mov
movsb
pop
xchg
nop
imul
cmpsb
adc
icebp
js
lds
addr16
aad
mov
loope
popf
data16
adc
popa
lods
or
pop
dec
stos
hlt
push
xorl
jmp
insl
cmp
shl
cmpsb
xchg
xchg
push
in
and
xor
outsl
movsl
mov
push
jnp
pusha
mov
fistpl
mov
jecxz
and
and
sahf
mov
nop
dec
pop
out
movlps
dec
sarb
movsl
xor
pop
out
jmp
xchg
shrb
cmpsb
lods
jle
lock
fs
pop
and
test
out
adc
xor
test
add
aad
mov
jl
sub
dec
mov
imul
and
and
inc
and
jns
or
xor
adc
mov
add
inc
push
adc
jecxz
fcoml
lds
stc
jle
inc
out
jp
outsb
insl
fidivs
mov
and
test
inc
sub
add
out
pushw
sub
or
es
xchg
sub
mov
mov
test
fcompl
movsl
out
and
mov
or
cwtl
cmpsb
xchg
out
jae
subb
sarl
or
ret
subb
mov
in
adc
mov
roll
mov
dec
mov
push
push
popf
dec
insl
push
jmp
sub
cmc
shlb
nop
sub
out
loope
js
mov
push
sbb
sub
sbb
cmpsb
cs
mov
addr16
xchg
cmp
jns
pop
xchg
ja
aad
push
cmp
js
sub
lock
adc
xchg
jns
popf
popf
xor
out
ret
jge
in
or
pusha
or
xlat
int3
mov
mov
jp
pop
xchg
rorb
xor
fsubl
mov
fwait
in
mov
mov
cmp
rorb
cs
pcmpgtd
rcrl
int3
mov
mov
ret
dec
stc
pop
insb
or
and
pop
mov
icebp
ja
push
jg
das
and
movsl
in
addr16
scas
ss
fs
dec
xchg
push
ljmp
xor
sbb
mov
nop
inc
outsb
sub
mov
mov
mov
lea
pop
mov
jnp
inc
and
pusha
mov
into
jecxz
adc
notl
ret
xor
or
movsl
pop
mov
and
stc
jbe
imul
inc
inc
je
ljmp
sbb
ljmp
adc
mov
or
pop
adc
scas
jle
jecxz
xchg
xchg
push
push
movsb
lcall
mov
xor
lcall
or
adc
cli
in
ljmp
xor
lea
insl
push
movsb
dec
insb
daa
mov
mov
out
stc
mov
xchg
in
and
popa
je
inc
movsb
add
lds
or
aam
faddp
mov
fbstp
cmp
push
jmp
lds
clc
outsb
push
mov
bound
sahf
shr
dec
push
sbb
cli
scas
repnz
ja
cmc
sarb
fldl
add
or
push
mov
cmpsb
dec
jne
jmp
lds
fbstp
dec
js
cmp
pop
jmp
mov
ret
jle
ret
adcb
stc
push
not
pop
dec
ret
xchg
out
add
insl
in
loopne
cmp
adc
mov
pop
fisttpll
pop
xchg
push
mov
cmp
mov
adc
adc
stc
cli
mov
jmp
hlt
mov
mov
push
into
xor
iret
sti
push
xor
decl
or
jmp
mov
xchg
dec
insl
mov
loope
inc
inc
jbe
cli
imulb
data16
ror
out
in
lock
scas
dec
dec
mov
andl
addl
jae
es
cld
imul
add
lea
jmp
iret
mov
pminsw
sbb
fbstp
lds
push
sbb
daa
dec
add
push
sub
negl
loopne
mov
and
sub
frstor
aad
mov
mov
dec
mov
or
cmpsl
jnp
out
int3
fsubr
les
push
insb
popf
int3
mov
into
sub
adc
sub
pop
or
xchg
xor
imul
xor
mov
push
inc
dec
or
inc
scas
stc
enter
js
sbb
fisttpll
outsl
es
loop
xor
pop
push
sbbb
and
mov
in
xchg
bound
pop
or
mov
in
pushf
ja
jl
dec
lret
xor
data16
push
xchg
arpl
sbb
lods
xchg
push
cwtl
scas
dec
add
hlt
scas
loope
out
mov
insl
sub
and
fidivs
xor
mov
cs
imul
push
mov
inc
stos
cmp
push
xchg
in
xor
xor
pop
mov
jno
push
push
jns
pop
int3
jmp
dec
jl
xlat
sub
push
jne
nop
xchg
movl
icebp
scas
aaa
lds
inc
mov
push
jg
jg
hlt
es
sahf
lods
dec
sub
test
adc
es
stos
inc
test
xor
cmpsb
push
adc
lock
push
ss
sti
fistl
xor
and
push
fwait
xchg
in
jecxz
adc
adc
jl
jo
jg
inc
ss
and
lds
pop
loop
xchg
sbb
cld
movsl
push
mov
ljmp
je
xor
mov
sti
js
add
cld
cltd
lea
inc
nop
pop
in
jmp
jnp
xchg
add
stos
loope
lods
sub
test
and
jnp
jb
cmc
call
xor
sbb
sub
je
cmp
cmp
dec
cld
lret
jecxz
cmpsl
push
iret
push
dec
xchg
add
push
jb
mov
rorb
gs
mov
hlt
les
nop
popf
enter
movsb
inc
scas
jo
xor
inc
jle
cmpl
daa
in
push
xor
fwait
loope
adc
cmp
lods
xor
adc
mov
adc
jbe
fnstenvs
jne
iret
lea
out
lods
push
push
pop
ss
or
mov
jae
lock
shrb
std
outsl
and
in
inc
fstpl
cmp
pop
jle
adc
mov
push
jb
cltd
sahf
mov
pop
test
xor
fiaddl
enter
cmp
out
push
data16
mov
insb
orb
jbe
and
shrl
sub
xor
aad
cmp
test
cltd
xchg
push
xor
lds
fs
pop
es
sbb
in
popf
cmp
test
leave
cli
adc
lods
push
adc
call
and
add
mov
iret
rorl
loopne
mov
pop
rol
imul
mov
push
ljmp
add
rcrb
fildl
mov
fsubl
ret
jo
insb
ja
mov
sbb
push
out
rolb
fcompl
cwtl
shlb
std
dec
sarl
clc
call
les
push
sub
dec
push
std
sbb
or
mov
mov
pop
test
mov
pop
dec
rcl
add
mov
cli
inc
and
lods
mov
mov
or
push
jnp
inc
cmpl
ljmp
int
fdivs
pop
test
and
lret
xchg
mov
sahf
or
sub
push
std
aam
imul
imul
lret
ret
out
xorl
divb
and
in
push
sub
mov
icebp
jl
mov
aam
xor
sbb
fcoms
movsl
sub
fisubs
nop
popf
repnz
sub
sti
sub
add
lea
mov
jae
mov
mov
out
lock
pop
gs
enter
fstps
lcall
mov
push
je
mov
and
add
mov
or
sbb
adc
push
movntps
lcall
mov
xchg
or
cmc
repnz
movsb
push
mov
sub
inc
call
loopne
cmp
mov
sub
mov
out
dec
fwait
movsb
pop
addl
out
daa
sub
xchg
dec
xchg
loopne
and
imul
mov
fildll
cmpsl
pop
push
fidivs
push
sub
mov
mov
call
movsl
fdivp
in
popl
mov
sbb
mov
movsl
or
gs
mov
dec
outsl
and
cmpsl
push
mov
fidivl
stos
insl
cmpsl
lods
pop
dec
xchg
jecxz
add
fstpl
fldl
inc
scas
adc
data16
or
outsb
xchg
mov
inc
inc
jbe
data16
jb
jl
fs
in
push
in
ss
and
pop
test
inc
bound
xor
cli
adc
fst
jge
jmp
bound
and
inc
fsubs
pusha
ret
push
repnz
cwtl
popf
mov
mov
fs
pop
xchg
leave
fildl
push
jb
ds
cld
xor
fcomi
lock
add
push
or
push
or
aad
jnp
and
mov
dec
pop
mov
and
jg
push
xchg
ljmp
int3
je
or
decl
push
jg
push
inc
xchg
clc
jo
and
mov
xor
xlat
add
sbb
adc
xchg
fdivs
cmp
imul
clc
mov
sub
mov
je,pn
xor
fcoms
mov
ljmp
mov
or
loopne
jmp
adc
and
out
inc
jns
flds
imul
test
mov
je
sbb
in
hlt
cmpsb
jl
sti
outsb
nop
or
stc
xchg
out
pop
sbb
mov
push
and
aad
test
mov
xor
and
add
inc
pop
stos
mov
or
shrb
push
inc
xor
fisttpl
std
mov
sbbb
mov
out
fs
aaa
xor
out
or
out
sub
repz
or
cmp
stos
dec
jg
mov
dec
in
jne
xor
jge
mov
rcl
insl
in
or
in
popf
mov
push
cltd
repnz
js
jae
popf
inc
inc
push
xor
outsl
inc
mov
adc
rcrb
mov
xchg
sub
mov
cmpl
cmc
shlb
sbb
jnp
adc
imul
mov
out
sbb
cmp
or
sarb
gs
jecxz
fs
or
sub
sub
add
push
imull
inc
pusha
xchg
sahf
mov
sbb
push
lods
movb
rorl
add
adc
push
fadd
pop
shrb
hlt
push
push
cli
cli
cli
out
push
addr16
mov
mov
inc
mov
clc
repnz
call
and
aas
sub
icebp
in
out
flds
sub
lods
jb
push
rcll
je
push
dec
sbb
in
mov
cmp
bound
jmp
mov
push
jne
popa
xrelease
add
or
mov
lods
lret
cmp
scas
aaa
cs
xchg
inc
test
xor
sbb
jmp
and
idivb
lock
mov
inc
aam
push
imul
dec
fwait
sbb
dec
dec
loope
xor
inc
stc
sub
lds
and
ds
xchg
jne
pop
pop
addr16
stos
int3
fsubrl
mov
push
ja
push
cmc
pop
mov
xchg
mov
or
sbb
xchg
loopne
sbb
clc
push
mov
aad
cli
or
add
imul
out
mov
jne
imul
cmc
je
pop
sub
and
test
outsb
or
and
in
mov
xor
inc
mov
jo
cld
add
dec
add
subb
or
pop
out
inc
cmp
add
arpl
stos
shrb
and
inc
clc
dec
xchg
loopne
sub
aaa
test
add
sub
js
jecxz
es
xor
dec
cmp
repz
push
xor
lods
xor
cmp
in
pop
hlt
and
out
mov
add
movsb
jmp
hlt
fisubrl
add
cmp
add
cmp
les
cmpsl
pusha
xor
mov
xchg
xchg
mov
xlat
repz
into
dec
cmpsb
imul
adc
clc
cmp
mov
mov
mov
in
mov
fistpll
cmpsb
mov
fsub
int
add
inc
nop
add
mov
addr16
adc
and
in
flds
fiadds
rorl
sub
repnz
xor
mov
lret
js
mov
pop
and
enter
cmp
rcl
xor
mov
xchg
lcall
ret
inc
inc
jmp
sub
and
je
rol
xchg
mov
rcrb
rcl
movsl
sbb
fmuls
push
pop
cmp
push
jne
mov
mov
inc
xor
pop
imulb
xchg
adc
adc
jp
and
pop
jmp
pop
cld
sub
push
stos
adcl
jecxz
pop
std
pop
lahf
push
lret
jecxz
mov
fs
bnd
mov
sbb
mov
mov
and
outsb
jae
fs
or
addr16
and
sbb
lds
push
xchg
and
call
cmp
xchg
sub
sub
xchg
mov
add
insb
stc
jge
cmp
pop
call
test
cmp
loopne
into
popl
mov
mov
push
lret
xchg
mov
mov
daa
mov
sahf
in
and
lods
inc
pushf
xlat
inc
sub
loope
adc
mov
fisubs
fcoml
xor
shl
sahf
jecxz
les
add
out
in
or
fadd
addl
or
enter
ss
pushl
fisttpll
int
jns
jno
cs
in
inc
adc
fs
sbb
cmpsb
in
int3
repnz
xchg
fisubl
lcall
inc
sbb
mov
sub
mov
push
in
insl
mov
hlt
fxch
mov
fldt
test
add
adc
sbb
jbe
push
int
rcll
dec
sysenter
aad
mov
aas
mov
lods
ja
aaa
mov
mov
lret
sahf
mov
sub
cld
iret
std
shr
mov
lock
inc
mov
fbstp
inc
fimuls
mov
out
test
mov
arpl
jge
or
repz
xor
inc
cmp
cmp
out
lret
nop
push
push
xchg
mov
add
mov
push
fdivrs
mov
fdivrl
arpl
adc
push
and
push
in
pop
lret
sub
enter
out
je
test
sub
in
sbb
push
and
or
bnd
and
je
imul
pop
pop
arpl
jecxz
mov
sahf
cmp
cwtl
movsb
inc
fsubrs
cld
fisubrl
adc
adc
adc
xchg
pop
xor
cmp
fistpll
pop
cmpsb
out
and
js
add
sbb
lods
lods
sub
insb
test
inc
jne
adc
mov
push
std
mov
mov
fcomps
sub
hlt
bound
cmp
inc
jmp
bound
hlt
pop
cmc
imul
js
xlat
and
notb
sti
xor
mov
and
aas
stos
push
lods
mov
mov
rcl
lods
test
mov
pop
push
mov
dec
or
dec
sahf
dec
mov
std
movsb
divb
jecxz
pop
add
jnp
popa
and
rcr
je
pop
dec
fsubrl
mov
jle
shlb
jno
cli
push
jbe
pushf
rcl
push
dec
pop
lahf
jge
ljmp
sub
sub
xor
sahf
jmp
xor
or
arpl
popf
mov
inc
add
out
outsl
pop
scas
call
arpl
out
push
add
aaa
and
leave
movsl
xor
enter
xlat
cmp
insb
inc
mov
js
xor
testb
sub
dec
movsl
scas
in
push
sub
scas
and
pop
and
jl
pop
lahf
int3
mov
pop
out
mov
jg
xlat
mov
sti
fs
xchg
mov
xor
jmp
aaa
stos
dec
sbb
sarl
out
add
ret
testl
xor
lret
mov
pop
pop
je
xchg
mov
aam
inc
mov
call
cmp
jno
rcrb
or
pop
xchg
notb
in
or
out
cmpsl
push
xor
xor
addb
mov
mov
cmp
mov
inc
or
pop
pop
pop
jge
xor
ret
roll
cmc
xchg
xlat
mov
mov
sub
add
jb
loop
jg
je
imulb
je
out
pusha
mov
pop
inc
cmpsl
lahf
dec
das
lret
pop
clc
movsb
pop
add
or
sti
fmuls
cmp
lea
adc
push
cmp
fadd
jnp
lahf
ret
in
mov
pop
inc
xor
shl
les
pop
addr16
movsl
data16
lea
mov
fwait
pushf
xlat
add
push
call
lar
jmp
out
lret
dec
aad
xchg
bound
testb
push
sbb
cltd
call
and
mov
xor
pop
or
rorb
push
in
xchg
and
cmc
and
dec
mov
pop
inc
imul
xchg
push
and
call
enter
push
lcall
je
cmp
cmp
sub
cvtpi2ps
mov
add
mov
pop
sahf
push
lret
mov
dec
add
hlt
loopne
stos
jl
mov
or
adc
or
stos
call
mov
dec
push
dec
shrl
fadds
inc
popa
adc
cwtl
jo
aad
pushf
pushf
cmp
push
adc
jbe
mov
sbb
out
subl
scas
js
es
test
sbb
push
jp
pop
sub
push
adc
add
iret
and
cmc
push
lret
nop
or
lret
or
push
push
xchg
mov
mov
imul
add
jge
shlb
hlt
cmp
dec
dec
xchg
cmc
push
shl
ret
mov
je
mov
mov
pop
out
dec
cmpb
push
adc
pop
adc
imul
cli
push
mov
cmc
gs
inc
lret
loop
stos
movsl
loopne
fmulp
or
push
or
enter
mov
gs
jns
popa
xchg
iret
cmp
cli
outsl
mov
push
push
inc
sbb
push
cs
outsb
inc
cmpsl
sti
jge
gs
popa
fldt
jnp
sub
pop
rcll
mov
mov
and
fs
xchg
adc
mov
fnsave
inc
dec
arpl
and
popa
dec
push
pop
adc
and
iret
movsl
mov
or
call
add
repz
fisttpll
sub
mov
cmp
add
add
mov
js
sbb
rep
cs
mov
ficoml
stc
add
mov
mov
jl
out
clc
shll
leave
dec
pop
and
sahf
pop
insl
mov
int
inc
jmp
jo
or
sub
xchg
xor
daa
sub
jnp
dec
cmp
test
mov
lods
mov
pop
xchg
or
data16
mov
push
std
dec
je
stos
mov
loop
or
sub
out
fldt
mov
outsb
rcll
jecxz
jns
mov
je
iret
test
adc
xor
push
mov
or
add
pop
out
aaa
insl
rcrl
enter
jb
imul
mov
shll
dec
adc
pop
aam
negb
in
mov
sbb
xchg
movsb
sbb
lcall
mov
add
dec
out
xor
push
out
mov
mov
ljmp
or
test
enter
and
xchg
fnstenv
xor
xchg
sbb
xor
adc
and
insl
ja
shll
jno
rclb
inc
xchg
xchg
outsl
in
leave
outsl
fdivr
and
cmpb
enter
sti
inc
sbb
dec
or
mov
inc
mov
and
in
pop
movsl
pop
mov
sub
xchg
mov
mov
lret
adc
test
adc
lock
mov
inc
push
inc
aam
int3
jns
dec
imul
inc
push
jns
out
mov
mov
fimull
push
or
pop
inc
sub
insl
fcompl
gs
popa
fisttps
sbb
imul
rcrl
nop
pop
mov
inc
aam
add
mov
or
mov
adc
jae
adc
lret
jl
jp
stos
std
popf
outsl
in
iret
dec
push
jecxz
loope
fmull
pop
or
jb
ja
xchg
lret
add
dec
stc
ficomps
repnz
add
lods
enter
push
mov
mov
cmp
fxtract
dec
mov
fs
jecxz
fldt
mov
mov
aas
sub
pop
sub
lret
fnstenv
icebp
es
xchg
adc
enter
xor
pop
rcl
out
add
es
in
repz
data16
shll
mov
in
mov
fmuls
fistps
cmpsb
pop
or
pop
inc
xlat
fdivrp
iret
fs
enter
xor
ror
push
mov
sbb
pushf
ja
int3
jmp
leave
sti
jecxz
xorb
imul
push
xlat
movsl
ss
out
push
sbb
or
add
xlat
jle
sahf
inc
lods
push
lds
out
scas
sbb
fbstp
iret
mov
cltd
lret
push
test
scas
in
mov
hlt
xchg
or
mov
push
aad
mov
xor
lods
iret
pusha
xor
jle
out
test
pop
sub
test
ficomps
andb
mulb
icebp
sarl
scas
xchg
aad
cmp
jmp
loope
sbb
or
or
cmc
pop
movsb
fadd
mov
insl
inc
jge
in
in
xchg
or
pop
mov
popf
ljmp
dec
pop
das
sub
repnz
push
rcr
inc
ret
xchg
and
daa
call
int3
repnz
mov
aas
in
push
push
std
bound
je
xchg
fbld
testl
or
cmp
xchg
in
iret
loop
notl
cld
cmp
jno
lea
jnp
sub
inc
mov
arpl
stos
mov
test
imul
jno
sbb
add
mov
negb
div
jmp
inc
stos
pop
sbb
mov
mov
xor
inc
fdivr
sub
push
jne
insb
push
jl
pop
scas
imul
push
call
and
cli
xor
lret
push
addr16
lret
inc
pop
test
outsb
aas
adc
jl
adc
mov
push
out
lods
jp
and
js
and
xor
mov
jp
pop
out
pusha
mov
aas
push
inc
pop
or
add
xor
mov
dec
adc
cmp
or
dec
test
lods
int3
gs
test
inc
das
sbb
mov
mul
aas
push
mov
sbb
xchg
out
sub
cmp
addr16
sarl
outsb
xor
mov
fxch
adc
sbb
fs
and
inc
mov
shrl
cwtl
xchg
out
int3
int
les
jbe
lods
xchg
int3
outsl
jge
imul
inc
and
and
stc
mov
cmp
cmp
pop
mov
adc
xor
and
lea
cvtdq2ps
in
cwtl
inc
ret
adc
daa
loope
jmp
jle
in
pushf
pop
scas
mov
mov
lret
add
mov
or
inc
cltd
cmp
push
inc
sbb
dec
xchg
inc
or
test
jl
dec
aam
fildl
pop
test
pop
jmp
in
or
mov
push
lret
subl
mov
stos
push
in
dec
call
sub
add
es
fwait
inc
adc
dec
pop
sti
add
in
lret
imul
mov
sub
or
add
add
cmpsl
imul
aas
imul
mov
fs
lahf
lcall
xor
cltd
fwait
mov
xlat
mov
enter
adc
jbe
or
rolb
pop
add
push
pop
dec
out
and
stc
jnp
sti
popa
arpl
movsb
add
test
xchg
xchg
mov
and
hlt
cmp
xchg
test
inc
popf
cs
mov
les
cmp
int
or
or
adc
xor
sub
sub
mov
fimuls
lcall
add
popa
xchg
push
addr16
es
mov
and
loope
xor
ret
ds
add
cmp
bound
cmp
shll
movsb
dec
hlt
insb
xor
leave
mov
repz
or
ja
or
inc
xchg
xchg
je
add
negb
or
inc
mov
sub
inc
sub
jne
or
pop
enter
bound
les
ds
xchg
fwait
sarl
fidivrs
mov
xor
shrl
in
dec
sbb
push
testl
mov
test
push
dec
inc
jg
and
mov
xor
xchg
ja
ljmp
rolb
mov
popf
and
je
xchg
inc
fsubrl
xchg
inc
adc
jnp
xor
cmp
outsb
mov
loop
cmp
mov
cmp
ljmp
enter
jns
jbe
pushf
fistpl
push
decb
adc
adc
daa
jge
gs
lods
or
rclb
adc
fwait
pop
aad
ja
dec
pop
cmpsb
fbstp
cmpb
je
adc
out
stc
inc
clc
mov
or
mov
xchg
adc
cld
in
mul
pop
out
jle
xor
mov
add
xchg
in
push
sbb
mull
outsb
inc
xor
lcall
mov
mov
add
clc
mov
push
xchg
das
cmpb
mov
inc
push
adcb
insb
iret
ficomps
idivl
ja
mov
mov
or
push
or
aad
xor
xchg
or
jns
jmp
test
mov
xor
pop
stos
and
movsl
mov
outsb
dec
pop
pop
js
jnp
js
imul
inc
in
sbb
cmp
aas
sbbb
cs
xor
loop
lods
fsubs
jle
push
loopne
and
test
dec
or
xlat
and
inc
xor
jb
pop
ret
mov
mov
sti
aam
fstps
movsb
ret
idiv
adcl
mov
push
pushf
jns
pop
push
add
sbb
adc
cwtl
jae
outsb
es
sete
jp
xchg
dec
or
repnz
cmc
fistl
push
mov
loope
mov
in
out
sbb
pop
jmp
aad
ret
xchg
pop
jmp
xchg
daa
xor
mov
les
fidivs
mov
sti
cmp
jno,pt
shrl
in
repnz
jae
decb
icebp
shr
rorb
arpl
pop
or
pop
insb
test
inc
test
push
outsl
cmp
jne
add
pushf
pop
push
outsl
test
daa
mov
sub
inc
pushf
and
xchg
call
loope
cmpb
icebp
xchg
jl
sub
mov
push
jle
lock
repnz
mov
push
lock
mov
pop
call
push
pop
out
push
add
cli
sub
and
adc
inc
sub
gs
je
inc
fs
jae
sbb
int3
push
lds
xor
push
cmp
aam
jl
mov
adc
inc
icebp
rorb
imul
inc
pop
outsb
pushl
lea
cmp
clc
jl
stos
jne
dec
ret
movsl
push
pop
inc
in
andl
jle
adc
and
lods
mov
pop
inc
cmp
and
xlat
lds
mov
inc
xor
adc
xchg
fisttps
repz
lods
xor
insb
adc
xchg
add
xor
popa
dec
mov
mov
aad
sbb
pop
push
test
and
outsl
inc
mov
sbb
push
xor
mov
mov
lcall
or
xchg
xchg
and
cmpsb
sub
mov
lods
sbb
mov
iret
mov
sbb
inc
mov
mov
out
icebp
push
fdivr
adc
mov
dec
adc
push
mov
xor
or
sbb
clc
inc
pop
fstps
cmp
cli
xchg
pop
cmc
in
jbe
jmp
jge
push
adc
jmp
xchg
adc
sbb
adc
int3
movb
sti
das
or
pop
movsb
inc
inc
aad
xchg
sub
cwtl
loope
ret
cwtl
fadds
ret
and
in
push
cmc
je
mov
add
jp
xchg
outsl
xlat
out
dec
add
mov
clc
insl
lods
ja
lock
popa
cwtl
mov
and
sub
daa
mov
xchg
push
das
in
lea
sub
ds
mov
push
mov
daa
xchg
data16
dec
cwtl
mov
push
lock
mov
adc
pop
add
cmpl
popf
test
xchg
faddl
cmpsl
insl
pop
cmp
and
imul
jmp
add
outsb
xchg
ja
pop
pop
out
add
pop
dec
cld
lock
mov
or
dec
mov
jne
xchg
in
mov
jb
cld
imul
jbe
add
ret
sbb
cmpb
icebp
movsl
xchg
xchg
ffree
dec
jb
into
js
mov
xchg
outsl
mov
int
cmp
push
xor
outsl
xchg
sbb
imul
cmp
inc
push
std
mov
xchg
push
push
ds
xchg
adc
pop
test
pop
dec
add
mov
nop
leave
sub
inc
mov
xchg
mov
add
mov
mov
mov
and
lods
mov
add
mov
cwtl
mov
inc
and
mov
mov
sbb
mov
and
push
sbb
xchg
push
xlat
mov
movsb
jl
cmp
jae
inc
pop
xor
add
jne
dec
mov
inc
idivl
and
jbe
test
or
mov
loope
mov
hlt
jb
test
lock
jg
jge
pop
stc
mov
sbb
and
cmc
adc
mov
scas
in
pop
sbb
or
inc
cli
lahf
xchg
cld
dec
cmp
inc
add
jmp
fisubs
adc
cmp
int3
imul
dec
mov
test
pop
nop
jb
cmp
sbb
sbb
sub
and
pop
jo
loope
pop
cmc
cmpsl
jp
push
in
test
dec
dec
hlt
mov
mov
out
stos
push
dec
cmp
jl
inc
outsb
test
cmp
add
cmp
mov
repz
out
pushf
adcb
sbb
cmpsb
add
push
stos
cmp
pop
imul
xor
inc
int3
jb
lret
mov
push
push
repz
int
repnz
or
std
push
xor
jecxz
clc
push
scas
addr16
or
imul
sti
rcll
mov
or
xchg
into
sub
xchg
lret
mov
push
dec
jmp
or
addr16
add
mov
xchg
cmp
call
rorb
movsl
test
mull
xor
sbb
cmc
out
std
in
shr
cmpsb
icebp
int
pop
xchg
mov
out
add
rorb
fisttpll
jae
ss
lret
fidivs
dec
pop
int3
mov
inc
push
adc
test
push
mov
iret
insb
data16
stc
fstpt
inc
add
cmp
pop
dec
rorl
fcomps
pop
inc
ljmp
pop
das
mov
stc
ret
sbb
daa
fstps
jno
lret
mov
cld
adc
scas
mov
dec
xchg
data16
enter
imul
or
out
mov
inc
mulb
loopne
mov
rorl
dec
push
fs
dec
cwtl
call
add
arpl
sar
fbld
movsl
insb
daa
mov
cmpsb
inc
jae
adc
loopne
cmovb
lods
sahf
cwtl
or
aas
icebp
std
mov
fstps
mov
pop
jne
dec
push
aaa
push
pop
icebp
sub
lahf
mov
fs
fildl
into
repz
mov
sbb
and
dec
popa
lcall
pop
xchg
push
sar
xchg
cmpsb
adc
jg
mov
jb
out
clc
repz
addl
sbb
xlat
or
cwtl
mov
push
dec
fucomp
jne
fisubrs
inc
cmp
sahf
jp
jns
mov
jp
sub
jb
inc
push
mov
fdivrl
jnp
xchg
data16
imul
rclb
aad
insl
mov
add
int
cmp
cmpsb
jecxz
cld
clc
aas
add
ficoms
js
adc
cwtl
shlb
xlat
sbb
cli
sub
xlat
int
push
xor
cli
xor
imulb
test
or
xor
lock
pop
jecxz
fcomi
push
dec
pmaxsw
rcrb
mov
cltd
and
jo
pushf
jmp
sti
adc
xchg
out
movb
adc
or
rorb
in
int3
inc
shld
ds
out
in
iret
nop
sub
inc
ja
dec
shr
clc
inc
bsr
jecxz
xorb
ss
sbb
mov
sbb
imul
jae
test
mov
movsb
xor
popa
jmp
in
out
jbe
dec
jmp
add
orb
repz
sub
push
daa
jo
pop
aam
imul
sbb
dec
leave
or
rcll
bound
sub
and
clc
xchg
mov
in
andb
out
bound
movl
stc
outsl
cmp
or
add
adc
jns
xor
test
xor
rorb
loop
xchg
cmp
jmp
jbe
inc
popa
jnp
sbb
add
xor
adc
xchg
xor
movsl
inc
mov
aas
sbb
and
sahf
mov
xlat
cmpsb
pop
loop
push
jle
pop
fwait
sbb
mov
rcrl
es
push
and
loopne
mov
pop
dec
fistpll
push
dec
jns
outsl
notb
addr16
sbb
lret
dec
push
popa
fisubl
push
sbb
sub
jbe
stos
movsl
lods
sbbb
jno
loope
or
pop
mov
push
insb
outsb
or
or
scas
add
aas
xchg
cmp
mov
fwait
repz
mov
dec
and
push
in
pop
insl
scas
pop
hlt
pop
lds
adc
push
rorb
adc
es
mov
inc
jnp
cmp
xor
aas
sbb
in
enter
ja
js
xchg
mov
xchg
jle
lds
mov
pavgusb
mov
insb
fildll
fsubp
fcoml
aad
jle
repz
pop
cs
mov
std
cmp
xor
outsl
or
mov
dec
sub
adc
fistps
fmull
and
adcb
pop
xor
test
xchg
pop
in
or
data16
fsubs
repnz
adc
packuswb
enter
mov
xchg
xchg
mov
add
in
ret
outsl
in
mov
dec
sub
insl
xchg
js
sub
mov
push
cmp
faddl
xchg
lods
sbb
sub
insb
xchg
mov
jb
jge
shrl
mov
xchg
ljmp
fwait
xchg
dec
sbb
leave
ljmp
xor
outsl
lcall
sbb
repz
cmp
hlt
sub
sub
aam
iret
fldt
sarb
jnp
mov
das
xchg
leave
fidivl
bnd
incb
sub
ret
test
sub
inc
flds
mov
sar
add
pop
add
loope
cmp
ja
hlt
jp
icebp
cmp
cmc
push
inc
dec
in
scas
pop
std
mov
pop
std
add
fnstenv
pop
movl
mov
bts
insl
cmpl
jbe
jno
scas
dec
and
mov
int3
clc
push
stc
int3
aam
mov
sub
xchg
outsb
imul
sbb
push
js
adc
cmc
pop
dec
pushf
pop
add
pop
pushf
dec
push
movsb
std
and
mov
ret
loop
xor
xor
jmp
pop
push
xchg
and
shll
add
sub
sti
jmp
adc
repz
aam
mov
out
pop
lret
pop
mov
aas
stos
inc
sub
lods
add
pop
stos
imul
test
fisubrs
push
fwait
in
fisttps
lods
sub
in
xchg
mov
pushf
test
sbb
andl
ja
adc
insl
movd
dec
cmp
mov
idiv
sub
mov
repz
ss
cld
decb
xchg
outsl
inc
negl
sub
cwtl
xor
and
jo
iret
fadds
int
xor
adc
jmp
push
pop
push
daa
loope
lret
jnp
dec
push
jb
out
in
loopne
xor
inc
hlt
sarb
rorl
inc
lea
inc
aas
fsubrp
dec
into
insl
das
sub
push
push
int3
pop
mov
int3
sbb
cltd
cmp
hlt
inc
mov
jne
aad
xchg
jmp
mov
or
inc
insl
shll
pop
xchg
int
cmovae
faddl
add
mov
in
xor
sarl
out
into
cmp
push
adc
jbe
cltd
inc
arpl
notb
and
fidivl
fcompp
scas
push
lods
inc
jmp
xor
ret
arpl
cmpsl
mov
adc
push
jno
mov
lds
mov
dec
outsb
into
or
mov
xor
push
stos
icebp
ljmp
sarl
cltd
mov
dec
pop
pop
xor
xchg
test
pop
divl
lock
adc
dec
fstl
pop
or
jns
xchg
mul
cmp
mov
ret
push
rol
xor
in
adc
popa
or
cld
dec
ret
add
mov
je
ficomps
jl
mull
jl
mov
pop
outsl
fdivl
and
mov
sbbb
pushf
mov
stc
jp
mov
mov
loopne
in
ret
mov
cwtl
aas
icebp
pop
add
sbb
outsb
jno
out
mov
aas
in
sbb
mov
das
jecxz
dec
les
inc
mov
outsb
jle
add
xchg
in
mov
fmuls
shrl
push
pusha
mov
xchg
lea
xchg
sarb
or
xchg
mov
icebp
aam
scas
push
hlt
scas
and
or
push
cmp
mov
mov
and
test
lahf
lods
call
mov
jae
sub
fwait
sysenter
jecxz
xor
insl
cli
sub
xchg
xchg
and
push
jle
addl
into
cmc
push
pushf
pop
mov
nop
mulb
lret
push
sub
adc
cli
repz
and
inc
mov
hlt
outsb
scas
sub
ret
and
aas
add
jo
or
fidivs
push
mov
ss
ret
jb
iret
daa
test
mov
jle
iret
nop
call
sub
decb
push
dec
dec
push
das
ja
les
mov
mov
arpl
aad
cli
mov
pop
stos
mov
inc
pop
dec
dec
push
mov
clc
scas
movsl
in
and
sub
and
test
scas
add
lahf
push
sub
outsb
xchg
add
in
ja
and
sub
mov
scas
or
das
cmc
dec
std
rdtsc
shrl
addr16
das
xor
adc
ss
jmp
and
insl
loope
icebp
in
ja,pt
test
mov
loopne
jl
scas
push
jno
pushf
sbb
les
or
icebp
ja
add
jmp
out
daa
adc
adc
inc
mov
push
imul
incb
stos
jg
xor
fistpl
cmp
shlb
addb
fxch
add
ret
enter
dec
xchg
xchg
imul
and
mov
repz
dec
movsl
jb
cltd
pushf
stos
sub
sbb
into
add
jle
inc
sbb
sub
out
outsb
or
int3
xchg
clc
roll
inc
mov
push
fxam
mov
push
push
sub
in
xchg
jnp
cmpsb
leave
adc
pcmpgtw
mov
jmp
mov
pop
movsb
jnp
or
jp
pushf
shll
jnp
push
mov
iret
movsb
out
jns
pop
cmp
sbb
push
mov
push
dec
adc
sahf
and
in
int
pushf
pop
push
cs
sub
cwtl
out
adc
iret
and
fwait
movsl
push
mov
jle
xchg
mov
lods
push
and
cmp
or
adc
mov
and
inc
cmp
test
and
sub
cmp
xchg
stos
in
add
nop
push
adc
fiaddl
loop
cmc
pusha
and
push
orb
gs
rorl
and
xor
psubd
mov
inc
dec
outsb
add
mov
or
mov
or
leave
arpl
adc
mov
and
pop
mov
xor
mov
out
adc
stos
es
ljmp
test
sarl
add
add
fsubrp
mov
dec
lods
lock
push
adc
cmp
jb
inc
pop
or
inc
dec
loope
cmpsl
ljmp
sub
out
js
stc
lret
setns
and
jae
pop
fidivrl
sbb
xchg
imul
sub
les
cli
test
add
addl
cmp
sbb
std
stc
fldl
jno
add
cmp
xchg
xor
sahf
mov
jae
cmp
hlt
shl
cmp
add
xchg
or
out
mov
ret
loop
jae
cmp
dec
pop
jne
int3
pop
sub
dec
dec
loope
sbb
pusha
mov
fidivrs
jb
push
mov
fbstp
cltd
pop
rcll
fs
jb
outsl
aas
mov
xor
mov
xchg
dec
daa
mov
push
icebp
push
mov
call
mov
insb
push
jo
rorb
stc
jp
stos
xchg
out
and
push
in
jl
sub
call
outsl
in
xchg
pushf
int
fidivrl
int3
lahf
sti
or
inc
mov
dec
pop
popf
pop
and
mov
pop
gs
add
ffree
lds
das
sahf
mov
stos
or
mov
popf
adc
inc
sbb
ret
stos
cmp
xor
xchg
js
xchg
rol
stc
dec
xor
xchg
add
add
outsb
outsb
adc
std
mov
mov
mov
add
ja
ds
iret
popf
push
mov
leave
dec
js
pop
test
push
add
adc
dec
mov
mov
cmpsl
add
andb
inc
push
lcall
iret
cltd
and
jecxz
fimull
pop
add
mov
rol
mov
jnp
adc
mov
mov
pop
lahf
mov
pop
xchg
jae
add
dec
inc
std
ret
call
jns
or
popa
xchg
mov
leave
test
ret
jb
in
jo
xor
stos
add
test
dec
leave
push
cmpsb
xchg
ret
cmpsb
movsb
jp
jne
adc
add
je
mov
lcall
push
cmp
lock
jb
into
hlt
xchg
jbe
iret
mov
mov
aad
sub
or
aas
sbb
lcall
in
mov
add
jp
loopne
sarl
mov
ja
adc
adc
imul
ja
push
jne
sub
inc
mov
pop
pop
cmpsl
mov
xchg
jo
test
mov
sbb
jmp
lock
dec
jae
push
jl
int3
xchg
icebp
mov
cmp
cs
cmc
add
pop
dec
mov
mov
aas
fists
fisubrl
jae
push
mov
inc
int
mov
and
jnp
fmull
in
hlt
sub
mov
fs
mov
ja
push
dec
jbe
fsubrl
mov
loopne
stos
fdivrs
mov
xchg
outsl
jmp
xor
data16
sbb
push
jb
adc
nop
mov
mov
pop
test
stos
sbb
dec
push
jnp
insb
mov
loop
push
xchg
dec
adc
pop
movsb
insl
into
mov
jne
ja
push
and
jle
scas
jecxz
add
dec
outsl
ret
aaa
jae
mov
pushf
cmp
cmp
jnp
inc
stos
movsb
xor
push
rclb
inc
sti
inc
ss
xchg
add
xor
loope
cmp
push
cs
mov
sbbl
jne
inc
mov
out
mov
mov
jns
sbbb
cmp
cmp
cltd
xor
adc
xor
popa
or
call
mul
xor
xor
and
mov
cli
notb
loopne
push
sub
mov
sar
jne
mov
test
ss
jl
mull
inc
bound
lea
and
mov
inc
shrl
loope
and
inc
push
lcall
out
xor
jl
xchg
dec
push
jae
sbb
push
cmpsl
fnstsw
mov
leave
in
aas
gs
pop
cld
mov
cmpsl
in
inc
ljmp
jl
jge
call
out
xor
lods
repnz
sbb
mov
sbb
insl
out
xchg
sub
scas
testl
push
xor
sbb
mov
cli
out
cli
cmp
pop
clc
repnz
jbe
mov
mov
mov
insl
into
daa
mov
jb
loope
fisttpl
mov
iret
xor
jne
jno
out
aam
push
add
pushf
stos
push
das
iret
incb
ret
sub
dec
sti
adc
loopne
or
xchg
push
xchg
nop
cmp
cmp
sbb
cmp
fcoms
scas
xor
push
jne
dec
negb
stos
or
inc
lret
sahf
subl
lahf
pop
jge
sub
push
mov
jle
cmp
xchg
mov
cmpsl
inc
jle
sub
aam
push
ja
movsb
and
lods
add
cmp
pop
xor
xchg
cmp
mov
mov
stos
je
mov
add
imul
adc
mov
lds
gs
pop
or
push
int
fidivrl
mov
dec
ret
jbe
and
aas
jo
in
push
xor
xor
das
je
clc
test
bound
pop
mov
in
jg
ss
mov
test
mov
movl
out
mov
sti
push
inc
hlt
mov
pop
rcrl
xor
leave
shlb
inc
adc
mov
mov
pusha
scas
pop
pushf
in
pop
cmp
jge
cmp
loop
cmpsl
filds
fadd
fiadds
adc
in
out
mov
pop
add
popf
das
inc
sbb
out
mov
xlat
mov
pop
jge
xchg
xchg
fisttpll
in
push
push
pop
add
and
pop
mov
mov
cmp
enter
iret
jae
inc
xchg
cwtl
popa
xchg
call
call
mov
loop
add
xor
push
fcomps
add
cmp
mov
add
dec
insl
das
jns
xor
insl
dec
mov
sbb
pop
mov
dec
scas
pushf
push
insl
push
repz
inc
out
bound
pop
bound
push
sub
and
adc
dec
or
jecxz
jae
mov
int
out
cmp
cltd
decl
jl
test
mov
ficoml
fldenv
pushf
pop
adc
shl
lret
shrl
adc
divb
push
xchg
mov
xor
push
xchg
sub
cltd
mov
pop
gs
loopne
cld
std
pop
ljmp
pop
sub
test
es
lret
bound
add
dec
jnp
daa
cld
fwait
clc
lcall
sbb
gs
test
addl
pop
loopne
push
enter
push
daa
jle
outsb
adcb
scas
and
cmpsl
pop
aad
cmpsl
shr
mov
insb
rorb
pop
cld
push
leave
sbb
adc
nop
call
les
std
dec
cmc
imul
dec
imul
push
add
jns
xchg
sbb
cs
pop
mov
sbb
dec
fnstsw
dec
jnp
aad
movsl
add
sub
sbb
mov
jle
int
insl
pop
fs
lahf
dec
test
pop
mov
arpl
and
rcll
loopne
jno
repz
xchg
hlt
mov
jbe
mov
int
jg
lods
dec
mov
mov
iret
scas
pop
imul
cmp
cwtl
clc
stos
jbe
jmp
sub
xor
cli
xor
imul
aaa
sub
xlat
inc
mov
nop
xorb
outsl
cmp
loope
orl
jns
leave
repz
push
cmp
call
pop
sbb
sbb
incl
sub
daa
jno
int
sbb
jmp
and
popa
std
repnz
out
test
lret
mov
rcl
mov
mov
stos
adc
xor
sub
pushl
pop
fsubp
int
adc
pop
cmp
mov
mov
push
and
outsb
popf
lods
push
lcall
les
cmp
mov
cmp
outsl
xchg
in
ror
orl
stc
dec
inc
push
fstps
mov
rcr
incb
sub
insl
mov
mov
inc
mov
insb
jmp
pop
dec
and
ljmp
das
cwtl
fidivl
repnz
shl
ret
pop
mov
dec
jbe
divb
fidivrl
push
push
clc
mov
and
push
push
mov
sub
lds
add
mov
mov
rolb
aas
scas
out
pop
rol
scas
insl
push
adc
arpl
jecxz
lret
sbb
pop
icebp
sbb
les
insl
ds
lea
fcoml
out
out
in
xchg
pop
cwtl
sub
repnz
or
mov
scas
push
mov
es
or
ss
arpl
ja
lds
stos
addr16
add
outsl
push
cmp
xor
push
dec
popa
lret
lods
pop
sub
aad
cmp
jg
sub
movsb
movsb
in
sti
shlb
cmp
jg
loopne
inc
sbb
cs
sub
dec
sbb
mov
fidivl
push
sar
adc
or
flds
movsb
cmp
fmulp
dec
inc
nop
inc
inc
and
test
pop
xor
pop
je
push
jle
mov
aad
out
jg
jle
adc
push
adc
xor
mov
inc
push
jno
cs
aad
pop
cmp
lea
mov
pop
in
inc
dec
imul
mov
addr16
jp
test
aad
xchg
and
inc
and
shll
loopne
sbb
scas
inc
push
pop
cmp
stc
sbb
push
shl
loope
mov
sbb
push
icebp
movsb
std
xchg
cmp
xchg
mov
mov
stos
xchg
xor
popf
or
imul
sbb
push
ja
test
sbb
cld
subb
pop
sub
dec
and
push
cmpsb
push
aas
and
xor
xor
or
cmp
xchg
sub
adc
cmp
dec
lds
jg
dec
push
and
dec
lret
insb
dec
pcmpeqb
adc
xchg
sub
inc
xchg
outsb
mov
mov
cltd
mov
xlat
add
aam
xor
inc
push
test
nop
inc
or
xlat
cltd
inc
aad
cmp
mov
stos
fdivs
xor
push
inc
xchg
add
ret
pushf
xchg
arpl
sti
xor
inc
je
xchg
cmpsl
sub
xor
jbe
pop
xchg
loopne
mov
push
mov
mov
stos
clc
movsb
add
and
adc
xchg
int3
shr
test
or
fucomp
test
gs
mov
jnp
cltd
std
cmp
mov
inc
mov
cltd
sub
and
cmp
sub
mov
mov
inc
pusha
xchg
mov
sarl
mov
cmp
lret
pop
insl
subb
dec
lea
fcmovnbe
dec
pop
sbb
push
int3
popf
xchg
mov
or
sbb
test
pusha
pop
out
mov
mov
test
ljmp
nop
rclb
mov
push
mov
es
loope
sbb
adc
mov
lret
inc
sub
mov
xor
mov
iret
xchg
or
sbb
sti
in
imul
mov
test
aam
loope
test
bnd
test
mov
sarb
pushf
mov
lods
sbb
sbb
lds
add
lods
out
ds
xchg
leave
scas
jnp
movsl
and
loopne
scas
hlt
mov
jns
xor
xor
jl
inc
clc
insl
inc
jecxz
mov
popf
mov
xor
dec
shl
cmpb
jl
mov
mov
out
ja
xchg
mov
mov
jnp
pop
rclb
fs
jns
adc
pushf
std
and
in
add
push
xlat
ret
and
mov
mov
out
pop
dec
std
ljmp
test
ret
xchg
outsb
lea
iret
lea
jmp
xchg
pop
and
mov
cmp
mov
sub
pusha
cmpsb
add
fucomip
int3
imul
clc
andb
clc
movsl
sahf
push
or
jbe
adc
cmpl
out
lods
out
add
fs
das
or
mov
out
in
outsl
aam
scas
bound
scas
iret
lods
sbb
pusha
shrl
fs
leave
pusha
mov
pushf
arpl
lods
loopne
arpl
push
adc
push
lea
cmpb
call
xor
cmp
movsb
imul
jmp
jl
ljmp
or
int3
add
je
int
dec
cmp
mov
loope
lahf
scas
xchg
fadd
pop
mov
adc
je
adc
jbe
arpl
xchg
push
add
iret
lret
fstl
movsl
imul
mov
mov
dec
test
out
out
lret
pop
and
insb
pop
mov
leave
jo
decb
push
rclb
lods
mov
mov
and
adc
out
ss
test
sti
out
or
jb
into
push
cmc
int
jmp
sbb
xor
ss
jae
iret
cmp
in
cltd
or
xchg
add
stos
in
cmp
rcrb
sarb
out
cltd
movsl
in
or
nop
stos
ss
jmp
mov
dec
sbb
cs
sti
jnp
push
push
jg
add
xlat
lahf
test
sbb
mov
gs
mov
pop
in
inc
xlat
insb
push
pushf
xchg
mov
or
mov
dec
pushf
cmp
adc
mov
addl
sub
mov
sub
cwtl
insl
movsb
sub
dec
loope
test
lret
xor
add
xchg
push
jp
add
mov
lock
push
stos
mov
cmp
adc
test
push
push
outsb
fs
cli
or
testb
xchg
andb
pop
addr16
cmc
push
pop
pushf
xor
rcr
insl
and
inc
insb
out
in
das
xchg
rorb
mov
adc
imul
cmpsb
or
add
pop
jle
sbb
leave
sub
test
fistpll
mov
jbe
xchg
gs
in
imul
mov
adc
xlat
or
fadd
pop
xlat
xor
enter
mov
call
push
or
aaa
sub
sub
fs
icebp
ret
push
mov
out
and
lock
insl
adc
or
loop
in
fidivl
cwtl
fldl
pop
dec
insl
push
sti
in
out
in
enter
mov
repz
inc
jle
and
mov
aaa
test
mov
out
push
aaa
pop
ret
pop
dec
out
repnz
jns
xchg
sub
stos
push
cmp
jecxz
fistpl
scas
or
sbb
push
ss
jns
xchg
je
insb
inc
es
icebp
push
fcomp
cwtl
mov
pop
add
mov
loop
mov
adc
mov
jmp
sub
cmp
test
in
into
loop
aam
add
xorl
popa
ljmp
xor
xor
and
mov
fistps
mov
fisubrl
sbb
pop
dec
add
inc
lock
inc
adc
pop
xchg
sbb
or
stos
inc
outsl
call
cmp
outsl
inc
aaa
or
xchg
sub
or
pop
dec
ret
mov
pushl
pop
add
rol
xchg
insl
int3
lock
daa
stos
jmp
pop
sub
filds
arpl
push
lods
pop
cwtl
xor
push
pop
pop
loop
fistl
cmp
pop
inc
in
push
lahf
sub
ds
dec
sbb
adc
cmpsb
mov
aad
mov
std
jae
out
xor
pusha
rolb
sbb
mov
aad
jg
fcmovnbe
mov
xchg
scas
fists
push
push
jae
mov
in
nop
push
in
cwtl
in
and
jp
xchg
dec
mov
inc
add
jmp
pusha
push
pushf
push
jle
cmp
das
mov
lds
js
out
sbb
vpmuludq
inc
in
jmp
out
push
pop
pop
pop
scas
mov
movsl
push
jno
mov
jmp
loopne
test
bnd
ret
stos
cltd
in
in
add
sub
jmp
jp
cmp
fsts
pop
sbb
lret
sahf
cmc
mov
push
sahf
sarb
pop
rolb
pop
add
mov
mov
adc
jmp
push
mov
ficoml
sbb
pop
hlt
aas
addl
inc
loopne
inc
mov
push
adc
inc
pop
pusha
mov
mov
cltd
cmp
jne
cmp
daa
in
adc
add
jo
mov
dec
inc
xor
das
in
xor
jne
pop
aaa
repz
or
shl
and
mov
jp
inc
xchg
movsl
and
adc
outsb
xchg
lea
mov
cmp
or
lods
idivb
xlat
xchg
pop
sbb
imul
adc
pop
cmp
sbb
xchg
stos
xchg
cltd
js
sbb
jp
rcl
fbld
subb
sub
jge
sub
out
roll
repnz
int
add
xchg
push
and
and
lods
pusha
sub
inc
cli
insl
sub
xchg
shlb
rorl
pop
pop
jbe
arpl
adc
repz
mov
mov
sub
pusha
insl
pop
adc
inc
xchg
jge
sti
dec
in
ret
sbb
adc
jnp
lds
jecxz
and
lcall
xchg
and
jg
push
dec
xlat
sub
hlt
int
insl
and
test
faddl
or
into
mov
mov
cmpsl
adc
fisttpl
mov
sub
test
fbstp
mov
aad
call
cli
fstps
mov
lret
int3
mov
xor
lods
xor
push
js
cmp
mov
jg
jbe
data16
inc
mov
stc
das
sub
scas
popa
sbb
fbstp
sub
repnz
xchg
mov
jno
lods
dec
pop
inc
nop
decb
push
push
pushf
adc
in
sbb
push
mov
push
shrb
cwtl
pop
xor
call
clc
mov
and
mov
adc
push
ss
pop
inc
adcl
outsl
pop
push
mov
out
ss
mov
cmp
sti
call
ja
loope
sbb
cs
add
sbb
push
xchg
mov
inc
lahf
add
cmpsb
pop
jae
aad
lret
stos
ja
sub
test
add
push
xor
inc
dec
sbb
fs
cs
je
and
or
shr
into
nop
dec
mov
jno
mov
popa
add
cmp
sbb
jo
inc
fstps
and
inc
hlt
lea
divb
mov
out
lock
sbb
imul
adc
push
xchg
or
jecxz
filds
mov
sub
xchg
cmpsl
mov
sbb
sbb
jns
shll
sub
inc
sub
or
and
shll
pusha
xchg
and
data16
out
loop
pavgw
add
loope
dec
fiadds
push
mov
ja
iret
lahf
adc
mov
lds
jp
cmp
push
push
push
push
and
clc
popa
mov
out
rcrl
fbld
lds
cs
loop
out
jl
out
xchg
movsb
test
int
pop
xor
aad
and
xor
imul
imul
or
mov
mov
jp
outsl
jge
adc
lcall
int
in
imul
sub
in
mov
sub
insb
jge
sbb
es
mov
add
aad
aaa
fidivl
xor
imul
lds
lock
xchg
idivl
mov
jl
add
sbb
aam
stos
loopne
out
push
push
mov
and
sar
mov
ficomps
push
push
scas
jbe
loope
out
ret
mov
cmp
in
mov
adc
jb
inc
out
adc
push
jns
xor
xchg
jg
lods
cli
movsl
mov
fstl
test
lea
xchg
cmpsb
sbb
jo
fmulp
mov
mov
adc
xor
icebp
mov
pop
ret
or
inc
decb
or
add
cmp
xor
pop
in
dec
mov
add
jno
jne
mov
mov
cwtl
jge
into
add
ljmp
fidivrs
out
xchg
and
sahf
add
negl
js
cmpl
add
jno
fstpt
dec
je
mov
mov
jns
inc
dec
xor
push
xabort
subb
sahf
mov
pushf
loope
pop
sub
test
in
sub
cmp
dec
xchg
xchg
and
insb
rorl
push
xchg
iret
sahf
lret
pop
mov
xchg
inc
aad
xor
xor
mov
ficoms
inc
xchg
xchg
cmc
js
push
jp
shll
rcrb
jle
sub
inc
test
test
jle
pop
mov
ret
ja
cmp
cmpsb
inc
cli
adc
push
inc
add
daa
stos
mov
jo
shlb
xchg
mov
cmpsb
push
repnz
call
leave
mov
mov
lods
cmp
jl
jns
loopne
mov
or
mov
leave
out
and
cmp
push
sbb
fcompl
movl
xor
pop
out
inc
divps
inc
mov
popf
dec
mov
int
frstor
movsb
lods
mov
shl
xchg
out
mov
sub
fld
es
jp
jbe
in
dec
and
outsb
iret
xchg
cmp
mov
or
adc
or
dec
cmp
sti
decb
idiv
push
cmc
ret
enter
leave
mov
lret
mov
fisttpl
mov
pop
js
push
mov
repnz
test
shlb
sub
inc
in
out
xor
jo
push
or
outsl
xchg
inc
mov
pop
out
addl
xor
mov
sahf
xor
lcall
lcall
dec
pop
and
xchg
sub
es
pop
scas
push
ljmp
roll
xchg
jb
int3
cmpsb
mov
addl
clc
jne
adc
sarl
inc
cs
ss
test
push
es
in
loop
add
ret
cmp
adc
mov
arpl
jecxz
xorl
mov
cmp
or
xchg
in
cmp
dec
or
cmp
das
test
or
adc
clc
icebp
jg,pt
jo
lods
adcl
das
mov
jno
into
pop
test
leave
xchg
jb
movsl
jg
popa
xor
xchg
jp
cmp
mov
cmp
ja
cmpsb
inc
addl
pop
xor
frstor
nop
in
pop
add
jae
or
adc
push
nop
popf
mov
and
call
mov
dec
mov
cltd
adc
scas
rcrl
stos
xchg
sub
sub
out
scas
push
sub
mov
pop
cmpsl
mov
clc
les
xor
mov
mov
fildll
dec
pop
pop
into
xchg
sub
repz
xor
outsb
loop
shrb
dec
xor
push
sub
mov
movsl
insl
enter
roll
addr16
cmp
addr16
dec
lret
xchg
jo
stos
cmp
push
cmp
xchg
sahf
push
fwait
xchg
xor
test
cs
out
inc
dec
xlat
movsl
and
inc
rolb
or
cwtl
inc
out
ret
pushf
test
es
sub
fucomp
lahf
mov
sbb
jae
or
imul
mov
and
out
push
fbstp
add
xor
xor
mov
ret
je
and
popf
js
and
cmpsb
andl
push
stc
mov
add
jmp
push
in
cs
loope
or
les
xchg
ds
and
outsw
fidivrl
add
push
cmp
int
test
adc
shl
mov
mov
xchg
cs
sbb
mov
mov
cmpsl
js
dec
lds
shl
mov
mov
lcall
rcrb
out
int3
add
ss
xor
and
push
lret
stc
inc
jmp
lahf
in
sbbb
mov
mov
movsl
shll
xchg
out
lock
pop
jmp
xchg
insb
pusha
pop
stc
jbe
ja
cmpsl
cmp
movsl
jmp
jo
mov
stos
std
sub
hlt
sbb
sbb
nop
cmp
pop
dec
cmp
loopne
movsb
jmp
ret
stc
xchg
mov
sbb
sub
cmpsl
push
jo
inc
pop
pop
js
loopne
aad
push
fisubrs
mov
enter
scas
xchg
rorl
cmp
mov
notb
rcrl
cmp
inc
mov
lcall
sbb
mov
arpl
lock
and
add
cmp
out
inc
test
mov
mov
ja
mov
xchg
fsts
iret
int
xor
adc
ficompl
jno
and
fisttpl
test
push
inc
sub
icebp
repnz
rcrb
rcrl
cltd
adc
aad
loope
mov
and
sahf
popf
pop
adc
xchg
in
cmp
pop
test
jno
mov
and
out
push
xchg
notl
mov
iret
inc
or
inc
iret
in
outsl
movsl
testb
sub
call
push
mov
aad
sbb
mov
in
adc
cmp
mov
sub
ret
push
jno
push
mov
sub
ret
call
inc
or
or
outsb
jecxz
xchg
xchg
lahf
icebp
inc
jno
idivl
cmpsb
mov
rcr
data16
call
cmp
dec
inc
xor
iret
inc
push
sti
out
pop
and
push
stos
decl
jg
cmp
mov
fmuls
in
cwtl
and
fisttpl
jae
adc
aad
cmpsl
idivb
xor
int
aas
jp
sahf
fdiv
adc
mov
ficoml
pop
sub
lret
and
adc
and
lods
jnp
pop
ret
pop
xchg
mov
fnstsw
lret
fmull
and
mov
xchg
nop
mov
inc
mov
int
mov
and
movsl
jecxz
lods
movsb
fcomps
mov
dec
fs
stc
rcrb
or
xchg
cmc
leave
xor
jno
iret
rcl
pop
out
loopne
adc
and
lahf
fdiv
std
inc
pop
pop
das
mov
ret
rcrl
movsl
mov
lret
dec
in
xor
lea
sbb
in
mov
mov
jo
sub
sbb
int3
shl
pop
testl
stos
sbb
or
pop
fidivl
fiadds
push
sbb
cmp
fwait
arpl
sub
mov
loop
scas
pop
arpl
ffree
mov
and
and
in
xor
repz
in
lods
rorl
int3
in
and
push
popa
scas
in
xchg
xchg
ret
js
push
shl
fldl
cmp
imul
adc
mov
leave
xchg
cltd
es
dec
pop
in
je
shrb
shlb
in
gs
repz
outsb
std
pop
jo
xor
jp
pusha
fdivrl
push
stc
aad
scas
add
out
icebp
mov
add
or
sti
sbb
jns
jns
cli
je
xlat
dec
andb
adc
and
xchg
or
xor
mov
mov
dec
mov
in
mov
mov
clc
inc
icebp
imul
icebp
pop
int
loope
arpl
into
push
or
sbb
sub
push
pop
inc
mov
inc
daa
cmp
mov
scas
adc
xchg
mov
mov
sub
jae
mov
sbb
hlt
sbb
lds
outsb
xchg
sti
adc
or
mov
cs
cld
add
nop
out
jne
scas
jp
sub
aad
dec
lds
sbb
fisttps
mov
fdiv
mov
jle
sbbb
pushf
int
scas
and
cmp
fsubrs
sti
pop
add
cmp
adc
test
negl
mov
sub
scas
ja
mov
dec
jp
add
stos
ss
mov
xor
jo
push
fldenv
popa
aas
xor
mov
add
jecxz
adc
push
cmp
mov
pop
mov
jb
mov
xchg
xchg
popa
mov
mov
or
or
xor
std
shlb
fistpll
adcl
dec
push
pop
cld
push
jae
cmp
jg
ja
push
jae
mov
inc
loop
out
mov
mov
inc
fadd
popa
je
mov
cmpl
loopne
mov
jns
push
jae
dec
dec
mov
inc
frstor
ja
enter
mov
pop
mov
mov
movsl
xchg
inc
sbb
ret
pushl
je
jmp
or
dec
stos
out
in
push
std
xor
test
mov
jg
sbb
testl
not
jecxz
dec
dec
cmp
mov
and
cmp
jno
cmpsb
mov
mov
mov
pusha
cs
pop
add
push
adc
inc
movsb
into
mov
into
cmp
cli
lcall
push
inc
dec
add
leave
mov
fisubs
movsb
pop
imul
sub
pop
test
repnz
sarb
nop
repz
std
dec
es
test
xor
jns
inc
stc
fsubrl
sub
arpl
xchg
hlt
xchg
stos
or
mov
dec
in
sub
shrb
push
inc
mov
adc
inc
jge
dec
push
jns
iret
cmp
push
or
sbb
mov
sbb
js
push
nop
mov
xchg
ds
jo
jae
or
cmpb
xchg
sbb
xchg
pop
mov
add
dec
fcomps
aad
mov
and
push
cltd
dec
cmp
jnp
ja
jecxz
xor
in
scas
out
sbb
pop
sub
sub
add
rcll
adc
je
jbe
jno
or
mov
push
add
jb
jbe
int
mov
cmpb
mov
sub
dec
jecxz
push
and
lock
test
cmp
fbld
cmpsl
es
lret
shlb
jmp
lcall
not
and
orb
test
and
sbb
mov
sub
aad
loopne
push
in
int3
jecxz
mov
repz
sbb
mull
call
pusha
xchg
mov
mov
std
stos
xor
mov
push
rclb
bound
inc
and
out
pop
cmp
mov
bound
jmp
inc
insb
sbb
enter
lea
jmp
push
cmp
xchg
popf
xchg
inc
cmpsl
dec
push
jle
inc
mov
lret
lahf
cli
push
push
jo
sub
and
push
mov
in
imul
push
push
sbb
shll
ret
fdivl
add
mov
fildl
jmp
outsl
or
inc
jl
insl
xchg
daa
pop
std
test
inc
jno
and
test
or
test
pop
cmp
sahf
add
into
ds
fsts
jmp
cmp
pusha
add
push
jbe
mov
push
cmp
jge
in
in
ficoml
pop
lahf
cmp
inc
lret
outsb
stos
loopne
bound
cmpsl
call
cs
lods
push
rcrb
jmp
repnz
arpl
dec
pop
leave
xor
mov
push
xor
nop
cmc
aam
ds
push
and
das
cmpsl
scas
xchg
das
aam
scas
push
jg
ds
xchg
sti
mov
xchg
call
sub
pushf
push
sbb
mov
jle
aad
out
jae
push
testb
cmp
cwtl
ljmp
cld
fstpl
xchg
mov
xor
cmpsb
mov
pop
mov
mov
push
jecxz
push
dec
stc
jecxz
lods
jp
sub
push
mov
ret
jge
inc
jo
lods
mov
mov
sbb
mov
mov
arpl
cmpsb
add
mov
pop
cmp
and
pop
push
fisttps
aad
fistpl
xchg
cli
or
fwait
or
outsb
jg
insl
in
imul
repnz
lods
pushf
js
xchg
fcoms
inc
iret
stos
jo
out
mov
add
xchg
mov
inc
iret
pop
ljmp
jge
push
push
sti
fcomps
loope
icebp
fisttps
or
sub
mov
aas
shrb
mov
xlat
rcll
dec
arpl
lret
fcompl
or
xchg
mov
jo
sub
movsl
mov
xor
xchg
mov
inc
call
mov
test
ds
mov
cmpsb
scas
mov
mov
adc
and
mov
inc
mov
lds
mov
mov
or
aad
bound
push
gs
adc
addr16
fistpll
xchg
gs
mov
pushl
jl
fcompl
stos
inc
cmp
jl
in
or
and
pop
into
push
lds
lds
dec
jp
jne
or
inc
js
lods
pop
cld
dec
nop
ja
mov
ss
iret
ret
movsb
std
push
flds
jg
mov
gs
xchg
hlt
pop
mov
pusha
insl
jmp
ret
mul
and
inc
pop
xchg
call
push
pop
insl
bound
sbb
inc
dec
out
add
cmp
test
dec
js
push
adc
daa
mov
mov
dec
cmpsl
cwtl
mov
add
xchg
jne
jnp
sbb
fwait
or
aaa
roll
es
shrb
call
iret
pushf
sub
dec
in
hlt
mov
cmp
sbb
es
rorb
pop
push
add
sarl
adc
loopne
shlb
sbb
mov
lret
gs
sbb
in
mov
cwtl
or
inc
cmpsb
jbe
xchg
sahf
cli
loope
jp
andl
mov
popf
enter
jle
insb
pusha
js
add
fidivl
jl
or
xor
push
rcrb
or
xchg
adc
sbb
stc
xor
lods
jg
hlt
cmpsl
ror
add
push
jbe
pop
xchg
fwait
adc
cmpsl
out
clc
mov
pop
fmuls
ss
xor
ficomps
fs
mov
out
xor
add
or
pop
outsl
mov
addb
dec
out
jb
and
andb
dec
inc
or
sbb
lret
push
xchg
test
sti
push
jb
mov
cli
lods
ss
pushf
test
mov
dec
aas
or
imul
xor
pmulhw
fldt
sahf
or
aad
fadds
adc
push
pop
lods
pop
pusha
hlt
shrb
mov
sti
faddp
xchg
cs
add
xchg
ss
jb
mov
mov
pop
dec
or
push
hlt
pushf
mov
outsb
xlat
out
aam
add
leave
pop
decl
arpl
out
pusha
sbb
sub
adc
and
flds
inc
inc
cmc
xor
repz
sub
dec
push
mov
mov
sahf
mov
push
js
lods
xchg
ret
rol
leave
je
aam
dec
inc
xlat
push
aas
mov
lret
mov
enter
mov
xor
sbb
cs
pusha
fsubrl
push
ljmp
mov
int3
rorl
data16
or
aaa
push
mov
loopne
fiaddl
pop
outsl
jne
sbbb
xchg
sbb
mov
mov
add
mov
fs
out
and
mov
push
fisubl
adc
jb
stos
jecxz
jp
aaa
push
std
xchg
daa
sahf
cli
leave
dec
in
or
xor
xchg
loope
repnz
ss
cld
and
push
cmc
fists
and
daa
fsubl
push
sbb
daa
ret
mov
xchg
adc
add
cltd
xorl
lods
sahf
sub
clc
aad
push
faddl
mov
push
out
dec
pop
sbb
lret
mov
push
cmp
xlat
outsb
dec
bound
mov
jg
jg
push
xchg
push
test
jge
sub
add
inc
out
fdivrp
les
rclb
in
pop
popf
imul
xlat
mov
lds
std
fidivl
iret
push
stos
dec
mov
mov
lds
mov
stos
mov
ret
popa
push
jecxz
cs
cmp
jnp
xchg
sub
out
sahf
inc
call
push
addr16
xchg
in
lret
fdivl
daa
jg
out
inc
leave
xchg
xchg
pop
clc
test
testb
mov
sub
push
or
or
pop
ret
iret
out
mov
mov
and
jb
inc
cmovg
jmp
and
roll
xor
dec
fildl
imull
push
int
xchg
test
jae
sub
cs
lret
or
imul
push
push
scas
ljmp
push
int3
sbb
shl
dec
enter
cwtl
add
inc
pop
and
push
adc
out
xchg
cld
add
adc
push
lret
add
shl
daa
lods
pushf
fs
or
imul
stos
sahf
inc
out
fmuls
pop
bound
sbbb
fmuls
inc
pop
add
fldcw
dec
push
cwtl
pop
cmp
daa
test
pop
mov
xor
ss
insb
mov
out
stos
cmp
lock
jle
mov
lahf
push
mov
shll
iret
ss
push
popa
xchg
pop
jecxz
int3
sub
jecxz
dec
out
imul
dec
adc
cmp
jb
cs
dec
or
icebp
hlt
or
and
inc
int3
pop
fs
jp
mov
fucom
rep
cmp
nop
das
pop
movl
fisubl
adcb
je
push
mov
pop
aam
sbb
js
sub
mov
jne
sbb
dec
cmp
call
and
adc
mov
mov
jns
mov
loope
fistps
imul
fcomi
cs
sti
int
xchg
popl
inc
lods
cltd
xchg
clc
insl
outsb
xchg
mov
insb
mov
push
aas
cmovge
xor
adc
pop
mov
bound
push
ja
cmp
popf
daa
and
pop
divl
xlat
insb
xlat
insb
mov
subl
imul
test
inc
xchg
aas
and
mov
mov
cs
cli
mov
xchg
call
mov
xlat
adc
xor
daa
xorb
mov
jge
insl
jecxz
jae
add
cwtl
or
sub
std
mov
dec
shr
cli
out
xchg
pop
leave
add
idivl
test
push
or
pop
inc
and
dec
fwait
cmp
adc
shll
or
mov
or
mov
jle
inc
jp
lods
pop
cmp
push
je
fnstenv
flds
xchg
pushf
dec
fs
subb
ret
push
arpl
movsb
cmp
out
xor
imul
roll
hlt
jle,pn
push
sub
sbb
adc
fsubr
add
popf
xchg
and
ja
ss
or
enter
and
lds
add
sub
pop
lock
dec
xchg
in
gs
add
push
fisubrs
add
inc
je
aam
sbb
push
cli
aad
cli
cmp
ficoml
es
lods
inc
enter
push
xor
cs
jge
int3
aaa
pop
xor
xor
outsb
sbb
inc
sbb
xchg
or
xor
jp
dec
pop
dec
and
xchg
mov
dec
push
mov
push
mov
arpl
movsl
jmp
push
fst
je
mov
ror
cmp
pop
add
test
icebp
test
sarb
js
jp
pop
out
mov
or
add
sub
je
mov
in
imul
clc
repz
pop
or
mov
mov
imul
xor
fdivr
fnstenv
xchg
xchg
loopne
inc
cmpsb
shl
ljmp
cmp
jno
mov
dec
sub
jno
leave
inc
test
pop
ja
and
mov
movsb
mov
shlb
stc
mov
cld
jge
jmp
lds
lods
int3
and
jge
xor
mov
popa
daa
mov
pop
test
pushf
sbb
fcoms
xchg
fists
call
cmp
es
jle
or
adc
mov
mov
aam
and
mov
xchg
lret
xchg
adcb
in
cmp
mov
js
pop
push
lds
push
jno
cmp
cmp
outsb
and
push
adc
int
cmp
cmpsl
pop
mov
cmp
out
dec
sub
cmp
fs
mov
and
into
dec
xor
mov
in
or
dec
outsl
push
mov
dec
push
rorl
sbb
imul
std
jae
and
out
pushf
rcrl
push
dec
mov
sub
mov
test
adc
mov
and
mov
inc
push
test
pop
mov
cwtl
pop
mov
adc
pop
mov
dec
pop
inc
enter
jne
mov
push
adc
and
daa
cltd
mov
negb
outsl
std
mov
int
out
dec
mov
fldl
lds
popa
lret
sets
push
pop
or
adc
mov
ja
xchg
dec
movsb
arpl
into
pop
out
mov
bound
push
push
ss
jbe
jmp
popa
pop
jl
mov
pushf
push
lcall
or
insl
or
xchg
rclb
cmp
jae
dec
arpl
jo
pop
pop
mov
scas
jmp
mov
push
jle
or
sub
mov
in
sahf
out
fnsave
inc
int
out
test
out
push
sub
fnstenv
in
add
nop
js
fstl
mov
add
repnz
add
xor
call
or
mov
lret
popf
mov
in
xchg
dec
mov
adc
mov
mov
jle
loope
lret
inc
xor
sub
lret
gs
mov
push
es
pushl
lds
test
pop
in
mov
mov
jb
or
ficoml
sub
inc
or
dec
fidivl
inc
push
mov
sbb
jnp
sahf
jno
push
adc
scas
cltd
jge
in
add
in
push
mov
cmc
popa
jae
xchg
jno
sbbb
cwtl
scas
test
mov
push
mov
add
mov
add
out
lahf
mov
mov
lahf
jo
iret
mov
divb
hlt
and
or
push
std
dec
lods
xchg
mov
jbe
mov
xor
movsb
cmp
push
sbb
clc
xchg
les
lock
ret
pushf
and
pop
mov
js
pop
jp
push
jno
filds
xor
in
and
jo
rol
mov
cs
mov
mov
das
mov
inc
push
xchg
out
sti
sbb
stc
xor
push
xor
fs
insl
outsb
push
gs
mov
adc
or
aad
push
xchg
xchg
outsb
mov
add
and
push
and
rcrl
insl
sub
addr16
mov
faddl
testb
arpl
push
cltd
push
ret
jnp
stos
mov
sahf
fstl
aas
adc
xchg
mov
push
mov
lock
lods
out
test
cmp
imul
invd
or
cmp
repnz
movsb
mov
mov
daa
sti
aas
cmpsb
mov
and
pop
dec
add
push
andl
cmp
pop
cmp
cmpl
ds
mov
pop
jle
fadds
mov
sub
mov
adc
popa
push
inc
xchg
inc
or
mov
push
jbe
shl
call
push
nop
repz
clc
adc
mov
pop
pop
repnz
xchg
aaa
faddp
pop
push
add
adc
cwtl
pop
rol
stos
and
add
into
push
sub
adc
sti
jp
addl
scas
inc
push
scas
sbbb
xchg
outsb
jge
je
pop
sbb
in
call
mov
cwtl
cmpsb
jle
movsb
gs
jae
repnz
xor
and
pusha
test
push
sbb
call
jg
jg
popa
pushf
pop
jnp
sub
in
jge
jmp
jp
mov
dec
sarl
jmp
mov
inc
fwait
sahf
sub
ds
jge
jb
mov
fimuls
sbb
rol
inc
push
popa
clc
add
clc
pop
cwtl
outsl
fsubrl
loope
cld
sbb
int3
movsl
xlat
cld
adc
mov
dec
mov
fsubl
jmp
mov
dec
rcl
xchg
pusha
testb
push
jmp
pusha
cmp
and
push
cmp
sti
push
je
enter
out
pushf
add
icebp
lret
adc
cwtl
cmpsl
sbb
xchg
dec
js
mov
es
dec
push
or
push
int3
aas
aaa
insl
adc
fdivr
mov
and
lea
inc
fisttpl
insb
mov
fnstsw
ret
clc
sbb
xchg
fs
je
xchg
mov
js
pusha
aaa
in
sub
or
adc
icebp
xchg
mov
js
mov
lcall
cmp
enter
mov
jge
sbb
call
inc
mov
jl
inc
jne
xchg
adc
xchg
popa
xchg
lret
dec
add
adc
test
xor
xchg
repz
iret
push
mov
rcr
lret
les
xlat
cmpsl
jno
stc
ja
nop
push
cmc
mov
push
ljmp
leave
ljmp
clc
out
mov
jl
into
je
repnz
repnz
cmp
xor
in
imul
mov
add
sahf
inc
sub
icebp
pop
xchg
stos
ds
shlb
movsl
test
xor
jb
fwait
das
movlps
sbb
stos
add
xlat
clc
add
jp
mov
cmp
cmp
iret
push
or
mov
mov
cmp
xor
insl
jno
loopne
mov
jge
out
icebp
cmp
push
divl
stos
inc
enter
arpl
sub
sarb
scas
or
xchg
add
mov
mov
cmp
lahf
dec
orl
xchg
jecxz
and
pop
xor
ficompl
pop
sbb
ds
xor
inc
push
lcall
mov
cltd
cmp
pusha
outsl
sbb
xor
sub
sbb
mov
loope
pop
or
dec
fidivrs
lock
jo
fwait
xchg
dec
jp
mov
das
ret
and
clc
push
push
shrb
fiadds
pop
lret
std
xchg
rol
out
adc
xchg
iret
mov
jge
aad
mov
ret
into
insb
dec
movsb
mov
negl
mov
movsb
shlb
xor
and
cmc
jae
jno
sub
xor
or
jmp
scas
push
std
ror
mov
icebp
xor
daa
repnz
xor
jg
cmp
cs
into
mov
mov
inc
shll
lea
sub
inc
xchg
mov
jge
jg
jbe
cli
imul
mov
or
cmpsl
std
jl
sub
sbb
sbb
pop
mov
mov
test
mov
mov
push
jno
xor
mov
mov
repz
push
xor
inc
fisttpll
rclb
addr16
add
icebp
les
xchg
sub
pop
cmp
xor
dec
mov
fs
pop
add
fstpl
cwtl
cmp
mov
cwtl
negb
daa
nop
cmp
test
pushf
in
lods
sar
icebp
vmovaps
push
or
mov
sahf
jecxz
testl
jae
adc
xchg
ret
or
fpatan
pop
fwait
sbb
sbbl
or
dec
out
adc
dec
mov
inc
mov
adc
push
cmp
insl
pop
popf
shlb
sub
std
jge
sub
ja
push
adc
or
fisubrl
and
fldt
inc
and
fcoms
je
cmc
lcall
js
jg
mov
pusha
add
mov
adc
mov
test
push
movsl
test
push
ret
rorb
cli
jns
lock
xchg
mov
inc
fmull
mov
inc
mov
and
push
aas
lods
cmc
cmc
push
or
mov
push
pop
ret
push
stos
pop
popf
mov
inc
fwait
jge
add
add
cld
or
mov
pop
psubw
roll
test
sub
pop
push
mov
jns
sbb
mov
orl
cmp
dec
and
and
cld
lcall
mov
rcr
fcmovb
add
jg
movsb
jmp
adc
mov
xor
inc
pop
aas
adc
popa
sub
mov
subl
ret
loopne
and
xchg
push
pop
fmul
and
popl
jg
or
nop
xchg
add
loopne
mov
xor
jl
fwait
sub
iret
lods
push
out
jb
leave
adc
cmc
lret
arpl
sub
xchg
add
dec
sub
rcrl
push
mov
inc
and
popa
fnsave
xor
addr16
mov
jge
dec
push
loop
pop
mov
arpl
cltd
add
jecxz
jnp
xor
std
sbb
ds
xor
push
sbb
ljmp
mov
in
mov
xchg
roll
adc
cmp
shlb
mov
jge
jae
ficoms
outsl
sub
out
jno
loope
jbe
mov
inc
lock
incl
repnz
cmp
fisubrl
fmulp
xchg
in
sub
or
cltd
loopne
jle
jne
test
pop
pop
mov
fimull
xor
hlt
push
sahf
rcl
lock
dec
mov
xlat
hlt
sti
dec
jns
ret
xchg
xor
xchg
rclb
scas
call
sub
push
mull
movsb
in
aaa
inc
imul
or
cmp
push
inc
inc
out
xor
xchg
lock
sbb
repz
stos
inc
xorl
test
imul
xchg
popa
arpl
inc
in
push
jg
insl
cltd
cmp
sub
xor
out
cwtl
test
movsl
and
lock
fdivs
pop
test
mov
insl
mov
mov
lock
out
test
out
daa
js
lea
pop
sub
mov
cmp
mov
add
popf
mov
and
mov
mov
hlt
cld
jno
cmpsb
fldt
inc
mov
jnp
and
cmpsl
sbb
imul
test
and
mov
push
xchg
jne
inc
inc
adc
fdivrl
jecxz
push
cld
jne
fisttpl
enter
pushf
loop
dec
scas
dec
out
inc
adc
pop
push
mov
pop
jbe
pop
fdivs
or
int3
dec
jns
cld
cmp
jmp
mov
or
jge
mov
fcmovnb
lret
jecxz
cwtl
fsubs
loop
mov
ds
cli
xor
xor
loop
inc
sub
out
rcrb
push
push
ret
mov
adc
cli
adc
xchg
ljmp
mov
or
xchg
push
or
xor
push
test
stc
cmp
dec
xchg
mov
mov
mov
or
aam
or
mov
or
xor
in
insb
xchg
jne
popf
lock
mov
les
mov
movsl
icebp
leave
push
cmp
lret
lock
pop
mov
leave
arpl
jbe
pushf
mov
lock
cmp
repz
push
ljmp
mov
inc
mov
xorl
jl
je
in
roll
jns
sahf
andl
sub
cmpsb
lahf
adc
nop
out
dec
mov
repz
cmpsl
enter
out
lret
mov
sbb
xchg
cmp
xchg
mov
fstpt
loop
sub
jns
jbe
cmp
or
jnp
aaa
test
gs
pusha
cmp
sbb
lods
pop
dec
cwtl
mov
sti
sbb
leave
mov
fwait
push
jge
cld
sub
sub
lcall
mov
lahf
lcall
popf
dec
fistpll
inc
sbb
roll
jbe
fcoml
ds
shll
fnsave
pusha
mov
popl
mov
mov
test
cmp
imul
dec
call
lock
popf
dec
or
dec
popf
mov
int3
adc
cmp
out
lahf
les
inc
jge
jns
push
shl
loope
in
bound
pop
push
sbb
mov
outsl
mov
mov
dec
lcall
popa
lea
int3
test
hlt
jns
or
rorb
or
or
scas
jmp
lods
inc
cmpsb
int3
sub
aad
or
cmpsb
jae
and
ret
and
jmp
fsubs
repnz
fbld
or
in
dec
pop
mov
ret
jbe
cmc
repnz
cld
push
lret
adc
icebp
xor
mov
sub
sarb
popa
jae
movsl
jne
test
xchg
loope
mov
testb
pop
inc
pop
in
fisttpl
test
fsubrl
jmp
scas
xor
xchg
pop
add
sub
sar
jg
adcb
cli
sub
clc
xchg
out
dec
jo
out
or
jg
inc
mov
bound
jo
mov
cmpl
sbb
aad
mov
movnti
pop
lods
mov
pusha
push
pop
daa
daa
inc
imul
mov
cld
jnp
push
push
inc
mov
dec
std
cld
pop
cmp
inc
clc
and
jmp
lock
cmp
ljmp
pop
leave
cmp
outsl
cmpsl
push
xor
pop
pop
push
mov
pop
and
pop
inc
fwait
in
add
movsl
add
mov
imulb
sub
pop
push
adc
inc
mov
repnz
adc
std
loop
pop
pop
pop
cmp
lock
fwait
mov
jp
pop
lea
mov
leave
pusha
ljmp
and
les
jg
loop
mov
jl
or
icebp
and
rcrb
mov
cmp
pop
aam
les
xorb
adc
xor
or
mov
iret
outsb
cli
inc
dec
jns
push
and
les
lret
not
aam
cmp
jne
sub
push
aam
test
mov
mov
out
popf
out
dec
loop
sbb
mov
mov
negl
pop
inc
adc
xor
sbb
or
cmc
mov
sub
push
adc
ss
xor
push
mov
call
inc
jns
js
jmp
cmp
inc
pusha
shlb
jnp
mov
cmp
push
xchg
adc
and
in
jns
mov
push
sti
cmpsb
lcall
andl
mov
pushw
or
push
sbb
pop
nop
hlt
sti
int
xchg
push
adc
fbld
popa
sbb
stos
jg
and
fmuls
xchg
and
xchg
xchg
roll
adc
jmp
xchg
pop
cmpsb
jge
sbb
movsl
dec
mov
jo
test
or
mov
fidivrs
je
push
cwtl
dec
push
in
push
les
add
jle
cltd
inc
jp
xor
jle
test
test
les
ds
xchg
push
push
inc
fldenv
dec
inc
adc
jmp
out
lods
test
ret
xor
xchg
jmp
mov
fwait
jo
arpl
idiv
mov
ljmp
je
sub
mov
dec
dec
cld
lret
stos
mov
icebp
rclb
test
xchg
push
add
jns
lods
mov
test
lahf
hlt
adc
stc
mov
mov
lock
lret
dec
fs
xor
lea
inc
mov
xchg
lea
aaa
fwait
cs
sub
mov
cmc
in
dec
popa
mov
jg
xchg
clc
fwait
jo
fmulp
fcmovnb
push
lds
mov
mov
sti
addb
xchg
ffree
pop
pusha
mov
push
out
dec
idiv
cmp
ficoml
xor
sti
mov
out
xor
icebp
aaa
movsl
shlb
xchg
hlt
sti
sbb
pop
mov
adc
hlt
pop
insb
dec
push
xor
push
lods
jbe
into
sub
mov
mov
popa
fcomps
pop
aaa
ror
data16
sbb
xchg
subb
test
xor
int
add
mov
pushf
xchg
movsb
mov
push
pop
cmp
stc
sti
cmpb
in
loopne
or
and
in
bndldx
fiadds
bound
mov
mov
xor
into
xchg
jp
mov
jnp
les
mov
push
lret
rolb
mov
sbb
push
loop
insl
mov
sub
mov
bound
scas
add
or
js
mulb
data16
sbb
pop
mov
adc
push
sbb
dec
mov
xchg
sbb
cmc
cmp
kmovw
out
imul
jmp
loopne
stos
sub
push
jge
dec
dec
jmp
movsb
xchg
sbb
hlt
push
mov
or
add
movsl
xchg
xchg
mov
aam
mov
mov
test
or
hlt
enter
lcall
sub
cs
ds
adc
int
and
loopne
in
add
in
inc
or
mov
clc
les
imul
mov
mov
lods
cmc
mov
cs
mov
fwait
call
mov
lea
jle
xchg
negb
in
mulb
loop
cmpsb
cmc
push
gs
jb
jo
add
inc
subb
sbb
jae
xor
or
mov
fisttpl
and
pop
mov
pop
mov
mov
sbb
adc
push
sub
dec
mov
out
push
mov
push
add
and
pop
insl
jne
or
outsl
rorl
adc
scas
inc
sub
mov
push
xchg
mov
mov
and
ret
xor
cmp
mov
jg
loope
dec
scas
pop
movl
jecxz
insb
outsb
ss
xchg
sahf
outsb
pop
mov
lahf
arpl
enter
inc
in
lcall
popa
ficomps
fidivl
aas
jmp
add
xchg
xchg
lods
out
push
stos
jo
daa
gs
rorb
dec
mov
popa
adc
fdivrl
dec
ficoml
imul
push
add
dec
mov
jnp
xchg
scas
icebp
sub
cmpsl
jp
arpl
add
xchg
mov
daa
mov
clc
lock
dec
cmp
in
jl
jp
xor
push
and
sub
in
fisttps
sbb
hlt
btsl
push
lcall
cltd
outsb
movsl
daa
jle
mov
into
and
bound
push
mov
sbb
js
pop
or
sahf
in
icebp
inc
xor
pop
cli
mov
fwait
out
mov
test
pop
sub
mov
and
sarl
fisttps
inc
out
mov
sti
add
jne
jecxz
dec
or
mov
jb
das
gs
add
sbb
mov
outsb
push
imul
adc
icebp
sbb
loopne
add
mov
mov
xchg
pop
dec
clc
enter
fnstcw
jb,pt
test
mov
nop
mov
addl
or
sub
dec
pop
jb
or
sbb
push
jae
sub
jns
push
cmp
sti
mov
cmpsl
ret
xor
push
test
popa
stos
mov
adc
cmp
lea
andl
cmpb
test
nop
test
pop
dec
insb
pop
repz
mov
and
pop
add
ja
shl
pusha
mov
dec
dec
cwtl
das
xchg
sub
cmp
popw
enter
inc
pop
xor
daa
mov
or
sub
enter
sbb
rcr
lret
fists
bnd
icebp
xor
sbb
hlt
out
leave
pop
push
and
cmp
movsl
sahf
push
inc
lock
push
jno
mov
cli
movb
aad
int3
or
sub
sbb
lock
mov
mov
ficoms
xor
and
insl
addr16
into
dec
insl
or
inc
scas
pop
mov
and
push
in
xchg
bnd
push
test
testb
mov
leave
mov
movsl
cmp
movsl
inc
dec
lds
mov
sbb
mov
add
lods
ja
sub
jp
test
mov
nop
sub
inc
add
lds
cwtl
xchg
notb
out
cmp
adc
lock
inc
dec
mov
xchg
xorl
adc
mov
popa
mov
das
xor
aas
ljmp
or
xchg
test
aad
in
jg
ret
inc
test
popa
les
into
shll
sbb
jne
inc
ror
es
inc
or
xor
lcall
aaa
jb
add
sbb
xchg
popa
int
fcmovnu
cli
ljmp
fsubrs
popf
xor
jno
inc
xor
and
pop
fsubrl
sbb
mov
lods
in
cld
mov
mov
mov
sbb
mov
movsl
into
sahf
insb
scas
adc
fiaddl
and
sub
pop
xchg
hlt
lds
test
faddp
xchg
and
sarl
jmp
and
inc
lds
nop
add
jecxz
imul
xchg
push
inc
jg
jle
sub
jp
add
negb
sub
sub
xchg
scas
faddl
cld
int
adc
dec
clc
or
xchg
jge
out
xor
sub
mov
popf
push
mov
xchg
ret
js
mov
inc
lcall
icebp
and
sbb
push
cltd
test
andl
dec
and
mov
pop
dec
inc
fwait
cld
xor
inc
mov
imull
push
mov
mov
cmp
jl
mov
sub
flds
dec
fs
out
push
aas
xor
adc
filds
inc
xchg
xorb
scas
stc
mov
imul
fldenv
insb
cmpsl
ret
adc
ret
out
test
xor
mov
sbb
addr16
mov
mov
cmp
lcall
push
pop
pop
mov
hlt
jmp
cmpsl
pop
leave
mov
test
and
add
jae
sbbb
or
test
mov
int
mov
cmp
scas
dec
mov
push
mov
cmpsb
repz
ret
xchg
push
call
mov
cwtl
out
jg
mov
in
cmova
pop
int3
dec
push
mov
or
xchg
jns
les
leave
rcr
pushf
ja
fwait
scas
fistpl
lods
adc
pop
push
test
pop
push
mov
cmp
cmpsl
fdiv
inc
pop
mov
jno
push
push
mov
push
imul
ret
xchg
push
inc
enter
inc
mov
dec
mov
dec
out
sbb
jl
je
aam
stc
and
push
std
mov
test
fmuls
sbb
and
xchg
daa
sbb
scas
xor
xchg
repz
jl
in
mov
jle
imul
out
cmc
jge
and
out
jp
or
and
xchg
js
test
imull
lret
into
rcr
aaa
lds
xchg
pusha
pop
cmp
shl
mov
popf
adc
daa
mov
mov
jle
push
jb
mov
adc
hlt
cmp
adc
mov
inc
addl
sahf
xchg
add
rcrb
leave
and
test
cmc
shll
and
scas
sbb
popf
adc
inc
pop
push
pop
inc
pop
sub
and
adc
mov
inc
push
push
pop
lock
mov
sbb
push
push
push
popa
pop
pop
stos
xor
xchg
loop
inc
push
enter
repz
mov
xchg
fsubs
repz
jb
cmp
and
sarl
adc
push
pop
inc
mov
mov
mov
cmpsl
gs
jae
push
jae
cmp
adc
and
aaa
bound
jecxz
jle
mov
pop
out
and
mov
out
iret
pop
pop
or
jecxz
mov
mov
dec
pop
jnp
mov
adc
call
push
or
lret
stos
or
adc
lret
daa
jb
call
ss
xchg
loop,pt
pop
repnz
lret
iret
and
mov
mov
int3
add
cmc
sbb
mov
xor
imul
ljmp
negl
lods
sarb
std
hlt
out
pop
sub
insb
cmp
adc
mov
clc
sub
sti
mov
lock
or
mov
rolb
sahf
iret
dec
mov
and
dec
ret
addl
outsl
fldcw
test
fldcw
mov
imulb
dec
out
aam
jno
or
push
lahf
loop
test
lods
dec
cmc
incl
es
pushf
lods
xchg
push
ror
mov
dec
inc
sbb
dec
idivl
in
fmulp
fdivl
adc
push
ds
mov
cmp
inc
scas
lods
enter
pop
mov
lods
clc
xorl
xchg
mov
lcall
dec
adc
repz
stos
xchg
mov
and
dec
adc
add
jle
pushf
xchg
push
mov
and
popa
adcl
xor
cld
mov
sar
in
popa
cwtl
sbb
ja
push
jae
loop
dec
lcall
sbbl
lcall
out
fistps
loope
out
in
pop
sahf
shll
sub
enter
mov
mov
cltd
icebp
inc
jo
adc
in
push
cmp
pop
mov
push
fstpt
stos
cltd
pop
sbb
pop
mov
mov
cltd
es
mov
inc
mov
fbstp
faddl
push
dec
fs
push
lret
pop
pop
negb
sbb
aad
sub
inc
lods
scas
iret
fwait
mov
xchg
dec
mov
push
into
xchg
out
aad
int
data16
hlt
add
mov
mov
fdivrl
negb
rolb
arpl
jl
push
mov
xchg
lahf
bound
outsb
xor
xchg
icebp
push
ret
xorl
mov
pushf
flds
adc
cwtl
push
jo
movsb
mov
cmp
sub
xlat
mov
nop
addr16
cmc
lret
addr16
or
pop
inc
lods
or
sbb
test
mov
jle
outsl
cmp
dec
movsl
cmp
xor
adc
arpl
pop
lahf
pusha
pop
roll
sbb
fisubrl
xchg
cmpsl
loope
mov
pop
loop
fmuls
dec
je
add
and
dec
xchg
adc
mov
xlat
inc
jno
mov
adc
mov
inc
inc
in
addr16
jno
popl
int
adc
cmp
fimull
pop
popa
mov
lcall
sbb
pop
cmp
inc
shrb
out
mov
inc
faddl
mov
xchg
jbe
push
push
hlt
pusha
mov
jle
and
mov
lods
iret
pxor
cmp
pop
jle
scas
pop
dec
mov
std
xor
dec
fwait
and
ds
jmp
fwait
mov
je
loopne
mov
fnstsw
sbb
xor
loope
test
xor
mov
sbb
push
inc
test
bound
or
sub
les
iret
xchg
stos
adc
add
repz
jns
mov
xlat
or
jae
mov
cmp
mov
je
js
cltd
out
add
out
lret
cltd
pop
mov
icebp
mov
xor
mov
in
xchg
dec
and
adc
test
call
cmpsl
outsl
int
or
inc
scas
ds
cmp
outsl
int3
mov
pop
xlat
arpl
in
bound
pminub
sbb
push
rol
insl
test
jns
leave
cwtl
and
or
push
or
pop
popa
retw
push
cs
mov
xor
pop
cmpsb
push
outsb
sbb
push
int
inc
shlb
cmp
scas
jle
adc
orb
push
mov
cmp
sub
ja
inc
or
jne
movsb
xor
adc
lea
or
lds
xor
jecxz
mov
movsl
int3
mov
rorl
cltd
mov
xchg
or
stc
mov
ret
cmp
in
push
lock
mov
jns
pop
xchg
inc
sbb
adc
xor
call
lock
imul
mov
dec
jo
lea
cmp
or
dec
decl
int
out
negl
fildl
stc
and
into
or
sar
test
fcompl
fists
dec
fisttpll
es
into
test
xchg
sub
inc
cmp
push
xor
call
push
call
test
test
popf
adc
pop
and
add
inc
repnz
aam
xor
rcr
xchg
mov
outsb
xchg
or
mov
fcoms
cmp
scas
sub
sbb
dec
mov
nop
fs
jmp
jo
add
sahf
cmc
scas
mov
push
push
ja
push
iret
inc
cld
insl
andl
sub
aad
lock
cmpsl
mov
test
mov
xchg
cmp
les
jmp
imul
fcmovbe
insb
repnz
jnp
add
stc
icebp
sbb
dec
gs
or
sbb
cmp
pop
xor
push
adc
clc
cmp
fsubrl
push
push
xor
lret
lret
adc
xor
aaa
mov
dec
cmpsb
orl
pop
and
xchg
cmpsb
in
ds
mov
xchg
push
movsb
mov
in
stc
std
pop
mov
jns
cmp
mov
cltd
arpl
xor
aaa
iret
add
adc
cmp
js
xlat
lahf
mov
pop
mov
or
jns
sbb
cmp
js
adc
les
cs
fsubl
jmp
das
aad
mov
xchg
jle
xor
adc
incl
pop
pop
and
cmp
inc
pop
setae
mov
call
fmull
pop
inc
pop
pop
push
adc
scas
mov
add
xor
addr16
mov
mov
out
aam
pushf
rcr
repnz
cmp
or
and
and
loopne
add
jno
arpl
mov
xchg
jl
and
xor
mov
outsl
test
pop
les
add
xor
sbb
jne
push
in
lods
sbb
jge
add
sahf
enter
jnp
jnp
sbb
mov
pop
negl
outsl
clc
jle
cmp
dec
frstor
jno
lock
mov
mov
out
inc
es
and
stc
sub
adc
scas
pop
mov
and
cmc
push
cmpsl
int3
or
jno
cmpsl
cltd
mov
cltd
xchg
mov
fnstcw
xor
dec
lahf
xor
cli
push
aam
pusha
cmc
lods
test
out
mov
ja
aad
fiadds
out
mov
lea
sbb
test
jbe
add
mov
test
sub
or
mov
test
ds
pop
xchg
and
fs
pop
mov
jno
push
popa
xor
mov
mov
cmp
pop
sub
bound
adc
fdivs
fwait
sahf
sbb
add
add
inc
push
xchg
lds
mov
cmp
iret
mov
popf
xchg
jmp
push
fistpll
decb
jb
dec
inc
loope
cmp
call
pop
negl
mov
call
push
iret
shrl
xor
ficomps
pop
and
push
dec
xchg
cli
push
mov
push
add
mov
or
les
xchg
dec
pop
aas
popf
lds
lcall
arpl
xchg
imul
ja
repz
sahf
add
divps
xlat
ss
imul
and
and
xor
fld
mov
sarl
push
mov
scas
push
aaa
jecxz
data16
pop
out
xchg
in
inc
xchg
mov
fwait
pop
mov
jb
cmpsl
mov
cltd
lds
push
in
mov
push
adc
mov
push
mov
stos
mov
cs
lea
daa
inc
xchg
stos
adc
in
outsb
fldenv
jmp
cmovno
sbb
std
adc
mov
adc
pop
jle
sahf
or
lea
fistpll
incb
sub
jmp
and
mov
fisubl
mov
lret
jecxz
add
repnz
pop
ret
xor
iret
test
mov
ds
cmc
in
jns
daa
adc
dec
in
mov
jbe
mov
inc
pushf
xchg
mov
dec
push
add
inc
aas
push
iret
shlb
cltd
push
aaa
sbb
incl
inc
cli
xchg
repz
mov
test
jne
aaa
int3
ss
mov
movsb
pop
add
adc
pop
xlat
js
or
stos
lods
js
jne
add
sbb
xchg
and
xor
mov
sahf
sub
xchg
adc
dec
loop
mov
mov
dec
cmp
lea
and
xchg
xor
repnz
shlb
jecxz
mov
or
and
mov
inc
mov
loop
data16
loopne
int
sbb
mov
jns
out
sub
jo
jle
or
xor
pop
sbb
and
xchg
sub
or
rcrl
ss
mov
les
push
lock
adc
out
dec
cmp
xchg
decl
xlat
icebp
adc
loop
sbb
out
push
cmp
adc
adc
aam
ja
loopne
repnz
push
rorb
dec
sar
fisubs
jbe
aam
stos
scas
subb
pop
lcall
and
pushf
ds
dec
push
dec
es
jne
push
jmp
fisttps
add
loope
stc
hlt
mov
cli
xor
addl
insb
inc
sub
sbb
cmp
or
mov
popf
scas
push
out
cmc
aas
repnz
lock
test
fstpl
pop
jmp
inc
pop
mov
popa
sub
gs
out
push
mov
loopne
xor
addr16
into
sahf
outsb
jge
mov
stos
add
or
push
mov
mov
inc
cmp
or
jp
cwtl
xlat
aad
add
jmp
or
fxch
lods
mov
sbb
fwait
dec
inc
ljmp
adc
inc
inc
inc
in
fcmovnbe
je
push
mov
or
adc
scas
adc
test
jecxz
xchg
mov
cmpsl
out
repz
inc
stc
mov
into
push
pop
ret
sub
dec
inc
aas
fwait
or
sub
in
mov
xor
add
pushf
cs
in
sbb
adc
jbe
cltd
sub
sub
dec
mov
xchg
and
mov
imul
mov
notb
mov
roll
call
loope
sbb
jg,pt
xchg
iret
in
ja
nop
sbb
mov
movsl
or
leave
aam
or
dec
pop
push
ret
push
test
mov
lods
mov
clc
mov
jnp
imul
dec
dec
mov
adc
insb
roll
insl
push
xchg
mov
push
jb
mov
mov
add
push
std
out
push
mov
subb
inc
jo
lret
pusha
insb
mov
xchg
movsl
xchg
push
xor
adc
movsb
das
cwtl
xor
mov
mov
pop
mov
stc
inc
cld
mov
sbb
pop
lea
jne
jg
inc
adc
stos
or
cmp
lret
inc
mul
push
push
ja
pushf
xor
push
cli
testl
in
int3
sub
testl
inc
flds
cmp
add
aad
movsl
pop
xchg
push
push
js
imul
cmp
push
mov
test
mov
sar
orb
dec
rclb
cwtl
pop
mov
add
pop
std
out
jbe
mov
jl
mov
mov
mov
cwtl
outsb
fadd
shlb
adc
sbb
shrl
fnstsw
rorb
and
or
insb
outsb
dec
in
into
outsb
xchg
mov
out
mov
aad
mov
jo
lret
addr16
fstl
jnp
cmc
jbe
pushf
out
mov
rcl
jmp
fistps
test
jg
mov
cmp
mov
adc
mov
or
fdivs
notb
pop
jae
mov
pop
cmp
push
cli
leave
adc
insb
out
cmp
sti
xchg
rcrb
mov
ret
aas
push
jnp
and
inc
repnz
enter
xor
or
or
xlat
mov
repz
jge
mov
lock
xor
insb
addr16
and
mov
sahf
lods
pop
fucomi
inc
cli
sub
adc
lea
je
jge
iret
cld
aas
jns
lods
jns
loopne
pop
cmpsb
outsl
data16
ret
sub
ret
iret
imul
stc
cmp
sbb
aaa
jg
cmc
testl
js
repnz
loope
adcb
arpl
mov
scas
cltd
sbb
mov
adc
addb
pop
test
xor
push
mov
icebp
mov
and
repz
nop
pop
fcomp
clc
clc
adc
mov
sbb
outsb
jle
call
add
ljmp
jo
jecxz
roll
outsb
das
mov
shrl
jno
mov
cmp
pop
xchg
xlat
add
into
idivl
ja
ret
inc
push
loop
xchg
andb
gs
xor
fwait
dec
loop
jge
popa
cmpsl
imul
iret
cmp
fisttpll
mov
dec
imul
xchg
xlat
jo
sub
pop
dec
mov
cmp
inc
lods
test
imul
lret
call
shrb
push
aam
sub
mov
and
inc
xchg
int
xlat
loopne
popa
jl
lret
incb
push
popf
stc
outsl
filds
dec
jb
hlt
movsl
mov
lds
pushf
cltd
leave
pushf
cld
and
repz
das
xor
jp
in
cwtl
pusha
dec
insl
xlat
in
fwait
popf
in
mov
stos
clc
adc
jg
iret
icebp
fldt
mov
loopne
mov
pop
fwait
int
test
lock
mov
popa
push
mov
jle
pmullw
xchg
popa
ret
adc
mov
mov
cli
rclb
pop
imulb
jne
push
inc
ds
pop
sbb
lods
jge
fdivrs
and
daa
jmp
aaa
jno
jl
add
mov
jnp
add
push
imul
push
icebp
negl
xlat
cltd
mov
add
sahf
cmp
fs
in
inc
lret
and
adcl
mov
and
fwait
test
pop
subl
pop
lods
int3
nop
sub
enter
push
and
mov
xorl
lods
out
lret
dec
lock
jmp
cwtl
mov
mov
mov
cli
dec
cltd
repz
into
mov
add
dec
test
add
out
ret
into
mov
shrb
xchg
ret
movsl
push
pop
pop
push
mov
scas
mov
lods
outsb
push
sub
fs
mov
fmulp
and
xor
fcmovne
ret
mov
loope
mov
loop
or
lea
cmp
cltd
in
pop
pop
gs
outsb
jmp
xchg
daa
pusha
mov
incb
mov
insl
aam
xchg
int
or
ret
pop
xor
sbb
icebp
mov
out
and
xor
xor
lock
andl
dec
cmp
mov
fisttpll
dec
jae
cmp
pop
xchg
mov
jle
or
rol
jle
xor
nop
rorb
mov
dec
push
dec
xchg
mov
mov
das
xor
les
in
push
add
out
inc
aam
js
mov
ljmp
sbb
hlt
inc
pop
cmpsl
jb
test
sub
gs
in
sub
popa
mov
fildll
rol
dec
push
fs
loop
xor
rcrb
push
push
movsb
dec
sub
pop
mov
mov
ret
sub
in
out
push
adc
or
in
ljmp
jb
lock
mov
mov
push
in
mov
out
dec
aaa
and
ficompl
sub
xorl
add
cmp
jae
xchg
mov
cmp
push
sub
test
jge
sbb
jne
adc
and
and
add
add
inc
jno
pusha
inc
sub
jecxz
sbb
aaa
jmp
dec
lock
mov
mov
movsb
insb
or
loopne
mov
inc
in
adcb
mov
xchg
mov
fs
xchg
mov
pop
icebp
or
data16
pop
or
scas
push
imul
jo
lret
fildll
call
scas
pop
in
cmpsb
daa
hlt
jb
movsb
lods
or
and
dec
cmp
jb
pop
sub
dec
mov
mov
mov
add
jle
or
cmpsb
out
xor
sbb
jmp
sbb
mov
and
add
xor
add
cltd
dec
xchg
scas
test
ret
pop
mov
scas
pop
push
fs
xchg
or
rcrl
ret
jmp
lods
test
jae
mov
lods
add
je
mov
pushf
add
int
adc
jecxz
mov
mov
mov
dec
mov
add
push
jb
dec
ret
insb
xchg
pop
movsb
clc
push
add
sti
test
andl
lahf
outsl
in
inc
jno
out
cmpsl
notl
add
gs
xchg
out
sub
sar
js
cmpsb
sbb
test
icebp
mov
cltd
rcl
push
ja
scas
cmpsl
repnz
iret
add
bnd
jge
sub
insb
xchg
notb
repnz
outsl
pop
hlt
jg
mov
inc
or
push
push
sub
lcall
loop
lods
shrl
and
mov
pop
and
dec
sub
rclb
lods
cmp
movsb
lods
or
inc
or
dec
cmp
scas
mov
mov
popf
jecxz
pop
inc
nop
sbb
mov
in
sub
or
sti
rorb
xchg
iret
lea
es
inc
push
jno
pop
stos
adc
cmp
enter
pop
test
inc
jno
inc
jns
sbb
and
fidivl
jg
xchg
mov
insl
xchg
or
clc
popa
bound
mov
dec
fs
jp
push
adc
repnz
mov
ds
pop
pop
push
mov
shr
rcrl
cmpsb
sbb
pop
or
mov
jle
pop
push
mov
push
hlt
ljmp
out
lret
xchg
xchg
mov
pop
fwait
repnz
cld
ss
inc
sti
bound
jmp
fimuls
and
cmp
cmp
pop
leave
push
mov
add
xchg
fdivl
das
fsubrp
int
fbstp
out
movsb
push
jl
fisttps
push
jo
ficoml
push
push
aad
lods
in
incb
adc
test
nop
jne
repnz
loopne
int
inc
adc
inc
es
loopne
jle
add
in
jl
sub
jne
push
scas
ljmp
mov
xor
popf
jns
cwtl
cs
repnz
loop
sbbl
and
in
sub
sub
pop
inc
outsb
popa
lods
out
scas
ja
jg
outsl
sti
dec
sub
adc
push
sub
roll
repnz
xor
jo
inc
jb
std
add
femms
mov
testl
inc
fidivrs
subb
jae
sbb
jmp
push
dec
icebp
in
mov
ljmp
jmp
sub
pop
arpl
and
movsl
cmp
jle
mov
movsl
repz
cmpl
dec
adc
jns
cmp
xchg
cltd
aad
or
jbe
jg
enter
outsb
ficoml
and
add
push
mov
shll
rorb
sbb
clc
pmullw
push
out
or
jb
into
dec
add
push
punpcklbw
or
icebp
add
sbb
icebp
call
lock
pop
imul
sbb
xchg
xorb
xor
ljmp
sar
out
and
fs
push
sub
mov
xor
andl
sub
xchg
xor
and
outsb
in
mov
or
es
xchg
mov
mov
inc
ja
pop
imul
fidivrl
push
mov
ss
jbe
je
icebp
in
faddl
in
mov
test
cld
test
mov
out
sbbl
int
adc
leave
sbb
push
int
mov
outsl
push
mov
xor
pop
jbe
int3
popf
rcrl
jg
dec
mov
lret
xchg
dec
mov
mov
iret
push
inc
jg
ja
stos
in
cmpb
stc
push
cli
inc
push
push
pusha
and
mov
jnp
sbb
inc
inc
dec
in
decb
iret
push
loopne
popa
popf
stc
mov
adc
fistpl
pop
imul
in
mov
sub
push
js
sbb
cmpsl
inc
scas
shrb
rclb
andl
adc
mov
les
or
ficoms
fs
mov
insb
pop
das
in
mov
or
mov
xor
test
and
xor
adc
push
mov
std
rorl
daa
cmc
fstpt
xcrypt-ecb
cmpsl
dec
fwait
call
mov
pop
dec
cmp
mov
push
jnp
sahf
roll
imul
out
pop
pop
push
out
rcrl
test
dec
outsb
fcompl
add
mov
jnp
jle
sahf
mov
scas
imul
sub
inc
stos
xchg
push
out
cli
orb
ja
cld
cmp
imul
leave
push
ret
jecxz
jno
aaa
lock
mov
pop
lcall
jbe
pop
mov
fadds
mov
adc
movsb
cmp
cmpsb
pop
repnz
jp
das
xor
inc
stc
imul
outsl
mov
dec
lret
xchg
xor
mov
in
jno
loopne
enter
pop
and
cmpsb
push
sub
cmp
inc
mov
pop
clc
loop
sub
jge
dec
sarl
xor
ficoms
lods
xchg
xchg
push
jp
mov
ror
jnp
sahf
jge
hlt
dec
ja
les
adc
push
cmp
lock
pusha
data16
xlat
pop
cmp
popa
push
or
xchg
data16
fistpll
and
mov
or
clc
cmp
cmc
fcmovbe
aaa
mov
sbb
xor
adc
mov
test
cmpl
mov
pop
add
bound
xor
mov
xchg
xchg
add
cmp
or
xchg
sub
cwtl
inc
hlt
and
jne
adc
push
lods
adc
or
ds
and
addr16
fs
adc
arpl
sub
ret
dec
xor
pushf
and
sub
jecxz
outsl
xor
fsubrs
loope
cmc
mov
sub
in
test
addl
mov
push
fdivs
add
test
xchg
mov
test
rorl
pop
sub
push
jno
sbb
xchg
dec
jp
mov
rcr
xlat
lock
jbe
frstor
lahf
mov
mov
int3
and
jbe
sarl
push
fld
mov
jmp
sbb
daa
inc
fisttpll
or
sbb
out
insl
out
sbb
pop
outsb
out
test
pushl
testl
mov
mov
push
push
inc
inc
pop
cmp
lcall
push
add
mov
fbld
sahf
daa
lret
addr16
sti
mov
mov
adc
sahf
xor
push
mov
in
xchg
xorl
xor
xor
adc
repnz
lret
jle
push
fsubs
bound
add
adc
pop
repnz
outsb
rolb
pop
push
mov
cmp
sub
cwtl
push
and
adc
js
push
or
dec
mov
lcall
fimuls
divl
call
out
cmpsl
cmp
dec
sbb
jmp
scas
inc
mov
fdiv
loop
je
sti
cmp
adc
insl
and
xlat
imul
lock
dec
call
out
mov
push
enter
jp
xchg
mov
inc
xor
loop
xorb
sbb
scas
and
ljmp
into
pop
xchg
lock
or
pop
dec
test
rcll
jns
mov
jmp
jl
and
arpl
jne
test
sub
jns
add
mov
xchg
aaa
pop
cmp
fs
sbb
out
fs
lds
mov
sub
xor
push
lret
sub
add
add
loope
jo
aad
sbb
das
lods
testb
xor
lret
outsb
out
clc
xor
cmc
jle
dec
mov
cmpsb
xor
movsl
insb
mov
and
fdivl
jbe
stos
movsl
dec
jmp
std
mov
jnp
push
xchg
jp
jmp
lds
pop
push
and
inc
rolb
gs
int3
lcall
push
pop
xchg
jae
mov
pop
jns
cmp
test
scas
into
repz
inc
xchg
enter
inc
cmp
pop
loop
data16
mov
cwtl
aam
xchg
cmp
dec
jbe
or
icebp
andb
ss
call
clc
sbb
bound
mov
mov
lcall
push
mov
insb
sar
xchg
cmpsb
jg
xchg
cld
or
repz
cmp
in
or
xor
mov
lds
iret
stc
mov
out
scas
cld
inc
ret
lret
push
and
std
fiaddl
xchg
shrl
add
push
xor
test
les
adc
call
pop
cmp
in
pop
push
push
xchg
xchg
lcall
popf
push
lds
fisubs
out
xchg
decl
pusha
xor
mov
mov
into
xor
mov
or
test
out
push
push
or
mov
dec
push
mov
rorb
cmp
jmp
sahf
out
mov
add
and
jmp
mov
fdiv
lcall
push
adc
jmp
je
cld
or
gs
sbb
push
stos
cmp
pop
xor
gs
or
and
ror
ja
sbbb
mov
inc
sbb
ret
imul
in
ljmp
pop
cmpsb
and
insl
lods
inc
push
jbe
pop
push
pop
xchg
cmp
insb
mov
xchg
aad
daa
and
test
fucomi
ljmp
or
fiaddl
or
push
test
push
sub
dec
nop
cmp
pop
in
insl
cmpsb
sarl
pushf
sar
push
sub
in
enter
and
out
les
cmp
aas
sar
loope
dec
and
rcr
push
stc
imul
mov
rcr
pop
push
or
xchg
inc
push
inc
dec
pop
divb
push
addr16
aaa
nop
push
mov
add
dec
fidivrl
cmpl
pop
inc
pop
sti
push
jl
adc
lods
in
rcl
test
pop
dec
inc
push
enter
inc
mov
es
push
stos
ret
lods
mov
xchg
iret
ljmp
cmc
inc
incb
mov
push
or
sbb
int3
jo
or
xchg
inc
push
jp
jns
mov
in
push
pusha
mov
test
add
xor
call
inc
fucomi
lcall
sahf
sub
aam
cmp
test
notl
cmp
lock
mov
jb
jae
ljmp
mov
sub
and
fsubrl
lods
jp
loopne
scas
add
adcl
pop
inc
push
lea
xor
loop
cmp
orl
add
test
cs
inc
mov
jno
jns
sarb
inc
out
pop
cmp
and
pop
in
imul
mov
cmpb
sub
cmp
cmp
sub
hlt
push
imul
xchg
js
push
fidivl
cmc
test
out
mov
cwtl
popa
imul
push
jbe
fwait
out
sbb
cmp
sarl
outsl
daa
out
xor
xchg
js
xor
std
xchg
mov
int
scas
push
jecxz
fs
fcom
mov
mov
ficoms
dec
xchg
xor
aam
add
insl
aas
enter
mov
imul
out
xchg
mov
and
push
test
sub
mov
sti
push
or
sub
enter
loope
jle
imul
call
xchg
stos
and
lea
xchg
adc
mov
aad
cmp
in
lret
popa
leave
hlt
aad
cld
add
xor
mov
lret
fstpl
sarl
cmp
repz
jmp
cmc
out
aam
into
mov
pop
rorb
sbb
inc
movsl
adc
aad
inc
pusha
sbb
lods
ss
cmpsb
mov
mov
xchg
aas
add
push
xor
sub
and
inc
xor
pop
and
push
jo
jno
mov
pop
mov
imul
ja
add
or
addb
add
fildll
or
test
std
popl
je
repz
add
xchg
paddw
xor
push
movsb
push
into
add
es
cmc
pop
xor
push
and
xor
sub
pop
jp
sbb
mov
mov
sub
xchg
push
cmp
test
out
out
pop
jb
in
pop
into
mov
shlb
pop
out
fwait
xor
es
or
pop
dec
cmpsl
scas
pop
andb
insb
repz
aaa
into
xchg
add
jnp
outsl
mov
cmpsl
ljmp
aas
imul
dec
lods
ljmp
hlt
and
in
ljmp
pop
addr16
pop
sbb
aam
ds
adc
jg
lahf
mov
pop
sub
push
inc
or
dec
inc
fsubr
mov
mov
into
cmp
lock
mov
and
shl
das
dec
stos
loope
pop
xchg
mov
jb
xor
outsl
dec
sub
push
leave
adc
in
adc
sbbl
xor
push
shlw
pop
lcall
shlb
jmp
mov
xor
mov
sbb
push
pop
rcrl
sbb
sub
jns
inc
or
das
ret
add
idiv
mov
stos
xchg
xor
cmpsl
xchg
stos
popa
mov
mov
cmpsb
div
dec
sbb
lcall
punpcklbw
cmp
mov
cmp
lcall
mov
xchg
inc
adc
mov
fimull
jo
sub
aas
pop
mov
lahf
sbb
mov
std
jp
mov
jns
lock
adc
pop
pop
lret
mov
ja
mov
push
fmull
sbb
sbb
add
nop
jmp
add
in
add
pop
fsts
xchg
outsb
cmp
dec
xor
enter
int3
outsl
mov
add
mov
xchg
inc
xor
jecxz
lods
imul
cld
jl
call
mov
fwait
std
cmp
xchg
icebp
addr16
aas
rcrb
adc
add
adc
inc
sbb
addr16
daa
subl
jecxz
sub
jne
movsl
xchg
add
inc
sub
cwtl
pop
xlat
fnstcw
out
inc
mov
xor
xchg
ja,pn
push
and
leave
cmc
sub
je
cmp
mov
mov
sbb
test
sbb
sbb
fimuls
lcall
pushf
push
cli
mov
sbb
mov
jae
cld
cmp
repnz
adc
pop
dec
pop
inc
gs
and
outsl
dec
dec
or
push
mov
pop
ffree
nop
icebp
dec
mov
iret
pushl
fcom
adc
dec
sahf
daa
and
sub
js
xlat
pop
mov
add
mov
pop
shlb
sub
mov
cmpsb
inc
inc
jnp
push
fidivrl
sbbl
in
enter
inc
repz
ja
jne
xchg
addr16
xchg
lds
pop
cld
pop
aad
or
xor
push
sub
popf
xlat
mov
dec
xchg
rolb
cmpsl
xchg
add
lahf
jp
test
outsl
les
cmc
and
rcrb
rolb
jg
mov
sar
iret
mov
cmp
getsec
in
jecxz
fdivrs
ds
leave
sbb
pop
ret
aas
pf2id
jb
in
test
xchg
cli
idivb
mov
push
pushf
or
jmp
iret
aam
fbstp
mov
push
clc
insl
in
cld
mov
sbb
sbb
sbb
stos
xlat
push
push
push
jae
bound
movsb
dec
enter
stos
sub
repnz
mov
test
mov
mov
aam
sub
arpl
je
mov
pusha
add
jmp
inc
pop
jmp
leave
lret
in
andl
sub
add
mov
dec
jo
scas
bound
push
mov
fcomps
cmp
xchg
and
stc
shlb
jle
repnz
dec
loop
or
sbb
mov
mov
out
adcb
into
mov
mov
sahf
rcr
pop
scas
in
pop
pusha
dec
dec
sbb
in
test
cmpsl
push
shr
add
xchg
movsb
in
shrb
xchg
out
push
stc
dec
pop
jno
xor
cmp
mull
out
loope
adc
loope
movsl
sbb
addl
cli
pop
jecxz
jle
pop
jge
push
inc
inc
fs
imul
adc
inc
pop
jno
pop
adc
int3
stos
imul
push
fildll
imulb
sbbb
pop
adcl
rolb
sub
call
js
hlt
ret
arpl
les
mov
push
hlt
mov
data16
push
xchg
cmpsb
call
arpl
cwtl
push
cmc
fidivrs
arpl
push
add
loope
jmp
push
inc
lds
jbe
xor
fnstcw
and
adc
lret
push
push
jnp
mov
in
push
jb
shlb
xchg
aaa
sbb
pop
gs
xchg
xor
push
push
sub
inc
negl
out
int3
dec
jae
xor
popw
and
movsbl
out
xor
in
jg
xchg
mov
hlt
in
gs
jb
adc
xchg
mov
hlt
xlat
add
xchg
push
cmp
push
add
xorb
push
mov
cltd
and
add
cld
sbb
outsl
or
lcall
xchg
push
cmp
stc
aaa
lret
jecxz
ficompl
inc
jbe
cmp
and
cld
add
cmp
repz
xchg
sbb
sub
inc
pop
imul
cmp
pop
xchg
or
jne
rcrl
mov
sahf
cmp
ljmp
ret
pop
mov
jmp
icebp
pusha
jne
es
jb
mov
jmp
mov
or
or
sti
shrl
mov
mov
daa
or
cmpsl
pop
das
jmp
into
lret
inc
outsl
test
pop
dec
mov
aas
sbb
mov
dec
dec
out
push
ss
xchg
mov
cmpsb
dec
iret
cmp
imul
enter
mov
ret
pop
jo
call
lea
repz
adc
ret
out
sub
ss
repnz
fadds
mov
push
std
sub
icebp
pop
jp
loopne
xchg
sbb
jle
cmc
sahf
inc
out
inc
lret
cmp
fstpl
or
pushf
or
aas
xor
mov
adc
or
adc
mov
je
lret
lock
or
cltd
sub
cmpl
mov
mov
adc
and
stos
cmc
dec
cmc
sub
xchg
out
fistl
test
fldenv
sub
mov
outsl
movsl
loop
mov
aas
stos
or
lods
aam
xor
in
mov
lea
and
fbstp
dec
lret
shrl
pop
adc
adc
in
jecxz
icebp
push
xor
setne
fnstcw
out
test
repz
dec
insb
xchg
or
shlb
mov
push
mov
cmp
dec
and
mov
push
xlat
arpl
push
fcomi
shll
repnz
cmpsl
sbb
lahf
pop
out
dec
enter
push
cmp
inc
mov
outsb
sarl
push
std
inc
in
mov
push
mov
push
xor
popf
test
jp
xchg
mov
and
inc
sub
cld
ret
popf
sub
nop
cs
cmp
xchg
sub
mov
sbb
fsubs
cltd
pop
daa
sub
mov
ret
pop
inc
mov
ds
mov
or
iret
add
enter
jne
es
jl
pop
push
or
adc
ret
insl
xchg
ljmp
out
leave
scas
lods
daa
push
mov
adc
popa
insl
xchg
mov
add
cs
imul
mov
push
lahf
and
inc
xchg
xor
mov
icebp
test
aaa
test
jecxz
push
xor
nop
testl
lret
lods
test
clc
add
je
xchg
adc
mov
gs
mov
imulb
inc
sbb
sub
flds
xor
movsb
fnstcw
xor
in
sub
out
cmpb
mov
insb
arpl
inc
fwait
jmp
push
in
xchg
test
or
adc
push
xchg
pop
inc
adc
iret
dec
pop
movzbl
or
clc
movsl
push
rcrl
repnz
outsb
shll
stc
push
add
jmp
inc
ljmp
ds
add
lret
std
cld
shrl
cmp
cmp
mov
mov
xchg
popf
mov
or
mov
xlat
and
mov
xchg
and
cmp
dec
lods
out
iret
into
mov
pop
test
cmp
incl
sbb
fistl
mov
fwait
popa
je
loop
outsl
add
sbb
in
add
pop
bound
adc
dec
leave
rcl
xor
xchg
mov
or
rcr
imul
or
pushf
fs
sbb
dec
insl
out
jl
std
iret
push
sub
ret
jg
iret
adc
cmpsb
inc
dec
clc
fsubrs
lahf
jnp
pop
pop
aam
inc
movsl
push
insl
es
cli
imul
pop
xor
pop
bound
xchg
push
dec
aad
mov
add
mull
inc
lea
imul
in
in
clc
imul
inc
adc
mov
mov
cmp
ret
sbb
int
mov
lods
out
cmpsl
daa
mov
clc
ret
rolb
sbb
jae
pop
fs
pop
dec
jo
adc
push
mov
inc
jb
fsubp
cmc
insl
jnp
push
push
mov
aam
adcl
cs
bound
imul
jg
fstpt
xor
stc
adc
or
mov
lea
bound
inc
cmpsb
mov
jne
adc
sahf
mov
cli
sahf
or
jecxz
fsubrl
mov
mov
aam
jns
and
and
cmp
xchg
jnp
cmpsb
shlb
mov
lods
push
sbb
insb
mov
or
imul
fsubp
in
mov
xor
push
lods
sti
push
cmp
inc
jne
sub
or
rcrb
jp
xchg
out
pushf
add
mov
loopne
cmp
daa
enter
test
or
mov
mov
jb
jbe
dec
push
stos
repz
imul
ret
sub
fimull
enter
aas
xor
fldt
scas
lods
cmp
mov
pop
cmp
xor
jle
xor
push
or
cmc
xlat
movsl
push
push
push
push
jecxz
jnp
ss
or
push
in
inc
imul
push
scas
sub
cmp
test
xchg
xor
push
repnz
rcl
jno
gs
sub
js
cmp
and
mov
pop
and
jmp
xor
rcrl
add
xchg
pop
add
xchg
jo
jg
sub
out
inc
jle
lret
data16
jmp
mov
mov
repnz
cmpsl
and
mov
xor
es
je
stc
add
cli
or
cwtl
push
or
lret
xchg
jo
outsb
ljmp
jle
adc
adc
push
jae
add
mov
cmp
cli
mov
mov
aad
mov
bound
lcall
mov
add
dec
lock
bt
lods
add
pushf
sub
in
out
scas
jb
xchg
rcr
xchg
dec
or
popf
stc
cmp
dec
or
movsl
add
dec
xchg
aas
cmp
jp
in
rcll
test
fidivrs
sub
adc
fwait
sbb
xchg
mov
dec
insb
pop
psllw
adc
fucomip
sbb
mov
pop
clc
xor
push
mov
dec
imul
pop
nop
cmpsb
or
jle
cmpsb
pop
test
cmp
inc
and
jmp
test
push
sub
sub
aam
stos
repnz
pop
mov
adc
lds
nop
out
pop
pop
lock
or
call
sbb
fdivp
nop
rcl
les
fisubrl
fnsaves
mov
je
jp
in
xor
adc
adc
mov
bound
lret
cmpsl
mov
lods
lret
cs
adc
cs
lret
js
cmp
rorb
mov
negb
mov
mov
xchg
shrb
inc
shr
push
es
adc
jge
jne
call
out
cmp
xlat
fnsave
test
sbb
mov
fcomp
insl
cmp
adc
push
bound
sbb
mov
lds
in
add
je
fmuls
mov
int3
adc
pop
xchg
imul
mov
or
out
push
add
xlat
lds
test
ret
lcall
jae
out
in
sub
jae
faddp
xchg
sbb
js
pop
insb
test
add
lcall
cwtl
mov
push
insb
push
xor
mov
jg
sbb
out
daa
ja
xchg
adc
aad
ret
mov
repz
in
cld
xchg
mov
int3
xchg
mov
enter
sbb
loopne
pop
js
out
inc
lock
xchg
pop
and
cmc
jae
inc
push
push
dec
dec
lods
jg
pop
popa
push
repz
stc
int
ret
sbb
xlat
fcompl
jne
sub
push
je
lods
xor
or
js
sar
out
movsb
out
xor
mov
xchg
inc
jecxz
xlat
lock
repz
lods
mov
adc
movsb
jns
cwtl
jno
cmp
push
mov
ret
in
dec
jne
push
sbb
ss
stos
out
sub
mov
add
ljmp
lds
int3
mov
xchg
bound
or
push
mov
clc
mov
cmc
lock
iret
pop
add
dec
pop
mov
push
pop
push
fucomip
daa
les
mov
ret
call
pop
jae
test
test
das
ret
daa
mov
and
inc
xchg
outsb
testl
fnclex
lret
mov
loopne
dec
cmpsb
dec
popf
imul
jbe
in
push
dec
sub
repz
repnz
or
fwait
insb
sbb
cli
mov
arpl
jmp
imul
inc
shl
sbb
sub
mov
pushf
and
cwtl
mov
gs
out
idiv
lret
pop
push
or
pop
inc
outsb
and
mov
cmp
sub
loope
dec
iret
scas
incl
jg
dec
out
xchg
rclb
lret
imul
sti
jge
call
cmp
cmp
icebp
fsubs
nop
das
fwait
pop
mov
cmp
push
xchg
sub
inc
and
inc
insb
std
xor
fnsave
in
call
mov
lods
sub
lock
add
mov
fcmovu
cltd
fwait
inc
cmp
pop
mov
dec
out
mov
dec
mov
mov
dec
mov
jle
pop
cmp
dec
dec
mov
nop
loopne
lahf
jmp
cmp
mov
int3
test
inc
fstpl
imul
cld
repz
popa
dec
shlb
in
test
mov
test
mov
cmp
gs
pop
push
mov
shlb
push
cwtl
xchg
and
out
cwtl
out
das
loop
pxor
out
stos
adc
aam
mov
movsb
xchg
jb
out
stos
int
insl
sub
cmp
pusha
stc
push
cmp
out
je
shl
jle
jg
inc
dec
mov
adc
pop
rclb
pop
lret
sti
jbe
loopne
enter
xlat
sbb
stos
mov
cmc
cmpsb
push
nop
aaa
sbb
repz
jne
pushf
inc
lret
mov
mov
adc
and
push
dec
rcrl
inc
mov
out
jbe
or
cmp
outsb
int3
push
lods
or
ljmp
in
imul
sbb
mov
insb
pop
popf
fwait
stos
xor
pop
clc
or
pop
xor
iret
out
and
fs
mov
ret
or
scas
rcll
dec
rcl
mov
loopne
insl
mov
ljmp
ret
loope
add
lcall
sbb
pop
test
fstpl
sbbl
jo
or
or
out
mov
sbb
inc
sub
cmp
or
push
xchg
mov
mov
ja
sub
push
add
mov
mov
hlt
test
test
cwtl
scas
inc
dec
sbb
aas
add
fldcw
cmp
cwtl
jecxz
sub
xor
xchg
or
pop
fists
imulb
sti
cmp
cmp
popa
lds
lds
mov
adc
test
adc
sub
mov
dec
jnp
and
xlat
inc
dec
mov
out
or
popa
mov
clc
mov
or
xor
lods
ret
fldenv
pop
mov
cltd
sub
mov
lret
repnz
stos
jb
outsl
fistl
fs
xchg
push
pop
repz
out
cmp
ljmp
roll
mov
cmp
push
loope
pop
push
lret
cmc
jo
pop
or
aad
inc
inc
ss
loop
shlb
adc
jge
loope
nop
pop
push
sahf
xor
popa
stos
cmp
add
adc
shrb
jmp
es
shrb
dec
call
push
xchg
mov
jne
lcall
movsb
push
mov
stc
xchg
xor
icebp
in
mov
mov
mov
leave
push
lods
ss
pop
lret
imul
xchg
adc
movb
test
xor
pop
jbe
aad
push
into
mov
lcall
cltd
pop
inc
xor
repz
jg
dec
lods
ljmp
sbb
adc
stc
in
shll
testb
decb
testb
and
sub
mov
push
sub
int3
pusha
iret
mov
loopne
rcr
fnsetpm(287
pop
and
stos
jno
fs
sarb
jnp
loope
dec
xor
pop
mov
repnz
push
jbe
xor
ss
push
repnz
pop
mov
rcll
test
rcl
hlt
jnp
lods
addr16
bound
inc
scas
xor
sbb
scas
into
push
mov
outsl
or
imul
sbb
push
lock
add
cmp
pop
cwtl
daa
stc
roll
imul
out
jle
sbb
fs
xor
mov
push
sbb
dec
sbb
movsb
lods
inc
xchg
and
imul
pusha
inc
xchg
orl
outsb
jo
lods
imulb
mov
add
jns
scas
inc
mov
test
sub
out
pop
fiadds
aad
adc
lahf
insl
mov
sub
xorb
and
scas
imul
int3
sub
sbb
mov
fisttpll
into
adc
sub
or
setl
icebp
movsb
xchg
and
cmp
out
rolb
and
stos
sub
aas
jg
repz
insl
mov
ficoml
dec
jge
pop
mov
xor
inc
jl
jg
or
shl
fs
mov
cmp
mov
add
decl
out
push
fs
mov
scas
insl
ret
mov
jno
repnz
stos
fwait
mov
int
in
test
dec
mov
xchg
or
xor
fcoml
lret
mov
inc
outsl
imul
jmp
mov
dec
sub
aaa
outsl
pop
xchg
xor
jns
jo
xchg
scas
dec
and
push
pop
lcall
adc
lret
cmp
in
xchg
adc
call
rclb
ficompl
mov
idiv
in
sub
adc
xor
adc
dec
bound
cmp
mov
dec
xsave
xchg
pop
inc
xchg
shll
test
cmp
inc
aas
nop
scas
cmp
xchg
cmpsb
mov
cmpsb
and
ljmp
nop
jmp
push
xchg
xchg
lret
jg
add
enter
sahf
rcrl
cs
and
out
stos
loop
fimuls
loop
and
cmpsb
mov
mov
std
testb
fstl
cmc
push
push
loop
out
in
inc
lret
sbb
sarb
inc
xchg
mov
lcall
xor
int
ljmp
ficompl
xchg
movsl
cmp
adc
mov
loope
jno
push
cmp
pop
insl
dec
sub
xchg
mov
aaa
push
cli
push
mov
inc
cs
push
push
je
push
mov
inc
inc
or
les
push
ja
jge
out
jge
sub
pop
cmp
ljmp
popf
mov
scas
in
jb
cltd
sarl
hlt
jns
pop
test
in
pop
cmpsb
lcall
jmp
xor
or
jbe
or
or
out
or
insl
rolb
or
test
aaa
ss
ljmp
fisttpl
pushf
inc
jnp
stos
push
xor
mov
decb
js
sub
push
rcrl
fucomp
xchg
add
mov
jns
lahf
add
fwait
lea
stos
imul
loop
mov
push
lcall
sbb
pusha
mov
mov
push
lea
dec
sub
aaa
or
sub
xchg
jb
insb
movsl
push
arpl
sub
daa
and
das
arpl
dec
or
nop
fsubrl
mov
xor
dec
pushw
xchg
pushf
rorb
icebp
xchg
pop
adc
or
int3
inc
jmp
add
cmp
lods
lds
scas
inc
cmp
in
sbb
stc
mov
or
add
cli
outsl
adc
xchg
lds
mov
sbbb
cmp
insl
arpl
outsb
je
ljmp
add
jp
dec
add
cld
sub
ret
xorb
lds
mov
das
cmpb
fs
xchg
jl
dec
test
add
stos
pushf
lcall
xor
stos
jne
insl
loop
lds
imul
pushf
xchg
sahf
xchg
mov
dec
ss
xchg
cmp
pushf
je
inc
jae
xlat
dec
cld
adc
jmp
jbe
out
rcrb
arpl
dec
jecxz
inc
je
popa
add
popf
mov
inc
scas
cmpsl
pop
icebp
lret
insl
cmc
jg
insb
outsl
scas
xchg
fbld
fdivrs
xor
fisttpl
out
sahf
insb
scas
shll
jecxz
mov
sub
mov
roll
and
xchg
jmp
pop
cmc
ret
mov
in
pop
cmp
push
xor
sbbl
std
aam
lahf
out
test
mov
mov
gs
fwait
cmpsb
loope
mov
adc
fstps
push
adc
and
cmp
int3
push
or
mov
mov
test
cld
test
xchg
clc
arpl
scas
ja
enter
or
dec
push
mov
adc
and
stos
push
rcl
mov
test
cmp
pop
stos
mov
lcall
daa
xor
lods
jecxz
adcb
adc
jmp
dec
xchg
add
jle
lret
cmp
add
push
sti
jle
idivl
mov
ljmp
jns
jo
outsl
jae
add
add
cld
xlat
nop
sbb
imul
aas
cmp
outsl
mov
sub
inc
outsb
into
adc
stos
sbb
pop
sbb
pop
ret
cmc
lods
jno
stos
pop
xor
lahf
and
xchg
aad
jl
cmp
pop
daa
jnp
into
aaa
mov
xchg
dec
shll
ds
mov
or
mov
jnp
cmpb
int3
dec
xor
sahf
icebp
sub
push
test
sub
out
decb
in
jb
imul
inc
xchg
jecxz
insb
pop
dec
push
cmp
or
xor
dec
mov
inc
idivl
cli
pop
cli
outsb
jl
adc
fs
pop
xchg
push
movsl
inc
dec
sbb
ljmp
pusha
cmp
cmpsb
jmp
mov
sbb
loope
orl
inc
jl
jno
sti
imul
add
iret
popf
mov
insb
cld
mov
dec
push
pushf
push
mov
or
xchg
lods
cmpsl
pop
std
add
inc
or
jg
loop
cmpb
mov
cmp
dec
gs
insl
pop
into
mov
ja
fimuls
mov
dec
mov
cli
jge
loop
mov
dec
cmp
mov
mov
inc
push
lods
mov
adc
xor
test
push
cmp
jbe
lods
or
iret
adc
aaa
bound
ret
insl
push
fbld
cmp
and
scas
add
loop
sub
out
test
jo
aas
mov
das
xchg
mov
popa
mov
pcmpeqw
add
dec
adc
loop
test
lret
dec
xchg
call
int
lea
fldcw
out
ja
push
mov
pop
das
cwtl
mov
repz
leave
mov
sub
pop
inc
in
in
dec
cmp
pop
cmc
in
sub
je
add
add
push
add
ljmp
arpl
inc
scas
jle
mov
adc
pop
jmp
push
xchg
call
sbbl
add
cld
cmpsb
imul
push
jne
stos
lcall
or
pop
mov
push
ret
sbb
sub
inc
cwtl
paddb
push
xlat
cli
add
mov
cld
xor
pop
cmp
es
pop
cwtl
sbbl
xchg
cmpsb
xchg
mov
fisubrl
out
mov
mov
xchg
add
into
xor
adc
popf
jg
pop
outsl
negb
lods
repz
pushf
mov
test
ljmp
pop
cld
adc
cld
es
pusha
int
sarl
jb
jg
or
sub
ret
push
fmul
and
negl
dec
out
sub
imul
mov
inc
insl
mov
cmp
mov
outsl
aam
ret
je
cltd
loop
shll
pop
ret
ljmp
je
paddq
mov
out
xor
inc
lods
jo
pop
jge
sub
pop
aas
and
lods
cltd
add
adc
das
and
mov
mov
mov
mov
cli
pop
ret
push
or
stos
xchg
jb
cmc
testb
scas
lea
sbb
xchg
xlat
fisubrl
xlat
adc
cmp
adc
lods
lea
mov
lret
addl
dec
pop
mov
gs
shll
adc
popl
loopne
fdivrl
pop
iret
sub
jb
aaa
mov
xchg
stos
dec
sub
mov
lock
out
movsb
jo
and
inc
arpl
loop
jne
lock
add
xchg
cli
or
add
dec
mov
or
insb
movsl
add
jp
add
dec
stc
sahf
sbb
sub
scas
or
xchg
idiv
sti
sbb
mov
mov
testb
cltd
xor
or
pop
std
lods
rorl
push
sarb
inc
aas
lret
pop
xchg
sub
jg
dec
lods
cs
push
sbb
sbbl
mov
fdivr
or
push
mov
cwtl
lcall
mov
inc
xchg
and
adc
cmpsb
popf
xchg
mov
mov
pop
pop
scas
adc
mov
pushf
mov
or
repnz
xor
sarb
cmp
mov
jmp
repz
in
xchg
sub
clc
mov
mov
push
adc
inc
and
cmpl
xchg
lea
xchg
add
push
shrb
sbb
cmp
inc
mov
push
pop
jnp
stos
shrl
push
insl
sbb
cwtl
pop
movsb
fwait
adcb
jmp
xor
and
mov
dec
dec
test
mov
test
pop
pop
lds
jp
inc
xor
dec
in
add
push
mov
inc
insb
lret
mov
jno
lcall
inc
xlat
xchg
pop
push
shll
push
push
outsb
mov
xchg
outsl
test
or
cmp
mov
mov
cmp
cs
js
insl
adc
sbbl
popf
dec
addr16
scas
cmp
xchg
cmp
test
adc
insl
push
and
cld
fadds
xor
or
sbb
jb
pop
mov
test
js
or
pushf
mov
stos
insb
sbb
mov
push
negl
in
mov
or
push
outsl
fistps
in
ds
or
scas
vmovsd
xor
mov
dec
ljmp
and
inc
stos
inc
xor
imul
cmpsl
jle
loop
mov
outsb
sub
hlt
aas
mov
pushf
sbb
sbb
push
push
xchg
push
jmp
xchg
add
pop
dec
sbb
and
push
mov
or
lds
xchg
lahf
cmp
xor
test
sub
add
pop
mov
in
cld
jo
sbb
or
add
sahf
mov
sahf
cmp
dec
popf
addr16
mov
mov
and
xchg
jo
sub
setnp
mov
cs
cmp
sbb
ljmp
xchg
sbb
imul
das
mov
lret
push
add
std
push
mov
jb
xor
push
mov
xor
cmp
shrb
notl
test
fimull
stos
fs
neg
mov
push
adc
fwait
test
pop
add
fldenv
add
add
mov
xchg
xor
in
push
mov
sar
xchg
jl
cmp
and
mov
incb
cmp
pop
push
clc
push
stc
xchg
or
sbb
sub
lret
aas
enter
lret
gs
mov
push
add
sub
mov
mov
pop
cmp
or
jne
push
push
and
lret
out
pop
dec
mov
aaa
fisttps
pusha
mov
jne
aad
cmp
mov
hlt
cmp
repz
inc
fstl
scas
movsl
test
jnp
outsl
stos
pushf
inc
cwtl
adc
test
adc
int3
pop
jp
fidivs
ja
test
out
addl
mov
jb
cs
fwait
inc
cmp
imul
mov
mov
lock
mov
roll
and
hlt
jnp
pop
or
stos
ror
xor
fwait
push
jnp
fucomp
outsl
mov
mov
repz
stos
bnd
jg
jl
sbb
pushw
xchg
mov
lds
into
mov
or
loope
fdivrl
jbe
das
imul
adc
test
xor
pop
and
pop
pushf
push
push
adc
inc
out
pusha
pop
in
mov
sbb
pop
cmp
ljmp
or
cmp
jbe
popf
cmp
insb
sbb
adc
xor
push
mov
mov
sbb
in
out
or
mov
dec
fcomi
mov
xchg
subl
xor
ss
out
js
sbbb
xchg
and
je
jne
stos
mov
lahf
imul
test
xchg
shl
push
push
jae
sti
or
out
dec
or
pusha
je
mov
es
mov
mov
mov
ljmp
pushl
push
in
or
xlat
xchg
or
mov
push
lret
jecxz
dec
aaa
ret
inc
std
add
mov
push
sbb
loop
jne
aad
or
push
movsl
sbb
jmp
pusha
pop
lock
xlat
xor
sbb
sub
mov
ret
lret
into
add
adc
and
mov
lods
aad
std
ret
or
enter
dec
sub
dec
mov
data16
adc
mov
pop
mov
add
dec
js
ljmp
iret
loope
pop
shl
xchg
pop
xchg
cwtl
dec
pop
cmpsl
push
xchg
and
dec
lret
movsb
mov
push
push
nop
cmpsb
in
loopne
ds
mov
and
sbb
movsl
or
jmp
sub
jecxz
out
roll
add
hlt
pusha
push
and
mov
aam
xlat
ror
lret
xchg
stc
scas
sbb
xchg
bnd
ljmp
mov
dec
jecxz
push
lods
aaa
cwtl
jmp
sbb
mov
addr16
xchg
add
and
jp,pn
sbb
pop
mov
mov
push
jge
pop
dec
mov
loop
cmc
dec
add
pop
cld
in
cmp
mov
out
sbbl
inc
mov
mov
mov
and
mov
push
xchg
scas
lcall
test
cmp
cmc
hlt
fs
mov
pop
enter
xchg
ja
or
xchg
mov
fiadds
push
or
adc
sbb
sbb
adc
loop
pop
pop
rolw
orl
daa
popf
mov
popa
into
gs
push
xchg
subb
lret
xlat
cwtl
pop
add
gs
xchg
paddusb
sbb
int
icebp
xchg
push
ss
cmc
sub
movsb
xchg
and
sti
in
jae
shl
and
and
dec
mov
pop
xchg
cmp
jg
out
xlat
std
jo
push
imul
sti
out
cli
mov
jns
sbb
dec
das
jno
and
lcall
dec
jbe
std
sbb
pop
pop
push
gs
sub
das
push
jp
ja
rcr
cmp
xchg
sbb
outsb
jne
jne
and
decb
scas
ja
fstpt
mov
pop
call
roll
cmpsb
aad
jno
mov
arpl
sbb
sub
jnp
frstor
dec
cmc
addr16
mov
dec
xor
xchg
movsl
ss
mov
pop
clc
fildll
ret
loopne
out
sub
test
cmpsb
jg
push
sti
adc
std
je
pop
scas
scas
pop
clc
push
or
mov
sub
stc
fs
call
out
mov
stos
mov
lret
sub
pop
dec
and
add
add
jmp
mov
inc
mov
popa
dec
insl
xlat
mov
push
sub
cltd
and
add
and
pusha
scas
pop
fwait
data16
sbb
inc
jle
out
sub
arpl
enter
outsl
add
data16
mov
std
out
scas
jbe
xor
shrb
repz
cmp
cmp
mov
bnd
pushf
mov
xor
rolb
dec
jl
pop
mov
cmpsl
mov
lcall
xchg
pop
push
mov
xor
pop
push
mov
imul
adc
xor
push
push
add
test
mov
es
rolb
pop
adc
in
xchg
push
pop
fs
enter
sub
push
scas
jge
in
movsb
insb
pop
add
push
adc
cmpsl
xchg
arpl
pop
cmpsb
pushf
das
jb
lods
ds
loopne
xor
iret
jb
jnp
ja
test
mov
arpl
or
aad
pop
in
push
paddd
sub
fcoms
fwait
push
add
cmp
jnp
aad
xchg
add
out
adc
loop
cmp
inc
sbb
cmpsl
mov
and
mov
jl
scas
mov
cs
testl
inc
mov
out
cmpsl
outsb
fidivrl
push
jmp
rolb
sbb
xlat
test
sbb
xor
iret
add
adc
sahf
mov
push
mov
or
xchg
cs
add
pop
mov
mov
and
or
mov
jno
pop
sub
cmp
gs
cpuid
adc
nop
sub
xor
in
push
ficompl
mov
push
fwait
imul
mov
push
ljmp
and
popf
xchg
in
bound
lret
shrl
jns
mov
popa
es
test
cltd
iret
push
aas
ds
add
fldenv
dec
jge
mov
inc
adc
dec
mov
mov
dec
lds
add
lea
fdiv
push
mov
int
inc
mov
das
test
shll
pop
loopne
hlt
pushf
inc
lds
int
jge
push
pop
xchg
xchg
daa
ljmp
loope
xchg
push
movsl
add
jg
adc
jns
je
sub
out
pop
js
std
nop
and
orb
mov
fldl
mov
xchg
jb
add
leave
jns
cmp
insl
jno
cli
and
out
cmpsb
inc
in
loopne
pop
add
ljmp
xor
cmp
aad
mov
cld
pusha
jmp
int3
adcl
lret
arpl
xlat
aam
pop
mov
out
cmp
sub
add
xchg
out
dec
je
in
push
arpl
pop
pop
fldl
cmpsb
mov
add
push
aad
in
mov
mov
out
adc
or
out
pop
cmp
loop
divb
fdivl
mov
sub
fdivrl
mov
int
leave
pop
mov
mov
fs
fidivrs
mov
in
adc
jg
loopne
aam
movsl
lret
or
stc
lea
pop
jg
test
sub
sbb
jecxz
jbe
out
fdivr
sarb
mov
lods
nop
aaa
inc
pop
or
lds
mov
sti
adc
or
jg
ret
inc
sub
push
fmull
xchg
jno
or
cld
xchg
xor
iret
fisttpll
insb
xlat
ret
dec
movsb
ljmp
popf
pop
loopne
sarb
mov
lods
pushf
aaa
fldcw
mov
hlt
jge
add
mov
add
loopne
push
adc
dec
xor
int3
fwait
popa
nop
sahf
add
and
lods
jo
add
dec
dec
imul
push
xchg
pop
mov
cmp
out
mov
stc
cltd
and
or
xor
lret
cmp
cmc
lods
jb
scas
or
jg
cmp
incl
daa
je
sub
adc
lds
mov
mov
cmp
es
jmp
mov
add
cli
popa
adc
inc
das
pop
movsl
adc
scas
lods
dec
lods
sbb
ljmp
jo
std
mov
pop
das
vmread
enter
js
mov
ret
jo
cwtl
shlb
inc
fiaddl
loope
inc
shrb
testb
xlat
lods
push
les
adc
fldcw
pop
sub
in
xchg
push
push
jb
lock
xchg
sbb
xor
push
arpl
inc
sbb
sub
clc
xchg
dec
out
addl
push
in
push
fcomi
dec
mov
jnp
mov
jmp
adc
cli
cmpsl
mov
shll
and
mov
sti
cmpsb
adc
repz
mov
xchg
shll
and
cwtl
sbb
add
lret
push
inc
inc
cmp
arpl
xchg
in
mov
inc
aas
adc
jle
xor
cwtl
cmc
stos
or
cmc
push
into
add
and
inc
nopl
test
shrl
adc
lret
mov
sub
cwtl
adc
loop
jmp
test
mov
adc
fbstp
jle
test
out
aam
movsb
push
xchg
sub
aaa
fldpi
fs
xor
pop
push
xchg
cwtl
dec
sti
cmc
mov
insl
pushf
hlt
cmp
or
rolb
out
add
popf
lods
lcall
jg
lret
xor
test
lret
pushf
lea
sbb
cltd
cltd
push
pop
cmpsl
sbb
mov
jl
push
lcall
mov
lds
jg
pop
adc
adc
jl
fisubl
shrl
pop
push
fnstcw
testl
aas
adc
push
repz
jns
mov
fisubs
push
insl
mov
imul
sub
mov
mov
inc
in
xchg
mov
jno
cwtl
sbb
cmp
inc
bound
jecxz
divb
or
adc
scas
jnp
xor
mov
mov
stc
cld
lcall
push
xchg
insl
iret
ret
mov
mov
insb
add
adc
push
dec
cmp
cmc
mov
push
sub
xchg
leave
dec
pmulhw
adc
cmpsl
push
ficoml
jge
fnstcw
jo
xlat
mov
lret
xchg
dec
mov
test
lahf
jne
test
bound
sbb
in
pop
stos
jl
sbb
test
pushf
fucomp
xor
jle
push
clc
pop
add
pop
fistpl
jecxz
adc
or
mov
test
aad
sar
mov
movsb
leave
mov
ljmp
xchg
test
das
jp
jle
mov
stos
aas
icebp
inc
out
loope
jae
mov
cmp
xlat
gs
je
cmp
mov
xlat
push
push
mov
push
mulb
mov
xchg
jnp
add
adc
sub
inc
scas
fisttps
ret
sbb
jb
xchg
loope
aam
adc
nop
push
or
je
addr16
xor
ss
xchg
dec
inc
mov
mov
sbb
rcr
rcll
dec
push
out
jae
and
jbe
or
jne
loope
movsb
sbb
dec
add
pop
pop
sub
enter
sbb
lea
jo
cmp
cli
jbe
pop
mov
pop
repz
jg
xchg
mov
out
jp
fsts
lcall
xchg
sub
adc
mov
cmc
popa
push
adc
sbb
into
loope
mov
data16
sub
dec
imul
jmp
cmp
arpl
jb
sbb
leave
lock
ja
outsb
mov
or
xlat
mov
sub
test
inc
test
pop
xchg
movsb
in
ljmp
outsb
push
xor
cmp
or
sbb
lea
cmpsb
loop
sbb
shrl
cmc
mov
and
into
mov
orl
jns
mov
and
dec
mov
cmp
cmp
shl
jg
mov
ss
mov
push
cmp
pop
xor
aaa
xchg
push
sbb
loopne
mov
addr16
popa
mov
dec
sub
mov
fsts
dec
push
addr16
fwait
arpl
and
adc
push
out
rorl
or
repnz
and
je
lret
jne
adc
mov
cmp
pop
cmp
std
adc
or
mov
pop
out
aad
sub
out
loopne
movsb
xor
and
push
inc
cmp
jge
repz
jns
cld
ljmp
xchg
pop
mov
pushf
out
adc
adc
shr
aas
jmp
xlat
mov
icebp
adc
sahf
stos
xor
nop
sbb
xchg
cmp
lea
test
or
sbb
movl
cwtl
outsb
nop
test
movsl
cmpb
xchg
dec
jbe
icebp
cmp
inc
mov
fstpt
sbb
in
je
and
sbb
cld
fnstsw
aad
loope
mov
mov
imul
leave
repnz
jle
aad
xchg
je
pushf
push
pop
inc
mov
pusha
es
mov
add
or
das
mov
arpl
outsb
jge
dec
push
pop
lret
dec
int
out
daa
lret
pushf
sti
addr16
dec
sbb
sub
xchg
cli
daa
test
cmpsl
popf
push
stos
js
popa
test
cmpsb
lock
jns
push
mov
lods
sarb
test
mov
stc
insl
outsl
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
dec
jnp
push
sti
xor
mov
into
jae
xchg
fidivrs
pushf
sub
mov
sub
adc
imul
or
push
fnstcw
pop
or
movsl
rorl
cltd
call
cmp
and
mov
pop
lds
in
je
out
pop
pop
dec
fwait
das
mov
lods
sti
dec
ljmp
gs
pop
mov
sti
push
cwtl
mov
scas
or
sbb
fldt
jmp
mov
cli
mov
xlat
cli
aas
stc
sub
lock
ja
sbb
es
call
xchg
les
mov
aam
or
gs
xchg
or
cli
inc
sbb
mov
decb
jno
mov
pop
xor
aam
leave
daa
cmpsb
push
out
xlat
sub
popf
push
mov
sub
aad
int3
std
jl
xor
push
fcompl
aaa
xchg
fcmovbe
stos
dec
popf
mov
jl
xor
divl
mov
loop
and
std
cmpb
ret
stos
mov
or
mov
sbb
jns
xchg
nop
sub
inc
xlat
inc
cmp
push
aam
in
popf
adc
ret
cmc
stos
arpl
lret
push
jg
scas
movsb
test
mov
inc
enter
jo
xchg
lods
push
jle
sub
fldcw
add
inc
cmp
push
rolb
ss
sbb
jecxz
nop
cmp
stos
aam
jns
add
pusha
cmp
inc
sbb
ja
dec
aaa
xor
out
aaa
jp
clc
xchg
imull
in
movsl
xchg
mov
push
xor
cs
andb
push
nop
cmpb
cmc
pop
adcl
pop
push
es
andb
jo
push
jg
add
inc
mov
stc
stc
nop
scas
mov
jle
lods
dec
aam
aam
sub
ret
jg
add
add
add
add
or
pop
add
insb
loop
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
scas
mov
add
add
