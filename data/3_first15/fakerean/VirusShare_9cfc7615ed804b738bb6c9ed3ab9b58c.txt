rcrb
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
cmp
je
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
ret
sub
sar
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
mov
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
test
jne
pop
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
mov
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
lea
push
push
push
call
add
movb
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
sub
add
push
push
push
call
add
movb
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
movl
mov
and
cmp
jne
mov
mov
dec
je
dec
je
sub
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
mov
movl
mov
movl
call
mov
lea
push
push
push
push
call
mov
lea
push
push
call
lea
lea
push
push
call
mov
mov
sub
lea
push
push
call
mov
add
lea
push
mov
sub
push
cltd
sub
mov
sar
add
mov
push
push
push
mov
add
push
push
call
mov
push
call
mov
mov
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
je
mov
push
push
push
push
mov
call
shr
and
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
movl
call
mov
lea
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
mov
shr
and
push
dec
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
xor
call
mov
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
mov
call
test
je
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
mov
neg
sbb
mov
and
push
add
add
mov
sub
mov
mov
mov
mov
sub
sub
cltd
sub
lea
sar
add
mov
mov
push
mov
push
push
mov
push
call
mov
inc
call
mov
push
push
push
push
call
cmp
jl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
movl
movl
mov
test
jne
lea
movl
call
jmp
push
mov
mov
mov
and
dec
mov
je
sub
je
sub
jne
test
je
mov
mov
and
cmp
jne
cmpl
jne
and
mov
movl
testb
je
movl
mov
mov
mov
mov
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
movl
testb
je
test
je
push
mov
call
mov
or
mov
jmp
movl
mov
test
je
test
je
mov
mov
mov
mov
mov
push
test
je
mov
cmp
je
cmp
jne
mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rorb
and
add
add
stos
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
pusha
push
call
mov
add
add
icebp
scas
push
jb
movsb
push
mov
in
add
add
add
fcomps
popl
push
mov
add
push
push
push
push
push
lea
push
lea
push
push
call
nop
bound
in
add
fisubs
add
add
ret
lock
mov
test
add
push
mov
add
je
mov
xchg
add
add
xchg
mov
push
add
mov
pop
popl
push
push
call
in
push
arpl
add
xchg
ret
call
jnp
add
add
jecxz
jb
add
out
sahf
add
in
add
add
sub
pop
push
push
push
push
call
cmc
loopne
jl
add
add
add
bound
lods
lea
addl
enter
mov
add
ljmp
push
push
push
call
jne
out
cli
test
adcl
add
add
mov
add
add
jb
stos
scas
xchg
lods
ljmp
lcall
push
push
push
call
popa
jp
rcll
mov
std
test
add
add
popf
testl
mov
xchg
stos
rolb
push
add
sub
pop
push
push
push
push
lea
push
push
lea
push
call
je
flds
add
fadds
add
fmul
xchg
add
jge
cmpsb
add
pop
add
jecxz
add
mov
lret
test
mov
test
add
add
scas
mov
pop
stos
pop
test
call
add
call
push
lea
push
push
push
lea
push
push
push
push
push
push
call
in
add
xchg
mov
add
pop
add
add
fldcw
pop
add
test
jne
add
add
testb
add
cld
add
int
std
pop
fstpt
add
mov
fs
add
add
xchg
mov
scas
mov
add
jmp
push
push
push
push
lea
push
push
push
call
add
nop
pop
out
insb
add
movsb
jns
aam
add
fwait
pop
fiadds
add
add
add
add
ja
shll
scas
add
add
add
mov
add
pop
call
jmp
push
push
push
push
push
push
push
lea
push
push
push
call
test
in
lock
add
mov
fnstcw
jbe
mov
add
mov
sahf
jmp
fadds
add
clc
sahf
jp
call
add
add
add
shlb
add
mov
mov
in
fcomps
mov
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
jo
lds
je
stos
roll
test
add
add
add
fistl
add
fnstenv
mov
xchg
mov
add
push
add
jb
add
mov
mov
xchg
cwtl
mov
jo
mov
in
cli
sub
pop
mov
add
push
push
push
push
push
push
call
stos
fcoml
mov
rolb
movsl
je
xchg
add
mov
ficoms
mov
add
push
add
loop
add
add
fwait
mov
popf
add
les
lods
add
add
lcall
mov
mov
xchg
bnd
sbb
lcall
call
add
push
lea
push
lea
push
lea
push
push
call
cld
into
mov
add
test
lea
popa
add
push
add
mov
iret
out
jecxz
scas
hlt
int
xchg
mov
xchg
int3
add
sbbl
in
in
pop
add
push
push
push
call
mov
mov
leave
lret
out
add
add
into
out
pop
mov
add
add
add
insb
add
add
scas
push
mov
pop
arpl
sub
pop
mov
xor
push
push
inc
push
push
pop
add
lea
sub
dec
ror
pop
sub
shl
dec
pop
push
push
push
push
push
call
lods
fsubrs
popl
test
test
add
pop
insb
pushf
pop
add
push
mov
jl
add
jecxz
add
movsb
push
mov
jecxz
jge
testb
add
cmpsl
cli
add
in
in
lcall
jne
call
push
push
push
push
lea
push
push
push
push
push
call
push
xchg
shrb
mov
int
fs
cmpsb
add
aad
cmp
add
jle
add
push
fnsetpm(287
pop
mov
push
add
xchg
in
fcompl
inc
lock
push
push
push
push
push
push
push
call
outsl
jmp
cwtl
je
mov
add
cmpsl
add
movsb
add
mov
add
push
add
add
scas
add
jl
mov
loope
add
enter
sahf
add
xlat
jl
add
add
mov
xlat
push
mov
sub
pop
movl
push
push
lea
push
push
call
nop
add
mov
enter
aam
add
add
add
mov
lret
add
fcompl
imul
cld
add
mov
fdivrp
fiaddl
mov
xchg
add
add
add
add
inc
call
repnz
add
out
mov
clc
mov
xchg
xlat
mov
testb
add
jge
popa
mov
fcmovnbe
add
add
add
mov
push
add
mov
cmc
sub
pop
push
push
push
lea
push
call
add
add
add
mov
mov
movsb
jl
mov
jle
mov
stos
cwtl
jne
std
mov
scas
popa
add
test
add
add
mov
add
cmpsl
pop
test
lcall
jne
pushl
push
lea
push
push
push
call
add
mov
jae
xchg
mov
mov
lahf
mov
add
add
popf
call
bound
add
pop
popa
popf
xchg
cmpsb
add
mov
out
add
add
test
call
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
push
mov
add
addr16
pop
jbe
add
add
xchg
icebp
loop
lods
pop
shrb
shrl
jae
clc
int
add
mov
movl
repnz
add
mov
imul
pushl
pushl
push
push
push
push
push
push
push
push
lea
push
call
addl
faddl
pop
test
add
rorl
rclb
add
lret
add
pop
jno
iret
add
out
add
xchg
add
lret
push
add
lcall
cmp
add
xor
ret
bound
leave
add
add
inc
sub
pop
sub
pop
push
push
push
call
jle
mov
pop
rol
add
add
lcall
scas
mov
stos
int
out
lret
add
push
movb
xchg
lcall
jne
push
push
lea
push
lea
push
push
lea
push
push
call
outsl
add
xchg
mov
jmp
add
push
push
test
out
rol
xchg
mov
add
sti
roll
add
add
add
sub
pop
call
push
push
push
push
call
ljmp
subl
add
mov
iret
out
add
rolb
add
add
roll
loop
pop
scas
clc
jno
add
mov
mov
rclb
add
jno
mov
add
ficoml
in
lock
push
push
push
shl
rol
sub
push
push
pop
add
xor
sub
dec
pop
rol
dec
shl
rol
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
fdivr
mov
sti
roll
test
fldl
out
mov
xchg
jbe
ja
xchg
add
add
js
mov
jb
div
xchg
xchg
push
test
push
mov
pusha
out
add
cmpsb
add
add
xchg
add
shrb
fisubrl
mov
in
fdivr
lcall
push
lea
push
push
lea
push
push
push
push
call
in
add
lods
pop
add
add
add
add
add
test
out
mov
pop
imul
add
xlat
pusha
add
in
add
outsl
in
add
imul
in
lcall
add
rclb
popa
int3
test
add
repnz
aad
add
add
mov
test
rolb
addr16
add
fwait
or
cwtl
cli
data16
mov
push
pop
jmp
jnp
pop
add
add
push
add
jno
push
pop
lods
je
xchg
test
clc
lcall
clc
push
push
push
push
push
lea
push
call
cwtl
push
les
fwait
jb
add
repnz
pop
jmp
cltd
pushf
xchg
cmpsb
fmul
add
jmp
xchg
add
push
push
jno
mov
pop
rorb
add
add
add
stos
add
repnz
add
shl
add
mov
lcall
push
push
push
push
push
push
push
push
call
add
stos
mov
mov
add
jne
pop
mov
imul
mov
jb
jle
xchg
jnp
stos
scas
add
lcall
jmp
in
add
in
xchg
arpl
pop
aad
int3
xchg
xchg
ror
add
shrb
sub
pop
push
push
push
push
push
lea
push
push
call
add
into
add
pusha
outsl
out
add
icebp
icebp
xchg
add
flds
add
addb
add
aad
add
add
sub
pop
mov
push
push
lea
push
push
call
test
mov
add
add
mov
shrl
add
lods
pop
add
mov
add
mov
lcall
pop
in
push
lea
push
push
push
call
add
add
fwait
add
add
fsubr
add
lods
in
in
mov
cmpsl
stc
int3
add
call
fsub
sti
ret
add
add
add
popa
fwait
mov
test
ja
fs
add
sti
add
add
add
push
push
lea
push
push
push
push
push
lea
push
push
call
add
cmpb
add
jae
mov
push
jo
add
les
add
iret
lahf
mov
filds
mov
pop
imul
pop
scas
mov
add
add
add
fldl
add
add
add
flds
mov
add
sub
pop
add
push
push
push
push
push
push
push
push
call
call
push
add
rolb
add
int3
add
add
add
mov
jae
xchg
add
out
push
out
add
in
add
cmpsl
mov
add
add
fadds
xor
adc
mov
push
push
push
call
cltd
mov
add
incb
mov
add
stc
add
add
ja
jno
add
mov
mov
mov
push
pop
nop
loope
fldcw
in
lock
add
push
push
push
push
push
lea
push
push
push
push
call
stos
shl
fcmovu
addl
aam
std
mov
testl
add
filds
js
add
testb
xchg
jns
add
popa
pop
out
add
mov
jge
add
lock
add
add
in
fdivr
lcall
mov
push
push
push
push
push
push
call
xchg
add
add
cli
mov
mov
mov
xchg
lods
movsl
add
mov
add
add
leave
add
add
out
xchg
add
rolb
mov
roll
fs
mov
rcrl
jmp
add
add
xchg
add
add
movb
add
in
lcall
add
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
push
add
test
jo
pop
fistpll
add
add
add
add
jns
add
rcll
loope
lahf
data16
mov
cmc
add
add
add
les
add
push
push
push
push
push
push
push
call
roll
add
mov
push
xchg
leave
add
jmp
pushf
mov
mov
movsl
add
lock
xchg
shlb
add
mov
jmp
add
jnp
loopne
scas
int3
push
add
mov
add
enter
lcall
lock
lea
push
push
push
push
lea
push
push
push
lea
push
call
jae
fstps
les
repnz
iret
insb
add
fldl
add
iret
popf
mov
cli
add
mov
push
push
enter
mov
insb
add
add
add
negl
add
mov
xchg
add
out
add
add
add
js
in
fdivr
lcall
push
push
lea
push
push
push
push
push
push
call
mov
mov
add
jge
add
arpl
pop
loopne
mov
stos
hlt
add
xchg
push
add
pop
add
add
add
push
add
add
push
xchg
lods
add
mov
jae
in
loopne
lcall
dec
add
xor
adc
lea
push
push
lea
push
push
call
aad
lcall
pop
add
fprem
icebp
rcrb
jnp
add
rolb
scas
addb
add
pop
add
jle
mov
insb
jl
loopne
add
jp
mov
add
push
fildl
pop
cld
add
jecxz
movl
pop
loop
add
in
call
push
push
push
push
push
push
call
leave
add
jo
add
in
add
add
xchg
add
lds
pop
filds
addr16
mov
popf
push
mulb
add
in
add
xchg
add
add
jae
xchg
mov
mov
add
pop
add
sub
pop
add
push
lea
push
call
add
imul
push
aad
test
add
jge
xchg
out
add
add
push
add
pop
pop
add
enter
mov
mov
clc
lcall
push
push
lea
push
push
call
add
ljmp
add
mov
add
scas
add
add
cwtl
add
add
add
add
add
add
mov
sub
pop
mov
xor
push
lea
push
push
push
push
push
push
push
call
add
imul
add
add
sti
adcb
push
mov
data16
add
add
outsl
in
add
fildl
add
add
enter
bound
call
mov
add
mov
pusha
jmp
add
add
cli
jo
iret
scas
popf
add
add
shll
pop
mov
lods
add
imul
jb
mov
xchg
clc
mov
add
cmpsl
add
jle
leave
cltd
sub
pop
rep
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
mov
push
in
jb
mov
pop
iret
loopne
lock
fiadds
icebp
rolb
add
add
xchg
add
enter
fwait
add
ret
movl
add
lods
add
aam
push
mov
movsl
mov
loop
sub
pop
mov
push
lea
push
call
test
add
call
add
jb
add
add
pop
add
jle
jmp
pushf
pop
xchg
jbe
add
push
scas
gs
call
push
popf
xchg
xor
je
fdivp
lahf
into
rcrl
add
mov
cwtl
popa
andl
push
sub
pop
add
push
lea
push
lea
push
call
jp
add
add
add
mov
in
out
flds
jnp
mov
fwait
in
add
xchg
add
mov
mov
sub
pop
add
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
loopne
add
add
push
jae
stc
add
add
fiaddl
add
mov
add
add
push
jno
mov
cltd
add
jmp
cwtl
push
ljmp
add
aad
roll
add
loope
sub
pop
add
mov
push
push
push
push
lea
push
lea
push
push
push
call
scas
rolb
mov
add
mov
add
std
cmc
mov
movsb
mov
stc
mov
xlat
jb
in
int3
gs
out
add
sti
xchg
add
fcoms
add
data16
lods
xchg
add
ret
push
mov
mov
cwtl
idiv
cmpsl
push
add
in
in
xor
push
push
push
push
lea
push
push
push
push
call
add
lcall
mov
add
add
add
mov
add
add
jmp
jecxz
add
cmpb
data16
mov
je
cmpl
int
add
loop
mov
icebp
js
mov
xchg
add
mov
mov
mov
lcall
les
add
push
push
push
call
hlt
test
add
add
mov
bound
add
imul
pusha
add
mov
movl
movsl
add
fidivrs
add
movb
add
add
xchg
add
repnz
xorl
pop
pop
jl
add
je
add
sub
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
xchg
add
popa
add
scas
out
ficoml
add
shll
lods
cli
mov
mov
add
cld
loopne
mov
jge
in
addl
mov
add
push
rcr
xchg
ret
mov
mov
add
lea
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
cltd
add
jp
cltd
iret
out
add
sar
add
sarb
pop
out
test
mov
cmc
lret
fcompl
or
push
lea
push
push
push
push
push
call
mul
imul
add
test
sahf
cld
push
sarb
add
fdivr
pusha
repnz
lret
scas
add
outsl
sub
pop
add
push
push
push
lea
push
call
add
jle
add
pop
imul
pop
add
add
fiadds
insb
mov
scas
pop
mov
test
cltd
out
xchg
fdivrp
mov
in
lock
add
push
push
push
call
add
mov
roll
test
mov
add
lods
mov
add
lds
add
scas
cwtl
add
jge
bound
mov
add
rolb
add
add
add
mov
in
hlt
lcall
rcll
mov
push
push
sub
dec
push
sub
add
dec
sub
add
lea
pop
sub
pop
push
sub
pop
pushl
push
push
push
call
mov
jo
add
pop
addb
popl
add
in
repnz
cmpsl
add
mov
add
add
push
test
push
sub
pop
call
push
push
lea
push
push
push
push
call
add
jo
mov
loopne
add
add
icebp
ror
add
imul
add
add
roll
add
jmp
add
in
add
add
lock
mov
add
movb
add
addr16
aam
add
add
addb
sub
pop
push
push
push
add
add
lea
push
push
pop
add
sub
sub
sub
lea
ror
pop
shl
sub
shr
pop
push
push
call
add
insb
add
data16
gs
mov
xchg
cli
add
mov
cli
add
xchg
add
fldenv
add
push
add
not
xor
sub
pop
push
push
shl
add
pop
call
push
shr
pop
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
roll
pop
roll
mov
mov
mov
push
add
push
loope
add
add
int3
jp
add
pop
push
push
push
push
call
loop
add
mov
icebp
push
push
call
int
mulb
add
jp
arpl
loope
addb
arpl
add
add
add
mov
push
add
sub
add
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
jb
fstpt
mov
add
sahf
popa
pusha
jle
add
add
imul
add
hlt
add
add
pop
stos
add
mov
xlat
add
imul
add
fcomps
add
fildl
lcall
ret
add
add
add
push
sub
shl
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
jns
add
filds
add
jb
std
data16
add
mov
mov
imulb
mov
jb
in
fdivr
lcall
xor
push
push
lea
push
lea
push
push
push
push
call
add
add
out
fisubrl
jmp
add
pushf
movl
add
in
mov
pusha
mov
mov
in
mov
add
test
mov
mov
lcall
les
lea
push
push
push
lea
push
push
push
call
repnz
int
xchg
add
add
xchg
add
leave
fsts
add
hlt
mov
add
clc
cltd
movsb
add
cmpsb
add
pop
test
bnd
add
add
jno
add
mov
out
add
mov
out
sub
pop
add
push
push
not
dec
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
pusha
add
xchg
xchg
pop
mov
pop
jl
into
les
add
xlat
ret
fadds
int
pop
add
add
clc
add
jb
fcmovne
test
loopne
xchg
add
mov
add
int3
add
mov
mov
flds
add
lcall
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
jmp
lret
ja
add
lahf
add
add
roll
fsubl
int
add
push
add
add
push
aam
lock
add
add
add
shlb
add
stc
sub
pop
add
push
push
push
push
call
add
jl
add
loop
pop
rcrl
add
jo
add
mov
add
add
add
idivl
add
add
je
in
lock
lcall
lock
shr
pop
pop
mov
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
movsl
push
sahf
les
add
leave
add
add
add
add
ljmp
mov
add
repnz
data16
icebp
add
add
push
mov
rcrl
iret
rolb
arpl
stc
add
add
add
add
mov
icebp
sub
pop
rep
mov
xor
push
ror
add
rol
pop
or
je
push
push
push
push
push
call
push
pop
add
add
int
pop
in
pop
lcall
xchg
add
mov
out
add
add
lret
stc
xchg
add
sahf
lds
add
shrl
add
add
push
push
loop
add
lds
jecxz
rcrb
popf
xlat
add
in
lcall
xor
jno
adc
adc
arpl
out
push
lea
push
lea
push
call
mov
add
out
xchg
fiadds
sbbl
add
movsb
imul
add
test
pop
add
fmull
sti
add
in
call
xor
push
push
lea
push
call
xchg
enter
add
add
add
test
add
js
push
add
jbe
xchg
add
jno
shll
fs
mov
lcall
les
add
push
add
not
pop
mov
xor
push
sub
sub
add
inc
pop
add
add
push
push
push
push
lea
push
push
push
push
push
call
pop
fimuls
mov
mov
xchg
sub
std
mov
repnz
push
push
rcrb
mov
add
add
negb
add
into
push
loopne
shrb
gs
add
in
jmp
pushf
jbe
mov
in
fcompl
push
push
lea
push
lea
push
push
push
push
call
xchg
loope
mov
cltd
arpl
add
add
fwait
add
lock
jl
add
pop
loopne
mov
in
je
ret
pop
add
pop
fiadds
imul
pop
jnp
icebp
imul
push
insb
push
add
add
std
sub
pop
mov
xor
push
rol
rol
ror
lea
pop
add
push
not
shl
shl
pop
pop
rep
push
push
lea
push
push
call
outsl
add
stos
add
add
mov
mov
add
add
mov
imul
pop
or
fldl
add
mov
sub
pop
mov
push
push
lea
push
push
lea
push
call
pushf
add
add
mov
test
test
out
add
in
ljmp
push
jl
std
scas
je
add
add
lock
add
push
add
cmc
mov
test
mov
add
lret
add
pop
in
addb
mov
les
xor
pop
xor
push
push
lea
push
push
push
push
lea
push
push
call
popf
xchg
ljmp
mov
add
push
mov
in
xchg
add
add
iret
fbld
imul
cli
addb
rolb
xchg
add
sahf
insb
arpl
mov
je
hlt
mov
pushf
mov
idivb
mull
jns
add
into
add
fnsave
add
push
push
push
lea
push
push
push
push
call
add
xchg
pusha
in
add
add
mov
sti
add
xchg
add
cmc
outsl
add
int3
ja
leave
imul
je
add
leave
je
push
inc
shr
pop
mov
push
sub
pop
add
push
lea
push
call
add
add
sarl
lcall
add
add
in
hlt
out
pop
test
add
into
add
xchg
add
mov
lock
add
add
add
add
xchg
sub
pop
add
rep
push
push
push
push
call
add
test
push
fiaddl
popf
lock
add
jb
add
int3
je
flds
in
movsl
std
bound
push
add
stos
addr16
fwait
xchg
jbe
add
pop
push
push
not
lea
xor
not
push
or
not
add
xor
add
xor
sub
dec
add
inc
pop
not
pop
push
not
sub
inc
pop
pop
mov
push
pop
mov
mov
push
sub
lea
xor
dec
pop
jmp
push
push
push
lea
push
lea
push
call
add
add
add
add
hlt
pop
add
jmp
pop
mov
add
jecxz
push
add
add
popl
mov
sub
pop
push
mov
push
sub
inc
shr
pop
add
push
xor
pop
push
push
rol
rol
inc
add
pop
push
push
push
push
push
push
push
lea
push
call
add
mov
add
add
lahf
lods
sahf
add
add
mov
jne
lahf
fadds
repnz
add
in
in
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
gs
add
lahf
cli
add
test
mov
add
push
clc
test
add
ljmp
lock
pop
pop
add
add
pop
mov
add
jp
mov
mov
lods
pop
jl
out
test
add
lcall
push
push
call
push
mov
add
cmpsb
pop
mov
pop
add
add
add
pop
add
push
fstps
cld
add
add
in
mov
mov
popa
shr
enter
lret
outsl
mov
add
sub
pop
mov
push
inc
ror
pop
pop
push
push
push
push
push
lea
push
call
lcall
stos
lcall
add
sub
add
mov
insb
je
cmpsb
scas
rclb
add
add
addl
add
add
add
add
jo
add
gs
add
jl
into
add
lcall
push
add
add
xor
pop
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
add
in
xchg
pop
mov
out
add
fdivrl
push
push
scas
add
mov
test
add
iret
add
pop
add
add
add
push
testb
or
push
shl
add
sub
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
pushf
ljmp
fldl
jge
pushf
add
loope
add
enter
mov
add
in
add
mov
lock
out
gs
add
sub
pop
mov
push
add
dec
sub
pop
add
push
shr
add
pop
push
push
dec
inc
pop
push
push
push
lea
push
call
mov
add
add
add
out
pop
mov
mov
jle
add
insb
stc
add
add
fidivrs
hlt
lcall
push
push
push
push
push
call
add
jecxz
shr
ja
mov
add
jno
add
loop
add
ljmp
mov
add
sub
pop
push
push
shl
shl
dec
add
pop
movl
push
push
push
push
call
hlt
mov
add
add
pop
pop
out
add
pop
imul
mov
sti
add
mov
add
arpl
mov
movsb
push
add
pop
add
test
cli
add
add
sti
xchg
shrb
add
roll
data16
ja
mov
je
add
int3
add
lcall
inc
clc
call
shr
dec
pop
test
je
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
out
xchg
add
lock
add
add
add
loop
add
call
lcall
std
flds
mov
mov
iret
mov
add
add
jb
add
add
bound
add
jno
add
jae
add
add
add
add
iret
je
std
movsb
push
sub
pop
mov
pop
push
inc
shr
sub
pop
pop
push
shr
xor
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
add
add
and
jae
fldl
data16
cld
out
add
add
add
mov
lcall
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
test
jbe
add
pop
add
add
push
add
add
add
pop
cmpsb
jge
filds
add
outsl
add
mov
xchg
push
scas
test
jmp
mov
add
pop
out
mov
fcomps
push
push
push
push
lea
push
push
push
call
rolb
add
out
fiadds
xlat
mov
add
int
faddp
insb
add
movsb
mov
jae
add
xchg
add
mov
add
in
ret
push
xor
add
pop
push
push
rol
shl
pop
mov
push
add
sub
pop
add
push
push
push
push
push
call
push
push
add
add
orl
add
les
test
add
push
add
mov
add
jno
int3
xchg
add
loopne
add
mov
lahf
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
in
jne
fadds
xchg
mov
mov
add
add
add
mov
add
jo
imul
add
js
push
test
test
int
add
add
stos
xlat
add
mov
add
in
call
lcall
push
push
lea
push
push
lea
push
push
call
stos
jb
movl
add
lock
add
add
jge
add
shlb
add
add
push
scas
add
add
add
jp
xchg
xchg
jp
add
jns
out
fidivrl
add
cwtl
jle
insb
add
mov
add
cwtl
add
mov
and
sti
rolb
pop
push
testl
push
push
lea
push
push
lea
push
lea
push
call
add
add
mov
test
test
push
add
incb
add
fadds
add
filds
loope
add
roll
out
shlb
pop
push
add
cwtl
add
icebp
sti
jmp
jno
add
addl
push
push
lea
push
push
lea
push
push
push
push
call
push
mov
test
sahf
mov
xchg
iret
call
xchg
arpl
push
mov
movsl
jnp
fildl
mov
ret
je
add
add
add
enter
add
add
scas
push
call
test
add
ljmp
in
shr
add
add
test
mov
jle
sbb
in
hlt
pop
call
push
shr
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
mov
add
in
xchg
out
test
mov
mov
add
fists
stc
add
jp
iret
cmpsb
mov
call
add
roll
add
mov
lcall
add
insb
add
js
pushf
sub
pop
pushl
push
lea
push
push
call
arpl
add
add
push
add
aad
addr16
fistpll
add
testl
add
mov
mov
addb
in
hlt
lcall
call
cld
add
xor
pop
push
call
push
lea
push
lea
push
call
jmp
add
mov
add
addl
add
andb
add
push
mov
in
mov
cld
jno
add
imul
jp
add
in
sub
pop
cmpl
jne
pop
push
push
push
push
push
push
push
push
push
call
popa
jne
add
mov
add
fiaddl
jo
add
add
add
add
pushf
hlt
stos
add
insb
lcall
push
popf
jae
add
test
gs
push
fcoml
lret
in
add
push
int3
fsubr
pop
mov
push
lods
add
cmpsb
jge
fidivl
add
add
sub
pop
pop
push
add
pop
pop
pop
push
dec
pop
leave
push
push
push
push
push
push
push
lea
push
lea
push
push
call
aam
pusha
add
add
push
push
add
mov
add
mov
clc
add
xchg
add
pop
add
mov
add
stos
jmp
lods
add
leave
jl
add
in
mov
mov
pop
ret
push
lea
pop
push
push
push
push
push
push
push
call
imul
gs
add
pop
xchg
mov
add
roll
testb
add
mov
mov
xchg
xchg
icebp
lret
add
stos
fs
lret
lods
mov
fiaddl
add
lret
out
call
add
sub
pop
mov
push
sub
dec
shl
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
ret
push
add
js
add
add
into
add
add
add
push
xchg
lock
add
arpl
cmpsb
add
mov
jno
add
push
add
sub
pop
push
push
sub
dec
shl
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
rol
stc
add
stc
addl
lods
lcall
add
add
mov
jecxz
cwtl
jl
insb
roll
leave
add
icebp
add
roll
pop
add
mulb
in
xchg
add
pop
test
add
sub
pop
push
push
sub
add
pop
movl
push
push
push
push
lea
push
push
push
call
pop
in
add
jle
rolb
push
int3
fbstp
js
in
push
mov
cld
mov
push
mov
add
pop
xchg
cmpsl
add
add
add
xchg
mov
pop
cltd
cmc
add
xchg
out
mov
in
add
xchg
add
fcomps
sti
icebp
arpl
sub
pop
push
call
push
ror
pop
push
push
push
push
push
push
call
add
pop
lret
add
add
jl
test
mov
add
add
cmc
js
add
mov
push
add
incb
jnp
xchg
add
addl
loopne
popl
add
add
add
loop
add
cmpsl
add
add
add
add
insb
sub
pop
call
subl
push
sub
pop
cmpl
jne
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
add
hlt
rolb
add
add
add
add
cmpl
ret
add
add
in
fwait
out
addr16
pusha
out
add
push
pop
mov
vxorps
add
lcall
jecxz
xchg
add
push
not
shr
pop
pop
push
push
push
push
push
lea
push
push
call
add
add
xchg
mov
bound
stos
add
add
mov
lods
fwait
test
mov
out
push
into
lcall
clc
add
addr16
fiaddl
add
negb
int
push
add
fildl
mov
pop
push
shl
rol
pop
leave
ret
push
lea
push
push
push
lea
push
push
lea
push
call
cmc
ficomps
pop
add
mov
test
add
add
pushf
popf
mov
ret
pop
in
scas
ljmp
into
mov
lods
mov
in
in
push
push
lea
push
push
push
push
call
add
addb
xor
loope
add
insb
cmpsb
out
add
fnstcw
add
add
int3
divl
rolb
pop
add
add
leave
fwait
jno
jle
sub
pop
mov
push
push
push
lea
push
push
push
push
call
cmpl
add
add
add
add
lahf
addb
add
cld
imul
mov
out
mov
fwait
mov
add
js
add
enter
in
add
add
add
cmpsb
jp
pusha
add
lcall
cld
push
push
sub
pop
push
push
ror
pop
push
push
push
dec
lea
pop
mov
push
shr
ror
rol
dec
pop
lea
push
rol
shr
rol
pop
sub
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
lret
add
pop
add
xchg
add
int3
push
pop
jl
add
out
aad
jns
cltd
push
mov
jecxz
gs
push
add
add
push
add
rorl
mov
loope
add
add
add
jge
add
add
lcall
add
call
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
mov
popf
mov
imul
add
fwait
lcall
add
sti
add
add
mov
loopne
add
lea
in
mov
bound
add
not
add
arpl
push
add
add
lcall
inc
cld
push
not
ror
dec
pop
mov
push
not
pop
add
add
push
dec
pop
mov
mov
push
lea
xor
xor
pop
cmp
jne
push
inc
ror
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
in
scas
icebp
fisubs
scas
push
add
add
pop
mov
sti
add
add
stc
mov
addb
add
xchg
add
add
iret
jbe
les
add
add
cli
out
add
add
cwtl
imul
jecxz
add
mov
in
iret
fsts
fcomps
inc
adc
out
es
shl
pop
movl
jmp
push
xor
pop
mov
mov
push
pop
sub
jne
mov
push
shr
pop
movl
push
push
lea
push
push
push
call
jae
add
mov
pop
add
add
fbstp
add
add
add
xchg
sub
pop
jmp
push
shl
xor
pop
mov
push
push
push
push
call
add
add
add
add
mov
jge
add
add
add
add
add
jb
add
jmp
add
clc
mov
add
jno
in
lock
lcall
nop
mov
add
push
lea
push
push
push
call
xchg
leave
mov
mov
fildl
add
sahf
add
repnz
fiadds
arpl
add
shll
in
add
cmc
add
cli
add
test
add
add
jle
dec
pop
mov
push
push
lea
push
push
lea
push
call
pop
add
pop
jecxz
nop
cltd
incb
into
add
scas
add
add
add
mov
add
jns
scas
std
stc
add
cwtl
addl
add
add
gs
jecxz
add
sub
pop
movl
push
push
push
lea
push
push
push
push
push
push
call
rolb
rolb
int3
mov
xchg
add
push
add
popf
add
iret
out
mull
lods
add
jne
jae
int
fwait
imul
popf
cwtl
pop
lds
add
push
arpl
movsl
aam
nop
add
iret
add
insb
xchg
add
add
testb
add
push
loope
add
imul
lcall
mov
inc
cld
push
lea
push
lea
push
push
push
lea
push
push
push
call
jae
add
add
cwtl
add
icebp
add
lret
xlat
add
add
xchg
lods
clc
mov
add
mov
add
add
add
xchg
ret
loopne
cmpw
jne
push
sub
pop
mov
movl
push
lea
push
push
lea
push
push
call
testl
je
icebp
xchg
mov
add
add
mov
js
add
mov
add
into
mov
mov
add
jle
in
add
int
scas
mov
add
add
add
rorl
add
pushl
push
shr
ror
pop
pop
mov
push
ror
dec
not
add
pop
mov
push
lea
push
call
add
cwtl
add
test
nop
popf
add
add
add
mov
lds
imul
cmc
scas
stc
jnp
add
jge
add
gs
mov
add
add
push
or
or
shr
sub
push
or
inc
add
sub
sub
shr
xor
not
sub
pop
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
push
pop
add
into
push
cld
test
ror
pop
add
xchg
stos
movl
popf
mov
test
jecxz
lods
jmp
add
jns
mov
sub
pop
push
call
push
add
shl
pop
cmpl
je
push
push
push
push
pop
add
xor
xor
ror
lea
sub
sub
pop
add
pop
push
inc
add
shl
rol
pop
push
push
push
lea
push
call
lret
add
in
popa
addl
add
jo
scas
or
jae
call
mov
jbe
roll
gs
mov
mov
add
std
pop
fadds
out
pop
jge
mov
push
leave
add
push
ret
cmc
add
mov
sar
add
jo
sub
pop
call
cmpl
je
push
push
lea
sub
push
sub
add
add
lea
sub
sub
pop
inc
ror
lea
lea
pop
push
xor
add
pop
push
call
push
add
pop
cmpl
je
push
push
sub
sub
ror
lea
push
or
inc
add
shl
sub
inc
pop
add
add
not
pop
push
lea
pop
push
call
push
not
lea
pop
cmpl
je
push
push
add
sub
sub
push
and
add
sub
sub
sub
ror
dec
pop
inc
pop
push
lea
push
push
push
call
add
mov
in
xchg
int
lods
push
stos
add
add
add
mov
add
mov
jge
in
sub
pop
push
call
push
xor
pop
cmpl
je
push
push
inc
not
not
xor
push
sub
add
lea
add
sub
lea
not
sub
pop
xor
dec
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
add
add
add
icebp
pop
nop
add
mov
add
push
ficomps
add
add
add
add
clc
int3
jmp
add
gs
imul
add
lcall
push
push
push
push
call
ret
push
outsl
add
add
data16
pushf
out
subl
mov
je
cli
add
roll
add
lock
lcall
jno
add
cmpl
je
push
push
sub
push
or
not
add
add
add
sub
inc
lea
add
shl
pop
shr
pop
push
not
shr
pop
push
call
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
pop
xlat
add
add
loope
xchg
mov
jae
push
add
xchg
mov
aam
push
roll
hlt
mov
add
add
fucom
pop
xchg
add
add
push
mov
add
mov
fcomps
cmp
or
int3
je
push
push
xor
not
lea
ror
push
or
not
add
dec
sub
add
rol
pop
inc
ror
pop
push
add
pop
push
push
shl
inc
xor
pop
call
push
sub
pop
cmpl
je
push
push
inc
rol
push
or
not
add
shr
rol
lea
sub
sub
add
not
sub
shr
pop
add
pop
push
push
lea
push
push
push
call
add
scas
cmpsl
add
enter
add
in
mov
add
arpl
cli
imul
add
pop
hlt
addl
add
jmp
hlt
lahf
cmc
into
jl
nop
jb
add
lcall
call
push
push
push
push
push
push
push
call
add
lods
add
add
add
movsl
out
sahf
add
add
enter
xchg
xlat
add
add
mov
jbe
jmp
lcall
jbe
fldl
pushf
sub
pop
cmpl
je
push
push
inc
push
sub
add
sub
lea
inc
sub
add
lea
inc
ror
pop
inc
not
lea
ror
pop
push
add
pop
push
call
push
push
push
call
add
fiadds
loope
fiadds
add
aam
testl
popa
outsl
push
cltd
test
add
icebp
fildl
pop
add
cli
popf
add
sti
xchg
jb
test
int
add
pop
cmpl
je
push
push
add
inc
rol
push
push
pop
add
shr
sub
sub
sub
rol
add
pop
dec
pop
push
lea
push
lea
push
lea
push
push
call
stos
out
nop
test
add
in
xchg
mov
cmc
add
nop
add
pop
add
mov
add
xchg
in
add
push
fmulp
add
push
jo
call
add
add
sub
pop
push
push
lea
ror
sub
pop
call
push
xor
dec
pop
cmpl
je
push
push
shl
add
push
or
inc
add
shr
inc
not
sub
sub
pop
shl
pop
push
dec
pop
push
push
sub
pop
call
push
push
push
lea
push
lea
push
call
add
add
add
mov
add
add
push
subb
add
cmpsb
faddl
in
add
xchg
add
add
shlb
mov
add
pushf
xlat
add
fnstenv
nop
add
push
roll
add
frstor
add
add
sub
pop
cmpl
je
push
push
sub
not
push
and
add
add
sub
sub
shl
ror
inc
pop
lea
pop
push
push
push
lea
push
call
pop
cwtl
add
add
mov
in
lcall
leave
pop
mov
in
aam
mov
cmpsb
out
mov
push
jne
add
popa
lock
pushfw
rolb
sub
pop
push
call
push
push
call
add
pop
fcomp
lret
mov
add
mov
addr16
out
add
add
xchg
add
add
mov
stos
pop
aam
mov
fwait
mov
add
scas
fs
add
ja
ret
add
ficomps
add
pop
cmpl
jne
mov
push
push
push
push
push
lea
push
lea
push
push
call
push
iret
fcomps
faddl
add
movb
jmp
add
add
jnp
add
mov
add
adc
add
jnp
jge
xchg
mov
mov
xchg
jl
jmp
add
lahf
cmc
shl
in
adcl
jnp
out
sub
pop
movl
push
lea
push
call
mov
in
add
int
mov
loopne
add
testl
pop
add
lods
mov
pop
add
add
xchg
rolb
add
mov
ret
xchg
out
movsl
add
cltd
mov
xchg
ficoms
pop
jmp
push
add
ror
pop
xor
pop
push
shl
pop
pop
push
shl
shl
pop
pop
pop
push
lea
push
push
push
lea
push
push
call
js
lods
loop
add
out
mov
jns
cmpsb
scas
add
loopne
sar
mov
add
add
lret
jge
add
add
xorl
pop
add
fiadds
add
cli
in
repnz
pop
leave
push
push
push
call
add
lock
mov
add
add
mov
bound
mov
je
mov
stos
jl
add
mov
popa
cli
fwait
cmpb
fwait
imul
pop
rolb
popf
fdivrl
jle
cltd
jae
pop
add
ja
add
add
arpl
in
hlt
lcall
or
push
push
not
dec
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
out
fadds
movsb
add
add
mov
jp
addl
bound
xchg
testb
add
pop
add
lahf
add
add
in
loopne
add
push
lea
pop
cmpl
jne
push
push
not
rol
ror
sub
push
xor
add
sub
inc
not
rol
sub
inc
add
add
shr
pop
not
pop
push
dec
sub
pop
pushl
push
push
lea
push
call
add
sti
add
rclb
fadd
ret
arpl
mov
les
js
add
lea
outsl
mov
add
add
add
add
fldl
mov
add
lea
xchg
add
out
js
fwait
mov
add
scas
add
clc
enter
hlt
lcall
sub
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jge
push
add
test
add
add
mov
add
fildl
popf
add
push
les
stc
xchg
mov
add
add
data16
jae
roll
shr
rcrl
add
push
shl
pop
cmpl
je
push
push
push
push
push
push
push
lea
push
call
add
add
pop
push
push
add
mov
movsb
lods
lahf
notb
add
add
xchg
fsubrl
loope
lods
add
mov
add
pop
jmp
mov
in
mov
jae
add
add
in
test
movsl
fistpl
add
loopne
lcall
jge
add
add
push
push
push
push
push
push
push
push
call
mov
frstor
cltd
addl
add
add
pop
pop
lods
add
rcl
int
mov
out
add
shr
add
jp
jl
int
in
loopne
lcall
inc
or
sbb
test
lea
push
push
push
push
push
push
push
push
call
mov
fst
popa
mov
loop
add
data16
add
shl
pop
aad
pop
jne
add
jae
add
sbbl
add
incb
lcall
sbb
add
inc
mov
jb
ret
adc
ret
xchg
lds
testb
shr
inc
shl
sub
add
shl
sub
shr
pop
inc
not
xor
pop
push
sub
pop
pushl
push
shr
pop
call
lea
push
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
mov
mov
add
add
lea
add
mov
hlt
add
pop
fdivrs
add
leave
mov
add
outsl
pop
add
add
aad
pushf
fdivrs
jo
push
lcall
push
ror
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
movsw
add
push
add
add
iret
add
fsub
add
jp
add
push
addl
stos
mov
xchg
lcall
add
push
push
lea
push
push
push
push
lea
push
call
add
add
add
mov
mov
xchg
add
mov
mov
mov
add
movsl
pop
mov
add
test
mov
lcall
rol
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
add
add
lret
mov
mov
add
mov
ljmp
add
add
jns
sahf
std
subl
add
flds
out
jl
xchg
add
add
cli
pop
add
cwtl
add
sub
pop
jmp
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
jmp
mov
icebp
sbbb
xchg
nop
andb
pop
add
stos
js
sahf
mov
add
mov
add
mov
add
scas
jecxz
mov
pop
sti
add
add
mov
add
lcall
jge
add
test
add
add
iret
int3
xlat
push
not
push
sub
add
sub
ror
rol
ror
ror
pop
dec
shl
pop
push
pop
pushl
push
push
push
call
js
loop
mov
jno
add
aad
jo
in
jno
scas
add
add
cwtl
add
faddl
enter
lock
add
in
pop
sub
pop
call
push
rol
pop
push
push
pop
call
push
sub
pop
jmp
push
push
push
push
push
push
push
push
push
lea
push
call
add
out
pop
lcall
xchg
in
jno
add
mov
add
leave
add
stos
lods
lret
add
jp
mov
add
add
jge
add
test
pop
add
mov
push
inc
pop
mov
jmp
push
push
lea
push
lea
push
call
lahf
stos
add
loop
pop
js
movsb
jae
add
add
add
add
add
add
add
lcall
push
push
sub
rol
push
sub
add
sub
sub
rol
dec
pop
ror
sub
inc
add
pop
push
shr
lea
pop
pushl
push
xor
inc
add
pop
call
push
add
pop
call
push
push
inc
not
lea
push
sub
add
not
sub
inc
add
pop
pop
push
push
push
lea
push
lea
push
call
arpl
add
add
cmc
mov
loop
push
xchg
add
mov
mov
add
add
iret
add
cwtl
mov
popf
pop
mov
jnp
add
add
mov
jae
out
sub
pop
pushl
push
rol
add
pop
call
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
pop
outsl
fiaddl
cmp
loop
mov
pop
js
add
add
scas
add
add
ror
sti
in
jmp
in
fdivr
lcall
shrb
jmp
stc
push
xor
add
xor
sub
add
pop
sub
inc
inc
pop
push
sub
rol
lea
pop
pushl
call
push
rol
pop
call
push
push
rol
sub
sub
shl
push
and
add
xor
lea
ror
shl
sub
xor
pop
shl
pop
push
inc
pop
pushl
push
push
call
arpl
add
incb
xchg
add
lret
pop
data16
mov
add
mov
cmpsb
movsb
mov
loopne
addl
clc
pop
call
call
push
push
shr
inc
push
and
add
add
sub
sub
inc
pop
ror
inc
pop
push
dec
pop
pushl
call
push
shl
pop
call
push
push
inc
shl
add
push
push
pop
add
sub
sub
add
sub
add
not
xor
pop
xor
not
not
pop
push
push
push
push
push
push
call
mov
fcoml
add
add
imul
add
stos
scas
out
jmp
mov
add
add
add
mov
add
push
add
add
mov
add
lcall
jne
call
push
lea
push
lea
push
push
push
push
push
call
xchg
jmp
add
xchg
xchg
imul
out
scas
add
stc
push
add
add
loope
movsl
rolb
in
pop
movsb
add
sub
pop
call
push
push
shl
add
shl
push
and
add
inc
sub
sub
shr
shr
sub
pop
dec
pop
push
dec
ror
sub
pop
pushl
push
dec
rol
pop
call
push
push
push
push
push
push
push
push
push
call
add
mov
add
fs
add
pop
test
aam
xchg
add
fneni(8087
add
testb
in
fdivr
lcall
shrb
je
push
lea
sub
push
push
pop
add
shl
sub
sub
ror
add
pop
shl
shl
sub
pop
push
push
push
lea
push
call
add
cmpsb
add
fwait
mov
mov
add
add
add
jb
add
mov
add
int
xlat
mov
test
xchg
mov
add
data16
movb
mov
in
add
outsl
fcoml
nop
lret
lock
pushl
push
sub
lea
pop
call
push
push
push
lea
push
lea
push
push
call
add
add
add
out
add
add
add
fidivs
pop
add
mov
add
mov
push
fwait
add
jge
jbe
rolb
add
jmp
in
call
scas
mov
repnz
inc
push
or
not
add
sub
lea
pop
rol
rol
xor
sub
pop
push
lea
push
push
call
faddl
add
loopne
mov
add
push
cmp
testl
jp
movsl
mov
sahf
rcll
iret
lcall
jb
stos
std
xchg
push
ret
addb
faddl
lcall
jne
push
pop
call
call
push
push
inc
add
not
xor
push
or
not
add
ror
not
sub
add
sub
pop
add
pop
push
inc
shr
pop
pushl
call
push
lea
push
push
push
lea
push
call
jns
filds
fwait
clc
add
stos
popf
add
test
popa
lock
add
cltd
arpl
pusha
add
add
xchg
mov
pop
jp
add
lea
sub
pop
lea
push
push
push
push
lea
push
push
push
push
push
lea
push
call
aad
lret
push
add
popl
rolb
add
add
movsl
add
icebp
mov
data16
add
add
add
je
scas
jne
cli
fiadds
sub
pop
call
push
push
ror
ror
shr
push
sub
add
sub
sub
sub
pop
not
inc
not
xor
pop
push
ror
pop
pushl
push
shr
add
pop
call
push
push
push
push
push
call
ficomps
loopne
imul
add
out
testl
add
jmp
fidivrl
add
add
push
mov
add
sub
pop
call
push
push
rol
push
sub
add
not
sub
sub
xor
add
pop
xor
ror
pop
push
push
push
push
push
push
call
pusha
add
add
scas
add
add
add
add
popf
leave
int
add
test
xchg
jae
std
fbld
push
imul
pop
add
add
into
add
shrl
add
hlt
mov
clc
addr16
add
xorl
jnp
jno
add
lcall
jne
call
push
lea
push
lea
push
push
call
std
ja
lds
add
sarb
mov
les
call
add
add
add
sti
jge
mov
add
fbld
add
leave
fcmovbe
roll
les
clc
out
mov
lret
scas
je
nop
nop
std
mov
pop
call
push
push
sub
xor
push
push
pop
add
ror
sub
pop
pop
push
rol
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
mov
notl
add
add
add
add
add
arpl
arpl
lahf
cmpb
sub
pop
call
push
push
call
xchg
push
cwtl
ret
fwait
rolb
add
add
add
add
add
movsb
mov
add
imul
push
test
add
cld
mov
rcrb
push
push
push
push
push
lea
push
push
call
add
add
xor
add
call
pop
add
add
xchg
insb
testb
add
shr
add
add
xchg
add
cwtl
add
add
scas
cld
imul
pop
dec
jne
jmp
push
push
inc
add
add
push
xor
add
sub
sub
lea
rol
dec
pop
pop
push
xor
pop
pushl
push
lea
push
push
push
call
loop
rolb
icebp
add
xchg
in
rolb
xchg
add
fcomi
divb
loopne
pop
mov
add
in
add
push
xchg
jge
arpl
add
sti
lock
in
lock
call
push
add
pop
lea
push
push
call
jno
imul
add
xchg
jns
in
shl
add
add
movsl
into
ret
add
fnstsw
scas
mov
xchg
jno
jno
mov
mov
mov
imul
mov
fdivl
mov
add
add
add
add
lcall
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
test
pop
push
rcll
stos
add
push
mov
pop
add
loop
rcrb
in
loopne
push
push
lea
push
push
push
call
push
jmp
add
add
data16
shr
add
push
add
in
addl
scas
add
incb
lea
filds
push
mov
jle
xchg
add
std
add
in
add
lcall
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
addb
rolb
lret
movsl
roll
add
add
add
push
in
pop
cwtl
pop
test
pop
xchg
add
push
add
fcom
stos
add
fcompl
rclb
mov
push
call
jae
add
add
mov
mov
add
mov
add
mov
cld
jne
add
add
add
pop
lds
jne
add
icebp
add
imul
add
into
add
test
icebp
xchg
add
lret
js
add
mov
add
sub
pop
call
push
push
push
xor
add
ror
sub
add
rol
inc
shl
pop
not
sub
rol
pop
push
dec
add
pop
pushl
push
not
shl
pop
call
push
push
push
push
call
add
jecxz
lret
mov
and
int3
fwait
add
add
stc
jnp
mov
ficoml
add
int3
loop
add
imul
add
add
add
fldl
add
add
gs
hlt
jae
nop
add
add
mov
std
rolb
sahf
mov
lock
push
call
push
shl
shl
pop
mov
push
push
not
inc
push
or
not
add
shl
not
shr
sub
inc
rol
pop
ror
add
add
pop
push
shr
xor
rol
ror
pop
pushl
push
push
push
push
push
push
push
call
aam
add
rclb
add
jns
add
out
in
add
cld
add
add
jae
xchg
in
jecxz
add
add
les
add
lahf
add
push
cwtl
add
mov
lock
sbbb
lret
cmpsl
test
movl
movsb
icebp
add
xchg
out
in
in
call
lea
push
xor
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
stos
add
add
lcall
add
leave
add
int3
add
add
roll
add
pop
push
push
push
lea
push
push
lea
push
push
push
call
xlat
xchg
add
add
jge
add
lea
movsb
add
mov
scas
les
add
addr16
add
mov
jle
add
fwait
add
xchg
pop
fdivrs
add
jno
in
in
lcall
add
jns
push
call
stc
mov
mov
in
add
mov
stos
push
popl
nop
mov
in
mov
push
xchg
add
add
add
fstpl
add
push
clc
add
add
jnp
add
add
out
jne
mov
add
pop
clc
mov
in
xchg
sti
add
clc
pop
push
call
push
push
push
lea
push
push
lea
push
call
mov
lea
mov
add
lds
add
pusha
add
fcomp
arpl
add
outsl
jns
mov
jbe
lds
mov
out
add
mov
fwait
add
sbbb
add
add
add
push
sub
pop
lea
push
push
lea
lea
push
xor
add
add
add
sub
shl
pop
sub
pop
push
dec
pop
pushl
push
push
push
push
push
push
lea
push
call
out
lods
pop
mov
js
add
add
xchg
shl
add
jno
jge
add
mov
jge
clc
movb
insb
xchg
add
add
add
ja
lods
movsl
aad
vaddss
mov
pusha
sub
pop
call
push
sub
dec
add
pop
push
call
push
push
rol
push
and
add
ror
add
add
dec
sub
pop
add
pop
push
not
sub
add
pop
pushl
push
dec
pop
call
push
push
lea
push
call
mov
icebp
add
popa
add
fldl
push
mov
movsl
leave
add
pop
lock
mov
addr16
std
add
icebp
add
mulb
stos
add
leave
sub
pop
call
mov
push
dec
pop
lea
push
push
lea
push
and
add
xor
not
sub
inc
add
pop
xor
pop
push
shl
pop
pushl
push
push
lea
push
call
add
xchg
add
fdivrs
xchg
add
cmpsl
mov
xchg
in
add
jecxz
push
add
add
ljmp
add
push
out
rclb
jp
add
hlt
out
movb
pop
add
mov
push
outsl
mov
sub
pop
call
push
push
lea
push
push
push
call
in
add
fucomip
roll
add
add
pusha
mov
xlat
pop
rcll
add
addl
in
in
lcall
add
push
push
push
push
push
lea
push
push
push
push
call
loopne
jecxz
add
pop
fdivp
in
add
xchg
loope
add
in
test
lds
add
jne
mov
add
add
add
iret
nop
add
add
xchg
neg
xchg
nop
push
call
pop
add
leave
jle
idivb
jp
add
add
js
add
lds
add
sbbb
pop
mov
add
add
jle
mov
add
leave
fadds
add
mov
xorb
add
sub
pop
push
push
push
call
add
add
add
add
gs
add
aam
jbe
cmc
add
add
add
pop
add
add
rclb
scas
lds
add
shll
cmc
add
add
cmpsl
sub
pop
pushl
push
push
not
push
sub
add
shr
inc
sub
add
pop
add
ror
pop
push
sub
add
add
add
pop
push
call
push
push
add
not
shr
sub
push
or
not
add
not
sub
pop
ror
not
inc
pop
push
lea
push
push
push
push
call
add
push
jmp
add
add
scas
add
add
cmp
add
je
add
fstpt
mov
add
xlat
data16
jae
push
in
in
pop
pushl
push
lea
push
push
push
push
call
push
lock
add
test
push
mov
add
add
mov
ljmp
add
add
add
sub
pop
call
push
push
inc
xor
inc
sub
pop
call
push
push
rol
add
sub
push
push
pop
add
sub
not
sub
sub
rol
add
pop
xor
ror
pop
push
sub
pop
pushl
call
push
lea
push
push
push
push
push
call
xchg
scas
lcall
sar
mov
out
sahf
into
lcall
push
add
popf
idivl
add
push
ljmp
in
call
call
push
dec
pop
jmp
pushl
push
lea
push
push
push
push
push
push
call
add
fcmovne
js
fiaddl
add
pop
addl
popf
clc
add
icebp
mov
add
add
add
jae
mov
mov
add
sub
pop
mov
jmp
push
push
add
ror
push
xor
add
add
rol
sub
sub
pop
sub
pop
push
inc
add
pop
pushl
push
dec
xor
sub
pop
call
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
ja
add
pop
add
in
int3
cwtl
xchg
mov
cld
mov
add
pop
mov
add
mov
test
addl
loop
mov
lods
add
add
fdivr
lcall
shrb
mov
out
push
and
add
not
not
dec
sub
ror
not
ror
pop
not
pop
push
lea
push
push
push
push
call
jmp
add
cltd
push
roll
mov
mov
lret
into
pop
lret
js
rcr
jnp
push
push
add
jo
lods
add
add
loope
stos
nop
add
add
add
mov
add
in
mov
sub
pop
pushl
call
push
shl
xor
ror
pop
push
call
push
lea
push
call
fiaddl
jmp
lret
push
mov
subb
add
add
add
popl
add
popf
hlt
nop
xchg
lods
fcomp
jmp
mov
imul
nop
add
add
mov
jecxz
jbe
out
popa
outsl
stos
enter
in
clc
pop
leave
add
push
push
push
push
call
rcl
movsb
fwait
add
rolb
xlat
add
add
add
push
pusha
xchg
add
xchg
out
arpl
jo
movsb
arpl
add
mov
add
add
add
popl
testl
mov
popa
add
addl
in
lock
pop
push
add
not
pop
pop
push
add
pop
pop
push
shl
ror
shr
pop
xor
push
shr
add
pop
inc
ret
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
into
cltd
cli
add
add
cli
add
cmpsb
ljmp
mov
add
jmp
add
lahf
add
xchg
add
sub
pop
leave
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
neg
push
add
scas
outsl
mov
mov
pop
filds
in
jp
ror
ffree
add
add
mov
ljmp
lcall
or
push
push
push
push
push
push
push
push
lea
push
push
call
fmull
lods
push
xlat
add
add
jecxz
int
into
xchg
add
mov
xlat
rcll
iret
movsl
repnz
mov
add
jl
mov
add
fdivr
lcall
in
push
add
sub
pop
cmpl
jne
mov
push
add
sub
pop
jmp
push
sub
sub
sub
sub
pop
mov
and
push
add
pop
xor
push
push
lea
push
lea
push
push
push
push
push
call
ret
add
stc
sahf
push
mov
test
addl
add
test
add
add
push
add
add
add
std
add
lcall
push
call
out
add
add
xchg
popa
push
add
push
add
add
add
mov
scas
in
add
fwait
les
lock
in
add
sub
pop
add
push
push
call
add
xlat
aad
add
add
out
idivb
jle
jne
add
into
mov
sarb
addl
push
add
xlat
add
add
lcall
dec
decl
dec
sub
sub
shr
pop
sub
push
push
lea
push
push
push
call
add
add
arpl
sti
hlt
pop
pop
nop
scas
add
subb
flds
xchg
sahf
add
xchg
push
mov
add
jne
add
sub
sub
shl
shr
lea
pop
sub
pushl
push
shl
xor
pop
pop
sub
push
ror
shr
sub
pop
cmp
jne
mov
push
add
pop
lea
push
lea
pop
sub
mov
push
dec
lea
ror
pop
shr
push
inc
inc
pop
add
push
push
lea
push
call
test
add
add
mov
add
mov
xchg
push
incb
loopne
bound
movsl
mov
loop
stc
pop
mov
int
repnz
pushf
sub
pop
sub
pushl
push
add
rol
sub
sub
pop
pop
push
xor
rol
ror
pop
shr
and
push
not
add
pop
sub
push
xor
ror
pop
cmp
jne
push
shr
pop
leave
push
push
call
jbe
lock
cmpsl
xchg
add
fstl
lcall
add
add
add
data16
imul
ljmp
push
add
in
add
add
xlat
pop
sahf
loopne
add
rolb
add
mov
pop
jp
sub
pop
ret
push
add
rol
add
pop
push
mov
push
sub
dec
pop
add
push
push
push
call
add
add
pop
scas
add
jecxz
popa
js
rcll
add
add
call
push
lods
test
fwait
add
idiv
incb
push
add
jge
add
test
fldl
add
mov
mov
xchg
add
pop
xchg
testl
mov
push
push
push
push
lea
push
lea
push
call
push
lcall
nop
add
cmpsl
add
add
add
add
add
popf
push
jb
add
add
add
mov
jge
movsb
add
in
pop
push
push
ror
sub
pop
push
push
push
push
push
lea
push
call
pop
add
add
add
shll
out
outsl
add
jo
jge
mov
nop
incb
ret
je
add
in
add
add
cmpl
add
out
in
xchg
ljmp
cli
imul
push
test
lods
jl
add
lcall
push
push
push
push
push
push
lea
push
lea
push
push
push
call
addr16
cmc
add
scas
xchg
stos
fiadds
int3
add
sti
add
out
filds
mov
movsb
cmpsb
lret
mov
pop
shr
add
add
stc
fnstcw
add
jbe
sar
mov
in
add
jge
out
push
adcl
pop
sub
pop
push
push
push
call
leave
pushf
popf
add
jno
add
add
pop
add
int
xor
pop
add
cmc
add
ja
pushf
add
add
add
imul
and
add
fists
add
add
fldenv
fdivl
in
clc
pop
mov
lea
push
push
lea
push
lea
push
lea
push
push
call
out
and
add
mov
add
fistpl
add
add
mov
pop
push
add
add
add
add
add
add
lcall
ljmp
push
lea
push
push
push
push
push
push
push
push
call
push
mov
fcompl
add
nop
add
mov
add
add
lcall
shl
pop
stos
add
add
lods
into
addr16
mov
lret
add
addb
mov
mov
xchg
mov
lea
add
aad
add
data16
add
cli
pop
add
add
mov
shr
push
not
inc
add
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
clc
add
hlt
add
in
pop
add
mov
popa
jmp
add
in
into
jo
add
pop
mov
rolb
fwait
addb
add
call
add
push
mov
mov
pop
cli
add
jnp
arpl
add
xchg
nop
xchg
mov
add
add
out
test
mov
jecxz
add
add
pop
or
lret
push
push
push
call
jp
incb
add
pop
mov
scas
add
pop
add
xchg
add
lods
cld
clc
jnp
call
shlb
add
js
addl
or
dec
pop
add
push
pop
xor
push
shr
dec
shl
sub
pop
mov
push
push
push
push
call
jl
jbe
add
add
xchg
add
add
cmc
add
pop
add
lret
pop
shrb
add
xorl
imul
mov
add
add
add
add
add
faddl
add
lcall
loopne
push
push
push
push
call
cld
ret
hlt
xlat
out
add
lcall
add
cli
add
add
call
fadds
add
add
lods
popfw
lret
mov
add
mov
jmp
std
lock
pop
lea
pop
sub
pop
rol
rol
push
push
lea
push
push
call
jecxz
out
mov
add
mov
mov
fiaddl
movsl
in
push
add
add
mov
fldenv
add
pop
add
add
jl
add
mov
int3
jle
add
int3
pop
add
in
lock
lcall
add
mov
jl
fs
call
mov
roll
add
lret
les
rolb
add
add
add
add
add
roll
add
push
jmp
add
xchg
push
add
cld
loop
lods
jae
add
cmpsl
add
in
lock
inc
push
pop
cmpb
jne
push
lea
push
push
push
push
push
lea
push
call
fsqrt
int3
add
add
test
add
aam
jmp
pop
add
add
add
lods
add
add
mov
add
add
mov
add
addl
add
lret
out
cltd
add
loope
add
arpl
lods
cmpsl
arpl
add
jl
mov
in
in
lcall
inc
pop
ss
cmp
je
push
not
pop
add
cmpl
jne
push
push
push
push
lea
push
push
call
jae
add
pop
lret
push
cltd
pop
push
into
mov
aad
add
pop
pop
test
int
insb
xchg
popf
mov
add
add
gs
xchg
fistps
add
in
call
xor
push
push
push
lea
push
push
push
lea
push
push
push
push
call
je
loopne
std
movsb
add
mov
add
add
lock
add
js
test
mov
cltd
lret
add
je
add
mov
mov
add
add
add
add
fdivr
lcall
push
rol
add
pop
pop
push
sub
lea
pop
pop
push
push
lea
push
call
mov
cwtl
mov
pushf
add
add
add
add
popl
icebp
imul
addl
add
imul
fadds
in
hlt
pop
pop
push
dec
sub
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
lds
add
mov
shr
push
mov
loopne
jmp
add
iret
add
xchg
push
add
add
push
add
add
fistl
mov
jns
popw
add
out
stc
ror
fisubs
add
add
add
movsb
test
add
in
fdivr
lcall
push
push
push
push
push
push
lea
push
push
push
lea
push
call
push
add
push
mov
add
add
add
andl
add
cmpsb
add
cwtl
lea
ret
lods
filds
popf
add
add
fwait
add
in
imul
add
clc
sahf
mov
lret
jno
add
jne
into
fs
add
sub
pop
ret
mov
push
sub
ror
inc
pop
add
mov
push
push
lea
push
push
call
add
add
pop
imul
add
jle
add
add
mov
add
add
push
jmp
pop
cwtl
sub
pop
push
push
push
call
mov
out
jmp
ljmp
lock
sahf
movb
add
pop
add
jo
add
std
pushf
xchg
add
jmp
arpl
in
clc
lcall
addb
add
add
push
call
xchg
loopne
test
out
add
lcall
mov
add
mov
test
mov
add
add
ret
stos
aad
loopne
add
add
in
lods
pop
clc
test
mov
push
jle
jns
add
lcall
cwtl
sar
push
not
add
xor
pop
push
push
lea
push
push
push
push
lea
push
push
call
loop
mov
pop
out
add
mov
xlat
push
cltd
lcall
push
mov
add
add
add
lahf
add
lods
add
add
je
add
add
jle
add
cli
add
push
movl
mov
lcall
mov
xor
push
push
push
push
push
lea
push
push
call
add
add
add
jl
add
pop
add
jmp
scas
stos
lods
add
loope
add
in
xchg
iret
stos
movsb
add
ret
rolb
add
add
flds
add
add
add
popl
sub
pop
pop
push
not
sub
pop
pop
push
push
lea
push
push
push
call
add
fiaddl
lds
xchg
cmc
mov
add
add
xchg
push
int3
mov
call
pop
mov
in
lcall
pop
push
inc
sub
inc
xor
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
call
ja
mov
add
jae
add
test
pop
add
lahf
add
add
add
fwait
add
movl
jnp
mov
mov
js
mov
push
mov
jo
add
add
sub
pop
leave
push
add
pop
ret
push
push
call
add
add
add
add
lds
stos
add
add
add
add
add
add
add
shrb
jbe
xchg
add
lret
pop
mov
shl
pop
jp
jmp
xchg
add
jnp
lods
repnz
out
popf
call
clc
push
cli
add
pop
push
push
push
push
push
push
push
call
add
call
lret
add
add
in
push
add
jno
insb
push
pop
lret
add
scas
out
mov
insb
stos
imul
add
faddl
add
test
stc
ret
push
add
mov
pop
mov
fldl
sub
pop
mov
push
not
pop
add
push
dec
pop
push
push
inc
add
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
addb
imul
addb
add
pop
fimull
ja
ja
pop
shlb
add
mov
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
filds
loop
xchg
add
add
lcall
mov
xchg
in
add
add
jge
xchg
add
add
jl
imul
xlat
pop
add
push
push
add
lea
xor
pop
mov
push
push
push
push
push
call
sahf
ljmp
add
mov
in
jae
mov
gs
add
mov
fdiv
lcall
pop
push
pop
push
lea
push
push
push
call
add
mov
call
jo
xchg
xlat
in
push
flds
add
lock
nop
cwtl
lods
jmp
rcr
cmpb
addb
xchg
negb
jecxz
fwait
add
pop
test
add
push
add
mov
add
clc
add
mov
add
pop
lea
sub
push
sub
add
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
orl
jns
add
roll
add
rclb
add
cltd
movsb
loopne
rcrb
add
push
fdiv
lock
lcall
ljmp
lea
push
push
push
push
push
push
lea
push
push
call
add
mov
add
jae
shl
fs
imul
lea
roll
roll
add
add
lahf
sub
pop
add
push
rol
inc
inc
lea
pop
mov
push
lea
push
push
lea
push
lea
push
call
add
jp
add
add
add
add
std
mov
add
insb
shl
add
add
add
movl
add
arpl
fwait
fistl
lods
arpl
jmp
add
add
outsl
add
roll
add
lods
add
int3
fnstcw
add
lret
shl
cwtl
lret
mov
cmc
jno
in
in
lcall
fsts
jmp
add
pop
pushl
push
xor
pop
popl
push
not
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
mov
xchg
lret
mov
add
negb
shr
ret
insb
add
add
add
add
add
cmpsl
lret
add
sti
iret
add
mov
fiaddl
scas
mov
add
flds
add
add
into
add
stos
add
add
mov
fdivr
lcall
stc
xor
push
inc
add
add
pop
lea
push
push
call
jo
fldenv
add
add
lret
out
add
clc
out
mov
lea
faddl
repnz
add
arpl
mov
add
bound
add
leave
add
add
adc
lea
push
push
push
push
lea
push
call
mov
out
xchg
add
push
jecxz
rcr
lret
pop
incb
pop
add
ja
add
addb
pop
testb
add
imul
jge
lret
loope
test
add
add
add
add
pop
addl
fwait
loope
add
add
jno
push
sub
pop
add
xor
push
push
push
call
add
xchg
pusha
lcall
mov
mov
call
sar
jb
in
add
add
jmp
fldl
rolb
push
push
push
call
add
add
sahf
mov
xchg
add
add
mov
add
loop
stos
mov
adcb
lock
nop
push
sub
rol
pop
nop
xor
push
lea
push
push
push
push
lea
push
lea
push
call
outsl
add
cmpsb
add
popf
pop
fisubs
add
jmp
testl
add
orb
add
add
ret
cmc
in
add
add
arpl
mov
addl
cmc
add
pushf
mov
xchg
jnp
in
in
nop
push
push
push
lea
push
push
call
jmp
icebp
xchg
add
filds
mov
add
icebp
jmp
test
mov
loop
xchg
add
jge
add
xchg
int3
mov
fldl
test
addr16
sub
pop
nop
inc
push
push
push
call
add
add
aam
cwtl
add
xchg
add
test
mov
lock
add
add
push
jmp
xchg
repnz
pop
leave
std
add
add
lds
shlb
outsl
add
loopne
push
arpl
sub
pop
nop
nop
push
push
push
lea
push
push
lea
push
push
call
outsl
mov
rolb
shrl
push
clc
add
add
icebp
add
add
add
mov
add
add
fsub
add
add
add
add
add
fcomp
test
xchg
call
lcall
cmp
jne
add
push
lea
pop
nop
nop
push
pop
cmp
je
push
add
lea
pop
nop
nop
push
push
push
call
add
cli
test
add
add
pop
in
add
movsl
xor
cmc
pushf
fwait
add
push
add
add
mov
iret
add
jecxz
pop
cli
loop
out
fistpll
lcall
nop
push
inc
sub
add
pop
nop
cmp
jb
push
xor
xor
shr
pop
xor
push
add
shr
add
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
fwait
lods
pop
add
subl
iret
jle
add
cmpl
lret
mov
xlat
add
add
add
ret
add
add
jle
jecxz
add
scas
ja
xchg
add
fcmovb
add
jecxz
ja
fwait
stc
mov
pop
mov
add
fcompl
push
and
rcll
dec
pop
and
mov
sahf
lds
push
call
xchg
add
add
movsb
add
loopne
add
xchg
add
fadds
cltd
add
lods
add
mov
ret
push
add
push
aam
stos
rcrb
jns
add
jp
add
iret
jbe
push
add
add
pop
mov
jno
xchg
addr16
sti
pop
pusha
add
lock
lcall
mov
jb
push
push
lea
push
push
push
push
push
call
fld
add
add
fs
add
add
add
add
xchg
leave
mov
xlat
add
test
xchg
mov
push
out
add
lahf
add
add
out
add
xchg
ljmp
lods
xchg
movsb
add
out
jne
in
loopne
lcall
inc
sbb
inc
add
pop
add
push
xor
pop
mov
xor
push
lea
push
push
push
push
call
jle
mov
mov
int3
shll
int
test
add
xchg
add
pop
je
cmpl
add
in
add
add
xchg
stos
loopne
add
add
mov
imul
loope
lds
repnz
add
in
in
pop
xor
shl
push
dec
rol
shr
pop
xor
push
pop
shl
push
push
push
call
mov
push
mov
fmull
nop
add
popf
mov
mov
bound
add
add
jle
out
add
rcl
add
test
imul
fldl
lret
mov
jae
mov
ljmp
pop
xor
shl
push
sub
xor
not
add
pop
xor
push
sub
pop
mov
push
add
lea
sub
pop
add
push
push
lea
push
push
call
mov
add
add
add
fdivs
test
add
insb
add
add
add
clc
test
aam
lret
jo
mov
mov
mov
add
stos
xchg
add
add
add
ficoms
mov
sub
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
jbe
push
xchg
into
add
popa
ret
ja
in
mov
mov
movsl
jl
add
addr16
add
mov
xchg
add
add
sarb
mov
pop
pop
push
sub
shr
pop
pop
push
push
push
push
push
lea
push
call
add
fmul
roll
mov
cmp
push
add
add
add
into
add
out
push
add
add
jecxz
cld
rcrb
popf
faddl
push
lea
ror
inc
pop
ret
push
push
push
push
call
add
mov
arpl
jecxz
lcall
shll
lahf
push
pop
xchg
add
shl
mov
clc
test
testb
jb
add
leave
add
lcall
push
lea
push
push
call
push
xchg
add
mov
addb
mov
push
add
outsl
popf
ret
add
arpl
add
pop
add
add
xchg
hlt
add
add
pop
cli
stos
add
jge
jnp
add
leave
push
xchg
in
push
push
add
xor
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
outsl
add
add
mov
add
jno
add
mov
add
mov
mov
movsl
add
test
add
add
mov
pop
lret
sub
pop
push
mov
push
push
call
add
arpl
add
add
pop
xchg
pushf
js
mov
push
fidivrl
loope
pop
add
add
pop
push
add
out
add
add
stos
pop
add
xchg
push
hlt
cli
repnz
add
fsubrp
mov
add
cld
lea
data16
add
mov
push
push
push
push
push
call
xchg
push
insb
mov
scas
sahf
push
cmc
add
add
add
rolb
add
add
add
aam
in
in
lcall
jge
push
push
push
push
lea
push
call
push
add
sti
fadds
rolb
push
mov
out
mov
mov
push
add
add
pop
out
push
jmp
mov
scas
jmp
bnd
jle
lahf
add
shl
mov
lcall
rorb
test
adc
or
push
push
call
xchg
popa
mov
nop
int
mov
movl
stc
add
test
test
add
jo
add
push
pushw
add
add
jno
test
je
push
not
add
pop
mov
mov
push
not
inc
pop
mov
push
rol
xor
pop
inc
push
push
push
push
push
push
call
out
jnp
out
pop
add
bound
add
mov
add
aad
cwtl
add
out
stos
jle
jo
add
test
fmull
addl
in
cmpsl
add
push
add
add
icebp
scas
add
xchg
pop
sub
pop
cmp
je
push
lea
push
push
push
push
push
lea
push
call
cmpsb
sti
xchg
add
loop
jge
stos
std
lock
out
mov
out
in
jmp
pusha
add
jb
lcall
add
add
add
jb
pusha
xchg
imul
mov
add
mov
add
add
cltd
sub
pop
test
je
push
dec
sub
sub
pop
mov
push
lea
rol
add
pop
inc
cmp
je
push
lea
push
push
call
je
incb
add
push
add
add
aad
sbbb
fildl
rcrl
mov
orb
jne
push
add
add
xchg
loopne
jne
rclb
add
fwait
add
add
add
fcoms
lret
hlt
pop
test
jne
xor
push
not
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
shlb
mov
add
push
xchg
cmpsb
fstpt
pop
rclb
add
call
add
popf
js
add
mov
flds
add
sahf
pop
mov
add
lods
addl
jo
fwait
cwtl
add
pop
pop
pop
push
push
push
push
push
call
aad
fidivrl
add
in
call
add
mov
pop
test
add
in
int3
mov
cld
xchg
add
add
add
add
lret
add
add
bound
popf
add
add
int
roll
add
pop
xchg
sub
pop
pop
push
push
push
push
push
lea
push
call
cmc
add
scas
xchg
pop
add
pop
add
add
add
imul
andb
mov
add
test
lock
movb
add
sub
pop
leave
push
lea
push
push
push
push
push
call
add
pop
jmp
mov
hlt
mov
add
mov
bound
jne
add
fildl
int3
ret
faddl
int3
nop
add
fwait
jae
add
jns
popa
cwtl
pop
xorl
add
out
add
mov
add
out
add
lret
addb
push
sub
pop
ret
push
xor
pop
mov
push
sub
pop
inc
cmp
jne
push
ror
pop
lea
push
ror
ror
sub
ror
pop
mov
test
je
push
lea
add
pop
mov
push
add
lea
inc
shr
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
imul
gs
add
jp
bound
popa
mov
push
call
lds
mov
sahf
outsl
rclb
add
pop
cmp
jne
push
sub
pop
mov
push
push
call
pop
repnz
popa
add
add
cmpsl
popf
fisubl
scas
fcoml
lcall
add
nop
popf
add
rcll
in
push
popfw
out
mov
add
xchg
push
loop
add
add
add
add
add
push
fs
movsl
pusha
fldcw
mov
pop
sub
pop
test
je
push
inc
pop
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
jns
repnz
add
add
mov
add
cmp
incb
in
loop
fnstcw
xlat
add
add
add
add
cmpl
add
mov
add
add
mov
mov
push
mov
ljmp
pop
add
roll
loopne
test
call
ret
cmpsb
popa
pop
jmp
xor
push
inc
lea
ror
pop
pop
pop
push
shl
ror
sub
pop
pop
push
dec
sub
not
pop
pop
push
push
push
push
push
push
push
push
push
call
jmp
xchg
xchg
mov
out
flds
bound
jp
xchg
add
add
popl
ja
mov
shrb
add
add
add
push
in
jbe
test
imul
add
add
add
add
fdivp
xchg
add
sub
pop
leave
ret
push
push
push
lea
push
push
call
pop
add
mov
hlt
mov
mov
sahf
push
mov
add
push
loopne
test
ficoms
sti
add
add
mov
mov
movsb
push
aad
pushf
add
sarb
mov
cmp
sub
pop
lea
pop
push
push
push
push
push
push
push
push
push
push
call
add
fnstcw
addl
add
xchg
pusha
add
pop
add
add
add
add
notb
pop
sub
pop
pop
push
lea
push
push
call
roll
xchg
sti
add
push
add
pop
add
add
mov
add
add
mov
fsubrs
pusha
inc
add
clc
push
add
add
pop
mov
add
leave
add
out
add
icebp
add
icebp
xchg
cmpsb
push
add
xchg
add
ret
in
hlt
lcall
push
inc
lea
shr
pop
pop
push
sub
pop
leave
ret
push
push
push
lea
push
push
push
push
lea
push
push
push
call
push
int3
add
mov
test
add
add
add
add
pop
loop
fnstenv
add
add
xchg
testl
in
lods
in
xchg
decb
add
loopne
jmp
xchg
in
fcomps
push
push
push
call
add
mov
fidivrs
mov
mov
jle
push
jmp
out
add
add
jecxz
add
iret
lcall
add
pushf
mov
in
hlt
pop
pop
pop
push
dec
rol
sub
rol
pop
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
jnp
je
mov
add
add
in
fldl
cmpsb
negb
fwait
add
je
xchg
in
add
imul
push
cld
test
lock
add
pop
leave
push
push
push
push
push
call
pop
insb
pop
add
add
iret
jae
mov
cwtl
loop
add
shl
add
add
push
ja
add
jae
add
sahf
fldl
outsl
add
add
testb
add
add
int
add
in
in
pop
ret
xor
cmp
push
inc
cmp
xor
adc
and
adc
dec
cmp
scas
add
adc
popa
cmp
xor
adc
mov
add
pushf
jl
mov
push
jl
mov
cs
sub
push
jg
jmp
das
sub
cwtl
dec
cmp
pusha
and
cli
adc
jne
fcom
mov
pop
int3
lock
popa
frstor
cwtl
sub
inc
pusha
xor
and
sub
inc
mov
bound
pop
jecxz
cmpsw
pop
pusha
test
cmp
xchg
es
outsb
rorl
mov
les
sbb
outsl
fcoml
dec
nop
xor
push
pushf
stos
jecxz
lea
cmpb
sub
push
dec
push
rorl
jg
subb
jae
add
daa
xchg
push
sub
test
mov
mov
data16
mov
mov
jnp
lods
icebp
add
je
daa
cmc
xchg
pop
pop
cmp
mov
jl
mov
inc
jb
in
sbb
scas
rcr
cmp
and
mov
ret
and
push
jg
jb
rol
adc
adc
cmp
push
adc
dec
fsubl
out
in
inc
in
jmp
sti
into
mov
xchg
fldenv
std
dec
xor
pushf
imul
movlps
movsl
popa
arpl
and
in
lds
fnstsw
stos
push
dec
or
cmp
mov
int3
int3
cmp
mov
xchg
mov
mov
push
jle
aam
out
xlat
testb
and
sbb
and
jb
out
sbbl
xchg
jne
cld
out
fldt
scas
jmp
out
arpl
xchg
mov
daa
sbbl
mov
push
adc
insl
andb
and
adc
stos
pop
dec
xor
mov
sbb
inc
lods
fs
push
push
mov
pop
or
test
mov
mov
or
arpl
add
std
movsb
std
ds
repz
jl
jno
subb
add
leave
and
out
lcall
into
inc
popa
mov
sub
add
push
sbb
or
inc
sub
sbb
push
rcrb
movsl
dec
out
push
clc
std
ja
in
fsubrs
outsb
jo
lods
inc
jecxz
pushf
mov
mov
repnz
movsb
cmp
loope,pn
mov
sbb
dec
sbb
cli
or
rcll
xor
out
inc
and
jnp
in
push
xchg
scas
movsb
fisubrs
fucom
subl
fstpl
aad
in
aam
sub
adc
dec
out
xchg
in
movsl
xchg
dec
aas
ds
addr16
jns
out
xchg
out
pop
mov
or
sti
mov
int
sub
inc
cmp
or
xchg
sarl
add
xchg
cmpsb
xor
pusha
dec
int3
iret
xchg
fsubl
cmc
xchg
cmp
pop
hlt
daa
jo
xorl
test
mov
in
sub
cmp
test
jl
pop
or
jne
clc
sub
lods
or
jnp
ljmp
ljmp
mov
pop
insb
cmp
pop
sbb
ja
mov
xchg
ds
out
jp
sarl
jecxz
iret
ja
mov
and
mov
xor
inc
inc
cmc
daa
push
mov
lods
aad
pop
adc
xor
leave
pop
cltd
mov
xchg
aam
test
inc
shl
dec
enter
mov
mov
iret
out
ljmp
push
je
loopne
test
mov
int3
xlat
mov
mov
pushf
adc
loopne
shr
cwtl
add
int
pop
shrl
test
dec
fwait
push
lock
and
rorb
mov
dec
lahf
mov
lea
sub
xchg
mov
dec
ror
ljmp
insl
pop
add
loope
lds
inc
sbb
mov
mov
addl
xchg
je
jle
and
leave
pop
imul
cmc
dec
and
fcomps
inc
xor
cwtl
rolb
jg
inc
cs
mov
and
cmp
fnstenv
insl
fisubrs
shr
ret
icebp
jae
mov
xchg
inc
and
mov
lahf
rcrb
cmp
out
in
pop
insb
fildll
andb
mov
aaa
ljmp
jne
jns
pushf
sbb
rcl
xchg
rorl
notb
jp
add
call
adc
adc
push
pop
loop
or
lcall
mov
movsl
lds
loope
test
icebp
mov
inc
mov
mov
outsb
jno
adc
or
xchg
in
test
ss
pop
adc
dec
xchg
xlat
jno
ss
push
cmp
nop
loope
addr16
jo
xor
daa
xor
lock
test
mov
in
pusha
xchg
sbb
inc
cmp
out
mov
push
push
cmc
mov
lahf
mov
mov
pop
outsl
xchg
xchg
mov
sub
adc
scas
test
add
insl
pop
or
dec
insb
cmp
nop
lods
lods
and
mov
jo
mov
lods
testb
push
scas
js
xchg
lea
sub
mov
ds
icebp
scas
shlb
mov
or
push
cmpb
xchg
jnp
sbb
xor
cs
sub
cwtl
adc
das
es
xor
or
pusha
xor
jl
pop
sbb
pop
ret
sbbb
mov
mov
loopne
or
mov
push
loop
pushl
je
loope
fstl
add
sahf
jno
repz
jl
outsl
sub
mov
inc
jnp
fdivl
mov
mov
inc
pop
stos
gs
in
sar
aad
sbb
xchg
and
fs
dec
mov
hlt
mov
dec
je
loopne
mov
dec
icebp
pop
inc
addr16
cmp
pop
mov
adc
dec
inc
jecxz
dec
shlb
mov
dec
std
sub
inc
xor
pop
mov
mov
mov
xlat
mov
fxch
push
or
in
add
xor
jl
outsl
push
ss
push
mov
push
xchg
lods
in
out
dec
test
add
lahf
loopne
fwait
jg
fimuls
mov
jno
jns
mov
cmp
leave
jle
hlt
sub
cmpsl
insl
loop
mov
xchg
or
into
jno
div
cs
xchg
mov
adc
cmp
and
insb
cmp
adc
ds
mov
jmp
jae
mov
cmp
jle
xchg
xlat
xchg
xchg
dec
and
imul
test
aaa
cmp
dec
sbb
and
in
xor
adc
test
push
outsb
nop
push
dec
call
outsb
test
arpl
mov
bound
stc
pop
and
inc
test
xchg
lods
stos
push
fs
in
jmp
clc
ror
xorb
ret
dec
jb
mov
adc
xchg
leave
adc
push
ljmp
add
movsl
cmp
push
data16
ret
orl
sbb
fistl
je
adc
dec
mov
dec
cmp
and
nop
jecxz
aaa
fcmovnu
inc
ret
xchg
in
jp
xchg
xchg
and
xchg
loopne
pop
or
out
xchg
inc
add
pop
std
pusha
xchg
add
aad
pop
jl
jp
fidivs
mov
icebp
dec
push
pop
xor
pushf
dec
gs
sahf
or
testb
test
add
enter
jl
adc
mov
mov
sub
jg
out
notb
rep
mul
fisttps
loope
push
xor
adc
adc
cltd
jle
push
mov
sub
pop
adc
mov
dec
arpl
out
outsb
cltd
push
push
insl
mov
push
jg
nop
lds
vphaddubd
add
and
push
push
xchg
lods
ljmp
outsl
out
pop
aad
pop
inc
cmp
mov
dec
out
in
mov
pop
pushl
cltd
test
cld
notb
cmpsl
setbe
inc
mov
mov
inc
lea
and
push
mov
cld
aas
mov
into
out
ret
inc
insl
into
mov
jnp
imul
xchg
or
sub
cmc
stc
imul
pop
out
add
push
imul
cmp
scas
mov
xorl
mov
test
dec
into
and
rclb
xchg
sbb
ss
xchg
in
mov
or
push
fldcw
jae
hlt
cwtl
lods
add
pop
add
cld
cmpl
dec
add
stos
lcall
stos
scas
dec
sbb
push
dec
mov
pop
data16
adc
repnz
inc
arpl
push
pop
mov
and
xor
cmp
fwait
xchg
mov
cmp
gs
sub
rorl
add
imul
mov
mov
scas
lahf
sub
aaa
pop
sbb
add
mov
cwtl
mul
aam
scas
and
shrl
in
push
daa
lods
xor
test
imul
cmp
aam
dec
mov
add
sub
push
or
fcmovu
jno
cmpsb
cmp
mov
jo
push
pushf
xchg
push
ss
out
sub
mov
outsb
push
jge
xchg
arpl
pusha
lcall
mov
je
aas
add
mov
clc
inc
in
lock
or
inc
subl
fnstcw
add
add
mov
into
mov
push
or
dec
dec
je
cld
mov
icebp
dec
and
and
mov
adc
jnp
xor
or
je
inc
enter
sub
sti
push
mov
jnp
popf
jb
dec
inc
and
fcmovne
mov
xchg
fs
ret
jne
xchg
addr16
ja
pop
imul
fldl
popf
mov
movsl
xchg
mov
add
mulb
cld
push
ja
cli
jge
fidivrl
mov
ficoms
rcr
popa
jns
shll
add
xor
cmpsl
sbb
outsb
faddl
dec
cld
jne
leave
leave
push
insl
jnp
and
insb
es
jp
inc
fdiv
cmpsb
sahf
scas
in
mov
sbb
pop
mov
hlt
stc
outsb
out
xor
lds
in
leave
mov
test
ja
xchg
mov
test
dec
daa
mov
push
or
pop
or
jno
lods
jg
jge
ds
sbbb
xlat
mov
dec
sub
or
lret
stos
lcall
hlt
in
mov
adc
add
inc
int
sar
adcb
mov
aaa
pop
es
jno
movsb
xlat
sti
dec
xchg
jmp
dec
aaa
rolb
ds
les
rorb
fdivs
pop
lds
test
add
cld
sub
rclb
out
sti
sbb
cmp
push
pop
imul
dec
dec
fildll
lods
adc
xchg
insl
mov
fs
test
int
inc
fbstp
push
repnz
fimuls
add
or
cs
iret
push
sbb
mov
aas
sub
mov
mov
adc
add
xchg
sbb
push
xor
int3
popa
jmp
pop
sbb
rcll
lcall
jmp
popa
lcall
cmp
and
mov
daa
cmp
fstpt
inc
in
xchg
and
out
sub
xlat
sbb
out
out
mov
imul
ljmp
or
je
out
dec
adc
lock
lods
das
shrl
adc
roll
jp
jl
xchg
xor
mov
inc
pop
mov
rorb
sub
test
imul
dec
inc
aam
mov
mov
divb
xchg
lret
inc
mov
scas
mov
arpl
lcall
jnp
push
lods
mov
push
jbe
mov
cltd
push
dec
xor
andb
cmp
xchg
imul
cmp
popf
push
imul
int
cmp
mov
daa
int3
pop
out
sahf
aad
xchg
lret
cmpsl
push
outsb
sub
fs
iret
icebp
xchg
test
push
push
iret
cltd
dec
pop
movl
and
mov
fists
jl
lret
outsl
aad
outsl
insb
aad
sub
xchg
dec
popa
dec
cltd
scas
aad
mov
gs
into
pop
lds
cmpsb
or
fists
mov
adc
mov
daa
ret
mov
adc
pop
xchg
clc
push
lret
repnz
loope
inc
es
cmp
test
xorl
sahf
pop
sub
les
out
sub
jbe
xchg
cmpsl
sub
daa
outsb
shr
xchg
jg
xchg
push
ss
xor
stos
js
inc
push
cli
fists
dec
imul
mov
jle
pusha
xchg
outsl
testb
jno
mov
push
pushf
outsb
pushf
mov
add
jb
push
sub
jne
les
cmp
scas
or
daa
mov
rcl
loopne
ja
sub
pop
insb
dec
pop
pop
test
inc
addr16
add
push
add
cmc
lea
idiv
pop
jp
xchg
loopne
aad
add
pop
pop
negl
sbbl
rcrb
lcall
push
mov
pop
aam
lret
mov
inc
ljmp
cld
sahf
out
out
scas
inc
addr16
outsl
repnz
or
mov
jg
dec
loop
pop
out
lret
icebp
add
iret
lahf
push
insl
in
inc
ja
pop
inc
xchg
bound
push
out
add
je
aad
shlb
into
or
out
movsb
movsl
inc
sbb
negl
and
cltd
js
js
mull
icebp
roll
and
pop
add
jbe
jge
sbbl
jle
inc
test
and
push
inc
xor
or
jg
and
repz
test
add
test
xchg
inc
mov
mov
sbb
cld
xchg
sbb
ss
enter
je
gs
imul
add
pushf
pop
sbb
dec
shl
out
jg
cmp
or
insl
add
fwait
bound
mov
xchg
js
or
adc
sub
xchg
mov
dec
test
or
int3
lods
jg
ljmp
adc
xor
pusha
loopne
hlt
push
ja
cmp
cmp
mov
push
shrl
popf
fbstp
bound
repz
cwtl
out
lods
lods
xchg
dec
aam
popa
sub
cmp
jmp
fs
adc
cli
into
inc
divb
dec
dec
mov
dec
jns
or
xchg
in
idivl
js
cli
sbbl
inc
pop
imul
insb
out
jno
and
sub
dec
mov
pushf
jg,pn
and
cmpsl
jne
cmc
and
push
in
mov
inc
cli
sub
mov
xor
call
xlat
add
nop
pop
mov
adc
aas
fadds
into
xor
popf
mov
pusha
in
pop
nop
movsl
push
or
xor
xchg
and
adc
pop
out
ret
mov
cmp
dec
testb
in
jl
lret
dec
negb
mov
into
xchg
xlat
cmp
mov
mov
dec
or
and
cltd
dec
icebp
cltd
into
outsb
mov
or
enter
inc
or
sbb
jnp
mov
rcl
lahf
and
xchg
ss
aas
popa
mov
pop
ret
repz
dec
in
out
rcll
imul
mov
jge
bound
hlt
xchg
rcl
sbb
flds
in
int3
fisttpll
in
cltd
movsb
popa
aaa
mov
ss
adc
mov
inc
fdivs
es
das
push
cs
xor
sti
adc
sub
xchg
cltd
mov
cmp
jl
clc
jge
xor
lahf
adc
pop
nop
cmpb
lahf
fs
jb
jns
adcb
inc
push
push
mov
xchg
ficoms
push
xchg
movsb
daa
jne
xchg
push
sahf
push
dec
add
jbe
add
ljmp
lahf
orl
into
loope
sbb
add
arpl
loopne
fnstsw
sahf
pop
xor
aad
or
orl
scas
mov
pop
xor
lea
add
sub
mov
jae
sub
and
push
pushf
test
lcall
mov
ficoms
in
aaa
mov
insl
in
outsl
leave
jns
sbb
std
xchg
out
mov
jge
ljmp
and
stos
bound
push
jb
xchg
imul
push
pop
lods
push
shl
pop
sbb
mov
or
popa
jnp
add
test
and
xor
das
or
sbb
mov
mov
or
loopne
movsb
jg
lds
scas
imul
mov
daa
mov
cmp
mov
das
push
sub
xor
pop
sub
mov
or
lahf
sbb
lock
jge
inc
bound
pop
inc
adc
jae
mov
mov
inc
sub
push
pop
or
pop
push
mov
negb
repnz
lret
cvtps2pi
outsb
or
arpl
cmc
add
loope
sbb
rcll
arpl
js
pop
push
xchg
mov
adc
shl
repnz
mov
aas
add
and
mov
jg
cmc
or
test
inc
pop
adc
mov
shlb
out
add
loope
or
dec
cli
cmp
sbb
xchg
sub
sbb
push
xlat
inc
repnz
jne
movsl
push
test
std
push
push
xchg
pop
inc
mov
jb
ficomps
xor
push
ret
jno
iret
or
inc
iret
test
out
in
iret
push
movups
imul
mov
test
xlat
out
cmp
or
or
ds
insl
fbstp
push
xor
stc
out
mov
ja
fisubrl
outsl
dec
xlat
mov
adc
mov
in
or
mov
fcmovnbe
inc
pop
push
push
popf
push
mov
adc
jne
out
rolb
inc
fstpt
add
mov
or
mov
lds
out
leave
mov
ret
and
stos
pop
xchg
mulb
dec
dec
inc
add
cli
mov
push
lods
pop
push
pop
lds
int
mov
sub
cmp
push
push
pop
mov
cmp
aas
dec
movsl
dec
xchg
xor
scas
dec
push
mov
inc
dec
xlat
test
lcall
rclb
pop
cmp
scas
sbb
fisttps
insb
movsb
pop
jmp
fnop
cmp
inc
fildll
add
cs
out
jnp
mov
imul
pop
mov
push
push
out
aas
addb
ret
adc
xchg
ret
aas
loop
shlb
insl
sub
xor
mov
pusha
cmp
decl
adc
adc
movsb
xor
cs
in
loope
fstl
mov
shlb
push
cmp
stc
insb
xor
and
pushf
pop
imul
mov
push
stc
mov
fimull
fsubs
test
mov
cld
hlt
sub
imul
mov
jle
mov
adc
int3
pop
call
fdivr
xor
sub
bound
add
cmpb
repz
mov
mov
aam
mov
cmc
gs
imul
inc
inc
imul
leave
xor
mov
jg
ss
iret
cmc
mov
shlb
subl
sub
stos
es
je
cmpsl
int3
sbb
call
push
dec
lahf
arpl
shrb
jo
cltd
or
cmc
fcomps
add
add
cwtl
push
or
in
fstpl
mov
mov
in
mov
movsl
jle
lahf
cli
fsubrs
mov
aam
movsb
sarb
pop
inc
fimuls
cmpb
xor
js
ss
inc
mov
sbb
mov
es
xor
sub
sarb
insl
cmp
test
into
push
jne
into
stos
sub
cmpsb
imul
mov
xchg
or
inc
fisttps
mov
ljmp
gs
les
ljmp
adcl
mov
pop
fwait
push
mov
je
dec
mov
dec
cmp
ret
sub
add
lea
dec
push
je
push
js
mov
and
push
jp
mov
mov
lcall
lahf
dec
shll
xchg
lds
fnstcw
push
aam
cmpsl
mov
mov
sub
jge
test
in
movsb
xchg
and
add
xchg
and
ljmp
dec
pmullw
ffreep
adc
jb
sahf
mov
sbb
ss
dec
fldl
ficoms
sbb
mov
jmp
mov
divb
cmp
cmp
xor
and
pop
pop
adc
cmc
into
jbe
je
and
mov
in
sbb
fdivl
cmp
fs
clc
sarb
int3
fiaddl
out
jb
or
sbb
mov
pop
notb
cmc
mov
dec
pop
push
push
jbe
test
sbb
lds
je
out
aaa
out
adc
jnp
xor
movsl
enter
xchg
rcll
fucomp
pop
loope
jp
hlt
data16
outsb
pop
cmp
pop
scas
mov
xchg
shlb
xor
cmpsb
repz
xchg
jnp
out
lods
inc
ret
push
jnp
nop
insb
sub
jge
mov
nop
icebp
stc
aam
sub
dec
stos
adc
sbb
daa
vpminub
or
push
popa
loop
repnz
mov
or
dec
cmp
mov
inc
pop
jae
inc
stc
enter
cmc
lock
add
adc
push
adc
repnz
std
js,pn
lcall
hlt
cmc
lret
sarb
rcll
insb
ja
mov
jle
push
shr
push
neg
pop
int
fstpt
loopne
cli
sub
mov
and
or
push
push
daa
adc
ss
imul
in
inc
dec
notl
fisubl
mov
jmp
pop
mov
mov
mov
ljmp
ds
leave
pop
out
test
lcall
rorb
xor
xchg
mov
jl
cmp
add
stos
xor
mov
jl
mov
or
int3
cmpsl
hlt
dec
imul
ret
sarl
data16
arpl
sbbb
ret
pop
sub
mov
das
cmpsb
mov
cwtl
imul
adc
add
test
sbb
add
scas
outsb
inc
sub
add
testb
mov
adc
mov
push
in
rcrb
mov
addb
pop
imul
jge
xor
fstps
daa
stos
mov
pop
inc
adc
cmp
jg
scas
mov
stc
mov
inc
or
cltd
dec
lcall
arpl
pop
pop
jne
divb
rorb
add
adc
test
add
xchg
aas
or
mov
xor
cltd
das
ljmp
inc
inc
ss
jl
mov
bound
iret
cmp
sti
repnz
sbb
xor
mov
and
outsl
cltd
data16
icebp
lret
dec
push
or
popa
xor
xor
add
clc
mov
push
adc
shrb
cmc
xchg
inc
add
aas
test
out
xchg
sarb
mov
mov
xchg
mov
sti
inc
outsl
stos
push
mov
ss
xor
mov
mov
jno
inc
pop
jp
fisubl
shl
pop
pop
inc
add
and
out
inc
adc
iret
pop
icebp
and
cmc
ret
loope
dec
inc
and
leave
mov
sbb
cmp
ljmp
pop
mov
loopne
add
xor
lds
lcall
fsts
dec
out
arpl
or
dec
imul
mov
cmpsb
jecxz
sub
or
adc
push
int3
dec
push
pop
cmp
xchg
addb
mov
cmp
ret
cmp
out
loopne
fstps
mov
dec
je
dec
test
and
mov
arpl
push
xor
xor
addr16
jns
in
fnstcw
pushf
enter
jge
jb
push
jno
and
arpl
dec
pop
cmpsb
mov
cmp
cmp
out
inc
lret
dec
add
push
mov
push
int
pop
and
mov
and
mov
sub
sub
jae
dec
push
mov
out
xchg
mov
fnstcw
dec
sub
pop
mov
flds
clc
test
inc
mov
stos
out
ret
lret
cwtl
cs
aad
lock
sbb
adc
xor
mov
imul
xor
insl
jp
sahf
sbb
and
xchg
shll
test
xchg
jp
loopne
xor
xchg
ret
xlat
test
sub
ret
das
jecxz
fadds
push
frstor
mov
dec
sbb
mulb
clc
rorl
daa
leave
push
insb
mov
lods
push
int
add
loop
lods
pop
push
pop
cltd
jg
ds
mov
mov
cmp
aad
pusha
cld
xor
jl
andb
cld
and
and
js
inc
or
stc
call
call
daa
mov
push
jecxz
das
stc
dec
push
aad
mov
adc
std
or
sub
push
cmp
sub
xchg
in
xchg
iret
call
pop
cli
or
pop
xor
inc
push
lcall
jp
mov
xchg
pop
aas
imul
mov
repz
cmp
mov
xor
cmp
pop
mov
mov
lods
mov
jno
cmpsl
lock
loop
neg
dec
test
dec
ret
icebp
pop
ret
mov
rcrb
mov
rcr
sub
pop
jo
repz
mov
cmp
in
int3
decb
lret
cmp
cmp
mov
inc
cmp
mov
fcomip
mov
mov
out
lods
sub
jno
sub
fxam
pop
int3
dec
jmp
sub
and
mov
lcall
and
sub
add
and
scas
xor
stos
lea
and
xchg
les
xlat
and
xchg
inc
rcr
clc
jns
loop
pop
xchg
cli
mov
lock
fcmovnbe
shll
xchg
mov
xor
add
orl
mov
pop
ret
and
outsb
cli
idivb
int3
add
inc
ret
mov
loope
push
jo
dec
pop
arpl
hlt
test
fs
mov
pop
fcompl
icebp
xor
dec
push
inc
loope
fimuls
xor
inc
bound
pop
adc
je
add
cmpsl
xchg
xor
inc
adc
insl
scas
inc
sub
icebp
fcoml
sbb
jp
or
xlat
sub
int3
lods
imul
inc
xchg
inc
mov
jbe
sbb
mov
das
arpl
movsb
jbe
jg
mov
inc
imul
jle
outsl
and
adc
in
sahf
and
xor
or
or
rclb
sbb
insb
popl
sub
bound
bound
fdivs
nop
mov
inc
stos
das
shlb
and
add
adc
frstor
adcl
sub
sbb
jno
stos
loope
notb
sarb
mov
mov
dec
adc
iret
dec
dec
xor
push
add
or
int3
sub
pop
int3
mov
mov
addl
push
sub
cmp
scas
and
cmp
add
xlat
sub
in
push
inc
mov
mov
loope
xor
or
aam
cmp
mov
mov
js
jnp
stc
jne
dec
inc
out
sbb
shll
sub
dec
inc
shlb
xchg
lea
dec
or
jno
xchg
rcr
inc
das
xor
sbb
inc
xlat
cmpsb
cmp
pop
insb
sub
in
mov
mov
sahf
jge
push
jecxz
sahf
push
pop
push
rcl
sbb
add
fincstp
mov
call
stos
stos
mov
out
jg
rorl
hlt
mov
lret
pop
leave
xchg
and
add
pop
cmp
adc
xchg
in
or
inc
aaa
fstpl
int
leave
call
movsl
mov
adc
or
adcl
loop
hlt
lahf
jl
cli
dec
ja
dec
cs
sarl
and
les
sub
outsl
push
jns
pop
lods
clc
add
clc
lcall
movsl
and
sub
jae
push
ss
ss
loope
loop
stos
out
sbb
xor
shl
stos
or
pop
nop
dec
mov
out
push
cmpsl
inc
sub
ret
mov
cmp
pop
mov
jae
shll
in
jl
or
sahf
jns
inc
add
push
cli
fadds
add
jp
sbb
roll
sub
imul
imul
out
dec
mov
jp
inc
pop
add
loopne
enter
xchg
and
jmp
or
fs
rcrl
xor
dec
mov
sub
arpl
inc
mov
xchg
in
stos
push
icebp
or
adc
notl
jb
sahf
sbb
lods
popa
mov
popa
cmc
mov
aam
in
in
xchg
mov
jg
xchg
sbbl
add
je
mov
pop
std
mov
cli
loop
adc
popa
pusha
and
call
and
lret
je
fwait
xchg
inc
aas
inc
test
inc
insb
addr16
test
add
les
xor
ret
shll
scas
xor
hlt
xchg
pop
xlat
mov
loop
out
mov
mov
clc
mov
mov
das
sub
xchg
jns
or
pop
inc
pushf
shrl
add
ret
mov
fcomps
jl
cmp
in
or
xor
jmp
pushf
rcrl
mov
lods
push
std
and
movsl
rol
xor
sub
mov
lods
push
pop
out
insl
je
test
xorb
sbb
push
adc
jg
in
mov
cmp
push
repz
mov
adc
jmp
mov
rorl
aaa
xor
xchg
cltd
idivl
mov
insl
ret
jno
inc
les
dec
jecxz
loop
cmp
cld
pushl
insl
xchg
dec
pop
inc
or
add
mov
ljmp
insb
mov
fimull
aaa
dec
ja
jg
js
gs
or
les
in
pop
add
shl
mov
pushf
sbb
sub
cmp
aas
loopne
xchg
pop
mov
cmp
iret
das
pop
adc
dec
xchg
rcll
fidivrs
xchg
cs
es
stc
mov
pop
push
movsb
sbb
lcall
cmp
add
jg
out
addr16
out
adc
gs
roll
mov
mov
lock
in
jl
push
jmp
int
aaa
out
ljmp
mov
pop
fisubrs
std
mov
pop
push
lods
dec
xchg
sbb
lock
shl
test
and
loopne
lgs
daa
dec
lea
sbb
jecxz
sub
sub
ja
adc
push
adc
cvtps2pi
jo
jmp
add
ljmp
cmp
test
fwait
adc
orb
mov
loop
push
jns
adc
cmp
dec
mov
adc
fimull
fcoms
add
icebp
inc
mov
push
jae
cwtl
ss
adc
cmp
mov
stc
sub
and
cmp
add
mov
push
inc
inc
loopne
enter
xor
out
mov
mov
sub
or
dec
jecxz
pop
xor
adc
mov
xchg
shl
hlt
mov
pop
mov
clc
inc
shrl
xor
ret
test
flds
jae
shll
push
iret
mov
lods
sub
das
outsb
mov
pop
fistpl
arpl
mov
outsl
sar
pop
sbb
es
sbb
xlat
xchg
loop
cmpsl
push
dec
movsb
ljmp
pop
cmp
mov
inc
cld
in
cmp
insb
les
ljmp
ds
cmp
fwait
mov
mov
mov
sub
fidivrs
xchg
or
and
inc
rcrl
pop
insl
mov
dec
ja
mov
lock
dec
add
sub
adc
mov
sub
xor
into
cltd
mov
pop
push
sbb
jne
movb
sub
pop
and
nop
data16
ljmp
lret
sahf
push
xchg
cmc
mov
inc
mov
sub
ljmp
jne
or
cli
dec
shlb
mov
jno
imul
mov
repz
jp
adc
aaa
sbb
xor
gs
cmpsb
enter
sbb
adc
sub
push
mov
stos
dec
out
hlt
push
pop
daa
inc
push
cltd
mov
loopne
sti
stc
add
lock
cli
xor
repnz
jnp
xchg
inc
loopne
pop
stos
dec
hlt
and
mov
int
lock
ds
dec
jmp
ficoms
daa
in
mov
or
jecxz
clc
adc
mov
aam
aaa
xor
push
addb
jbe
inc
ret
add
mov
jns
jl
jecxz
mov
or
jno
xchg
adc
pop
jmp
iret
mov
xorl
mov
hlt
inc
mov
push
mov
test
stos
test
pop
mov
ret
mov
aad
sti
push
push
jns
push
je
push
sub
divb
or
and
pop
ficoms
inc
int
fisttpl
inc
adc
lret
movsl
sub
mov
pop
mov
cmp
mov
dec
out
add
mov
lret
pop
or
shll
shrl
and
jne
stos
sub
aam
pop
dec
mov
sbb
mov
dec
cmpsl
sarl
mov
mov
leave
std
ljmp
pop
or
gs
sti
jnp
push
mov
push
jae
es
add
mov
mov
push
dec
pop
jle
jnp
dec
icebp
push
fisttpll
adc
orb
fcmovbe
roll
add
adc
aam
faddl
andl
clc
fs
xor
popf
adc
xchg
test
iret
rclb
lods
push
sti
mov
fiaddl
imul
incb
xchg
out
and
jl
fldcw
inc
mov
push
mov
lods
mov
xlat
lret
fsubr
rcrl
enter
ds
push
in
jae
cltd
pop
loopne
fnstsw
pop
sbb
fcom
xchg
rcrl
fcmovb
cli
and
out
jle
imul
loope
xchg
mov
mov
movsl
cmp
fwait
jmp
dec
pop
mov
xor
and
add
cld
mov
pushf
dec
lahf
pushf
aam
iret
and
or
cmpsb
loopne
fimull
xchg
dec
cmp
add
jl
sub
mov
push
mov
sub
cmp
mov
push
jmp
pop
std
icebp
pop
ljmp
sbb
leave
xor
mov
fstpt
sub
mov
popl
call
sahf
setl
lds
add
mov
loopne
mov
sbb
add
fmul
push
xchg
sbb
and
dec
adc
mov
int3
rcl
mov
sti
subl
cld
pop
mov
outsb
jmp
stc
sti
pop
push
lock
cli
or
xor
mov
add
push
push
xchg
dec
or
or
stc
sbb
and
popa
lds
fadds
xlat
es
mov
ja
dec
push
rclb
ror
out
adc
jbe
and
adc
and
in
jge
jbe
add
xchg
jns
adc
pop
and
arpl
lahf
xor
lea
repnz
or
adc
cwtl
inc
test
add
inc
repnz
inc
movsl
push
loopne
movsl
mov
bnd
pop
push
add
push
cltd
and
rcr
cmp
jns
jo
lret
cmc
sbb
adc
les
clc
and
in
cmp
lret
pushf
and
test
ljmp
aam
sub
in
dec
lret
or
mov
sbbl
dec
mov
incb
aam
stc
jo
jnp
add
pop
pop
push
jecxz
frstor
adc
adc
in
mov
popf
xlat
cmpsb
lds
lahf
sbb
jle
jmp
or
adc
and
aam
fisttpll
outsl
inc
lea
sti
pop
enter
std
and
popf
ret
insb
mov
mov
pop
lea
add
loopne
adc
add
push
addl
fdivrl
cmp
push
and
push
lods
imul
test
inc
inc
fs
jle
mov
pop
inc
fnstsw
int
sbb
fsts
jmp
dec
fs
or
pusha
pop
pop
rolb
rorb
inc
insb
xchg
leave
cmc
movsb
jns
push
dec
lret
xchg
aam
das
sti
inc
data16
jo
sahf
lods
adc
mov
xchg
scas
insb
cmp
cmp
rorb
mov
pop
test
pusha
and
xchg
pop
xor
mov
es
mov
jbe
int3
mov
inc
adc
jnp
mov
push
xor
test
cmp
jne
jae
sub
and
and
xor
sbb
dec
mov
and
std
sub
aad
lret
mov
jecxz
repz
mov
or
xchg
inc
repnz
jecxz
lcall
or
mov
lods
ss
add
mov
push
dec
sub
lcall
stc
jge
pop
movl
mov
inc
inc
sbb
xor
sti
movsl
and
test
lods
dec
shl
xchg
mov
inc
push
sahf
cmp
out
pop
sbb
mov
int
cmp
je
cwtl
movb
out
rorb
imul
inc
mov
repz
push
bound
lock
fs
mov
call
cmp
xor
or
out
xchg
push
add
ficompl
ljmp
pop
mov
mov
ret
in
cmp
mov
mov
push
leave
adc
fidivrl
inc
dec
mov
dec
rcrb
cmc
stos
xchg
loopne
imul
and
sub
dec
daa
jl
xlat
popa
lahf
mov
xchg
icebp
sbb
push
shl
jnp
or
inc
shl
pop
mov
insl
sbb
popf
shlb
xchg
mov
cmp
mov
paddsb
fdivrs
cmpsb
and
fisttps
push
rclb
cmpsb
rcr
shlb
fistps
push
imull
xchg
sub
add
mov
jb
aas
cwtl
lahf
sbb
push
stos
cmp
cmp
adc
insb
lret
xchg
icebp
stc
sti
in
jmp
sub
dec
pop
push
sub
xor
movd
xchg
dec
dec
test
xlat
testl
insl
mov
data16
mov
jg
jle
mov
scas
adc
push
cli
xorl
leave
out
cmp
cmp
jp
ror
xor
or
es
addb
mov
mov
or
pop
mov
sub
push
scas
inc
inc
std
gs
insl
cmp
adc
jl
aad
xor
pop
cmp
mov
out
pop
jne
mov
and
loopne
mov
cmp
jmp
push
sub
sub
ljmp
lahf
ret
pop
lock
fs
push
cld
xchg
popf
adc
pusha
push
dec
dec
jecxz
int
aam
aaa
inc
xchg
out
and
sub
adc
stc
int3
push
xchg
and
cmp
push
jb
outsb
inc
mov
xor
fs
dec
cmp
cli
lock
das
cmp
in
aaa
popf
scas
fbld
push
jg
scas
cmpsl
and
movsl
sub
pop
iret
aaa
lods
cmp
pusha
outsb
sbb
pop
push
sbb
sub
shrl
xor
das
push
mov
xor
std
scas
in
test
fwait
dec
daa
mov
pop
mov
xchg
les
loopne
push
loope
jno
mov
shlb
nop
pop
push
cmpsl
push
or
push
jnp
in
xchg
inc
pop
cmpsb
adc
mov
js
jo
sbb
xchg
cmp
jle
packsswb
rcl
xor
inc
leave
loop
roll
mov
filds
ljmp
mov
fwait
pcmpgtd
fwait
mov
mov
lret
aas
push
dec
mov
mov
ss
jmp
sbb
dec
scas
mov
pop
les
popa
stos
push
xor
xchg
jno
inc
lods
lcall
or
xchg
movsl
push
loop
sub
push
xchg
aas
mov
pushf
bound
sahf
sbb
add
insb
jp
out
in
cmp
pop
dec
inc
jbe
pop
leave
inc
orb
mov
mov
or
js
fdivr
std
ss
add
mul
inc
inc
pusha
es
lock
dec
sbb
mov
inc
daa
dec
push
addl
ds
sbb
mov
pop
push
orb
adc
movsl
daa
popa
filds
mov
cwtl
cmpsl
inc
push
out
test
ja
loop
ds
mov
test
test
push
insb
sub
stos
clc
push
iret
inc
jmp
pusha
mov
cs
fs
gs
adc
xchg
hlt
aam
inc
aam
stc
and
fwait
cmc
movsb
sti
xchg
repz
je
and
xchg
pusha
jns
mov
iret
insl
out
mov
pusha
and
jle
fistpl
scas
cli
xchg
in
bound
data16
jmp
in
sbb
getsec
repz
mov
pop
and
xchg
int3
test
sti
je
jge
inc
out
nop
fildl
mov
dec
jns
push
nop
je
dec
aaa
pop
loop
ret
inc
add
push
lods
pop
xor
fnstsw
add
sti
pop
stos
mov
jmp
and
fstl
das
push
call
sbb
es
or
mov
fisttps
fidivs
scas
jns
loop
or
cmp
stos
add
pop
xor
insb
imul
imul
push
scas
sbb
int
or
push
dec
lcall
cmp
jno
dec
lods
scas
out
pop
push
adc
mov
mov
mov
mov
dec
or
fcoms
negl
and
sahf
adc
sbb
dec
push
aam
jge
inc
jmp
bound
lahf
cmp
cmp
or
pusha
mov
fcompl
xor
add
pop
sub
ret
dec
add
out
ja
dec
roll
shrb
loop
push
fsub
push
xor
outsb
mov
cmpsb
int
pop
sbb
jo
insb
call
and
ljmp
repnz
and
ljmp
cmp
and
sub
out
jl
cs
int
cmpsl
xor
and
add
pop
repnz
mov
inc
xor
add
mov
daa
bound
xchg
test
outsb
nop
daa
cmp
in
bound
subb
inc
imull
ds
mov
jle
or
xor
dec
mov
sub
mov
les
je
imul
sbb
nop
dec
rolb
xor
in
test
cmpsb
daa
dec
push
lock
push
inc
xchg
mov
push
push
popf
and
mov
push
arpl
mov
jle
inc
add
lea
push
dec
xorl
loop
pop
push
pushf
test
cs
fsubp
ljmp
jge
jb
data16
jge
cmp
add
sbb
nop
repnz
sahf
das
push
hlt
jns
adc
out
adc
inc
pop
sub
in
not
sub
mov
mov
cmp
imul
ret
xchg
out
mov
sub
cmp
pop
mov
add
or
sub
add
inc
bnd
insl
mov
inc
std
sub
or
fidivl
mov
add
add
data16
pop
sbb
inc
aaa
mov
mov
andl
push
and
testb
xchg
lock
mov
ffree
out
jmp
and
mov
out
sbb
fldl
mov
pop
xchg
ljmp
or
enter
mov
add
arpl
sub
js
xchg
int
out
scas
sub
sti
mov
mov
inc
dec
sub
sub
adc
dec
xchg
adc
sub
insl
out
jo
lods
cmp
int
fiadds
or
pop
sub
sbb
cltd
insl
jae
dec
adc
adc
cmp
sub
lahf
add
mov
inc
add
mov
adc
inc
inc
add
stc
ja
push
pop
dec
decb
popf
clc
test
sub
and
loopne
cmp
add
xchg
dec
xchg
imul
adc
ss
or
or
pop
lcall
mov
adc
dec
lcall
jg
jnp
cli
mov
pop
lea
xchg
das
mov
mov
mov
pop
pop
jbe
lods
push
or
mov
lea
cmpl
hlt
sub
mov
xchg
and
push
dec
sub
sarb
adcl
sub
ljmp
mov
mov
cli
jmp
adcb
in
scas
fwait
or
mov
jge
and
movsl
je
fsubs
xchg
sbb
subl
xchg
into
pop
shll
mov
es
mov
nop
fs
sub
cli
push
ja
mov
pop
pop
mov
push
int3
mov
pop
xchg
hlt
push
dec
cmp
pushf
das
push
cltd
fisttpl
dec
and
rorb
cmovl
test
or
xorb
cltd
je
sub
mov
jbe
pop
mov
loop
xchg
cli
push
pushf
mov
sbb
pop
gs
fdivrl
leave
out
icebp
dec
mov
sub
std
cmp
add
mov
bound
imul
jb
in
inc
outsl
mov
pushf
xchg
fbld
mov
fmuls
shlb
and
cmp
add
push
and
fldl
or
fwait
pusha
arpl
dec
imulb
ds
leave
cli
or
sbb
cwtl
push
push
xchg
movsb
push
xor
fwait
add
ja
rcr
mov
cli
xor
out
aaa
dec
fidivl
mov
mov
push
ljmp
pop
ljmp
clc
inc
sti
fsubrl
roll
icebp
xor
cmp
mov
mov
pop
fcomi
out
push
es
mov
pop
lods
sti
mov
and
ljmp
das
sub
sub
ds
insl
mov
es
sbb
adc
push
ja
nop
loope
sub
mov
pusha
cmp
dec
sub
shll
push
push
sbb
in
mov
int3
imul
and
xor
xor
inc
lret
jle
outsl
dec
mov
ljmp
lods
cltd
fisttpll
cmpsb
call
push
lods
repnz
or
outsl
testb
int
jo
inc
xchg
jbe
sbb
rorl
stc
shll
mov
inc
push
mov
jnp
mov
ret
mov
ljmp
jge
adc
in
daa
cmp
xor
bound
inc
mov
inc
or
int3
xor
push
cwtl
pusha
cmpl
dec
pop
jle
pop
xor
adc
or
mov
repnz
testl
xchg
leave
cs
add
test
dec
fwait
push
pop
push
ror
mov
mov
fstpt
cli
push
pop
out
test
jnp
xchg
push
test
inc
repz
test
jg
rorl
mov
int3
and
sub
jp
test
mov
pop
movsb
lcall
stc
dec
xchg
add
mov
into
fldt
adc
ljmp
jmp
mov
fwait
inc
lret
shrb
xchg
lahf
sti
xor
cwtl
pop
fcom
and
push
insl
mov
push
mov
das
dec
hlt
sahf
mov
je
xchg
out
jl
ret
cltd
sbb
rolb
cs
pop
nop
push
xchg
xor
push
fidivrl
xchg
dec
sti
sbb
pop
repz
cld
inc
mov
jb
lahf
pop
mov
call
imul
pop
pop
xlat
add
jmp
mov
dec
test
push
mov
test
mov
aad
adc
pop
jne
xor
or
mov
ror
rcr
inc
lcall
xor
lea
inc
pop
nop
inc
mov
or
push
fnstcw
cmp
call
mov
add
stos
sub
mov
mov
push
sub
and
and
dec
aaa
and
inc
mov
insb
jno
test
loope
ds
sbb
or
xor
mov
stos
push
mov
sub
pop
shll
sub
sahf
push
or
jmp
ucomiss
add
push
lods
ja
scas
ss
pushf
mov
cmp
sbb
and
outsl
imul
push
cmpsb
inc
vmovlps
inc
sub
sub
adc
add
pop
fwait
sub
shlb
mov
sub
gs
or
mov
mov
add
jl
mov
call
shl
into
or
mov
outsl
mov
pusha
pop
outsb
fcmovb
push
test
mov
pop
push
sbb
pop
dec
shll
jnp
inc
pop
add
xor
imul
out
mov
mov
xor
aas
sbb
int
xchg
xchg
notl
mov
dec
loope
movsl
dec
cmp
cltd
lods
aas
std
dec
dec
mov
xchg
or
cmp
dec
jecxz
xchg
arpl
arpl
cmp
sub
scas
cwtl
in
ficoms
inc
stos
cmp
ret
les
and
fwait
leave
jno
outsb
loope
mov
dec
hlt
inc
aas
mov
jbe
and
adcl
int3
xchg
push
cs
xchg
rorl
and
sahf
pop
lods
jbe
xor
sar
or
stc
pop
inc
sahf
sbb
mov
in
add
push
in
xchg
sub
cmp
push
cwtl
test
jmp
add
mov
faddl
out
add
sub
mov
movsb
push
xchg
movsb
mov
rclb
sbb
xchg
push
test
xor
jecxz
mov
push
jp
sbb
loopne
ficoml
int
popf
stc
fmuls
and
xlat
xorl
scas
mov
dec
rcrl
or
nop
popa
mov
or
shlb
in
test
test
popf
push
scas
cld
test
cltd
and
mov
mov
dec
loope
pop
shrl
cmp
mov
orl
pop
xchg
jne
je
aam
ret
push
popa
push
pop
push
repnz
mov
aam
add
test
cmpsl
das
or
and
cmp
dec
sub
hlt
dec
lods
addl
dec
push
sub
sub
aas
sub
andb
in
lret
mov
xchg
out
daa
addr16
test
pop
incw
jnp
mov
pop
push
push
cmc
mov
sub
movb
out
fwait
inc
lea
mov
inc
cmp
imull
sub
mov
cmp
popa
pushfw
into
sarl
mov
push
stc
mov
mov
jno
dec
sbb
cli
out
stos
mov
mov
aas
shll
fisttps
cmpsb
stos
icebp
dec
adc
fidivrl
je
pop
out
nop
push
sti
pop
push
aam
mov
dec
popf
sub
fcoml
jnp
jb
inc
dec
mov
sbb
leave
mov
adc
jmp
pop
mov
pop
push
sbb
pmullw
int3
fiaddl
jbe
loope
xchg
jmp
push
aaa
adc
stos
push
xchg
mov
cwtl
bnd
add
lret
shll
les
movsl
mov
aas
jo
ds
sub
jnp
arpl
inc
xchg
and
push
push
shlb
cmp
jl
outsb
and
int3
dec
cmp
pusha
fidivs
mov
mov
pop
aas
jne
mov
pusha
icebp
sqrtps
or
mov
xor
xchg
fsubrl
add
add
xchg
jnp
or
idivl
or
dec
int3
ss
sub
jge
inc
rcll
cmp
pushf
mov
jbe
adc
sbb
inc
add
test
aas
in
lea
mov
pop
sbb
xor
in
cmc
push
pop
fidivl
arpl
push
mov
pop
or
or
adc
jae
pop
xchg
cld
jecxz
jae
and
xchg
lea
scas
cmp
fwait
movsl
in
ret
mov
int3
or
das
lea
adc
push
jbe
cmc
cmp
in
int
dec
cmp
icebp
push
add
popf
stc
xchg
pop
test
dec
movsl
int
mov
dec
mov
mov
push
into
leave
mov
adc
mov
pusha
push
daa
shlb
dec
and
test
add
xchg
cmp
sub
das
cmpsl
ss
cmp
cwtl
into
test
mov
mov
cmp
stos
fsubl
jl
push
or
scas
push
mov
mov
sub
int3
aad
js
and
fdiv
adc
push
jp
cmp
or
lea
lods
mov
pop
in
cld
nop
sbb
repnz
push
out
movsl
jge
cmp
mov
adc
dec
addl
orb
nop
dec
jecxz
sub
pop
outsl
jge
bound
mov
adc
push
cmp
push
test
fcmovb
movl
clc
pop
fadds
xor
imul
jno
insl
nop
pushf
mov
ret
in
ja
add
sub
xor
inc
mov
xor
adc
fists
xor
xor
sub
jae
dec
and
jge
ss
das
clc
rcll
pop
xchg
xor
inc
jb
xor
mov
mov
and
pop
lds
fmull
cmpb
inc
pop
int
daa
mov
inc
jne
cmpl
js
js
and
enter
scas
fbld
imul
sbb
xlat
mov
inc
push
jo
je
add
inc
dec
sub
mov
add
ljmp
or
pop
mov
sarl
nop
xchg
stc
std
mov
dec
mov
jnp
add
sbb
mov
addr16
js
sahf
testl
xchg
jnp,pt
xchg
loope
add
lds
xchg
sbb
outsl
sub
fcoms
sub
mov
mov
scas
cs
sahf
sbb
js
push
hlt
sarb
xchg
xor
xchg
sbb
dec
clc
movsl
mov
call
mov
fnstsw
repnz
jmp
ds
bswap
sub
pop
xor
addr16
lret
xchg
pop
data16
mov
cmpsl
in
sar
cmc
lods
dec
mov
pop
or
cmp
mov
inc
xor
xlat
leave
outsl
mov
fiadds
inc
fs
cmp
hlt
not
xchg
pop
sbb
orl
pusha
sbb
cmpsb
sbb
sub
adc
aad
iret
loope
jbe
out
cmp
outsl
outsb
incl
mov
mov
mov
sbb
add
and
dec
jge
xchg
ret
popa
inc
dec
jno
xchg
push
out
mov
xor
jne
add
cmp
push
repz
pop
add
adc
jne
stos
loopne
sbb
jmp
shlb
mov
xlat
jp
icebp
or
mov
pop
adc
test
jecxz
imul
insb
fidivrl
out
push
lahf
test
add
jle
cld
adc
insb
loop
fimull
stos
jecxz
ds
pop
pusha
push
adc
sbb
sub
jmp
and
sbb
and
ds
mov
dec
push
cmpsb
inc
xor
jge
xor
mov
dec
xchg
cmp
in
addr16
mov
adc
inc
xor
stc
adcl
jecxz
adc
dec
mull
push
mov
lahf
bound
add
or
jecxz
scas
jo
std
pushf
cmpsb
mov
or
and
sti
movsb
out
push
pop
push
jmp
mov
dec
sahf
push
and
xor
jl
push
shl
clc
sbb
popf
out
mov
jge
push
andb
pop
xor
jno
jnp
adc
mov
and
jne
add
fdivrl
xchg
pop
push
sub
bound
xor
rcrl
stos
movsb
inc
fdivs
sbb
push
push
or
lcall
data16
jle
test
aam
xor
adc
in
sub
out
jl
jg
push
pop
arpl
jmp
js
fistpll
dec
cltd
pusha
or
inc
cmpsb
adc
adc
popa
jb
sti
dec
mov
imul
addr16
popa
cmp
mov
lcall
js
push
fs
shl
out
lds
roll
add
mov
cmpb
xchg
cmpsb
mov
push
sbb
arpl
aaa
sbb
xchg
loope
jae
and
cmpsl
repz
jns
cmp
aas
sub
lahf
arpl
call
popf
mov
push
push
call
sub
mov
push
push
outsl
testl
or
push
scas
pop
jnp
mov
packssdw
inc
and
adc
sbb
jg
movsl
cli
out
insb
out
sbb
ficomps
xor
popf
xchg
adc
sbb
jns
push
loope
push
xor
in
push
scas
inc
lahf
mov
shl
xor
ret
xchg
add
popa
out
leave
sub
xchg
push
icebp
das
shll
or
inc
mov
lods
cld
jl
xchg
imul
adc
in
pop
lods
mov
lods
nop
sbb
sti
jb
inc
jo
shlb
call
lahf
inc
cmp
sub
add
cmp
mov
jl
cltd
fdivl
inc
sub
xorb
ljmp
xor
int
push
pop
loop
pop
cmp
mov
add
cli
iret
jnp
cwtl
andb
arpl
sbb
cld
sti
cwtl
mov
hlt
int
mov
call
mov
push
jne
je
xchg
call
mov
in
push
rolb
outsb
adc
fstpt
insl
jb
sahf
shl
push
daa
push
sub
add
pop
sub
jb
in
int3
inc
sub
cmpsb
es
sbb
xor
mov
add
je
mov
push
das
inc
rclb
in
add
cli
test
mov
mulb
sar
mov
pusha
push
scas
add
imul
or
scas
push
sbb
sub
adc
push
or
and
adc
dec
jge
iret
jmp
outsb
dec
push
push
push
int
and
popa
in
ds
and
fnstcw
outsb
cmpsb
mov
test
mov
into
out
xchg
fcoms
outsl
sbb
test
popa
sbb
mov
lods
fs
dec
fs
add
cmp
jb
mov
fwait
xor
or
int3
sbb
out
cmp
xchg
lea
stos
iret
aam
sub
xchg
xchg
rorb
test
pop
and
pushf
std
pop
dec
and
js
push
in
ljmp
xor
fs
in
fwait
dec
jb
imul
lret
adc
sub
aaa
gs
in
jbe
sbbl
fwait
test
jne
push
movsl
adcl
je
cmpl
jg
mov
mov
call
mov
mov
jns
adc
sbb
rol
mov
rorb
mov
ret
cmp
mov
in
mov
jmp
aam
xchg
movsb
cwtl
pushw
jbe
fadd
pop
fwait
movsb
jg
sub
mov
clc
mull
and
xorl
in
cmp
or
outsb
and
push
in
push
xor
cld
je
cmp
out
jbe
xor
inc
ficoms
cmpsb
and
sahf
cmp
adc
jmp
mov
and
mov
pop
mov
loope
cmpsl
frstor
test
sahf
pop
jp
out
mov
and
cmp
inc
cld
pop
push
sub
and
mov
or
fdivs
scas
or
rcll
jns
xchg
adc
mov
enter
push
cld
in
adc
jge
cmp
push
rorb
inc
stos
lcall
push
cld
test
sahf
adc
sbb
adc
push
add
inc
jne
cli
jae
hlt
aad
popf
push
push
xchg
mov
sbb
out
push
xchg
xchg
or
gs
xchg
mov
pop
lock
or
repnz
scas
mov
cli
mov
and
push
add
mov
cmp
in
lods
imul
imul
mov
in
xor
mov
in
sbb
xchg
ja
cmp
mov
or
cltd
mov
and
jge
inc
jnp
jp
pop
adc
aad
test
pop
dec
xchg
xchg
mov
jecxz
cmp
sahf
jne
enter
outsl
mov
dec
mov
fwait
orl
adc
dec
xchg
mov
jns
enter
cmp
outsb
pop
push
outsl
movsb
push
cld
fsqrt
inc
mov
in
lock
ds
lret
mov
sub
pop
sbb
in
or
into
mov
jle
cmp
adc
jnp
lcall
push
popf
xchg
cmp
adc
cwtl
fdivs
and
mov
les
mov
adc
in
and
stos
sbb
lea
dec
cmpsb
les
das
pop
bound
int3
adc
adc
out
pop
xchg
sub
xor
lcall
dec
adcb
clc
push
add
cld
in
or
push
dec
mov
xchg
jmp
push
xchg
jecxz
aad
lods
out
dec
lods
cmpsb
mov
movsb
call
sbb
icebp
mov
cli
jo
notl
rcrl
cs
adc
adc
test
ljmp
xchg
or
out
xchg
pop
xchg
std
pop
sub
cmp
add
test
fidivrl
or
cmc
cli
sbb
inc
sub
push
gs
jle
xchg
xchg
cmpsb
leave
mov
pop
jmp
dec
xchg
js
lds
cmpsb
mov
pop
loopne
jmp
mov
dec
mov
mov
cmp
sti
xor
fcos
xor
decl
pop
in
aaa
fmuls
scas
mov
adcb
cmp
ss
loopne
pushf
shr
pop
insl
mov
daa
das
shlb
pushf
inc
and
xchg
adcl
pusha
pop
pminub
pop
or
fildl
or
push
xor
test
inc
jns
sbb
fdivl
push
cmp
popa
roll
mov
out
or
repz
stos
shrl
dec
mov
pop
push
or
sub
add
repnz
xchg
push
insl
aas
adc
dec
cmp
test
jp
mov
xlat
pop
int
push
xlat
leave
mov
mov
mov
out
and
pushf
jae
in
jno
fwait
xor
pop
dec
mov
sbb
pop
jbe
cwtl
jae
cmc
shll
dec
or
fcoms
xchg
push
aaa
push
inc
mov
xchg
xchg
jecxz
fsts
cmp
sbb
bound
hlt
aad
lods
mov
outsb
std
pushf
adc
lret
mov
fwait
dec
inc
jne
mov
dec
jne
iret
cmp
push
or
mov
jnp
push
cmp
xchg
inc
mov
jb
bound
adc
clc
adc
iret
pusha
in
imul
cmp
and
out
pop
ss
pop
popa
push
xchg
mov
mov
adc
int
test
cmpsb
inc
imulb
ja
push
cmp
lock
push
fisubs
scas
xorl
and
xor
inc
or
stos
add
dec
add
jns
cmpsl
mov
imul
mov
pushf
call
mov
lds
je
mov
add
push
sbb
inc
subb
loope
dec
push
nop
test
ret
movsl
repz
mov
inc
push
lock
pop
ret
jne
cmp
ja
daa
mov
out
dec
jae
push
sub
xchg
mov
mov
cmp
sbb
pop
fimull
test
pop
lods
jecxz
test
or
movsb
push
rcl
movsl
stos
xchg
nop
aam
mov
xor
mov
jb
jle
outsb
xor
push
clc
dec
cmc
or
adc
fistps
stos
movsb
mov
and
repz
fs
scas
inc
jae
adc
int
dec
push
negb
sbb
movsb
lock
std
icebp
mov
inc
rorb
pop
push
mov
les
shll
or
out
inc
xchg
out
cmp
arpl
mov
or
and
repz
and
xor
dec
jno
negl
lea
mov
mov
imul
out
shlb
std
or
adc
ja
mov
test
xchg
push
push
sbb
or
movb
test
fildl
xor
dec
aad
mov
jp
jp
mov
dec
cmp
lret
jae
fwait
adc
out
aam
sub
in
aam
dec
push
jmp
es
dec
push
push
mov
fidivs
push
adc
xchg
dec
and
add
ja
and
nop
iret
popa
sub
adc
xchg
std
add
popf
pop
icebp
jbe
sbbl
in
xchg
cltd
loope
mov
push
and
jge
mov
ja
xchg
data16
add
pop
addr16
sbb
repz
mov
jecxz,pt
adc
in
push
push
iret
dec
jne
daa
cltd
sbb
mov
in
cmp
or
pop
hlt
insl
push
and
jnp
out
mov
leave
sub
sub
inc
push
aaa
fildll
js
dec
sub
and
jns
inc
loopne
in
add
ss
inc
aas
xchg
sbb
cli
jne
xor
js
int3
dec
sub
lods
inc
sarl
lock
cs
je
icebp
popf
push
sbb
add
or
mov
ja,pt
icebp
xor
jbe
cmp
push
mov
cmp
jno
xchg
xor
pop
push
lea
ja
loopne
outsl
pop
into
sbb
push
mov
outsb
xchg
dec
out
repz
mov
push
or
int
mov
mov
add
sub
leave
jbe
gs
xchg
rolb
insl
fstpl
push
fildll
cltd
push
test
outsl
mov
inc
iret
mov
sub
jg
mov
ret
inc
pop
sbb
fistpl
mov
cs
cld
mov
mov
sbb
lret
into
or
cmp
test
out
aas
jecxz
daa
out
ss
bound
mov
ja
inc
sbb
gs
fstl
lds
out
sbb
adc
sti
clc
push
sub
test
mov
movl
xor
mov
cli
ficompl
lcall
or
les
pop
inc
daa
les
sti
popa
ss
imul
bound
add
sub
jecxz
push
pop
lret
pop
jg
mov
push
cmp
stc
shrb
loopne
xor
adc
xor
push
icebp
push
mov
xor
in
enter
addr16
adc
inc
addr16
mov
fisubl
dec
imul
and
and
call
push
pop
add
leave
test
push
aas
or
enter
mov
xchg
mov
jb
js
imul
mulb
push
xchg
leave
cld
jns
fmuls
mov
push
pop
negl
ds
aad
push
push
pop
ljmp
mov
pop
pop
mov
leave
jae
jne
hlt
jge
popa
mov
cmp
xor
and
shrb
loope
mov
mov
inc
daa
push
inc
inc
push
nop
pop
cmp
mov
popf
cli
in
mov
mov
pop
pop
lea
mov
in
xor
push
add
cli
shll
mov
lret
fstpt
or
rcrl
iret
jae
mov
or
lea
xorb
and
jbe
std
cmpsb
jle
and
iret
pop
movsb
mov
sbb
int3
gs
xor
adcl
pop
cmpsl
das
xor
xlat
cmp
aad
mov
jo
push
or
in
jecxz
mov
xchg
popa
ljmp
jo
cmpsb
xchg
push
dec
fidivrl
imul
mov
incb
push
mov
push
or
or
jnp
sub
xchg
scas
loope
fisttpl
aaa
cmpsb
mov
jecxz
inc
orb
bswap
aas
and
and
push
fcmovu
inc
jo
mov
sar
idivb
push
jb
dec
or
lcall
fwait
mov
mov
dec
mov
aas
outsl
into
clc
mov
xchg
sarl
divb
pop
ljmp
in
idivb
inc
pop
enter
jecxz
dec
dec
out
sub
ljmp
out
cmp
outsl
sbb
ret
dec
mov
nop
fimull
mov
idiv
ljmp
sti
cs
maxps
push
cld
push
push
int3
aad
jmp
sbb
push
insb
dec
imul
outsb
call
jne
mov
pop
int3
push
repnz
add
movntq
out
cmp
movb
outsb
pop
mov
sbb
cmpsl
cmp
dec
mov
ret
adc
dec
or
stos
bound
shrl
sahf
adc
push
dec
push
cmp
loop
hlt
lods
sub
cmp
mov
sti
hlt
rcr
push
push
cmp
jae
ss
fstps
repz
xchg
sub
dec
orb
inc
add
loopne
mov
mov
mov
dec
rcl
subl
outsl
lret
stos
add
cmp
or
lock
push
in
jle
jmp
fistpll
mov
outsb
jle
imul
jnp
and
das
addr16
jo
je
xchg
jg
in
fists
push
cwtl
add
sub
xchg
pop
in
pop
cmc
out
or
push
mov
call
jg
push
push
in
push
push
push
push
mov
repnz
jae
loope
inc
cmp
std
mov
cmp
xor
push
mov
sub
lea
insl
sti
into
sub
mov
lahf
in
sub
icebp
sbb
pop
stc
jmp
jecxz
mov
insl
inc
int
pop
cmp
ljmp
arpl
in
mov
loop,pn
mov
xor
cld
mov
sub
sbb
mov
dec
mov
pmuludq
mov
test
test
cwtl
adc
add
loop
lret
adc
fisttps
adc
imul
das
cmp
cmp
mov
jmp
pop
inc
dec
movsl
mov
jo
loope
sub
cltd
add
sub
xlat
xor
xlat
stos
mov
xor
jbe
mov
in
push
dec
in
ljmp
mov
nop
out
jb
push
jnp
fwait
xor
nop
jne
xchg
and
xor
popa
jns
orl
add
pusha
fnstenv
test
push
loope
cwtl
lret
xchg
dec
jle
inc
cmp
cs
and
rsm
dec
repnz
out
enter
and
jo
ljmp
stos
or
mov
ss
mov
mov
shrb
sbb
push
or
dec
add
into
aam
adc
out
sub
out
push
popf
mov
mov
jns
testl
outsb
nop
insb
leave
movsl
shrb
or
mov
lock
push
xor
inc
and
stos
mov
add
sbb
and
cmp
cmp
fsubrs
adc
bound
imul
jecxz
sub
add
ds
mov
fcoms
leave
sahf
mov
dec
in
mov
xor
adc
aaa
sub
int
pop
aam
mov
in
mov
inc
push
and
or
hlt
mov
sub
sbb
pop
xor
push
jp
mov
ljmp
je
std
xchg
inc
push
insb
outsl
or
dec
shrb
cmp
push
inc
stos
insl
addr16
movsl
jecxz
pop
push
xor
jns
pop
int3
lahf
pop
sbb
add
pop
push
or
imul
repnz
xchg
movsl
mov
adcl
cmc
sub
xchg
add
aas
mov
mov
mov
mov
sub
sarl
or
test
test
xchg
sbb
mov
cmp
stos
and
pop
jge
and
lcall
dec
xchg
js
xlat
stc
xchg
inc
notl
idivb
mov
lcall
or
lahf
rcrl
test
cwtl
data16
enter
rclb
loope
mov
test
fmuls
insb
rcrl
in
sbb
push
fadds
je
loope
lds
dec
sub
data16
sbb
cmpsl
mov
test
insl
pop
sub
fwait
pusha
jne
or
fwait
movsb
mov
inc
push
jne
jae
push
jb
clc
pop
rcrl
dec
push
js
ss
inc
jg
cli
ficoms
sbbb
outsl
nop
fcoms
insl
je
daa
sti
sub
sbb
iret
jns
bound
xchg
jmp
xchg
sbb
sbb
clc
jg
push
fstpl
mov
adc
aas
ss
pop
sbb
add
lea
inc
lods
add
loope
aad
cwtl
push
jno
pop
lcall
inc
jl
enter
dec
fnstenv
movsl
repz
sbb
push
mov
ficoms
pop
jns
or
add
mov
loope
test
cs
and
and
icebp
sbb
leave
mov
sarl
aam
dec
scas
cmpsl
mov
push
bound
cmp
adc
aas
imul
leave
adc
subb
pop
int
insl
xchg
mov
std
mov
sbb
gs
pop
rclb
dec
cmpsb
shr
mov
movsb
bound
bound
cs
mov
aad
loope
xchg
jg
mov
addr16
sub
or
inc
cld
sti
fisubrl
inc
int3
repz
mov
xchg
repnz
jo
jg
pop
pushf
daa
xchg
cmp
sub
shrb
fxam
scas
cmpsl
cld
push
xchg
test
jnp
jns
sbb
push
or
sarb
scas
insb
dec
rcll
cmp
lea
movsb
sbb
mov
in
mov
xchg
and
fwait
addb
ja
mov
fnstenv
rcrb
sub
adc
and
aas
sub
mov
or
fistl
sbb
mov
insb
xor
loop
and
lahf
hlt
sbb
fbld
push
push
out
rclb
jmp
push
mov
or
lret
pop
popa
and
addr16
shll
pop
dec
xchg
inc
xchg
aaa
jmp
and
sub
out
rcl
pop
lret
in
cmp
xchg
fwait
dec
xchg
push
jp
xor
addr16
addr16
sarl
or
es
mov
dec
mov
test
fisttpll
jp
shll
stc
insb
or
sbbl
cmp
jg
je
inc
popf
out
fnstcw
loopne
stos
lret
mov
cmc
movsl
push
stc
arpl
cmp
xor
dec
lret
cld
sbb
pop
cmpsb
jl
out
push
clc
aam
data16
and
lcall
leave
add
inc
cmpsb
ret
sti
insb
popf
mov
shll
insb
out
dec
call
dec
adc
mov
movb
sbb
pop
lahf
into
in
fdiv
in
adc
jge
xchg
sbb
xorl
adc
mov
sbb
mov
andb
ss
adc
or
or
lds
adc
fadd
icebp
loope
adc
inc
pop
mov
jge
ljmp
inc
mov
pop
xor
pusha
repnz
sbb
ror
gs
mov
push
js
mov
mov
int3
or
stc
popl
xorb
sti
xchg
mov
jp
nop
add
fisubrs
pop
int3
inc
fwait
mov
mov
leave
addb
push
addb
xor
repz
ret
mov
testl
in
jbe
ficoml
jp
mov
pushl
lods
aam
enter
fdivl
imul
js
xchg
aaa
shlb
xor
shll
adcl
fwait
aad
sbb
xor
aam
pop
inc
ljmp
add
or
push
cmp
insb
sti
mov
sbb
add
push
imul
cmp
cwtl
add
std
jno
nop
ret
mov
addr16
add
sub
repz
popa
jl
mov
xor
sahf
xlat
sub
stos
add
inc
in
or
sub
lret
iret
jge
pop
into
fildl
outsl
daa
sbb
popf
lret
imul
in
pop
mov
cmp
jo
mov
int
ficomps
pop
pop
inc
and
les
adc
in
mov
sahf
imul
lret
dec
and
mov
push
push
xlat
xor
mov
mov
pop
icebp
int
or
mov
push
aaa
pop
aaa
xor
cmc
aam
xor
mov
xlat
repnz
xor
shlb
notb
rclb
push
mov
divl
inc
mov
lahf
fiadds
mov
pop
js
js
adc
lahf
shr
cmp
imul
push
dec
or
cmp
cmpsl
adc
add
mov
mov
push
mov
sub
push
scas
lock
sbb
xor
out
outsl
inc
sbb
out
loope
rsqrtps
dec
pushf
sbb
adc
dec
cmpsl
or
mov
lret
lock
scas
lcall
lret
das
push
jb
adcl
out
fwait
xchg
dec
in
mov
cmp
loope
xor
cmp
fiaddl
sub
cmp
dec
inc
or
push
rclb
aad
mov
push
popa
lock
and
mov
cmp
cld
imul
outsl
pop
in
stos
mull
ror
mov
cmp
lock
add
dec
shll
mov
in
pop
pop
pop
xor
jecxz
xchg
add
jle
addb
rclb
sub
repz
movsl
adc
adc
adc
jp
and
sbb
or
or
add
mov
add
and
lds
imul
cmpsl
fcmovnb
jno
into
call
inc
mov
ss
daa
jmp
xor
je
out
call
daa
push
inc
out
mov
mov
and
jle
pop
std
dec
sbb
rcl
test
popf
ss
pop
in
cmp
inc
xor
loopne
adc
mov
jbe
ficoml
shr
popa
push
xchg
es
and
in
out
mov
push
jnp
jae
push
aam
test
cmp
mov
pop
adc
popa
push
pop
sbb
add
icebp
mov
and
xor
mov
scas
aam
dec
sub
add
adc
aam
sub
xor
stos
mov
sti
inc
fbld
mov
andl
call
lds
cwtl
lret
in
arpl
fnsave
cmp
pop
push
insl
sub
inc
test
lcall
test
inc
scas
call
push
loope
stc
dec
cmc
ja
sahf
cmpsb
adc
rol
jne
enter
incl
aad
jnp
jp,pt
mov
dec
xchg
dec
or
enter
addr16
push
jecxz
ds
xchg
cmc
aad
dec
add
stos
xchg
aas
push
jmp
fdivs
insb
test
push
icebp
fsts
adc
mov
into
int3
in
out
hlt
outsb
jno
stc
fninit
cmpsl
daa
mov
jo
movsb
mov
add
shll
mov
dec
add
add
enter
test
push
test
adc
add
aaa
mov
push
push
lock
push
sbb
scas
mov
aam
lret
mov
pop
jnp
imul
and
cli
jne
mov
shll
aas
mov
mov
inc
push
mov
jns
mov
adc
xchg
fdivs
outsb
in
cli
js
xchg
push
inc
popa
int
adc
loope
cwtl
out
push
es
pop
sahf
adc
clc
mov
gs
xchg
jle
cmp
inc
cmp
or
fucomp
pop
fmull
or
fisttpl
lods
insl
adc
pop
mov
mov
das
outsb
shlb
and
call
gs
jnp
xchg
mov
les
push
cmp
jmp
push
pop
xlat
mov
mov
sub
into
outsb
in
xlat
lods
fdivr
sbb
or
lahf
dec
and
out
in
flds
lods
jl
inc
fdivrs
mov
fwait
push
push
fstpt
or
xchg
mov
add
ds
ret
jg
sbb
mov
gs
das
bound
imul
jmp
mov
aaa
cmp
adc
sub
push
cmp
or
fldt
and
test
rcrb
lods
rcrl
fisubl
dec
inc
les
gs
xorb
xor
inc
push
mov
push
lcall
lea
sarb
or
mov
cmpsb
pop
lods
dec
mov
jmp
movsl
insl
pop
mov
dec
subl
add
fsts
rorb
movsl
ljmp
mov
and
dec
fwait
dec
rclb
inc
xchg
lods
movq
out
aaa
dec
fs
mov
stos
dec
outsl
hlt
sbb
call
lret
fwait
call
jg
pop
jg
out
push
jae
lret
mov
lea
shll
sbb
sub
mov
mov
or
add
subb
sahf
push
rcl
and
test
push
adc
lcall
mov
add
lea
mov
xor
jae
loopne
jne
push
mov
fcomps
cli
inc
out
scas
adc
pop
lods
adc
jae
pusha
and
pop
adc
sbb
out
push
xor
out
mov
adc
cmp
jle
aad
sbb
lcall
int
mov
inc
jle
xor
nop
xchg
imul
mov
inc
push
push
pop
cmp
add
and
xor
filds
mov
sti
jmp
mov
enter
gs
xor
adc
data16
pop
sub
repz
sarb
sbb
and
orb
cmp
enter
push
sbb
fcoml
mov
and
mov
pop
in
cld
jns
pop
aad
imul
neg
adc
adc
ror
jbe
sub
or
jl
adc
sub
xor
push
hlt
dec
or
retw
aaa
arpl
daa
fisubrl
jle
rcrl
jle
mov
cltd
insb
outsb
mov
in
andb
mov
bound
mull
in
xor
push
pop
pop
dec
xor
or
in
dec
and
dec
push
xchg
mov
cwtl
leave
aad
arpl
pop
xchg
shrb
mov
js
jp
or
and
mov
je
push
outsl
xor
into
xor
cs
cs
out
rol
sbb
mov
mov
jmp
jns
cli
xchg
movsl
int3
mov
xor
inc
push
pop
pusha
shll
data16
arpl
push
mov
cmpsl
sbb
scas
in
xor
mov
out
xorl
icebp
and
jb
inc
fistl
jle
cmpsl
scas
je
cwtl
inc
shll
cli
loope
xchg
or
ds
inc
je
xadd
mov
sbb
cmc
lea
inc
in
mov
adc
xor
repnz
pusha
mov
fiadds
xchg
inc
sbb
repz
xchg
sub
mov
push
or
faddl
fldt
jb
adc
jp
inc
and
hlt
mov
sub
mov
push
xchg
jge
sarb
adc
xchg
jae
das
lret
xor
cmp
call
gs
sbb
test
fists
sbb
je
push
mov
popf
out
mov
fwait
mov
push
cli
movsl
insl
notb
or
inc
and
popa
pop
outsb
or
dec
ret
mov
cmc
pop
repnz
mov
sti
insb
test
or
aad
xchg
jns
movsb
jns
jle
jno
xor
lods
shlb
mov
mov
sbb
stos
icebp
cwtd
loop
mov
push
pop
imul
aaa
test
bound
jge
sbb
into
and
mov
and
dec
out
movsb
lret
xor
dec
jne
fmul
mov
push
stos
dec
ror
xchg
test
inc
cs
and
je
ds
clc
movsl
mov
out
mov
xor
push
movsb
popf
sahf
aad
push
test
loopne
rcl
mov
jno
or
inc
ror
cs
pushf
iret
test
cmp
push
mov
shll
xchg
pop
sub
sbb
mov
test
inc
cmp
add
gs
jne
inc
mov
lret
mov
aas
cwtl
and
je,pn
icebp
dec
mov
xor
lahf
faddp
add
add
cmc
xchg
out
les
mov
jecxz
push
add
mov
adc
or
xor
push
jge
push
pop
fcoml
add
lahf
add
fwait
mov
and
nop
rorl
mov
push
sti
inc
in
das
jp
mov
add
js
sub
enter
leave
notl
dec
dec
stc
pop
and
fildl
mov
test
push
fisttpl
stos
ret
out
jbe
daa
lea
fwait
and
mov
cmp
inc
repnz
out
stos
je
lcall
jmp
dec
loop,pn
shlb
adc
daa
das
aas
sbb
movsb
int
outsl
xchg
push
xor
mov
cwtl
pusha
je
mov
cmp
setle
mov
or
cmc
xchg
jnp
cmp
mov
faddp
repz
imul
dec
adc
jge
pusha
data16
inc
sbb
xchg
gs
jp
xchg
movsl
pop
scas
mov
jmp
push
jmp
fcoms
enter
add
pop
stc
adc
add
mov
ljmp
sub
cmp
push
lea
iret
pushfw
rol
sti
inc
insl
out
cmpsb
push
inc
and
les
inc
pushf
das
daa
pop
sub
adc
mov
fwait
mov
daa
xor
xor
imul
pop
popf
pushf
shll
xor
int
movsb
or
adc
dec
xchg
sbb
pop
xchg
pop
je
push
inc
mov
cmp
ljmp
push
shrl
lahf
jge
sarl
cmpsl
cld
and
jb
std
test
or
mov
sbb
enter
lahf
loopne
mov
xor
push
pop
std
cmp
xchg
mov
or
pop
jp
cmpsb
mov
sbb
out
cmp
outsl
jge
dec
mov
je
addr16
adc
or
mov
pop
mov
pop
jo
rcll
js
xor
out
cltd
jmp
or
orb
dec
mov
outsl
pop
in
mov
jmp
mov
jnp
mov
addb
pop
cld
pushf
sbb
ficoml
outsl
inc
push
pop
les
inc
pop
shlb
sub
std
ljmp
xchg
jp
push
jno
add
mov
fisubrl
cmp
inc
add
add
mov
in
pop
xor
mov
mov
inc
out
dec
rcr
movsl
rorb
mov
std
cmc
or
in
cld
push
pop
out
dec
sbb
mov
push
test
jge
sbb
xchg
jecxz
movsb
mov
mov
clc
mov
incl
arpl
push
add
lods
mov
xchg
push
popa
out
pop
xlat
pop
jl
sbb
mov
and
into
add
leave
inc
sbb
xchg
pop
mov
paddq
mov
addr16
ret
dec
mov
loope
add
mov
daa
adcb
fimuls
push
mov
jecxz
out
rcr
les
ret
lea
sbb
pop
jg
xchg
xchg
cmp
aad
xchg
xor
loop
xchg
jge
jecxz
or
xor
xor
out
adc
jmp
mov
adc
cmp
repnz
add
iret
stos
shrb
jne
scas
pushf
shll
sbb
imul
push
jb
bound
cli
mov
mov
mov
pusha
or
mov
jo
jmp
jb
enter
cmp
mov
lcall
sub
lret
repnz
dec
inc
lret
neg
sbb
adc
adc
inc
xor
dec
aas
rcll
insl
lret
dec
add
and
lahf
ja,pn
sahf
push
push
or
clc
das
ss
jo
scas
test
ret
outsl
ljmp
inc
pop
or
lea
adc
movsl
xor
pop
call
xor
jecxz
movsb
sbb
xchg
push
mov
cli
clc
into
inc
mov
and
mov
xlat
push
dec
pusha
jno
incb
jmp
mov
addb
jo
scas
jno
ret
adc
or
stc
lret
push
dec
sahf
rol
xchg
aaa
jle
cmp
out
scas
lods
fldt
xchg
add
rcrl
push
ret
imul
or
cmpsb
xchg
cmp
fisubl
les
popf
jg
or
ss
rcl
scas
inc
jecxz
scas
mov
inc
ds
inc
xchg
mov
sti
jns
sub
and
lret
data16
out
dec
pusha
js
cbtw
jno
or
xchg
mov
lcall
dec
or
aam
adc
insb
popa
and
pop
dec
mov
lahf
in
mov
jo
sbb
jb
pop
fs
sbb
subl
push
divl
mov
imul
or
aaa
icebp
or
mov
jmp
jge
cwtl
xchg
and
imul
int3
adc
add
lcall
xchg
mov
add
jle
out
mov
lea
mov
stc
lods
adc
inc
shrb
mov
xor
fistps
push
mov
mov
pop
addl
and
jns
pop
and
inc
jne
xchg
fwait
pop
fldenv
data16
movsl
pop
mov
hlt
iret
subb
push
outsl
add
popa
pop
mov
mov
lds
pop
and
ja
inc
jne
ljmp
mov
sub
inc
fmull
xchg
and
shl
int3
leave
fisttps
add
jecxz
cmp
inc
jno
setle
addr16
data16
sbb
or
sub
test
test
xchg
std
rcrl
pop
add
add
inc
je
push
push
bts
or
scas
lret
rorb
xor
lea
mov
jnp
mov
test
inc
sbb
lods
add
xchg
adc
mov
std
jg
and
sarl
dec
and
ret
jg
jecxz
pop
xchg
and
fwait
xor
stos
xchg
cmp
xchg
mov
sbb
scas
mov
cs
out
mov
cmp
push
sbb
rcll
jp
jo
sub
lret
cmpsb
ja
out
xchg
jl
and
in
mov
xor
pop
adc
outsb
sub
andb
in
test
scas
fisubrl
jp
xchg
popa
mov
ja
xlat
cmc
pop
test
mov
jno
xor
or
or
push
add
pusha
xlat
aad
incb
add
pop
int3
sbb
mov
mov
dec
repz
inc
or
loop
mov
xchg
lds
pusha
insb
incb
call
ja
sbb
inc
mov
xlat
mov
mov
lds
sub
xorl
mov
repnz
and
xor
insl
push
in
dec
int
xchg
int3
mov
fidivs
push
push
dec
roll
push
push
lock
negl
add
xchg
lods
rcll
pop
lock
adc
xchg
xorl
mov
test
pushf
shll
sub
ljmp
push
dec
imul
sub
xchg
push
jo
loop
sub
in
jg
inc
add
jns
mov
push
imul
outsl
cwtl
nop
push
enter
push
lds
mov
jmp
leave
fcmovb
inc
pop
scas
xchg
xchg
xor
push
or
mov
subl
adc
outsb
sub
lods
add
mov
aaa
dec
int
aaa
pop
fsubrs
add
fiaddl
icebp
mov
jp
cmp
xchg
mov
mov
imul
xchg
fwait
dec
mov
xchg
lahf
cli
shlb
dec
dec
pop
jecxz
pop
je
ds
inc
sbb
add
mov
and
gs
scas
jmp
je
loop
lock
fldt
xor
lds
xchg
jne
push
xor
outsl
jp
sub
aam
dec
sub
insb
imul
sub
xlat
mov
cwtl
adc
and
leave
adc
addl
daa
mov
cmp
push
inc
loopne
inc
lret
push
sbb
clc
sub
arpl
mov
dec
mov
add
inc
mov
dec
je
mov
popa
test
pop
push
insb
add
inc
sbb
sbb
test
scas
and
jo
cmp
pop
and
xchg
and
add
iret
pop
pop
or
pop
mov
cmpl
push
into
or
out
pop
ret
mov
jne
lds
cld
inc
dec
ljmp
cmp
mov
lret
push
test
add
mov
dec
pop
in
icebp
fbstp
ss
in
and
xor
aam
mov
icebp
jp
or
popf
add
je
out
inc
mov
addr16
sbb
dec
sarl
pop
test
pop
xor
adc
mov
imul
or
push
dec
jp
mov
mov
jmp
fsubr
gs
jnp
cs
or
push
mov
stos
loope
push
mov
aad
mov
loopne
xchg
pop
jno
and
cmp
out
into
add
push
pop
pop
imul
xchg
lcall
inc
scas
sub
xor
cmp
ret
fcompl
adcb
dec
jno
in
sbb
adcl
sbb
mov
or
out
shrb
leave
inc
pop
xchg
test
sub
or
loopne
pushf
insl
pushf
pop
sub
aam
jle
out
ror
or
cli
xchg
jp
mov
sub
or
inc
jmp
sbbl
call
push
into
jb
push
xor
fildll
sub
outsb
xor
lcall
subl
mov
jnp
pop
loopne
jge
das
sbb
gs
mov
out
addr16
inc
outsl
in
mov
mov
leave
sub
arpl
fidivrl
fiaddl
inc
mov
lea
les
lds
out
push
push
in
and
sub
shrl
pop
aaa
idivl
loop
nop
scas
pusha
sti
sub
std
insb
mov
scas
fadds
ja
mov
ds
inc
sbb
mov
insb
jmp
xchg
lods
mov
out
ret
loop
popa
loope
push
popf
ljmp
sti
push
rorb
or
arpl
mov
pop
adc
mov
repz
pop
repnz
popa
sbb
out
cmp
push
mov
aam
push
out
dec
into
sbb
cmp
xchg
dec
aas
sbbb
cltd
fcompl
nop
add
insl
repz
pop
dec
push
sub
lods
stc
shl
ret
cld
mov
or
movsb
out
cmp
mov
push
jnp
sub
mov
inc
movsb
testl
lret
adcl
hlt
sbb
lcall
adc
fistpll
out
sub
decl
outsb
cmpsb
aaa
enter
insb
int3
pop
aaa
fs
mov
sub
mov
ud2
adc
nop
jno
popa
loope
mov
ss
dec
cmp
fdivr
jl
mov
or
rorl
and
lea
sub
iret
cwtl
mov
pop
imul
mov
or
mov
fistpll
lret
xchg
cmp
andb
xorl
shr
lahf
dec
test
outsl
mov
adc
sbb
pop
adcl
jne
mov
sbb
inc
mov
jnp
mov
xor
idivl
sbb
xor
mov
repnz
mov
mov
sahf
pop
mov
std
adc
pop
mov
aam
or
es
cmpsb
push
cmp
mov
out
out
pop
xchg
sbb
mov
add
int3
xchg
adc
jo
fwait
mov
or
or
cmp
inc
jge
in
adc
in
jo
ja
push
push
or
pusha
out
lahf
fisttpl
lea
add
jns
icebp
out
inc
sbb
mov
cmp
xchg
sbb
push
nop
push
sub
stos
imul
cmp
inc
and
sub
ficompl
out
xchg
jecxz
cwtl
mov
in
xchg
cmp
test
jb
test
movsl
lret
mov
sbb
cmp
sub
icebp
add
ds
mov
addr16
sub
lret
adc
lods
jg
outsb
sarb
pop
jl
in
cli
stc
movsb
dec
cwtl
xor
lods
pop
loopne
jp
adc
or
scas
mov
xchg
and
jne
rorl
cld
int3
cs
cmc
adc
and
popa
movsb
inc
jnp
hlt
xor
sub
out
jl
in
add
mov
shrl
stos
sbb
sbb
imul
mov
ret
rcr
outsb
jl
jae
rolb
pop
hlt
xchg
mov
in
inc
inc
xor
mov
inc
push
add
and
cmc
push
cltd
fs
or
and
ror
bound
adc
scas
or
shll
mov
xor
dec
jne
test
fsubp
js
cmp
aad
mov
lods
movsb
aam
fs
jo
mov
jle
adc
and
jno
insl
adc
cld
xchg
or
sub
jmp
pandn
jnp
stos
ret
or
cwtl
lea
xchg
roll
push
adc
dec
pop
rclb
lahf
ljmp
mov
pop
add
loopne
into
mov
testb
test
jae
pop
or
adc
adc
data16
aad
push
ret
mov
and
add
xlat
cmc
cwtl
pushf
cltd
or
daa
dec
loop
fwait
js
imul
pop
adc
out
mov
sbb
pop
and
je
in
in
pop
push
sbb
pop
mov
push
mov
pop
push
test
je
adc
inc
adc
cmpsl
adc
sbb
and
movsb
in
jo
into
xchg
xor
popf
loopne
add
and
data16
test
outsb
pop
push
pop
shll
jg
addr16
or
push
cwtl
aas
into
fsubrl
cltd
lret
cmpsb
push
mov
in
fimuls
mov
lock
and
cmc
xchg
mov
fildl
mov
inc
aas
adc
stos
in
iret
inc
lods
cmpb
add
pop
or
hlt
and
lock
inc
push
pop
push
xchg
adc
jne
push
sub
mov
scas
cmpb
pusha
dec
fwait
rcll
pop
adc
imul
jnp
mov
fldenv
std
sub
std
cmp
xlat
call
sub
cmc
sti
add
mov
bound
jmp
setnp
loope
addr16
movsl
mov
push
jae
testl
add
outsb
cmp
cmpsb
adc
out
imul
mov
mov
pop
dec
xor
dec
jl
loope
push
pop
std
inc
mov
out
fldl
popf
mov
aad
mov
adc
int3
data16
jp
in
leave
sbb
movsb
cli
mov
lea
mov
xchg
sub
lds
or
xor
daa
or
insb
sub
testl
cmp
dec
scas
dec
ljmp
out
out
lea
add
jl
insl
and
mov
adc
or
and
rclb
and
xor
fwait
popw
fbstp
rolb
std
es
repnz
jne
ds
push
mov
cmpsl
mov
xor
or
or
or
rcrl
push
inc
leave
scas
dec
mov
nop
xor
incb
test
xor
jae
dec
pop
add
in
jae
inc
adc
setnp
cmp
cmp
cmpsl
sub
fs
imul
loope
pop
xchg
add
addr16
sbb
jl
pop
testb
add
push
cli
or
mov
lock
or
push
push
mov
mov
and
xchg
xor
pop
popl
xchg
loope
inc
mov
mov
adc
fisttpl
mov
in
bound
mov
pusha
je
rclb
pushf
xchg
hlt
jae
fnstenv
rorb
outsb
pusha
add
jmp
push
jmp
mov
jge
cltd
xchg
addl
fisubrs
pop
pop
push
test
pop
mov
rolb
ja
or
stos
stos
outsb
inc
in
inc
mov
lcall
or
mov
cmpsb
xchg
cmc
and
add
xchg
leave
outsl
andl
pusha
xchg
mulb
je
add
mov
jmp
jb
jg
mov
xchg
push
mov
or
fadd
xlat
push
jbe
or
iret
rolb
pop
aaa
mov
lahf
jno
add
jbe
test
jmp
jnp
push
push
push
add
ret
pop
jl
push
xchg
ljmp
lea
jo
and
sub
jnp
xor
and
dec
push
push
push
gs
inc
cli
les
pop
cmpsb
pushf
testb
stos
dec
dec
mov
imul
cltd
fcomps
pop
push
test
mov
sub
gs
jnp
ljmp
in
push
cmp
jp
cmpsl
or
pop
jns
add
js
xchg
xchg
addr16
and
mov
jnp
lock
jae
fs
push
cwtl
sub
lret
push
loop
add
sbbb
xchg
cmp
push
js
and
dec
movsb
xchg
std
xlat
push
ljmp
sbb
mov
xchg
bound
and
fbld
das
mov
push
je
push
or
push
jno
mov
mov
mov
sub
out
fwait
and
out
pusha
call
bound
fs
xchg
std
sub
xor
mov
mov
pop
or
stos
movsl
sbb
cld
pop
fcoms
and
movsl
int3
push
or
insl
lcall
scas
dec
incb
bound
pusha
sti
pop
mov
cmp
or
jo
sbb
lods
adc
adc
mov
imul
shll
and
add
cmp
hlt
push
jle
movsl
xchg
stos
test
pop
sbb
add
rol
int
jbe
add
xor
inc
push
jg
xor
cmpsb
dec
mov
xor
adc
leave
add
sbb
shrb
pop
pop
or
push
add
mov
pop
imul
xor
lods
ror
and
adc
dec
rclb
cmp
dec
jb
movb
dec
push
mov
cmp
push
leave
xor
mov
xor
xlat
push
or
push
cs
fdivrp
outsb
dec
mov
nop
mov
xchg
inc
daa
mov
mov
mov
sbb
iret
and
sbb
loop
jnp
pop
sbb
test
hlt
outsl
cmp
lcall
fistps
mov
jno
fcoml
pushf
lcall
or
push
ds
shlb
mov
icebp
jle
inc
mov
je
and
cmpsl
adcl
sti
mov
cmpsl
cmp
and
mov
sbb
cmp
mov
sub
xorl
push
aad
mov
insl
rolb
xor
outsl
cmp
push
sbb
adc
xchg
mov
lret
pop
in
das
push
data16
mov
cmovae
mov
inc
xlat
movsl
mov
addr16
clc
jg
mov
xor
jecxz
xchg
inc
cmp
mov
pusha
inc
out
mov
outsl
mov
ficoml
jbe
sti
shr
and
insl
mov
sub
mov
lds
pop
add
insl
fstl
fadd
xor
lret
test
std
and
mov
cmp
es
ret
int3
pop
cmp
mov
icebp
icebp
sbb
xor
ret
fsubrl
int
xor
xor
mov
fimull
aam
sarb
cwtl
shlb
pop
push
sbb
lea
mov
push
les
and
shlb
mov
pop
les
xchg
leave
and
cmc
fisubrl
push
mov
dec
push
out
xchg
xor
xchg
icebp
popa
adc
cmp
mov
push
fsubrl
arpl
int
and
scas
out
insl
xchg
cmp
or
cld
push
iret
xchg
mov
repz
push
mov
ret
pusha
sti
push
lock
mov
sub
sub
adc
es
jmp
xor
call
adc
imul
pop
into
push
shl
call
ja
adc
pop
add
and
push
lret
xor
cltd
jae
mov
xchg
orb
sti
ss
jle
insb
ret
data16
jo
mov
pop
mov
stos
mov
xchg
cmp
jle
cli
ja
dec
sar
test
repz
mov
js
cmp
lret
xor
cmp
pop
mov
mov
jns
jbe
in
push
and
int
icebp
sub
cmpsl
adc
outsb
or
mov
dec
cmpsb
add
jle
jp
pop
and
jg
xchg
mov
xchg
inc
jl
leave
addb
lock
and
xchg
pop
movsl
into
dec
sarl
pop
jno
scas
mov
bound
mov
sarl
iret
lds
loope
test
ret
dec
jmp
cmp
cmpsl
xchg
mov
das
jno
or
push
xchg
dec
movsb
add
pop
shl
dec
test
add
or
stos
rorl
inc
call
std
andb
sub
adc
cmp
cli
inc
lcall
popa
ficoml
test
in
xchg
xor
mov
repz
adc
cmp
lds
jle
xchg
push
inc
jge
dec
mov
cmp
out
sti
push
mov
pop
fs
ret
pusha
imul
pop
iret
roll
add
ss
ror
mov
lods
mov
insb
mov
stc
lods
popa
dec
divl
add
loope
add
mov
movsl
pop
xor
jne
lods
inc
xor
stc
insl
mov
mov
ja
xor
jmp
in
enter
xor
mov
mov
mov
jl
dec
pop
imul
xor
movsb
push
push
mov
mov
and
addr16
sub
mov
add
cmpsb
mov
cs
test
jnp
xor
clc
icebp
sbb
jge
mov
mov
popa
fistps
xor
mov
push
adc
call
cli
or
mov
sahf
or
mov
mull
repnz
mov
dec
mov
mov
pop
popf
xchg
leave
stos
leave
inc
xchg
nop
popw
fists
add
add
mov
lods
cld
imul
gs
lock
xchg
lods
movsl
adc
xchg
mov
fmull
or
add
cmp
int
dec
mov
lods
mov
fnsave
dec
sub
mov
jnp
push
xorl
mov
test
xchg
xor
mov
pop
sarl
pop
das
fwait
and
mov
das
enter
int
sub
cmp
lods
imul
and
sbb
push
loope
shll
shll
fwait
mov
jmp
cmp
mov
or
divb
mov
adc
int
nop
test
iret
lahf
jnp
stc
xchg
imul
out
push
mov
mov
movsl
loopne
cmp
sbb
insl
mov
clc
jae
testb
add
dec
mov
sahf
enter
mov
arpl
sbb
xchg
inc
jmp
imul
jp
sarl
clc
aam
cmp
fistl
xchg
inc
daa
enter
mov
add
in
stc
fistpll
lods
cmp
daa
or
fcmovnb
imul
mov
scas
in
enter
and
cmp
mov
enter
cmp
imul
inc
xor
nop
insl
push
into
scas
jecxz
sti
outsl
push
ror
cltd
ja
daa
sbb
lods
sub
or
cmp
xchg
xchg
test
mov
mov
pop
out
dec
ss
and
rcrl
mov
adc
imul
test
cltd
fcomps
aas
and
mov
fdivrp
xor
mov
jb
xor
fistps
test
pop
loopne,pt
dec
out
repnz
jge
mov
adc
pop
or
bound
add
pop
jl
rorl
add
cwtl
jae
add
mov
sti
cmp
fisubrl
popf
push
jb
jae
pusha
xor
pop
enter
mov
mov
xor
je
sub
cmc
jge
inc
push
mov
mov
dec
push
sbb
dec
cld
lret
clc
ret
mov
in
mov
jp
fmulp
mov
gs
jbe
sub
test
add
cli
mov
fst
mov
jne
cli
sti
xor
es
xorl
cli
movsb
shl
jmp
sbb
mov
ret
jle
add
adc
into
sar
ja
sbb
mov
add
je
sbb
xlat
scas
xchg
lcall
jns
out
cmc
jge
add
cli
pusha
repnz
inc
out
std
ljmp
pop
cmp
dec
jl
fwait
mov
shll
mov
jl
fmul
dec
ror
cmp
sub
add
jbe
fldt
xchg
nop
dec
add
in
jae
in
mov
jecxz
sbb
sub
mov
sarb
stc
leave
pop
cmp
push
in
mov
jae
imul
push
lods
dec
movsl
inc
adc
loop
jns
sahf
mov
negl
rcr
aaa
pop
fwait
sbb
push
stos
push
or
lahf
pop
icebp
inc
adc
nop
rcrl
cmp
call
jecxz
and
sub
or
jmp
rcl
mov
jecxz
je
popa
mov
inc
sub
inc
arpl
ds
pop
leave
mov
int
mov
push
cmpsl
test
lret
cs
mov
dec
inc
xor
or
xchg
mov
out
lret
popf
movsl
dec
dec
inc
aaa
and
out
xchg
add
adc
jle
jno
mov
sub
data16
scas
insb
repnz
adc
xchg
shrb
push
push
xor
jl
xor
jl
mov
push
mulb
orl
scas
push
xor
aam
push
mov
out
inc
inc
or
pushf
xchg
xchg
push
push
push
jge
mov
ds
jle
mov
push
or
lret
insb
addr16
or
ret
mov
cmpsb
xor
mov
lret
addl
or
or
lcall
out
mov
cmpl
push
push
push
sbb
inc
or
xlat
jne
shll
mull
jmp
mov
scas
js
je
or
scas
nop
mov
mov
pop
js
cld
push
or
shll
mov
fsubrl
xchg
xor
mov
les
jnp
test
xchg
mov
pop
mov
int3
cmpb
dec
push
ja
push
ret
inc
loopne
pop
pushf
stos
scas
fadds
inc
sub
pushf
inc
subb
iret
movsl
mov
xchg
mov
push
es
mov
js
jns
aas
js
inc
inc
mov
insl
sbb
js
lods
mov
test
fs
ds
sbb
fsubrp
jo
in
xor
dec
sbb
inc
daa
lret
add
adc
and
push
mov
inc
icebp
xchg
jg
sti
sbb
dec
adcb
cmpb
sarl
mov
mov
mov
jg
and
pop
push
xchg
pop
sub
insl
ds
into
add
dec
sub
inc
aad
add
mov
fs
sub
mov
ret
sbb
jmp
pop
xchg
repnz
fwait
dec
add
xor
dec
outsb
cmp
mov
fsub
sbb
sbb
fadds
inc
popf
add
mov
dec
jecxz
int
cmpsl
enter
mov
mov
and
lcall
mov
ss
nop
push
and
push
mov
adc
leave
out
loop
ret
push
sti
iret
rclb
adcb
iret
ss
lods
sbb
ss
add
push
xchg
pop
movsb
xchg
jnp
and
ret
jno
cld
cwtl
mov
divb
sub
jmp
aad
sub
dec
out
orb
in
jno
imul
lods
jmp
enter
push
and
dec
cmp
shrl
je
mov
inc
loopne
out
push
enter
cli
in
inc
mov
loopne
jo
xchg
testb
pushf
jl
fisubs
xchg
xchg
push
jp
inc
jne
shll
pop
dec
or
lret
and
ret
ljmp
mov
sub
data16
hlt
cli
push
lcall
pop
sbbl
bound
adc
mov
push
push
ja
sbb
fisubs
inc
adc
les
mov
ds
add
shll
adc
lea
outsl
ret
sub
or
fbstp
mov
dec
push
stc
repz
repnz
test
fnstenv
shrl
loopne
lods
sub
or
cmp
push
push
sbb
adc
inc
notl
imul
jns
loop
jl
cmp
or
addb
mov
xchg
ja
cmpsb
adc
loop
jle
lea
das
les
sahf
mov
addr16
leave
mov
leave
mov
push
loope
decl
and
lcall
popf
rcr
fdiv
insb
and
mov
mov
mov
adc
jae
inc
cmp
mov
mov
test
cmp
jg
cmp
stos
out
or
xor
out
into
xor
sbb
pop
mov
sarb
adc
mov
or
movsb
fistpll
add
pop
add
pop
ficoml
sub
push
shrb
inc
std
add
mov
jo
xchg
mov
or
cmp
add
jbe
inc
add
adcl
push
dec
iret
ficoms
ret
pop
pop
jmp
sbb
lahf
sub
mov
adc
stos
aam
pop
or
mov
pop
movsl
mov
jne
or
pop
push
fnstenv
xchg
pop
bound
out
popf
pusha
ret
add
cmp
inc
pop
negb
push
aam
sbb
jmp
mov
aas
xchg
pop
addr16
aam
iret
pop
pusha
mov
adc
sub
mov
gs
mov
push
pop
add
in
repz
mov
mulb
inc
xchg
inc
jno
mov
xor
out
lret
xchg
stc
pop
movsb
sbb
test
int
add
push
in
cmp
mov
and
shll
cli
pop
out
push
lret
mov
cld
push
inc
sub
mov
jg
fadds
cmpl
xchg
push
enter
subl
jne
pusha
scas
repnz
test
bound
xchg
out
cli
and
adc
std
pusha
xor
scas
es
xor
daa
ficoms
repz
inc
or
dec
xchg
add
and
movsl
int
sahf
mov
mov
fwait
icebp
or
cltd
sub
rorb
xor
or
mov
cwtl
jno
sub
xor
ds
push
movsl
pop
das
jp
jno
mov
cmp
jb
loop
mov
popf
xchg
fcomi
push
push
stos
mov
gs
gs
cltd
and
inc
or
shll
call
sbb
inc
lds
jb
fwait
loop
popa
iret
cmp
hlt
push
cwtl
push
mov
xor
es
xor
cmpb
add
lret
and
push
cld
dec
adc
cmpsl
jle
fiaddl
rsqrtps
mov
insb
test
xor
jmp
adc
outsb
and
and
lret
lret
mov
mov
adc
mov
cs
in
fbstp
add
ss
out
fldl
je
fwait
inc
inc
jg
sbb
xchg
mov
push
es
pop
repnz
rolb
loop
call
mov
mov
imul
ret
xchg
mov
mov
sub
sub
test
je
js
out
lahf
add
lds
enter
popa
iret
mov
adc
xchg
jnp
add
jb
es
lods
sahf
mov
lret
mov
dec
push
dec
repnz
pop
repnz
mov
aaa
es
xchg
cmpb
out
daa
shr
mov
xchg
mov
fcmovb
fs
stc
mov
mov
int3
rorl
pop
insb
jmp
xchg
not
fistl
rorb
jno
mov
pop
xchg
ss
cmpl
xor
sbb
test
mov
sbb
cli
sar
mov
lods
fcomps
jo
mov
fsts
fwait
popf
scas
sub
xlat
mov
inc
sbb
pop
pop
outsl
loopne
aas
xchg
inc
mov
mov
add
sub
loop
mov
push
xor
push
out
insb
xchg
add
adc
sub
push
leave
add
pop
inc
push
loop
test
dec
push
and
rolb
arpl
inc
add
ja
mov
aam
les
insb
fcmove
inc
fdecstp
push
sbb
sbb
cwtl
shrb
dec
das
lret
add
mov
popf
fs
fildll
aad
ss
push
xchg
ret
add
imul
dec
repz
sub
xchg
mov
imul
add
ds
inc
cmp
int
dec
mov
aam
bound
xchg
dec
adc
pop
xchg
aaa
popf
inc
call
fsubl
inc
pushf
ret
dec
or
lods
dec
add
cmpb
popf
lock
mov
test
dec
cmp
add
out
movsl
mov
pushf
sub
dec
cmp
or
stc
inc
arpl
lock
sbb
sub
aad
aaa
push
adc
hlt
jno
fisubrs
leave
scas
jb
push
xchg
jp
mov
cld
js
mov
xchg
divb
sbb
push
mov
xchg
sub
addr16
xchg
lock
mov
and
jge
mov
daa
fildll
jp
les
mov
dec
icebp
push
scas
push
fwait
mov
mov
stc
adc
xchg
pop
adc
xor
mov
negl
das
add
inc
add
enter
addl
or
xchg
push
cmp
movsb
aas
das
jns
adc
pop
push
movsl
mov
stos
push
ljmp
inc
rorl
or
es
cmp
inc
sbb
sarb
dec
icebp
lcall
and
push
aaa
cld
cmpsl
hlt
push
out
hlt
pop
idivl
push
mov
fldt
dec
sub
sub
push
mov
fldcw
test
lret
sub
jmp
cvtps2pi
xlat
or
xor
fldl
outsl
cld
jnp
imulb
lods
jb
inc
adc
xor
inc
insb
rcl
lods
rclb
in
test
scas
in
mov
call
mov
lds
inc
xor
cli
loopne
repz
mov
jp
lock
xchg
sbbb
or
ja
mov
xchg
inc
jnp
fnstcw
dec
loop
jno
cs
xchg
push
fsubrs
cmp
fimull
mov
mov
int
rorl
mov
or
push
psubw
iret
aam
xchg
test
cmpsb
outsb
xchg
iret
cmp
cwtl
outsl
jle
cmp
add
mov
cld
sbb
daa
xchg
mov
push
movsl
jnp
test
lds
fwait
inc
lds
ljmp
pop
in
shlb
pushl
jnp
je
dec
mov
sub
popa
out
enter
sbb
pop
movsl
pop
jecxz
add
push
stc
cmp
aaa
and
or
insb
inc
js
jno
into
xchg
jb
pop
pop
or
xchg
iret
sub
and
test
sbb
mov
gs
jle
insl
add
or
jno
fwait
or
subb
insl
in
test
frstor
sub
mov
mov
xor
add
and
mov
daa
sbb
push
cmpb
cli
xchg
inc
enter
pop
push
hlt
mov
lods
xchg
loop
inc
andb
jnp
push
adc
jo
popa
mov
ror
out
pop
outsb
mov
dec
sub
xor
cmp
jmp
fcmovnb
hlt
push
push
fs
mov
pop
fcoms
stc
clc
fstl
lret
aad
hlt
insl
arpl
ret
pop
cmpsb
dec
or
sub
jno
inc
daa
push
xchg
and
mov
scas
mov
mov
adc
rorl
idiv
jp
push
out
daa
sbb
cli
movl
push
jmp
ret
mov
ljmp
pop
movsb
aaa
shll
bound
adc
aam
or
addb
sbb
sbb
repz
lahf
mov
loopne
mov
pop
dec
pop
or
aad
sbb
push
ret
pop
pop
cmp
pop
add
mov
and
pop
mov
out
or
pop
cs
sahf
and
repnz
pop
sarl
or
sbb
mov
shrb
mov
stc
sbb
sbb
and
push
fwait
fwait
mov
bound
aad
lahf
test
sbb
insl
cmp
mov
es
adc
in
xchg
mov
in
rcll
imul
sbb
loopne
add
mov
inc
adc
inc
mov
jno
mov
cwtl
dec
lret
push
push
or
xor
andl
pop
subb
jns
mov
sbb
cld
dec
xchg
mov
lahf
dec
orl
mov
enter
jbe
clc
jmp
push
in
out
adc
outsb
jmp
nop
js
mov
shrl
add
repnz
push
dec
jp
push
movsl
jnp
movsb
pop
es
andb
fwait
mov
dec
sub
push
mov
call
sbb
jmp
mov
cmp
pop
pop
arpl
adc
loopne
shr
pusha
mov
xor
xor
xor
xor
xchg
add
xchg
sbb
mov
or
movl
pop
mov
lahf
adc
and
push
test
pop
out
inc
and
and
stos
pop
cmp
cmp
cmpsl
in
and
and
or
in
xlat
xor
test
xchg
fidivrl
repz
adc
out
scas
jne
addb
or
xor
daa
cli
cwtl
mov
test
in
jnp
pop
std
fisubrl
mov
fs
jmp
mov
into
fisubl
cmpsb
dec
sar
mov
cmp
cli
lods
subb
push
add
mov
test
or
addr16
rcll
sbb
enter
test
cmp
jno
shlb
popa
enter
dec
scas
inc
out
lret
lret
shrb
push
or
xor
adc
sbb
test
jecxz
pusha
popa
jge
jmp
mov
sub
pop
sbbl
leave
xor
aad
das
imul
or
dec
test
mov
push
arpl
add
ret
dec
cmp
mov
test
pop
push
and
fnstenv
push
pop
insb
jo
test
rcrb
dec
gs
cmc
lret
push
shll
addl
xor
mov
dec
sub
sbb
test
mov
fists
outsl
dec
ret
fs
jns
adc
aam
xor
rcll
push
gs
sbbl
vsubps
mov
jle
push
loop
inc
push
add
push
xchg
ret
stos
sbb
jbe
stos
inc
cwtl
lahf
push
xor
movsl
dec
or
setne
out
aas
fnstenv
cmpsb
sbb
popa
fldcw
clc
cmpb
cwtl
int3
pop
mov
rcr
cmpsb
data16
sti
addr16
ss
mov
jp
or
insl
ss
incl
push
cmp
in
dec
pop
jbe
mov
sbb
pop
pop
hlt
jae
je
push
mov
je
sub
jb
push
jbe
ret
or
mov
pop
push
pop
dec
lret
dec
cmp
aas
mov
dec
test
xchg
popa
mov
repnz
shlb
outsb
test
imul
adc
inc
add
lret
arpl
jg
xchg
lds
fsubs
bound
mov
mov
push
push
mov
mov
push
sbb
std
test
jge
cld
test
or
insb
push
and
mov
push
hlt
data16
mov
fcoml
jbe
push
imul
sub
and
mov
subb
mov
xchg
sbb
or
icebp
mov
iret
in
jmp
mov
pop
in
pop
popf
cmpsb
pop
xor
jne
inc
roll
mov
push
mov
clc
adc
ja
out
outsl
add
adc
cmp
dec
inc
push
jmp
pop
test
mov
jo
dec
aaa
imulb
mov
out
sti
lahf
lcall
adc
outsb
mov
sti
ficomps
sbb
in
sbbb
jg
add
ret
mov
and
mov
xchg
in
fs
ss
aas
dec
mov
test
cmp
mov
inc
in
push
or
test
stos
pop
test
int
dec
inc
test
add
push
mov
xchg
pop
sarb
das
insl
dec
insl
mov
mov
mov
cmp
adc
arpl
sub
divl
or
mov
stos
bound
jnp
jb
adc
mov
int3
outsl
insl
push
call
fidivs
add
jb
jae
fdivp
shr
imul
pop
lcall
iret
cmpsl
pop
cs
add
fimull
pop
es
int
dec
orl
repnz
popf
push
shl
sbb
inc
mov
cmpsb
aam
push
test
mov
subb
cwtl
mov
jmp
mov
cmpsb
insb
ret
sbb
clc
jb
ret
jns
mov
daa
mov
xchg
in
clc
push
sub
fnstenv
mov
outsl
mov
ljmp
in
mov
inc
jl
push
loope
push
inc
mov
push
out
int3
sar
cmp
test
adc
ret
mov
jnp
int
in
lret
stos
std
mov
sub
stc
fdivl
jg
nop
adc
add
shlb
pop
mov
in
push
lds
mov
es
jbe
js
pop
inc
mov
mov
push
out
imul
dec
jecxz
pop
data16
popa
rclb
loop
cmp
stos
sub
mov
or
fs
push
push
or
sti
push
sbb
sub
add
fistpll
inc
mov
in
sbb
test
aam
jne
fisubs
fsubs
or
sub
popa
aad
int3
je
repz
mov
push
inc
fwait
and
add
popa
push
mov
sarb
push
pop
fsubp
sub
sbb
pushf
fimull
jae
mov
pop
dec
push
aas
pop
cmovs
mov
inc
dec
dec
push
and
sub
push
loopne
divl
aas
and
std
in
and
fimull
xlat
cmp
std
sahf
sub
imul
xor
pop
sbb
popa
lea
xlat
add
inc
mov
insb
mov
scas
cmp
add
out
int
and
subb
pop
es
jnp
push
out
ret
test
mov
lock
mov
test
xchg
idivb
inc
or
ja
and
rcl
mov
or
push
jo
lahf
stos
int
mov
mov
pop
iret
xchg
xlat
mov
pushf
xor
fiaddl
or
pusha
mov
sbb
xchg
push
mov
xchg
add
mov
mov
popl
adc
test
in
repz
cmp
scas
inc
push
pop
in
push
lds
fidivrs
push
scas
shrl
js
xor
add
pop
push
aaa
cmpsl
aas
jmp
in
into
xchg
mov
pop
mov
out
ljmp
and
push
and
repz
add
sbb
adc
ja
out
insb
outsl
pop
cmovp
or
xchg
cmc
mov
fwait
or
jl
lock
aaa
cmpsl
dec
or
rclb
leave
icebp
adc
dec
push
ljmpw
popf
stc
test
push
cmp
rorl
adc
sbb
pop
in
dec
sub
sbb
mov
jo
movsl
jnp
mov
lods
sbb
and
stc
jl
icebp
inc
mov
xorl
test
adc
dec
dec
inc
orb
pusha
sahf
or
cmpsb
repz
push
jmp
xorl
into
inc
jne
ret
dec
popl
inc
add
jp
mov
cli
mov
fists
in
aas
test
pop
leave
addr16
dec
repnz
lock
aaa
idivl
sub
cmpsb
in
aas
pop
std
loope
ss
lods
mov
nop
test
frstor
test
and
add
and
add
lods
mov
aas
dec
bound
lods
je
push
mov
push
xor
dec
inc
in
lods
ret
sub
jecxz
dec
inc
push
xchg
aam
cmc
xor
mov
in
add
xorb
xor
loope
jge
ret
inc
andl
jnp
fsts
mov
bound
jmp
or
out
jg
cmpsb
mov
jmp
sti
cmpsl
push
sbb
jp
dec
sahf
loope
outsl
and
divl
enter
and
inc
jg
pop
dec
movsb
and
out
adc
xor
rorl
std
popa
xchg
enter
subl
mov
xor
mov
data16
test
scas
stc
nop
gs
addb
cld
push
fdiv
pop
and
insb
lds
jge
lcall
jp
sub
cwtl
jmp
mov
adc
addr16
jg
adc
aas
cld
cmp
adc
fcom
mov
inc
xchg
pop
js
shrb
adc
hlt
sub
push
cltd
pop
rcrl
wrmsr
bnd
xlat
cltd
in
cmpsb
xor
push
mov
dec
into
and
pop
cld
jo
sub
cmovnp
aaa
jge
aam
or
into
sub
dec
movsb
xchg
arpl
push
fists
lret
int3
inc
loopne
pop
xchg
cld
out
cwtl
pop
dec
cs
mov
pop
push
cmpsl
repnz
jnp
push
insl
or
das
or
lcallw
mov
xor
push
mov
pusha
inc
test
mov
imul
sub
xor
inc
insl
sbb
cld
js
fwait
add
fstl
ja
std
test
dec
lcall
sahf
add
xchg
or
orl
inc
scas
push
pop
inc
ds
inc
dec
mov
fs
bound
xorb
or
out
jae
mov
insb
int
mov
dec
mov
testl
push
adc
lret
loop
icebp
lods
push
mov
movsl
jno
xor
scas
movsl
pushf
inc
xchg
ffree
sbbl
es
fwait
in
sar
fimuls
outsb
pop
mov
test
adc
fcomps
mov
out
ret
data16
jle
int
or
xor
fidivl
lret
xchg
call
pop
fidivs
pop
data16
mov
xchg
jnp
xchg
dec
mov
adc
mov
adc
mov
and
add
xchg
das
pop
shlb
jne
outsl
mov
daa
mov
pop
push
inc
jl
js
stc
cltd
add
pop
lea
lret
push
sbb
dec
cmpsb
stos
or
movsl
dec
cs
sar
xor
pop
mov
mov
mov
cmpsb
jb
scas
into
adc
add
adc
xor
imul
jo
out
ss
or
sub
fdivl
stc
pop
fldl
pop
leave
rorb
leave
cmp
mov
lea
xor
mov
sbb
test
das
movsb
add
in
add
jae
mov
jae
sti
std
ds
shl
jg
les
and
fs
aas
pop
daa
movsb
push
sar
xchg
pop
ss
fadd
or
mov
das
jo
sti
mov
addl
push
xchg
push
test
inc
cmc
aam
movsl
std
outsl
insl
in
mov
inc
jo
bound
cli
dec
add
data16
and
cmp
push
call
les
testb
vmovaps
dec
or
sub
int
repz
leave
mov
data16
jae
sbb
stc
pop
dec
mov
insl
fcompl
add
add
cmp
gs
cltd
or
sbb
aaa
mov
xchg
add
loopne
jo
dec
loope
pop
cs
adc
inc
mov
cmpsl
inc
push
sbb
xor
push
sahf
mov
cmpsb
test
sub
fsubrl
push
inc
add
testw
data16
in
mov
iret
ljmp
fsts
lea
mov
out
or
mov
mov
add
xor
jns
pop
test
pop
sbb
push
add
push
scas
pop
add
enter
hlt
push
cwtl
test
out
sub
in
idivb
ja
pop
movsb
jns
clc
adc
and
sub
xchg
sub
shlb
notl
sarb
mov
pop
add
sub
sub
bound
add
dec
daa
arpl
mov
dec
loope
dec
lock
test
add
mov
scas
xchg
cli
mov
fsubrl
jns
xchg
adc
mov
dec
lahf
mov
cs
lcall
jge
cmpsl
lods
xchg
mov
outsl
add
dec
add
sbb
pop
fcmovb
sbb
sub
sbb
cwtl
sbb
pop
sub
ds
xchg
lret
push
sbb
and
insb
clc
dec
dec
out
insb
movsl
mov
sub
push
cmp
pop
inc
aad
pop
ret
fildll
fs
or
xor
insl
adc
xchg
xor
ljmp
ffree
call
arpl
rcrb
shll
inc
push
inc
xor
test
sub
movsb
nop
fisubrs
or
roll
aaa
cmpsb
mov
inc
add
popf
shll
sub
stos
add
outsl
mov
movsb
outsl
cmp
movsb
cld
popa
inc
outsl
std
dec
add
das
in
and
adc
cwtl
xor
repz
xor
mov
xchg
ss
mov
mov
dec
mov
and
jne
lock
push
mov
adc
test
movsb
sbb
dec
js
push
rdpmc
stos
xchg
lret
int
shll
test
insb
std
addr16
adc
loopne
sarl
xor
and
repnz
mov
inc
mov
rcrl
mov
out
data16
mov
fdiv
nop
and
xlat
sti
cmp
pop
or
jno
mov
aam
mov
sbb
add
or
scas
and
or
and
sbb
in
enter
lock
cwtl
sbb
in
lods
icebp
push
ja
fstpl
mov
rcll
je
xchg
enter
jmp
sub
aam
inc
cmp
mov
cli
push
lret
leave
xchg
cmp
or
test
cli
mov
sub
cld
icebp
loope
sbb
ret
or
cmp
push
pop
or
pop
loop
pop
lds
rorb
test
roll
mov
inc
and
xchg
ja
push
push
xchg
push
in
xor
movsb
adc
mov
add
and
xchg
leave
inc
adc
pusha
adc
mov
lods
in
pop
decl
push
sub
push
xchg
and
ret
push
pop
out
sbb
das
mov
bound
jns
jmp
dec
cmp
mov
lods
loopne
es
jno
sub
sub
icebp
mov
jg
inc
push
sbb
cmp
adc
or
push
rcl
jp
stc
push
ret
das
or
pusha
jmp
mov
cmp
nop
pop
jp
xchg
es
test
pop
jecxz
mov
add
addr16
pop
test
repz
inc
outsb
jmp
mov
mov
bound
mov
xor
inc
sahf
std
dec
mov
jbe
xchg
aaa
sti
imul
das
hlt
cltd
pop
shl
gs
sbb
int3
xor
ja
xchg
fisubrs
lds
dec
pop
mov
lcall
stos
pop
push
sbbb
or
mov
and
inc
dec
cmpsb
dec
out
stos
and
popf
mov
xor
movsl
ret
mov
les
xlat
mov
sbb
lods
mov
mov
pop
ja
in
cmp
jmp
xchg
pxor
xor
dec
or
js
stc
xor
pop
pop
arpl
push
sqrtps
ja
pop
add
jg
mov
stc
and
ja
inc
and
movsb
add
or
jecxz
movsl
push
cli
mov
test
adc
xorl
iret
arpl
pop
incb
lods
mov
or
jno
cmpsl
jecxz
call
insl
dec
adc
or
cmp
push
fstl
jno
mov
popf
and
cmp
sub
push
pop
mov
jne
cmp
inc
lds
ss
fidivrl
cmp
movsl
mov
xchg
cmp
arpl
push
ja
xlat
mov
out
and
jns
lcall
daa
int
not
push
mov
mov
negb
mov
mov
xor
or
xchg
dec
xor
mov
mov
xchg
mov
mov
in
pop
verr
adc
add
sub
lock
inc
loope
movsb
dec
and
or
int3
arpl
xchg
ds
mov
lods
push
fistl
cmp
ljmp
sub
insl
jmp
cmp
jne
inc
jg
push
lods
sub
mov
out
xor
and
jo
mov
xchg
bnd
lcall
push
les
mov
dec
mov
imul
mov
sub
imul
icebp
lcall
xor
pop
xor
popa
mov
pop
movsb
pop
jne
sbb
xor
mov
or
pop
mov
add
jmp
mov
cmp
aad
pushl
xor
cmpsb
rolb
mov
sbb
xlat
mov
xchg
negb
mov
insl
push
clc
push
and
sahf
pop
movsl
aam
bound
sbb
pusha
pop
mov
testl
add
hlt
push
cld
negl
add
gs
lock
cmp
pusha
add
les
gs
cwtl
rcr
cmp
dec
xor
push
cwtl
or
shlb
jae
jne
pop
cmp
aam
cmp
pop
lcall
loope
pop
jne
mov
xor
xchg
inc
sbb
mov
push
arpl
push
call
lret
inc
push
jmp
popf
pop
sbb
adc
add
insb
out
jbe
sti
ret
xchg
lret
cmp
test
cmp
mov
adc
and
lret
cmp
push
xchg
or
out
adc
cmpsb
repnz
mov
movsb
mov
jnp
cmp
inc
aam
fs
leave
call
ss
fwait
sbb
sbb
fiaddl
mov
outsb
lahf
ss
push
dec
not
xor
jnp
das
lea
mov
push
jo
and
cmp
ljmp
icebp
sahf
pop
or
mov
imul
dec
nop
repz
cmp
imul
xor
xchg
push
pop
aam
loope
or
cmp
push
inc
cmpsb
and
popf
xchg
test
test
loop,pn
call
rcll
test
aas
int
sbb
lret
pop
lea
imul
dec
ljmp
add
mov
xor
out
ret
cmp
icebp
in
pop
out
xchg
sbb
stos
xchg
popf
mov
jp
icebp
hlt
fdivs
iret
ljmp
xlat
jne,pt
popf
fs
scas
shlb
xchg
lods
divl
sub
les
stc
scas
out
mov
jl
xor
xchg
dec
test
fnstenv
push
inc
pop
pop
movsb
mov
inc
pop
jecxz
xchg
sub
lock
outsl
rorl
jae
addr16
mov
cwtl
push
cwtl
add
sti
es
sub
popa
lods
loopne
movsl
int3
inc
fnstcw
std
cmp
sub
mov
mov
xor
jle
addb
jo
dec
inc
stos
or
lds
rolb
push
shrl
adc
out
rolb
push
outsb
adc
dec
cmpsb
xchg
jge
cmp
cld
and
mov
pop
mov
push
or
xchg
xchg
inc
mov
js
je
subl
dec
jl
xor
in
dec
xchg
in
repz
sub
cmp
inc
adc
sub
sub
sub
pop
shr
popl
inc
pop
sbb
popa
dec
popl
fwait
inc
mov
and
fs
or
out
push
cltd
inc
aad
fsubp
icebp
stc
daa
mov
pop
push
lds
out
mov
mov
clc
and
adc
push
retw
std
pop
jae
pop
subl
mov
imul
insb
stos
vpsubq
test
loop
jo
stos
push
sub
fisubl
add
orb
lret
test
inc
or
sbb
pop
mov
mov
fists
add
push
jecxz,pt
sub
push
mov
rcrl
xor
dec
negl
jno
ret
add
jbe
adc
mov
ljmp
shlb
sbb
xchg
cmc
sbb
pusha
xchg
scas
xchg
shr
repnz
cmp
sbb
int3
ss
or
call
xor
inc
push
xor
mov
stc
ret
jmp
mov
jnp
mov
call
sub
imul
stos
mov
out
pushf
addl
xchg
adc
mov
add
push
hlt
ret
xchg
and
jo
outsl
cmp
adc
sahf
jg
dec
sbb
or
scas
push
je
push
or
sbb
or
test
cmp
andl
pop
mov
inc
lods
iret
and
ret
add
out
mov
xor
hlt
cmovne
xor
pop
in
fldl
movsl
daa
add
dec
daa
popa
or
mov
orl
jg
out
dec
jo
lahf
out
xchg
jecxz
xchg
dec
sub
popf
and
sub
adc
mov
lds
lcall
gs
mov
adc
repnz
xchg
shlb
fimull
or
ret
sbb
dec
out
cli
mov
leave
cmc
jle
adc
pop
in
test
les
sbb
imul
xlat
imul
adc
and
mov
pop
pop
repz
or
clc
and
xor
dec
xchg
aas
sbb
rolb
sub
test
test
clc
pop
insl
popa
fimuls
xor
dec
imul
lret
dec
push
ds
fidivrl
pop
xchg
int3
dec
jne
popf
or
je
dec
add
push
dec
sarl
sbb
pop
cmp
cmp
xor
iret
fdiv
sub
sub
fwait
and
lea
pop
inc
fcmovnu
jno
cmp
aam
jo
cmp
fsubrl
cltd
lahf
pop
ds
adcl
sub
push
test
pop
dec
movsl
shll
inc
cmp
or
cmp
sub
ss
fsts
andb
sbb
jo
movsl
and
mov
mov
cwtl
test
adc
xchg
scas
cltd
push
sbb
test
xchg
mov
fnstenv
mov
push
adc
push
jb
fidivrl
jnp
test
data16
inc
xor
inc
stos
imul
and
jbe
sahf
out
shrl
stos
add
ficoms
and
enter
sub
mov
jle
sahf
arpl
or
fimull
xchg
gs
push
into
or
lods
scas
bound
ss
mov
dec
jno
cmp
or
out
int3
aad
roll
lcall
popf
iret
pop
jmp
shll
gs
xor
pop
adc
std
shll
push
in
rcl
inc
xor
push
cltd
ds
stos
ja
jmp
test
ja
sti
jge
bound
into
pop
call
mov
add
mov
lcall
imul
stc
in
xchg
sub
mov
lret
ret
inc
stos
in
xchg
jecxz
inc
dec
xorb
out
adc
dec
fldcw
xchg
adc
jnp
pop
lea
inc
imul
xchg
or
pop
es
out
mov
dec
jle
rclb
pop
mov
adc
hlt
les
lret
fnstenv
dec
pop
cmp
push
mov
mov
add
mov
xor
cmc
xor
inc
jge
dec
push
pop
ss
or
leave
je
xchg
or
call
push
inc
mov
insb
and
jns
and
ja
or
pop
stos
adc
ss
fnsave
cs
jecxz
int3
out
jns
stos
popa
adc
push
clc
xchg
ret
fwait
aaa
sbb
sub
pop
xchg
push
js
jae
jns
es
mov
sbb
das
icebp
or
mov
inc
dec
jmp
mov
rcrl
sbb
jns
pop
adc
popf
dec
sbb
jl
cmp
jb
pop
in
int3
or
inc
fistps
and
xchg
adc
cmp
cli
in
in
add
in
sub
xchg
int
fbld
jle
add
push
out
enter
push
lret
jmp
fs
mov
out
in
test
icebp
dec
clc
cmp
enter
stos
cmp
out
shr
mov
cwtl
push
bound
mov
testl
or
dec
push
int
xor
mov
push
icebp
sar
paddq
fisubl
and
mov
cmp
stos
bound
lcall
sbb
xchg
mov
pusha
mov
std
add
add
and
push
adc
mov
push
insl
push
mov
xchg
fwait
movb
sbb
or
xlat
jecxz
in
subb
pop
fbstp
outsl
sbb
sub
addr16
push
add
mov
cmp
scas
arpl
fbld
lock
inc
or
jl
cmpsl
add
mov
mov
imulb
loop
adc
xor
clc
mov
aam
push
arpl
ja
test
push
bound
ds
push
push
outsb
pop
xbegin
outsl
fdivrp
cmp
pop
sarl
cltd
xor
enter
xchg
int
leave
adc
pop
cwtl
mov
mov
inc
in
ss
mov
mov
pushf
int
in
repz
gs
lret
pop
shll
test
and
aas
fwait
cmpl
sarl
lods
dec
mov
adc
bnd
out
into
arpl
in
xchg
pop
lcall
iret
mov
repz
lea
lahf
test
fwait
mov
in
xor
push
inc
adc
movsl
sahf
test
insb
xor
add
iret
enter
lcall
loopne
in
inc
imul
ficoms
jne
xor
int3
and
js
push
gs
pop
gs
fiadds
lock
std
addb
push
fs
dec
inc
out
imul
dec
mov
cmp
pop
popf
lret
mov
dec
mov
test
push
and
int3
ret
arpl
neg
jb
fcompl
jno
cld
jge
sub
fdivl
add
in
inc
cs
fwait
add
mov
pop
or
mov
scas
imul
data16
pop
in
adc
sbb
push
fstpl
jge
inc
dec
lret
loopne
inc
test
icebp
pop
pushl
lret
xor
adc
inc
fwait
inc
in
cmp
mov
adc
mov
aad
in
ret
and
aad
cld
adc
mov
arpl
mov
adc
xchg
sbbl
adc
push
pop
xor
add
movsl
sbb
jno
add
push
dec
jp
pop
rorb
fcoms
test
cmpsb
test
fiadds
mov
daa
aaa
popf
cwtl
out
adc
sub
jl
shll
daa
stc
clc
outsl
fcoms
test
xchg
test
les
lea
lods
pop
xchg
fistpll
outsb
push
rep
mov
pop
inc
dec
xchg
jae
add
mov
jnp
int
push
movsw
pop
icebp
jo
pop
ret
scas
scas
test
psllq
xchg
ret
lods
jne
jno
sbb
jno
mov
and
outsb
xor
add
sahf
cmp
mov
cmp
dec
add
addr16
jecxz
fisttpl
mov
lret
das
jno
or
rcll
cld
cmp
adcl
mov
daa
xchg
aaa
cli
or
ja
cmp
jbe
pop
add
inc
push
xchg
add
mov
pop
cwtl
mov
pop
adc
dec
faddp
xchg
dec
nop
pop
leave
dec
loopne
fistl
stos
pop
xchg
fstl
je
mov
mov
hlt
dec
sahf
jno
push
test
call
cmpsb
mov
movsl
fldenv
stc
adc
adc
pop
mov
imul
gs
decl
or
in
pusha
inc
mov
cli
imul
stc
fcomps
mov
gs
jg
into
pop
mov
inc
ljmp
jns
insb
call
test
jmp
dec
adc
add
test
gs
scas
and
aas
cmp
in
imul
nop
fwait
cmp
xchg
lods
lds
lods
int
xchg
test
aam
cmpsl
xchg
jo
sbb
lds
adc
leave
insb
jmp
push
push
mov
hlt
je
and
jl
mov
adc
repnz
push
mov
jecxz
bound
dec
enter
cmpsl
jg
xor
mov
mov
xchg
out
mov
inc
jecxz
adc
in
rcrb
clc
daa
or
mov
push
mov
es
sub
insb
adc
shll
jns
addr16
lcall
inc
adc
adc
push
pop
stc
out
adc
es
jmp
mov
shll
loope
pop
fbld
cmp
aam
lcall
xchg
inc
gs
dec
rcrl
outsl
scas
cmpsl
xor
sbb
cmp
mulb
dec
sbb
ret
adc
xor
sub
mov
inc
rorl
lods
cmp
mov
insl
addb
mov
clc
add
mov
movsb
xchg
rolb
std
mov
add
xchg
xchg
cld
adcl
dec
in
addr16
cmp
push
movsl
hlt
xchg
push
xor
cmp
jge
in
push
xchg
and
or
out
sbb
jg
push
push
dec
xor
inc
ljmp
xor
cmp
mov
lods
sbb
pop
imul
js
sbb
push
pushf
dec
sbb
pop
cmp
xchg
sub
jb
cmp
sar
mov
adc
mov
sbb
mov
scas
aam
xlat
ret
pop
push
dec
mov
sub
inc
sbb
imul
test
mov
xorb
add
dec
insb
xor
cltd
test
call
and
lods
mov
es
sbb
push
aas
repnz
popa
sub
out
xchg
xchg
popa
adc
inc
cmpsl
sti
lea
inc
sahf
and
aam
andb
pop
inc
mov
jl
cwtl
or
sbb
test
push
cmp
popf
js
mov
xchg
and
xor
data16
or
popa
mov
mov
cmpb
scas
out
add
adc
jmp
jmp
cli
adcl
mov
sbb
adc
dec
cmp
andl
pusha
idivb
pop
inc
add
mov
roll
rcll
push
dec
test
sbb
pop
inc
dec
lods
aaa
aas
push
mov
orb
pop
push
push
bound
push
jecxz
dec
push
rorb
cmp
lods
sub
add
push
in
or
pop
sub
push
into
into
cwtl
mov
ficoms
cmc
pop
ljmp
cmp
into
rorl
enter
dec
or
dec
pusha
push
nop
into
lahf
sbb
and
movsl
xlat
inc
movsl
jno
aas
cld
scas
test
mov
sbb
out
popa
and
fwait
xorl
sub
fisubrl
dec
push
mov
sbb
push
sub
icebp
cld
xor
inc
cmp
vsubpd
out
xor
cmp
repz
ret
inc
scas
or
jb
sbb
fistpl
mov
dec
xor
test
loope
inc
hlt
dec
sahf
cmp
jnp
mov
and
and
push
bound
sub
repz
adc
mov
jl
sbb
cld
push
jle
pushw
jae
mov
mov
cmp
dec
lds
adc
aaa
je
pop
mov
fimull
sub
ret
std
outsl
inc
inc
jbe
add
jl
loopne
pop
push
ds
loopne
mov
inc
and
mov
add
test
stc
push
cld
data16
mov
jne
sub
cs
inc
fdiv
xor
xchg
dec
mov
aaa
pop
pop
cld
shl
imul
ds
jns
cmp
daa
ja
mov
sbb
daa
lcall
mov
lcall
jle
test
out
fiaddl
jmp
les
push
push
pop
xlat
imul
push
lret
push
dec
roll
bnd
enter
shr
fs
xchg
sbb
sbb
sub
ret
xor
jbe
sbb
xchg
sub
in
fidivl
and
rcll
lds
sbb
xchg
mov
xchg
aam
mov
outsl
or
push
das
dec
dec
in
pop
xor
sbb
add
fmull
leave
sub
pop
push
xor
push
mov
push
push
leave
jmp
ret
cmpb
aad
mov
pop
repz
ror
call
movsb
xlat
xor
repnz
inc
pop
daa
mov
int3
leave
cmp
push
jg
movsb
mov
jns
add
decb
imull
in
push
stos
jae
add
jle
mov
push
aas
sub
dec
sbb
xchg
test
sub
dec
push
loop
fldt
sbb
mov
xchg
adc
xor
testl
lcall
addb
mov
call
ja
add
push
mov
movl
add
xor
cmp
mov
add
in
cmp
loopne
mov
mov
jmp
lcall
pushf
je
daa
fldenv
aad
jg
popf
es
out
imul
popa
arpl
mov
push
xor
mov
adc
in
sub
mov
mov
loopne
push
pop
fdivs
int3
add
inc
push
lahf
jb
mov
mov
push
push
jge
xor
cmpsb
add
mov
cwtl
xchg
fstl
push
mov
lea
jno
mov
mov
jae
fiadds
mov
es
mov
inc
fldl
pop
sub
shld
dec
cmp
test
arpl
mulb
call
mov
cmp
fs
iret
imul
cmp
enter
inc
add
negl
mov
sub
sub
shrl
mov
push
test
cmc
adc
mov
mov
nop
pop
js
sbb
das
push
daa
data16
pop
cs
rcl
scas
mov
mov
jl
xor
nop
pop
sub
je
in
loop
mov
mov
test
mov
pop
fs
stos
test
adc
pop
cmc
and
addr16
dec
pop
test
or
cmp
lea
pop
fdivrl
and
fidivrs
mov
in
imul
cmp
xor
mov
push
test
add
mov
mov
ja
cmp
add
pop
imul
in
out
jecxz
pop
mov
rolb
cmpsl
mov
outsl
push
pop
je
and
imul
sub
movsb
pushf
loopne
popa
jmp
push
fidivl
ja
dec
lods
stc
push
push
insl
loopne
jg
sti
shll
ja
sub
call
icebp
stc
outsb
xor
mov
xchg
pusha
mov
sbb
pop
jg,pt
lea
xchg
xor
fsubp
cmpsl
enter
scas
push
mov
stos
into
rcll
arpl
sbb
test
sbb
scas
inc
cmpsl
ud0
mov
rcrb
add
ret
js
into
add
aas
pop
jp
xchg
cmp
sub
je
cmp
out
push
scas
repz
xor
hlt
sub
aas
or
lret
pop
mov
leave
cmpsl
sbbb
push
pop
push
sti
dec
fs
and
xchg
out
push
push
ss
add
sbb
int3
mov
imul
inc
jns
sbb
orb
jle
push
rorb
xchg
ljmp
mov
cld
fld
cmp
int
push
testb
xor
xchg
cmp
xor
add
and
cs
js
mov
sbb
xchg
dec
mov
push
mov
int3
test
loope
adc
mov
xchg
icebp
mov
cmc
aas
mov
jno
movsl
sti
popf
pop
dec
xchg
ljmp
and
inc
sub
and
adc
push
shlb
push
repz
mov
out
out
call
sub
or
jle
addr16
cmp
dec
sbb
inc
xor
xor
leave
jl
add
and
adc
inc
out
mov
clc
mov
sub
popf
aad
cmp
lcall
aam
push
mov
fsubrs
cwtd
xor
mov
sbb
xchg
out
mov
addl
movl
pop
fldl
out
adc
sahf
cmp
push
test
cmp
popa
int
sub
adc
je
push
subb
int
repz
and
pop
push
pop
xchg
xchg
or
push
cmp
xor
dec
call
jmp
insb
cmp
jle
jne
scas
stos
adc
mov
jecxz
push
mov
je
or
cltd
call
cwtl
mov
mov
push
cmc
jne
sub
clc
inc
insl
xchg
int3
and
xor
sub
in
xchg
inc
les
and
lahf
daa
ja
add
in
setl
iret
mov
or
jae
dec
cld
imul
adc
mov
lret
in
mov
adc
push
popa
mov
lea
jno
sub
xor
add
xor
mov
aam
into
ljmp
or
mov
dec
addr16
xchg
mov
cmp
mov
mov
adc
adc
in
adc
mov
xor
movsl
sub
adc
aas
or
or
aas
dec
cmp
sub
pushf
jns
aaa
mov
fmulp
sbbb
imul
jae
rcrb
sbb
xor
test
dec
jo
hlt
sbb
popa
add
inc
jl
cmpsb
out
mov
push
stc
or
loop
sbb
dec
stos
add
or
ja
mov
push
sti
adc
pop
rorb
cltd
sbbl
xor
ss
add
mov
pop
and
jg
pop
cmp
fidivrl
lods
hlt
fisubl
sti
out
adc
or
push
pop
cmp
ret
pushf
mov
movsl
out
fidivrl
fs
sub
hlt
jns
jge
dec
jns
insb
cmp
push
and
xlat
loopne
xor
scas
stos
adc
cli
sbb
cltd
sub
lods
mov
cmp
lock
adc
mov
push
sub
pop
fistpl
cmpsl
scas
jne
push
add
add
fidivl
movsb
sub
mov
add
cli
js
inc
pop
mov
push
inc
cmp
xchg
dec
push
mov
out
arpl
pop
xor
shrb
and
inc
cmc
xchg
inc
out
cmpsb
mov
data16
mov
dec
sbbb
int
mov
push
mov
out
sub
ds
sbb
and
les
add
dec
stc
inc
pop
sub
dec
jmp
mov
inc
fnstsw
lods
loope
sbb
testb
mov
xchg
xchg
cmp
push
scas
das
icebp
jae
out
je
push
adc
jmp
hlt
orl
or
sub
sbb
add
jo
pop
stc
pop
xor
scas
int3
mov
sub
pop
arpl
test
imul
addl
cmpsl
scas
xor
roll
js
xchg
gs
add
dec
mov
cmp
lods
divl
xor
or
pop
into
nop
or
push
push
cltd
inc
sbb
or
push
dec
scas
adc
pop
mov
lods
inc
dec
mov
push
pushf
xchg
das
or
push
mov
xor
ja
loopne
pop
mov
ljmp
int
popa
push
ret
rcl
xor
out
imull
xchg
mov
test
out
ss
add
add
mov
es
sub
ss
xchg
cltd
ja
sbb
sbb
mov
xor
mov
ret
cmpsl
push
daa
outsb
lea
stc
and
jge
mov
add
jnp
mov
daa
sub
inc
push
push
and
fidivrs
xor
pusha
push
fcoml
mov
flds
imul
or
vmovupd
ficompl
rorb
pop
lea
jnp
xchg
jo
xchg
adc
in
stos
pop
xchg
scas
mov
out
test
test
inc
cmpsl
dec
addr16
xor
daa
aaa
cwtl
cmp
movsb
sub
mov
std
sbb
aaa
xor
mov
pop
loope
jecxz
mov
push
popf
out
xlat
bound
jb
daa
pop
sti
jle
andb
pushf
xlat
mov
lcall
mov
mov
inc
enter
mov
test
or
aaa
cld
sbbb
pop
pop
popf
xchg
dec
dec
xor
test
and
mov
and
xchg
pop
or
loop
lret
pop
test
mov
mov
lret
cs
cmp
incl
int3
sbb
f2xm1
int3
iret
ret
arpl
sbb
stc
push
aam
bound
inc
and
mov
dec
test
nop
jae
mov
decb
dec
jmp
aas
cmpsb
mov
inc
xchg
enter
push
dec
push
imul
mov
add
sbb
leave
sub
imul
aad
pop
adc
movsl
fucom
pusha
jne
rorb
bound
add
and
mov
mov
xchg
mov
loopne,pt
inc
ljmp
pop
jp
out
imul
pop
out
xchg
sub
jle
jb
repnz
adc
pop
iret
xor
cmp
mov
and
xchg
add
mov
xor
sub
jle
outsb
mov
repz
xchg
push
lcall
imul
clc
nopl
andb
out
es
ljmp
cmpsb
pop
scas
jge
add
dec
and
jno
mov
ficompl
pop
lahf
fucomip
mov
stc
xor
add
stc
adc
push
data16
ds
and
add
xchg
daa
adc
jl
pop
pop
xchg
add
cmp
in
stos
and
xchg
xchg
jmp
adc
gs
mov
gs
adc
sbb
das
call
call
dec
dec
popf
mov
outsb
adc
push
xchg
mov
mov
push
pop
ss
push
mov
fwait
cwtl
ffree
and
pop
mov
stos
pop
xor
lret
add
lods
cmp
or
or
jge
rcll
sub
stc
mov
xchg
push
lods
mov
fcompl
jbe
jbe
and
std
out
jo
mov
xchg
adc
bound
mov
pop
mov
pop
jb
mov
xlat
xchg
repz
cltd
push
cs
mov
icebp
push
pop
xchg
int3
adc
jg
sub
stos
aad
cmp
xchg
jp
repnz
push
test
push
jg
imul
or
push
pop
jecxz
jmp
frstor
cmp
lods
cmp
jb
add
cld
mov
pop
jmp
jae
mov
jp
rolb
jmp
and
dec
std
stos
mov
xchg
pop
cmp
std
pop
pop
je
adc
lahf
adc
lods
cmp
fsub
cmp
sub
add
ret
mov
jns
scas
dec
nop
cs
xor
pop
and
cmp
or
insl
fwait
sbb
ja
aam
arpl
sbb
xor
mov
lods
lret
mov
xchg
xor
inc
js
sub
dec
or
mov
loopne
dec
imul
iret
jns
sub
jle
outsl
xor
cmpsl
scas
xadd
lret
imul
outsb
lahf
mov
in
mov
sbb
adc
enter
add
arpl
out
adc
and
ret
cli
sbb
xor
sbb
xchg
xor
lods
and
xchg
das
inc
aaa
adc
cs
int
scas
push
mov
mov
push
ret
iret
or
mov
xchg
lret
sbb
xchg
add
jecxz
xchg
es
mov
mov
or
mov
loopne
or
daa
mov
adc
movsl
and
rcll
or
aas
sub
jg
aad
xchg
push
repz
fcoms
test
mov
cmp
popf
mov
push
fdivrl
or
daa
mov
test
dec
inc
adcl
nop
mov
mov
sbb
repz
ficoms
jbe
push
mov
sbb
mov
mov
sub
pop
sub
sub
sbb
ret
mov
imull
hlt
mov
test
cmpsl
shll
call
xchg
cmp
rcr
ret
fwait
sbb
filds
add
mov
movsl
xchg
leave
shl
hlt
adc
fstp
and
add
sub
shl
adc
push
adc
js,pn
mov
inc
ja
shll
sub
iret
out
dec
inc
cmovp
lock
loopne
cmp
push
movb
lcall
in
pushf
lock
jnp
lods
adc
sub
mov
fcmovbe
mov
sbb
cwtl
ss
out
jle
mov
jecxz
adcl
sbb
push
jo
cmc
mov
inc
add
xlat
jbe
mov
aam
add
je
lods
in
inc
icebp
sti
push
and
add
jbe
mov
sbb
mov
push
or
enter
cmpsl
mov
ror
pop
xor
cli
loopne
dec
xchg
and
in
gs
mov
je
sub
push
sub
test
mov
xchg
and
inc
xor
popa
shlb
mov
xor
mov
add
push
loope
mov
adc
dec
sbb
gs
arpl
push
cs
repnz
sub
cmpsb
scas
shr
loop
sbb
movsl
lret
push
lcall
ljmp
ja
orb
mov
or
mov
inc
cmp
ja
ljmp
imul
sub
ljmp
and
jmp
sbb
or
ds
fsubp
jo
es
jno
ret
push
jmp
inc
adc
xor
push
and
stos
mov
cmpsl
cmp
inc
xchg
je
rcr
xchg
mov
in
sub
add
and
jo
dec
inc
jae
mov
ret
dec
lcall
xchg
mov
cwtl
inc
mov
sub
mov
mov
imul
sbb
out
test
xor
pop
std
pusha
inc
jp
insl
andl
mov
inc
cltd
inc
icebp
lock
pop
sbb
sbb
adc
js
mov
stc
dec
and
add
mov
mov
dec
ds
leave
jb
mov
push
loop
mov
jns
mov
push
sbb
ljmp
xchg
push
sub
rcll
popf
mov
mov
mov
cmp
pop
inc
jl
mov
rol
ss
inc
pop
xlat
les
js
dec
pop
outsb
or
cli
mov
lds
aas
movsl
or
outsl
into
loop
je
call
dec
add
dec
xchg
dec
int3
sbb
lods
js
data16
xlat
jmp
push
enter
imul
call
cmpsl
pop
aas
subl
imul
push
push
cmp
pusha
ret
fnstsw
pxor
sub
mov
testb
loope
sub
movsl
fimull
in
lock
inc
adc
ror
shll
test
push
pop
sub
test
dec
daa
sbb
mov
mov
adc
out
stos
xchg
lret
loop
xchg
push
mov
adc
sbb
push
mov
inc
fdivp
and
lcall
jp
sbb
lock
pushf
lret
inc
sub
dec
cmp
mov
or
xor
mov
xor
or
mov
xchg
ja
fldt
xlat
mov
or
popa
jbe
pop
mov
cmp
push
out
sbb
cmp
push
add
sub
cltd
test
std
xchg
or
imul
push
xor
push
mov
test
sbb
mov
push
sbb
pop
or
mov
aam
ss
xchg
jo
test
int3
dec
mov
inc
adc
mov
loopne
pop
jecxz
out
or
xor
testl
mov
stos
stos
fbld
mov
je
dec
shll
and
mov
pop
scas
push
jb
jg
adcb
push
push
xchg
mov
scas
popf
loop
push
sahf
xchg
scas
scas
push
jnp
sahf
push
daa
jle
sahf
add
xchg
xorl
push
fmull
and
mov
decb
fcmovbe
out
cmp
mov
rcrb
dec
sti
rcrb
push
jno
or
lods
push
hlt
pusha
pop
addr16
push
dec
clc
in
pop
cmp
daa
mov
nop
xchg
dec
es
lret
sarl
fldl
pop
push
cmpsl
xchg
mov
roll
lods
jl
repz
fnstenv
mov
jg
iret
std
mov
jg
xchg
lahf
mov
outsb
arpl
aaa
mov
jmp
mov
gs
pop
rcll
inc
lods
adc
push
ret
dec
sub
pop
xchg
adc
lea
jns
mov
aam
aad
movsb
push
es
mov
testb
int
xchg
sbb
xor
dec
cmp
pop
mov
xlat
and
sahf
xchg
mov
xor
dec
jns
lahf
out
xor
lahf
gs
jl
test
sub
cmc
imul
jns
adc
mov
lds
sbb
cmp
std
cltd
imul
jno
inc
sti
inc
mov
scas
filds
lods
mov
enter
outsl
loopne
or
daa
push
add
inc
inc
xor
scas
xchg
mov
add
out
out
fildl
bound
rclb
add
push
repnz
cmp
movsb
push
sbb
cmpb
xchg
ja
xchg
mov
push
int
bnd
daa
pop
ror
cmp
dec
dec
and
ds
mov
add
fldt
add
cmp
in
add
add
lods
dec
adc
and
lret
jbe
add
test
hlt
arpl
dec
or
or
stc
jg
scas
into
push
cmp
push
arpl
xchg
cmp
and
push
sbb
adc
or
push
rorl
xchg
jns
adc
out
mov
dec
loopne
push
addr16
daa
jecxz
loop
pop
push
lds
adc
xlat
je
loop
sub
dec
fs
lahf
inc
pop
xor
aaa
dec
jnp
push
xor
subb
std
lahf
mov
loop
enter
hlt
mov
in
inc
mov
sub
xor
push
mov
fistps
lea
lahf
cltd
sub
es
xchg
push
pop
dec
imul
jecxz
and
loop
adc
shrb
jnp
lcall
add
cmp
fidivrl
add
jbe
dec
pop
repnz
notb
push
mov
daa
mov
clc
add
mov
jnp
mov
jle
std
fmuls
and
xchg
loop
sbb
push
adc
xchg
mov
icebp
sbb
outsl
sub
imul
cltd
sub
sahf
ret
ljmp
mov
cmp
rorb
mov
jecxz
loop
ljmp
test
ljmp
addr16
jge
jecxz
push
xchg
push
rorl
divb
xchg
push
stos
aas
pop
xchg
cs
mov
loop
sbb
leave
inc
xor
int
mov
pusha
ret
cmc
aad
mov
mov
or
nop
out
sub
sahf
adc
pop
jp
in
push
or
jg
push
rolb
jecxz
sbb
lods
push
popf
cwtl
inc
lret
mov
pop
sbb
fisttpl
in
int3
ss
lea
xor
dec
pushf
out
pop
or
aad
mov
in
mov
xchg
add
ljmp
scas
insl
in
jb
das
f2xm1
sub
or
sub
sub
sub
lds
rcl
pop
add
adc
and
pushf
pop
jne
es
mov
sub
push
lods
sbb
bound
ss
dec
jb
xchg
push
iret
mov
sub
mov
lds
inc
test
xchg
mov
and
mov
fisubrs
hlt
and
dec
dec
dec
sub
shrl
in
leave
fs
outsb
insl
and
cmpsb
or
cmp
pop
cmp
sahf
aam
add
mov
ljmp
cmp
jg
pop
and
rcr
adc
pop
leave
movsl
xchg
fabs
mov
loop
add
int3
rorb
xchg
xor
mov
inc
loop
jnp
or
lcall
loopne
jnp
es
cli
mov
gs
in
sbb
icebp
xor
jno
xor
stos
nop
jb,pt
inc
out
sbb
inc
data16
out
inc
sbb
inc
jbe
movsb
popa
mov
ljmp
jle
pop
xchg
movsb
stc
jmp
out
dec
inc
pop
hlt
cld
ja
lret
shlb
and
jp
pop
repnz
mov
push
inc
and
or
addr16
fiadds
arpl
in
mov
xor
divb
sub
push
repnz
cs
lods
std
orl
shll
jmp
stos
mov
mov
mov
jne
test
adc
idivb
icebp
xchg
cli
stos
push
or
push
sbb
dec
pop
movsb
dec
shlb
xor
addr16
xchg
pushf
popa
jb
mov
cmp
cmpsb
jge
leave
pcmpgtb
fimuls
push
pop
xchg
dec
dec
stc
cmp
mul
mov
dec
fldl2e
sbb
pushf
test
data16
dec
movsl
hlt
scas
mov
jns
stos
sub
cmp
dec
jne
ret
mov
cmc
scas
sub
pop
lcall
or
pop
cmp
mov
or
fcompl
xor
jb
mov
in
jecxz
insb
xor
and
push
push
arpl
aaa
add
repz
or
xor
lea
sub
jns
lret
out
add
xor
jg
int3
cmp
in
adc
insl
cli
test
ds
fmul
mov
movsl
pushaw
sbb
mov
insl
add
enter
push
inc
mov
cmc
js
adc
insb
mov
or
xchg
loop
notl
push
fdivr
pusha
mov
in
mov
sbb
and
adc
ret
xor
or
push
sbb
out
adc
lahf
lods
gs
inc
mov
pop
sub
xchg
lret
add
pop
adc
ljmp
mov
xchg
or
in
add
mov
lea
inc
sbb
push
sbb
mov
inc
out
bnd
das
test
in
adc
adc
repz
sbb
jae
lcall
adcb
into
jbe
std
outsb
mov
test
stos
jne
xchg
xor
popa
sub
jmp
out
arpl
cmc
and
xor
add
mov
lahf
sub
pop
mov
and
adc
pop
mov
movsl
stos
push
adc
mov
insl
cmpsb
jno
push
aad
push
push
mov
loope
in
sar
imul
sarb
sub
push
dec
scas
jge
jo
mov
inc
rcll
aas
es
jb
cmpsb
jmp
dec
imul
adc
imul
pop
dec
and
pop
xchg
dec
movlhps
mov
pop
fsub
cmp
dec
sahf
mov
mov
pusha
xor
xchg
fadds
inc
lcall
xchg
popa
push
adc
stc
mov
dec
lods
shlb
stc
dec
out
or
inc
adc
jecxz
or
test
adc
push
stc
push
popa
out
lds
out
ljmp
pop
jge
test
xor
lahf
data16
push
add
aad
push
out
xchg
andl
sub
aas
aas
mov
adc
pop
xchg
cli
dec
adc
sbbl
dec
jecxz
cmpsl
lret
imul
pusha
push
scas
or
dec
sbb
cld
push
xchg
adc
dec
imul
std
mul
adc
sbb
in
loop
faddl
movsl
fcompl
popf
mov
adc
mov
cmpsb
mov
pop
xchg
cmp
jae
xchg
push
jl
pop
js
icebp
cli
test
sub
cmp
nop
pop
and
mov
adc
cmp
jecxz
fnstsw
xor
push
cltd
mov
sbb
jmp
push
cmp
out
mov
dec
fildl
xor
mov
mov
sub
jp
and
ja
dec
js
enter
repz
repnz
cld
and
cltd
lcall
imul
jae
jp
xor
clc
call
pop
jle
fcoms
stos
sahf
sbb
mov
loop
enter
mov
out
cmp
stos
mov
bound
out
mov
out
xor
aas
mov
mov
push
dec
xchg
test
sbb
cmp
push
dec
insb
push
pop
lods
add
mov
dec
cmp
dec
aad
rclb
test
add
xchg
xchg
in
ljmp
dec
mov
iret
repz
adcl
jecxz
mov
movl
xchg
mov
mov
test
cmp
xchg
icebp
mov
cmp
std
sbb
xlat
lods
mov
or
fsubr
xor
mov
fisubrs
or
in
pop
std
push
dec
scas
pop
dec
scas
mov
repnz
aaa
mov
ret
push
pop
std
in
int3
sti
ja
aad
sti
push
stos
mov
orl
jp
inc
jno
dec
cmp
ja
inc
push
push
sbb
pop
jno
jnp
push
icebp
dec
dec
push
idivl
jo
dec
sbb
push
pop
mov
call
sbb
hlt
clc
and
sbb
cld
out
cmp
loop
insl
cmpsl
cwtl
js
outsb
in
cmp
inc
subb
jb
std
movsb
dec
adc
popa
repnz
gs
xor
inc
insb
xchg
out
pushf
mov
cmp
rcll
cld
xor
dec
ror
pop
push
jae
ljmp
sub
orb
lea
sti
arpl
subl
jl
mov
call
fidivl
pop
cmp
sbb
xor
mov
scas
ljmp
jp
movsl
pop
rcrb
push
adc
inc
mov
xor
mov
fstpl
add
xchg
xlat
add
cmpsl
or
mov
dec
and
xchg
cmpsb
adc
jno
bound
inc
str
jg
mov
js
add
dec
popa
subl
outsl
bound
mov
jns
out
mov
out
outsl
push
nop
imul
adc
cmp
fdivl
jle
ret
and
addb
popa
cmpsb
fiaddl
in
negb
nop
repz
in
pop
push
sub
mov
das
insl
rorb
mov
aas
in
mov
rep
jp
stos
mov
cmp
or
jl
mov
and
movsb
push
cli
xlat
xor
pop
je
clc
jo
pushf
scas
loope
inc
out
test
rolb
adc
inc
or
sbbl
js
push
popa
push
cmp
sahf
or
pop
sub
bound
jo
dec
jle
xor
sbb
inc
push
and
ficoms
sbb
pushf
jg
fsub
jbe
ret
xchg
dec
shlb
mov
scas
das
sub
mov
dec
je
loopne
sbb
dec
dec
dec
mov
out
cli
mov
leave
in
in
test
int
mov
fsubrs
pop
leave
nop
jp
les
imul
and
hlt
in
push
xchg
xchg
push
mov
rcrb
xchg
pop
inc
cmp
cmp
push
push
test
fildl
lret
push
pop
in
lock
xor
adc
mov
sbb
gs
cwtl
jne
int3
nopl
mov
sub
jne
scas
add
cmp
add
jmp
inc
fwait
or
iret
or
cmp
movsb
dec
in
dec
jnp
in
rcll
fs
pop
imul
mov
jge
inc
or
cmp
lods
or
mov
or
push
stos
push
pop
push
jge
mov
and
fwait
test
or
roll
sub
stos
lahf
jnp
aad
adc
push
cs
shll
dec
mov
sbb
in
insb
bnd
adc
imul
dec
je
inc
loop
pop
pop
xchg
sbb
ds
test
sub
sbb
sbb
sub
cli
clc
outsb
mov
call
push
xchg
cli
xlat
ret
daa
outsl
push
push
dec
push
rcrl
insl
repnz
cmp
std
jo
aam
or
sub
scas
mov
fdivrl
cmp
aam
cmp
sub
mov
sbb
push
xchg
inc
enter
outsb
xlat
pop
cmp
hlt
popf
rcrl
xor
mov
stos
add
out
jno
mov
jge
pop
sti
outsb
mov
popf
lret
cmp
test
mov
jp
cmpsl
imul
xor
add
notl
cmp
and
popa
jbe
cmp
mov
repnz
and
cwtl
int
fdivrs
mov
arpl
cltd
sti
faddl
pop
mov
shrl
push
mov
fdivr
outsl
pop
inc
int3
cmpl
xor
inc
xor
out
cmp
sbb
adc
push
in
sub
lea
filds
cs
inc
jns
fwait
test
pushf
mov
jbe
push
aam
sub
jge
in
cmpsb
fidivs
xor
aas
adc
aam
cmpl
mov
lods
inc
mov
lods
fwait
cltd
mov
js
and
fiadds
ja
push
clc
mov
and
pop
mov
mov
daa
inc
inc
or
int
xchg
pop
ficoms
jp
pop
in
ror
jp
jmp
loop
je
dec
sub
negb
dec
push
test
dec
mov
fnstsw
and
sar
lods
adc
sub
mov
cs
in
rorl
add
shl
sub
add
cmpl
fcmove
sarl
push
inc
ret
mov
pop
dec
and
push
xchg
sahf
repz
mov
dec
int3
mov
jp
cmp
inc
daa
lock
scas
xchg
les
or
mov
mov
mov
push
adc
ja
icebp
jnp
mov
push
push
sub
test
test
mov
scas
jae
add
xor
aaa
add
int3
pop
xor
loope
push
mov
es
push
cltd
and
and
jae
add
cmpsb
cmpb
enter
mov
jecxz
sbb
call
call
cmpsb
jp
xchg
or
pop
jns
jl
push
std
frstor
lock
fnstsw
rcrb
aaa
dec
aaa
dec
xlat
in
xlat
in
dec
mov
daa
rclb
loopne
nop
push
mov
jge
jp
into
mov
xchg
es
sub
push
mov
push
call
and
ds
test
fcomi
xchg
dec
ret
les
sub
jnp
popf
sub
add
xor
mov
mov
daa
leave
xor
mov
mov
push
aam
cltd
push
jecxz
int
jmp
testb
cli
inc
std
pop
sbb
btc
xchg
mov
inc
loop
sbb
repnz
mov
dec
pop
iret
test
inc
pop
cmpsl
xor
or
cmp
enter
push
test
lcall
mov
mov
xor
jl
jge
jae
sub
and
mov
inc
je
sub
sbb
mov
jge
push
je
ss
mov
test
test
es
or
mov
scas
jecxz
nop
leave
sbb
fsts
aad
imul
outsb
ret
enter
mov
je
imul
lods
int
and
nop
ja
xor
dec
sbb
xlat
push
mov
inc
push
repz
sub
xor
into
xor
pop
adc
adc
rorb
repz
xlat
push
jae
mov
adcb
mov
inc
sbb
and
out
sbb
ret
out
xlat
inc
imul
push
loope
sarl
jmp
push
xorb
ds
xchg
cmpsl
bswap
imul
dec
ds
dec
test
add
in
test
push
fcoms
lret
fsubr
xchg
mov
inc
mov
sub
push
push
or
add
sahf
aam
xchg
pop
movsl
sbb
add
dec
adc
jbe
insl
bound
loope
sbb
jmp
jmp
jmp
imul
cmpsb
inc
push
sub
fld
pop
test
out
pop
addr16
xchg
inc
ret
pop
lret
pusha
imul
or
imul
jae
inc
push
cmp
and
add
fwait
add
gs
push
je
adc
sbb
inc
xchg
scas
dec
push
lds
mov
ss
orl
xor
mov
push
cmp
push
jge
out
mov
inc
jl
jg
es
and
lods
mov
mov
gs
popf
jmp
test
push
call
jp
xor
adc
sbb
lret
jns
xlat
pop
lret
jo
repz
xchg
jecxz
add
mov
out
nop
cwtl
fstps
push
popf
rolb
sub
fbstp
dec
cmpsl
jb
mov
inc
sbb
cmp
push
fisubl
add
lahf
leave
stos
gs
leave
fdivrs
fldt
cmpsl
and
fwait
jl
jno
incb
and
and
jp
pop
loope
lock
jge
shr
and
sarb
pop
jl
add
fcomps
sbb
inc
mov
push
ljmp
push
mov
daa
int3
push
mov
leave
cmc
jno
aaa
aam
xchg
pop
sbb
lar
insl
fst
sbbb
sub
dec
xchg
xchg
fisttpll
mov
xor
loopne
push
leave
sub
call
stos
add
and
jo
adc
jmp
xchg
inc
movsl
push
sbb
lods
jecxz
test
push
aas
and
xlat
das
cs
out
insb
rolb
add
jne
out
cmpsl
pop
lahf
jne
out
push
add
and
mov
fwait
add
or
mov
add
lea
mov
ror
cmp
sbb
sbb
or
je
ds
movsl
pop
int
lds
into
std
mov
dec
shll
cmpsl
mov
mov
jb
xchg
add
jecxz
xor
data16
adc
xchg
scas
rol
loope
sbb
jge
in
sti
jecxz
mov
testb
je
add
pusha
rcrl
rcrl
mov
ja
cmpsb
mov
iret
xchg
inc
inc
xchg
aam
adc
jp
jns
sbb
inc
pop
je
add
pop
mov
ud1
ljmp
push
xchg
mov
test
lsl
dec
inc
sub
sbb
cmp
xchg
mov
jecxz
jecxz
jno
sub
negl
cmpsl
lahf
sub
sub
popl
or
rcll
shlb
popf
push
adc
cmc
lahf
call
mov
add
cmp
roll
cld
imul
nop
clc
add
test
inc
adc
fs
inc
jle
push
and
jge
test
pop
stos
mov
jp
sbb
jmp
cli
lret
std
add
jnp
jb
push
out
cmpsb
sbb
xor
sbb
add
mov
in
pop
test
lea
out
sbb
test
ja
add
popf
ss
xchg
rcrl
test
ljmp
and
in
jne
push
sbb
scas
mov
xor
cmp
xor
scas
notb
enter
iret
jecxz
stos
inc
test
fnstenv
sbbl
or
data16
pop
mov
xchg
lods
fbstp
push
and
stos
in
dec
repz
sbb
push
cmp
jp
inc
fwait
repz
imul
lds
inc
push
jae
mov
cmc
shll
lret
adcb
jne
push
xor
mov
addr16
mov
sbb
lds
push
sarb
pop
lds
xchg
sbb
mov
xchg
jbe
lea
inc
jnp
addr16
sub
cltd
xchg
mov
or
mov
and
cmp
mov
out
repz
sbb
push
mov
out
add
sbb
mov
outsb
lret
xchg
push
mov
xor
into
push
xor
pop
cmp
into
sub
test
out
cmpb
dec
int3
mov
in
int
sbbl
xchg
pop
pusha
mov
inc
sbb
sahf
and
add
int3
ljmp
jp
aad
lods
repz
mov
insl
leave
push
push
fs
jbe
mov
mov
in
mov
dec
mov
mov
lahf
jle
aas
push
repnz
xchg
inc
cltd
push
movsb
pushf
popf
push
test
push
jbe
mov
cmpl
sub
ljmp
sbb
sub
ret
add
rcrb
leave
or
push
cmp
xlat
cmc
movsl
inc
push
mov
dec
lcall
arpl
push
pop
xchg
arpl
and
mov
and
shrl
mov
sub
sbbb
std
mov
fnstsw
ja
push
imull
xchg
xor
fsts
ret
or
jb
int
xor
fidivs
adc
stos
cmpsb
leave
shlb
xorps
adc
dec
mov
jp
jg
adc
push
ja
jae
stos
ss
pop
or
mov
es
lock
inc
popa
sahf
and
pop
and
pop
cmpl
sub
scas
fnstenv
pusha
aam
xchg
mov
ret
subb
sbb
mov
and
cltd
test
ss
mov
xchg
in
lret
rolb
scas
into
mov
insb
jg
push
mov
jmp
stos
call
mov
data16
mov
fs
js
sbb
fcom
shll
xor
sub
cmp
and
out
mov
icebp
or
jmp
psubsw
pusha
xor
orl
rcrl
dec
test
push
in
hlt
inc
int3
sub
cmp
js
cmpsl
sub
pop
mov
iret
es
or
loopne
cmpsb
push
inc
mov
push
pop
scas
push
sbb
xor
movsb
xchg
sub
in
aaa
dec
xor
or
sarl
cld
xchg
mov
mov
xor
imul
or
ljmp
cmp
push
in
ss
xlat
pop
insb
or
jmp
test
xchg
jae
xchg
fwait
mov
fidivs
cmc
mov
into
xchg
stos
mov
dec
cli
and
jb
inc
add
ljmp
jo
cmp
cmp
repz
arpl
or
fcmovu
adc
dec
orb
xchg
xor
jmp
jae
loope
push
test
mov
push
xor
std
mov
sarl
jb
sub
mov
or
outsb
or
and
les
fisubrs
dec
pushf
jnp
jo
les
mov
imul
pusha
out
inc
test
pop
push
cltd
sub
pop
xchg
and
subl
and
in
imul
into
movsb
sub
aaa
mov
pusha
sub
inc
inc
push
add
out
lds
cmp
test
mov
push
subb
dec
or
cmp
in
iret
or
sbb
enter
popa
jnp
pop
clc
or
cmpsb
stos
dec
rcrl
decl
mov
jecxz
pushf
sbb
and
push
mov
mov
inc
jp
scas
int
or
movsl
push
sub
and
fiadds
mov
rcr
xor
inc
lods
inc
fidivs
std
push
jge
adc
neg
mov
mov
adc
jge
outsb
xor
xchg
loop
out
mov
mov
mov
icebp
test
mov
adc
scas
and
or
gs
push
add
xchg
xor
sub
faddl
dec
les
fisttpll
cmc
into
mov
mov
jg
pop
das
movsl
in
mov
out
das
test
out
imulb
pop
xchg
movsb
es
insb
nop
mov
dec
and
mov
inc
ja
bound
test
imul
in
hlt
add
andl
xchg
in
mov
push
addb
sub
mov
xchg
add
test
repz
outsb
lahf
out
and
cwtl
push
adc
scas
lret
cmp
pusha
sbb
lahf
jno
or
aaa
in
mov
xchg
mov
insb
mov
mov
popf
sub
rcll
or
out
or
cld
xchg
clc
lret
jmp
mov
mov
frstor
int
std
lock
das
mov
mov
hlt
push
dec
iret
jns
sarl
xchg
out
and
pop
inc
nop
fsubr
mov
aas
jl
mov
scas
push
dec
imull
and
xchg
fs
jno
sub
adc
xchg
aas
mov
and
adc
push
fdiv
mov
cltd
loopne
pop
sub
call
cltd
dec
jecxz
int3
add
ret
test
and
mov
sti
mov
pop
push
sbb
das
dec
xchg
mov
dec
cltd
movb
imul
or
data16
ret
inc
mov
inc
call
es
or
push
push
sub
les
push
daa
inc
xchg
addr16
mov
inc
out
push
mov
adc
adc
mov
bound
aad
gs
mov
in
dec
scas
cmp
imul
lret
xchg
mov
in
mov
lahf
popa
mov
dec
xchg
cmovl
xchg
fidivrs
loopne
sub
shl
pushf
jb
enter
call
adc
outsl
sub
neg
lea
enter
or
insb
mov
xor
mov
fcomps
fcomip
push
push
or
jnp
ficoms
sbb
int
mov
sbb
popa
and
cmp
enter
sbb
popa
push
dec
mov
lock
std
fimuls
xchg
call
pop
push
int3
shll
aaa
dec
shll
jns
in
in
mov
ds
mov
xchg
jmp
test
xchg
mov
inc
lret
add
pushf
push
aas
in
mov
push
js
mov
ss
icebp
mov
fdivrs
add
gs
add
cmp
mov
repnz
add
in
iret
les
test
inc
imul
push
inc
lock
pop
das
jnp
lds
adc
lcall
inc
out
imul
jne
dec
fisttps
xchg
or
inc
dec
adc
std
loope
sbb
mov
xchg
pop
cmpsl
popf
leave
jb
cs
and
jle
stc
push
fldl
fsubrl
lock
rcr
cs
jae
adc
cmp
adc
call
dec
mov
dec
ror
shll
jecxz
dec
jp
push
imull
mov
in
aad
inc
xchg
xor
jl
cmp
fistpl
xor
aad
incl
data16
or
or
inc
call
jle
adc
pop
insl
pop
pop
cwtl
insb
cmp
pop
ljmp
das
inc
or
or
insl
mov
scas
push
jecxz
mov
jb
lods
sbb
jge
mov
adc
iret
rcrl
pop
push
call
fs
jae
pop
cmpsb
jo
scas
mov
sub
xor
mov
clc
xor
mov
cmc
push
sbb
push
orb
adc
pop
or
pop
adc
iret
js
dec
mov
sub
ljmp
jns
testl
out
or
es
cmp
addl
pushf
dec
xchg
dec
int
pop
das
adc
cmp
inc
dec
push
in
ljmp
pop
jo
mov
imul
arpl
xor
mov
pop
mov
mov
dec
push
jmp
lret
sbb
pushfw
les
into
clc
jbe
shr
or
sbb
dec
leave
mov
xchg
xorl
andl
js
sub
mov
aas
mov
rorl
popa
and
sub
cmpsb
jbe
inc
pop
pop
adc
push
push
mov
xor
xchg
scas
cmp
xchg
int
bound
jmp
dec
add
fs
rcr
jge
icebp
daa
pop
jae
stc
addr16
mov
les
testl
ds
pushf
repnz
les
repz
loopne
mov
ret
push
jle
mov
adc
mov
imul
adc
xchg
stc
xchg
mov
arpl
cmp
fwait
or
fisttps
adc
iret
cmp
inc
pop
lock
mov
and
sub
sub
movsl
sub
out
xchg
jmp
shlb
cmp
das
xchg
out
es
cltd
sub
add
mov
lock
lea
mov
test
lods
sbb
sti
incl
sub
repz
mov
inc
push
jnp
outsb
adc
mov
inc
xchg
pop
push
inc
and
jae
adc
arpl
add
mov
mov
icebp
rclb
or
stc
jg
out
scas
pop
sbb
sbb
mov
mov
mov
loope
push
jne
repnz
dec
xor
push
mov
jae
dec
std
pop
add
mov
adc
lea
aas
pop
shlb
mov
pop
test
dec
sbb
mov
jnp
sbb
push
mov
push
sti
fstl
out
test
push
xor
fidivl
mov
rcrb
arpl
int3
icebp
test
jg
call
jnp
cmp
movb
in
movsl
sub
ljmp
xor
aaa
fisubrl
xlat
jae
xor
sbb
setp
add
push
scas
mov
addr16
in
cwtl
xor
sbb
and
cmc
fnstenv
xchg
mov
jo
mov
adc
and
jmp
cli
lret
pop
jae
mov
push
fbld
test
pop
or
addr16
enter
leave
add
xchg
push
arpl
xchg
fwait
lcall
xchg
rclb
sbb
lods
dec
cmp
outsl
jno
jecxz
popa
adc
adc
sbb
repz
xor
imul
jne
cmc
stc
fmuls
dec
push
inc
xor
daa
leave
jge
int3
add
stos
lcall
jmp
and
ret
repz
out
push
dec
jnp
adc
pop
fucomip
sub
addr16
pop
pusha
push
out
fdiv
fsubs
dec
stc
cli
mov
outsl
inc
popf
fmull
mov
xor
pop
fisttpll
ret
sbbb
insl
mov
cmp
jae
lret
add
dec
cli
xor
ja
or
stc
shrb
into
jmp
add
shrb
add
mov
mov
scas
sarl
fldl
shl
addl
rclb
cli
jne
sub
sahf
push
mov
adc
in
dec
mov
dec
inc
imul
out
jns
repnz
mov
push
mov
mov
iret
dec
repnz
pushf
aam
mov
in
add
xchg
out
push
pop
adc
and
sbb
aas
orl
jmp
cmp
inc
mov
sahf
pop
enter
push
xchg
call
shlb
aam
mov
mov
dec
shrl
cmp
adc
sub
stos
sub
sbb
adcb
js
inc
test
pusha
aad
aaa
js
cmpsb
xchg
pop
clc
cmc
repnz
inc
fsubrs
divl
addl
xchg
dec
inc
xor
inc
insb
shlb
inc
and
dec
iret
ret
das
pop
mov
mov
and
lock
sahf
inc
stos
call
dec
or
pop
jl
xor
sub
xchg
cmp
in
imul
adc
roll
jbe
cmpsl
dec
jae
gs
popf
idivb
sub
add
daa
gs
xlat
out
inc
lea
leave
mov
lds
testl
movsb
bnd
je
mov
sub
lret
xchg
leave
pop
arpl
cmpsb
repz
sub
shll
dec
lcall
dec
xchg
int
lds
mov
xchg
pop
pop
dec
insb
shrb
stc
cmp
xor
ret
inc
test
clc
popa
ror
in
xchg
pushf
xchg
lahf
aas
lods
aas
lock
add
push
lea
sbb
and
stos
xchg
repz
out
cmpsl
or
ret
xchg
je
sub
ljmp
sub
add
lahf
filds
sbbl
cmp
mov
adcb
cld
or
das
sbb
decl
add
mov
out
add
jo
jge
jns
inc
sbb
dec
xor
fcomi
push
dec
mov
pop
into
add
dec
push
test
sub
dec
mov
mov
aas
mov
mov
xchg
sbb
push
les
fs
mov
xor
ja
in
jne
mov
cmp
pop
shrb
pop
dec
sbb
mov
pusha
xor
shrl
push
mov
outsb
sahf
mov
and
adc
inc
push
ret
loope
movsb
je
aad
xor
in
xchg
lret
inc
inc
rep
mov
xor
pusha
test
add
mov
pop
cmp
pushf
adc
cmp
mov
scas
add
fstpt
fstpt
and
outsl
jg
in
jl
cmp
dec
cli
and
or
repz
and
xchg
or
aaa
cmp
jmp
imul
jnp
fsubrs
frstor
inc
fidivrl
enter
xchg
xor
enter
repz
sub
insb
xlat
imul
out
dec
cmpsl
pop
sub
adc
int3
jo
push
push
and
or
mov
mov
cmp
nop
lcall
fstpl
dec
test
or
fmuls
ds
add
mov
dec
cmp
pop
arpl
inc
adc
xchg
mov
lcall
loope
ret
pushf
lods
int3
call
popa
pop
pop
ja
dec
and
insl
mov
cmp
shlb
out
insb
inc
jb
sbb
jae
sub
aad
loope
fcomps
jp
fstps
push
or
std
sbb
adc
and
enter
sub
fistpl
scas
add
dec
shlb
in
cli
and
sbb
sbb
mov
add
ljmp
cli
xorb
mov
jp
sbb
fcoms
adc
pushf
into
mov
push
cmp
push
fwait
inc
jmp
mov
pop
aaa
and
or
dec
sar
pop
dec
nop
hlt
xchg
enter
aad
push
jmp
inc
xor
stc
jne
mov
mov
xor
jo
icebp
xlat
andb
inc
out
imul
xor
pop
inc
fwait
sub
leave
push
inc
mov
dec
lret
fwait
repz
pop
lret
fisubrl
out
sub
xor
add
aad
sub
rcl
xor
push
jae
cmpsl
push
or
jge
jecxz
mov
sbb
cmp
or
jle
lock
sub
and
jg
cmp
repz
sbb
movsb
and
or
stc
push
pop
mov
dec
sub
or
pop
test
lock
or
cmp
das
fldt
and
outsl
ficoms
cld
inc
mov
fwait
lea
add
sbb
sbb
pop
cmc
addr16
sbb
push
add
pop
repz
push
add
pushf
scas
mov
rorb
lods
cmp
mov
xor
arpl
sub
push
insb
je
ret
dec
mov
sahf
popa
pop
xchg
mov
and
outsl
sub
cmp
xor
loope
jecxz
aas
cld
shlb
test
orl
scas
mov
pop
jns
xchg
mov
sahf
jns
sub
sahf
xchg
push
and
sahf
xchg
sub
andb
dec
ds
fst
scas
inc
xchg
stc
test
andl
adc
add
mov
mov
add
clc
push
and
sub
lcall
gs
push
mov
push
xchg
push
cltd
push
call
data16
sub
push
clc
cli
cs
mov
fsubrs
pop
mov
add
shll
add
sbb
or
xchg
popa
out
jl
add
pushf
mov
clc
ret
mov
mov
test
jnp
xchg
insb
adc
fidivrl
add
cltd
cmp
dec
xor
jbe
and
pause
in
iret
and
xor
mov
stos
mov
in
adc
rcr
insb
lock
jae
out
loope
pop
out
jb
jp
sarb
fucomi
xor
insb
out
and
dec
popf
nop
mov
lock
rolb
shlb
dec
pop
xchg
icebp
out
je
cmp
shll
push
mov
mov
mov
push
mul
dec
ja
and
cmc
repz
js
mov
add
test
inc
mov
xor
iret
lds
xor
adc
rclb
mov
xchg
or
xchg
jbe
insb
xchg
dec
xor
xor
sub
test
xor
lea
sub
jmp
out
and
mov
aas
mov
xchg
push
and
or
rcl
or
clc
mov
sub
xchg
not
xchg
adc
loope
sub
in
lcall
mov
subl
sbb
pushf
test
xchg
inc
out
adc
mov
cmp
xchg
dec
imul
fidivs
loop
data16
roll
pop
imul
enter
dec
xchg
sbb
jp
jle
add
mov
adc
das
lret
jmp
stos
nop
in
and
mov
sbb
repnz
mov
inc
leave
inc
enter
pop
mov
or
xchg
xchg
insl
xor
rol
and
mov
fs
adc
push
xchg
shlb
pop
in
lds
lock
pusha
mov
hlt
enter
rorb
inc
mov
add
xor
stc
syscall
sub
push
test
in
movsb
push
and
sbb
repz
call
sbb
outsb
pusha
mov
jo
mov
mov
test
iret
dec
jb
clc
loopne
jl
xchg
fs
jmp
sbb
mov
push
pop
mov
inc
pop
fisubs
push
adc
xor
enter
pop
fidivrs
xorb
inc
lcall
ljmp
sbb
jo
xlat
arpl
adc
movsb
ja
sub
jle
push
cmp
fwait
shrl
sti
loope
dec
subl
jns
js
or
cmpsl
sbb
and
push
jb
fidivrl
push
or
add
or
and
and
push
push
add
push
cmp
mov
xchg
lcall
dec
xchg
push
aad
loopne
adc
push
cmc
call
dec
pop
mov
xor
sub
sbb
jl
cwtl
sbb
cmp
insb
cld
and
out
cmc
mov
icebp
xlat
sbb
arpl
push
mov
jae
dec
ss
cmpb
lcall
inc
jne
pop
fucomi
or
add
xchg
push
andl
xchg
mov
movsb
adc
in
cmpsb
sbb
xchg
adcl
xchg
es
pop
aaa
in
aas
std
dec
adc
out
mov
xchg
and
mov
add
lret
adc
mov
insb
sub
pusha
sbb
arpl
das
add
cld
rolb
jmp
lret
inc
xorl
cli
push
xchg
outsl
gs
gs
push
sti
lret
in
aad
lods
int3
sbb
hlt
adc
ret
nop
mov
insb
mov
mov
ret
push
pop
std
and
std
xor
shrl
sbb
sti
jecxz
xchg
ror
mov
insl
loopne
pop
mov
jmp
cmp
push
out
fisubl
sub
jmp
sub
cwtl
mov
jg
xlat
mov
mov
mul
sbb
insb
ss
sbb
out
mov
pop
jecxz
cld
addb
pop
cmp
pop
decb
addr16
inc
pop
scas
jge
test
pop
or
jo
ds
imul
mov
mov
jle
cltd
inc
xchg
jo
sub
hlt
lcall
adc
sub
iret
push
fcom
ret
sti
adc
cwtl
shlb
xor
sub
icebp
mov
lcall
xor
or
mov
xchg
movl
pop
loope
push
in
push
lcall
mov
in
dec
add
es
sub
gs
sub
je
lods
sbb
xchg
stos
mov
loop
mov
loope
cmp
xor
add
out
sub
les
aaa
stos
and
and
adc
push
add
mov
dec
pop
iret
or
into
ficomps
gs
sbb
sbb
fisubs
in
pop
das
decb
jns
lock
cmp
mov
xor
sbb
fcompl
sti
sahf
mov
push
leave
jo
and
ja
push
jae
mov
mov
mov
mov
sarb
mov
nop
dec
mov
shrb
data16
or
or
sti
mov
fimuls
dec
in
add
mov
clc
xlat
xlat
dec
repz
push
cld
test
mov
jno
xchg
sub
jns
insl
out
push
sub
add
mov
mov
dec
outsl
movsb
adc
add
jae
mov
cmp
nop
popa
sub
orl
les
imul
xchg
sub
ss
xor
ret
and
push
shl
xor
jl
push
xchg
repnz
sbb
repnz
inc
xchg
subl
jno
and
ljmp
cmp
mov
jo
std
mov
xorb
fdivl
enter
inc
mov
adc
xchg
std
aaa
add
lods
inc
insw
shlb
out
fwait
or
pop
shrb
jg
movsl
inc
sbb
dec
aaa
mov
in
mov
rcll
mov
jg
add
test
adc
clc
pop
jg
adc
pop
push
leave
ss
jns
jae
xorb
loope
mov
mov
adc
add
mov
cmpsl
and
fistl
sbb
jge
cmp
das
test
xor
out
dec
inc
push
in
push
pop
imul
mov
addr16
mov
mov
int
add
jne
push
in
mov
xchg
adc
push
lcall
test
or
cs
gs
mov
mov
insl
sti
dec
clc
cmpsl
sub
mov
xor
mov
mov
lds
lods
mov
stos
sub
push
pop
xchg
pop
sbb
cmpsl
imul
bound
sub
push
inc
inc
pop
rcpps
mov
xchg
lds
push
testb
xchg
pop
mov
pop
inc
ffree
gs
js
push
aaa
cmpsb
sarb
mov
xchg
out
mov
or
push
lds
jnp
push
insb
and
or
dec
jns
data16
in
cmpsl
dec
jne
mov
xchg
fsts
cmp
xlat
ficompl
sbb
inc
push
mov
dec
push
bswap
dec
xchg
mov
dec
or
in
icebp
imul
push
rcrb
xchg
sbb
iret
negb
repz
sahf
xchg
push
pop
lea
sahf
jne
popa
loope
push
gs
test
push
mov
loop
addb
clts
pop
mov
inc
adc
int3
outsb
out
leave
mov
mov
mov
pop
hlt
hlt
pop
push
inc
pop
jbe
jp
test
stos
jb
sub
mov
sbb
in
pop
test
mov
mov
mov
adc
ss
in
mov
out
xchg
jno
mov
daa
jge
mov
mov
push
inc
or
pop
sub
scas
jne
dec
aam
pusha
and
push
lea
scas
repnz
push
or
sub
push
pop
and
mov
add
out
cmp
in
rolb
roll
mov
pop
aas
inc
sbb
rcrb
les
adc
aaa
adc
jbe
inc
stos
repnz
enter
xchg
iret
les
pop
lock
push
in
repz
dec
js
leave
jbe
adc
loop
sbb
sbb
inc
mov
push
roll
insl
int
dec
repnz
lret
mov
and
push
pop
pop
cmc
or
mov
jo
and
inc
mov
sub
or
pop
pop
stos
mov
mov
repz
addr16
mov
ja
jb
lock
cmpsl
xchg
mov
sbb
cld
and
je
sar
or
and
cld
pop
push
dec
lods
ds
sti
add
push
mov
xchg
out
cmpsb
nop
xorl
inc
and
scas
fdivl
and
imul
es
fstpl
testl
push
lock
mov
aad
pop
lods
cltd
std
or
ss
mov
es
push
in
add
pop
aaa
insl
ret
outsb
rorl
add
dec
hlt
fldt
cmpsb
es
sub
int3
cmp
leave
rcrb
loope
xlat
sahf
jge
mov
dec
push
pop
das
or
and
mov
jmp
icebp
hlt
mov
xorb
mov
and
dec
outsl
cmpsl
mov
cmp
out
mov
aaa
mov
mov
xchg
arpl
dec
dec
inc
add
cmc
stos
xor
and
mov
cwtl
lret
out
aas
fildll
add
out
dec
pop
fcmovbe
mov
nop
popa
test
divl
movsb
rcr
mov
roll
jns
ret
dec
data16
dec
dec
inc
jge
testl
mov
or
dec
stos
lock
lods
xchg
cld
bound
mov
ds
ja,pn
sbb
mull
and
sti
fstp
jnp
and
sub
popf
out
jnp
imul
imul
mulb
lret
test
adc
xchg
lcall
mov
fidivrs
jmp
subl
fldt
inc
test
arpl
add
pop
adc
dec
push
and
test
sahf
xchg
jb
pop
xchg
dec
and
xor
aad
mov
inc
push
cmp
ss
ja
mov
into
in
daa
mov
mov
or
data16
dec
repz
mov
ret
mov
xchg
mov
lods
movsl
or
and
mov
daa
es
stos
xchg
xchg
jmp
loop
push
fistl
std
cmp
ds
lea
pusha
cmpsb
mov
or
les
rep
sahf
xchg
sbb
jb
jb
fnstenv
ds
ss
mov
inc
sub
jno
pop
mov
cmpl
out
popf
adc
jns
push
aas
in
mov
test
movsb
inc
lods
fisubs
sub
pop
push
push
pop
scas
mov
negl
movsl
cmp
mov
cltd
push
push
or
sahf
leave
psadbw
push
cld
into
nop
push
pushf
or
fisubrl
jne
addl
int
std
enter
and
rcrl
pop
sbb
jbe
mov
xorb
data16
pusha
jnp
jo
sub
cs
in
xchg
xchg
pop
fwait
adc
imulb
scas
or
cmp
andl
mov
xor
leave
jecxz
mov
stos
stc
int
inc
adc
imul
daa
mov
lds
hlt
filds
xchg
sub
jo
jecxz
bound
sbb
add
xchg
push
loopne
out
lret
pop
pop
imul
pop
dec
test
sub
into
subl
mov
mov
xchg
cmp
inc
mov
pop
push
test
or
mov
push
xor
pusha
pop
dec
jb
cs
add
lock
out
and
subl
inc
mov
in
fxch
repz
push
pop
fidivl
cltd
repnz
adc
pushf
xchg
repnz
sti
xchg
push
into
icebp
or
into
sub
cs
xchg
idivl
in
icebp
jne
xor
les
xchg
sub
add
je
int3
ljmp
cli
add
mov
jno
adc
sahf
mov
mov
les
jnp
xchg
les
and
out
mov
push
vcvtpd2dqx
inc
call
jno
xlat
pop
xchg
in
cltd
or
daa
cltd
cmp
and
cmpsb
and
dec
rorb
cltd
sub
fwait
add
sbb
mov
xor
jo
insl
fisubrl
repz
inc
xchg
cltd
adc
mov
xchg
inc
cmp
cmp
fwait
pop
sar
mov
stos
inc
pop
lock
adc
lcall
sub
xchg
pusha
inc
cwtl
jp
test
adc
add
addr16
arpl
mull
stos
push
lea
mov
and
sbb
repz
dec
and
pop
jnp
xor
xchg
int
mov
imul
in
push
push
sub
popf
or
jge
push
pop
push
mov
movsb
dec
cmp
jno
mov
adc
ljmp
mov
insl
das
cmc
mov
test
in
cmc
ror
out
fsubrs
imul
cmp
cmp
mov
dec
pop
add
add
cmp
fwait
data16
in
pop
into
test
add
jge
ret
jge
fcmovne
inc
pop
faddp
adc
xor
sub
or
mov
lods
and
in
icebp
cmpsb
movsb
sbb
jo
push
pop
xor
mov
cmp
fwait
adcb
push
jo
lock
xlat
jp
cmp
stos
insb
jnp
aaa
xor
jne
das
iret
and
leave
imulb
sub
push
push
xor
pusha
fldcw
inc
mov
das
jne
inc
xor
xor
jle
sbb
fwait
pop
add
jns
xchg
dec
cli
sbb
pop
mov
outsb
popa
movsl
fwait
sbb
pop
xor
and
add
sysexit
loop
cwtl
sub
mov
subl
pop
and
arpl
les
jg
repnz
loope
mov
out
mov
jno
mov
push
mov
dec
test
sub
mov
int
xlat
mov
aam
xchg
lods
inc
inc
in
fwait
dec
aad
mov
mov
inc
fnstsw
imul
cmp
cmpsb
and
jb
cmp
pop
mov
stc
push
dec
mov
mov
jp
add
push
push
push
push
or
mov
mov
sbb
ja
insb
scas
je
mov
stos
push
push
mov
mov
loop
cmc
jns
test
push
fcoml
sbb
mov
inc
fcmovnbe
sub
icebp
and
or
das
inc
or
and
jp
cltd
jne
adc
movsb
dec
fsubr
gs
cmpsb
rorb
xlat
shr
inc
in
aaa
cmp
xor
push
pushf
repz
or
push
pop
popa
sbb
dec
shlb
push
lret
xlat
xchg
popf
movb
pop
mov
jb
es
enter
sub
test
outsl
cld
lods
lods
mov
sbb
dec
dec
dec
jae
push
movsl
adcl
push
repz
nop
mov
mov
mov
inc
pop
jno
jecxz
sti
adc
jo
mov
movsl
aam
popf
adcl
pop
xlat
call
mov
es
stos
jge
pop
jecxz
xchg
inc
pop
add
cmp
cmpsb
pop
movsl
dec
neg
ja
pop
rcrl
push
insb
ret
mov
push
jo
push
or
pop
mov
out
adc
idivb
push
out
mov
push
fdiv
mov
or
fsubrl
xor
pusha
testl
push
mov
add
pop
test
pop
test
scas
bound
jp
push
push
dec
inc
mov
clc
mov
or
cmpb
test
jbe
movsb
lds
nop
mov
outsl
scas
outsb
mov
stos
outsl
aad
inc
sbbl
popf
fidivrl
or
sub
xchg
stc
rcr
mov
adc
roll
outsb
in
mov
das
and
mov
xchg
push
or
into
and
sbb
fwait
add
jmp
mov
jl
xlat
xchg
sti
mov
push
inc
mov
cmp
mov
mov
pop
push
push
add
push
clc
inc
jg
in
add
inc
or
ss
add
mov
xorb
hlt
mov
in
pop
inc
cmp
mulb
inc
cld
push
push
popf
cld
mov
push
insl
filds
sub
fs
mov
push
xor
gs
rcrl
fldt
dec
xor
or
xchg
jge
int
shl
pop
push
sub
cld
popf
cwtl
push
xor
addl
lock
and
ljmp
xchg
arpl
int
inc
sub
cmp
cmpsl
fldt
and
and
stc
and
or
mov
iret
sub
mov
cltd
aas
sub
adc
xchg
std
xor
sbb
stos
js
lea
and
stos
clc
jbe
aam
addr16
call
gs
nop
fdivr
cmp
test
enter
int3
aad
or
push
xchg
stc
jl
pop
add
add
adc
test
loope
clc
mov
aam
test
xchg
mov
mov
insb
imul
mov
cmpsl
adc
add
jne
or
sub
test
sub
push
add
arpl
cmpps
fistpl
shlb
call
xchg
ret
movsb
pushf
icebp
cmc
stos
sbb
bnd
xorl
mull
xchg
push
shll
notl
in
and
cmp
xchg
adc
sbb
xor
inc
je
lock
sti
leave
scas
loope
mov
ja
aas
in
cmc
enter
test
in
mov
jl
call
loope
add
iret
lret
and
clc
int3
fstps
push
lds
ret
mov
cmpsl
inc
push
std
jmp
repz
xchg
cmp
or
sub
adc
mov
outsl
mov
test
sub
test
cmp
sub
arpl
es
cmpsb
int
test
inc
mov
xchg
pop
inc
les
sbb
jnp
fwait
in
mov
out
mov
lcall
enter
insb
shrb
movsb
stos
icebp
stos
decb
xorps
cmp
lret
push
cmp
cmp
mov
iret
into
pop
xlat
loopne
iret
rorl
or
jp
stc
sub
or
pop
dec
ret
gs
add
dec
xchg
and
popf
filds
xchg
fs
cmp
lcall
pop
pop
in
and
inc
push
out
push
inc
adc
jmp
pop
enter
or
out
pop
out
dec
fxch
cmpsl
pop
push
hlt
jb
shrb
repnz
dec
pop
stos
inc
xchg
adc
lret
clc
cmpsb
xchg
fidivrs
cmc
push
xor
mov
ss
aas
dec
dec
sub
pop
mov
sbb
fs
or
jno
dec
mov
inc
stos
or
cmp
mov
xor
cmp
scas
jge
push
xor
iret
mov
or
je
sub
insb
jmp
andb
fdivrs
mov
test
xor
popf
and
cmp
sbb
push
insl
pop
or
jo
movsb
add
sub
nop
popf
repz
shufps
inc
adc
leave
lods
insb
sbb
sar
mov
test
ja
aaa
fsubr
lea
adc
mov
sbb
loope
push
shr
fildll
inc
js
dec
cmp
fs
pusha
add
addl
shlb
and
jmp
mov
push
ficomps
incl
hlt
shr
ja
xchg
pop
jo
call
add
mov
insl
push
xchg
lret
rcll
negb
ret
cmc
sbb
dec
jbe
das
dec
inc
pop
fidivrs
add
xor
add
dec
inc
cmp
out
pop
sub
jecxz
sti
movsb
jmp
push
fsubrl
outsb
lock
roll
stos
fdiv
xchg
inc
mov
fbstp
or
cmp
xchg
mov
rolb
xlat
idivb
icebp
add
pop
lahf
mov
mov
mov
xchg
sahf
inc
ss
neg
inc
push
add
xor
fsubrs
mov
push
jmp
inc
fnstenv
mov
call
stc
cs
push
add
mov
xor
int
nop
and
mov
add
or
and
inc
dec
test
sub
jno
hlt
outsl
inc
and
sub
mov
loop
mov
xor
or
or
mov
in
dec
dec
addr16
mov
pop
cli
ss
fnstcw
dec
mov
loope
xchg
ficompl
rcrl
addr16
pop
aad
inc
push
add
cwtl
or
mov
or
inc
gs
and
xor
dec
push
jp
cmp
in
lret
daa
jge
sahf
imul
adc
pop
pop
fwait
pop
push
popf
stos
inc
xor
fsubs
shll
xchg
aam
js
leave
insl
push
xor
xchg
jmp
outsl
jge
xlat
jb
dec
popf
das
mov
xor
and
mov
sub
push
mov
pop
sub
jle
dec
stc
gs
jl
negl
das
rcr
inc
or
fmull
or
sub
adc
daa
test
and
push
and
loope
iret
pop
jo
loope
or
sbb
shll
mov
pop
clc
stos
mov
outsb
mov
shl
fcompp
std
fcoml
dec
arpl
jae
xor
mov
mull
xor
sub
dec
iret
add
es
add
cld
inc
mov
cmp
lret
pop
or
add
mov
xor
jb
ljmp
mov
or
push
mov
inc
pop
push
out
pop
das
push
push
into
sub
enter
sarb
jo
pop
cmpsl
push
addr16
or
lcall
sub
aaa
mov
xchg
cmpsl
popa
lods
xchg
repz
cltd
pop
shll
cltd
ds
int
dec
sub
dec
pushf
cli
cmpsl
and
aaa
loopne
jb
lahf
jl
xor
lcall
fsubrs
std
inc
jae
pop
mov
rolb
jns
add
call
in
or
push
and
inc
ret
jne
bound
les
iret
inc
inc
imul
adc
gs
mov
and
push
xlat
push
mov
paddusw
or
jo
shr
or
clc
inc
jbe
sahf
fiadds
inc
scas
and
aam
test
lahf
mov
add
mov
or
and
aad
sub
leave
add
aad
and
ja
scas
shll
int
iret
std
push
int3
imul
jg
cltd
jecxz
mov
repnz
fimull
out
xor
adc
dec
cmp
lea
inc
mov
jne
sahf
enter
mov
inc
inc
push
enter
mov
shll
mov
stos
xchg
sub
sbb
jno
leave
rclb
cld
dec
lods
xchg
inc
pop
std
fdivrp
jl
adc
pop
stc
stos
cwtl
pop
imul
sub
push
pop
gs
jl
fimuls
movups
dec
in
stos
insl
or
inc
stos
ja
or
test
xchg
inc
or
mov
sbb
mov
clc
mov
adc
clc
or
jl
cmpsb
jmp
fnstenv
and
arpl
mov
fldt
sub
pop
mov
pop
mov
je
cmpsl
mov
xchg
aam
mov
jmp
xor
push
adc
rorl
mov
xchg
fmul
cmp
leave
mov
xor
iret
adcl
jnp
shl
repz
fcmovne
sbb
jmp
out
adc
xchg
int
xor
enter
ja
mov
mov
andb
lods
adc
jno
mov
cmp
fisubrl
cmp
jb
into
push
sahf
and
add
sbb
inc
mov
sbb
jle
das
sbb
cli
sahf
mov
dec
mov
dec
loope
xchg
call
mov
jne
push
pop
xchg
shlb
xor
push
adc
enter
mov
cmp
pop
dec
cmpsb
in
and
dec
mov
xchg
pop
test
push
mov
xor
lcall
jo
xchg
sahf
fistps
in
mov
and
and
sbb
xlat
sbb
sbb
adc
or
push
dec
lret
dec
adc
mul
cmp
icebp
push
shll
arpl
push
mov
mov
mov
fwait
sbb
push
pusha
insb
mov
push
movsl
test
inc
adcb
sar
popa
push
cmp
call
cmp
inc
clc
or
fdivr
aad
incb
add
mov
mov
mov
lock
jbe
mov
pop
enter
mov
iret
aas
pop
test
in
xor
scas
daa
fs
aad
xor
push
insb
inc
leave
stc
fcompl
imul
mov
mov
stos
pop
insl
pop
imul
mov
cmp
inc
loopne
addr16
pop
shlb
cmpb
inc
push
dec
cmp
fwait
add
call
hlt
mov
dec
es
adc
inc
and
inc
loop
adc
call
inc
jp
lahf
sahf
addb
orb
push
push
cmp
inc
xor
or
and
adc
mov
test
mov
pop
add
inc
cwtl
ficoml
int3
lds
ljmp
int
shlb
andl
lahf
enter
mov
cmpsb
roll
test
aam
cmpsl
outsl
out
scas
stos
adc
adc
add
mov
cmc
adc
movsl
cmpsb
movsl
fldl
push
ret
jb
push
add
jns
daa
pop
jae
inc
jmp
xchg
pop
das
test
repz
stos
xchg
stc
jg
sbb
xor
std
sarb
or
mov
mov
sbb
sbb
mov
in
scas
dec
mov
idiv
ror
pop
sti
out
sub
xchg
add
jne
push
lcall
fisttpll
dec
scas
pop
mov
cli
sbb
mov
push
inc
movsb
cwtl
lock
cs
mov
pop
sbb
and
out
out
shll
add
negl
hlt
test
insb
xorb
lcall
out
out
mov
aaa
outsl
cmp
ss
pop
sbb
cmp
sub
jp
fwait
push
arpl
sbb
sti
cwtl
and
jnp
loope
mov
push
iret
push
lret
movsb
adc
fsts
sub
push
dec
jp
push
lcall
or
adc
fistps
sbb
shrb
ljmpw
repnz
les
inc
mov
xchg
data16
jmp
pop
repnz
repz
and
test
xor
and
jb
popa
inc
fwait
xor
sub
pusha
add
and
imul
add
call
dec
icebp
in
lcall
adc
aad
enter
scas
add
out
cmpsb
movsb
xchg
dec
dec
add
movsb
xchg
push
pushf
xchg
fsub
jno
jb
dec
in
popa
cltd
repz
not
or
xor
dec
popf
xchg
data16
sahf
shll
lret
ret
outsb
sahf
xchg
sbb
jbe
xchg
push
nop
and
cmp
pop
mov
cmp
call
pop
and
mov
sub
nop
or
into
push
push
inc
into
pop
addr16
cmp
ficomps
pop
xor
jmp
cmc
fnsave
xor
mov
add
jmp
int
add
fs
adc
dec
movsb
movsb
outsl
outsl
dec
fisttpl
lds
mov
xor
sbb
push
xlat
mov
das
in
daa
mov
pop
cmp
add
bound
pop
test
lock
add
add
rcrl
int3
lds
inc
push
mov
sbb
jecxz
mov
rclb
jo
inc
idivl
data16
mov
xchg
ljmp
hlt
xchg
adc
push
mov
sub
stos
jp
adc
pop
es
mov
add
xchg
fs
dec
out
cld
mov
xor
or
imul
sbb
mov
jns
jp
pop
insb
xlat
stc
cmp
dec
fnstcw
imul
cmp
or
ds
lds
adc
and
test
rorb
jo
mov
pop
stc
mov
sbb
and
push
xor
inc
repz
imul
xor
mov
and
inc
jp
cmp
or
sub
or
inc
fidivrl
fcomps
cltd
cmpl
sbb
xchg
add
outsb
nop
aad
arpl
push
jle
or
mov
xor
das
dec
jmp
aas
xchg
jg
insl
shlb
pop
mov
les
mov
outsl
stos
mov
or
inc
paddd
push
cmp
js
ficomps
insl
dec
adc
repnz
mov
and
mull
outsl
mov
cltd
mov
cld
ret
jp
jle
fadds
shrb
idivb
push
aas
cmpsl
test
add
clc
mov
rcll
mov
mov
arpl
out
aad
jecxz
sarb
fstpt
scas
sbb
or
rorl
inc
cs
out
cwtl
push
scas
shlb
popa
xor
jo
sbb
stos
enter
mov
add
int3
add
dec
es
jmp
add
dec
inc
ret
sbb
inc
cmpsb
lds
dec
mov
test
inc
dec
push
insb
jmp
popf
loope
dec
mov
pushf
idivl
cmp
dec
subb
and
dec
ret
add
jb
push
sub
bound
xchg
sbb
and
iret
pop
sahf
dec
ljmp
add
jmp
or
in
gs
xor
adc
in
iret
aaa
mov
adc
fldcw
das
jecxz
ficomps
fs
mov
xchg
lock
pop
gs
or
loop
aam
or
mov
mov
roll
adcb
mulb
pop
mov
or
movsl
popa
sarl
movsl
adc
dec
adc
dec
mov
insb
lret
xor
stc
call
sub
test
pop
jl
sbb
mov
mov
inc
and
imul
loop
outsb
or
pop
fmuls
ret
cltd
dec
pop
add
add
jb
jg
mov
ret
aad
add
ds
into
stos
loop
outsb
in
shlb
fs
dec
stos
push
fucomp
in
inc
xchg
inc
loop
in
aad
sbb
bswap
push
push
cmp
cmpsl
jge
into
in
push
cld
push
iret
stos
and
iret
xchg
ss
repnz
cmp
test
imul
lds
das
dec
std
mov
iret
adc
pop
pop
aaa
je
xchg
pop
cs
rcr
int
orl
dec
pop
jmp
jne
outsl
mov
test
sbb
adc
sbb
xchg
adc
mov
push
mov
mov
push
addr16
loope
jge
out
imul
mov
fdivl
inc
je
pop
iret
or
in
jne
ja
shlb
xchg
mov
fidivrl
mov
pop
push
leave
mov
out
pop
jne
jbe
mov
pop
sbb
ret
push
mov
mov
lods
xor
dec
imul
pop
fcoms
sbb
mov
repz
nop
mov
and
pop
push
sub
rcrb
lods
subb
movsb
je
loop
in
push
ds
add
das
aad
xor
movsl
pop
mov
dec
and
fistpll
jl
loop
inc
pusha
mov
cmpsl
and
divl
mov
sub
push
cmp
cmc
or
ja
lds
push
into
jne
inc
dec
repnz
sub
sbb
mov
jbe
cmpsl
xor
repnz
in
fdiv
out
cmp
lea
or
rclb
and
enter
adc
shl
xlat
push
idivl
push
nop
jge
cmc
bound
mov
mov
inc
push
add
cwtl
or
cmpsl
pop
aas
roll
mov
lcall
inc
dec
fwait
popw
loope
setg
std
dec
xor
mov
fs
fucomp
in
xchg
adc
addr16
fsubrs
pop
dec
xchg
xorl
inc
and
ja
int3
mov
ljmp
jo
adc
icebp
cmp
or
shl
notb
mov
sbb
mov
fwait
in
dec
and
xor
cmpsl
sti
push
adc
jg
fdivs
out
and
adc
or
or
clc
jmp
cmp
dec
fstps
lahf
jle
pop
movl
or
aam
fwait
add
scas
jno
imul
jl
or
jb
sahf
inc
cli
bound
cmp
and
movsl
xorb
xor
pop
mov
sbb
xchg
ljmp
in
sahf
and
sbb
jbe
ret
jmp
outsl
pop
xchg
jne
enter
test
fistl
adc
sub
popf
jns
jle
jns
jl
or
xlat
lock
ret
add
xchg
hlt
out
sub
cli
loopne
int
xlat
xlat
and
and
mov
mov
inc
sbb
lcall
je
inc
add
pop
lret
push
inc
or
cltd
jl
in
cltd
push
stc
loope
mov
call
or
movsb
and
je
std
jl
add
jle
and
mov
loope
mov
sub
push
decb
inc
dec
outsl
push
outsb
sbb
cmp
jg
pop
xlat
add
ljmp
jmp
out
idiv
xchg
mov
or
inc
insb
cmp
in
push
sub
lahf
xchg
sarb
mov
pusha
mov
jnp
std
pop
out
mov
arpl
lods
push
cmp
xor
push
decl
pushf
lock
dec
cwtl
loope
in
out
push
inc
adc
iret
cmp
sub
xor
out
push
scas
dec
sub
mov
idivl
and
hlt
hlt
xor
or
lret
testl
out
pop
xchg
sbb
jle
pop
inc
out
loopne
sbb
daa
mov
sti
imul
orl
mov
andb
push
jo
push
inc
loope
pusha
xor
sbb
cmc
push
xchg
dec
xor
xor
push
xchg
pusha
dec
push
dec
dec
aad
out
mov
jp
fcmovne
push
push
pop
icebp
ss
into
pop
inc
test
in
and
jbe
dec
leave
sub
in
hlt
add
xlat
pushf
arpl
inc
js
loop
into
imul
xor
pop
mov
dec
pop
mov
lret
cmp
dec
add
fildl
lock
cmp
dec
hlt
mov
sub
lahf
test
sbb
dec
popa
lahf
and
sub
ds
repnz
subb
cmpb
mov
or
sti
movsl
inc
sti
in
mov
je
mov
adc
add
pop
jb
incb
test
outsb
hlt
fsubrs
add
pop
or
and
test
jne
icebp
mov
lret
push
sbb
js
jmp
jo
add
ja
or
mov
dec
add
jo
push
inc
cmp
aas
sbbb
daa
arpl
cmp
push
test
scas
jne
pusha
jbe
es
push
xor
mov
ret
mov
test
cmc
into
push
push
mov
lcall
out
shlb
movsl
fdivrs
sub
adc
mov
push
cli
ret
adc
jecxz
jns
sub
in
push
mov
xor
jle
stos
repnz
mov
dec
push
push
gs
int3
les
xor
jge
dec
fucomi
cld
xchg
iret
gs
les
fisubl
test
loope
repnz
inc
ljmp
int
add
test
adc
jae
outsl
pop
fiaddl
in
xor
aas
pop
mov
imul
cmp
jl
xchg
pop
fptan
out
push
mov
dec
sub
sub
mov
inc
or
adc
adc
xor
sbb
xor
cmp
adc
insb
inc
cmp
je
jns
aaa
sbb
dec
xor
jne
ret
and
lock
das
rorl
leave
jno
imul
jo
mov
pop
jo
mov
pop
inc
jb
cld
popa
sbb
mov
mov
mov
enter
pop
idivl
ret
arpl
and
pop
popf
push
adc
test
cmpsb
mov
mov
imul
push
in
mov
pushf
pop
mov
stos
in
adc
mov
sub
push
js
jbe
fnstenv
pop
inc
xlat
sbb
add
arpl
frstor
pushf
or
mov
mov
jmp
xchg
ret
lret
cmp
pop
fdivp
fwait
xor
lea
lcall
je
xlat
hlt
mov
stos
aam
mov
test
out
jle
fimull
push
push
loope
arpl
pop
and
or
shrb
mov
cmp
outsl
add
mov
xchg
inc
jmp
mov
dec
sub
inc
cmpsl
sbb
pop
xlat
test
jns
push
jmp
sub
cwtl
in
adc
fisttpl
xchg
adc
mov
popf
dec
pop
cmp
mov
pop
call
dec
cmpsl
clc
cli
imul
lea
loope
pop
mov
inc
sub
mov
jbe
or
mov
std
mov
jmp
daa
mov
lahf
push
mov
sbb
dec
pop
popf
sbb
adc
or
push
and
push
mov
lret
cmova
xor
sahf
xchg
mov
loop
out
data16
cmc
jmp
in
mov
andb
out
cmpsb
shll
sub
add
daa
pop
aam
mov
inc
adc
add
inc
cmp
loopne
lcall
pop
in
sbb
inc
xor
leave
fidivrs
sbb
clc
jl
cmp
subb
inc
aad
jbe
add
xchg
hlt
lds
jge
or
int3
cs
push
gs
or
fdivrl
jns
sub
jo
xchg
mov
test
test
mov
jle
imul
pop
pop
repz
movsl
hlt
out
out
fucom
outsl
mov
push
inc
mov
fwait
cmp
push
dec
push
xlat
push
mov
in
outsl
pop
or
imul
std
mov
rcr
push
cmpsb
fwait
loopne
adc
lods
push
or
mov
pop
jno
adc
cli
pushf
loope
rol
adc
imul
enter
or
pop
sbb
or
push
xchg
mov
adc
pop
or
dec
xchg
imul
and
sub
adc
push
add
push
jae
lock
inc
cmp
lock
xchg
jns
imul
mov
iret
dec
mov
jmp
jb
adc
xchg
insb
dec
cld
lahf
mov
lds
cs
shlb
enter
add
or
std
out
ficoms
enter
mov
and
out
in
jecxz
repz
clc
xor
adc
xor
adc
mov
adc
jns
stos
cmpsb
cmpsl
mov
pop
sbb
pop
and
inc
aaa
xchg
in
push
dec
xor
or
push
lahf
subl
sarl
mov
adc
fisttpll
cwtl
out
push
sub
in
js
adc
adc
hlt
jg
xor
add
xchg
jecxz
xchg
rorl
icebp
repz
lds
movsl
in
test
inc
int
cmp
jmp
sub
jmp
test
push
scas
ret
cmp
fsts
std
and
lret
add
pop
data16
pusha
inc
dec
or
sub
out
shrl
fs
add
mov
shrl
cwtl
pop
or
and
es
cmp
ficompl
cmp
in
mov
and
fsubrl
in
xor
inc
cmp
jnp
adc
lock
pop
imul
rcrb
or
cmpsl
adc
pusha
or
add
mov
dec
stos
pop
lret
xor
jbe
sti
inc
lahf
jnp
inc
jecxz
add
loop
jle
rcrl
leave
das
cs
das
sbb
push
mov
xchg
or
and
ds
loope
jg
mov
ds
ror
out
sbb
test
inc
jnp
xlat
mov
push
jecxz
mov
inc
add
jns
inc
popf
outsb
cltd
push
je
insl
scas
and
xor
cmc
int3
push
push
sub
shl
mov
dec
dec
mov
in
ret
jecxz
in
push
test
in
cli
and
jmp
hlt
dec
and
jnp
push
cmpsb
jmp
cltd
pop
mov
in
arpl
insl
scas
out
cwtl
xor
dec
pop
orl
movsl
push
add
and
mov
leave
and
lds
scas
add
xor
lock
ficoms
orb
sbb
adcl
mov
insb
inc
cmp
mov
mov
insl
mov
fstp
jl
out
xor
rol
in
xchg
jae
je
mov
fcmovb
mov
idiv
push
aaa
cmp
int
insl
push
cmp
inc
arpl
pop
loope
das
pop
jns
mov
outsb
cmp
mov
sub
jo
jmp
lcall
push
sbb
in
inc
cmp
mov
push
xchg
movsb
mov
sub
cmp
xor
push
xor
push
fisubl
pop
pop
jb
jae
fisubs
mov
xor
or
or
fdivl
pop
pop
pop
jecxz
sahf
test
ss
pop
mov
shll
cmp
xchg
or
mov
xchg
lock
mov
loop
outsb
jmp
popf
push
xchg
call
ja
inc
sarl
and
and
cmp
lds
mov
jp
push
cmpsb
fsubrs
jle
sub
es
pop
repz
and
je
fcomi
xorb
loopne
push
add
pop
inc
push
jae
into
addr16
stos
pop
mov
jl
lahf
outsb
mov
xchg
cmpsb
cltd
je
pop
push
in
rcl
or
insl
mov
xor
ja
fnsetpm(287
jne
cmp
mov
arpl
push
pop
xlat
jp
ss
pop
pop
sbbb
sarb
popa
test
mov
ret
xor
sbb
imul
jge
mov
mov
push
inc
jle
movsb
out
push
outsl
aas
cli
outsl
and
inc
popf
xchg
adc
stos
scas
inc
xchg
daa
hlt
inc
loope
mov
lds
aad
icebp
in
lcall
xchg
cmp
not
out
loopne
cmp
iret
aas
in
loope
rorb
sarb
bswap
in
pop
cwtl
cs
mov
jl
inc
inc
push
cmp
test
add
lret
je
jecxz
rcll
cmp
cli
mov
dec
nop
sbb
push
cld
jns
fisttpll
nop
mov
dec
repz
cmc
cmpsl
mov
popf
jne
adc
outsb
repnz
and
cld
cltd
cmp
add
cmp
sbb
adc
ror
xlat
add
cmp
data16
xchg
stos
add
sbb
test
mov
xchg
jb
aam
pop
add
or
push
movsbl
add
dec
in
xchg
cld
adc
cmp
dec
bound
dec
push
dec
adc
push
push
unpcklps
shlb
cs
or
mov
cmp
jecxz
les
imul
xchg
call
ja
insb
jp
and
test
adc
xor
outsb
mov
cmp
negl
mov
mov
lret
sbb
inc
add
mov
jnp
adc
xor
pop
ss
icebp
mov
pop
xchg
push
popf
idivw
mov
mov
dec
dec
mov
bound
jnp
pushf
cmpsl
push
and
mov
out
pop
es
mov
daa
mov
test
int
movsl
or
icebp
ret
adc
mov
test
test
fdivrl
cmpsl
add
sub
outsb
push
or
dec
imul
dec
out
push
sbb
or
aas
mov
mull
inc
int3
dec
sbb
fcomps
test
stos
data16
stos
roll
mov
in
sbb
roll
nop
loope
jmp
add
les
mov
sbb
dec
movsl
pop
loop
pop
push
lcall
and
popa
fsts
sbb
es
mov
dec
sti
jge
xlat
scas
cmp
xchg
stos
jl
loope
aad
fistl
jo
insl
movsl
cmp
in
push
insl
lods
pop
es
das
loop
adc
jb
outsl
test
popa
popa
pop
lods
dec
mov
jmp
xor
inc
outsb
push
dec
add
push
sub
jg
xor
popf
pop
lods
mov
loope
push
push
aaa
mov
sbb
add
sbb
pop
test
popa
xchg
xchg
pop
ret
jg
bound
jns
mov
insl
mov
xchg
sti
cmp
cmp
cmpsb
jge
jae
xlat
inc
ljmp
out
lods
cmp
movsb
pop
aaa
dec
mov
cmc
cmp
sbb
je
mov
scas
les
dec
faddl
mov
flds
and
mov
sbb
mov
dec
stos
addr16
xor
xorl
push
inc
dec
and
mov
add
xchg
out
pop
lock
enter
mov
fwait
dec
sub
push
repz
and
sub
out
arpl
dec
add
jg
clc
ror
sbb
jp
push
cmpl
sub
or
fimuls
xor
aad
pop
sbb
lahf
sub
inc
pop
rorb
aad
mov
mov
jl
lea
arpl
pop
xchg
jno
push
push
mov
je
cmp
scas
inc
movsb
sbb
cs
push
fdivrs
pop
leave
xchg
insb
adc
jb
cmp
sbb
push
pop
daa
xchg
sub
cmp
lods
push
outsl
lods
pop
lock
ja
fwait
add
xor
cmpsl
jg
test
pop
lcall
nop
dec
ja
fs
leave
add
pusha
inc
in
xor
mov
std
rcl
les
fcomps
mov
push
mov
or
sub
xor
jb
in
rcrb
add
cmp
sub
in
jne
pop
fistpl
xor
adc
xchg
or
orl
push
dec
jle
je
mov
mov
cmp
pushf
cmp
jp
sbb
ja
mov
sti
out
dec
xchg
inc
push
jb
fxch
dec
jle
mov
cmp
cltd
mov
sub
aad
in
mov
jmp
cs
xchg
scas
cmp
or
popf
xor
andl
jmp
push
repz
and
jg
cld
cmc
mov
test
call
hlt
nop
jns
inc
xor
clc
jecxz
cmp
fsubrs
xlat
inc
adc
lds
xor
popf
lret
mov
insb
test
fistps
aas
cmp
addb
test
fwait
icebp
xor
fisubrl
jns
das
outsb
and
sbb
in
pushf
sti
xor
lahf
and
mov
adc
mov
push
incb
cmp
xchg
sub
xorps
xchg
shrb
xor
cmp
and
clc
xchg
movsl
fisttpll
sub
jecxz
scas
aaa
and
cltd
pop
movsb
push
mov
and
jp
mov
jbe
push
jp
pop
fidivrl
inc
sub
int
loope
mov
xchg
stos
jl
xchg
mov
leave
stos
fs
jns
jmp
roll
mov
aaa
xlat
xchg
test
mov
push
push
sti
dec
inc
mov
orb
jne
lahf
pop
testb
cmp
into
jnp
ficompl
sarl
mov
lds
stos
in
sbb
mov
test
fstpl
lods
pop
stc
bnd
add
cmp
popf
dec
pop
into
vunpckhps
adc
and
jae
inc
fiaddl
imul
jge
outsl
mov
das
mov
test
insb
insl
shll
mov
inc
loopne
lcall
pop
fldenv
push
sub
xorl
nop
aam
stc
xchg
inc
jecxz
fmull
xor
lret
add
movsl
xchg
cmp
mov
mov
mov
jmp
sarb
xchg
out
pop
ss
adc
ror
pop
dec
call
das
ja
push
inc
movsl
inc
cmp
cmpsb
or
loope
push
nop
fdivrs
js
jecxz
or
in
sti
arpl
ficomps
push
popa
inc
les
adc
mov
mov
clc
insb
dec
repz
gs
xchg
mov
out
gs
push
ljmp
xchg
roll
pop
adc
adc
out
sub
xlat
aaa
shll
outsl
mov
ret
inc
mov
and
call
gs
mov
inc
jle
mov
out
testb
push
clc
std
jno
sbb
or
fwait
loopne
and
sahf
mov
xor
roll
jmp
jg
or
sbbl
enter
push
or
mov
jb
fistps
mov
in
loop
sbb
pop
sbb
cltd
std
test
lcall
outsb
pop
lods
cwtl
inc
aad
iret
fucomip
push
jge
loopne
cli
es
push
pop
ss
jl
dec
jno
inc
das
push
pushf
push
jns
rcrl
je
das
sub
jge
mov
fnsetpm(287
leave
push
loope
sbb
cmpsl
out
sahf
testb
faddl
dec
mov
sub
inc
add
xchg
adc
repnz
dec
test
cmp
idivb
xchg
sbb
iret
shll
push
imulb
xchg
scas
sahf
clc
scas
xchg
or
aas
add
xor
enter
xor
jge
movsl
or
jg
fpatan
xorl
fnstsw
mov
fwait
push
dec
les
je
push
mov
mov
jge
inc
pusha
cmpl
add
leave
add
bound
popf
roll
ljmp
push
arpl
sbb
sbb
sub
nop
mov
adc
andb
cmp
dec
mov
sbb
in
pop
popf
hlt
mov
mov
mov
pushl
push
aaa
jmp
push
stos
jns
push
popaw
and
inc
adc
ja
mov
pcmpeqb
insl
ds
xchg
mov
addr16
xlat
movsb
cmp
ret
popf
lds
aad
sti
push
hlt
jecxz
mov
mov
jge
cwtl
arpl
sets
push
cmpsl
sbb
pop
shrl
repnz
push
and
int3
lahf
add
adc
sub
xlat
lcall
in
mov
ss
mov
gs
insb
ja
or
dec
ror
or
inc
decb
add
cmp
pop
inc
nop
sub
inc
sbbl
lods
xor
add
ret
movb
aas
rcrl
popa
enter
xchg
out
test
insb
fwait
dec
imulb
sub
cli
js
imul
or
sbb
not
int
ficoms
inc
or
pop
repnz
mov
subb
testb
push
jl
ficoml
lret
pop
mov
or
jnp
mov
or
stc
mov
mov
lcall
cmp
xor
adc
icebp
mov
insb
sub
cli
push
sub
sub
jecxz
sub
addr16
into
and
dec
out
imul
or
cmp
lret
xchg
lea
sti
das
rorb
sbb
or
jle
icebp
lods
data16
into
rclb
divb
xchg
std
push
fbstp
sbb
cmp
cmp
int
test
ret
jns
sbb
push
push
jb
out
stos
jge
xchg
repz
daa
push
pop
test
jg
mov
xchg
mov
rclb
add
sbb
adc
sahf
sbb
sarb
rcll
cs
or
cwtl
cltd
add
push
fisttpll
nop
xlat
mov
lods
addr16
mov
sbb
mov
pop
jge
lock
jecxz
aam
dec
ss
fists
sub
sub
xchg
mov
dec
in
mov
ja
xor
leave
xor
movd
les
push
xchg
cmp
aam
outsb
idivb
pushf
stos
loopne
mov
sbbb
mov
jbe
ret
data16
inc
cld
mov
ja
push
imul
iret
loop
js
or
into
loope
lds
rcr
adc
inc
andl
jnp
sbb
cmp
mov
inc
aam
push
stos
pushl
dec
insb
lods
arpl
into
dec
mov
or
test
stc
and
jno
pop
pop
cld
sarl
repz
out
cld
ss
mov
or
mov
test
ficompl
push
or
in
out
test
stos
and
or
add
xor
mov
or
sub
mov
jbe
or
cmp
add
icebp
xor
pushf
ljmp
push
inc
xor
cltd
add
fisttps
pop
sbb
and
pop
dec
fidivrl
dec
jmp
cmc
dec
pop
or
push
jo
sahf
inc
mov
in
loop
dec
js
lcall
aas
jmp
adc
add
push
cmp
xchg
enter
xchg
rcll
fyl2x
lds
or
in
inc
mov
orl
adc
mov
inc
mov
cmp
sbb
mov
add
mov
int
mov
in
clc
xor
inc
sub
cmc
cmp
repz
jl
jecxz
mov
sub
das
inc
push
and
mov
inc
mov
pop
int
cmp
mov
stc
pusha
shrb
je
add
js
out
stos
xor
push
or
mov
push
in
nop
ret
mov
add
sbb
adc
push
call
mov
xlat
adc
mov
fwait
xorb
orb
or
push
xlat
cmp
jmp
push
fstpl
test
mov
jne
pop
push
decl
dec
sub
push
scas
sub
outsb
fwait
into
out
lahf
inc
sti
jl
outsl
mov
es
ret
push
cmpl
sub
push
pop
fimull
insb
aad
xor
cli
ret
dec
out
inc
push
ja
mov
enter
adc
fistpl
cli
mov
out
loopne
and
xchg
arpl
fwait
stc
adc
int
cmp
inc
and
addl
fildl
adc
mov
mov
pop
or
push
add
fbld
repz
push
arpl
int
icebp
jnp
inc
js
test
loop
cltd
mov
push
adcb
in
pop
xchg
fs
adc
pop
clc
jo
popf
mov
mull
fisttps
mov
daa
push
or
adc
mov
and
notl
dec
stos
mov
pop
bound
push
mov
aaa
mov
push
psadbw
mov
xor
push
lret
in
enter
mull
hlt
inc
cmp
ret
shlb
sahf
divl
in
das
xchg
or
sti
ret
ds
in
pop
xor
sbb
pop
add
mov
jge
or
bound
in
xor
dec
ficoms
lods
loope
push
test
sar
lods
jno
outsl
iret
stos
jmp
test
jns
mov
and
shlb
inc
aad
imul
imul
insl
aam
pusha
sub
aam
mov
jns
out
es
mov
adc
dec
sbbb
add
fmull
sub
stos
ficomps
ja
add
jmp
pushw
sbb
sarl
or
xchg
xlat
xor
fwait
mov
sbb
push
mov
loope
arpl
jo
jmp
lret
xchg
xor
dec
aad
dec
cmpsl
data16
icebp
mov
mov
mov
mov
xchg
fidivs
mov
popa
jl
mov
mulb
arpl
adc
xchg
pop
mov
adc
and
into
sahf
sub
sub
out
sub
add
jmp
loop
ret
inc
addr16
ret
cmpsl
add
jae
mov
hlt
pop
push
or
sbb
push
pop
mov
js
sbb
out
insb
es
lret
cmp
fwait
or
lcall
xor
jbe
sbb
clc
pop
pusha
adc
fisttpl
mov
cli
lret
std
adc
jmp
push
lcall
mov
add
or
inc
adc
dec
sbb
lcall
dec
xchg
stc
mov
hlt
cmp
add
cmp
mov
outsb
fnsave
jmp
sbb
sti
push
push
test
jno
sarl
sub
cltd
jmp
adc
test
pop
inc
sub
and
add
in
test
add
fildl
sub
sbb
mov
mov
xchg
dec
push
scas
mov
and
jmp
aaa
add
add
pushf
addl
adc
in
fldt
mov
int
leave
xchg
movsb
push
std
mov
test
push
call
out
fisubrl
stc
mov
cmpsl
aaa
dec
pop
add
xor
shlb
jmp
movsb
cmc
cmp
sbb
inc
pop
aad
sub
fistl
and
shll
int
test
call
fidivs
lret
dec
pop
mov
roll
and
icebp
mov
mov
mov
or
stos
js
movsl
mov
xor
jecxz
repnz
pop
scas
iret
shll
fdivr
mov
sub
sarb
push
mov
leave
jp
xchg
jle
popa
pusha
push
insb
xor
push
into
push
mov
cmp
ljmp
inc
cmp
and
jg
in
and
imul
mov
testl
adcb
jecxz
sub
loopne
adc
loope
pop
cld
aad
inc
sub
add
fcoml
cltd
rolb
stos
jns
jns
pop
or
xlat
inc
pop
dec
jns
sub
adc
push
pop
ss
roll
jp
sbb
push
inc
push
xchg
pop
mov
int3
lds
inc
scas
pop
mov
xchg
pop
jmp
adc
popf
out
fsubrs
jne
cmp
inc
lock
rolb
mov
mov
inc
inc
out
rolb
mov
aaa
adc
inc
cmp
xchg
push
inc
mov
sahf
adc
add
call
insb
mov
inc
scas
jnp
test
icebp
lods
lcall
clc
mov
decl
or
fidivrl
sub
int
js
sub
and
jns
cmc
aam
pop
xchg
adc
sbb
sbb
stc
mov
lds
outsb
outsb
add
push
hlt
jne
test
loop
ret
pop
xor
andl
aad
pop
inc
inc
jp
lock
pop
bound
cmp
insb
sub
fisttpll
xor
cmp
je
mov
les
cld
fs
stc
xchg
dec
cmpsl
sub
mov
rcr
or
push
nop
lds
loop
out
inc
fnstsw
lods
xor
in
mov
xchg
ds
mov
stos
dec
pop
xchg
dec
arpl
jg
repnz
add
aad
dec
mov
dec
and
scas
add
fwait
neg
imul
sub
dec
pusha
mov
addr16
repnz
arpl
dec
cmpsb
inc
and
lea
and
sub
data16
cmp
adc
testl
jae
cmp
mov
sbb
push
add
insb
pop
loope
je
cmp
rcrb
mov
fsubr
fdiv
mov
aad
or
dec
dec
arpl
stc
data16
dec
jnp
mov
mov
addr16
rorl
mov
hlt
into
cmova
mov
das
add
or
dec
movsl
addl
cmp
inc
cmpl
mov
cmc
dec
jb
adc
loope
xor
mov
adc
mov
jae
insb
aas
jo
rcll
icebp
clc
xchg
push
ss
movsb
jo
stc
adc
push
popa
hlt
pushl
and
dec
fcompl
xor
shlb
xor
mov
dec
cmpsb
je
adc
xor
jb
push
std
or
push
lahf
dec
rolb
shr
sbbl
sub
mov
pusha
sbb
cmc
adc
push
popa
daa
jg
pop
jmp
add
mov
xor
push
call
vmwrite
mov
push
jle
lahf
bound
bndstx
adc
push
ret
mov
movsl
push
rcrl
push
lahf
sbb
mov
out
fs
pop
jg
dec
sub
out
push
sar
pop
xlat
xor
mov
sbb
notb
mov
pop
imulb
mov
out
cmp
out
mov
jmp
push
sub
push
adc
gs
and
jl
push
jns
xchg
dec
xor
add
adc
and
incl
or
or
and
leave
pop
and
out
fildll
dec
cmp
lahf
hlt
inc
inc
sbb
pop
ljmp
iret
fdiv
movsb
mov
or
nop
imul
dec
add
jb
xor
jbe
shrl
sbb
data16
xchg
stc
leave
add
add
lahf
push
ja
xor
popa
mov
cmpsb
hlt
cmc
pop
or
add
rolb
fistps
clc
fnstenv
fisttpl
mov
repnz
ljmp
jbe
mov
xor
sbb
mov
das
push
lods
mov
push
outsl
mov
mov
xor
and
addb
mov
inc
sbb
fdivs
gs
clc
and
lds
insb
cwtl
in
dec
out
shrl
js
bound
jg
dec
dec
mov
adc
pusha
jmp
int3
popf
pop
repz
add
mov
cmp
or
pop
sub
hlt
xchg
adc
cld
je
out
pop
sarb
shll
mov
lret
pusha
dec
hlt
fsubrs
sub
jmp
fdivr
sub
mov
icebp
mov
xor
push
cs
repnz
sub
mov
aad
fldt
sub
jecxz
sub
call
sub
fcmovne
arpl
xchg
dec
aaa
ds
ficompl
dec
adc
lret
sbb
jle
cmp
in
rcll
xor
jb
dec
clc
xlat
push
mov
fs
int
inc
dec
add
cltd
jnp
jne
rorb
sbb
fwait
dec
and
mov
push
xchg
or
push
lahf
jge
pop
push
aaa
sub
xor
and
or
dec
or
pop
out
sub
sub
pop
cmp
pop
addr16
jo
aam
push
jg
and
mov
pop
dec
arpl
movl
mov
outsl
ret
gs
mov
jecxz
fwait
jbe
and
data16
and
in
bound
movsl
fs
das
out
and
or
cli
lods
or
test
lds
out
pop
cli
and
xor
loop
psubsw
std
mov
jne
xor
xchg
addl
sahf
scas
add
jle
mov
shlb
sarl
cltd
xor
dec
pop
pop
push
repz
insb
rcrl
mov
dec
jbe
push
std
js
les
call
gs
jno
push
dec
gs
xor
fisttps
fxtract
mov
push
mov
js
in
push
jno
mov
outsl
xchg
xchg
push
xchg
mov
jno
mov
add
jb
push
adc
test
movsl
xchg
inc
lds
or
btr
and
mov
dec
aam
pushl
fnstenv
into
xor
dec
iret
iret
xor
xor
inc
xchg
test
sub
xchg
leave
push
ja
or
mov
fidivrl
jecxz
push
lcall
and
es
sarl
adc
and
loopne
mov
aam
sub
push
jmp
pop
xor
test
push
jb
loopne
jns
mull
test
mov
pop
cs
addl
mov
add
lcall
les
fmul
dec
cltd
loopne
fldz
mov
jns
cld
mov
outsb
shrb
test
dec
inc
push
in
movsl
test
stos
ret
cmpsb
pop
pop
hlt
cmc
xchg
jl
pushf
inc
out
loopne
outsb
mov
dec
stos
loopne
cmp
cld
nop
and
cld
out
push
adc
pop
flds
xchg
mov
pop
out
mov
stos
fsub
and
add
or
out
sub
jbe
and
mov
stos
and
jp
shl
sbb
xor
inc
jge
dec
xchg
push
int3
jmp
mov
inc
repz
dec
popf
or
pusha
mov
sti
push
movsb
enter
ja
scas
call
aaa
sub
es
pop
loopne
and
adc
inc
popa
fsubrs
jb
mov
gs
mov
enter
pop
jns
jp
imul
xchg
out
dec
ret
cmc
leave
adcl
push
ficomps
fwait
jecxz
in
mov
and
ret
add
sub
or
xchg
ss
enter
ret
and
shlb
inc
jecxz
dec
xor
lods
xchg
sub
mov
add
mov
sbb
fcomps
fsqrt
loopne
cld
jle
push
jne
paddd
mov
fcomps
and
out
mov
push
fiaddl
popf
xor
imulb
mov
mov
les
add
jmp
sub
repz
sti
loope
sub
dec
or
jecxz
mov
xchg
xlat
mov
xchg
sub
sti
sub
addr16
cwtl
push
mov
add
cwtl
enter
inc
xchg
sub
sub
dec
xor
pusha
int
dec
pop
mulb
ss
js
movsb
mov
push
in
fwait
aam
inc
roll
push
popa
add
clc
test
mov
sub
cmp
sub
push
sarl
inc
fistl
sub
cmp
inc
cmp
int3
mulb
int
in
push
mov
jnp
xor
pushl
clc
sub
dec
loopne
aas
insl
ja
mov
in
pop
jo
push
es
mov
out
into
insl
push
int3
je
pushf
decb
mov
add
xchg
arpl
pop
jge
stc
ret
pushf
pop
insb
push
hlt
mov
fdivp
sti
in
mov
in
pop
xor
mov
sbb
push
or
add
stos
insl
pop
jns
ss
add
dec
sub
xchg
sti
xor
mov
push
jno
clc
fwait
add
mov
out
jns
cs
adc
pop
sbb
not
jo
scas
sub
jae
xchg
xchg
and
cmp
test
lods
adc
pop
ficompl
outsl
shl
jbe
pop
cmc
bound
movsb
push
test
push
sbbb
mov
fdivrl
cwtl
lods
mov
cmp
sbb
fdivrl
divl
mov
lods
inc
pop
jno
fdivs
in
add
popa
add
mov
in
into
icebp
adc
jle
stos
push
mov
fsubl
js
xchg
xchg
aam
cmp
dec
int3
sbb
int
mov
mov
jmp
dec
cmpsl
inc
mov
lret
xchg
das
js
imul
in
in
push
fbld
outsl
sub
lods
push
in
cmovae
mov
das
inc
xor
xor
xor
clc
loope
test
or
rorl
xchg
adc
imull
mov
ss
lea
jge
add
pop
xor
push
inc
cwtl
fldcw
push
add
mov
lock
lods
mov
or
sbb
hlt
mov
xchg
push
sub
ret
fimuls
popa
push
push
stos
into
pop
sarl
sub
pop
jne
je
xchg
movsl
push
xor
inc
imul
push
scas
movsl
jne
es
fwait
rcrb
push
dec
mov
jle
in
aad
xor
xchg
inc
or
cmp
adc
push
movsl
jp
pop
jae
call
dec
clc
loopne
test
pop
shrl
cmp
jns
cmp
loopne
iret
movsb
mov
fisubl
popf
or
call
out
xchg
loope
bound
cmp
lods
xchg
mov
mov
fcoml
std
jecxz
stos
inc
nop
pop
jmp
popf
xchg
std
or
insb
or
nop
fs
pop
xchg
fldt
ja
xor
cwtl
adc
and
test
xchg
mov
out
push
or
lods
rcrl
sti
ds
into
movsl
push
int
jo
js
add
fmull
fildll
std
sbbl
sbb
aaa
jle
xorl
das
lret
sahf
push
cld
jge
dec
dec
or
sub
sub
ret
cmp
jne
mov
jno
xlat
inc
xor
xchg
mov
pop
jle
cmc
cmpsl
inc
stc
movsb
dec
mov
xor
or
pusha
shl
fiadds
lock
sbb
in
cmp
inc
outsb
mov
imul
mov
jns
jmp
mov
add
and
movsl
xchg
push
pop
sub
and
out
sub
push
mov
popf
mov
push
dec
test
push
ret
jo
pop
cmp
xor
sub
popf
cmc
rorb
ret
adc
dec
pop
mov
test
or
jl
stos
add
jns
adc
push
and
hlt
popa
addr16
adc
std
loop
sbb
xchg
cmp
flds
popa
in
cmp
and
loopne
shl
cli
push
mov
dec
push
insb
loopne
bound
test
rcrb
cmpsb
sbbb
add
push
inc
mov
xor
sub
inc
sbbl
sbb
mov
lock
rcl
stc
pop
outsb
mov
in
add
gs
and
mov
lea
sub
jae
sbb
cltd
aam
inc
sti
pop
dec
and
icebp
data16
iret
inc
mov
push
mov
jne
mov
mov
inc
jae
mov
push
xchg
pusha
nop
rcr
and
lret
sub
cld
jmp
adc
es
sbb
in
popa
lds
lahf
xchg
inc
push
gs
xchg
jnp
fmull
push
addb
icebp
std
mov
mov
ss
dec
adc
mov
jle
push
xchg
ljmp
xchg
outsl
cmp
jno
inc
pop
iret
mov
fsubrp
test
mov
inc
mov
and
cmp
and
push
push
sbb
or
leave
inc
adc
push
ljmp
cmp
mov
pop
add
bound
pop
mov
aam
js
xchg
in
jl
lret
iret
mov
mov
fwait
lahf
mov
and
lds
jge
dec
std
dec
or
cmp
cs
cmp
imul
sub
dec
mov
and
sbb
imul
cs
ss
in
xor
push
pop
cmovo
inc
lods
dec
mov
mov
repz
xchg
add
push
xchg
int
sbb
xchg
lock
pop
mov
ffree
lea
jb
lcall
sub
testl
mov
pop
pop
out
int
sub
idivb
mov
jle
mov
pop
mov
test
lock
imulb
adc
pushw
das
pop
sub
cmpb
stc
lret
pop
fidivl
fists
mov
mov
sti
repz
cmpsl
stc
bts
out
int3
bnd
shrb
adc
nop
loop
in
push
orb
insl
ret
es
int3
loop
fimuls
aad
pop
cld
aaa
dec
dec
cmp
cltd
or
in
jo
sub
js
push
mov
and
xchg
in
or
mov
dec
pop
xchg
andl
push
mov
mov
iret
or
push
lods
testl
xchg
mov
xor
push
xor
out
push
mov
jmp
cmc
fpatan
scas
pop
cmp
and
cmp
stos
jb
cmpsb
cmpsb
cld
aas
push
jbe
lods
pop
xor
inc
in
mov
or
nop
xorb
leave
cli
jp
je
int3
xchg
mov
sub
dec
push
loopne
dec
push
andl
in
dec
lods
pminsw
fsubs
mov
test
jno
fisttps
jno
sbbl
lea
leave
imul
and
sub
xchg
int
popa
aas
loopne
test
into
mov
jo
repz
clc
into
add
insb
loope
rorl
aad
jle
jb
mov
sarl
addr16
das
les
pop
push
mov
jno
fstp
lods
jle
call
or
mov
xchg
xchg
or
jge
outsl
fdivrs
in
pop
pusha
divb
fstps
sbb
cltd
out
lcall
adc
fwait
cmpsl
pop
aam
jmp
mov
mov
loope
cmpl
mov
adc
jae
repz
popf
mov
scas
js
and
push
filds
lods
pop
pop
ret
push
popf
cmp
xchg
neg
sbb
scas
and
fcmovnbe
fxch
and
inc
imul
dec
push
pushf
shlb
push
daa
or
cld
lds
mov
scas
lcall
ret
out
jg
sub
cmp
dec
xor
out
or
and
and
movsl
lcall
out
fstps
mov
cmp
or
sbb
jns
data16
cmp
mov
std
outsl
js
pop
dec
popa
leave
in
cs
inc
pop
xlat
scas
inc
add
fidivrl
fnstsw
push
daa
inc
xchg
lret
sahf
movsb
cmp
lret
mov
test
fsubs
das
lods
aam
mov
icebp
xor
xor
xchg
or
roll
scas
dec
out
scas
push
mov
arpl
out
jmp
xchg
fwait
test
int
cmpsb
xlat
arpl
push
and
fdecstp
scas
stos
and
fwait
and
adc
lcall
mov
add
mov
fcompl
add
hlt
in
ds
popf
lds
out
cmpsl
mov
cmpsb
mov
sbb
add
and
cmpsb
xchg
fadds
cmpsl
insl
pop
hlt
jae
add
bound
jmp
pop
lret
sbb
cld
xchg
pop
or
xor
and
xor
pusha
or
and
out
jmp
fisubl
in
jns
fdivs
mov
inc
repz
out
pushf
and
lahf
faddl
sbb
shrl
repnz
faddl
fdivr
es
dec
cmc
jb
negb
das
mov
ret
cmp
loope
inc
jns
push
mov
gs
or
adc
mov
sbb
int
bswap
pusha
fwait
mov
fistpll
rcrb
pop
in
push
in
pop
imul
std
pusha
in
sub
jge
imul
popa
and
and
or
mov
movsl
fnstsw
dec
xchg
push
adc
dec
sub
std
pop
push
push
xor
ja
push
push
sub
fcomps
xor
insb
les
mov
sub
pop
dec
mov
cmp
and
inc
sub
xchg
ffree
jns
jb
out
lahf
ja
xor
adc
pop
fs
testl
pop
mov
ja
cmp
lea
bnd
inc
cmc
xchg
xchg
mov
ljmp
or
out
xlat
jb
dec
sbb
and
ss
lcall
inc
pop
push
pop
sahf
test
movsl
cltd
push
or
jb
sbb
stos
mov
inc
stos
lock
adc
repnz
pop
fiadds
mov
dec
xchg
jg
lahf
mov
jbe
push
aad
sbb
imul
xor
jmp
sub
xlat
mov
ljmp
jge
movsb
xor
xchg
dec
ret
pop
repnz
xchg
lods
movb
and
mov
add
cwtl
adc
std
fimull
popa
aas
sub
adc
lods
pop
roll
or
add
aas
sbb
mov
faddl
test
dec
pop
fwait
xor
dec
into
mov
jb
ds
cmpsl
fistpll
xchg
sbb
sub
andb
cltd
mov
std
cli
mov
mov
dec
int3
sbb
ds
negl
cmpsb
je
das
mov
xor
rclb
or
aam
stos
out
cmp
icebp
add
push
sbb
std
rclb
movsl
shl
data16
sbb
adc
pop
sub
inc
and
lret
clc
pushf
fdivrs
add
lcall
sti
mov
adc
mov
mov
ja
inc
call
aas
sub
in
sub
ljmp
lea
ret
in
xchg
cmp
imul
shl
les
fisttps
cmp
outsb
jecxz
pop
out
popf
or
loopne
xchg
pop
pop
aam
push
sbb
or
lods
pusha
sahf
incb
push
dec
xchg
into
mov
imul
out
int3
loope
addr16
mov
ficoms
icebp
sbb
dec
ret
jl
repnz
dec
mov
push
fnstenv
pop
cwtl
sahf
mov
leave
je
jno
mov
lahf
ret
push
test
es
ds
inc
popa
adc
cld
inc
dec
loope
dec
scas
push
adc
pop
pop
jbe
loope
leave
dec
jmp
add
fimuls
mov
pop
in
xchg
dec
lea
and
mov
int3
and
sahf
sub
xor
sbb
inc
xchg
sbb
repnz
cmpsb
rcr
xchg
test
cmp
pop
loop
insb
push
and
clc
or
push
sahf
ret
mov
ds
insl
pop
cmp
push
aam
jge
inc
or
and
fsubrp
sahf
mov
shrl
xor
in
loope
cwtl
pop
inc
loopne
lret
jae
loopne
mov
cli
inc
inc
out
das
out
sbbl
xchg
or
cs
cmpsb
stos
hlt
inc
mov
popa
movsl
jns
cs
aaa
xchg
rcl
inc
bound
adcb
mov
fs
shll
fs
aaa
loopne
jne
aas
das
jl
arpl
lcall
xchg
int3
scas
xor
jmp
sbb
mov
ret
mov
lea
push
jle
out
pop
cltd
dec
adc
pop
fstp
push
dec
sarb
cmp
fiaddl
mov
mov
loope
insl
add
stc
lcall
sbb
xchg
jle
mov
test
mov
cmp
lds
sti
ja
cmc
and
aam
fildl
dec
ret
clc
lret
pop
arpl
dec
pushf
adc
shlb
xor
adc
stos
gs
movsl
sub
mov
inc
xor
shll
xor
adc
cmp
xchg
mov
int
ret
lahf
sbb
dec
nop
out
xchg
cmp
sbb
inc
repz
stc
jp
repz
sub
inc
lds
jle
cs
mov
outsb
inc
fnsave
call
add
pushf
pop
jne
push
rclb
and
add
push
insl
ficoml
or
inc
or
add
adc
xor
jbe
jmp
jmp
adc
pop
xorl
addl
jecxz
sbb
adc
xor
mov
stc
push
arpl
leave
xchg
out
insb
push
add
scas
ret
cmp
lcall
cld
inc
movsb
add
stc
mov
cmp
pop
dec
push
sbb
jmp
imul
ret
xchg
xor
aaa
fwait
jo
stc
loope
mov
movsb
iret
out
xchg
xor
std
push
fsubrs
adc
xchg
pop
mov
mov
sarb
movsl
stc
dec
jecxz
xchg
sub
fistl
mov
daa
loop
jmp
test
test
xchg
adc
outsl
xlat
ficompl
inc
add
mov
out
shl
inc
lret
cmp
jmp
jmp
and
repnz
add
fdivrs
ds
fldl2e
popa
bound
sub
nop
adc
lea
imulb
std
insb
cmpsb
in
mov
sbb
adc
dec
frstor
ss
lret
cmp
pop
arpl
push
cmpl
push
dec
mov
int
inc
ret
and
ret
leave
fdivl
add
cld
xchg
jle
cmp
dec
lods
sub
cmp
cmpl
lock
pop
popf
or
xor
test
push
cltd
sub
add
jge
xor
fwait
mov
pop
push
mov
jmp
pusha
push
cli
jns
aam
dec
push
adc
pop
mov
loope
inc
inc
adc
dec
loope
sub
imul
mov
mov
insl
or
mov
cmpsb
pop
mov
movsl
push
test
inc
inc
jnp
pop
addb
inc
push
fcmovb
jne
arpl
xchg
sub
shrl
test
movsb
sub
ficoms
nop
push
sti
mov
jmp
je
insb
mov
or
enter
dec
xchg
out
mov
jmp
loopne
movsb
sti
mov
cmc
or
hlt
in
int
jg
pop
dec
into
lret
out
pop
jl
mov
adc
inc
dec
cltd
jo
popf
sbb
test
dec
lret
out
xor
and
adc
sub
mov
andb
or
sub
jae
repnz
es
stc
fildl
out
pop
mov
push
xchg
lahf
sub
mov
fwait
dec
sub
sbb
insb
test
aad
push
shlb
loopne
repnz
sbb
jge
inc
push
inc
adc
incl
cmp
jecxz
mov
sbb
inc
out
push
sub
pop
xchg
jge
sti
mov
test
mov
dec
cltd
mul
sbb
fstpl
sbbb
mov
sub
into
fisubrs
sbb
adc
adc
xchg
ret
int
divb
mov
dec
push
out
sarb
ss
push
fs
or
mov
test
xchg
pop
fiaddl
jmp
shll
pop
je
cmp
mov
push
lock
lods
add
mov
jns
and
rorb
cli
hlt
movsl
add
mov
arpl
mov
inc
inc
add
enter
dec
lods
sti
outsb
fisttpl
movsl
bound
pushf
pop
nop
outsb
dec
mov
mov
or
arpl
pop
std
test
ret
dec
inc
xor
cs
inc
fcmovnbe
fcoml
or
adc
sbb
jle
pop
daa
aam
add
movsb
push
mov
ja
lock
mov
mov
addr16
mov
nop
in
and
and
movsl
xor
inc
xchg
add
mov
outsb
data16
rorl
test
mov
and
jnp
sbb
clc
mov
add
jmp
pusha
cmpsb
ja
outsl
ficoml
fisttpll
test
and
cltd
pop
push
icebp
jbe
out
sub
imul
outsl
adc
lock
lret
xchg
into
aaa
and
icebp
mov
clc
lods
cmp
add
movsb
sub
daa
in
xchg
out
mov
sbb
jnp
subb
inc
inc
xchg
andl
cli
cmpsl
pop
cmc
rol
rcr
data16
inc
push
mov
xchg
cmp
adc
and
sbb
pop
add
ja
add
sbb
xchg
inc
push
lods
push
mov
xor
mov
out
push
lret
inc
orl
je
and
pop
mov
push
xor
and
gs
daa
clc
notl
ds
int
scas
xlat
roll
inc
repnz
xchg
fdivs
mov
aad
fistps
ljmp
xor
mov
and
push
loope
das
mov
test
lea
enter
mov
jbe
int
daa
mov
pop
inc
cmc
sbb
jne
cs
jl
lea
sti
in
fdivl
or
mov
into
pop
dec
sub
inc
inc
out
je
subl
repnz
movsb
ret
jp
fisttpll
in
pop
mov
rcr
inc
cmp
jecxz
inc
and
das
inc
push
decb
scas
rcll
sbb
push
aad
iret
mov
inc
ss
and
cmp
lods
into
jp
mov
clc
outsb
pop
jb
dec
addr16
int
jo
test
jecxz
pop
cmp
imul
shlb
xor
pop
mov
xor
fmul
movsl
mov
adc
fmul
sbbb
lahf
ret
sbb
ss
and
wbinvd
movsb
mov
mov
pop
pusha
jmp
sbb
in
aam
ud2
rclb
jecxz
fwait
xor
jae
jmp
or
in
test
insb
mov
push
inc
inc
gs
fcomps
jmp
repz
insb
mov
mov
shrl
cmpsb
inc
jnp
sahf
loop
pop
add
push
xor
xor
sub
inc
fldcw
jecxz
fsubrs
lcall
aas
insb
sub
sbb
sub
nop
ja
ficompl
sbb
loop
xchg
mov
inc
mov
xchg
inc
sbb
fstps
shlb
inc
pop
out
scas
cmp
dec
insb
std
add
nop
pusha
outsb
inc
sahf
fistpl
jo
in
cwtl
or
repz
pop
inc
pop
in
and
dec
adc
inc
inc
arpl
sbb
fnsave
sub
xchg
call
jno
ljmp
shll
in
or
pop
in
rcll
push
fsubs
push
cwtl
fistps
mov
lret
inc
jmp
dec
push
inc
push
xchg
sub
cltd
adc
mov
cmp
in
dec
mov
adc
adc
hlt
jle
fmull
movsl
jne
insb
int
sbb
jmp
outsl
mov
cli
movsb
add
xchg
push
add
xchg
scas
aaa
lock
in
subl
mov
stos
push
cli
stos
cmpsb
xor
aam
rorl
mov
sbb
cmpsl
add
shlb
roll
xor
push
ret
stos
and
xchg
lods
jb
mov
sbb
int
xchg
pushl
push
enter
inc
fsubrl
loopne
in
inc
pop
adc
cltd
sbb
fldt
push
xchg
loope
fisubs
cmp
je
inc
arpl
cmpsl
jns
sub
and
in
icebp
push
aas
xor
test
sub
imul
mov
movsl
pop
hlt
repnz
or
pop
pop
fldenv
cwtl
data16
int
pop
cmp
push
mov
outsl
jne
add
es
pop
and
add
out
xchg
sub
jbe
inc
pusha
inc
pop
inc
and
test
out
xchg
arpl
xorb
jno
or
imul
repz
cmp
add
sbb
mov
mov
ret
adc
jmp
xor
xor
dec
add
bnd
dec
nop
mov
dec
pop
push
add
push
decl
inc
mov
fdivl
jo
outsb
sub
mov
mov
movsb
and
jmp
sub
les
fimuls
lret
mov
test
into
push
lea
cmp
mov
mov
loope
sub
test
jg
cmpsb
rorl
js
adc
int3
pop
int3
mov
addr16
xchg
icebp
xchg
sub
mov
pop
pop
js
test
jmp
call
lds
push
fdivrl
pop
scas
leave
mov
sbb
mov
mov
in
add
aam
mov
push
loopne
jp
mov
popf
call
jbe
aas
push
dec
mov
movsb
mov
in
loope
imul
push
clc
jne
mov
push
loopne
imul
dec
bound
push
and
cmp
adc
jbe
lock
stc
ret
cmp
cmpsb
adc
sahf
inc
cltd
inc
xchg
and
mov
or
pop
nop
xor
in
sbb
inc
lret
cmp
xor
add
inc
jne
les
out
aad
iret
pop
push
stc
pushl
push
dec
push
int3
push
cltd
inc
jb
mov
pop
rorl
cmp
mov
rolb
in
xor
and
lahf
push
inc
aam
adc
push
int3
mov
xchg
cmp
dec
jbe
push
and
xor
stos
jne
push
adc
ret
mov
sarb
mov
xchg
adc
ds
cmp
sahf
adc
out
mov
push
gs
inc
dec
mov
push
cmp
sbb
mov
xchg
or
fstpt
mov
mov
int3
iret
xchg
push
arpl
xor
sbb
ja
mov
mov
stc
mov
xor
aaa
jnp
lcall
cs
jecxz
sub
and
add
es
xchg
push
cmp
clc
mull
mov
or
add
movsl
inc
mov
pop
and
push
dec
push
aaa
dec
jmp
jae
clc
xor
push
and
mov
shrl
push
jge
sar
or
call
sub
sub
pop
scas
clc
sahf
xchg
ljmp
aam
loop
or
sbb
xchg
icebp
cmp
mov
out
dec
stc
int
sub
leave
push
add
sub
leave
add
mov
in
cli
adc
jle
fs
sbb
add
push
xor
insb
mov
sub
inc
mov
dec
and
in
mov
xor
mov
sbb
sub
jnp
sub
push
dec
loope
jbe
loope
mov
ljmp
fisttps
outsl
xchg
incb
sbb
imul
cmc
movsl
xor
ret
call
and
and
bts
jbe
testl
push
out
mov
adc
or
movsl
and
add
mov
mov
jo
inc
and
or
add
sbb
and
jecxz
int
cltd
cld
mov
sub
push
xchg
mov
xor
out
jae
mov
das
shlb
lods
sbb
push
mov
xchg
popf
and
cmp
fildl
mov
cmpsl
dec
cmp
and
add
push
inc
and
hlt
push
sbb
xor
test
pushf
arpl
jle
lcall
test
insl
dec
cmp
add
mov
push
aam
rcll
jb
insl
jge
xchg
sbb
fisubrs
neg
sbb
in
jp
and
mov
xchg
sub
push
inc
addl
daa
lods
add
enter
lock
push
push
ss
dec
test
adc
mov
lcall
adc
pop
sub
mov
push
xor
pop
scas
fs
mov
pop
add
mov
hlt
test
jno
pop
lret
push
and
mov
cmp
ret
lea
sub
inc
sbbl
mov
add
rolb
inc
fistl
mov
inc
jo
mov
xchg
inc
or
mov
mov
xor
rclb
mov
push
sub
jo
adc
into
or
sub
repz
xchg
lret
pop
aaa
pop
test
dec
ret
cmp
jle
les
addb
out
fs
and
xchg
jbe
adc
jo
and
fsts
xchg
out
fimuls
shrb
fidivs
shl
movsb
add
pop
pop
mov
push
jb
addb
sar
into
pop
iret
sbbb
data16
insl
jno
in
and
push
sbb
add
adc
jmp
inc
les
leave
movsl
cmpsb
xor
dec
pop
mov
inc
sbb
adc
popf
or
addl
int3
push
sub
rcrl
test
sbb
push
jl
loop
or
xor
pop
in
fnstsw
mov
jo
mov
lods
loope
push
cmpsb
and
mov
mov
mov
imulb
in
pusha
push
push
leave
clc
adc
cld
cmp
mov
mov
aaa
lahf
lret
mov
sub
add
adc
mov
arpl
inc
adc
into
jle
sub
inc
or
xor
mov
pop
cmc
push
aas
cmp
jno
nop
add
call
mov
mov
dec
cmp
bound
lods
and
sidtl
in
or
mov
sti
xchg
aad
fstpl
and
jne
mov
int3
add
out
popa
mov
cmpsb
gs
dec
and
jbe
sbbb
mov
popf
xchg
mov
xor
xchg
and
sbb
mov
mov
daa
test
in
jge
add
lock
insl
ret
cld
pop
push
sti
sbb
xchg
iret
pushf
xchg
jno
mov
adc
cs
push
jge
out
test
int3
mov
call
clc
ret
int3
es
adc
shlb
push
cmp
gs
cmp
aaa
insl
cmp
cmp
rorb
sub
mov
mov
and
cld
cmp
imul
mov
lret
stos
pop
loopne
jbe
cmp
adc
sahf
outsb
fbld
xchg
mov
out
lods
mov
pop
cmpsb
dec
lret
andl
xchg
aaa
scas
insb
mov
loope
xor
push
jecxz
fiaddl
or
into
ficoms
lock
xchg
stos
xchg
fsubrl
xchg
add
mov
sbb
push
dec
pushf
ss
es
lret
mov
mov
dec
or
loop
lds
lea
adc
ficomps
ficoml
jmp
mov
mov
push
dec
add
cs
out
mov
call
rolb
rorl
dec
and
cmp
add
pop
das
inc
mov
fs
imul
in
xorl
decl
inc
inc
test
clc
fimuls
fldenv
es
push
repz
outsl
ret
pop
aam
test
mov
add
mov
mov
cwtl
jecxz
stc
mov
gs
or
hlt
dec
insb
xor
pop
ret
pop
call
fstl
int3
in
loop
xorl
fnop
fstl
mov
mov
imul
push
test
sbb
cltd
fildll
xorl
push
mov
std
cmp
fstpt
dec
subl
sti
inc
push
sahf
in
cmc
mov
repz
or
push
sbb
add
rclb
xor
subb
lahf
mov
dec
adc
mov
pop
mov
pusha
andl
sub
fwait
fs
ss
loope
push
stos
jmp
rcrl
dec
jbe
pop
movsl
lret
dec
sbb
inc
mov
jl
dec
pop
ljmp
adc
fisttpll
push
call
jno
jp
push
arpl
add
add
js
sub
stos
adc
add
push
shll
pop
xor
ficompl
xor
pop
lret
loop
sbb
push
xor
mov
push
lods
insb
mov
popf
jae
and
repnz
lds
stc
outsl
enter
das
jbe
mov
adc
cmp
jb
cmp
inc
jb
insl
push
pop
sub
out
inc
and
mov
ljmp
fists
js
sbb
faddl
xchg
sbb
loop
pop
rcr
jae
push
cltd
pop
mov
xchg
ret
subl
sub
or
fdiv
sbb
cltd
and
test
js
cwtl
test
mov
adcb
mov
xor
aaa
sub
jb
push
lahf
cmp
aad
xor
jl
adcl
and
cli
int
xor
daa
mov
mov
xchg
or
mov
fdivrl
stc
sar
xlat
jecxz
inc
ss
dec
cltd
lods
and
insl
add
mov
push
adc
cmp
je
ficomps
mov
add
fstpt
cld
cmpb
dec
mov
dec
mov
movsb
sub
lret
adc
aas
sarb
repz
out
mov
jl
in
mov
pop
pop
into
shl
mov
orl
pop
aas
mov
mov
loop
je
jne,pn
sbb
mov
jbe
aaa
push
xchg
mov
scas
icebp
ret
mov
cmc
jae
ljmp
lret
mov
mov
aam
stos
test
or
aaa
add
adc
cld
jge
push
xor
mov
or
shll
cmpsb
sub
movsl
pop
jp
push
sub
fimull
lret
lcall
mov
in
stos
fwait
test
scas
adc
pop
or
and
loope
jbe
add
mull
popa
daa
push
arpl
xor
sahf
cmp
out
push
sbbl
sarb
sbb
jae
aas
pop
mov
fcmovnbe
jmp
sbb
fcoml
stos
bts
mov
add
lods
jg
aas
divl
jmp
insl
xor
pop
add
cmc
push
push
xor
imull
decb
rorl
sti
sbb
and
mov
mov
xchg
jle
stos
loopne
pop
mov
mov
mov
xchg
and
xchg
jmp
popf
mov
adc
aas
xchg
mov
push
scas
adc
rcr
mov
mov
sahf
test
std
jb
mov
loopne
mov
les
arpl
mov
fwait
inc
mov
jbe
ja
lret
xor
add
lods
jecxz
xor
mov
jl
mov
cmpsl
jb
cld
mov
fsub
fmuls
pop
fidivs
cmp
loope
nop
rclb
fidivl
jle
fwait
in
xchg
add
out
call
pop
lret
inc
pop
mov
loopne
cmp
sub
sahf
lods
adc
xlat
icebp
ss
or
pop
imul
pusha
pop
or
inc
movb
fistpl
popf
movsl
mov
out
mov
ss
add
in
lods
xchg
sub
jae
dec
jl
dec
es
shl
push
mov
pop
sub
in
test
leave
dec
sub
jae
mov
popf
push
sub
sbb
or
mov
adc
push
sbb
jmp
mov
scas
and
cmp
leave
nop
push
lds
inc
jmp
mov
push
daa
mov
jbe
jbe
repz
xchg
add
fld
mov
loope
sbb
pop
push
adc
loope
dec
cmp
ljmp
jg
xchg
pusha
xchg
mov
fdivrp
mov
inc
jp
push
mov
ret
aas
in
adc
or
xchg
es
jle
lret
data16
jge
inc
dec
and
mov
out
ss
push
fcmovne
push
cs
fwait
jb
mov
and
imul
push
jb
push
push
cs
popf
or
xor
insl
sub
rclb
aad
stc
leave
jge
jecxz
ss
xchg
cmp
jmp
pop
addr16
xchg
cs
cmp
imul
pusha
push
out
xchg
jmp
cli
sub
xchg
mov
ret
xchg
and
popl
mov
ljmp
fdiv
xor
push
test
ss
call
xor
push
in
shr
adc
xchg
movsl
fnstsw
cwtl
arpl
sbb
fimull
cmp
data16
call
int
mov
xchg
fildl
cltd
int3
adc
cld
test
mov
ficoms
lea
cmpb
push
mov
jg
fsubrs
mov
dec
lcall
adc
pop
loopne
ja
push
dec
aad
and
dec
mov
faddl
enter
cmp
fstp
pop
mov
popa
pop
push
imul
in
jp,pn
push
mov
lods
mov
push
loopne
loope
js
aas
and
xor
dec
rorb
inc
cmp
ror
ljmp
mov
das
adc
mov
cmpb
je
add
cwtl
cmp
mov
icebp
xchg
jb
adc
testl
jge
xor
mov
fldcw
xor
xor
sahf
daa
cmp
jmp
push
cld
aam
ret
inc
call
jg
fs
loope
inc
test
filds
ret
and
xchg
es
inc
push
adc
or
fnstcw
pusha
scas
fwait
in
mov
lcall
test
incl
stc
add
jmp
aaa
sbb
bound
int
push
stos
adc
inc
out
stos
imul
mov
adc
jno
jg
cmpsb
jns
cmp
shlb
and
cli
jge
outsb
pop
out
mov
add
inc
xchg
icebp
mov
insl
push
jae
jne
mov
mov
xor
or
xor
call
and
ror
xchg
push
arpl
rorb
lds
adc
test
daa
gs
sub
or
push
ljmp
adc
inc
adc
in
adc
in
xor
addl
mov
scas
inc
js
pop
mull
xchg
jle
fcmovne
pushw
movsb
mov
push
lods
inc
add
jo
inc
push
leave
add
sub
pop
adc
push
mov
in
add
fs
outsb
pop
js
fnstcw
sti
cmp
test
adc
lods
and
loope
stos
xchg
mov
cmp
lods
das
mov
les
add
adc
adc
sub
pushl
pop
and
push
jl
es
mov
outsl
or
inc
decb
jb
cwtl
push
lods
sbb
push
test
adc
jle
stos
fadds
rolb
dec
cmpsb
xchg
mov
into
fwait
jo
push
sbb
cmp
push
push
lcall
pop
mov
jb
sbb
and
inc
stos
push
lea
mov
add
push
lea
or
push
xchg
or
icebp
inc
jge
mov
jno
pop
jle
push
xor
sbb
jbe
mov
add
push
fcoms
sbb
outsl
mov
insl
sahf
fisubl
jl
adc
push
pop
jecxz
aas
jle
and
pop
leave
xchg
mull
mov
xor
pusha
inc
and
fs
or
imul
clc
lea
pop
jne
out
fs
cld
sub
pusha
cmc
or
inc
cwtl
sbb
adc
lret
and
jo
pushf
mov
and
ret
rcrb
push
cmp
cwtl
cwtl
pop
roll
test
jno
inc
mov
xor
scas
ss
cmpsl
aaa
or
or
sahf
mov
xchg
jmp
push
mov
xchg
cwtl
push
push
push
push
mov
fisubl
dec
adc
fnstenv
cmpsb
dec
mov
or
loope
mov
scas
sub
test
ja
imul
jp
iret
aam
addr16
cmp
lock
int
inc
dec
pop
inc
cmp
push
jo
and
gs
lds
adc
jecxz
mov
mov
orl
aaa
mov
pusha
mov
pop
cmp
add
pop
sub
aam
iret
jno
pop
loop
pop
fdivrs
mov
xor
push
jns
push
je
inc
fadd
lcall
outsl
jnp
imul
aam
jp
cmp
cmp
mov
push
dec
sti
in
mov
push
mov
rolb
outsl
in
or
subb
stos
cmp
push
mov
cld
xchg
push
pop
sarb
cmp
andl
mov
cs
lods
shl
sub
mov
sub
xchg
mov
nop
dec
mov
fistpll
aam
mov
cmp
fstpt
xchg
bound
outsl
xchg
cmc
sbb
cld
add
pop
or
sar
mov
dec
xchg
test
popa
stos
jl
cmp
inc
mov
xchg
mov
out
or
and
in
cltd
inc
fildl
add
incl
cld
cmp
jne
aas
mov
xor
mov
jae
mov
bound
test
mov
add
lahf
fcomi
fwait
into
xor
xchg
shll
int
hlt
aam
movb
fcmovbe
cmp
mov
scas
push
xor
xlat
pop
out
mov
lock
adc
lea
in
out
out
dec
test
jp
aam
pusha
in
cwtl
cmp
lcall
in
arpl
lea
loopne
fstpt
push
jl
inc
test
inc
loopne
mov
sub
inc
jno
inc
in
outsl
xchg
and
test
pop
stc
aas
insl
jg
mov
ss
jnp
ljmp
into
hlt
sbb
addr16
xchg
pop
dec
mov
rclb
lret
clc
jp
movsl
loope
inc
aam
jmp
jmp
and
jmp
or
das
popf
xchg
nop
divl
aaa
notb
andb
je
xor
movsb
gs
insb
hlt
and
ret
rorb
inc
mov
mov
cs
out
arpl
scas
jecxz
imul
dec
mov
mov
call
mov
or
adc
outsl
jae
jge
and
push
jbe
sbb
pop
pop
div
sub
lcall
dec
jno
lods
cmp
lahf
mov
mov
jb
or
jecxz
addr16
inc
sub
out
lods
and
push
js
mov
inc
dec
orb
mov
xchg
out
mov
push
pop
imul
cwtl
ror
inc
mov
lods
pop
push
sub
or
clc
push
xchg
xor
iret
cmpsb
mov
push
ljmp
movsl
push
xchg
insl
or
inc
jecxz
sbb
lds
stos
xchg
cld
fwait
adc
cwtl
xlat
inc
roll
ret
adc
jbe,pt
out
ljmp
inc
rclb
dec
mov
cmp
mov
pop
pop
adc
push
pop
push
jmp
mov
mov
xchg
fsubrs
xchg
lcall
and
xchg
and
push
cmp
dec
pop
cltd
sub
orps
inc
inc
ljmp
xor
sub
adc
aaa
arpl
outsl
jp
dec
ja
sub
xchg
addb
xor
out
icebp
pop
cltd
sub
pop
jecxz
stc
push
cli
or
ret
adcb
dec
cltd
xlat
mov
xlat
mov
inc
in
cmp
jno
xchg
les
xchg
mov
ret
sub
insl
and
push
add
jl
or
sbb
rorb
test
aam
fstpt
dec
int3
xor
mov
lcall
cmp
sbb
push
enter
sub
daa
pop
daa
xchg
push
vminpd
mov
std
xor
mov
xor
jno
test
enter
xchg
int3
ret
aaa
sti
js
ret
xor
cltd
test
xchg
cmp
pop
and
and
jne
test
in
jmp
add
sub
push
repnz
hlt
sahf
mov
jle
cld
xchg
ja
in
or
ds
mov
add
jecxz
fld
das
loopne
xrelease
shll
ficoml
jle
add
or
test
das
loopne
push
out
mov
xor
sti
fstpl
sub
jbe
add
lods
shrb
lods
adc
stos
inc
mull
ds
jp
and
iret
and
jo
xor
push
mov
adc
mov
nop
cmpsb
daa
inc
js
mov
stos
inc
pop
mov
leave
ja
lret
je
sti
les
mov
in
fwait
lods
inc
cli
lcall
pop
xor
fbstp
dec
add
adcb
jmp
fisttpl
push
clc
pop
leave
pop
xchg
fmuls
shrl
or
sub
data16
adc
scas
push
es
ss
sub
leave
repnz
and
int3
cmp
jae
and
mov
mov
stos
call
test
mov
je
and
das
jne
push
add
cld
add
push
in
push
xchg
test
js
add
ja
cli
push
mov
mov
sub
mov
popl
test
add
lock
ret
mov
push
xchg
mov
stos
imul
dec
mov
push
les
adc
rcll
mov
imul
fwait
pushf
push
lret
fmul
xchg
adc
arpl
dec
mov
jp
inc
in
fistps
mov
and
std
inc
dec
mov
in
mov
inc
rclb
mov
add
cmp
sub
cli
mov
or
jbe
mov
test
add
in
mov
dec
into
push
jge
out
insl
adc
add
push
adc
rcll
in
sbb
ja
cld
push
jg
loopne
push
mov
dec
mov
popa
or
lea
scas
sub
in
xlat
faddl
cltd
daa
fiadds
aam
movsb
test
test
and
jl
adc
test
jns
jecxz
fs
mov
hlt
lcall
ljmp
push
xchg
loop
in
add
movsb
mov
sbb
das
ljmp
scas
aaa
push
rcrb
and
in
xchg
xchg
test
insb
xchg
les
push
pusha
jns
mov
ds
int3
lods
loope
pusha
bswap
sub
mov
repz
pop
test
cltd
sbb
ss
jb
sbb
arpl
mov
in
or
aas
pusha
lea
rcll
pop
popa
sti
and
sub
mov
mov
pop
mov
mov
jbe
jno
push
mov
jmp
xor
in
int3
sbb
je
pop
lret
xchg
push
dec
jmp
adc
push
ja
push
f2xm1
push
or
notb
fs
adc
pop
add
cmp
add
cmp
movsl
pusha
ror
push
movsl
xchg
fistl
push
or
pop
jmp
scas
stos
add
jp
stos
cmp
sub
in
es
lods
nop
add
sbb
jmp
add
mov
fs
push
push
xor
add
pop
mov
xlat
hlt
insb
mov
inc
dec
xchg
and
jl
cmp
add
std
lea
sub
rclb
mov
clc
mov
into
in
arpl
pusha
add
fstp
ljmp
cltd
sahf
xor
stos
pop
fmull
hlt
xchg
dec
imulb
call
sar
gs
jl
cmp
clc
adc
rorb
arpl
cltd
sahf
inc
call
idivb
jbe
shll
out
inc
push
int
ja
add
jbe
dec
movsb
inc
mov
cmp
cs
orb
orl
pop
jo
and
adc
fiaddl
inc
ror
lahf
mov
xchg
xchg
ret
cli
popa
mov
es
imul
push
mov
sti
jp
sub
shrb
out
es
in
sbb
sub
add
jae
xchg
and
mov
loopne
mov
lret
cltd
and
out
pop
or
lods
loop
or
mov
add
je
xor
cmp
hlt
xchg
cwtl
xchg
cmpsb
movsl
pop
bound
lcall
hlt
ffree
inc
xor
mov
adc
pop
jmp
adc
lods
in
ljmp
and
sub
nop
pop
sub
sbb
repz
cmpb
repz
jl
das
call
out
mov
shll
mov
mov
cmpsb
mov
mov
outsl
test
dec
movsl
in
push
imul
clc
jb
lods
and
pop
pop
jb
dec
out
sub
and
and
xchg
mov
cmp
in
mov
cmp
pop
jecxz
inc
jle
popl
sahf
loop
in
mov
icebp
fisttps
cmp
cmp
cltd
sub
inc
sub
loope
arpl
cmc
sub
jg
xlat
ja
dec
adc
add
sti
movsl
or
dec
mov
jge
mov
ret
andb
idiv
mov
mov
jmp
lds
mov
dec
mov
xchg
outsb
bound
pop
pop
test
sub
test
xor
out
stos
sbb
enter
lcall
cmp
xchg
sti
cmp
out
andb
je
xchg
lcall
mov
lock
fbstp
fs
or
test
or
jmp
stc
lea
push
cmc
clc
mov
push
fwait
sub
lcall
jno
jae
in
rcll
or
aam
push
fwait
stos
iret
ja
cmp
dec
jns
cwtl
push
push
pop
or
jmp
jnp
pop
fiaddl
outsb
icebp
or
test
dec
mov
dec
cmp
jns
cmp
dec
push
leave
mov
pop
cltd
push
cmp
xchg
mov
jmp
dec
sbb
cld
push
inc
sahf
mov
fldenv
fists
dec
mov
std
inc
fists
mov
jo
lcall
push
jp
inc
je
scas
arpl
ret
cmc
test
enter
pop
jbe
jmp
imul
mov
cli
sbb
sbb
add
sub
stc
or
test
cwtl
mov
dec
xchg
mov
xchg
sbb
repnz
scas
lcall
sub
lock
fwait
cmpsl
repnz
dec
stos
add
push
in
leave
popa
shrl
fists
scas
iret
sbb
leave
enter
or
lret
and
sti
ffree
es
loop
fsubs
aam
or
or
inc
ds
test
mov
les
lods
sub
sub
loopne
cmp
je
cmp
mov
jp
lea
sub
dec
popf
mov
and
xor
sub
fnstsw
loope
sub
dec
jo
adc
test
mov
xchg
inc
pop
dec
xor
insb
lods
in
dec
cmp
mov
sbb
mov
cmp
movb
xchg
shl
mov
push
js
xchg
js
dec
dec
dec
jbe
and
jno
dec
out
jp
imul
sbb
push
add
xor
fsubrp
xor
mov
pop
inc
jmp
push
pop
insl
test
repnz
or
and
int
lods
xor
in
pop
cmp
addb
in
jnp
jl
and
or
dec
adc
add
mov
push
iret
test
sbb
inc
pop
les
pop
stos
push
mov
sbb
dec
fcmovb
mov
cvtpi2ps
das
out
divb
cmp
fsub
dec
inc
xchg
mov
ret
cltd
inc
sub
mov
or
or
loop
repnz
mov
clc
sub
in
ljmp
xchg
dec
sahf
add
movb
jle
movsl
xor
in
orl
dec
gs
push
and
mov
pop
scas
adc
pop
dec
pusha
or
pop
cwtl
adc
cli
das
add
xor
in
test
inc
sbbl
lret
xchg
lods
add
sub
lcall
aad
sarl
sahf
add
xchg
test
jg
mov
pop
push
push
mov
int
cmp
or
pop
fisttps
test
mov
and
pop
aas
pop
das
push
and
sub
jmp
fiaddl
xchg
adc
xorb
push
lret
sbb
cwtl
pop
xor
jge
ljmp
ja
ljmp
or
jmp
outsb
hlt
pop
iret
ret
popf
ds
das
lahf
xlat
js
add
mov
mov
je
jl
push
or
and
fcmovne
mov
rorl
fwait
scas
les
add
mov
lret
xor
mov
call
cmp
ja
push
xchg
fdivr
das
mov
and
pop
jecxz
pop
pop
cmp
cmp
inc
rorl
push
dec
hlt
push
js
popf
insb
mov
lea
add
into
add
pop
pop
inc
ret
in
cmp
add
loope
hlt
cmpb
imul
xor
icebp
pop
mov
cmp
add
or
jne
jne
imul
push
push
xor
out
in
mov
hlt
mov
ret
sbbl
outsb
mov
inc
sbb
mov
adc
test
test
outsl
stos
push
call
mov
ret
arpl
jbe
xchg
mov
test
cmp
mov
inc
test
and
out
test
xor
mov
add
xchg
lea
fwait
js
js
outsb
sbb
xchg
inc
inc
movsb
mov
insl
mov
popf
xor
push
in
mov
cmp
in
add
es
in
cwtl
std
lret
dec
jbe
cmp
sbb
xchg
mov
mov
cmp
adc
test
shlb
fs
ljmp
pop
jge
xchg
adc
cltd
dec
inc
aad
ds
push
adc
xchg
add
out
stos
or
ret
sahf
sti
push
pop
stos
cmp
pop
mov
mov
xor
push
mov
idivb
ljmp
aaa
leave
mov
repz
test
mov
es
mov
dec
inc
pop
jns
pop
jg
jns
cmc
push
insl
roll
mov
in
xchg
pop
pusha
sbb
lods
push
in
cli
mov
mov
cltd
outsl
out
and
scas
push
icebp
jo
add
add
push
je
mov
stos
jmp
sar
cmp
inc
outsb
call
lds
loopne
sbb
xchg
pop
pop
test
jmp
add
pop
inc
movsl
push
aas
outsb
pop
and
xor
mov
je
jo
rcr
and
imull
lods
or
push
mov
roll
add
or
aad
loop
inc
outsl
pushf
mov
test
call
push
sbb
add
cld
jl
out
mov
inc
iret
jecxz
pop
loopne
pop
inc
cli
cwtl
dec
inc
daa
jecxz
in
out
pop
in
fisttps
mov
pop
cli
std
push
je
mov
dec
xor
sub
int3
mov
stos
jae
xchg
jecxz
xor
add
pusha
adc
pushf
mov
cmp
repz
hlt
fnsave
jecxz
loop
push
repz
jmp
daa
dec
mov
push
insb
fcmovbe
adc
inc
sar
lock
out
arpl
jecxz
cld
out
lods
xor
ret
push
and
dec
pop
sbb
into
daa
xchg
fldcw
je
fistpl
mov
add
pop
sub
inc
dec
xorl
popf
dec
outsl
pop
mov
cmp
test
mov
insb
push
xchg
lock
push
jg
push
push
mov
lea
lods
xchg
push
ljmp
jle
mov
pop
pop
lea
xchg
jg
inc
and
xchg
sti
jg
sbb
mov
cmp
dec
sub
ljmp
sub
sbbb
sub
lret
jnp
repz
fucomi
adc
mov
inc
in
push
xor
nop
push
test
aaa
movsb
lret
fstpt
xor
jmp
stc
addl
cmp
shl
mov
shll
adc
sbb
xor
jns
inc
push
stos
rolb
pusha
jecxz
movsb
jg
jmp
dec
jns
mov
push
push
inc
aam
out
cltd
xlat
add
movsl
ret
xchg
int
adc
push
clc
or
sub
add
xchg
out
test
xchg
outsb
adc
cmpl
inc
mov
out
enter
jmp
sahf
mov
adc
unpckhps
out
mov
js
dec
adc
fbld
gs
and
idivl
lods
addr16
aam
pop
dec
pop
xchg
jmp
dec
leave
into
mov
test
push
cltd
fcoml
inc
insb
adc
add
in
mov
mov
xor
mov
and
and
mov
cli
lea
jecxz
cld
or
mov
mov
rcrb
pop
gs
inc
inc
push
xchg
pop
jmp
adc
ret
and
xor
jp
in
aam
xor
mov
mov
aad
adc
pop
mov
xor
lcall
scas
jb
lock
xchg
std
add
addr16
shl
pop
in
xchg
mov
test
imul
loopne
push
adc
push
gs
lcall
subl
gs
fadds
or
mov
cmc
cmp
or
enter
aas
aam
inc
or
dec
mov
dec
jp
ljmp
sti
dec
pop
lahf
adc
and
add
out
xor
push
imul
push
or
push
xor
fsubrl
std
push
decb
ljmp
cmpb
mov
stos
pop
arpl
mov
incl
or
mov
mov
addr16
mov
pusha
cmp
test
xchg
add
in
sbb
mov
iret
xchg
adc
mov
adc
iret
push
sub
mov
push
jmp
cltd
pop
shl
lcall
cmc
arpl
adc
dec
mov
addr16
mov
fists
xchg
icebp
push
ret
fidivrs
das
es
test
xchg
sub
or
shrb
mov
test
js
and
bound
jmp
or
sti
out
fisubs
rcrb
adcb
out
ds
addr16
mov
xchg
scas
jecxz
cmc
je
jecxz
fistps
cmp
sbb
mov
lahf
push
sub
imul
mov
cltd
std
call
push
outsl
add
cld
mov
mov
shll
push
fs
sbb
xlat
cmc
mov
in
fs
adc
ret
clc
pop
pop
cmp
or
lcall
lcall
pop
xor
fcompl
ljmp
arpl
jl
es
mov
test
daa
fnstsw
add
insb
loope
push
xchg
add
mov
add
repnz
mov
mov
lock
hlt
in
roll
imul
cmp
outsb
lcall
pusha
sbb
les
jne
pusha
sub
das
dec
sti
push
jb
sysret
rcrl
int
fisttps
xor
lahf
cmp
bound
pop
cmc
pushf
sbb
pop
andb
ret
and
fisttps
mov
subl
dec
adc
fildl
sub
add
jmp
dec
cmpsl
or
mov
sub
mov
mov
popa
push
popf
sub
inc
cmp
gs
sbb
insb
std
out
sbb
nop
imul
mov
in
outsl
out
in
mov
ret
sbb
cmp
int3
or
jbe
pop
lahf
push
push
pop
jbe
push
mov
mov
call
lahf
imul
xor
xchg
nop
push
insb
or
jle
push
or
rcll
push
mov
xlat
cmp
push
add
inc
mov
mov
mov
sbb
push
mov
call
fwait
clc
ss
mov
xor
push
mov
push
sti
test
mov
mov
stos
lcall
sbb
imul
sbb
clc
and
repz
dec
pop
dec
cmp
sub
sbb
test
xchg
test
in
mov
or
cli
decb
push
add
ljmp
subl
pop
push
fcomps
jne
into
xor
cltd
movsl
jp
dec
sbb
cld
aam
mov
jp
shll
movsb
dec
sbb
and
negb
adc
adc
fwait
popf
ror
jns
faddl
sti
xchg
loop
cmpsl
xor
ficoml
pop
xchg
test
sar
fwait
inc
sti
add
cwtl
js
inc
lods
mov
inc
mov
pop
pop
orb
add
out
ret
js
movl
pop
shll
push
cld
movl
xor
pop
inc
or
mov
cmpsl
aam
or
nop
adc
jno
mov
mov
cmp
idiv
ss
pop
hlt
mov
insl
inc
adc
divl
dec
or
mov
dec
pop
popf
and
mov
mov
xchg
fucomip
mov
pop
jae
aam
outsl
mov
adc
ljmp
sub
adc
call
push
insl
adc
or
outsl
test
rcll
outsl
dec
test
int
dec
iret
fs
mov
imul
inc
roll
dec
push
fisttpl
fs
inc
popf
sbb
inc
ror
xlat
pop
sarl
mov
pop
cmpsl
aam
push
fbld
cmpsb
and
adc
cs
and
pop
out
stos
stc
xchg
mov
fucomp
scas
xchg
mov
pop
mov
or
xchg
jne
stos
gs
jge
shlb
xchg
cmpsl
sti
aad
mov
inc
lods
cmpsl
in
les
test
bnd
inc
cmp
mov
int
or
jg
scas
push
out
xchg
push
sub
test
nop
pusha
je
sub
aam
cmc
jns
dec
int3
push
clc
jecxz
fimull
pop
std
mov
inc
shlb
inc
cli
ds
addr16
adc
lds
hlt
aaa
pop
shrl
out
inc
arpl
scas
test
mov
in
fs
sarl
sbb
aad
stos
sbb
push
inc
cmp
ss
fmull
xchg
pop
pushf
loopne
loope
out
xchg
stc
cs
inc
imul
mov
push
ds
scas
jno
aam
bound
stc
and
loopne
jns
xor
test
scas
push
sarb
cmp
lret
or
test
test
test
sahf
popf
mov
js
jle
stos
inc
pop
jae
pop
push
sub
sub
xor
and
inc
shlb
xor
cltd
inc
bound
inc
and
outsl
movsb
mov
adc
js
sbb
mov
out
sahf
cmpsb
xor
and
lret
push
adc
and
stc
add
xchg
sbb
imul
shrl
pusha
xor
lcallw
mov
pop
cmp
test
dec
ja
stos
and
popa
push
xchg
int3
sahf
cmp
popa
filds
adc
mov
iret
sbb
push
sub
idivl
sbb
cvtps2pd
push
xchg
cmp
lcall
push
negl
jg
aam
call
out
cmp
aad
mov
add
cmp
jne
ljmp
cmp
xchg
mov
push
sub
add
rcr
xor
test
cmpsl
cwtl
aas
xor
pop
lea
loopne
fwait
and
in
mov
dec
into
pop
test
sbb
or
ret
lret
inc
movsl
sub
or
fwait
clc
outsb
cmpsl
sbb
mov
in
mov
xchg
mov
jnp
mov
popa
fnstsw
xchg
cmpsb
dec
mov
jl
call
push
fucomip
adc
cld
adc
mov
pop
sarl
enter
lods
or
mov
out
stc
mov
in
cmc
out
cmc
dec
inc
jae
inc
mov
es
push
adc
mov
sbb
aas
aad
movsb
xchg
mov
jecxz
nop
mov
or
cmp
mov
sbb
push
mov
jns
dec
jl
ss
adc
sub
pop
popf
icebp
icebp
int3
rcrl
mov
jno
out
hlt
filds
mov
pusha
mov
cmpsb
out
mov
mov
imul
out
pop
dec
or
xor
fbstp
push
xchg
mov
push
cmc
sbb
pushf
fsts
and
sub
icebp
pop
je
fxch
dec
push
cmc
adc
xor
push
sbb
test
jle
fsubs
dec
idivb
lock
lahf
add
lds
gs
mov
stc
dec
and
or
fwait
lret
pop
fcompl
cld
or
sbb
in
add
sbb
scas
xchg
mov
shlb
int
js
inc
push
jmp
jae
mov
sub
add
xor
loopne
pop
int3
mov
add
jb
jno
or
int
add
daa
or
push
fcmovnu
imul
inc
out
cld
cli
addl
and
cmp
insb
andl
mov
xchg
neg
jo
inc
ja
push
aas
xor
sbb
adc
and
lock
or
mov
pop
xchg
lock
int
jecxz
sbb
cmc
inc
popf
sub
xor
stos
xchg
addl
in
sbb
adc
push
mov
repnz
repz
das
xchg
xor
push
jg
push
leave
xor
jle
ss
lds
xchg
jbe
adc
in
movl
mov
dec
mov
pop
xchg
incb
mov
sbb
outsl
int
dec
push
mov
ja
ret
push
mov
fidivrs
add
mov
pop
fwait
and
pop
popf
pop
mov
sub
cli
cmp
ret
push
test
xor
cmp
ret
ret
jl
test
shlb
push
sub
mov
xchg
dec
aam
std
add
sub
into
or
and
ret
aam
leave
push
cwtl
pop
mov
nop
fdivrp
ret
jle
sub
pop
mov
jb
ret
sub
xchg
lock
add
sub
mov
xchg
xchg
flds
bound
rcrb
and
mov
xchg
dec
aam
int
movsl
mov
xchg
push
mov
ret
shl
jo
cs
mov
imul
lock
aam
or
pop
out
mov
and
xor
push
test
push
ret
fadds
push
mov
adc
push
pop
mov
xor
or
sub
cmp
int3
xorl
popa
in
mov
in
mov
add
cmpsl
cli
push
insl
loop
inc
mov
lcall
or
and
out
int3
pop
push
lds
mov
sarl
lret
push
push
mov
pop
sub
aam
repz
out
mov
in
repnz
sub
subl
push
dec
xor
sbb
mov
hlt
push
sbb
xor
inc
mov
cmp
ljmp
sbb
inc
xchg
cli
dec
push
iret
sbb
popa
mov
dec
sbb
insb
jge
mov
mov
adc
jp
push
sbb
mov
mov
jle
out
add
mov
jl
int3
sbb
push
mov
out
scas
mov
mov
repz
or
gs
fidivrl
imul
leave
xor
std
lcall
pushf
scas
hlt
jmp
mov
push
shrb
mov
pusha
inc
cld
xchg
ficoml
bound
fisttpll
jo
push
mov
sub
sbbl
push
mov
loope
sub
dec
test
stos
js
repz
jns
subb
and
aas
js
pop
mov
adcl
int3
cltd
out
fsubrl
and
aam
xchg
xor
cmp
movsb
ffree
mov
push
test
add
add
xchg
ljmp
repz
mov
movsl
mov
frstpm(287
es
out
inc
or
arpl
mov
or
xlat
or
push
shrl
xor
inc
cmpsb
lods
icebp
push
jne
sub
je
es
dec
mov
xchg
add
sarb
iret
xchg
sub
fmuls
loop
cmc
push
sbb
cmp
popf
inc
insb
mov
movsl
xchg
and
shrl
or
mov
or
cld
mov
inc
dec
mov
mov
stos
or
jle
mov
cmp
pop
mov
sarb
movsb
xchg
mov
adc
jnp
mov
sbb
and
nop
mov
popa
and
lds
and
mov
sub
shll
rcll
cld
cwtl
loop
pop
stos
mov
adc
mov
cmp
test
xor
cmpsb
mov
or
or
push
je
pusha
addb
jbe
pusha
adcl
fwait
adc
adc
adc
fwait
dec
loop
cmp
push
sbb
js
stc
cmp
outsl
adc
ret
stos
mov
mov
mov
ss
add
test
mov
dec
loop
xchg
rcl
add
stc
or
sti
pop
jo
ficoms
fcompl
pop
or
cmc
and
jp
fs
call
pop
lret
insb
pop
je
inc
aad
xor
decl
add
xor
cmp
cmp
pop
xlat
or
jmp
iret
lcall
sub
add
push
sarl
ds
addr16
and
jl
sub
jg
push
mov
cmp
dec
xchg
sbb
jg
jecxz
scas
mov
negl
jae
icebp
popl
pop
es
shrb
inc
ja
xlat
rcl
adc
daa
pop
lea
add
xor
cltd
xor
dec
sub
arpl
dec
dec
xchg
loopne
mov
xor
aam
cmpsl
fldl
lahf
jbe
add
scas
inc
notb
jmp
inc
mov
or
mov
adc
pushf
and
test
aas
or
sub
push
repz
loopne
loop
negb
ficoml
sub
push
xor
ret
or
cmp
mov
and
add
ljmp
jg
push
mov
pop
testl
sbb
mov
sbb
lcall
mov
movsb
pop
sbb
aad
out
mov
popa
inc
jno
out
xor
int3
dec
adc
out
int
inc
pushw
popf
add
divb
or
je
mov
or
arpl
out
addr16
xchg
shlb
cmp
ss
push
lcall
roll
or
ret
insb
mov
mov
in
adc
pop
xchg
imul
stos
or
pop
jg
jae
adc
inc
pop
dec
je
gs
push
push
jle
aas
scas
xor
cmp
cmp
aaa
fimull
adc
repnz
cmp
mulb
cmpsl
dec
std
xchg
repnz
lock
rorb
push
iret
fnstenv
daa
pop
mov
inc
lret
sub
arpl
pop
cmp
cs
jo
xor
pop
adc
inc
rolb
inc
mov
inc
jmp
packuswb
and
or
cmp
pop
in
fwait
inc
iret
sbb
lods
imul
or
sbb
jl
jge
push
mov
nop
xor
push
sub
pop
pop
cwtl
or
xchg
mov
jns
lea
dec
jmp
adc
ss
pop
jns
mov
xchg
addr16
jp
in
jle
mov
pop
xor
addr16
jno
fsts
jecxz
ljmp
das
xor
gs
cmp
jmp
adc
pushf
outsl
and
stos
cmpb
add
movsb
rorb
xor
mov
xor
xchg
mov
cmp
mov
adc
sbb
in
and
jmp
sub
dec
enter
sbb
add
xchg
loop
mov
cmp
push
cltd
aam
mov
push
fimuls
xchg
jb
aad
seto
fwait
ret
sub
mov
insl
mov
sbb
jge
mov
cmpb
jl
jb
push
repnz
andb
out
inc
adc
cmp
popf
pop
stc
push
cld
ljmp
int
ljmp
mov
faddp
movsl
pop
in
xor
push
push
into
xlat
out
sub
shrl
adc
mov
pop
aad
adc
jmp
lods
cmp
jge
pop
jns
lods
inc
mov
in
fdivs
mov
push
mov
inc
lock
jge
or
sbb
lock
cmc
sub
adc
cmp
lcall
sbb
push
js
push
mov
insl
cmp
imul
xchg
sub
mov
mov
ret
add
jp
stos
pop
mov
aaa
jbe
rclb
ret
pop
in
pop
popf
shl
add
push
ficompl
adc
ss
fs
mov
mov
shll
lock
scas
push
push
imulb
fs
loopne
ja
jmp
mov
xor
dec
xchg
jno
jmp
es
pop
sub
jmp
je
inc
push
in
pop
xchg
std
push
popa
cwtl
sahf
pop
adc
insb
in
nop
addb
jae
aad
push
lcall
sub
je
daa
or
out
mov
mov
jae
shll
push
and
stc
out
cltd
ficoms
dec
in
clc
clc
xchg
mov
adc
dec
mov
cwtl
mov
repnz
loop
mov
mov
mov
fistl
mov
movsl
mov
dec
cmp
stc
xchg
jmp
cmp
fsubr
js
rcll
movsb
jmp
push
xchg
inc
inc
lcall
imul
jne
dec
fsub
scas
stos
add
add
mov
int3
mov
xchg
pop
mov
sbb
notl
stc
xchg
jl
pop
cmpsb
les
fcmovnbe
jmp
mov
jo
pusha
std
adc
xchg
cmc
jg
imul
stos
out
repnz
ffreep
cmp
or
mov
bound
sub
je
mov
jno
dec
dec
es
lret
jne
or
leave
cmp
mov
idiv
or
dec
and
sub
cmpsb
xlat
push
divb
nop
add
xchg
mov
popaw
sbb
pushf
mov
cmp
jbe
or
jb
mov
fwait
or
enter
mov
pop
and
jl
pand
gs
lret
adc
mov
jecxz
arpl
mov
das
mov
arpl
xor
fmulp
adc
cmp
fdivrs
cld
adc
and
jbe
mov
ret
cmc
sub
mov
test
push
sub
or
scas
popf
movl
mov
cli
into
jno
andb
imul
push
xchg
icebp
xchg
ds
test
adc
in
pop
cmpsl
nop
int3
addb
imul
outsb
mov
jmp
sbb
mov
movl
mov
sub
stos
cmc
negb
stos
pop
pushf
push
lcall
lds
pop
add
mov
mov
cmp
pop
inc
shlb
jae
sbb
sti
inc
mov
xchg
fwait
xlat
subps
dec
sti
jbe
push
popa
int
aam
movsl
and
movsl
add
ret
cmpsl
mov
movsl
inc
jp
mov
or
dec
xor
ret
fldcw
in
cmp
mov
cs
cwtl
enter
pop
pop
add
cmp
sahf
lds
xor
pop
aam
ljmp
inc
push
mov
movb
push
aas
sbb
lahf
mov
jge
sbb
aas
aad
nop
fldl
in
pop
pop
push
inc
cmp
jae
cmpsb
cld
pop
int
movsb
dec
xlat
faddl
mov
cltd
movsb
lret
mov
and
insl
nop
fwait
or
jbe
ljmp
lods
iret
dec
or
sub
inc
sbbb
daa
sbb
mov
cwtl
out
xlat
cmpsb
push
lock
pop
inc
loope
ror
call
jne
imul
mulps
and
lea
loop
das
sbb
adc
cmp
inc
push
mov
aaa
inc
sub
sbb
outsb
xor
xor
push
xor
rcrb
rcrl
jl
stos
insb
add
gs
test
repnz
jns
sbbb
pop
stos
mov
shl
and
loope
xor
jg
lret
dec
xor
dec
fisubrl
jecxz
mov
in
call
ror
cmp
jo
mov
sti
or
push
lahf
es
mov
rcll
xchg
add
adc
jo
inc
popf
jno
into
addl
adc
ret
popl
push
jmp
push
adc
jbe
out
xor
cmpsb
cmp
mov
cmpl
idivb
in
cmp
or
lods
popf
jle
ret
and
out
mov
push
cmp
repz
and
sbbl
xor
mov
dec
and
ljmp
xchg
shrb
js
mov
sub
js
sub
pop
pop
jno
call
add
mov
mov
push
sbb
xor
push
inc
pop
out
lahf
xlat
add
loopne
mov
les
mov
inc
dec
xchg
jmp
jae
lret
int3
fstp
add
sbb
jecxz
inc
jge
lret
push
call
push
shlb
insl
stos
popa
cmp
dec
push
xchg
jmp
lods
cmp
xchg
mov
inc
sarb
int
ds
mov
dec
jae
sub
jae
push
pop
jmp
adc
push
or
loope
lcall
adcl
imul
leave
or
sbb
cmpl
mov
mov
add
daa
lret
and
inc
imul
add
mov
or
sarl
test
add
mov
adc
jp
cld
jecxz
sub
adc
push
inc
xchg
dec
outsb
push
pop
dec
mov
shlb
mov
mov
fimull
cli
nop
cmp
and
fisttps
cmc
nop
xlat
push
mov
aad
stos
add
imul
or
fs
outsb
int3
cmpsl
mov
push
movsb
xchg
ljmp
or
push
push
rorb
lcall
sub
insb
test
and
fisubrs
push
lahf
cmp
divl
jb
data16
ja
pop
jne
push
mov
stos
xor
ds
jmp
sbb
jne
fidivrs
mov
xor
jns
cli
mov
xchg
int3
dec
adc
loop
cli
sub
ret
sti
les
iret
repz
push
cmp
sub
ljmp
cmp
sub
jno
mov
push
pop
aad
jle
xchg
mov
sbb
fwait
out
es
jmp
into
jno
push
out
stos
cwtl
into
mov
mov
cmp
mov
jno
out
dec
jecxz
jne
xor
xchg
mov
pop
shlb
mov
das
adc
mov
sbb
xchg
hlt
adc
subl
ds
loope
dec
fisubs
aaa
mov
nop
mov
push
jae
sti
fistpl
dec
daa
addr16
mov
ja
inc
inc
jne
mov
dec
pop
sub
adc
pushf
jp
out
jge
idivb
pop
out
fiadds
lret
pop
mov
mov
sbb
scas
cmp
dec
pusha
xchg
into
fcomp
rcrl
cmp
cmp
into
lods
data16
out
icebp
lods
adc
push
and
mov
imul
repnz
cmp
imul
pop
mov
out
mov
int3
push
call
mov
xchg
shl
or
ss
or
fnstcw
inc
pop
inc
addr16
call
cld
push
cmp
jns
fadds
ja
pop
mov
xchg
fwait
bnd
in
add
mov
sbb
mov
test
xchg
mov
mov
push
daa
aam
rcrl
jp
orl
push
pop
repnz
dec
loopne
jle
jge
int3
cmp
shlb
dec
adc
dec
xchg
sub
and
fwait
xchg
dec
mov
mov
adc
pop
test
jo
jge
popa
pop
xor
dec
iret
xor
sub
add
movsb
imul
loope
imul
lods
mov
jl
hlt
icebp
gs
add
adc
xchg
jp
or
adc
test
js
cmp
stos
cs
push
push
xor
outsb
addr16
movsl
adc
rcrl
out
scas
mov
xchg
ret
ds
cli
dec
or
lahf
scas
fsubrl
add
jbe
gs
es
inc
mov
clc
out
mov
jmp
aam
and
lock
cmp
enter
hlt
stos
into
incl
xlat
cmp
int3
mov
jp
psubsb
pop
movb
clc
cmp
je
ss
xor
rcll
xchg
mov
nop
nop
xchg
mov
pop
sbb
push
mov
sbb
fs
pop
aaa
sbbb
and
shrb
int
sbb
adc
add
pop
xchg
jns
loop
out
mov
test
adc
push
mov
dec
icebp
adc
sbb
sub
push
icebp
sub
fwait
stos
mov
addb
iret
ret
daa
divb
push
add
inc
push
mov
enter
add
mov
aam
jno
sub
sbb
push
aad
xor
rorl
aam
sti
dec
stc
mov
jl
outsb
and
jecxz
shll
cmp
xor
cmpsb
push
adc
pushf
mov
push
cmpb
popf
int3
mov
xchg
push
insl
insb
or
outsb
popa
pop
jp
sub
jne
adc
add
mov
ror
add
inc
sub
push
pop
mov
sub
inc
dec
in
push
jno
testl
jl
jbe
mov
xchg
stos
cmpsl
iret
ja
dec
xor
jbe
lds
in
mov
pop
stos
stc
push
lret
sahf
out
cmpsl
insb
jno
daa
cmc
adc
dec
pop
cli
dec
sub
repz
inc
outsb
sarl
stc
push
popw
jle
jns
iret
xchg
pop
sarl
iret
cmp
and
sbb
inc
inc
mov
mov
dec
outsb
stos
cmpsb
cld
sbb
adc
hlt
push
push
sbb
repz
jo
lds
mov
out
jno
shlb
je
cli
lahf
jbe
adc
mov
insl
cwtl
cli
lods
jne
sahf
jge
fstpl
das
pusha
int3
push
jnp
and
and
pop
cs
lahf
movsl
into
inc
movsb
sti
pusha
jg
push
jae
xchg
aad
jae
or
xchg
inc
repnz
add
inc
push
in
cld
xchg
nop
and
mov
lahf
pop
fistl
arpl
lea
scas
pushf
repnz
sbb
scas
dec
clc
cmpsb
inc
loopne
movsl
dec
adc
repnz
fisttpll
stos
cmp
les
jmp
aas
and
and
mov
fldt
sbb
push
mov
pop
pop
inc
stos
add
mov
and
adc
add
push
ja
sti
mov
fsts
pop
add
fsubrl
js
pusha
mov
cli
push
jg
gs
out
fdiv
xchg
sarl
popa
mov
inc
in
inc
mov
and
adc
repz
xchg
mov
out
in
push
cwtl
in
mov
cmp
mov
bnd
dec
cmp
sti
mov
push
push
or
imul
cli
popa
mov
cmp
popa
test
and
push
ret
sub
out
repz
in
cli
popa
push
xor
shlb
push
adc
scas
in
fwait
jnp
stos
ja
cmp
xor
xor
scas
out
std
mov
loop
xorb
test
cli
adc
arpl
and
adc
jmp
mov
jb
aaa
mov
aaa
in
std
into
inc
lret
mov
xchg
fsubrs
sub
and
dec
lock
pop
shlb
cmp
jo
jmp
iret
add
dec
adcb
imul
icebp
int
sti
jbe
ret
xchg
mov
inc
xchg
rorb
inc
fwait
or
mov
jle
push
jge
insl
pushf
fstps
mov
enter
and
jmp
popa
jno
inc
dec
cmpb
fs
cmpsb
inc
add
xchg
cmc
int3
ret
lods
ret
jg
icebp
outsl
icebp
aad
add
pop
into
scas
and
bound
add
and
pop
adc
cli
fprem1
clc
inc
in
xor
lahf
fadds
cmc
xchg
jg
pop
and
pop
push
in
and
xchg
dec
std
scas
test
push
jne
pop
rcrl
add
js
test
cltd
sbb
mov
imul
std
push
pop
dec
push
retw
ljmp
mov
arpl
xchg
pop
jg
lcall
clc
dec
aas
jp
jg
lock
and
mov
mov
movsb
xlat
xor
sbb
sub
push
mov
pop
fsubrl
mov
jne
adc
rcr
fucomp
jmp
sbb
mov
lcall
popf
loope
mov
sahf
lret
ret
stos
adc
repnz
scas
cmp
xchg
and
loop
shll
push
push
das
or
ljmp
and
sbb
mov
aaa
test
push
cmp
dec
dec
push
ss
nop
movsb
inc
out
add
or
rol
dec
mov
xlat
add
sub
mov
mov
mov
movsl
jecxz
sbb
and
jle
int3
jae
pop
xor
mov
loop
int
adc
ret
idiv
fwait
dec
jle
push
icebp
arpl
pinsrw
adc
mov
scas
bound
xlat
ljmp
push
push
sub
ljmp
lahf
mov
adc
lds
jns
loop
fsubs
out
jl
cmpsb
cmp
jnp
rcrb
lods
push
loop
push
sub
movsb
push
dec
jo
mov
movl
inc
jbe
push
cltd
dec
sbb
repz
and
fadd
jb
sbb
dec
jae
int3
leave
lret
pop
test
imul
fiadds
xor
xchg
out
nop
mov
bound
fwait
leave
repz
out
aaa
lods
arpl
inc
fcomps
sbbl
lea
test
negb
xor
daa
fnsave
call
mov
imul
hlt
push
subl
adc
or
mov
or
hlt
loop
ret
mov
scas
sbb
inc
cmpsb
jnp
ret
push
cmpsl
xchg
jg
pop
jecxz
inc
xor
fnsave
mov
push
cli
sub
mov
or
jg
test
pop
ds
scas
and
aas
or
cmp
sub
sbb
push
rcl
lods
loopne
xor
xor
pop
or
jmp
mov
cwtl
jmp
fldl
flds
cmp
xchg
inc
push
int
out
cmpl
pop
push
je
pop
jnp
les
mov
enter
bound
adc
in
mov
clc
aas
sti
test
push
or
cmp
mov
sbb
cmp
xor
xchg
xchg
push
jno
add
sar
das
jge
jne
popa
scas
in
push
movsb
jns
add
mov
es
mov
shll
adc
out
push
adc
dec
call
ja
xor
and
mov
rcrl
push
movsl
adc
je
add
notl
xor
pop
loope
int
fprem1
es
adc
cmc
enter
or
push
fldenv
dec
movsl
or
xor
sub
and
xchg
sbb
int3
push
mov
data16
rorb
aam
ja
int3
sbb
pop
cmpsb
lods
lds
cld
adc
ljmp
dec
fs
mov
jnp
loopne
xor
inc
push
jb
sahf
adc
mov
lock
and
sub
inc
jae
fcom
pop
xor
out
sbb
test
das
xor
jge
daa
cltd
fnsave
cmp
pop
xchg
jmp
std
mov
call
insb
dec
dec
gs
push
movsl
or
sub
push
mov
adc
fstps
fnstenv
push
jne
add
out
int3
mov
mov
data16
ds
add
xorb
cmp
lahf
pusha
jg
lods
dec
fnstsw
shlb
aas
jo
adc
vmovhpd
add
mov
pop
lods
out
inc
pop
mov
pcmpeqd
into
arpl
js
inc
mov
andl
test
sub
pushf
mov
je
in
mov
push
push
xchg
ret
adc
mov
test
xor
inc
les
xor
pop
inc
sub
push
aas
add
inc
push
out
sbb
sub
fsts
iret
outsl
sub
and
mov
and
add
jb
test
and
getsec
xchg
pop
faddl
cwtl
push
mov
scas
jge
mov
add
mov
cli
jle
gs
popa
testb
or
jne
or
add
bound
mov
ljmp
cmp
inc
push
into
and
int3
mov
insl
enter
adc
jo
cwtl
jecxz
stos
loope
pop
in
jae
dec
and
jno
dec
loop
ret
cmp
dec
inc
add
enter
adc
jns
mov
stos
popf
jb
test
insl
push
lret
xchg
jne
stos
outsb
cmp
shlb
rorl
popa
mov
rol
mov
and
loope
xor
test
adc
xor
add
xor
data16
das
jb
jb
push
ror
xor
lods
cmc
cmpsl
jmp
hlt
movsl
cltd
inc
lock
loope
movsb
lock
jns
add
and
dec
movsb
fs
std
fwait
and
jno
stos
jg
xchg
dec
arpl
cmp
sub
hlt
int
stos
mov
popa
nop
aam
jns
mov
push
mov
mov
mov
cmp
xor
test
int3
fdivr
test
sbb
mov
leave
pushf
in
xor
nop
std
mov
std
fmuls
aaa
int
negl
outsl
jmp
adc
mov
cmp
in
movl
xchg
test
int3
test
inc
xlat
sbb
cli
aad
fwait
outsl
xchg
rcpps
mov
daa
add
mov
cmp
adc
cmpsb
pop
cld
inc
mov
and
and
pmulhuw
flds
dec
lahf
mov
loope
fisttps
jo
cltd
or
cli
inc
adc
into
sar
arpl
lods
jp
or
dec
mov
adc
inc
mulb
dec
dec
xchg
xchg
dec
push
mov
dec
xor
cmpsl
loope
lret
and
pop
xchg
ja
cmpsb
add
sbb
xor
bound
push
rolb
push
mov
dec
fcmovne
push
fisttpl
mov
push
pushf
pop
push
lret
mov
dec
movsb
mov
xchg
or
std
add
lahf
mov
andb
cmp
or
pop
orb
leave
outsb
mov
rolb
jp
std
aam
test
xchg
insb
jle
pop
jb
push
addr16
shr
push
int
cld
pop
or
sub
jp
test
les
out
add
adc
leave
pop
sub
jno
pop
das
mov
jo
les
fs
and
adc
sub
mov
jp
mull
in
push
mov
push
aaa
test
orb
gs
es
lcall
inc
sti
jo
movups
push
mov
sti
filds
cmp
test
xor
mov
pop
fidivl
sbb
inc
push
inc
inc
push
bound
push
fldt
cltd
rolb
push
and
into
and
add
enter
inc
sub
fsubs
add
and
sbbb
sarb
pop
jl
arpl
and
xlat
fmull
push
adc
pop
adc
dec
push
stos
push
mov
xchg
pop
xchg
clc
fldl
lock
mov
jmp
in
test
pop
jne
dec
pop
fldcw
mov
out
or
cmpl
pop
or
movsl
aam
xor
mov
xchg
or
fdivrl
push
cvtps2pd
ljmp
out
push
mov
jne
rorl
fnstcw
daa
call
mov
mov
cwtl
mov
stos
cltd
jne
jmp
push
mov
fdivrs
and
sarb
roll
daa
xor
out
push
call
sbb
stc
sbb
enter
xchg
test
adc
cltd
movsl
or
roll
sti
mov
out
cmp
lock
lock
jns
inc
cmpsl
add
leave
push
mov
jo
mov
outsb
inc
or
sti
stos
dec
mov
in
pop
enter
add
sbb
sbb
std
cmpxchg
adc
lahf
lcall
cmp
or
lock
sub
movsb
iret
rcrl
shll
sub
pop
push
xchg
leave
imul
addb
sbb
mov
incl
cmp
fidivrl
or
pop
dec
ret
ret
into
insl
cwtl
mov
push
sub
ret
xor
dec
or
mov
fistps
ja
jne
jmp
and
sbb
push
push
push
jo
mov
jae
leave
mov
add
xchg
arpl
scas
fstps
or
aam
add
add
mov
out
xor
jno
and
cmp
cwtl
or
fwait
xor
stos
pop
jo
mov
cwtl
add
aam
je
push
jle
ss
test
movlps
sub
fistl
xchg
divb
aam
jg
mov
in
test
adc
arpl
mov
out
adc
clc
cmp
aad
out
nop
stos
fiadds
xchg
in
ds
pop
in
popf
shrb
dec
shrb
cld
sub
add
in
inc
add
push
jno
cmp
adc
or
or
push
push
mov
repz
aas
sub
jae
push
ja
or
jb
cmp
lods
xchg
jmp
jno
and
jecxz
push
shlb
loop
lock
cmp
cld
out
aaa
scas
ret
lea
and
jl
fwait
add
adc
clc
inc
rolb
aam
ljmp
sarl
ret
cmovbe
xchg
ret
nop
inc
sub
mov
inc
pop
dec
sub
outsb
push
mov
cld
sahf
and
xlat
xor
aas
sub
sbb
xchg
dec
add
daa
nop
pop
dec
stos
sub
je
out
cmp
popf
pop
mov
push
inc
out
xchg
jns
pusha
divb
aam
cs
ljmp
xchg
or
fs
fsubs
cltd
mov
add
push
adc
orb
inc
mov
std
stos
les
insl
inc
cli
mulb
pop
xor
push
sti
inc
fdivrs
adc
fwait
leave
jno
mov
add
xorl
xchg
add
sahf
xor
mov
xor
popa
xor
shr
fdivrs
clc
cmpsb
xor
xchg
mov
ret
jge
xlat
add
fmull
aaa
push
icebp
cmp
cltd
sub
xor
xchg
mov
push
mov
arpl
ret
xchg
inc
cmpsl
clc
into
or
in
lds
dec
or
shlb
mov
sbb
mov
sbb
nop
pop
xor
test
movsb
add
jbe
mov
pop
insb
mov
js
push
or
jne
clc
les
stos
stos
iret
push
jne
cmc
cmp
mov
outsl
jecxz
imul
mov
push
sub
or
mov
mov
add
loope
cmp
adc
xchg
sub
inc
mov
sub
push
mov
das
insl
or
cli
push
mov
and
mov
xor
int3
mov
mov
xchg
leave
mov
mov
push
ja
popf
mov
es
bound
xchg
xchg
test
jge
xchg
fidivs
cmpsb
pop
lret
imul
cmpsl
adc
inc
fistpll
decl
imul
add
shlb
adc
dec
rorl
mov
xor
or
dec
fs
sahf
xor
jae
jecxz
add
nop
sarl
inc
jl
ss
pop
push
dec
lcall
xor
jp
xor
dec
sub
fidivs
mov
ds
loop
add
and
mov
or
adc
es
addr16
pop
cmp
mov
mov
lds
inc
or
in
or
stc
sub
icebp
mov
aad
inc
sbb
dec
sub
lods
pop
push
stos
push
inc
out
mov
sar
outsl
test
jle
cli
sti
lret
adc
adc
jmp
dec
enter
jbe
push
push
or
or
test
enter
stos
xlat
push
imul
rcll
adc
outsl
push
jecxz
cmp
mov
lret
cmp
test
gs
jecxz
xor
negb
loopne
push
fistpl
or
dec
lcall
push
iret
ljmp
iret
xor
arpl
push
adc
jle
int3
icebp
and
into
lahf
mov
ja
enter
mov
daa
mov
mov
out
pop
out
pusha
out
arpl
add
cmc
in
lods
call
mov
dec
movsb
mov
mov
jne
mov
sbb
jo
or
sub
cmpsl
adcb
and
loopne
jge
outsb
int
xchg
test
xchg
cmc
shlb
mov
xor
adc
es
jp
and
push
mov
and
dec
xor
mov
imul
rolb
jle
in
xchg
cmp
cmp
adc
int3
xchg
sbb
cltd
movd
xlat
pop
orl
and
imul
sbb
fcmovu
lods
xor
int3
push
mov
xor
addr16
cmp
cmp
mov
lahf
icebp
mov
jmp
outsb
popa
popl
dec
add
and
add
push
repnz
or
enter
test
movsb
lahf
pop
pop
sbb
and
xor
sbb
jb
mov
xorl
dec
jl
push
sub
xor
xor
mov
mov
push
lahf
pop
and
out
sub
imul
adc
inc
xlat
lret
rcll
bound
sub
jne
push
jle
enter
in
mov
add
stos
pop
push
or
mov
jne
lods
popa
add
cmp
or
inc
sahf
mov
mov
adc
cmp
ja
push
sbb
xor
inc
dec
ljmp
and
cmp
cmp
xchg
mov
or
adc
jg
sbb
xchg
cmp
lods
or
dec
data16
icebp
das
in
lods
repz
mov
jo
or
sbb
inc
xchg
in
adc
sbb
cltd
hlt
lret
xchg
fnstenv
mov
cmp
jno
daa
imul
lds
ja
and
lcall
mov
push
int
ficompl
inc
or
loopne
ss
push
mov
lret
movsl
or
faddl
xlat
cmpsb
xchg
pop
bound
sahf
test
jmp
icebp
lcall
mov
cmpsb
push
leave
stos
xchg
mov
pop
fsubrl
pop
js
cli
bound
bound
adc
cmp
mov
pop
or
movl
lds
popf
sbbl
outsb
out
into
les
jae
imul
xchg
enter
inc
xor
bound
sbb
xchg
repz
ja
rcrl
add
or
cmp
mov
out
cmp
mov
push
lea
sbb
rcrl
lcall
arpl
in
lahf
push
pop
shl
inc
mov
and
mov
add
pushf
xor
inc
mov
push
sahf
leave
mov
loop
pop
pushf
rcll
push
add
jecxz
sub
mov
shl
jnp
lahf
inc
out
sub
xchg
push
ss
lds
mov
stos
ret
push
and
push
push
imul
dec
lcall
mov
and
cmp
dec
push
jmp
jg
add
sbb
cmpb
rclb
xor
inc
arpl
sarb
insl
dec
xchg
sub
fwait
imul
mov
add
add
int
shrl
in
sbb
shrb
adc
pop
icebp
mov
bound
ret
pop
cmp
je
or
pop
dec
xchg
pop
xor
inc
mov
mul
push
mov
pop
cmc
leave
adc
inc
sbb
iret
and
mov
mov
in
stc
inc
mov
mov
les
push
jmp
lahf
mov
insl
xchg
iret
test
ret
add
gs
jbe
ficomps
cli
pavgw
ret
mov
or
or
xchg
int3
aam
insl
xchg
or
inc
pop
mov
cs
loope
dec
jge
dec
sub
mov
mov
int
sbb
inc
int3
or
icebp
jle
mov
sub
cltd
fwait
xor
or
scas
push
or
clc
or
inc
test
div
movsb
je
dec
sub
outsb
xor
sub
lcall
fdivrs
call
js
bound
ljmp
xor
cmp
bound
xchg
lea
shrl
jo
arpl
stc
data16
rcl
pop
inc
pop
inc
bound
out
dec
sbb
jge
mov
and
loop
xor
xchg
lds
push
mov
popf
in
lods
sbb
pop
xchg
test
jns
dec
mov
mov
pop
in
into
lahf
cwtl
bound
aad
lea
lahf
jp
jg
mov
cmp
int3
aas
adc
inc
repnz
xchg
xor
stos
rorb
pop
popf
push
jp
sbb
ljmp
adc
pop
jg
mov
lock
add
jmp
xchg
fists
gs
cmpsb
jg
faddl
and
sub
lret
scas
add
in
cmc
ficoms
jo
cmp
insb
mov
xchg
xor
fmulp
loopne
fwait
and
mov
int3
mov
lds
mov
imul
shlb
jmp
nop
fisubrs
scas
loopne
addr16
mov
pop
xor
xor
xor
adcb
std
lods
add
dec
pop
ds
mov
adc
xor
clc
out
ficomps
adc
jno
loopne
cmp
add
shll
sbb
dec
sbb
loopne
test
mov
dec
dec
enter
fmuls
jecxz
test
int3
add
fmul
add
inc
insb
mov
ret
push
xchg
dec
jo
repnz
mov
inc
clc
cmpsl
mov
pop
sub
or
fbld
enter
out
jle
pop
insl
out
push
int3
add
add
jmp
gs
mov
movsl
cmp
sti
pop
ljmp
aad
outsl
out
les
mov
xchg
addr16
ja
inc
mov
mov
push
mov
jle
add
in
mov
loopne
push
lret
dec
and
outsb
fstl
loope
fisubrs
cmp
mov
jle
mov
imul
mov
jmp
inc
pop
inc
jg
mov
cltd
jle
pop
je
and
adc
mov
int3
imul
mov
jg
mov
mov
loope
fcmovne
push
mov
cmp
mov
mov
imul
adc
scas
bound
pusha
mov
or
xchg
adc
mov
push
stos
or
inc
out
inc
ret
mov
jmp
sub
dec
xchg
outsb
pop
arpl
iret
or
mov
cmp
scas
inc
mov
in
mov
add
inc
push
push
sub
imul
or
jb
mov
loop
repnz
xor
std
mov
imul
adc
outsb
cmp
adc
xor
sbb
push
out
test
jo
sbb
push
dec
lcall
lods
or
insl
pop
mov
cmp
add
or
ja
in
movsb
clc
lds
mov
cmp
sbb
out
fs
test
add
int3
adc
pop
pushaw
sub
in
adc
mov
mov
out
sbb
inc
mov
add
sbb
mov
mov
sub
adc
push
adc
loopne
ljmp
and
adc
mov
ss
ljmp
adc
pushf
pop
pop
call
cwtl
out
xor
mov
ljmp
sub
mov
or
add
mov
jecxz
rol
pop
enter
xor
xor
notb
iret
push
fstl
pop
dec
sub
pop
out
sub
cli
xor
dec
push
std
and
sub
cmp
xor
sti
dec
cmp
push
sbb
xchg
push
popa
cmpsl
cli
loopne
int3
sbb
xor
pop
pusha
pop
mov
mov
xchg
imul
mov
jle
in
add
sub
popf
mov
jecxz
push
out
loopne
adc
push
cmp
leave
pop
repz
ret
sarl
jp
andb
pop
or
mov
xchg
rcr
cmp
xor
xchg
inc
enter
xchg
push
cmp
in
sbb
ljmp
fcoms
mov
lahf
jae
ret
subl
inc
hlt
in
cwtl
loope
cmp
imulb
or
adc
pavgw
aam
sub
push
stos
push
xor
rolb
add
popf
sahf
push
push
in
sbb
inc
test
and
mov
inc
stos
jae
sub
clc
sub
aam
push
push
jp
insl
rorb
mov
mov
mov
cmc
mov
or
sbb
xor
cmp
sti
test
or
pop
fisubrs
pop
xlat
add
ret
ss
fstp
mov
es
jp
lds
cmpb
fistpll
dec
and
mov
dec
mov
inc
push
jge,pt
cwtl
sbb
jne
aaa
in
scas
and
and
cmc
psllw
fadds
push
mov
and
or
test
fcmovnu
stos
flds
xlat
dec
sub
push
mov
sahf
cmp
jge
xor
mov
inc
inc
outsb
lret
mov
fprem
test
push
out
cmp
hlt
push
gs
dec
pop
sub
fiaddl
xor
loope
mov
mov
lods
fnstcw
or
cmp
cld
mov
and
xchg
sahf
syscall
aam
jo
pusha
adc
sbbb
sub
push
aad
jns
ret
sub
push
dec
je,pt
mov
fbstp
xor
inc
adcb
mov
xchg
dec
mov
test
mov
fwait
or
cmp
stos
es
aad
shll
adc
xchg
cmp
andb
xor
mov
fsubr
repz
in
neg
dec
call
and
xchg
xchg
lock
xor
mov
aad
jbe
and
mov
pop
loopne
sahf
in
adc
pop
cmpsb
push
mov
loopne
and
fsts
enter
or
jns
imul
aam
adc
mov
sub
faddl
adc
ffreep
dec
mov
push
push
lahf
popf
imull
sub
jnp
les
mov
xchg
idivb
cmp
or
mov
sub
fdivs
outsl
xor
adc
out
push
negb
sub
sbb
and
add
push
mov
aam
adc
repz
scas
leave
xlat
scas
and
adc
mov
sbb
mov
insb
rorb
dec
mov
fstpl
movsl
outsl
dec
test
pop
add
pop
popf
xchg
loope
out
push
sbb
fldt
das
aam
jne
ficomps
andb
adc
aad
lock
stos
jne
lret
cmp
fidivs
jecxz
adc
clc
push
jge
inc
mov
call
xchg
fs
std
in
xor
xorl
jmp
mov
fchs
rolb
lods
nop
ret
mov
and
mov
xor
cmpsb
sub
lods
cwtl
push
mov
jne
xchg
mov
imul
push
add
sbb
les
jo
aad
add
cmp
sub
sub
movsl
sbb
sub
mov
or
xchg
loop
inc
push
mov
push
cmp
cli
xchg
into
loopne
jmp
sub
adc
push
adc
inc
mov
dec
and
cmpsb
in
iret
mov
cli
cmpsb
mov
xchg
adc
dec
cs
pop
inc
ja
test
in
adc
out
cmp
push
dec
jae
inc
js
push
dec
or
enter
xor
inc
cmp
sub
lret
add
stc
stc
jge
shll
cmpsb
push
mov
jae
cld
into
out
aad
aad
xor
or
test
decl
cmpsl
nop
imul
push
dec
movsl
repz
sub
push
insl
xchg
enter
lahf
das
es
pop
je
pusha
adc
mov
xor
jae
xchg
push
cmp
mov
hlt
rcll
scas
loope
inc
xchg
filds
or
movsl
dec
lcall
clc
dec
negl
adc
out
and
inc
jbe
jo
iretw
in
stos
or
push
xor
cmp
pop
test
call
pusha
pop
ret
jmp
dec
dec
test
jl
xchg
lods
pop
push
outsl
enter
add
dec
xchg
sub
imul
lods
lret
mov
stos
vpperm
cltd
mov
xchg
cltd
mov
arpl
dec
push
mov
mov
repz
mov
push
sub
xchg
je
mov
popf
push
pop
add
push
ficoms
xor
hlt
cmp
in
movsl
cltd
jnp
mov
mov
gs
int
and
imul
scas
out
imul
popa
mov
fists
jnp
stc
mov
cmc
bound
add
xor
push
ss
js
sub
pop
pop
repnz
add
add
mov
mov
rorl
movsl
ret
pop
int
mov
ds
pop
jb
or
fs
xor
je
sbbb
pushw
or
mov
push
dec
sub
in
xor
jg
push
jge
fstps
or
lret
mov
sub
adc
ja
pop
or
incb
adc
in
jg
decl
shll
push
insb
jbe
mov
aas
add
push
sub
insl
push
fmull
or
lock
xchg
rcl
fiadds
in
iret
and
xchg
mov
jecxz
mov
jns
pushf
fiaddl
adc
lret
sbb
adc
add
adc
or
adc
dec
in
add
pusha
cmp
bound
jne
pop
xor
xchg
jae
repnz
cmp
mov
mov
aam
cmpsl
push
xchg
pop
mov
pop
scas
mov
nop
xchg
gs
nop
or
lcall
mov
sbb
pop
es
pusha
adc
adc
into
mov
push
mov
xor
sub
push
mov
add
mov
out
jae
add
xor
xchg
stos
and
sub
or
xchg
addr16
nop
mov
xor
cli
and
js
inc
scas
das
pop
dec
cmp
cld
cmp
inc
or
std
gs
addr16
fidivs
fs
sbb
rorb
clc
cmpl
mov
mov
cs
pop
ja
shr
push
sti
dec
jno
dec
dec
xchg
push
cmc
or
mov
lods
dec
push
shlb
repnz
jbe
imul
pop
push
sub
fwait
mov
bound
lods
adc
gs
or
push
aam
jnp
jb
or
shlb
je
jg
adc
repnz
push
pop
stos
adc
and
cmp
cmp
xchg
mov
scas
in
sbb
adc
jnp
sub
iret
and
jg
ja
mov
dec
in
mov
daa
je
outsb
mov
sbb
sub
ss
and
ljmp
jg
imul
outsl
es
or
sbbb
add
jo,pn
pusha
imul
unpckhps
into
cmpsb
adc
lock
push
dec
out
gs
dec
movsl
cmp
cmp
movsb
ret
adc
outsb
iret
mov
pop
in
std
lcall
dec
insb
cmpsl
out
push
xchg
scas
ja
inc
and
pop
pop
das
cmp
imul
insb
cs
xchg
sbb
movsl
call
sub
inc
pop
mov
jbe
pop
xor
jo
call
and
adc
jecxz
mov
sbb
xor
xchg
fbstp
test
je
pop
sbb
pop
and
cmp
pop
mov
or
mov
jl
sub
mov
mov
add
fbld
in
inc
sahf
adc
imul
aaa
outsb
lea
loopne
gs
sbb
mov
cmpsl
fsubr
or
in
push
mov
das
jl
ljmp
push
roll
or
into
cmp
mov
pop
test
test
xchg
push
inc
cld
jns
pop
mov
or
test
insb
pop
stos
int3
int
add
les
dec
add
ds
cld
pushf
dec
call
or
dec
add
xchg
dec
sub
xchg
jne
sbb
rcrb
sbb
adc
mov
ljmp
inc
setbe
mov
add
mov
xlat
in
fsts
subl
lods
popa
clc
leave
pushf
stos
sbb
add
sub
dec
adc
mov
mov
std
ljmp
loop
data16
stos
inc
mov
jo
mov
lods
es
lcall
inc
jne
cmp
test
dec
push
jg
push
stc
std
mov
insb
dec
cmc
out
fcompl
mov
pop
xor
les
dec
dec
mov
fwait
xor
lret
add
lahf
cmpsl
cltd
xlat
int3
scas
dec
jle
adc
aaa
inc
outsb
xor
fwait
sbb
ret
push
shrl
jg
sti
int3
and
rcrl
sub
sbb
stos
sub
lret
lds
sub
fiaddl
shll
lock
push
mov
xorb
add
mov
adc
ret
mov
inc
mov
into
or
pop
out
pop
mov
pushf
int3
das
or
jno
mov
pusha
in
repz
jp
int
lods
adc
inc
xorl
int
mov
es
cli
jg
xchg
popf
iret
pop
sbb
cmp
sti
mov
test
enter
rcll
mov
cli
pop
insl
fs
sbb
pop
sub
lock
xchg
push
push
insb
lret
jmp
andb
xor
and
ret
test
fdivrs
mov
cmp
mov
movsl
jae
lods
xchg
mov
mov
jae
addr16
sub
mov
jg
nop
add
xlat
and
aaa
push
bound
dec
addr16
or
lret
sbb
rorl
adc
mov
ror
rclb
jo
sub
fcoms
mov
cmpl
inc
pop
daa
sbb
fcmovnu
sbb
inc
jne
mov
mov
test
movsb
in
pop
repz
aas
mov
push
stc
jo
stos
jg
add
cs
jne
xor
sbb
imul
mov
xchg
mov
pop
lods
data16
push
jbe
or
dec
test
jge
es
ret
sub
rol
jecxz
xlat
xlat
pop
pop
repnz
mov
or
outsl
inc
mov
mov
into
sti
xchg
mov
pop
fdivl
cli
cmp
mov
outsb
pusha
aam
push
or
pushf
mov
mov
mov
loop
xor
rcll
test
inc
sahf
flds
daa
rcrl
sub
lret
cwtl
add
imull
cmp
imul
aas
dec
jo
inc
sub
add
sti
daa
lret
or
lret
sahf
jge
outsl
mov
pop
movsb
push
push
int3
outsl
pop
cli
test
into
dec
hlt
cwtl
mov
xchg
pusha
push
sarl
lahf
das
es
and
or
int3
sbb
add
adc
js
clc
jg
jl
jl
lods
xlat
mov
addr16
xchg
sti
and
outsb
pop
popf
push
cmp
mov
lret
adc
pop
inc
out
test
pop
out
add
aam
stos
mov
add
leave
test
cltd
test
cmp
outsb
or
cli
into
aad
or
cmc
cmp
inc
sbb
fcoml
dec
dec
repz
bound
ss
lea
pop
nop
jbe
std
daa
cmpsl
mov
pop
mov
pop
xchg
scas
call
test
orl
popf
lea
mov
mov
inc
sub
dec
arpl
in
or
call
insl
and
lock
out
rcrl
jmp
fwait
mov
imulb
mov
xor
sbb
aad
addr16
adc
xchg
cmpsl
cwtl
push
cmc
jmp
add
adc
ret
xor
mov
jo
mov
stc
in
fsubrp
das
dec
pushf
pop
aaa
add
xchg
and
mov
sbb
xchg
and
bound
mov
outsl
cmp
or
pop
inc
mov
scas
dec
xorb
call
rolb
mov
dec
repnz
jno
push
mov
xchg
dec
imul
add
mov
xor
push
xchg
stos
in
clc
and
fnstenv
jnp
xchg
aas
in
mov
mov
xchg
sbb
cmpsl
jmp
lar
mov
sub
and
sub
pusha
addl
push
jmp
imul
mov
cmp
enter
adc
lahf
push
popf
and
pop
or
jbe
les
out
push
jg
lret
test
xchg
clc
lret
lds
sub
stos
and
insb
addr16
nop
push
mov
test
or
test
or
pop
cmp
inc
xchg
sbb
mov
and
xor
or
sarl
lea
rcrb
test
test
xchg
repz
xchg
push
pop
pop
mov
sub
mov
jae
xchg
popf
add
jb
fimull
xchg
mov
stos
dec
add
sbbl
jae
mov
jno
pop
xor
xor
or
dec
dec
pushf
mov
mov
movb
push
adc
sarb
cmpsb
rcl
pop
mov
loop
add
adc
lea
inc
popf
add
jmp
cwtl
mov
lock
mov
shlb
and
ja
jnp
test
das
sub
mov
lahf
or
out
in
imull
and
negl
pop
stos
mov
hlt
inc
loopne
xor
mov
mov
loop
mov
cwtl
inc
sbb
or
sbb
out
mov
cmp
loope
jne
jle
jo
sub
cmp
add
or
and
pushf
ljmp
dec
test
fdivl
clc
xor
jp
idiv
xor
jb
outsb
pop
xchg
addr16
dec
out
cmp
fidivrs
mov
cmpsl
ret
lcall
push
xchg
mov
sbb
dec
mov
sbb
mov
push
mov
sbb
or
mov
dec
xor
nop
out
push
push
push
leave
std
pop
jbe
dec
aas
mov
imul
adc
dec
outsb
push
mov
js
mov
scas
add
outsl
mov
pop
pushf
flds
into
cld
inc
sub
cs
mov
fdivrs
cmpl
ljmp
test
or
int
pop
push
jl
arpl
sbb
rclb
pop
sbb
decb
out
out
mov
test
jge
lock
stc
in
xchg
call
and
data16
loope
imul
push
cmp
imul
xor
aam
mov
int
pop
icebp
pushf
fcomps
test
jns
sarb
mov
stos
ret
jl
mov
repnz
dec
sbb
stc
cmp
lds
mov
jmp
sbb
rcrl
pushl
into
mov
xchg
movsl
ja
xor
pop
out
mov
rcl
lds
push
add
scas
adc
push
push
hlt
sbb
fsubrl
aad
movsl
cvtdq2ps
or
jae
call
push
add
sbb
nop
nop
push
lea
add
inc
in
std
jns
enter
lds
shrl
mov
add
js
ss
fs
loop
cmp
jl
int
aas
sarb
insb
push
cli
aaa
fstpl
or
jecxz
ret
pop
lock
adc
or
js
jnp
psubusb
jbe
xchg
fmuls
fildl
and
stos
and
les
push
lods
mov
xchg
mov
in
add
fcomps
dec
stos
movsb
mov
inc
imul
inc
or
fsts
rcr
sarl
dec
jnp
add
test
jns
and
pop
push
pop
fcmovu
sbb
sbbb
jo
xchg
and
in
mov
daa
fidivrs
fchs
push
mov
imul
xchg
sti
lret
adc
sahf
stos
and
push
shlb
add
cmpsl
add
popl
call
fmul
xor
dec
or
mov
adc
mov
test
sbb
js
scas
sahf
cs
rcrb
or
stos
jnp
adc
jp
ljmp
aad
xchg
push
lahf
insb
fs
mov
dec
jge
insl
gs
xor
dec
in
or
addb
adc
dec
jne
out
mov
push
mov
cmpsb
imul
rolw
outsl
rcl
in
shll
pop
shrb
mov
in
mov
cwtl
pop
pop
shll
test
add
mov
js
jg
pop
xchg
mov
rorb
sub
js
add
inc
test
fbld
fstpt
idivl
movd
rcrl
xor
fdivl
addl
sbb
adc
ss
neg
sub
ss
scas
sub
out
sbb
pop
lret
or
ret
mov
inc
or
mov
mov
dec
pop
sub
lock
mov
mov
mov
and
jp
mov
bound
out
sub
testl
xchg
scas
cmp
mov
inc
add
in
and
xchg
es
jge
xchg
pop
push
or
sub
jnp
cmp
xorb
testb
mov
push
inc
mov
pop
aam
push
in
movsb
push
lods
jne
add
test
bound
repnz
xor
out
jg
bound
mov
arpl
mov
inc
mov
inc
and
imul
sub
or
mov
fucomip
test
lods
int
or
ret
add
push
inc
jmp
mov
xchg
pop
rcrl
pop
jge
ret
out
outsb
into
or
pop
cmp
inc
popa
scas
jo
test
cltd
adc
cmp
add
xlat
adc
scas
sbb
popa
arpl
outsl
mov
test
jne
in
jmp
xor
add
pop
mov
cmp
add
mov
cmp
xor
push
dec
popa
dec
xlat
aas
cmp
mov
xlat
jo
mov
pop
pushf
jle
mulps
and
lahf
scas
mov
dec
sub
icebp
imul
xorb
pusha
fcompl
mov
and
jle
lcall
jo
jl
cmp
xchg
arpl
fidivs
hlt
out
push
inc
mov
movb
mov
push
adc
sub
ret
xchg
lock
es
mov
xor
jo
movl
xchg
mov
cwtl
jnp
mov
push
pop
mov
mov
jns
push
jo
jecxz
ss
jl
rcr
inc
fists
cmp
or
xor
jg
push
loopne
lea
sbb
jbe
loop
insl
push
cs
test
lock
sub
into
cltd
cli
jp
clc
push
aad
pop
popl
daa
jecxz
arpl
push
cmc
sub
int3
ret
add
cltd
dec
mov
test
xchg
mov
and
repz
dec
and
xchg
or
jge
es
pop
or
xchg
pop
cwtl
pop
mov
gs
jl
das
sub
lock
push
jo
es
jb
sbb
test
call
fbld
jmp
cs
adc
mov
jae
dec
in
pop
and
and
pop
sub
push
sahf
or
mov
in
in
rcll
je
push
sub
popa
cmp
mov
notb
popf
mov
dec
adc
push
sub
stos
daa
mov
test
adc
mov
adc
inc
pop
fldenv
dec
stc
out
out
mov
sbb
outsl
jmp
loopne
cmp
dec
test
icebp
das
pop
stc
cli
inc
mov
pusha
add
sbb
inc
xchg
adc
nop
add
push
pop
stos
pop
or
dec
fidivl
icebp
lret
xchg
add
or
cmp
mov
push
push
sbb
js
mov
push
xchg
movsb
sbbb
sub
ret
aas
jns
icebp
and
add
popf
call
mov
imul
cmpb
push
test
mov
or
addr16
mov
mov
or
mov
lods
pop
out
or
daa
sub
push
add
fiaddl
lock
jbe
inc
sbb
push
adc
cmp
sbb
jns
mov
inc
popa
sarl
push
xchg
sub
sbbb
jbe
mov
cmpsl
sbb
rorb
xor
cmp
ja
fistps
mov
data16
cld
inc
movsl
and
gs
pop
xchg
sub
or
mov
adc
jns
or
and
jno
cs
popf
lea
cmp
jo
sti
gs
pop
add
pusha
mov
addr16
and
jl
cmp
or
jecxz
std
out
cmp
dec
les
add
cld
dec
ss
dec
dec
add
pop
cmp
jo
outsl
cli
inc
sbb
in
test
push
and
scas
pop
shll
fnstsw
jb
mov
add
and
sahf
fisttpll
mov
mov
add
sbb
js
aad
fmul
push
pushf
mov
ret
je
popa
mov
test
mov
mov
es
cmp
stc
ds
mov
insl
jb
xchg
adcb
aad
popa
rcrl
push
cmpsl
in
stos
mov
jae
mov
cmp
push
mov
lcall
mov
cmp
mov
jb
pop
and
xor
mov
cld
loop
nop
pop
mov
icebp
int3
pop
mov
push
pop
sbbb
gs
aaa
push
dec
inc
mov
fildl
ljmp
ds
pop
jbe
lcall
fnstcw
pop
dec
cmc
adc
fisubs
fs
in
xchg
pop
sahf
pop
subl
sbb
and
cmpsb
insl
fisttpll
lock
shrb
jmp
adc
lods
js
and
fdivr
fiaddl
sbb
lret
sbb
fs
and
cmp
and
add
and
lret
dec
sahf
cli
imul
jne
pop
iret
add
inc
sahf
mov
inc
push
sub
jecxz
cs
loope
stos
jae
std
sub
out
in
pop
cmc
and
xchg
jp
jg
insb
fsub
clc
push
sbb
add
js
lret
push
rcrb
lret
cmp
fwait
mov
pop
cmp
je
inc
loopne
inc
xchg
js
lods
les
dec
dec
cmpsb
and
faddl
xchg
mov
fsts
inc
inc
pusha
lds
fsts
ljmp
rcll
movsb
adc
stc
daa
lcall
pop
sbbl
sti
call
inc
mov
nop
subb
dec
fwait
dec
or
sbb
in
xchg
adc
test
popf
mov
push
fistl
ljmp
jl
dec
push
es
and
or
jae
jbe
sub
fldl
out
or
jo
dec
sub
inc
scas
xchg
pop
sub
imul
cs
and
imul
push
lret
call
or
icebp
mov
loopne
jno
pushf
jae
xchg
call
out
push
add
decl
cli
adc
das
pop
adc
jne
pop
pop
add
mov
sub
das
cmp
and
pop
cld
add
incl
push
clc
sub
mov
push
lea
mov
inc
mov
leave
dec
xor
cli
jecxz
dec
sbb
cmp
cmpsb
imul
js
mov
mov
jo
mov
dec
out
add
outsb
aad
pop
int
pop
jno
sub
xor
stos
add
push
repnz
mov
lds
sbb
popf
test
and
xor
xor
std
aas
dec
inc
scas
sub
push
lret
lcall
outsb
or
mov
mov
mov
in
stos
call
xor
hlt
push
out
leave
jecxz
sbb
cmpsl
test
jg
negl
push
cmp
dec
mov
leave
add
lods
jnp
in
cmpsb
dec
jo
aas
stc
daa
lock
cmp
ds
arpl
xor
movsb
cmc
cmp
test
pop
fs
in
jmp
ss
sub
repnz
les
and
cs
inc
sub
frstor
push
out
sub
xchg
out
push
jmp
push
xlat
rolb
loopne
ret
test
cltd
push
and
test
into
lcall
out
gs
test
push
in
movsl
xlat
or
mov
mov
scas
sahf
jnp
pop
repnz
mov
and
fisubrs
xchg
mov
ljmp
mov
cmp
sahf
mov
jecxz
add
xchg
andb
xchg
jae
cltd
mov
jmp
fistpll
dec
jp
decb
xor
xor
xor
sbb
adc
jnp
out
pop
sbbl
lret
or
out
and
int
dec
mov
pop
push
scas
sti
mov
mov
data16
aas
imul
mov
mov
scas
movb
mov
shlb
dec
lods
shll
loop
dec
hlt
inc
ret
inc
vmovq
fcompl
jno
scas
in
push
testb
loopne
cmpsl
out
nop
test
cli
test
push
idiv
shll
xchg
xor
nop
gs
push
enter
jb
cmpsl
or
add
movsl
mov
xor
rorb
pop
xchg
bnd
pop
cli
lods
jns
jbe
xchg
imul
daa
cmc
add
adcl
cmp
idiv
and
in
jns
leave
jg
mov
sub
movsb
es
iret
stos
cmp
push
enter
pop
mov
pusha
push
add
jno
mov
fistps
push
std
mov
scas
das
data16
dec
mov
test
sub
inc
flds
cmpb
push
iret
fistl
leave
cmp
sbb
push
or
mov
rcrb
pop
dec
cmp
or
and
xorb
mov
pop
fisubrl
or
test
or
sub
mov
mov
cmp
daa
test
xchg
bnd
push
inc
les
xor
insb
sbb
xchg
xor
mov
std
test
mov
xlat
jmp
jl
fistl
arpl
fsubr
mov
xchg
and
jmp
dec
test
inc
cmovo
out
mov
add
sbb
rcrb
jb
xchg
lret
and
inc
rcrb
adc
int
xor
lods
adc
je
fcmovnu
jb
push
sarb
jno
adc
gs
jne
push
cwtl
pushl
leave
inc
data16
lock
pop
out
jae
cmp
imul
xor
out
adc
ret
ss
ss
push
inc
leave
jge
rol
jb
testl
mov
call
mov
fisubrl
add
inc
aad
clc
das
in
or
or
lret
insl
adc
fistpll
jo
cwtl
movsb
int3
and
into
jmp
sar
push
addr16
jl
fs
cmp
push
inc
fwait
in
or
inc
mov
inc
push
mov
out
xor
mov
push
mov
aam
xchg
out
push
sbb
add
jb
push
lock
jl
fistps
leave
mov
rcrb
xchg
fldcw
nop
pop
jl
add
jp
stos
push
mul
xorb
fbstp
mov
ss
mov
and
xchg
outsl
sub
jae
pop
jecxz
cltd
stos
stos
adc
mov
jmp
xor
daa
jbe
push
insb
jno
sbb
jecxz
cmp
enter
imul
mov
cltd
mov
or
insl
clc
jo
pop
fmull
xor
pop
int3
cwtl
inc
mov
mov
ds
stos
fnstenv
lahf
inc
out
push
dec
push
fsubr
sub
jp
pop
mov
mov
ljmp
xchg
out
push
push
mov
inc
inc
adc
int3
or
jecxz
loopne
mov
mov
fldenv
adc
mov
sbb
xchg
push
lea
inc
push
call
popa
lock
lahf
mov
addr16
loope
xchg
out
add
repz
push
cmc
pop
mov
mov
mov
jb
mov
lret
push
jmp
pop
mov
jg
lret
in
and
out
aad
jns
outsb
adc
or
popf
jecxz
movsb
xchg
xor
out
lret
fsts
popa
inc
push
aas
cmc
push
popa
cmp
out
scas
pop
mov
add
inc
xchg
fwait
fwait
xchg
addb
out
mov
pop
sbb
mov
mov
and
mov
sub
js
xorb
out
pop
les
xchg
xchg
xor
push
ljmp
ja
sbb
inc
dec
sbb
shlb
or
pop
mov
or
mov
jae
dec
int
lahf
jle,pt
dec
outsb
sub
fwait
cmp
and
xor
cld
popa
call
mov
cmpsb
xchg
test
mov
push
cmpsl
xor
cmpsb
lock
dec
ret
mov
pop
mov
pop
into
push
mov
push
repnz
std
push
in
ret
aad
jnp
jno
dec
pop
andb
dec
jo
xchg
mov
jmp
cmp
pop
rcrb
jns
sbb
int
add
fs
data16
out
cmp
inc
in
xor
sar
sbb
into
fmull
pop
xchg
sarb
cmp
icebp
jo
loopne
xlat
jne
mov
test
xchg
mov
fcmovb
mov
inc
sbb
add
mov
outsb
or
jnp
sbb
mov
out
ja
jnp
jmp
mov
das
ljmp
sarl
push
or
adc
repz
imul
lds
int
lds
mov
add
js
fsubs
xchg
sub
xlat
jecxz
out
lret
inc
inc
loop
jg
test
mov
mov
mov
dec
fidivrs
push
dec
pop
mov
or
stos
lcall
dec
pop
rcll
adc
xor
lods
xchg
xchg
enter
or
gs
mov
lea
sbb
xor
and
fsub
cli
or
in
jnp
jmp
jae
aad
pop
aam
dec
das
cs
popf
cmp
inc
inc
push
lds
sahf
and
jmp
pop
lret
mov
push
loope
cmc
add
das
dec
addr16
dec
in
clc
mov
jg
lods
adc
adc
xchg
cmp
mov
dec
cwtl
push
xchg
mov
je
insb
subb
or
jl
ja
inc
or
inc
lods
cmpsb
adc
enter
dec
inc
and
cmp
gs
sbb
ds
into
fiadds
sahf
into
hlt
je
sub
pop
cmpsl
push
fnstcw
jge
jns
dec
push
rorl
mov
cmc
and
ja
dec
in
jge
iret
pushf
aam
stc
pop
in
mov
test
popf
sahf
mul
int3
push
add
sbb
test
jno
cmc
and
in
adc
xor
xor
rcrb
jnp
or
push
mov
adc
pushf
inc
arpl
sub
out
and
enter
push
xor
fs
pop
insb
clc
and
jne
mov
sub
loop
fadds
xchg
rcrb
mov
mov
hlt
jecxz
push
cmc
jp
push
pop
andl
rcll
xor
shufps
orl
hlt
fwait
add
iret
adc
add
sbb
push
test
adc
sbb
mov
mull
test
inc
xor
ret
cmp
push
daa
das
je
fdivrs
sbb
aas
ja
dec
js
in
divl
mov
rclb
mov
push
push
aam
inc
sahf
sti
icebp
push
ror
lahf
mov
fwait
jne
mov
and
or
push
add
lret
adc
and
bound
std
xor
inc
dec
imul
jne
cmp
mov
cltd
add
cmp
jae
xchg
pop
hlt
push
in
add
clc
inc
pop
fnsave
test
adc
adcb
mov
fidivl
popf
add
inc
dec
call
pop
mov
call
pushf
in
xlat
mov
pop
out
je
jb
push
and
jg
cltd
pop
inc
dec
sbb
and
test
mov
cmpsl
jne
inc
stos
imul
sub
mov
testb
rcl
aad
add
mov
cmp
rorl
pop
mov
push
ror
sbb
lds
ljmp
push
lret
rcll
mov
clc
in
into
add
popa
xor
lea
xchg
std
pop
movsb
sbb
xor
pop
sub
mov
or
sbbb
enter
nop
lods
popa
cmp
mov
hlt
fwait
mov
jmp
insl
push
mov
outsb
loope
cwtl
roll
lea
inc
repnz
lds
movsbl
out
mov
popa
mov
dec
loop
add
jnp
dec
xchg
pushf
push
or
rcr
and
cwtl
cs
fistpll
jnp
cs
cmp
movsb
xorl
and
cmp
mov
fistl
stos
sbb
cld
mov
sub
bound
mov
dec
sbb
pop
pushf
jb
or
divb
adc
inc
fdivp
cmp
int
pop
sub
call
movsl
out
fistps
sbb
push
sbb
cs
cmpsb
inc
xor
rorl
daa
cmc
xchg
push
push
cmp
pusha
xchg
inc
popf
dec
fdivp
mov
repz
outsl
in
cmp
in
adc
jle
cmpsb
inc
jns
js
sub
xchg
mov
sbb
addr16
cmpsb
cmp
mov
testl
dec
shrb
inc
sub
in
mov
popf
je
xchg
dec
aaa
outsl
mov
pusha
lds
in
scas
jg
scas
inc
jg
iret
loopne
jno
pop
mov
push
iret
or
pop
jmp
push
mov
icebp
push
outsl
cs
jbe
or
cltd
js
inc
test
and
loopne
adc
mov
scas
push
repz
jo
lods
or
lods
adc
into
loopne
mov
dec
mov
mov
arpl
sbb
or
popa
out
pop
insb
mov
roll
and
mov
mov
repz
jecxz
insl
ljmp
sub
aaa
arpl
mov
push
lods
in
push
lock
jbe
inc
aam
push
dec
sub
add
stc
rolb
jo
pop
mov
dec
push
enter
jle
xor
mov
mov
push
int3
pop
and
cmp
dec
mov
pop
inc
sub
ret
adc
xor
add
stos
sahf
cmp
pop
inc
mov
xor
sub
fcoms
add
mov
or
shl
cli
push
scas
push
jp
fidivl
call
data16
pop
shlb
xchg
or
test
cmpl
push
mov
scas
gs
repz
test
add
pop
push
add
inc
imull
pop
xor
test
xchg
stos
sbb
movsl
loope
mov
jge
in
ljmp
cwtl
sahf
add
cli
cmp
mov
or
pop
sbb
popa
ljmp
mov
fsubrp
jbe
cwtl
adc
and
xchg
and
lds
push
outsl
xchg
addr16
mov
mov
outsl
ret
sbb
hlt
insb
in
int3
std
shll
add
mov
insl
std
loop
jns
pusha
das
rolb
mov
je
or
cmp
cs
outsb
mov
out
or
pop
and
sahf
mov
lahf
pop
xor
in
xchg
adc
int3
and
ret
cmc
shrb
xor
pop
xchg
jp
hlt
pop
sbb
push
mov
inc
dec
mov
inc
adc
sbb
and
daa
or
pop
add
inc
stos
dec
fistpll
xchg
test
xor
leave
leave
jbe
xchg
movsl
enter
subb
leave
idivb
xchg
popf
ljmp
or
xlat
mov
ljmp
dec
inc
test
mov
xchg
push
subb
cmp
and
jmp
push
outsl
inc
push
loop
adc
stos
out
in
mov
push
inc
mov
sbbl
lods
arpl
clc
cmc
cmp
add
scas
fildl
int3
mov
adc
xchg
jns
xlat
cmp
mov
movsb
add
pop
mov
sarb
or
stos
add
fistps
jp
iret
pop
outsb
in
and
shl
loope
adc
xor
mov
xchg
xchg
bound
push
lds
jbe
inc
mov
xor
test
jg
adc
call
and
and
sbb
inc
dec
ljmp
mov
mov
movw
fs
pop
cmp
push
in
aaa
fisubs
out
xchg
mov
pop
xchg
and
pop
testb
insb
jo
sbb
les
dec
or
fldcw
or
inc
xor
pop
mov
loopne
push
mov
sti
daa
hlt
repz
cs
pop
sub
sbb
test
in
adc
push
loop
clc
stos
push
dec
dec
push
vphsubwd
sarl
jns
push
sub
std
shlb
test
je
and
shlb
repz
stc
cmp
test
inc
add
test
pop
test
xchg
inc
adc
jno
popa
jns
mov
jl
inc
pop
lret
jecxz
lahf
xorb
sub
pop
fcoml
xchg
hlt
in
mov
inc
mov
test
xchg
inc
cmp
sub
int
inc
cltd
rorl
mov
sub
out
push
adc
inc
adc
push
inc
fidivrs
cwtl
pop
test
fcomps
cmpsl
pop
ret
popf
stc
inc
nop
pushf
cmp
adc
pop
cmpsb
xor
adc
orb
sub
fucomp
xor
add
cs
loopne
ds
dec
cwtl
popf
imul
pop
mov
je
test
and
dec
push
test
fnstcw
cs
xchg
mov
mov
xlat
fwait
outsb
add
jecxz
aad
arpl
or
rolb
xlat
xor
push
lods
dec
push
jmp
sarl
stc
add
sbb
cmc
add
mov
xor
mov
jmp
std
adc
mov
stos
xchg
mov
loop
xchg
ja
out
xchg
push
mov
jp
test
call
mov
sbb
mull
pop
imull
jns
fldenv
xchg
out
and
or
shll
mov
inc
sahf
dec
into
push
js
test
outsl
jbe
cmp
mov
scas
arpl
jae
test
push
mov
jp
fs
scas
pop
fsubs
test
push
scas
daa
div
stos
test
aaa
das
sbb
dec
fucomp
clc
pop
shll
jae
insb
inc
jmp
popa
push
xchg
shr
outsl
add
mov
and
fstpl
je
in
js
xchg
clc
fwait
daa
add
addr16
sub
loope
or
imul
hlt
jge
aas
rcll
adc
jle
pop
jle
add
jne
movsb
sbb
faddp
xor
mov
pop
or
enter
pushf
out
xchg
mov
cli
inc
mov
pop
pushf
arpl
movsl
dec
test
std
inc
shlb
jns
pop
jp
aaa
jae
jo
loope
dec
repz
inc
cmc
xor
aad
pop
jle
stos
jns
fbstp
add
inc
mov
pop
sub
nop
lahf
ficomps
cmpsl
lea
clc
shlb
pusha
xchg
outsb
int
jae,pt
xchg
mov
sub
addr16
adc
sbb
ret
arpl
push
pop
icebp
cmp
out
adc
lcall
das
imul
roll
lea
xchg
insb
pop
ja
dec
nop
mov
test
daa
jne
sub
jns
pop
or
xor
stc
out
repz
cmp
jmp
out
push
ds
adc
idivb
out
test
ret
sti
test
mulb
ret
nop
jnp
repz
and
sbb
sahf
and
gs
imulb
insb
and
jnp
sbb
addr16
inc
add
in
in
mov
fisttpl
in
fsubrl
or
dec
sti
jp
dec
pop
cmpsb
lea
push
nop
pop
outsl
mov
loope
inc
mov
mov
mov
xorl
pop
movsl
lret
pop
mov
lcall
lret
sbb
mov
out
leave
jb
mov
add
fsub
ja
sbb
mov
fiadds
ficoms
popa
pop
dec
imul
es
mov
addr16
cmp
pop
and
cli
ja
dec
xchg
call
sub
lcall
divl
and
push
sbb
aas
pushw
pusha
and
xchg
js
jecxz
mov
movsb
inc
xchg
xchg
sbb
out
aad
leave
mov
push
aad
stos
mov
mov
add
sbb
leave
cmp
adc
push
jmp
inc
push
adc
jae
cmp
cmp
xchg
xor
je
into
imul
je
out
cwtl
aad
xchg
out
jmp
jno
push
mov
or
mov
jp
mov
shrl
inc
aaa
addb
les
movsb
sub
mov
imul
mov
and
cwtl
pop
fs
dec
in
loope
push
enter
sbb
xchg
out
mov
sbb
ficompl
aad
pop
or
insl
mov
call
out
ja
lret
ja
adc
fsubrs
pop
mov
cmp
jae
mov
lods
into
mull
in
push
js
in
dec
roll
mov
sbb
sbb
fdivrl
jae
aaa
pop
fdivl
push
sub
shlb
subl
and
stc
pop
sub
mov
adc
dec
push
je
fwait
adc
cld
lahf
or
xor
jbe
mov
push
mov
and
adc
rolb
inc
stc
sti
inc
add
out
add
jno
out
jl
aaa
stc
iret
pop
dec
cwtl
out
aaa
imul
jle
cmp
repnz
dec
pop
or
ja
cmp
push
xorl
out
fs
sub
lret
fdivrp
cmc
inc
cmp
mov
xchg
test
pop
and
out
cmpb
lea
ljmp
xlat
dec
leave
les
dec
addl
xchg
pop
cmp
addr16
cmp
insl
scas
and
mov
icebp
xchg
xchg
dec
or
mov
orl
les
dec
cmp
xchg
sub
sbb
jae
xor
jle
cmp
mov
push
shrl
fisttpll
or
adc
sbb
ja
push
pusha
enter
push
int3
and
loop
jbe
jmp
push
sub
scas
in
inc
stos
xor
pop
xchg
sub
xchg
sbb
outsb
push
lea
jmp
jns
sub
dec
popf
ljmp
mov
mov
out
insl
fsubs
push
pop
cmp
icebp
call
stos
pusha
out
xchg
lahf
sub
mov
loop
je
sahf
popf
add
push
scas
data16
dec
pop
iret
mov
cmp
bswap
repz
add
int3
repz
adc
lea
push
jp
movsb
aaa
inc
sbb
inc
cli
cmp
pop
out
popa
push
xlat
fimuls
sahf
clc
xchg
bswap
lret
pop
adc
sbb
adc
cmp
sub
xchg
dec
fdivrs
int
divb
push
hlt
js
mov
lcall
mov
mov
mov
sahf
sbb
mov
push
cwtl
mov
fildl
inc
test
sub
inc
jl
loop
cmp
insl
outsb
jmp
rcll
push
push
movsb
push
or
data16
std
xlat
pop
aam
xor
or
inc
out
std
sbb
test
jmp
jg
jmp
xor
dec
jl
ds
sub
jne
out
and
hlt
and
dec
pop
inc
fwait
ja
add
dec
das
xchg
out
lret
fimull
sub
add
mov
mov
popa
pusha
cmc
cmp
movsl
sub
xchg
push
and
dec
ret
mov
loopne
rorb
inc
sub
daa
lds
inc
xchg
scas
mov
mov
loopne
adc
mulb
daa
imul
in
fdivrl
lret
pop
jge
mov
int3
dec
inc
add
rcrb
pop
pop
fbstp
cmpsb
cli
and
in
scas
into
adc
add
scas
adc
inc
jns
inc
addl
xchg
jae
aad
mov
imul
lock
mov
mov
xchg
and
insb
mov
movl
inc
inc
adc
mov
xchg
ds
fbld
je
mov
xchg
pop
mov
adc
push
shl
dec
test
xor
jecxz
popa
adc
ret
das
dec
or
js
inc
cmpsl
scas
pushf
scas
mov
jne
jo
inc
push
shll
std
jecxz
outsb
pusha
cmp
mov
mov
cmp
pop
mov
ret
pop
mov
cmpsb
pop
fdivrs
add
inc
jg
xchg
or
dec
ror
loop
sbb
movsl
xor
jp
adc
jmp
fsubl
jle
xchg
pop
je
mov
ror
mov
popf
mov
push
push
mov
insb
enter
push
inc
cld
inc
add
filds
or
pop
mov
mov
pop
cmc
pusha
or
hlt
hlt
xor
add
sar
pop
mov
and
mov
ficoml
or
cmpsl
inc
xor
ja
insl
fstpl
jecxz
xchg
lret
aas
aaa
inc
push
adc
push
pop
inc
std
add
into
out
rep
jmp
cmp
ds
fstps
inc
mov
mov
rorb
sbb
mov
jecxz
arpl
stc
mov
in
das
sbb
and
sbb
aam
call
loopne
xchg
movsb
mov
jo
fs
xor
xchg
or
insb
mov
xor
adc
mov
jbe
pop
or
iret
les
or
pop
lretw
jnp
or
or
inc
jae
hlt
or
enter
dec
movsl
dec
push
fidivrs
cmpsl
leave
xor
mov
push
and
out
mov
sbb
loop
push
nop
mov
mov
xchg
pop
out
pop
data16
lea
out
pop
sbb
outsl
push
cmp
or
cmc
mov
xchg
cltd
sub
fcoms
sub
mov
xchg
mov
cs
scas
pxor
addr16
seto
adc
call
pop
cmpb
popa
lcall
cmpsb
adc
jl
shlb
xchg
sub
jl
js
ds
and
push
mov
bound
fiaddl
in
xchg
dec
push
aas
ljmp
shlb
into
repz
lods
leave
jnp
pop
pop
fbld
shrb
jnp
fadds
and
stc
bound
jg
fadds
adc
xchg
pop
daa
sub
or
push
rorl
shl
aaa
lret
stos
fcomps
or
fcoms
xor
fidivrl
lahf
ss
out
scas
rol
dec
movsl
inc
dec
ror
cs
sbb
pop
add
ljmp
loop
pop
lahf
mov
mov
mov
xchg
int3
lret
push
dec
fcmove
sarl
mov
aas
and
xor
aaa
push
test
jns
repz
sbb
mov
js
fadd
test
dec
scas
and
dec
movsb
xchg
lret
sbb
js
dec
mov
ret
les
dec
out
mov
mov
outsb
adc
mov
popa
cmpsb
xorl
lods
pop
lahf
xor
arpl
enter
gs
jne
bound
stos
xor
dec
jo
rcrl
loopne
stos
popa
mov
fwait
je
mov
in
fs
sahf
push
inc
lock
mov
into
mov
je
xchg
jno
jb
imul
fwait
push
je
or
mov
cmp
xor
dec
xchg
xor
sbb
cmp
push
pop
cltd
or
push
push
sbb
test
repnz
inc
jb
lds
int
or
xor
enter
ds
cmp
inc
stos
hlt
stc
push
and
lock
stos
fs
push
sub
stc
add
out
mov
cmp
push
es
xchg
mov
inc
mov
sbb
jmp
scas
cltd
nop
adc
mov
shlb
pop
push
pop
push
mov
mov
sbb
repnz
cld
pop
add
add
ja
sbb
push
mov
push
int3
cmp
dec
je
jmp
fs
dec
cltd
pop
mov
dec
dec
sarl
cmp
push
mov
cmp
xor
push
add
das
pop
jae
and
cmp
fcoml
jno
mov
pop
mov
push
push
hlt
cmp
adc
test
int3
aas
shlb
xchg
cmp
xchg
orl
loop
and
xor
mov
lods
mov
pop
dec
pop
xor
jnp
xor
pop
ds
mov
fstl
popa
jg
jg
push
out
pushl
notb
mov
adc
dec
mov
dec
sbb
fwait
lahf
mov
sti
mov
push
cmp
in
jmp
jg
rolb
xlat
dec
xchg
fwait
mov
enter
sbb
mov
jnp
jb
aad
or
sbb
mov
cmp
mulb
icebp
pop
adc
testb
pop
addb
push
out
fninit
cwtl
incb
mov
test
add
repnz
repz
jmp
test
jne
xchg
mov
lret
and
push
xchg
outsb
fadd
arpl
std
ss
xchg
lret
cwtl
test
cmpsb
add
mov
jp
pop
movsb
jns
push
fwait
into
shrl
xchg
jbe
negb
iret
in
xchg
dec
lea
xor
adc
aaa
sub
lret
aas
dec
lock
cmp
mov
mov
inc
pop
lock
and
pop
cmpsb
push
loope
aaa
inc
xchg
xchg
mov
arpl
xchg
pop
and
scas
mov
sbb
notl
adc
add
sub
mov
push
mov
add
cli
mov
jl
imul
mov
cmp
push
mov
js
xlat
or
add
leave
and
add
cmp
push
xchg
sbbl
push
mov
scas
aas
mov
imul
test
push
scas
xor
rorl
icebp
or
testl
stos
pop
mov
ljmp
jmp
rolb
sub
nop
ds
rcll
or
mov
ret
push
pusha
inc
sbb
inc
mov
int
xchg
repz
add
sti
inc
ss
stos
in
or
popf
push
orl
inc
lahf
mov
icebp
dec
out
pop
mov
in
and
pushf
rcll
dec
aas
inc
pop
lret
rorl
mov
cmc
pushf
pop
mov
loopne
mov
add
inc
push
arpl
test
dec
lods
pop
mov
mov
test
sub
adcl
fcoml
adc
test
sub
add
cli
cmp
and
sbbb
xchg
mov
cmc
test
lret
arpl
ret
lahf
nop
push
mov
shll
sub
rorb
or
xchg
pop
inc
jmp
imul
cwtl
mov
ret
test
cld
mov
scas
mov
inc
xchg
and
inc
bound
push
test
sahf
call
iret
sub
xor
jle
psrad
outsl
cli
pop
in
ret
mov
stos
add
stos
dec
xlat
jmp
js
mov
mov
sub
cmpsb
shrl
into
inc
loopne
aas
das
mov
jns
subl
jle
daa
out
push
mov
andb
mov
cmpsb
and
stc
inc
push
jp
xchg
subb
mov
mov
mov
push
adc
add
sbb
lret
add
int3
aad
jmp
divb
inc
push
inc
mov
and
pop
hlt
jg
insl
jno
mov
rcl
mov
pop
adc
mov
cltd
pop
call
jle
sbb
sbb
out
xchg
xor
iret
mov
or
sbbl
jge
xchg
push
negb
xor
icebp
mov
scas
frstor
xchg
nop
test
adc
jg
jns
stos
sbb
push
adc
xorl
sbb
mov
xchg
push
sbb
sar
push
mov
ud2
in
shrb
pop
aam
rclb
out
pop
mov
or
ljmp
mov
xchg
mov
fcoml
sbb
mov
pop
les
loopne
pop
xchg
loopne
lods
dec
cmpsb
pop
arpl
cltd
je
jb
pusha
mov
fwait
enter
cmc
add
std
je
sub
mov
xchg
mov
inc
lea
mov
leave
cmp
xor
int
mov
xor
testl
fidivl
push
scas
cmp
nop
and
jmp
icebp
or
out
imul
divl
adc
jg
fistl
dec
add
push
pushl
hlt
push
mov
xchg
pop
jmp
xchg
mov
xor
xchg
dec
dec
bound
pop
pusha
aam
cmp
les
mov
int
fdivl
sub
cmp
push
sti
sti
cmpsl
mov
mov
and
inc
xchg
mov
lahf
cmp
int3
xchg
lret
outsb
pop
jnp
mov
xorb
or
arpl
xchg
sbb
push
ja
lahf
bound
daa
mov
imul
out
andb
aas
popa
or
loope
push
and
or
and
into
jl
push
movsb
inc
add
in
hlt
adc
popf
inc
lock
fisttpl
mov
scas
insl
test
pop
arpl
fcoml
cmpsl
inc
jecxz
pop
shrl
in
in
fisttpll
lock
roll
outsb
inc
jbe
add
scas
push
mov
aam
inc
mov
insb
scas
movsl
add
jns
dec
adc
xchg
imul
pop
or
adc
stos
push
loope
repz
push
push
xchg
mov
bound
rol
hlt
mov
fcom
aad
xchg
mov
sub
stos
inc
repnz
stos
imul
cmp
ret
pop
pusha
enter
and
repz
aas
cmp
mov
imull
shr
mov
mov
loopne
shll
cmp
xor
xor
hlt
xor
and
pop
dec
fidivrl
dec
cmpsl
xor
sub
aaa
xchg
pop
iret
addr16
jns
fmuls
mov
fmuls
push
faddl
jnp
fucom
or
xlat
das
cld
mov
adc
jmp
jns
inc
ss
mulb
pextrw
and
in
ret
movsb
mov
sbb
sti
and
cmpsl
int
pop
mov
jae
inc
cli
adc
fildll
inc
fists
je
cmpsl
mov
mov
mov
push
push
or
add
xchg
cmp
hlt
shll
mov
dec
pop
fwait
xor
mov
es
add
es
inc
sbb
fmuls
dec
repz
xorb
dec
mov
in
outsl
cmpsl
ficomps
cmp
dec
aam
or
sbb
xchg
cwtl
pop
les
mov
enter
sbb
dec
xchg
sbb
mov
rclb
or
stos
ljmp
int3
les
inc
popa
or
mov
out
scas
jo
and
iret
inc
inc
fwait
das
push
in
outsl
dec
dec
mov
cld
out
jb
xchg
cmp
lods
jp
jg
pop
mov
ret
mov
cwtl
dec
sub
xchg
mov
sbb
cmp
xchg
mov
aad
test
dec
insl
lods
je
fisubrs
daa
in
mov
shrb
mov
xor
lret
inc
lcall
and
jp
addr16
aad
ret
cmp
mov
fcmovnu
adc
add
cmp
or
mov
xchg
inc
and
mov
clc
mov
test
call
ret
jne
shlb
mul
pop
mov
mov
iret
add
push
scas
xor
sbb
aas
jnp
cwtl
divb
jg
push
ds
out
das
dec
pop
adc
sbb
sbb
jnp
xchg
xchg
mov
mov
jae
je
and
dec
and
xchg
call
inc
and
inc
push
pop
inc
push
ficoml
jge
sbb
mov
mov
inc
ja
mov
pop
inc
test
fs
jno
and
aad
fs
lods
repz
decl
mov
lock
and
cltd
imul
mov
push
clc
mov
add
imul
incl
sbb
pop
out
inc
mov
mov
ret
pop
sub
sbb
out
mov
cwtl
cld
xlat
xor
jg
cmp
cli
and
stos
mov
ficoms
inc
fists
lret
pushf
mul
out
inc
lods
clc
roll
sar
fs
insb
lods
or
sub
je
mov
adc
sub
jb
push
mov
testb
imul
inc
push
mov
jecxz
dec
pop
or
or
and
mov
mov
lods
cmp
xchg
xchg
xor
sbb
and
push
cmp
add
imul
inc
shlb
mov
pop
insb
sub
ds
rcrb
xchg
mov
scas
xorb
mov
out
repz
inc
in
sbb
mov
push
dec
mov
pop
leave
aam
inc
pop
or
or
mov
icebp
mov
jnp
push
xor
jno
mov
fldt
xchg
addr16
imul
cmp
hlt
stos
push
add
xchg
add
sbb
mov
clc
popa
push
sbb
stos
andb
mov
xchg
mov
mov
xchg
inc
lcall
pop
les
andl
xor
jno
jp
addb
lcall
sub
fwait
lret
mov
les
dec
dec
add
xchg
jns
out
mov
jnp
push
bound
in
insl
fsub
mov
in
orl
fildl
imul
clc
cmp
sub
jmp
push
or
ret
sbb
aad
ficoms
imul
fwait
mov
xchg
ss
int
mov
mov
cmp
addr16
shr
adc
inc
setp
or
arpl
inc
or
in
movsb
xchg
test
sub
fadds
mov
cs
mov
pop
cmp
rorl
sbb
jge
pop
push
dec
add
ret
mov
in
jne
shlb
xor
mov
mov
clc
aas
insl
pop
popa
iret
pop
ja
mov
je
enter
jge
mov
add
hlt
mov
adc
jp
mov
jbe
fcoms
push
imul
shlb
inc
cld
jne
int
in
div
xchg
lock
jne
out
and
pop
xor
mov
jp
aam
lea
xchg
sti
xor
rcrb
pop
jge
mov
mul
adc
in
cmp
sbb
mov
idiv
stc
or
pop
pop
les
xchg
inc
push
and
jo
lock
pushf
sbb
push
sbb
movsl
sbb
xchg
pop
adc
outsl
ret
dec
and
jb
fs
add
sub
stc
js
mov
xchg
cmp
pop
jne
dec
iret
cmp
aas
ja
into
jb
push
jne
enter
cmp
adc
imulb
fsubl
pop
mov
test
sbb
inc
pop
xchg
cld
mov
loope
test
sbb
gs
imul
rcll
fisubs
adc
mov
pushf
dec
testl
cmp
pushaw
popf
scas
lahf
xchg
out
popa
inc
mov
lret
bnd
or
cmp
jae
xchg
notl
inc
or
cltd
sub
xor
lahf
dec
adc
pusha
clc
dec
cs
aaa
shlb
ret
sarl
hlt
lock
and
jo
addb
add
pop
and
push
repz
sbb
cmp
mov
adc
rclb
jo
insb
mov
movsb
stc
fstpl
in
inc
inc
cli
push
mov
jg
inc
mov
push
and
je
lds
fsubrl
dec
in
cmp
jne
sub
mov
xchg
mov
shr
aad
xor
enter
add
popa
lods
or
lahf
adc
or
pop
into
adc
nop
es
and
sub
add
scas
add
lea
dec
pusha
add
out
adc
push
jge
push
inc
pop
inc
pop
fs
jl
test
outsl
mov
cli
mov
fidivrl
xchg
sbb
fcomi
fisubrs
cmp
sahf
sbb
pop
mov
dec
mov
mov
pop
jns
xchg
jg
int3
sbb
pop
mov
jp
sub
popa
push
roll
ss
cmp
lret
cmc
aam
fsts
and
cld
pop
rcrb
sub
les
cmp
clc
mov
push
aam
std
xchg
mov
dec
lcall
imul
or
mov
ss
in
out
push
adc
in
adc
arpl
out
pusha
ljmp
lcall
jns
push
xor
pop
mov
or
fwait
dec
add
enter
mov
inc
sbb
in
xor
cmpsl
push
jg
into
adc
sti
fimull
test
outsl
mov
sub
jns
pop
rcr
inc
mov
pop
imul
call
jmp
xchg
shll
call
stos
cmc
push
cmp
jmp
cmp
adc
and
cmc
shlb
jb
jnp
and
pop
pop
cld
dec
in
mov
xor
xor
or
loop
xor
negb
jg
and
data16
repz
add
or
sahf
sub
adcb
adc
or
test
adc
in
fsubl
scas
inc
push
cmc
cmp
xchg
sbb
leave
jb
push
sub
test
frstor
into
outsl
lock
std
and
adc
hlt
cmc
inc
mov
inc
loope
push
jb
cmp
je
int
pop
cmpsl
fildl
or
lret
dec
sbb
std
or
movsl
jno
push
icebp
xchg
jae
add
cltd
and
imul
mov
inc
push
push
icebp
cmpsb
je
fldt
mov
xor
repz
std
mov
sbbl
xlat
out
out
cmpsb
and
or
jbe
push
hlt
or
mov
lcall
sbb
or
fdivrl
jno
fisubrs
sbb
xchg
mov
add
mov
imul
sbb
sbb
push
insl
dec
fdivrl
cmp
cltd
lock
in
sbb
push
shlb
adc
jo
dec
xchg
inc
add
cs
cwtl
rolb
sub
lret
jbe
jecxz
push
aas
cmp
lret
adc
xor
ret
cmpsb
and
aaa
fcom
dec
clc
in
out
das
dec
or
and
sub
add
in
cmp
mov
imul
inc
pop
cmp
mov
adc
or
jae
sub
iret
sbb
xor
pusha
mov
fadd
scas
push
inc
dec
inc
popf
js
and
dec
xchg
and
rorb
and
loope
inc
add
lcall
repz
rcr
adc
test
cs
mov
ror
push
rcrb
in
fstp
subb
popa
jecxz
jns
test
sbb
adc
and
ffree
out
fstpl
xor
js
sarb
jl
inc
icebp
dec
push
inc
scas
nop
jge
call
popf
cmp
and
dec
mov
outsb
inc
push
jmp
jge
imul
imul
scas
pop
add
mov
aam
xchg
add
dec
push
aaa
das
dec
cwtl
sub
mov
imul
jo
push
xor
leave
lret
inc
cli
or
cmpsl
add
cmp
inc
outsb
jmp
icebp
jmp
cmpsl
or
outsb
cmp
sbb
addr16
outsb
sub
push
mov
xchg
dec
lahf
push
mov
pop
outsl
aad
dec
xchg
orl
dec
fdivs
out
or
gs
mov
pop
out
mov
orb
leave
rcr
dec
insb
pop
arpl
cmp
int
jp
cmp
scas
jns
xchg
push
sbb
sbb
mov
out
fs
pop
loopne
mov
cmp
int3
xor
outsb
test
stos
and
add
lods
or
pushf
sub
mov
cs
adc
pop
push
add
mov
push
loopne
cmp
xchg
insb
cwtl
ret
or
pop
or
pop
leave
call
adc
xchg
mov
jg
cmp
jnp
aam
ja
out
add
je
cmc
lret
inc
mov
fists
repnz
xchg
test
mov
popa
sbb
scas
movsb
cltd
movsl
ss
call
shrl
fs
or
insl
xchg
popf
fcmovnbe
dec
adc
aaa
std
cmpsl
jmp
cmp
bound
adc
xlat
xor
mov
add
mov
aad
mov
jne
fsubl
sbb
int3
rorl
insb
and
repz
icebp
cli
jbe
lahf
mov
cli
lock
es
popf
jmp
sahf
xor
add
lods
mov
jne
mov
dec
hlt
imul
cmp
cmc
xchg
jae
sbb
sub
push
mov
jno
cs
pop
sbb
dec
out
and
je
les
sarl
add
fistps
sbb
pop
subb
sahf
adc
adc
mov
imul
xor
lods
dec
mov
ficomps
inc
dec
xchg
rcr
fadds
pop
test
add
rorl
xchg
lea
mov
shrl
push
jo
sub
or
aad
addr16
aad
popf
dec
cli
mov
add
pop
movsl
jp
or
xchg
cltd
imul
sub
xchg
jp
ss
and
or
ljmp
decb
in
dec
push
or
mov
sub
hlt
add
cmp
adcl
pop
xchg
mov
push
mov
mov
fs
adc
jae
and
notb
jl
push
ja
inc
into
add
cmpl
adc
pop
pop
lea
scas
sbb
fldl
mov
inc
sahf
arpl
push
leave
mov
dec
push
xchg
dec
ljmp
and
lds
jmp
shrb
mov
jg
in
lcall
xchg
pop
stos
repnz
inc
push
in
test
sub
dec
and
push
dec
add
pop
adc
pop
push
scas
inc
xor
adc
cmp
or
repnz
mov
xchg
xchg
popa
or
imulb
jns
pop
cmpsb
leave
arpl
outsl
cmp
rorb
sub
in
stos
jge
or
repz
mov
adcb
mov
mov
repz
insb
ret
fildll
fimuls
xchg
jne
dec
push
pop
or
push
mov
mov
loopne
ficoms
xlat
out
into
notb
xchg
sbb
inc
sub
or
push
mov
movl
push
mov
loope
and
jp
and
popa
push
mov
xchg
push
or
xor
inc
nop
mov
mov
rol
in
xchg
push
xchg
jae
add
fwait
cmpsb
jae
or
xorb
cmpsl
addr16
out
outsb
cmc
lods
jl
adc
xchg
out
mov
inc
int3
sub
lods
push
jg
scas
sbb
dec
xchg
xorb
or
mov
fmull
cmc
pop
testb
pop
pop
push
mov
xchg
inc
rorb
iret
ficoml
xlat
sub
int
pushf
mov
mov
add
adc
inc
add
sbb
idivb
sbb
out
insb
pop
and
xchg
or
cmp
das
loope
sti
and
arpl
xchg
and
popf
es
xchg
out
xchg
sbb
jl
pop
or
scas
js
pop
shlb
gs
pop
inc
inc
jae
fsubl
xor
xchg
js
jns
jb
jmp
lret
push
pop
ds
call
adc
arpl
and
sub
xor
adc
adc
hlt
mov
xor
je
hlt
stc
pop
inc
add
pop
xor
push
sub
movsl
lds
cmpsl
mov
cmp
pushf
mulb
inc
iret
mov
stos
sti
jno
or
divl
or
cmpsb
xor
mov
test
mov
xor
jl
ds
cld
pop
lahf
mov
es
ljmp
lods
pop
dec
ret
push
xor
push
insb
stos
daa
arpl
add
cwtl
add
out
ja
in
adc
and
adc
rcll
addb
push
and
push
mov
cmp
mov
xor
mov
push
xchg
push
insb
cmpsl
out
jae
ja
jge
insb
push
cmp
cld
jnp
aaa
popa
aam
cmp
inc
iret
inc
stos
mov
data16
and
cli
jo
divl
add
in
add
xor
leave
out
std
out
and
xor
xor
data16
cmp
dec
jl
jmp
xor
jmp
xchg
aas
xchg
jecxz
mov
jg
fwait
dec
and
popa
push
repz
lcall
mov
stc
insb
xchg
sub
rcrl
ret
in
mov
into
and
out
ror
shl
test
imul
cmpsb
addr16
cltd
stc
ss
testb
and
add
jmp
ja
lret
and
imul
push
push
movsl
mov
lds
lods
lret
mov
adc
scas
jns
sti
leave
jbe
xchg
push
jnp
sub
adc
pop
add
mov
mov
adc
sbb
negb
jb
ja
dec
repz
andl
push
data16
rol
xor
mov
sub
sub
fisubl
mov
mov
loop
pop
cmpsb
cmp
jns
dec
mov
jmp
mov
stos
in
push
mov
gs
call
test
pop
dec
jo
push
adc
enter
jp
fwait
movb
xchg
mov
mov
cmp
xchg
mov
xchg
add
sbb
shr
dec
cmp
out
add
xor
in
jg
mov
and
inc
inc
in
scas
xor
push
dec
pop
out
adc
push
mov
xchg
add
fisubl
xchg
pop
mov
out
and
adc
jno
add
mov
mov
scas
mov
push
mov
mov
xlat
push
add
lods
out
push
push
sahf
into
call
sub
mov
jbe
sub
mov
scas
ret
cltd
xchg
aaa
inc
xor
fs
hlt
clc
pop
mov
cmp
sti
pop
inc
icebp
arpl
fisubl
adc
int3
dec
in
std
fnstsw
mov
push
icebp
or
jg
popa
rorl
xchg
mov
xchg
mov
push
jg
int
add
and
ret
fidivs
test
loop
add
push
or
out
add
jo
daa
sti
mov
iret
xor
mov
or
pop
fmul
adc
push
mov
and
popf
lds
imul
sti
inc
mov
aas
mov
cli
jge
stc
cmp
shlb
adc
stos
or
and
scas
mov
into
test
cmpb
mov
lahf
mov
push
jp
and
repnz
in
bound
cmp
pop
xchg
jp
cmc
and
repz
jp
xchg
outsl
out
dec
daa
test
ljmp
jb
pop
or
shrb
sbb
nop
imul
mov
sbb
or
ss
add
aad
cmp
sub
sbb
and
das
mov
aad
mov
outsb
or
cmpb
mov
pop
jo
and
xor
mov
xor
inc
dec
pop
in
lahf
mov
and
in
fdivs
cmpsl
rcrl
dec
mov
mov
lahf
mov
out
jnp
cmc
add
fdivr
lret
push
xchg
enter
jmp
or
nop
shl
je
pop
loope
push
fldl
add
xor
ret
int3
lret
sbb
sbb
int
dec
xchg
mov
aad
pop
daa
shlb
pop
movsb
out
mov
push
push
mov
xor
out
rcr
and
mov
lods
stc
decb
or
mov
aaa
int3
inc
daa
in
rolb
arpl
xor
jnp
jecxz
mov
outsl
repnz
cmp
int
push
lods
fisttps
xchg
xor
mov
push
mov
sbb
jnp
adc
adc
sti
pop
push
aas
out
outsl
jg
mov
outsb
aad
sbb
jge
ret
pusha
xchg
loope
add
lods
mov
pop
mov
hlt
mov
fwait
dec
jae
out
pop
outsb
in
xchg
inc
lcall
test
jns
pop
cmp
movsb
pop
jle
fmull
pop
xor
shll
dec
push
dec
mov
cmpsb
cmpsb
ss
cltd
sbb
mov
jecxz,pt
lahf
out
push
pop
test
xlat
and
stc
mov
jno
sahf
js
jnp
subl
fmulp
xchg
repz
cmp
dec
loop
pop
dec
arpl
or
jmp
xlat
dec
popl
xor
or
jb
fdivrs
out
xor
jno
sub
jo
jl
inc
andl
sub
insl
mov
pusha
xchg
sti
ds
test
xor
inc
imul
stc
bound
aam
bound
xchg
sub
int
sbb
lock
lret
pop
inc
mov
adc
out
pop
cmp
xchg
stos
mov
cmpsb
imul
pop
aam
push
push
subl
jl
push
loopne
fs
test
mov
inc
mov
adc
into
pop
and
arpl
aam
push
xchg
scas
push
cmp
sub
xchg
cs
add
repz
out
adc
or
and
lds
arpl
out
jmp
js
outsb
pop
and
jmp
mov
iret
sbb
shr
loop
push
add
push
imul
lret
sti
xorl
and
fmull
add
cmc
sbb
inc
jae
xchg
in
data16
jnp
jb
xchg
mov
sbb
aaa
xchg
shlb
push
pop
mov
aad
imul
or
cmovae
xor
es
ret
add
push
xchg
dec
and
pop
cmpsb
js
insb
dec
mov
clc
inc
cmp
iret
in
in
lcall
sub
dec
popa
xor
sbb
bound
add
mov
mov
movsl
xor
or
pop
repnz
xchg
cs
jb
in
sahf
cwtl
cmp
repz
inc
jle
aam
into
daa
mov
mov
pushf
xchg
cmpsb
mov
xchg
jle
jl
cltd
imul
pop
dec
in
mov
sub
jbe
mov
cmp
bound
dec
adc
and
mov
sub
push
in
sti
adc
dec
push
jg
pop
das
add
add
adc
int3
mov
jmp
repz
push
das
push
repnz
sti
jno
fwait
mov
dec
out
and
mov
addl
cmpsb
outsl
lret
outsb
sbb
jmp
or
stos
testb
xor
dec
sbb
jo
xor
in
ds
jg
adc
je
jo
mov
pop
sub
cmp
mov
jo
es
aas
mov
arpl
int
jp
and
jb
orb
jno
int
push
popa
cmp
and
lret
dec
xchg
sub
lea
call
mov
pusha
ljmp
mov
mov
mov
jo
or
push
jb
push
mov
jbe
dec
ret
sub
add
test
inc
push
sub
xor
jae
ret
pop
in
out
andl
push
ja
and
xor
xchg
pushf
push
clc
or
mov
mov
stc
mov
dec
sbb
dec
es
and
mov
jmp
and
enter
mov
out
dec
adc
cmpsb
add
fld
icebp
nop
jae
jg
les
repz
sbbl
mov
inc
jne
add
dec
inc
in
data16
out
mov
fimuls
repz
sbb
mov
or
xor
pop
outsl
dec
jg
cmp
sbb
outsl
mov
mov
cmpsl
loopne
clc
mov
in
mov
xchg
inc
push
mov
mov
mov
jl
mov
inc
mov
cltd
mov
lea
stos
lods
out
sbb
stos
inc
stc
sub
int
xchg
fnstcw
or
pop
aad
jg
cli
divb
subb
je
xchg
enter
fcomi
jno
mov
jle
lods
lahf
lahf
xchg
inc
movsb
sahf
pusha
xchg
cs
or
jp
mov
mov
sbb
ret
mov
xor
push
add
in
mov
jo
into
in
xor
outsl
dec
mov
mov
mov
jl
xchg
aaa
add
stos
out
je
xchg
into
xchg
sahf
push
pop
xchg
into
lahf
mov
lret
or
xor
push
stos
mov
movsl
pop
iret
out
xor
mov
push
sahf
lods
lock
stos
mov
adc
sbb
sbb
add
inc
aam
lret
hlt
icebp
int3
sbb
mov
sub
psubq
imul
sbb
enter
cmpsb
sbb
fidivrs
out
inc
ds
adc
out
mov
rorl
inc
inc
idivl
sarb
cmp
mov
xchg
pushl
sbb
ss
or
cmp
inc
and
jo
xchg
inc
out
xor
sbb
cmpsl
xchg
mov
insl
adc
and
inc
push
ret
out
adc
jae
dec
xchg
mov
mov
dec
jp
stos
jecxz
jb
sbb
fimuls
test
sbb
in
loop
or
aas
fisttps
xchg
sbb
xchg
stos
xor
sub
das
mov
into
inc
jo
and
mov
inc
call
xor
and
jns
stc
jmp
sub
pop
add
or
and
xorb
lret
les
or
hlt
js
ror
push
aam
or
out
bound
sarb
shl
push
lods
pop
and
int
inc
rclb
cmpsl
jae
popa
stc
cmp
popl
fcompl
shll
pop
xor
in
fnstenv
cmp
aas
sbb
je
ss
inc
inc
adc
mov
movsb
sbb
dec
popa
xchg
sbb
dec
and
lods
ret
or
sub
popf
fistps
jne
roll
and
notl
test
mov
in
push
out
mul
sbb
jbe
aam
icebp
xor
or
js
cmp
in
pop
push
ljmp
push
in
mov
mov
pop
adc
jecxz
insb
cmp
adc
loope
and
xchg
outsb
sub
or
int3
pop
or
test
adc
outsb
sbb
mov
dec
shll
jns
cltd
lcall
sub
cli
jmp
out
imul
fidivrs
push
adc
loopne
cmpsl
shl
addb
and
lea
cmp
js
adc
and
xor
notl
nop
sub
pusha
xor
push
cmp
mov
pop
lock
arpl
sbb
jns
push
int
xchg
mov
mov
xchg
xchg
mov
push
jbe
popf
adc
xor
dec
sahf
cmp
das
sbb
in
les
clc
repnz
xor
lock
sbb
xor
adc
inc
rorw
cmpsl
imul
push
sbb
lds
sub
inc
mov
sub
repz
daa
sti
test
xlat
aam
hlt
sbb
adc
xchg
ret
decb
fsub
sub
cmp
mov
sub
in
xor
stos
and
cmpl
decl
xorb
mov
leave
and
int
xor
movd
xor
cli
and
push
repnz
sbb
jp
mov
sub
fsubr
xchg
jnp
and
add
xorl
pop
pop
out
sahf
insb
loopne
fsubl
fs
movsl
jbe
mov
sbb
outsl
int3
and
clc
pushf
cmc
cmpsl
nop
xchg
idivl
mov
fbld
cmc
and
int
lods
cmp
mov
into
xchg
dec
in
or
adc
popl
jmp
add
jbe
pop
fistl
xchg
movb
daa
jbe
add
push
cwtl
sub
cmc
ret
and
int
cmp
out
jbe
movsb
in
mov
xchg
arpl
adc
fcmovne
mov
push
mov
and
insl
mov
sbb
mov
enter
mov
fwait
mov
mov
data16
sbb
xor
lahf
sahf
repnz
fsubp
xchg
and
std
lds
stos
dec
arpl
jae
frstor
inc
scas
cltd
ds
nop
jmp
enter
or
push
pop
ds
rcrb
xchg
imul
stos
inc
rorl
jge
inc
orl
xor
insb
je
inc
jb
sti
inc
std
jle
push
rcl
mov
and
xor
aaa
iret
sub
lret
jne
pop
cmp
mov
xchg
dec
push
icebp
jg
sub
sub
stc
xor
jo
push
pop
push
movsl
sub
nop
mov
sub
out
cmp
and
js
adc
inc
lds
je
push
xor
sarb
push
mov
mov
fildll
xor
cli
mov
cld
push
mov
arpl
daa
shrl
cmc
bound
sbb
fwait
mov
push
dec
leave
pop
pop
fsubl
mov
mov
imul
and
or
xor
push
inc
enter
add
jno
imul
or
jns
shrl
loop
push
test
push
xchg
lret
js
mov
cltd
add
shll
or
ficomps
ds
loope
fisubrl
inc
xchg
out
insl
and
lock
sbb
add
hlt
add
dec
inc
lea
push
cs
mov
or
push
jne
sub
lret
lcall
shl
lret
movsb
aaa
add
and
in
push
mov
adc
das
mov
test
test
out
cld
sub
imul
dec
js
jge
mov
push
mov
or
inc
jo
mov
pop
loop
shrl
es
loope
jbe
cltd
add
scas
mov
mov
inc
push
dec
and
ljmp
or
dec
inc
call
sahf
mov
xor
in
negb
push
pop
add
shlb
xor
and
in
out
rorb
add
test
enter
add
xor
xor
inc
jle
add
sti
rclb
cmp
addr16
push
xor
sbb
mov
outsb
fsub
adc
lods
cmc
add
xor
sarb
test
mov
jle
int3
xchg
into
xor
and
aad
xor
std
cmp
mov
bswap
mov
sbb
xchg
jb
mov
push
int3
add
mov
or
and
push
inc
outsl
xor
in
cwtl
mov
es
int
mov
pop
in
dec
test
lea
mov
pop
mov
adc
push
mov
std
fstl
fnstsw
mov
xor
pop
ror
hlt
enter
adc
xor
faddl
lods
mov
mov
mov
clc
test
ss
push
loop
sahf
aaa
popa
pop
aaa
fs
out
stos
pop
jbe
xchg
aad
cli
xor
dec
inc
out
mov
xor
lock
pop
pop
out
lock
pop
jmp
jl
repnz
xor
and
push
in
in
add
mov
xchg
ret
xchg
adc
scas
popa
popa
xchg
rcll
xchg
out
ljmp
int
xchg
mov
call
movsl
adc
mov
fwait
mov
push
jmp
cmp
sti
dec
mov
jl
mov
lcall
fdivr
fdivs
add
mov
enter
xchg
movsb
mov
jb
and
xchg
ror
fists
clc
push
bound
push
add
lock
int
xor
add
push
lock
jmp
mov
push
ror
or
daa
in
imul
mov
gs
loope
insl
jmp
xchg
push
push
lcall
mov
pop
jnp
adc
dec
dec
xlat
pop
sbb
pop
adc
cltd
dec
mov
sub
dec
pop
movsb
cmc
mov
insb
dec
fistpll
cmpsl
addb
mov
lods
xchg
mov
nop
xchg
xor
mov
rclb
out
fwait
incl
sbbl
ss
rcrl
cld
sub
mov
int
sbb
cltd
or
out
adc
gs
pop
test
mov
or
aad
dec
mov
xor
jae
repnz
push
data16
mov
or
mov
addr16
pop
outsl
mov
mov
sarl
addr16
mov
sub
fldcw
cmc
adc
mov
xor
inc
mov
es
mov
fidivrs
adc
fstl
mov
repz
fwait
pop
and
push
sub
add
ljmp
fists
fisubl
popa
or
or
push
int3
test
inc
std
xor
fisttpll
dec
leave
clc
jmp
pushf
sub
aaa
daa
jns
loop
sahf
push
xorl
mov
subl
adc
lock
xchg
xchg
cmp
mov
fdivrl
or
stc
adc
jae
cli
and
add
cmpsl
sbb
les
jmp
mov
mov
jbe
fsubr
pop
js
cmpsl
push
or
call
nop
jae
xchg
popa
inc
xor
jl
mov
pop
xchg
in
ljmp
push
xchg
or
outsb
out
and
adc
shlb
dec
sub
sub
mov
xor
ljmp
jge
mov
push
fs
in
popa
ja
js
aaa
sbb
cmpsb
popa
loop
lahf
clc
std
in
into
cli
fucomip
sub
sbb
mov
mov
arpl
shlb
movsb
push
imul
dec
push
jnp
ret
xchg
push
jl
pop
sbb
addr16
xor
sbb
push
mov
mov
stos
push
cmp
cld
cmp
pop
sbbb
sti
dec
fcmovu
aaa
out
nop
insb
mov
lcall
sbb
enter
mov
iret
rclb
mov
out
addb
div
cmp
jo
pop
shlb
mov
dec
lcall
leave
adc
test
bound
dec
or
mov
push
enter
int
ficoms
fmuls
loope
push
out
push
sbb
add
lret
jb
mov
sbb
dec
xchg
push
push
lret
xor
in
addr16
sbb
test
mov
pop
sub
pop
xor
mov
nop
jmp
aam
and
notb
andb
repnz
pop
dec
js
or
popf
test
pop
fwait
int3
imul
inc
jmp
fcoml
jle
popf
into
pushf
aaa
mov
sbb
lahf
add
dec
mov
lret
add
int3
clc
divl
mov
out
inc
mov
sub
test
pop
or
push
cmp
loope
loope
push
sbb
sbbb
imul
sub
pop
dec
data16
sbb
ret
sahf
xor
or
insb
mov
cmp
mov
push
out
cmp
leave
lcall
pop
pop
or
push
and
icebp
pop
push
push
jge
adc
xchg
jo
idiv
pop
sub
stc
insb
test
or
add
mov
push
std
jle
mov
mov
or
mov
pop
mov
and
shrb
jg
inc
mov
mov
sbb
imul
sbb
xlat
cmpsb
xchg
jns
aas
sbb
icebp
andl
cmp
pop
loop
out
das
sbb
sub
leave
mov
cwtl
or
into
stos
sub
cwtl
xchg
out
int
out
adc
mov
or
popf
jne
add
jecxz
int3
das
push
xlat
dec
fildl
pop
aaa
dec
mov
daa
sbb
aad
mov
ja
push
xchg
mov
push
xor
dec
mov
test
lds
aaa
outsb
shll
stos
and
rcll
mov
pushf
mov
inc
ret
mov
dec
leave
inc
lds
iret
xchg
insb
test
out
call
ret
sti
loop
xor
dec
xchg
mov
jmp
repz
int
ljmp
aam
pop
mov
mov
dec
jns
mov
or
cli
sahf
mov
repz
pushf
lcall
pushf
xchg
xchg
ds
cs
sbbb
test
out
xor
mov
sahf
aam
inc
std
pop
pop
dec
jb
inc
push
push
mov
push
dec
lock
push
fldl
ret
scas
insb
xchg
movsb
jbe
das
adc
inc
sahf
mov
xchg
mov
sub
jmp
dec
outsb
lahf
sub
nop
sub
addr16
repnz
leave
mov
inc
sbb
imul
xor
or
out
and
pusha
ljmp
rol
xchg
jge
outsb
incl
out
xor
pop
jno
mov
mov
test
cli
jne
pushf
scas
gs
out
jne
int
and
cli
xchg
adc
bound
fucom
stc
call
sub
push
dec
lods
pop
jge
push
data16
mov
mulb
jmp
xchg
test
sbbb
and
jbe
int
and
or
leave
sbb
aad
imulb
stos
scas
xchg
or
nop
punpckldq
and
aad
jb
xor
xchg
cmc
push
jae
shrl
jnp
daa
pop
jg
repnz
inc
and
mov
or
cmp
hlt
mov
je
icebp
icebp
mov
sub
mov
sub
fwait
mov
mov
pop
rcrb
out
iret
adc
adc
sbb
lcall
rcrb
xlat
and
cmp
rol
xchg
jnp
push
pop
sbb
dec
push
pop
inc
pop
adc
jb
loop
sbb
pop
insl
dec
jne
push
adc
or
or
sbb
adcb
inc
fildll
movsl
jno
pop
aam
xor
dec
fwait
popa
cmp
adc
or
adc
pop
mov
aas
xchg
fidivs
inc
jp
mov
imul
out
shl
pop
pop
xchg
and
pextrw
sub
xor
ret
cwtl
cwtl
add
fstps
mov
int3
lds
add
jle
imulb
in
movsb
or
jl
fxch
in
jmp
ret
sarl
daa
push
xor
cmc
sub
insl
jns
scas
pop
inc
arpl
stos
mov
jne
dec
mov
sti
xor
lcall
jne
add
mov
push
or
sahf
int
and
stos
adc
shrl
add
xchg
test
cld
mov
and
das
sub
adc
nop
pop
cmp
std
sub
cmpb
cmc
insb
jno
xchg
push
iret
cmp
fbld
clc
push
adc
pusha
enter
sub
dec
adc
hlt
push
cmc
add
cmpl
test
sbb
les
pop
aaa
les
mov
jo
xor
fnstsw
jecxz
xchg
inc
mov
or
push
mov
fmuls
inc
sub
nop
jmp
icebp
bound
add
sub
adc
pop
rol
mov
lds
cli
cs
mov
jle
mov
bound
pop
repnz
sahf
fiaddl
out
ret
lds
and
stos
ret
inc
xchg
mov
jae
pop
mov
cmc
loope
mov
setb
mov
inc
mov
mov
add
in
cmp
adcb
cmpsl
out
fdecstp
int3
in
cwtl
shrl
sbb
das
and
push
and
dec
sub
outsl
mov
sbb
test
push
jge
inc
mov
xor
jle
or
fdivrl
ret
test
out
sbb
xchg
jp
pop
jns
out
ret
lcall
push
add
nop
push
inc
add
and
sbb
mov
cli
lret
lods
movsl
adc
testl
mov
mov
jge
nop
mov
adc
dec
stos
int
addr16
sbb
outsb
movsl
jae
aad
xor
fdivrs
xchg
push
pop
repz
pop
mov
jbe
push
add
fcomps
mov
add
int
mov
or
xchg
adc
cwtl
jp
fmull
sub
rcrb
lds
mov
push
sub
jb
dec
repnz
ret
mov
pop
out
mov
pop
movsb
dec
testl
push
fdecstp
rolb
popf
mov
jp
add
sbb
insb
pop
out
inc
dec
repnz
shrb
sbb
push
adc
jo
add
into
dec
in
iret
pop
xchg
sbb
mov
lods
scas
jbe
es
dec
pop
popf
insl
mov
dec
mov
lods
adcl
js
xor
insl
rorl
cmpsb
add
adc
fisubrl
add
pop
test
xchg
fimuls
jge
push
push
jb
int
lock
lds
leave
jnp
dec
cmp
aad
cmp
jecxz
js
lret
inc
enter
bound
mov
add
mov
mov
mov
out
push
les
pop
sub
ficompl
aaa
imul
mov
mov
test
iret
aam
daa
cmpsl
add
fmulp
adc
mov
mov
mov
sbb
jg
ret
mov
sub
sarl
cmpsl
pop
mov
inc
cmp
aad
insb
mov
sarb
adc
cmc
out
mov
fs
mov
je
cmpsb
jbe
cmp
mov
or
movsb
dec
push
jle
mov
pop
push
mov
repz
jo
dec
adcl
test
pusha
jb
or
in
xor
cmp
jle
dec
fsubs
dec
jnp
mov
aam
fisttpl
push
pandn
fcmovbe
cmp
lret
jnp
fstl
rcl
mov
xor
xlat
and
xchg
mov
jbe
jg,pn
inc
shl
and
xor
xor
jp
and
scas
rolb
mov
sub
or
and
jl
mov
mov
les
or
sbb
test
flds
mov
push
adc
mov
add
cmp
scas
inc
cmp
push
movsb
data16
push
pop
jecxz
repnz
add
or
fiaddl
leave
sbb
repz
subl
add
dec
adc
add
mov
imul
sbb
pop
mov
sub
aas
test
clc
dec
add
jg
mov
lods
fnstcw
int3
aam
scas
aaa
mov
hlt
sub
out
jno
or
outsb
rcll
dec
mov
mov
xchg
lcall
jmp
cmp
mov
jle
and
fmuls
mov
arpl
pusha
cltd
adc
aaa
jmp
mov
pop
inc
cld
dec
fldcw
xchg
inc
pop
jecxz
inc
orb
rorl
jp,pt
mov
add
lret
or
std
jbe
mov
rcll
adc
fiaddl
ss
push
pop
cltd
sub
and
outsl
movsl
enter
rorl
mov
fsubrs
sub
xor
loopne
lods
je
icebp
outsb
xchg
inc
push
or
sub
cmc
lods
stos
sub
xchg
nop
repnz
push
test
pop
loop
out
pushf
pop
jmp
inc
xor
jnp
repnz
stc
dec
jnp
stos
dec
test
insl
out
insl
gs
xor
adcl
cmp
inc
or
outsb
and
sbb
sbb
inc
or
pop
js
test
pusha
and
leave
sbb
aaa
xorl
into
mov
out
lea
cmp
lds
and
mov
mov
repz
xchg
shlb
cli
in
mov
dec
out
cli
push
sarb
test
mov
movsb
cmp
scas
inc
fldl
sub
push
and
and
or
add
dec
into
and
dec
dec
inc
cmpsl
scas
mov
mov
pop
adc
add
rcrb
jmp
pop
jp
mov
sbb
fadds
xor
fstpl
mov
ret
imul
mov
adc
cs
xor
fnstsw
loop
inc
clc
cmc
inc
movsl
leave
pop
imul
jl
andb
sub
repnz
sbb
nop
mov
jno
arpl
filds
fnsave
mov
inc
push
inc
dec
les
add
cmp
sbb
pop
cld
lods
bound
mov
into
mov
repnz
mov
dec
pop
mov
icebp
push
das
test
in
or
out
xor
jb
mov
shll
mov
jecxz
call
mov
push
out
push
test
jecxz
xchg
jecxz
imul
mov
outsb
mov
divl
xor
pop
fcoms
xchg
inc
sbb
mov
push
inc
addr16
test
adc
or
mov
ficompl
cmp
sbb
stc
lahf
adc
adc
jp
or
xchg
mov
push
enter
mov
mov
daa
fcmovb
jle
jne
mov
loop
jae
dec
stos
into
cld
jge
jl
push
sub
mov
pop
gs
xor
and
xchg
outsl
sbb
mov
insl
sub
jo
mov
sbb
clc
ja
clc
and
sub
adc
sub
cwtl
outsb
popf
in
xchg
sahf
stos
leave
xor
outsb
or
jns
mov
push
jmp
jns
pusha
ret
enter
ja
lahf
add
push
push
cltd
in
fdivl
xor
adc
mov
lahf
divl
xchg
xor
dec
add
mov
mov
inc
mov
scas
cli
mov
mov
loope
push
mov
inc
adc
ret
and
mov
mov
nop
mov
cwtl
aam
fnsetpm(287
es
mov
mov
mov
dec
loop
xor
lds
or
mov
es
loopne
add
cmpsb
xchg
mov
ss
dec
imul
lods
xchg
es
inc
call
inc
pop
adc
cmpsb
adc
add
fnstenv
sbb
push
mov
add
adc
mov
repnz
mov
enter
adc
jge
push
xacquire
jbe
pop
adc
daa
stos
inc
push
mov
icebp
sbb
aad
pop
cltd
mov
sarl
hlt
scas
mov
stc
inc
sbb
xchg
shll
add
rorl
sub
xor
ljmp
fnsave
jle
call
addr16
popl
xchg
loope
jne
ffree
data16
sti
ret
push
stos
dec
jnp
in
add
inc
or
sub
pop
in
add
jns
jae
pop
pop
adc
addl
je
stc
subb
arpl
mul
add
outsl
xchg
scas
xchg
hlt
fidivrl
sti
cmpb
lret
or
or
inc
mov
sbb
jp
fisubs
outsl
orb
shlb
mov
das
pushf
pop
inc
and
sbb
in
push
dec
rorl
rol
daa
pop
leave
aaa
imul
sarl
cmp
bnd
cmpsl
jmp
aad
push
jp
pop
lret
fdivrl
pop
add
roll
xor
notl
sub
mov
sub
test
arpl
aam
lods
adc
pop
or
loop
push
adc
cltd
testl
insl
fsubp
stos
sub
mov
faddl
aas
lret
jo
mov
push
std
sub
mov
jecxz
inc
or
lods
pop
sub
dec
jmp
dec
mov
mov
mov
cmpsb
dec
mov
je
je
mov
mov
mov
cmpsl
jl
cmp
sbb
aad
loopne
sarb
imul
or
jnp
push
inc
add
rolb
pop
sbb
pop
cmpsb
fisttpll
push
idiv
jb
or
pop
in
xchg
mov
outsb
frstor
dec
cmc
cli
arpl
pop
popf
push
in
pop
mov
push
jnp
push
mov
insb
aam
add
mov
sbb
les
mov
fimull
cmp
cmp
dec
mov
gs
mov
fs
push
sarb
sbbl
aaa
lahf
mov
std
push
jmp
mov
jp
fcmovnbe
push
mov
das
mov
pushf
cmp
scas
addl
xor
xchg
out
xor
cmc
pop
cltd
mov
push
mov
daa
fisubrl
xchg
dec
or
shll
je
push
mov
cmp
aam
dec
shrl
ja
lock
imul
or
jb
push
aam
je
imul
pop
mov
mov
xchg
mov
adc
dec
gs
out
fisubs
push
push
adc
xor
lcall
cmc
jo
push
stc
jmp
xor
ror
movsl
jns
stos
popa
jle
push
mov
adc
cmp
dec
mov
and
lds
data16
lods
jl
test
sbb
xchg
out
lods
xchg
popa
stos
clc
xor
orb
sub
filds
dec
pop
mov
fildll
mov
pop
call
lock
sbb
movsl
pop
cmp
pushf
cmp
cmp
shld
xor
fistps
xchg
data16
sub
insl
je
and
lods
sbb
mov
sub
push
sbb
mov
loopne
dec
test
insb
std
and
int
sub
sub
fcmovnb
push
inc
xor
lahf
add
les
inc
inc
out
aaa
jo,pt
sbb
xor
xor
mov
test
dec
sub
decl
mov
mov
pop
or
cmp
mov
and
or
sarl
sbb
test
movsb
stos
js
sbb
mov
cmpsb
ret
rol
out
pop
adcl
mov
pop
cmp
xchg
fdivl
iret
jae
dec
mov
jl
mov
pop
inc
add
or
ja
sbbb
xlat
dec
fcoms
shl
sub
mov
cs
je
xchg
inc
out
push
mov
or
pop
dec
repnz
test
out
or
in
adc
out
xor
scas
sahf
arpl
push
rcrl
aad
scas
mov
jl
mov
mov
mov
fisttps
or
loope
sbb
inc
cli
lods
mov
shrb
lea
bound
xchg
enter
stos
idiv
jl
lea
push
pushf
dec
mov
scas
mov
lock
ror
sbb
test
pop
or
inc
push
pop
mov
in
cmc
data16
xchg
test
fnstsw
and
xor
pusha
mov
aad
test
jecxz
or
mov
mov
lea
inc
jae
push
push
popaw
mov
sub
push
inc
mov
adc
imul
popa
sub
fisubrl
sti
popa
nop
mov
sub
into
lea
mov
stos
std
push
xchg
adc
jae
jle
lahf
adc
rcrl
test
scas
dec
and
mov
push
cmp
mov
mov
mov
cld
jp
xchg
lret
push
pop
lcall
es
test
inc
or
xor
dec
scas
jle
push
call
movl
cs
arpl
push
xor
dec
pop
xchg
pop
fldcw
or
cltd
daa
int3
pop
pop
out
fwait
aas
sbb
push
nop
sarl
into
jne
lods
push
adc
mov
clc
xchg
repnz
lahf
jl
int
scas
mov
adcl
ss
cmp
cmp
and
or
clc
jb
fldl
jg
dec
shl
xor
imul
adc
out
out
out
add
jae
fs
std
mull
cmp
fdivrs
insl
push
std
imul
xorl
cld
mov
jle
jl
in
adc
or
inc
mov
inc
adc
loop
xchg
dec
and
or
push
movsl
int
test
into
jmp
xor
int
lcall
fildll
mov
push
pop
jne
xor
xlat
xchg
xchg
sbb
insb
mov
push
rolb
out
idivb
lret
movsb
insb
jns
sbb
inc
scas
dec
sbb
sbb
dec
scas
sub
iret
out
mov
inc
mov
loopne
jns
add
imul
stos
sub
bound
xlat
and
adc
pop
xchg
cltd
cmp
pop
cmp
cmpb
outsl
in
pop
mov
pop
cmp
cmpsl
mov
aam
out
ret
jp
pop
lcall
mov
into
sbb
testl
fs
int
dec
push
xor
or
mov
test
xchg
out
sub
aaa
insb
lock
mov
enter
mov
mov
push
aam
cmp
add
ds
lea
jbe
jae
sahf
dec
fnstcw
test
pop
daa
mov
dec
pop
jmp
fcmovu
or
adcb
stc
sub
mov
out
leave
mov
sbb
mov
or
inc
sar
xchg
sbb
pusha
push
in
add
test
lahf
add
mov
lcall
mov
pop
xor
xchg
mov
xor
and
ret
imul
shl
loope
fiadds
ret
adc
scas
sub
adc
imul
jbe
shrl
call
dec
es
xchg
adc
aad
fmulp
cli
push
jecxz
aam
pushf
mov
in
jae
pushf
fst
daa
scas
xor
inc
call
xchg
adc
fsub
add
hlt
out
sub
and
hlt
jge
ret
add
dec
cmp
jno
cmpsb
rcl
xor
or
dec
cmc
test
fcmovbe
dec
jl
pop
test
xchg
addl
pop
pop
mov
cltd
loop
ss
bound
xchg
lods
lods
pop
xchg
mov
mov
subl
cmp
cmp
imull
xchg
pushf
test
adc
inc
push
lret
lods
jae
xchg
sbb
daa
cmp
popf
dec
lcall
cmc
test
xor
dec
cmp
sub
add
arpl
xlat
xor
push
inc
cltd
rcll
fs
mov
jl
add
push
jnp
repz
mov
lods
int3
pop
inc
push
pop
test
dec
pushf
jmp
test
mov
mov
push
loope
mov
fsubp
in
jle
cmp
sbb
roll
mov
xchg
jne
xorb
mov
xchg
lds
cmc
scas
push
push
jg
adc
les
in
jbe
push
mov
lock
jo
test
aad
pushl
adc
loope
pop
rorl
jnp
mov
fildl
and
std
mov
xor
outsb
rclb
push
xor
add
jno
xchg
sahf
mov
sbb
lret
sbb
push
pop
pop
div
lret
insl
xchg
lods
lret
dec
mov
aas
dec
cmp
xchg
xor
dec
mov
test
ror
inc
sbb
outsb
sarb
lahf
int3
icebp
xchg
jb
inc
cmpsb
enter
mov
cld
sub
aas
mov
inc
sub
fisttps
jb
pop
lret
mov
les
push
or
mov
imul
data16
push
mov
push
popa
dec
cld
test
push
loopne
cmp
sub
addr16
mov
fwait
mov
pushf
cmp
jecxz,pn
pop
mov
mov
pop
out
add
push
out
sub
subb
cmpsl
mov
jl
sub
dec
idivl
inc
std
mov
imul
add
push
ja
cmp
lcall
jmp
aad
xchg
in
cs
jo
lcall
cmpsl
push
adc
jecxz
xchg
adc
push
es
mov
aaa
inc
cltd
movsl
xchg
cmpsb
pop
mov
xor
insb
jno
inc
mov
fwait
out
mov
in
push
enter
push
jle
cli
addl
sbb
shlb
inc
mov
mov
sub
xor
rolb
push
insb
mov
xor
jb
das
cli
popl
out
pop
push
ss
and
jecxz
dec
movsb
je
xor
mov
scas
out
pop
jnp
gs
jnp
data16
mov
fsubp
fdivr
mov
inc
dec
adc
std
shrl
gs
lret
loop
in
and
leave
jne
or
scas
loopne
arpl
or
add
push
jb
scas
push
scas
pop
aad
ret
cmp
mov
or
lods
mov
xchg
insl
bound
fwait
lret
mov
xor
and
add
imul
mov
and
pop
dec
adc
inc
enter
and
xor
loopne
cmp
shl
adc
jl
lea
mov
es
into
and
ja
ljmp
out
pusha
popa
test
mov
push
rolb
xor
cmc
data16
mov
mov
loop
ret
push
xchg
lock
pop
mov
gs
push
scas
idiv
shlb
imul
andps
je,pt
cltd
xor
sbb
lret
out
adc
xchg
loop
cmp
cmpsl
aad
and
push
inc
addl
roll
xlat
mov
jb
inc
mov
xlat
add
fneni(8087
icebp
pop
add
je
daa
sub
out
icebp
cld
mov
mov
mov
sbb
cmpsb
cltd
ss
movsl
mov
ds
mov
std
sbb
cmp
data16
imul
imul
xchg
test
add
pop
in
cmp
notl
ja
aad
pop
fnsave
mov
jns
insb
and
pop
jo
fs
lea
xor
mov
mov
jmp
roll
icebp
dec
jp
mov
mov
sti
push
loopne
cmpb
fcompl
push
iret
jbe
dec
jmp
inc
dec
repnz
cld
test
cli
push
aaa
inc
inc
mov
incl
sub
jp
lock
ret
adcb
sbbl
leave
div
jno
pop
jg
addl
xor
mov
fs
xor
sti
cs
in
mov
mov
cmp
mulb
mov
cld
sbb
mov
mov
mov
cmp
and
push
sub
add
and
int
mov
mov
fwait
pop
cmp
jno
repz
jne
xchg
imull
popa
fldenv
pop
sahf
shll
outsl
dec
mov
shll
rorb
shl
and
mov
cs
std
mov
xchg
and
inc
sub
jmp
clc
int3
rorb
xor
sbb
cmp
inc
repnz
pushf
les
rol
frstor
gs
cli
das
inc
pavgb
lods
sbb
aas
cli
jecxz
lret
jae
fs
fstp
pop
or
sbb
inc
push
jecxz
idivb
push
or
xchg
mov
lcall
pusha
in
add
bnd
and
mov
mov
cmp
pop
inc
adc
jno
imul
mov
dec
or
mov
cmp
es
clc
negl
stos
bound
sahf
inc
lret
sub
dec
fisubrl
pop
shl
push
mov
movsb
inc
adc
pop
lea
inc
fdiv
std
sub
xchg
mov
call
xchg
cltd
hlt
or
jns
std
xchg
mov
inc
das
pop
ds
or
adc
insl
add
cwtl
and
imul
in
aam
shll
jp
into
pop
stos
xor
jle
loope
rolb
imul
sti
test
push
stos
jg
mov
movsb
mov
xor
hlt
imul
jmp
int
or
pop
inc
fsubl
std
outsb
pop
sar
leave
add
nop
les
or
call
sbb
cwtl
add
sbb
mov
add
int
shll
aaa
mul
jbe
mov
fbld
add
xchg
adc
pop
add
movsl
xor
clc
loope
loop
cs
leave
bound
add
or
jg
cld
sahf
push
jns
mov
aaa
aad
int
sub
push
popl
adc
pushf
ss
sub
test
push
ja
pop
scas
aas
dec
jl
das
inc
test
data16
pop
adc
fstpt
nop
mov
in
cmp
mov
ret
pop
mov
inc
ds
xlat
inc
dec
pop
mov
rclb
aas
out
aaa
mov
cltd
dec
pop
mov
add
cmpsl
fsub
clc
dec
mov
push
scas
jl
loop
xor
jno
enter
pmulhuw
jns
stos
push
rcrl
mov
or
add
cmp
sbb
adc
jmp
out
faddl
aam
lret
jne
mov
pop
repnz
sub
sub
add
stos
aad
jmp
pop
or
mov
inc
or
jo
jne
mov
adc
jl
aam
add
add
fstps
cmpsb
mov
pop
mov
frstor
or
enter
negl
xchg
jp
loope
dec
ret
mov
ret
std
inc
and
jl
or
mov
mov
dec
test
cmpsb
je
pop
pop
fadd
xlat
lret
lahf
cs
into
xor
adc
xlat
sbb
pop
mov
scas
sbb
dec
dec
adc
mov
ds
out
pop
cli
mov
jno
clc
adc
fbld
rorl
fwait
int3
inc
ja
stos
dec
cmp
push
pop
cmp
xchg
les
repz
pusha
shll
pop
add
dec
int
inc
rcr
test
push
and
mov
inc
pop
scas
add
mov
push
in
jne
or
cs
jne
out
lcall
push
pushf
mov
adc
out
dec
aad
int3
stos
mov
pusha
mov
push
adc
add
mov
das
lahf
lods
stos
mov
hlt
cmp
mov
jecxz
daa
cs
xor
push
push
gs
les
enter
adc
xchg
pop
aas
sbb
lds
add
jg
xchg
cld
aad
mov
and
adc
sub
jnp
sar
mov
ret
hlt
mov
aaa
mov
inc
fisubl
sbb
dec
mov
xchg
lods
imul
cmpsl
cmp
aam
dec
in
mov
and
dec
mov
mov
mov
ret
xchg
rcrl
das
call
cs
int
fistpll
test
stos
ficomps
xor
cli
shl
rorb
out
adc
mov
cmpb
cmpsb
ret
in
sbb
inc
sub
fisttps
aam
in
fsubp
out
cli
jge
aam
pop
pop
incl
mov
cltd
inc
dec
add
add
push
pusha
data16
les
repz
shll
cmpb
insb
mov
dec
dec
sub
fmuls
out
imul
or
push
ja
push
push
jmp
sbb
sub
filds
stos
addb
lds
push
stos
fiadds
lret
pop
mov
push
addl
mov
dec
mov
dec
mov
dec
nop
outsl
jecxz
mov
es
mov
popf
cmp
and
push
add
xorb
jo
adc
xchg
xchg
xchg
push
mov
or
scas
jle
mov
push
push
push
inc
push
cmp
rolb
dec
push
repnz
pop
sbb
ret
daa
std
cmp
add
and
out
and
mov
mov
scas
hlt
adc
scas
xor
shrl
push
daa
jge
and
loope
jo
inc
mov
bound
iret
iret
inc
inc
dec
subb
mov
mov
sahf
je
out
shr
xor
imul
lods
push
stos
add
xchg
mov
scas
adc
inc
lock
ja
lods
add
arpl
push
loop
es
mov
leave
outsl
add
pop
gs
ret
fucomp
sbb
movsb
xchg
cwtl
das
or
int3
push
and
jge
push
inc
loopne
test
enter
clc
pop
jle
in
out
push
sbb
sbb
filds
xchg
lock
adc
ret
inc
inc
insb
push
insl
sub
ret
out
cmpsb
ljmp
pop
pusha
jbe
mov
addl
jno
sub
mov
pusha
mov
fldl
push
mov
lods
cli
mov
or
xchg
out
push
push
cmpsb
outsl
cmp
mov
and
and
sub
mov
pop
mov
arpl
shlb
fwait
xchg
into
mov
mov
inc
bnd
cmp
les
sub
jo
xor
imul
add
aad
rclb
cmp
and
push
xchg
dec
mov
dec
pop
add
dec
jmp
push
in
sbb
imulb
testb
lret
icebp
cmp
mov
cmp
lcall
shlb
inc
dec
das
test
fwait
dec
sub
mov
fsubrs
lds
lcall
shrb
cmovno
mov
dec
hlt
pusha
xchg
pop
pop
std
dec
in
cltd
out
push
mov
push
cmpsl
lock
ds
jecxz
dec
push
inc
movsb
and
or
pusha
add
das
pushf
pop
push
pop
test
test
jmp
sub
pop
call
xchg
pop
dec
scas
sbb
or
pop
ss
sbb
or
lods
sahf
inc
mov
nop
fcomip
inc
jnp
add
jle
cld
inc
cmp
xor
mov
sti
jns
idivb
inc
loope
push
fiadds
push
xor
cmp
test
push
js
lds
add
pop
out
lcall
inc
std
das
or
fsts
pop
js
jle
mov
and
lret
add
xor
xchg
xchg
movsl
lcall
jne
test
or
rcl
pop
add
aam
mov
mov
lret
mov
cltd
mov
pushf
mov
sub
xchg
mov
add
mov
pop
cmp
inc
arpl
insb
or
mov
mov
jae
std
pop
or
push
xchg
insb
and
aaa
out
mov
and
shlb
mov
push
xchg
adcb
lahf
cmpsb
out
sub
mov
lret
fs
push
and
addr16
mov
xchg
add
fstl
xorl
ja
and
xchg
and
adc
mov
mov
dec
push
aas
mov
addr16
ds
mov
sbb
mov
push
sbb
in
arpl
adcb
fwait
movb
pop
or
mov
jge
or
mov
mov
xchg
js
nop
movsb
popa
sbb
xlat
sub
cmp
movsl
addl
jle
xchg
clc
sub
sbb
subb
xchg
cld
enter
sbb
js
scas
and
mov
pop
xor
dec
dec
add
xchg
jle
lods
dec
mov
fdivrs
test
sub
push
mov
inc
dec
or
dec
sub
loop
mov
enter
xor
insb
sbb
cmp
pushf
push
push
fistpll
pop
repnz
fbstp
imul
sbb
addr16
in
mov
mov
adc
xchg
outsl
loopne
sub
sbb
cs
das
sub
push
test
jle
test
or
test
push
orl
int
lock
adc
jl
jb
lods
mov
add
jne,pt
xor
xor
xchg
mov
inc
fwait
pushf
inc
adc
je
repnz
add
sbb
and
sarb
ds
mov
aaa
movsl
fisubrs
loop
lods
gs
pop
sbb
adc
out
scas
outsl
mov
enter
test
mov
inc
mov
mov
and
cmpsb
in
ret
out
addb
inc
in
pop
stc
jns
add
fdiv
into
cs
push
jecxz
je
mov
pop
test
sar
ret
aas
sti
insl
call
xchg
aas
cmc
and
xor
lods
fldl
pop
js
adc
cmp
out
insl
mov
xorb
mov
push
xor
cmp
lret
pushf
jne
mov
adc
mov
sub
rclb
pop
or
loope
or
cmc
push
adc
mov
cli
push
ss
add
loopne
jb
add
add
insb
imul
cwtl
mov
sarb
out
ret
dec
or
xadd
iret
mov
push
loope
push
gs
push
push
push
mov
inc
adcl
adc
xchg
inc
insb
movsl
and
dec
iret
cmp
gs
xor
jne
test
and
pop
pop
movl
mov
jmp
aaa
xlat
shl
popa
out
es
fs
roll
push
pusha
mov
pop
fwait
nop
cmpsb
mov
insl
repnz
fs
bound
add
push
mov
nop
mov
jge
fldpi
rclb
cmp
xchg
xchg
adc
lock
push
test
push
mov
jne
cmc
adcl
add
pop
mov
pop
push
mov
mov
sar
lock
sub
enter
xor
ja
mov
push
mov
inc
ja,pn
cwtl
in
jp
jle
xchg
mov
std
mov
out
repz
je
and
mov
ss
int3
xchg
xchg
fwait
lret
lods
or
out
mov
js
mov
sbb
pop
push
ja
je
cwtl
mov
paddusw
or
jno
pop
pop
gs
sbb
xorb
dec
push
xor
pop
sbb
or
js
pop
sub
push
and
sbb
jg
addb
sarl
sahf
scas
test
cmp
push
or
mov
shrl
pop
outsb
pop
dec
add
cmp
das
bound
mov
aam
adc
outsl
mov
cmp
pop
lock
inc
add
into
mov
pop
pop
inc
jge
hlt
or
pop
lock
test
xchg
pop
cli
daa
test
repnz
aad
shlb
out
push
test
push
dec
or
cmp
nop
sub
jmp
arpl
adc
stos
xchg
jo
sub
push
cmp
addb
push
ret
pop
repz
dec
outsb
push
in
out
sbb
int
outsb
pop
mov
jo
pinsrw
sbb
add
mov
xor
xor
xor
xchg
and
rol
loope
popa
xchg
mull
sub
cmpsl
dec
mov
push
call
push
movsl
and
jge
inc
mov
cmpsb
shl
inc
jecxz
mov
xchg
add
add
nop
fwait
inc
mov
adc
gs
insb
pusha
mov
enter
int
fnstenv
jae
and
sbb
xor
loope
lock
repz
jle
sbb
loop
sub
ficoms
mov
xchg
push
mov
jl
cmp
pop
mov
in
stos
test
popa
mov
fs
out
xchg
mov
gs
dec
push
push
mov
vpaddw
jne
inc
pusha
jp
jne
add
out
xchg
push
imul
and
and
lea
movsl
lods
mov
or
loopne
mov
icebp
cmp
inc
loop
push
lea
in
lahf
out
lcall
aas
mov
xor
dec
adc
mov
inc
push
roll
xchg
addr16
ljmp
mov
jns
aad
and
lods
push
sbb
out
roll
add
mov
lret
add
dec
xchg
orb
cmp
mov
cmp
je
sbb
mov
test
sub
fsubr
mov
scas
pop
sbb
in
jecxz
jns
cmp
sub
mov
sub
in
or
or
xchg
jl
ja
dec
mov
push
mov
das
dec
fldl
call
cbtw
mov
xchg
arpl
test
mov
dec
std
mov
mov
jl
inc
jg
popf
pop
bswap
out
and
or
push
enter
lods
push
hlt
cmp
inc
stos
aas
andb
lock
adc
sub
push
rcrl
jbe,pn
or
sarl
mov
sub
add
fisttpl
pop
lock
xchg
xchg
fstpl
in
mov
lcall
jge
in
popa
daa
lret
cmp
mov
loope
jecxz
jmp
ret
icebp
mov
fdiv
rorb
push
add
mov
push
pop
push
sahf
in
add
ret
push
pushl
sbb
or
lret
mov
daa
test
and
int
xorl
cmc
add
pop
mov
add
cmp
mov
icebp
adc
or
and
enter
xchg
pop
sbbb
push
adc
mov
leave
stc
mov
cli
mov
movsb
sbb
loope
divb
arpl
pop
inc
mov
cmp
ds
movsl
pop
pop
clc
cld
xchg
cli
cwtl
scas
fstps
sub
je
rorb
out
into
lods
iret
sbb
mov
fstp
inc
jb
cmpb
jg
cwtl
mov
adc
sahf
test
fs
xor
mov
lret
jne
adc
lea
aas
mov
repz
jmp
cmp
fsubrp
or
mov
push
jmp
inc
cmp
outsl
insb
cmp
mov
dec
xchg
imul
xor
inc
mov
jb
jle
sub
push
cmpsl
mov
stc
push
jg
jnp
pop
dec
xor
sub
inc
clc
mov
es
pop
test
das
ja
mov
popl
mov
lea
and
sub
sahf
shlb
sbb
cmc
mov
adc
rcr
ss
popf
std
xor
xchg
aas
mov
xlat
mov
jo
inc
jmp
fs
fnstenv
clc
std
xchg
jnp
pop
jnp
or
mov
daa
sub
jmp
out
insl
lahf
clc
inc
mov
daa
pop
jle
sub
scas
adc
outsb
cmp
push
jp
xor
mov
movsl
cmp
add
push
aad
xor
stos
add
and
dec
aas
iret
cmpsb
mov
jo
dec
dec
enter
jb
adc
pusha
fiadds
adc
lcall
sbb
jmp
dec
ret
cs
hlt
mov
pop
das
inc
mov
shl
mov
adc
stos
cmp
cmp
imul
test
inc
and
mov
adcl
gs
xchg
scas
add
lret
add
xor
daa
orb
rcrl
and
push
jl
fists
add
in
in
jbe
sub
sbb
pop
dec
mov
adc
xchg
cmp
mov
cmp
inc
insl
dec
mov
inc
mov
and
dec
fadds
aam
sti
or
orb
inc
adc
mov
cli
ret
leave
enter
dec
mov
jo
jecxz
jmp
ss
mov
and
popf
inc
jecxz
and
pop
push
notl
fdivl
jnp
and
cltd
push
pop
ds
cmpsl
test
into
pop
mov
mov
adc
jecxz
roll
xchg
xor
clc
pop
stos
das
jmp
jbe
or
xchg
push
int3
push
dec
xor
and
mov
sbb
aas
iret
and
dec
aam
mov
xor
adc
repz
loopne
ss
shl
out
and
add
sub
mov
adc
mov
pop
push
js
cli
cld
sbb
fsubrs
sahf
mov
bound
iret
dec
pop
mov
into
dec
loope
mov
mov
xor
sahf
in
mov
and
int3
sub
ffreep
test
hlt
ret
or
lret
dec
fisubs
push
outsb
lcall
loopne
stc
sar
sbb
inc
repz
dec
sub
jmp
adc
popf
dec
outsl
push
int3
fdecstp
leave
xor
inc
lods
mov
ficoms
inc
cmp
loope
pop
dec
pop
int
fnsave
pop
ss
cld
pop
adc
cmp
inc
pop
mov
out
inc
and
push
call
add
stos
pop
xchg
dec
mov
filds
mov
decl
aam
xchg
aad
stos
roll
aad
and
xlat
movsl
sbb
cli
xorl
push
movsl
and
sub
sarl
pop
adc
popf
xchg
add
pop
cmpb
bound
shl
cmp
mov
sbb
push
cmc
gs
aam
adc
repz
ds
lret
lds
jmp
stc
das
xlat
leave
rorl
outsl
fwait
pop
push
xor
xchg
adc
xor
in
adc
xor
fldl
mull
pop
push
pop
sbb
mov
ds
push
pusha
mov
nop
nop
push
mov
insb
cs
imul
stos
in
jns
in
adc
mov
leave
popf
xchg
or
or
in
fnsave
xchg
sbb
mov
sub
push
pop
mov
jno
jbe
or
imull
iret
dec
cmp
iret
scas
cmp
jecxz
xor
inc
add
inc
xchg
ds
hlt
ja
je
out
popa
push
inc
repz
inc
push
aas
aas
xchg
adc
hlt
sub
imul
and
stos
and
sub
call
or
mov
cmpsl
jp
fdivs
fnstsw
hlt
inc
inc
mov
and
rcll
cmp
mov
xor
out
jge
lahf
xchg
xor
sbb
ja
cs
rcll
pop
cmp
bts
pop
inc
ljmp
xor
inc
rcr
lahf
add
sbb
push
ss
dec
push
dec
lahf
fsts
mov
fnstcw
fsub
in
in
clc
loopne
into
mov
cmpb
test
jmp
call
in
push
cmc
or
cmc
pop
inc
sub
out
xor
jnp
fdivl
and
addb
iret
jo
cmp
orb
loop
cmc
dec
bound
pop
inc
cmpsb
adc
fcomip
mov
mov
std
rclb
aaa
jnp
ja
jnp
cmpsl
cmp
fs
in
out
lods
mov
cmp
popa
cmpsb
loopne
and
jp
lods
adc
lock
rcrb
arpl
fcoms
fs
test
mov
sub
add
and
xor
push
fstl
outsb
insl
and
in
sbb
aas
ljmp
testl
stos
cwtl
mov
xchg
test
add
data16
in
ret
gs
or
fst
pop
inc
movsl
adc
test
jl
pop
es
fistpll
mov
jge
jno
jnp
insb
xchg
sbb
insl
add
push
pop
xlat
loope
aaa
mov
nop
dec
subb
inc
push
lea
jae
lret
rorb
cmp
push
sti
dec
repz
mov
pop
dec
mov
cmp
popf
pop
xchg
pusha
outsl
data16
fstps
mov
jae
in
sti
imul
xchg
icebp
lret
clc
cmp
iret
imul
std
outsl
orl
mov
mul
ja
xchg
or
push
fbstp
pop
cmp
or
mov
fmull
xchg
dec
and
sbb
cmpsw
lea
popw
in
sub
leave
lea
xchg
push
pop
int
mov
sti
insl
insb
pop
jno
lret
incl
pop
xchg
inc
je
lret
ret
or
add
idivb
cmp
sti
imul
adc
pop
xlat
dec
addb
out
scas
mov
or
xchg
int3
push
repnz
mov
ret
testl
fisubs
sbb
clc
sub
lea
fidivl
lahf
rcll
lea
xchg
movsl
adc
push
lods
cmp
push
mov
adc
xor
arpl
cs
mov
jnp
mov
insb
repz
leave
mov
jnp
dec
dec
bound
pop
ret
adc
or
ficoms
test
mov
cld
xchg
pop
test
add
mov
incl
cmc
xchg
mov
mov
out
mov
jmp
test
cwtl
cld
stc
lret
pop
mov
pop
cmp
pop
fbstp
repz
dec
or
aad
out
or
cmp
pop
movsb
outsb
scas
les
mov
arpl
mov
push
xchg
sub
sbb
jb
aad
push
push
sub
push
in
xor
ljmp
and
stos
xchg
fbld
fsubrl
dec
aam
xchg
fsubrs
push
and
and
jg
aad
pushf
rolb
call
dec
pop
mov
xchg
jno
movsl
std
pop
dec
mov
ja
and
mov
or
cwtl
fiaddl
out
pop
adc
fwait
bound
inc
sbb
scas
sarl
pop
ficompl
pusha
sub
nop
xchg
cmc
mov
cmp
test
push
nop
ret
ss
dec
das
out
inc
pop
pushf
ss
cmpsl
pop
js
jne
push
push
je
sub
cmp
dec
or
clc
addr16
movsl
nop
or
push
mov
es
or
stos
outsb
inc
xchg
sub
mov
pop
mov
insb
sti
pop
int
mov
cwtl
lcall
cmp
mov
adc
aam
dec
shlb
mov
jle
movsl
fcomip
outsl
add
jmp
addl
cmp
cltd
insb
out
scas
pop
mov
rol
sti
rcl
hlt
mov
fnstcw
jge
unpckhps
mov
mov
shrl
ljmp
jno
adcb
sbb
loopne
into
xchg
jno
and
call
cmp
push
rcrl
pop
sahf
jge
sub
push
xchg
inc
iret
xor
outsb
mov
loop
js
mov
xchg
inc
stc
fucomi
or
dec
repz
mov
loopne
faddl
das
cltd
mov
popf
xor
xchg
xchg
or
subl
mov
into
dec
movsl
andl
add
push
hlt
mov
ja
out
repz
adc
shll
pop
or
xor
push
mull
mov
enter
mov
push
nop
push
jbe
stc
aaa
sbb
sbbb
lods
cltd
push
call
imul
scas
js
scas
xorl
xor
int3
lods
push
inc
push
mov
xor
cwtl
stos
cmp
fists
mov
dec
mov
inc
adc
jp
stos
lret
aaa
ljmp
xchg
outsl
lock
mov
andl
xchg
and
sub
sbb
xchg
xchg
lds
pop
in
pop
dec
insl
mov
test
out
inc
adc
lcall
iret
cmp
mov
lret
jb,pt
jmp
adc
pop
movsl
inc
test
daa
testl
fmull
shlb
cli
mov
xchg
sub
inc
adc
inc
lea
inc
mov
hlt
mov
pop
cmp
rclb
test
and
ret
push
movsb
and
or
loope
dec
in
add
dec
sbb
cld
pop
stos
xchg
sbb
jge
inc
xchg
xchg
addr16
sahf
daa
dec
sub
pop
lret
mov
clc
mov
imul
dec
fmull
aam
jmp
mov
xchg
cmp
or
cmpsl
aas
push
bound
nop
xchg
mov
push
sbb
iret
repz
fisubrl
test
arpl
mov
sti
inc
mov
pop
call
ds
repz
in
push
xor
enter
pop
hlt
shrl
cmpsb
sbb
pop
cltd
lcall
fst
xchg
fcoms
out
xor
or
xor
or
cmpsl
out
fldenv
mov
fcompl
cmp
mov
repnz
mov
xor
cmp
mov
sbb
jge
and
push
or
push
and
push
inc
mov
mov
mov
aas
imul
pop
movsb
popa
pinsrw
jb
pop
cmc
xor
arpl
clc
inc
repz
ja
push
test
test
inc
nop
cld
test
jne,pt
rolb
mov
mov
cld
jecxz
sarl
jl
xor
loopne
adc
cmpsl
pop
repz
lea
pushf
orl
push
mov
into
fwait
inc
outsb
ret
mov
cli
out
fistpll
push
test
push
sti
mov
cmp
mov
call
jmp
inc
aad
mov
push
sbb
mov
push
out
sub
les
add
out
gs
data16
pop
jb
movsl
icebp
loopne
stc
sbbb
rcl
mov
push
xchg
sub
xchg
push
mov
pushf
inc
ds
mov
dec
js
add
add
lcall
adc
push
jmp
jbe
inc
pop
scas
cmp
out
lds
test
sbb
icebp
in
sbb
or
or
mov
rorb
das
dec
bound
xchg
shll
mov
pop
notb
shll
sbbl
lcall
jg
inc
pop
pop
fwait
pop
aas
ja
js
push
jmp
pop
mov
call
in
add
and
jno
push
into
xor
push
mov
insl
test
dec
xchg
imul
push
add
sub
jle
mov
cmpsl
js
popl
mov
lock
mov
sbb
jno
mov
sbb
inc
sbb
lret
push
stos
jp
xchg
jp
loopne
push
out
int
ret
aaa
outsl
fsubl
in
test
push
sbb
add
mov
xchg
push
lret
or
push
in
cmp
mov
negb
pop
call
jmp
mov
push
pop
and
scas
daa
sub
dec
sbbl
sbb
dec
or
adc
int
in
push
or
jno
push
stos
test
ficoml
nop
mov
xchg
sub
jmp
jne,pt
xchg
hlt
int
push
mov
nop
and
inc
lds
sysret
in
xchg
leave
imull
out
or
pusha
mov
imul
pusha
sbb
sbb
inc
loope
dec
push
in
ret
adc
cmp
xchg
mov
sbb
xor
add
sbb
sub
lahf
mov
ficoms
xchg
enter
xor
add
scas
into
cmp
mov
mov
pushf
fsub
std
inc
test
icebp
shrl
in
pushf
xchg
xlat
leave
xchg
stos
fcoms
and
and
xor
add
jg
dec
lds
lods
bound
fnsave
mov
cmp
inc
aam
or
in
test
dec
clc
sub
fucom
inc
notb
outsl
rclb
aas
aas
xchg
mov
adc
pop
push
outsb
mov
loopne
add
push
add
int
adc
cld
gs
lret
or
add
and
out
pop
cmp
sub
xor
mov
shrl
ja
push
mov
pop
in
clc
mov
arpl
pop
pop
sahf
sub
jae
dec
imul
shrl
movsb
test
addr16
ret
iret
mov
or
add
std
or
imulb
aad
cmp
push
or
jne
cmp
test
clc
sub
repz
insl
iret
mov
rorb
test
sub
xor
out
lock
dec
push
mov
js
xchg
fildll
iret
mov
mov
pop
jecxz
and
pop
in
add
sbb
sbb
es
jg
sub
stos
jo
sti
fmull
adc
or
mov
ret
gs
xchg
test
adc
ret
lds
jle
add
dec
dec
pusha
stos
lds
cmp
dec
xchg
push
cmp
adc
in
inc
sahf
mov
mov
add
and
jnp
cmpsl
call
in
or
gs
daa
jo
xchg
pusha
cld
scas
sbb
scas
push
arpl
or
lret
lahf
fbstp
fwait
add
mov
js
jle
es
adc
push
push
ffree
rorb
out
pop
push
pop
mov
mov
xchg
add
cld
mov
cmp
mov
jne
mov
and
cmc
pop
sub
dec
mov
jmp
and
clc
mov
les
sbb
imul
sbb
add
or
aam
int
icebp
js
adc
and
jle
outsb
or
fnstsw
pop
ja
daa
mov
xor
iret
scas
ret
loopne
dec
scas
iret
and
not
jns
in
hlt
ret
aaa
popf
lret
fldenv
data16
pusha
xchg
daa
js
scas
xchg
sarl
lahf
push
in
inc
push
xchg
push
jno
jg
into
scas
cltd
xchg
push
add
sub
movsb
and
notl
outsb
sub
jo
xorl
adc
and
orb
shll
roll
mov
je
and
aaa
sub
jl
insb
push
lods
mov
loop
jnp
mov
pusha
mov
mov
movsb
or
pandn
xor
out
mov
call
pop
pop
mov
adc
sbb
adc
enter
xlat
in
push
mov
lea
adc
lods
sub
adc
andb
jno
and
mov
pop
mov
mov
repz
pushf
ret
repnz
mov
out
pop
xchg
mov
movsb
mov
jle
imul
out
cmp
movsb
movsb
cmp
jns
shlb
xchg
inc
insl
rcll
into
nop
cwtl
popf
shlb
xorl
or
lock
scas
fists
adc
sub
test
leave
fwait
addr16
gs
fs
mov
inc
dec
push
sub
out
out
cmp
es
mov
into
push
loop
stc
mov
push
mov
pop
add
push
pop
popa
pop
mov
test
xchg
out
push
movhps
rcll
arpl
or
aas
mulb
test
push
push
and
cmp
cs
or
sahf
imul
push
call
mov
out
inc
outsb
or
pop
cmp
fcmovne
aaa
test
idivl
sub
lcall
out
and
inc
jg
incl
xchg
pop
or
stos
and
push
popf
pop
mov
sbb
cmc
push
insl
jne
out
sub
jle
scas
mov
mull
or
adc
mov
test
lods
add
ja
fisttpl
push
seto
shrl
les
dec
or
in
mov
pusha
push
sub
iret
hlt
mov
clc
cmp
hlt
scas
mov
repz
sahf
or
cmp
mov
sbb
imul
mov
xchg
lret
int
xor
or
xor
cmp
xlat
add
andl
inc
sbb
xor
out
push
xchg
push
fcoms
cmp
push
push
sbb
mov
nop
mov
repnz
fsubp
and
and
xor
inc
clc
test
jns
mov
cltd
sub
imul
and
test
push
push
sub
or
push
aas
rcl
pop
cltd
pushf
ja
or
mov
inc
cmp
adc
jge
lret
inc
cld
jecxz
ljmp
jmp
gs
add
sbbb
out
push
xchg
scas
dec
inc
xchg
or
testl
dec
push
add
int3
jae
cmp
call
push
mov
movsl
sti
xor
inc
jne
dec
js
mov
cmp
pop
or
loop
repz
jle
imul
adc
in
clc
lds
or
pop
pop
pop
das
mov
sub
dec
popf
sub
cmc
adc
ret
sar
sbb
or
xchg
xchg
sbb
cli
or
jbe
sahf
popf
je
movb
ret
fsts
mov
sbb
jg
cwtl
or
mov
pop
sub
jge
mov
pop
into
lret
add
dec
aas
mov
sbb
mov
pop
into
mov
xchg
test
mov
je
adc
loop
mov
ja
inc
maxps
loop
xchg
js
mov
shll
xchg
jg
cltd
jnp
push
fbld
xorb
or
dec
mov
dec
clc
dec
adc
repnz
pop
loopne
in
out
or
add
xlat
cli
imul
ds
pop
out
cwtl
int3
fwait
repz
ret
movsl
jae
cmp
push
aaa
testb
call
popf
shlb
xchg
jl
aad
and
push
out
call
rcrl
lock
mov
cmp
add
les
adc
xchg
xchg
jl
mov
xor
mov
xor
dec
xchg
or
call
lret
push
lods
loopne
dec
pushf
testb
xor
loopne
xor
adc
inc
jecxz
cwtl
gs
push
adcl
sbb
inc
lea
jmp
clc
inc
xor
hlt
cs
lret
cwtl
push
cwtl
adc
push
test
sti
out
sub
inc
pusha
repz
xor
clc
in
mov
inc
ljmp
cmp
mov
or
sahf
ds
mov
mov
dec
loope
or
je
adc
loop
adc
sub
lds
or
add
push
int3
orb
pop
enter
ljmp
inc
sarl
sub
jo
dec
negl
lcall
inc
pop
jge
out
daa
std
scas
fisttps
dec
testl
scas
or
xchg
addr16
jo
jl
inc
int3
jne
cmp
popf
pushf
sub
adc
lods
mov
add
lcall
pop
push
enter
push
sub
mov
and
lcall
testl
ret
jp
in
mov
lods
icebp
sbb
scas
clc
rcrl
mov
mov
inc
pushf
roll
clc
stos
mov
pop
push
sub
or
jle
addb
loope
jle
pop
mov
inc
fbstp
pop
pop
xchg
cwtl
xchg
mov
push
orb
stos
aas
out
push
mov
ret
mov
nop
ja
enter
jge
cmp
adcl
addr16
test
scas
ljmp
adc
sub
das
cmc
lods
sbb
mov
rclb
pop
inc
jmp
popf
mov
sbb
xorb
sub
mov
sub
cld
pop
sub
loopne
or
enter
adc
pushl
dec
int
add
mov
sbb
addb
or
inc
cmp
mov
insb
dec
mov
pop
push
call
dec
fcoms
test
add
sbb
adc
mov
ja
scas
inc
adc
add
xchg
pop
mov
lahf
ja
pop
in
imul
jnp
mov
fdivrl
bound
push
arpl
addl
lret
test
push
rcrl
rorb
xchg
and
scas
ja
pop
push
fistl
mov
push
cltd
mov
lret
xor
stc
fnstenv
ficoml
jbe
adc
cli
jns
je
cmc
sub
dec
sbb
inc
mov
addb
jmp
fistl
pushf
bound
xchg
and
pushf
popa
lock
rclb
mov
mov
and
add
cmc
jo
fisubs
pop
lcall
add
not
lods
lock
imul
jecxz
inc
push
ss
or
xchg
div
cld
pushf
mov
test
cmp
ljmp
pop
das
cmc
clc
out
lahf
jne
in
mov
xchg
testl
addr16
pop
inc
out
mov
scas
dec
movsb
push
cs
add
ret
or
mov
cmc
iret
jp
or
loop
or
jns
fadd
jns
sbb
dec
push
add
inc
add
mov
jb
adc
sub
mov
push
pop
dec
jb
leave
ja
pop
jg
push
sub
and
and
push
cmpl
sar
adc
repz
outsb
pop
adc
jecxz
inc
pop
xchg
pop
xor
setns
xor
jo
int
arpl
pop
loopne
hlt
andl
jecxz
push
pop
repz
das
inc
ds
movsb
ds
aas
mov
push
test
pop
adc
xor
add
insb
rcl
sbb
xchg
xchg
mov
or
add
and
shr
mov
dec
fdivrl
insl
jo
mov
lods
sub
les
push
push
icebp
fdivrs
inc
mov
cs
sub
and
cmp
dec
movsb
jle
pop
bound
js
sub
into
in
popa
repz
push
mov
stos
mov
lahf
dec
aaa
pushf
inc
dec
xlat
inc
sbb
xchg
mov
cmp
negb
loopne
inc
jp
jno
in
mov
pop
and
push
nop
jns
sahf
test
xchg
pop
roll
dec
das
mov
cmpsb
push
add
outsl
subb
xchg
push
in
push
adc
cmp
jns
mov
fadd
jno
jb
mov
jl
movb
popf
sarl
stos
fmuls
outsl
repz
into
popa
mov
xchg
addr16
leave
adc
je
aad
sbb
test
test
jl
add
adc
mov
mov
loopne
jnp
adc
sbbl
or
sbb
mov
in
iret
mov
pop
movsl
add
sbb
cmc
lock
mov
cmp
dec
jp
pop
cltd
movsb
addb
or
or
cld
decb
mov
imul
mov
lods
xchg
jo
add
jno
mov
sub
imul
dec
mov
sub
jne
nop
inc
hlt
push
shrl
adc
xchg
les
aas
fldenv
pop
cwtl
jne
movsl
jecxz
jmp
jae
cmc
mov
add
lret
nop
sbb
daa
stos
cmp
andl
pop
mov
cwtl
movsb
notb
lods
divl
dec
pusha
xor
gs
adc
or
stos
sub
cltd
dec
lods
mov
xlat
int3
push
fnstenv
fstp
pop
frstor
cmp
mov
mov
cs
nop
call
clc
in
sub
cmc
pop
cwtl
inc
ja
xchg
adc
lock
cmp
and
inc
repnz
jp
fcmovnbe
xchg
js
sub
add
lret
mov
or
in
sub
jns
dec
out
dec
mov
js
mov
subl
fdivs
dec
adc
cld
out
je
mov
in
mov
push
out
lret
mov
jl
pop
mov
mov
mov
iret
inc
imul
fmul
mov
sti
int3
fistl
aaa
push
int3
pop
jne
lahf
or
ffreep
ss
rclb
cmp
adcl
out
cmp
sbb
and
pop
pop
lret
scas
or
shrb
pushf
lret
mov
pop
sbb
push
jl
scas
add
jmp
pop
into
push
call
adc
xor
mov
ljmp
jbe
xchg
xchg
xor
imul
mov
fsubs
mov
clc
cmpsl
cmp
sub
jle
in
adc
mov
addb
sbb
bound
adc
push
jae
or
lcall
ljmp
shlb
xchg
mov
mov
imul
insb
fs
js
je
insb
pop
mov
shrl
loop
mov
and
push
push
lods
dec
and
jle
cmpl
mov
push
in
push
pushf
push
sahf
adc
adc
push
dec
ljmp
push
aad
xor
sbbb
loop
xchg
insb
sahf
or
cmp
stc
sbb
lcall
add
enter
inc
mov
push
loopne
dec
pop
mov
sysenter
popf
lret
bndldx
pop
lret
popf
in
pop
push
scas
lret
cmp
xchg
dec
loopne
dec
hlt
data16
fcompl
mov
arpl
es
cwtl
push
mov
pop
sub
faddl
mov
popf
push
test
aas
mov
insl
jge
loop
xchg
pushf
cmc
es
jge
xor
sbb
out
adc
inc
imul
clc
test
ret
out
mov
pop
cmc
pushf
jne
rcrb
jmp
cmpsb
pop
popa
xor
filds
insl
jp
into
dec
dec
insl
pop
adc
test
pusha
cmp
or
outsl
pop
xchg
mov
pop
push
cwtl
push
cmp
ficoms
inc
jns
lock
xor
add
mov
mov
add
or
arpl
lcall
mov
inc
dec
int3
into
add
cmp
jno
fucom
mov
cmp
push
fwait
cmp
pop
pop
xor
cli
dec
pop
add
adc
adc
out
dec
js
fisubrs
xchg
in
sahf
sti
movsb
cmp
shrl
xchg
adc
out
imul
sbbl
dec
andl
or
mov
pop
and
jnp
ret
mov
or
in
loop
or
test
ja
faddl
hlt
dec
and
cwtl
xor
out
in
test
mul
mov
pop
dec
imul
hlt
or
andl
dec
cli
leave
adc
rol
xchg
and
jnp
ret
push
fldcw
or
sbb
mov
les
or
xchg
pop
dec
test
jl
pop
mov
gs
or
sahf
je
xchg
cmp
xchg
gs
pop
push
and
aad
jl
sub
sub
cmpsb
mov
stos
push
shlb
mov
pop
sub
mov
decb
aam
push
aam
cmp
add
in
jb
inc
push
fs
sub
xor
in
push
add
pop
xorb
cmp
fnstenv
mov
ret
lahf
sar
pop
fucomp
movsb
rcrl
idiv
cmp
xchg
jb
inc
mov
dec
jb
into
ret
std
cs
jl
add
add
faddl
cwtl
insb
scas
xchg
xor
data16
cmp
jae
mov
ret
sbb
rorl
int3
inc
in
or
add
sub
mov
push
mov
in
addr16
or
cmp
arpl
pop
fst
out
outsb
jns
pop
sahf
jl
fistps
es
xchg
js
addr16
in
pop
imul
in
or
pop
lods
outsl
mov
daa
jo
adc
out
rorl
push
add
push
pusha
mov
xchg
push
sbb
call
out
add
sub
and
sbb
adc
stc
clc
sbb
cs
insb
and
ds
lods
sbb
sub
sbb
lcall
rcl
or
mov
ror
add
bound
mov
or
jne
or
out
xor
mov
popf
xor
rorb
push
sbb
jbe
mov
pop
aam
jae
out
das
cld
test
loop
daa
fnstenv
shll
mov
jge
add
mov
xor
mov
dec
mov
pop
aam
test
and
int3
leave
cli
test
or
outsb
movsl
aad
pop
pop
xor
or
add
cmp
adc
std
push
xchg
data16
stos
xor
push
inc
and
mov
and
pushf
sub
sbb
inc
mov
fwait
inc
cli
jbe
rep
int3
xchg
in
fs
jno
push
mov
iret
pushf
mov
rcl
dec
dec
mov
dec
out
xchg
sub
pop
call
stos
sub
scas
add
clc
movsb
lods
xchg
aad
mov
pop
loopne
fstl
push
push
test
stc
test
sbb
xorb
shrb
das
adc
jno
or
stos
cmp
push
aam
mov
adcl
mov
outsl
fs
dec
push
paddw
inc
cmp
mov
les
sbb
add
cmp
cltd
scas
fistpll
pop
cs
testb
xor
stos
lock
loope
into
push
push
xorl
mov
in
jo
push
xchg
mov
add
pusha
dec
mov
mov
in
gs
and
stc
test
cs
scas
mov
pop
test
mov
mov
mov
add
xchg
sbb
data16
jbe
inc
sub
add
stos
ss
inc
and
test
mov
mov
mov
loope
pop
sub
fstpt
push
pop
push
negb
popa
cmc
add
loop
fdivrs
cltd
in
pop
data16
mov
insl
out
lds
inc
subl
cmp
jns
inc
ds
rorl
clc
scas
adc
push
in
pusha
sbb
fdiv
cmp
ss
mov
inc
inc
cmp
lret
sub
sub
xchg
add
mov
sub
lret
add
adc
ret
or
popa
dec
mov
fld
xchg
enter
jle
rolb
subb
lds
inc
fwait
imul
and
addr16
push
cmp
mov
and
popf
ror
mov
mov
insl
jp
dec
sbb
or
add
fwait
push
push
adc
xchg
int
out
andb
adcl
pushf
or
sbb
dec
push
movsl
xchg
mov
pop
pop
in
pop
pop
in
lds
mov
test
jg
xchg
aas
cwtl
in
sbb
pop
test
pop
pop
adc
es
xor
cmp
fadd
xchg
and
cltd
add
or
jecxz
sahf
in
call
insb
test
mov
rorl
addr16
out
movsb
adc
and
nop
or
cld
ja
fcmovu
out
lods
xchg
cld
or
inc
clc
in
mov
dec
test
movsl
je
adc
and
jle
negl
cmp
fldcw
mov
rcrl
push
aaa
sahf
sub
xchg
push
xchg
imul
xchg
outsb
pop
pop
lahf
fs
leave
ljmp
andb
jns
add
or
mov
add
push
pop
push
pop
xchg
jnp
mov
ret
cmova
adc
in
and
aas
pop
sahf
or
add
and
mov
pop
xorb
fildl
rolb
fstpt
push
dec
cmpl
sahf
loope
inc
into
je
outsl
loop
dec
icebp
pop
sub
push
inc
mov
movb
adc
xchg
cli
mov
inc
mov
jbe
in
sub
out
mov
je
fs
mov
or
clc
jle,pn
sbb
sbb
sbb
std
inc
jp
fwait
dec
int3
jecxz
xchg
fsubrp
push
push
gs
fdivrl
pop
jp
in
jecxz
mov
aad
lock
cli
flds
and
cmpb
pop
lahf
stos
or
call
push
add
fisttps
or
xor
dec
sub
adc
pop
pop
lret
sahf
dec
out
and
enter
pop
sub
lcall
mov
cmp
lods
add
mov
hlt
sbb
mov
mov
aas
pop
cmc
in
mov
dec
mov
in
es
push
lcall
cmp
mov
movsl
push
sarb
cmpl
sbb
push
out
ret
roll
leave
mov
xchg
jp
ss
jp
push
das
dec
fcmove
push
scas
add
push
rcrl
mov
daa
jae
mov
iret
or
shr
test
jp
mov
jno
push
sbb
lahf
cltd
hlt
push
xor
leave
loop
mov
aas
cmp
lret
sub
out
sbb
repnz
jg
and
fsubl
jae
sub
repnz
sub
sbb
std
insl
cli
add
sti
cltd
add
and
push
adc
cwtl
xchg
sti
and
pop
cld
mov
vfrczss
stos
add
rcl
or
cmp
pop
adcl
mov
out
sub
out
xchg
icebp
ds
or
fsubl
lret
aas
std
pop
outsl
popa
cmp
mov
sub
xor
popf
mov
and
addl
or
xchg
ss
cmp
mov
cmp
clc
sbbb
add
mov
insb
in
or
bound
jmp
test
sbb
test
fsubrl
enter
movsl
push
xchg
loope
cmc
mov
push
and
test
mov
enter
out
cs
shll
sahf
xchg
rcr
imul
ret
aaa
inc
and
stos
outsb
std
push
and
cli
lods
popa
sbb
sbb
inc
inc
jo
jmp
clc
into
dec
pop
mov
add
xchg
sahf
adc
ljmp
sti
jl
daa
pusha
imul
inc
arpl
data16
pusha
inc
dec
cwtl
inc
fwait
lods
out
andl
add
sub
xchg
dec
insb
add
in
mov
iret
repnz
sub
cmp
xlat
clc
cmp
xor
mov
cmp
shr
scas
xchg
jbe
mov
pop
fildl
lahf
sbb
or
clc
aam
xor
lret
addr16
inc
sub
pop
imull
cwtl
fldenv
inc
nop
sub
mov
orl
xor
or
mov
sti
movsb
js
lods
adc
and
std
int3
push
dec
cmc
cmp
faddl
lcall
push
cmp
es
push
dec
pop
jae
adc
sub
sub
call
loope
fisubrs
add
jge
into
add
out
push
imul
xor
ret
or
pop
mov
inc
jae
in
aas
dec
sbb
and
and
xchg
mov
enter
movsl
icebp
cltd
sbb
test
pop
add
pop
orb
inc
cmp
mov
push
pop
aad
and
icebp
mov
dec
cmp
xorb
adc
inc
push
dec
sub
mov
lret
mov
dec
add
shlb
addr16
imul
jbe
inc
xchg
insl
pop
cltd
mov
or
iret
rcll
add
mov
dec
dec
nop
sbb
movsb
out
lcall
mov
sbb
sub
sub
or
mov
pop
mul
in
mov
in
sub
scas
aaa
pop
pop
icebp
jg
outsl
lcall
xor
arpl
repnz
sbb
xchg
sub
xchg
or
addb
sbb
ret
stos
aaa
jp
jno
bound
jle
or
test
mov
cld
shrb
xor
leave
or
or
call
mov
mov
fcmovbe
loope,pn
dec
xor
andb
fwait
leave
jnp
jns
shll
pusha
xchg
dec
jbe
ficompl
pusha
loopne
mov
dec
sub
pop
push
xor
das
jo
lea
inc
cld
inc
stos
sbb
sbb
mov
arpl
adc
insl
dec
int
out
push
xchg
es
jle
jne
rclb
ffreep
mov
sub
sub
repnz
dec
mov
mov
iret
jnp
mov
sub
jno
hlt
cmp
mov
repnz
push
roll
mov
in
jl
mov
sub
mov
push
adc
mov
stc
and
nop
ss
sti
cs
push
mov
mov
jo
stos
repnz
and
imull
loopne
aad
push
and
dec
clc
fdivl
mov
ret
loop
or
cli
pop
sub
inc
or
add
adc
push
cmp
loope
mov
imul
xchg
test
add
mov
fwait
pop
dec
adcl
cmc
xor
cmpsb
mov
aas
stc
dec
sahf
sub
ret
sbb
aad
inc
test
xchg
dec
test
jne
aam
bound
and
lods
imul
cmp
mov
sbb
int3
add
push
test
cmp
mov
sarl
in
ja
sub
in
iret
lock
xchg
jecxz
icebp
dec
cmp
jge
and
jno
test
sub
mov
xor
mov
cs
mov
pop
jp
mov
into
and
adc
xchg
xchg
xor
push
sbb
in
cld
cmp
add
jg
and
into
lods
mov
add
cmp
mov
shl
shlb
xchg
out
loop
xor
xor
jg
and
aas
inc
test
fbstp
outsl
adc
sahf
cld
fildll
mov
out
lds
les
test
jb
mov
icebp
mov
ja
bnd
push
xor
sbb
adc
cmp
out
jmp
lret
sbb
xorl
scas
iret
sbb
add
sub
addr16
xor
ljmp
dec
pop
leave
stc
js
es
sbb
adc
push
sbb
fisubrl
int
fs
mov
jb
in
insb
xor
or
mov
and
xchg
mov
xor
out
mov
pop
dec
jge
inc
lock
dec
mov
pop
mov
mov
fstpt
outsl
jne
sbb
out
sbb
inc
cmc
xchg
not
jb
xor
dec
lcall
nop
movsl
jbe
push
int3
cmc
nop
push
xchg
lods
cwtl
addr16
push
mov
stos
outsl
dec
cltd
xchg
jno
or
testl
js
pushf
sbb
dec
nop
lods
mov
sti
in
je
pusha
and
or
jmp
add
adc
fsubl
push
xor
aas
out
int
loope
rcrb
imul
inc
js
adc
cmpsl
xchg
in
sahf
jne
xor
cmp
add
hlt
sbb
mov
pop
cli
xor
fistpll
pop
push
ret
lods
push
hlt
mov
orb
jp
add
sbb
xchg
xchg
dec
insb
movsl
jbe
fs
mov
push
cmpsb
mov
cmc
or
in
jmp
xor
mov
xchg
mov
cmp
pop
sub
add
push
push
xchg
scas
stos
cmp
mov
rcrl
mov
xchg
inc
imul
bound
call
sub
jb
sbb
jp
je
repz
fimull
movsl
lret
add
and
mov
sarb
push
mov
jbe
jmp
adc
jbe
mov
cmp
ret
in
int3
repz
rcrb
loop
movsb
inc
or
ret
and
xchg
icebp
inc
lret
mov
xchg
inc
mov
popf
sbb
int3
fimull
mov
stos
cltd
cmpl
sub
das
xor
sbb
cmp
cld
jl
cmc
push
add
icebp
mov
xchg
and
std
adc
pushf
mov
test
cmpsl
mov
add
fsubl
mov
out
adc
loop
clc
hlt
sub
test
std
mov
pop
xchg
add
cmp
shlb
push
inc
xchg
in
mov
jo
imul
pop
xchg
les
sbb
or
inc
jg
pop
xchg
in
sbb
les
testb
adc
js
adc
insb
cmp
lret
iret
cli
aam
adc
push
pushf
dec
adc
out
pop
or
lea
test
lcall
mov
fs
push
xor
dec
fisubrl
es
mov
pop
out
mov
xor
cli
sar
rolb
out
mov
scas
cmp
sbb
enter
test
pslld
shrl
mov
cld
cs
cli
jb
add
outsb
gs
push
ds
test
lcall
xchg
ficomps
cmp
cmp
xchg
aad
fcmovne
hlt
inc
jecxz
inc
mov
jnp
inc
mov
or
push
repz
fpatan
pop
push
add
add
mov
or
dec
cs
mov
jo
push
ja
sub
out
mov
sbb
mov
insl
popf
cmp
add
test
push
adcb
clc
lods
inc
je
adc
xlat
add
push
add
jge
rorb
das
scas
pusha
sub
sbb
jmp
data16
mov
data16
xchg
jmp
bound
cmp
rorl
pop
call
xchg
xor
fildl
mov
das
cmpsl
adc
xchg
test
sbb
adc
xor
sbb
mov
jecxz
push
xor
pminsw
and
adc
push
xlat
mov
ds
pop
pop
or
andb
xchg
fmuls
mov
inc
test
shlb
ror
call
bound
xchg
pminub
gs
or
lcall
push
push
sbbl
repz
and
mov
xchg
jae
push
idiv
pop
addr16
in
ja
sbb
cltd
roll
stos
push
pop
mov
shll
sbb
test
scas
incl
test
fidivrl
sub
outsb
movsb
mov
mov
or
jecxz
mov
add
jl
cmp
lret
aaa
and
adcb
jl
out
cli
enter
and
and
inc
stos
imul
mov
mov
jae
shll
popf
pop
add
jmp
notb
add
cwtl
jge
adc
lds
lods
fmuls
cs
insl
lods
dec
dec
or
call
addr16
mov
jle
aam
jae
inc
xchg
inc
pop
jecxz
std
cld
push
shll
push
outsl
adc
stos
cmpsb
sub
imul
mov
push
and
cmp
test
prefetch
or
addr16
cli
fs
jge
into
hlt
lea
addl
cwtl
push
testl
in
into
sub
in
leave
pop
and
lret
push
ljmp
mov
pop
adc
and
std
lret
add
pandn
stos
pop
mov
jp
or
push
int3
xchg
sub
std
int3
les
loop
das
loopne
shr
lcall
leave
jp
fisttpl
inc
mov
int3
shlb
pop
adc
mov
push
lahf
fistpll
sub
int
lock
mov
mov
push
adc
and
mov
aaa
ljmp
call
je
add
lods
and
enter
sub
sbb
imul
jne
adc
andl
loopne
jo
xor
popa
sbb
rcrb
mov
ficoml
ret
fcomps
mov
call
xchg
aad
sbb
xchg
lods
pop
and
add
pusha
adc
lret
aas
out
in
pop
imul
adc
add
ja
int
hlt
addr16
sub
bound
push
lret
inc
jl
mov
pop
dec
mov
cmpsb
jns
scas
pop
inc
into
roll
fsubrl
sbbl
inc
pop
xor
mov
mov
inc
xchg
ret
jp
cltd
js
in
in
jge
or
mov
or
pusha
inc
rolb
mov
push
xor
adc
push
cmpsl
cmp
mov
mov
in
add
jge
out
mov
mov
push
mov
pop
or
lret
scas
dec
adc
dec
dec
xchg
cmp
ret
xchg
out
xchg
cmp
xor
leave
xchg
pop
enter
xchg
sbb
and
clc
push
jb
xchg
inc
mov
sbb
mov
int3
fwait
and
ror
lods
nop
adc
adcl
sbb
insl
mov
mov
push
add
mov
jnp,pn
dec
outsl
mov
sti
aam
push
inc
cli
aas
push
gs
cmp
mov
cmpl
fstps
fmul
xor
cli
cmp
test
sti
push
fs
inc
jb
jae
lcall
mov
xchg
into
dec
or
stc
cmp
dec
mov
insl
stos
outsl
push
addb
repnz
and
add
mov
mov
lret
mov
repnz
stos
xlat
aad
pop
jg
popa
imul
in
stos
ficoms
lret
mov
cmp
mov
adc
sbb
push
pop
sub
iret
add
mov
loop
out
cs
repnz
fsubrs
aam
mov
in
sar
test
mov
int3
into
mov
add
xor
adc
stos
mov
push
iret
dec
push
lods
sbb
aas
stos
xchg
imul
xor
sti
shlb
mov
mov
xchg
mov
mov
adc
xchg
sub
adc
fistps
jns
cs
sbb
sbb
mov
mov
leave
fisubl
stos
adc
scas
sub
jns
mov
add
fs
cli
scas
rcrl
ljmp
addb
cwtl
mov
cmpsl
inc
xor
mov
repz
jmp
faddl
inc
es
sub
xor
arpl
and
ja
rcll
mov
ss
loope
clc
cmpsb
ds
mov
mov
jg
or
aad
push
add
popf
call
scas
push
xor
loope
sbb
pop
mov
and
mov
scas
leave
das
dec
pop
or
dec
sti
mov
enter
aaa
adc
aam
enter
imul
enter
add
xlat
xchg
les
push
es
pusha
sub
xchg
mov
aas
jecxz
flds
lea
fisubrs
ja
lahf
pop
ljmp
decb
ljmp
sub
sbb
xchg
cmc
movb
imul
cs
push
inc
out
push
jecxz
nop
enter
mov
aad
loope
repnz
push
adc
test
cmp
xchg
sub
push
ror
ss
in
cwtl
inc
mov
cmp
pushf
sbb
dec
or
push
cmp
and
popf
dec
into
mov
mov
add
lds
minps
cld
xor
pop
aam
add
add
popa
loopne
scas
jo
sbb
out
xchg
sub
into
sbb
cmpsb
popf
movb
scas
std
xchg
mov
cld
pop
lcall
mov
push
xchg
lret
insl
sbb
pusha
xchg
es
roll
fisttpll
mov
push
mov
test
pusha
cld
jae
add
out
adc
ljmp
ss
enter
add
push
stc
fimull
push
outsl
test
push
cmpsb
push
jo
inc
push
dec
testb
and
xchg
adc
inc
int
adc
arpl
pop
jmp
add
and
lock
xlat
shlb
shlb
fiaddl
sbbb
fstps
push
mov
shlb
push
outsl
dec
ljmp
sub
cmp
ljmp
adc
lds
pop
push
sti
mov
movsl
stc
pusha
pushf
dec
or
jecxz
lea
adc
fidivrl
sub
pop
int
mov
in
sub
in
rcrl
imul
push
mov
dec
sarb
pop
cmp
enter
lods
push
incb
sahf
sub
jecxz
pop
jo
sti
loop
xchg
movl
dec
add
pop
imul
adc
pop
and
lret
sbb
sbb
test
xchg
nop
jmp
cmc
jno
adc
loop
dec
cmpsb
and
xor
mov
js
negl
jnp
sbb
dec
daa
ud0
sub
mov
pop
mov
jae
loopne
mov
insb
ja
and
test
test
xchg
lds
push
call
mov
cmp
push
cmp
clc
sbb
pop
jno
pushl
cmc
jbe
cmpsb
jge
xor
xor
add
aas
push
push
lods
xor
cs
enter
in
dec
adc
jnp
adc
aaa
hlt
insl
jmp
loop
jo
or
ja
cld
loopne
cltd
xor
inc
adc
cltd
mov
pop
mov
repnz
lcall
add
sbb
lea
pop
pop
push
fstpt
push
imull
sub
or
jg
push
push
mov
ljmp
mov
add
xchg
or
fs
repz
jmp
inc
stc
mov
mov
movsl
cmp
fbstp
pop
aad
xor
push
xchg
imulb
push
inc
jnp
leave
xor
or
dec
enter
mov
fiadds
jb
xchg
jno
push
lds
adc
je
faddl
test
mov
inc
xorb
push
or
cs
fidivl
out
scas
sub
and
lods
push
cmpsb
or
out
dec
jmp
xor
arpl
mov
mov
dec
sbb
mov
les
outsl
add
pushf
stos
lret
cs
jmp
and
lret
mov
daa
sar
sbb
and
xchg
repz
lods
test
mov
mov
pop
jnp
in
and
daa
repz
cmpsl
outsl
shl
or
clc
jmp
adc
dec
insl
rcll
iret
test
stc
int
pushf
xor
cmp
in
outsl
aas
lcall
dec
mov
push
dec
mov
iret
ljmp
jo
insb
xchg
or
inc
pusha
jbe
psubb
scas
call
scas
outsb
dec
jl
xchg
jb
cli
imul
in
aaa
daa
jns
test
xlat
lret
jmp
pop
call
push
adc
cmp
jae
mov
daa
int3
aad
add
cwtl
and
ss
mov
add
mov
inc
sarl
add
jne
and
fbstp
or
stos
ret
pusha
pop
xchg
popf
imul
xor
std
sbb
sub
xchg
inc
cli
ss
leave
dec
cmp
mov
test
adc
pushf
xor
mov
mov
in
les
jno
or
ds
add
xor
enter
scas
jge
push
xchg
ss
lret
push
push
cmp
dec
dec
aam
inc
push
arpl
sub
inc
add
xchg
and
outsb
inc
dec
enter
aaa
lock
mov
pop
and
test
cmp
cs
xchg
sub
xor
out
arpl
jle
cmp
jns
cld
enter
nop
loop
pop
xor
mov
loopne
shlb
xchg
sbb
fiadds
push
mov
push
jg
inc
push
add
std
mov
xchg
cmc
std
or
shll
lcall
sbb
push
sti
jnp
in
push
sbb
mov
enter
iret
std
imul
mov
into
leave
cmpsb
pop
jmp
jmp
subb
scas
rorl
sub
scas
call
jno
mov
test
xchg
jmp
xor
sarl
sub
cs
int
ljmp
gs
xchg
popf
shrb
inc
fbld
cli
fs
int3
and
push
in
gs
push
pop
jmp
xchg
lock
mov
push
shlb
popf
mov
dec
xchg
cmp
sti
shlb
insl
dec
pop
xchg
pushf
in
lock
insl
leave
addr16
mov
movsl
aad
inc
fadd
pop
jne
insb
mov
dec
test
lahf
cmpsl
sbb
test
lret
inc
mov
jmp
sub
mov
movsl
gs
add
cmovno
decl
sub
test
decl
sub
add
xchg
lock
jne
pop
or
mov
fstpt
bound
mov
jnp
push
mov
inc
stos
jne
lock
lea
and
cld
insl
cmc
outsb
popa
mov
xchg
icebp
cli
in
inc
ret
mov
test
fucomi
adc
imul
push
movsl
call
nop
sbb
push
ret
bswap
out
cmp
rolb
add
mov
and
xlat
stos
ret
mov
cld
popa
loope
stc
mov
sbb
pop
ret
jg
bound
xor
push
jb
push
imul
inc
in
mov
mov
lock
and
jo
jecxz
and
or
add
and
pop
das
sti
cmpsb
mov
arpl
jbe
fcmove
sahf
and
int
jb
add
inc
leave
sahf
add
cmp
lock
loopne
xchg
mov
repnz
ljmp
mov
sub
cs
arpl
add
imul
sbbb
lods
std
cmp
and
cli
mov
xor
inc
pusha
dec
sbb
lods
xchg
hlt
fstp
inc
sub
cmc
inc
mov
cwtl
jmp
sub
mov
mov
adc
out
inc
popf
sub
xor
jecxz
lock
jne
je
fnstcw
ds
xor
lods
jecxz
xor
mov
push
xor
pop
xor
or
mov
push
pushf
or
xchg
clc
ret
sbb
lcall
scas
xchg
ljmp
dec
jmp
arpl
xchg
cltd
int3
fcmovnu
lret
adc
jle
cld
mov
jle
push
lret
lahf
add
pop
loop
mov
mov
push
rorl
aam
dec
shl
mov
ss
mov
lds
shl
and
fldl
jmp
ljmp
xor
gs
adc
jp
lahf
lahf
lret
adc
in
rol
jecxz
jecxz
test
add
cmp
popa
insb
rcr
sub
inc
sbbb
scas
scas
ret
sbb
push
dec
out
mov
or
pop
fiaddl
ljmp
cmp
jp
pop
lods
push
andl
insl
not
dec
sub
adc
test
pop
and
push
call
dec
sahf
xchg
mov
fcompl
jno
std
pop
pop
hlt
mov
sbb
xlat
cmp
cmp
shl
rclb
popa
das
cmp
or
jp
add
outsb
xchg
mov
cltd
push
sub
arpl
mov
xor
frstor
mov
dec
inc
push
mov
dec
ljmp
mov
adcl
sbb
push
rolb
ds
and
cmp
or
sub
mov
xchg
pop
das
inc
sub
pushf
mov
add
pop
repnz
icebp
aaa
pop
fsubrs
xchg
push
xchg
push
mov
cmp
inc
cltd
add
xchg
shl
or
pop
pop
mov
mov
dec
push
pop
fwait
ja
xchg
xchg
jecxz
in
sti
xchg
push
ror
testb
jno
push
lret
mov
dec
aam
js
push
leave
or
mov
in
cmp
mov
adc
cmp
out
icebp
bound
sbb
jecxz
jno
call
sbb
fldpi
clc
sub
pop
inc
fstpt
popf
push
pop
push
push
sub
movsl
imulb
adc
dec
shl
jle
cmpl
call
xor
arpl
or
out
loope
pop
test
cmp
or
jns
dec
cmp
pop
out
xor
ltr
cmc
sub
insl
arpl
xlat
mov
shrb
adc
dec
fcompl
in
mov
subl
test
sahf
mov
or
mov
mov
sahf
in
xchg
lods
mov
inc
sbb
cld
adc
enter
push
cltd
mov
pop
ret
cmpsl
es
dec
jno
orl
mov
ljmp
cmpsl
cmpsb
jge
imul
lods
and
lods
bound
mul
paddsw
dec
sub
or
movsb
mov
nop
imul
cli
imul
aaa
xchg
xchg
add
jge
aaa
and
dec
inc
push
mov
xchg
bnd
push
into
add
mov
test
fimull
cwtl
sar
or
jecxz
add
out
or
test
push
imul
fmull
xchg
lods
inc
mov
lds
jmp
fisttpl
sarl
dec
sub
push
add
rclb
into
shlb
xchg
dec
adc
and
cmp
das
pop
mov
mov
stos
adc
jmp
cld
sbb
or
stc
repnz
lock
xchg
stc
mov
into
loop
fsubl
mov
xchg
pusha
add
call
xchg
movsl
push
sbb
aas
cmp
stos
mov
push
and
jbe
xor
sub
xchg
adc
adc
mov
fsubs
sbb
repnz
mov
xor
into
jg
jle
loope,pt
xchg
add
das
lods
jg,pn
icebp
fcoml
adc
push
mov
and
arpl
int3
pusha
inc
push
pcmpgtw
pop
ret
jno
loope
cli
adc
add
push
pop
negl
std
xchg
mov
pop
push
pop
clc
fsin
mov
rcll
adc
cmpsb
add
enter
sbb
insl
pop
jae
push
jnp
cwtl
test
int
ja
call
arpl
je
add
imul
push
sbb
mov
sub
xchg
jae
dec
sub
mov
adc
int
adc
into
sbb
outsl
add
sbb
out
jl
cmp
push
inc
out
or
mov
popf
mov
fs
ret
outsb
out
mov
enter
xchg
lds
sbb
pop
cmp
cld
pop
mov
mov
inc
sub
cmpsl
ds
mov
stos
jecxz
pop
mov
mov
mov
repz
pop
adc
adc
cmp
xor
mov
pop
fsubl
jle
les
mov
scas
fs
paddw
sub
ret
mov
sub
or
mov
xlat
push
jo
mov
pop
lods
jecxz
jl
inc
push
jge
and
js
enter
aam
fldcw
cld
mov
ljmp
std
xchg
inc
xchg
dec
push
mov
fbstp
das
push
lods
jo
inc
pop
adc
cld
outsl
clc
pop
push
out
mov
int
add
aam
push
pop
or
idivb
mov
test
cwtl
and
outsl
iret
arpl
push
lcall
xchg
add
call
cmp
inc
lods
fwait
stos
adc
popa
movsb
xchg
push
cmpsb
ret
into
sub
gs
sahf
xor
rorl
inc
insb
mov
jmp
xor
daa
dec
dec
jecxz
inc
sti
testl
pushf
mov
mov
shlb
out
xchg
or
xchg
or
lds
stc
add
adcl
mov
jo
enter
push
mov
jno
mov
cmpsl
fistpl
sub
adc
insl
sub
push
into
scas
ret
cmp
daa
cmp
mov
movsb
or
dec
loope
xchg
outsl
dec
add
mov
out
xchg
add
lods
sti
pop
jmp
xchg
xchg
scas
jl
fisubs
int
cmp
cli
in
stos
or
xor
subb
mov
jae
stc
enter
mov
jns
decl
adc
xchg
incl
daa
mov
bnd
push
push
jo
add
and
add
mov
mov
out
push
mov
jecxz
pop
jne
pop
aam
jmp
jae
movsb
fnsave
sub
push
ret
das
lods
cmp
in
inc
daa
add
or
cmp
imul
adc
pop
imul
and
jmp
dec
shr
push
jg
mov
divb
jns
fcmovnu
lret
mov
int3
jg
inc
in
sbb
int3
orb
and
sbb
adc
int3
ss
lahf
dec
push
pusha
loope
mov
inc
push
orb
mov
orb
stos
orb
in
jnp
push
mov
xchg
pop
inc
mov
leave
or
xchg
aaa
movsb
mov
mov
mov
sub
push
push
mov
pop
xchg
mov
add
mov
iret
movsl
test
stos
inc
dec
pushf
cmp
mov
mov
sti
stos
andl
aaa
mov
mov
inc
in
push
jns
jmp
and
mov
insb
cmp
push
fcmovbe
lds
js
popa
divl
jb
xchg
xchg
pop
or
fistl
or
mov
data16
pop
xchg
pop
push
jae
xchg
push
mov
in
dec
dec
lods
cmc
jge
push
cmp
fcompl
adc
aas
rcr
mov
mov
mov
sub
ds
inc
xor
mov
push
push
add
ds
pop
dec
add
pop
testb
xorb
shlb
testl
inc
daa
shrb
imul
ret
paddsb
mov
pop
fs
cmp
mov
dec
stos
and
adc
mov
jo
loopne
jo
jae
sub
mov
scas
pop
mov
mov
sub
insb
neg
mov
cmpsb
adc
in
cmp
and
push
fcomps
leave
out
out
pop
inc
cld
jbe
xor
jmp
jecxz
pop
add
inc
dec
jp
scas
xlat
arpl
fwait
movsb
sbb
movsb
das
es
dec
les
adc
pushf
and
lcall
lret
iret
and
push
fnstsw
or
dec
leave
ss
adc
out
push
mov
inc
xor
pop
pop
aam
ja
pop
xor
mov
mov
inc
loopne
cmp
loope
in
pop
loop
jns
jge
iret
push
inc
push
jl
push
inc
lods
cs
shll
mov
outsl
mov
dec
out
cmpl
outsl
les
mov
mov
stc
imul
dec
jp
inc
mov
mov
sub
xchg
cmp
push
in
pop
push
bound
cs
push
aaa
xor
gs
xor
push
fwait
repnz
hlt
ds
hlt
les
mov
xchg
mov
cwtl
fldenv
sbbl
adc
jno
jne
gs
popa
js
push
or
push
mov
or
jmp
fwait
push
push
mov
movsl
cld
fucom
jge
dec
lahf
xorb
mov
lds
scas
mov
sub
loopne
push
sbb
adc
dec
xchg
loope
fsubr
xor
leave
cmc
lods
aas
dec
das
into
add
pop
movsb
iret
mov
jne
push
mov
jp
inc
js
pop
sahf
ret
add
jbe
or
lds
cmpsl
or
ret
add
inc
icebp
inc
adc
subl
sub
jnp
mov
ljmp
cli
dec
dec
mov
jl
fwait
imul
sub
arpl
jno
push
pop
mov
sub
sahf
mov
ljmp
loopne
clc
push
outsl
cld
sub
inc
pop
cld
imul
icebp
fnstenv
pop
dec
popf
icebp
sbb
ljmp
lret
mov
imul
and
mov
pop
cmp
inc
loop
mov
bound
jae
pop
mov
and
dec
cwtl
mov
cwtl
xlat
clc
xchg
test
nop
fs
mov
fisubrs
mov
inc
lret
xor
dec
sub
faddl
pusha
pop
pop
push
push
or
fnsave
jmp
test
push
push
mov
jle
inc
sarb
ret
xchg
stos
lret
decb
cs
fnstsw
dec
mov
or
aaa
in
int
jne
das
dec
iret
sti
mov
xchg
push
xchg
or
mov
mov
enter
mov
dec
push
ret
xchg
addr16
mov
pop
lret
jo
push
insl
xor
into
mov
mov
or
and
bswap
sbb
clc
and
repnz
mov
iret
call
dec
sbb
test
adc
add
fs
test
pop
nop
xchg
pop
push
insl
enter
enter
stos
popa
loop
les
cli
xchg
sarl
fcmovu
icebp
inc
inc
movsl
push
push
and
push
ljmp
ficompl
add
inc
pop
dec
push
xchg
insb
movsl
adc
mov
add
popa
mov
sahf
mov
int
icebp
sahf
int
and
fstpt
jg
cmp
pop
jb
loope
pop
pop
xor
int
mov
int
dec
sahf
push
add
mov
mov
ret
mov
mov
xor
insl
jge
call
imul
clc
fwait
loopne
xchg
call
js
stc
outsb
push
jne
popa
cmp
dec
fmull
pop
int3
lret
dec
xchg
push
pop
xlat
inc
lock
xchg
sbb
dec
ja
je
cmp
mov
repnz
mov
cwtl
pop
aaa
dec
cmpsb
scas
in
push
testl
addl
dec
mov
ss
je
aam
insl
pop
adc
inc
xchg
movsb
int
sbb
push
scas
fcomi
pop
inc
sub
cli
push
repnz
xlat
mov
call
jno
sbb
mov
fdiv
mov
pop
cmc
adc
xchg
push
into
push
mov
cwtl
inc
in
mov
movsb
add
lret
add
adcb
sub
les
cld
outsl
mov
inc
jbe
xchg
jle
mov
jb
jo
and
int3
addr16
mov
dec
dec
sub
cmp
push
xlat
stc
shrb
lock
mov
cmp
mov
dec
jne
clc
xchg
sahf
stos
or
jle
mov
push
nop
adc
xor
iret
fimull
mov
outsl
aaa
addr16
mov
out
out
pop
add
mov
lock
ficoml
in
sarl
sub
and
cmp
shlb
hlt
lds
mov
push
fs
cli
lods
mov
mul
jg
repnz
mov
addr16
movsb
into
pop
mov
jbe
les
in
addr16
mov
and
mov
pop
sti
lods
mov
cmc
stos
mov
cld
jecxz
push
outsl
rcll
stc
dec
push
mov
jnp
shrb
push
push
test
or
fsubr
dec
dec
shr
jnp
adc
stc
sbb
pop
mov
xlat
jmp
out
ss
arpl
push
fucomip
mov
iret
add
pop
lret
mov
mov
mov
rcrl
mov
sbb
add
jns
fdivl
iret
dec
or
mov
scas
call
mov
test
nop
mov
mov
lock
adc
testl
inc
xchg
cwtl
sbb
iret
cmp
sub
sub
pop
jge
sbb
outsl
lcall
add
cmp
xorb
fwait
push
inc
add
sbb
jo
scas
cltd
imul
sub
insb
aad
repnz
ret
push
aas
cmpsl
jecxz
dec
sbb
mov
test
mov
or
lret
iret
inc
test
and
pop
in
xchg
lahf
lcall
inc
inc
mov
push
roll
sub
mov
js
rclb
in
mov
loopne
das
loopnew
ljmp
outsb
dec
cmp
and
xor
mov
inc
sub
adc
outsl
xor
fidivrl
insl
ljmp
xor
mov
and
add
int
test
lret
int
jg
push
popa
fs
dec
cld
mov
xchg
jns
cli
mov
and
cmc
jno
adcb
test
data16
pop
cmp
cmp
decl
outsb
mov
cmp
mov
fs
stc
add
stos
movsb
cmp
cmp
cmp
in
out
pop
inc
xchg
lahf
xor
pop
xlat
insb
movsl
jbe
pop
xchg
or
int
sub
jl
das
pop
roll
inc
push
lods
loope
sarb
loopne
bound
pop
es
js
stos
push
add
les
jb
out
sub
adc
stos
mov
add
fists
hlt
xcrypt-cbc
cmpsl
roll
stos
je
rcrl
idiv
cltd
sti
repnz
addb
fistl
pushf
dec
or
xchg
jmp
inc
push
leave
clc
cmp
movb
popf
mov
adc
stos
outsb
mov
mov
ss
hlt
cmp
stos
negl
cmp
sbb
jo
ret
cwtl
cmc
or
push
adc
dec
outsl
imul
push
into
outsb
lea
clc
stos
jecxz
push
fstps
aam
mov
dec
or
jg
adc
dec
in
and
lock
lds
mov
fcoml
push
ljmp
push
xchg
sbb
mov
test
xchg
nop
outsb
lea
aad
cmp
rorb
inc
inc
ss
dec
fs
mov
lcall
and
lcall
xchg
mov
addb
orl
xchg
and
sub
pop
and
pop
jae
clc
and
stos
jne
mov
ret
arpl
fldcw
scas
test
ret
je
or
lcall
cltd
call
adc
nop
pop
mov
dec
ret
sbb
dec
ret
adcb
cmp
jb
sbb
flds
fwait
xchg
mov
fnstenv
and
movsb
xchg
test
pop
mov
jno
test
mov
hlt
inc
in
andb
daa
jmp
adcl
push
nop
mulb
xor
mov
es
iret
xor
mov
adc
scas
sbb
mov
adc
mov
jno
mov
cwtl
xor
and
mov
rol
mov
mov
mov
pop
xchg
stos
push
in
out
jnp
insl
movsb
test
mul
mov
aam
popa
stos
pop
stc
adc
sahf
push
cmp
fs
out
imul
stos
addr16
push
gs
sahf
orb
arpl
into
es
dec
jl
xchg
lods
dec
sarl
adc
pop
int3
fildll
movsl
xchg
mov
add
shr
mov
or
sub
dec
cmpsl
gs
push
in
mov
sub
out
cld
ss
inc
movsl
test
jge
hlt
add
lret
in
push
cltd
xor
lret
inc
mov
clc
push
push
sbb
push
ds
stc
xchg
jae
popf
push
dec
jbe
cmpsl
insb
and
mov
or
jbe
scas
loope,pt
push
inc
fldt
cmp
cmp
test
mov
xlat
notb
shll
les
leave
push
sbb
xor
xchg
aad
lods
in
rcrl
mov
adc
cmp
inc
mov
add
in
hlt
test
jecxz
push
mov
fiaddl
xor
xchg
xor
leave
pop
dec
adc
pop
sbb
cmp
insl
fisubl
mov
xchg
repz
mov
lret
out
ljmp
push
lea
popf
jns
fisubrl
jmp
lods
into
jl
jbe
ds
test
ret
lret
inc
fcompl
popa
sahf
mov
bound
testl
jo
push
js
out
enter
subb
add
sbb
sbb
dec
mov
inc
inc
xchg
pop
push
jne
cwtl
inc
mov
popf
xor
insb
in
cld
out
sbbl
lods
out
out
aam
lock
jle
sahf
cmpsb
lahf
jae
sub
or
ds
jp
gs
out
inc
push
cmp
cltd
jne
daa
xchg
into
xlat
inc
mov
es
outsb
shlb
mov
shlb
jl
xchg
sub
pop
cmp
addl
decl
mov
add
popa
aad
mov
dec
ret
mov
mov
popa
hlt
lods
cmp
sti
insb
dec
cmp
jne
xlat
rolb
popa
add
jecxz
inc
out
in
shrb
loope
in
jb
jle
pushf
or
mov
divl
insb
or
mov
mov
xchg
pop
sbb
sbb
xchg
data16
jno
dec
adc
mov
scas
cld
pop
push
sbb
jecxz
dec
mov
xchg
mov
push
or
js
hlt
jmp
sbb
jne
aaa
les
rep
cli
test
cli
mov
xchg
mov
push
pop
pop
hlt
pushf
sbb
push
gs
dec
ret
out
leave
push
lret
and
xchg
outsb
pop
scas
pop
mov
ja
push
aas
sbb
xor
cld
addr16
sub
or
dec
mov
ret
lods
add
sub
mov
loopne
and
xorl
mov
hlt
xor
cmp
int3
mov
popf
mov
decl
pop
jae
mov
sbb
adc
or
adc
stos
sti
adc
jo
pop
dec
repz
dec
cmp
iret
dec
loop
aaa
clc
movsb
mov
adc
jg
mov
mov
rcrb
cmpsl
push
push
inc
add
cli
mov
pop
outsl
sbb
jae
mov
shr
and
jmp
pop
xor
test
adc
lret
imul
jno
not
bound
xchg
pop
push
mov
repnz
pop
and
mov
in
xchg
shlb
push
add
dec
jno
out
imul
cmp
mov
icebp
or
repnz
imul
test
incl
shl
inc
lock
and
or
aam
jle
or
stc
adc
test
into
in
hlt
push
jl
jo
pop
gs
imul
pop
clc
stos
addr16
outsb
add
sub
mov
jne
std
movsb
stos
inc
daa
jle
add
mov
cmp
cmp
jmp
mov
pop
add
rcr
mov
cmp
dec
pop
dec
ret
dec
xchg
lcall
stos
xchg
inc
js
inc
or
loop
or
mov
xor
jl
into
jb
sub
out
cmp
call
hlt
sarl
mov
icebp
push
xor
mov
and
adc
jo
or
xchg
mov
mov
xchg
fsubrp
sbb
jmp
jge
pop
pop
or
sbb
inc
sbb
mov
lea
push
sbb
mov
and
ret
mov
filds
lcall
fucomp
int
push
xchg
lret
xor
imul
jns
jp
cmpsl
sub
loopne
sub
iret
cltd
fwait
or
paddusb
jnp
add
iret
imul
hlt
jl
add
cmp
roll
bswap
xchg
subb
cmp
ljmp
adc
cli
pop
adc
jle
insb
popf
popf
cmp
cmp
jne
xlat
stc
mov
jo
push
cmp
popa
lock
cmp
add
dec
cmp
int
jl
mov
out
mov
rclb
pop
leave
ja
ds
sub
adc
jle
leave
lea
xor
jnp
push
cwtl
jnp
icebp
or
mov
js
mov
fs
xor
and
lds
fisttpl
and
les
sbb
mov
repz
hlt
xchg
cmovnp
out
fcoml
sbb
mov
dec
sbb
in
jecxz
push
insb
jae
push
cli
mov
mov
int3
sahf
pushl
sub
inc
lds
push
or
cmp
sbb
mov
das
outsl
sbb
mov
push
xor
outsb
sbb
push
jmp
and
bnd
adcl
sahf
sbbb
loopne
nop
bnd
std
inc
jb
add
pusha
cli
inc
adc
push
cs
pusha
cwtl
dec
and
cmp
enter
mov
pop
cmp
xchg
mov
mov
out
mov
cmp
add
inc
aas
nop
dec
test
pop
mov
push
push
pop
insb
and
mov
loopne
inc
fmul
bound
test
xchg
mov
and
lods
bound
jbe
iret
dec
mov
jae
js
sub
ret
sbb
movsb
sub
ficompl
ljmp
or
push
int
fistpll
stos
scas
outsb
adc
in
cs
xchg
lcall
add
leave
clc
xor
repnz
adc
loop
sbb
fs
mov
call
cmp
sub
mov
push
fsubp
mov
or
mov
decb
les
shlb
push
mov
or
xchg
mov
and
add
das
xchg
inc
xlat
mov
inc
sti
cltd
lcall
fs
lahf
sbb
xchg
lret
inc
cltd
js
dec
jge
push
xchg
lcall
xchg
pop
mov
repnz
push
xor
js
inc
loopne
pop
add
cmp
sbb
icebp
aaa
jae
xchg
push
jae
mov
sub
out
or
ja
inc
or
mov
dec
pop
ss
push
and
pop
fstl
out
les
pop
or
jne
mov
push
loope
jle
sarb
cwtl
scas
repnz
ds
and
divl
fisttpl
push
pop
stc
jae
cmp
outsl
push
stos
xchg
cmp
xchg
pop
adc
call
bound
jmp
and
cmpsl
jmp
arpl
jg
pop
dec
repz
add
xor
push
mov
xchg
cmp
fisubrl
or
pop
enter
mulb
pop
pushf
pop
idiv
fsts
dec
aad
repnz
push
cld
pushf
sub
bound
ss
adc
pop
out
lret
push
or
add
testb
or
cltd
in
repnz
fildl
mov
jno
inc
sarb
cmp
mov
xchg
sub
jg
push
and
mov
mov
sub
mov
test
pop
cwtl
loop
dec
sbb
es
scas
push
pop
push
mov
adc
loopne
mov
xchg
adc
out
fisubrl
insb
push
dec
xchg
imul
mov
sub
dec
in
icebp
sbb
dec
test
inc
subb
rolb
mov
out
inc
pop
jae
fistpl
sbb
faddl
push
addb
xchg
hlt
push
add
ja
adc
cld
xor
iret
rcll
pop
mov
or
inc
cmp
jge
and
dec
xor
inc
movsb
xlat
pavgb
cmp
and
into
sbb
mov
xchg
bound
push
pop
mov
ja
dec
ror
mov
cmp
pusha
daa
cwtl
or
cmp
xchg
cmpsb
mov
mov
mov
mov
shl
and
and
movsb
in
push
fistps
mov
ss
sub
cmpsl
adc
shlb
adc
mov
xor
xor
scas
sti
mov
lret
rcl
cmp
pop
push
dec
push
pop
ret
jno
or
sub
lock
leave
shrb
or
ja
out
mov
and
xor
outsb
xlat
fdivrs
out
test
xor
jle
sub
sub
sbb
lock
mov
and
ds
mov
and
xchg
movsb
push
xchg
push
push
mov
stc
enter
test
sub
add
scas
push
xor
cwtl
test
jecxz
mov
xor
lods
mov
mov
and
and
mov
data16
add
test
gs
inc
cld
or
pop
push
fadds
js
movsl
pop
fwait
loopw
out
test
int3
pop
clc
rorl
divl
cmp
fldl
cld
je
stos
xchg
mov
xchg
shll
push
sahf
fistl
decb
add
mov
int
sar
sub
pop
fsubl
mov
cmpsb
mov
aam
and
rclb
push
xchg
aaa
sbb
movsl
cmp
adc
pop
jne
int3
popa
incl
int3
in
shlw
fwait
lods
cltd
sub
push
icebp
out
mov
dec
das
fnsave
dec
enter
aaa
call
pushf
out
fldt
cmp
xor
dec
pushf
or
adc
xchg
push
inc
je
and
push
inc
stos
xor
fildll
sbb
popa
sub
and
lock
pop
lret
jmp
rcrl
inc
mov
ret
movsb
gs
inc
repnz
out
orb
jo
test
pusha
sahf
subb
clc
cmp
fsubrs
push
push
xor
in
xchg
or
ret
xchg
pop
or
jg
and
out
xchg
enter
out
bound
inc
pop
aaa
dec
ja
xor
mov
enter
mov
xor
lock
jne
jo
xor
jne
outsb
dec
pushf
dec
mov
add
cwtl
stos
cmp
pop
jb
in
adc
mov
pop
cli
push
stc
and
arpl
mov
aam
jae
cmp
push
addl
fwait
rol
clc
test
stc
and
test
out
test
stos
imul
jge
pusha
sahf
loopne
icebp
enter
xchg
mov
mov
or
mov
cmpsb
sub
push
push
xor
test
fs
inc
jmp
pop
inc
sbb
icebp
cwtl
inc
shlb
gs
adc
push
pop
cli
cmc
outsl
inc
insb
sub
push
notb
outsb
adc
adcb
jg
xchg
aad
rorl
daa
mov
xlat
sbb
inc
mov
pop
outsb
sti
adc
cmpsb
inc
movsb
pop
ret
loope
pop
leave
jae
js
shrl
mov
xor
mov
daa
dec
test
pusha
call
sub
lar
out
dec
or
mov
push
inc
sahf
bound
mov
rcl
sbb
cmpsb
cs
lods
mul
and
sub
mov
ds
inc
ret
lods
push
push
ret
out
daa
dec
pusha
and
cli
nop
xlat
mov
stos
daa
mov
dec
andb
pop
call
in
jnp
inc
jno
mov
jp
fwait
negl
add
mov
push
cwtl
int
jle
cmp
sub
push
pop
dec
lret
pop
and
jg
fdiv
mov
sub
enter
out
adc
shll
fists
scas
mov
xlat
jp
rol
mov
lahf
dec
insb
xor
aad
push
mov
lahf
lcall
mov
add
jbe
sbb
fadds
inc
xchg
pusha
out
inc
rclb
sub
mov
add
cmpsl
mov
mov
sub
lahf
dec
jge
insb
roll
cmp
clc
test
push
or
andl
aas
pop
xor
push
iret
ret
ret
dec
insb
roll
ds
pop
lods
xchg
inc
adcb
jb
sti
dec
jae
ret
movsb
fwait
bnd
push
pop
push
adc
cmp
ljmp
and
movsb
arpl
fs
push
and
xor
mov
mov
pop
cmpl
sbb
mov
movsb
cltd
xor
jmp
loope
rcrb
cmp
mov
push
xor
iret
aad
sub
imul
mov
aaa
imul
lods
lods
jmp
pusha
adc
push
cwtl
in
insl
xchg
jmp
lahf
add
push
shl
lahf
jmp
in
dec
push
dec
loopne
movd
push
fsubp
jno
movsl
add
jae
mov
popa
repz
xchg
mov
cmpsl
call
mov
fiaddl
mov
cmp
dec
sbb
daa
or
inc
and
xor
scas
dec
inc
adc
lret
push
loop
adc
adc
and
pop
cmpsw
pop
not
fbstp
fsts
adc
data16
arpl
xchg
pop
inc
and
lcall
scas
shr
mov
outsl
xchg
mov
mov
sub
daa
lcall
jo
cmp
fildl
dec
mov
push
jbe
jle
or
fldl
and
mov
xchg
bound
jge
scas
push
shrb
mull
adc
fdivr
lcall
imul
dec
incl
jmp
or
test
bound
jge
ja
cmp
or
cli
ja
sahf
bnd
sbb
or
add
jle
sbb
mov
sub
repnz
mov
aas
jmp
arpl
arpl
cmp
inc
pop
mov
dec
sahf
jo
mov
jecxz
lcall
mov
out
ret
test
mov
andb
lea
cmp
mov
pop
stc
sub
xchg
out
xor
jnp
out
test
mov
push
aad
dec
push
mov
ja
dec
lret
mov
sub
lcall
pusha
stos
sub
cmp
out
lret
xor
mov
int3
or
inc
cmp
and
lds
push
fildll
xor
mov
dec
sbb
iret
push
stos
add
cmp
sbb
xchg
shl
pop
andb
xchg
and
push
cmp
push
rcrl
hlt
iret
mov
lea
xchg
icebp
and
cmp
add
push
imul
fstps
or
adc
mov
aaa
inc
sub
call
scas
xchg
nop
neg
out
pop
xchg
sti
iret
pop
lea
xchg
push
sbb
cwtl
mov
add
xchg
repz
sbb
add
add
or
sbb
or
fdivrl
and
or
aaa
sub
rclb
or
fsubp
and
aad
xor
jb
out
mov
push
or
js
push
test
sahf
jge
in
hlt
in
mov
inc
mov
cmpsl
and
decl
aaa
lahf
adcb
mov
ret
enter
pop
push
xorl
mov
adcl
inc
jg
pop
cmpsw
push
mov
fs
popf
popl
xchg
insb
fsubs
sub
scas
lods
dec
inc
mov
cmp
xchg
and
sbb
fcom
jle
adc
xchg
jg
sbb
xchg
add
xchg
ds
jmp
mov
ja
imul
add
add
fsubp
sti
jnp
dec
mov
pop
clc
cmpl
lods
out
cmc
pop
inc
sti
sub
ret
dec
jae
sbb
mov
gs
inc
daa
sti
cmp
pop
fdivrl
out
rcll
ss
testl
mov
lcall
adc
sub
fildl
je
xchg
mov
cmp
inc
sub
out
lods
std
jecxz
enter
rep
push
dec
sub
sti
test
mov
pop
xchg
xlat
cmp
pusha
pop
leave
int3
cli
or
ret
cld
push
aas
mov
pop
rolb
push
mov
in
mov
cmpsl
add
aaa
jecxz
xor
mov
cld
jl
mov
pop
fs
cmpsb
unpckhps
dec
xor
xor
popa
pop
pop
cmp
clc
inc
jnp
movsb
movsl
xchg
aad
add
das
shlb
push
ja
adc
mov
pop
jl
ja
and
jg
push
xchg
ret
insb
dec
fdivl
cmp
imul
or
sbb
shrb
sbb
test
addb
and
out
dec
movb
imul
in
gs
jmp
lods
xor
jl
scas
mov
call
sti
cmp
or
xor
stc
xor
cwtl
out
add
stos
lods
testl
mov
pusha
aaa
or
jno
mov
mov
inc
push
mov
addr16
push
ficoml
jg
ja
filds
scas
add
add
movsb
shll
insl
aaa
aas
or
sub
mov
addr16
xor
xor
fisubrl
mov
lods
sbb
dec
mov
roll
push
add
sub
int3
jge
addr16
mov
sbb
inc
adc
testl
hlt
pushl
mov
cwtl
mov
out
pop
pusha
pop
insl
mov
mov
push
jne
mov
dec
mov
pusha
jae
push
pop
scas
add
mov
inc
mov
pop
and
sub
in
inc
in
push
repnz
lock
popa
vmread
movl
in
loopne
push
fbstp
sbb
cmpsb
lea
test
lds
in
je
push
insl
sbb
xor
xchg
dec
lock
mov
sbb
cwtl
negl
out
jo
cwtl
movsb
mov
add
clc
jae
xchg
pop
mov
mov
outsb
gs
insl
inc
and
add
mov
lret
std
into
mov
mov
shlb
add
mov
cmp
hlt
icebp
push
push
sub
lds
fs
repz
jo
pop
dec
mov
orb
je
std
adc
and
sbb
stos
adc
loope
xlat
js
and
inc
mov
test
mov
jmp
test
ja
pop
lds
divb
mov
add
clc
shrb
add
adc
repnz
xor
cmp
addr16
push
sub
stc
shrl
ds
incb
pop
xor
sub
fistps
mov
adc
push
lret
hlt
arpl
sarb
cmp
clc
pop
mov
push
out
mov
mov
and
js
mov
lea
xchg
pop
sbb
mov
adc
mov
jo
incl
fsubrl
mov
and
fstps
add
repz
fiadds
out
movsb
inc
push
mov
sar
mov
mov
add
pop
xchg
mov
test
jl
icebp
andl
inc
push
push
push
jle
push
enter
jg,pt
inc
inc
push
cmpsl
out
std
and
xor
sti
pushf
adc
add
aam
xchg
push
cmp
inc
repz
jmp
xchg
mov
adc
stc
sbb
sar
sub
pop
scas
xor
sub
movl
inc
fdivrp
jnp
sbb
adc
rcll
mov
jg
and
test
hlt
pop
mov
daa
out
stc
jle
xchg
sahf
or
and
mov
dec
jno
xor
fisttps
js
mov
shrl
pop
sbb
xchg
mov
mov
repz
packsswb
pop
or
pop
lods
dec
fistps
mov
popa
shrb
mov
adc
adc
testl
sbb
fs
paddb
inc
out
ret
xor
mov
cmp
dec
sbb
pop
flds
shll
xchg
push
jge
fs
lcall
int3
aad
in
insb
jl
sub
js
cmpsl
repz
push
mov
cli
jecxz
mov
add
or
insb
sbb
cmpb
push
mov
mov
fnstsw
shl
jbe
test
bound
outsb
cmp
or
call
clc
lods
out
outsb
pop
std
gs
test
lea
dec
repnz
jp
bound
sub
xor
loope
stos
mov
mov
push
and
inc
and
mov
ret
addr16
jecxz
cwtl
rorl
outsb
cmpsl
adc
pop
out
rcrl
pop
lahf
aam
add
xor
dec
sub
repnz
xor
mov
bound
pop
das
pop
repz
dec
cwtl
dec
pop
stos
push
insl
call
xchg
subl
push
scas
in
pop
xor
outsl
and
and
movsb
push
fidivrl
inc
add
xor
stos
push
out
filds
lock
cli
push
stc
jl
movsl
fdiv
scas
jns
cwtl
jae
dec
dec
pop
stos
mov
push
shl
jbe
shrl
out
xor
mov
out
dec
aas
paddsb
roll
mov
dec
push
mov
std
and
sub
dec
test
sti
sbb
test
adc
push
fsubrp
stos
jne
stc
mov
lret
inc
mov
ljmp
insb
push
adc
sbb
insb
test
lcall
movsb
popf
shll
push
ljmp
adc
mov
in
jne
jb
push
stos
cmp
mov
sbb
popa
dec
pusha
jmp
pop
mov
jns
push
nop
ja
pop
movsl
mov
cs
xchg
lods
outsl
and
ljmp
outsl
jge
mov
dec
lret
pop
xor
push
testb
lahf
mov
sbb
jae
mov
or
sub
sbb
add
push
cmp
cmpb
xchg
loope
mov
xlat
cmp
icebp
dec
dec
adc
mov
fmulp
pop
and
pop
iret
adc
cmp
cmp
adc
lret
cmc
push
adc
jo
ljmp
adc
shlb
lcall
in
xchg
mov
bound
popa
lea
or
push
or
ja
imul
mov
or
inc
inc
test
cmp
dec
xchg
mov
js
xorl
jmp
repz
xlat
mov
inc
xor
mov
dec
cmpb
gs
push
in
sub
xor
outsl
out
fcomi
leave
inc
cmp
in
movsb
cs
lcall
sbb
popa
xor
pop
xchg
push
and
into
fsts
stc
stc
cli
xor
xchg
ja
lahf
sbb
test
mov
cmpl
adc
lret
jmp
and
jp
cld
outsb
push
or
cli
add
push
fdivrp
loopne
adc
dec
pop
push
das
insl
lret
test
std
ja
xchg
pop
imul
jne
fbld
lds
cltd
cld
scas
test
inc
sbb
out
cmpl
xchg
pop
cmp
xchg
movsb
imul
inc
aad
sbb
jmp
mov
pop
jb
sub
es
cmp
or
jge
ljmp
mov
lahf
pop
and
or
mov
mov
inc
sahf
xchg
shll
add
fsubr
sub
sub
push
in
aas
jle
jmp
and
mov
jle
xchg
sbb
sbb
rorb
fs
mov
iret
into
sti
inc
sub
cmp
fidivs
xor
sarb
or
rorl
pop
and
sbb
dec
jp
pushf
lret
push
dec
sbb
adc
dec
xchg
pop
cmp
imul
cmp
hlt
mov
mov
xor
add
adc
cli
dec
out
aad
imul
jb
ljmp
ss
xchg
mov
pusha
sti
testb
xor
leave
mov
and
lret
cltd
jle
test
inc
cmpl
nop
mov
and
inc
fsubs
aaa
inc
mov
cwtl
xchg
in
shlb
fiadds
fwait
cmp
sub
aad
js
pop
test
mov
lcall
mov
fs
rorl
lock
mov
ret
sbb
or
dec
insl
fs
pop
loope
push
jle
jae
notb
clc
jle
imulb
mov
lea
xor
mov
mov
xor
adc
sti
daa
push
push
xchg
xor
outsl
sub
sbb
xchg
mov
lret
mov
in
cmp
nop
lret
lret
ja
xor
mov
sub
xor
or
mov
dec
lods
in
in
movsl
ds
push
scas
addb
mov
les
xchg
xchg
cmp
xchg
roll
jbe
divb
aad
cmpsl
pop
loope
xchg
icebp
push
arpl
sub
push
add
and
fcmovnbe
jmp
pushf
inc
mov
mov
jmp
in
rcl
xor
mov
adc
push
cli
jecxz
pop
ja
jne
mov
xor
mov
or
andb
test
iret
inc
inc
xchg
push
inc
adc
movsl
in
cmp
mov
pop
xchg
dec
dec
and
jns
or
mov
push
xlat
fsubrl
sbb
or
out
jmp
push
sbb
dec
mov
mov
scas
push
je
push
sub
mov
lret
mov
cmp
mov
cmpsl
pop
mov
test
aam
test
push
popa
xchg
and
add
test
sahf
and
pusha
adc
call
xor
in
xor
adc
ss
filds
jbe
mov
sbb
jnp
mov
sub
or
popf
cmp
fidivl
jb
and
jp
or
test
cmp
lods
adc
sub
push
aas
shrl
shl
dec
in
mov
sbb
je
and
mov
mov
out
inc
mov
xor
inc
cmp
cwtl
mov
sbb
jg
pop
das
jmp
xchg
pushf
outsl
mov
std
push
jnp
mov
nop
divb
into
mov
xchg
lcall
cltd
cmc
and
mov
pop
stc
loope
or
ljmp
lret
lods
push
push
adc
sub
mov
mov
push
sbb
xchg
mov
inc
pop
sub
shll
push
aam
out
in
sahf
push
sbbl
jg
xor
cmp
xlat
sarl
lcall
or
or
push
dec
sub
insw
sbb
fsubp
inc
data16
mov
jl
mov
addl
fs
jge
mov
sbb
cmp
mov
adc
mov
aaa
or
movsl
mov
mov
ret
jbe
add
and
fwait
add
push
dec
loope
pop
jle
repz
call
gs
xchg
jno
lock
and
test
test
pop
mov
notb
pop
jae
or
push
push
ret
ret
iret
scas
flds
rcrb
mov
mov
mov
push
shl
loop
into
fsubl
mov
push
push
add
mov
sbb
add
js
enter
mov
rol
mov
xor
add
in
fdivrp
cli
sbb
mov
ja
std
pushf
push
pop
adc
xchg
popf
xor
fstpl
insl
pushl
pusha
pop
gs
clc
iret
sbb
add
and
cmp
jae
add
mov
lcall
dec
sti
or
xor
movsl
lods
inc
and
push
scas
adc
int
add
loope
push
lods
xchg
or
and
push
adc
or
mov
scas
xchg
into
inc
xor
and
jl
mov
inc
test
add
push
rorb
in
jl
and
push
mov
inc
fisubrl
loop
lea
int3
and
xor
imul
inc
in
xchg
imul
sub
mov
pop
sub
pusha
fs
pop
scas
ja
hlt
fdiv
enter
mov
xor
mov
jg
xchg
pop
cmp
ljmp
or
loop
ds
rol
add
push
jmp
lret
xchg
outsb
test
sub
push
xor
or
loop
xor
adc
jmp
xlat
xchg
cmp
mov
jae
ret
fwait
js
or
icebp
sti
mov
mov
mov
dec
or
adc
sbb
gs
jle
lods
fidivs
lods
jmp
movsl
outsl
test
dec
test
mov
push
scas
test
je
jnp
sbb
pop
jne
test
cld
push
sahf
xchg
test
ficomps
jle
xor
pop
mov
mov
lret
lds
lret
into
jns
inc
mov
cmp
xchg
or
adc
mov
jge
mov
mov
adc
cwtl
out
inc
in
mov
lret
jo
jmp
cld
fwait
jecxz
jno
or
pop
push
fsub
pusha
movsl
movsb
pop
sbb
mov
push
vpshufhw
sub
xchg
or
xor
scas
jg
rolb
out
and
mov
lock
jp
aam
lret
nop
sub
inc
fwait
jmp
jle
inc
xchg
dec
cmpsl
int3
lret
mov
fcmovu
lods
je
mov
add
xchg
popf
pushf
cmp
pop
push
outsl
pop
xor
insb
loop
sub
and
cmp
and
into
fcom
sub
xorl
pop
daa
push
je
loopne
push
mov
cmp
pop
insl
add
je
xor
pop
or
subl
mov
clc
out
fwait
push
gs
popf
xor
bound
inc
xor
jnp
xchg
pop
insl
ljmp
jb
inc
adc
fcompl
bound
inc
and
clc
pop
lcall
sahf
push
in
sub
cmc
dec
mov
pop
adc
sbb
clc
inc
repnz
jl
sbb
xor
lock
ficompl
test
out
add
cmp
addl
mov
mov
fwait
mov
sub
push
push
mov
lock
int3
fldl
adcb
sti
xor
shlb
xor
jns
outsl
xchg
ret
push
fsts
cmp
icebp
and
sub
scas
pop
or
mov
sbb
inc
add
dec
pop
ljmp
push
lret
enter
adc
repnz
or
sbb
push
loop
push
insb
inc
add
test
lods
adc
inc
out
jo
fists
fs
les
push
mov
adc
mov
loope
xlat
adc
icebp
jae
subl
aaa
out
repnz
loope
fdivr
lods
and
add
xor
imul
xor
popa
pop
or
es
ss
faddl
call
outsl
cmp
fcmovbe
adc
test
out
out
or
shlb
fcmovbe
lret
cli
mov
jb
out
sbb
push
inc
stc
sti
mov
jnp
jge
sti
popf
pusha
aas
lods
loope
mulb
int3
cmp
or
repnz
sbb
inc
lret
sub
jl
movsb
aas
js
mov
daa
cmp
adc
push
pop
aaa
jnp
bound
adc
inc
fsubrl
in
push
ljmp
or
cwtl
xchg
cmpsl
and
cmpl
lea
repz
ds
sbbb
cmp
pop
mov
pop
loope
fbstp
sarl
adc
mov
sbb
mov
pop
mov
repnz
in
jp
jle
cmc
mov
mov
call
xchg
xor
and
lahf
jno
clc
mov
aaa
ret
stc
addr16
fisubs
ror
lcall
cmc
xchg
rorb
or
push
mov
jl
stos
out
pop
xlat
mov
cmpsb
sub
popa
fcoml
inc
test
cmp
pop
jbe
cmp
js
xor
cmp
jp
pop
pop
sub
and
sti
push
fdivrs
leave
inc
je
mov
and
lock
lahf
cli
iret
xchg
test
inc
pop
scas
pop
cmp
les
ret
fwait
lock
adc
jp
hlt
imul
push
and
fwait
int3
mov
jbe
pop
andl
dec
aad
ret
xlat
adc
and
je
push
jns
add
cwtl
adc
jne
arpl
popl
das
mov
fwait
or
add
shl
clc
push
mov
cmp
test
pop
jne
push
xchg
test
mov
dec
push
repz
mov
rolb
mov
stos
lcall
rcl
dec
cmpsl
xchg
scas
neg
pop
out
adc
repnz
sbb
lock
and
out
addr16
jp
mov
aam
and
movsb
sbb
popl
fisubrs
sti
adc
ss
xchg
and
jle
mov
icebp
mov
mov
sbb
mov
sbb
add
fidivs
psraw
jnp
xchg
ljmp
jae
mov
leave
dec
jnp
aaa
lret
scas
or
or
pop
dec
or
in
xchg
sub
xchg
lock
cmp
hlt
and
cmp
cs
mov
inc
mov
arpl
xor
rorl
sub
jmp
js
fldl2e
or
add
popf
adc
mov
loop
ds
iret
movsb
add
cli
ret
pusha
cmp
and
les
cltd
hlt
push
pop
adc
or
sub
out
dec
out
pushf
out
mov
sub
es
add
cltd
dec
test
sbb
push
imul
dec
cmpb
lds
adc
outsb
inc
sub
lds
iret
cmp
aam
cmpsl
dec
inc
out
inc
loopne
aam
movsb
js
ds
mov
sbb
jp
mov
jbe
push
inc
xchg
sub
xchg
sub
mov
lret
jl
hlt
pushf
push
into
test
xor
pop
clc
imul
shl
test
ss
lahf
repnz
mov
jno
int3
scas
sbb
add
mov
push
leave
sbb
rcll
sbb
mov
outsl
mov
jbe
or
andb
add
inc
pop
push
addr16
inc
xchg
setle
xor
xor
mov
inc
push
lcall
bound
out
lahf
repnz
xchg
mov
data16
mov
ficomps
arpl
mov
lea
ljmp
in
sub
mov
pop
or
pop
pushf
inc
lret
mov
pop
arpl
or
sbb
xrelease
inc
and
fsubr
ret
das
mov
ljmp
cltd
stos
sub
push
xor
rol
xchg
mov
mov
addr16
dec
out
add
dec
lahf
xor
std
or
xor
inc
jae
bound
or
and
test
xchg
or
mov
in
dec
jecxz
insb
cs
adc
push
jb
push
and
loope
and
cmp
fwait
je
xor
xchg
add
ret
cmp
cmpsb
bound
daa
inc
lods
int
test
fs
cmp
add
jp
xchg
dec
mov
and
in
dec
popf
insb
pop
pop
int
push
test
movsb
adcb
pop
fistl
sbb
dec
xor
jnp
jae
fisubl
push
mov
push
fs
mov
mov
cmp
and
idivl
ja
and
in
dec
test
repnz
add
mov
insb
inc
dec
cmpsb
jmp
test
rcr
mov
paddsw
push
mov
cmpsl
shl
js
sar
cmp
xor
repz
sbb
test
aam
subl
addb
and
shl
adc
sbb
jecxz
push
es
idivb
insb
push
test
push
notl
aad
mov
loop
dec
mov
pop
xchg
push
jbe
mov
pop
imul
jle
addr16
stc
push
sbb
adc
movsb
or
mov
lds
pop
fistpll
sub
mov
adc
mov
out
mov
inc
and
mov
sub
add
hlt
shll
push
mov
out
addb
inc
testb
inc
shl
push
stos
jle
add
sub
and
or
pop
les
shrb
dec
movsl
adc
aas
repz
sub
inc
xorb
das
sub
into
out
loop
insl
add
adc
push
popf
push
inc
leave
sbb
outsb
fucomip
push
jg
mov
pop
jno
loop
int3
sub
insb
adc
decl
dec
test
inc
gs
or
lock
aam
testb
int3
cli
push
imul
or
movsl
xor
lods
mov
mov
test
repnz
push
mov
mov
mov
cmp
inc
inc
scas
outsb
out
lea
cmp
sbb
mov
int
mov
xadd
and
dec
mov
out
xor
jecxz
sbb
pop
mov
sub
push
sbb
sbb
sbb
test
lahf
aas
sti
jmp
xchg
adc
andl
int3
xchg
xlat
or
inc
rclb
xor
pop
add
cld
iret
or
sub
repnz
cwtl
jecxz
stos
xchg
sar
sub
test
sbb
mov
cmp
pop
stos
sbbl
mov
cmp
stos
adcb
push
into
push
xlat
add
imull
push
cld
push
cmpsl
bnd
scas
mov
mov
bnd
pushl
push
sbb
loop
in
lods
pop
dec
xchg
pop
aas
test
jg
cmpl
call
push
cmp
xchg
sahf
pop
sub
push
mov
pop
mov
add
test
mov
imul
sbb
jbe
and
mov
jbe
cmp
jmp
dec
fildll
inc
stc
arpl
addr16
dec
test
loope
movsl
arpl
lds
push
mov
add
jo
in
dec
adc
cli
lock
push
int3
push
jmp
test
and
stos
pop
push
mov
sub
mov
dec
mov
sbb
mov
add
cmpsl
sub
lods
clc
es
mov
ss
sbb
lds
test
jbe
adc
mov
ficoml
addb
push
sahf
add
dec
hlt
or
sbb
popf
inc
adc
mov
jbe
arpl
loopne
popf
cwtl
cs
mov
mov
cmpsb
push
ljmp
test
in
xor
in
mov
iret
jae
jnp
adc
popa
xor
xor
add
mov
jns
xchg
js
push
dec
push
sub
and
push
dec
cld
lret
adc
and
sarb
push
inc
in
xchg
xor
sbb
push
mov
sbb
mov
sub
mov
sbb
push
pop
pop
cli
lds
jo
cmc
aaa
lahf
in
cmp
test
aaa
fs
das
mov
mov
imul
data16
popa
cmp
push
fldl
sub
sahf
cwtl
jne
adc
sbb
xchg
aas
inc
cmp
xchg
jo
in
fistpll
je
rolb
test
iret
outsb
ljmp
imulb
jno
lret
pop
in
outsl
pop
or
lods
mov
sti
mov
roll
test
inc
ficoml
leave
aam
xor
jno
cwtl
rcrl
rcrb
in
andl
inc
mov
call
lahf
adc
stos
pop
mov
bound
jg
int3
popf
adc
push
mov
push
int
mov
dec
and
cmpl
mov
lret
pop
sub
push
popa
push
cmc
or
push
inc
int
xchg
cmp
imul
int
add
sbb
scas
adc
jg
sti
outsl
xor
xor
stc
popa
outsl
sub
xor
ss
pop
cmp
xor
leave
jnp
dec
sbb
inc
or
bound
addb
xor
enter
loop
xchg
mov
dec
sbb
add
dec
clc
hlt
jae
movsb
test
int
movsl
cmp
mov
mov
dec
cmp
add
xchg
xchg
mov
adc
fwait
add
shr
push
ja
push
mov
sub
loop
add
xlat
xor
cmp
ljmp
sub
cmove
inc
xchg
sbb
mov
xchg
lods
mov
xor
ficompl
push
cli
cmp
lods
push
mov
mov
loopne
mov
xchg
sahf
and
out
push
dec
cmp
inc
inc
push
mov
ja
int3
mov
ss
xchg
xor
bound
dec
cmp
xor
dec
push
sbb
js
xchg
hlt
imul
into
mov
rcr
roll
pop
xchg
adc
push
xchg
jno
test
sub
scas
dec
or
mulb
sbb
xor
mov
add
inc
jns
xchg
hlt
jo
gs
ds
cmp
adc
rorl
mulb
sub
mov
imul
nop
mov
fs
stos
rcrb
imul
cmc
loopne
es
sbb
lahf
jle
rorb
movsl
add
xchg
scas
dec
pop
lea
jmp
out
movsb
xchg
inc
test
mov
shrl
shlb
pop
int3
popf
ljmp
xor
xchg
or
dec
inc
cmp
xchg
cmp
xor
sbb
xchg
repnz
cmp
scas
add
inc
jae
scas
popa
lods
sbb
xchg
gs
sbb
add
or
int
stos
int3
sbb
pop
push
mov
fwait
mov
ret
rorl
arpl
cli
mov
cs
jae
imul
fst
and
sub
dec
mov
push
mov
adc
lret
fs
sub
push
aad
hlt
jne
jo
mov
mov
or
cli
add
cltd
inc
stos
mov
mov
cwtl
std
pop
xchg
inc
dec
dec
push
sarl
jle
cwtl
xor
jmp
inc
inc
mov
movb
xor
scas
mov
out
jle
mov
xchg
cmp
xchg
sbbb
xchg
addr16
mov
xlat
test
sti
pop
cmc
mov
xlat
mov
test
stos
int3
pop
rorb
rolb
pop
mov
cmp
push
dec
jp
push
cs
call
mov
shrb
pop
add
ret
nop
leave
adc
jae
ret
cld
mov
test
insl
xchg
dec
dec
insb
add
jp
ret
jmp
ret
or
ficoml
pushf
fs
fidivrl
mov
adc
or
in
daa
xlat
xor
pop
cmp
jb
push
fsubrl
in
lea
repnz
dec
in
mov
jbe
push
popa
das
jne
ja
push
scas
imul
adc
mov
lret
mov
cld
cmpb
sub
add
popa
ja
sub
fdivrp
jns
sbb
mov
mov
lea
enter
cwtl
dec
sub
repz
loope
imul
lahf
dec
testb
stos
je
mov
clc
xchg
xchg
xor
xchg
lods
shr
mov
mov
mov
mov
sub
mov
push
mov
lods
pop
mov
jae
inc
ret
fwait
pop
mov
jne
or
js
mov
montmul
cmpsb
add
xchg
pop
int
push
mov
icebp
xor
xchg
cwtl
loop
xchg
pop
dec
mov
decl
jmp
rorl
dec
ficomps
popa
cltd
popa
jp
insl
sbb
mov
lods
ljmp
push
xor
mov
das
cmp
cmp
fiaddl
je
push
out
or
jbe
dec
ss
lea
mov
mov
aas
fistpl
imul
fs
into
movsb
aas
stos
in
cmp
frstor
mov
pushf
sub
clc
and
mov
shr
in
or
lcall
mov
xor
adc
and
sbb
xor
int
push
sbb
cmp
adcb
push
mov
push
lret
dec
jmp
jns
stos
adc
sbb
ja
sub
into
xchg
sub
js
clc
mov
cmp
cmp
mov
add
mov
cs
push
mov
cmp
lret
sbb
push
in
inc
and
outsb
insb
movsl
in
xchg
cld
into
int3
jge
je
scas
cmp
jmp
pop
and
push
pop
dec
movsl
sub
and
ljmp
cmp
stos
inc
mov
dec
add
dec
nop
pop
and
movsb
ret
jg
xor
push
test
cltd
or
ret
outsl
push
push
dec
jmp
and
fdivrp
imul
adc
inc
push
jnp
es
frstor
popa
jge
cmp
or
lods
popa
cmpsl
or
outsl
cmp
enter
jle
enter
leave
arpl
mov
jne
pop
data16
ds
push
subl
jne
stos
je
add
cli
hlt
cltd
inc
mov
scas
mov
loop
adc
inc
and
jmp
dec
cmp
aaa
sbb
mov
test
pusha
enter
dec
sbb
mov
je
jns
add
lret
push
rcrb
addr16
int3
cmc
rcrl
sbb
shrb
mov
fsubrl
jl
mov
mov
loope
mov
and
mov
mov
sub
imul
mov
pop
pushf
add
xchg
jbe
faddp
ds
adc
dec
sub
sbb
add
pop
into
leave
mov
mov
shld
xor
fbld
mov
stos
stc
cmp
sub
mov
push
mov
mov
hlt
in
in
and
incl
bound
xor
add
les
repz
push
loope
cmp
insb
out
mull
or
je
out
jo
scas
mov
push
clc
and
sub
popf
dec
pop
xor
cmp
rcll
emms
std
imul
jmp
test
nop
cmp
inc
cmpsb
scas
fdiv
nop
jo
divl
mov
loopne
rcll
scas
and
les
mov
ss
xchg
add
xor
lock
pusha
mov
daa
mov
popa
jl
fmuls
ret
sub
dec
adc
dec
dec
adc
in
push
xchg
adcl
das
mov
mov
mov
bound
lahf
xlat
pop
sbb
sbb
xor
mov
pop
and
add
add
xor
imul
or
mov
inc
mov
rcrb
mov
rolb
inc
and
mov
sbb
stc
inc
sub
or
test
in
arpl
xchg
int3
test
lods
mov
mov
repz
sbb
pop
and
jb
mov
fs
andl
sub
call
andl
sbb
dec
xchg
pop
xor
outsb
sub
in
add
wrmsr
sbb
cmp
push
push
je
or
imul
jbe,pn
sub
fs
in
sub
pop
cmp
insl
int3
shlb
aam
js
push
dec
movsl
pop
adc
movsb
test
in
jg
jp
push
movsl
ss
out
fcmovnb
sub
push
sub
addb
lcall
cltd
mov
xlat
and
insl
inc
lods
scas
xor
mov
xor
mov
push
xor
ljmp
and
and
rcll
sbb
insl
data16
in
adc
or
inc
push
pop
sub
mov
sub
loop
out
inc
outsb
push
xchg
sti
cli
push
jae
sub
das
lods
sub
mov
sar
add
sub
bound
scas
stos
jmp
jbe
out
iret
in
in
test
movl
in
aas
stos
cmp
mov
mov
xchg
into
xchg
testl
test
cmp
enter
jle
mov
test
cwtl
jb
shrb
cs
cmpsl
stos
out
ljmp
pop
pop
scas
fisubrs
push
push
pop
fildl
pop
jno
push
sbb
movsb
xchg
test
ljmp
divb
sub
in
or
pop
shll
add
outsb
test
hlt
xor
lret
stos
mov
test
xchg
push
clts
inc
imulb
vhaddps
add
into
cmp
pop
jmp
daa
les
out
aas
and
xchg
cmp
mov
xor
testb
test
and
push
out
sbb
push
outsb
push
out
sbb
movsb
adc
js
push
lret
jecxz
incl
push
scas
repnz
imull
adc
push
sbb
xor
loopne
inc
sbb
rcrb
pop
xchg
mov
gs
cmp
add
cld
iret
scas
adc
xchg
je
cmp
mov
jge
mov
or
xchg
mov
arpl
popa
or
push
sbbl
and
xor
mov
xor
gs
fsubs
or
or
inc
cmpl
pop
movsb
or
addr16
lret
out
aad
