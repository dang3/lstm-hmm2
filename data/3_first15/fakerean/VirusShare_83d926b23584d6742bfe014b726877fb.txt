jl
and
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
std
inc
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
add
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
add
movl
call
add
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
pop
jnp
and
and
fwait
jnp
and
and
nop
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
inc
and
add
add
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
scas
andb
mov
andb
mov
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
jnp
and
xchg
andl
rolb
and
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
push
test
and
and
mov
test
and
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
xor
test
and
and
pop
test
and
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
sbb
and
xchg
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
add
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
scas
testl
je
pop
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
sub
adc
add
inc
add
add
mov
add
cmp
jae
mov
int
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
add
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
shl
inc
add
call
mov
push
inc
add
add
mov
add
cmp
jae
mov
mov
fucomp
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
das
flds
lds
call
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
fiaddl
xchg
test
adc
sti
leave
test
lea
add
sahf
leave
adc
nop
jmp
add
add
add
bound
icebp
add
imul
add
add
mov
add
push
push
push
push
push
call
add
jle
add
scas
jecxz
test
add
mov
mov
mov
add
scas
add
roll
jb
add
mov
sub
pop
popl
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
add
mov
add
add
shrl
add
cwtl
les
add
add
add
scas
add
mov
stc
add
add
pop
add
lcall
push
lea
push
call
add
fidivl
jmp
add
add
add
push
in
out
add
xchg
mov
add
clc
call
add
ja
je
xchg
subl
addb
add
mov
ja
add
stc
jno
add
lcall
push
push
push
lea
push
lea
push
call
add
les
sahf
add
add
push
stos
mov
fwait
sarb
loopne
call
movsl
std
add
fwait
add
jle
mov
add
sarl
lock
lcall
mov
cmpsl
add
add
dec
cwtl
sbb
push
push
push
call
xchg
pop
jne
push
addl
lds
xchg
mov
add
in
add
lea
add
xchg
sub
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
stos
add
clc
add
jge
add
add
add
add
add
popf
push
add
add
in
cld
cld
add
ficomps
sub
pop
jmp
ret
push
push
push
call
xchg
add
popa
inc
add
jmp
add
lret
popf
xchg
push
cli
lret
loopne
add
add
mov
add
xchg
flds
pop
push
in
ljmp
add
add
iret
test
add
add
jecxz
add
hlt
lcall
inc
hlt
push
push
call
rolb
add
jmp
add
pop
add
add
mov
add
mov
in
clc
in
lods
out
add
add
add
add
in
clc
lcall
pop
hlt
push
push
push
push
push
push
call
pop
out
add
jle
lret
add
scas
ljmp
add
je
movsl
add
rol
call
cltd
fwait
lcall
mov
add
test
insb
in
addb
mov
add
mov
fildl
pop
in
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jp
shrb
push
lahf
testl
add
mov
mov
data16
repnz
push
mov
cmpsl
imul
xchg
sahf
add
lcall
ret
add
add
add
push
push
lea
push
call
cli
add
add
push
add
add
enter
add
mov
xchg
ljmp
add
add
incb
add
mov
add
pop
pop
xchg
push
lea
jle
jo
add
mov
push
push
add
jmp
mov
rol
add
jno
std
aam
fisubrl
sub
pop
mov
xor
push
push
xor
push
and
add
shl
sub
ror
rol
pop
rol
rol
pop
push
push
push
call
std
je
ja
mov
lds
add
add
add
mov
rorl
stc
add
in
int
add
add
jecxz
add
add
mov
mov
add
fcomip
add
jns
mov
in
lahf
roll
add
popa
lret
in
hlt
pop
pushl
push
push
lea
push
lea
push
call
add
push
jge
add
add
fs
add
add
rcl
cld
add
xchg
pop
mov
mov
mov
add
xchg
jmp
sub
pop
call
mov
push
lea
push
lea
push
call
add
idivl
add
add
add
add
jne
add
cltd
jp
out
pop
add
testl
push
fisubrl
cmpsb
mov
lea
mov
pop
add
add
add
push
lods
add
add
add
lret
data16
add
gs
xchg
add
push
sub
pop
movl
push
push
push
push
push
push
push
push
push
call
mov
in
add
iret
add
push
lret
add
add
add
pop
lahf
add
add
add
cwtl
mov
add
add
test
lret
lds
cmpsl
add
jle
xchg
add
js
js
mov
add
add
in
fcompl
inc
call
adc
push
push
lea
push
push
lea
push
push
lea
push
call
xlat
lock
lods
movsb
loop
test
mov
add
add
movsb
add
mov
jns
stos
xchg
add
imul
in
add
pop
mov
xchg
loope
lea
jne
add
shl
add
lcall
pushl
push
lea
push
lea
push
lea
push
push
call
subb
mov
push
popl
loope
add
add
data16
mov
enter
add
add
add
lret
add
testl
add
fsubs
pusha
out
mov
add
jle
leave
add
stos
cwtl
pop
add
out
add
mov
mov
mov
push
add
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
call
cmpsb
in
add
ret
in
xchg
cmpsb
lahf
ljmp
lahf
aam
mov
cltd
xchg
cmpsb
addl
loopne
jl
bound
outsl
bound
ja
add
add
xchg
shl
jnp
mov
sbb
sub
pop
call
push
lea
push
push
push
lea
push
push
call
add
add
sar
mov
jp
add
add
push
imul
out
push
mov
popf
add
lcall
add
cmc
imulb
add
fmuls
add
mov
in
call
pushl
push
lea
push
lea
push
lea
push
push
push
push
call
call
call
add
add
imul
add
push
lahf
stos
pop
imul
add
mov
lcall
add
jae
xchg
popf
bound
add
outsl
add
add
add
movsl
lcall
add
stos
add
add
aam
test
mov
sub
pop
pushl
call
push
push
add
push
xor
add
shl
shr
xor
sub
add
shr
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
test
add
add
jge
add
flds
push
in
xchg
pop
mov
cltd
add
jae
mov
loopne
pushl
call
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
push
aam
add
jae
je
aam
lahf
fcomi
mov
test
pop
icebp
add
add
sti
sub
pop
push
push
push
dec
add
xor
push
or
not
add
lea
sub
xor
ror
pop
sub
add
shr
pop
push
push
push
lea
push
push
call
add
add
loop
xchg
loopne
xchg
bnd
cltd
add
pop
lahf
add
add
loopne
xchg
icebp
out
add
out
clc
cwtl
add
push
lea
push
push
push
push
push
push
call
push
add
insb
out
mov
add
mov
bound
cltd
arpl
add
mov
cmpsl
push
lea
jb
mov
add
mov
mov
pop
jecxz
je
jecxz
push
jo
rcl
sub
pop
push
push
push
push
lea
push
push
push
call
add
add
jle
add
jge
notl
lret
loopne
fisubl
cwtl
jl
add
add
add
add
mov
add
lcall
rorb
stos
push
push
push
call
lea
mov
add
add
add
add
loope
stos
mov
add
add
movl
aad
add
loope
fldenv
mov
movsb
add
mov
add
hlt
mov
mov
add
add
add
push
add
add
add
add
mov
pop
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
xchg
int
pop
popfw
repnz
fdivl
add
add
mov
add
add
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
mov
add
fadd
jns
jl
jp
add
add
mov
add
jecxz
add
mov
mov
add
push
mov
xchg
add
add
add
popf
movsl
add
sub
pop
add
push
push
call
sub
scas
add
ja
popf
add
add
out
mov
add
mov
add
add
mov
mov
jne
mov
aad
jge
add
cld
add
add
add
jbe
add
add
lahf
fadds
xchg
movsl
in
cmpsb
lds
in
clc
lcall
ret
add
add
push
push
push
push
lea
push
lea
push
call
mov
pop
roll
add
pop
data16
mov
xchg
mov
test
add
mov
add
pushf
lock
xchg
test
pop
jl
test
add
add
pop
cmc
sub
pop
add
push
lea
push
push
push
push
call
cwtl
add
cwtl
fwait
in
add
xchg
add
je
mov
ret
lret
shrl
xchg
jmp
mov
imul
add
add
xchg
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
push
push
call
shlb
js
cltd
ja
add
push
add
add
pop
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
push
loope
cli
addl
add
js
cmpsl
cwtl
pop
add
cmpl
arpl
add
cmc
lret
icebp
int3
add
icebp
add
addl
mov
pusha
fstl
add
repnz
add
add
add
icebp
sub
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
iret
mov
testl
mov
les
add
jnp
add
jmp
add
xchg
xchg
add
add
add
mov
lods
push
aam
movb
add
xchg
add
add
inc
or
adc
scas
push
call
lods
in
mov
rol
add
add
add
push
add
add
xchg
add
jl
out
pusha
fwait
stos
mov
xchg
add
cltd
mov
add
mov
lret
add
add
xchg
iret
pop
add
sub
pop
add
push
push
push
push
push
push
push
call
add
jne
pop
fwait
push
add
in
add
add
test
imul
lea
mov
stc
loop
in
in
lcall
push
push
push
lea
push
push
push
push
push
push
push
call
popf
add
sub
add
ret
add
arpl
pushf
jns
add
fsubrs
in
jb
cmpsl
jl
testb
fwait
lret
hlt
add
ja
jecxz
movb
int3
stc
cmpsb
int3
add
jne
int
rolb
jmp
add
cmpsb
jmp
add
add
jge
mov
push
in
fcomps
dec
add
xor
adc
push
lea
push
push
push
lea
push
call
mov
add
mov
add
jle
cltd
add
jne
test
iret
jnp
xchg
mov
faddl
add
add
xchg
loop
into
into
jmp
xchg
add
leave
add
xchg
lret
mov
add
add
mov
add
mov
arpl
or
push
push
push
push
push
push
lea
push
push
lea
push
call
cld
add
add
in
mov
aad
add
pop
add
notb
mov
ljmp
pop
fstl
test
add
lods
pop
roll
out
mov
add
stc
test
add
roll
add
add
outsl
movsb
hlt
sub
pop
add
push
push
push
call
divb
mov
imul
add
add
ror
cmpsl
xchg
xchg
add
cwtl
add
xchg
add
popf
add
add
add
jno
add
loop
jo
pop
test
add
movsl
add
add
imul
stos
sub
pop
push
push
lea
push
push
push
push
lea
push
push
call
faddl
jge
pusha
pop
pop
scas
in
add
lods
mov
add
add
push
jmp
mov
jb
je
add
push
add
mov
lds
js
mov
pop
add
add
xbegin
add
add
outsl
fwait
out
pop
enter
fiaddl
inc
or
adc
call
add
add
fs
mov
mov
loope
add
add
lret
add
add
imul
mov
xchg
pusha
lds
outsl
lahf
int
add
aam
add
add
mov
roll
jle
not
pushf
add
mov
add
add
popf
add
mov
clc
pop
sub
pop
push
push
call
add
add
mov
add
lcall
add
xchg
jne
add
add
jns
icebp
add
jne
mov
cltd
add
mov
popf
mov
pop
popa
scas
popa
bound
pop
mov
je
aam
push
pop
mov
add
shrb
pop
push
push
jecxz
lcall
movsb
push
shr
sub
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
jmp
add
lods
add
add
cld
mov
push
imul
add
addr16
add
xchg
loopne
rolb
lahf
add
sahf
divl
push
in
loopne
mov
push
not
pop
add
push
push
push
push
push
push
push
call
mov
mov
pop
add
stos
mov
mov
fiaddl
add
add
xor
gs
std
ljmp
add
push
sahf
mov
mov
jae
test
add
add
add
push
add
push
add
pop
in
add
mov
push
pusha
cmpsb
push
add
bound
add
add
js
sub
pop
add
add
push
push
call
add
mov
lods
fwait
cltd
pop
movsb
push
aad
xchg
into
fadds
add
push
mov
mov
fldl
mov
add
jne
push
cmpl
add
mov
test
add
jo
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
lcall
ljmp
imull
push
add
shll
add
cmpsl
push
out
cmpsl
jmp
in
fiaddl
add
shll
xchg
mov
add
stos
push
cmpsl
mov
enter
jp
imul
leave
call
add
fdivr
lcall
add
push
lea
push
push
push
call
add
sahf
add
mov
jmp
add
stos
xchg
or
addb
fldl2t
add
pop
add
xchg
xchg
arpl
mov
add
aad
mov
lods
sahf
cwtl
add
jns
cmpsl
nop
mov
loope
add
jl
mov
repnz
pop
add
push
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
popf
loop
in
xchg
scas
add
add
mov
jp
jno
jb
push
lods
mov
add
xchg
test
cmpsb
mov
xchg
add
cmc
movsl
add
xlat
xchg
add
push
bound
add
mov
lcall
adc
push
push
push
lea
push
push
push
call
lcall
add
add
shlb
popa
movsb
add
xlat
add
pop
add
hlt
add
add
lret
lret
sti
rcll
jbe
loop
add
pop
add
push
shr
pop
mov
xor
push
sub
shr
rol
shl
pop
add
push
xor
pop
add
push
lea
push
push
push
lea
push
lea
push
call
add
arpl
add
mov
imul
lods
imul
add
mov
add
outsl
testb
data16
imul
insb
shrl
add
add
lcall
fsubrs
xchg
xor
ror
add
push
or
not
add
sub
sub
shr
lea
rol
sub
pop
rol
pop
push
push
push
push
push
call
mov
push
lods
jmp
cmpsl
add
add
lea
jnp
not
add
lcall
jae
mov
add
rolb
iret
addb
mov
add
sub
pop
pushl
push
lea
push
push
push
lea
push
push
call
add
add
icebp
insb
data16
mov
add
add
stos
pop
add
xchg
lock
stos
out
clc
add
stc
mov
mov
add
add
mov
jecxz
roll
push
mov
add
mov
mov
pop
add
ficomps
add
add
add
insb
data16
sub
pop
call
push
push
call
mov
lret
lea
pusha
sahf
lcall
cmc
add
mov
add
loopne
add
in
jge
lds
cltd
enter
push
xchg
in
clc
pop
push
push
push
dec
push
or
inc
add
not
lea
sub
lea
rol
pop
lea
add
pop
push
shr
not
inc
lea
pop
push
push
push
push
lea
push
call
pop
add
std
add
add
jno
cmpb
stos
stos
enter
xchg
add
jae
sahf
call
addl
les
jbe
arpl
add
rclb
scas
push
call
cmp
add
add
stos
mov
push
les
add
rolb
xchg
fcoml
cwtl
add
mov
aad
cmc
add
jle
pop
rcrl
mov
arpl
mov
push
add
add
clc
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
into
lahf
out
mov
jne
iret
jae
ficoms
leave
add
ljmp
mov
movsl
ret
jecxz
in
in
loop
add
roll
call
xchg
sti
fsubrl
stc
add
fwait
cwtl
add
stos
jmp
leave
sub
pop
push
push
shr
xor
pop
mov
add
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
clc
push
add
add
std
jne
out
add
add
pop
push
les
out
add
aad
filds
add
mov
fs
add
add
mov
cld
cld
gs
add
lcall
ret
add
add
push
ror
inc
not
pop
add
push
shl
pop
mov
xor
push
not
lea
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
ljmp
xlat
add
js
lahf
scas
mov
fadd
jp
pushf
jge
add
roll
add
lock
add
jae
add
add
fwait
jl
pop
push
add
add
popl
add
pop
lods
mov
mov
xor
push
push
lea
push
lea
push
push
call
pop
xlat
add
jecxz
add
scas
add
add
add
add
mov
add
add
add
xchg
notl
add
pop
add
add
lcall
lock
shr
sub
pop
pop
push
push
lea
push
push
call
loop
test
mov
sahf
add
loope
add
mov
mov
add
fiadds
add
mov
add
add
mov
outsl
fildll
cltd
add
mov
push
leave
pop
add
mov
test
lock
lcall
dec
and
jno
adc
ljmp
add
movsb
les
scas
stos
jl
roll
lret
cwtl
add
add
cmpsl
pusha
push
lahf
fisubrs
pop
add
add
add
pop
in
add
add
add
cmc
repnz
add
adcl
mov
cmc
sub
pop
xor
push
lea
push
push
push
call
xor
xchg
add
les
add
cld
add
lods
add
roll
fiaddl
out
pop
add
xchg
push
push
add
add
add
mov
mov
push
mov
in
iret
xchg
fwait
add
add
mov
lock
jo
sahf
test
in
lock
add
push
ror
pop
rep
push
push
lea
push
lea
push
push
push
push
push
push
call
push
add
add
mov
in
test
add
out
mov
rolb
in
push
add
rolb
xchg
cmpsb
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
lahf
add
add
leave
loop
fldl
nop
push
pop
add
push
add
mov
pop
add
pop
fldenv
add
mov
hlt
add
shll
add
je
add
jp
out
out
add
add
jmp
add
sub
pop
xor
push
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
in
mull
add
fsubl
push
add
add
add
aad
sub
pop
add
push
push
push
push
push
call
mov
add
fiadds
push
xchg
add
scas
fwait
pushf
jo
add
add
add
push
in
push
arpl
add
add
leave
je
push
dec
not
not
pop
mov
xor
push
push
push
push
push
call
jb
add
add
loopne
in
scas
in
imul
scas
add
out
mov
out
into
xchg
lcall
popf
add
in
push
mov
gs
pop
cwtl
add
add
cld
mov
aam
aad
aam
sahf
add
data16
mov
aad
cli
add
in
lcall
push
sbb
adc
xor
inc
lea
push
lea
push
call
hlt
js
test
jle
pop
xchg
jo
mov
popf
add
rcll
add
add
scas
add
sahf
add
arpl
add
add
mov
aad
sub
pop
add
push
not
add
add
pop
add
push
push
push
call
rolb
cmpsb
add
mov
add
add
add
rcl
push
out
push
add
mov
test
jnp
mov
add
add
push
mov
add
hlt
mov
jne
jnp
add
in
arpl
add
lcall
push
push
push
call
shll
pop
add
popf
mov
mov
pop
jp
pop
pop
jge
rcrb
add
bound
xchg
add
mov
add
add
add
add
movsb
jbe
add
jle
pop
mov
add
add
je
flds
add
rolb
jnp
cmpsb
fs
cwtl
add
add
inc
or
adc
shrb
rcrl
lock
push
push
call
pop
out
add
fidivrs
add
push
xchg
jecxz
lea
lret
cltd
mov
add
insb
add
add
push
data16
add
push
add
data16
fwait
add
push
sub
pop
pop
push
push
push
call
add
addl
add
mov
scas
add
mov
add
jno
xchg
add
add
mov
add
xchg
imul
in
hlt
lcall
movsb
mov
xor
push
dec
rol
inc
pop
or
je
push
push
push
lea
push
push
call
add
add
add
cld
lock
cmpsb
int
push
add
ficomps
add
in
add
add
movsl
add
rolb
mov
in
lcall
repz
add
ror
sub
pop
add
add
push
add
pop
rep
pop
push
push
ror
shl
push
xor
add
xor
sub
not
sub
pop
dec
pop
push
not
not
sub
pop
pop
mov
push
push
push
push
push
push
lea
push
lea
push
call
add
add
arpl
add
add
into
mov
scas
mov
mov
add
add
rolb
enter
in
sar
mov
pop
add
lret
add
add
xchg
add
pop
add
imul
jmp
add
div
add
int
mov
add
out
shrb
jl
add
lcall
insl
hlt
push
push
push
push
push
call
loop
jle
repnz
in
add
xchg
add
scas
jns
add
filds
pop
movsb
gs
loope
add
add
jno
rclb
iret
add
lods
sub
pop
mov
push
push
push
push
push
call
add
add
add
call
arpl
pusha
add
mov
jmp
pop
mov
push
jmp
add
mov
test
add
lea
mov
jb
popa
add
pop
push
bound
mov
jecxz
add
mov
push
add
add
mov
push
sub
pop
jmp
push
shl
pop
push
mov
push
ror
lea
add
pop
add
push
xor
pop
push
push
rol
sub
sub
pop
push
push
xor
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
icebp
jmp
add
pop
push
repnz
add
in
add
add
mov
xchg
fwait
out
aad
fsubs
add
flds
mov
pop
mov
jae
add
cli
mov
fcompl
in
fcomps
push
push
push
call
data16
push
lahf
xchg
add
add
cld
jbe
rolb
mov
hlt
movsl
add
fisubrl
add
add
add
add
add
jbe
jp
out
add
add
xchg
nop
mov
in
hlt
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
js
rcrb
test
pop
add
mov
popf
add
lret
xchg
fsubl
add
add
add
mov
lret
data16
movsb
fnstcw
fmulp
add
push
mov
push
push
aam
add
movb
jne
add
mov
add
in
popa
add
loopne
popa
rolb
lods
icebp
pop
xchg
out
arpl
in
fdivr
lcall
push
not
shr
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
loopne
clc
add
push
xchg
jns
add
mov
sahf
add
add
add
negb
mov
std
sub
pop
pop
push
push
push
push
lea
push
push
push
push
call
xchg
sbb
mov
push
xchg
jne
add
add
lock
jmp
mov
rorl
movb
mov
add
mulb
jle
js
mov
ret
pop
scas
loope
add
out
pop
pusha
add
add
leave
ret
push
add
shl
inc
pop
push
push
pop
mov
add
push
push
push
push
push
lea
push
push
push
call
adc
mov
pop
lds
add
add
mov
add
pop
add
subl
push
add
push
cltd
mov
aam
leave
push
xchg
add
add
xchg
xchg
add
push
iret
mov
add
mov
xchg
add
add
jmp
in
loopne
lcall
push
xor
not
pop
push
push
push
lea
push
push
push
call
lret
add
add
mov
add
push
test
ljmp
add
pusha
jmp
mov
in
pop
push
push
not
dec
pop
push
push
push
push
push
push
push
call
xchg
xchg
scas
les
je
add
out
mov
rol
rcr
mov
jae
in
lahf
lods
filds
out
in
mov
mov
add
in
call
add
add
push
add
add
add
pop
addl
push
push
call
mov
int
stos
add
add
add
insb
out
add
int3
in
cli
add
add
jo
mov
add
add
cmpsb
rolb
add
in
add
clc
lcall
rorb
pop
add
add
push
push
lea
push
push
call
mov
mov
xchg
add
add
xchg
xlat
add
jmp
add
jae
xchg
mov
add
push
cmc
jb
jno
aam
add
mov
mov
cli
mov
push
add
lcall
push
push
push
call
mov
nop
fcmovne
push
out
jo
clc
sahf
loope
mov
mov
jb
add
add
add
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
in
mov
test
add
popa
add
ja
push
mov
ret
rorl
mov
add
add
push
icebp
add
xchg
xchg
xchg
add
mov
add
out
add
out
add
add
fcomps
pop
push
add
inc
pop
leave
push
lea
pop
ret
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
insb
add
push
add
add
add
fsts
popf
mov
mov
add
add
add
jl
add
mov
pop
aad
enter
je
ljmp
mov
mov
add
out
std
add
add
in
push
ror
inc
add
rol
pop
add
push
push
push
push
push
push
push
push
call
mov
add
push
add
incb
add
add
push
cmc
xchg
rcl
fldl
add
add
pop
add
xlat
popf
add
roll
add
aad
lahf
add
cmpsl
popf
test
arpl
insb
add
push
push
push
lea
push
push
call
add
add
add
ljmp
lods
rcrb
int3
mov
add
test
outsl
add
les
sub
jl
insb
add
xchg
add
fcomp
push
shll
cld
add
add
jb
add
fiadds
add
add
pop
sub
pop
push
push
push
sub
lea
lea
pop
testl
push
push
push
push
call
add
cltd
fdiv
std
jbe
pop
push
call
add
leave
iret
jns
add
add
popf
jp
fdivrl
xchg
pop
addl
add
into
add
add
xlat
popa
add
xchg
push
push
jmp
add
add
sub
pop
addl
push
push
ror
pop
call
push
sub
shr
pop
mov
push
push
push
push
push
push
call
sahf
clc
add
icebp
xchg
test
test
jmp
stos
add
idivb
aam
cmpsl
cmc
mov
add
add
push
popf
jle
imul
pushl
push
push
push
push
push
push
push
call
add
iret
mov
xchg
add
aam
pop
xchg
add
add
add
add
lahf
movsl
add
lock
pusha
add
mov
mov
jnp
jmp
cwtl
jnp
add
add
movb
fldenv
mov
push
add
add
add
add
xchg
mov
xchg
addb
add
add
add
lcall
push
push
lea
push
push
push
call
add
add
stos
test
add
popf
add
mov
add
add
add
add
filds
out
scas
push
fabs
add
in
add
xorl
push
mov
add
jmp
mov
mov
mov
xchg
mov
mov
add
out
test
in
lock
lcall
add
cmc
inc
das
or
jo
adc
push
push
push
push
call
add
nop
fs
lcall
int
stos
add
in
add
cltd
in
mov
add
add
mov
add
add
cli
add
add
lock
stos
add
in
in
call
push
sub
not
inc
pop
cmpl
jne
pop
push
push
lea
push
push
lea
push
push
push
call
add
push
sarl
ret
movsl
mov
enter
jo
out
jns
add
mov
lock
add
mov
in
lcall
push
lea
push
push
push
push
push
push
call
cmc
lahf
mov
mov
mov
lds
add
mov
mov
xchg
add
sarl
popa
add
add
imul
mov
rolb
add
jbe
add
js
add
movsl
mov
cmc
mov
add
mov
bound
loop
test
in
in
lcall
push
lea
push
lea
push
call
add
pop
add
xchg
pop
add
fmulp
into
cltd
mov
push
jns
add
add
add
add
les
cltd
add
jge
mov
add
movl
add
lcall
leave
push
pop
ret
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
bound
subl
push
test
add
add
lods
add
add
add
add
jle
mov
test
add
sbbl
push
xchg
stc
pop
sub
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
jle
add
cltd
popl
out
add
mov
add
add
cli
stos
sahf
stos
add
add
add
add
add
jbe
add
push
add
add
add
in
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
movb
stos
lahf
roll
cwtl
add
add
xchg
add
add
add
add
mov
loope
add
add
jge
add
mov
push
call
mov
ja
lock
lods
rorb
add
add
add
add
jae
in
fdivr
lcall
cld
push
push
push
push
push
push
push
push
call
add
test
mov
out
roll
add
lret
andb
add
push
add
mov
mov
add
push
test
test
add
xchg
add
add
cld
add
mov
add
xlat
add
adcl
xchg
fadd
jp
mov
xlat
add
add
push
push
push
push
call
add
add
xchg
lds
add
add
add
push
fcomps
add
add
pop
jge
fidivs
mov
stc
lock
add
add
in
add
in
hlt
lcall
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
mov
mov
out
jb
add
add
notb
rcrl
in
add
add
out
lea
add
fwait
add
cltd
cmpsl
mov
je
imul
nop
data16
add
add
add
add
push
cmpsb
in
mov
mov
in
in
push
push
push
push
push
push
lea
push
push
push
push
call
pop
add
add
clc
pop
jb
add
mov
mov
fwait
add
add
cltd
mov
fsubrl
add
jecxz
add
in
rcrb
add
in
push
cld
orl
popa
out
mov
shl
mov
push
out
sub
sahf
xchg
lret
mov
lcall
inc
cld
add
push
lea
push
push
push
push
push
call
add
in
popf
pop
push
add
mov
mov
lret
fwait
in
fildl
cld
in
mov
popl
add
into
add
push
push
lock
pop
mov
arpl
xchg
clc
stc
fwait
roll
fiaddl
lods
add
sub
pop
push
push
sub
add
pop
call
push
rol
dec
pop
push
push
push
push
push
push
push
call
mov
add
sahf
shll
insb
xchg
testl
sbbb
add
hlt
mov
add
mov
add
cld
add
add
add
testl
sub
pop
call
subl
push
lea
push
push
lea
push
push
push
push
call
xchg
mov
add
enter
add
mov
push
hlt
add
mov
fucomp
aam
sub
pop
cmpl
jne
push
dec
add
pop
pop
pop
push
rol
dec
dec
pop
pop
push
push
push
lea
push
push
call
add
add
mov
roll
lret
test
add
icebp
lret
mov
movsb
faddl
add
jmp
jl
test
mov
mov
add
push
lea
push
push
lea
push
lea
push
push
push
push
call
push
add
mov
add
pop
xchg
add
add
jae
push
mov
add
jge
add
pop
add
fsubl
add
jbe
push
add
cmpsb
add
add
add
je
data16
jmp
mov
stos
add
fwait
add
sarb
call
add
mov
lcall
push
dec
ror
rol
pop
ret
push
sub
xor
pop
push
push
pop
mov
push
shr
add
dec
pop
add
push
push
push
push
push
push
push
call
add
fmuls
arpl
xchg
test
jp
lea
push
add
scas
ja
add
loop
add
loopne
xchg
imul
enter
ljmp
add
nop
pop
mov
mov
add
add
add
mov
loop
add
add
in
in
lcall
push
push
xor
pop
push
push
rol
pop
push
mov
push
add
add
xor
pop
lea
push
push
push
call
sti
movsb
movsb
sahf
stos
add
addb
les
mov
lret
mov
hlt
arpl
add
mov
add
out
add
mov
add
push
fildl
xchg
add
sub
mov
push
not
sub
lea
pop
shr
push
pop
add
mov
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
nop
add
in
cmc
int
add
xchg
xchg
jmp
xorb
jne
add
repnz
outsl
mov
jno
mov
pop
mov
push
lea
push
call
add
in
jbe
add
add
add
gs
jl
scas
add
sarl
loop
add
mov
add
xchg
xchg
fucomi
add
in
add
mov
clc
lcall
inc
or
sub
pop
add
push
shr
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
je
xchg
add
pop
in
add
pop
popa
mov
add
add
loop
pop
aad
out
add
xchg
imul
add
add
in
fdivr
lcall
nop
nop
nop
nop
cmp
jne
push
push
push
push
push
push
push
push
push
call
ret
add
add
pusha
cli
jo
mov
add
add
rolb
cmpsb
mov
add
mov
xchg
xchg
pop
addr16
mov
pop
mov
gs
add
add
push
jmp
fcompl
add
jae
je
sub
pop
cmp
jne
push
add
rol
dec
pop
mov
push
push
lea
push
push
call
pop
mov
add
add
add
add
add
add
lds
add
xchg
aad
add
leave
mov
subb
sub
pop
movl
jmp
push
add
sub
pop
mov
mov
push
add
pop
sub
jne
mov
push
push
push
lea
push
push
push
push
push
push
push
call
cltd
lret
bound
lock
add
push
jl
rol
stos
add
sarb
mov
add
nop
jb
mov
add
add
push
dec
rol
sub
not
pop
jmp
push
lea
push
push
push
push
push
call
mov
lcall
mov
add
lods
fldl
add
int
add
addr16
cltd
pop
add
add
add
lock
pusha
fmuls
add
add
pop
in
mov
add
push
in
iret
add
jge
pop
repnz
add
xchg
add
sar
add
add
ja
in
call
push
dec
add
pop
mov
cmp
jne
push
not
sub
shr
pop
mov
push
push
push
push
call
add
add
fistpl
add
sahf
pusha
stos
clc
pop
add
add
jmp
add
add
sub
add
lea
add
add
add
add
popa
add
push
add
add
jecxz
pop
sub
pop
movl
jmp
push
rol
pop
mov
push
push
push
push
push
push
call
rorl
roll
jecxz
lods
mov
popf
mov
pushf
jno
jo
add
add
add
cmpsb
js
xchg
lahf
add
cmpl
jne
push
shr
inc
pop
mov
push
lea
dec
pop
movl
jmp
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
fnstsw
push
mov
imul
add
add
add
add
jne
xchg
lcall
lea
je
jo
add
add
xchg
add
mov
add
mov
add
jle
add
add
in
add
add
add
add
pushl
push
shr
pop
pop
push
xor
lea
pop
mov
push
not
rol
ror
pop
mov
push
push
push
call
add
add
shlb
repnz
pushf
xchg
mov
add
int3
add
jns
add
mov
add
out
jge
add
pop
add
jo
leave
sub
pop
mov
push
push
push
xor
add
shr
sub
add
sub
sub
sub
inc
pop
lea
inc
pop
push
lea
push
push
push
push
call
stos
add
add
mov
mov
lods
mov
pop
andl
add
jns
xchg
add
in
pop
push
push
push
lea
push
push
push
lea
push
call
mov
fwait
mov
add
mov
popa
jbe
mov
xchg
movsb
pushf
js
add
rcrl
orb
jns
cli
mov
add
hlt
jae
icebp
lret
jae
add
ficomps
movsl
xchg
leave
sub
pop
call
push
push
push
push
push
push
call
lret
mov
leave
xchg
add
add
test
lock
mov
jb
add
loop
add
push
push
add
movsl
xchg
jbe
add
icebp
into
push
push
push
pushf
mov
lcall
lcall
js
int3
fldz
ret
sub
add
push
push
sub
shl
add
push
push
pop
add
shr
lea
sub
not
inc
dec
pop
rol
ror
add
pop
push
push
push
push
push
push
call
xlat
add
xchg
push
mov
addl
fdivp
jle
add
add
add
std
mov
add
cmpsl
add
in
call
push
push
lea
push
push
call
add
add
out
jo
lods
in
test
stc
add
jle
xchg
add
add
add
add
pop
in
add
pop
add
add
push
add
add
add
hlt
pop
call
push
push
push
push
lea
push
push
push
push
call
fbld
rcrl
hlt
test
mov
add
add
add
add
in
movl
xchg
mov
cmpsl
add
mov
lea
pop
mov
add
add
fdivr
ljmp
lcall
js
int3
fldz
ret
aad
add
push
push
xor
xor
shl
shr
push
push
pop
add
dec
sub
add
shl
pop
ror
shl
add
xor
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
lods
xchg
mov
pusha
push
mov
faddp
add
addl
addr16
add
add
sub
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
xchg
add
iret
jnp
jp
jp
add
add
cmpsb
mov
jno
push
arpl
add
xchg
add
into
filds
loope
in
fdivr
lcall
cmp
add
int3
je
push
push
add
inc
push
and
add
shr
add
sub
lea
ror
pop
dec
xor
pop
push
push
push
push
lea
push
push
push
push
call
aam
add
push
mov
add
add
add
cwtl
jae
addr16
mov
in
movsb
add
push
cmpsb
add
mov
scas
out
pop
mov
imul
add
add
in
loopne
push
call
push
lea
push
push
lea
push
lea
push
call
lret
cmp
loope
add
mov
rolb
mov
mov
add
push
add
add
data16
add
push
add
test
add
rcr
pop
test
mov
out
add
pop
push
push
fcmovnb
add
rolb
mov
sub
pop
cmpl
je
push
push
xor
add
push
and
add
rol
inc
not
sub
sub
shl
ror
pop
shr
pop
push
dec
shl
add
shr
pop
push
push
push
push
call
lods
rolb
push
add
ja
lock
add
add
add
push
add
testb
fwait
out
jno
out
stc
mov
add
mov
call
add
add
icebp
cmp
add
push
lea
push
push
push
push
push
push
push
call
add
mov
add
pop
mov
lds
mov
push
add
add
add
add
add
loop
test
push
lret
add
negb
in
lods
add
dec
lret
add
in
fcomps
cmp
rol
je
push
push
inc
push
or
not
add
rol
sub
lea
xor
sub
lea
pop
shr
pop
push
dec
pop
push
push
push
lea
push
call
fcmovnb
add
test
roll
add
add
add
sarb
add
add
add
jne
add
add
add
lock
sub
pop
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
lea
xchg
stc
add
pushf
xchg
ret
ljmp
in
fstp
mov
sti
add
add
add
add
jge
push
gs
mov
xlat
mov
ljmp
add
fcmovbe
cld
sub
pop
cmpl
je
push
push
rol
push
xor
add
not
sub
add
sub
ror
not
dec
pop
xor
rol
sub
pop
push
push
push
lea
push
call
jle
add
add
pop
add
mov
add
add
out
test
mull
push
pop
mov
lock
lcall
push
add
pop
call
push
rol
lea
dec
pop
cmpl
je
push
push
dec
add
push
xor
add
lea
shr
rol
sub
dec
inc
pop
sub
pop
push
shl
add
ror
pop
push
push
rol
inc
pop
call
push
lea
push
lea
push
call
mov
in
iret
out
les
mov
jge
mov
loope
add
add
in
mov
int3
stos
test
shll
lods
push
mov
add
lcall
shll
add
pop
cmpl
je
push
push
sub
push
sub
add
lea
inc
sub
sub
rol
pop
shr
lea
pop
push
dec
add
pop
push
push
push
push
push
call
out
shrl
add
stos
add
fadds
add
into
add
test
mov
add
ret
add
add
pop
xlat
movsl
add
add
in
lock
call
push
add
pop
cmpl
je
push
push
inc
push
xor
add
ror
ror
sub
shl
pop
shr
pop
push
add
xor
sub
pop
push
call
push
xor
pop
cmpl
je
push
push
push
or
not
add
sub
shr
shr
pop
add
pop
push
push
lea
push
lea
push
push
call
add
pusha
add
add
add
add
mov
push
add
add
out
mov
cwtl
add
jbe
cwtl
jge
add
in
pop
push
push
sub
shl
pop
call
push
push
push
push
lea
push
push
push
call
cmpsb
add
pushf
cmpsb
add
add
add
mov
sahf
mov
subb
jae
push
rcll
add
pop
pop
test
mov
add
cli
lds
in
cmpl
je
push
push
shl
sub
push
or
inc
add
lea
rol
lea
sub
sub
sub
pop
xor
pop
push
shr
inc
add
pop
push
call
push
inc
pop
cmpl
je
push
push
shr
add
push
or
not
add
sub
xor
pop
pop
push
pop
push
call
push
rol
ror
sub
pop
cmpl
jne
push
push
push
call
lds
hlt
push
adc
mov
add
pushf
clc
add
mov
pop
xchg
add
call
fsubp
mov
outsl
push
add
scas
pop
sub
pop
mov
movl
push
add
pop
jmp
push
xor
sub
rol
pop
xor
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
push
jp
mov
jge
push
add
scas
mov
sti
in
push
fs
add
test
push
in
andl
xchg
xchg
add
jp
add
add
xchg
aam
sar
enter
add
xchg
add
je
xchg
jae
push
outsl
push
sub
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
call
int
pushf
add
fadds
jb
js
add
add
pushf
roll
cmc
loop
add
mov
add
mov
stc
mov
xchg
test
testl
outsl
add
in
pop
push
inc
sub
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
push
addr16
movl
test
mov
add
add
add
in
in
icebp
mov
imul
add
sti
ljmp
add
insb
fldl
add
add
add
roll
fdivr
lcall
push
rol
pop
ret
push
push
push
lea
push
call
pushf
add
add
call
add
mov
xchg
push
repnz
sbbl
imul
in
bound
movsb
jp
mov
add
movsb
hlt
out
movl
add
push
shl
shl
add
shr
pop
cmpl
jne
push
push
sub
shl
lea
shr
push
sub
add
sub
sub
shr
rol
add
pop
ror
dec
pop
push
lea
push
push
push
call
test
outsl
add
add
mov
xchg
into
push
js
loope
add
pop
je
addb
in
in
popa
push
add
xchg
add
ret
add
mov
mov
add
stos
jnp
test
push
lahf
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
ljmp
add
in
mov
pop
mov
xchg
add
hlt
add
add
add
test
add
ja
add
sti
add
add
ljmp
add
jne
jb
icebp
add
jnp
clc
add
add
imul
in
fcompl
lds
add
push
push
push
push
push
push
push
call
hlt
in
movsb
add
push
je
fcom
add
lcall
add
pop
jnp
fildl
add
imul
add
xchg
sti
xchg
int3
add
fmuls
add
sub
pop
push
push
sub
shl
pop
call
push
add
lea
not
shl
pop
jmp
push
ror
shr
pop
cmpl
je
push
push
lea
push
push
push
push
lea
push
push
call
js
jmp
jns
add
mov
rclb
data16
add
jecxz
mov
add
je
add
xchg
lahf
imul
test
add
push
data16
fwait
loop
add
aam
add
push
int3
fiaddl
stos
cmpl
add
jb
add
lcall
jge
add
add
leave
push
push
push
lea
push
lea
push
push
push
call
fldl
mov
add
in
mov
jo
clc
lret
fdivr
xchg
js
add
mov
add
push
pop
add
popf
mov
cltd
mov
add
filds
xlat
add
addr16
add
add
mov
mov
incb
les
push
lea
push
push
push
lea
push
push
push
push
call
add
add
cli
pop
lret
add
add
add
cli
add
pop
pop
add
add
pusha
push
jle
faddl
add
add
add
add
push
loopne
pop
push
sub
pop
pop
push
lea
push
push
push
push
call
add
hlt
mov
addl
jbe
push
icebp
mov
add
add
xchg
lcall
fidivrs
pop
enter
in
lcall
push
push
push
push
lea
push
call
test
add
push
int
add
add
xchg
add
mov
stos
test
mov
add
jno
cmpsb
stos
shll
imul
ror
add
pop
pop
leave
push
ror
ror
sub
pop
add
push
sub
ror
not
pop
ret
jmp
push
push
push
push
push
call
fcomps
add
add
cli
nop
movsl
filds
add
pushf
imul
scas
mov
add
int
fildl
jge
mov
add
out
mov
xchg
add
add
add
nop
imul
call
loope
add
in
add
movl
push
lea
lcall
jge
add
test
add
add
xlat
push
sub
push
or
not
add
shl
inc
rol
sub
not
xor
xor
dec
pop
ror
sub
pop
push
push
push
lea
push
push
push
push
call
mov
int
mov
add
push
loopne
add
add
jno
hlt
out
add
pop
fiaddl
jns
cli
add
movb
mov
addb
roll
scas
cltd
mov
mov
in
push
imul
add
fdivl
jp
add
enter
add
call
mov
sub
pop
pushl
push
push
lea
push
call
add
test
jl
jne
xorb
lock
add
mov
add
clc
jns
add
addl
mov
push
shrl
jecxz
add
rcrb
add
lds
add
add
in
add
jmp
pushf
cwtl
cwtl
scas
add
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
pop
mov
add
mov
xchg
popa
mov
lret
cld
push
out
add
leave
mov
cwtl
mov
mov
fwait
jle
jmp
add
add
add
add
xlat
cmpsb
aam
add
add
jmp
sub
pop
call
push
push
push
lea
push
push
call
jbe
mov
leave
xchg
add
add
movsb
mov
jb
add
out
add
mov
xchg
add
add
repnz
add
add
data16
pop
ja
roll
mov
mov
in
lcall
scas
sbb
add
rorl
xor
pop
cmpl
jne
push
lea
rol
pop
mov
push
sub
pop
mov
push
push
push
ror
push
or
inc
add
add
shr
sub
pop
rol
shl
pop
push
ror
add
pop
pushl
push
pop
call
push
push
push
call
rcll
cmpsl
pop
js
add
pop
jae
fiaddl
cmpsb
add
les
cmc
cmp
lods
sbbl
in
jae
les
lds
roll
xchg
add
arpl
pop
xchg
add
call
push
push
push
sub
add
not
sub
ror
shl
sub
pop
inc
shr
pop
push
not
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
jle
pushf
jecxz
cltd
add
scas
add
lahf
sti
in
add
add
add
hlt
hlt
fisubrl
add
jl
cli
add
call
add
add
call
call
push
push
ror
add
lea
push
or
inc
add
xor
sub
inc
dec
xor
pop
add
pop
push
add
sub
rol
dec
pop
pushl
call
push
push
push
push
push
push
push
push
call
pusha
filds
shr
fistps
push
add
xchg
jns
andb
lahf
add
pop
imul
cmpsl
add
add
in
loopne
call
push
push
not
push
or
not
add
xor
dec
add
sub
inc
add
xor
ror
pop
sub
sub
sub
pop
push
add
pop
pushl
push
push
push
call
add
add
push
jne
add
add
add
add
movsb
fwait
lahf
movsb
popa
mov
test
addl
add
xchg
jae
mov
cmpsb
mov
js
add
add
add
leave
loop
add
jo
add
add
add
gs
sub
pop
call
call
push
push
ror
xor
push
or
not
add
lea
shr
sub
shl
pop
pop
push
add
pop
pushl
call
push
lea
push
push
push
push
call
insb
iret
xchg
int
pusha
xchg
popl
cmc
add
add
jo
lds
push
in
add
outsl
add
add
int3
mov
shl
add
cld
add
testb
sub
pop
call
push
push
inc
shl
push
sub
add
lea
sub
add
dec
pop
add
add
pop
push
push
push
push
call
adcb
add
fisubrs
scas
movsb
cmpsl
add
push
filds
add
popa
std
lea
add
add
add
add
mov
lahf
mov
add
add
ret
mov
xchg
pop
xlat
cli
addl
add
push
sub
pop
pushl
call
push
push
push
lea
push
push
call
mov
add
jmp
stos
add
add
xchg
add
icebp
pop
lret
xchg
xchg
bnd
mov
mov
add
add
mov
out
jmp
jge
jmp
sub
pop
call
push
push
shr
push
push
pop
add
shl
rol
ror
sub
add
dec
pop
not
ror
sub
pop
push
rol
sub
not
pop
pushl
call
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
fs
add
into
add
cld
add
add
add
mov
add
insb
add
add
xchg
add
push
cld
addr16
add
loopne
je
add
add
push
add
lret
xchg
add
mov
add
ljmp
pop
mov
add
lcall
shrb
out
jne
push
sub
push
push
pop
add
shr
shr
sub
add
pop
rol
ror
pop
push
push
call
add
add
mov
add
lods
je
out
add
add
jle
lods
ljmp
add
add
add
fwait
js
stos
xchg
mov
fnstcw
scas
mov
mov
clc
lcall
jne
push
sub
xor
ror
pop
call
push
lea
pop
call
push
push
dec
push
or
inc
add
sub
rol
xor
sub
pop
xor
sub
pop
push
shl
dec
shr
pop
pushl
push
rol
pop
call
push
shr
pop
call
push
push
inc
add
not
push
sub
add
add
sub
xor
pop
xor
sub
pop
push
push
push
push
call
mov
add
test
neg
add
mov
add
add
pushf
push
mov
aad
jnp
lods
add
sub
pop
pushl
push
push
lea
push
call
in
mov
add
flds
sarb
stos
add
iret
add
jmp
enter
add
lea
add
mov
sahf
add
mov
jae
clc
add
loopne
in
hlt
pop
call
push
push
call
add
add
faddl
mov
add
imul
add
popl
jmp
test
shl
mov
add
push
roll
jmp
add
jne
mov
jmp
add
add
aam
stos
sub
pop
lea
push
push
inc
shl
pop
call
push
push
not
shr
xor
push
xor
add
shr
sub
pop
sub
inc
add
pop
push
push
push
push
push
push
call
xchg
sahf
add
popa
add
lods
add
add
scas
in
aad
push
call
add
add
mov
mov
mov
arpl
fistl
ret
add
cmpsl
leave
mov
fidivrs
fs
popa
scas
add
add
jno
add
mov
in
call
call
push
lea
push
call
fstpl
mov
mov
test
jae
addb
xchg
add
rcrl
mov
out
jnp
add
add
add
lcall
shrb
mov
out
inc
lea
push
or
inc
add
rol
add
sub
sub
ror
shr
add
pop
dec
shl
add
lea
pop
push
rol
sub
xor
pop
pushl
call
push
dec
not
xor
pop
call
push
push
ror
lea
shl
push
push
pop
add
inc
sub
add
add
rol
inc
pop
rol
dec
pop
push
push
push
push
push
call
jle
movsl
push
add
cmpl
jmp
add
mov
pop
stos
loope
add
add
gs
filds
add
add
push
xchg
add
mov
add
pop
filds
push
add
popa
add
addl
add
jne
push
dec
add
sub
lea
pop
call
push
ror
pop
call
push
sub
shl
pop
lea
push
push
dec
push
or
inc
add
sub
add
sub
shr
dec
pop
shr
pop
push
push
lea
push
push
call
jb
add
add
fs
add
test
bound
add
filds
add
add
push
add
fwait
add
les
popa
mov
lret
add
repnz
cli
repnz
pushl
push
rol
ror
sub
ror
pop
call
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
loopne
xchg
add
lret
add
pop
add
push
jl
mov
add
cli
add
fnstsw
add
push
stc
aam
pop
mov
sbbb
in
fcompl
push
push
push
push
push
push
push
push
call
add
add
clc
add
add
pushf
xchg
repnz
add
movsb
ficomps
in
adc
add
add
add
je
xchg
mov
add
add
mov
add
int3
push
add
fisubrs
pushf
mov
add
add
lcall
shrb
lods
out
push
xor
inc
add
add
push
or
inc
add
shl
lea
add
not
sub
add
not
xor
pop
add
sub
pop
push
push
push
call
add
add
add
scas
lds
lea
incb
lcall
xchg
push
jl
test
out
icebp
lock
add
lret
insb
fadds
stos
mov
add
fsts
jb
add
add
add
push
pop
rcll
pop
pushl
push
push
lea
push
call
mov
add
test
xchg
mov
add
ror
pop
add
add
mov
lret
mov
add
out
popf
add
sub
pop
call
push
lea
push
push
lea
push
call
les
mov
pop
cmc
add
leave
add
add
loop
out
ljmp
add
add
add
jae
add
roll
imul
stc
mov
push
cltd
mov
add
xchg
fadds
add
pop
addb
leave
les
negl
lock
call
mov
push
push
inc
push
and
add
xor
sub
add
add
pop
not
sub
shr
pop
push
push
push
push
lea
push
push
push
call
jae
stos
js
in
mov
ljmp
pop
in
lods
sbbb
fiaddl
jge
out
add
out
add
data16
add
add
jbe
flds
lcall
jne
call
push
push
push
push
call
nop
vprotw
jmp
add
in
add
mov
popa
xchg
mov
in
add
popf
mov
add
sub
pop
push
push
shl
pop
pushl
push
lea
add
add
pop
call
push
push
shr
push
push
pop
add
shr
inc
sub
ror
pop
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
addb
mov
add
lcall
add
in
add
fiaddl
test
sti
fwait
add
out
movsl
push
jl
movsl
xchg
lret
add
data16
add
lcall
jne
push
not
xor
not
pop
call
push
push
shr
rol
push
and
add
lea
sub
xor
not
shr
pop
shl
shl
pop
push
push
add
rol
rol
push
or
inc
add
not
sub
lea
sub
rol
not
pop
ror
pop
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
push
in
pop
add
loope
push
mov
jge
in
add
test
add
push
sub
pop
call
push
push
shr
push
or
inc
add
shr
dec
sub
xor
pop
not
ror
xor
pop
push
lea
push
push
push
call
mov
mov
add
mov
add
in
mov
mov
xchg
rcll
mov
in
idiv
jne
mov
add
add
add
add
sub
pop
pushl
call
push
dec
pop
mov
lea
push
shl
inc
rol
shr
pop
lea
push
shr
pop
push
push
shr
add
pop
push
push
push
ror
lea
shr
pop
push
push
push
push
call
int3
xchg
jnp
fmuls
mov
add
add
add
add
jl
mov
in
xchg
add
movsl
hlt
mov
add
adcl
into
add
pushf
add
push
add
add
push
add
stos
add
out
sub
pop
push
push
shl
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
call
mov
add
add
int
leave
popf
add
repnz
add
add
add
lods
add
scas
push
add
in
add
nop
push
add
scas
sub
pop
push
push
push
push
push
push
lea
push
push
call
icebp
in
mov
ror
add
ljmp
push
into
xchg
pushf
repnz
add
enter
add
scas
mov
jns
add
add
bnd
in
add
add
out
cmpsb
les
jne
push
push
push
push
push
push
push
lea
push
call
add
enter
and
add
testl
addb
movsl
fdivs
add
mov
cmc
add
shr
cltd
add
mov
addl
add
jmp
je
mov
pop
call
push
push
rol
ror
lea
push
xor
add
inc
sub
ror
sub
lea
pop
rol
add
pop
push
add
lea
xor
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
fwait
add
add
imul
add
movsb
stos
scas
add
hlt
add
icebp
test
test
jno
jmp
add
cmc
mov
add
push
mov
clc
sti
jno
add
mov
add
rol
je
out
mov
push
sub
pop
call
push
sub
xor
shl
pop
call
mov
push
push
push
push
push
push
call
int
out
ffree
cmpsb
enter
addr16
addl
rcrl
test
mov
cltd
mov
ljmp
and
add
jae
mov
lret
icebp
pop
loop
in
call
pop
dec
jne
push
dec
dec
pop
jmp
push
push
call
cwtl
mov
add
add
filds
add
jmp
mov
pushf
xchg
lret
pop
push
addl
rolb
add
add
add
push
add
adcl
add
add
fildll
add
addl
add
add
push
mov
sub
pop
call
push
push
shl
rol
sub
push
sub
add
sub
add
rol
pop
lea
pop
push
push
lea
push
push
push
push
call
lahf
add
fbstp
add
movsl
add
add
add
add
add
push
add
add
test
mov
leave
jno
icebp
loope
add
test
push
add
mov
add
movsb
add
popa
add
lret
mov
call
pushl
push
shr
pop
call
push
push
lea
push
push
push
push
push
push
push
push
push
call
ret
in
add
lcall
out
jns
xchg
js
jmp
jmp
add
add
popa
test
lods
ret
scas
mov
add
popa
ljmp
rclb
jp
adc
push
lea
push
push
push
push
call
mov
lea
add
idivb
mov
ja
xchg
add
add
lea
outsl
mov
mov
jbe
push
orb
test
add
adcl
jo
into
push
in
sahf
add
cltd
sub
pop
mov
push
push
call
js
add
add
fldt
in
aad
jmp
cmpsb
add
add
add
fadds
jne
jne
sahf
lds
cli
add
add
in
push
push
add
add
lcall
pushf
and
ljmp
and
push
or
not
add
dec
sub
sub
pop
lea
pop
push
rol
shr
add
pop
pushl
call
push
inc
sub
dec
pop
push
push
xor
pop
call
push
push
rol
shr
lea
push
or
inc
add
not
sub
add
shr
pop
shr
lea
pop
push
ror
pop
pushl
call
push
push
push
lea
push
lea
push
push
push
push
call
add
xchg
add
loop
lea
mov
in
lods
andb
cltd
in
add
leave
push
hlt
push
add
jmp
add
mov
pop
sub
pop
call
push
shr
shl
pop
mov
push
push
push
push
lea
push
push
call
add
add
cld
jb
jns
add
jnp
xlat
int3
xchg
mov
mov
add
jnp
add
lcall
pushf
and
ljmp
inc
sti
mov
inc
add
push
push
pop
add
not
dec
shr
sub
pop
dec
pop
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
fiadds
fisubrl
add
icebp
repnz
add
add
jo
stc
push
add
mov
sub
pop
pushl
call
push
lea
push
push
push
push
push
call
add
out
pop
loopne
into
push
out
loope
scas
clc
add
in
jp
popl
in
add
lds
fistps
ret
jbe
fnstsw
pusha
rcrl
mov
ficomps
add
in
ja
shll
add
xchg
stc
add
add
push
push
sub
sub
pop
push
push
lea
push
push
push
push
push
call
add
imulb
add
int3
cmc
add
add
add
lcall
les
in
add
lods
add
lcall
add
rorl
lret
enter
hlt
push
push
add
not
ror
push
push
pop
add
sub
xor
shl
ror
sub
shr
inc
pop
not
add
pop
push
push
lea
push
push
lea
push
push
push
call
mov
addl
jle
add
add
movsl
ja
add
add
jmp
stos
popf
add
add
pop
xchg
add
lds
add
add
push
je
xchg
add
fiadds
lcall
push
sub
shl
pop
call
push
push
xor
xor
shr
ror
push
push
pop
add
ror
not
sub
not
shr
add
lea
pop
not
add
pop
push
inc
add
pop
pushl
push
sub
sub
not
pop
call
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
fisubrs
add
lds
xchg
mov
add
in
add
add
in
add
clc
and
addl
push
enter
cmc
add
icebp
mov
xchg
ljmp
add
out
loop
add
add
sti
lret
add
jge
enter
sub
pop
push
push
pop
call
push
push
inc
rol
push
or
not
add
add
sub
sub
pop
not
dec
pop
push
shl
inc
not
inc
pop
pushl
push
rol
pop
call
call
push
lea
push
call
adcb
add
mov
add
mov
pop
add
add
ret
mov
hlt
insb
jle
add
add
sti
xchg
pusha
movsb
rorl
add
add
add
push
enter
fwait
add
ljmp
out
xchg
loope
test
pop
pop
add
sub
pop
jmp
push
inc
inc
sub
dec
pop
pushl
mov
push
push
lea
push
lea
push
lea
push
push
call
jb
mov
icebp
pop
in
add
fs
mov
lahf
mov
fwait
add
test
addl
add
ja
pushf
flds
mov
out
add
jnp
add
add
in
icebp
xchg
add
out
sub
pop
jmp
push
push
lea
ror
dec
push
sub
add
sub
lea
lea
sub
ror
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
movsb
leave
add
les
add
add
cmc
fdiv
push
xlat
jns
push
pop
push
testb
jnp
xchg
int
add
mov
add
add
rcrb
mov
add
jno
add
rolb
push
pop
out
add
add
add
add
add
add
add
sub
pop
pushl
push
shr
ror
sub
inc
pop
call
push
inc
dec
not
pop
push
push
pop
call
push
push
xor
lea
rol
push
and
add
shl
add
xor
sub
rol
pop
rol
pop
push
shl
dec
add
shr
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
call
cwtl
add
roll
add
xlat
mov
add
movb
addl
add
out
lock
ja
add
fcmovnbe
add
push
jecxz
loopne
push
data16
add
add
mov
in
fcomps
push
inc
sub
ror
pop
call
push
push
push
push
push
push
push
lea
push
lea
push
call
repnz
addr16
jp
loope
cmpsl
mov
out
add
add
add
jno
popf
jb
add
xchg
mov
in
fcompl
add
push
lea
push
push
call
add
add
add
cld
in
add
add
mov
add
pusha
test
leave
loope
mov
out
xlat
shlb
ficomps
add
in
hlt
lcall
push
sub
shr
pop
pop
push
inc
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
xchg
push
add
add
icebp
mov
jecxz
add
xlat
pop
lret
mov
jp
pusha
lcall
pop
pop
leave
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
in
add
lret
stos
aam
pop
pushf
add
out
insb
add
add
sti
roll
fs
test
add
push
leave
add
add
mov
add
ljmp
incb
lcall
les
dec
shr
dec
inc
pop
ret
push
sub
shl
lea
rol
pop
leave
push
push
push
lea
push
push
call
xlat
lret
aad
iret
stos
mov
push
mov
add
loope
stc
fld
ja
push
imul
fwait
pop
in
add
mov
pop
cwtl
add
add
mov
push
lds
hlt
add
add
mov
cld
add
add
movsl
jp
add
sub
pop
ret
push
push
push
push
push
lea
push
push
push
push
push
call
jp
add
lods
test
add
popf
mov
add
arpl
fildl
in
add
xchg
stos
add
cmpsb
add
adcl
popf
xlat
jns
pop
mov
bound
fistpl
int
les
add
add
lock
add
jnp
clc
xchg
jns
in
fdivr
lcall
push
inc
lea
shr
inc
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
jne
xchg
add
add
popa
jmp
neg
mov
xchg
add
rolb
pusha
imul
scas
push
add
mov
xchg
add
mov
mov
add
xorl
add
add
ficoms
push
int
adcl
faddp
add
mov
roll
pop
cmpl
jne
push
rol
inc
xor
dec
pop
mov
push
push
push
lea
push
call
movsb
aam
add
iret
stos
add
enter
add
bound
mov
jecxz
mov
add
add
add
add
lods
loope
test
xlat
int3
add
sub
pop
jmp
push
add
pop
mov
and
push
lea
sub
pop
xor
xor
push
push
lea
push
push
lea
push
push
push
push
call
add
stc
add
push
xchg
add
enter
cmc
add
js
loope
jb
mov
stos
mov
mov
cmc
add
clc
add
imul
xchg
xchg
mov
clc
add
sub
pop
add
xor
push
push
call
add
cld
in
lock
mov
mov
add
mov
mov
add
xchg
fildl
add
add
call
add
roll
test
out
out
jmp
int
in
push
add
xchg
add
xchg
add
stos
add
jp
mov
sub
pop
dec
sub
push
shl
pop
jmp
sub
push
lea
push
push
push
push
push
call
pop
mov
pop
add
jle
lcall
mov
add
push
mov
xchg
jmp
hlt
lret
add
jno
add
pop
add
incb
xchg
jne
xchg
loop
jp
add
add
leave
fcomip
nop
add
rclb
add
sub
pop
pushl
pop
push
shl
sub
sub
add
pop
sub
push
push
push
push
push
push
push
push
push
call
ljmp
mov
push
in
add
add
test
scas
push
add
test
add
add
sub
pop
cmp
jne
mov
push
push
push
push
call
xchg
push
add
add
add
mov
push
jl
loop
iret
pop
pop
push
cmc
addl
push
fidivrl
mov
mov
mov
add
add
js
test
stos
add
add
add
fadd
mov
dec
cmp
lea
push
push
push
lea
push
push
push
lea
push
call
fists
add
add
mov
add
mov
add
sti
enter
add
add
ret
mov
xchg
stc
add
movsl
add
jmp
mov
pop
mov
add
cmpsb
mov
pop
add
shrl
add
lcall
jmp
pop
mov
push
not
pop
shr
push
shr
ror
pop
add
sub
push
xor
ror
xor
dec
pop
pushl
pop
push
not
ror
sub
pop
shr
push
xor
pop
and
push
push
push
push
push
push
push
push
push
push
call
clc
mov
add
add
add
into
mov
add
add
add
add
mov
sub
pop
sub
cmp
jne
push
push
push
push
push
push
lea
push
push
push
call
xchg
add
arpl
add
mov
add
add
add
add
add
add
add
add
mov
push
js
add
jp
jnp
push
cltd
in
add
ret
push
xor
pop
push
push
lea
push
lea
push
push
lea
push
call
mov
add
jle
call
add
popa
pop
lret
test
add
pop
movsl
mov
add
add
xchg
mov
pop
mov
mov
into
add
add
shrb
stos
xchg
addr16
ret
mov
cli
pop
add
add
faddl
cmc
xchg
sub
pop
mov
push
push
push
push
push
lea
push
call
notl
add
test
les
add
mov
push
add
add
cli
add
jp
jns
scas
add
add
test
add
pop
add
push
push
push
push
push
call
test
pop
add
xlat
add
ljmp
add
cmc
xchg
gs
add
push
add
mov
in
pop
push
push
lea
push
push
push
lea
push
push
push
call
cld
add
mov
add
popf
sbbb
add
sti
pop
push
fiadds
push
cwtl
add
jl
add
jb
xchg
out
add
rcl
fdivp
ret
push
out
add
add
mov
mov
mov
lods
jb
add
shr
add
les
push
stc
add
mov
add
xlat
jns
incb
push
push
push
push
push
push
call
scas
leave
jecxz
add
addb
stc
in
cltd
movsb
add
add
add
repnz
std
mov
scas
fcmovu
adcb
xchg
add
xchg
incb
ja
sbbb
add
pop
add
add
mov
add
add
scas
mov
add
imul
xor
pop
push
push
push
push
push
push
push
push
call
push
jmp
add
loopne
out
cwtl
add
imul
mov
pop
add
addr16
add
jmp
in
xchg
arpl
into
add
mov
add
test
sbbb
add
add
add
xchg
pop
add
xchg
enter
lcall
pop
or
push
push
lea
push
push
call
jno
xchg
flds
add
rolb
jge
rcrb
xchg
mov
int
stos
jne
jge
shrb
fwait
add
int3
mov
lods
or
pop
int3
pop
jae
mov
xchg
mov
lcall
ljmp
iret
push
push
call
hlt
add
add
add
pushf
jae
add
mov
add
mov
out
fldl
xchg
pop
add
jmp
add
nop
out
add
jae
push
add
js
insb
fwait
add
mov
add
pop
scas
add
stc
add
xchg
add
jo
add
add
lods
add
sub
pop
shr
add
push
dec
pop
mov
push
push
push
lea
push
lea
push
push
push
call
pop
clc
icebp
loop
mov
jbe
add
add
add
out
add
push
add
xchg
int
mov
add
ret
in
lods
add
add
add
add
fidivrs
outsl
rcl
xchg
mov
lret
fldl
je
lds
lcall
pop
or
lcall
push
lea
push
call
mov
push
add
outsl
enter
out
add
jle
jno
sahf
loop
ret
jne
add
call
fwait
repnz
mov
add
pop
cmc
xchg
mov
add
sub
pop
mov
push
inc
pop
add
push
shr
xor
xor
pop
xor
push
push
push
push
lea
push
push
push
call
int
add
jns
jnp
add
mov
movsb
addl
pop
add
ljmp
add
add
add
add
pusha
test
add
add
out
cwtl
cmpsb
add
pop
add
pushf
push
mov
ljmp
pop
lcall
push
lea
push
push
push
push
push
push
call
popa
test
scas
push
pop
stos
adcl
out
lret
cwtl
add
xchg
add
cli
testl
pop
mov
mov
xchg
in
in
js
lea
pop
testb
add
loope
jb
jecxz
xchg
push
mov
xchg
or
ffreep
mov
add
popa
mov
in
and
push
lea
push
push
push
call
add
scas
add
add
mov
xchg
outsl
mov
add
add
je
add
mov
popa
hlt
add
add
jecxz
add
enter
add
in
lock
lcall
rolb
push
push
call
add
add
jns
xchg
mov
scas
cld
rolb
add
jle
adcl
jecxz
jbe
fildl
mov
add
add
jl
lret
jmp
movsb
add
add
rorb
add
iret
scas
add
add
fldl
add
add
in
lock
lcall
add
xlat
pop
inc
cmpb
jne
push
dec
sub
pop
add
push
push
push
call
add
lea
add
add
clc
add
stc
lret
add
add
xchg
fs
ljmp
pushf
sub
pop
cmp
je
push
sub
pop
add
push
push
lea
push
push
lea
push
push
push
call
mov
add
shrb
faddp
imul
mov
add
imul
test
mov
sub
pop
cmpl
jne
xor
push
sub
pop
pop
push
shl
pop
pop
push
push
push
push
push
lea
push
call
add
add
add
filds
add
add
sti
add
mov
icebp
xchg
iret
mov
add
add
sahf
std
stos
add
add
xlat
lods
add
call
test
lret
les
jl
in
hlt
nop
xchg
icebp
add
cmpsl
add
pop
cld
add
mov
call
or
dec
inc
lods
push
push
push
lea
push
push
push
lea
push
push
call
xchg
mov
fadds
mov
mov
mov
mov
add
data16
testb
add
mov
fdivs
mov
add
in
mov
mov
leave
lds
in
fdivr
lcall
push
rol
shl
pop
pop
leave
push
push
push
lea
push
push
push
call
roll
stos
add
mov
loopne
add
lods
push
add
jmp
push
add
push
fildl
mov
push
add
add
add
add
jnp
add
or
mov
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
test
std
add
add
add
pushf
enter
aad
mov
ret
add
repnz
in
fcompl
push
or
iret
lea
xor
add
pop
push
push
dec
pop
push
push
add
pop
add
mov
push
push
push
push
call
mov
imul
lret
jns
jle
cwtl
pop
testl
add
addb
mov
push
add
add
nop
sub
pop
testw
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
add
jno
mov
add
movl
xchg
test
push
fsts
push
add
data16
roll
add
fsubrl
push
add
in
add
stos
aam
scas
add
sub
pop
pop
push
shr
pop
pop
push
push
call
lcall
add
push
insb
into
roll
add
pusha
test
push
push
jae
add
add
add
jae
loope
jmp
mov
ljmp
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
pop
insb
fxch
jns
push
add
add
insb
lods
lahf
add
add
add
add
lock
add
ljmp
add
add
mov
add
ret
fistl
xchg
aad
ja
mov
add
mov
add
add
cltd
add
movsl
add
fcomps
push
inc
pop
call
push
sub
add
sub
inc
pop
xor
push
inc
inc
rol
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
add
mov
clc
bound
jbe
lret
add
add
cld
xchg
add
mov
sahf
incb
mov
je
mov
lahf
push
add
lret
add
add
jecxz
jno
add
movsl
xlat
sub
pop
pop
push
add
inc
pop
pop
push
shr
xor
inc
pop
pop
pop
push
push
push
push
lea
push
call
popa
add
mov
xor
push
std
add
add
repnz
jle
mov
adc
add
mov
pop
cli
xchg
add
add
outsl
test
lret
add
mov
pusha
loopne
shll
iret
push
loope
mov
sub
pop
leave
push
add
pop
ret
push
push
push
push
push
push
push
call
add
mov
aad
fildl
mov
xchg
add
add
loop
pop
mov
imul
in
add
test
add
test
addb
std
xchg
push
popa
lahf
add
in
in
push
mov
push
ror
add
pop
add
push
push
push
lea
push
push
push
call
clc
add
add
insb
sbbl
add
lock
add
pop
add
jb
add
std
add
add
call
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
jns
stos
fs
data16
add
add
add
add
mov
mov
out
add
lcall
push
dec
dec
pop
mov
push
push
pop
pop
push
push
call
xchg
add
addr16
cli
fadd
je
add
lret
xchg
add
testl
add
xchg
push
push
jns
jge
mov
add
add
loope
xchg
xchg
ljmp
loopne
add
pop
add
cltd
or
add
jnp
xchg
addl
stos
mov
in
fmul
add
bnd
cld
ret
add
add
lcall
push
cmp
sub
not
pop
sub
mov
push
lea
pop
shr
push
push
push
call
sar
addb
mov
lock
add
add
add
pushf
in
add
cmpsb
add
fidivrl
shl
pop
add
mov
lret
add
sub
pop
add
push
sub
pop
mov
add
push
not
add
pop
pushl
push
push
call
cli
mov
movsb
outsl
faddl
pop
mov
int
movsl
add
pop
add
ja
add
icebp
push
imul
add
add
pop
add
jmp
imul
add
add
add
repnz
lcall
inc
clc
mov
push
add
sub
pop
add
xor
push
push
call
lock
add
and
add
add
mov
mov
gs
add
out
add
xchg
in
clc
lcall
adc
push
add
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
cld
add
add
mov
xchg
xlat
add
fwait
cmc
add
imul
push
add
mov
fsubp
add
imul
mov
in
add
sub
pop
add
xor
push
not
pop
rol
push
inc
rol
sub
pop
nop
push
add
add
pop
nop
push
push
push
push
push
push
call
add
rclb
add
sbbl
iret
cmc
add
add
arpl
add
add
cmpsb
cmpsb
add
mov
xorb
add
add
add
sti
jns
push
addb
add
cwtl
add
in
call
xor
push
add
shr
pop
nop
push
push
push
push
push
push
push
call
add
push
jae
mov
lods
test
xchg
mov
cmpl
jmp
bound
add
loope
cmc
add
imul
fdivl
addb
in
mov
mov
imul
add
pop
nop
push
push
push
push
call
add
addr16
lds
ret
test
add
rcl
mov
add
xchg
js
mov
shlb
in
add
cltd
sub
pop
inc
push
shl
add
sub
add
pop
nop
push
add
add
shl
pop
nop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
movsl
popl
mov
movsl
mov
pusha
loop
jle
jb
add
add
add
fstps
jl
mov
cmp
icebp
sti
add
add
xchg
jns
testl
cmpb
jne
add
push
push
push
push
lea
push
push
push
lea
push
push
call
js
add
bound
pop
add
lret
add
jbe
mov
ljmp
add
test
add
push
lods
flds
incb
leave
mov
add
add
in
fwait
in
leave
add
jnp
in
add
fisubl
add
clc
sub
pop
nop
nop
push
inc
sub
pop
cmp
je
push
sub
pop
nop
nop
push
add
inc
pop
inc
push
dec
pop
nop
push
push
push
push
push
lea
push
push
call
addb
add
filds
push
cmpsl
cmpsb
add
pop
jo
jno
sti
movsl
push
mov
push
xchg
add
jns
jb
push
stos
jb
xchg
enter
lret
les
leave
add
scas
pop
add
push
rcrb
mov
jmp
add
add
lcall
push
dec
shr
pop
cmp
jb
push
push
push
push
call
add
jl
add
add
insb
stos
mov
add
cwtl
mov
shll
mov
test
pop
clc
in
xchg
add
icebp
faddl
xchg
jne
mov
jp
stos
jbe
mov
add
pushf
icebp
mov
insb
add
add
add
test
int
gs
push
add
add
je
add
pop
sub
pop
xor
push
lea
rol
add
pop
jmp
push
xor
ror
inc
pop
mov
add
push
lea
shl
sub
pop
movzwl
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
mov
cmpl
xchg
push
aam
add
add
fiaddl
loope
mov
push
add
vcvtsd2ss
add
mov
movsb
add
add
rolb
movsb
sti
mov
ficoml
ficomps
popf
sub
pop
mov
push
not
pop
add
push
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
out
insb
mov
scas
add
jle
jno
add
mov
mov
mov
add
add
xchg
xchg
shl
add
leave
mov
hlt
add
arpl
add
add
mov
add
ja
add
add
out
pusha
sub
pop
xor
xor
push
push
push
push
push
push
push
lea
push
push
call
in
mov
mov
xchg
add
add
add
rcrb
add
mov
add
add
mov
hlt
sub
pop
shl
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
cld
add
test
mov
mov
push
fiadds
mov
add
add
add
scas
add
gs
mov
repnz
add
shr
add
add
out
ljmp
xchg
push
scas
add
add
add
stos
sub
pop
xor
push
add
shr
not
pop
shl
push
lea
push
lea
push
call
add
add
sarl
outsl
add
add
add
pop
cmpsl
imul
stos
bound
add
scas
jnp
lods
into
cltd
lds
add
pop
enter
rolb
bound
clc
sahf
pop
add
add
lods
add
in
hlt
lcall
dec
nop
add
rorb
not
pop
shl
xor
push
rol
pop
mov
add
push
push
lea
push
push
push
push
lea
push
push
call
clc
fiaddl
xchg
jge
fiaddl
lods
pop
into
negl
hlt
add
mov
imul
mov
arpl
add
call
add
aam
in
loopne
pop
push
push
push
push
call
fs
add
fwait
clc
call
add
add
jle
out
lret
push
mov
aad
push
adcb
jmp
roll
jne
in
lock
lcall
pop
push
push
push
push
push
lea
push
call
popa
add
lods
out
rcl
add
les
push
jbe
xchg
add
add
arpl
fs
je
into
xchg
addr16
add
xchg
cltd
add
add
jbe
add
lcall
leave
push
push
push
call
add
lds
add
push
xchg
jb
loope
add
push
add
mov
jecxz
aam
add
lods
add
add
or
push
rol
pop
push
mov
push
push
push
push
lea
push
call
int
sti
mov
idiv
fdivrp
sahf
pop
in
int
mov
add
mov
clc
add
fiaddl
lret
lods
add
mov
pop
push
push
push
not
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
ja
add
pop
js
add
nop
loopne
movsl
add
add
add
fnstsw
add
add
mov
mov
movsl
add
add
jl
jb
loopne
in
fdivr
lcall
mov
push
shr
sub
pop
mov
push
shr
ror
xor
pop
mov
push
push
push
push
push
push
push
call
mov
lods
add
out
add
loopne
add
add
lret
into
out
rcrl
add
add
mov
add
pop
call
push
add
sub
pop
test
je
mov
push
push
push
push
push
push
call
repnz
add
jecxz
add
cwtl
loope
shrb
loope
add
push
add
jne
mov
rcrb
imul
imul
mov
insb
add
add
add
shl
mov
pop
pushf
add
cwtl
add
pop
add
nop
add
mov
call
test
je
push
push
push
push
push
push
call
stos
add
add
pop
add
test
cmc
push
mov
pop
in
add
pop
in
xchg
fwait
add
add
mov
movsl
mov
add
add
add
pop
add
push
lods
add
add
mov
addr16
add
xchg
gs
pop
add
sub
pop
mov
push
shl
not
not
sub
pop
mov
mov
push
add
inc
pop
inc
push
rol
ror
pop
cmp
je
test
je
push
push
push
push
push
push
push
call
flds
cwtl
jle
into
fwait
pop
xchg
add
add
mov
js
rcll
add
jb
add
mov
push
add
add
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
call
push
add
add
gs
mov
in
icebp
ja
add
mov
cmc
mov
jae
add
lret
loopne
jb
lods
add
mov
cld
jecxz
mov
jo
add
add
pop
jmp
rolb
test
xlat
add
in
call
inc
cmp
je
push
sub
pop
test
jne
xor
push
push
push
push
push
call
add
jnp
fs
cmc
mov
add
xchg
add
jge
mov
jbe
mov
call
mov
filds
mov
xchg
add
jle
jnp
mov
pusha
test
fildl
push
dec
pop
pop
pop
push
lea
push
push
call
add
clc
clc
xchg
xchg
add
add
rolb
jl
push
add
test
mov
add
negb
pop
add
add
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
add
fwait
iret
add
scas
add
stos
flds
imul
hlt
loop
xchg
add
leave
add
lods
add
sti
xchg
add
add
stc
scas
add
stos
icebp
lahf
add
in
fdivr
lcall
ret
push
inc
pop
mov
push
rol
lea
inc
pop
inc
push
rol
shr
shl
pop
cmp
jne
push
add
pop
lea
mov
push
lea
push
push
call
xchg
in
jno
xchg
iret
rolb
add
int
mov
add
mov
rclb
pop
mov
jp
andl
mov
lcall
in
test
add
push
push
push
push
push
push
push
lea
push
push
call
add
jno
testl
add
add
add
pushf
nop
fldenv
add
add
data16
test
push
mov
imul
roll
jge
js
add
ja
jmp
ljmp
mov
pusha
cmpsb
into
in
add
hlt
loopne
cmpsl
add
ja
in
fdivr
lcall
push
add
push
pop
cmp
jne
push
inc
shl
add
pop
mov
push
rol
inc
not
pop
test
je
mov
push
push
push
push
push
push
push
call
add
cld
out
add
scas
add
mov
add
leave
add
sahf
add
sti
add
cmpsb
add
fsubr
add
iret
nop
add
add
add
testl
mov
add
add
stc
pusha
add
mov
push
push
lods
js
sub
pop
add
push
xor
add
pop
cmp
je
push
lea
push
lea
push
call
jbe
mov
jns
add
iret
jle
sarl
mov
jmp
push
push
add
mov
add
fisubs
aad
ret
jbe
mov
in
mov
in
fildl
jmp
testl
jmp
add
xlat
sub
pop
jmp
xor
push
not
pop
pop
pop
push
push
push
push
call
cmpl
add
xlat
add
add
push
add
add
mov
add
pop
xlat
andb
push
pusha
mov
lret
fildl
out
add
movsb
add
add
lock
scas
mov
jmp
pop
push
sub
sub
add
pop
pop
push
sub
inc
inc
pop
leave
push
push
lea
push
lea
push
push
call
jns
add
push
add
add
repnz
add
add
pop
in
xlat
mov
add
fcoml
std
mov
add
push
jle
leave
pusha
sub
pop
ret
lea
push
sub
not
shl
pop
pop
push
add
pop
pop
push
add
pop
pop
pop
push
lea
push
push
lea
push
push
call
mov
popl
add
push
add
add
loope
add
add
add
push
add
add
sub
pop
leave
push
inc
pop
ret
push
push
push
push
push
push
push
push
call
add
push
filds
add
clc
les
fsubl
jb
jl
gs
lods
add
mov
add
jp
sti
xor
sub
pop
mov
push
sub
pop
pop
push
pop
pop
push
push
call
add
add
mov
jbe
les
fldt
stos
fcompl
mov
mov
add
aam
add
aam
test
push
add
data16
add
add
push
not
sub
pop
pop
push
push
push
lea
push
push
call
test
shl
ret
add
add
add
enter
lds
add
mov
hlt
add
add
mov
add
add
add
leave
jmp
add
jne
mov
add
into
add
ljmp
ret
xor
cmp
rolb
adc
icebp
adc
and
adc
inc
cmp
xchg
cmp
lock
adc
popa
cmp
xor
adc
mov
add
mov
mov
pop
xlat
insb
lods
jmp
adc
jge
dec
sti
add
out
insb
pop
sub
jp
push
cmc
in
adc
std
dec
std
out
adc
cmp
push
out
jle
push
mov
rol
add
jg
icebp
push
bound
scas
mov
ljmp
sub
inc
mov
cmp
xor
stos
call
pop
xchg
xchg
pop
int
lret
xor
jmp
icebp
or
cwtl
xchg
and
mov
sbb
inc
call
sbb
int3
stc
or
xchg
lea
xchg
dec
int3
dec
lret
mov
cmp
cmpsl
je
lods
test
and
xlat
in
sub
add
mov
je
es
lods
xor
loop
mull
mov
mov
mov
and
cs
pushf
movsb
jnp
add
mov
iret
test
je
cmp
sbb
mov
inc
cmp
les
mov
js
lss
pushf
scas
fwait
add
inc
loop
push
mov
xchg
loope
stos
add
jp
xchg
add
imul
dec
out
cltd
sbb
push
lret
cmpl
lods
or
cli
lahf
xrstors
into
xchg
dec
sub
dec
pop
push
int
out
outsb
or
pop
ret
fcomps
lahf
mov
shll
rclb
cli
add
mov
insb
push
dec
bound
mov
roll
push
add
mov
loope
insl
and
mov
je
cld
sub
stos
lcall
mov
andb
inc
cmpsb
push
pusha
fsts
push
add
roll
inc
es
or
test
flds
pop
or
inc
pop
lods
test
sbb
jno
shlb
dec
cli
popa
push
sbb
repnz
fdivl
mov
push
lahf
jg
movsb
cmp
cltd
call
ror
jle
mov
arpl
xor
cmp
xor
sub
cmp
push
mov
repz
loope
push
xor
shr
and
push
xchg
sbb
add
mov
lahf
arpl
add
pushf
es
jae
repz
jg
and
xor
mov
sbbl
sbb
sbb
xor
xor
cmp
adc
add
movsl
cmp
mov
mov
pushf
xor
cmc
rcrl
push
test
inc
pop
jmp
xchg
lods
xchg
or
popf
xor
les
mov
inc
int
pop
dec
dec
ljmp
lods
fistpl
add
mov
fld
rcl
push
adc
mov
pop
sbb
out
push
dec
loopne
ror
insl
sub
mov
psubsb
fildl
ret
popa
add
clc
mov
sbb
push
or
mov
popf
jle
sahf
mov
jge
sahf
and
lds
mov
psubusw
jae
cmc
leave
mov
adc
or
push
inc
shll
gs
aam
outsl
sbbl
enter
pop
mov
sub
hlt
or
clc
sbb
pop
or
dec
mov
mov
fmul
or
leave
es
ds
lods
lcall
cmp
call
xchg
add
sbbb
adc
inc
fnsave
in
jmp
inc
shll
aad
sti
push
loop
sbb
xor
fwait
lahf
inc
outsl
sub
bound
ja
mov
insb
aad
lcall
xchg
mov
xlat
mov
jle
mov
cmpsl
push
xorb
andb
hlt
imul
mov
jge
sub
lds
xor
les
sub
sbb
mov
inc
mov
orb
out
or
or
inc
inc
lcall
or
inc
xchg
dec
mov
mov
call
ret
sti
ficoml
icebp
adc
inc
int
jb,pn
pop
lret
orl
xchg
loopne
adc
inc
es
ljmp
or
ret
rol
icebp
jp
divl
outsl
xchg
sub
movsb
ret
push
pop
lds
mov
or
adc
or
add
lahf
sbb
push
push
xchg
addr16
inc
sbb
mov
add
pop
stos
sub
inc
push
jo
cmp
dec
out
push
in
lcall
dec
imul
dec
popf
aas
pop
inc
push
fdivr
loope
dec
pop
nop
dec
test
jno
cmp
xor
mov
fisubrl
jmp
xchg
cld
sahf
mov
fistl
test
and
xor
inc
scas
ficoms
xor
push
mov
jnp
mov
adc
inc
leave
mov
xor
cmp
mov
mov
sbb
pop
imul
cmovb
repz
stos
cwtl
or
pop
jge
jne
jb
test
inc
pop
cwtl
scas
mov
insb
inc
pop
inc
daa
mov
cld
sub
movsb
adc
mov
lods
jb
xor
add
fistl
or
lret
aaa
js
fcoms
inc
test
loope
fdivrl
inc
or
mov
and
mov
das
orb
arpl
inc
cmp
sbb
jl
dec
insb
js
hlt
xor
ja
lahf
sub
stos
pop
sub
adc
mov
and
stos
das
sbb
clc
test
sbb
jmp
testl
mov
inc
mov
and
repz
std
movsb
loop
cli
inc
loopne
mov
mov
pop
repz
data16
xor
mov
add
adc
out
jnp
pop
je
cmpsb
iret
aaa
mov
xchg
mov
loope
xor
movd
es
lock
outsb
cltd
push
push
push
sti
aam
addr16
ret
add
inc
jle
xor
and
xadd
stos
sbb
cmp
ja
cmp
xor
repnz
and
xchg
adc
xchg
loopne
cmc
or
cld
and
lds
mov
mov
shlb
mov
lret
inc
cli
scas
pop
jp
das
int3
dec
icebp
ja
enter
cmp
xchg
cmpsl
push
jns
mov
ja
and
jae
and
fs
adcl
dec
cltd
fmul
or
pop
adc
ja
add
das
push
std
leave
imul
test
aad
mov
aas
outsb
sub
fistpl
in
fisubrs
mov
and
xchg
in
lods
push
jbe
sbb
jo
jbe
mov
iret
std
and
add
stos
into
jmp
pop
jb
cmp
inc
rcl
dec
or
test
pushf
pushf
xchg
or
cmc
subl
jl
sbb
xor
shlb
sub
sub
sbb
lods
push
clc
sti
call
insb
and
push
inc
cmpsb
mov
icebp
add
push
xor
push
das
mov
push
jge
push
inc
in
in
in
imul
or
add
sub
and
mov
rolb
rorb
cs
inc
js
xor
sbb
push
pop
xchg
call
or
mov
fmuls
nop
fisubrl
enter
jnp
push
cmp
popa
mov
stc
dec
mov
adc
push
das
jle
sahf
stc
fucomip
das
mov
in
nop
gs
mov
jle
dec
cltd
divb
fcompl
sti
test
mov
mov
dec
arpl
jns
sub
push
arpl
inc
sbb
pusha
xchg
iret
jb
adc
xchg
xchg
push
imul
dec
cmpsl
or
dec
shrb
jb
mov
and
mov
gs
mov
sbb
add
sbb
sbb
out
inc
and
rclb
cli
add
sbb
mov
mov
xlat
les
push
in
repz
shl
lret
int3
clc
inc
out
ror
xlat
aas
push
xor
lds
enter
nop
sub
cmp
dec
rol
stos
lahf
fimull
sub
stos
shld
decb
out
cwtl
iret
popf
mov
inc
ss
imul
loopne
or
lods
loop
mov
or
and
fcom
push
cwtl
jo
popa
dec
out
push
jns
sbb
pop
sbb
jp
inc
inc
xchg
cmp
loopne
adc
in
mov
sub
or
adc
cmpsl
dec
sti
mov
mov
out
mov
sbb
mov
cmpsb
scas
push
test
lcall
cmp
xchg
push
jb
lods
adc
testb
cmp
into
fdivrl
jg
pop
xchg
xor
test
out
jmp
in
mov
jmp
aad
mov
loope
pop
sbb
pop
cmc
idivl
cmp
lods
sar
xor
mov
enter
jne
dec
lock
addr16
pop
lahf
repnz
ror
rcr
jge
test
xor
ds
scas
jmp
daa
out
xor
lcall
xchg
lods
sbb
add
loopne
insl
int
inc
and
ja
mov
gs
aaa
cmp
aas
sbb
pop
shlb
lea
jb
out
outsl
iret
mov
dec
rcl
mov
rcll
sti
sarb
test
cli
into
ret
and
sbb
adc
test
or
pop
xchg
and
in
push
mov
lretw
sbb
inc
mov
xor
pop
push
mov
repz
mov
movsl
enter
inc
mov
pop
push
pop
xchg
jo
imul
fs
aam
mov
in
xor
xlat
xchg
jp
xor
push
jnp
in
xchg
int
add
out
in
push
mov
dec
es
sar
popf
inc
jb
xchg
ss
pop
lahf
stc
aas
cmp
mov
sub
int3
and
and
xchg
lcall
movsl
pop
loop
add
les
lcall
in
sbb
inc
mov
dec
add
lock
fstl
mov
push
bound
mov
in
insb
pop
scas
rol
outsl
jge
sbb
xor
pusha
mov
jl
cmpsl
popa
add
loop
sub
cmc
ret
rcr
out
adc
out
aam
scas
mov
popa
icebp
mov
or
in
and
dec
arpl
adc
dec
push
sbb
mov
pop
mov
mov
ds
aam
mov
and
pop
movsb
outsb
pop
into
lcall
std
add
addr16
ficoml
hlt
xchg
ret
ret
push
into
pop
pop
addb
js
sti
inc
mov
lea
aad
in
xor
subl
fldt
fwait
sar
lcall
sbb
push
mov
fwait
aaa
dec
sbb
mov
aam
dec
push
ret
add
jge
dec
mov
loop
mov
mov
xchg
lds
jg
in
adc
in
sub
inc
mov
mov
je
push
pop
add
inc
out
dec
cmc
xchg
inc
cld
adc
xchg
leave
stc
cmpb
pop
pushf
dec
mov
or
ds
lods
and
cs
or
pop
int3
inc
adc
sbb
cltd
int
push
decl
aad
mov
test
lahf
jnp
and
sbb
push
jp
pop
adc
and
or
xor
ss
cmpsb
sbb
cltd
mov
sahf
aad
mov
mov
add
loopne
cltd
sar
cld
jge
in
cltd
cs
out
mov
sub
ficoms
insb
loop
negl
test
jmp
push
rcll
scas
inc
cmpsl
lahf
mov
in
enter
mov
adc
fmull
xor
inc
mov
push
push
mov
sub
jnp
mov
xchg
ja
fisubs
negb
xchg
incl
out
pop
fisttpll
andb
loopne
pop
pop
pop
sub
movsl
jmp
cmp
mov
lcall
mov
cmp
lahf
div
sub
rcr
adc
push
jmp
cld
test
xor
lds
decl
mov
dec
push
jle
adc
rcrl
jnp
mov
lret
neg
mov
jnp
push
dec
mov
je
add
roll
ret
push
mov
popa
push
jae
add
pop
inc
pop
and
cld
adc
fdiv
mov
xchg
mov
jge
repnz
outsl
clc
xchg
sub
jbe
test
ficompl
add
inc
outsb
sub
frstor
pusha
mov
arpl
enter
arpl
push
fdivl
inc
jle
xchg
cmp
mov
jno
imul
pop
gs
adc
lods
push
fnop
out
fildl
ja
std
lret
stos
shll
movl
punpcklwd
sbb
jl
pop
imul
mov
cmp
pop
adc
insl
leave
fiadds
push
fldt
add
lret
les
in
mov
ds
rolb
ljmp
cld
sar
pop
push
es
adc
ljmp
fisttpl
pop
jecxz
lock
stc
push
sub
cmpb
loope
sti
mov
mov
mov
and
movsl
jl
pop
outsb
std
inc
rcr
jmp
cmp
lea
mov
xchg
mov
andps
sub
mov
dec
push
xchg
jge
mov
ss
add
in
mov
pop
inc
jae
ret
dec
jmp
adc
pop
push
enter
out
aad
repnz
scas
in
pop
jnp
inc
adc
mov
stc
les
in
xor
xchg
mov
sahf
mov
inc
test
aaa
push
cld
ds
jecxz
lret
nop
and
das
pop
cli
decl
stos
aaa
ja
out
enter
repz
push
popf
not
adc
pop
adc
jmp
negb
push
add
ds
add
and
xchg
pop
iret
lock
cltd
ja
ficoml
ja
mov
jbe
bound
je
stc
mov
mov
jbe
jb
push
sub
movl
loope
mov
out
rcrb
push
dec
bound
add
pcmpeqw
and
pop
and
xchg
add
cmp
minps
xchg
insb
popf
adc
pushf
scas
iret
pop
xchg
dec
test
push
and
das
jg
pop
dec
inc
dec
insl
rcrb
loope
loope
cmp
scas
lahf
mov
push
xor
ficoms
pop
xor
mov
mov
lods
push
xchg
mov
dec
aad
scas
xor
push
and
inc
and
iret
jl
mov
cs
rolb
inc
add
mov
xchg
push
mov
adc
movsl
imul
test
sbb
stc
jne
aas
inc
cmp
add
dec
aaa
jmp
mov
push
es
jae
repnz
add
test
jbe
stos
cld
mov
loope
out
pop
inc
add
divb
pop
cltd
aaa
adc
fdivr
fdivrl
arpl
sub
sbb
dec
icebp
int
hlt
or
outsl
or
push
hlt
push
lret
pop
dec
idiv
mov
dec
pop
sarl
dec
rcr
xor
jb
dec
sar
nop
mov
gs
mov
shrl
mov
mov
movsb
int3
pushf
ss
lcall
sub
mov
push
shl
inc
mov
roll
adc
xchg
leave
insl
ss
push
push
jmp
jg
lods
filds
or
adc
dec
add
loop
daa
sbb
and
out
mov
or
jp
in
cmp
mov
in
add
jmp
insl
test
push
aaa
mov
orb
cld
mov
cmc
outsl
cmpl
lods
hlt
aad
sbb
add
push
in
cmp
in
mov
mov
mov
loopne
ja
jge
push
outsb
xor
mov
mov
dec
xchg
ss
std
lea
or
bnd
lahf
fisttpll
mov
std
push
aad
sbb
test
nop
lcall
push
mov
mov
jb
sbb
lret
rcrl
pop
and
dec
pop
add
adc
in
cmp
imul
or
ss
into
sub
inc
and
negb
pop
or
add
shrb
imul
jnp
pop
inc
loopne
inc
mov
andl
pushf
dec
ljmp
push
fsubl
mov
or
movsl
mov
pop
mov
loope
fistps
xor
mov
repnz
hlt
inc
lods
xor
and
fisttpl
sbb
pushf
jnp
mov
hlt
fistpll
outsb
xchg
and
insl
adc
mov
out
adc
dec
loope
jbe
andb
jne
jmp
pop
mov
das
add
cmp
cmp
popf
xchg
mov
imul
into
out
outsb
lahf
int
inc
mov
jo
mov
pop
sub
mov
sahf
xor
xor
adc
pop
jae
das
rorl
fisubrs
je
in
add
sub
xor
outsb
ficoms
push
dec
mov
or
lods
lock
add
ja
cmp
push
nop
test
rolb
inc
js
fistpl
sbb
imul
and
or
push
fistl
inc
dec
insb
and
shr
fisttpl
cli
mov
aad
repnz
and
mov
enterw
add
mov
rcll
xor
mov
imul
jno
incl
jg
mov
jns
xor
test
stc
fwait
lock
and
xchg
stos
mov
pop
sub
pop
add
pop
imull
push
push
lea
inc
mov
dec
add
mov
pop
je
push
sbb
out
popa
imul
aad
dec
ficoml
xlat
sbb
mov
xorb
popa
das
lret
push
mov
test
lret
lcall
mov
sbb
push
lock
rolb
push
jnp
xor
pop
into
sbbb
cmp
jl
stc
addr16
lret
inc
xchg
mov
shlb
bound
idiv
orl
push
push
mov
inc
fadd
xchg
xor
jecxz
repnz
mov
repz
push
mov
push
pop
test
cmpsb
jns
push
testb
fldl
jle
imul
push
loop
sti
imul
inc
mov
xor
add
fisubl
inc
dec
stc
insl
enter
mov
jo
jge
pushf
pop
fldenv
cmp
push
ss
and
mov
sub
push
pop
bound
inc
sub
xchg
les
sub
mov
xlat
cltd
pop
inc
cs
clc
mov
test
mov
fldt
scas
dec
jecxz
cmpl
mov
sbb
stos
pop
in
out
sub
bound
insb
mov
adc
and
movl
loopne
mov
iret
dec
cmp
dec
test
icebp
mov
leave
arpl
jp
or
mov
out
mov
out
pop
sahf
mov
popa
xor
pop
xor
imul
mov
cltd
imul
mov
jge
insb
cs
mov
lret
fstpt
loop
in
or
cmp
and
push
orl
sbb
xchg
addb
rcr
loopne
add
mov
out
shr
andl
pop
mov
xor
ret
andb
sub
mov
cmp
popa
js
gs
inc
mull
cmc
das
scas
push
push
jmp
into
daa
mov
pop
dec
js
sbb
insb
xchg
ffreep
or
cld
aam
mov
iret
sahf
jge
mov
cmp
dec
jg
jo
xlat
aad
mov
rcrb
imul
cmpb
mov
test
fstl
stos
mov
push
roll
lret
fnstsw
or
mov
sbb
add
cmp
nop
xor
leave
mov
cmovae
mov
mov
popf
pop
in
jno
dec
aam
lods
pop
xor
pusha
lcall
or
or
std
dec
arpl
jmp
test
lock
jne
in
cmpsb
pop
sti
sbb
sbb
andb
shll
jmp
mov
mov
repnz
jns
bound
fsubrl
inc
cltd
pop
mov
pushf
sbbb
int3
mov
lea
dec
into
push
mov
addr16
xchg
mul
outsl
outsb
push
pop
mov
xchg
iret
test
or
lret
sbb
insl
jg
hlt
inc
pushf
imul
add
push
mov
bound
leave
push
jnp
daa
imulb
mov
jmp
daa
lods
xor
xchg
out
pop
adc
jae
out
jo
fisubrl
mov
jns
js
gs
faddl
call
rcl
cwtl
and
inc
pop
mov
cmp
scas
sarb
repnz
inc
pop
xor
imulb
lcall
or
mov
sbb
shrb
xor
mov
je
add
dec
loopne
xchg
dec
jp
and
dec
fnstenv
pop
pop
pusha
dec
cmpsb
xchg
xchg
ds
hlt
out
sbb
sub
inc
aaa
jnp
mov
xor
imul
xchg
cmpsb
xor
and
cmp
and
xor
mov
adc
outsb
inc
aam
mov
ret
push
enter
xchg
aam
or
sar
ljmp
jae
fdivs
xchg
std
movsb
adc
sbb
lds
lahf
pushf
mov
ljmp
test
xchg
mov
ret
jg
movsl
mov
mov
pop
fnsave
sub
nop
xchg
pop
sbb
gs
loop
pushl
ljmp
xor
adc
cwtl
dec
fistl
jg
testb
sahf
pop
cmp
push
push
jno
insb
xchg
pop
outsl
and
dec
data16
ljmp
or
xchg
mov
into
outsl
mov
cmpsl
dec
out
dec
ret
adcl
sub
sub
ds
xchg
sbb
dec
repnz
fnstsw
ja
xchg
les
mov
mov
std
rorb
mov
inc
cld
mov
cld
inc
es
push
ljmp
xchg
ficomps
stos
imul
add
push
pop
addl
push
mov
arpl
aad
ret
divl
jb
pop
jb
or
adc
add
aad
dec
js
pop
fisttpl
out
aam
push
fsubrs
mov
fsubl
jns
adc
cld
pop
pop
daa
pop
fsubrs
cmpl
lods
out
add
mov
fcomps
jns
movsl
js
shrb
and
nop
or
and
rorl
call
pop
cmp
xchg
mov
add
inc
rolb
mov
xchg
sbb
push
mov
mov
roll
push
xchg
mov
adc
adc
arpl
and
lock
ficoml
jns
clc
add
pushf
mov
aad
repnz
pop
cmpsl
insl
loop
das
xchg
mov
movsl
loop
jns
das
and
movl
sbb
out
outsl
mov
xor
fs
jne
mov
lret
fdivl
scas
fdivl
rclb
sub
jae
mov
jmp
dec
in
inc
xor
lret
add
pop
mov
mov
hlt
nop
lea
push
pushf
fisubrl
call
hlt
mov
in
imul
cmc
add
xlat
call
js
mov
shufps
enter
out
pop
f2xm1
enter
hlt
lahf
adc
mov
aas
push
jge
pop
pushf
std
mov
es
movsb
sub
push
fcom
add
aad
mov
inc
roll
adc
je
cltd
call
dec
sub
clc
push
push
outsb
sti
push
mov
mov
testl
mov
adc
mov
int
dec
out
dec
adc
or
lret
sbb
std
nop
adc
jnp
daa
xor
inc
hlt
inc
sub
aad
sbb
lahf
stos
and
xchg
lock
insb
dec
jecxz
popa
fisttps
in
cs
mov
fistpll
les
push
inc
dec
lret
pop
inc
fs
or
insl
lahf
mov
hlt
xor
lcall
push
or
stos
push
idivb
scas
pop
sbb
pop
fidivrl
data16
lods
or
mull
testb
jnp
cmc
sbb
jne
cmp
ret
inc
clc
fldenv
fnstenv
les
jb
or
mov
es
and
xchg
popa
mov
push
cmp
sbb
cmp
jle
mov
sbb
mov
jns
pop
mov
sarl
je
popf
push
out
int
cltd
sub
test
mov
shll
jle
icebp
arpl
enter
cltd
push
xor
pop
push
sbb
or
lahf
shlb
adc
and
push
aas
jno
int
out
sarb
je
cmp
push
lds
jmp
and
push
xor
and
dec
jno
dec
mov
insl
sbb
jbe
push
mov
or
mov
shrb
ffreep
fiaddl
movsl
xchg
repnz
and
dec
jg
push
call
and
movsb
jo
pusha
das
pop
dec
mov
and
cwtl
mov
push
sbb
pop
pop
dec
mov
add
push
and
sti
jae
fisubrl
xchg
arpl
sub
cmpsb
sahf
jle
jecxz
mov
mov
icebp
in
aad
in
in
mov
lods
fcomps
sub
xlat
cltd
dec
adc
add
insb
dec
push
cmp
mov
ja
enter
insl
mov
cmp
in
xor
icebp
inc
inc
mov
iret
cmp
lock
xchg
lcall
jnp
pop
add
outsl
inc
mov
test
add
sti
in
inc
das
mov
mov
adc
jmp
xor
mov
dec
cmc
enter
xchg
call
mov
jg
mov
loop
pop
mov
push
hlt
sarb
push
push
adc
mov
xlat
xchg
into
stos
xchg
push
imul
pop
sbb
xchg
addr16
cmp
sarl
inc
cwtl
xchg
inc
mov
cwtl
push
mov
movsl
jmp
xchg
xchg
into
sub
insl
movsl
int3
lcall
nop
shr
dec
mov
lahf
mov
imul
sub
pushw
inc
jne
mov
ljmp
adc
jecxz
fs
mov
inc
sbb
movsl
sbb
test
lret
arpl
mov
sbb
push
or
mov
js
xchg
lret
pop
jp
sbb
add
lock
jno
testl
int3
xchg
outsl
ljmp
adc
push
pop
xchg
mov
nop
lods
push
xchg
into
inc
mov
xchg
jmp
ffreep
ss
push
push
and
es
arpl
dec
and
loope
xchg
iret
jae
xchg
rcll
pop
mov
push
jg
mov
adc
rcll
or
js
int3
lds
mov
sub
adc
jg
ss
loop
ret
bound
aas
mov
fs
mov
mull
sub
scas
lcall
sub
mov
sub
jae
sub
in
aas
cmp
ss
pop
pop
cmp
adc
mov
pusha
xchg
cli
pop
out
das
out
adc
pop
cmp
aam
aam
pop
fimuls
dec
xor
adc
ret
push
insb
in
mov
sub
inc
or
rcr
daa
in
insb
insb
std
sbb
ja
and
jnp
add
aaa
mov
bnd
sub
cli
mov
inc
repnz
cmp
or
jo
int
and
jo
mov
push
cld
or
call
inc
mov
jle
xorl
fisubl
arpl
insl
xchg
mov
repz
xor
pop
xchg
push
aaa
fildl
and
fsubs
xor
std
hlt
mov
mov
jb
xchg
fs
test
jno
push
pushf
stc
enter
in
sub
sarb
loopne
mov
jl
and
mov
outsb
mov
mov
mov
push
roll
jmp
dec
test
int
inc
stos
cld
mov
xor
mov
jo
adc
jns
pop
int
mov
das
adc
popa
lea
jmp
jp
pop
sbb
jo
jl
xor
out
push
test
sbb
mov
or
inc
xor
sbb
add
add
mov
dec
loop
pusha
xchg
ss
add
sbb
sbb
jecxz
add
pop
aad
jbe
adc
mov
in
fwait
jl
jb,pn
sub
sbb
sbb
or
jmp
in
mov
jecxz
outsl
jno
mov
mull
rcrl
icebp
rorb
mov
cmc
das
hlt
xor
sub
in
mov
out
adc
mov
out
cmp
jb
push
adc
ret
outsl
test
repz
ja
or
jle
sub
jmp
jne
sbb
push
mov
cmp
or
hlt
mov
xchg
push
adc
adcl
sub
or
icebp
lock
xchg
xor
xor
stos
xor
mov
lcall
outsb
ljmp
pop
ds
mov
mov
fsubl
arpl
cmp
pop
xor
lret
andb
and
iret
xchg
jae
mov
lcall
adc
vpmaxub
decb
lds
aas
inc
data16
adc
sub
test
pop
inc
jecxz
rcr
hlt
aaa
fisubrs
ja
cmpl
out
pop
les
out
mov
cmp
int3
clc
insl
int
fstl
pop
into
fs
loope
xor
gs
pop
out
pop
imul
or
mov
test
add
jp
out
negb
lcall
cmp
jle
sub
mov
das
imul
add
pop
mov
lea
mull
pop
xor
test
push
and
shll
sbb
hlt
fcmove
cs
pop
jecxz
xor
aas
test
fsubrs
out
dec
aaa
in
add
aam
lahf
jle
outsb
int3
aad
jnp
dec
xchg
call
xchg
xchg
jecxz
adc
inc
cli
aas
push
fists
lcall
push
or
dec
bound
int
cmp
inc
add
xor
push
ret
int
mov
daa
ja
aam
push
push
xchg
push
in
jnp
or
mov
xchg
fisubrs
js
add
jb
lret
fisubrs
jmp
adc
xor
iret
mov
add
or
mov
inc
or
sbb
dec
movzwl
adc
sarb
mov
rclb
fidivs
push
popa
test
add
fcomip
cmp
in
daa
push
jne
xchg
cwtl
sarb
jge
and
ret
enter
jmp
enter
push
into
inc
adc
cmp
les
xor
ret
outsl
addl
add
shl
aad
sbb
ret
ljmp
enter
outsl
imul
in
nop
xor
push
inc
inc
cmp
and
inc
xor
or
js
sar
pop
lret
lahf
mov
pusha
push
push
shl
les
movsb
in
inc
mov
std
stos
loope
sahf
sbb
adc
sbb
loop
cmc
cmp
clc
xchg
lret
dec
add
popa
xchg
cltd
pop
cltd
lods
shrb
fxch
mov
jns
push
push
movl
push
and
cli
gs
and
mov
inc
jns
pop
divl
lock
xchg
cwtl
sub
mov
movsl
scas
lods
add
ds
lret
jl
pop
sub
or
dec
out
lret
hlt
cmp
stc
add
lret
jmp
mov
mov
in
rcr
mov
dec
lahf
cmpsl
fidivl
js
sub
push
fistpll
xchg
cmp
add
xchg
dec
and
add
pop
mov
inc
inc
ljmp
and
mov
rcrb
imul
inc
outsb
aas
and
and
add
rcrl
inc
mov
aas
sbb
mov
xchg
jae
xor
jne
ret
mov
movsl
sbb
xchg
pop
pop
das
cmp
lret
out
mov
scas
outsl
add
xor
adc
mov
mov
mov
inc
sub
sbb
push
mov
rolb
pop
pop
sbb
adc
push
and
dec
and
mov
xor
mov
ljmp
inc
insb
fdivrs
mov
sti
mov
xchg
mov
xchg
sbbl
jbe
push
fsubs
je
mov
jle
fldenv
and
push
mov
xor
push
sti
shr
sub
mov
pusha
jp
ss
adc
sahf
out
pop
pop
stos
ret
mov
idiv
lret
mov
xor
and
icebp
clc
sbb
stos
addr16
mov
hlt
pop
mov
lock
push
mov
push
or
clc
and
insb
scas
mov
stc
push
leave
pop
jo
es
testb
push
cmpsl
fs
idivb
cmpsb
int3
add
mov
nop
fcompl
dec
xor
jbe
pop
sbb
jle
jp
xchg
lret
inc
jmp
mov
adc
pop
fisttpll
sbb
inc
movb
mov
cmp
push
insl
xlat
pusha
inc
shrb
xchg
pop
mov
sbb
fistl
xchg
fsubl
cmp
sub
fs
jb
pop
jg
int3
pop
mov
fnstcw
inc
and
stc
jnp
sbb
fsubr
test
xchg
add
sahf
aas
mov
scas
fwait
inc
clc
push
nop
lock
scas
lahf
or
sbb
pop
adc
out
or
negb
sbb
roll
dec
out
ss
mov
stos
test
mov
xchg
nop
push
xlat
inc
push
sub
fisubl
bound
or
add
adc
iret
loop
repz
sbb
push
rdtsc
js
test
out
into
jmp
lret
test
sbb
scas
inc
xchg
repnz
imul
rep
loopne
mov
or
pop
shrl
pushf
xorl
ss
mov
jb
jae
mov
jecxz
jns
add
popf
popa
pushl
rcrb
int3
and
add
sqrtps
mov
jns
daa
popa
dec
aam
adcb
jl
pusha
push
mov
inc
push
xchg
lcall
ds
lret
mov
adc
dec
out
adc
test
das
into
mov
mov
and
insl
out
dec
push
push
xor
xchg
add
cs
add
jmp
mov
mov
call
shlb
movsl
jb
add
jp
fidivrl
js
push
mov
insb
enter
test
int
sub
add
dec
xor
sbb
pushf
sbb
sub
loope
mov
repz
test
test
loope
add
or
lods
or
int3
dec
int
jle
and
push
pop
jp
in
ret
std
into
adc
enter
mov
and
fcomps
aas
seta
test
adc
stc
jmp
lock
mov
mov
xchg
es
pop
popf
pop
jb
add
sbb
mov
inc
int3
xor
xchg
out
pop
sbb
mov
xor
jp
ds
mov
repnz
pop
or
int
inc
xchg
pop
jae
sub
ret
jge
sbb
test
cs
inc
cs
xchg
jo
jmp
sub
sbb
dec
ss
mov
idivb
pop
dec
add
test
in
add
clc
jp
out
je
in
cmp
dec
fstpt
jp
jg
addr16
fidivrl
mov
add
insb
bound
sbb
push
inc
sub
mov
xchg
push
in
mov
ljmp
std
test
lock
dec
mov
xchg
xchg
mov
pop
lea
sbb
in
adc
adc
insb
mov
xor
xor
fs
cmp
jecxz
and
jmp
lods
mov
or
ret
pop
jne
loope
ret
out
addb
xchg
pop
pusha
xor
out
fstl
jae
cltd
inc
or
inc
insb
loop
test
shrl
jno
rcll
and
pusha
jno
mov
cmpsl
imul
adc
mov
dec
scas
or
xor
jle
lock
sti
cmpsb
xor
hlt
bound
add
bound
les
aaa
sub
add
stos
jae
cmp
or
cmc
pop
push
ret
jmp
inc
nop
cmp
imul
aas
xor
in
pop
out
dec
or
roll
mov
xchg
jle
stos
mov
mov
sarb
xor
cmp
mov
mov
outsb
inc
sahf
je
add
mov
ret
sbb
mov
test
xchg
aas
push
pop
mov
movsb
add
sub
jb
adc
roll
fcoml
pop
cmp
pop
mov
jns
lods
in
call
jl
divb
xor
mov
daa
push
jae
in
pop
xor
push
sub
and
js
jns
adc
cmc
push
adc
dec
std
sbb
loope
push
xor
dec
test
pop
inc
xchg
dec
sbb
fidivs
pop
and
sbbb
scas
mov
cmp
ficoml
daa
stos
xacquire
mov
call
and
lea
addl
or
xchg
lods
je
mov
inc
cmp
loop
cld
lods
xchg
mov
or
icebp
pop
push
jnp
inc
call
add
dec
add
sbb
pop
stos
fcmovbe
sub
inc
jae
out
sub
add
pop
push
push
pop
xor
jl
ss
movsl
lods
pop
sbb
es
cltd
xchg
sbb
mov
andl
or
xchg
outsb
aad
pushf
and
push
sub
lea
test
xor
insb
xchg
push
ficomps
fxam
adcl
daa
mov
lea
lods
push
loope
call
ss
dec
push
jl
rorb
xchg
or
sub
dec
sub
popa
cmp
out
jecxz
mov
test
and
or
imul
hlt
mov
mov
xchg
test
lea
testb
insl
inc
jne
fld
repz
or
lods
dec
xor
clc
aaa
insl
ljmp
or
mov
pop
mov
ds
fcmove
iret
push
sar
mov
js
mov
push
push
cwtl
and
mov
inc
mov
adc
jbe
out
adc
sbb
shlb
mov
lret
push
mov
inc
add
cltd
mov
and
mov
jne
call
mov
lcall
outsl
cmp
loopne
test
out
js
sub
fxch
jnp
hlt
pop
test
in
rcll
repz
stc
mov
sti
jo
jns
inc
inc
and
mov
popf
mov
iret
jo
mov
subb
aad
adc
xchg
inc
dec
mov
pop
cs
ret
in
leave
mov
xor
imul
cmc
sahf
xchg
cli
rcrb
jno
xor
add
loopne
iret
je
call
mov
and
das
sub
dec
in
jg
mov
cmpsb
lcall
mov
test
xchg
hlt
dec
sbb
and
adc
shlb
imul
mov
and
stos
js
icebp
xchg
shll
mov
in
jg
cmc
iret
sub
ret
adc
and
outsb
das
pop
sub
push
sub
xor
cld
jno
outsl
stos
shlb
pop
xchg
out
xchg
jnp
push
mov
in
aam
sahf
sub
aam
mov
adc
or
push
shrb
adc
cmc
decb
or
in
fiaddl
ds
movsl
push
mul
jnp
push
adc
shl
aaa
scas
rorb
fdivrs
push
cwtl
jbe
xchg
cmp
dec
mov
int3
cwtl
adc
push
arpl
fistl
ret
xchg
mov
or
jno
adc
mov
fwait
jns
inc
rorl
xchg
sbb
out
ret
inc
scas
or
pop
pusha
arpl
jmp
call
mov
xor
cmc
aaa
out
incl
ficompl
add
push
mov
push
inc
in
scas
outsb
fsubl
pop
xor
fldenv
call
mov
cwtl
xor
inc
xchg
cltd
mov
pop
and
test
dec
cld
int
jge
sti
pusha
pop
xchg
jle
push
gs
js
gs
pop
and
adc
dec
mov
jno
fstpl
cmp
cmpsl
or
loopne
inc
xor
cli
xor
shlb
test
andb
dec
push
lods
jnp
stc
jbe
movsb
xchg
dec
mov
repz
mov
mov
or
sub
dec
shrl
test
imul
and
sbb
sbbl
mov
adc
idiv
sub
aam
int3
stos
pop
and
add
add
fadd
lret
and
dec
dec
mov
or
add
push
lret
dec
mov
lds
xchg
dec
in
push
ret
in
or
es
movsl
shrl
lea
aad
cmp
jmp
jle
sahf
pop
and
and
xchg
mov
fstpl
and
push
ret
es
cltd
enter
and
leave
xor
pop
popa
pop
mov
add
and
cmp
xchg
jns
test
pushf
sub
int3
stc
xor
cmp
pop
aaa
subl
push
mov
mov
jnp
insl
sub
jb
mov
jl
cmp
scas
and
push
sarl
xor
xor
in
scas
pop
and
xor
xor
jae
dec
mov
pop
xor
testb
lods
push
insl
cltd
xchg
shlb
inc
adc
cmc
sub
mov
shl
test
lock
loopne
pop
clc
aaa
xchg
or
adc
inc
pop
or
dec
mov
sub
xchg
or
sub
adc
push
int
and
and
sti
aad
push
fisttpll
insl
xor
outsl
sbbl
lea
pop
mov
rcrl
dec
jl
stos
xor
lahf
xchg
pop
pop
in
dec
test
mov
xchg
dec
stos
pop
xchg
sbb
push
pop
jg
into
pusha
aam
xchg
push
mov
xchg
pushl
or
and
rcrl
leave
nop
dec
mov
daa
out
jle
mov
mov
xchg
fstps
jecxz
mov
mov
ljmp
fcomi
jl
aaa
push
jge
sbb
pop
jne
insl
cmp
or
xchg
stc
lret
lahf
inc
shrb
push
push
data16
cmp
add
sub
mov
inc
jecxz
push
mov
daa
mov
sbb
js
pop
push
and
cmp
sbb
dec
dec
xchg
sub
xchg
mov
sbb
arpl
cli
hlt
jnp
mov
xor
ficomps
ret
mov
sahf
pop
mov
and
incb
sahf
insl
push
pop
lahf
mov
nop
cld
mov
jbe
arpl
jo
hlt
xchg
push
ret
jge
test
aaa
push
lcall
xchg
test
add
mov
xchg
mov
stc
adc
xor
out
push
int3
fnstcw
pop
jne
jge
jne
pop
jmp
es
add
jmp
setne
stos
jb
and
cs
jl
and
push
jo
jle
cmc
push
and
dec
cmc
popa
xchg
repnz
popa
addr16
dec
sysenter
loope
push
sti
or
aam
loopne
mov
lods
push
shlb
mov
push
repnz
shrl
xor
movsl
lahf
jl
cmpsb
push
scas
mov
test
fwait
push
test
mov
repz
arpl
out
push
sub
scas
notb
outsl
imul
push
call
sbb
pop
mov
and
adc
arpl
cmp
xor
lret
fwait
imul
pop
cmp
imul
addr16
mov
add
repz
jl
out
adc
fdivrs
mov
and
xor
ljmp
loope
mov
push
mov
es
jmp
lcall
cmpsb
xchg
test
and
jg
lock
loop
and
jbe
andb
lahf
adc
xchg
call
sub
pop
add
minps
cmpsb
pop
sbb
pop
fwait
cwtl
cs
outsl
decb
lock
xchg
adcl
fsubs
aam
repz
aas
int3
or
aam
add
addr16
movsb
fmul
or
cmpsb
std
enter
mov
in
aad
adc
sbb
repnz
sub
rcrb
cld
mov
jnp
arpl
inc
pop
sbb
sti
das
sti
cmp
pushf
imul
cld
pop
add
test
insb
outsb
push
mov
inc
dec
jg
call
js
mov
jae
jge
xchg
xchg
sarb
cs
fs
and
loop
push
test
xchg
loopne,pn
dec
sarl
xor
jmp
les
out
flds
cmp
jp
jmp
fildll
mov
mov
and
mov
mov
adc
cs
lcall
pushf
or
notl
mov
push
lods
or
sbb
loop
rcrb
inc
ss
aam
jl
repnz
aas
out
add
jns
add
aaa
sub
push
inc
mov
mov
jno
js
fcmovnbe
jno
push
sbb
pushf
fs
scas
xchg
inc
rorb
pop
gs
insb
xor
push
jge
testb
jg
cmpsb
test
xor
inc
mov
sbb
test
pop
fisttps
xchg
adcl
push
stos
shrb
and
cltd
and
dec
push
ret
aas
les
shrb
push
push
sti
sub
dec
mov
aam
xor
mov
pop
jge
bound
notl
sub
cli
das
xlat
mov
pop
es
xchg
rcll
mov
loop
mov
scas
neg
cltd
fnsave
sub
or
xchg
cmp
add
mov
test
inc
stos
test
pusha
movsb
inc
stos
push
adc
pop
pop
mov
or
repz
dec
or
jecxz
lcall
xchg
sbb
fisttps
and
rep
pop
jp
jge
jo
aam
mov
sarl
fdivrp
adc
mov
jecxz
mov
movsl
cmpl
andl
lcall
stos
mov
lds
insb
pop
iret
sub
loop
out
jmp
sahf
cmp
js
xchg
test
pop
sbb
mov
js
cwtl
bound
mov
pop
jns
test
and
mov
aad
icebp
pop
rolb
in
andb
xor
shll
in
call
loope
xchg
pop
push
arpl
xchg
scas
jmp
int
fs
stc
cmpsb
pop
dec
and
push
dec
fsubrs
sbb
and
jecxz
jo
shl
test
mov
in
jns
scas
jg
imul
outsb
xchg
cmp
testl
lods
mov
push
mov
pusha
adc
and
hlt
push
pop
jb
adc
dec
test
fs
jo
ret
aad
add
sti
cmp
mov
dec
aam
pushl
loopne
pop
mov
aam
mov
and
pop
insb
add
mov
loop
dec
inc
out
xchg
dec
jne
and
jae
nop
xor
or
push
push
cmp
stos
jecxz
cmp
xchg
jns
cmp
jecxz
cli
daa
test
pop
scas
jns
mov
mov
pop
lcall
jne
push
xchg
xor
pop
xor
sti
xchg
inc
jp
sbb
pop
dec
mov
mov
push
je
cmp
test
je
or
sahf
jecxz
lock
xchg
je
daa
stos
mov
bound
mov
lret
pushf
in
pop
out
into
xchg
cmp
mov
dec
icebp
sbb
add
sub
xor
ljmp
bound
xchg
add
jo
dec
mov
push
cmpsl
arpl
add
stos
cmpsl
sub
ljmp
mov
testb
push
and
mov
loope
add
push
outsl
dec
into
push
aas
mov
stos
or
out
or
and
out
jne
mov
push
add
setg
lcall
std
outsb
arpl
sbb
out
sub
adc
test
inc
test
sti
loope
lea
mov
add
sbb
mov
dec
mov
sbb
push
aas
push
push
cmp
cmp
ja
mov
je
stc
mov
push
lock
out
cmp
fisubl
lcall
out
scas
int
int
outsb
popf
mov
mov
mov
jecxz
pusha
lret
fbld
pop
das
test
lds
jbe
inc
aad
repnz
pop
ret
xchg
mov
lcall
test
arpl
popf
cmpsl
jecxz
push
mov
fdivs
sbb
push
push
popf
jmp
add
iret
inc
jo
stos
sbb
xchg
xlat
push
nop
sbb
ret
ljmp
rcr
push
inc
or
lds
add
ljmp
js
mov
push
pop
lds
push
cmp
inc
push
xchg
adc
out
popa
mov
xchg
lea
sub
shrb
push
test
inc
icebp
or
clc
and
xor
add
nop
and
fistpl
sbb
cli
or
and
inc
xchg
out
repz
loopne
loop
popf
fs
cmp
jl
push
test
xor
mov
stos
into
mov
sub
mov
cs
movb
insb
rcll
adc
xor
push
aaa
sub
jle
pop
jg
shll
cmpw
aad
loope
lea
cld
out
fmulp
xlat
addr16
or
iret
jp
mov
adc
imul
cs
add
jecxz
push
addb
inc
stos
add
sub
lret
mov
sbb
outsb
push
and
jb
cmp
int3
add
mov
sbb
stos
mov
lret
aam
pop
scas
inc
andl
nop
mov
push
cmp
sbb
mov
dec
xor
mov
fists
pop
icebp
pusha
xor
in
xor
out
int3
rcrl
xchg
repnz
outsl
shll
fucomp
scas
adc
outsb
xor
fimull
cltd
or
push
dec
push
popf
fldenv
cs
test
addb
inc
cmp
push
jbe
push
cltd
mov
adc
push
fs
jp
in
movsb
sub
and
stos
cmp
outsl
mov
mov
stos
sbb
cmp
cwtl
mov
test
and
push
and
or
inc
or
mov
ficomps
aam
sub
andl
sbb
ds
jecxz
shrl
inc
dec
cwtl
dec
xchg
inc
xchg
mov
xchg
repnz
movsl
mov
dec
push
push
fcomps
xchg
faddl
testl
jno
shll
shl
cmc
jle
decb
xor
xor
or
popf
scas
sbbb
add
add
mov
pop
into
xor
dec
ret
xchg
in
ja
test
dec
mov
inc
setne
xor
push
imul
mov
mov
add
in
cltd
pop
cltd
add
add
inc
mov
or
insl
arpl
jbe
push
xor
insl
imull
lret
fxch
jecxz
add
in
scas
inc
inc
cli
ss
not
adc
or
or
mov
inc
mov
sub
cli
adc
mov
in
in
out
shlb
imul
cmpb
push
inc
pop
push
adc
rep
cmp
test
sub
cmp
xchg
out
aam
in
pop
jnp
sbb
jno
stos
inc
movsl
xchg
pop
arpl
into
sub
dec
mov
sbb
pop
mov
fwait
and
out
pushf
sub
pop
pop
nop
lods
pop
or
popf
cwtl
mov
jecxz
pop
sbb
js
mov
xchg
stc
xor
push
jnp
lahf
pop
rcl
popl
daa
mov
adc
push
inc
or
xor
or
call
or
inc
pop
xor
sub
xchg
clc
adc
movsl
xchg
mov
dec
push
sbb
das
jp
and
int3
sub
pop
cmp
aas
pop
fistl
enter
and
jne
in
sub
ret
mov
mov
cltd
mull
std
mov
cwtl
pop
fwait
xor
cs
into
sahf
jl
xchg
int3
sahf
fimull
daa
xchg
dec
sbb
cmp
rcrl
call
mov
ss
mov
mov
outsl
jae
push
into
sub
inc
jp
in
shrl
add
mov
lods
xchg
fistl
jecxz
jno
and
sub
jmp
push
mov
push
sbb
leave
jmp
mov
mov
je
mov
loop
xor
fnstenv
nop
xor
test
mov
fsubrs
xchg
sub
mov
sub
loope
lret
pop
jecxz
loope
not
mov
push
push
and
loope
jo
mov
xlat
adc
movsb
cmp
leave
lret
and
cmp
jl
std
pusha
mov
sbb
sub
popf
aas
je
xchg
pop
cmp
in
loopne
dec
cmpsb
rcll
sbb
pop
mov
imul
dec
pop
test
jmp
sbb
xor
cltd
inc
push
jae
lcall
pop
inc
imul
mov
mov
pop
notl
xchg
pop
je
jno
mov
sti
mov
sbb
gs
pop
jl
bound
pop
xchg
push
aam
loope
dec
inc
jp
dec
mov
inc
pusha
add
or
not
add
jne
outsb
int
pop
lods
movsb
mov
push
sbb
add
mov
sahf
mov
bound
dec
jnp
notb
stos
add
mull
cmp
or
sbb
xchg
xlat
pop
scas
push
ret
jecxz
cmpsl
jl
push
cmpsb
call
push
mov
mov
add
rcll
adc
sti
std
std
test
fldcw
das
mov
xchg
dec
mov
or
push
in
out
push
and
mov
jo
rcrb
xchg
or
push
jns
mov
push
scas
mov
push
xor
add
popf
xchg
sub
test
xchg
daa
jb
shr
xor
adc
in
icebp
int3
mov
push
in
out
push
ret
sub
mov
sub
add
cli
cmp
adcb
cld
and
movsb
inc
adc
mov
lahf
mov
sahf
lcall
xchg
cli
bound
inc
enter
push
sbb
add
test
adc
mov
and
outsl
jge
inc
nop
outsb
pop
repnz
jge
sbb
data16
rcrl
and
maskmovq
jmp
pop
dec
js
add
dec
push
cmpl
ja
jmp
or
repz
cmp
imul
lea
andl
sub
push
inc
inc
pop
shrl
pop
mov
dec
data16
mov
decl
inc
pop
shl
insb
mul
daa
rcrb
mov
mov
jb
mov
sub
mov
call
repz
cltd
pop
mov
cmc
xchg
xchg
push
fidivl
hlt
mov
jb
rclb
js
in
xor
ret
add
sbb
or
and
outsb
jbe
inc
add
into
push
pmaxsw
mov
jle
mov
scas
xchg
fsts
mov
shlb
inc
push
leave
jecxz
sub
inc
ss
push
push
int3
das
ds
xchg
mov
repnz
repz
push
cli
pop
jg
xbegin
test
movsb
mov
in
xchg
aad
push
mov
add
jmp
imulb
xchg
fwait
jp
repz
dec
int3
out
xchg
adc
inc
imul
arpl
arpl
xor
fildll
mov
jecxz
lods
ja
data16
ror
daa
hlt
cmp
scas
loop
int3
dec
std
inc
pop
and
dec
xor
xor
sbb
jge
ret
fcompl
cmc
lret
sbb
xchg
into
loopne
dec
aas
ljmp
daa
xchg
pop
add
cmp
cli
mov
xchg
fsubl
xor
adc
lret
mov
fs
subl
adc
jg
idivb
mov
pop
in
gs
mov
shlb
test
scas
xor
sub
push
inc
in
pusha
pop
mov
sbb
lods
fwait
test
or
scas
std
add
xchg
fdivp
jmp
pop
ljmp
int
shr
pusha
add
icebp
cmp
ss
and
xchg
test
push
inc
push
fdivl
jmp
pop
shll
mov
in
mov
mov
jae
jns
jb
sbb
mov
fabs
bound
cld
inc
sysret
jb
movsl
jbe
insl
ret
mov
jle
lods
cmc
mov
dec
mov
pop
imul
mov
jmp
aam
mov
cmpsl
mov
fiaddl
pop
scas
stc
out
lods
xchg
mov
pop
mov
and
fsts
clc
pop
jno
cs
jno
add
mov
push
jl
pop
lods
pusha
int3
movsl
mov
stc
mov
in
repnz
push
scas
pop
or
mov
imulb
jle
test
testb
decb
push
add
mov
push
lods
push
test
and
xor
xor
rcl
dec
cmp
insl
sar
jbe
cmp
lods
or
add
push
pop
pushf
and
in
push
test
cwtl
jno
test
mov
and
inc
out
popf
adc
jb
dec
inc
aad
xchg
lds
cmpsl
out
sbb
arpl
mov
mov
mov
dec
dec
fldcw
push
into
cmp
sbb
nop
push
dec
fwait
insb
mov
inc
pop
ja
repnz
xor
mov
inc
mov
pop
add
pop
cmp
cli
sbb
stos
mov
push
and
shlb
daa
push
xor
inc
jb
repz
cmp
mov
rcl
mov
sti
mov
jne
xchg
inc
hlt
adc
jmp
test
pop
mov
xor
enter
adc
scas
pop
ret
adc
dec
adc
pop
or
fs
cli
cld
gs
call
push
fstp
jp
xchg
mov
out
pop
mov
and
fsubrs
xor
add
dec
lods
fsubs
divl
fnstcw
repnz
xchg
repz
and
xor
fimuls
das
fcmovnb
sbb
or
stos
push
enter
jns
mov
aaa
test
test
jno
addr16
push
sahf
movsb
sub
repnz
mov
dec
std
dec
scas
int
flds
lret
pop
and
aam
cmpsb
dec
pop
and
test
pop
xorl
mov
xchg
cwtl
sti
cwtl
stc
xchg
inc
pop
pop
mov
mov
mov
lret
jp
lret
loope
and
outsl
fisttps
dec
scas
mov
xchg
mov
dec
rcrl
push
add
idiv
scas
cld
xor
es
mov
or
fstl
scas
in
push
repnz
ja
out
mov
imul
jmp
sbb
xor
insl
ss
out
dec
cmp
add
mov
inc
in
stc
sub
and
cli
jb
and
andl
stos
adc
fmuls
xchg
cmpsl
adc
loop
mov
jecxz
push
sbb
sub
push
pop
jl
out
clc
in
and
mov
hlt
jbe
pop
outsb
out
sbb
sub
mov
int
cmp
jb
adc
cld
mov
sub
adc
ds
push
inc
or
out
into
ljmp
add
int3
cmpsl
repz
jmp
xor
ficomps
mov
dec
add
pop
inc
test
aaa
insl
sbb
adc
out
std
jnp
out
lods
test
lcall
test
mov
sub
pop
pop
cmp
daa
push
dec
test
or
sbb
xor
and
pop
add
add
scas
mov
bound
rcll
in
add
adc
rcl
lea
shl
adc
mov
aam
sar
xor
pop
add
mov
or
mov
faddl
dec
adc
cmp
div
sbb
clc
xchg
dec
cs
lcall
sbb
xchg
cmp
jg
mov
adc
sub
in
sub
movsb
cmp
mov
cld
lock
in
call
adc
mov
sbb
mov
repnz
sbb
or
lahf
mov
loop
cmpsl
imul
pop
stos
popf
arpl
movsb
popf
stc
cmp
fcmovnb
add
pop
fwait
data16
daa
imulb
cmp
test
in
or
dec
xchg
cmp
rcll
cmpsl
push
test
mov
dec
popf
xchg
xchg
or
sub
sbb
or
lds
mov
mov
imul
cld
testb
orb
imul
sub
sbb
sbb
into
xor
sbb
cmpsl
clc
lds
jp
adc
xchg
or
scas
orb
push
movsl
stos
hlt
jb
psubsb
adc
in
scas
mov
cld
pop
xchg
in
and
inc
sub
jmp
lret
xchg
jns
mov
mov
and
orl
mov
mul
xchg
inc
adc
inc
icebp
sub
fildl
jmp
inc
cld
xchg
daa
xor
add
subb
fwait
mov
cmp
inc
pop
push
divps
xchg
push
pushf
jecxz
add
or
inc
cmp
sub
mov
or
jl
cmpsb
movl
add
sub
lahf
std
test
lahf
mov
and
das
mov
data16
and
pop
in
sbb
outsl
mov
lods
dec
sarl
xor
movsl
icebp
adc
je
xor
inc
pusha
imul
and
fdivl
loopne
xchg
bound
sub
sarb
shl
cmp
in
mov
test
xchg
aaa
sbb
andl
shrl
loope
lcall
movl
inc
pop
mov
test
pop
into
cmp
rclb
push
pop
fstl
popf
xor
shlb
ljmp
rclb
nop
dec
sbb
sbb
inc
pop
push
jg
pop
jge
sbb
fsubrl
aaa
sarl
push
inc
pop
or
imul
test
jmp
aaa
or
pusha
rcrl
jl
jne
dec
inc
ja
push
call
dec
cmp
or
add
pop
call
xor
jno
xlat
out
or
xorb
pop
pop
arpl
mov
xchg
mov
pop
xlat
shrl
rorl
lea
add
fwait
xchg
sti
fs
pop
out
stc
xchg
inc
pop
nop
lods
xchg
lahf
sbb
aad
addb
mov
xchg
add
cli
mov
cmp
out
scas
add
dec
mov
loopne
push
or
mov
add
cli
pop
sub
cs
pop
outsl
lcall
stos
cld
fs
adc
jb
jne
mov
jmp
adc
adc
mov
mov
push
pusha
addr16
fs
leave
sub
mov
jno
jae
mov
xor
nop
sub
push
mov
mov
mov
es
pop
lret
aaa
sti
rcl
adc
push
or
adc
jg
push
xchg
jle
lret
mov
dec
inc
pop
mov
or
lret
and
ja
xor
sub
or
loopne
stos
xor
imul
push
pop
fcmovb
stos
fsub
testb
sti
loop
inc
aas
jmp
push
xchg
inc
sahf
add
mov
std
mov
dec
pop
inc
mov
fistl
daa
or
int3
cltd
mov
cld
add
push
jl
data16
dec
cltd
adc
ret
ss
add
sub
push
lds
repz
xchg
cmp
rcr
mov
sbb
imul
pushf
mov
pop
fwait
mov
popa
adc
push
inc
mov
outsb
popa
or
pusha
cmp
mov
push
js
push
shlb
aad
xchg
and
mov
inc
cld
std
ret
cmp
and
sub
adc
bnd
push
push
mov
mov
lahf
negb
mov
dec
inc
iret
sti
ret
insb
push
jo
lea
rorl
pop
sub
out
pushf
fdivrl
xor
decl
lret
in
inc
adc
ss
xchg
mov
or
mov
es
mov
fnsave
mov
popa
dec
mov
lcall
mov
ljmp
mov
mov
pop
jmp
inc
ja
inc
xor
fidivl
out
lock
or
add
pop
push
daa
xchg
pushl
sbb
jle
cmc
sub
daa
jnp
mov
push
or
mov
arpl
aam
push
jp
xor
xor
adc
dec
or
jbe
inc
cltd
mov
js
inc
out
in
mov
pop
insl
les
and
outsl
inc
jns
imul
in
push
arpl
in
add
lret
subl
sbb
dec
jle
sub
jo
sbbl
sti
mov
das
or
push
xchg
in
cs
sbb
jo
sub
mov
int
or
sbb
or
cmpsl
lret
fwait
dec
test
les
rcl
ret
jecxz
decl
repz
stos
xchg
cmpb
jge
jae
out
and
jne
aad
mov
push
push
mov
xor
outsl
outsb
xchg
mov
in
lea
shlb
sub
stos
loop
fs
mov
clc
push
mov
sarl
into
push
lcall
mov
mov
loop
out
mov
xor
add
outsl
sub
add
in
jecxz
mov
cmp
mov
and
hlt
cmp
leave
push
pop
cmpsl
popa
cmpsb
mov
cmpsl
and
notl
stos
jbe
daa
xchg
jns
nop
jno
push
sbb
jmp
sbb
cmc
sbb
subl
pop
jl
stc
fdivl
inc
cmp
adc
cmp
les
or
cmpsl
xchg
stos
pop
cwtl
push
inc
mov
sub
adc
gs
or
movsb
dec
jns
push
pop
insl
add
sbb
or
nop
pop
es
mov
popf
pop
test
stos
add
push
loop
push
mov
push
shll
hlt
mov
hlt
test
push
inc
ljmp
out
xor
mov
jl
nop
mov
sub
into
sub
mov
jecxz
mov
mov
lea
imul
push
inc
int
xor
push
stos
or
mov
and
pop
imul
push
jno
mov
mov
fdivl
insb
js
xchg
les
dec
js
fldcw
and
xlat
cmp
mov
dec
xchg
iret
dec
ret
lock
aas
das
sbb
push
imul
jl
xorb
fwait
lock
call
mov
mov
push
aas
test
or
popf
push
jle
xor
sbb
nop
jno
or
movsb
xchg
mov
out
xchg
xchg
mov
fldl
ficoms
fsubr
sbb
jl
ret
push
jg
push
jecxz
cmp
pop
and
mov
inc
dec
xchg
imul
fcmovb
sbb
sbb
dec
cmp
in
sub
cmpsl
xchg
hlt
ret
lret
mov
pusha
incb
std
push
or
lret
mov
sub
shrl
rol
mov
adc
xchg
mov
ss
fwait
lret
ja
push
cmpsb
pushf
pop
mov
add
movsb
mov
inc
test
sbb
mov
and
nop
lcall
push
push
nop
push
and
cs
mov
movsl
xor
mov
cwtl
sahf
arpl
pop
xor
repz
in
mov
popf
sub
repnz
lea
rcl
int
mov
es
mov
pop
mov
jb
popl
and
stc
arpl
jmp
cs
test
das
and
sbb
cmp
int
sbb
push
cmp
cmpsb
popf
repz
fcoms
or
inc
sbb
ds
push
ficomps
dec
push
dec
add
aad
cmp
mov
xlat
jg
jne
or
pop
pop
imul
bound
jecxz
pop
movsl
push
sbb
lret
cmp
addr16
or
adc
sti
jne
int3
pop
sbb
scas
clc
decl
xchg
cmp
icebp
xchg
mov
lcall
sub
stos
es
mov
mov
inc
fcmovnb
lahf
cmp
leave
mov
bswap
jo
cmpsl
in
repnz
jno
push
add
pushl
sti
dec
je
or
pop
jmp
mov
push
shl
aaa
scas
cmp
pop
loop
sahf
loopne
xchg
lcall
inc
fidivrl
imul
popf
push
mov
stos
jg
push
mov
or
inc
decl
lret
data16
popa
orl
aas
sbb
cwtl
mov
fdivrl
mov
mov
shr
mov
inc
push
insb
notl
lret
enter
mov
loopne
xor
push
mov
adc
and
jo
push
sub
xchg
aaa
push
jp
dec
push
cmp
jnp
cld
shlb
loope
hlt
int
xlat
mov
lahf
stos
ficomps
mov
sub
and
in
iret
cmp
and
jp
pop
jae
adc
jecxz
mov
sbb
push
sbb
shrw
jb
xchg
push
loopne
insb
in
adc
imul
push
fcmovne
jecxz
inc
stos
adc
fisubl
fcompl
sub
je
xor
jle
les
xchg
scas
loopne
into
inc
pop
mov
push
push
outsl
dec
inc
ss
filds
sub
addr16
push
test
gs
fmulp
std
and
in
mov
adc
push
push
and
jo
mov
enter
icebp
push
imul
push
lea
out
sbb
adc
xor
push
std
fdivl
mov
cwtl
inc
pop
shrb
push
in
inc
stos
pop
gs
test
shlb
pushf
jnp
and
int3
notl
nop
out
lods
xchg
push
lock
cmpsb
mov
imul
jp
mov
mov
sbbl
insb
mov
sbb
loope
jl
push
jo
movsb
pop
shll
ljmp
xchg
pop
add
cli
inc
jecxz
sbb
out
jg
and
sbb
insb
enter
out
lods
cs
nop
xchg
leave
test
cwtl
pop
pop
loop
cmp
pop
add
inc
mov
pop
adc
push
and
push
jge
jge
sub
gs
lods
xchg
or
sub
movsl
popa
mov
mov
push
adc
outsl
or
jl
fucomip
mov
test
cli
rolb
adc
inc
icebp
aaa
inc
jecxz
add
fadd
das
mov
cld
pop
xchg
in
daa
pop
pop
sbb
mov
mov
and
pop
mov
test
mov
inc
out
add
notb
mov
and
lods
mov
xor
movsb
shrb
test
jnp
adc
and
fs
mov
cltd
mov
lret
test
dec
daa
mov
or
cmp
dec
jle
cmp
add
xchg
sub
push
jg
adc
pop
inc
cld
sub
lock
sbb
shl
data16
arpl
in
push
push
mov
cld
xchg
adc
sbb
pop
xchg
popf
and
nop
inc
adc
jne
or
adcb
jp
rolb
xchg
xor
xor
cwtl
pop
push
jb
mov
cltd
insb
push
push
or
add
pop
lock
hlt
addr16
xchg
rolb
adc
jae
and
addr16
mov
mov
adc
mov
mov
push
and
jne
or
and
jne
cs
pop
out
fdiv
ds
out
pop
pop
test
mov
aad
popa
jo
fidivl
and
ljmp
stos
mov
enter
pop
mov
loop
cwtl
nop
add
daa
addr16
test
pop
js
pop
or
fldl
xchg
subl
jg
push
pushf
adc
jb
xchg
mov
push
loopne
pop
pop
push
push
outsl
ljmp
adc
in
push
sub
push
imull
into
fbld
jbe
stc
loopne,pt
add
daa
mov
stos
cmp
pop
pop
jle
into
cmp
into
mov
inc
mov
sub
fisubl
call
add
out
xchg
leave
jbe
test
pusha
imul
in
std
stos
icebp
fwait
xchg
or
pop
ja
fnsave
xor
sbb
shl
pop
ljmp
dec
and
inc
setns
sub
push
mov
inc
ss
inc
lods
sub
cmpl
repz
dec
or
aaa
cmp
sbb
cmpsl
inc
test
sahf
push
mov
fwait
aas
ja
mov
sbb
cmp
add
push
test
jmp
cmc
jecxz
cmc
in
dec
mov
insb
dec
pop
data16
xor
movsl
push
pushf
pop
xchg
fwait
in
ds
testb
xchg
and
mov
rcrl
mov
out
cmc
dec
sbb
push
sbb
cmp
pop
push
lea
pop
movsl
mov
imul
add
sbb
jb
testl
shll
pop
cmp
pop
jns
inc
out
int3
inc
xchg
dec
push
mov
xchg
add
insb
arpl
sub
mov
hlt
and
aaa
and
jne
pop
inc
fmuls
and
jne
inc
fsts
call
cmpsb
repnz
cmp
scas
cmp
or
lret
dec
xchg
rclb
or
dec
test
es
gs
pop
movsl
ret
js
lods
int3
push
pop
fisubl
fbstp
cmp
in
cwtl
and
xchg
jl
aam
cmc
jne
dec
mov
lahf
inc
aam
adc
iret
add
sahf
insl
mov
in
test
dec
movsl
adc
mov
jg
jno
fdiv
aaa
xor
in
sbb
xchg
fnstenv
sub
sbb
cli
push
mov
cmp
fimull
data16
or
in
loope
pushf
in
incl
xor
xor
and
pusha
push
xchg
cmp
rcl
pop
xchg
int3
and
add
xchg
sbb
aam
sbb
lahf
aas
lock
int
mov
ds
or
xlat
cwtl
out
fcompl
movsb
lret
or
pop
adc
hlt
xor
pusha
sub
lret
dec
push
jecxz
pop
fildll
aam
aam
cltd
leave
data16
dec
jge
or
mov
xchg
hlt
lcall
stc
cmp
inc
outsl
mov
xor
cmp
mov
popa
out
hlt
jp
fwait
push
out
jle,pt
ret
clc
inc
test
jmp
das
out
iret
cmpsl
mov
mov
outsb
testb
mov
mov
xor
mov
jno
gs
sbb
dec
data16
cmp
insb
mov
cmc
dec
cld
ljmp
cmp
cmp
push
ror
add
rolb
jp
out
lods
jnp
mov
adc
xchg
shlb
ljmp
dec
out
adc
fidivrl
sti
or
mov
push
in
dec
push
rcl
or
fsubp
cmp
cmp
mov
mov
nop
mov
xchg
xchg
ljmp
movsl
enter
int
out
push
jo
fldt
aad
inc
leave
outsb
in
in
mov
push
push
cmp
sub
test
sbb
adc
mov
inc
push
sub
pop
in
xchg
mov
movsl
xor
lds
pop
fs
mov
xor
in
push
arpl
mov
mov
andl
pushf
out
jp
jb
and
or
mov
sub
arpl
pop
and
dec
lods
data16
pop
xchg
or
and
push
aaa
sub
add
imul
ja
shlb
push
shl
add
inc
loopne
arpl
rol
xchg
xor
ret
pop
sti
mov
out
lret
addb
cmp
rclb
push
and
iret
nop
pusha
arpl
cmp
inc
sub
add
sub
cmp
mov
lcall
xchg
clc
push
jb
add
adc
push
popa
dec
adc
rorb
xor
mov
push
imul
rorb
aaa
sub
daa
mov
outsl
sub
and
xchg
inc
xor
mov
in
pop
dec
xor
jmp
je
cmp
mov
add
sbb
mov
mov
cmp
xchg
fsubp
sar
cmp
int3
scas
dec
cs
ret
fiadds
xlat
sbb
mov
mov
lods
stos
pop
ljmp
loopne
and
popf
and
push
in
push
pushf
push
cld
mov
sub
leave
icebp
je
ljmp
xchg
fstpt
cmp
fcmove
popa
adc
out
sub
jl
and
xor
daa
pop
cmp
insb
jns
aas
mov
ds
or
mov
arpl
and
pop
push
cmpl
ja
adc
in
ret
jg
bound
xor
push
xchg
and
out
cmc
lea
mov
gs
push
sub
lods
cmpsl
in
cmp
std
sub
pop
or
inc
add
movsl
fisttps
cli
inc
notb
cmp
jb
sub
movsb
mov
mov
sbb
and
lock
mov
popf
cltd
daa
push
bound
adc
dec
push
stos
adc
dec
test
imul
push
lds
movsl
mov
add
dec
lods
mov
adc
add
inc
nop
fisttps
pop
push
loope
movsl
xor
aas
cmpsl
mov
insl
pop
xchg
push
lods
lahf
cmp
push
mov
dec
xor
out
pop
js
dec
push
subl
int3
cmp
xor
cmp
xorl
or
cmpsl
jp
xchg
lods
jne
rorb
je
mov
dec
movsb
adc
mov
mov
inc
andb
test
pop
lds
jo
nop
mov
movsl
lret
sub
cmp
ret
cltd
movsl
fcmovnb
jge
xor
mov
dec
adc
inc
push
out
fwait
pusha
pop
mov
mov
xchg
ficoms
pop
divl
rcl
imul
or
sub
aas
sub
in
mov
outsl
xchg
gs
cltd
dec
shlb
sbb
jo
push
push
or
cltd
ret
sarl
mov
imul
icebp
inc
jno
push
stos
fsubrs
pop
mov
sub
enter
int
mov
jno
shrb
fisubrs
push
pop
push
pop
pop
xor
mov
mov
jmp
into
pushf
xchg
pop
push
movsl
or
xrelease
add
hlt
fucomip
ja
pop
fisttps
aam
leave
xor
out
roll
push
dec
int
mov
sub
decb
int
add
sbb
adc
and
call
jne
sub
sbb
add
leave
xchg
xchg
mov
jbe
clc
dec
movsl
insb
repz
insl
cmp
jne
cmpsb
xor
push
pop
aam
lcall
cmp
sub
cwtl
or
cmp
jle
cmc
std
imul
xchg
ret
leave
xor
push
pop
jbe
inc
out
ret
or
out
xor
lods
add
stos
and
shll
push
add
xchg
repz
dec
cmp
jge
jae
or
cld
mov
sub
aaa
icebp
push
dec
inc
jnp
stc
sub
test
js
movsb
push
cmp
xchg
pop
xlat
fsubs
call
in
mov
loopne
sub
jle
cmp
scas
mov
mov
cvtps2pd
push
push
jmp
aam
mov
js
inc
xor
sbb
sbbl
mov
cld
fs
rorl
idivl
out
mov
push
pop
fsubr
add
xor
xchg
cmpsb
adc
xchg
pop
lods
push
or
xchg
incb
cmc
push
outsl
das
pop
shlb
and
mul
out
out
mov
in
cmpsb
cmp
movsl
movsl
ljmp
dec
inc
mov
leave
dec
xor
push
sub
outsl
and
or
popf
mov
or
das
xchg
xor
mov
into
ret
dec
xchg
stc
dec
addr16
or
dec
and
lds
cltd
mov
add
sub
mov
sub
aaa
pop
mov
push
lods
cmpsl
or
fstps
or
or
push
outsb
and
ljmp
ja
jmp
iret
mov
lcall
clc
lcall
fdivl
or
cmp
loop
push
mov
hlt
sbb
mov
nop
lds
out
mov
movsl
aam
push
in
inc
and
pushf
mov
out
sub
jo
pusha
sarb
jo
test
and
push
jge
arpl
pop
xor
cltd
fimull
in
test
pop
dec
add
mov
stos
jae
out
roll
mov
jbe
bsf
push
cmpsb
push
test
dec
neg
xchg
icebp
xor
adc
mov
loopne
movsb
lea
movsb
fwait
push
lret
lret
out
mul
call
cmpsb
xor
movsb
and
and
inc
nop
aad
js
pop
adc
xchg
dec
test
sahf
pop
shlb
xlat
inc
mov
cmc
or
test
nop
nop
jl
sub
add
mov
lret
push
pop
pusha
lahf
sbb
push
ret
out
pop
cmpsb
test
xor
pushf
dec
loope
xchg
shl
cld
jne
stos
imul
pop
mov
or
sbb
scas
jo
dec
sbb
mov
push
mov
clc
fidivrl
mulb
out
push
dec
aam
mov
push
ficomps
or
hlt
adc
lret
outsl
dec
jl
sbb
mov
inc
stc
sbb
mov
add
lea
xlat
orb
jmp
fildll
xchg
adc
jle
pop
leave
jae
repnz
jmp
adc
shll
pop
jns
mov
jns
push
rorb
push
and
mov
dec
add
nop
mov
repz
and
mov
mov
pop
inc
in
pop
push
fistps
cld
and
inc
scas
aad
fsub
cmp
xchg
inc
dec
mov
rolb
xor
push
xchg
ss
cmp
in
vorps
xor
rolb
lock
cmp
scas
jg
mov
xorl
push
and
jecxz
adc
mov
inc
or
cmp
push
mov
je
push
push
imul
bound
xlat
mov
pop
ja
push
lahf
mov
pop
and
int
incb
mov
mov
xchg
lret
or
imul
std
sub
rolb
sub
mov
scas
ljmp
sbb
fcomp
stos
fiadds
mov
jne
int
sub
mov
adc
dec
xor
loop
pop
push
cmp
scas
xor
outsb
stc
mov
cmc
jmp
xchg
idivl
jae
push
shll
push
arpl
xchg
add
popf
mov
inc
xchg
rcrb
stos
cmp
xchg
ds
stc
dec
mov
xchg
ljmp
dec
sbb
leave
lods
or
addb
xor
subl
cmc
gs
lods
lock
jge
fmull
subl
stc
mov
mov
aas
lret
cmp
mulb
fsubrs
orl
dec
sbb
scas
jbe
out
mov
adc
jecxz
mov
leave
mov
mov
out
mov
inc
repz
push
out
hlt
movsl
test
inc
ret
and
push
stos
cltd
test
or
xor
sbb
add
mov
imul
stos
sbb
xchg
or
cmp
repz
sbb
shl
pop
daa
adc
pop
nop
cli
adc
push
stc
mov
jmp
sub
pop
mov
pop
pop
int
push
fwait
insl
into
xor
push
pushf
cwtl
inc
shl
mov
mov
jge
and
xchg
xor
dec
lods
pushf
shrb
xor
fbstp
xchg
pushf
cwtl
pop
scas
inc
rol
in
addl
jns
mov
pop
insl
andb
adc
ficomps
rol
cltd
xchg
loopne
jmp
repnz
fmull
fstps
jnp
test
pop
xor
ss
push
push
add
mov
in
adc
xor
pop
push
adc
popa
subb
aaa
mov
lea
cmp
xor
mov
or
mov
cmp
lods
loopne
lock
sbb
push
gs
or
or
inc
pop
xchg
std
sub
dec
inc
push
push
dec
mov
call
or
jno
enter
or
sub
imul
add
cwtl
sbb
in
test
shll
mov
imul
pop
subb
or
push
insb
lret
aad
cmpsl
jmp
xchg
cmpsb
mov
jecxz
lcall
sub
or
add
xor
or
mov
sbb
in
xor
cmpsb
outsl
add
icebp
pop
ret
adc
mov
mov
mov
lds
cmc
ljmp
jp
jecxz
jno
pop
andl
cli
leave
jbe
test
push
loop
sub
pop
xchg
fwait
pop
mov
dec
and
cli
sbb
push
leave
sti
cli
add
jle
repz
xchg
inc
cmp
sbb
les
and
mov
cmpl
fisubl
pop
adc
in
sahf
arpl
jbe
test
mov
ja
push
ss
pop
imul
mov
pusha
jge
pop
and
fistpl
lret
xor
shr
fldl
xchg
lret
push
sub
ljmp
sbb
pop
data16
jae
arpl
fldcw
sub
pusha
jecxz
dec
mov
xchg
outsb
xchg
jb
enter
cld
mov
jb
sbb
add
iret
mov
and
sahf
mov
fidivrs
pop
adc
into
jp
inc
repz
shrl
repnz
dec
push
xor
test
mov
cltd
sbb
cmp
xlat
adc
dec
adc
sub
pop
popf
pop
cmp
push
add
mov
inc
int3
xchg
mov
mov
insl
mov
out
rol
das
fs
in
mov
push
dec
hlt
pop
sbb
jno
hlt
fildll
jne
sbb
sbb
loopne
pop
fistl
insl
test
mov
jmp
dec
cmp
adc
ljmp
xor
sarl
fsubp
pop
daa
ret
rolb
dec
lods
cwtl
cmpsb
lahf
mov
out
shl
sbb
out
push
lret
popf
xchg
pop
mov
loop
mov
mov
pop
cltd
xchg
mov
stc
clc
fdivrl
add
xorb
jg
stos
nop
jae
in
lds
dec
adc
lea
cli
add
jge
notl
adc
mov
or
test
out
mov
test
mov
dec
pop
sub
jns
aas
mov
push
push
fs
ret
adc
subl
repnz
test
sub
jnp
mov
and
dec
cmc
add
loope
loope
and
push
mov
xchg
push
fcmovne
ss
scas
adc
mov
jge
fsubr
aaa
leave
sub
or
negl
xlat
inc
and
jp
xchg
stos
out
add
xchg
inc
fwait
mov
dec
sub
clc
jb
adc
xor
addl
scas
lods
mov
push
push
xchg
mov
sahf
es
push
jb
jno
lock
mov
or
inc
into
aas
rorl
adc
lcall
jns
shlb
xorl
pusha
fidivrl
mov
pop
push
out
cmp
ljmp
jo
clc
fsts
cltd
shrl
sarb
fwait
scas
ljmp
lahf
push
cmp
jecxz
xor
sub
test
les
jnp
push
inc
push
cmc
orl
jae
int
dec
jb
xchg
adc
int
lea
jno
cmp
sbb
dec
sub
mov
rorb
mov
and
nop
and
mov
scas
test
cmp
add
push
mov
adc
jb
pop
enter
addr16
fwait
jae
mov
mov
dec
fildll
adc
mov
scas
aaa
jg
adc
lods
insl
cmp
push
push
dec
ss
adc
leave
cmpsl
inc
sub
loop
push
aaa
add
outsb
les
fnstsw
or
dec
and
adc
cmp
dec
roll
and
sub
bound
mov
dec
mov
test
adc
jp
pop
or
clc
test
mov
pop
xor
ss
rcll
fistps
add
add
cmp
or
jl
inc
xchg
loope
fnstsw
pop
xchg
mov
shll
ds
ljmp
push
pop
ja
icebp
inc
sbb
add
inc
dec
push
lods
add
pop
popf
cwtl
push
sub
mov
inc
les
out
int
adc
imul
fcomip
adc
ret
mov
std
jle
adc
add
mov
out
jge
dec
adc
ja
mov
dec
mov
sub
in
mov
add
fsubs
cmp
nop
shll
dec
and
xor
ss
dec
pop
imulb
cmp
loope
xor
push
addr16
rcll
stos
fbld
xor
test
fcmovnu
cmp
movsb
mov
fnstcw
sbb
loope
jmp
and
lds
inc
sub
pop
test
mov
loop
hlt
out
adc
push
jne
cmp
xchg
jno
jb
dec
and
sbb
mov
aas
jb
mov
mov
popa
or
or
nop
shlb
dec
pop
arpl
subb
loopne
sbb
push
iret
pop
int3
sbb
repz
push
fcmovnu
fwait
iret
pop
out
pop
xor
fstpl
sti
lahf
cmpsl
pop
test
xor
xor
cmp
adc
pushf
divb
test
jmp
outsl
rcrl
mov
add
or
push
dec
enter
and
push
sbb
loop
push
sbb
int3
fistpll
and
or
jbe
dec
xor
mov
mov
insb
mov
mov
mov
push
cmpsl
lods
mov
and
dec
pop
std
in
shlb
arpl
xchg
cmc
cmpsb
pop
cltd
lcall
repz
push
movsb
sbb
aaa
mov
ficompl
sti
dec
cmpsb
jbe
push
push
mov
mov
fdiv
pop
add
jl
cltd
jno
imul
mov
jae
sub
fsubl
xor
push
mov
shrb
sbb
and
lcall
fwait
jne
insl
xor
cmpsb
jecxz
arpl
jp
adc
inc
fsubl
jmp
outsb
xchg
ds
mov
sub
pop
cmpsb
inc
movb
push
stc
pop
jo
fcoms
sbb
adc
cwtl
jge
or
jl
fcompl
cltd
cmp
in
pop
cmp
incl
dec
mov
cld
popa
mov
nop
jnp
jge
enter
push
mov
sub
cwtl
or
iret
inc
in
outsl
cmp
sub
fwait
mov
in
jg
push
or
sub
or
hlt
push
cmp
xor
ficoms
imul
adc
push
push
pop
das
arpl
sbb
push
shlb
rcrl
adcl
outsl
push
or
pop
lret
push
or
out
test
roll
jno
je
dec
xchg
sbbb
mov
stos
fwait
jmp
push
adc
cmpsl
ret
sub
xor
rcl
pop
notl
sbbb
xchg
xchg
lock
jg
or
icebp
dec
leave
add
or
xchg
push
adc
cmp
jbe
cli
es
pop
mov
mov
and
mov
sahf
mov
ja
inc
jb
xlat
cld
sti
pushl
dec
dec
call
add
inc
adc
int
xor
jge
cmp
jns
and
fistpl
add
and
or
push
cmp
lea
and
pop
push
inc
cmp
daa
call
cmp
sub
imul
and
and
cwtl
lods
sub
cs
lcall
pop
jnp
fimull
jno
lock
sub
mov
inc
mov
stos
loop
test
cmc
or
push
pop
inc
repz
das
jne
push
push
mov
or
imul
and
stos
aas
xchg
lcall
fbstp
mov
addr16
scas
jnp
fs
popf
mov
outsb
mov
and
movsl
clc
sti
mov
sbb
negl
mov
push
fs
inc
sub
xchg
rcrb
roll
jg
jg
mov
popa
push
xor
xchg
push
push
fldl
iret
jno
pop
stc
dec
and
xchg
sub
ret
fcmovbe
mov
in
pusha
push
xor
xchg
jbe
stos
jns
jecxz,pt
push
mov
jge
push
xorl
pop
js
pop
jb
sub
data16
jle
les
aad
insb
fcomip
jbe
aaa
cltd
cltd
fwait
ret
js,pt
jl
fwait
inc
pop
push
mov
pop
xchg
sub
jl
fcoms
jnp
jmp
xchg
mov
jl
daa
xor
jle
movl
arpl
inc
jns
cmpsl
aaa
ret
in
shlb
dec
fildll
stos
pop
add
mov
mov
adc
aad
arpl
and
mov
insl
jo
mov
shrb
stc
sub
and
cmp
push
std
repnz
xchg
mov
in
je
ss
push
clc
movsb
popa
pop
outsb
push
lret
lcall
icebp
sub
int3
subb
sub
pop
clc
repz
mov
mov
cs
gs
push
sbb
repz
mov
cmp
scas
shll
mov
jnp
dec
dec
pop
stos
outsl
pop
jmp
insl
sub
mov
add
push
cmpsb
fs
inc
outsl
push
jns
sub
out
cltd
out
shr
sbb
test
fwait
dec
mov
sti
addr16
lock
adc
dec
dec
adc
les
jo
pop
sub
ljmp
aad
mov
cmc
int3
popa
imul
out
pop
jmp
fs
pop
or
jne
outsb
cmp
pop
aam
lret
cmp
cmp
add
outsl
inc
insl
inc
inc
sbb
popf
jle
ret
push
gs
out
xchg
pusha
mov
dec
add
pop
fsubrl
test
js
fsts
arpl
dec
nop
loopne
xchg
and
push
xor
cmp
or
inc
xchg
dec
cmp
xchg
mov
push
roll
cmp
insb
ret
lods
incb
jno
test
push
cmpsl
lahf
xchg
fmuls
gs
gs
test
xor
inc
push
pop
cwtl
dec
int3
and
xchg
sbb
insb
xchg
jns
in
mov
mov
or
sub
adc
mov
cmp
push
add
testb
arpl
jnp
xchg
push
xchg
test
fldcw
js
jb
inc
jnp
inc
cmp
fsqrt
adc
inc
pop
jae
and
hlt
inc
jne
clc
xor
shll
jno
dec
fildll
mov
arpl
sub
jno
into
add
mov
mov
xor
pop
das
loopne
jne
inc
pop
dec
call
jle
jns
cmpb
sbb
decb
jmp
xchg
cli
mov
test
xchg
aaa
jmp
fcomi
cmp
cmpsl
mov
js
adc
rcll
jo
add
sub
lods
dec
inc
mov
test
mov
jmp
cltd
outsl
xchg
es
fists
jle
cmp
leave
fcoms
fwait
outsl
push
outsl
jne
ljmp
jbe
mov
xchg
dec
xchg
mov
fbld
cmp
call
jbe
inc
lods
jmp
hlt
and
repnz
test
popf
mov
pushf
aaa
popa
cmc
jno
arpl
scas
aas
data16
pop
mov
testb
std
or
xchg
test
aam
push
imul
ror
push
add
mov
mov
lret
adc
sahf
mov
mov
mov
into
pop
adc
xchg
mov
bound
xor
mov
int3
add
inc
or
insl
into
hlt
or
inc
xchg
repnz
out
bound
data16
adc
jne
fwait
xor
pushf
decb
mov
inc
add
imul
mov
cltd
mov
sti
sbb
xchg
jmp
mov
adc
sbb
movsl
push
jb
lods
jne
jae
mov
nop
xor
mov
and
pop
add
lahf
cmpsb
mov
pop
in
loop
inc
int
mov
mov
fnstcw
out
mov
cmp
imul
ss
ja
sbb
xlat
hlt
imull
inc
sbb
mov
push
jg
xchg
iret
mov
lea
sahf
push
inc
jl
push
push
stc
aam
insb
adc
adc
daa
movsb
xchg
arpl
mov
pop
xchg
mov
outsb
les
adc
xor
in
outsb
data16
push
in
add
sti
dec
push
push
xchg
inc
aaa
gs
scas
dec
in
arpl
xchg
cmp
cwtl
xor
iret
ret
loop
jo
faddl
inc
sbb
in
push
cmp
or
out
push
cltd
jmp
cld
mov
or
cli
cmp
add
test
xor
pop
dec
aas
subl
leave
or
in
orl
dec
cmp
rcrb
and
jmp
je
ds
les
push
imul
sbb
or
dec
xlat
xorb
dec
cmp
loop
loope
jno
leave
adc
sbb
roll
sub
rcrb
hlt
stos
xor
inc
loope
sub
cli
test
or
iret
repnz
ds
movsb
fwait
mov
int
repz
jae
aam
out
inc
lret
inc
inc
jae
jns
cs
mov
sub
xlat
jne
sar
mov
out
and
push
andb
adc
dec
pushf
push
jbe
ret
pushf
mov
dec
mov
add
cmp
arpl
mov
rcll
imul
add
out
sbb
outsl
sub
stos
sub
mov
jge
insb
mov
fcmovu
rorl
test
push
clc
adc
js
cmp
sarl
pop
mov
cmpsl
out
sub
sahf
adc
sub
stos
adc
andb
lret
pop
imul
and
iret
rsm
pop
loope
in
lods
or
mov
loop
jns
rcrb
negb
out
dec
xchg
lcall
outsb
loopne
inc
hlt
sbb
xchg
stos
and
stc
clc
push
sub
jge
sbb
and
xchg
fsubrl
mov
jo
repnz
and
fistps
aaa
push
test
pushf
jecxz,pt
int3
andb
jnp
pop
test
movsl
ret
daa
testl
dec
icebp
shll
mov
test
cmp
mov
xchg
push
jne
rorb
mov
dec
add
jb
and
pop
icebp
sbb
cmp
lods
or
mov
insb
mov
mov
add
mov
mov
dec
or
mov
repz
xlat
fwait
or
stos
cwtl
jge
clc
in
fmuls
add
and
in
je
jle
mov
or
sar
sti
pusha
jo
addb
ret
xor
pop
data16
xor
fxch
add
pop
divl
push
pop
inc
sub
mov
in
cld
cmp
test
cltd
and
in
repz
inc
lret
les
push
in
dec
pusha
dec
rcl
and
and
inc
inc
stos
add
movsl
inc
leave
call
mov
pop
mov
rolb
mov
repnz
jbe
jbe
ds
or
and
mov
jb
in
push
adc
and
xor
and
insl
popf
mov
or
add
xchg
pusha
lea
mov
fsubrl
pop
fiaddl
in
fcomp
push
add
sbb
xchg
adc
idivb
push
xor
dec
jbe
stos
lods
lock
sbb
jb
cmovl
jno
das
mov
aas
sti
stos
in
cltd
push
and
push
sti
out
jmp
push
scas
ja
sarl
jmp
inc
inc
repz
lahf
cltd
test
cmpsb
xchg
sarl
daa
mov
push
jo
setp
xchg
push
mov
mov
or
or
adc
icebp
mov
and
sub
mov
jbe
jecxz
pusha
ffreep
fildl
pop
insl
scas
xchg
cld
shll
popa
je
sub
mov
rorb
or
pop
sbb
repz
or
imul
lcall
cwtl
in
mov
das
gs
pop
arpl
fcom
mov
or
xor
std
sub
dec
int
xorb
adc
leave
cmp
mov
fs
or
mov
push
cwtl
lods
incl
cmp
or
xchg
pushf
xor
aam
jbe
cmpsl
xchg
insb
mov
push
sbb
cmpsb
scas
and
ljmp
sbb
mov
repnz
xchg
idivb
aam
pop
jbe
aam
push
dec
cld
sub
jp
mov
and
fst
pushf
pop
xchg
inc
or
movsl
push
setbe
mov
call
cmpsb
xor
fcoml
or
stos
int
dec
hlt
mov
cmp
test
mov
data16
movsl
movsb
inc
or
mov
jae
es
jmp
aaa
jb
adc
test
std
inc
sbb
iret
inc
xchg
push
into
mov
xor
aas
loopne
repnz
arpl
enter
jg
sub
mov
lock
dec
jp
dec
dec
clc
bound
pop
aaa
ljmp
insb
push
loop
push
or
or
pop
fcoml
push
sbb
in
incl
add
cmpsb
push
cs
push
cltd
mov
sahf
or
or
cmp
movsl
arpl
std
xor
fdivs
popf
aaa
daa
shr
movb
testb
lods
mov
or
test
scas
icebp
mov
and
iret
jmp
push
jb
sti
in
inc
cwtl
ds
and
adc
jmp
aam
sahf
mov
cmp
or
push
inc
xchg
in
sub
and
in
negb
sub
pop
ljmp
or
push
mov
add
cmp
xlat
test
xchg
xor
sub
out
xor
psubsb
adc
lods
data16
fs
cmp
mov
add
dec
out
dec
sbb
xor
out
sbb
mov
jle
idivb
jmp
push
jp
movups
in
pop
in
out
push
lret
add
xor
inc
into
pop
repnz
lret
sti
fwait
into
add
cmp
in
sbb
jns
sarl
dec
mov
sbb
imul
pop
rcll
rclb
mov
jl
enter
mov
push
repnz
loop
push
sahf
aad
jno
jbe
popa
cmc
push
push
inc
adc
sub
sbb
add
mov
cmp
xchg
jbe
stos
mov
dec
sbb
inc
sub
jl
in
mov
mov
popa
or
pop
aas
daa
sti
mov
out
adc
fldt
dec
orl
lcall
scas
stc
and
mov
rorl
in
in
lahf
fs
pop
lock
add
cmc
inc
out
adc
cmpsl
pop
cmpsl
jg
popf
push
sub
adc
mov
addb
cwtl
mov
movsb
loopne
ljmp
subb
ds
cmpsb
mov
aad
xor
xchg
pop
push
lds
rcll
push
mov
out
in
scas
icebp
hlt
divl
testl
insb
jp
pop
lret
mov
in
gs
das
mov
xlat
cmpsl
pop
ret
sub
cmp
mov
fnstenv
jmp
je
dec
out
push
movsb
and
orl
ret
jmp
cmpsb
nop
ret
xchg
and
insb
stos
xchg
xchg
or
fisubs
xchg
xor
clc
push
adc
xor
cmp
mov
dec
testb
decb
dec
jae
inc
inc
jmp
jp
xchg
add
icebp
lret
cmc
xchg
push
push
or
dec
sub
push
push
xchg
repz
pop
pand
pop
adcl
aam
lods
add
dec
inc
cmpsb
push
in
push
xlat
xchg
test
popf
jecxz
ljmp
or
popf
enter
sbb
mov
test
shl
test
out
cs
lret
pop
adc
pop
cmp
and
or
and
mov
cltd
fs
xchg
js
test
add
lock
or
mov
cmp
dec
aam
fsubr
ljmp
pop
mov
xchg
cmp
jb
sub
push
js
or
lods
or
lods
test
andb
mov
ja
inc
arpl
sub
pop
push
loopne
jbe
loopne
lds
out
out
inc
test
vpextrw
pop
decl
cli
mov
scas
mov
loopne
jmp
add
adc
sarl
daa
addr16
mov
or
sub
lods
sbb
inc
aam
mov
movsb
cmovbe
pop
pop
in
pushf
dec
xchg
xchg
leave
ds
push
insb
stos
movsl
mov
or
hlt
idiv
sbb
je
sar
add
xchg
enter
jno
push
ljmp
jae
scas
rorb
jns
pushf
cmp
add
inc
popf
push
xchg
sbb
add
cltd
jl
clc
cs
xor
ja
imul
dec
or
pop
pop
out
mov
gs
aad
add
je
pushf
je
or
data16
mov
or
inc
push
shr
sbbl
sahf
popf
aam
mov
andb
ds
xchg
mov
or
mov
pop
xor
adc
dec
out
dec
and
or
int
test
js
stos
pop
pushl
rorl
int
inc
cmp
sbb
test
decb
mov
mov
push
inc
cmpsl
pop
insl
rcll
adc
mov
and
pop
pop
xchg
jge
lea
ja
sbb
popl
dec
mov
fs
xchg
inc
inc
dec
sbb
les
iret
xchg
ds
jle
ja
hlt
cltd
push
push
loopne
std
xor
aad
xchg
xorl
lea
inc
or
adc
jl
jmp
out
sbb
clc
fsubr
kaddw
movsl
xchg
push
movsl
mul
add
mov
enter
pop
in
jnp
addr16
loop
rorb
inc
call
push
xchg
imul
pop
sbb
addb
mov
jno
out
dec
push
fldcw
xchg
shll
push
xchg
outsl
sub
pusha
mov
out
pop
lahf
js
sub
sti
xlat
roll
or
cmp
stos
out
nop
mov
jne
jp
into
pop
arpl
jmp
pop
cmp
loop
fucomip
clc
dec
addr16
inc
loopne
xchg
xchg
in
and
lods
ljmp
mov
dec
add
nop
push
cmp
jbe
ja
movsb
mov
shrb
stos
pusha
bound
xor
pop
push
ja
clc
sub
push
ficompl
push
cltd
pop
pop
sbb
mov
sbb
adc
cmp
arpl
add
negl
loop
mov
lea
add
push
clc
inc
leave
add
imul
mov
sbb
lea
sub
cmpsb
push
in
cwtl
fnstcw
test
int
pop
scas
lods
push
dec
ja
mov
fcompl
add
popf
data16
not
cmp
push
inc
dec
popa
out
pop
push
inc
inc
mov
mov
mov
fcompl
and
outsl
js
aam
cmp
cmp
addr16
mov
xchg
push
aas
xchg
jbe
cmpsb
sbb
sub
xor
int3
push
call
daa
and
fs
fwait
pmuludq
loop
dec
sbb
out
ss
inc
pop
mov
jo
mov
outsb
cmp
mov
sbb
adc
xor
mov
subb
loopne
add
sbb
mov
xchg
or
lea
inc
mov
xchg
cmpsb
dec
pop
sbb
sbb
jae
imul
add
push
aaa
clc
out
xor
lock
push
dec
sub
mov
int3
es
jb
jecxz
jbe
push
mov
mov
loope
jb
push
cmp
jge
in
inc
testl
lcall
sub
cwtl
cld
xor
pushl
or
cltd
xchg
fnstenv
sti
push
pop
add
ds
outsb
mov
fadd
out
fwait
iret
int3
pushf
rorl
gs
mov
popf
out
jo
inc
imul
push
jge
and
mov
arpl
xor
push
xchg
lahf
jg
mov
into
jne
cs
push
jecxz
iret
clc
mov
sbb
mov
jge
or
sub
in
leave
mov
jns
dec
cmpsb
lock
pop
dec
xor
mov
xorl
leave
or
dec
andl
inc
pop
in
mov
add
loop
in
mov
insl
cmp
mov
imul
dec
outsl
movsl
sbb
in
stos
xchg
rclb
lahf
lret
dec
insb
rcrb
je
mov
mov
fs
addr16
or
mov
pushf
xor
mov
les
sub
scas
and
fucom
pop
clc
mov
lahf
loop
cwtl
fs
outsb
addl
pusha
push
scas
out
sti
pop
add
scas
into
pop
test
es
xor
dec
push
add
xor
ja
mov
test
dec
fildll
fidivs
xor
lods
cmp
pop
push
stos
sub
andl
sar
xchg
jo
out
int3
hlt
clc
push
pop
bswap
into
jp
mov
dec
adc
cwtl
into
adc
mov
mov
icebp
or
jmp
daa
in
sbb
sub
lods
mov
adc
outsl
xchg
mov
xchg
push
std
sub
out
jae
jg
jbe
mov
jb
and
pop
mov
xlat
jno
aaa
or
jl
sub
hlt
push
andl
mov
dec
pop
cmpsl
popa
insb
outsl
mov
fidivl
xor
movsb
std
repnz
cmp
jno
mov
gs
mov
out
fwait
and
inc
sbb
ja
shlb
adc
cwtl
popa
addr16
cmp
arpl
aam
enter
jle
inc
pop
popf
sub
add
adcl
xor
sub
mov
inc
xor
or
push
int3
inc
in
mov
dec
inc
rorb
add
dec
or
mov
test
and
cli
inc
xchg
gs
dec
jb
in
and
sahf
inc
js,pn
sbb
jnp
cmpsl
movsb
fsubp
push
sar
jae
jae
rorl
pushl
or
xor
push
movsl
dec
test
mov
cmc
jo
sbb
push
call
dec
fiaddl
jge
loop
enter
ret
or
imul
repnz
aad
inc
ret
sbb
mov
adc
repnz
aas
imul
out
jmp
dec
push
xchg
insb
add
xor
inc
inc
loopne
mov
xchg
cmpsl
pop
imul
jecxz
cmp
stos
scas
sbb
js
mov
icebp
add
mov
test
sub
mov
xchg
dec
mov
test
sbb
test
mov
mov
cli
pop
mov
mov
push
scas
pop
iret
ja
js
cmp
into
cmp
mov
mov
xchg
cmp
pop
int
hlt
jmp
dec
push
jnp
aam
jmp
inc
inc
adc
rcrb
push
push
into
es
push
or
int3
xchg
out
aam
push
push
push
sub
test
ret
push
sbb
mov
enter
out
jmp
pop
and
mov
push
and
scas
cmpsb
pushf
add
adc
xor
mov
mov
neg
stos
outsb
aad
push
push
inc
testl
dec
mov
bound
lret
cmpsl
fsubrs
adc
aas
int
aam
es
or
aam
dec
int
icebp
sbb
pop
fstpt
cmp
mov
mov
dec
lahf
dec
arpl
cli
fldt
out
in
rcll
xor
and
lret
out
dec
scas
test
ljmp
and
jnp
mov
imul
leave
jo
lcall
aas
push
cmc
mov
sub
shll
fadd
inc
push
lcall
cmpsb
movsb
push
ljmp
ficoms
pop
sbb
stc
dec
out
std
push
hlt
pop
cmpsb
mov
sub
sub
cli
lret
ds
add
les
cmp
shlb
xchg
aaa
int3
ja
mov
lret
push
cwtl
pusha
ret
sbb
jo
lods
shrb
cld
shlb
aam
mov
iret
into
sub
sbbl
xchg
out
enter
or
subl
out
or
jo
mov
and
sub
loop
bound
pop
cmp
xchg
dec
loopne
cwtl
mov
add
lret
mov
test
sarl
lods
std
dec
dec
xlat
das
push
pusha
adc
leave
jbe
cmp
dec
hlt
xchg
outsl
in
out
and
enter
push
cmpl
shll
push
mov
mov
test
das
andl
aam
loop
popl
dec
add
out
push
xchg
xor
xor
sahf
dec
lahf
mov
insl
fldcw
jmp
ret
aad
test
lret
ss
imul
das
sbb
and
mov
and
leave
out
push
leave
ficoms
pop
xor
jp
jmp
push
xor
pop
sub
ss
je
jae
xchg
push
jmp
je
and
mov
pop
push
loop
xor
xlat
cmp
arpl
cmpl
ja
pop
mov
jo
mov
or
dec
cmpsl
dec
dec
adc
xchg
pop
lret
inc
cld
add
ds
jle
cwtl
lds
rol
dec
mov
mov
mov
pop
shl
pop
insb
and
mov
into
jg
xchg
dec
fldl
sbb
mov
imul
push
xchg
xor
fidivrs
fistpl
jae
xor
jl
and
push
inc
dec
jbe
shrb
mov
cmpsb
mov
mov
dec
xor
ret
imul
int
insl
inc
inc
sub
lds
aam
cmpb
xor
aad
addr16
sbbb
hlt
stc
lods
mov
jbe
adc
int
ljmp
out
jge
jnp
daa
dec
icebp
mov
pop
sbb
test
cs
xor
push
outsl
mov
in
xchg
cmp
stos
push
fsts
sti
dec
iret
jmp
clc
pop
test
cmp
jns
pop
fdivrl
in
and
sbb
and
ret
or
lea
mov
push
xchg
push
outsl
shl
and
fidivrl
jno
data16
pop
rol
mov
mov
es
gs
jp
adc
outsb
jb
rcll
into
xchg
test
pop
xlat
lea
into
sub
aad
cmpsl
out
icebp
movsl
sbb
jl
pop
arpl
aas
push
fs
mov
outsb
test
push
mov
ljmp
mov
sahf
dec
adc
outsl
jne
and
adc
jge
out
aaa
arpl
imul
jb
mov
sbb
cmp
sbb
jns
leave
cmpl
shlb
xor
cmp
push
lods
jp
popa
cwtl
inc
sbb
aaa
mov
mov
rorb
jl
push
jg
push
xor
mov
push
jb
xchg
and
test
sub
and
fstpl
into
push
cmp
and
outsl
pop
jns
inc
int
push
shl
test
inc
js
xchg
or
or
call
sub
iret
mov
insb
mov
xor
mov
in
xchg
lcall
xor
jbe
xchg
std
mov
lea
dec
sahf
addr16
faddp
movsb
sub
shl
mov
je
push
fwait
adc
jl
pop
sar
sub
cmc
fmulp
ss
mov
adcb
loope
sub
arpl
aad
dec
sbb
aaa
sub
add
jne
sbb
dec
stos
mov
jg
rcl
das
lret
mov
sub
movsb
cwtl
mov
mov
jnp
fwait
add
out
pop
mov
pop
nop
mov
or
mov
cmp
into
shrl
pushf
add
into
push
lds
xchg
ds
pusha
fisttps
mov
pop
sub
inc
mov
shlb
cmp
jg
jae
outsl
ss
pop
push
daa
enter
xor
jmp
sarl
data16
popa
mov
add
xlat
mov
lcall
enter
vandnps
xor
sti
pushf
je
pop
out
std
xor
push
jno
cs
or
inc
mov
jnp
fsts
add
mov
xor
dec
add
das
cmp
rcll
jns
mov
mov
xor
cmp
fucom
push
lods
out
xor
mov
repnz
cmp
jne
subl
bnd
cmp
push
test
jns
fdivp
mov
pop
jbe
iret
insl
mov
loopne
push
rcl
inc
das
enter
push
add
xchg
rcl
rorl
scas
sahf
lcall
test
test
push
mov
mov
test
in
enter
adc
cmp
sbb
pop
iret
mov
dec
pop
fcomps
cmp
roll
ret
adc
pop
rorl
test
lahf
scas
test
dec
or
mov
aas
or
stos
mov
inc
aaa
mov
inc
mov
jl
popf
jecxz
add
adc
xlat
popa
out
and
inc
loop
xor
push
push
jnp
push
mov
clc
cmpsb
add
mov
xor
mov
lods
dec
insl
movsb
fs
cmpsl
notb
mov
xor
adcb
repnz
int3
push
dec
arpl
dec
scas
mov
imul
pop
and
jmp
in
mov
inc
push
sar
jle
idivb
inc
insb
inc
push
xor
add
aaa
ds
cltd
push
iret
xchg
fstpt
shlb
test
ja
mov
sbb
adc
xor
sbb
testb
mov
jmp
push
aam
fwait
or
sbb
inc
xor
mov
es
lea
xor
inc
jmp
sbb
fs
sti
mov
sub
jg
jge
push
mov
imulb
ret
xor
fmull
sahf
add
cwtl
pusha
imul
loopne
daa
mov
jno
inc
test
mov
dec
xchg
imul
int3
in
scas
sub
lcall
pop
jmp
out
inc
mov
notl
xchg
cmp
in
inc
test
jge
or
shl
dec
leave
std
mov
xchg
mov
cli
push
cmovge
in
dec
xchg
push
bound
inc
dec
push
and
inc
add
scas
pop
outsl
push
mov
adc
sub
mov
push
js
xor
push
arpl
pop
scas
mov
ss
pushf
xor
sub
pop
and
sbb
mov
test
inc
inc
jecxz
lea
mov
sub
int3
inc
jae
shl
stos
and
sbb
xor
xchg
sahf
es
sbb
in
dec
clc
sbb
cli
push
xchg
mov
out
adc
ret
or
inc
in
loope
andl
xchg
pop
fcomps
cmp
call
ja
add
adc
subb
sub
push
int
mov
les
push
xor
xchg
mov
out
cmp
cmp
or
lcall
jmp
hlt
push
or
ret
cs
dec
fs
test
outsl
arpl
pop
mov
and
jecxz
sbb
pop
out
jp
xor
add
jae
gs
mov
pop
push
mov
lcall
and
out
test
lahf
dec
mov
pop
jo
ja
inc
pushf
enter
icebp
and
adc
movsb
pop
jl
iret
push
icebp
cmc
dec
push
cmpsl
ficoml
lea
cmp
jno
push
hlt
nop
nop
inc
jno
in
sub
int
dec
sub
or
hlt
enter
lcall
pop
add
sbb
inc
test
sub
aad
pop
popa
push
jmp
int
mov
aam
das
test
arpl
mov
jnp
cltd
popa
scas
push
sbbb
and
cmp
cmpsl
out
ds
lea
fcoml
lods
xor
inc
pop
int3
enter
sbb
pop
in
pop
ret
test
in
lds
mov
repz
js
loopne
push
fnstcw
aas
loopne
daa
mov
sbb
sar
pop
sahf
jg
std
pop
iret
adc
lcall
or
pop
xor
jne
testb
jmp
js,pt
data16
dec
idiv
push
adc
or
jmp
xchg
stos
mov
sub
sbb
sub
mov
xchg
into
mov
add
mov
or
or
ret
add
ljmp
push
aas
xchg
or
sbb
xor
jne
and
mov
ja
adc
lods
sub
aas
jb
adc
rolb
adc
popa
xchg
or
in
pop
xchg
push
adc
or
out
movzwl
outsb
cmpb
mov
pop
loopne
push
pusha
popf
lahf
or
insb
sub
sub
or
or
push
sub
xor
add
repnz
clc
imul
mov
add
aad
cmp
aas
shl
mov
sbb
adc
addr16
fisttpl
xchg
aad
int3
adc
inc
popf
inc
pop
call
scas
push
aad
dec
add
mov
lods
imulb
cmp
cmp
loop
bound
ja
test
cmp
sbb
in
and
nop
test
pushf
test
mov
xchg
in
sahf
int
inc
pop
addl
dec
push
xchg
fcoml
cmp
lods
test
std
ja
xorb
ja
jp
adc
pop
cmp
sarb
sti
mov
sbbb
pop
cmp
sub
sarl
sbb
filds
sub
or
loop
xchg
mov
sbb
scas
or
push
xor
mov
shr
push
mov
repnz
xor
push
stc
mov
xlat
movsl
movsl
jl
and
xchg
js
cmp
mov
jae
lahf
push
cltd
fisubl
cwtl
sbb
repz
ret
and
jle
inc
mov
or
xchg
aam
or
lret
inc
pop
mov
xor
jge
cmp
lret
add
negb
movsl
mov
int3
pusha
dec
push
push
stos
inc
pop
fildll
lret
mov
aad
loope
pop
popa
inc
outsl
push
add
clc
and
testl
popa
mov
mov
push
jp
pusha
mov
shl
push
icebp
push
xchg
outsb
mov
out
dec
dec
push
push
sbb
je
adc
xor
inc
mov
fwait
stos
lock
movsb
out
ret
fdiv
add
and
imul
in
pushf
popf
xor
lret
sub
xchg
loopne
imulb
mov
testb
cmc
sbb
jp
xchg
adc
call
xorl
fs
cmp
dec
nop
xor
xor
inc
lret
mov
jle
or
dec
ljmp
les
in
and
xchg
sbb
lahf
push
cmp
gs
dec
jp
clc
fsts
pop
dec
jmp
dec
nop
rcl
push
add
lret
cld
or
and
leave
out
mov
fdivrl
mov
jmp
sub
ret
out
loope
imulb
jnp
fs
sbb
stos
into
inc
sbb
incl
cmp
clc
sbb
pop
clc
sub
sub
adcl
popa
sub
loopne
movsb
scas
xlat
pop
cmp
int
orb
sub
cli
test
cmp
jle
or
out
cmp
clc
shlb
pop
pop
ja
ret
xchg
enter
mov
xlat
push
adc
mov
lea
inc
scas
dec
js
jle
inc
pop
jno
xor
inc
cltd
add
push
add
sbb
mov
imul
inc
xchg
shlb
mov
shrb
mov
outsb
out
xor
cli
popa
sub
ficompl
sub
xor
ljmp
sub
aam
out
xlat
and
adc
rcrb
dec
sbb
xchg
stc
icebp
nop
cmpsl
mov
in
pop
outsl
fisttpll
inc
cs
jns
adc
ljmp
pop
sbb
adc
inc
pop
shll
or
sbb
hlt
inc
sub
nop
xlat
inc
jl
pop
stos
adc
mov
sbb
sbbb
ror
rcrl
sub
sub
loopne
add
dec
mov
ss
adc
cmp
or
out
je
mov
dec
sbb
push
test
sub
scas
sbb
mov
add
inc
jno
push
cli
mov
xchg
jae
pop
mov
mov
pop
mov
lods
jne
and
jne
lods
into
pop
pop
cmp
stos
or
lret
and
in
add
pop
pop
aas
xchg
rcrb
mov
jns
adc
or
inc
add
loopne
pop
xchg
sbb
enter
mov
push
repz
sub
xchg
sbb
xchg
neg
pop
js
jae
or
or
flds
addb
hlt
jno
sbb
stos
sub
js
mov
lret
inc
jp
fnsave
sbb
iret
mov
sub
gs
pop
jecxz
lahf
pop
sub
sbb
ss
sub
dec
movsb
das
pop
jae
or
insl
mov
fdivrs
or
cmpsb
insb
pop
inc
repnz
js
jle
inc
inc
das
pop
mov
fisttps
aam
push
inc
xchg
mov
dec
sbb
cltd
cmp
push
push
adc
bswap
ret
jmp
ja
pop
push
jbe
je
adc
jle
jne
hlt
mov
lret
sub
adc
pop
out
push
cltd
push
fisttpl
xlat
fs
lods
adc
dec
enter
or
dec
aaa
lea
adc
ljmp
mov
xor
sbb
adc
mov
jle
cmp
sbb
push
mov
shlb
gs
ja,pt
fs
inc
aam
cmp
sub
inc
add
adc
stos
ljmp
xchg
nop
addr16
leave
insl
lcall
jno
cmp
sbb
js
xchg
push
stos
outsb
popf
pop
inc
xlat
push
outsl
lret
int3
stos
push
mov
fisttpl
lods
lahf
mov
cltd
ljmp
pop
mov
jmp
inc
dec
xchg
iret
popf
popa
mov
pop
xchg
into
or
enter
jecxz
mov
data16
outsb
push
and
mov
push
arpl
mul
mov
pop
mov
jmp
pushl
inc
out
ss
xor
xchg
mov
xchg
dec
add
imull
jne
dec
aam
pusha
testb
orl
jmp
aaa
adc
xor
inc
popa
xchg
jne
and
mov
pop
cmc
cmp
mov
xchg
outsb
sbb
jbe
test
pushf
pop
mov
imul
addr16
lahf
ds
dec
rcr
push
add
push
xchg
in
dec
outsl
sub
or
push
hlt
popf
sub
pusha
outsl
repz
repnz
push
mov
repz
les
push
nop
push
or
mov
mov
pop
jl
outsb
fidivrs
and
loope
lods
mov
in
inc
xchg
push
or
adc
sub
inc
mov
lods
xor
xor
lret
lods
adc
repz
xchg
add
insl
fwait
out
scas
mov
into
out
lcall
mov
mov
pushf
fstl
arpl
sub
push
push
rcll
adc
lock
insb
adc
xor
fildll
sahf
ja
popa
sub
std
or
sub
mov
add
pop
sahf
stc
rol
pop
xchg
mov
and
cmc
sbbb
arpl
mov
pop
lret
mov
xchg
sub
movsl
addb
ja
mov
or
push
or
lret
dec
and
cmp
imul
aad
loopne
mov
out
pop
xor
jp
push
sbb
fbld
ficoms
dec
lds
jl
mov
sbb
leave
mov
call
cmp
fdivrs
adc
cmp
xchg
jne
lock
stos
aam
push
mov
enter
and
xchg
pop
movsl
and
js
ret
sbb
aad
xor
jle
roll
jne
aam
push
cmp
jne
test
jecxz
xchg
push
into
sbb
scas
mov
pop
inc
jge
push
sub
idivl
lods
and
out
dec
inc
add
jne
cli
pop
in
adc
and
xchg
sub
mov
sub
es
xor
push
pushf
in
repz
jmp
imul
pop
inc
jb,pn
popa
popf
imul
xor
xor
and
lods
xor
lret
xor
lods
or
pop
xor
lcall
lret
inc
pop
iret
mov
jbe
or
js
stos
inc
pop
or
dec
inc
push
stos
mov
push
or
inc
inc
imul
pop
pop
lds
pop
cmp
mov
cmp
lret
nop
inc
fcoml
xchg
push
push
loope
cmp
std
mov
mov
sti
jbe
mov
add
mov
inc
mov
add
shlb
lods
or
pop
jl
mov
inc
or
pop
pop
stos
pop
gs
add
cmc
jo
fists
dec
push
sbb
loope
push
lahf
inc
pusha
cmp
icebp
xchg
sub
push
lret
clc
and
or
scas
cltd
aad
xchg
dec
xchg
lea
mov
cmp
xchg
testb
outsl
sti
push
push
lods
int3
iret
xchg
add
pop
xor
jno
xor
push
pop
pop
add
test
inc
call
push
imul
jmp
lahf
push
xor
sbb
shll
pop
xchg
dec
jns
fiaddl
stos
ret
imul
push
lret
jae
insl
pusha
pop
push
fstpl
xor
in
xchg
nop
cmp
xor
scas
movsl
fs
jbe
inc
xchg
stc
leave
lret
dec
pushw
mov
les
cwtl
test
xchg
lock
shrb
in
xchg
fstpl
sahf
lods
xchg
das
sub
stos
rolb
leave
sub
call
jb
out
xchg
pop
pop
out
cltd
or
test
scas
lcall
sub
push
mov
push
hlt
adc
clc
mov
sbb
cli
mov
arpl
jmp
int3
popa
push
mov
mov
arpl
lret
sbbl
shrl
push
sti
mov
subl
lods
lods
ss
sbb
jg
imul
push
aad
aas
adc
xchg
fisubs
sub
movsb
int3
cmc
je
lods
xor
dec
popf
gs
pop
pop
bound
xchg
dec
mov
outsw
mov
lahf
and
aaa
ret
dec
enter
mov
jno
xchg
cs
outsb
shll
adc
insb
shrl
aam
cmp
fisubs
fdivl
or
add
hlt
fcoms
sbb
cmp
jmp
inc
push
adc
icebp
loope
inc
mov
ficomps
into
shlb
fdivs
jmp
aaa
pop
dec
sub
pop
out
das
add
and
repz
das
jmp
sahf
test
lea
scas
imul
out
mov
bound
push
add
inc
mov
jg
out
sub
cmpsb
mov
orb
jns
mov
in
add
add
push
jp
push
inc
sbb
push
ss
clc
shl
sub
cmp
xchg
mov
add
pop
jae
cld
dec
test
das
cli
ret
mov
or
das
xor
aam
jnp
cmp
shlb
and
sub
sahf
sbb
cmp
dec
inc
lret
cmp
mov
in
rorl
and
test
or
mov
jecxz
and
jle
cmpl
cli
popa
inc
inc
sbb
int3
mov
add
fisubs
or
mov
int3
movswl
pop
xor
mov
mov
lea
mov
mov
loop
gs
fisttpl
imul
mov
pop
xchg
inc
loopne
fnsave
cld
push
jecxz
inc
add
and
mov
data16
inc
cmpsb
pop
idiv
mov
and
into
mov
mov
shll
or
bound
rol
jl
aad
ds
sbb
inc
lea
xchg
loopne
jmp
mov
mov
fs
push
mov
sahf
shll
out
adc
jp
jecxz
fcompl
std
enter
sub
or
mov
sti
mov
mov
iret
fbstp
ljmp
mov
push
mov
or
mov
and
leave
dec
ja
adc
pushf
sahf
jae
xchg
das
mulb
int
repnz
aas
xor
pushw
fiaddl
leave
lea
cmp
sbbl
dec
mov
push
push
mov
push
cwtl
sahf
mov
ret
fisttpl
lahf
frstor
ret
cmp
aaa
and
or
outsl
and
fstpt
je
movsb
nop
insl
mov
jp
pop
dec
jge
rcr
lods
xchg
ficoms
jns
jo
push
jge
in
ds
xchg
rorl
xor
movsl
cmpsl
fwait
xchg
mov
inc
adc
leave
js
ret
and
fwait
sti
and
sub
mov
out
lcall
or
dec
test
fldcw
jle
gs
xchg
call
xchg
fidivs
shll
testl
test
out
mov
nop
push
cld
andb
adc
loopne
mov
leave
andl
mov
out
and
into
aad
loop
sti
xlat
cs
pop
pop
hlt
jne
sbb
dec
push
nop
subb
in
pop
adc
mov
ljmp
imul
and
daa
ljmp
leave
fsts
out
inc
push
rcrb
dec
ret
inc
int
in
adc
outsb
pop
push
lahf
inc
xlat
push
xchg
lock
jns
cmp
pop
xchg
inc
fs
inc
enter
mov
and
in
sbbl
mov
xor
push
aad
sub
mov
andb
lahf
inc
cmpsl
dec
data16
mov
add
std
or
inc
xor
inc
test
pop
inc
and
shrb
jne
inc
mov
dec
inc
call
aam
or
pop
inc
xor
aaa
adcl
ret
lret
in
inc
xchg
sub
in
stc
mov
imul
pushf
add
pop
cwtl
cmp
xor
sub
add
mov
or
and
in
mov
or
push
mov
stos
mov
insb
and
add
or
xchg
cltd
or
dec
push
inc
add
les
lds
mov
mov
sbb
idivl
jle
bnd
xor
mov
xor
inc
xchg
jnp
pop
mov
scas
clc
or
jmp
rolb
repnz
sub
imul
clc
xor
or
das
in
mov
mov
fsubrl
lcall
xchg
roll
and
int
fldenv
mov
ja
in
cmp
pusha
mov
imul
or
popf
idiv
mov
sbb
inc
xor
and
mov
ret
pop
sub
and
xchg
loopne
movsl
sahf
or
fisttpl
pushf
scas
add
cld
scas
es
es
rcl
cmpsb
shlb
mov
ja
fmuls
out
and
in
pusha
fisttps
shl
fs
rcr
clc
mov
xor
icebp
fcmovnu
icebp
imul
xlat
lret
mov
cmp
iret
es
in
lds
dec
popf
mov
dec
scas
sbbl
pop
add
pop
mov
xlat
xchg
inc
jne
add
mov
arpl
mov
jmp
je
mov
inc
push
outsb
sbb
rcrb
sbb
mov
lcall
lea
popa
xchg
xchg
out
jge
or
xlat
ljmp
into
lahf
sbb
into
inc
pop
loope
sbb
mov
int3
lods
imul
mov
out
call
or
divl
jle
pop
sarl
jbe
add
add
sbb
in
movsl
les
add
jno
mov
push
jae
arpl
shrb
loopne
iret
into
pop
jge
ds
and
shll
test
out
jl
enter
pop
cmp
ret
stos
xlat
and
pop
sbb
and
data16
les
lea
pop
cmp
jno
cmc
flds
inc
outsl
aas
int
ss
ja
cmp
lea
inc
push
in
pop
xorb
adc
jne
sub
mov
lret
jmp
push
loop
push
pushf
mov
adcl
add
push
add
dec
mov
enter
data16
xor
or
xchg
stos
push
js
jecxz
fisttps
mov
dec
mov
inc
jne
scas
lds
outsl
loope
pushf
clc
pop
adc
lods
cs
fwait
js
in
mov
xchg
btr
mov
xchg
mov
ret
lods
jmp
mov
loopne
fwait
aad
cwtl
stos
dec
inc
push
mov
ja
ficomps
lcall
icebp
sbb
cmc
hlt
fs
shlb
jge
pop
imul
pushf
pop
jle
xchg
popf
mov
mov
sub
adc
push
fldt
push
outsl
and
call
sub
arpl
icebp
sbb
pushf
push
adc
and
ss
jmp
or
iret
xlat
dec
dec
inc
pushl
jl
jns
sbb
nop
daa
ljmp
je
or
in
lods
inc
or
mov
inc
pop
aaa
mov
mov
adc
outsl
insl
push
int3
rcll
out
daa
std
insb
aad
repz
mov
mov
inc
lock
cld
mov
cmp
shr
int3
xor
mov
and
jge
lret
xchg
sbb
cld
inc
or
repnz
mov
xor
fbld
adc
mov
stc
jae
and
xor
jl
xlat
ss
and
mov
mov
nop
jge
mov
xlat
aad
nop
lret
mov
cli
mov
add
mov
sub
inc
lret
adc
popf
mov
xchg
clc
mov
sub
cmpsb
or
fistl
ljmp
dec
push
mov
jne
mov
push
shrb
int3
test
rclb
mov
inc
mov
andb
and
or
sub
sti
test
outsl
sub
sub
jg
push
add
push
fwait
ja
cmp
movsb
push
inc
jg
je
lds
mov
shll
add
call
sub
push
or
stos
add
xor
call
jp
mov
xchg
out
fstp
les
inc
mov
push
cmpsl
push
jmp
pop
ljmp
mov
xchg
repz
jecxz
adc
mov
lods
fbstp
mov
sub
sub
lea
subb
pop
ficoml
jbe
out
or
push
lret
cmp
int3
idivl
xor
sbb
ss
pop
movsl
xor
int3
cmpsl
xor
aaa
iret
std
inc
fadd
jae
nop
add
cmc
mov
ljmp
and
dec
push
shlb
dec
jno
in
stos
add
movsl
roll
out
mov
xor
dec
cmc
ficomps
popa
xchg
out
out
rorb
adc
pop
cmp
dec
sub
neg
sarl
fimuls
or
cmpsl
mov
mov
inc
int3
mov
js
lds
pop
lock
int
leave
repz
pop
xchg
dec
ret
es
mov
xor
push
test
jns
adc
fwait
aas
loop
push
lock
sbb
xchg
cmpsb
inc
dec
xchg
inc
into
xor
push
test
pop
pushf
sbbb
adc
cld
push
imul
out
sub
and
into
pusha
and
mov
scas
je
sbb
orb
jno
mov
lock
ljmp
mov
outsb
push
xchg
dec
mov
pusha
cld
mov
jl
daa
jnp
xchg
movsl
cmc
mov
sub
scas
pop
cmp
dec
int3
out
pop
cmpb
mov
push
sub
lret
stos
add
pop
ss
add
add
sar
stos
cmpsb
and
dec
xchg
adcb
add
rclb
adcb
inc
dec
arpl
rcl
bound
xchg
push
data16
or
or
in
int3
and
stos
dec
insb
idivl
jae
and
in
push
test
int
mov
xlat
lods
loop
cmp
adc
jge
push
dec
cld
sti
cmp
push
and
add
fistl
inc
jge
daa
into
mov
into
into
push
sarb
mov
aad
and
aam
insb
addl
sarb
movd
outsb
dec
bswap
pop
bound
jge
pushf
mov
cmp
decb
pcmpgtw
test
cltd
fiadds
cmpl
cmpsb
xchg
jo
dec
sub
cmc
jo
dec
popf
ss
xchg
fwait
adc
pop
outsb
or
andb
daa
arpl
jp
pop
ss
jecxz
push
aam
dec
dec
jp
rcr
jne
jno
test
mov
mov
xor
lods
inc
hlt
push
push
xchg
rcll
js
insb
mov
cwtl
out
sbb
ljmp
pop
cmp
int3
push
lret
push
in
in
test
test
sbb
xlat
sbb
in
adc
femms
stos
add
or
ljmp
inc
sti
push
mov
loope
fistpll
mov
xchg
mov
loop
scas
outsl
dec
and
in
test
cmpl
pop
fbstp
adc
push
mov
int3
jae
push
xor
xor
ficompl
push
mov
das
add
cmp
jmp
lods
inc
aam
xchg
jns
cmp
push
aam
cmp
je
cld
mov
adc
lahf
in
imul
neg
jb
mov
pop
dec
sahf
hlt
dec
mov
sub
test
sbb
add
subb
sbb
js
imul
dec
dec
and
cmp
arpl
in
xor
xchg
inc
fcmovnb
xchg
hlt
test
pushf
cs
xor
cwtl
pop
push
loop
nop
icebp
pop
jg
mov
outsb
push
in
pop
jno
fistps
sbb
mov
xchg
lret
inc
or
outsl
sarb
xchg
add
cmpsl
ja
nop
addr16
subl
dec
and
sub
mov
adc
stos
xchg
cmp
iret
scas
imul
xlat
rcr
mov
stc
sti
jno
ss
aas
in
mov
sbb
mov
push
mov
xor
mov
mov
in
and
mov
mov
sbb
sti
outsb
hlt
bound
adc
or
or
das
and
stos
repz
ljmp
js
dec
js
mov
adc
out
decb
mov
data16
pop
jmp
int3
jmp
sbb
adc
mov
pop
rcrl
and
inc
jns
testb
cltd
xor
dec
jo
cmc
xlat
push
xor
push
jns
push
fnstsw
sub
lods
fisttpll
pop
add
jmp
adc
cmp
test
xchg
inc
mov
in
loopne
repz
repz
jecxz
jmp
cmc
mov
and
sbb
and
icebp
scas
sbb
in
insl
and
aas
fmuls
nop
push
rol
mov
add
cmp
pcmpgtw
cmc
outsb
call
sbb
enter
pop
sub
jl
test
pop
jno
test
subl
pop
push
mov
push
sbb
lds
push
fmull
mov
les
pop
mov
push
fsts
aad
outsb
lods
mov
jp
xor
aaa
inc
gs
lods
and
lea
fwait
ljmp
std
sbb
push
jns
fimuls
stos
adc
pop
cmp
loope
inc
std
jle
sub
clc
js
movsb
loope
arpl
pop
imull
mov
cmp
cmpsl
aad
sbb
push
push
pop
dec
or
mov
xchg
jb,pn
fs
decl
inc
and
sti
xor
movsl
test
inc
iret
cmp
and
sbb
in
xchg
cmp
mov
mov
lahf
jbe
shl
adc
pop
push
faddl
setns
cmp
sti
push
xor
mov
stos
xchg
cmp
aaa
fdivs
imul
pushf
and
inc
pop
adc
pop
inc
adc
dec
cli
cmpl
adc
pop
arpl
jns
lea
scas
popa
dec
insl
test
xchg
inc
inc
push
movsb
sub
fildl
pushf
je
mov
popf
mov
pop
dec
jl
adc
xlat
mov
sub
rclb
loope
adc
sub
icebp
cltd
je
std
cmc
sub
lods
mov
cmp
push
dec
fdivs
inc
xchg
and
mov
xor
stos
sub
ds
sbb
hlt
das
outsl
pop
loop
xchg
dec
xchg
dec
lea
xlat
es
pop
seta
aaa
scas
push
repz
sub
or
scas
int
aad
dec
cmpl
pop
add
dec
cmp
cmc
inc
dec
inc
fdivrl
xor
movsb
loope
mov
repz
xchg
dec
fcmovnb
jp
mov
out
add
push
stos
jecxz
dec
pop
cmp
stc
fldt
jg
stc
arpl
cli
sub
es
ljmp
mov
mov
sahf
imull
inc
es
cmp
inc
push
or
jnp
or
enter
scas
ss
ja
sahf
data16
dec
mov
jno
mov
mov
fldpi
sbb
xor
repz
rcll
fst
lcall
dec
cli
loope
pop
lahf
pusha
xchg
addl
das
js
adc
mov
mov
das
ret
push
lahf
lock
jp
rcrb
mov
add
js
aaa
xchg
mov
ss
mov
xchg
loopne
cmp
cwtl
mov
mov
xor
add
cmpsb
shlb
out
out
loopne
mov
mov
mov
pop
loopew,pn
loope
icebp
adc
jnp
cmp
push
pop
lds
xchg
ds
jle
in
jnp
sbbb
mov
xchg
jbe
mov
or
stos
add
ja
popa
sbb
pusha
and
add
mov
sub
repnz
rcll
mov
mov
lahf
lock
xchg
sub
icebp
push
fiaddl
jecxz
imul
jns
xacquire
push
xchg
xchg
fcomps
lock
or
imul
lret
stos
js
pusha
mov
lea
int3
mov
leave
lahf
push
mov
and
xchg
pop
cmp
outsl
iret
int3
sub
fdivs
fmuls
shlb
les
movsb
dec
add
repz
xchg
xchg
shll
into
aaa
xchg
mov
mov
std
hlt
lret
sahf
jno
push
pop
test
xchg
notl
popa
into
loope
pushf
or
mov
mov
inc
adc
adc
fnstsw
das
mov
or
mov
hlt
adc
ljmp
lcall
xchg
stos
xlat
or
cmp
dec
dec
pop
cmp
adc
or
mov
push
push
xchg
outsb
cmp
fimuls
jbe
in
shll
lea
xchg
or
adc
xor
andb
sbb
lock
or
sub
faddp
stos
mov
mov
es
sbb
fisubrl
psrad
pop
add
loopne
push
jo
ss
in
mov
les
mov
movsb
xor
xchg
je
mov
pop
xchg
shlb
pop
adcb
xlat
jnp
ret
in
mov
loope
lahf
cld
jne
or
and
incl
scas
push
outsb
jg
ret
xchg
jmp
xlat
fdiv
sub
das
sti
shr
jle
xchg
mov
adc
xor
adc
cwtl
pop
shll
xchg
inc
cmp
mov
sti
repnz
imul
push
push
stos
or
xchg
jbe
adc
sbb
aaa
adc
cli
jb
push
ret
repz
add
in
or
or
stos
push
cs
jle
push
pop
pop
insl
adc
add
lea
lcall
test
xor
xor
sbb
ret
mov
jp
rcll
aam
sbb
push
icebp
or
dec
sub
mov
cmp
jo
xor
addb
clc
imul
lods
rcrb
dec
fs
xor
xlat
and
stc
push
test
xchg
xor
mov
int3
clc
pop
cmpsb
nop
fwait
insl
outsb
in
fsubs
inc
es
add
addr16
mov
inc
cmp
pop
sub
add
add
mov
adc
xlat
out
xchg
xor
movsl
and
loop
idivb
fidivl
push
stos
push
inc
sbb
xor
iret
xor
repnz
add
loope
push
fstl
mov
out
dec
and
fidivs
pop
out
xlat
dec
test
rcrb
dec
insb
hlt
pop
cmp
sbb
inc
dec
es
xor
xlat
jecxz
sbb
movsl
sbb
push
inc
xchg
jmp
inc
cmpsb
add
nop
scas
cmp
std
iret
mov
sbb
lds
sti
dec
mov
pop
cltd
xor
mov
aas
sti
aam
mov
fsts
push
xor
flds
inc
add
cmp
int3
icebp
pop
sub
pslld
cmp
dec
sub
js
insl
push
in
dec
dec
add
dec
daa
fs
stos
test
cmp
mov
mov
pop
aas
ret
test
mov
sbb
inc
test
cmp
cmp
sub
jle
sbb
stc
aad
xor
xchg
sahf
sahf
push
xchg
fcomi
jbe
fcmovb
mov
inc
mov
or
ret
mov
stos
inc
pop
shl
sub
cmc
addr16
iret
xor
pop
stos
and
jg
fcoml
sbb
enter
or
xor
sub
mov
int
mov
movl
adc
sub
lods
enter
test
jnp
jl
js
inc
in
or
mov
or
sbb
or
enter
mov
das
push
adc
and
stc
stos
jmp
jp
mov
push
dec
and
lret
push
movsl
and
lcall
sbb
sub
repz
pop
clc
daa
flds
fbld
lods
xchg
js
jno
lods
inc
dec
imul
mov
scas
push
aas
mov
mov
xchg
inc
jns
iret
cmp
add
adc
mov
ftst
cmpl
mov
jmp
push
test
jl
ror
mov
je
xchg
push
dec
or
jmp
pop
mov
or
lcall
jp
inc
mov
sbb
push
sbb
inc
cmp
in
add
mov
fsubrl
fstl
pop
mov
aad
push
push
jo
loop
sbb
inc
sub
out
ficomps
push
jbe
jo
xor
push
adc
dec
push
lcall
jnp
cmp
pop
inc
fisubrl
xchg
dec
ret
ret
xor
cli
scas
or
repnz
xchg
movb
cmp
jae
and
cmpl
inc
xor
mov
xchg
and
xor
mov
data16
mov
clc
ss
jp
add
cmp
addb
mov
xor
stc
mov
add
movsb
inc
imul
sbb
stos
push
loope,pt
pop
sub
dec
jns
push
jno
jge
pusha
dec
mov
scas
sbbb
cmp
leave
fidivrs
fidivrs
js
shr
inc
and
fbld
mov
mov
es
les
jp
dec
lea
or
sbb
lock
shrl
sub
pop
xor
jp
shll
fsubs
sub
jecxz
fistl
inc
xchg
in
hlt
cmpsl
push
aad
xchg
push
push
add
dec
outsb
negl
lods
pop
gs
sub
mov
sbbb
rorb
decl
cmp
clc
adc
rcl
or
jl
mov
mov
in
das
scas
and
pop
mov
hlt
mov
clc
push
repz
hlt
ret
clc
xchg
sbb
stos
jge
cmpsl
or
shrl
fnclex
mov
mov
ja
adc
out
flds
test
inc
mov
cmp
aad
mov
rorl
pop
pop
stos
scas
andb
shll
scas
lret
cs
xchg
mov
cld
lods
ret
inc
cmp
push
mov
or
mov
popa
xor
ja
sbb
mov
ret
out
in
lea
fmul
pop
stos
test
test
lods
repnz
adc
fnstsw
sti
in
lds
pop
cltd
adc
add
fwait
cmp
xchg
mov
sbb
pop
or
sahf
in
inc
add
push
sbb
mov
ret
or
adc
imul
xchg
lret
jecxz
es
cmp
or
fnstcw
lock
outsl
stos
pop
bound
pop
xchg
int3
mov
ljmp
cli
jns
pop
ljmp
ja
mov
mov
cld
popf
dec
xchg
sti
fcmovu
lock
xchg
xorl
ss
xor
inc
push
adc
mov
jl
dec
in
jbe
daa
add
test
repz
test
je
sti
fldt
insl
into
and
inc
movsl
pop
cltd
push
lahf
and
lahf
cmp
add
add
cmp
xchg
add
lret
mov
sbb
dec
gs
adc
cli
mov
lds
ja
mov
fsts
xchg
mov
jno
mov
dec
cmpsl
stos
cltd
jmp
test
pop
cli
cltd
adc
aaa
pop
in
xchg
fwait
int3
addr16
fidivs
pop
or
push
jne
insl
cmp
push
movsl
xchg
leave
inc
jns
add
cltd
es
jge
and
add
add
cmp
pop
je
pop
cmpsl
push
add
mov
arpl
or
mov
sub
dec
inc
and
sub
inc
push
jmp
sub
stos
jp
ljmp
xchg
and
fadds
clc
add
test
mov
dec
inc
sbb
dec
add
pushf
cmp
jmp
inc
and
dec
add
arpl
inc
scas
pop
cmp
dec
sahf
and
jge
and
xchg
adc
mov
sbb
push
xchg
in
pop
mov
sbbb
mov
mov
cmc
inc
lahf
mov
mov
push
lcall
in
pop
bound
outsl
push
xchg
xor
scas
incb
mov
mov
and
daa
lds
fnsave
lock
loope
dec
fstl
gs
ja
mov
addr16
and
lret
loopne
push
loop
cmc
mov
notl
and
lock
mov
out
clc
mov
xchg
pop
xlat
and
push
out
out
xor
adc
shll
jno
in
pushf
loope
push
push
sti
imul
and
push
lds
pop
xchg
pop
jge
mov
rclb
ret
enter
ds
sbb
aad
loop
and
rcr
sub
push
test
xor
mov
or
in
adc
iret
stos
sbb
push
leave
push
aaa
mov
mov
or
push
fsubrl
paddd
or
fcomi
mov
and
mov
das
jnp
imul
inc
xchg
call
bound
scas
push
jle
adc
push
jp
lahf
sub
iret
sahf
daa
insb
mov
xlat
punpckldq
lahf
inc
push
imul
mov
hlt
mov
sub
les
dec
adc
in
push
shll
mov
adc
pop
mov
shrb
insl
xchg
dec
divl
stc
sbb
outsl
shr
dec
inc
dec
and
loope
lea
cs
dec
mov
cltd
mov
jb
jp
xchg
fisubs
in
nop
lds
or
add
and
and
iret
pop
jb
inc
dec
pop
in
in
mov
sbbb
mov
mov
cltd
push
mov
lods
in
jl
repz
or
or
mov
insl
mov
mov
bsf
ror
or
scas
pop
sub
mov
or
dec
fistpll
lret
push
gs
adc
adc
loope
push
scas
lock
sbb
jle
movsl
push
rorb
mov
stos
out
pop
xchg
and
or
adc
int
fld
imul
subb
loopne
add
mov
hlt
sbb
inc
aaa
lods
mov
scas
sbb
push
cmp
fwait
jmp
cmp
data16
sbb
sub
push
mov
js
mov
jnp
push
sub
cmpsl
lcall
les
or
and
xchg
mov
adc
insb
frstor
mov
sub
mov
sub
xlat
rep
and
mov
push
lods
sbb
sbb
mov
lret
cmpsl
pop
and
fidivl
mov
pop
pop
mov
ret
push
xor
sbb
mov
test
push
mov
test
dec
gs
leave
cwtl
inc
insb
inc
jnp
and
push
call
call
lods
xor
jnp
lds
xchg
push
pop
cmp
movsl
rcll
sub
mov
test
es
out
loop
sub
movl
leave
push
pop
addl
addr16
shll
mov
stos
mov
push
leave
and
mov
cmp
shrd
in
dec
dec
pop
or
fstpt
push
dec
movsb
pop
add
in
adc
das
or
scas
arpl
cmp
or
aad
mov
add
xor
lock
adc
pop
je
pop
sahf
jl
cs
add
hlt
and
jl
es
in
mov
fsubr
aas
xchg
rorb
mov
jnp
mov
add
scas
add
dec
fimuls
mov
sub
push
push
push
jb
test
xor
bound
imul
rolb
stos
adc
stc
inc
mov
popa
cmp
fsubl
xlat
rorb
jle
dec
push
sbb
xchg
jbe
mov
inc
pop
test
mov
stos
ret
mov
pop
and
dec
in
cmc
sub
add
fwait
ja
outsl
mov
cmp
or
xchg
data16
rorb
mov
xor
sbb
adc
int3
dec
sbb
sbb
orl
outsl
imul
cld
and
insl
aad
mov
fs
sbb
adc
inc
add
ret
mov
and
inc
push
push
jmp
cwtl
lret
inc
lea
mov
cmc
imul
sub
mov
ljmp
mov
adc
int
and
mov
shr
jnp
hlt
outsl
jbe
xor
or
ss
sub
dec
insb
in
scas
stos
out
pop
adc
sbb
sbb
icebp
mov
or
daa
aad
in
js
imul
mov
add
imul
rclb
push
insb
pop
jb
pop
jae
in
mov
cmp
mov
pushf
pop
jmp
shr
push
xchg
andl
mov
add
or
push
stc
mov
xor
lahf
mov
mov
xor
movsb
mov
shrb
lds
popf
jmp
inc
es
sbb
mov
sub
jp
sub
shrl
scas
jno
dec
mov
mov
nop
icebp
dec
jo
rcr
cltd
mov
aad
inc
and
pop
xor
push
jecxz
test
enter
xchg
mov
xor
push
push
xchg
and
adc
imul
test
xchg
adc
sbb
dec
inc
insl
adc
ss
stos
into
sub
scas
dec
insl
adc
mov
aad
test
push
jg
mov
mov
dec
xor
jg
insb
cltd
xchg
es
imul
mov
nop
xchg
dec
xchg
lret
mov
ficompl
insb
sti
cwtl
mov
push
pop
sbb
data16
jne
dec
shl
sub
imul
xlat
mov
push
add
push
cmp
test
ret
aas
out
mov
jnp
out
dec
jg
mov
push
cmp
cmc
xchg
or
stos
pop
or
ljmp
sahf
into
imul
jl
popa
sub
push
cmp
stos
mov
jge
mov
nop
pop
xorl
mov
ljmp
pop
xchg
dec
in
jne
dec
test
loope
clc
sub
inc
push
mov
mov
fcmovb
or
out
push
pop
adc
mov
adc
dec
adc
in
cmp
push
leave
xchg
sbb
adc
jle
outsl
jmp
ret
xor
cwtl
push
push
out
adc
movsb
add
dec
movsl
pop
es
pop
mov
fcomip
jb
out
mul
mov
rep
adc
dec
cmpsb
or
xor
mov
mov
lahf
pop
ss
dec
xchg
cmpsb
sub
push
insb
push
xchg
es
jg
or
insl
jmp
mov
test
pop
out
std
adc
arpl
aas
jo
sbb
sub
ret
add
hlt
mov
mov
adc
inc
mov
sub
lods
dec
inc
mov
bsr
and
and
andl
mov
push
cmp
push
test
mov
push
push
call
adc
test
jmp
jmp
xchg
ja
pop
and
sahf
mov
pop
and
ss
cmp
enter
lret
int
stc
test
mov
xor
mov
xor
jae
pop
pop
jg
sti
out
repnz
sbb
pop
sub
fldenv
imul
sub
cmp
or
inc
push
or
dec
cli
fmul
repnz
xor
mov
adc
movsl
jne
push
pop
lods
out
mov
in
rorl
stos
adc
hlt
mov
in
cmp
inc
sahf
and
push
dec
imul
mov
ljmp
pop
out
pop
mov
adc
roll
fstps
in
mov
daa
xorb
and
shll
fsubr
lods
jne
pusha
dec
sub
mov
imul
mov
stos
or
adc
pop
push
xor
pushf
leave
shlb
icebp
ss
jp
mov
jns
divl
mov
dec
fmulp
in
mov
mov
loopne
pop
call
mov
aas
push
addr16
mov
ror
inc
in
and
pop
xchg
push
movsb
cmp
cwtl
aad
mov
fs
sub
mov
lods
cmpsb
scas
mov
js
mov
popa
jmp
add
add
push
dec
nop
movsb
cmp
rorb
push
xchg
or
ret
sub
in
xchg
and
jp
mov
lret
pop
insl
int3
sbb
lahf
add
push
pop
fmul
xchg
clc
sub
aas
loope
cmp
add
lahf
scas
popl
filds
pop
cmpsl
insl
mov
out
jg
adc
dec
lds
adc
lods
inc
add
stc
adc
sub
push
xchg
pushf
add
adc
sahf
mov
movsb
shlb
out
out
cs
stos
add
stc
adc
adc
shlb
test
shll
stos
add
popf
xor
inc
lds
fisubs
inc
aas
inc
rol
fidivl
mov
push
add
xchg
adc
and
out
mov
out
loopne
or
popa
jecxz
push
ss
push
inc
adc
adc
repnz
enter
fstpl
sti
fstpl
enter
roll
push
adc
fildl
xlat
pop
outsb
scas
rep
xor
nop
sub
jae
inc
out
aad
cmp
stos
fimull
push
lret
frndint
jnp
test
stos
xor
lods
cwtl
rcl
mov
loop
dec
sbb
xchg
jb
or
pop
mov
loopne
popf
incl
xor
push
aas
adc
dec
scas
push
or
ret
pop
xchg
fwait
mov
xlat
dec
std
fwait
int
lahf
jmp
add
rcl
add
ljmp
sub
test
dec
lea
sbb
loope
movsl
cmp
bound
lods
in
call
js
jmp
sub
inc
sbb
xchg
imul
and
paddsb
sbb
movsl
mov
daa
loopne
aas
sbb
mov
xor
mov
addb
cmp
push
hlt
addr16
sbb
mov
sbb
sti
push
push
mov
data16
jg
pop
xor
push
jl
dec
xchg
adc
pop
dec
lret
aas
insl
cmpb
push
test
call
arpl
xlat
in
stc
iret
jge
add
jmp
jmp
jmp
adc
add
or
fimull
mov
dec
stos
ss
lods
fbld
inc
mov
sub
scas
sub
movsl
mov
outsb
cs
mov
test
mov
mov
cld
icebp
push
out
push
les
pop
test
xor
cli
inc
dec
cmp
push
imul
mov
dec
inc
mov
and
and
xor
pop
fcomi
out
push
pop
imul
cmp
fldl
sub
xor
iret
add
addl
push
cmp
daa
and
into
stc
out
jmp
rcrb
fdivrs
sbb
sub
scas
dec
ss
inc
xchg
in
push
fbld
clc
int3
lret
pop
sub
aam
or
sbbb
cli
shll
sbb
pop
ljmp
loopne
xor
lds
lods
lods
fdivrl
or
cli
rcrl
mov
sbb
ret
insb
sbb
xchg
cmp
out
addr16
mov
sub
pop
int3
iret
arpl
ljmp
pushf
dec
fnstcw
mov
sub
adc
and
push
idivb
xchg
hlt
pop
jle
outsb
xor
das
mov
mov
scas
pop
mov
subb
es
sub
sub
pop
inc
ret
lahf
xor
or
icebp
xlat
outsb
mov
fadds
test
dec
cmpsb
mov
mov
and
push
jecxz
stos
or
int3
pop
into
sbb
fmul
in
sub
dec
mov
mov
push
outsl
lock
sti
add
sub
nop
les
mov
pushf
jl
mov
lock
pop
mov
mov
cmp
subb
cli
flds
stc
pop
inc
rcrb
or
js
adc
jecxz
mov
insb
jb
ja
sti
push
fdivl
inc
lods
xor
add
jns
scas
pop
shl
sbb
add
lods
add
and
pusha
sti
push
add
out
push
add
xor
nop
ficompl
in
xchg
pop
pop
mov
daa
nop
push
adc
pop
lock
gs
adc
lret
pop
xchg
jl
rcll
insb
push
loopne
xchg
js
mov
decb
out
test
mov
cmpsl
and
xchg
sub
test
jne
or
xchg
sub
pop
lret
cmp
adc
mov
adc
push
jl
cli
pusha
xchg
lret
jge
test
lods
cmpb
lahf
push
notb
and
rclb
cmp
and
addr16
js
mov
stos
xchg
mov
out
inc
adc
mov
cli
jl
pop
pop
jge
mov
jle
dec
push
lret
or
mov
dec
inc
mov
sti
rcrb
inc
outsl
add
lcall
pop
or
pop
ss
mov
mov
cmp
ja
scas
jp
mov
pop
repz
xchg
xchg
cli
mov
inc
dec
jp
pop
sub
stos
addr16
mov
je
std
ss
popf
push
xchg
sti
mov
xchg
in
or
add
mov
push
fiadds
xor
enter
mov
cmc
mov
inc
xor
mov
and
cwtl
inc
add
adc
dec
nop
cmp
movsb
cs
insb
test
inc
movsb
xchg
mov
push
inc
xor
inc
cmpsb
aam
inc
mov
and
in
leave
or
mov
push
adc
jno,pt
arpl
jg
imul
mov
lods
dec
xchg
mov
clc
stc
push
orb
jmp
mov
jns
pop
subb
mov
mov
inc
mov
push
cmp
inc
pop
nop
and
hlt
fcmovu
jbe
lret
pop
lods
push
enter
pop
xor
pop
or
sbbl
dec
or
daa
stos
mov
mov
sahf
inc
ja
mov
fidivrs
lods
gs
and
inc
test
and
lods
dec
mov
add
jmp
dec
push
lods
jno
cmp
pusha
pop
mov
mov
jmp
lods
ret
jne
mov
dec
push
rolb
out
in
cltd
pop
push
cmpsb
fldenv
pop
fbstp
scas
popa
inc
ret
data16
dec
aam
rolb
call
js
mov
pop
pop
incl
lock
mov
sub
mov
xor
aaa
inc
rorb
xlat
push
loope
add
addr16
and
mov
add
or
pop
push
dec
and
sub
xorb
lcall
jnp,pn
pop
jge
cs
mov
xchg
and
sti
lcall
inc
aas
mov
jb
sarl
jecxz
rorl
rorb
ljmp
fadd
xchg
adc
ror
pop
jns
xchg
xor
inc
pop
push
je
jle
jnp
cmp
cmp
ds
sub
fcmovnbe
mov
outsb
jp,pn
icebp
dec
fldz
aas
mov
and
mov
mov
pushf
inc
scas
pop
sti
dec
cld
daa
aaa
xchg
cmp
scas
adc
fbstp
xchg
in
pushf
mov
arpl
outsb
fidivl
adc
js
and
push
push
clc
xchg
and
out
pop
stos
xor
cmp
mov
andl
loopne
rol
pop
or
popa
int
adc
adc
xchg
xchg
arpl
xchg
pushf
sbb
adc
or
enter
fists
aad
daa
push
xor
mov
hlt
js
ja
inc
je
and
pop
jbe
iret
pop
push
push
aas
or
xchg
insb
xor
repz
sub
jne
shrl
outsl
mov
adc
adc
data16
vpsrlw
test
movsb
jg
sbb
pop
test
add
test
scas
jo
or
push
testb
gs
cmp
data16
fs
xchg
sti
add
ds
movsbl
lret
cmpl
jg
jl
xchg
inc
int3
int3
push
cwtl
fisttps
adc
and
stc
adc
push
sbb
adc
mov
aad
mov
pop
arpl
enter
xor
pop
dec
add
cmpsl
iret
repz
imul
or
in
mov
jp
dec
mov
out
pop
test
xchg
pop
dec
add
nop/reserved
lds
xor
mov
adc
in
push
negl
dec
jae
mov
xchg
fsubrs
icebp
inc
ror
je
popf
mov
test
lods
std
dec
and
in
mov
pop
or
sbb
dec
xor
xchg
inc
mov
pop
pusha
rcl
cmc
andl
fwait
out
ljmp
xchg
fsubs
xchg
call
inc
jle
mov
jge
push
jp
and
ret
mov
pop
pop
loope
sbb
bts
dec
test
mov
outsb
jno
dec
sti
sub
cwtl
fdivrl
aam
mov
cmp
nop
mov
pop
addr16
comiss
enter
ds
rorl
lock
out
add
adc
fisubs
jnp
mov
dec
stos
mov
push
mov
or
loop
pusha
test
aad
xor
xlat
lret
jno
movsb
loop
xor
jnp
jbe
mov
ss
inc
insl
in
insl
cmc
test
imul
rcl
aaa
sar
pop
xor
and
into
out
cmp
jne
and
pop
lods
cmpsl
mov
arpl
ja
pop
stos
push
cmp
xchg
rorl
add
mov
je
fs
movsb
mov
mov
orl
cld
arpl
hlt
aam
xor
mov
dec
hlt
cmpsl
push
pop
mov
jb
push
imul
aad
inc
in
jle
mov
adc
fsubp
dec
mov
bound
in
inc
imul
push
mov
and
and
imul
push
pop
push
push
imul
inc
push
sbb
dec
mov
es
cmpsl
ret
mov
call
push
call
jnp
jns
xchg
cli
pop
jnp
push
insl
add
fs
movsl
mov
out
dec
fucomip
clc
outsb
lahf
jo
jne
addb
mov
inc
mov
out
sub
stc
pop
pop
inc
es
push
mov
mov
stos
iret
insb
insl
adc
mov
int3
loop
sub
dec
mov
imul
mov
xchg
inc
sbb
hlt
cmp
loopne
mov
push
lret
dec
aad
es
ljmp
add
or
outsb
shlb
cltd
dec
rorb
test
test
xor
gs
add
mov
mov
sbb
pop
jno
repz
test
scas
jns
jns
data16
and
into
or
enter
enter
jmp
jb
or
cltd
push
lods
cmpsb
push
pop
fs
inc
mov
mov
je
add
enter
xchg
ljmp
shl
mov
sbb
lods
ds
fnstenv
mov
movsb
and
es
fsubs
imul
int3
ljmp
xchg
in
dec
xchg
fnstcw
dec
aad
call
es
and
scas
jl
lock
scas
jnp
xchg
shll
icebp
cwtl
insl
insb
mov
insl
dec
int3
push
sti
stos
sbbb
orb
and
stc
pop
push
xchg
in
imul
imul
nopl
aam
push
lret
lret
push
sub
stos
mov
sarl
popa
push
jle
out
xor
adc
push
xchg
imul
lcall
xchg
imul
push
hlt
in
ds
lcall
vmwrite
ret
jo
mov
imul
adc
sub
fbld
into
or
adc
out
in
mov
sub
icebp
js
jecxz
test
outsb
xchg
mov
add
lcall
sub
push
aad
gs
sbb
aam
aaa
ficompl
pop
push
int3
stc
loop
lret
nop
jmp
insb
ja
jns
in
jge
inc
mov
xor
int3
and
outsb
cs
sbb
jmp
or
clc
les
aad
lods
aas
scas
pop
outsb
sbb
mov
adc
sahf
lahf
insl
daa
into
lock
test
subl
mov
rolb
sbb
in
pop
push
ror
inc
or
outsl
fbstp
sbb
mov
loop
add
hlt
decb
sbb
repnz
jmp
seta
adc
mov
in
push
fs
je
push
push
push
mov
lcall
mov
mov
sahf
ret
or
xor
xchg
or
fimuls
int3
push
jbe
pop
pop
out
gs
inc
inc
andl
popa
pop
sbb
lock
cli
xchg
cmp
ret
cmc
pushl
jmp
xchg
cmp
inc
fldcw
test
das
ljmp
dec
inc
daa
sbb
jg
out
in
cmp
pop
mov
into
mov
push
xor
sahf
and
hlt
jmp
adc
cmp
pop
or
add
loopne
lods
test
or
and
bound
lret
xor
faddl
fbstp
sub
das
adc
mov
loope
mov
inc
daa
mov
cmp
out
data16
and
cltd
sub
jmp
loope
test
cmp
add
jp
arpl
test
push
cmpsl
aaa
nop
je
jo
pop
dec
mov
xlat
mov
pop
push
or
jo
cmp
outsb
divb
mov
mov
fnsave
and
mov
xchg
loope
dec
stos
mov
and
imul
sub
movsb
pushl
orb
insl
rclb
jmp
xor
cmp
in
push
add
iret
shrb
mov
jno
mov
repz
sbb
cmp
rcrl
push
ret
rep
gs
jnp
cmpsb
or
outsb
notb
andl
inc
aaa
inc
movl
mov
fildl
lahf
xchg
inc
or
repz
pop
pop
or
dec
in
cli
mov
ss
mov
shl
push
movsl
add
jb
xchg
loope
xchg
scas
loope
sbb
and
into
sbbl
icebp
fs
inc
into
xchg
xchg
push
xchg
fs
jnp
out
in
gs
cmp
push
jbe
mov
push
fsubl
aas
jne
mov
shr
ss
lea
ret
sbb
pop
test
cltd
xchg
stos
pop
cmp
movsl
lds
int
popf
cmpb
mov
fmull
mov
frstpm(287
cmp
cmp
inc
and
dec
push
roll
fiaddl
lcall
or
std
repz
push
xchg
pop
jbe
fwait
sub
cmp
js
les
jge
lea
mov
xor
scas
cwtl
xor
pop
mov
call
fucomip
outsb
adc
xlat
idivl
adc
mov
cmp
jmp
lret
aaa
outsb
jmp
cwtl
in
pop
int3
mov
add
adc
out
xor
mov
xlat
pop
movsb
sub
sbb
bound
pop
inc
aaa
and
sub
and
cmpsb
cli
adc
sbb
enter
push
xchg
mov
inc
lcall
mov
mov
lahf
in
test
pusha
mov
and
sbb
jbe
clc
adc
xor
and
jns
mov
inc
fs
lods
inc
lods
xchg
jne
push
scas
mov
rorl
lret
test
or
or
ljmp
int3
inc
mov
push
rcrl
add
in
mov
mov
shrb
push
jle
cmp
fcoms
aaa
push
mov
cli
push
es
mov
cmp
or
jns
add
cmpb
out
in
push
aad
cmpsl
out
sbbb
sarb
inc
xor
mov
jo
fs
aad
push
xor
xor
and
in
outsl
adc
fadds
pop
jge
lcall
notb
pop
xchg
popf
arpl
cs
out
mov
fs
mov
jnp
mov
inc
test
inc
push
sub
repz
jp
mov
cmp
mov
cmp
sti
loope
popf
jg
fwait
sub
xchg
add
cmp
sbb
xchg
jno
les
lahf
jbe
sub
out
and
sub
cwtl
xchg
xchg
jns
ss
lock
ds
addr16
sub
icebp
sub
or
adc
addr16
lock
leave
push
lret
mov
xor
sbb
add
add
fdivrl
pop
jp
sbb
or
js
dec
incb
mov
or
pop
insl
insb
sbb
cmp
dec
shlb
inc
cli
and
xchg
xchg
inc
jns
push
mov
cmp
sbb
call
pop
xchg
movsb
test
filds
jmp
jbe
pop
cmc
or
ljmp
xchg
stc
inc
and
cs
mov
pop
cmp
sub
nop
mov
outsb
into
jae
dec
adc
insb
aaa
xor
pushf
xor
dec
leave
ds
or
mov
out
jae
cmp
sbb
cmp
jp
xchg
imul
lret
add
std
loop
scas
int3
imul
cmc
adc
xor
fldl
inc
pushf
fwait
insb
or
daa
sbb
rcrl
loopne
jl
pop
sub
iret
stc
sub
or
fs
add
xor
imulb
jb
out
and
and
dec
rolb
ss
out
xlat
iret
mov
push
dec
pop
sub
xchg
cmp
rclb
jl
adc
into
mov
add
cmp
cltd
inc
jp
test
test
mov
sub
sub
js
int
sub
sbb
bswap
adc
cmp
xor
lea
sub
and
cmp
nop
jbe
mov
jecxz
adc
jl
scas
mov
jecxz
xchg
dec
in
mov
scas
jmp
inc
inc
loop
jle
jecxz
sbb
xor
mov
scas
xchg
test
dec
call
inc
stos
movsb
int
inc
loope
dec
std
cmp
add
js
jb
sub
push
push
adc
aad
cltd
pop
loop
adc
fnstsw
in
ret
mov
mov
movsl
and
movsl
mov
jne
cmp
xorb
aas
add
ljmp
ds
icebp
mov
call
sub
mov
or
dec
enter
loop
pop
lahf
xchg
loop
adc
adc
push
xchg
shlb
sbb
push
inc
mov
xor
or
scas
mov
sbb
adc
cmp
mov
movsb
mov
rorb
fstpl
jne
lock
xlat
fnstcw
jo
jl
push
sbb
lds
out
push
mov
push
cmp
lods
push
ljmp
imul
cmpsl
movsb
aaa
pop
pop
repz
xlat
adc
iret
aad
dec
or
ret
in
cwtl
enter
cmp
subl
ret
pop
pop
stos
inc
push
push
in
mov
inc
push
leave
jo
mov
sbb
aam
jnp
cmp
pop
adc
sub
fadd
mov
jne
jo
stos
nopl
rclb
adcb
xor
cmp
shlb
sub
cmpsl
sbb
cmp
adc
jns
cmp
loope
lret
add
fistps
adc
lret
in
sbb
enter
pop
mov
scas
mov
insl
clc
andl
movsb
movsb
outsb
out
xor
push
insb
pop
sbb
dec
out
fdivrl
pop
jle
daa
scas
mov
imul
jmp
call
dec
lret
lock
sbb
or
jno
cmpsb
sub
psubsb
sub
scas
ljmp
push
inc
das
push
shl
mov
and
lea
lret
inc
adc
out
or
out
cmp
cmp
jne
mov
or
jnp
cmpsb
test
pop
add
cmp
cmp
loopne
add
sbb
ljmp
outsl
inc
in
xor
std
or
loope
cmp
addr16
cmp
addb
mov
imul
sahf
jbe
fwait
lock
add
and
cltd
in
lds
fwait
roll
in
jle
mov
xor
into
cmp
xor
popf
add
fwait
xlat
mov
mov
cmpsl
and
lret
out
mov
pop
out
fistpll
dec
and
pop
adc
jmp
sbb
ret
test
popf
jnp
daa
mov
mov
fs
lods
sbb
imul
push
data16
outsb
pop
xor
sarl
push
jno
aam
ret
xor
js
jne
subb
adc
add
push
fistpll
lds
fucomp
sahf
xchg
and
inc
ret
movsl
or
xchg
mov
add
adc
bound
jnp
push
popa
mov
scas
insl
sub
lds
cwtl
sub
mov
cmc
mov
cmpsl
mov
and
mov
mov
mov
push
cmpsl
fists
cmc
pop
inc
or
mov
call
dec
or
adc
inc
mov
stos
cmp
cmp
lods
dec
sbb
fildll
outsl
cmp
add
out
dec
cmpsb
pop
sub
xchg
cltd
push
popa
xchg
inc
add
aad
and
cli
push
jbe
sbb
sbbb
add
out
and
cld
clc
addl
jge
lret
mov
adc
add
add
aad
iret
push
sub
or
jmp
iret
push
test
adc
fcomip
nopl
xchg
or
lds
leave
mov
lock
or
mov
xchg
ficompl
pop
mov
ret
lock
repnz
adc
loopne
mov
insb
ljmp
cli
pop
mov
imul
fwait
mov
mov
nop
lock
insb
xchg
mov
jge
lcall
enter
cmp
fistpl
sahf
lret
mov
aaa
xor
ja
ljmp
adc
sbb
jecxz
shrb
repnz
sbb
rcl
xor
mov
cmpsb
fsubrl
in
mov
es
rep
cld
mov
mov
mov
mov
sahf
hlt
pop
mov
mov
xchg
mov
movsl
repz
enter
mov
cmc
cmc
lea
jo
and
and
nop
outsb
cmp
incl
shlb
repz
mov
imul
mov
int
bound
lahf
scas
das
pop
out
out
mov
push
inc
add
inc
test
jne
cmpsb
sbb
jae
jne
jp
mov
mov
dec
cltd
cli
ds
and
mov
and
add
add
and
and
or
pop
and
cltd
and
xchg
std
push
pushf
dec
mov
sbb
fcomip
jno
cmpsl
fbld
mov
xor
fidivs
in
sbbl
dec
mov
pop
and
repnz
mov
mov
sar
mov
addr16
xlat
and
add
dec
xor
xchg
js
ret
jbe
mov
lea
sbb
stos
lahf
xor
test
push
add
adc
jae
cs
test
data16
xor
int
fwait
in
add
dec
mov
cmp
stos
fbstp
dec
or
icebp
inc
xor
ss
fucomi
ficoms
adc
pop
mov
inc
push
stos
fwait
imull
mov
lock
push
dec
pop
dec
and
xlat
push
add
mov
jb
enter
popl
cmc
stos
xchg
or
mov
jae
out
mov
or
push
xor
and
sbbl
pop
add
int
ffreep
lods
push
rol
and
add
mov
or
sub
or
mov
adc
cmp
testl
jo
stc
hlt
xor
aad
clc
inc
cmpsl
dec
inc
mov
cmpsl
pop
imul
push
je
mov
and
aam
or
push
lahf
mov
dec
out
filds
ja
sub
pop
out
xor
xor
movb
xchg
sbb
dec
pop
jb
movsb
pop
mov
decb
mov
and
jp
lock
dec
mov
loop
inc
mov
loope
pop
sbb
sub
pop
test
mov
inc
cmp
call
insb
je
xchg
sub
sbb
jmp
negl
inc
xor
or
imull
mov
mov
fs
mov
pop
out
add
sbb
lret
dec
xchg
les
jmp
xor
dec
andb
mov
andb
fcompl
add
cwtl
adc
ljmp
sub
imul
mov
repz
clc
inc
lcall
sub
xchg
ds
lock
mov
or
sub
in
addr16
popf
dec
imul
dec
push
hlt
sbb
add
insb
sub
push
xor
inc
dec
out
pop
or
into
jle
rorb
add
xchg
movsl
cmc
mov
lods
leave
ror
xchg
adc
je
outsl
out
pop
or
dec
pop
and
xchg
xchg
mov
push
adcb
mov
pop
mov
loope
in
hlt
push
imul
mov
jo
jl
push
insl
jbe
add
outsl
lahf
jnp
pushf
mov
clc
inc
sbb
insl
int3
push
mov
in
push
imul
in
mov
or
pop
repz
fadds
mov
and
out
outsl
je
mov
pop
sub
idivb
push
mov
out
clc
jbe
leave
je
insb
lcall
mov
jge
mov
and
push
int
jo
enter
and
mov
jno
or
jecxz
pop
ss
and
xchg
loope
mov
stc
sbb
sbb
mov
sar
mov
test
jo
lds
sbb
adc
mov
jne
jno
pop
lcall
mov
repnz
pop
ja
dec
outsl
cltd
movsl
xor
adc
mov
sub
sar
in
pop
cld
mov
bnd
cmove
inc
jmp
std
push
inc
jo
or
dec
lret
cmp
popf
sbb
push
sbb
in
adc
dec
outsl
mov
fisttpll
xchg
clc
xchg
dec
lods
cld
dec
mov
adc
adc
xchg
xchg
aaa
ficomps
mov
cmpl
mov
inc
push
mov
mov
incl
js
add
cltd
sbb
sbb
insl
nop
pop
mov
sub
push
mulb
jecxz
cs
and
cmp
xor
pusha
dec
lea
movsl
jmp
repnz
call
cmp
or
ret
push
out
dec
icebp
or
push
jmp
lods
mov
push
ficomps
out
std
scas
arpl
mov
push
bound
add
lret
pop
lds
popa
andl
cmp
cmpsl
push
add
pop
or
pop
push
nop
data16
fisubrl
lds
jo
aam
pusha
cltd
xchg
jmp
mov
jo
mov
pop
hlt
jmp
addr16
or
mov
cmpsl
stos
mov
aas
xor
pop
mov
mov
dec
xchg
mov
inc
sbb
adc
jg
add
push
out
jmp
gs
hlt
mov
jo
mov
movsb
mov
xor
scas
cltd
lahf
mov
loop
repz
push
arpl
imul
and
leave
cwtl
sbb
lds
test
das
lods
mov
insl
xor
aas
push
fistl
add
loope
lcall
das
sbb
push
dec
rcrl
jge
jg
mov
shr
out
movsb
arpl
and
int
sti
xchg
aam
xor
test
sub
mov
jmp
or
imull
ljmp
daa
inc
stos
jmp
jne
dec
fwait
push
inc
cld
sub
nop
js
aaa
ja
add
mov
sbb
mov
imul
xor
roll
lcall
pop
dec
imul
test
mov
mov
lods
xchg
adc
mov
push
dec
sbb
std
xor
xor
jo
push
lods
testb
jne
fnstsw
loope
inc
mov
adc
or
out
out
jle
mov
ret
pop
sbb
cmc
arpl
sbb
xor
ds
mov
ds
stc
loopne
xor
dec
inc
int3
adc
or
jg
sti
in
fwait
mov
addr16
movl
mov
cltd
test
lods
inc
xor
cmovno
repnz
lock
inc
xor
scas
out
mov
mov
cmp
push
inc
out
sbb
cmp
mov
jmp
test
sub
xor
fstps
mov
mov
clc
add
inc
aas
lds
ljmp
cwtl
pop
pop
push
xor
or
call
inc
mov
es
insl
sub
push
test
daa
scas
std
in
cs
pushf
jmp
and
mov
cmp
inc
imull
xchg
dec
subb
sub
xchg
loopne
inc
sub
loop
cmp
fimull
xlat
mov
aaa
push
xchg
mov
loope
xchg
push
rol
lret
xchg
cmp
out
sbb
pop
inc
jo
jmp
shrl
xor
jmp
mov
inc
push
push
mov
xchg
xchg
in
cmp
adc
repnz
pop
xor
das
iret
mov
sub
push
mov
pop
mov
dec
insb
jg
jno
shrb
rclb
mov
push
hlt
aas
std
roll
and
push
out
fdivs
les
fdivrs
push
dec
or
mov
mov
mov
add
inc
xchg
jl
hlt
jecxz
xor
mov
mov
outsb
aaa
push
mov
outsb
ds
push
lahf
cli
gs
ret
ds
imulb
pop
nopl
jle
add
shrl
mov
sbb
out
test
jo
push
cmp
jno
xchg
stc
xchg
lock
sti
shll
jbe
sbb
iret
xchg
mov
jmp
hlt
push
and
mov
fwait
lret
dec
mov
repz
xchg
das
xor
add
and
cmpsb
aaa
ret
jb
and
lret
in
dec
aam
jns
insl
movsl
mov
daa
and
daa
push
test
cmpsl
mov
cmp
adc
mov
inc
roll
das
jb
lret
jns
ret
popf
lea
jae
pop
data16
insl
lret
sub
mov
popf
addl
add
push
ss
mov
sub
add
push
or
aad
lahf
sahf
mov
jmp
inc
aaa
and
sar
insb
xor
dec
mov
inc
mov
fs
xlat
jmp
lahf
jp
adc
and
pop
push
ret
out
mov
adc
and
pop
out
adc
es
pop
mov
mov
xor
ret
fwait
shrl
rcrb
xor
jle
leave
cmpsb
or
fldcw
or
daa
add
xor
ret
cwtl
loop
mov
pop
cmp
inc
jne
inc
shlb
dec
out
cld
cmc
inc
popf
iret
bsf
popa
stos
mov
or
clc
cmpsb
movsb
mov
sub
popf
xchg
jnp
mov
int
test
xchg
loop
xchg
movsb
and
movsb
mov
scas
jb
mov
dec
adc
cmc
jg,pn
dec
daa
jmp
push
sbb
xchg
pop
cld
mov
adc
jnp
fisubs
lods
lret
lods
xchg
sahf
jge
mov
xor
rol
std
sub
jle
enter
jg
lock
pop
scas
cmp
sbb
subl
jge
fstps
xor
cli
push
sbb
adc
inc
push
decb
push
enter
lret
out
adc
adc
ror
inc
and
xor
push
jb
fcoml
jo
pop
xlat
repnz
test
enter
xor
in
jae
xor
sti
push
mov
test
cmp
fcomi
rolb
cmp
xor
or
mov
es
xchg
stos
loop
add
xchg
fdivrl
dec
loopne
xchg
jns
pop
sub
cmp
mov
arpl
ret
lds
adc
negb
ror
cwtl
idivl
mov
in
in
popa
push
fcom
mov
test
aad
stos
and
adc
or
and
sub
jne
ficoms
mov
lods
jp
pop
mov
gs
das
popf
repz
inc
mov
jmp
int3
clc
arpl
xchg
sub
push
sbb
mov
pop
mov
sbb
out
mov
push
test
cmp
stc
test
pop
mov
cmp
loopne
in
ja
je
arpl
mov
sbb
and
inc
jmp
ja
push
and
and
ffree
sbb
cmc
dec
pop
test
cwtl
xlat
test
push
sbb
and
hlt
cli
dec
xor
xchg
mov
in
out
ljmp
arpl
das
pop
jp
cmc
sub
ljmp
jb
or
xor
lds
lods
push
and
xchg
jae
push
loop
pop
mov
jmp
mov
lods
mov
enter
fimuls
jmp
dec
and
cmp
dec
addr16
xchg
pushf
xchg
fcmovnb
pushl
das
negl
mov
lods
mov
sbb
xchg
repnz
ss
aaa
mov
mov
sti
sbb
test
ret
xchg
cmpsl
shlb
fnstenv
cmp
cmpsl
cmp
jle
jmp
cmp
jae
ja
js
mov
ret
je
outsb
aaa
aam
xor
or
mov
lods
das
int3
leave
sbb
adc
xchg
cmp
loope
pop
xor
dec
inc
pop
cmp
push
in
lahf
rclb
push
mov
mov
adc
flds
stos
xor
mov
push
adc
cmp
lock
cmc
jecxz
mov
lock
mov
lahf
ss
daa
fistpl
js
dec
xchg
pop
and
gs
sbbl
xor
inc
inc
in
dec
dec
popa
aad
lods
mov
sub
sub
or
sub
int3
repz
xor
jb
mov
jge
shlb
aas
push
push
xor
sbb
addl
repnz
clc
pop
jb
rcll
jmp
mov
ja
inc
cmpsb
push
mov
sbb
cmp
sbb
into
mov
mov
add
sub
mov
mov
pop
shrl
andb
int
pop
pop
daa
rclb
repnz
xor
sub
mov
rol
pushf
call
mov
jp
std
cmpsb
sub
out
aas
sub
clc
inc
jae
stc
fistl
xchg
popf
subb
imul
or
loope
nop
sti
pop
push
adc
dec
and
rcll
in
sti
sub
and
xor
xchg
mov
frstor
inc
aaa
push
add
orl
adc
insb
fadd
add
mov
lock
xchg
push
pop
lret
subb
mov
push
lock
cmp
fisubrs
cmp
dec
sub
mov
add
and
jle
sarb
sbb
fidivs
add
push
jp
xchg
mov
stc
ret
insb
fildll
cmpxchg
cmp
push
imul
pop
into
fs
pop
cmp
or
sbb
int3
jp
add
test
mov
jg
xlat
stos
daa
lcall
mov
imul
js
int
xor
addr16
push
sbb
push
lret
rclb
ja
fdivrl
sbb
xchg
and
push
mov
insb
sub
aam
push
aaa
inc
mov
sub
stos
sbb
mov
fmuls
arpl
mov
mov
jo
lock
jae
and
into
rcrb
lret
aaa
jle
lock
push
mov
sub
imul
cmp
aas
movsb
stos
inc
push
xchg
insb
xchg
fsubs
rolb
dec
gs
repnz
and
and
mov
das
lcall
and
add
pop
loopne
cmpsb
mov
adc
xchg
sbb
shlb
inc
shll
orb
pop
adc
ret
pushf
mov
inc
pop
ficomps
inc
rep
xor
cmc
test
imul
sti
leave
cld
pop
stos
sarb
addb
repz
cmp
loop
dec
aas
add
test
push
jb
dec
adc
jl
add
mov
std
pusha
fnstsw
dec
lea
and
mov
mov
add
jno
sub
cmpsb
iret
and
out
xchg
sub
lret
addl
neg
dec
inc
fisubl
imul
pusha
test
pop
push
pop
push
dec
ficompl
jle
out
ds
popa
popa
mov
mov
sysenter
scas
sbb
sarl
lods
cwtl
cmp
sub
in
imul
addl
mov
ret
pushf
cmp
push
lods
add
xchg
enter
inc
xchg
cmc
pop
clc
cmp
xchg
clc
lock
movsl
mov
sbb
xorl
out
divb
mov
push
lahf
xor
mov
sbb
add
cs
push
int3
xor
inc
inc
mov
add
mov
xchg
mov
cmpsl
sub
sub
enter
aas
adc
inc
sub
fs
inc
je
mov
cmp
sbb
leave
ja
add
jg
or
leave
in
and
rorb
add
shrb
adc
dec
std
fwait
test
and
shlb
out
es
xor
xor
xchg
jg
loope
ret
insb
stc
sub
jle
lods
negb
rcl
ret
insb
in
inc
wbinvd
dec
mov
mov
nopl
jno
data16
xor
test
je
mov
add
push
mov
out
cmc
sbb
aad
insl
xor
lods
jmp
into
xchg
imul
jp
sub
cld
dec
dec
add
push
insb
or
or
insl
fnstsw
loop,pt
mov
mov
jge
xchg
xor
cs
sbb
inc
dec
xchg
dec
roll
jmp
jg
mov
add
sub
bound
or
std
outsb
lock
pop
cli
mov
clc
pop
xchg
hlt
and
mov
pop
ds
mov
cli
push
xchg
pusha
nop
inc
cwtl
cmp
sub
pop
push
adc
adc
xchg
pop
mov
sarl
out
sub
sbb
jns
pop
pushf
clc
lretw
push
mov
decl
loop
xchg
lea
cmp
push
cs
and
fiadds
loop
shrb
ja
enter
lahf
clc
loope
add
mul
int
fsub
jne
cs
mov
push
sbb
mov
flds
rolb
in
dec
imulb
int3
mov
mov
pushf
xchg
jg
mov
insl
push
dec
mov
movsl
or
adcl
cmpsl
fstpt
lods
and
jne
dec
mov
sbbb
adc
loope
jecxz
stos
mov
jae
aam
xchg
xor
xchg
jp
in
jp
and
scas
or
cmp
pushf
mulb
cli
hlt
ja
jns
mov
mov
js
pop
divl
loopne
jle
add
mov
adcl
lcall
xor
pop
sbb
push
sbb
lods
lods
jl
outsb
mov
xchg
sbb
inc
hlt
rcl
stos
xor
pop
mov
mov
cmpl
mov
jnp
xchg
pop
pop
push
adc
push
sub
dec
cwtl
pop
popa
fldl
mov
cmp
inc
mov
imul
int
xchg
pop
and
adc
sbb
inc
out
test
xor
cmp
test
mov
mov
mov
bound
push
jmp
pop
dec
pop
fisttps
xchg
sbb
scas
pop
xor
xchg
inc
and
decl
jnp
leave
or
push
arpl
inc
dec
mov
pop
inc
fs
cwtl
inc
or
fbld
adc
lret
pop
lahf
bound
mov
xor
xchg
jbe
jp
push
inc
inc
dec
and
in
jecxz
out
adc
repz
stos
nop
out
xchg
jns
jmp
jp
rorb
popa
sub
popf
nop
mov
test
stos
xor
imul
js
or
enter
jp
cmpsb
mov
jl
push
arpl
jb
addb
loope
xor
adc
jp
adc
cmp
ljmp
ffree
sbb
inc
dec
xchg
test
mov
push
lret
movsl
xlat
pop
inc
add
into
ja
sahf
lcall
bound
sbb
pushf
sbb
pop
mov
inc
gs
push
mov
outsl
icebp
test
dec
mov
insb
and
stos
adcb
cmpsb
xor
jecxz
sub
push
cs
adcl
jge
insl
push
int3
and
cmp
cli
push
mov
or
nop
les
push
in
xchg
push
dec
lea
push
push
or
mov
xlat
loop
pop
aaa
cltd
xchg
xor
imul
leave
dec
aad
ficomps
fildl
fdivr
push
sahf
xchg
call
aam
daa
test
lods
push
pop
and
int3
pop
arpl
sub
loope
stc
sbb
mov
xchg
sub
mov
arpl
pusha
push
mov
or
pop
outsb
xor
test
je
sbb
xchg
mov
sbb
mov
adc
in
test
in
sbb
fistpll
mov
fcmovbe
and
shrb
lret
xchg
sti
orl
movsl
pop
xchg
inc
sub
test
pushl
mov
cmp
mov
cmpb
mov
xchg
add
jns
adc
mov
fidivrl
repnz
mov
imul
stos
aaa
iret
scas
pusha
xorl
dec
xor
mov
mov
or
fldcw
mov
jg
ret
dec
sub
fidivrl
int
arpl
lahf
push
int3
mov
adc
sbb
push
bound
mov
dec
pusha
icebp
dec
adc
push
inc
stos
cld
ret
dec
icebp
in
shl
stos
bound
push
ljmp
mov
xor
adc
jmp
sti
sub
cmpb
mov
mov
popa
sbb
int3
pop
mov
push
movsb
add
negl
sahf
lea
inc
out
sbb
cmp
scas
jecxz
push
inc
sbb
lock
fimull
sbb
addb
push
pop
test
xor
ja
sbb
imul
icebp
inc
bound
xor
test
fnstcw
add
repnz
enter
mov
fwait
xchg
and
insl
mov
sti
sub
pop
xchg
inc
jbe
rorb
jb
les
cmp
lahf
pop
mov
ljmp
fcmove
int
cltd
add
loopne
dec
mov
rcr
arpl
push
sub
push
push
rcll
daa
sahf
into
push
sbb
mov
push
sbb
mov
push
lods
lock
sub
test
frstor
fnstsw
inc
push
jmp
and
fnstsw
push
dec
mov
or
cmpsl
sarl
inc
jne
jae
inc
ret
ret
jg
xchg
js
inc
into
loope
jp
mov
outsb
adc
inc
cmp
scas
jl
xchg
jp
fdivrl
cmp
test
adc
out
mov
pop
mov
push
enter
sub
mov
cli
xchg
xlat
pop
and
sub
push
xchg
sti
in
or
fwait
aas
nop
hlt
jns
mov
out
mov
add
dec
push
pop
sbb
fwait
sub
cld
in
mov
int3
es
ja
xchg
mov
outsb
in
mov
mov
inc
mov
lods
or
jp
lods
insl
orl
adc
sub
repnz
mov
cwtl
cmp
sub
and
mov
es
inc
decb
cmpsb
daa
xor
popf
pop
notb
cmpsb
enter
fcoml
fs
lahf
in
jo
adc
rorb
outsl
sbb
pushf
inc
lcall
les
pushf
mov
aad
psrlw
in
cmpsl
add
aad
ss
scas
add
or
adc
into
or
dec
inc
jb
enter
push
pop
popf
inc
fsubr
xor
jg
sbb
outsb
sahf
and
insl
fnstsw
push
shrl
pop
pop
sarb
gs
xor
mov
lods
dec
mov
iret
movsb
cmpb
jnp
pop
bnd
add
rdtsc
mov
out
mov
int
roll
add
and
pop
pop
cmc
inc
jns
fst
outsl
mov
into
scas
jmp
or
lds
pop
test
mov
je
mov
test
mov
fwait
dec
xchg
sbb
mov
and
das
aas
jbe
js
mov
xchg
es
inc
jb
adc
shll
in
mov
ljmp
mov
jb
xlat
lods
cmp
cmp
xchg
inc
sbb
test
out
out
push
xor
dec
mov
jmp
and
xchg
out
add
xor
push
cmp
dec
fs
fiadds
xchg
lcall
fistpl
sar
adc
xor
test
rolb
fsubp
ss
std
inc
push
scas
inc
xor
incl
fmuls
shr
cmc
or
xor
bound
fisttps
jb
lret
pop
mov
jnp
xchg
dec
mov
jge
loop
loopne
cmpsb
mov
data16
mov
arpl
mov
push
mov
lock
xchg
rclb
mov
xchg
loope
out
jno
push
jge
and
and
pop
ds
mov
sub
stos
nop
and
jmp
mov
jae
inc
hlt
jl
stos
sahf
das
fdiv
push
xchg
cmp
mov
sbb
pop
sti
nop
pusha
aas
sub
js
fisttps
pop
dec
mov
pop
jbe
pop
xor
roll
enter
pop
mov
push
pop
sarl
mov
mov
cmp
pop
aam
push
and
and
arpl
in
ret
loop
scas
pop
sbb
xchg
push
xor
sub
jge
mov
int3
xor
mov
pop
or
insl
dec
sub
dec
iret
js
lret
jb
movsl
jno
imul
sub
test
xlat
inc
jp
inc
lret
sarl
icebp
inc
bndldx
std
stos
and
imul
int
add
add
iret
jbe
pop
push
push
sbb
movsb
cltd
cmc
ss
lret
cmp
loope
mov
fidivrs
ja
mov
xchg
mov
pop
push
push
mov
adc
lret
imul
imul
xor
xchg
lea
inc
fsub
jae
test
shll
hlt
mov
dec
loopne
in
daa
icebp
aad
pop
test
and
out
xor
mov
mov
cwtl
pop
fcmove
popa
sbb
imul
les
mov
mov
cwtl
cltd
adc
jle
push
mov
and
xchg
cli
xchg
fnstcw
push
xchg
inc
or
aad
cmp
jg
fiaddl
aaa
stc
sti
push
cwtl
repnz
mov
je
push
push
dec
sub
and
js
lahf
push
xchg
sub
jnp
aam
pop
add
pop
dec
pop
push
jl
ds
xor
inc
pushf
fnstcw
das
jne
inc
ficoml
pop
popa
daa
mov
test
sub
jmp
push
movsl
je
xor
rolb
repz
pusha
mov
sub
out
jnp
int3
sbb
idivl
and
push
pop
mov
loopne
jo
data16
mov
add
out
mov
shll
cmp
cltd
add
aaa
pop
movsb
cli
adc
stc
ds
push
aam
nop
rorl
mov
dec
aaa
fwait
std
cld
fnsave
mov
jo
jg
add
xor
stc
adc
jo
dec
or
xor
xchg
mov
mov
mov
push
xchg
mov
les
xor
arpl
cmp
sub
bound
cmp
std
int3
xchg
addl
mov
sbb
fidivrl
into
shrb
adc
out
andl
push
loop
xor
clc
ficompl
arpl
shlb
aas
loopne
popa
bnd
dec
mov
enter
mov
and
scas
ds
jl
stos
adc
push
dec
adc
pusha
leave
lods
jbe
call
aam
ja
pop
add
out
pushl
adc
jae
imul
jbe
or
mov
js
movsb
cs
int
xchg
and
or
ds
cmp
jle
push
mov
jne
jg
subb
inc
mov
sbb
js
add
mov
mov
jb
cs
and
mov
pop
aam
adc
push
cs
pop
sahf
into
mov
or
mov
enter
scas
addb
lret
adc
inc
ja
ljmp
insl
fwait
sub
cmp
lea
jge
ret
lret
mov
mov
mov
pop
mov
mov
aas
faddl
lcall
xor
cmpsb
scas
scas
test
push
xchg
stos
mov
or
out
adc
push
hlt
mov
stos
addl
stos
sub
add
fnstcw
mov
es
mov
fistps
or
dec
pop
test
sbb
push
xchg
inc
rclb
cmp
fmul
test
and
jae
scas
ror
mov
lock
out
jns
dec
xor
xor
call
push
inc
fisttpl
insb
adc
add
cmp
movsb
lcall
out
in
ret
cmp
out
nop
sub
or
pop
repz
and
mov
out
in
push
test
jl
arpl
ja
inc
mov
int3
divb
shll
insb
inc
je
xor
cmp
pop
xor
jp
fimuls
pop
jo
inc
push
cmp
add
fcoms
lock
jne
call
outsb
test
in
cmp
dec
jle
mov
or
adc
mov
jge
add
dec
clc
out
aas
rcrb
repnz
jecxz
jl
add
xchg
nop
lods
inc
pop
xadd
shl
mov
jp
xchg
push
dec
sub
data16
insb
add
push
xlat
sub
sbb
cmp
jno
sti
mov
repnz
and
pop
lahf
pop
mov
pop
sub
xor
or
xor
ja
cmp
fists
std
xchg
ret
shr
inc
xor
push
lock
cwtl
mov
lods
rorb
pop
inc
shll
push
add
loop
push
cmp
or
xor
dec
fdivl
push
fcoml
xchg
push
lods
inc
cmp
xorb
sub
mov
out
add
adc
ljmp
push
imul
enter
ja
mov
or
xor
lcall
pop
push
jbe
jl
mov
jbe
push
out
mov
clc
ret
dec
and
and
cltd
xchg
pushfw
movsb
xchg
adc
sub
test
out
sahf
pop
pop
add
insb
loop
mov
add
leave
add
repz
push
pop
shlb
stc
out
mov
and
out
or
test
xor
adc
xchg
sbb
xor
xchg
push
sahf
fldl
sbb
orb
pop
ljmp
jnp
shlb
xchg
mov
sub
lcall
sbb
push
inc
scas
lret
and
sti
mov
arpl
pushf
sti
lret
test
jp
mov
mov
jns
loopne
dec
push
cmpsb
sub
xlat
sub
inc
testb
xor
jmp
ret
stos
push
xchg
cmc
push
mov
jno
push
scas
xchg
mov
pop
xor
push
mov
push
fstpt
dec
pop
mov
cld
mov
jp
out
push
rcrl
ja
adc
jb
jmp
adc
mov
jb
nop
punpcklwd
mov
mov
adc
into
ds
fwait
inc
fdivs
pop
aaa
inc
test
sbb
push
scas
mov
xlat
sub
cmc
jp
in
out
xlat
xor
sub
xor
mov
cwtl
shlb
cmpsb
pushf
rclb
xor
lret
cli
cmc
sbb
popf
adc
mov
je
cmpsb
pop
mov
jmp
sub
sbb
iret
bound
rorl
call
fstps
out
mov
xor
jb
mov
pop
adc
sub
cmp
or
das
inc
push
pop
loopne
push
enter
jg
repz
dec
jno
rclb
jbe
int3
pushf
nop
clc
push
jae
jns
sbb
loop
in
es
cmc
fcoms
jns
inc
cmpsl
xchg
add
daa
daa
mov
mov
cmpsb
mov
xor
and
lock
jg
xchg
xlat
dec
vpaddsb
sbb
push
cwtl
in
mov
mov
fiadds
fwait
push
mov
xchg
or
adc
inc
mov
push
xor
jmp
cmp
push
outsl
dec
cltd
cwtl
fiadds
fsts
jnp
stos
popa
ret
and
imul
fldcw
dec
inc
fcmovb
ljmp
test
test
loop
ljmp
lds
cmpsb
cli
push
fs
in
jbe
adc
jno
into
ss
sbb
ret
pop
mov
mov
adc
imul
add
out
popf
ret
and
in
add
jge
rorb
pop
dec
push
insw
mov
inc
or
cmp
stc
jbe
in
das
or
lahf
dec
test
mov
xchg
out
orb
in
inc
push
inc
jp
insl
xchg
jg
sub
mov
negb
jecxz
hlt
lds
mov
scas
out
mov
addb
cld
pushf
addr16
imul
pop
jns
xor
fistps
imul
lret
xchg
mov
mov
movsl
pop
cmp
scas
adc
dec
cmpsl
inc
and
out
cmp
mov
insl
mov
test
icebp
lea
fisttps
xlat
in
test
xor
mov
pop
loope
xlat
insb
mov
stc
loopne
dec
jns
mov
cmp
dec
pop
lret
int3
ret
push
jle
mov
ficompl
out
and
mov
out
adcb
mov
jge
jns
jns
dec
cmp
mov
inc
int3
imul
jg
dec
pushf
cmp
jg
fsub
mov
and
inc
pop
jle
loope
gs
sbb
xchg
jo
mov
aaa
sar
sub
jl
jbe
xchg
push
rolb
pop
fdivrp
decb
push
and
aad
mov
cmp
outsb
aam
and
cmp
lock
jo
mov
jbe
and
push
lods
addr16
lahf
cwtl
dec
test
into
xor
stos
push
nop
sbb
mov
sub
sbb
or
adc
fstps
ds
adc
lcall
push
or
in
push
leave
sar
into
inc
or
fwait
xchg
xchg
sahf
push
xchg
nop
fucomp
popf
ficomps
leave
sub
push
mov
xchg
std
inc
addr16
and
loop
add
jmp
push
and
xor
adc
fidivl
jnp
pop
les
icebp
sbb
aas
push
xchg
dec
cmp
and
add
jmp
stos
sbb
mov
dec
xor
mov
cmp
jae
sahf
lods
in
nop
inc
cmp
sub
mov
dec
push
cwtl
jle
lret
or
subl
xor
mov
and
aas
push
test
cmc
lret
adc
out
or
jp
repz
jo
push
test
pop
mov
dec
sbb
enter
pop
xchg
cmp
cltd
cmp
xchg
cmp
sub
sahf
sub
cmpsb
add
shr
xor
cli
mov
imul
cmp
jl
and
aas
pop
mov
dec
xor
xor
dec
cmpsb
loop
jo
das
frstor
and
les
sbb
iret
popf
jae
repz
jecxz
sahf
loope
jp
pop
cwtl
fstpt
push
jge
xchg
repnz
mov
ljmp
push
cmp
test
jb
sbb
mov
shrb
cmp
sub
into
inc
adc
lea
adc
scas
fsubrs
sub
push
aam
lahf
sbb
fmul
adc
out
pop
lret
frstor
jge
mov
cmp
jno
jae
inc
pop
cmp
adc
jmp
nop
push
xorb
pushf
mov
pop
jg
mov
cmp
sarb
mov
or
xchg
in
pop
or
and
pop
les
jg
push
nop
xchg
cwtl
insl
xchg
ljmp
stos
mov
lret
pop
and
or
inc
leave
pop
mov
sbb
test
ficompl
imul
in
or
sar
shl
mov
pop
or
sbb
pop
mov
sub
addr16
sub
cmp
mov
pop
adc
roll
int
fwait
notb
cmp
or
les
and
dec
in
inc
adc
mov
sbb
xchg
pop
mov
test
dec
mov
shlb
nop
cmp
pop
fstpl
idivl
repnz
fs
dec
mov
mov
pushl
imul
call
dec
xor
bound
jo
js
lahf
xor
and
orb
fwait
push
movsb
lea
mov
imul
imul
push
sub
mov
pop
es
ss
jne
jecxz
adc
nop
adcb
arpl
fmul
sbb
es
stos
and
inc
mov
cmp
out
push
add
xor
das
stos
add
pushf
pop
cmpsb
xchg
mov
aam
pop
and
dec
xchg
mov
push
mov
sarb
add
cmp
xchg
mov
lret
pop
push
cmp
bswap
aam
cltd
rol
or
lock
adc
out
mov
cmp
xor
pop
scas
lea
pop
jo
mov
lcall
paddusb
add
rol
and
adc
push
cmp
add
popa
stos
bound
jmp
and
pop
mov
xor
mov
lret
cmp
and
pop
in
rcr
mov
fistl
lods
inc
add
sub
mov
push
pop
repz
jb
test
add
lods
inc
es
fimull
inc
aaa
push
mov
sbbl
in
sbb
cmp
aad
push
inc
pop
cltd
lcall
jb
pop
imul
pusha
jecxz
push
fwait
mov
mov
jns
outsl
and
xchg
and
je
sbb
dec
cmp
mov
pop
cltd
dec
gs
aas
push
lods
lods
pop
out
decb
movsb
addr16
fs
call
outsl
imul
sbb
out
lret
dec
mov
notb
adc
xchg
dec
mov
cmpsb
in
sub
jb
cmpsb
pusha
sbb
xchg
fisttpll
ds
xchg
sbb
or
jbe
mov
out
lret
pop
aas
push
mov
sub
test
inc
inc
std
inc
mov
mov
pop
repnz
or
cmp
cltd
lahf
stos
sbb
lods
inc
mov
mov
daa
or
cmp
out
pop
jmp
dec
push
mov
das
and
fcmovnbe
adc
fsubl
leave
subb
or
inc
fidivrl
pop
test
in
mov
push
mov
jnp
int
push
das
fcomip
pop
stos
push
jbe
xchg
ds
inc
ficoms
or
push
lea
mov
mov
loopne
cmp
pop
push
jp
and
sti
and
lods
ret
push
sub
lret
xchg
cli
pusha
arpl
push
mov
mov
push
jmp
pop
ret
sbb
daa
dec
in
out
mov
cmp
or
pop
imul
cmp
adc
jl,pn
loope
adc
dec
pop
push
xor
mov
addr16
jge
push
sbbb
pop
dec
mov
scas
push
push
and
decb
sbb
cmpb
jmp
call
push
sbb
cmp
mov
push
add
adc
mov
cmp
mov
xchg
jnp
les
pop
repz
mov
jo
sbb
jle
loopne
xchg
lret
sub
fucomi
fs
gs
in
out
daa
iret
jbe
add
rcrb
push
push
inc
test
fidivl
fisubl
sub
icebp
push
jecxz
or
ror
dec
subl
and
mov
push
sub
stos
fistpl
xchg
sub
push
std
add
loope
xor
add
mov
ficoms
lds
dec
cmp
or
and
adc
js
lcall
add
pop
xchg
jb
pop
lret
roll
test
adc
int
popf
enter
push
push
cmp
cmp
fsubr
pop
rclb
mov
push
ja
mov
jecxz
jne
push
mov
add
loope
hlt
mov
daa
scas
jno
call
in
lret
cmp
dec
lret
mov
cwtl
mov
add
rorl
ja
ss
cmova
or
mov
icebp
les
pusha
pusha
inc
cmp
jno
add
cs
loopne
sarb
dec
outsl
dec
adcl
push
or
lret
aad
jo
jo
dec
loop
dec
fsubrs
int
lock
sti
cltd
or
rclb
fneni(8087
es
add
dec
pop
add
jo
inc
mov
and
sub
hlt
cmpb
add
sub
jle
sub
push
aam
test
mov
cmp
test
cmp
popa
push
daa
pop
and
mov
inc
cmpsl
cmp
or
stos
in
jg
jae
hlt
adc
pushl
adc
aaa
sub
test
pushf
jecxz
sub
mov
lcall
dec
mov
xor
adc
pop
das
sti
insl
xchg
mov
fnstsw
ficomps
pop
mov
nop
pop
test
js
push
or
push
repz
incl
lret
cmp
ror
cmp
es
pop
clc
and
inc
in
scas
outsb
dec
stc
and
subl
js
push
jnp
loopne
push
add
in
imul
lret
mov
sbb
jbe
test
pop
in
push
jns
subb
jo
fs
xchg
inc
jle
jnp
fsubs
or
or
cmp
pusha
cmp
jb
int
aam
lods
aad
push
cltd
dec
rorb
je
pop
lret
jns
fisttpl
inc
pop
and
jae
dec
gs
ja
xchg
jp
and
in
lea
jbe
adc
sbb
mov
loop
sbb
sbb
outsl
sub
stos
and
add
inc
iret
mov
add
rcll
fidivs
hlt
idivb
fwait
xor
in
cwtl
out
sub
dec
mov
mov
push
in
dec
cld
dec
sbb
loope
sub
ficomps
sub
cmp
fisttpl
fisubs
pop
sub
push
fwait
outsb
push
dec
fwait
aad
dec
in
jmp
lret
sbb
add
int
mov
mov
jae
int3
bound
inc
addr16
xchg
iret
cwtl
sbbl
mov
add
pop
add
cwtl
mov
fildll
ljmp
jle
mov
mov
mov
and
nop
mov
and
mov
outsl
jecxz
nop
fidivs
sbb
mov
stc
xchg
insl
rol
daa
mov
popa
sahf
sbb
inc
xchg
xchg
push
dec
cmp
adc
bound
sbb
outsl
fwait
push
and
ficompl
es
xorb
pop
cmp
sbb
imul
pop
das
xor
setp
mov
aad
call
decl
lock
dec
sti
mov
dec
xchg
sub
fsubrp
push
jle
int3
cmp
rol
xor
adc
ljmp
dec
dec
or
push
dec
std
icebp
popf
fs
loopne
xor
ljmp
bnd
into
fcoml
jp
cmp
sub
push
pop
pushf
aad
xor
insb
bound
add
adc
cmpsl
ljmp
push
dec
xchg
fcmovbe
repz
sub
mov
inc
leave
dec
shrl
hlt
xor
test
add
cmp
leave
outsl
daa
pop
or
rorb
imul
mov
mov
pop
push
popf
mov
aam
sbb
ret
xchg
dec
dec
mov
sbb
add
push
push
jp
loop
pop
stc
mov
cmp
adc
sub
leave
insb
int3
cmp
push
sbb
xchg
xor
jge
pop
mov
push
not
int
rsm
std
lods
jno
mov
sub
pop
iret
jecxz
sbb
add
mov
cli
sbb
repz
xor
jbe
shll
jb
rorl
adc
lret
hlt
stos
xchg
jmp
xor
xorb
cmp
lahf
scas
movsb
cld
ljmp
mov
dec
mov
sahf
loop
adc
and
inc
ffreep
jo
sub
push
add
dec
xchg
jl
sbb
sub
leave
sub
int3
jbe
out
rcrl
mov
addl
call
sub
mov
daa
adc
iret
sbb
push
jo
popf
aad
loopne
das
cmp
cmc
jo
fcomps
lret
ret
icebp
daa
aad
cmp
adc
sar
push
pop
add
testb
inc
sbb
xchg
stc
pop
shrb
sbbb
repz
sbb
push
outsl
stos
stos
add
inc
xchg
sbb
xchg
or
hlt
and
popf
xor
jne
lock
aas
add
inc
in
mov
xchg
stc
je
popa
and
adc
subl
pop
out
push
xor
xchg
adc
xchg
ljmp
test
pop
imul
js
mov
pop
sbb
idiv
mov
inc
cmp
sub
jnp
addb
xor
sbbl
fsub
sarl
lahf
fs
inc
push
and
jnp
mov
dec
mov
cmp
ljmp
cmpsl
cmp
push
jne
jmp
popf
repz
and
popf
jge
cmp
jmp
loopne
aaa
pop
push
xchg
leave
cld
push
or
pusha
aad
mov
mov
jl
jne
or
out
mov
cs
push
xchg
repnz
ret
inc
sbb
scas
and
or
clc
les
int
add
cmp
lahf
gs
sbb
add
and
dec
jo
mov
sbb
sub
cltd
fwait
mov
or
mov
cltd
adc
and
jmp
into
xor
push
mov
mov
mov
mov
popa
jecxz
sbb
sahf
dec
fscale
cwtl
out
dec
adc
cltd
inc
test
inc
mov
ljmp
into
jo
mov
push
stos
mov
pop
push
stos
pushf
sbb
negl
dec
and
mov
stos
or
movsb
cmp
or
in
cmp
rolb
lock
data16
or
sbb
lds
loop
outsb
test
arpl
fwait
mov
mov
and
push
dec
jo
push
in
jg
and
mov
or
fdivr
xchg
cmp
shrb
popa
loop
mov
in
adc
mov
das
cmp
sbb
mov
into
js
push
xor
xor
fsubrs
fs
mov
push
or
enter
in
mov
jne
mov
shrl
pop
cmc
push
and
jno
inc
xor
cmp
push
cltd
sub
pop
cmp
dec
inc
js
add
lret
test
mov
in
daa
lock
pop
push
enter
icebp
sub
xchg
out
outsl
sub
ljmp
sub
popa
in
lock
daa
mov
lds
mov
cli
cmp
cli
addb
jbe
mov
mov
or
pop
test
movsl
ja
sub
jle
adc
rcl
cltd
pop
sub
inc
pop
out
test
icebp
sbb
leave
or
add
out
enter
insb
arpl
mov
stc
fwait
xor
ret
jp
sbb
arpl
unpcklps
adc
loope
rolb
push
dec
fmuls
push
popf
xchg
ret
xor
jge
aas
and
rcll
mov
cltd
mov
jns
xchg
mov
in
mov
sub
push
test
mov
das
rcl
andl
rcr
mov
push
int
xrelease
aas
out
pop
pop
mov
add
sbb
xchg
stc
mov
pop
dec
jp
jmp
repz
or
push
popa
imul
insb
jle
shl
mov
aad
mov
call
popl
cli
or
rorb
inc
divl
add
xor
push
ss
dec
dec
rorb
in
stos
fs
movsb
in
and
ret
mov
cmp
xchg
jae
repz
popf
sbb
jp
shll
xor
subb
jp
fs
and
jl
inc
test
mov
inc
mov
es
daa
fdivr
data16
push
jge
dec
and
loopne
xchg
jb
xor
jg
adc
dec
mov
jl
stc
neg
loopne
out
es
insl
repnz
in
push
pushf
lcall
push
inc
movsb
gs
sbb
push
pop
cmc
out
lret
pop
xor
dec
xchg
out
sbb
fmuls
pop
or
sub
mov
xchg
push
rcr
stos
int
inc
add
jo
mov
pop
sbb
sti
or
cmp
movsb
mov
push
popf
xor
push
loop
add
cmpsb
inc
clc
ds
jp
movsb
pop
sbb
fsubs
imul
add
mov
dec
fisubs
mov
mov
jecxz
inc
fs
loopne
mull
ret
pop
clc
ficomps
repnz
es
aad
fsubrp
repz
mov
sbb
mov
inc
jb
fnsave
ds
fwait
out
pop
and
mov
sbb
sti
sub
call
fstl
mov
jnp
es
dec
out
adc
inc
mov
and
mov
aas
dec
bound
inc
ljmp
repnz
mov
mov
sub
aam
jns
jno
pop
inc
loopne
or
sub
aas
cmp
mov
dec
xor
mov
lds
repz
sbb
cmp
pop
cmp
jecxz
je
xor
lahf
movsl
jo
mov
sti
cmp
lahf
add
cwtl
pop
sbb
or
mov
adc
les
cli
and
imul
xchg
inc
push
mov
shlb
cld
sbb
and
cltd
popf
mov
js
nop
jmp
jo
mov
stos
inc
push
scas
rcrl
xor
lock
jne
push
lret
aas
mov
lock
inc
out
test
push
push
xchg
adc
mov
and
add
fsubp
leave
sbb
stos
nop
test
mov
sub
sub
push
inc
xchg
mov
iret
pusha
add
inc
hlt
mulb
fs
jge
icebp
push
inc
mov
js
and
inc
sti
sbb
bound
mov
xor
xchg
imul
leave
lahf
sub
add
mov
push
xor
sub
pop
test
shrb
and
pusha
xor
push
dec
and
add
pop
push
xchg
lea
pusha
shrl
popf
inc
pop
jo
or
xchg
add
jae
das
mov
lds
cmp
test
xor
subl
arpl
test
inc
push
mov
sbb
add
lds
stos
fnstsw
leave
mov
sarb
pop
mul
in
sub
std
jmp
push
in
jno
lret
stos
ss
sbb
xchg
bound
shl
cmovbe
repnz
ljmp
lret
push
mov
cmp
sbb
jg
iret
and
cmp
xchg
loopne
test
outsl
cmp
sub
mov
ret
out
test
test
dec
xlat
add
orl
gs
lret
fs
mov
icebp
repnz
mov
and
popa
int
shrl
outsb
lods
fiaddl
inc
mov
push
jae
stc
je
call
out
pop
xchg
pop
and
xchg
mov
adc
fisubrl
icebp
jno
lock
dec
rorb
mov
or
insb
sbb
cmpsb
lds
sub
ljmp
sbb
ret
leave
push
add
mov
call
lock
and
mov
insb
loop
jne
push
inc
push
cmpsl
rorl
mov
in
paddusb
int
mov
loop
popf
xchg
xchg
sub
sub
iret
push
inc
outsl
stos
fs
xchg
mov
mov
repz
mov
repnz
xchg
inc
cmp
pop
popa
cmc
fistpll
and
jp
jnp
mov
cmp
icebp
lock
pop
xor
repz
scas
push
fidivs
mov
sbb
cmp
push
xlat
fnsave
in
xchg
lods
push
or
gs
or
test
pop
dec
fstpl
subl
cltd
push
xor
loopne
mov
push
dec
push
loopne
mov
inc
xchg
sti
dec
test
das
sahf
and
xchg
xchg
cld
cmp
loopne
cmpsb
in
out
mov
aas
out
mov
fsub
or
sbb
rorl
jle
movsb
and
icebp
icebp
aaa
fdivl
fstps
cltd
pushf
inc
pop
jno
dec
add
push
or
cmp
js
scas
mov
xlat
push
repz
inc
pop
lock
pop
daa
js
cmp
mov
scas
inc
imulb
sub
ret
push
es
or
andb
mov
inc
mov
pop
mov
push
inc
or
inc
jl
and
lea
lahf
mov
sub
sbb
aaa
jmp
addr16
jge
arpl
pop
loope
push
fbstp
sub
mov
cltd
or
and
mov
imulb
mov
negl
mov
push
aad
les
mov
fdiv
mov
out
jg
cmc
std
insb
in
test
dec
test
lods
cmp
mov
adc
jae
test
adc
aaa
adc
mov
aam
jmp
popf
pop
or
adc
je
jno
leave
ror
jns
out
scas
sbb
add
hlt
inc
and
push
es
enter
sub
pop
add
lods
adc
inc
inc
pop
xchg
bound
bound
ljmp
pop
ss
mov
or
pop
idivb
ss
notl
lea
or
cmpsb
cli
lods
xchg
add
sbb
in
mov
movsb
xor
call
mov
xor
adc
lea
mov
xor
lods
add
decl
and
inc
js
add
pop
xchg
repnz
test
fidivrs
out
lods
arpl
loopne
mov
loopne
out
push
inc
popf
es
stos
mov
adcb
mov
cmpsb
lahf
subb
add
sti
cltd
mov
in
fs
xor
jle
inc
scas
push
testl
mov
or
or
aaa
stos
add
push
add
pop
insb
push
nop
scas
inc
mov
pop
cld
into
nop
cs
xor
mov
or
inc
and
in
add
daa
notb
cmpsl
jb
repnz
stc
lock
in
sbb
int3
sti
inc
test
inc
mov
pusha
cmp
scas
lods
pop
incl
fstl
mov
push
dec
addb
lahf
repz
push
call
xor
std
sar
test
in
push
mov
lods
dec
cmpsb
mov
xchg
fmulp
xor
in
ret
or
out
mov
out
bound
xchg
sbb
mov
mov
mov
mov
mov
mov
jbe
testl
mov
in
addr16
les
mov
inc
adc
fdivs
fwait
int
sbb
inc
sbb
jecxz
iret
loope
mov
sub
js
aad
into
mov
jmp
inc
in
imul
pop
scas
adc
fnstsw
lds
push
add
jmp
in
jle
xchg
push
xor
dec
push
sub
movsb
mov
push
fstl
dec
mov
test
int3
sar
in
shll
call
out
pushl
jbe
insl
mov
pusha
arpl
pop
pop
push
pop
dec
in
adc
mov
or
sbb
mov
cmp
out
xor
aad
out
pop
neg
in
loope
pop
in
scas
xchg
xlat
ja
insl
pop
jmp
mov
inc
daa
mov
out
ljmp
sub
mov
push
lahf
ret
aaa
add
pop
mov
nop
xor
cmp
push
cmpsl
mov
fwait
xor
add
dec
dec
add
cltd
mov
iret
cmc
popaw
push
add
inc
sub
cs
cld
lahf
lcall
mov
pop
cwtl
xchg
adc
and
and
aad
fiadds
add
cmp
shlb
aad
scas
xchg
sub
sbb
loope
add
adc
xchg
loopne
mov
mov
mov
out
popa
inc
pop
pop
rcll
inc
add
dec
xchg
scas
int3
mov
scas
mov
sbb
push
push
jmp
jge
sub
lret
mov
cmp
out
inc
cs
lds
arpl
mov
inc
imul
sti
jnp
aas
inc
in
dec
jbe
or
cmpl
sub
mov
rolb
shll
mov
sub
adc
mov
xchg
fcmovne
fdivs
pop
xor
inc
jo
mov
cmp
push
lea
pusha
leave
inc
mov
scas
add
out
add
aas
or
out
push
enter
sbb
lds
test
lods
pop
scas
in
push
mov
mov
out
loopne
sbb
push
testb
stc
jge
xchg
inc
xchg
rorb
or
inc
mov
lcall
sub
js
fsub
xor
dec
push
imul
jg
jp
mov
mov
dec
mov
cltd
std
and
daa
jbe
push
mov
xor
outsb
xlat
scas
add
mov
aas
pop
jle
cmp
adc
adc
push
inc
je
jmp
je
or
insl
in
adc
dec
out
mov
inc
nop
es
adcb
adc
mov
cmc
push
and
ss
addr16
scas
mov
jae
call
jnp
rorl
nop
cmc
or
nop
or
sbb
cmp
mov
mov
movsb
jp
xlat
cmp
js
rcrb
xchg
adc
xchg
push
rcll
dec
adc
jg
xlat
enter
imul
add
ljmp
mov
jo
xor
stc
loopne
je
ja
das
push
xchg
icebp
popa
inc
pop
mov
lcall
cmp
pusha
addl
int
jg
mov
pop
or
mov
xor
mov
or
out
jnp
mov
dec
inc
rcrb
jnp
sahf
and
or
sbb
mov
cltd
mov
xchg
xchg
pop
mov
addr16
jb
jnp
data16
lahf
push
int
fsubs
cld
loop
xlat
hlt
cmpsb
pop
mov
dec
mov
push
mov
push
adc
adc
mov
lods
cmp
leave
addb
mov
mov
fcompl
ret
fstl
and
loopne
sub
or
scas
pop
ds
and
aam
jne
fidivs
loop
mov
mov
inc
inc
or
sub
jbe
xchg
pop
xor
mov
sti
movd
repz
int
shrb
iret
out
lods
xchg
xchg
xor
jae
xchg
aas
enter
push
leave
and
mov
jecxz
mov
cmp
mov
out
scas
and
aam
repz
enter
and
fistl
jle
insb
int
xchg
shlb
ljmp
mov
and
imull
popa
pop
movb
push
jbe
fsubrl
nop
mov
fscale
push
cmp
icebp
scas
iret
pop
sbb
pop
popf
or
pop
adc
fildll
in
test
pushf
test
sub
test
int3
add
cmpsb
inc
or
jg
test
cli
stos
inc
pushl
shll
pop
or
repz
inc
iret
call
sbb
dec
stos
pop
push
inc
movsb
icebp
std
sub
movsb
fiaddl
mov
jg
into
rcr
int
push
cltd
insb
insb
lcall
xor
pop
cmp
mov
rcll
push
or
popa
xchg
cmp
fs
test
cmp
imul
popa
pusha
push
push
mov
pop
pop
mov
lds
push
mov
pop
push
push
mov
adc
sbb
test
mov
lea
ljmp
and
ds
fistl
gs
jg
xchg
pop
xor
fiaddl
jle
leave
pop
aam
jge
lods
nop
nop
pop
lods
add
adc
mov
hlt
xchg
or
inc
push
loopne
fsts
inc
jb
les
sarb
push
and
stc
jl
mov
add
mov
sub
add
inc
pop
mov
dec
test
mov
xorl
rorl
fstpl
out
push
movsl
pop
adc
mov
sbb
and
es
cmp
movsl
ret
in
push
jecxz
out
scas
mov
and
mov
call
dec
cmp
sahf
dec
cmp
push
movsl
outsl
and
xor
jnp
push
popa
enter
lcall
add
fistpll
dec
pop
ror
sahf
mov
xor
aas
stc
stos
push
jmp
push
mov
gs
rolb
ret
inc
push
mov
mov
mov
adc
xor
enter
imulb
or
mov
movsl
ss
push
adcl
sub
jo
data16
in
sub
mov
lret
fcomps
jb
or
fsts
aam
clc
lret
mov
jnp
mov
push
nop
dec
out
cs
mov
add
cmc
mov
aaa
pop
ljmp
aas
pop
xor
in
sub
lcall
dec
add
xchg
mov
les
daa
sub
mov
scas
or
rcl
pop
jge
add
popf
add
subb
mov
dec
add
adc
popa
mov
ds
fisttpl
xor
test
adcb
lds
add
pop
inc
loop
sbb
and
dec
sub
call
push
fidivrl
xchg
das
xor
push
arpl
mov
out
popa
sbb
rorl
jnp
fmulp
pop
comiss
mov
std
in
insl
loope
daa
add
cmc
or
pop
loopne
mov
mov
xchg
jnp
pusha
jne
aas
nop
jb
sbb
les
cmp
xor
repz
orb
xchg
jno
pop
loop
xchg
lcall
stos
icebp
jbe,pn
sub
mov
mov
iret
mov
scas
pop
andl
or
outsb
shr
jne
in
shlb
jno
lea
mov
out
jo
adc
push
cmc
mov
mov
jae
pop
rcrb
and
bound
into
jmp
call
xor
addr16
adc
loop
mov
mov
filds
addr16
inc
adc
sbb
mov
lahf
push
cmc
aad
lret
sti
dec
mov
rorb
pop
loop
test
pop
add
into
aam
cwtl
or
push
mov
adc
sbbb
enter
lea
pushf
sbb
icebp
pop
mov
xchg
stos
aam
cwtl
pop
stos
mov
sahf
sbb
lret
enter
das
scas
xchg
test
dec
jne
inc
jecxz
iret
or
sub
fmull
bound
in
mov
and
pusha
repz
rorl
aam
mov
insb
enter
test
sub
scas
xchg
das
sub
insb
call
shlb
jmp
push
cmp
jb
out
adc
cmp
dec
xor
out
ljmp
das
lds
js
push
imul
xchg
pop
mov
cmpsb
xchg
xchg
jne
or
cmp
sbb
fcmovne
or
cltd
mov
and
sub
mov
jge
jmp
gs
leave
mov
xor
and
mov
adc
mov
cmp
rcr
std
cmpsl
popa
push
sbb
movsb
mov
adc
jns
int
push
inc
and
adc
mov
mov
xchg
mov
push
jmp
sub
xchg
popa
pop
mov
inc
push
inc
std
mov
cld
mov
test
and
xor
testl
rorb
stos
cwtl
jp
pop
out
cmp
mov
clc
cmp
sub
mov
in
cmp
in
lds
imul
gs
inc
sub
or
add
mov
push
cmp
jae
inc
xchg
push
sbb
pop
add
sarb
mov
cmp
xor
sbb
mov
adc
into
pop
fidivrl
icebp
or
adc
pop
jb
pusha
push
adc
shl
or
inc
sbb
adc
push
daa
pop
or
out
insb
sti
roll
inc
fmull
lea
roll
stos
test
mov
pop
fcmove
jnp
call
push
inc
outsb
cmc
mov
inc
ret
mov
scas
xlat
mov
jl
mov
gs
cmpsl
fistps
push
push
inc
xor
clc
sbb
stos
in
sub
mov
mov
jl
push
fxch
add
pushf
pop
test
addb
cmp
jbe
add
bound
ret
rcll
stos
jbe
nop
jge
das
and
mov
ljmp
stos
clc
iret
loope
gs
out
ljmp
ret
pop
icebp
jge
dec
push
pop
pop
out
add
iret
jmp
jmp
subb
dec
or
push
push
dec
mov
fs
jne
jp
jl
xchg
cmpl
pop
scas
in
add
dec
lret
pop
and
jb
push
popf
adc
xchg
mov
cld
repz
pop
out
mov
cltd
push
jl,pn
orps
shl
popf
test
jns
imul
sbb
test
mov
push
imul
pop
test
repz
ljmp
clc
out
imul
loope
pop
pop
or
aad
fdivl
inc
cmp
push
jp
add
lds
fldl
push
lret
mov
add
insb
mov
pop
mov
int3
dec
out
cmp
fisubs
lret
andb
mov
in
adc
cmpsl
pop
nop
push
sub
imul
das
out
insl
jbe
out
in
clc
mov
pop
test
and
mov
gs
xchg
push
sahf
pop
xor
mov
in
mov
push
inc
inc
fidivrs
dec
inc
out
daa
add
cmp
push
pminub
fldl
scas
lods
lock
or
cmc
dec
push
sub
insl
jp
xchg
push
mov
inc
inc
lds
mov
dec
mov
pusha
mov
or
and
jge
push
dec
cmp
loop
push
popf
add
adc
add
mov
push
ret
insb
jle
fcoml
and
cmp
jbe
or
add
repnz
repnz
daa
lea
pop
test
jnp
jp
pusha
push
mov
and
push
push
iret
or
sbb
pop
xorl
add
jp
test
stos
inc
fs
js
lods
cmp
movsl
and
and
pop
xor
jecxz
push
mov
fs
fidivrs
mov
imul
push
nop
cmp
mov
jecxz
jns
cmc
hlt
lea
xchg
icebp
cwtl
pop
in
jno
pop
fcompl
shll
pop
mov
fs
test
ljmp
pusha
xchg
popa
and
xchg
dec
xchg
sub
js
aad
setge
pop
mov
dec
xchg
or
push
outsb
ds
icebp
dec
std
cs
pushf
xchg
mov
pop
stc
add
mov
stc
jb
nop
jno
mov
xchg
mov
adc
mov
mov
shrl
das
cwtl
inc
push
adc
fidivs
jno
mov
icebp
insb
dec
add
push
insb
ja,pn
dec
inc
call
mov
dec
mov
jnp
adc
pop
push
push
in
lahf
sbb
fsubs
pop
pusha
aad
divb
movsl
dec
sahf
ret
xchg
xchg
cmp
ret
fdivrl
push
sub
and
stc
arpl
push
jmp
dec
sub
je
divb
jno,pt
fwait
stc
cmp
repnz
push
xlat
dec
jo
popa
cmp
ss
rcrl
mov
cmpsb
cmp
sub
pop
xchg
mov
xchg
add
sarb
xor
rorb
sub
test
xor
data16
lcall
and
cmpsb
sbb
cmp
jmp
jns
xchg
shrl
pop
xchg
jo
pop
pop
jl
push
cltd
mov
sahf
fidivs
lahf
mov
inc
inc
dec
popa
pop
or
xchg
scas
mov
and
insl
divl
stos
and
xchg
jb
rcrl
mov
stos
stos
stc
fsts
lock
sbb
add
mov
jle
adc
imul
jno
daa
and
inc
xor
negl
fwait
movsb
into
sub
clc
mov
clc
sub
push
std
sub
jp
flds
in
popa
mov
mov
dec
and
dec
dec
mov
lahf
cmp
mov
bound
cmp
cli
dec
fsub
ljmp
aam
lcall
push
sub
cmp
pop
jnp
mov
mov
sbb
je
loope
lds
ret
mov
stos
in
xchg
inc
sbb
aas
inc
add
add
xor
adc
mov
xchg
test
mov
cmp
cmp
jae
testb
cwtl
push
imul
add
out
xchg
and
mov
adc
xchg
les
jl
inc
mov
mov
dec
lret
dec
into
aaa
ljmp
mov
in
cmp
rol
lcall
int3
or
jp
xor
mov
data16
hlt
ss
fistl
push
out
lea
out
les
mov
inc
pop
cli
lahf
xchg
cmp
dec
fwait
or
add
jo
je
mov
sub
lock
jae
inc
inc
xchg
mov
call
pop
push
mov
lcall
add
movsb
pop
jp
inc
and
push
daa
cmp
mov
mov
sbb
add
mov
and
adc
in
add
adc
lahf
fisubs
test
and
jne
inc
add
mov
into
test
mov
lods
jne,pn
jbe
jb
adc
pop
xchg
std
inc
loop
test
dec
je
fyl2xp1
in
push
dec
xchg
inc
jne
xchg
lcall
ret
movsl
scas
test
add
pop
leave
idivl
add
xchg
xchg
xor
mov
pop
ljmp
push
pop
call
sub
enter
mov
jmp
into
sbb
jmp
call
aam
dec
cmc
mov
or
push
dec
xchg
stc
or
pusha
int3
pop
push
ret
jb
inc
das
push
out
xor
mov
or
cmp
add
dec
lcall
aam
in
addr16
mov
and
nop
cmp
jb
xchg
sub
aad
add
add
loope
outsb
xchg
lret
pop
xlat
jbe
std
scas
test
rcrl
loopne
sub
test
sti
cmp
dec
rorl
jg
jae
adc
mov
adc
push
shll
xor
push
lret
pop
test
popf
jo
cmp
ljmp
pop
push
pop
aam
rcll
daa
popf
xchg
arpl
fs
packsswb
dec
push
push
mov
fwait
fs
pavgw
xor
decb
sbb
repz
test
lods
adc
sahf
mov
sub
push
arpl
arpl
add
or
mov
dec
lahf
bound
adc
xchg
xor
jge
inc
jno
iret
movsl
cmpsb
dec
jle
pop
das
sbb
sti
pop
test
ret
test
or
cmp
call
aam
and
stos
mov
sub
fmuls
or
fs
pop
enter
add
cmp
scas
imul
call
mov
pop
and
mov
cmpsb
mov
pop
out
je
ret
iret
and
outsl
ret
adc
sti
cmp
cwtl
jl
cmp
dec
sbb
mov
push
mov
dec
cmc
fldl2t
enter
cmpsl
push
daa
fsubrl
jo
scas
sbb
leave
insb
into
pop
test
push
mov
fsub
jge
mov
movsl
je
arpl
dec
pop
add
fwait
jp
mov
xchg
imul
outsl
outsl
push
hlt
mov
popf
dec
push
mov
repz
in
mov
add
jge
out
jecxz
test
addr16
pop
sti
sub
lahf
or
add
mov
xchg
and
fildll
cmpsb
xchg
call
add
dec
scas
fs
mov
cmp
pop
sub
adc
adc
add
dec
pop
mov
and
cs
mov
loope
aaa
pand
call
das
jnp
ljmp
enter
xor
mov
xlat
sub
stc
aaa
adc
outsl
aaa
scas
dec
pusha
dec
int
inc
push
out
pop
imul
sahf
mov
pop
shrb
adc
out
out
sbb
dec
shr
paddusb
or
push
lods
lods
sub
push
inc
and
add
xchg
mov
jmp
out
mov
outsb
adc
cmc
add
sbb
sti
div
pop
adc
or
add
sbb
sub
aas
testl
inc
cli
jl
jne
sbb
or
jp
mov
std
in
bound
inc
aaa
inc
pusha
fucomi
imul
sbb
jg
pop
mov
gs
add
dec
pop
aad
push
js
test
out
adc
xchg
js
mov
mov
mov
and
aam
push
popf
dec
rorl
xor
mov
cmp
jae
xor
or
out
outsb
inc
scas
stc
fnstenv
pop
mov
pop
push
into
mov
in
dec
andl
dec
bnd
cmc
mov
rcrl
sub
mov
push
fwait
and
sub
cli
repz
mov
fs
lods
pop
daa
test
mov
jl
dec
out
dec
or
push
bound
xor
pop
and
xchg
and
fucomip
movsl
mov
gs
iret
jno
mov
sub
xchg
rclb
mov
push
rcr
scas
gs
cmp
imul
les
xor
adc
je
inc
je
ljmp
pop
mov
dec
cmpsb
dec
ficoml
mov
adc
imul
add
push
dec
mov
lea
gs
fmuls
cwtl
cmp
mov
pop
in
jo
mov
inc
and
sbb
and
mov
stos
stc
push
jno
ret
mov
test
add
inc
cmp
ds
testb
rorl
popa
sbb
daa
and
xchg
mov
xchg
fs
jb
ja
in
mov
add
dec
mov
xchg
cmp
jl
popl
or
mov
rcll
push
shrb
in
or
fnstsw
je
mov
mov
push
push
jno
dec
out
in
dec
and
xchg
mov
sbbl
sbb
stos
cwtl
aam
push
scas
int3
jmp
adc
push
sbb
iret
add
mov
lret
pop
popf
xchg
sub
jmp
mov
mov
jl
test
lea
mov
inc
xor
or
es
add
jbe
sbb
outsl
imul
or
int
ret
push
lods
dec
mov
gs
fiadds
std
fwait
xor
adc
cmc
mov
pusha
lahf
and
pop
pop
cli
sub
sub
xor
xlat
das
test
popf
jl
leave
push
adc
pop
jnp
dec
nop
fdivs
lods
outsb
aas
mov
mov
ja
out
rol
fcmovbe
inc
mov
lea
repz
scas
lods
es
std
fists
xchg
sub
add
cmp
pop
cmp
xchg
jne
and
sub
inc
aam
roll
xchg
loope
loop
hlt
pop
loope
ljmp
mov
mov
jbe
xor
mov
rorb
imul
daa
dec
dec
jl
and
adc
shr
jp
sahf
pop
popa
stos
in
xchg
repnz
insb
lret
adc
in
cmp
dec
das
cmp
cwtl
xchg
fwait
or
and
ljmp
hlt
popf
adc
mov
push
sar
push
outsb
push
or
mov
add
pop
lcall
pcmpgtb
mov
add
sti
xor
aam
add
pop
test
cmc
divb
fldl
xor
test
test
jmp
je
add
cmpsb
mov
push
pop
andb
cmp
mov
sbb
scas
push
push
mov
into
cmp
push
xchg
cmp
rolb
mov
dec
mov
mov
pop
aas
ljmp
jmp
inc
mov
loope
add
int3
inc
jnp
push
ret
iret
xor
xor
and
pop
lahf
loop
and
das
pushf
xor
cmp
out
cmp
xchg
dec
mov
pop
outsl
bswap
push
dec
out
add
stos
cmc
sbb
ret
setnp
pop
mov
icebp
xchg
in
add
mull
lret
dec
inc
loop,pt
aas
sbb
xlat
ret
push
jmp
shrl
mov
inc
je
in
fcom
sbb
test
rorb
xchg
sub
lcall
scas
or
xchg
loopne
ficompl
test
pop
lret
dec
xchg
fidivl
xchg
mov
add
test
insb
sbb
pop
cmpsl
pop
pop
flds
mov
or
pop
bound
or
xor
lahf
or
inc
jbe
mov
loop
pushf
add
xor
jle
sbb
ljmp
inc
jns
aaa
mov
in
add
cmpb
fcoml
xor
sti
fsubr
sbb
and
outsb
sbb
jo
inc
loop
test
and
test
jo
xlat
int3
imull
bound
pop
ljmp
pop
sub
test
mov
shll
sti
mov
sbb
loopne
adc
sahf
xchg
mov
xchg
loope
int
mov
adc
mov
enter
push
dec
add
or
dec
in
dec
outsb
inc
js
xor
mov
out
xor
pusha
cwtl
push
popa
push
fstpt
dec
cmp
stos
mov
mov
shl
lcall
inc
push
inc
std
push
and
les
ds
dec
ficoml
cld
cmpsb
mov
divb
lahf
out
pop
negl
jecxz
std
mov
in
std
jbe
inc
jl
cmp
popf
mov
ret
stos
push
mov
or
lock
and
imul
pop
adc
mov
sbb
add
fwait
mov
inc
fwait
xchg
inc
push
push
jge
in
fdiv
cmpb
mov
bound
mov
push
xor
in
adc
sbb
sub
pusha
xchg
dec
movsl
cwtl
incl
cmp
scas
idivl
cmc
dec
call
pop
sbb
lds
jae
mov
les
jbe
push
or
test
mov
pop
in
jae
sahf
hlt
sbb
std
lret
sahf
mov
in
xor
call
roll
jmp
movsl
jle
jae
jmp
shrl
adc
jno
daa
or
dec
jo
mov
js
stos
xchg
test
stos
mov
sbb
jbe
aam
popa
pop
lret
jno
rcll
ror
push
jae
fsts
mov
mov
stc
xchg
out
frstor
cmp
lock
std
jne
push
popf
sar
fisubl
pop
cmpl
rorl
inc
adc
xor
push
sub
ds
cmp
mov
cmp
call
or
bnd
outsl
pop
or
scas
xor
lods
std
xor
inc
xchg
and
add
xor
adc
dec
jle
jne
ret
push
repz
mov
xchg
mov
repz
adc
push
dec
dec
add
push
mov
push
xor
insl
hlt
sub
shll
jle
adc
cmc
jg
add
xchg
mov
xor
lea
sbb
xor
dec
sub
jmp
xor
xchg
dec
lock
mov
add
fimull
test
push
mov
mov
mov
ljmp
push
pop
dec
and
or
xor
insb
loopne
fstp
mov
out
mov
lcall
loope
loop
imul
cmpsl
pop
sub
sub
adc
inc
add
add
jmp
mov
in
into
cltd
fdivrs
imul
mov
mov
shrb
and
cvttps2pi
out
mov
jg
lret
cltd
jns
sbb
mov
cs
dec
dec
sarl
shll
dec
aad
out
dec
data16
hlt
mov
mov
push
mov
sub
push
lret
dec
cmc
sahf
mov
push
adc
inc
jecxz
lods
add
add
pop
jbe
dec
scas
movsl
push
pop
add
dec
stc
mov
mov
hlt
sub
dec
scas
dec
and
lock
rcl
jno,pt
sti
inc
fs
mov
mov
loopne
and
xor
mov
out
repz
pop
sbb
inc
or
div
inc
xchg
xchg
xchg
push
adc
outsl
dec
je
xchg
movsl
lock
add
and
rcrb
push
or
jns
arpl
or
push
dec
js
and
cmc
adc
das
lcall
fcompl
lahf
mov
jb
fnsave
loop
xor
mov
shr
and
mov
stos
sbbb
repnz
jl
outsl
push
lret
loop
out
andb
sbb
xchg
test
mov
fisubrl
xor
out
mov
cmp
add
lcall
out
movsl
or
mov
push
xor
jle
fldenv
dec
xor
sbb
pop
imull
je
cmp
xchg
scas
and
mov
testb
mov
xchg
daa
add
sub
adc
addl
bound
xchg
mov
mov
xor
sbb
fiadds
and
push
mov
testb
je
dec
sahf
push
push
mov
xchg
xor
lds
mov
rorl
push
aaa
push
ret
and
rcr
stc
push
dec
sti
ret
inc
in
pop
pop
and
or
xor
mov
test
or
mov
pop
ds
ljmp
fwait
insl
inc
dec
cs
in
imul
mov
ja
jle
aaa
sbb
or
jno
cmp
dec
cmc
fidivrl
lret
je
mov
jbe
imul
ss
adc
icebp
flds
jnp
sbb
mov
sbb
push
cmpsl
mov
fisttps
mov
lock
cmp
jmp
rolb
sbb
inc
ret
std
arpl
aam
pop
xrelease
or
or
stos
dec
daa
dec
js
push
repz
push
sbb
ljmp
aas
cmp
nop
das
mov
stos
nopl
mov
insb
or
daa
adc
mov
sbb
pusha
push
dec
inc
orb
nop
mov
xorl
adc
cld
jae
repz
mov
lods
xchg
mov
xor
mov
xlat
outsl
jo
out
lods
loop
jmp
stos
lds
or
xor
adc
pop
inc
daa
orl
lahf
mov
sbb
call
pop
rcrl
in
js
sbbb
xor
mov
inc
xlat
jae
xor
idivb
pushf
mov
jl
int3
sahf
test
and
or
movsb
in
sbb
push
fucomp
xchg
jno
out
pop
sub
loop
xorb
outsl
or
mov
add
inc
clc
jb
shl
cmp
sbb
mov
mov
push
push
jae
fcompl
adc
outsl
fstpl
cmp
pop
sub
fs
out
sub
sarb
add
sti
mov
mov
mov
or
dec
in
cmp
cmpsb
out
mulb
imul
add
out
jns
arpl
or
inc
mov
mov
cltd
push
daa
jmp
lea
mov
adc
imul
sahf
sub
xor
sbb
push
je
lea
mov
jl
lock
scas
ss
ss
lock
out
jmp
jge
or
push
cmpsb
scas
cmp
cs
inc
ja
in
clc
pop
add
jmp
mov
jne
lds
pusha
pop
or
adc
jbe
jl
xchg
jns
mov
fdiv
xorb
jge
pop
test
in
jge
push
out
repz
shlb
pusha
or
push
les
stc
or
sub
sbb
sti
hlt
dec
loope
cmp
inc
in
out
fildll
fsubs
mov
dec
pop
lret
ds
sarb
sub
into
cmpsb
stos
push
in
add
shll
push
stos
ficoml
inc
cmp
imul
imul
addl
in
scas
outsl
fcmovne
in
in
aaa
xor
scas
and
lock
loop
cmp
loope
fwait
pop
ss
xor
test
enter
cs
xchg
cld
sbb
or
lahf
jb
mov
sbb
dec
adc
bound
jmp
orl
arpl
mov
mov
fwait
xchg
jne
loopne
ret
push
pop
shl
sub
mov
or
cmp
mov
fcom
mov
iret
cwtl
mov
cmpsb
sub
and
aas
repz
adc
and
scas
xor
popa
mov
add
jge
dec
inc
push
test
ljmp
sbb
and
test
jmp
or
and
icebp
sub
mov
sbb
sbb
out
pop
loope
and
ret
ljmp
push
mov
fld
jg
push
jns
cmp
cmp
leave
jle
aad
rorb
jge
push
jns
sarb
push
push
jmp
xor
dec
cmp
jo
adc
cwtl
or
pushf
xchg
shlb
ret
lods
cwtl
divl
faddl
jbe
push
sarb
enter
lock
shl
mov
scas
ss
out
xor
jo
je
push
js
sub
add
mov
xorl
push
add
sbb
xorl
lret
repz
push
bound
lret
mov
push
jbe
insl
push
xchg
xorb
mov
and
pop
sub
xor
das
adc
xor
add
inc
mov
call
xchg
or
jb
and
dec
jecxz
mov
ret
lds
mov
shlb
sub
sub
addb
insl
gs
dec
das
pop
loop
push
pop
push
or
cmp
roll
mov
adc
in
push
or
imul
cmp
daa
ljmp
mov
cmp
outsl
sub
jns
adc
test
aaa
addr16
sbb
imul
jbe
testl
rolb
adc
js
mov
inc
insb
adc
enter
test
sarb
das
push
mov
jg
and
lock
rclb
jle
xor
stos
enter
sub
push
sti
lahf
stos
test
dec
add
push
cmpsl
cs
xchg
addr16
mov
jne
aad
xor
lds
or
mov
shlb
in
adc
adc
pop
xor
mov
into
decl
aas
cli
adc
outsl
mov
scas
repz
pop
lahf
mov
lods
dec
push
orb
sahf
cs
sub
rorb
xchg
inc
ror
jp
xor
popa
push
and
dec
lret
out
pop
sub
imul
addl
cmp
sub
xor
add
xor
cmp
arpl
jae
neg
mov
imull
mov
mov
xlat
lea
dec
stos
mov
inc
adc
popa
cltd
pop
xchg
add
out
sbb
mov
rcl
or
xlat
inc
pop
or
popf
pop
in
push
pop
or
xor
aas
clc
push
in
pop
aas
movsb
leave
scas
xor
dec
inc
push
repz
push
sub
cmp
loop
and
notb
and
out
scas
fdivs
xorb
cmp
mov
mov
pop
daa
loopne
mov
dec
mov
mov
mov
lea
call
add
fnstcw
mov
push
clc
dec
mov
enter
jae
cmp
ret
mov
in
fdivs
popf
stc
pop
inc
cltd
pop
fistpl
in
push
xor
mov
mov
cmpsl
mov
scas
iret
sti
jo
data16
cmp
inc
xchg
xlat
or
or
cwtl
int3
mov
fiaddl
data16
shlb
sbb
pusha
or
int
imul
dec
sahf
sbb
inc
test
dec
and
loop
jbe
mov
mov
adc
idivl
jo
fdivrl
loop
imul
or
push
and
mov
dec
into
add
rcll
jp
addl
inc
nop
xchg
jle
add
inc
rorl
pop
add
int3
add
ret
mov
xchg
lahf
loope
cli
fs
mov
pushf
int
sysenter
rcr
icebp
push
pop
or
push
mov
loope
dec
cmpb
test
test
lahf
dec
out
adc
add
dec
xor
js
aam
addb
push
jmp
add
push
loope
ljmp
mov
test
fisubrl
mov
xor
sub
sti
popa
jmp
stos
rcl
dec
test
stc
cmpsb
pop
inc
mov
xchg
out
pop
int
ret
ficoms
into
sbb
inc
sub
cs
sbb
imul
lods
loopne
es
dec
push
or
lret
sub
jbe
sub
jne
imul
sbb
lret
jne
mov
push
aas
jge
sub
inc
mov
lret
xchg
xor
insl
xchg
pop
roll
push
xor
sbb
ss
xor
fwait
loop
frstor
mov
add
mov
cmp
inc
xchg
ljmp
das
ss
jbe
push
bound
mov
cmp
mov
scas
or
imull
push
std
insl
orb
adc
and
test
imul
cmpsb
lea
and
sub
xor
xor
movsl
mov
lcall
pushf
xchg
sbb
or
mov
jecxz
mov
sarb
lea
cld
sbb
repnz
cmp
sub
rorw
adc
pop
stos
fcomp
cmc
sar
shl
rorl
cltd
movsb
mov
lods
mov
pop
sub
je
push
jl
push
iret
pop
fnstcw
xchg
inc
mov
out
and
and
daa
insb
push
ror
pop
mov
rcll
mov
rolb
sbb
rcrl
push
ljmp
shll
sub
add
add
push
mov
add
jbe
imul
lods
fwait
add
leave
and
mov
test
iret
insl
and
int3
sets
add
je
jmp
popf
sub
cmp
xor
jbe
das
cmp
bound
and
sub
fildl
pop
fwait
lods
or
jae
fistpl
mov
cltd
iret
push
stos
mov
mov
mov
dec
pop
imul
mov
movsb
shr
or
mov
loope
loopne
test
xchg
popa
mov
outsb
mov
dec
xchg
pop
sarb
insb
mov
push
xchg
inc
mov
cmp
lods
in
xchg
or
in
int3
in
push
lahf
push
sbb
mul
adc
in
les
xor
pop
pop
cmpsl
fdivrs
xchg
adc
jae
rcll
adc
cmp
push
out
sub
xchg
repz
jno
push
lock
popa
rcrl
xor
dec
ficoml
cmp
jmp
or
dec
pop
lods
xchg
fsubrl
aas
pop
xchg
ficomps
xor
sub
mov
jp
cld
shl
fwait
push
inc
xor
in
aas
loope
in
cmpsb
add
pop
loop
cld
call
jns
sbb
or
xor
mov
xor
sub
mov
imul
shl
inc
xor
movsl
out
sbb
sbb
push
inc
inc
pop
mov
and
fs
orl
andl
mov
mov
test
cs
sbb
and
loope
roll
pop
push
cmpsl
jl
out
pop
xlat
cwtl
jo,pt
add
xchg
shrb
call
ret
xchg
xorl
stos
push
sti
mov
mov
sub
mov
sub
inc
sbb
mov
scas
push
push
int
xchg
mov
in
pop
insb
shl
dec
les
mov
in
pop
cmp
mov
repnz
das
ljmp
adc
cltd
jb
popa
xor
test
loope
test
xchg
lods
pop
xchg
fwait
mov
loope
fmuls
jle
in
sbb
pushf
shlb
xlat
mov
lahf
in
adc
mov
jg
out
sub
jge
add
out
ret
test
dec
mov
mov
sub
pop
lret
xchg
jae
aas
adc
pop
xor
jp
jp
sahf
jns
lret
sbb
shll
mov
out
sbb
and
insl
inc
push
ffreep
jg
and
mov
mov
or
xor
mov
dec
cld
jae
mov
std
jae
sti
inc
mov
xchg
cmpsl
sub
adc
mov
mov
inc
mov
jl
outsb
dec
adc
mov
push
jmp
loope
bound
in
jl
fimuls
mov
jo
inc
cmc
daa
dec
lret
pushf
mov
into
push
jb
and
rolb
cmp
rorb
pop
dec
adc
pusha
pop
mov
add
xchg
xor
repnz
push
popf
mov
int
pop
lea
xchg
stos
mov
and
mov
fisttps
adc
clc
inc
inc
adc
push
jle
shlb
dec
pop
and
or
push
or
sti
inc
cmp
push
andl
lret
aas
cmp
mov
jl
jmp
pop
mov
bound
push
test
clc
mov
jo
push
add
repnz
mov
cld
and
mov
mov
test
loop
orl
and
orl
push
repz
xor
inc
mov
sub
arpl
and
jbe
movsb
cmp
cmp
ja
xchg
in
adc
inc
jmp
pop
ljmp
adc
fmull
divb
mov
loop
aaa
fcoms
shrl
insb
sarb
or
jno
out
iret
lods
mov
cmp
xchg
add
pop
aaa
bts
mov
push
outsl
js
fdivrl
test
fwait
out
sub
pop
xchg
sbb
xor
fsubl
or
gs
inc
fsub
aaa
movsb
sub
adc
movsl
in
outsl
cs
push
leave
into
mov
lds
jmp
mov
pop
lcall
data16
dec
pop
sub
cli
addr16
lahf
cwtl
lahf
add
or
mov
loopne
mov
lods
dec
sbb
fildll
addr16
fbld
and
sbb
jbe
jecxz
ja
call
xchg
subb
cmpsb
adc
and
ret
mov
pop
ss
aaa
popfw
or
adc
mov
test
jp
shrb
and
dec
test
dec
cli
mov
jb
cmpsb
call
cwtl
repz
je
dec
and
fs
or
xor
repz
fchs
sub
or
movsb
clc
dec
inc
dec
test
add
call
fwait
shlb
push
push
mov
test
dec
movsb
xor
xchg
mov
or
jl
sub
icebp
dec
ja
stc
cmp
xor
mov
test
pop
sti
das
push
adc
lods
jns
xchg
mov
into
ja
inc
adc
ss
push
or
adc
or
scas
movsb
jecxz
punpckhbw
add
addl
push
mov
ret
cmp
jb
shlb
in
inc
daa
leave
out
jmp
aas
mov
lock
arpl
aad
sbb
out
mov
add
in
movsl
mov
rol
icebp
xlat
ret
out
mov
sti
and
clc
dec
pop
push
lea
inc
mov
dec
mov
pop
xchg
sbb
adc
lret
mov
jb
and
sbb
sbb
scas
pusha
scas
mov
shlb
roll
adc
imul
fsubs
cmp
fld
movsb
xchg
lods
push
pop
dec
xor
push
push
fstpt
cmp
lret
mov
addr16
lds
enter
mov
inc
subl
mov
jo
test
js
jg
xlat
xchg
jge
lret
mov
pop
hlt
mov
add
inc
or
mov
sarb
pop
cs
imul
mov
rcrb
or
test
sub
orb
insb
out
jl
insl
push
stos
adc
cmp
mov
push
movsb
mov
sbb
push
push
and
sub
jae
adc
push
dec
dec
cmp
push
jmp
push
adc
imul
xchg
mov
repnz
ja
in
rolb
or
push
jne
cs
in
lret
cli
mov
lods
or
lret
ss
xor
push
inc
sbb
inc
xor
dec
fimuls
adc
fcoml
xchg
cs
push
mov
insl
mov
sub
mov
xchg
mov
sub
pop
adc
arpl
sub
jnp
hlt
insl
cs
pop
in
sub
das
dec
mov
jmp
cmp
mov
sub
sub
jne
dec
sub
jmp
in
mov
push
sarl
mov
call
arpl
rcll
pusha
int
and
lods
xor
lds
adc
dec
dec
js
addr16
add
pop
int3
mov
pusha
xor
jb
pop
mov
xor
pop
and
inc
and
dec
sbb
shl
hlt
outsb
in
scas
rorl
ljmp
push
icebp
pop
inc
adc
lahf
enter
sbb
fcoms
daa
in
out
inc
pop
push
inc
enter
pop
and
jecxz
dec
push
out
add
aam
cmp
subb
je
es
cmc
popf
jg
adc
roll
jp
jbe
addr16
jl
pop
sub
cmc
pusha
movsl
xor
mov
mov
icebp
mov
ds
out
adc
test
repnz
mov
jbe
cmp
mov
add
xchg
ficomps
dec
xor
xlat
and
test
fildl
imul
jb
add
movsb
jl
push
sub
jo
push
ret
fucomp
pop
xchg
pusha
push
fisttpll
inc
mov
adc
jb
in
mov
fwait
orb
pfmin
into
inc
movsl
in
call
jecxz
xchg
inc
or
pushf
fsubrs
das
push
je
incb
cli
and
dec
jnp
pop
aad
int
int
cmp
adc
or
xchg
in
insb
call
inc
testb
std
ss
jge
orb
pop
inc
dec
sbb
push
or
cwtl
sbb
rol
or
inc
lods
scas
cmp
jl
jmp
sub
push
mov
jge
aaa
xchg
cltd
dec
mov
jle
nop
pextrw
mov
push
or
inc
cmpl
and
sbb
arpl
jge
mov
push
or
scas
mov
adc
adc
mov
stos
add
sbb
and
int
pop
lret
stos
repnz
mov
xlat
and
insb
dec
cli
xchg
sub
jecxz
jne
or
or
aad
psadbw
or
add
jae
aaa
and
sub
and
rorb
cmpsl
cmp
pop
mov
clc
nop
into
push
inc
mov
cmc
xchg
mov
add
push
loope
mov
add
in
lret
aad
cmp
dec
add
pop
adc
mov
stos
push
inc
cltd
fbld
sbb
popf
filds
mov
lods
aas
pop
pusha
popa
and
mov
bound
jb
test
clc
gs
xchg
xchg
or
lds
cli
call
loope
push
mov
pop
mov
xchg
popa
add
jge
subb
ficoml
mov
je
push
and
mov
repz
pop
push
sbb
test
and
sbb
cmp
sub
out
leave
fisubs
push
jbe,pn
je
ljmp
lret
xchg
and
mov
sbb
adc
and
arpl
je
inc
lods
push
dec
mov
cmc
mov
cmp
loopne
jle
mov
mov
or
pusha
rcll
cmp
sub
ljmp
loop
push
mov
and
sbb
in
pop
js
lods
shlb
inc
inc
inc
icebp
push
mov
mov
add
icebp
add
sahf
lock
inc
inc
fsubr
adc
outsb
xchg
mov
std
cs
cmp
hlt
movsl
and
sbb
js
fisubl
in
stos
mov
fs
jb
test
jo
fidivrs
mov
mov
pop
xchg
popa
inc
outsl
jnp
adc
movsl
lret
pop
mov
sbb
nop
lea
adc
ljmp
xchg
jb
pop
xor
cltd
cli
or
mov
cld
adc
jp
mov
adc
push
sahf
xchg
jno
mov
paddq
test
pop
sub
or
fldcw
jno
loope
jns
cmpsb
nop
lock
inc
mov
sub
lock
xor
mov
push
stos
nop
cmp
sbb
inc
stos
out
xor
mov
out
mov
and
repnz
pop
loopne
jle
in
mov
stos
jl
movsl
mov
xchg
cmp
pushf
aam
sbb
cmp
shrl
test
sarb
pop
jl
dec
sub
dec
pop
cmp
cltd
stc
or
mov
mov
test
sub
cltd
iret
insb
pop
add
fldcw
jge
add
insb
pop
lar
mov
mov
xor
cltd
fidivl
sahf
pop
cmpsb
sub
and
pop
js
sbb
mov
popf
add
inc
aam
cmp
dec
xchg
dec
adc
mov
out
insl
push
sbb
lcall
rorl
fwait
popf
sub
aad
nop
jmp
and
ret
pop
adc
cld
fists
and
mov
mov
lret
xchg
push
push
mov
mov
in
inc
sub
or
xchg
adc
ret
adc
hlt
out
add
scas
mov
mov
add
enter
jecxz
pop
loop
inc
std
arpl
repz
sub
int
arpl
popf
test
xor
cmpsl
decb
adc
rclb
mov
xchg
xchg
mov
jmp
dec
sbb
cmc
loope
divl
in
inc
cmp
lea
imul
out
insl
sbb
fnstsw
pop
mov
cmp
jmp
insl
out
fsubrs
popf
lock
mov
sti
movsb
sarl
cmc
es
mov
adc
jle
mov
xchg
cmpsb
inc
pop
lcall
adc
or
repnz
xor
push
lods
pop
or
nop
add
arpl
push
aad
sti
js
push
in
std
nop
test
lahf
add
ljmp
mov
ja
pop
inc
sbb
lods
call
fistps
shrl
dec
mov
jbe
add
or
call
imulb
and
dec
sub
ja
and
add
sub
fbstp
clc
lret
stos
xor
int3
scas
pushf
jecxz
add
test
mov
fimull
xor
or
add
insl
call
sbbb
cmp
add
ret
and
sub
mov
jle
fsubl
daa
movsl
or
scas
sbb
mov
jno
mov
mov
push
xor
jnp
daa
mov
xchg
lods
fadds
push
mov
test
sub
les
scas
imul
dec
pop
and
add
cmpsb
lea
or
pop
faddl
cli
flds
arpl
sub
xchg
dec
cmpsl
xchg
es
inc
in
push
arpl
sbb
add
aas
cmc
cmp
ja
jl
sub
jp
push
out
shl
addb
sahf
push
sbb
cs
cltd
sti
sbb
imul
dec
xorl
mov
jge
test
je
sahf
mov
daa
cwtl
mov
cs
mov
add
das
jnp
mov
inc
inc
push
outsb
jl
inc
fsubl
decl
test
add
rorl
inc
cmpl
adc
jnp
push
mov
push
out
fdivl
cmpsb
ja
pop
xchg
mov
lods
adc
dec
repz
pop
mov
clc
and
push
xchg
inc
and
call
adcb
inc
cmp
fs
shrb
lds
pop
jnp
xchg
mov
addr16
xchg
pop
or
mov
dec
cmp
xor
xchg
js
pop
push
lock
dec
incl
fwait
hlt
fsubrs
adc
sub
mov
jo
mov
or
mov
push
ficompl
lock
xchg
testl
mov
inc
jbe
mov
xor
scas
lds
add
jg
dec
cmpl
pop
mov
mov
sub
sbb
pop
ror
dec
or
iret
cmp
dec
jns
fs
lea
imull
push
cmp
jns
mov
cmc
minps
scas
shlb
sbb
push
sahf
ret
mov
pop
adc
jo
cmpsb
cmp
jb
mov
sbb
imul
loope
and
inc
xor
jmp
inc
mov
cmp
fbstp
out
sbb
test
mov
and
inc
aad
jbe
scas
mov
cli
and
adc
nop
cmpsb
mov
cmp
aas
icebp
mov
pusha
jns,pt
loopne
je
inc
nop
mov
aaa
xchg
out
jp
into
loopne
shrl
push
cmpsl
and
or
out
pop
cltd
add
or
pusha
xorl
movsl
ror
call
jae
out
pusha
sbb
push
xchg
dec
ss
subl
pusha
jg
xchg
mov
pop
roll
lea
test
xor
add
and
mov
xchg
mov
xchg
nop
push
lahf
scas
pop
shl
loope
addr16
shr
stos
lods
arpl
dec
ret
movsb
jne
jp
mov
xor
daa
dec
jbe
xor
sbb
push
lahf
daa
adc
pop
sub
mov
inc
shll
mov
jg
pop
sbb
jo
cmp
test
adc
pop
xor
cmpsl
outsb
cmp
sub
sub
pop
push
dec
sbb
xchg
inc
mov
ljmp
adc
mov
adc
ss
sbb
pop
gs
aaa
pop
lds
jp
nop
in
lret
lret
cmpsl
cmp
xchg
les
notl
adc
fisttpll
loopne
lret
aad
inc
adc
jno
add
push
xor
mov
cwtl
cmpb
mov
call
mov
ss
jns
and
cmp
xchg
mov
pop
cmp
mov
ja
mov
xchg
cmp
aad
adc
pop
inc
jge
int3
push
mov
pop
flds
mov
cs
cmp
push
divb
sarl
pushf
loop
and
and
ret
sub
loope
lds
loopne
das
or
wrmsr
mov
push
int
fidivs
insl
cli
xchg
dec
lds
ftst
lret
ret
pop
add
outsb
cmp
sub
push
repnz
and
enter
inc
dec
mov
mov
pop
push
idiv
stos
inc
mov
mov
pop
dec
inc
sub
lret
inc
and
ret
hlt
shrb
outsb
data16
inc
inc
pop
dec
aad
jne
xor
scas
xchg
cmp
lock
dec
sbb
mov
cmp
and
mulb
loop
rorb
cmp
fwait
push
mov
mov
jle
mov
das
pop
gs
dec
stos
cmp
mov
lcall
lret
arpl
and
pop
jbe
pop
jnp
test
dec
lcall
cmp
cmp
xchg
mov
sub
push
lcall
sti
dec
test
sti
lds
xchg
fildl
aam
cmpsb
repz
xor
stos
xor
movsb
push
push
in
adc
lfs
add
scas
leave
or
outsl
jo
dec
insl
mov
fstpt
pushf
pop
xlat
in
push
lcall
hlt
or
sbbb
aas
sub
sub
push
lods
jmp
mov
mov
pushf
cmc
push
xchg
aam
cld
xlat
cmp
push
sub
dec
mov
push
push
mov
and
mov
jle
rcll
cmp
stc
xchg
outsb
mov
inc
jo,pn
lock
mov
cmp
test
mov
clc
or
sbb
push
in
mov
push
repz
inc
jnp
outsb
shll
jbe
jecxz
or
inc
outsb
and
int
jge
mov
inc
adc
es
adc
xor
aas
or
rorb
jmp
sarb
lret
pop
pushf
jo
pop
xchg
push
pop
mov
xchg
push
imul
outsb
jo
lods
test
xorl
pop
xor
inc
lods
sbb
add
push
and
xchg
mov
sbb
lds
fstl
mov
movsl
mulb
jns
rcr
cmp
cmp
stc
jo
pushf
lret
cmc
inc
loop
ret
inc
outsl
push
fistpll
cmp
sar
cmp
add
mov
stc
icebp
xor
ds
loope
lret
jmp
je
or
movsb
outsb
shl
fiaddl
stos
jbe
daa
ss
rolb
add
jle
mov
cmpsb
test
leave
push
outsl
js
orl
mov
push
mov
jne
jbe
dec
push
imul
xchg
xchg
fsubl
xorl
jne
and
pop
mov
mov
dec
ret
pop
es
insl
lahf
add
clc
adc
sarb
outsl
icebp
push
adc
cwtl
or
out
pop
sub
xor
cmp
je
movsl
and
and
push
mov
xchg
mov
jno
mov
clc
or
enter
jne
cmp
mov
out
adc
rcr
mov
ljmp
push
imul
popf
adc
movsb
call
call
shrl
push
push
dec
mov
xchg
push
mov
inc
dec
mov
test
int
push
mov
jecxz
leave
fdivs
ja
fisubrs
cmc
push
push
ret
out
jmp
lods
adc
sarl
inc
xor
in
mov
out
mov
cltd
or
in
push
xchg
iret
inc
or
pop
inc
out
nop
jge
in
pop
out
pop
cmc
stc
sub
adc
xlat
jl,pn
in
out
pop
xor
test
jecxz
ja
xlat
test
inc
test
push
neg
pop
addr16
outsb
lods
mov
pusha
loopne
xchg
dec
xor
cmp
pop
xchg
push
mov
mov
pop
xchg
sub
mov
mov
mov
fwait
imul
push
cmp
repz
cltd
xor
sub
xlat
or
dec
fsts
test
sub
pop
fstpl
and
jb
or
and
push
jle
jne
sbb
gs
pop
lock
sbb
adc
je
mov
cld
cmpsl
pop
mov
fsubl
fstpt
call
xor
icebp
dec
xchg
cmp
testb
xchg
adc
lret
xchg
pop
mov
pushf
dec
push
xor
cwtl
sbb
mov
cld
js
stos
jmp
mov
fisubs
call
sbbb
movsl
arpl
loop
mov
shll
push
push
fs
inc
sbb
mov
sub
lret
dec
imul
ss
jge
sub
lret
jae
stc
in
and
dec
inc
incb
mov
pop
mov
movsl
xchg
ljmp
lock
adc
jmp
movsb
aaa
rorb
test
fstps
loop
test
shrb
xchg
out
scas
xchg
inc
icebp
sbb
fistpll
sbb
inc
mov
test
add
ss
jg
js
sti
scas
inc
popa
or
jne
pop
inc
mov
sbb
sti
insb
mov
dec
add
jne
cmpsb
in
xchg
lds
mov
dec
jmp
out
xor
push
mov
dec
push
iret
jle
test
into
mov
pop
nop
push
jo
push
cwtl
xorl
push
sub
push
jmp
js
test
xchg
xor
inc
xchg
mov
adc
mov
movsb
jmp
adc
hlt
lahf
insb
fxch
out
es
imul
cmp
cmp
cwtl
fcmovne
mov
push
sub
out
loop
push
xor
mov
andl
adc
cld
push
jl
pop
leave
shrl
or
fcmovne
or
sbb
stos
jno
scas
or
mov
addr16
adc
cli
and
fcmovnbe
lret
sub
lahf
subb
andb
aaa
bound
test
outsb
pop
cmp
jge
mov
mov
and
js
int3
jne
shl
add
pusha
aam
cs
bswap
lods
mov
fimull
cmpsb
mov
dec
ljmp
test
js
push
jle
pusha
testb
sbb
inc
lock
in
mov
mov
and
and
pop
jbe
in
cmpsl
ret
and
pop
pop
and
push
insb
mov
insb
test
in
test
shll
push
mov
sbb
add
dec
dec
fwait
and
push
ror
cmpsl
loop
pop
fdivs
xchg
dec
lods
lds
test
jge
shll
cmovnp
mov
and
jno
in
xorl
sub
push
stc
add
mov
sub
mov
fbstp
xor
imul
cmp
mov
lds
in
jge
mov
hlt
dec
inc
mov
and
icebp
leave
clc
dec
aas
dec
aas
fs
adc
lahf
out
pop
lret
int3
movsb
fidivrs
pop
inc
pop
add
fldl
inc
inc
adc
or
mov
cli
repz
dec
mov
mov
data16
ja
std
outsb
or
fwait
mov
cmpb
sbb
sub
xchg
lahf
push
das
fcomp
inc
pop
adc
cli
jmp
lcall
pop
ficomps
cmpsb
mov
pop
mov
xor
push
cmp
test
jl
or
ret
sub
xor
xchg
pop
stos
es
les
enter
test
repz
out
push
push
jo
sbb
mov
push
add
fs
movsb
mov
das
sbb
dec
xor
inc
gs
pop
stos
sub
stos
enter
pop
loopne
outsl
dec
je
aaa
and
push
pause
push
cmpl
test
out
in
adc
bound
inc
xor
lods
mov
rolb
inc
ficoml
add
sub
std
pop
sbb
dec
sub
nop
movsl
enter
push
sbb
cmp
imull
sbb
test
adc
in
movsb
add
inc
xchg
repz
mov
cmp
fucom
rorb
popf
pop
popf
das
shrl
lods
dec
adc
push
imul
out
hlt
xorl
pop
xchg
das
mov
into
jb
mov
mov
xor
data16
lret
sub
lods
outsl
adc
repnz
stc
jecxz
sbbl
mov
push
popf
inc
ja
les
fistpl
pop
lds
and
fcompl
insl
xor
adc
adc
mov
sub
clc
sub
mov
cltd
sub
js
inc
inc
push
cmp
sbbb
mov
aas
dec
fldt
or
jp
sub
dec
inc
sub
add
mov
imul
dec
adc
in
xor
jp
out
subl
movsb
mov
xchg
dec
pop
jae
pop
addb
imul
cmpsb
or
push
push
sub
and
data16
cmp
mov
inc
jb
fwait
in
in
dec
jecxz
test
dec
adc
jno
add
stos
jge
les
mov
rcl
xchg
push
into
mov
mov
pop
lahf
adc
jge
push
sbb
out
jg
and
add
mov
push
xchg
pop
out
dec
pop
dec
cmp
mov
in
xchg
push
stos
mov
mov
sub
add
inc
cmp
movsl
add
cltd
push
mov
cmpsb
sarb
outsl
movb
sub
cmp
inc
push
sahf
das
cmp
mov
ja
sbb
hlt
pop
mov
outsl
mov
ret
inc
push
out
in
fldlg2
imul
mov
fs
and
sbb
xor
sbb
pop
orl
nop
aam
mov
je
or
mov
leave
cmpsl
push
test
lcall
cmc
rcpps
and
fs
jl
jmp
fcom
xchg
out
push
pop
jne
cmpsb
les
pop
incb
clc
ljmp
testl
jnp
inc
repz
pop
mov
inc
ja
push
xor
sbb
lcall
cld
mov
fcmovnbe
push
stos
dec
jmp
lret
mov
subb
data16
fcmove
xchg
fisubrs
repz
and
cmp
lahf
pop
mov
dec
or
cmpsb
movsb
xchg
or
insl
inc
scas
dec
fiaddl
cmp
aaa
xor
dec
mov
ret
aad
repz
rolb
pop
bound
inc
and
jae
jno
movsb
sub
ja
mov
xchg
leave
xor
bound
iret
jmp
push
icebp
out
mov
rcr
push
lret
nop
imul
mov
push
mov
xchg
fnsave
imul
push
shrb
insb
mov
mov
push
mov
sbb
ret
nop
pop
jge
out
outsl
scas
into
add
jbe
arpl
jge
pop
mov
loope
adcl
call
mov
sub
xchg
mov
loopne
movsl
or
dec
enter
jle
jle
loope
mov
push
jbe
hlt
xchg
lahf
mov
or
je
and
cld
xor
imul
sub
fiadds
enter
test
add
movsl
movb
push
mov
xor
aas
and
cmpsb
sbb
cs
cltd
push
mov
mov
xor
gs
add
divb
jno
and
and
cwtl
fisubrs
inc
mov
pop
sub
stos
xlat
lods
arpl
movsl
stos
cli
movzbl
mov
cmp
jb
fidivrl
pop
cmc
rcr
or
repz
jl
xchg
pushf
roll
dec
sub
inc
fildll
mov
and
and
cli
bound
adcl
adc
imul
shrb
jle
cltd
sahf
xor
filds
aam
or
jbe
in
outsl
cltd
sub
xchg
into
dec
mov
or
mov
es
jae
jge
add
movsl
pop
pop
jmp
mov
test
pop
sub
mov
aam
mov
jle
cmp
cmp
aad
mov
ss
push
scas
mov
lods
repnz
enter
pop
jb
fs
insl
dec
mov
fsub
pop
jg
lea
adc
pop
sbb
xchg
push
fst
mov
imull
lds
fs
mov
xorb
mov
add
mov
subl
cmpsl
cmp
movsb
movl
inc
mov
nop
push
test
jae
ds
add
sbb
mov
add
pop
mov
rclb
mov
gs
sub
sub
add
pop
push
add
xor
and
test
add
and
rcrb
add
nop
push
pushf
xor
iret
add
aas
add
pop
push
fldcw
aas
cmp
ja
loope
test
pusha
outsb
xchg
fildl
push
sbbb
xor
cld
nop
gs
inc
ja
fimull
arpl
out
sbb
in
in
cmp
imul
enter
push
imull
scas
jns
and
jmp
inc
lods
mov
nop
addr16
xchg
lret
jne
jns
jecxz
pop
pop
popa
xchg
xor
mov
cmp
mov
mov
mov
mov
add
js
mov
xor
jns
call
jg
ret
aad
fcoml
ret
jle
subl
inc
pusha
pushf
les
subl
das
cli
mov
xor
cmp
mov
ficomps
rcrb
movsl
addr16
push
adc
addb
sub
loop
jnp
sti
jb
xchg
cld
inc
insb
sub
xchg
cwtl
data16
in
loopne
repz
dec
sarb
xchg
int3
add
das
out
lahf
in
cmp
add
adc
xchg
xlat
aam
fstps
loopne
fldt
pusha
pop
add
dec
test
out
dec
or
lahf
jmp
adc
imul
or
sahf
addr16
jns
cmc
int3
mov
addl
rcl
jg
or
xor
inc
clc
inc
aam
add
repz
pop
addr16
mov
mov
jae
daa
loop
push
ds
int
dec
cld
icebp
cmp
fmuls
adc
test
outsb
push
xchg
adc
sarl
push
sbbb
nop
int3
lret
xchg
add
cmp
shlb
sti
mov
lret
add
test
pop
push
push
pop
pusha
fnstcw
scas
adc
out
jno
add
pop
cmp
or
inc
cmp
mov
out
mov
adc
dec
fadd
inc
into
nop
cwtl
insb
jmp
mov
jnp
lea
aam
mov
lods
outsl
pusha
jl,pn
and
mov
fs
xchg
and
pop
testb
and
mov
into
pop
fistps
frstor
out
cli
ss
mov
push
inc
shrl
lock
xchg
sub
out
add
mov
mov
out
cmp
mov
or
jge
and
fsubl
popa
lods
fiaddl
aaa
inc
cmp
cld
pop
sbb
pop
rcrb
add
sarb
neg
sbb
pop
inc
adc
cmpsb
mov
push
dec
out
cltd
push
lret
scas
jae
adc
ret
push
add
popf
pop
sarb
pop
push
jmp
xchg
sub
jp
fmuls
jbe
jne
fdivs
push
add
stc
pop
inc
test
jne
push
and
in
enter
push
fistps
shl
mov
sarb
adc
sub
ss
shrl
inc
fistpl
push
mov
in
lds
inc
imul
mov
or
insl
es
sub
dec
xchg
dec
ds
jg
mov
js
jb
mov
addl
add
pop
add
jnp
jno
imul
dec
fwait
or
xchg
xchg
or
sbb
sbb
jns
and
std
shll
inc
mov
dec
mov
cmp
daa
push
rcrb
adc
cld
sub
xor
mov
popa
loopne
insb
inc
iret
or
sti
and
jle
cwtl
aaa
cltd
nop
mov
nop
dec
or
adc
jmp
push
inc
cli
push
inc
xchg
stc
add
mov
cmpsl
add
mov
inc
outsb
adc
es
stos
icebp
cmp
js
fxch
push
jg
lods
popa
lds
stc
pop
lret
jo,pt
mov
push
mov
dec
sub
arpl
in
xor
sub
lea
out
xchg
sbbb
out
and
dec
push
push
push
lock
mov
or
push
mov
fchs
add
sbb
jns
rorb
js
inc
push
push
aad
int
and
mov
enter
xor
std
js
loope
push
popf
push
mov
inc
fwait
push
dec
sahf
mov
add
jne
add
stos
add
sbb
jb
jg
pop
in
shlb
mov
ret
inc
pop
int
data16
mov
jne
int3
mov
adc
cmp
imul
jns
call
es
cmpsb
push
jecxz
pop
pop
fs
sbb
test
sbb
push
adc
sub
imulb
fs
outsb
push
sub
or
test
sbb
or
jae
cmpsl
stc
je
lea
out
mov
out
fbld
jns
xchg
mov
ja
mov
adc
imul
sbb
sahf
enter
xor
pop
fs
and
inc
dec
jae
sub
jl
arpl
mov
or
mov
loope
adc
idivl
jno
mov
test
adc
fsubr
test
cltd
jb,pt
stos
sub
fcmovnbe
xor
push
sbb
ss
sahf
mov
ss
pop
mov
sbbl
dec
adc
sbb
in
testb
nop
popa
cltd
xor
jo
mov
or
push
inc
and
imul
out
pushf
mov
mov
xchg
xchg
xor
sahf
mov
lods
mov
xchg
cmc
shll
cltd
mov
inc
mov
and
mov
or
mov
push
mov
or
mov
dec
dec
xchg
sbb
in
mov
test
sarb
dec
xor
clc
xor
dec
popa
out
xchg
inc
fists
inc
cld
lcall
shlb
push
xor
ret
adc
or
lahf
jp
imul
dec
xchg
stos
push
loop
sub
adc
scas
adc
out
lods
mov
inc
ljmp
sub
lods
shll
pop
mov
daa
xor
repz
packssdw
loop
sti
xor
dec
adc
push
inc
stos
and
mov
pop
cwtl
pop
cmp
inc
ret
dec
sbb
mov
mov
inc
push
mov
mov
aaa
fmuls
cmc
xor
push
out
stc
mov
add
imul
dec
mov
xor
fstps
js
scas
lods
jbe
stc
aaa
hlt
inc
lea
pushf
xchg
add
mov
xchg
dec
pop
sub
dec
pusha
xor
pusha
out
pop
loopne
scas
aad
add
jne
jno
rorb
inc
loopne
pusha
je
test
mov
mov
inc
mov
dec
insb
out
mov
cwtl
adc
and
pop
push
test
inc
lea
mull
mov
rclb
lahf
lret
mov
xchg
lea
xor
addr16
pop
leave
dec
lods
dec
mov
test
pop
mov
test
cmp
sbb
aad
xchg
mov
pop
push
xor
add
mov
das
or
fstpl
dec
addr16
gs
outsb
or
jl
cmpsb
push
mov
add
push
push
in
xchg
dec
adcl
mov
jl
mov
cmp
jle
mov
shlb
mov
rolb
add
das
rolb
fidivl
push
pusha
test
ret
stos
ss
pop
push
adc
pushf
xchg
es
ja
fnstsw
xor
dec
in
jnp
and
aaa
cmpsb
out
mov
lahf
rorl
xchg
rcl
shrb
inc
mov
test
test
idivl
xchg
fmull
dec
sahf
dec
and
sub
loop
inc
negl
dec
daa
loopne
sbb
push
lea
and
andl
mov
dec
outsb
sbb
mov
cmpsb
aas
sbb
jae
outsb
shll
jne
sbb
push
shlb
outsb
das
mov
lret
sub
inc
loope
and
addr16
mov
mov
jb
popa
mov
iret
add
push
inc
sub
jecxz
and
addr16
lret
outsl
test
lock
subb
cmp
dec
sbb
cmpsl
and
jbe
lock
dec
pop
and
daa
outsl
rclb
jge
sub
inc
nop
and
lea
lret
pop
das
into
leave
cmp
imul
mov
lea
scas
mov
cltd
mov
js
push
in
cltd
int3
pusha
inc
fwait
mov
dec
gs
mov
lret
pop
ret
sub
mov
out
popa
out
push
mov
mov
cmpxchg
mov
fistpl
imull
mov
dec
cli
push
mov
pop
sub
mov
sbb
sarl
stc
imul
adc
rorb
sub
xchg
mov
xor
jo
lea
fsts
sbb
jne
add
dec
stos
adc
sbb
dec
mov
into
add
stc
jae
jbe
or
xchg
adc
jmp
lds
popa
jp
dec
gs
push
xor
jmp
adc
ret
cmpsb
movsb
cltd
push
insl
or
pushf
cli
mov
jb
je
shlb
out
mov
addr16
inc
mov
pushf
test
scas
inc
or
mov
cmpsl
lods
mov
pop
push
stc
cmp
push
call
push
mov
mov
add
mov
adc
jae
xor
and
push
xchg
dec
push
inc
test
jb
and
xor
ret
xor
sub
mov
jno
pushf
mov
out
or
mov
subb
lahf
push
pop
lods
imul
and
jnp
sbb
push
dec
int3
test
jne
int3
stc
movsb
hlt
mov
cmpsl
jecxz
sbb
lods
push
call
lods
je
mov
xchg
jb
test
sub
add
cwtl
mov
xchg
sbb
xchg
jbe,pt
jmp
in
jnp
cmp
jmp
es
sbb
or
shll
ret
scas
xchg
or
fnstsw
jg
aam
iret
inc
jno
cli
cwtl
out
lds
ret
shrb
shrl
lret
pop
cld
addr16
xchg
mov
mov
pop
rorl
shrl
push
out
push
lret
imul
dec
mov
inc
out
test
inc
aam
aaa
loope
mov
cmpsl
imul
jmp
push
fnsave
gs
hlt
scas
pop
and
rcr
xchg
nop
pop
lahf
lods
dec
lcall
jecxz
jo
pop
mov
mov
fs
cmp
pop
fprem
or
jg
mov
adc
ss
inc
sete
in
xchg
rclb
pop
mov
cmp
in
mov
adc
and
pop
je
ljmp
sbb
or
push
xchg
enter
das
hlt
hlt
aas
bound
ret
movsl
mov
fistpll
jle
mov
xchg
int3
out
in
sub
dec
lahf
rolb
dec
mov
pop
scas
inc
fstps
add
fnstcw
add
icebp
adc
fstps
cmp
add
jle
lret
push
xchg
and
mov
in
stos
lcall
fwait
push
jmp
test
movsb
lock
xlat
fmuls
aam
xchg
pop
pop
push
push
aas
popf
testb
mov
mov
cld
mov
push
push
nop
cltd
mov
or
xchg
sbb
push
jmp
and
je
adc
dec
cmp
add
mov
jl
dec
movsl
inc
jo
push
movsb
sub
xlat
mov
adc
cmpsb
lods
scas
mov
scas
scas
mov
xchg
repnz
jbe
jmp
test
pusha
push
xor
pop
popf
repz
jno
pop
sbb
xor
movsl
dec
daa
sbb
ret
jg
inc
stos
sub
xor
push
lock
shlb
inc
and
mov
pop
xlat
pop
inc
cwtl
loope
stos
pushf
and
stc
hlt
pop
jg,pt
jl
add
jle
cltd
cmc
pop
xchg
lahf
insl
int
add
mov
lcall
mov
addb
mov
add
insl
test
dec
mov
cs
xor
and
sti
xor
adc
push
add
xor
addl
jmp
or
xchg
cmp
push
adc
mov
dec
call
push
ret
in
cmpsb
ja
adc
mov
ret
movsl
shrb
pop
repz
mov
cmp
arpl
and
or
jp
imul
iret
inc
addr16
push
stos
cvttps2pi
xchg
cmpsb
jl
cmp
xchg
add
push
cwtl
xor
stos
negl
mov
xor
dec
adc
out
inc
mov
mov
dec
gs
aam
and
inc
inc
stos
mov
popf
or
cmp
mov
out
adc
hlt
shr
cmp
jle
fisttpl
mov
mov
xchg
addr16
push
je
adc
stos
loop
inc
mov
aas
jl
pushf
out
pop
stc
dec
dec
call
jne
jecxz
adc
mov
jne
adc
out
fnstenv
add
adc
mov
jb
cmp
adc
sbb
cmpxchg
cltd
cmp
mov
dec
pop
xchg
ds
mov
outsl
mov
scas
xchg
pop
inc
push
repz
jbe
sbb
cli
sbb
iret
std
adc
push
or
lods
movl
shll
lea
daa
cs
filds
loop
fsin
sbb
mov
ljmp
pop
xchg
jne
inc
stc
popf
jp
mov
decb
imul
sub
inc
int3
loop
pushl
push
sub
ja
lods
cwtl
in
imull
je
xor
pop
in
cmp
xor
mov
and
stos
hlt
ss
ret
mov
jae
cmp
dec
cs
cmp
sub
fwait
jo
adc
push
mov
popa
in
inc
dec
scas
lods
dec
popa
fists
popa
lock
inc
nop
jp
cbtw
testb
imul
clc
xchg
and
jle
adc
inc
fs
pusha
xor
fnstsw
clc
fcomps
out
jle
inc
stos
movsl
or
cmp
inc
mov
cmpsb
pop
sbb
xchg
xlat
mov
jp
push
inc
xor
push
iret
cmp
dec
daa
fldt
mov
inc
sbb
sar
or
leave
gs
das
cmpsb
push
dec
jl
adc
insl
pop
mov
test
pop
xor
push
add
sub
outsb
in
mov
jg
es
xchg
push
repnz
sub
mov
push
inc
jge
jno
in
arpl
or
mov
mov
rcll
jne
mov
into
hlt
int
inc
adc
push
xchg
push
pop
iret
mov
push
dec
sti
dec
pop
mov
stos
rol
andb
in
in
call
stc
cli
adc
icebp
inc
fists
pop
cwtl
mov
sti
pop
dec
add
push
mov
jnp
mov
rorb
je
mov
and
call
fcomi
mov
cmc
and
insl
cltd
push
outsl
inc
lods
icebp
mov
test
and
nop
dec
fwait
mov
xor
dec
outsl
mov
rorl
jo
cli
lcall
add
pop
fsub
fstpl
jp
movsl
gs
cmp
test
icebp
bound
mov
dec
dec
mov
pusha
add
cmp
sbb
ja
scas
test
int3
test
push
pushf
jnp
push
aad
mov
adc
pusha
fcomps
ret
mov
inc
push
xor
mov
fwait
dec
add
jle
or
ret
ljmp
jae
das
lcall
inc
std
mov
xchg
arpl
cmp
jb
pop
rcll
sbb
into
add
fistps
inc
out
les
adc
pushf
ffree
int
jp
xor
and
lds
es
es
incb
sub
or
jno
dec
pop
jns
jp
in
xchg
adcb
cs
fsubl
in
into
add
gs
mov
jl
pop
ss
out
pop
push
jnp
sbb
inc
loop
das
cwtl
inc
pop
test
adc
mov
sub
adc
and
dec
scas
mov
mov
fcmovu
xor
jge
mov
xor
hlt
icebp
cmpsb
call
sub
xchg
adc
lock
xchg
repnz
add
xor
dec
cld
je
enter
cmp
xchg
outsl
sub
insb
adc
outsl
icebp
inc
pop
frstor
inc
cmp
add
das
rcrl
inc
xor
fstenv
mov
and
sti
xor
sbb
cwtl
xchg
lods
jmp
jbe
mov
fwait
inc
jmp
fmull
fwait
mov
add
dec
fdivrs
imul
mov
lock
mov
add
or
mov
mov
fisubrl
rclb
add
jmp
rolb
ret
ljmp
jl
aas
les
lods
arpl
shll
pusha
sub
cwtl
scas
mov
push
stos
xor
xchg
push
inc
movsl
xor
xor
sub
mov
iret
cmc
fsts
sar
mov
cld
mov
jae
push
xchg
or
mov
cltd
push
sbb
pop
inc
pop
or
sti
xor
loop
push
jmp
and
or
jg
repz
sbb
es
jnp
inc
fs
gs
cli
sub
cmpsb
mov
insb
xor
mov
push
test
pop
xlat
popf
pop
in
andb
mov
ficomps
das
or
and
or
push
pop
xor
cmp
sbb
fisttps
stc
sbb
inc
or
xor
repnz
loope
dec
sbb
adc
xor
inc
int3
sub
nop
bound
sbb
cli
xor
pop
jmp
hlt
outsl
mov
mov
pop
inc
mov
mov
imul
xchg
jle
mov
ret
adc
loopne
ret
push
sub
testl
mov
in
es
inc
and
flds
xor
mov
add
jb
imul
cmovle
adc
mov
in
and
daa
inc
fwait
shrb
lock
xor
je
lock
ljmp
orb
inc
dec
jg
mov
sbb
pop
sahf
add
orb
sbb
das
or
push
jnp
jnp
xchg
jl
sbb
ss
mov
adc
lret
aas
lea
or
stos
or
testl
out
int3
repnz
clc
push
out
cmp
test
cli
out
shrb
loope
push
jle
testl
jmp
lock
sbb
pop
mov
lock
das
xchg
popa
inc
push
sub
je
dec
fcmovbe
jp
mov
jns
fs
mov
mov
gs
cmpsl
je
pop
mov
movsb
sbb
stos
push
and
push
loop
lds
std
ror
lock
pop
repnz
in
sub
cwtl
std
push
mov
leave
ss
shrl
and
loope
imul
std
int
push
push
stos
push
sbb
add
jbe
in
dec
push
lods
jle
mov
stos
push
mov
and
sbb
cld
xor
out
xor
ja
inc
imul
sbb
lcall
cmp
and
pop
call
or
mov
inc
aaa
inc
push
loop
test
cmpsb
fwait
lcall
or
cli
jle
pop
lret
jb
jo
push
nop
arpl
mov
jle
push
fidivl
rolb
gs
popf
enter
fwait
idiv
pop
dec
dec
test
loope
dec
mov
test
dec
lods
inc
test
aam
add
scas
pop
out
jmp
scas
in
fwait
xchg
stos
sahf
dec
shrl
loop
push
testb
dec
or
icebp
dec
int
cmp
cs
xor
cmpsb
pop
xchg
incb
ljmp
mov
test
sahf
ljmp
jp
cld
imul
enter
mov
js
sub
sbb
push
jecxz
pop
adc
popf
pop
or
adc
rcr
fisubs
mov
mov
inc
dec
pop
and
test
in
aad
cwtl
pushf
inc
cmp
mov
mov
mov
push
ja
test
mov
cmpsb
sti
in
xchg
cltd
sbb
sbb
pop
roll
push
sub
mov
jl
push
jge
sbb
push
adcl
rcr
pop
inc
sub
mov
ja
mov
mov
call
inc
mov
xchg
int
iret
int3
sbb
into
inc
mov
nop
aaa
jmp
dec
mov
jae
pop
sbb
or
jl
in
sti
daa
je
dec
and
push
mov
aas
xor
sbb
lret
mov
jmp
pop
rolb
adc
sahf
xchg
mov
cmc
jne
fistl
xor
sub
in
mov
ss
data16
fwait
pop
xor
and
fstl
jnp
xor
inc
mov
and
pop
xor
stos
nop
inc
and
popa
xor
ds
negb
clc
mov
mov
in
dec
dec
add
mov
movsl
adc
mov
es
adc
pop
imul
inc
aad
xlat
mov
cwtl
inc
or
lds
and
mov
sahf
jnp
add
mov
icebp
xchg
xor
inc
out
adc
mov
mov
pop
hlt
jl
mov
push
hlt
mov
imul
fnstcw
dec
xchg
bound
and
cmpl
sbb
ret
sbb
outsl
stos
pop
js
aad
rclb
dec
shlb
les
jb
adc
cli
fisttps
mov
push
push
push
cmp
orl
das
add
rolb
cs
push
pop
xchg
lock
push
sbb
push
push
movsl
stc
xchg
fnstenv
jae
loop
idivb
je
clts
sbbb
mov
xor
mov
orb
lock
mov
xor
movsl
push
jle
cmp
aaa
cmp
lods
out
daa
in
popa
inc
loope
mov
andl
rolb
mov
outsl
loope
xchg
fisttps
in
pop
es
cmp
out
popa
insl
popl
push
mov
test
jns
outsl
aas
mov
int3
push
jmp
inc
lea
cli
sub
out
clc
and
and
push
adc
sub
sahf
jbe
inc
es
ljmp
push
push
sub
mov
aam
je
ss
or
xchg
sbb
dec
jge
rcr
insb
and
or
xchg
dec
add
clc
ret
in
out
das
fsubrs
jno
inc
mov
xchg
fwait
cmpsl
cmpsb
sub
icebp
xor
adc
in
dec
adc
add
jle
out
pop
scas
cld
cmp
icebp
jne
cmp
je
jbe
in
frstor
fistps
jp
mov
pop
cmp
add
xor
mov
addb
js
cmp
add
jns
jbe
sti
fidivs
test
movsb
fnstsw
pushf
fs
sub
scas
sub
enter
cmp
dec
mov
lods
fdivp
dec
call
xor
sti
ss
push
cmp
sbb
jns
loopne
inc
es
loope
mov
ret
repz
popa
mov
push
notl
mov
fstl
negb
adc
hlt
ds
les
es
push
fnstcw
and
push
fdivrs
cs
sbb
xchg
jb
ss
jo
shll
inc
cmp
add
or
jnp
sub
rolb
movsl
cmp
shlb
es
and
dec
sahf
push
pop
fcmovb
rol
jno
push
add
fadd
rolb
leave
mov
lcall
ret
ret
mov
dec
sub
repnz
or
and
adc
mov
adc
subl
mov
add
cwtl
pop
jbe
loopne
scas
mov
lds
test
jno
adc
std
dec
lea
shlb
clc
fcmovnu
xor
hlt
addr16
inc
mov
in
add
and
jne
adcl
and
lret
jb
hlt
xlat
push
push
testb
test
sbb
xchg
sub
adc
jo
fwait
push
push
sahf
mov
or
mov
push
stc
std
and
dec
mov
out
mov
xor
mov
sbb
jae
inc
enter
addr16
les
sbb
push
jecxz
std
lahf
ljmp
cs
aam
stc
adc
out
mov
push
popf
popf
mov
jg
mov
sbb
push
ret
push
mull
mov
push
push
pop
imull
call
les
out
dec
and
arpl
sarb
hlt
push
mov
push
mov
popa
sub
or
scas
pop
sbb
cmpsb
out
sbb
xchg
pop
and
add
sbb
stos
mov
daa
add
lret
loopne
cmp
mov
aaa
push
xchg
sti
in
push
sbb
call
xchg
xor
icebp
fs
popf
adc
mov
leave
xchg
push
nop
jo
into
push
add
mov
mov
shl
inc
xchg
xchg
nop
mov
dec
mov
pop
imul
adc
mov
movsb
leave
iret
hlt
adc
dec
pop
push
cmp
or
mov
add
pop
cmp
sbb
xor
sub
ret
jnp
mov
cmp
std
daa
pop
dec
add
rol
repz
sub
mov
mov
jecxz
xor
cld
inc
adc
mull
xchg
and
idivl
cwtl
int3
out
push
aaa
sbb
nop
pop
adc
sub
nop
add
int3
sub
push
add
clc
leave
jmp
mov
rcr
xor
sbb
movsl
push
lea
insl
adc
inc
scas
xor
fdivrl
pop
xchg
js
pop
sub
pop
gs
mov
fcomi
cmp
xchg
scas
sub
mov
mov
enter
jo
sbb
sbb
sub
int
pop
pop
iret
push
mov
sbb
xorl
mov
xchg
shlb
xchg
call
adc
pusha
fsubl
mov
jnp
lret
sub
leave
push
inc
lcall
jno
ficomps
sbb
cmp
es
inc
fidivrl
add
repz
enter
sub
mov
imul
mov
dec
repnz
test
sbb
xlat
sahf
jae
add
and
in
mov
pusha
ljmp
jns
cmpsb
dec
mov
xchg
fwait
push
ret
pop
gs
xchg
push
pop
repz
cmp
cmpsl
stc
xchg
jp
adc
loope
mov
loopne
out
into
out
and
xchg
imul
call
xor
ds
push
jg
inc
xchg
xchg
mov
lds
or
mov
leave
and
jle
xor
call
loop
pop
imul
lcall
xchg
es
pushf
lds
leave
push
das
dec
jns
fcoml
xchg
scas
xchg
pop
loop
insl
dec
mov
daa
data16
add
pop
and
xchg
adc
jns
mov
mov
mov
xor
xor
in
sub
mov
and
inc
inc
arpl
out
or
or
jo
fsubr
cmp
fiadds
xchg
cmp
lds
insl
sub
icebp
jecxz
sahf
mov
xchg
fisubs
sub
incb
mov
or
mov
lds
addr16
out
addr16
pop
aas
dec
xchg
mov
cmc
jge
inc
cmp
iret
mov
mov
or
cs
test
decb
pop
push
shll
cmp
jge
out
mov
scas
dec
into
xorl
jmp
imul
dec
popf
mov
xor
push
push
pop
dec
repz
sub
mov
push
dec
lock
aaa
comiss
inc
mov
mov
lock
fdivrs
mov
xor
jge
iret
icebp
and
add
mov
popf
sbb
mov
sbb
in
enter
dec
pop
fidivs
int3
cld
out
cltd
cmpsb
add
pusha
add
mov
mov
outsl
dec
mov
xchg
out
and
das
or
jp
ljmp
add
in
insb
in
push
adc
clc
jo
data16
jbe
push
inc
mov
call
ret
adc
dec
sbb
fisubrs
cmc
jmp
add
or
jge
dec
mov
hlt
lea
mull
inc
in
xor
and
mov
stos
mov
jl
arpl
cltd
xchg
lret
jno
adc
dec
adc
push
arpl
ret
insb
add
mov
int3
fwait
sar
add
stos
inc
fsubs
bound
cmpb
xor
cmp
adcl
cmp
cmp
out
jnp
popf
inc
fiaddl
mov
stos
test
sahf
adc
cmpsb
dec
mov
in
jle
test
cmp
and
cmp
mov
dec
push
int
xchg
push
fnstenv
dec
xor
inc
mov
aad
fidivl
enter
movsb
clc
daa
js
dec
xchg
out
xor
es
lret
mov
out
pop
mov
fistpl
mov
test
mov
iret
mov
and
adc
mov
add
outsl
add
cmp
pminub
fucomi
sbb
xchg
aam
or
xlat
lcall
push
clc
popf
outsb
sub
js
and
repz
push
out
add
in
in
jns
rcrl
in
rclb
pop
movhps
xchg
js
push
inc
daa
aas
fwait
push
inc
jg
data16
test
jge
call
lret
and
mov
call
in
divl
jge
or
iret
sbb
sbb
sub
les
dec
lods
in
xchg
mov
mov
pop
xor
jae
jnp
sub
dec
in
jbe
inc
out
shrl
and
outsl
xchg
mov
cmp
sbb
xchg
cld
js
mov
fcmovnbe
in
je
bound
inc
cs
xchg
push
ja
dec
xchg
pusha
cmp
add
pop
xchg
mov
push
jo
pop
add
jp
xor
fcmovnb
pusha
pop
cmp
shlb
jb
gs
mov
jnp
imul
into
pop
xchg
jle
popf
adc
pop
scas
leave
imul
in
stos
inc
into
cmpb
sub
xlat
mov
xor
sub
and
push
mov
sub
jmp
adc
lds
test
cmovb
out
pusha
inc
std
ljmp
or
sub
lea
arpl
das
ret
sub
call
fidivrl
sub
xlat
roll
jg
in
cltd
and
mov
adc
shrl
cmp
sub
mov
fmull
cmp
xlat
aam
jl
adcl
out
xchg
ret
repz
fiadds
popf
pop
ds
arpl
cmpsl
adc
xor
sub
int
lahf
ja
lds
sbb
pop
mov
dec
out
add
sbbl
lcall
mov
sub
xchg
scas
decb
cmc
hlt
mov
pop
xchg
adc
push
jbe
mov
emms
pop
pop
push
andl
add
jbe
leave
cmp
ds
ds
xchg
adc
pop
push
xchg
and
sahf
ret
sbb
mov
pushf
jo
mov
pop
or
dec
xchg
fists
pop
insb
mov
pop
mov
sahf
mov
sub
push
int3
loop
sbb
push
out
add
add
out
push
adcl
mov
in
pop
imul
ficomps
jns
les
push
push
adc
stos
jne
outsl
out
xor
inc
andb
xchg
ficompl
cwtl
mov
jo
inc
dec
push
subl
dec
loop
adc
in
addl
mov
stos
js
add
mov
lock
fstpl
fldt
int3
out
in
inc
adc
out
or
out
insb
pop
xlat
insl
dec
pusha
mov
in
and
in
dec
loopne
shll
shlb
ja
mov
popf
jae
inc
dec
cmp
out
mov
lahf
in
inc
xchg
btr
loopne
inc
pop
sbb
inc
sbb
mov
test
mov
push
pop
sub
shr
xchg
inc
mov
js
inc
outsb
sar
cmp
sub
rclb
cmpsb
dec
repz
jmp
jecxz
leave
cmp
ss
scas
cmp
cmp
lock
test
loop
and
inc
mov
xor
and
mov
mov
mov
fwait
pop
loope
lahf
cld
sahf
pop
dec
popa
jae
push
imul
push
and
in
or
dec
das
xchg
shrl
push
sti
lods
inc
out
pop
loope
fbld
adc
adc
sub
push
lods
or
inc
push
sbb
sub
jno
mov
add
adc
add
pusha
je
movsl
aam
dec
add
or
mov
mov
mov
pop
jge
mov
test
lcall
dec
ja
mov
cmpsb
xchg
inc
or
ret
or
add
and
mov
lods
sbb
insb
and
push
insl
or
adc
aam
pop
fs
enter
les
sbb
shlb
mov
sub
nop
inc
jg
push
add
cmp
pop
lods
dec
jge
cmc
xor
aas
jns
jo
and
push
mov
scas
xchg
cmp
aad
fists
pop
je
pop
push
insb
jae
mov
ret
cs
data16
push
cmp
int3
sbb
movsl
adc
adc
mov
loop
mov
xor
fstpt
and
inc
mov
fsubrs
jge
fsubl
mov
fimuls
and
push
sbb
sub
fdivr
push
imul
sub
cld
fdivr
pop
xor
shrl
mov
stc
arpl
or
xchg
les
mov
xchg
mov
mov
pop
test
leave
lret
les
jl
inc
jnp
cwtl
sbb
mov
test
fildll
add
dec
sbb
cltd
mov
mov
pop
not
dec
arpl
sahf
cld
or
push
dec
mov
xor
mov
sbb
adc
push
or
sti
dec
xchg
xor
cmp
in
ljmp
sbb
nop
rcrl
or
mov
insl
das
mov
add
loopne
pop
iret
lret
push
loop
and
loope
jecxz
loope
ss
arpl
cmc
jo
test
idivb
xor
jne
mov
ljmp
fwait
dec
inc
mov
popf
push
adc
test
cmp
mov
adc
aaa
or
lret
pop
mov
insb
and
mov
sub
and
stos
test
inc
stc
add
inc
and
and
xor
mov
jns
mov
dec
in
jns
out
bound
xlat
xlat
insl
mov
jl
fsubs
imul
add
xchg
es
sarb
es
cwtl
shll
lock
push
nop
hlt
cwtl
xor
xor
add
jns
rol
mov
jmp
sub
or
dec
dec
js
scas
mov
jbe
in
pop
and
mov
ret
xchg
dec
fildll
jecxz
cmpsl
les
sbb
aaa
cwtl
sub
cmp
adcl
jle
cld
adc
jnp
icebp
add
adc
std
sbb
sbbl
xor
dec
jle
std
ds
call
mov
addr16
pushf
or
push
into
add
sub
popf
pop
shlb
cmp
lahf
lahf
jb
mov
cli
cmp
xor
outsl
xchg
dec
push
insb
cmp
push
mov
pop
hlt
jae
int
negb
addr16
lcall
je
je
aam
cli
and
adc
loopne
xchg
in
push
fisttpl
lahf
pop
mov
push
out
xchg
int
mov
mov
hlt
xor
test
frstor
ret
roll
push
push
xchg
out
mov
aaa
mov
and
xor
or
dec
out
dec
inc
imulb
mov
jnp
adc
or
loope
mov
or
into
sar
mov
es
inc
arpl
or
or
cltd
cmpsl
xchg
mov
repz
add
sbb
inc
or
push
adc
push
pop
cwtl
cmc
push
or
call
mov
cmp
andl
rcr
scas
lret
inc
and
cld
mov
xor
and
pop
std
add
dec
pop
call
jae
push
sub
lods
cmc
stc
push
adc
fldenv
dec
aad
fsubrs
fwait
xchg
dec
arpl
fadd
ficoml
xor
js
repz
adc
push
movsl
jg
xorl
arpl
add
push
fbstp
adc
imul
imul
fistpll
enter
in
mov
mov
mov
inc
push
int3
cmp
fmuls
xchg
jecxz
fldcw
daa
jl
stc
or
xchg
xchg
pop
lcall
inc
push
aas
dec
lcall
jb
and
jo
rol
fstpt
jp
out
lods
mov
lahf
aam
mov
sbb
or
andb
xor
mov
pop
push
or
pop
xchg
mov
pop
insl
pop
pop
pop
inc
js
mov
or
dec
and
div
into
sub
dec
push
add
shll
push
xchg
in
stos
orb
iret
cmpsb
decl
xchg
ja
ja
xor
divb
out
or
decb
test
pop
sahf
add
stc
xchg
adc
mov
dec
out
sbb
test
jnp
or
mov
movsb
sub
push
iret
pop
jg
push
lret
mov
xor
nop
xchg
jo
adc
push
fdivs
mov
push
or
xchg
fwait
pushl
mov
dec
mov
mov
mov
sarl
fcmovu
sub
dec
xchg
xchg
frstor
and
sub
les
popa
je
sub
shr
xor
lock
movsb
pop
pop
fs
pop
pop
cmp
test
pop
sahf
push
adc
or
loop
add
cli
mov
daa
add
scas
jp
jle
mov
jle
mov
xchg
add
xchg
pop
outsl
mov
fwait
in
and
cmp
ret
imul
push
pop
repnz
mov
jmp
sbb
iretw
rcll
jns
fs
inc
mov
inc
or
vmwrite
fmull
xor
add
ret
cmp
je
cmpsb
into
sub
incl
sub
push
xchg
jle
or
hlt
push
mov
sbb
js
push
mov
xor
pop
lcall
pop
cmp
sub
inc
das
pop
push
xor
test
outsb
fisubl
dec
out
cs
test
out
or
fdivs
adc
loop
ficompl
ret
shll
jo
inc
enter
push
test
cmp
aaa
dec
and
sub
aas
ret
out
test
pop
sub
fcmovb
je
xor
int3
dec
cmpsb
jmp
std
leave
icebp
sbb
int3
cwtl
inc
sbb
mov
and
dec
inc
repnz
cmp
push
cmp
or
mov
int
inc
lret
enter
shrl
cmp
repz
inc
repnz
hlt
idivb
mov
outsb
scas
aad
pusha
sbb
mov
ss
insl
aas
dec
rolb
xchg
stos
cli
out
out
shll
decl
std
fsubr
mov
popa
imul
icebp
popf
ss
in
in
mov
adc
mov
movsb
ljmp
xchg
outsl
push
mov
not
pop
adc
sbb
pop
outsl
or
loope
pop
shlb
add
lret
dec
subb
fsts
cwtl
pusha
repz
xlat
in
mov
ds
fdivl
push
clc
mov
sub
cwtl
inc
sbb
lahf
in
cld
jge
ljmp
sbb
in
jp
inc
and
mov
pop
lcall
xchg
pop
push
push
ret
enter
loop
mov
out
inc
jbe
jo
sub
jo
add
mov
rol
cmp
mov
stos
icebp
scas
inc
dec
or
cmp
nop
fmuls
xchg
in
mov
xchg
dec
popa
cltd
int
mov
mov
push
push
pusha
into
icebp
xor
jmp
mov
pop
shlb
dec
fwait
sbb
mov
shll
stos
or
lret
mov
in
ja
or
dec
mov
xchg
mov
in
add
jp
jecxz
lods
je
hlt
mov
adc
dec
in
mov
outsl
ret
aad
je
icebp
rorb
andb
or
rcrb
cmp
adc
aaa
insb
iret
out
inc
xchg
pop
inc
popa
pop
nop
icebp
orb
nop
insb
pop
pop
lcall
lahf
rolb
in
xlat
xchg
push
push
aas
subb
rcr
adc
push
fistpl
out
pmovmskb
aad
lret
xchg
push
mov
test
push
scas
jg
add
fsubrl
sbb
scas
rcrb
sub
mov
adc
or
aaa
pop
pop
cmpl
pop
test
ja
adc
in
jecxz
xchg
jnp
fstpl
int
popfw
aam
fistpll
xor
int3
xor
lock
cmc
je
jns
xor
mov
lds
in
jae
add
push
repz
in
popa
mov
ds
das
repnz
popf
ror
add
mov
cmp
in
stos
sbb
jae
or
test
aad
mov
repz
scas
rcll
data16
xchg
pop
clc
cmp
es
xchg
sbb
je
adc
insl
dec
pop
push
subl
cmp
pop
jb
sbb
cld
int
in
jne
xor
sub
mov
fs
ds
sbb
cs
jno
imul
insl
adc
mov
test
add
fdivr
inc
push
inc
dec
rcrb
and
adc
testb
icebp
cmp
int
jge
xor
mov
aam
js
jne
frstor
ljmp
dec
adc
cmp
mov
jno,pt
popa
mov
mov
xchg
xor
push
cmp
sbb
mov
and
push
imul
scas
popf
jns
je
andl
add
cmp
nop
inc
and
test
push
mov
pop
lret
stos
pop
aaa
pop
sub
cmc
mov
ds
xor
sub
sbb
push
or
jo
subb
add
inc
mov
xlat
addr16
push
out
cmp
bound
negb
dec
mov
out
outsl
das
fs
adc
xchg
test
and
or
push
out
das
ret
lret
loop
cmpsb
rolb
pop
cmc
mov
lea
mov
test
push
shl
dec
filds
pop
mov
nop
jns
xor
clc
jnp
mov
inc
sbb
rcll
ljmp
pop
pop
ret
pop
ljmp
lret
jbe
mov
stc
jl
add
inc
rolb
mov
mov
mov
mov
hlt
lea
ja
es
fsub
push
negl
adc
test
sbb
sub
sub
inc
out
push
cs
and
pop
nop
mov
pusha
add
mov
mov
jnp
push
inc
in
adc
jp
test
and
mov
push
adc
std
out
adc
rcrl
xchg
mov
ret
xchg
add
push
cmp
dec
push
in
clc
cmp
rol
aas
ret
into
and
pushf
and
jo
les
push
sub
sbb
jno
ljmp
xor
pop
xchg
jle
pop
mov
adc
lock
jne
jp
in
jle
jge
cmp
lret
sahf
loopne
xchg
add
incl
xchg
gs
mov
jnp
call
adc
jp
jnp
and
loop
les
adc
and
shlb
sarb
test
or
sbb
push
xlat
adc
roll
lcall
jp
iret
sub
and
xchg
jp
mov
adc
fbstp
in
insb
test
jns
out
mov
and
das
mov
movsb
mov
pop
cli
xchg
adc
mov
push
lock
fldt
xor
dec
adc
jg
in
out
and
sub
xchg
movsb
add
out
push
scas
cmc
mov
inc
mov
or
lret
mov
sar
push
dec
xchg
or
or
mov
movsb
or
push
push
mov
adc
movntq
cwtl
daa
lret
test
ljmp
and
lods
and
xchg
daa
mov
add
insb
mov
push
cmp
jp
lds
outsl
sti
mov
test
push
daa
sti
cmpsl
push
mov
push
adc
inc
push
sbb
fistl
fdivs
jg
out
clc
in
inc
inc
mov
loop,pt
sub
jl
pop
hlt
adc
jne
cmc
xor
test
pop
ret
push
jge
fnstenv
and
push
ljmp
dec
or
xchg
push
jno
pushf
fnop
push
dec
push
push
fwait
dec
inc
and
xchg
sbb
mov
xlat
add
mov
cli
mov
push
mov
push
pop
add
icebp
call
and
jno
icebp
roll
add
sbb
xchg
pop
dec
jbe
push
fyl2x
xchg
lock
push
cld
push
arpl
and
loope
fidivl
popa
pusha
and
mov
mov
sub
out
shr
mov
pop
jecxz
lret
dec
inc
mov
cmp
inc
pop
push
fimull
stos
aas
xchg
push
jbe
sbb
les
loopne
fisttpll
std
dec
mov
fcom
mov
mov
int
sub
outsb
popf
push
ds
in
jbe
adc
je
popa
add
aam
jecxz
xchg
aad
xor
mov
mov
xchg
cmpsb
test
pushf
add
dec
pop
jl
sbb
push
outsb
shr
fstl
add
rorb
pop
shlb
jle
daa
iretw
xchg
clc
lds
into
fdivrs
lret
adc
icebp
mov
test
mov
and
lcall
xchg
mov
imul
leave
andb
movsb
nop
int
mov
dec
aas
pusha
pop
and
sbb
dec
pop
call
adc
push
sbb
mov
add
mov
mov
and
pop
arpl
ss
decl
jnp
mov
xor
push
push
or
mov
cld
jge
dec
push
push
mov
mov
add
jmp
xchg
icebp
loop
mov
pop
imul
pop
mov
jg
mov
mov
movsl
xchg
adc
loope
inc
push
lods
mov
std
loope
loop
fs
cmp
loope
push
repnz
lret
ficompl
or
pop
pop
ds
and
cltd
mov
dec
add
bound
or
xchg
cmc
pop
and
lock
cmp
dec
push
scas
out
cmp
mov
faddl
std
mov
adc
pop
pushf
pop
or
dec
nop
adc
push
int
push
stos
fldl
mov
addr16
int3
repz
adc
pop
jmp
xor
add
ficoml
aad
dec
cld
sarl
pushl
inc
icebp
dec
loopne
mov
pop
inc
jae
movsl
mov
mov
lds
push
and
ljmp
gs
lds
inc
std
xor
push
das
fs
or
push
add
mov
jmp
or
cs
jbe
add
scas
mov
cmpsl
cld
rcrb
out
movl
mov
addr16
fnstcw
push
sub
push
repnz
sbb
ljmp
aaa
sbb
gs
dec
pop
das
call
sub
popf
and
mov
mov
xor
fstpl
in
stos
je
shlb
incb
mov
shr
aaa
flds
iret
push
sti
push
int3
cmp
lcall
xchg
and
dec
add
push
inc
lods
das
out
jl
jae
jp
xor
mov
pop
adc
xchg
sbb
outsl
data16
mov
fwait
cmp
imul
fiadds
addr16
add
or
jnp
outsb
dec
cli
mov
flds
mov
adc
mov
push
loopne
stos
dec
mov
dec
outsl
clc
pop
lret
sub
into
push
mov
push
ja
stos
shl
sbb
fcmove
js
test
clc
push
in
xor
mov
js
or
pop
fs
jmp
adc
xchg
lahf
out
lahf
fwait
lock
int
mov
inc
mov
sbb
push
fnstsw
and
sbb
popf
sub
outsb
lret
mov
adc
lahf
jg
xchg
jne,pn
arpl
push
cmp
jne
push
test
add
cli
cld
push
dec
xlat
xchg
cld
sahf
mov
cli
jmp
cmp
hlt
add
ljmp
ficompl
pop
fxch
push
sbbl
or
pop
push
insb
pop
aaa
jl
arpl
pusha
pop
sbb
cmp
stos
jbe
in
push
int3
mov
insb
hlt
enter
adc
jl
xchg
xrelease
cltd
rolb
addr16
or
in
aas
sub
xchg
mov
cmpsb
dec
out
xchg
addl
insb
jg
ret
lods
xchg
mov
nop
mov
addr16
nop
pop
mov
cmp
mov
xor
movsb
inc
mov
loop
addr16
test
jno
int3
xchg
inc
mov
cmp
aaa
xorb
mov
adc
push
adc
sahf
cmp
jge
xchg
test
int3
or
in
test
add
xchg
lret
je
sub
pop
push
push
cmc
xlat
lds
js
je
pop
dec
in
inc
lea
dec
pop
and
scas
pop
mov
cmp
out
imul
xchg
leave
scas
adc
out
leave
cmpsl
ds
mov
loope
cltd
add
and
xchg
and
add
std
mov
mov
or
push
iret
xchg
push
ret
or
jecxz
daa
add
cmpsl
rolb
xor
sbb
pop
mov
inc
enter
bnd
xor
std
jle
cmp
and
ret
and
adc
das
test
dec
out
mov
pop
sti
loop
shll
push
es
cmpsl
add
orb
sub
into
push
inc
jle
or
jo
xor
mov
pop
push
and
mov
gs
add
jmp
pop
jns
jl
mulb
flds
roll
mov
jns
insl
adc
inc
fists
cmp
fdivrp
or
ds
sub
cmpsb
fmull
inc
xor
std
xchg
subl
pushf
cmp
cli
jle
pop
dec
orb
fs
add
sbb
adc
mov
mov
sub
imul
cmp
pop
scas
and
push
insl
inc
cmp
push
xchg
pop
jl
scas
repz
test
xchg
test
pop
mov
insb
fwait
mov
inc
push
shlb
mov
adc
fidivrs
loope
lods
inc
insl
push
xchg
add
dec
sti
pop
incb
sub
adc
mov
add
mov
repnz
or
and
sub
adc
arpl
int3
jge
push
arpl
sbb
std
cmc
xchg
rorb
mov
xor
scas
xchg
pop
pusha
sub
test
in
mov
adc
inc
out
test
lock
cmp
cmpb
test
xchg
icebp
jmp
repz
pop
inc
pushf
pusha
out
inc
lds
out
in
imul
sbb
xor
jbe
push
push
addb
xchg
dec
or
pop
dec
adc
lea
or
out
aad
sub
mov
push
lahf
ja
inc
aaa
gs
mov
nop
inc
out
mov
xchg
stc
clc
or
xchg
lods
xchg
push
mov
nopl
push
testl
add
pop
flds
jne
jg
mov
gs
mov
xchg
dec
arpl
test
cltd
daa
iret
or
ficomps
dec
sub
xchg
nop
jbe
insl
push
adc
jo
loopne
insb
xor
stc
jno
xor
scas
out
in
push
insb
and
js
add
mov
les
and
fcmovbe
shll
mov
push
loopne
sub
cmp
jmp
mov
aas
aam
fistpl
mov
sub
lods
jmp
xor
ficompl
sub
add
mov
repz
loopne
into
cmpsl
out
and
add
dec
cmp
add
xchg
insl
dec
push
aad
pop
cmp
mov
pop
push
pop
and
xchg
loope
ret
cmp
or
jmp
lret
sahf
fs
mov
test
dec
dec
movsb
lock
rorb
popf
push
push
pop
pop
ret
repz
dec
pop
cmp
jecxz
fiaddl
js
inc
and
jb
test
mov
xchg
arpl
cmp
enter
xlat
jle
push
adc
mov
push
rcrb
clc
adc
jne
sub
pushf
sub
xchg
xchg
mov
insl
in
xor
shlb
lods
cmpsb
addr16
and
es
cmc
mov
sbb
cmp
aaa
ud0
mov
ss
or
mov
and
inc
cwtl
push
xor
bound
ja
or
pop
dec
xchg
subb
sub
hlt
insl
sbb
push
inc
aam
pusha
lods
cwtl
ljmp
jb
cmp
mov
int3
insl
pusha
test
mov
lods
xchg
jmp
ljmp
fwait
or
cs
cmp
xchg
and
lock
add
dec
or
sub
bound
add
mov
mov
rolb
ds
adcb
mov
lods
and
add
push
pop
push
shrl
jb
test
cmp
push
jmp
push
dec
pop
shlb
mov
pop
outsb
and
pop
pop
mov
jns
in
into
jle
ret
xor
popa
lret
add
xor
sbb
sbb
ds
mov
ret
fdivs
ficoml
xchg
cld
jp
or
in
pop
nop
inc
and
add
mov
mov
pop
movsb
and
mov
dec
fmuls
push
sub
shl
xor
jge
cmp
lcall
jmp
iret
xor
out
lock
imul
out
pop
sub
jno
mov
or
lds
pop
out
jl
cmp
mov
mov
add
int3
jo
mov
repz
sub
int
xor
leave
dec
sub
dec
sahf
imulb
adc
cld
push
movsb
xor
aas
jnp
or
hlt
hlt
pop
push
add
ret
movsl
mov
xchg
rorl
scas
xchg
push
fisubrl
sub
outsb
roll
mov
sub
sub
pop
mov
push
inc
adc
pop
sbb
push
fwait
add
stos
int
fisttpl
or
in
fstpl
in
adc
ret
adc
mov
add
push
imul
mov
adc
push
cmpsl
rolb
xchg
push
cmp
out
iret
stos
pop
andb
adc
pop
lods
jnp
addl
push
jecxz
sub
jno
push
lahf
sti
mov
sbb
loop
pop
repz
push
aas
push
mov
ror
xor
jno
rcl
adc
mov
jo
insb
adc
lds
mov
push
push
mov
dec
push
jl
cli
aas
xor
pop
sbb
adc
ret
mov
test
lds
xor
mov
cmp
xor
sub
nop
adc
int
movsl
adc
out
notl
sarb
push
arpl
arpl
cmp
shlb
lock
sbb
nop
enter
xchg
shll
int3
test
enter
rcr
gs
out
mov
or
in
push
test
fldt
adc
cli
daa
cmpb
dec
dec
xor
mov
into
ret
stos
pop
aam
sub
insl
leave
mov
cmpps
fdivr
jle
sbb
push
addb
dec
ss
stos
int3
ret
icebp
inc
push
rcl
jl
std
mov
imul
xchg
mov
fwait
push
pop
sub
stc
add
fildll
sbb
out
je
jmp
fistpll
cmpsl
mov
icebp
sbb
lock
jl
lods
pop
adcl
adc
test
aad
inc
iret
cs
pop
adc
ret
and
sub
in
je
mov
sub
mov
scas
call
shl
xor
or
xor
mov
popa
cmp
xchg
sub
mov
cwtl
add
jne
js
mov
and
jo
or
ficompl
sbb
mov
aaa
dec
mov
jle
adc
pop
lret
xor
dec
jp
aas
mov
test
push
or
les
mov
std
adc
mov
push
aad
repnz
shll
ffreep
js
jns
inc
adc
cbtw
out
fcoml
mov
and
jl
jmp
adc
pop
ljmp
push
inc
insl
lods
mov
cld
fmul
les
sbb
mov
cmp
inc
xor
into
fists
lds
mov
push
shrb
das
pop
loopne
lret
lods
popa
sub
adc
mov
repz
pop
push
mov
pop
stos
insb
sub
icebp
jecxz
xor
sbb
movd
mov
roll
dec
adc
fmull
or
mov
gs
repz
cmp
adc
cmp
xor
inc
mov
lods
lods
adc
bound
add
push
push
imul
into
lods
jl
and
nop
out
lcall
ror
mov
aam
push
or
adc
mov
dec
cltd
lahf
inc
jmp
push
mov
adc
push
mov
or
shl
xchg
jge
int
leave
mov
bound
mov
fs
ds
xchg
cmp
cmpsb
dec
loope
insl
push
pop
insl
jae
in
mov
add
and
cmp
imul
inc
arpl
xlat
xor
dec
cs
jmp
push
dec
add
jmp
or
mov
lret
cmpsl
inc
push
sbb
pushf
filds
xchg
jo
out
rcrb
jnp
mov
and
inc
mov
push
hlt
enter
je
sub
and
jbe
fcoml
push
mov
jl
mov
shll
lods
out
xchg
jg
xchg
out
loope
test
sub
fistps
repnz
adc
cltd
bnd
jg
cmpsb
aaa
dec
push
arpl
outsb
outsl
fbld
movl
dec
fs
xor
and
pop
sti
xor
stos
clc
pop
mov
jmp
ja
push
jl
cwtl
pop
inc
pop
lret
sub
xor
and
js
mov
daa
out
lret
aad
in
xchg
repz
pop
test
or
mov
cmpsl
cmc
lds
test
xlat
out
addb
clc
mov
addr16
push
push
push
push
fsubrl
in
inc
cmp
add
or
mov
cli
cld
mov
cli
aam
mov
xchg
std
jl
lret
int3
lock
cltd
jge
push
push
pop
xchg
sbb
rorl
adc
jno
sub
push
push
in
js
stc
stos
adc
jnp
sbb
stos
test
mov
add
jp
lods
jnp
xchg
mov
jmp
aaa
pop
push
mulb
jb
jle
and
jge
in
add
add
cmp
out
int
pop
imul
pusha
ret
adc
jne
rolb
and
push
sub
daa
mulb
sub
push
xchg
inc
sub
jge
roll
cmp
loop
sbb
jnp
std
fistl
ljmp
mov
fnsave
std
leave
jmp
jecxz
pop
adc
nop
xor
and
das
mov
call
je
push
fsubrl
cld
xor
pop
ret
sbb
sub
xor
sub
bnd
jmp
sbb
jmp
loope
push
push
jmp
in
cmp
addr16
lahf
add
push
xchg
adc
shlb
es
jle
ret
cmp
mov
and
cwtl
out
xlat
inc
xor
in
xlat
lret
aas
xchg
push
pushl
ja
xchg
cli
cmp
xchg
pop
out
test
scas
fs
dec
int3
ja
xchg
es
fisttpll
fisttps
hlt
imul
sub
outsb
cmp
jnp
imul
je
rcrl
xchg
ss
pop
cmpsb
mov
sbb
mov
test
dec
clc
inc
lods
imul
sub
sbb
mov
jno
out
fs
in
adc
mov
add
push
incl
mov
scas
adc
hlt
push
int
xor
pop
or
mov
ja
pop
mov
out
sti
loop
xor
stc
inc
inc
inc
add
cmp
adc
adc
mov
jmp
fistpl
add
fs
iret
nopl
rcl
popf
imul
aam
jae
mov
cmp
push
fwait
mov
andb
subb
imul
rorl
jg
roll
adc
xor
lahf
shlb
or
mov
aas
int3
ret
jl
inc
loope
dec
dec
or
sahf
std
ljmp
shlw
jge
in
and
popa
mov
out
pop
dec
xor
in
push
lea
arpl
inc
imul
ds
mov
frstor
cmp
mov
insl
and
es
xor
pop
iret
jmp
add
jns
mov
push
in
mov
and
push
push
inc
iret
inc
shrb
xchg
ljmp
scas
xchg
icebp
aad
cmpsb
mov
cmp
jp
pushf
cmp
pusha
imul
int3
rcrb
xlat
sub
sub
lcall
xor
fadd
add
pusha
xor
or
sub
popf
ljmp
jmp
or
into
pushf
jmp
push
adcl
lds
ljmp
mov
mov
int3
mov
aad
cmpsb
je
adc
aad
shl
lcall
insb
push
int
popl
mov
jbe
out
rclb
sub
sbb
cltd
insl
inc
jno
aam
cmpl
imul
add
loop
inc
dec
cmc
pop
test
ror
or
dec
mov
dec
adc
je
or
sub
fidivl
stc
add
push
stos
xor
stc
and
or
add
mov
cmp
jge
inc
cmp
cli
or
dec
leave
xor
loopne
adc
add
inc
in
addr16
or
fistpll
jne
or
or
jp
mov
adcl
inc
dec
cmc
and
pop
xor
jae
sbb
maskmovq
testl
mov
pushf
mov
xor
add
add
adc
or
shll
mov
insb
mov
cmp
mov
adc
pop
sbb
je
sbb
jb
outsl
jnp
jbe
int3
pop
or
and
cmp
js
rcrb
int
mov
imul
insl
frstor
dec
jp
mov
mov
add
jne
fdivr
push
xlat
mul
ja
test
test
mov
and
inc
inc
pop
cmp
jbe
cmpsl
imul
cmp
clc
cmpsb
jo
arpl
xchg
sbb
dec
sbbl
imul
icebp
shld
sbb
jnp
xlat
inc
decb
fs
xor
aaa
adc
xchg
inc
sti
inc
test
add
mov
jne
test
loopne
xchg
scas
fxam
cld
pop
sbb
fwait
insl
test
sub
mov
es
push
cltd
pop
lods
mov
outsl
cmpsl
sbb
xchg
pop
test
and
fisttpll
loope
mov
jl
lods
mov
mov
xchg
jg
pop
mov
xchg
out
xlat
mov
jbe
fwait
push
or
in
js
push
add
cmpsl
xchg
lods
inc
clc
lods
loope
test
pop
int3
sbb
push
in
jns
add
pop
pusha
fwait
dec
dec
gs
fldcw
ss
cmp
cmp
aam
loopne
aaa
sub
add
shrl
mov
nop
out
jo
xchg
test
add
xchg
loope
inc
inc
mov
adc
dec
xchg
cltd
pop
mov
cmp
dec
mov
jge
out
mov
mov
gs
fbstp
decb
or
jo
out
jo
aas
add
adc
in
test
incl
sub
mov
fwait
and
fdivrs
cs
fldcw
movsl
ret
add
int
stos
push
rorb
lods
inc
jmp
jp
shrb
and
mov
lret
in
xor
jmp
lock
sub
movb
fidivrl
xchg
adc
cmp
and
or
fwait
ret
arpl
pop
inc
pop
data16
add
arpl
dec
aas
push
mov
int
jae
rcrb
push
jl
xor
mov
rcll
insb
sti
pcmpeqb
xchg
fistps
je
out
into
std
push
xchg
mov
push
lock
mov
loop
push
mov
mov
inc
imul
cmp
stos
lret
pop
adc
pusha
dec
mov
aad
mov
imul
mov
enter
lret
shlb
ljmp
jns
xor
push
out
cmp
sub
adc
stos
xor
mov
aad
neg
fsubrs
xchg
xor
and
mov
sahf
push
mov
xchg
pusha
enter
lcall
iret
jns
dec
xor
rcrl
ror
lods
xor
sti
mov
xor
gs
mov
adc
pop
loop
mul
jg
ret
call
dec
pop
pop
xchg
ret
cs
insb
cmpsb
repz
repz
rcr
cs
mov
push
stos
push
repnz
cli
cmpsb
push
stc
sub
xlat
imul
adc
sub
dec
sbb
xor
push
stos
push
test
fbstp
pop
mov
shrl
popa
inc
xor
cmp
jb
mov
sub
mov
pop
sbb
push
dec
lret
xchg
mov
inc
iret
movsb
add
and
stos
rclb
or
stos
or
aaa
psubb
mov
xchg
xchg
dec
int3
fstpl
push
outsl
lock
inc
out
daa
out
sahf
xor
aaa
xchg
dec
cmpb
pop
lret
gs
lcall
pusha
xor
pop
outsb
jae
add
loopne
lcall
ja
in
test
lret
bound
push
pop
adc
lock
clc
scas
and
mulb
movsb
stos
rorb
cmp
dec
movsb
or
fcoms
cmpsl
and
jmp
sbb
xchg
jnp
push
clc
icebp
scas
cltd
or
xor
mov
loope
push
or
cli
xlat
cmp
push
sahf
repnz
mov
lret
mov
in
jecxz
dec
lds
mov
mov
xor
mov
or
or
dec
cmc
pop
loop
cli
jnp
cli
inc
sub
inc
out
lods
scas
outsl
jge
sbb
cwtl
lods
pushf
push
mov
lods
insl
dec
jno
gs
ret
mov
xor
pop
cmpsl
test
test
jne
sub
es
jne
movsl
scas
cld
popf
inc
out
adc
loopne
cltd
dec
aam
inc
inc
xchg
cmpsb
push
jnp
pop
inc
nop
dec
dec
nop
mov
repnz
mov
mov
push
xchg
sub
jmp
enter
je
jae
inc
aaa
jecxz
sti
pop
push
data16
push
cmp
sub
push
cmp
mov
ficoml
and
add
sbb
cmp
ds
stos
mov
adc
xchg
add
fiadds
loope
sbb
cltd
jle
pushf
adc
int
hlt
test
add
adc
pushf
or
cmp
jmp
or
movsl
retw
xchg
mov
jle
push
push
test
imul
shlb
fdivs
mov
mov
pop
push
in
lahf
std
xor
cmp
orb
or
lahf
repnz
jmp
xchg
orl
mov
repz
inc
pop
jno
mov
and
jl
dec
mov
jp
adcb
ss
mov
jb
out
push
pop
outsb
pop
mov
arpl
call
mov
int
push
fdivp
jb
add
test
sbb
sbbl
stc
pop
sbb
mov
xchg
fcoml
jbe
in
test
add
test
mov
push
push
pop
cmp
repnz
and
xchg
aad
pop
sbb
or
jp
pop
sbb
jge
sbb
add
push
scas
adc
or
xor
and
adc
push
inc
movb
das
ret
and
inc
cmp
decl
xor
sub
push
in
imul
xchg
pop
test
inc
cmp
fwait
rcrl
sub
mov
mov
pop
and
out
mov
or
xchg
into
cmp
out
pop
lods
pop
inc
clc
inc
aad
sbb
adc
mov
mov
ds
iret
push
fcmovb
cli
inc
cmp
jle
addr16
fwait
xchg
ret
out
lret
scas
inc
sub
inc
psubb
mov
les
jg
mov
or
in
mov
leave
jae
or
adcb
fs
push
xchg
mov
mov
inc
cmp
mov
inc
mov
cltd
cmp
xchg
scas
fucomi
and
mov
fwait
ud2
dec
sbb
mov
and
pusha
inc
dec
add
lods
jl
or
ljmp
hlt
ss
pushf
push
mov
imul
std
mov
mov
out
sbb
inc
out
dec
int
and
adc
enter
je
xchg
shll
popa
jae
dec
jns
popf
dec
mov
adc
add
xlat
faddl
dec
or
mov
jb
cli
call
mov
loope
pop
inc
jb
jle
cmpsb
jae
pop
mov
cmp
jns
loopne
out
inc
test
mov
pop
or
flds
sub
daa
ret
nop
les
push
orl
add
add
dec
in
pusha
jns
clc
mov
push
sub
push
out
loopne
lods
sub
movsl
xor
int3
push
xchg
push
push
inc
lock
lcall
std
jmp
test
jb
mov
xchg
sti
in
std
inc
add
shrb
pop
stc
mov
jnp
lret
push
adc
jl
add
sarl
xchg
repz
outsb
lods
push
mov
inc
stc
sbb
and
andb
push
sbbb
xchg
push
popa
lods
xchg
arpl
xor
sarb
or
mov
icebp
test
dec
and
cmp
jne
shrb
dec
mov
cmp
out
sub
shl
adc
test
out
jg
das
bound
cmc
cli
inc
sbb
push
cmp
mov
inc
xchg
xor
add
mov
loop
jg
in
mov
inc
mov
lret
lds
shll
not
in
mov
mov
or
outsb
mov
push
and
lods
inc
push
mov
sub
into
and
lahf
xchg
sahf
add
mov
push
pop
push
xor
nop
mov
in
test
movsb
movsl
decl
and
add
and
stos
mov
sub
xor
cmp
add
pop
cmpsl
pop
xchg
mov
and
mov
in
pushf
nop
pop
mov
daa
lmsw
push
and
mov
push
and
daa
push
or
je
dec
cli
dec
lret
pop
xchg
aad
movsb
pop
inc
fsts
insl
jnp
out
xor
punpcklwd
loopne
pop
sub
scas
mov
mov
xchg
inc
sbbb
icebp
out
and
xor
rdpmc
jmp
testb
xchg
push
in
aam
dec
sbb
in
dec
mov
sbb
lahf
or
aas
add
pop
sub
das
arpl
xchg
out
dec
leave
mov
insb
inc
mov
inc
lcall
iret
in
mov
fnstenv
shlb
iret
in
lret
xor
or
insb
hlt
out
fst
clc
jmp
mov
xchg
dec
mov
stc
jp
lahf
xchg
imul
cmp
hlt
mov
adc
inc
push
jmp
rcrl
mov
in
cmp
int3
inc
aam
sbb
pop
imul
mov
xor
mov
out
push
inc
mov
mov
pop
mov
cmp
mov
outsl
test
fistl
imul
mov
lods
in
cs
mov
and
xor
test
movsbl
call
push
dec
imul
sub
and
xor
pop
push
dec
adc
xchg
jb
cmp
cmpsb
adc
adc
cmp
push
mov
cli
repz
xor
pop
orl
icebp
and
xor
cmp
ret
test
xor
test
add
xchg
movsb
dec
loop
mov
sbb
adc
es
xchg
xchg
push
sub
add
nop
loop
and
mov
fucomip
addb
adc
xor
lds
fistps
cli
sbb
adc
xchg
pushf
adc
shll
sbb
stc
ja
mov
push
mov
cld
xchg
cmp
notb
movsl
and
and
mov
mov
jae
test
aas
hlt
xor
add
and
sbbb
sub
ret
mov
imul
sub
lds
pop
push
dec
int
sbb
sbb
fcompl
ljmp
test
cmp
dec
les
adc
lds
mov
mov
stos
xor
bound
mov
cs
cltd
aas
js
xchg
fcoms
shrl
fadds
dec
les
add
insb
add
xor
fidivs
or
scas
nop
inc
inc
xchg
adc
dec
jnp
lock
testb
std
lea
add
push
pop
insl
fmul
clc
push
add
in
insb
pop
pop
xchg
ror
pushf
gs
push
aad
insl
sub
repnz
cli
adc
jno
fwait
inc
mov
mov
aaa
subb
pop
aam
adc
js
cwtl
stos
or
dec
push
xlat
push
push
mov
xchg
ja
ljmp
jne
or
ja
and
or
jg
insb
jbe
inc
repz
jmp
cmpsb
sahf
xor
mov
lock
ja
ret
or
mov
mov
fidivs
cmp
inc
dec
pop
or
loopne
cmpsl
popa
mov
shrl
cmp
inc
xchg
cwtl
addb
repnz
rcr
xchg
das
cmp
pop
mov
sub
fwait
cmp
jmp
neg
ljmp
sub
data16
inc
rcr
int
aad
fs
loope
inc
mov
add
loope
mov
sub
and
faddl
push
or
fisttps
hlt
cmp
fadd
ret
xchg
stos
cwtl
xchg
jmp
cmp
test
ljmp
das
mov
push
mov
fimuls
xor
jo
insb
cmp
sti
mov
xchg
fwait
adc
adc
xchg
adc
adc
fadds
loopne
sub
mov
pop
lods
pushf
mov
fwait
mov
fisubrs
js
insb
stos
or
shl
cltd
stc
push
movsl
loope
mull
outsl
cmp
pop
push
stc
fsubs
test
sbb
loopne
jbe
popf
out
scas
mov
and
xlat
ficompl
inc
mov
push
mov
or
cmp
add
or
mov
inc
jae
lds
push
test
popfw
push
push
mov
dec
fnstcw
push
dec
lods
sbb
cwtl
jmp
imul
lcall
aaa
in
cmpsl
or
xor
movsl
out
ret
cmp
mov
xor
xor
mov
cmc
cli
aas
fldenv
jecxz
fldcw
shl
and
repz
xor
inc
test
out
add
adc
lret
inc
dec
mov
mov
cmpb
imul
xor
or
push
test
iret
das
mov
addb
js
fwait
sub
ret
insl
jnp
mov
sbb
jae
inc
inc
xor
or
or
mov
aas
inc
pop
mov
sbb
faddl
inc
sbb
dec
push
pop
fisttpll
xor
mov
push
addr16
subl
inc
pop
jbe
xorb
fs
xor
add
inc
inc
movsb
in
cs
mov
fmull
gs
ret
test
xlat
and
sbb
xor
addl
mov
mov
pop
stc
sti
inc
outsb
dec
pop
aas
xchg
std
mov
push
inc
out
dec
sub
arpl
out
mov
push
inc
cmp
sub
cld
xor
sbb
outsb
mov
mov
add
add
sub
and
aas
jmp
out
mov
mov
mov
cwtl
jo
in
jne
enter
pop
push
or
pop
gs
outsl
mov
mov
xlat
sbb
mov
rclb
sbb
clc
leave
push
mov
xchg
jl
fdivl
sbb
jbe
mov
rcrl
push
or
push
pusha
ret
ret
pop
mov
xorl
int
test
roll
imul
xor
cmpsl
lods
mov
xlat
lds
pop
xor
and
sub
jae
movsb
xor
int3
sub
ret
ret
ret
lcall
mov
jp
inc
mov
fidivrs
fmull
mov
push
mov
pop
sbb
pslld
fbld
pusha
pop
and
pop
xchg
dec
aad
rcrb
shl
test
and
jle
mov
pop
lds
mov
int
cmp
xor
xchg
push
movsb
cmp
dec
jnp
testl
sbb
or
xchg
xchg
jno
mov
push
imul
test
push
into
outsb
fwait
cmp
push
mov
xchg
cmp
adc
insl
xor
icebp
mov
pusha
sbb
xchg
loopne
push
mov
hlt
shlb
scas
hlt
into
mov
in
pop
dec
mov
jecxz
loope
leave
add
lcall
loop
mov
js
popf
popf
imul
adc
mov
andb
sub
dec
mov
mov
dec
mov
jp
cmpsl
cmc
push
sahf
loop
dec
fildl
adc
mov
adc
test
lods
insb
xor
lock
sbb
int
mov
leave
lret
and
adc
mov
adc
and
add
dec
mov
rclb
fwait
in
shrb
movsb
cmp
cmp
pop
pop
pop
sbb
pop
xchg
movsb
out
and
inc
push
idivb
mov
inc
pop
int
cs
xchg
xchg
mov
xchg
call
sub
jmp
sbb
adc
and
and
jg
mov
mov
and
xor
dec
sahf
subb
push
adc
dec
ret
insb
or
mov
cmpsb
mov
insb
pushl
dec
jge,pt
sti
outsb
jb
and
xor
mov
stos
addr16
test
push
lea
stos
inc
xchg
dec
leave
xorb
rorb
sub
arpl
mov
or
push
jecxz
or
sbb
bound
jg
int
adc
inc
or
test
mov
mov
andb
mov
rcll
cmpsb
cltd
fs
stc
push
push
movsb
dec
mov
mov
cmpsb
loope
xchg
out
lock
nop
jbe
push
scas
cmp
out
call
lds
int3
sub
mov
mov
rcrl
and
insl
xlat
imul
into
divb
movsb
and
jmp
fucomip
clc
icebp
and
jne
lcall
inc
dec
sti
popf
jae
pop
in
lods
pop
pop
lcall
call
sub
sbb
mov
loop
pop
shl
rorl
int3
pop
outsl
jnp
daa
cs
jle
mov
addr16
ret
pushf
cltd
or
push
xchg
or
int3
sahf
cmp
addr16
das
cmp
push
pop
pop
or
mov
repz
sbb
cmp
cmpl
bound
mov
in
pop
add
cmpsl
xor
push
out
es
mov
sub
xor
rcrb
in
add
xor
push
inc
mov
jg
and
or
cli
mov
add
sub
adc
or
ss
add
cmp
sub
mov
pop
and
jne
test
fs
cmp
test
enter
ss
insb
push
and
leave
pop
in
inc
das
jbe
sarl
cltd
repz
pop
mov
inc
dec
push
cmpxchg
xlat
xchg
jb
mov
sahf
mov
sarl
jb
mov
mov
gs
shl
int
rcr
ds
mov
push
cltd
push
xchg
xor
movl
scas
out
jnp
les
sub
mov
out
push
dec
mov
clc
sub
add
jb
mov
jl
push
inc
mov
pop
fildll
pushw
and
mov
sub
push
bnd
mov
lds
and
push
cmc
pushf
enter
test
les
out
mov
dec
insl
mov
in
pop
add
stos
sti
mov
inc
lcall
cmp
sbb
outsb
mov
jmp
jg
add
cmpsl
jo
mov
js
lods
nop
fsubrs
ljmp
pop
pop
test
aam
xlat
inc
aaa
loope
movsl
add
cltd
add
inc
negb
xor
jl
add
sbb
mov
repz
cltd
lcall
pop
cs
add
hlt
loope
sbbl
push
cmpsl
and
out
pop
lods
push
mov
clc
and
sbb
sbb
sub
daa
loopne
pop
inc
xchg
divb
adc
mov
dec
adc
fsubrs
sahf
mov
adc
cmp
lods
add
outsb
jecxz
inc
pop
jl
mov
mov
push
mov
insl
pop
jl
lods
inc
nop
push
add
adc
inc
fwait
popf
jo
shl
movsl
leave
or
cmp
push
dec
push
push
lret
daa
frstor
jnp
iret
add
lcall
fsub
push
out
loopne
ss
push
inc
pop
push
cmc
pushf
test
add
fucom
outsb
aad
stc
sti
dec
and
lds
je
inc
call
jb
loopne
je
push
fwait
mov
repz
ja
mov
mov
adc
int
sbb
test
in
sti
dec
sbb
adc
jg
lahf
daa
jge
mov
adc
iret
xchg
mov
lods
sbb
or
push
shll
out
or
jns
out
sbb
imul
scas
ss
push
repz
insb
stc
jmp
xchg
jge
loopne
dec
aas
test
cmp
hlt
xchg
out
cmp
enter
mov
cli
mov
aad
int
popf
lea
and
nop
daa
xchg
jecxz
test
xchg
mov
xchg
add
bound
jnp
pusha
lock
xchg
xchg
mov
fldenv
xchg
mov
push
sbb
adc
shrl
andl
jno
mov
data16
lahf
es
nop
mov
sub
sbb
or
or
dec
jbe
in
xor
cmpb
pop
ss
push
cltd
ds
mov
gs
adcb
imul
mov
loopne
outsb
scas
aam
paddb
aaa
bound
fstpl
mov
push
loope
mov
jl
aad
mov
push
scas
and
mov
out
and
out
loop
mov
pop
lods
cmpsb
mov
lret
movsl
enter
in
call
push
pop
sarl
das
lods
enter
cltd
jmp
idiv
add
int3
dec
push
roll
jnp
cmp
ret
push
aam
jne
out
push
ss
jae
pusha
cmp
xchg
out
and
sbb
or
dec
stos
addl
movl
es
add
mov
cmp
loopne
xor
jmp
lahf
int3
sub
cmpl
lret
sub
add
pop
pop
les
inc
rcrb
fcomp
in
out
sub
push
std
loopw
pushf
rclb
test
jae
cld
xchg
inc
xor
cmp
insl
sub
cmp
cwtl
add
xor
inc
mov
push
jge
or
mov
inc
sbb
jno
sti
data16
add
push
int
jno,pn
inc
jns
jo
outsl
movl
adc
xor
aas
sti
int
push
push
lock
mov
mov
divl
inc
add
inc
pop
mov
test
cld
xchg
inc
and
aaa
adc
rolb
lods
stos
dec
aas
dec
les
cmp
stc
fwait
cltd
dec
mov
fistpl
test
mov
andb
mov
pop
mov
or
push
mov
enter
lods
push
addl
push
shll
ud1
push
das
sarl
int3
stos
rolb
inc
inc
and
cmp
mov
mov
xlat
add
sub
pop
inc
inc
mov
and
pop
jo
mov
fucom
outsb
and
sub
dec
fmulp
cld
cmp
xor
cltd
in
test
loope
push
int3
movsb
ljmp
mov
scas
sub
cmp
sbb
xchg
lock
and
mov
sti
popf
fdivrp
clc
jns
rcl
cmp
push
pop
inc
iret
cltd
pop
negl
sbb
hlt
leave
int3
jg
frstor
nop
rclb
pushf
out
xor
fucom
std
mov
xchg
cmc
mov
pop
or
out
sbb
test
adc
sbb
js
mov
push
dec
les
lods
sahf
mov
pop
and
int
sub
bnd
push
cs
xor
add
adc
adc
inc
dec
adc
cmpsb
mov
cmpsb
dec
push
push
das
mov
and
mov
je
jnp
jbe
out
test
cmp
add
xor
les
xlat
mov
jo
xchg
mov
cmp
cld
sbbl
sbb
js
or
shrb
xlat
out
mov
out
lcall
add
inc
mov
shrb
push
push
jne
cltd
pop
xchg
je
addr16
mov
shrl
hlt
nop
lock
jb
push
dec
push
push
inc
and
mov
andb
sub
rcrb
iret
sbbb
jae
loopne
add
cmpl
clc
iret
sti
sub
divl
ret
inc
inc
push
enter
push
sbb
repnz
jle
mov
mov
mov
xor
stos
dec
mov
sbb
mov
cmp
mov
movsl
pop
test
xor
mov
cmp
mov
insl
inc
sbb
mov
mov
pop
inc
pusha
sbb
inc
fstl
xor
js
mov
or
mov
xor
insl
mov
pushf
test
in
mov
mov
mov
scas
jb
aaa
add
mov
push
inc
push
repnz
mov
pop
pusha
adc
dec
hlt
pushf
pop
sti
inc
cmpsb
and
jnp
push
inc
or
clc
clc
adc
sub
sbb
data16
mov
adc
jno
aaa
jb
loop
mov
pop
pop
loope
jnp
loopne
lock
mov
push
stos
mov
dec
mov
shlb
mov
test
iret
mov
js,pn
in
into
stc
push
fisubl
cmc
clc
fadd
dec
test
dec
test
out
xor
and
add
test
sbb
and
orb
icebp
pushf
pop
aam
xor
fs
andb
inc
lea
and
stos
jle
pop
insl
adc
dec
movsl
mov
mov
pop
cld
int
mov
fdiv
daa
mov
sbb
sbb
iret
std
test
lret
es
insb
fadds
dec
popa
add
mov
repnz
lea
sub
data16
pop
fbstp
cmp
leave
aaa
aad
mov
pop
roll
cmp
out
cmp
push
cmpsb
dec
aam
leave
fwait
dec
das
das
mov
mov
adc
jns
mov
xor
push
je
cmp
pop
add
xchg
mov
adc
test
lret
cmp
mov
sub
out
je
scas
ss
jo
xchg
xlat
cmpl
xchg
mov
xor
into
or
xor
mov
push
xor
test
lods
and
idivb
in
adc
jmp
adc
dec
out
stos
idivb
out
cwtl
mov
in
lock
loop
cmp
ljmp
outsb
icebp
fwait
nop
leave
xchg
add
adc
andb
sub
or
inc
adc
dec
pop
in
or
into
jne
pcmpeqw
loop
rolb
push
jns
cmc
push
xchg
mov
sbb
ficoml
aad
xor
shll
push
fisttpll
cld
cli
outsb
addr16
cmp
lret
xor
and
or
lahf
jl
data16
fst
outsb
push
sbb
aaa
adc
fisttpll
mov
push
jb
jnp
jp
sbb
imul
xor
sti
sub
movsl
jb
push
arpl
dec
hlt
outsb
out
inc
xchg
inc
movsb
inc
or
sbb
adc
xor
push
dec
ja
scas
cmpsb
inc
pop
jg
jl
mov
int
pop
ror
lds
inc
add
adc
push
scas
jg
nop
lds
sahf
jns
out
stos
cmp
jnp
or
inc
hlt
inc
lds
cmpsb
xchg
cmp
out
jb
fisubrs
inc
add
jl
jle
lret
push
xor
xchg
adc
mov
jne
test
inc
xchg
pop
xchg
int3
sub
dec
jae
jecxz
imul
enter
pusha
mov
loopne
and
cs
sbb
int3
shl
fdivr
inc
test
add
xchg
jle
jb
jg
lea
ja
sti
pop
inc
xor
jge
cmp
ret
inc
jae
cmpsb
lock
int
push
ss
std
insb
mov
gs
ss
add
mov
cltd
sbb
iret
shll
rorl
mov
xchg
cmp
xchg
mov
mov
jae
testb
jbe
cs
sbb
outsb
fldt
mov
mov
fs
sub
xchg
adc
inc
int3
nop
cmpsl
xor
fidivrs
mov
cmc
jp
add
adcl
pop
cli
sti
mov
in
dec
xchg
gs
and
aam
mov
lea
iret
daa
dec
pop
push
or
aad
sbb
movzwl
out
adc
in
fsub
lret
xor
stos
adc
sub
add
add
insl
mov
mov
jg
xchg
cs
subl
lcall
call
mov
push
cmpsl
rolb
cltd
jb
int3
inc
mov
or
push
pusha
push
mov
dec
imul
fistl
adc
add
or
or
mov
cmc
iret
call
lods
pop
cmp
sub
xorl
sub
jmp
dec
sub
mov
movsb
push
aaa
loopne
pop
popa
fsubp
xor
push
inc
aaa
pop
and
movsl
adc
out
notb
xor
ljmp
cmp
lret
cld
jp
sub
mov
loop
sti
cmp
mov
cmp
cmpsl
push
or
fistpl
repz
cli
push
lea
popf
dec
mov
mov
sbb
push
hlt
jo
aam
and
call
jnp
xor
scas
xor
cli
or
orb
jecxz
icebp
push
mov
cwtl
mov
mov
loope
ficoml
add
mov
sbb
stos
adc
jp
jbe
maskmovq
negl
aaa
lods
js
lea
movsb
movb
rcrb
push
push
push
das
dec
stos
sti
dec
cmp
int
pop
pop
add
clc
sbb
sub
imul
aad
cmp
roll
xor
add
mov
mov
fwait
cltd
loopne
or
cmp
mov
or
adc
mov
pop
fdivrs
dec
ret
or
fucomp
jbe
push
enter
mov
xchg
sbb
xchg
and
xor
push
leave
jnp
loopne
jg
js
loopne
or
je
addr16
and
xor
ljmp
int
cli
js
and
lods
adc
test
popa
push
divb
and
cmc
jne
mov
jns
addr16
xchg
scas
fcoml
outsl
cmp
xlat
adc
and
xchg
test
inc
lret
leave
repnz
mov
scas
rcll
pusha
in
fwait
cltd
pop
jle
sub
fbld
cmp
loopne
subw
and
in
jae
dec
xchg
mov
notb
addr16
outsb
jbe
loope
test
pop
push
fwait
scas
mov
idivl
test
arpl
out
mov
xor
add
scas
dec
push
and
pop
add
xchg
jge
aad
add
push
or
sub
lret
arpl
fistl
cmpb
int
cs
imul
and
xchg
dec
mov
mov
xlat
cmpsl
mov
jae
inc
sub
hlt
jbe
push
rorb
jle
movsb
xor
xchg
xor
jnp
imulb
out
shll
inc
mov
jae
mov
adc
mov
fdivp
or
cmp
nop
popf
push
push
or
icebp
lock
sub
mulb
mov
xor
sub
inc
imul
dec
pop
ficompl
leave
loopne
jo
add
out
mov
adc
pop
mov
or
cmp
xor
push
sub
addb
cmpl
nop
cmpsl
pop
aad
test
xchg
ljmp
inc
out
push
scas
dec
pop
add
mov
dec
mov
dec
cltd
fisubs
aas
jmp
fdivrl
sarl
inc
dec
push
rcll
adc
pop
sbb
and
or
push
and
or
jno
je
cmp
cltd
loopne
fstl
lea
lcall
dec
rclb
cltd
fistpll
pop
stc
inc
xor
sbb
fnsetpm(287
cld
rclb
xchg
mov
adc
iret
sub
add
sbb
and
ja
xchg
aas
inc
ljmp
cmp
subb
jno
in
cs
shrb
cmp
or
pop
lods
add
inc
sbb
jg
rolb
jl
xchg
cmpsb
jo
xchg
rorb
jmp
xchg
sub
js
add
mov
xor
mov
dec
xor
cmp
mov
hlt
sub
fmuls
leave
aaa
shl
pop
cs
test
jne
add
mov
hlt
mov
push
sub
cwtl
aaa
aad
das
jp
rorb
sub
and
push
ljmp
pop
sub
fld
aaa
cmp
inc
mov
jo
xor
dec
adc
and
aad
imul
inc
jmp
mov
and
fcoml
xchg
adc
mov
pop
popf
lea
mov
fsubl
aas
mov
pop
stos
xchg
and
and
fmul
mov
inc
pop
dec
mov
and
cmp
and
mov
push
inc
repnz
pop
push
mov
mov
nop
sti
std
lahf
add
add
andb
adcb
pop
hlt
add
mov
dec
xchg
xchg
negl
repnz
jmp
in
fcompl
pop
dec
shll
push
addr16
in
inc
or
addb
and
add
dec
dec
mov
inc
prefetchwt1
push
lret
sbbl
int3
adc
adc
dec
push
mov
or
rcll
push
inc
in
pop
and
fistl
orl
sbb
adc
les
nop
enter
arpl
daa
lods
sub
aaa
pop
mov
sahf
imul
push
jo
adc
inc
bound
cmpsb
fstps
xchg
dec
and
push
cmp
xor
insl
jne,pt
inc
lret
in
outsb
mov
jbe
cli
lods
inc
sti
stos
push
pop
pop
aam
fldenv
fadds
push
rclb
je
rcrb
adc
push
push
jns
pop
iret
jle
std
cld
aad
sarl
mov
scas
adc
cmp
sahf
flds
sarb
sbb
push
loopne
sub
push
push
daa
mov
sub
mov
jle
stos
rcll
test
mov
push
xor
xor
mov
xchg
xchg
xchg
mov
jbe
into
insl
and
mov
mov
or
shrb
shr
rorb
pop
loopne
or
daa
jge
xchg
aad
inc
mov
xchg
subb
clc
mov
lcall
outsl
mov
xor
add
test
sarl
mov
sbb
mov
mov
lahf
jl,pn
nop
loop
negl
push
mov
jnp
sbb
ret
mov
int3
xchg
xchg
stc
pop
pop
xor
and
andb
sub
cmp
test
shrl
dec
xchg
mov
jns
rorb
xorb
and
repnz
aad
mov
jge
mov
wrmsr
xchg
cmp
clc
leave
push
mov
sbb
rcrb
dec
int
jns
roll
aam
push
push
mov
sbb
cld
pop
mov
or
fdivrl
cmp
test
mov
jecxz
ljmp
cltd
dec
in
xchg
mov
or
adc
sahf
lock
mov
lcall
ficoms
adc
mov
int
jae
dec
sub
jae
into
cmp
adc
cmp
push
xor
pop
jb
js
movzwl
adcl
push
pop
fsubl
jno
sbb
stos
movsb
inc
cli
mov
ljmp
test
inc
mov
jno
mov
sub
aas
mulb
push
jl
inc
sti
mov
adc
lret
inc
mov
push
lock
inc
gs
insl
out
mov
es
xchg
mov
dec
icebp
mov
add
lea
inc
call
ljmp
loopne
cmpsl
movsb
mov
test
sbb
push
dec
mov
icebp
std
insl
pushf
push
sbb
rcrb
sahf
and
popa
das
pop
dec
and
jmp
data16
rcrl
xor
mov
mov
stos
cmp
je
jb
mov
jns
jmp
sub
int
shl
jge
push
xchg
popf
add
cltd
jp
lds
gs
pop
lods
lcall
jae
jge
iret
lea
sti
jno
mov
daa
xchg
lock
mov
gs
cmc
data16
adc
and
aam
leave
mov
loopne
insb
enter
xor
mov
jge
mov
xor
cmp
icebp
in
or
es
loopne
add
pop
add
xchg
push
lds
in
add
cli
xor
pop
mov
cld
mov
cmpsb
movsl
sbb
mov
aaa
cmp
mov
adc
fprem1
mov
std
push
mov
sbb
mov
lahf
push
push
lret
xor
pop
ds
data16
mov
sahf
sub
cmp
adc
mov
jge
out
ja
add
dec
adc
mov
and
and
sbb
lahf
push
adcb
xor
add
cmpsb
loopne
mov
das
xchg
jne
sub
out
xchg
push
mov
sti
cmpsb
in
sub
sub
f2xm1
loop
jae
mov
enter
aas
or
cltd
lea
mov
push
or
pop
mov
dec
adc
cmp
lock
sbb
jle
sbb
add
xor
xchg
in
mov
xor
cmp
mov
stos
mov
sub
cmp
stc
filds
insl
fwait
bound
insb
pusha
aam
icebp
leave
mov
mov
xchg
fwait
and
test
popf
cld
ss
sub
sub
pushf
inc
cmp
inc
mov
mov
lock
idivl
mov
jbe
lods
pop
xchg
mov
out
cli
out
pop
js
repnz
outsl
cmp
out
ds
jmp
xchg
js
jns
add
je
mov
lret
xor
jp
jmp
sbb
movl
sub
push
jbe
xorb
aad
xor
pop
adc
jo
imul
fcom
std
ret
dec
cmp
mov
mov
push
test
stos
xor
jg
cmp
rol
ja
loopne
rcll
fdivl
stos
stos
push
inc
sbb
jb
arpl
or
into
push
lods
fistpll
cmc
cmp
wrmsr
jg
and
jne
std
lds
outsb
out
outsb
rorl
data16
cld
adc
aad
pop
inc
mov
mov
outsb
cmp
lret
stos
scas
scas
fsts
cs
inc
add
div
jo
loope
ror
sbb
paddsw
push
or
adc
pop
lahf
sbb
imul
push
mov
push
mov
or
mulb
mov
inc
add
sub
push
sbb
xchg
cmp
cmp
sarb
push
push
mov
sarb
sbb
cmp
sbb
bnd
cmp
add
lahf
psrld
int3
mov
movsl
insb
dec
mov
mov
rorl
jo
idivb
or
cmp
mov
adc
sti
cld
stc
int
xchg
gs
push
push
out
and
sub
mov
mov
xchg
test
cmc
or
aaa
inc
aad
lods
lcall
lahf
aad
ja
jecxz
xor
mov
lock
xorl
and
sbb
pop
mov
inc
jae
outsl
and
mov
jb
imul
lods
cmc
mov
cmp
push
mov
movsl
jmp
dec
jne
out
xchg
push
cmp
add
daa
xor
push
imul
push
repz
pop
inc
test
adc
or
inc
mov
test
push
aad
mov
push
add
ss
out
push
xchg
scas
notb
hlt
pop
and
icebp
jmp
sahf
test
or
and
inc
enter
cmpsb
pop
pop
pop
mov
mov
inc
mov
mov
dec
rclb
lcall
lcall
ret
jmp
and
in
sub
push
dec
call
xchg
lea
leave
push
push
pop
arpl
fxch
scas
pop
imul
lahf
mov
add
inc
jecxz
lds
incl
popf
addb
jno
ds
pop
dec
lea
mov
adc
stc
mov
and
xchg
cmp
sbb
sbb
mov
fwait
hlt
adc
fs
icebp
xlat
imulb
cmp
push
rcl
push
adc
imul
dec
xchg
outsl
loop
shll
scas
enter
rorb
js
aad
cmpb
pop
outsl
mov
add
mov
sbb
push
push
leave
in
sahf
xchg
jb
cmp
mov
ja
push
mov
jg
push
ret
sbb
pop
sbb
mov
push
enter
jnp
and
inc
mov
jo
fcoms
in
xchg
scas
mov
xor
out
add
js
je
xchg
pop
sbb
push
scas
cmpsl
cs
scas
xchg
clc
dec
addl
dec
cmc
jl
pop
cmc
icebp
mov
mov
jge
outsb
sub
add
or
test
push
mov
imul
mov
mov
mov
aam
int
ljmp
jb
push
cmp
insb
insb
mov
xchg
xchg
notb
adc
jo
mov
stos
rcl
pop
sub
mov
jg
inc
enter
cmp
sbb
andb
xor
sbb
dec
in
cmp
leave
mov
mov
jnp
out
lds
or
mov
bound
mov
icebp
mov
faddp
pop
sbb
push
mov
std
cmp
pop
pop
pop
mov
xor
arpl
insb
fbstp
imul
out
jb
cmpsb
mov
pop
cmc
and
jo
xlat
into
movsb
mov
sbb
outsl
inc
mov
enter
inc
inc
push
daa
sahf
outsl
cmpsb
mov
insl
movsb
mov
mov
es
lahf
call
or
pop
inc
xlat
push
mov
adc
gs
scas
mov
clc
inc
bound
xor
or
pop
inc
push
jo
ffree
inc
and
mov
lods
jno
inc
xor
add
in
push
aaa
pop
out
xor
sub
inc
mov
mov
aas
mov
and
jg
add
ficomps
or
cmovbe
mov
dec
xchg
arpl
xchg
xchg
sub
mov
cmpsb
into
out
adc
fs
dec
dec
mov
dec
jl
mov
mov
add
sub
rolb
push
stos
xchg
mov
adc
popa
sti
ja
shl
mov
sbb
stos
sbb
mov
add
add
add
cmpsl
nop
fmull
push
push
push
int
loope
gs
xor
inc
lret
or
push
add
test
dec
call
cmp
aad
pop
push
add
rclb
pop
adc
dec
icebp
sbb
jmp
xor
adc
mov
popa
pushf
icebp
xchg
mov
mulb
stc
jle
inc
inc
dec
mov
cmpb
dec
jno
xchg
out
add
sub
mov
pop
mov
adcl
mov
or
add
jne
loop
xchg
mul
fsubs
and
fldcw
sub
lods
jp
fsubrl
pop
sbb
mov
inc
mov
jae
int
lcall
sub
icebp
xor
pop
sti
lds
pusha
int
jl
ret
push
mov
mov
push
jb
leave
lods
cltd
xor
sbb
lret
addr16
inc
mov
fdivs
sbb
dec
std
jae
push
jae
lret
adc
enter
cmp
scas
cwtl
pop
stos
mov
lock
je
or
call
in
aad
cmp
fcompl
add
cwtl
mov
fildll
jmp
nop
xchg
cltd
lahf
jge
sub
add
inc
sbb
inc
push
cld
jbe
popa
fs
pop
sbb
xchg
cs
mov
testb
iret
jbe
push
in
jmp
aad
cmp
pop
xorl
push
pop
shl
addb
inc
inc
mov
cld
jns
mov
out
pop
and
int3
sbb
ja
adc
push
sbbb
dec
jne
push
testb
test
cli
icebp
jne
or
ljmp
add
test
clc
insb
je
icebp
mov
dec
mov
mov
mov
mov
stos
cmp
mov
adc
out
dec
or
add
xor
icebp
push
cmpsl
fcomip
push
insb
or
nop
cmp
test
sbb
sub
xor
push
jl
inc
jg
stos
jp
incl
pop
jae
into
dec
movsl
sarb
in
ret
sub
jecxz
stos
cmp
dec
mov
int3
cmp
in
sub
into
hlt
add
jo
insb
mov
mov
movsl
mov
cld
mov
cmp
inc
fsubp
cltd
inc
pop
out
mov
inc
data16
inc
mov
xor
jge
loop
jo
ret
jae
icebp
and
aaa
out
adc
xchg
push
dec
xor
jg
fisubrs
jmp
mull
imul
lret
mov
vpsubusb
sub
mov
ljmp
out
outsb
cwtl
ja
adc
data16
in
rcl
push
test
clc
adc
mov
ret
mov
nop
imul
inc
add
cli
pusha
stos
add
ds
mov
in
pop
and
or
adc
mov
inc
dec
ret
bound
js
call
stc
mov
dec
jne
mov
sti
sub
xor
neg
add
psubb
lret
cmp
mov
or
jecxz
xor
fwait
mov
in
mov
repnz
mov
in
fimuls
mov
arpl
ret
ret
mov
je
fadds
sub
int3
test
phsubd
sbb
mov
add
int
aaa
mov
jbe
imul
xor
icebp
cwtl
add
and
xchg
xchg
hlt
insb
mov
mov
cmpsl
gs
in
mov
dec
outsl
push
es
lret
adcb
dec
jb
scas
jns
jno
xchg
adc
outsl
xchg
bound
sub
dec
mov
cmp
jp
ret
jle
loope
inc
inc
and
and
xor
aam
enter
mov
pop
xchg
mov
icebp
and
cmp
test
inc
pop
scas
add
or
imul
mov
dec
fstp
clc
sub
dec
or
stos
lcall
pushf
mov
xchg
subl
lea
pop
fxch
sub
out
popf
lret
mov
jns
add
add
das
mov
dec
roll
lods
dec
dec
inc
in
lret
mov
jo
popf
cmp
cs
outsl
push
das
mov
jno
scas
imul
push
sbb
pop
dec
inc
lods
ss
jbe
mov
inc
xchg
nopl
and
push
sub
dec
inc
mov
and
lock
lods
clc
hlt
in
pusha
stos
cltd
dec
orl
push
pop
add
or
sbb
jmp
pop
mov
aas
push
subl
imul
mov
inc
ret
adc
jge
test
add
pop
pop
push
pushf
dec
pop
push
divl
xchg
adc
jge
das
les
cmp
data16
xor
lods
out
jno
or
mov
cmp
jmp
cltd
repz
inc
jne
xchg
cmpsb
subb
or
out
jb
cmpsl
push
mov
or
cltd
mov
stc
dec
pusha
mov
pusha
push
push
icebp
pop
mov
xchg
shrl
jnp
xorb
in
rcr
mov
fucom
push
fsub
sub
roll
repnz
neg
cmp
in
add
lea
mov
inc
icebp
cmp
xor
push
call
test
loopne
lock
aaa
dec
inc
loopne
mov
test
xor
bound
cmpsl
sbb
xlat
adc
pop
xor
push
sub
dec
cmpb
sbb
insl
daa
nop
or
lahf
inc
in
pop
stos
add
cli
dec
dec
shlb
mov
xchg
imul
test
cmpxchg
enter
ret
pmaddwd
mov
and
mov
fnstenv
dec
mov
cld
mov
jb
mov
lret
xchg
pop
xchg
aaa
cmp
out
jecxz
mov
aaa
jae
insl
fimuls
enter
in
push
and
lret
mov
rcll
cltd
popa
jmp
int3
mov
addr16
mull
shrl
vaddsd
arpl
icebp
das
or
mov
add
insb
pusha
test
data16
cmc
mov
lods
andl
mov
into
iret
lret
fldl
outsl
push
es
adc
and
or
mov
into
lret
push
hlt
das
repnz
dec
dec
fcmovne
sub
cltd
mov
adc
push
add
jae,pt
in
pop
inc
je
es
hlt
scas
stos
in
subb
sub
dec
pop
popa
sbb
aas
mov
rcll
popa
ret
pop
dec
in
inc
adc
and
incl
or
pop
ret
aaa
int
es
stc
addr16
pop
mov
arpl
out
popa
les
push
mov
fdivrp
lock
outsb
imul
in
mov
hlt
lahf
aad
mov
loopne
inc
adc
pop
cmp
scas
and
loopne
lcall
xchg
push
enter
aad
mov
into
dec
dec
flds
ret
sub
push
arpl
push
mov
or
outsl
xchg
push
jp
pop
dec
repz
dec
je
xor
and
dec
test
repnz
lds
cmp
call
rolb
adc
push
sti
and
xorps
aaa
lds
scas
jecxz
popf
int3
mov
ror
lret
jg
hlt
orb
shrb
sbb
imul
mov
pop
loope
jmp
jo
adc
and
sahf
mov
mov
jne
ds
push
cmp
jl
xchg
repnz
or
xor
mov
fisttpll
cmp
rorl
and
ljmp
mov
les
dec
jno
add
xchg
adc
loope
push
ja
sub
pop
push
outsl
push
pop
dec
sbb
aad
scas
scas
andps
addr16
clc
jo
mov
sub
sbb
mov
or
dec
adc
inc
dec
jnp
pop
insb
jo
int
push
adc
lock
leave
xchg
cltd
mov
pop
test
movsl
sub
ja
in
cmpsl
and
ret
outsb
mov
shl
sbb
lcall
insl
add
dec
cmp
mov
fstpl
xor
aaa
in
or
cmc
jns
mov
mov
outsl
mov
enter
push
add
mov
pop
dec
iret
sbb
push
ret
push
in
sub
test
test
into
inc
inc
loope
pop
sbb
scas
arpl
mov
jb
pop
icebp
or
je
mov
pop
mov
enter
cmp
sbb
mov
adc
inc
sbb
fbld
imul
pop
push
jg
jae
fwait
popa
mov
and
popa
hlt
hlt
cmc
jae
repz
dec
cld
imul
sbb
pushf
ljmp
and
arpl
dec
or
out
neg
mov
mov
mov
into
sbb
dec
rcrl
pop
push
shll
ficompl
pop
or
stos
stc
xchg
mov
jne
orl
out
mov
in
add
sub
pop
enter
fcompl
and
mov
mov
adc
cli
testb
aaa
mov
jge
adc
mov
mov
sbb
or
push
xchg
xchg
xchg
push
pusha
fadds
icebp
jecxz
popf
leave
jecxz
xchg
jl
lds
mov
mov
in
scas
adc
lret
pop
cmpsl
mov
mov
xchg
repnz
popf
test
cwtl
loope
pushf
mov
gs
jnp
cwtl
mov
loope
fimull
and
adc
loop
sbb
push
test
lahf
lods
sbb
shlb
pop
push
push
shl
mov
pop
repz
add
and
cmp
fcmovnb
movsb
lods
jge
aam
test
mov
mov
and
jb
and
xchg
cwtl
lret
push
cld
sbb
je
dec
rorb
cmp
ja
insl
test
jmp
outsb
inc
out
cmpsl
pop
in
xchg
rcrl
aas
xchg
add
jo
icebp
xchg
jge
fcoml
fldenv
je
in
sub
pop
das
mov
pop
lea
lods
push
dec
mov
cmp
cmp
mov
xor
gs
push
nop
imul
pop
out
sub
cmp
push
xchg
ja
popa
cmp
lods
jb
mov
insb
lret
xchg
int
cmp
loop
int3
enter
xchg
adc
add
mov
lock
fwait
inc
jne
jmp
scas
and
cmp
addr16
pusha
shrl
sub
aas
push
xchg
adc
xchg
dec
push
lahf
or
dec
lcall
nop
sub
in
dec
sub
cmp
sbb
pop
repz
outsb
jle
dec
and
cmp
cld
ret
daa
adcl
shl
adc
outsb
inc
popf
mov
push
cmp
insb
cmp
dec
and
push
add
addl
loope
daa
inc
ud0
dec
push
add
xor
arpl
pop
sbb
pop
adc
jbe
int
leave
push
jge
pop
push
pop
or
cmpsb
adc
add
stc
scas
dec
das
outsl
imul
popa
mov
adc
pop
mov
or
jns
jl
test
and
pushf
lret
xor
cmc
inc
pushf
inc
add
sbb
jnp
lods
or
lock
adc
adc
cmp
aas
xor
adc
mov
rcrl
push
fs
insb
out
push
scas
rcr
sbb
enter
adc
mov
xchg
in
stos
mov
shll
loope
fs
lret
or
clc
rolb
insl
test
shrl
lret
movsl
dec
movsb
push
inc
cltd
addl
dec
es
cbtw
pop
inc
adc
sub
loop
add
adc
dec
clc
mull
in
leave
xor
pop
sbb
std
sahf
inc
sbb
mov
lret
movsb
cmp
cld
jae
jmp
pop
jle
xchg
nop
dec
pop
pop
insb
mov
imul
pop
pop
adc
ja
push
mov
call
ja
add
fisubl
jno
push
sbb
lea
sbb
call
hlt
mov
adc
outsl
xor
enter
or
fldt
xchg
push
sbb
sahf
xlat
loopne
sub
mov
sub
adc
cli
cmp
pop
leave
stc
and
sub
jl
mov
aas
icebp
add
pushf
clc
and
jle
mov
xchg
addb
pop
jnp
push
out
lcall
mov
lahf
jge
lods
insl
jecxz
jbe
mov
clc
pop
cmp
push
mov
ds
fisubrs
pop
test
jo
mov
xor
js
test
daa
scas
cltd
popf
in
adc
xchg
leave
mov
shl
cmp
push
or
inc
inc
pushf
sbb
jae
push
push
add
pop
jnp
adc
jl
fistps
add
movsb
cltd
dec
popf
mov
jecxz
pop
cli
push
outsl
mov
out
sbb
jbe
cltd
ficoms
jg
fwait
int3
inc
dec
lods
mov
les
insb
inc
negl
mov
lods
push
sub
push
sbb
push
in
ds
fsubl
add
xor
rcr
push
rcrb
mov
cli
mov
cmp
xorl
pop
push
push
call
jae
mov
les
sbb
inc
lahf
xchg
insb
xchg
mov
bound
mov
fidivrl
fcoml
mov
das
xchg
cld
repnz
or
pop
imull
insl
lahf
jl
icebp
pop
int3
insl
call
and
lcall
mov
mov
pop
mov
or
loopne
lret
xchg
add
lahf
pop
push
jmp
xor
sbb
pushf
daa
into
inc
or
jmp
cwtl
into
jmp
mov
xchg
jge
or
dec
mov
sbb
rol
inc
lea
push
iret
cmp
sahf
mov
xchg
out
mov
subl
shrl
lock
test
clc
sbb
cmc
or
sbb
xorb
cmpl
mov
mov
xor
mov
sbb
xchg
push
pusha
std
mov
je
adcl
inc
sub
cmc
xor
xchg
xor
incl
arpl
pinsrw
pop
shl
jmp
pushf
lea
jg
sub
inc
xchg
jle
pusha
sahf
mov
int
xlat
loopne
lea
test
insb
dec
outsb
out
sbb
insb
cmc
add
les
push
jmp
bound
or
xchg
adc
stos
rcll
les
gs
std
out
stos
push
movsb
pop
pushf
or
add
imul
mov
mov
cmp
sub
cld
xchg
push
nop
jno
push
mov
xor
or
mov
test
rcr
and
sub
cmpsb
inc
cmp
cmp
test
int
sbb
out
and
mov
cmp
out
push
sub
ret
scas
cmp
inc
sub
cmpb
shll
push
ljmp
leave
xor
aam
rcrl
jle
mov
nop
clc
lahf
mov
or
and
xor
aaa
or
sbb
xchg
mov
or
sbb
jno
xchg
cmp
mov
test
ss
push
andl
jle
mov
dec
push
sbb
cld
psubusb
cld
test
lds
adc
ficompl
cmp
xor
push
mov
test
cwtl
xor
add
mov
pop
sub
adc
mov
subb
gs
sbb
jmp
pop
mov
inc
aad
icebp
cmpb
lea
jg
daa
ljmp
jmp
outsl
out
fimull
cmp
pusha
ss
ret
imul
mov
cmp
loop
ss
insb
in
int3
sbb
sbb
rorl
test
lods
pop
mov
sub
shrb
lcall
orl
aam
sti
mov
jbe
ret
mov
stos
push
lds
das
jl
lods
adc
adc
cmp
mov
aam
lret
daa
pop
idivl
and
pop
sbb
or
pusha
jb
or
mov
cmp
mov
sbb
mov
and
sbbb
daa
movsl
popa
aam
mov
xchg
test
sbb
push
loop
addr16
cld
out
je
mov
loope
jnp
out
aas
mov
jp
dec
lret
outsl
xchg
mov
mov
adc
lea
sub
lods
xor
cmp
daa
inc
or
std
imul
mov
int
pop
xchg
xor
fsub
insl
sbb
xchg
mov
ss
mov
out
sub
pop
out
pusha
inc
jb
dec
mov
or
loopne
push
mov
lods
xor
or
cmp
adc
imul
rorb
mov
fdecstp
imul
pop
pop
or
loope
xlat
xchg
pop
sahf
test
movsl
sub
loop
rorl
ret
sbb
leave
and
mov
sbb
test
int3
inc
rorb
mov
mov
cmp
jecxz
cmpsb
mov
popa
adc
sbb
push
mov
lret
scas
sbb
ja
mov
dec
ret
out
and
add
jne
cld
sub
aad
cmpsl
movsb
out
xor
aam
push
xchg
xlat
sub
or
ficoml
jl
fcompl
roll
xchg
cmp
sub
cwtl
in
cmp
jno
xchg
pop
dec
cmc
xchg
shlw
nop
inc
movsb
int3
pop
or
xor
lock
lahf
je
lods
movsl
inc
rcr
out
adc
xor
sub
mov
mov
jecxz
sti
or
xchg
bound
in
add
jo
mov
cwtl
xlat
xchg
mov
popf
leave
xchg
xchg
scas
mov
fcoml
mov
addl
movsb
ret
shlb
xlat
and
rorb
cmc
movsb
jg
cmp
cmc
add
fidivrl
mov
insl
mov
jle
mov
repnz
sbb
loope
pop
and
les
cmpsb
popa
jns
aaa
mov
out
repz
sahf
push
into
fisubl
add
movsl
cmpb
out
dec
loopne
or
or
mov
or
dec
sbb
inc
xchg
out
push
sbb
mov
mov
lahf
xor
les
repnz
insb
cmp
jne
or
movsb
cmp
cli
xor
popf
add
aaa
iret
jno
ret
mov
dec
jne
icebp
push
rcrl
std
xchg
or
pop
jge
add
xor
push
mov
mov
jno
mov
and
call
in
cmp
adc
jbe
xor
jae
je
jl
scas
jecxz
mov
lcall
lret
adc
ds
fadds
std
sarl
movsb
xchg
sbb
test
xor
insb
cld
inc
movsl
cwtl
fildl
loope
ss
test
and
pop
bnd
mov
add
int
stc
jnp
fiadds
cmc
in
bound
push
arpl
int
or
jl
or
mov
inc
inc
pop
daa
cltd
push
and
scas
dec
in
mov
xor
loopne
test
dec
leave
dec
roll
scas
mov
or
mov
insl
xor
rol
fistpl
pop
test
adc
or
sbb
pop
jmp
out
mov
mov
ja
mov
fdivrl
shll
dec
xor
sbb
fwait
add
popa
dec
mov
sub
flds
xor
pop
lock
mov
and
stos
inc
stc
daa
or
add
adc
into
adc
sbb
xor
mov
es
popa
mov
out
jl
lods
iret
pop
mov
movsb
mov
es
push
push
adc
or
cmp
mov
nop
test
sub
mov
push
xor
fnstcw
out
call
pop
jns
pop
fs
mov
mov
pop
xchg
rcrb
insl
sbbb
pop
jnp
jae
cli
mov
outsb
roll
sub
xchg
pop
dec
pop
icebp
xchg
sbb
daa
and
adc
jle
sbb
mov
mov
enter
jmp
xchg
sti
icebp
pop
das
cld
test
testl
ss
sbbb
add
cmpsb
xchg
push
rolb
inc
and
ret
mov
add
daa
add
sbb
push
shll
sub
cmp
add
je
xchg
std
call
clc
les
or
into
aas
fwait
fs
and
sbb
out
and
fimull
test
add
clc
add
or
cs
jae
jb
xchg
mov
adc
add
pop
insb
nop
ss
sbb
adc
add
pop
fidivl
add
stc
in
cmp
mov
inc
repnz
icebp
inc
mov
xor
add
xor
inc
pop
movsb
mov
inc
add
jnp
xchg
and
dec
or
into
mov
cmpsb
pop
add
pop
test
or
inc
lcall
ja
lock
lock
xor
aas
cmc
inc
sub
push
pop
push
push
jecxz
cmp
and
lock
inc
jbe
mov
pop
jno
push
jno
roll
pusha
xor
xchg
or
out
mov
xor
lret
sti
fldcw
sbb
push
pop
andb
mov
ror
mov
cmpsl
xchg
lcall
xor
mov
imul
inc
js
addr16
add
mov
pop
pop
lret
inc
popa
repnz
or
sbb
pusha
inc
sbb
xor
adc
mov
out
int3
adc
test
push
loope
loop
lcall
xor
push
icebp
test
pop
sbb
negb
std
es
pop
imul
imul
mov
enter
loopne
jl
push
xchg
sbb
mov
pop
pusha
mov
es
aam
xchg
int
pop
push
add
daa
stos
outsl
test
mov
mov
sbb
sub
popa
orb
rcrb
loope
fldcw
out
outsl
jns
out
adc
jp
in
pop
push
loopne
stos
hlt
in
das
sbb
fcom
push
and
cltd
mov
cmp
rorl
nop
fcomps
ja
dec
in
lahf
lahf
rclb
imul
jae
pop
fstps
fiaddl
inc
mov
out
jp
sub
das
push
xor
cmp
xchg
mov
or
jno
sub
push
pop
jmp
std
inc
cwtl
sbb
cs
cmc
inc
das
dec
cmp
mov
xor
push
andb
sbb
adc
lret
mov
mov
fidivrs
xchg
mov
cli
push
mov
jo
lock
sub
pop
into
or
outsl
sub
sub
jne
pop
adcl
xchg
sbb
jbe
xchg
mov
push
lcall
pop
sbb
fs
ret
cld
loop
pop
inc
ror
aad
mov
pop
test
push
sti
subl
mov
ret
repnz
or
incb
inc
sbb
mov
jle
sti
inc
or
pushf
mov
mov
push
aad
adc
nop
movb
out
hlt
add
in
sbb
aas
xchg
mov
js
cmp
inc
or
es
push
mov
shll
shrb
shr
cmp
jo
loopne
push
adc
cmpsb
gs
outsb
sbb
fiadds
test
out
scas
int3
dec
lret
into
mov
mov
sar
bswap
push
insl
das
leave
add
ljmp
jae
jl
mov
rcll
jae
cs
sub
repnz
jne
xor
jo
js
add
mov
ljmp
into
sbb
xlat
call
rcrb
arpl
mov
mov
pusha
add
loop
xlat
outsb
roll
je
jae
pop
jg
mov
inc
mov
repnz
sbb
int
inc
sbb
rcrl
fdivl
cmp
scas
mov
stos
inc
push
test
aam
cmp
mov
sbb
ret
push
and
je
push
stos
xchg
jbe
fimuls
adc
cmp
lea
xchg
push
xchg
cltd
test
hlt
dec
xor
add
mov
cmp
and
pop
push
iret
mov
sbbb
hlt
enter
ds
jp
adc
imul
ror
dec
and
adc
ljmp
cmp
imul
shlb
and
sbb
xchg
push
jp
xchg
cwtl
imul
dec
dec
push
out
sbb
dec
movsb
outsb
or
xchg
xor
sub
pop
arpl
loop
pop
cmp
cmc
or
mov
dec
mov
pop
mov
adc
lods
push
push
stos
aaa
data16
cltd
add
andb
jl
jp
or
fisubrs
cmp
add
scas
mov
push
negb
mov
mov
flds
test
in
std
movsb
loope
add
aam
hlt
ss
in
pop
cmp
dec
inc
or
mov
sub
fiadds
mov
cltd
dec
cmc
mov
pop
rcll
bound
test
xor
jae
arpl
rcr
insl
push
cmp
lock
sub
in
mov
stos
ret
mov
loop
xlat
sbb
sahf
cmc
jo
ficompl
add
into
and
sar
inc
cmpl
fimull
sbb
out
pop
stc
jb
fists
xchg
out
add
mov
mov
das
push
ret
or
sbb
outsb
stc
test
adc
push
sub
mov
enter
jae
test
loope
mov
adc
loopne
stos
popa
mov
stc
and
add
dec
test
mov
push
sarl
mov
mov
cmpl
sbb
jns
testb
inc
das
fmuls
repz
mov
not
xchg
movsl
bound
pop
sbb
out
mov
xchg
stos
fidivl
xor
sub
pop
ja
cmp
inc
movb
and
bound
in
das
push
cwtl
inc
or
ds
add
xchg
aam
add
jmp
push
sahf
add
das
jp
and
mov
jg
dec
and
ror
stc
in
fs
inc
inc
out
mov
mov
mov
cli
lret
dec
repz
jbe
push
adc
cs
xchg
fwait
cmp
cmp
jle
or
frstor
and
fistl
mov
xchg
int3
int
adc
pop
xchg
fimull
cld
cmp
data16
aam
xor
pop
push
mov
jmp
sub
xorb
push
mov
mov
jecxz
je
sbb
push
mov
xlat
or
test
in
repz
int
hlt
fadd
pop
leave
testb
inc
data16
add
in
out
call
pop
push
jle
lea
cmc
lea
pop
cld
les
lahf
loope
adc
insb
add
add
loop
push
js
or
pop
push
dec
cld
add
pop
int3
or
pushl
xchg
jnp
cmc
fst
lcall
out
out
mov
fadds
jl
jae
daa
dec
dec
mov
aaa
jne
out
inc
xor
fmul
mov
lcall
xor
mov
fwait
mov
fisttps
or
sbb
lea
aas
sti
jo
cwtl
xor
out
aaa
pop
testb
cld
xchg
loopne
clc
aaa
mov
and
sub
pop
mov
xchg
inc
call
jle
dec
sti
cmp
jl
out
imul
clc
push
les
pop
lcall
mov
stc
mov
pop
xchg
push
js
xor
mov
pop
stos
das
jno
ja
sbbl
sbb
sub
movsb
add
dec
sti
mov
sbb
adc
enter
dec
lea
ds
cmpl
test
inc
rclb
shlb
in
sub
adc
test
lea
in
jge
sub
jne
cmp
cmp
xor
ds
sub
sti
push
xor
ja
or
push
ret
adc
add
mov
push
fnsave
insb
dec
and
and
add
sub
js
xchg
pop
sub
pop
cmp
jl
adc
fwait
xchg
xor
sbb
add
rcl
xor
mov
inc
rcr
mov
stc
and
push
fwait
ret
mov
mov
push
lahf
cmp
pop
mov
mov
push
fbstp
sbb
and
nop
cmp
lea
pop
mov
add
add
lcall
clc
insl
or
sbb
add
dec
in
sub
movsl
repnz
and
xor
xlat
repnz
shlb
out
loopne
out
sbb
cmp
pusha
ret
xchg
dec
sbb
fcomps
pop
std
mov
and
sbbl
push
stos
add
aam
ret
and
mov
push
dec
data16
ret
push
pop
es
dec
push
mov
jb
pop
punpcklbw
std
dec
outsb
std
movsb
pop
pop
icebp
cwtl
push
jmp
sbb
movb
in
ret
sub
mov
inc
aam
add
mov
inc
inc
dec
cmp
add
mov
cltd
sub
inc
jmp
ja
cmpl
aas
mov
or
dec
adc
push
inc
into
popa
xchg
xor
ret
sbb
xor
mov
popa
orb
dec
cli
xor
loope
sbb
dec
xor
aad
out
xor
xor
popf
jo
xor
sbb
fdivrl
push
les
sbb
xor
out
xchg
jnp
push
jno
inc
adc
xor
dec
inc
roll
stos
sub
sbb
jecxz
lds
inc
cwtl
stc
push
subb
sbb
pop
add
xlat
jmp
mov
daa
add
es
inc
imul
iret
inc
push
aad
fdivrs
inc
fsubr
cmc
dec
shl
call
aam
xor
sbb
sbb
lcall
repz
scas
and
mov
mov
and
lahf
cmpsb
pop
sbb
xlat
dec
fnstenv
cli
stos
xor
aam
sbbb
pop
sbb
pop
pop
out
in
dec
pop
cwtl
adc
mov
dec
test
jl
add
out
ret
lds
mov
sbb
in
ljmp
mov
lcall
xlat
test
jge
and
pusha
inc
xchg
movsl
mov
dec
jb
cmpsb
sbb
mov
insl
jno
fstpl
shl
xchg
pop
std
mov
mov
mov
xchg
or
fldl
jae
mul
testb
in
in
andb
fadds
call
int
in
pop
stos
add
inc
test
sub
push
xlat
xor
leave
cmp
ljmp
dec
aaa
mov
xchg
ret
cmp
lea
sub
pop
in
int3
inc
int3
data16
add
aam
jne
iret
xchg
sbb
mov
aaa
cmc
sbb
mov
mov
or
inc
or
in
and
dec
or
out
jns
xor
mov
inc
outsl
cmp
or
pop
cli
cmp
inc
in
loope
add
xchg
jne
pop
les
adcb
add
dec
in
test
lock
cmc
mov
pop
jle
jmp
stos
xlat
sbb
jecxz
inc
shl
cltd
popf
lods
xchg
or
shl
arpl
bound
roll
adc
test
mov
repnz
dec
cs
mov
rcrl
arpl
sub
jno
outsb
test
mov
pusha
js
cmp
sub
imul
cmp
outsb
sahf
or
xchg
cmc
pop
out
popa
adc
and
outsb
scas
mov
pop
sbb
mov
stos
jb
pop
cs
mov
push
pop
jns
repnz
test
sub
mov
in
mov
popa
mov
out
dec
pusha
lock
inc
je
or
adc
push
dec
pop
loopne
cmp
in
rclb
pop
and
sbb
mov
or
or
dec
xchg
ja
mull
pop
das
xchg
xchg
sbbb
mov
cmp
sbb
cmpsl
lahf
inc
fidivrl
outsb
adc
mov
sub
in
inc
xor
mov
inc
std
fcmove
clc
mull
fcmovnbe
pop
ret
rcrl
inc
movsl
cmp
pop
mov
lcall
pop
cs
add
inc
mov
pop
stos
pop
inc
push
sbb
clc
sbbb
jbe
scas
mov
dec
xor
shlb
fisubs
cmp
mov
sbb
je
ds
jne
mov
adc
sbbl
ret
sbb
into
inc
leave
mov
adc
lods
aad
cmp
xchg
push
or
test
or
and
pop
js
stos
jmp
ja
xchg
sbb
insl
xchg
shrb
pop
cmp
sbb
pop
popf
jo
shlb
or
mov
in
xchg
imul
lahf
cs
hlt
cltd
cltd
daa
shrl
ret
add
fs
adcb
cmp
and
push
ficoms
and
push
ja
in
imulb
sbb
cmp
hlt
and
test
cwtl
addr16
fldenv
mov
cltd
sub
add
jbe
pop
xchg
inc
push
fwait
not
jno
jae
das
push
cmp
push
sub
mov
lods
sub
mov
add
add
lahf
sub
pop
jge
nop
jb
ja
in
mov
lods
popf
jne
push
cli
mov
sbb
add
cmpsb
xlat
aaa
test
adcb
inc
xorl
or
xor
sbb
inc
pop
dec
xchg
xchg
inc
cs
ret
pushf
sbb
lods
ds
or
jmp
xchg
adc
cmp
mov
inc
push
jbe
js
or
dec
mov
xchg
xor
outsb
push
cli
cli
sub
lods
cmpsb
mulb
jp
lahf
jnp
out
dec
dec
je
mov
adc
inc
dec
add
call
add
popl
pushf
pop
testb
xlat
sbb
mov
cmp
jns
sbb
add
cmpl
or
in
test
pop
pop
or
addl
mulb
pop
xchg
dec
enter
outsb
push
push
test
ljmp
daa
sbb
fbld
lcall
pop
fs
fs
pop
hlt
iret
add
add
sub
mov
lods
push
popa
data16
adc
xchg
iret
in
cld
and
in
pop
int3
inc
iret
aas
jnp
les
add
lds
icebp
repz
cwtl
icebp
and
lea
pop
sti
test
iret
add
clc
xchg
je
add
repz
cld
sbb
inc
sub
add
dec
xchg
lock
stos
arpl
push
and
imul
cli
dec
dec
fcmovnb
xchg
sahf
ss
mov
or
cs
dec
imul
cmp
pop
xchg
lock
pop
sbb
push
mov
jecxz
dec
or
lret
inc
sub
dec
rolb
bound
jnp
mov
lea
mov
pop
push
loope
idivl
je
sahf
push
adc
loopne
test
cmc
jns
call
mov
aad
cmp
daa
or
dec
sbb
scas
and
pop
shl
dec
pushf
mov
sarl
aam
xchg
mov
xor
out
mov
adc
add
jge
je
outsl
cmp
outsl
cmp
jb
dec
jmp
nop
mov
mov
call
sbb
pop
repnz
outsl
jp
push
insl
pop
xor
popa
flds
mov
test
pop
das
nop
add
test
mov
and
lcall
pop
xchg
jecxz
inc
test
push
mov
jbe
xor
sarb
out
and
mov
mov
sbb
daa
int3
bound
or
sub
push
or
stos
movsb
ret
cmp
mov
addl
iret
mov
test
mov
cltd
movsb
inc
scas
pop
aad
push
mov
push
ret
lcall
iret
xchg
dec
out
jecxz
in
int3
fwait
inc
imul
in
and
es
insl
fistpl
push
into
pop
int
movsl
dec
test
sub
mov
xchg
aas
pop
lcall
scas
aaa
test
push
inc
mov
lcall
mov
mov
repnz
mov
mov
jbe
andb
add
mov
jp
cmpsl
ljmp
cmp
mov
jp
pop
adc
scas
push
cmp
jg
nop
xchg
mov
fisttpll
lret
rolb
and
push
fists
in
and
mov
arpl
sarl
jmp
add
pop
cld
push
pop
fcomi
jmp
jnp
mov
movsb
out
add
mov
jge
mov
pop
xor
hlt
ret
pop
mov
movb
mov
hlt
test
pop
sbbl
repnz
add
movl
lahf
xor
push
inc
ret
mov
mov
lret
fmuls
jecxz
sbb
sarl
divl
cli
pushw
jo
dec
mov
add
mov
sub
in
in
icebp
movb
loop
add
cmp
fbstp
add
push
lahf
and
daa
mov
mov
inc
and
pusha
div
aam
arpl
jp
lret
jmp
fdivs
lds
rcrl
notl
sub
movb
adc
shl
leave
mov
mov
xchg
leave
push
and
neg
or
pop
pop
cmpsb
xchg
int
ss
inc
xchg
or
xchg
leave
sub
clc
out
lahf
xchg
ljmp
sub
mov
cwtl
mov
pop
jb
loopne
popf
cltd
jg
daa
or
lret
mov
lcall
ret
movsl
xchg
jns
jge
jge
add
pop
mov
test
push
push
pop
aad
push
push
cmp
push
xchg
test
adc
push
and
or
jge
xor
cmp
daa
xchg
incb
aaa
ljmp
test
fs
jg
fst
sbb
movsl
pop
xor
scas
jns
sbb
lret
or
scas
scas
scas
rcrb
insl
cmp
inc
jo
outsb
insb
mov
fsubrp
inc
xor
lods
mov
arpl
leave
mov
cmpsb
mov
cmp
scas
xor
cs
push
mov
in
or
sub
fwait
outsb
pop
ljmp
fwait
jnp
outsl
cmp
ficompl
pop
adc
pop
ja
mov
movsl
pop
or
jo
negl
ret
xchg
push
mov
js
or
adc
inc
inc
stos
fsubs
mov
dec
jo
rol
aad
enter
nop
clc
push
sbb
mov
lods
hlt
dec
lahf
sub
adcb
test
int
xchg
add
pusha
pop
mov
cmp
rcl
pop
mov
popf
xchg
loop
aam
inc
and
mov
push
cmpsb
lret
imul
adc
clc
sub
xchg
call
inc
mov
cmp
cmp
mov
dec
xchg
and
mov
mov
ds
jmp
mov
xchg
std
jp,pt
pop
mov
fs
push
shll
mov
add
test
dec
xchg
jo
repnz
ds
loope
popa
cltd
xchg
aas
loop
adc
adc
xchg
xorl
xchg
or
icebp
or
aaa
lret
sub
test
jge
dec
jp
pop
adc
cmp
mov
jb
call
cs
mov
pop
test
or
dec
shl
cmp
cwtl
jae
daa
mov
push
test
push
pop
or
adc
mov
and
push
push
jne
daa
cwtl
ret
dec
sub
test
adc
xchg
add
insb
out
lcall
sahf
mov
push
hlt
pop
xchg
lret
xchg
mov
pop
mov
inc
iret
mov
jno
repnz
mov
ja
pop
jbe
xor
daa
outsl
push
test
adcl
hlt
add
inc
popa
mov
jmp
sub
pusha
and
xor
push
cmpsb
add
add
xor
mov
xor
iret
fwait
lea
dec
xor
pop
loop
or
lret
add
movsl
orb
mov
sahf
push
in
sbb
jne
xchg
movsb
push
scas
sbb
loop
mov
add
and
jl
js
sar
jg
jb
insl
cmp
xor
stos
imul
inc
loopne
push
xchg
cmp
das
lods
int3
xchg
add
cld
inc
add
addl
dec
aad
lret
stos
int
inc
daa
or
dec
addl
test
add
sbb
sub
push
imul
jb
bound
pop
je
hlt
mov
jp
adc
inc
cltd
xchg
xchg
jae
mov
jbe
mov
xchg
or
cmp
movsl
mov
push
out
movl
lods
mov
int
test
push
inc
stos
pushf
imul
mov
lahf
dec
jno
jle
loop
push
imul
es
adc
repnz
mov
jb
push
loope
shlb
xchg
cmp
adc
aad
add
jl
pop
jo
push
into
mov
cmp
hlt
jnp
aam
dec
ror
ja
cmpsb
lcall
or
mov
daa
aaa
cmp
cwtl
fsubl
push
pop
jo
push
lea
jge
hlt
jmp
xor
aam
and
in
fwait
cmpsb
es
decl
ret
xchg
lret
gs
pop
pushf
in
out
add
xor
cmp
add
in
mov
fs
and
add
int
out
pop
dec
cmp
xchg
inc
cmpl
inc
add
call
dec
push
pushf
adc
and
inc
and
lods
xchg
repz
add
shl
jge
ja
cmp
xor
shrb
repnz
repnz
adc
xchg
data16
pop
lods
sarb
and
mov
mov
inc
stc
fdivrl
inc
mov
mov
pop
inc
pop
jne
push
mov
enter
push
pop
cltd
pushf
sub
data16
jns
xor
cmpl
popa
shlb
mov
ret
push
mov
mov
mov
push
insb
add
sub
inc
lret
gs
lret
cld
imul
movsl
push
pop
je
sub
push
loopne
fwait
xchg
jae
loop
repz
clc
shrb
inc
add
cld
push
mov
inc
mov
dec
push
cltd
adc
mov
jcxz
les
ret
and
fcompl
xchg
cmpsb
outsb
push
xor
cmpsl
mov
xor
lret
ret
xchg
mov
shll
leave
inc
push
mov
dec
lahf
leave
push
mov
stos
adc
aas
add
fimull
cmp
icebp
iret
jo
pushf
and
and
sbb
pop
jno
lods
adc
scas
pop
xor
push
inc
adc
push
imul
outsl
mov
mov
add
mov
jmp
dec
jne
push
icebp
push
xor
pop
popf
pop
or
and
bound
add
and
iret
adc
cwtl
inc
jle
mov
add
sbb
mov
mov
mov
mulb
sbb
cmp
hlt
cmp
pushf
into
jae
mov
mov
int3
and
push
fnsave
sti
inc
sub
test
out
push
pop
ds
lods
pushf
inc
sbb
cmp
test
hlt
xchg
sbb
andb
lahf
mov
push
add
mov
mov
enter
mov
sub
sbb
jp
xor
out
orb
in
addr16
iret
lods
test
es
pop
xor
iret
mov
xor
outsl
aad
arpl
adc
sub
cmp
movsb
mov
adc
scas
das
push
adc
dec
cmpsl
int3
lahf
xchg
pop
loope
mov
adc
sub
movsb
adc
jecxz
sbb
loopne
sub
fstpl
ret
pop
data16
inc
std
xchg
scas
fs
into
out
icebp
mov
jno
add
push
and
add
frstor
xchg
sbb
in
rcrl
bound
gs
mov
xor
mov
jo
xor
in
lret
jg
fmuls
pop
and
pop
ret
popf
notl
and
aaa
adc
in
push
faddl
in
pop
shll
incb
sbb
mov
xor
cmp
sub
inc
jmp
pop
cmp
iret
lahf
cltd
pop
cmp
inc
cmc
adc
jno
gs
inc
es
dec
inc
mov
xchg
mov
inc
in
shlb
aaa
scas
das
sbb
test
pusha
xor
cmpsl
js
and
adc
push
mov
test
push
aaa
in
and
push
push
cmp
aam
mov
push
pop
push
xor
adc
adc
push
push
shll
mov
repnz
xchg
ljmp
and
in
sub
sbb
mov
test
sbb
or
mov
dec
int3
jno
inc
dec
cli
mov
sub
pop
mov
shlb
sti
bound
mov
push
lock
out
iret
lret
jge
test
addr16
cmp
dec
arpl
sarl
add
add
test
xor
lcall
out
dec
xor
pusha
adc
push
sub
mov
sub
pushf
inc
and
or
mov
loopne
mov
lea
sub
xor
xor
pop
sub
scas
movl
nop
adc
or
ja
inc
js
jp
mov
dec
pop
mov
sbb
pop
pop
movsl
aas
jbe
cli
cld
mov
inc
movsb
cwtl
xchg
jnp
dec
movups
pop
pop
and
pop
fucomp
insb
in
adc
add
adc
inc
popf
pop
test
pop
or
loop
push
sbb
pop
jnp
mov
and
or
fwait
adc
out
mov
movsb
xor
sub
ss
inc
clc
pop
aad
and
cmp
jb
aam
mov
mov
cmc
xchg
or
add
les
popa
cmpb
jecxz
push
xchg
adc
in
jnp
mov
jecxz
test
dec
mov
adc
out
in
xorl
xchg
fiaddl
jo
pop
push
shll
shll
stos
cs
adc
pop
and
outsl
nop
xor
add
cmp
int
mov
outsl
shrb
push
out
dec
cmp
jge
xor
popf
inc
loop
loop
lret
fsts
in
jns
rorb
xchg
dec
mov
daa
sbb
lcall
leave
push
rcr
lods
aad
dec
mov
mov
scas
xchg
imulb
and
or
lock
mov
push
dec
push
mov
mov
popf
jbe
jae
les
add
cmpsb
lahf
xchg
mov
push
add
shll
mov
idivb
test
cld
and
int
ret
push
movq
xchg
imul
inc
jnp
outsb
je
pop
ret
xor
add
xchg
ficoms
sbb
inc
in
cltd
pushf
aam
rcll
sbbb
xchg
or
ret
dec
adc
scas
outsb
test
cmp
jp
add
pop
lods
jle
push
mov
out
cmp
pop
mov
xor
outsl
aam
cli
ja
mov
sbb
inc
loop
xor
movsb
sub
push
daa
push
into
xchg
mov
xchg
dec
sbb
push
dec
mov
cmp
cltd
cld
xchg
roll
cltd
pop
push
inc
int
cld
inc
inc
incb
jle
mov
mov
inc
mov
pop
popa
push
mov
cmc
sub
xchg
inc
test
out
sbb
jmp
jle
ss
mov
sub
pop
xor
lock
rcll
jbe
mov
pushf
repnz
cmp
cmpl
in
rorb
mov
addr16
jne
test
lahf
gs
lea
xor
or
into
add
lock
add
mov
jns
push
jmp
push
jg
sbb
hlt
inc
adc
sbb
in
xor
mov
addr16
mov
fwait
push
mov
sub
pushf
dec
xor
lahf
imul
push
divl
mov
dec
sarb
cmpsb
shll
inc
retw
dec
mov
enter
mov
mov
lods
pop
cli
shlb
inc
cli
test
pop
push
adc
jno
jbe
xor
xchg
dec
dec
jl
repz
sbb
gs
imul
adc
std
pop
mov
arpl
lds
add
pusha
add
adc
inc
movsl
rcrl
fcompl
xor
sub
push
sub
gs
jl
jne
sub
das
mov
push
push
pop
xchg
aad
xorl
lock
cmp
xchg
fs
in
jg
and
in
jbe
test
js
imul
out
daa
xchg
sbb
les
fcmovbe
jae
or
sub
ja
sbb
test
and
ljmp
add
sbb
decb
dec
out
movsb
mov
mov
adc
sbb
lock
xchg
sbbb
imul
mov
fisttps
jne
clc
fstpl
inc
movsb
mov
sbb
das
xchg
bound
and
repnz
shr
adc
xchg
repz
pop
int
ret
or
sbb
xor
out
pop
mov
rorb
cmp
jbe
jno
fistpl
cwtl
call
jge
pop
push
jecxz
aas
push
mov
in
mov
fisubl
fistpll
popf
pop
cwtl
add
pop
dec
cld
xor
pop
push
out
inc
xchg
jb
push
call
fistps
sbb
cli
push
test
out
adc
mov
popf
std
sbb
test
loop
or
jae
mov
or
sub
mov
inc
lret
fisubs
sti
mov
or
stc
and
cmpsb
jl
mov
push
cmp
or
push
arpl
stos
shlb
mov
lds
insb
jbe
cs
pop
pop
push
ss
mov
cmc
in
stos
mov
cmp
xor
xor
addl
mov
jl
movsb
jmp
out
ljmp
or
and
push
push
cmpsl
jle
loop
push
fbld
movsb
mov
sub
testl
ss
mov
aaa
lods
int
push
int
xor
jae
loope
mov
adc
adc
lret
push
cmpsb
aad
xor
ret
sbb
pusha
add
into
das
add
push
xchg
es
in
sub
jae
ficomps
jo
divb
outsl
lcall
leave
or
pop
mov
out
push
xor
pop
inc
out
insl
xlat
lea
into
and
cmp
std
jbe
out
lock
shl
int
adcb
add
outsb
or
cli
ret
sti
cmpsl
mov
jge
jns
cmp
cld
das
ret
enter
push
pop
jbe
mov
lods
and
cli
jne
jge
daa
jl
cmc
je
inc
jmp
shll
pushf
adc
fucom
pop
int
enter
ret
insl
adc
fstpl
jne
add
out
xchg
mov
das
mov
imul
inc
insl
fcmovnb
and
inc
mov
lcall
jmp
mov
lret
enter
jmp
in
jge
cli
xor
sti
jle
push
cmpsl
add
xor
mov
dec
jg
lahf
jmp
fbld
pop
inc
mov
stos
dec
or
aaa
sbb
mov
mov
mov
sahf
stos
cli
fsubrs
push
inc
call
push
call
cltd
jne
outsl
inc
imul
in
lds
nop
jp
mov
sahf
lret
xor
test
and
push
lret
es
jmp
sarl
jne
or
lfs
pop
xor
and
sub
out
jl
rcl
in
jns
test
sbb
fwait
add
pop
adc
stos
jmp
xchg
fistpll
in
inc
popa
inc
xchg
jmp
ds
mov
adc
mov
mov
in
cltd
ss
adc
push
test
sub
int3
cmpsl
and
es
les
push
das
decl
jle
repnz
push
shll
jns
addl
mov
mov
dec
jle
clc
mov
jae
cmp
inc
xchg
int3
jbe
adc
xchg
cmp
sub
xchg
xor
popf
cvtps2pi
lock
or
mov
pop
xor
adc
dec
xchg
rolb
fcomp
push
sub
mov
push
ds
mov
movsb
das
cmp
or
mov
mov
imul
imul
xor
xor
sub
rorb
or
das
pop
fs
notl
cmpl
fisubs
inc
in
push
sub
xor
cltd
and
mov
aad
fdiv
cmp
jae
push
out
dec
les
or
stos
inc
xchg
clc
cmp
into
cmp
pop
cmp
stos
jbe
cmp
lea
jge
pusha
pop
push
mov
mov
insl
ss
mov
pop
sbb
adcb
sbb
xchg
pop
dec
cwtl
and
or
pop
mov
test
push
lods
push
out
push
into
inc
push
mov
dec
inc
rcll
test
in
icebp
mov
cld
lcall
into
sub
ja
xor
sbb
imul
cmpsb
mov
dec
shlb
mov
mov
mov
andl
adc
sti
lock
jmp
xchg
or
jne
mov
push
pop
push
inc
out
add
ret
ret
mov
insl
scas
adc
push
ret
in
xchg
push
sub
mov
insb
scas
jb
in
xchg
imul
fldcw
scas
mov
out
push
pop
mov
xlat
aaa
cmp
jbe
xor
outsl
enter
je
das
mov
mov
xchg
imul
in
mov
insb
cmp
daa
mov
pusha
shlb
push
mov
jne
cmp
sti
call
jp
xchg
xchg
xor
pop
shll
into
lea
bound
stc
push
jp
pop
adc
lds
pop
std
fsubrl
int3
cmp
movsl
sub
cmp
daa
sbb
xchg
sbb
cmp
cmpsl
and
sbb
fidivrl
inc
push
or
adc
jne
xchg
popa
pop
and
add
mov
jb
push
enter
jno
movsb
lods
xchg
mov
les
mov
outsb
jne
nop
mov
insb
xchg
es
aam
pop
push
mov
jle
sub
jbe
pusha
push
nop
dec
push
repz
cmp
lods
mov
mov
cmp
fcmovnb
add
sbb
add
inc
das
adcb
adc
mov
push
sub
xchg
push
out
cmpsl
imul
jns,pn
sbb
not
enter
mov
jne
lahf
fsubrs
jle
mov
ret
pop
inc
mov
and
mov
daa
rolb
fisttps
jmp
pop
add
jno
int3
xchg
jg
xchg
dec
adc
movsb
sub
movsl
fldl
test
cltd
add
add
ret
rcl
arpl
pop
fsts
sub
jmp
add
xchg
subl
pop
sub
outsl
xchg
cli
sarb
sbb
mov
movsb
cmp
test
icebp
mov
add
aaa
adc
xlat
adc
sbb
les
rolb
add
js
data16
jmp
jmp
shl
jne
jge
lods
iret
cmp
aad
mov
outsb
jl
push
shlb
outsb
mov
dec
push
aam
out
int3
into
dec
sub
pop
jecxz
inc
lds
enter
insl
popf
sub
lret
dec
sbb
xor
pop
lea
sub
mov
enter
dec
fsubr
xchg
aas
ret
popa
ret
add
sbb
imull
stos
shrl
mov
imul
xor
js
dec
mov
cs
or
jne
inc
or
add
shll
jl
fstps
inc
pusha
cli
mov
and
shrl
pop
sub
dec
and
mov
mov
inc
fnstcw
pop
jecxz
addb
fistpll
jle
aad
aaa
js
xchg
imul
filds
jo
jnp
mov
scas
jl
jnp
jb
fwait
jnp
mov
out
xchg
cmp
xchg
xor
sub
add
arpl
mov
pop
or
stc
and
cs
loopne
push
sarl
scas
lds
cmp
dec
jo
out
pop
xchg
xchg
xchg
leave
pop
pop
iret
cmc
dec
pop
addr16
pop
push
push
push
in
pop
add
mov
xor
cmp
mov
int
inc
and
ja
sub
inc
shlb
push
cmpsl
push
fstpl
jno
loop
and
shr
mov
jb
fnstenv
mov
cmp
test
es
inc
cs
xor
lret
mov
lds
pop
movsl
mov
aad
out
inc
popf
insb
pop
dec
and
pop
rcrb
dec
roll
pop
push
jle
orb
inc
ss
pop
repnz
mov
lods
loope
aad
aad
icebp
testl
stos
sbb
sub
pop
add
lret
enter
int3
nop
sbb
hlt
push
jecxz
js
loopne
or
in
xchg
or
sbb
pop
ja
mov
jecxz
inc
fs
xchg
pop
int3
ret
inc
xlat
subl
mov
stos
cmp
out
mov
mov
hlt
movsl
test
pop
lahf
inc
cmp
movsb
lret
test
into
sti
push
adc
lret
xchg
outsl
popa
sbb
ja
pop
xor
mov
add
pushf
out
jns
sbb
leave
mov
jbe
cwtl
pop
lock
sbb
in
in
stos
outsb
into
ror
inc
std
xchg
pop
std
ja
pop
mov
xor
dec
xchg
out
repz
pop
push
es
pop
push
mov
pop
call
loopne
pop
inc
cli
ljmp
add
test
int3
mov
aam
fildl
imul
mov
add
cwtl
push
js
call
adc
shr
movsl
push
and
jno
jmp
repnz
lods
jo
outsb
movsb
int
cltd
xchg
mov
jp
pop
fnstsw
adcb
mov
rcr
push
maskmovq
testl
xor
pop
adc
lcall
dec
pushf
mov
xchg
sahf
adc
data16
sub
push
adc
outsb
ja
mov
cmp
lock
andl
mov
ljmp
bound
push
fstl
xchg
adc
in
xor
fcomps
sub
sti
lds
stos
or
leave
adc
lods
dec
outsl
popa
icebp
insb
iret
repz
es
imull
fwait
andl
add
xor
xor
fisttpl
popf
mov
pop
pop
adc
stos
aam
jno
test
rorb
cmp
sub
pusha
jbe
or
les
rsm
mov
mov
sbb
sahf
sbb
dec
push
adc
xor
lock
jl
int
and
fistpll
cltd
cmp
dec
test
or
cltd
cmp
jmp
cmp
jbe
fsubrp
les
jge
ljmp
dec
gs
lock
jecxz
mov
movsb
mov
xchg
cmp
sub
popl
mov
inc
push
into
es
mov
jecxz
inc
add
cmpsl
data16
sahf
or
mov
test
insb
jmp
addr16
aas
jg
cs
ja
push
add
and
test
mov
adc
aam
orb
call
and
sbb
xchg
out
orb
xchg
pop
in
dec
sub
ljmp
lahf
ljmp
sub
push
lcall
push
test
jle
sbb
shll
ret
inc
xchg
int3
cmp
dec
push
add
mov
fidivl
pop
inc
xchg
add
scas
test
test
pop
xlat
xchg
lahf
insl
mov
int3
clc
lahf
shrb
imul
add
mov
cmp
dec
jae
pop
jno
bound
loop
outsb
or
push
repz
push
mov
mov
sub
int3
dec
lret
nop
push
es
or
adc
or
sbb
je
pushf
mov
aaa
fcomps
in
std
and
push
cmpsl
int3
psadbw
testb
lret
pop
out
les
jge
pop
sbb
gs
out
jbe
sub
pop
in
pop
js
pop
imull
rcl
add
nop
cmp
ds
inc
xchg
jne
sarl
push
cmp
repnz
rorb
dec
into
lods
inc
jb
adc
dec
xor
movsl
push
jge
cmc
pop
jge
dec
imulb
sti
daa
jge
push
leave
mov
lret
inc
sbb
arpl
cs
andl
fsubrp
outsb
push
jl
xchg
insb
xchg
repnz
inc
pop
mov
xor
sub
jne
push
mov
xor
sbb
lock
cmp
aas
sub
push
push
or
addr16
push
jo
xor
iret
int3
pop
mov
ds
pop
inc
mov
inc
daa
xor
jl
stos
jo
pop
les
out
dec
mov
sbb
rcrb
push
push
notl
mov
mov
fiadds
imull
mov
sub
inc
dec
dec
mov
fnclex
cld
addb
jmp
pop
inc
fwait
aaa
adc
out
stc
pushf
fstl
sbb
out
sbb
cmp
xchg
fnsave
jae
cltd
out
mov
fsts
mov
andb
aam
jmp
testl
scas
mov
lock
add
xor
sbb
shrb
push
pop
inc
mov
out
test
out
dec
and
data16
mov
cwtl
fnsaves
cmp
xchg
mov
mov
push
add
xor
daa
pop
rcrb
sub
dec
lods
jbe
jae
aas
in
mov
jmp
pop
push
jg
adc
outsl
dec
inc
daa
out
dec
mov
scas
jmp
pop
mov
jge
fidivs
mov
lcall
sbb
sbb
jnp
lret
cmp
or
popf
sbb
push
lods
fstl
inc
xchg
mov
mov
in
jne
es
addr16
mov
and
jle
stos
sahf
stos
outsb
mov
push
mov
ja
out
jge
push
jl
cmp
xchg
inc
das
loopne
pop
inc
lock
add
lods
mov
and
xchg
movsb
data16
mov
push
ds
rcl
inc
or
pusha
jno
mov
sub
cmc
mov
sar
lret
xchg
incb
clc
push
mov
or
mov
test
mov
dec
daa
push
ljmp
jg
jb
xlat
test
popa
fisttps
out
ljmp
hlt
xor
push
in
sub
add
ss
inc
popf
stos
mov
shll
xlat
dec
mov
ja
stos
push
lret
aas
push
xor
mov
dec
sbb
push
fistl
cmp
cmpsb
out
movsl
int3
jo
pusha
das
mov
sub
fists
adc
push
mov
mov
or
xor
and
xor
js
enter
lea
push
dec
mov
enter
leave
sbb
ret
cs
cmp
arpl
and
aam
xor
imul
mov
fs
push
scas
adc
sbb
loopne
outsb
add
lcall
daa
add
push
pop
jg
mov
aam
in
scas
jle
adcl
cmc
fidivrl
fbld
nop
out
ret
ret
cld
push
jg
orb
std
nop
adc
pop
movsb
scas
mov
jbe
mov
adc
jg
push
faddl
mov
adc
cli
mov
ror
dec
cltd
int3
mov
cmp
push
push
test
and
inc
cmp
lret
push
outsb
dec
or
dec
std
cmc
inc
loopne
ja
rol
stos
movsl
jnp
les
jbe
call
inc
mov
push
cmc
xchg
in
mov
add
mov
imul
testl
fwait
loope
out
aaa
jns
outsl
lods
nop
mov
imul
dec
aad
addr16
subl
sahf
je
jmp
leave
add
aaa
inc
int
cmpsl
arpl
sbb
loopne
out
jp
push
cmpsl
inc
popl
xor
push
sub
push
gs
cmp
push
hlt
out
sbb
xor
xor
pop
xor
imul
xor
sub
push
jnp
or
push
add
pop
cmpsl
dec
push
popf
mov
lods
mov
int3
out
cmp
aaa
sti
repz
sub
movsb
hlt
hlt
ds
cmpsl
gs
or
cmpb
cwtl
aas
cmp
xlat
xchg
pop
rcrb
fucomp
out
iret
sti
sbb
pop
leave
stos
movsb
movsl
mov
push
mov
divb
xor
int3
int3
mov
or
mov
aad
ljmp
jnp
xor
rorb
flds
cmp
adc
xchg
pop
and
jne
jae
dec
rol
adc
cmp
xor
mov
push
adc
test
dec
sbb
es
push
pop
push
pop
rorl
lcall
pop
pop
testb
into
push
cs
lods
lret
fidivs
pop
ljmp
jae
push
subb
inc
dec
stos
dec
sbb
jne
jne
jo
xchg
jae
ja
push
add
loope
mov
fs
call
ja
outsb
mov
add
in
mov
dec
pop
jle
rorl
jbe
inc
and
dec
xchg
adc
out
nop
mov
inc
push
jmp
push
jg
inc
ss
out
roll
push
sub
jno
data16
mov
mov
jg
xor
and
testb
push
cmpsl
ja
add
movsb
aas
test
je
dec
push
sub
mov
xchg
add
cmpsl
pop
sbb
pop
mov
lcall
jmp
xor
movsb
xor
insb
aam
idivl
push
mov
cmp
sub
loopne
adc
mov
mov
adc
fists
inc
int3
and
lds
pop
xchg
enter
aas
das
inc
je
or
adc
sarl
lods
pop
dec
cmpsb
add
subb
jle
pop
or
xor
subb
movsl
push
shll
mov
fs
pop
shlb
ds
cmpsl
sub
inc
jmp
pop
cmp
cmpb
sbb
add
inc
xchg
addr16
jmp
into
xor
stos
mov
adc
adc
ret
pop
push
sti
jmp
nop
mov
pop
jle
mov
inc
inc
and
into
ret
insb
leave
or
daa
fs
sub
je
or
push
jb
cli
xchg
jae
insb
mov
push
mov
cmp
mov
cmp
jne
test
gs
shlb
or
or
subl
enter
pop
fdivl
aaa
cmp
cs
rcr
addr16
std
cmp
jae
lods
pop
scas
sbb
inc
sub
or
push
sti
adc
daa
inc
mov
add
mov
and
fdivrs
xchg
mov
pop
xchg
dec
test
imul
aaa
sbb
xchg
or
mov
imul
mov
xchg
dec
sub
dec
push
les
mov
mov
xchg
ret
je
sub
mov
cmpsl
pop
in
scas
into
xlat
mov
call
aaa
dec
daa
sbb
xlat
cmp
enter
add
jbe
jns
cmp
and
mul
xchg
stos
jno
inc
cmp
xor
outsb
aas
push
icebp
lods
int
and
mov
inc
push
out
ljmp
xor
mov
leave
dec
mov
std
xchg
jnp
fwait
mov
dec
imul
inc
sbb
adc
cmp
mov
popf
lret
and
in
xlat
cmc
stc
lds
lret
and
loop
pop
mov
loop
xor
push
sbb
pop
mov
cld
jle
test
dec
xor
and
jne
push
lcall
adc
pop
gs
jns
lods
lods
sbb
iret
xchg
imul
stos
pop
adc
addr16
in
jae
jle
mov
inc
push
jl
xchg
mov
xchg
adc
or
push
loope
movsl
mov
test
push
insb
push
mov
sbb
sub
cwtl
mov
adc
out
mov
jb
lahf
mov
scas
pop
js
or
outsl
lock
gs
cmp
fidivl
mov
mov
push
cli
lcall
out
pop
push
popf
je
xor
cmpsl
dec
dec
movsb
sbb
mov
cld
jae
xor
outsl
pop
popa
or
mov
inc
add
pop
pop
jb
push
jp
mov
cmpsl
ss
lahf
cmp
mov
mov
adc
popf
clc
setle
leave
or
push
es
pop
mov
imulb
or
notl
add
sbb
bound
aam
aas
das
lods
fstpt
or
test
mov
xor
xchg
add
xchg
push
dec
cmpsl
mov
xchg
pushf
add
adc
lahf
mov
xor
and
push
daa
mov
sbb
or
inc
outsl
or
mov
push
jae
popa
push
lcall
jbe
sahf
daa
int3
out
sbb
mov
jecxz
xchg
xchg
idiv
testl
or
nop
push
cmp
loopne
push
fs
inc
cmp
cmpsl
jmp
out
dec
enter
and
mov
lock
mov
aad
mov
jns
test
mov
adc
int
pop
push
cmp
jb
nop
sbb
mov
cmp
jb
mov
jmp
and
jle
enter
pop
sub
mov
xchg
adc
jg
and
clc
dec
aad
popa
mov
repnz
je
cmp
xor
ret
xchg
popa
push
or
mov
int
ret
sbb
insb
int3
cltd
data16
push
push
pop
jmp
sub
xor
mov
fnstcw
or
mov
stos
or
ljmp
adc
leave
mov
xor
cli
aaa
std
push
cld
rcrb
sub
repz
addb
pop
dec
jg
push
lds
mov
sbb
iret
mov
mov
lock
xlat
bound
out
insl
push
or
inc
mov
jl
call
sub
lds
gs
imul
or
sbb
addl
addr16
or
dec
or
pop
cmp
test
fists
xchg
jge
dec
adc
jo
mov
repz
jecxz
mov
gs
shll
xchg
and
andl
mov
popf
jns
ficoms
mov
int3
jno
ljmp
push
rolb
dec
jnp
cwtl
loop
jae
or
xor
cld
movsb
xchg
push
add
mov
sbb
shll
outsb
aam
xchg
xor
pushl
das
negb
lds
mov
mov
xchg
fidivl
loopne
mov
jae
js
push
dec
out
dec
cmp
out
pop
push
sbb
movsb
push
push
push
lds
cmp
cld
pushf
mov
inc
and
inc
pop
fcoms
frndint
ds
out
int
dec
xor
add
lock
mov
adc
add
pop
nop
xchg
or
or
insl
cwtl
cmp
in
mov
es
in
in
sarl
call
out
ss
mov
xlat
rcrb
sbb
inc
out
popf
mov
sub
and
push
pusha
scas
xchg
rcr
ss
int
push
fwait
out
xchg
jb
repz
inc
jge
enter
adc
fistpl
cmpl
xchg
push
sub
test
pop
mov
mov
daa
test
out
out
cli
mov
sti
shlb
aad
and
lahf
pop
adc
aad
xor
push
lods
cli
movsl
outsl
xchg
comiss
or
fisubrs
fs
sbb
out
dec
and
push
outsl
js
push
icebp
cmp
loopne,pt
jge
in
mov
out
bound
shlb
int3
cmpsl
mov
mov
std
or
mov
sahf
mov
dec
dec
cmpsl
inc
arpl
mov
cmp
mov
add
adc
push
rcrb
outsb
pop
pushf
ret
ds
jb
clc
cmc
xor
cmp
aad
mov
ret
push
das
add
lods
cmp
and
xchg
mov
jo
and
pop
call
out
adc
test
sti
or
xchg
inc
mov
cld
xchg
cmc
mov
sub
sub
pusha
xchg
js
cmc
ja
and
es
or
test
push
xchg
and
ss
jno
sbb
sarb
mov
push
loope
int3
adc
dec
pop
rolb
shll
aaa
add
and
in
fiaddl
mov
stos
push
jp
cld
pop
and
in
cs
push
outsb
and
scas
dec
in
in
call
rcrl
fdivl
call
into
mov
pop
inc
mov
aas
xor
sub
mov
ljmp
adc
ds
mov
push
sahf
cmc
notl
mov
cmpsl
pop
mov
jle
sub
inc
dec
xor
enter
lods
insl
rclb
pop
sbb
repnz
xchg
sahf
testl
push
mov
int3
call
cmp
das
pop
add
add
jg
push
fsubrs
push
hlt
loopne
xchg
inc
jecxz
jnp
ljmp
pop
stc
outsb
push
testb
pop
loop
add
mov
sbb
ficomps
push
mov
dec
push
scas
stos
out
in
sahf
rcll
outsb
enter
sbb
and
mov
dec
fs
inc
popf
xor
sbb
or
popf
daa
pop
cmp
push
cmp
ljmp
stc
mov
cmc
mov
xor
bound
and
ror
xchg
fsubs
ret
dec
leave
sahf
cmp
xchg
add
mov
aas
es
jg
dec
stc
out
scas
jnp
cltd
and
mov
daa
out
and
fimuls
out
loope
lock
adc
add
out
mov
mov
sub
iret
mov
out
add
in
sbb
fwait
int
in
cmp
bound
ret
shr
adc
movsl
mov
push
mov
aad
stos
aas
lcall
js
dec
int3
sub
pop
xchg
or
popf
ss
pop
lret
mov
adc
shll
jae
repnz
pop
add
cmp
pop
xchg
scas
xor
xor
add
call
icebp
int
pop
add
aas
pop
sar
xor
cmp
aas
out
fsubl
dec
enter
repz
mov
mov
into
mov
push
add
imul
adc
and
cmpsb
insb
jb
stos
add
sbb
mov
or
jne
rclb
ss
sub
mov
add
je
ret
xchg
popa
xchg
sub
ret
hlt
sub
push
mov
xchg
lahf
out
repnz
and
add
dec
gs
jle
dec
fcomps
outsb
test
fldcw
out
mov
rcl
sbb
dec
movsb
pop
lds
mov
stos
mov
int
mov
xchg
push
out
and
ds
add
incl
mov
in
mov
mov
pop
fisttpl
adc
aas
ror
xor
adc
pop
psrld
rcl
mov
stos
xchg
jae
add
and
je
into
faddl
in
fisttpll
std
and
pop
je
sbb
std
pop
pop
pop
xchg
imulb
dec
lret
aaa
loope
in
push
cld
and
aad
mov
cmp
rcrl
pop
sbb
xchg
or
repz
or
pop
and
bound
dec
mov
xchg
ja
fptan
mov
js
dec
adc
bound
jbe
ret
xchg
xchg
adc
mov
jmp
fs
gs
aam
xor
sbb
ja
scas
push
fiadds
xor
mov
add
adc
test
jle
jl
insb
popf
insb
cltd
rsqrtps
xchg
test
fidivs
imul
ficomps
pop
fsqrt
repnz
adc
or
add
mov
ja
mov
lods
push
cmp
dec
lds
xchg
cmp
cli
cwtl
into
jae
adc
test
xchg
push
add
lods
icebp
data16
pop
aad
push
pop
adc
adc
or
pop
clc
jno
or
mov
ret
das
mov
adc
xchg
sbb
sbb
test
mov
in
sbbb
add
imul
and
cli
jae
ret
mov
xchg
fwait
jne
repnz
add
sbb
mov
inc
pop
inc
lods
mov
add
int
xchg
inc
push
call
ret
cs
push
in
push
or
test
out
sbb
test
aad
mov
mov
inc
cmpsl
sub
cmp
inc
cltd
push
les
cli
out
xor
aas
xchg
pusha
cli
jae
lcall
ss
aas
pop
orb
inc
mov
idiv
flds
hlt
jp
push
pop
mov
aad
nop
enter
sti
mov
subb
lea
jp
mov
sub
cmp
push
xchg
cmc
cld
sbb
ss
in
int
bound
in
outsl
inc
ja
mov
fwait
rol
testl
inc
jecxz
pop
or
es
test
jp
push
test
xchg
test
mov
negl
mov
lret
sbb
imul
lods
fs
mulb
push
xchg
cmpsb
inc
aam
push
ret
adc
and
and
sbb
lret
dec
push
mov
dec
movsl
aam
mov
stos
lret
sbb
movsl
fdivrl
pop
xlat
fisubl
and
mov
push
or
xor
notb
dec
fcmovne
hlt
jb
into
xlat
mov
lock
cli
loop
dec
add
push
movsb
push
mov
sbb
cs
repz
or
jae
cmp
pop
leave
adc
outsb
popa
and
mov
fidivrl
clc
test
add
mov
rcl
das
push
dec
adc
sbb
xor
push
jp
pop
mov
push
sub
add
lret
cmpsl
int
mov
stc
incl
cli
cmp
stos
or
sbb
push
or
pop
cmpsl
sbb
outsl
inc
sar
mov
dec
addr16
add
jbe
bound
out
jbe
add
xor
hlt
outsb
pop
mov
iret
nop
dec
or
xchg
outsl
xchg
cli
xor
jbe
and
xor
fiadds
es
xchg
pop
lea
add
pop
cld
mov
mov
push
adc
sbbb
or
inc
or
imul
fstl
mov
sbbl
push
push
dec
movsb
xchg
inc
test
mov
add
mov
and
adc
or
and
add
xchg
leave
dec
flds
into
xchg
test
call
addl
cld
loop
cmp
in
sahf
or
ja
fsubl
xchg
pop
jns
adc
shlb
js
adc
jge
xchg
pop
mov
xor
xchg
and
inc
jle
push
pop
ret
fldl
popa
or
outsb
mov
xlat
jbe
inc
lock
add
cltd
test
into
bound
fcompl
scas
jae
pop
out
test
jmp
insl
movsl
pop
add
dec
and
jle
dec
push
loop
sarb
dec
lds
cmp
adc
inc
hlt
push
out
adc
aam
xchg
adc
aad
mov
sbb
adc
push
xchg
add
pop
std
ss
fwait
into
ljmp
pop
in
aam
lret
les
or
xlat
insl
movsb
jle
stos
xor
jmp
pushf
icebp
pop
idivl
cmp
cmp
cmp
lahf
mov
stos
sahf
xchg
jae
sti
filds
mov
adc
xchg
jb
mulb
xchg
jns
push
pop
fwait
xchg
xor
xchg
jge
inc
js
pusha
mov
filds
sahf
adc
movsl
mov
lret
mov
std
adc
add
jno
jp
dec
ficompl
into
fs
data16
jne
out
mov
adc
movsl
insb
fstl
mov
cmpsb
adc
shlb
push
or
loope
pop
or
add
pop
lock
lret
scas
aad
stos
xor
lret
test
push
mov
xchg
xchg
jae
cwtl
imul
decb
and
testl
jns
insl
xor
cltd
adc
sub
js
jae
stos
jp
push
cmpsb
stc
jp
or
rclb
ret
add
mov
aaa
inc
js
icebp
jp
sbb
loop
xor
jbe
sub
cmp
popa
shll
popa
push
inc
gs
cmpsl
out
inc
xchg
mov
fisubs
push
or
in
sub
outsb
xorb
mov
mov
jno
rorl
mov
sub
jl
pop
ja
ss
sub
outsb
loopne
fwait
pop
loopne
je
pop
and
ss
inc
imul
mov
or
cmpsl
sub
insl
pop
cmp
adc
mov
sub
sub
jl
and
lret
add
dec
scas
add
imul
ss
jmp
inc
leave
shlb
dec
cmp
push
movsl
in
pushf
adc
cmc
incl
adc
sahf
cmpsl
daa
enter
xchg
sbb
xchg
in
ret
cmpsl
mov
mov
inc
mov
xor
dec
and
call
movb
fwait
in
mov
lret
lock
outsb
aaa
je
insb
movsb
sbb
loopne
xchg
scas
inc
out
iret
jns
inc
cmp
xor
fs
cs
jno
adc
sub
mov
or
jbe
push
sarl
or
repz
mov
arpl
cmp
inc
mov
jne
mov
add
mov
scas
stos
fld
pop
or
add
cli
repnz
fisubs
inc
mov
pop
pop
jecxz
fidivrl
mov
lret
add
ficoml
inc
jge
mov
cs
pop
nop
inc
nop
fbld
test
sub
mov
sbb
arpl
jecxz
outsb
int
roll
sbb
or
dec
push
xor
adc
mov
cmp
xlat
inc
enter
xchg
mov
xchg
cmp
adc
adc
pushf
mov
rol
mov
inc
aad
jmp
xchg
call
pusha
add
scas
repz
cmp
cltd
push
cmp
push
mov
cmp
dec
jl
pop
repz
das
sub
xor
daa
mov
dec
and
inc
rorb
cmp
clc
fwait
mov
xor
or
xor
testl
dec
mov
jb
clc
push
jecxz
adc
decb
ret
popa
dec
xor
mov
or
das
inc
push
push
in
icebp
in
aam
or
xor
add
xchg
mov
in
xor
lret
fwait
jle
mov
push
stos
push
cmc
fwait
popf
mov
jbe
sbb
rcrb
out
loope
adc
or
cmpl
cwtl
stos
mov
adc
push
jg
xor
mov
xchg
imulb
mov
mov
gs
push
out
mov
jle
inc
mov
popf
adc
push
push
xchg
scas
push
add
and
les
pop
mov
dec
mov
xchg
xchg
cmp
or
test
pop
jo
inc
insl
out
cmp
sbb
pushf
and
push
cltd
mov
mov
ss
and
jns
fldenv
xchg
fdivl
xor
idiv
sub
jns
mov
xor
aad
add
mov
gs
mov
int3
fmul
fsincos
add
insb
addr16
sub
lcall
mov
rclb
fwait
adc
fcomps
push
dec
lahf
cwtl
icebp
out
xchg
push
adc
aaa
jl
movsb
jnp
repz
pop
or
pop
popf
sub
inc
xor
test
movsl
xchg
in
les
mov
cltd
push
movsb
notb
mov
jne
mov
sub
sbb
pop
mov
movsb
loopne
adc
sub
mov
movsl
and
js
mov
lods
out
inc
sar
fwait
and
jnp
insb
jo
sbb
sbb
and
loopne
adc
fistpll
outsl
xor
xchg
stc
popf
leave
xchg
mov
enter
mov
movsl
sbb
pop
subb
mov
cmp
lock
rcl
lock
push
andl
pushf
roll
push
pop
dec
lods
sbb
jo
fcmovu
aaa
into
xchg
fwait
insb
test
mov
inc
loope
mov
dec
pop
cwtl
or
mov
pop
mov
mov
sub
leave
les
call
xchg
and
pop
loope
and
push
daa
movsb
inc
cwtl
mov
jmp
gs
push
xor
or
inc
das
jb
data16
icebp
xchg
xchg
scas
cmp
mov
or
mov
adc
pop
jp
cmp
sarb
lods
bound
dec
ret
xchg
jmp
popf
push
mov
adc
xor
cmp
fwait
rcr
sbb
sbb
fcmovnb
sub
leave
xchg
xor
jbe
dec
sub
push
mov
cmp
clc
mov
push
sti
call
addb
hlt
arpl
mov
shrb
cmp
mov
add
push
xlat
out
push
inc
jge
pop
mov
stc
js
stc
fcoml
lea
fsubp
dec
fs
hlt
xlat
xlat
or
mov
pusha
xchg
adc
mov
pop
inc
sub
push
aaa
or
dec
xor
mov
jge
xchg
mov
pop
push
jl
popf
stos
cmpsl
lcall
addr16
cwtl
js
mov
pop
mov
ss
push
add
rolb
mov
xchg
or
sub
sbb
repz
and
fsubrl
adc
rcll
xlat
xchg
iret
xchg
mov
pop
icebp
xchg
testb
imul
or
invd
nop
int
int3
out
sbb
rclb
jo,pn
or
loop
mov
andb
sbb
jne
sbb
lds
inc
out
mov
mov
adc
cmc
fmull
mov
fsubrl
mov
xchg
cmp
xor
clc
cs
pop
xchg
mov
iret
fwait
mov
jle
insb
test
sahf
mov
imul
pop
inc
pop
shll
imul
inc
xchg
aam
imul
arpl
ret
add
adc
fwait
cmp
pop
dec
dec
in
outsl
jmp
inc
mov
add
mov
popf
jg
mov
data16
pop
push
push
push
rclb
or
ss
adc
push
push
xlat
push
mov
insl
adc
ljmp
cmp
adc
rcll
inc
inc
sub
hlt
mov
add
ret
sbbl
sarl
movb
lea
pop
mov
leave
mov
gs
add
dec
xor
sub
inc
jle
cs
jns
addr16
dec
fcoms
addr16
jns
loopne
test
dec
repnz
cld
and
push
out
mov
cltd
mov
out
fcmovnbe
sti
and
jns
dec
test
jg
push
clc
jge
test
mov
addb
jecxz
add
insb
add
shrl
sahf
in
cld
pop
pop
ljmp
mov
notl
dec
sbb
daa
popf
dec
ret
mov
mov
push
sub
cmpsl
mov
in
adc
jl
adc
imul
mov
sbb
sahf
and
push
js
adc
or
adc
mov
fisttpl
pushf
outsl
fstp
loope
or
add
popa
add
movsl
adc
shlb
add
scas
out
pop
jg
out
cmpsl
xchg
addr16
clc
out
rcll
sahf
inc
jl
pop
or
adc
lret
inc
fstpt
inc
mov
jb
and
xchg
lret
and
cmc
pop
jno
into
out
push
xlat
ret
inc
dec
xchg
int3
mov
stos
idivb
or
push
into
pop
fsubs
push
lret
fimull
inc
out
dec
add
movsb
push
insl
in
lahf
mov
xchg
je
xchg
mov
sbb
lock
outsl
add
push
data16
aam
aad
add
add
lea
mov
fwait
inc
mov
es
clc
jns
std
dec
lahf
mov
loop
adc
iret
iret
or
repnz
lcall
leave
mov
ja
adc
adc
mov
ss
dec
dec
bound
adcl
lods
mov
push
loopne
or
call
or
lret
movsb
call
jbe
jge
adc
dec
test
cmpsb
stc
stc
js
int
repz
ret
push
notb
xchg
cs
hlt
js
mov
sbb
data16
push
popf
ljmp
mov
dec
inc
pop
mov
leave
sti
in
pop
in
jno
add
cmp
lock
mov
daa
fs
test
push
lods
lock
dec
push
iret
out
jne
xchg
iret
aam
subb
and
fstpt
test
dec
das
out
add
sbb
dec
adc
mov
push
adc
fincstp
test
or
push
cmp
out
lods
into
sbb
adc
mov
push
lcall
mov
cmpsb
mov
aad
js
sub
popl
jmp
sarl
mov
xlat
negl
pop
jb
add
jmp
add
sbb
in
and
push
cmpsb
inc
dec
or
push
scas
mov
mov
xor
push
repnz
push
lds
aaa
sub
adc
xchg
imul
shr
push
popa
lahf
ja
dec
cli
clc
jge
push
clc
shrb
mov
clc
std
lret
idivb
mov
les
and
imul
lret
jnp
xchg
inc
movsl
or
loop
mov
jnp
cmp
es
bound
dec
pop
popl
fidivs
adc
xchg
addb
adc
imul
cld
mov
xchg
clc
jo
pop
iret
out
ret
jno
jmp
icebp
jl
rolb
clc
loop
and
jbe,pn
sub
sbbb
mov
nop
push
jb
mov
testb
stos
pop
mov
in
scas
xchg
sbb
loop
jnp
ds
test
xchg
loopne
cmpsb
cwtl
add
fsin
test
sbb
mov
cwtl
sbb
xchg
push
push
xchg
shrb
mov
ss
adc
repz
dec
pop
cmpsb
and
push
add
ficoms
mov
dec
test
lret
daa
mov
fstpl
adc
stc
pop
daa
push
in
sahf
imul
sti
hlt
popa
jb
iret
mov
cmp
out
dec
sub
or
clc
incl
sbb
push
mov
push
and
mov
fbld
mov
inc
out
lahf
inc
jb
je
inc
mov
out
incb
scas
fisttps
sub
push
int
dec
out
int3
push
sub
or
ljmp
fnsave
loope
aad
lods
clc
sub
gs
lods
scas
and
inc
rcrl
pop
xchg
add
ja
negl
mov
and
test
cltd
pop
repz
sti
movb
cmp
mov
sti
jle
mov
out
xor
inc
aam
mov
test
or
aad
push
push
or
jp
into
ds
mov
jp
xchg
into
mov
shlb
stc
xor
mov
adc
lods
push
shr
adc
sub
pop
notl
clts
stos
push
int
movsl
decl
adc
dec
cltd
into
add
out
and
mov
mov
mov
imul
mov
xor
jl
push
adc
sahf
popa
arpl
fdivs
mov
push
cs
sbb
inc
lds
mov
pcmpgtw
add
fdivrl
imul
pop
jp
mov
das
jae
cld
mov
mov
xor
jae
jle
adc
lcall
jp
iret
test
sbb
mov
in
clc
fdivl
out
xor
fstpl
push
mov
push
ja
jg
cmp
arpl
andb
adc
or
push
popa
push
adc
adc
mov
push
or
rclb
xor
dec
scas
lcall
pop
aad
rolb
mov
cmc
fsubr
dec
add
xor
cmp
in
sar
inc
into
insb
mov
repnz
pop
pop
xor
mov
or
in
clc
test
pushl
or
popa
inc
pop
inc
sub
in
pop
outsb
xchg
les
pop
orl
fiadds
cmpsl
leave
popf
repz
mov
or
clc
pop
addb
outsb
cmpsb
pop
sub
out
lret
jl
jp
and
dec
add
mov
mov
sbb
out
mov
mov
pop
iret
add
test
sub
repnz
imul
das
sub
and
lods
xchg
ds
pushf
in
pop
stos
std
xor
into
xchg
xor
push
icebp
loope
cmpl
lret
fadds
jl
push
adc
xchg
into
dec
push
stos
cli
sbb
movb
mov
mov
pop
ret
mov
fsts
ret
pop
loopne
push
arpl
js
push
xchg
jge
stos
imul
push
dec
rclb
cmp
aaa
xlat
lods
jne
pop
pop
lods
mov
jmp
aas
cs
sbb
aaa
sub
cmp
fwait
mov
lea
sub
pop
call
in
or
int3
add
jge
aad
mov
mov
mov
pop
jae
icebp
adc
mov
dec
out
mov
lds
shrb
jo
js
xchg
adc
mov
addr16
rcrl
repz
mov
sbb
cs
fs
setge
push
xor
mov
sbb
add
icebp
loope
push
clc
daa
xchg
je
lret
pusha
or
test
rep
int3
paddq
mov
dec
lods
js
push
xor
inc
fsubrp
aas
sub
sbb
mov
cmp
and
push
or
jno
loop
add
popf
pop
arpl
jne
inc
push
mov
or
lds
xchg
rorb
mov
cmp
xchg
notb
mov
cmp
sub
fucomip
add
mov
mov
push
push
xchg
sub
push
cmp
cmp
out
lods
jmp
cs
out
in
cli
ret
jmp
ljmp
sub
outsl
pop
mov
cmpsl
mov
icebp
xchg
dec
int3
pop
ds
bound
xor
ljmp
test
out
pop
lods
inc
jne
push
jb
pop
cwtl
push
lods
out
into
divb
push
push
push
fcoml
mov
xchg
jb
adc
and
ja
sub
jno
scas
incb
mov
sbb
xor
lds
mov
push
int3
shlb
add
xorl
lret
xor
xor
xlat
inc
pop
adc
mov
sbb
pop
xor
mov
mov
js
cmp
fiaddl
cwtl
jne
insl
in
adc
lods
movsb
xchg
icebp
sbb
fcomip
pop
add
jne
movsb
add
sti
roll
dec
out
cmp
in
loopne
mov
mov
aaa
pop
xor
push
aas
cmp
inc
sbb
repnz
add
xchg
inc
test
jecxz
dec
add
mov
xor
lods
in
push
aas
mov
fisttpll
xorb
add
cwtl
adc
fdivr
cmpsl
jne
push
jg
cmp
cli
or
lcall
int
in
aaa
add
sbbl
stc
jge
pop
jl
int3
jno
dec
sub
jecxz
jp
gs
mull
jb
lock
push
mov
xlat
xchg
pop
nop
ret
mov
aas
xchg
cmpb
rcll
or
ljmp
jno
jl
or
add
pop
popa
js
mov
in
mov
lods
fs
shll
inc
out
outsl
arpl
sbb
mov
xchg
mov
jno
jnp
sub
lea
mov
je
test
imul
jp
xor
jge
and
adc
bound
or
pop
lret
outsl
mov
jnp
jle
je
dec
pusha
outsb
pop
cmp
xor
adc
and
rclb
daa
xor
les
mov
test
das
imul
adc
xchg
inc
lea
xchg
int3
enter
mov
add
icebp
mov
movsl
in
push
lahf
mov
mov
pop
sbb
push
mov
and
std
int3
das
leave
sbb
addr16
dec
mov
cmp
frstor
adc
fists
inc
jb
ds
ret
ret
adc
push
inc
fcoms
pop
pushl
loopne
xchg
mov
stc
mov
lahf
lcall
hlt
adc
and
shr
pusha
repz
or
lea
mov
or
inc
pop
int3
in
mov
js
add
push
xchg
mov
mov
fwait
mov
mov
insb
ret
lock
test
into
out
add
sub
push
mov
clc
jmp
cmp
xchg
mov
jb
insl
push
inc
push
inc
cli
push
cli
lcall
or
fisttpl
jnp
mov
sub
or
ficompl
ds
call
mov
test
sbb
incb
pop
adc
mov
and
sbb
mov
mov
cmc
cwtl
xchg
xchg
stos
dec
out
daa
xchg
in
js
jbe
scas
xchg
in
add
repz
inc
scas
int
insl
pop
fsubl
inc
test
inc
adc
ds
adc
xchg
push
cltd
or
push
enter
xor
out
mov
xchg
data16
mov
and
lcall
sub
pop
push
iret
or
lret
fdivl
in
mov
mov
jo
adc
sub
push
shl
mov
fnsave
loop
lods
icebp
mov
ds
es
xor
cmp
push
js
xchg
and
lahf
mov
add
sysret
pop
dec
or
cmp
ret
dec
mov
pop
adc
xlat
adc
push
nop
dec
add
mov
loope
rcr
mov
inc
mov
pushf
cs
scas
xchg
mov
mov
mov
dec
mov
push
mov
cmp
xchg
cmc
or
std
mov
dec
sbb
cmp
sbb
add
lods
cmc
out
pop
add
xchg
pop
movsl
xchg
shrl
cmp
icebp
sub
push
push
push
mov
out
adc
das
inc
icebp
xchg
loope
dec
stos
mov
dec
cmpsb
xor
xor
mov
stc
setg
aas
push
lea
inc
repz
pcmpgtd
inc
dec
add
xchg
daa
test
icebp
add
dec
and
les
mov
push
and
mov
outsb
aaa
adc
mov
cmp
out
inc
jnp
jae
fsubrp
frstor
popf
loope
rorb
mov
and
daa
rcr
cwtl
scas
dec
lock
fcmovu
repz
les
mov
dec
adc
jecxz
lea
pop
mov
out
mov
lods
imul
nop
movsl
mov
aad
xchg
lock
or
dec
popf
add
mov
and
sti
jb
pop
loop
popf
fnsave
push
adc
cli
fwait
int3
clc
popa
jb
add
jge
push
jge
fcom
sub
and
mov
and
push
nop
add
rep
data16
sbb
andl
jmp
in
and
insb
popf
mov
jge
lahf
mov
jae
pop
xlat
ljmp
pop
push
ja
dec
repnz
scas
mov
lea
daa
movb
shrb
lea
loope
mov
cmp
lahf
adc
fs
cmp
movsl
sti
jnp
cmp
ficompl
and
push
xchg
mov
dec
cmp
pop
push
sbb
cmp
push
fs
mov
cmp
rcl
mov
in
ficomps
fimull
mov
jge
lods
cmp
and
dec
sbb
repnz
lea
cmp
or
mov
mov
out
cmpsb
jb
cmp
js
test
mov
rcl
aad
dec
cmc
sbb
xor
adc
rcll
fadd
sub
aam
pop
in
lods
scas
scas
out
inc
xchg
cmp
jnp
jg
mov
add
in
mov
les
push
and
xor
scas
mov
hlt
pop
pop
lcall
outsb
push
lret
adcl
cld
and
stc
sub
aas
add
sbb
mov
xchg
sub
scas
mov
out
mov
add
jns
inc
test
add
ljmp
lahf
cmpsl
jg
int
repnz
incb
and
fs
push
aaa
loopne
xor
outsl
ss
dec
xor
mov
push
or
pop
test
ja
fwait
inc
insb
pushf
add
xchg
or
cmp
mov
stos
push
push
cmp
adc
in
subl
or
stos
std
inc
enter
divb
xor
repnz
mov
jbe
movsb
popl
pop
jo
jno
mov
sub
cltd
jo
pop
negl
test
pusha
scas
pop
mov
insl
rcll
cld
int
add
xor
jne
dec
test
fmull
inc
mov
call
or
xchg
jbe
add
cmp
andb
outsl
gs
mov
fisubs
xchg
pop
mov
and
mov
dec
push
pusha
push
xor
mov
xchg
cld
jno
dec
mov
pandn
aas
loopne
xchg
cld
mov
lds
and
jge
insb
xchg
push
test
xchg
movsb
cmp
inc
inc
mov
out
xchg
nop
or
pop
movsl
std
subb
dec
subl
dec
push
pop
cmp
cld
nop
shlb
hlt
xor
int3
ds
or
repz
jmp
mov
in
jae
lods
data16
pusha
pop
fildll
test
and
xor
sti
sub
daa
sub
mov
mul
daa
int3
movsl
std
leave
jae
cmp
adc
jo
cmpsb
adc
roll
inc
and
bound
clc
or
int3
inc
mov
loope
sbbl
dec
adc
cmp
ja
lock
mov
pop
mov
pop
mov
in
mov
fwait
movsl
out
mov
rcll
in
stc
dec
xchg
test
sbb
out
add
sbb
movsl
decl
stos
sub
fsub
sub
jle
mov
dec
pop
jns
stc
fldl
jno
nop
mov
cmp
fdivrl
dec
idivb
mov
iret
jle
arpl
mov
add
rcll
pop
ds
scas
aam
mov
pop
inc
cmpsl
pop
or
lcall
pop
bound
das
push
addr16
popa
inc
addr16
inc
push
jo
ret
inc
sub
jge
daa
xchg
xchg
dec
add
pop
jbe
sbb
int
sbb
push
mov
movsb
jo
xchg
lods
pop
data16
sub
insb
push
or
lcall
mov
cmp
sub
adc
das
xchg
dec
loope
cld
popa
dec
js
mov
push
push
add
mov
cmpsb
adc
loope
xor
lods
cmpsb
aad
mov
xor
mov
incb
xor
xchg
sarb
mov
jbe
xor
mov
in
cmp
jg
inc
rcrl
xor
and
lret
adc
mov
push
mov
jmp
dec
push
pop
lcall
xchg
sbb
jecxz
pop
or
xchg
lea
movsl
jle
mov
push
cmp
push
sub
cli
pop
adc
fistps
jg
jle
mov
push
add
jg
adc
push
orl
out
outsb
fstl
and
sti
lea
push
mov
cli
jge
stos
data16
ds
xchg
cmp
cmc
fstpl
lods
repz
insb
outsl
in
xor
mov
inc
sub
mov
scas
xchg
mov
in
sub
in
lea
scas
dec
xor
lahf
or
dec
movsb
mov
mov
mov
mov
in
gs
jbe
mov
push
lret
pop
into
sbb
pop
xchg
int
inc
add
and
inc
mov
test
mov
xlat
inc
or
bound
jg
xchg
ret
or
dec
es
fldcw
loope
mov
sub
xchg
in
xchg
cmp
xor
and
mov
addr16
cs
xchg
rcll
or
rcll
xchg
jl
sub
cmp
or
sub
test
ss
sbb
jl
sub
pop
cmp
jbe
cmpsb
mov
cmpsl
mov
or
sub
xor
js
xchg
es
lret
jo
in
adc
out
mov
call
add
jne
aas
shl
sbb
outsb
out
sarb
loop
gs
xchg
ljmp
popa
mov
aaa
adc
mov
aaa
adc
nop
cwtl
shll
imul
jbe
dec
jle
inc
pop
inc
mov
fs
pop
lods
insl
xor
mov
jp
inc
push
xchg
test
push
in
and
lea
or
mov
mov
xlat
xchg
adc
lea
sbb
cld
mov
fistps
cmpsb
add
or
stos
inc
xchg
pop
es
jns
add
rcll
js
inc
xor
ds
add
gs
dec
sbb
cs
aas
sub
leave
dec
pop
lods
xchg
out
int3
pop
faddl
scas
dec
sub
out
notb
adc
sub
jae
ja
xchg
cmp
xchg
push
push
sbb
push
or
sub
aam
pop
xchg
or
ror
andl
pop
mov
sub
fincstp
sbb
cld
mov
mov
or
daa
adc
imul
hlt
sbb
mov
or
shlb
out
xchg
push
scas
leave
pop
jmp
or
xlat
and
jl
in
lock
ljmp
push
pushf
sbb
xchg
rclb
and
stos
ret
roll
push
popa
push
jbe
in
xor
aad
push
subl
test
in
or
mov
mov
shl
arpl
push
jl
jno
inc
sahf
sub
lahf
mov
aam
ds
daa
xor
jnp
icebp
rcrb
jae
jno
fildl
out
adc
shrb
xchg
sbb
or
fsubrs
pop
nop
pop
in
pop
mov
sbb
xor
out
mov
adc
es
inc
stc
bound
inc
pop
pop
bound
stos
mov
and
std
mov
imul
add
dec
lahf
jne
adc
dec
das
add
addr16
pop
insb
xlat
popa
jecxz
ljmp
dec
mov
out
lret
fcompl
cwtl
pushf
sub
cwtl
sub
xchg
cmpsb
mov
sbb
dec
jne
cmc
test
adc
call
add
cli
shll
or
sahf
test
lret
in
inc
aaa
jle
pop
sarl
jecxz
lods
fwait
data16
inc
mov
jmp
out
rcrl
jno
int3
dec
mov
mov
xchg
fucom
and
test
sbb
pop
cmpsb
mov
add
and
push
stos
inc
jno
fcoms
sbb
jecxz
lods
movl
scas
sub
mov
jbe
pop
push
and
jl
xor
outsb
js
outsb
and
cmp
push
loopne
ror
cltd
adcl
jle
notb
push
cmpb
xor
subl
pop
shlb
dec
xchg
pop
mov
pop
pushf
pop
cmp
out
and
xorl
std
dec
inc
filds
in
jbe
or
mov
lcall
loope
mov
cs
in
mov
xchg
outsl
jge
leave
jbe
rcl
mov
cmp
cli
sbb
jnp
dec
jbe
bound
xchg
dec
cmpsl
mov
mov
into
and
or
xlat
xchg
pop
or
or
adc
fs
mov
subb
or
jg
sarb
cmovs
lea
ficoml
data16
test
push
pusha
mov
rorb
punpckldq
xchg
sbb
mov
dec
inc
add
sub
cmpsb
xchg
js
repnz
mov
fldcw
insl
inc
mov
out
aad
int
or
jo
cltd
pop
sti
dec
enter
jns
cmpsl
adc
dec
mov
sti
inc
sub
lahf
push
jle
jle
cmp
aam
inc
pop
loop
and
shl
clc
jae
scas
push
fsubrs
js
mov
add
cmp
and
outsb
ljmp
pop
add
adc
push
jge
mov
lea
inc
movsl
je
fsub
mov
cmp
lods
lods
or
or
push
adc
and
cmpsb
pop
mov
cltd
cli
subb
mov
jbe
movsl
sbb
wrmsr
int
sbb
pop
mov
jne
fisubrl
shrl
pop
push
mov
lret
jmp
add
cmp
lods
in
xchg
pushf
sahf
push
test
cltd
inc
dec
into
cltd
std
pop
xor
pop
ds
insb
sbb
fcompp
mov
icebp
cwtl
cmpb
cmc
pop
lcall
in
rolb
adc
hlt
mov
popf
xchg
push
inc
mov
test
sub
pop
dec
lret
popf
pop
sub
inc
cmpsb
fidivrl
dec
and
jnp
pop
dec
mov
xchg
mov
add
jb
xor
mov
sub
xor
jmp
xchg
and
add
push
test
daa
mov
xor
arpl
leave
cwtl
gs
jle
in
jo
enter
addr16
mov
out
jle
idivl
int3
jo
fisubl
ret
pushf
mov
lds
and
adc
ficomps
or
add
xor
stos
add
mov
fcoms
and
scas
aad
cmp
add
mov
xchg
xchg
inc
mov
je
movsl
leave
or
jno
cs
cld
mov
and
xchg
lea
adc
data16
dec
loope
lcall
mov
sub
xor
and
mov
cmc
idivb
outsb
jp
inc
popw
decb
test
pop
dec
and
xor
clc
repnz
push
or
xor
mov
dec
xor
loope
adc
mov
fwait
aaa
lahf
hlt
stos
popa
in
scas
jns
lea
jbe
shlb
sbb
jge
fists
add
gs
arpl
lods
push
xor
das
push
and
push
or
leave
stc
out
aam
lock
lahf
jnp
jecxz
xchg
inc
adc
sub
mov
incl
adc
insl
push
sbb
mov
mov
nop
mov
outsl
jo
loopne
sti
inc
lock
push
popf
mov
dec
mov
dec
xchg
ret
and
sub
xor
shrb
add
or
in
std
mov
xor
xor
pop
jb
sub
xchg
hlt
dec
xchg
cld
inc
insl
fwait
out
in
push
sub
jns
pop
mov
jge
fs
lcall
mov
mov
js
ss
xchg
push
dec
fsubrs
iret
int3
pusha
xor
movsb
addb
sub
arpl
idivb
out
insb
cmpsb
dec
jmp
or
dec
jne
call
jl
push
das
xorb
adc
cmpsl
push
inc
sub
in
lds
sub
orb
arpl
lret
xchg
push
adc
xchg
pop
lahf
pop
mov
and
std
les
loope
xchg
ljmp
jb
or
add
add
dec
jne
imul
and
sbb
cmpsb
and
es
push
push
in
sti
jne
add
ss
enter
xchg
and
pop
jp
xchg
das
sub
cmp
cmp
lods
pop
out
jl
ja
sub
pop
mov
sbb
mov
adc
mov
out
and
fsubp
mov
mov
ficoms
mov
mov
add
and
cmp
test
dec
in
mov
test
jle
fucomp
dec
addb
popa
ds
adc
cmp
push
xorb
fwait
lods
adc
cli
imul
imul
or
xchg
aas
jb
frstpm(287
and
into
enter
cmp
divl
jge
or
popfw
xchg
dec
push
jmp
pop
call
or
ljmp
pslld
xchg
and
rcrl
imul
out
jle
std
cs
push
hlt
sbb
xchg
sub
push
iret
ss
imul
mov
cmp
cwtl
mov
fdiv
call
leave
ja
movsb
xchg
popf
mov
sub
xchg
cmc
clc
xchg
test
jo
fwait
stc
je
push
subb
enter
fistl
jno
mov
hlt
aas
into
adc
loope
xor
adc
shll
mov
insb
sbb
fs
push
adc
ds
add
pop
outsl
out
fsubrp
cmpsl
lea
ds
xchg
or
ds
movsl
ret
outsb
lret
or
fisubl
repnz
push
hlt
lds
sbb
ss
xchg
or
into
cmp
fs
add
mov
int
jae
push
mov
repz
popa
sbb
scas
icebp
or
mov
and
push
jmp
jl
jns
and
and
add
add
sub
dec
push
add
sarl
addr16
adc
xchg
xor
mov
sahf
icebp
in
sub
pop
xlat
push
test
mov
xchg
sysenter
jns
jg
and
xchg
and
stos
jae
push
jecxz
and
and
dec
cmp
and
mov
in
jg
xchg
pop
or
loop
outsl
ds
mov
ret
in
jne
daa
movsb
jle
je
imul
outsl
lcall
imul
lock
dec
push
into
cmp
scas
push
test
dec
jno
pop
xchg
xchg
mov
daa
negb
push
and
movsl
pop
pusha
jne
mov
and
inc
pop
inc
push
and
pop
jmp
cwtl
cmpsl
push
xor
mov
dec
adc
scas
sbb
jo
div
out
mov
repnz
fcmovbe
dec
int3
jns
or
test
add
pop
or
hlt
mov
dec
aaa
fmull
xor
out
lret
sub
cmc
pop
push
mov
or
cmp
sbb
and
das
mov
insl
cmp
cli
js
inc
mov
add
xor
xchg
call
and
sub
jnp
in
mov
test
int3
rcl
sti
xchg
mov
negl
fiaddl
cmpsb
mov
subl
insb
ficoml
jno
in
hlt
pusha
push
mov
shlb
mulb
aaa
xlat
mov
in
out
cli
lods
push
neg
mov
stos
and
repz
enter
lret
jge
repnz
outsb
lock
mov
fucom
icebp
inc
arpl
mov
je
mov
mov
mov
shr
fcompl
cmp
mov
push
mov
out
ljmp
fwait
jmp
mov
dec
sub
or
das
or
pop
cmp
test
idivl
hlt
stos
imul
xchg
mov
or
mov
in
jno
mov
flds
call
jo
jle
lahf
mov
xor
pop
mov
cmp
sbb
int3
sahf
cmp
enter
xorb
or
pop
xchg
aam
loop
mov
sbb
mov
idivb
mov
mull
mov
push
lods
xor
jno
rol
adc
mov
push
xor
jmp
sbb
push
vpaddq
dec
or
fwait
repnz
mov
add
dec
aaa
xchg
notl
loope
mov
sub
mov
outsl
lods
ljmp
in
nop
adc
aaa
outsl
pushf
aas
fcmovu
ja
js
out
cmp
pusha
fiadds
fisttpll
out
cmp
fmulp
dec
insl
and
into
dec
out
lahf
adc
xor
ror
bound
jmp
frstor
leave
mov
or
mov
loopne
adc
cmpb
mov
std
jo
imul
lods
mov
out
lret
jo
add
sub
shrb
pop
sbb
push
bound
in
loop
es
add
jecxz
inc
mov
jp
mov
sbb
jbe
xor
repz
push
inc
mov
mov
addr16
aaa
xchg
pop
adc
jne
scas
hlt
push
in
loope
sub
dec
je
andl
mov
add
cld
lea
jecxz
mov
xor
roll
xchg
stc
pop
push
lds
ror
out
lds
lcall
inc
jle
cmp
ds
lock
jns
xor
dec
or
clc
push
xchg
lea
dec
dec
push
dec
pop
stc
aad
nop
loopne
xorb
rcrl
and
and
data16
xchg
jmp
fcmovnbe
push
mov
sub
in
fadds
out
shlb
in
pop
pop
add
cmc
adcb
or
xor
cmpsl
inc
pop
lds
add
and
mov
mov
orb
inc
mov
xor
cltd
pop
mov
test
dec
in
and
mov
push
test
insb
dec
hlt
cmpb
ucomiss
or
inc
and
and
addb
or
cmp
es
cmc
adc
jp
sbb
enter
mov
mov
ret
call
aaa
scas
inc
lds
fistps
es
push
adc
mov
ret
leave
loop
loopne
mov
adc
mov
and
popa
ljmp
dec
or
in
add
fwait
add
mov
xor
fld
stos
loope
mov
nop
cmp
ljmp
out
rcll
out
mov
push
inc
xchg
pop
repnz
shrb
repz
add
add
mov
jp
ljmp
rcr
and
scas
and
fsubl
test
pop
mov
add
push
rcll
inc
insb
jle
xor
mov
xor
jne
lret
jle
dec
div
cmpsl
and
and
mov
addr16
dec
or
dec
test
mov
pop
jecxz
add
or
inc
shlb
fwait
sbb
fwait
mov
push
test
sbb
fidivl
push
mov
call
gs
sar
dec
pop
or
shlb
sbb
xor
jle
xlat
in
imul
test
pushf
les
push
sbbb
out
les
sti
xor
push
push
xchg
leave
mov
inc
cli
ja
inc
ret
inc
pop
out
xchg
testl
sbb
dec
jl
imul
mov
pop
push
push
pop
out
xchg
mov
fnstcw
ja
xchg
cs
ja
mov
or
fiadds
cmp
and
cld
push
push
mov
cmp
in
mov
push
loopne
pop
call
ret
das
xchg
sbb
insl
push
sub
sbb
fs
mov
aaa
push
xchg
sti
je
popf
fsubs
cld
pop
rep
addl
stc
xchg
xchg
cwtl
test
pop
aam
outsl
dec
rclb
pop
push
movsb
mov
jmp
mov
adc
or
stos
push
mov
icebp
in
loop
and
cmp
jb
lcall
sbb
sbb
mov
inc
inc
mov
fidivrl
xchg
iret
dec
mov
mov
cltd
cwtl
int3
sbb
or
fs
ficompl
mov
xor
jo
lea
xchg
inc
mov
sbb
sahf
push
sahf
out
clc
add
nopl
cld
fwait
mov
push
pop
or
push
and
mov
adc
sbb
xor
sub
mov
cwtl
add
cmp
mov
pop
in
push
andl
jge
movsb
clc
in
xchg
js
daa
mov
jmp
pop
mov
aas
push
jne
into
adc
in
mov
frstor
xor
cwtl
and
sbb
leave
xor
add
imull
inc
xchg
mov
hlt
js
pop
sbb
xchg
mov
test
je
push
cmp
aaa
jbe
cmc
mov
adc
xor
push
cltd
repz
or
das
js
push
mov
pop
inc
xchg
dec
xchg
mov
arpl
addl
insb
fwait
or
inc
lea
mov
adc
cmp
sbb
cmp
jecxz
repz
stos
cmpsb
divl
out
mov
xor
in
stc
je
cmp
jp
mov
jnp
inc
call
idivl
clts
repnz
pop
stos
jmp
push
pushf
imul
inc
shll
insl
ljmp
outsb
ja
xchg
or
xchg
test
pop
pop
repnz
subb
je
shrl
pop
fldt
mov
fsubrs
jp
ret
stos
rorb
test
lods
and
leave
jo
sbbb
cs
dec
sbb
inc
in
xlat
adc
loope
xchg
js
lcall
push
out
ss
enter
mov
sbb
xor
jecxz
stos
mov
cmpsb
lret
imul
cmpsl
or
sarb
test
mov
inc
inc
sub
xchg
dec
lock
shrl
cmpb
jb
loopne
std
jno
aam
sbb
outsb
cs
inc
shlb
pushf
mov
movsb
inc
insb
pop
ror
adc
idivl
pop
xor
inc
shll
xchg
lock
in
rcrl
xchg
shrl
cmp
push
jp
loopne
mov
or
cmpsb
cmc
lahf
dec
adc
mov
imul
cltd
dec
sbb
shlb
lret
popf
clc
push
insb
scas
push
mov
loope
loopne
int3
hlt
outsl
sti
mov
lcall
stc
dec
es
xor
lea
movsl
push
jb
sub
dec
leave
mov
mov
jge
adc
or
jle
add
sub
adc
push
mov
xchg
or
test
std
data16
mov
cwtl
cmp
dec
xchg
sub
sbb
xlat
jbe
gs
pop
dec
aaa
out
js
ret
cmp
pop
ljmp
lods
xor
inc
lret
push
clc
sbb
or
pop
outsl
or
pop
popl
sub
arpl
mov
sti
sbb
iret
add
jns
pop
push
lock
test
sub
and
mov
sub
push
pop
ret
fadd
mov
rclb
jno
inc
jnp
mov
mov
sbb
pop
jl
in
js
sbb
das
lea
popf
xchg
cmp
int
dec
push
push
mov
adc
xchg
xor
je
mov
daa
lret
sbb
movsl
add
lea
push
aaa
adc
push
cli
mov
out
push
cmp
and
imul
mov
shl
test
mov
aam
add
lea
arpl
mov
dec
shrl
xor
test
ret
movsb
icebp
adc
imul
stc
addr16
outsl
or
sbb
xchg
jle
mov
xchg
xor
sti
push
stc
ret
mov
sbb
mov
adc
mov
mov
dec
fistl
cmp
out
mov
cmp
add
inc
loopne
in
mov
inc
xchg
fisubrl
test
inc
mov
sti
mov
adc
setae
inc
push
push
ss
aad
aad
jp
cmpsl
out
out
dec
and
sub
sub
mov
stos
and
sbb
enter
sub
sub
cmpsl
adc
jbe
push
and
sub
jnp
xlat
and
in
repnz
jecxz
mov
in
mov
jae
sub
test
arpl
mov
test
les
cmpsl
ja
into
dec
push
filds
jo
add
sbb
mov
inc
daa
bound
push
fcom
pop
scas
fldt
cmp
ds
mov
das
xor
imul
jb
test
inc
push
rcrl
sti
imul
cmp
movsl
pop
cli
adcb
push
negb
jbe
sub
mov
mov
aam
adc
flds
cmp
cmp
mov
push
jb
sbb
mov
cmpsl
mov
jns
pop
inc
loopne
hlt
dec
packuswb
cmp
ja
adc
dec
jae
dec
cwtl
mov
outsl
adc
cmc
mov
divl
movsl
imul
stos
and
jbe
test
gs
lds
sbb
add
sbb
jnp
fnstsw
mov
testl
inc
inc
xor
out
adc
mov
in
fimull
jg
mov
std
jmp
mov
pusha
mov
jae,pn
jmp
push
std
dec
test
scas
or
add
push
jns
pop
out
sub
rolb
call
xor
pop
lock
xchg
dec
push
mov
sub
sub
daa
mov
xchg
popa
enter
pop
pop
inc
lock
jecxz
mov
hlt
mov
sbb
sbb
xchg
dec
push
xor
data16
out
lods
data16
mov
sarl
xchg
xor
mov
inc
pop
xchg
imul
sub
sub
add
into
int
lret
push
push
aas
shr
mov
stos
lcall
add
test
rorb
push
ret
inc
jle
mov
push
and
insb
jbe
call
push
xor
dec
inc
sub
dec
sahf
adc
mov
and
iret
mov
jae
mov
xchg
xlat
and
mov
leave
scas
adc
jnp
fisttpll
std
push
pusha
add
shl
xchg
xchg
outsb
ret
mov
stc
aad
negl
dec
repnz
xchg
scas
test
pop
jbe
lods
idivl
out
xchg
sbbb
in
bound
jo
test
inc
loope
xor
jb
std
mov
popf
pop
sbb
cmp
xchg
insb
fnstenv
shrl
les
mov
mov
stos
mov
fisubrs
je
loope
sub
jecxz
fdivrl
jb
mov
cmp
jp
ja
fsubs
xor
adc
xor
cmp
inc
lds
js
mov
and
cmp
xchg
lahf
fs
sub
jp
cmp
and
fstp
mov
jmp
jl
xlat
dec
iret
std
std
leave
mov
xchg
fimuls
adc
ja
fwait
sbb
les
pop
push
sahf
cmp
inc
jnp
lock
dec
fwait
jge
fs
loopne
lret
mov
ficomps
testl
daa
mov
insl
stos
xor
and
es
or
into
int3
jns
imul
add
mov
orb
test
fwait
pushf
mov
lahf
push
inc
sbb
or
adc
and
hlt
mov
test
fists
repz
addr16
sti
ja
mov
rol
mov
adc
adc
scas
mov
fnsave
ret
outsb
mov
cmc
fucomp
sub
popf
jl
mov
sub
rolb
clc
pop
xchg
inc
movsb
mov
mov
sub
xchg
jge
cltd
xorb
das
bnd
pop
insb
pop
shlb
inc
dec
cs
xchg
jbe
popl
aad
addr16
sub
ret
in
adc
fwait
lret
into
inc
push
xchg
or
jbe
pop
add
fwait
sub
pop
roll
pop
lods
xchg
fimuls
mov
cltd
or
das
and
mov
adc
leave
jecxz
sbb
inc
rcr
and
sahf
test
std
ret
push
arpl
test
and
call
cmp
mov
jle
ja
xorb
hlt
pop
cwtl
jl
inc
cmpb
and
inc
aaa
cmp
sbbb
pop
mov
fsts
rclb
jb
cmpsl
inc
mov
push
and
dec
jl
scas
mov
mov
inc
icebp
sub
out
enter
xchg
shlb
mov
js
out
xchg
jge
pusha
ss
xchg
ret
push
jno
adcb
cmp
or
mov
sub
inc
jmp
out
or
add
xchg
xor
mov
cwtl
outsb
sbb
lcall
pushf
and
inc
dec
rcrl
or
mov
add
push
pop
dec
sbb
test
lds
testl
hlt
test
push
nop
mov
sub
push
dec
mov
hlt
inc
mov
jno
ds
pop
jae
xor
sub
jp
mov
adc
test
ss
and
cmp
imul
sbb
inc
xchg
les
sub
cmpsb
dec
sub
mov
es
std
imul
ljmp
or
stc
pop
sbb
xor
pop
sub
int3
dec
dec
xor
movsl
and
xchg
fsqrt
mov
lret
xor
dec
mov
xchg
ja
sbb
int
cmp
mov
out
vmread
mov
aas
dec
and
repnz
push
xor
cmp
test
jp
xchg
add
jns
enter
stc
xchg
fisubrl
mov
xor
push
adc
inc
ss
or
sbb
adc
int
out
jle
mov
popf
xor
adc
jne
xchg
outsl
mov
lret
push
and
outsb
stc
repnz
jnp
fisubl
jecxz
in
dec
dec
xchg
outsb
in
repnz
sub
lods
das
sahf
aas
inc
das
mov
sbb
sub
into
mov
test
nop
mov
scas
sub
pusha
xchg
dec
les
mov
into
mov
and
adcb
mov
add
loop
xchg
sub
xor
out
mov
sbb
aas
mov
hlt
lods
lcall
cltd
pop
js
scas
pop
and
cmp
in
mov
cmpsb
xor
pushw
mov
scas
scas
adc
xchg
or
stos
insl
cmp
fldenv
andb
lret
outsl
pop
xchg
out
inc
sub
mov
adc
aam
gs
inc
inc
outsl
or
adc
fdivrp
jo
mov
shlb
fsubl
fsubrl
stos
pop
and
push
sbbb
neg
dec
std
fimull
jne
mov
lods
sbb
mov
xor
jo
mov
stc
iret
inc
je
std
addr16
mov
mov
lock
add
ds
xor
fs
sbb
push
push
fistl
sahf
lods
lods
dec
sbb
stos
xor
sbb
push
movsb
add
imulb
pusha
mov
dec
ret
adc
clc
jecxz
lock
xchg
dec
cmp
adc
test
push
dec
stc
sbb
dec
push
insb
sbb
add
xchg
push
sti
cmp
mov
mov
scas
push
sbb
pusha
lock
icebp
xor
and
or
add
add
shl
sbb
flds
dec
dec
mov
andl
stos
xor
add
scas
cmp
sub
inc
pop
mov
push
add
mov
inc
ficoml
repz
pop
pop
mov
add
adc
lods
clc
pop
fmul
xchg
cmc
dec
movhps
cmp
sbb
ficoml
aam
inc
jge
insl
sub
push
mov
ss
gs
pop
sub
cmp
add
in
pusha
arpl
fwait
arpl
dec
xchg
pop
mov
mov
or
mov
mov
scas
out
bound
insl
xchg
mov
fbstp
hlt
cmp
lret
ds
cmp
or
inc
jno
xor
fs
cld
cwtl
rclb
xor
mov
repnz
push
jle
adc
sub
push
test
sbb
mov
clc
dec
adc
js
fisttpl
mov
adcl
addr16
test
mov
andb
stos
popf
push
int
mov
adc
xchg
ret
fcmovne
jbe
stc
jmp
mov
jnp
pop
jno
sub
adc
push
imul
mov
push
fisttpll
dec
leave
cmc
addr16
notl
or
lea
inc
nop
xchg
les
xlat
jge
cmp
dec
adc
dec
mov
pop
cld
inc
or
xchg
or
imul
shrl
into
aas
into
jo
pusha
loope
lret
push
int3
in
fs
fildl
in
lods
and
xlat
and
xor
jae
cmp
cwtl
shl
xlat
cwtl
mov
loop
gs
pop
rolb
lds
lret
jo
xor
dec
cmp
xchg
scas
xor
repnz
dec
add
popf
addr16
mov
cmpsl
ljmp
jne,pn
das
add
mov
adc
push
repz
push
leave
push
ja
inc
fcom
push
sti
jecxz
jg
les
mov
pop
sub
clc
pop
mov
and
dec
jg
add
xor
jbe
mov
mov
pop
inc
mov
mov
pop
ret
imul
in
add
inc
popf
ficoms
data16
sti
dec
pop
jecxz
jge
mov
mov
dec
xor
cwtl
fldcw
call
sbb
mov
jo
cmp
inc
sub
adc
aad
cmpb
lcall
dec
pop
inc
sub
sub
in
push
pop
movsl
ja
push
lds
dec
enter
mov
sbb
lret
test
bnd
std
lahf
ljmp
xor
add
lea
mov
jne
pop
jae
ret
fsubrs
push
xchg
sti
cs
js
lcall
fisttpll
inc
jae
sub
jno
pop
fcomps
push
fildll
push
aad
stc
fistl
fdiv
pop
adc
xchg
dec
dec
in
aam
xchg
ret
cmc
std
xchg
mov
mov
mov
sbb
or
sbb
mov
imul
jo
xchg
cmp
fninit
sbb
dec
adc
adc
loopne
adc
jb
and
or
pop
lcall
js
lret
sbb
mov
addb
cmpsl
adc
pop
mov
mov
roll
or
sbb
roll
fldt
mov
dec
sbb
pop
mov
cmp
push
jbe
cmp
test
mov
jo
shr
mov
inc
leave
inc
fbstp
inc
insl
cmpsl
xchg
push
inc
sbb
jle
cmc
je
aad
loopne
sahf
loope
cmp
idiv
adcl
sbb
test
sub
clc
mov
sbb
mov
cld
push
adc
stc
lea
cmc
ss
mov
lret
daa
or
sbb
mov
inc
dec
out
sbb
push
xchg
mov
jge
outsb
add
mov
or
lods
xchg
pop
xchg
mov
in
or
roll
inc
enter
jno
xchg
push
sahf
fs
test
ret
mov
mov
add
adc
push
shrb
je
xor
mov
or
and
mov
mov
jb
sbb
jmp
xchg
out
lods
xchg
daa
xchg
adc
adc
cmpl
out
xor
dec
dec
xor
xchg
xchg
hlt
xchg
arpl
mov
and
cmp
fcompl
mov
cmp
add
inc
jle
inc
xchg
lods
xchg
test
out
cmp
pop
jecxz
int
pop
jmp
popa
cli
push
lods
fsubrs
mov
in
mov
aaa
jmp
and
cmpsb
cmp
aam
and
cmp
insb
or
push
dec
or
iret
jmp
aaa
push
inc
movsl
add
addr16
mov
inc
sub
int
enter
scas
test
cmp
sub
xor
adc
rclb
mov
push
addr16
movsb
rcrl
sub
mov
out
fbld
push
rcl
sub
cmpsb
push
xor
out
ss
adc
repnz
adc
sub
arpl
lea
sbbl
adc
or
pop
stos
or
xchg
lea
push
loope
push
or
scas
xchg
or
xor
xor
loope
push
fdivrl
push
data16
js
add
adc
ficomps
or
aaa
inc
jb
push
in
data16
mov
or
mov
sbb
cli
gs
loop
adc
adc
sub
fldcw
jg
rcl
sbb
daa
sahf
iret
pop
lods
mov
xchg
call
call
xlat
xchg
adc
sahf
mov
leave
sbb
outsb
pop
sarb
es
cwtl
jae
repnz
adc
ficoml
mov
out
or
stos
xorb
mov
mov
inc
out
inc
and
popa
fwait
mov
call
or
mov
sti
in
jno
mov
mov
jmp
and
gs
xchg
xchg
jae
inc
shrl
cmp
sbb
mov
lret
mov
les
inc
xchg
push
xchg
jge
cld
push
filds
dec
cmp
add
push
ss
sub
pop
push
push
bound
aam
lret
pop
pop
cmpsb
cmp
data16
sub
out
pop
sahf
sbb
inc
mov
out
add
out
std
rorb
lods
inc
or
and
repz
fdivl
jo
addl
rclb
repz
arpl
stos
inc
xor
loope
mov
adc
jbe
gs
movsl
push
xor
cmp
adc
into
fs
shll
dec
xor
xchg
outsl
cmpsl
pop
mov
push
push
or
adc
frstor
xor
frstor
ss
mov
fcompl
ja
mov
mov
nop
rcll
sti
push
inc
clc
cmpb
rorb
jmp
sub
cmc
stos
clc
xchg
xor
jns
fstpt
data16
cmc
int
in
or
dec
ds
inc
lret
aad
in
mov
mov
lea
popa
xchg
push
or
push
mov
loopne
adc
jns
pop
cmp
jecxz
mov
std
mov
cmc
shlb
loopne
fcompl
or
inc
mov
push
sub
mov
push
jbe
mov
adc
aad
out
cmp
mov
mov
sbb
outsb
mov
or
and
nop
push
inc
xchg
imul
scas
sbb
inc
push
jo
std
add
mov
jo
add
mov
in
rorl
sub
movsb
pop
xlat
xchg
pusha
sbb
int3
mov
in
fimull
add
and
push
push
sub
dec
cmpsb
xor
fbld
mov
hlt
mov
inc
cmc
lret
outsl
fists
pop
cld
xchg
in
xlat
sti
pop
or
mov
push
mov
sbb
inc
and
push
scas
jno
dec
xor
in
insl
leave
add
mov
adc
xchg
cmp
add
mov
push
test
mov
xor
cmp
cmp
push
mov
dec
push
ror
testb
ret
mov
lret
push
mov
ljmp
je
call
push
inc
pop
das
hlt
inc
push
repz
imul
pop
pop
das
int
jg
mov
adc
mov
jl
shl
add
xchg
dec
cmc
mov
ss
xchg
and
sbb
arpl
pop
jnp
fcoml
and
sbb
loopne
int
pop
aas
push
sti
push
jno
mov
jg
mov
adc
mov
xor
push
or
jp
ja
lahf
xchg
mov
adc
add
cmp
repz
add
movsb
mulb
mov
pop
push
ds
push
push
pop
rclb
jns
dec
pop
xchg
mov
xor
inc
sbb
test
mov
aas
lods
mov
std
fcomip
arpl
sub
jne
mov
dec
lahf
cmpsl
mov
arpl
daa
in
mov
and
pop
xor
and
fucomip
rclb
xchg
mov
insl
push
adc
xchg
mov
fs
pop
dec
jg
mov
cs
jg
lods
loopne
jp
das
mov
fdivrs
jbe
xchg
ret
jo
fwait
pop
sub
xchg
cmp
or
xlat
xor
sbb
xchg
aad
in
add
push
fwait
cmp
mov
loope
mov
jge
jo
and
inc
test
lahf
xchg
iret
pop
outsb
sub
popa
pop
jo
jnp
push
jb
dec
push
jae
popa
ljmp
cli
fsubs
cmpsb
pop
jmp
or
mov
rcrl
sbb
ret
or
jne
jns
insb
pop
mov
aas
addr16
cmp
sbb
lret
sub
pop
xor
fmull
sbb
lock
push
or
adc
or
xchg
inc
sub
sub
xchg
jmp
lds
adc
mov
cli
inc
in
popf
mov
clc
mov
cmpsb
jbe
pushf
call
push
dec
mov
rorb
add
nop
movsb
call
inc
insl
mov
sbb
decl
jle
sub
jg
adc
div
fwait
adc
pop
mov
add
cmc
aaa
pop
pop
push
ret
sub
imul
add
sub
push
or
inc
sub
add
sub
xchg
mov
or
mov
aas
pop
ljmp
mov
mov
cmp
cmp
add
and
mov
out
cmpsb
inc
sahf
mov
xchg
test
cmp
push
pop
add
stc
push
addr16
inc
data16
xchg
mov
cmpsb
push
into
mov
and
cmp
cmp
xor
inc
or
xchg
ret
jge
cmp
aas
pop
xchg
pusha
xchg
push
cmp
out
in
mov
int
add
in
push
clc
js
xchg
cmc
lret
sti
and
sbb
fs
cltd
incb
push
aas
scas
lock
mov
test
ds
adc
adc
adc
aas
dec
jg
in
pop
jg
stc
adc
mov
fndisi(8087
xor
mov
inc
shrl
push
jmp
dec
inc
jnp
xchg
std
cmp
mov
loopne
test
shlb
jbe
cs
fcomps
sub
add
adc
mov
cmp
adc
pop
xchg
popf
test
fsubr
fsub
test
fisubl
mov
mov
lea
in
pushf
jo
cli
xor
addr16
jmp
mov
cltd
int3
add
outsb
jle
js
pop
push
and
rclb
or
xor
sbb
jmp
fucomp
push
cmpsl
xchg
in
insl
push
cmp
jae
rorl
push
pop
scas
daa
mov
xchg
ja
push
xor
mov
cld
and
and
dec
push
cmpsl
cmp
shr
pushf
add
ds
ljmp
stc
pop
dec
pop
xchg
adc
cltd
mov
cmpb
in
dec
pop
push
mov
mov
push
jge
dec
in
xchg
insb
sub
sarl
pop
imul
sub
jnp
shll
mov
jl
jo
mov
cs
lea
adc
fwait
rcl
subb
mov
out
push
push
and
les
in
pop
mov
enter
scas
xchg
inc
insl
lahf
xchg
pop
sbb
jbe
pushf
imul
pop
test
cmp
ret
loope
dec
imul
psrld
iret
frstpm(287
int3
gs
jp
cmc
sub
xor
sub
imul
cld
jno
add
arpl
scas
jno
push
sub
push
sbb
pop
rclb
pop
loopne
sbb
cmp
mov
pop
adc
lea
repnz
jg
aad
inc
popf
daa
sbb
mov
inc
rorb
inc
jnp
inc
sub
cmp
scas
imul
xchg
daa
push
push
push
insb
ds
jecxz
or
addr16
cmc
inc
jecxz
inc
mov
in
loop
pop
sbb
cmp
sahf
push
cmp
fsubrs
sub
repz
jo
jmp
lcall
movsl
mov
call
ljmp
je
mov
xchg
mov
xor
es
lret
cmp
xchg
es
pinsrw
jb
cmc
dec
add
mov
lds
inc
xchg
fs
xlat
je
outsb
cltd
out
lds
mov
xor
int3
jne
fstl
enter
movb
test
out
push
push
decb
xchg
push
in
mov
jns
pusha
cli
inc
bound
loopne
mov
popf
je
sahf
aad
jae
xchg
aad
in
mov
pop
or
subl
insl
fwait
and
or
divl
sub
pop
rol
sbb
rorb
sub
aam
dec
rcrb
jmp
jbe
in
xchg
les
ret
cltd
pop
sti
jne
movsb
mov
loopne
lcall
popa
sbb
push
daa
or
mov
push
repnz
rclb
movsb
sbb
pop
lods
jecxz
sarl
xchg
aad
fldl
fistpl
push
sbb
adc
cwtl
mov
outsl
dec
jns
movsl
out
inc
and
adc
pop
repnz
mov
and
cmp
sub
loope
sbb
xchg
sub
push
mov
orl
gs
das
inc
add
pusha
pop
sbb
pop
int
and
scas
jne
jns
lahf
inc
mov
addb
out
xor
loop
divb
addr16
push
not
push
aad
call
loop
call
or
cmp
or
xchg
mov
adc
nop
cltd
dec
fisttpll
push
xchg
pop
or
test
in
cmpsb
icebp
mov
ret
pop
dec
dec
sub
rolb
fs
aam
jbe
cld
push
xor
inc
sub
mov
sbb
xor
sub
mov
sahf
cmp
push
aaa
xor
dec
mov
sarb
iret
test
out
push
adc
int3
aam
ja
mov
mov
cwtl
mov
dec
aaa
inc
stos
push
or
scas
xchg
and
daa
or
outsb
imul
jns
inc
push
sub
sbb
sub
push
sahf
nop
cltd
or
ss
push
push
jbe
int
nop
pop
movsl
xor
daa
add
in
sbb
cltd
insb
ja
ret
push
lods
jg
test
ja
inc
push
jne
sub
in
in
fiadds
orps
clc
pop
inc
das
enter
inc
test
out
jae
adc
xorl
pop
inc
ljmp
push
cli
sbb
mov
xchg
mov
clc
mov
shrl
sub
or
mov
mov
jnp
aad
fs
roll
dec
add
or
orl
xor
fbstp
sar
inc
rcl
rcl
mov
cmp
ret
xchg
add
mov
push
cmpsl
push
fmuls
movlps
push
pop
sub
rolb
jbe
imul
dec
xchg
sub
loope
cmp
mov
push
pusha
add
in
aad
cmc
xchg
xor
pop
andb
dec
rorb
mov
icebp
mov
mov
mov
mov
pusha
cmp
int
aam
jmp
shll
imul
aad
pop
sti
cmpl
dec
mov
lock
insb
dec
mov
mov
mov
movzbl
sahf
iret
roll
sub
in
mov
inc
jp
xor
arpl
xchg
fdivr
mov
mov
imul
inc
pop
movaps
leave
and
jnp
xor
lock
cld
cmp
aam
xchg
jmp
inc
jg
cmp
inc
fdivrs
mov
call
rorb
pushf
das
sbb
sar
cmp
pop
mov
adc
iret
mov
or
adc
ficompl
or
mov
nop
push
divb
sbb
ljmp
inc
or
xchg
je
jp
ss
xchg
ds
mov
jge
jmp
test
fcmovu
mov
lds
adc
int3
sub
jmp
mov
cmp
sbb
mov
and
and
sub
out
cmp
mov
fmulp
push
js
test
add
jle
jno
pop
xor
mov
xor
push
xchg
enter
mov
cld
in
jge
aad
scas
dec
sbb
fildl
sub
ja
lds
sub
push
int
fucomip
mov
xor
inc
cmp
and
gs
inc
cli
ret
xchg
addl
push
in
ret
out
lret
sarl
jle
push
aam
pop
mov
insb
mov
dec
bnd
add
lahf
enter
fsubrp
movsb
mov
rcl
push
push
sbb
or
inc
test
mov
test
and
int
sub
cmp
inc
xor
or
pop
les
mov
inc
dec
fwait
das
inc
std
mulb
sub
imul
jmp
sbb
xlat
mov
fstps
ds
imul
mulb
pop
push
pushf
das
out
sbb
scas
in
pop
sbb
add
sub
xor
repz
insl
clc
addr16
jmp
xchg
or
loop
inc
pusha
addr16
push
lods
test
rclb
in
xor
sbb
push
out
or
repz
or
dec
adc
out
scas
or
pop
sub
cmp
jne
mov
mov
cltd
das
and
push
jae
add
clc
sbb
push
mov
shrl
movsb
lcall
cmp
and
adc
mov
nop
pop
sahf
adc
sub
or
xlat
jle
call
jbe
sub
inc
std
push
add
adc
xchg
imul
clc
sbb
xchg
ret
shll
jl
mov
xchg
insb
jne
xor
mov
out
lea
loope
icebp
lahf
jae,pt
mov
mov
gs
jmp
inc
daa
xchg
inc
scas
cli
imul
enter
xor
mov
mov
mov
inc
jle
sti
pushf
rclb
xchg
dec
sti
xor
inc
fwait
ret
ds
arpl
popa
dec
fwait
insl
mov
push
enter
dec
dec
push
dec
stos
in
mov
mov
inc
enter
nop
in
mov
test
lds
sub
push
cmc
mov
inc
xchg
fildl
mov
or
mov
scas
das
inc
mov
addl
imul
adc
sbb
sbb
pop
imul
adc
dec
push
xchg
sbbb
jbe
mov
mov
pop
xchg
sbb
pop
add
aas
mov
test
dec
inc
mov
scas
push
xchg
inc
dec
inc
jp
pop
adc
cmp
fldcw
sbb
xchg
pop
ds
popf
mov
xor
push
jp
mov
mov
lods
mov
dec
xchg
pop
xchg
mov
aas
lcall
sub
pop
test
leave
cmp
btl
test
mov
stc
dec
push
imul
jb
movsl
inc
push
iret
sbb
push
push
cmp
int3
gs
adc
xor
dec
fbstp
mov
xchg
movsb
xchg
fisubrl
add
movsl
push
js
xchg
iret
and
mov
roll
stc
das
sub
push
push
popa
or
jnp
in
pop
inc
lcall
xchg
and
sbb
clc
dec
inc
test
and
cmp
xchg
push
rclb
xor
cmp
shll
push
xchg
mov
or
inc
aad
hlt
push
cs
inc
fimuls
or
xchg
sub
lds
test
jmp
loopne
add
shrb
mov
test
xorb
push
or
inc
aam
jo
in
adc
fstpl
scas
icebp
mov
jne
shlb
sti
mov
fisubl
add
pop
ficoms
loop
clc
shrl
leave
sbb
fcoml
or
out
nop
xchg
or
stos
sub
xor
sbb
adc
sti
add
popa
loopne
xorl
ret
jno
jnp
mov
cwtl
mov
test
cwtl
dec
push
jl
fisttps
jp
test
xchg
sbb
jo
hlt
hlt
pop
js
and
cmpsl
dec
cmp
add
dec
adc
repnz
mov
outsl
jmp
addl
xchg
add
cmpsl
push
cmp
shll
bound
mov
fnstcw
inc
loop
sbb
mov
sbb
mov
ror
xchg
xchg
or
les
outsl
xchg
jle
mov
ret
rolb
push
hlt
fwait
mov
jo
mov
rclb
pop
push
jnp
arpl
sub
fcmovb
inc
cmp
das
popa
andb
stos
lock
push
mov
inc
sub
out
push
mov
or
scas
ljmp
aaa
jo
loope
out
cltd
and
cmp
jle
dec
xchg
ja
clc
aaa
test
or
xchg
sub
add
inc
and
vmovups
ret
int
sbb
faddl
ss
pop
stos
push
outsb
fnop
mov
jns
sbb
es
or
mov
sahf
or
mov
int
pop
sbb
inc
sbb
scas
mov
xchg
mov
cmp
cmp
notl
add
aam
push
dec
push
or
ret
je
mov
pop
sahf
sbb
lahf
shll
mov
lgs
or
es
test
sbb
jno
ja
and
adc
scas
add
sub
idivl
daa
pop
pop
cmpsb
sarl
mov
int3
push
mov
sub
divb
icebp
ljmp
pop
cmpsl
jo
jge
iret
pop
dec
ja
jmp
mov
sbb
jns
xchg
xchg
inc
ds
dec
dec
inc
add
sub
mov
les
icebp
out
fmuls
ljmp
add
dec
fadd
jp
inc
adc
sahf
lea
aad
je
aad
arpl
loop
outsl
mov
and
cmpsl
loope
inc
pop
sbb
and
je
sahf
orb
and
imul
inc
fistl
aad
cltd
je
sub
pop
hlt
repnz
lret
pop
or
and
pop
test
push
gs
lcall
and
insb
push
sub
sub
lds
sub
nop
mov
faddp
push
jne
push
icebp
int
lds
push
xchg
add
pop
out
jo
js,pn
dec
cmp
jbe
loopne
push
and
mov
popf
pop
stc
push
ret
jne
mov
insb
push
mov
fiadds
cmp
mov
adc
mov
adc
loopne
imul
push
mov
enter
xchg
inc
test
imul
cmp
fistps
stc
xor
lcall
xchg
in
xor
or
or
aaa
dec
les
call
push
pop
shlb
shll
stc
lock
nop
jb
sbb
push
sub
mov
push
cmp
and
push
bound
and
mov
aad
packsswb
mov
adc
sahf
sar
pop
dec
popf
mov
sahf
sub
in
jmp
jb
or
jno
sub
fsubrl
and
shll
in
outsb
test
sub
add
jne
cmp
loopne
test
imul
jns
and
fwait
add
or
mov
enter
leave
xchg
xor
push
inc
push
mov
sbb
les
mov
sti
fdivrl
fcoms
xor
mov
gs
insb
movsl
xchg
dec
sbb
fdivrp
adc
icebp
lods
dec
xor
outsl
out
xchg
outsl
xchg
sbb
inc
std
loop
repnz
fcmovnu
test
dec
mov
mov
xchg
repnz
daa
test
mov
jns
mov
call
and
stc
in
mov
js
jns
or
sti
outsl
ret
stos
and
pop
push
push
stc
xor
lea
je
mov
sub
dec
pop
mov
pop
mov
test
xor
fadds
call
sub
sub
scas
sahf
push
shrb
xchg
push
push
dec
sub
jmp
cmpsl
les
lea
rcll
rcrb
mov
mov
enter
jb
sbb
mov
lcall
xor
lds
or
mov
mov
fiadds
sbb
sbb
or
int3
outsb
xchg
push
and
cld
cmp
rcll
jp
xlat
imul
mov
lea
cmp
cmp
stc
sub
cwtl
jecxz
iret
adc
pushf
inc
pop
sub
sbb
push
xor
call
pop
testb
ss
sub
xor
mov
shr
rcrl
popa
bound
pop
enter
xor
retw
test
faddp
mov
adc
loopne
and
add
push
into
pop
and
ljmp
shll
jnp
xchg
mov
push
shlb
decl
and
dec
and
js
and
fwait
adc
fimuls
push
clc
pop
pop
mov
in
mov
scas
dec
xchg
fcomi
sbb
fldl
pop
mov
icebp
das
xchg
addr16
pop
in
imul
lods
sahf
cmc
push
xlat
addr16
mov
xchg
data16
leave
mov
shl
and
pop
xchg
sbb
and
pop
push
push
addl
lret
lret
testl
sub
sub
dec
lods
mov
ds
pusha
jbe
inc
frstor
mov
pop
sbb
ljmp
adc
xlat
rcll
dec
inc
icebp
mov
arpl
sahf
and
pop
loop
inc
mov
ds
lds
in
test
mulb
out
jno
mov
scas
popf
push
sbb
xor
mov
inc
movsl
xor
sbb
out
mov
cmp
xor
push
jmp
or
xor
test
dec
repnz
push
inc
jp
pop
icebp
jle
pushf
inc
sub
push
dec
pop
int3
addr16
and
popa
mov
xor
cmp
enter
jnp
int3
gs
inc
cmp
add
roll
xchg
gs
mov
sbb
fildl
daa
ret
mov
sub
ficomps
cli
inc
inc
ja
ljmp
aad
loop
ficomps
mov
xor
nop
pop
imul
dec
leave
jne
out
ljmp
scas
mov
mov
std
inc
dec
mov
mov
push
adc
mov
jp
add
sub
scas
jle
aad
imulb
sbb
add
push
cmp
jae
data16
sub
jecxz
enter
pop
test
jl
mov
push
aam
mov
scas
stos
clc
lahf
iret
cs
hlt
out
popl
dec
fwait
test
int
lcall
xor
ret
daa
leave
pop
or
dec
mov
jbe
cmp
xchg
jp
fistl
cli
aaa
sub
enter
pop
adc
xor
inc
repz
outsl
sti
dec
inc
pop
lahf
add
pop
push
sar
arpl
ss
lods
lret
mov
inc
and
add
push
xchg
push
pop
imul
push
arpl
cmp
jne
mov
add
dec
and
inc
inc
mov
inc
xor
in
stc
mov
jmp
mov
sbbb
and
lock
mov
pushf
dec
push
push
jno
mov
daa
mov
in
cmp
mov
and
jmp
push
push
test
popf
aaa
jg
sub
daa
aad
fnsave
adc
cmc
adc
xor
mov
clc
fwait
mov
pop
lds
mov
lods
testb
and
add
mov
lahf
jne
icebp
add
adcb
aaa
sbb
jle
cmp
iret
push
adc
jbe
ficoml
pop
in
adc
sub
mov
inc
mov
xchg
pop
shl
xchg
cmp
dec
ret
movsl
xor
pop
stos
in
outsb
jno
lods
pop
gs
ret
cmp
fwait
iret
lods
mov
xchg
aas
push
scas
std
fistpl
jns
sbb
popa
mov
sti
push
xor
inc
jns
add
jge
mov
xchg
push
fstpt
rcll
daa
lret
aaa
dec
and
ds
push
adc
ret
sbb
dec
mov
stos
pop
stc
mov
jb
push
cmc
xor
sbb
roll
sbb
je
mov
rolb
dec
push
sub
jns
popf
add
sbb
into
rorl
inc
adcb
mov
dec
sub
mov
mov
adc
pop
lcall
scas
leave
inc
mov
jmp
and
repz
mov
test
adc
mov
pop
add
and
daa
pop
pop
hlt
fwait
scas
les
pop
aad
pop
lods
es
fwait
jb
int
shrb
add
add
mov
mov
imul
sbbb
mov
out
movsb
pop
lcall
cltd
insl
adc
in
push
int3
out
mov
add
lock
stos
sbbb
dec
les
mov
cwtl
xor
and
or
pop
lea
hlt
mov
mov
mov
sbb
ss
loopne
ljmp
dec
sbb
sbb
jns
add
sysret
or
cmc
scas
lret
xchg
mov
adc
push
sub
dec
lock
cltd
daa
xchg
adc
sbb
push
mov
call
lods
mov
insb
outsb
push
dec
adc
ss
sbb
add
pop
cs
pop
sub
test
push
cmp
dec
sar
add
pop
push
push
std
mulb
inc
rclb
or
adc
xchg
xor
pop
adc
cltd
test
pop
mov
sbb
dec
xor
push
and
ljmp
xlat
ds
lcall
pop
js
cs
fcomps
les
inc
fistpl
adc
enter
or
or
or
inc
adc
adc
popf
pop
into
fsubl
mov
enter
stc
lods
xchg
and
fldl
mov
xor
mov
jl
or
iret
cmpsb
jno
inc
mov
xchg
jo
xchg
scas
mov
lahf
add
leave
fcomps
adc
out
jp
repz
push
mov
mov
loope
leave
or
push
jle
insb
dec
outsl
sub
mov
mov
add
pop
jo
or
dec
pminsw
sub
pushf
cmp
dec
int3
aas
xor
hlt
add
or
emms
mov
add
and
jns
inc
lret
or
inc
add
cmpsl
aad
arpl
shll
in
sti
add
dec
pop
hlt
xor
enter
lret
xchg
pusha
lret
lcall
inc
aam
and
fwait
push
mov
xor
notl
sub
lods
push
mov
fwait
ret
clc
mov
xor
ja
imul
push
ret
std
cmp
icebp
inc
pop
jnp
inc
je
rorb
mov
mov
xchg
jecxz
out
les
int3
sar
stc
cmp
or
leave
test
pop
adc
movsl
push
ffreep
lret
dec
pminsw
mov
push
or
push
imul
arpl
sub
pop
sbb
insl
jbe
enter
mov
imul
pop
dec
lret
mov
dec
rcr
xchg
xchg
push
mov
xchg
shrl
nop
sbb
fsubs
jae
sub
xchg
cmpsl
adc
icebp
xlat
add
add
imul
es
insl
ljmp
pusha
cmp
adc
repz
in
jno
je
and
xor
in
push
fldl
rclb
and
loopne
pop
push
pop
pop
dec
loop
sub
loope
mov
jl
ds
add
cmp
popa
push
repz
in
pop
mov
pcmpgtb
cmpsl
lock
jg
or
es
adcl
pusha
jmp
negb
xchg
sbb
sub
jle
cmpsl
imul
hlt
je
jbe
xchg
dec
rclb
sahf
ds
clc
jl
iret
mov
out
push
mov
push
in
jle
cltd
and
add
dec
cmpsb
jge
adc
and
xchg
sub
and
pcmpgtb
lret
out
in
push
sub
push
xchg
sub
mov
jp
pop
push
or
pop
pop
jecxz
xchg
mov
jge
jle
adc
sbb
std
push
inc
popa
test
push
fstpl
addr16
sbb
lock
das
sub
ljmp
or
cli
cmp
mov
insl
lock
pusha
push
sub
cwtl
dec
sti
ljmp
mov
pop
dec
pop
cmp
xchg
popa
aas
enter
xchg
push
andb
das
or
movsl
jb
push
inc
popa
inc
cmpsb
imul
jge
cwtl
lret
sahf
push
mov
sbb
out
mov
jg
inc
or
mov
adc
jle
cmc
popf
sti
add
adc
jmp
imul
rcrl
jae
add
test
and
ljmp
pop
into
mov
jl
cltd
mov
divl
fnstenv
pushl
adcb
mov
int3
pop
je
sbb
xlat
fstpt
push
cmpsb
es
daa
mov
sub
movb
push
loopne
xor
inc
incb
mov
dec
jb
add
jno
cmp
or
loop
sbb
xor
add
mov
pop
in
xlat
outsb
jg
jmp
mov
xchg
iret
clc
jecxz
imul
xor
jmp
mov
inc
decb
xlat
ficoms
push
lret
dec
fcom
xor
adc
lods
aas
cli
add
aad
sub
mov
cmp
nop
popa
mov
cmpsl
add
insb
jg
inc
lods
jmp
imul
outsb
test
jo
inc
imul
push
xchg
test
lret
lock
insl
push
mov
out
shrl
jmp
mov
mov
insl
adc
dec
scas
push
cld
cwtl
add
mov
mov
scas
pop
push
mov
test
push
push
lods
push
test
cmpsb
in
inc
daa
ss
mov
mov
cwtd
cmpsb
pinsrw
xchg
mov
jp
jmp
aaa
out
mov
pushf
jno
shlb
xor
loope
or
sub
lretw
pop
ret
cltd
cld
lds
test
lret
hlt
add
outsb
in
jo
aaa
or
call
mov
aad
frstor
mov
jne
pop
loope
mov
push
scas
in
inc
ljmp
nop
xchg
lds
iret
dec
inc
and
mov
push
imul
movsl
or
nop
stc
js
call
xor
pop
adc
cwtl
popf
test
lods
push
dec
and
cmp
push
inc
fildll
ja
sub
sub
xchg
jnp
daa
mov
insl
mov
cmp
mov
ds
insl
loop
jl
and
xor
and
jmp
and
shll
scas
out
rcrl
jg
mov
mov
push
outsl
adc
in
sbb
xchg
push
cli
cltd
sti
adc
jnp,pn
jecxz
cmp
lods
lret
inc
mov
shrl
sti
out
fcoms
jnp
movsl
mov
mov
fistpl
xchg
in
in
or
sti
repz
aam
aad
sub
cs
xchg
test
ss
dec
cmp
movsl
lock
jo
cmpsl
mov
inc
scas
adc
xor
hlt
hlt
inc
clc
push
dec
out
mov
push
push
sbb
cmovnp
xchg
push
aas
out
std
mov
test
xchg
sub
cltd
sbb
inc
inc
push
xchg
jbe
or
mov
pop
push
cmp
stos
je
jg
mov
shr
lds
loope
mov
sti
push
dec
jns
or
inc
rcll
les
mov
xor
cmc
sbb
mov
pop
jne
out
cmpsl
ja
mov
loopne
xor
pop
pop
sbb
sti
imul
fildl
nop
jns
push
dec
and
mov
sti
push
mov
mov
adc
cmpsl
mov
mov
jns
mov
pop
add
dec
sub
or
xchg
mov
sbb
mov
je
lret
inc
adc
xchg
in
ficompl
and
ss
xchg
jge
add
mov
lods
cmpsb
loop
int
push
or
gs
jno
mov
mov
mov
jno
push
pop
outsb
mov
cmp
mov
loop
jecxz
pop
cmp
movsl
lock
lods
popf
xor
insl
sti
int3
xchg
lret
mov
test
fcomps
mov
imul
xlat
rorl
iret
cmp
ret
pop
call
out
mov
pop
arpl
rorb
lahf
mov
jne
adc
call
sbb
xor
pop
leave
and
je
sub
dec
sub
push
shlb
cmp
das
pop
or
test
or
adc
bound
in
cli
mov
push
or
test
sbb
sub
adc
adc
inc
add
dec
cmp
sub
imul
xchg
mov
xchg
outsl
cli
insl
dec
cltd
rcrl
or
and
stc
add
sub
xorb
lahf
leave
in
cmp
xor
pop
cmp
hlt
pop
add
push
outsl
cli
loop
push
mov
pop
aad
hlt
and
xor
or
xchg
push
sbb
cltd
push
insl
push
xchg
lods
scas
xor
cmp
testb
cld
loope
adc
aas
xor
cmp
arpl
push
add
popa
push
nop
lock
add
cmp
xchg
mov
ss
adc
or
xchg
jle
cmp
mov
adc
dec
sti
pop
cmp
adc
sub
add
test
sbb
and
pop
xchg
test
mov
hlt
cs
pop
sbb
cmp
jp
cmp
mov
inc
push
loop
mov
or
push
movsl
push
loope
aaa
addr16
sbb
outsb
mov
cmp
lock
adcb
xor
lcall
pop
cmp
sbb
xlat
cmp
add
cwtl
sub
sub
jmp
pusha
out
lods
js
nop
mov
enter
sub
rorb
cmpsl
stc
mov
and
and
push
dec
push
sbb
pinsrw
and
and
into
or
add
and
xor
ljmp
mov
push
lcall
dec
sbb
into
mov
lcall
aaa
imul
shrl
cmp
and
push
or
popa
jg
add
movsl
rcrl
ljmp
orb
pop
or
in
cmp
adcl
push
xchg
cmp
rcrl
mov
das
push
mov
sbb
mov
adc
dec
xchg
sbb
add
hlt
test
jbe
jl
insb
sbb
les
pop
pop
inc
ljmp
mov
rclb
or
fnsave
push
dec
push
and
pop
test
mov
in
inc
add
ret
mov
aad
aam
cltd
adc
addl
mov
in
cmp
cltd
pop
insl
test
push
sbb
inc
lretw
mov
push
push
lret
sbb
jl
jmp
cmp
test
daa
movsl
adc
dec
fstpl
jne
jle
dec
ja
mov
sarl
lock
dec
xor
inc
jl
shrb
push
test
and
filds
aad
insl
sbb
test
jo
jo
cmp
sti
cmp
and
jp,pt
sbb
decb
ret
std
pop
mov
xchg
hlt
int
sbbl
pop
mov
and
pop
test
int
mov
inc
test
cli
ss
push
or
xor
subl
xchg
pop
scas
gs
ss
movsb
outsl
imull
mov
push
cmp
add
dec
cmp
jge
or
pop
xlat
push
mov
pop
jmp
mov
sti
or
pusha
gs
xor
pop
add
sbb
rep
fcomps
out
lret
les
sbb
popf
xchg
mov
out
xchg
adc
xchg
enter
test
jo
fisttps
leave
js
jge
rcr
sbb
shll
or
mov
arpl
ret
push
loopne
stc
outsl
jae
clc
fildll
mov
and
scas
sbb
pop
in
pop
push
outsb
sahf
pop
hlt
jp
pop
inc
mov
std
sahf
insl
push
jne
or
cmp
xchg
push
cmovns
inc
cmp
shr
sbb
jecxz
xchg
test
cmp
add
and
add
push
push
es
xchg
lret
xor
lret
testb
jae
dec
pop
cmpsb
sti
stos
arpl
jmp
xor
ret
and
jle
mov
push
bound
lcall
psubb
jle
out
ret
cmpsl
and
xor
push
negl
mov
js
jae
sub
loope
rorl
xor
and
push
jmp
dec
pusha
sub
sub
js
fldt
divb
cld
push
addr16
cmc
int3
add
lret
xchg
mov
loopne
repnz
mov
popa
cld
sbb
cmpsl
mov
add
lret
push
push
and
jmp
fists
xlat
int
hlt
lds
paddw
xor
push
push
aad
mov
mov
shll
jbe
cmpsl
dec
sbb
xor
xchg
ret
shl
push
mov
fstp
xchg
xchg
pop
fnstcw
pushf
test
mov
pop
fidivs
aaa
hlt
scas
mov
gs
data16
fistpl
dec
shll
stos
jae
cs
into
lret
sbb
idivb
rcr
js
xchg
idivl
pop
cmp
leave
ja
mov
xchg
js
stc
xlat
push
cmp
dec
sbb
cs
rcrb
jg
fs
xchg
and
mov
mov
pushf
mov
dec
enter
pusha
jae
dec
call
test
mov
fbld
in
mov
and
scas
and
test
inc
fildl
ret
pushf
orl
jb
addr16
int3
fnstenv
shll
xchg
out
pop
and
inc
insb
popf
mov
xchg
jp
ret
sbbb
jg
in
mov
jbe
jge
and
bound
out
pop
push
loope
jg
mov
jno
jge
xor
in
xchg
xchg
fwait
out
push
mov
jo
popf
jg
je
lret
inc
insl
mov
dec
sub
call
fcmove
mov
cmp
push
xchg
les
popf
jmp
push
ds
sub
int3
movsb
push
push
ds
mov
gs
xchg
cmpb
push
pushf
mov
inc
imul
fwait
sub
mov
sbb
xchg
adc
int
int
mov
cwtl
mov
jecxz
int
loop
sbb
das
aaa
sub
test
lods
jbe
xlat
cmp
rol
xchg
and
adc
jno
scas
mov
xchg
rclb
mov
in
adc
lds
lcall
movsw
mov
pop
sbb
sarb
push
sbb
mov
fisubrl
and
aaa
jno
pop
sahf
sub
inc
jb
dec
jb
insl
arpl
xor
cwtl
pop
jbe
xchg
push
xor
xchg
iret
aam
outsb
jl
scas
sbb
mov
pop
test
fstpl
out
lods
pop
ret
pusha
bound
rorl
out
xor
std
fidivrl
arpl
imulb
icebp
sub
jle
test
lcall
out
push
shlb
popf
inc
mov
mov
inc
mov
pushf
sbb
ja
push
pop
xor
cmpsb
jb
pop
inc
adc
movsb
or
ret
inc
repz
test
mov
push
pop
mov
add
push
mov
inc
addr16
jp
mov
sub
stc
adc
ljmp
roll
dec
cmpsl
xor
cmc
ss
or
add
pushf
dec
adc
repnz
xorb
addr16
add
bound
into
jg
sub
scas
mov
rcl
pop
ret
lret
cltd
cmpsl
sbb
xor
mov
scas
jo
bound
jne
test
scas
stos
and
hlt
dec
in
sbb
inc
push
or
stos
pushf
fistpll
xchg
loop
jge
dec
aas
sbb
in
in
lea
lahf
lds
push
cmp
mov
jmp
clc
dec
nopl
shlb
scas
pop
and
out
jl
jns
mov
mov
xchg
ret
inc
sbb
sub
stc
je
add
add
andl
clc
mov
aam
mov
dec
repz
leave
or
arpl
popa
mov
sub
jg
pusha
cmpsb
mov
xchg
fs
mov
xchg
xchg
mov
scas
dec
xor
pushf
fcompl
add
loop
mov
mov
int
loopne
sbb
mov
out
adc
fdiv
popa
aad
add
pushf
sub
mov
xlat
jmp
out
dec
test
push
push
inc
mov
cmp
pop
cmp
pop
std
out
insb
cmp
push
adc
xchg
roll
inc
lgs
inc
adc
lahf
xchg
cld
xchg
push
jmp
popf
or
test
jns
mov
mov
mov
push
jbe
les
roll
ficompl
repz
push
lea
add
mov
adc
sub
mov
lods
xchg
aam
cmp
jbe
adc
pushf
je
or
jecxz
mov
pop
ror
pop
loopne
fstps
dec
pushf
xor
mov
ret
lret
dec
push
xor
adc
jecxz
sbb
mov
fidivrl
push
rclb
iret
mov
mov
in
push
or
mov
or
pop
pop
pop
lret
arpl
jle
das
js
xlat
sbb
stos
push
hlt
pop
mov
ror
loop
repnz
or
xor
adc
daa
imulb
popf
shll
pusha
fiadds
out
jne
lea
dec
dec
popa
adc
dec
inc
add
loop
mov
stos
aad
pusha
lods
push
mov
dec
xor
fsubrl
arpl
mov
cmc
and
xchg
repnz
push
ds
mov
insl
inc
pcmpeqw
or
mov
xchg
push
push
inc
mov
sub
xchg
cmp
imul
movsl
fs
add
lods
aad
cld
in
xchg
xor
call
movsl
sub
arpl
push
push
sbb
push
or
inc
push
jno
mov
adc
les
and
jle
loope
gs
ss
or
pushf
shlb
std
mov
rsm
adc
mov
out
xchg
mov
repnz
mov
mov
sbb
or
cmpsl
div
lods
add
daa
dec
jp
imul
cmp
or
outsl
cwtl
test
cltd
enter
in
adc
pushf
or
jmp
popa
push
xor
outsb
pop
stc
lods
push
int
adc
mov
cmpsb
call
dec
jae
and
xor
shrl
xchg
cmp
cmpsl
mov
sbb
imul
js
shl
sar
mov
jno
dec
mov
fidivrs
or
ds
jo
cmp
popf
scas
lods
sbbb
xor
sub
jo
rorl
inc
inc
das
int3
int3
mov
fidivrs
push
add
stc
jg
xor
cmp
cmp
test
mov
div
cld
cli
fucomi
dec
into
out
adc
adc
sti
repz
jp
insl
mov
push
bound
sti
std
das
inc
xor
scas
xor
call
mov
inc
rcrb
sub
dec
loope
mov
loope
mov
nop
mov
in
xlat
repnz
adc
dec
imul
xchg
loop
sbb
sub
mov
push
inc
pusha
cwtl
jo
adc
jl
or
ja
cld
sub
fstl
cld
fs
mov
clc
xchg
dec
data16
jge
clc
sub
push
and
lods
int
push
cs
dec
cwtl
jbe
adc
inc
xchg
push
fldenv
sarb
xor
dec
ret
testl
loop
and
adc
xchg
or
imul
or
iret
lds
cmp
inc
pop
or
mov
stc
aam
repz
jle
rorb
movswl
inc
jns
push
sub
mov
sti
mov
adc
jp
in
jmp
jbe
rolb
fucom
test
or
mov
fldcw
add
repz
fbstp
and
out
fcmovne
add
cltd
fiaddl
out
in
repnz
or
sbb
jb
jae
mov
sub
jecxz
out
loop
cmc
sub
adc
pushf
loope
and
xchg
push
xchg
in
lcall
dec
push
jp
add
sahf
or
call
lock
mov
fmul
dec
dec
lahf
scas
mov
movsb
xor
lock
add
cld
repz
cmp
in
daa
mov
adc
adc
lds
mov
sbbl
jle
and
ret
mov
pop
pop
jmp
inc
sub
sbb
pushf
push
push
jo
pop
or
cmp
imul
push
mov
push
dec
push
loop
test
js
push
sbb
outsb
dec
xor
xchg
test
jne
inc
fldt
cmp
and
mov
xchg
in
mov
cwtl
xor
push
dec
sarl
xchg
xchg
imul
shl
outsb
neg
sbb
pop
jbe
aam
jg
in
dec
mov
jecxz
es
push
idivb
inc
outsb
movsb
std
in
mov
outsl
or
and
ljmp
decb
test
mov
js
mov
sub
sahf
jbe
sub
ror
push
push
ss
mov
or
in
fwait
lcall
jmp
fists
call
leave
xchg
or
sbb
cmp
jl
xor
inc
xlat
loopne
mov
dec
xorb
jno
jnp
sahf
cwtl
fmuls
js
movsl
cmpsb
dec
pop
adc
es
cmc
nop
repz
mov
mov
cmpsb
jg
das
test
std
xor
std
bound
jle
push
pop
decl
ss
pop
fs
movsl
add
and
push
jp
dec
pop
int
cmp
jno,pn
jbe
inc
jp
cld
push
pop
fimuls
cmpl
aad
mov
repnz
add
and
sbb
sub
push
sbb
out
inc
jp
mov
cmp
insb
add
push
push
xor
test
bound
sub
and
dec
lods
mov
lea
les
adc
fistpll
cmpsb
out
add
loopne
push
push
mov
lock
push
mov
cmp
js
int3
pop
jno
outsb
cs
or
cmp
cmpsl
mov
add
scas
out
inc
outsl
mov
test
into
addr16
dec
jno
sti
xor
fdivl
cmpl
and
notl
sbbb
cmp
and
mov
lods
xor
jb
push
pushf
mov
out
or
test
mov
ds
lret
dec
mov
inc
sub
sbb
subl
rcll
adcl
out
ss
roll
ret
push
std
mov
cmpsl
cmp
stos
inc
lds
dec
cld
cmpsl
fstps
or
arpl
jge
mov
sti
cmp
jmp
inc
add
jo
jl
dec
add
mov
cmpsl
and
jo
sub
test
mov
lret
cmp
dec
lahf
in
sub
jnp
push
push
and
sub
add
pop
add
ljmp
fildl
inc
nop
jle
addb
daa
and
in
arpl
xlat
add
sub
and
mov
fsts
xchg
in
jle
ret
rclb
jl
sub
xchg
in
jb
sbb
pop
mov
pop
and
or
sbb
xchg
push
mov
mov
fnstcw
out
pusha
dec
and
popf
jl
repnz
sub
or
pop
arpl
and
icebp
jbe
loope
xchg
sub
movsb
inc
std
jp
stos
sbb
cmp
mov
fcomp
inc
repz
clc
in
inc
xchg
and
dec
cmpsb
mov
cmp
in
cmp
stc
lods
out
and
bts
mov
xchg
push
push
mov
shrb
mov
cmp
push
push
mov
call
adc
test
fists
jbe
jge
mov
fistps
xor
mov
mov
pop
or
adc
add
mov
pop
mov
lretw
insb
sbb
mov
xor
std
repnz
aaa
xor
jb
scas
xor
decl
lcall
imul
loope
das
jp
cld
mov
in
add
add
out
xchg
dec
cmp
add
mov
out
jns
leave
xchg
mov
out
jecxz
movsl
roll
or
and
pusha
insl
inc
addr16
decb
pop
jns
mov
push
std
lods
cmp
cpuid
cs
dec
mov
dec
in
je
rcll
cs
aas
clc
mov
arpl
push
jecxz
cmp
dec
cs
jns
and
loope
insb
sub
inc
xchg
out
pop
pop
add
enter
lods
mov
adc
das
cmp
aaa
jge
aaa
xchg
movsb
dec
data16
fimuls
int3
mov
sub
jae
sbb
mov
fisttps
bound
pushf
ret
lods
push
adc
mov
jb
adc
cld
sahf
inc
orl
xchg
std
je
pop
mov
xchg
bound
loopne
lds
int3
dec
sub
mov
jb
dec
int3
and
sub
or
fmuls
out
mov
xchg
std
jne
sbb
pusha
mov
xorb
jge
test
int
scas
jno
aam
jge
mov
outsl
bound
pop
aas
ljmp
jp
push
pop
lods
scas
add
push
popf
mov
push
out
ficoms
pop
das
loop
out
aas
imul
mov
mov
gs
pop
and
jg
cmp
mov
lods
andb
pop
rolb
pop
mov
rorb
mov
mov
adc
jnp
mov
push
fsubl
and
out
aaa
adc
xor
pop
leave
popf
pop
daa
lret
out
mov
jp
push
sti
or
adc
jno
stos
lods
jae
aam
enter
jle
inc
aam
loope
insl
mov
aaa
stos
pop
test
pop
mov
and
mov
movsl
in
xor
ret
fldt
ds
leave
shrl
jnp
jbe
stos
and
mov
xor
cmp
negl
data16
stc
cmp
sub
push
ds
or
pop
xorb
loop
jo
mov
shrd
inc
adc
sub
es
addr16
pop
daa
xchg
rolb
stc
loopne
imul
stos
loop
pop
or
dec
lret
mov
cwtl
pop
sub
lcall
push
pop
mov
xchg
fnstsw
add
mov
test
push
std
inc
adc
fsubs
push
ja
shll
adc
cmc
addr16
aaa
jo
cmp
js
popa
mov
inc
data16
fs
inc
push
push
js
inc
in
fbstp
cwtl
test
add
sub
mov
push
sbb
movsb
sub
rorl
jo
lock
xchg
fimull
inc
in
jge
cwtl
adc
in
cs
push
adc
fisubl
ret
clc
scas
jle
mov
das
dec
and
push
pop
in
mov
pushf
push
fs
cs
or
aas
rcr
aas
movsl
xor
nop
aam
mov
sbb
or
mov
mov
mov
in
and
call
mov
mov
inc
sbb
mov
cltd
add
xchg
repz
pop
adc
xchg
add
inc
mov
pop
mull
and
popa
jb
movsb
shll
popf
or
or
xor
mov
jno
add
cli
sbb
inc
aas
in
out
sbb
and
es
nop
stos
dec
int3
mov
sub
pushf
pop
jle
sarb
inc
push
test
fiaddl
mov
mov
pop
and
add
cmpsb
into
jo
loopne,pt
test
cmpsb
call
push
aam
cmpsb
cmovnp
mov
mov
sub
or
push
roll
popa
or
test
fisubl
idivl
cmpsb
cmp
dec
xor
xchg
push
rcl
jae
push
mov
sbb
fucomp
dec
cmpb
add
gs
mov
ss
shlb
stos
cltd
xchg
enter
sti
xchg
xor
mov
pop
pop
andps
xor
or
and
loopne
movsb
inc
pop
inc
xorb
orb
dec
or
dec
addl
icebp
sub
jo
std
jle
and
rcl
fisubrs
mov
sbb
mov
pop
lret
shrb
into
xchg
cmpsl
mov
nop
push
shlb
cmp
xor
call
lret
lds
add
pop
jmp
out
sar
call
fdivrp
bnd
mov
insl
fwait
xchg
repnz
fldenv
mov
fsts
sbb
push
mov
xchg
sub
push
jp
jl
adc
daa
daa
mov
jecxz
xor
stos
or
sahf
cli
mov
inc
cwtl
pop
xchg
add
xor
pop
shlb
clts
pop
and
dec
imul
jp
inc
xor
lods
sbb
out
add
add
jb
sub
xorb
leave
sbb
pop
stos
mov
out
cmp
pop
aam
mov
out
stos
mov
cmp
icebp
add
jnp
orl
pushf
out
pop
dec
sub
lock
xor
or
xor
insl
les
lock
out
push
sbb
jbe
loop
mov
fldcw
mov
out
push
in
adcl
callw
popa
mov
out
adc
add
mov
mov
xchg
xor
mov
inc
ja
fcomps
pop
jmp
adc
lret
out
fadd
and
mov
test
scas
ret
sti
jns
xor
es
add
push
int
or
std
mov
mov
stos
aaa
mov
xor
and
sbb
cmp
out
mov
les
mov
outsb
push
insb
ror
ds
mov
sarl
or
xor
leave
fwait
or
cwtl
out
cmp
fidivs
sub
rcll
es
sbb
out
pop
mov
sbb
pop
iret
or
testl
sbb
popl
insb
cmp
idivl
cwtl
out
stc
cmp
loope
in
cld
dec
cwtl
or
lahf
and
jne
xchg
shll
testl
aad
stos
mov
mov
sbb
cmp
cmpsb
in
js
inc
rcr
cmp
mov
cltd
dec
jnp
imul
setbe
lds
aam
pusha
mov
inc
movsb
dec
pop
add
xchg
cmp
xor
sbb
std
inc
callw
inc
xlat
test
inc
loopne
mov
arpl
mov
scas
add
and
push
ja
repz
fs
orb
rcrb
mov
push
jecxz
fdivrs
addb
and
fmull
leave
mov
add
sub
push
jno
or
and
jl
mov
adc
mov
aas
cmpsl
mov
and
or
loopne
jnp
inc
mov
dec
mov
sub
push
mov
pop
ja
rep
cld
jp
fistpl
mov
insb
js
fnstsw
ds
je
push
cli
decl
pop
dec
faddp
push
movsb
mov
scas
fimull
repnz
lahf
lret
mov
mov
jnp
outsl
inc
pop
addr16
mov
sarl
icebp
mov
dec
mov
xor
scas
xchg
xchg
cmp
out
xor
and
or
inc
jg
aaa
adc
pop
incb
cltd
cmp
mov
iret
int3
or
mov
jecxz
mov
imul
fldcw
sub
imul
mov
idivl
fwait
pop
xchg
mov
jl
push
push
cmpsb
xchg
test
inc
xchg
mov
mov
push
mov
cld
ja
vpsubusb
out
popl
loop
stos
fimull
xchg
pop
adc
inc
jno
jno
scas
ficoml
pop
lcall
xlat
sarl
cli
cmp
in
jg
repz
push
repz
fldl
enter
hlt
pop
cmp
cmc
rorb
js
arpl
xchg
ljmp
das
int
pop
cmp
pop
cmp
mov
stos
fimull
cmpsl
pop
push
pop
mov
nop
sbb
fdiv
sti
sbb
push
add
and
test
cmc
fwait
push
mov
cli
loop
ljmp
lods
popf
pushf
aaa
push
adc
jmp
sbb
and
xchg
mov
sub
std
sahf
in
push
push
jbe
mov
sub
mov
pop
adc
mov
jecxz
ljmp
leave
push
and
loope
daa
push
add
mov
inc
idiv
lret
gs
and
mov
push
xchg
inc
push
xor
mov
nop
cmp
rorb
aam
pop
out
clc
inc
mov
bound
jnp
sbb
dec
pop
pushf
cmp
iret
test
es
fdivrs
int3
aaa
aad
das
mov
lahf
dec
cmpb
add
clc
call
sbb
jle
dec
and
daa
mov
mov
mov
inc
cmp
xchg
sar
mov
add
aad
inc
out
mov
adc
clc
xorl
mov
mov
daa
pop
push
lods
cltd
xchg
das
jmp
adc
test
jl
mov
mov
testl
insb
loopne
fisttpl
mov
je
sub
or
xchg
addl
mov
inc
dec
jecxz
push
mov
mov
cwtl
add
mov
enter
imul
cmc
mov
jne
rcrl
outsb
das
jbe
mov
jp
int
push
js
xchg
cs
and
cld
mov
inc
xor
sub
arpl
scas
or
test
jecxz
dec
jne
and
mov
sti
movsb
push
push
lea
test
mov
sub
cmp
mov
push
aaa
mov
shll
add
push
sti
inc
push
hlt
pop
ljmp
fs
aad
push
and
addr16
movsl
xor
arpl
sbb
sub
xchg
lods
repz
icebp
dec
push
xchg
adc
fistpl
aaa
pop
aam
int3
push
and
add
pusha
repz
fisubl
inc
bound
inc
lcall
jge
xor
test
xor
les
repnz
std
add
xor
ret
sub
add
adc
std
sbb
rcrb
ljmp
rcll
and
adc
mov
js
lahf
xlat
pop
or
outsb
mov
mov
mov
ljmp
js
mov
mov
push
je
imul
bound
xchg
adc
outsb
xor
leave
or
push
mov
mov
shll
mov
imul
dec
mov
inc
add
push
cmpsl
imul
loopne
fsubrs
imul
push
sbb
sub
xor
dec
pop
scas
insb
mov
mov
mov
repnz
dec
loope
cmp
mov
xor
aad
cmp
and
addr16
adc
cwtl
test
dec
and
lea
push
jl
mov
aam
gs
movsb
push
or
pop
inc
add
add
cwtl
push
movsb
movsb
push
sbb
jecxz
rolb
lret
test
andl
mov
scas
cld
int
cmp
adcb
sbbb
inc
cld
mov
out
add
aam
jle
jge
popa
mov
lock
cmp
add
out
lret
xchg
lret
outsb
cmpsb
call
pop
sub
add
push
add
lods
mov
pop
push
and
stc
pop
xor
ret
sahf
repnz
dec
and
inc
ret
pop
inc
sub
scas
mov
cmpsl
stc
sbb
push
into
mov
shrb
xorl
idivb
dec
cld
lods
xchg
xor
or
ficoms
adc
add
movsb
shr
mov
out
push
dec
aaa
cltd
push
pop
mov
adc
pushf
mov
xor
orl
pop
popa
fsubs
mov
mov
xchg
cltd
mov
aas
dec
sbb
cmpsl
xlat
push
cmp
xchg
rcrb
in
cmpsb
test
daa
mov
cld
fs
mov
jp
jb
jecxz
cmp
addr16
adc
cmp
push
cld
sti
mov
aas
aas
jae
lock
hlt
dec
adc
dec
popa
jmp
call
sbb
push
mov
dec
test
mov
and
xchg
aam
xchg
stos
imul
pop
mov
leave
dec
lret
pop
mov
popf
dec
flds
pop
ret
jp
pop
cmp
push
sarl
adc
pop
popa
lcall
sbb
sar
test
cltd
pop
aad
mov
lret
dec
adc
or
and
rorb
rcll
out
mov
add
mov
fsubrl
call
push
aam
fwait
pop
leave
add
mov
xor
adc
and
mov
inc
lret
iret
mov
pop
outsl
or
outsl
imul
adc
adc
pop
pop
jb
push
pop
in
out
sbb
daa
sbb
mov
lods
lcall
mov
xor
sbb
lret
lods
xchg
fmuls
push
clc
jb
dec
int
and
xor
mov
repnz
or
fucomp
cmp
dec
ret
mov
pop
ljmp
mov
jl
arpl
mov
int3
in
push
sbb
hlt
and
sbb
movl
jo
inc
loope
je
aad
idiv
push
and
lret
gs
add
sti
mov
jae
xchg
and
mov
fwait
mov
mov
lods
mov
jbe
push
bound
hlt
mov
les
mov
adc
inc
mov
xor
mov
push
andl
std
cmp
scas
xchg
aad
dec
add
aaa
out
into
dec
mov
loope
loop
lahf
fdivrl
das
cmpsb
ss
pop
mov
sbb
push
mulps
enter
lea
adc
mov
test
push
mov
lock
les
rorb
and
jge
jmp
cmp
cwtl
nop
dec
dec
inc
pop
xchg
push
mov
dec
mov
mov
or
jge
sub
aas
popa
popa
loop
cmpsl
ja
pop
push
dec
shl
orb
add
mov
data16
shl
dec
and
dec
jecxz
popa
xor
push
out
mov
pop
dec
and
and
lret
jg
fistps
rolb
and
xchg
mov
fcomps
inc
mov
bound
sti
jns
push
aas
or
addb
push
subl
xor
mov
cmp
aam
mov
fcompl
push
out
mov
pop
inc
mov
ja
fsubrs
popa
or
lock
in
bound
push
cld
aaa
into
cld
scas
xchg
js
xchg
stos
sbb
jge
jb
ds
jnp
movsb
sbb
loopne
inc
cmp
cmp
or
addps
ret
shlb
push
xor
dec
and
xor
mov
cmc
pop
cmp
stc
xor
int3
pop
jmp
bound
stc
mov
ja
inc
jp
ja
in
inc
sub
es
sar
jl
pushf
mov
and
xchg
xor
fidivl
xchg
imul
lret
test
push
dec
xor
fiaddl
cmp
orb
loopne
xor
das
push
cmc
js
mov
mov
dec
out
push
ja
test
jl
sub
sbb
sbb
cmc
xchg
mov
ja
cmp
lret
addr16
xor
test
lods
bound
dec
pop
sbb
scas
pop
aam
cli
daa
add
pop
jnp
in
rolb
xor
xchg
jecxz
inc
dec
add
test
in
push
cmpsb
enter
popf
cmp
mov
or
ljmp
bound
fs
lds
test
sub
adc
mov
dec
inc
arpl
fs
mov
lock
mov
or
mov
ret
adc
into
mov
bound
jo
fildl
pop
or
ret
cld
rorb
pusha
and
stc
cmp
add
mov
mov
push
scas
imul
mov
sub
lods
cmp
popf
sub
scas
cmp
adc
sbb
pushf
cmc
and
aaa
cmpsb
les
ds
sbb
outsb
xor
test
add
fistpl
in
insb
stc
sbb
out
push
call
loopne
add
cmp
inc
xchg
or
jmp
into
test
xorl
jo
mov
sub
scas
fdivs
in
xchg
jbe
mov
push
clc
jno
stos
push
enter
mov
push
or
cmp
mov
pop
dec
mov
orb
xor
jbe
loopne
inc
adc
and
push
stc
xchg
jl
dec
movsb
jp
add
pop
scas
and
mov
lret
mov
cmp
filds
icebp
jbe
imulb
xor
or
in
loop
icebp
popl
sahf
cmp
out
subb
rorl
testl
push
sub
incl
outsl
ret
xchg
inc
jl
fdivrl
lret
mov
pop
push
or
xchg
mov
xlat
and
mov
jnp
popf
and
insl
pop
jns
rorb
int3
in
pop
jge
mov
cwtl
lods
test
mov
scas
xchg
push
aam
cmc
in
adcb
inc
mov
aad
jmp
adc
and
push
push
add
adc
imul
cwtl
and
stc
mov
mov
pop
cmp
mov
cs
aad
orl
dec
pop
sub
mov
add
add
dec
fsubl
or
sbb
lea
mov
cs
lods
mov
lret
cmp
iret
in
pop
jne
outsb
div
adc
inc
xor
mov
mov
inc
pop
mov
test
inc
out
cld
sahf
movsl
push
mov
mov
pop
int
imul
cmp
ret
pop
xlat
push
loop
movsb
jno
inc
ficompl
cmp
int3
int3
gs
in
test
popa
insl
mov
ret
iret
aaa
dec
pop
sbb
pop
lds
push
mov
mov
mov
ja
or
pop
aaa
clc
or
gs
add
sar
loope
nop
cli
adc
shr
shrb
stos
pop
lcall
sbb
push
push
ds
cmp
cmpsb
int
and
pop
jb
sub
scas
int
stos
int
test
in
mov
or
adcb
mov
sbb
push
fidivrl
mov
add
push
roll
xchg
pushf
xchg
xor
sub
ljmp
stos
scas
dec
mov
data16
and
aaa
leave
push
mov
stos
imul
mov
into
das
push
shl
dec
inc
mov
iret
lcall
and
pop
in
fsubs
cmp
jecxz
cli
sbb
inc
nop
sbb
cltd
inc
pop
or
loop
mov
sub
push
stos
mov
jns
out
xchg
sub
add
mov
out
pop
fildl
nop
push
pop
inc
aaa
sar
jnp
negl
ja
scas
sub
test
les
mov
sarb
test
or
sbb
sarb
fcoms
or
addr16
enter
call
ret
cmp
imul
mov
and
lea
adc
ljmp
xor
lahf
xchg
pop
pop
and
sbb
sub
adc
loopne
xor
lret
pushw
bound
subl
xor
decl
xchg
popf
clc
mov
xorl
repz
xchg
div
jp
and
inc
rcrb
add
cld
orb
cmc
jno
into
movsb
adc
int
mov
mov
xor
jmp
test
and
sti
mov
cld
mov
sbb
jle
loop
pop
cmp
sti
push
rolb
lds
pop
mov
add
into
xchg
incb
cwtl
xchg
inc
test
leave
push
or
sub
repnz
dec
push
addr16
bound
dec
mov
push
ljmp
aam
add
outsl
cmp
icebp
sub
fstpl
dec
add
dec
push
jle
mov
insl
idivb
cmp
sbb
repz
inc
flds
and
loope
cmc
or
jmp
test
mov
pop
add
sub
cwtl
dec
dec
pop
fnstsw
fisttps
test
mov
int3
mull
xor
movsb
mov
add
lret
sbbl
mov
push
popf
push
outsl
xor
stos
std
notl
jmp
inc
js
bound
or
jae
ror
lret
mov
mov
pusha
mov
cli
add
xchg
xchg
fwait
mov
outsl
ret
mov
pop
test
leave
scas
stc
pop
inc
test
sub
lds
or
mov
inc
fsubr
dec
imul
rcrb
cmp
mov
dec
jp
adc
fmull
mov
add
cmpsw
xchg
aas
push
popa
xor
or
mov
loop
insb
xor
lea
push
test
aaa
dec
cwtl
add
imul
ja
roll
andl
dec
inc
push
xchg
xchg
sub
mov
and
lods
mov
push
pop
movsb
sub
sbb
and
bound
in
mov
mov
ror
xorl
sti
nop
lret
shl
push
xor
dec
lods
push
or
aas
dec
repnz
insl
clc
mov
add
cmpsl
arpl
xchg
cmp
sbb
mov
ret
movsl
cmp
push
shll
test
jge
adc
sarl
jp
xor
push
and
enter
inc
in
xor
inc
cld
dec
aad
dec
pop
cmp
insb
jb
je
xchg
mov
fistps
push
scas
insl
xor
out
icebp
dec
inc
pop
stc
pop
sbb
es
pop
mov
add
aas
fs
addb
stc
jne
dec
dec
adc
nop
dec
jnp
inc
adc
repnz
and
and
lahf
rolb
iret
pop
fldcw
aas
ret
movsb
sbbb
sahf
adc
orl
jge
das
cmp
jge
jg
cmp
mov
adc
and
sti
and
js
sbb
adc
scas
lcall
in
scas
sbb
adc
sub
pop
adc
ja
icebp
inc
and
jle
into
mov
fwait
adc
jg
jae
ja
in
push
sub
adc
ficompl
jl
or
movsb
jnp
and
fcomi
mov
cld
dec
xlat
imul
movsb
jns
fadd
shll
into
in
add
std
dec
rcl
adc
addr16
test
inc
or
movl
clc
pop
jp
mov
or
add
mov
pop
in
pushf
mov
lea
insl
mov
mov
pop
je
xor
jecxz
loop
ror
movsl
cmp
sbb
push
jp
xchg
pop
cmp
setns
dec
shll
pushf
jno
por
and
insl
aad
mov
iret
loopne
dec
loop
call
pop
notl
subl
adc
add
xchg
loop
jmp
mov
repz
lahf
adc
sub
xor
sbb
push
adc
movsl
comiss
mov
hlt
cmp
jmp
inc
or
xor
insb
fstps
das
repnz
cli
rorb
add
xchg
cli
imul
pop
mov
movsl
jle
xor
aas
sub
cwtl
pop
sahf
push
xchg
dec
pop
inc
in
loopne
push
cltd
cmp
push
test
xlat
mov
sti
inc
pop
leave
and
ja
sahf
fwait
negb
aad
xchg
mov
rorb
fmul
jno
push
leave
jecxz
jnp
scas
xchg
fistl
pop
cmp
mov
and
add
loope
test
fstpl
je
aaa
decl
loop
leave
int
xor
testl
jle
inc
mov
test
dec
rclb
cmp
sub
test
incl
subb
and
sub
cmp
and
pop
inc
lret
loope
jnp
or
mov
ja
pop
inc
aad
roll
arpl
inc
jae
xor
xchg
cld
xchg
push
mov
xor
or
push
negl
test
mov
xchg
xchg
jae
inc
push
js
xchg
inc
fiaddl
lea
push
sarl
int3
jne
mov
repz
mov
xchg
popa
inc
sahf
xchg
cmp
fnstcw
negl
or
xlat
out
in
xchg
les
fidivrs
cmc
aad
sbb
movsb
in
dec
movsl
frndint
movsb
adc
cmp
push
dec
push
and
pop
into
mov
iret
testb
add
pop
popa
std
mull
in
push
mov
push
rorb
jne
mov
or
fistps
idivb
jns
mov
mulb
cmp
jnp
sbb
movsl
movsl
adc
ret
repnz
subb
rorb
jns
sahf
mov
int3
je
jnp
das
cmp
mov
rorl
add
adc
mull
fs
js
aad
or
jle
jl
push
and
popa
and
xchg
cmp
rcl
adc
sbb
aas
test
xor
stos
daa
test
cmc
or
int
fsts
test
imul
adc
out
call
int3
into
lcall
ret
cmpl
add
rcrb
lea
mov
hlt
js
nop
and
and
lods
dec
loope
mov
mov
pop
test
inc
ret
fistps
ret
cmp
xor
in
movhps
lcall
outsl
mov
sbb
cwtl
lods
addl
ss
and
loope
mov
out
pushf
fidivrl
rcrl
arpl
ja
mov
loopne
ljmp
sar
loopne
cmp
push
scas
sbb
insb
xorl
lcall
subb
sbb
ss
sbb
fcoml
sti
sub
aaa
jle
mov
add
loop
mov
pop
in
into
arpl
aad
testb
mov
jno
mov
aad
push
jmp
mov
fwait
fwait
and
outsb
mov
xchg
aam
mov
pushf
mov
sub
lret
dec
xchg
xor
adc
rolb
jo
lcall
addl
xor
adc
fcom
mov
sbb
lea
adc
iret
xor
loope
sub
pop
dec
sub
jae
xchg
cmp
mov
