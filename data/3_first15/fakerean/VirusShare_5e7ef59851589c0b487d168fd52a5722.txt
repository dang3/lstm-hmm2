test
mov
add
sarb
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
lea
push
push
call
sub
mov
sub
mov
mov
js
mov
sub
sub
js
mov
mov
mov
push
push
mov
call
push
mov
call
mov
call
mov
mov
call
mov
cmp
je
cmp
je
test
jne
cmpb
je
cmp
je
mov
mov
mov
pop
mov
mov
pop
mov
pop
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
mov
mov
lea
call
mov
mov
xor
push
lea
lea
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
cmp
jne
xor
inc
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
jmp
push
mov
sub
push
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
lea
pushl
call
test
je
mov
mov
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
mov
cmp
je
mov
mov
push
push
movl
mov
mov
mov
push
call
lea
xor
call
push
call
mov
cmp
pop
je
pushl
xor
call
pop
push
push
pushl
call
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
call
cmp
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
test
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
js
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
test
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
xor
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
cmp
test
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
movl
movl
lea
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
mov
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
sub
js
push
lea
mov
test
je
cmp
jae
mov
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
mov
mov
mov
call
test
je
push
call
add
test
jne
mov
mov
mov
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
test
je
mov
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pop
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
push
call
mov
add
add
bound
insb
add
popf
ljmp
add
add
xlat
mov
mov
mov
mov
add
add
test
scas
add
std
add
xchg
add
add
scas
leave
ljmp
push
mov
add
push
push
push
push
push
push
lea
push
push
push
call
aam
shlb
add
add
les
shl
fiadds
cld
pop
add
mov
fstps
mov
add
cmpl
mov
mov
xchg
je
mov
add
add
add
xchg
pusha
outsl
mov
add
lahf
mov
push
popf
sub
pop
popl
push
push
push
call
xchg
pop
jae
xchg
loop
filds
scas
add
fistpl
mov
sti
arpl
add
add
jl
mov
pop
mov
addl
add
add
pop
mov
je
icebp
add
cld
test
mov
mov
add
add
test
imul
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
subb
shrl
add
clc
out
stos
push
js
pushf
add
push
add
add
clc
add
fs
add
cmpsb
mov
add
xchg
add
popl
add
lods
test
add
mov
scas
add
cld
roll
xchg
xchg
add
add
xchg
jb
sub
pop
push
push
push
push
push
push
lea
push
push
call
add
loop
add
ja
xlat
push
pop
add
fildl
mov
enter
mov
add
mov
clc
jo
jbe
pop
loopne
lock
rolb
jb
mov
add
xchg
add
js
jl
cmpsb
test
add
lock
test
add
lcall
push
push
lea
push
call
add
push
loop
lds
jmp
jle
add
add
add
lret
add
add
test
testl
std
add
add
lcall
jnp
add
push
push
call
filds
add
add
scas
add
mov
mov
xchg
add
repnz
les
shll
xchg
jnp
add
pop
add
add
fisttps
add
popl
xchg
popa
outsl
jne
std
mov
movsl
testb
mov
mov
add
ljmp
pop
push
push
push
push
lea
push
push
push
push
push
push
call
fsub
loop
jne
xchg
add
in
push
mov
jmp
test
mov
ja
mov
add
add
add
insb
push
add
xchg
add
add
jb
add
add
ljmp
add
mov
add
add
add
inc
pop
add
jmp
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
fs
pushf
lahf
add
subl
add
popa
xchg
add
shll
jge
imul
add
lret
movsb
mov
bound
add
pop
add
icebp
test
enter
pop
add
jnp
add
sub
pop
ret
mov
push
push
push
call
add
mov
add
jbe
test
mov
mov
add
rolb
pushf
mov
add
in
hlt
pop
mov
add
push
push
push
call
add
jnp
mov
aam
ljmp
cli
sti
xchg
add
orl
xchg
xchg
mov
jbe
test
fdivr
xchg
jl
xchg
add
add
add
add
add
sub
pop
add
push
lea
push
push
push
call
sti
add
mov
xchg
push
add
add
in
lahf
cmc
xchg
add
pop
gs
add
clc
loope
movsb
add
add
add
rolb
add
add
add
lcall
ret
xchg
add
push
lea
push
push
lea
push
push
push
push
call
fists
add
mov
add
mov
lahf
add
leave
xlat
pushf
jecxz
push
xchg
in
movb
add
ljmp
lret
jp
add
add
fstps
add
jmp
jl
add
sub
pop
mov
push
push
lea
push
push
push
call
add
push
cmc
cmp
mov
jns
mov
in
loopne
fldl
add
clc
mov
jbe
hlt
hlt
add
pusha
xchg
jge
roll
mov
in
cmpsb
sahf
add
add
je
addr16
mov
incb
lcall
sbb
push
push
push
lea
push
push
push
call
mov
loope
sarb
add
add
add
add
scas
xchg
push
imul
jne
test
out
add
add
mov
mov
add
mov
popf
mov
jns
add
jne
push
cmpsb
cli
aam
add
je
movb
cld
add
sub
pop
add
push
push
shl
push
push
pop
add
inc
shl
not
sub
shr
dec
add
pop
lea
not
pop
push
lea
push
push
push
push
push
call
jmp
add
mov
add
xchg
add
add
iret
add
add
movsb
nop
mov
jne
pop
push
pop
add
clc
pop
jnp
xchg
jne
call
push
lea
push
push
push
push
push
push
call
add
ljmp
add
outsl
call
add
into
fiadds
lcall
add
add
sti
mov
pop
jmp
aam
add
cli
add
add
add
cmpsl
movsb
push
add
add
rcrb
into
add
add
add
mov
add
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
std
jbe
push
in
add
jnp
pop
push
add
add
testl
mov
add
pop
test
aam
out
jge
pop
add
add
lcall
inc
call
lea
push
push
push
push
call
push
add
mov
mov
mov
mov
cld
aam
mov
roll
test
jmp
fcmovbe
lcall
add
add
mov
loopne
xchg
enter
cltd
add
pop
sti
shlb
hlt
call
add
add
pop
shlb
add
push
push
call
add
add
mov
in
add
iret
stc
mov
add
add
movb
add
xchg
add
mov
mov
jle
fsubrl
clc
lcall
jne
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
popl
add
addb
out
ja
stc
jno
mov
add
push
pop
repnz
cmpsl
jge
mov
mov
loop
shrb
into
add
pop
mov
mov
push
pop
fadds
pop
jnp
add
push
push
out
xchg
les
aad
add
fildl
add
movsb
add
sub
pop
pushl
push
lea
push
call
add
jge
push
pop
in
pop
add
add
rcrb
lods
mov
xchg
add
mov
add
add
add
mov
add
add
fsubrl
xchg
add
add
mov
mov
mov
sub
pop
call
pushl
push
push
push
push
call
add
loopne
in
cmpsl
mov
add
icebp
add
movsb
jb
js
add
add
fdivs
aad
jns
add
add
testl
add
leave
stos
shll
shl
add
in
lock
pushl
push
lea
push
push
lea
push
push
call
shl
jmp
addb
ret
testl
outsl
push
add
hlt
int
jnp
add
xchg
stc
add
add
pop
add
add
in
pop
call
push
push
xor
shl
push
push
pop
add
shl
sub
sub
ror
add
add
pop
xor
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
pop
stos
orl
add
mov
add
add
leave
pop
int3
xchg
add
ja
add
cltd
out
add
ja
out
scas
add
add
add
jne
fiaddl
xchg
add
mov
rolb
jl
mov
add
add
jle
sub
pop
pushl
call
push
lea
push
call
add
push
pop
jae
cli
mov
add
add
jae
add
repnz
add
add
add
fisubrl
roll
add
clc
pop
push
push
push
sub
push
push
pop
add
ror
sub
sub
add
pop
lea
pop
push
push
push
call
add
add
jl
add
addr16
mov
add
add
push
add
mov
loope
add
je
push
cli
add
in
hlt
lcall
push
push
push
call
add
lea
add
cmp
fsub
add
mov
data16
push
add
popl
mov
add
add
add
fbstp
add
popa
mov
test
add
ja
sub
pop
push
call
push
lea
push
push
push
push
push
push
call
jmp
pusha
add
jge
mov
pushf
shll
out
add
add
gs
push
add
pop
scas
enter
mov
xchg
stos
xchg
lcall
clc
push
push
lea
push
push
push
call
mov
add
test
add
add
add
call
add
add
mov
xlat
add
call
sti
add
push
add
mov
add
mov
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
call
int
addr16
add
add
lahf
add
jne
push
add
jmp
roll
repnz
add
xchg
xchg
add
insb
add
shlb
test
pop
add
mov
lea
imul
in
call
push
push
lea
push
push
lea
push
push
push
call
add
add
clc
push
add
cli
add
je
add
lret
std
int3
xchg
imul
add
pop
lea
add
add
jecxz
mov
add
js
add
mov
push
add
sahf
movsb
pushf
cld
aad
add
lcall
pop
hlt
add
push
push
push
push
push
call
add
fldenv
push
cmpsl
aad
addl
add
add
add
pop
add
xchg
mov
mov
test
add
jb
xchg
push
ror
mov
ret
add
add
push
push
push
push
push
push
lea
push
push
call
jnp
add
incb
imul
add
pop
xchg
add
add
mov
add
fdivrp
xchg
add
add
rolb
add
add
jae
add
fstpl
std
add
add
imul
loopne
add
mov
push
push
push
push
call
sti
fwait
xchg
jmp
add
mov
mov
rclb
add
loopne
lcall
testb
add
add
add
fadds
fs
add
in
hlt
pop
xor
push
push
lea
push
push
push
lea
push
push
push
push
push
call
pushf
add
fwait
arpl
add
add
pusha
xchg
lret
mov
fildl
add
movl
add
xchg
push
ljmp
add
add
add
pop
push
pop
addl
add
jnp
add
add
lret
cmc
add
addb
add
push
lea
push
push
push
push
lea
push
call
cwtl
add
mov
in
jae
add
movsl
incb
outsl
mov
add
add
add
cld
add
add
push
add
jbe
out
movsb
add
loop
stos
add
add
xchg
outsl
faddl
add
sahf
lock
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
add
rcll
roll
nop
stos
movsl
popf
add
add
roll
lods
xchg
movsl
push
stos
jb
push
nop
ret
rcr
mov
add
rcrl
add
inc
or
adc
push
push
lea
push
call
jbe
xchg
add
test
jbe
mov
mov
lahf
add
add
xchg
jb
stos
jns
add
fadds
lods
add
addr16
add
jnp
loope
scas
add
add
fldenv
pop
mov
add
out
push
push
sub
pop
add
push
lea
push
push
call
add
add
pop
add
add
scas
jnp
aad
lcall
add
lods
add
incb
roll
add
add
push
mov
cmc
ret
jae
mov
pop
out
stos
add
add
add
cmc
leave
js
in
hlt
lcall
mov
xor
push
push
lea
push
push
push
call
std
mov
add
cwtl
bound
add
xchg
gs
xchg
aad
mov
rolb
stos
add
in
jnp
push
stc
stos
add
add
fwait
add
add
test
mulb
add
add
add
add
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
addr16
add
jnp
add
add
add
mov
mov
mov
mov
add
add
add
mov
out
lods
out
add
add
add
in
in
mov
jno
mov
popf
imul
test
lock
xchg
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
jge
pushf
mov
add
int3
fsubp
add
add
in
add
test
lods
ljmp
add
add
hlt
mov
aam
lds
cmpsl
add
fcompl
add
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
adcb
xchg
into
sahf
add
pop
lock
add
add
mov
lods
jmp
add
add
add
mov
add
add
mov
pop
add
in
pusha
add
into
in
add
add
mov
add
mov
aam
add
add
not
cmpsl
movsb
rcrl
les
add
push
push
push
push
push
push
push
push
call
out
add
js
jge
mov
flds
add
add
jbe
add
xchg
rolb
jne
sub
pop
sub
pop
push
push
call
int3
jp
add
add
popa
lea
lods
mov
add
outsl
add
popa
enter
pop
out
pop
addr16
out
cli
add
loop
add
rolb
push
add
add
add
add
pusha
mov
jmp
add
stos
sahf
fistpl
cmpsl
mov
sub
pop
rep
push
push
lea
push
call
add
lea
jmp
add
gs
scas
popa
pop
add
into
cld
xchg
add
js
mov
add
add
add
add
hlt
add
jnp
jl
fidivl
add
add
in
clc
mov
addr16
scas
sub
lcall
push
push
push
push
push
push
push
push
call
mov
mov
add
cwtl
movsb
mov
in
add
xchg
add
iret
pop
mov
gs
nop
testl
divb
xchg
add
jo
jae
test
add
aam
jnp
pusha
add
add
rolb
stos
add
sub
pop
mov
add
push
lea
push
push
push
push
lea
push
push
call
out
data16
sti
xchg
push
popf
hlt
loopne
div
cwtd
xchg
cmpsl
add
add
test
rclb
lcall
add
add
push
add
mov
ja
cli
sarl
lcall
ret
add
add
push
push
push
call
add
add
addb
add
in
add
add
clc
lret
add
add
xchg
add
add
add
pop
lds
in
hlt
pop
add
push
rol
sub
add
inc
pop
mov
push
push
push
push
push
push
push
lea
push
call
sahf
cltd
add
leave
pusha
mov
add
add
fldl
push
add
cwtl
mov
data16
add
add
add
jnp
in
in
xor
push
lea
push
push
push
push
push
push
call
add
imul
jb
cli
leave
js
add
add
add
call
add
ljmp
xchg
push
sar
add
fisttpl
add
insb
into
add
add
aam
jo
imul
add
add
jl
add
lcall
les
lea
push
push
push
call
sub
pushf
add
nop
add
cli
fsts
jo
fiaddl
add
xchg
add
add
pop
pop
push
mov
cmpsb
add
add
pop
nop
xchg
xlat
mov
add
xchg
push
lcall
jmp
js
add
add
or
into
loope
push
gs
out
out
add
jbe
sub
pop
mov
xor
push
push
push
push
push
push
push
call
mov
xchg
call
add
aam
mov
add
add
add
add
add
add
pop
lds
add
add
add
int
pop
mov
lds
std
adcl
rolb
in
roll
lret
in
add
add
lcall
dec
sub
jno
adc
cmp
mov
mov
push
push
push
lea
push
push
push
call
cmc
xchg
mov
mov
add
lods
loopne
movsb
add
add
add
add
pop
add
lds
mov
stos
xchg
add
add
add
add
imul
add
add
test
nop
add
lcall
or
push
push
push
push
push
push
push
call
add
add
xchg
add
jb
pop
scas
out
lret
lods
add
mov
add
out
add
mov
test
add
sub
pop
add
push
lea
push
call
pusha
mov
popa
mov
mov
add
into
scas
sar
pop
add
add
mov
js
hlt
js
rcrb
testb
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
add
add
lods
add
addb
add
sahf
js
lcall
add
pop
mov
mov
mov
jecxz
hlt
popf
lret
into
cmpsb
imul
add
xchg
add
jge
add
mov
ret
add
in
fdivr
lcall
rcll
add
leave
lea
fsubrs
ret
mov
push
add
push
push
pop
add
rol
add
shr
sub
pop
add
not
pop
push
push
push
push
push
lea
push
push
call
pop
add
add
add
mov
mov
add
add
roll
add
cli
jp
notb
fsts
ficoms
push
xchg
movl
add
rclb
add
mov
add
mov
jle
mov
aam
add
rolb
mov
mov
pop
pop
sub
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
mov
movsb
add
xchg
add
iret
fiadds
add
mov
out
pop
loopne
mov
xlat
lds
cmpsb
jnp
xchg
scas
add
fcomip
fadd
add
in
add
pop
outsl
pop
scas
imul
stos
in
add
add
push
add
lahf
mov
loopne
lcall
int
add
push
push
push
push
or
not
add
sub
not
sub
add
pop
rol
inc
sub
pop
push
xor
pop
push
push
not
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
scas
mov
jecxz
add
shl
iret
fwait
mov
mov
fldcw
ja
icebp
jnp
add
flds
add
push
push
clc
push
mov
out
std
mov
mov
add
outsl
xlat
jnp
in
add
add
add
add
aam
movsl
xchg
add
int3
sub
pop
call
push
inc
pop
mov
push
lea
push
push
call
je
add
add
loopne
add
rolb
add
add
add
add
add
jb
mov
mov
add
add
iret
test
sbb
jb
add
mov
addb
add
add
jb
add
in
hlt
pop
push
push
push
push
call
add
repnz
les
mov
add
adc
xchg
push
add
insb
add
nop
jl
pushf
call
popf
testb
test
jmp
push
jle
jns
mov
add
mov
add
outsl
xorb
jno
add
test
add
add
in
clc
lcall
pop
hlt
push
lea
push
push
call
cmc
jge
add
add
add
mov
add
add
pop
add
xchg
add
lret
add
pop
add
jns
mov
mov
push
roll
pop
jle
jl
xchg
add
jle
mov
gs
add
fdivr
add
mov
in
hlt
pop
add
push
xor
not
not
pop
add
push
push
push
push
call
test
add
xlat
add
add
add
sahf
add
jbe
lock
add
bound
aam
in
add
mov
pop
add
mov
xor
push
push
push
lea
push
lea
push
push
push
push
call
add
add
loope
add
mov
add
add
add
sahf
add
mov
add
in
shrb
int
sub
pop
add
push
dec
dec
inc
add
pop
push
mov
xor
push
rol
add
pop
add
push
shr
pop
pop
push
add
add
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
lea
push
push
call
arpl
cwtl
push
pop
addb
add
add
ja
jmp
lcall
test
mov
ljmp
movsb
in
add
xchg
lret
mov
je
pop
clc
pop
pop
add
movb
mov
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
cwtl
add
in
add
add
imul
imul
arpl
xchg
outsl
jmp
mov
jae
pop
add
xchg
add
add
mov
mov
add
add
xchg
ljmp
cmpsl
aad
add
lds
bound
mov
mov
pop
add
add
in
fdivr
lcall
or
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
cmpsb
push
add
enter
jns
add
mov
push
fildl
add
mov
add
jbe
add
lock
add
add
add
add
add
push
scas
add
int3
pop
fcmovb
add
add
stos
add
cltd
add
xabort
in
fdivr
lcall
les
add
push
inc
xor
shr
pop
or
je
mov
xor
push
sub
pop
mov
xor
push
push
lea
push
push
lea
push
call
xchg
lock
mov
orb
mov
into
call
add
loop
add
push
mov
add
mov
shl
shr
add
lret
jge
mull
loope
add
add
loopne
mov
add
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
jp
rol
pop
add
cmpsl
add
add
fisttpll
add
add
out
aam
add
sahf
push
stos
xchg
jge
fisubs
pop
add
je
roll
cltd
lods
std
add
add
lcall
jge
cmp
sub
pop
add
push
add
not
inc
pop
push
push
push
push
lea
push
call
je
add
push
cltd
add
cmpb
add
cmp
add
aad
fcomps
pop
xchg
lods
fdiv
add
mov
lcall
inc
or
jno
adc
jnp
pusha
inc
push
call
in
add
add
js
jne
jl
mov
ret
stos
icebp
add
out
push
mov
xchg
add
mov
lcall
add
push
lea
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
xchg
mov
add
stc
add
int
add
mov
fsts
loopne
add
add
fsubrs
ja
in
fdivr
lcall
les
add
push
push
push
push
push
push
lea
push
push
call
add
stos
pop
add
mov
add
cli
add
movsl
add
fidivrl
call
mov
add
add
movsb
test
lds
add
add
push
addl
push
jns
movsl
add
lock
sub
ror
pop
pop
rep
push
push
lea
push
push
push
lea
push
push
call
add
add
push
add
add
addb
imul
movsl
xchg
stos
rolb
add
arpl
imul
rolb
outsl
int3
mov
fimull
add
in
add
add
jnp
cld
add
rolb
add
data16
add
add
pop
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
mov
add
clc
add
mov
mov
add
add
mov
aam
add
out
out
mov
movsb
add
add
add
sub
loop
add
add
out
movb
addl
jne
add
mov
pushf
xchg
jb
lea
jecxz
popf
sub
pop
xor
push
lea
push
push
push
call
add
xchg
mov
aad
add
add
jp
add
add
add
jge
push
scas
loope
out
add
flds
push
add
add
jmp
pop
lret
jmp
push
pop
sub
pop
add
push
add
not
inc
pop
or
je
push
shl
xor
pop
mov
add
push
lea
add
add
pop
add
push
push
call
out
add
add
add
add
iret
xchg
add
in
cld
add
pop
add
add
add
xchg
add
roll
mov
mov
in
clc
pop
rep
push
dec
not
pop
pop
push
push
sub
push
xor
add
add
dec
sub
add
pop
add
dec
lea
pop
push
dec
ror
add
pop
pop
push
shl
sub
add
pop
mov
push
rol
ror
pop
mov
mov
push
push
call
jle
lods
cmc
cmpsl
adcl
mov
add
add
mov
add
les
mov
add
add
mov
add
add
push
into
lret
add
mov
lea
into
mov
push
test
add
repnz
jb
lret
add
pop
add
ljmp
insb
sub
pop
jmp
push
push
push
push
call
add
add
xchg
stos
outsl
fcoml
imul
add
jge
add
arpl
notb
nop
jo
js
les
into
jbe
xchg
add
std
add
add
test
add
xchg
sub
pop
push
push
not
pop
mov
push
shl
shr
ror
pop
add
push
sub
rol
lea
shl
pop
push
push
add
inc
add
pop
push
push
push
shr
dec
pop
push
push
push
push
push
push
call
add
jle
aad
add
out
add
add
addr16
add
add
add
add
add
pop
mov
int3
add
jne
roll
nop
out
lods
imul
add
jnp
sub
pop
mov
push
dec
add
ror
pop
pop
push
xor
sub
ror
pop
pop
push
push
push
call
in
jnp
pop
jge
sti
add
fdivl
add
sbbl
out
shlb
push
test
add
fs
add
mov
jmp
mov
xchg
popa
xchg
add
cmpsl
jle
jb
add
out
mov
add
fstpl
add
push
add
jp
mov
pop
push
pop
lds
pop
add
lcall
push
lea
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
mov
jle
add
sub
nop
int3
add
add
add
add
jmp
add
outsl
add
mov
add
mov
add
lcall
leave
push
add
rol
sub
pop
ret
push
push
push
call
xchg
xchg
add
add
pusha
jecxz
jl
jecxz
shl
cli
add
push
in
cmpsl
add
imul
add
add
pushf
cmpsb
add
jo
out
iret
mov
in
clc
pop
mov
push
push
push
push
call
mov
add
mov
mov
cmpsl
add
clc
add
mov
add
bound
movl
pop
add
add
test
cli
push
mov
pop
add
push
push
push
call
add
add
add
add
jp
add
in
in
jne
je
imul
aam
fidivl
xchg
test
out
mov
cwtl
mov
add
pop
jmp
aam
add
iretw
fisubrs
icebp
icebp
push
add
in
hlt
lcall
push
push
call
pushf
aad
mov
mov
add
add
je
int
out
add
out
ret
je
mov
add
faddl
lods
mov
add
fbstp
mov
out
add
jmp
out
addl
testb
lcall
push
push
push
push
call
mov
jb
cmpsl
add
push
fcompl
movb
data16
add
add
pusha
add
imul
add
cwtl
bound
pop
test
pop
cwtl
add
jae
add
mov
mov
push
jno
in
fildl
sarl
je
in
lock
push
push
push
sub
not
shl
pop
movl
push
push
push
lea
push
lea
push
push
call
add
mov
lods
jae
je
scas
pop
add
ja
arpl
add
mov
bound
jle
gs
mov
add
in
add
mov
add
push
mov
in
call
addl
push
push
lea
push
push
push
lea
push
call
mov
pop
add
movsb
add
out
add
add
add
add
add
push
test
push
add
pop
push
call
test
je
push
inc
add
pop
mov
pop
push
shr
pop
pop
pop
push
sub
add
inc
pop
pop
leave
push
dec
rol
sub
pop
ret
push
add
shl
shr
pop
push
push
add
xor
pop
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
lahf
stos
js
add
push
mov
push
hlt
add
add
add
push
add
fcompl
add
clc
js
add
hlt
add
movl
add
mov
int3
cmpsl
testl
mov
push
add
fildl
add
cmc
sub
pop
add
push
push
push
push
lea
push
call
add
pop
add
mov
add
lahf
movsb
add
add
xchg
add
xchg
add
scas
add
xchg
add
add
into
in
mov
push
lds
mov
add
incb
movsb
icebp
mov
add
in
mov
pushf
add
xchg
xchg
scas
add
movsl
add
pop
push
push
push
lea
push
push
call
add
add
add
stos
jge
add
xchg
loopne
rcl
add
flds
add
xchg
test
in
add
clc
scas
add
clc
fmul
sub
pop
push
push
pop
push
push
push
lea
push
push
push
push
push
call
lcall
add
add
mov
xchg
add
push
pusha
add
lret
mov
add
push
add
in
lcall
inc
cld
add
add
push
push
push
push
push
push
call
add
sbbl
add
out
in
test
js
add
xchg
add
add
in
push
mov
out
xchg
cmpsl
add
jne
push
ret
add
hlt
stos
mov
mov
add
testb
lahf
out
jb
ret
filds
inc
or
push
push
push
lea
push
push
push
call
mov
mov
mov
movsb
add
lds
cmpsl
mov
add
sti
add
jno
xchg
gs
jmp
js
jcxz
add
add
add
enter
xchg
iret
add
add
lcall
add
pop
call
mov
push
ror
pop
pushl
push
push
pop
push
push
not
pop
call
push
shl
pop
cmpl
jne
pop
push
pop
pop
push
sub
pop
pop
pop
push
push
push
push
lea
push
push
call
add
add
fwait
addl
add
jb
lea
adc
mov
add
stc
mov
xlat
add
pusha
mov
add
pop
add
add
hlt
add
mov
jp
in
filds
enter
add
fsubr
lods
rolb
jo
sub
pop
leave
ret
push
dec
dec
pop
push
push
lea
push
lea
push
push
push
call
add
push
add
cltd
subb
jmp
mov
add
add
subl
into
mov
add
out
fwait
in
cmp
add
add
add
in
xchg
shll
movsl
stos
add
addb
pop
mov
add
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
sti
jb
jno
lds
enter
mov
in
mov
xor
add
add
mov
add
jp
frstor
addb
mov
xchg
add
loop
sub
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
aam
add
addl
add
in
add
mov
add
ljmp
add
xchg
add
mov
pop
push
push
ror
rol
pop
push
movl
push
add
pop
push
call
push
push
push
call
add
std
add
cltd
movsl
lcall
mov
push
push
int3
push
mov
add
mov
xchg
mov
add
add
jnp
sub
pop
push
push
rol
pop
call
subl
push
xor
lea
pop
cmpl
jne
pop
push
push
push
push
call
mov
int3
add
faddl
jbe
add
add
mov
add
lret
add
jmp
add
cmpsb
add
add
add
add
clc
jnp
filds
shl
scas
hlt
add
lcall
push
sub
xor
pop
pop
push
dec
pop
pop
push
push
lea
push
push
call
jl
xchg
jno
mov
add
add
add
mov
andb
aam
jb
add
xlat
cli
add
add
add
add
add
xlat
lods
jae
leave
xchg
sub
pop
leave
ret
push
shl
pop
push
push
push
push
push
push
call
add
jmp
add
add
add
rolb
add
iret
add
jecxz
nop
test
mov
add
add
testl
add
add
add
push
lea
in
add
add
mov
add
add
addl
pop
mov
add
push
push
push
lea
push
push
push
call
add
xchg
mov
add
add
pop
lock
in
fildl
mov
faddl
add
xchg
sarb
xchg
mov
andb
addl
int3
lret
add
sub
pop
push
push
push
shl
shr
pop
push
push
push
push
push
lea
push
call
out
add
add
cmpsb
mov
sti
fcmovu
pop
add
add
xchg
add
add
add
add
cld
add
lock
add
add
add
jle
lods
push
add
add
cmpsl
add
pusha
addl
scas
addb
add
clc
add
in
lock
lcall
inc
or
inc
pop
lea
sub
push
add
add
pop
mov
shr
push
ror
pop
add
mov
push
inc
add
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
call
push
add
lahf
xchg
ret
add
addl
add
ja
mov
add
add
lcall
cmpsb
mov
fldl
cli
add
loope
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
sar
add
add
add
jo
jnp
lds
xchg
add
fistl
lea
xorb
pushf
add
js
add
add
lret
push
lea
mov
sarb
pop
mov
in
fcompl
shlb
sub
dec
not
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
sahf
jp
add
frstor
add
into
mov
iret
stos
scas
fld
adcl
mov
mov
add
add
fistps
push
add
xchg
fildl
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
mov
out
add
je
add
add
xchg
xchg
add
add
pop
add
mov
lret
mov
repnz
fcomps
pop
outsl
jne
push
shr
pop
cmp
jne
mov
push
pop
movl
push
lea
push
push
push
lea
push
push
call
add
add
add
add
cmc
add
add
add
add
add
add
ficoms
int
add
add
repnz
jmp
add
add
rcl
add
mov
popl
decb
out
andl
mov
jmp
mov
push
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
xchg
jecxz
mov
add
add
add
jne
pop
leave
add
jne
xchg
add
add
add
mov
loopne
lret
hlt
in
add
jmp
gs
add
scas
jae
xchg
mov
add
add
mov
popa
xchg
jae
jp
sub
pop
sub
jne
push
push
lea
push
push
push
push
push
call
outsl
xor
jp
addl
jns
fwait
scas
fsubrs
std
add
fnsave
loop
mov
lret
add
add
add
cld
add
addb
std
ja
mov
add
lock
mov
cmpsl
add
add
sbbb
lcall
inc
adc
sbb
push
lea
push
call
insb
test
filds
out
jb
out
add
mov
icebp
add
fcompl
add
roll
test
xchg
lea
cld
mov
imul
add
cmpsl
sti
js
clc
test
into
add
add
mov
lret
roll
add
jge
add
add
add
push
push
push
push
lea
push
push
lea
push
push
push
call
pushf
mov
mov
scas
add
pushf
in
mov
cmc
jmp
cld
lock
addb
add
add
add
add
add
pushw
xlat
add
js
fistpl
in
fcompl
xor
add
xchg
test
push
push
push
push
call
fsts
in
mov
mov
add
add
add
add
scas
std
fsub
add
shl
aad
sub
pop
mov
mov
push
push
lea
push
lea
push
push
push
push
push
call
xchg
out
data16
lods
gs
in
push
add
add
xchg
jle
enter
xchg
rclb
add
add
addr16
mov
add
mov
xchg
imull
add
lcall
cli
add
test
add
xlat
push
push
push
lea
push
push
push
push
push
call
add
nop
jb
add
stos
cltd
xchg
mov
fildl
add
push
divb
add
add
xchg
mov
mov
ja
mov
jo
add
add
add
add
add
decb
add
push
sub
inc
pop
mov
cmpw
jne
push
push
call
mov
add
mov
xchg
jno
add
xchg
lahf
add
add
iret
add
xchg
pop
add
sarl
add
add
add
rolb
add
nop
test
fucomp
add
in
clc
pop
mov
push
sub
xor
dec
sub
pop
movl
push
shl
dec
not
pop
jmp
push
add
inc
pop
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
call
movsb
add
in
add
add
scas
rol
out
bound
fnsave
add
pushf
add
insb
addr16
add
add
add
add
jne
add
push
test
iret
add
add
data16
jmp
test
add
add
add
add
add
in
loopne
lcall
push
ror
pop
mov
mov
push
push
push
push
push
push
push
push
push
call
jp
add
add
add
push
jle
rcr
add
add
test
fsubrp
add
add
aad
mov
leave
mov
in
fcompl
push
or
ljmp
push
or
not
add
add
dec
sub
add
rol
xor
pop
shr
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
pop
mov
xorl
mov
aam
push
pop
faddl
in
add
jge
add
ljmp
push
testl
mov
add
xchg
add
jmp
mov
cmpsb
bound
add
add
add
jecxz
in
fdivr
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
mov
push
cmpsl
fs
jmp
jnp
push
add
ljmp
add
add
jne
scas
xchg
mov
add
add
add
fiaddl
lcall
sbb
add
push
push
push
call
mov
xchg
add
fdivr
add
add
cmpsl
mov
testb
pop
mov
and
pusha
xchg
aad
addl
mov
push
rcr
shlb
add
add
push
fcom
mov
add
rolb
add
cli
loope
ja
sub
pop
cmpl
je
push
push
dec
dec
ror
push
sub
add
ror
sub
add
ror
sub
shr
inc
pop
xor
pop
push
not
pop
push
call
push
add
sub
add
ror
pop
cmpl
je
push
push
inc
shl
push
xor
add
rol
sub
sub
pop
rol
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
flds
add
leave
fnstenv
lods
in
mov
xchg
pop
add
mov
clc
add
icebp
cmpsb
add
xchg
add
ja
mov
fcomps
push
xor
dec
pop
call
push
lea
push
lea
push
lea
push
call
add
add
add
add
add
jecxz
and
sarl
add
popa
insb
lret
xchg
stc
add
fmulp
add
add
add
mov
add
push
in
out
xlat
push
js
mov
lcall
sub
pop
cmpl
je
push
push
lea
sub
shr
push
or
inc
add
sub
rol
sub
shl
pop
dec
rol
add
xor
pop
push
push
push
call
sti
jp
add
add
add
imul
in
add
pop
add
jnp
add
mov
xchg
out
mov
mov
repnz
add
stc
addb
insb
mov
push
mov
pop
xlat
pushf
fildll
in
hlt
lcall
call
push
push
lea
push
call
sahf
shlb
add
add
add
xchg
add
testl
rorl
je
rcll
loop
xchg
jno
add
lret
in
hlt
pop
cmpl
je
push
push
add
not
dec
push
sub
add
shl
shr
xor
not
sub
add
xor
shl
pop
ror
ror
add
pop
push
push
push
push
lea
push
push
push
call
xchg
mov
lahf
pop
std
add
jnp
add
add
xchg
add
loopne
jnp
int
rolb
add
clc
add
in
int
add
adc
xchg
ret
rcrb
add
add
add
add
hlt
push
pop
loop
cltd
push
lret
in
lcall
call
push
rol
pop
cmpl
je
push
push
add
shr
shr
push
push
pop
add
shl
shl
sub
ror
add
inc
pop
add
sub
lea
pop
push
lea
pop
push
push
pop
call
cmpl
je
push
push
sub
push
and
add
dec
sub
shr
rol
sub
rol
rol
pop
rol
sub
pop
push
lea
push
push
call
add
roll
shr
add
ljmp
mov
add
sar
jle
ret
std
add
xchg
mov
add
mov
call
sub
pop
push
push
dec
shr
pop
call
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
popa
add
jp
leave
jecxz
add
gs
xchg
mov
rolb
jle
xchg
add
loope
aam
add
add
xchg
push
ret
add
add
jae
fwait
sti
add
xchg
pusha
cmpsl
loopne
repnz
lcall
cmp
or
int3
je
push
push
sub
push
or
not
add
not
sub
not
pop
shr
rol
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
fcmovnb
or
outsl
jnp
add
add
test
mov
faddl
mov
add
push
sbbl
add
mov
add
out
add
roll
add
movl
addr16
add
ficompl
pushf
add
pop
add
xchg
xchg
add
mov
int3
sub
pop
push
push
add
pop
call
push
dec
dec
add
pop
cmpl
je
push
push
xor
lea
push
or
not
add
inc
ror
sub
add
sub
xor
sub
add
pop
xor
pop
push
shl
pop
push
call
push
lea
push
push
push
push
lea
push
push
call
push
mov
add
cmpsb
xchg
sar
mov
scas
add
rcr
testb
jno
add
imul
add
out
out
mov
add
push
add
add
imul
int3
add
mov
jle
nop
add
in
stos
push
out
loope
cltd
flds
movsb
mov
in
cmpl
je
push
push
add
sub
push
xor
add
sub
ror
rol
dec
sub
inc
pop
add
shl
pop
push
pop
push
push
add
pop
call
push
add
rol
rol
pop
cmpl
je
push
push
sub
add
dec
dec
push
and
add
lea
sub
add
lea
add
pop
pop
push
lea
inc
pop
push
push
push
push
push
push
push
push
push
call
fcmovne
add
add
add
add
in
call
add
mov
repnz
in
loopne
lcall
mov
add
cmpl
je
push
push
push
and
add
shr
inc
sub
inc
pop
not
xor
inc
pop
push
dec
pop
push
push
lea
pop
call
cmpl
je
push
push
shl
rol
sub
sub
push
xor
add
shl
sub
sub
not
add
pop
ror
pop
push
sub
shr
pop
push
push
rol
inc
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
xchg
push
add
movsl
add
add
add
add
add
pop
fadds
mov
out
add
mov
xchg
xchg
cmpl
jne
push
add
pop
mov
movl
push
rol
inc
shr
pop
jmp
xor
push
ror
ror
rol
sub
pop
pop
push
sub
sub
pop
pop
push
push
lea
push
lea
push
push
call
call
add
jae
test
mov
idivl
addl
xchg
stos
add
mov
cld
test
cwtl
add
in
jae
add
add
lcall
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
fstps
push
pop
xchg
add
ljmp
add
bound
lods
arpl
add
add
lods
push
add
add
out
loop
leave
pop
xchg
stc
add
movl
add
lcall
push
push
push
push
lea
push
push
push
push
push
lea
push
call
pop
cltd
fsts
add
pop
scas
imul
mov
add
jnp
mov
scas
lret
out
loop
pop
fidivrs
add
mov
cltd
add
fadds
add
add
add
in
add
mov
pop
sub
pop
leave
push
add
dec
dec
pop
ret
push
shr
add
pop
push
mov
push
shr
add
pop
add
cmpl
jne
push
push
not
sub
push
xor
add
add
shr
inc
sub
add
dec
lea
add
pop
rol
sub
shl
pop
push
add
pop
pushl
push
add
not
pop
call
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
mov
nop
rolb
push
repnz
add
push
add
imul
iret
cmpsb
stos
in
mov
add
out
push
jnp
add
pop
clc
lds
stos
repnz
lret
add
mov
jecxz
imul
in
in
fcomps
rclb
push
push
push
push
push
push
push
call
add
add
add
add
les
movsl
add
add
lea
testl
jbe
mov
popf
add
mov
mov
adc
xchg
mov
fldl
lcall
xlat
sbb
add
mov
rolb
push
push
push
push
push
lea
push
push
lea
push
call
push
sub
add
add
movsl
mov
add
add
xchg
loopne
add
popf
add
jb
rolb
popf
out
into
subb
push
mov
add
pop
mov
jb
lcall
fcomps
jge
add
test
lea
push
push
lea
push
push
push
lea
push
call
xchg
out
arpl
push
add
mov
sti
pushf
cld
add
fwait
je
fisubl
int
add
mov
add
mov
popw
add
sahf
jbe
out
add
add
in
lods
mov
fcmovnu
add
add
add
sub
pop
cmpl
jne
push
shl
pop
mov
call
push
pop
ret
jmp
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
add
and
add
sti
add
in
repnz
mov
lret
add
test
rolb
add
add
ret
loopne
add
add
add
stc
add
sti
shr
add
lcall
jge
add
test
add
add
xor
xlat
push
not
push
and
add
shl
ror
sub
sub
sub
ror
lea
pop
lea
xor
inc
pop
push
sub
pop
pushl
push
xor
dec
pop
call
push
lea
push
lea
push
push
call
jle
lods
lds
add
add
pusha
lds
add
filds
add
add
pushf
lods
mov
stc
fs
addl
mov
pusha
cld
add
test
stos
mov
add
mov
lock
lcall
add
cmp
push
call
add
jns
cld
arpl
std
add
xchg
add
add
mov
add
popl
add
add
lcall
xchg
add
add
add
pop
add
pusha
lods
sub
pop
call
push
not
ror
shl
add
pop
jmp
push
lea
sub
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
sahf
add
add
ja
lods
mov
rorl
add
mov
pop
iret
int
lret
add
fld
xchg
addl
add
add
sahf
mov
mov
ja
movb
add
jne
int3
add
add
pusha
test
add
add
push
sub
inc
pop
push
push
push
sub
push
sub
add
rol
xor
inc
sub
sub
shl
add
pop
add
rol
inc
pop
push
sub
shr
shl
pop
pushl
push
push
push
push
push
call
mov
mov
add
add
jecxz
mov
mov
filds
add
jp
jp
filds
arpl
aam
add
lcall
push
sub
add
push
push
push
push
push
push
push
push
call
add
loop
mov
sti
mov
fiadds
xchg
add
iret
add
add
bnd
in
arpl
add
add
push
mov
lcall
shrb
bswap
cmp
and
add
ror
sub
not
sub
add
add
sub
pop
sub
not
add
pop
push
rol
sub
add
pop
pushl
call
push
push
push
call
out
add
add
push
push
mov
push
jle
test
add
aam
in
mov
outsl
add
movsb
imulb
ficoms
fwait
test
add
addb
jno
jmp
out
add
lods
mov
push
loope
cmpb
hlt
lcall
shrb
cmp
push
push
sub
push
push
pop
add
sub
sub
not
sub
pop
add
pop
push
shl
pop
pushl
call
push
sub
pop
call
push
push
add
push
xor
add
add
shr
sub
not
shl
shl
pop
add
ror
shr
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
decb
add
add
add
std
add
add
out
mov
pop
add
mov
in
add
mov
roll
xchg
add
ja
scas
add
jno
pop
add
pusha
add
jne
push
lea
push
push
push
call
add
add
mov
mov
push
pop
jae
xlat
mov
add
fwait
add
into
pop
add
fnsetpm(287
mov
add
xchg
pop
mov
add
fdivp
ftst
add
add
outsl
loopne
add
aam
add
sub
pop
call
push
lea
push
push
push
lea
push
call
add
add
add
clc
add
pop
add
mov
jge
add
pop
add
sarb
jnp
add
int
add
mov
mov
add
add
xchg
arpl
aad
jmp
add
add
sti
add
xchg
mov
lcall
neg
sahf
sub
pop
call
push
push
rol
push
or
not
add
inc
sub
sub
xor
not
rol
pop
shl
shl
shr
pop
push
push
call
pop
mov
add
fstps
jecxz
add
addl
add
jmp
scas
pop
frstor
add
mov
pushl
call
push
push
push
push
lea
push
push
lea
push
call
in
frstor
pop
mov
out
mov
add
movsb
jmp
push
fdivs
add
pop
repnz
add
call
in
in
call
push
push
not
push
and
add
sub
sub
shl
pop
sub
pop
push
push
push
call
cwtl
pop
xchg
shrl
push
pop
scas
cmc
jmp
jnp
add
imulb
add
sarb
mov
add
add
lcall
jne
push
xor
add
xor
pop
call
call
push
push
shl
push
sub
add
shr
xor
sub
not
add
pop
xor
pop
push
lea
push
push
lea
push
push
call
jp
add
jno
add
test
imul
addl
add
addl
loope
insb
cmc
lcall
je
addr16
add
jns
sub
pop
pushl
push
add
lea
pop
call
call
push
push
inc
lea
add
shr
push
or
not
add
xor
sub
dec
sub
rol
lea
sub
pop
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
xchg
add
leave
add
jne
pusha
add
js
add
mov
add
incb
popf
mov
xchg
jmp
jge
rolb
add
add
lock
nop
add
addb
movb
push
add
sti
add
jne
stos
lods
lock
add
sub
pop
pushl
push
push
push
push
push
push
push
call
add
xchg
mov
add
mov
std
mov
cmpl
add
mov
add
lcall
lcall
mov
lea
push
push
push
push
lea
push
push
push
lea
push
call
bound
aam
testb
add
add
xlat
jmp
addr16
add
pop
fiadds
mov
addl
add
in
add
lret
add
add
enter
movsl
sub
pop
call
push
push
ror
push
sub
add
ror
sub
add
pop
add
shl
pop
push
inc
rol
ror
pop
pushl
push
push
lea
push
push
push
push
call
mov
add
add
push
fildl
lods
test
add
jp
in
jne
add
imul
add
jmp
icebp
mov
cld
out
jns
cld
data16
mov
add
incb
out
jo
add
js
mov
in
call
call
push
push
push
push
push
push
call
mov
push
add
add
add
mov
in
mov
loope
mov
loopne
add
add
fisttps
add
enter
add
add
add
add
add
loope
jnp
add
add
sub
pop
call
push
push
not
rol
push
push
pop
add
inc
sub
xor
sub
pop
inc
pop
push
push
push
push
push
push
lea
push
push
push
call
mov
jnp
add
add
add
xchg
add
mov
fiaddl
outsl
add
push
add
addl
fcompl
jne
call
push
sub
ror
pop
lea
push
push
shl
pop
call
push
push
shl
inc
push
xor
add
add
sub
ror
add
add
pop
not
add
inc
pop
push
inc
sub
pop
pushl
call
push
not
dec
pop
call
push
push
not
push
xor
add
sub
lea
lea
pop
dec
pop
push
lea
push
push
push
lea
push
push
lea
push
call
ljmp
add
insb
outsl
sahf
add
pop
cld
je
rolb
xchg
add
in
test
jl
pop
add
aam
xchg
jge
add
std
shrb
add
jne
push
pop
call
call
push
push
sub
sub
lea
inc
push
sub
add
add
xor
rol
sub
dec
inc
xor
sub
pop
dec
pop
push
push
push
lea
push
lea
push
push
push
call
jle
add
cli
add
add
push
add
add
add
add
add
mov
icebp
std
sub
pop
pushl
push
lea
push
push
push
call
movsl
lahf
add
fwait
add
int
fsubrp
push
mov
jecxz
add
out
rolb
add
lea
push
fsubr
je
push
jae
jl
lock
push
jp
xchg
add
xchg
aad
mov
jle
xchg
mov
mov
add
lcall
lock
add
call
push
push
inc
sub
push
or
not
add
not
sub
xor
pop
add
shr
not
pop
push
not
rol
lea
pop
pushl
call
push
push
sub
lea
push
or
inc
add
shl
shl
sub
rol
inc
xor
pop
xor
pop
push
push
sub
push
xor
add
add
lea
add
sub
sub
rol
inc
pop
sub
ror
not
pop
push
add
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
clc
pop
add
mov
add
cmpsb
push
addl
add
outsl
add
jne
ljmp
lds
add
in
add
add
xchg
push
add
add
jo
nop
sub
pop
pop
push
push
push
push
push
push
push
push
call
fwait
int
jne
pop
ret
popa
jmp
mov
add
lret
fidivl
xchg
cltd
add
mov
lahf
idivl
jle
push
add
in
lock
in
movb
jnp
add
int3
xchg
mov
jbe
add
lcall
jne
push
sub
shl
add
pop
call
push
push
lea
sub
push
and
add
ror
sub
shl
xor
add
pop
sub
not
sub
sub
pop
push
push
call
shr
loopne
xchg
add
outsl
addb
mov
xchg
pop
popf
add
loopne
aam
into
add
mov
add
add
pop
fadds
sahf
mov
add
lcall
jne
push
pop
call
push
push
push
push
push
push
lea
push
lea
push
push
call
add
loope
add
add
xchg
add
fiadds
push
add
xorb
xchg
outsl
sar
sub
pop
push
push
push
push
push
call
mov
add
add
xchg
add
jl
mov
jae
add
add
cmpsb
or
add
add
stos
add
shll
addl
push
add
mov
lahf
add
cwtl
imul
add
std
test
in
lock
lcall
sarb
push
push
add
push
and
add
rol
sub
shr
dec
pop
shl
add
inc
pop
push
xor
add
not
shl
pop
pushl
call
push
sub
pop
lea
push
xor
rol
shr
xor
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
bound
loop
add
add
add
add
lcall
in
rolb
add
add
add
loope
test
jb
mov
test
add
mov
add
jns
aad
xchg
xchg
add
pop
jl
add
sub
pop
push
push
dec
add
add
shl
pop
push
push
dec
add
shl
pop
call
push
shl
xor
pop
lea
push
push
shr
push
push
pop
add
sub
shl
dec
pop
inc
pop
push
add
shl
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
cmpsl
add
adcl
add
cmpsl
xchg
add
mov
mov
add
cwtl
add
arpl
add
data16
add
outsl
add
mov
roll
imul
in
fcomps
lahf
sbb
add
push
push
push
call
in
filds
gs
fldcw
mov
xchg
rolb
jno
xchg
push
ficomps
scas
scas
mov
push
iret
add
mov
fsub
int
outsl
nop
ffree
add
jp
add
add
lock
faddl
sahf
add
jae
pop
int
movsl
push
cld
lahf
jecxz
add
fiadds
add
loope
add
sub
pop
call
push
push
not
ror
not
sub
push
and
add
shl
inc
dec
xor
sub
shr
pop
sub
ror
pop
push
shr
pop
pushl
call
push
push
lea
push
push
push
push
lea
push
push
push
call
jge
add
add
iret
lods
sti
add
xchg
insb
orb
add
fwait
add
add
mov
add
xchg
out
add
sub
pop
call
push
push
push
call
add
test
testl
add
enter
incb
add
xchg
lahf
add
add
jno
add
lret
outsl
push
mov
add
add
imul
in
hlt
lcall
inc
cld
lea
push
push
add
push
sub
add
add
rol
sub
shr
xor
pop
xor
pop
push
sub
sub
pop
pushl
call
push
push
push
lea
push
lea
push
call
add
pop
fldcw
add
xchg
js
loop
hlt
scas
ja
cmpl
jle
test
add
mov
add
add
in
in
pop
lea
push
add
pop
push
push
dec
sub
pop
push
push
inc
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
add
add
outsl
mov
test
add
sti
xchg
add
add
sti
add
add
js
in
fcompl
jne
push
push
rol
rol
push
push
pop
add
add
dec
sub
ror
inc
dec
pop
lea
sub
pop
push
push
push
push
push
call
add
test
out
add
mov
sahf
add
add
add
cmpsb
xchg
test
pop
pop
fwait
lcall
add
add
roll
add
movsb
aam
mov
add
out
xchg
in
in
pop
push
push
shl
add
pop
call
push
push
lea
sub
not
push
or
not
add
rol
add
sub
sub
shl
pop
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
out
mov
mov
mov
bound
add
add
pusha
mov
je
iret
push
pop
ja
add
out
pop
fwait
jl
cltd
add
add
fstl
add
lcall
jne
push
push
push
push
push
push
lea
push
call
shlb
add
add
pop
add
mov
mov
mov
addr16
add
mov
ljmp
jmp
sahf
add
jle
add
test
imul
add
add
loope
add
xchg
add
sub
pop
call
push
push
push
push
lea
push
push
push
call
add
xchg
mov
mov
int
ror
bound
enter
stos
jl
out
test
add
add
add
loopne
jne
enter
test
add
lock
add
add
add
scas
stos
out
add
rcll
add
lock
jo
add
push
jb
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
lea
out
movsb
jb
ffreep
imul
lods
add
enter
movsb
cmpsb
add
add
push
mov
movb
movb
cmc
jl
stos
mov
pop
call
push
push
rol
push
sub
add
add
shr
rol
sub
shl
pop
add
inc
pop
push
push
push
push
push
call
push
pop
add
into
movsb
ficoml
add
cmc
imul
outsl
cmpsl
loopne
push
mov
out
mov
add
add
add
add
add
outsl
jns
add
mov
jmp
add
cltd
repnz
pop
pushl
call
push
push
push
call
add
in
add
in
lea
pop
jo
nop
fcmovnbe
in
cwtl
add
stc
int3
pop
out
add
in
sub
pop
call
jmp
push
push
push
push
push
push
lea
push
call
sahf
les
add
ror
ja
add
insb
add
add
add
out
cltd
add
cmc
popa
addb
add
ret
js
ret
testb
shll
add
add
add
add
pop
mov
xchg
add
leave
add
xchg
fcomps
mov
add
jp
test
in
in
pushl
mov
push
push
lea
push
lea
push
push
push
push
push
call
add
into
int3
add
ja
add
add
hlt
sahf
add
xchg
jnp
outsl
add
repnz
add
stc
int
movsl
add
add
mov
jmp
push
push
add
dec
not
push
or
inc
add
add
add
shr
sub
shl
ror
ror
pop
xor
pop
push
shr
shr
lea
pop
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
mov
ret
push
mov
add
in
shll
add
add
mov
add
sub
pop
call
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
fcoml
mov
jns
add
add
add
add
arpl
add
jle
add
push
mov
add
add
jl
add
lcall
shrb
push
add
lea
push
sub
add
sub
add
sub
pop
add
pop
push
push
push
push
lea
push
push
push
call
out
add
push
add
call
xchg
xchg
pop
add
call
lds
mov
je
pop
add
xchg
in
nop
mov
add
add
push
fildl
fadds
fisubrl
rorl
add
into
push
roll
fadds
jne
call
push
lea
push
push
push
push
lea
push
push
push
call
add
roll
sti
add
add
jmp
add
add
add
clc
rolb
mov
jb
cmpsb
add
add
add
rolb
add
scas
aam
add
add
mov
faddl
out
out
into
int3
clc
mov
jno
add
fldl
xchg
jae
stos
sub
pop
push
push
xor
pop
call
push
lea
push
push
lea
push
push
lea
push
call
add
test
test
add
mov
in
insb
je
pop
add
add
add
lret
subb
xchg
test
add
lea
sub
fidivs
mov
faddl
add
add
push
sub
pop
leave
push
push
call
hlt
lds
pop
jb
add
add
mov
fildl
jle
mov
add
lods
test
xchg
add
pop
sub
pop
add
push
rol
inc
add
xor
pop
pop
push
not
sub
pop
pop
push
push
call
aad
rcrb
les
pop
in
mov
pushf
mov
add
lock
add
push
add
jl
sahf
sarl
mov
add
addr16
cwtl
mov
add
xchg
lcall
push
lea
push
push
lea
push
call
jmp
fisubrs
pop
add
push
mov
add
fiaddl
add
fnsave
add
addb
mov
add
aad
test
xchg
mov
lret
ja
mov
xlat
leave
out
add
add
add
je
sti
add
ret
add
lcall
rclb
push
push
push
lea
push
call
add
add
pop
in
mov
mov
rcrl
mov
add
movsl
add
mov
add
add
push
movsb
add
clc
lcall
add
xchg
push
mov
mov
lods
pop
add
jmp
test
out
sahf
lahf
add
add
mov
sub
pop
inc
push
lea
push
call
ret
add
add
add
add
roll
add
add
add
pop
mov
add
add
add
test
mov
popf
add
mov
out
lret
imul
add
lret
into
xchg
add
mov
add
rolb
in
clc
lcall
or
push
push
push
lea
push
push
push
push
push
push
call
pop
jnp
loopne
add
add
mov
add
add
add
movsl
add
add
movsb
add
add
add
pop
add
mov
mov
mov
add
pop
add
add
jnp
mov
addr16
pop
leave
push
inc
shl
add
pop
ret
push
inc
dec
inc
sub
pop
push
push
not
rol
add
pop
mov
push
sub
not
inc
xor
pop
cmpl
jne
mov
push
push
push
lea
push
push
call
sbbb
add
fwait
add
add
jnp
add
push
add
lret
testb
loope
add
add
add
add
mov
lret
mov
add
addl
fs
pop
jmp
mov
push
lea
shl
add
pop
and
push
push
lea
push
push
push
push
lea
push
push
call
push
leave
aad
add
add
add
add
add
popa
xchg
fwait
add
add
push
fstpt
mov
jle
add
add
add
enter
lods
add
add
mov
mov
subb
add
js
add
pop
nop
add
loopne
xor
xor
push
push
push
lea
push
push
call
add
add
test
add
pusha
add
add
add
flds
add
outsl
push
movsl
icebp
outsl
add
add
add
add
add
std
ljmp
jae
testb
rclb
add
filds
addr16
push
out
add
lcall
rolb
push
lea
push
call
add
add
sahf
add
jnp
ja
add
mov
add
popl
add
jne
mov
push
add
mov
lcall
dec
decl
shl
ror
rol
pop
sub
push
ror
sub
rol
inc
pop
jmp
push
dec
not
pop
sub
push
lea
push
call
add
loop
subl
push
lret
iret
in
add
mov
aam
out
add
jp
add
push
ja
mov
add
add
pop
add
popa
add
add
mov
fadds
icebp
push
add
mov
pushl
push
push
call
xchg
add
mov
data16
imul
arpl
mov
add
add
add
pop
add
add
out
je
mov
lea
sahf
loop
pop
pop
add
jecxz
mov
hlt
bound
sub
pop
pop
push
inc
ror
lea
pop
sub
cmp
jne
push
push
call
add
in
jmp
xchg
lds
add
imul
add
mov
pop
int
xorl
loopne
add
add
add
add
add
xchg
pop
push
mov
add
int
mov
sub
pop
mov
push
push
push
call
rcll
out
mov
mov
jnp
add
add
add
push
mov
lcall
outsl
add
rolb
add
add
add
mov
lods
loopne
xlat
add
add
cltd
add
dec
cmp
jmp
ds
push
push
lea
push
push
call
divb
movb
add
add
add
data16
fmull
add
add
add
xchg
nop
jle
add
or
jmp
shl
add
pop
add
sub
push
lea
push
lea
push
call
fs
xchg
test
jle
imul
add
bnd
add
add
add
add
out
leave
jge
loop
add
add
pop
add
fisubrs
loop
mov
out
add
jbe
add
xor
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
int3
push
add
add
add
mov
lds
add
test
add
pop
fxch
out
add
movb
int3
stos
add
push
mov
xlat
add
xchg
stos
int
in
fdivr
lcall
jmp
cmp
loope
incl
add
add
pop
sub
push
lea
pop
cmp
jne
push
ror
pop
leave
push
rol
xor
pop
ret
push
shl
add
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
add
out
add
jle
test
add
add
stc
loopne
cltd
add
add
out
out
lret
loop
popl
add
ja
addr16
add
std
sub
pop
mov
push
push
push
push
push
call
lds
add
popa
add
add
add
int3
fwait
repnz
loope
in
movsl
add
add
add
pop
add
mov
in
pop
add
mov
xchg
lods
push
mov
jo
add
add
loope
add
insb
jp
sub
pop
add
push
rol
shl
add
dec
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
data16
mov
jmp
add
xchg
out
fs
scas
add
push
sub
add
xchg
je
rolb
shl
mov
loop
add
mov
cltd
add
cwtl
push
sub
pop
push
push
push
push
lea
push
lea
push
call
into
in
roll
add
push
notb
add
add
mov
push
ljmp
in
incb
mov
push
add
loopne
push
out
add
mov
add
fsubs
add
jb
fcoml
add
mov
jns
bound
in
in
pop
push
push
push
push
push
push
push
push
push
push
push
call
lret
stc
add
fiadds
push
in
mov
fistl
gs
jmp
scas
mov
add
add
push
mov
cli
add
outsl
add
jae
add
pusha
mov
cld
mov
mov
add
outsl
aam
add
test
push
add
pop
add
into
sub
pop
push
mov
push
sub
inc
sub
sub
pop
lea
push
sub
sub
not
pop
sub
push
inc
pop
mov
push
rol
pop
shr
add
push
shr
add
pop
mov
push
add
pop
add
mov
push
push
push
push
push
push
push
push
push
call
push
add
sar
add
add
add
fisttpl
shrl
jecxz
je
pop
add
mov
mov
push
lcall
sar
add
jle
jae
cld
pop
out
clc
add
aam
jnp
out
out
add
add
sarl
pop
add
push
shr
pop
xor
mov
push
xor
pop
and
push
push
push
push
call
idivl
jmp
add
add
jae
add
fiaddl
addb
add
add
gs
mov
add
fiadds
scas
add
lcall
rolb
loop
lea
pop
rol
push
push
push
call
mov
add
add
aad
add
add
add
add
add
push
cmpsl
lds
mov
add
enter
xchg
add
add
add
add
test
sub
pop
xor
push
xor
dec
not
pop
inc
push
push
call
add
clc
add
add
jmp
cmpsb
ljmp
add
outsl
cmp
xchg
lret
add
mov
add
cltd
not
imul
add
add
lods
out
mov
add
add
mov
add
lods
addl
in
clc
pop
cmpb
jne
push
push
lea
push
push
push
push
push
push
call
cld
mov
leave
pop
jnp
icebp
add
rcrl
jae
mov
add
in
add
add
iret
xchg
add
add
stc
add
fcomps
add
add
pop
imul
mov
in
loopne
add
push
push
lea
push
push
push
push
push
call
add
jae
add
mov
iret
add
pop
add
test
call
out
mov
outsl
testl
icebp
jecxz
mov
mov
cmpsl
add
shll
add
mov
cmpl
in
in
lcall
inc
or
test
lea
push
push
push
call
jnp
push
mov
mov
add
add
xchg
cmpsl
add
add
fsubrl
js
jmp
add
mov
call
aad
test
mov
faddl
add
mov
add
add
add
adcl
jns
cmpsb
je
add
mov
add
push
add
sub
pop
add
push
dec
add
lea
pop
cmpl
jne
push
push
push
lea
push
lea
push
push
push
push
push
call
pop
push
mov
add
jl
add
push
in
xchg
add
pop
xchg
mov
sahf
add
add
add
mov
mov
mov
add
popa
cltd
pop
mov
fdivr
lcall
rclb
push
push
push
push
push
lea
push
call
cld
cmpsb
add
in
fwait
mov
jnp
add
add
add
pushf
loopne
add
shlb
add
jbe
add
fwait
add
add
add
stos
mov
add
loop
push
add
roll
xchg
xchg
pop
lea
into
cltd
add
add
add
add
pop
push
push
lea
push
push
lea
push
lea
push
call
mov
jge
cltd
add
jge
std
les
add
mov
enter
ror
stos
pop
test
aam
fcoms
mov
orl
clc
pop
add
add
lcall
push
lea
push
call
popf
add
add
mov
mov
push
lock
cmpsb
iret
mov
repnz
add
xchg
add
xchg
cld
fsubs
lds
in
subb
int3
fldenv
lcall
pop
push
push
push
push
push
push
push
push
call
add
add
jns
add
jle
add
add
add
iret
aam
add
loope
shrl
jge
add
adc
frstpm(287
fiadds
std
in
add
add
sub
pop
pop
push
add
add
pop
leave
ret
push
dec
pop
mov
push
push
push
push
lea
push
call
add
add
loopne
add
lret
push
add
add
lock
add
push
int
addr16
testb
pop
lret
cltd
std
mov
nop
add
mov
lods
lds
out
loope
add
jno
add
iret
hlt
call
push
pop
add
test
add
movsb
iret
add
mov
push
testb
in
in
lcall
push
or
cld
pop
mov
push
push
xor
pop
mulb
push
ror
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
repnz
add
add
push
add
imul
je
sti
xchg
out
lea
fldl
shlb
add
add
add
sarb
add
pop
call
push
push
xor
pop
call
push
push
push
lea
push
lea
push
push
call
incb
pop
rcrb
jnp
faddp
ffreep
mov
icebp
add
add
fdivs
in
add
add
in
shlb
mov
mov
add
loopne
roll
stos
add
push
add
mov
iret
jecxz
add
sarl
xor
push
push
push
push
push
call
add
sti
add
add
jp
in
sahf
jbe
fiaddl
push
add
add
mov
test
push
xchg
add
mov
mov
test
out
mov
add
mov
in
jbe
in
in
pop
pop
push
lea
rol
pop
pop
push
add
ror
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
pop
add
add
xchg
jb
arpl
in
add
add
push
sbbl
add
add
nop
lcall
add
add
clc
cmc
shl
jb
push
add
shl
add
rolb
pop
pop
push
ror
lea
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
lea
enter
jnp
gs
add
jecxz
lret
xchg
add
add
add
mov
add
xchg
add
roll
push
fcomi
add
push
jno
loopne
sub
pop
leave
push
lea
push
push
push
call
xchg
data16
push
test
out
into
aam
rolb
pop
mov
xchg
add
ja
add
add
add
add
insb
add
enter
addl
rolb
add
xchg
push
add
lock
add
jnp
js
cmc
mov
in
lock
ret
push
not
add
add
pop
push
mov
push
shl
pop
add
push
push
call
cmpsb
out
push
add
repnz
jns
jno
add
in
mov
mov
add
jae
fs
lds
add
add
pop
add
mov
sti
add
mov
faddl
clc
pop
push
push
lea
push
push
call
rcrl
add
add
jl
push
push
addr16
xchg
jae
stos
cwtl
add
insb
movl
add
add
in
hlt
pop
push
push
add
pop
push
push
inc
pop
push
push
pop
mov
push
push
push
lea
push
lea
push
push
push
call
jns
stos
push
add
add
cmpsl
insb
mov
xchg
add
pop
jo
add
mov
jae
add
sub
pop
push
push
push
push
lea
push
call
add
push
scas
add
push
add
mov
sti
iret
movsl
imul
add
add
add
add
pop
add
add
cli
loope
push
int
cmpb
hlt
in
add
in
pop
add
clc
loop
loop
add
in
lock
lcall
lea
push
shr
add
shl
pop
sub
push
sub
ror
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
sahf
jbe
lcall
push
lcall
add
pop
add
add
jbe
scas
add
add
incb
add
add
add
arpl
add
shlb
lcall
ljmp
inc
push
jae
lea
push
call
loopne
lock
cld
mov
add
ret
scas
cmpb
loope
sbb
mov
add
sub
add
add
add
in
mov
add
lcall
ficoml
sbb
popf
push
lea
push
push
push
push
push
call
add
pop
add
add
int
decb
add
filds
add
add
add
movsb
add
xchg
add
mov
add
add
push
ffreep
sub
pop
mov
push
push
lea
push
lea
push
push
push
call
push
push
jecxz
mov
aad
add
add
mov
out
stos
add
jae
add
add
fldl
stos
pop
xchg
add
sub
pop
add
push
rol
pop
pushl
push
push
push
push
call
add
add
mov
add
add
stos
insb
pop
xchg
movsb
aad
into
add
xchg
repnz
jo
push
ljmp
add
js
add
add
andl
jp
xchg
in
add
add
jno
leave
add
mov
sub
pop
popl
push
push
push
push
push
call
push
add
rolb
xchg
shll
pop
flds
add
sti
add
je
mov
lods
mov
mov
add
add
add
imul
mov
push
add
shr
shl
pop
add
xor
push
push
call
add
mov
push
icebp
xchg
mov
add
mov
flds
add
add
mov
add
int3
mov
out
add
push
add
mov
mov
clc
mov
add
lods
cmpsl
test
add
push
fldl
hlt
cwtl
pop
add
xor
jle
xchg
mov
adc
push
push
push
call
mov
jo
jl
movsb
add
loop
aam
add
add
add
insb
notl
ret
in
movl
hlt
pop
mov
add
push
inc
pop
xor
push
lea
lea
pop
rol
push
xor
sub
dec
not
pop
nop
nop
push
push
lea
push
push
call
mov
push
add
leave
stos
mov
ret
xlat
out
cli
add
filds
popl
pushf
add
add
xchg
add
lods
js
add
push
mov
les
sub
pop
xor
push
shl
add
pop
nop
push
sub
sub
pop
nop
push
xor
ror
pop
inc
push
inc
lea
add
pop
nop
push
sub
dec
shl
pop
nop
push
lea
sub
pop
cmpb
jne
push
push
lea
push
push
push
call
add
fucomp
add
add
mov
push
testl
imul
push
std
lods
fdivr
add
repnz
lret
add
lretw
divl
add
add
pop
push
add
add
add
pop
add
add
mov
in
in
pop
add
push
push
push
push
call
add
add
test
fsubl
pushf
jnp
add
jns
lahf
add
add
add
add
add
pop
push
out
stos
add
addb
sti
repnz
add
lret
xchg
push
add
movsb
nop
mov
xchg
add
sub
pop
nop
nop
push
lea
push
lea
push
push
push
call
movsb
push
mov
add
fs
imul
scas
outsl
icebp
add
push
mov
add
mov
cmc
lods
add
push
add
add
lret
scas
add
jnp
add
sub
pop
cmp
je
push
push
push
push
push
call
data16
jge
in
iret
cmc
stos
xchg
mov
stc
push
pop
add
add
test
pop
jns
cmpsb
mov
mov
add
cwtl
jne
std
sbbl
mov
jnp
push
add
push
push
into
sub
pop
nop
nop
push
push
push
push
push
push
push
lea
push
push
call
jns
add
sahf
mov
jl
cltd
add
add
movsl
mov
cwtl
xchg
add
add
ljmp
jecxz
mov
xchg
aad
pusha
sub
pop
inc
push
push
push
lea
push
push
push
push
push
push
call
cld
lods
mov
test
scas
mov
add
add
pop
mov
xchg
xchg
add
jnp
mov
rcrl
ljmp
add
add
in
fcompl
push
add
sub
pop
nop
push
push
push
push
lea
push
push
push
push
push
push
call
cmpsb
jle
xchg
aam
std
sahf
mov
fsubl
add
push
xchg
add
fldl
add
mov
cli
push
pop
imul
add
xchg
rolb
scas
pop
add
roll
test
mov
cmp
jb
push
xor
pop
xor
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
mov
add
add
js
push
sahf
add
add
add
add
mov
in
pusha
add
jnp
imul
pop
scas
add
testb
in
jmp
push
shl
inc
ror
pop
mov
add
push
add
pop
movzwl
push
not
add
shl
pop
mov
push
sub
pop
add
push
push
lea
push
call
add
imul
scas
mov
push
add
in
jbe
add
mov
mov
push
movsl
add
scas
scas
pop
xchg
out
add
add
pop
xchg
movb
ret
cmc
mov
pop
jbe
stos
mov
out
call
pop
mov
push
push
lea
push
push
call
add
add
test
add
add
std
add
push
add
lods
jl
add
imul
fimuls
call
lds
add
jnp
add
sub
pop
xor
push
push
call
pop
add
fsubs
add
push
mov
add
pop
add
add
add
mov
add
lock
fwait
addr16
imul
add
mov
stos
test
iret
push
mov
add
add
ljmp
lods
jns
jnp
sub
pop
xor
push
lea
push
lea
push
call
jle
add
add
loop
add
cltd
push
add
int3
add
add
add
add
add
mov
add
add
add
add
je
add
add
pop
jl
sub
pop
shl
push
add
dec
sub
shr
pop
xor
push
add
pop
shl
xor
push
pop
shl
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
int
jmp
stos
mov
add
std
push
add
int3
add
add
int
xchg
lret
test
lods
out
mov
stos
int
aam
add
mov
stos
ljmp
add
fucomp
mov
gs
popa
pop
add
cli
add
add
add
add
in
fdivr
lcall
or
mov
push
dec
xor
sub
pop
add
pop
push
shl
add
pop
pop
push
dec
shr
ror
pop
pop
push
not
pop
pop
push
push
push
push
push
lea
push
call
xchg
xchg
imul
addl
add
int
in
cmpsl
sahf
int3
ljmp
mov
leave
popf
add
outsl
add
lds
outsl
add
add
cli
add
add
movsl
add
push
xchg
je
add
mov
add
add
add
add
popa
push
arpl
ljmp
lcall
ret
push
shr
pop
push
push
inc
shl
pop
mov
push
push
push
push
push
push
call
jmp
int3
add
add
rolb
add
loop
add
add
xlat
stc
jno
test
mov
add
add
pushf
add
push
imul
add
add
into
mov
add
mov
lods
add
mov
jmp
bound
xlat
jne
add
fsubp
sub
pop
push
push
push
push
push
push
push
call
int
fiadds
mov
icebp
rolb
add
add
lahf
scas
mov
add
mov
sub
pop
push
push
push
push
call
add
aad
add
test
add
pop
pop
add
jmp
icebp
ja
jne
sahf
push
add
std
rolb
pop
add
mov
add
out
add
mov
lcall
dec
or
push
push
push
push
push
push
push
push
push
call
add
mov
mov
add
add
stos
add
cli
negl
lret
movsb
add
push
add
jle
add
add
mov
fiadds
add
pop
mov
push
lea
push
push
lea
push
call
jns
add
mov
mov
add
data16
add
pop
out
add
xchg
jl
add
ja
pop
xchg
jge
add
cmpsb
mov
add
add
ja
add
mov
add
add
lcall
jge
test
je
push
push
push
call
mov
add
fists
add
pop
into
in
mov
lahf
jns
add
sti
addb
scas
add
test
xchg
add
pusha
lcall
cli
add
mov
scas
sub
pop
mov
test
je
push
lea
pop
mov
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
ret
pop
add
out
les
jne
mov
add
xchg
stos
add
cld
add
mov
pop
roll
mov
in
add
add
pop
in
repnz
icebp
add
mov
pop
ja
add
add
push
fadds
mov
add
add
lahf
sub
pop
mov
push
add
pop
inc
push
add
pop
cmp
je
push
xor
pop
test
je
push
push
push
push
push
push
push
push
push
push
call
add
mov
push
movsl
add
push
pop
add
rcrl
flds
add
pop
pop
out
add
int3
bound
fimuls
test
add
add
add
mov
pop
add
fwait
add
add
in
fdivr
lcall
push
inc
push
xor
pop
cmp
je
push
push
push
push
push
push
lea
push
push
call
mov
add
lahf
pop
fisttpll
fisubs
loop
jge
pop
add
loope
cmpsb
aad
add
add
add
add
pusha
add
ja
add
push
jne
add
xchg
jl
add
lcall
rorb
jne
call
call
call
loop
add
leave
jp
jge
xchg
imul
xchg
mov
jbe
std
add
add
add
add
bound
ja
add
add
mov
in
clc
lcall
rclb
in
and
or
je
mov
or
pop
push
dec
dec
pop
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
in
test
mov
pusha
mov
add
add
add
lret
add
std
add
add
add
rcll
testb
lds
shll
aad
mov
aad
add
ljmp
stc
push
mov
pop
pop
push
push
push
push
push
push
lea
push
call
push
imul
add
jns
stc
add
movsl
fidivrl
int3
add
leave
add
add
outsl
add
insb
add
lock
pusha
add
in
mov
leave
add
push
shr
not
pop
ret
push
push
push
push
push
lea
push
lea
push
push
push
push
call
int3
lods
shrb
jae
add
fmuls
add
loopne
movsb
add
xorl
add
add
lock
pop
mov
mov
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
lock
shlb
lahf
mov
imul
mov
push
add
data16
in
sti
add
jno
out
xchg
mov
mov
into
test
into
add
test
add
pusha
out
mov
repnz
pushf
mov
fldlg2
testb
lret
fstps
in
add
add
js
in
fdivr
lcall
cmp
jne
push
push
push
push
call
mov
mov
jno
icebp
add
add
mov
lcall
push
clc
out
mov
fnsave
mov
std
add
mov
add
add
add
jle
nop
mov
add
lret
mov
iret
rolb
hlt
xchg
lahf
add
add
add
mov
mov
in
lock
lea
mov
push
push
push
push
push
push
push
push
push
push
call
sti
xchg
cli
movb
push
mov
test
pusha
add
jecxz
add
pop
mov
pop
lret
add
jp
mov
add
add
add
shlb
add
add
mov
lahf
mov
lea
subb
sub
pop
test
je
push
push
push
push
push
push
call
sarl
test
push
jecxz
mov
mov
jmp
add
mov
bound
pop
add
fs
add
filds
loope
add
add
push
push
push
lea
push
push
call
add
add
xchg
add
pop
mov
out
test
bound
add
out
add
xchg
hlt
jae
pop
jp
mov
mov
fcomps
leave
xchg
jne
in
lock
lcall
movb
lea
rol
pop
cmp
jne
push
push
push
push
call
ljmp
outsl
xchg
add
clc
push
add
cmpsb
mov
lret
add
jnp
test
mov
call
add
add
mov
rcr
jbe
add
xchg
rol
call
add
add
xchg
add
cltd
shll
in
lock
lcall
inc
add
add
push
sub
rol
inc
pop
mov
add
push
lea
push
push
call
add
add
add
add
stos
testb
add
add
add
add
add
add
jle
je
add
popf
add
hlt
lcall
loopne
test
std
call
xlat
add
pop
jmp
push
sub
sub
pop
xor
push
push
lea
push
push
push
call
addl
add
cwtl
lods
xlat
add
add
mov
add
push
add
add
jge
pop
testb
add
mov
sub
pop
pop
pop
push
lea
push
push
lea
push
call
cli
je
add
jle
add
lahf
xlat
add
add
aad
lahf
jge
push
add
iret
add
gs
je
jnp
jb
mov
add
icebp
lahf
sub
pop
pop
push
push
lea
push
push
call
int
rcl
loopne
add
sahf
add
add
pop
popf
add
lea
in
add
andb
ret
add
aad
add
aad
cltd
fldl
add
add
lret
lahf
loopne
add
add
add
loop
mov
mov
add
add
jae
push
jecxz
add
fucomi
cli
stos
sahf
js
in
lock
pop
push
dec
add
pop
leave
ret
push
sub
xor
lea
pop
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
int3
mov
add
add
data16
lea
nop
add
lahf
aad
stos
add
add
imul
sahf
mov
mov
add
mov
lea
mov
push
add
sub
pop
pop
pop
push
xor
rol
lea
shr
pop
pop
push
push
call
jbe
cld
out
pusha
shlb
add
add
jne
pop
xlat
mov
mov
add
idivb
pop
mov
repnz
stos
loope
pop
enter
jnp
push
roll
jle
xchg
add
mov
clc
lcall
push
dec
rol
pop
leave
ret
push
push
push
push
lea
push
call
add
outsl
add
imul
jns
mov
add
add
fs
mov
popa
add
loope
add
push
mov
push
sub
pop
mov
push
inc
sub
pop
pop
pop
push
push
push
call
mov
add
add
add
add
fwait
call
add
add
mov
addb
mov
add
add
insb
sahf
movsl
jl
add
js
lahf
mov
mov
add
jmp
lock
fiadds
push
add
add
ja
popa
push
sub
pop
pop
push
push
call
add
add
cltd
in
add
mov
mov
popf
add
loopne
add
add
add
out
push
jb
fldt
push
add
fiaddl
add
lret
mov
xchg
popf
add
add
in
clc
pop
pop
leave
push
lea
push
push
lea
push
call
add
insb
mov
mov
test
out
shll
add
add
add
mov
xchg
bound
sti
mov
xchg
mov
pop
ret
xor
cmp
lods
inc
cmp
xor
adc
and
adc
inc
cmp
inc
add
adc
idivl
adc
popa
cmp
xor
adc
mov
add
push
cmp
repz
mov
mov
pop
sbb
dec
xchg
mov
sub
leave
clc
cmp
dec
mov
mov
xlat
xchg
push
faddl
sbb
inc
mov
fdivl
xabort
fstpt
sub
in
cli
xor
repz
rolb
aas
imul
cmp
pop
sub
loop
jmp
ss
scas
fwait
mov
adc
xorl
jge
mov
sbb
mov
or
js
xchg
mov
sbbl
jne
cmp
repz
cmpsl
jge
jns
and
bound
shlb
push
fwait
std
out
fdivrl
scas
and
xchg
sub
sub
movsb
push
repnz
aad
test
dec
cmp
inc
insl
push
sbb
stc
mov
mov
imul
mov
loope
fsubl
pop
push
mov
in
adc
mov
push
cmp
fcom
cmp
add
push
lock
ds
mov
cltd
in
ja
or
lret
inc
mov
sarl
nop
adc
or
add
cli
rcr
and
mov
scas
add
sbb
repnz
or
mov
insb
pop
add
es
data16
jmp
xchg
test
sub
outsl
push
pop
dec
push
push
repz
imul
cmp
sbb
jns
add
pop
mov
loopne
mov
shll
or
adc
xor
jbe
jmp
ss
jmp
mov
push
ret
in
mov
and
push
in
jbe
movsl
xor
and
addr16
cli
testl
adc
push
and
cltd
xor
int
sbb
pushf
insb
push
out
int3
mov
xchg
scas
xlat
nop
movsl
pop
jno
adc
and
and
ds
stc
pop
inc
je
xchg
mov
sub
outsb
or
mov
popf
xor
aaa
sub
push
fstpt
jmp
xchg
enter
std
xchg
test
pop
push
int
inc
pop
orl
and
std
std
aad
aam
xchg
ds
inc
dec
and
outsb
mov
aam
mov
and
sub
inc
dec
outsl
or
nop
or
addb
xchg
jmp
mov
xchg
cmp
and
xor
dec
scas
popa
sub
lahf
in
addr16
adc
jnp
jle
mov
jmp
popf
rclb
aas
cmpsb
rcrb
adc
or
sahf
in
cwtl
lods
mov
nop
cmc
jl
ljmp
mov
push
enter
cmp
jb
pop
sti
in
cmc
jmp
leave
sub
outsl
or
repz
test
mov
jle
loopne
jno
nop
push
and
dec
adc
nop
outsb
mov
sbb
enter
xchg
xor
push
jne
add
sbb
iret
cwtl
cmp
mov
push
int3
xchg
cmp
mov
jne
add
mov
cltd
jg
fsubrs
dec
pop
outsl
adc
ds
repz
pop
jecxz
int
popf
mov
ret
inc
jae
negl
insb
hlt
aaa
and
cs
mov
jbe
or
daa
mov
pop
fxch
sub
jecxz
decl
sub
fistps
popf
cltd
mov
xor
mov
repz
out
aad
inc
mov
and
inc
jno
fbstp
push
fsub
or
mov
add
pop
rcl
stos
cmpl
adc
fidivl
jo
dec
in
insb
icebp
inc
pop
push
mov
cmp
lret
out
inc
xor
mov
call
mov
xchg
mov
add
inc
aam
cmp
insb
lds
xlat
outsl
popf
scas
sbb
inc
rcrb
sbbb
sbb
inc
inc
adcl
loopne
out
lahf
aas
js
push
lock
and
je
jae
and
add
lcall
scas
xlat
adc
rolb
rcrb
loopne
and
scas
out
cmp
scas
movsl
ss
dec
push
jmp
jae
fsubp
inc
push
repnz
loopne
mov
sbb
leave
jle
jg
dec
mov
mov
xchg
out
mov
jl
mov
aaa
inc
aam
add
pop
xlat
xor
jne
xor
cmp
fucomp
popa
xor
pop
mov
popf
into
stos
pushl
jnp
test
mov
ficomps
loope
jbe
inc
ljmpw
jl
push
loop
pop
xchg
int
sub
es
je
inc
imul
repz
push
mov
popa
pop
mov
mov
ds
dec
mov
arpl
push
jge
dec
les
std
jno
sub
popf
je
mov
pop
test
or
push
pop
lcall
in
dec
cmp
ja
enter
repnz
sbb
jbe
cmp
scas
sub
enter
add
cld
inc
gs
mov
hlt
out
jo
mull
jae
out
dec
mov
add
mov
add
push
sbb
or
inc
fwait
cmpsb
inc
cmp
mov
dec
test
into
and
mov
in
push
push
ja
sar
xor
dec
cmc
or
dec
add
imul
pop
jl
cwtl
mov
je
sti
jl
jmp
sbb
out
dec
add
pusha
xor
and
sub
test
loopne
xor
or
push
shll
push
and
mov
mov
notl
into
and
cmp
lret
ja
sbb
lods
mov
adc
xor
imul
stos
pop
subb
adc
sbb
ror
jno
xor
loope
cmc
sub
cmpsl
outsb
pop
cli
pop
pop
sbb
mov
xlat
xchg
pop
inc
dec
aaa
enter
mov
dec
outsb
dec
gs
test
ret
add
adc
mov
je
je
push
jae
cmpsl
iret
sarb
xchg
mov
lahf
mov
ret
push
test
mov
incb
pusha
mov
imul
pop
imul
lcall
or
popa
bound
mov
scas
mov
cltd
sbb
aaa
sbb
push
ret
out
and
lock
mov
ffreep
and
frstor
pop
mov
clc
imulb
or
add
std
jg
lods
les
icebp
popf
inc
sbb
adc
daa
test
rcll
test
std
stc
movsb
in
and
mov
nop
mov
jle
fwait
mov
inc
stos
pop
fwait
pop
lods
insl
or
shlb
xchg
out
mov
das
leave
popf
xor
out
xor
int
jle
add
cli
les
mov
fs
push
arpl
jo
add
mov
dec
cld
push
bound
cs
fs
or
test
iret
and
scas
xor
dec
std
lds
fldt
dec
stc
mov
into
pop
cli
outsb
xor
push
mov
sahf
sub
ds
add
scas
gs
in
lea
fnstenv
and
add
shlb
call
clc
xchg
pusha
adc
shl
es
cli
outsb
xchg
xchg
ret
adc
loope
lock
add
gs
pop
push
pop
inc
sbb
mov
sbb
sbb
pop
les
mov
sbb
cmpsl
inc
loop
dec
xor
sbb
cmc
std
push
cltd
push
dec
or
mov
loope
enter
mov
push
lret
mov
sbb
in
ret
add
popf
hlt
repz
xor
mov
insb
insb
popw
push
clc
cltd
xor
mov
jge
inc
in
es
cwtl
push
enter
jl,pn
adc
out
pushf
rorb
sbb
adc
adc
int
adc
andl
push
rorb
jp
sbb
pop
and
jae
sti
inc
arpl
out
jl
fmul
mov
sub
loope
mov
fs
fs
repnz
or
xor
xor
xchg
cltd
cwtl
lahf
imul
fdivrs
jae
push
stos
push
pop
jo
cmp
ret
sbbb
mov
jle
rclb
shl
test
jmp
into
in
addr16
lret
sbb
fisubrs
arpl
filds
sub
jbe
popf
out
ret
adc
popf
stc
or
dec
adc
sub
lret
enter
push
sbb
int3
dec
xor
lret
pushf
mov
mov
pusha
mov
add
jle
ja
ret
add
popa
xchg
sub
mov
mov
das
jmp
cwtl
rcrl
inc
dec
pop
and
mov
adc
mov
sti
dec
cmpsl
stc
mov
fs
inc
lods
inc
cs
ds
sub
mov
add
aaa
aas
jo
es
push
push
je
xor
inc
mov
stc
lcall
xor
scas
and
push
push
loope
daa
cmpsl
inc
sub
jecxz
inc
mov
cmc
fs
xchg
push
sbb
loope
pop
mov
adc
cmp
inc
mov
push
sbb
adc
inc
mov
or
xchg
ficompl
jno
xchg
iret
sub
cmp
adc
xor
in
movsb
popl
fimull
add
or
dec
jno
mov
fwait
shrl
adc
pop
jo
jg
std
pop
sub
jle
or
jmp
sbb
push
jo
xor
loop
lds
out
mov
jl
aaa
bound
cld
sub
push
and
mov
cmp
fmuls
data16
mov
push
das
dec
push
mov
sub
pop
fs
mov
dec
data16
or
mov
imul
xor
jnp
imul
lahf
repnz
sub
lods
pop
addl
aaa
testl
test
pop
std
es
aas
jg
pop
pusha
adcl
mov
negb
mov
push
cmp
pop
inc
cli
adc
mov
orb
or
mov
fildll
mov
ss
xor
push
cmp
mov
les
sbb
pop
loop
xchg
repz
nop
jmp
dec
outsb
jno
and
xchg
and
dec
loop
fwait
in
insb
pop
lahf
xchg
in
faddl
push
push
pop
xor
loope
fmuls
push
mov
inc
pop
outsb
aam
in
pop
or
cwtl
mov
pusha
sahf
or
push
adc
jmp
test
adc
or
pop
mov
pop
or
push
mov
test
mov
pop
sbb
or
adc
repz
in
xor
xor
xor
mov
pushf
adc
mov
jl
faddl
xchg
inc
mov
and
enter
jmp
dec
test
xchg
negl
imul
rcrb
and
cmp
mov
dec
sub
inc
popf
xor
out
shlb
cmp
lahf
push
jl
inc
test
fsubrs
xchg
add
pop
scas
repnz
in
and
in
pop
inc
jnp
jmp
adc
stos
loop
adc
sbb
fsubrs
cs
add
enter
les
test
xor
scas
ljmp
stos
aam
cmpsb
repnz
test
cmpb
and
pop
rcl
jmp
enter
sti
pop
fwait
xchg
ret
test
and
adc
xchg
xor
shlb
push
push
mov
or
push
and
rolb
lea
dec
jecxz
adc
xor
sbb
fstp
jae
jno
mov
mov
cwtl
lret
outsl
mov
std
sbb
and
imul
repz
sub
movsb
aaa
shrb
push
jp
jle
xchg
cmp
stc
dec
mov
pop
lcall
mov
enter
addr16
inc
neg
jne
mov
pushf
mov
cmp
cmpsl
or
popaw
ficoms
mov
mov
jmp
filds
in
or
push
ja
rolb
add
cmp
push
xchg
test
dec
fwait
inc
nop
adc
lahf
add
cld
mov
add
pop
dec
pop
pop
sbb
in
arpl
adc
jbe
mov
pop
lock
and
pop
enter
scas
mov
movsl
jmp
adc
fdivs
mov
std
mov
jp
lret
jnp
movsb
imul
pop
xchg
cld
adc
fwait
popa
repz
imul
mov
push
sub
sbb
bound
cwtl
pop
cmpsb
rcr
int3
aaa
out
imul
fcom
push
dec
push
scas
inc
iret
mov
xchg
mov
xchg
js
andl
cmp
insl
xchg
popf
inc
cmp
push
mov
xor
xor
popa
cmp
es
push
add
xorl
dec
push
enter
scas
inc
pushf
test
adc
mov
cmpsb
mov
mov
mov
mov
and
negl
imul
add
les
push
sbb
psraw
mov
mov
fs
scas
pop
sub
aaa
sub
mov
fs
scas
rcrb
cmp
mov
insb
sbb
inc
dec
es
adc
cmp
mov
adc
cmp
ret
vsqrtss
jle
adc
add
mov
jmp
sti
bound
xchg
aam
lods
sbb
call
dec
idivb
dec
test
dec
xchg
pop
je
mov
lods
test
sbb
pop
test
cs
inc
dec
and
xchg
sti
jge
insl
xor
call
test
jne
gs
add
aas
dec
jl
fbstp
lock
ret
push
jle
sbb
cmc
jle
cmp
ds
jns
fyl2x
adc
sbb
test
imul
jne
pop
bound
mov
push
adc
sub
sbb
aam
add
cli
jne
test
push
mov
inc
mov
fstpl
mov
adc
out
in
ret
enter
js
mov
fbld
inc
fmuls
mov
dec
popf
dec
mov
je
xor
add
mov
cmp
int
ret
jecxz
adc
pop
scas
orl
test
frstor
sbb
cs
in
out
mov
jge
push
addl
mov
push
or
in
mov
pop
outsl
mov
lods
push
mov
push
negl
fldenv
mov
jp
bound
loop
xor
movsl
cwtl
cs
mov
sub
les
jmp
mov
push
in
cmp
cmp
and
test
int
mov
lret
dec
test
ds
dec
arpl
in
fmuls
cmp
push
jmp
clc
outsb
scas
ss
adc
sbb
adc
mov
cld
ret
addr16
jae
xchg
xor
sub
in
into
andl
xchg
ljmp
jl
sbb
pop
mov
and
fwait
pop
pop
push
lods
xor
clc
xor
pushf
and
fdivr
xor
arpl
xor
movsl
jp
gs
test
icebp
insb
cmp
mov
cltd
imull
pop
test
push
outsl
mov
rcrl
fldln2
loop
lcall
and
data16
ds
mov
pop
dec
and
jp
sbb
sub
mov
xchg
lahf
ja
jb
push
or
adc
add
arpl
pop
outsb
sbb
ja
adc
inc
test
lcall
push
outsl
xchg
jnp
sarb
movsl
jbe
xor
inc
shrl
push
mov
je
pop
mov
stc
xchg
leave
rcrl
pop
sub
out
pop
packsswb
add
pop
out
aam
xor
pop
scas
popf
int3
stos
fs
pushl
add
lock
mov
fsubp
inc
pop
add
out
fcoms
sbb
loope
jmp
enter
pop
ret
in
or
add
pop
sbb
dec
shll
js
xchg
imul
out
or
insl
sti
push
inc
adc
addr16
adc
xor
xor
add
ljmp
aaa
inc
ret
inc
jo
mov
dec
mov
push
jno
cwtl
test
hlt
loope
xchg
scas
lret
pop
insb
mov
incl
dec
push
xchg
sti
popa
push
into
loop
inc
pop
mov
insl
and
lret
xor
out
test
lret
call
iret
call
mov
lret
sbb
hlt
aam
jnp
push
cld
sub
jae
scas
xor
lahf
inc
cltd
sti
pop
pushf
pop
bnd
out
insl
xchg
push
adc
pop
sub
data16
rcll
jae
dec
ret
mov
sub
adc
scas
pushf
sbbl
in
jl
xlat
or
and
sbb
bound
and
aas
jl
lahf
insb
pop
pop
sbb
test
push
lds
add
xchg
test
test
push
not
in
or
dec
rep
cmp
mov
xchg
push
outsb
jnp
divl
sbb
push
jmp
inc
push
fistps
inc
mov
sub
test
daa
jae
jne
sub
outsl
leave
scas
in
int3
or
dec
cmp
push
sbb
xorl
push
movb
or
xchg
cwtl
int3
adc
add
dec
movsb
mov
mov
lahf
rcrl
les
sub
test
cltd
gs
aas
mov
mov
xor
jno
out
dec
inc
pop
fldt
insl
or
es
pop
aaa
adc
jl
dec
and
enter
mov
addr16
fadds
push
mov
fs
cmp
dec
jae
mov
fadds
mov
mov
gs
ljmp
rol
insl
push
aas
mov
xor
dec
push
xchg
lods
xor
mov
shl
push
xlat
call
mov
loopne
test
addr16
jb
mov
cmp
arpl
arpl
inc
std
clc
or
mov
jmp
test
stos
mov
sbb
and
movsl
adc
fmulp
repz
fwait
pop
leave
mov
xor
cmpl
out
mov
sub
xchg
add
addl
mov
clc
or
sbb
lods
or
test
dec
pop
sub
mov
add
adcl
fsts
fimull
insb
bound
push
mov
xchg
push
sbb
or
mov
mov
and
in
cmp
xor
std
jg
lea
sub
daa
shll
in
and
lret
mov
scas
shll
cld
sbb
das
push
mov
sbb
inc
push
scas
push
test
cmp
lock
scas
pop
pop
pop
sbb
loope
mov
clc
adc
lahf
mov
shlb
inc
in
inc
xor
fwait
into
jl
stc
xchg
cmpsl
cmp
sub
sbb
and
leave
mov
push
loope
cmp
sarl
or
mov
xor
cmp
inc
mov
inc
sbb
jne
rorb
into
or
imul
jl
mov
mov
pop
mov
sbb
imul
pop
cmp
dec
sti
movsl
negl
jb,pt
jp
and
sub
pop
pop
cld
hlt
in
cld
dec
mov
insb
inc
mov
lret
jne
mov
pop
in
adc
addl
mov
std
shrb
or
mov
sar
ljmp
and
push
adc
or
daa
out
cltd
dec
fwait
lcall
call
sahf
test
ljmp
ret
subl
jecxz
insb
cmpsb
cli
mov
push
and
cltd
pop
sbb
dec
imul
fwait
push
aad
sbb
loop
stc
cmc
sbb
shlb
loope
nop
cmpsl
jmp
xchg
pop
mov
dec
inc
pop
roll
out
out
das
dec
sbb
mov
lret
pop
dec
add
lret
and
imul
icebp
add
movsb
fmull
in
adc
pop
dec
data16
incl
shrb
imul
pop
pusha
data16
orb
popa
repnz
orl
inc
dec
dec
jecxz
fstpt
test
sub
sub
xchg
adc
inc
cmp
xlat
inc
shl
mov
jp
rorb
nop
jle
dec
insb
aam
and
or
cmpsl
and
jns
mov
loopne
jo
jg
inc
repz
adc
jne
ficomps
or
xchg
or
mov
pushl
scas
jno
sub
or
in
pop
or
xor
inc
push
jnp
insb
mov
or
sbb
aaa
adc
lcall
xchg
and
out
jo
fwait
adc
xlat
mov
xor
mov
aam
add
addr16
fcoms
push
jo
movsb
xor
xchg
or
subb
in
hlt
push
adc
push
mov
jmp
fwait
imulb
cmpsl
enter
test
sti
push
mov
sub
loop
inc
push
mov
je
xor
jns
sbb
dec
mov
scas
and
push
rcrb
notb
xor
mov
add
jbe
rcll
std
inc
push
inc
rcl
je
xchg
cmp
pop
or
pop
adc
jno
ds
outsl
mov
mov
lret
pop
sarb
mov
xchg
inc
insb
adc
rcrl
lret
add
dec
pop
sti
push
insb
fisubrs
dec
dec
sub
insb
popa
pop
jecxz
int3
add
mov
test
push
movsl
lea
jbe
popf
pop
jne
sbb
xor
xor
mov
gs
repnz
cmpb
js
cmp
icebp
jb
scas
dec
xchg
ficomps
cmp
add
lcall
repnz
xor
lods
arpl
or
aaa
jnp
mov
subb
add
add
insl
cmp
lock
pop
dec
or
jno
inc
adc
leave
out
xchg
scas
pop
sub
lret
insl
cmp
ret
popf
push
and
mov
xchg
mov
js
adc
mov
pop
mov
jl
scas
bnd
sbb
loop
xchg
arpl
xor
or
out
sub
rorb
sub
dec
stc
cmp
cmp
xchg
lret
pop
cmp
xchg
jbe
rcrl
xor
push
jne
dec
xchg
pop
sbb
and
je
xor
sub
xor
cmpsl
xchg
arpl
cld
mov
adc
ficoms
sahf
ficomps
fwait
imul
sub
cld
inc
fidivl
in
cmpsl
and
xor
pushf
xor
sqrtps
shr
add
adc
push
ret
cmpsl
xor
sub
push
repz
rcr
shrl
mov
or
or
loope
lods
hlt
aam
pop
leave
dec
jp
cmp
xor
jbe
shlb
sbb
psubd
ss
mov
rorl
cmp
inc
xchg
bnd
jp
ficomps
je
sbb
sbb
je
xchg
mov
push
or
xor
sti
adc
test
sub
icebp
or
mov
pop
ss
xor
cwtl
push
cmpsl
mov
jecxz
mov
std
leave
repnz
push
movsb
std
fdivrs
xchg
sbb
mov
and
fsubr
xor
arpl
outsb
mov
dec
lea
inc
fdivl
xchg
xchg
cli
sbb
dec
rcrl
loop
xor
sbb
outsb
mov
or
push
pushf
lods
cmpsl
push
dec
mov
and
dec
inc
inc
jmp
popf
maxps
out
icebp
and
add
loop
lea
pop
mov
sub
lahf
xchg
repz
push
push
daa
addl
shrl
cltd
mov
xchg
jecxz
pusha
mov
mov
hlt
popf
imul
cltd
xchg
lds
fbstp
cwtl
xchg
pop
leave
test
sbb
or
xor
adc
push
cmp
jb
push
gs
inc
test
inc
shll
inc
mov
pop
jb
popa
adc
sub
out
cmp
mov
mov
sub
or
jne
jbe
outsb
stos
xor
push
nop
lcall
mov
adc
mov
push
cld
daa
inc
test
pop
sbb
pop
imul
ja
jns
fbld
cld
mov
sub
pop
sub
lods
stc
outsb
iret
in
aam
pop
sbb
lret
out
jns
dec
js
arpl
jae
mov
add
fs
xchg
sbb
stos
daa
mov
in
sbb
imul
clc
sbb
mov
ja
fsubs
andl
add
xchg
dec
push
jmp
mov
flds
push
jno
jp
sub
xchg
xchg
and
mov
mov
or
mov
and
xor
cmp
call
or
dec
mov
jmp
fwait
add
or
xor
xchg
pop
cmp
inc
ss
mov
xor
call
pop
lahf
mov
gs
mov
push
scas
mov
fwait
pop
mov
xor
pop
mov
and
stos
pop
rep
add
es
mov
mov
popa
cld
dec
rcrl
jb
shll
jmp
or
jb
nop
jmp
popf
push
jns
scas
fpatan
ds
mov
enter
mov
mov
lret
jnp
xor
add
and
mov
mov
test
loopne
in
pop
sarb
hlt
mov
xchg
push
js
pop
ret
fsubl
hlt
sub
mov
add
mov
or
mov
jg
mov
jno
je
jbe
sbb
jge
leave
insb
mov
ret
mov
pop
loopne
dec
lds
and
fisubrs
pushl
xchg
and
mov
popf
pop
and
pop
sub
push
or
xor
fwait
sti
sarb
or
jp
inc
pushf
dec
sbb
push
add
and
mov
and
mov
outsl
jne
mov
or
jge
dec
add
push
jmp
cmc
mov
push
jae
add
sub
jno
cmpsb
aas
xchg
jae
rclb
ror
inc
inc
cmp
lret
push
dec
loope
les
and
mov
push
into
ds
xor
sub
mov
outsl
dec
orl
adc
jnp
mov
xchg
adc
pop
ljmp
daa
rcl
ja
pop
ret
je
ljmp
fxam
in
sub
mov
out
and
adc
mov
pop
jl
mov
cmp
cltd
mov
cs
cmp
mov
inc
mov
fdiv
ja
cmp
movsb
jl
aad
ret
and
add
lods
imul
fwait
inc
mov
mov
push
jmp
mov
lret
lods
xor
push
adc
xor
clc
mov
xchg
inc
aas
xchg
pop
sub
in
inc
arpl
mov
xor
das
jmp
pusha
mov
popf
push
stos
fistps
pushf
mov
std
ja
sub
icebp
pusha
dec
inc
mov
lahf
mov
sti
lods
addr16
loope
inc
sahf
sbb
push
sarl
cmp
pmaddwd
ss
mov
cmpsb
mov
pop
add
cli
push
mov
pop
mov
inc
mov
int
repz
fs
pop
jmp
push
insl
cmp
push
dec
jns
mov
and
push
mov
mov
pushf
push
fnstenv
orb
loope
jle
add
dec
pop
fildl
jecxz
push
mov
out
orb
in
mull
inc
gs
faddl
add
xchg
out
and
cli
or
sub
dec
sub
mov
icebp
movsb
hlt
js
sub
loop
jg
push
xor
push
mov
mov
lea
add
add
ljmp
lods
push
xor
cli
push
repnz
add
and
lahf
movsl
mov
out
movb
int3
repnz
sbb
imul
lods
pop
repz
lock
pop
ret
nop
push
and
pop
dec
lods
test
adc
lea
xor
fdivl
pop
mov
call
jle
ja
pushf
cmp
jg
xlat
cmp
loope
negb
xchg
xchg
mov
mov
sbb
sbb
outsl
test
pop
jmp
and
lcall
cltd
ljmp
mov
inc
mov
jmp
pushf
rolb
loop
sahf
sbb
mov
icebp
inc
inc
jno
inc
dec
xchg
movsl
sbb
and
mov
or
add
jp
sti
lret
or
in
and
dec
dec
jmp
stc
or
mov
inc
ficoms
sarb
dec
mov
jge
ret
cmp
dec
xor
ljmp
lods
sbb
fsub
sahf
in
pop
xor
fs
add
iret
pushf
enter
shl
pop
pop
adc
jne
imul
ds
pop
jle
out
pop
cmp
sub
cmp
fildl
leave
xor
pop
dec
loopne
loope
push
cmp
fldcw
icebp
push
stos
mov
lods
sbb
jl
mov
mov
repz
mov
mov
mov
push
in
xor
roll
jle
pop
out
sbb
jne
mulb
inc
push
ret
sbb
lods
sar
nop
loope
pop
sbbb
mov
call
imul
hlt
aas
stos
mov
test
testb
jle
icebp
mov
roll
lret
ficomps
sbb
insl
mov
loop
mov
pop
and
mov
or
xlat
and
add
push
repz
inc
xchg
cld
adc
pop
sbb
mov
mov
div
bound
dec
cwtl
mov
in
push
sti
push
std
jne
fistpl
xchg
lods
xor
and
jmp
fdivrl
mov
sub
add
pop
ret
sbb
sahf
pop
fs
jae
scas
loope
mov
push
push
xor
movsl
pushf
out
cld
icebp
xor
add
sub
jb
or
mov
pop
arpl
test
mov
mov
lea
arpl
into
in
xchg
xchg
xor
and
js
in
orb
nop
es
shrb
inc
sub
mov
push
dec
ret
xor
mov
movsb
jne
pop
dec
mov
xlat
lcall
daa
pop
fimuls
ficoml
sbb
adc
fsubl
jmp
mov
in
lock
xchg
xchg
add
rcrl
push
sub
lock
int
push
xchg
fistps
mov
and
mov
jmp
test
mov
addb
dec
jnp
add
xchg
rorl
mov
into
fidivrs
test
xor
push
mov
aaa
or
pop
insb
movsb
pushf
dec
clc
lahf
daa
stos
test
sahf
pop
adc
inc
loop
test
pop
jecxz
test
test
pushf
mov
adc
out
xor
aaa
pop
or
add
adc
push
rorb
mov
movsb
test
out
into
lcall
sub
mov
fwait
pop
mov
xchg
add
ds
jno
lds
imul
sahf
add
gs
jl
adc
rcll
jno
xlat
mov
rclb
dec
pushf
mov
jbe
lea
aad
stos
icebp
jne
cltd
inc
rol
sti
add
cwtl
ret
xchg
repnz
cmpsl
rolb
repnz
pop
lcall
lret
sbb
jge
xchg
add
jbe
add
xchg
jecxz
and
lcall
mov
inc
in
sbb
int3
cli
cmc
lahf
cmp
sub
dec
cld
xchg
sete
cmp
xchg
inc
mov
jle
pushf
mov
pop
mov
lock
fs
stc
dec
aad
fiaddl
xchg
pop
sub
xor
xlat
jge
fldl
xchg
loopne
and
mov
pop
divl
push
test
aad
ret
or
or
pop
and
pusha
mov
xchg
add
inc
sbb
rclb
fstpl
jecxz
ljmp
add
push
sbb
push
pop
fwait
jp
sahf
jo
out
mov
add
enter
jns
fidivrl
push
jbe
iret
mov
jae
sbb
or
cltd
loope
data16
fcmovnbe
xchg
sbb
push
int
mov
ret
out
outsb
iret
movsl
aad
xchg
or
repnz
repnz
or
xchg
hlt
pop
loopne
aam
not
mov
cmc
xor
popf
sarl
cld
mov
insb
sub
or
rcll
sub
test
mov
mov
add
paddw
pop
and
call
mov
dec
pop
mov
lods
gs
in
pop
fdivrs
test
jle
mov
push
mov
cmp
mov
jecxz
mov
pop
push
aam
fsub
push
pop
push
jl
stos
xchg
fcmovnb
inc
cmp
mov
in
mov
inc
jnp
lods
ret
add
andb
push
pop
push
mov
bnd
mov
or
out
mov
sbb
mov
add
jmp
loop
scas
push
or
mov
js
sub
ret
cmp
incl
add
jp
fcmovbe
fwait
std
mov
cmp
popf
jl
ret
add
or
dec
leave
push
lods
cmpsl
lods
mov
neg
add
pop
out
insl
sbb
outsb
mov
rorb
fucomp
movsl
mov
jecxz
scas
bound
fildl
or
mov
mov
jo
popa
inc
repnz
push
and
sub
push
popf
adc
test
leave
xlat
and
negl
jne
sbb
in
dec
test
pop
iret
adc
stc
cs
sub
inc
sub
add
int
pop
fcmove
fmul
fstpt
mov
sub
or
and
adc
ret
loop
dec
lcall
outsb
fnstenv
leave
into
push
out
adc
or
bound
sub
rolb
inc
es
push
adc
fs
out
cmp
int3
scas
cltd
loopne
notl
cld
rorb
fldcw
pop
mov
iret
mov
aam
enter
subb
pop
mov
in
dec
dec
push
push
and
cmpl
ss
mov
dec
push
movsl
fsubp
cli
sbb
or
lods
test
shl
daa
gs
push
lret
cmc
bound
sub
jnp
xor
shl
iret
lahf
add
lods
xchg
push
mov
outsl
lret
add
cmp
push
pop
adc
inc
les
jne
add
push
dec
aam
dec
fbld
fdivl
xor
aam
stc
xchg
mov
pop
jg
jns
push
cmp
inc
push
in
ds
cmp
xor
pop
push
sbb
inc
lea
jl
xor
aaa
lret
das
push
scas
enter
lds
mov
leave
loope
mov
icebp
notl
or
dec
adc
es
nop
daa
mov
or
mov
dec
jns
js
adc
cmp
xorb
outsb
stos
inc
addr16
mov
mov
fidivrl
sub
pop
dec
jl
pop
jg
push
bound
jbe
lock
mov
and
and
cmp
pop
xor
add
push
loop
fnstenv
shl
movsl
sbb
daa
inc
movsb
sbb
xor
cmp
rcrb
aad
xchg
ds
emms
push
orl
stos
jo
xchg
or
lcall
mov
lahf
jmp
test
dec
out
mov
xchg
cwtl
insb
and
pop
imul
out
pop
add
or
mov
xor
sub
mov
into
clc
cmp
call
cs
or
jg
jmp
test
cmp
xchg
inc
add
arpl
and
cmp
lea
push
int
daa
lcall
push
fcmovu
push
sti
rcll
or
lret
dec
js
sub
mov
sbb
cltd
lea
jns
xor
movsb
mov
mov
fs
cmp
outsl
jmp
out
sub
dec
je
enter
shrb
push
scas
dec
sub
add
push
les
adc
push
lret
xchg
xchg
cmp
testl
xchg
jo
aad
lods
daa
ror
and
jge
push
push
push
cmp
inc
frstor
sub
xchg
mov
movsb
lea
xchg
mov
out
andl
rcl
lcall
push
push
xchg
cltd
sbb
aad
js
stos
add
in
sbb
mov
imul
loope
rcr
cli
xchg
add
push
fstpl
aas
and
push
adc
adc
jge
js
sub
cmp
push
bound
cli
jo
and
in
popf
dec
aaa
xchg
xchg
or
loopne
arpl
mov
and
jle
jae
adc
icebp
cwtl
xor
inc
pusha
repz
sbb
das
pop
test
mov
rolb
mov
pop
cmpsb
jb
enter
repnz
pop
inc
cmpsb
stos
push
sti
ret
test
mov
ret
inc
shlb
out
push
xchg
mov
test
jo
mov
inc
xor
xchg
push
divb
fs
push
jp
in
js
adc
test
out
pop
loop
push
or
jl
lds
cli
fmull
cmp
adc
mov
out
mov
stos
aad
push
push
je
jecxz
dec
sbb
cmpsb
loop
ljmp
push
sub
sbb
fstps
cwtl
insb
sbb
sbb
xchg
pop
cmp
inc
aam
sub
sbbb
pop
popf
sbb
push
loope
and
jg
ss
in
mov
fsubrs
push
test
adc
stos
cmp
lcall
push
pop
xor
mov
push
test
mov
xchg
xor
and
jg
mov
jae
and
pxor
test
pop
rclb
ret
nop
pop
mov
scas
jne
pushf
cmpsb
xlat
mov
insb
pusha
dec
andb
pop
lahf
sbb
imul
dec
dec
jmp
and
loope
cli
mov
jnp
cltd
popf
jl
jne
int
lret
inc
outsb
insb
sub
call
push
cltd
sub
outsl
mov
and
cmp
or
jg
dec
add
mov
imul
in
mov
jp
mov
mov
inc
inc
loop
scas
jecxz
xchg
mov
in
lods
pop
dec
push
cmpsb
push
dec
adc
ret
jmp
pop
insb
mov
icebp
mov
in
out
xchg
notl
xlat
fisttpl
stc
pop
mov
orb
sub
lcall
repz
xchg
fwait
aad
rorb
jge
dec
jecxz
divb
cli
sub
xchg
pop
clc
mov
inc
leave
movsl
fdivrs
mov
push
pop
inc
inc
test
dec
dec
hlt
push
pop
adc
mov
mov
jo
daa
dec
mov
iret
xchg
push
rcrl
sub
in
push
fdivs
cmpb
lods
mov
outsl
sbb
cmp
or
arpl
pop
shrb
jns
mov
addr16
aas
cmp
movsb
fmuls
push
dec
push
cmpsb
repz
or
xchg
mov
inc
inc
loope
add
mov
jne
xlat
test
mov
xchg
and
mov
cli
lret
xor
jnp
jmp
dec
jmp
test
outsl
push
cmp
es
xchg
cmp
loope
push
dec
cmp
mov
test
xor
nop
xchg
insb
inc
in
jle
outsl
or
sbb
cwtl
mov
mov
test
loope
cmp
arpl
ret
loope
xor
ja
fsubrs
es
test
cmp
xorl
das
fwait
pop
arpl
mov
xchg
je
out
popf
ss
adc
shr
sbb
pop
and
mov
mov
cmpsb
xor
mov
repz
fwait
and
jg
dec
hlt
adc
pop
sub
arpl
sub
test
jmp
dec
scas
push
push
pop
lods
xor
ficomps
inc
js
and
in
add
jl
push
dec
gs
add
fs
fstpl
lahf
mov
cmpsb
outsb
inc
pusha
aas
mov
sub
flds
into
bound
xchg
das
inc
sub
gs
out
add
pusha
icebp
push
ja
iret
xorb
call
fldl
dec
jl
call
and
sub
sbb
sbb
xorb
repnz
push
bound
and
into
std
dec
ror
int
popa
ss
test
lods
mov
lea
jnp
mov
stc
cmp
and
aam
and
in
hlt
jae
pop
std
std
add
add
mov
jae
push
enter
addl
xor
or
ljmp
roll
pop
test
adc
xchg
mov
scas
js
nop
xchg
hlt
repnz
xchg
int3
xchg
in
and
push
or
mov
pop
aam
cmp
and
data16
xchg
sbb
js
push
xchg
jne
fsubr
ja
fstps
or
lds
jbe
ljmp
aas
mulb
rol
mov
leave
std
xchg
shl
mov
outsb
cli
movsl
jp
fimuls
outsb
fcoml
mov
add
adcb
dec
fcoms
cmp
add
fnstsw
mov
mov
notl
cmp
into
xor
inc
mov
push
push
jns
mov
sub
mov
mov
add
clc
dec
mov
xchg
insl
leave
and
aad
inc
cli
fmull
clc
mov
lahf
sbb
pop
add
leave
fimull
int3
inc
mov
fsub
pop
popf
rclb
xor
stc
mov
sub
ljmp
loope
mov
mov
imul
or
loopne
xchg
push
iret
loop
mull
sbb
sti
cltd
icebp
adc
pop
add
xchg
ficoms
fldl
outsl
imul
sub
cmpb
xorl
out
adc
or
ret
dec
ret
pop
xchg
stos
rorl
add
sbb
aad
mov
cs
xor
mov
ret
stos
mov
dec
dec
ljmp
jne
js
mov
xlat
mov
mov
sub
popf
fistl
push
dec
pmaddwd
jae
bound
add
mov
mov
xchg
into
inc
lds
ss
icebp
mov
in
and
jmp
in
roll
mov
in
sbb
cmp
dec
adc
mov
dec
cltd
roll
jmp
fsubr
jg
ss
out
xchg
and
bound
movb
cmp
int
sub
popf
into
loopne
sub
xorl
adc
adc
cmp
fcomps
mov
mov
pop
aam
push
sub
cmp
roll
mov
insl
inc
add
inc
adc
sbb
lods
xchg
cmpsl
divl
jns
adc
ret
je
in
mov
pop
bswap
jmp
bnd
enter
stc
pop
mov
lret
push
mov
popa
xchg
push
or
jnp
stos
subl
jnp
add
arpl
outsb
mov
mov
rcrl
dec
repz
call
loopne
out
sub
jge
stos
or
int
sub
xchg
aad
add
test
xchg
inc
pop
pop
lcall
fwait
xor
lret
sbb
bound
mov
adc
ljmp
int
ret
movaps
aaa
lahf
fs
arpl
mov
scas
negb
jnp
mov
aaa
lods
insb
xchg
in
stos
push
fdivrl
dec
xchg
pop
xor
cmp
clc
hlt
cmp
cmpsl
xchg
push
in
push
inc
pop
rcrb
mov
xchg
dec
mov
mov
push
mov
cmp
xor
adc
pop
je
lret
out
push
jno
mov
insl
push
pop
es
test
push
jae
fcoms
sub
nop
iret
sub
jmp
jp
xor
or
repz
out
cmpb
or
repz
fcompl
sbb
xchg
cmpsl
push
xchg
dec
mov
and
pop
nop
and
xlat
stc
into
inc
mov
aam
push
ss
enter
or
popf
add
dec
jge
push
dec
mov
lods
les
jg
pop
and
xor
xchg
es
jae
fwait
or
dec
imull
xchg
push
cltd
insl
out
mov
rcrb
push
testb
test
jmp
imul
mov
and
sub
js
jl
int
out
out
lcall
mov
adc
mov
and
lock
les
pop
nop
inc
sarb
xor
call
dec
sbbb
loopne
inc
mov
inc
fsubr
mov
cwtl
add
pusha
sbb
scas
stc
add
mov
stos
mov
jl
rorb
cmc
or
jp
fs
cmpsb
call
adc
inc
enter
add
pop
cmpsb
addl
lcall
and
lods
mov
hlt
inc
fwait
mov
dec
pop
ss
insb
in
ja
pop
sahf
ret
jp
pop
cld
test
or
mov
mov
add
push
sbb
imul
xor
fidivrl
aas
cmp
mov
mov
inc
out
push
fimuls
popl
pop
jmp
icebp
adc
call
pop
sub
loop
mov
push
leave
subb
bound
int
cmp
fistpl
pop
dec
pushf
rcrb
jo
mov
and
in
pop
and
mov
pop
pop
and
stos
mov
je
mov
mov
mov
test
jne
rcll
lock
aam
or
sbb
dec
cmpsl
push
arpl
popa
add
cmc
cmp
mov
enter
popa
cmp
jmp
leave
push
xor
shlb
mov
mov
jbe
mov
arpl
xchg
movsl
repz
nop
mov
xchg
lods
movb
bound
pop
inc
adc
andl
aas
jnp
cwtl
xchg
aam
sahf
sub
aam
xchg
test
xor
loope
ret
jmp
cmovbe
fidivs
insb
sbb
mov
add
movsl
and
pop
hlt
inc
or
idivl
pop
xchg
mov
dec
mov
mov
pcmpgtw
std
mov
into
dec
lahf
stos
enter
cmp
gs
jno
call
lock
mov
dec
push
ljmp
imul
ja
dec
pop
add
dec
xchg
loope
sub
or
loope
divb
xor
mov
push
push
pop
outsb
jo
cmc
lret
inc
rolb
add
push
push
in
imul
rorl
int3
pop
adc
push
js
pushf
push
or
call
xacquire
repz
inc
push
fdivrs
repnz
cmp
ss
dec
sbb
fisubl
cli
xorl
loop
xadd
sbb
out
iret
sbb
inc
jle
bound
popa
dec
popa
sbb
jae
pop
dec
inc
sub
mov
jae
clc
jg
movsb
sbb
cld
mov
shrl
mov
inc
fistpll
mov
cmp
inc
inc
lock
or
enter
int3
sbb
push
out
or
cmp
jg
out
cs
adc
sbb
push
pop
fimull
cmp
pop
mov
jecxz
pop
xlat
iret
or
aam
and
out
std
jp
lahf
push
cmp
scas
xchg
mov
push
ret
sub
xchg
xchg
and
imul
pop
pop
mov
out
stos
mov
dec
xchg
nop
pop
add
mov
enter
mov
and
add
inc
push
inc
and
scas
das
xor
mov
add
test
mov
fcoms
pusha
add
push
into
out
jp
lods
push
or
data16
xor
lret
add
adc
sub
mov
cmpsb
add
push
cmp
mov
fdiv
sub
jbe
or
mov
fwait
inc
push
enter
mov
adc
and
outsl
ficoms
jbe
dec
insl
pop
jg
int
inc
inc
push
lods
mov
lods
sbb
push
mov
inc
repnz
inc
and
jae
stos
mov
js
outsl
out
out
add
jmp
mov
rolb
cmpsl
pop
les
lcall
or
pop
lret
js
addb
add
xchg
outsl
out
sbb
sbb
xor
fcomp
cmc
xor
sbb
sbb
push
sub
cmp
gs
pop
bound
insb
lcall
mov
scas
cmp
xor
icebp
ret
cmp
xlat
rcrb
or
negb
xchg
sub
popf
xor
mov
push
fisttps
imul
xlat
leave
cs
mov
in
cli
push
out
xlat
adc
in
shll
subb
movsb
decl
shlb
call
xchg
jbe
inc
sub
jno
mov
push
pop
nopl
pop
fistl
sbb
stc
cltd
mov
shll
cmpsb
xor
sbb
adc
out
lret
lds
push
out
sbb
adcl
rclb
fs
and
clc
sti
cmpsl
inc
lcall
sbb
shll
inc
jl
daa
mov
data16
mov
add
cmp
push
push
cmp
jg
daa
and
fmul
rcrb
fidivrs
jnp
mov
and
sar
mov
add
add
dec
mov
jmp
aas
lods
clc
mov
shrl
mov
nop
dec
lea
cmpl
ljmp
xchg
jmp
scas
lods
out
test
hlt
stos
out
push
loop
cmp
mov
jne
dec
or
jg,pt
mov
sbb
dec
outsl
jne
cmp
push
fs
sub
sbb
xor
lock
add
cmp
jno
loop
push
movsb
or
push
push
out
dec
or
mov
mov
idiv
xchg
dec
lock
pop
negl
aam
jnp
cmp
daa
test
iret
in
cmpsb
fsubl
aam
nop
mov
sarb
jp
fwait
dec
frstor
ja
pop
jmp
popf
push
cmp
in
pop
fdivl
mov
out
scas
sub
dec
clc
jp
addb
mov
insb
scas
push
adc
jbe
xor
adc
sahf
ljmp
insb
jbe
ljmp
in
outsw
mov
outsb
push
push
repnz
sbb
test
and
mov
or
add
mov
lret
jl
xlat
or
push
int3
in
cmp
in
sahf
ret
notb
loop
aad
data16
and
or
push
adc
cmp
jns
mov
cmpsb
test
jle
sub
pop
rcll
adc
jmp
jnp
sub
clc
jb
call
repz
in
cmp
out
jbe
push
sbb
lds
test
and
imul
rclb
inc
inc
adc
outsl
cmp
and
sti
sbb
or
xlat
icebp
sarl
fists
adc
cltd
shl
notl
pop
cmpsl
sub
xchg
call
enter
es
fincstp
andb
dec
pushf
add
xchg
push
lods
mov
sub
outsl
test
rcl
xchg
stos
mov
mulb
lock
sub
divb
mov
sub
fwait
cmp
cmpsb
fisubs
adc
xor
xchg
inc
shrl
dec
inc
ds
pop
lahf
mov
daa
jp
inc
in
mov
out
mov
test
int
xorl
cmp
xor
push
push
jno
adc
shrb
scas
push
ds
pop
lahf
xor
pusha
adc
cld
push
add
lret
je
std
std
pop
jnp
add
imul
cld
cmc
sahf
pop
push
jo
xor
sbb
sub
test
sub
pusha
sti
sub
or
loope
jno
mov
enter
jecxz
xor
aaa
sbb
or
mov
xorb
push
sbb
mov
loope
xor
push
pop
mov
shlb
pushf
iret
inc
cmp
push
sbb
cltd
test
lea
and
push
jle
pop
jmp
push
mov
jmp
mov
in
ss
insb
push
ljmp
stos
mov
insb
scas
inc
call
mov
sbb
xchg
and
repnz
addb
dec
dec
out
mov
mov
xchg
sub
jne
icebp
adc
mov
out
test
rolb
lds
xchg
clc
and
sbb
loop
push
popf
push
insl
pop
pop
xor
adc
loop
push
cmp
aam
sbb
popf
dec
fsts
add
pusha
enter
push
out
subb
test
sbb
lea
push
insl
fs
lea
mov
movsb
sbb
xor
dec
mov
or
rcrb
int
dec
push
jns
std
aad
ret
rclb
les
cmp
pop
push
push
cmp
mov
sub
clc
pop
xor
lods
mov
jae
pop
xchg
adc
mov
aas
fs
imul
in
leave
push
sub
std
jns
jbe
cmpl
xor
mov
pop
push
push
cmp
cmp
addr16
push
or
xor
pop
inc
adc
stc
jbe
outsb
fwait
shlb
push
xor
ds
inc
jbe
ffreep
sti
je
mov
int3
push
je
and
repnz
lret
lcall
daa
rcrb
std
sarl
adc
mov
inc
pop
xchg
sub
sub
aam
lods
sub
cmpsb
sub
popa
pop
sub
add
sub
scas
push
or
std
mov
sub
add
xchg
sub
xchg
inc
and
xchg
cmp
mov
test
mov
stos
ljmp
popf
xchg
push
or
out
mov
insl
insb
lods
cmp
imul
or
aaa
stos
xchg
xor
enter
push
mov
inc
jne
xchg
adc
adc
les
or
loope
ja
adc
aas
jb
test
push
mov
sub
les
and
push
push
lret
lds
mov
push
cmp
imul
aas
jl
jmp
push
clc
or
sub
cmp
xchg
fsubrl
negb
adc
and
sub
call
clc
xor
es
cs
mov
adc
imul
xor
jne
aad
les
fwait
out
pop
scas
xor
mov
add
add
fisttpll
xor
inc
lret
fimuls
push
ds
mov
ret
mov
sub
outsb
loop
dec
lock
adc
outsb
call
mov
sbb
jecxz
xlat
inc
ret
scas
sti
cmp
mov
clc
adc
cmp
sbb
dec
jle
and
fs
jmp
mov
xor
mov
mov
mulb
xchg
mov
lods
fsubr
gs
ret
clc
xchg
push
push
mov
xor
dec
sahf
rol
in
xchg
mov
push
sbb
dec
jnp
mov
cs
stos
cmp
push
lods
mov
shr
in
pusha
dec
inc
in
jo
arpl
sub
pop
inc
ss
lahf
inc
inc
iret
data16
imul
in
adc
xchg
fcmovnb
push
out
das
repnz
push
jno
sbbb
pop
jle
inc
lcall
push
rcrl
mov
jl
inc
jp
in
mov
sbb
push
jecxz
adc
lods
mov
rcl
insl
jne
push
fs
jl
fcoml
insb
inc
lds
int3
cli
pusha
cltd
cli
mov
mov
xchg
or
xor
mov
fisubrs
push
pop
mov
fldcw
clc
testl
movsl
dec
pop
sti
addb
imul
nop
loopne
or
subb
inc
inc
lcall
loopne
mov
frndint
lock
dec
fildll
add
orb
mov
xchg
int
stc
in
into
bound
out
inc
xor
out
push
jmp
xchg
xchg
pusha
sub
cld
sbb
aas
xor
data16
sahf
hlt
jle
pop
cmc
imul
es
popa
stc
mov
fcmovne
xchg
cli
imul
xchg
imul
lcall
mov
scas
lret
scas
les
inc
sub
mov
data16
adc
sbb
push
fsubrp
cmp
loop
cmp
add
pop
adc
pop
sahf
push
jne
pop
mov
sbb
or
imul
mov
mov
sti
std
push
mov
sub
lds
mov
jl
notb
icebp
ja
shr
mov
mov
sbb
fs
add
sbb
pop
cmpsl
pop
fmuls
push
mov
mov
dec
sahf
mov
mov
mulb
in
jo
xor
and
les
and
rcrl
in
mov
mov
jo
test
cmp
lea
shll
mov
int
lods
sbbb
insb
lods
mov
cmpsl
mov
inc
rolb
jecxz
and
push
testl
and
dec
xchg
lods
pop
pop
push
fnstcw
lahf
ja
mov
hlt
popa
mov
into
push
lret
inc
imul
in
das
fwait
sub
stos
xor
xchg
scas
mov
jno
adc
in
fs
sub
bound
sbb
mov
xchg
push
pop
sbb
loopne
imul
ret
mov
xchg
pop
stos
jg
push
push
sub
mov
test
test
pop
mov
nop
lea
adc
stos
pop
dec
sub
and
inc
bound
ds
fldcw
pop
sub
inc
sub
adc
cwtl
dec
mov
movsb
jb
cmc
mov
cltd
stos
push
adc
push
pop
loop
push
lods
fst
inc
jbe
inc
dec
pop
mov
movntq
sub
jmp
in
leave
mov
push
inc
aad
add
decb
cmp
pushl
stos
insb
pop
aad
das
sub
les
in
jb
mov
mov
aam
cltd
ss
arpl
ret
xchg
xor
test
sbb
mov
sub
aam
push
pop
xchg
jg
mov
inc
push
adc
iret
add
pop
or
scas
movsb
mov
dec
add
sub
sub
cmpsb
sub
and
mov
ljmp
mov
loop
lret
push
fidivrs
mov
or
dec
push
adc
mov
data16
lahf
mov
loope
pop
push
cmp
push
cmp
push
les
sahf
sbb
pop
call
jne
repz
shl
mov
js
inc
addr16
stc
pop
dec
adc
pop
fimull
mov
dec
ds
pop
add
jns
je
mov
dec
and
mov
xor
ds
mov
jae
and
and
adcl
ret
xchg
mov
jbe
cmp
jns
mov
sbb
sub
stos
mov
xchg
arpl
int
fists
loope
cmc
stc
and
cwtl
in
sub
mov
mov
and
sbb
test
mov
fildll
and
neg
xchg
cli
pop
mov
jg
aad
ret
sub
stos
adc
dec
mov
sbb
xor
in
or
cmpsl
rcrl
imul
push
add
jg
lea
fidivs
jnp
jne
xor
rcrl
fbstp
icebp
mov
js
int
mov
cmp
inc
test
mov
int3
icebp
or
data16
repnz
or
xor
xchg
idivl
pusha
push
cmpb
rolb
ljmp
mov
push
inc
or
push
lea
in
mov
pop
sbb
sbb
fwait
xor
inc
jmp
fidivrl
jb
in
pop
push
out
push
mov
fcmovnb
fcmovnbe
add
outsl
push
xchg
icebp
mov
ja
xchg
xchg
cs
adc
cmp
shlb
sahf
or
scas
inc
popf
jp
mov
cwtl
inc
outsl
pop
pop
out
or
pop
push
xor
insl
movsl
mov
pop
sub
das
call
adc
stos
mov
ds
sbb
out
aaa
adc
or
push
and
or
in
or
imul
lret
stc
pusha
je
mov
sbb
es
loope
push
dec
sti
push
or
xor
ljmp
jle
insl
jb
andb
addr16
mov
inc
iret
xor
ds
sub
push
xchg
push
inc
jg
mov
fwait
cmpsl
adc
fnclex
dec
mov
pop
pop
lea
test
push
inc
push
xchg
in
sti
movsl
dec
pop
jbe
mov
shl
fimuls
sub
pushf
test
pushf
mov
aaa
pop
xor
adc
xchg
insl
cmp
jl
pushl
dec
out
enter
nop
fisttps
cmp
adc
fmul
scas
enter
lahf
jno
add
push
sarb
inc
ljmp
aad
in
jmp
mov
sbb
ret
adc
arpl
mov
push
adc
rolb
popa
inc
imul
aam
loope
push
fldenv
shrl
mov
stos
enter
mov
data16
and
jne
mov
sbb
out
sbb
icebp
addps
es
adc
imul
dec
sub
mov
mov
testl
pop
mov
pop
pop
mov
aad
jae
ljmpw
mov
mov
js
out
push
cmp
xchg
daa
jns
sbb
pushf
rclb
fisttpl
cltd
sbb
mov
jecxz
xchg
out
out
jle
sti
clc
inc
cmp
loopne
outsl
mov
mov
lods
je
in
cmpsl
pop
push
scas
push
loope
sti
pushf
outsb
test
aas
dec
sarb
inc
xchg
mov
inc
je
mov
push
inc
popf
inc
fwait
sbb
push
sub
ja
dec
lds
out
cmp
cmc
xchg
inc
inc
pop
jo
push
pop
scas
in
imul
adc
cli
addr16
dec
fcoms
pop
int
pop
pop
les
scas
push
ljmp
adc
cs
lds
sub
testb
es
cmp
sbb
scas
and
les
mov
cmp
push
sbb
xor
das
push
mov
or
mov
sbb
jmp
push
mov
mov
sub
in
loope
add
add
pop
das
cmpsb
mov
sbb
mov
ss
pop
lods
cmpsb
sub
lea
lcall
xor
xlat
mov
mov
mov
adc
out
rcr
adc
mov
jae
xchg
sub
out
xorb
or
mov
xchg
ret
or
dec
fsubl
fidivs
cmp
loopne
jmp
incb
sub
lods
rorl
dec
add
mov
xchg
push
movl
divl
inc
arpl
dec
add
cmp
pop
pop
and
fs
push
test
cltd
mov
shll
nop
inc
inc
jnp
mov
mov
mov
fs
cmp
flds
and
jecxz
js
sbb
testb
test
inc
push
or
mov
les
pop
in
lock
mov
lret
pop
call
mov
cmp
adc
mov
jp
pop
lahf
js
popf
aaa
push
popa
data16
inc
adc
adc
pop
cmpsb
pop
cwtl
lods
xor
pusha
pop
lahf
push
andb
add
in
push
lcall
fimuls
aad
mov
sbb
adc
shll
and
adc
inc
cmc
fmul
int3
xlat
cld
pop
mov
sub
pop
addl
mov
or
mov
cmp
or
mov
adc
mov
ja
insl
add
xchg
test
mov
xchg
cld
and
dec
imul
and
lea
mov
add
pop
ja
xchg
jo
add
in
or
xor
push
sbb
lea
out
xchg
mov
lcall
sub
cmc
xchg
add
sbb
sbb
add
popf
orb
out
jae
fnstcw
loope
xchg
rclb
jl
xchg
pop
popa
xorb
or
scas
sbb
sbb
test
mov
imul
test
fsubl
sbbl
xchg
scas
orl
push
pop
std
fwait
cltd
push
cs
or
icebp
repnz
std
inc
jno
es
lahf
add
fistpl
adc
in
test
and
jmp
pop
and
repnz
push
mov
je
jg
push
rorl
cmpsb
inc
adc
inc
popa
inc
xor
cwtl
data16
cmp
jl
mov
enter
roll
notl
xchg
mov
scas
mov
call
dec
jle
aam
sbb
jmp
cmp
cmc
lds
and
loopne
aam
int3
xchg
sbb
mov
mov
jl
or
push
data16
mov
notb
loopne
inc
push
test
nop
js
mov
mov
or
nop
loop
pop
jae
fs
mov
mov
imul
gs
adc
inc
outsl
outsl
pop
mov
fwait
ret
push
iret
mov
mov
out
add
cli
out
aas
lds
push
or
sub
sub
jae
repnz
aas
mov
dec
adc
movsl
addl
fwait
and
je
sahf
pop
daa
push
jb
ret
pop
adc
adc
or
ljmp
push
sbb
lret
fisubrl
lret
adc
jb
sahf
pop
mov
cmpsl
pop
data16
mov
sahf
out
hlt
mov
inc
ja
sub
dec
push
int
fidivs
imul
push
fs
sub
cmpsb
push
lcall
sbbl
sahf
aaa
xor
lcall
fwait
aas
daa
jg
and
call
cmp
cmp
nop
inc
pop
popf
adc
lcall
xchg
xchg
fldl
push
les
push
mov
cmpb
pop
pop
bound
xor
jne
incb
sahf
pop
aad
outsb
push
mov
and
pop
leave
shlb
jg
inc
xor
das
push
push
mov
add
xor
daa
pop
or
lods
fcoms
aaa
das
mov
mov
cltd
push
sbb
inc
push
jge
adc
lods
sbbb
cwtl
sub
sahf
shlb
stos
std
cmp
aaa
mov
es
and
les
mov
mov
lock
aam
xchg
jle
flds
cmp
sbb
push
dec
cmp
sbb
lea
mov
and
xor
sub
dec
xor
addb
in
sbb
inc
fisubrs
out
and
jno
sub
pop
dec
ja
fs
loop
or
xor
push
add
adc
adc
add
mov
xchg
popa
ret
in
imul
fwait
rcll
mov
test
jne
push
fnsave
pushfw
ret
testb
lock
fsub
pop
mov
jp
outsb
mov
ja
add
jb
jg
inc
xchg
cmp
dec
aas
inc
and
mov
inc
or
inc
out
push
sbb
inc
movsb
sbbb
jne
mov
mov
jo
into
adc
loopne
pushf
in
data16
outsb
hlt
sbb
rcl
cmp
sahf
or
subb
repz
sub
ja
clc
mov
ficompl
cltd
push
out
cmp
mov
ficoms
aaa
lahf
std
outsb
xlat
or
mov
ficoms
jne
or
mov
mov
std
sbbb
out
in
add
filds
in
xchg
and
js
adc
push
lret
lds
inc
pop
clc
jbe
daa
sub
cmpsl
mov
xor
les
mov
add
ja
shr
lods
sbbb
jp
rcrl
dec
pop
lret
ss
in
std
scas
loop
call
mov
ud0
add
jnp
je
cld
push
cli
outsb
or
mov
or
neg
xchg
inc
or
pusha
xchg
or
pushf
imul
test
cmp
push
cmp
cmp
cltd
pop
fs
sarl
and
jle
scas
repnz
add
cmp
lahf
jns
sub
out
fldcw
lds
cmp
add
pop
sbb
cmp
jge
dec
cmp
repz
rep
mov
data16
jge
rolb
or
and
mov
fs
das
xchg
outsb
jb
jb
fisubrl
xor
cmp
jns
std
pop
aaa
out
xchg
pop
ja
mov
sub
adc
pop
rep
fs
ret
imul
xor
jnp
pop
popf
dec
das
mov
movsb
xor
movsb
cltd
leave
rorl
push
ret
subb
fnstcw
jno
mov
lea
jno
incl
add
leave
or
jb
fwait
jbe
mov
dec
hlt
fcomps
adc
out
sahf
add
xchg
mov
loope
inc
movmskps
in
mov
or
inc
or
push
and
jbe
in
lret
mov
sub
out
fbld
push
scas
loope
cmpb
inc
cmp
aam
out
sub
xor
dec
add
pop
inc
or
inc
xor
imul
and
adc
jmp
mov
pop
jg
popf
dec
cld
cmpsl
cmpsl
sbb
add
dec
mov
sbb
inc
loope
loopne
push
push
adc
sarl
lret
or
into
es
enter
lds
scas
test
dec
lods
fs
and
or
int
mov
sbb
lret
nop
inc
or
test
jno
pop
aad
or
jp
imul
adc
and
xchg
push
mov
mov
ficomps
in
push
inc
lock
pop
xchg
clc
mov
pop
mov
std
jmp
pushf
sbb
or
imul
nop
mov
push
aad
add
xchg
jne
xchg
shl
inc
int3
pop
jp
test
loope
daa
or
jecxz
mov
dec
in
jge
leave
stos
les
pop
pop
call
fsqrt
or
into
pop
gs
xchg
cmp
lods
or
dec
jl
sbbb
es
test
mov
lods
aam
push
xor
lods
aaa
pop
test
xor
pop
test
jge
xchg
js
test
sbb
sub
add
sbb
xor
inc
cmpsl
pop
sbb
sub
jmp
movsb
pop
push
aad
pop
in
lret
sub
xchg
icebp
xchg
xchg
faddp
push
mov
popf
test
dec
mov
clc
sbb
dec
sub
xchg
sahf
jmp
inc
addl
xor
jecxz
pusha
cltd
adc
mov
fldl2t
adc
arpl
int3
mov
int
loope
jne
adc
inc
adc
jmp
mov
fidivrs
adc
data16
jo
bound
iret
mov
mov
inc
xchg
dec
mov
adc
xor
addr16
lds
xchg
mov
sbb
lods
jbe
int
jb
push
xchg
or
iret
mov
mov
jb
scas
imul
xchg
popf
loopne
jmp
push
insb
jmp
iret
push
sarl
dec
jns
add
sub
xchg
hlt
jp
cmpsb
sti
pop
fsubl
cmpsl
lods
jge
inc
xchg
cmpsl
pop
lods
sbb
movsl
loope
negb
loopne
jge
push
fidivrs
rol
popa
out
mov
hlt
jae
data16
pushf
rol
jns
dec
shlb
mov
shll
pusha
stos
inc
loopne
mov
ficoml
xchg
hlt
shrl
and
sub
outsb
cwtl
in
mov
mov
mov
jb
filds
pop
iret
adc
out
lds
jmp
adc
scas
imul
out
jne
stc
test
cwtl
sbb
xor
and
or
inc
pop
push
lods
and
mov
nop
ret
rol
adc
clc
fcoml
push
cs
dec
mov
sbbb
sub
addl
loope
xchg
cs
mov
aas
pop
mov
sub
mov
mov
dec
lock
ljmp
cmpsb
dec
cmp
xor
ja
xor
or
xchg
sbb
leave
jo
cltd
xor
or
mov
imul
mov
pop
mov
xchg
stc
push
mov
je
add
mov
push
push
push
inc
in
stos
insb
fimull
ds
sbb
push
scas
scas
push
adc
cmp
mov
aad
sbb
push
std
xchg
repz
inc
sub
rorl
push
lods
mov
xchg
adc
loope
fld
mov
xlat
inc
cld
dec
ret
jno
jbe
cmp
push
aam
leave
pop
gs
jne
cltd
gs
lock
pop
mov
repz
pop
mov
jecxz
push
xchg
fildl
pop
ret
mov
jl
ds
cmp
je
lods
xor
aad
jl
sub
fs
cmp
mov
or
bound
enter
cwtl
lahf
leave
or
mov
addb
mov
mov
jnp
mov
jae
pop
xor
push
fnstsw
repnz
ss
jmp
cmp
cltd
xchg
gs
cld
test
xlat
pop
or
push
xchg
imul
in
mov
or
ficoms
lcall
lds
incb
xor
sarb
mov
jp
jge
rcrb
sbb
jns
lahf
std
sub
out
lods
test
mov
call
xor
lret
adc
les
bound
mov
lock
inc
daa
scas
es
addb
sub
push
xchg
mov
into
lock
out
adc
cld
in
mov
cmp
aaa
cmp
out
sub
dec
sub
xor
sbb
add
add
mov
xchg
and
and
sbbb
pop
divb
push
dec
adc
loopne
int3
jle
push
adc
pop
sahf
ret
push
shlb
leave
xor
das
int3
or
pop
loop
sub
das
rol
jo
fcompl
mov
sbb
dec
add
inc
sub
bound
into
xchg
mov
push
cs
jmp
out
loopne
stos
lcall
lea
fsubrl
push
or
xchg
adc
xchg
in
jae
jne
jl
xchg
push
xchg
test
xchg
repz
sbb
fnstenv
mov
movsb
cmp
push
pop
jno
loop
test
xor
cmp
pop
fwait
hlt
decl
xchg
insl
fs
mov
mov
jb
xor
jbe
ret
dec
js
inc
lret
shlb
push
adc
rcl
xchg
aas
std
loop
sbb
push
aam
jne
add
or
data16
das
daa
xchg
mov
dec
movsl
out
fwait
repz
ret
push
xchg
mov
mov
pop
mov
paddusw
or
cltd
pop
adc
mov
nop
xchg
cmp
sbb
and
mov
das
inc
xchg
jns
daa
jbe
push
sarl
mov
adc
nop
rolb
shl
and
sbb
out
rolb
subb
cmc
lahf
je
xchg
jg
jecxz
sub
lcall
xchg
clc
icebp
popf
inc
aas
test
sbb
mov
loope
mov
inc
mov
clc
fistpll
sub
inc
xlat
dec
xchg
or
insb
int3
sbb
mov
push
sub
outsb
dec
add
mov
add
popf
and
push
sub
xchg
sub
dec
sub
sar
push
push
xchg
mov
js
mov
orb
mov
jecxz
das
lods
ficoms
mov
xor
fiadds
hlt
mov
rol
int3
test
inc
loope
push
mov
lock
popa
movsl
mov
jnp
outsl
ljmp
ljmp
adc
in
inc
pop
push
mov
add
test
imul
in
fs
popa
shll
pop
cmp
insb
mov
and
pop
adc
and
nop
add
xor
ret
out
call
push
lock
cmp
xor
test
imul
and
test
xchg
and
and
xchg
mov
or
jno
pop
cmp
dec
stos
push
jmp
add
cmp
inc
aaa
lock
movsb
dec
cmp
movsl
lods
mov
add
cs
and
and
or
bound
ljmp
faddl
dec
scas
and
xchg
roll
push
pop
ret
or
adc
sti
hlt
xor
lods
frstor
loope
dec
sub
add
push
sbb
nop
inc
dec
adc
sbb
pop
inc
int
dec
and
pop
mov
out
sub
repnz
sub
jns
adc
mov
imul
out
insb
mov
lock
imul
ret
sub
mov
enter
push
xchg
js
cltd
es
add
cltd
loopne
xchg
jae
push
inc
cmp
shll
mov
pop
mov
popf
and
outsl
push
xchg
xchg
ret
ficoms
sub
xchg
fwait
test
orl
icebp
xor
dec
adc
and
push
mov
cmpsl
sbb
mov
jmp
pop
or
push
push
push
test
outsb
lret
neg
inc
mov
cltd
in
das
pop
popa
mov
gs
test
or
subb
inc
inc
mov
roll
stc
fmuls
or
pop
sbb
and
mov
jmp
xchg
jno
pop
aas
das
cmc
inc
sbb
mov
scas
cmp
test
cmp
jge
int
das
in
les
outsb
ja
fwait
mov
lret
mov
test
out
ja
push
fsubs
dec
mov
push
lods
movzbl
sub
pop
and
inc
mov
cli
sub
mov
aam
mov
mov
stc
dec
xchg
les
insl
icebp
icebp
mov
add
mov
inc
cmpsl
or
imul
fcoms
xlat
daa
out
arpl
gs
xchg
mov
adc
add
sti
dec
xchg
mov
mov
mov
cmp
pop
push
lahf
insl
std
cwtl
mov
and
into
push
jo
or
push
mov
ret
jg
stos
mov
mov
pop
cmp
cmp
mov
mov
mov
mov
inc
xchg
call
jmp
test
lods
fiaddl
xchg
jge
dec
mov
les
jg
fadds
lea
mov
and
lods
cmp
cld
lcall
dec
mov
sbb
and
pop
movl
int3
outsb
dec
jle
xchg
jl
lea
arpl
notb
sbb
lods
sbb
push
stc
mov
cmpsb
push
pop
insb
inc
imul
pop
lret
add
sbb
push
in
mov
adc
nop
test
cmp
scas
or
and
jnp
idiv
loop
mov
mov
loope
aaa
jo
pop
imull
jns
loope
xorb
leave
adcl
xchg
mov
cmp
out
imul
or
ss
push
xchg
ss
loopne
out
stc
jmp
lock
adc
push
imul
and
dec
mov
inc
mov
or
dec
shrl
sbb
repz
js
test
int3
push
lock
cmp
cmp
test
sbb
xchg
add
mov
jg
ljmp
inc
insb
stos
fs
add
outsb
or
xchg
cli
je
dec
lret
pop
xor
iret
pusha
pop
sbb
repnz
mov
xor
push
xchg
in
movsb
mov
icebp
jne
in
fisubl
hlt
and
pop
rol
outsl
jmp
sub
lret
mov
fimuls
xor
lcall
push
dec
add
or
sarb
outsl
stos
xchg
std
push
sbb
in
rorl
sub
fdivrl
mov
jo
and
in
add
jge
repz
outsb
and
cmp
inc
cwtl
leave
jle
and
sbb
fisttpl
or
imul
out
scas
push
shl
call
movsl
sbb
and
ret
movsl
dec
nop
cltd
sub
fdivs
clc
mov
push
or
outsl
pop
pop
mov
fcom
jl
adc
test
adc
mov
sub
mov
fstp
fldln2
and
xchg
push
mov
cmp
cmp
mov
test
inc
sbb
dec
xor
add
pop
sbb
mov
sub
adc
jns
fisttps
push
cmc
ss
loop
in
mov
mov
ret
cmpb
xor
jecxz
jle
xchg
push
incb
mov
cmpsb
sbb
sbb
sbb
sbb
es
push
fistpll
cmp
jmp
orb
mov
jge
xchg
xchg
jns
mov
xchg
outsb
rclb
xchg
rcrb
pop
loope
shrb
cmp
pop
mov
pop
lods
lock
push
repnz
push
stc
pop
push
je
icebp
hlt
xchg
dec
mov
aas
jle
sub
add
xor
inc
mov
xor
scas
mov
ja
mov
and
pop
mov
clc
fs
test
push
into
rorl
add
inc
popa
xchg
loop
orb
mul
aad
cwtl
mov
sbb
stos
in
dec
fidivrl
jb
clc
mov
push
jg
hlt
ds
cwtl
into
inc
mov
mov
in
mov
add
bound
cltd
test
mov
adc
leave
jns
mov
pop
arpl
push
ss
test
lock
inc
xor
and
inc
pop
in
lods
arpl
or
test
repnz
out
fwait
adc
test
mov
jo
sub
jl
fmull
sbb
inc
mov
sahf
or
lret
out
or
fldl
mov
aam
dec
ret
lret
iret
dec
xor
adc
xchg
das
nop
cmp
xchg
lock
mov
xor
outsb
mov
jb
mov
rol
push
insl
pop
aaa
sub
lret
dec
pop
push
ljmp
adc
or
neg
int
push
mov
sbb
adc
adcl
xor
add
xlat
jmp
adc
jae
cmp
aam
mov
jne
insb
sub
popf
cltd
adc
imul
mov
add
mov
pop
push
cmp
fsts
xlat
adc
xchg
enterw
notl
test
cmp
in
push
add
insl
mov
pushl
gs
ficoms
gs
inc
xor
loopne
sub
rorl
and
mov
stos
nop
push
xor
and
add
sub
addr16
mov
jbe
dec
loop
aaa
lret
mov
cmp
pop
jmp
test
mov
xchg
out
inc
dec
mov
scas
dec
hlt
push
add
or
jb
ljmp
loop
mov
and
roll
les
fdivrs
test
xchg
pop
in
lods
jne
or
cmp
xchg
mov
dec
stc
push
mov
inc
xchg
imull
mov
adc
ds
lahf
push
lret
xor
mov
sbb
xchg
mov
aad
cmp
sbb
mov
add
aad
xchg
sbb
mov
mov
outsb
sarl
push
push
xchg
and
mov
cld
xor
arpl
sub
pop
ss
lahf
dec
mov
adc
push
and
in
aaa
pop
mov
mov
lcall
pushf
mov
aad
test
dec
cmpsl
dec
je
in
dec
insl
adc
stc
xchg
inc
dec
mov
dec
xor
ljmp
jmp
sub
and
test
sahf
mov
adc
les
mov
adc
pop
insl
adc
out
rclb
sub
push
sub
jne
push
and
dec
iret
sub
add
cld
ss
pop
mov
incb
dec
xor
nop
or
mov
stc
scas
in
unpckhps
sub
orb
cmp
xchg
cwtl
jle
rol
sbb
stc
xchg
add
push
mov
pop
subb
fildl
ss
cmp
mov
imul
jbe
loope
jne
mov
mov
sub
or
and
arpl
and
sbb
fsubp
sbb
mov
dec
pop
js
out
sub
mov
mov
cltd
and
mov
jne
xor
jp
dec
popa
or
test
sarb
push
test
out
sbb
addl
pop
popf
push
sub
lret
inc
cld
dec
fistpl
push
pop
push
sbb
insb
outsb
ja
pop
sub
cwtl
fldln2
jb
stos
insb
jg
mov
test
bsf
push
cli
inc
adc
add
jb
in
ss
lahf
or
add
loop
jmp
pop
pop
push
arpl
sub
sbb
fisttpl
fidivrl
out
mov
pop
rcrl
push
jae
push
loop
cmp
sahf
rorl
pop
or
sub
inc
or
les
stos
dec
js
pop
nop
jns
cmp
adc
cmp
mov
fbstp
rcl
and
idiv
or
roll
enter
mov
mov
fs
add
mov
rorb
mov
sub
hlt
or
push
pop
add
mov
sbb
push
out
mov
fldl
mov
mov
enter
push
adc
mov
lods
mov
les
out
mov
es
pop
sub
lock
jecxz
sbb
and
jle
push
mov
mov
or
sbb
pop
movsb
jl
add
lret
repnz
stos
jg
stos
dec
aam
rorb
xor
mov
lock
repz
mov
mov
pop
sarb
xchg
icebp
shrl
scas
xor
adc
ret
in
mov
xchg
arpl
sub
pushf
orl
out
jbe
aas
sbb
pop
test
fisttpl
sbb
push
add
xor
gs
mov
inc
xor
inc
mov
sbb
xchg
frstor
adc
pop
and
scas
stos
xor
sub
sahf
jne
cmp
or
sbb
cs
out
cmp
and
jbe
jg
push
lods
adc
pop
xchg
jo
add
and
lock
subl
push
xlat
outsl
daa
pop
dec
dec
push
repz
sti
xchg
test
cmc
inc
es
dec
lock
mov
jle
sbb
mov
pop
leave
jo
mov
bound
mov
cs
jno
dec
inc
popa
rolb
push
mov
shlb
hlt
cmp
push
stos
les
fs
push
mov
sub
out
or
or
dec
cmpsb
rorb
ss
push
sbb
jns
add
repz
scas
or
rcll
neg
pause
jmp
popa
test
mov
lods
sub
hlt
jo
mov
daa
cwtl
push
lods
push
imul
bound
xchg
ficompl
lret
xor
int3
jmp
mov
sti
in
in
rorl
jae
fs
cmp
jae
mov
test
inc
pushl
cmp
bound
or
inc
sub
cltd
sbbl
lahf
push
filds
mov
gs
lea
loop
fidivl
insb
das
ja
pop
cmp
scas
dec
mov
xchg
push
xchg
shll
mov
sbb
xchg
push
popl
bts
sub
jae
pop
or
mov
inc
or
ja
call
mov
dec
in
or
cmp
xchg
mov
adc
scas
mov
sbb
ljmp
jecxz
aad
bound
xchg
lea
mov
aaa
sbb
stos
test
adc
cmp
jp
xlat
int
les
je
adc
stc
nop
push
outsl
fbld
cmc
decl
push
push
jb
jg
xchg
enter
int3
jno
fisttpll
popa
and
push
in
fisubrl
dec
push
push
ficoms
cmpsb
push
mov
ret
sub
mov
cmc
jge
or
mov
fdivs
mov
sbb
sti
dec
test
rorb
enter
adc
sbbl
mov
lea
aad
dec
jb
decl
fbld
mov
add
adc
sti
cwtl
push
std
and
sub
or
jo
lock
movsb
fsubrs
or
mov
and
out
cld
je
adc
popf
stc
mov
mov
jo
jp
and
jp
cmp
pop
cmc
mov
or
xchg
add
test
int
fs
flds
pushf
push
adc
xchg
adcl
mov
inc
ljmp
out
out
lds
pop
inc
aas
out
mov
pop
lcall
push
xchg
in
inc
in
int3
mov
dec
xor
cmpsb
dec
stc
and
in
adc
insb
pop
jge
sub
test
or
pop
xchg
push
mov
cmp
aam
fisubrs
dec
sbb
aas
shrb
mov
cmpsb
sahf
inc
imul
icebp
xor
push
fbstp
jae
push
out
js
jecxz
in
jae
jle
push
sti
aad
mov
testb
pop
xchg
fidivs
pop
in
insb
adc
jmp
mov
mov
repnz
pop
shr
mov
cmpsb
aas
inc
pop
lahf
or
std
mov
jp
and
jp
pop
aad
lock
mov
test
addl
sahf
stc
sbb
adc
xchg
push
xor
ret
shll
faddl
neg
sub
lea
ficompl
arpl
cmpsb
push
int
aad
push
sub
mov
int
mov
mov
add
and
test
mov
lea
pop
clc
in
bound
cmpsb
or
out
jle
push
and
dec
push
cmp
mov
ljmp
cmp
outsl
and
push
sub
jb
push
jp
test
jl
adc
dec
inc
inc
enter
dec
mov
push
scas
mov
sbbl
dec
in
outsb
push
push
leave
jne
pop
imul
je
mov
lahf
scas
push
mov
sbb
call
lret
test
in
cmc
maskmovq
negl
dec
int
pop
dec
mov
bound
mov
in
adc
add
push
sar
mov
roll
dec
xchg
test
ret
jp
repz
mov
fwait
insb
xor
adc
outsb
test
xchg
jecxz
iret
or
lods
cmp
add
xchg
mov
sbb
outsb
testb
loop
xchg
movsb
xchg
cwtl
adc
push
loop
inc
cltd
and
fstps
subb
pop
push
dec
out
ffree
rorl
sbb
imul
xchg
sub
mov
adcb
and
or
jmp
and
xor
cwtl
stos
rcll
xchg
movsl
cmp
sub
gs
push
cwtl
xchg
mov
push
shll
pushl
repnz
rcrb
iret
sbb
and
loope
ja
sbb
add
call
lods
jp
push
outsl
arpl
fadds
cmp
aam
out
lret
ljmp
add
inc
sbb
push
call
dec
ds
orl
add
push
negb
pop
shll
mov
out
add
stc
sub
sbb
into
pop
mov
xchg
inc
sbb
daa
insl
jns
repnz
jg
xchg
dec
leave
mov
pop
pushf
bound
mov
scas
out
xor
aas
leave
je
mov
mov
inc
sbbl
and
fdivrl
pop
jns
adc
dec
addr16
cmpsb
add
adc
push
jnp
jo
repnz
std
mov
dec
stc
mov
cltd
xor
pop
inc
lods
dec
lock
les
hlt
mov
popa
test
adc
mov
sub
mov
mov
add
jmp
push
xor
xor
pop
pop
adc
adc
ret
ljmp
in
sti
ffree
lret
adc
stc
push
loop
test
pop
es
pop
cmp
dec
loop
aaa
pop
inc
andl
add
fs
mov
and
roll
mov
mov
adc
add
cwtl
loopne
fsubrl
jnp
outsb
cmp
outsl
cmpsb
ss
cs
loopne
insl
jle
adc
xchg
aas
jns
ret
enter
inc
js
pop
out
hlt
insb
jnp
arpl
imul
rcrl
mov
mov
inc
sbb
push
lea
sti
push
pop
add
out
cmp
jl
pop
or
daa
ret
leave
lret
push
sbb
xchg
stc
mov
mov
pop
je
mov
sub
xchg
add
ss
fcomps
shll
add
and
loopne
xor
dec
pop
ljmp
int
fnstenv
insl
stos
cli
test
ljmp
sbb
aad
cmp
pushf
or
sbb
jl
gs
mov
je
repz
lahf
lret
mov
sbb
jmp
pop
dec
add
popa
and
sahf
out
push
push
fwait
rcl
push
and
or
dec
jl
adcb
das
je
adc
xchg
jb
out
adc
xor
arpl
lret
lea
orb
xchg
ret
xchg
lea
test
adc
sbb
mov
shlb
nop
lods
and
ja
or
push
lahf
add
test
outsb
js
ss
xchg
push
inc
mov
sbbl
loope
sahf
lcall
out
int
push
aas
xchg
mov
and
call
cmc
cmpsl
repz
std
dec
mov
aad
mov
adc
lahf
jmp
push
aam
ds
sahf
jmp
ret
stos
ljmp
pop
mov
push
jno
sahf
adc
cmpsb
pop
pop
sbb
and
sbb
testb
lods
adc
fcomps
ljmp
sbb
sub
out
aam
daa
cmp
xorl
or
dec
ja
pop
les
adc
cmp
adc
scas
out
pop
mov
push
mov
bound
js
inc
arpl
jl
push
push
xlat
inc
mov
dec
mov
cs
imull
dec
or
jmp
inc
stos
mov
and
or
xor
ret
pop
sub
mov
test
in
mov
jns
aad
insl
xchg
adc
inc
mov
cmp
loop
bnd
out
jno
mov
jmp
mov
cltd
jmp
xchg
roll
jge
test
mov
jo
sti
enter
adc
sbb
leave
cli
shrl
cltd
dec
mov
lods
mov
addb
imul
fnstcw
sbb
pop
insb
cmp
outsb
js
dec
push
lcall
das
jne
xchg
rcrb
leave
pop
shl
push
pop
dec
jnp
sbb
pop
les
mov
in
jle
push
call
aam
add
push
out
jbe
repnz
jle
std
lods
xchg
cli
inc
and
push
push
mov
mov
cmp
pop
mov
cmp
mov
xor
aaa
pop
out
pop
ja
mov
push
mov
rolb
sbb
mov
std
test
repnz
add
jbe
mov
repz
xor
into
jne
mov
stc
rorb
dec
mov
jo
pop
and
and
sarb
aaa
iret
sbb
mov
mov
aad
mov
leave
shll
mov
mov
test
or
dec
fisubrs
dec
push
xor
sbb
stc
out
popf
loop
cmp
dec
adc
mov
icebp
int3
jmp
push
jnp
jae
sub
or
jp
in
xchg
fnstenv
push
ret
std
loop
jmp
rorb
jl
test
mov
xor
and
iret
pop
adc
xor
insl
push
mov
push
js
cmp
mov
repz
add
lret
out
add
stos
cmpsl
cmp
jo
cmpsl
inc
push
cmp
pop
repnz
out
push
xchg
scas
adc
inc
push
mov
in
sub
push
loope
jl
mov
inc
or
cmp
xchg
scas
mov
sbb
cmp
adc
movsl
push
or
add
sbb
lcall
push
stc
jge
mov
push
jnp
in
stc
mov
mov
loope
cmp
rcl
aaa
mov
popf
lret
xor
into
adc
inc
repz
mov
fiadds
xchg
adc
lock
test
inc
sub
jmp
push
hlt
cmpl
gs
dec
lea
test
inc
cmp
xchg
ret
mov
sahf
jle
pop
scas
adc
xchg
cmpsb
adc
mov
mov
stos
push
cmp
cltd
mov
test
lds
jno
push
mov
cmp
aas
mov
idivb
nop
orb
fisttpl
test
aad
push
cmp
int3
sub
push
loopne
adc
mov
dec
mov
xchg
mov
jmp
clc
push
shrd
stc
mov
outsl
jbe
lret
dec
into
cmp
push
add
pop
fxch
pushf
xor
cli
dec
das
test
aas
adc
xchg
jnp
testb
testb
ret
lret
mov
fwait
dec
push
adc
enter
xchg
leave
cmpsb
test
sub
aam
imul
sub
xchg
lea
mov
and
scas
lock
ficomps
sbbb
push
cmp
mov
add
es
dec
adc
cmpsl
xor
bswap
movsl
adc
xchg
nop
pop
ss
mov
xchg
imul
mov
stos
pushf
add
inc
cmp
inc
and
mov
shll
cmc
xorb
sbb
jle
addl
dec
sub
incb
inc
shll
inc
test
jno
dec
add
mov
push
and
dec
push
call
push
inc
sti
pop
mov
fcoms
rorb
icebp
test
addl
mov
push
test
test
icebp
test
xchg
insl
xchg
je
and
xor
aas
enter
movsb
xor
push
lods
cmpsb
iret
popf
stos
call
cmc
pop
lcall
push
xchg
test
xchg
les
cmp
cmc
repnz
cltd
shlb
les
pop
dec
jmp
jmp
mov
mov
sti
mov
xchg
in
mov
and
mov
dec
and
stos
adc
jo
cmp
dec
add
adc
inc
push
out
enter
lods
pop
loop
inc
jge
xor
jnp
cld
jns
sbb
mov
cmp
mov
push
xchg
popa
jbe
icebp
add
cld
inc
xor
xchg
or
push
mov
cmp
insb
push
mov
or
ds
rolb
movsl
inc
cmc
les
cli
xlat
shlb
mov
cmpsb
jmp
mov
insl
sub
jg
test
idivl
xor
pop
fld
mov
sub
pop
ficoml
ret
jg
mov
cmp
adc
xor
push
xchg
push
mov
inc
loopne
loope
fsub
lahf
outsl
sub
out
dec
test
pop
insb
out
pushf
sar
addl
dec
xchg
pop
pop
and
sub
js
hlt
or
push
add
push
je
cltd
cmp
cmovnp
xchg
nop
cltd
loopne
mov
push
xor
push
cltd
push
jle
push
test
mov
push
mov
imul
mov
sub
sbb
push
push
or
xchg
sub
bnd
mov
xchg
notl
inc
rol
add
adc
push
and
and
stos
jl
ljmp
xlat
imul
push
xlat
jnp
mov
gs
dec
mov
cmp
push
add
fistps
mov
aam
lds
mov
pop
gs
jecxz
insl
xor
outsb
ja
shl
outsb
call
orb
mov
scas
outsl
mov
xor
outsb
out
movsl
adc
jnp
mov
mov
jle
and
xchg
mov
push
mov
testb
or
dec
cld
insb
push
notl
cmpsb
mov
insb
gs
pushf
sbbl
lods
mov
sbb
leave
inc
cld
dec
pop
mov
in
and
push
imul
outsl
cmpb
aad
and
mov
adc
faddp
push
adc
es
inc
dec
push
adc
push
jmp
sarl
add
adc
jns
jnp
iret
test
add
in
loop
xchg
pop
and
cmpl
in
enter
repnz
imul
jp
fimuls
mov
bound
cwtl
pop
adc
mov
popa
subb
mov
inc
jne
pusha
loope
jge
pusha
or
pop
ss
dec
inc
in
pushf
mov
xchg
mov
mov
push
push
dec
lods
and
pop
add
stos
jge
stos
aaa
mov
sub
cmp
jle
scas
ja
scas
mov
ret
mov
and
jo
ss
jecxz
ret
sarb
cwtl
lret
das
notl
mov
and
jle
pop
mov
inc
in
fildll
cmp
jns
jle
div
jb
pop
fwait
push
pop
dec
ss
xchg
pop
and
adc
shlb
jns
les
int3
cwtl
adc
aas
mov
mov
mov
aad
stos
ud1
movsb
mov
adc
in
or
add
movsb
mov
push
mov
outsl
lahf
inc
pmaddwd
cmp
arpl
pop
jp
sub
dec
cmp
fildl
hlt
jnp
in
stc
push
rcrb
mov
sarb
in
int
aad
leave
pop
scas
sub
cli
fsubrs
jb
dec
mov
fnstsw
clc
aas
sbb
jnp
and
in
adc
movsl
fcom
gs
fs
cmpsb
and
popa
lock
pop
rcll
cmp
stos
xor
or
cs
mov
loop
sbb
adc
sbb
ret
or
push
jmp
adc
loop
mov
xchg
out
inc
mov
loopne
sbbl
mov
shll
popa
cmpsb
adc
gs
idivl
xor
xorl
sbb
aaa
test
jno
jl
cmc
stos
test
in
mov
mov
aad
mov
pop
popf
or
lods
insl
cmp
leave
mov
fs
jne
push
jno
in
push
ficoml
dec
lods
test
test
sub
mov
mov
fwait
test
and
jnp
inc
cmp
das
mov
loopne
cltd
jmp
mov
scas
cmp
test
dec
fidivrl
cmpb
je
jecxz
repnz
iret
lock
mov
dec
out
pop
dec
clc
xor
mov
pop
push
cmpsb
in
push
std
add
sahf
and
movb
sbb
inc
dec
jecxz
push
lds
rcll
mov
sahf
pop
imul
mov
cmp
in
ret
xchg
pop
push
xchg
push
fcmove
test
into
testl
aaa
mov
scas
rcrl
out
or
cmp
cmp
xchg
push
mov
cmp
xchg
jno
sbb
mov
pushf
push
pop
cmpsb
imul
mov
jp
pusha
jae
fisubs
test
outsl
pop
aas
fidivs
shlb
gs
push
out
sub
ds
sbb
inc
popa
cli
inc
mov
lcall
sub
imul
cld
inc
push
pop
adc
mov
mov
sbb
adc
inc
adc
or
cmpsl
mov
lock
decl
inc
cltd
ljmp
shll
pop
cmp
mov
pop
fwait
inc
xchg
cmpsb
cmc
loope
dec
push
je
sbb
mov
std
sub
cmpsb
or
lahf
inc
pop
xchg
jle
add
mov
gs
neg
dec
in
fcompl
cmp
inc
xlat
push
int
lods
cs
jg
call
mov
sbb
push
dec
lock
imul
ret
push
and
aad
xor
sbb
sub
das
inc
addb
les
mov
negb
mov
push
pop
insl
in
inc
sub
adc
jo
jno
outsl
das
std
aam
pop
pop
cmc
xchg
aam
mov
sahf
xorl
outsb
pop
dec
cmp
inc
scas
pop
call
mov
mov
pop
push
shl
ficoms
sbb
mov
ja
adcl
or
push
cmpsl
pusha
sub
mov
das
xor
scas
std
push
mov
loopne
lcall
mov
and
add
dec
gs
xor
pop
imul
inc
ret
inc
mov
jle
je
pop
or
movzwl
mov
mov
inc
or
outsl
sub
pop
and
jb
rclb
js
dec
ss
xchg
stc
shrb
mov
jle
push
call
outsb
in
les
movsl
and
out
mov
adcl
insb
mov
iret
insl
bound
inc
nop
mov
lock
jg
push
imul
lods
dec
jo
push
jns
add
lahf
push
rcll
mov
or
inc
cmp
push
jo
orl
push
rolb
jo
xchg
mov
pop
push
pop
mov
je
adc
jnp
sub
xchg
dec
or
and
and
sub
shrb
xchg
test
inc
inc
sub
scas
mov
add
imulb
ds
je
sbb
test
les
or
xchg
pop
rcrb
imull
and
lods
sub
lods
xchg
ljmp
test
push
fcomi
push
mov
add
jl
sub
add
fistl
into
jl
pop
dec
loope
inc
cltd
mulb
pop
fsubp
or
inc
incl
repz
jb
lock
inc
negl
dec
xchg
jns
subl
and
iret
int
sbb
or
js
dec
sbb
adc
call
jge
pop
mov
push
xor
inc
outsl
or
jg
cli
mov
into
insl
ret
adc
jecxz
pop
add
fs
add
les
push
mov
mov
xchg
fmulp
cmpsb
jno
sub
pop
mov
sub
mov
mov
fwait
cli
mov
mov
sbb
loop
insl
movsb
xchg
push
sbb
clc
xlat
lret
jp
mov
inc
insb
mov
andb
or
mov
lahf
xor
and
add
jnp
jl
insl
inc
push
add
mov
pop
sbb
dec
imul
adc
or
inc
out
in
pop
cli
push
lahf
xor
push
enter
enter
jne
push
in
sbb
mov
xor
stc
dec
outsb
xchg
sbb
aad
pop
xchg
lahf
mov
mov
sub
cs
jge
mov
and
pop
imul
and
es
pop
movsb
fsts
sbb
repnz
or
ss
sti
stos
popf
jg
cmp
adc
lahf
fidivs
movsl
shr
popf
jle
lods
cmpl
jae
xor
xor
lods
mov
out
and
scas
xchg
jne
hlt
adc
dec
and
add
fs
imulb
ljmp
ds
adc
lock
mov
lea
mov
add
hlt
in
mov
rcr
cltd
add
movsb
lahf
sbb
xchg
bound
xor
rolb
scas
jp
inc
dec
sub
or
inc
sti
cmp
pop
call
arpl
and
xchg
inc
stos
scas
movsl
add
xchg
in
inc
repnz
add
fldcw
add
push
mov
pop
add
xorl
loope
and
xlat
stos
in
xorb
xor
cmpsl
cmp
mov
push
cwtl
jb
mulb
mov
sbb
mov
imul
xchg
jmp
lds
rcrb
mov
mov
push
sbbb
inc
mov
xor
cltd
clc
lahf
inc
enter
mov
outsl
es
lret
mov
outsb
in
gs
daa
push
leave
and
or
adcl
mov
xor
orb
jbe
dec
out
clc
std
and
inc
sti
loop
sub
inc
movsl
lock
outsl
inc
jno
mov
mov
and
xchg
add
lea
mov
pushf
ficompl
insl
sahf
xchg
loope
mov
xlat
xor
stos
push
and
mov
xchg
or
mov
xor
cmpsb
adc
jbe
cmpsl
jp
pop
sbb
push
enter
nop
xor
mov
test
inc
pop
lock
add
lock
mov
lcall
out
js
sbb
pop
sub
dec
push
sbb
aas
lods
pop
je
jp
mov
xchg
lods
jae
call
inc
int
jmp
imul
dec
inc
push
repnz
mov
movsl
pop
jnp
xor
pop
shl
or
mov
add
repnz
mov
adc
push
pop
and
lods
xor
mov
adc
pop
cmc
ret
rorl
adc
gs
or
push
hlt
sub
mov
mov
shrb
fwait
add
ja
sub
mov
pop
mov
dec
insb
push
and
pusha
js
in
sahf
mov
cmc
push
adc
jne
jecxz
js
dec
popf
out
add
xlat
xchg
imul
jmp
inc
int3
and
lcall
into
jle
inc
mov
jmp
dec
add
adc
enter
cmpsb
pushf
fwait
sbb
fcomi
in
into
incb
vunpcklps
sbb
scas
mov
scas
sub
jnp
je
mov
ljmp
decl
lea
aad
add
jecxz
insb
rclb
and
mov
push
and
fldcw
es
mov
cmpsb
dec
sbb
or
jns
jmp
sbb
insb
pushl
psubsw
xor
scas
mov
mov
xchg
jnp
mov
sub
mov
or
out
pop
push
cmp
dec
xchg
xor
shrl
out
pop
in
fldt
jo
sbb
pop
or
stos
out
pop
add
ss
sub
push
or
std
int
xor
mov
out
aad
js
popa
pop
test
and
adc
mov
mov
cmp
adc
inc
jae
push
insl
cmc
xor
sbb
adc
std
jle
sub
mov
test
leave
test
adc
nop
and
ss
cwtl
mov
xchg
dec
mov
pop
dec
fwait
adc
push
dec
scas
pushf
jno
lahf
mul
push
xor
jb
xchg
out
cwtl
dec
lea
or
or
aaa
orl
inc
inc
je
ret
cmpsl
inc
sbb
outsl
stos
sarb
std
dec
cli
cmp
loopne
stc
jp
movsl
mov
add
lds
sub
enter
push
add
pop
jne
sub
adc
repz
rorl
decb
fnstcw
cmpsb
sub
cmp
mov
xor
fisubrs
fldcw
mov
sbb
insl
cmpsl
insl
outsl
jne
popf
mov
hlt
loope
subl
push
adcl
cmp
lods
loopne
cltd
inc
flds
xchg
ficoml
xchg
xchg
cmp
shrb
or
in
jbe
add
xchg
out
movsl
xor
push
mov
scas
push
outsb
and
mov
xor
sti
add
leave
add
in
ds
cmp
cmp
push
mov
mov
pop
outsb
and
jo
mov
pop
mov
adc
push
jne
iret
xchg
push
jb
mov
mov
lods
add
popa
xor
inc
push
loop
ljmp
inc
or
mov
int
lret
ret
xor
push
lret
cmp
je
sbb
dec
pop
sub
push
fldenv
in
rorb
mov
xchg
repnz
js
bound
outsb
push
push
sarb
cmp
pop
sti
in
jne
addr16
sti
mov
sbb
fsubl
mov
imul
movsb
stos
ja
fmuls
mov
or
insl
mov
test
add
cld
incb
mov
loope
in
cmc
and
call
shr
jae
insl
mov
sarb
push
mov
inc
mov
and
or
imul
sbb
add
pop
xchg
or
xor
test
dec
sbb
mov
fdivs
mov
sub
shlb
scas
fisubrl
movsl
dec
sub
adc
pop
pop
or
xlat
dec
mov
rol
test
jno
cltd
jl
xchg
sub
jl
arpl
shrb
inc
pop
in
in
jle
cmp
out
fwait
xlat
imul
movl
test
in
shr
xor
daa
stos
sar
jae
pop
out
cmc
push
mov
dec
cmp
pop
testl
fidivl
lds
popa
fcomps
cmc
dec
lahf
int
add
cmp
into
fsubs
xchg
mov
les
sbb
mov
inc
popa
sbb
scas
add
out
push
cli
clc
gs
fcmovbe
mov
aas
mov
cs
sub
int
or
pop
ss
test
push
test
push
cwtl
or
aam
xchg
xchg
cmp
test
mov
fcomps
sbb
aaa
push
xor
or
and
mov
adc
cmpsl
sub
sarl
popa
push
inc
lea
add
imul
add
stc
out
repnz
in
loopne
jo
cmp
inc
pop
inc
sbb
out
clc
mov
cmp
xor
ljmp
arpl
sti
push
or
or
push
call
fisttpl
std
add
xor
enter
cmc
pop
imul
xor
les
and
notl
imul
mov
std
gs
mov
jnp
repz
aad
sub
aas
call
xchg
push
lods
xchg
dec
push
jae
sub
jbe
rcrb
ljmp
outsb
ljmp
ljmp
sbb
xor
mov
adc
lahf
push
push
mov
pop
mov
cld
and
lret
insb
sub
loope
xor
lret
push
stos
fidivrs
cmp
or
mov
jp
jo
fcmovne
ret
out
push
dec
cmp
mov
pop
xchg
cmp
in
inc
xchg
sbbb
and
mov
and
xor
test
xor
pop
mov
inc
icebp
push
outsb
sbb
push
xor
lods
xor
mov
aaa
push
imul
mov
outsl
add
hlt
xchg
mov
mov
dec
gs
adc
mov
mov
jecxz
jae
movsb
jnp
adc
movsl
es
repnz
jmp
jns
test
ss
mov
pop
cmpsb
mov
test
outsl
xchg
and
idivb
loope
jmp
push
push
push
pop
lods
stc
mov
test
ficompl
mov
mov
or
push
xor
pop
mov
mov
xor
push
xchg
add
loopne
xchg
xor
dec
cmp
testl
inc
inc
mov
and
inc
call
mov
mov
xlat
shlb
pop
shr
lret
mov
rcll
mov
dec
shlb
push
mov
enter
push
aad
data16
fildl
or
cld
sbb
pop
mov
nop
dec
stos
in
pop
and
or
mov
movsb
pop
add
filds
add
flds
xchg
add
push
lret
scas
je
push
sub
mov
mov
pop
ja
mov
es
mov
aaa
inc
xchg
leave
and
push
jge
std
sub
cs
mov
pop
pop
jb
cmc
ret
jne
sbb
mov
xchg
jl
inc
cmp
sahf
in
sub
int3
cmc
xor
sub
mov
insl
jp
inc
std
jle
mov
cli
mov
movsb
dec
lods
iret
testl
loope
popf
adc
inc
in
inc
les
cmp
lret
fisttpl
push
mov
jmp
mov
mov
mov
cmp
stos
aad
fiaddl
fucomip
in
lock
roll
jp
jno
cmp
cli
sbb
pop
jg
jo
fcomps
jg
add
daa
in
repz
xor
jb
inc
mov
test
adc
jno
fscale
cli
sub
dec
insb
stc
xor
mov
shrb
mov
daa
mov
cmp
mov
cmpsb
xor
cmpb
add
sub
mov
push
push
ds
imul
cli
shl
lcall
pop
inc
pop
jno
xor
and
or
cltd
push
rclb
jnp
xor
sub
xchg
xor
xor
fstpt
mov
sub
decb
mov
inc
shlb
cmp
inc
loopne
mov
enter
sub
scas
out
mov
imul
popf
pop
arpl
and
inc
out
xchg
js
cwtl
push
hlt
inc
pop
js
cmp
lods
xor
pop
repnz
aas
pop
jo
lock
aam
pop
shlb
sub
lods
lds
and
int
push
out
dec
adc
adc
ficompl
cltd
call
dec
jge
jle
push
sbb
or
in
lock
jne
testb
xchg
gs
test
repz
fadd
lcall
popf
push
cmpsb
adc
add
xor
or
xchg
fimuls
lds
adc
and
faddp
jp
leave
ret
inc
cmp
dec
cmp
pushf
outsb
and
incb
sbbb
lods
mov
fincstp
scas
andb
pusha
ja
xor
sub
test
add
push
xchg
cltd
loop
and
xchg
mov
mov
cld
outsl
push
jo
lea
shll
sub
gs
je
lahf
sub
pop
push
jp
pop
into
sub
es
in
cmp
xor
push
add
cmpb
sbb
mov
mov
pop
sbb
in
in
push
mov
nop
popa
test
jno
dec
mov
jg
pop
xchg
mov
xor
hlt
and
dec
xlat
test
and
sti
cpuid
ja
fstpl
push
inc
push
xor
mov
loop
lods
mov
xchg
jns
xor
in
xchg
rclb
sahf
aad
test
lret
lret
xchg
pop
ja
outsb
cwtl
in
arpl
push
xchg
cmpsb
popa
dec
cmp
in
and
pop
mov
lret
or
xor
and
cmpsb
cltd
xchg
aad
sbb
jp
mov
mov
pusha
pop
xor
mov
mov
and
sahf
leave
inc
push
int3
jne
inc
mov
sub
or
sbb
out
femms
mov
mov
repnz
jno
mov
pop
add
stos
mov
div
lds
popf
popa
xor
inc
and
xor
test
fildl
fmul
sub
testb
clc
loope
mov
test
push
push
inc
gs
test
outsl
sbb
arpl
jmp
or
inc
sti
idivl
pop
xor
mov
fdivs
mov
test
pop
leave
test
pop
faddl
in
mov
and
fidivl
int
jle
push
in
xchg
inc
scas
cld
hlt
lret
lret
lret
sub
imul
ret
loop
inc
pop
adc
sarb
mov
imul
loop
push
fsubs
cmp
jo
mov
mov
lds
rcr
aam
adc
sbb
mov
jnp
sahf
add
xchg
sub
push
mov
pop
pop
daa
mov
je
cld
push
repz
aaa
push
inc
pop
ljmp
cmpl
dec
xor
addr16
push
in
jno
jb
imul
dec
xchg
aad
push
dec
lds
jmp
jbe
lcall
mov
movsl
xchg
mov
xor
es
pop
push
inc
add
popl
loop
cwtl
lods
add
jmp
pop
fwait
lcall
and
fsubrl
test
sbb
daa
ret
decb
arpl
or
inc
fwait
mov
or
mov
jg
pop
inc
fadd
mov
outsb
gs
sti
mov
fs
sbb
cmovs
xor
in
lret
imul
pop
xchg
jns,pn
dec
sbb
loopne
adc
push
fwait
cld
mov
mov
movsl
icebp
push
sub
int
push
xor
xor
arpl
scas
cmc
dec
jno
and
dec
inc
jecxz
fidivl
mov
test
mov
pop
out
xchg
inc
mov
insb
jle
sbb
popf
adc
pop
xor
cmpl
leave
mov
mov
addr16
jle
jno
ror
mov
xchg
ss
inc
adc
or
rorb
aaa
insl
call
outsb
dec
inc
and
and
mov
mov
inc
mov
xchg
std
inc
testl
mov
jp
fnsave
orl
mov
mov
push
imull
sub
sub
pusha
lahf
shll
out
adc
or
push
pop
pop
gs
leave
push
call
and
pop
jns
or
add
shr
jmp
scas
dec
stos
leave
out
sub
pop
inc
push
mov
cmp
out
lods
call
inc
push
push
pop
lods
xchg
jl
inc
dec
mov
imul
sahf
inc
mov
int3
mov
sbb
hlt
jmp
mov
pop
push
popf
lea
push
xor
int3
aam
xchg
push
fnstsw
and
scas
in
aad
popa
adc
ret
mov
jp
cld
fidivrl
cwtl
mov
ljmp
jmp
les
jle
or
neg
push
test
bound
int3
dec
add
jbe
xchg
adc
xlat
add
xchg
and
inc
fbld
add
ficomps
adc
mov
sub
sub
xor
dec
cli
jnp
popa
in
in
inc
jg
jbe
xor
shll
xor
ret
lret
dec
mov
loope
ljmp
stos
xchg
movsl
mov
xchg
pop
xor
out
pushf
std
sbb
idivb
loopne
loop
in
cmpsl
shlb
cld
rcl
xchg
jmp
xor
loope
negb
rcll
lret
jl
aas
dec
jecxz
js
inc
jl
push
test
pop
sar
rcrb
std
aaa
xchg
es
div
push
or
jnp
adc
dec
stos
aam
cmp
pop
rorb
inc
stos
jns
shrb
les
sub
sub
movsl
test
popa
loope
shl
mov
std
imul
sub
ss
sub
out
or
or
push
push
cltd
pop
movsb
cld
mov
ds
inc
adc
popa
push
test
jns
out
clc
cmp
out
sbb
jge
dec
out
jl
pop
cwtl
ret
fwait
lret
icebp
push
xchg
ret
inc
test
repnz
mov
push
pop
pop
push
sbbl
aas
popa
les
jp
movsl
xchg
fdivrs
xor
idivl
xchg
int
dec
pop
mov
icebp
fmull
iret
xchg
inc
adcb
xchg
lea
mov
pop
push
dec
repnz
negl
sbb
pop
lds
stos
jns
pop
int
xor
in
insb
jne
pushf
add
cld
push
adc
mov
scas
sub
fadds
addr16
dec
or
les
loopne
mov
insl
push
add
xchg
pop
mov
lcall
sbb
mov
mov
enter
fisttpl
dec
hlt
call
adc
sahf
ds
mov
mov
jns
sahf
mov
push
xchg
pop
imul
popa
daa
jb
adc
push
push
loope
in
out
addr16
pop
repz
jecxz
xchg
out
jle
pop
or
fldenv
sti
adc
mov
cmpsl
shrb
xor
jmp
adc
jle
sbb
push
xchg
sbb
and
push
aad
cmp
or
test
adc
and
clc
shlb
mov
in
rcll
lret
int
outsl
xchg
iret
xor
loopne
add
lret
arpl
jno
lahf
add
sub
test
stos
adc
mov
in
push
leave
mov
sbb
add
enter
cmp
adc
sub
add
out
mov
dec
lcall
insb
out
xchg
arpl
dec
popa
mov
mov
pop
mov
push
pop
cmpsb
je
hlt
in
in
xor
xor
dec
stos
xchg
mov
lcall
mov
or
pop
jnp
lcall
xor
push
rcr
pop
and
jecxz
jns
xchg
popf
cmpl
imul
loopne
jne
and
lcall
cmp
call
jne
push
cwtl
sbb
add
mov
repnz
int3
and
bound
bound
nop
adc
cmp
fistpl
pop
jmp
iret
outsl
sub
xor
ror
nop
aad
pusha
pop
xor
dec
stos
test
mov
pop
jecxz
pop
in
fcompl
xchg
fdivs
xchg
cwtl
and
dec
or
mov
aad
negb
scas
jl
into
mov
xchg
inc
mov
addr16
insl
divb
inc
dec
xor
shl
or
inc
push
sbb
scas
push
cmpl
and
dec
inc
add
rolb
cmpb
in
mov
andnps
rorl
jnp
imul
xchg
push
stc
incl
mov
lock
sub
mov
mov
adc
les
cli
mov
sahf
push
pushf
loopne
sub
push
iret
stos
sbb
push
mov
scas
and
xchg
ror
pop
jne
or
cmpsb
xor
push
inc
fstl
jg
xchg
jp
clc
cltd
mov
push
mov
xchg
test
push
ret
fnstenv
ret
and
jge
mov
and
outsb
mov
cmp
out
xor
push
mov
mov
jle
mov
das
cmp
jns
sub
fiaddl
cwtl
test
cmp
dec
push
out
cld
jmp
add
xchg
xchg
hlt
in
inc
mov
adc
fdivl
cld
fidivl
pop
and
or
je
aas
add
and
sub
js
mov
push
jg
cmp
push
cmp
outsb
pusha
mov
andb
cltd
inc
loop
pop
addr16
adc
dec
add
ss
or
divb
gs
mov
icebp
das
xchg
pop
or
test
ret
mov
sub
fcmovnb
jmp
pop
in
mov
add
sub
pop
cmp
stc
pushf
inc
or
cmpsl
and
test
pop
adc
push
xor
sub
or
add
push
pop
ds
pop
lcall
cmp
jmp
les
and
in
repz
xor
dec
es
xchg
add
ljmp
xchg
nop
mov
jae
cwtl
das
dec
mov
pop
std
add
sahf
inc
sub
and
sti
jae
mov
cli
fwait
inc
jae
ret
fnsave
lahf
test
push
or
dec
mov
xor
jl
sub
dec
idivl
cltd
popf
xor
stos
in
es
dec
aad
testl
add
pop
popf
movsl
mov
xchg
mov
stos
aam
ficoms
imul
cli
push
pop
inc
lret
rcr
loop
aas
loope
inc
add
cmp
add
cmp
test
cmp
jb
sub
mov
cmp
scas
pop
jle
or
fcmovu
jecxz
xchg
mov
out
mov
sbb
scas
enter
out
lea
cmp
or
xchg
xlat
xchg
jl
dec
and
fs
ds
aad
xchg
aad
inc
mov
add
add
rclb
sbb
iret
jmp
mov
xchg
or
push
push
or
vpaddq
sub
jns
dec
imul
sub
pop
rorl
jg
or
mov
push
lret
pop
or
imul
cmp
flds
or
ficompl
jg
mov
das
push
iret
or
mov
loop
sahf
jnp
cmp
int
stc
pushf
loop
xchg
dec
arpl
pop
fdivp
in
or
lret
cltd
cwtl
xchg
in
sbb
scas
mov
jmp
cmp
loope
jb
lret
mov
je
out
aaa
sub
xor
gs
lods
test
adc
sub
outsl
fcomp
bound
and
movsb
mov
and
sti
or
add
dec
popf
ret
xchg
addr16
js
dec
test
clc
call
leave
add
cli
sub
sarb
decl
or
xor
sahf
sti
push
mov
lods
lods
ss
adc
int3
jge
cmc
inc
jnp
cwtl
mov
inc
jbe
xchg
xor
out
and
mov
leave
cs
test
inc
jne
mov
je
arpl
test
sbbb
shl
fldl
cwtl
xchg
mov
or
jno
or
mov
inc
mov
incl
repz
sti
daa
inc
push
and
xlat
out
sbb
hlt
decl
inc
xchg
add
test
ds
sarl
aaa
icebp
mov
xor
fnstsw
pushf
xchg
daa
mov
xchg
xchg
mov
or
mov
and
pop
stos
movsl
adc
pop
push
enter
push
fdivl
add
dec
mov
imul
subb
cmp
ret
daa
jge
push
push
movsl
in
int
dec
adc
dec
dec
pop
sub
js
mov
lods
xchg
or
andl
pop
mov
icebp
cmp
add
imul
xchg
pop
jle
ficoms
out
pop
aaa
out
sub
aad
pop
aas
fmuls
mov
dec
sbb
dec
mov
mov
into
int3
int
xor
inc
adc
pop
and
leave
les
push
xor
cmc
out
cmpsb
lret
test
add
mov
or
in
push
add
aas
out
push
cmp
pop
lahf
call
push
sarl
iret
adc
rorb
fwait
mov
je
mov
xor
xor
mov
add
in
movsl
outsl
jp
xchg
adc
mov
in
push
and
insl
cmc
pop
sbb
int
scas
push
dec
into
jg
mov
mov
aad
lahf
jbe
dec
pop
aaa
scas
or
rcll
add
sbb
imul
mov
lods
or
dec
clc
lea
dec
sub
lods
cmp
movsb
or
xchg
xchg
cmp
or
or
xchg
test
repnz
cs
jns
or
sbb
test
out
addb
mov
jbe
jl
in
sub
in
jle
pop
dec
lret
add
xor
xchg
lret
pop
shl
mov
pop
inc
test
inc
pop
les
push
push
js
cmpsl
std
sbb
add
pusha
adc
subl
iret
add
jb
adc
pop
mov
lcall
call
in
dec
aas
mov
lea
add
je
sbb
out
test
icebp
ret
sbb
test
lret
outsl
mov
dec
dec
loopne
ljmp
cmp
jnp
xchg
add
jbe
push
or
daa
jne
cmpsb
push
sbb
movsl
aaa
lds
int3
jo
mov
inc
mov
jbe
movsb
in
arpl
pop
iret
fs
push
sub
jl
pop
orl
in
or
add
sbb
aaa
cmpl
mov
or
aaa
int
enter
je
add
js
mov
sub
inc
lcall
mov
pop
aam
jno
jle
dec
stos
shr
pop
cmp
pop
fs
mov
add
push
outsb
inc
dec
popf
addl
les
sbb
push
or
ficoms
dec
mov
lret
mov
pop
pusha
and
ss
fdiv
mov
dec
jo
gs
sahf
xchg
sbb
pop
gs
in
sub
mov
out
push
lret
mov
sbb
movsl
inc
and
dec
pushf
jnp
iret
xlat
sub
les
xchg
mov
stos
or
push
in
ja
mov
stos
imull
imulb
pop
push
sub
jmp
or
in
pop
push
mov
sahf
in
int
mov
add
mov
adc
dec
cld
inc
shll
daa
popa
in
aad
xor
add
jecxz
fisttpll
or
and
xor
imul
es
and
or
out
test
popa
mov
mov
ss
mov
out
lds
jmp
and
in
jb
xchg
xchg
jns
pop
nop
sahf
les
stc
mov
mov
pusha
sbb
xor
xor
mov
pop
data16
jne
mov
jle
out
aam
lcall
and
add
xchg
fsub
sbb
nop
sub
mov
fistpl
shr
enter
movsl
pop
stos
sbb
lock
test
or
lods
and
sub
ffreep
aas
movsb
mov
or
cld
mov
push
sub
mov
mov
pusha
xor
push
jmp
mov
fiaddl
push
adc
or
jae
mov
xor
ljmp
sbb
shll
push
ret
push
sub
jle
stos
sahf
push
iret
dec
add
pop
js
lock
in
in
mov
mov
loop
push
fisttps
ljmp
push
aam
or
out
data16
dec
leave
test
push
cs
aam
cmp
sub
sub
es
adc
dec
imul
lods
push
sbb
pop
sbb
sbb
aas
add
bound
add
in
sub
push
adc
mov
loopne
mov
inc
ret
or
and
push
shl
sbb
lods
xor
les
insb
ss
gs
int
ficompl
xor
lea
loopne
scas
sbb
xchg
pop
add
dec
cli
mov
shr
jl
fdivs
icebp
or
movsl
lods
add
cmp
fwait
negb
mov
ret
and
jno
cmp
cmpsl
lds
mov
inc
inc
dec
add
aaa
xchg
cwtl
adc
sub
xor
inc
ss
decb
xchg
pop
test
and
push
cmpsb
push
int3
mov
aad
xor
jge
insb
push
popf
ret
mulb
pop
addr16
outsb
dec
jnp
xchg
pop
pop
test
enter
and
inc
sbb
invd
push
ret
pop
push
scas
push
xor
movsl
push
lods
pusha
mov
mov
push
jmp
out
clc
adc
cmc
jg
xor
std
js
mov
in
shl
out
dec
in
push
or
fwait
jge
mov
mov
jle
mov
cmp
sbb
test
orl
lods
mov
mov
ss
pop
ja
adc
push
mov
push
enter
insl
push
sarl
cli
xchg
ret
cltd
lahf
pop
sub
testb
mov
add
sub
cld
xchg
out
andb
fsub
cli
mov
mov
pusha
add
jne
sbb
inc
js
pop
loopne
test
lcall
gs
or
sub
and
in
bound
lcall
jns
cmp
mov
mov
or
mov
xor
scas
cs
and
add
out
fcmovnbe
inc
and
push
clc
sbb
dec
push
and
sub
lock
js
insl
mov
and
insl
mov
in
cltd
inc
pop
xlat
push
int
push
sub
jle
mov
pop
and
test
repz
add
cld
test
int3
into
mov
out
sub
adc
out
jae
pop
cmp
add
push
stc
ret
mov
pusha
xchg
push
adc
loope
loopne
sbbb
test
mov
andb
ret
ja
andb
stos
cmpsb
inc
iret
push
mov
xchg
ror
sbb
loope
setns
jp
mov
push
fucomip
inc
xchg
enter
in
cmp
test
mov
sbb
cmovno
push
xor
push
in
call
imul
jg
dec
loopne
movsl
jb
pop
jecxz
test
in
divl
mov
jmp
inc
inc
es
push
inc
inc
cli
add
mov
xor
orb
jp
xor
hlt
scas
jmp
push
negb
je
lahf
fdiv
adc
cwtl
jge
xor
stos
lods
and
or
pop
jle
adc
ret
fs
push
cmp
out
push
movq
sbb
lock
sbb
loope
push
mov
mov
xchg
cmp
stos
ret
jbe
out
in
testb
test
sub
or
ficoms
xor
pushf
arpl
int
cwtl
movsb
or
cmp
xor
fisttps
mov
jo
jno
sbb
dec
sti
notl
mov
mov
in
scas
loope
jp
inc
mov
movsl
push
xor
or
out
pop
ficomps
popf
push
ret
scas
sti
fcmove
or
jne
iret
push
mov
inc
out
xor
mov
push
add
les
ficompl
sbb
sub
stos
mov
mov
mov
pushf
lret
cwtl
sahf
pop
cltd
or
pop
leave
mov
iret
xchg
pop
pusha
push
or
test
fildl
jmp
cmpsb
inc
pop
andb
int
scas
inc
pusha
fs
jecxz
or
sub
es
push
or
dec
leave
push
stc
pop
popf
add
jns
fisttpll
pop
and
negb
push
cld
xchg
dec
cmp
ljmp
leave
and
inc
cmp
cmpsb
es
aam
jg
mov
sti
ret
mov
repnz
dec
shlb
lcall
inc
add
dec
xor
pop
cld
mov
and
jns
imul
inc
shrb
cmp
cmp
inc
sub
and
in
out
jge
test
xor
in
iret
xchg
movsb
xchg
cli
cltd
add
mov
inc
lds
imul
inc
test
adc
sahf
hlt
pop
icebp
stos
cwtl
loopne
outsb
sub
ret
in
mov
xor
hlt
mov
jns
dec
js
mov
dec
insb
mov
scas
cmpsl
in
shlb
jle
add
sti
nop
xor
jl
mov
and
aas
testl
pop
xor
in
mov
xchg
mov
jbe
dec
jb
jnp
addl
xorps
dec
loopne
sbb
xchg
and
or
mov
loope
test
mov
fstpl
out
sbb
test
ret
clc
inc
nop
sub
push
shl
loopne
xor
jns
inc
add
and
cwtl
gs
xor
push
lahf
cmpsl
dec
les
jle
fcompl
dec
lcall
pop
sbb
xor
sbb
mov
call
push
aas
cltd
imul
xor
adc
mov
movsb
imul
iret
sbb
adc
mov
out
pop
popf
dec
xchg
cmp
ss
pop
jge
push
cmp
xchg
or
movl
rcrl
pusha
cmp
lcall
sbb
cmp
dec
or
popa
adc
sub
xchg
outsb
es
inc
negb
adc
fcompl
add
in
mov
dec
xchg
cltd
push
stos
fnsave
mov
into
inc
and
sub
into
mov
push
inc
mov
loope
aad
std
jae
push
bound
pusha
rcr
stos
iret
push
decl
xchg
push
test
adc
or
xchg
clc
mov
inc
mov
loope
cs
rcrb
mov
shrl
jae
enter
cld
in
mov
dec
pop
fwait
stc
stos
or
ret
aam
sbb
leave
sub
xor
sub
xchg
hlt
lcall
jno
mov
xchg
sar
in
mov
inc
add
jne
adc
pop
cmp
cld
fsubl
xor
insb
xchg
add
cwtl
lret
fs
out
mov
hlt
test
mov
popa
cmp
jo
dec
aas
loopne
mov
test
in
push
mov
int
sbb
aas
jg
push
into
mov
dec
in
testb
adc
inc
iret
xchg
pop
jmp
dec
aas
fcompl
or
add
cmp
mov
std
xchg
arpl
addl
cltd
int3
in
incb
adc
xor
sbb
dec
sbb
mov
mov
fildll
aaa
push
mov
cmpsb
or
jmp
dec
xor
or
or
jl
mov
inc
inc
mov
orb
je
ja
out
std
xchg
or
jns
arpl
mov
lcall
andb
sahf
xor
fisttpll
out
mov
or
dec
add
xchg
test
ljmp
adcb
test
cmp
pop
xchg
add
add
fcmovnu
jmp
xchg
imul
dec
lret
scas
into
sub
pop
xorl
jo
lods
mov
cld
out
cld
aad
aas
lods
jp
out
test
ret
scas
cmp
mov
inc
xchg
cmp
out
into
cmc
hlt
mov
mov
mov
daa
sbb
add
cmp
lock
loopne
aad
fadd
call
popa
sarb
xchg
sub
setb
scas
rcrb
notl
push
stos
inc
pop
pop
sub
outsl
sbb
out
jae
add
push
movsb
icebp
loop
das
xchg
sbb
sarl
ret
rorl
pop
adc
xor
lcall
mov
test
or
add
fsubrs
mov
aam
xchg
cwtl
imul
shrl
test
push
add
clc
insl
dec
mov
add
lret
and
popa
and
sbb
jg
inc
sbb
ja
adc
mov
push
addr16
mov
pop
addr16
ret
push
ret
push
mov
cmp
push
ror
sbb
cs
in
push
pusha
bound
push
push
jle
enter
testl
adc
popf
dec
sbbb
mov
mov
es
punpcklbw
repz
and
jp
mov
ds
sub
lret
xor
xor
jmp
pop
add
adc
jbe
and
cmpsl
and
mov
cs
xor
shl
sub
fidivs
cmp
scas
cmp
pop
xor
add
clc
daa
popf
cmp
push
adc
dec
rcr
mov
lods
jne
lahf
outsl
loopne
std
inc
popa
sarb
inc
lret
iret
add
andb
sbb
add
sbb
mov
testb
cltd
filds
hlt
mov
jns
incb
imul
mov
ljmp
jno
xchg
inc
inc
lret
or
call
sub
fwait
out
inc
adc
popf
cmp
cmp
outsb
jg
xor
jnp
das
xor
jo
int
push
les
adc
data16
dec
add
xchg
jecxz
clc
divb
and
stos
pop
mov
mov
jo
jb
cmc
xchg
jb
in
int
sub
js
mov
orb
rol
and
arpl
mov
mov
popa
xor
pop
pop
mov
push
movsl
or
lcall
push
dec
insl
cli
test
fs
sbb
ret
push
imul
cmp
push
pop
jmp
xor
dec
xchg
xor
sbb
adcb
add
lds
inc
jmp
clc
xchg
mov
mov
outsb
mov
aad
fisttpl
lock
lods
mov
sub
inc
pop
or
mov
or
ljmp
movsb
test
jns
lea
add
lds
lahf
lods
adcb
mov
push
jle
test
pop
and
mov
mov
xchg
dec
mov
pop
nop
out
subb
arpl
sahf
sarb
pusha
mov
repnz
pop
stos
idivl
stc
dec
call
rorb
xor
push
lea
sub
loop
xchg
dec
aas
out
xchg
sti
bound
mov
cmp
stos
push
add
sbb
adcl
les
in
leave
in
aad
inc
test
pushf
push
dec
mov
data16
push
mov
and
xor
mov
lods
fwait
push
das
cmp
psrad
inc
or
leave
and
jne
cmpsl
push
add
stos
loope
xchg
scas
mov
adc
lods
leave
in
pusha
gs
mov
sub
popf
call
sub
jae
add
or
xlat
mov
gs
jbe
fdivl
jbe
fldcw
push
subl
or
add
lret
loope
jg
sub
jne
movsb
xchg
sub
mov
xchg
xchg
dec
or
xchg
shlb
push
ja
mov
movsb
inc
pop
and
mov
fsub
push
xor
scas
mov
out
inc
popf
fbld
fistps
xchg
inc
sbbb
std
cmp
cmp
inc
xchg
mov
sub
in
sub
sbb
mov
aam
sahf
arpl
xor
mov
cwtl
mov
lcall
call
mov
jne
stos
cmpsl
out
mov
xor
push
out
dec
call
divb
icebp
imul
arpl
test
mov
or
call
ficompl
fmuls
loop
adc
push
pop
cmp
inc
add
mov
mov
fists
push
mov
imul
or
push
rcrl
test
xchg
jb
icebp
sbb
test
repz
dec
or
and
mov
push
aam
push
aaa
sti
xchg
leave
add
dec
cmp
adc
adcb
or
adc
sahf
ret
adcb
lea
xlat
in
sbb
sbb
je
enter
pop
xchg
in
or
lret
sbb
jo
ret
inc
xchg
sub
cmc
xor
lret
fistl
mov
push
mov
aas
xor
cmp
filds
or
or
arpl
add
xchg
lret
pop
ds
stc
leave
and
bound
out
mov
outsb
arpl
cmp
dec
outsl
push
pusha
mov
out
sti
xor
stos
outsl
dec
pushf
in
mov
arpl
push
mov
xor
jno
ss
lahf
sbb
adc
mov
and
and
jecxz
cmp
movsb
jp
mov
and
in
arpl
popa
mov
stos
cli
insb
in
dec
sub
sub
pop
push
fists
or
sbb
repnz
aam
cmpsl
movb
pop
iret
cmp
cwtl
rcl
test
pop
mov
daa
ficoml
loopne
adc
sub
aam
mov
lret
test
pop
loop
ss
cli
divl
sub
je
int3
cmp
sub
or
jmp
sub
rcll
lock
cmp
cmpsb
icebp
pop
adc
icebp
push
xchg
fidivl
adc
inc
add
in
fisubs
adc
fsubrp
lcall
es
sub
mov
clc
sar
push
sbb
fildl
xchg
rcrb
aaa
lahf
sbb
int3
adc
in
das
sbb
cwtl
inc
cmpsl
out
and
out
add
imul
and
leave
mov
cmp
fmuls
cmp
pusha
mov
stos
cmp
sbb
sub
fstp
lahf
insb
push
jne
push
movb
or
js
js
and
dec
xor
jg
scas
aad
xchg
inc
test
adc
hlt
in
add
ret
jle
imul
xchg
fnstsw
add
cltd
hlt
call
sub
sarl
sbb
int3
and
cmpb
xor
shrb
jecxz
loopne
inc
add
xchg
or
xor
das
adc
imul
cmp
imul
scas
add
stos
push
push
mov
call
mov
pusha
insb
aad
push
mov
scas
imul
ja
jle
pop
sbb
repz
dec
movsb
push
stos
mov
pushf
mov
fstpl
std
cmp
inc
pop
pop
fistpl
push
leave
and
cmpl
cwtl
adc
shll
add
sub
pop
loopne
stos
push
xchg
shll
fcmovb
dec
test
sbb
inc
imul
lret
mov
dec
test
pop
mov
adc
icebp
shl
mov
pusha
mov
loopne
cmp
cltd
cmp
mov
mov
ret
and
cmp
pop
mov
pop
jl
pop
xchg
stos
jle
xchg
mov
mov
inc
push
mov
jbe
mov
insb
lahf
in
sbb
pop
mov
adcb
xor
stos
fidivs
pushl
je
mov
cmc
add
jb
pop
stos
pusha
loopne
aam
orl
ds
aaa
push
bound
inc
inc
adc
rclb
fldln2
push
jge
sub
frstor
push
notl
rorl
pcmpgtd
sbb
mov
mov
jo
mov
add
mov
clc
stos
or
cmp
push
jbe
lock
push
push
mov
push
mov
fldcw
in
cwtl
mov
nop
gs
or
cmc
mov
nop
movsb
fidivs
xchg
jp
nop
shlb
outsl
ss
cli
xchg
sub
daa
dec
lahf
mov
fcomps
std
add
pushf
push
mov
xchg
iret
dec
out
push
push
popl
repz
adc
decb
push
bnd
jns
aaa
xor
arpl
int
mov
movsb
pop
inc
nop
xchg
add
jne
in
lods
pop
aaa
sub
add
jbe
out
int3
je
jno
stos
adc
cmp
in
fildl
fucomp
pop
xor
ds
nop
xor
imul
mov
jge
pop
or
xchg
pop
or
lds
aam
shlb
popa
pop
pushf
xchg
out
push
mov
mov
push
cmp
push
adc
lret
lock
mov
ss
push
jecxz
push
lret
das
sub
and
xor
mov
mov
ds
mov
out
hlt
pusha
push
or
out
cli
repnz
fsubs
in
test
or
jb
pop
inc
mov
out
icebp
dec
scas
loope
cmp
add
jmp
jp
add
sbb
xchg
add
sbb
jb
push
dec
jp
sbb
mov
das
popf
rcr
mov
mov
faddp
hlt
push
fs
xchg
sub
nop
sub
enter
jge
incb
jno
cld
mov
fsubl
push
or
or
jl
mov
mov
pop
pop
inc
ficomps
dec
fstpt
mov
sahf
mov
loopne
lods
hlt
add
ret
mov
les
push
fmuls
mov
fnstenv
in
and
mov
lret
adc
pop
test
mov
notl
out
dec
stos
arpl
mov
js
rcr
sbb
repz
mov
inc
jle
jge
cs
popa
xchg
push
ret
push
fcmovbe
nop
or
out
and
js
mov
mov
add
shl
std
xchg
add
push
dec
adc
mov
xor
test
xor
cltd
sub
aaa
jle
lret
sub
cwtl
dec
sub
xchg
lods
andl
aad
adc
cltd
push
rcrl
cli
cmpsl
adc
fiaddl
xor
lret
divb
je
mov
xor
enter
mov
fisttpl
dec
ret
fistpl
scas
ds
sbb
xchg
fiaddl
vdivpd
jp
outsb
cmp
mov
rorl
adcb
lock
fidivrl
repz
in
sbb
neg
hlt
push
mov
rolb
sub
jmp
xor
mov
or
ljmp
enter
cli
dec
imulb
sbb
fnstenv
cmp
jbe
push
or
mov
lods
loope
push
sub
cwtl
jbe
push
pop
xor
rol
cmp
fstps
xor
xchg
aaa
inc
adc
lret
jns
and
pop
mov
mov
rorb
and
arpl
dec
mov
mov
enter
adc
adc
sbb
mov
cs
in
sub
aam
ja
arpl
ljmp
lock
lret
inc
popf
stos
push
adc
in
xchg
test
out
bnd
xor
mov
push
jo
addl
arpl
xchg
cmc
mov
rclb
stos
inc
mov
sub
test
int3
xchg
repnz
or
in
inc
inc
push
hlt
sbb
fsts
sbb
jge
gs
sahf
pop
daa
pop
lods
push
mov
and
data16
in
in
and
mov
mov
cli
je
and
pop
inc
cmc
ljmp
and
cli
sahf
pop
iret
arpl
cltd
sub
jmp
sarl
imul
mov
mov
mov
push
mov
add
push
lds
inc
pop
das
test
mov
sub
push
pop
pop
jl
shl
rolb
ja
lahf
sbb
fnstenv
es
cmp
or
nop
push
int
pop
andb
mov
xchg
mov
les
movsb
and
outsb
cmp
or
inc
call
imul
data16
jne
push
cmpsb
inc
mov
and
inc
gs
adcl
xchg
mov
sub
pop
inc
jae
ljmp
aaa
ss
int3
mov
adc
loopne
dec
pop
mov
popf
cmp
xchg
add
mov
jl
mull
sbb
jmp
insb
ljmp
sahf
xchg
adc
inc
frstor
imul
mov
xor
addr16
scas
imul
in
dec
pop
adc
push
jne
sub
lods
gs
shlb
je
iret
out
mov
inc
inc
mov
loop
arpl
and
dec
loope
bound
rorb
dec
dec
xchg
test
sub
fisubs
frstor
pop
jns
pop
push
loope
aam
or
sbb
fs
lahf
cli
fwait
add
and
push
repnz
mov
push
out
or
adc
dec
fdivrs
xchg
pop
rcr
inc
outsb
in
orb
stos
dec
int3
dec
mulb
and
out
addr16
mov
jle
xchg
pop
xchg
idivb
push
adcl
jmp
fwait
or
cld
sbb
out
daa
hlt
and
std
push
xchg
pusha
cmp
addr16
iret
jmp
daa
lods
dec
fldl
imul
repnz
pusha
inc
es
or
stc
loope
adc
mov
mov
sub
or
repnz
fwait
push
inc
lods
dec
jno
nop
test
bound
and
xor
repnz
dec
hlt
fnsave
sub
addr16
jns
or
pop
jge
mov
sub
iret
lret
push
push
fcomp
sub
inc
pushf
mov
enter
fisttpll
cmp
lea
pop
adc
push
xchg
or
cmp
fmull
mov
fscale
btr
aad
inc
mov
aaa
leave
cmp
nop
loope
pusha
push
testl
outsb
inc
cli
and
sti
push
pop
mov
cwtl
sub
ret
aam
stc
fstl
clc
cmp
je
mov
inc
add
mov
repz
mov
mov
xor
xchg
or
adc
test
xchg
sti
lea
in
inc
movsl
adc
inc
int
fldcw
mov
ja
aad
insb
jmp
xchg
adc
xchg
popf
push
fisubrl
ret
mov
sbb
mov
mov
dec
jp
repnz
xor
push
or
push
addr16
ficomps
sub
dec
movsl
inc
add
bnd
fdivrl
xchg
inc
mov
fldenv
push
or
test
add
fstpt
mov
mov
or
dec
adc
arpl
hlt
lds
out
out
mov
mov
stos
dec
imul
test
mov
jp
jmp
cmp
orl
mov
arpl
mov
sahf
cwtl
int
mov
scas
pop
sub
cmpl
test
xchg
aas
mov
adc
lret
mov
subb
inc
das
hlt
stos
pop
mov
stos
scas
sbb
incl
add
fwait
dec
jb
and
fiaddl
mov
jno
mov
push
test
mov
add
sub
out
push
add
sahf
popf
mov
mov
loop
lret
cmpb
mov
xchg
mov
rorl
les
popf
jecxz
arpl
push
mulb
rcl
cmp
mov
and
lods
fisubl
cmc
xchg
fucomip
push
sbb
or
subb
int
stos
fnstsw
stc
mov
rcpps
xor
inc
mov
sbb
sub
mov
lcall
mov
insb
sub
cld
lret
popa
cmp
push
mov
lods
rorb
lahf
xchg
push
inc
pop
and
xor
flds
xor
push
aas
test
pushf
jae
pop
test
mov
stos
mov
adc
push
pop
shl
jmp
stos
jp
sub
imul
mov
xor
iret
inc
jbe
repnz
mov
dec
in
dec
mov
inc
jbe
inc
dec
xor
push
mov
xchg
fdivrl
in
data16
add
xor
adc
in
mov
fidivl
push
mov
in
pop
mov
xor
xor
into
lods
inc
add
mov
adc
sub
xchg
pop
scas
pop
stos
es
in
pop
sub
icebp
adc
lahf
loop
dec
fwait
test
and
inc
mov
sbb
lea
inc
shlb
lods
or
movsl
outsb
pop
and
jl
mov
fildll
je
sbb
inc
sbb
add
test
popf
inc
cmpsl
cwtl
pop
pushl
das
test
rcrl
xchg
or
out
cmpsl
mov
mov
nop
or
mov
scas
jnp
cmp
jmp
loope
mov
mov
pop
add
fistps
push
insl
jb
lcall
lret
arpl
sub
sbb
pop
int3
addr16
and
faddl
cmp
inc
push
adc
pop
pop
dec
add
mov
mov
nop
fnsave
fsubr
lret
mov
xor
in
std
xor
stos
leave
movsb
dec
sarb
xchg
xchg
or
adc
aaa
mul
orb
push
adc
add
mov
add
ret
mov
xchg
jmp
inc
dec
inc
push
push
jnp
cltd
mov
dec
mov
ret
aad
fldt
cmp
retw
lods
jnp
adc
ret
sahf
push
and
leave
fiaddl
das
mov
aam
add
pop
add
mov
sti
insl
pop
push
hlt
out
push
pop
in
out
scas
pop
idivl
cmp
rol
jne
aaa
sbb
or
fndisi(8087
jecxz
aad
fs
scas
pop
jo
mov
sbb
mov
scas
stc
add
sbb
arpl
and
push
xor
inc
mov
stc
mov
mov
sbb
and
pop
and
mov
dec
stos
xchg
adc
adc
pop
bound
sbb
pop
cwtl
xchg
mov
sub
pop
aad
cwtl
mov
mov
push
hlt
in
push
pushl
bnd
jne
or
xchg
out
mov
push
sbb
xchg
mov
sti
loope
decb
fptan
iret
ret
stos
adc
les
sub
push
iret
fisubrl
mov
cltd
mov
mov
addb
or
ds
xchg
cmp
xor
lcall
aaa
cmp
dec
xlat
inc
shrl
inc
sbb
mov
divb
movsb
imul
xlat
dec
dec
subb
xchg
hlt
icebp
jl
jmp
push
dec
out
jns
mov
sub
jg
cmp
ret
add
fnsave
mov
notl
xchg
popa
jmp
rorl
aad
stc
pop
xchg
ret
and
mov
rorb
or
int3
outsb
cmp
or
popf
fstps
jno
add
push
nop
sub
mov
sub
insb
push
gs
xor
push
outsb
fistps
mov
mov
stos
or
movsl
lods
outsl
and
mov
push
sbb
pop
loop
fwait
cmp
mov
inc
stc
jmp
cli
repz
add
sbb
push
sub
mov
lret
arpl
ret
js
sti
sub
dec
xchg
mov
ja
jp
mov
xchg
add
xchg
pop
inc
add
pop
stc
push
js
mov
roll
pop
scas
jle
call
or
and
mov
mov
fsts
dec
cmp
dec
bt
push
mov
in
adc
jae
mov
cmp
dec
insl
fdivp
andl
push
xlat
out
call
negb
out
xchg
lcall
dec
insb
xchg
test
or
jle
daa
mov
movsb
int
push
in
popf
popf
jns
pushf
jmp
sub
sbb
fists
and
xlat
repnz
lcall
out
jne
jo
add
inc
cli
jl
mov
mov
daa
push
or
int
andb
adc
out
jg
xor
fimuls
imul
sahf
sbb
jb
aas
maxps
pop
cltd
push
inc
pop
pop
cmp
cs
sbb
ret
sub
lods
jae
mov
lds
fsubrl
shl
aad
jle
jnp
cld
sub
or
cmp
movsb
push
xor
jbe
lahf
push
pop
shll
xor
mov
cmp
dec
and
addr16
sbb
sbb
mov
inc
inc
mov
stos
xor
push
xor
addl
sub
lahf
iret
mov
jnp
or
xchg
mov
in
fs
leave
aam
add
js
js
mov
rcll
ds
push
mov
enter
scas
andb
pop
and
mov
adc
xchg
addr16
insb
cltd
mov
xor
cmp
inc
xor
mov
gs
mov
insb
jle
nop
out
leave
out
push
push
cwtl
pop
std
insl
xchg
cld
leave
fwait
test
sbb
in
xchg
add
mov
xchg
xlat
movsl
mov
cli
cmpsl
xchg
lods
jno
jmp
outsb
cwtl
inc
mov
sbbl
rclb
mov
les
dec
ljmp
jmp
adc
loop
out
jecxz
mov
stos
clc
fistpl
sub
jp
test
jecxz
subl
mov
lods
aas
mov
lret
cli
lods
out
jns
mov
jb
divb
inc
add
mov
and
and
cli
mov
cmp
adc
addr16
or
lahf
sbb
ljmpw
orl
fs
xor
fisubrl
xchg
mov
in
adc
inc
and
mov
push
fistps
and
xchg
out
ss
pop
aas
add
lds
pop
fistpll
mov
fcompl
xorl
push
push
mov
sub
fcmovnbe
icebp
and
xchg
enter
fcmovnb
stos
xor
pop
orb
fbstp
stos
aad
data16
inc
inc
dec
xor
mov
mov
int
aam
push
and
pusha
js,pt
cmp
dec
sti
int
sbb
addr16
jg
hlt
mov
loopne
mov
push
sahf
inc
jmp
flds
sarl
je
adc
mov
pop
jle
repz
enter
sahf
cmpsl
outsl
out
lret
cmp
xor
sbb
sbb
cs
in
xor
and
out
movsl
jecxz
fldl2e
xorb
mov
ret
mov
mov
jl
cmpsl
je
jmp
inc
iret
cmc
arpl
pop
sub
jecxz
adc
jp
bound
push
cmpsl
mov
out
sbb
push
flds
xchg
xchg
push
pop
push
push
lea
js
jns
xor
push
cld
jno
dec
out
sbbb
add
push
lahf
addr16
sti
pmulhuw
pop
stc
fs
add
mov
repz
add
push
shl
jp
mov
mov
out
mov
pop
xchg
sub
fsubl
or
clc
loopne
mov
sbb
or
clc
pop
repz
mov
dec
sbb
vpmacssww
aam
ja
jne
rorb
dec
push
leave
sbb
dec
into
insb
fsubr
stc
xor
inc
mov
jae
in
mov
adc
jne
cmp
pop
mov
dec
fmulp
shlb
sbb
loope
xor
mov
icebp
imul
sti
inc
shr
out
mov
xchg
lea
lahf
ror
xchg
dec
aaa
fadds
xchg
mov
dec
pop
mov
lahf
or
notb
sbb
xor
pop
dec
dec
fwait
pop
mov
shll
jae
sbb
jge
jno
lea
xor
addr16
sbb
rorb
sahf
test
jmp
aad
xor
test
cmp
fnstsw
popa
fwait
je
cmc
es
sub
je
lcall
ds
mov
jl,pt
jne
mov
adc
data16
mov
imul
jle
fstpt
xchg
jl
negb
inc
lcall
pop
cmpsl
inc
or
mov
jne
andw
cmpsl
mov
pusha
testl
bound
dec
jae
movhps
dec
pop
sbb
cmp
loopne
mov
jo
std
push
popf
ret
lcall
dec
push
test
lock
movsb
cmp
scas
add
xchg
push
pop
loopne
shll
jmp
out
jae
pop
imul
lds
and
adc
pop
dec
or
gs
lcall
dec
je
gs
or
cmp
and
aam
mov
pushf
loopne
jl
push
pop
testl
aas
cmp
mov
rol
insl
fldt
inc
stos
mov
dec
imul
mov
jl
mov
xor
or
or
or
push
jb
xchg
inc
clc
cmc
lret
rcll
das
or
mov
gs
in
jno
in
in
jle
mov
mov
xchg
pop
stc
or
hlt
in
lret
mov
jle
stos
cltd
mov
test
pop
sub
aaa
sub
cltd
iret
mov
jnp
ret
pusha
dec
dec
jl
leave
les
push
dec
orb
shr
pusha
ja
in
xchg
mov
decb
dec
sub
mov
push
jecxz
and
and
int
push
push
adc
je
jmp
in
or
mov
push
les
inc
adc
fwait
out
jle
into
adc
test
test
imul
jp
insl
jge
fcomip
push
and
mov
pop
scas
add
test
std
in
std
lahf
gs
outsb
mov
daa
out
inc
iret
lcall
daa
fs
inc
jmp
jns
in
scas
xchg
mov
or
xor
mov
pop
jge
int3
int3
in
jno
cli
xchg
arpl
gs
dec
jno
push
cmp
mov
cmpsl
push
pop
or
inc
aam
out
mov
and
jnp
clc
lahf
pop
out
imul
repnz
jns
adc
popf
lcall
fucomi
xor
xchg
pop
xchg
mov
out
adc
pop
andb
icebp
ret
push
arpl
out
sbb
xor
jno
cmp
push
xchg
xor
out
pop
das
or
push
je
sbb
pop
outsb
sub
or
jb
pop
mov
and
das
adc
dec
cmp
add
and
dec
imul
xlat
sbbb
insl
cmpl
gs
cld
adc
pop
in
sub
notb
int3
dec
arpl
std
pop
adc
cmp
scas
push
xchg
pusha
loope
enter
add
xor
sahf
shlb
pop
push
mov
sbb
fimull
addl
pop
add
adc
xor
notb
loope
pusha
js
xchg
inc
mov
jle
fwait
jbe
in
xchg
sub
jl
pop
inc
mov
imul
sub
mov
mov
daa
jb
pop
shrl
dec
outsb
fsubrl
jae
jecxz
stos
jns
pop
imul
dec
cli
cmp
push
imul
sub
mov
cmp
sti
jo
xchg
pop
or
ret
ret
jo
pushf
mov
mov
sub
and
out
push
gs
rclb
cmp
sbb
ficoms
mov
and
or
popa
or
pop
push
scas
adc
lock
clc
push
imul
cs
inc
mov
push
lret
xchg
movsl
push
sbb
and
mov
daa
call
mov
inc
jge
jnp
lret
pop
out
pop
outsb
adc
daa
scas
nop
pop
mov
cmp
mov
xor
fwait
test
push
mov
xor
or
push
fsubrs
or
dec
cmp
icebp
sahf
mov
pop
adc
inc
push
inc
fwait
add
cs
mov
mov
xor
push
aaa
sahf
jae
or
and
in
pop
clc
icebp
sub
push
ret
dec
inc
mov
xor
pop
nop
push
shlb
jb
inc
movsl
jecxz
bound
pop
addr16
jecxz
and
add
mov
and
sbb
pushf
jns
and
int3
jecxz
xor
stos
pop
daa
aaa
cmp
in
and
insl
jo
dec
je
jo
xchg
xchg
imul
mov
pusha
fmull
ss
mov
bound
clc
adc
loop
mov
daa
sar
xor
push
outsl
ds
std
in
out
add
fistps
inc
xchg
faddl
scas
push
dec
sahf
mov
mov
sti
jecxz
shlb
inc
inc
dec
pop
test
mov
xchg
mov
push
aas
sub
nop
mov
xor
fists
mov
test
push
xchg
in
nop
mov
sbb
cli
mov
add
shlb
lahf
xor
xchg
and
ret
cmp
or
sbb
pop
pop
lret
mov
pusha
dec
sub
lea
in
scas
jl
ficompl
dec
lret
push
cs
sbb
popf
inc
aad
adc
scas
ljmp
or
pop
mov
aas
adc
cli
fstpt
mov
call
adc
dec
xchg
aad
pop
sbb
inc
xor
cld
inc
mov
out
orb
data16
pushf
inc
pop
mov
jmp
xor
scas
jecxz
xchg
aas
pop
xchg
lock
imul
std
add
dec
add
daa
in
push
mov
les
jl
xchg
mov
xchg
and
clc
pop
xlat
popf
scas
inc
xlat
call
pop
test
das
push
or
add
cmpsb
js
adc
mov
xchg
sbb
les
adc
repz
push
mov
sub
cs
jbe
inc
cmpsb
dec
cld
data16
adc
jns
repz
addr16
dec
test
push
add
test
mov
add
lahf
jmp
testb
bnd
repz
lods
push
fidivs
push
mov
arpl
outsb
leave
je
out
jne
push
scas
repnz
pop
test
sub
std
hlt
paddw
sbb
mov
add
data16
sti
lea
pop
and
mov
jge
cld
lret
fisubs
or
sub
sbb
mov
addr16
lds
sub
push
or
dec
cmp
fdivp
pop
dec
enter
pop
jp
mov
data16
cmp
mov
inc
test
ljmp
pop
mov
jb
loopne
pusha
adc
mov
inc
cmpsb
xlat
adc
jno
jge
cs
subl
jp
sahf
outsl
push
push
dec
movsl
pop
fsubr
sbb
mov
adc
dec
sub
lret
icebp
aam
jbe
xchg
cmp
pop
out
das
xor
xlat
cs
int
clc
cmp
dec
out
sar
xor
call
adc
jno
or
fisubl
dec
lahf
std
xchg
pop
psubusw
movsl
add
hlt
xchg
push
out
sbb
and
add
lcall
test
cld
fwait
mov
cld
loopne
push
adc
sub
loop
mov
lock
ljmp
shll
imull
xor
testb
nop
daa
je
adc
jns
mov
sbb
adc
xchg
adc
scas
in
cmp
cmp
ret
adc
and
in
out
shl
int3
jp
in
insl
mov
clc
mov
and
lcall
sub
loopne
pop
xchg
push
or
std
push
mov
lahf
xor
imull
outsb
dec
jmp
add
pop
gs
cmp
or
and
jnp
xchg
xchg
into
lock
movsb
ret
je
jae
hlt
and
push
in
repnz
lea
inc
xchg
add
pop
and
sbb
test
jo
out
pop
mov
imul
pop
imul
sbb
mov
jnp
sarb
or
and
pop
fidivrl
pop
mov
leave
fcomp
mov
movsb
sahf
popa
rclb
xchg
mov
cmpsl
andb
xor
std
sbb
sub
daa
jmp
call
pop
fiadds
je
inc
mov
pop
dec
jg
test
sbb
sbb
fldenv
call
shlb
imul
adc
inc
aam
je
insl
pop
out
into
loope
push
and
shlb
sbbb
cmc
pop
jb
repnz
mov
cld
xchg
dec
insl
clc
ds
movsb
mov
in
add
dec
sahf
cmp
in
push
pop
push
aam
mov
sbb
sub
ret
js
or
dec
insb
unpckhps
xchg
jmp
pop
jne
les
hlt
fists
or
pop
xchg
mov
ljmp
inc
mov
arpl
xchg
pushf
loop
ljmp
mov
jmp
in
pop
outsb
and
ficomps
scas
jle
or
pop
xchg
es
stc
je
xlat
adc
insl
ss
and
das
adc
std
mov
out
mov
in
repz
hlt
ret
adc
jle
adc
dec
jne
cmp
scas
fsubr
mov
orl
push
movsb
push
mov
mov
xor
mov
lods
stos
inc
jae
push
adc
push
cs
mov
movsb
jp
sub
scas
lods
sbb
fistl
dec
sarb
push
mov
pop
xor
subl
clc
nop
push
cmp
pusha
ret
loope
adc
push
dec
insl
scas
stos
xlat
add
daa
jmp
fwait
pop
cmp
shl
mov
cmp
loop
xor
sub
out
add
daa
cwtl
nop
iret
xlat
xor
into
shrb
inc
es
xor
mov
in
sbb
in
ficompl
icebp
mov
pop
mov
or
and
or
loopne
add
and
pop
ds
mov
xor
jl
shrl
pop
popl
dec
out
loope
and
mov
es
inc
xchg
adc
xchg
sub
int
xor
and
imul
xchg
insl
push
push
fwait
ljmp
dec
ljmp
jle
pop
adc
inc
dec
jg
xchg
push
repz
push
lret
fnstenv
addr16
popa
icebp
cmpsb
pop
repz
test
pop
movsl
cmova
and
add
push
sbb
fdivrl
icebp
sub
cld
jecxz
xchg
ret
jge
lods
stos
cmp
lds
sbb
int
stc
pop
cmp
jbe
enter
mov
mov
inc
outsb
hlt
orb
test
adc
in
aam
or
mov
or
ss
ss
and
hlt
jg
test
scas
jle
lods
mov
fldt
popf
xchg
andl
xchg
in
stos
mov
subl
xchg
and
jo
xchg
push
cmc
or
xlat
xchg
addr16
mov
into
int3
mov
mov
ret
aam
dec
sarl
clc
sub
mov
pop
inc
lds
sbb
push
cwtl
fistpl
movsb
imul
movl
icebp
ljmp
fsub
lea
iret
jb
push
mov
fmuls
or
push
mov
sub
jns
push
sub
jle
ja,pt
sbb
ror
out
addr16
imul
and
jp
shl
loopne
mov
fwait
sbb
dec
fldt
cmp
sbb
rorl
and
xchg
inc
ficompl
adc
jno
hlt
fbld
and
mov
xchg
dec
cs
mov
fdivrl
xchg
push
mov
in
mov
sbb
inc
jg
add
or
pop
jns
sub
or
popa
jo
enter
mov
in
pop
enter
adc
lock
inc
xchg
jp
xchg
mov
insb
lcall
sahf
xchg
sub
add
fdivl
cmp
mov
xchg
imul
add
nop
pop
cli
xor
es
test
xor
dec
aaa
cmc
inc
subl
sub
jbe
mov
inc
idivb
loope
dec
xchg
mov
jle
inc
pusha
and
addr16
mov
call
leave
movsb
add
dec
cmp
out
push
jne
xchg
sbbl
cmp
inc
push
lods
push
jbe
mov
imul
inc
xor
push
lret
mov
fiadds
cmpb
adc
mov
movsl
pop
insl
dec
add
sahf
inc
mov
adc
push
imul
pusha
out
adcl
repz
jno
loop
or
fwait
pushf
xchg
mov
mov
xchg
rorl
lds
cli
pop
gs
lock
add
es
cmp
cs
out
lods
sar
cmp
jbe
lock
jae
jb
push
xor
cs
and
dec
ss
xchg
cmp
inc
sub
xor
loop
jp
pop
test
mov
jle
xchg
xchg
repnz
push
xchg
shlb
inc
cld
mov
or
mov
add
add
imul
inc
loopne
loope
xchg
mov
cmp
lods
test
fwait
pop
mov
mov
mov
cmpsb
rolb
mov
pop
popa
xchg
sub
rorl
mov
adc
dec
pop
cld
lahf
outsb
rolb
fldz
sbb
mov
adc
and
mov
data16
loope
fstl
mov
or
push
and
pop
pop
movsb
jnp
mov
bound
aad
arpl
lret
xchg
lcall
push
sbb
dec
sbb
jg
cmpsl
mov
scas
fs
push
and
mov
mov
cli
int3
imul
adc
dec
or
in
in
dec
cwtl
mov
in
fmuls
mov
and
repz
adc
imul
add
jmp
adc
outsb
fbld
ret
jae
rorl
pop
imul
aaa
sub
or
call
inc
and
or
pcmpeqw
mov
mov
mov
loopne
push
sbb
adc
insl
js
cmp
lcallw
call
pushf
sbb
inc
rcrl
mov
mov
jns
rsqrtps
std
rorl
pusha
ss
gs
pusha
divb
and
rcrl
aas
mov
fisttpl
cmpsl
std
pushf
repz
dec
fcmovnb
adc
cmp
mov
add
xor
outsl
fidivs
add
cmp
ret
mov
dec
mov
aas
dec
in
push
push
stos
sub
ja
mov
inc
cmp
add
push
scas
pushl
xchg
into
cli
mov
push
std
push
push
imul
imul
push
jbe
cmp
or
inc
sarl
iret
gs
fnstenv
jg
mov
lock
mov
jo
sub
add
roll
movsl
addb
cli
pop
test
xchg
aam
sahf
sbb
xor
stos
xor
mov
aam
cltd
aam
jmp
push
pushf
mov
inc
cli
int
fcmovnb
adc
push
stos
jge
cmp
jge
iret
mov
sti
inc
aam
out
dec
std
lcall
inc
loope
notb
pop
pop
mov
popa
insb
adc
je
dec
stos
je
dec
stos
jmp
xchg
push
xorl
or
add
jns
nop
in
fwait
pop
les
mov
cmp
ss
pushf
ja
mov
mov
jp
mov
and
dec
in
rclb
push
push
stos
popf
pop
mov
fsubrs
adc
pop
mov
clc
das
push
roll
shll
popa
cmc
push
aaa
xchg
push
nop
jbe
pop
mov
fidivrs
and
js
pop
jne
xchg
push
xchg
lds
push
test
outsl
addl
push
inc
sti
adc
and
les
sti
test
in
in
insl
das
ja
test
mov
nop
push
int3
push
jns
js
dec
mov
jbe
stc
and
js
jmp
mov
sbb
lcall
or
adc
dec
pop
push
cs
fcmovu
mov
jmp
fisubs
ret
jae
push
push
mov
cmp
dec
inc
dec
adc
outsl
je
insl
dec
pop
mov
dec
adc
es
out
dec
jmp
subb
push
mov
jg
add
and
cmpsb
xchg
sbb
sbb
out
jno
mov
add
and
pop
xchg
xchg
xchg
popf
mov
or
sbb
sub
imul
sub
out
lock
dec
inc
fsubp
xor
ss
inc
out
jmp
inc
nop
test
je
in
mov
mov
sbb
jp
pop
pop
leave
adc
jp
repnz
push
adc
fwait
mov
push
sti
adc
ficompl
add
adc
mov
sti
jno
mov
pushl
lea
or
shll
pop
push
fsubs
xchg
neg
loop
cmp
and
gs
pop
inc
mov
mov
xchg
or
imul
movsl
jns
jbe
xchg
xor
ja
stos
dec
mov
sahf
ret
lock
xchg
popf
dec
popa
mov
scas
or
mov
dec
into
sti
sti
cmp
push
pusha
inc
inc
std
shl
ss
cltd
mov
pusha
jl
rcrl
mov
aam
sbb
mov
rol
movsl
adc
dec
loope
leave
sub
sub
adc
xor
stos
roll
movsl
cmp
dec
lds
repz
xchg
sti
pop
xchg
in
adc
in
mov
mov
sub
xor
mov
inc
and
jmp
hlt
dec
int3
mov
pop
jbe
dec
and
inc
inc
xchg
divb
cmc
sahf
or
rorb
and
xchg
stos
jl
popf
inc
dec
add
cmp
int
rcll
sbb
pop
jl
mov
les
and
sub
sbb
movsb
cltd
jmp
inc
mov
mull
jae
addr16
imul
shll
loop
sub
cmp
or
dec
mov
enter
stos
push
in
inc
pop
xor
or
xor
inc
fs
mov
in
pop
or
shr
arpl
sbb
dec
xor
or
inc
js
adc
jno
mov
mov
leave
in
cs
std
adc
pop
bound
out
andl
adc
dec
mov
dec
mov
inc
inc
movzwl
mov
lret
xchg
inc
xchg
mov
sarl
test
gs
orb
sbbl
inc
adc
scas
jle
into
mov
lcall
dec
add
pusha
addr16
decl
adc
in
scas
and
imul
lea
dec
outsb
sbbb
jnp
xor
jae
sbb
daa
fmulp
cs
mov
mov
add
fwait
mov
push
ss
fcmovnb
repz
lods
cmc
jne
nop
cmp
mov
pop
push
mov
movsb
and
mov
xchg
in
mov
mov
pop
test
mov
jnp
xor
dec
mov
insb
mov
test
mov
sub
scas
stos
add
adc
insl
xchg
pusha
fld
mov
idivl
mov
fs
lahf
mov
sbb
mov
dec
adcb
pop
mov
and
lds
xchg
popf
hlt
and
xchg
add
lds
dec
inc
jnp
imul
rorb
xor
popa
jecxz
ss
xchg
mov
pop
mov
dec
adc
mov
lock
out
mov
shll
addr16
sbb
pop
mov
jmp
pusha
cmp
cmp
loop
jbe
add
insl
rorl
or
mov
mov
das
push
jmp
adc
cs
lcall
inc
sbb
gs
out
das
aaa
jge
popa
dec
arpl
mov
and
les
or
pop
incl
push
outsb
jae
add
push
push
inc
iret
mov
xor
lods
pop
pop
sub
or
and
jb
cmpsl
in
call
pop
in
ret
jge
or
mov
dec
int3
sub
movsw
dec
mov
cmp
loope
out
inc
add
incb
movsb
adc
and
sbb
push
xor
arpl
clc
xor
pop
push
aaa
mov
push
dec
and
not
stc
cmp
daa
mov
insl
lea
imulb
xchg
loop
loop
out
mov
add
push
hlt
ljmp
dec
adcb
stc
jmp
scas
cmpsb
cmp
daa
test
push
lds
cld
mov
xchg
or
ret
rdpmc
push
jg
sbb
test
aam
hlt
push
imul
les
test
adc
rcr
cmc
ja
imul
xor
xorb
fwait
lahf
aaa
into
repnz
call
clc
aaa
ret
call
pop
insl
jp
or
ljmp
sbb
sub
push
jmp
mov
fldcw
xor
out
rcll
xchg
cs
pusha
inc
sub
dec
dec
es
pop
sub
arpl
mov
push
fs
xchg
rolb
enter
mov
dec
push
pop
aam
fsts
fadd
jb
cmp
dec
jge
push
xchg
nop
and
popl
or
push
lahf
bound
xor
idiv
in
or
dec
push
fstpt
shlb
mov
jp
shl
push
outsb
and
cs
imul
aas
imulb
cmp
add
cmp
icebp
cmp
cmp
pop
push
sbb
push
cmp
rcrl
aas
push
push
mov
mov
push
pusha
jns
ret
mov
dec
pusha
xchg
lods
mov
push
xor
mov
ror
test
dec
je
dec
dec
movsl
lods
sbb
hlt
cmp
lds
loope
fs
jae
daa
sub
mov
sbb
adc
sti
scas
lock
lock
fisttpl
xor
xchg
add
sbb
jo
repz
enter
xchg
sub
fwait
aam
mov
mov
fnstsw
les
movsl
ds
neg
cmp
gs
leave
jge
out
int
inc
add
and
adc
lea
adc
cwtl
pop
je
jnp
add
loopne
add
dec
dec
pushf
aaa
test
mov
cmp
imul
sbb
jg
pop
sbb
cmpsl
sar
in
das
or
addr16
rolb
sbb
testl
jno
aas
add
aad
pop
int3
mov
iret
test
mov
jbe
xlat
bnd
popf
ret
jge
jae
sahf
mov
mov
hlt
adc
fsubr
add
sub
fnsave
fs
mov
mov
jge
mov
out
pop
add
dec
sub
jl
add
bound
push
rcll
inc
mov
sbb
jnp
inc
jbe
lea
sahf
sbb
je
ja
mov
dec
add
mov
or
push
mov
sbb
arpl
cmp
push
out
sub
jnp
shrb
in
inc
ficoms
push
ret
repnz
pop
add
lcall
jmp
aaa
dec
daa
pop
fisubl
fwait
add
dec
mov
roll
ficompl
ds
push
pop
daa
cltd
repz
lret
lock
movsl
std
imul
mov
test
push
xor
mov
imull
aad
inc
js
icebp
test
sti
shll
xchg
ret
and
xchg
dec
inc
loopne
pop
sub
imul
dec
cmc
and
pusha
xor
xor
fbstp
insb
jge
jnp
or
scas
inc
push
mov
movsl
inc
lahf
popa
mov
jne
je
push
les
adc
repz
fsubp
mov
fstpl
xor
shrb
jne
lea
mov
test
and
cmc
iret
int3
dec
lods
mov
pop
cmp
mov
je,pn
dec
dec
shrl
or
add
jg
xor
xorl
jg
mov
sbb
add
sbb
mov
pop
and
pop
nop
adc
dec
out
sub
adc
xchg
sbb
inc
int
ljmp
add
push
or
shll
push
sti
dec
loopne
scas
call
add
sbb
xchg
dec
mov
lods
sub
jbe
or
jle
xchg
in
mov
lods
mov
mov
lock
call
jo
repnz
pop
dec
insb
aam
vmwrite
lcall
xchg
or
add
jns
fildll
int3
gs
jo
push
mov
xorb
cli
inc
lea
push
cmp
jg
xchg
clc
xchg
shlb
int3
dec
dec
push
lock
push
add
sbb
xor
jg
addr16
lahf
sbb
jmp
cmp
dec
pushf
add
test
sub
sub
mov
mov
shlb
cmpsb
popa
enter
into
mov
pop
jb
mov
inc
sub
out
and
inc
mov
mov
push
pop
cld
int3
inc
outsb
in
aaa
xchg
or
or
aad
ljmp
lahf
mov
nop
adc
movsl
add
out
lea
add
and
push
ja
ja
add
into
rcrb
pop
mov
or
mov
dec
stc
add
rcrb
pop
adc
jne
lds
cmp
data16
adc
push
pop
fwait
shlw
lds
aaa
in
rclb
leave
mov
mov
inc
out
xor
clc
jno
push
xor
lods
mov
adc
jge
mov
orl
fisttpll
icebp
and
or
mov
fcomps
mov
mov
xor
jb
sti
stc
add
jle
aam
mov
jne
add
into
push
aaa
scas
pop
adc
pop
or
aas
mov
pusha
ds
test
or
inc
push
sub
jno
out
mov
sysexit
jne
or
lds
pop
inc
into
mov
jns
lea
xor
loopne
xor
cmp
movsl
jno
cltd
mov
inc
ror
rorl
lcall
repz
rorl
pop
mov
push
int
stc
shl
pop
mov
mov
xchg
rsqrtps
ret
mov
fs
cwtl
int3
repnz
jmpw
fnstsw
cmp
adc
xor
lods
push
xchg
or
add
pushf
pop
or
cs
push
sub
or
lahf
aad
sub
xchg
adc
stc
and
push
mov
jns
and
adc
mov
mov
icebp
outsl
add
repnz
adc
pop
mov
and
pop
test
lods
or
pop
mov
adc
int3
out
mov
and
pushf
adc
mov
call
or
xchg
pop
dec
mov
mov
xchg
push
out
loop
sub
xor
push
push
adc
scas
xchg
and
inc
stos
inc
sti
out
clc
nop
or
mov
fiadds
cs
xor
imulb
jo
out
data16
jmp
xchg
loop
das
movsl
test
movsb
mov
adc
and
adc
adc
cwtl
cmp
cmp
mov
inc
sub
mov
push
push
and
das
mov
inc
das
mov
int3
push
cmp
or
fldl2t
scas
cmp
pop
sbbl
mov
stc
ret
ret
jle
fucomip
xor
mul
jbe
ss
sti
and
push
adc
push
mov
insl
push
out
sub
pop
cmp
mov
mov
inc
xchg
dec
sti
pop
xchg
cmc
add
mov
loopne
imul
int
shl
out
push
aam
inc
inc
call
in
aam
stos
xchg
push
push
cmp
andb
cmp
xchg
rcll
je
inc
inc
fwait
arpl
rclb
push
push
pop
xchg
mov
adc
push
daa
outsb
notl
jmp
mov
sahf
repz
je
push
sub
mov
cmpsl
pop
push
push
in
incb
push
ret
adc
loop
stos
adcb
ret
cmp
aas
mov
imul
mov
pop
add
jne
ret
addb
inc
repnz
xor
mov
sub
mov
add
inc
xor
js
sahf
fisubrs
into
cmc
xor
adc
xchg
iret
pusha
aas
push
and
or
push
mov
push
jae
daa
faddl
pop
mov
ss
jl
sbb
ljmp
shl
adc
push
mov
sub
and
js
cs
sbb
andb
push
xchg
rorl
dec
in
inc
mov
and
inc
js
fiaddl
pop
sbbb
and
in
mov
push
sub
dec
add
jg
sbb
or
pushf
aam
mov
add
add
mov
and
div
pushw
js
push
fwait
std
cmp
in
or
lahf
mov
xor
xor
stc
rolb
leave
xchg
jns
sub
pop
jns
daa
mov
cmp
xchg
shrl
movsb
cmp
das
into
out
es
sbb
divb
cmpsl
rcrb
fcompl
adcb
push
stos
and
cmpsb
push
push
jecxz
aas
push
or
clc
aad
stos
lods
subl
and
pop
jo
lods
add
clc
aaa
jbe
adc
pusha
mov
and
imulb
mov
sub
jbe
push
xchg
stos
test
outsb
iret
jecxz
clc
lcall
out
push
cmp
adc
roll
fists
setnp
fnstenv
out
cmpsb
jge
rcrb
push
sahf
pop
out
jmp
sti
icebp
push
adc
push
lcall
ret
scas
xchg
mov
adc
mov
ret
push
fdivrs
xchg
sarb
dec
popf
dec
push
jg
xor
or
sbb
fisubs
xor
cmp
scas
sbb
out
sbb
jge
mov
int3
sbb
and
mov
cs
lock
mov
sbb
call
pop
repz
jmp
lahf
mov
xor
sub
dec
test
addb
scas
int
cmp
inc
lea
or
xchg
mov
mov
fnsave
jae
xchg
add
or
inc
xchg
cmc
dec
loopne
ret
pop
adc
ret
arpl
loop
cli
inc
stos
fidivrs
cltd
sub
cmpsl
push
pop
dec
sbb
mov
clc
dec
cmp
icebp
popa
cs
cmp
inc
jno
xor
repnz
cwtl
andb
lret
xchg
divl
jg
mov
fcmovb
push
dec
add
mov
xor
pop
pop
and
xchg
sbb
mov
inc
and
rcrl
arpl
xchg
jp
sbb
fldcw
inc
mov
mov
sbb
in
call
sbb
jecxz
sub
out
ja
lcall
rorb
and
add
mov
xor
mov
sub
shrl
xchg
xchg
xchg
cmpsb
stc
pop
inc
outsl
jae
push
cwtl
dec
add
nop
sbb
push
adc
mov
jle
lcall
inc
loop
test
sbb
lea
in
adc
mov
pop
xor
test
test
pop
add
js
insb
fwait
jle
lcall
lods
xchg
or
pushf
inc
inc
imul
mov
xchg
push
pop
sub
mul
lret
in
mov
repz
adc
popf
add
cmp
ds
fadd
add
ret
es
adc
push
mov
fprem1
xchg
pop
adc
in
outsb
add
inc
jnp
es
cli
sbb
jbe
cmp
inc
cmpsb
jo
sub
sub
adc
in
pop
stos
decl
mov
fadds
test
je
repnz
lds
xor
ficoms
jns
inc
mov
jle
push
cld
jo
mov
dec
adc
inc
popa
xchg
outsl
aam
mov
xchg
push
or
es
sub
xor
ja
push
in
mov
add
and
rcll
jecxz
pusha
dec
dec
xor
je
sbb
es
sarl
into
jl
ret
jg
jo
ret
ds
xchg
mov
adc
xor
dec
sti
mov
xchg
cmpsb
mov
sub
pop
mov
imul
shlb
in
cmc
add
jl
inc
mov
cmp
pop
ljmp
shl
push
outsb
push
and
pop
mov
subb
mov
or
pop
dec
sbb
cwtl
mov
push
mov
sub
pop
jbe
mov
dec
into
pop
out
imul
lret
mov
insl
ret
mov
lret
jge
das
sbb
ffree
dec
stc
cmp
jecxz
lods
lahf
fbld
jl
subb
ficoms
sub
in
fiaddl
xorl
dec
into
jne,pt
test
in
push
repz
lcall
adc
pop
sub
scas
pushf
add
push
adc
sub
xchg
in
mov
sub
nopl
pop
mov
dec
push
adc
adc
movsb
out
add
out
pusha
sbb
jmp
mov
test
aad
xchg
cmp
or
mov
insb
fsubrl
mov
mov
mov
xchg
ja
dec
js
aaa
stos
pop
jno
leave
inc
jbe
mov
pop
dec
je
inc
xor
push
or
or
xor
test
subl
sub
fdivrp
mov
jne
jg
inc
out
cmp
xor
aaa
xor
pop
adc
or
xor
movsl
sar
xor
inc
lret
out
cmp
movb
xchg
xchg
mov
data16
sbb
or
jmp
jns
lcall
movsb
sbb
movsl
in
and
call
jno
jae
out
inc
sub
ret
or
scas
jo
cmpsb
dec
lcall
mov
mov
loope
cmp
hlt
mov
mov
js
mov
lods
add
jecxz
mov
mov
lcall
rcll
cwtl
in
std
pop
stc
jbe
adc
sbb
push
test
sub
ss
enter
push
pop
xor
jne
sahf
les
int
mov
or
dec
outsb
unpckhps
fiadds
insb
iret
pushf
mov
push
xchg
add
add
push
jne
cmpsl
mov
pop
cmp
sub
add
xchg
cmp
scas
mov
push
int
sti
scas
push
push
lods
or
mov
pusha
pusha
mov
je
mov
arpl
scas
sub
mov
adc
mov
test
mov
sbb
lods
add
sarb
and
push
gs
cmp
test
jl
mov
fcoms
push
mov
jecxz
pop
mov
lret
adc
xor
mov
enter
cmpsl
fstps
andl
mov
xchg
mov
pop
pop
pop
out
sub
test
jae
or
cli
push
rcrb
scas
xchg
jl
pop
dec
mov
outsl
rclb
pop
cmc
les
pop
jle
daa
aaa
xlat
jno
push
inc
adc
pop
inc
mov
mov
addb
push
mov
add
sbb
daa
lahf
cmpsl
inc
sahf
jecxz
and
dec
sbb
cltd
or
jecxz
lcall
shll
mov
je
sbb
mov
inc
or
mov
out
sub
addl
in
jge
clc
ja
sub
mov
fisubrl
fdivr
leave
jge
sbb
pop
adcl
sti
aas
int3
leave
nop
mov
addr16
jmp
sbb
push
mov
push
pop
repnz
inc
jp
call
mov
lods
push
outsl
xor
inc
or
cs
xor
sub
mov
mov
jb
mov
push
ja
dec
and
mov
push
mov
loope
mov
popf
mov
fwait
cltd
cwtl
roll
popa
add
xchg
xchg
add
xchg
cmp
xor
or
jle
push
cmp
pop
pusha
in
cmp
push
out
pop
lret
mov
ja
ds
pusha
sbb
cmp
mov
lods
xchg
movsl
inc
movsl
add
inc
stos
mov
in
mov
cmp
testl
test
push
sarb
jge
sbb
lds
jmp
in
add
cmp
and
lods
push
sbb
popf
in
rol
inc
xor
jecxz
inc
jmp
mov
shrl
fwait
push
mov
clc
pop
mov
lahf
or
mov
inc
xchg
out
loopne
sbb
adc
lcall
pop
push
sub
aad
xchg
cmp
mov
or
mov
mov
jge
adc
scas
rcrb
movsl
dec
in
mov
sbb
xor
out
dec
test
and
out
sub
xor
xchg
xlat
cli
lret
mov
fcmovnb
clc
leave
inc
cmp
mov
mov
push
gs
outsl
mov
xor
ret
loopne
loopne
je
inc
ja
push
in
cmp
add
addb
mov
add
cs
inc
sub
mov
sub
jle
adc
sbb
mov
sbb
stc
jb
insl
loope
fs
xchg
fmull
pushf
push
xor
pop
pop
cmpsb
gs
mov
add
fsubl
shr
mov
sub
daa
mov
movsb
pop
flds
sub
insl
xor
mov
push
cltd
data16
lods
or
lahf
pop
push
shl
jno
mov
popf
jbe
xchg
sbb
fists
dec
adc
mov
hlt
pop
fbstp
push
dec
imul
ficoml
xchg
mov
cltd
dec
outsl
out
inc
sub
push
fchs
sahf
jge
push
stos
pusha
sbb
orl
call
and
cmpb
xchg
pop
stos
xchg
jmp
add
cmpsl
mov
stos
je
roll
aam
aad
push
or
ds
ja
shll
fs
movsb
add
push
mov
sbb
push
inc
mov
mov
rorb
jno
faddl
pop
fldl2t
movsb
inc
movsb
cvttps2pi
dec
test
imul
sarb
mov
enter
sbb
xchg
loopne
xchg
mov
or
dec
jb
mov
or
imul
stc
cld
mov
inc
mov
jns
or
adc
mov
lcall
jg
push
popf
stos
pop
imul
cmp
push
je
sub
pop
pop
cs
mov
fdiv
mov
inc
dec
and
cmpsb
pushf
repnz
clc
pushf
clc
stos
cmp
xor
shll
lahf
sbb
mov
dec
imull
and
push
push
insb
sti
xchg
xor
test
mov
xchg
hlt
outsl
lods
sub
xor
int3
lock
sub
cltd
stc
sub
out
pushf
out
in
dec
push
vpaddsw
loope
inc
or
aaa
iret
mov
push
jecxz
fimull
mov
psrad
loop
inc
hlt
sub
inc
inc
pop
icebp
xchg
bound
adc
fcoms
lret
jl
stc
insb
xchg
setp
push
insb
push
test
and
inc
pop
push
movsb
adc
mov
pop
or
push
xor
lock
jns
or
mov
mov
cltd
inc
outsl
jne
stc
lock
pop
ljmp
mov
mov
in
pushf
inc
mov
aaa
ficoms
outsl
jb
icebp
xor
leave
mov
aad
jne
sti
sbb
call
leave
aad
leave
lea
out
jb
inc
inc
in
xor
cltd
ss
fstpl
testb
mov
insb
mov
dec
xchg
push
fwait
push
adc
sahf
andl
xchg
dec
mov
adc
jnp
dec
mov
sbb
call
lods
push
xchg
mov
jo
sbb
jle
enter
adc
mov
int3
cltd
fisttps
add
aas
out
jb
jo
clc
mov
faddl
mov
mov
leave
movsb
inc
jnp
add
mov
movsb
loop
inc
dec
hlt
pop
jnp
sub
loopne
popl
inc
outsb
and
jmp
mov
mov
pop
leave
lds
test
lret
mov
mov
and
icebp
popf
lahf
mov
cmp
sbb
xchg
inc
xor
ret
popa
sti
cmc
sbb
fists
je
in
rorl
loop
sub
mov
adc
rep
das
or
push
sub
pop
inc
push
inc
push
outsl
leave
mov
lahf
fcompl
loopne
sub
xor
pop
aad
xchg
lret
scas
aam
imul
outsl
ljmp
mov
movsb
shrb
dec
cmp
push
jmp
aas
in
xchg
mov
cltd
xchg
sbb
shlb
sbb
adc
xchg
add
lods
pop
in
add
push
or
ljmp
lods
add
movsl
or
into
mov
test
and
mov
test
lock
into
push
push
cmpl
mov
imulb
cld
xchg
das
adc
xor
aam
fimull
int
gs
cli
test
ret
push
icebp
ret
scas
ja
and
icebp
leave
adc
rol
int3
adc
aad
xchg
push
pop
push
pop
add
subb
orl
and
push
mov
insl
lds
mov
psubsw
cld
sahf
flds
or
cmp
push
adc
out
imul
data16
dec
mov
push
cmp
inc
sub
xchg
out
and
mov
pusha
iret
jmp
adc
xchg
cs
push
cmpsl
xchg
loop
pop
mov
leave
inc
cmp
lcall
clc
call
cwtl
pop
aaa
pop
mov
fwait
test
les
sbb
push
mov
fidivs
iret
jo
pushf
aas
lahf
sub
and
cltd
xor
stos
test
hlt
mov
ds
pop
mov
cs
adc
mov
mov
loopne
enter
or
repnz
inc
andb
ja
cmc
cmp
lret
mov
fstpl
mov
clc
mov
ret
pop
or
notl
fiaddl
hlt
xchg
testl
lcall
inc
orb
aad
movsl
fisubl
jo
out
mov
out
in
das
sub
xchg
xor
insb
in
bound
mov
xor
aaa
shrb
push
jge
lods
pop
stos
and
mov
mov
mov
inc
mov
push
cli
shrl
pop
dec
jle
jnp
or
js
mov
pop
das
scas
fldl
xchg
mov
push
sbb
nop
test
das
lahf
dec
decb
pop
loope
lods
or
bound
cmp
out
sub
pop
lret
mov
adc
jle
cltd
mov
lret
pop
mov
pop
aad
push
sub
or
jmp
push
es
jb
arpl
cltd
repnz
fs
mov
xchg
pop
adc
jae
lahf
sub
add
xchg
xchg
cmp
dec
or
ss
cmp
add
insb
pop
bound
adc
lods
adc
icebp
lahf
pushf
adc
jl
and
divl
xlat
lcall
adc
pop
fistpl
cmpsl
decl
push
push
lock
mov
orl
fcomp
push
mov
mov
shll
sbb
repnz
sti
out
mov
lret
aaa
into
add
loopne
cmp
movsl
stc
and
mov
dec
lahf
mov
sarl
mov
sub
ljmp
imul
fsubr
sub
out
dec
mov
daa
lods
stc
push
and
in
push
xchg
pop
gs
fidivrl
ret
aas
loope
leave
addr16
mov
and
xchg
data16
push
mov
xor
mov
shlb
pop
push
add
or
lret
ja
into
dec
cltd
dec
push
cmpsl
adc
adc
nop
test
mov
loope
jge
bound
jne
lods
push
mov
cmp
sbb
aas
fidivl
aad
xchg
inc
outsb
lock
addl
sub
mov
cmpsl
lods
lret
mov
outsb
xor
movsl
das
cmpsl
rorb
xor
jge
xor
dec
lahf
sbb
xchg
repz
cmp
out
pusha
or
jp
push
jo
adc
out
sbb
idivl
jo
jae
pop
or
sub
aas
cld
jae
pop
adc
leave
dec
lea
addl
into
and
push
shlb
fs
xchg
into
cwtl
test
add
mov
pop
aam
dec
push
mov
push
and
in
xor
push
int
pop
mov
les
jp
or
dec
xor
xchg
and
xrelease
xchg
sarl
push
inc
fsubp
cmp
cmc
outsl
xor
inc
pop
adc
mov
sbb
mov
pop
dec
fsubl
loopne
xchg
scas
loopne
sbb
outsl
call
das
call
aaa
ds
ja
sarb
inc
leave
mov
imul
test
fucom
subl
cmp
xchg
cmpsl
xchg
push
push
and
jne
fstps
ds
mov
fcomp
inc
insb
and
aam
add
inc
jecxz
test
xchg
dec
data16
test
mov
mov
lret
or
and
adc
mov
test
push
xor
bound
mov
lods
imul
data16
and
pop
shl
mov
shlb
push
push
mov
xor
jns
xchg
sbb
pop
fsubrs
jecxz
jg
pop
imul
cmp
inc
or
fsubrs
nop
adc
out
popw
ss
loopne
mov
cwtl
ja
xchg
add
pop
lea
xchg
js
pop
in
push
xchg
adc
jmp
clc
xchg
or
add
or
cld
shl
adc
movsl
cmpl
es
push
adc
adc
int3
mov
icebp
dec
pop
fsubs
sub
clc
in
xchg
push
jp
adc
push
cmp
add
cltd
idivl
and
xchg
outsb
push
jno
dec
and
pop
xchg
jmp
inc
xchg
fiadds
adcb
arpl
adc
cmp
pop
out
out
cmpsb
into
insl
dec
add
xchg
cmp
imul
cmp
stc
lret
pushf
xchg
fstpt
testb
negl
dec
aaa
or
mov
out
enter
test
push
xchg
fcmovnb
mov
jp
push
or
or
cmc
and
repz
sub
jne
mov
ja
sbb
cwtl
pushf
loop
xor
jb
mov
rorb
ljmp
shrl
jae
loop
bsr
rcl
sbb
loope
cmp
pusha
insb
stos
xor
frstor
sbb
cmp
mov
jl
sbb
and
push
or
cmp
dec
je
pop
jecxz
or
stc
rcl
dec
es
sbb
negl
lock
and
in
lock
mov
out
push
sbb
loopne
mov
movsb
and
insl
leave
imul
outsb
sub
mov
lret
or
pop
out
xor
sbb
ficompl
mov
dec
shrl
sbb
imul
jns
dec
mov
adc
mov
xchg
inc
dec
xchg
push
mov
cmpsb
ljmp
loop
shrb
pop
ds
mov
cltd
or
call
std
lahf
ds
or
aad
cmp
cmc
add
push
mov
inc
sub
loope
pop
xor
js
test
mov
notl
or
mov
pushf
mov
add
and
paddq
add
cmp
or
imul
mov
fstpl
mov
sbb
jle
arpl
sbb
mov
cmp
cltd
leave
aaa
add
scas
ja
in
out
or
in
outsb
push
jecxz
lds
adc
jcxz
movsl
std
xor
fisttps
out
and
filds
dec
pop
pop
idivl
pushf
dec
pop
or
cmp
jg
mov
sub
push
push
sbb
xor
in
push
movsl
sub
xchg
xchg
lahf
js
sahf
push
test
sti
adc
mov
lods
mov
mov
fdivs
imul
add
out
jg
adc
inc
cmp
xor
and
mov
xor
and
outsb
cs
les
push
inc
mov
inc
push
fadds
ss
bound
mov
xchg
shll
movsb
cmpsl
inc
and
nop
out
stos
or
push
lds
pop
cli
dec
mov
sbb
add
fistps
aad
jb
not
and
add
mov
in
icebp
jae
bound
mov
sbb
xlat
std
dec
cmp
xchg
sbb
sub
jnp
dec
dec
sbb
fcmovb
sbb
iret
and
add
pop
cwtl
rorb
repnz
pop
mov
inc
daa
xor
adc
mov
mov
movsb
leave
dec
jbe
stc
adc
mov
shrl
repz
and
adc
nop
lea
mov
xchg
aam
mov
push
leave
pop
fidivl
int
mov
jl
in
pushf
and
inc
std
fists
stc
mov
mov
fiadds
test
jno
cmpsl
and
icebp
pop
jbe
sub
adc
jle
ljmp
and
idivl
call
insl
mov
inc
ret
data16
lea
inc
aam
nop
jmp
xchg
jne
push
pushf
aas
pop
shl
jg
mov
push
mov
inc
adc
out
mov
imul
xchg
mov
sub
dec
push
pop
push
xchg
lods
lock
push
or
cwtl
or
lea
rolb
rclb
icebp
mov
mov
out
scas
out
dec
addb
and
out
pop
xchg
popa
loop
andl
lea
cmp
or
movsb
jne
cmp
pop
jg
cs
and
push
add
repz
adcl
inc
xchg
mov
bound
mov
loopne
js
add
ljmp
jns
addr16
repnz
mov
clc
push
mov
jmp
lea
stos
jbe,pn
enter
mov
pop
dec
adc
mov
sbb
cmpsl
fwait
jmp
repnz
cld
lods
push
movsb
jmp
ljmp
sub
fmull
xor
lea
int3
jmp
jl
in
cmp
imul
js
inc
dec
pop
shlb
orb
into
add
shlb
sbb
lcall
mov
repnz
stc
sub
sarl
jge
ret
cld
mov
pusha
insb
jbe
mov
jmp
adc
xlat
test
sbb
mov
add
push
xchg
jns
pusha
jp
sbb
xlat
imul
out
xor
or
dec
ret
daa
adc
jae
nop
and
adc
aam
push
popf
shr
mov
and
sbb
pushf
dec
fadds
add
pop
loopne
dec
inc
mov
aad
test
cmc
push
or
rorl
notl
jbe
iret
stos
mov
adc
test
and
jne
ljmp
sub
pop
sub
dec
pop
lret
jns
imul
mov
rclb
push
pop
notb
and
loop
aam
jo
scas
add
cmpsb
loopew
jp
movsb
rcl
or
mov
pop
shl
shrb
sarl
and
dec
jmp
pop
mov
ljmp
scas
js
cmp
mov
and
push
lret
imul
sbb
pop
sbb
lcall
xor
les
pop
add
mov
mov
in
xchg
and
leave
les
push
jae
arpl
sub
and
shrb
sbb
mov
sub
push
jns
insb
lods
ljmp
out
imul
sahf
or
mov
jp
xlat
mov
out
or
fimuls
mov
popf
dec
sbb
inc
mov
stos
or
test
or
rclb
ficoml
cmp
or
rclb
rcrb
mov
or
push
in
std
and
icebp
pop
arpl
call
jge
jnp
cmp
jae
sub
loopne
sub
pushf
pop
leave
scas
xchg
std
shll
jbe
cld
popf
loope
or
add
rcrb
mov
pop
pop
mov
jnp
dec
setno
dec
mov
cmp
out
cmpsl
and
int3
mov
add
cmp
sub
adc
ljmp
and
sub
cmc
sbb
sub
filds
mov
pusha
push
pop
jge
inc
push
add
mov
sbb
push
adc
fmull
push
sbb
jnp
and
mov
xchg
xchg
dec
or
xchg
sub
andb
jnp
sahf
mov
pop
dec
pushf
sti
xlat
xchg
sub
test
adc
imul
dec
xor
cmp
mov
outsb
mov
add
fisubrl
sub
aas
and
sub
jle
pop
push
mov
cld
icebp
imul
cmp
movsb
sbb
int
dec
xor
cmp
rcr
pushf
imul
std
xchg
pop
repz
jp
mov
and
cmp
shr
and
cli
pop
sub
test
adc
int3
pop
push
sub
pop
hlt
lock
inc
mov
xchg
adc
das
cmc
movsl
mov
xchg
ljmp
xorl
scas
cmc
sbb
test
pop
push
jae
cmpsb
clc
inc
or
je
shl
jnp
mov
in
shll
imul
jo
cld
outsl
sbb
rorl
in
push
imul
dec
inc
pop
clc
and
andb
repz
and
cmp
mov
in
cmp
dec
loopne
dec
test
inc
xchg
add
push
clc
add
pop
movsl
xchg
movsb
cld
fistpll
dec
gs
add
mov
daa
xchg
mov
mov
nop
push
aad
cs
daa
testb
ljmp
jbe
adcl
iret
rol
jno
lcall
mov
fcmovbe
fdivrs
and
and
aas
dec
jp
pusha
addb
cmp
cli
adc
addr16
adc
xor
insb
sbb
pop
fnstcw
fs
inc
mov
pop
ljmp
fmull
es
jb
cmpsl
stos
call
loop
adc
xchg
test
jmp
mov
xor
pop
adc
andb
push
mov
test
pusha
fldcw
mov
add
mov
lahf
dec
icebp
shrb
mov
mov
int3
fisubrl
inc
jp
sub
push
movsb
add
dec
add
cmpsl
or
cmpsl
jbe
stc
insl
jge
repnz
mov
mov
fimull
outsb
jle
sbb
jmp
in
pop
cmc
mov
xchg
push
add
orl
add
xchg
mov
mov
jl
nop
lahf
pop
adc
lods
jo
mov
mov
faddl
mov
xor
xchg
jo
xchg
mov
fmuls
das
sti
divb
movsb
pop
inc
inc
sbb
iret
popa
loop
adc
inc
xchg
les
push
lcall
prefetcht2
jb
xchg
mov
or
sbb
sub
adc
out
push
mov
xchg
push
stos
xchg
xchg
outsb
enter
jno
es
stos
lock
orb
xchg
xchg
and
or
jnp
leave
mov
mov
ljmp
insl
pop
mov
jle
xchg
lea
and
sarl
mov
imull
push
push
jnp
mov
test
fld
insb
push
sbb
push
and
push
sub
dec
punpckhwd
inc
insb
lahf
mov
pop
movsl
cmc
out
sub
lea
adc
mov
xorl
sbb
and
and
or
in
mov
cmp
add
mov
enter
jle
push
and
insb
dec
mov
or
pop
mov
pop
xor
in
out
cmp
outsl
in
clc
test
test
add
leave
das
or
lods
imul
out
test
and
sbb
jb
dec
test
stos
aad
mov
out
cli
xchg
inc
jecxz
shll
andb
daa
stos
cmp
xor
push
loopne
scas
pop
imul
jmp
imul
mov
es
mov
and
cltd
stos
flds
mov
inc
xchg
adc
shrb
and
movb
inc
hlt
fildll
ret
insl
push
mov
in
int3
or
mov
mov
gs
iret
shlb
gs
sub
mov
sahf
mov
cwtl
and
xor
lock
jle
stc
es
test
xlat
xlat
sbb
test
adc
add
pop
push
or
mov
or
xchg
aam
cld
pop
imul
into
xchg
idivl
add
mov
cmp
ror
inc
test
lahf
sbb
sub
adc
push
jnp
cmpsl
add
push
out
sub
inc
pushf
cmpsb
sub
and
pop
sbb
pusha
call
test
sti
bnd
clc
movsl
pushf
push
std
xor
out
rcr
fimull
popf
xor
call
jg
cmpsl
sbb
sahf
scas
imul
rolb
inc
scas
mull
inc
clc
xlat
dec
jg
xchg
aad
sub
arpl
mov
pop
rcrl
scas
jmp
out
push
or
rorl
out
mov
mov
jbe
sbb
and
or
push
fsts
call
lret
in
pusha
mov
adc
jg
push
lahf
sti
push
idivb
and
dec
push
push
add
fwait
ja
popa
icebp
pop
test
cli
dec
inc
jg
cmpb
push
sbb
xor
sub
sbb
jne
in
daa
lds
in
sarl
xor
and
or
adcl
lahf
outsl
cwtl
fwait
xchg
mov
lea
pop
mov
xchg
cmp
or
dec
or
jne
dec
sbb
clc
jno
outsb
pop
xor
shll
into
dec
inc
lods
xchg
add
lahf
dec
icebp
popa
dec
sbb
repnz
mov
or
loop
imul
xor
mov
add
sbb
aas
fwait
int
push
and
into
and
lds
sub
mov
jecxz
test
into
sti
aas
jne
mov
inc
in
imul
ds
cmp
adc
inc
iret
push
or
mov
sub
fstp
and
aas
mov
xor
mov
xor
test
add
mov
bswap
ja
in
pop
mov
xorl
popaw
xlat
xor
in
int3
rep
cmp
cmp
arpl
mov
jne
mov
and
adc
cmp
sub
cmp
gs
fbld
imul
jl
orb
xchg
sbb
popf
pop
into
sbb
cmp
mov
bound
sti
mov
cs
pushf
push
idivb
dec
adc
stos
inc
mov
inc
outsb
test
daa
sub
xor
sub
lea
imul
je
into
mov
xor
out
mov
ja
ret
imul
test
test
add
adc
mov
shlb
push
cmpsl
scas
cltd
xor
and
cmpsl
mov
sub
xor
adc
bound
push
jns
outsl
adc
mov
cmp
das
filds
addl
stos
dec
xlat
sub
lock
push
mov
pop
aas
ret
faddl
imul
or
push
lods
mov
cmpb
add
data16
sbb
cmc
popf
push
movsb
xchg
fwait
lahf
outsl
movsb
mov
dec
jns
mov
push
test
inc
stc
xor
iret
inc
push
mov
xchg
add
in
and
add
jmp
into
inc
xor
fnstenv
or
leave
xor
jl
push
ss
add
leave
push
push
cmp
in
lods
or
lret
jecxz
mov
jp
push
mov
dec
jg
jle
ret
hlt
pop
push
stos
sti
rorb
ss
insl
dec
mov
add
std
jp
int3
xor
jnp
sbb
daa
in
inc
hlt
sbb
in
cwtl
scas
and
pusha
xchg
cmpsl
dec
xchg
cmpsl
xor
seta
and
push
xchg
data16
jo
iret
push
inc
mov
dec
push
es
notl
enter
lret
add
imul
stc
inc
cmp
mov
jecxz
jnp
psubusw
cld
jge
inc
std
test
dec
cmpsl
or
cmp
cmp
and
adc
sbb
dec
push
rcll
adc
ds
adc
cmp
rcl
mov
adc
pop
fcoml
in
mov
mov
in
fldenv
icebp
lea
lcall
inc
lods
add
outsl
iret
pushf
add
jle
inc
lods
loop
ljmp
cmp
shl
push
imul
lods
cltd
push
sub
inc
mov
jb
and
sub
insb
inc
scas
push
pop
mov
mov
mov
sbb
push
push
mov
ret
loopne
inc
daa
lds
jnp
add
inc
test
sub
dec
xor
mov
lods
xlat
fisttpl
dec
ret
cmc
addb
std
sbb
or
mov
xchg
mov
inc
outsl
faddp
xchg
jne
sub
adc
orl
in
mov
aaa
es
mov
mov
inc
insb
cmp
jmp
pop
mov
or
inc
dec
xlat
xchg
imul
dec
push
add
xchg
and
fldt
cmpsl
mov
sbb
in
repz
xor
xor
mov
and
inc
pop
jo
popf
sub
fstpl
pop
andb
mov
lds
cs
mov
leave
mov
adc
mov
adc
pop
pop
push
pop
xchg
test
shll
iret
lea
pop
push
inc
push
sbb
enter
xchg
add
scas
cmc
and
and
movsb
lods
push
pop
outsb
fisttps
jmp
stos
or
test
and
mov
sbb
dec
dec
cmp
jle
aaa
xchg
inc
dec
push
enter
pop
cs
xchg
xor
ja
sub
pushf
pop
scas
call
jg
mov
nop
mov
fisttps
lods
or
inc
in
clc
fdivrs
mov
mov
in
adc
add
mov
sbb
push
cld
punpcklwd
jge
divl
jo
fnstenv
test
pop
in
fmull
in
mov
mov
scas
adc
sbbb
leave
mov
cmp
loopne
pop
jp
jno
fnstenv
pop
push
xchg
out
cld
sub
sbb
jmp
xchg
ret
stos
lret
cwtl
sahf
iret
inc
jb
push
sub
xor
clc
sub
xor
mov
push
add
mov
add
std
and
dec
arpl
in
mov
jb
and
or
inc
push
sub
dec
andb
lea
jg
test
fists
mov
in
or
adc
pop
addl
jne
adc
fs
pushf
ds
into
push
lods
nop
inc
out
bound
jo
idivl
xchg
inc
and
cmp
sbb
insb
pop
xchg
mov
scas
lret
sbb
mov
loop
sbb
out
outsb
inc
leave
and
pop
mov
sbb
inc
stos
test
add
jge
cmpsb
jno
popa
enter
daa
ficoms
sub
mov
orb
daa
xor
ss
cmc
scas
ss
push
dec
sub
push
ficompl
jno
xchg
push
sbb
mov
add
in
or
mov
mov
adc
cmp
pop
sbb
lret
xor
ss
popf
sub
inc
cmp
ljmp
outsl
push
loopne
cmpsb
aas
mov
adc
popa
sbb
sbb
cmpsb
sti
ljmp
cmpb
lahf
push
cli
fimuls
xchg
xchg
or
arpl
inc
outsl
pop
in
emms
mov
push
adc
int
ljmp
pop
adc
cmp
inc
sub
scas
rorl
xlat
out
and
lea
push
pop
jp
lret
addps
mov
pop
popf
call
cmp
and
sbb
sub
sbb
mov
clc
mov
shll
push
xlat
test
sbb
bound
clc
addb
lret
scas
cmp
scas
sbb
cs
adc
mov
dec
sub
inc
sbb
mov
jg
lds
push
insb
mov
movsb
adc
rorl
loop
and
sub
push
cld
imul
insb
pop
push
sub
bound
dec
mov
mov
loope
cld
push
sub
gs
mov
adc
dec
in
cmp
jp
test
xchg
sub
add
mov
cs
insb
sbb
mov
pop
scas
sub
jo
xchg
adc
test
sub
or
lahf
mov
and
pop
les
insb
jp
loop
pop
inc
sbb
adc
cltd
cmp
inc
fsubrl
out
add
push
mov
stos
mov
xor
nop
fisubrl
das
fsubp
push
push
clc
cmpsb
fwait
mov
xor
out
mov
xlat
adc
in
adc
jbe
mov
dec
push
ret
or
fbld
cli
cmp
divl
xchg
sub
mov
mov
add
outsl
jo
cmp
mov
jnp
pop
imul
xor
jnp
pushf
add
call
mov
stos
pop
inc
loopne
ret
jle
push
mov
out
mov
cmp
jbe
icebp
push
jmp
clc
iret
adc
test
or
cmpsb
cmpl
mov
mov
insb
mov
xchg
mov
call
xchg
imul
sbb
xchg
pop
adcl
in
cld
jns
out
jnp
std
test
jo
dec
in
xchg
cmp
adc
jb
movsl
mov
nop
push
mov
imul
xlat
lods
mov
mov
inc
les
js
inc
daa
sahf
pop
ss
pop
rclb
pusha
sbb
inc
mov
fs
push
mov
shrl
das
mov
jmp
in
mov
adc
adc
jnp
adc
jp
sbb
dec
daa
fsubrs
inc
xchg
pop
std
inc
adc
xlat
loop
inc
jmp
les
lock
sbb
push
loop
repz
lret
adc
test
lret
mov
mov
inc
cmpsb
leave
inc
sbb
clc
rcll
dec
out
xor
rcrb
jns
xchg
inc
dec
sub
xor
mov
mov
adc
pop
mov
in
xor
inc
inc
insl
dec
lods
dec
roll
adc
insl
jmp
das
pop
jl
ja
push
or
xchg
lcall
xor
repnz
cmpsb
lret
imul
fsub
insl
in
mov
rcrl
push
movsl
cld
sbb
shlb
out
cmc
ljmp
sub
int
lcall
mov
adc
add
rcrl
adc
cmp
ds
and
mov
and
dec
inc
lret
rorl
add
dec
ds
mov
adc
add
mov
inc
ja
in
pop
or
dec
dec
push
shlb
and
jae
or
test
push
mov
dec
pushf
xchg
sbb
stc
mov
xor
xchg
push
add
jge
jae
test
loopne
fmuls
aas
push
push
test
and
aad
pop
sbb
sbb
cmp
add
pop
lcall
inc
pop
sbb
pop
pop
add
xchg
sti
dec
add
sbb
fstpl
repz
mov
mov
mov
dec
lahf
sbb
adc
stos
idiv
loopne
xchg
pop
xor
push
fdivrl
hlt
sub
cmp
fisubs
jmp
pushf
inc
xchg
inc
stc
cmp
cmpsl
adc
jle
xchg
mul
lret
jmp
adc
movsl
test
jmp
cmp
aas
mov
cmpsb
mov
pop
add
scas
out
push
std
sbb
cmp
mov
mov
dec
sub
idiv
outsb
jns
movsl
pop
cmpsl
loopne
loopne
cmpsl
lds
jecxz
adc
das
js
mov
dec
mov
mov
sub
aam
mov
mov
aas
xchg
or
cli
xor
adc
push
push
lahf
fildll
sti
sbb
push
pushf
dec
cld
jle
adc
out
mov
add
mov
pop
add
std
xlat
dec
rcl
adc
jmp
shl
outsb
std
push
daa
and
js
movb
testl
hlt
decb
addr16
xchg
out
decl
push
sbb
xchg
lea
loope
pushl
clc
pop
sbb
mov
mov
leave
jbe
xchg
int
mov
pop
movsl
ds
cli
orb
cmp
icebp
popf
or
xor
cmpsb
addr16
dec
lods
mov
stos
ret
push
outsl
sarb
es
pop
rorb
shlb
mov
jge
adc
loope
cmp
jmp
fistpll
pop
jmp
pusha
cmp
lods
mov
in
pushf
lret
fcompl
push
adc
cmp
push
mov
inc
aad
out
movsl
sbb
dec
stos
push
dec
cmp
cmp
pop
loope
mov
outsl
push
fmull
cli
iret
mov
jae
sti
mov
add
cmp
mov
adc
lods
fsubl
and
mov
mov
and
pop
leave
stos
and
pop
jle
mov
stos
add
repz
and
out
inc
pop
inc
cs
subb
mov
shl
iret
lea
lock
xchg
xchg
shll
push
movsl
loope
lods
push
shr
or
xchg
roll
jae
jo
ja
data16
hlt
pop
out
imul
sub
mov
popa
rcl
mov
jns
mov
add
call
pop
sahf
scas
pop
out
adc
les
out
pop
lahf
insb
lcall
and
lock
mov
stos
mov
in
sub
cld
std
arpl
sbb
std
movl
sub
leave
push
push
push
pop
xchg
mulb
das
int3
sbb
call
xor
push
out
mov
jecxz
ficomps
gs
cltd
test
xchg
pop
xor
aaa
mov
test
mov
cmpsl
dec
push
lods
add
mov
shrl
lret
andl
into
sbb
jnp
les
pop
xorl
mov
push
loopne
das
mov
dec
aam
test
in
aad
subb
ret
push
ret
vaddsubps
jb
lds
add
xor
flds
xchg
pop
or
loopne
repz
icebp
xchg
testl
pop
jo
aam
sub
jp
dec
lods
sbb
in
dec
mov
daa
repz
into
mov
add
and
movsl
insb
in
push
insb
sbb
fcmovnbe
add
ror
shl
sbb
in
iret
mov
orb
lea
ret
pop
je
push
cmp
popa
mov
mov
imul
cmpsb
jnp
clc
push
or
mov
idivb
filds
pop
fiaddl
test
mov
and
xchg
push
push
hlt
out
xchg
cltd
xchg
pop
mov
or
dec
ljmp
data16
pop
and
mov
jge
mov
stos
popa
enter
mov
pop
fbstp
mov
cltd
dec
pushf
ds
inc
int3
not
out
jne
nop
push
sbb
aas
cmp
pop
add
push
and
inc
pop
loopne
std
aam
mov
mov
mov
scas
xchg
repz
push
popa
mov
cwtl
cmpb
repz
es
sarb
jmp
repz
dec
xor
jne
mov
and
jmp
nop
add
rcll
scas
xchg
sub
xor
adc
jne
mov
lods
mov
dec
sbb
ljmp
cld
fdivrl
push
popf
pusha
mov
lcall
aad
sub
sbb
inc
fldenv
push
sub
cmc
in
fwait
mov
cmp
hlt
and
push
mov
inc
mov
and
dec
lock
inc
lret
adc
xor
sub
push
scas
xor
mov
adc
pop
addr16
jmp
sub
adc
jg
icebp
mov
cld
mov
shlb
xchg
or
add
push
inc
pop
ficoml
and
and
insl
outsl
in
inc
popa
and
pushf
cmp
iret
sub
dec
mov
xor
fldcw
ja
lahf
mov
push
fistl
divb
in
pop
scas
loop
test
arpl
cmc
jno
sub
into
cld
push
push
ds
adc
roll
lods
xor
cmc
jnp
lcall
inc
mov
push
int3
dec
sbb
icebp
or
push
jae
push
jbe
mov
or
mov
loop
dec
je
popa
sahf
pop
xchg
sbb
enter
and
enter
mov
outsb
sub
add
mov
insb
cmp
push
daa
imul
scas
xchg
dec
push
shlb
adc
push
je
daa
push
cmpsl
cmpsb
insb
insb
in
test
test
lahf
xor
jb
cmp
push
outsb
lock
pusha
inc
push
in
repz
push
frstor
nop
dec
push
cli
sti
pop
shrb
xchg
adc
test
nop
aam
sbb
pop
pop
inc
fistpl
clc
pop
cmp
clc
jns
mov
aaa
ret
mov
push
fbstp
outsl
mov
push
jns
dec
mov
fcmovnbe
mov
pop
lret
mov
rclb
daa
das
scas
pop
sbb
xor
subl
cmpsb
pop
lds
sbb
icebp
scas
repz
movsl
cltd
and
jo
jno
mov
or
mov
sbb
fisubs
xor
lret
or
addr16
stos
xchg
fucom
es
adc
cmpxchg
push
mov
mov
pop
pusha
push
mul
sub
xchg
sbb
cmp
cwtl
cs
cli
or
adcb
pop
push
cli
jo
test
jae
jae
push
xor
movsl
mov
stos
xor
and
push
xor
es
mov
xorl
clc
fmuls
int3
add
jb
into
dec
clc
cmp
inc
fwait
ret
test
test
xchg
pop
cmpsb
popa
bound
pop
lret
imul
aam
push
loop
fsubs
adc
jmp
imul
push
sbb
jnp
addr16
xorl
sub
iret
jge
outsb
push
popa
mov
xor
or
xor
in
mov
call
das
fadds
scas
mov
mov
jp
rcr
test
pop
fiaddl
nop
jb
push
fnsave
insb
arpl
inc
bound
mov
mov
push
xorl
dec
fs
sti
jnp
lods
adc
push
sbb
mov
rcrl
pop
mov
jmp
pushf
lods
jns
jne
or
push
sbb
mov
lods
sub
inc
xor
scas
sub
out
jae
push
xchg
pop
xor
mov
shl
push
xor
adcl
mov
push
fnstsw
popf
pop
jp
aam
rclb
push
dec
sub
xor
jbe
push
stos
sahf
xchg
iret
inc
fistpll
cltd
insb
lock
aam
add
adc
push
mov
mov
or
adc
mov
add
es
jo
pop
xchg
and
hlt
jb
sub
push
or
add
int
mov
add
or
mov
push
and
jns
cmp
mov
fs
popf
rorb
mov
adc
je
mov
int3
lods
stos
in
add
pop
pop
repnz
notb
jg
push
xor
out
add
sub
jg
in
mov
push
mov
sahf
or
pop
and
add
xor
fdiv
mov
cltd
cmp
add
push
push
das
mov
fiaddl
shrl
dec
dec
push
pop
xchg
and
fsts
lret
mov
jno
mov
jbe
or
loope
xchg
or
jl
push
je
cmc
and
pop
addb
adc
ja
mov
stos
jmp
xor
ja
cmp
jl
mov
lods
fwait
xchg
ja
and
jno
popf
add
pop
iret
dec
pop
inc
add
insb
fdiv
je
push
mov
test
sbb
cmp
dec
add
shll
mov
das
adc
sub
jb
jae
sbb
popa
and
inc
push
pop
popf
mov
fstpt
repnz
and
and
xor
dec
imul
scas
fistpl
or
add
mov
popa
dec
in
mov
push
sbb
je
cs
mov
movsl
mov
daa
pop
add
lahf
or
dec
mov
pop
loopne
mov
stos
push
sub
dec
movsb
pusha
inc
sub
addl
mov
dec
inc
mov
fstpt
dec
or
xor
xchg
adc
mov
rclb
jle
jo
mov
lea
movsb
add
test
xchg
sbb
outsl
jecxz
cmp
jg
jb
cmpsl
cmp
cltd
int
fdivp
jg
dec
or
pop
lods
dec
mov
mov
inc
ret
or
nop
and
push
inc
fs
dec
and
fcmovnbe
fsubrl
xor
xor
push
popa
cmpl
outsl
and
mov
xor
xlat
mov
inc
or
roll
inc
adc
xorb
loop
cli
addr16
outsb
ret
sbb
insb
push
lret
aaa
je
sub
je
mov
in
ficompl
and
sbbb
mov
sub
jge
pop
xorb
push
lds
in
dec
inc
subl
push
cmp
and
mov
push
dec
das
cmpsb
cwtl
jae
jle
jae
sbb
jmp
xchg
mov
pop
arpl
jg
adc
aam
mov
mov
pop
adc
aaa
mov
inc
mov
into
push
cmp
add
jecxz
popa
rcr
lea
sarb
insl
imul
and
or
dec
inc
xchg
das
ret
sbb
push
push
and
sbb
rclb
ficompl
fwait
out
cmp
mov
add
insl
mov
loope
jnp
inc
rol
cmp
adc
add
lcall
pop
lret
sub
mov
das
pop
adc
fsub
fdivr
popf
call
out
cmp
sti
pop
addr16
cld
pop
out
outsb
call
aam
cmp
and
inc
repz
cmp
mov
clc
xor
lcall
test
packsswb
cmpsl
pop
pop
cld
xor
wbinvd
pop
cmp
sti
xor
jbe
addr16
jmp
mov
lret
rorl
mov
xor
insb
cmp
lods
addr16
sbb
add
bsf
add
sub
popf
out
mov
push
mov
je
sbb
ret
hlt
xchg
pushf
dec
sbb
jns
jmp
mov
clc
cmp
or
and
cwtl
sarb
push
jl
outsl
leave
lock
call
jmp
sbb
add
fsubl
fwait
cmp
dec
js
jo
out
or
bound
push
stc
jb
into
cli
mov
test
gs
mov
ds
notb
pop
loope
outsl
subl
xor
sbb
out
inc
sub
and
cwtl
mov
cwtl
jg
inc
mov
jne
sub
sbb
and
jecxz
bound
popf
inc
fbld
sub
lds
or
dec
fcomps
push
mov
scas
pop
sub
push
aad
jb
xchg
test
test
aam
aad
fsubrl
cmp
ljmp
or
push
call
stc
and
cwtl
dec
cmp
push
stos
sbb
fmull
adc
ss
xlat
mov
fistl
mov
lret
test
push
xor
fidivrs
iret
ret
pop
jp
sbb
add
sub
std
cmp
add
movl
cltd
inc
popf
pop
into
or
cld
movl
fs
data16
in
cmc
xor
sbb
orb
pushf
arpl
sti
mov
sub
idiv
mov
aam
push
adcl
fisubs
sti
aad
mov
xchg
pop
ret
adc
shll
cmp
mov
cltd
daa
test
das
and
ret
dec
popa
call
fwait
insb
xor
test
pop
mov
pop
mov
cmp
jg
pop
xchg
pop
jo
aad
pop
incl
sbb
jge
dec
in
bound
mov
mov
das
mov
data16
loope
fnstsw
cmp
ficoml
loop
add
js
pop
sub
rclb
add
ret
into
mov
push
aad
sbb
scas
sbb
mov
xchg
test
push
loop
repz
ret
and
or
imul
mov
jmp
xor
mov
push
nop
rcll
popa
and
andl
or
cmp
xchg
xor
ret
loop
lods
outsl
add
into
push
fsubr
pop
and
std
jb
test
rorb
incb
lret
and
enter
dec
xchg
sahf
into
loopne
mov
pop
dec
cmp
in
aam
out
daa
jl
orw
sti
or
jno
pop
sbb
push
add
jne
test
decb
insl
jnp
imulb
sarl
adc
out
xchg
jl
sbb
je
in
add
int
and
pop
dec
cmpl
sbb
out
or
dec
jmp
pop
cmpsl
dec
xor
cmpsb
pop
aaa
xor
mulb
sti
mov
pop
xlat
sti
mov
pop
mov
frstor
fsub
imul
and
xchg
fsubrl
repz
jns
shlb
sub
lods
shrb
cmp
jb
xchg
jns
es
arpl
loop
stos
push
jge
loopne
and
nop
es
add
jmp
insl
lret
and
aad
loop
cmp
mov
cwtl
add
jnp
sti
jle
popa
add
daa
push
mov
mov
xchg
sub
sub
test
pop
ret
cmp
in
push
pop
fldl
cmp
jne
sub
mov
xor
dec
in
cmpsb
add
xor
pop
jle
add
mov
fstpl
mov
mov
repz
outsl
jge
xchg
inc
aam
addr16
lcall
push
and
repz
jmp
int3
into
arpl
or
cmpsb
rol
cmpb
paddw
push
lret
add
and
xchg
fwait
xor
shlb
dec
fdivrs
or
icebp
out
mov
cli
mov
lock
sub
lods
lock
popf
clc
stc
cmp
adcl
ss
mov
into
xor
inc
xchg
push
sub
jne
int3
in
mov
xchg
out
and
jle
pusha
xchg
je
mov
pop
loope
lods
mov
jae
loopne
imull
xchg
out
jmp
mov
das
shrl
cmpsb
mov
adc
inc
pop
mov
lods
nop
mov
rorl
pop
xor
out
pop
or
loopne
pop
adc
inc
sub
adc
sub
dec
mov
push
adcl
lahf
inc
rcr
push
xchg
cwtl
popf
jle
loopne
sahf
popf
mov
fistl
push
out
fs
aam
outsl
test
jge
inc
add
add
fistps
les
add
jne
repz
add
push
cmpsb
and
dec
scas
jmp
dec
lcall
ds
or
mov
out
fsubr
mov
daa
fmull
ret
jl
xlat
pop
inc
pmaxsw
mov
rcr
ds
or
pusha
mov
bound
std
in
ljmp
negl
fsubrs
and
push
mov
cmpb
clc
inc
or
pusha
stos
ss
and
pop
xor
mov
and
cmp
addr16
pop
xchg
fs
jge
cld
and
repnz
push
mov
sbb
outsl
xor
lock
mov
negl
fadds
inc
cwtl
sbb
mov
lods
sub
add
addr16
lret
fldl
mov
jge
aas
popa
xor
jg
call
iret
mov
lods
lods
cld
test
mov
test
push
fnsave
push
xor
xor
add
pop
test
pusha
ljmp
insl
sahf
out
les
add
pop
cwtl
dec
rorb
jmp
clc
jg
xchg
mov
mov
test
jecxz
or
out
jnp,pt
mov
rolb
pop
add
fistps
mov
outsl
mov
sub
lea
add
mov
fisttpll
jns
adc
mov
stos
mov
mov
jnp
es
cmp
ss
inc
push
jns
dec
push
out
nop
mov
jb
and
in
jo
xor
xchg
dec
shrl
int
or
out
daa
negb
popf
pop
mov
fdivr
mov
dec
xchg
pop
pop
cmp
lock
bound
jbe
pushf
jns
xchg
lahf
push
shll
inc
or
xchg
mov
ret
inc
mov
inc
jp
xor
sbb
adc
ja
cmp
loope
xlat
stos
dec
inc
jl
jno
stos
mov
daa
test
movsb
insb
adc
adc
xchg
push
pop
std
icebp
das
call
les
daa
jae
into
mov
adc
dec
xlat
nop
andb
leave
jmp
cmp
sub
addr16
out
int
xchg
push
push
sbb
jle
push
arpl
sub
dec
mov
and
lea
shlb
jecxz
add
sarl
clc
testb
pop
rcrb
mov
mov
ss
shll
fcoml
in
mov
cmp
push
adc
pop
or
sub
dec
xchg
fwait
or
jns
jne
arpl
xlat
adc
sub
cmpl
push
jbe
jp
jbe
xchg
out
xor
std
fistpll
iret
sub
push
clc
cs
mov
push
mov
pop
pop
xchg
loop
loopne
imull
xchg
mov
jl
movsl
outsl
ja
test
cmp
jle
negl
ja
enter
adc
js
leave
xor
sbb
nop
add
inc
pop
jmp
inc
pop
xlat
cmpsb
inc
mov
cwtl
scas
sbbb
scas
shll
outsl
and
jns
fimull
mov
test
data16
divb
test
sbb
push
data16
cmc
mov
outsb
or
mov
mov
cs
and
adc
xor
roll
sub
mov
dec
cmp
mov
mov
cmc
enter
lret
xchg
out
sbb
iret
repnz
adc
mov
adc
loopne
out
test
mov
ret
inc
pop
or
shrl
je
dec
enter
add
stc
pushf
adc
jp
inc
movsb
mov
les
jne
fwait
imul
addr16
lret
or
sahf
adc
xchg
lods
fstpt
pop
xchg
xchg
mov
addr16
xor
pop
movl
xor
mov
mov
mov
mov
pop
jbe
mov
mov
jecxz
mov
ficoms
cmpsb
mov
repnz
nop
mov
push
mov
imul
pushf
jo
mov
aad
push
sub
push
mov
repnz
sub
shr
mov
xor
push
je
mov
sub
and
nop
add
fists
outsb
xchg
fistps
sub
xor
add
cs
subl
js
sahf
movsl
add
mov
dec
mov
mov
mov
arpl
cmp
out
dec
cs
cli
mov
fwait
sub
sbb
mov
idivb
and
scas
push
mov
leave
lahf
pop
scas
xlat
jo
mov
dec
fnstcw
pusha
outsb
inc
and
mov
pusha
popf
jl
xor
arpl
inc
insb
test
clc
mov
fwait
test
adc
test
mov
xchg
mov
adc
dec
std
push
pop
cmpsb
mov
xchg
arpl
sub
pop
jp
add
and
loopne
push
add
jbe
or
jnp
test
adc
add
mov
cmp
fcmovnb
pushf
rcll
sbb
or
and
sbb
fcoml
dec
decl
add
movsl
sub
or
mov
cs
sti
iret
into
pop
and
aaa
sub
lahf
clc
loop
sbb
movl
mov
sarb
mov
mov
aam
fsubp
cli
imul
add
xor
or
lods
loopne
push
es
aas
fdivp
dec
repnz
xchg
jp
and
mov
mov
movsl
xchg
cltd
insb
pop
fcomip
js
pop
adc
insl
test
mov
pop
lret
clc
xor
inc
xchg
fsubrp
adc
add
popa
hlt
sti
test
pop
or
add
push
lods
dec
ret
neg
dec
push
push
scas
add
scas
sub
pop
clc
sbb
movsb
inc
add
or
call
push
aaa
inc
in
xor
scas
icebp
lods
or
mov
pop
inc
leave
sahf
mov
in
nop
xor
shl
in
adc
int
out
add
xchg
sub
pusha
jge
in
lret
sub
push
jp
push
ss
cmp
shl
mov
xrelease
scas
addr16
jle
icebp
mov
push
int3
loopne
xor
mov
xor
or
mov
jo
sbb
nop
adc
cld
shll
aas
enter
mov
int3
sub
loope
xor
addr16
idivb
push
pusha
popa
jecxz
repnz
adc
and
dec
push
ds
xor
or
xchg
out
imul
xor
and
mov
arpl
dec
popf
sub
mov
and
orl
popa
push
in
cmp
pop
cltd
les
pushl
leave
mov
mov
add
jbe
push
push
dec
out
leave
jg
inc
add
sbb
push
add
dec
add
nop
inc
loop
or
xchg
scas
sbb
adc
or
dec
inc
fpatan
push
cmp
or
and
pusha
lods
in
xor
cld
std
push
push
jne
jno
mov
cwtl
adc
mov
xor
pop
aaa
sub
test
xchg
popf
mov
cmp
stc
lret
xchg
rcl
testb
sub
jmp
mov
jle
mov
dec
int3
test
rclb
sub
movsl
jbe
insb
mov
sub
mov
ds
js
mov
xchg
jmp
xchg
fwait
jb
aad
pop
ds
jecxz
add
xchg
or
jbe
jecxz
stos
imul
insl
mov
dec
pop
or
sahf
ret
in
add
xor
jb
adc
sarb
sub
add
aad
imul
es
aad
test
je
sbb
outsl
out
cmp
mov
and
sbb
rclb
out
in
rol
jmp
movsb
out
inc
adc
jmp
lods
push
add
xor
sar
mov
mulps
cmc
mov
xchg
aaa
insb
and
jnp
popa
iret
shll
add
lret
sarl
lods
cmp
fidivrl
xchg
sub
data16
cmp
add
nop
sarl
jbe
push
std
neg
jbe
rorb
repnz
sbb
ror
outsl
or
add
xchg
jnp
cmp
xchg
add
ja
aaa
add
xor
sbb
or
testl
xor
dec
push
ret
mov
hlt
sub
arpl
push
pop
jb
frstor
outsb
mov
call
outsl
in
mov
int3
pop
or
xchg
lods
pop
insl
out
cmp
inc
xchg
jecxz
adc
sarl
ss
and
rclb
iret
sub
sbb
in
mov
pushf
inc
cmpsl
int3
cli
lock
mov
loope
sbb
xchg
or
xchg
mov
cmp
mov
dec
jmp
test
pop
pusha
int
fwait
jle
imul
cmpsl
push
pushf
pop
mov
pushf
aaa
sub
idivl
lock
test
lea
or
imul
mov
adc
sub
xchg
pop
xchg
add
add
stc
ret
mov
ds
sbb
in
imul
mov
into
in
cmp
cmpsb
lds
pop
xchg
daa
mov
xlat
mov
jbe
push
xor
dec
jb
sbb
aad
xlat
ficompl
idivl
sbb
xchg
push
adc
mov
pop
dec
sbb
rcrl
aaa
aam
jmp
inc
pop
repz
std
jg
mov
xchg
mov
mov
mov
imul
dec
and
sbb
addr16
push
jecxz
jno
les
lods
popa
filds
xor
lods
lahf
mov
dec
fistpl
repnz
mov
ds
fidivrs
mov
mov
cwtl
lahf
sbbl
jge
pop
je
xchg
sub
sbb
or
cld
sahf
std
les
add
jge
adcb
lret
adc
cmpsb
jg,pn
pop
pushf
xor
jp
dec
xchg
xchg
xchg
hlt
inc
rep
mov
pop
or
jo
lock
roll
andl
stos
jbe
mov
cmp
pusha
cld
inc
out
pop
scas
pop
push
nop
mov
icebp
stos
out
pop
or
push
mov
cmp
int
mov
clc
cld
sti
mov
push
jge
push
shrl
mov
lcall
stos
cmp
js
lret
mov
out
ljmp
jecxz
or
push
je
aaa
xor
jne
lsl
out
divps
dec
xor
jp
mov
sti
pop
push
mov
jae
clc
test
in
pop
xchg
add
movsb
fwait
jne
sub
adc
add
cli
xchg
add
mov
push
out
jle
lahf
test
cs
jle
adc
inc
or
test
ficoml
test
mov
mov
dec
aad
pusha
ds
pusha
and
mov
sbb
cmpsl
test
lds
add
jne
ljmp
call
aam
icebp
lret
or
or
ja
sbb
testb
stos
testb
repnz
sbb
cmpsb
movsb
shrb
cwtl
sti
pop
mov
divb
scas
add
xchg
fs
sub
sbb
xor
in
jmp
mov
pusha
mov
mov
rcrb
addl
fs
sub
and
adc
adc
jo
lods
xchg
sub
and
fimuls
jge
mov
aas
adc
lret
lahf
out
jne
int3
lahf
rsqrtss
xor
xchg
repnz
repnz
xchg
cmp
or
jbe
jle
daa
das
cmp
xor
or
dec
cmp
mov
nop
out
mov
out
jnp
inc
jmp
popf
pushf
cmp
das
push
pop
ja
pop
pop
pusha
jns
movb
push
add
cld
das
mov
cmp
or
ds
sbb
push
in
mov
inc
and
push
loope
adc
data16
pop
pop
dec
dec
jbe
sbb
mov
mov
xorl
sub
movsb
cmp
in
inc
and
in
mov
or
int3
mov
or
sub
scas
jnp
out
add
pusha
add
add
push
pusha
insl
cvttps2pi
js
les
loopne
mov
jae
pop
push
fsts
xchg
mov
xchg
das
xchg
push
or
js
jp
repz
fcoml
dec
rcrb
cmp
sarl
cmp
test
sahf
bound
shll
jg
aas
adc
hlt
icebp
pop
dec
fldcw
orb
fimull
inc
push
loope
stos
and
xor
cmc
lea
test
inc
popa
daa
imul
mov
fsubrl
jne
fcmove
and
insb
mov
fwait
loope
cld
pusha
cmpl
push
mov
add
and
adc
mov
das
or
sar
daa
cmp
sub
sbb
sbb
les
jno
cmp
jne
lods
js
cwtl
cmpsb
and
gs
mov
cmc
or
cmp
ljmp
addr16
sbb
leave
cmp
mov
pusha
fldl
adc
repnz
push
xchg
cmp
jp
mov
stos
es
test
cmp
mov
addl
jg
stos
fcomps
dec
pop
xchg
pushf
sub
mov
jae
andb
mov
aad
xchg
cmp
jne
imul
pop
fildll
or
mov
mov
pop
push
sub
out
adc
fistpll
fnstsw
les
pop
push
test
push
sub
xor
cmp
sub
or
inc
ja
shlb
jecxz
adc
sbb
mov
int3
dec
dec
xchg
adc
stos
xor
dec
sbb
nop
sbb
mov
outsl
shl
js
fstpt
adc
hlt
rcrl
inc
mov
or
movsb
cmp
aaa
jae
in
mov
cmp
jmp
flds
mov
sub
fs
movsl
cmpsb
mov
clc
test
sbb
call
dec
cmp
mov
or
or
sbb
xchg
sarl
mov
or
jbe
cmp
cmp
xor
mov
cltd
pusha
ja
ss
mov
dec
fndisi(8087
popa
mov
shll
pusha
xchg
fisttpll
xchg
push
lcall
dec
xorps
inc
lcall
xchg
popf
out
and
push
push
ror
ljmp
fldcw
sub
mov
mov
jnp
roll
jnp
sub
fdivrp
xlat
jb
and
jo
push
in
mulps
adc
fwait
js
inc
and
movsl
sub
leave
jmp
pop
dec
loopne
dec
push
iret
repnz
orl
test
and
sub
das
push
lret
pop
mov
jp
push
inc
xchg
xchg
xor
arpl
jb
push
cmp
shll
sbb
sbb
out
test
lret
insb
lahf
stos
int3
test
nop
fidivs
and
cltd
scas
xor
sbb
xor
push
outsl
mov
sarl
inc
dec
loopne
fnstcw
add
jno
testb
jl
push
lock
jmp
push
sbb
push
dec
sti
ficoml
push
arpl
in
outsb
inc
mov
call
std
sbb
out
pop
lcall
cmc
cmpl
mov
sbb
daa
inc
les
push
inc
fucomi
sbb
push
push
jns
or
xchg
dec
popl
xorb
sbb
xchg
out
mov
dec
out
xor
or
and
and
sbb
xor
sub
repz
cmp
ds
add
lods
lea
xchg
push
imul
stc
xor
pop
xchg
roll
std
cli
dec
mov
jnp
mov
jbe
int3
jne
lret
out
ret
xchg
inc
jle
lds
lcall
mov
add
rol
ljmp
aad
sbb
insl
outsb
fidivrl
das
push
rolb
daa
shufps
or
pop
push
lods
mov
roll
pushf
nop
test
sbb
sbb
stc
jle
pusha
inc
das
sub
adc
adc
cmpsl
ljmp
lods
fs
popf
aaa
in
lcall
das
jp
mov
fs
xchg
fstps
shr
imul
mov
xchg
aam
and
popa
xchg
or
aad
js
push
dec
sub
aas
jge
or
in
xchg
pop
jge
arpl
inc
xchg
mov
cmp
add
adc
outsl
leave
push
sub
pop
aaa
imul
dec
mov
mov
mov
test
lds
stos
jl
sub
das
jle
cmc
call
mov
adc
jge
in
pop
pop
or
faddl
jb
repz
mov
inc
xor
cmp
pop
lock
xor
in
dec
pop
jl
sbb
sahf
aad
push
xchg
sti
adc
xchg
inc
cmc
jbe
push
pushf
loope
jl
lcall
shr
jno
add
sahf
cwtl
sub
mov
pop
dec
add
cmp
push
lock
push
outsl
jp
mov
mov
push
add
cs
inc
cmc
jmp
pop
js
fsubp
add
out
pop
cmc
sub
fwait
imul
xor
mov
xchg
mov
fwait
add
dec
stos
lds
int3
adc
sub
xor
xchg
pop
int
fsubl
mov
adc
dec
mov
aas
pop
in
std
push
adc
out
fisttps
xor
pop
mov
pop
mov
adc
into
lock
int3
js
xor
dec
push
jle
jmp
es
mov
hlt
stos
push
jecxz
mov
insl
pushf
push
and
icebp
adcl
insb
ficompl
popa
arpl
ret
int
sbbl
xlat
dec
pop
cs
out
jg
cmc
call
mov
or
add
icebp
nop
sub
xchg
cmp
aas
fldt
dec
pop
mov
test
sbb
insb
xchg
mov
bnd
adc
sub
dec
in
and
mov
xchg
iret
out
jnp
sbb
dec
push
mov
sub
mov
push
loop
mov
inc
and
xor
adc
loopne
or
rcl
adc
dec
int3
pop
stos
mov
bound
add
cmp
shll
push
stc
cmpsl
in
jecxz
or
cmp
cld
and
cmpps
push
repnz
adc
ja
mov
mov
mov
mov
pop
sub
cli
test
daa
lds
mov
push
data16
and
subb
cli
adc
imul
add
std
testb
jg
sub
stos
sarl
xor
fcmovnbe
in
mov
inc
sub
repz
mov
cwtl
add
xor
inc
add
sub
cwtl
aam
rcl
xchg
pop
push
scas
or
mov
sahf
aam
out
mov
push
shr
lds
sbb
cmp
mov
lea
int
adc
out
mov
dec
in
les
mov
addb
dec
mov
aas
mov
sbb
cmp
inc
jl
mov
aad
std
icebp
aas
fstl
jo
mov
dec
pop
hlt
adc
jmp
icebp
inc
pop
xchg
out
xchg
les
div
imul
call
test
repz
dec
dec
fcomps
daa
xor
ds
xchg
jb
fwait
sub
iret
lds
inc
adc
dec
in
into
lcall
cld
into
je
dec
iret
ss
adc
in
pop
iret
or
adc
sub
dec
addl
pop
adc
add
inc
mov
ret
insl
and
jl
fidivrl
mov
jmp
jo
test
jle
shrl
adc
outsl
mov
aad
jmp
dec
sub
xchg
inc
pop
mov
or
notl
cld
push
cltd
mov
push
adc
adc
sbb
adc
adc
pop
and
mov
popa
bound
cmc
icebp
movsb
ret
xor
push
test
cmp
pop
aad
ror
lcall
rclb
xchg
lock
out
js
je
mov
je
mov
adc
lret
adc
fs
jbe
dec
cltd
je
imul
rol
sub
cmp
jg
cmp
dec
mov
or
adc
in
scas
jmp
mov
lods
push
ja
subl
mov
cli
push
sti
imul
mov
add
and
dec
iret
adcl
add
inc
in
jo
mov
sub
or
jo
aaa
cmp
pop
cmp
out
inc
push
hlt
fstps
lcall
scas
int
out
ds
ljmp
inc
scas
cwtl
dec
fsubs
cwtl
fidivrl
leave
sbb
inc
jae
rorl
or
sqrtps
inc
sbb
movsb
mov
stos
pop
ret
stos
iret
mov
cmpsb
or
and
mov
das
mov
and
mov
push
jl
icebp
mov
add
cmpsb
fisubl
inc
push
push
in
jle
sbb
mov
cs
mov
rorb
or
insl
push
xrelease
sti
xor
mov
mov
push
es
pop
out
pop
sbbl
xchg
in
cs
mov
mov
xor
insb
or
nop
jl
movsb
lret
das
push
hlt
hlt
adc
sarb
fldl
int
inc
sbb
out
insb
push
inc
fcomps
loop
pop
fisubl
cwtl
mov
movsl
adc
sub
push
cwtl
mov
call
sub
inc
in
mov
ror
jo
div
push
push
stc
js
xor
out
insl
xchg
lret
popl
fcoms
add
icebp
sbb
mov
repz
aam
mov
sbb
ret
ds
xor
and
xchg
cmpsl
gs
jo
mov
and
je
popf
dec
jbe
loopne
pop
jmp
xchg
sbb
test
and
sti
push
and
imul
jl
shrb
ret
adc
push
lds
push
mov
aam
gs
rcr
leave
mov
dec
inc
imul
divb
or
mov
or
cwtl
push
pop
add
adcl
sbb
jae
mov
pop
sbb
es
aam
mov
loopne
fadds
xchg
and
lods
xchg
jbe
js
lock
js
movsb
mov
inc
push
mov
xchg
adc
cs
add
les
jns
outsb
divb
lcall
outsl
movsl
mov
cld
daa
or
imul
push
cmpsl
push
je
mov
jne
mov
lret
mov
xrelease
js
ds
scas
adc
mov
sub
lcall
mov
cltd
test
mov
cwtl
test
push
push
xor
or
pop
mov
aad
or
xor
fdivrs
adcb
or
ja
fisttpll
inc
xchg
add
in
and
fmul
or
loope
or
cmp
ficoml
jbe
roll
aad
lcall
insl
lea
je
in
out
mov
ss
pop
mov
adc
mov
pop
in
mov
xchg
in
or
push
andb
mov
xchg
sbbb
test
jne
das
mov
dec
pop
push
cwtl
rclb
push
cltd
jne
shlb
or
cli
stos
lret
pop
fcmove
jns
mov
test
sub
fcmovu
sti
int
dec
pushl
pop
sahf
shll
outsb
adc
mulb
push
push
mov
xchg
jmp
dec
pop
out
test
in
adc
fstp
dec
bound
and
cwtl
test
subb
incl
popa
mov
xchg
out
scas
xchg
dec
aas
test
push
lds
and
aas
inc
mov
popa
loop
push
cmp
ljmp
shll
jp
sbb
fbstp
mov
mov
dec
mov
dec
stos
push
lds
sbb
gs
mov
and
popf
test
rolb
popa
test
test
lock
xlat
enter
or
fimuls
cli
arpl
cmpsb
je
xchg
imulb
ss
mov
sub
lcall
daa
out
sub
jmp
lahf
inc
dec
decb
push
adc
adc
sbb
in
int3
shlb
dec
aam
sub
inc
mov
push
cld
jbe
sti
ja
subl
jb
pop
sub
cmp
mov
ret
lret
ss
inc
mov
orps
dec
sbb
sub
ja
push
into
pop
xchg
fiaddl
cmp
addl
jb
fcmovne
aad
cmpsl
cmc
xlat
push
inc
movsl
jmp
out
xor
fsub
xlat
and
pop
inc
add
gs
gs
sbb
or
mov
xchg
pushf
xlat
add
xchg
mov
cwtl
rorl
repnz
xor
xchg
mov
pop
and
fistpll
fdivs
fnstenv
loopne
hlt
mov
cmc
notb
xlat
loop
aad
and
fwait
inc
loopne
lds
hlt
mov
xor
mov
aad
je
sub
out
mov
mov
xchg
pop
shrb
daa
dec
in
xor
ss
in
in
hlt
mov
insl
cld
lcall
cmpsb
test
inc
mov
loopne
xlat
cmp
sbb
mov
shl
fiaddl
insb
int
fiaddl
outsl
les
bound
in
adc
xchg
in
add
jnp
rolb
xchg
and
and
push
mov
xchg
cmp
xor
pop
adc
cmc
dec
mov
adc
inc
sub
pop
movsb
ret
test
pop
aad
ret
mov
jg
pop
adc
loopne
dec
pop
xchg
mov
imulb
cmpsl
lock
and
mov
push
mov
icebp
jno
out
dec
jns
add
test
or
lcall
fdivr
push
mov
pushf
mov
xchg
in
cmp
jno
push
shll
add
sbb
sub
jg
insb
jg
jl
aaa
imul
in
push
jl
jb
in
fimuls
rcrl
cmp
or
js
xchg
push
jmp
jne
jle
cmp
jg
xchg
imul
ss
rcl
stos
bound
shlb
adc
out
push
sbb
in
adc
and
imul
leave
mov
outsl
jecxz
xchg
add
push
mov
les
rclb
sbb
scas
mov
mov
jo
cmc
icebp
sub
inc
jns
mov
inc
scas
mov
pop
xchg
dec
sub
outsl
fiaddl
xor
stc
jp
cmp
mov
jecxz
mov
daa
lea
mov
popl
or
push
xchg
mov
adc
jge
mov
ret
lret
cmp
cld
cs
mov
out
sahf
std
cs
icebp
stc
jo
mov
sub
lret
data16
or
cmc
inc
add
jle
aas
pop
movsl
test
or
mov
call
cmpsl
pop
popa
push
aaa
les
xor
mov
xor
add
popa
mov
enter
sbb
inc
aam
sub
ljmp
cmp
jmp
xchg
and
arpl
dec
and
dec
and
or
push
mov
mov
jno
dec
xchg
scas
nop
cmp
mov
loope
pop
lds
das
addr16
sub
in
cmpsb
cltd
out
sbb
cli
add
in
jae
jg
pop
cld
cmp
and
jl
js
jmp
jne
fstps
fisttps
xchg
in
popl
jbe
dec
inc
push
fs
outsl
jb
mov
popa
mov
add
add
jecxz
jg
in
mov
dec
and
xchg
or
neg
inc
mov
test
inc
lods
cwtl
cmpsb
mov
fcoms
pop
sbb
mov
cmp
sub
enter
mov
gs
fisttps
xor
lods
xor
and
or
cltd
out
cmp
outsl
shll
mov
paddw
push
mov
or
insl
pop
mov
jno
mov
or
test
pop
push
dec
cli
sub
cmp
xlat
add
pxor
xchg
inc
popf
popf
daa
push
add
push
call
ljmp
es
fcoms
fildll
loop
stos
fwait
lods
and
sbb
inc
cld
and
sbb
inc
loop
inc
loope
adc
xchg
out
pop
mov
push
or
stc
arpl
jno
mov
inc
push
call
push
int3
dec
and
mov
cmpsb
or
mov
push
mov
test
add
xor
dec
lods
jmp
adc
cmp
cltd
cmp
aad
mov
rorb
mov
or
push
pop
jg
or
test
fnstcw
cwtl
pop
fwait
ret
jle
pop
push
mov
add
adc
stos
mov
mov
out
rorb
dec
jns
jns
xor
cltd
jmp
sub
or
mov
mov
dec
inc
cmp
nop
mov
loopne
or
data16
test
adc
fsubs
inc
add
adc
mov
cwtl
stos
sbb
fmuls
in
cmp
xor
sti
add
push
dec
or
pusha
cli
lahf
fsub
push
arpl
outsl
jb
mov
ss
rcr
pop
mov
push
mov
fstps
ret
and
or
sti
daa
add
xor
das
mov
sbbl
je
pushf
inc
sbb
js
mov
and
pop
dec
lods
jb
inc
pop
cltd
dec
push
jge
pop
xor
aam
rcll
add
jg
subl
lahf
push
sub
dec
xor
xchg
dec
into
or
mov
shl
push
icebp
insb
jb
pop
insb
mov
outsb
in
pop
cmpb
xorb
cmpsl
xchg
mov
scas
stos
push
and
shll
fnstsw
xchg
imul
aas
mov
dec
lock
subb
mov
add
pop
lcall
cmp
mov
fsubl
lock
scas
and
inc
adcb
stos
jae
xchg
adc
mov
outsl
cltd
call
add
push
pop
push
dec
push
mov
or
xchg
sbb
add
loop
and
loope
cmp
pop
mov
jg
xchg
mov
js
mov
push
pop
ret
in
jg
xor
adc
or
sbb
inc
xchg
pop
lea
scas
adc
mov
in
stc
pop
shlb
mov
mov
sbb
arpl
mov
pop
xchg
mov
arpl
pop
aam
pop
pushl
out
aaa
rol
sub
shll
add
push
stos
sbb
scas
lret
jnp
lods
dec
stc
fwait
push
stos
adc
sub
cmp
shrb
out
mov
push
out
or
mov
sbbb
lahf
xor
and
sbb
shr
jae
stos
or
jbe
jno
pop
inc
mov
lds
jns
sub
outsl
xchg
and
dec
stos
push
or
fcmove
in
test
xor
loopne
and
push
cmp
in
dec
nop
jl
fwait
lds
cmpb
fimuls
clc
fldenv
lods
pop
pop
imul
dec
add
test
cmpsb
inc
jmp
mov
adc
xor
outsb
and
xor
jb
pop
sub
out
mov
fdivl
scas
or
jp
mov
sub
in
rclb
cmp
sbb
mov
int3
lods
xor
xor
mov
sub
cmpsl
loopne
xchg
mov
imul
sbb
lea
orl
cmp
pop
sbb
dec
jno
or
clc
jbe
cwtl
cwtl
xchg
mov
stos
imul
xchg
fdivr
sub
or
mov
test
push
fwait
hlt
sub
push
mov
scas
adc
or
flds
pushf
xor
mov
mov
lahf
adc
repnz
jge
lret
insb
ret
notl
lock
mov
cmpsl
pop
sub
adc
popf
dec
or
sbb
mov
xor
loop
xchg
push
lret
shll
mov
lds
cmp
in
fwait
popf
jl
in
jmp
or
adc
xor
mov
mov
std
pushf
mov
ret
pop
push
daa
lret
jne,pt
adc
pop
mov
inc
cmpsl
jl
movsl
popf
ds
and
nop
xor
ret
lahf
pop
cs
repz
into
into
mov
ljmp
pop
add
rcll
mov
pop
push
mov
shll
nop
pop
cmp
xor
mov
mov
mov
lahf
sbb
add
cmpsb
sub
push
mov
add
xchg
es
fisttpl
mov
pop
or
cmc
mov
or
xor
jg
xor
xchg
cmpsl
fidivs
sub
ja
mov
mov
xor
dec
push
or
iret
inc
adc
mov
fbld
jge
std
or
pop
push
pop
clc
xor
xor
cmp
lods
dec
pop
mov
pop
sub
dec
fsubrs
or
mov
lcall
dec
add
repnz
adc
adc
test
lcall
pop
hlt
cmp
dec
mov
jmp
mov
mov
and
mov
lret
pushf
test
jns
and
dec
or
sub
mov
insb
pop
lods
out
mov
cmp
add
xchg
rcrl
test
mov
push
sub
ss
mov
insl
mov
mov
jb
cmpsb
jbe
cwtl
jg
inc
mov
aam
jno
andb
dec
pop
xchg
lahf
cltd
rcl
pop
xor
outsb
arpl
xor
pop
loop
cmp
mov
cwtl
lcall
pusha
cwtl
inc
sub
jbe
push
imul
mov
aad
clc
xlat
in
hlt
jo
push
jb
sbb
dec
test
mov
cmp
nop
repnz
cwtl
ja
mov
int
lds
mov
test
insb
inc
lods
pop
pop
mov
popa
sub
adc
mov
outsl
push
fdivrl
xor
jl
mov
mov
scas
clc
out
push
leave
and
cltd
sub
push
and
lods
and
push
jne
incl
call
aam
and
cmp
pop
xor
ja
lods
cli
xchg
xor
push
daa
dec
inc
lcall
aas
fcoml
xchg
mov
adc
push
mov
mov
mov
ja
sub
addr16
fwait
xor
rorl
add
sub
mov
ds
int
fsubr
xchg
add
arpl
stc
es
aad
push
jle
fcoms
mov
ljmp
ret
sbb
sub
inc
loope
stos
ja
adc
aam
mov
inc
rcll
or
ja
sbb
shll
adc
jmp
push
mov
syscall
jnp
aad
lea
and
add
aas
mov
std
sbb
or
shlb
add
push
icebp
cmp
xor
jbe
clc
fstp
jl
hlt
inc
jle
gs
imul
stos
mov
adc
sbb
test
stc
nop
pop
sub
inc
push
nop
sub
and
dec
mov
out
jno
sbb
out
and
dec
mov
mov
shrl
or
call
fistpl
inc
lea
mulb
rcrb
addr16
jbe
sbb
push
mov
cmp
jb
popa
cs
int
cmpsl
loop
enter
mov
fldl
shl
cwtl
repnz
and
scas
dec
adcb
add
popa
fistpl
inc
and
mov
jle
xchg
adc
int
cmp
jecxz
jb
inc
pop
ss
fcompl
cmp
xor
xchg
daa
mov
xor
adc
xor
mov
push
pop
mov
push
pop
xchg
jnp
push
ficoml
addb
sub
rcrl
lret
daa
mov
jmp
ss
push
and
rclb
es
mov
pop
pushf
sbb
orb
adc
cmpl
cmp
ljmp
dec
dec
mov
sub
cld
loope
lods
sbbb
mov
cs
or
jmp
in
scas
fimuls
mov
sub
sbb
add
movsl
mov
int3
add
inc
add
sub
std
fiadds
stc
sti
mov
xor
push
sub
cltd
fwait
cld
and
sub
mov
lds
divl
std
inc
inc
sbb
fisttpll
or
mov
pop
jmp
mov
mov
cmp
and
test
mov
mov
xchg
xchg
nop
dec
push
xor
sub
pop
cmp
loopne
scas
into
loope
cltd
adc
idiv
fidivrl
mov
sub
std
sbb
test
addr16
sbb
sbb
xchg
test
sarb
daa
rcrl
cmp
xchg
mov
jmp
add
loope
pop
lods
pop
fldenv
or
push
adc
into
int3
inc
pop
cmp
icebp
aas
sgdtl
stc
cmp
ljmp
lcall
mov
es
mov
mov
lcall
insl
imul
hlt
cmp
push
xchg
xchg
js
mov
clc
push
xor
pushf
xchg
xchg
lret
add
xchg
mov
push
test
push
pop
push
inc
test
stos
add
mov
jecxz
add
xchg
rolb
mov
jecxz
cmp
daa
fnstsw
icebp
inc
shrb
xor
sub
lods
insb
stc
int3
jge
sub
shrb
pop
and
je
cmp
mov
shl
push
imul
gs
stos
int
jns
fsub
and
out
mov
pop
or
add
sbb
xlat
add
xchg
mov
sbb
xchg
mov
lods
jae
incb
fninit
xchg
jns,pn
mov
pop
fildl
scas
mov
add
cmp
je
popf
or
inc
sti
pop
xor
lahf
popa
cli
pop
inc
addr16
jns
ss
js
rolb
outsl
pop
and
in
pop
sub
icebp
repz
mov
stos
and
test
loopne
arpl
ret
into
hlt
xchg
in
mov
aaa
inc
sub
push
in
dec
cs
and
mov
test
push
add
pop
std
jo
jle
jg
lods
sahf
addr16
mov
rorl
add
test
add
jmp
repz
inc
sbbl
xchg
jle
dec
out
inc
pop
dec
sbb
mov
fcmovu
imul
rcll
pop
ja
outsb
pop
jno
push
sub
sbb
fs
repnz
mov
iret
fbstp
movsl
mov
jge
pop
jnp
rcr
call
pop
fwait
sub
fucomip
adc
outsl
je
xlat
pop
mov
stos
lea
mov
cmp
pushf
jbe
sbb
sub
inc
jbe
sub
testb
jnp
insl
insb
jns
cmp
loop
std
in
mov
mov
filds
into
leave
xchg
out
jae
out
fwait
push
dec
xor
push
xor
pop
and
lds
mov
dec
cmp
pop
xchg
arpl
xchg
jne
add
out
mov
ljmp
jle
push
xor
cmpsb
stos
add
pop
outsl
or
xchg
js
jle
xor
jp
adcb
sarl
fdivr
pop
xor
std
cmpsl
mov
mov
inc
and
dec
push
pop
or
fisubl
mov
mov
xchg
add
aad
sub
inc
addl
mov
aam
or
rcl
xor
dec
mov
or
push
out
mov
in
fwait
repz
jl
cmpsb
dec
rcll
mov
lret
int3
aad
pop
xor
adc
jno
fcomi
or
mov
push
dec
mov
scas
xchg
lods
push
sbb
mov
pusha
push
pop
dec
into
imul
int
and
imull
daa
out
pop
cmp
sbb
insl
aam
jno
pop
ja
lret
push
lock
jp
mov
mov
xchg
out
jle
pop
mov
int3
xchg
xchg
push
mov
mov
iret
add
or
mov
les
pushl
fucomip
sarb
jbe
jg
or
std
mov
ficompl
inc
or
add
xor
sub
xchg
subl
jp
pop
push
loope
les
ret
cmpsl
jle
aad
loopne
dec
dec
js
movsl
jmp
popa
sbb
sub
cwtl
out
and
push
and
inc
mov
ret
gs
les
mov
xchg
outsl
lods
loope
gs
inc
loope
push
pop
test
mov
sub
imulb
out
and
arpl
insb
cld
stc
mov
mov
pop
jbe
jg
movsb
adc
scas
out
rorl
jb
xor
push
lahf
cld
mov
inc
inc
aas
adc
mov
hlt
jae
and
daa
sbb
cwtl
adc
bound
dec
jno
cltd
pop
cltd
xor
jns
sub
push
push
loope
stc
scas
sbbl
adc
xchg
lea
shrb
inc
dec
jmp
push
push
sbb
mov
cs
rorb
ss
rcrb
jmp
cmp
cmp
rclb
cltd
or
or
jbe
inc
movsl
sub
mov
pop
sub
adc
cmp
mov
rorb
add
sbb
decl
repz
stos
push
dec
rcl
lock
xchg
imul
aas
pusha
test
or
sbb
int3
xchg
int3
mov
inc
pushfw
mov
push
ds
addr16
pop
int
jle
add
lods
pop
lea
and
lods
jb
pop
sub
or
les
stos
sti
jge
cmp
sub
aad
lret
add
outsl
testl
out
jg
int
enter
pop
mov
dec
push
sahf
mov
sub
sbb
add
outsb
icebp
mov
push
lea
enter
lret
lret
pop
cli
cmp
add
inc
cs
jp
testb
mov
mov
cmp
mov
inc
pop
pop
stos
xor
push
sub
in
xchg
jecxz
subb
dec
push
mov
ss
jae
add
push
jnp
fadd
jp
sbb
in
out
stos
inc
mov
dec
add
cmpsb
xor
ljmp
pushf
imul
sbb
loope
push
outsb
cmc
xlat
jg
negb
test
mov
aad
imul
adc
xor
and
push
movsl
sub
mov
std
lock
jbe
jle
in
fsubl
mov
xchg
xlat
adc
cmp
sub
stos
aam
jge
push
shll
iret
push
movsb
xor
push
iret
adc
enter
ficomps
aas
in
or
repz
fsts
sub
es
stc
xchg
hlt
jg
xchg
inc
jg
jae
scas
pop
js
dec
xchg
dec
sbb
aad
push
add
cld
cmpsb
mov
jg
inc
lret
outsl
inc
orl
jno
lahf
sbb
or
nop
push
cmp
sub
dec
arpl
pop
dec
xor
dec
and
fcmovnu
mov
in
push
cmp
jge
lock
inc
fiadds
testl
push
in
xlat
loopne
or
or
call
ret
add
pop
jmp
mov
mov
push
and
push
in
sbb
mov
rclb
xchg
and
dec
mov
insb
mov
jno
sub
outsl
push
nop
roll
jno
dec
sbb
out
nop
dec
push
xor
inc
in
cli
add
jp
mov
jl
xor
mov
cld
scas
lods
popf
fstps
das
add
push
pop
jl
cmp
js
mov
jge
lods
and
int3
test
push
mov
xlat
cmp
dec
mov
inc
sti
sub
call
inc
jmp
inc
iret
jne
add
daa
fbstp
in
das
dec
je
mov
fdivl
mov
cmp
dec
orb
stos
cmpsl
std
das
hlt
addl
cmp
sti
cmpsb
je
nop
lods
aam
ljmp
pushf
cmp
lahf
adc
lcall
mov
rcr
sub
inc
mov
aas
fidivrl
push
dec
push
jae
xorl
xchg
jno
adc
mov
or
sbb
lahf
scas
xor
pusha
xor
mov
xchg
xor
and
lret
xchg
jg
adcb
leave
pop
testl
mov
les
inc
push
cmp
sbb
lcall
repnz
jecxz
out
adc
test
mov
fdivs
lret
insb
add
jno
cmp
mov
cwtl
pop
sbb
roll
mov
mov
inc
sub
inc
jle
or
inc
cld
ret
jg
mov
mov
and
xchg
fstl
outsb
loopne
js
out
or
js
jnp
sub
jp
in
stos
cmpsb
cmp
daa
pop
rclb
adcl
aas
or
int3
push
std
mov
xchg
data16
jnp
out
insb
dec
lods
sahf
es
je
fwait
or
insb
pop
outsl
adc
repz
mov
js
out
fucomip
jno
popa
or
das
xchg
pop
aas
leave
std
lcall
fcmovnbe
cli
int
push
mov
jne
call
aad
xor
mov
mov
push
out
loopne
in
rclb
insb
lcall
adc
mov
fisttpl
leave
dec
xor
dec
div
cld
adc
out
loope
xlat
mov
add
pusha
push
pop
xchg
ss
adc
and
and
andl
xor
push
in
lret
repz
adc
add
mov
push
dec
imul
push
cli
mov
shlb
or
movl
arpl
out
mov
fidivl
and
fs
psrlq
ss
loope
movsb
jo
roll
adc
or
imul
scas
xlat
inc
mov
mov
mov
xlat
call
bound
mov
mov
mov
popa
test
in
or
enter
pop
sub
or
push
nop
xchg
es
jp
jne
out
jbe
fbstp
pop
or
aad
push
divb
icebp
sub
or
jmp
repnz
push
data16
or
movsb
pop
jbe
ljmp
push
xor
pop
cli
and
bnd
jae
xchg
inc
dec
pop
sub
clc
xchg
stos
stc
sbb
add
inc
imul
push
cmpsl
aaa
xchg
data16
test
xor
jns
mov
lret
mov
xchg
call
pusha
cld
repz
std
add
mov
adc
cmp
xchg
les
aam
xlat
movsl
pop
fwait
repnz
mov
pop
inc
pop
lcall
mov
pusha
mov
adc
pop
pop
inc
push
stc
das
cwtl
mov
mov
insb
cmpsl
js
pushf
ljmp
cmc
cmp
pop
add
stos
mov
imul
sub
loope
push
dec
in
into
xchg
out
ficomps
leave
das
or
outsl
in
add
mov
icebp
jg
stc
mov
test
add
jl
or
das
cmc
pop
sub
or
dec
mov
sub
sbb
call
enter
sub
cmc
jle
push
mov
call
inc
je
clc
lret
cmp
ja
jmp
sbb
jecxz
dec
push
dec
cltd
cltd
xchg
imul
mov
icebp
jo
pushf
xchg
lea
push
dec
adc
inc
adc
jne
ds
mov
je
inc
or
and
pop
mov
mov
hlt
add
lret
inc
mov
inc
and
cld
jp
inc
xor
mov
lds
jne
lock
int
rcrb
nop
push
and
fsts
mov
icebp
pusha
dec
add
pop
adc
incb
sti
mov
inc
mov
addb
jle
push
push
cltd
and
sub
mov
lods
ficoms
dec
or
loop
lock
inc
rolb
insl
pop
push
lds
cs
or
jge
jns
fldt
add
daa
pop
lods
dec
push
sbb
mov
jge
bound
dec
pop
aaa
xor
ja
test
pop
pop
sub
shl
loop
pusha
jnp
dec
adc
inc
push
mov
jne
pop
or
iret
add
mov
movsb
leave
mov
les
mov
mov
adcl
ja
push
enter
cwtl
and
pushf
mov
imulb
inc
test
mov
movsb
cmpsb
add
adc
xorl
fwait
les
dec
mov
xor
inc
mov
aad
daa
call
out
shl
sti
jns
cmp
loope
mov
rcl
adc
stos
cmp
repnz
outsl
cmp
adc
cmp
push
add
aam
insl
out
jae
cmp
xchg
push
test
sub
sti
sbbl
bound
loop
movsb
sbb
out
lret
or
loopne
sahf
and
dec
out
push
pop
xchg
push
imul
push
idivl
scas
adc
jnp
gs
cmp
leave
fstpt
test
fsub
xchg
mov
inc
add
mov
les
and
lret
jno
nop
clc
pop
cltd
js
mov
push
lcall
mov
lds
inc
sub
add
add
and
add
pop
rcl
out
pop
push
inc
mov
sahf
clc
mov
jmp
stos
aaa
lcall
repz
push
xor
sub
out
mov
cmp
pushf
call
lret
cwtl
fcomps
loop
cmp
imul
pop
mov
mov
pop
cli
popl
pop
daa
pushf
xchg
add
outsb
test
repnz
loop
fld
jno
mov
jl
aas
xchg
inc
jmp
cmp
inc
fdiv
aam
ret
les
cltd
in
mov
cmp
in
adc
pop
in
pop
push
push
cmp
and
fs
xor
mov
inc
pop
mov
or
sub
lock
xorb
fs
cmp
jle
lret
add
xor
cli
pop
mov
push
sub
add
int
dec
sub
nop
repnz
fucomp
fbstp
out
xchg
mov
fistps
xchg
xor
add
sahf
dec
sahf
in
mov
cld
cmp
loopne
pop
cmpsl
int3
mov
repnz
jne
cltd
mov
popf
dec
push
cmp
adc
mov
fsubrp
loop
rcr
shlb
out
lahf
mov
fcompl
mov
jno
cmpsb
mov
notb
add
je
pop
stos
sti
lret
dec
aaa
xchg
out
adc
leave
adc
ret
xchg
lret
jmp
int
out
cmp
cwtl
pop
push
inc
pop
xchg
xor
mov
jge
mov
xor
data16
imul
push
and
inc
test
shlb
stc
xchg
xor
and
scas
fsts
or
addb
iret
mov
push
jg
shll
push
scas
addr16
cmp
sbbb
mov
sarl
pop
xor
insl
add
jae
stc
repz
test
repz
adc
mov
mov
pop
testb
cmp
adcl
mov
push
add
push
add
jno
sbb
pop
shrl
je
mov
fcoms
in
test
gs
jge
cltd
push
adc
or
outsb
test
mov
push
clc
std
xor
mov
cli
xorb
rcr
movsb
lret
adc
fistl
jg
sbb
mov
pop
orb
iret
sbb
loopne
lcall
pop
mov
xchg
sti
and
out
sbb
xchg
cmp
loopew
test
jne
inc
popf
cltd
icebp
fidivrs
es
sbb
adc
push
hlt
push
scas
test
mov
mov
outsb
cmpsb
lret
cld
scas
and
pop
sahf
and
jns
nop
clc
jne
test
sub
push
lds
jno
fcomip
inc
cld
mov
loop
cmp
push
faddp
jge
orb
sbb
negl
pop
mov
mov
push
push
jecxz
jg
adc
inc
sub
sbb
mov
mov
adc
les
add
mov
rcrl
push
inc
loope
push
ds
mov
sbb
xchg
lods
cs
push
fwait
test
lods
in
add
xchg
push
sub
inc
mov
xchg
mov
inc
jp
cld
xor
jne
inc
daa
mov
fyl2xp1
sarl
pop
fsubl
push
jae
lahf
sbb
dec
mov
or
pop
sbbl
repz
sub
nop
jae
in
jl
xor
sbb
mov
bound
jmp
mov
stos
test
out
jge
and
mov
test
iret
mov
mov
lea
das
es
jl
jnp
inc
int3
lcall
lock
jge
mov
push
mov
adc
repz
push
jo
mov
ja
dec
adc
adc
mov
pop
jns
adc
sub
mov
xchg
mov
out
mov
cli
cmpsb
fisttpl
rclb
out
ljmp
test
jno
push
mov
add
pop
dec
imul
pop
jp
xchg
pop
mov
jmp
fistpll
pop
jmp
lods
mov
lret
push
xor
orb
push
adc
add
pop
lds
mov
ljmp
leave
ss
cmp
mov
in
out
xchg
out
adc
popa
jae
adc
leave
dec
cltd
ss
or
mov
stos
inc
negl
xor
aas
pop
rcr
jg
fwait
into
ljmp
popa
xchg
sub
inc
hlt
cwtl
mov
push
xchg
cmpsb
and
ficomps
and
scas
fimuls
movsl
popa
mov
mov
clc
xchg
cwtl
or
outsb
arpl
push
pop
and
sbb
fmull
dec
inc
inc
mov
xchg
push
dec
ret
inc
pop
enter
cmp
popa
push
movb
dec
push
mov
pop
sub
test
dec
das
call
jo
dec
scas
fdivrl
xor
rcrl
sbb
loope
push
rcr
js
adc
lea
lcall
adc
cmp
xchg
nop
hlt
pop
movsb
rcrl
cmp
aad
fildll
inc
stc
stc
stos
push
jno
jecxz
or
cmp
loope
mov
cmp
pusha
and
fcoml
hlt
sbb
or
insb
pop
nop
push
or
sub
push
cltd
xchg
ret
and
mov
ds
mov
or
test
ret
aam
test
std
xchg
loop
jno
jo
mov
xchg
jno
insb
xchg
loope
sbbb
mov
movsl
repnz
fwait
pushf
out
pop
pop
popf
jae
icebp
pusha
prefetch
xor
lea
mov
mov
fnsave
dec
fldcw
pop
sbb
sub
cmc
pop
dec
in
loopne
jg
mov
sahf
or
lahf
add
mov
sbb
sub
enter
in
jmp
dec
push
jg
std
into
adc
mov
mov
or
pusha
iret
xchg
jmp
jae
xchg
push
test
bound
hlt
mov
jno
outsl
movsb
repz
in
push
mov
and
mov
jbe
hlt
cmpl
aad
mov
dec
sbb
test
jo
ficomps
sbbb
shll
xchg
mov
sbb
mov
adc
scas
mov
jno
popa
xchg
xchg
dec
sub
add
pusha
jbe
fwait
bound
pop
inc
out
in
pusha
add
lcall
sub
lds
or
jae
rorl
lret
mov
pop
sub
sub
mov
sbb
lds
inc
xchg
ljmp
mov
xor
clc
or
inc
mov
std
mov
sub
dec
out
mov
lds
shl
push
or
addr16
outsl
lea
xor
xor
mov
loop
call
pop
mov
cs
shll
movsl
mull
scas
jbe
fadds
xor
mov
scas
in
push
rorb
mov
data16
scas
push
inc
lock
aaa
scas
pop
jo
pop
cltd
cmp
ds
pop
cmpsb
pop
test
pop
ret
sub
fwait
xor
cmc
dec
sub
mov
rcrb
xor
mov
test
sti
gs
pop
std
sti
sbb
lahf
cmp
imul
sbb
ljmp
fsubrl
xchg
into
stos
cwtl
mov
in
nop
add
jb
jns
mov
and
sub
xor
sbb
pop
xor
rcll
out
lods
jnp
icebp
adc
dec
fsubr
lret
test
cmpsl
ljmp
dec
sub
add
aaa
lcall
rol
mov
mov
jmp
jecxz
add
arpl
adc
repz
and
sub
push
xchg
out
jge
add
ret
or
or
aaa
filds
xor
pop
ret
enter
or
in
aaa
in
xchg
shlb
inc
add
in
mov
jns
add
cmpsl
scas
fwait
sti
outsl
ja
add
iret
leave
test
test
mov
and
aaa
mov
adc
push
cld
shll
sub
lahf
mov
stc
dec
andb
shrb
adc
inc
or
outsb
jle
sub
sahf
sbb
jae
mov
pushf
mov
orb
xchg
mov
decl
jne
pop
aaa
out
jne
mov
ja
sahf
xor
sub
mov
addr16
sbb
add
pop
icebp
aad
rcll
xor
lret
cwtl
stos
aam
mov
cmp
dec
ss
jns
bound
imul
lret
mov
sub
jns
fsubl
xchg
sbb
je
imul
pushf
cmp
pop
sub
push
aaa
jle
int
in
add
ret
in
ret
int3
out
hlt
mov
inc
fstps
lcall
sbb
push
cmp
daa
sbb
inc
push
out
pop
cmp
insb
int3
movsl
mov
je
ficoms
mov
jns
pop
adc
xchg
add
cs
mov
adc
jecxz
xchg
insl
test
jbe
adc
popa
add
cli
lock
nop
and
mov
add
loop
lcall
enter
add
test
cld
addps
or
and
jb
mov
mov
jbe
arpl
xor
inc
or
mov
sbb
adc
adcb
sbb
mov
test
adc
mov
adc
mov
scas
fldt
data16
je
xchg
aas
rclb
mov
out
test
pusha
jnp
dec
inc
pop
stc
xor
and
push
jg
add
scas
and
mov
xor
leave
pop
rclb
test
xor
jle
adc
and
jb
mov
xor
adc
mov
pop
ljmp
cmp
sbb
inc
lahf
sub
stc
frstor
cwtl
repnz
mov
add
xchg
popa
sub
int3
lret
xchg
ja
cmpsb
insl
into
addr16
call
lret
jo
adc
aad
mov
pusha
or
fmul
pop
or
mov
push
into
push
or
jae
cmp
cs
cmp
xchg
and
mov
shl
repnz
mov
ret
mov
aaa
sub
ja
rcrl
mov
mov
loopne
dec
repnz
cmp
xchg
push
ljmp
dec
sub
mov
call
add
mov
mov
xor
push
movsb
pop
pop
dec
add
and
jmp
sub
xchg
jecxz
gs
cmpsb
sub
or
mov
xchg
test
mov
popa
test
inc
in
cwtl
mov
sbbl
dec
xchg
das
lahf
sub
sub
sbb
jnp
sub
sbb
inc
add
pop
bound
fxch
push
sub
sub
insl
loope
cmp
dec
push
sub
jae
mov
adc
push
fucomp
and
mov
pop
div
ljmp
cmpsl
dec
ret
imulb
adc
inc
dec
addl
inc
orl
jne
lea
pop
add
push
cwtl
mov
mov
lods
dec
jl
in
add
push
cmp
pop
lock
imul
xor
rcr
dec
inc
movsb
pushf
aas
jnp
popa
jns
sbb
icebp
jns
add
fwait
mov
lahf
pop
test
and
aaa
popa
adc
ret
sbb
pop
sbb
fsubrp
movsb
jnp
ds
mov
xor
test
lahf
pusha
je
jno
minps
testl
jle
in
or
aad
clc
or
imul
iret
sbb
call
cmp
adc
cmp
lahf
lds
dec
andl
sub
int
add
notb
outsl
test
cwtl
jg
dec
mov
and
mov
mov
mov
std
xchg
roll
lock
repz
jge
mov
inc
mov
push
push
pop
aas
add
push
mov
dec
mov
test
insl
or
pop
sub
js
clc
imul
fldcw
xchg
lret
fdivrs
push
mov
push
xchg
insb
mov
enter
jg
jge
cmpsb
mov
sbb
and
jbe
lret
mov
sbb
loop
cmp
cld
mov
dec
out
adcb
dec
sub
mov
mov
ss
repnz
lods
loope
sbb
inc
add
mov
sub
jle
arpl
xor
je
les
jbe
and
add
pop
negl
lcall
xor
and
push
ljmp
ss
xor
adc
pop
xorb
hlt
or
cmp
repnz
nop
popa
adc
cmp
mov
repnz
leave
push
into
push
xchg
cmp
xor
call
and
mov
dec
and
cmc
mov
add
fistl
fsubrl
gs
pop
les
adc
enter
mov
jbe
mov
nop
jno
xor
leave
call
mov
arpl
pop
or
push
jle
aaa
jae
and
mov
dec
xchg
mov
xchg
outsl
jbe
lods
das
add
pop
mov
ret
pop
andl
sub
jp
or
and
xor
cmp
fisttps
mov
scas
cltd
xchg
mov
cmp
push
dec
sti
ret
fwait
mov
out
leave
sbb
dec
movsb
mov
popa
dec
nop
dec
aas
out
hlt
scas
aaa
dec
mov
fadds
pop
adc
inc
dec
mov
sbbl
cmp
cmp
mov
mov
inc
inc
xor
loopne
in
push
cmpsl
lea
adc
mov
cmp
roll
mov
mov
mov
adc
push
pop
jns
mov
jae
xchg
xor
add
push
imull
xchg
ret
add
repnz
dec
int3
jne
dec
jo
int3
fs
or
loope
jp
sub
mov
jmp
ds
loope
ss
cli
sahf
int
js
stc
push
and
sub
hlt
add
add
ds
es
xchg
xor
aas
jl
shlb
dec
cmp
imul
lock
outsb
push
imul
loopne
or
cmc
daa
sbb
pusha
pop
fyl2xp1
in
mov
je
push
xchg
fwait
loop
cs
jns
fiadds
hlt
sahf
stos
enter
cli
xor
ret
sbb
call
xchg
rcrl
mov
ret
mov
test
cmpl
pop
insl
xor
test
xchg
xor
fcmovbe
sub
iret
mov
or
lock
xchg
pop
shll
sbb
ljmp
lods
or
daa
jbe
jg
cs
push
lcall
imul
mov
in
dec
mov
dec
fwait
das
fwait
xor
pop
out
test
popf
shll
lcall
adc
inc
call
push
cmc
mov
jge
das
clc
cld
loope
mov
rolb
xorb
xchg
xlat
push
xor
call
iret
xchg
andb
mov
arpl
call
cmp
ja
out
insl
inc
push
fsub
js
cmp
fsts
scas
mov
dec
bound
daa
shlb
idivb
lcall
dec
out
xor
mov
mov
jne
lods
lea
dec
rcrb
pop
or
cmp
push
mov
cltd
mov
sarb
xchg
shrb
cmp
pmaxub
cwtl
stc
push
sub
push
pop
enter
mov
xchg
inc
mov
mov
lcall
mov
inc
cmp
outsb
xchg
xchg
inc
sub
pop
and
pop
adc
xorl
push
xchg
jne
xchg
fnsave
daa
std
in
insb
aas
inc
fadds
and
mov
cmp
mov
je
test
sbbb
cwtl
jmp
outsl
ret
out
cld
xchg
push
js
adc
and
pop
jmp
lods
fstp
ret
in
or
loop
ret
scas
stos
jae
ss
mov
cmp
pop
push
mov
pop
mov
rep
sbb
lahf
sbb
enter
push
scas
push
pop
xchg
fcomps
ja
pusha
dec
int3
aam
or
push
ret
pop
dec
test
adc
out
lahf
jecxz
mov
xor
pop
jl
jecxz
cmp
mov
push
adc
mov
lea
ret
push
mov
insl
and
mov
adc
jge
bound
fisubl
fsubrs
mov
pop
pushf
sbb
out
xor
sub
adc
rolb
add
xchg
imul
cltd
add
movsl
lret
mov
push
add
push
cli
xor
or
jmp
subl
cmp
mov
ret
dec
xlat
in
subl
imul
nop
imul
stc
shrl
adcb
jne
pusha
push
not
xchg
pop
adc
fbstp
jne
pop
arpl
sub
andb
jle
mov
sbb
pusha
orl
xor
jno
add
scas
filds
push
xor
mov
je
pop
das
out
sahf
jl
addr16
les
in
test
cmpsl
mov
adc
xchg
stos
pop
lods
ss
xchg
and
sub
push
mov
add
inc
xor
mov
popf
inc
cmp
arpl
in
shl
dec
sub
fnstsw
hlt
xchg
mov
roll
mov
add
ret
loope
push
sub
shr
cmc
leave
test
cmpsl
les
popa
mov
pop
test
mov
shl
xor
repz
push
mov
adc
pop
jl
mov
or
mov
jmp
leave
mov
jg
xlat
pop
outsl
fildl
filds
call
ret
std
pop
sbb
stc
inc
popa
push
lock
push
cli
or
popf
xor
cmp
and
xchg
fs
cli
fwait
sbb
shlb
adc
test
fldcw
sub
pop
out
aas
fadds
notb
in
mov
fidivrs
cmp
scas
imul
mov
sbb
mov
ret
int3
test
xchg
adc
outsb
shl
es
and
cld
rcl
cmpb
das
fimuls
call
fisttpl
and
adc
mov
mov
clc
push
mov
pop
out
lea
or
lahf
movsl
dec
imul
imul
mov
mov
and
dec
dec
jne
out
mov
add
out
subb
ja
sbb
push
out
lret
pop
jg
or
aam
dec
push
dec
fwait
aam
dec
lahf
ja
aas
jne
int
clc
sbb
ret
lock
scas
inc
paddb
add
cmp
add
mov
pop
jp
xacquire
stos
push
mov
lret
cli
in
lods
pushf
into
push
add
jo
aaa
xor
jo
cli
and
xchg
shlb
data16
and
jb
mov
mov
jmp
or
xchg
push
mov
sub
jbe
fisubrs
jp
out
add
add
pop
pop
or
in
pop
mov
jecxz
xchg
cmpb
or
stos
lods
or
sub
cli
add
ja
das
jae
std
adc
out
add
fstl
cli
iret
lods
jns
adc
ret
xchg
dec
mov
mov
jle
aas
and
test
xlat
jb
mov
push
aad
cmovp
dec
adc
and
or
xchg
adc
add
push
test
jb
jp
mov
xor
call
mov
shl
cmp
lret
cmp
mov
jg
nop
or
out
push
fldenv
sahf
icebp
adc
insb
or
lea
fs
add
aas
jb
cli
cmp
test
in
mov
and
mov
aad
aam
dec
lea
sbb
loope
test
sbb
lds
sub
sbb
hlt
cmpps
fdivp
in
inc
inc
mov
jecxz
sub
push
leave
sbb
cmp
dec
lcall
leave
lock
loopne
mov
xor
adc
movsb
lret
mov
iret
push
mov
scas
ror
xor
or
xlat
sub
pop
xchg
cli
or
fucomi
shrl
jno
mov
loopne
xor
out
sbb
add
and
cli
rclb
and
mov
in
adc
lcall
sbb
push
push
pop
push
push
imul
sub
aaa
arpl
les
sub
dec
pushf
in
in
addr16
jge
roll
lods
sub
dec
xor
inc
jno
jmp
nop
nop
mov
dec
pusha
bound
xchg
outsb
outsb
mov
movsb
pop
adc
inc
push
sti
adc
mov
in
sub
mov
lcall
mov
pusha
push
test
or
inc
dec
aam
sub
pop
out
aad
insb
sub
push
fs
scas
and
fcmovnu
fldl
xor
aad
pop
add
mov
shl
nop
iret
pop
or
cmp
or
jno
stc
std
mov
lds
pop
or
push
mov
in
jp
pop
es
cmp
xor
fistl
mov
dec
test
pop
mov
mov
inc
or
insb
mov
mov
scas
ljmp
insl
cmp
push
cmp
std
pop
push
in
push
arpl
push
sahf
add
loope
aas
out
cs
fstpt
push
xchg
jle
outsl
lret
mov
imul
rclb
hlt
add
push
dec
xchg
inc
andl
push
loop
mov
pop
push
repnz
adc
js
inc
mov
jb
inc
push
push
fldenv
mov
cmp
sub
sub
mov
xchg
outsb
mov
jmp
fisubrs
or
fcoms
sar
mov
in
dec
mov
outsb
mov
inc
cs
clc
into
add
dec
xlat
inc
sub
dec
inc
and
push
adc
aad
test
cmp
ss
push
ja
outsb
cmp
xlat
rorl
jle
pop
or
jns
sbb
xchg
sub
cmpl
pop
clc
cmp
add
mov
test
popf
cmp
scas
jne
xchg
shrl
jb
jne
xchg
and
xor
sub
mov
xchg
mov
lret
mov
mov
fdiv
lret
fnstsw
or
mov
xor
je
fstl
sbb
pushf
xchg
aas
fs
pop
iret
push
push
mov
dec
stos
sahf
imul
and
xchg
fdivr
xchg
lret
push
sbb
mov
lods
mov
cmc
mov
pop
push
jo
test
push
lahf
push
xor
out
push
popa
jmp
jae
mov
push
repz
call
cwtl
mov
mov
gs
addb
data16
ror
mov
jmp
shrb
jle
gs
push
stc
jns
inc
pop
test
fstps
bound
scas
adc
in
push
enter
rclb
imulb
jb
mov
stos
xchg
push
shlb
movsb
jp
cmc
je
pop
inc
jg
shll
push
test
rcl
ret
cld
aaa
pusha
adc
cli
adc
pop
sub
push
sarb
push
mov
ljmp
adc
rcrl
popf
loopne
jmp
enter
push
or
adc
sahf
jmp
aas
call
jb
add
jmp
or
sti
mov
js
cmp
mov
jnp
not
mov
push
push
mov
arpl
xchg
daa
sub
or
or
std
sub
incl
adc
dec
push
loope
push
outsl
ljmp
add
adc
arpl
cltd
shrb
mov
lcall
fistl
mov
xchg
push
push
jns
mov
push
adc
js
mov
cwtl
mov
lahf
push
out
adc
mov
dec
orl
push
test
std
push
jle
lods
xchg
hlt
mov
push
lock
push
cmp
inc
ret
pusha
sbb
out
mov
push
ret
xor
imulb
sbb
in
xchg
fnsave
xor
and
xchg
je
stos
cwtl
mov
mov
push
and
add
mov
dec
das
xchg
fwait
sub
fadds
pop
in
jg,pt
add
cmc
int
mov
xor
mov
jns
mov
push
pop
insl
jnp
jmp
call
xor
out
das
lret
movsb
xchg
sub
cli
cltd
xchg
imul
popa
cmp
sbb
inc
xchg
or
add
shlb
ljmp
push
daa
cmpsb
xchg
push
outsb
or
push
mov
inc
inc
and
mov
scas
mov
pop
jp
ss
add
int3
xchg
and
or
adc
xor
mov
mov
jle
iret
jge
repnz
leave
xchg
push
push
push
lds
dec
andl
xchg
xor
andb
lret
divb
sahf
fsub
ss
mov
std
dec
mov
cmp
sbb
add
mov
adc
mov
movsb
mov
xchg
hlt
inc
cmpsb
fbld
mov
insl
cmc
test
or
into
imulb
mov
mov
js
sbbl
lds
in
xchg
and
mov
lds
int
lds
lods
rcl
jecxz
mov
cwtl
vcvtps2ph
in
pushf
stos
inc
push
sbb
mov
sbb
aam
fs
subl
rol
es
xor
icebp
pop
xlat
das
mov
lock
loope
and
iret
stc
inc
dec
test
xor
test
outsb
ret
cmp
sbb
fiaddl
jmp
fcmovnbe
mov
adc
mov
jl
mov
fnsave
adcl
cwtl
fs
add
and
adc
aaa
icebp
xor
fbstp
iret
jno
mov
es
xor
lahf
or
lods
push
mov
mov
push
push
ds
adc
or
adcb
pop
popa
jmp
ret
xchg
repnz
or
sub
dec
fdivl
or
aam
imul
std
cld
loop
mov
fsubr
add
int3
lret
xchg
pop
add
ss
lds
orl
xlat
lea
and
mov
sub
mov
aam
cld
sti
ss
in
inc
sti
or
adc
xchg
jns
clc
out
xchg
hlt
jecxz
mov
mov
xor
cltd
sti
jmp
stos
push
repz
pop
mov
shll
mov
sti
or
mov
aaa
lods
push
lods
mov
or
movsb
add
dec
scas
in
sub
xor
out
decb
and
sub
lcall
cmpsl
adc
jge
xlat
pusha
rol
mov
insb
jne
mov
jno
fcoms
sbb
cmc
and
inc
outsl
cmp
cmp
xchg
mov
dec
xchg
sbb
jno
or
cld
icebp
cld
fildll
cmp
sub
out
push
dec
add
push
loope
out
pop
add
mov
or
and
sahf
xchg
mov
xor
inc
jge
xor
pop
test
out
add
notb
push
lcall
fidivl
lock
repz
pop
dec
xor
push
sbb
mov
loope
adc
test
out
jge
adc
jbe
sti
or
fs
inc
push
or
outsl
std
mov
push
adc
sahf
mov
ret
lahf
sub
dec
addb
jp
or
insl
sbb
lcall
add
jno
rcl
pusha
into
adc
fldenv
movsb
cwtl
or
mov
add
inc
adc
orl
fwait
out
sarl
daa
inc
push
insl
aam
or
cmp
mov
pop
pop
testl
mov
xor
lods
cmc
rcl
loope
lods
push
add
je
push
into
cli
mov
into
leave
inc
sub
repz
sub
in
adc
scas
mov
cwtl
sub
imul
aaa
dec
sbb
xchg
sahf
pushf
int
pop
shll
xor
es
shll
loope
sub
imul
aam
lret
fcompl
mov
lods
out
ret
movsl
shll
jl
cmp
or
xchg
into
inc
cmpb
sub
fimuls
jge
and
testb
fdivs
cmp
xchg
inc
iret
scas
test
gs
dec
pop
gs
cmp
cmp
iret
andb
out
insb
shrb
adc
lods
cltd
pop
or
out
add
daa
and
mov
sbb
xlat
pop
sbb
subb
leave
jno
sbb
jne
std
adc
les
test
fdivrs
jae
push
in
mov
shl
jp
repz
xchg
mov
pop
cmp
jmp
sub
mov
xor
pusha
push
cmpl
cmc
xchg
dec
push
xchg
loop
pop
subl
lea
mov
mov
mov
popa
pop
mov
scas
sbbl
imul
scas
cmp
sub
mov
add
divb
jge
and
les
xor
cwtl
dec
fists
ret
adc
sbb
or
aaa
cli
mov
and
shlb
mov
iret
mov
and
in
fwait
bound
dec
dec
loop
adc
cmpsb
scas
aad
ss
sub
or
int
mov
dec
loope
lret
je
add
sbb
fisubrs
and
xchg
sub
xchg
popw
push
shl
fistpll
push
sti
pop
test
pop
push
cmp
pop
pop
pushf
mov
mov
inc
popa
sbbl
pminub
scas
push
std
dec
adc
pop
pushf
xchg
in
push
inc
lfs
push
lock
or
mov
sbb
lock
ja
adc
or
cmp
dec
xlat
sbb
lret
fisubs
lcall
imul
ret
or
pop
test
cmp
sti
in
jnp
pop
repz
nop
pop
mov
xor
mov
jb
and
pushf
movsb
mov
cmpsb
repz
cld
lret
dec
xchg
dec
mov
iret
cwtl
lret
mov
cmpsl
hlt
add
mov
push
mov
imul
or
fidivs
inc
mov
xadd
jmp
pusha
push
decb
xor
jmp
jne
mov
sub
mov
dec
in
xchg
cmp
jns
ja
or
push
inc
repz
lcall
mov
xchg
inc
adcb
jns
pop
test
add
jnp
or
mov
mul
cmp
jno
xchg
mov
or
push
pop
jno
cli
sahf
sbb
test
xor
jnp
ja
jmp
pop
sub
fimuls
daa
dec
mov
xchg
sbb
js
inc
mov
insl
cmc
jp
xlat
insb
sarb
das
dec
ret
movsl
movl
push
hlt
jne
pop
call
push
std
out
inc
add
scas
inc
mov
dec
out
dec
push
adc
adc
jnp
xchg
pop
add
repz
das
in
clc
fwait
and
inc
sub
movsb
pop
cmpsl
adcl
dec
push
out
ss
xor
fucom
sbb
negb
pop
sbb
sti
push
fsub
mov
fnstcw
std
push
mov
mov
js
inc
in
cmp
inc
dec
shlb
imul
jno
push
inc
mov
fs
and
cmp
sbb
js
mov
pop
rcl
movsl
lock
clc
add
lret
add
or
or
push
lock
out
rcl
adc
mov
lahf
mov
pop
int
dec
add
sbb
and
fsub
inc
sub
lea
mov
mov
push
mov
pop
mov
xor
int
int3
popf
fdivl
imul
jnp
seto
jb
mov
adc
repnz
sbb
lds
sbb
ret
int3
lds
shll
cmp
jg
jmp
les
dec
or
ljmp
push
testb
and
mov
push
adc
inc
daa
and
imul
or
addr16
std
mov
push
je
push
adc
mov
stos
pop
xchg
mov
jns
sub
cmp
mov
pop
popa
leave
fisubrs
lds
push
push
push
cmp
ja
add
daa
sbb
aam
push
jmp
in
cld
push
jecxz
jbe
cmp
jae
es
test
das
outsb
in
pop
adc
lcall
fs
pause
or
rorb
js
xchg
jmp
in
out
insl
je
pushf
scas
fs
mov
mov
loope
add
lcall
lea
sub
xchg
mov
bnd
iret
cmp
mov
inc
xchg
clc
fdivr
sub
xor
lock
jle
inc
arpl
stos
push
jecxz
mov
add
out
jl
dec
int
enter
loop
stc
mov
inc
movsl
mov
or
divl
mov
repnz
inc
lcall
pop
in
mov
jmp
addl
pop
stos
xor
push
lods
cmp
adc
adc
pusha
setb
jmp
mov
mov
jp
imul
inc
push
andl
or
ss
push
or
and
mov
adc
jbe
push
in
in
mov
or
cmp
ja
cs
popa
andb
sti
and
push
cmpsl
sub
mov
sub
in
vsubsd
mov
dec
das
dec
mov
xor
std
int
jle
push
or
pop
jo
xchg
inc
mov
lods
testb
loop
pop
adc
add
push
fsubrl
push
mov
fs
leave
inc
push
daa
nop
push
push
ljmp
mov
inc
pop
sbb
gs
ljmp
ss
orl
fisubrs
out
inc
mov
sub
and
mov
imul
jmp
clc
sub
or
sahf
xor
mov
inc
int3
inc
sbb
or
and
add
inc
jae
inc
jb
lahf
fcompl
mov
pop
gs
jmp
mov
xchg
decl
icebp
mov
je
or
dec
divl
xchg
mov
and
hlt
mov
pop
int3
cmp
mov
scas
mov
outsb
fs
pop
sub
mov
push
ror
xor
sbb
push
xchg
cmp
jno
aam
jmp
pop
ja
jns
sub
lret
daa
ds
pop
bound
ljmp
mov
cmp
xor
mov
cmp
sub
cmc
lds
aaa
jo
xchg
aaa
stc
inc
pushf
loope
sbbb
mov
insl
inc
iret
rolb
inc
test
xor
push
sub
xor
mov
xchg
jne
popa
inc
cwtl
hlt
dec
movsb
ja
xchg
test
cmc
mov
femms
mov
inc
push
xchg
repnz
out
scas
sbb
inc
dec
cmp
rcll
cmp
cli
mov
cmovge
xchg
dec
cmpsb
out
leave
mov
push
pop
mov
adc
inc
jae
in
cmp
testb
mov
dec
push
push
jne
test
add
nop
mov
adc
mov
ljmp
push
dec
push
inc
imul
nop
aaa
nop
push
aas
ja
iret
push
jle
push
mov
and
mov
mov
pop
repnz
lea
inc
sub
rcll
push
movsb
mov
xor
push
aas
add
add
xor
inc
mov
into
jg
setnp
lret
push
sarl
pop
and
adc
mov
push
lcall
jge
outsb
or
lods
add
insb
call
iret
cmc
xor
out
xchg
pop
jl
sub
or
std
out
lahf
push
mov
add
es
push
jo
test
hlt
lahf
lea
push
mov
mov
adc
rcr
mov
mov
add
call
adc
into
add
insl
dec
out
jno
mov
jle
adc
push
aas
gs
cmp
shll
push
dec
mov
mov
inc
jle
into
test
decl
mov
mov
ljmp
pop
adcl
stos
cmc
out
ret
in
fsubrp
sahf
in
sbb
and
mov
lods
adc
andl
lcall
mov
xor
pop
adc
push
rorl
stos
addl
pop
cld
jae
lods
rcl
inc
mov
and
adc
out
jle
mov
in
mov
mov
lea
std
jp
lods
in
sub
ja
jge
andl
inc
pop
cmpsl
std
addb
fsubrp
in
sbb
pop
test
push
ds
flds
cmp
push
lea
push
in
cmc
je
es
call
decb
adc
mov
int
push
jl
in
jmp
cmpl
xchg
cmp
xchg
popf
or
sbb
dec
fnsave
add
ret
imul
scas
outsl
xor
lds
ret
shlb
shlb
push
push
loopne
mov
cmpsb
push
mov
jns
fcoml
dec
jnp
cmpsb
daa
push
insl
adcl
pop
or
jp
pusha
mov
stc
jl
js
scas
push
mov
mov
xchg
pop
inc
xchg
cmpsl
or
mov
in
mov
in
stc
pushf
fwait
inc
pop
das
mov
xchg
notb
out
cmp
jmp
push
cmp
cmp
es
dec
mov
jb
mov
pop
roll
dec
mov
mov
ret
xor
dec
outsb
insb
popf
ret
xchg
popa
push
mov
notl
jnp
sub
jne
mov
mov
lcall
adc
leave
iret
scas
pop
fdivr
and
inc
loop
mov
pop
hlt
cmc
xchg
cmp
mov
arpl
pop
mov
add
enter
mov
and
enter
or
sar
fnstenv
imul
mov
pop
mov
in
mov
cmp
jecxz
push
insb
rorb
add
jl
out
and
inc
loopne
loope
test
xchg
cli
adc
push
mov
dec
mov
aas
push
xchg
lods
aad
sbb
mov
mov
add
cmp
lods
push
inc
lret
aaa
test
mov
push
and
loopne
inc
jge
and
call
sub
mov
mov
mov
sti
dec
jbe
je
mov
aam
das
rcrl
or
pop
mov
sti
mov
xor
mov
xchg
mov
mov
out
push
cwtl
enter
add
push
mov
iret
adc
mov
adc
sti
clc
pop
jp
mov
sub
shll
mov
add
xor
sbb
cld
imul
es
adc
int3
lret
inc
sbb
test
fldt
mov
mov
and
cmp
adc
pusha
mov
add
mov
aam
cwtl
push
inc
cmp
cwtl
cmpsb
cmp
sbb
pop
mov
add
lcall
and
addr16
jb
inc
bound
mov
imul
mov
imul
cmp
cwtl
pop
xor
fnsave
rclb
fcomi
push
inc
jg
std
lret
jnp
mul
leave
mov
call
popa
mov
sahf
xchg
mov
jo
pop
in
mov
cmpsl
pop
test
mov
mov
inc
ja
mov
insl
push
cli
outsb
aad
bound
cmp
js
ret
push
pushf
neg
cmp
xor
mov
xchg
dec
stc
cmp
in
and
xchg
lods
inc
jmp
xor
movsl
call
mov
lock
pop
xchg
stos
cmp
dec
popf
in
clts
cmpsb
gs
decl
out
push
imul
dec
fs
mov
std
ljmp
dec
inc
scas
adc
cs
inc
dec
xor
insb
ficoml
sarb
mov
test
movsl
repz
cmc
mov
hlt
cmpsb
out
fst
int3
add
xor
outsl
push
outsl
int3
jg
mov
push
int3
push
arpl
push
xor
flds
std
imul
jo
stos
mov
xchg
sti
cmp
inc
dec
fstpt
pop
push
xor
aad
negl
pop
hlt
popf
xchg
cmp
cmp
dec
sub
fwait
mov
xor
aad
cmp
test
mov
prefetcht2
pop
ret
icebp
popa
inc
lods
dec
pop
jne
cld
xor
sub
pusha
ret
and
fsts
fsubrl
test
dec
push
leave
xchg
mov
mov
fdivrl
lds
or
leave
loop
jmp
cltd
subb
mov
add
rcrb
mov
sti
jnp
cmp
repnz
dec
shrl
inc
ljmp
aam
push
mov
jle
in
aad
mov
lret
fs
call
fimull
loop
mov
sub
xchg
cmp
mov
insl
or
into
xor
outsl
xor
test
ljmp
jae
pushf
outsl
sahf
testl
push
push
loopne
and
cs
int3
lret
loope
ja
into
jnp
out
sti
lock
inc
jbe
push
pusha
shll
rcr
jmp
cmpsb
sbb
repz
sbb
push
pop
mov
adc
test
ss
cmp
mov
movsl
shl
nop
mov
jg
lahf
insb
push
ja
push
pop
sub
pop
shrb
push
movsl
in
mov
lret
jecxz
or
pop
add
mov
out
push
adc
push
xchg
loop
sub
jno
out
cli
mov
mov
test
xchg
test
movsb
clc
dec
sbb
insl
lret
js
test
fldenv
push
or
sarl
in
pop
xchg
mov
outsl
xchg
or
insb
fcmovnb
popf
pop
shl
xchg
lds
orl
sbb
int
xchg
inc
arpl
mov
fidivl
out
outsb
insl
inc
sbb
mov
imul
lahf
xor
inc
sbb
sub
cmp
pop
test
test
push
lods
fcmove
negl
push
jns
int
test
sahf
mov
xor
jae
leave
orb
add
push
popf
nop
mov
adc
clc
call
or
gs
cmp
fdivl
iret
stos
bound
int3
pop
jae
sub
dec
jp
sub
add
jb
push
jle
insb
mov
repz
test
jo
rol
sbb
push
sub
js
mov
cmp
sbb
cld
cmp
jb
dec
jmp
mov
aas
mov
pop
lock
das
push
pop
inc
mov
into
xchg
mov
lcall
or
rclb
mov
push
loop
sbb
cltd
dec
jmp
cmp
lods
sbb
enter
test
sbb
push
in
push
notb
hlt
out
hlt
test
fsubl
xchg
dec
pop
ds
cld
sbb
scas
movb
pop
add
inc
pop
or
mov
in
sbb
dec
or
cmpsb
sub
repz
mov
in
push
int
add
mov
xlat
push
push
orl
iret
fwait
mov
ret
cli
sbb
mov
adc
pop
stos
cli
out
arpl
inc
push
inc
add
push
aaa
and
pop
push
inc
shlb
mov
lret
idivl
xlat
cltd
fildll
push
mov
out
push
out
addr16
add
or
fidivs
leave
jp
mov
mov
sbb
sahf
mov
xor
push
xor
sub
xchg
mov
clc
pop
negl
daa
lods
les
mov
sbb
mov
paddd
lret
inc
mov
insl
mov
test
test
sub
js
insl
int3
cmpsb
adc
or
ja
pop
imul
ja
popf
shrb
and
inc
ljmp
rol
sub
xchg
or
dec
sub
pop
inc
mov
cwtl
xchg
adc
jmp
cmc
mov
xchg
push
lds
popa
xor
xchg
adc
inc
inc
add
inc
loopne
xor
shl
or
dec
push
insl
insb
sub
mov
dec
sub
out
xlat
xchg
adc
and
add
aad
sti
js
leave
xchg
push
cwtl
cmp
mov
pushf
mov
add
enter
jo
aas
mov
cs
in
mov
fistps
popf
clc
scas
dec
dec
sbb
cmp
out
test
iret
enter
lcall
lret
add
jb
xor
fdiv
push
or
jae
lds
ds
fcomp
xchg
das
mov
fcmovne
aas
movsb
and
push
std
and
push
dec
add
inc
dec
test
rorb
jo
xor
xchg
cmp
sub
fbstp
xor
cmp
pop
lcall
lock
insl
ret
pop
lcall
xor
fbld
pop
les
adc
sti
cmp
mov
mov
inc
fistl
push
or
testl
jae
mov
mov
or
mov
push
xor
mov
test
mov
xchg
push
xlat
stos
push
or
cmpsb
cmpsl
inc
and
push
mov
fwait
fs
xchg
repz
push
lock
dec
cmp
adc
shrl
daa
pop
insl
jecxz
loopne
mov
cmp
jb
cmp
mov
and
inc
and
nop
xchg
adc
mov
xor
mov
sti
movsb
fs
pop
cmpsb
lods
fstpt
je
gs
sbb
jge
loop
push
and
int3
fstpl
mov
dec
sti
lock
mov
pop
addr16
mov
loop
jp
mov
std
mov
pop
dec
clc
inc
out
leave
mov
scas
test
mov
lret
adc
shll
dec
bound
das
scas
out
outsl
nop
out
aam
leave
out
mov
xchg
js
dec
mov
dec
jbe
mov
jmp
subl
ret
fdiv
test
bnd
add
push
sbb
dec
sbb
std
or
ficomps
mov
shlb
test
cmc
jle
clc
pop
and
jo
es
xchg
aaa
push
mov
clc
xchg
and
pop
cs
cmp
and
jmp
out
jnp
aas
lods
push
push
xor
mov
scas
in
adc
subl
sbb
and
lds
cwtl
inc
jge
push
jl
scas
fcoml
jge
popa
xchg
in
aad
icebp
cwtl
push
and
pop
outsl
imul
pusha
subl
cmp
sbb
dec
push
mov
movsb
inc
mov
and
inc
push
mov
mov
or
sbb
adc
push
inc
sti
repz
dec
nop
aaa
push
push
xlat
mov
out
mov
pmullw
ds
fistpl
adc
sbb
rclb
push
cmpb
cld
mov
fistpl
js
scas
xchg
push
push
adc
mov
je
iret
inc
addr16
jo
dec
les
xchg
add
dec
xchg
int
push
push
xchg
scas
mov
push
into
jns
xor
add
cmp
push
dec
and
mov
int
and
pop
inc
jae
test
xchg
sbb
popf
adc
out
ss
ljmp
sbb
cmp
fidivrl
dec
lret
jb
sbb
in
rcll
xchg
in
pop
cmp
mov
mov
out
mov
iret
pop
out
orl
push
test
icebp
dec
clc
mov
or
inc
mov
stos
sarb
sbb
cld
mov
rcrl
sub
inc
mov
push
call
fwait
jo
cmp
inc
scas
mov
shll
repnz
fists
xchg
cmp
lods
lret
jb
mov
lods
cld
cmp
push
jl
push
jno
aam
and
clc
lods
fs
lret
cmp
in
or
ds
aad
add
jne
inc
adc
push
sbb
xor
jbe
cmpsl
inc
in
pop
xor
int
mov
xchg
das
mov
bound
rorb
add
test
inc
imul
pop
cmp
fs
js
xor
rcrb
ljmp
push
jnp
nop
adc
cmpsl
sahf
jle
lods
aas
into
cmp
add
shrl
adc
mov
cmp
cli
mov
call
cmp
xor
repnz
inc
cwtl
stos
mov
dec
sub
stos
in
or
insb
xchg
mov
shrl
mov
in
mov
adc
jmp
shlb
out
inc
or
dec
int3
adc
pop
aad
cmpl
dec
es
dec
or
pop
sub
lahf
mov
jne
mov
inc
add
dec
adc
add
aam
push
ret
or
das
pop
imul
fwait
lds
fstpt
sbb
mov
pop
xchg
or
inc
repz
or
enter
cwtl
push
mov
inc
mov
xchg
xchg
cmp
fsubr
jnp
stc
test
sahf
dec
and
dec
cmp
mov
adc
fcom
repnz
sub
sub
lock
mov
lret
aaa
lret
mov
jg
inc
sti
jno
repnz
dec
je
mov
pop
popa
and
cmpb
push
ss
inc
inc
addb
mov
sub
icebp
pop
jne
leave
adc
rcll
pop
xor
in
out
adc
push
xor
mov
loopne
and
aam
dec
mov
shr
push
sub
stos
movsl
int3
les
gs
sbb
sbb
adc
sbb
push
mov
xor
les
pushf
out
add
or
fsubrl
push
cld
mov
mov
dec
ss
or
sbb
jge
mov
popl
divb
fidivl
or
lret
push
out
inc
dec
mov
xor
js
andl
sub
push
sbb
mov
sahf
jmp
mov
push
sbb
les
mov
push
jae
jae
jne
mov
sarl
add
adc
lcall
cld
adc
xor
aaa
gs
shl
sbb
adc
in
sbb
out
pushf
repnz
hlt
xchg
add
adc
test
lea
lret
mov
addr16
xor
xor
roll
push
fildl
pop
mov
fwait
xor
pushf
clc
cmc
lods
xchg
jb
mov
jge
rorl
xchg
std
std
cmc
cwtl
imul
pop
mov
clc
repz
xchg
jne
adc
lods
cmpsl
jecxz
xchg
fucom
xor
and
bound
adc
inc
mov
in
mov
fcomps
in
aam
xchg
add
outsl
cmpsl
inc
dec
jmp
or
ljmp
mov
adc
stos
out
and
mov
cltd
xchg
inc
pusha
pop
mov
lds
gs
cmp
and
sarl
adc
ret
xor
jns
stc
into
test
fldt
mov
stc
les
or
ficoms
addl
in
push
lea
and
cmp
mov
mov
ret
aaa
xor
js
imul
xor
shll
xlat
scas
mov
mov
or
and
cmp
push
fdivl
dec
scas
add
gs
sub
dec
mov
sub
das
lret
aad
out
rcrl
pop
adc
jg
push
out
jmp
fsub
fiaddl
add
dec
cmp
mov
push
pop
and
adc
rcl
xchg
andl
pop
cld
cmovo
adc
dec
out
jns
cmc
daa
jg
push
insl
outsb
jno
imul
imul
loopne
or
lods
test
pop
pop
cmp
sbb
jl
add
stos
mov
sbb
push
push
pop
dec
mov
mov
adc
and
leave
and
jp
jp
and
inc
adc
fstpt
mov
in
clc
movl
les
inc
adc
popf
push
aam
adc
loope
mov
outsb
xlat
mov
enter
mov
xchg
inc
mov
xchg
scas
xor
fs
xchg
fidivl
cli
daa
dec
lods
mov
leave
push
sub
xchg
lock
push
fwait
cli
dec
push
mov
imul
cmp
or
pop
adc
mov
jne
fmuls
out
or
loopne
in
xchg
cli
cmp
insl
js
mov
lea
mov
lods
inc
or
scas
scas
cmp
and
sub
push
test
cmpb
into
cmc
fidivrl
into
xchg
cltd
js
test
lock
xorb
mov
cmp
nop
inc
mov
push
pop
xchg
pop
cld
pushf
out
dec
and
scas
push
jne
inc
jbe
push
xor
fisubrs
shr
pop
pop
or
and
out
mov
fs
xchg
jg
dec
movsb
add
rolb
lcall
imul
adc
add
out
dec
jne
xchg
dec
das
imul
inc
xor
add
movntps
xchg
mov
das
mov
xchg
cmpsl
mov
hlt
scas
mov
sub
out
fidivl
xor
cmp
ja
inc
shrl
cmp
and
arpl
int3
pop
xor
mov
mov
xor
xlat
adc
xor
aad
imul
loope
in
lea
js,pn
movsl
push
pop
jae
data16
xchg
mov
into
mov
mov
fildll
movsb
add
nop
adc
mov
and
ds
das
sub
cmp
jns
mov
or
test
adc
jbe
pusha
clc
das
cli
loop
fiadds
out
inc
repz
or
inc
mov
lods
mov
cmp
movsb
xor
loopne
dec
movsb
mov
outsl
jp
arpl
movsl
pop
push
pop
push
aad
lahf
mov
or
fdivrp
mov
mov
fiaddl
pop
xlat
push
mov
dec
sub
mov
insl
lods
andl
jne
cmp
inc
test
iret
data16
mov
mov
mov
outsl
lea
pop
dec
push
pop
cli
frstor
sub
shrb
sub
lods
andl
daa
stos
pop
lahf
mov
pop
mov
das
adc
and
int
mov
inc
ss
pop
push
cmpsb
mov
mov
inc
stos
xor
imul
and
cmpsb
jb
mov
in
int
inc
imul
push
sub
stc
jbe
adc
pop
jo
mov
xorl
shll
add
and
iret
dec
movl
xor
xor
push
xor
sbb
int3
pusha
sbb
aas
add
pop
test
std
and
ss
sub
shrb
scas
ss
test
mov
jle
mov
xchg
sarl
mov
mov
stos
mov
add
push
imul
mov
andw
xchg
mov
iret
push
sbb
rolb
cmc
dec
inc
push
insl
xor
push
push
adc
xor
cmc
inc
orl
mov
testl
js
mov
xchg
cmpsl
adc
adc
out
sbb
shr
jmp
aam
fnstcw
cs
pop
ret
add
lcall
or
jno
js
out
pop
mov
jl
dec
aad
das
jecxz
push
mov
adc
inc
jp
lds
in
mov
sub
xor
pop
scas
xlat
inc
pusha
out
cmpl
mov
out
jnp
out
jae
xchg
jno
jg
mov
shlb
lret
cs
or
lock
mov
dec
out
adc
fwait
inc
mov
movsl
jne
and
outsl
and
xchg
mov
sbb
mov
xor
hlt
pop
xlat
jge
sbb
jg
test
jo
mov
add
call
pop
fisttpl
mov
mov
sti
mov
xchg
out
movsb
pushf
xchg
sarl
shll
xor
jb
pushf
mov
fdivs
add
bnd
add
or
jge
lret
test
int3
jne
notl
sbbb
dec
jle
decb
repnz
add
stos
mov
cmp
ss
lods
push
pushf
jmp
push
dec
aaa
add
les
pop
pop
test
fs
sub
pshufw
in
ficomps
jae
scas
xor
fildl
scas
sahf
pop
push
imul
xor
xchg
xchg
pop
cmpsl
cwtl
cli
push
ja
cmp
shl
andb
insb
jns
icebp
mov
xchg
adc
xchg
inc
pop
cmpsb
jne
fcmovnbe
lret
cltd
lods
and
repnz
mov
add
fwait
test
lret
xchg
add
jno
add
insl
dec
lock
in
int3
push
mov
push
fucom
out
mov
repz
pop
pop
std
arpl
xchg
sbb
shl
faddl
xor
shlb
dec
mov
leave
or
add
ret
add
or
xchg
das
mov
mov
lahf
data16
add
inc
fstp
lods
inc
leave
sarb
push
mov
ret
ss
mov
cmp
pop
xor
loope
xchg
dec
jb
subl
stos
cmpl
aas
pop
and
pusha
sbb
cmc
test
mov
aas
scas
loopne
dec
movsl
mov
mov
cltd
into
cmp
ret
mov
cmp
mov
nop
mov
push
fbstp
lods
std
lea
sbb
cs
pop
xchg
mov
sbb
pop
mov
icebp
xchg
mov
push
mov
in
stos
out
leave
pop
test
icebp
les
je
cmp
dec
dec
push
xchg
lret
jecxz
into
fisttpll
shll
pop
incb
pop
hlt
jle
cmp
rcrb
ss
pop
cmp
lret
mov
ffreep
adc
sub
test
sub
mov
fisubrs
adc
stos
ds
xor
in
mov
add
jp
cs
filds
int3
je
stc
adc
fmuls
xor
movsl
test
or
push
int
test
sbb
mov
aam
fcoml
adc
fst
test
mov
call
push
pop
stc
push
fcomps
fsubrp
or
xchg
ja
cs
push
call
mov
arpl
inc
push
add
cmp
xor
push
inc
add
inc
mov
sub
ja
push
sahf
xor
scas
push
stos
ret
xlat
push
lods
pop
pop
gs
xchg
xlat
adc
popa
pop
data16
push
leave
dec
test
dec
out
cli
out
mov
and
and
outsb
mov
popf
shll
xor
xor
adc
pop
cli
adc
pop
std
fdivp
push
lahf
cld
ja
imul
out
jl
stc
pop
cmpsb
xchg
dec
mov
inc
sbbb
int3
sbb
cmpsl
sahf
or
sbb
xchg
sti
xor
lahf
aam
test
push
loope
pushf
push
adc
cltd
bnd
test
push
cmpsb
test
lds
xchg
lock
mov
rcrb
jae
dec
xor
cmp
add
push
and
mov
dec
push
xchg
int3
xchg
or
sbb
xor
inc
movsb
inc
loop
mov
insl
jmp
pop
xchg
sbb
into
xchg
ret
pushf
je
xchg
and
xchg
mov
push
push
data16
dec
bound
mov
jbe
cmp
stos
xchg
jge
ja
add
dec
push
mov
addr16
mov
loopne
fisubs
or
into
je
and
dec
clc
test
or
outsl
out
ret
sbb
out
lcall
mov
sub
push
push
push
loope
hlt
stc
fldl
push
cmc
or
inc
cld
pop
cmp
mov
xchg
movb
cli
cmp
out
leave
sti
mov
sub
or
mov
push
jae
mov
rcll
arpl
cmc
xchg
or
outsl
mov
movsb
or
cmp
pop
fs
shll
fnclex
mov
cli
inc
cmpsl
pop
push
fcmovne
mov
in
sub
scas
push
inc
rcrb
sbb
push
loope
xchg
call
std
rclb
es
sbb
push
lret
mov
stos
cmp
sub
cwtl
fnstcw
daa
repnz
mov
std
dec
leave
cltd
mov
mov
sbb
cmpsl
nop
xchg
mov
pusha
pop
scas
xor
fsubp
test
pop
pop
or
or
add
rcr
rclb
jno
ljmp
mov
dec
in
ljmp
xchg
mov
pop
push
xor
mov
mov
and
pop
aam
mov
icebp
xchg
fidivl
imul
mov
add
scas
sub
adc
or
lds
add
inc
jbe
outsb
das
cs
cmp
dec
inc
aad
cmpl
lret
cs
dec
mov
aam
sub
push
xor
fs
cmp
mov
xor
in
in
cmp
ljmp
lods
xchg
scas
pop
rcrb
sbb
mov
sub
adc
fsts
les
js
mov
shrl
aaa
push
lret
xor
inc
pushf
sahf
loope
imul
ficomps
push
mov
adc
stos
mov
stos
pop
or
hlt
mov
add
aam
sub
push
das
sub
in
xchg
mov
rclb
mov
cltd
popf
mov
cmp
dec
xchg
lods
dec
or
out
std
das
leave
icebp
pop
mov
data16
sub
cld
adc
push
cmp
inc
jge
mov
and
shrb
das
cmpsb
ret
cmp
dec
pusha
xor
movsl
lds
popa
mov
in
arpl
cmpsb
sbb
xor
xchg
sarb
test
rcl
add
clc
jmp
dec
adc
dec
jne
popf
aas
xor
pop
out
mov
mov
push
repnz
jg
mov
leave
clc
jmp
and
push
fwait
pop
std
pushf
bound
in
xor
xor
mov
fwait
cmp
call
or
mov
addr16
cld
bound
movsb
mov
inc
es
xchg
jnp
xor
fisttpl
or
fisubl
leave
fidivrs
add
outsb
iret
adc
xor
iret
and
clc
movsbl
push
xlat
fmull
sub
fcmove
add
loope
cld
in
xchg
mov
lahf
sahf
sub
inc
scas
inc
fs
test
ret
shlb
sbb
cmp
cltd
xlat
data16
popa
pop
push
sbb
sbb
sbb
pop
push
loopne
mov
cli
dec
fstps
mov
repz
stos
icebp
sub
sub
das
nop
push
mov
mov
mov
int3
mov
out
ljmp
xchg
mov
push
fimuls
hlt
push
jb
and
scas
push
sbb
cmp
loope
outsl
adc
xabort
jle
adc
std
sbb
and
stos
les
pop
jp
popf
mov
or
jecxz
dec
sbb
filds
xlat
inc
jb
cmp
xor
xchg
dec
xlat
scas
jne
idivb
push
out
fisubl
call
frstor
pop
lods
out
testl
pop
push
jae
smsw
fs
mov
ret
adc
add
nop
fdivs
mov
lret
imul
insl
push
bound
je
fsubs
dec
pop
pop
xchg
adc
cmp
insl
loope
xor
daa
bound
sub
or
mov
mov
xchg
pushl
push
mov
mov
xchg
out
pop
xchg
dec
ret
sub
adc
add
aas
xchg
mov
pop
fld1
push
push
iret
das
dec
icebp
int
in
mov
call
call
jp
jbe
sbb
push
dec
je
and
mov
jle
sub
jne
outsl
in
sub
scas
mov
in
movsl
xchg
adc
repnz
mov
push
loope
int
xorl
mov
popa
sbb
mov
xor
sub
lods
mov
cs
sarl
add
dec
add
jnp
out
dec
data16
lcall
das
jg
or
pop
popa
aas
xor
xchg
jle
cld
inc
jae
xchg
mov
mov
std
jecxz
fwait
mov
dec
sbb
call
imul
stc
popl
in
adc
sbb
and
cli
xchg
push
rorb
mov
push
jmp
gs
outsl
in
int
insl
sub
aas
lock
jl
fistl
fildll
ror
fsubl
and
mov
xchg
icebp
shll
pop
ja
in
jb
jle
lret
cltd
adcb
jno
addb
adc
push
and
aad
adc
fisubrl
push
jo
jmp
inc
adc
lock
xchg
mov
lret
pop
icebp
pop
fsubrl
fcomp
dec
adc
lods
inc
xchg
popa
lahf
movsb
adc
xchg
ja
movsl
outsl
dec
add
out
cmpl
jp
jns
loopne
lods
scas
dec
ret
sbb
stos
xlat
sbb
mov
pushf
call
hlt
outsb
cwtl
adc
iret
mov
lods
pop
cltd
add
adc
rol
lods
mov
sti
xor
add
dec
push
mov
xchg
push
add
jbe
jmp
adc
js
lahf
xlat
cmp
pop
add
adc
xor
clc
gs
sti
xchg
gs
mov
ss
push
mov
push
xchg
fildl
mov
cmp
sbb
dec
inc
mov
xchg
shrb
and
pop
imul
inc
push
test
adc
xchg
cmp
sbb
mov
popf
pop
shl
clc
scas
insb
sbb
shlb
scas
cmpsl
jae
insl
dec
pop
dec
sub
dec
outsl
add
bound
sbb
jae
jmp
xchg
cli
lock
in
sbb
out
aas
stos
out
lcall
xor
outsl
or
test
mov
xchg
cmp
sub
mov
inc
cmp
cmpsb
jae
add
sub
es
ret
cwtl
int3
pop
cmp
add
fs
out
repz
jl
and
ja
bound
outsl
jbe
sub
out
je
test
lods
inc
nop
mov
insb
push
test
rep
addr16
imul
dec
xor
mov
mov
xchg
ret
fidivs
sbb
mov
jae
pop
adc
xor
adc
out
jmp
imul
sub
push
push
mov
mov
mov
imul
test
mov
sub
notb
mov
negb
lods
fs
cld
rorb
mov
and
cmp
inc
rol
add
pop
xchg
fcoml
lahf
jg
xchg
enter
mov
inc
outsb
jg
xlat
xor
xor
aaa
mov
mov
ja
and
jle
xchg
std
mov
mov
imull
into
inc
or
js
in
lods
daa
mov
xchg
shl
bound
or
jns
add
jb
roll
push
push
or
fldl
mov
test
clc
jo
jle
add
jmp
dec
fldl
add
shrl
adc
sub
sbb
rclb
jb
dec
lahf
decl
push
insl
scas
lahf
xchg
mov
inc
inc
out
test
and
popf
push
loop
scas
push
daa
cwtl
push
addl
nop
adc
jnp
popf
test
adc
lea
jle
jl
adc
xchg
xor
test
fucomip
inc
fsubl
ficoms
push
mov
pop
ret
push
jnp
push
insb
lcall
jl
je
test
movsl
hlt
and
lods
inc
cmpsb
fnstsw
mov
and
dec
test
popa
insl
fnstcw
xchg
icebp
push
ror
or
xchg
fldt
outsb
mov
mov
pop
test
xor
dec
sub
jns
negb
mov
imul
dec
or
pop
cld
pop
out
push
test
adc
dec
popf
iret
js,pt
mul
pop
xchg
loop
jmp
popa
mov
dec
lcall
sub
std
mov
xchg
dec
sbb
dec
aas
cmp
jl
inc
jmp
in
lcall
adc
dec
xchg
cli
bound
stos
xchg
xor
sub
pop
leave
adc
ds
xor
loope
sahf
xchg
test
add
lret
clc
gs
cmp
lods
movsl
xchg
mov
mov
adc
push
in
push
je
imul
xor
and
xor
mov
cs
mov
or
ror
mov
or
dec
pushf
push
out
push
mov
push
movsl
xchg
dec
jae
scas
sbb
add
push
dec
adc
pop
cmpsb
mov
enter
fs
mov
push
xor
int
and
lods
xchg
cs
pop
scas
fiadds
inc
ja
xor
dec
cmp
cs
jl
in
mov
data16
fwait
jno
mov
jmp
mov
sbb
adc
xor
or
mov
cmp
rclb
cmp
leave
out
das
scas
jne
xchg
adc
mov
jg
jbe
mov
bound
loopne
pop
mov
movsb
or
mov
test
divl
and
jbe
adc
cmp
lods
outsl
les
mov
mov
sbb
inc
enter
add
test
xchg
inc
adc
inc
dec
je
sbb
push
pop
dec
insl
adc
repnz
mov
add
dec
shll
sbb
jo
mov
push
cltd
nop
dec
aaa
cmpl
sti
sub
call
dec
adc
jecxz
cwtl
out
add
jns
push
in
pop
outsb
add
jmp
mov
out
mov
std
xchg
fsubr
add
pop
imul
das
stos
dec
push
mov
push
dec
push
cmpsl
xor
pop
ja
sbb
xor
in
pop
xchg
cld
mov
pusha
and
insb
sub
stos
shr
mov
data16
test
xor
mov
cld
movsl
mov
add
outsb
xchg
inc
add
test
ja
ret
pop
adc
push
or
pusha
orl
jg
outsl
pop
mov
sub
pop
jb
pop
sub
sub
push
int3
mov
mov
xlat
jo
stos
sbb
add
cld
scas
mov
fnstenv
cmpsl
push
cmp
into
out
out
cmp
out
jo
movsb
push
scas
xchg
sub
test
lcall
loop
push
fsubrl
repnz
sarl
jg
fimuls
xor
jmp
filds
test
movsl
cmp
js
ljmp
out
mov
shll
xor
imul
sub
sbb
sub
or
adc
dec
pop
test
ljmp
lahf
call
mov
inc
pop
fmulp
insb
cli
cmp
push
dec
test
mov
inc
ja
push
pop
lret
negl
xor
ret
sub
jnp
sbb
dec
jmp
in
jae
pop
bound
mov
mov
push
pop
sti
xchg
lods
push
out
out
adc
jno
sbb
xchg
mov
sub
cli
jne
mov
adc
int
rclb
repnz
hlt
test
inc
cli
icebp
sub
push
leave
sbbl
test
jge
inc
fcos
inc
add
pop
aam
fisubl
js
shrb
jmp
ret
mov
cld
rorl
insb
inc
into
aam
sti
cmp
dec
dec
aad
sbb
add
les
leave
je
mov
shl
dec
sahf
rorb
adc
outsb
dec
movl
inc
in
add
sbb
push
xchg
mov
cmp
lret
cmpsb
lret
decb
xchg
push
inc
in
rcrl
sub
and
test
push
sbb
jecxz
pop
shll
mov
outsb
and
pop
arpl
hlt
mov
sub
into
in
jne
and
pop
in
and
fwait
pusha
fldt
je
stos
ss
out
mov
mov
aas
cmp
dec
movsl
pop
out
pushf
mov
or
mov
in
xchg
mov
add
push
sahf
lret
cmp
jecxz
lret
les
movsl
lods
cld
test
js
mov
pop
add
je
aam
push
mov
popf
cli
pop
sub
les
ja
sub
int
fs
mov
xor
and
insb
in
mov
mov
insb
mov
mov
mov
dec
popf
sub
js
mov
sub
mov
mov
sahf
pop
mov
pop
cltd
mov
inc
push
xchg
jp
fiadds
pop
xchg
out
xor
aam
mov
stos
inc
aaa
outsl
push
bound
jno
jns
inc
and
std
sahf
adc
stos
cmp
loope
mov
mov
ss
lret
std
inc
push
scas
loopne
outsb
pop
xor
into
mov
xchg
and
or
imul
bound
inc
dec
mov
fwait
outsb
jno
cmpsl
and
sbb
sbb
cmp
xchg
or
outsb
cs
daa
xchg
les
mov
scas
loop
mov
fiadds
mov
xchg
or
ljmp
ljmp
ret
pushf
into
lock
lret
mov
je
js
in
adc
sti
ja
popf
and
shl
notb
cmp
cmp
mov
sbb
test
mov
jecxz
inc
outsl
adc
popf
and
shll
les
and
daa
inc
int3
add
jle
xchg
jae
or
push
inc
int
inc
dec
fs
sahf
lds
mov
mov
or
dec
mov
inc
mov
xlat
jg
sub
dec
sub
jg
mov
mov
int
cmp
mov
mov
push
sub
lock
fstl
fnsave
cmpl
ret
cli
mov
in
mov
lcall
or
adc
xor
add
mov
ret
dec
adc
cmp
stc
out
pop
push
jns
loope
ja
push
pop
jp
xchg
push
jo
dec
ss
jno
sbb
std
push
repnz
shlb
add
inc
out
and
sub
xor
mov
pop
les
pop
aas
cs
xchg
aam
sub
test
adc
fisubl
repz
addb
and
cmp
sub
push
ljmp
xchg
inc
dec
sti
out
pop
jle
pop
jno
imul
jecxz
pop
dec
mov
cmp
mov
inc
out
fldt
mov
jno
loope
fisttpll
inc
pop
xlat
add
in
andb
cmp
fld
cmpsl
sbb
call
sub
cli
pop
dec
aas
mov
jb
and
mov
outsl
loop
jae
loop
fisttps
pop
popw
pop
mov
test
sub
stos
push
xor
cmpb
mov
dec
xchg
mov
icebp
xchg
xchg
and
jns
decb
mov
out
in
or
pop
fwait
popf
scas
lret
adc
paddb
in
nop
dec
imul
cmpl
fiaddl
push
pop
repnz
xchg
cmp
hlt
add
pusha
jle
push
xchg
test
cmp
push
es
pop
mov
ss
inc
sbb
ja
ret
jmp
ret
dec
rcll
nop
or
lret
lock
pop
xchg
call
repz
xchg
mov
jns
cmp
xor
push
mov
or
push
push
mov
fdivrl
xchg
push
sbb
and
lret
cwtl
inc
dec
arpl
xor
in
les
push
les
jg
and
mov
lds
fidivrs
ljmp
jnp
lods
jge
pop
inc
dec
int
mov
icebp
jecxz
in
pop
int
or
cmp
xor
or
cltd
xor
or
mov
mov
push
dec
mov
adc
lods
insb
sbb
out
jle
or
sub
daa
cmp
clc
add
mov
xorl
icebp
std
call
mov
aas
jnp
adc
or
mov
dec
test
or
adc
or
sub
gs
hlt
cmp
cli
add
pop
mov
nop
mov
and
xchg
sbb
cld
inc
sbb
iret
stc
les
movsl
and
pop
mov
add
mov
repnz
fcmovb
jne
ret
mov
sahf
adc
imul
pop
mov
outsb
ljmp
cmp
mov
in
jne
je
repz
jl
outsb
push
push
mov
pop
adc
js
mov
loope
xchg
test
mov
push
mov
adc
xor
test
jecxz
clc
push
dec
aaa
fdivrp
cmp
xlat
sub
and
and
xor
inc
cli
xchg
adc
ljmp
int
addr16
das
dec
cmp
adc
xchg
enter
sub
scas
std
push
push
data16
outsb
into
mov
mov
ljmp
jb
pop
mov
loope
test
in
faddl
cld
mov
pop
jnp
dec
xchg
repnz
aad
or
jecxz
push
sub
lods
rorb
xor
je
idivl
ja
xchg
pop
ja
mulb
inc
loope
mov
add
enter
inc
fstpl
add
test
add
sub
pop
scas
or
out
in
nop
adc
sbb
sbb
push
fiaddl
cli
sbb
adc
jne
mov
rep
cwtl
ror
jne
pop
cltd
les
push
test
jecxz
sbb
push
shll
push
insl
add
int
dec
mov
push
js
int
push
inc
outsb
push
cmpsl
mov
stos
sub
pop
or
ljmp
xchg
sbb
cmpsl
ret
jecxz
jns
mov
inc
mov
xlat
into
stos
imul
push
mov
xor
sub
aam
in
and
and
cmpsl
xchg
ss
cmp
xchg
jne
out
jmp
lea
incb
jo
dec
cmp
cmp
pop
mov
push
dec
int
mov
mov
jo
fcompl
fsubl
fistl
and
and
dec
cmp
xchg
cld
ret
pop
push
mov
jns
xlat
pop
lea
jle
jns
pop
xchg
ficoml
stos
mov
and
xor
cmp
add
ljmp
leave
adc
push
and
enter
sub
daa
and
insl
mov
data16
mov
mov
mov
jg
inc
dec
aam
icebp
mov
xchg
cltd
mov
loopne
cmp
aad
lods
mov
aas
push
add
popa
loop
jo
mov
push
gs
test
jmp
daa
pop
mov
das
rolb
dec
in
outsb
movsl
cli
lods
fcomi
jp
iret
lahf
cmc
push
sbb
sbb
cmp
jge
mov
xchg
mov
cld
repnz
pop
push
ss
cmp
or
imul
cmp
testl
mulb
or
addr16
es
arpl
adc
out
shlb
pusha
loopne
filds
or
pop
scas
inc
add
sub
aas
mov
mov
cmpsb
shl
xchg
mov
rorl
in
mov
aam
dec
inc
sbb
aas
mov
flds
mov
push
out
jbe
cmp
add
and
mov
pop
dec
jl
xchg
inc
push
jae
ret
shrl
and
shlb
loopne
push
jmp
pop
lret
cmp
pop
loope
aad
pop
and
enter
or
sub
std
pop
movsl
sar
jbe
aam
imul
insl
fidivs
or
hlt
fistpl
or
loop
add
lea
popf
in
mov
fwait
push
xor
lret
movsl
aaa
sti
pop
jp
jo
jo
hlt
push
adc
dec
lods
push
mov
push
mov
sub
jp
fiaddl
dec
add
imul
aad
cmp
cmpsb
jae
popf
mov
push
imul
pop
popf
xor
rolb
lret
dec
hlt
mov
mov
clc
jno
mov
popf
jmp
cltd
mov
xchg
xchg
cmp
lds
adc
push
cmp
das
jp
aaa
jecxz
bound
inc
inc
aas
lahf
mov
jae
outsl
jne
leave
aam
aas
mov
add
xor
hlt
add
dec
std
stos
xchg
or
mov
xchg
fisttps
add
sub
cmp
adc
cmp
adc
arpl
or
data16
in
pop
sub
xchg
subl
jne
in
xchg
imull
adc
shl
data16
rcll
jae
fsubr
and
lds
hlt
cmp
faddl
sbb
mov
repz
pop
fsts
adc
jb
jmp
test
sub
mov
fs
xchg
mov
push
jae
pop
mov
adcl
test
cmc
inc
cs
insl
ss
xchg
movsl
sub
mov
mov
loop
xchg
pop
gs
test
dec
les
sub
adc
push
mov
lods
dec
pop
mov
xchg
or
out
mov
mov
rcll
xor
or
dec
or
cmp
mov
sub
dec
repz
cmp
ss
rcrb
push
xor
and
adc
scas
mov
repz
dec
xchg
fwait
lahf
or
test
sub
mulb
sub
pop
mov
enter
push
xor
shl
cmp
lods
inc
push
pop
bnd
in
adcb
sub
jnp
xor
xchg
in
sub
sbb
jmp
mov
imul
cli
inc
and
push
jecxz
adc
in
das
sub
cltd
dec
clc
scas
nop
jg
pop
push
in
dec
shll
mov
sbb
pop
prefetch
dec
aam
or
jo
jo
aad
loopne
test
xlat
and
test
stos
fstpt
fisttpll
fwait
test
sbb
pop
jne
repz
inc
dec
add
dec
xchg
sbb
aas
add
dec
xchg
xchg
cmp
mov
push
sub
fs
popa
sahf
adc
lcall
push
mov
jecxz
sbb
xorb
xchg
loop
inc
mov
or
jl
xchg
iret
pop
xchg
std
adcb
mov
cwtl
inc
or
ss
enter
popl
movb
or
lret
push
jge
and
push
cmp
shr
addr16
aad
gs
insb
push
push
stos
sbb
xchg
mov
bound
pop
insb
icebp
test
scas
xchg
lahf
mov
hlt
push
sti
iret
std
cmp
inc
push
jns
pop
andb
aaa
xlat
mov
sbb
xor
fs
rcrl
cmpsb
inc
loope
std
sbb
dec
or
cli
outsb
test
mov
in
cli
sar
jg
add
xor
testl
jo
addb
pushf
idivb
mov
jae
push
pop
sbb
aam
cld
sbb
sbb
xor
xlat
xlat
or
mov
cltd
add
leave
push
sub
add
push
fisubrl
sbb
jo
add
rclb
dec
imul
or
mov
jo
mov
inc
mov
sbb
in
insb
jne
imul
test
cmc
testb
dec
push
je
jnp
push
lret
fsubr
push
mov
iret
push
mov
pop
mov
push
cltd
ja
loop
into
inc
lret
jne
rcrb
outsl
lods
mov
push
cmc
push
dec
ds
or
je
pop
inc
dec
adc
aaa
stc
shl
sahf
mov
push
mov
dec
test
add
out
in
cltd
adc
aas
pusha
cmp
dec
cmpl
and
push
lret
fs
jbe
sbb
outsb
shll
cmpsl
jg
push
jae
rcrb
mov
cmc
icebp
dec
out
pushf
jbe
roll
lock
adc
and
mov
pop
push
cli
subb
pop
adc
clc
xor
mulb
xor
sub
sub
push
and
mov
inc
dec
cli
loop
pop
adc
mov
and
sti
cli
and
insb
pop
aaa
xor
mov
add
scas
jg
mov
in
sbb
xchg
cmp
fistl
loope
push
stc
mov
leave
push
sub
addr16
xchg
das
test
push
adc
xor
shlb
push
fidivs
push
cmp
dec
ss
lock
and
lock
pop
cmp
pop
xor
das
ja
mov
mov
mov
fsubrs
mov
xchg
insb
loop
cmp
out
ja
adc
sub
mov
mov
pop
pop
nop
mov
insl
jbe
std
arpl
mov
push
mov
popf
push
and
push
iret
mov
sbb
push
or
daa
and
enter
xchg
jbe
movsl
shr
pop
jge
xor
sarl
scas
sbb
imul
gs
cmpsl
in
test
add
nop
cmp
insl
push
push
inc
pop
mov
pusha
fisubl
inc
ret
cs
push
pop
jno
mov
mov
mov
stos
aad
push
cs
jle
fcomps
int
sbb
dec
ret
cmpsl
outsl
and
sub
xchg
jb
test
arpl
scas
mov
daa
pop
jns
or
push
jbe
arpl
popa
pop
cmp
ror
mov
jbe
xor
push
cwtl
add
or
or
jmp
mov
fnstenv
dec
and
les
scas
clc
repnz
jns
push
push
xor
jge
out
ret
lret
push
jns
xchg
jl
push
js
adc
fstpt
fwait
fwait
jnp
pusha
sbb
test
sbb
mov
mov
loop
push
pop
loopne
dec
ds
fmuls
clc
fs
push
int
fsubr
mov
pop
imul
inc
mov
test
xlat
xchg
adc
mov
cmp
xlat
lret
lcall
push
repz
aam
imul
adc
int
andb
testl
xchg
xchg
test
mov
lods
mov
mov
inc
lock
xorl
or
xor
xchg
inc
push
mov
mov
popa
push
mov
mov
add
push
mov
adc
sbb
lods
inc
call
fistl
mov
jl
arpl
in
inc
jno
and
aad
adc
jb
mov
jnp
nop
movsl
jg
testb
sub
test
test
xor
leave
inc
pushf
js
push
mov
and
mov
jge
or
sbb
pop
jns
loope
stc
clc
rcrb
cmpsl
cmc
mov
or
or
bound
std
loop
jecxz
cmp
xorl
xorl
test
pop
mov
aam
push
dec
xchg
movsl
xor
adc
inc
jbe
push
fiaddl
cli
xor
jno
adc
sub
lods
cmpsb
mov
lods
scas
ret
push
aaa
pop
mov
fs
mov
sub
enter
push
cmp
fwait
jns
popf
cld
fidivl
lret
jo
popa
inc
cwtl
sub
fisubrl
and
insl
int
ljmp
and
cmp
dec
andl
pop
fwait
xchg
mov
add
ds
adc
or
clc
jl
gs
mov
xchg
xor
repnz
stos
add
les
shll
lret
les
int3
pop
pop
lcall
ljmp
xor
ljmp
lods
push
push
mov
adc
inc
add
test
test
daa
or
mov
push
pushf
dec
mov
fld
out
pop
stc
lret
incb
cmpsl
pop
pusha
jecxz
xor
push
ss
jle
jae
xchg
sub
enter
jg
out
ljmp
outsb
repz
xor
add
fdivrs
add
addb
leave
setns
nop
loop
leave
mov
xor
mov
xchg
ficoms
cmp
stos
cltd
fwait
aad
daa
and
inc
jno
loope
mov
push
sbbl
push
das
aam
mov
push
das
sbb
mov
and
inc
outsl
mov
mov
push
rcrb
mov
fcompl
shl
pusha
cmp
inc
xor
sub
dec
inc
test
std
jns
jmp
pop
in
mov
mov
or
mov
pop
cld
sub
rcl
cmc
cmpsl
icebp
cltd
adc
pusha
outsb
pusha
cltd
popa
add
mov
xchg
shr
or
and
loopne
jne
cmp
add
cs
pushf
repnz
rol
mov
mov
lock
fmul
add
push
test
data16
fs
mov
repnz
or
jo
cmp
fisubrl
into
arpl
bound
pop
lods
aad
cwtl
jbe
mov
fcompl
nop
inc
movsl
and
je
shll
sub
xchg
jno
push
movsb
movsl
push
movsb
dec
push
fdivrl
pop
in
push
lcall
es
lods
pop
in
sub
test
rclb
cmp
repnz
dec
jno
xchg
movsl
jnp
push
in
mov
jne
jne
xor
xor
push
int
lea
mov
lds
fst
or
out
xor
or
cmp
xchg
mov
or
rsm
jl
mov
lret
cmp
ficoms
push
fs
pusha
xchg
in
inc
ja
sbb
or
pop
lahf
ret
xor
mov
inc
dec
mov
lds
mov
push
fnstenv
sbb
or
push
aad
ljmp
push
sbbb
pop
stos
mov
divl
je
push
in
out
cmp
add
out
mov
dec
xchg
test
inc
dec
inc
xor
test
stos
les
fwait
movsb
loope
mov
popa
stos
add
adc
inc
or
outsb
adc
loope
push
fmull
or
bswap
lods
fadds
mov
mov
fcomp
enter
fcomps
and
loop
sbb
enter
pop
aaa
jl
repz
std
jmp
lods
lock
das
dec
cmp
sub
test
es
jae
jl
iret
movsb
sar
mov
lret
lcall
sbb
sub
mov
idivl
pop
sbb
mov
adc
lea
jge
cli
push
cmp
xor
clc
or
cld
movsb
in
ss
mov
fidivl
mov
cmpsb
lods
push
mov
aam
inc
dec
rcll
pop
shll
xor
pop
stos
cld
rcll
pusha
lahf
scas
lahf
jmp
scas
jg
push
mov
insb
and
lahf
jle
xor
imul
shll
into
inc
or
dec
mov
xchg
xlat
movsb
mov
push
rcll
cmp
testb
inc
mulb
mov
xchg
dec
insb
ds
sub
repnz
ret
loopne
jl
nop
repz
lcall
xchg
adc
xchg
pop
repz
mov
je
lret
in
mov
rol
adc
pushf
adc
add
jno
push
sete
cmc
loop
mov
pop
enter
add
lods
std
popf
xchg
push
in
rorw
fsubr
outsb
int
mov
jno
pop
sahf
call
pop
xchg
xor
pusha
outsl
and
fisttpl
pop
js
dec
mov
std
lret
mov
fsubl
mov
add
jmp
outsl
and
jae
orb
in
jb
ja
sbb
iret
sarl
jge
mov
sti
sbb
inc
mov
lods
int3
mov
popl
leave
loope
pop
xor
icebp
icebp
bnd
lcall
mov
add
sbb
sbb
fsubrl
cwtl
mov
pop
cmp
mov
and
pop
rcr
xor
rorl
add
bnd
in
cwtl
out
loopne
xchg
pop
dec
mov
sbb
out
lea
inc
aad
into
add
inc
dec
rorl
jbe
js
mov
xchg
jg
sub
stos
in
pop
cltd
in
enter
enter
nop
test
dec
and
pop
or
fisubrs
adc
inc
sbbb
sbbb
cmp
sbb
fcomps
jbe
test
fidivrs
leave
lahf
mov
sbb
lahf
dec
dec
dec
enter
inc
and
lahf
stc
xchg
loop,pn
ds
dec
scas
jge
dec
imul
in
daa
sub
jae
imul
fsubr
js
daa
xchg
lahf
gs
movsl
lock
lahf
mov
repz
cli
fsubp
rcll
cwtl
pop
fcomip
nop
add
mov
lea
loop
sub
push
idivl
shlb
push
ret
pop
xlat
push
fistl
mov
dec
in
sub
push
repnz
dec
push
fisttpll
sbb
cltd
cbtw
mov
add
lcall
clc
outsb
jmp
je
mov
movsb
fiaddl
fnstsw
xor
push
fwait
loopne
shll
daa
push
adc
sbb
cwtl
xchg
and
inc
cmpb
dec
sub
stos
ljmp
adc
xor
repnz
sbb
mov
divl
and
cwtl
adc
stos
stc
movsl
adc
cltd
testb
fdivrl
mov
call
dec
xchg
jne
add
mov
stos
test
out
jecxz
std
cmpsl
xor
pop
adc
imul
inc
adc
adc
pop
xorb
sbb
mov
push
jle
pop
insb
inc
xchg
sbbl
and
arpl
cmp
xor
xchg
and
pop
push
mov
mov
lea
cwtl
stos
les
jmp
mov
out
sarb
mov
pop
into
xchg
push
mov
xor
mov
add
loop
int
sarl
dec
and
xor
lret
xchg
jae
lods
into
jno
in
clc
movsb
sub
loop
gs
pushf
jae
sahf
cmp
adc
fisttpll
jp
fsubs
adc
dec
push
hlt
xchg
pop
outsb
sub
out
mov
inc
cmp
outsl
inc
mov
cmc
push
out
xorl
lods
cmp
lea
es
xchg
add
sbb
arpl
or
in
inc
cs
sbb
cwtl
int
leave
add
movb
jno
pusha
stos
mov
inc
add
jmp
lock
sbb
insl
lock
mov
dec
repnz
shrb
cmp
enter
scas
inc
pop
push
sbb
jmp
sbb
sbb
mov
push
popa
mov
xchg
pop
je
sbb
mov
shll
ljmp
sbb
push
xor
test
fwait
cmp
mov
sbb
in
rorb
movsl
sub
loop
ljmp
lea
jg
lods
out
sbb
popa
push
mov
jle
pushf
cltd
xchg
xorl
or
mov
into
mov
xchg
mov
push
mov
fsubp
add
pop
jg
shrb
iret
mov
out
push
js
subb
stos
dec
test
lods
cli
int3
xor
pop
iret
sbb
test
call
xchg
pushf
movsl
lock
cmp
ds
fnstcw
jbe
ds
mov
sub
adc
xchg
adc
mov
inc
movsl
mov
pop
lds
jp
or
lods
dec
pop
jo
gs
push
sub
test
int
mov
and
and
add
pop
xchg
iret
cli
cwtl
rorl
movsb
fimuls
out
mov
ss
jmp
mov
ja
mov
jnp
xor
xchg
fwait
mov
pusha
lcall
jle
push
inc
mov
cmp
or
fwait
imul
or
mov
or
mov
cmc
pop
sub
imul
xchg
gs
pop
shrb
and
mov
sub
and
jae
pop
mov
lods
mov
push
cli
inc
js
mov
push
cmc
push
out
in
hlt
jae
lock
icebp
shlb
fistpl
cwtl
mov
jle
adc
cwtl
adc
jns
movsl
pop
mov
mov
lods
mov
or
xor
in
es
mov
mov
test
fcomi
pop
mov
xchg
test
jle
jnp
ficompl
mov
andl
pop
mov
inc
fistps
aam
sbb
pop
inc
jbe
out
sbb
mov
dec
push
jg
or
cmpl
xor
dec
jmp
mov
dec
sbb
push
mov
les
shl
push
scas
jae
cmp
aaa
mov
sub
in
xor
imul
pop
xchg
sub
xor
add
rcl
leave
loope
repnz
add
cwtl
movsl
loopne
adc
push
out
pop
inc
push
insl
stos
sbb
mov
cmp
mov
ljmp
cmp
or
jmp
addr16
sbb
cli
push
mov
out
sbbl
xchg
adc
into
stc
lods
cs
mov
data16
jns
insl
lcall
mov
jb
mov
add
mov
and
pop
scas
ret
or
aas
fldz
xchg
mov
mov
pop
adc
xchg
nop
adc
xchg
xchg
fwait
push
cmpb
cmp
mov
lcall
repnz
or
test
cmp
mov
push
or
mov
roll
add
ret
leave
adc
xor
movl
xchg
cmp
lds
outsb
add
sbb
pop
stc
cmpsb
gs
stos
inc
jo
jnp
test
mov
das
xor
fmuls
sarb
pop
xchg
xchg
decb
out
add
sbb
out
push
daa
arpl
clc
mov
jo
sbb
iret
and
xchg
dec
insb
and
mov
fs
inc
jle
jle
cmpsl
add
daa
movsb
pop
repnz
mov
rorb
mov
leave
inc
sbb
popa
inc
fisubrl
test
sub
add
loopne
or
inc
popf
add
dec
hlt
inc
mov
sbb
inc
xor
stos
cmpsb
jnp
mov
mov
imul
lcall
sti
notl
sub
mov
lcall
push
sbb
push
or
jae
std
daa
jg
dec
fadds
lcall
out
push
outsl
dec
or
aam
fcmove
fnstcw
ret
out
cmp
mov
jmp
nop
outsb
fiaddl
std
cmp
pop
scas
outsb
fs
sub
cmp
arpl
sbb
mov
jge
das
xor
inc
jl
int
adc
mov
rolb
fwait
xor
sbb
lock
pop
dec
arpl
dec
mov
jg
xor
lods
ret
sti
je
jb
jmp
imul
test
push
jb
jo
bound
testl
mov
icebp
mov
js
test
in
and
xor
mov
leave
sub
movsl
pop
pop
in
sahf
xchg
lea
je
jo
xchg
addb
mov
lds
hlt
fsubrl
inc
or
adc
lea
fadd
add
push
jecxz
js
aas
in
sbb
mov
dec
mov
lods
xchg
test
test
arpl
sub
aad
sub
push
fdivp
push
out
dec
cmpsb
sub
ja
std
inc
lret
icebp
jno
enter
cmp
sbb
mov
push
mov
arpl
sub
sub
mov
sarb
mov
mov
aad
sub
imul
call
adc
lret
scas
rorb
add
stos
decl
cmp
push
fcomi
cmp
test
clc
aam
mov
jbe
aas
mov
je
cmpsl
aam
aas
shrl
lds
pop
dec
andl
or
xchg
es
test
mov
adc
jecxz
cmp
adc
jmp
mov
add
jb
xchg
mov
out
mov
fwait
scas
mov
ja
movsb
out
xchg
in
fxch
push
movsb
jge
shll
arpl
lods
roll
push
push
ja
pop
dec
sahf
pop
pop
enter
insb
stos
or
inc
adcb
fistl
adc
ljmp
dec
out
cmpsl
dec
mov
inc
subl
push
push
pop
dec
in
mov
adc
call
mov
xchg
loopne
leave
push
xor
imul
jmp
cmpsb
movsl
std
cmp
adcl
jg
fwait
push
pusha
loop
out
inc
std
mov
mov
pop
mov
sub
cmp
push
inc
lock
cmp
popa
jae
dec
jl
sub
sbb
xchg
nop
push
inc
mov
das
lahf
cwtl
inc
mov
xchg
les
jns
sub
jge
pop
sub
or
int
or
xor
xchg
xor
and
test
push
pop
cli
dec
into
pop
or
inc
stc
push
cltd
mov
sub
lds
jle
add
sahf
imul
jnp
shll
mov
mov
pop
roll
flds
imul
shrl
enter
pop
xlat
lahf
movsb
jmp
popa
test
jmp
sub
adc
rcrb
aaa
outsb
mov
sti
aas
mov
dec
jne
pop
fistpl
mov
loop
push
cltd
aas
shl
stc
int
hlt
pop
mov
add
inc
and
or
addr16
ss
xchg
jo
test
rolb
clc
xchg
mov
jge
sub
stos
or
mov
call
scas
pop
mov
jp
data16
clc
jle
cmp
dec
or
imul
xchg
or
xorb
cmpsl
cwtl
jmp
pop
arpl
inc
mov
movsb
cmp
leave
xchg
stos
lds
cmpl
sub
cwtl
push
and
idivl
ret
mov
xor
test
sub
xor
orb
push
cmp
insl
lret
cmp
cld
sar
mov
jle
aaa
cmp
movsb
lret
push
hlt
sub
dec
cmp
test
in
dec
movsb
inc
sbb
call
shll
mov
loopne
sahf
jae
mov
sbbl
inc
jb
and
push
inc
mov
lret
mov
loop
jne
test
xchg
stc
out
cmpl
cmpl
stos
pop
iret
add
int3
push
es
inc
loop
nop
pop
repz
fsts
gs
mov
cmp
lret
cmp
mov
call
adc
dec
jmp
cltd
sub
call
movsl
testb
jns
outsb
pop
adc
aam
in
and
xor
mov
jmp
xchg
jbe
scas
divw
popa
pushf
inc
pop
sbb
in
stos
addl
dec
dec
scas
pop
pop
aas
mov
mov
dec
or
cmp
jg
sub
xor
adc
jnp
adc
jl
cltd
mov
aad
inc
ja
ss
xchg
sub
aam
sbb
sub
push
or
mov
rolb
push
pop
cmp
jnp
inc
lds
mov
xor
xchg
shlb
dec
push
pop
ss
sbb
xor
dec
lods
out
inc
jl
push
mov
push
pop
inc
and
cmpl
push
adc
sbb
cmpsb
lret
insl
inc
dec
aaa
je
xchg
loope
xor
stos
call
xor
out
mov
mov
cmp
stos
inc
push
xchg
jmp
and
cmp
ljmp
push
test
rorb
cs
dec
or
adc
add
fbstp
xlat
stos
rcrl
and
cli
aas
lret
xor
add
lahf
scas
xchg
push
adc
shlb
ds
cmpsb
xchg
in
ss
jae
add
in
outsb
fbstp
jle
add
clc
movl
fs
jge
inc
gs
inc
sbb
out
sahf
mov
xchg
cmp
aam
add
xchg
mov
or
lret
mov
lds
in
inc
jge
cmpsb
sub
and
xor
xor
sub
fwait
sarb
pop
and
dec
jmp
mov
clc
and
mov
mov
and
punpckldq
mov
jae
adc
inc
push
pop
add
xor
jge
pop
pop
call
jp
cmp
xor
xchg
lcall
pop
jns
fidivrl
xlat
pop
jb
cwtl
stos
xor
leave
xor
sbb
push
jns
jae
pop
pop
aas
dec
lret
pop
jmp
jg
adc
mov
insb
out
fiadds
gs
sbb
fdivs
pop
pop
push
mov
inc
sub
test
in
bound
imull
mov
xchg
mov
dec
lret
popf
inc
push
add
mov
sbb
int
xchg
sbb
stos
or
insl
sbb
out
test
sahf
and
mov
push
sbb
push
aad
add
mov
in
fists
xchg
add
fistps
mov
dec
in
ds
add
mov
fs
pop
mov
popf
mov
adc
ret
bound
jbe
xor
add
fldenv
loop
movsl
or
in
xor
aas
dec
jecxz
imulb
lds
sbb
lds
and
push
inc
negl
insb
xchg
mov
ds
sub
data16
loop
xor
cmp
push
mov
xchg
int3
loopne
dec
es
sbb
mov
mov
or
mov
bound
cld
dec
mov
xchg
push
jae
or
or
das
fs
mov
push
arpl
in
out
sbbl
xor
jae
mov
out
out
movsb
aaa
jb
add
movsl
test
add
out
subl
adc
scas
lret
iret
mov
sbb
xchg
sarl
mov
jl
sbb
rol
pop
dec
and
test
inc
call
and
xchg
dec
add
jns
test
pop
mov
xor
cmp
inc
jge
mov
mov
in
int3
xchg
mov
add
pushf
or
push
cmp
dec
push
mov
dec
push
outsb
fsubr
lcall
cld
dec
insl
jp
call
in
shll
adc
ljmp
mov
fcoml
add
int
dec
nop
xor
mov
out
xchg
ljmp
pop
scas
std
cmp
imul
test
repz
sbb
sbb
stos
dec
mov
mov
push
fsubrl
push
test
pop
decl
shl
mov
jge
addr16
mov
sbb
call
mov
adc
aam
outsl
mov
xor
sbb
cmpsb
sub
stc
pop
and
or
stos
mull
mov
movsb
cmc
popf
fisubl
into
fstl
inc
rorb
in
mov
cmp
fcomi
push
mov
xlat
imul
adc
hlt
jnp
sbb
cmp
jb
sub
out
cmpsb
cli
rcll
shll
adc
pop
call
cmp
in
mov
xlat
je
int3
fildll
mov
pop
out
pop
arpl
hlt
sbb
repnz
sbb
repz
mov
in
push
out
mov
lock
addr16
lahf
sbb
sahf
push
add
push
das
enter
fiaddl
sub
inc
xchg
lds
lret
dec
jge
push
rorl
imul
out
es
mov
mov
dec
sbb
subl
sahf
test
dec
sbb
push
hlt
clc
or
inc
stos
les
or
scas
cli
in
pop
or
stos
pushf
in
or
dec
in
gs
stos
mov
mov
arpl
loopne
es
dec
mov
pop
sub
pop
add
sub
dec
rorl
scas
fisttpll
popf
dec
bound
in
ljmp
pause
mov
lahf
mov
cmp
sbb
sub
mov
and
lea
rcr
stc
or
aad
xchg
inc
stc
mov
loopne
mov
adc
mov
dec
adcb
jo
test
jl
jmp
stos
sbb
inc
insl
xor
shlb
in
jecxz
loope
aaa
lret
sti
pop
sub
push
sub
test
add
pushw
out
inc
sbb
jnp
pop
jge
jl
das
or
adc
mov
inc
sbb
jns
and
pop
push
pop
mov
push
shrb
xor
add
xchg
push
mov
fsubrs
lahf
lret
push
lock
inc
dec
dec
lods
mov
jle
out
or
xor
jbe
mov
push
or
dec
scas
aam
mov
gs
std
jno
mov
xchg
sbb
fisubrl
fistl
mov
cwtl
rcr
jno
outsl
das
test
cmp
stc
cmpb
xlat
xchg
and
add
jne
push
and
lea
mov
sti
inc
fisttps
dec
data16
add
icebp
loopne
xlat
int
andl
push
jecxz
outsb
fsubl
cli
push
add
cmpsb
sbb
out
or
call
pop
filds
or
and
sub
int
sar
xchg
add
les
lret
not
pop
or
inc
js
fs
data16
cmp
mov
sbb
sub
or
adc
loopne
cltd
adc
cmpsl
stos
or
add
dec
int3
pop
lods
jno
das
add
xchg
movsb
dec
pusha
enter
popa
movsl
jae
inc
xchg
sahf
imul
lods
and
cltd
out
popa
imul
inc
fwait
inc
and
cmpsl
out
jp
push
mov
sub
lock
mov
mov
push
cmp
popf
push
push
outsb
push
sub
mov
mov
lcall
ret
xchg
jae
mov
sub
rolb
sahf
mov
mov
cmpsb
cli
cld
int
jno
fidivl
sub
pop
sub
cmpsb
push
inc
jl
dec
call
shlb
pop
repz
int3
pop
shr
add
mov
add
hlt
lret
arpl
add
iret
push
inc
shl
xchg
adc
and
cwtl
movsb
mov
cmp
push
push
pushf
pop
mov
mov
sub
push
jg,pt
mov
outsl
sbbl
xchg
mov
xchg
jmp
in
jnp
scas
rol
push
dec
jl
inc
cmc
adc
mov
push
shrb
mov
cmp
out
dec
pop
sbb
mov
insb
xchg
jle
fcompl
les
cs
mov
jb
addb
sti
or
sbb
mov
ret
sti
sarb
in
inc
jmp
hlt
aam
loop
clc
les
pop
pop
loop
test
sub
ljmp
out
test
lret
aaa
dec
loopne
push
pop
pop
ja
and
pop
ja
subl
dec
and
std
jge
push
xlat
jbe
adc
test
xlat
sbb
jmp
cmp
nop
enter
outsb
xchg
les
mov
cmp
push
mov
xor
cmpsl
mov
inc
dec
sahf
or
imulb
pop
xchg
lock
iret
pop
loopne
pop
outsl
out
dec
je
rorl
mov
sub
pop
and
je
xlat
push
insb
push
jbe
pop
shrb
dec
push
fcomps
pop
imul
mov
popf
mov
out
mov
hlt
mov
test
rclb
cli
arpl
ss
test
pusha
adc
jecxz
int
call
std
cld
xor
insb
lcall
out
mov
in
mov
xchg
inc
and
jg
xor
rolb
outsb
pop
and
das
into
test
popa
arpl
adc
cmp
inc
jbe
cwtl
movsb
addr16
std
jl
mov
xor
pop
fwait
xchg
xor
icebp
ret
xchg
nop
add
pop
jmp
fildll
inc
inc
ret
xor
mov
fyl2xp1
add
cmp
mov
cwtl
sbb
xorb
ss
dec
mov
lods
ljmp
push
mov
es
gs
fcmovbe
mov
push
adc
cltd
and
ds
outsl
lahf
mov
pop
mov
jge
es
push
out
inc
sbb
pop
jp
pop
dec
call
outsl
add
dec
mov
sub
insb
icebp
lret
cmpsl
cmp
mov
dec
mov
dec
cli
mov
idivb
sub
shlb
rorb
xchg
adc
mov
xor
dec
lods
inc
insb
jmp
scas
or
ljmp
pop
nop
aas
dec
xchg
inc
popa
fstpl
loope
gs
dec
cmp
jb
fwait
cmp
loop
push
mov
mov
jno
xchg
adcb
pop
dec
mov
xchg
add
in
sub
jo
sti
lahf
xor
fs
cmp
int
rolb
jae
dec
dec
stc
daa
inc
add
nop
pop
outsb
pop
out
pusha
pusha
fwait
pop
test
inc
push
dec
popa
adc
xchg
scas
xor
push
in
aas
pop
ret
adc
adc
in
aas
std
ljmp
inc
and
xor
mov
push
mov
add
add
xor
xor
pop
notb
jmp
jno
hlt
aaa
test
shlb
or
sahf
bound
fcmovnb
stc
pop
adc
lods
sub
aaa
jo,pn
filds
mov
add
psraw
cld
int
adc
pop
add
cmp
shll
dec
mov
dec
sub
jge
jo
cltd
cmpsl
hlt
jp
insb
imul
addr16
cli
add
into
xchg
sar
pushl
movsb
adcb
inc
in
in
mov
ljmp
mov
mov
adc
jbe
loope
add
mov
popf
pop
fcmovne
adc
shrl
dec
pop
sub
pop
add
andb
dec
outsl
in
or
jle
les
ljmp
pop
mov
jb
pop
in
mov
mov
fwait
xchg
ret
rcrl
test
cwtl
cs
insl
adc
data16
pop
mov
push
pop
mov
xor
xorl
or
test
fdivrs
mov
out
test
movsl
out
es
fldz
and
loopne
mov
adc
fnsave
xor
dec
mov
sbb
jmp
jg
push
or
push
pusha
sbb
pop
push
pop
jae
in
push
inc
add
mov
imul
mov
out
cmp
pushf
and
pop
mov
mov
and
or
ss
dec
dec
sbb
mov
or
shrl
pop
les
sbb
sub
sub
xchg
jnp
fs
loop
mov
shlb
adc
int
insb
mov
lock
or
ds
ds
std
int
fisttpll
scas
lods
xor
popa
push
xchg
arpl
push
xor
outsl
jge
in
cmp
scas
stos
and
mov
mov
ja
popa
push
pop
stc
sbb
cmc
das
add
pop
sbb
flds
outsl
and
lahf
and
push
push
mov
loope
xchg
pop
push
add
dec
andl
nop
push
aam
jge
fidivl
inc
shr
cmc
sbb
leave
es
add
in
jns
clc
mov
xor
mov
negb
dec
popa
das
daa
scas
mov
or
in
inc
and
or
bound
shll
sahf
cwtl
test
ss
lods
mov
das
lods
das
and
pop
setle
or
jne
push
ljmp
into
ljmp
mov
xchg
mulb
hlt
int
mov
pop
or
call
mov
in
fnstenv
mov
and
lret
xor
push
daa
pop
push
popf
insl
rcrl
sbb
in
dec
movsl
outsl
sub
jmp
aad
lods
add
sub
test
sub
in
push
jp
and
test
xor
test
and
and
jbe
pushf
mov
fmul
std
xor
lcall
xlat
xor
rorl
ss
jb
je
sub
and
popa
lods
aad
inc
jle
int3
int
sub
fidivrl
cli
iret
ficoms
mov
mov
gs
insb
jns
inc
aam
insb
fdiv
jb
jne
nop
dec
js
mov
adc
ror
jg
aam
lds
sbb
mov
popf
fadds
add
dec
enter
enter
aad
mov
push
icebp
into
add
mov
lahf
sub
cmc
mov
mov
in
test
jmp
lea
int3
sub
lret
fcoml
xor
aam
adc
or
es
and
dec
mov
xor
xchg
fistpl
cmp
fs
ret
xor
and
adc
imulb
push
cmp
jmp
lds
repnz
bnd
cltd
lret
test
pop
out
push
cwtl
jns
jns
mov
es
dec
adc
pop
loope
fdivr
jp
lahf
aad
mov
pop
or
aad
testb
pop
mov
pushf
dec
xchg
or
into
scas
mov
ret
dec
ret
push
xlat
jmp
adc
es
mov
pushf
inc
cltd
adc
mov
mov
lea
sub
jg
scas
add
cld
imulb
ret
sbb
add
sub
lods
xor
dec
dec
dec
std
rolb
jno
lahf
fisubrs
dec
aas
inc
inc
ljmp
dec
scas
pop
pusha
scas
in
xor
dec
pusha
push
mov
xchg
lret
les
insb
pop
push
jp
push
movsb
in
into
in
add
and
out
daa
subl
push
cmp
sub
mov
xor
push
xchg
and
and
movsb
addr16
ss
rorb
mov
pop
dec
icebp
and
pop
and
aam
inc
pop
or
hlt
sub
and
cmp
outsb
cli
inc
xlat
push
pop
xor
stos
or
or
mov
jnp
jnp
mov
les
adc
imul
inc
ljmp
push
xor
push
adc
outsl
inc
bswap
mov
push
pusha
lret
cltd
jl
pop
mov
lcall
movsb
lds
or
decl
vcvttsd2si
sub
mov
push
cld
xor
mov
or
mov
pop
in
fwait
xor
cmpb
je
pop
sub
int3
fst
addr16
dec
add
outsb
arpl
and
adc
repnz
pop
mov
and
mov
pop
xor
je
and
scas
cmp
push
xor
fbstp
jge
xor
mov
decb
rclb
sub
cld
jle
call
dec
push
call
jae
cmpsb
mov
ds
lret
and
mov
hlt
mov
push
xchg
and
mov
mov
mov
mov
mov
pop
lret
lcall
pop
dec
cmpsb
jbe
pop
jbe
fstps
fs
mov
jne
loope
mov
push
dec
fsts
xor
xchg
cmp
mov
dec
add
jmp
mov
sub
mov
jl
loop
das
push
or
clc
mov
rcrl
mov
shlb
mov
mov
mov
test
subl
push
mov
sbb
inc
out
je
and
jle
negb
cmp
js
sbb
inc
xchg
in
pop
add
inc
xchg
pop
xor
insb
mov
cmp
add
mulb
xor
insl
sbb
pop
iret
lods
loop
or
mulb
aaa
out
fstpl
daa
sbb
stos
arpl
sub
outsb
xchg
das
adc
cmpsb
mull
stc
push
test
mov
cmp
aam
lds
in
outsb
gs
sbb
add
rolb
pop
jns
cmp
xchg
stos
popa
jbe
std
xchg
daa
pop
dec
jge
repz
dec
jecxz
sahf
shr
push
mov
cmp
fadds
outsb
mov
jb
in
jb
sub
testl
mov
add
jmp
push
mov
pop
nop
insb
sbb
pop
sub
bswap
arpl
mov
fistl
push
test
test
mov
cmp
lcall
push
ss
nop
ja
jge
adc
sbb
and
mov
xor
sbb
push
cmp
lods
add
cltd
pop
sub
dec
mov
pop
sub
mov
lods
adc
xchg
pop
sahf
mov
sbbl
and
xor
cli
loope
fadd
mov
and
or
vpmaxsw
out
inc
sbb
and
mov
stc
out
rcrl
bound
in
mov
fadds
rcll
cmp
mov
push
divb
dec
dec
cltd
sbb
mov
hlt
add
scas
sub
or
inc
push
push
in
repz
jae
test
fidivl
std
cmpl
xchg
test
inc
ret
pop
inc
xchg
mov
sahf
int3
mov
fists
mov
pop
mov
and
enter
ljmp
imul
sub
adc
in
in
movsl
xor
add
and
call
lret
or
test
adc
rcrl
fs
push
js
pop
push
clc
fmull
sub
test
push
ret
push
push
push
adc
loop
dec
out
xorb
insl
xor
movsb
jl
dec
leave
mov
dec
subl
lea
jg
ficoml
push
cmp
cmpsl
sbb
pusha
mov
inc
push
add
lcall
jecxz
sbb
imul
pop
push
cmp
or
sbb
mov
jae
xchg
jnp
push
pop
in
int
pop
jo
jle
pop
xor
sub
mov
cmpsb
andb
adc
adc
cmp
fidivl
pushf
cmp
push
jae
mov
test
sbb
jmp
scas
jg
js
cmp
into
call
inc
loope
pop
inc
cmp
xchg
pop
or
pop
cltd
xchg
push
xchg
mov
or
cmp
cmp
xchg
or
cld
xchg
cmp
cmpsl
xor
ljmp
popf
test
add
decb
fmull
adc
xchg
sahf
sti
sar
sbb
fsubs
push
adc
xchg
xchg
lods
dec
mov
cmp
pop
ljmp
mov
mov
add
mov
adc
sbb
mov
or
insl
dec
xor
mov
pop
loop
mov
pop
lods
shlb
into
int
sbb
loop,pn
insl
adc
push
jb
cltd
jnp
cli
mov
adc
pop
addr16
aad
mov
lods
loop
push
xchg
and
fldcw
repnz
sbb
sub
aas
jns
in
loopne
lret
mov
repz
int
dec
data16
rcrb
xchg
xlat
or
fimuls
cmp
roll
adc
push
cwtl
cli
mov
cmpsb
sbb
push
sbb
sub
outsl
mov
es
jnp
and
imul
mul
or
mov
hlt
sbbl
pushf
and
mov
les
xorb
stc
mov
mov
jg
xor
inc
push
inc
pop
cmpsb
xor
xchg
test
jl
faddl
pop
cmp
fcmovnbe
sahf
mov
iret
adc
or
mov
sub
repz
jbe
xchg
mov
pop
dec
add
mov
pop
dec
push
dec
dec
gs
push
shl
in
call
enter
iret
add
test
xchg
subb
icebp
mov
repnz
stc
fisttpll
dec
js
in
jbe
adc
lds
push
cmc
inc
gs
push
lret
jbe
jno
dec
xlat
loop
jns
test
shlb
in
push
mov
xchg
shl
pop
jbe
mov
cmp
out
repz
clc
insl
fbstp
ficompl
ror
lcall
ficomps
mov
mov
lcall
leave
xor
jmp
jp
int3
fisttpll
mov
and
lcall
add
xor
add
cmp
inc
je
pusha
imul
in
add
lock
movsl
sar
xor
idivl
loopew
clc
movsl
mov
pop
xor
mov
and
into
dec
dec
imul
ds
sahf
jb
xchg
lods
outsl
cltd
xor
inc
hlt
dec
xor
lret
xchg
aam
xor
add
xor
mov
icebp
jmp
frstor
icebp
rcll
cmc
mov
inc
fistps
loopne
lcall
xchg
xchg
js
mulb
ret
popf
mov
cld
mov
insb
subl
mov
es
inc
aam
aam
fnstenv
repnz
mov
mov
outsb
es
sbb
ret
pop
incb
iret
jmp
xchg
xor
insb
inc
lds
mov
xchg
out
dec
in
jbe
mov
jb,pn
rcrl
shll
sub
jae
dec
cmc
sbb
sbb
insl
inc
test
fnstsw
rorb
out
lret
sub
cmp
icebp
icebp
dec
sub
scas
cmpsl
out
dec
and
inc
adc
pop
fbstp
lods
pop
fisttps
andb
inc
cmp
push
and
imul
push
xor
mov
pop
std
xor
pushf
mov
or
gs
iret
arpl
jo
pop
dec
movsb
sarb
aas
std
test
xchg
cltd
int3
fistpll
push
mov
pop
pusha
fwait
mul
sub
add
rol
inc
scas
adc
fisttpll
fsqrt
add
dec
jp
sub
seta
sbb
outsb
add
rcrl
adc
test
pop
mov
ret
or
popf
mov
popf
and
jno
data16
int3
push
dec
sbb
iret
fidivs
and
pop
repnz
orl
add
add
lret
mov
fwait
movb
xchg
pop
loope
xchg
xchg
nop
cld
mov
jp
sahf
pop
cmp
aam
sahf
test
dec
ljmp
pop
or
dec
imul
cs
test
inc
cld
jno
mov
cli
ret
lahf
out
sbb
int3
inc
out
pop
ror
in
mov
jecxz
xchg
ffreep
adc
nop
mov
push
in
incl
scas
pop
cmp
dec
push
fcomi
dec
xchg
dec
imul
rcr
scas
dec
hlt
aam
lret
fiaddl
das
jg
fmuls
cwtl
add
mov
hlt
xor
inc
mov
mov
or
cmp
inc
sub
xlat
enter
test
std
cmp
hlt
leave
inc
and
sbb
ja
in
mov
movsb
mulb
push
dec
jbe
sub
fstl
mov
xor
adc
cmp
push
cmp
lret
inc
gs
sbb
dec
loopne
inc
mov
and
lret
add
imul
cmp
jg
and
mov
lahf
bound
xchg
shlb
imul
movsb
out
push
fldcw
add
lret
out
out
sbb
xchg
mov
ret
outsl
push
xorb
and
xchg
cmp
lcall
push
jl
mov
inc
pop
js
jno
jno
scas
push
jo
sbb
lock
fmuls
push
arpl
call
dec
mov
lock
sbb
jne
push
loope
push
ret
xchg
aas
mov
jl
and
and
addr16
ss
mov
lret
xor
in
adc
stos
xchg
adc
shr
js
jbe
dec
mov
stc
push
and
popa
fiadds
insb
mov
pop
inc
fisttps
pop
fs
jle
hlt
orl
mov
insl
jg
cwtl
xchg
or
cmpsb
and
arpl
xlat
inc
cmpsb
addr16
xor
mov
arpl
int3
mov
inc
xchg
sub
adc
enter
cmp
leave
movsl
test
jo
vmwrite
rdpmc
mov
in
in
ds
stc
mov
cld
fisttpll
das
push
inc
xor
sub
popa
jg
or
std
mov
test
adc
in
popf
mov
add
xchg
jg
adc
pop
dec
adc
add
mov
mov
hlt
sahf
repnz
mov
push
sub
jbe
test
adcb
insb
xor
pop
mov
xchg
mov
imul
loopne
movsb
adc
adc
inc
mov
sub
cmp
test
loope
mov
mov
test
jnp
pusha
sbb
dec
dec
pop
insb
loop
stos
addb
and
mov
mov
popl
jae
gs
push
sbb
notb
adc
sbb
inc
je
into
mov
aad
dec
pop
sbb
into
inc
aam
cmp
add
dec
test
cld
jg
add
xor
divl
daa
je
rorb
sbb
pop
pop
cmp
pop
jnp
jae
movsb
lock
enter
pop
outsl
mov
addr16
mov
loop
jns
fistps
fcoms
aaa
or
mov
lock
inc
scas
iret
xchg
adc
push
jnp
rorb
stos
cmp
rcrb
or
add
or
mov
fnstcw
sti
or
cmp
jns
cmp
test
mov
jno
addl
aas
jb
xchg
pop
inc
xchg
jae
push
das
outsl
cltd
incb
mov
hlt
push
sarb
out
or
jbe
sub
push
and
inc
jae
mov
out
cmpsb
xor
mov
lods
fsubrl
in
sahf
mov
sbb
pop
jg
ret
mov
cmp
pusha
adc
or
dec
adcb
dec
scas
inc
and
pop
jo
dec
push
mov
jmp
shlb
and
repz
daa
movsl
push
call
outsl
nop
dec
rcr
sub
rol
xor
int
js
test
inc
cwtl
xchg
int
shlb
js
sbb
call
leave
cmpb
mov
std
or
fs
xchg
dec
cmp
imul
jg
fists
jp
adc
mov
mov
pop
leave
dec
mul
sub
lea
frstor
aas
in
fwait
leave
pop
andb
push
push
xchg
dec
fdivrl
mov
js
jg
pop
cmp
ret
icebp
jl
lock
cmpsb
divl
jbe
aas
add
push
outsl
fldl2t
add
jmp
loopne
sti
adc
add
jno
repz
in
stos
insl
mov
subl
adc
mov
lret
or
dec
subb
inc
scas
mov
push
test
imul
jno
daa
in
cmc
cmp
out
lods
jp
movsl
lds
ljmp
jb
mov
xchg
push
imul
sub
imul
aam
mov
sbb
aad
xchg
inc
inc
add
stos
add
pop
jo
test
add
inc
pop
push
movsb
sarb
movsb
sbb
sub
inc
rcll
lahf
adcl
jmp
inc
cmpsl
hlt
movsl
and
aas
mov
mov
les
mov
adc
and
lods
subl
mov
loopne
fbld
push
fsubs
fstl
jne
mov
into
mov
shr
loopne
jb
out
inc
or
jbe
xchg
loope
adc
jmp
xchg
push
inc
mov
outsl
or
out
push
xor
cmp
dec
cmpsl
mov
pop
and
lods
mov
addr16
inc
andl
push
adc
fstps
mov
cs
dec
adc
insb
add
pop
imul
in
insb
out
jecxz
mov
jge
mov
fldenv
jl
fcoms
int
adc
add
jmp
add
mov
repnz
xor
cwtl
lret
dec
push
out
lods
mov
inc
and
outsb
aam
add
int
sbbb
mov
push
xor
mov
ja
jbe
inc
mov
mov
int
std
daa
and
xor
je
mov
mov
and
lcall
in
xlat
mov
mov
sub
ret
jmp
sti
pop
data16
ljmp
and
dec
pop
push
daa
sbb
imul
push
test
out
jl
sarb
inc
jne
vpaddd
rcrl
mov
push
lret
push
pop
cli
mov
push
push
jecxz
repz
pop
xor
inc
cmp
adc
mov
mov
push
jno
adc
fwait
das
es
or
mov
jae
xor
sbb
lds
hlt
in
dec
mov
dec
aas
dec
das
or
push
into
pop
lds
sub
hlt
out
mov
jge
dec
aas
popf
mov
pop
arpl
xchg
stc
push
movsb
cs
jbe
loope
push
dec
sub
sbb
out
sub
sub
mov
bndldx
or
fsubs
daa
mov
pop
lahf
xchg
sti
inc
test
jne
aam
add
xchg
lods
pop
add
and
sub
push
mov
and
paddb
inc
or
aaa
imul
scas
adc
div
arpl
lcall
sahf
jle
aam
lahf
insl
enter
popa
xor
mov
lahf
mov
cwtl
adc
jae
inc
js
pop
out
ds
test
ljmp
push
adc
push
mov
test
push
jecxz
les
mov
or
push
repnz
mov
xor
pop
arpl
out
pop
or
mov
insl
es
mov
fstpl
mov
ret
xchg
dec
je
pop
jge
ret
fiaddl
xchg
jmp
xor
fstl
push
push
pop
mov
gs
mov
add
loope
imul
out
arpl
sub
jle
icebp
sbb
xor
mulb
pop
stos
stos
movsb
inc
mov
mov
imul
push
ffreep
inc
xor
sarb
sub
sbb
xor
add
fcmovb
add
cmpb
cltd
and
cmpsb
int3
in
mov
ja
mov
cmp
and
stos
and
push
subl
stc
imul
cwtl
orl
jg
mov
sbb
pusha
fadds
daa
js
sub
xchg
mov
mov
std
inc
lahf
movsl
loop
pop
inc
cmp
ret
mov
mov
aad
xchg
mov
mov
adc
jl
getsec
lock
cltd
jl
clc
xor
mov
adcl
jne
pop
xchg
bound
daa
push
xchg
sub
lods
fidivrs
adc
xchg
mov
mov
and
sbb
xchg
ret
ret
repz
jb
mov
pop
stos
loope
jle
ret
hlt
adc
cli
sub
pop
xchg
stos
hlt
jae
shll
cmp
in
outsb
xchg
pop
xor
xchg
iret
xchg
xchg
pop
lea
jns
fcomp
es
xor
out
xchg
fidivl
or
loopne
fs
sub
and
divl
mov
push
xor
sub
mov
lahf
push
mov
mov
add
lcall
dec
sbb
add
imul
xchg
and
pop
arpl
jle
lods
xor
fnstsw
xor
leave
test
sbb
and
jl
jg
dec
adc
ror
nop
mov
add
arpl
xor
or
mov
cltd
pop
xchg
test
push
cmp
or
cmp
faddl
jge
incb
sub
mov
movsb
mov
jo
and
das
lret
sub
cmp
sub
movsb
pop
xchg
adc
fsubl
movsl
mov
pushl
adc
pusha
in
stos
imul
mov
or
lds
jo
add
repnz
xchg
xor
stc
fsubrl
cltd
mov
sub
and
xchg
adc
inc
dec
adc
xchg
gs
insb
mov
in
stos
push
add
and
js
push
jnp
jae
ret
cmp
dec
les
fbstp
ret
or
adcl
mov
sbb
xor
je
jo
inc
ret
out
dec
and
inc
mov
aam
std
jmp
mov
push
shlb
adc
cmp
add
lret
mov
jecxz
pushf
dec
aad
add
mov
sub
mov
adcb
rol
cltd
jnp
std
and
test
sbb
sbb
addl
inc
popf
leave
xchg
cmp
iret
pop
push
push
inc
lods
inc
mov
mov
rorl
sbb
and
cmp
fcmovb
dec
mov
sub
stos
out
psubsw
rcll
fmuls
lahf
dec
outsb
add
and
ja
mov
mov
insl
pop
inc
aad
mov
addl
jne
mov
aas
pop
les
and
dec
jp
mul
inc
je
pusha
arpl
iret
cld
je
mov
sub
mov
mov
daa
in
xor
insl
ret
pop
cld
jno
add
ret
xchg
mov
scas
lret
out
js
cmp
mov
ja
push
xchg
cmp
inc
pushf
enter
mov
mov
enter
clc
xchg
add
inc
xlat
shl
movsl
pop
xchg
cmpsb
inc
aaa
push
pop
and
fdivs
mov
inc
adc
hlt
fdiv
mov
push
loop
sbb
aas
cmp
out
or
push
inc
syscall
dec
test
push
jbe
jg
pusha
aam
ja
xchg
lods
jle
scas
fcmovnb
out
xchg
cmp
adc
leave
js
cmovp
add
adc
notl
inc
sti
ret
dec
xor
and
in
and
mov
xchg
xor
pop
dec
jecxz
imul
xchg
push
js
lahf
dec
dec
pop
lret
cmpsb
std
stos
jg
push
pop
sbb
adc
xor
negb
adc
inc
xor
mov
xor
inc
test
enter
mov
jno
xchg
mov
jle
jecxz
or
dec
nop
outsl
jne
jge
xor
jo
xor
daa
inc
jo
or
lods
popa
push
xchg
and
add
push
shrb
jbe
enter
xlat
mov
push
cltd
lret
mov
movsl
and
rolb
adcb
iret
jecxz
std
mov
cmp
lret
test
inc
pop
cmc
sti
push
adc
add
cmpsl
sbb
call
vprotq
and
stos
and
sub
push
test
pop
mov
enter
mov
test
test
add
vmulsd
lds
xchg
xchg
testb
push
cmp
insb
sbb
stos
inc
pop
mov
jmp
mov
sbb
in
mov
das
xchg
jle
loopne
or
adc
add
and
push
push
sbb
pop
push
or
imul
pusha
les
jno
cmp
addb
sti
fsubs
dec
sbb
fldenv
inc
nop
mov
hlt
fstpl
xlat
pop
repnz
mov
push
jge
or
jmp
xchg
bound
aam
rolb
adc
jo
cmc
add
jns
pop
sbb
mov
adc
jb
lock
enter
mov
inc
adc
mov
inc
cmpsl
xchg
dec
lds
push
leave
and
lret
xchg
and
imul
or
or
and
cmp
sbb
jne
sub
mov
cltd
add
insb
aaa
sbb
mov
inc
sbb
lret
jg
in
divl
or
movb
xchg
test
imul
loope
lds
test
pop
hlt
adc
cs
mov
leave
in
icebp
out
add
mov
push
fstps
jb
pop
insl
movsl
loope
and
xor
popf
inc
and
dec
xchg
addr16
outsb
outsb
lds
mov
inc
xor
mov
mov
fwait
xor
pop
or
fxtract
fwait
and
jp
mov
xor
or
add
hlt
xchg
sahf
or
jno
sub
push
movsb
cwtl
dec
test
cli
lcall
push
pop
insb
xor
lret
fldenv
cmp
bound
sub
cwtl
imul
push
add
push
lcall
test
jne
arpl
mov
cmp
aas
push
cmp
notl
clc
inc
dec
adc
mov
imul
pop
pop
jae
sub
jg
cmc
or
cmp
test
sbb
jl
popa
in
add
pushf
aaa
lock
adc
pop
mov
shll
push
jle
cwtl
and
or
outsb
mov
mov
sub
test
sub
xchg
stc
fadds
push
push
push
jns
cwtl
out
mov
std
popw
xlat
sahf
es
daa
mov
cmc
test
sub
icebp
xchg
pop
out
lret
js
into
js
sbb
cmc
daa
jmp
push
dec
les
cld
ds
sbb
insb
push
out
adc
pop
dec
push
cld
add
nop
fidivl
push
push
dec
sarb
or
out
pop
addl
ljmp
push
inc
lret
xchg
inc
sbb
and
cltd
test
stos
push
fs
dec
out
xlat
sar
notb
movsl
ret
and
push
jmp
inc
hlt
pop
or
cmp
and
push
dec
lods
fs
or
push
dec
mov
mov
xchg
pop
pop
in
mov
push
aam
clc
hlt
xchg
add
je
cmp
push
mov
cmp
jmp
mov
and
ret
dec
sti
daa
mov
scas
lcall
in
lea
mulb
andl
movsb
scas
dec
xchg
mov
push
jle
out
fisubl
fnstsw
push
call
dec
cwtl
les
lret
inc
add
sub
lret
stc
inc
pop
out
mul
mov
mov
sub
sbb
xlat
inc
inc
lret
sub
gs
adc
or
inc
pop
push
and
dec
orb
pop
in
scas
pop
rcrl
sbb
dec
and
xchg
cmp
movsb
fistps
or
out
sbb
add
dec
jne
cmp
cld
inc
lock
mov
xor
sbb
jg
sub
inc
popa
popf
mov
imul
or
or
push
test
pop
jo
pop
js
dec
shlb
in
push
daa
or
sub
call
divl
mov
push
loop
and
or
shlb
hlt
mov
fisubrl
repnz
daa
lahf
mov
xchg
icebp
dec
in
rcr
xor
imul
test
cwtl
jb
into
xchg
xor
lods
cmc
sbb
dec
es
adc
sbb
aaa
loopne
nop
fadds
push
sub
lock
xchg
inc
add
mov
pusha
in
lock
push
ret
sub
push
mov
movsb
mov
mov
jp
out
sub
lahf
mov
mov
cmp
mov
gs
out
xchg
insl
mov
test
ljmp
stos
cwtl
iret
mov
ds
repz
cs
xchg
scas
add
pop
mov
movsb
call
ja
push
or
shlb
or
push
add
and
lods
dec
fsubl
add
mov
popa
in
imul
dec
or
sub
xor
cmp
cmpb
test
cmp
adc
dec
popf
xchg
push
or
jmp
sub
xor
notb
cmp
fists
push
push
in
es
rorl
pop
dec
pop
cmp
repnz
push
sahf
scas
adc
cmp
xchg
fdivp
push
xor
shrl
iret
mov
cmp
lock
or
push
adc
pop
cmc
nop
sbbl
mov
fadds
dec
pop
mov
adc
popf
pop
push
roll
pop
mull
inc
iret
adc
lods
inc
leave
adc
outsl
lods
outsb
cmp
notl
lret
clc
daa
or
dec
lahf
jg
dec
iret
stos
pop
xor
and
fbld
out
sbb
jbe
imul
cld
xchg
adc
sti
les
pop
cmpsl
test
push
cmp
je
and
push
fxch
lahf
nop
stos
sub
sbb
xor
out
int
mov
dec
inc
and
fnstenv
movsl
cltd
mov
xor
cmp
addr16
pop
movsl
mov
dec
mov
fsubl
xlat
mov
aas
pop
mov
push
call
outsl
fidivrs
xchg
test
jecxz
sub
sub
adc
inc
loope
mov
int3
rclb
out
mov
test
lret
xlat
push
xchg
arpl
imul
mov
rorb
addl
test
mov
mov
cmp
dec
fidivs
cmp
jo
movsl
mov
adc
inc
repnz
mov
ret
and
arpl
shlb
addr16
xor
cmp
jbe
aaa
dec
or
push
add
inc
daa
cmc
cld
sub
pop
xor
inc
inc
xor
enter
push
scas
add
push
iret
test
shll
sti
rcrb
rcl
xor
adc
inc
xor
cmp
xor
sahf
push
pusha
and
and
hlt
in
jne
rcrl
and
faddl
in
into
ja
insl
and
outsl
imul
adc
mov
inc
leave
xchg
cltd
xchg
mov
xchg
ja
sub
mov
inc
mov
stos
mov
test
out
and
fst
rol
xchg
xchg
lret
or
lret
adc
lret
lcall
sbb
faddl
mov
mov
imul
fidivs
out
mov
mov
xchg
scas
idiv
cmp
lock
in
mov
mov
sahf
lret
pop
mov
cli
jns
test
aam
aam
in
popf
jle
pushf
movsb
ljmp
fcoms
imul
lret
mov
mov
popa
movsb
inc
lods
push
ds
leave
pop
inc
jg
in
cmp
fs
push
inc
das
xor
mov
rolb
cld
and
jl
and
pop
add
ret
js
and
bound
adc
ds
cltd
xchg
lret
mov
pop
sbb
gs
xlat
add
lea
add
xlat
adc
mov
insb
xchg
lcall
mov
in
leave
mov
out
in
and
lods
lcall
pop
test
mov
jae
leavew
rclb
aaa
mov
cmpsl
jmp
daa
ljmp
clc
add
pop
test
sti
jne
adc
add
sbb
in
sbb
icebp
fmuls
inc
cmc
js
xchg
mov
sahf
mov
jle
and
test
or
inc
push
lcall
mov
adc
mov
lods
imul
cmp
js
pop
enter
adc
jne
ljmp
jl
cmp
mov
ret
push
cmp
int
lods
imul
subb
push
dec
cmp
data16
sbb
je
add
jmp
ret
xchg
insb
out
out
test
add
fcoms
cmp
daa
imul
gs
and
jecxz
mov
inc
push
dec
cmp
lahf
mov
pop
inc
push
pop
ss
adc
xchg
mov
xchg
loopne
outsl
lcall
hlt
xor
inc
sbb
adc
sub
dec
dec
int3
adc
lret
pop
cwtl
xor
flds
fstl
cmp
in
loop
loopne
lret
out
imul
cmp
and
dec
fnstenv
xor
xchg
outsl
loopne
push
dec
movsl
daa
xchg
jbe
xchg
loop
hlt
push
stos
loop
cmovge
gs
int
icebp
subb
jo
and
pop
test
or
cmc
in
push
sti
rcl
xor
loop
adc
jno
sahf
xor
adc
ljmp
jmp
stc
into
pop
sbb
push
fisubl
lods
and
test
xlat
xchg
orb
dec
mov
dec
rorl
in
les
int
cmp
aas
stos
sbb
test
mov
cwtl
fistpll
xor
ja
sub
subb
sbb
sbb
xor
arpl
int
or
adc
outsb
inc
jp
jnp
int
out
ljmp
aam
cli
aam
rcrb
adc
jmp
xchg
fbstp
pop
sbb
ss
push
leave
push
inc
lods
mov
mov
shlb
inc
jne
mov
shll
fwait
inc
out
cs
push
xchg
mov
jbe
xor
mov
mov
adc
add
fcmovb
pusha
adc
scas
adc
sahf
insl
push
pop
add
pop
jp
lcall
rorb
nop
test
das
repz
sbb
pop
shll
push
jg
into
sub
mov
dec
cmpb
js
jmp
add
xchg
push
and
rclb
cltd
push
fsubp
ret
imul
push
test
add
inc
adc
jbe
pop
rol
adc
mov
dec
push
and
dec
jle
cmp
dec
repnz
push
dec
out
cs
dec
push
mov
shll
out
sub
pushf
rcll
fstpl
sbb
mov
adc
push
xorb
add
mov
or
aam
fld
dec
loop
mov
xlat
data16
sub
jl
xchg
jle
or
ja
pop
pop
mov
int3
jbe
adcl
je
jne
xchg
mov
repz
imull
daa
mov
fcomip
pop
out
add
imul
xchg
cmpsb
pop
imul
outsb
xor
pop
test
stc
jb
repnz
mov
jecxz
and
xor
into
lcall
pushf
pushf
enter
push
push
pop
leave
cltd
out
mov
repz
cmp
cmp
pop
push
cmp
out
rclb
dec
dec
adc
mov
cwtl
cmp
xchg
cmc
in
cmp
mov
loopne
cmp
sub
mov
pop
scas
lret
or
jbe
aad
rorl
mov
call
mov
xlat
add
scas
and
sub
mov
daa
mov
dec
mov
test
pop
sub
xor
xchg
sub
les
pop
xor
leave
jns
daa
xor
sbb
out
mov
adc
aad
fidivs
pop
mov
mov
popf
inc
dec
nop
in
out
push
adc
xor
xlat
cmpsb
fwait
out
inc
mov
jo
fsts
scas
in
and
or
pusha
mov
and
add
dec
jnp
sub
sbb
arpl
adc
mov
ds
cltd
push
call
cmp
movsl
stos
aaa
add
mov
loop
and
outsl
push
jmp
push
popf
mov
add
inc
push
xchg
jb
and
stos
mov
andb
push
icebp
or
jmp
ret
mov
out
or
jno
jge
movsl
roll
scas
jg
cmc
vmovq
mov
scas
fs
ja
das
insl
xchg
daa
clc
inc
jg
pop
loopne
cltd
mov
loopne
xor
add
outsb
push
add
adc
push
pop
das
test
outsb
push
adc
push
xchg
outsl
sarl
mov
inc
leave
fimull
popa
mov
inc
data16
xor
das
lods
sahf
mov
push
loop
dec
int3
cld
fstpl
and
fcmove
int3
mov
mov
mov
push
icebp
dec
jge
push
mov
sarb
jne
xor
int
test
int3
sti
loop
xchg
repz
mov
ds
adc
cltd
adc
or
sahf
sarl
sub
mov
mov
and
and
bound
fcmovnb
sbb
mov
pop
sub
fistpll
xor
or
sub
and
mov
repnz
pop
inc
mov
test
gs
or
repnz
dec
pop
push
shlb
or
scas
and
adc
ret
xor
int3
mov
mov
das
jb
push
mov
leave
sti
js
inc
sub
test
xchg
daa
loop
adc
pop
out
or
movl
xchg
in
mov
lret
adc
insb
or
mov
enter
lret
xchg
call
outsb
mov
imul
les
inc
into
push
mov
sub
push
cmp
or
loope
scas
jb
stc
test
test
inc
mov
ss
int3
inc
fistl
sub
jl
mov
cmpsb
adc
cmp
pop
dec
jo
add
pop
mov
mov
push
js
outsl
xchg
ror
adc
js
mov
ss
sbb
pop
dec
sbb
dec
push
jmp
add
sub
mov
les
mov
cmpsb
and
sub
jae
adc
mov
outsl
call
push
stc
gs
or
dec
push
mov
dec
or
jb
adc
insl
pusha
add
popa
adc
inc
sbb
fs
push
jo
popf
je
cmp
enter
xor
jbe
insl
repz
or
adc
mov
ret
xchg
pop
popa
inc
inc
pop
aaa
js
add
push
sub
and
push
push
cs
sub
adc
leave
dec
and
cmp
jl
mov
pop
jge
mov
movsb
or
outsl
divl
adc
xchg
add
lahf
leave
sub
pop
push
adc
popa
and
dec
inc
in
loopne
lock
jg
popf
dec
scas
sti
repnz
incl
fmul
idiv
subl
lods
xor
push
outsb
mov
cltd
mov
or
pop
cmp
pop
iret
mov
cs
mov
fdivl
dec
into
sub
addr16
jbe
enter
out
mov
in
lods
lret
ljmp
in
ffree
sub
mov
add
jle
das
jmp
mov
sub
inc
xchg
enter
push
sub
jo
dec
add
fidivrs
ja
mov
cmp
pop
lret
cmp
movsb
mov
mov
pop
mov
jge
pop
inc
shrl
xchg
xchg
call
jae
cwtl
pop
mov
and
add
mov
mov
stc
fs
leave
cmpl
jle
add
pop
add
or
ret
mov
jge
mov
cmc
sti
addl
shr
lret
pop
inc
movsl
lret
mov
lds
inc
popa
jo
fildll
loopne
mov
cmpsb
sub
fsubr
hlt
dec
icebp
xchg
xor
sbb
fsubrs
adc
or
and
xchg
xchg
pusha
imul
in
jle
xor
cli
pop
jns
jo
push
callw
lods
xor
movsb
jle
inc
stos
sbb
mov
hlt
cmp
into
rolb
jno
or
add
shl
adc
lret
lret
jle
push
test
add
mov
push
xor
inc
pop
inc
scas
pop
mov
out
addr16
not
nop
loope
mov
jge
xor
fildll
clc
les
lods
mov
pop
sbb
mov
xor
rol
addl
ret
mov
imul
cmp
gs
or
xchg
dec
fildll
dec
mov
out
aas
sub
movsl
test
add
into
sbb
mov
cmpsb
adc
cld
xchg
jl
and
jno
rolb
mov
push
sar
aad
scas
xchg
push
sbb
push
jb
sahf
jge
loop
jae
push
fs
test
or
mov
adc
pusha
xor
lret
inc
lods
enter
push
cwtl
pop
aas
addl
xchg
jecxz
push
pop
insb
cmpsb
jns
sub
stc
xor
outsb
icebp
aam
jne
hlt
outsb
add
stos
nop
rorl
xchg
outsl
and
xchg
inc
or
out
jecxz
loope
xor
clc
add
inc
ja
mov
jl
sbbl
imul
mov
std
test
mov
xor
jbe
rcrb
loop,pn
arpl
pushw
jne
aaa
sahf
sub
pop
aaa
xor
fldl
jno
sahf
lds
sub
cmp
and
xor
lock
push
jbe
jno
mov
lret
pop
lea
pop
add
call
je
insl
lods
adc
mov
or
jnp
lret
loop
int
adc
adc
sahf
dec
ffree
daa
testl
adc
in
aam
cmp
push
ret
test
add
repz
test
adc
sub
fdivrp
dec
repnz
lods
inc
fdiv
insb
xchg
push
push
xor
pop
sub
scas
mov
into
repz
sub
cmp
adc
or
xchg
or
dec
outsl
test
sub
pop
pop
cli
dec
dec
or
dec
pushf
dec
jl
push
push
orb
pop
dec
ja
cmpsb
or
xor
cwtl
jno
fcoml
push
mov
dec
loop
cld
fisttpl
roll
test
gs
dec
jmp
push
push
iret
add
sbb
xchg
mov
or
jp
jb
sub
test
fmuls
xchg
outsb
jae
pop
scas
pushf
stc
clc
movsl
sub
loop
sub
sbb
mov
jno
mov
nop
ja
push
cmpsb
adc
pop
das
mov
cmp
jp
in
int
mov
pop
or
fsubrp
cmp
and
cltd
pop
ds
push
mov
enter
stc
rolb
mov
out
mov
lds
jnp
cli
in
cmpsl
mov
mov
aaa
or
outsl
push
aam
push
ljmp
cmp
push
das
pop
push
stos
and
cli
push
mov
push
test
js
loopw
mov
adc
push
lcall
scas
in
das
in
mov
adc
push
scas
cltd
and
movsl
stos
cmc
push
fidivl
mov
pop
jae
es
sahf
jecxz
add
scas
inc
jg
loopne
add
cwtl
notl
pushf
xor
push
xchg
fcoml
fwait
or
or
test
flds
add
lods
rol
inc
pop
push
roll
push
mov
icebp
xchg
lea
or
scas
pop
inc
rcr
jp
popa
and
popa
or
cli
dec
and
add
lods
xchg
cld
dec
or
add
loop
pop
bound
out
push
adc
mov
dec
push
stc
mov
jp
lcall
stos
xor
movsb
gs
jae
cmp
sbb
cmp
mov
pop
adc
adc
lret
adc
jmp
dec
xchg
negl
mov
lock
xlat
ja
aaa
xlat
addb
xlat
pop
mov
outsb
pushf
add
call
mov
ss
sbb
pop
pop
pop
and
xchg
outsl
leave
mov
sub
rcll
insl
and
sbb
test
xchg
jle
push
fnsave
fcomps
out
or
cmp
out
lds
sbb
fisttpl
scas
pusha
outsl
inc
xchg
insb
sarl
jbe
jae
movsl
fistps
in
fstl
iret
loopne
jge
pop
sub
fdiv
cmp
out
and
inc
scas
testl
or
mov
mov
call
fildll
mov
cs
nop
pop
xlat
mov
test
jno
test
adc
mov
jno
imul
es
fadd
push
push
sahf
xchg
aaa
aam
or
xchg
std
addl
xor
jmp
in
inc
out
and
mov
sbb
cmpsb
popa
addb
jb
mov
std
inc
mov
mov
pcmpeqd
icebp
mov
xchg
fwait
xchg
in
cld
movsl
sbb
sub
dec
inc
pop
inc
fldl
pop
push
mov
jecxz
xchg
pusha
pop
sbb
adc
mov
out
xchg
jns
xchg
ret
and
daa
bound
add
fisubrl
std
push
push
icebp
int3
adcb
shr
jnp
call
and
pop
xor
jmp
or
rorl
push
sbb
sbb
xchg
xchg
and
pop
sub
out
mov
cmpsl
inc
decb
xor
ss
xor
loopne
arpl
or
sbb
push
jg
movsl
cmc
fmuls
notb
in
out
mov
test
xor
int
mov
insb
call
jbe
push
subl
push
stc
sbb
and
mov
loope
and
sbb
push
push
shlb
jmp
jnp
pop
xchg
adc
xchg
jle
je
lds
xchg
sub
xchg
sahf
jle
xor
lret
xchg
pushf
adc
push
and
hlt
mov
sub
cmpb
rcll
iret
negl
cmc
mov
xlat
loope
mov
xchg
inc
jno
out
andl
mov
adc
popf
pop
ret
xchg
loopne
mov
fstpt
and
rcrb
hlt
xchg
imul
sbb
mov
pop
shll
aaa
adc
sahf
movl
pop
mov
popf
shr
sub
test
aam
je
lds
mov
add
mov
mov
mov
sub
xchg
or
sub
outsb
mov
adc
push
in
addr16
jb
pusha
mov
xor
mov
xchg
sahf
rcrb
aaa
push
sti
adc
not
add
push
inc
cmpl
jecxz
decl
ss
cmp
add
pop
loop
adc
bound
cmp
inc
pop
mov
stos
lods
loop
cs
and
adc
xchg
or
mov
xchg
pop
shrb
add
dec
scas
cs
imul
in
cmp
xor
jle
in
inc
mov
lcall
adc
or
xor
dec
ret
adc
sbb
cld
scas
stos
adc
movl
pop
sahf
xor
out
mov
ret
mov
loopne
xor
mov
mov
inc
js
mov
adc
sbbb
mov
pop
sub
bound
inc
int3
push
jl
xor
leave
cmc
mov
dec
push
xor
jmp
add
mov
mov
or
dec
fcmovb
mov
jle
add
dec
mov
and
dec
jg
in
rolb
das
mov
mov
inc
inc
imul
scas
sub
and
mov
mov
adc
movsl
push
fists
fsub
or
arpl
and
loopne
sub
xchg
in
mov
or
sbb
xchg
add
and
imul
dec
pop
mov
mov
pop
bound
mov
pop
dec
jb
cmpsl
aad
jmp
mov
ja
out
mov
insb
xchg
in
jnp
iret
ljmp
push
mov
lds
xchg
jecxz
int
cwtl
cmp
call
push
dec
mov
push
jl
imul
in
pop
loope,pn
repnz
xlat
mov
es
popf
mov
dec
dec
xchg
and
add
jmp
xchg
mov
lock
push
mov
jnp
inc
lds
push
sbb
inc
xor
jae
push
imul
fstl
xor
sbb
nop
stos
sub
shl
aaa
xchg
inc
stc
mov
fdivrl
jae
sbb
movsl
ret
sub
sbb
xchg
jmp
stc
out
xor
lret
nop
or
jnp
pop
fbstp
adc
mov
jle
daa
xor
pop
into
jno
adc
nop
xchg
pop
subb
sahf
inc
leave
cwtl
sub
cwtl
xor
ret
lahf
ret
sbbb
ljmp
nop
push
xchg
test
es
movsl
daa
push
xchg
and
jmp
lret
out
pop
mov
jg
imul
mov
fs
cwtl
ja
ret
dec
fistpl
ret
xchg
mov
push
xchg
fwait
in
inc
shll
fs
jl
hlt
push
push
xchg
ret
in
aad
or
in
cld
shl
inc
sti
push
pushf
mov
movsb
sti
sub
dec
mov
fnstsw
rolb
xchg
test
cmc
sbb
addr16
pusha
cmp
jg
xchg
sbb
movsb
mov
adc
dec
and
push
ljmp
enter
aad
xor
adc
xchg
inc
shrb
loope
xchg
xchg
mov
jno
mov
scas
mov
xor
or
lods
pushf
adc
loope
cmc
adc
aas
lret
mov
dec
inc
enter
loope
cmp
mov
out
lea
aam
sub
popf
data16
adc
push
mov
sbb
sbbl
repz
mov
and
mov
and
scas
xchg
xchg
fistpll
pop
xor
mov
or
fidivs
pop
cmp
jo
pop
icebp
mov
leave
cli
jnp
push
inc
test
adc
pop
xchg
pop
stos
adc
adc
int
sub
mov
or
jp
cltd
add
jnp
mov
cmpsb
sub
mov
xor
sbb
bnd
into
insl
mov
xchg
jmp
push
cmp
xchg
sbb
in
test
test
enter
sbb
scas
mov
ret
adc
shll
push
arpl
cmp
push
mov
mov
xchg
leave
or
lret
popf
adc
sub
inc
enter
flds
jp
mov
jecxz
mov
mov
aas
decl
loopne
xchg
outsl
jle
add
mov
and
loope
cmp
pusha
insl
jge
in
cmp
mov
clc
adc
fadd
jp
mov
jno
jnp
adc
xor
cmp
pop
mov
push
jmp
push
in
addr16
popf
call
pop
or
mov
cli
push
mov
lock
int3
ds
mov
mov
add
mov
out
mov
sub
sbbl
mov
sub
inc
outsl
jnp
movsl
add
scas
mov
sub
sbb
inc
sub
cmp
xor
ljmp
aad
mov
ret
sbb
repz
xchg
xor
addb
xchg
mov
aaa
adc
icebp
cltd
fwait
stc
bnd
mov
and
mov
arpl
and
rorb
fidivrl
mov
ficompl
sbb
shrl
jo
sbb
imul
outsl
imul
xchg
les
jle
mov
push
inc
loop
dec
and
mov
popa
int3
aam
lds
sahf
xlat
mov
in
dec
inc
and
mov
ret
cmp
adc
jp
sahf
fmuls
xchg
adc
and
xchg
mov
sub
lahf
imul
push
jns
fisttpl
fcmovbe
push
pusha
pusha
pop
or
dec
adcb
cmp
int3
jl
fbld
add
xor
and
sbb
lods
dec
pushf
lea
inc
ss
pusha
fadd
rolb
pop
jbe
mov
ljmp
dec
add
ret
lret
lds
insl
out
push
sbb
jns
mov
addl
cmp
int
int3
pop
sbb
pop
stos
push
test
adc
push
jmp
outsl
cmp
int
sub
add
iret
push
xchg
inc
sub
lcall
aas
pop
fldenv
jg
dec
cwtl
movsl
leave
and
push
or
dec
call
dec
cmovno
pop
mov
adc
xchg
mov
fldenv
sub
cmp
xor
aad
adc
mov
stos
jb
repz
imul
loop
adcl
push
add
inc
and
insb
jp
je
mov
dec
jbe
xor
adc
mov
jbe
ljmp
ss
mov
jae
lcall
lcall
out
sub
push
cpuid
pop
clc
jl
mov
std
push
cli
test
and
cwtl
cwtd
sub
push
out
xor
cmpsl
dec
shrl
or
rolb
or
add
xorl
jmp
xorb
movsl
add
daa
rcll
mov
fnsave
int
aas
js
push
lahf
sub
xlat
iret
out
out
int
mov
loopne
mov
jne
xchg
adc
pop
sbb
xor
sbb
push
push
imul
out
lods
pop
pop
lea
cmp
sub
mov
jmp
mov
imull
sbb
jecxz
push
outsb
test
add
das
movsb
inc
mov
cmp
or
test
js
adc
lahf
mov
inc
or
insl
sub
rcrb
adc
ljmp
inc
jb
or
sub
sbb
sti
mov
in
pop
imul
mov
sub
xor
mov
pop
fsubs
loope
sub
sbb
xor
loope
mov
pop
aad
push
clc
lcall
push
addl
fdivr
out
addr16
inc
pop
sarb
xor
mov
mov
lcall
es
xorb
sti
test
int3
or
fisubl
add
ficomps
xchg
lds
scas
jle
insl
ret
sub
cld
std
ficoms
add
inc
inc
movsb
stos
sbbl
cmp
insb
insb
sti
push
dec
push
adc
hlt
mov
ljmp
pop
add
call
vpacksswb
int
and
fsubr
mov
mov
pop
push
pop
gs
sub
fs
stc
int3
xlat
xchg
xlat
ljmp
loopne
mov
outsb
loope
lcall
stc
mov
addl
inc
mov
or
xchg
loop
movsb
cmc
push
jbe
and
push
mov
dec
mov
mov
jne
xlat
push
sbb
popf
sbb
mov
adc
push
gs
mov
fisubrs
mov
push
push
mov
lret
mov
pop
ds
loope
mov
xchg
add
in
xorl
sbb
cs
cmp
sti
out
loope
mov
mov
push
sub
adc
cmp
cmp
cltd
push
popa
pusha
mov
inc
xchg
and
push
enter
inc
aas
test
xchg
inc
fidivl
inc
pop
push
cmp
insl
std
mov
mov
lock
cmp
inc
mov
or
cltd
and
xor
cwtl
jmp
ret
cmp
xchg
lahf
mov
push
in
shrb
test
mov
mov
pushf
incb
mov
test
add
cltd
movsb
inc
imul
sub
cmpsl
fadds
cltd
lret
dec
push
icebp
shll
sbb
movb
gs
loope
mov
cmp
and
and
dec
jno
testl
xchg
call
adc
fstpt
push
sbb
call
jecxz
mov
jo
pop
sbb
cmp
les
shl
in
jns
dec
xchg
or
or
xchg
out
in
test
daa
cmpl
std
out
xchg
and
fsubrp
stos
fidivs
hlt
aam
je
sbb
inc
jge
adc
into
incl
jmp
shlb
lcall
xlat
or
movsl
or
and
cmc
repnz
sub
xor
repz
loop
ds
std
pop
jnp
aam
jg
bound
pop
jmp
jnp
pop
mov
push
js
int
sbb
rcrl
push
sub
add
xchg
int
pop
outsl
cmpsl
repz
mov
movsb
loope
mov
mov
bound
or
aam
imul
jb
or
bound
std
shll
mov
sti
mov
add
push
mov
aaa
adcb
dec
sub
add
icebp
fstpl
loope
sub
dec
mov
pop
sbb
mov
mov
mov
adc
fisubs
movsb
or
fsubrs
jno
pop
cmp
sti
mov
push
mov
dec
xor
aam
xchg
dec
inc
insb
pusha
xorl
mov
mov
push
mov
push
mov
int3
sar
mov
rorb
jl
daa
mov
ja
mov
out
adc
stos
xor
push
and
sbb
mov
cld
sub
out
fstps
aad
sbb
jle
imul
xorl
mov
imul
movsb
inc
in
fs
jne
mov
pop
popf
std
add
test
cmpsl
pop
fidivl
faddl
popf
sbb
add
pop
xchg
add
dec
mov
mov
lods
stc
adc
add
in
sti
sahf
stc
cmp
adc
cmp
cwtl
sahf
mov
add
aam
inc
and
dec
jl
cmc
mov
inc
or
hlt
test
pop
sub
out
dec
fnstsw
ret
outsb
shl
mov
dec
scas
xchg
mov
stos
fsts
dec
call
loope
fcomp
stos
push
push
push
and
test
sub
insb
dec
and
sti
push
fmull
xchg
data16
xlat
repnz
cmpsb
mov
pop
adc
sub
inc
imul
leave
movsb
ds
push
or
lock
adcb
ret
scas
insl
jo
bound
mov
sub
push
enter
push
mov
in
lahf
or
jmp
adc
sbb
or
dec
sbb
fstps
add
cs
xchg
outsb
movsb
mov
adc
mov
cmpsl
and
loope
xor
frstor
xchg
addr16
leave
aad
add
sub
xlat
dec
mov
sbb
push
inc
imul
and
xor
dec
stos
sub
or
mov
cmp
sub
mov
movsb
pushf
adc
inc
lahf
mov
jp
popa
xchg
or
sbb
aaa
sub
cwtl
jle
lods
add
cwtl
imul
xor
mov
into
jl
xor
xor
adc
stos
test
mov
adc
fldt
push
push
and
movsb
adc
ss
pusha
div
adc
in
mov
das
stc
or
shr
sti
clc
cld
arpl
and
mov
icebp
xchg
jb
pop
fiaddl
cld
repnz
mov
sbb
jge
or
mov
mul
add
push
dec
rcl
in
rclb
sub
inc
in
cmp
pop
hlt
mull
stc
mov
inc
loop
mov
cmpsb
adc
mov
adc
filds
dec
pusha
or
in
popf
and
sti
ret
jge
mov
dec
jne
cli
data16
repz
dec
mov
and
es
inc
inc
nop
push
pop
in
fs
mov
pop
dec
int
dec
cmp
fldt
sub
jns
out
stos
inc
push
cs
xchg
xchg
ds
ret
cmpb
push
push
pop
dec
stos
std
mov
in
test
jle
adc
js
popf
push
mov
mov
mov
dec
push
and
cwtl
bound
mov
fmull
jnp
cwtl
push
mov
call
mov
cltd
cltd
mov
lods
xor
xor
inc
daa
or
xor
xchg
add
pop
test
xor
jne
rcrl
ja
leave
xor
aam
sti
cli
mov
jmp
xor
xchg
nop
es
loopne
jb
cltd
scas
arpl
inc
mov
lods
mov
sub
push
shl
cmpb
inc
add
je
jnp
stc
call
xor
mov
cs
mov
jo
mov
fmuls
lea
jg
mov
mov
stos
xchg
in
push
decb
es
jb
xlat
loopne
add
inc
clc
daa
les
fmuls
test
sub
idivl
pop
into
mov
shll
popa
aad
push
xchg
xor
ja
mov
push
inc
xchg
jg
xchg
adc
cwtl
adc
ljmp
movsl
imul
fdivrs
iret
inc
push
mov
aas
ljmp
shr
lret
adc
not
stos
mov
and
insb
mov
dec
cs
cld
push
call
cmp
fnsave
add
ljmp
fs
jnp
jecxz
shrb
mov
mov
push
dec
arpl
cmc
push
repz
out
xchg
fnstsw
aaa
popf
inc
push
adcb
jecxz
incb
stos
jns
and
pushf
lahf
xor
xchg
jno
cmpsl
js
jp
mov
int3
sbb
out
mov
insb
inc
xor
add
bound
jno
jnp
aas
movsl
call
orb
pusha
adc
jge
pop
push
xor
pop
xchg
cld
jae
mov
jmp
push
mov
lahf
test
mov
jge
shr
push
xchg
fwait
pop
cmc
cs
and
mov
repnz
push
jae
inc
aam
dec
cmp
inc
dec
push
fcoms
add
push
fnstcw
ss
stc
mov
ljmp
pop
jmp
sub
dec
mov
push
pop
cli
mov
xchg
jle
fs
ja
aam
iret
jg
leave
pop
mov
ja
fstl
cld
es
lods
sub
inc
push
jg
lcall
cmp
sbb
and
aas
stos
lock
sti
loopne
into
pushf
cs
adc
sub
push
cmpl
into
mov
js
lods
and
xchg
inc
jmp
rorl
fsubrs
mov
in
es
jne
clc
mov
jmp
iret
xchg
mov
enter
lahf
ret
push
insl
test
xchg
cltd
arpl
dec
fs
dec
out
movsb
mulb
cli
ret
add
mov
ja
pushf
sub
shl
idivl
popf
dec
dec
sahf
jle
jne
je
je
stc
shrb
cmpsl
mov
shll
sbb
cmp
inc
xchg
push
jns
adc
sbb
push
dec
cmp
outsb
leave
je
in
cltd
in
cmpsb
cli
mov
cmp
pop
decb
cs
leave
mov
fnstsw
dec
mov
pop
sub
out
ret
sbb
adcl
mov
jmp
ret
mov
lahf
int3
test
je
xor
push
data16
imul
jmp
pop
nop
pop
rorl
and
sub
mov
lds
mov
mov
add
cmp
out
ss
dec
lods
daa
divl
ret
mov
mov
mov
outsb
test
dec
sarl
icebp
xchg
xor
cmc
or
insl
dec
popa
leave
cmpsb
and
pop
hlt
stc
mov
xchg
mov
movsl
imul
repz
mov
or
hlt
pop
xor
xor
int
cmpsl
cmpb
cli
jns
scas
mov
leave
and
push
mov
mov
mov
sahf
and
mov
nop
mov
inc
mov
mov
add
aad
adc
pop
jno
inc
dec
cmp
mov
sub
jo
hlt
movsl
ljmp
test
lret
xor
jnp
dec
leave
lods
mov
xor
pop
hlt
or
cmc
popf
subl
mov
and
push
shl
xchg
cmp
jg
scas
sbb
lock
xchg
push
lcall
adc
xchg
es
lahf
and
jl
jle
addb
and
dec
cmp
lods
and
pop
std
imul
fldl
mov
js
pop
xchg
lcall
rorl
andl
pop
mov
loop
adc
sub
into
push
xchg
test
dec
mov
mov
xor
pop
inc
daa
fisubl
ds
push
inc
jmp
add
mov
cld
add
sahf
int
push
dec
add
sub
ret
pop
inc
adc
fsubl
sbb
adc
jg
sbbl
cmp
inc
sarl
outsb
addl
mov
inc
movsb
hlt
gs
scas
cmp
popf
dec
sbb
push
mov
pushf
in
or
rorl
imul
cmp
shlw
aas
mov
popa
cmp
sbb
lods
dec
inc
lgs
sti
mov
inc
or
mov
rol
and
sub
inc
pop
cli
sti
icebp
jge
mov
sbb
iret
mov
pop
test
cmp
push
xor
fstpt
pop
cmp
out
add
mov
popf
add
fwait
jle
ror
adc
inc
xor
loopne
out
mov
jge
mov
add
lds
cmp
pop
and
mov
lcall
push
clc
push
rcl
repnz
push
aaa
inc
sub
dec
cmp
iret
adc
pop
pop
pop
popf
xchg
sub
jle
jge
and
stc
xchg
xchg
cmc
sbb
fld1
add
cs
mov
lahf
nop
and
push
jmp
insl
and
adc
push
push
sahf
inc
sarb
dec
mov
add
push
pop
in
rcrb
mov
das
hlt
jp
cmpsl
das
int3
or
cwtl
lods
xor
fsub
std
pop
pop
adc
repnz
mov
fbstp
dec
dec
daa
fiadds
loop
push
xorb
sub
add
movsl
inc
jp
jecxz
roll
add
pop
shrb
dec
in
dec
dec
mov
pop
sbb
outsl
fs
iret
in
mov
not
loopw
in
scas
sbb
push
xor
shl
lcall
insl
mov
loop
mov
mov
test
pop
and
pop
and
popl
or
js
and
cmp
adcl
movsb
dec
jae
inc
aad
xor
rcrb
jnp
mov
outsl
push
pop
mov
call
pop
lret
stos
or
cmp
cmc
outsl
mov
lds
add
and
or
sbb
push
mov
jne
sbb
lea
ds
push
daa
add
scas
mov
inc
mov
loop
fs
cld
inc
pushf
and
lret
mov
aas
test
add
add
loopne
fnstenv
adc
xrstors
push
es
int
mov
lret
inc
inc
push
test
inc
add
in
mov
sub
cmpb
and
push
mov
lea
mov
cmp
mov
inc
fimuls
dec
jl
push
stos
adc
push
mov
lods
jnp
sub
xor
cmp
push
out
out
or
cltd
inc
lods
call
jne
mov
cld
decl
cltd
or
loop
cmpl
mov
sbb
xor
sub
stc
rorl
in
sahf
mov
mov
icebp
dec
sarl
out
adc
push
push
lret
and
subl
lahf
test
mov
mov
add
sbb
add
pop
fwait
add
clc
cmp
jl
lea
mov
aam
dec
xchg
sub
jl
out
fiadds
mov
fwait
xchg
rcll
lods
loop
jg
movsb
cmp
addr16
sbb
push
clc
push
insl
shr
sub
test
out
ja
cmp
out
push
cmp
inc
fstl
or
xlat
push
inc
stos
jmp
add
lcall
enter
dec
adc
cmc
pushf
mov
adc
sub
pop
cli
fisubs
and
cmp
xchg
dec
stc
out
push
jl
pop
cmp
sbb
dec
sbb
clc
pop
mov
mov
sub
adc
popf
lock
rep
and
roll
mov
call
sbb
out
adc
repz
mov
test
push
mov
in
in
sbb
push
ret
ret
inc
mov
xor
pop
pop
mov
jg
mov
filds
repz
iret
fnstcw
sbb
icebp
addr16
cmpsb
jmp
ret
sbbb
fistpll
push
ljmp
lock
inc
lds
jne
int
jp
shrb
cmpb
xchg
es
sbb
movsl
addr16
cld
adc
add
sub
mov
lods
ficompl
cmp
jp
or
mov
adc
jne
or
and
inc
pushf
nop
adcb
in
inc
hlt
inc
adcl
icebp
jge
adcl
pop
sbb
stos
xor
sbb
mov
les
outsl
movl
ss
outsl
addr16
jnp
lods
or
pushf
nop
pop
mov
das
adc
mov
pushf
sub
cmpl
push
lods
jno
mov
insb
cmp
push
push
xor
xchg
pusha
mov
sub
outsl
cmc
into
clc
aad
lds
jne
sub
sub
inc
fptan
mov
rcll
sub
sbb
cmp
test
mov
fdivrl
cld
les
xor
fs
mov
jo
dec
daa
sarb
xchg
xor
mov
jmp
pop
pop
int
mov
jns
cmp
mov
sub
fcoms
movsl
push
shrl
push
imul
dec
add
jecxz
cmp
out
cld
mov
pop
or
mov
pop
ret
pop
in
sbb
test
sbb
and
lock
add
iret
sub
test
jmp
sub
mov
dec
or
stos
imul
mov
mov
pop
dec
lods
push
movsl
cs
cs
or
dec
lods
push
or
pop
stc
aas
arpl
cltd
inc
mov
in
sub
fistps
les
std
iret
jmp
pop
aam
xlat
mov
mov
fs
lret
mov
in
mov
mov
out
mov
mov
popa
pushf
push
clc
shrb
adc
xchg
cltd
sub
stc
das
rcrb
das
mov
insb
in
outsl
adc
popf
stos
and
jnp
mov
jnp
jno
push
iret
push
adc
out
jmp
or
scas
mov
mov
xor
mov
jne
xchg
and
movsb
mov
inc
out
sub
outsb
mov
add
sub
shrb
test
add
mov
ss
mov
mov
dec
mov
int
xchg
lahf
je
pop
enter
cmc
and
orb
pop
mov
repz
push
or
inc
push
enter
enter
std
cwtl
pop
and
mov
add
jl
popl
mov
xchg
mov
jnp
negb
push
mov
push
add
sahf
cmpsb
test
and
push
mov
push
xchg
imul
pop
mov
add
sub
jge
call
scas
inc
pusha
cmc
push
stos
rcll
add
insl
outsb
push
movsb
xchg
dec
jnp
sbb
push
mov
jg
rclb
mov
out
aas
adc
jns
rclb
inc
inc
xor
testb
arpl
sbb
gs
out
xchg
or
es
insb
mov
dec
std
inc
shrl
push
sub
clc
mov
gs
xor
ret
xchg
xchg
sbb
aad
loope
pushf
fnstenv
rsm
mov
or
sti
mov
hlt
stc
daa
iret
jno
enter
xor
sbb
orl
lods
jg
jae
mov
xchg
out
pop
and
or
movsl
jo
xorl
in
test
cwtl
stc
jb
cmpsb
enter
xchg
je
add
divb
inc
pop
mov
sahf
push
and
rcl
push
and
ret
movsb
testb
mov
dec
es
adc
add
jae
lcall
shrd
mov
jne
sbb
mov
aad
mov
sbb
lret
pop
sub
xchg
clc
or
movb
lods
push
pop
das
pop
insl
jecxz
pop
es
orb
push
loope
add
mov
pop
and
jbe
inc
xchg
fstp
jbe
sbb
dec
enter
fwait
inc
lret
sub
call
movsl
inc
add
jns
movsl
adc
in
inc
dec
adc
mov
jbe
das
gs
gs
ret
movsl
jle
rcrl
cli
sbb
aas
and
sub
enter
enter
lds
lret
pop
es
mov
inc
test
iret
leave
or
popf
mov
and
cmpsl
ret
fsubl
jae
aam
or
inc
jg
xchg
pop
mov
jno
into
adc
jbe
sbb
lahf
cltd
mov
cmpsb
push
mov
pop
xchg
mov
or
pop
into
arpl
or
ljmp
push
ret
test
loopne
orl
xchg
mov
sahf
aad
test
fcompl
movsb
sti
popa
and
xchg
ficomps
into
jnp
in
fiaddl
sbb
lret
cmp
fisttpll
xchg
mov
cltd
ljmp
xchg
mov
and
js
add
and
mov
jnp
jmp
inc
jno
hlt
mov
scas
xchg
hlt
push
pop
pop
clc
fsubrs
sbbl
xchg
imul
loop
in
mov
pop
xchg
mov
aaa
cmp
lea
dec
and
sbb
push
xor
or
es
setle
cmp
les
ret
xchg
sbbl
scas
lock
mov
cmp
lcall
xor
repz
cmp
jg
into
or
sub
lcall
dec
lret
pop
ljmp
adc
daa
jnp
pop
push
out
test
cld
pop
xor
mov
sub
es
call
aas
fcompl
int3
dec
loope
lods
sbb
mov
cmp
inc
add
pop
or
fstl
push
mov
movsl
or
xlat
stc
fiadds
add
sub
fildll
add
fsin
xor
test
outsl
test
push
popa
inc
ret
mov
aas
pop
push
cmp
and
icebp
mov
insl
clc
int
or
add
xchg
push
test
pop
add
stos
into
sbb
dec
lcall
scas
adc
hlt
mov
push
popa
push
sbb
inc
sahf
clc
fisttpll
mov
push
ljmp
ljmp
jae
xlat
call
jge
stc
rorb
inc
loopne
mov
inc
inc
sbb
icebp
insl
outsb
addb
popf
inc
addr16
push
sbb
mov
roll
mov
add
push
inc
push
sub
mov
pop
xchg
xor
pushl
dec
mov
inc
lock
enter
pop
les
xor
sub
cld
sbb
in
pop
ret
add
add
dec
jmp
insl
dec
scas
push
pop
cltd
loop
or
inc
push
fisttpll
xchg
lret
subb
xor
pop
sbb
scas
outsl
dec
mov
cltd
and
jnp
sub
dec
dec
sub
mov
mov
dec
addb
push
xchg
int3
add
outsb
cmp
jne
jbe
repnz
loope
jmp
or
pop
jmp
adc
jge
mov
adcl
sub
inc
add
js
mov
les
mov
outsb
sbb
and
out
add
add
jle
rorl
adc
es
das
mov
sarl
je
cmp
mov
cmp
push
cmpsb
inc
xchg
inc
push
cmp
out
je
adcl
sbbb
sar
push
pop
mov
repnz
test
ja
sbb
xchg
and
lahf
int3
std
gs
sti
push
adc
xchg
adc
addb
pusha
sub
or
aas
in
out
add
jbe
pusha
test
stos
stos
pushf
fists
shl
andb
lods
lock
leave
ffreep
sti
lea
cli
sbb
pusha
sbb
mull
inc
pop
scas
mov
inc
jle
adc
divl
mov
jecxz
cmp
cltd
das
jae
sub
jmp
ss
or
mov
and
cmp
mov
mov
jo
adc
sarb
subb
adc
jns
xchg
mov
push
incl
pop
pusha
mov
popf
pop
xchg
sub
jmp
lds
dec
lods
mov
ljmp
adc
and
xchg
mov
pop
fnstsw
sub
cmp
mov
mov
mov
gs
sbb
in
jno
sub
sbb
pop
rorl
or
out
sub
lcall
es
xchg
xor
in
adcl
mov
and
sub
add
cs
xor
mov
push
shlb
loop
pushf
lods
inc
das
push
mov
dec
jmp
pusha
test
mov
iret
push
lds
adc
test
cmpsb
pop
push
das
push
mov
out
fnstcw
mov
cmp
outsl
jg
and
shll
cli
scas
adc
std
pushf
in
jp
sbb
daa
inc
pop
loopne
pop
xor
out
int
nop
cmc
lahf
jg
pop
and
in
xchg
mov
test
ss
push
jl
lods
dec
sahf
mov
pop
pusha
loopne
in
inc
xchg
or
adc
std
pop
cmp
mov
xchg
or
xchg
lods
cmpsl
jbe
mov
fcmovne
push
jecxz
enter
mov
xchg
push
jnp
jl
into
subb
aam
add
adc
adcl
cmc
imul
pop
aam
dec
ja
inc
fwait
sub
out
sub
icebp
popa
ja
loop
mov
lock
rcl
mov
fdivrl
sti
ret
xor
push
mov
push
sbb
hlt
or
lods
sub
ja
fmull
cmp
add
xchg
aaa
sbb
mov
and
loop
push
mov
inc
clc
mov
dec
jmp
mov
iret
insb
mov
rcll
push
inc
jge
pop
add
jecxz
pop
sarl
cld
push
outsb
jmp
pop
xor
fcmovnu
scas
pop
jb
stos
into
jns
int3
or
or
ret
loop
inc
push
int
jl
xor
adc
jmp
jle
nop
inc
pop
or
push
add
lock
outsl
xlat
daa
nop
cmpsl
and
sti
test
and
push
out
pusha
movsb
adc
out
mov
adc
mov
in
fistl
dec
push
call
fsubrs
nop
aas
push
rolb
out
test
rcl
push
aam
iret
in
iret
test
movsb
jae
jno
dec
mov
pop
ljmp
sub
xchg
mov
inc
rcrb
rcl
mov
sub
mov
push
dec
add
xlat
pop
aaa
leave
aas
or
insl
mov
xor
xchg
cmp
xchg
fldt
loope
addr16
mov
cmp
cltd
ds
add
bound
in
test
inc
sub
inc
dec
xchg
in
cs
cwtl
cmpsb
in
cmp
fstpt
and
pop
imul
sbb
clc
cltd
fbstp
clc
dec
push
mov
jns
adc
icebp
pop
andb
push
pop
adc
pusha
push
push
mov
sar
add
add
jbe
cmp
test
insb
cli
mov
xchg
mov
and
jmp
in
repnz
inc
decl
xor
int
cwtl
popf
je
dec
xchg
xchg
mov
movsb
add
jae
inc
jo
jns
push
mov
push
imul
popf
mov
mov
shl
and
mov
mov
fcmovu
or
sbb
or
sahf
adc
push
fs
test
mov
adc
xchg
nop
iret
cmp
inc
jmp
outsb
pop
stos
inc
mov
mov
jb
jmp
dec
lcall
inc
xor
and
adc
pop
inc
or
data16
repz
repz
movsb
int
test
xor
sub
ds
mov
cmp
shr
in
jno
cli
js
adc
push
movsb
or
xor
pcmpgtb
nop
adc
stc
cs
or
jecxz
std
lea
mov
aaa
push
and
call
pop
sbb
and
jbe
test
iret
push
xchg
ftst
test
xor
sbb
lret
or
mov
adc
pusha
dec
and
dec
or
sbb
and
ljmp
les
xor
push
mov
jge
jg
test
dec
inc
or
xchg
lret
leave
or
lock
adc
jle
mov
out
ret
mov
js
mov
or
iret
inc
fisubl
push
xor
les
sarl
int
sbbb
pop
jb
mov
in
fstpl
push
or
into
inc
and
jl
scas
mov
push
sub
dec
jecxz
jge
jne
fs
xchg
sbb
test
sbbb
mov
rep
int
cld
adc
pop
lret
out
sbb
sbb
dec
movsb
sub
ret
cmp
das
das
clc
mov
sti
fwait
jns
pop
mov
and
cmpsl
adc
pop
popa
xchg
push
or
int3
dec
fmul
or
ror
xor
lea
adc
and
popf
enter
ljmp
scas
ds
or
addr16
repnz
and
loop
pop
fwait
inc
enter
pop
mov
stos
pop
ret
pcmpeqd
ret
push
ja
popa
mov
pusha
lahf
inc
pushf
sub
enter
std
daa
xchg
xchg
aas
sar
test
outsl
cltd
xor
jge
stc
dec
lods
rep
loop
inc
jae
call
pop
add
stos
sahf
xchg
mov
xchg
aas
sbb
fcmovbe
icebp
out
leave
imul
lcall
xchg
icebp
push
stos
js
jnp
outsb
add
jbe
pop
les
inc
jl
fdivs
mov
outsb
rclb
rolb
mov
xchg
loopne
jmp
cmp
inc
insl
sub
pop
or
mov
lret
xchg
cwtl
xchg
pushf
outsl
lret
ja
cltd
jg
dec
mov
fmull
cmp
arpl
in
sahf
lret
mov
lock
repz
add
fwait
and
xchg
jb
mov
es
nop
adc
aas
pop
inc
je
add
pop
popa
lret
push
jle
lock
in
xor
fsubl
jl
shll
cmp
idiv
fidivrl
rcll
push
xchg
xchg
jmp
imul
out
out
cmp
and
mov
pop
imul
or
jecxz
push
daa
out
push
leave
shrl
xor
cmp
sbb
jne
ljmp
jecxz
push
push
jnp
mov
lock
xchg
movsb
push
dec
mov
add
add
lods
jl
jbe
ret
lods
cs
in
jg
stos
fwait
jbe
mov
scas
mov
adc
mov
nop
xchg
inc
in
out
cmp
insb
outsl
mov
lret
test
push
pop
dec
call
mov
pop
imul
adc
mov
ret
mov
test
icebp
test
int3
jnp
clc
sbb
jle
sbb
in
loopne
mov
out
adc
jecxz
rorl
push
xor
pop
inc
pop
addb
es
ljmp
pop
cmc
ret
mov
out
sbb
inc
sar
and
mov
jl
inc
mov
decl
fs
fldcw
sub
jnp
jle
shrb
adc
repnz
test
cmp
pop
outsl
popa
out
ja
movsl
addb
mov
xchg
dec
out
out
repz
pop
pusha
inc
sbb
inc
cmc
shll
push
mov
addr16
call
pop
fwait
xchg
pushf
repz
mov
push
sbb
notl
pop
and
sub
and
pop
adc
dec
xor
or
adc
adc
int3
bound
pop
subb
das
cmp
add
lea
dec
or
mov
outsb
inc
aad
ror
icebp
inc
push
rorl
lahf
icebp
pop
dec
lods
xchg
pop
mov
loopne
add
mov
cmp
xchg
mov
aad
cmpsb
mov
adc
daa
pushf
pop
inc
push
xor
sbb
ror
sbb
pop
dec
clc
out
push
cmp
pop
fcompp
adc
push
pop
jnp
jno
clc
push
pop
pop
add
iret
mov
cltd
adc
imul
adc
enter
xchg
or
xor
js
sbb
xchg
call
bound
dec
mov
out
rorl
jbe
enter
mov
enter
push
xchg
imull
sbb
and
in
leave
ds
sti
cmp
sarb
jg
mov
or
cwtl
xor
sbb
popa
jmp
enter
dec
xchg
xchg
push
cld
outsl
sub
sbb
loop
mov
sbb
fs
lock
and
fisubrl
test
jns
loop
test
jne
sub
sbb
jge
int3
iret
jns
add
test
push
popa
hlt
std
adc
sbb
mov
mov
mov
arpl
and
rcll
cltd
xchg
jo
push
adc
sub
je
fadds
inc
cli
hlt
sub
mov
lea
mov
pusha
xchg
pop
xor
out
jne
fimull
fldt
leave
xchg
iret
loopw
subl
daa
mov
add
pop
dec
je
icebp
jne
repz
mov
testl
hlt
jno
sub
inc
sbb
push
fcmovnu
xor
test
mov
pop
mov
xchg
scas
lea
stos
fwait
insl
call
andl
pusha
pop
pop
mov
dec
pop
mov
enter
lret
arpl
sarl
jnp
test
and
lcall
out
test
arpl
mov
loope
push
cmp
xchg
lcall
out
push
movsl
fbstp
fmull
fcmovbe
xor
adc
jecxz
pop
adc
fldl
push
xlat
mov
cmpsb
ret
nop
cld
adc
mov
jns
aaa
sbb
cbtw
sub
icebp
mov
loopne
adc
pop
cltd
int3
cmc
push
lods
sbb
leave
or
loope
orb
cmp
push
call
fists
ret
mov
sbb
pop
xchg
insl
mov
scas
cmp
dec
or
xchg
cmp
push
idivl
inc
dec
rclb
sbb
jnp
cmp
imul
icebp
aad
push
gs
or
daa
xchg
gs
xlat
stos
jb
enter
rorl
sti
inc
imul
data16
inc
pop
mov
shl
jo
aad
mov
fisttps
adc
jnp
cwtl
push
in
or
fldenv
xchg
dec
sarl
mov
icebp
mov
loope
and
xlat
pop
sbb
clc
dec
ljmp
sar
mov
icebp
std
jmp
sbb
js
ja
jnp
and
lock
sbb
rcl
push
je
aam
mov
fs
notl
cmc
add
cmp
mov
dec
lds
xchg
sub
sahf
stos
ss
jb
push
or
loop
xchg
inc
int
xor
insb
into
mov
pop
cmp
or
sub
adc
mov
les
lahf
int
lods
mov
stc
shl
inc
dec
dec
rcll
xor
je
rcl
sbb
loope
dec
lahf
xor
add
add
xor
popf
sub
or
adc
fprem1
pop
xor
aas
and
stos
adc
cld
mov
xchg
shll
loope
test
mov
sbb
lods
fdivs
mov
fwait
or
popa
dec
jg
insb
repz
sahf
aas
insl
xor
mov
jecxz
push
lahf
cs
jge
and
mov
sbb
jb
outsl
jbe
pushf
popf
adc
cmp
sub
in
cltd
cmp
fsub
push
sti
or
cmp
lods
lods
mov
pop
clc
xchg
jmp
push
jge
cltd
leave
jp
cmp
cmpsb
mov
sub
rol
adc
adc
pop
cmp
ja
pushf
aaa
mov
mulb
in
addl
call
les
adc
rorb
or
add
movsb
sti
aaa
nop
xchg
sub
lea
fwait
test
aad
or
dec
push
addl
cmp
stos
adc
imul
nop
rcrl
push
loop
and
cmpsl
shrl
daa
mov
rcrb
inc
xchg
jecxz
cli
push
rorb
sbb
sbb
jle
sbb
out
jbe
data16
loop
stos
clc
sub
dec
js
daa
add
outsb
test
insl
int3
cmp
loopne
adc
sbb
xor
fcmovb
movb
cld
cmp
push
aam
cwtl
js
pop
notb
int3
fsubs
mov
sbb
mov
push
inc
add
fisubl
imul
test
inc
pop
mov
cmp
push
ss
jmp
daa
mov
mov
and
jno
dec
or
push
les
cmpsb
cmp
sbb
inc
mov
pushf
jg
popa
dec
lcall
sahf
jmp
push
std
sbb
call
add
cwtl
sub
stos
out
mov
test
or
cmp
jl
insl
mov
push
addr16
fbld
or
xchg
inc
prefetcht2
xor
test
jnp
andl
loopne
mov
sti
lds
call
pop
ds
iret
push
cmp
lahf
shlb
and
cli
je
xchg
dec
std
dec
jmp
sub
jne
xchg
rorl
clc
inc
add
mov
mov
lock
dec
cmpsb
hlt
mov
mov
inc
mov
cs
add
int3
xor
lea
mov
stos
jge
mov
lds
hlt
xor
inc
jne
cmc
movsl
pop
shrb
cld
jns
out
sahf
lea
sbb
insl
jo
cmp
loopne
cld
fwait
aaa
cs
sub
loopne
jae
addr16
out
jg
dec
push
aas
inc
ret
call
movsb
mov
sub
push
adc
push
lret
int
in
mov
loopne
mov
lds
fadd
gs
cmp
mov
stc
and
inc
cltd
movsl
and
iret
xchg
fimull
add
fstl
orb
ljmp
test
adc
pushf
cltd
cmpsl
cmp
inc
and
xor
test
mov
cwtl
xchg
inc
pop
mov
mov
sub
jecxz
mov
bound
cmpsl
jb
adc
pop
cmp
movsb
cli
stos
adc
and
out
sahf
add
cmp
jo
or
pushf
cmp
loop
enter
sahf
sbb
xor
or
mov
and
aaa
repnz
dec
das
push
mov
sti
movsb
dec
addr16
cmp
test
and
aam
adc
mov
and
mov
xor
inc
adc
sti
jp
pop
daa
es
jecxz
in
mov
dec
cmp
xor
les
jo
pop
rep
and
sbb
ficoml
inc
adc
or
add
mov
dec
and
mov
xchg
mov
insb
sahf
cmp
push
jmp
jae
push
mov
push
inc
cmp
fcmovne
subl
icebp
pop
scas
push
add
dec
inc
mov
cmp
repnz
jecxz
sub
sbb
add
in
dec
or
ret
jns
cmpb
dec
stos
pop
movsl
dec
daa
shrl
mov
mov
xchg
cs
push
hlt
ss
ja
sarl
jne
jnp
aaa
pop
cmp
push
xchg
je
add
stos
push
pop
cwtl
icebp
pop
or
sbb
jmp
mov
test
mov
sub
jge
cmp
mov
mov
mov
cmp
pusha
pop
ds
stc
jmp
fidivl
inc
insb
shlb
xor
pop
dec
inc
mov
push
and
inc
pop
and
dec
adc
mov
shrb
and
xorl
rcl
imul
xchg
add
xor
outsb
xlat
or
jns
ret
adc
icebp
into
sub
add
roll
rolb
aaa
xorl
ret
adc
mov
out
outsl
ja
imul
fs
sub
and
mov
aaa
jno
lock
add
fs
add
ja
leave
fwait
sub
test
popa
fisubrs
xor
or
mov
jmp
pop
adc
mov
lds
xchg
cmp
cmpsl
addr16
pop
outsb
fldcw
jnp
das
sarb
cmpps
movsb
loopne
mov
sub
das
aad
sub
mov
fisubrs
sysexit
adc
push
enter
jo
push
lods
cmp
sbb
inc
loope
std
outsb
enter
test
stos
adc
daa
or
dec
stos
xchg
fbld
pop
aad
push
clc
lock
ficomps
xor
xor
gs
xlat
jge
mov
leave
dec
test
sbb
push
adc
es
test
mov
jg
and
xchg
mov
sbb
mov
subb
ja
dec
call
mov
test
xchg
fcomps
mov
jle
fidivrl
mov
loope
xchg
int3
inc
sbbl
xchg
cmp
into
push
adc
mov
sub
sbb
mov
aad
jl
std
mov
stc
pop
sbb
jns
push
stc
fstpl
mov
pusha
sbb
mov
xor
xchg
cmp
test
lret
sub
je
int
inc
sub
dec
dec
cmp
push
pusha
sub
mov
pop
in
call
rcrb
loop
out
cmp
stos
icebp
sbb
xchg
hlt
add
jp
in
dec
xchg
jno
cld
shll
into
clc
xchg
cwtl
jecxz
cwtl
insl
icebp
outsb
push
mov
xor
mov
jecxz
loop
test
or
or
mov
lea
xor
xchg
iret
sbb
cmpsb
sbb
dec
out
mov
imulb
mov
mov
cmp
les
icebp
dec
aas
mov
jmp
fistps
pusha
stos
push
cmpl
pushf
stos
mov
add
pop
dec
aas
inc
cmp
mov
mov
mov
mov
xlat
scas
and
rcrl
pop
in
push
lds
repz
cmp
mov
fistps
imul
sub
adc
arpl
andb
ret
inc
lret
ficompl
cmp
aad
cli
negl
adc
dec
icebp
js
lret
mov
pop
jl
and
adc
cmc
icebp
mov
pop
xchg
adc
inc
movsl
cmpl
pop
jmp
push
scas
movsb
andl
mov
insl
jmp
js
sub
cwtl
xchg
xchg
lret
sar
sub
pusha
cmp
push
add
fcmove
das
iret
and
call
add
insb
push
sbb
je
push
add
mov
mov
or
add
push
jmp
stos
add
lock
cltd
popa
shll
sahf
scas
lcall
shl
nop
jns
addl
repnz
cltd
xor
and
out
sub
fisubs
xor
lods
out
shll
cmpsb
mov
pop
sahf
jl
pop
jo
shlb
dec
call
jbe
movsb
mov
cmp
mov
fmuls
lea
mov
xor
sbb
mov
add
mov
std
pop
test
sbb
dec
loopne
push
add
gs
subb
jae
mov
adc
xorb
in
lods
cmpsl
mov
or
testb
jo
into
push
adc
xor
xchg
inc
mov
ja
bound
dec
mov
sub
out
mov
jl
fdivrl
or
movsb
aad
in
mov
jg
lods
aas
push
add
sub
xchg
xchg
aas
test
inc
jb
xlat
cld
out
mov
gs
ficoms
add
jmp
xchg
in
or
cmp
loopew
add
stos
daa
pop
mov
out
pcmpeqd
shll
test
and
xlat
or
mov
jg
push
call
idivl
lods
clc
pop
ja
lock
in
in
iret
lret
scas
inc
fisttps
scas
das
add
insb
adc
xor
mov
add
sub
and
add
daa
movsb
shlb
scas
cwtl
aaa
lds
or
push
jne
filds
xor
inc
dec
in
sbb
cmc
setns
insb
lret
jmp
mov
loopne
inc
mov
sub
and
and
sbb
adc
cmp
jl
jge
movsb
add
lcall
push
xor
cld
aaa
pop
sbb
or
mov
or
and
cmp
ficoms
inc
jae
mov
cwtl
jb
test
xchg
pop
and
mov
jl
movsl
dec
stos
idiv
out
push
and
xchg
jo
hlt
xor
fcmove
jp
cwtl
pop
push
inc
sbb
sub
mov
push
lock
fwait
mov
decb
mov
aas
dec
inc
dec
orl
insl
and
mov
inc
ljmp
mov
lock
insb
popl
cmc
mov
sub
pop
out
aaa
js
jbe
fs
mov
fiaddl
outsb
pop
jns
and
loopne
out
incb
pop
xor
fs
inc
inc
and
pop
add
mov
lods
dec
icebp
push
lock
addl
pop
movsb
inc
lea
mov
cli
rcll
xchg
sbb
and
xchg
rclb
sbb
mov
jae
jmp
sbb
loop
sub
jb
aaa
push
mov
adc
orl
dec
adc
push
xchg
lds
push
xor
in
mov
into
add
sub
bound
aaa
out
rclb
pusha
mov
pop
cmpb
sbb
xchg
fdivs
jno
fs
testb
icebp
lret
rcll
add
insl
adc
es
dec
shl
push
in
and
xchg
ljmp
mov
call
push
push
xchg
or
mov
push
lods
negb
adc
sbb
scas
push
add
mov
call
jnp
loopne
dec
test
jmp
cltd
jp
ret
imul
xchg
sub
adc
cmp
pop
negl
add
cli
sarl
aam
lcall
dec
mov
jp
sbb
in
push
lret
and
lcall
or
inc
add
dec
dec
out
data16
mov
int3
cmp
or
sbbb
and
aaa
push
nop
lea
fstl
dec
cmp
or
insl
inc
cmc
sbb
or
mov
into
jp
sbb
dec
dec
decb
sti
fwait
aam
and
cli
lea
inc
cmp
nop
inc
leave
leave
dec
lahf
xchg
sarb
ljmp
lret
psubusb
lock
mov
or
pop
lea
leave
ljmp
jo
push
out
out
jmp
and
xchg
test
das
jae
pop
imul
lret
mov
outsl
pushl
xchg
mov
pop
clc
insb
xor
lret
inc
xchg
std
xchg
stos
std
cmpsl
sub
inc
mov
cwtl
push
mov
lock
cld
mov
cmp
cmpsb
in
outsl
repnz
sbb
repnz
dec
loope
xchg
inc
adc
sub
dec
xor
inc
pop
sub
es
pop
leave
mov
decb
xchg
shl
xor
pop
dec
mov
sub
sti
test
mov
pop
call
push
cmp
sbb
mov
lcall
das
cltd
aad
jnp
aaa
lea
pop
lods
or
sub
sub
fldcw
mov
mov
fst
xchg
aas
and
jbe
xor
cmp
in
outsl
fstl
rcl
add
in
or
into
mov
and
aad
mov
fcompl
test
data16
add
in
xchg
scas
loop,pt
mov
out
das
xchg
pop
in
insb
in
pop
inc
jecxz
lods
push
outsb
into
sahf
jbe
ret
ret
jno
ffree
mov
and
dec
cmp
cmp
dec
sbb
icebp
out
add
sub
push
sub
and
sbb
pop
xchg
or
mov
push
adcb
stc
jae
int3
imul
xchg
adc
pop
adc
insl
xchg
mov
mov
and
dec
cli
cli
push
sbb
add
stos
arpl
xor
cmp
jl
or
xlat
mov
popf
inc
jg
les
hlt
outsb
ss
shr
sbb
call
out
inc
add
or
cltd
jbe
adc
cld
add
jmp
out
scas
lods
je
idivb
or
repz
mov
ljmp
and
xor
mov
add
push
pop
mov
dec
cli
imull
and
ret
inc
pop
in
push
ds
xor
rorb
inc
mov
push
adc
or
scas
outsl
lods
out
lods
cmc
stos
unpcklps
inc
adc
cmp
aad
into
out
pop
loope
dec
mov
or
jo
pop
sahf
filds
rorb
xchg
clc
sbb
mov
cmp
idivl
dec
scas
add
jecxz
ja
fmuls
sub
pushf
fnstenv
add
lahf
loopne
mov
loopne
call
mov
jge
cmpl
mov
adc
push
lock
or
mov
hlt
in
sub
jns
push
dec
xchg
push
popa
rclb
sub
mov
adc
decb
push
mov
xchg
adc
add
inc
mulb
aad
test
int3
in
andl
scas
int
or
test
aad
aad
sbb
das
xchg
cmp
test
icebp
fisubl
dec
jb
in
add
popa
xor
mov
ficoml
out
mov
xchg
aam
dec
test
cltd
pop
cli
fsqrt
sarb
sbb
xchg
out
cmc
ljmp
inc
std
pop
pop
enter
ficoml
test
or
dec
and
ljmp
leave
les
inc
pop
xor
sub
dec
jb
sahf
insb
sub
clc
aas
dec
mov
dec
mov
jne
int3
cmp
inc
std
push
rcrl
insb
pop
xchg
test
stc
jne
cmpsl
fldcw
xchg
jmp
xchg
lahf
pushf
jno
ja
popf
inc
jge
adc
adc
subb
xor
cmp
fs
sub
push
dec
aas
scas
dec
adc
pop
xor
push
cmp
lods
rorl
add
adc
pop
lods
xor
dec
mov
push
xor
pop
push
movsl
pop
mov
lds
inc
xchg
mov
sub
orb
and
fsts
push
add
push
dec
popw
jl
rcrb
inc
rorb
enter
js
pop
inc
insb
orb
fwait
outsl
lret
insl
lods
and
aad
sbbb
fucomip
push
or
mov
mov
mov
xchg
jmp
scas
jnp
or
test
pusha
add
mov
mov
sbb
cmpsl
fwait
mov
mov
ret
dec
add
daa
sahf
popf
loop
negb
cmpsb
int
push
inc
jnp
lcall
and
outsl
xchg
ror
inc
cmp
pusha
out
dec
mov
or
and
jae
xchg
cs
rcrl
jecxz
jmp
subl
xor
mov
push
mov
xchg
leave
sbb
and
in
movsl
ds
jp
jae
mov
lods
aas
push
xchg
pop
dec
movsb
movsb
pop
stc
jbe
mov
pop
insb
cmp
push
divl
roll
js
mov
es
push
fmul
arpl
repnz
xchg
sub
and
fcoml
push
lods
sbbb
mov
or
test
dec
lds
shl
and
mov
shrl
dec
shlb
leave
es
pushf
and
jae
add
jnp
fdivrs
es
sarb
fnstenv
push
test
test
ret
and
and
mulb
xchg
jne
sbb
ror
addl
test
lahf
es
out
ja
lods
test
popa
call
loop
movsb
cmc
xlat
adc
and
pop
shl
out
rorl
jne
std
push
jmp
or
cmpsl
lret
adc
xchg
out
jmp
sahf
ret
mov
fwait
dec
inc
or
or
cmp
daa
lret
jae
and
shl
push
mov
sub
pop
cmp
or
stos
test
leave
loop
push
lcall
jns
pop
pusha
dec
push
aaa
sub
add
fidivl
or
cmp
int
cld
in
lret
or
loop
sti
loop
mov
scas
out
mov
out
xor
call
pop
xor
sti
or
xor
bound
xor
and
add
fsts
negb
pop
sub
loop
in
popa
lret
sarl
jnp
push
clc
or
mov
sub
outsb
fidivl
je
fwait
int3
cmpsb
dec
xor
jns
out
ficompl
add
xlat
push
enter
pop
push
ds
dec
pushf
push
movsb
jl
scas
loop
xor
cmp
mov
daa
sbb
add
and
outsl
adc
mov
jnp
and
cld
inc
in
jle
pop
dec
cltd
sar
clc
rolb
xor
ret
js
jns
adc
sub
cmp
fadd
std
dec
negl
imul
in
xor
dec
lods
pop
mov
push
jl
sub
addl
inc
stos
xchg
addr16
into
push
or
mov
enter
insl
push
cmp
clc
push
mov
loope
roll
mov
inc
loopne
loop
dec
popf
and
mov
push
hlt
shlb
mov
outsb
adc
dec
int3
icebp
insl
andb
rolb
xor
push
bound
inc
inc
mov
ds
js
pop
mov
movsl
cltd
ret
aas
adc
jg
out
es
cmp
into
sbb
mov
jno
mov
or
inc
sub
fdivr
add
jl
cmp
pusha
sub
and
xchg
cmp
xorl
sbb
adc
dec
fadd
bound
mov
xchg
push
mov
push
jmp
mov
mov
jno
sub
js
jle
xor
mov
sarl
addr16
fs
or
and
pusha
in
dec
ror
xor
in
das
sbbl
loop
int3
js
jns
mov
aas
sub
push
and
mov
outsl
push
push
pushf
hlt
lret
inc
mov
data16
push
mov
leave
stc
xchg
push
cmp
push
shlb
insl
xlat
mov
stos
mov
or
sbb
sbb
enter
xor
lcall
add
cli
pop
xor
jo
loop
ljmp
jp
fcomps
sar
lods
out
mov
inc
jb
jbe
pop
cli
or
das
movb
dec
mov
pop
leave
jge
call
cmp
add
mov
ljmp
scas
mov
das
dec
xchg
shlb
sbb
cmp
sub
test
dec
fwait
leave
adc
repnz
or
je
loopne
out
dec
mov
fadds
lahf
adc
jns
shl
push
pusha
fwait
jnp
jnp
loopne
push
adc
es
jnp
xor
pop
fisubrl
or
fidivrs
xor
hlt
xchg
aad
mov
ljmp
push
outsl
repnz
iret
push
je
push
pop
pop
lds
cmpsl
pop
addb
scas
jnp
adc
negl
fbld
mov
push
cltd
xor
push
cmp
inc
xchg
test
push
adc
insb
cmp
sub
and
sahf
xor
add
out
push
pop
and
xchg
imul
mov
inc
push
add
jo
xchg
test
popf
mov
popa
movsl
dec
add
jl
roll
fwait
xchg
mov
jl
jle
cmp
cmp
sub
repz
sbb
aad
adc
and
lahf
sub
jecxz
aaa
jecxz
push
xchg
xchg
test
xor
push
push
jno
hlt
push
dec
faddl
xchg
out
mov
push
cmp
cmpsl
sbb
dec
aaa
cs
sti
jns
xchg
add
iret
movsl
xchg
jns
xchg
ljmp
sbb
mov
ja
xor
push
inc
sahf
mov
sbb
stos
shll
enter
mov
imul
xchg
int3
sub
ljmp
xor
mov
stc
psrlq
xchg
adc
add
js
mov
insb
push
jg
push
clc
inc
call
jecxz
mov
mov
jecxz
push
shll
inc
cmp
aad
scas
mov
mov
and
sbb
mov
arpl
popa
sub
pop
xchg
inc
adc
inc
mov
mov
mov
stc
cmpsb
sbb
mov
mov
js
pop
mov
in
das
data16
int3
dec
jecxz
push
sub
add
or
xchg
mov
lea
stos
testb
lahf
lods
cwtl
stos
pop
pop
sar
aas
insl
mov
xor
sbb
push
inc
push
movl
int3
adc
aas
add
mov
aaa
xchg
inc
mov
mov
dec
sub
add
mov
inc
xchg
addr16
sbb
cmp
jns
sbb
mov
add
clc
add
mov
xchg
push
rcrb
xlat
test
arpl
add
push
jmp
pop
negb
adc
in
shlb
clc
ret
pop
loopne
mov
and
pop
lret
insb
or
test
inc
cli
aas
lods
add
adc
test
mov
push
adc
push
push
sub
rclb
rcl
cltd
xchg
imul
stos
add
xchg
inc
jae
push
and
lret
test
pop
push
mov
aas
stc
imul
aas
cli
xor
adc
sub
or
inc
in
dec
fstps
jg
test
mov
aaa
fcoms
and
testl
pop
push
mov
fists
test
jg
je
jge
div
mov
sub
out
jp
mov
out
test
fwait
mov
push
lods
sbb
daa
addl
push
cwtl
je
xlat
dec
mov
xchg
xchg
int
pop
mov
aam
loop
pop
ss
shrl
push
and
sbb
test
sbbl
imul
enter
notb
fsubs
add
aas
scas
adc
mov
daa
ret
sub
sbb
leave
mov
jg
and
cmp
mov
repnz
cld
pop
int
loopne
mov
xorl
mov
gs
clc
sub
fstps
int
fsts
imul
ds
test
xlat
cmp
pop
cs
shrb
jp
mov
pop
insb
and
cmp
inc
dec
lea
or
adc
push
xchg
ror
xchg
pop
orb
movsb
mov
insb
hlt
lcall
int3
sbb
xor
dec
xor
xchg
ret
lods
xchg
fmul
sub
pop
fcomps
mov
mov
stc
push
aas
and
sbb
fldenv
jnp
and
jecxz
xchg
cwtl
loope
mov
out
jmp
ljmp
and
lcall
sbb
or
lret
shrb
push
xor
cli
sub
mov
icebp
int3
cli
arpl
and
popf
push
mov
push
rcll
push
and
sbb
lret
mov
int3
xchg
xor
aam
aas
mov
sub
adc
cld
xchg
stos
daa
std
push
stos
sub
fdivrl
mov
aad
dec
push
outsl
cmp
cmpsl
dec
cmpb
cmp
lahf
ret
sub
or
and
dec
mov
pop
jecxz
out
nop
fldenv
xchg
ljmp
out
sub
bound
mov
jle
int
mov
add
xor
insb
mov
call
pushf
mov
push
cmc
xlat
xor
sarb
cmp
mov
inc
mov
icebp
adcb
mov
fcompl
dec
inc
fdivs
cmp
out
cs
iret
cmpsb
scas
ljmp
in
aam
inc
cmp
mov
jae
shrb
push
cmpsb
cmp
loop
lcall
aam
pop
les
push
push
xlat
rcrl
cwtl
stc
mov
test
mov
jecxz
stos
push
xor
push
loop
mov
xor
test
jns
pop
inc
enter
in
movsl
cmc
loopne
mov
push
mov
scas
xchg
xor
mov
les
mov
repz
jo
movsl
mov
or
cmp
and
add
sbb
adc
mov
or
inc
mov
or
aad
int
out
pop
push
cltd
mov
hlt
pop
adc
or
fstps
cltd
test
pop
pop
pushf
cli
and
dec
dec
loope
mov
imul
fucomip
xor
mov
setp
or
push
dec
ds
loopne
xchg
push
or
sub
into
push
pop
ja
adc
pushl
jle,pn
inc
jmp
xor
ds
divb
loopne
cmp
inc
fnsave
pop
ret
xor
cmp
scas
pop
in
push
insl
fs
sbb
cwtl
loope
or
lahf
stos
jmp
shrb
mov
faddp
out
pop
arpl
nop
lds
outsb
cli
fisubl
sar
ss
xchg
jge
fidivs
enter
dec
pop
add
or
and
mov
pop
sti
dec
sbb
fdiv
daa
insl
and
and
and
or
mov
cld
pop
les
and
or
jmp
aaa
lods
cmp
pushf
test
or
add
mov
cmpb
or
cltd
inc
fidivl
mov
push
into
lahf
push
add
jb
mov
jbe
fnsave
xchg
xchg
jns
mov
push
or
dec
push
jge
cmp
lcall
sbb
in
mov
jl
leave
and
mov
lods
mov
lahf
cmp
int3
mov
movsl
test
xchg
mov
jnp
jo
inc
nop
add
pushf
push
mov
shr
jle
jae
dec
movsb
cwtl
lret
dec
insl
fwait
mov
ds
mov
add
inc
lds
lock
and
xlat
jle
int3
es
xchg
xor
loopne
mov
xor
push
pop
push
mov
inc
and
ljmp
aas
xor
or
dec
aam
loopne
jge
xor
pop
loop
pop
and
loopne
rcll
mov
mov
or
lods
jne
jne
dec
es
mov
cmp
cli
lods
lret
add
pop
mov
jmp
inc
std
xlat
cld
ud0
mov
xchg
scas
ror
cmc
inc
or
dec
cmc
insl
sub
mov
imul
add
mov
nop
adc
js
sub
icebp
cmp
jmp
mov
and
mov
scas
aad
icebp
and
mov
and
dec
adc
mov
jp
dec
pop
or
pop
xchg
rcrb
mov
push
dec
lret
rclb
ret
in
push
jmp
jbe
cld
jmp
bound
ret
mov
incb
cmp
dec
xor
jl
sub
pushw
imul
lret
ret
and
iret
jmp
pop
xchg
fnstcw
sub
adc
inc
inc
call
push
enter
mov
je
ds
in
push
mov
pop
test
inc
pop
fs
or
mov
mov
inc
lds
xchg
jns
ficoml
rcr
push
into
xchg
pop
incb
adc
or
dec
fwait
aaa
cmp
icebp
dec
insl
mov
call
xor
dec
and
orl
out
pop
lcall
pop
mov
ret
sub
fcomp
pop
sti
loopne
loop
mov
or
pushf
mov
mov
jg
pop
gs
addr16
ss
jle
les
mov
add
push
popa
dec
mov
mov
inc
es
out
mov
dec
xchg
push
mov
xchg
dec
mov
and
lret
xor
xor
mov
add
and
cwtl
mov
negb
aad
aam
pop
and
ja
xchg
sbb
jb
mov
inc
iret
inc
cmp
int
leave
mov
mov
repz
imul
insb
jnp
inc
enter
xor
jg
jle
ds
pop
push
mov
cmp
add
andb
add
imul
sub
cmpps
jp
adc
sbb
or
out
push
push
cmp
aaa
lret
test
ljmp
loopne
xor
add
push
push
ja
iret
scas
shrb
popa
lret
cmp
sub
in
and
push
cld
xlat
sbb
insb
fildl
data16
adcb
aad
jl
add
add
mov
mov
shll
cmp
scas
cmc
sub
aam
cmp
and
loop
jg
mov
pop
shrb
xchg
and
aaa
jl
cs
mov
loop
icebp
or
jo
sar
aam
rorb
pop
lret
pop
ljmp
adc
ficomps
cmp
inc
sub
mov
out
cmpsl
aam
sbbb
loop
sub
inc
test
xchg
inc
jo
stos
mov
cmp
mov
movsl
mov
hlt
ljmp
mov
push
popf
sarb
inc
loopne
add
aas
aas
stos
rorl
sbb
inc
into
std
test
filds
repz
pop
dec
sbb
cmpsl
cltd
jb
mov
in
sub
test
dec
mov
iret
jne
jecxz
add
fwait
aaa
mov
xorb
adc
add
test
or
mov
or
jne
movsb
push
sub
je
xchg
mov
int3
mov
cmc
push
jmp
out
fidivl
stos
es
cmp
fcomi
add
insl
mov
in
sub
les
sub
outsb
dec
inc
pop
pop
popf
je
add
jno
stos
jecxz
std
data16
or
jne
pop
push
fstl
cwtl
pop
movsb
aad
mov
lods
int3
fisubrl
jnp
push
sbb
rolb
push
gs
xchg
mov
insl
sbb
lret
jg
mov
in
sahf
jb
push
mov
arpl
and
je
adc
inc
inc
orl
xorb
mov
call
or
in
jg
bound
idivb
jecxz
enter
popa
int3
mov
cmp
lret
mov
cmpsb
fdivl
in
jge
push
sub
lods
les
faddl
in
inc
test
js
imul
lret
pop
testl
shlb
cli
add
xchg
aas
shl
ljmp
gs
ficoml
cmp
mov
icebp
push
push
jmp
lods
sbb
call
stos
addr16
clc
repz
jge
dec
enter
fldenv
imul
lock
in
xor
push
rcr
xlat
stc
mov
movsb
daa
adc
push
clc
inc
jmp
bts
mov
das
arpl
xchg
mov
xor
mov
add
push
sub
or
js
leave
call
lcall
cmc
nop
iret
adc
xchg
mov
pop
jmp
or
cmp
jge
loop,pt
int3
mov
sahf
push
inc
mov
ret
push
or
lret
gs
inc
fcomi
xchg
inc
sub
lret
iret
lods
adc
repnz
mov
jl,pn
jge
or
mov
pop
stc
mov
dec
in
lret
xchg
mov
jge
movsl
mov
in
sub
arpl
stos
mov
pushf
pop
out
mov
leave
push
sarl
cltd
xor
rcrl
xchg
jecxz
or
mov
adc
fdivs
or
bound
mov
jbe
iret
testb
push
xor
sub
cs
and
aam
add
les
test
cli
out
mov
insb
adc
stos
pop
js
inc
mov
adc
ret
not
adc
outsl
loope
add
nop
popa
nop
loope
dec
stos
sbb
cmp
int
mov
idivl
jns
js
and
call
xor
mull
fmul
pushf
cmp
sti
inc
fwait
rol
pop
cmp
inc
ret
pusha
mov
pop
xor
lret
add
cmp
cs
pop
fcomps
pushf
movsb
aaa
inc
cs
dec
and
xchg
or
dec
in
test
inc
and
call
movsl
and
cmovg
hlt
dec
insl
mov
out
cmp
hlt
push
dec
das
push
jne
sbb
fists
sbbb
jo
test
scas
das
aas
sub
rol
sahf
mov
dec
jl
mov
pop
loope
sbb
mov
js
adc
adc
lock
adc
fisubl
adc
xchg
int
push
sub
jb
inc
mov
dec
xchg
out
rorl
add
adc
adc
cltd
pop
aam
repnz
cmp
ficomps
lcall
or
ret
pushf
jg
mov
push
cltd
ljmp
xor
clc
cmp
nop
push
mov
out
ljmp
or
push
jg
test
cli
xor
xor
int3
stc
cmp
daa
adcl
xchg
add
xor
add
jecxz
scas
inc
ret
pop
xchg
fld
int
insb
jne
test
inc
ja
bound
adc
lahf
push
negb
les
out
push
or
xor
fcmovnb
jo
test
stos
pop
imul
nopl
rorl
mov
push
jmp
push
popf
int
cli
sub
add
imul
mov
lret
push
sub
mov
scas
mov
loope
push
negb
orb
lods
sub
mov
loopne
pop
repnz
xorl
xchg
jne
fidivl
ja
inc
repnz
jmp
jb
imul
inc
push
pusha
repz
xchg
fldt
mov
mov
or
bound
lock
arpl
rorb
and
movsb
mov
jb
xchg
pop
test
int
mov
xor
out
or
dec
out
or
pushf
pop
shl
pop
fwait
inc
shl
sahf
data16
andb
jmp
or
xor
nop
mov
or
jecxz
arpl
pop
add
adc
jo
jne
sbb
aaa
push
fdivrl
xorl
mov
sahf
push
sbb
lea
jg
out
pop
testb
lds
movsl
cltd
mov
cmp
inc
shrb
mov
push
lahf
lret
sub
mov
addr16
stos
ds
mov
mov
xor
pop
popf
push
jp
cmp
inc
ss
loop
daa
in
fldcw
cmp
inc
testl
and
mov
lock
cmp
int3
aam
int
sbb
cmp
das
add
and
aas
shlb
jnp
test
call
mov
lock
mov
jmp
xor
in
cmp
jle
sub
mov
xchg
fsubs
daa
enter
push
pop
test
adc
mov
mov
outsl
cld
sbb
mov
fidivrs
shlb
mov
psubd
mov
outsb
fmull
jge
mov
ljmp
sbb
or
pop
and
loope
xchg
gs
cmp
pop
xor
or
lods
mov
repnz
pop
int
outsl
xor
lods
leave
orl
int3
outsb
in
mov
sub
jmp
lock
ficompl
stos
addr16
mov
mov
fwait
mov
lcall
or
pop
mov
mov
mov
loopne
push
dec
and
mov
sub
pop
mov
fs
and
mov
jno
push
mov
addr16
pop
and
icebp
lods
mov
cmp
ljmp
mov
sub
cs
aam
mov
lcall
sbb
and
pop
jb
scas
iret
in
aad
pop
pop
push
xor
stos
xor
scas
movsb
scas
cmpb
cmp
bound
adc
std
arpl
push
sub
xor
mov
xor
adc
fbstp
mov
mov
jmp
mov
rorb
add
add
cli
add
jo
ficompl
pop
or
test
mov
pop
and
mull
inc
bound
mov
test
cmp
addb
das
lds
inc
out
inc
cwtl
insb
push
test
ljmp
in
push
int
movsb
insl
dec
and
jmp
xor
rol
into
dec
push
or
fcomps
and
mov
adc
fcmovnu
std
fcmove
jb
popa
in
push
jle
mov
jae
sub
jge
les
inc
and
mov
notl
ret
scas
push
pushf
addr16
shlb
in
in
insl
inc
add
pop
cmpsb
add
xor
dec
repnz
subl
imul
mov
fmuls
sarb
aas
lods
aas
hlt
inc
jge
dec
push
lds
lcall
inc
rcrl
pop
pop
xor
jbe
mov
aam
xchg
mov
mov
sub
mov
es
push
push
scas
jl
in
scas
and
push
add
xchg
clc
lcall
clc
call
add
mov
arpl
jle
xor
cmp
in
and
xor
cmp
rorb
mov
cltd
cltd
inc
cld
leave
push
adc
add
andnps
js
push
test
leave
mov
xor
sbb
dec
movsb
ja
mov
mov
cmp
subb
jno
jno
insl
or
sub
repz
repnz
popa
mov
and
pop
loope
push
stc
mov
lahf
sbb
mov
aas
adc
xchg
adc
sahf
scas
jne
sub
dec
jle
mov
jno
dec
enter
idivl
mov
sub
insb
inc
aaa
lret
pusha
sub
add
inc
inc
jo
out
loop
test
xchg
xchg
cmp
add
enter
jmp
sahf
out
sarb
mov
jne
sbb
jmp
and
test
jmp
je
pusha
jecxz
imul
outsl
mov
push
leave
ret
je
ja
sbb
inc
ljmp
sbb
lods
sti
jnp
sahf
pusha
call
inc
mov
mov
std
mov
push
enter
xchg
inc
xchg
pop
addr16
sub
add
xlat
fidivs
jns
pop
mov
lret
stos
jge
lock
pop
repz
mov
mov
xlat
shrb
scas
mov
xchg
mov
rclb
push
dec
fiaddl
or
cli
cmpsl
mov
sub
adc
aas
cmp
mov
loop
push
fs
insb
adc
jno
ds
inc
in
cmp
xchg
mov
dec
cmc
jb
mov
sub
js
push
jae
sbb
xchg
mov
les
shrl
orl
jmp
mov
push
arpl
stc
cmpl
bound
call
enter
xchg
ds
outsl
mov
inc
sub
pushl
pop
cltd
shrb
cmp
sbb
cwtl
mov
mov
sbb
inc
dec
xor
sbb
mov
idiv
pop
gs
das
dec
jnp
push
or
inc
jl
mov
mov
dec
shlb
adc
xchg
mov
insl
inc
add
sub
fistpl
push
cmp
cmp
mov
mov
cmp
inc
pop
fcmovnb
outsb
int3
pop
or
outsb
xor
movsl
inc
mov
xchg
mov
das
insl
sub
xor
cli
or
popf
test
data16
subb
outsb
jb
cmp
shlb
ud0
call
outsl
test
mov
fistpl
test
in
jecxz
jb
mov
arpl
add
and
repz
adc
inc
pop
xor
stc
aaa
sbb
push
jnp
subb
sbb
sbb
cmp
adc
ljmp
or
xchg
mov
sbb
mov
jbe
scas
int3
xor
fisttpl
adc
push
in
inc
mov
xchg
stos
sbb
push
mov
mov
sti
mov
mov
fcomps
or
xor
sbb
add
pop
mov
cmp
add
in
bnd
in
sub
xchg
subl
cld
aaa
fbstp
sub
lods
je
insb
insl
sub
push
cltd
pop
lret
inc
shlb
in
fists
jle
insb
mov
fsubp
pop
mov
or
ret
fldt
inc
test
dec
pop
fnstcw
shr
and
ja
lcall
ret
das
ret
dec
daa
mov
push
rcrb
bound
dec
in
and
mov
mov
movsl
aad
adc
test
in
or
in
shll
bound
xor
add
mov
mov
enter
stc
cs
pop
int
jo
xchg
out
bound
lds
xor
int3
repz
mov
inc
and
inc
cld
outsb
inc
push
dec
or
popa
mov
clc
add
cmpsb
xchg
inc
xlat
cmpsb
popf
les
push
dec
addr16
shll
in
cmpsl
cld
ror
pop
sub
pop
cltd
sbb
dec
cmp
pusha
lods
cmp
out
lods
jns,pn
push
mov
dec
dec
shlb
call
dec
xor
out
xlat
aad
clc
gs
push
cld
stc
mov
test
fbstp
call
inc
dec
mov
jb
sub
pop
call
popf
xor
das
addr16
imul
add
push
mov
pushfw
push
jno
negb
or
fstpl
mov
in
int3
jg
mov
xchg
insl
xor
mov
test
fildll
pop
cmp
fucom
push
test
jne
inc
xor
ret
xlat
stc
rcl
pop
jo
jns
iret
aaa
mov
outsl
inc
mov
punpckhdq
das
add
inc
add
mov
cmp
loop
int
mov
jne
js
sub
push
andb
xchg
or
dec
sbb
in
push
mov
mov
dec
pop
in
mov
mov
aam
jmp
mov
inc
popa
mov
sbb
mov
push
scas
jo
jp
inc
aaa
xchg
adc
jne
pop
inc
pop
jmp
aad
mov
lock
fsub
sbb
push
imul
mov
adc
fsubrp
mov
jno
es
sti
or
jae
stos
or
int3
cmpsb
and
push
shl
es
mov
imul
dec
shrb
negl
nop
pop
lcall
hlt
js
mov
dec
rcr
jp
fistpl
sub
or
sub
mov
inc
int
lahf
jb
inc
push
imul
or
fcmovnbe
push
out
pop
mov
push
out
push
jg
push
cmpb
dec
test
cld
push
mov
jmp
mov
xchg
mov
stos
es
push
sbb
cmp
les
mov
push
pusha
inc
mov
lret
hlt
outsb
and
hlt
mov
push
cmp
jo
test
dec
arpl
les
iret
or
mov
add
in
cs
repz
xlat
fcmove
stos
xchg
jbe
mov
dec
adc
adc
pop
test
aam
cli
add
push
xchg
fadd
ja
icebp
dec
push
insl
loopne
pop
jmp
loope
dec
inc
adc
scas
push
push
inc
or
je
clc
cwtl
sub
mov
lods
data16
mov
dec
out
mov
inc
pusha
sbb
enter
jno
in
push
das
mov
sub
add
add
cmpb
dec
pop
and
lods
dec
or
andl
daa
insl
cmpsb
icebp
cmp
mov
inc
xchg
ja
sub
lds
dec
and
dec
jg
lret
xchg
add
jbe
rcr
adc
mov
or
and
out
stc
gs
fdivp
dec
cmp
popa
repz
enter
cmp
sub
or
popa
jle
fs
dec
jmp
into
xchg
mov
or
cli
adc
push
and
cwtl
in
out
mov
ss
in
sti
mov
push
push
mov
jno
jecxz
mov
call
das
inc
aad
aas
jge
jnp
adc
pusha
loop
loop
xor
lret
adc
dec
test
and
mov
lret
in
sbb
add
sbb
outsb
pushf
enter
adc
insl
bound
push
push
adc
fildll
pop
rclb
mov
xlat
jmp
jbe
dec
xchg
jg
bound
imul
hlt
test
inc
scas
or
and
mov
int3
inc
mov
int
ret
sbb
test
sub
cmpsl
rorl
test
or
jle
and
pushf
cmpsl
frstor
ficoml
push
xchg
mov
inc
pop
mov
aad
jge
jecxz
xchg
inc
lret
stc
cmp
ret
add
mov
ja
movsl
mov
jbe
loopne
pop
inc
subl
mov
adc
stos
sub
dec
pop
bound
mulb
and
xchg
fsubp
je
popa
bound
stos
nop
lcall
call
push
lahf
addl
sbb
mov
dec
sbb
adc
fistl
pop
and
std
cwtl
shll
shl
psubusw
and
clc
insb
xor
jge
jns
test
dec
and
xor
cltd
leave
bound
mov
mov
fsubl
or
or
lods
aaa
push
xor
pop
jmp
aas
je
mov
add
mov
xorl
xchg
icebp
es
push
rcr
xor
jmp
jne
stc
jle
pop
ret
xchg
stc
xor
jns
jbe
flds
outsb
mov
mov
mov
repz
jb
mov
cmpsl
push
notb
jbe
xchg
mov
add
mov
xchg
inc
ja
fisubrs
adc
xor
inc
mov
cmp
ret
inc
or
xor
cmp
push
inc
push
lret
or
lock
aaa
inc
test
dec
add
xor
rcrb
xchg
or
adc
pop
push
mov
or
popa
aad
mov
add
or
mov
push
loopne
xor
js
data16
mov
decl
jg
or
std
in
sub
dec
jbe
xor
push
and
cmp
mov
jbe
and
cli
pop
popf
jecxz
aad
loopne
dec
mov
push
cmc
inc
imul
inc
lods
pop
inc
sub
push
inc
xor
mov
aam
divl
into
jmp
dec
add
jl
shrl
dec
push
out
mov
loop
inc
inc
in
test
scas
scas
aad
jmp
jne
mov
arpl
test
cld
xchg
aam
adc
mov
scas
adc
cmp
imul
icebp
add
pop
scas
sbb
pop
in
repnz
scas
add
pop
jge
mov
out
ret
das
insb
mov
push
lahf
inc
movsl
adc
dec
jecxz
cmp
imul
push
test
scas
pop
push
fcmovb
jbe
mov
hlt
out
ss
icebp
sbb
out
fcmovbe
cli
cmp
in
lds
jne
jge
xor
rcrb
test
push
ret
popa
inc
mov
adc
jg
stc
adc
mov
dec
outsl
inc
decb
scas
mov
jle
insb
xchg
inc
xor
arpl
leave
jbe
lods
dec
mov
mov
add
fsubs
sub
sbb
out
inc
loop
cmpsl
popa
pop
shll
out
int3
mov
stos
dec
mov
sbb
mov
push
inc
sbb
jp
ret
and
mov
mov
movsb
or
lds
xor
and
arpl
sarl
mov
cli
lss
in
jae
push
scas
cmc
xchg
mov
and
add
cmp
outsl
pushf
push
outsl
fcoml
or
call
ljmp
jno
cmp
pop
sbb
rolb
inc
or
lret
imul
mov
xor
mov
xchg
mov
repnz
nop
jg
dec
adc
mov
push
or
into
sub
imul
ljmp
xchg
mov
add
fwait
inc
and
add
jno
test
in
sub
and
hlt
jmp
pop
adc
fnstenv
in
push
mov
sti
imul
cmp
mov
mov
cmpsl
inc
add
div
xchg
jecxz
xor
push
div
jne
add
mov
ret
jecxz
pop
mov
and
xchg
xor
sbb
cmpsl
mov
dec
cmp
or
out
lock
xchg
sub
push
push
pop
xchg
xchg
mov
sub
data16
out
cmpsl
enter
dec
fidivrs
cmp
cmc
dec
icebp
xchg
jb
loop
cmp
fwait
aad
shrb
adc
and
js
out
loopne
pusha
push
shlb
in
shlb
mov
enter
repz
jmp
stc
sbb
inc
jno
nop
pop
dec
sbb
les
data16
sti
mov
jmp
orl
adc
cmp
inc
dec
call
incl
fsts
negl
dec
movsb
dec
dec
lea
sub
xchg
sub
out
jp
inc
fwait
sti
movl
jmp
loopne
lods
je
mov
or
call
push
mov
push
inc
jns
mov
xchg
jbe
insb
jecxz
cmp
outsb
je
pop
pop
xor
fistpll
pop
xchg
jl
daa
ss
pop
sub
cmpsb
add
sbb
daa
mul
pop
pushf
in
aad
sub
add
insl
icebp
cli
xor
adc
shll
mul
push
push
sbb
dec
nop
or
cmp
sub
inc
mov
lods
pop
arpl
fcompl
bnd
pop
cmp
lret
cs
repnz
cmp
ss
ror
arpl
cmp
iret
add
cli
je
jge
mov
int3
jmp
inc
xchg
mov
adc
cmp
ljmp
repnz
out
push
jp
ljmp
repz
sbb
sbb
fcomps
out
enter
pop
sub
mov
ja
push
cmp
fs
out
outsb
or
cmp
lods
jo
pop
mov
fwait
movsb
daa
adc
inc
push
sahf
stos
push
int3
pop
cmc
test
popf
push
sti
mov
mov
test
in
push
mov
cmpsl
call
pop
pop
xchg
adc
stos
ret
jo
js
and
mov
add
repnz
pop
sbb
jp
ret
adc
xlat
mov
mov
jo
and
lock
mov
adc
rorl
sbb
sub
ret
aaa
adc
jb
mov
and
js
mov
xor
lea
jge
jno
jo
mov
ljmp
mov
mov
dec
jae
push
fwait
jb
add
loop
adc
mov
fs
pop
in
jp
movsb
comiss
in
shlb
mov
rcrl
int3
loop
add
inc
sbbl
cmc
push
cld
or
jp
xchg
push
pop
stos
cmc
add
rorl
add
aam
push
dec
sub
sub
jge
cmp
xlat
call
data16
mov
mov
ret
es
or
test
in
cld
roll
mov
mov
dec
das
push
cmp
dec
xlat
fstps
out
add
popf
lods
xchg
clc
addr16
int
int
mov
fwait
cmc
or
xchg
loop
stc
xchg
xor
adc
adc
mov
rcl
xchg
js
hlt
mov
inc
xchg
xor
mov
jp
enter
or
xchg
ja
data16
pop
push
pushf
jp
jb
cmc
ja
in
pushf
mov
and
dec
je
dec
cwtl
inc
sbb
jge
scas
addb
xlat
mov
add
dec
ret
sub
cmp
push
add
adc
push
mov
fcomp
loope
je
xchg
stos
sbb
mov
mov
xchg
lret
outsl
ljmp
xor
sti
mov
out
cmc
cmc
sbb
sbb
mov
or
in
push
adc
add
sub
movsb
cli
xor
or
adc
sbb
aad
push
dec
andl
sbbb
xchg
jg
loopne
jae
mov
repnz
jp
inc
sub
fcoml
lcall
leave
shl
mov
movsb
scas
fldlg2
inc
movsb
cmp
fildll
add
adc
lret
out
je
add
or
loopne
outsb
inc
sbb
xchg
push
scas
lcall
test
xor
loop
int
cmp
stc
jo
pop
cmpsl
icebp
xor
dec
iret
xchg
scas
sub
jno
ds
xor
push
dec
sahf
out
xchg
mov
and
push
or
cmc
stc
jg
test
dec
jne
outsb
push
or
inc
push
xlat
sahf
jns
mov
or
sub
incb
xor
mov
mov
out
jns
sbb
enter
popl
mov
jmp
push
scas
cmc
out
loop
jnp
xchg
jmp
cld
dec
dec
lea
jno
xor
loop
or
dec
mov
std
cltd
sub
cmpsl
addl
and
imul
pop
mov
mov
add
and
ljmp
repnz
cmp
and
push
test
jno
fisttps
xchg
out
jmp
sbb
aaa
fcmovu
js
xor
movsb
ficoml
push
push
cmpsl
jecxz
in
mov
pop
lcall
inc
mov
inc
pushf
or
mov
lock
push
pop
aas
push
cmpsb
jmp
ss
iret
ljmp
xor
scas
insb
pushf
mov
loopne
out
gs
lcall
call
pusha
test
sahf
sti
loope
dec
lea
cmp
mov
mov
sub
add
sarb
add
mov
or
ss
jae
addr16
xor
push
call
fld
xor
cld
outsl
aam
ret
rcll
loopne
xchg
cld
sbb
xchg
and
inc
xchg
xchg
lea
aaa
adc
repnz
push
jg
mov
fwait
pop
imul
push
or
mov
loopne
cmp
xor
cmp
jo
mov
xor
aas
add
fdivl
iret
xor
popf
xchg
adc
mov
xorl
lock
out
std
loope
pop
add
sub
fs
or
cmpb
sti
int3
out
sahf
testl
fwait
in
lret
pushf
inc
adc
pop
xor
and
ja
jge
pop
pop
sbb
inc
pushf
jnp
cmovno
cmpl
mov
inc
adc
and
sub
repnz
test
xor
icebp
frstor
imul
xor
pop
call
je
repnz
lds
scas
scas
inc
sar
out
xor
jne
inc
push
push
outsl
faddl
ret
sub
shll
mov
inc
or
jb
icebp
outsl
xor
je
cmpsb
dec
pushf
das
aaa
out
adc
insl
jecxz
mov
popa
sub
movsl
mov
push
inc
cld
push
insb
pop
aam
mov
push
push
dec
repz
ja
cmp
xchg
stc
mov
cmc
dec
jl
cmpsb
pop
sahf
cmp
mov
push
jge
rorb
mov
adc
cmp
shll
test
ret
pop
cmp
mov
out
aaa
mov
retw
sbb
mov
cld
and
push
ja
lret
push
inc
xor
or
incl
mov
icebp
aam
in
mov
sbb
add
lea
lds
push
cs
popf
push
loopne
add
dec
push
sub
out
mov
das
jl
jb
or
push
mov
aad
ljmp
cmpsl
mov
aam
push
sub
hlt
adc
xchg
push
adc
cmp
mov
add
sub
das
gs
push
jl
pop
clc
lret
jo
aas
push
rep
cltd
scas
lea
outsb
pop
iret
imul
jnp
cltd
scas
xchg
jmp
idivb
out
sbb
aaa
mov
pop
je
les
jle
and
sub
jmp
mov
mov
cmpsb
cmpsl
fwait
cli
adc
movsb
loop
int
cmp
adc
cmpsb
cmp
ret
cs
test
adc
push
pop
lods
data16
insl
add
xchg
mov
sub
daa
mov
ror
outsb
sub
insb
jo
cmpsb
xchg
cltd
push
dec
jnp
pop
xchg
out
insl
add
jp
and
es
addl
int3
adc
cmp
repnz
imul
mov
xlat
jmp
movsb
push
imul
jne
les
lea
push
pop
mov
cltd
and
out
mov
gs
pop
repnz
inc
jmp
cmp
mov
cmp
jl
add
test
cmp
and
mov
and
rcrb
bound
sub
mov
or
xor
pop
and
fsubrs
gs
hlt
cmc
mov
in
fmull
icebp
mov
insb
or
add
mov
xchg
mov
add
enter
xor
jnp
loope
jo
jb
loop
inc
mov
cmp
cmc
dec
stc
sub
cmp
movsl
xchg
adc
inc
sbb
rcr
lods
push
add
mov
xor
fstpt
shl
fcmovne
adc
sub
dec
out
add
push
ret
lcall
cmpxchg
ret
fwait
in
sub
lods
repz
adc
lret
xchg
push
xchg
loope
and
cwtl
adc
or
aaa
in
and
sbb
sub
sbb
pop
movsl
push
adc
push
jns
jnp
fnstenv
xchg
clc
shlb
jo
inc
pop
aaa
ret
push
mov
jge
jne
push
jl
rol
lock
in
into
fdivrl
movsb
imul
stos
aad
movsb
push
xchg
cmp
mov
sbb
sahf
stos
cmp
popa
xchg
and
mov
and
pop
jns
pop
dec
pop
push
lret
xor
sub
fistpll
adc
repnz
inc
push
test
shl
fs
idivb
sub
shlb
das
jbe
insl
in
cltd
lock
mov
dec
jbe
jns
sub
add
fistl
out
dec
dec
mov
sahf
enter
lret
sub
mov
xchg
xchg
ror
ror
pop
sub
mov
movsl
xchg
sbb
das
movsb
ss
push
out
cmp
mov
out
push
jmp
stos
adc
push
pushf
and
popf
cmpsb
add
mov
jl
push
pushf
movsb
lods
ja
or
test
bnd
in
mov
mov
mov
dec
mov
gs
in
into
mov
mov
inc
in
aas
sub
jmp
inc
stos
inc
mov
mov
push
mov
mov
addr16
push
jp
cmp
and
outsl
fmul
jno
fwait
pusha
xor
push
jmp
icebp
mov
mov
mov
push
movsl
xchg
fistl
push
mov
int
lea
mov
and
push
push
or
sub
scas
insl
pop
imul
pop
in
js
mov
jl
je
mov
and
decb
add
xchg
adc
lcall
add
fistl
jmp
push
int3
cmp
cmp
and
mov
pop
popa
fimull
adc
push
sbb
jg
dec
sub
mov
adc
pop
or
pop
and
sub
jecxz
pushf
mov
pop
dec
cltd
scas
or
sub
cltd
add
out
scas
push
pusha
pop
sbb
xchg
jbe
and
std
fidivl
dec
into
fucom
repnz
push
rcll
iret
fcompl
shrl
pop
push
fsts
sub
int
cltd
xor
add
addr16
push
and
sub
ss
xchg
pop
jle
stos
add
mov
dec
sti
call
lret
scas
adc
mov
sub
notb
cmp
push
popf
mov
lea
std
sbb
js
push
pop
xor
in
jl
insb
sub
popf
xchg
inc
cmp
cli
dec
rorl
sti
cs
or
cmp
push
jns
loopne
sbb
popa
mov
cld
adc
and
fldcw
pop
mov
adc
andl
fcmovnbe
lods
lahf
dec
mov
adcb
fwait
jmp
dec
dec
or
add
mov
dec
cvttps2pi
xor
adc
jnp
mov
gs
push
movsb
pop
jns
ss
insb
loop
or
iret
add
push
cmp
aad
adc
inc
popa
mov
jecxz
sbb
movsl
add
sbb
mov
test
cltd
add
inc
hlt
fldenv
pop
cmp
out
lret
jl
xchg
addr16
lcall
or
sti
arpl
ss
sub
sbb
inc
repnz
add
loopne
cmpsb
push
sub
test
divl
mov
jg
les
icebp
xchg
test
pop
adc
xor
push
mov
inc
jns
insl
sti
jne
pop
test
cmp
inc
fcomps
pop
sub
imul
pop
pop
test
cmp
loope
cmp
add
mov
into
fcoml
sub
call
mov
pop
ljmp
mov
mov
mov
push
lock
cwtl
ljmp
push
nop
in
insl
xchg
push
ljmp
loop
hlt
mov
push
aas
pop
jl
inc
and
std
cmp
or
or
test
pop
sbb
add
loope
sbb
lcall
adc
in
mov
test
sbb
rol
daa
fs
sti
in
and
xchg
sbb
push
nop
and
scas
lds
xlat
imul
pop
inc
and
out
xor
adc
cld
sarb
mov
je
out
sub
push
add
test
stos
adc
jae
push
in
out
out
fsubr
leave
add
dec
or
scas
js
imul
push
adc
add
daa
xor
cwtl
and
mov
or
rclb
das
inc
sbb
ret
mov
outsb
push
sahf
aaa
mov
adc
mov
inc
sub
mov
mov
pop
add
inc
movsl
bound
int3
jl
lret
lret
pop
pop
insl
mov
dec
xor
and
and
mov
push
sub
cli
dec
sbbb
out
and
sbb
mov
daa
int3
cmpsl
mov
in
mov
lcall
pop
lret
mov
push
sti
push
cmp
push
outsl
add
push
xchg
mov
or
test
in
pop
ret
adc
adc
xchg
inc
addr16
sti
enter
jb
dec
test
sbb
xor
scas
cld
sbb
jnp
push
std
lret
mov
adc
mov
ss
jmp
mov
add
fnstenv
pop
testb
jne
in
mov
pop
int3
mov
sbb
dec
in
cltd
push
test
mov
sbb
cmp
cli
sti
out
jl
imul
and
cmpsb
shl
andl
sti
ss
add
rcr
imul
sub
outsb
sub
scas
mov
xor
rcll
or
sbb
imul
daa
cwtl
ljmp
pop
sarl
idivb
adc
adc
xchg
dec
xor
aam
cmp
test
jge
xchg
xor
fistpll
aam
cwtl
sbb
in
test
mov
repz
aaa
repz
add
int3
mov
xorb
cmp
mov
mov
data16
stos
adc
lea
push
or
jno
std
inc
mov
inc
jl
inc
jno
mov
dec
pop
repnz
and
inc
cld
pop
xor
mov
mov
dec
inc
jne
xor
repz
mov
aad
in
jb
push
cmp
ret
out
aaa
dec
into
aam
scas
cld
lods
imul
data16
icebp
fisubrs
push
adc
adc
pop
mov
cwtl
lahf
popf
aad
mov
mov
mov
jo
push
add
loop
xchg
rorl
je
mov
push
jne
lds
push
mov
xchg
popa
push
inc
rolb
dec
xor
outsb
inc
outsb
lret
sub
dec
dec
adc
mov
jae
add
xchg
dec
add
xchg
mov
outsb
and
xchg
in
jg
je
ret
lods
daa
rclb
dec
mov
mov
sarl
hlt
push
mov
mov
jae
test
jl
xchg
push
xor
call
cmp
pusha
out
dec
std
std
loope
cli
std
add
adc
mov
jb
inc
cmp
pop
inc
xchg
xor
je
fnsetpm(287
dec
jge,pt
les
push
fs
xlat
lcall
in
std
mov
push
mov
jbe
stc
lahf
push
or
fxch
aaa
andl
xchg
pop
scas
sbb
popf
fistps
std
adc
fisttpll
lcall
dec
sti
fildl
fildl
ret
push
xchg
pop
cltd
xor
push
push
fwait
jbe
jge,pt
mov
push
pop
rorl
test
mov
lcall
mov
les
mov
inc
mov
cmpsl
dec
insb
lods
pop
les
pop
adc
cld
dec
dec
adc
push
mov
test
mov
cmp
stc
cmp
bnd
mov
mov
cmp
jmp
and
cmp
sbb
pop
inc
das
adc
and
xchg
cwtl
mov
mov
pop
sub
mov
ljmp
mov
dec
data16
xchg
adc
or
inc
roll
fidivrs
xchg
mov
inc
cli
lods
sub
imul
sub
or
jb
in
cs
inc
test
es
push
xchg
inc
loope
pop
pop
mov
mov
pop
gs
adc
push
out
ret
pop
xor
inc
fmuls
scas
dec
or
pushf
mov
ret
ss
dec
lahf
sbb
iret
leave
hlt
add
ss
sbb
xor
pusha
fimull
xor
call
repnz
dec
push
fmuls
or
cmc
loope,pt
dec
cmp
mov
jg
jl
fisttps
or
les
popl
fstpl
lret
rolb
inc
mov
jne
xchg
or
inc
jmp
dec
rcrb
setbe
xchg
xchg
jo
push
out
jge
adc
sub
mov
push
lods
enter
mov
std
jmp
and
ret
lret
inc
fld
jg
and
stos
cmc
aad
sub
mov
aad
mov
test
in
fdivs
cmc
inc
pop
popf
fistl
jle
cmpsb
mov
xchg
fidivs
jo
push
lods
test
push
xor
insb
shrl
xchg
scas
in
clc
push
cs
mov
jmp
in
add
lahf
and
movl
sub
rol
sub
xchg
or
fs
sbb
jl
fisubrs
test
cmc
test
push
fsubrp
lahf
sbb
jno
cmc
push
xlat
mov
mov
xchg
iret
rcrb
add
lds
je
lock
inc
leave
push
inc
out
les
es
cwtl
mov
adc
or
adc
popf
fwait
arpl
je
push
dec
fwait
sub
or
loopne
arpl
daa
dec
inc
mov
xchg
mov
or
in
arpl
sub
in
mov
aam
jl
add
jae
les
daa
lods
cs
mov
pop
jnp
mov
leave
pop
cli
rcrl
sub
or
out
push
int3
mov
adc
out
cmp
jl
add
dec
push
pop
add
add
movsb
pop
adc
lcall
pushl
jl
mov
into
jae
rol
lcall
insl
out
test
cmc
inc
iret
insl
jmp
ret
in
repz
push
test
shr
fsubl
lret
lock
inc
inc
mov
mov
notb
inc
repnz
enter
pop
jbe
add
push
cli
and
adc
cltd
adc
cltd
insb
sub
popf
sub
popa
push
insl
pop
inc
pusha
decb
inc
int
jne
mov
mov
jp
mov
outsb
mov
ret
lods
popa
out
call
xlat
push
jge
movsl
dec
xchg
movsl
call
arpl
mov
jmp
pop
out
sbb
push
fs
jle
and
cs
or
lahf
std
testl
mov
mov
in
dec
js
dec
repnz
adc
mov
jecxz
jnp
jae
dec
cmovp
mov
shl
movsb
xor
dec
xor
pop
mov
pop
popa
int3
mov
popa
jmp
mov
xchg
data16
lds
adc
out
insl
xor
icebp
in
xchg
pop
rcr
xchg
ds
pop
pop
daa
ss
rclb
fistpl
xchg
iret
es
add
xor
mov
in
push
stos
dec
aad
aas
inc
rclb
jp,pn
in
js
wbinvd
pop
pop
add
mov
loop
sub
cmp
aas
xchg
or
mov
arpl
pop
movsb
push
inc
xor
inc
movd
dec
jne
aam
out
mov
pop
adc
dec
push
mov
pop
xor
out
adc
movsb
mov
mov
shrb
cmpb
addr16
push
mov
or
ret
inc
dec
jl
mov
js
mov
test
push
jns
mov
add
sub
inc
mov
imul
mov
test
mov
notb
jge
xor
jmp
addb
pop
adc
leave
fiadds
adc
out
movsb
push
xchg
pushf
lret
repz
lds
mov
mov
js
cmp
std
adc
pop
cmp
add
and
jnp
sbb
shl
inc
jmp
xorb
adc
jmp
aam
xchg
mov
mov
loop
sub
xchg
icebp
or
leave
popa
mov
das
lods
mov
jmp
scas
jnp
fadds
xor
mov
fisttpl
xchg
lock
mov
xchg
mov
loopne
jmp
scas
xor
fistps
mov
sub
mov
lret
or
imul
dec
pop
ret
andb
test
insb
mov
sub
dec
pushf
or
in
pop
jp
sti
xchg
add
nop
cmpsb
mov
cmp
adc
sarb
push
mov
std
xchg
sub
imul
jmp
daa
pusha
sub
sub
push
cmc
push
push
cli
mov
in
mov
xor
js
jecxz
pop
jnp
frstor
jno
int
je
ror
sbb
loope
cld
sahf
mov
adc
lods
in
int
scas
add
mov
sahf
lcall
mov
or
sub
fldl
shll
xchg
adc
jbe
outsb
clc
mov
lds
mov
fimuls
sbb
imul
out
pop
xor
out
in
pop
lea
outsb
aad
test
stc
and
sahf
popw
aaa
fisttps
xchg
pushf
sbb
rcrl
jecxz
jg
cli
sbb
test
inc
pop
xchg
and
out
xchg
xlat
scas
cmp
hlt
cmp
xor
mov
popf
shlb
xor
and
mov
mov
inc
mov
push
pop
sarl
lock
lcall
popa
dec
ss
call
mov
jmp
adc
sub
mul
stos
testl
push
pop
push
sub
lds
sti
in
hlt
push
push
pushf
ret
mov
sbb
in
mov
mov
int3
mov
into
mov
in
push
xchg
mov
gs
pop
out
jb
jmp
pop
xor
mov
mov
ljmp
mov
xchg
loop
push
jg
rorl
cli
push
jl
and
push
sub
jmp
les
out
rcrl
push
lret
jbe
cmp
test
test
cli
mov
ret
in
or
into
mov
rol
test
fsub
mov
into
or
loopne
fistpl
jecxz
icebp
insb
lahf
data16
aad
mov
push
jnp
sub
js
aas
jb
fistpll
in
inc
push
fwait
dec
in
jne
test
testl
fcmovnbe
movsb
test
push
hlt
je
inc
cmpl
movsl
xor
incb
xchg
xchg
jbe
scas
ljmp
push
iret
mov
dec
xchg
xchg
insb
test
into
stos
es
sbb
adc
in
jns
jne
adc
hlt
dec
jecxz
std
mov
fwait
movsb
mov
icebp
cmp
mov
dec
lahf
jne
add
mov
jne
xor
pop
jnp
mov
push
repz
mov
aad
pop
mov
mov
xchg
or
push
mov
pop
pop
lock
test
fistpll
add
idiv
fs
test
mov
mov
jmp
add
mov
dec
enter
sub
or
lods
nop
in
lahf
lock
out
push
loope
cmp
dec
mov
jecxz
pop
xchg
add
fs
std
sarb
pop
cmp
mov
jbe
add
xorps
int3
jl
jo
mov
cmp
mov
subb
andl
and
xchg
pop
mov
mov
cmpsl
push
arpl
lahf
popa
lret
jbe
add
sbb
pusha
mov
or
push
or
lods
dec
inc
shr
jo
cmc
jmp
pop
dec
sbb
gs
mov
jmp
std
dec
cmp
sbb
add
pop
mov
lret
filds
jmp
mov
ret
in
clc
sub
clc
push
ljmp
sbb
sub
jb
push
jne
loope
mov
mov
or
lds
add
imul
lods
push
mov
and
or
sbb
and
xchg
nop
mov
jp
jns
push
les
roll
xchg
test
jno
xor
pop
pop
loopne
repnz
inc
addr16
push
mov
sub
mov
out
fs
sub
push
or
or
jg
mov
adcl
out
sub
sub
mov
jle
cli
mov
in
sub
cmp
and
rorb
mov
jo
in
cwtl
imul
push
xchg
xor
or
inc
mov
push
adc
inc
sar
cmp
or
dec
or
testl
mov
out
xchg
mov
sbb
mov
loopne
push
outsb
sub
xor
jno
negl
or
cmp
gs
lcall
or
jno
add
or
xchg
outsb
js
cmpsb
add
push
adc
repnz
test
pushf
push
mov
ret
xor
inc
mov
cmp
ret
xorl
or
mov
imul
xchg
addr16
call
cltd
cld
dec
inc
xchg
cmp
incl
cmc
push
movsw
mov
scas
cwtl
pop
loop
enter
xlat
outsl
aam
dec
jle
loope
aaa
test
imul
xchg
arpl
pop
add
aad
pop
and
loopne
dec
pop
jmp
sub
mov
adc
rcrl
push
xchg
loop
enter
into
xchg
mov
and
and
cmp
pop
mov
aaa
sub
and
bound
push
and
bound
inc
scas
jecxz
mov
inc
out
jae
fucomi
das
xchg
push
pop
sbb
pop
lods
fwait
sbb
adc
scas
lret
cmpsl
cs
daa
scas
pop
mov
adc
sarl
ret
test
push
mov
fdivrs
adc
es
mov
and
sbb
mov
jp
out
clc
or
movsb
dec
cmp
icebp
in
lea
int
mov
mov
shrl
mov
and
inc
pop
sub
mov
addb
js
lret
es
cltd
inc
sbb
mov
pop
repnz
fldcw
sbbl
stos
iret
mov
leave
xchg
and
int3
icebp
pop
repnz
into
bound
xlat
sbb
mov
xor
mov
iret
add
dec
cmp
repz
sbb
fucomi
push
shlb
lret
add
cwtl
jno
or
popa
dec
popa
xchg
xchg
pop
bound
sbb
hlt
xor
cmpsb
in
pushf
pop
ss
and
arpl
or
aam
insl
popa
stos
into
xchg
loopne
sbb
xchg
dec
add
or
ret
push
adc
inc
icebp
stos
leave
test
sub
inc
imul
lahf
inc
sub
pop
push
test
or
lcall
ret
pop
repnz
mov
mov
xor
xor
adc
sub
sbb
mov
ja
push
xchg
pop
iret
lds
jge
mov
divl
sbb
sbb
inc
lea
icebp
fsub
and
dec
insl
adc
sub
call
pop
mov
or
movsb
mov
repz
cmpsb
pusha
xchg
out
test
test
ss
dec
adc
idivl
push
adc
sub
int3
das
xchg
ficomps
in
cmp
repz
pushf
daa
bnd
pop
lods
cmp
dec
shrl
enter
pop
mov
lods
call
aam
and
sub
sbb
popw
out
imul
xchg
adc
lret
jge
out
out
adc
or
arpl
mov
test
jnp
jmp
bound
pop
dec
mov
test
ljmp
jl
cli
stos
lcall
test
pop
sbb
sbb
loopne
movsb
jmp
sub
sbb
fnstcw
sub
fs
xlat
sbb
mov
lahf
mov
sbb
pop
cld
jns
xchg
shrb
ja
insl
mov
sub
jecxz
fs
in
das
push
es
xor
lret
or
xchg
lahf
cmp
aas
ja
sub
sub
insl
and
cmp
cmp
mov
out
mov
xor
in
push
mov
gs
enter
mov
jl
mov
jg
pop
mov
sub
dec
fcmovbe
and
mov
ljmp
pop
cld
enter
cld
inc
mov
mov
test
stos
or
jno
int3
sub
inc
pop
sub
mov
xor
out
cwtl
lcall
jnp
inc
cmpsl
ret
in
movl
inc
fcoms
jns
xchg
into
xchg
add
je
xor
fnstenv
and
and
inc
add
in
sub
int
adc
pusha
mov
imul
inc
mov
loop
popf
inc
push
mov
clc
fnsave
push
cmp
jne
mov
xlat
xchg
jne
mov
pop
mov
bound
test
sbb
and
lcall
mov
mov
inc
jo
jo
xlat
sbb
dec
or
inc
xor
inc
ror
int3
dec
lret
mov
dec
repz
fwait
xor
and
cli
adc
imul
bound
mov
lods
adc
inc
sahf
add
mov
jmp
pop
xchg
clc
subb
inc
cmp
push
mov
dec
push
or
into
inc
mov
cld
into
add
mov
cmpb
daa
cli
xchg
out
test
or
xor
test
sbb
sbb
add
push
repz
gs
sub
fsubl
lea
dec
in
iret
fucomp
cmp
loope
sub
sbb
jnp
stc
cmp
inc
sbb
xchg
inc
rclb
popf
cmpsb
addr16
mov
pop
movl
dec
inc
push
lcall
mov
ljmp
aaa
jmp
scas
in
sbb
rcrl
sbb
cmpsb
fchs
es
mov
inc
pop
sbb
pop
jnp
mov
dec
adc
bound
clc
cmc
pushf
adc
and
jne
in
cmpsl
int
clc
ja
push
pop
cltd
mov
lods
jae
ss
and
mov
push
addr16
mov
push
pop
sti
mov
pop
push
adc
es
movsb
push
into
insb
sbb
jbe
push
mov
out
jle
dec
movsl
sbb
inc
repnz
push
mov
inc
in
pop
popa
cwtl
and
jle
xor
mov
sbb
push
testb
fstps
add
pusha
sub
rolb
mov
sub
mov
aad
sub
jp
xchg
cwtl
loopne
jg
xor
xchg
jnp
jmp
lods
push
mov
in
fdiv
std
push
sarl
or
add
xchg
pop
sbb
xor
pop
jl
lret
int
mov
mov
adc
fmul
lcall
jns
dec
out
icebp
ss
enter
push
mov
test
imul
jne
or
jae
clc
mov
xchg
stos
pop
pop
lods
adc
es
mov
or
sub
cs
inc
inc
push
divb
lea
in
push
add
aaa
cmpsl
stc
dec
ja
push
idivl
pop
sub
inc
scas
repz
jo
fmull
inc
pop
jle
div
ss
dec
pop
inc
in
rcrl
mov
mov
mov
xchg
push
stos
or
iret
std
repnz
ds
clc
mov
adc
push
out
push
xor
mov
out
in
out
out
inc
hlt
cmp
imul
icebp
addr16
jmp
cwtl
rcrl
mov
adc
movsl
inc
jp
xor
pop
xchg
clc
out
push
pop
mov
outsb
jl
divb
fcmovnbe
jns
ret
bound
inc
mov
cmpsb
int
nop
aad
jae
mov
push
mov
fstp
data16
scas
int
ret
push
adc
ljmp
add
sti
imul
je
sbb
std
dec
and
hlt
rorl
popf
test
nop
out
mov
fwait
inc
leave
das
popf
mov
or
into
pop
add
es
push
insb
outsl
scas
jo
insb
lock
cmc
and
push
arpl
dec
lods
and
mov
adc
daa
in
rolb
mov
vpmacssww
cmpsb
pop
jnp
in
inc
das
push
loop
pop
test
ret
lods
lock
ss
xor
dec
mov
xchg
fcmovnu
jp
loop
adc
cmp
xor
adcl
add
in
pop
mov
daa
mov
sub
bound
les
sbb
xchg
ja
xorb
faddp
jae
repz
mov
push
stos
xor
jns
aam
mov
ds
mov
aaa
out
jne
sub
mov
fmul
fwait
cmp
insb
data16
mov
inc
xorl
sbb
sti
out
imul
scas
adc
orl
mov
xchg
mov
in
fimull
pop
lahf
cli
jnp
insb
lahf
stos
push
mov
sbb
pop
clc
ljmp
sub
xlat
cmp
dec
popa
jge
lahf
or
ss
addb
push
add
push
push
daa
adc
aam
push
das
iret
cmp
jle
push
ficoml
jae
xor
inc
xchg
adc
pop
sbb
je
jmp
push
inc
push
arpl
push
mov
xor
lahf
ds
nop
hlt
mov
jo
pop
fsubrs
pop
fidivs
hlt
filds
dec
popf
mov
pop
or
in
jl
stos
and
mov
out
in
insl
subl
xor
lea
fstpl
std
icebp
mov
movhps
aas
add
int3
sbb
jnp
push
gs
rcrb
inc
inc
dec
stc
aam
popf
jl
mov
movsl
push
adc
es
jae
and
inc
mov
add
repnz
xor
test
pop
adc
jne
scas
das
add
mov
cmp
pop
inc
mov
sub
cltd
and
sub
jo
loope
std
hlt
xchg
jnp
jecxz
icebp
adc
adcl
push
cmp
fistl
add
sbb
cld
out
mov
mov
or
jo
in
add
mov
shrb
repnz
xchg
test
add
lea
and
mov
dec
xchg
test
loop
out
jmp
sarb
les
adc
mov
pop
add
jl
mov
push
cwtl
lret
or
lods
insl
and
repz
jne
mov
mov
and
insb
xchg
inc
bound
jnp
add
sub
mov
add
xchg
ss
inc
gs
xchg
lock
jne
popa
neg
xor
test
dec
and
push
stos
rolb
cwtl
dec
and
out
stos
clc
icebp
push
pop
les
mov
or
and
lock
push
push
test
aam
int3
adc
iret
inc
jbe
sbb
or
push
lock
fdivrs
jns
hlt
add
sub
mov
out
sti
adc
mov
and
cmp
or
mov
lret
aad
mov
push
daa
push
lock
out
mov
scas
out
in
dec
jl
data16
pop
sahf
cmp
and
inc
ret
and
outsb
inc
sahf
pusha
ljmp
inc
pop
and
fwait
loope
loope
in
movsb
pop
xchg
out
sbb
mov
mov
sbb
or
push
and
faddl
daa
push
stos
lcall
lods
aas
jae
fwait
pop
adc
ss
hlt
and
movlps
aaa
xchg
mov
ljmp
mov
xchg
outsb
cmp
stc
fs
les
mov
and
xchg
xor
mov
cmp
ljmp
and
dec
mov
movsl
in
jae
imul
into
jae
ret
jns
repz
repz
or
inc
add
out
loop
dec
xchg
insl
mov
lods
hlt
lods
andl
pop
movsl
xor
xchg
lea
sbb
jnp
push
subl
pop
in
or
testl
testb
push
cmpl
inc
xorl
shrb
idivl
roll
add
push
ljmp
xchg
repz
pop
in
cmc
sbb
lods
mov
mov
aas
mov
mov
dec
arpl
mov
add
or
sbb
cmpsl
div
adc
fldl
fidivrl
pop
or
pushf
jo
jbe
je
shll
sub
jge
popa
dec
or
mov
aad
imul
imul
pop
push
push
mov
bound
cmpsb
jge
sbb
mov
bound
mov
arpl
dec
scas
mov
add
xchg
jbe
push
cmpsb
xor
pop
sub
jg
stc
push
aas
mov
in
lock
add
pushf
fdivrl
notb
dec
jo
mov
push
leave
push
push
insb
add
jle
mov
mov
mov
mov
es
jno
sbb
nop
data16
out
jnp
mov
cmp
dec
in
popf
or
inc
inc
jmp
aam
add
mov
and
rcl
dec
inc
mov
xor
mov
mov
lods
mov
outsb
xor
mov
loope
cmp
nop
in
jmp
dec
and
fistpll
ss
jecxz
or
das
lds
xchg
cmp
push
mov
dec
adc
test
dec
xchg
lahf
test
imul
pop
push
test
or
arpl
pop
fwait
cmpsb
hlt
push
daa
xchg
push
insb
mov
mov
dec
add
ds
mov
movsb
or
dec
adc
sbb
test
das
scas
xchg
mov
sti
test
sub
sbb
cmp
mov
pop
daa
mov
das
decb
inc
inc
hlt
clc
adc
mov
aam
mov
mov
pop
push
and
mov
mov
push
push
leave
pop
pop
dec
fucompp
dec
lea
stc
xor
unpcklps
pop
jnp
push
jmp
pop
jmp
in
iret
repnz
adc
in
xor
test
loopne
mov
in
sub
push
or
sahf
cmp
fsubs
fsubp
or
jae
jne
fisubrl
gs
xor
mov
cwtl
clc
ret
rclb
jae
inc
imul
push
push
sbb
xchg
or
pop
test
mov
xorb
or
push
sbb
xor
bnd
pop
out
jmp
out
orl
outsl
test
mov
pop
into
cmp
push
mov
or
repnz
jb
fs
js
shrb
jmp
cwtl
iret
or
sbb
lret
mov
lret
js
cli
xlat
mov
clc
imul
and
adc
pusha
sub
xchg
jg
cmpsb
outsb
push
mov
sub
mov
lds
ss
pop
xchg
test
push
jle
cltd
push
lcall
int
inc
loopne
sbb
leave
imul
jbe
sarb
adc
mov
inc
xor
sbb
dec
push
popa
sbb
inc
adc
or
call
lods
js
nop
cmp
mov
mov
inc
mov
dec
pusha
push
fcoml
test
cmp
pop
jmp
cltd
insl
popf
scas
cmp
mov
and
fiadds
pop
pop
jae
push
inc
test
or
add
mov
sub
push
jo
xor
inc
xchg
dec
pushf
mov
push
ret
iret
pop
jmp
push
arpl
jp
sahf
test
out
in
test
pop
aas
jge
xlat
lea
dec
lret
and
inc
mov
test
in
and
test
shll
adc
dec
push
mov
inc
mov
fsubs
lret
or
sbb
jo,pt
cwtl
dec
xchg
sbb
repz
jmp
scas
aad
and
js
mov
imul
insl
adc
and
xor
jecxz
cmp
mov
icebp
mov
push
sbb
cmp
sbb
imul
fdivs
stos
push
pop
xchg
mov
sti
add
pop
stos
sarb
mov
mov
rorb
jb
xor
mov
sub
jo
lods
push
mov
sub
dec
testb
cmp
dec
push
out
lds
mov
xlat
mov
ror
shr
cwtl
or
and
xchg
sbb
mov
movsl
mov
dec
ss
sahf
es
data16
test
cld
pop
rcl
xchg
lcall
push
xchg
pop
mov
mov
arpl
add
add
imul
out
das
in
or
adc
xchg
mov
sbb
mov
inc
pop
leave
frstor
imul
sbb
dec
loop
fdivl
cmp
push
or
xchg
cmp
mov
imul
dec
sarb
xor
pop
cmpb
cmp
pop
cmpsl
mov
iret
xor
push
mov
bound
in
xlat
cmp
jl
xor
test
not
sbb
sbb
std
clc
push
xor
cld
mov
imulb
lods
dec
sbb
sarl
stos
pop
dec
aas
push
fdivs
push
inc
fs
xchg
out
and
mov
xchg
in
sbb
push
jbe
xor
sti
aas
and
push
mov
xchg
inc
test
mov
xlat
into
or
cmp
mov
adc
mov
fs
fiadds
imul
or
cld
inc
imul
jne
pop
sub
pop
imul
xchg
sti
dec
aam
dec
lods
in
sub
bound
mov
je
cmp
mov
test
nop
ss
mov
arpl
ja
repnz
into
shr
lods
pop
out
movsl
rcrb
mov
imul
and
sti
and
push
test
ret
add
pop
sub
push
fs
lret
jae
pop
xor
in
lret
inc
bound
jbe
sahf
je
or
add
movsb
and
mov
daa
imul
cmpsl
mov
or
jo
cmp
popf
std
mov
mov
mov
mov
imul
rorb
jnp
into
sbb
or
mov
movb
imul
stc
inc
inc
fadds
bound
loope
lea
mov
sbb
je
nop
outsb
mov
cmp
sbb
jno
add
sahf
jne
sti
lahf
jne
repnz
daa
cmp
pop
mov
sahf
inc
leave
out
xor
addr16
xchg
jl
dec
shlb
sub
push
sbb
push
ret
pop
push
repz
jo
nop
setb
scas
ret
adc
neg
sub
inc
pop
incb
jg
enter
imul
cmpsl
nop
xor
leave
cwtl
xchg
xchg
sbb
test
inc
jb
fbstp
jnp
push
test
daa
mov
jecxz
fstps
loop
sbbb
inc
lret
pop
popf
adc
mov
push
lcall
push
cmp
adc
imul
add
jns
push
pop
int
je
clc
mov
or
in
adc
mov
imul
scas
cmp
in
mov
inc
lahf
mov
mov
subl
jno
hlt
lcall
arpl
mov
popf
xor
in
data16
xor
adc
out
mov
sbb
sti
fcompl
inc
mov
popf
push
lds
in
ja
das
xor
cld
mov
into
sbb
mov
inc
mov
loop
int3
mov
insb
mov
mov
dec
sbb
push
rcll
test
mov
cmp
jne
cld
out
test
xchg
xchg
sub
pushw
pop
dec
gs
adc
in
hlt
sahf
jle
mov
and
jecxz
inc
mov
jmp
enter
inc
es
mov
dec
add
cmp
mov
push
das
mov
fnsave
lds
and
rcrb
insb
inc
dec
add
icebp
adc
cmpsl
ds
and
ja
pop
bound
add
inc
inc
adc
dec
stc
imul
or
pop
sarl
pusha
enter
lcall
push
outsl
add
or
xchg
sub
imul
mov
cmp
push
and
iret
aaa
cmp
lea
lret
popf
adc
jns
aad
cmpl
test
inc
insb
pop
pusha
popf
cli
cmp
addl
ss
aas
daa
dec
test
inc
adc
int3
or
and
or
fwait
in
cmp
push
repnz
scas
cmpl
outsl
push
add
ss
push
mov
mov
inc
sub
je
mov
push
add
filds
sbb
sub
cs
cmp
scas
insb
mov
jb
sub
add
fdivp
sbb
mov
dec
jno
stos
pop
in
push
add
das
call
pop
cli
sbb
jnp
add
add
add
addl
jns
adc
fldt
cmpb
outsb
add
xchg
test
in
pop
mov
push
fisubl
addr16
insb
inc
aam
adc
pop
cs
sub
pusha
add
aam
pusha
add
in
mov
add
ret
es
lods
sbb
lods
mov
lcall
sbb
shlb
arpl
pop
stc
push
push
cmp
mov
xchg
in
stos
pop
xor
inc
cmpsl
scas
pop
test
mov
push
mov
nop
in
je
dec
push
icebp
out
mov
inc
incl
lods
or
inc
adc
mov
push
sbb
lret
mov
and
xchg
test
inc
test
jnp
scas
cmp
outsl
pop
jl
xor
inc
push
frstor
mov
rcl
cmpl
xlat
jo
icebp
jecxz
pusha
cli
scas
sub
xchg
jmp
ljmp
repz
mov
sbb
pop
cmc
xchg
rolb
cmpsb
add
inc
mov
je
bound
adc
xrelease
xchg
push
or
pop
cmc
xor
pop
lcall
push
out
pop
adc
push
sbb
cmc
pushf
cmp
fbld
fs
add
insb
mov
mov
fmull
sbb
sbb
mov
lret
pop
add
dec
dec
clc
scas
xor
fiadds
mov
pushf
xchg
mov
jg
jo
repnz
xchg
push
sub
popf
outsb
arpl
or
jge
lods
arpl
push
mov
xchg
and
lcall
push
sarb
ja
out
cmpsb
cmp
das
loopne
je
inc
dec
sti
ljmp
dec
and
pop
mov
fidivs
gs
jno
xor
cmp
jno
mov
sarl
add
hlt
mov
sub
ret
mov
out
lds
icebp
leave
jmp
in
outsb
ljmp
decl
test
inc
mov
sbb
or
push
mov
shrl
mov
ss
test
in
sub
sbb
push
pop
mov
stos
popf
lods
and
push
add
in
inc
pop
nop
mov
sbb
sahf
loope
std
es
sbb
cmc
sub
adc
xlat
rolb
xchg
dec
aas
test
pop
idivb
imul
addr16
scas
adc
ret
sbb
dec
sub
mov
xchg
mov
scas
dec
shll
fcomip
lods
sub
or
and
pop
push
orl
mov
sbb
dec
jae
pusha
xchg
fmull
inc
icebp
push
popa
and
bound
mov
xchg
int3
adc
insb
inc
push
outsl
into
cmp
stos
subb
in
mov
loop
idivl
mov
mov
cmp
shll
shll
xor
rolb
or
imulb
pop
inc
dec
mov
test
out
push
mov
in
jne
roll
xchg
in
xor
stc
ss
mov
lret
out
jnp
in
sub
repz
push
sub
push
cmp
xor
sbb
mov
sahf
sbb
test
addr16
out
das
into
xchg
outsl
and
xor
loopne
pushf
les
push
dec
cmp
add
mov
jle
lods
mov
xor
enter
pop
or
and
movsb
jle
dec
pop
cmp
mov
cli
cmp
sub
and
sti
mov
and
xchg
das
ljmp
mov
pop
shll
sub
add
and
mov
mov
jns
mov
dec
sbb
jb
fiadds
push
or
or
outsb
enter
jbe
mov
push
or
dec
mov
push
arpl
sbb
dec
pop
mov
lods
in
lret
push
nop
and
aad
mov
push
sbb
cwtl
hlt
sahf
in
mov
and
arpl
arpl
shlb
xchg
ljmp
sbb
cltd
inc
das
xchg
lret
mov
dec
int3
adc
addr16
mov
mov
test
pmulhw
add
push
adc
mov
xchg
test
mov
jl
jno
jne
fwait
call
stos
aaa
test
push
add
lods
daa
jge
jle
aas
push
lods
sti
cmpsb
and
lock
pop
mov
and
pop
push
push
push
roll
stc
popf
jae
mov
jmp
arpl
aas
push
or
outsb
arpl
in
sbb
bound
mov
in
imul
cmp
inc
ror
data16
mov
inc
fcompl
dec
add
testl
shl
xchg
popa
je
push
call
popf
xchg
pop
stos
or
jmp
jle
push
repz
arpl
dec
sarb
add
push
xor
iret
mov
pop
push
neg
aad
aas
lods
push
into
mov
mov
ja
sbb
rol
pop
xor
xchg
mov
xorb
sub
push
xchg
sbb
jp
imul
cmpsb
icebp
or
movsl
push
in
arpl
sub
xor
mov
cld
insl
push
mov
int3
push
mov
mov
aaa
jg
std
mov
mov
pusha
daa
in
out
mov
sbb
xor
imull
jmp
push
adc
mov
shrb
mov
xor
insb
je
fdivs
or
in
cmp
mov
add
aaa
push
test
rclb
mov
mov
ds
jno
jg,pt
es
jae
loop
fstpt
sbb
lahf
gs
lds
lods
lods
shl
pusha
xchg
or
add
lret
mov
xchg
or
mov
orb
add
and
enter
mov
sub
in
out
cmp
jne
and
imul
mov
dec
xchg
ret
ja
or
fs
adc
or
or
nop
push
rep
jmp
mov
jno
lock
cli
xor
jnp
cmp
pop
xlat
sub
or
pushl
andl
inc
push
enter
xchg
test
mov
test
in
test
lret
mov
and
out
ljmp
pop
mov
sub
xchg
outsb
sub
or
ficoms
xchg
shl
insb
pop
imul
xchg
push
inc
insl
cmp
dec
addr16
sbb
dec
cmp
popa
push
xchg
scas
mov
cmp
xor
loopne
push
pop
mov
lea
or
sahf
cmp
fbld
mov
mov
push
add
dec
rcl
xor
aam
pop
xchg
lods
andb
push
and
and
lret
dec
mov
add
cwtl
mov
inc
fs
mov
stc
add
xor
clc
jbe
adc
aaa
and
add
rcll
push
daa
pop
jecxz
pop
loop
addr16
jbe
cmc
jge
mov
cs
lahf
jp
mov
cli
push
cwtl
push
iret
lds
pop
push
out
loope
or
xor
or
or
fsubr
loop
dec
jmp
int3
lret
lcall
es
inc
icebp
shll
addr16
jmp
sub
sub
xor
shll
in
sub
sti
push
cmpsb
push
test
sahf
in
loop
adc
lcall
mov
xchg
in
inc
lahf
pop
enter
cmpsb
or
mov
or
mov
cmp
sbb
mov
sbb
mov
jbe
fcmove
push
movsb
push
pop
stc
repz
pop
add
jae
or
jp
pusha
xor
mov
adc
jb
pop
sahf
out
or
xchg
lahf
sbb
push
push
or
sub
sbb
sub
loop
mov
outsl
ja
ljmp
pop
mov
mov
inc
lret
xchg
inc
pop
mov
sbb
adcb
dec
jg
jo
and
adc
dec
mov
jecxz
xchg
mov
jo
int3
cmpsb
xchg
fs
adc
sbb
test
int3
out
sahf
inc
xchg
dec
inc
xchg
movsl
bound
pop
jle
dec
fcomi
dec
lds
cmpl
mov
jb
cmc
xchg
mov
and
or
cmp
and
inc
xor
sub
stos
mov
fs
popf
push
sahf
sub
lahf
xor
jmp
and
sbb
inc
ficoms
enterw
lret
pop
js
inc
or
setg
or
rol
push
stos
incl
mov
sbb
hlt
andl
adc
sahf
cmovo
sub
sbb
je
hlt
jp
pusha
imul
daa
popf
mov
cmp
push
les
add
dec
js
lret
mov
jae
out
fucom
xor
lock
lea
pushf
push
pop
icebp
fcompl
idivb
push
push
adc
adc
iret
aaa
xor
test
inc
pop
in
xlat
fimull
cmp
fiaddl
or
inc
in
sbb
rcl
aad
sbb
bound
popf
add
lods
das
xchg
loopne
add
ret
repnz
bound
and
push
test
and
mov
and
xchg
in
or
jg
repnz
cli
mov
test
cmp
xchg
rclb
xchg
mov
repnz
in
dec
adc
inc
inc
or
inc
mov
sub
in
sti
lods
xor
sysexit
shl
fsubrs
lock
stc
fsub
push
std
sub
xor
mov
inc
outsl
nop
lods
ss
push
xchg
test
pop
jecxz
and
in
cld
pop
cs
xchg
fs
jno
cwtl
imul
int3
scas
xorl
or
call
mov
aam
jp
sbb
test
sub
xchg
aam
loope
mov
push
xchg
pop
rorl
cmp
int
test
xchg
ret
lret
sub
subb
cmp
pop
jmp
loope
pop
mov
fsubl
dec
out
ljmp
dec
pop
sbb
rorb
mov
xchg
jg
fcmovu
icebp
popf
es
testl
pop
xor
nop
loopne
out
cmp
or
cmp
pop
sbb
movsb
leave
inc
out
outsb
pusha
iret
xchg
fs
mov
stos
mov
adc
dec
insb
mov
mov
jae
repz
in
stos
cld
sbb
inc
ret
xchg
push
cmc
rol
mov
jecxz
sbb
sbb
mov
and
dec
hlt
js
dec
sbb
ja
pop
out
cwtl
add
shl
movsl
andl
sub
cmp
dec
mov
inc
outsb
aaa
rcr
dec
push
sbb
mull
icebp
hlt
inc
pop
pop
jae
add
dec
jmp
stos
insl
pop
jmp
wrmsr
mov
push
xor
mov
cs
jmp
in
adc
out
push
sub
sahf
js
mov
xlat
cwtl
inc
in
das
mov
jp
in
cmc
or
pop
ja
xchg
inc
jp
popfw
je
insl
imul
xchg
push
out
and
jae
pop
ljmp
fdivrs
cmc
lods
mov
lds
data16
mov
sub
push
sub
sub
jle
jnp
xor
jle
testb
push
jle
leave
mov
xchg
push
outsl
popa
inc
icebp
push
xchg
ret
push
jp
daa
ljmp
push
es
loopne
mov
das
dec
roll
dec
mov
adc
pmaddwd
xor
jmp
jno
mov
mov
sbb
inc
fiaddl
notb
jle
ljmp
out
mov
xchg
clc
mov
sbb
cmp
sbb
jae
add
mov
test
push
jl
inc
ret
rolb
insl
popf
xor
lock
and
stos
pop
mov
out
mov
aam
jge
mov
incl
lds
test
shr
adc
out
mov
sub
and
cs
std
xchg
inc
imul
add
or
outsl
lods
adc
jno
mov
fisubrl
test
xchg
rcrl
dec
out
cmp
push
dec
stos
fstpt
imul
int3
out
adc
ret
adc
pop
mov
jae
inc
insl
lcall
jecxz
sub
test
jecxz
push
ror
adc
test
lret
adc
repz
mov
call
xchg
mov
fwait
shlb
shrd
xchg
xchg
mov
dec
push
fwait
leave
lock
cmp
mov
mov
adc
dec
and
add
movsb
inc
clc
into
insl
fimull
nop
or
cmpsl
std
in
aas
imul
orl
loopne
dec
outsb
shlb
in
jmp
fnsave
mov
pop
stc
enter
xchg
fsub
sbb
xchg
out
imul
or
push
fwait
dec
ss
ret
jb
mov
sub
sub
jb
in
mov
cli
mov
std
mov
sahf
jns
xchg
mov
cmpsb
cmpsb
fwait
loop
xchg
xor
std
inc
pop
mov
mov
xchg
mov
jmp
fwait
mov
and
push
nop
mov
and
sbb
xchg
mov
roll
in
nop
fbstp
xchg
js
out
sub
fcmovnu
repnz
mov
and
cmp
or
ficoms
mov
xlat
xor
jge
and
or
popa
xor
cmp
fsubrs
scas
mov
test
in
into
loope
inc
bound
or
int
and
jecxz
dec
mov
xchg
pop
fdivrs
lahf
jae
mov
int3
mov
movsb
jl
jg
and
and
clc
dec
jno
push
lret
repnz
add
cmp
addr16
outsl
mov
sbb
jnp
test
jg
in
jecxz
lahf
dec
jno
jp
pop
ljmp
lock
stos
xchg
jp
or
fnstsw
cs
pushf
dec
push
jp
dec
js
test
aad
pop
jp
or
sbb
lahf
xchg
lcall
add
adc
mov
stc
mov
jmp
addr16
or
imul
adc
mov
fistl
xchg
fnstsw
arpl
adcl
notl
mov
and
xchg
adc
fdivs
push
popf
pop
fistl
outsb
out
or
loop
dec
or
pop
sub
scas
mov
unpcklps
pushf
jl
and
subl
xchg
ja
dec
lods
cmp
ret
add
jo
imulb
nop
add
push
fwait
push
incb
addr16
test
pop
xchg
int3
push
or
jno
push
jno
xor
enter
scas
ror
mov
test
inc
int3
jge
call
and
lods
xor
cmpsb
inc
ficoms
sub
fisubrl
push
xor
cmpsl
mov
orb
lcall
push
test
outsb
push
enter
int3
stos
js
jnp
outsl
inc
jns
xor
mov
mov
mov
mov
push
orb
mov
pushf
hlt
dec
and
jb
mov
and
fistpl
adc
bound
jbe
pop
push
test
mov
add
aad
cmpsl
xchg
notrack
mov
dec
inc
dec
les
mov
jp
lcall
jl
xchg
adc
or
mov
jnp
je
dec
pop
pop
mov
hlt
fnstenv
iret
mov
pusha
out
sbb
insl
data16
addr16
mov
call
mov
and
test
insl
js
es
dec
cltd
fstl
pop
cmp
leave
jp
fldlg2
cmp
jmp
mov
pop
inc
into
ficoms
jecxz
cmp
or
mov
outsb
scas
sub
je
int3
mov
div
inc
mov
shlb
pop
sbb
pop
sbb
dec
xchg
es
stc
enter
mov
cmc
iret
mov
sub
aaa
and
lods
negl
aad
add
mov
inc
mov
pop
loop
push
pop
fdivl
arpl
adc
jecxz
das
dec
push
in
sub
dec
inc
sbb
pop
out
and
popf
loopne
push
mov
inc
stos
sbb
repnz
ret
mov
rorb
rcl
sub
push
or
out
sbb
dec
sub
xchg
xor
jbe
orb
xor
pushf
inc
cmc
add
push
lcall
cld
adc
mov
cmp
add
mov
lret
mov
sbb
loopne
xor
add
push
ja
jp
sti
cmp
mov
lock
mov
into
pop
inc
push
mov
and
mov
or
rcrl
test
push
and
addl
sarl
stc
push
fistpl
mov
push
jae
push
and
jb
cmp
aas
std
lods
adc
cmp
pop
in
sbb
fsubl
repnz
cmp
lods
lods
jecxz
jno
mov
jo
lcall
fadd
jecxz
into
lea
xchg
in
je
jmp
mov
mov
lcall
add
adcl
push
push
clc
pop
mov
mov
inc
shrb
dec
or
cmp
pop
and
outsb
cs
cmp
sahf
cs
cmp
push
out
lock
xor
jmp
das
mov
push
pop
fnstenv
xchg
and
in
divl
gs
add
ljmp
dec
xchg
fs
jg
xor
adc
mov
jb
or
cmc
xorb
pusha
cmp
std
dec
fldt
aam
push
or
sub
mov
loop
das
lds
das
push
push
call
xor
lret
stos
inc
jmp
mov
ja
push
jmp
mov
adc
push
push
pop
sbb
insb
mov
inc
jle
mov
mov
sub
scas
repnz
and
inc
movsb
aas
lods
xchg
pop
add
faddl
in
test
insl
jo
cmp
jecxz
push
in
adc
cli
enter
mov
adc
xchg
movsl
add
cs
inc
fisttps
cltd
mov
pop
in
pushf
scas
enter
in
adc
push
xor
jnp
pusha
mov
or
dec
outsl
push
iret
cmp
pop
dec
icebp
cmc
movsb
mov
repz
daa
cmp
test
adc
or
fisubrl
cmpsl
mov
or
adc
outsb
adc
add
daa
dec
lds
cs
cmpsl
test
and
jmp
pop
mov
cltd
mov
std
jno
sbb
xchg
add
mov
push
arpl
push
sub
xor
pop
sub
mov
rclb
aam
aam
or
and
ljmp
pop
cmpsb
xrelease
and
fwait
push
and
cmc
filds
mov
jecxz
xchg
int
cmpl
lret
es
jmp
stc
jae
push
in
clc
and
scas
sub
pop
add
and
sbb
cmpsl
mov
push
add
hlt
outsb
aas
dec
repz
push
push
sub
jns
or
ffreep
adc
clc
mov
sbb
stos
cbtw
or
mov
std
dec
mov
dec
call
xlat
inc
pusha
dec
sbb
dec
sub
sub
in
inc
xchg
loop
sub
or
mov
mov
dec
jg
cmp
adc
jb
dec
mov
orl
xchg
insl
mov
bound
sbb
or
lods
clc
and
dec
es
lret
ds
adc
iret
loop
enter
jge
loope
push
lods
push
ja
les
mov
pop
leave
lahf
js
mov
mov
stos
and
push
cwtl
rcll
and
ret
test
test
icebp
xor
test
adc
pop
jmp
popf
dec
push
popf
mov
mov
lods
scas
mov
dec
andb
insl
mov
jp
xchg
adc
or
sbb
ja
sub
test
fcomp
aas
fists
testl
pop
push
popa
jg
imul
jmp
jae
rol
sahf
and
in
mov
mov
push
push
jmp
inc
cmp
pop
mov
xchg
sbb
fists
sbb
ja
adcb
fcoms
sbb
sarb
xchg
fisubl
aam
imul
inc
pushf
scas
in
xchg
xchg
sti
pop
xchg
adc
jo
sub
xor
frstor
outsb
icebp
adc
dec
push
pop
jae
pop
dec
ds
xor
enter
jno
jb
ret
push
clc
sub
xchg
pcmpeqw
aad
ljmp
mov
movsl
fsubrl
addr16
and
rclb
js
sbb
mov
hlt
mov
cmp
idivb
sbb
mov
push
xchg
insb
es
adc
and
cltd
out
sbb
inc
xchg
add
and
mov
arpl
adc
dec
jp
sub
xchg
mov
test
pusha
jecxz
cmp
popa
add
xchg
sysret
ffree
andb
repnz
rorb
jmp
jg
and
push
leave
pop
pop
icebp
scas
push
pushf
pop
mov
jmp
xchg
dec
mov
xchg
jne
sbb
cmp
testb
enter
rcl
cwtl
repz
jo
lods
adc
hlt
call
fwait
sub
aaa
out
pop
push
fnstcw
fisttpl
je
lret
mov
fcoml
lods
popa
xchg
xchg
cmp
and
popw
ja
xor
adc
jle
pop
push
or
cmp
pop
pop
lahf
bound
xchg
adc
cwtl
cmp
sub
cmpsb
into
dec
into
lds
pop
sub
adc
xchg
adc
push
xchg
sbb
lahf
pop
das
add
fbstp
pop
leave
cwtl
pop
jne
mov
sbb
cmp
mov
jo
sbb
cwtl
loope
cmp
and
mov
sbb
repz
in
or
sub
movsb
adc
mov
popa
add
dec
cld
xor
push
inc
jle
je
mov
testb
mov
jmp
mov
out
pop
sbb
push
mov
ds
pushf
stos
decb
js
dec
jle
fwait
ds
xchg
inc
loopne
nop
or
mov
push
lock
xchg
sti
incl
and
in
pushf
push
scas
sub
mov
pusha
sbb
rorl
push
or
add
popf
scas
or
xchg
fwait
adc
mov
mov
mov
jo
push
ror
roll
movsl
mov
sub
add
xchg
inc
jecxz
in
dec
outsb
cmpsl
and
sub
mov
sub
aam
xchg
dec
mov
in
cwtl
cwtl
cmp
push
in
jae
xchg
mov
stos
or
and
mov
or
ret
shrd
dec
test
out
cld
scas
pop
rcrl
nop
out
ss
jne
pusha
outsl
js
sbb
adc
xchg
sti
push
imul
pop
mov
mov
rolb
aam
push
iret
dec
mov
stc
pusha
into
dec
pop
jne
js
and
testl
pop
fsubrs
cmpsb
je
pop
mov
jl
in
pop
cs
dec
test
iret
out
lds
les
cmp
lods
fstpt
rolb
pop
pop
xor
push
fs
daa
jle
sbb
mov
xchg
rcl
xchg
and
cmp
lea
or
ljmp
push
je
stos
mov
ficompl
inc
dec
fisttpl
fwait
mov
or
lahf
dec
pop
pop
or
inc
pop
pop
dec
mov
divb
xchg
je
sub
jno
aas
in
fiaddl
push
sbb
ljmp
lret
xor
dec
lret
xchg
sbb
in
pop
sbb
test
dec
aaa
add
mov
xchg
xor
mov
aad
xor
and
pop
call
or
cmp
addr16
cmp
sub
push
call
add
sub
add
pushf
lock
inc
mov
pop
leave
mov
pop
inc
sbb
stos
es
jge
fistpl
ds
lods
aad
or
pop
ja
movsl
sub
repz
mov
mov
push
cli
dec
xlat
cmp
mov
jb
jbe
enter
call
lods
cmp
pop
imul
mov
push
xchg
fcomps
fs
xchg
sahf
aad
cwtl
add
fsubrl
dec
mov
xor
fistpl
sbb
in
fcmovu
pop
adc
add
xchg
loop
mov
cwtl
icebp
jnp
pop
push
cltd
push
pop
jne
dec
mov
ja
outsl
shlb
lods
xchg
cs
mov
sbb
mov
sub
xor
scas
push
pop
clc
inc
bound
push
lahf
adc
push
push
add
sbb
popa
cmp
dec
add
stos
movsb
sbb
dec
mov
aam
jae
gs
sbb
int3
daa
ret
xchg
ja
fcoml
sbb
add
int3
push
bound
test
sbb
sbb
clc
mov
sub
test
or
inc
sub
add
loop
xorb
mov
test
adc
xchg
fnop
xor
sbb
stc
ret
pop
jp
imul
mov
sub
ret
outsb
sub
bound
aaa
add
fmull
push
lds
addr16
sbb
or
hlt
add
and
inc
mov
mov
cmpsb
and
shll
repnz
shlb
mov
paddb
jno
outsb
push
mov
pop
testl
and
cmp
inc
ljmp
stos
jo
sti
mov
leave
aam
arpl
testb
and
fidivl
mov
push
mov
xchg
xchg
imul
mov
and
in
xchg
add
pop
xchg
inc
lds
sti
dec
jbe
int
xchg
cli
pop
sub
icebp
imul
push
adc
cmp
cmp
rclb
