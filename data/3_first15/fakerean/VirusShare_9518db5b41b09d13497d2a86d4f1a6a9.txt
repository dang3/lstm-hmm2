sbb
add
mov
int
sub
fisubl
xchg
cmp
jnp
cmp
mov
pop
mov
mov
movsb
rcrl
pop
pop
clc
inc
xchg
cmpsl
idiv
sub
lods
add
fs
add
push
mull
xor
or
cltd
loopne
cmp
cmc
xchg
add
stos
sbb
rolb
shlb
repnz
setb
or
test
stos
daa
mov
mov
mov
sub
stos
mov
out
push
sub
in
orb
inc
mov
js
dec
fisttps
lea
jne
popa
lret
dec
cmp
stos
xchg
jae
xchg
xor
pop
xchg
insb
mov
icebp
jae
mov
push
or
stos
adc
leave
adc
xchg
xchg
pusha
jmp
inc
pushf
xor
mov
jmp
push
pop
mov
cmp
sbb
fildl
lock
adc
lods
pop
ja
xor
shll
inc
mov
orl
dec
xchg
pop
imul
jnp
jl
cmp
inc
and
cmp
lcall
xchg
lods
test
mov
mov
sbb
outsl
xchg
push
sub
addr16
inc
dec
fimull
js
aam
push
aam
hlt
in
fcmovnu
inc
dec
sub
fnsave
jge
mov
aaa
pop
aam
sbb
lock
es
lahf
jecxz
xor
decl
lds
popf
pop
or
inc
push
cmp
shlb
or
sbbl
sub
dec
insl
repnz
outsl
xor
add
sarb
into
mov
js
add
rol
in
aad
lret
lret
pusha
or
xor
or
cmp
push
sub
mov
call
mov
mov
hlt
mov
shrb
insl
xor
cmp
xchg
adc
into
ljmp
sbb
pushl
mov
lods
dec
pop
dec
mov
sbb
adc
cld
lret
and
subb
push
cmc
outsb
rorb
idivb
call
mov
jp
add
lock
pop
mov
xor
sbb
cmp
xchg
pop
pop
stc
mov
rcrb
std
or
leave
adc
test
imul
cld
sahf
fincstp
loopne
test
orl
pop
dec
leave
std
mov
push
mov
mov
loopne
or
mov
arpl
sahf
cltd
mov
mov
decl
adc
xchg
pop
pop
out
shrb
cli
lcall
sbb
push
mov
movsb
add
sbb
fmul
andl
andl
xlat
mov
testl
test
test
dec
lahf
mov
dec
dec
push
test
adc
dec
sti
repz
sahf
addb
in
pusha
loop
jne
pop
js
xchg
mov
movsl
cli
lret
push
lock
mov
out
cmp
lret
scas
pop
frstor
pop
and
das
sub
jno
sub
dec
mov
lahf
add
xchg
and
bound
inc
dec
iret
mov
dec
mov
push
xchg
roll
mov
cmp
scas
or
dec
data16
adc
mov
adc
and
in
stos
and
mov
jbe
js
sbb
mov
es
jle
fbstp
push
mov
pop
dec
push
mov
loope
out
xor
sbb
int
fbstp
mov
adc
out
mov
jecxz
pop
lock
rorl
in
fnstcw
xor
stos
fdiv
mov
mov
sub
mov
pushf
xlat
mov
sub
shll
popf
aaa
inc
movsl
imul
mov
inc
cmp
fs
cmp
adc
fldcw
push
inc
pop
ljmp
mov
sbb
sbb
mov
xor
fisubl
in
das
test
ss
cmpsb
mov
xchg
cltd
bswap
or
pop
dec
loop
jo
cmpsl
not
fs
enter
fldcw
xchg
arpl
push
jo
shll
sbb
aaa
pushf
js
mov
pop
sub
xlat
fisubl
and
jmp
clc
fdivs
mov
insl
sahf
mov
orb
rolb
or
mov
jmp
jbe
out
scas
fwait
mov
inc
subl
imul
cmp
push
xor
sbb
dec
test
loopne
hlt
cmpsl
outsb
sub
lock
mov
leave
mov
cmpsb
mov
insb
pop
outsl
fistpll
ss
adc
andb
jle
add
pop
sbb
fcompl
enter
out
inc
mov
loope
pop
add
cmp
adc
cmp
jns
or
cmpsb
ja
data16
pop
mov
cmp
cli
or
cmp
xor
into
shrl
test
stos
push
icebp
push
add
cltd
and
push
cs
mov
lds
ljmp
xor
and
jnp
cmp
mov
lcall
das
out
or
test
adc
call
std
jge
mov
lea
int3
pushf
push
adc
repnz
add
mov
mov
mov
inc
int
cld
test
jbe
scas
pop
js
std
mov
lods
jne
pop
adc
mov
xchg
cli
sub
xorl
push
xchg
sarb
stos
test
icebp
lods
mov
push
pop
adc
push
sbb
in
icebp
xor
popa
lahf
movsb
adc
insl
mov
mov
cmpsl
adc
shl
push
inc
inc
fpatan
dec
std
mov
push
xor
cmp
int
loope
dec
pop
mov
pop
out
dec
aad
shlb
ficoml
mov
cli
repz
lret
inc
dec
add
inc
out
faddp
sahf
xlat
push
ds
ljmp
sbb
pusha
sbb
outsb
push
out
cmp
sar
xor
xor
jnp
dec
test
loopne
gs
mov
test
aam
sbb
arpl
pop
inc
inc
lahf
jle
sbb
stos
mov
push
and
sub
sub
aam
push
xlat
lods
ja
pop
aam
inc
push
in
dec
cli
and
in
int
pop
fiadds
test
xchg
fiadds
ja
xor
jne
test
outsb
rcll
mov
pop
lods
cmp
popa
adc
dec
leave
jb
and
cltd
mov
je
pop
lods
or
imul
imul
add
or
or
lahf
xchg
xchg
sbb
outsl
sbb
add
mov
int3
xchg
mov
shrb
pop
xchg
nop
arpl
pop
jno
xchg
mov
push
mov
xchg
lock
sahf
mov
sbbl
pop
popa
out
fs
and
cmp
clc
loopne
adc
aas
cmp
adc
fdivl
sahf
out
lds
sbbb
fsubr
aam
sbb
fnstenv
pop
jns
mov
push
push
fdiv
dec
in
shl
or
fnstenv
xchg
inc
int
sbb
mov
push
cmp
cmp
mov
pop
mov
xor
insb
dec
dec
fists
add
push
cmp
daa
inc
clc
popf
xor
xor
loope
ljmp
fldcw
push
popa
inc
pusha
xor
mov
mov
push
jb
inc
and
add
sti
xchg
sub
mov
ret
jmp
xor
sub
or
jle
add
jge
cmp
aam
sub
ret
ja
mov
rcll
xchg
jno
push
pop
mov
dec
outsl
les
lret
enter
into
jp
fidivl
loope
lock
popa
cltd
add
xchg
lea
jge
sub
pusha
jle
mov
cli
inc
out
adc
xor
inc
enter
sbb
int3
fdivr
or
push
or
xchg
mov
sub
and
push
mov
mov
cld
insl
push
mov
sahf
in
pop
movsb
icebp
aad
add
aas
mov
fists
out
cmpsl
mov
ret
out
jne
pop
flds
dec
xchg
lea
leave
enter
xchg
mov
fstp
and
pop
mov
dec
loop
ret
into
lret
rclb
add
ret
push
shl
mov
mov
outsl
and
out
fisubl
inc
stos
mov
ffree
add
pop
cmp
mov
xchg
leave
das
in
lret
out
dec
adc
jmp
jecxz
add
push
jp
ret
mov
pop
jmp
mov
das
roll
sbb
fists
lods
mov
repnz
sbb
mov
test
push
roll
aaa
idivl
ret
leave
add
and
xor
loope
xchg
sub
mov
push
and
lahf
movsb
shrl
movsb
xchg
or
cltd
stos
leave
cmpsl
test
dec
xor
jg
test
in
mov
loope
or
in
call
pop
in
sbb
mov
and
mov
sub
inc
inc
mov
orl
lds
push
fs
mov
xchg
das
xchg
lahf
xchg
or
jbe
push
jmp
xlat
pushf
xchg
cmpb
adcl
sbb
dec
out
popl
cmp
sbbb
jno
push
cmp
mov
lahf
fiadds
dec
xor
arpl
iret
jmp
in
mov
jb
jo
fists
call
jno
sub
vpmadcsswd
ss
jmp
mov
bound
or
lret
adc
pop
ret
pop
cltd
enter
mov
enter
mov
inc
dec
outsl
inc
sbb
ret
sbbl
stos
addr16
pop
jne
mov
sub
mov
test
xchg
fcomp
test
sbb
loope
inc
and
xor
sub
add
fisttpl
outsb
jbe
loope
mov
xor
cmp
push
sbb
fadds
mov
push
leave
popa
add
fists
lret
inc
xchg
shll
mov
movl
push
xor
jb
mov
mov
fldcw
adc
lock
fprem
js
xchg
jl
in
aad
aad
add
push
inc
cmp
insl
pop
leave
push
push
or
jg
and
jno
je
push
sbb
sbb
fs
in
out
xor
pop
dec
xchg
jg
es
dec
sahf
xlat
mov
pop
ja
sbbl
and
insb
es
pushl
cmp
pushf
mov
xor
push
push
dec
mov
std
fstpt
js
and
dec
and
push
inc
jae
sahf
inc
out
mov
push
add
jecxz
andl
xor
cltd
mov
lret
jge
int3
je
xor
xchg
dec
movsl
cmpsl
cmp
mov
push
push
iret
mov
test
ret
jp
out
sbb
imul
xchg
dec
ds
pop
imul
add
or
mov
ret
imul
cmp
dec
mov
dec
xchg
icebp
jg
call
fcmovne
cmp
sbb
jp
mov
addr16
stos
pop
movsl
lock
dec
sbb
cmc
sub
imulb
ficompl
sub
jmp
lret
pop
lcall
xchg
aam
adc
mov
xchg
stc
mov
xchg
lods
sbb
jb
xchg
aaa
sub
mov
int3
pop
jo
mov
popa
inc
xlat
clc
inc
inc
xchg
pop
frstor
xchg
aaa
andb
outsl
out
test
add
push
icebp
or
cli
or
inc
pop
bnd
pop
mov
push
mov
decl
scas
push
out
jns
fisubs
add
adc
xchg
ret
push
outsb
push
ljmp
sbb
lds
out
into
es
decl
fdivrp
jmp
stos
xchg
and
cwtl
inc
cwtl
ljmp
outsl
popf
testl
mov
mov
data16
push
jbe
out
mov
inc
pop
dec
ror
push
dec
mov
push
add
add
xchg
fmulp
cmp
push
inc
cs
push
pushf
xorl
push
test
lods
inc
in
lahf
and
in
or
xchg
pop
cld
or
movsl
outsb
js
inc
jle
xor
jno
outsl
mov
lcall
paddusb
out
xchg
push
push
aas
inc
sbb
enter
gs
jns
cmpsl
cli
and
sbb
pop
ds
ss
sub
leave
sahf
or
imul
cmpsl
sti
out
dec
js
popa
add
add
cltd
ljmp
inc
es
pusha
ljmp
jns
aam
pop
mov
xor
lea
mov
mov
pushf
cmpsl
fstp
in
enter
ja
cltd
cs
insb
mov
aad
cs
into
leave
aam
adc
adc
jecxz
insl
cltd
mov
in
call
push
jl
xchg
inc
in
mov
in
mov
adc
dec
mov
xor
cmp
pop
aam
mov
sbb
cmp
and
dec
mov
xor
sbbb
mov
push
xchg
push
cltd
pusha
mov
sbb
mov
sub
add
push
rorb
ss
xchg
xor
ret
lods
mov
repnz
loop
mov
fisubs
fcom
jecxz
pop
cmc
adc
xchg
out
repz
fbstp
imul
xor
sbb
cmp
shll
adcb
jo
fs
pop
int
mov
clc
add
sbb
mov
fs
jl
mov
pop
lahf
push
push
push
outsb
add
adc
cld
pop
repz
xchg
cmp
or
xchg
int
push
and
pop
adc
cmp
sbb
lcall
std
insl
xchg
arpl
stos
mov
cmp
addr16
cmp
add
dec
mov
popl
arpl
xor
popa
or
mov
cmpsb
int
sub
xchg
outsl
rolb
cmp
aaa
xchg
add
and
lock
cwtl
loope
je
adc
adc
sahf
out
fwait
scas
jl
aad
int
cld
gs
jge
jns
nop
icebp
jno
movsl
arpl
adc
mov
inc
in
pop
ret
iret
mov
cmp
js
rcrb
testl
jbe
mov
scas
popa
sub
mov
dec
jns
push
cld
pop
inc
repnz
aad
in
mov
pop
adc
jbe
mov
fdiv
outsb
pop
in
rcr
sti
cmp
push
decb
sub
enter
xchg
ljmp
movsb
jg
js
ljmp
leave
arpl
mov
lret
cmc
test
adc
icebp
es
call
outsl
add
mov
nop
mov
adc
into
cs
call
leave
icebp
shrl
cltd
dec
ret
dec
mov
arpl
lds
mov
nop
cmp
movsl
loop
inc
xchg
jae
inc
lret
dec
jp
lahf
cld
stos
lret
aaa
xor
jns
pop
shlb
frstor
addb
enter
cmp
sti
scas
jp
fcom
nop
xlat
aas
scas
mov
pop
bnd
push
pop
xor
ret
mov
jbe
clc
adc
or
pop
rol
pop
lds
jo
mov
xlat
push
or
xor
jb
lds
mov
xchg
pop
lahf
repnz
dec
test
ret
adc
xchg
hlt
addr16
das
jae
mov
pushf
fwait
xchg
int3
mov
lret
clc
mov
lahf
mov
mov
xchg
sbb
cmp
jecxz
mov
and
imul
fildll
sti
adc
lret
stc
clc
vprotd
das
xadd
sbb
ret
inc
je
mov
push
data16
mov
adc
add
xor
in
jno
and
int3
push
and
dec
cwtl
int
jecxz
and
aad
repz
hlt
pop
gs
iret
outsb
in
out
jbe
scas
mov
in
int3
or
pop
mov
mov
fs
inc
imul
sub
popf
dec
sahf
pop
xchg
adc
dec
fsubl
adc
or
nop
cli
repnz
pushf
push
rorl
xor
mov
inc
stc
xlat
dec
sub
testb
movsl
std
add
cmp
inc
maxps
rcll
cs
xchg
or
ret
inc
loop
jle
pop
fldl
lds
pop
mov
dec
push
sahf
loopne
les
lea
and
cmpl
jp
xor
test
add
es
mov
rcll
in
rolb
fisubrs
pushf
xor
xchg
push
aaa
adc
jne
xchg
outsb
out
jo
js
xchg
add
pop
jge
sbb
add
sbb
popa
data16
mov
mov
cld
cli
int3
or
sbb
cmp
sub
add
inc
test
mov
jle
cmc
push
xchg
clc
xchg
dec
orl
cmp
add
fisttpl
popa
xchg
dec
and
fs
hlt
filds
cmpsb
mov
add
push
add
stos
aam
cmp
xchg
xchg
pop
cld
sub
jns
dec
xor
or
inc
mov
pop
and
ja
xchg
inc
int3
mov
ret
xchg
jno
mov
sub
or
popa
arpl
inc
pop
popf
jge
push
mov
mov
adc
add
cmp
xchg
xchg
insb
adc
mov
mov
sbb
xorl
call
jne
sbbl
xor
sbb
in
loopne
pushl
popa
push
sub
cli
dec
call
aaa
je
mov
mov
mov
xchg
push
das
mov
ficoms
pop
in
mov
push
adc
cmp
xor
mov
add
xorb
adc
or
push
add
pop
sub
rolb
sbb
mov
sub
sbb
ret
cltd
aas
cmpsl
sahf
addr16
cmp
cmp
int3
mov
ljmp
inc
mov
loope
insl
js
sub
pop
shlb
add
add
xor
adc
jmp
les
jle
andb
mov
and
shlb
popf
inc
int
subl
pop
pop
addb
lea
sbb
test
les
pop
fists
fbld
adc
jb
jb
out
and
lods
push
orb
insb
cmp
jle
icebp
xchg
out
rorb
test
mov
adc
mov
aaa
add
inc
cmp
das
jecxz
inc
xor
mov
dec
mov
lret
test
lods
clc
sbb
enter
test
xchg
jge
inc
movsb
lock
cmp
xor
pop
push
inc
fs
loope
mov
sbb
mov
sbb
sub
arpl
daa
mov
push
pop
jb
pop
out
test
les
nop
pop
in
cmp
cmc
in
push
mov
cli
pop
mov
or
and
shl
out
dec
lds
cltd
add
stos
push
mov
sub
lds
jbe
cs
inc
pop
xchg
sarb
rcrb
das
adc
cmpb
and
lock
mov
and
push
mov
jg
repz
ss
pop
mov
xor
test
sub
mov
popl
mov
xchg
jne
mov
in
dec
mov
das
ret
das
xchg
pop
addr16
jl
cwtl
mov
int
jns
pop
inc
mov
jp
push
xchg
adcb
push
pop
adc
out
in
cld
loopne
mov
ds
or
dec
sbb
mov
test
sbb
sub
jmp
bound
int3
sbb
push
outsb
ljmp
and
add
dec
add
les
fcoml
cmc
dec
fucomip
dec
mov
clc
cmc
out
xor
xor
add
push
stos
loop
cmp
sub
jb
push
ret
sub
ds
push
sbb
jge
sub
push
aas
ja
fidivrl
push
js
mov
mov
xchg
jb
sub
sbb
push
cli
incl
or
push
adc
pop
int
dec
out
push
xchg
push
or
es
and
xchg
or
dec
push
push
cmpsb
add
lcall
sahf
jmp
fwait
and
fnstenv
js
repnz
ljmp
inc
jnp
mov
sbb
aas
cltd
mov
lods
cmpsb
sub
jg
xchg
nop
orb
or
in
movsl
mov
out
xchg
jl
mov
ret
vcmpsd
cmp
roll
cmp
icebp
add
add
jbe
cs
les
stc
sub
or
popw
xlat
pop
jge
mov
mov
dec
cmpb
add
lock
mov
xchg
scas
add
adc
xchg
sti
test
sub
push
dec
and
jae
sub
and
push
adc
pop
inc
insl
mov
stc
mov
jb
cmp
xchg
lret
adc
jne
inc
mov
sarb
jno
inc
xor
pop
mov
mov
pop
dec
mov
mov
jg
pushf
inc
gs
dec
inc
das
push
mov
or
es
sub
adc
sbb
popa
push
push
mov
xor
jl
fdivrl
jno
int
mov
and
out
es
scas
jno
push
mov
ret
sahf
popf
incb
or
ret
jge
jo
pop
mov
and
xchg
pop
sahf
aad
aam
gs
scas
adc
leave
jne
add
stos
xor
fmull
ja
ret
pop
xchg
adc
xlat
fwait
or
add
rcrb
lods
push
mov
inc
mov
push
jecxz
mov
scas
or
dec
push
or
fcmovu
mov
jns
jo
xchg
rclb
dec
xor
loope
or
inc
lock
in
repnz
xchg
cmp
mov
push
mov
mov
imul
aad
jecxz
jmp
push
imul
jnp
push
imul
call
cmp
xchg
mov
test
fwait
je
loop
xor
sarl
push
mov
clc
jo
jp
and
test
jns
test
pop
rol
sub
mov
adc
cmpsw
leave
add
arpl
int3
call
jne
mov
ret
xor
shrl
stc
mov
lcall
or
xchg
or
repnz
sbb
push
or
popf
mov
xchg
mov
mov
cs
daa
sbbl
adc
xor
cmp
xchg
add
sahf
or
push
inc
and
xchg
jmp
bound
mov
ljmp
cmp
inc
mov
outsl
inc
mov
push
inc
les
mov
sub
push
mov
or
nop
imul
pop
test
xor
xchg
push
push
dec
push
or
xchg
xor
pushf
adcl
pop
push
clc
xor
jp
pop
lret
mov
add
lds
sarl
fldz
int3
loope
push
mov
xor
fsubr
imul
lods
orl
iret
aaa
mov
bound
loop
inc
adc
shlb
mov
mov
mov
mov
jmp
cmp
xchg
jle
enter
sub
jle
out
pop
test
nop
mov
repz
inc
mov
add
push
aas
sbbb
jle
cmp
ret
cmp
adc
adc
or
sbb
in
ss
jl
dec
mov
pushf
push
mov
add
push
out
sbb
adc
sahf
sbb
cmp
xor
xor
cltd
mov
lcall
sbb
and
cs
inc
dec
outsl
std
ret
sbb
or
add
adc
jg
or
jbe
cmp
int
jl
in
aam
mov
insb
ficomps
xchg
jmp
pushf
test
in
push
push
sub
arpl
and
mov
inc
loop
sti
jno
push
mov
jle
push
pushf
or
adc
rolb
ss
sub
ljmp
add
or
fcomip
pop
mov
leave
mov
push
dec
popa
mov
imul
inc
cli
push
jns
movsl
sbb
add
inc
xor
dec
pop
xchg
mov
mov
mov
adc
pushf
test
insb
shlb
push
sbb
movsl
xorb
pop
das
xorb
ljmp
xor
mov
lods
dec
in
sub
pusha
pop
das
push
push
or
out
or
rcr
pop
or
inc
pop
or
lea
cmp
fisubs
xor
jge
dec
fcom
or
inc
inc
ss
pop
lret
aam
mov
repz
movsl
xchg
sub
cli
daa
popf
fwait
test
aam
data16
sbb
cmp
add
fnstsw
fld
dec
and
dec
adc
pop
xchg
test
arpl
inc
loope
pop
push
out
cmp
ret
pusha
cmp
xor
push
push
jecxz
cmp
ret
in
mull
repnz
mov
sbb
lea
inc
sbb
cmp
mov
stos
rep
xchg
pop
cwtl
dec
fisttpl
sub
sbb
lahf
imul
jge
add
shrl
sarb
or
dec
and
out
and
push
pushf
adc
pop
and
shrb
sub
enter
mov
push
out
mov
push
mov
cmp
in
add
mov
mov
xchg
jg
inc
scas
adc
jmp
call
cmp
in
repnz
lock
mov
mov
or
push
mov
incl
push
mov
pop
lock
addb
orl
dec
cmpsl
cld
data16
cmp
pop
cmp
repz
mov
or
dec
jp
popa
push
imul
sub
ds
test
cmc
aaa
jmp
inc
out
fists
bound
scas
mov
dec
or
fs
mov
addl
and
rolb
add
mov
movsl
dec
rolb
mov
mov
dec
cmpsl
iret
push
imul
xchg
jb,pn
testl
xchg
jbe
sbb
cmp
out
cmp
push
xchg
jmp
dec
adc
mov
fimull
sub
loopne
pop
and
mov
aad
addr16
clc
shlb
aad
lock
lock
and
mov
and
jp
in
sbb
sub
stos
loope
inc
outsl
mov
mov
adc
iret
lods
add
sub
shrl
adc
fucom
aad
jg
mov
cli
and
or
sbb
shlb
jl
inc
jp
xchg
rorl
pop
pop
mov
sbb
inc
add
and
in
lock
pop
cmpb
sub
pop
xchg
out
adc
in
sbb
mov
xor
ret
adc
repz
xor
jle
lds
push
sub
ljmp
mov
push
aam
jge
icebp
inc
fnstcw
daa
ja
jge
adc
inc
and
add
or
lods
movsb
dec
fistps
jbe
fdivrl
cmc
scas
push
inc
mov
scas
adc
and
push
jecxz
sbb
adc
jo
push
fidivs
jae
dec
repnz
aad
cmpsl
in
pop
es
popa
cli
cmp
xchg
aaa
sbb
sbb
dec
lret
inc
mov
push
add
out
call
int3
cmp
and
jnp
or
mov
sarb
je
sub
sub
fnstsw
in
cmpl
jg
mov
rorl
mov
into
pop
xor
and
mov
popf
mov
nop
int
mov
nop
fistps
lods
xchg
test
jnp
add
cli
arpl
lcall
jg
ds
adc
inc
dec
jmp
dec
lods
aad
lods
sub
add
sbb
adc
mov
inc
or
inc
mov
aas
btr
sbb
insb
jmp
and
cld
jb
dec
rcrb
pushf
incl
in
ss
push
sbbl
fnstcw
stos
mov
imul
mov
inc
cmp
icebp
push
mov
ljmp
adcl
xchg
cld
xor
dec
lods
lcall
cmpl
stos
or
popa
add
jg
iret
sbb
sbb
dec
or
int3
mov
pop
and
mov
ret
or
jmp
stos
daa
mov
clc
cmp
movsl
xor
sub
jmp
add
aam
test
adc
mov
movsb
movsl
loopne
jp
ja
adc
adc
cmp
push
enter
add
lcall
aas
incb
inc
pop
xchg
and
mov
ja
shl
add
mov
gs
adc
mov
imul
add
test
jns
or
loope
call
sbb
adc
andb
add
add
fimull
jg
fidivrs
push
test
out
push
movsl
sbb
add
cmp
pop
xchg
aaa
insl
mov
cmp
jg
scas
dec
daa
test
mov
cmc
push
lock
rcll
pop
ds
pop
cmp
nop
repz
add
inc
sub
mov
push
lods
xor
movb
daa
pushf
loop
dec
cmp
repnz
ja
popf
add
mov
mov
push
loop
sti
push
lcall
jae
adc
ficoml
imul
scas
lcall
xchg
stos
pop
inc
pusha
fsubl
jno
aas
add
je
in
clc
jo
inc
sbb
xchg
cmp
add
les
mov
pop
jb
outsl
cmc
jbe,pn
push
push
sbb
stos
mov
cmp
push
and
pop
pop
fcomi
mov
in
cmp
push
mov
pop
push
pop
outsl
ficompl
and
add
or
inc
inc
mov
sub
test
mov
xlat
stc
sub
push
shlb
push
add
repz
pop
xor
sub
jbe
jecxz
pop
mov
and
in
cmp
daa
lcall
stos
add
cltd
mov
addr16
fmuls
das
mov
pop
sub
mov
inc
addr16
and
pushw
mov
fs
sub
ficoml
out
scas
movsb
es
cvtps2pd
dec
push
cmpsb
jp
jmp
mov
js
mov
xchg
cmp
cltd
jne
mov
push
add
jecxz
add
div
jl
mov
jns
ljmp
push
lea
or
jmp
jp
shlb
xchg
add
test
mov
mov
mov
mov
ljmp
add
stos
dec
add
inc
mov
or
jle
scas
mov
mov
ss
add
push
subl
sbb
push
sub
sbb
aam
add
js
push
ret
ds
in
test
pop
mov
sbb
jmp
push
dec
lds
mov
or
rol
dec
sub
les
mov
adc
cli
mov
sbb
cmpsl
or
jne
inc
jne
sub
filds
mov
push
leave
fsubp
in
dec
rclb
xchg
add
xor
xlat
arpl
in
je
push
daa
ret
aam
inc
lea
sbb
gs
dec
sbb
and
pushf
push
lea
pop
mov
pushf
mov
inc
push
cld
inc
lahf
mov
mov
mov
mov
sbb
fidivrl
imull
mov
xchg
orb
mov
scas
clc
loope
jl
xchg
orl
cmp
jecxz
xor
xchg
call
sub
push
sbb
mov
in
pop
add
mov
notb
ljmp
mov
xor
inc
mov
mov
mov
sarl
adc
mov
push
and
mov
pop
nop
stos
repnz
xchg
or
enter
push
ret
bound
and
scas
jg
test
divl
dec
dec
mov
pop
repz
sbb
fcomp
addr16
add
mov
xor
ret
and
adcl
mov
fimuls
ds
jle
pop
jmp
xor
lret
jb
js
test
arpl
or
lahf
xchg
pop
cltd
lds
sbb
sbb
aaa
repz
cmp
inc
shll
shrl
and
push
add
push
lret
fnstenv
call
lahf
jmp
in
dec
sbb
xor
xchg
mov
ja
nop
lea
mov
xchg
enter
add
rcrl
or
lret
shlb
fidivs
and
sahf
push
cmc
shlb
mov
pop
push
push
scas
int
jecxz
sbb
mov
mov
mov
fmulp
jne
mov
push
push
mov
mov
aaa
and
cli
test
movsb
stos
inc
add
test
daa
xchg
and
stos
inc
xor
aas
sub
movsl
fwait
jg
mov
xchg
insl
sub
xor
cmp
xor
outsl
mov
out
dec
divl
and
cmp
icebp
inc
fmulp
cmp
pop
gs
call
cmp
dec
add
jne
inc
push
add
xchg
sbb
in
push
mov
loop
mov
xabort
cmp
xchg
jno
std
sbb
push
scas
and
into
vandps
je
dec
insb
xchg
enter
inc
stc
pop
inc
pop
xor
pop
sbb
sub
or
std
sbb
xor
pop
jae
sub
mov
int
mov
loopne
jne
les
fsubrs
sahf
out
rcll
ja
inc
mov
or
jmp
test
adc
mov
fdivrl
dec
xor
jp
push
aaa
aad
sti
jae
and
pop
dec
or
pop
fnstcw
jp
push
ret
jmp
in
xchg
jp
inc
adc
mov
add
mov
push
dec
mov
in
aad
and
jle
leave
and
or
lods
dec
shlb
daa
or
sti
push
in
cmp
pushf
or
movb
sbb
enter
test
nop
arpl
mov
ret
daa
pusha
psubsw
shll
pop
pop
fs
out
lcall
push
xchg
xchg
and
adc
xlat
adc
scas
aaa
cmp
ficompl
gs
rcll
rorl
mov
push
mov
push
fldt
loop
sti
mov
mov
cld
cmpsl
sbb
add
push
movsl
leave
and
test
push
jnp
cmp
adc
out
insl
call
addr16
pop
repz
add
cmp
inc
imul
aas
cmp
fs
cli
ret
xor
xor
pop
subb
cmc
jmp
in
cwtl
adc
push
sub
jmp
add
into
mov
cld
mov
dec
adc
out
cmpsl
push
scas
and
adc
xchg
pop
sbb
xor
lcall
outsl
mov
and
push
in
cmp
inc
jmp
cmc
cltd
nop
jmp
nop
adc
mov
int
scas
and
mov
adc
mov
in
dec
mov
fstpl
es
movsl
les
mov
repz
adc
mov
sahf
add
mov
out
jno
xchg
sub
push
repz
clc
mov
scas
xor
lods
cvtpi2ps
dec
and
mov
add
sahf
cmp
insb
adc
push
aas
test
jb
and
fimull
fmul
jge
nop
sub
adc
jo
mov
push
mov
aam
sub
xchg
lds
test
mov
pop
arpl
clc
enter
xchg
in
aaa
cmp
incl
push
inc
enter
push
test
add
fptan
xor
dec
mov
xchg
outsl
rolb
lea
rorb
jb
call
mov
leave
push
lahf
daa
es
stos
call
and
out
lods
pop
mov
lds
cmp
pop
jns
xchg
js
push
mov
pop
into
push
jge
lods
ss
adc
mov
mov
mov
sti
and
xor
mov
fsubrp
std
scas
lret
pop
stc
pop
sbb
mov
xchg
mov
lahf
or
test
xor
in
adc
in
aam
cli
or
arpl
push
or
adc
jl
and
das
adcb
jecxz
dec
adc
inc
ljmp
fnstsw
mov
jge
push
ljmp
push
and
insl
cli
lods
sbb
push
mov
cmc
rorb
jg
inc
add
dec
and
stos
push
add
or
idiv
mov
mov
out
movsl
or
insb
push
adc
cmp
ficoms
imul
sbb
shlb
stos
mov
ja
inc
popf
jle
xlat
cmp
mov
jge
enter
sbb
nop
stc
fs
out
fmull
stos
subl
into
dec
dec
data16
lods
jno
add
daa
push
xchg
filds
std
add
jle
push
xchg
add
cmp
push
rcrl
dec
test
in
push
imul
aad
icebp
mov
or
rolb
movb
insb
pop
or
aas
xor
stos
cmp
mov
sbb
and
inc
push
or
in
and
and
bswap
push
hlt
jb
mov
inc
hlt
and
cmp
stos
push
and
out
outsl
adc
cmp
fs
out
stc
aaa
adc
push
bound
dec
popa
idivb
adc
repz
xchg
pop
push
mov
xor
cmc
out
dec
sti
sub
cmp
test
push
jns
pop
push
btc
divps
leave
loope
mov
sbb
sbb
sub
pop
sti
inc
lds
jmp
or
mov
mov
js
dec
inc
mov
pop
xchg
or
dec
jecxz
imul
sbb
sbb
dec
cmovge
std
lcall
lock
fisubrs
mov
leave
jmp
popa
inc
or
jecxz
push
jae,pn
repz
jo
sti
je
mov
xchg
fs
pop
fucomip
and
cmpsb
aam
ss
lcall
and
das
jmp
sub
popf
inc
or
sbb
inc
fnsave
lds
mov
sbb
push
out
cli
pop
xchg
adcl
add
xchg
push
xor
cltd
jae
iret
push
int
lret
xchg
aas
cmp
mov
movl
subl
arpl
into
dec
and
cmc
push
into
out
push
lock
xor
jge
push
push
mov
push
negl
pop
cmpsl
and
shll
inc
test
sbb
adc
xor
inc
mov
xchg
sub
loopne
xchg
sbb
pushf
imull
mov
sub
mov
push
bnd
dec
test
js
pop
rcr
cmpb
add
sbb
and
sbb
notl
fidivs
and
xchg
int3
mov
sub
les
ds
call
fwait
push
push
mov
pop
fs
and
stos
sbb
jp
dec
ret
clc
les
mov
sbb
scas
sbb
cmpsb
aad
mov
pop
jl
rcll
test
aam
repz
sbb
jo
add
pop
mov
adc
sbb
xchg
mov
jle
xorl
subb
lret
dec
push
sbb
and
ret
mov
add
inc
push
test
outsl
xchg
popa
and
imul
inc
iret
sub
push
std
mov
ret
or
dec
cld
and
call
lahf
bnd
sub
mov
lahf
cmp
ds
movsb
xchg
sti
mov
rcrl
jns,pt
pushfw
lahf
jbe
mov
cld
mov
lods
int
daa
mov
sub
aad
sbb
dec
jg
jo
iret
bound
inc
jo
sarl
adc
fcmovu
mov
pop
pop
out
dec
dec
test
fstl
mov
arpl
mov
lea
jmp
das
inc
jmp
xchg
in
outsl
add
sbbl
xor
sbb
fstl
fstpl
push
js
adc
lods
subb
arpl
inc
lock
je
std
pop
fwait
mov
lret
or
dec
xchg
cmc
mov
inc
add
ja
leave
dec
inc
pop
test
iret
sub
in
xchg
mov
lret
xor
xor
xchg
in
push
xchg
leave
inc
xchg
adc
mov
ja
insl
pushf
inc
inc
clc
pop
inc
shl
adc
adc
test
shrb
cwtl
or
mov
sti
je
push
or
push
out
cmpsl
and
int
sbb
decb
pusha
test
fcoml
das
dec
mov
inc
aas
cmp
movsl
push
jp
lock
loope
jno
lahf
pop
call
inc
in
jne
xor
mov
cli
xchg
sub
mov
scas
xor
ja
and
jns
cmp
add
or
fcomip
lods
jns
adcb
test
mov
xchg
out
mov
or
addb
nop
ret
int3
xchg
sarl
mov
push
jo
push
jecxz
cld
icebp
jae
enter
mov
cmp
ljmp
mov
jl
icebp
ljmp
jo
and
inc
out
inc
dec
jl
call
sub
in
cmpsw
dec
in
sub
jmp
push
orl
aaa
std
push
adc
negb
sub
pop
mov
sbb
cmp
je
stc
clc
lods
adc
lret
pop
mov
add
mov
cli
mov
mov
hlt
lds
sbbb
ret
or
xorb
xor
clc
adc
adcb
out
xchg
out
stos
bnd
mov
dec
add
mov
xchg
inc
cwtl
sbb
arpl
stos
add
hlt
movsl
sub
out
inc
loope
jmp
ret
adc
imul
mov
dec
sbb
imul
loop
loope
aam
sub
insb
gs
cmp
testl
pop
add
dec
push
jmp
sub
cli
repz
sbb
cmp
sahf
adc
std
xor
push
mov
loop
notl
jnp
mov
sub
aam
sahf
out
jns
adc
js
imul
mov
xchg
sub
popf
cmp
mov
mov
fsubs
jl
push
ljmp
icebp
fistl
jne
inc
sti
jae
mov
or
jnp
xor
or
nop
adc
cli
les
leave
add
arpl
dec
jnp
imul
push
push
cmc
add
cmp
mov
jo
out
pop
mov
fimull
pop
jmp
add
enter
mov
int3
mov
ret
mov
mov
mov
std
dec
movsb
aas
fs
mov
iret
movsl
nop
gs
cmc
lea
mov
push
cmovl
aam
jl
dec
cld
sub
pop
pop
pushf
mov
mov
xor
cmp
movb
repz
cli
shll
icebp
pop
jl
and
rsm
sbb
andb
xchg
loopne
dec
inc
test
mov
cli
cltd
jbe
pop
dec
jae
push
cmp
lcall
jne
iret
aaa
in
sarb
adc
and
and
pop
sub
pop
insl
out
cmp
fsub
cbtw
mov
dec
push
inc
insl
sbb
mov
enter
das
shrb
adc
test
mov
xchg
pop
cmp
jp
into
xchg
sahf
cmp
test
test
mov
ja
aaa
into
xchg
pushf
leave
mov
dec
jne
cmc
aaa
jns
sub
sahf
xor
jnp
push
cmpb
ja
cmpsl
push
imul
cmpsl
xor
jg
test
sbb
jb
sarb
ret
add
sub
lock
out
sub
adc
popa
push
enter
or
and
pop
fchs
les
in
cmp
xchg
mov
stc
mov
xor
mov
dec
mov
push
push
add
outsb
in
jle
std
out
xor
push
push
jno
inc
call
outsb
xor
in
loopne
push
in
fbstp
insb
andl
adc
in
adc
sbb
sbb
xchg
and
inc
pop
push
cwtl
jnp
xchg
pop
pop
sbbl
pushf
inc
and
mov
push
test
roll
mov
repz
push
fiadds
in
pop
cld
xorl
xor
mov
fsubl
inc
mov
mov
add
push
push
cmpl
inc
rcll
aaa
inc
ss
sub
sub
xchg
roll
movsb
out
mull
cld
xlat
jae
out
mov
mov
test
jne
pop
lret
cmc
xchg
enter
cmp
cmp
outsb
sbb
fbld
mov
mov
loop
insl
inc
ret
jae
xlat
in
test
testb
aad
cmpsl
fwait
sub
into
out
mov
pushf
adc
mov
ret
movsl
jp
test
repnz
xchg
or
mov
negb
add
inc
xchg
adc
lret
lcallw
ficoms
fadds
or
je
aam
sub
arpl
inc
sahf
mov
sub
insb
fwait
adc
jge
pop
pop
into
and
lcall
je
mov
lods
fwait
or
cmp
jae
repnz
in
in
dec
cmc
and
adc
leave
fiadds
xor
push
sbb
xchg
xor
mov
dec
inc
mulb
mov
dec
jl
insl
jae
and
cmpsl
mov
mov
test
dec
pop
dec
inc
aad
sbb
or
fldln2
adc
in
cmpsb
push
aaa
and
lret
add
sbb
push
sahf
stc
sbb
mov
out
xor
push
xchg
inc
sarb
sbb
mulb
lret
xor
mov
gs
jg
mov
pop
jmp
dec
ss
push
loope
jnp
cld
and
sarl
sbb
scas
mov
add
imul
movsb
stos
inc
sbb
sub
loopne
cli
sbb
imul
jbe
push
xor
mov
stos
das
push
pushf
sub
mov
insl
in
inc
jp
push
or
mov
sahf
adc
sub
and
sti
xor
leave
xor
mov
ss
fidivrs
scas
sahf
lds
fistpll
scas
sub
jbe
push
or
rcr
unpckhps
mov
inc
inc
mov
jge
sub
inc
aam
mov
and
xchg
pushaw
sbb
hlt
inc
xor
jle
popw
sbb
jbe
sahf
add
in
cltd
cmpl
push
xor
out
jge
imul
dec
xchg
xchg
mov
inc
inc
sbb
add
sbb
lock
mov
rorl
push
das
outsl
sbb
inc
fs
mov
sub
jmp
fadd
sub
pop
push
pop
cmp
cli
adc
es
or
sbb
inc
out
pop
sti
xchg
test
push
ret
cld
and
push
mov
adc
ljmp
out
mov
add
or
or
fdivrl
jae
pushf
rclb
or
adc
cmpb
je
clc
ret
stc
pop
test
push
mov
sub
pop
cli
jb
pusha
sub
dec
js
pop
sub
sub
xchg
push
int
pop
hlt
fcomi
mov
fstl
mov
out
sbb
fucom
clc
lcall
mov
dec
mov
test
xor
cmp
mov
mov
fcomp
jae
cld
negb
inc
cltd
roll
adc
xor
cmp
xchg
popa
push
dec
mov
cltd
jbe
jne
mov
pop
test
das
int3
cs
sbb
push
adc
xor
fdivrs
or
rcl
sub
int
jns
push
mov
sbb
addl
sbb
sub
inc
aad
add
les
mov
and
sarb
jle
cmpsb
add
add
out
je
loopne
pop
or
mov
cmp
xchg
mov
hlt
call
aaa
add
repnz
pushf
cmp
mov
jno
jmp
fs
fcompl
jbe
xorl
sti
mov
mov
cmp
mov
cld
enter
xchg
xchg
push
aad
nop
inc
dec
or
push
jg
push
or
mov
mov
mov
pop
movsb
loop
dec
mov
test
or
movb
xchg
lcall
negl
fsts
bound
mov
xchg
push
mov
scas
mov
sub
add
ds
inc
jns
dec
enter
adc
cmp
cmpsl
sbb
adc
push
xchg
dec
outsb
rorl
adc
sarb
xor
fwait
pusha
mov
cmpsl
movsl
cmp
in
imul
and
cmp
ja
lea
call
pop
and
dec
add
imul
lock
lahf
shll
fisttpl
movsb
xchg
cmp
in
jle
cmp
out
out
shll
sbb
fwait
repnz
jmp
xor
lret
mov
mov
xor
dec
lods
test
mov
fsubr
jmp
shlb
out
sbb
adc
sub
cld
add
fwait
subb
lock
push
dec
addr16
add
cmp
cmp
push
mov
cmove
subb
sub
mov
rcl
pusha
cmp
mov
shll
test
add
pop
mov
dec
mov
xor
shlb
jne
into
fsubrs
inc
cmp
js
mov
mov
sbb
pop
scas
jl
jl
sbb
leave
fcoml
lret
loop
notb
mov
das
jns
mov
pop
inc
daa
int
jns
lea
dec
testb
and
stc
pop
dec
mov
add
in
jmp
out
xor
sub
inc
movntq
out
fs
pop
jae
push
jg
sbb
mov
test
cld
xchg
fidivrl
rorl
pusha
pop
adc
mov
lea
pop
ss
or
test
out
subl
mov
cltd
add
lds
cwtl
mov
pushf
add
int
xchg
mov
in
pop
sti
xchg
lahf
xor
fiadds
xor
data16
bound
push
mov
dec
scas
push
insb
addr16
ficomps
add
inc
add
cltd
jle
movsb
out
pop
add
mov
jbe
pop
mov
push
push
cmp
imul
jg
fstl
adc
test
bound
dec
outsl
dec
lods
call
pop
stos
sub
ljmp
pushfw
or
inc
cmp
dec
inc
icebp
xor
clc
cmpsl
cmp
xchg
pop
dec
sub
fsubl
xor
js
dec
mov
dec
in
sbb
lods
insl
in
test
mov
in
popf
sbb
mov
movsb
xchg
hlt
mov
mov
fs
out
or
xchg
add
in
xor
jl
cmc
lret
ss
add
mov
inc
out
mov
lods
repnz
test
aad
or
inc
aad
mov
movsl
in
and
ljmp
jae
or
mov
mov
adc
push
repz
mov
mov
or
mov
push
or
ja
test
fwait
push
fprem1
pop
clc
lock
mov
mov
xor
mov
mov
in
sbb
or
pop
sbb
sub
addr16
or
mov
mov
decb
ljmp
fcomps
xor
dec
push
lcall
adc
dec
in
sub
test
sub
call
cwtl
cmp
add
subl
ljmp
jge
xchg
lods
jno
jne
fdivrp
push
mov
std
xor
push
lret
sub
add
call
adc
inc
fildll
pop
pop
pushf
roll
arpl
and
pop
addr16
test
das
push
mov
test
test
idiv
or
scas
push
test
outsl
mov
push
lahf
out
cmp
test
add
mov
pop
das
or
cmp
out
insb
push
test
jne
test
cwtl
xor
pop
popf
popa
mov
rcll
loop
and
gs
push
xchg
pop
movsl
push
pop
adc
push
shlb
clc
and
xchg
mov
inc
mov
and
cmp
ds
lods
lods
dec
or
adc
jnp
movl
and
cmp
adc
mov
xchg
addps
pop
addr16
lahf
andnps
stos
outsl
pop
cmp
pop
loopne
gs
hlt
jle
int3
xchg
cmp
jbe
xchg
or
or
inc
rclb
add
outsl
mov
pop
lret
jne
jo
sbb
mov
jmp
and
lock
jle
cltd
hlt
lcall
mov
lret
xchg
push
xor
enter
sbb
push
pop
insb
mov
lea
pop
cmpsb
jmp
pusha
stos
pusha
dec
lret
xor
pop
lcall
icebp
std
cwtl
lea
fmull
insb
and
mov
call
repz
jb
aas
test
mov
push
push
fimull
push
mov
pop
test
cltd
aas
addr16
repnz
imul
ds
hlt
fimuls
stos
jmp
xchg
and
ret
icebp
nop
xchg
fimull
xchg
stos
mov
add
dec
xchg
jge
fadds
shll
pop
sbbl
push
mov
data16
mov
jne
sbb
sbb
add
or
and
push
xlat
jecxz
stos
mov
xchg
add
add
int
push
mov
adc
inc
ja
dec
in
in
mov
shlb
pop
in
add
fimuls
and
loopne
pop
test
fstpl
or
pop
loop
mov
xor
inc
lock
pushf
sbb
xchg
out
mov
fistps
gs
fsubl
adc
out
sbb
cmp
mov
add
push
inc
repz
into
mov
mov
push
mov
jl
je
add
mov
test
aam
and
mov
push
sub
gs
and
sbb
cmp
es
mov
sahf
outsb
fsub
inc
cmp
jge
cmp
xchg
repz
mov
ror
lods
push
jo
loope
pop
into
mov
xchg
pop
dec
cmpl
pushf
xor
sahf
test
push
and
cmpsl
adc
xor
fcoml
inc
movsl
cmp
ret
pusha
sub
xchg
imul
jo
fdivs
lds
in
push
adcb
inc
cs
cmp
fsubrp
ret
cmpsb
arpl
shr
mov
adc
xchg
gs
leave
jg
cmp
inc
add
jle
pop
push
sub
lds
cld
sti
aaa
push
lods
cmpsb
cmpsb
inc
xchg
sbb
xchg
dec
out
push
cmp
stos
xchg
add
enter
jno
adc
jge
xchg
imul
mov
add
mov
sbb
clc
xchg
push
pop
jp
hlt
pop
bnd
pop
jmp
pop
mov
mov
push
out
jmp
jge
orb
adc
push
pop
push
xchg
rol
push
sub
jp
lret
aaa
push
iret
jl
adc
or
ret
and
lods
dec
inc
fisttps
pusha
imul
stos
or
cmpsl
ret
clc
stos
ds
in
and
imul
xchg
stos
outsl
dec
xchg
inc
fwait
repz
mov
xchg
mov
jne
aas
xchg
ret
test
add
push
jnp
loope
xchg
movsb
pushf
sahf
cld
cmp
data16
test
pop
mov
pop
or
enter
scas
orl
sahf
hlt
pop
cmp
or
call
imull
cli
push
push
adc
inc
sub
xchg
lods
test
cli
out
cs
fnstcw
push
idivb
cmp
mov
in
imul
lretw
fbstp
or
test
test
mov
push
leave
and
xor
pop
and
arpl
mov
mov
jo
inc
jp
fsubl
and
das
inc
testl
push
sqrtps
inc
adc
mov
stc
hlt
xor
mov
mov
aas
popf
inc
xchg
dec
popa
mov
adc
popa
or
fstpt
adc
dec
fwait
adc
iret
pop
push
add
push
jle
cmc
dec
mov
repz
jecxz
xchg
add
and
dec
cmovg
mov
push
sub
addr16
cmp
int
stc
push
jae
into
scas
mov
jo
sbb
jns
add
fcmove
sti
or
call
xchg
call
pop
lods
pop
mov
das
and
xor
test
push
cmp
mov
enter
mov
das
scas
data16
xor
popa
js
mov
mov
inc
jnp
xchg
stos
mov
sbb
fcompl
xchg
or
ss
stc
pop
pop
jnp
jb
jl
xchg
pop
cmp
call
rcll
sub
in
mov
stos
popf
sti
mov
xor
pop
enter
inc
sub
popa
fcompl
outsl
jp
fstps
popa
inc
test
and
xor
or
push
pop
aaa
out
dec
das
fsubr
and
sub
out
xorb
mov
jg
test
fwait
stos
dec
hlt
jl
outsb
push
cmpsl
and
lods
add
dec
cmpsl
jnp
retw
insb
push
inc
sub
outsl
pusha
addr16
and
inc
out
xor
sahf
and
in
xchg
xlat
xor
call
mov
add
stos
scas
rorb
or
sub
mov
dec
pop
mov
mov
jb
test
dec
dec
cs
push
stos
gs
add
push
sbb
aas
or
mov
adc
fbstp
incb
pop
outsl
dec
pop
jo
daa
push
adc
fcoms
sbb
std
jno
mov
sti
mov
pop
inc
xchg
enter
and
pop
cmp
adc
pop
mov
ja
xor
pop
sarl
bound
out
pop
ret
sti
pop
aaa
xchg
les
xchg
out
inc
mov
aam
and
dec
hlt
les
inc
shlb
cli
inc
xchg
in
bound
xchg
pop
mov
sub
inc
mov
sbb
xor
fsubl
fdivr
addr16
cli
pop
push
pop
inc
inc
mov
fiadds
insb
scas
insb
mov
xor
sub
pop
mov
sahf
in
push
call
xor
sub
push
addr16
repz
iret
ljmp
xchg
and
rorl
in
jbe
jle
push
dec
and
add
jmp
sub
jle
mov
andl
adcb
pop
fwait
mov
xor
hlt
sbb
aam
mov
mov
xor
dec
push
sbb
cwtl
insb
enter
test
lcall
sub
mov
bound
push
add
mov
push
inc
dec
out
imul
push
pushf
sarb
or
cmp
pop
xor
je
cltd
pusha
test
add
cmp
test
insl
imul
shl
jle
xchg
mov
popf
cli
orb
jecxz,pt
mov
xor
mov
push
in
imul
mov
mov
pop
insl
sub
lret
repz
std
lret
lds
push
inc
push
rcll
add
sbb
pop
sub
sub
jp
dec
xor
sub
push
mov
and
fldt
js
into
movsb
jg
sbb
fistl
push
sbb
imul
movsl
aad
dec
inc
jecxz
adc
out
js
arpl
das
sub
dec
rclb
cmpsb
jl
nop
dec
pushw
pop
xor
js
mov
adc
test
cli
pop
daa
inc
push
mov
ljmp
movsb
mov
les
xchg
jp
loope
sti
sti
jns
mov
es
xchg
imul
ja
or
insb
inc
and
sbb
ljmp
decb
scas
mov
cwtl
pop
ljmp
shrl
push
insb
jg
cmc
adc
mov
jb
ret
loope
je
push
aas
flds
cld
cltd
dec
push
jmp
jl
and
push
push
xor
xchg
mov
cltd
js
rorl
jecxz
es
ljmp
cmpsb
pop
into
and
lcall
sahf
mov
push
out
mov
and
mov
pop
mov
dec
std
rol
xor
faddl
outsl
pop
push
cli
pop
mov
fmul
out
mov
or
andl
mov
icebp
mov
add
jle
lds
inc
sahf
inc
add
cmp
sub
adcl
lret
mov
out
mov
movsl
repnz
push
mov
icebp
push
out
mov
roll
add
push
xlat
pop
dec
daa
push
out
cmp
dec
jne
lcall
aas
or
jnp
scas
outsb
mov
lret
mov
push
xlat
dec
outsb
rcrl
mov
dec
movsl
and
scas
add
int3
dec
mov
gs
in
add
push
or
popa
pop
sbb
mov
push
xchg
fisttpll
pop
repnz
pop
jae
add
or
clc
loopne
mov
cltd
cmp
mov
cmp
cmpsl
jno
lahf
push
stc
outsb
cmp
js
lahf
pop
js
mov
mov
pop
mov
sub
mov
testb
in
ss
lcall
xor
in
jle
push
pop
mov
adc
mov
xchg
mov
push
lahf
mov
mov
xor
ja
pusha
into
stc
div
shrb
mov
mov
sub
dec
fcoml
test
aas
dec
and
hlt
mov
xchg
add
mov
in
cs
mov
pushf
pusha
sub
std
mov
sub
sbb
test
push
pusha
test
clc
mov
add
insb
std
xor
mov
sub
ja
testl
fsubl
rcrl
pandn
adc
cwtl
clc
cmp
out
popa
dec
sbb
sbb
jecxz
iret
rorb
aad
xchg
fsubs
das
inc
orb
dec
test
push
xchg
negb
mov
inc
das
dec
cmpsl
mov
dec
fmuls
int
sub
enter
mov
dec
pop
sub
dec
pop
sub
insb
and
jecxz
sti
add
xchg
ds
add
hlt
aad
jmp
or
rorl
push
mov
adc
jbe
subl
and
mov
aam
or
pop
call
ja
cs
aaa
jle
jb
and
xchg
subl
sbb
les
mov
mov
mov
pop
int3
adc
xchg
mov
dec
lret
imul
adc
sub
fdivrl
cltd
movsb
cmpl
ficoml
jnp
or
lds
fnstcw
jl
sub
loop
sbb
pop
and
push
dec
mov
dec
addb
das
shld
jg
mov
lods
addr16
test
dec
cs
cs
jge
fsubl
scas
movsb
repnz
lods
movsl
sub
icebp
mov
int
cltd
jb
in
jmp
insl
adc
xor
xchg
sub
in
out
leave
dec
jb
xchg
push
je
adc
dec
push
jb
jns
mov
cmp
adc
data16
shlb
fldl
ret
ss
push
or
mov
cmp
cmp
clc
loope
push
pop
pusha
inc
and
iret
or
popa
jno
arpl
mov
or
sbb
sbb
ljmp
test
inc
mov
sub
icebp
jmp
ljmp
into
cmp
and
daa
sbb
aaa
mov
sbb
cld
pop
fiadds
lret
out
jae
rorb
ss
mov
mov
and
mov
test
or
cli
fmuls
pop
dec
sub
mov
jle
shl
fsubrp
xchg
lock
mov
xchg
mov
mov
std
insl
or
popl
or
xchg
or
xchg
out
psubd
dec
inc
inc
sub
pop
in
and
mov
aas
lret
stos
cs
pop
pop
mov
xchg
add
inc
je
lods
or
mov
mov
fs
or
xchg
cmp
pop
andb
sbbl
dec
jmp
mov
xor
addr16
mov
mov
repz
outsl
cmp
mov
xor
jo
and
je
jne
idiv
adc
mov
js
dec
pusha
add
mov
cli
in
sahf
push
dec
and
mov
pop
repz
imul
adc
pop
sub
les
mov
dec
jecxz
fnop
xchg
loop
fcoml
push
int3
dec
sti
mov
adcb
cmp
stos
lret
mul
push
shl
sbb
stos
and
fucomip
pop
lahf
push
mov
mov
inc
mov
orb
jns
cltd
je
arpl
lods
cmp
mov
stc
pop
pop
je
xchg
cmp
pop
sub
imul
fisttpl
daa
scas
mov
fcmove
ljmp
mov
xchg
sbb
dec
mov
ds
push
xor
ljmp
outsl
outsl
sbb
fwait
loope
add
addr16
cs
cmp
mov
jbe
cltd
ljmp
adc
push
pop
add
xor
cmp
or
nop
pop
fcompl
jp
dec
repz
mov
in
lahf
mov
stos
mov
xlat
cli
jne
shlb
push
pop
loop
ret
fistpll
push
repz
rcr
int
loop
inc
rcr
leave
out
call
lds
cmpsb
mov
jbe
bound
int
and
dec
push
cmc
push
sub
inc
std
test
aaa
pop
inc
rol
inc
sub
sub
aaa
lods
popa
in
into
cmpsl
or
lret
insb
stos
rcll
popa
enter
inc
mov
inc
pop
jae
iret
dec
mov
xchg
ret
mov
jmp
repz
and
in
ljmp
in
jmp
inc
or
jbe
test
adcb
shll
aam
sbb
mov
hlt
mov
iret
into
lods
pop
clc
push
dec
pop
loop
pop
mov
cmp
shr
jno
popa
out
mov
out
adc
sahf
pop
fcomip
inc
lret
addr16
push
aad
adcb
arpl
fstps
and
jmp
pop
cmc
hlt
pop
jne
data16
jo
in
mov
inc
clc
jbe
mov
out
aad
and
fldz
mov
push
jp
add
shl
push
mov
or
cmc
jge
mov
jle
aad
push
imul
cltd
aaa
js
dec
leave
pop
or
add
add
leave
cmp
mov
test
sub
cmpsb
push
ret
lahf
push
ja
pushf
ljmp
cmc
fidivl
mov
out
jae
gs
popa
and
fdivrs
pop
ret
push
xchg
push
push
push
les
push
sbb
test
and
cmp
enter
shll
sbb
inc
leave
mov
inc
inc
xchg
jae
out
xchg
sub
out
or
push
xor
popf
dec
test
xchg
lret
imul
test
data16
scas
roll
xorl
repz
mov
jnp
pusha
pop
mov
sbb
loope
push
in
pushf
lret
testb
sub
into
sbb
mov
mov
ficompl
and
js
mov
jp
cmp
adc
enter
mov
enter
pop
sarl
daa
aam
mov
ljmp
cmp
jne
fdivl
xor
pop
std
or
data16
ret
adc
stos
out
in
mov
fldt
sbb
int3
mov
fidivs
ljmp
scas
je
xchg
pop
jp
xor
mov
pop
repz
push
aas
adc
sbb
fbstp
out
dec
cmc
jnp
adc
js
and
jmp
ss
mov
cs
dec
stos
inc
and
test
arpl
test
xchg
bnd
mov
lea
pop
xchg
and
sbb
inc
rorl
mov
shll
decb
or
lods
pop
cmp
mov
sbb
cld
add
int3
sbb
js
jmp
mov
out
sbb
mov
push
inc
cmp
repz
scas
push
out
movsl
pop
lahf
jp
push
jle
imul
mov
insb
inc
jg
xlat
dec
xchg
fsubs
mov
push
xlat
push
out
cld
addr16
pop
arpl
jmp
in
call
add
add
aas
cmp
mov
addr16
cmp
cmp
xchg
rcrb
lods
or
pop
fists
mov
les
in
mov
call
fistpl
and
jno
sbb
mull
mov
and
out
mov
or
push
sbb
mov
cmp
mov
mov
dec
cld
rolb
add
mov
lock
ja
shrb
cld
push
fisubs
mov
stos
sahf
mov
and
cld
push
pop
push
mov
mov
push
call
in
mov
add
pop
pusha
sbb
add
test
xchg
mov
loop
jb
xchg
push
xchg
cmpsb
ja
cmpsb
lods
push
loope
jge
lock
jne
iret
push
xchg
or
jg
fildll
jno
pop
js
adc
movsl
pop
fldenv
or
adc
dec
pusha
fldt
xor
arpl
push
repz
xlat
fwait
xor
cmp
push
push
xor
push
fmull
jle
cmpsl
jns
idivl
test
fcomps
or
inc
lds
or
test
inc
lds
adc
subl
shll
cmp
inc
in
add
xchg
dec
test
shlb
test
loop
lahf
fistpl
pop
movsbl
pop
mov
daa
and
mov
jecxz
incl
ret
push
mov
mov
addr16
shrb
xchg
mov
or
mov
pop
scas
inc
jle
sub
mov
or
lret
push
in
dec
mov
rclb
xor
sub
xor
mov
mov
mov
and
mov
mov
or
xchg
pop
cwtl
push
jne
and
sub
sbb
jbe
mov
xchg
iret
pop
dec
inc
lock
call
leave
adc
daa
mov
outsb
push
lcall
enter
shlb
xchg
int
mov
rorb
xchg
fisttps
mov
inc
or
movsb
outsl
push
jae
cmp
insb
adc
shlb
cmp
ret
lock
rolb
adc
mov
jmp
jbe
dec
inc
iret
push
cwtl
repz
imul
jge
nop
xchg
les
jge
into
push
lods
cli
sbb
add
fdivl
loop
jb
or
nop
cmp
out
mov
shll
mov
inc
adc
sti
out
and
push
push
push
aam
loopne
mov
mov
mov
adc
jp
mov
mov
es
leave
mov
jmp
fists
mov
inc
daa
ret
and
push
movsb
cltd
in
popf
fiadds
dec
or
orb
dec
outsl
out
shr
repz
hlt
and
and
lahf
xor
stc
pop
mov
xor
insb
push
data16
loope
popa
add
fs
sti
mov
in
rolb
inc
fbld
in
dec
loop
fcomps
push
or
cmpsl
cltd
jmp
pop
adc
call
sub
out
ret
and
out
adc
ret
add
and
adc
push
jle
addr16
test
imul
lret
inc
jae
jno
xorl
dec
mov
pop
in
and
enter
scas
orb
push
mov
popf
movsl
add
clc
pop
cmp
aas
cwtl
fnstcw
pop
mov
jmp
sti
xor
dec
inc
push
mov
mov
or
fdivrs
movsl
mov
xlat
or
and
mov
int
or
fsubrs
inc
test
pop
je
setle
sbb
ss
sbb
movsl
in
push
pop
cli
pusha
ds
mov
pop
sbb
mov
cmp
callw
movsl
lcall
pop
inc
mov
cmpsb
lds
jmp
cmpsl
fnsave
ss
pusha
shlb
fisttps
into
xchg
mov
xor
imul
add
push
push
shll
ja
sbb
mov
xorb
in
loopne
pop
mov
call
xchg
nop
test
and
jns
pop
cwtl
fsubrs
insl
lahf
adc
inc
pop
xor
push
in
xchg
rolb
mov
xor
int
repnz
sub
pop
clc
mov
lods
cmpsl
mov
cmp
mov
lcall
add
arpl
and
imul
sti
push
pop
orl
mov
ja
imul
mov
jae
pop
ret
pop
inc
adc
and
sub
mov
ds
sub
mov
or
push
push
push
fists
mov
sbb
insb
in
xchg
push
addb
pop
imul
xchg
in
xor
js
shll
push
mov
arpl
push
aad
xorb
cli
jb
scas
repz
dec
ds
punpckhdq
sbb
and
shlb
scas
sbb
cmp
fs
add
mov
add
jbe
mov
lahf
push
mov
pop
push
jne
or
in
into
dec
addr16
adcl
push
in
xchg
pop
dec
loope
pop
pop
inc
decb
xchg
movl
and
addr16
cmp
hlt
jb
test
stc
mov
sub
test
fnstcw
or
imul
push
shr
dec
cltd
out
push
stc
ljmp
lods
pop
lret
dec
orb
in
cltd
jp
sti
adc
adc
dec
shr
inc
and
and
out
negb
lds
dec
mull
clc
inc
jne
and
dec
xchg
in
mov
inc
test
xchg
adc
jne
fnstsw
push
pop
out
dec
js
or
xchg
fistl
pop
fsub
aam
cli
out
cmp
push
push
xchg
adc
popa
push
je
test
pop
xchg
pusha
xchg
xchg
aam
cmp
sub
mov
test
adc
int3
jge
and
jno
cmp
add
movsl
and
mov
inc
pop
fiaddl
or
mov
stc
xchg
jg
into
adc
mov
pushf
mov
nop
mov
or
pop
push
ja
fsubp
movlhps
or
mov
ret
aad
int
inc
mov
mov
sarl
enter
sub
out
bound
xor
mov
filds
xchg
idivb
popa
leave
pop
std
aas
cmc
cmp
xchg
loopne
fistl
inc
les
jb
mov
jle
mov
shll
xchg
insl
push
sub
imul
sti
and
jmp
mov
in
out
cmp
test
inc
add
pushl
and
add
repnz
test
and
sub
push
ror
sbb
adc
andl
jbe
packsswb
sbb
push
jmp
or
hlt
in
dec
and
js
sub
dec
adc
cwtl
test
pusha
loope
movl
xchg
icebp
mov
mov
icebp
js
outsb
cmp
sbb
mov
rorl
ss
add
mov
rdpmc
xor
aaa
mov
mov
xor
out
or
outsb
cmp
dec
xchg
cmp
or
dec
jmp
stos
xor
push
dec
sbb
fstps
cmp
pop
or
add
pusha
mov
jmp
pop
movsl
btc
lods
fdivp
leave
and
stos
pop
push
idivl
imul
cmp
sub
and
cwtl
xor
js
or
test
out
mov
sbb
jl
test
jnp
xor
cmp
cmpsl
stos
push
cmp
jno
xor
xchg
mov
insb
loope
mov
sub
mov
icebp
imul
cmp
fxtract
sub
jecxz
xchg
lret
rcrl
push
cmp
popl
arpl
daa
sub
and
push
sarb
xor
dec
mov
pop
xor
pop
insb
mov
cmp
xchg
add
pushf
mov
inc
fcmovb
insl
push
or
scas
adc
js
cmc
inc
int
js
cmpsl
jns
stos
and
mov
push
js
out
imul
cmp
mov
dec
push
jns
add
arpl
or
jle
adc
cld
shll
push
test
dec
nop
mov
arpl
imul
pop
pop
inc
xchg
sbb
sbb
mov
div
sbb
sbb
in
popa
push
jno
cli
or
sti
jo
cmp
daa
ret
fcoms
add
jecxz
ljmp
cmc
outsb
mov
mov
das
fisubs
xchg
xor
xchg
sub
push
add
shrl
sub
pop
in
je
cmc
cmp
fsubrl
push
xchg
dec
xchg
inc
das
loopnew
nop
jmp
jl
mov
mov
sub
into
fistpl
cltd
jno
push
xor
ja
add
into
inc
mov
lcall
cmp
les
jbe
lods
cwtl
add
sub
je
fldcw
mov
add
pop
mov
fwait
jmp
mov
mov
std
mov
sub
mov
add
clc
jae
lea
xlat
xchg
adc
mov
mov
insb
dec
dec
add
stos
cmc
sbb
ficoml
mov
jp
ds
or
push
cmp
ret
div
lods
xchg
add
jne
jae
xchg
fwait
mov
sarl
push
movsb
outsb
mov
mov
lcall
movsb
test
and
pop
or
xor
insl
push
xchg
and
clc
aas
pop
ja
aam
je
push
add
dec
adc
test
pop
xor
and
ljmp
enter
fldt
out
sub
cmpsl
mov
outsb
jnp
fcompl
test
adc
lret
aam
loop
adc
cmp
push
lahf
xlat
mov
test
and
jo
jb
test
repnz
sbb
cmp
mov
ret
sbb
add
in
mov
dec
push
dec
pop
sbbb
ja
pop
hlt
mov
mov
repz
das
fdivr
mov
mov
push
ss
push
cmp
iret
mov
and
stc
hlt
test
sti
jge
ret
cmpsl
jns
mov
add
test
push
test
scas
and
aaa
and
out
sbb
das
xchg
fcompl
dec
jmp
mov
cwtl
dec
ja
mov
jno
test
lock
in
push
repz
cmp
into
push
xchg
stos
dec
add
clc
push
sbbl
inc
or
mov
in
aam
icebp
or
loopew
and
inc
fidivrl
push
test
hlt
sbb
dec
pop
mov
xchg
pop
jne
cltd
jge
pop
mov
mov
push
stos
imul
push
or
jns
test
outsb
sbbb
stos
ficomps
loopne
pushf
mov
dec
add
add
fisttpll
jne
cs
jb
loop
cwtl
mov
out
push
stc
movsb
inc
inc
test
insb
xchg
mov
push
std
jle
adc
mov
cwtd
test
sbbl
fdivl
in
jnp
pop
popf
sub
popa
mov
loope
je
jae
jne
lds
push
xor
xchg
push
push
sbb
insl
rcll
popa
gs
and
fstpl
or
fldt
cld
pop
in
iret
mov
push
stos
xchg
push
sbb
pop
lret
push
mov
lea
jb
daa
in
inc
adc
clc
cwtl
jp
mov
pop
adc
sbb
sub
mov
mov
jmp
or
mov
pop
out
mov
test
or
in
push
cmp
push
es
lahf
rorl
and
das
scas
cmp
inc
mov
negl
fistpl
and
mov
dec
cmp
jbe
lock
sahf
push
ja
adc
mov
cmp
outsl
jp
lock
push
stos
hlt
mov
jecxz
mov
mov
scas
pop
cmp
fidivs
shlb
mov
jp
sbb
mov
leave
jne
mov
pop
jg
pop
subl
movsl
out
jg
arpl
push
jl
dec
or
mov
ljmp
lock
mov
pop
test
adc
sub
inc
pop
adc
push
test
cmp
xchg
fmuls
push
flds
sbb
divl
lcall
ja
frstor
inc
roll
adc
ja
rcrl
xchg
stos
pop
es
dec
ds
bound
sub
sbb
popa
aam
data16
imul
xor
sbb
push
dec
add
xor
adc
xchg
inc
shll
mov
leave
mov
dec
arpl
sub
add
lahf
adc
aam
scas
scas
cmpsb
mov
lods
dec
dec
or
push
push
pop
das
popf
and
sahf
jle
out
push
idivl
pushf
add
xchg
ret
std
and
clc
sbb
outsl
mov
cmp
or
mov
sub
cmpl
sbb
data16
mov
dec
push
out
and
ret
std
and
inc
popa
jns
lock
sub
js
mov
sbb
subl
or
cmp
scas
xchg
rcll
fimull
jp
jmp
sub
push
pop
arpl
out
cmp
jae
push
aad
xchg
add
ss
xor
cmp
add
lahf
cs
sti
lahf
in
test
sbb
and
mov
stos
cli
divl
subb
lock
xchg
insb
push
adc
push
test
icebp
imul
test
add
mov
and
mov
or
push
mov
mov
lea
cmp
xchg
push
aaa
or
shlb
movsl
cmpsb
or
and
lock
cld
addl
cmp
push
lds
icebp
xchg
and
test
sbb
and
mov
aaa
push
pop
push
mov
movsl
mov
pop
xchg
jne
dec
mov
aad
jg
in
mov
jno
cld
push
ret
aaa
shrl
sbb
hlt
fidivs
inc
cltd
jg
push
mov
push
loopne
pop
fadd
in
mov
pop
pop
std
inc
pop
adc
adc
popa
jno
call
pop
call
imul
push
int3
add
adc
sub
cmc
jmp
push
lods
std
popf
test
je
sbb
out
fwait
xlat
addb
push
jecxz
jg
fucomi
pop
jmp
mull
lret
jnp
icebp
dec
mov
movhps
pushf
clc
cmp
pushf
and
shr
imul
or
rcrl
arpl
xchg
or
xor
cmp
loop
in
add
jp
int
or
sti
xchg
cmp
xchg
jb
cltd
in
push
dec
xchg
ljmp
out
fistl
or
jae
aad
rorb
mov
je
push
shr
cmp
jecxz
xchg
mov
stos
out
push
es
sub
sbb
or
sub
inc
adc
loope
pop
sub
add
pop
xchg
lahf
pop
clc
inc
sahf
jmp
add
jae
xchg
and
pop
out
repz
out
mov
and
or
xchg
shl
fadd
cmpsl
cwtl
lea
jp
add
stos
cld
push
sub
mov
mov
sbb
push
add
mov
loop
dec
pop
cs
decb
adc
ljmp
pusha
pop
add
inc
aaa
inc
cli
mov
xor
add
mov
adc
bound
mov
cmp
and
imul
std
movsl
and
cmp
je
jns
lret
sbb
sbb
inc
loope
inc
mov
xlat
call
lret
daa
in
lods
nop
ds
cmp
or
mov
fwait
ret
decl
dec
int3
gs
daa
nop
mov
mov
or
aaa
push
add
aaa
imul
mov
gs
rolb
in
stos
testl
dec
fs
cmpsl
inc
ja
aas
mov
adc
icebp
movsl
scas
pop
jb
jmp
mov
mov
mov
pop
mov
mov
fdivs
insb
mov
iret
lret
shl
scas
add
xchg
fdivrs
push
dec
and
xor
aas
push
jle
push
mov
movsb
bound
adc
xor
cmp
adc
push
mov
and
xchg
loop
sub
sti
mov
jb
call
je
sbb
xor
shrl
dec
sub
sbb
cmp
push
fimuls
adc
xorb
jo
rorb
xchg
sbb
adc
aaa
inc
mov
ljmp
inc
xor
and
mov
mov
movsb
sub
ficomps
push
cltd
xchg
mov
and
lods
daa
loopne
pop
stos
mov
imul
loope
cmpl
push
addr16
sbb
dec
testb
loope
dec
cmpsb
and
cmp
lods
sbb
vfrczps
cmovo
adc
or
popa
xchg
rcr
jl
jle
ret
pop
in
mov
incb
mov
inc
loope
test
inc
inc
push
pop
enter
mov
jp
xchg
aas
cmp
test
mov
xor
mov
and
and
ret
cli
mov
mov
xlat
xchg
movsb
in
jo
sbb
dec
mov
push
sbb
jle
mov
cmp
pop
and
add
sub
sub
push
jbe
mov
subps
pushw
ljmp
cs
push
inc
test
insb
dec
pop
mov
in
mov
mov
out
cwtl
fistl
sahf
push
mov
jg
ljmp
xchg
scas
sub
adc
loop
push
and
jge
push
test
aaa
dec
fwait
imul
push
lret
or
stos
lcall
sub
rcrb
inc
mov
shl
jae
dec
cwtl
ljmp
outsl
shr
ja
mov
and
fistl
cwtl
andb
lea
flds
mov
push
subb
int3
mov
in
mov
xor
je
sar
sti
sahf
xchg
add
in
xor
xchg
mov
movsb
push
cmp
push
mulb
or
cs
xchg
mov
sbb
mov
xchg
mov
lret
mov
out
adc
bnd
pop
dec
xlat
lods
pusha
inc
mov
call
inc
mov
loopne
jae
pop
xchg
inc
daa
push
mov
xchg
sbb
iret
or
xchg
aas
jno
adc
jne
push
and
cmp
jmp
dec
add
dec
adc
pop
pop
test
movsl
adc
test
sbb
adc
fs
cmp
lret
sbb
inc
shl
mov
in
mov
mov
gs
sub
inc
sbb
cmp
fdivrs
adc
xchg
lock
pusha
rcrb
add
cmpsl
pop
adc
sbbb
out
in
inc
shr
imul
roll
stos
jno
add
rorl
sarl
jecxz
scas
cmp
aam
jae
jno
lret
cmp
pop
push
lcall
cld
loope
inc
xor
movsl
inc
adcb
test
xchg
lods
shll
pop
fdivr
and
iret
jb
loope
pop
lods
call
insl
and
sub
dec
dec
cmp
rorl
jg
xor
pop
add
addl
inc
imul
into
orl
daa
lcall
lock
popf
and
mov
fsubr
inc
cli
imul
pop
daa
filds
icebp
fdiv
sti
int3
data16
adc
getsec
dec
andb
mov
dec
fcoml
arpl
add
mov
adc
jb
pop
mov
das
cltd
adc
push
mov
aas
mov
jbe
xor
fs
data16
ljmp
fidivrl
repz
sahf
fs
enter
sbb
mov
shl
pop
mov
mov
iret
and
jne
pop
addr16
bound
jne
xchg
sbb
push
ss
mov
jne
sti
or
add
ljmp
sbb
push
ret
sbb
aas
or
notb
jge
insb
mov
fisubrs
jle
arpl
push
push
xchg
std
adc
adc
enter
lea
pop
mov
rcr
push
mov
or
xchg
lea
cmpsb
pop
jae
mov
fld1
js
jl
enter
in
in
je,pn
or
pop
jp
pop
push
aaa
dec
in
or
jecxz
push
in
adcl
pusha
adc
call
imul
jmp
pusha
dec
cmpb
lods
iret
stc
jge
xchg
sti
xor
dec
inc
in
and
dec
in
sbb
and
movsb
ret
sub
pop
lahf
insb
jns
aam
jae
nop
pop
jecxz
je
scas
xchg
mov
fwait
les
cmp
inc
xchg
stos
push
in
sbb
or
and
sub
jo
sarb
mov
mov
ljmp
and
mov
dec
jecxz
jns
loopne
mov
mov
js
aam
sbb
xchg
or
fsubp
jg
pop
jmp
outsl
mov
xchg
mov
jmp
insl
jne
push
xor
popf
jae
and
outsb
ds
and
add
js
out
adc
jge
ret
daa
icebp
inc
xchg
jno
lcall
sahf
dec
inc
sbb
lret
jae
push
mov
add
jnp
pop
cmp
mov
xchg
pop
mov
mov
int3
mov
jmp
jle
add
ror
sub
push
das
add
out
inc
inc
push
push
test
adc
std
shlb
mov
insb
js
push
xchg
lock
rorl
sarb
rcl
xchg
inc
pusha
add
ds
dec
nop
inc
sbb
pop
ja
insl
mov
xchg
mov
xchg
in
lret
xor
roll
mov
fucomp
mov
stos
popa
jmp
aaa
mov
inc
or
push
mov
imul
nop
ja
ss
pop
mov
mov
xchg
cmp
aam
lret
loopne
imul
cmp
shlb
xlat
dec
outsb
or
or
pop
sahf
sub
out
test
in
adc
inc
and
sbb
add
mov
sbb
test
call
dec
push
ds
cmp
in
xor
mov
fldl
lock
add
pushf
or
stos
ret
jecxz
jo
push
pop
and
push
and
mulb
xor
and
fldenv
subb
arpl
mov
mov
sbb
mov
mov
stos
das
and
push
mov
pop
xor
mov
dec
out
push
jb
popf
subb
sarl
shll
imul
jno
lock
mov
xchg
lcall
stc
cmc
jb
mov
add
pushf
arpl
andl
jb
jae
stc
mov
inc
scas
cmc
loopne
lcall
in
arpl
icebp
pop
xchg
mov
inc
insl
xchg
cmp
lret
jns
stc
inc
repnz
out
push
icebp
and
js
or
adc
shl
stos
add
jle
mov
je
push
iret
in
add
mov
xchg
xchg
out
sahf
mov
lret
jbe
cmpsl
push
in
mov
pop
cltd
pminub
xchg
xchg
and
mov
movsl
int
sub
out
xorl
mov
mov
ja
addr16
jno
not
into
inc
and
mov
stos
or
fildll
std
mov
mov
mov
mov
pop
pop
shlb
dec
ficomps
stos
dec
fsubrp
pop
int
mov
inc
cltd
scas
das
sub
fs
cld
or
leave
cmpsl
rcrb
lret
out
dec
mov
jo
popf
xchg
xor
out
sbb
dec
pop
push
cmc
cmp
jecxz
in
dec
inc
jmp
inc
mov
add
mov
xor
push
fimull
adc
fbld
cmp
ficoml
cld
rcrl
cmc
ffree
sti
daa
pusha
xchg
orb
insb
cmc
inc
fdivl
lahf
push
icebp
fs
add
sahf
mov
xor
jge
xlat
mov
jmp
nop
cmp
mov
dec
stc
mov
shlb
sub
pushf
popf
call
sbb
jge
into
test
sahf
sahf
inc
loope
pop
dec
hlt
filds
mov
insl
test
jl
andb
or
and
or
in
xchg
or
inc
jp
and
inc
dec
subb
dec
pop
sbb
subl
sub
ds
add
fnstenv
ret
sbb
dec
jge
add
mov
pop
dec
cwtl
call
loope
mov
movsb
add
inc
sti
loope
push
inc
jmp
and
pop
mov
rol
inc
scas
lahf
mov
xor
cmp
outsl
pop
add
rcrb
jmp
dec
push
cmp
enter
pop
cmp
lcall
iret
sahf
out
add
leave
cwtl
sbb
mov
sub
ror
int3
sub
in
xchg
inc
dec
mov
xlat
arpl
mov
ret
mov
jo
ror
imul
push
dec
std
sbbl
inc
jne
ja
cltd
and
xchg
popa
xchg
dec
pusha
out
nop
and
xchg
push
ret
int
enter
cmc
fidivrl
push
icebp
cmc
dec
pop
out
push
aaa
mov
inc
mov
enter
ss
jb
xchg
aam
fstps
push
repz
pop
adc
add
mov
inc
repz
inc
outsb
jae
test
ljmp
push
xchg
jb
mov
or
or
dec
in
add
mov
push
nop
lahf
repnz
jecxz
imul
rcrl
out
add
xor
ljmpw
out
popa
mov
outsb
push
or
sub
mov
sub
mov
xor
dec
dec
in
jl
fdivrl
mov
mov
mov
or
cs
cmpsl
daa
mov
jne
test
int3
jp
and
aam
jecxz
icebp
insb
add
addr16
jp
ss
das
fiadds
dec
add
hlt
push
lret
hlt
xchg
jns
orl
hlt
repnz
cmpsl
dec
inc
out
ljmp
mov
insb
insl
fucomip
mov
cmp
movsl
in
insb
mov
or
lcall
adc
mov
dec
jmp
inc
shrl
inc
loopne
orl
lcallw
xchg
pop
test
fimull
add
push
add
cwtl
cli
rorb
xor
test
sub
push
aaa
loopne
enter
dec
test
sti
bound
inc
pop
and
adcl
jnp
gs
sbb
stc
ret
loope
push
sbb
in
lods
adc
sbb
mov
inc
nop
sbb
bound
imul
pusha
scas
mov
outsb
cmp
sub
cmc
stos
aaa
pop
sub
xor
and
adc
sub
jbe
fdivl
or
lcall
push
icebp
scas
sbb
stc
xor
mov
or
rcrl
int3
dec
and
testl
jne
inc
scas
arpl
idivb
push
ljmp
outsb
add
sbb
into
mov
inc
push
sbb
and
xchg
dec
dec
jae
cmp
ret
dec
pop
sub
mov
dec
add
in
sbb
dec
sub
lock
jmp
fsts
and
fnstsw
push
cld
ljmp
and
out
cld
ss
pop
jp
pop
adc
xchg
adc
xchg
pop
push
xchg
rcl
aas
jb
sti
push
mov
cmp
ljmp
jg
imul
xchg
loope
or
int
and
leave
jge,pt
push
iret
inc
xchg
or
or
sti
dec
cmpsl
lods
pop
or
mov
fcoml
jmp
pop
dec
outsb
jecxz
adc
adcb
out
sbb
xor
cmpsl
rclb
jp
push
add
imul
xchg
scas
jo
jge
insl
pop
in
fistpl
and
or
push
in
pop
orb
inc
mov
pop
outsb
mov
push
popa
nop
mov
mov
jp
pop
sub
xor
push
dec
mov
jne
cmp
sub
sbb
adc
add
xchg
out
fiadds
cmpsb
test
jb
jns
jne
aad
jmp
loopne
xchg
jns
mov
cmp
inc
inc
inc
leave
jmp
fs
dec
cmp
pop
jns
jecxz
adc
lcall
mov
sbb
test
lock
js
rcll
dec
imul
out
push
popa
push
pusha
int
lahf
xlat
in
jmp
imul
jo
pop
arpl
or
addr16
sub
test
pop
adc
add
adc
push
jbe
dec
sub
adc
push
iret
inc
or
fcomps
mov
pop
or
xchg
push
jmp
mov
dec
stos
add
mov
and
in
push
dec
test
je
andl
mov
bound
aad
mov
fidivrl
adc
or
adc
adc
or
pop
test
xor
cltd
jg
jp
inc
push
lcall
lods
fmulp
rcl
xorb
ds
pop
mov
push
call
mov
mov
and
cs
sbb
aad
out
sbb
sub
or
mov
sub
lahf
pop
in
repnz
add
dec
das
sbb
or
add
adcl
aas
sti
hlt
xchg
ret
out
push
mov
cmp
cmpb
bt
sub
xchg
inc
cmp
lds
out
jmp
push
sbb
in
loope
and
push
mov
rcrb
les
sub
jg
adc
add
xor
sarb
pusha
test
int
lret
push
hlt
or
dec
shrl
xor
mov
sub
mov
lret
pop
add
in
je
sbb
mov
add
sub
dec
ror
fstpl
movsl
or
fstpl
xchg
mov
xor
mov
je
stos
cmc
cmp
jns
sub
ds
mov
test
and
or
mov
pop
loop
fcoml
pop
out
fstpl
jle
das
xchg
mov
sub
mov
xor
pop
adc
mov
or
loopne
jg
xchg
repz
loope
jle
ss
jmp
add
rclb
pop
insl
adc
filds
repz
mov
cmpsl
push
addb
inc
rol
dec
mov
pop
popa
or
fidivrs
sub
cmp
les
or
jl
movsb
pop
cmc
push
mov
xchg
mov
daa
sub
pop
dec
in
pop
mov
push
sbb
das
icebp
and
add
das
dec
sbb
lds
notb
push
ljmp
ret
js
push
and
cmp
mov
pop
xor
loop
lea
sbb
push
sar
loope
mov
ss
jmp
mov
pop
jo
cmp
int3
push
lret
ret
lret
push
xchg
imul
mov
into
loopne
loope
push
in
repnz
mov
dec
sub
out
lret
imul
jnp
lcall
lea
loope
jo
gs
fnstcw
movsb
jl
xor
cld
cwtl
jmp
mov
or
std
push
aad
jo
adc
adc
pop
xchg
popa
jbe
jg
mov
clc
xchg
int3
insl
out
pop
loopne
aam
or
or
push
pop
mov
or
sbb
cwtl
jle
jne
sub
push
adc
ljmp
cmp
push
push
jg
mov
sbb
jns
pop
pop
inc
lcall
testb
jmp
mov
sbb
ret
push
sbb
daa
inc
insl
push
push
mov
rcll
pusha
add
test
dec
mov
adc
outsl
jge
mov
mov
add
cs
lods
sbb
mov
inc
mov
xchg
rcl
loopne
notl
lock
ljmp
mull
sub
out
enter
sub
stos
sub
pushf
cmc
sbb
or
int3
dec
adc
cmpsl
inc
int
test
cmp
mov
cmp
add
pop
sahf
mov
cmp
xchg
in
mov
pop
mov
jns
mov
or
pushl
dec
lahf
cli
mov
sbb
xchg
xor
lahf
sti
mov
sbb
hlt
xor
sub
sbb
mov
loop
and
add
lods
std
clc
outsl
adc
lds
movsl
mov
lahf
cmp
adc
and
js
imul
lret
add
int3
nop
int3
je
lahf
mov
push
mov
in
inc
subl
add
repnz
mov
jge
ret
cmpsb
jecxz
xlat
rclb
push
mov
in
add
loope
add
int
mov
in
pusha
adc
sub
push
lds
imul
mov
lahf
xlat
stos
sbb
icebp
jge
in
in
loope
xchg
fs
outsl
pushf
xchg
inc
mov
push
jno
push
xlat
or
sub
mov
out
ds
and
movsb
lods
jmp
cmp
into
pop
dec
shll
mov
fsubs
and
sub
pop
jmp
iret
xchg
adc
mov
je
and
inc
xchg
mov
rcl
xchg
xor
les
or
push
inc
mov
call
mov
pop
add
dec
add
nop
mov
das
pop
rol
outsb
sub
xor
leave
inc
repz
sub
and
cltd
jge
scas
xor
add
mov
hlt
icebp
jmp
ror
cmp
mov
in
sbb
dec
lahf
mov
adc
es
lret
mov
ret
pop
dec
or
sbb
pop
xchg
iret
sbb
mov
inc
mov
add
sbb
ja
mov
adc
stos
cmp
in
jno
and
pop
insl
jge
lods
in
xorl
adc
stos
out
mov
cmc
cltd
mov
fsts
cmp
fbld
dec
repz
inc
test
jnp
cmp
jnp
sbb
clc
popa
dec
sub
jbe
dec
push
xchg
xchg
xchg
inc
fstp
sub
xchg
xor
jne
scas
adc
sbb
pop
aad
arpl
lea
in
and
fisttpl
or
dec
cmpsb
push
xlat
aaa
mov
in
jge
add
xor
cmp
movd
lea
in
shlb
or
or
clc
faddl
mov
icebp
fxch
mov
repnz
pushf
mov
in
add
aad
jo
outsl
insl
arpl
and
add
fld
adc
push
loop
dec
push
mulb
int3
rolb
repnz
popf
sahf
lcall
or
gs
je
push
and
gs
es
jmp
jnp
dec
push
dec
ret
push
jbe
in
xor
daa
push
fcoms
xor
out
fsubp
addr16
cltd
inc
lahf
mov
test
mov
jnp
push
push
clc
les
stos
mov
sbb
bsr
adc
inc
lds
xlat
pop
or
subl
inc
mov
adc
sbb
push
popa
ja
add
mov
jmp
mov
sbb
lcall
test
jl
popa
test
dec
roll
in
push
mov
adc
pop
pushf
stc
in
cmpl
xlat
das
lods
jnp
sbbl
or
xchg
inc
lahf
pop
adc
shlb
ds
sub
jo
incl
pop
sbb
mov
cld
adc
inc
push
adc
sbb
adc
daa
xor
pop
lds
sbb
dec
lds
dec
adc
and
push
outsl
and
scas
xor
sbb
add
push
fmull
fisttpl
mov
test
rolb
cwtl
or
nop
data16
or
adc
mov
fwait
adc
out
aam
mov
mov
pusha
lds
and
fistpl
jmp
leave
add
insb
mov
mov
dec
out
ja
sbb
sbb
int
pop
push
jne
fadds
cwtl
out
lock
jbe
mov
sbb
jmp
pop
mov
xchg
rclb
xor
jbe
adc
adc
or
imul
inc
aas
rcll
std
bound
sub
jecxz
mov
out
cmpsb
mov
xchg
mov
or
xor
ja
je
and
dec
push
inc
mov
pop
xor
int3
xor
pop
mov
test
push
sbb
mov
jge
sbb
cmp
out
push
push
adc
outsb
fdiv
lret
fcompl
mov
inc
out
ljmp
inc
xor
fdivrl
add
call
sub
in
xcrypt-ecb
cmpsl
iret
xchg
pop
adc
subb
adc
lcall
cmpsb
sbb
inc
fwait
cmp
pop
xlat
dec
pop
xor
mov
hlt
mov
push
mov
mov
cmp
adcb
jp
out
jne
inc
mov
insb
push
out
ret
out
int3
push
jns
sbb
movsb
mov
push
dec
push
fcmovne
push
jae
jge
pop
mov
cli
xchg
mov
lret
jmp
sbb
fistpl
bnd
sub
inc
mov
repz
mov
jp
hlt
pop
stos
mov
mov
inc
iret
push
cmp
xlat
mov
int
add
mov
popa
push
inc
int3
inc
mov
jb
rorl
xor
pop
adc
mov
mov
xchg
pop
movsb
cmpsb
cmpb
xchg
loope
jle
xlat
ret
int3
xchg
ficoms
stos
sbb
pushf
add
loopne
out
jl
sub
mov
or
leave
sub
popa
pop
adc
cltd
mov
adc
iret
jge
pop
int3
stos
outsb
stc
mov
adc
pushf
mov
stc
sub
mov
out
clc
push
cltd
sbb
jnp
out
shl
popa
hlt
ficompl
mov
push
dec
xor
dec
xor
jne
aas
or
cmc
or
mov
dec
lods
dec
std
lahf
call
mov
adc
mov
dec
sub
mov
ljmp
cli
addl
inc
sub
mov
dec
ror
nop
lahf
add
pop
xchg
lahf
lock
push
sbb
fs
adc
jge
or
call
stos
icebp
shll
sbb
leave
test
ss
pusha
popa
sti
sub
xorb
test
stos
mov
cmp
fisubrs
iret
cwtl
sub
push
cmp
imul
std
mov
or
xchg
or
or
xor
xor
es
pop
insb
fstp
pusha
and
inc
ljmp
cmpsl
xchg
mov
sahf
sarl
mov
add
xor
icebp
fistpll
push
into
cmp
test
aas
les
insb
ja
fdivr
adc
int
std
cmp
mov
movsb
mov
lds
pop
stos
dec
mull
fwait
jbe
in
daa
fiaddl
push
pop
jmp
dec
sbb
cmpsb
rcrl
rcrb
imul
rcr
adc
leave
push
sub
and
dec
xorl
and
mov
aaa
xchg
jmp
pop
hlt
xor
dec
sub
jecxz
imul
dec
insb
xchg
sbb
mov
daa
fldl
pop
mov
std
cli
lds
and
fisttpl
fdivs
test
xchg
les
shr
adc
inc
jmp
pop
pop
and
mov
iret
into
inc
aad
cmp
adc
push
faddl
jae
and
push
push
inc
je
push
mov
call
sarb
cwtl
add
dec
adc
clc
jbe
fildll
add
test
inc
mov
sbb
mov
aas
stos
mov
pop
push
jge
lea
and
mov
push
dec
in
jb
dec
xlat
jae
fisubrs
sub
add
imul
xchg
rcrl
jae
shr
xchg
inc
xchg
imul
lcall
out
loop
xor
andl
movsb
add
mov
stos
push
dec
movsb
dec
testb
outsb
dec
je
testb
push
outsl
add
lock
mov
mov
mov
cltd
lea
incl
pop
imul
push
out
inc
add
cld
scas
cmp
stc
leave
xchg
mov
push
cmp
xor
xor
pop
orl
dec
jnp
mov
or
sarb
aaa
loopne
jbe
out
js
test
jb
or
fistpll
mov
popf
dec
adc
jecxz
xor
xor
push
rcrl
cmp
dec
lahf
in
mov
xchg
out
mov
sbb
lret
mov
mov
in
movsb
ret
into
dec
lret
mov
lret
pop
adc
sti
push
fcmovne
sbb
pop
xchg
cmc
fcomi
cltd
dec
sbb
or
icebp
dec
jmp
shl
adc
dec
test
imul
dec
js
or
jb
outsl
or
lock
jne
imul
dec
xchg
lds
inc
bound
sarb
aam
pop
fstps
bound
shl
je
fisubs
cmp
mov
xchg
xchg
push
sub
cmp
cwtl
inc
pop
mov
fimull
xchg
jno
std
push
push
push
jmp
mov
addr16
push
addl
aas
test
shrb
xchg
stos
lock
repz
lds
adc
unpcklps
add
cwtl
sub
addl
fs
stos
aad
mov
jnp
mov
push
cmp
jno,pt
push
lret
and
sarb
mov
sarl
rorl
lds
mov
mov
mov
loopne
int3
jl
jg
frstor
and
mov
push
and
shrb
xchg
pop
jmp
loopne
stc
mov
rcrl
outsb
jnp
ja
jle
add
push
mov
shlb
mov
les
pop
inc
shl
pop
outsl
les
mov
jmp
mov
jecxz
add
xor
movsl
outsb
push
mov
xor
scas
nop
in
add
rorl
shlb
icebp
fists
add
dec
mov
inc
aam
adc
sub
fadd
leave
popa
mov
xlat
add
or
leave
das
sbb
jle
test
push
das
jp
or
sahf
je
ja
xchg
std
cli
or
lds
aam
pop
lock
xor
into
xacquire
xor
jmp
fwait
or
push
mov
outsl
data16
add
xor
data16
bound
mov
test
enter
ss
cmp
daa
and
or
mov
mov
scas
jbe
testl
movsb
push
sub
dec
sbb
push
imul
and
mov
push
stos
popa
mov
mov
gs
push
mov
stos
bound
xchg
sbb
inc
cltd
in
dec
lea
cmp
jle
div
stos
sbb
mov
stc
jge
sub
mov
pop
adc
add
popf
lcall
inc
add
push
mov
repz
cwtl
stc
or
sbb
mov
fneni(8087
scas
mov
imul
push
in
dec
lds
ds
sbb
cmp
test
jecxz
pop
mov
mov
movsl
pop
enter
sub
fisttps
adc
test
mov
dec
lock
repnz
xchg
sbb
add
adc
ja
jns
add
fstpl
adc
xchg
and
xchg
into
jbe
jp
adc
xor
and
movsb
loope
add
cwtl
aaa
cmp
scas
repnz
pop
cmp
clc
nop
in
or
mov
dec
out
mov
movsb
mov
orb
and
dec
lea
fbstp
adc
dec
int
fwait
inc
cli
mov
sahf
loop
mov
and
dec
push
cmp
cli
add
inc
mov
pop
mov
sub
inc
cmp
leave
out
insl
scas
pop
add
stos
test
sub
aad
inc
sub
jmp
pop
in
rcll
mov
jecxz
cmc
shl
xchg
sub
lea
repnz
adc
jecxz
aaa
outsb
mov
test
popa
lds
shl
bound
or
xlat
dec
js
push
sub
lcall
push
scas
push
mov
adc
repz
xor
jno
fnstsw
xor
scas
xor
sar
lahf
cmp
outsl
jmp
push
add
imul
pop
repnz
xchg
fadds
cmpsb
cmp
popf
pop
filds
mov
jecxz
push
push
fwait
jmp
adc
jb
xchg
and
sbb
add
fdivrl
test
add
mov
dec
inc
loope
nop
mov
mov
jo
xchg
xor
or
sub
test
and
mov
lret
xchg
pop
aam
mov
pminub
dec
xor
push
xorb
lcall
iret
jne
pushl
add
cmp
adc
jae
push
pop
mov
pop
lock
mov
mov
add
in
push
push
inc
hlt
inc
jg
adc
add
mov
push
loope
or
add
lret
minps
push
add
pop
icebp
adc
movsl
dec
pop
sti
push
cmp
sub
inc
outsl
add
mov
ffreep
out
sub
push
lahf
jo
pop
mov
or
lahf
push
jg
enter
mov
jnp
fistpl
in
pop
cltd
mov
sub
lods
xadd
lahf
mov
rcll
lret
mov
outsb
insb
fwait
xor
cmp
int
stos
and
insl
cmp
add
mov
repnz
lea
push
xchg
cmpsb
cld
mov
aas
test
cwtl
movsl
push
jg
jge
sub
sahf
jb
lret
xor
jmp
rolb
xchg
inc
adc
inc
addr16
cmp
mov
pop
cmp
inc
mov
or
fs
jl
mov
icebp
pop
push
mov
mov
aam
push
pusha
cs
aad
scas
cmpsb
cmp
bound
jne
pop
arpl
lods
sbb
mov
shrb
sbb
push
fs
and
repnz
loop
shrb
inc
dec
xor
push
loop
pop
nop
loope
filds
out
jmp
jb
adc
inc
pop
movsb
fisubrs
cmp
rcr
fcoms
mov
and
inc
inc
subb
sub
fdivs
xchg
inc
pop
test
lods
pop
and
push
cltd
loop
push
scas
or
xor
dec
inc
sti
adcl
and
xor
pop
mov
cltd
jl
fdivrs
mov
pop
and
aad
mov
pop
mov
inc
cmp
xor
sub
cli
and
sbb
xchg
cmpsl
mov
jnp
add
int3
shll
xor
jne
and
pop
inc
in
mov
push
lcall
mov
out
xorb
movsl
fiaddl
icebp
mov
test
sub
push
xor
dec
push
idivl
out
ret
push
popf
arpl
sbb
aas
insl
mov
cmp
xchg
outsb
mov
idivb
cmpsl
lods
enter
movsb
movsb
xchg
mov
dec
mov
test
in
dec
inc
xor
in
repz
mulb
sbb
jnp
mov
cmpsb
loope
out
adc
hlt
mov
push
cwtl
pushf
cmc
inc
dec
pop
faddl
scas
mov
push
push
std
sbb
aam
fidivl
lock
fchs
push
xchg
mov
pop
mov
adc
fists
jmp
pushf
or
roll
add
cli
ss
repnz
es
daa
icebp
and
xchg
ficoml
cwtl
cmp
pop
xchg
pop
ss
dec
adc
hlt
mov
mov
pushf
les
lods
jl
jp
mov
mov
loopne
data16
add
cmp
inc
ficoml
fsubl
mov
notb
loop
or
push
inc
mov
js
xor
aad
je
mov
loop
sbb
dec
sbb
or
sahf
sbbb
sub
in
and
leave
shr
cld
mov
xchg
adc
cmp
fdivr
xchg
jnp
cltd
fsubrs
scas
dec
js
cs
pop
dec
test
xor
lds
mov
mov
test
aaa
xor
gs
push
fsubrs
mov
xchg
jg
jge
rorl
or
cmp
add
adc
or
repnz
inc
jp
addl
out
mov
and
inc
ret
sub
test
xor
cld
movsb
stos
jno
int
scas
mov
bound
fwait
and
in
add
insl
lds
mov
xor
push
pop
jmp
inc
mov
cmc
pop
rcll
inc
loop
mov
fisubl
loope
dec
jle
add
inc
test
mov
mov
popf
dec
subb
jae
xor
test
and
sub
gs
jae
pmaxsw
leave
out
and
imul
cmp
and
in
les
fiadds
pop
xchg
hlt
dec
repz
mov
xorb
xchg
andl
mov
sahf
mov
ss
add
sub
pop
sbb
or
pop
loopne
dec
xchg
xchg
stos
leave
loopne
add
xor
into
pop
into
pop
push
lahf
sbb
pushl
cld
lret
sahf
fsubrl
jnp
inc
and
sub
mov
ja,pn
jne
adc
shll
int3
and
aad
cmp
push
jne
inc
pusha
cmc
je
jbe
pop
mov
outsb
cmp
sub
arpl
pushf
loop
scas
pushf
mov
mov
mov
pusha
call
negb
and
dec
and
sub
mov
ss
xchg
in
mov
movsb
dec
lahf
loop
mov
pop
dec
movsb
aaa
jge
xor
rcr
pop
mov
push
pushf
int3
mov
or
adc
inc
clc
mov
into
push
ficompl
mov
inc
adc
adc
jl,pt
lock
test
push
mov
fdivrl
repnz
mov
cmp
mov
cmp
mov
fwait
jg
xchg
mov
mov
jnp
std
leave
sbb
jb
xchg
mov
add
sbb
push
xlat
jg
cmp
and
adc
pop
cmpsl
repnz
rcl
insl
pop
pusha
xchg
adc
fcompl
mov
cmp
jge
adc
sbb
inc
or
push
inc
mov
cmc
push
dec
movsb
push
lods
insb
adc
inc
cmp
pusha
test
jb
xchg
ljmp
iret
mov
scas
mov
cs
jo
ds
sti
inc
sbb
push
sub
xor
in
loope
daa
or
int3
dec
call
stos
aas
mov
cs
sbb
jecxz
fistps
repnz
mov
sarl
mov
xchg
inc
push
movsb
mov
cli
repz
sub
sub
ret
dec
mov
mov
sbb
pop
pop
xchg
xor
adc
cli
loope
or
pop
das
fs
mov
fsubl
jo
movsl
sbbb
stc
sub
sbbl
inc
into
add
pop
pop
mov
aas
jecxz
std
xchg
cmpsl
sbb
pop
sbb
xlat
test
add
jno
jbe
lods
sbb
sbb
vmovaps
into
scas
inc
cld
jl
xchg
xor
mov
mov
or
jl
subb
test
and
mov
imul
jg
in
cmp
dec
shlb
pop
lock
mov
xor
popa
cld
mov
mov
lock
dec
mov
movsb
push
or
inc
add
jl
add
pop
xor
cltd
scas
dec
sbb
imul
sub
aad
test
into
sahf
inc
hlt
pop
inc
adc
or
scas
cmp
adc
test
sbb
mov
pusha
add
je
or
dec
and
xor
mov
cmp
in
lods
dec
sub
clc
mov
ret
movsl
dec
fwait
cmp
gs
test
sbb
add
inc
mov
pop
pusha
xlat
movsl
rcr
and
mov
xor
pop
test
or
adc
sub
mov
das
pop
or
leave
leave
movsb
adc
dec
outsl
movsl
mov
or
fpatan
jbe
sbb
dec
xchg
mov
les
cltd
mov
mov
stos
fucomp
adc
inc
scas
mov
xchg
nop
mov
aad
imul
jnp
dec
inc
pushf
loopne
nop
and
mov
mov
lret
jnp
xchg
repnz
sbb
jo
lret
addb
stos
mov
mov
ljmp
jae
test
fwait
push
pop
xlat
jmp
test
adc
mov
sub
loopne
sbb
test
lahf
inc
xchg
cmp
aaa
xchg
xchg
mov
push
and
sbb
dec
out
inc
dec
mov
mov
sbb
pop
cmp
pop
xchg
xor
jmp
mov
jnp
sub
rcll
cltd
adc
xchg
add
lock
mov
cli
xchg
mov
cltd
shlb
in
xchg
or
enter
dec
fisubs
mov
add
pop
roll
push
and
jb
xor
lcall
adc
xor
adc
mov
pop
fbstp
jecxz
pop
pop
and
and
pop
cs
lret
mov
push
fdivrs
daa
ljmp
push
ja
outsl
adc
neg
push
inc
lea
mov
aaa
inc
stc
add
cmp
out
adc
adc
test
sub
jmp
cmp
lret
enter
add
mov
and
sub
ret
sbb
test
lods
fisttpl
add
pop
lods
stos
mov
ja
sbb
addr16
push
cwtl
mov
adc
cli
push
test
insb
out
jo
sarb
push
mov
fs
pop
lea
scas
mov
jno
loopne
push
and
jnp
sahf
add
dec
int3
xlat
sub
pop
adc
add
out
gs
sub
or
imul
les
dec
loop
jmp
add
adc
and
shrl
dec
dec
add
test
pusha
dec
clc
dec
dec
xchg
and
pop
add
fcompl
push
inc
hlt
iret
push
mov
xchg
fisttpl
adc
fbstp
call
push
inc
dec
cmp
inc
mov
int3
adc
push
mov
xchg
imul
add
push
aaa
sbb
cmp
aad
sti
mov
cmpsl
popf
jo
push
push
cltd
lret
pushf
adc
cmp
insl
mov
popl
push
adc
sahf
mov
aaa
adc
addb
movsb
addr16
jge
sub
ss
cmp
clc
loop
sub
stc
fildll
jle
pusha
xchg
mov
add
and
push
fsubrl
dec
sbb
xchg
adc
inc
dec
popf
cwtl
mov
xor
push
ljmp
out
xor
les
jo
mov
adc
test
fcmovnbe
jmp
xor
jbe
sub
push
fbld
sub
subb
push
adc
push
shll
jmp
rclb
outsl
mov
fwait
mov
adc
pushl
icebp
daa
adc
roll
loope
lods
cmc
pusha
stos
adc
jns
sbb
xchg
and
pop
push
dec
lahf
jne
xchg
stos
test
mov
into
lods
clc
xchg
jo
mov
addb
std
rclb
sarb
es
xor
ljmp
rolb
mov
fistps
out
push
fs
mov
ss
lcall
mov
mov
enter
scas
sub
daa
stos
out
dec
icebp
push
push
xchg
inc
movsl
mov
add
scas
in
pop
jns
xor
call
cltd
repnz
mov
dec
lods
mov
ficoms
test
movl
js
and
pop
test
popf
and
jmp
sub
lods
xchg
sub
jecxz
sbb
jns
and
sub
mov
jo
fwait
roll
xor
xchg
into
push
dec
cmpsb
push
xor
dec
scas
setno
clc
and
ret
cs
jge
adc
adc
pop
ljmp
sti
into
push
sub
sbb
cli
decb
loope
jecxz
adc
push
xor
popf
jne
xchg
bnd
mov
and
pop
ficoms
xchg
xchg
cltd
adc
pop
scas
add
testl
and
fs
push
xchg
cmp
xchg
jne
lods
push
out
dec
mov
jecxz
adc
movsb
test
js
xchg
test
loope
sbb
sbb
and
call
lret
mov
mov
adc
mov
lods
pop
daa
mov
or
push
cmp
inc
lods
or
orb
mov
hlt
int
lret
shl
push
repnz
rcrb
add
jnp
cmpsl
inc
inc
inc
outsb
sbb
push
mov
adc
fsubrs
jbe
xchg
cs
outsb
jae
out
xor
mov
dec
das
jno
pop
pop
call
push
int3
cltd
dec
test
hlt
mov
leave
fnsave
pop
arpl
insb
fdivs
imul
jg
pop
pop
gs
jno
pop
xor
int3
adc
out
jnp
jb
out
push
sub
inc
pop
pusha
cwtl
pop
outsb
mov
loope
sti
mov
jo
inc
or
jl
push
add
push
mov
ja
mov
data16
mov
cmp
or
lods
roll
mov
mov
xchg
rcr
aam
int
xchg
adc
inc
out
fisubrs
and
cmpsb
jmp
lods
cltd
rolb
fcompl
pop
mov
test
loope
mov
fstl
aam
xchg
mov
or
and
ds
into
push
ret
mov
add
or
loopne
or
cmp
testl
stos
xor
jp
mov
outsb
cld
adc
cmc
sub
mov
loopne
push
inc
insb
add
or
cmpsb
call
or
mov
and
in
cmc
bound
testb
jns
inc
sbbl
mov
xchg
pop
sahf
jno
ret
mov
cmp
outsl
jmp
xchg
out
iret
in
jge
xchg
push
fs
ret
pop
push
push
xor
inc
mov
ret
push
ljmp
sbb
xchg
xchg
fisubl
stos
sahf
push
pop
sub
out
push
or
pop
sbb
cmpsl
pop
cmp
in
lods
and
subl
arpl
mov
insl
lret
dec
sub
sbb
inc
jno
movsl
fs
mov
stc
xchg
add
daa
cwtl
adc
add
or
enter
adc
fadds
out
lds
push
fucomi
xor
int3
push
test
and
lods
add
and
cmp
jmp
data16
jl
mov
push
inc
mov
outsb
fnstsw
and
add
cmpsl
or
cmp
inc
das
mov
sbb
jo
inc
push
push
enter
mov
inc
adc
pop
adc
jns
cs
mov
jno
lods
lods
test
push
sub
cmp
ror
decl
pop
jg
hlt
test
or
inc
fwait
mov
popf
pop
push
es
or
loope
cmpsb
imul
imul
cmp
loope
jo
fwait
test
test
dec
sbb
aad
fwait
xor
data16
mov
outsl
loope
jp
mov
mov
ss
rclb
jbe
jb
lret
add
cltd
pmulhw
jo,pt
and
lahf
sub
jmp
or
call
and
fcomps
lret
sarl
daa
addl
insl
mov
out
idivl
in
add
mov
push
repnz
aad
adc
lds
sbb
rorb
jnp
fsubrl
xlat
jl
movl
mov
shrl
cmp
rolb
test
or
mov
pop
testb
in
cltd
or
ja
sbb
push
aaa
sbb
jg
inc
lds
jnp
js
mov
add
shll
mov
lahf
xor
mov
dec
jge
mov
cmp
jg
sub
push
adc
lods
push
icebp
call
pop
fistps
jno
je
aas
adc
mov
movsl
fcoml
xorb
in
sbb
sbb
daa
jo
and
lcall
fdivs
ret
cmp
iret
jno
xlat
jae
clc
scas
daa
or
lods
sub
or
hlt
push
mov
int
xor
jp
loopne
and
notb
push
test
mov
xchg
pushl
push
sarl
and
sub
fcmovu
dec
ret
or
out
add
jmp
push
mov
jnp
push
mov
fwait
js
into
pop
std
out
into
xchg
mov
dec
mov
fadds
jecxz
sbb
sbb
cmp
push
xor
or
stos
sub
xchg
pop
int
popa
cmp
mov
pop
lcall
inc
lock
inc
jge
or
cmp
dec
insl
inc
dec
lods
xor
mov
iret
dec
inc
cmp
pop
movsl
arpl
js
arpl
and
ficompl
sbb
icebp
testl
test
mov
lahf
jne
add
std
aaa
jne
cmp
testb
adc
jno
mov
lret
push
mov
inc
fsubrl
add
push
loope
jnp
cld
lret
pop
cmp
adc
jno
inc
adc
ja
imul
mov
test
leave
and
mov
jp
mov
fcomi
pop
fcmovu
add
push
stos
leave
push
out
cmp
cmc
addr16
add
mov
outsb
fldcw
insl
frstor
adc
outsb
stc
fmuls
adc
insb
push
xchg
pop
ja
jo
sti
or
popf
int3
or
clc
add
mov
jns
mov
mov
sbb
sub
push
dec
adc
dec
pop
mov
jg
mov
rcl
dec
jb
sbb
sub
adcb
ja
sahf
fdiv
adc
mov
pop
sub
les
cmpsl
iret
sub
sbbb
outsl
insb
pop
xchg
mov
mov
mov
xchg
fnstcw
fnstcw
in
mov
dec
jle
clc
cltd
es
enter
mov
gs
jne
cmpsb
xchg
inc
jl
lret
or
mov
mov
imul
lods
lcall
test
ds
pusha
push
sbbb
lods
inc
pop
dec
adc
mov
icebp
ret
mov
mov
push
cli
popf
ret
xor
loope
and
mov
movsb
stos
and
cltd
stos
xor
fwait
out
sarb
aas
rcll
in
in
push
test
fwait
xlat
sub
adc
jg
jg
mov
outsb
test
outsl
push
jg
dec
jge
inc
cs
leave
or
mov
xor
mov
or
add
rcll
adcl
jae
cmp
ja
gs
cmp
rcr
clc
aad
push
adc
test
mov
addr16
test
sarl
jno
xchg
imul
mov
iret
and
stc
mov
dec
add
sub
inc
or
lea
push
decb
les
lret
das
lods
test
mov
out
push
imul
popf
jp
movsb
lret
push
cmp
lea
jb
movsl
cli
scas
cltd
cld
aaa
xor
mov
and
pop
imulb
push
int3
dec
jo
out
repnz
dec
fwait
push
push
inc
cmp
cs
in
addl
push
mov
iret
push
lods
out
cmpsb
mov
jg
clc
pop
sbb
mov
dec
out
xchg
les
sub
stos
fisubs
push
rcrb
icebp
popa
lods
mov
sub
sub
pop
jo
mov
movsb
mov
push
hlt
call
jno
dec
ss
push
xor
dec
or
sti
dec
data16
les
push
sbb
and
mov
pusha
and
mov
xchg
shufps
addr16
cld
popf
test
shl
outsb
jl
jae
sbb
aad
push
test
mov
pushf
sub
in
mov
js
mov
das
jg
ja
movsl
in
add
lcall
inc
jne
add
dec
cmpb
fidivrl
mov
cmpsb
push
pop
int
fwait
xchg
xor
imul
out
mov
jne
scas
or
fs
pop
je
test
insl
es
add
push
add
sti
mov
sub
adc
xor
sbb
mov
jmp
sub
daa
paddsw
sbb
dec
add
arpl
mov
xor
dec
mov
hlt
inc
push
pop
stos
stc
mov
push
or
stos
les
or
pop
jp
jmp
in
dec
cltd
cmp
lret
imul
mov
icebp
xor
mov
sbb
stos
add
test
adc
push
sub
lcall
cmp
push
test
pop
xor
xor
xor
add
es
lods
cmp
mov
mov
mov
jmp
dec
imul
pop
fwait
sub
or
add
ljmp
subl
jmp
sbb
pop
sub
stc
push
ret
pop
lds
sti
sub
or
movsl
jno
push
les
popl
out
push
repz
dec
pop
aas
sbb
xchg
fs
fwait
jg
cmp
jmp
pop
adc
mov
sbb
sub
adc
push
xor
pop
enter
xchg
xchg
bound
inc
dec
ret
xchg
ljmp
stos
xchg
sbb
xor
stos
add
mov
outsl
xor
mov
sub
test
icebp
je
bound
xchg
hlt
sub
push
mov
clc
pop
cmpsl
mov
ds
or
cmpl
push
leave
sbb
mov
decb
ficoms
jbe
aas
push
ja
inc
sbb
xchg
mov
or
ljmp
xor
push
fnstsw
mov
mov
je
jbe
into
jns
cltd
addr16
stos
pop
dec
movsl
push
out
out
test
dec
aas
and
nop
stos
sbb
and
rorb
inc
sub
out
adc
cwtl
stos
inc
in
subl
ja
ret
psubsb
es
ja
xchg
dec
or
lea
jge
xchg
fldenv
xor
imul
mov
insb
mov
xor
inc
adc
mov
shl
cli
mov
movsb
dec
shlb
xor
aas
or
sbb
sbb
mov
nop
ja
sbb
fstp
les
sub
das
sahf
push
jmp
out
cmp
hlt
xchg
jp
fidivs
test
cmpsb
mov
cmpsl
xchg
inc
gs
adc
scas
leave
sub
cmp
shl
ret
ficoms
xor
movl
add
xchg
jnp
dec
and
adc
les
and
jle
mov
lds
sti
add
dec
int
jle
xchg
frstor
into
cmp
jge
fstpt
or
incb
cli
push
add
rclb
ret
fs
cltd
imul
and
and
popf
or
fldt
mov
adc
scas
sbb
cld
push
add
xchg
add
or
pop
pop
outsb
icebp
jp
loopne
push
das
sbb
lcall
mov
out
mov
push
ss
out
test
xchg
fldt
ss
cmp
jb
pop
sti
add
in
lea
mov
add
jge
es
movd
sub
out
js
mov
repnz
clc
add
addr16
clc
ljmp
mov
push
loopne
xlat
inc
in
rcrb
loope
and
cmp
mov
neg
mov
ss
mov
fcomip
dec
jo
jge
stc
pop
sbb
jne
mov
sbb
sub
out
pop
cld
push
sbbl
sub
dec
and
xchg
test
xchg
jl
lock
out
xchg
fucom
gs
push
fnstenv
inc
mov
xchg
push
sub
fadds
cmc
dec
cmp
loopne
repz
add
sbb
xchg
dec
and
pop
sub
sti
push
into
sarb
xchg
fisubrs
lock
aaa
dec
or
arpl
push
add
inc
sbb
nop
rolb
jne
mov
pop
xchg
ret
jns
in
in
mov
sti
dec
out
nop
shll
dec
add
push
lods
mov
pusha
vpand
repz
xor
jnp
aaa
nop
repz
adc
pop
pop
or
fldl2e
jg
inc
out
xor
mov
ret
arpl
and
or
xlat
xchg
and
or
es
les
xchg
add
iret
rorb
or
call
sub
xlat
adc
jl
inc
push
xor
lret
shl
xchg
adc
and
mov
and
in
push
mov
test
xchg
aam
shll
jecxz
loope
imul
iret
test
inc
popf
bnd
gs
mov
pop
pop
jnp
lret
aad
orl
xchg
mov
mov
test
fdivl
xor
popa
ja
xor
stc
fdivrs
xchg
ja
iret
push
sbb
or
dec
js
lock
xor
xlat
lcall
mov
daa
inc
outsl
pop
sbb
jg
arpl
xor
in
inc
inc
mov
dec
js
push
icebp
jecxz
and
icebp
pop
xchg
xor
mov
jb
jmp
leave
out
mov
ljmp
or
and
scas
in
add
iret
jp
pop
sahf
lret
mov
into
push
or
repz
test
xor
scas
shll
adc
mov
mov
sub
aas
das
lods
push
sbb
adc
loop
or
dec
inc
sahf
push
adcl
int
xor
jb
cmc
les
pop
sub
ja
mov
add
fs
mov
mov
or
sub
mov
aaa
cmp
js
jnp
mov
or
mov
cmp
arpl
and
push
dec
ja
je
insl
or
bound
lock
outsb
testb
cmpsl
pop
jns
lret
repz
repnz
cmpsl
mov
push
out
dec
mov
je
int
sbb
sbb
sar
iret
xor
mov
sbb
cmp
mov
cmp
xchg
xchg
sub
mov
mov
mov
int3
or
fnsave
dec
mov
mov
xchg
mov
in
lock
xchg
mov
push
mull
pop
push
push
pushf
push
test
jecxz
repnz
sub
cmp
fwait
test
fwait
add
sbb
movsb
in
shlb
and
mov
mov
out
adc
push
lcall
adc
mov
test
dec
movsl
in
pop
ret
mov
jno
xchg
xor
or
xchg
repnz
sub
mov
and
rclb
adc
mov
test
dec
pushf
scas
mov
shl
ret
fwait
shlb
outsl
test
cwtl
adc
out
push
push
subb
repz
push
sub
sub
and
adc
mov
fsubs
mov
ss
mov
push
pop
nop
enter
movsb
imul
jbe
nop
sub
jb
xchg
dec
sub
loop
push
push
aam
movsl
pop
xlat
mov
mov
pop
mov
repz
fisttps
push
rcrl
dec
mov
jg
push
push
or
loop
add
arpl
push
or
mov
clts
rorb
bound
popf
or
cmpsl
addl
mov
dec
movsb
enter
dec
shll
imul
jcxz
jg
sbb
adc
add
out
das
push
loope
nop
imul
xor
cmp
add
push
ds
int3
add
daa
test
ljmp
jecxz
xor
mov
sbb
mov
cs
out
inc
cld
or
mov
pushl
cltd
mov
mov
xchg
xor
popa
cmp
push
and
mov
movsb
in
shlb
pop
ret
fcomp
fcoml
lret
mov
jmp
or
xchg
stos
pop
ja
pop
pop
dec
sarl
iret
mov
dec
cs
adc
ss
adc
and
xor
pop
fbstp
mov
out
out
fmuls
mov
jae
imul
cmp
hlt
repnz
push
or
push
inc
rcll
scas
repnz
push
pop
and
and
ror
jmp
stc
jo
iret
fistpl
shll
repz
mov
adc
out
pop
pusha
nop
sub
mov
jnp
repz
cmp
or
jmp
inc
test
cmp
cmp
lahf
xorb
dec
lods
xchg
daa
lcall
stos
pop
or
sbb
mov
jno
aad
out
aaa
lahf
sbb
cli
xchg
lret
lods
aas
insl
xor
leave
pop
dec
cmpsb
xorb
dec
pop
shll
push
mov
xlat
inc
je
jae
pop
insl
out
adc
xchg
and
cmc
addr16
mov
xlat
sub
js
subb
ja
sub
push
inc
stos
or
mov
dec
jns
adc
mov
fisttpl
push
push
inc
mov
xchg
ret
jecxz
inc
jbe
mov
sbb
pusha
xorl
or
mov
mov
in
push
pop
xor
or
call
pop
push
xor
mov
mov
notl
sbb
std
jne
jge
inc
ret
idivb
popf
out
jg
arpl
dec
adc
and
out
xchg
imul
shrl
cmp
insl
push
rcl
cmpsb
push
sbb
mov
add
sub
out
add
imul
imul
loope
repnz
inc
icebp
incl
jno
add
jge
push
movsl
sahf
mov
pushf
popf
es
aaa
jmp
aaa
das
fcom
js
ret
icebp
sub
inc
fstl
dec
int
ja
sbb
shl
inc
cmp
cli
dec
jo
dec
mov
cwtl
int3
jne
xchg
aaa
dec
out
and
or
lods
in
xchg
ret
loop
jmp
repz
jecxz
pop
jmp
push
sub
cmp
dec
lods
or
mov
mov
push
xor
xchg
scas
cld
icebp
rcrb
scas
pop
xchg
jg
push
nop
and
push
int
dec
inc
in
sub
cmpsl
mov
inc
pusha
decl
push
aas
mov
xorl
jle
addb
mov
jmp
sbb
xor
mov
cmp
mov
call
aas
mov
jne
in
or
fiadds
xchg
push
shll
cld
push
imul
adc
sbb
mov
push
jnp
hlt
jbe
jecxz
xchg
jbe
jmp
jns
add
adc
je
leave
xor
test
sbbl
adc
mov
sub
nop
jl
stc
cmp
lret
push
jb
jno
scas
adc
lods
inc
mov
in
inc
lea
pusha
or
fwait
pop
lods
or
add
sbb
xchg
mov
xchg
movsl
mov
fsubr
mov
mov
and
jecxz
cmc
mov
cltd
inc
imul
fsts
stos
mov
aad
lods
mov
repz
dec
lods
popa
pop
test
cltd
sub
sub
test
pop
lods
mov
jl
shll
sub
sub
out
mov
pusha
in
pop
jae
inc
push
rolb
outsb
mov
sub
popf
mov
aas
mov
outsl
pop
out
mov
sub
mov
in
lret
sub
out
pushf
inc
push
inc
adc
or
dec
cltd
dec
and
and
into
sbb
sub
dec
dec
inc
mov
ret
outsb
adc
mov
mov
call
inc
cmp
lea
or
rcr
or
sbbl
mov
inc
mov
mov
es
fildl
sbb
in
cmpsb
fwait
popa
pop
sub
ja
sub
pusha
movsb
js
fnstcw
pop
loop
inc
loope
sub
imul
xchg
insl
test
enter
pop
xlat
ret
es
add
add
aam
inc
or
sbb
loop
push
lcall
mov
gs
sti
jb
jbe
pop
and
mov
repz
and
hlt
add
and
int
int3
push
int
sub
mov
in
cli
icebp
xor
lret
in
fstps
movsb
push
cltd
inc
xor
fsubr
xchg
and
mov
jle
sub
mov
xlat
push
lea
sbb
add
ret
fsubrs
fnstenv
adc
and
repz
sub
cmp
cltd
leave
bswap
jl
xor
rcr
ljmp
insb
xor
and
inc
fcom
add
mov
mov
mov
popa
mov
lds
ret
daa
outsl
sbb
dec
pop
stc
pop
insb
mov
lahf
and
pop
mov
xchg
mov
xchg
iret
das
sti
lods
int
inc
push
out
lods
push
mov
and
cmp
fwait
roll
dec
mov
notl
cmpb
or
in
or
fcmovnu
mov
dec
mov
add
arpl
dec
loope
jo
rcr
fwait
rcrb
out
adc
jo
outsl
or
out
jae
or
fst
mov
jno
imul
ficoms
dec
mov
or
in
movb
add
pusha
fisubrs
movsl
loop
test
dec
adc
inc
jb
mov
mov
adc
jp
push
cmp
lods
stc
aad
ret
mov
cmp
loopne
fwait
mov
push
sub
lock
jl
int3
aad
into
and
int3
adc
push
ss
jbe
out
cmp
bound
mov
int
sbb
sub
test
loop
test
sbb
lret
mov
in
adc
sbb
and
mov
mov
lret
mov
cmp
push
cmp
enter
mov
cmp
push
sub
int
dec
pop
xor
test
testl
sbbb
ret
xchg
test
jp
cmc
movsl
add
xor
int3
mov
loopne
popf
cmp
cmp
popl
and
mov
mov
mov
call
ljmp
inc
mov
iret
sahf
inc
ss
clc
pop
aad
mov
xor
scas
out
into
add
shlb
jb
cltd
rorl
jmp
cmc
cmp
adc
pusha
in
jae
add
jp
push
mov
popa
call
jmp
and
xlat
cmp
ja
mov
dec
push
mov
loop
popf
dec
jecxz
enter
adc
mov
mov
jmp
ret
subl
xlat
push
and
movsb
sub
mov
cltd
cltd
sub
ds
ja
test
jbe
add
push
sbb
rcr
in
cld
and
dec
popa
fstl
xchg
pop
inc
mov
ja
dec
arpl
fcompl
lahf
imul
jl
lcall
sbb
add
inc
mov
cld
pusha
pop
dec
je,pt
xchg
sub
clc
shrb
test
fcomps
pop
add
xchg
cmp
std
addr16
lcall
jae
push
orb
in
push
xchg
xchg
jae
adc
loope
popf
dec
shrl
pop
sub
mov
mov
movzbl
jl
push
jg
mov
std
repnz
mov
mov
inc
jb
cmp
negl
and
mov
loop
mov
dec
xlat
cmp
stc
stos
fsubrp
jmp
bound
arpl
insl
repz
repnz
jmp
scas
push
and
imul
sbb
pusha
add
jp
dec
jmp
pop
mov
mov
shlb
jl
mov
pop
in
sarb
push
aad
pop
adc
dec
in
cld
jmp
jl
sub
xchg
cmc
inc
out
scas
cmp
adc
lcall
aad
adc
ficompl
mov
push
cs
out
les
lods
dec
pop
pop
ret
scas
pop
mov
or
mov
nop
inc
sbb
push
dec
int
es
leave
je
sbb
fld
stc
dec
xchg
mov
mov
xor
and
push
mull
push
ja
sbb
mov
add
ret
lea
fs
lods
sbb
xor
lea
mov
inc
ror
xorl
dec
push
push
and
jg
pop
imul
out
mov
inc
add
push
push
mov
add
das
es
sbb
sub
jae
xchg
inc
add
jle
adc
add
ds
rcr
mov
pop
mov
xor
adc
cmp
xchg
mov
inc
test
dec
shrb
repnz
inc
cwtl
cmpsb
cltd
sti
frstor
es
fwait
mov
in
nop
push
aaa
insb
xchg
push
mov
lret
loop
and
mov
ret
lds
adc
cmpsl
gs
mov
orl
or
sbb
bound
inc
icebp
cs
ret
mov
clc
and
enter
mov
mov
mov
les
mov
rorb
mov
dec
xor
mov
scas
arpl
iret
cmpsb
xor
incb
xor
dec
dec
in
sub
cmp
jo
sbb
mov
and
or
fprem
arpl
fidivl
dec
sahf
pop
and
inc
test
imul
js
or
pop
cmp
sub
jae
adcl
decl
ss
dec
hlt
loopne
mov
rorb
hlt
sbb
mov
test
inc
js
xor
imul
popa
data16
xor
xchg
mov
add
jmp
pop
jmp
divb
jns
clc
test
or
outsb
out
mov
cmp
mov
js
jp
dec
imulb
add
cmpsl
sahf
fisubrl
mov
lahf
jp
bound
cmpsb
cmp
jnp
pusha
jbe
mov
in
pop
ret
fwait
mov
fdivrs
fwait
mov
negb
push
mov
or
shrl
icebp
and
mov
daa
xchg
push
or
mov
imul
cld
fimull
adc
xor
jecxz
shll
lret
fidivl
mov
adc
sub
inc
daa
into
sub
push
mov
or
lret
out
cmp
and
leave
sub
mov
loopne
popa
jl
pushf
pop
pmaxub
mov
xor
mov
insb
push
pop
and
sub
imul
popf
fsubrs
into
dec
sub
repz
stc
cmp
push
xor
mull
mov
cmp
push
inc
xchg
bound
and
mov
shll
add
jmp
jne
adc
mov
sete
jle
inc
in
imul
or
or
jecxz
fldt
or
jecxz
xchg
adc
jne
xor
jecxz
js
sahf
lea
out
or
ljmp
cmp
test
mov
pop
dec
mov
mov
pop
xor
fwait
call
jns
jp
imul
popa
push
aam
cmpb
int3
add
cmpsb
cld
roll
scas
insl
sahf
repz
mov
aas
ret
jge
mov
das
push
xchg
fbld
pop
jae
and
shl
mov
cwtl
mov
jo
cli
xchg
stos
push
loop
xor
mov
gs
dec
mov
sub
lods
sbb
pop
mov
cmp
dec
jo
add
dec
xor
es
repnz
int3
rcl
mov
aad
stos
bound
mov
cwtl
lret
sub
sub
push
rcr
cmpsl
ret
pusha
pop
xchg
xor
add
popa
adc
inc
out
mov
or
lret
arpl
dec
push
lcallw
jnp
bound
dec
mov
roll
lds
pop
sbbb
and
pop
cmp
mov
inc
pop
mov
fsubrs
xchg
xor
lock
xchg
mov
mov
rolb
push
jecxz
sbb
cvttps2pi
int3
or
push
mov
sub
bound
xor
loope,pn
lret
notl
jbe
imul
mov
fwait
adc
stc
test
mov
ret
pop
mov
xchg
sub
pusha
inc
mov
pop
ret
jl
loop
bound
vcvtss2sd
rcrb
arpl
int3
fdivrl
loopne
add
xchg
lds
ficoms
orl
rol
cltd
mov
pop
insb
and
mov
or
scas
das
lds
sbb
mov
aas
pop
cmp
enter
mov
sub
movsl
mov
jle
push
cli
cld
xchg
aas
push
mov
lcall
add
mov
pop
mov
sbb
add
out
and
dec
mov
mov
aad
adc
ljmp
xlat
lods
mov
jl
dec
xchg
mov
test
push
mov
push
and
sbb
sbb
out
fldt
pushf
ja
jle
fidivl
movsl
mov
xlat
sbb
push
add
add
cld
or
mov
mov
loop
insb
inc
cmp
inc
xchg
rep
icebp
push
mov
push
cwtl
repnz
sbb
test
dec
inc
lret
sbbl
inc
lcall
jne
mov
jns
out
out
mov
or
push
jl
sub
pushw
leave
or
push
mov
xchg
leave
xchg
jb
mov
faddl
jle
push
mov
sbb
sub
lcall
xchg
rorb
das
fsts
push
mov
cmpsl
inc
js
pop
cmp
pop
xlat
xchg
lret
adc
mov
mov
cltd
fst
cmp
stc
sub
lret
lret
in
dec
cs
and
mov
xchg
shr
popa
cmpsb
jbe
pop
or
xchg
xchg
les
sub
movnti
push
xlat
cmp
mov
mov
fwait
xchg
cmp
insb
xlat
lcall
lock
outsl
jne
aas
cmp
sub
rclb
xor
cmpsb
xor
and
mov
mov
fwait
repz
sub
sub
je
dec
xlat
fwait
rclb
gs
test
imul
out
inc
incb
push
sbb
push
aaa
or
push
fs
dec
jbe
dec
rorl
cmp
push
pop
scas
cwtl
shl
lcallw
loopne
mov
jmp
cmpsb
imulb
mov
ja
or
xchg
push
fs
inc
and
repnz
rcll
and
mov
pop
or
pop
sbb
lods
lahf
mov
xor
or
adc
mov
push
mov
push
inc
push
dec
jnp
js
xor
push
mov
cs
les
xor
push
inc
mov
jne
fnstenv
rorb
aaa
popf
fcmovu
out
sbb
jb
xor
loop
jb
adc
inc
cmp
repnz
cmp
sub
jne
mov
sbb
jo
sbb
jmp
sbb
enter
and
ret
sbb
add
xchg
outsl
pop
test
sub
movsl
mov
mov
xchg
pop
jp
imul
jae
or
outsl
leave
jge
aas
and
les
mov
fucom
jmp
cmp
and
ds
fs
mov
int
outsl
dec
iret
cmp
mov
dec
xchg
rep
in
push
or
pop
fnsave
bswap
xor
xlat
pop
dec
mov
les
sub
pop
or
ret
mov
into
mov
cmp
out
subb
mov
test
xchg
stos
pop
jns
fdivrs
fisttpl
inc
push
lret
je
push
aam
push
out
jmp
cmpsl
jb
xor
lods
idivb
out
and
cmpsb
cmpsb
xchg
arpl
testl
inc
std
mov
repz
shll
add
jnp
sti
pmaxsw
jmp
aam
pop
aam
ret
insb
pop
cwtl
xchg
dec
inc
imul
ret
testl
pop
in
cli
scas
jmp
inc
push
scas
push
int
addb
xchg
inc
js,pn
dec
jle
int3
or
inc
cwtl
cmp
shlb
stos
adc
test
call
inc
imul
xor
cs
pop
xchg
out
mov
out
je
inc
and
or
in
popa
pop
ret
insl
stc
inc
ficompl
scas
or
shll
rep
stc
nopl
mov
ja
aaa
add
je
mov
repnz
test
sbb
sarl
mov
jns
xlat
dec
hlt
jno
add
xchg
mov
pop
repz
adc
push
jmp
add
lods
dec
pop
push
push
sbb
dec
sahf
fisubs
fsubrl
inc
scas
ljmp
lods
xchg
jmp
mov
mov
scas
rclb
bound
sub
pop
mov
sub
mov
pop
hlt
scas
mov
daa
mov
fwait
mov
lahf
es
test
stos
int3
in
dec
gs
xlat
lret
adc
push
repnz
loop
inc
sub
mov
sub
scas
jo
dec
test
jno
mov
push
imul
xor
bound
pop
dec
notl
aaa
bound
lods
xchg
add
cmp
dec
loope
stos
pop
stos
ds
and
cli
xlat
mov
inc
fisubrl
mov
mov
scas
jae
xor
es
addr16
or
jl
dec
pop
mov
mov
adc
cmpsb
push
jg
repnz
xchg
test
pop
andl
mov
movsb
nop
jno
clc
or
enter
fsubr
push
push
insl
rolb
loop
int3
jmp
cltd
gs
aad
jmp
mov
xor
cmp
arpl
rcr
xor
lock
jne
pusha
dec
into
out
lret
push
jbe
iret
icebp
bound
fucomip
sbb
call
stc
sbb
cs
nop
cmovne
push
das
loop
in
sarl
xor
add
xchg
mov
mov
pop
out
xchg
xor
addb
jl
outsb
push
mov
add
mov
dec
add
jae
test
out
in
add
xor
pusha
pop
mov
jb
aas
je
dec
ja
lret
cs
movsl
cwtl
call
jb
in
sub
xchg
xor
inc
mov
mov
icebp
dec
cmp
pop
xor
adc
pop
mov
mov
std
cwtl
pop
sti
add
mov
or
imul
push
jle
push
iret
data16
adcl
loop
sbb
push
icebp
push
orb
insb
pop
mov
loop
mov
in
shll
repz
ds
sarl
sbb
stos
dec
inc
inc
lock
fwait
jo
xchg
outsb
lock
rcrb
sub
testl
and
sbb
in
pop
cld
push
jo
jnp
pop
inc
pop
andb
jo
mov
ds
and
jb
scas
or
std
shlb
jnp
pop
mov
inc
lds
mov
insb
add
daa
outsb
dec
movl
add
int3
cmp
js
cmp
adc
cld
mov
shrl
pop
addl
imul
dec
pop
xchg
push
jns
lods
sbb
mov
popf
or
or
mov
pop
and
jb
dec
mov
sub
cmp
pop
add
popf
pop
outsb
push
add
cmpl
mov
cld
jbe
sub
push
and
xchg
and
inc
xchg
mov
sbb
movsl
andl
push
movsl
ss
or
mov
aam
sub
clc
sahf
ret
jl
std
movsl
in
push
push
fsubs
jge
shrb
mov
mov
dec
into
mov
push
lods
jne
movsb
aaa
andb
jge
jae
pop
stos
outsb
stos
sbb
xor
jne
adc
test
repz
fimuls
pop
and
mov
and
in
insb
push
push
and
mov
test
xor
adc
in
shl
xchg
shlb
repnz
xor
lret
imul
insl
dec
addr16
adc
pop
mov
divl
xchg
in
lods
inc
clc
in
scas
or
jne
push
push
or
or
pusha
and
mov
stos
test
cmovg
cli
cmp
cmc
lds
xchg
test
testb
jne
cmp
stos
mov
fistl
clc
and
cmp
cld
popa
test
or
loop
dec
and
jmp
aaa
mov
fidivrs
lea
jle
mov
idivb
imul
addr16
and
pop
jb
xor
fcomps
pop
cmc
ret
je
pop
or
dec
aam
mov
pusha
push
xor
sub
mov
push
int3
lods
int
jp
mov
and
xor
add
xchg
cmp
arpl
adcb
dec
jae
or
xchg
add
inc
xor
shl
jbe
cmp
arpl
jl
cmp
pcmpeqb
cmpsb
sbb
push
nop
or
leave
orb
jo
mov
cmp
cltd
pop
imul
inc
jecxz
inc
sub
sub
mov
jno
cltd
stos
cmovb
sbb
lcall
jge
add
lods
data16
mov
and
fs
push
out
mov
xchg
dec
cmp
sbb
insl
insl
xchg
jmp
stc
inc
lea
inc
xor
mov
xchg
test
notb
mov
sarl
cmp
inc
in
addb
jns
insb
jle
dec
lahf
loopne
js
cs
divl
mov
ret
pop
je
xchg
mov
mov
mov
sbb
cli
sub
mov
push
dec
add
add
push
xor
shll
icebp
pop
adc
js
shr
jns
icebp
imull
fbstp
sub
sbb
movsl
pop
dec
mov
push
push
fadd
dec
insb
insl
and
popf
mov
loope
in
movsl
mov
pop
or
xor
jge
mov
cmc
test
dec
dec
push
cmp
outsb
js
scas
iret
addr16
iret
sbb
mov
mov
bnd
sub
in
lret
pop
dec
shrb
mov
mov
adc
out
sbbb
push
sub
or
xor
fs
sub
inc
jp
insl
xor
test
and
sub
ljmp
cmc
gs
std
and
out
push
rcr
mov
lcall
sub
pusha
shlb
imul
mov
xchg
or
mov
cmpsl
mov
push
filds
jge
xor
inc
and
add
mov
rcrb
inc
adcl
sub
push
or
dec
loope
push
cli
xor
std
pop
lock
dec
lret
push
mov
mov
fbstp
cmp
icebp
jp
mov
mov
cmpsl
std
jbe
mov
mov
stc
xchg
pop
dec
push
xor
fildll
xsaveopt
xchg
cli
and
sub
mov
subl
stos
std
jnp
sahf
push
jecxz
imul
sub
and
repz
or
test
dec
subl
xchg
push
call
inc
leave
mov
cmp
jbe
xchg
adc
aad
xchg
and
stos
jnp
jae
test
mov
adc
mov
nop
add
ret
test
push
sti
daa
sbb
inc
movsl
jo
pushf
mov
sar
icebp
dec
pop
jmp
daa
js
add
test
pop
push
pop
jo
push
into
mov
adc
cmp
insb
jbe
mov
push
sti
inc
mov
xor
xorl
push
dec
int
loop
adc
push
pop
imul
xor
dec
into
sarl
or
xchg
pop
mov
or
scas
test
jg
pop
inc
pop
sbb
hlt
and
and
aam
cld
movsb
fstp
cwtl
and
fcoml
repz
cli
inc
and
mov
pop
out
arpl
mov
mov
adc
sub
sbb
iret
pop
adcb
pop
mov
inc
std
fwait
xchg
imul
adc
push
push
aaa
int3
pop
dec
pop
sti
cmp
xchg
scas
xor
imul
push
xchg
pop
xor
aaa
push
sbb
adc
or
dec
repz
cmp
lds
mov
and
shlb
shlb
mov
out
xchg
stc
stos
das
dec
adc
daa
xchg
lret
pop
nop
sbb
das
nop
sbb
mov
shrl
cmpsl
inc
ret
add
out
add
pop
mov
iret
gs
imul
inc
pop
adc
mov
pop
xor
aam
loope
push
sarb
flds
pusha
cmp
rcrb
xchg
data16
xchg
lahf
cwtl
xorl
sbb
inc
cmp
ljmp
push
pushf
push
mov
xor
test
gs
mov
add
jo
insb
pushf
enter
repnz
sbb
inc
push
ljmp
cmp
subb
addr16
jmp
mulb
in
sub
mov
xchg
inc
xchg
xchg
stos
popa
sbb
xor
shl
add
ret
mov
mov
xchg
rclb
arpl
sbb
xor
mov
int3
cs
jecxz
gs
jg
or
push
popa
loopne
icebp
adc
movsb
cmpl
mov
xchg
lds
mov
push
shll
push
cmp
ret
daa
mov
mov
mov
jno
pop
adcl
push
and
xchg
call
xor
sub
pop
fucom
xchg
sbb
mov
in
pop
xchg
ds
shlb
cmp
cmp
inc
push
sbb
into
in
lret
stos
lahf
inc
pop
add
mov
sub
jl
add
add
mov
or
gs
out
aas
xchg
xchg
popf
sub
xor
dec
and
xchg
bound
sub
mov
pop
popa
ds
jns
mov
adc
test
push
add
nop
cs
popl
ret
or
mul
lahf
dec
cmc
xchg
inc
add
scas
pop
es
cmp
and
pop
std
sub
push
push
nop
filds
push
pushf
inc
adc
sub
cli
cs
xchg
sbb
push
iret
add
cmc
xorl
mov
or
in
add
or
lcall
sbb
push
mov
jb
inc
test
outsb
repz
gs
jg
mov
insl
lock
das
lret
push
add
and
xchg
ss
mov
sub
fwait
push
pop
sahf
pop
push
out
push
jl
add
cmp
push
xchg
int3
out
push
lds
mov
shll
outsb
test
in
lret
rol
or
lea
outsl
pop
dec
push
rorl
inc
jge
scas
ficomps
cmpsb
dec
imul
fwait
loope
cmp
loopne
lods
mov
popa
push
or
iret
mov
xchg
pcmpgtw
xchg
sbb
push
adc
sub
testl
pop
sbb
in
pop
popa
fadd
loopne
int
xchg
jbe
mov
push
xchg
and
clc
jle
adc
outsb
imul
shrl
push
adcl
ljmp
xchg
stc
jg
sub
mov
xchg
in
sbb
into
stos
in
jno
xchg
popf
mov
mov
rcll
and
jle
pop
cmp
jecxz
xchg
xor
aad
mov
dec
jg
xor
jp
shrl
leave
jne
test
fimull
into
xor
enter
lods
mov
and
aam
lea
cmpsl
push
cmp
xchg
cld
sti
in
xchg
mov
int3
xchg
jmp
add
pop
call
jno
mov
inc
ja
stos
addr16
mov
dec
psrlw
insl
stos
jp
mov
jp
xchg
fimull
xor
mov
add
lret
pop
je
inc
ret
int
xor
and
mov
jecxz
sub
ss
dec
adc
pop
cmpsl
inc
out
pop
aam
pop
pushf
js
jl
lock
xor
outsb
sarl
adc
in
mov
pop
aas
cld
mov
sub
nop
insb
mov
das
or
fmull
xor
push
pop
and
mov
push
mov
or
int3
mov
inc
push
ds
sbb
inc
sbb
out
xchg
mov
stc
bt
or
pop
in
xor
in
ljmp
dec
mov
sbb
jae
clc
sub
call
xlat
fcmovb
sahf
or
repz
les
push
mov
movb
and
xorb
mov
insl
test
jmp
xchg
jno
lods
pop
sbb
cmpsb
inc
test
or
dec
add
int
fstpt
inc
call
imul
ss
and
shrl
sbb
inc
lahf
push
xor
jb
jle
aad
punpckhbw
jb
pushf
dec
xor
dec
das
dec
insb
push
into
cmp
call
cmp
ror
mov
rcll
sbb
hlt
lcall
je
into
pop
or
push
subl
lods
lret
sbb
lret
nop
mov
jae
xor
lahf
xor
divl
sub
inc
out
lahf
shl
sub
fistps
sub
xchg
test
mov
lock
pop
scas
jmp
xchg
jbe
pop
xor
rorb
rcr
push
mov
ror
sub
push
sbb
stos
lods
insl
cs
pop
push
or
and
xchg
out
xor
push
repnz
jne
rol
scas
mov
out
dec
adc
xchg
mov
aas
push
fldt
fwait
lahf
cmp
arpl
jp
nop
daa
mov
ror
andb
push
lea
pop
cld
push
std
jp
or
rolb
push
inc
inc
ret
mov
pop
or
sbb
pop
cmp
daa
adc
dec
jle
mov
rclb
out
dec
mov
shlb
sbb
jp
dec
mov
stos
cmp
pop
sbb
jb
pop
lds
lock
push
es
sbb
ret
roll
mov
xor
in
into
push
popf
test
push
inc
jbe
cwtl
mov
jecxz
int3
shrb
aas
sbb
ja
and
pop
incl
cmpsl
lods
popa
call
mov
xchg
pop
stc
or
dec
fidivs
sbb
data16
push
lahf
into
xchg
dec
out
push
xchg
pop
packssdw
adc
push
lods
ret
mov
repnz
not
dec
arpl
popa
ret
rcrl
mov
xchg
lds
cltd
daa
pop
movsb
sti
aaa
jae
add
insl
mov
push
pop
loopne
cltd
cwtl
mov
sbb
cmp
ret
lcall
pop
mov
cmp
stos
stos
jmp
cmpsl
sti
adc
mov
xchg
adc
add
lods
movsb
nop
out
bound
xchg
sbb
pop
adc
fdivr
mov
rol
xor
xor
xchg
out
mov
cmp
in
jmp
and
cs
bound
inc
dec
add
pop
js
pop
dec
xchg
adc
pop
rorl
cmp
add
idivb
jmp
movsl
xor
mov
sub
insb
pop
sub
out
jbe
cmc
push
in
pop
nop
insb
inc
jno
mov
aam
xchg
dec
out
xchg
push
sub
push
add
mov
xchg
lahf
push
aad
push
mov
out
cmpsb
pop
jp
pop
cmp
out
loopne
cmpb
pop
movsb
sbb
or
gs
lret
xor
add
lock
xchg
add
xor
adc
xor
jecxz
mov
rcll
lahf
mov
and
das
ds
in
mov
pop
jmp
sub
pop
fsubp
add
clc
mov
test
dec
cltd
xchg
push
repnz
mov
xor
hlt
movsb
fcoml
and
mov
mov
das
jge
leave
push
loopne
cld
sbb
call
lods
daa
outsl
add
data16
adc
or
out
and
dec
cmp
sbb
or
imull
dec
inc
and
mov
xor
mov
test
or
subb
ret
hlt
insl
add
imul
adc
fwait
nop
sub
pop
jecxz
inc
mov
cmp
xchg
vpunpckldq
dec
out
testl
mov
loopne
cmp
fwait
xor
movsb
nop
sbb
lock
popa
fs
xchg
mov
fisubl
fildll
cmpsl
loope
cmp
ljmp
popf
or
mov
dec
xor
jno
sahf
repnz
ffree
mov
push
lds
cs
dec
repz
fidivrs
mov
add
enter
fcmovu
aaa
dec
jecxz
xchg
clc
dec
in
stos
fistpll
mov
mov
fldcw
and
inc
add
push
push
iret
or
out
dec
in
cwtl
ficoms
sti
cmp
iret
sbb
scas
sbb
loop
pop
mov
cmpsl
sbb
ss
in
leave
sbb
and
inc
adc
fs
jl
jmp
or
and
push
add
addl
pop
mov
xchg
pop
push
out
push
addr16
insl
adc
add
fwait
ss
push
sub
arpl
je
mov
cli
scas
insb
mov
mov
xchg
es
dec
pusha
jmp
out
dec
push
mov
test
jmp
or
xchg
fstpl
into
dec
pop
mov
mov
aam
dec
inc
mov
movsl
out
mov
pop
xor
fisttps
mov
nop
enter
pop
inc
pop
or
imul
or
jle
pop
dec
xor
sub
adc
ret
dec
scas
jg
das
dec
cmp
xor
push
mov
stc
out
inc
jbe
mov
and
mov
mov
test
mov
clc
cmpsl
pop
das
push
mov
sub
int3
sbb
imul
cmpl
test
mov
dec
xchg
add
popf
popf
jp
xor
sbb
scas
lods
add
pop
hlt
dec
jmp
inc
and
rcl
push
movsl
pop
or
jne
sbb
or
cmp
xor
cmp
aam
push
push
xchg
cltd
addl
sbb
stos
stc
ret
adc
cmp
inc
pusha
lds
inc
jl
cmp
push
daa
lcall
sbb
aam
jo
adc
sbb
fisttps
pop
xchg
stos
xchg
push
pop
sarl
sbb
ds
xchg
or
lcall
test
fcoms
mov
sub
xor
es
loop
or
dec
xchg
and
test
jl
or
movsl
add
cld
pop
lods
cmp
pop
insb
outsb
and
jne
push
testl
jb
fs
call
adc
dec
int3
and
or
inc
ds
ljmp
mov
fsubrl
adc
xchg
mov
push
cmp
loope
inc
lahf
sub
mov
mov
pop
add
cmp
add
int
xchg
jmp
mov
inc
pop
fistpl
xchg
xchg
imul
aam
bound
stos
push
mov
push
or
lret
add
icebp
jge
add
mov
inc
mov
cmp
sbb
xor
mov
fwait
testb
mov
je
aas
sarl
mov
shl
orl
pop
cmp
xchg
hlt
fdivrs
sub
ret
push
xor
or
dec
xchg
stos
or
mov
out
mov
es
hlt
pop
and
xor
mov
loopne
jno
push
stos
test
outsl
pop
push
sbb
inc
add
cmp
out
insb
cmp
inc
into
inc
cs
mov
xchg
inc
popa
sub
sub
xchg
mov
pushf
test
scas
inc
negb
shll
push
add
push
add
fcmove
sbb
imul
dec
mov
jb
xchg
mov
lret
pop
sbb
scas
test
or
jg
iret
mov
mov
pop
cmp
pop
push
and
mov
jns
rclb
mov
xor
mov
jbe
lods
mov
lock
je
jns
inc
dec
mov
mov
call
jb
outsl
dec
cs
out
push
dec
push
xchg
leave
notl
sbb
fistpl
movsl
iret
inc
incl
jno
jb
jecxz
in
lea
hlt
imul
jo
jbe
vsqrtss
int
jb
adc
cmc
xchg
sbb
pop
jecxz
cld
call
add
into
cmp
mov
mov
sbb
add
fidivrl
pop
js
mov
popa
dec
mov
fxch
cmp
fidivl
sbb
add
push
sub
push
js
or
fildl
test
sahf
popf
ds
adc
dec
loop
pushf
mov
cmp
push
and
rcl
imul
mov
cs
cmp
add
xor
int
sbb
adc
xor
push
push
inc
sub
aam
flds
inc
xchg
sub
or
loope
rcll
xchg
nop
rclb
fidivrl
addl
pop
jns
push
fsubr
xlat
iret
mov
cmc
mov
cmpsl
sbb
mov
push
lods
sti
mov
or
jnp
cmp
push
repnz
mov
adc
inc
arpl
negb
jge
imul
push
dec
and
mov
push
pop
xchg
bound
adc
xor
sti
jle
aam
fld1
scas
inc
cmp
push
add
insb
fstl
or
subl
ret
mov
add
push
popa
pop
push
jg
cs
cmp
lea
push
out
xchg
mov
mov
outsb
cmp
cmp
sbb
mov
xchg
jb
loop
imul
imul
pop
test
pop
or
bnd
mulb
stos
add
xor
daa
test
mov
mov
jp
xchg
or
jmp
cmp
adc
sbb
scas
insb
daa
mov
fidivrs
inc
adc
jns
fdiv
movl
adc
rorl
imulb
sti
ret
out
movsb
jb
jg
jle
xchg
push
cwtl
sbb
ret
mov
psraw
push
ljmp
scas
push
and
aaa
out
aad
pop
int3
push
testl
sti
cmp
das
push
cmp
xorl
sbb
mov
mov
mov
ja
ss
loope
lods
fcoml
cmp
inc
sbb
jbe
jb
lret
and
fnstsw
insb
pop
les
or
push
add
adc
mov
lods
xchg
lret
shr
outsl
mov
mov
mov
mov
and
popa
mov
sub
or
je
iret
dec
mov
push
mov
lods
xor
out
inc
mov
sbbl
fistpl
addr16
or
loope
les
cmp
call
fwait
add
sbb
scas
mov
cli
int3
and
adc
js
js
cmp
xor
sbb
cmp
or
mov
pop
mov
hlt
aaa
test
push
cltd
call
mov
stc
aam
mov
movb
cmp
pusha
fs
hlt
push
mov
pop
mov
sbb
push
mov
pushf
mov
sbb
jo
lds
jmp
xchg
cmpb
sub
imul
in
les
xchg
inc
add
pop
cld
inc
cmc
fimull
or
lock
pop
movsb
loop
dec
or
mov
in
cltd
xchg
xchg
jecxz
sub
in
cltd
xchg
divb
mov
mul
sti
cli
inc
and
and
pop
das
into
lods
in
ljmp
sub
leave
std
cmp
push
xor
jnp
xchg
ret
pushf
scas
iret
cld
notb
popf
jp
cmpsb
repz
cmp
jge
in
ja
fmuls
sbb
ret
rolb
stos
push
mov
outsb
rorl
push
jle
push
xchg
dec
jb
shl
les
nop
sub
cltd
fcoms
fdivr
js
jne
cld
subb
pop
add
out
leave
movsb
cld
mov
imul
push
add
test
sub
mov
loop
ficomps
jb
and
cwtl
adc
mov
lods
leave
aas
jbe
mov
rclb
cmpsl
in
dec
scas
push
pushf
xor
xchg
sub
push
popf
loopne
mov
repz
dec
xchg
pop
sahf
orb
xchg
leave
pop
xlat
mov
movsl
insb
ja
adc
out
mov
sbb
mov
leave
sahf
pop
sub
outsl
cmpsl
lea
pop
inc
adc
jo
sahf
shrb
mov
ficoml
jb
push
push
shll
test
fistl
mov
ds
pusha
fs
add
adcl
outsl
or
fimuls
pop
and
cmp
jo
cmpsb
lret
ljmp
jmp
adc
or
leave
cmp
mov
testl
pop
or
test
fs
subl
cmp
jae
movsb
je
push
inc
adcl
jg
jmp
aas
idiv
or
dec
sbb
add
loopne
lret
scas
sti
sub
pusha
mov
xchg
lds
inc
ret
shl
jge
sarb
cmp
rcrb
add
add
in
cli
aad
xchg
imul
sub
mov
mov
fisttpll
or
mov
aam
mov
inc
outsb
adc
loop
and
ja
mov
cmp
imul
leave
jmp
xor
jl
fs
das
mov
clc
decb
insl
jns
bsf
neg
adc
cmp
xchg
jnp
fistpll
fdiv
jmp
xlat
mov
pop
xor
lea
mov
and
push
test
add
imul
mov
ror
popa
cmp
in
sbb
cwtl
jno
mov
sub
jge
adc
aas
frstor
add
xchg
adc
dec
mov
jne
leave
cs
roll
sub
xchg
push
mov
push
pop
js
xor
pop
pop
dec
or
test
adc
dec
cmp
jo
pusha
or
dec
in
call
push
dec
repz
ucomiss
mov
hlt
scas
mov
sbb
loop
lea
int3
repnz
or
pop
mov
inc
pop
and
xor
jmp
sub
mov
js
push
add
mov
dec
movsl
roll
mov
mov
mov
rcl
xchg
stos
sub
lods
mov
mov
sub
or
mov
mov
fldt
push
popa
ja
pop
ja
and
loop
mov
xlat
shl
clc
fistpll
xor
sbb
pop
adc
fstps
outsb
lock
mov
ss
in
call
shrb
lret
pop
xchg
hlt
frstor
lret
jle
enter
jp
and
jg
xchg
or
and
jo
jo
fldcw
mov
mov
inc
mov
inc
mov
imulb
xor
dec
pop
pop
repnz
push
or
push
js
jl
jb
lret
bswap
ja
mov
call
dec
or
je
mov
gs
mov
cmpsb
xor
scas
jp
mov
lcall
and
insb
mov
lret
and
or
out
clc
jb
add
xchg
lahf
jbe
jns
cs
push
outsl
xchg
mov
xor
dec
cmp
mov
cmpsl
xchg
or
xor
stos
mov
xlat
int3
repnz
mov
fcmovu
popa
cmp
ja
mov
jg
scas
es
in
test
imul
push
mov
add
insb
out
mov
ja
push
jo
add
arpl
popa
sbb
gs
les
adc
mov
push
push
je
sar
xchg
add
das
jae
mov
push
jo
fs
test
or
lret
shl
pop
mov
xchg
sub
xor
push
enter
repz
and
cmp
int
subb
push
or
lock
jp
pushf
sbb
mov
xor
xor
jp
mov
pop
jle
packsswb
sub
fcmovnbe
sar
imul
rorl
jne
ret
leave
in
push
jne
xlat
ja
rcll
pop
scas
loop
rcrl
data16
sbb
mov
pusha
sbb
push
mov
testl
test
clc
xchg
sbb
push
loopne
sbb
push
and
movsl
movsl
push
fcmovnbe
jno
jae
jg
xor
push
xchg
jg
sub
xor
mulb
ds
cmp
sbb
xchg
adc
daa
mov
or
mov
or
icebp
movsb
cmp
dec
pushf
adc
adc
jmp
lahf
mov
cmova
xchg
mov
call
jge
lcall
xadd
ror
mov
test
cmpsb
popf
jno
add
daa
inc
xor
aad
xor
jae
test
mov
movsl
mov
inc
inc
mov
add
adc
push
and
ret
sar
rcrl
mov
adc
push
bound
mov
sbb
dec
mov
sbb
and
xchg
xchg
iret
popa
orb
in
mov
ss
fistpll
js
out
addr16
or
stos
sbb
push
je
or
flds
enter
pop
mov
repnz
or
adc
out
push
aas
inc
mov
jae
into
mov
pop
ss
or
pop
cmp
in
loopne
insb
adc
je
cmp
xlat
mov
add
push
cmpsb
and
xor
inc
loop
hlt
jg
loop
xlat
xor
jecxz
and
stos
mov
or
lods
lods
sbb
mov
nop
add
imul
out
fsubp
xor
push
push
ljmp
in
push
into
cmc
sub
int3
xor
pop
das
shrl
or
sub
pop
mov
or
mov
outsb
mov
inc
dec
dec
jmp
test
icebp
lcall
sbb
jg
insb
jmp
stc
push
add
sbb
fisubrl
xchg
lock
push
dec
lock
outsb
fwait
andb
mov
pushl
cmp
mov
into
out
sti
push
inc
nop
adc
sub
test
jg
les
dec
movsb
fisttpl
sub
scas
sahf
sub
mov
outsl
aaa
mov
sub
add
fdivr
xlat
pop
movsb
mov
lcall
loope
aad
inc
push
xchg
xor
mov
add
ret
push
sbb
or
mov
xchg
in
nop
cmc
cmp
add
cmp
rcll
loopne
push
ljmp
push
add
push
aam
pop
or
xchg
mov
loopne
hlt
aam
push
mov
sub
or
sarb
ds
and
rclb
sti
orb
hlt
cmpsb
mov
mov
push
mov
pop
mov
gs
mov
sbb
mov
push
xchg
ret
xchg
fwait
inc
mov
out
cmpl
stc
gs
inc
mov
aaa
repz
pop
movsb
cmpsb
add
negb
rcrl
imulb
cmp
inc
pusha
inc
out
sub
pusha
mov
insl
fcoms
inc
mov
je
or
sti
punpckhwd
pop
sbb
stc
je
pop
push
mov
and
mov
mov
popf
enter
sarb
add
clc
mov
lret
mov
add
jno
test
xchg
dec
adc
push
test
add
mov
push
data16
jg
out
and
fcomip
shl
orl
adc
aam
xchg
hlt
pop
ja
ja
xor
pushf
adc
negl
cmp
xlat
inc
lea
add
inc
push
pop
fwait
push
add
mov
js
sub
jl
pop
popf
cmpsb
mov
inc
xor
int
adc
add
pop
arpl
add
not
flds
add
in
pop
lods
dec
rcl
xchg
dec
mov
cmp
imul
or
cmp
sbb
mov
enter
fidivrs
and
and
das
fdivl
xchg
nop
mov
or
das
mov
sbb
xchg
fisttpll
stos
jmp
cmp
test
lcall
mov
mov
out
cli
mov
mov
fsts
cwtl
xor
xchg
das
mov
jle
push
pop
mov
add
mov
pop
sarl
cltd
inc
adc
popf
insl
pop
pop
mov
pop
icebp
cmp
into
xchg
enter
std
push
hlt
xor
in
mov
mov
into
fisttpll
dec
cmpsb
jmp
ljmp
mov
jle
jo
test
imul
iret
fcomip
test
ljmp
cmc
scas
mov
cmpsb
cwtl
fwait
sbb
sbb
int3
stos
cmc
sbb
in
mov
pop
stos
shl
ret
repz
icebp
jb
rolb
cmp
mov
enter
adc
mov
sub
mov
xchg
dec
and
sub
mov
sbb
pushf
add
cmp
leave
ror
fwait
aaa
pop
add
adc
push
add
lea
lahf
repnz
jnp,pt
mov
cltd
sbb
adc
xchg
int3
pop
or
xchg
mov
rclb
fwait
push
lds
ljmp
pop
inc
fdivp
xchg
pushf
call
adc
adc
cli
popa
add
mov
imul
imul
stc
xor
stc
jmp
xchg
in
mov
pop
repz
jmp
sub
test
jecxz
insl
js
sti
cwtl
pop
jbe
or
push
shlb
stos
add
jg
fs
inc
adc
pushf
mov
ss
test
je
mov
pop
bound
adc
insb
out
push
leave
inc
push
pusha
rcrb
sbb
and
jmp
lahf
sbb
int
cmp
jo
sbb
rcr
dec
push
xchg
xor
and
scas
aas
addr16
adc
jnp
jo
fsubrp
test
pusha
and
push
or
cmp
mov
mov
sbb
mov
ror
scas
int
mov
add
mov
cs
das
cmp
shlb
addr16
dec
outsb
and
sahf
stos
cwtl
mov
dec
push
outsb
jne
popl
pop
pop
lret
push
sbb
sbb
adc
lods
and
addr16
xor
arpl
nop
les
orl
sub
dec
pop
iret
inc
mov
addl
jns
lods
pusha
sub
cwtl
or
outsl
sahf
jne
xchg
cli
pop
mov
icebp
lods
cmp
int
arpl
aas
or
test
cmpsl
inc
xchg
and
das
stc
add
scas
mov
add
mov
mov
jae
cmc
sbb
rcrl
pop
mov
je
aad
pop
shr
loopne
loope
gs
sbb
enter
sbb
cmp
xlat
nop
or
mov
lds
and
stc
xchg
test
scas
add
xchg
mov
dec
mov
shll
dec
inc
jnp
bound
mov
imul
xchg
cwtl
mov
xor
and
movsl
fisttpll
into
lock
push
insb
rorb
insb
sar
call
inc
and
das
pop
test
sub
in
sbb
movsl
fnstcw
jnp
and
sub
dec
dec
mul
xor
cltd
cmp
xchg
cmp
pop
mov
adc
hlt
or
fsubp
dec
adc
pop
sub
ja
js
push
repnz
and
adc
in
and
in
test
adc
dec
push
shl
leave
jl
or
sub
dec
inc
pop
data16
push
mov
pop
lock
in
out
or
cmp
xchg
test
call
pop
jbe
inc
jp
and
and
pop
cmp
adc
xchg
in
adc
stos
stos
sti
push
xchg
lock
in
bound
pop
jp
pop
mov
flds
in
out
fstpl
pop
cld
aam
inc
shlb
cwtl
in
enter
incb
xchg
into
xor
jge
push
in
in
hlt
mov
sub
fisttpl
mov
xchg
shrl
arpl
movsl
int3
das
pop
sub
cli
jbe
cs
ja
push
sub
inc
arpl
shlb
sbb
test
cmp
mov
or
loope
shrl
jge
mov
ret
popf
das
mov
out
mov
stos
daa
fs
cmp
cmp
cmc
pop
fisubs
adc
jg
push
mov
out
mov
stc
or
mov
in
lret
hlt
xchg
ds
dec
xchg
test
sbb
xor
push
pop
loope
inc
pop
mov
imul
sbb
mov
out
adc
lahf
push
add
iret
fisubs
xor
mov
loope
jg
or
cmp
inc
nop
out
dec
call
or
dec
testl
sub
add
gs
sbb
cld
xlat
stos
jle
add
dec
shll
imul
mov
std
movsb
outsb
ret
push
and
xchg
neg
cltd
enter
push
ss
inc
stos
inc
push
sub
aad
jno
addr16
addr16
mov
cltd
or
lcall
push
roll
xchg
test
imul
jo
jb
ljmp
sbb
cmp
inc
mov
daa
mov
stos
in
mov
adc
icebp
jecxz
sub
xchg
in
pop
mov
gs
mov
leave
jle
addr16
sub
xor
scas
dec
adc
fcoms
mov
jns
testb
shll
repnz
cwtl
push
or
test
test
popf
inc
or
in
jbe
adc
dec
jae,pt
fbstp
int3
mov
aam
lods
add
or
sub
notb
xchg
mov
and
stos
and
sub
sti
in
rcrl
aad
push
enter
insl
adc
mov
fs
xchg
xchg
shll
insl
jg
sub
sub
cwtl
jmp
divb
mov
cli
adcb
push
into
bound
and
out
sbb
into
xor
inc
pop
gs
xor
fists
sbb
iret
jge
das
loop
das
js
fstl
dec
subl
leave
push
or
jne
cmp
adc
pop
lock
sub
add
mov
and
clc
adc
mov
and
mov
xchg
imul
mov
mov
cmp
inc
or
jae
sbb
jae
fstl
sub
lock
mov
aam
or
insl
jp
mov
loopne
ror
movsb
idivl
sub
push
jp
push
mov
lcall
jo
stos
push
xchg
mov
dec
mov
push
cmp
fcomps
inc
sbb
push
dec
jmp
mov
cmc
ljmp
test
inc
in
jp
arpl
add
test
push
ss
fs
enter
inc
xchg
stos
fdivs
jmp
test
pop
test
out
or
test
xchg
jmp
add
mov
adc
enter
sar
cmc
push
xchg
loopne
insl
movsl
xchg
jmp
xchg
int3
es
jns
adc
mov
fwait
out
aad
es
mov
cmpsb
push
std
clc
ret
lods
adc
mov
jg
das
mov
enter
sbb
sbb
mov
sub
sbb
cmp
add
idiv
pop
out
cmpsl
ds
sbbb
cmpl
adc
jle
sub
into
jle
jb
aas
push
arpl
xchg
xchg
xor
scas
lret
inc
icebp
xor
out
and
nop
rorl
lods
jns
jns
xchg
scas
call
pop
mov
cmc
call
pusha
cmp
add
xchg
jb
mov
xor
adcl
xchg
clc
push
neg
jmp
jbe
sub
mul
pop
push
jmp
mov
addr16
push
push
xchg
dec
ret
leave
sbb
out
jo
xor
push
cmc
add
inc
cwtl
pop
adc
sbb
mov
fsubl
mov
add
lock
cmc
iret
loope
inc
cmpsb
sbb
inc
mov
inc
jp
fwait
test
cmp
inc
jmp
jp
cltd
loop
mov
push
or
fcmovb
lock
scas
pavgw
rcrb
stos
lea
fwait
adc
mov
loopne
sub
dec
stos
or
or
mov
lcall
jge
xchg
stos
es
sahf
mov
in
in
daa
divl
cs
lods
cmp
aas
dec
cmp
aad
mov
jnp
dec
bound
mov
lret
pop
and
popa
addb
xor
insb
cltd
dec
or
inc
pop
ficoms
fstpl
ljmp
or
mov
pop
popf
xchg
fldcw
mov
dec
inc
ficoms
divl
mov
dec
movsb
jmp
sbb
push
aad
sub
mov
mov
jle
loopne
arpl
imul
aad
push
xor
mov
lahf
lret
push
fidivrl
push
add
add
notl
jb
jg
loope
sbb
int3
mov
iret
xor
inc
pop
push
fistl
ja
or
ret
f2xm1
cmpl
mov
mov
adcb
or
data16
lret
sub
or
xor
les
xchg
jg
xchg
iret
mov
js
push
mov
repnz
fidivl
loop
data16
shrl
ret
pop
jno
gs
inc
cmpsl
idiv
jecxz
js
outsl
and
or
mov
dec
push
inc
shrb
push
lret
mov
mov
movb
and
std
movsb
dec
lock
xchg
dec
and
inc
shlb
fwait
orl
mov
cmp
cmp
imul
mov
xchg
adc
xchg
inc
nop
shlb
inc
hlt
outsb
in
aad
sub
fstpl
xor
repnz
push
xor
in
jmp
jns
mov
scas
cmc
lea
mov
orb
pusha
aad
sbbb
fnstsw
or
xor
insl
or
mov
mov
pop
sbb
ja
loopne
xchg
mov
mov
popa
test
andb
adc
lds
dec
pop
in
rcr
pop
and
int3
fimuls
ljmp
outsb
push
cld
mov
mov
pop
ret
push
mov
xchg
mov
pushf
sbb
or
mov
test
nop
mov
imul
dec
pop
aas
mov
ljmp
daa
sub
xchg
mov
jmp
sti
cmp
or
xchg
mov
push
jmp
out
fstp
icebp
jbe
mov
cmp
jmp
int3
imul
pop
or
adc
lret
mov
enter
cmp
push
test
xchg
icebp
mov
mov
add
sub
enter
cmpl
enter
leave
dec
mov
pop
cmc
mov
ficoms
sbb
adc
and
push
shlb
xchg
push
fstpt
inc
adc
iret
scas
rorb
mulb
adc
dec
jnp
les
out
cwtl
sar
and
insb
pop
bound
add
imul
jnp
lea
mov
sub
mov
icebp
push
aaa
leave
data16
xchg
inc
mov
xchg
pop
out
popf
pop
dec
xorl
sti
test
inc
lds
sbb
sbb
xchg
in
rorl
xchg
ds
fsubrl
scas
lock
popa
es
leave
cmp
sarb
push
fnstcw
jmp
push
test
cmp
pop
xor
mov
lods
mov
lds
sub
mov
pushf
pop
xor
dec
dec
cli
ds
mov
enter
hlt
outsb
inc
jp
pop
aad
fnstsw
sahf
pop
or
mov
int
aam
sub
adc
lea
adc
add
xchg
stc
jge
sbb
cli
das
mov
cmc
push
dec
les
push
xchg
adc
data16
pusha
mov
aad
inc
aaa
push
cmc
jb
imul
hlt
test
ficoml
xchg
cmp
leave
ljmp
xchg
xor
addr16
faddl
add
out
add
sub
push
nop
and
jne
je
repnz
leave
shrb
xchg
jnp
fbld
mov
call
out
std
int
leave
je
adc
ds
bound
mov
sub
inc
aaa
dec
lahf
mov
sub
out
jno
test
xlat
loopne
cwtl
daa
in
bound
dec
das
pushf
add
xor
scas
xor
push
call
jb
ds
add
push
xor
fdivrs
xchg
dec
pop
or
in
movsl
inc
fldl
push
dec
out
inc
outsb
pop
cmpsb
in
sub
sub
addr16
or
out
out
dec
lds
idivb
daa
or
fsubs
add
sahf
mov
das
ds
or
je
ss
test
hlt
mov
in
insl
lds
inc
aaa
jb
sbb
loop
xchg
and
mov
and
je
decl
addr16
aaa
jae
mov
mov
mov
insb
test
jl
mov
popf
pop
out
mov
subl
push
jle
test
mov
mov
into
adc
das
jae
ss
mov
imul
enter
jno
repnz
jmp
iret
je
push
loope
aam
mov
or
inc
and
call
out
xchg
mov
mov
jo
dec
roll
adc
stos
mov
xor
andl
pop
or
stc
mov
pop
aas
mov
out
cs
sbb
xchg
ljmp
inc
fnsave
cmpsl
xor
mov
add
cli
and
nop
mov
into
adc
stos
je
jbe
cmp
jnp
jle
lock
andl
nopl
jmp
mov
in
fstpt
adcl
push
or
mov
lea
inc
loop
outsl
outsb
pop
daa
add
pushf
sbb
xchg
out
in
movsl
aam
hlt
or
std
sbb
push
mov
mov
or
sar
xchg
std
mov
ret
cmpsl
lcall
subl
jg
outsb
icebp
inc
mov
jbe
sub
pop
inc
mov
jnp
out
xor
divl
pop
aaa
test
add
add
xchg
sahf
jne
mov
adc
add
out
lods
and
popf
imul
xchg
push
cli
push
xor
mov
lret
sbb
or
cmp
hlt
sub
outsb
lods
inc
ret
mov
sub
add
pop
sbb
cmpsl
adc
push
mov
scas
inc
out
mov
or
xlat
adcb
es
mulb
sub
inc
inc
hlt
mov
cltd
pop
scas
in
fyl2xp1
outsb
stos
add
js
test
push
push
mov
mov
mov
test
inc
movsb
mov
pop
sub
pushf
jbe
jmp
aas
test
inc
jno
cmp
cmp
xchg
ret
fistpll
cmp
out
push
movsl
mov
mulb
loopne
addr16
and
jle
xchg
decl
jae
mov
inc
xchg
pop
nop
push
xlat
sbb
or
cld
pop
pop
leave
inc
xchg
je
inc
or
sbb
outsl
jp
test
jp
popa
push
inc
jp
jg
xor
sti
mov
or
cmpsl
mov
std
loop
test
insb
or
fstpl
or
jg
fiadds
rolb
mov
cmpsb
cmp
repz
insb
mov
adc
pop
movsb
push
jle
jnp
daa
push
pusha
or
adc
bound
call
mov
out
out
loop
ljmp
dec
and
cmp
frstor
add
and
in
arpl
mov
xor
dec
mov
outsb
out
jg
jmp
push
ret
cmp
movsb
hlt
mov
les
add
push
inc
xor
aad
and
pop
dec
lods
ja
push
es
push
ja
es
mov
push
orb
movsl
or
test
ds
mov
push
aaa
cltd
mov
push
xor
fsubrl
gs
scas
xchg
adc
mov
out
adc
jb
dec
adc
inc
cltd
flds
xor
adc
jmp
or
subl
push
pop
xorb
shr
test
xor
cmp
lahf
scas
mov
les
ret
jle
fcomi
or
mov
sub
imul
mov
push
xchg
mov
sahf
jno
and
mov
fisttpll
and
mov
adc
out
inc
cmp
xchg
push
shlb
in
or
pop
and
pop
inc
mov
mov
push
imul
sti
arpl
leave
gs
sbb
out
pop
add
jle
loope
out
xor
xlat
cs
aaa
movb
insl
mov
sub
adc
gs
mov
ret
repnz
lock
or
sahf
cs
xor
inc
or
xor
repz
js
pop
mov
jecxz
rolb
xchg
pop
and
ljmp
pop
sub
insl
mov
xchg
pop
dec
adc
jbe
lret
dec
inc
xor
adcl
dec
pop
in
and
hlt
es
pop
outsb
mov
in
stos
cmp
fst
cs
xlat
push
xchg
enter
pop
cwtl
cmpsl
out
cmc
int3
popf
push
mov
mov
stos
test
dec
adc
mov
stos
fists
and
pop
andb
and
lea
popf
pop
adc
movsb
addr16
movsb
xchg
mov
and
mov
add
outsl
shlb
clc
sub
lahf
js
imul
rclb
fcompl
sbb
pop
push
mov
dec
test
and
int3
int3
or
adc
fs
push
in
push
adc
or
daa
dec
xor
push
mov
push
sbb
jg
in
sbb
jno
aad
orl
out
sub
lods
mov
cmp
cmp
rcrb
pop
pop
cmc
xchg
xchg
call
push
sbb
aas
nop
cmc
or
xchg
cmp
bound
shl
cmp
dec
mov
sbb
in
shll
repz
or
fldl
sbb
push
in
jae
ds
pop
nop
lret
adc
lods
inc
and
xchg
arpl
sahf
jl
shll
inc
dec
add
mov
jne
or
jp
jae
cmp
loop
and
or
iret
test
push
icebp
pop
out
shrb
in
nop
jb
fidivl
pop
dec
aaa
rolb
mov
dec
fnstenv
push
stc
mov
cmc
fnsave
imul
loop
xor
push
and
shll
inc
xor
icebp
push
fidivl
outsb
popa
jnp
cmp
popa
add
sub
sbb
in
sbb
pop
or
xor
mov
call
pop
mov
in
mov
popf
stos
add
movd
dec
jmp
xchg
je
clc
movsb
pop
in
jns
notl
or
pop
pop
or
divb
push
mov
inc
test
jnp
int3
mov
mov
addr16
std
cmp
jge
pop
fmul
pop
inc
dec
std
cld
sahf
loopne
mov
aas
cmpsl
in
sbb
imul
push
add
call
add
dec
push
and
and
mov
mov
cld
gs
jnp
jl
add
push
push
dec
aad
nop
fsubrl
jbe
fs
push
xchg
jl
xor
mov
xchg
fcoml
inc
dec
dec
bound
in
sbb
push
push
inc
sbb
pop
and
xor
bound
push
push
sarb
mov
xchg
movsb
test
in
cld
fucomp
xor
lods
lahf
add
fs
sahf
imul
mov
inc
lds
dec
das
jmp
xor
push
and
ljmp
rcll
sbb
or
mov
mov
pop
xchg
cmc
or
cmp
cltd
cmp
pushf
or
jg
cmp
cmp
cld
push
add
xor
fimull
adcb
pop
cmp
pusha
btc
cmpsl
jmp
or
pusha
rorb
mov
mov
movsb
and
adc
jno
adc
filds
adcb
mov
pop
pop
bound
push
pop
adc
loop
jle
test
mov
mov
into
adc
sub
jo
mov
sub
mov
mov
inc
mov
cltd
jnp
jno
cld
jae
adc
clc
jae
mov
shr
xor
ror
jl
lret
dec
lock
cli
xchg
push
adc
mov
inc
stos
cmpsl
pop
mov
pop
jmp
mov
in
mov
sti
ss
pop
push
fadd
shl
arpl
pushf
out
add
mov
int
fisttpll
mov
rcr
cmp
jb
jmp
aad
adc
xchg
jo
out
in
jl
mov
sarl
xchg
fwait
mov
fbld
aas
repz
lods
mov
cmp
in
out
adc
add
in
push
sbb
push
imulb
aas
aas
cmc
addb
sti
addb
or
lea
data16
and
jbe
mov
push
inc
cmp
es
mov
inc
iret
push
jmp
add
inc
pop
adcl
pop
hlt
mov
test
loopne
fldt
cmpsl
pop
sub
hlt
aam
movsl
imull
or
jecxz
popf
xchg
xor
outsb
push
add
ljmp
jg
mov
pop
call
mov
adc
jg
dec
mov
and
sub
adc
push
mov
or
gs
in
jo
ljmp
jnp
add
cmpb
ss
pop
inc
iret
pop
out
pushf
das
add
push
xchg
push
mov
stos
in
push
mov
sub
push
aaa
shll
scas
mov
jl
mov
xchg
mov
mov
lahf
mov
clc
jecxz
int
xor
add
dec
lds
lods
mov
js
les
pop
insl
xlat
out
and
jge
dec
out
fists
jp
lods
sbb
jnp
lret
inc
xchg
mov
pop
addb
push
adc
cmp
stos
ja
cmp
enter
inc
bound
mov
pop
out
dec
test
pop
dec
push
or
cmpsb
dec
es
insl
clc
scas
fcomps
cmpb
daa
jbe
jnp
loope
mov
clc
inc
out
push
mov
push
mov
pop
mov
cmpsb
lret
arpl
cld
fadd
pop
sti
xchg
mov
enter
add
inc
pop
mov
dec
leave
stc
xor
mov
xchg
cmp
test
cmp
push
stos
mov
hlt
xchg
scas
mov
mov
sub
xchg
cltd
int
jo
add
test
mov
xchg
aaa
dec
mov
les
lods
mov
adc
inc
jp
sbbl
push
dec
pop
shrd
pushf
mov
aas
mov
in
dec
push
pop
shl
arpl
dec
andb
pop
aad
lods
fwait
pushf
ror
sbb
call
sti
jnp
cmpsl
xor
les
inc
pushf
sti
sti
stos
in
cwtl
mov
xorb
in
inc
mov
out
das
lahf
cld
jnp
mov
or
cli
sbb
xchg
loopne
ret
popf
mov
scas
adc
pop
lcall
push
divb
pop
rorb
or
das
hlt
outsl
dec
dec
mov
xchg
jmp
mov
data16
fmul
test
shll
fwait
cmpb
cmp
ss
push
cwtl
insb
push
fsubl
leave
jg
add
mov
xor
out
fistl
jnp
mov
in
fwait
mov
xchg
dec
xchg
cwtl
dec
sbb
dec
cmp
loope
cltd
lods
adc
aam
repz
pop
aad
stos
fcmovbe
cmp
mov
pop
cmp
or
xor
sti
sub
mov
pop
outsl
cli
scas
xchg
hlt
in
ret
lret
or
data16
jo
ss
adc
leave
scas
inc
int3
sbb
int
shlb
aad
shll
je
fimuls
outsl
sub
inc
xlat
xchg
jnp
enter
rclb
movsb
mov
mov
add
and
sbb
fists
insl
push
add
outsl
xor
push
sbbb
adc
xchg
fstps
adc
ds
and
mov
fs
aas
ja
out
dec
sub
lret
mov
cmpsb
andl
dec
fiaddl
lcall
imul
loopne
sub
arpl
jmp
int3
movsb
arpl
pop
repnz
mov
xchg
xchg
andb
mov
jg
cmp
test
sub
repz
fldenv
cmp
js
stc
scas
in
enter
maxps
jo
pop
dec
out
insl
dec
jg
jecxz
push
sub
test
sbb
add
lahf
push
xor
aam
inc
xchg
or
pop
push
push
shl
or
or
jb
pop
push
loopne
mov
pop
sub
mov
popa
mov
sbb
mov
ljmp
mov
inc
xor
jmp
lcall
sub
shll
cmp
ret
adc
sub
mov
xchg
jno
xchg
test
cmc
out
sub
and
pushf
dec
push
lcall
sbb
jecxz
cltd
sub
ja
sbb
fwait
adc
xchg
xorl
mov
lds
shll
clc
push
inc
xchg
push
arpl
es
bound
sub
cmc
orl
outsb
inc
mov
bound
dec
popa
mov
das
push
neg
dec
pop
mov
insl
out
ficoms
test
mov
dec
cwtl
ljmp
call
aam
sub
adc
or
leave
pop
cwtl
jo
mov
insb
ret
sbb
mov
jmp
pop
dec
push
mov
sahf
mov
push
or
xchg
ret
mov
or
sub
or
pop
jo
mov
mov
loope
pop
mov
fidivl
xor
sahf
sub
dec
and
in
fidivl
jge
mov
pop
repnz
mov
sahf
or
ror
mov
stc
pop
jle
add
dec
out
out
push
out
add
roll
pop
push
in
mov
xor
clc
jbe
cmp
ss
sub
or
and
cltd
inc
lea
cmp
sub
cld
pop
incl
push
cmp
dec
sbb
int
fcoms
push
ds
insb
pop
mov
std
cmp
and
xor
bound
jo
stc
lods
pop
jb
jge
adc
sub
add
inc
fsts
xchg
cld
xor
mov
sub
sbbl
sub
sbb
mov
rorl
adc
sahf
or
push
sbb
movsl
dec
or
dec
mov
dec
mov
jo
add
xchg
ret
cltd
jns
sahf
mov
push
xchg
mov
jmp
cmp
das
jns
pop
movsl
mov
push
incl
push
aad
les
loopne
cmp
imul
pusha
xor
xor
and
or
jge
faddl
inc
cmp
sarl
xor
aad
sbb
insl
test
cs
add
xchg
and
stos
outsl
loopne
dec
repnz
iret
in
je
imul
sub
popf
addr16
mov
aam
or
jl
jo
sahf
xchg
fbld
sub
jne
mov
clc
and
sbb
fsubrp
pushf
or
test
bound
or
fimull
xor
int
inc
pop
fnclex
dec
lret
mov
inc
pop
pushl
es
aad
adc
leave
xchg
lds
jg
inc
mov
insl
movsl
adc
out
jp
ss
aam
push
in
or
mov
int
adc
cmp
loop
jnp
xchg
xchg
sub
adc
ljmp
ja
jge
ret
cltd
dec
test
int
jl
xchg
mov
and
adc
daa
lods
push
push
in
loope
pusha
adc
jle
pop
and
out
dec
sbb
addb
shl
sti
movsb
iret
sahf
xor
insb
fsubl
push
mov
push
add
cmp
outsb
ljmp
sahf
cwtl
push
xor
aam
dec
xor
lahf
sti
mov
je
loop
mov
cmp
cmp
lret
div
movsb
test
and
enter
mov
inc
or
and
out
out
fdivl
fnsave
mov
les
mov
subb
inc
mov
pop
dec
into
sub
leave
js
ja
jno
sub
push
lods
sbb
fwait
dec
dec
push
test
lahf
sbb
pusha
dec
jle
cmc
mov
adc
lock
dec
movsb
sarb
push
xchg
sbb
popa
jo
hlt
push
sub
inc
mov
fsts
dec
xlat
dec
inc
jae
ja
xchg
fbstp
inc
loop
mov
add
stos
fs
or
xor
add
or
push
mov
out
pop
mov
repnz
outsb
jnp
pop
push
xor
inc
push
pop
dec
outsb
dec
push
dec
mov
xor
adc
mov
or
pop
cmpsl
xor
aas
adc
xor
sti
dec
pop
and
imul
adc
cmpsl
mov
jns
test
dec
push
ret
xchg
pop
out
cmp
pop
mov
addb
and
dec
test
test
hlt
inc
in
sub
add
pusha
adc
idiv
or
xor
xchg
loopne
jno
xor
mov
xchg
in
pop
or
orl
push
cmp
sti
daa
cmpsb
mov
cmp
push
test
aad
mov
mov
cmp
sbbb
imul
xor
call
scas
iret
test
movsl
push
add
mul
in
divl
sbb
xor
ret
popa
out
xchg
xchg
pop
fbld
pushf
xor
fmuls
adc
push
mov
xchg
push
xchg
push
pop
in
xchg
pusha
aas
xor
cmp
xchg
popf
and
and
mov
mov
adc
inc
stos
imul
loop
mov
das
rclb
and
jbe
aam
adc
xor
add
jg
xchg
mov
jp
lahf
jg
mov
arpl
xchg
shlb
push
mov
sbb
rcr
aas
scas
outsl
jge
jge
push
jbe
stos
dec
or
lods
xchg
mov
pop
stc
subl
cmp
addr16
adc
adc
insl
mov
push
push
hlt
dec
mov
add
cmp
stos
fidivrl
inc
loope
into
sbb
push
push
dec
shlb
in
jo
icebp
pop
out
stc
shlb
adc
xor
pop
ss
add
pushf
aaa
and
or
add
repnz
xchg
or
mov
mov
xchg
je
loopne
fisubs
shrb
rcll
push
dec
mov
push
sub
dec
outsl
mov
xchg
test
sub
xor
pop
hlt
pop
push
daa
cmpsb
jns
xchg
jae
inc
cmp
leave
adc
sbb
push
or
mov
daa
shlb
push
pop
insl
inc
dec
popa
shl
xor
imul
ret
dec
add
insb
lods
dec
shr
mov
mov
dec
notb
cwtl
push
mov
push
or
cmpb
pusha
in
es
dec
sbb
ja
les
icebp
fwait
push
add
lock
inc
mov
cmovns
push
js
movsb
rol
sbb
out
mov
or
or
out
es
daa
inc
mov
loop
mov
loopne
je
push
loopne
add
jge
call
adc
shl
push
fisttpll
test
leave
push
insb
clc
xchg
sbb
nop
lock
cld
stos
scas
mov
pop
popl
in
mov
sbb
ds
xchg
imul
jns
in
mov
push
mov
daa
jno
repnz
dec
dec
add
jno
jle
imul
jne
outsl
in
xlat
jae
cmp
movsl
faddl
add
movsb
rcrb
cltd
std
out
cmp
xor
adc
rcrl
adcl
dec
ret
out
ret
leave
mov
mov
lock
lods
xchg
in
icebp
xchg
cmp
shrl
mov
into
test
out
pop
sub
loope
repz
jo
xor
ret
mov
and
frstor
mov
push
or
inc
mov
clc
add
jae
jl
or
mov
mov
pop
add
add
mov
push
fisubrs
sbb
jmp
ljmp
and
dec
push
xchg
xor
push
hlt
imul
sub
loope
push
and
loope
pop
jle
jne
xor
mov
fisubl
adc
jg
or
sbb
insl
rcrl
stos
add
addl
popf
or
add
sub
aad
add
nop
clc
rcll
in
jnp
sbb
lock
jno
xchg
cmpsl
movsl
sub
and
pop
js
jo
inc
iret
cmp
ds
call
sti
out
in
mov
dec
ljmp
sarb
rcl
lods
insb
loope
and
addr16
and
out
push
push
xor
mov
sub
js
push
pop
iret
ret
lret
and
sti
rcl
sub
mov
bound
fldt
push
dec
xchg
xchg
xchg
rcl
in
jnp
cmpsb
call
in
push
je
or
daa
dec
push
sub
out
sarl
pop
imul
fbld
jno
sbb
faddl
mov
js
subb
dec
fsubs
negb
into
mov
dec
scas
fldt
dec
xor
cmovnp
or
cmp
mov
je
stos
ret
add
imul
sbb
mov
or
out
mov
adc
or
pop
xlat
fdivrl
shrb
sub
inc
mov
mov
add
sbb
mov
lods
pushf
pop
mov
cli
lcall
data16
outsl
and
in
icebp
dec
pop
mov
push
sbb
test
and
dec
sbb
xchg
add
xor
shll
push
sbb
and
xchg
ret
mov
push
cmpsl
push
into
imul
jl
das
inc
scas
aam
scas
cld
aad
mov
push
ret
jecxz,pn
mov
pop
sub
loopne
xchg
gs
outsl
sbb
cmp
ret
gs
sbb
add
test
scas
pop
data16
cmp
xchg
into
mov
js
sbb
xor
add
jo
push
push
push
add
lcall
andb
push
in
pop
repz
xchg
jbe
dec
popa
add
lahf
es
imul
mov
adc
dec
aaa
paddusb
in
add
es
sub
mov
inc
pop
mov
out
insb
push
add
mov
add
cmp
mov
cld
or
outsb
push
dec
push
mov
call
mov
aad
push
fdivp
cli
pushf
das
and
lods
jle
jmp
jge
int
jle
loopne
jno
mov
loop
pop
xchg
jle
xchg
loopne
lock
xchg
sub
bound
dec
mov
push
and
hlt
and
es
cltd
es
rcrb
push
mov
lods
and
lret
mov
rcrl
jg
sti
daa
and
stos
test
push
cld
dec
xchg
nop
popf
pushl
mov
jecxz
int3
sub
pop
push
xor
sbb
lret
les
jns
enter
jp
xor
clc
daa
pop
sbb
outsb
mov
ljmp
ret
xchg
movsl
in
popa
add
shrb
xchg
arpl
cltd
fcoml
pop
sub
pop
lods
add
insl
pop
push
mov
push
push
pmaddwd
cmpsb
push
dec
xchg
andl
jle
cs
inc
outsl
mov
call
cwtl
and
xchg
pop
fmuls
adc
sbbb
lods
test
or
xchg
stc
push
sahf
nop
pop
push
nop
add
lock
cmp
mov
adc
jmp
jne
mov
daa
idivb
or
fsubrs
adc
or
push
add
and
aam
sbb
adc
and
lahf
jne
mov
push
fwait
inc
das
mov
popa
incl
cmpsl
pop
shlb
rcr
shr
clc
jno
js
jo
flds
dec
dec
movsl
lods
mov
sahf
cld
pop
fisubrs
add
mov
cmp
sahf
mov
push
add
jl
mov
cmp
aaa
mov
ror
jo
push
jp
nop
cmp
and
lock
dec
lds
pop
fimull
sub
sub
gs
imul
iret
xor
push
sbb
dec
sbb
sub
lahf
ret
fidivrs
es
push
loope
sti
sub
vpminsw
cwtl
push
inc
out
cmp
xchg
in
sbbb
and
adc
mov
push
ret
cld
repnz
jl
xchg
xchg
dec
inc
out
lock
mov
add
fadds
xlat
in
leave
xor
movsb
dec
aam
inc
mov
repz
dec
dec
mov
and
loope
mov
xchg
pop
notb
ficomps
jbe
scas
jns
mov
repnz
push
add
js
and
jge
sbb
ret
imul
gs
dec
dec
mov
xchg
inc
jmp
mov
pop
inc
mov
cmpsb
cld
and
leave
jne
fucomip
and
mov
lcall
inc
das
mov
ss
xchg
gs
xor
mov
mov
clc
inc
fcmovb
dec
out
jg
dec
sarl
mov
lret
pop
push
dec
iret
rorl
cwtl
dec
in
mov
in
test
dec
jmp
ficompl
ret
nop
lods
mov
and
int
jns
jg
leave
div
and
push
lock
aam
aaa
int3
pop
and
sar
imul
sbb
sub
push
xchg
call
stos
cmp
rorl
sarb
cmp
jmp
xchg
clc
push
xchg
mov
pop
sbbl
inc
adc
cld
popf
xchg
sbb
xor
scas
nop
pop
push
mov
and
addr16
data16
push
int
dec
fidivs
outsl
adc
mov
push
pop
fisttpll
cmp
sbb
push
insl
add
adc
push
ror
test
loope
js
imul
data16
lock
xchg
push
push
rcrb
jo
sub
dec
and
lret
mov
repz
lock
and
xor
incb
cs
push
stc
fwait
in
mov
pusha
sti
rorb
and
mov
dec
int
fstpl
gs
leave
cmp
and
icebp
sub
dec
jbe
repz
mov
ljmp
dec
pop
mov
mov
and
xchg
out
mov
in
out
fwait
cmp
pushf
jno
aas
les
cwtl
fwait
daa
and
mov
int
adc
inc
in
dec
mov
mov
cmp
xor
js
std
cld
pop
cmpsl
jne
mov
lret
sbb
lahf
lret
hlt
xor
mov
add
not
mov
ror
cmc
mov
shrl
arpl
mov
pop
mov
and
push
adc
popf
lds
lock
add
outsb
mov
sub
sbb
out
test
daa
mov
xchg
pop
shrb
inc
sbb
pop
inc
fmuls
ja
rcrl
je
sbb
rol
call
leave
mov
or
push
or
mov
test
dec
shll
cmp
ror
sub
shll
lret
add
jo
div
lret
gs
mov
xlat
lcall
pop
mov
jo
dec
cltd
fnsave
sti
mov
xor
push
xor
ja
movb
and
fcoms
pop
dec
mov
mov
fmul
cwtl
dec
sahf
push
push
and
push
adc
in
rcl
xchg
fwait
pop
pop
cltd
test
mov
leave
push
nop
inc
pop
aad
inc
out
inc
cmp
repz
sub
outsl
jmp
shr
rorl
sbb
push
imul
pop
lds
lret
inc
in
lret
dec
sub
repz
dec
rcrl
jle
and
in
out
add
cli
push
add
insb
and
enter
xor
hlt
cld
dec
inc
mov
jae
sbb
sub
pusha
out
lcall
push
xor
inc
cmc
mov
sahf
dec
addl
adc
xchg
loope
mov
xchg
mov
pusha
mov
inc
lret
jmp
mov
inc
paddb
cmpsl
sti
inc
inc
adc
add
inc
aam
call
add
scas
fdivl
dec
and
push
sahf
jmp
xor
or
leave
cmp
aad
push
mov
pop
je
repz
xor
adc
outsb
shrl
or
jmp
and
lea
push
cmp
mov
lret
fidivl
cmpsl
and
or
outsb
xchg
imul
xchg
inc
in
fs
movlps
or
and
cli
sbbb
xor
fnstsw
out
loop
inc
into
xchg
or
xchg
lcall
or
fisubrl
and
xlat
inc
xchg
ds
xchg
js
sub
ret
lret
mov
das
outsl
stos
dec
jle
pop
addr16
sub
orb
xchg
fldt
dec
fucom
fstl
fcoml
fs
adc
and
inc
int
shrl
add
dec
stc
push
lods
sbb
mov
pop
aam
inc
adc
and
mov
stos
mov
adc
int
out
fdivrl
in
jge
or
sub
out
sbb
mov
jns
jp
imul
mov
stos
cltd
jecxz
cmpsl
inc
ret
or
push
int3
jo
mov
ret
imul
pop
sub
sbb
push
xchg
push
sbb
call
sub
mov
iret
dec
test
jmp
int
call
and
sbb
mov
lahf
push
add
ret
rcrl
ret
sub
dec
push
and
add
push
aad
lret
push
mov
sub
pop
pop
mov
sbb
adc
xchg
outsl
jno
and
nop
sbb
add
fs
aaa
fldt
and
shrb
add
andb
aas
jl
push
in
add
pop
test
loopne
fsubl
cmpsl
loope
dec
cmp
inc
lds
xchg
dec
scas
push
mov
cltd
xchg
cmp
xchg
xchg
ret
sbb
jl
inc
pop
out
xchg
pop
mov
inc
xchg
sub
pop
faddl
mov
dec
call
pop
repz
cli
sbbb
sarb
movsb
pushf
push
cmp
xor
aaa
dec
mov
popf
sbb
and
pop
je
cmpsl
test
xchg
imul
stc
jbe
js
enter
pop
aam
imul
rcl
stos
aad
push
xchg
mov
jecxz
add
push
or
jns
inc
lcall
pop
lret
and
sbb
fstpl
mov
pop
andl
jl
ljmp
push
aam
mov
jno
test
pop
xchg
mov
and
sub
xor
push
inc
cltd
pop
mov
imul
jmp
or
fs
push
inc
push
loopne
nop
fsubr
aam
in
lds
lods
xchg
cmpsl
fimull
cltd
mov
sub
push
mov
mov
sbb
lds
cmpsb
push
push
es
push
in
inc
or
jnp
mov
cmp
pop
inc
cmc
sub
fbstp
test
clc
nop
ret
idivl
adcb
mov
clc
mov
in
adc
jmp
xor
inc
dec
sub
jl
push
ljmp
mov
mov
fisubrl
aas
push
movsl
lret
fstpl
xor
dec
sub
push
repnz
adc
enter
mov
push
test
enter
xor
sub
mov
cmp
add
push
jb
test
popf
mov
pop
push
daa
mov
push
fdivrl
push
lds
lcall
loopne
lock
pop
fistpll
mov
xor
std
cmpsb
sub
inc
dec
xchg
adc
outsl
leave
fbld
mov
jnp
mov
nop
insl
sub
outsl
sub
push
push
fadd
out
sbb
jge
cmpsb
add
push
jge
inc
sub
cmpsb
jl
add
scas
sub
sbb
xchg
mov
xor
mov
ljmp
ljmp
push
incl
inc
inc
pushf
mov
xor
in
sti
inc
inc
cmp
xor
push
aaa
jecxz
mov
sub
cs
test
imul
insb
dec
loop
push
mov
incb
lods
jo
mov
hlt
and
push
movsl
mov
push
xor
in
adc
xor
jnp
imull
or
xor
mov
push
mulps
xlat
lds
addr16
sahf
lods
push
in
push
lods
pop
cmp
inc
mov
and
xor
xchg
mov
lock
mov
mov
pop
mov
pusha
lret
inc
xchg
aam
loopne
iret
mov
or
fs
pop
jl
adc
dec
fdiv
push
pop
imul
push
jns
movsb
mov
add
add
push
xchg
mov
icebp
pop
in
sbb
mov
jno
cmc
popa
popl
inc
adc
inc
inc
or
mov
xlat
adc
loopne
push
jne
fisubs
loop
ret
jb
jp
call
out
lcall
lcall
mov
cmp
adcl
push
ds
pop
mov
dec
sar
sub
mov
popa
pop
mulb
dec
fs
imul
js
dec
jecxz
insb
rorb
enter
fsincos
inc
sbb
ror
xlat
push
fistl
ficoms
lahf
xlat
or
in
dec
xchg
cmp
je
sub
sbbb
xor
sbb
mov
lods
call
or
in
and
xchg
and
jg
xchg
data16
lcall
loopne
dec
fcomps
inc
rcll
cmp
mov
push
xlat
ror
fisubs
pop
stc
sbb
jecxz
pop
arpl
xor
rcl
xor
fstpt
scas
and
in
or
xchg
insb
xchg
outsl
fsts
ljmp
mov
jecxz
sub
imulb
jne
and
andl
fsts
and
mov
repnz
cwtl
aas
test
les
mov
jmp
push
iret
or
scas
and
ret
ljmp
push
test
test
push
inc
sub
mov
bound
rcll
outsl
xor
adc
xchg
loop
push
insb
daa
cmpsb
stc
mov
xchg
aam
cmp
mov
ret
or
dec
loopne
out
ret
inc
fsubrl
mov
int
dec
jge
add
mov
dec
addr16
out
mov
out
mov
inc
push
jp
mov
das
xchg
inc
push
xchg
imul
addr16
insl
pop
iret
push
push
lret
jnp
adc
out
jns
fcoms
xor
les
or
add
adc
cbtw
outsb
mov
inc
out
leave
insb
dec
mov
arpl
cmp
push
add
inc
pop
popa
repnz
xor
inc
lods
dec
lahf
mov
add
cltd
pushf
fwait
repz
jo
and
cmp
mov
test
pop
stc
push
push
and
cmp
popf
pop
std
pop
shll
jg
and
cmpsl
call
testl
divb
cmp
fnstcw
mov
pop
jmp
xchg
stos
cli
pop
iret
pop
dec
push
push
shll
push
cwtl
or
mov
ficoms
or
fisubrs
out
jno
jbe
mov
stc
push
int
mov
test
pop
xchg
sub
cmp
add
cmp
mov
sbb
loopne
cmp
and
inc
and
cmp
mov
mov
jns
cmp
ds
add
push
addr16
inc
xchg
das
pop
mov
add
fldl
pusha
nop
mov
add
add
add
add
inc
jl
out
jge
add
mov
jae
mov
jge
cmc
call
ja
pushf
jbe
in
sub
mov
arpl
iret
xchg
scas
mov
adc
bound
jg
push
push
outsb
dec
xchg
testb
cmpb
mov
dec
jl
sbb
subl
enter
nop
add
pop
push
inc
cmp
and
repz
imul
inc
je
sti
ljmp
mov
xchg
jnp
bound
loop
and
jbe
jbe
shll
pop
add
adc
dec
pop
jb
jns
mov
test
mov
sbb
cs
xlat
in
jl
mov
cmp
lock
rcr
andb
bts
or
pop
addr16
xlat
lds
inc
fcompl
cmp
out
divl
pop
sbb
xor
inc
hlt
cmpsb
pop
or
outsb
lods
cmpsl
jmp
push
aaa
out
lcall
mov
dec
test
cmp
push
mov
mov
in
pop
push
lods
mov
das
pop
int
les
mov
push
fcmovnbe
movsl
or
mov
sbb
dec
stc
fidivrs
mov
lods
adcb
xchg
cwtl
nop
xor
lock
incl
fiaddl
push
test
pop
dec
inc
enter
shrl
sbbl
stc
shll
add
jne
and
into
jl
pusha
jl
mov
xchg
or
cmpsl
cmp
jnp
into
decb
cld
repz
push
clc
call
ss
sub
negb
roll
fbstp
in
jbe
or
fs
jg
xchg
pop
cmp
dec
syscall
fistl
or
testb
outsb
mov
aad
popf
mov
mov
aad
or
dec
movsb
mov
lods
mov
shlb
sub
test
lahf
sub
cltd
arpl
daa
into
add
je
pushf
jnp
fs
adc
cmp
imul
mov
aad
mov
cmpl
sti
and
movsb
imul
xor
out
insb
xchg
scas
and
aad
cmp
fnstcw
pop
or
icebp
xor
test
mov
int3
fldl2t
repz
push
hlt
jnp
mov
outsl
mov
test
push
ljmp
popa
xor
add
or
push
test
sbbl
push
stos
xlat
mov
cmp
and
fdiv
mov
ds
push
xor
out
pop
orb
mov
sub
mov
push
sub
mov
adcb
out
xlat
mov
inc
push
clc
xrstors
mov
add
xor
xor
mov
and
popa
lods
lds
repnz
scas
adc
push
xor
in
adc
or
push
icebp
arpl
lds
or
dec
sbb
dec
mov
jle
xor
leave
andl
inc
mov
jle
clc
xchg
in
popa
repz
fiaddl
mov
mov
inc
test
push
sub
or
inc
mov
mov
adc
mov
dec
pop
adc
mov
or
adc
mov
outsb
fstpl
mov
imul
sbb
mov
ss
sti
mov
repz
aad
loop
jl
mov
lahf
add
push
pop
iret
sub
mov
xchg
pop
mov
fidivl
dec
pusha
outsb
ss
lea
aaa
sbb
sbb
dec
ja
or
std
mov
das
jne
sbb
add
popa
jge
pushf
mov
aaa
mov
xchg
xor
shlb
es
mov
in
addr16
pop
sahf
add
mov
jb
int
leave
jp
gs
adc
or
sbb
nop
push
mov
leave
xchg
xor
xlat
or
dec
repnz
das
mov
les
mov
frstor
sbb
cmc
out
dec
push
inc
pusha
insb
lds
adc
pop
mov
out
lods
mov
add
jge
xor
sbb
fbld
adc
std
popf
push
stos
sahf
sbbb
jg
mov
mov
sti
mov
mov
or
mov
push
out
lea
lcall
cmp
xor
mov
rorb
pop
sub
cmpsb
outsl
in
xchg
into
cmp
or
cmp
cmpl
shll
and
pop
shl
pop
mov
mov
in
sub
scas
movsb
mov
insb
or
pop
jmp
daa
out
movsl
sub
xchg
lea
push
mov
xor
std
scas
mov
pop
mov
and
pop
in
jbe
call
or
or
lea
adc
imulb
dec
fs
sub
inc
mov
in
in
sub
mov
das
fnstsw
dec
xor
fstl
xor
push
mov
adc
int
mov
sub
xor
std
mov
sbb
test
mov
adc
pop
inc
pop
js
std
mov
jge
adc
scas
dec
adc
out
sbb
scas
in
clc
push
jle
lock
in
jp
pop
jle
or
sub
adc
push
jb
movsl
test
repnz
and
lods
lret
adc
out
xor
outsl
loope
or
jo
divb
jge
fimull
nop
lret
dec
sbb
pop
or
mov
es
mov
adc
push
pop
add
les
popf
dec
fdivrs
mov
lods
insl
leave
daa
adc
mov
pop
dec
pop
adc
pop
dec
stos
sbb
das
pop
and
inc
andb
out
daa
push
rorl
incb
mov
stos
mov
dec
cltd
gs
push
sub
out
add
popa
aaa
enter
xchg
jle
rcll
adc
popa
push
out
and
shlb
sahf
sub
xor
gs
and
pop
cmp
inc
xlat
psadbw
jl
lock
or
call
mov
add
jp
xchg
push
sub
lahf
mov
sub
lret
mov
or
icebp
and
dec
js
add
lods
leave
mov
xor
xchg
sbb
das
lock
cld
cld
rolb
imul
xchg
and
fdivrl
pop
add
adc
dec
imul
jae
stos
sub
shlb
or
pushaw
sahf
loope
xor
hlt
sub
jae
or
lock
pop
negb
cmp
add
popa
pop
mov
mov
movsl
or
push
add
jns
mov
ds
outsl
cmp
or
enter
pop
shl
xor
and
js
cld
jp
mov
xchg
jbe
adc
into
xchg
test
loopne
adc
cli
push
ja
and
inc
insb
mov
xchg
insl
cmp
hlt
lea
sbb
and
sahf
js
mov
xor
test
push
cmp
xchg
jnp
push
jmp
pusha
inc
jl
dec
outsb
sbb
loopne
loope
imul
pusha
js
repnz
pop
jae
mov
outsb
ss
call
sbb
and
sub
and
jno
xchg
shll
lds
jp
or
imul
out
or
cwtl
mov
popf
icebp
mov
push
test
gs
push
dec
pop
add
mov
cmp
mov
clc
test
mov
mov
sbb
inc
mov
fbld
add
mov
push
adc
push
roll
outsb
mov
adcb
popa
je
sbb
ret
movsl
mulb
add
lock
stc
cmp
xor
sti
sub
outsb
or
dec
pushf
paddw
jl
ja
adc
pop
mov
int3
jmp
lret
mov
stc
lds
gs
mov
movsb
insl
jb
test
inc
sbbl
repnz
jmp
inc
repz
pop
leave
call
and
inc
inc
insl
call
sysenter
dec
hlt
imul
adc
bound
dec
addl
ret
pop
icebp
into
enter
sub
add
sub
in
sub
int3
mov
repnz
scas
loopne,pt
xchg
sahf
jmp
sub
cwtl
mov
rol
aam
pusha
mov
ljmp
and
popa
pop
mov
xchg
dec
call
sbb
jnp
xor
pop
dec
jecxz
cld
sub
mov
into
push
mov
ja
cmpl
dec
and
cs
fmuls
es
or
mov
xor
push
test
into
mov
mov
jae
add
aam
xchg
pop
out
mov
clc
push
mov
or
push
inc
out
jecxz
push
sbb
insb
testb
in
inc
leave
rolb
xchg
jns
aad
addr16
mov
dec
lds
out
cmp
inc
lods
inc
pop
inc
mov
lahf
subl
rorl
scas
mov
rorb
mov
mov
movhps
pop
adc
negb
jmp
not
test
insl
jae
mov
xor
cli
sub
xchg
cmp
push
lock
pop
lds
xlat
ljmp
lea
das
ss
cmp
sub
jl
dec
in
pop
xor
mov
icebp
jmp
stos
mov
mov
or
jbe
or
jecxz
js
inc
mov
clc
test
sub
xchg
lcall
cmp
jno
mov
lret
add
sbb
push
or
xor
mov
addr16
mov
andl
pop
leave
scas
sbb
push
enter
aas
imul
out
xchg
std
insl
mov
imul
fiadds
ret
fwait
adcb
out
adc
xchg
jge
stos
adc
push
mov
xor
cmc
or
sbb
pop
jae
xchg
pop
pop
int
xor
popf
mov
jb
jg
pop
sbb
mov
inc
pushf
aaa
stos
jnp
pushf
push
mov
int
cmp
mov
ljmp
cmp
outsl
shll
in
push
dec
xchg
jnp
pushl
inc
jge
shlb
lret
je
daa
ret
xchg
pop
xor
jp
mov
dec
pop
jo
aas
cmpsb
or
xor
push
add
outsb
push
mov
push
or
mov
aaa
sub
cmp
xchg
ljmp
xor
inc
test
test
fnsave
fidivl
test
jecxz
leave
pop
mov
mov
and
pop
jno
bnd
mov
inc
cmpb
jle
xor
aam
sti
pop
push
in
imul
add
clc
popa
push
jp
fidivrl
push
xchg
xchg
jge
lods
jg
or
push
in
mov
add
xchg
inc
ficompl
xor
mov
test
mov
std
and
vmovsldup
pushf
inc
daa
inc
in
mov
sbb
xlat
or
outsl
jnp
movsb
mov
cmpsb
in
daa
outsb
push
xchg
xor
and
push
in
add
rorl
lock
gs
cmp
test
xchg
lds
cmpsb
mov
stc
xor
and
out
out
push
jmp
mov
lods
je
aas
xor
jnp
adc
imul
fchs
adc
inc
jecxz
jbe
cs
das
jmp
adcb
and
sub
test
adc
xor
lock
dec
push
insl
dec
aam
mov
or
ret
cmpsl
xor
inc
and
ss
adc
push
rorb
pop
outsl
sbb
push
xchg
sbb
cmc
pop
add
push
xor
out
int
out
movsl
sbb
pop
mov
ret
mov
pop
hlt
push
pop
dec
int3
test
xchg
fdivs
test
jo
mov
fldenv
clc
outsl
push
adc
les
adc
lahf
xchg
dec
mov
dec
repz
sbb
inc
arpl
sub
add
dec
das
imul
sbb
lods
mov
push
js
push
lea
cmp
lahf
sub
sbb
pop
xor
xor
fldt
xor
into
xlat
fidivs
lret
fsts
push
int
jp
test
in
out
ljmp
mov
xchg
add
mov
in
xchg
stc
aas
dec
insb
jno
shll
insb
in
fs
xor
xchg
pusha
addr16
push
adc
imul
loope
xchg
test
and
mov
dec
add
or
gs
pop
dec
fisttpl
xchg
mov
pushf
in
outsb
fcomps
inc
pop
cwtl
pop
test
pop
mov
mov
push
jae
ret
dec
in
cmp
js
std
inc
jl
mov
imul
jg
jmp
xor
lahf
fisttpl
sbb
push
inc
and
popa
and
push
xor
jbe
lds
rorl
lock
jecxz
xchg
inc
outsb
pop
mov
sarb
mov
or
pop
cmc
notl
pop
sub
mov
movsb
adc
mov
dec
pop
mov
loope
insb
js
hlt
test
mov
pushf
push
sub
xor
push
pop
imul
fbld
sub
lahf
xor
mov
arpl
push
push
and
lahf
mov
icebp
scas
je
jle
mov
push
push
int
sti
bound
or
inc
jne
cwtl
aaa
out
in
test
cwtl
fsubl
xorl
or
test
rclb
fimuls
mov
and
mov
fistps
mov
movsl
sub
push
push
adc
cmovp
jecxz
stos
or
jg
test
jbe
loop
add
andb
pop
xchg
popf
mov
mov
xchg
fsubs
jle
xor
into
jl
das
mov
push
inc
arpl
jo
fwait
testl
dec
xor
dec
cmpsl
imul
call
imul
test
out
test
add
pavgw
jbe
loope
pop
mov
sub
and
pop
mov
iret
jae
aam
shl
lcall
mov
and
rorb
movsb
loopne
inc
push
movsb
sbbl
cmp
leave
bound
repnz
cmpsb
mov
clc
push
mov
jns
cmp
add
call
lea
mov
enter
xchg
mov
scas
and
je
fdivs
jp
gs
jnp
xchg
or
hlt
insl
or
xchg
jbe
ret
xchg
add
out
popf
add
fisubrs
rcl
ret
sub
mov
inc
mov
adc
push
scas
mov
dec
fs
cmp
mov
cmp
daa
adc
int
mov
rcrb
movsb
fmull
daa
cmpsb
push
movsl
adc
add
xchg
popa
mov
sarl
movsb
scas
dec
test
jo
orl
cld
pop
inc
nopl
mov
pusha
loope
mov
mov
inc
and
daa
xchg
push
or
fnstsw
lea
mov
sarb
movsl
mov
int
or
pop
cmc
cwtl
sarb
and
push
mov
sbb
jge
aas
icebp
xlat
cmpsb
mov
arpl
std
or
dec
xchg
adc
dec
clc
sahf
lahf
sub
jecxz
cmpsb
scas
xchg
pop
ret
cmp
dec
out
rclb
and
imul
mov
movsl
aaa
sub
or
stos
gs
in
mov
dec
cwtl
adc
mov
les
subl
pusha
xchg
mov
mov
sbb
mov
loop
gs
fmuls
add
imul
and
dec
xor
pushf
faddp
imul
jp
inc
scas
dec
fstl
mov
jg,pt
scas
sti
inc
inc
fs
rcr
ret
aas
cld
xor
rorl
cltd
cmp
test
cmc
adc
lods
and
out
lods
and
das
fcoms
inc
jno
arpl
test
pop
dec
mov
into
push
mov
adc
push
sbb
or
inc
out
cwtl
cmp
adc
pushf
js
scas
mov
or
adc
sbb
pop
xchg
cltd
or
hlt
stos
or
addr16
faddl
repz
incb
xchg
ss
and
dec
gs
jmp
lock
mov
sbb
jb
sahf
lea
divl
out
negl
int3
sbb
lods
jg
xchg
xchg
push
mov
ljmp
test
mov
decb
hlt
jb
sbb
xor
xchg
sbb
jnp
push
das
push
sub
aam
fildl
xor
xchg
jae
rorl
imul
out
xor
pop
pop
in
cmpsl
bound
fsts
push
mov
clc
mov
insl
sub
and
jl
ds
mov
stc
xchg
jbe
mov
js
in
popf
cmp
xor
mov
xor
roll
aaa
mov
jbe
inc
test
jmp
mov
jge
or
mov
ljmp
adc
xchg
mov
hlt
repz
ret
lds
inc
addl
pop
insl
lods
inc
cmp
loopne
cmpsb
jg
es
xor
fists
adc
outsl
in
jns
insl
iret
hlt
adc
repz
mov
push
inc
scas
orl
mov
sbb
xchg
iret
mov
fidivrs
xchg
cld
pop
cld
sub
cli
ds
dec
mov
mov
add
cmp
sub
inc
or
int3
mov
out
pusha
out
cmp
stos
int
das
jle
xor
jno
lret
adcb
sub
or
outsl
xchg
icebp
es
mov
jo
cmpsb
addl
xchg
or
imul
push
rol
adc
xor
cltd
and
in
xor
fwait
sbb
inc
test
fnsave
mov
add
ret
mov
sbb
mov
iret
push
mov
xchg
fistps
in
jp
inc
aas
mov
push
mov
lcall
subb
cmp
pop
xchg
lcall
std
pop
jp
shl
popa
jnp
adc
and
clc
xchg
cmc
scas
enter
mov
cmp
scas
in
aad
mov
mov
xchg
subb
daa
sti
mov
pop
or
test
loope
arpl
movsl
sti
jns
mov
nop
movsb
rol
loope
cmp
mov
inc
mov
xor
je
popa
popa
jmp
jns
popa
adc
and
jl
loopne
mov
sarl
int
cld
sub
sti
cmp
outsb
cs
je
jmp
aam
dec
lahf
mov
out
xor
rcrl
sbbl
cli
mov
push
xlat
sub
jb
inc
dec
or
adc
pop
xor
mov
scas
movsl
stc
or
stc
jp
fdivrs
lods
add
pop
and
daa
adc
sub
addr16
mov
mov
pushf
xchg
cmp
jl
xor
pusha
pop
dec
rolb
sub
cmp
cmc
in
xlat
pop
fwait
clc
jnp
imul
add
cs
sub
jns
add
jg
mov
and
jecxz
push
dec
addr16
loop
sbb
adc
loopne
adc
jns
xchg
cmpsb
pop
sub
lahf
dec
mov
sub
push
fisttpll
mov
insb
mov
fnstenv
sbbl
scas
fadds
dec
cmp
and
sahf
mov
dec
stc
loopne
lcall
jae
push
jge
aam
jmp
mov
push
adc
adc
mov
mov
or
lds
jnp
dec
fistl
daa
dec
lahf
mov
aam
in
and
aad
push
lret
jecxz
nop
shlb
sub
mov
dec
outsl
add
dec
lahf
cmpsl
adc
sub
xchg
dec
ljmp
mov
ljmp
lret
out
scas
push
fldt
ja
and
inc
inc
jg
in
imul
lret
inc
or
lahf
shrb
pop
mov
aad
addl
cmp
iret
xlat
inc
fucom
dec
push
inc
and
lds
mov
sbb
mov
pop
xchg
popl
daa
loope
inc
mov
xlat
stos
xlat
xor
insl
cmpsl
cmp
fs
addr16
je
inc
push
cli
xchg
cmc
pop
xor
iret
mov
xor
xor
mov
dec
aad
push
dec
xchg
jne
pop
mov
je
jp
enter
cs
pop
pop
xor
test
sbb
testl
icebp
sub
jno
mov
idiv
fldt
sub
inc
dec
hlt
out
adc
and
icebp
or
rolb
test
mov
sub
cli
lods
xchg
xor
pusha
cld
negl
sub
xchg
clc
xchg
sub
test
insb
inc
xchg
jno
xchg
add
iret
hlt
mov
xchg
lods
push
sub
iret
movsl
aas
jns
or
dec
loope
shlb
mov
subb
push
mov
pusha
add
loop
aad
push
lock
inc
dec
scas
ret
mov
subl
xlat
icebp
loop
xorl
cmp
stos
and
inc
imul
cmc
push
fwait
imul
inc
sbb
add
jle
popa
lods
fmull
mov
mov
push
cwtl
sbb
sahf
mov
mov
pop
mov
mov
inc
adc
pop
push
xchg
add
mov
mov
popf
stos
scas
inc
aad
es
mov
les
xchg
mov
mov
fistpl
in
lahf
jg
fidivs
mov
stc
adc
sti
cmpsl
mov
mov
data16
lcall
adc
in
bound
divl
test
add
and
mov
mov
fs
loopne
sti
cmp
mov
mov
fcmovnb
int
mov
aaa
cmp
idivl
out
sbb
fwait
mov
int
test
add
decl
push
imul
push
xlat
pushw
mov
movsb
xchg
stos
adc
and
aad
in
ljmp
sub
sub
sbbl
cmpsb
sbb
push
mov
mov
push
push
nop
mov
mov
add
mov
cmp
jne
mov
ja
rcll
addb
adc
mov
jnp
les
popf
mov
out
stc
cmc
mov
dec
lock
gs
rcl
movsb
and
and
aas
mov
stos
and
inc
push
fbld
or
pop
aad
jle
mov
or
pop
aam
xor
test
movsl
in
ret
mov
dec
rorb
ret
cmp
mov
and
xchg
adc
hlt
repnz
mov
adc
fucom
out
and
fldcw
stos
adc
mov
adc
dec
pop
or
fadd
testl
jl
fs
inc
repnz
scas
add
adc
mov
inc
ret
addb
fwait
cli
std
shll
mov
cmpb
lods
ror
push
cmp
push
loopne
lret
and
cs
cmpsl
out
movsl
fdivr
testl
loopne
daa
dec
adc
lods
out
cmc
mov
cltd
mov
sbb
adc
test
inc
mov
subb
rolb
loop
sub
stc
jmp
inc
lods
jnp
lods
push
mov
gs
inc
sti
dec
jnp
js
push
clc
inc
push
inc
fcmovnbe
dec
xchg
fwait
jae
mov
jecxz
stos
mov
cmpsb
int3
std
fwait
les
add
xchg
cwtl
out
scas
cs
xor
xor
das
test
sbb
mov
into
dec
addr16
xlat
insb
cmp
jp
pushf
aas
je
lret
mov
mov
xchg
push
push
pop
xchg
fisttpll
enter
mov
inc
add
xor
add
bound
cmc
push
nop
mov
add
nop
js
pop
ret
les
dec
add
add
scas
inc
xor
mov
mov
loop
cmp
add
fwait
push
mov
xchg
loopne
inc
pop
fdivrs
sub
fstpl
in
mulb
mov
jae
xchg
test
pop
adc
inc
in
aam
push
mov
cmp
aad
mov
mov
xchg
cmp
fisttpl
aaa
loopne
clc
enter
mov
adc
sbb
insl
bound
pushf
cmp
insl
xlat
ret
addr16
pop
inc
mov
xlat
shlb
std
jnp
push
rcrl
mov
pop
or
mov
sub
test
xchg
aam
les
or
and
sbb
je
sbb
sbb
lea
pop
je
test
adc
jle
out
xor
mov
mov
test
jecxz
addr16
xchg
lahf
push
add
mov
data16
and
test
fsubrs
mov
add
cmp
jb
loope
mulb
out
shlb
fbstp
into
lods
jp
dec
ret
adcl
xchg
cld
xchg
pusha
cli
xorb
and
pop
hlt
mov
adc
mov
idivb
mov
out
mov
and
xchg
cld
pop
jmp
int
dec
jle
xor
repz
mov
insl
lea
jbe
ret
cli
xchg
xor
push
add
idivl
mov
sub
sbb
mov
arpl
ljmp
push
xchg
sbb
test
insb
out
xlat
addl
add
jno
es
lret
rorl
xchg
adc
mov
dec
xchg
mov
pop
cmp
repnz
aas
dec
mov
clc
mov
inc
inc
or
cltd
int3
enter
jbe
loopne
hlt
das
push
ja
enter
hlt
lds
or
call
mov
xor
cmpsb
sbb
sbb
mov
pop
loop
pop
sbb
inc
push
mov
add
mov
ds
addr16
dec
inc
rcrb
lret
mov
into
subb
push
sub
leave
out
std
jmp
add
mov
push
push
std
addr16
push
xchg
stc
int
mov
xor
cmp
sub
mov
jge
aas
inc
fidivrs
add
jo
aad
mov
sub
xchg
xchg
scas
ss
sub
arpl
xchg
jb
cld
fcmovbe
jmp
pop
adcl
cld
rorb
jge
add
cmp
loop
add
cs
pop
mov
mov
jg
jg
stc
cli
dec
xchg
ds
stos
jmp
jmp
sbb
mov
jge
mov
jl
xchg
mov
iret
lods
dec
or
inc
lret
inc
test
cltd
jb
shrl
sbb
mov
cwtl
iret
xchg
int3
xor
push
mov
dec
mov
xchg
mov
and
xchg
xor
push
and
dec
inc
sahf
sahf
dec
mov
add
fld
sub
dec
dec
mull
dec
or
js
sub
out
pop
push
and
and
or
nop
cmp
insb
aas
sub
xchg
or
nop
into
ret
lds
cwtl
push
int
inc
cmp
and
dec
stos
insb
stos
sahf
imul
shr
sbb
fstpt
outsl
add
sbb
xlat
in
addr16
sahf
xor
or
rcll
dec
mov
das
insb
cli
jns
leave
sub
and
mov
movq
push
mov
iret
cli
test
jnp
and
cmp
dec
cmp
sub
out
lret
incb
cmp
call
scas
insl
pusha
mov
scas
or
popa
dec
xorl
aaa
shll
jge
and
dec
pop
inc
sub
je
dec
mov
adc
xchg
dec
or
xchg
pmaddwd
arpl
xchg
sbb
notb
mov
mov
jg
mov
inc
rep
in
jb
fidivrs
and
jbe
push
rolb
push
addr16
xor
adc
xchg
and
add
imul
jo
out
xchg
loop
pusha
mov
cmp
loop
and
repz
aam
andb
rcl
mov
insb
push
add
fcoms
scas
outsl
jmp
xchg
movsb
lods
cmpsb
test
add
mov
push
add
jmp
jecxz
lret
and
cmp
clc
sbb
xor
nop
fwait
mov
aam
mulb
adc
fwait
inc
ljmp
adc
rcll
imul
jge
push
rclb
sub
or
sub
ret
cmp
outsl
push
xor
cli
mov
cmp
push
fwait
mov
sbb
lret
pushf
mov
xor
subl
pushf
and
pop
adc
jns
pusha
cmpsb
jne
jo
cli
mov
jo
or
loop
mov
and
cmp
enter
ss
add
xchg
sbb
call
mov
gs
cmp
or
inc
pushf
adc
add
and
mov
mov
hlt
cmp
or
data16
cwtl
jns
mov
push
add
push
in
mov
mov
mov
xchg
sbb
mov
cmp
dec
cmp
cmp
sbb
test
mov
or
push
sahf
xor
lods
cmp
mov
jge
js
fcoms
sti
daa
mov
push
mov
mov
imul
push
mov
sbb
ret
test
test
fdivrl
fistps
jecxz
jns
insl
aas
mulps
mov
ret
sub
fdivrs
sbb
aam
mov
or
sbb
sahf
cmp
add
sub
and
xsaves
xchg
shll
mov
sbb
pushf
or
sub
or
iret
sub
push
mov
mov
sub
mov
add
hlt
arpl
and
ficomps
sbb
jmp
add
mov
jge
outsl
cmpl
cli
lock
jae
dec
add
outsl
and
imul
sub
incl
xchg
cs
shll
icebp
stos
sub
xlat
dec
outsl
es
daa
jbe
sub
movsb
pop
mov
mov
repnz
mov
pop
jno
stos
fldt
dec
call
ror
mov
adc
fcmovnb
pushf
cwtl
inc
mov
aaa
pop
jno
test
ret
xchg
inc
push
sbb
sti
sbb
push
xchg
shlb
es
pop
sbb
std
inc
ljmp
jp
adc
sub
mov
loop
cs
mov
out
mov
cmpsl
fcmovu
cmp
fs
xchg
test
inc
sbb
cltd
lods
adc
sub
inc
cs
sbb
pop
jae
cmp
mov
decb
dec
lock
inc
in
sti
adc
mov
icebp
lods
mov
popf
fldt
sahf
sbb
jbe
jae
inc
stos
mov
sub
aad
mov
das
jae
cmp
inc
enter
int
je
jp
mov
nop
xlat
dec
mov
outsl
inc
int
sbb
sbb
adc
push
lret
out
adc
cmpsl
xchg
hlt
or
mov
cmp
adcl
cmp
cmpsl
imul
push
outsl
sbb
dec
xor
orps
inc
movsl
testl
cltd
pushf
insb
out
push
jns
fadds
mov
clc
out
adc
push
xor
xchg
pop
aas
fcomps
pop
xor
inc
dec
ss
sbb
ljmp
cmp
mov
xchg
ret
cld
bound
dec
inc
inc
sub
adc
rol
addb
sbb
bound
ljmp
or
subb
les
negl
sub
sbb
jmp
adc
sub
ret
jns
mov
mov
mov
sahf
addr16
pushf
subl
shrb
mov
cmp
mov
aam
jb
mov
loope
sti
pop
std
aaa
addb
inc
push
fisttpl
outsb
les
jbe
xorb
push
insb
testl
mov
pop
cmp
cmp
fisubrl
in
xchg
cmpsl
stos
mov
xchg
test
xchg
sub
fadds
test
gs
repz
push
ss
cmp
jno
mov
xor
shlb
mov
mov
mov
or
jnp
jmp
mov
sub
jnp
jmp
xchg
pop
add
xchg
out
arpl
mov
inc
shrb
lock
jae
jns
inc
sti
add
lock
lcall
and
mov
test
cmpl
movsl
dec
ret
js,pn
and
fildl
inc
imul
add
adc
pop
mov
mov
inc
repz
popa
push
icebp
adc
mov
movsb
shll
cltd
mov
fdivs
or
movsl
cmpsl
pop
dec
add
jmp
in
imul
subb
addr16
inc
sahf
cmpsb
xchg
push
or
cs
fildll
mov
rcrb
stos
clc
pop
in
push
inc
push
push
in
pop
mov
push
inc
mov
insb
dec
das
push
lret
lock
add
fs
sti
jno
mov
dec
jae
xor
push
adc
pop
andl
cld
mov
test
mov
add
mov
jge
js
xor
movsl
pop
out
adc
jo
lods
adc
in
in
repz
mov
sarl
push
shrl
inc
dec
add
push
bound
and
pop
mov
push
mov
mov
setge
cmc
sub
or
test
xchg
ret
jo
pop
in
rorb
cmc
dec
pop
cmp
sbb
jno
pop
cmc
adc
push
lea
call
sti
pop
popa
sbbb
imul
add
mov
push
cmp
dec
push
jecxz
fs
jge
cmc
out
pop
adc
subps
jle
or
pop
sub
jne
fld
mov
cmp
out
addr16
das
and
divb
xor
lahf
or
bound
js
xchg
lret
sub
or
and
lock
jo
std
js
lret
orb
leave
or
or
cmp
jo
jmp
ss
jecxz
stos
lret
xchg
jno
dec
pop
mov
sub
rcl
mov
out
shrl
aad
mov
ficompl
pushf
sbb
lods
mov
mov
mul
mov
int
cmp
sbb
stos
call
xchg
leave
pop
jno
rcll
pop
int
les
lods
popf
xor
inc
xlat
fimuls
lock
jno
fsubrs
enter
push
pop
mov
test
dec
and
and
mov
shlb
daa
push
bnd
loopne
dec
add
dec
fstl
push
movsl
xor
xchg
imul
pop
addr16
lds
dec
or
enter
push
aam
and
dec
leave
push
insl
das
pop
jecxz
dec
xor
pop
aas
mov
jb,pn
mov
test
repnz
mov
xor
das
adc
cs
inc
and
int3
cmp
and
jbe
fld
pop
add
les
les
fs
lahf
inc
xchg
dec
or
mov
inc
inc
cli
inc
cltd
mov
dec
dec
and
testl
in
or
sbb
cmp
sbbb
xchg
pop
lea
rcl
and
jle
adc
jecxz
inc
cs
cmc
cmpsb
pop
scas
dec
ja
arpl
or
clc
js
sbb
setp
test
jle
in
sbb
xor
or
int3
out
push
push
negl
mov
popf
movsb
xchg
stc
lods
mov
jp
test
jbe
outsl
imul
inc
lret
xchg
adc
popa
push
mov
cmp
mov
pop
push
les
sbb
nop
push
lret
push
jmp
lds
pop
fsubrs
ljmp
mov
cmp
flds
test
out
rorl
or
sbb
aas
outsb
inc
lahf
or
stos
inc
xchg
hlt
je
cmp
mov
xchg
and
add
jmp
out
and
lahf
jg
pop
pop
cmp
fcmovbe
and
push
cmpsl
jg
lret
and
sub
dec
popf
xor
imul
dec
fdivrp
inc
test
mov
out
and
add
push
sub
in
cmpsl
mov
lock
jge
mov
jmp
outsb
fucomi
lret
cmp
xor
add
jl,pt
push
mov
mov
mov
xchg
dec
ret
add
add
dec
sbb
sarl
mov
jecxz
mov
pop
test
ficompl
mov
pop
xor
mov
cmp
jecxz
sub
dec
and
xchg
add
sbb
push
mov
ret
inc
rcrb
pop
insb
cmp
iret
mov
icebp
daa
xor
shld
punpckhwd
loope
ret
sbb
outsb
fnstsw
pop
test
iret
rcrl
xor
loopne
sbb
add
mov
add
fadds
adc
mov
adc
add
adc
dec
in
scas
fs
xor
std
jbe
test
ficoms
push
sub
add
stc
xor
fimull
call
mov
cmp
scas
gs
dec
cmp
out
add
out
in
inc
cmc
fldt
in
int3
push
adc
mov
sub
xor
sti
mov
in
inc
add
out
divb
lret
clc
mov
dec
xor
or
mov
or
mov
add
mov
mov
data16
add
out
jmp
dec
cld
std
repz
cmc
in
lods
pop
mov
pop
fs
aam
stc
xor
out
insl
clc
mov
mov
imulb
stos
cmpb
adc
push
and
popf
xor
lods
mov
sti
je
cmp
call
iret
mov
sbb
int
pop
and
test
sub
loopne
fisttpl
in
push
pop
stos
jae
mov
mov
xor
inc
mov
xchg
mov
push
popa
outsb
mov
jns
push
xchg
adc
pop
mov
pop
adc
inc
hlt
scas
or
or
mov
aas
in
add
cld
sub
aaa
xor
inc
imul
mov
and
insl
ficoml
mov
les
aad
mov
lahf
test
mov
cmp
cmp
aaa
ss
ret
mov
lea
inc
add
inc
xchg
jle
out
sbb
push
in
jp
adc
sub
cmpsb
int
out
lock
in
mov
repz
les
jae
xchg
sub
sbb
inc
dec
adc
loopne
pop
in
loopne
lahf
add
push
aaa
call
outsb
add
cmp
inc
xchg
push
mov
decb
mov
das
addr16
cmpl
adc
xchg
push
scas
lret
push
lcall
mov
jle
inc
mov
out
xor
or
xorb
test
jmp
sahf
popf
cmp
pop
push
testb
sub
mov
cmp
dec
jo
cmp
xor
jno
pop
xchg
imull
push
aad
es
lods
bswap
in
mov
in
nop
adcb
adc
lret
loope
addl
mov
adc
xchg
sbb
push
in
pop
cmp
mov
or
les
int3
dec
mov
pushf
ljmp
push
inc
sbb
in
add
test
inc
stos
xor
ror
or
nop
push
ret
xchg
cli
ja
mov
jb
loopne
pop
daa
jbe
fbstp
sub
jmp
je
push
inc
xchg
outsb
xor
adc
stos
fwait
sbbl
mov
fistpl
dec
adc
xchg
mov
movsb
es
iret
adc
jae
out
xchg
jge
cmp
sbb
sub
pop
inc
mov
pop
mov
jns
pop
les
add
orb
cld
lock
jno
xchg
into
sub
test
xchg
div
xchg
rorb
pop
xchg
sarb
xchg
or
arpl
xor
sub
mov
jbe
jge,pn
daa
or
add
psubsb
stos
jmp
and
xchg
popf
movsl
scas
insb
sub
push
pop
mov
mov
in
jmp
scas
repnz
xor
ljmp
push
sub
in
das
cmpsb
xlat
mov
dec
scas
repnz
cmp
mov
add
testb
outsb
sahf
cmpsb
testb
dec
cltd
lods
rcrl
inc
js
lods
mov
test
lea
je
mov
aam
movsb
stos
and
aaa
dec
test
sbb
jg
movsl
jmp
sub
pop
stc
iret
lret
or
mov
cmp
or
cmpsl
call
jo
sub
testl
fnstsw
pop
loopne
pop
jns
test
or
ljmp
lcall
sub
jb
mov
sbb
or
fwait
cwtl
out
cmp
jns
fucomip
lret
stc
or
setg
or
cmc
mov
nop
and
gs
lods
jb
or
or
cmp
or
pop
mov
add
add
push
pop
xor
ljmp
jb
insl
cmc
jl
aaa
es
test
mov
jl
cltd
movsl
xor
jg
cmp
cld
orl
mov
lret
dec
js
ja
ds
add
pop
adc
test
sub
fnsave
xor
into
out
xchg
mul
xchg
es
mov
ljmp
pop
fstps
daa
xor
jl
adcb
mov
mov
out
dec
fs
fs
aaa
dec
popa
cmp
xchg
sbb
les
sbb
mov
scas
mov
mov
inc
ja
xchg
sbb
or
push
mov
jg
aaa
xor
mov
ffreep
and
je
mov
xchg
xchg
mulb
rcll
shl
ret
lcall
popa
xchg
sub
xchg
jg
mov
cmp
sahf
add
lret
pop
jl
pop
clc
pop
aad
lcall
adc
jbe
imul
pushf
int3
imul
jle
or
xor
inc
jb
fwait
js
xchg
add
cmp
arpl
xchg
mov
fstps
sub
mov
jge
aas
aas
lods
push
loopne
push
rorb
xor
stos
inc
sub
mov
and
pop
dec
and
or
aad
cmp
cmp
mov
movsl
dec
sub
and
jl
push
add
loopne,pt
fisubs
fs
add
cmp
fldt
inc
cltd
sub
pop
cmp
cltd
ljmp
push
popf
mov
ss
cmp
stos
mov
cmc
inc
add
hlt
aaa
lods
les
fwait
mov
adc
mov
mov
jne
aaa
ds
xchg
push
fcomps
xrelease
add
in
add
sbb
push
lea
xchg
pop
cld
es
dec
mov
xor
andb
in
addr16
movsl
and
jno
mov
pusha
aam
dec
jbe
push
scas
push
hlt
out
add
ret
pop
ds
cld
adc
loop
ja
xor
imul
xchg
xor
or
mov
mov
push
cs
or
mov
ud0
fildl
adc
inc
adc
pop
enter
mov
pop
xor
mov
cltd
stos
push
mov
lods
mov
jge
nop
push
fidivs
popa
jecxz
push
test
xor
mov
inc
xor
cmp
cltd
les
sub
scas
loope
ret
out
faddl
or
jecxz
pop
outsb
fnstsw
cld
and
ret
popa
dec
stc
repnz
movsl
fsts
int3
jno
aam
jb
outsb
pop
pusha
push
add
out
sbbb
sub
pop
ljmp
jmp
jnp
jno
mov
clc
mov
mov
int3
xchg
dec
mov
mov
jge
cmp
negl
jmp
add
or
test
xlat
bound
leave
push
pop
xlat
or
inc
xchg
inc
out
sbbl
sub
cmp
push
stc
enter
ljmp
aaa
mov
adc
das
cmp
stos
out
rorb
mov
or
in
xchg
mov
inc
or
scas
fsubl
lret
push
jl
dec
push
jns
cmpb
lcall
mov
imul
outsl
sahf
inc
cli
lods
or
xor
xchg
cmpsb
adc
je,pn
out
xchg
je
pusha
mov
cwtl
sub
rclb
fisubl
aas
cs
loopne
fiadds
mov
shlb
movsb
lret
xchg
jle
xlat
mov
mov
and
add
sub
fsubl
cwtl
enter
dec
push
enter
jmp
lock
mov
cwtl
add
shlb
std
ficoml
or
dec
daa
jl
scas
and
fimuls
repz
and
pop
popa
adc
mov
out
mov
mov
or
lahf
je
data16
into
mov
call
mov
push
lret
xchg
sbb
les
mov
and
push
arpl
adc
nop
lcall
outsb
push
mov
add
insb
les
sbb
sbbb
inc
aas
push
mov
jne
dec
seta
dec
add
rep
ljmp
adc
or
pop
jo
xchg
or
xchg
lods
sub
mov
cli
dec
icebp
inc
fldenv
sub
jns
fildl
xchg
roll
bound
cli
dec
jge
cmp
sub
pop
and
jno
dec
push
lods
push
dec
dec
fisubrs
or
xor
and
mov
fwait
sahf
inc
sbb
push
cld
mov
leave
insb
xchg
push
aam
mov
sbb
jg
cwtl
sub
mov
sbb
push
push
or
cwtl
ret
je
mov
lcall
add
xchg
xor
imul
jge
xchg
shll
add
xor
insl
sarb
jns
pop
fsubrl
jae
sti
mov
jmp
pop
jg
pushf
and
xchg
jl
mov
xor
test
push
jb
cmc
jnp
cmpsl
lahf
jle
xchg
inc
and
stos
mov
in
test
sub
popf
sbb
in
cltd
loopne
subl
addr16
cmpsb
push
ret
or
sbb
scas
or
pop
or
cmc
pop
pop
pop
xchg
inc
or
fsubrp
repz
xchg
push
pextrw
pushf
mov
fildll
outsl
jns
inc
shlb
push
mov
xchg
stc
sbb
mov
lahf
loope
jmp
imul
fldl
outsl
xchg
lods
inc
cmp
sbb
loop
add
sub
jne
xor
add
dec
imul
shl
mov
dec
mov
xchg
insl
push
or
pop
and
daa
mov
add
or
and
int3
stos
inc
xlat
sub
xchg
mov
xchg
int
xlat
inc
iret
mov
mull
xor
pop
xlat
enter
push
enter
dec
sbb
insl
clc
or
sbb
jae
mov
lods
clc
adc
std
pop
sub
es
fcmove
sbb
sar
xchg
and
orl
loop
cmpsb
cmp
xchg
and
clc
lea
mov
movsb
jmp
int3
sbb
jl
scas
idiv
insl
movsb
imul
sbb
test
arpl
or
pop
notb
fcoms
movsl
dec
push
les
ss
in
mov
je
fnstsw
adc
leave
inc
mov
arpl
mov
mov
push
add
jno
pop
in
cwtl
mov
in
repz
bound
icebp
shll
push
inc
cli
cmpsl
in
test
cmpl
in
shll
es
mov
mov
jns
xchg
jo
test
push
dec
push
adc
push
jmp
mov
repz
mov
mov
shll
cmpsl
sub
push
or
popf
jb,pt
ja
scas
lret
stc
mov
push
mov
and
insb
fs
sbb
or
ret
addr16
xor
test
dec
and
push
iret
jle
or
mov
sbb
in
in
sub
sbb
mov
push
pop
cmp
pop
jo
lods
push
pop
fcoml
mov
test
mov
push
xor
call
int
inc
lea
mov
mov
xor
mov
or
lret
lods
mov
push
adc
pop
mov
daa
in
sub
aad
mov
sub
ret
xchg
and
or
mov
std
mov
test
lret
push
mov
clc
pushf
push
pusha
dec
pop
fcmove
mov
adcb
inc
fstl
addb
add
pop
jl
popf
sbb
jo
stos
aad
xchg
sub
ds
lea
out
repnz
cmp
adc
mov
outsb
arpl
mov
add
push
shl
jno
sub
icebp
aas
xor
inc
rolb
out
jno
mov
dec
imul
fldl
aas
jns
push
xchg
ljmp
psraw
into
decb
fbstp
arpl
lods
nop
addl
es
jg
jp
es
and
sbb
gs
jl
mov
stos
mov
push
call
icebp
arpl
push
jo
int3
inc
out
fwait
cmp
insb
push
mov
cmp
jecxz
mov
jbe
jne
into
call
daa
adc
adc
pop
scas
adc
lret
fucomip
mov
sub
lahf
fdivs
push
sub
add
js
jae
test
fwait
pop
xor
jl
xor
loope
and
or
ds
and
inc
xor
xchg
ds
imul
push
adc
push
jecxz
or
ljmp
lcall
dec
neg
or
mov
xchg
push
dec
mov
adc
imul
cmp
xchg
lea
insb
mov
lock
imul
inc
push
xchg
mov
xor
and
pop
adc
clc
pushf
inc
in
cmpsb
inc
mov
js
test
xlat
and
pop
jbe
xor
adc
fcoml
testb
lret
dec
jmp
popa
int3
fsts
test
xlat
pop
cmpsl
xor
xchg
scas
repz
mov
or
aad
and
pop
xor
fsub
pop
adc
call
popf
cmp
sub
jecxz
inc
je
sub
mov
mov
in
mov
jae
lock
test
add
adcb
data16
pop
mov
xor
pusha
sbb
hlt
std
ret
inc
shufps
es
pusha
leave
cmc
mov
mov
gs
xchg
sub
roll
pop
call
loop
mov
fcompl
push
ja
cmp
push
jmp
and
mov
adc
shll
les
movsb
adc
jmp
mov
jnp
call
xchg
ss
aas
xchg
mov
and
fiaddl
xor
mov
rcrb
shrb
aad
push
test
jb
pop
rclb
xchg
or
repnz
xchg
ja
pop
push
fidivrs
adc
sbb
clc
sbb
dec
mov
stc
jne
add
cs
popa
aad
test
dec
cmc
cmp
jae
cmpsb
fistpll
pusha
fisubs
loop
jno
sbb
aaa
lock
arpl
mov
xchg
pop
pop
dec
test
cmp
push
int3
adc
lcall
adc
es
push
xor
pop
test
aam
and
sti
in
leave
cmp
mov
call
in
scas
movsb
repnz
cmp
aad
cltd
xor
xchg
mov
mov
ljmpw
fistl
ret
and
aaa
popf
and
fimull
jle
pop
cwtl
push
mov
repnz
das
cmp
cmp
loopne
or
or
fistpll
aas
sbb
out
jg
xor
ss
sub
sbb
stc
inc
mov
xchg
lods
sub
fidivs
bound
daa
sbb
adc
push
mov
enter
mov
or
jnp
in
mov
xor
jle
out
xchg
mul
fistpl
movsb
jmp
mov
xchg
ja
xor
mov
or
data16
loop
dec
sbb
lea
and
jg
negb
cmp
inc
inc
mov
xchg
insl
movsb
sbb
imul
aas
mov
mov
mov
or
fisttps
jb
je
mov
mov
inc
adc
add
sahf
push
mov
pop
mov
add
mov
mov
inc
cmpsl
sahf
lcall
lods
and
ret
pop
jnp
sti
mov
loopne
mov
std
xorl
push
pop
mov
jmp
cli
call
bound
inc
jb
sub
mul
mov
cwtl
nop
jb
mov
add
push
cmp
and
adc
arpl
lret
sub
sub
cmpsb
aas
sbb
mov
sub
jg
sbb
mov
xor
sbb
push
scas
cmp
mov
mov
sbb
das
mov
pop
mov
in
mov
in
add
mov
sbb
push
pusha
rclb
fidivrl
je
sbb
bound
sub
ret
adc
subl
lds
gs
push
movsb
and
xchg
mov
xor
xchg
push
inc
sbb
cmp
sbb
aaa
or
and
pcmpeqb
cmp
pop
std
movsb
outsl
fadd
pushf
in
cmp
pushw
sub
das
push
adc
sti
ret
cli
cs
dec
or
es
rcrb
sub
mov
rclb
inc
popf
loope
push
jl
sbb
ljmp
and
mov
stc
in
xchg
addb
iret
dec
pop
lahf
cmp
jp
xor
mov
test
xor
cmp
fimull
mov
add
int
sbb
cmc
test
lahf
xor
fwait
or
or
dec
pop
sbb
out
es
cmp
adc
add
lcall
pop
xchg
and
sbb
aaa
loop
jg
sbb
cmc
aaa
pop
mov
cmc
imul
sbb
mov
lret
adc
test
shll
jnp
and
enter
popa
aaa
stos
push
aaa
call
ret
sbb
push
movsl
outsl
fiadds
pushf
mov
lcall
das
test
rclb
pop
subb
push
inc
out
adc
stos
cmp
divl
test
shll
testb
cli
xchg
jecxz
xor
sub
dec
repz
mov
mov
dec
fisttpl
repnz
outsl
jmp
fldt
lret
xchg
dec
scas
pop
xchg
jge
dec
gs
push
fmuls
inc
jbe
mov
adc
movsb
insl
lds
cwtl
adc
fs
mov
push
xchg
jge
push
notl
xchg
loop
inc
test
sub
inc
stos
pusha
xchg
rorl
and
mov
subl
pop
popa
rorl
dec
es
mov
jno
add
ftst
lea
cmpsl
lcall
and
or
insl
xor
mov
xor
xlat
xchg
jae
push
jle
mov
jno
push
or
add
test
nop
mov
pushf
std
cld
sti
es
or
aam
fld
push
push
xor
xor
push
dec
repz
popa
adc
dec
xor
or
cld
arpl
rcrb
jns
and
rolb
outsb
test
mov
imul
mov
sub
rorl
insl
aam
adcb
mov
lcall
xchg
adc
mov
adc
xchg
scas
hlt
psubusb
pop
adc
inc
repz
ja
pop
mov
push
mov
xchg
addr16
dec
lret
cs
push
inc
lret
pop
aad
icebp
decb
popf
scas
popf
push
test
xor
inc
ja
gs
xchg
xchg
cmc
pop
push
xchg
or
mov
inc
dec
loope
push
pop
pusha
pop
dec
das
jo
sbb
fstpl
mov
inc
cmp
mov
pop
movsl
fisubl
addr16
dec
cld
lds
adcl
fdivs
and
mov
pop
inc
arpl
push
xchg
dec
repz
repz
ss
xchg
lods
xor
dec
out
iret
imul
adc
or
out
aam
and
decb
xchg
les
push
in
mov
inc
mov
cmpsl
push
xor
xchg
lcall
loopne
and
push
roll
xchg
push
ljmp
mov
or
push
fldl
inc
lret
jne
dec
mov
xchg
pushf
lret
pop
cmpsb
in
mov
mov
mov
lret
loop
mov
fstpl
jmp
pop
push
mov
arpl
cmpsl
adc
bound
mov
add
jg
fs
bound
mov
test
cmpsb
idivb
or
test
adc
cmp
lret
xor
mov
je
std
jno
jmp
cmp
cwtl
mov
xor
ljmp
sub
popa
movsl
and
iret
call
and
scas
pop
mov
bound
outsb
outsb
mov
idivb
loop
mov
inc
inc
je
mov
cltd
lds
mov
fistps
xchg
jl
adc
push
jmp
lcall
xchg
jne
lds
xchg
dec
dec
stos
sub
arpl
mov
repnz
mov
imul
pop
out
dec
into
mov
sbb
jb
popf
popf
mov
lcall
test
cmp
cmp
pushl
sbb
adc
xchg
push
mov
jecxz
push
sbb
addr16
push
lret
push
je
mov
addr16
loopne
and
mov
mov
pop
sub
aas
rolb
xchg
xchg
ds
xchg
ss
jmp
outsb
and
lds
mov
xor
lcall
ret
aam
cli
sahf
lods
fwait
mov
sti
sub
xchg
push
cwtl
rolb
push
and
add
hlt
push
adc
cwtl
in
push
adc
pop
inc
inc
loopne
pop
xchg
xchg
repnz
jecxz
enter
pop
xor
pop
xor
jns
sub
push
jp
mov
xchg
pushf
rorl
mov
xchg
repz
call
mov
mov
int3
jmp
mov
xor
notb
gs
mov
call
scas
std
mov
pushf
mov
mov
xchg
pop
stos
xchg
popf
mov
jbe
sbb
xchg
loope
addb
jle
lret
js
add
push
xchg
mov
jne
mov
xchg
sahf
aaa
addr16
dec
xchg
mov
inc
pushf
sbb
xor
les
lods
xchg
and
jo
or
loopne
lds
dec
call
inc
test
lods
add
push
shl
and
mov
lcall
push
inc
loopne
ret
add
scas
lods
hlt
loop
adc
sub
sub
in
sub
xor
adcb
pop
adcb
ror
ds
dec
sarl
aas
push
insl
mov
or
mov
lds
and
inc
cmp
adc
adc
lea
mov
jecxz
dec
mov
es
popa
sbb
stc
mov
cmp
fwait
inc
adc
lcall
push
movsl
std
pop
out
cmp
pop
mov
movsl
mov
scas
lock
test
dec
adc
cld
mov
dec
push
mov
ffreep
fwait
mov
mov
mov
icebp
inc
adc
xchg
push
jecxz
push
cltd
adc
dec
pop
and
dec
dec
and
lahf
cmpsl
out
xchg
inc
jns
mov
scas
dec
mov
mov
adc
lahf
mov
dec
in
pop
out
pop
test
mov
mov
sahf
cmp
adc
cli
jb
pop
jbe
imul
ffree
add
jecxz
cltd
sbb
imul
test
test
mov
fsubs
cmp
sub
mov
ja
mov
jbe
pop
jl
test
ficomps
mov
dec
adc
xchg
and
lock
sub
out
ljmp
dec
lcall
adc
xlat
stc
adc
cs
lods
insl
fyl2x
xlat
push
outsl
mov
xorl
fildll
add
mov
decb
daa
jnp
popa
outsl
sti
pop
std
data16
in
pop
lret
cltd
shr
mov
repz
imul
pop
pusha
inc
fiaddl
inc
mov
data16
mov
movsl
les
data16
sbb
cvttps2pi
repnz
fadds
xor
movsb
out
sub
outsl
jnp
jl
jp
xor
pusha
lret
shlb
jae
sub
js
push
adc
cmp
or
xchg
icebp
cmp
testl
jns
push
adc
cmpsb
add
mov
sahf
mov
inc
sub
fstl
push
jo
rorl
cwtl
shll
push
mov
std
sahf
stos
pop
cld
dec
pop
fildl
stc
jnp
cltd
push
inc
adc
xchg
add
lcall
aas
mov
pop
add
sbb
outsb
mov
icebp
shrl
mov
js
mov
xchg
cmp
pop
outsb
mov
add
cmp
popf
jmp
pusha
subl
bound
arpl
xor
sub
xchg
ljmp
iret
dec
jne
dec
xchg
add
rorb
aaa
insl
or
and
fcmove
dec
ss
add
fcmovnu
sub
sahf
shl
mov
bnd
push
or
adc
repz
mov
pop
push
sub
inc
arpl
call
sbb
pop
es
sub
xor
das
mov
adc
mov
aas
add
jmp
leave
push
mov
jg
repnz
push
fldz
pushf
imul
mov
sub
test
dec
jecxz
aam
sub
xor
add
sub
outsb
xchg
fcmovnu
sub
pop
and
lock
push
push
lock
movsb
adc
idiv
ficomps
cmp
nop
loope
mov
into
sub
dec
push
lcall
cvtps2pd
fidivrl
cld
jecxz
inc
loop
pop
mov
adc
sbb
stc
adc
jae
pop
mov
pop
imul
and
insl
cmpsl
sub
push
or
sub
fstl
out
xchg
cs
cmc
mov
nop
stos
dec
out
xchg
adc
rolb
xor
xchg
add
mov
addb
loope
mov
pop
xorb
imul
ret
jle
pop
in
adc
sub
cmp
js
scas
mov
or
das
lret
pop
out
movhps
shlb
fcmovbe
xchg
int3
or
dec
mov
sub
xchg
imul
lret
or
pop
pop
jl
es
stos
cmpsb
leave
jnp
shl
nop
enter
push
ds
push
or
imul
jp
rcr
inc
lock
in
cld
mov
and
mov
daa
pusha
test
push
ror
pusha
and
fstps
lcall
mov
out
sbb
lods
jp
pop
dec
dec
sub
and
icebp
or
clc
bound
rorb
mov
mov
mov
cs
sti
ljmp
xlat
xor
pop
daa
lea
dec
xchg
pop
in
mov
cs
add
jp
mov
mov
loope
cmc
xor
es
stc
loopne
bswap
shl
addl
movsl
cld
cld
dec
ljmp
je
mov
in
std
jne
iret
cmp
orb
push
incb
push
push
sarl
sbb
pop
pop
call
fdivrs
add
sub
xchg
adc
mov
negb
enter
add
xor
in
mov
or
rcll
scas
xor
cltd
fwait
fs
lret
or
scas
or
mov
rcl
mov
add
icebp
fldl
clc
or
mov
xchg
insb
out
dec
xor
add
das
lcall
cmc
mov
pop
push
pop
push
mov
xchg
or
cld
mov
mov
ja
mov
mov
repnz
aam
out
jnp
jl
clc
jnp
aaa
shl
cmpsb
aaa
xor
fiaddl
xor
jbe
mov
pushf
cmpsb
cmp
ret
in
cmp
stc
xchg
cmp
pop
dec
jae
ljmp
ret
ja
pop
aaa
outsl
dec
pop
int
add
loopne
ror
imulb
fs
iret
push
or
pop
dec
xchg
test
ljmp
mov
pop
fdivs
mov
adc
call
test
adc
scas
add
inc
cmp
cli
xchg
popl
mov
test
push
fidivrl
arpl
in
xchg
imul
fisttps
push
inc
out
push
xchg
sub
adc
sub
xchg
das
inc
xchg
push
aas
loope
mov
adc
repnz
hlt
ficoml
xor
add
sub
jg
cmp
lret
xor
icebp
pop
mov
cmp
ss
xlat
out
rolb
jge
gs
add
mov
ja,pn
repnz
outsl
sbb
mov
jo
fistpl
orl
insb
shlb
sub
inc
lock
and
adc
cmp
pushf
jns
push
popf
in
mov
testl
enter
leave
loop
jbe
dec
out
into
pmaddwd
xchg
or
pop
inc
mov
fcoms
jno
add
push
pop
insl
and
outsb
subps
xchg
sbb
xchg
mov
cmpsb
iret
xchg
cmpsb
hlt
fdivrl
cmp
rolb
mov
rorl
divl
loopne
js
push
gs
sbb
inc
mov
lods
aam
or
jg
dec
out
push
ret
popa
ljmp
or
dec
testl
xor
adc
adc
sub
aaa
aad
fwait
pop
dec
push
mov
ret
cmp
loopne
testb
stos
sbb
pop
jl
adc
aaa
jg
hlt
ret
pop
push
add
sub
fwait
xlat
sub
push
sbb
add
mov
push
mov
dec
mov
js
loope
mov
mov
inc
rcrb
cmp
xchg
cmp
mov
cmpsl
pushf
sub
fnstsw
andb
insl
shlb
std
mov
insb
scas
xchg
cmp
dec
mov
or
xor
shlb
pop
pop
sbb
xchg
aad
xorb
sub
outsl
arpl
scas
movsl
mov
popf
ret
stos
stos
xor
insl
mov
dec
inc
outsl
aas
mov
cmpsb
lods
aas
cmpsl
decb
inc
mov
sub
sub
addr16
cvtpi2ps
mov
leave
aas
stc
shrb
ljmp
pop
jns
in
outsl
or
cs
mov
add
stc
jmp
jg
test
bound
nop
inc
dec
ljmp
jne
ljmp
in
shrl
and
stos
add
jecxz
lcall
adcl
insb
daa
addr16
push
or
push
xchg
daa
cld
not
add
subl
or
push
icebp
add
das
rcll
dec
mov
or
and
cmp
mov
lret
sbb
mov
repz
and
and
pushf
xchg
inc
in
pop
mov
pop
imul
push
dec
or
lea
jnp
outsb
sub
xchg
aam
sub
sbb
sub
imul
icebp
sub
inc
out
inc
cmp
inc
lods
je
int3
fs
data16
add
xchg
in
or
stos
xchg
xchg
xor
mov
jne
ljmp
push
and
pop
hlt
pop
enter
xor
sub
nop
adc
lea
sti
sbb
jno
and
or
ret
es
test
mov
xor
mov
sub
pop
subb
repz
mov
fiadds
or
hlt
inc
int3
rcr
cmp
je
leave
adc
push
jle
mov
aaa
add
xorl
stos
test
pop
neg
repnz
jmp
xchg
clc
and
mov
adc
daa
mov
pop
lock
sub
aas
jmp
dec
push
inc
mov
and
pop
into
stos
pop
pop
fwait
mov
int
dec
call
pop
fsubl
cld
sbb
push
add
lea
jle
imulb
cmp
pop
xchg
or
dec
jns
imul
adc
sbb
idivb
xchg
inc
sub
mov
push
stc
xchg
pop
aaa
mov
push
fldcw
ror
outsl
pop
sarb
mov
bnd
cld
dec
cli
in
or
mov
inc
fidivrl
adc
or
push
add
mov
jbe
add
rcrl
sbb
fcomip
lahf
cs
fwait
rcrl
ficoms
mov
mov
mov
daa
and
fmull
fwait
ror
popf
mov
aad
cli
negb
xchg
cmp
or
aas
sbb
pop
mov
add
jb
stos
adc
mov
xchg
call
ja
fisttpl
add
mov
and
xchg
push
stos
fs
xlat
add
cwtd
mov
mov
aad
enter
pop
les
xchg
sub
enter
dec
sbb
mov
and
orl
mov
push
add
cmp
shll
ret
mov
adc
or
roll
jp
scas
push
movsl
paddsw
divb
lretw
aad
cmpsl
cmp
mov
adc
dec
jb
adc
adc
cmpl
sub
xor
xor
mov
pop
mov
sahf
lock
add
pop
jle
xor
jne
repz
inc
mov
test
push
imul
aam
lcall
jmp
insb
push
scas
adc
lods
jae
and
and
xor
cwtl
inc
orl
enter
jbe
add
int3
inc
mov
ja
add
mov
fcmovne
xor
xchg
pop
ror
pop
ja
shll
subl
add
in
xchg
mov
sbb
add
jae
imul
lahf
shll
lods
or
loop
popf
clc
push
xchg
xchg
push
out
clc
mov
iret
cmp
pop
popf
ds
call
dec
and
cmp
sbb
xchg
sbb
cmpsl
mov
sub
pop
aam
or
lods
test
pushf
xchg
icebp
mov
push
mov
mov
xchg
aaa
xor
pop
je
push
repnz
xor
mov
jle
xor
xlat
inc
imull
or
lea
jne
or
scas
sbb
dec
xchg
mov
and
clc
or
mov
pop
xchg
mov
sbb
sub
add
jl
and
push
xchg
clc
push
pop
push
icebp
pop
pop
xchg
jmp
enter
lock
pop
push
mov
push
adc
imul
dec
mov
inc
xor
enter
inc
cmp
mov
scas
or
push
rol
push
dec
jne
lds
sbb
rorl
loop
dec
lcall
clc
inc
inc
mov
es
in
push
loope
pop
adc
jo
shl
lods
cmp
movsl
insl
jecxz
inc
insb
jae
fadd
xor
dec
hlt
test
shlb
adc
mov
out
push
fiaddl
and
push
push
loopne
dec
dec
and
jmp
icebp
adc
push
orb
addr16
daa
mov
xor
ret
xchg
push
cld
mull
in
test
ret
fisttpll
xchg
cmp
jb
pop
cld
sti
pop
ds
push
xchg
sub
pop
popa
mov
popf
pushf
mov
outsl
xor
or
popf
imul
mov
pop
dec
adc
out
jecxz
and
es
call
shll
mov
jmp
xlat
xor
pop
xchg
aaa
or
jecxz
mov
and
and
push
mov
adc
fidivrs
gs
jae
rclb
cmc
mulps
jbe
fcmovbe
jge
cmpsb
push
inc
loop
jg
fidivl
arpl
daa
mov
dec
aam
daa
sbb
add
stos
lahf
inc
push
lock
imul
fdivrp
out
lret
and
call
add
ret
pop
pop
ret
cmp
jmp
dec
ficoml
add
addb
xchg
push
out
leave
in
insb
fsubl
pop
mov
push
iret
inc
add
scas
ret
jge
pop
scas
jbe
mov
sbb
out
mov
int3
sub
sub
xchg
out
push
inc
cld
adc
xchg
push
sbb
ret
or
xchg
in
mov
in
xor
push
aam
sub
in
insl
mov
push
not
das
ljmp
inc
or
es
in
filds
dec
pop
cmp
out
mov
rolb
adc
xlat
mov
jge
leave
out
ss
out
pop
push
mov
add
cmpsl
push
movsb
mov
les
enter
jno,pt
mov
subl
cld
pop
icebp
pop
mov
stos
outsl
pop
outsb
xchg
rcrl
aaa
dec
mov
cmp
insl
mov
mov
dec
sub
test
ljmp
cmp
inc
movsl
cmpsl
fs
popf
sahf
fsubrs
out
mov
xor
icebp
and
push
leave
mov
mov
push
cmc
mov
ss
popf
cmp
cmp
and
dec
jmp
ja
mov
cmp
cmp
movsl
mov
sbb
pushf
popa
cmp
aam
cltd
fmuls
mov
jecxz
add
scas
repz
test
das
fisubs
inc
jbe
hlt
testl
rorl
lods
and
scas
das
in
sbb
int3
xor
pop
jnp
pop
cmp
jbe
call
inc
inc
arpl
movsb
cmpsl
or
push
in
enter
dec
aam
lock
je
jne
mov
out
mov
dec
sbb
ret
or
repnz
inc
and
jbe
adc
les
add
mov
aad
loope
mov
insb
dec
jne
clc
lahf
dec
mov
jmp
inc
in
popa
cmp
or
jo
das
inc
mov
push
xor
pusha
or
and
and
into
xor
dec
mov
dec
mov
pop
shll
subl
jp
sbb
push
frstor
mov
out
rorb
into
sbb
jmp
icebp
adc
add
in
or
jo
loopne
mov
inc
push
push
and
xchg
mov
and
das
mov
dec
add
pop
sbb
in
ljmp
rcl
push
pop
push
push
pop
cmp
mov
out
mov
je
pop
xor
data16
inc
dec
dec
fwait
sub
adc
push
dec
loop
je
cmpsb
add
jo
cmpsl
xlat
shrb
cmpsb
adc
data16
dec
cmp
pop
in
daa
mov
mov
pop
subb
or
adc
dec
push
mov
jne
jge
loop
mov
dec
in
fwait
adc
mov
jbe
dec
mov
movsl
hlt
sub
lahf
or
sbb
mov
icebp
gs
lret
jp
rorb
sub
test
inc
in
adc
xchg
ret
stos
add
shrb
test
fisttpl
aad
in
gs
sbb
push
jbe
mov
xor
pusha
mov
faddl
and
fstl
adc
sub
cmp
sahf
rcrl
jl
out
mov
movsl
pop
inc
xor
mov
pop
out
ss
mov
jp,pn
sti
rclb
fcompl
dec
movhps
mov
and
sub
and
xor
push
sarb
cmc
mov
movsb
fsubl
pop
push
pop
xchg
mov
icebp
ss
cmp
mov
inc
aas
cmp
xor
lds
add
rcrb
or
pop
ljmp
push
popa
mov
out
adc
cmp
imul
sub
xchg
lcall
mov
incl
jmp
jmp
fs
roll
addr16
enter
add
dec
xorl
divb
adc
adc
out
lock
mov
mov
fs
push
fnstcw
mov
lods
or
lahf
mov
sbb
xor
mov
shrl
jbe
sbb
jle
lahf
loope
dec
mov
sbb
mov
add
ficoms
cmp
adc
pop
xchg
cmc
fbstp
push
cmp
lock
out
pop
jae
xor
push
ss
mov
aad
aas
mov
in
in
incl
inc
sbb
pop
sbb
or
pop
xchg
insb
add
mov
mov
inc
dec
xor
stos
xchg
add
insb
sub
movsb
mov
add
xchg
sbb
inc
fdivl
xchg
cld
cli
scas
push
dec
xor
loop
les
inc
xchg
aaa
inc
out
push
jns
rcll
nop
pop
jge
xchg
or
xchg
adc
out
mov
ja
cmpsb
dec
addr16
cwtl
adc
imul
int
aam
jne
mov
lret
mov
cmp
js
pop
lock
pop
loope
stos
adc
dec
sbbb
test
and
pop
add
fsubs
mov
popf
jl
repnz
mov
in
jo
and
insl
sub
sub
inc
xor
adc
or
or
inc
mov
fistps
mov
stc
mov
cmp
jl
or
mov
sbb
dec
fs
push
jnp
dec
mov
fucomip
xchg
xor
call
leave
xor
in
inc
loope
sbb
out
es
mov
ss
cmp
lods
dec
aas
pop
loopne
cld
sti
jmp
fisttpl
push
jbe
mov
mov
dec
cmpsb
push
pop
sub
out
clc
inc
cld
ljmp
mov
call
and
mov
inc
clc
lretw
fistl
cmpsb
cmp
inc
push
push
movsl
iret
sub
dec
frstor
adc
and
cmp
rorb
cltd
sbb
notb
push
movsl
repz
stc
lahf
sbb
data16
js
out
aad
stc
hlt
or
ror
push
popa
test
pop
insl
fistpll
or
dec
fstl
mov
add
and
or
test
mov
xchg
mov
in
fsubl
xchg
and
les
sub
insl
out
movsb
pop
pop
adc
repnz
push
cmp
lcall
inc
into
mov
pop
inc
sbb
mov
pusha
js
mov
lahf
sbb
jb
sub
cmc
mov
xchg
jnp
pop
loop
lret
fldcw
add
nop
inc
jecxz
cmp
mov
push
and
test
push
cmp
test
cmp
and
mov
or
jmp
adc
jnp
ss
mulb
cmc
imul
mov
fwait
inc
push
shlb
idivb
push
adc
pusha
pop
es
into
fnsave
inc
sbb
dec
aad
dec
xorl
ja
sahf
mov
add
inc
cmp
shll
std
adc
fiaddl
loopne
inc
and
sbb
jmp
out
lock
scas
add
mov
sub
xor
mov
das
notl
aad
add
mov
mov
hlt
int
push
lahf
fistpl
in
mov
adc
cmp
mov
out
and
out
xorb
dec
iret
adc
xor
in
leave
pop
lahf
jg
push
sbb
into
divb
add
ljmp
xorl
mov
xor
jg
push
jg
dec
cmc
cli
pop
mov
xchg
movsb
scas
and
jae
mov
cltd
mov
fisubl
insl
imul
les
test
xor
mov
push
popf
sbb
lret
mov
sub
lcall
jo
negl
pushf
je
xor
inc
mov
xchg
jns
push
dec
or
cmp
js
sbb
add
xor
test
test
dec
xchg
xchg
or
mov
adc
popa
cmc
jl
or
popl
popa
sub
test
sub
lret
mov
aas
ret
or
stos
push
xor
pop
mov
xchg
mov
cs
push
dec
lods
rcrb
in
test
sbb
cmpsl
stos
cwtl
cmpsb
mov
aad
arpl
add
movsb
sti
inc
repz
push
jae
mov
pop
data16
jp
and
jge
sub
mov
add
pop
dec
sub
fdivl
or
sar
xor
mov
jns
sahf
fisubrl
xchg
mov
dec
add
orl
ficompl
bnd
or
add
fistps
adc
jae
repnz
pop
cmp
inc
mov
push
rorl
scas
cwtl
inc
fisubl
dec
jae
pushl
xchg
fwait
push
addr16
mov
or
pop
inc
and
xor
adc
inc
push
xchg
jne
pop
and
repnz
cwtl
in
movsl
pop
xchg
out
aad
mov
andb
lahf
and
mov
movsb
mov
xchg
pop
lods
imul
xchg
les
in
nop
or
inc
pop
dec
jp
push
loopne
ss
lods
xlat
shll
sub
sti
xchg
out
xchg
bnd
or
jge
inc
add
icebp
sahf
test
mov
inc
pop
dec
and
and
xchg
cwtl
popa
mov
mov
mov
and
out
sbb
clc
js
out
call
lahf
mov
pop
les
scas
jl
dec
and
inc
je
cmp
cmpl
data16
stc
push
sti
pop
xchg
fldln2
push
sbb
jae
icebp
sub
adc
jae
jecxz
jcxz
lahf
jmp
push
call
inc
adc
ja
pop
jns
out
dec
es
int
and
stos
mov
call
lds
ja
repz
push
stos
cs
cltd
out
test
mov
inc
sbb
sbbb
daa
leave
jae
pop
pop
and
xor
xchg
xchg
aam
and
fisubl
push
out
xchg
inc
sbb
in
pop
fidivs
xor
adc
mov
push
fs
rorb
push
xchg
lock
lods
cli
and
clc
add
stc
in
mov
cmp
adc
xchg
sbb
into
mov
mov
adc
push
loopne
mov
fs
mov
sbb
adc
cli
mov
add
inc
push
or
sub
mov
ret
dec
scas
sub
outsb
pop
dec
lcall
cld
stos
in
lea
imul
sahf
xchg
or
clc
pop
hlt
add
pop
mov
movhps
insb
push
scas
add
orl
sub
mov
pop
pop
test
inc
sbb
inc
mov
cwtl
and
cld
inc
dec
dec
xor
lret
push
adc
inc
xor
cmpsl
inc
xor
pop
cmp
and
xchg
and
xchg
mov
cltd
cmp
cmp
mov
cmpsl
sub
data16
or
sti
inc
and
pusha
mov
push
fwait
cmp
clc
fistpl
aaa
enter
int3
arpl
add
in
fsubrp
adc
imulb
push
jecxz
pop
enter
adc
repz
cli
sarl
mov
cli
cmp
push
out
xchg
fisttps
push
dec
les
icebp
mov
fistl
lcall
out
and
xchg
popa
xor
imul
pop
mov
fidivs
sbb
xor
add
inc
sub
sub
cmp
dec
xor
bnd
xor
sar
jle
cwtl
pusha
imul
mov
clc
scas
inc
ret
xlat
out
imul
jb
push
andb
out
xchg
ret
mov
or
dec
or
fidivrs
xchg
cmp
sahf
xchg
lods
add
fwait
mov
cmc
call
pop
push
mov
movsb
or
stc
cmp
cmp
and
imul
aad
data16
ds
lods
clc
xchg
mov
sbb
adc
mov
xor
xchg
aas
in
imul
inc
cmp
mov
cmp
mov
xor
cltd
inc
leave
pop
out
jle
cmp
aam
pop
adc
test
xchg
mov
frstor
pop
in
shl
lcall
dec
js
adc
pusha
push
je
ss
xor
and
sbb
dec
loop
stos
sub
std
int
mov
pop
dec
push
js
aam
jmp
call
xchg
inc
pop
add
xchg
and
sbb
insb
pushf
scas
push
xor
mov
test
aas
sub
push
xor
lods
lret
jp
push
rorl
xor
shl
jmp
sbb
out
xchg
repz
jae
push
lret
lods
jp
xorl
inc
lock
mov
adc
shll
fs
sbb
inc
jp
cld
pusha
jle
xchg
pop
pop
aaa
aas
stos
mov
sub
std
loopne
test
push
jge
mov
lds
pop
ds
mov
sbbl
faddl
pusha
fwait
add
test
ffreep
push
decb
push
stos
jno
push
lock
mov
stos
adc
pop
mov
push
lsl
adc
cltd
add
jbe,pn
push
lcall
cwtl
jae
mov
sub
mov
in
cmp
pushf
insl
nop
or
jecxz
rcll
ds
mov
mov
xchg
les
test
mov
xchg
push
insb
addr16
sbb
sub
mov
push
push
jg
sub
adc
test
pop
mov
adc
outsl
sub
fists
inc
sbb
into
cmp
sbb
cwtl
dec
cmc
xlat
adc
aad
mov
into
incl
rcrl
std
rclb
enter
mov
mov
in
aas
in
mov
mov
pushf
and
adc
cmp
add
dec
push
dec
cs
mov
icebp
out
rcrb
jno
mov
shl
jl
cmp
jle
mov
loope
and
imul
insb
mov
mov
outsl
ljmp
push
or
ljmp
fwait
push
bound
or
fwait
jmp
aas
xchg
xchg
push
arpl
jle
inc
push
lret
xor
repz
push
mov
adc
je
cmp
mov
push
adc
insl
mov
xor
sti
cwtl
jae
imul
imul
cltd
rolb
test
inc
loope
mov
xchg
xchg
pop
mov
mov
adc
and
or
inc
jbe
subl
lret
enter
xor
pop
imul
lods
cmp
push
pop
jp
adcb
xor
cltd
and
cmp
lret
push
rcll
push
out
xor
sub
sbb
cmp
shll
cmc
or
shlb
fldl
rcll
loopne
xlat
adc
hlt
pop
mov
jb
mov
js
loopne
jmp
mov
hlt
ds
xlat
sub
xchg
adc
mov
pop
or
scas
shrb
xor
popa
cwtl
inc
xchg
clc
fdivrl
pop
and
lods
add
xor
mov
rorl
and
pop
test
jne
sub
push
in
sub
mov
insl
outsl
push
add
cs
in
ret
stc
mov
inc
icebp
iret
sub
insl
add
push
or
lds
cli
in
push
pop
xlat
cs
popa
in
pop
scas
jg
xchg
or
push
stos
or
stos
int3
mov
loopne
inc
jnp
lods
cmp
cmp
pushf
loope
xchg
testl
cmp
cmp
dec
mov
sub
or
aad
sub
xor
sbb
pop
jp
push
mov
mov
push
mov
xchg
jl
lods
fcmovne
inc
jnp
cmp
mov
jg
jo
lock
cwtl
movsl
pusha
sub
cltd
sbb
cli
or
dec
fstl
cmp
repz
xchg
loop
and
jmp
jle
add
and
cmp
mov
lock
push
or
into
cmc
out
inc
lret
pop
iret
inc
jl
adc
mov
popf
jo
inc
test
xchg
bound
add
setae
in
shll
test
cmp
movsb
jp
ja
jmp
add
hlt
ret
int
xlat
cs
sti
xor
aad
mov
mov
mov
test
jns
and
scas
jns
mov
sbb
push
lahf
cmpsb
push
xchg
xchg
movsb
cmc
cmpsl
bound
pusha
cltd
mov
gs
add
repz
fs
shrl
mov
xchg
test
and
inc
mov
dec
inc
mov
push
cmp
mov
mov
test
pop
cmp
lret
jecxz
jnp
mov
xchg
mov
pop
gs
adc
cli
out
adc
insl
into
pop
out
cmp
fildll
pop
pop
xchg
testb
mov
shrl
or
nop
mov
adcl
mov
das
rcrb
mov
and
mov
fmull
xor
dec
jge
mov
repz
mov
mov
les
stc
sbb
sbb
imul
xlat
sub
xchg
xchg
push
sub
push
or
jo
outsb
jo
call
int3
imul
dec
fstpl
sbb
cmpsb
add
push
or
insl
sub
push
testl
and
sub
dec
push
adcl
sub
mov
sub
cli
mov
clc
and
test
inc
and
lahf
push
xlat
xor
and
add
iret
int3
test
dec
and
jl
and
stos
dec
jl
xor
loop
jg
adc
scas
pop
cmc
inc
aad
jbe
pop
sbb
mov
fidivrl
sbb
dec
mov
mov
add
xchg
ljmp
push
jno
inc
movb
clc
xchg
fs
xor
sti
sub
add
lds
push
scas
leave
dec
out
dec
mov
adcb
pop
inc
mov
push
xor
pop
movsb
mov
lods
mov
or
push
scas
and
sbb
push
movsl
push
sub
pop
mov
loopne
xchg
sbb
mov
sahf
repz
subps
iret
sbb
sbb
add
pop
xor
fcmove
sbb
and
ljmp
and
inc
sbb
mov
mov
pop
jmp
jo
jle
ficompl
push
inc
mov
cmc
ss
xchg
dec
add
ret
mov
int3
cmp
mov
gs
imul
jp
jp
in
add
adc
aam
movsb
pop
mov
fwait
add
mov
aad
cmp
fisubrs
lahf
imul
ljmp
inc
push
add
or
sub
test
push
mov
pop
sub
jmp
cmp
mov
jl
and
scas
dec
sbb
inc
dec
mov
clc
push
adc
sub
out
mov
and
shlb
cltd
inc
gs
pop
xlat
out
xchg
inc
sbb
xchg
imul
jge
mov
xor
jmp
dec
push
insb
js
mov
shl
xlat
push
icebp
mov
sti
xchg
push
xor
scas
stc
in
xchg
fldl2t
pop
int
js
insl
data16
dec
mov
or
sub
push
jne
enter
jge
ss
dec
pop
sub
pop
into
mov
jae
adc
loop
mov
xorl
mov
dec
mov
jns
rcl
arpl
test
push
xchg
mov
loop
je
cmp
xor
jmp
mov
adc
lds
jl
in
inc
xchg
lahf
add
xchg
mov
jne
rcll
sbb
hlt
sbb
jp
fs
lcall
lods
mov
movb
ret
gs
popf
shlb
lods
jmp
pop
sarb
outsb
sub
xchg
stos
mov
loopne
xchg
mov
idivl
cmp
jbe
fidivrl
mov
js
les
pop
mov
out
rcr
clc
mov
cmp
scas
repz
cmc
adc
sub
cs
push
mov
xlat
xchg
hlt
pop
sbb
mov
sbb
add
jl
pop
cmpsl
test
shlb
imul
mov
xor
les
pop
out
cmp
rcr
jg
push
lcall
adc
fmull
push
iret
lret
sbb
std
dec
inc
push
ficoml
and
dec
inc
jl
mov
jnp
stos
dec
mov
sahf
xor
jle
aad
fwait
jns
jne
fsubl
sbb
int
hlt
add
jle
add
notl
sub
arpl
push
lcall
dec
mov
scas
xchg
gs
push
testb
cmc
lock
enter
push
test
dec
js
push
xor
mov
inc
xchg
insb
xchg
xchg
rorl
jp
or
orl
stos
mov
imul
icebp
jmp
gs
mov
rorl
mov
dec
cli
xor
popa
cs
pop
movd
cmp
dec
mov
int3
repz
inc
popf
and
stc
xor
and
scas
sub
mov
mov
and
pop
stc
sub
addr16
std
jle
and
dec
hlt
scas
popf
inc
jp
sbb
sub
xor
cmp
cmp
popa
jbe
adc
rorl
pop
test
and
push
or
cmp
lret
inc
pushf
add
sti
sti
lock
enter
push
jo
cmpsl
pop
mov
repnz
je
mov
push
out
inc
dec
mov
leave
jo
push
jge
cmpsl
push
and
mov
cmp
add
cmp
roll
push
xchg
addr16
incl
loope
mov
add
in
jno
lret
inc
addr16
icebp
scas
pop
out
imul
sub
xor
subb
sbb
pop
xchg
push
jno
mov
cs
or
xchg
das
arpl
mov
jmp
mov
dec
jns
inc
jp
sbb
adc
lea
inc
cmpb
mov
int
pop
and
lret
outsb
cmpb
push
aas
dec
fsub
and
pop
fdivrl
andb
adc
jmp
push
sbb
aad
and
push
into
ret
jmp
jno
out
push
inc
pusha
loope
bound
jg
cmc
arpl
repnz
xchg
cli
mov
cltd
jl
mov
add
shrl
jbe
lods
mov
xchg
push
adc
loopne
fcoms
sbb
popf
rclb
hlt
fistpll
adc
repz
jecxz
incb
inc
sbb
mov
push
int3
jo
push
and
mov
mov
mov
xor
pop
add
icebp
push
sahf
das
enter
mul
push
addb
scas
imul
pop
jge
xchg
sbb
outsl
mov
std
pop
mov
out
aad
xchg
out
add
fidivrs
out
and
inc
jmp
ret
ss
xchg
pop
ret
bound
fiaddl
hlt
mov
mov
push
jg
lods
flds
aaa
imul
mov
push
xchg
nop
aaa
dec
mov
pop
ljmp
stos
cld
xor
shll
cmp
adc
jl
outsl
mov
mov
enter
cmp
adc
outsb
jmp
xor
inc
xor
sub
adc
cltd
cmp
pushf
mov
mov
mov
mov
lock
mov
mov
repnz
xchg
sbb
jno
ret
test
mov
pop
insb
cmp
push
xchg
test
dec
inc
bound
loopne
jbe
xor
push
es
push
mov
insl
jecxz
xchg
lea
into
pop
scas
push
inc
out
call
mov
jl
mov
or
or
inc
lcall
xor
ret
lods
movsb
fildll
sub
pushw
dec
push
shrb
in
pushf
or
movsl
int
and
dec
sbb
dec
enter
aas
es
xchg
lods
out
in
addl
mov
loopne
xchg
movsl
insl
pushf
fnstcw
mull
or
push
aam
xchg
push
movsb
cmpsb
bnd
push
movsb
sub
mov
xor
xchg
je
jb
aam
push
daa
es
lds
divl
xchg
cmp
xchg
xchg
xor
jp
movsl
scas
in
ficomps
xchg
imul
repnz
lret
stos
dec
xchg
xor
loope
xchg
jl
pop
js
repz
stos
dec
mov
dec
in
mov
jp
sub
inc
and
xchg
pushf
mov
mov
and
pop
das
ficomps
rcl
adc
dec
mov
cld
sub
sbb
rcll
add
fmul
sbb
sbb
call
jg
add
test
push
int3
mov
cwtl
or
or
xchg
xor
inc
xor
inc
mov
aam
loope
ficoms
mov
dec
mov
imul
aaa
or
xchg
imul
lahf
sub
inc
adc
pop
xor
push
mov
stos
dec
push
adc
divb
aad
in
adc
dec
fcmovbe
xchg
sub
ss
jno
aad
inc
insl
clc
nop
add
xor
xor
fdivr
fadds
sti
lcall
or
ss
call
pop
cmpsb
sub
pop
inc
sbb
mov
cli
std
and
jmp
cltd
sub
sub
jbe
xor
add
lea
mov
out
hlt
mov
icebp
test
and
or
xor
push
int3
and
mov
or
sbb
cmpsb
jbe
push
popa
pushl
in
je
jecxz
daa
je
add
test
out
jmp
test
and
mov
lahf
mov
aaa
jg
jp
jo
sub
stc
dec
ret
outsl
ss
cmpsl
aas
jmp
xlat
out
movsl
or
mov
inc
sbb
lods
or
movsb
dec
iret
pusha
fildll
push
mov
test
lds
jle
dec
mov
mov
push
and
mov
fsubs
pop
imul
push
faddp
mov
xchg
jge
mov
inc
rol
cmp
add
inc
pop
or
add
push
push
lds
add
push
sbb
repnz
mov
sub
jnp
loopne
pusha
fstl
cmp
lock
popf
popa
sbb
mov
mov
jge
out
mov
and
js
out
lock
mull
dec
sub
outsb
push
xchg
jnp
lea
add
in
data16
push
and
push
mov
stc
or
mov
mov
fidivl
push
mov
xchg
adc
enter
push
xor
movsb
stos
cmc
push
dec
jbe
fs
les
stos
push
pop
int
sub
or
ret
inc
in
xor
mov
mov
xchg
cld
add
pop
dec
xchg
fisubl
lock
pop
dec
fmull
imul
sti
add
outsl
adc
push
daa
movsl
xor
xchg
roll
adc
add
outsl
test
and
or
dec
movsl
mov
add
shl
and
xor
mov
pop
stc
ret
cld
mov
test
add
xor
push
iret
dec
fs
ret
imull
dec
ret
popf
out
or
fdivl
pop
jg
call
dec
enter
mov
push
rcr
mov
push
scas
ror
test
aas
push
ja
inc
fwait
arpl
nop
pop
pop
idivl
mov
mov
jbe
repnz
aam
sbb
sbb
rolb
sub
ss
mov
imul
repnz
add
fsubrs
test
daa
lret
or
and
imul
cwtl
shrl
dec
insl
cltd
scas
addr16
add
jne
jl
jecxz
into
xchg
stos
inc
and
das
adc
cmpsl
fildll
stc
insl
mov
jle
outsb
movsl
fisttps
fidivs
rorl
mov
xchg
fwait
nop
mov
xchg
xor
pop
ret
adcb
scas
push
pop
lods
mov
jle
fwait
mov
jmp
pop
or
gs
stos
sub
cld
pminsw
stc
out
sar
fs
pushf
stc
dec
lods
ds
lds
pop
dec
incl
in
lods
mov
mov
roll
fwait
ljmp
or
addr16
imul
mov
ds
data16
cltd
ljmp
in
addr16
dec
and
jno
mov
inc
nop
in
mov
pop
push
lods
sub
hlt
xchg
inc
xlat
jb
sbb
jo
je
sub
inc
lcall
clc
ds
js
ficomps
cmp
mov
ss
int3
bound
sub
sub
push
shll
jge
inc
arpl
add
push
shlb
das
int
adcl
add
icebp
pop
mov
mov
add
jmp
xchg
in
sbb
arpl
dec
sar
sahf
jns
std
bound
dec
jl
imul
rcrb
scas
or
inc
fistpll
inc
sar
fimuls
inc
inc
mov
in
cmp
adc
fisubrs
mov
sar
mov
xchg
lods
jbe
or
jb
int
inc
shll
lcall
and
mov
pop
sub
gs
lret
mov
xor
mov
add
dec
mov
mov
sbb
shrl
xchg
shl
inc
mov
jp
xor
fs
push
ljmp
jecxz
and
lret
xchg
ret
sub
out
mov
cltd
cmp
cld
loopne
push
dec
xchg
inc
adc
xor
iret
outsb
hlt
pusha
fbstp
lea
in
add
sti
test
pop
push
jge
mov
aas
sbb
xchg
stos
lahf
mov
daa
in
or
pop
push
loope
fidivrs
lea
push
jge
add
out
push
in
mov
push
mov
jge
pop
orl
std
pusha
icebp
sbb
popa
cld
std
idiv
push
pop
fdivrl
cmp
mov
and
lock
adc
xchg
std
cmp
mov
clc
mov
enter
mov
inc
mov
xchg
in
in
fnsave
sub
es
and
sub
xor
add
push
sbb
imul
or
test
cmp
pop
ss
or
and
test
adc
adc
pop
sub
sub
adc
adc
loope
xchg
cmc
or
mov
mov
in
dec
jp
sbb
lea
sbb
insl
testb
ret
jl
mov
push
pop
into
lods
and
mov
and
dec
js
dec
rorl
push
ret
mov
mov
adc
inc
sbb
stc
mov
inc
gs
cltd
fistpll
into
mov
or
iret
addr16
or
bswap
push
jle
stos
dec
mov
movsl
sbb
and
pop
pop
movsl
adc
daa
push
out
sahf
jno
das
sbbb
addl
bound
stos
pop
adc
cltd
scas
imul
stos
jg
mov
push
cmovs
push
insl
mov
fwait
out
push
push
push
xchg
aas
test
xor
notb
pop
mov
leave
call
and
mov
dec
es
jbe
add
push
addr16
sub
or
lret
ja
ljmp
lds
jg
lea
cmpsb
adc
xchg
inc
cmp
xor
sbb
ficomps
jno
lcall
aas
insl
bound
mov
testb
xor
xchg
subl
movzwl
jecxz
dec
dec
mov
push
or
push
aas
and
and
sbb
call
scas
loop
enter
fcom
mov
inc
repnz
cmp
xchg
xor
inc
dec
movsb
cmpsb
cwtl
imul
xchg
sbb
mov
push
dec
mov
mov
xor
div
xor
or
jae
frstor
mov
mov
mov
cmpps
mov
mov
adc
cmp
add
pop
sti
and
stos
and
cmpsl
pop
add
xchg
xor
pop
repnz
pop
jb
ja
imul
loope
rorb
fmuls
jae
push
cmp
in
adc
xchg
popa
stc
add
inc
xchg
lcall
aad
inc
aas
movsb
out
loopne
xlat
dec
jb
mov
pop
dec
adc
in
inc
call
mov
repz
sub
cltd
and
mov
and
pop
fidivs
mov
ljmp
popa
push
mov
push
pop
mov
sub
pop
mov
inc
and
jp
sbb
mov
sub
dec
aad
adc
sbb
mov
mov
shlb
popa
mov
imul
and
cli
loop
pop
xor
xchg
mov
gs
aas
xchg
and
mov
stc
push
jb
insl
sub
repz
aam
in
cltd
xchg
pop
call
sbb
xchg
jecxz
clc
jne,pt
fs
mov
lds
push
and
lods
pop
jb
adcb
bound
sbb
mov
scas
loopne
jo
cs
push
jp
fcomp
jno
sti
movsl
xor
mov
fmull
sti
out
jo
xor
outsl
mov
in
jmp
sbb
xor
or
shrb
push
and
pop
ds
test
sbb
cwtl
inc
mov
mov
aas
push
xchg
and
cmpb
test
mov
loopne
xchg
mov
aaa
jmp
or
pop
lcall
outsb
inc
into
cwtl
and
inc
dec
call
pop
femms
mov
jl
loopne
add
dec
nop
xchg
and
xchg
dec
jbe
inc
inc
push
mov
test
sbb
xchg
ja
cwtl
shrl
pusha
lds
test
fimull
and
mov
jmp
jp
sbb
push
mov
dec
jecxz
mov
hlt
test
jne
xor
aas
mov
cmp
inc
cli
pop
stos
jl
dec
out
push
sub
lret
arpl
pmullw
stos
je
mov
pusha
loopne
pop
psubd
add
sub
xchg
fbstp
repz
call
faddl
sub
push
test
outsb
nop
cmp
lret
jne
and
xor
ret
loope
fdivs
mov
sub
je
or
cmpsb
inc
mov
mov
mov
xor
xchg
jge
push
pop
insb
out
jp
inc
sbb
inc
lock
push
rcrb
cmp
mov
adc
push
rorb
cmc
jle
pop
jb,pt
lcall
or
xchg
cmp
fisttpl
jge
push
jl
push
repz
aad
add
mov
out
fcompl
jl
js
lcall
mov
outsb
in
cmpsl
sub
cmpsb
mov
adc
mov
hlt
icebp
add
addr16
icebp
jae
pop
push
jbe
pop
xchg
mov
push
mov
cs
xor
or
jg
pop
aas
sahf
fimull
inc
adc
nop
leave
inc
ljmp
lods
faddl
push
rcrl
jg
cmp
sub
ret
jmp
or
stc
sub
ret
test
loop
mov
mov
dec
popf
lock
outsb
mov
push
sti
pusha
aas
and
mov
and
pop
cmp
outsl
pop
add
add
imul
xor
lcall
cmp
or
dec
mov
or
insl
cld
jno
divl
mov
push
add
push
arpl
lahf
jae
mov
outsb
jge
xchg
rcll
push
cmp
jmp
lods
mull
repnz
int3
nop
jge
lret
scas
dec
idivb
pop
mov
ss
decl
and
rcrl
adc
dec
mov
xchg
mov
inc
mov
pop
add
jae
cmp
dec
insl
jge
sbb
xor
push
int
outsb
dec
imul
scas
aas
sbb
gs
lret
sub
or
sbb
ret
dec
clc
pop
sub
xchg
cltd
arpl
mov
xor
cmp
mov
test
js
std
test
stos
cmp
and
cld
cmp
mov
push
pop
js
mov
adc
sbb
xor
xchg
movsl
idivl
push
sbb
dec
das
repz
mov
repz
movsl
in
xchg
mov
bswap
jl
xchg
insl
adc
int
hlt
cmp
je
cli
and
sub
pop
imul
cmp
in
mov
inc
andl
mov
pop
ret
repz
sub
scas
add
jle
outsl
std
and
push
test
ss
push
scas
shlb
dec
scas
int3
test
mov
or
popa
xlat
ret
jecxz
xchg
inc
and
mov
aad
add
cltd
sbb
call
cmp
popa
jl
mov
push
ds
dec
sub
test
negb
aas
test
jo
loop
jp
scas
mov
leave
dec
add
mov
sti
pushf
loopne
movsb
jae
ljmp
movl
pop
arpl
pop
in
and
push
shlb
outsb
jge
push
popa
test
outsb
cmpl
or
fnsave
dec
call
out
jecxz
rcrl
xor
ja
cmp
push
addr16
fucom
push
adc
jb
frstor
lock
mov
and
test
lods
mov
cmp
xor
jecxz
add
add
adc
iret
inc
and
cmpsl
mov
xor
icebp
pop
jo
cli
movb
xchg
imul
lcall
inc
push
insl
into
adc
fidivrl
mov
insb
sbb
sbb
mov
ss
shr
adc
mov
sbb
fs
adc
inc
cmp
int3
adc
jge
cltd
in
mov
loopne
xor
lea
ror
test
int3
cmp
sub
andl
clc
sbb
into
and
mov
xchg
ret
mov
mov
lea
add
ds
in
fwait
cwtl
add
jp
sub
mov
sub
mov
mov
test
subl
xor
jge
cltd
push
or
clc
xor
mov
jns
aam
addb
cmpsb
jge
and
int3
mov
iret
push
les
in
rol
push
or
shr
in
sub
das
das
sub
push
xchg
fstps
test
sahf
jmp
mov
insl
leave
aas
cs
sti
pushf
addr16
stc
insl
adc
mov
and
push
pop
and
icebp
jp
movsb
pusha
fistpll
pop
aad
stc
jnp
ror
mov
icebp
mulb
mov
push
jo
inc
sbb
push
lret
negl
sub
rorb
test
xor
fsts
shl
das
jne
dec
sahf
popf
mov
fs
shlb
faddl
pop
imul
add
add
lahf
push
add
xor
getsec
xchg
and
test
data16
and
push
jns
sub
or
lret
out
and
cmc
mov
cwtl
sub
lea
mov
inc
movsl
outsb
fsin
fsubrs
dec
dec
add
adc
jp
and
aad
test
sub
pop
movzbl
and
call
lret
popf
popf
sbb
xor
cli
fldl
xchg
clc
mov
fs
cmp
test
bound
out
fdivp
pop
mov
xor
jle
mov
insb
cmpb
icebp
mov
hlt
push
push
mov
sahf
push
sbb
add
sub
out
lods
cmp
mov
inc
int
jne
mov
pushf
ror
cmp
adc
pop
jbe
outsl
lods
std
push
sub
mov
mov
or
jecxz
in
push
mov
jo
push
push
lea
adc
cmp
mov
aas
jne
aad
xchg
test
aaa
mov
fistps
push
mov
dec
mov
and
fcompl
mov
or
rcr
adc
std
stos
sbb
pop
xadd
jo
sbb
pop
aam
sahf
out
ss
cmp
inc
mov
in
out
ret
push
sbb
popa
add
std
and
and
mov
push
pop
pop
xchg
test
les
sarb
mov
jae
popa
call
mov
or
sub
sbb
sbb
out
int
push
push
mov
jae
cs
sub
stos
orl
pusha
js
push
xchg
push
sub
mov
aam
mov
lea
or
leave
and
lahf
stos
mov
sbb
fs
xchg
xchg
and
fidivs
push
add
and
pop
adc
call
and
iret
jecxz
mov
idivb
sbb
imul
mov
xchg
lretw
popa
jmp
pop
lcall
sarl
cmp
mov
jno
push
cmp
jg
call
fsubrl
sbb
jns
xlat
in
fwait
dec
movsb
sub
movsb
sbb
ret
imul
stc
jp
in
sub
jecxz
int
mov
pop
aam
mov
in
jb
aaa
jns
add
ljmp
stos
mov
inc
fisttpl
sbb
xor
js
mov
lret
out
jl
inc
inc
test
jbe
out
ret
inc
lods
and
jbe
inc
bound
xor
xor
push
pop
fmul
jmp
popf
sahf
loope
test
xchg
sahf
ret
aad
pushf
aas
adc
out
xlat
mov
cmp
inc
sub
mov
pop
xor
hlt
cmp
jg
call
dec
mulb
movsl
js
enter
test
sbb
mov
stc
adc
mov
dec
mov
mov
mov
int3
inc
sahf
scas
stos
inc
dec
mov
out
pusha
jp
lods
mov
incl
or
iret
icebp
popf
or
cld
dec
mov
push
jle
jns
mov
and
in
cmpsb
pop
add
lock
jno
popa
into
mov
loopne
stc
aas
fbstp
mov
fimull
movsb
into
clc
lds
push
add
pop
push
cmpsl
sahf
cmp
out
or
pop
or
decl
or
add
jnp
lods
fimuls
cmp
leave
fucomip
aad
inc
fstps
in
popf
cmp
jmp
xor
xchg
push
jb
xchg
jno
aaa
jge
pusha
es
ret
or
and
test
repz
add
popa
mov
cmp
xor
jecxz
sti
lea
stos
xchg
orb
mov
pop
into
and
in
sbb
xchg
inc
sarb
cmp
sub
pop
jns
das
out
sub
loope
lock
lahf
loop
popf
add
ja
cld
cmpsl
mov
shll
mov
sti
lods
push
arpl
imull
jmp
xlat
xchg
bound
mov
addb
fdivrl
add
lods
aad
add
sub
mov
sub
in
adc
jns
sahf
sub
xor
mov
les
cmp
cmp
jg
xchg
sti
out
mov
rolb
mov
mov
push
hlt
xchg
jae
or
pusha
pop
imull
xchg
cmpsb
cmp
pop
in
add
add
fimuls
imul
jmpw
dec
sub
mov
push
daa
mov
orb
xor
or
and
data16
test
je
popa
mov
not
cmp
and
push
sbb
les
jae
and
jmp
xchg
sub
es
imul
xor
push
pop
imul
in
sbb
popf
mov
cmpsl
rdpmc
out
pop
test
pusha
jo
lods
pop
in
enter
lret
or
or
fmull
mov
pop
ret
adc
jo
rorl
and
fsub
ret
xor
jo
mov
cmp
popa
repnz
sub
pop
jge
shll
xchg
int
int
jecxz
mov
mov
into
xor
clc
jmp
mov
jnp
cld
and
in
icebp
xchg
ds
pop
fldl
sub
clc
data16
push
lods
xor
mov
mov
pop
mov
pusha
outsl
sub
aam
mov
jnp
xchg
enter
mov
out
mov
test
fdivl
loop
jno
cmpsb
repnz
sarl
idivl
push
inc
repz
andb
leave
mov
push
and
lods
mov
jmp
in
dec
shl
sub
xchg
xchg
gs
mov
xchg
add
mov
addl
addl
movsb
sahf
mov
push
pop
inc
or
jg
ja
in
xorl
divps
int3
cmp
dec
loopne
sub
jnp
fisttpl
clc
pop
sub
mov
and
or
dec
sbb
cmp
mov
out
js
nop
scas
int
push
dec
mov
push
arpl
test
and
or
push
lock
xchg
dec
cmpsl
cmpsl
iret
repnz
dec
cwtl
int
mov
imul
sbb
inc
scas
movsl
sub
popa
lret
shlb
jmp
xor
cmc
jns
xchg
push
inc
shll
pusha
xchg
xor
pop
out
fldl
mul
xor
mov
pop
data16
mov
sub
testl
mov
push
dec
mov
push
sbb
xor
jno
xor
movsb
push
adcl
pop
push
jmp
lahf
cmp
mov
fs
es
loopne
out
and
adc
insb
cmp
js
mov
push
leave
xor
addr16
xchg
mov
jne
push
mov
icebp
fcmovnu
inc
mov
and
and
jp
and
fwait
add
int3
enter
push
aad
inc
push
movsl
test
insl
daa
jb
mov
jnp
lcall
daa
inc
ret
icebp
fadds
idiv
ljmp
dec
in
dec
xor
adc
xchg
sub
pop
add
outsl
jl
js
dec
sub
jnp
in
pushf
add
or
addb
fdivs
and
mov
bound
and
sbb
and
add
push
jb
add
rcr
gs
push
xchg
aas
daa
lods
aam
test
scas
push
leave
mov
mov
pop
cli
in
fmul
cmpsl
or
inc
jo
dec
mov
jno
dec
leave
lahf
or
push
iret
jge
cmc
arpl
pop
xchg
jnp
sbbb
leave
sub
dec
int
inc
repz
ja
and
mov
les
rorl
xchg
subl
mov
adc
xchg
xchg
xchg
sbbb
mov
test
cld
rorl
scas
addr16
mov
stos
pushf
pop
or
sub
loopne
nop
xor
cld
clc
std
mov
insb
mov
daa
jnp
push
jnp
fs
add
xor
mov
out
aaa
hlt
sbb
xchg
mov
xor
adc
jne
inc
shlb
xor
les
movsb
mov
push
imulb
push
dec
or
fiadds
out
pop
xchg
cmp
mov
mov
pop
jge
sub
repz
xchg
jecxz
in
sbb
mul
jmp
iret
in
icebp
mov
pusha
pop
mov
stc
imul
mov
aam
inc
and
jmp
xchg
xor
sub
sub
or
or
fdivl
mov
ds
movsl
or
cmp
and
fimull
gs
pop
sahf
and
lock
add
movsb
or
xchg
inc
adc
arpl
mov
sbbl
mov
push
mov
lock
divb
push
sbb
addr16
jmp
cltd
cmp
push
or
out
rep
fbstp
ret
lods
mov
imul
dec
xchg
aaa
fdivr
and
mov
aas
dec
sar
loopne
add
cmc
dec
lea
popa
sub
jb
daa
shlb
les
imul
xor
and
movsl
aam
sub
jno
shl
lahf
paddusw
js
loopne
fnsave
mov
mov
mov
imul
insl
rcrb
pusha
fbstp
lret
adc
inc
xor
pushf
std
push
fcompl
pusha
jo
cmp
push
cmp
cmpl
dec
mov
insl
ret
push
adc
sub
ret
cmp
mov
pop
sbb
or
cwtl
mov
out
dec
hlt
mov
mov
xchg
mov
mov
push
sub
insb
push
flds
pusha
add
pushl
pop
jb
or
dec
dec
inc
xorb
ficomps
fwait
dec
bound
stos
nop
jl
add
sti
xchg
lods
dec
and
add
lea
cmp
mov
cmp
mov
bnd
cmp
mov
jae
push
ljmp
aas
fldenv
or
out
cmpsl
jbe
cmp
xor
jge
mov
xor
fcompl
or
cmp
aad
or
jecxz
jb
mov
std
pop
clc
sbb
fsubl
jb
mov
popf
jl
addb
ret
sbb
mov
push
ljmp
push
cmp
lret
jp
test
pop
call
pop
aad
pop
repnz
xor
jg
add
jg
out
pop
sbb
imul
arpl
icebp
sub
cmp
push
mov
pop
mov
mov
sbb
xor
jl
jge
dec
push
loope
push
inc
inc
rorl
jae
out
jno
push
jb
das
sub
outsb
insl
dec
lcall
daa
data16
cmp
out
xchg
test
add
xchg
adc
push
gs
and
xchg
std
sbb
inc
push
stos
bnd
push
jb
push
icebp
mov
pop
addr16
lods
inc
icebp
xchg
sbb
push
lcall
and
lds
icebp
test
repnz
lahf
xorb
add
sbb
imul
fadds
notb
sbb
lahf
es
decl
jne
add
xchg
xor
mov
pop
cld
adcb
xchg
xchg
dec
adc
mov
or
mov
and
and
cmc
andl
adc
or
xchg
in
or
fcmovu
daa
cld
inc
xor
jne
add
ret
cmp
shl
mov
xchg
cmpsb
fcoml
into
mov
cmpsb
push
xchg
movsl
sbb
mov
push
mov
scas
lea
xor
dec
aam
cld
add
outsl
dec
mov
test
enter
into
cmp
xor
int
cmpsb
pushf
mov
push
pusha
fadd
jp
push
out
fwait
jae
cmpsl
or
inc
rorl
jb
add
lcall
rclb
inc
xchg
aas
cli
xor
bnd
in
inc
in
popa
rorl
mov
dec
lock
fisubrs
or
mov
pop
bound
stos
hlt
cmp
out
push
push
out
sbb
movsb
push
mov
sub
mov
mov
outsb
or
pushf
test
in
imulb
mov
dec
pop
cmp
out
out
jp
dec
mov
inc
shrl
jne
jge
push
mov
inc
cltd
jae
pop
inc
in
lret
sbb
lea
aad
sbb
cmp
pop
data16
bound
sbb
loope
pop
or
cltd
adc
add
or
clc
add
jb
xchg
pop
dec
mov
or
mov
cmc
cmp
cmp
add
fbld
popf
scas
cmp
mov
pop
out
mov
sti
into
ljmp
adc
pop
mov
mov
jae
aam
sbb
dec
loopne
in
loope
ss
loop
cmp
dec
loope
mov
ljmp
int3
out
std
xchg
in
sub
pop
mov
and
or
or
gs
dec
cmp
in
psadbw
aad
cmp
or
xchg
jb
std
in
mov
xchg
pop
lret
lret
jecxz
cmp
mov
js
outsl
les
inc
ss
and
cs
push
lds
push
sbb
arpl
cmp
scas
lcall
lods
or
in
daa
stos
bound
mov
lahf
xchg
add
dec
lods
xchg
imul
jge
xchg
rcrb
cmp
xor
jle
inc
lret
shlb
cmp
mov
xchg
push
and
mov
add
insl
shl
pushf
mov
mov
mov
repz
out
cmp
mov
in
ffreep
mov
mov
dec
xor
jne
pmaxsw
jp
dec
jg
adcb
nop
mov
pop
dec
mov
cmp
add
fcmovnu
cwtl
dec
mov
test
push
fldenv
aaa
pop
insl
mov
popa
rcrl
mov
sub
arpl
jecxz
mov
xchg
callw
daa
aas
imul
add
inc
adc
dec
pushf
loop
push
dec
icebp
inc
dec
clc
inc
xor
sbb
xor
data16
jg
inc
cmp
adc
xchg
pusha
ret
mov
sar
fs
cmpl
add
daa
adc
push
jne
lock
pop
std
cmpsl
lcall
push
pushf
mov
int
add
or
mov
adcb
or
cmc
ret
cmc
fildll
testb
xchg
imul
imul
in
push
push
pop
pushl
lcall
jne
test
dec
fs
and
shr
inc
pop
lods
pop
dec
xchg
sarb
fs
adc
in
and
push
sub
adc
movsb
aaa
test
stos
shlb
pop
nop
mov
mov
lods
and
sub
or
adc
rcll
pusha
test
or
mov
cmpsl
ds
add
mov
jno
insb
movsb
xor
cli
rcr
or
subl
sti
pop
pop
ljmp
xchg
adc
loope
clc
cmp
cmp
repz
ljmp
fcoml
or
cli
mov
repnz
push
stc
popf
add
add
mov
aad
or
xchg
jl
loopne
mov
mov
mov
int3
clc
inc
sti
dec
add
sbb
aam
lcall
int3
movsb
movsl
dec
dec
sbb
mov
int
test
jb
or
fldenv
xlat
imul
or
in
test
sub
dec
mov
out
fstps
sbb
xchg
mov
sarb
mov
add
mov
je
xchg
mov
rcll
out
lods
cmpsb
outsl
and
jns
sub
call
test
je
je
rol
mov
popa
pop
mov
mov
sub
dec
push
xlat
jae
xor
into
nop
stos
arpl
mov
xchg
scas
mov
sbb
xchg
or
sbb
scas
sub
roll
pop
sub
pop
push
xchg
decb
xor
cmp
out
push
mov
lcall
mov
das
outsb
imul
andl
sub
stos
loop
jle
stc
insl
out
dec
inc
in
push
movsl
pop
mov
cmp
and
jae
jb
pop
jne
cmp
mov
push
jp
popf
mov
mov
xlat
cmpsb
cmc
xchg
rcrb
das
or
cld
in
push
push
popf
push
lret
push
xchg
call
mov
insb
adc
jp
ds
lds
cmp
xchg
xchg
in
mov
adc
rolb
arpl
scas
lcall
pop
imulb
daa
xor
push
idivl
iret
outsb
movsl
and
lods
add
popa
xchg
out
aad
xchg
dec
mov
mov
sub
jb
call
or
inc
test
outsl
lock
dec
cmp
notb
jo
jae
adc
jg
mov
sbb
sub
dec
jge
or
nopl
ja
mov
inc
cmp
popf
test
fsts
pop
mov
loopne
inc
std
mov
dec
cmp
out
or
adc
push
lods
loop
aam
sub
scas
nop
std
push
jb
ljmp
mov
adc
xchg
iret
orl
pop
push
pop
in
mov
test
dec
jmp
xchg
sub
clc
mov
or
cmpsl
sbb
test
shl
jb
scas
lds
sbb
jb
scas
add
jns
and
scas
icebp
adc
rorl
sub
movsb
or
pushf
sbb
enter
nop
inc
pop
out
cmpsl
xchg
gs
leave
mov
inc
pop
jmp
lahf
or
xchg
add
scas
test
aas
movsb
mov
sbbb
das
ret
out
or
xor
ss
dec
add
mov
lea
inc
push
decl
cmp
shrl
jae
sbb
jl
dec
jecxz
sub
pop
xchg
test
cmp
shll
xlat
test
icebp
push
rclb
fdivr
cmpsl
add
loope
mov
mov
mov
sub
in
fsubl
jecxz
inc
insl
fucomip
xchg
arpl
sub
fcmovbe
imul
rcll
pop
pop
push
push
decb
sub
out
ds
dec
sub
jnp
sbb
cmp
js
jb
loopne
or
jg
cmp
lcall
and
pop
adc
repnz
mov
les
jo
mov
pop
sbb
mov
lret
or
ds
add
jno
test
sub
and
ss
shlb
jge
mov
mov
andb
loope
lds
or
pause
stos
movsb
popf
cmpsb
in
add
xor
das
inc
mov
scas
stc
stos
stos
cmc
push
aad
xchg
lock
add
sbb
enter
cmp
or
fsubs
xorb
loope
xchg
jle
arpl
cmp
int
loope
jl
mov
cmp
or
lahf
rcrl
pop
jnp
ljmp
pop
cmpsl
mov
adc
pop
es
cmpsl
dec
jns
orb
jecxz
in
cmc
adc
and
hlt
lods
inc
ss
sub
jmp
jae
or
data16
fcompl
xor
sub
cmp
aas
cmp
testb
dec
test
dec
mov
jp
push
mov
sub
jmp
jmp
enter
xlat
dec
fcmovne
push
imul
arpl
es
clc
push
mov
xchg
nop
int
testb
addr16
dec
inc
xor
out
cmp
xchg
xchg
or
mov
inc
leave
mov
push
sub
xchg
loopne
fisttpl
nop
mov
jmp
jne
lahf
subl
xor
scas
lahf
xor
xchg
inc
mov
adc
outsl
adc
push
xor
push
sbb
pop
imul
stos
lods
outsb
fistps
sti
outsl
pop
lods
sbb
dec
adc
lcall
xor
dec
mov
ljmp
inc
add
imul
gs
inc
in
mov
sar
loopne
pop
mov
gs
mov
int
int
fwait
es
test
sub
lods
mov
dec
inc
xchg
jge
adc
orb
add
fwait
xor
cmp
loop
int
jns
mov
ret
aam
lods
sub
fdivs
in
and
sbb
mov
adc
sahf
ret
rcrb
repnz
in
sbb
jp
xor
clc
adc
xchg
xchg
lea
sbb
or
xor
dec
inc
cs
sub
incb
dec
loop
sti
sub
out
out
stc
es
cmp
inc
cmp
mov
sti
jecxz
and
shrb
das
enter
xor
lret
push
pop
push
mov
and
insl
sub
push
popa
inc
dec
adc
fs
pop
lea
ss
out
jg
call
dec
cld
mov
or
and
mov
pop
jl
sub
cmp
mov
loope
sbb
cli
push
dec
inc
orb
xchg
mov
cld
out
cli
mov
jb
adc
mov
add
and
jbe
bound
sbb
jae
inc
xor
fucom
int3
mov
mov
cmpl
pop
jle
in
sbb
jb
xchg
aam
xor
and
std
or
mov
rclb
les
pop
stos
adc
dec
data16
mov
and
std
adc
je
fadds
adc
dec
mov
pushf
sbb
jb
andb
repnz
adc
mov
sti
fsubs
add
inc
jmp
nop
shrb
xchg
repnz
xor
or
lods
insb
movsl
cmc
arpl
shlb
popf
insl
loopne
xlat
xor
out
push
xchg
nop
ljmp
hlt
xchg
dec
adc
ds
push
in
sarl
fisttpll
and
pushf
jae
push
arpl
dec
add
and
ds
hlt
mov
in
stos
sarl
cs
lahf
outsl
xor
xchg
gs
adc
clc
or
add
inc
mov
insb
push
ret
cmpsl
notb
add
movsl
jno
push
and
movsl
fs
lret
and
pop
jmp
popf
lret
cli
jb
std
mov
inc
mov
pop
mov
add
outsb
inc
scas
dec
adc
ljmp
push
leave
pop
dec
gs
int
mov
and
popf
mov
arpl
lret
sahf
int
cli
dec
push
movsl
stos
sbb
mov
fnstsw
push
jae
in
cmp
push
cltd
test
and
testl
leave
add
inc
fildl
jmp
test
xchg
bound
and
pop
dec
pop
dec
in
scas
test
mov
xchg
push
pop
ljmp
test
ret
fs
add
lcall
jl
mov
xchg
das
jo
mov
int
inc
add
cmp
mov
repnz
mov
into
pop
gs
fcmovnbe
repnz
outsb
pusha
nop
shll
in
into
frstor
movsb
push
sub
leave
or
je
popa
push
cltd
xchg
int
out
or
mov
inc
jp
leave
popf
xchg
push
aaa
aad
js
push
movsb
inc
push
sbb
out
mov
outsb
adc
cmp
lahf
mov
jge
xor
insl
dec
out
jmp
jl
or
data16
and
pop
loopne
push
aas
and
fsubl
adc
in
mov
jnp
fwait
and
jno
icebp
push
push
xor
lods
fstpl
test
mov
lock
jno
push
and
adc
jae
xlat
sub
pop
out
ljmp
cli
icebp
hlt
xorl
fiaddl
jns
cmp
or
and
out
jge
adc
mov
cmc
std
xor
jae
push
sub
mov
ss
and
jo
rolb
adc
add
add
cmp
nop
adc
mov
jge
stc
cwtl
pop
mov
lret
sbb
int
cmc
push
lock
push
imul
and
push
int3
xchg
pusha
lods
out
in
xor
popa
shrb
nop
in
jle
or
incb
push
adc
orb
out
mov
and
mov
lret
xor
scas
lcall
insl
lods
mov
mov
sbb
push
lcall
or
cmp
sub
cs
jecxz
pop
sub
inc
xchg
push
jg
mov
dec
push
sbb
dec
jne
xchg
lds
dec
loop
jbe
das
add
es
ljmp
jne
cmc
sbb
rcll
cmpsb
mov
repnz
cwtl
cmpsb
fisttpl
nop
add
movsl
test
fldl2t
lret
sahf
mov
push
sub
sbb
push
cli
gs
sbb
popf
es
ret
pop
rclb
imul
outsb
jne
in
clc
outsl
mov
es
rcll
inc
dec
pop
sub
scas
pop
daa
sbb
lea
stos
add
mov
hlt
xor
jne
sub
outsl
or
mov
sti
pop
xchg
outsb
jp
outsl
sbb
xor
and
or
shrl
scas
stos
xor
and
js
aad
mov
xor
out
iret
iret
outsb
ror
jae
push
jmp
adc
out
insl
jp
int
stos
cmpsb
aam
addr16
je
je
mov
rcr
push
std
and
jae
int3
xchg
stos
notb
push
hlt
sub
pop
jns
sbb
mov
js
cltd
stc
insb
add
push
pop
lret
clc
jecxz
and
xchg
dec
mov
sbb
mov
jbe
cmp
jae
stos
adc
repnz
out
mov
fadds
xor
ds
and
adc
leave
jp
or
xchg
data16
and
lcall
adc
and
divb
mov
mov
and
in
fstps
aas
xor
cmp
outsl
stc
rclb
fnop
vunpcklps
inc
test
inc
sbb
sub
out
je
mov
dec
or
mov
repz
mov
loop
je
test
mov
adc
mov
jno
cwtl
xor
scas
jns
xor
xchg
jb
mov
add
mov
sub
adc
xchg
push
xchg
fimuls
mov
das
ljmp
mov
push
mov
dec
or
movsl
imul
les
pop
test
dec
dec
or
ret
push
pop
mov
call
fnstcw
mov
mov
add
cmc
lahf
lea
add
imul
lods
jg
lahf
jno
rcll
adc
cmp
call
jmp
push
cmp
bound
xor
xchg
sbb
add
push
pop
add
sti
mov
repz
push
push
cmp
ljmp
fs
push
loopne
movsl
mov
add
outsl
mov
or
dec
out
push
dec
cs
std
push
dec
bnd
pop
pushf
insb
roll
lret
xor
adc
jge
cmc
sti
dec
mov
incb
xchg
add
dec
jl
test
fldlg2
mov
add
ret
cmp
jno
push
cmpsl
sub
sahf
scas
sub
dec
mov
mov
les
xor
in
add
mov
xchg
mov
cmp
popa
mov
cmp
enter
inc
mov
incl
push
jmp
cmc
stos
push
jae
and
sub
cmpsb
pushf
sbb
dec
test
xchg
jb
scas
sbb
ljmp
lret
mov
ds
ds
jo
stos
enter
add
sbb
push
push
jmp
dec
stos
pop
je
ds
ret
in
push
leave
jno
sahf
sub
lcall
jmp
mov
fidivl
out
dec
data16
cmpsl
jo
nop
dec
or
jge
daa
nop
jecxz
sbb
adc
rclb
add
arpl
lods
mov
mov
scas
xchg
cmp
rep
push
aas
dec
aaa
jns
mov
inc
mov
in
jl
lahf
cmp
push
push
fwait
pop
ljmp
arpl
insl
push
inc
cmp
shr
leave
mov
adc
sub
fwait
jecxz
lea
pusha
sbb
pop
fsubrl
daa
cmp
insb
mov
enter
xor
mov
cli
scas
inc
bound
and
sub
mov
xchg
imul
push
inc
add
fcmovnb
sub
jecxz
int
call
pop
arpl
loopne
adcb
push
jns
xchg
dec
repz
fisubrs
add
test
sub
pop
loope
scas
in
dec
imul
data16
xchg
xchg
add
jg
pop
roll
mov
stos
adc
lods
push
sub
lea
fldt
mov
ret
jp
int3
fsub
jp
cli
xchg
stc
mov
imull
push
inc
xchg
mull
and
stc
das
test
mov
sbb
aas
mov
sets
lea
nop
or
push
mov
xor
lods
xor
sub
out
arpl
adc
inc
cmp
push
test
pop
idivb
dec
add
xor
and
fwait
js
aas
cmc
jecxz,pn
and
push
mov
mov
xlat
addr16
out
inc
dec
lcall
add
iret
pop
jp
jbe
xchg
imul
testb
add
mov
sbb
cmpsb
insb
jecxz,pt
pop
mov
jl
sub
mov
add
repnz
inc
dec
cld
mov
pushf
leave
cmpsb
call
mull
xchg
enter
mov
xchg
rorb
cmp
out
mov
fimull
sarl
cmp
adc
adc
scas
mov
in
pop
test
mov
daa
xchg
je
mulb
addr16
js
or
mov
adcb
jl
jg
rcrl
lock
idivb
pop
mov
push
sbb
pop
sbb
mov
sbb
scas
jge
inc
ror
mov
sub
pop
mov
add
push
mov
xchg
aam
jp
pusha
and
pop
adc
aaa
cmpsb
bound
repz
push
sti
or
mov
jge
pusha
mov
fcomps
pop
push
sti
adc
mov
fsubrl
nop
jecxz
mov
dec
pop
mov
xor
sbb
xchg
adc
dec
dec
hlt
cmp
and
jmp
imul
jnp
dec
stos
mov
roll
lods
cmpl
inc
scas
mov
sbb
xor
and
dec
es
xchg
int3
push
aaa
and
xchg
int
je
leave
cs
js
inc
mov
inc
jno
mov
push
jecxz
out
pop
and
dec
sub
dec
dec
or
push
mov
cmp
je
fsubrl
cmpsl
ljmp
sbb
mov
cmp
mov
mov
add
cmp
mov
sbb
mov
pop
sahf
aad
mov
xchg
cld
push
mov
cs
fldenv
pop
mov
stos
xchg
push
jg
xchg
daa
add
test
adcb
mov
js
cltd
data16
lret
push
or
or
sub
push
lock
inc
fs
rclb
push
cmpsl
lcall
pop
jbe
push
daa
or
or
aaa
cmp
pop
mov
lock
and
xor
icebp
rcr
jl
dec
mov
xchg
xchg
daa
mov
stos
xor
rolb
roll
inc
xchg
cmpsl
push
test
out
jbe
cli
add
pop
imul
stos
inc
outsl
es
mov
pop
into
inc
rolb
int3
sbb
fwait
jno
dec
out
push
inc
jge
mov
fs
inc
fldt
inc
les
sub
cli
mov
push
mov
xor
ja
movsb
add
aaa
sbb
fs
cmp
lods
test
add
adc
inc
cmp
push
mov
mov
cli
cld
dec
inc
xchg
sub
mov
adc
inc
adc
outsb
jb
sbb
sbb
mov
insl
jo
inc
mov
jb
mov
outsb
es
mov
std
repnz
call
pusha
inc
add
push
stos
ret
sbb
add
push
mov
sub
lret
cmp
notl
outsb
scas
cmp
push
hlt
loopne
int3
fs
dec
pop
jbe,pt
ret
sbb
dec
xor
fiadds
jb
mov
xlat
cmc
fcoms
push
cmpb
xchg
add
call
sbb
jge
lret
dec
sahf
mov
xchg
adc
xchg
pop
arpl
xchg
test
cmp
xlat
jl
mov
adc
in
inc
dec
out
push
fstpl
daa
filds
inc
out
push
mov
sub
cmp
add
loope
fdivr
imul
cmpsl
pop
clc
repnz
cmc
add
add
fwait
push
inc
xchg
jae
fidivs
mov
fcoms
and
mov
ljmp
mov
lock
les
ficoml
icebp
mov
fwait
or
ret
mov
push
test
pop
cmpb
outsl
sub
imul
into
xor
les
imul
mov
adc
push
xor
lds
mov
incl
loop
loopne
xchg
int
jb
sbb
cmp
lret
dec
push
mov
push
inc
inc
jb
push
or
push
adc
jne
push
jo
sbb
imul
add
push
mov
mov
sete
shrl
adc
loop
subb
lea
aam
add
mov
or
and
and
cmp
int3
mov
cmp
lds
mov
pop
push
xlat
jmp
dec
jl
aas
or
stc
fs
in
pop
les
pop
and
xchg
pop
sbb
cmp
push
pop
jnp
cmp
popl
scas
sub
scas
adc
xorl
push
push
sub
fdivr
lret
imulb
jp
or
popa
lds
pushf
jns
in
cwtl
cmp
cmpsb
lock
mov
popf
stos
push
out
cmpsl
xor
fs
sti
shrl
stos
sub
and
leave
out
lret
es
scas
and
push
enter
cmp
mov
scas
fs
adc
mov
inc
bound
mov
and
lcall
add
sbb
std
std
mov
adc
test
and
pop
nop
std
push
mov
adc
and
ret
les
fimull
out
decl
sub
mov
arpl
stos
push
insl
pop
cwtl
fucom
mov
inc
outsl
jno
push
psrlw
cwtl
in
sub
shlb
out
gs
mov
jmp
aaa
icebp
mov
pop
mov
int
dec
mov
jae
loop
xchg
movsb
mov
pop
pcmpeqd
add
dec
mov
inc
lret
mov
cmpsl
jmp
lods
shl
lret
mov
jb
pop
xchg
sub
sbbl
in
ljmp
subl
push
js
test
dec
lock
stos
mov
call
mov
xchg
test
add
add
inc
or
push
add
icebp
out
or
scas
jg
mov
pop
mov
jecxz
sbb
pop
push
fs
sbb
sub
icebp
push
int
or
mov
push
addr16
mov
sub
mov
or
sar
xor
in
xlat
mov
fcompl
dec
or
mov
sbb
jecxz
enter
sahf
dec
cmpsl
sbb
push
rol
sub
pop
ret
jmp
int
mov
jg
cmp
lods
mov
sarb
nop
in
test
out
pusha
out
xor
sbb
jp
pop
dec
xchg
int3
pop
inc
push
in
subb
xchg
pop
ss
repz
cmp
jbe
ret
push
cmpb
fnstcw
in
inc
or
dec
shlb
adc
mov
jnp
mov
mov
pop
inc
add
inc
add
shlb
addr16
xor
xchg
test
in
sub
hlt
daa
js
xor
popa
loope
shl
aad
mov
aaa
lahf
mov
xor
add
sarb
sahf
outsl
cmpsw
int3
jp
mov
jmp
pop
xor
inc
adcl
pop
cmp
mov
mov
or
sbb
cmpsl
jecxz
lea
sbb
jb
mov
lods
add
mov
jno
inc
fcoml
jne
mov
mov
sub
scas
add
leave
in
xor
jl
cmpsl
fs
jmp
add
lods
scas
adc
cwtl
pop
repnz
mov
push
jns
das
fnstenv
xor
rcll
in
inc
dec
iret
xchg
lods
movsl
out
fisubrl
sub
mov
sub
push
jecxz
lods
lods
movsl
inc
adc
push
and
add
dec
xlat
pop
jge
fnstsw
mov
into
pop
repnz
jae
jnp
lea
mov
movsb
lret
in
add
push
call
pop
in
mov
mov
mov
rcr
rclb
lret
cmp
adc
mov
jno
pop
out
xor
leave
es
leave
jge
fsubs
out
or
inc
enter
fisubrs
insb
xchg
sarb
clc
xor
and
setp
jmp
fdivrl
gs
inc
icebp
push
enter
nop
push
pop
imul
std
or
sub
mov
fwait
into
pop
je
pop
rcrl
movsb
push
ret
cmpsb
shr
inc
jno
cld
mov
or
into
xor
pop
movsl
mov
lret
dec
sub
mov
outsb
lds
mov
jl
sub
inc
jle
int3
inc
mov
mov
cmp
xchg
ja
inc
xchg
and
xor
jae
jbe
cs
int3
idiv
dec
adc
les
mov
mov
mov
inc
dec
fwait
test
inc
out
shrl
adc
test
push
lahf
insl
iret
xchg
dec
push
xor
lret
xorl
imul
into
stos
and
cwtl
stos
mov
sbb
clc
mov
rclb
jmp
xchg
mov
and
ret
or
xchg
dec
scas
mov
ljmp
jg
fsubp
ja
inc
or
hlt
out
xor
add
add
negl
insl
or
jmp
mov
lea
mov
mov
andl
mov
push
inc
clc
ds
shlb
stos
sub
mov
add
cmp
loop
fwait
les
push
lea
hlt
add
add
sbb
jb
movsb
fisubrs
out
and
cmpsl
cmpsl
xor
dec
mov
adc
fistl
jge
lea
sarl
xchg
sbbl
lock
or
pop
xchg
fwait
add
xchg
stos
stc
outsl
adc
imul
and
stc
pop
adc
push
orb
in
test
push
out
mov
mov
mov
out
into
jg
fisubrs
mov
jmp
xor
cli
or
int3
mov
add
or
mov
push
iret
ficompl
xchg
dec
mov
mov
add
mov
ljmp
mov
nop
xor
xlat
dec
lds
sarl
lods
xor
pop
push
sub
mov
repz
push
adc
adc
cli
lods
push
gs
pop
push
fcmovb
cmpsl
loop
lock
cmc
push
repnz
cltd
mov
jo
cmp
or
xor
push
add
cld
mov
out
mov
pop
emms
out
fcompl
ss
mov
add
jle
push
push
sbb
lods
jb
out
inc
sub
xor
and
inc
add
sbb
leave
add
adc
jge
jbe
sbb
xor
xchg
in
repnz
int3
inc
push
push
shl
nop
cwtl
xchg
xlat
test
fucomp
inc
inc
aaa
xchg
pop
ss
jae
xchg
and
ret
test
jbe
jmp
add
pop
xor
loopne
sub
sub
mov
pop
push
sbb
push
pop
xor
sub
lock
sbb
iret
dec
dec
mov
xchg
adc
jno
test
subl
imulb
jecxz
pop
mov
xchg
lock
jmp
jbe
adcb
inc
push
lods
ljmp
mov
lret
mov
mov
ret
and
addr16
mov
and
in
xchg
mov
xor
sbb
aas
pop
push
into
dec
std
jl
mov
repz
loop
daa
repnz
or
out
loop
push
push
mov
cmp
adc
push
test
in
in
or
mov
outsb
cwtl
add
adc
mov
xchg
push
aas
dec
mov
mov
aas
add
dec
in
add
insb
outsb
jb
mov
movsb
adc
push
repnz
mov
mov
lcall
dec
sbb
jge
cmp
sub
or
test
xchg
adc
xor
ror
iret
cmpsl
leave
pop
pop
adc
jae
mov
inc
lret
loopne
lods
dec
xor
add
out
loope
mov
jns
jp
xchg
in
addr16
fldenv
or
rclb
nop
ljmp
add
sub
xchg
mov
cmp
cltd
inc
push
cld
pop
cmp
orb
pop
cwtl
add
inc
sahf
into
sbb
lods
cwtl
jo
test
dec
lock
add
mov
mov
enter
loope
sub
into
ret
add
scas
imulb
outsb
fs
shll
add
mov
inc
sti
adc
xchg
jno
dec
shrb
pusha
shr
loop
jb
mov
xor
or
sbb
out
out
mov
ja
shr
add
push
dec
popf
dec
ljmp
xchg
pop
cwtl
cmp
std
or
mov
pop
cmp
add
inc
sub
shl
pop
sbb
jg
setg
std
outsb
fidivs
mov
jmp
or
in
shrb
loope
ljmp
xchg
loopnew
adc
push
xor
jae
testl
adc
call
or
movsb
mov
push
insb
aam
fwait
jge
lret
into
ret
xchg
pusha
and
icebp
jae
xor
sub
jno
pushf
cltd
or
cmp
mov
xchg
add
push
inc
inc
jns
inc
xchg
mov
cmpsb
sub
xor
xor
std
sub
pop
push
dec
pop
aad
or
cmp
loope
pop
mov
mov
test
pop
arpl
cltd
sub
sub
aas
jnp
out
adc
fistl
ret
sbb
ljmp
xor
or
pop
addr16
mov
cmc
add
js
loope
insb
xchg
movsl
lods
loop
xor
dec
sti
xchg
mov
in
mov
jl
mov
pushf
push
mov
ror
xchg
and
push
stos
iret
jo
lds
fwait
push
fs
inc
push
sahf
sbb
fldt
xchg
mov
rcrb
pop
dec
mov
sub
shlb
jmp
icebp
add
and
mov
out
inc
push
shll
jg
and
push
cmp
leave
inc
ret
imul
hlt
bswap
insb
daa
out
jecxz
pop
in
jg
frstor
lods
aaa
dec
inc
push
pusha
push
les
jne
mov
aad
cltd
bound
xlat
mov
fcompl
and
sub
sbb
bound
and
adc
push
mov
ljmp
mov
push
pop
pop
dec
jecxz
ficoml
in
inc
push
mov
add
mov
pop
add
rcrb
push
and
pushf
push
mov
pop
stos
xchg
fdivs
dec
inc
add
sarb
jmp
mov
gs
cmp
loopne
xchg
adc
add
cli
adcb
lods
jae
test
fwait
lods
adc
sub
fimuls
pop
dec
loopnew
mov
sbb
inc
jge
out
cwtl
addb
aad
jbe
mov
dec
addr16
gs
push
jg
fstps
cmpsl
dec
loop
and
push
aad
adc
repz
cmpsl
and
outsl
stos
xor
mov
push
mov
mov
daa
adc
stc
mov
or
jb
pop
add
xor
in
and
arpl
call
mov
adc
aad
mov
bound
jmp
mov
daa
push
mov
sbb
clc
jmp
push
jno
je
add
dec
bnd
lret
mov
push
cmpsb
hlt
out
fnstcw
fisubrs
test
or
inc
lods
mov
notb
adcl
sahf
inc
movsb
inc
jle
jge
loop
inc
fwait
popf
data16
xchg
sub
dec
cmp
out
addr16
mov
fnstsw
test
push
insl
imul
xor
add
out
sub
sbb
insb
lds
push
pop
imul
insb
iret
imul
outsb
iret
inc
pop
popf
add
aas
mov
pop
call
push
mov
pop
push
popa
aaa
adc
xchg
or
xor
sub
aam
mov
push
pop
adc
cltd
sub
into
cmp
movsb
add
sub
aas
rcr
xor
js
leave
int
mov
mov
add
cltd
clc
mov
cmp
jecxz
repnz
rcrb
xchg
push
sub
mov
sub
mov
test
jmp
lcall
test
xor
pop
in
cltd
dec
push
inc
loopne
xor
into
insl
lods
and
pop
scas
adc
ss
jo
adc
xchg
into
or
push
leave
jp
arpl
adc
lds
push
mov
cmpsb
dec
inc
push
addb
test
push
push
lret
cli
outsl
and
mov
xor
in
xchg
mov
push
mov
push
add
cmpsb
xchg
lds
jp
cmp
dec
enter
pop
and
xchg
adc
fs
or
mov
insb
mov
int3
inc
rolb
mov
mov
mov
pushf
jae
mov
popa
lds
js
dec
xor
dec
push
xor
inc
fwait
sbb
out
cmp
ret
sti
cmpsb
xchg
popa
inc
test
data16
es
shl
lea
jne
xorb
fdivrl
je
mov
mov
xor
rcr
and
xchg
dec
sub
jp
jmp
fdivrp
popa
push
mov
xor
out
jnp
mov
xor
arpl
pop
mov
mov
mov
sbb
outsb
fsts
fisubrl
adc
mov
mov
mov
leave
addb
jl
jno
aaa
pand
sbb
push
addr16
stos
jmp
mov
lock
ja
aam
pop
roll
jns
notb
xor
add
sti
add
aad
sub
ret
mov
jns
data16
insl
dec
sub
lea
shrb
adc
bound
aaa
and
add
sub
cmp
repnz
sahf
cmp
in
adc
daa
or
loope
cwtl
jle
sub
inc
sub
sbb
into
in
test
push
jbe
inc
in
fwait
loop
dec
sbb
jae
test
lret
and
je
fidivl
gs
mov
adc
jge
sbb
enter
aas
movsb
jne
lahf
push
xor
adc
xchg
js
mov
sbb
mov
and
outsl
popf
adc
xchg
push
dec
std
xlat
jl
or
pop
ljmp
add
cltd
jmp
imul
out
pop
pop
ret
mov
leave
jae
ljmp
sub
loopne
jnp
cld
mov
enter
mulb
inc
mov
lods
jnp
daa
mov
lods
push
inc
push
imul
add
pop
xchg
cmc
not
jns
pop
inc
mov
mov
and
les
shr
mov
movsl
mov
xchg
mov
lock
mov
loopne
outsl
sbb
out
xchg
stos
push
mov
mov
or
aaa
sbb
adcb
sub
dec
outsl
jb
aam
push
add
fsubs
adc
cli
dec
sbb
adc
add
sbb
jecxz
mov
mov
sbb
dec
and
cwtl
and
test
frstor
mov
jmp
sbb
pop
cmovbe
or
push
icebp
sar
lods
cs
jmp
dec
push
adc
adc
movsl
push
jno
scas
jns
adc
mov
stos
jnp
or
sub
out
jae
outsw
jl
in
push
data16
push
and
jns
inc
cli
cld
dec
xchg
out
cmpsb
and
lea
mov
jbe
adc
dec
movsb
mov
sahf
sub
push
sbb
mov
and
lea
push
fnstenv
pop
add
jmp
mov
cld
pop
sahf
imul
adc
cld
xor
dec
cmp
ljmp
sbb
inc
nop
clc
loop
mov
pop
lods
mov
mov
or
push
jae
push
cmp
xor
test
orps
mov
es
loopne
sub
xchg
jb
sub
dec
jge
testb
sub
mov
sub
mov
loope
mov
arpl
test
movsb
add
mov
push
cltd
iret
out
pop
les
and
mov
or
fcoml
les
cli
leave
push
pop
mov
loope
cmp
insl
cmp
cld
pop
in
push
push
xchg
and
push
stos
adc
sub
and
dec
das
adc
dec
mov
add
shlb
shrb
adcl
bound
std
cmp
bound
dec
lods
pop
in
mov
pop
loopne
push
cmp
ljmp
int3
ja
movsb
pop
add
cmpsl
cmp
jns
adc
pop
inc
dec
into
addr16
into
ljmp
pop
popa
xor
pop
das
popa
dec
loop
add
imul
and
ds
das
jo
ljmp
push
out
xor
outsb
cmpsl
push
in
ss
nop
pop
iret
or
jecxz
add
or
pop
mov
inc
mov
and
filds
mov
ret
mov
jns
std
pop
inc
cwtl
aam
jmp
out
hlt
jns
mov
xchg
mov
lcall
imul
shrl
adc
push
mov
stos
push
movsb
pop
cmp
icebp
arpl
fs
aas
test
inc
mov
mov
pop
imul
iret
out
cld
push
xchg
pop
fwait
pop
xchg
aad
add
fwait
pop
add
xor
fisttps
test
fcmovnbe
shrb
pop
or
out
and
dec
cmp
and
sti
movsl
sub
mov
or
cmp
imul
lahf
mov
sbb
jo
mov
incb
sub
push
orb
pop
out
or
sbbb
aad
daa
inc
mov
dec
sti
mov
cmpb
mov
mov
icebp
dec
pop
sub
scas
pop
inc
push
cmp
loopne
push
mov
xor
in
or
mov
and
xchg
lret
cmp
add
leave
negl
mov
mov
stos
jecxz
imul
ret
scas
stc
sub
or
js
or
xchg
add
xor
mov
cmpsb
pop
ret
sub
inc
cwtl
js
repnz
and
jg
and
push
addl
lock
scas
sahf
jmp
mov
mov
dec
movsb
hlt
mov
xchg
inc
ss
inc
insb
jle
int
lcall
nop
movsl
mov
hlt
cmp
xchg
sbb
fisttpll
fsubrl
sbb
jns
jb
bound
clc
mov
jecxz
jle
xchg
adc
or
mov
mov
fcmovbe
xor
mov
add
nop
jp
loope
fcoms
sub
in
fiaddl
into
lret
or
push
cmp
inc
push
pop
jg
lock
test
mov
stos
pop
stos
inc
mov
mull
movsb
xchg
stc
enter
push
dec
push
lret
aas
add
insb
and
sub
xor
lret
loopne
sti
shl
sub
clc
enter
lret
cwtl
mov
inc
add
loope
jno
bound
mov
sbb
inc
or
mov
xchg
es
xchg
je
jbe
stos
mov
mov
cmpsb
daa
ss
fidivrl
or
mov
xor
dec
in
cmp
mov
movsl
cmp
lret
ret
pop
mov
into
and
outsb
cltd
dec
dec
ja
adc
loope
js
sbb
push
mov
jmp
hlt
ret
and
fwait
jmp
dec
repz
adc
out
inc
outsl
and
pop
sbb
addl
jp
mov
inc
mov
or
adcl
xor
mov
adc
mov
jb
inc
repnz
ret
sahf
or
inc
xchg
or
ljmp
data16
dec
fwait
out
jo
mov
ret
scas
adc
insl
ror
xor
pop
cmovg
ja
add
push
add
sahf
mov
cs
or
repnz
das
push
insb
enter
lods
xchg
mov
jmp
lahf
lret
adc
push
notl
jns
and
pop
fwait
das
mov
shlb
ret
cld
ds
jge
cwtl
repz
fptan
jl
dec
jmp
sbb
stos
sub
or
lods
or
fisttpl
xor
movsb
mov
repz
push
mov
dec
daa
xchg
cld
shll
adc
hlt
xchg
inc
pextrw
xchg
jb
lds
sbb
sub
arpl
pop
pop
pop
adc
std
dec
add
call
jnp
in
mov
sti
insl
inc
fiadds
in
sbb
jl
fistpll
je
stc
clc
sub
xchg
xor
mov
fistps
sub
or
flds
xchg
nop
outsb
jl
icebp
sub
test
jno
ljmp
sub
jb
pusha
les
mov
stos
gs
es
loope
jno
into
shll
dec
out
fcmove
push
inc
jmp
sahf
cmp
jb
pand
push
scas
fldcw
xor
xor
sub
jne
sbb
add
imul
xor
movsb
out
add
iret
add
jne
pop
adc
mov
lods
push
inc
std
or
arpl
js
jge
or
sbb
add
cmpsb
jle
or
loope
rcrb
jne
popf
jnp
push
je
xor
mov
cmc
leave
hlt
or
pop
adc
dec
sbb
sbbb
out
addr16
adc
out
pop
adc
jmp
mov
das
out
sbb
adc
jb
cwtl
mov
lret
jne
cs
lcall
fbstp
xor
negl
xor
pop
movsb
dec
adc
cmp
mov
cld
push
daa
aaa
fsubl
dec
scas
pop
jecxz
into
shll
pop
pop
movb
fcmovnb
or
sub
mov
xchg
jl
inc
negl
or
add
jmp
xorl
sbb
mov
shll
xor
std
je
int3
int3
sub
push
xchg
cmp
xchg
add
pop
mov
mov
dec
or
cmc
rcll
mov
sbb
aad
fs
mov
icebp
imulb
imul
je
int
cs
xchg
push
pop
mov
mov
mov
xchg
imul
popf
inc
mov
fsin
inc
sbb
add
je
add
mov
les
and
or
insl
ljmp
sbb
cmp
mov
push
jne
repz
pop
pusha
jbe
fxch
jo
hlt
mov
lret
push
hlt
test
cmp
sbb
push
mov
lds
add
mov
addr16
mov
sub
pop
ja
xchg
xchg
mov
sub
push
push
sub
jg
jle
and
arpl
js
mov
dec
pop
jmp
insl
add
add
cli
inc
sub
sub
add
mov
shl
pop
dec
push
ss
in
xor
scas
cmp
dec
repz
add
movsl
ds
mov
out
adc
je
clc
mov
loop
cmp
mov
jp
int
std
inc
pop
sbb
stc
inc
add
hlt
mov
xchg
pop
xchg
jbe
lret
lcall
call
adc
into
stc
xorl
mov
push
adc
popf
pop
mov
xor
sbb
test
jl
adc
push
loopne
lods
mov
pop
and
push
jmp
mov
cmp
or
mov
scas
inc
mov
adc
xchg
jae
mov
pop
cmpsl
pextrw
sub
imul
pop
ds
std
mov
hlt
negb
sbb
notl
mov
enter
insb
xchg
cmp
icebp
lret
xchg
pop
adc
in
inc
mov
mov
mov
push
cld
mov
imul
pop
add
lcall
pop
mov
out
dec
outsb
gs
bound
dec
lcall
sub
cmp
add
sub
push
dec
cli
rcrl
mov
clc
push
jl
dec
lods
inc
push
and
sub
imul
mov
and
and
leave
daa
repz
subl
movsb
pop
lods
cmpsl
xchg
addb
add
imul
mov
es
leave
jmp
xchg
test
pushl
int
xor
js
xorb
idiv
pop
fisttps
clc
xor
cmc
subb
jl
jne
lds
into
jge
sbb
pop
lcall
cmp
jno
sahf
lea
mov
and
inc
outsl
add
nop
fs
shl
addr16
xor
jp
jne
aam
push
mov
mov
cmpl
jns
pop
jle
pop
jno
sub
adc
arpl
add
and
push
shrl
ds
stc
test
mov
mov
xchg
or
xchg
cli
add
and
jg
adc
fbstp
jmp
xorl
sbb
out
xchg
jl
shll
in
test
fsubl
cs
fwait
cmc
inc
in
setae
rorb
gs
push
fs
fisubrl
mov
inc
leave
mov
jnp
jle
sbb
lds
out
popa
in
out
popl
insb
into
mov
mov
mov
sbbb
adc
ljmp
sbb
xchg
sbb
popf
xchg
cmp
jecxz
fidivrl
pop
xchg
adc
push
outsl
and
aam
push
divb
in
daa
test
lods
xchg
in
mov
out
mov
mov
sbb
fisubs
xchg
mov
xor
sub
inc
cmpsl
dec
or
fstl
dec
pop
iret
in
xorb
dec
dec
push
movsb
scas
pop
scas
insl
lahf
sahf
ss
call
cmp
cmpsl
insb
loopne
movsb
int3
ret
cmp
les
adc
mov
aam
jle
mov
nop
and
fimull
cmpl
xchg
ror
jp
sahf
aas
hlt
fwait
adc
xor
fdivrl
imul
push
jnp
fsubs
mov
bound
leave
mov
add
mov
xchg
push
mov
mov
mov
xor
inc
in
xchg
and
push
lcall
mov
aam
ret
loop
xchg
sub
ret
fldenv
test
mov
push
inc
div
push
mov
jbe
and
mov
pop
inc
cmp
xchg
mov
jmp
movb
mov
rcrb
stos
sbb
hlt
pusha
clc
mov
outsb
in
sub
nop
insb
les
push
mov
cmc
arpl
inc
jle
jg
pop
add
add
adc
or
in
enter
lea
mov
or
insl
insb
xor
sbb
mov
xor
push
out
cmpl
dec
dec
sbb
jp
push
fnstsw
add
out
mov
cmp
or
sbb
bswap
rorb
mov
jle
negb
jmp
mov
adc
adc
jmp
cmc
shr
pushf
mov
or
insb
aaa
cld
ljmp
pop
pop
mov
pushf
fiadds
push
mov
mov
and
int
mov
stos
xor
stc
xor
jecxz
and
sub
mov
jb
int3
dec
hlt
xor
movsb
cmpsb
add
es
xchg
enter
aam
dec
stos
push
add
outsl
fiaddl
or
push
adcl
bound
xchg
je
arpl
jecxz
pusha
push
cli
xchg
mov
cmp
pop
adc
ja
add
jne
iret
cmpsb
sbb
ljmp
dec
test
lods
stc
fldcw
stos
mov
fadd
es
sub
test
cmp
mov
ss
fstps
xchg
xchg
jo
jmp
popf
mov
xchg
or
pop
lret
mov
insb
mov
iret
in
mov
and
sub
mov
sub
lret
jae
test
jb
sub
pop
daa
jne
cmp
insb
outsl
dec
jnp
outsl
pop
stos
getsec
movups
stos
cmc
movsb
pop
leave
call
jmp
cmp
imul
repz
dec
mov
insb
out
scas
pop
mov
cmp
cmp
es
jl
cli
add
and
test
and
stc
adc
and
sub
call
out
stc
shll
sbb
mov
jle
xchg
test
and
aad
js
scas
or
sub
cmc
je
test
mov
jns
push
sbb
cmp
push
dec
stc
add
test
loope
mov
cmpsb
cs
rol
add
jmp
sbb
xor
fwait
jp
test
jmp
in
jb
lods
hlt
jge
mov
mov
mov
inc
fstpl
stc
fmul
adc
fcomps
loop
repz
sarb
mov
cmp
enter
nop
lds
out
xchg
js
test
cmpsl
sub
xchg
inc
jns
aas
sub
imul
sarl
dec
shrl
cmp
mov
lahf
std
es
lret
xchg
iret
testl
in
xor
fists
outsl
icebp
adc
ret
std
jb
scas
pause
mov
dec
paddusw
inc
rcl
pushf
jmp
sub
fwait
popf
jns
shrl
mov
jae
cmp
xchg
cmpsl
cmp
inc
mov
rorb
pop
xchg
push
cmp
mov
dec
mov
jnp
call
xor
es
inc
mov
mov
movsb
sub
sbbl
scas
repnz
jl
aaa
xor
pushf
and
loop
mov
pop
outsl
add
add
or
dec
sbb
pusha
or
mov
leave
fbstp
lret
rolb
sub
fs
cmp
and
sarb
mov
xchg
movsb
mov
outsb
mov
lcall
roll
ret
lahf
xchg
inc
and
and
jp
addr16
addb
stos
mov
pop
ljmp
cmpsl
mov
add
xchg
or
into
jb
push
cmp
add
popf
fsubl
rcrl
shrl
notl
outsb
add
push
or
xchg
mov
nop
lret
loop
popa
cmpsl
insl
incb
cmp
or
xor
or
rorb
and
xor
inc
push
push
mov
dec
or
pusha
xchg
jb
and
push
enter
popa
push
pop
sub
pop
sbb
xor
out
xchg
xchg
or
xor
sbb
fidivl
xorb
inc
add
mov
pusha
xchg
repz
ror
pop
pop
pop
lea
adc
movsl
lcall
inc
dec
ret
pop
sbb
sti
outsl
pop
and
out
cmp
ret
das
fs
popf
cmc
push
insl
pop
jo
je
bound
rcpps
fimull
fimull
repnz
arpl
outsl
ljmp
stos
add
je
inc
sbb
shlb
xor
leave
in
ja
icebp
mov
shr
xchg
mov
inc
adc
addr16
jb
cmpsb
in
pop
out
fldl
xchg
xchg
and
pop
xchg
mov
daa
cmp
mov
outsb
out
adcb
dec
xor
fnstsw
inc
pop
mov
lcall
stc
movsl
ffreep
push
mov
js
int
subb
jge
jmp
shlb
adc
idivb
pop
clc
mov
inc
adc
jns
pop
rcll
mov
mov
cmp
lock
fimull
jnp
cli
mov
cmpsb
fdivrl
stos
repnz
aas
lods
pop
push
add
jg
push
filds
mov
je
clc
clc
loopne
repz
aaa
mov
roll
lds
fwait
xlat
ret
cmp
pusha
sbb
hlt
shlb
and
loopne
mov
push
dec
leave
jecxz
mov
adc
add
sbb
pop
cmp
pop
popf
sbb
fists
xor
fwait
pop
insb
mov
pop
scas
xchg
sarl
js
mov
cmp
fwait
cmp
pop
das
roll
outsl
xchg
bound
mull
in
shll
jno
cmp
or
ret
dec
mov
mov
stos
ljmp
ljmp
cltd
roll
mov
sahf
adc
xor
jecxz
stos
xor
int
xchg
dec
into
out
fildl
inc
xchg
pop
ljmp
cmc
insb
add
nop
movsl
lret
cmp
fnstsw
mov
data16
dec
mov
push
lea
or
mov
movsl
or
sbb
in
or
pop
xchg
add
rcll
scas
push
lret
add
adc
call
rcl
movsb
incb
and
test
jp
xchg
xor
shlb
xlat
popa
xor
dec
inc
xlat
dec
mov
cli
ret
xchg
movsl
lret
sbb
push
out
movl
call
sub
and
push
pop
imul
push
lret
adc
push
cmp
insb
pop
mov
repz
lods
push
loop
push
xchg
pushf
test
repz
dec
mov
gs
mov
stos
adc
out
test
dec
fwait
xor
fsts
outsl
push
in
jecxz
jno
lea
call
ret
sahf
mov
je
loopne
mov
enter
movsl
fbld
push
sbb
outsl
jge
nop
fcomip
pusha
and
loope
shlb
mov
pop
dec
push
roll
mov
mov
push
jmp
arpl
loop
mov
ficomps
mov
xor
mov
pop
outsb
data16
adc
imul
dec
push
xor
test
leave
lods
nop
rorl
pushf
insl
cmpsl
lock
adc
cmp
das
lock
lock
dec
call
cld
popf
cli
leave
sbb
or
addr16
mov
lret
in
push
xorb
fnop
jnp
inc
subb
add
out
aad
mov
xchg
pop
mov
fmull
jle
lret
dec
aas
mov
inc
dec
aad
mov
mov
out
cmp
daa
sub
lea
jle
adc
cmpsl
mov
or
clc
daa
mov
xlat
or
dec
out
imul
shlb
cmp
jecxz
adc
and
mov
fwait
sahf
ds
mov
xor
clc
jl
sbb
mov
xor
sub
call
sub
inc
xchg
movb
lret
mov
call
les
dec
add
jns
test
dec
mov
sub
outsl
push
lcall
je
fidivrs
mov
push
pop
xchg
cltd
js
jg
push
xchg
mov
dec
xorb
add
mov
fwait
out
or
jecxz
in
and
std
mov
into
icebp
cmc
pop
jl
sar
sbb
mov
test
ror
in
lahf
sarl
xchg
xchg
les
xor
stos
std
mov
cmpsb
movsb
pop
and
push
lahf
mov
in
jno
cmpsl
jae
movb
pop
out
dec
sbb
sub
push
movsl
mov
sbb
dec
fisubrl
dec
scas
sub
xchg
arpl
insb
cmp
mov
shl
mov
xchg
lret
daa
cltd
int
lret
hlt
xchg
inc
cmp
jae
mov
lock
xchg
hlt
xor
adc
or
dec
mov
or
adc
inc
sbb
mov
lahf
enter
mov
aad
dec
rorb
dec
xchg
cmpsl
popf
pop
std
xor
mov
adc
push
dec
sbb
push
mov
jno
push
std
add
sbb
imul
dec
call
lods
movsl
pusha
inc
sarl
inc
int3
and
movsb
fisttpl
movsl
pop
dec
clc
sbb
jnp
jbe
jne
push
jp
addb
push
jns
stos
pop
aas
dec
inc
ss
xor
ljmp
imul
sub
mov
mov
movsb
mov
aam
scas
sbb
push
dec
push
jno
enter
mov
jp
mov
jecxz
mov
mov
hlt
test
mov
out
aad
xlat
inc
mov
jmp
cmp
test
jae
xchg
push
out
out
mov
cmpsl
mov
and
adcb
push
jge
dec
add
test
cmp
mov
pop
lds
daa
icebp
adc
adcb
lret
sbb
lds
jb
clc
pop
std
mov
xor
cld
mov
xchg
push
sub
daa
mov
stos
hlt
fisubl
ret
inc
aas
jnp
push
add
mov
inc
add
add
ret
jno
push
xlat
xorb
iret
fistps
jle
jle
rorl
adc
repz
jmp
jecxz
mov
mov
xchg
dec
lret
es
fwait
cmp
cmc
iret
popf
fsubp
mov
inc
roll
pop
jb
mov
xor
icebp
nop
pop
fsubr
or
mov
imul
ficompl
adc
inc
lret
xchg
sbb
imul
add
ret
sub
jb
and
adc
dec
cmp
orl
mov
mov
punpckhwd
add
daa
ljmp
xchg
pop
fs
push
bound
outsl
pop
xchg
mov
mov
push
mov
jmp
dec
add
pop
jge
mov
jl
inc
cmp
pop
xchg
add
mov
mov
loopne
bound
pushf
mov
push
adc
dec
inc
negb
add
inc
mov
ret
mov
repnz
mov
stos
movsb
cltd
and
std
sbb
adc
sti
mov
adc
or
jp
cld
fcomp
cmp
jl,pn
ror
sub
push
aas
int
pop
ljmp
inc
lods
mov
mov
fdivrs
stos
add
and
sbb
imul
mov
mov
inc
cs
mov
or
es
jb
sub
loopne
ds
in
out
mov
ret
cld
jnp
mov
cmpsb
sbb
push
mov
xor
daa
sbb
cmp
sbb
cmpl
imul
lret
inc
pop
mov
xchg
rolb
das
sbb
sbb
sti
leave
enter
cmp
dec
fisttpl
xchg
mov
cmp
or
in
and
mov
fimull
xor
cmp
shlb
out
xchg
and
ss
pop
aaa
mov
cltd
dec
push
dec
ja
mov
bound
out
stos
je
jecxz
lea
xchg
aas
sbb
cli
in
mov
std
cmp
ja
xor
pusha
sbb
mov
cmpsb
cmp
push
ficomps
ljmp
popf
xor
sar
rcrl
neg
dec
xchg
cwtl
pop
ror
insb
inc
sbb
dec
or
mov
bnd
int
je
popf
ss
sbb
arpl
inc
popf
push
dec
ds
mov
stos
stc
jns
shlb
mov
cmp
mov
clc
movsl
outsb
lods
out
out
jns
mov
sbb
mov
ljmp
add
cli
xchg
or
jns
or
adc
into
sbb
and
xlat
mov
daa
ja
sbb
cmp
adc
jge
in
push
inc
rorb
dec
dec
or
dec
mov
in
pop
data16
sbb
pop
inc
or
enter
lods
std
mov
sarl
mov
mov
fdivp
dec
xor
repnz
cmpl
les
mov
jo
jns
adc
mov
cmc
or
xor
or
cmp
push
push
jg
jmp
out
and
je
push
clc
push
hlt
or
push
fsubrl
aas
popf
jge
sbb
out
push
adc
push
sub
ss
fmul
repz
pushl
add
adc
mov
ret
insl
out
dec
mov
jae
cmp
popa
and
lret
jb
pop
dec
mov
fistpl
in
fucomi
dec
cmp
les
push
out
adc
xlat
xor
movsb
adc
mov
insb
insb
sub
xor
cpuid
test
std
mov
in
fcomi
fldenv
jecxz
mov
fnstsw
mov
mov
test
inc
or
push
add
int3
arpl
int3
adc
in
dec
push
inc
dec
push
mov
movsl
cvtps2pd
rcrl
pop
mov
in
ljmp
push
dec
jb
imul
jmp
sub
testb
pop
xor
push
cmc
adc
pop
pusha
mov
jp
fstp
pusha
rolb
sbbl
pop
test
ja
cli
aaa
lock
or
std
cmp
xchg
repnz
ljmp
cmp
fdivrp
shll
jae
jno
pop
fildll
jbe
mov
jbe
or
aam
int3
push
dec
mov
xchg
sub
into
pop
sub
mov
mov
push
sbb
add
out
sbb
jecxz
pop
icebp
push
xor
fwait
jp
aam
pop
adc
dec
ja
repz
aad
cmp
mov
ds
loop
jg
je
xchg
fwait
hlt
cmpsb
loope
jle
call
sub
sub
jae
frstor
push
inc
int
mov
ds
pop
in
mov
aaa
std
dec
call
cltd
mov
sub
das
cmp
lcall
push
mov
add
or
sbb
xchg
mov
ret
data16
inc
ret
or
outsb
js
jg
jecxz
stc
cmpsl
scas
sbb
insb
inc
sbb
mov
js
pop
inc
aas
aad
and
jnp
lods
add
add
push
dec
fmull
sbb
pop
out
jl
cwtl
lds
nop
sub
mov
outsl
mov
stos
frstor
out
xchg
aam
adc
xchg
cld
push
lea
inc
jmp
je
mov
hlt
clc
jmp
movsl
lds
adc
and
jae
xchg
jle
push
cld
mov
dec
ljmp
fiaddl
cmpsl
insl
outsb
js
aas
mov
js
rorb
lods
fnsave
sbbl
pop
cmp
inc
push
dec
or
test
xlat
out
mov
sub
decb
lock
xor
jecxz
int3
and
fs
in
mov
sahf
mov
stc
add
xchg
pop
xchg
pushf
in
jo
pusha
jae
aas
xchg
pop
mov
mov
inc
mov
aas
ss
daa
outsl
aas
aaa
lcall
fcos
pop
aam
mov
mov
xchg
popf
fnstenv
cmp
add
push
and
pop
sbb
xor
sarl
dec
addr16
xchg
ror
adc
jnp
inc
mov
loop
lret
pop
xchg
insb
cltd
out
rorl
add
add
ret
and
inc
cmp
lea
jmp
imul
negl
cmp
jo
std
sbb
mov
orl
popf
insb
xchg
jae
jae
and
cmpsl
cmp
jge
xchg
and
stc
pop
dec
int3
pop
shll
push
xlat
push
call
rcrl
pop
push
cmp
adc
fwait
mov
in
mov
fstps
mov
push
sbb
loop
into
pop
adc
sbb
cmp
js
sti
inc
enter
cli
test
and
xchg
add
rolb
daa
xchg
or
rcrl
cmp
and
data16
gs
jae
int
inc
lds
cmp
sbb
push
iret
lret
pop
push
xchg
cmp
mov
xor
jno
mov
or
mov
movsl
jg
cmpsb
sbbb
les
sub
mov
movsb
adc
add
push
loop
fsubs
cmpsb
xchg
repnz
lods
cmp
jmp
push
test
mov
push
fildl
es
push
out
sbb
fidivl
sub
out
and
push
xchg
movsb
fs
pop
shlb
jl
add
cld
or
inc
scas
cmp
and
inc
xor
int
push
jbe
and
out
mov
fdivrs
cmc
mov
clc
mov
push
add
test
mov
and
cmp
icebp
pop
sbb
test
and
stos
sbb
cwtl
rorl
clc
and
andb
sbb
xchg
mov
loope
loop,pt
pop
subb
push
cmp
inc
ret
es
or
shlb
gs
icebp
adcl
fdivrs
pop
xchg
mov
imul
sub
inc
cld
pushf
push
adc
sub
xchg
inc
mov
outsl
cmpsl
mov
jmp
scas
dec
fiaddl
xor
adc
mov
fistps
stc
xchg
xor
push
mov
xchg
pop
pop
push
lock
jl
pushf
sub
and
cmp
divb
ja
cmp
test
mov
cmpsb
nop
mov
sub
addr16
int3
shlb
and
or
movsb
jmp
sarl
pop
adc
dec
fsubrs
lret
adc
mov
mov
xchg
pop
imul
and
cltd
cmpsb
jle
sub
pop
ds
loop
cmp
into
lock
pusha
inc
ret
mov
mov
mov
inc
jne
cmpl
insb
mov
rorb
insb
sbb
xor
in
xchg
arpl
test
xor
mov
lods
or
aad
jmp
mov
stos
out
adcb
pop
adc
cmp
xchg
dec
jp
fdivrs
and
cwtl
xor
in
push
or
mov
leave
inc
pop
shrl
cmp
cltd
cmp
loopne
lea
lahf
add
aam
stc
jecxz,pt
xlat
or
and
loop
sub
stos
stos
cmc
cli
clc
sti
in
mov
lcall
emms
push
mov
xor
test
fidivrs
out
or
sbb
jbe
xor
inc
aad
or
cltd
mov
lods
out
and
pushf
call
imul
jp
decb
pop
cmp
xchg
cmc
sti
add
fwait
repz
lret
cwtl
jle
dec
or
js
push
hlt
loope
xchg
repnz
sbb
adc
aas
inc
mov
in
xchg
cmc
jb
inc
jle
dec
mov
test
sub
push
inc
ret
jbe
mov
ret
mov
lods
push
inc
xor
sbb
push
and
arpl
hlt
push
mov
xchg
xchg
pop
dec
xchg
inc
mov
pop
mov
shlb
lods
pop
jl
and
add
stos
call
sarb
scas
lcall
xchg
mov
loop
ret
jg
cmp
call
stos
mov
and
and
dec
mov
jns
clc
push
jl
pop
sbb
mov
sti
mov
ljmp
inc
scas
lret
mov
jbe
or
jl
mov
gs
mov
jecxz
jno
lret
mov
popa
out
xlat
cmp
push
fmul
mov
and
imul
mov
aam
outsb
xchg
xchg
push
enter
and
jnp
adc
cmc
mov
movsl
xor
icebp
adc
pop
aaa
adc
inc
addb
stos
push
inc
mov
loope
test
jle
adc
cmpsb
mov
aas
cwtl
jmp
or
or
xor
inc
sbb
imul
rcll
nop
sbb
push
jmp
mov
cmc
rcll
mov
mov
loope
sbb
xchg
test
add
ficompl
loopne
lock
jp
lds
jae
cmp
and
xchg
fcmovbe
add
xor
std
sub
mull
mov
daa
das
dec
out
cltd
adc
cmpsl
adc
rorb
adc
sbb
insb
movsb
push
sbb
sub
inc
test
sahf
fs
cwtl
sub
jb
adc
cmp
mov
mov
jbe
push
adc
jo
or
and
je
icebp
movsb
pop
cmp
imul
ror
cmp
add
or
pop
andb
mov
hlt
in
push
les
outsl
out
mov
add
sbb
popf
jno
pop
xor
adc
cmp
cmc
movsb
ljmp
push
leave
xor
mov
aam
in
andps
data16
add
in
loop
fwait
cltd
out
mov
dec
jmp
out
push
xor
xor
shld
push
fistps
mov
adc
or
dec
dec
sub
jnp
adc
int3
fwait
or
in
and
sar
jp
ret
or
or
loope
lock
aaa
and
add
pop
popf
icebp
sbb
ss
rcll
pop
inc
aaa
movsl
mov
popf
or
lcall
je
andb
rcl
sbb
std
popf
xor
fwait
mov
add
jne
stc
mov
add
int3
test
and
sub
aas
arpl
fwait
gs
aad
jl
pop
fisubrs
mov
mov
sahf
pop
ljmp
aas
mov
lea
les
jno
push
push
into
or
xor
push
push
out
or
xlat
popa
jne
jbe
cltd
int
jecxz
pop
cli
lds
jb
xchg
inc
mov
ret
dec
jmp
pop
and
lahf
lret
clc
jmp
sub
mov
sbb
rcll
jae
adc
addr16
sti
inc
fldt
xor
and
out
add
push
ljmp
inc
movsl
loop
cwtl
shrl
sarl
mov
adc
xchg
jb
add
out
lret
sub
xor
or
out
mov
dec
pusha
adc
bound
pop
repz
pop
filds
scas
mov
mov
daa
sub
pop
push
sbb
dec
ret
pop
ljmp
sti
jle
nop
or
in
xlat
lds
fdiv
cld
icebp
cli
push
out
push
repz
adc
daa
loopne
push
sbb
fwait
push
inc
orb
aas
inc
sbb
fcoms
js
ss
push
cmp
lret
and
add
aam
test
xor
cmpsl
or
clc
bound
or
xor
sti
cld
jb
in
pop
pushf
popa
pop
in
js
ss
mov
hlt
orb
pushf
je
mov
adc
mov
xchg
gs
mov
lret
shrl
xchg
cld
sti
mov
mov
or
xor
outsb
cwtl
cmpb
ret
mov
cmp
in
shll
jge
daa
gs
mov
pop
pop
jmp
clc
hlt
aad
lds
imul
add
xchg
mov
and
les
daa
push
sub
jb
outsl
aad
push
push
pushf
ret
inc
push
pop
mov
out
and
xor
cmp
mov
leave
sub
dec
loopne
into
lcall
xor
mov
sub
dec
dec
mov
mov
dec
add
jge,pn
xor
bound
xlat
cmp
add
pusha
fistpl
cmp
cmp
or
dec
and
mov
fdivrl
pop
addr16
dec
dec
jmp
inc
adc
inc
iret
in
adc
daa
inc
int
jb
mov
add
or
scas
notl
addb
cmp
dec
or
stc
pushf
aaa
dec
push
cmp
js
mov
lock
pop
dec
outsb
mov
jp
lods
adc
shrb
pushf
cs
cmp
push
sub
icebp
lahf
jo
out
std
add
inc
fistpl
push
aaa
pop
and
setno
fmull
jmp
in
lock
test
and
arpl
inc
pop
movsb
mov
adc
sahf
or
in
xchg
adc
pushf
in
pop
je
push
movsb
fs
jl
fidivs
mov
fldl
sarb
pavgw
xchg
sub
push
cltd
jp
fdivrs
jmp
pop
jmp
sub
sbb
mov
cmp
or
movsb
notb
sbb
not
inc
inc
and
pop
roll
movsb
rorl
add
out
jecxz
out
mov
jo
fstl
add
cmp
cmc
fwait
push
aas
outsb
fbstp
pop
inc
inc
ret
lret
aas
adc
and
mov
inc
dec
or
rcll
sti
adc
lds
mov
adc
test
lods
add
jbe
pop
test
xchg
push
nop
or
fldl
xor
dec
xorb
aaa
jl
mov
mov
shll
outsl
adc
in
mov
mov
rolb
cltd
xlat
aaa
lret
daa
clc
jmp
inc
jne
outsb
add
mov
dec
popa
pop
ds
fbld
les
and
iret
cmp
adc
movsl
jmp
lret
into
xchg
mov
pop
outsl
out
icebp
aam
sbb
in
and
popf
xor
inc
pop
jl
sbb
gs
shlb
and
mov
jmp
xchg
insb
and
xor
jns
imul
mov
mov
or
mov
test
sbb
jbe
andb
inc
lcall
adc
aam
adc
mov
jbe
scas
adc
enter
cmp
and
lds
pop
xchg
dec
insb
int3
inc
aam
sub
push
xor
mov
or
fucomp
sbb
and
jle
sarb
ret
fmuls
mov
add
lods
sahf
int
int
mov
ljmp
jae
out
jae
mov
push
fstl
aad
clc
pop
loope
dec
push
mov
test
dec
jmp
aas
fnstenv
xchg
xchg
cld
mov
jmp
push
stos
mov
idivb
mov
ss
fs
dec
aad
cwtl
and
in
sub
aas
pusha
insb
sbb
int3
mov
lods
jmp
push
xchg
popf
mov
or
or
add
adc
mov
sbb
int
pop
lcall
push
cmp
mov
dec
pushf
js
push
imul
pop
push
in
imul
mov
push
mov
aaa
lcall
jo
popa
insb
mov
xor
imul
mov
lods
not
cmp
cmp
adc
jne
jne
movsl
add
sub
xchg
lods
mov
sahf
sub
in
adc
cmpsb
pop
pop
xor
out
loopne
fldl
pop
jg
out
cs
adc
call
cmp
loope
cmp
lods
cmp
gs
and
dec
push
mov
add
jle
dec
sbb
mov
js
pop
iret
mov
adc
js
pop
call
dec
cmp
mov
jmp
mov
mov
jg
xchg
mov
cmp
cld
test
scas
rolb
fcoms
jae
add
xor
mov
sub
mov
in
jmp
nop
dec
pop
jp
sbb
cmp
sbb
je
addr16
aad
test
std
imul
adc
jmp
sbbl
jge
jae
push
and
push
xchg
inc
mov
jge
arpl
movsl
push
jmp
enter
mov
rcrb
sub
push
mov
call
pop
jno
dec
add
mov
rorb
jmp
scas
les
ljmp
shll
clc
rolb
mov
cli
or
add
iret
push
and
in
movsl
xchg
mov
jmp
pop
outsb
fs
std
filds
or
or
cmp
jmp
insb
xor
popa
stos
loopne
cli
fwait
mov
mov
cmp
mov
ljmp
cmp
mov
ja
add
in
shll
jp
or
sbb
and
inc
or
cmp
cmp
std
das
mov
into
inc
inc
rolb
jbe
test
ja
loopne
jb
push
fsubl
jmp
dec
or
pusha
mov
imul
mov
dec
push
xchg
sub
dec
fwait
fimull
test
fldz
jno
iret
popf
and
pop
mov
divl
mov
sub
jne
jg
dec
ds
psllw
rclb
push
loopne
stos
sbb
pop
fists
lcall
movsb
das
inc
gs
sub
stos
jae
cmp
js
lea
pop
test
or
sbb
insl
lret
cmpsb
cmp
mov
pop
lea
stos
xor
test
mov
adc
fsub
mov
js
lret
sbb
nop
jg
inc
lods
out
add
pusha
notb
mov
fisttps
and
aas
movsb
push
cli
sub
sub
xlat
cmpsl
xchg
cld
dec
filds
adc
ss
mov
ret
test
or
pop
dec
adc
mov
fdivl
les
dec
rcl
mov
jae
cmp
add
jns
cmp
cmpsb
mov
pop
dec
add
and
insb
or
lcall
fsubs
sbb
aad
imul
mov
sbb
mov
fsubs
mov
sbb
sarl
jecxz
sbb
and
popf
mov
xor
mov
out
fadd
jmp
lcall
hlt
inc
push
mov
pop
push
iret
jle
jnp
mov
cmp
inc
inc
pushf
inc
mov
cmp
adc
andb
push
cmp
inc
ljmp
test
loope
mov
inc
adc
sub
xor
call
sbb
sub
std
push
adc
mov
clc
andb
aaa
xchg
add
mov
or
das
or
push
xchg
fwait
in
adc
stos
cmpsl
mov
fistpl
and
iret
pop
mov
mov
mov
jle
xchg
ljmp
shll
mov
clc
mov
sub
fnstcw
xchg
push
lds
jge
push
fldenv
jae
and
es
push
adc
data16
ror
and
fcoms
jg
arpl
es
xchg
dec
mov
repz
xchg
jns
or
cmovns
enter
sbbl
lods
mov
notl
ljmp
movsb
jl
mov
lret
mov
dec
mov
setbe
into
sahf
arpl
jp
stos
pop
cmp
mov
movsl
and
push
inc
jecxz
int3
add
das
and
pop
dec
pop
xchg
mov
repnz
jl
repnz
mul
aam
aam
addl
push
push
inc
std
in
pop
gs
aas
xchg
sub
test
scas
sti
push
push
dec
inc
std
ret
sbbb
fld
add
push
cmpsl
dec
cmc
sbb
push
pusha
xor
push
notl
sub
xchg
arpl
pop
jnp
hlt
insb
mov
pop
cltd
xlat
mov
lret
and
subb
out
push
dec
ja
stos
cmpsl
sub
mov
jg
add
mov
or
mov
lcall
mov
aam
stc
insb
mov
mov
sahf
frstor
xchg
push
jb
xor
pop
lods
subl
ficompl
mov
ffree
add
ss
jl
dec
loope
add
das
pop
push
stc
fs
sub
sahf
add
fistpll
popf
adcl
mov
mov
pop
call
push
repnz
mov
fldcw
push
icebp
stos
or
pop
adc
aaa
cmp
or
push
push
jge
in
lcall
dec
jmp
cmp
out
loop
xor
das
pop
insb
jb
aad
push
push
cld
je
ret
icebp
jl
or
rorb
add
pop
pushf
repnz
cmp
mov
mov
mov
dec
mov
dec
push
sub
std
mov
repz
mov
cmp
push
sub
adc
je
bnd
pop
imul
imul
lcall
shll
jmp
xchg
insl
sub
mov
imul
cmp
pop
adc
sbb
push
ljmp
addr16
add
fisubs
pusha
push
lret
jle
push
aaa
pop
push
push
pop
jne
and
jae
push
into
sbb
stos
or
cwtl
pusha
adc
dec
add
stos
fcomps
pop
inc
jbe
icebp
pop
push
jb
aam
shll
pop
lock
lods
jg
xor
fisttpl
dec
in
ficoml
pop
inc
jl
inc
aam
pop
xchg
inc
test
mov
and
dec
and
xor
sub
testb
imul
cmp
fsubs
aad
adc
sahf
pop
xor
pop
xchg
into
cmp
push
loopne
cmpsl
mov
mov
addr16
or
and
repz
movsb
push
iret
test
add
add
imul
test
sahf
loopne
and
enter
stc
pop
int3
inc
mov
mov
shlb
inc
outsb
push
pop
xchg
outsb
mov
mov
pop
lret
dec
aas
and
inc
leave
clc
jo
or
add
mov
dec
stos
push
mov
inc
sbb
movb
int
bound
mov
jne
xchg
add
stos
sbb
jb
fwait
mov
mov
les
push
dec
adc
into
xchg
data16
jns
add
mov
in
push
pop
popf
scas
pop
data16
xchg
push
clc
push
inc
add
sub
icebp
xchg
lds
cmp
scas
dec
mov
pop
sub
fstps
cmpsb
les
mov
mov
rcrl
push
addr16
mov
jp
mov
inc
and
mov
rcll
xlat
mov
and
xor
mov
out
xchg
test
mov
or
mov
xchg
or
dec
std
or
pop
cmp
out
jecxz
cmp
sbb
sub
sahf
arpl
fisubs
in
repz
xchg
mov
mov
adc
dec
mov
adc
sti
popf
daa
lods
or
pop
cmc
fldl2t
loop
fwait
cmp
andb
negb
sti
das
sbb
lahf
mov
pop
dec
jo
add
pusha
jecxz
scas
xor
subl
mov
inc
inc
fidivrs
in
arpl
lods
ljmp
xchg
decl
cmp
js
jnp
sbb
int3
adc
xor
dec
push
mov
es
sbb
push
xchg
mov
sbb
setp
je
mov
stos
pop
rcrl
fcomi
movsl
js
out
push
mov
add
mov
pop
xchg
add
out
jg
sub
and
mov
mov
aad
mov
test
sbb
sbb
imul
or
cmp
inc
jl
pushf
inc
js
dec
repz
inc
out
stos
mov
push
or
mov
inc
in
adc
jle
push
or
adc
cmpsb
ret
popf
inc
movsb
les
cmp
or
fildl
xchg
repnz
inc
cmp
mov
jp
inc
insl
fmuls
pop
xchg
testl
iret
add
popl
clc
sbb
iret
xor
inc
push
aaa
popf
jae
push
adc
sub
inc
pop
sub
add
pop
sub
lret
inc
pop
pop
or
or
and
insl
es
mov
sahf
ret
call
test
push
fcmove
jp
in
cmp
sub
xlat
fisubs
out
pop
test
fs
lods
sbb
jnp
lea
dec
push
lock
lock
mov
inc
pusha
push
aas
sub
out
std
jmp
insl
sub
mov
inc
jge
xchg
adc
adc
mov
inc
shlb
add
sbb
jbe
addr16
insb
inc
insb
outsb
sti
inc
cmp
inc
xchg
idivb
add
add
push
xor
dec
push
dec
movsb
lds
arpl
jae
cwtl
fmul
pop
mov
pop
adc
dec
lods
push
jb
sbb
xchg
mov
aas
jecxz
ja
loope
add
cltd
jle
mov
loop
loopne
push
push
sub
lcallw
in
montmul
cmpsb
ret
nop
inc
mov
jnp
xchg
inc
sbb
subb
lcall
sahf
and
ficompl
mov
outsb
je
in
and
aad
sub
push
cmpsl
jge
push
and
push
repnz
fidivs
popa
mov
mov
pop
add
stos
scas
cmp
pop
jl
pop
daa
lea
jo
push
jecxz
push
aam
pop
in
xor
or
out
inc
push
push
popa
mov
cltd
inc
test
sub
shll
push
jl
mov
and
mov
xchg
jae
xor
loop
ss
leave
mov
out
iret
imul
push
jp
mov
cs
inc
fistpll
jmp
jmp
insb
or
push
sbb
jle
out
mov
mov
test
clc
cld
in
std
xor
cli
xchg
jmp
and
fisttpll
pop
push
ficomps
mov
push
shrl
xor
push
loopne
mov
sbb
repz
call
std
std
push
push
cmp
and
adc
xor
loope
sbb
out
pop
sub
fldcw
push
cmp
out
jb
sbb
scas
dec
adc
clc
in
pop
stos
sub
popa
xchg
lret
je
lret
cs
roll
rol
lock
sbb
daa
push
sub
mov
fs
ja
dec
add
cmp
sbb
add
sub
adc
mov
das
add
and
insb
push
aaa
and
pop
insl
xchg
jle
bound
add
jge
es
mov
subb
idivb
fstpt
sbb
sbb
ror
pusha
stos
and
sbb
ret
syscall
hlt
mov
xchg
lahf
xchg
je
stos
ficomps
loop
inc
stc
dec
sbb
mov
nop
and
push
adc
cmp
and
es
sbb
jnp
dec
popl
xor
mov
repz
push
stos
push
mov
int3
add
adc
jmp
mov
jge
push
fs
mov
and
cltd
inc
mov
sub
outsl
rorl
mov
add
or
out
pop
pop
jle
jle
lock
xchg
fwait
test
call
int3
xchg
test
sarb
sbb
inc
mov
xchg
repz
aaa
push
mov
xchg
rcrb
vaesdeclast
mov
pusha
pushf
xchg
dec
xlat
ret
pop
adc
scas
in
loopne
push
jmp
cwtl
and
xor
enter
inc
mov
repnz
pusha
mov
lock
ljmp
xor
arpl
aaa
xor
push
loope
in
call
fidivl
xchg
xchg
inc
cmp
mov
inc
int3
jecxz
push
or
leave
fisubl
add
adc
sub
scas
pop
fwait
sbb
sub
jecxz,pt
xchg
jp
push
jno
pop
out
bound
mov
xchg
in
shll
fsubrl
ficoms
dec
cmp
movsb
add
in
push
ret
cmp
iret
rcrl
push
test
nop
das
xor
cmp
rorl
cmp
push
outsb
pop
mov
sub
test
push
mov
mov
aaa
jmp
cmp
jle
add
mov
mov
fmulp
jecxz
add
in
cmp
and
adc
das
je
lock
dec
outsl
sar
push
mov
mov
fisubrs
ljmp
xchg
sbb
mov
mov
inc
nop
pop
fcmovnb
xor
mov
xchg
fs
fisubrs
aaa
loope
insl
fwait
stos
add
out
mov
sti
icebp
sub
and
inc
stos
push
fmull
or
cmp
mov
jb
push
xchg
mov
insb
fwait
push
pop
xchg
lcall
mov
cmp
adc
jmp
paddsb
mov
xor
out
sbb
cli
loop
cld
inc
sub
cli
in
movsl
mov
mov
xchg
add
imul
xor
push
add
xchg
cmc
fisubl
dec
mov
fsubl
inc
sbb
scas
push
push
inc
dec
aam
sti
in
es
fisttpll
int
rcrb
fwait
push
mov
jmp
lods
jns
es
xchg
push
sub
jb
cmp
mov
repnz
test
xchg
xor
adc
mov
stos
dec
sub
pop
jg
sahf
mov
sub
in
movsl
imul
push
cltd
jno
and
cmp
and
shl
push
or
leave
pop
nop
xor
mov
aam
sbb
sti
test
mov
cs
int3
enter
inc
sar
pop
or
adc
fisttpll
and
mov
stos
ja
push
jle
mov
fwait
in
ret
xchg
imul
inc
dec
fstpt
jno
out
or
sar
jecxz
adcb
scas
sub
sbb
push
in
je
shrl
and
inc
xchg
add
rcll
loopne
jecxz
dec
fidivl
imul
rcrb
pop
push
repz
adc
push
pshufw
pop
subb
or
sub
adc
mov
mov
cltd
mov
fidivrl
cmp
inc
sbb
or
hlt
and
jge
stc
notl
mov
jge
mov
adcl
push
cmp
cs
test
xchg
insb
cwtl
dec
pop
outsb
mov
dec
leave
sbb
int3
add
loopne
cli
adc
xor
dec
data16
lods
and
mov
call
shr
dec
enter
test
mov
sbb
push
dec
xchg
ret
cmc
jl
or
jns
mov
popa
mov
jp
shrl
xor
mov
sub
aaa
sub
lcall
arpl
inc
iret
outsl
movsl
xchg
aaa
sti
pop
xor
test
xchg
inc
push
in
and
movsb
and
std
lds
bound
pop
dec
in
dec
mov
ret
push
mov
sub
in
inc
lds
xchg
mov
inc
sbb
mov
jno
ss
cmpsl
mov
fisubl
xor
outsl
test
adc
test
into
cltd
fdivr
add
xchg
xor
pop
or
repz
xor
subl
or
lret
aam
mov
insl
push
xor
leave
jg
cmpsb
sub
loop
pop
insl
ss
sub
out
xchg
fs
scas
inc
adc
jp
jmp
orl
jne
pop
jp
push
push
cmpb
xor
jle
in
cwtl
mov
xchg
mov
scas
inc
ret
daa
js
mov
xchg
pop
fs
dec
roll
scas
xlat
icebp
ss
jmp
dec
fcmovbe
stc
aas
xorb
cs
mov
xchg
icebp
sbb
mov
jmp
push
pop
out
pushf
fmul
fsts
add
cltd
xor
fisttpll
push
in
xlat
or
ds
or
in
outsb
pushf
sbb
sbb
aas
sbb
fstps
push
adc
mov
jl
xchg
dec
andl
leave
pop
in
in
test
adc
out
out
mov
scas
ret
inc
mov
cld
repz
fimull
mov
in
jne
insl
dec
push
in
aaa
aaa
mov
addr16
mov
xchg
adc
mov
je
push
mov
stos
xor
loopne
push
jbe
bound
fsubrl
mov
inc
inc
and
add
push
cmp
stc
jp
inc
rol
out
push
jae
and
add
or
add
inc
outsl
and
test
addb
jns
fimull
lahf
stc
js
cli
ret
cmp
pop
mov
xchg
stc
mov
push
sti
xchg
mov
lahf
imul
push
imull
sub
lods
push
xor
xchg
sbb
push
ret
sbb
lret
pushf
and
rolb
popf
mov
jne
xchg
xlat
movsl
inc
and
bnd
fdivrl
jne
les
cmp
jne
mov
dec
pop
mov
push
les
push
push
dec
js
cs
add
push
push
sub
dec
fbstp
mov
shrl
or
bound
lret
inc
cwtl
add
push
mov
inc
rcll
inc
test
loop
fadds
push
xor
cmpsb
repnz
orb
std
mov
cmp
into
push
les
aam
test
xchg
cmp
sub
scas
mov
inc
mov
cmpl
daa
cmp
popf
out
push
leave
add
adc
sbb
bound
pop
push
bound
lds
shrb
out
lods
pop
fucomi
pop
xor
fsubrl
xlat
lret
iret
pop
ss
das
mov
cmp
and
xlat
pop
xchg
and
bound
into
pop
cmp
test
and
fs
loopne
notb
inc
insl
cltd
rclb
sarl
loope
into
fmull
loopne
in
add
rorl
aaa
pop
inc
leave
sarl
pop
inc
cmp
cmp
xchg
imul
xchg
aad
out
lret
into
cli
stos
cmp
shlb
es
cltd
mov
pop
lahf
loope
cld
pop
mov
mov
int3
stos
cmp
jo
pop
inc
cmpsl
mov
and
lods
sbb
mov
pop
cmp
add
mov
sub
mov
jp
pop
xor
add
or
sbb
mov
add
mov
cli
sbb
dec
mov
pop
sub
mov
sub
xchg
sahf
jge
gs
cmp
lcall
jmp
or
and
incb
sti
outsb
jns
mov
or
test
pop
aaa
out
incl
or
int
or
xor
imul
lret
push
inc
cltd
cmp
sbb
shll
cmp
pop
cs
mov
sub
gs
repnz
fcompl
jle
pop
cmp
gs
or
out
sub
ja
adc
sub
sti
pushf
fldcw
dec
sti
clc
loopne
les
mov
jne
push
js
cli
js
xchg
je
sbb
xchg
mov
cmpsl
push
pop
into
std
mov
mov
push
out
enter
stc
js
xchg
adc
je
lds
jb
es
dec
push
push
out
dec
out
inc
in
mov
lods
and
popa
out
xor
xchg
mov
dec
clc
mov
inc
divl
scas
mov
mov
js
jecxz
mov
pop
sahf
cltd
sbb
scas
dec
mov
add
sub
int
adc
in
test
xor
jno
cmpsl
imul
lods
insb
mov
mov
fldenv
fcmovu
aas
imul
inc
enter
inc
inc
cs
pusha
or
inc
jl
xor
nop
add
mov
xchg
mov
dec
mov
mov
add
mov
sahf
and
jae
sbb
sub
mov
and
dec
xchg
inc
adc
into
popf
jl
inc
je
rorl
cmpsl
xchg
int3
popf
lret
cmp
inc
pop
jle
mov
addb
outsl
xor
jmp
pop
int3
dec
sti
mov
cltd
jge
sbb
jecxz
and
adc
jno
mov
push
ret
mov
fimull
fsts
gs
orb
pop
dec
addr16
dec
stc
add
repnz
push
push
in
notb
cmp
cmp
shrb
add
pop
insb
sub
arpl
adc
test
pop
aad
stos
cmpsb
outsl
not
inc
inc
sti
imul
test
xor
aam
mov
pop
inc
shrl
cmc
addr16
and
imul
jge
cmpl
je
addr16
mov
iret
incb
sub
jo
stc
lock
push
fs
and
in
pop
scas
das
test
pop
clc
cmp
add
and
adc
jns
cmc
loope
incb
or
mov
fwait
dec
popf
adc
mov
inc
or
push
pop
push
mov
dec
jne
inc
aam
loopne
or
cmp
icebp
sbb
pop
mov
out
mov
insb
pop
ljmp
mov
test
decl
ror
dec
fidivrs
aaa
dec
arpl
in
shrb
cltd
pop
aas
popf
daa
jb
in
mov
xorl
and
inc
xchg
hlt
dec
xor
or
loop
jb
lret
aad
inc
mov
adc
loope
ljmp
or
testb
lcall
pop
sbb
pop
jg
imul
cld
fs
lcall
sbb
pop
imul
js
add
scas
push
cmc
int
adc
hlt
stc
jecxz
sbb
sub
dec
mov
inc
and
sbb
ss
jge
nop
movsw
xor
jecxz
and
push
dec
xor
aad
out
sti
leave
sub
shrl
jo
aad
out
mov
jo
int3
mov
movsl
mov
add
mov
fmull
sub
or
jb
sti
insl
fxch
or
cli
inc
cld
in
es
push
mov
rolb
lods
xor
mov
imul
or
jg
fisttpl
pop
fs
jno
xchg
and
and
loop
or
add
xor
rcrb
popf
and
and
add
push
rcrl
push
jb
adc
push
pop
rcll
push
clc
lahf
pop
dec
out
and
add
data16
jmp
inc
arpl
jns
loopne
fsts
das
fistpll
lret
jae
and
sbbb
push
fistl
jg
sbb
flds
add
jne
pop
add
addr16
cmpsb
xchg
pop
rorb
in
ljmp
inc
adc
jno
cltd
ret
in
daa
pop
outsl
xchg
ss
cmpb
cwtl
loope
clc
inc
scas
mov
in
mov
movsl
int3
mov
rol
add
xor
add
xchg
mov
insb
cmpsl
and
jecxz
fs
inc
mov
sub
lods
fildll
bound
sbb
test
enter
push
cmc
clc
fsubrs
rcrl
jo
icebp
sub
call
ljmp
mov
sahf
mov
mov
das
fadd
jbe
in
push
jge
inc
adcl
jae
out
lods
pusha
jnp
pop
aaa
xor
cld
iret
pop
fcmovbe
pop
or
dec
fsubrl
mov
ds
aam
push
xchg
push
pushf
inc
pop
and
fs
scas
es
and
scas
scas
or
es
push
add
inc
sub
push
loop
out
pop
sub
push
cmpsl
push
cli
out
in
mov
ds
and
fs
scas
inc
push
dec
push
add
lock
je
cld
mov
test
lds
cmp
lahf
jp
and
dec
pop
stc
ret
xlat
movsb
nop
dec
cmp
sbb
into
xor
mov
mov
movl
cmp
jg
sub
sub
in
enter
mov
test
mov
mov
add
inc
push
ja
insb
mov
fbstp
leave
xor
stc
xchg
dec
xor
loop
mov
adc
jp
insb
orb
sub
mov
testl
iret
unpcklps
lcall
divl
loope
mov
dec
sarb
adc
mov
xlat
into
adc
jmp
loop
test
enter
cltd
mov
push
dec
inc
call
sbb
rorl
imul
sub
adc
mov
xchg
lret
push
in
mov
dec
xchg
in
pop
rcll
fiadds
push
inc
jb
adc
and
cmc
xchg
loope
xchg
std
and
mov
add
out
push
adc
fnstsw
lods
jp
dec
adc
cwtl
xchg
cwtl
das
mov
mov
in
add
orl
mov
out
jmp
cs
sbb
pop
in
push
lcall
xor
or
es
stos
mov
fisubrs
test
xchg
sbb
dec
data16
rcrb
icebp
testb
imul
ds
jl
jno
dec
jecxz
and
lret
inc
jmp
imul
jl
fdivr
xor
inc
mov
push
sbb
cld
pop
loopne
xor
repnz
cmp
std
pop
test
cs
push
aaa
mov
inc
pop
xchg
cmp
add
jl
push
mov
dec
shrb
jp
and
cmpsb
jno
iret
sarb
shrb
add
inc
sahf
imul
xor
sti
frstor
inc
mov
arpl
jne
xor
mov
movsb
xchg
pop
push
inc
inc
mov
aad
js
in
in
add
mov
mov
jo
push
add
rcl
or
jb
out
adc
popf
sti
jg
stos
add
pop
rorb
add
movsl
jns
jb
sub
jmp
repnz
dec
sub
cmp
dec
lret
in
rcll
inc
stc
or
dec
mov
rorb
push
pushf
shll
xor
addb
jecxz
inc
popf
or
sub
push
cwtl
arpl
out
mov
fst
and
add
lgdtl
xchg
rcl
ss
leave
leave
mov
in
cmpsb
add
push
mov
scas
push
out
add
out
ljmp
bound
insb
inc
sbb
mov
cs
cmp
cli
sub
dec
pusha
xchg
pop
mov
enter
ds
popa
push
dec
fidivs
xchg
aad
push
xchg
inc
loopne
cwtl
sub
push
mov
mov
or
sbb
mov
adc
orb
insl
xchg
cld
dec
aad
and
lea
inc
pop
lahf
cmpsb
cmpsb
out
popa
stc
inc
imul
fdivl
addr16
fildl
mov
stos
ds
mov
lods
fs
pop
add
iret
or
fs
dec
and
repz
pop
mov
iret
popa
sub
adc
std
fistps
jne
lahf
jl
rorl
jbe
into
inc
stos
inc
jl
sub
test
xor
dec
push
push
inc
mov
aam
push
xlat
cmp
xchg
aaa
cwtl
clc
mov
adc
stc
jmp
ret
xor
add
stos
dec
adc
adc
stos
push
outsb
sbb
jmp
mov
scas
insb
mov
xor
fldcw
fwait
mov
xchg
mov
mov
test
sub
jg
cli
scas
addl
fwait
jns
inc
xor
or
mov
mov
ret
insb
pop
adc
xchg
test
scas
arpl
imul
xor
dec
xor
push
xor
in
stc
jge
fwait
xor
rorl
xor
enter
outsb
mov
xor
push
and
adc
imul
fstpl
mov
ja
cmp
push
out
out
sbb
insl
out
out
addr16
daa
mov
push
sub
sub
movsl
vphadduwq
mov
pop
test
xor
hlt
xor
js
fcoml
shll
loopne
cmpsl
pop
aaa
leave
add
rolb
cmp
fadds
shl
pushf
stos
unpckhps
sbbb
mov
cmp
cmc
aaa
pop
cmp
and
pop
sti
loopne
sbb
jl
sarb
xchg
mov
or
ja
dec
xor
jnp
push
stos
dec
loope
in
aam
lock
negl
pop
mov
dec
in
pop
faddp
pop
ds
mov
cwtl
imull
ret
sahf
test
aam
xchg
cld
dec
roll
mov
xor
cmp
fs
lds
mov
push
lret
scas
stc
fs
adc
xor
test
cmp
fwait
xor
js
jno
dec
leave
mov
jo
sarl
adc
inc
inc
push
hlt
adc
mov
pop
test
imull
push
pushf
xor
sub
sub
fiaddl
jle
insb
jbe
mov
push
insl
sub
mov
popfw
and
jge
jo
in
pop
add
into
pop
arpl
sub
jbe
mov
lret
js
cmc
push
push
enter
push
ljmp
sbb
mov
jecxz
test
inc
pop
mov
mov
mov
icebp
jle
jg
push
jae
sub
stos
and
fnstenv
incl
dec
icebp
ret
jne
sub
jne
lods
iret
pop
xchg
pusha
arpl
fcomps
or
and
ja
repnz
cmp
rolb
push
rol
add
cmp
mov
cmp
nop
les
sub
int3
cltd
cltd
push
ret
cli
cmp
cmp
fcoml
sbbl
repz
xchg
imul
mov
pop
std
mov
inc
nop
inc
jbe
sbb
or
xchg
ja
cli
sub
jl
aas
mov
lcall
and
jl
in
add
cld
orb
jge
add
divb
pusha
xchg
push
mov
lock
jl
dec
pop
push
dec
js
hlt
int3
je
dec
test
out
push
pop
stos
das
xchg
mov
stos
jae
xchg
mov
xchg
dec
mov
jg
iret
xchg
add
jbe
aam
and
jno
cmp
das
rcrb
fldenv
sub
out
cwtl
scas
repz
test
sbb
out
cld
and
xchg
pop
out
clc
out
sbb
pop
out
push
out
push
js
daa
cld
mov
mov
sbb
jb
jge
cmc
js
pop
jl
inc
sub
xchg
sahf
xchg
or
push
push
and
and
ficoml
lcall
icebp
xchg
int
and
std
lret
icebp
loopne
in
cltd
sub
nop
adc
mov
push
enter
xor
add
mov
inc
cltd
xor
or
mov
xor
sbb
ljmp
aad
rolb
popa
popa
scas
cmp
inc
sub
out
rcl
or
popa
inc
sarl
movsb
mov
loop
mov
mov
mov
popa
movsb
sub
lret
lret
std
je
out
sahf
dec
mov
je
inc
mov
std
push
add
into
xchg
mov
stos
mov
mov
xchg
jno
fwait
xchg
adc
xchg
imul
or
adc
enter
mov
cmp
mov
std
mov
or
fcmovb
sbb
hlt
xchg
lret
mov
ret
js
sub
into
lods
sub
jbe
es
or
push
orb
jno
pop
jmp
cmpsl
paddd
or
push
fstpl
les
imul
shl
add
cli
or
cltd
mov
xor
jmp
jl
rcrb
loopne
jmp
pop
cmc
sub
imul
adc
aad
stos
daa
dec
sub
pop
mov
in
cmp
icebp
xor
loopne
pop
hlt
push
mov
aas
jle
pop
repnz
inc
lods
daa
cmc
sbb
cmp
cmp
bound
loopne
push
jmp
pop
pusha
fidivl
scas
imul
ficoml
testb
push
cmp
cmpsl
mov
enter
lock
bound
inc
pop
adc
mov
dec
mov
mov
dec
jp
dec
sbb
cmp
cli
xchg
out
mov
mov
popf
mov
dec
fisubs
les
test
dec
imul
fs
ja
mov
lahf
into
xchg
pop
jl
push
clc
mov
sbb
mov
shll
shrl
and
cmp
sahf
xchg
aas
dec
les
cwtl
out
dec
insl
xchg
sahf
push
popa
push
loope
and
ret
sti
mov
fs
movsb
dec
cmpsb
cmovle
out
or
xor
aam
pop
xchg
mov
mov
mov
mov
movsl
dec
in
addr16
jo
insb
add
mov
jl
test
sub
cmp
dec
repz
leave
lcall
pop
mov
mov
dec
insl
sub
imul
add
sub
rclb
bound
pop
pop
jecxz
std
daa
add
lds
add
push
popf
aaa
mov
mov
pop
xchg
pop
pop
inc
push
jl
or
inc
mov
xor
aaa
popa
jb
jl
cltd
cwtl
loop
xor
mov
inc
and
mov
adc
daa
icebp
jmp
loop
decb
icebp
jecxz
adc
in
jno
pop
inc
sub
rolb
sbb
iret
xchg
pop
dec
push
jecxz
lds
mov
jnp
add
fsubrp
mov
pop
jns
enter
mov
lods
ja
jae
xor
xorl
mov
dec
mov
or
mov
mov
rolb
testb
inc
dec
push
orl
fxch
push
frstor
out
jl
add
or
addr16
xchg
push
movsb
jmp
mov
scas
ss
cwtl
aad
int
mov
mov
fs
stc
aad
xchg
shlb
pop
gs
in
mov
cmpsb
inc
hlt
xchg
jbe
push
fs
xchg
gs
jne
dec
mov
inc
push
mov
shr
leave
cmp
aas
jo
imul
sub
fistl
adc
xchg
sbb
enter
or
jge
hlt
pop
pop
popf
jmp
fcmovbe
add
xor
lcall
mov
or
in
ret
mov
push
pop
xlat
mov
movsb
jecxz
jae
aad
and
jmp
call
inc
mov
sbb
pop
pushf
push
mov
fistps
mov
sbb
fsubs
add
fcomps
inc
mov
jecxz
nop
adc
out
mov
push
lret
aas
sbb
adc
test
into
shll
dec
add
xor
insb
addb
and
incb
adc
pushf
add
dec
scas
mov
out
adc
sbb
and
rcll
sbb
pop
lret
adc
fimull
push
outsb
or
sub
mov
jne
bound
mov
push
jno
mov
and
fs
add
push
sub
xchg
add
inc
xor
adcb
or
in
push
lods
dec
je
mov
scas
fcmovne
roll
pop
pop
xor
pop
pop
test
push
fiaddl
xlat
mov
out
cmp
dec
mov
iret
inc
mov
pop
sub
hlt
enter
bound
js
xchg
repnz
aaa
xor
push
xchg
callw
js
xchg
cmc
mov
dec
stc
jne
das
aam
xchg
cmp
cmp
cmp
mov
repnz
cmp
iret
mov
or
les
test
add
cmp
cmp
mov
div
fdivrl
sbb
je
or
lods
fisttpll
xchg
cmp
fwait
jge
orl
stc
adc
ret
in
xchg
add
add
xchg
sahf
or
or
sbb
out
fisttps
and
and
imull
adc
push
lock
pop
lock
in
xor
mov
fdivs
movsl
cmp
pop
mov
das
xor
mov
mov
xchg
push
inc
push
dec
ret
lock
jmp
ret
mov
mov
fadds
test
add
push
cwtl
adc
push
or
dec
outsb
sahf
xchg
int
sbb
pop
mov
adc
pop
xor
ret
add
pop
xchg
xorb
sub
push
sbb
inc
pushf
hlt
cmpsb
roll
jno
lcall
fidivs
ret
push
cmp
pop
mov
rcrb
jb
jns
sbb
lret
adc
in
ja
mov
pop
test
push
mov
cmp
data16
add
or
push
xor
std
into
xchg
mov
inc
dec
lret
call
insl
lods
and
jmp
cmp
sub
mov
lahf
xchg
sub
push
popa
loopne
data16
popf
gs
adc
fadd
rep
cmp
cs
out
in
or
inc
cmp
clc
cmp
adc
arpl
out
sti
movsl
xor
cmp
cmpsb
add
andl
sbb
xchg
in
addr16
fldt
sub
lret
aad
out
sbb
mov
aas
push
pop
push
sti
lods
scas
lret
outsb
cli
ret
rcr
jbe
rolb
cmp
or
out
cld
jne
cmp
cwtl
inc
cmpsb
jge
jge
xor
popf
mov
or
daa
ret
in
mov
fdivrs
dec
hlt
cmp
adc
xchg
shrl
cmp
nop
rcl
call
dec
or
std
inc
xchg
add
inc
in
add
pop
fadds
xlat
and
sub
and
xlat
push
pop
std
clc
movsl
add
negb
rorl
push
int3
loope
fsubrp
imul
xchg
mov
add
aad
xor
dec
dec
jmp
jb
daa
in
sahf
xchg
add
xchg
scas
sbb
mov
sbb
inc
and
sbb
outsl
jmp
int
cmp
mov
push
mov
sbb
sub
push
dec
aad
xchg
loopne
aaa
cmp
mov
imul
mov
pop
enter
pop
inc
pop
bound
mov
or
sub
dec
or
pop
call
mov
dec
add
aam
pusha
je
scas
or
mov
fidivrs
je
testl
int3
sbb
shl
jmp
repnz
mov
and
stc
icebp
inc
adc
lods
mov
bnd
push
test
mov
xchg
cmp
cmp
btc
jmp
iret
hlt
popa
imul
jns
lahf
adc
or
std
lcall
mov
inc
lret
and
push
decb
stos
arpl
push
cmp
shrl
cmp
test
sub
out
xlat
adc
cli
arpl
xor
lock
lret
sbb
and
pop
loopne
ffree
sub
inc
add
mov
cmp
cli
mov
push
pmaxub
inc
sbb
movsb
lock
lock
aam
mov
sub
stos
data16
cmp
lock
cmpb
xlat
jle
push
sbb
rcrl
hlt
pop
andl
cmpsl
pop
adc
mov
dec
lahf
filds
add
sub
outsb
pop
or
out
dec
cmp
sub
sbb
repz
xor
or
enter
add
out
ss
jbe
stos
pop
in
pop
test
daa
pop
inc
xor
inc
outsl
movsl
push
ljmp
in
sub
xchg
push
push
sub
mov
adc
lret
icebp
jnp
imul
jg
add
push
data16
sub
xchg
mov
pop
repnz
cmp
mov
jns
mov
inc
add
and
jno
es
icebp
clc
insl
icebp
fdivrl
lahf
xchg
pushf
pop
push
repnz
mov
dec
sub
enter
shlb
xor
repnz
flds
jmp
rorl
int
pop
test
sbb
jbe
aam
enter
sarb
mov
sub
dec
xchg
sub
fildl
mov
es
sbb
push
jp
mov
cltd
mov
cmp
push
mov
in
adc
mov
cwtl
sbb
imulb
es
insb
adc
stos
arpl
pop
btcl
gs
jl
dec
sbb
cmp
mov
call
iret
je
gs
inc
xchg
movsl
loop
scas
jecxz
mov
xlat
popf
and
add
push
cs
test
jp
inc
and
jge
or
fnstenv
pop
in
mov
aad
mov
pop
ja
cmpsb
orb
mov
fstp
mov
out
ret
jge
stc
push
loope
or
xchg
dec
aad
mov
in
int3
pushf
in
test
pop
cmpb
fcmovbe
or
jmp
imul
pop
into
add
out
push
add
dec
ret
mov
mov
movsl
fidivrs
in
mov
pop
iret
push
in
xor
ret
mov
inc
in
cld
xchg
lock
rorl
mov
arpl
subl
mov
imul
popf
test
adc
arpl
cmp
and
test
aaa
insb
push
pop
ljmp
test
stos
popf
enter
loop
ss
fs
dec
and
adc
aaa
cli
leave
pop
insb
test
out
push
sub
cmpsl
dec
lcall
and
int
push
xlat
xchg
data16
mov
cmp
enter
cmpsb
lret
test
xchg
and
push
lcall
daa
and
mov
mov
sub
mov
mov
outsl
cmpsb
jle
lret
mov
test
testl
clc
pop
aam
nop
es
pop
lret
jae
cmp
cwtl
push
insb
xlat
mov
in
fdivrl
in
fcmove
and
int
scas
and
repz
jnp
dec
jge
orb
fists
arpl
cmp
and
pop
stc
ljmp
cmp
add
jo
jecxz
ljmp
aad
cltd
in
lret
loop
int3
fcmovb
mov
jb
dec
aas
sub
js
movsb
mov
fs
pusha
cmp
mov
rcrl
or
push
stos
sub
add
daa
lock
cwtl
jl
in
mov
data16
es
mov
loopne
or
lock
sub
mov
pushf
jecxz
in
xchg
lds
mov
fstpt
mov
in
xchg
int
sub
stc
dec
mov
ja
inc
inc
adc
imul
inc
fildl
pusha
std
xchg
jg
and
and
movsl
xchg
push
jge
inc
jo
xorb
rol
daa
pop
lcall
add
das
inc
das
pop
and
adc
pop
movsl
cmp
scas
scas
push
loope
pop
int3
lea
mov
orb
aaa
shl
testl
pop
fdivr
push
subl
add
sbb
jns
aad
xor
in
mov
lcall
jbe
lret
and
jge
mov
and
scas
out
stc
pop
cmpsb
sub
cmp
mov
je
cmp
jnp
cmp
call
es
mov
insb
rcrb
stc
add
vandps
call
or
bound
jge
repnz
lds
cmp
adc
jmp
out
test
ficoms
fmull
scas
xor
cmp
mov
sbb
loope
cmc
loope
and
or
jno
mov
fs
xchg
outsl
push
lcall
call
rolb
cwtl
add
jnp
rorl
mov
call
dec
nop
xchg
pop
cmp
push
mov
sub
xchg
adc
dec
push
mov
xchg
xor
cmp
dec
shlb
adc
jno
imul
sub
lods
xchg
ret
loope
xchg
push
add
dec
sbb
dec
pop
scas
pop
test
es
arpl
or
cmpsl
mov
incb
add
sahf
xchg
and
pop
mov
lcall
jnp
mov
or
test
push
mov
mov
adc
xor
sahf
mov
ds
inc
sahf
insl
repnz
push
loop
imulb
jo
scas
out
xor
fs
push
jg
mov
push
cs
push
andb
xor
add
jo
ss
nop
jns
fwait
mov
xor
rclb
rorl
sti
push
movlps
std
sbb
cmp
add
sbbb
fisttps
jp
sbb
cmp
ja
inc
out
or
das
mov
xchg
pop
lret
push
cmp
cmp
adc
jne
lahf
push
cwtl
cltd
push
andl
add
push
idivl
in
out
test
jnp
fidivrl
dec
sarb
rcrl
jge
arpl
or
mov
mov
insl
mov
popl
sti
imul
pop
jns
cltd
inc
in
push
jp
pop
ror
arpl
push
mov
jg
xchg
sbb
cmp
outsl
sbb
je
and
mov
hlt
or
jmp
sub
mov
add
fwait
sahf
iret
loop
cmp
push
push
arpl
mov
and
mov
cmp
pop
jg
or
loop
scas
stos
jmp
sub
ljmp
out
sahf
negl
enter
es
sbb
sbb
xor
mov
xchg
and
mov
ret
mov
mov
push
sbb
ficomps
dec
push
mov
nop
and
push
fimull
idivb
int3
lcall
xchg
das
sar
pop
cmp
jne
rorb
shrl
out
inc
movsb
cmpb
xchg
mov
mov
leave
and
mov
xor
xchg
sbb
push
jne
cmp
sub
stc
incb
je
loop
sub
mov
mov
pop
push
out
es
inc
pop
pop
repnz
adc
and
andb
mov
in
xorl
idivb
push
sub
jecxz
mov
inc
mov
lock
pop
gs
jecxz
pushf
sahf
popf
call
add
pop
push
jns
int
mov
inc
sbb
push
mov
xlat
and
fsts
cmove
mov
mov
pop
lds
jns
push
inc
or
xor
xchg
adc
push
adc
mov
shll
inc
fldl
mov
mov
sbb
dec
mov
out
push
pusha
push
or
xchg
insl
outsb
cli
push
sbb
xchg
and
add
sahf
lahf
mov
add
mov
data16
cmp
push
daa
push
jnp
pushf
xchg
into
cmp
mov
push
insb
cli
pop
dec
cmc
mov
ss
test
add
out
xchg
imul
sbb
mov
out
sbb
mov
xorl
mov
dec
jne
adc
test
pop
loop
or
dec
xor
or
adc
sahf
dec
xlat
push
subb
movsl
int3
xlat
xor
out
add
push
lods
push
jmp
scas
daa
sbb
push
test
or
xor
push
inc
push
or
jne
aam
mov
mov
jmp
xor
cmp
cltd
mov
or
inc
xor
add
sbb
enter
lods
dec
insb
repz
jo
packssdw
mov
in
or
add
dec
push
das
leave
inc
mov
pop
xor
add
dec
dec
push
stos
les
movsl
adc
push
mov
in
shlb
add
mov
lods
xchg
pop
add
out
stos
sub
xchg
std
in
mov
sub
aam
pop
notl
cltd
push
xchg
push
mov
outsl
jne
aas
aam
popw
push
dec
inc
jb
xlat
movsl
mov
nop
adc
cs
lcall
jge
push
insl
sub
mov
mov
lds
xchg
lret
xchg
les
stos
les
push
mov
into
dec
xchg
push
sub
jbe
xor
je
xchg
mov
xorl
or
jecxz
push
mov
bound
test
jmp
lea
scas
cltd
pop
xor
lods
pop
stos
arpl
and
dec
sub
mov
mov
mov
in
add
dec
dec
addl
out
xchg
dec
int
jl
add
enter
mov
fwait
lret
mov
mov
cli
sahf
xchg
nop
stos
fistpl
sbb
inc
addr16
ds
push
sbb
outsb
or
xorl
pop
sbb
and
lcall
out
dec
fidivs
or
xor
fwait
sub
or
or
das
movsb
mov
lea
and
mov
jecxz
and
pusha
xchg
das
test
sbb
test
or
jmp
std
iret
cmp
push
pushf
push
fcmove
icebp
jecxz
xor
je
and
fdivrs
data16
dec
xlat
mov
push
cltd
sbb
push
mov
push
bound
xchg
and
fisttpl
xor
orb
fldcw
sbb
dec
push
out
dec
cmp
test
lahf
adc
mov
das
sbb
adc
push
int
imul
push
cmp
sbb
lock
push
outsl
lock
mov
xor
inc
pop
daa
mov
dec
pop
jne
enter
adc
xchg
test
js
movsl
cmc
insl
jb
cmpsb
pop
rep
test
nop
cs
jmp
lret
imul
int3
dec
pop
pop
orb
jg
inc
cmp
and
jb
xor
ss
icebp
lahf
xor
lea
pop
shl
aad
adc
popf
sbb
negl
in
pop
scas
bound
dec
xlat
or
fstps
dec
shrd
int
imul
mov
jns
aaa
dec
jbe
mov
or
les
das
xchg
xchg
pushf
outsl
mov
cmpl
rcrb
lahf
repz
or
enter
in
adcb
loopne
cmp
arpl
inc
sbb
jb
lret
and
adc
cwtl
in
push
xor
lret
mov
pop
push
jno
sbb
test
sbb
xchg
mov
out
pop
add
and
bts
enter
cmc
call
mov
call
and
jo
pop
or
repnz
pop
jb
shrb
adc
or
test
push
popl
subl
cmpsl
mov
clc
jge
cmpsl
ss
inc
jp
or
push
jno
repnz
or
idivb
lods
stc
lret
in
cmc
push
test
stc
imul
lret
xchg
inc
or
push
into
ds
jmp
nop
fdiv
or
inc
push
js
shlb
out
push
inc
aam
adc
adc
nop
lea
xorb
mov
jmp
push
outsl
or
repnz
ljmp
in
ja
data16
push
fsub
fadds
add
lods
ss
sbb
insb
dec
dec
pop
mov
insb
adc
or
fs
into
inc
adc
jp
insl
mov
lahf
fsubl
sbb
push
insb
jb
mov
out
cmp
add
xchg
and
lret
test
outsl
dec
pushf
sub
add
mov
sub
adc
lret
or
push
sub
faddl
int
jp
scas
test
imul
jl
pop
xchg
or
xchg
xchg
and
adc
fisttps
jbe
aaa
xlat
jle
lcall
inc
sahf
cld
mov
push
jno
mov
pop
in
mov
sub
push
mov
mov
inc
dec
jne
pop
lret
jno
mov
adc
aad
fs
jae
xchg
lret
mov
enter
push
inc
mov
loope
cmp
cmp
xor
addr16
shrb
int
loopne
push
aas
das
aaa
xor
in
frstor
std
xadd
mov
dec
xor
mov
dec
dec
sbb
pop
jle
pop
scas
and
push
adc
mov
push
mov
fiadds
dec
test
and
scas
outsb
cwtl
out
mov
or
jecxz
fistps
jbe
call
arpl
data16
outsl
insl
cmp
sbbb
jns
repz
push
fimull
inc
fcoms
xor
pop
fadds
mov
mov
negb
lock
in
je
sub
jl
sub
pop
xor
mov
pop
or
pop
dec
and
insl
js
push
dec
mov
push
cmp
pusha
xor
mov
mov
adc
lods
pop
mov
xor
ljmp
sbb
cmpl
and
shl
fucomip
ljmp
xchg
movsb
out
cwtl
jo
pop
filds
xor
mov
mov
shll
mov
je
jno
out
loop
inc
test
mov
mov
adc
add
sbb
push
out
imul
mov
sbb
xlat
in
dec
aas
jle
sbb
jl
sub
ljmp
cmp
mov
mov
or
pop
int
mov
xor
cmp
mov
push
adc
fnstsw
mov
jbe
cwtl
lods
pop
cs
call
test
mov
xchg
cmp
shll
cmpsb
jns
adc
inc
fmuls
adc
xchg
ret
das
loopne
cmp
sbb
ret
or
sub
inc
clc
or
mov
push
push
xchg
aaa
dec
xchg
sub
mov
ret
stc
and
jns
inc
push
add
push
lcall
cld
mov
lods
xor
push
ret
xchg
je
add
iretw
sbb
mov
cmp
dec
ret
pop
in
dec
mov
sti
test
lahf
lret
stc
into
loope
pushf
stos
sahf
test
adc
jne
or
cmc
arpl
dec
xchg
xor
fcmove
or
movsb
add
and
fs
or
mov
popa
out
cmp
xlat
and
jo
jmp
shrb
or
mov
hlt
inc
ds
dec
add
adc
jb
add
mov
jbe
icebp
subb
mov
lret
bnd
es
shll
sbb
lods
arpl
mov
cmpsl
fs
jnp
cmp
cmc
adc
addr16
jl
mov
push
mov
repnz
sti
dec
stc
scas
dec
scas
push
call
sarl
in
mov
jno
shrb
frstor
and
mov
add
push
jge
inc
icebp
mov
insb
sub
data16
add
xchg
jo
mov
pop
push
in
dec
lret
out
jle
jo
enter
mov
mov
push
pop
push
xchg
bound
lock
insb
push
jb
push
and
ja
and
fistps
in
pop
xor
adc
mov
negl
daa
mov
cmp
outsb
xchg
repz
fyl2x
adc
shll
push
lret
jnp
sub
push
push
mov
mov
movsb
dec
les
dec
push
mov
in
cmp
lods
push
mov
lock
lcall
cmp
xchg
les
fnstcw
xor
test
shr
jge
mov
push
sbb
imul
lock
cmp
push
push
jmp
lret
add
pop
pop
adc
fldl
aad
fs
movsl
sbb
gs
inc
dec
add
daa
out
sub
cmp
repz
aaa
push
js
mov
and
rorl
ret
sbb
cmc
mov
cld
cwtl
loopne
frstor
mov
dec
mov
pop
arpl
sub
lea
mov
dec
xor
fs
push
or
lods
mov
xchg
insb
and
or
dec
cmp
cmc
push
shll
mov
cltd
js
pop
cs
add
sub
insl
ret
mov
ljmp
jb
repz
int
sub
mov
clc
lock
lret
js
and
jae
jecxz
inc
arpl
jno
inc
lock
loop
mov
push
lods
ss
add
ss
xor
fnsave
or
movsb
sti
adcl
movsb
mov
test
das
jl
enter
add
rorb
adc
inc
fistpll
dec
jmp
je
rcll
xchg
lods
mov
addr16
cmc
fwait
adc
aas
push
lret
push
je
ficoml
xchg
pop
push
in
in
xor
pop
in
out
jmp
test
repz
outsb
loop
inc
aam
add
and
jmp
daa
orb
fs
mov
mov
jecxz
aad
and
xchg
dec
xchg
xor
inc
mov
adc
loopne
and
push
movsb
xchg
pop
sti
int3
jne
test
nop
add
pop
add
movsb
iret
es
clc
repz
jl
sbb
mov
xchg
stos
daa
jae
test
aaa
out
fwait
push
popa
pop
jb
out
sahf
scas
or
xlat
addr16
adc
xchg
mov
pop
mov
jge
gs
loop
pop
cli
lods
fsubp
jge
sahf
mov
mov
push
jle
mov
push
fdivl
inc
in
inc
jl
mov
xchg
xchg
lods
mov
cmp
xchg
das
push
dec
je
gs
push
cmp
or
dec
xchg
aaa
icebp
or
insb
mov
insb
leave
pop
mov
cmc
popa
mov
test
pop
xchg
add
dec
jno
cmp
addl
add
xchg
sbb
xchg
lret
out
or
fcmovbe
lret
neg
jmp
in
hlt
lahf
ljmp
scas
or
mov
lret
cmc
fldenv
pop
xchg
stos
ss
mov
dec
rcrl
mov
mov
mov
push
mov
inc
cmc
imul
sbb
insl
xchg
inc
lea
je
neg
mov
jo
in
lods
in
mov
cs
xchg
jnp
dec
fs
push
lds
lea
mov
push
mov
or
fdiv
in
fmuls
jae
cmp
aas
pop
inc
int
mov
test
iret
mov
pop
mov
jns
ret
arpl
test
jmp
test
pop
mov
cld
inc
xor
mov
gs
fisttpl
int3
adc
pop
jne
mov
pop
cmp
jle
adc
int3
push
lea
movsl
shll
mov
lret
pop
jmp
test
mov
fsubrs
out
mov
jmp
pop
push
sub
out
shrl
in
adc
jle
imul
cmpsl
mov
scas
mov
pop
daa
ret
or
and
shrb
mov
adc
inc
movsb
mov
add
lds
and
mov
xor
ja
fbld
pusha
out
mov
dec
mov
repnz
pop
and
inc
mov
xchg
or
mov
adc
add
sbb
fists
stc
and
ret
into
leave
insb
rep
ficomps
jl
rolb
into
ds
sahf
push
or
cltd
scas
ljmp
aam
jne
fsubl
and
sub
mov
mov
cmp
aas
push
xorl
or
and
lea
xor
adc
movsb
jmp
scas
in
andl
inc
data16
fldenv
clc
sub
and
stos
mov
mov
and
enter
popf
or
popa
pusha
push
xchg
mov
and
push
lods
sub
fsubrl
sti
inc
testl
jnp
faddp
or
sbb
xlat
sbb
movb
inc
repz
outsb
loope
pop
add
fwait
and
inc
stos
xchg
loop
scas
and
sub
icebp
stos
lods
arpl
cmp
ss
ficomps
aad
lods
mov
mov
pop
mov
lods
out
lret
xor
add
cmp
outsb
sbb
int3
inc
sbb
lea
js
popf
mov
and
out
pop
arpl
je
in
push
movsl
cmpsb
lahf
pop
cmp
sar
sarb
dec
ss
cmp
or
jno
inc
mov
out
fstpl
daa
test
fsubrl
out
and
cli
lcall
popf
ret
imul
stos
popf
mov
icebp
mov
dec
lds
int3
test
mov
jmp
or
jno
les
sub
pusha
sub
insl
push
push
cmp
rorb
mov
xor
bound
adcl
sub
lcall
pop
dec
js
lods
sub
leave
add
fisubl
icebp
in
outsb
cmp
sarl
mov
mov
dec
add
out
xor
mov
and
out
jb
negb
push
popf
shll
mov
loopne
stos
movsl
push
sti
jno
sahf
xor
push
fwait
dec
ret
into
arpl
jbe
or
out
mov
in
fsubrs
cli
out
cli
add
add
adc
mov
add
clc
addb
notl
pop
adc
push
fnstsw
es
stos
sub
out
ja
daa
cs
pop
xor
jne
subl
pop
into
sub
cwtl
mov
inc
pop
ds
cmp
les
ficompl
ja
or
in
cmp
dec
in
nop
lret
leave
in
test
push
iret
pop
lret
scas
test
orb
xlat
push
xor
iret
fisubrs
xor
fnstenv
xchg
jp
repz
mov
adc
pop
cmpsl
jb,pt
cli
dec
rclb
dec
and
fsub
fisttps
gs
data16
adc
and
mov
arpl
dec
pushf
enter
mov
data16
subb
xchg
xlat
push
bound
cltd
fcomps
xchg
or
lods
push
js
ffree
sub
adc
cmp
fiadds
test
adc
ret
mov
xchg
pop
push
sub
rcl
filds
movsl
aas
or
inc
or
cs
xor
lock
pop
es
mov
xchg
mov
push
pop
loop
jle
das
mov
dec
ss
pop
cwtl
mov
test
inc
negb
out
lcall
adc
repz
xor
cmpsb
aam
incb
mov
ss
fisttps
push
jecxz
and
leave
ret
push
repz
pushf
xor
roll
inc
xchg
std
inc
sbb
fsubl
int
clc
mov
shll
jae
les
movsl
fildl
dec
and
dec
enter
fistl
int
ret
push
enter
stos
cmpsb
mov
pop
out
inc
mov
dec
cmp
fwait
push
jns
xor
inc
es
inc
push
ja
push
sub
ds
xchg
cmp
dec
mov
lahf
stos
jmp
imul
test
sub
pop
or
stc
je
test
addr16
inc
cmp
mov
movsbl
mov
cmp
jae
cmpsb
pop
sub
push
mov
push
add
push
dec
pushf
bound
cld
shll
setg
sub
sub
xchg
push
or
jge
cmp
pop
mov
fdiv
lcall
jo
insb
inc
jne
adc
in
cmp
in
add
jne
or
addb
stos
mov
cld
lods
sub
cmp
ljmp
lret
imul
cwtl
hlt
mov
and
inc
jecxz
lret
loop
pop
or
jno
jmp
scas
xchg
xor
xchg
or
sti
xchg
inc
pushf
xchg
roll
mov
mov
mov
adc
jle
pop
aad
call
jae
sbb
lcall
jo
aaa
push
mov
pushl
outsl
adc
test
cmp
repz
cld
flds
rorb
test
mov
cmp
mov
fildl
dec
jns
stc
pop
mov
push
push
mov
mov
push
cmp
push
cwtl
cs
mov
sub
dec
jmp
jmp
hlt
dec
aam
inc
add
js
mov
dec
xchg
je
jg
lcall
out
sbb
mov
ds
repz
inc
add
cmp
pop
std
enter
insl
xchg
les
push
dec
fchs
sub
dec
adc
mov
adc
jle
cmp
push
out
inc
imul
loope
dec
mov
clc
movl
jmp
and
movsb
sbb
aam
shll
mov
xchg
mov
sbb
das
push
mov
fldenv
lret
inc
insb
pop
stos
in
jne
cltd
int
pop
jmp
jnp
out
sub
and
ret
cmpsb
xchg
mov
shrl
inc
test
out
inc
or
jmp
lock
cltd
cmc
sub
shll
dec
mov
aad
lock
das
mov
jle
jmp
pusha
mov
in
std
and
cwtl
mov
inc
or
jge
add
jmp
mov
xchg
sub
sbb
mov
xchg
ret
inc
push
iret
or
mov
xchg
lea
sti
stos
sbbl
ja
or
mov
push
cmpsb
pop
or
pop
push
cmpb
out
lret
adc
sahf
ja
out
mov
push
es
pop
out
aas
or
cmp
and
pop
mov
inc
jnp
push
jnp
xlat
xor
cmpsb
popa
fcompl
fdivs
jb
inc
pop
daa
jb
movb
sbb
sbb
lods
outsb
out
popf
out
inc
bnd
xchg
inc
mov
mov
fwait
and
outsb
fs
adc
popa
iret
mov
sti
in
adc
pop
and
jae
adc
or
std
pop
fisttps
loope
test
fucomip
in
push
mov
std
inc
daa
mov
arpl
ret
es
push
mov
mov
inc
xchg
sbb
rolb
jbe
xor
pextrw
and
sub
bound
lret
mov
nop
sbb
shlb
testb
mov
outsb
mov
mov
mov
cld
lret
cmc
mov
push
int
nop
mov
les
adc
xchg
dec
push
mov
mov
cmp
push
inc
js
and
and
idivb
js
or
or
mov
cli
sub
jo
push
adc
test
sub
inc
repz
mov
mov
jns
mov
movsb
loope
jmp
icebp
jns
notb
out
xchg
jno
mov
js
push
insl
mov
add
out
lods
pushl
sbb
and
cmp
out
addb
xchg
lods
movsb
add
sbb
jg
adc
imul
sub
pop
dec
popf
fcmovu
jb
movsl
xor
mov
mov
or
lcall
cmp
loop
dec
lea
pop
shll
push
into
lods
inc
push
ret
inc
aas
or
push
ljmp
fisttpll
sarb
xor
adc
aad
fdiv
pop
es
nop
mov
ljmp
or
mov
pusha
fwait
mov
xorl
pop
int3
and
cmp
add
sub
add
sub
jmp
xcrypt-ctr
cmpsl
pushf
mov
sti
mov
addr16
lods
adc
je
arpl
rolb
jae
sbb
mov
lods
mov
shll
dec
mov
andl
and
hlt
mov
sbb
ljmp
lods
xchg
in
lods
push
stos
push
mov
loope
jbe
in
outsb
cld
std
in
jp
pop
add
push
sbb
adc
mulb
mov
lret
jo
pop
dec
mov
or
shll
fs
lods
lret
shll
xchg
mov
ss
loop
jg
adc
sub
je
rep
push
pop
pop
outsb
jmp
cmp
pop
lahf
push
jno
loopne
das
or
fstpt
mov
and
push
sub
dec
push
mov
add
mov
js
imul
int3
rorb
call
idivb
out
mov
aad
cmpsb
popf
arpl
aad
jmp
sbb
jnp
scas
test
xor
lods
mov
inc
dec
jnp
inc
or
cs
xchg
in
insb
mov
jbe
push
xchg
mov
or
xlat
rcl
or
and
adc
fbld
xor
sub
int3
ret
inc
pop
ja
jb
hlt
or
or
sahf
inc
aaa
lahf
out
addl
mov
out
jmp
mov
insl
push
jl
jge
sub
js
and
int
sbb
xchg
sbbb
arpl
mov
sbb
int3
or
loopne
sub
xchg
in
add
pop
xchg
cmp
inc
in
pop
xchg
mov
jb
roll
shlb
gs
add
adc
scas
movsl
ds
addl
adcb
inc
mov
or
mov
cmc
and
sub
rorb
sbb
mov
jae
es
xchg
xor
fstpt
push
or
push
xchg
cmp
xor
adc
and
sub
mov
into
cmp
aaa
lret
bound
push
mov
and
aas
test
jp
insl
jne
enter
not
out
popf
aad
push
js
pop
cmpsl
lret
pop
pmulhuw
fistl
testl
fdivs
insb
sub
xchg
cmpsl
cs
insl
ljmp
xor
imul
ffreep
cwtl
out
push
aad
dec
inc
ficompl
xchg
push
fldenv
sbb
add
fimull
or
mov
int3
daa
inc
hlt
xor
mov
mov
xor
cld
inc
roll
sbb
mov
sub
aad
xchg
mov
repz
jae
dec
fwait
nop
shrb
dec
pop
pavgb
insb
iret
sub
frstor
fnsave
iret
enter
jge
inc
xor
fiaddl
jecxz
iret
xchg
es
stos
fdivrl
out
ficoms
pusha
xor
ret
jle
and
jno
loope
leave
rorb
gs
jo
movsl
sti
xchg
pop
pop
in
rorb
repz
popf
testl
icebp
insb
jg
cld
in
iret
xchg
lahf
iret
lock
rorb
pop
cwtl
pop
jnp
inc
packuswb
outsb
movaps
sbb
leave
xchg
jne
jl
push
out
xchg
rorb
adc
fdivs
setg
cmp
rorl
inc
cmp
cli
repnz
push
hlt
mov
dec
lcall
and
cmp
and
loop
fbld
jecxz
dec
sbb
test
inc
adc
add
xchg
addr16
adc
popf
and
aaa
pushf
shlb
loope
nop
lahf
jbe
xchg
outsb
arpl
or
lods
in
adc
ss
movsl
mov
jge
dec
fdivrl
push
and
mov
mov
roll
add
rcr
push
push
xor
mov
dec
cs
mov
lods
loop
mov
push
pop
sub
or
in
fbstp
push
rcrb
das
jnp
xchg
rcrb
xchg
dec
push
add
in
mov
sar
sarl
jmp
in
xor
clc
cmp
nop
mov
aaa
jno
fnstsw
pop
fcmovb
mov
push
ljmp
jne
sub
cli
fs
mov
xor
adc
scas
mul
mov
jno
dec
aas
jp
sbb
sub
cmc
mov
loope
popf
add
lahf
cwtl
out
lret
repz
adc
pushf
jo
inc
shrl
push
test
mov
push
or
dec
pop
icebp
xchg
pop
dec
inc
dec
sbb
in
xor
lahf
movsl
sti
jae
cmp
mov
mov
dec
xor
push
cmp
mov
pop
jne
daa
pusha
cwtl
fs
aaa
xchg
dec
mov
mov
lods
jg
aad
js
push
lahf
sbb
push
mov
arpl
jl
inc
addb
add
xchg
xchg
push
jb
stos
dec
mov
pop
sbb
pop
mov
add
inc
sarb
arpl
jl
sbb
or
mov
adc
inc
rorl
jle
fstps
shll
shlb
lret
les
mov
leave
pop
lods
bound
icebp
test
imul
les
inc
lods
cmpl
shlb
and
add
sub
xlat
cmp
lahf
mov
stos
loopne
jo
sub
push
xor
jecxz
mov
cmpsb
push
test
pop
mov
sub
dec
hlt
pop
jnp
jecxz
jl
mov
das
add
mov
xchg
sbb
mov
iret
pushf
out
sub
push
sbb
je
mov
ss
in
cwtl
jbe
in
std
add
fdiv
outsb
and
xchg
pop
push
ljmp
fs
mov
addr16
inc
mov
xchg
das
mov
add
sbbl
lcall
insl
and
imulb
mov
xor
daa
repnz
xor
inc
cmp
lock
jns
clc
push
cmp
outsb
pop
fxch
imul
int3
cli
mull
outsb
jne
dec
sbb
cmp
fsub
inc
int3
loope
mov
jo
test
ja
add
in
int
jg
data16
sub
les
mov
idiv
xchg
lcall
shll
push
popf
fmull
out
cmpsb
arpl
iret
mov
and
icebp
cmp
cmp
fisubrl
pop
test
fnstenv
mov
cwtl
and
sub
sbb
roll
or
daa
or
je
std
daa
dec
pop
and
call
hlt
test
push
ret
insl
push
lock
test
loope
or
xor
je
push
arpl
sub
dec
dec
addb
mov
lea
mov
js
lock
fists
in
stc
inc
movsb
test
cmp
insb
fcomps
icebp
mov
push
jge
push
adc
push
sub
inc
mov
push
mov
push
test
push
in
lahf
push
mov
movsb
push
xchg
mov
or
rcrb
push
mov
arpl
aas
mov
sub
rep
or
and
cltd
lds
pop
mov
adc
pop
xor
jmp
or
movsb
cmp
rol
adc
movsb
stos
loop
das
sbb
mov
xor
sub
mov
dec
cmp
inc
call
imul
out
lea
jns
and
mov
dec
test
shrl
and
data16
out
rcrb
test
cs
push
ljmp
hlt
je
lds
inc
test
sahf
push
je
xor
test
rclb
arpl
sbb
stos
enter
dec
cltd
jo
mov
push
dec
sbb
pop
cwtl
mov
cmpl
inc
mov
repz
je
or
push
mov
push
push
pop
popf
sbbb
leave
lret
lea
cld
or
jl
stos
mov
cmp
cmp
fwait
dec
out
pusha
sub
jg
jae
jecxz
xorb
inc
and
cli
test
stos
aad
sub
dec
pop
sbb
stos
loopne
mov
sti
xchg
cmp
pushl
jl
and
mov
inc
jo
lcall
mov
lock
aaa
push
push
and
loop
mov
push
aam
cli
and
mov
int3
mov
sbb
ret
jp
out
xchg
inc
fldt
dec
jecxz
lea
xor
in
add
lods
shrl
jne
insl
adc
mov
popf
mov
xchg
sbb
sarb
jmp
jbe
scas
mov
push
jge
stc
sub
jl
mov
inc
popf
sti
add
cmpsb
mov
pushf
mov
jns
aam
test
adc
xlat
ret
cmp
pop
inc
pop
add
insl
in
pop
data16
adc
or
inc
cltd
xchg
int
push
inc
mov
test
add
mov
push
sbb
sub
push
repz
sub
out
xor
in
stos
movsl
cmpsl
pop
jge
iret
inc
push
fadd
jo
xchg
jnp
loop
cmp
or
pop
sub
divl
and
sti
cwtl
frstor
icebp
or
dec
push
mov
inc
movsl
mov
xchg
fisubrs
mov
out
mov
xor
ljmp
rcrl
lods
fisttps
sub
cmc
add
js
xor
push
mov
fdivs
bound
addr16
add
inc
fdivs
mov
aam
ja
push
orps
dec
jo
iret
sub
mov
imul
imul
scas
int3
sub
aas
icebp
add
lods
ja
fdiv
cmp
inc
stos
xor
pop
or
push
enter
cwtl
scas
repnz
repz
mov
imulb
aam
inc
adc
loopne
xor
push
loop
mov
and
cmp
push
popa
xchg
loopne
push
jg
cmc
mov
test
mov
xchg
ja
push
xor
dec
cmpb
pop
inc
mov
dec
jecxz
mov
clc
sbb
sub
mov
xchg
test
mov
into
dec
pusha
into
or
jno
in
loop
sub
pop
xor
pusha
in
xor
in
cli
mov
sbb
test
decl
fs
push
pop
pop
jl
cmp
out
andb
xor
pop
loopne
mov
es
push
in
push
mov
push
aam
hlt
sub
ret
movsl
lret
push
or
pop
or
push
and
mov
cld
fildl
jno
push
xor
and
mov
add
dec
pop
lods
aad
push
pop
popf
rorl
mov
addb
addr16
xorb
mov
cmp
pop
push
add
xor
add
out
push
adc
mov
jg
test
sbb
ds
adc
mov
fnstenv
sbb
in
pop
or
xchg
andl
or
sbbb
pop
ret
and
aas
mov
into
cmp
jp
std
push
inc
dec
cld
iret
loope
dec
fwait
out
mov
aas
test
pop
subb
mov
lock
sub
scas
jbe
jecxz
mov
jns
pop
mov
cmpsb
push
shll
push
lds
lret
les
fistl
dec
mov
fsts
adc
or
js
ret
lods
inc
pop
sub
xchg
mov
testl
xchg
and
ficoml
push
add
sahf
scas
ffree
jle
loope
pushl
cmp
inc
and
xchg
cld
cmp
lods
cli
or
sub
lods
pop
xor
in
insl
jns
cmp
xchg
fs
push
fidivs
xchg
add
popf
mov
mov
dec
fsub
or
roll
sub
mov
sub
repz
push
fwait
cmp
push
and
into
arpl
movsl
jno
dec
ds
jmp
fdivrs
incb
out
mov
cmc
push
loopne
testb
out
inc
jae
jnp
outsl
daa
push
push
mov
pop
inc
enter
jb
jle
getsec
add
jne
sub
pop
sbb
jbe
adc
insl
sti
les
mov
sbb
test
sbb
dec
adc
xchg
add
mov
mov
jle
pusha
push
insl
inc
jg
int
mov
add
xor
out
and
push
and
xchg
fisubrs
out
xor
ljmp
cli
stc
cmp
sbb
and
xchg
cld
adc
sbb
jg
movsb
pop
mov
mov
xorl
mov
mov
scas
and
inc
mov
adc
shlb
cmp
push
inc
rcll
aam
lods
and
nop
xor
out
shl
jbe
lahf
xor
adc
sbb
mov
lods
aam
push
mov
in
lahf
pop
inc
xchg
das
mov
and
mov
adc
addr16
imul
pop
push
pop
push
movsb
mov
sub
fldenv
push
adcb
jnp
mov
inc
and
or
daa
mov
cmp
lahf
ljmp
xchg
dec
lcall
xchg
int
xlat
cltd
mov
test
mov
or
ficomps
fildl
mov
mov
push
insb
or
rcrl
scas
sahf
popf
inc
jmp
rolb
mov
add
lods
test
add
inc
inc
push
decb
lret
cmpsb
pop
out
adcl
adc
jmp
xor
aad
inc
popf
ja
out
addr16
test
out
push
mov
les
dec
or
sub
test
or
or
ds
jae
out
cmpsl
dec
cli
lret
popa
mov
mov
xchg
mov
repz
mov
pop
sub
rorl
jo
in
lock
arpl
fidivrs
lea
mov
aas
sub
mov
adc
daa
in
outsl
gs
testb
in
sbb
movsl
mov
jecxz
and
out
pusha
mov
xor
pop
pushf
addr16
ds
dec
mulb
push
pop
push
sbb
xchg
test
push
addr16
mov
fcos
mov
xchg
jo
mov
pop
dec
aas
movsl
fcomps
out
cmp
iret
mov
mov
sahf
fstpt
mov
push
and
movsl
out
cli
pop
fnsave
rolb
repnz
in
clc
test
xorb
call
sub
xchg
mov
push
inc
push
rcrb
jns
fnstenv
pop
inc
imul
and
in
mov
push
xchg
das
add
xor
xor
sbb
and
pushf
dec
imul
xor
push
jecxz
rcll
and
cs
mov
lahf
inc
sub
mov
js
cmp
jae
test
in
mov
push
stos
pop
in
jg
cmpsb
jbe
sarb
mov
dec
and
mov
dec
adc
mov
pop
rcll
mov
push
stc
cmpb
sbb
dec
icebp
and
xchg
or
cmpsl
push
xchg
lcall
stos
mov
jl
sbb
imul
jo
sub
pop
fs
jbe
lods
mov
jne
and
jp
test
enter
xor
adc
push
push
mov
addr16
mov
jp
sahf
mov
arpl
fstps
xchg
pop
xor
iret
xor
dec
bswap
cmpsb
in
les
pushf
rcr
dec
mov
dec
test
icebp
cmp
fwait
mov
pushf
sub
shll
push
rcr
mov
ficoml
outsl
rclb
or
popf
add
push
out
out
mov
pop
das
inc
jle
xchg
mov
js
pop
repz
adc
rcr
mov
jg
add
clc
adc
mov
and
rcrl
lods
addr16
leave
push
sub
dec
and
loope
stc
mov
aaa
mov
cli
iret
and
pop
fnstenv
rorl
xlat
and
mov
std
dec
nop
test
int
sub
push
aad
cmp
mov
test
sub
mov
mov
or
jne
pop
mov
lds
and
xor
dec
outsl
or
int
inc
js
or
ror
es
lcall
and
jno
push
push
mov
cmpsl
cmpsb
jae
les
aam
imull
in
cmp
jns
jle
mov
jbe
adc
cmpsb
mov
jmp
aas
loope
in
sub
jge
sub
jno
fcomps
dec
mov
icebp
jnp
cmp
pop
mov
ja
cmc
test
lret
dec
push
popf
loopne
dec
je
pop
xchg
mov
fucomp
mov
inc
mov
arpl
xchg
imul
aad
aas
jmp
mov
aaa
inc
mov
daa
lds
jmp
ja
ss
test
scas
add
mov
mov
out
push
es
pop
push
mov
daa
loope
loope
cmp
in
sub
adc
jno
ja
enter
lods
rolb
nop
cli
xchg
push
scas
idivb
pop
clc
ds
mov
push
inc
sub
jne
push
lods
insl
scas
pop
addr16
jbe
add
jne
aad
cmp
imul
xchg
mov
leave
movsl
shrb
cmp
lea
inc
mov
scas
test
pop
imul
dec
inc
cmp
mov
sbb
pop
loop
scas
dec
mov
dec
out
outsb
jb
sub
addr16
es
mov
ror
aas
clc
mov
mov
test
outsb
xlat
int
aaa
ja
arpl
add
push
call
dec
stc
or
xchg
push
mov
movsl
leave
mov
hlt
int
imul
lods
imul
mov
movsl
mov
jne
sub
dec
pop
cmp
outsb
mov
movsb
xor
jae
pushf
xor
sar
mov
cmp
mov
in
jnp
sbb
sarl
pop
and
dec
cld
int
stc
and
sub
aas
sub
lcall
xchg
xchg
shll
data16
mov
adc
jge
cmp
lods
mov
jmp
lahf
fs
out
adc
dec
cmpsb
fldcw
loopne
inc
adc
or
cltd
hlt
add
jp
push
sub
mov
add
fistpl
out
cwtl
inc
xchg
mov
stc
pop
mov
xchg
aas
insb
loope
mov
movsb
addr16
mov
inc
popa
std
pop
jns
daa
push
or
fistps
sub
jo
mov
mov
fcomi
mov
out
xor
out
shl
sbb
sub
das
aam
mov
sub
cwtl
xchg
ret
sahf
sahf
mov
int
mov
dec
push
jecxz
outsl
jl
daa
cli
les
cld
imul
push
sysexit
in
mov
and
sbb
xchg
testl
shrb
hlt
adc
into
xchg
pop
imul
adc
cmpb
add
fucom
or
shrl
push
nop
jg
and
aam
sbbb
test
pusha
jnp
push
es
test
sbb
shll
ljmp
fsubrp
in
adc
es
nop
hlt
jle
mov
lea
int3
adc
push
std
loopne
push
in
pushf
repz
and
xchg
fldl
xchg
dec
test
ret
test
jge
jmp
stos
stos
sub
inc
push
and
jbe
icebp
pushf
inc
andl
addr16
imul
xlat
mov
mov
sbbb
jecxz
les
add
fs
xchg
and
sahf
cmc
shrb
cld
mov
loopne
call
dec
dec
adc
jecxz
cmpsl
cmp
fcompl
out
mov
aaa
jae
adc
add
stc
xor
in
pop
pop
mov
in
shr
enter
pop
clc
aad
mov
mov
dec
pop
inc
add
xlat
cwtl
pop
loope
enter
jbe
stos
jge
mov
test
push
jmp
data16
in
xchg
shll
pop
pusha
pop
inc
out
lret
xlat
cltd
xchg
loope
mov
inc
or
or
aaa
inc
push
loop
push
das
ljmp
push
loopne
lock
and
subps
push
xor
rol
loopne
add
jbe
ret
or
cmpsl
cmovp
aam
lret
sub
add
sub
in
or
subl
les
mov
inc
inc
daa
scas
jno
xor
sarb
and
lea
rorl
lret
movsb
cmp
mov
mov
test
lcallw
nop
mov
int
testb
push
push
repz
sahf
fisubs
addr16
lret
es
cli
mov
jbe
add
js
and
mov
out
je
mov
dec
ss
mov
fistps
mov
jno
sbb
int
and
pop
ds
xorl
test
add
in
movsb
xchg
xor
inc
cmp
cmp
add
inc
cld
out
mov
enter
mov
push
enter
mov
xorl
xchg
xor
pop
aam
mov
add
xchg
stc
mov
dec
sarl
mov
movsl
or
mov
fisubrl
push
aam
pop
inc
fwait
rcrl
push
ja
out
nop
sub
push
mov
lods
shl
cmp
sub
int
dec
dec
stos
in
and
inc
imul
ljmp
imulb
shl
xchg
gs
outsl
dec
jl
push
sbb
out
js
push
jg
testb
lock
fs
scas
push
xchg
ret
hlt
bound
dec
int3
popa
mov
cmp
or
jne
inc
xorl
mov
movsl
pop
stos
mov
xor
in
std
stc
jg
rcll
sbb
mov
cmp
and
arpl
push
xchg
or
call
popw
mov
shrl
dec
and
xor
shl
cmp
lds
pushf
lods
loope
cmp
rcrl
insb
fidivrs
xchg
sbb
nop
imul
xchg
xor
xchg
xchg
ja
es
pop
mov
pop
popl
in
mov
ja
add
insl
scas
pop
jge
ss
push
push
int
aam
adc
pop
data16
sti
push
in
push
pop
xchg
int3
add
xchg
dec
mov
shll
aad
int3
pop
bswap
xchg
push
mov
scas
pop
leave
xorl
jo
out
test
adc
and
or
cmp
add
test
js
sbb
xor
mov
add
sbb
xchg
aad
sub
in
ficoml
jle
inc
mov
shlb
inc
and
mov
dec
mov
jmp
movsb
mov
ret
cwtl
loope
dec
call
adc
lea
js
xlat
or
fsubr
sbb
movsb
mov
xor
sbbb
fbld
mov
xchg
imul
or
dec
jg
inc
xor
mov
call
sbb
mov
out
aam
mov
aas
enter
jae
mov
mov
push
cltd
mov
out
push
leave
jmp
cmpsb
cltd
mov
sarl
sub
ljmp
scas
icebp
and
jns
jae
pop
mov
jno
orl
mov
test
repz
mov
mov
subl
into
xlat
sbb
ja
push
pop
addb
pop
scas
iret
adc
int
xor
sbb
xchg
add
cld
jne
cs
mov
mov
shl
or
and
out
es
pop
xor
lahf
fadds
cs
dec
and
inc
sbbb
aad
nopl
xor
lahf
xor
mov
arpl
jne
inc
fimuls
pop
pop
jb
push
sbb
or
lret
mov
push
sub
aaa
sbb
mov
cltd
jbe
jne
push
stos
hlt
lods
xor
call
in
pop
sbb
test
cmp
mov
push
test
data16
cwtl
mov
jg
xchg
inc
addb
pushf
ss
mov
inc
lea
jo
mov
cs
jne
push
sub
push
push
push
ja
enter
clc
pop
xlat
add
mov
mov
push
lds
cli
xor
repz
or
stc
and
pop
repz
imul
loopne
jne
fsubs
inc
mov
outsb
jge
and
sbb
mov
sti
lahf
cmovne
sub
cmp
loop
clc
testb
ds
sbb
pop
lods
or
inc
rolb
cmpsl
rorb
ss
adc
mov
cmp
hlt
mov
xor
add
cmpb
dec
xchg
xchg
xchg
movsb
lret
mov
mov
es
ret
mov
aad
popa
repnz
mov
loop
xor
mov
daa
ret
popl
or
mov
add
mov
sub
dec
scas
cs
lea
sbb
aas
cmp
sub
mov
mov
xor
dec
cmp
inc
addr16
mov
popa
sub
pop
enter
and
sbb
jmp
sti
dec
dec
xchg
push
or
xlat
or
aaa
adc
imul
adc
mov
in
imul
nop
scas
fldt
movsb
dec
mov
test
add
mov
ficoms
push
std
cmp
pop
je
lret
and
scas
fdivrs
outsl
mov
cmpsb
bound
test
add
or
add
dec
shl
adc
movsb
xor
mov
in
sbb
fmuls
dec
xchg
push
and
mov
cli
sbb
mov
sub
mov
test
inc
xchg
icebp
mov
add
and
ss
nop
ret
std
jae
repnz
cltd
dec
adcb
outsl
cwtl
negb
xlat
cmp
jmp
or
xchg
test
add
test
fidivrs
fisttpl
inc
add
mov
add
mov
and
lds
movsl
add
mov
addl
mov
scas
aam
add
aas
push
mov
into
inc
jp
jno
inc
inc
das
imul
inc
xor
out
pop
mov
loopne
mov
lret
gs
xchg
movsl
out
jmp
js
xchg
fisubs
subl
lods
mov
or
fsubl
std
dec
out
xchg
clc
popa
dec
xchg
push
clc
inc
add
scas
pop
push
push
repnz
out
shlb
je
cwtl
jo
cs
into
sbb
cwtl
aas
add
mov
jnp
ret
pop
jle
fsubrl
cs
orl
and
imul
cmpsb
loop
push
cmp
outsl
insb
popf
arpl
test
stos
cmpb
xchg
dec
daa
ss
test
mov
mov
dec
nop
push
adc
imul
sbb
or
fildl
aad
insl
fmull
or
jmp
cmp
shrb
push
inc
fimull
adc
pushf
int
in
into
pop
gs
add
lret
test
mov
jmp
or
dec
pusha
out
out
out
xor
jns
mov
jo
mov
lahf
pop
lret
movsl
jmp
xor
pop
mov
incl
ljmp
push
or
adc
iret
out
jg
xchg
loop
xchg
push
xor
xor
xchg
mov
inc
fs
push
and
les
mov
push
out
hlt
lea
test
pop
int
les
imul
jle
movsl
jno
aam
or
sub
dec
gs
mov
insb
insl
les
mov
cld
ret
push
leave
ret
lcall
xchg
push
xchg
cmp
into
pop
pop
ss
into
adc
xor
adc
popa
or
push
cld
cmp
ljmp
push
iret
fwait
repnz
popa
jmp
fs
xor
movsb
cmp
and
pop
xchg
pop
in
idivb
jp
sub
xorb
xor
lahf
into
mov
cmp
imul
test
xchg
daa
int3
fwait
push
mov
nop
mov
inc
scas
in
dec
daa
add
mov
mov
mov
leave
je
in
aad
push
stc
mov
or
pop
cld
mov
pop
adc
xor
ret
test
iret
add
sbb
adc
idivl
mov
addb
aas
adc
scas
ret
std
sbb
cld
or
xchg
arpl
adc
xor
cmp
call
sbb
add
dec
or
in
dec
lods
add
adc
xchg
push
fnstcw
fwait
sub
ret
js
cld
jmp
addb
xchg
int
jns
lds
fisttpll
les
orb
insb
cmp
iret
pusha
push
pusha
mov
sub
dec
sbb
sub
jbe
xor
std
hlt
lcall
out
or
les
pmaxub
sbb
and
das
fcompl
mov
int3
add
jno
ret
xlat
shrb
xchg
jle
sarl
pushf
gs
shll
jnp
test
movsl
xchg
mov
add
or
xchg
fs
ljmp
mov
or
lea
in
jne
repz
jmp
jg
jecxz
les
roll
jbe
orl
sbb
mov
sbb
pop
push
mov
push
xchg
ret
test
mov
popf
xor
inc
dec
test
insl
pop
aad
addr16
mov
mov
test
cmpsb
iret
rorb
jecxz
outsl
mov
xchg
mov
insb
in
or
arpl
xor
and
je
fwait
lds
dec
int
pop
fiaddl
dec
dec
mov
inc
inc
xchg
sarl
cmpsl
or
inc
cmpsb
aad
enter
xor
or
enter
loope
jg
or
mov
outsl
bound
sbb
dec
xchg
cmp
sub
gs
addb
aad
jecxz
dec
xlat
testb
test
das
mov
fcomp
fmuls
xchg
push
inc
insl
icebp
cmpsl
aas
test
test
inc
sub
popa
lock
xor
pop
pusha
adc
test
push
push
jle
adc
dec
ffreep
dec
in
and
xor
xor
sub
pop
dec
js
push
cmp
push
push
fstpl
ds
pop
fwait
jmp
add
push
cmp
adc
rorl
fidivrl
sbb
jbe
cmp
or
mov
movsb
xchg
adc
xor
scas
dec
mov
inc
rclb
mov
into
sub
mov
mov
cmp
adc
mov
in
popa
pop
mov
notl
jns
in
fisttpll
das
fsts
mov
or
and
bound
push
in
sbb
dec
and
jecxz
mov
and
mov
iret
sbb
dec
dec
push
cs
mov
mov
addr16
push
popf
int
fcomi
mov
dec
es
mov
xchg
sub
lcall
push
fwait
dec
arpl
add
lret
jle
sub
dec
pop
push
aam
int3
dec
dec
inc
idivl
adc
hlt
bound
mov
repz
add
test
jmp
xor
shlb
jnp
lock
loop
jns
and
insl
arpl
xor
adc
pop
xchg
or
dec
in
push
scas
shld
mov
sub
inc
out
dec
xlat
xchg
mov
jb
mov
outsb
aam
push
pop
ret
int
dec
rcrl
std
sub
jp
out
sahf
and
add
aad
ja
mov
cmp
xor
shl
bound
and
nop
and
lcall
jecxz
sub
adc
jl
push
mov
ja
arpl
push
imul
xchg
mov
push
rorl
js
cmp
lods
jb
addr16
in
sbb
jnp
xchg
push
xchg
adc
add
inc
dec
fsubl
inc
dec
popa
mov
test
imul
fisttpl
adc
loopne
jge
lds
test
fmuls
scas
outsl
add
add
dec
xor
stc
mov
in
arpl
push
popf
lcall
jge
lods
mov
sub
inc
test
pop
cld
push
in
pop
jo
and
int3
xchg
pop
mov
insb
cmp
push
fs
dec
loopne
inc
add
inc
jge
jle
in
xchg
out
out
cmp
mov
inc
cmpsl
jge
stos
mov
lods
insb
daa
mov
lock
sbb
notb
iret
pop
push
lret
jg
pop
in
jns
inc
mov
sbbb
jbe
sub
das
cmp
imull
lcall
ja
fldl
pop
jge
xorb
stos
mov
adc
cli
lods
ret
jb
iret
in
imul
push
in
fstp
cmp
push
sbb
add
sbb
dec
daa
loopne
outsl
and
jo
ljmp
pushf
int3
fstpt
out
cld
push
sub
fcompl
mov
movsl
scas
pop
inc
pusha
insb
xor
data16
loope
sbb
pop
add
mov
jecxz
push
push
sub
cmp
inc
sbb
inc
repz
sbb
xchg
mov
test
mov
das
stos
jg
jl
jge
mov
mov
adc
ds
int3
les
inc
xchg
insb
sub
jecxz
sti
data16
push
add
jnp
push
shrd
mov
movsb
or
jmp
mov
push
mov
dec
push
inc
cmpb
cmpsb
je
adc
test
adc
jmp
jne
nop
and
jg
mov
dec
pop
jmp
outsb
push
sti
xor
rcll
mov
fdivl
cmp
inc
jb
es
scas
dec
aas
xchg
pop
sub
es
movsb
test
or
ja
pop
sub
pop
jns
mov
std
sbb
push
cli
inc
leave
insl
nop
jns
fcomip
jne
pop
adc
add
and
fcomip
mov
sub
shrl
jae
cwtl
gs
cmpsl
mov
jbe
in
outsb
lods
stos
xchg
mov
inc
loop
push
js
out
xor
mov
enter
cld
movsl
sahf
sub
data16
xorb
and
jno
leave
lahf
xchg
imul
iret
dec
orl
cmp
mov
or
out
jg
mov
mov
xchg
iret
pushf
shll
xchg
or
xorl
mov
iret
cmpsb
cmp
push
mov
cld
shlb
and
inc
iret
and
sub
imul
ja
cmovp
bound
sbbb
int3
cmp
lods
sbb
push
or
cmpsb
pushf
or
jle
xor
dec
mov
leave
test
sub
int
aad
xor
sti
push
sub
lock
mov
xchg
insl
test
mov
out
scas
adc
dec
int
fisubs
and
bound
or
loope
pop
mov
int
pop
fsubrl
adc
arpl
or
ret
stos
jmp
pop
xor
pop
fiadds
insl
cmpsl
jecxz
lret
gs
or
stos
adc
inc
cmp
cmpsl
sarl
aaa
push
push
fsubs
movsb
iret
jmp
pop
mov
sub
and
movsl
lods
mov
test
mov
fistl
sub
je
push
push
imul
pop
xchg
pushf
int3
pusha
and
mull
sti
in
jae
mov
pop
dec
loopne
push
fidivs
fs
test
fldenv
rclb
sub
ljmp
arpl
push
jb
inc
andl
push
mov
dec
icebp
lods
push
in
xchg
fs
adc
and
mov
shll
push
jno
stc
icebp
mov
pop
pop
call
add
aam
aam
or
out
push
sub
das
inc
int
daa
in
int3
and
or
push
cmpsl
insb
jae
sbb
add
cltd
test
lcall
cmp
or
push
jb
movb
mov
out
sub
cltd
add
sub
imul
cmp
addr16
sti
adc
and
xchg
in
inc
adc
test
mov
pop
push
pop
inc
outsl
ficompl
cmp
jge
cli
imul
fidivrs
fidivs
int
rolb
fimuls
push
scas
jae
lcall
adc
jb
dec
dec
out
mov
pop
cmp
adcl
sub
stos
fcomps
scas
mov
ds
adc
sbb
aam
daa
cli
xchg
dec
cwtl
dec
mov
lods
lea
popa
lods
out
sar
cmp
jbe
mov
pop
jecxz
xor
sti
or
outsb
ficomps
cli
in
push
adcl
push
cwtl
stos
sbb
mov
jecxz
or
mov
stos
repz
rclb
inc
mov
cs
je
mov
jns
mov
insb
in
popa
arpl
add
push
int3
add
pop
push
cmp
aad
and
fcomi
add
out
call
js
sbb
push
adc
repz
jp
imul
inc
xor
stos
pop
dec
movsb
imul
gs
cli
leave
adc
jp
push
fdivl
inc
push
mov
aad
dec
sbb
stos
mov
dec
les
and
out
adcl
nop
das
pop
int
dec
sbb
test
scas
or
cmpsb
outsl
insl
ljmp
setl
mov
pusha
xor
mov
ds
cmp
mov
mov
or
dec
add
jl
shl
das
fimull
div
sar
pop
inc
adc
daa
add
adc
pusha
add
out
hlt
xchg
cmc
jno
test
stos
mov
pop
jle
jno
gs
bound
xchg
cmp
pop
sbb
in
inc
pop
pop
ljmp
fmull
inc
cltd
mov
add
xor
cli
pop
not
jnp
cmpl
mov
in
daa
mov
cltd
sbb
arpl
std
ja
in
sbb
std
xor
pop
pop
xor
jecxz
mov
jge
push
sbb
sbb
aad
in
or
sub
fwait
jb
popf
jnp
ja
mov
sub
lret
arpl
std
aam
nop
data16
sub
cmp
dec
adc
leave
sti
jmp
int3
or
adc
xchg
mov
pop
lods
icebp
adc
and
xor
mov
in
xchg
push
mov
adc
out
dec
sub
loope
or
cmc
popa
xor
into
push
sbb
jbe
xor
xchg
popa
hlt
fidivs
outsb
ret
es
xchg
clc
add
nop
or
dec
mov
lea
jge
movsl
leave
pop
js
mov
popf
js
adc
mov
or
in
sarb
lods
and
fmull
inc
pop
lds
rcll
pusha
or
jecxz
lock
xchg
jae
aaa
mov
mov
out
jg
mov
orb
lcall
ljmp
in
push
imul
cmp
shll
jmp
jmp
mov
mov
stos
prefetcht1
inc
loop
sub
jp
push
shlb
ret
cbtw
mov
cwtl
leave
xchg
mov
xor
jb
dec
movsl
gs
lock
sbb
jge
cli
push
xchg
mov
push
and
out
cmp
hlt
xlat
cs
test
mov
push
sub
inc
fcmovnb
inc
xchg
pusha
insl
inc
divl
inc
test
sbb
daa
jle
mov
inc
imul
jmp
pop
xor
mov
clc
int3
fwait
push
movsl
iret
out
xchg
sbb
cld
mov
pop
aas
addr16
fcmove
cmp
xor
cmp
cmp
mov
repz
lock
fwait
lahf
xchg
xor
jmp
movsl
fadd
xor
pop
jg
movsl
outsb
cmpsb
xchg
test
shlb
mov
fiaddl
in
in
imulb
mov
ss
das
shlb
fdivs
jp
dec
pop
cmp
lds
sti
sub
pop
mov
ret
mov
sbb
mov
adc
loopne
or
add
xchg
mov
xchg
lahf
loope
lret
mov
and
lods
xchg
pop
mov
outsl
nop
orl
xchg
repz
inc
jno
call
mov
sub
or
sbb
dec
out
ror
cmpsb
xor
icebp
lock
mov
imul
out
shrl
push
add
jl
pop
lret
bound
cmpb
or
xlat
pop
xchg
repnz
jl
push
pop
mov
loop
pop
cmpsl
fldenv
loope
mov
ja
stc
inc
dec
adc
push
popf
imul
inc
xchg
mov
sti
into
gs
popf
out
fldt
xor
insl
dec
movsl
dec
mov
or
pop
mov
in
jp
push
sbb
int
in
and
test
jnp
xchg
dec
shlb
jns
scas
out
and
ds
jl
xchg
jnp
inc
pop
iret
fcomps
jge
fldt
into
shrb
mov
add
sub
inc
mov
out
outsb
mov
mov
cmp
cld
movsb
lret
ds
sbb
cmp
shr
js
fistpll
jno
out
inc
pop
adc
jns
cs
shrl
scas
add
jnp
or
call
adcb
lahf
xlat
push
fwait
xlat
lret
mov
xchg
loop
lea
pop
push
out
xchg
xor
ret
mov
sbb
mov
cmp
jno
mov
sbb
hlt
stc
mov
mov
sub
icebp
cli
mov
stos
sahf
scas
and
mov
out
adc
inc
jns
gs
add
out
adc
or
dec
xchg
jecxz
cmp
cmpsl
cmp
inc
loope
imul
dec
pop
sub
iret
aam
mov
sbb
mov
scas
jo
push
push
std
inc
out
cmp
fistps
pop
frstor
sahf
out
xchg
notl
inc
shlb
mov
pop
push
movsb
jp
lcall
inc
push
adc
leave
jb
test
or
pusha
lds
mov
test
inc
pop
sub
fisttpll
rcrl
mov
mov
pop
xor
lods
ret
sahf
jg
jno
das
aam
xlat
sub
fsts
sub
xchg
xchg
mov
fneni(8087
adc
cli
nop
jmp
jmp
pop
mov
jb
test
sti
testb
mov
mov
add
sbb
icebp
mov
pop
clc
nop
in
mov
pop
in
sbb
mov
imul
subl
aam
and
lock
stos
xor
imul
iret
sub
in
mov
mov
xor
mov
add
imul
sahf
iret
cld
sbb
push
scas
lret
sub
mov
filds
add
xlat
mov
sahf
fbld
and
push
sub
or
dec
aas
iret
fs
pop
mov
aas
mov
jno
adc
imul
adc
repnz
out
cmpsl
mov
cmpsl
jno
outsb
cmp
pop
mov
push
add
add
and
gs
inc
adc
outsb
sbb
sbb
cltd
pop
hlt
dec
inc
xor
adcb
lret
in
in
and
push
in
into
ss
mov
inc
js
mov
popa
push
bound
scas
cmp
lea
pushf
xor
pop
mov
ljmp
and
js
outsl
test
push
lods
mov
push
cmpsl
je
jmp
jno
incl
pushf
push
cld
lea
sahf
gs
shlb
and
push
push
clc
into
mov
mov
outsl
jge
bound
mov
xchg
xorl
fldt
lret
int
inc
outsb
mov
outsb
xor
jl
push
dec
push
push
mov
imul
cltd
mov
mov
insb
hlt
es
dec
jne
pop
xchg
iret
pop
rorb
xor
sahf
jle
pcmpeqd
lahf
fsub
xchg
mov
push
jne
outsl
lock
orb
stc
sahf
lret
pop
push
jnp
rcrb
sahf
cmp
mov
push
and
daa
fisttpl
pop
or
jl,pn
pop
and
xchg
adc
mov
push
loop
jmp
sub
sbb
pusha
inc
dec
mov
and
rorb
cmp
shlb
es
fiaddl
jne
repz
je
std
insl
ja
dec
add
aad
adc
lret
xchg
ss
mov
jbe
aam
loope
jae
sbb
andb
pushf
mov
in
pop
mov
js
pusha
in
push
bound
mov
xor
jp
lret
cmp
repnz
je
cltd
ja
push
leave
and
repz
pop
and
cmpl
das
add
test
mov
sub
pop
adc
pop
ret
ret
lret
out
and
cltd
cmc
insb
insb
call
es
gs
daa
mov
lock
jne
cs
dec
cli
je
divb
ss
fwait
lret
movsb
cmc
mov
cli
jae
pop
sbb
sub
inc
cmc
lods
scas
mov
add
mov
dec
mov
aaa
adc
and
sub
dec
or
sub
fisttpl
sti
mov
cmpsl
lock
fsts
jo
fcompl
sbb
xchg
inc
xor
cld
ja
and
repz
inc
add
lahf
fdivl
sub
pop
and
cwtl
sub
jne
and
cmpsl
cld
pop
inc
xchg
jmp
cmp
sub
pusha
sbb
and
mov
sbb
dec
subl
jp
ljmp
inc
xchg
dec
lea
dec
pop
lahf
pop
fdivp
mov
push
roll
dec
shrb
push
sti
lret
push
nop
jbe
int
xchg
bound
int
fdivs
jge
imul
jp
mov
aad
sub
ret
cmc
mov
push
into
std
movsb
dec
fsub
int
pop
fs
pop
jmp
iret
push
mov
cltd
adc
pop
scas
xchg
jbe
mov
out
jmp
xchg
cmp
push
inc
pop
adc
test
mov
test
mov
repnz
js
call
test
xchg
xor
outsl
mov
sbb
sti
iret
pop
xlat
repnz
jl
sti
sbb
stos
sub
cli
lahf
adc
jp
cmp
add
xchg
adc
jne
fildl
fcoml
push
roll
sub
clc
sub
stos
lock
xchg
movsl
and
inc
jecxz
jne
nop
mov
je
leave
imul
outsl
lds
fbld
loop
lret
into
and
pusha
into
sbb
aam
nop
xchg
jecxz
add
lahf
arpl
push
bound
mov
sub
rorl
shlb
repz
xchg
cmovbe
andl
movsbl
aas
adc
aam
push
or
outsb
ja
adc
jns
sub
test
jb
into
mov
push
test
rolb
js
test
push
mov
xor
dec
in
push
jns
push
dec
ss
push
insb
push
pop
icebp
push
enter
iret
cli
dec
daa
and
dec
jo
aas
imul
xor
jne
jnp
pop
add
popf
lea
xor
jno
adc
mov
int
cmp
fwait
cmpsb
lock
mov
jae
sub
loop
fsubrp
jnp
pop
ljmp
in
fdivr
in
xor
mov
hlt
add
call
sub
inc
push
xchg
jp
xchg
push
fwait
dec
inc
mov
xor
sbb
ret
outsl
xchg
out
das
inc
lods
mov
and
cmp
jle
repz
sub
sbb
or
dec
sbb
bound
setae
xor
jb
int3
in
adc
pop
cmpsb
in
add
cs
aam
jns
jp
mov
cli
jb
sti
cmp
pop
adc
cmp
scas
and
add
aas
jmp
xor
leave
es
push
std
mov
push
mov
pop
adc
ljmp
jmp
cmpxchg
sbb
loopne
addr16
jnp
lock
push
mov
shll
mov
inc
ret
testl
xor
lock
pop
push
jnp
ss
std
mov
mov
test
adc
cli
fsubs
ficoms
dec
fs
jp
mov
sub
lock
jp
push
pushf
sub
ja
daa
movl
into
and
fs
sub
sahf
test
push
int
js
out
scas
mov
dec
cmpsb
hlt
out
push
inc
xor
jl
jns
jmp
dec
or
inc
out
xchg
sti
pop
mov
mov
jle
ljmp
pop
cmp
inc
pop
icebp
out
pop
mov
test
fdivl
outsb
nop
sub
pusha
cmp
inc
and
push
out
jns
lret
or
icebp
movsb
pop
push
in
out
test
ja
cmp
jge
xor
stos
push
addb
push
shrb
adc
inc
sub
adc
rorb
sub
lret
xchg
xor
xchg
xor
add
pushf
jb
pop
ja
cwtl
lds
jb
aad
sti
pop
outsb
insb
lret
mov
lods
cld
mov
add
aaa
xor
aaa
rcr
daa
and
pushf
sub
popa
and
repz
mov
inc
js
fildll
inc
insb
mov
pop
xchg
sbb
or
test
sti
lcall
imul
iret
ficompl
mov
inc
mov
inc
adcl
mov
loopne
sbb
addl
outsl
sbb
in
mov
cmpsb
and
dec
arpl
outsl
inc
cmovp
cmp
adc
scas
xlat
bnd
jo
movsb
addr16
mov
mov
xlat
aas
cmp
ret
pusha
out
mov
lea
and
dec
adc
sbb
mov
xor
lret
push
xchg
leave
inc
test
xchg
mov
xor
xchg
neg
and
jo
dec
xchg
lret
aas
std
mov
shlb
movsl
aad
jmp
mov
popf
sub
je
or
sbb
dec
cmpsl
mov
inc
ja
xchg
cmpsb
mov
jno
add
sbb
inc
and
push
cmp
or
add
add
lret
ret
pop
in
frstor
test
fs
test
jp
push
mov
and
lahf
shll
je
pop
or
js
repz
cmp
sub
sbb
test
mov
push
cmp
mov
inc
orb
iret
lcall
sub
dec
mov
repz
aaa
bswap
data16
jno
xor
adc
sbb
out
jp
jge
insl
jo
sahf
ficomps
xchg
add
add
leave
out
and
dec
mov
jns
jp
dec
sbb
repz
shlb
inc
jle
cltd
adcb
scas
pusha
hlt
out
fs
dec
cltd
loopne
push
sbb
iret
mov
or
sub
nop
into
mov
int3
mov
xchg
cmp
mov
mov
negb
push
fsubs
adc
stos
pop
xchg
loope
adc
sbb
push
xchg
into
orb
jb
loop
pop
iret
jmp
cwtl
xlat
nop
sbb
mov
addr16
aaa
repnz
in
pop
xor
js
push
lcall
mov
fwait
cmpsb
test
xchg
mov
adc
mov
ret
xchg
jle
sahf
xor
fninit
push
stos
push
into
fldenv
inc
sbb
jnp
mov
mov
cld
push
push
pop
insb
test
and
rorl
push
in
and
or
testl
adc
mov
pop
pushf
imul
fistps
adc
lret
mov
rclb
rcrl
push
in
push
ja
ficoms
dec
push
and
add
ret
mov
add
xor
mov
cmpsl
mov
jp
fisttps
neg
int
add
dec
adc
arpl
xchg
mov
jge
rorl
out
cli
lret
xchg
es
jmp
sub
adc
xchg
insl
adc
mov
ss
pop
xchg
decb
test
dec
cmpsl
loope
jmp
mov
aas
jg
test
inc
leave
clc
pusha
add
roll
sub
inc
jne
cmp
mov
pop
ss
repnz
aad
lahf
xchg
xchg
inc
mov
and
sti
or
lds
fdivrl
in
sbb
ret
xor
xchg
cld
pop
pushf
ret
nop
sbb
lcall
shrl
pop
jae
divl
sub
cmp
lahf
xchg
in
xchg
or
push
leave
sbb
jne
aaa
sbbl
dec
jb,pn
shrb
push
test
mov
dec
out
pop
sbb
es
stc
push
je
inc
sbb
repnz
mov
jbe
shll
cmp
push
sub
mov
cmp
lcall
nop
lock
mov
cmp
fcompl
pop
pop
jmp
cmpsl
xor
xchg
ljmp
add
jbe
in
dec
inc
jmp
sub
movsb
xor
in
ficoml
mov
dec
popa
jp
mov
cli
hlt
fistpl
cmp
lret
ljmp
lret
mov
sbb
pop
pop
aad
cmp
lret
lret
or
or
daa
cld
push
pop
jmp
mov
jo
sub
mov
and
jnp
and
cmp
dec
imul
shl
mov
sar
cli
mov
xchg
sub
pop
imul
add
in
add
out
mov
pushl
mov
addr16
xchg
jne
and
push
mov
sub
jmp
out
mov
scas
pop
aas
or
sbb
xchg
jno
test
push
mov
mov
sbb
int3
inc
into
in
lds
or
add
mov
hlt
jl
pop
jo
movsl
rol
stc
cmpl
cmp
mov
pop
ret
push
daa
loope
xor
das
shlb
bound
ss
nop
jbe
mov
js
pop
mov
ficoms
stc
in
stos
mov
gs
jp
or
sub
adc
fsubl
cwtl
adc
in
push
xchg
xchg
push
pop
add
fistpll
aad
sbb
inc
dec
mov
dec
mov
arpl
mov
aad
pop
sti
enter
aam
mov
or
test
jle
andl
loop
mov
jns
push
mov
cmp
setl
dec
daa
js
cmp
dec
pop
notb
jns
fsts
mov
mov
and
jp
gs
daa
cli
inc
dec
xchg
pushf
dec
sub
aad
dec
outsb
es
dec
xchg
sahf
int3
inc
test
push
mov
push
dec
and
pushw
lods
lret
cmp
cli
or
lret
ja
fcmovb
mov
adc
sbb
mov
pop
ficoml
fnstsw
add
sbb
or
sbb
sub
dec
ljmp
pop
daa
clc
mov
enter
mov
ja
mov
mov
nop
mov
pop
dec
adc
lea
sbb
sbb
subl
aam
and
pop
mov
out
cli
out
imulb
arpl
popf
add
mov
cmp
pop
and
inc
add
push
out
setg
jmp
jns
aad
xchg
cld
mov
jle
adcb
test
and
adc
push
ret
or
sarb
adc
in
pop
jmp
sbb
aas
mov
mov
xchg
insl
sub
roll
lret
loop
cmpb
add
mov
shlb
addr16
jmp
loope
rorl
push
sbb
xchg
pop
or
or
xchg
fisubrs
pop
push
inc
pop
pop
or
mov
aam
das
orb
and
push
mov
scas
mov
jne
pop
and
movsl
int
ja
mov
aaa
ss
aaa
mov
ss
xchg
cld
cmp
je
aad
jmp
inc
xchg
lcall
mov
xor
dec
sub
rcrb
sarb
push
das
xor
pop
pop
sbb
push
in
sti
fmuls
xchg
xor
push
add
subl
cmp
rcrb
sbb
setp
insb
pop
sti
subb
fnstenv
lcall
xor
cmp
mov
pop
imul
adcl
xor
das
loop
mov
imul
je
xor
sbb
inc
adc
cmp
sbb
dec
fcmovnu
aam
xor
and
popa
and
jmp
xlat
adc
jo
jno
call
testl
adc
pop
inc
cmp
jmp
dec
imul
js
call
ds
dec
repz
sbbb
in
mov
fistpl
scas
push
mov
xchg
fisubrs
mov
cmp
loopne
lds
fadds
fisttpl
or
inc
les
pop
pop
cmp
vmwrite
mov
sub
sahf
testb
lahf
lahf
mul
jnp
mov
push
pop
jl
lods
pop
andl
out
push
sbbl
xorl
bound
or
pop
stc
xchg
jecxz
sub
gs
jns
stc
sbb
mov
fildll
push
pop
add
imul
aaa
push
in
cld
adc
in
jp
cmpl
mov
add
test
leave
sbb
and
in
repnz
push
icebp
aad
mov
mov
call
jge
sti
jle
mov
jo
clc
jbe
fidivrl
mov
iret
ret
adc
test
pop
mov
xor
jmp
dec
ret
mov
enter
nop
jge
clc
mov
pop
adc
mov
mov
mov
adc
pop
clc
fimuls
rorb
xor
sub
std
mov
scas
mov
adc
mov
pop
adc
loopne
lcall
test
add
mov
lret
js
syscall
cld
clc
push
mov
cmp
sbb
pop
cld
ss
pop
push
add
popf
pop
cmp
insl
jmp
movsl
mov
scas
add
js
or
mov
mov
test
test
xorb
lea
popa
mov
inc
sub
adc
sub
imul
inc
fistps
insb
mov
sbbl
stc
out
imul
data16
inc
adc
cmp
pop
pop
cmp
mov
mov
cld
push
cmpsb
lret
dec
xchg
dec
adcb
sub
cmpsb
rcl
aas
xchg
mov
xchg
and
jns
xorb
aaa
push
sub
adcl
inc
cmp
mov
add
stos
push
iret
or
cmc
push
sub
in
lahf
pop
and
imul
adc
mov
ja
sub
sub
push
movsb
fadds
cli
pushl
jl
add
stos
xchg
xchg
divl
inc
lea
cli
push
pop
sbb
mov
rcll
rcrl
mov
ret
sbb
arpl
jl
std
fcomi
or
jae
rcll
jbe
add
adc
adc
pop
in
int3
iret
flds
adc
cli
stos
mov
xchg
sahf
fnstenv
pop
xchg
dec
and
adc
mov
in
sbb
adc
mov
ja
inc
rep
adc
inc
push
pandn
lahf
ret
xchg
nop
mov
inc
xlat
cltd
xchg
xor
insb
xor
stc
xor
pop
sahf
push
adc
sbb
repnz
xchg
mov
push
add
call
es
in
and
mov
and
sub
sub
imul
mov
push
stos
push
ds
dec
xchg
push
xchg
ds
add
or
xchg
inc
adc
in
daa
add
adcl
xchg
pusha
movsl
in
xchg
pushf
testb
adc
nop
in
out
jmp
in
push
fiadds
shrl
or
rcrl
jp
xchg
inc
aaa
xchg
mov
push
mov
pushf
into
pop
mov
fwait
mov
cmp
push
jnp
inc
xchg
scas
xlat
fcomp
xchg
add
loop
fld
jecxz
sti
fldcw
cmpb
jecxz
and
xor
sbb
scas
push
jle
mov
push
xor
push
insb
xchg
jnp
enter
adc
ficomps
outsl
in
add
std
cmp
cwtl
sahf
add
jns
cltd
test
push
stos
xor
mov
loop
sahf
push
lds
jge
mov
and
bound
sub
sbb
incl
sti
orb
xchg
pusha
test
lock
xchg
adc
hlt
ljmp
jbe
jb
dec
push
in
lret
or
xor
les
xor
out
push
in
xor
int
push
test
push
push
cwtl
and
mov
xchg
scas
xlat
and
fsubr
out
clc
inc
mov
out
and
sub
data16
pop
mov
insb
dec
cmpsl
mov
sbb
mov
movsl
push
push
sbb
dec
pusha
sub
xchg
xlat
cmp
xor
outsl
cmp
jb
xchg
mov
insl
pop
sub
pushf
jl
mov
dec
inc
sub
clc
push
into
popf
jecxz
cmovp
sbb
lods
jae
test
sahf
push
data16
pop
ja
ds
push
ret
push
test
lds
add
fcomp
repnz
adc
loop
xchg
and
mov
js
inc
xchg
lods
ret
ljmp
mov
pushf
sbb
push
mov
push
mov
ja
and
sub
cmp
push
add
sbb
sbb
xchg
pop
or
ret
cld
hlt
mov
xchg
xchg
cmp
fucom
xchg
jb
mov
xchg
or
sbb
jg
and
xlat
addr16
imulb
pop
push
in
data16
inc
dec
les
jmp
and
jae
into
push
cli
jb
addr16
mov
push
std
push
insb
in
inc
call
loop
dec
and
int
pop
pop
xchg
insl
es
std
pop
jmp
out
ss
scas
loop
jbe
inc
les
jp
mov
ljmp
add
test
mov
dec
inc
mov
add
test
add
add
adc
jmp
scas
inc
inc
aam
std
rcrb
or
sub
in
sbb
and
ds
pusha
aam
shll
aad
push
movsb
or
pusha
cmp
xlat
fidivs
cmp
xchg
out
push
adc
mov
xchg
dec
adc
test
push
stc
jo
inc
rclb
or
les
or
repz
addr16
iret
pop
mov
std
pop
dec
sahf
jmp
int
mov
lret
pop
into
in
cmp
or
mov
out
aad
out
xor
xchg
dec
push
out
mov
push
cmp
fimuls
cmpsb
mov
fildll
test
in
scas
arpl
mov
push
ja
mov
mov
mov
jmp
pushaw
les
xor
lcall
mov
mov
inc
lahf
inc
jmp
pushf
and
aam
lods
xchg
inc
int3
pop
dec
push
sahf
lret
lea
loopne
mov
mull
in
or
push
xchg
sar
pop
adc
test
ja
int3
ja
xor
adc
inc
cmc
jb
fstpt
popa
mov
xchg
inc
ja
push
aas
test
dec
xchg
sahf
leave
fistpll
cmpsb
mov
repz
inc
int
sahf
call
lds
pusha
xchg
dec
mov
lret
je
mov
pop
mov
movsb
mov
inc
jl
iret
inc
mov
xor
jae
jge
sub
fadds
add
lea
inc
shll
in
jno
pusha
fnsave
daa
orb
repnz
in
in
int3
loop
push
mov
repz
subl
test
ljmp
pop
je
jl
jl
cltd
xor
jl
add
inc
pop
sub
mov
mov
adc
sub
mov
adc
imul
scas
sbb
sub
loopne
ljmp
xchg
inc
mov
mov
lret
add
insb
add
mov
dec
push
adc
sub
dec
int3
mov
sub
fsubrl
push
xchg
loop
fistpll
dec
sub
push
xchg
push
fcoms
sub
ret
out
imul
outsb
xchg
pop
mov
and
inc
xchg
js
cli
pop
pop
fidivrl
jecxz
int3
mov
ljmp
pop
adc
fucomip
mov
cwtl
icebp
pop
pop
pop
mov
cld
xchg
iret
adc
popl
dec
push
xchg
jge
dec
fsts
fsubrs
clc
ljmp
dec
push
ljmp
in
mov
add
xchg
add
xchg
dec
or
pop
addb
in
mov
sbb
mov
xor
lahf
or
daa
mov
cmp
into
or
mov
add
pop
jecxz
jno
push
cmp
mov
insb
sub
in
jge
cld
mov
fcoml
jmp
in
adc
outsb
scas
pusha
outsl
roll
fwait
loopne
cmpb
xchg
push
loope
jmp
or
cltd
ss
lock
rorb
sbb
rorl
mov
dec
mov
rcll
lods
lock
push
add
mov
mov
in
and
pusha
ret
sub
lcall
arpl
lods
pop
gs
jecxz
jno
js
pop
jo
sbb
ljmp
inc
push
pop
jl
pop
xchg
and
icebp
lret
jge
inc
adc
ds
rep
adc
xor
call
inc
psrlq
clc
in
push
dec
les
jecxz
pusha
add
mov
push
es
sub
jp
add
ljmp
jge
xor
lret
mov
cmpsb
adc
xlat
push
dec
cltd
jp
ja
sub
mov
lret
clc
pop
out
cmp
jo
xchg
into
sub
sub
clc
xlat
out
dec
xor
jge
aas
pop
pop
pushf
aad
ret
shrb
inc
out
mov
dec
addl
xchg
xchg
in
in
jmp
sahf
dec
or
sub
insb
pushf
pusha
xchg
fldcw
lcall
shrb
fidivrs
rcrl
lods
jle
out
aam
pop
mov
std
push
add
and
mov
mov
loope
xchg
jnp
push
stc
sti
mov
sahf
lods
leave
outsb
popf
jns
cmp
xchg
jbe
jle
adc
inc
xlat
jmp
mov
aam
cmp
stc
mov
mov
sbb
jp
jns
adcl
inc
stos
xchg
add
scas
sub
pop
pop
je
in
sbb
add
cli
mov
jge
push
fwait
imul
and
mov
rorb
mov
adc
movsl
out
mov
xchg
cli
test
sub
test
push
ja
and
inc
adc
insl
lds
daa
jae
dec
dec
gs
cmp
mov
stc
lret
push
pop
outsb
insb
pop
out
lock
ds
ret
xchg
out
xchg
lret
int
xchg
adc
add
cmp
call
cmp
aas
mov
sub
sub
add
adc
ds
jno
adc
or
fnsave
push
jns
mov
movsb
push
dec
hlt
lds
mov
icebp
mov
fstpt
or
adc
dec
addr16
mov
repz
pop
test
sahf
xor
stos
fs
rol
xlat
dec
sbb
mov
mov
popa
insb
xchg
fdivrs
mov
aas
inc
popa
or
cli
mov
cwtl
stc
ds
dec
inc
sub
mov
inc
bound
out
pop
arpl
shl
mov
xchg
repnz
cltd
or
push
mov
mov
imul
pop
jo
xor
xchg
push
les
pop
repz
jecxz
in
scas
decl
lock
std
dec
mov
daa
fs
mov
jmp
das
test
or
fs
pushf
adc
jnp
hlt
idivb
xor
repnz
sahf
push
rclb
fcomi
and
or
mov
jno
mov
xchg
sbb
ret
in
jp
add
movsb
insb
xlat
push
out
mov
and
test
jb
mov
imul
cld
push
xor
and
cmp
xchg
lahf
decl
loopne
pop
push
rorl
stos
dec
sub
pop
in
dec
mov
fwait
lock
push
dec
pop
call
and
dec
inc
mov
fistpl
ss
xchg
insl
push
clc
mov
mov
in
test
push
mov
push
cmc
or
out
xor
shr
rorl
fists
jle
in
fbld
js
insb
out
ret
cmpsl
lods
insl
lods
aas
clc
iret
mov
xor
xchg
pop
mov
pop
subl
xor
lock
jae
dec
push
int3
enter
ja
push
mov
int3
out
adc
dec
std
mov
shlb
je
in
orl
push
xchg
outsl
mov
ret
mov
fidivs
add
inc
pop
sub
insl
fnclex
daa
pop
cmc
xor
imul
aas
loop
mov
iret
mov
in
jmp
inc
sbb
in
loope
or
out
lods
enter
lcall
les
cmc
scas
jno
mov
xlat
inc
test
loopne
int
sub
mov
fnstsw
sbb
enter
pop
mov
mov
cmp
outsb
add
mov
dec
dec
scas
pushl
ja
shll
iret
scas
push
aas
pop
inc
sbb
outsl
push
outsb
imul
jnp
jle
mov
xchg
pop
mov
dec
xor
add
inc
push
outsb
pushf
xchg
repz
imul
mov
mov
fldenv
addr16
rcrl
imul
icebp
gs
shrb
mov
pop
cld
and
cmpsb
ja
test
cmp
dec
sbb
movsl
mov
test
sbb
mov
sub
les
nop
lcall
ja
sub
mov
adc
jne
mov
xor
mov
mov
mov
pop
cltd
popf
inc
and
push
subb
or
cmp
inc
fmull
xor
mov
mov
shld
repz
lods
gs
and
sbb
sub
add
add
push
enter
sbb
sub
pop
sbb
or
jg
ret
dec
add
gs
push
inc
int3
or
cltd
jle
jae
sbb
xchg
push
stos
pop
push
lock
xor
mov
cwtl
repz
or
divl
bound
ret
dec
sarb
fs
adc
inc
push
pop
in
jno
sbb
lods
inc
push
and
lret
cs
and
lea
test
pop
xor
stos
jp
add
shll
or
loope
pop
daa
xor
push
adc
cmpsb
inc
fsubrs
dec
jp
repz
ds
pop
imul
ja
int
test
sbbb
adc
cmpsb
mov
inc
rolb
mov
icebp
pop
imul
adc
repz
cmp
pop
sub
or
lret
shrb
dec
arpl
xchg
adc
sub
push
outsl
je
push
xor
imull
xor
jp
or
cmpb
pop
rcll
jae
push
scas
lods
sbb
sbb
mov
fs
cmp
cmpb
out
les
add
popf
sbb
push
shll
inc
lcall
or
mov
cmpb
mov
pop
and
aad
ds
in
fmull
ds
nop
arpl
jmp
lock
sbb
shl
dec
out
push
subb
dec
push
int
in
in
test
mov
mov
lcall
stos
adc
sahf
mov
push
jns
jne
adc
cmp
jnp
stos
push
add
lods
fistpll
mov
clc
inc
push
xor
mov
test
push
or
mov
add
andb
dec
es
lock
lods
mov
nop
out
inc
sarl
pop
adc
pop
mov
cmp
adc
adc
int
xor
cld
push
mov
outsb
pop
add
or
jl
or
out
sti
jae
daa
adc
xor
decb
mov
jecxz
lcall
and
adc
adc
jmp
xchg
mov
inc
jmp
jl
mov
aam
jb
aam
clc
sub
orb
jne
or
test
mov
loop
out
push
lods
enter
jge
sub
push
fwait
ja
mov
dec
or
mov
push
scas
movsl
jge
lock
repz
ret
fcomps
dec
xchg
out
imul
jecxz
mov
mov
inc
scas
cmpsb
sbb
pusha
inc
add
pop
pop
outsl
sbb
sub
xlat
xchg
sbb
xchg
mov
sub
and
fnstsw
and
dec
ds
lcall
mov
xor
cmpsb
pop
dec
shll
out
xor
add
enter
adc
ficoml
shrb
add
popa
ja
lahf
popf
inc
loopne
ret
push
dec
xchg
enter
sbb
movsb
repz
jmp
ja
sub
push
and
xchg
in
pop
test
xor
je
xchg
inc
jmp
adc
incl
mov
test
xor
push
dec
das
out
in
ret
js
add
movl
lock
dec
inc
mov
int
dec
loope
push
in
mov
cmovno
daa
insl
inc
pusha
push
test
daa
addr16
int3
adc
push
insb
ror
push
pusha
test
cmp
adc
int
leave
mov
les
or
lds
sbb
data16
rolb
pop
add
leave
cmp
movl
pop
pop
inc
sub
scas
push
scas
repnz
jmp
and
sub
inc
sub
lods
out
sbb
pop
fsts
or
stos
decl
jg
loope
lcall
or
incl
fs
and
in
add
push
push
sbb
ss
adcb
pusha
pop
in
dec
adc
cmpb
sbb
lock
scas
outsb
lods
cmpsb
jmp
jecxz
xchg
jge
in
cld
xchg
xchg
lahf
or
cmp
cmc
jecxz
cmpsb
push
jne
pusha
arpl
or
mov
jle
inc
jns
sub
shlb
xlat
inc
pop
inc
xchg
sub
mov
mov
jmp
sub
or
jnp
lret
out
xlat
sub
and
sti
mov
pop
adc
xchg
add
dec
bnd
pop
add
pop
stos
aam
nop
enter
mov
lahf
popf
outsb
dec
inc
iret
loopne
mov
mov
push
sbb
enter
movsb
cli
rclb
xchg
jne
mov
pop
jns
mov
ds
out
push
cld
scas
sbb
pop
movsb
push
and
xchg
shrb
xor
xchg
shrl
ss
orb
jl
ljmp
lret
pushf
test
clc
jecxz
int
adcb
pop
push
enter
stc
mov
cmp
or
repnz
pop
xor
pop
jo
xchg
dec
fidivs
mov
jns
addr16
int3
fwait
and
icebp
sub
aas
push
xlat
in
xor
std
mov
or
roll
inc
or
sbb
mov
pop
or
les
adc
scas
bswap
lret
xor
imul
mov
cwtl
inc
repnz
xchg
dec
aad
push
mov
mov
xchg
jge
pop
mov
inc
cmc
jo
rcrb
sbb
jno
mov
out
lea
push
push
sahf
jge
int
mov
mov
push
es
xor
sbb
sahf
jmp
push
mov
dec
cmc
sti
fwait
push
mov
mov
out
xchg
je
lods
xchg
ds
add
adc
mov
test
jbe
lds
mov
lret
lahf
fidivrs
jb
inc
inc
add
jecxz
sbb
popf
pop
xor
or
pop
movsl
setl
add
aam
pusha
cmp
cld
addr16
iret
mov
mov
lcall
jne
jp
hlt
lahf
xor
aam
or
mov
dec
adc
addr16
mov
in
loopne
neg
or
loop
addr16
movsl
xor
cld
add
lret
in
push
push
cli
cld
sbb
mov
pop
mov
pusha
jae
inc
mov
mov
fcomip
dec
mov
dec
std
inc
adc
dec
data16
jb
pop
mov
cmp
push
pop
arpl
adc
jbe
dec
push
xlat
add
pop
cmp
bound
mov
dec
sub
and
fnstsw
jge
mov
aad
cld
push
mov
push
lcall
aaa
lods
mov
shlb
jl
mov
sahf
adc
push
adc
mov
test
fstpl
fdivl
aad
mov
cmp
cs
sbb
pop
mov
adc
jo
out
test
mov
mov
inc
rolb
xor
arpl
jg
call
sbb
sub
xchg
es
jmp
add
jecxz
and
mov
push
pop
test
add
xchg
mov
sub
cwtl
shlb
enter
ret
mov
adc
mov
adc
inc
aas
dec
sub
fdivrl
cs
cmp
sbb
jle
add
nop
mov
cli
mov
in
and
jge
jo
cmp
inc
xchg
data16
xor
in
pushf
pop
mov
xor
jge
dec
cmp
cmpsb
mov
loop
push
sub
mov
pop
push
or
int
sar
shl
inc
xor
ret
cmp
pop
fs
fnsave
out
inc
or
xchg
add
dec
fwait
cmp
sub
jo
in
sarb
sub
adc
je
dec
mov
nop
pop
movsb
push
fldz
lret
pop
mov
push
xor
frstor
inc
push
jg
sbb
pop
adc
test
addr16
fstp
push
fwait
loopne
sbb
daa
aas
lcall
fstpt
mov
fldt
xlat
fcomi
or
pushf
mov
jg
pushf
and
and
mov
mov
and
cmp
xor
leave
mov
mov
daa
dec
dec
in
sub
pop
jne
inc
lret
subb
shr
dec
mov
and
add
call
aas
and
ja
dec
sbb
mov
icebp
mov
jbe
icebp
repnz
mov
inc
shll
je
imul
into
outsl
cmp
add
push
nop
out
insb
mov
ficoml
cmp
andb
out
movsl
test
rclb
lret
pop
push
test
sbb
and
mov
jge
mov
mov
movsl
add
pcmpgtb
jae
xor
xor
mov
jnp
scas
pop
mov
inc
movsl
adc
and
call
cmp
mov
push
iret
xchg
scas
dec
pop
or
pushf
push
mov
mov
fsubrs
sbb
movsb
push
push
lods
clc
js
and
repz
popf
fstpt
test
sbb
or
adc
cld
aad
movsl
cwtl
addr16
jne
out
ret
sbb
fisttpll
scas
pop
jmp
sub
outsl
mov
gs
mov
inc
xor
lods
movsb
lcall
in
cmp
mov
stos
sub
dec
scas
mov
cli
cmp
scas
cli
addr16
jl
rol
inc
fwait
or
pop
loop
mov
gs
cmc
pushf
test
movsl
xor
imul
les
lds
leave
push
xchg
icebp
lret
movsl
sahf
andl
push
lock
not
sbbb
out
cld
cmp
les
dec
cmp
fbstp
fdivrp
iret
inc
mov
negl
sti
pop
orb
icebp
mov
inc
push
shll
rorl
push
notl
mov
je
js
cs
xchg
and
xchg
cwtl
jno
in
inc
cltd
in
mov
ljmp
jge
mov
in
insl
ja
hlt
out
adc
inc
add
iret
sahf
mov
cmp
fsubrl
out
scas
jp
sarb
insb
lcall
mov
scas
dec
xor
jmp
push
leave
dec
push
jmp
enter
in
test
jge
mov
ds
xor
xchg
iret
jge
shrb
mov
psrlw
les
sbb
mov
in
xor
fcompl
sub
jae
inc
add
int
ja
jmp
inc
add
pop
push
or
inc
js
adc
pusha
or
and
sub
sbb
out
inc
push
out
push
jmp
stos
cmp
cwtl
outsb
or
shl
adcl
adc
in
call
orl
mov
fs
xchg
and
sbb
xor
mov
rclb
lods
pop
rclb
or
mov
mov
and
push
je
mov
adcb
fnstcw
add
dec
inc
das
mov
sti
mov
mov
outsl
aaa
ja
xchg
aam
shrb
mov
popa
test
sar
jl
das
xchg
insl
inc
shll
push
mov
pusha
sbb
loopne
lods
pop
out
jb
mov
gs
pop
fnstcw
pop
hlt
divl
inc
es
push
mov
arpl
dec
pop
rcl
imul
inc
mov
or
add
loope
fildl
mov
mov
mov
dec
fcompl
add
cmp
in
cmp
or
push
push
jecxz
sub
movsb
in
pop
icebp
fldcw
mov
mov
xor
fcoms
xor
lahf
jg
mov
shll
adc
mov
lea
push
stc
push
std
stos
icebp
cmpl
or
sub
ret
negb
adc
cltd
xor
add
sbb
out
outsl
shl
sbb
out
aas
movsl
gs
xchg
in
and
sub
jne
or
add
setbe
packssdw
jge
adcb
cmp
stos
mov
es
addr16
ror
jge
test
jo
dec
out
sub
mov
dec
ret
subl
add
enter
adc
movsb
mov
xor
iret
push
rol
pop
xchg
je
ja
or
or
je
mov
push
pop
dec
xor
ja
out
sub
mov
mov
pop
add
sub
xchg
xor
ss
inc
test
daa
das
stos
xor
and
and
mov
xor
cltd
and
mov
mov
inc
xchg
pop
cmp
push
sub
mov
mov
or
in
cli
in
mov
mov
int3
pop
aas
testl
inc
insl
jl
pop
cmpsl
push
pop
xchg
jge
add
pop
jne
push
mull
mov
pop
outsl
push
inc
sbb
cmpsb
sub
sub
imul
sbb
int3
pop
cmpsb
jge
xchg
jnp
or
adc
mov
mov
imul
sahf
sbb
xchg
dec
pop
xlat
mov
pushf
adc
out
rolb
out
xchg
jne
and
lret
popa
xor
orb
dec
push
aas
mov
std
pushf
pop
sub
imul
mov
movsl
daa
inc
aaa
popa
repnz
arpl
not
mov
dec
ss
pusha
data16
sti
sbb
imul
push
adc
mov
rorl
in
cmp
lcall
mov
inc
scas
in
xor
mov
xchg
popa
jno
out
adc
nop
cli
push
pusha
pop
sbb
and
rclb
mov
cmc
jno
stos
cmp
mov
adc
sti
xor
xchg
sub
adc
mov
push
cld
jmp
scas
cmpsb
xchg
mov
lods
lret
movsl
pop
cwtl
sbb
scas
mov
bound
imul
or
imul
push
out
fcmovu
inc
xor
into
mov
mov
loop
inc
sti
inc
push
sub
adc
mov
call
out
pushf
cli
aam
pusha
xchg
xchg
cmpsl
cmp
cmpsb
insl
push
xor
ret
insb
push
loope
mov
insl
fisttpll
jecxz
imul
dec
gs
mov
jmp
jne
in
mov
mov
aam
jae
lock
out
shl
mov
repnz
call
lock
dec
dec
mov
mov
mov
jp
mov
or
mov
xchg
sbb
fimull
mov
or
orl
sub
imul
jb
or
roll
sbb
pop
cmp
rolb
push
xchg
cld
popa
or
dec
push
bound
aam
add
scas
movsl
lret
jl
add
push
test
inc
lret
mov
in
stos
pop
adc
loope
std
and
mov
sbbl
and
push
mov
test
pop
or
cmpsb
cwtl
mov
jb
pop
sub
push
fdivrs
sub
adc
test
mov
aad
mov
rclb
pop
cltd
inc
stos
cmp
lods
xor
int3
xchg
insl
in
xchg
imul
fisubs
movsb
pop
dec
push
lcall
scas
shlb
mov
xorb
pop
push
xor
sbb
inc
jno
js
jmp
pop
inc
cmpsl
rcrl
push
incb
xor
dec
jl
dec
or
rcrl
xor
xchg
mov
leave
and
repz
insw
pusha
xor
jp
mov
jbe
aas
push
jo
sbb
pop
add
aaa
or
lret
loope
mov
outsb
icebp
loope
out
sub
sbb
call
stc
lret
inc
ret
cmp
xor
xor
frstor
outsl
hlt
push
ja
xlat
adc
inc
add
inc
jnp
sub
inc
jne
pushf
test
jle
imulb
mov
pop
mov
std
mov
jns
fadd
popl
int3
ds
inc
inc
xchg
dec
add
inc
fcmovu
fdivl
inc
mov
adc
out
out
mov
pop
divl
out
mov
lock
sbb
xor
test
in
pop
cs
dec
movsb
incl
cmp
dec
dec
lret
icebp
xchg
sahf
lock
sub
subb
jmp
mov
cmpsb
mov
ss
sub
add
mov
jne
lock
fmull
mov
outsl
je
ret
movsl
xchg
push
xlat
and
pusha
aam
aaa
adc
sbb
jmp
fistpll
popf
fistl
pop
jmp
rclb
aas
lahf
add
xor
xchg
cld
je
lods
xchg
mov
lods
sub
arpl
test
ljmp
mov
sbb
ds
addr16
shll
push
dec
addr16
iret
mov
in
ret
div
xchg
lea
xchg
dec
cmpl
cmp
pop
mov
pop
cmp
bound
loop
imul
cmp
fadd
inc
pop
pop
inc
push
or
sbb
xchg
mov
mov
in
ret
mov
jo
imul
mov
cmp
push
mov
outsb
addl
add
add
or
push
sub
lea
nop
or
push
sbb
dec
push
xor
add
faddl
xor
mov
add
mov
sbb
insl
xchg
jmp
sbb
lahf
jnp
inc
jae
dec
push
or
cmp
divb
insb
fdiv
cmp
dec
scas
jp
jecxz
fcomps
ror
insl
in
bound
jp
mov
adcb
pusha
add
pop
pop
push
inc
cmp
into
inc
movb
sbb
lods
cmpsl
iret
pop
inc
fildll
mov
in
and
cmpsb
cmpl
pusha
pop
dec
loopne
adc
leave
push
enter
mov
mov
imul
inc
push
inc
dec
mov
sub
push
hlt
pop
inc
flds
loope
add
neg
inc
adcb
jne
testl
mov
loop
rcrb
inc
stos
mov
sarl
jl
add
xor
mov
in
enter
popf
inc
inc
enter
inc
ret
inc
jl
push
jmp
fistpll
cmp
fnstenv
cmc
scas
popa
add
movsb
mov
stos
or
loopne
mov
mov
cmp
sbb
xor
je
imul
shrb
xlat
stos
aaa
lcall
cmpsb
inc
je
cli
push
out
inc
push
xor
mov
in
aas
push
and
mov
xor
or
and
into
mov
lods
or
cmc
sub
lock
das
jmp
stc
add
repz
stc
xbegin
inc
xor
add
out
mov
repnz
inc
insb
ss
pop
cs
inc
mov
dec
adcl
ds
cmc
in
rcrb
loopne
mov
inc
jle
bound
mov
insb
cmpsb
bound
xchg
lret
xchg
push
int
call
outsb
adc
lret
mov
mov
shl
xchg
xor
int3
pop
sbb
inc
sbb
repz
loope
aaa
popf
mov
ja
add
ror
je
adc
mov
divl
xor
movsb
fwait
or
daa
sbb
ja
push
rclb
pop
jo
mov
and
ret
pop
or
fbstp
lcall
push
test
loopne
lds
ficoml
adc
aam
push
or
ss
fcmovnb
fisubrl
xor
loope
test
stc
ljmp
faddl
jp
inc
xchg
fwait
ds
lds
fsubrs
jl
mov
popf
xchg
lods
add
out
and
sti
sub
adc
outsl
mov
lret
inc
sarb
sbbb
pop
xchg
jle
cld
xor
mov
pop
jnp
movsl
mov
nop
mov
push
cmp
xor
sub
sub
mov
dec
gs
ss
xchg
sub
sarl
and
inc
adc
cmp
idiv
jne
mov
lret
pop
shr
cmc
hlt
mov
mov
outsl
mov
inc
lahf
lcall
std
pop
cltd
or
pop
ljmp
daa
es
cmpl
sbb
adc
inc
xor
notb
push
icebp
fmulp
ss
and
or
xchg
xchg
inc
xlat
dec
loop
dec
test
lret
and
fidivl
lcall
adc
icebp
pop
mov
ja
jno
sub
pop
adc
cmp
scas
add
pushf
add
adc
push
pusha
ljmp
test
adc
mov
enter
dec
or
imul
inc
js
xor
aad
idiv
cli
push
jge
in
adc
inc
pushf
fsubs
in
mov
push
sub
stc
scas
pop
mov
xchg
adc
jo
sbb
add
fistps
and
sti
es
fldt
jle
imulb
loop
mov
movsb
lods
cmp
in
shr
pop
dec
outsl
in
hlt
out
jp
lea
pop
loopne
dec
jmp
inc
imul
fisttps
and
mov
int3
inc
xlat
lcall
add
fnstcw
fsubrp
add
rcrl
adc
and
dec
js
pop
sub
sarl
subl
xchg
push
sub
insl
movsb
sbbl
dec
jnp
sbb
push
jns
mov
ljmp
fsubrl
pop
into
sub
icebp
out
pushf
popa
or
adc
add
jg
aad
cmc
je
outsl
rclb
sbb
fmul
sbb
xchg
mov
mov
jecxz
sbb
mov
push
pop
dec
loope
cmp
adc
mov
adc
ficoms
jne,pt
stos
cmpsb
jge
xchg
rclb
sbb
sbb
mov
test
and
mov
hlt
lret
into
jp
jo
cli
xchg
fsubrl
fnsetpm(287
out
xor
adcl
bound
mov
aam
iret
dec
out
clc
jmp
jne
sti
mov
sbb
call
jno
insl
push
inc
push
movsl
jo
insb
inc
inc
jbe
push
fimuls
lcall
xchg
mov
and
jb
push
mov
outsl
int
movsl
mov
dec
in
pop
mov
dec
pop
cmpxchg
mov
jae
dec
xchg
sub
sbb
and
lods
pop
das
and
inc
iret
mov
xchg
aam
sbb
jb
mov
jae
pushf
popa
mov
sbb
out
dec
push
lahf
int3
leave
fs
cli
and
xchg
enter
ds
xchg
lahf
cmp
dec
fisttpl
loope
pop
movsb
mov
xchg
pop
jbe
in
sbb
ficompl
sub
scas
imul
popf
xchg
inc
movsb
inc
insb
and
lea
cld
xchg
cs
ret
cwtl
call
inc
cmp
cmp
scas
dec
sub
fsubl
outsb
xchg
dec
imul
xor
sbb
add
rcll
aad
and
popf
das
or
push
sub
fsubp
aam
sbb
sbb
test
popl
loop
std
or
lock
sbb
dec
mov
and
sub
loop
or
xor
ret
into
pcmpeqw
push
xchg
outsb
ljmp
jns
inc
cmpsb
mov
outsl
or
add
push
mov
js
mov
xor
in
sbb
dec
aam
mov
pop
sarb
lock
mov
fwait
mov
ret
aam
xor
inc
inc
xchg
or
ret
mov
xchg
xchg
pop
jle
dec
loopne
adc
mov
and
mov
ljmp
cmp
int
jp
fistpl
test
add
sbb
mov
add
lds
popa
or
or
lahf
jo
icebp
sub
rclb
push
stos
dec
outsb
adc
xchg
ljmp
lods
mov
sub
in
inc
cmpsl
andl
pop
sti
jle
aaa
sbb
repnz
xchg
es
inc
push
add
daa
xor
jle
in
sti
cmp
int
addl
sub
pop
cmpsb
pushf
lods
pop
push
cmp
adc
std
icebp
stc
idivb
test
sahf
mov
pop
pop
stc
enter
sbb
mov
cltd
xchg
sarl
enter
pop
aad
and
cltd
jae
iret
outsb
jae
insl
lret
cs
pop
mov
addl
lahf
cmpsb
mov
cmp
push
ss
push
mov
repnz
ret
jnp
dec
mov
or
int
mov
loopne
mov
or
fisttps
adc
inc
outsl
cwtl
or
cmp
xchg
out
std
rorl
pop
mov
ja
mov
xchg
in
ret
xor
dec
cltd
mov
add
jmp
xor
int3
xor
iret
jp
mov
addr16
push
jl
into
int3
lods
leave
xor
cwtl
sub
jno
jge
cmp
pop
cmc
and
sahf
int
mov
stos
xchg
scas
jno
aad
aaa
jno
jmp
cltd
stc
and
aad
rorb
pop
dec
dec
in
push
cli
imul
popf
lahf
jmp
orl
stos
and
in
fcoms
ret
mov
dec
aas
lcall
dec
jbe
arpl
pop
pop
add
mov
jecxz
mov
xchg
mov
insb
mov
add
loop
in
pop
pop
in
jo
mov
jmp
xor
add
dec
add
dec
out
mov
push
enter
insl
out
dec
mov
push
mov
out
mul
es
mov
scas
or
add
into
inc
add
stos
imul
and
adc
jmp
and
rcll
mov
or
cmpsb
out
lds
adc
insb
lret
addr16
fidivl
fistps
or
pop
add
jae
jmp
add
cmp
repnz
mov
addr16
das
and
jle
int3
add
push
fldcw
cld
or
fldl
fnstcw
dec
lods
lods
add
fs
mov
stos
and
sbb
sub
ret
cmp
data16
je
out
xor
lcall
jae
dec
jmp
jge
lret
ss
mov
mov
stos
jno
fpatan
ljmp
sub
aas
xchg
icebp
loope
std
mov
push
dec
pushf
arpl
movsl
adc
mov
in
cmpsl
push
pop
push
rcpps
jne
mov
sarl
push
test
dec
or
lret
adc
and
int
fcompl
sub
mov
fcmovu
or
push
jmpw
inc
and
xor
ss
dec
mov
imulb
stos
push
notb
and
inc
clc
scas
lods
repnz
xor
pop
dec
std
jb
sbb
jb
out
pop
push
jae
sbb
mov
pop
lds
iret
jae
lret
push
cmp
mov
bound
lcall
bound
ret
pushf
jno
test
xchg
loopne
sti
mov
adc
pop
ret
into
in
fistl
jo
test
cmp
push
int
test
sbb
test
mov
push
not
sub
imulb
mov
imul
leave
aas
adc
test
out
pop
test
ret
adc
repnz
and
adc
dec
sahf
pop
push
fcoml
int
mov
test
and
pop
pop
xlat
out
lret
sub
int3
jo
pop
add
fst
js
imul
cmpsl
lea
ja
cwtl
test
test
shr
loopne
data16
mov
cmp
sbb
test
jbe
add
aas
mov
call
test
xchg
dec
fldz
inc
inc
jecxz
orl
je
cmp
ret
mov
movsb
add
push
psubw
shll
insl
xorl
pop
cmp
addb
idivb
push
mov
in
xor
int
in
sub
test
clc
ret
pop
mov
rcrb
cld
jnp
leave
mov
xchg
mov
mov
mov
push
jl
repz
or
enter
xchg
adc
pop
leave
inc
in
cmp
ja
or
cltd
dec
int3
fsts
dec
lcall
sub
mov
push
data16
xor
push
xor
adc
xchg
repz
inc
pop
push
popa
xchg
fisubs
addb
jp
loop
stos
es
or
cs
cli
dec
lea
cmpsb
hlt
mov
sbb
call
in
sbb
enter
inc
inc
int3
mov
ljmp
jmp
mov
cmpl
leave
or
int3
cmp
fidivs
mov
loopne
cmpsb
push
out
dec
pop
sub
out
pop
test
sub
dec
div
xrelease
mov
lods
test
cmpsb
int3
push
stc
test
daa
cmp
adc
xchg
xor
rcr
pop
jae
mov
nop
mov
mov
movsb
sbb
cwtl
fisubrl
cltd
insl
cmp
cmp
adc
mov
mov
outsb
xor
and
sbb
pop
or
inc
add
imul
or
jp
in
in
xor
mov
ror
outsl
lea
cmpsb
mov
adc
and
inc
and
bound
sub
shll
loop
arpl
or
test
ds
lcall
xor
int
mov
sub
jno
je
stc
aad
bound
scas
xor
lret
jnp
aas
mov
std
enter
or
in
es
fmuls
fwait
scas
and
fsubrs
out
adc
in
jge
mov
cmp
and
in
fistl
hlt
xchg
push
push
pop
fs
fcomi
xor
xchg
loope
inc
insb
insl
dec
sti
mov
sbb
fs
fdivrs
jo
sti
jo
aam
sbb
sub
js
dec
gs
cltd
aaa
subb
idiv
mov
shr
jne
imul
sbb
aam
jbe
sub
xor
xchg
push
mov
cmp
shll
fs
data16
xchg
dec
je
aad
xor
aam
mov
je
movsb
jmp
mov
cmp
adc
out
bnd
add
push
int
mov
jb
into
cmp
fimull
xchg
les
mov
adc
add
or
std
gs
lods
fadd
aas
cmp
xor
mov
fiaddl
bound
sbb
inc
out
aad
pop
pop
inc
shrb
sub
mov
jnp
daa
cltd
push
repnz
push
xchg
xchg
jbe
push
enter
int
test
mov
lea
lods
ret
xchg
jg
or
pop
out
and
shll
sarl
ja
mov
dec
repnz
in
pop
std
xchg
hlt
lret
ret
dec
in
dec
push
ljmp
fiaddl
push
adc
and
mov
dec
aam
movsb
sbb
pop
and
rcrb
jne
in
xchg
test
enter
fistps
sahf
cmp
inc
push
in
ret
and
and
add
jecxz
or
pushl
insl
mov
imul
pop
jno
jp
sub
sub
mov
arpl
stc
xchg
in
fisubrl
adcb
sub
adc
cmp
dec
mov
int3
inc
sub
mov
sub
cmp
push
push
push
rclb
icebp
dec
sti
adc
insl
data16
aaa
fadds
lods
mov
test
rclb
xchg
jae
in
mov
pop
push
das
sub
fidivl
mov
push
addl
push
orl
nop
jo
xchg
decl
push
cmpsb
jg
loope
xchg
scas
mov
stos
push
xor
pop
lret
and
sub
mov
movsb
xchg
cmc
jecxz
cmp
sub
mov
push
mov
negl
dec
dec
pop
ret
sub
dec
in
aad
lcall
xor
xchg
andb
arpl
aam
int3
jnp
mov
movsl
lahf
xor
daa
das
frstor
ja
dec
loop
mov
mov
rcll
pop
lea
and
jae
adc
sbb
pop
out
jl
jb
cmp
xchg
subb
or
push
sti
lahf
or
aaa
mov
xlat
cld
mov
cmp
pop
shlb
pop
pop
push
shll
mov
xor
fisubl
inc
jmp
cmp
dec
pop
sti
adc
and
jne
fisttpll
pop
xchg
in
push
mov
orb
je
cmp
std
jle
test
xchg
inc
pop
imul
movsb
pop
and
xor
push
mov
shl
sbb
jge
inc
icebp
xor
xchg
scas
inc
pop
cs
lahf
cmc
shll
xor
rcr
addr16
loope
clc
add
test
loop
divb
push
aam
lahf
sub
xchg
inc
push
pushf
xchg
lods
std
imulb
jmp
push
cli
out
add
test
mov
pop
int3
fiaddl
dec
es
or
cmp
push
jno
lods
sarb
push
push
or
dec
outsb
fadd
push
add
lods
in
push
sbb
call
inc
xchg
pushf
mov
inc
movsl
test
xor
imul
cmp
mov
xchg
mov
jae
sbb
mov
xor
nop
xchg
bound
push
in
ds
mov
mov
sbbb
xchg
sub
iret
sbb
cmp
loope
jb
push
and
mov
fbld
xchg
in
jecxz
cld
inc
fistl
push
in
int3
jge
sub
sub
jl
push
stc
push
and
ss
imul
mov
pusha
xchg
xchg
in
cwtl
pop
ja
mov
ss
leave
cld
nop
push
mov
or
jecxz
xor
adc
mov
push
cld
push
adc
icebp
test
xchg
data16
pop
dec
push
sbb
jbe
lret
ja
pusha
dec
mov
xor
mov
adc
scas
shlb
xor
movsl
les
sti
jl
pop
mov
nop
movsl
push
shlb
out
adcl
jne
pop
inc
or
addr16
xchg
pop
cmpsl
lods
mov
pop
mov
xor
xor
inc
repnz
cmpsb
pop
call
sbb
lret
jecxz
les
lcall
sahf
push
sub
ljmp
xor
notl
mov
stos
dec
in
push
pop
sarl
or
std
aad
dec
inc
lret
adc
and
jne
outsl
xchg
add
dec
shlb
sti
std
xor
sbb
std
nop
pop
mov
mov
xchg
push
adc
std
int3
shlb
push
dec
gs
pop
in
mov
into
mov
push
rcrb
aaa
leave
pop
sti
pop
stos
test
fsubrs
fnstcw
out
das
sti
jmp
jecxz
mov
jno
mov
mov
mov
out
leave
sbb
movsb
sbb
loop
in
lock
outsl
xor
lcall
aad
sub
fstpt
xchg
ds
cld
push
outsb
mov
inc
jb
sub
mov
dec
mov
lods
pop
jbe
das
test
xchg
sub
mov
je
std
adc
jmp
ret
and
pop
scas
mov
lods
mov
loope
xchg
lret
mov
lea
adc
dec
pop
sub
cmpsl
jecxz
loope
push
mov
mov
lret
call
fisttpll
mov
ret
outsl
add
dec
cmpsb
dec
mov
gs
pop
cwtl
xchg
xchg
sarb
imul
jo
pop
add
add
sub
sub
sbb
adc
sbb
iret
push
aad
and
stos
loopne
pop
jno
mov
insl
in
fs
pusha
xchg
ds
sub
imul
xchg
lret
shll
sbb
pop
bound
stos
add
call
push
call
jp,pn
mov
out
jg
stos
scas
rcr
inc
xchg
cmc
mov
lahf
sbb
push
and
negl
sub
fwait
and
clc
in
pop
ss
inc
orb
movsl
not
inc
roll
repz
enter
bswap
and
ret
cmp
cmp
scas
or
dec
mov
jle
cli
out
movsb
repnz
add
mov
je
out
pushf
daa
int3
daa
mov
shrl
inc
xor
adcl
lret
popf
mov
call
jmp
add
inc
movsb
jle
test
dec
test
je
aad
sar
inc
mov
inc
inc
and
and
xor
test
in
jge
inc
lock
sbb
mov
bound
inc
pop
cmp
cmc
imul
push
ds
jbe
jnp
xchg
add
imul
mov
xchg
xor
scas
inc
das
pop
inc
das
pop
pop
dec
mov
aam
scas
fadds
icebp
sbb
lcall
mov
mov
inc
pop
sub
adc
dec
sub
test
subb
cmp
pusha
bound
dec
int3
push
cmc
mov
mov
ja
fidivrs
fists
lret
lahf
jecxz
xchg
sbb
dec
dec
adc
and
inc
test
or
arpl
fs
and
sahf
lahf
xchg
and
pop
aaa
mov
adc
fiadds
insb
xor
aam
cmp
adc
outsl
cltd
xchg
xchg
add
bound
test
decb
daa
jne
mov
scas
lret
bound
or
mov
xor
jo
jp
xlat
dec
in
lret
mov
xchg
shrl
and
imul
or
mov
jg
pop
xor
xor
scas
in
mov
ljmp
out
xchg
mov
lods
iret
test
xchg
insl
xchg
das
lret
insb
pop
aas
mov
jmp
push
mov
xor
mov
lret
in
adc
mov
cmp
xor
ss
shrl
enter
jl
in
pop
dec
lret
and
test
negl
adc
test
sbb
pop
pop
in
jge
stc
stc
push
cmc
sub
pushf
les
sbb
cmp
leave
jae
stos
cmp
and
xor
outsb
fildll
fadds
daa
mov
sarb
jp,pn
cmp
cmp
repz
cwtl
cltd
dec
mov
scas
xchg
nop
push
stc
lahf
je
popa
cwtl
sbb
and
scas
enter
rolw
adc
lods
xor
insb
fidivs
out
pop
cmovbe
dec
jle
xlat
jmp
lret
test
pop
jle
fnstsw
int3
xor
xchg
push
lods
sub
mov
shl
add
ja
xlat
incb
mov
cwtl
mov
mov
sub
xor
jp
pop
cmpsb
insl
dec
mov
ret
std
inc
xchg
fcomps
int3
mov
leave
add
rcl
lea
or
fsubl
jge
stos
xchg
shll
mov
sti
adc
sub
mov
xlat
jo
adc
mul
std
lcall
sbb
mov
jb
and
push
push
dec
dec
pop
mov
sbb
push
imul
in
fcoml
or
cmc
fistps
xor
or
js
dec
xchg
xchg
cmc
dec
add
pusha
push
sar
dec
leave
pop
xchg
nop
adcl
fcmovnbe
outsl
push
stos
pop
aam
pop
pushf
loop
adc
data16
iret
jo
cmp
fiaddl
mov
sub
lret
dec
ja
and
andb
cmp
xchg
inc
mov
mov
addr16
xchg
pop
xor
fdecstp
jo
outsl
or
jb
xor
and
dec
shlb
cmp
jle
je
test
pushf
sub
bound
push
movsl
mov
dec
test
repz
mov
into
std
mov
lods
lods
cs
lods
sub
cmpsb
inc
and
ja
sub
sbb
push
mov
fiadds
sbb
adc
roll
mov
jg
add
push
cmpsl
cltd
mov
imul
out
sarl
loope
and
and
add
cmp
arpl
addr16
sbb
mov
lahf
fldt
shrb
popa
cmp
mov
out
cmp
jp
shr
and
sbb
data16
mov
add
int3
rcrb
ss
out
pushf
test
sub
dec
inc
pushf
sbb
stc
mov
ret
icebp
pop
popf
mov
filds
daa
pop
pop
sbb
add
sbb
pop
mov
cmovg
sbb
mov
cli
imul
jns
fwait
sti
push
fs
scas
loop
in
xchg
jecxz
add
lahf
pop
xlat
xlat
inc
sub
xor
je
xor
int3
push
pusha
mov
xor
jp
sub
cmp
cs
mov
sbbb
fdivl
pusha
dec
sub
mov
ror
dec
dec
in
fiaddl
or
jge
lcall
in
xor
lcall
jmp
imul
dec
push
and
add
pop
fisttps
rorl
mov
sub
mov
dec
popf
cmp
mov
add
inc
sub
adc
aad
icebp
mov
add
lret
aas
pop
dec
jbe
pop
dec
jg
lret
cmp
mov
imul
cltd
hlt
and
cmpsb
les
or
bound
aas
fidivrs
or
push
sbb
push
sbb
shlb
cmp
sti
cmpsl
push
or
cwtl
insl
xor
loop
mov
and
fisttps
outsb
xor
jmp
movsb
in
xchg
or
ret
insl
add
das
cwtl
cmpb
jbe
arpl
mov
sbb
mov
stos
mov
fucom
popf
mov
adcl
test
fwait
daa
or
jmp
jns
mov
add
push
inc
popa
xor
insl
scas
pop
sub
out
xor
lret
inc
fcoms
les
inc
mov
ret
outsl
adc
mov
ds
inc
shlb
std
push
mov
xor
cmp
mov
add
cli
out
xlat
out
cmp
cltd
adc
shrb
nop
sub
fildll
and
mov
mov
ret
stos
pop
jb
sub
rorb
inc
ja
pop
aam
push
mov
adc
ret
test
pop
lock
lods
xchg
in
sub
push
pushf
cmp
mov
mov
pusha
mov
xlat
mov
mov
test
xchg
imul
clc
in
cltd
inc
xchg
enter
sarb
stos
xor
popf
pop
sbb
mov
imul
pusha
test
loope
jb
shl
cld
and
or
xor
and
fimuls
adc
repz
dec
push
add
lret
sub
xchg
pop
pop
ja
push
loopne
jmp
xor
or
out
push
jmp
add
repnz
ljmp
movsl
nop
sahf
pusha
scas
mov
sbb
aad
pushf
movsb
call
hlt
fstl
insb
mov
sbb
rolb
clc
ljmp
cmp
mov
pushf
pop
fildl
xchg
clc
ror
xchg
popa
add
mov
cmc
sahf
mov
or
int
scas
and
pop
or
mov
add
and
mov
push
push
push
mov
and
enter
and
fimuls
push
dec
aas
cltd
stc
and
cli
enter
nop
and
int
sbb
mov
popa
xor
xor
dec
pop
xchg
pop
dec
pusha
cmpsb
jmp
fadds
add
je
imul
push
mov
xchg
dec
call
fnstsw
repnz
call
test
xor
out
push
mov
rolb
push
cmp
add
sub
sbb
cmp
jp
fsubs
inc
outsl
inc
je
jae
sbb
lds
test
addr16
push
mov
push
add
daa
sbb
mov
jg
sub
sti
lahf
js
repz
fidivl
pop
aaa
push
mov
push
insl
subl
mov
mov
push
out
stc
test
and
scas
fistpll
rorl
and
mov
sbb
in
push
sahf
mov
sbb
jne
data16
loopne
jne
adc
std
xor
or
inc
loopne
add
xchg
ret
push
out
leave
ret
imul
daa
stos
and
andl
icebp
push
test
adc
sub
in
adc
add
or
pop
mov
cmp
add
sbb
dec
push
lret
gs
aas
ret
leave
push
pop
or
das
add
rcll
insl
dec
lahf
dec
mov
pop
fistpl
add
imul
orl
andl
lahf
sub
cmp
inc
xchg
outsb
mov
mov
scas
aaa
push
or
aas
in
pop
fnstsw
dec
and
iret
sbb
mov
push
les
je
in
popf
and
out
js
adc
inc
cmp
or
fs
xlat
xchg
cmp
repnz
in
ficoms
js
ds
add
leave
popf
hlt
xlat
sub
or
sub
push
pop
ss
into
cwtl
ret
mov
add
cs
mov
push
rcrl
adc
insl
into
inc
dec
leave
push
jnp
add
jmp
xchg
xor
mov
cld
pop
push
dec
in
in
cmp
sub
subb
jo
xor
aam
fcmovbe
fbstp
lahf
rcll
fcmovne
inc
stc
ret
fstpl
iret
enter
pop
sub
cwtl
cmp
movsb
adc
adc
test
loope
and
xchg
in
mov
push
into
lcallw
jle
push
push
rorb
aam
lea
mov
mov
pop
in
je
dec
fbld
sub
mov
adc
lods
mov
sub
mov
stos
and
mov
inc
mov
sub
dec
shrb
sub
leave
dec
dec
mov
sub
int
bound
xor
popa
ss
push
dec
movsb
mov
sbb
lcall
inc
mov
pop
test
jmp
adc
jne
gs
xchg
mov
push
xchg
std
add
outsl
inc
lods
mov
movsl
call
push
mov
mov
xchg
cmp
or
cmp
iret
imul
or
pop
jne
sub
pop
call
adc
xchg
enter
mov
mov
in
ret
xchg
inc
pushf
call
outsl
mov
sbb
out
movsb
imul
pop
lds
jmp
sbb
sbb
clc
mov
push
mov
dec
test
pop
stos
sub
or
adc
pushf
adc
jne
inc
in
test
jnp
or
nop
lods
pop
scas
mov
test
imul
xlat
push
mov
xor
ja
sub
cmpl
int
mov
and
iret
xor
inc
cmp
mov
or
mov
out
out
xchg
mov
flds
or
or
cwtl
testl
aad
icebp
sti
les
ja
pop
and
in
outsl
imul
and
sub
mov
pop
pushf
sbb
inc
aaa
cmpsb
je
call
arpl
jo
stos
pop
enter
inc
mulb
insl
fs
pop
fs
aad
adcl
mov
inc
fnstcw
push
in
fistpll
out
pushf
cmp
mov
cmc
in
test
pop
dec
faddl
xor
xchg
mov
sahf
inc
cmp
fdivl
mov
sub
ds
add
imul
mov
mov
dec
outsb
mov
fnsave
int
imul
inc
xchg
mov
ficomps
and
adc
push
lret
std
sub
mov
jo
mov
out
enter
jbe
sub
dec
jns
jb
push
jne
or
xor
jo
or
sahf
rcrl
cmp
scas
hlt
aam
in
mov
pop
leave
mov
out
call
mov
mov
adc
mov
mov
xchg
pop
xor
popa
push
push
jae
imul
stos
add
sarl
xor
cltd
gs
jne
aaa
or
pushf
push
jp
mov
pmuludq
jbe
xchg
loope
mov
aam
aam
sbb
daa
scas
fldenv
pop
mov
cmc
pop
mov
repz
and
jns
sub
lahf
mov
jnp
sub
and
das
mov
ror
or
pop
cmc
jle
xchg
cmp
scas
mov
arpl
popa
out
cld
xchg
push
mov
xchg
pop
shll
fst
mov
lret
lods
sti
or
adc
xchg
fstps
mov
cmp
xor
lds
sub
sub
and
push
enter
push
out
pushf
sub
mov
sti
arpl
add
in
xchg
inc
cmp
pop
adc
test
push
cmp
mov
adc
or
roll
xor
and
cmp
jp
sub
fs
inc
cmpsl
inc
pop
je
sbb
push
adc
jmp
popa
ficoml
aad
sub
dec
lret
andl
shll
inc
add
pusha
cmp
mov
into
pop
mov
inc
jp
xchg
lcall
push
rorl
push
jge
sub
fstpl
push
pushw
in
pop
stos
nop
sbb
push
mov
pop
inc
je
popf
into
push
jnp
fisubrl
jno
aad
and
dec
repnz
push
rol
mov
inc
dec
iret
pushf
inc
jnp
adc
cmp
sub
adc
cli
test
sbb
push
popl
addl
repnz
cmp
lcall
insb
insb
jmp
dec
pop
sti
insb
insl
cmc
aam
dec
adc
pop
mov
dec
insb
scas
pcmpgtb
shl
movsb
sub
jb
and
in
mov
push
stos
cltd
sub
in
jl
ret
or
xchg
testl
cmp
mov
dec
dec
push
aas
and
sar
shr
mov
iret
push
jmp
nop
mov
jmp
sbb
push
inc
insb
mov
lahf
xor
and
cs
mov
shr
popa
pop
aaa
inc
xor
imul
inc
or
add
in
ret
mov
pop
loopne
jae
mov
dec
mov
pushf
loope
enter
sbb
fsubrp
xchg
inc
pop
std
add
cltd
cmp
add
sti
lret
popf
stos
pushf
sbb
bound
xchg
roll
sbb
mov
cmpsb
insl
inc
xlat
adc
sub
mov
or
cwtl
ljmp
fdivrl
in
ss
lds
dec
mov
aam
ret
es
leave
push
push
lret
dec
pushl
sbb
mov
cli
mov
push
sbbb
inc
cli
add
and
cmp
lcall
stos
sbb
cmp
cmpsl
xchg
scas
add
rcrl
out
sbb
cmpsb
mov
adc
test
std
adc
clc
dec
cmp
jo
dec
arpl
mov
mov
mov
loopne
lods
shll
js
mov
fwait
daa
pop
pop
and
out
pusha
lret
addr16
repnz
dec
out
call
inc
div
js
mov
mov
mov
sub
push
push
push
mov
test
andb
jecxz
mov
mov
movsb
jnp
inc
gs
movsb
xchg
and
xor
rcrl
pop
imul
jle
xchg
xchg
adc
sub
sub
xor
rcrl
lahf
xor
lds
xchg
pop
ss
or
mov
and
pop
cmpsb
sbb
aas
add
pop
xlat
or
inc
add
pop
or
add
jp
scas
mov
les
lea
mov
adc
hlt
mov
or
stos
repz
dec
into
xchg
mov
je
jno
pop
leave
pop
jmp
xchg
mov
subb
jmp
pop
enter
adc
call
mov
cmp
daa
dec
enter
call
ds
in
adc
add
or
mov
pop
mov
in
and
or
push
mov
mov
jle
outsb
xchg
mov
std
inc
insl
dec
add
fldt
adc
push
xor
es
lea
std
inc
test
rcl
mov
je
push
and
cmpsl
lahf
mov
xchg
fnsave
out
out
mov
adc
movsb
ret
dec
cmp
inc
mov
mov
cmpsl
xorb
cmpl
addr16
pop
loope
shl
jbe
idivb
sahf
lret
cmp
insl
outsl
into
hlt
push
fcomi
adc
loopne
lret
jb
bound
aam
pop
sbb
xor
lods
int
xchg
leave
gs
sbb
lret
push
push
ret
cmpsb
aam
loop
out
stos
popf
sub
jle
cmpsl
sub
adc
fnsave
lock
xorb
movsb
call
lods
push
out
outsb
repnz
mov
sbb
and
imul
jne,pt
jle
clc
or
ds
scas
push
test
sbb
mov
into
push
iret
xor
and
std
xchg
xchg
pop
sbb
test
mov
les
and
pop
xor
insl
xor
out
icebp
sbb
push
int3
das
movl
or
mov
add
cmp
fcomps
lods
in
push
sbb
rcl
adc
mov
in
sub
mov
lcall
pop
pop
adc
xchg
push
xor
sti
into
mov
sub
jne
sbb
cmp
stc
mov
xor
push
lock
daa
ss
push
vcmpss
jns
mov
cmpsb
jnp
mov
pop
and
add
dec
cmpsl
lret
push
mov
sub
xchg
dec
push
mov
pop
cmpsb
fwait
pop
movsl
or
aam
mov
mov
mov
ret
add
imull
push
lret
mov
pusha
lods
mov
push
fsubrs
mov
cli
lds
push
in
in
mov
movsl
dec
sub
and
sbb
insb
push
mov
mov
jmp
mov
xor
xlat
xchg
scas
cmp
pop
mov
push
fdivr
push
outsb
dec
inc
lds
and
out
sub
stos
mov
rorb
fs
sub
fs
pop
jmp
mov
lcall
xchg
jg
or
loope
xchg
push
outsl
notl
leave
rclb
lods
insb
sub
sub
in
sbbl
push
sub
out
loope
and
rorl
decl
into
sbb
dec
fld
cmc
jmp
and
push
push
div
push
repnz
mov
mov
rorl
dec
sti
fmuls
push
or
test
out
enter
pop
outsl
ds
into
dec
xchg
jbe
cltd
aaa
cwtl
std
adc
int3
test
cmp
aaa
insb
mov
pop
push
ret
and
pusha
mov
inc
ret
mov
stos
inc
repz
pop
jb
pop
pop
loopne
shrb
addr16
adc
je
shrb
jle
and
cmp
push
mov
push
lods
lahf
fdivs
in
jle
inc
cwtl
outsb
sar
sahf
outsb
not
imul
lret
test
test
or
xchg
push
push
lcall
push
xchg
hlt
pop
cwtl
xor
imul
add
mov
sarb
lret
loopne,pn
jmp
sahf
inc
xlat
inc
push
lods
mov
setnp
or
ja
test
filds
shlb
adc
mov
pop
ret
pop
mov
repz
scas
mov
add
cs
ss
cltd
mov
lcall
add
enter
inc
scas
ss
loopne
test
mov
cmpsb
lds
ja
pushf
or
imul
ds
insl
mov
or
mov
add
jns
movsl
scas
mov
adc
pop
add
rcll
sahf
movsl
mov
fsubrs
roll
jl
mov
addb
cmp
jp
push
pop
jno
fstpt
mov
pop
mov
outsl
lret
loope
xor
jno
push
shrl
push
jecxz
loop
and
aas
cwtl
cmp
das
fstpl
shl
jnp
in
fdivs
stos
insb
mov
std
pop
xor
sbb
fisubl
int3
inc
test
or
or
nop
je
in
mov
jp
imul
lds
mov
push
sbb
push
rolb
pop
jmp
imul
adc
cmp
and
inc
or
in
mov
loopne
or
dec
inc
push
mov
pop
into
aas
hlt
inc
mov
mov
das
mov
xor
dec
pop
movsl
cmpsl
cmp
sub
gs
enter
push
shr
sahf
clc
imul
fimuls
mov
sub
pop
sbb
push
js
push
inc
xor
inc
adc
sub
cmpsb
outsl
or
and
rcll
sbb
xlat
push
xchg
rolb
dec
cmp
jno
mov
add
mov
jbe
xor
lret
arpl
and
inc
jp
sbb
int3
pusha
jecxz
sub
shrb
lods
repz
and
aam
jmp
push
jns
xchg
mov
and
popf
arpl
mov
sbb
out
sub
adc
jge
mov
dec
xchg
les
cmp
arpl
push
mov
dec
arpl
ss
jmp
popl
mov
leave
jl
jp
divl
xor
pushf
in
in
jnp
xor
mov
fldenv
mov
mov
jne
lret
jmp
stos
jne
mov
sysexit
shll
lock
adc
mov
jecxz
jg
push
xchg
xchg
dec
es
push
mov
mov
loop
and
loope
pop
jo
rorl
cmpsl
sub
int
dec
out
mov
pop
out
add
and
adcb
pop
and
or
ja
outsb
jl
dec
lahf
imul
push
mov
and
or
or
sub
fnstcw
into
xlat
mov
xchg
sti
or
inc
cmpsl
xchg
dec
outsb
cmp
jge
rcrb
mov
sbb
lock
jae
mov
push
call
cmp
pop
loope
lods
pop
stc
lea
sub
jb
shll
jmp
push
push
and
inc
insb
push
jbe
pushf
sti
call
inc
and
push
pusha
movb
lea
adc
nop
shl
xchg
jnp
add
add
out
or
stc
inc
mov
lods
loopne
repz
leave
add
das
dec
mov
jb
js
lret
push
testl
das
mov
mov
scas
add
dec
sbb
adc
adc
mov
or
cmc
jb
xchg
push
insl
popa
outsb
sbb
test
push
and
inc
rcrb
inc
aaa
push
andb
or
stos
cmpl
hlt
xchg
aam
into
fisubrl
inc
xchg
scas
jae
filds
jne
ror
push
and
mov
and
ret
jo
jmp
xor
cmp
push
xor
and
xor
mov
push
imul
add
mov
loope
mov
repz
scas
cs
xchg
dec
imul
mov
fs
call
repz
sahf
and
scas
mov
jg
in
sbb
es
pop
movsl
pop
pop
jne
mov
push
lea
dec
mov
xchg
sub
movsb
pop
nop
add
add
fsubrl
push
lcall
add
pusha
push
cmpl
sarb
pop
dec
mov
mov
adc
push
fistpl
xor
aad
repz
push
ja
sub
add
adc
dec
jecxz
hlt
push
inc
or
fsubrl
xchg
stos
jge
sbb
sub
jns
cmp
or
push
out
aas
test
je
and
pop
jnp
pop
mov
mov
and
jbe
mov
pop
or
lods
fiaddl
or
ljmp
leave
cltd
nop
out
popf
dec
push
cmpsl
mov
pop
int3
insb
or
xlat
lahf
xchg
push
push
sbb
cwtl
dec
jnp
pop
mov
jns
js
outsb
sub
mov
adc
fs
movsl
std
cmpsl
cs
enter
xchg
sbb
fs
enter
push
mov
xchg
mov
int3
repnz
or
mov
imul
or
push
push
or
insb
aaa
and
push
and
shr
jmp
pcmpeqd
gs
dec
sub
pushf
lahf
out
mov
rolb
in
push
inc
mov
xchg
adc
pop
inc
ror
or
cmp
pop
test
daa
mov
mov
and
xchg
jb
bound
pop
dec
ret
stc
add
and
mov
stos
lret
fs
cmpsb
dec
out
pop
fadds
aad
out
inc
jo
fcoms
fwait
js
negb
sbb
mov
xchg
inc
lahf
ss
ret
sub
jne
div
in
xchg
cli
cmc
add
enter
mov
incl
push
int3
or
repnz
iret
hlt
pop
addr16
das
cld
pop
mov
dec
inc
js
adc
std
xor
sbb
jmp
push
add
mov
jp
sbb
mov
ds
lcall
rol
dec
test
cwtl
outsl
jns
addr16
nop
rol
cmpsb
in
gs
icebp
sub
xchg
std
lea
loop
repnz
add
cmc
std
jns
add
loopne
testl
pop
in
push
jb
mov
or
mov
mov
sbb
cmpsb
test
jo
fldenv
or
test
pop
cmpsb
sub
imull
lahf
cli
push
inc
arpl
sahf
addr16
mov
icebp
sbb
jne
push
stos
out
mov
mov
or
xor
mov
and
int3
push
inc
pop
fimull
notl
lret
inc
adc
shll
cwtl
mov
xor
int
jg
or
xor
sysret
inc
aaa
push
mov
ljmp
int
mov
stos
popa
dec
xchg
lea
sbb
add
out
pop
mov
movsb
lods
jbe
jne
pop
sub
pop
mov
sub
xorb
cmpl
out
stos
push
je
loopne
nop
jns
loopne
mov
sbb
or
aad
adc
ss
aad
fs
fidivrs
adc
mov
mov
jae
repnz
pop
mov
aad
movsb
pop
ret
push
mov
shl
sub
adc
pop
and
push
mov
inc
popf
or
das
popa
adc
pop
sub
popa
inc
push
daa
lcall
mov
and
pushf
rcr
or
sahf
ror
sbb
aaa
xchg
adc
add
cmpsb
fildl
int3
in
pop
negb
push
push
adc
into
mov
mov
mov
out
jno
mov
mov
mov
inc
mov
sbb
sub
nop
mov
and
pop
cmp
out
xor
fdiv
gs
outsb
lahf
pop
imul
hlt
inc
sbb
jge,pn
mov
in
cmp
inc
loop
js
cld
inc
mov
popa
lea
and
pop
outsl
stos
cld
outsb
pop
xorl
js
jns
mov
add
pop
xchg
hlt
dec
bswap
mov
into
fs
sbb
push
lds
xchg
lahf
lds
lock
cmp
or
mov
cmpsb
inc
mov
popf
dec
mov
xor
imul
fdivs
sbb
popa
mov
cmp
sbb
icebp
sub
jle
divl
aad
mov
dec
push
jmp
add
sub
movsb
xorl
sbb
xchg
gs
ljmp
mov
arpl
and
adc
xchg
cmc
pop
push
mov
test
cmp
lcall
mov
dec
pusha
ljmp
sti
stos
ljmp
ja
cmp
je
nopl
mov
xchg
fcmovnu
in
mov
sub
cwtl
sub
sbb
incl
test
rcll
fadd
mov
clc
cmp
call
loopne
push
out
popa
push
mulb
loop
popf
int3
sbb
inc
or
ds
jne
popl
xchg
or
and
xchg
cmc
sub
xchg
jns
mov
cmpsb
push
xor
in
adc
imul
xchg
jne
out
loope
test
in
std
sub
sbb
outsb
jns
add
lret
add
insb
xchg
push
mov
testb
sahf
scas
pop
inc
ret
xchg
ficoms
jmp
push
lret
cwtl
xor
inc
sbb
inc
push
ret
push
sti
or
mov
mov
mov
out
cmc
lods
dec
mov
jmp
int
cltd
js
sub
push
cld
ss
inc
sub
pushf
dec
out
pop
pop
lock
xchg
in
mov
pop
ret
roll
jne
xchg
aaa
push
jns
ljmp
sub
pop
fwait
sbb
lock
push
ret
int
cmp
xor
lahf
ljmp
add
pusha
nop
pop
jae
hlt
inc
mov
push
pop
shl
lahf
and
mov
rol
ss
stc
out
sub
clc
arpl
sub
ss
and
and
pusha
sbb
and
mov
or
sub
mov
sbb
outsl
hlt
or
jl
pop
js
outsb
out
repz
stos
pop
dec
popa
pushf
sub
jp
mov
xchg
sub
push
cltd
in
inc
dec
xor
push
hlt
jle
add
xchg
xchg
adc
scas
cmpsb
xchg
fdivrl
out
subb
call
dec
push
fcompl
pop
mov
movb
stos
jl
pop
out
das
and
or
test
and
ficoms
add
pop
and
adc
pop
add
mov
je
push
mov
dec
cmp
mov
loope
xor
push
mov
andb
or
ja
ret
test
adc
imul
mov
inc
adcl
push
in
dec
scas
stos
ret
jo
xchg
jns
sub
dec
sub
lds
dec
stos
std
pop
leave
or
lods
ror
mov
enter
insl
adc
push
ficomps
xlat
pop
pop
mov
leave
negl
enter
sahf
sub
cli
insl
hlt
pusha
pushf
inc
and
fisubrl
outsb
dec
mov
daa
movsl
mov
stos
jb
fs
push
xchg
idivb
add
mov
sahf
push
dec
andb
xchg
loope
jecxz
in
and
cmc
cmp
fwait
sbb
gs
ljmp
xor
stc
cmc
pop
pop
popa
push
or
xor
into
jbe
lods
popa
mov
adc
sub
shrl
mov
mov
and
mov
lods
mov
scas
or
and
sub
push
mov
aam
mov
mov
pop
xor
mov
xor
sbb
jns
and
cmc
push
enter
mov
shll
jae
sbb
and
faddp
inc
imul
xchg
xor
subb
clc
pusha
cltd
xor
sbb
mov
test
add
adc
out
xor
ja
pushl
pop
fistps
push
add
repnz
daa
imul
daa
cmp
xor
daa
shll
push
inc
xor
ds
out
add
or
int3
xor
xchg
jg
adc
mov
adc
add
popf
add
and
enter
stos
pushf
cmp
or
xorb
out
xchg
xor
jbe
lcall
mov
inc
sbbl
xor
das
mov
xor
xlat
pop
cmp
dec
ret
icebp
ret
adc
out
movsl
mov
data16
cmp
in
adc
stc
mov
lahf
sarl
xchg
aam
outsb
les
mov
inc
sbb
cmpl
inc
pop
inc
cmp
sub
adcl
jecxz
cmpsl
inc
and
in
shrl
push
fstpl
ja
shrb
mov
add
cmp
mov
jae
mov
or
lods
xchg
mov
add
sub
sub
sbb
xchg
xchg
inc
xor
adc
icebp
jmp
xchg
sub
outsl
or
fld
les
addr16
pop
ds
mov
iret
imul
jne
and
leave
inc
mov
inc
out
adc
out
jge
inc
ss
and
or
fs
stc
dec
aad
push
cwtl
pop
push
in
mov
or
mov
jbe
inc
xor
lret
daa
int
int
mov
int3
je
ljmp
sub
jbe
dec
shll
jae
or
daa
xlat
in
and
push
icebp
cmp
sub
test
sbb
sbb
bound
adc
int3
or
cwtl
cmp
mov
jb
aam
jno
adc
rcrb
mov
dec
lret
dec
mov
push
cwtl
inc
jnp
fsts
inc
clc
cltd
fistpll
je
loopne
stos
bnd
sub
lret
into
ja
xchg
bound
mov
inc
lds
aad
adc
inc
aad
jbe
lock
mov
fmull
mov
ffree
imul
negl
cmp
jnp
jl
jns
cmp
pop
pusha
cmp
fsubrs
imull
sbb
test
and
in
sbb
xor
add
or
inc
mov
xorl
mov
xor
and
das
xchg
mov
jae
pop
fcomp
movsl
sahf
test
dec
in
arpl
push
in
add
inc
add
leave
jnp
aad
cmp
push
sub
sbb
aaa
push
je
rep
and
mov
push
mov
arpl
outsb
push
sbb
xchg
popf
outsl
dec
mov
int
fstl
mov
test
cli
and
dec
bswap
pop
rcrl
popf
sub
jno
movsb
testb
adc
jnp
cmp
lret
inc
lret
and
rorl
mov
mov
or
pop
mov
inc
sbb
fucomip
and
imul
pop
adc
out
inc
mov
js
popa
and
push
jp
mov
fisubs
into
dec
pop
mov
repnz
mov
icebp
mov
call
push
cltd
mov
and
notl
jl
movsl
adc
gs
push
inc
dec
push
push
iret
subl
sbb
cmp
xchg
pshufw
lea
push
jnp
jp
mov
das
aas
and
pop
enter
ret
xor
mov
cli
addr16
scas
stos
inc
leave
jo
sub
je
jb
test
fadd
and
nop
or
cli
test
subl
movsl
adc
jmp
add
pop
movsb
shll
mov
add
mov
jae
pushf
push
in
mov
out
es
repnz
lea
dec
inc
out
pop
push
stos
dec
inc
cmp
popf
fildll
fcomps
sbb
cmp
enter
push
adc
sbb
mov
roll
insb
or
sbb
jg
inc
cmp
mov
dec
jns
sbb
pushl
nop
cmp
movsl
cmp
aad
xchg
cmpsb
stos
in
pop
dec
in
lret
jg
mov
mov
shl
leave
or
ds
fisttpl
push
push
sbb
or
mov
mov
aam
fidivrl
inc
jg
outsl
mov
imul
adc
dec
mov
cmpsl
roll
xor
fdivl
rcl
sar
add
mov
cmp
cs
aad
ret
enter
ljmp
lods
loopne
pushf
out
sub
test
pop
mov
mov
jb
sub
dec
icebp
cmc
scas
pop
dec
xchg
push
out
repnz
adc
push
or
cs
int3
push
or
fnsave
inc
push
jl
lods
ja
xor
or
sbb
cmp
sub
push
lea
inc
mov
xchg
push
xchg
jle
sub
xor
in
test
ret
iret
pusha
push
fdiv
cli
push
inc
addr16
test
mov
mov
push
or
jne
repnz
sub
inc
lods
cmpb
aad
mov
inc
divb
xchg
push
or
xor
add
pop
out
scas
test
leave
sub
les
dec
ss
movsb
mov
fdivrl
jne,pt
leave
cs
daa
call
and
jns
xchg
lahf
lahf
and
jecxz
enter
aad
hlt
jo
add
js
addr16
xchg
pop
xor
jle
add
sub
push
xor
sub
lods
add
dec
movsb
das
add
vfnmsub132pd
es
cltd
jns
inc
addr16
push
mov
mov
inc
push
leave
and
movsb
xchg
pop
fisubs
cmp
add
pop
push
mov
sub
xor
mov
and
mov
push
lock
pusha
shlb
data16
test
loopne
sub
rcl
dec
sti
les
adc
mov
test
ja
or
and
mov
sub
cmp
add
aam
mov
stos
loope
mov
or
add
xchg
push
dec
lahf
int3
test
aas
push
jnp
push
insl
lds
cwtl
xor
cmp
leave
int3
add
mov
gs
adc
orl
repz
lcall
mov
jle
cmp
sahf
ja
jp
dec
sbb
orb
dec
mov
inc
jl
lds
mov
sahf
dec
push
insb
fnsave
ficoml
cmp
or
cmp
and
sahf
outsb
mov
dec
xor
push
loop
pop
cmp
inc
das
ret
inc
repz
mov
xor
dec
jmp
fmuls
leave
cli
inc
xchg
pop
jl
hlt
xor
jg
sbb
test
mov
into
jno
pushf
dec
pop
push
pop
in
ljmp
mov
mov
sub
hlt
mov
dec
and
xchg
arpl
stc
cmp
sarl
pusha
or
lea
jne
incb
jo
shll
pop
jnp
rorl
mov
rcrl
lret
jne
push
inc
xchg
lds
sub
mov
clc
or
or
dec
int3
dec
ljmp
push
mov
fucomip
or
popf
dec
dec
je
push
std
xorb
sbb
push
jb
pop
rolb
pop
mov
jae
mov
scas
mov
jne
cs
cwtl
xor
xlat
fs
mov
add
push
into
jno
bound
adc
mov
pushf
sub
jmp
aam
aam
in
in
aaa
push
and
jg
dec
sub
in
push
lods
lods
xchg
ret
fcmovbe
or
subb
lea
push
movsb
adc
ficoms
loope
mov
sub
adc
test
sub
xlat
loope
cmp
sbb
cmp
push
cmp
push
repz
stc
mov
aaa
hlt
jae
dec
pop
ljmp
mov
shl
out
jb
daa
stc
shl
jbe,pn
icebp
adc
jae
aam
xchg
mov
movsl
fisubl
imul
pop
pop
or
call
xlat
incl
rcll
mov
dec
das
xchg
repz
lret
clc
notl
dec
cmp
test
test
daa
pop
aaa
mov
aas
cmpsl
cmp
fisubrl
mov
mov
insb
addr16
divl
mov
icebp
mov
push
enter
js
push
xchg
in
add
repnz
mov
or
xor
orb
push
lahf
dec
mov
mov
mov
dec
stos
fcmovu
pop
lret
scas
iret
jmp
int3
out
xchg
cmpl
sbb
insb
xchg
adc
or
or
xchg
in
mov
outsl
mov
sbb
jo
dec
fsubrl
rorl
pop
ret
cmp
add
fs
scas
sub
mov
stos
imul
sbb
movsb
mov
jl
push
add
movsb
or
adc
std
aaa
mov
outsl
sarl
shlb
cmp
mov
push
mov
mov
inc
mov
and
xchg
cltd
cmp
xor
repz
scas
mov
inc
adc
sbb
shl
fnstcw
pop
movsb
sbb
push
push
pop
jnp
mov
dec
fwait
xchg
sbb
aas
jno
push
lret
lret
pop
mov
mov
das
movsb
mov
cmp
pusha
cmp
adc
jg
sbb
and
adc
sub
adc
mov
stos
enter
and
jl
in
shr
mov
leave
les
orl
xchg
mov
jg
push
sarb
fwait
and
add
roll
sbb
xchg
xlat
xchg
jno
adc
mov
cmc
pop
sbb
mov
jecxz
inc
sub
mov
adcb
iret
inc
cmp
and
fs
fildl
leave
mov
std
xchg
add
xor
dec
jno
pushf
hlt
adcl
cmpsl
mov
cmp
daa
insb
dec
or
mov
push
jno
cmp
push
jecxz
cmp
fsubl
out
imul
decl
aad
adc
rolb
clc
rorb
cmp
movsb
out
xchg
stos
rcr
stc
inc
sbb
mov
iret
xor
mov
push
fsubrl
cltd
addb
jns
mov
addr16
cld
movsl
xrelease
xchg
lds
ds
mov
mov
in
xor
mov
fisttpl
xchg
and
add
mov
xchg
in
fnstcw
and
cmc
shrl
cmp
mov
lock
aam
fs
lcall
in
sbb
cmp
xchg
nop
mov
dec
push
jo
inc
add
inc
dec
dec
data16
dec
mov
mov
mov
push
notl
cltd
cmpb
xchg
or
das
shrb
or
rcll
sbb
sub
pop
sub
js
mov
sbb
add
in
scas
aam
pop
mov
sbb
popa
cli
pause
mov
cmpsb
es
cltd
dec
push
ret
loopne
mov
xchg
mov
pop
int
adc
fsubr
cli
inc
inc
mov
test
aas
stc
push
xchg
popa
idivb
add
out
cmpsl
jmp
mov
pop
popf
add
out
jecxz
pop
mov
xchg
xor
insl
jno
loopne
adc
adc
and
sub
add
rclb
sub
mov
xor
pop
loopne
outsl
jae
idiv
movsb
sbb
sarl
popa
lret
outsl
movd
enter
cltd
pop
jbe
mov
stos
push
cmpsb
jg
mov
or
jbe
or
xor
testb
ss
adc
sti
xchg
pop
push
inc
repz
push
dec
pop
icebp
test
pop
rcrl
std
push
inc
mov
or
into
outsl
jae
add
dec
push
mov
lods
call
cmpsb
or
push
mov
cmp
mov
repz
jge
sub
add
rorl
and
fldenv
dec
sbb
fimuls
arpl
arpl
dec
decb
repz
jg
pop
cmc
mov
jge
loopne
jecxz
push
xchg
sub
aaa
insl
dec
insb
insb
ret
movsb
mov
dec
mov
ja
sub
cmp
and
push
roll
push
clc
lea
js
mov
cmpsl
xor
jge
outsl
inc
xor
shrl
inc
stc
insl
jge
mov
mov
dec
das
xchg
int
xlat
and
mov
lret
mov
xchg
mov
and
jecxz
adc
sbb
fcoml
lret
dec
lods
shrl
inc
pop
sub
add
push
mov
pop
adc
xchg
imul
nopl
adc
or
jmp
cmc
add
pop
rcrb
jno
sbb
push
pop
popf
fldl
ret
or
loopne
dec
add
in
adc
mov
fucomp
dec
loope
pusha
xchg
jo
vpcmpgtd
mov
out
jne
pusha
xorl
repz
ficoms
push
sarl
pop
jle
cli
pop
test
jbe
dec
cmp
insl
cltd
out
adc
dec
lahf
mov
outsl
cmp
daa
xchg
jp
inc
lods
gs
add
cmp
inc
imul
aaa
cmp
cmp
je
cmp
adc
mov
sarb
dec
dec
xchg
and
mov
repz
sub
cmp
mov
pop
pop
icebp
outsl
mov
jecxz
inc
addr16
shl
lea
jl
and
repnz
loop
leave
rcrb
rolb
movsb
lods
stos
lods
fs
stos
ds
jecxz
xchg
mov
jb
mov
mov
pop
pop
std
nop
jb
pop
mov
loopne
js
push
or
mov
mov
repnz
xchg
push
cmp
lods
jo
aam
mov
arpl
xor
fiadds
mov
mov
and
xchg
lds
mov
lock
sahf
jl
xchg
cld
cwtl
pushf
repnz
out
fmuls
leave
mov
lret
sub
jge
or
xchg
ds
adc
sbb
jl
xor
adc
fsubr
xchg
mov
daa
mov
mov
sbb
pop
test
cmp
push
or
fnstsw
mov
mov
xchg
icebp
pop
dec
addr16
iret
mov
les
ror
xchg
or
xchg
repnz
pop
xor
push
subb
push
pop
dec
repnz
jnp
call
hlt
lahf
jb
push
cmp
imul
mov
and
pop
ljmp
leave
scas
mov
jno
bound
sub
test
addr16
push
pop
test
or
aaa
or
aaa
jne
fistl
aas
sbb
push
insl
lds
shl
rcrb
out
fiaddl
mov
jg
or
fcmovu
mov
or
fadds
xor
push
adc
adcb
jno
pop
xor
or
mov
cwtl
das
int
push
shrb
out
ret
and
cmc
int
pop
lret
jle
out
dec
test
repnz
repz
adc
sahf
cmc
repz
inc
cli
cli
xor
push
ret
jg
mov
pop
add
push
les
cmpsl
inc
pop
add
paddd
fprem
imul
inc
push
fidivs
lds
mov
idivl
fsubrs
and
hlt
lahf
fcomip
shrb
leave
cltd
and
sti
mov
rorl
out
ret
mov
cmp
shrl
rolb
aaa
jmp
cltd
test
mov
adcl
adc
aam
xor
movsb
mov
xchg
adc
dec
pop
or
rolb
push
jg
xchg
and
jns
push
dec
idivb
mov
fidivrl
out
xchg
xor
out
mov
mov
mov
dec
mov
or
mov
adc
filds
inc
ret
addw
out
aad
fistpl
rcl
pop
cmc
adc
inc
cmpsb
nop
and
push
mov
mov
aas
repz
push
mov
adc
inc
hlt
mov
mov
cld
push
pusha
mov
xor
sbb
out
clc
lds
loope
int3
mov
daa
inc
dec
sbb
add
adc
dec
test
push
lock
inc
or
push
popf
fst
aaa
dec
idiv
sbb
insb
xor
pop
int3
dec
cmp
push
dec
mov
fadds
icebp
and
adc
movb
cld
dec
or
add
dec
into
push
dec
lds
inc
mov
out
push
mov
sub
arpl
lahf
add
loopne
lcall
mov
xor
aas
push
sbb
test
pop
imul
or
gs
lahf
or
lods
mov
push
and
dec
movsl
lret
dec
push
cmp
jb
xor
add
xor
rolb
pop
push
daa
fistps
ret
adc
into
in
repz
aam
add
xchg
sar
ss
dec
lret
es
mov
stos
in
pop
jge,pn
cmp
push
sbb
sahf
inc
pop
repz
imul
xor
push
sbb
xor
pop
inc
sar
sbb
cld
movsb
adc
testl
out
fcmovnu
push
mov
addb
std
mov
adc
cld
inc
sbb
lea
in
xchg
pushf
mov
pop
mov
test
adc
insl
pushf
inc
push
pop
pop
jne
ss
xor
lods
test
mov
xchg
xor
adc
hlt
xchg
mul
xchg
jecxz
sub
mov
cmpsb
ja
sub
outsl
insl
pop
and
add
aad
cmp
lret
enter
xchg
push
sub
inc
xchg
pushf
fimull
sbb
mov
out
jo
in
add
inc
mov
inc
xor
push
adc
shl
mov
rorl
sub
lods
lea
adc
xchg
bound
push
jnp
mov
cmp
push
movsb
mov
and
xchg
stos
out
jae
or
sbb
dec
incl
iret
leave
sbb
std
cmp
cmpsb
out
pop
xchg
int
and
sbb
cs
mov
repnz
sbb
xchg
stos
push
pop
mov
mov
mov
pusha
arpl
and
pop
pop
jo
inc
mov
ljmp
cmc
push
cmp
test
jmp
pop
or
repnz
stos
js
pop
cs
adc
mov
mov
imul
mov
aaa
scas
imul
xchg
cmpsl
dec
xchg
push
movl
aad
mov
xchg
ret
in
jns
cmp
hlt
or
add
sub
cmpsb
adcb
stc
or
jg
aas
sub
popa
ficoml
fidivrs
sbb
das
bound
jns
test
xor
push
insb
dec
mov
fisttpl
mov
arpl
inc
clc
es
fmull
aas
cmp
loop
fisttpll
ds
pop
sarb
add
xchg
js
mov
repnz
mov
mov
daa
movsb
xchg
loopne
jge
push
inc
jl
movsl
mov
aaa
xchg
test
scas
fs
sub
and
arpl
rcrb
mov
cmp
jae
ja
pop
and
cmp
sbb
fstl
arpl
jo
imul
push
jne
rcrb
movsb
inc
mov
add
jl
mov
popf
nop
sub
pop
adc
lods
scas
bound
cmp
ret
pop
pop
push
mov
incl
imul
rorb
rcl
mull
adc
pushf
pop
inc
clc
and
dec
add
shlb
mov
cmc
jmp
jp
inc
sub
daa
popa
in
les
mov
adcb
xchg
les
jne
add
inc
sarl
fsubp
xchg
jb
or
sbb
stos
and
pusha
mov
gs
je
frstor
mov
das
cwtl
test
and
cmc
shll
mov
cld
shr
push
jne
inc
mov
test
and
mov
stos
push
push
pop
jns
mov
add
or
daa
sbb
and
aam
mov
outsb
xchg
cmpl
jbe
cli
stos
jno
xchg
popf
in
in
outsl
in
ss
incb
cmp
or
loopne
xor
pop
dec
push
sbb
add
xchg
loopew
jg
xchg
test
and
mov
sub
xchg
push
sarl
cmp
test
mov
das
add
add
mov
adc
mov
ljmp
test
mov
xlat
std
and
lea
stos
bound
out
ljmp
cltd
push
rcrl
movsb
pop
inc
jne
lea
pop
loopne
xchg
push
cmp
push
pop
push
jmp
push
pop
dec
es
inc
inc
push
cmp
xchg
lods
dec
and
and
jae
call
or
repz
jge
jbe
xchg
inc
shr
xlat
fs
imull
or
and
leave
sbb
push
mov
jno
pop
xor
mov
mov
out
aaa
push
shrb
or
sti
push
xchg
cmc
nop
daa
jne
or
test
adc
mov
mov
test
sbb
push
cmp
mov
jnp
or
cmp
cli
pcmpeqw
jg
add
lcall
xchg
fisubs
cld
data16
lds
pop
mov
aam
pop
in
incl
cmp
or
arpl
ljmp
dec
jg
dec
mov
push
cmp
push
pop
gs
push
mov
cmp
fldt
lds
fwait
push
stc
lcall
sub
popa
inc
push
js
xlat
insl
xor
or
cmpsb
fdivp
xor
sbb
das
cmpsl
xor
scas
imul
pop
cltd
pop
in
je
popa
inc
stos
or
mov
jo
jnp
not
sbb
loopne
cmpsl
leave
scas
mov
mov
sarb
or
push
mov
fisubrl
incb
jns
jmp
add
cmpsb
shlb
fsubrs
pushf
mov
loope
movsb
or
out
push
cmp
repnz
jbe
jns
cmp
aas
pop
mov
push
cli
pop
lock
imul
popl
ja
cmp
xor
push
or
maxps
mov
nop
mov
pop
cmp
jnp
in
rclb
jge
xlat
fcoml
test
adc
add
dec
fnstcw
ds
in
leave
jmp
pop
xchg
adc
cld
pop
pop
movsb
cltd
lea
sahf
jns
add
or
xor
add
sbb
aam
pop
cmp
xorb
in
mov
mov
xchg
mov
mov
int3
mov
cmp
aas
mov
sub
ret
sbb
arpl
cmc
call
mov
jbe
mov
mov
adc
aad
add
out
repz
sbb
jne
dec
inc
les
pop
lret
jl
lcall
leave
les
push
adc
pop
pop
rcr
outsl
adc
loop
add
mov
lods
xchg
in
mov
test
or
mov
sti
and
and
fwait
lahf
repnz
mov
mov
outsb
pop
fisttps
pop
in
xor
cli
sbb
mov
jp
ss
icebp
cmpsl
sub
ljmp
mov
mov
or
sub
lcall
out
repnz
cmp
aam
xor
and
sarl
mov
push
addb
mov
sbb
test
xchg
cmpsb
andb
add
data16
nop
lcall
stc
dec
lcall
push
ret
vunpcklps
pop
aaa
data16
repz
mov
pushf
mov
dec
inc
test
iret
xor
dec
je
mov
test
lock
out
sbb
or
inc
mov
ret
test
mov
mov
cli
push
pop
mov
mov
lret
mov
xor
sbb
inc
jb
pusha
xchg
popa
clc
sar
repnz
fsub
and
clc
lret
and
push
push
adc
fs
xchg
mov
rcl
dec
mov
into
add
dec
pushf
inc
pusha
adcb
test
mov
sub
xor
push
dec
push
push
or
lods
arpl
insl
daa
add
pop
jge
cld
jp
xor
lods
sbb
mov
in
in
mov
sub
shll
aaa
fisubrs
and
mov
fisubs
jae
add
jmp
cmp
cmp
stc
repnz
stos
xchg
sti
mov
adc
adc
mov
daa
test
insl
scas
iret
xchg
push
pop
sbb
ret
mov
add
jno
test
popf
ss
add
xor
loopne
mov
mov
fistps
push
mulb
xchg
jns
pop
dec
hlt
inc
xchg
sbb
mov
lods
pop
push
out
ficoml
xchg
lods
mov
sbbl
hlt
mov
xchg
jecxz
mov
adc
jge
mov
dec
push
adc
orl
sbb
pop
enter
loope
in
out
xor
lock
xchg
push
inc
cmp
stc
xor
popf
out
inc
fnstenv
or
mov
jb
xlat
xor
imul
pusha
mov
add
ret
mov
rcl
sbb
sub
arpl
add
ja
cmpsl
ret
dec
icebp
shl
and
mov
int3
push
add
leave
arpl
jo
imul
inc
dec
add
lret
mov
stos
jb
popa
stos
scas
dec
mov
repz
cld
insb
jo
outsl
jno
imul
sub
mov
out
jo
js
je
cmp
js
test
pop
or
xchg
and
xor
xor
inc
jno
cmpsl
fldenv
cld
xor
jnp
or
popa
lock
add
mov
sbb
mov
std
int
or
xchg
pushl
std
into
pop
mov
out
cmpl
jle
pop
jno
popf
fs
push
pop
xor
iret
or
in
aam
sub
mov
stos
test
mov
sub
mov
mov
mov
inc
mov
mov
loopne
clc
fwait
mov
pop
or
push
jp
and
pop
jl
ss
aas
inc
ss
pusha
ficompl
add
mov
andb
xchg
jg
mov
jl
lods
repz
jl
and
fdivrl
pop
hlt
cmp
or
pop
mov
insl
imul
pop
mov
rcrl
mov
out
push
xchg
or
xchg
cmp
imul
dec
sbb
xor
adc
in
sub
add
jg
sub
jae
test
stos
mov
in
or
jns
mov
rcll
mov
aaa
mov
imulb
aaa
mov
push
sbb
jmp
mov
pusha
daa
sar
adc
popf
call
js
loope
xchg
mov
in
sbb
stos
nop
mov
and
mov
push
xchg
inc
add
jg
mov
lret
lods
movsl
inc
in
pop
dec
dec
adc
mov
out
test
mov
sub
mov
push
in
movsb
dec
in
pusha
addl
or
xchg
pop
paddsb
aaa
movsl
cmp
lret
daa
ret
mov
mov
mov
pop
mov
mov
aaa
ret
cwtl
and
pop
push
dec
lret
push
loop
stc
out
imul
out
mov
mov
push
jo
add
lods
mov
mov
add
mov
mov
mov
cmc
add
xlat
fstl
imul
dec
stc
adc
rcr
adc
xchg
inc
loop
push
mov
ret
es
pop
jp
pop
test
mov
arpl
aaa
mov
xor
dec
negb
mov
or
lret
cmp
enter
neg
xchg
ficoms
fwait
sub
push
mov
pop
sarl
mov
int3
jmp
cmpsb
cltd
mov
gs
lods
xor
sbb
mov
insl
jns
jg
fimull
mov
dec
ret
mov
sub
dec
mov
imulb
loope
pop
gs
inc
or
add
jo
fdivrl
ljmp
add
jae
cmp
dec
lcall
outsl
dec
adc
xchg
ret
mov
adc
pop
pop
hlt
push
mov
xor
dec
test
pop
xchg
pop
adc
leave
fisttpll
sbb
xchg
js
push
and
stos
lods
aam
enter
and
testl
aam
pop
leave
inc
out
icebp
idiv
sbb
mov
adc
and
push
shrl
push
jbe
jmp
mov
stos
icebp
pop
dec
xchg
add
sbb
mov
pop
ret
je
outsl
add
push
xchg
add
mov
sub
cli
push
nop
jle
bound
outsl
nop
jo
iret
not
aam
js
notl
sbbl
clc
add
out
lock
rol
mov
shll
stos
jmp
adc
jl
icebp
adc
add
mov
or
pushf
fcomps
jae
fwait
cwtl
aas
cmp
pushf
cmc
leave
jnp
das
push
add
test
push
adc
mov
stos
and
cmp
insb
add
imul
jo
mov
cmp
int3
stc
sub
dec
cmp
ffree
pop
mov
jb
sahf
lcall
xchg
mov
cmp
std
dec
xchg
pop
push
xchg
lea
sahf
iret
xor
lcall
adc
cmp
xchg
movsl
xchg
and
lock
notl
les
out
jle
pop
fdiv
lahf
xchg
mov
nop
outsl
dec
pop
iret
lahf
int
mov
inc
std
sub
xor
adc
xchg
fsubrl
ljmp
lcall
xchg
or
add
testb
inc
lods
stos
mov
in
clc
testb
dec
jp
add
aaa
dec
mov
push
fiadds
push
clc
add
insb
push
inc
mov
mov
faddl
mov
sbb
inc
ror
mov
and
jne
and
add
or
dec
int
lock
cmc
js
or
ss
sbb
fidivs
cmp
adc
mov
add
dec
pop
loope
mov
decb
adc
sarl
aaa
sbb
das
insb
data16
fistpl
ja
xor
push
cld
xor
mov
aam
mov
cltd
or
gs
lcall
push
fldl
cmp
and
or
int3
push
daa
or
shlb
sub
jb
pop
insl
inc
mov
std
adc
test
lret
xchg
mov
ret
mov
mov
imul
scas
sahf
adc
sbb
and
inc
out
testb
outsl
xchg
xor
lods
inc
inc
xchg
cmc
cmpsb
das
fs
xchg
aas
in
sbb
inc
loopne
jb
or
pop
sub
cmp
xchg
icebp
movsb
xor
mov
aam
adc
inc
xor
cwtl
and
insl
call
aaa
orb
dec
xor
fwait
cmpb
test
loopne
rorb
test
rcr
adcl
xor
pop
jl
jg
lahf
jge
ds
jle
repnz
jge
add
loop
cmpsl
call
mov
xchg
push
clc
outsl
mov
xchg
inc
inc
shr
push
jp
cmpsb
adc
dec
sub
daa
clc
xor
add
shll
pop
aam
pop
out
rorl
rorl
ret
cmp
andb
dec
sar
inc
aam
leave
js
mov
clc
subb
lret
into
jge
clc
scas
lock
xchg
lret
lods
cmp
addr16
mov
xor
dec
mov
adc
lret
aad
in
in
es
add
mov
ja
xchg
lea
inc
imul
xchg
in
sub
js
icebp
mov
mov
mov
gs
fs
das
stos
aam
imul
imul
sub
dec
repz
adcb
xchg
jbe
mov
cmpsl
add
pop
adc
mov
aaa
mov
jmp
cmp
andl
jg
inc
or
cltd
lret
aad
int3
rcrb
pusha
inc
adc
int
out
mov
xor
dec
mov
mov
add
es
popa
les
xchg
aas
push
pop
xchg
stos
mov
inc
loopne
rorl
pop
mov
fdivs
sbb
cmp
iret
fwait
rcll
fisttps
pop
repnz
inc
push
push
xchg
sub
cld
in
mov
es
scas
jp
mov
xchg
mov
and
stos
and
jp
cmp
mov
je
adc
jno
jae
sbb
and
or
sbb
mov
add
rolb
pop
add
jo
inc
fnsetpm(287
arpl
repnz
test
dec
fildll
inc
mov
sbb
push
outsb
cmp
sub
inc
nop
mov
pusha
mov
divl
xorl
pop
pop
mov
mov
mov
daa
movsb
jo,pt
int3
adc
cmp
ret
dec
mov
sub
iret
push
arpl
adc
push
push
clc
jno,pn
stos
lea
xor
dec
xchg
shlb
jg
xlat
mov
jp
ret
ds
push
cmp
and
std
fcmovne
lret
adc
add
inc
cmp
clc
and
sub
sahf
mov
sbb
sbb
adc
xor
and
or
and
ror
push
outsb
es
inc
clc
mov
xchg
jnp
adcb
sbbb
inc
fdivl
jmp
jle
sub
insl
sub
cmp
std
sub
js
dec
add
push
in
test
inc
xchg
xchg
mov
pop
lods
repz
cmp
in
jle
cmp
adcb
cmp
iret
into
cmp
out
pop
mov
jg
out
pop
jmp
xchg
out
and
cmp
sbb
or
fdecstp
loopne
inc
out
or
add
xchg
ds
cmp
iret
sub
xchg
pop
xchg
ds
pop
adc
or
into
loop
sub
xchg
pop
insb
sub
jle
test
add
jecxz
pop
fwait
jge
push
add
and
stc
gs
jae
xchg
enter
adcb
or
push
inc
xor
inc
sub
fimull
mov
mov
dec
or
ds
inc
cmp
pop
mov
cmp
sbb
outsl
adc
insl
not
sbb
popa
inc
aad
addr16
jb
mov
pop
adcb
cmp
xor
and
mov
pop
adc
mov
ss
je
repnz
aad
push
leave
cs
popf
lret
imul
ret
test
es
or
pop
mov
insb
inc
imul
adc
and
jl
pop
aam
pop
test
xchg
fldl
jo
fbld
push
xor
add
cmp
stos
xchg
sahf
mov
and
xchg
xchg
adc
stc
mov
nop
leave
xchg
test
test
adc
test
mov
mov
jp
jl
in
pop
inc
xchg
flds
std
loope
and
push
lds
bound
and
das
pop
pop
ljmp
bound
addl
stos
fnstsw
jp
adc
je
lds
outsb
and
add
adc
xchg
mov
imul
adc
inc
ds
add
pop
jb
add
sahf
and
mov
push
mov
push
pop
lret
shl
xchg
popf
pop
dec
stc
out
out
add
and
ret
and
lcall
pop
xor
dec
fwait
xchg
mov
jnp
pop
xchg
insl
pop
imul
inc
or
xchg
sti
mov
jo
cltd
data16
jp
mov
shlb
push
sbb
sub
xor
das
and
add
jp
cmc
mov
mov
jns
inc
sub
jno
inc
je
movsb
sbb
lret
std
or
dec
in
pop
mov
and
sub
ljmp
lock
cs
mov
xlat
rolb
push
xlat
add
lahf
pop
int3
test
mov
mov
fidivrl
sub
dec
xlat
dec
pop
add
jg
shlb
and
mov
nop
mov
test
pop
add
cmp
sbb
loop
mov
test
sub
loopne
dec
stos
pop
test
mov
xchg
rcrb
lcall
xor
cld
mov
xchg
jno
sahf
je
add
test
ljmp
adcl
bound
jmp
push
xchg
inc
outsl
imul
fstpl
pushf
sbb
cmp
mov
mov
push
test
push
cs
addl
mov
cld
pop
cmp
fisubl
out
dec
popa
popa
jecxz
add
andl
fdivrl
fsubl
mov
repz
out
test
loope
mov
bound
jnp
ljmp
pop
les
in
inc
add
pop
dec
cmp
mov
dec
dec
stos
dec
jns
push
inc
in
sub
xorb
loope
sub
mov
cmpb
sti
add
jp
into
addl
mov
ds
xchg
push
fld
out
int
and
lret
pop
addl
mov
cmpsw
sbb
rorb
jno
mov
sub
mov
mov
mov
ret
sbb
mov
xchg
push
movsl
popa
aas
mov
mov
mov
adc
inc
mov
and
jg
inc
popf
aad
outsb
mul
xchg
pop
and
lds
sahf
dec
jb
jnp
je
je
loopne
hlt
inc
daa
and
les
jle
fnsave
mov
stos
shrb
jns
xchg
jge
push
sub
test
outsb
jmp
add
out
sub
adc
xor
int
leave
cltd
in
push
mov
inc
sub
fisubrs
push
fwait
xchg
cmp
push
iret
aas
shl
xor
and
xor
dec
into
out
dec
sub
jmp
jmp
pop
stc
push
shlb
sbb
xor
data16
xor
icebp
xchg
mov
and
xchg
push
xor
pop
iret
fstp
xchg
test
ficompl
mov
mov
and
fiadds
pushf
loop
out
sub
stos
push
sub
fcoml
ret
jnp
shlb
mov
xor
in
daa
out
rorl
inc
dec
loop
fcmovu
cmpsb
cwtl
fistps
iret
mov
lock
cmp
mov
push
shll
adc
sbb
pop
sbb
outsl
cmp
sarb
call
jp
adc
fstl
mov
or
lock
int
iret
mul
in
ja
jbe
dec
and
or
sbb
popf
data16
xchg
fmul
jbe
jmp
sub
cmp
rcrb
jbe
pusha
push
loop
arpl
bound
std
cmc
pop
mov
xchg
ja
ret
inc
mov
scas
cwtl
xlat
js
stc
add
movsl
sub
aas
repnz
jns
stos
or
push
divl
mov
daa
inc
pushf
xchg
mov
push
mov
mov
sbb
int
int3
mov
lret
push
mov
jnp
push
xchg
jb
and
mulb
sbb
jle
dec
mov
das
cs
aad
mov
lea
lahf
jns
andb
scas
push
inc
repz
push
movl
or
in
push
rorl
dec
daa
fcoml
rcr
loope
gs
shll
hlt
sub
sub
into
lds
push
in
sti
cmp
mov
jp
das
data16
sub
jge
xchg
xchg
sub
and
into
cmp
mov
lahf
loopne
les
mov
jge
and
xor
data16
sbb
imul
pop
sub
inc
lret
fidivrs
inc
xchg
js
jbe
addl
std
fnsave
sub
lods
adc
je
pop
lea
int
or
pop
pop
sbb
dec
in
jecxz
cmp
clc
stc
push
push
mov
in
push
xchg
and
push
shr
sub
inc
mov
mov
shlb
cmp
sbb
aam
mov
ret
xchg
loopne
mov
out
fwait
add
xor
mov
jae
cmpsl
adc
jbe
sub
sub
ja
sar
loop
pop
xchg
push
or
mov
fcomps
cwtl
ret
dec
jo
adc
mov
mov
fisubrs
sub
fwait
rorl
pushl
dec
jmp
outsb
xor
bound
sahf
adc
ljmp
lret
pop
xchg
pop
ja
in
jnp,pn
jae
mov
cwtl
xor
mov
push
enter
fmull
iret
fildl
arpl
pop
mov
lahf
bound
lret
and
mov
jns
add
mov
sub
xchg
ljmp
lods
repnz
dec
mov
inc
out
push
push
cmp
int
addr16
arpl
mov
cmpsl
push
sbb
imulb
jnp
pop
loope
cmp
jecxz
popf
push
jo
lret
je
outsl
pop
mov
cmpl
push
push
aad
jb
je
lds
sub
jnp
data16
fdivr
pop
loopne
inc
movsb
jle
hlt
ret
jmp
mov
sub
jb
and
inc
repz
icebp
lods
mov
pop
and
add
call
adcl
pusha
outsl
sbb
jo
or
jns
movsb
ret
lahf
stos
fsubrl
mov
xor
and
cmp
aam
aaa
aam
mov
adc
inc
imul
out
mov
push
sarl
jg
les
lahf
jle
repz
sub
clc
push
hlt
push
and
out
xor
call
loop
mov
lea
mov
cwtl
stos
adc
adc
pushf
sub
or
and
aas
test
jge
test
inc
sub
sub
cmpb
cli
aam
rorb
aas
inc
data16
push
xchg
jno
jo
inc
pushl
imul
loopne
jbe
xor
pop
pop
mov
dec
fisttps
testb
clc
in
pop
push
fsubr
adc
sbb
scas
xchg
mov
push
inc
loop
stos
mov
lcall
loop
mov
push
mov
addr16
aam
loope
or
int3
lret
sbb
push
pop
mov
mov
inc
ss
in
lods
add
jb
add
fdivrs
pusha
adc
mov
ret
gs
movsl
loopne
mov
sbb
push
xor
leave
sbb
xor
pusha
push
and
mov
jne
xor
in
mov
jo
xor
dec
outsb
sbb
aas
mov
adc
cmp
xchg
sub
push
and
in
leave
jbe
loop
push
insb
adc
hlt
adc
pop
jo
das
hlt
clc
and
xor
ret
sbb
cli
xchg
jno
scas
or
mov
jne
subb
arpl
outsl
lods
inc
pop
sahf
int3
lock
adc
js
in
pop
enter
imul
loop
hlt
call
imul
fistl
sbb
insl
nop
lret
in
adc
sbb
or
pusha
pop
test
xor
movsl
jb
pop
dec
push
mov
pop
mov
dec
and
inc
pop
scas
cmpsb
cmpsl
jecxz
into
pop
dec
nop
jg
imul
fiadds
or
ljmp
push
add
test
scas
adc
xchg
lret
pop
lea
fstl
call
xchg
pop
sub
sub
mov
ret
aad
popa
push
jns
pusha
jecxz
add
je
mov
ret
lahf
or
mov
pop
mov
mov
test
jl
xor
mov
outsl
addr16
fidivs
sub
clc
push
lahf
aad
fistpl
cli
lret
arpl
in
jne
mov
push
ret
sub
dec
dec
stos
mov
cmp
jge
mov
mov
outsb
fisttps
push
sub
cmpsl
cmp
adc
push
cwtl
outsl
inc
sarb
adc
pop
inc
and
mov
jnp
das
fimuls
rcrl
xor
pop
lods
in
push
addb
imul
inc
mov
jmp
dec
mov
adcb
aam
jecxz
push
adcl
test
aas
ss
pop
iret
movsb
dec
andps
nop
mov
rorb
adc
xor
xchg
mov
adc
add
xor
rcl
adc
mov
test
lahf
test
cs
sbb
push
pop
jae
adc
data16
mov
lret
push
das
ret
mov
arpl
mov
dec
aas
orb
stc
decl
jo
dec
aam
cmp
push
and
sbbb
stc
and
cmp
inc
repz
subb
fdivs
les
std
arpl
push
sub
out
xchg
data16
mov
or
jnp
repz
xor
sub
outsl
adc
fisttpll
insb
lahf
inc
cmpsb
in
inc
mov
inc
testb
pop
imul
je
xchg
pop
mov
pop
mov
lds
int3
sti
aas
loopne
rcrl
sbb
mov
or
mov
dec
mov
sbb
lret
sub
pop
pop
cmp
subb
xor
insb
dec
stos
pop
or
mov
subb
cmp
mov
push
push
cli
and
rcll
jmp
xchg
nop
xchg
pop
lods
jle
stos
jl
or
movsl
orl
or
and
sub
jae
or
sbb
adc
push
cmp
mov
add
lahf
fbstp
aad
addr16
cld
leave
jbe
stc
sub
mov
or
arpl
fcomip
and
xor
sbb
jmp
ja
nop
mov
imul
push
ds
incb
push
pop
sti
inc
lret
cmc
push
add
inc
out
clc
add
jge
inc
test
dec
sub
pop
fstps
dec
shlb
fcmovb
repnz
adc
xchg
in
aas
pop
std
arpl
cmp
inc
cli
xchg
test
in
test
lock
ja
and
mov
in
mov
test
or
mov
push
fisubrl
ds
sub
mov
ss
leave
dec
cmpb
dec
imul
add
mov
jge
push
cmp
pop
out
or
xchg
jl
xchg
push
mov
sbb
in
loope
data16
mov
adc
stc
fcoml
lahf
sub
adc
mov
xchg
daa
scas
dec
scas
adc
aam
fsubs
jge
mov
ljmp
insb
imull
xchg
mov
inc
add
fisttpll
cmp
cmp
sbb
jge
std
daa
ljmp
pop
js
ja
popa
sub
cwtl
sub
jne
or
loopne
aad
div
cwtl
sbb
test
pop
or
cwtl
outsl
int
add
adc
xchg
add
mov
nop
push
and
jecxz
xchg
test
mov
inc
mov
pusha
dec
add
dec
rclb
lret
jle
data16
dec
xor
xor
add
sbb
test
push
mov
mov
push
mov
ljmp
xchg
mov
inc
cltd
out
push
popa
cwtl
xchg
push
or
in
test
scas
pop
xor
mov
cmp
stos
pop
inc
sahf
adc
test
xchg
leave
mov
aas
pop
mov
pop
dec
and
jae
jne
les
lret
fdivl
sub
mov
inc
or
stos
sbb
sbb
jae
xor
sbb
jbe
mov
aam
xor
movsb
loopne
adc
icebp
and
test
xchg
out
jnp
inc
inc
lods
mov
cmp
in
mov
mov
sti
push
call
testb
cmp
jo
stos
test
hlt
fsub
dec
inc
pop
daa
rcpps
imul
stos
adcl
fcomps
dec
lret
lods
cmp
mov
mov
lods
sbb
dec
xor
repz
mov
or
cmp
fldcw
mov
arpl
adc
fimuls
adc
out
inc
rorl
sahf
les
mov
xor
int3
pop
daa
lret
imul
mov
xor
jle
cmp
cwtl
verr
jmp
inc
std
stc
jecxz
ja
xchg
insb
jle
push
and
shlb
lock
jno
xor
jbe
das
fsubrl
mov
lock
mov
int3
rolb
sbb
repnz
inc
std
in
and
mov
jp
pop
in
xchg
lret
fdivl
sbb
shl
test
pop
cmpsl
push
call
mov
add
jnp
dec
lcall
push
test
pop
cwtl
sbb
mov
jns
sbb
adc
mov
or
mov
adc
repz
repnz
iret
pop
push
test
jnp
rcrl
pop
jb
pusha
in
sub
mov
andl
popf
and
popf
fstl
sti
sbb
ret
insl
or
or
jno
lods
mov
push
jl
push
int
test
popa
xor
mov
cmp
rorb
pop
push
popa
push
dec
xchg
pop
repnz
popf
int3
int
sub
and
xlat
div
pop
push
fisubs
xchg
inc
pop
lea
int
popf
inc
sub
int
repz
scas
popf
or
ja
push
test
cmp
jae
out
jge
push
aad
mov
data16
stc
jecxz
cmp
out
add
lds
add
xor
pop
adc
test
dec
xchg
popa
pusha
jg
outsl
xlat
out
clc
call
lret
int3
mov
pop
sbb
ds
out
int
fildll
or
sub
pop
fldenv
sub
jge
push
outsb
jecxz
jp
jge
dec
and
lcall
lods
in
xchg
xchg
fldenv
mov
and
imul
mov
dec
aam
mov
sbb
and
out
jb
inc
sub
dec
les
xchg
pop
pop
cmpsb
jbe,pt
jge
mov
shrb
add
aaa
scas
test
pop
lea
test
and
pushf
xor
push
mov
outsl
jle
inc
push
lock
mov
mov
dec
mov
test
loope
jle
lock
mov
bound
pop
and
movsl
xor
cmpsb
mov
xorl
sbb
xchg
cmp
loop
orl
mov
faddp
fdivrp
cltd
xchg
xchg
push
cld
push
loopne
or
cmpsl
daa
jmp
xchg
sub
ljmp
ja
arpl
fisttps
mov
push
jo
jmp
mov
or
mov
sbb
out
pop
mov
xchg
and
add
and
mov
mov
pusha
cmp
sub
fdivs
mov
add
stc
ljmp
insl
fcomi
pop
int
xorl
xor
jg
mov
imul
mov
inc
repnz
leave
aas
scas
sbb
fisttpl
movsb
mov
mov
push
xor
testl
jb
inc
in
js
gs
xchg
mov
js
sti
popf
jns
adc
jle
pop
pop
xor
push
pusha
mov
test
jmp
and
outsl
cmp
shlb
sbb
dec
mov
mov
test
or
xor
leave
xchg
and
fldenv
pop
shl
sbb
pop
mov
cmp
pop
sti
int
loop
push
cltd
mov
lret
test
jecxz
xor
lret
imul
and
mov
adc
or
mov
cwtl
orb
sbb
dec
pushf
shr
push
mov
shrl
xchg
int3
jns
and
sub
cmc
mov
jl
nop
jbe
fldenv
mov
jne
cmc
dec
cwtl
xor
inc
inc
lret
jo
in
cmp
clc
sbb
lods
mov
cld
jmp
mov
mov
shlb
mov
xor
dec
aaa
loope
test
push
and
and
shlb
sti
mov
loope
xchg
ret
jp
and
and
sub
push
das
cmp
lods
cmc
sub
pop
sbb
movsl
sbb
imul
mov
mov
and
sbb
aas
lcall
xchg
js
pop
adc
sbb
mov
cmp
call
sub
shrl
cmp
lcall
sarl
cmp
cmp
pop
pushf
loop
das
repz
add
adc
repz
sbb
mov
mov
mov
call
mov
dec
add
lock
sahf
xor
cmp
int
in
mov
decb
mov
mov
pop
test
mov
push
sub
xchg
push
mov
sub
xor
unpcklps
aaa
pop
ljmp
loop
lret
movsl
dec
test
fs
scas
out
fcmovbe
push
inc
addr16
mov
outsb
arpl
xchg
cmc
fisubs
push
clc
test
je
cld
in
movb
dec
mov
add
sub
hlt
cmp
inc
xchg
out
lcall
cmpsb
out
jb
mov
movsl
rcrl
pushf
add
xor
jo
or
imul
cltd
adcl
loope
jmp
lret
adc
fsub
out
or
inc
pop
jle
add
mov
lds
lcall
cmpsl
loopne
cmc
jmp
push
xchg
push
pushf
mov
add
mov
in
stc
inc
or
addr16
cwtl
fimull
cpuid
mov
pop
jb
mov
movsb
mov
inc
js
test
mov
dec
sti
fistps
test
scas
push
pop
mov
je
sub
adc
fadds
fstpl
cmp
and
leave
push
les
shl
pop
aaa
aad
pusha
stos
fsubl
jmp
jne
jbe
push
ficomps
out
mov
js
dec
lds
mov
neg
cs
add
call
movsb
xchg
mov
sub
cwtl
adc
pop
pop
pop
xor
in
mov
je
shll
mov
xchg
iret
adc
cmp
icebp
lcall
dec
mov
lea
push
pushf
into
cmpsl
cld
jmp
lock
push
cmc
or
or
ret
jg
fcmove
sbb
jp
lods
mov
ds
mov
out
sbb
je
hlt
fs
insb
movsl
jno
cmc
mov
std
shll
fisttps
rol
add
add
addr16
inc
lods
xchg
rcll
aam
push
jg
pop
pop
add
lahf
movsl
fisttpl
jecxz
xchg
mov
jmp
lock
ljmp
mov
stos
rorl
pop
popf
lahf
mov
testl
mov
iret
adc
and
lods
imul
sub
push
pusha
xor
das
xchg
shl
and
and
add
mov
lret
sub
xchg
adc
xchg
push
adc
add
shll
lock
dec
lcall
lahf
mov
test
ss
data16
fcoms
lahf
iret
faddl
rcrl
xchg
push
inc
push
popl
fimull
dec
call
imul
lcall
mov
stc
pop
cwtl
pop
adc
jle
cli
out
mov
aam
adc
mov
fs
in
mov
mov
pop
aas
outsb
cmc
jecxz
pusha
mov
hlt
inc
cli
jno
xor
lahf
cs
stc
shr
popf
rcrl
loop
pusha
fimuls
mov
pop
or
mov
dec
cltd
xchg
inc
jle
sub
sub
jge
push
lds
push
shlb
mov
xchg
in
int3
cmp
mov
mov
adc
add
push
lret
jne
mov
jmp
nop
adc
repz
push
inc
das
fs
sub
mulb
test
out
or
mov
mov
fadds
add
fwait
pop
out
stos
and
cs
mov
lods
xchg
add
shll
mov
insl
pusha
mov
ja
jnp
pop
xchg
hlt
jb
push
lret
add
sahf
jo
xor
aaa
xchg
dec
or
pushl
dec
fildll
sbb
inc
xor
cmp
inc
jp
push
aas
sub
mov
sub
mov
pop
icebp
je
sbb
dec
adc
mov
jecxz
adc
xchg
sbb
negb
sbb
mov
xor
ret
popf
jl
inc
pop
adc
sub
js
mov
jp
and
mov
dec
sarl
lea
stc
or
int
xchg
in
mov
mov
push
mov
or
adc
dec
stc
lock
mov
mov
lock
clc
mov
mov
sbb
scas
sbb
mov
add
add
adc
mov
inc
ljmp
cli
or
mov
sar
fsubrs
ficompl
rclb
pop
inc
mov
or
sbb
mov
andb
adc
xor
inc
push
xchg
jno
sbb
rcr
sub
sti
out
jg
jno
xchg
xchg
call
dec
sub
mov
adc
cli
cmp
push
and
int
jmp
jmp
sub
mov
mov
lea
popf
jo
xchg
or
fwait
cmc
rclb
mov
pushf
int
pop
stc
nop
cwtd
out
jmp
ret
or
ret
movsl
mov
and
mov
stos
sub
roll
pop
rcrl
rorb
sbb
mov
int
in
cmp
add
mov
js
cli
add
or
mov
xchg
rclb
lods
movsl
and
nop
inc
rclb
add
dec
pop
lret
or
shrb
pusha
ficomps
iret
aam
ja
sbb
mov
arpl
xchg
outsb
xchg
push
cs
js
mov
dec
int3
gs
loope
loopne
loop
add
xchg
pop
or
js
mov
call
les
xor
jne
sbb
arpl
adc
mov
or
ja,pt
push
popf
repnz
push
sub
icebp
push
popf
jbe
loope
add
add
mov
xchg
ljmp
test
sub
ficoml
cmp
push
xor
jge
xor
loope
cmpsb
inc
and
or
add
jno
jae
hlt
fadds
pop
pop
dec
scas
jg
movsb
and
xchg
jmp
pop
test
ss
stc
addr16
insl
cli
test
fcomps
push
lds
pop
cmc
repnz
jmp
adc
leave
dec
call
ret
nop
cmp
adc
enter
out
push
test
or
insl
fistl
pop
jg
addr16
lods
lret
imul
jb
in
mov
cmp
inc
sbb
mov
testb
lcall
and
testl
arpl
mov
push
sub
stos
and
mov
jbe
cltd
daa
into
mov
dec
gs
shlb
outsb
int3
insl
call
jmp
ret
rcrb
flds
pop
mov
cmc
ret
adc
cltd
and
xor
fs
cli
xor
aad
gs
fucom
outsl
and
dec
adcl
pusha
stc
gs
and
sbb
jno
add
mov
xchg
add
pop
cmp
mov
or
out
sub
sub
add
lods
gs
add
jmp
dec
movsb
stos
inc
add
mov
xor
pcmpeqd
jnp
fldt
jnp
fwait
das
imul
shr
pop
mov
repz
ja
mov
or
mov
mov
fcoms
or
in
sub
jmp
jecxz
or
add
popf
shl
or
pop
or
push
dec
sbb
pop
clc
xchg
sbb
ja
mov
insl
xchg
mov
jns
test
test
jns
ret
std
mov
jmp
cli
lahf
test
or
xor
jle
pop
xor
gs
ljmp
popa
mov
pop
pop
or
test
mulps
or
gs
nop
fcom
loope
and
jg
lods
pushf
adc
testl
mov
jne
fstp
xor
je
out
loopne
lcall
mov
mov
xchg
cltd
jecxz
std
je
xchg
push
pop
add
fs
stos
xchg
repz
mov
iret
pop
cld
and
lea
sbb
or
push
addr16
push
clc
or
scas
mov
pop
lea
jns
iret
jecxz
or
push
push
loope
mov
mov
inc
cmp
aaa
fsubr
jmp
mov
stos
daa
dec
or
adc
mov
xchg
fadd
ret
aas
int
cmp
ret
in
loope
das
out
dec
cmp
jge
ljmp
jbe
jo
sub
or
pop
test
or
insl
clc
arpl
ja
sbb
and
fbstp
push
sub
sbb
lret
movsb
dec
fildll
sarb
cmpsb
add
pop
adc
loope
cwtl
scas
sub
jnp
call
mov
or
popf
hlt
pop
cwtl
outsl
nop
pop
repnz
sub
call
ret
xor
cmp
adc
sbbl
sub
dec
push
in
out
aas
out
lea
jbe
popa
push
push
adcb
in
fisubs
add
scas
mov
fstps
sbb
or
pop
sbb
push
pop
jo
mov
arpl
or
pop
stc
enter
sbb
scas
enter
sahf
stc
sbb
mov
imul
lcall
andl
xchg
loopne
lahf
gs
ja
cmp
dec
test
outsb
inc
jg
mov
pusha
inc
adc
sub
fs
nop
xchg
jmp
xlat
aam
mov
js
xchg
pop
xor
jbe
test
push
mov
jmp
lods
push
push
pop
rclb
and
sbb
pop
push
into
js
dec
orb
add
jecxz
mov
cmp
cmp
push
in
and
ljmp
test
jp
push
lahf
cmp
xor
lods
jp
cli
sbb
jmp
sub
adc
lret
pop
js
add
cmp
sarl
xor
mov
push
pop
sub
fnsave
dec
push
mov
cli
mov
loopne
test
xor
hlt
cmc
inc
xchg
cmp
cwtl
mov
lahf
aas
inc
dec
ret
ffree
in
mov
mov
daa
mov
sti
sti
int3
push
xor
pushf
or
push
inc
pop
pop
jno
and
xchg
mov
dec
cmp
mov
andb
xchg
into
push
jge
fs
pop
xchg
aam
mov
in
jne
xor
inc
les
imul
movsl
mov
icebp
jmp
iret
sbb
sub
pop
mov
inc
pop
and
push
sub
mov
adc
or
xchg
lret
xor
lods
dec
rcll
pxor
aas
mov
in
sub
inc
sbb
lds
dec
in
inc
cmc
cmp
mov
add
lret
pop
pop
xor
shll
mov
stc
test
aas
lock
push
mov
or
jl
popf
inc
adc
cltd
and
mov
in
sbb
je
sbb
repnz
inc
int3
loop
and
js
aam
mov
pop
fisubl
nop
decl
jp
cld
int
cwtl
cwtl
lret
sbb
rolb
inc
sahf
ret
xchg
scas
adc
fnstsw
lock
push
js,pn
add
lcall
outsl
ja
stos
enter
lock
hlt
push
mov
cmpsb
mov
inc
sbb
push
lahf
fnstcw
in
pop
cld
mov
je
mov
or
mov
popa
scas
ret
ljmp
push
jle
movsb
xor
push
xor
jmp
decb
lret
cli
pop
mov
dec
add
inc
sbb
cmp
mov
sub
incb
mov
mov
es
call
ss
lods
mov
xorb
cwtl
mov
je
addr16
cmpsb
cwtl
inc
adc
mov
iret
mov
push
pop
repz
cmp
push
cmpb
pop
push
sbb
mov
mov
xchg
dec
ret
std
fs
push
divl
in
push
push
push
xor
mov
inc
jno
lcall
mov
push
ret
clc
sahf
mov
inc
ss
xchg
mov
adc
mov
fldenv
push
fisubs
lods
jge
sbb
sbb
out
dec
lahf
mov
mov
sahf
inc
inc
push
test
pop
adc
and
lea
les
pop
movsb
add
sbb
xchg
sbb
jl
movsl
ret
dec
pop
int
cmpsb
cmpsb
in
and
add
xchg
in
mov
inc
adc
or
loopne
stc
idivl
loope
mov
cmc
xlat
mov
adc
test
push
adc
jp
daa
inc
shlb
clc
add
jl
and
or
cmp
shll
loope
mov
mov
cmp
and
mov
les
das
movsb
push
mov
pop
cmp
scas
loop
bound
aaa
push
int3
mov
push
push
aam
xchg
mov
sbb
mov
sub
xchg
gs
scas
andl
nop
arpl
incl
ss
mov
aas
dec
lds
adc
jb
pop
xchg
add
in
add
in
mov
cltd
sbbb
jo
pusha
movsl
addr16
adc
mov
mov
stc
mov
xor
lret
mov
push
mov
add
sbb
push
push
lock
mov
and
jmp
pop
xchg
in
and
or
pop
insl
sbb
fwait
push
pop
mov
mov
xor
sub
sub
mul
mov
mov
sbb
lock
jb
les
fisttpl
mov
pop
decb
loope
insl
icebp
repz
pop
rolb
fisubl
cld
lahf
mov
mov
sub
pusha
jmp
rol
mov
push
lcall
aaa
addr16
lahf
shlb
mov
dec
jne
dec
sub
xchg
scas
inc
lods
pop
xor
loope
mov
pop
stos
arpl
dec
jge
mov
das
pop
inc
xchg
inc
fwait
repz
xchg
xchg
inc
xor
and
mov
xor
or
data16
cmp
lahf
lods
lock
jge
ret
out
xchg
or
add
add
add
shlb
popa
push
fadds
mov
push
fidivrl
jmp
lock
cs
xchg
inc
lret
jp
dec
add
jmp
pop
mov
mov
and
sbb
iret
pop
sbb
jbe
pop
push
add
ret
pop
jb
pusha
xchg
pop
adc
movsb
push
movsl
clc
rclb
cmp
mov
shlb
xor
bound
and
push
adcb
or
pop
jmp
dec
jmp
scas
dec
add
pusha
call
rcll
jns
cmp
or
aam
xchg
mov
inc
cwtl
cmp
dec
xor
and
sbb
sbb
enter
cmp
push
les
ficoms
shrb
fcompl
sbb
mov
pop
and
test
ljmp
jl
push
daa
inc
xchg
movsl
shll
xchg
jle
jne
dec
cltd
cmp
in
jmp
cmp
mov
ss
mov
ljmp
inc
mov
mov
adc
xchg
pop
jnp
out
mov
cmp
std
hlt
decl
mov
outsb
imul
adc
movsl
and
scas
or
leave
pop
cmp
sub
je
fadd
xor
imul
push
xchg
adc
out
sub
mov
and
insb
jmp
out
jle
out
loope
mov
je
jmp
inc
cwtl
jl
dec
dec
xor
jo
test
and
sub
xor
gs
movl
jbe
sbb
mov
cltd
push
mov
and
data16
in
and
shlb
leave
xlat
xchg
mov
lods
pop
bswap
fwait
out
dec
jge
lods
xor
jo
push
cmp
clc
cld
sbb
cwtl
insl
adc
add
inc
mov
sbb
inc
iret
insl
jno
aam
sbb
sbb
lods
jne
xchg
sub
outsl
and
leave
pop
jae
and
stos
fwait
cmpsl
ret
les
mov
rclb
fsubl
fcmovb
and
lret
cwtl
setnp
aas
clc
sub
jns
adc
or
xchg
pop
sbb
stos
push
das
pop
addr16
popa
out
scas
daa
out
inc
cwtl
ja
cld
in
leave
roll
stos
inc
out
sub
shrb
jp
clc
xor
imul
dec
xlat
or
adc
out
pusha
xor
xchg
pop
push
out
push
andb
dec
data16
dec
fadds
mov
pop
mov
out
inc
push
mulb
adc
xor
fdiv
push
out
ffreep
xchg
inc
nopl
mov
sub
push
pop
movsb
jbe
and
push
jge
push
push
sti
adc
mov
mov
sub
inc
xchg
and
std
fistpl
and
inc
adc
mov
sub
jo
xor
stos
pop
jecxz
dec
fs
cwtl
mov
cmp
outsl
aad
mov
cmp
xchg
mov
enter
push
cs
adc
cmp
clc
jge
mov
jg
stos
dec
arpl
ja
sub
mov
push
ret
add
adc
arpl
or
enter
adc
xchg
mov
and
js
outsb
aas
imul
dec
pcmpeqw
scas
iret
dec
mov
test
sub
popfw
or
lods
aam
rcrl
sahf
mov
add
mov
andl
popf
pop
clc
jl
xchg
lcall
out
movsb
dec
sbb
ss
test
fs
stos
data16
jae
add
stc
lods
mov
bt
dec
in
pop
hlt
push
leave
fdivl
or
dec
sbb
incl
pop
inc
aaa
xor
cwtl
push
repnz
mov
push
xchg
test
push
insl
push
inc
mov
aas
stos
outsl
push
mov
in
pop
stos
inc
cli
into
mov
bnd
test
test
xchg
push
jmp
out
rorb
testl
mov
jae
mov
pusha
jnp
and
aas
js
sbb
xorb
call
jle
insl
pop
dec
sbb
iret
lock
pop
data16
jge
lcall
xchg
lods
lahf
roll
lds
sbb
mov
cmp
aam
or
mov
mov
lds
or
int
dec
sbb
push
dec
push
jb
or
cld
adc
jnp
sbb
lock
popf
jns
mov
mov
pcmpeqw
and
push
sub
mov
mov
aam
jne
inc
loope
clc
jmp
sar
mov
mov
or
xor
xchg
ret
aas
inc
stc
movsb
mov
imul
mov
arpl
or
jp
jle
popa
and
jle
nop
movsb
push
inc
adc
xchg
gs
imul
fsubrl
fidivrl
push
add
in
into
loope
sub
adc
push
lcall
popf
inc
pop
pop
in
sahf
out
ds
mov
dec
xor
mov
and
cmp
mov
jl
cmp
out
xchg
mov
aam
mov
fucom
std
out
cmc
pop
icebp
jecxz
mov
jbe
add
adc
scas
fwait
jbe
or
mov
fucomip
ss
je
mov
push
dec
jno
cmp
lahf
lock
mov
loop
bound
in
movsl
dec
add
fwait
call
movsl
sub
ss
ss
ret
nop
xchg
int
pop
out
mov
andb
push
xor
stos
mov
push
test
cmp
fnstenv
rorl
xchg
int3
cmp
push
popf
adcb
fsubl
shll
xor
xchg
push
mov
xchg
imul
verw
cmp
out
pop
fidivrl
mov
xchg
pop
cwtl
je
inc
int3
xor
cmp
test
dec
clc
pop
mov
push
xchg
shll
cmpsb
sub
fistl
movsl
xchg
xlat
cmc
lock
outsl
mov
xlat
xchg
xchg
jg
or
or
pop
dec
daa
xchg
push
pop
sahf
lahf
push
mov
xchg
stc
add
in
mov
mov
cli
in
daa
dec
pop
fdivr
int3
clc
sbb
add
jl
filds
push
lea
adc
cs
test
in
sbb
mov
add
push
bound
mov
inc
jmp
pop
pop
jg
push
scas
cmpl
call
sbb
mov
jnp
jne
dec
nop
add
jge
adcl
jnp
and
test
stos
lcall
call
jg
int
ret
pop
in
pop
in
push
or
jno
ret
xchg
divb
pop
add
dec
jno
sbb
cmp
and
cmpsl
add
pop
cmp
imull
cmc
mov
sub
xchg
aam
ret
rcll
xchg
es
sub
aam
sub
lds
gs
or
gs
clc
les
inc
insl
movsb
jp
cltd
push
xchg
jmp
xchg
clc
jge
sub
fcoml
cs
push
mov
xchg
inc
sbb
dec
add
or
test
pushf
sbb
negb
or
movsl
stc
push
jmp
in
test
mov
cwtl
mov
add
stc
sub
mov
mov
lcall
negl
xchg
mov
jecxz
sti
jp
ss
btr
or
xor
mov
mov
movsl
cmpsl
fs
mov
adc
insl
shlb
push
ror
lods
dec
cmp
je
test
adc
fdivp
or
mov
mov
in
out
pop
cmp
push
push
std
adc
push
xor
sarb
in
repnz
ss
inc
dec
sbb
add
cmp
ret
inc
lcall
pop
arpl
adc
mov
jmp
mov
popa
mov
pop
inc
jns
cli
pop
jp
int
ds
lret
and
push
das
shll
mov
daa
jle
out
jno
xchg
mov
mov
ror
subb
pop
and
out
fs
xor
adc
xorl
and
ret
ror
mov
pop
sbb
inc
jg
subb
or
dec
int
mov
xchg
xchg
push
ja
and
mov
jo
push
push
xchg
or
adc
xor
lret
pop
cli
jns
jmp
jbe
jb
or
stc
mov
mov
clc
imul
pop
cltd
xchg
adc
mov
lahf
sub
stos
sub
xor
int3
adc
cmp
shr
xor
inc
lret
lods
xchg
mov
xchg
js
repnz
pop
arpl
mov
ljmp
inc
sbb
jb
pop
out
pop
arpl
adc
jno
mov
jl
pop
cmp
sub
push
push
in
movsb
push
mov
cmc
xor
xchg
ljmp
stos
aad
clc
inc
arpl
mov
pop
jae
daa
fs
ljmp
xchg
fdivrs
fidivs
loopne
or
xchg
enter
jo
test
add
push
shll
jg
cmp
sbb
jb
jl
inc
push
out
push
xor
lcall
sub
push
ljmp
dec
orl
rorb
mov
das
mov
mov
arpl
jae
pop
enter
cs
jb
movsb
push
cmp
fidivl
mov
add
test
pop
mov
popa
inc
xchg
or
inc
fsts
mov
loop
sahf
mov
out
in
sbb
xchg
repnz
sub
xchg
aad
shlb
jne
xchg
cmp
hlt
negb
xor
subb
daa
lcall
aaa
call
pop
ficoml
bound
jle
adc
addr16
clc
xchg
scas
mov
fsubl
add
add
rcrl
jmp
pop
fcmovne
jnp
jae
adc
xchg
fwait
push
es
fwait
jp
std
push
hlt
ljmp
mov
mov
and
scas
and
in
addl
pop
roll
mov
sbb
xor
pop
push
int3
or
push
lods
xor
lock
mov
popf
in
cmp
ds
mov
pop
add
mov
jns
into
and
loop
nop
cli
daa
je
mov
in
aam
push
in
add
mov
or
adc
jp
xorb
js
adc
push
lods
xor
cmp
dec
test
push
mov
mov
bound
loop
inc
gs
push
sti
orb
push
movsb
aad
incl
mov
cld
adc
adc
daa
and
inc
idivl
pop
pushf
pusha
fcompl
ret
int
pusha
out
xchg
and
push
adc
js
push
imul
insl
ss
inc
sti
repnz
mov
lea
shlb
cmp
pop
ljmpw
js
lahf
inc
push
jmp
rolb
aaa
push
int
enter
cmc
sub
jg
sbb
std
aaa
adc
clc
fisubrs
inc
pop
and
jmp
movsb
loop
or
movsl
add
dec
ja
popf
mov
cmpsb
adc
ficoms
icebp
fnclex
mov
out
imul
fwait
sbb
or
nop
clc
in
xor
fidivs
rcrb
sbb
jno
mov
mov
shr
jmp
sub
mov
ss
pop
push
mov
fst
insl
stos
insb
int3
cmp
adc
add
jle
aam
mov
pop
popa
roll
lahf
push
xchg
push
rorl
repz
andl
mov
es
add
mov
repz
ljmp
data16
popf
shrl
mov
int
lock
inc
or
or
lock
fcmovnbe
xchg
adc
rcll
cmp
mov
mov
pop
test
or
sub
cmp
mov
faddl
es
mov
mov
in
cmc
xchg
cmc
and
pushf
lea
and
dec
push
fstps
add
cmp
xor
jo
gs
inc
jl
fnsave
mov
call
pop
lock
fcmovne
cli
dec
testl
push
fcoms
repnz
adc
mov
mov
pop
pop
sahf
jns
jns
int3
add
pop
sti
add
dec
xlat
cwtl
scas
mov
mov
sbb
cmpsb
rorb
xchg
dec
loopne
and
lahf
and
lahf
orl
insb
dec
ret
lock
leave
loop
inc
xor
push
sub
cmc
fs
rolb
mov
push
mov
push
xchg
int3
repz
in
insl
std
fmull
jmp
sub
sti
adc
aas
out
shll
fiaddl
adc
in
mov
testb
pop
ds
aam
aas
dec
cmpsl
and
mov
roll
dec
inc
xchg
add
and
jne
push
je
scas
pop
mov
push
xor
dec
cwtl
arpl
cli
mov
scas
xor
sbb
lea
mov
dec
xchg
mov
fcompl
push
inc
divl
cmp
sarb
push
mov
xor
lret
repz
outsl
xor
roll
add
ror
xchg
xchg
cli
inc
testb
fwait
xor
xchg
jmp
daa
imul
jle
jp
insl
or
lock
push
xchg
out
and
xor
cmpsl
pop
mov
gs
xorl
inc
imulb
call
outsl
jle
xchg
push
xchg
fs
les
or
lret
inc
ret
cmp
lret
ds
jne
test
ffreep
sub
pop
push
iret
or
dec
jge
andl
sbb
lods
xchg
stos
int3
int
lcall
push
dec
jns
shll
in
repz
xor
mov
mov
dec
mov
adc
rolb
mov
imull
sbb
sbb
mov
pop
test
pop
pop
dec
inc
daa
nop
mov
loope
pop
inc
dec
loope
cmp
fs
add
sbb
or
add
filds
inc
sub
scas
jmp
pop
ret
aam
jl
lcall
into
mov
jns
bound
pusha
xor
arpl
insb
push
cmp
roll
je
pop
sbb
cld
mov
adc
out
test
les
jo
addr16
out
sub
mov
pusha
mov
lret
push
mov
cmp
pop
shl
mov
xchg
pop
stos
data16
sub
xchg
push
pop
sbb
into
fldl
fwait
repnz
negb
gs
xlat
leave
lahf
xor
jnp
inc
enter
mov
fists
ds
pop
bound
in
jb
mov
pop
dec
push
jnp
mov
xchg
stos
stos
in
push
adc
ret
xchg
cmp
pop
xor
jbe
jmp
mov
or
pop
fidivs
xchg
in
je
inc
sub
movl
and
lret
test
ja
mov
out
cmp
xchg
mov
std
les
pop
lods
jle
call
push
mov
int
pop
rorl
cmp
insl
xor
xchg
jg
iret
outsb
shll
mov
gs
jl
hlt
lds
sub
aad
mov
into
fmulp
out
pop
or
loope
popa
adc
ja
test
rcrl
cltd
add
mov
mov
cmp
xchg
dec
pop
and
or
test
inc
je
int3
in
fistpl
sbb
in
fld
popa
mov
popa
inc
outsb
into
test
cmp
imul
mov
mov
pushf
dec
fcmovbe
aaa
xchg
and
inc
scas
cmp
push
int
sub
movsb
ds
jg
inc
jno
scas
inc
test
cmp
stc
fldenv
inc
fs
out
das
cmp
push
stc
or
jo
dec
int3
mov
repz
jns
and
cs
inc
mov
lock
rolb
sahf
push
aad
add
pop
fdivrl
cmp
adc
popa
hlt
call
lahf
xchg
rclb
les
movsb
sti
xchg
mov
dec
cld
pop
fs
cld
ficoml
pushf
scas
sbb
mov
pop
fwait
push
scas
xor
mov
mov
inc
fsubl
aam
aad
aas
outsb
lcall
adcb
in
scas
sub
mov
push
negl
lock
lods
pushf
int3
jmp
scas
fs
pop
out
lret
enter
adc
inc
xchg
test
sub
ja
pop
cmc
shr
rorb
test
cmp
jmp
push
orl
pop
in
xor
and
lds
xor
aaa
lret
mov
ja
aad
fldl
sbb
and
or
lds
fs
or
int
in
inc
and
mov
in
add
sbb
pushf
pop
repz
xchg
push
ja
ds
jg
cwtl
mov
into
repz
movsl
mov
mov
inc
ljmp
insl
push
pop
test
xchg
jns
push
xor
xor
add
ficoms
fisttps
and
repz
jnp
or
adc
leave
dec
scas
or
pushf
and
xlat
and
xchg
adc
nop
test
jmp
inc
jle
jl
repnz
add
test
sahf
cmp
xchg
inc
jmp
add
adc
xchg
xor
or
mov
fucompp
ljmp
mov
popf
sub
cmpsb
clc
rolb
adc
add
in
emms
xor
xchg
shll
rcrb
dec
dec
cmp
jns
out
js
out
jg
xchg
in
or
jmp
push
out
js
pop
vmwrite
mov
lds
sub
fwait
mov
or
arpl
mov
or
push
movsl
in
mov
mov
jb
mov
cmpsl
gs
sub
sub
test
inc
push
pop
cmc
jb
outsb
jle
imul
jnp
adc
lods
fimuls
jge
jmp
ljmp
pop
lahf
shrl
aam
lret
repz
call
ret
cs
andl
cmpsl
mov
lcall
jp
mov
add
fiadds
data16
push
ds
lods
xchg
int3
push
hlt
dec
negb
aam
out
jbe
mov
or
ficoms
cltd
fs
xchg
adc
gs
sub
jecxz,pn
sbb
out
pop
dec
ret
sbb
xor
add
and
or
cmpsb
sti
jno
mov
bound
inc
pop
test
mov
dec
rcl
dec
mov
hlt
jecxz
xor
sub
inc
xlat
xor
mov
xchg
mov
vshufps
dec
adc
ret
ret
cmp
loope
call
pop
jb
pop
inc
stc
test
loopne
and
jbe
sub
lods
xchg
mov
adc
loop
add
lfs
lret
push
dec
lret
cmpsb
pop
andl
pop
jg
insb
mov
mov
xchg
test
pop
fdivrs
lret
outsl
sub
dec
fs
inc
lds
dec
inc
das
dec
stos
xor
jae
inc
adc
loop
mov
testb
dec
push
and
add
pop
sub
jmp
negl
mov
pop
jno
roll
je
push
imul
mov
xorb
call
int
push
repnz
push
cmpsl
cmp
pop
out
push
mov
push
sub
cli
out
aam
std
jmp
and
push
jmp
stos
xchg
or
sub
stos
and
xchg
pop
clc
mov
or
in
cmp
dec
popa
loop
add
inc
push
inc
addr16
lahf
and
insb
ja
xor
lods
sar
push
and
divb
push
rcrl
add
fistpll
cmp
sbb
mov
push
sub
mov
call
inc
xchg
pop
xor
pop
mov
jl
mov
jmp
push
add
aam
outsl
leave
mov
lods
push
mov
es
lea
sahf
aad
je
movsl
iret
add
jo
jb
lods
mov
cmp
add
sbb
cmpsl
mov
xor
inc
pop
adc
add
cmp
sub
push
sub
cli
sahf
adc
xchg
xchg
lret
push
movsb
call
and
or
push
push
int
js
daa
adc
and
mov
push
hlt
mov
push
mov
mov
rcr
aad
mov
mov
shll
scas
sbb
aad
sbb
imul
leave
test
pop
scas
push
sahf
loope
xlat
pop
int
mov
lcall
pop
movsb
mov
shlb
pop
inc
pop
fcmovb
mov
dec
out
add
dec
dec
cwtl
mov
subl
aas
inc
jno
jmp
pop
bound
mov
pop
sbb
cmp
iret
mov
inc
fstps
les
dec
shlb
inc
pusha
test
jne
jns
sub
sub
out
xlat
dec
dec
lret
orl
out
loopne
xor
shrb
and
stos
adc
rolb
dec
lods
jbe
call
xor
jae
iret
dec
add
mov
rcrb
push
sahf
pop
ljmp
sub
xchg
xchg
loopne
rorb
inc
add
clc
out
add
lods
push
mov
mov
in
sub
repz
push
arpl
or
loopne
hlt
mov
and
rclb
cld
add
adc
pop
leave
or
mov
cltd
push
call
mov
xchg
outsb
mov
inc
cltd
mov
sbb
and
sbb
mov
xor
pop
clc
repz
inc
jb
insb
mov
lcall
ljmp
aas
shl
les
out
xor
ja
ret
mov
aad
xchg
xchg
xor
les
push
into
sub
aam
xor
sbb
outsb
das
mov
cmp
cli
sbb
inc
int
js
xlat
popa
lods
push
lods
xchg
popa
xchg
sub
cs
js
test
jnp
push
mov
jl
es
cs
adc
push
out
mov
push
movsb
jecxz
scas
les
push
in
mov
pop
cmc
push
sub
loopne
mov
out
xor
cwtl
push
cmpsb
rcrw
idivb
push
sbb
aaa
xchg
ret
sub
mov
aas
push
xchg
adc
inc
push
push
std
cmp
push
mov
mov
outsl
repz
mov
test
adc
rorl
jp
sbb
cmpsl
jno
sbb
xor
mov
lods
outsl
jno
dec
movsl
out
push
mov
adc
cs
mov
dec
cmp
std
test
mov
repnz
fucomip
int3
mov
stos
scas
inc
fimull
loopne
ljmp
dec
mov
mov
loopne
movsl
call
pusha
dec
test
inc
mov
je
pop
lahf
xorb
fwait
aaa
dec
lcall
mov
adc
gs
stc
faddl
test
pop
lds
jae
mov
les
jp
aas
fs
fwait
pop
sub
loope
ss
push
and
dec
inc
sti
mov
loop
ljmp
inc
dec
lcall
loope
xchg
movsb
jge
xlat
push
mov
sbb
sbb
jl
mov
daa
cmp
loope
lock
dec
int3
push
testb
mov
sbb
or
add
pop
ret
outsb
xor
fidivl
fists
nop
add
inc
mov
lahf
call
enter
push
cmc
mov
push
outsl
repz
or
inc
scas
loope
inc
adcb
mov
ret
icebp
cmpsl
insb
lret
mov
push
cltd
aad
ljmp
jne
jb
insb
push
fdivl
ret
cmp
xor
aad
lret
bound
loopne
sub
data16
int3
adc
mov
aaa
das
mov
push
jmp
ret
push
loopne
cmp
mov
pop
adc
dec
scas
lret
cmp
xorb
jbe
mov
ret
imul
adc
jp
addb
not
inc
lds
in
sbb
outsl
pop
mov
aad
inc
imul
adc
faddl
or
lock
int3
les
mov
inc
sbb
imul
adc
iret
aam
cmc
sbb
jae
pop
out
call
cmc
repnz
imulb
into
loopne
sbb
out
pop
dec
es
xor
push
pop
adc
push
ljmp
ficomps
mov
xchg
mov
out
pop
js
mov
test
ret
rolb
psllw
add
inc
gs
pusha
xor
inc
cmp
dec
mov
sbb
or
mov
sub
aas
jns
imul
pushf
jns
es
xchg
mov
lock
mov
ror
aaa
imul
or
cmpsl
mov
cltd
jmp
add
fcomps
roll
cmp
mov
lahf
add
xor
or
fnstsw
pop
mov
push
add
mov
pop
push
cmpsb
sub
test
out
test
add
add
nop
jae
cmc
les
jmp
xor
je
mov
xchg
fisubrl
test
mov
add
stos
ret
repnz
add
xor
nop
jle
dec
dec
mov
lret
lock
clc
popf
adc
test
or
cmp
jg
in
mov
js
stos
jo
xchg
or
repnz
lock
loopne
push
scas
mov
adc
or
inc
jnp
jo
lret
cmp
push
ficoml
popf
test
jge
cmp
fnstsw
jp
test
mov
arpl
jmp
fsubs
mov
scas
jle
ja
mov
or
mov
aad
or
lods
rolb
loope
add
xchg
mov
pop
inc
xor
and
arpl
out
xor
jg
pushf
jae
into
stos
in
pop
push
daa
jecxz
xchg
pop
cmpsb
dec
out
xor
push
xchg
cmpsb
jge
aad
xlat
mov
push
push
jae
push
pop
scas
sub
inc
add
mov
xchg
sbb
or
xor
loopne
je
mov
pop
jg
popa
and
mov
out
mov
sbb
inc
dec
movsl
ja
adc
inc
mov
fst
aad
inc
lods
jmp
cld
xchg
xchg
mov
jno
jl
rcrl
or
mov
gs
add
ljmp
mulb
xchg
movsl
lock
adc
lcall
or
xor
xchg
or
inc
aas
adc
cmpb
lds
mov
rorb
mov
inc
inc
inc
push
push
cltd
dec
mov
inc
push
jo
pop
push
ljmp
iret
nop
jb
xchg
test
pop
out
pop
rclb
cmp
xchg
in
fsubl
jbe
inc
adcb
push
in
pop
and
je,pn
enter
jae
jge
mov
xchg
or
mov
shl
dec
aas
call
loopne
ret
jp
inc
mov
sbb
subl
gs
push
ficoml
addr16
arpl
outsb
mov
cmpsl
data16
cmp
sbb
inc
addr16
aaa
in
leave
sarb
int
push
addb
out
pushf
jg
jo
cmp
xchg
jge
ljmp
cmp
jns
sub
aam
jg
das
and
mov
push
sub
add
es
fidivrs
pop
lds
arpl
aam
mov
rcrb
mov
mov
ja
leave
loopne
pop
mov
mov
fs
cmp
cmp
xor
loop
mov
in
xlat
dec
scas
les
lret
mov
mov
mov
xchg
popf
lret
fstpt
rcr
xor
mov
xchg
mov
xchg
popa
in
sbb
int3
mov
sub
pop
lea
jge
testl
and
jb
lcall
adc
push
and
aad
xchg
xchg
mov
sbb
or
aas
stos
xchg
fmuls
add
jo
sbb
jno
and
cwtl
inc
jmp
cmp
mov
pop
cmp
mov
jne
shl
cmp
insl
mov
dec
dec
fisubrs
dec
cmpsb
aas
or
jns
shll
pop
in
lock
or
jb
fsubrs
jae
dec
xchg
fstpl
jae
lahf
test
adc
repz
shrl
cltd
mov
push
lods
adc
in
mov
add
mov
lods
pop
cld
and
push
mov
lret
bound
inc
or
out
xor
inc
cmp
test
adc
aas
inc
pop
test
inc
pop
nop
or
sub
sub
lds
jbe
xor
sbb
mov
mov
jne
mov
xor
int3
out
jne
out
mov
into
push
jb
test
call
popa
mov
aaa
das
jno
lea
in
mov
outsb
push
imul
xchg
mov
lea
pop
push
sub
push
loopew
nop
aam
cmc
mov
ljmp
inc
dec
fisttpl
dec
inc
or
aaa
add
dec
dec
mov
mov
cmp
mov
sbb
jmp
repnz
test
push
push
sahf
movsl
je
jp
stos
mov
mov
add
aaa
or
mov
imul
sub
xchg
adc
lds
add
cmp
mov
xchg
sbbl
lea
sbb
xchg
addb
mov
push
mov
dec
push
mov
idivb
and
push
bound
xchg
sbb
push
xor
mov
aad
icebp
mov
loopne
sub
mov
loope
lds
sbb
icebp
jo
out
sti
adc
scas
loopne
out
outsb
fbld
add
lods
push
fstpl
les
mov
int3
test
lcall
icebp
aaa
out
fwait
adc
xchg
dec
cltd
inc
adc
push
je
sub
mov
imul
jne
int
cwtl
shll
jge
pop
fwait
les
push
sbb
sar
stos
sar
fisubrl
adc
bound
jns
push
mov
sbb
lahf
sub
jmp
leave
sub
icebp
adc
mov
inc
iret
dec
std
fidivrs
cmova
add
out
dec
inc
cmpsb
sti
addr16
aad
or
jle
jg
mov
lret
sahf
cwtl
dec
or
call
je
pop
add
scas
lcall
adc
push
outsb
push
jb
xor
out
sbb
mov
lcall
add
inc
jl
push
aam
xchg
aad
scas
sub
fwait
dec
mov
mov
lahf
or
jp
cmc
add
loopne
ja
dec
sub
mov
lret
scas
out
daa
inc
cmp
adc
xchg
shrb
shr
xor
cltd
repnz
mov
xor
xchg
stos
add
or
andb
outsl
cmpl
jbe
js
push
mov
lcall
mov
jnp
mov
or
inc
sahf
push
loop
in
inc
pushf
adc
lea
in
or
adc
sub
out
cmp
pop
mov
add
int
xlat
cmpsb
jecxz
jge
lds
lods
scas
jcxz
adc
aad
xorb
sbb
test
mov
xchg
sarb
add
addr16
jg
popf
and
xchg
and
dec
out
sbb
fisubrl
push
sbb
xchg
repnz
push
push
jecxz
inc
and
in
stos
xlat
ret
icebp
jmp
pusha
push
hlt
dec
dec
adc
dec
jnp
outsl
test
imul
test
sub
jno
dec
pushf
scas
jmp
aad
jb
mov
rcrl
jge
adc
cmp
jo
fcomi
and
cmp
jmp
xor
mov
cmp
dec
inc
cmp
rorl
mov
jb
movd
jne
and
push
pushf
jp
int3
adc
push
mov
jae
hlt
adc
movsl
popf
mov
ret
cmc
int
sahf
in
repnz
imul
adc
add
imul
enter
mov
jp
push
dec
test
dec
jnp
mov
dec
fdivs
outsl
in
rclb
jmp
mov
and
lods
sbb
pop
adc
shll
push
pop
pop
adc
add
fwait
daa
jp
repnz
mov
pop
daa
sub
popf
sub
adc
mov
cmp
sub
push
mov
sub
test
jg
loope
adc
out
mov
dec
or
push
xchg
popf
jns
pop
jae
cmp
mov
jae
sbb
insl
inc
shll
mov
jmp
xlat
push
pop
cmp
push
lods
jmp
jnp
std
bound
push
out
ss
iret
pop
daa
bound
loopne
add
test
cmp
leave
pop
orb
ret
push
mov
repnz
adc
push
icebp
mov
enter
pop
addr16
cld
jnp
outsb
pop
lea
stc
stos
or
fadds
push
clc
sub
nop
mov
frstor
and
adc
push
call
gs
dec
adc
push
or
inc
cmpsl
push
jb
or
clc
mov
out
cwtl
sbb
cmp
out
insb
sahf
jnp
jmp
outsl
cli
dec
aas
ret
pop
xchg
and
adc
das
jae
cmc
test
ljmp
test
add
xchg
adc
mov
or
fnsave
mov
jns
shll
pop
lods
fstpl
xchg
enter
test
out
lods
lahf
cli
pop
push
adc
xor
imul
subl
es
inc
mov
daa
pusha
or
mov
push
pop
cmp
das
add
leave
pop
sbb
dec
sub
fcomp
ljmp
mov
inc
dec
ljmp
shrl
pop
js
xchg
fcomps
dec
fs
int3
addr16
dec
insb
mov
popf
je
push
cld
sub
mov
inc
adcb
inc
mov
sub
xchg
leave
test
loop
jle
lods
out
sbb
add
andb
push
movsb
jp
aas
imul
lret
repnz
arpl
cwtl
js
fiadds
push
add
fs
mov
rclb
xor
push
scas
push
je
sbb
sbb
insb
dec
inc
dec
or
out
xchg
inc
sbb
mov
xchg
cmc
hlt
popa
addr16
jecxz
rorb
clc
mov
and
xchg
push
sarl
jecxz
cmc
icebp
xchg
mov
lret
mov
sub
clc
mov
jl
xchg
dec
adc
pusha
mov
addr16
scas
dec
mov
jne
adc
int3
adc
push
insl
jmp
inc
sti
or
cwtl
ljmp
cmc
xlat
push
aaa
cmp
push
aaa
and
jo
xor
xchg
inc
jmp
fdivrl
mov
pop
adc
mov
sbb
sbb
jecxz
faddl
leave
jne
cmp
fwait
mov
stos
int
jle
push
mov
test
adc
push
push
sub
not
sub
push
std
dec
popa
mov
test
mov
or
fwait
adc
js
loopne
fistps
xor
loopne
mov
push
hlt
pop
add
mov
mov
jg
cs
and
fstl
mov
mov
jecxz
push
pop
test
push
imul
inc
jge
mov
xor
dec
sub
or
or
dec
pop
bound
sahf
aam
adc
out
or
push
je
fs
adc
mov
xchg
ret
pop
aam
sbb
std
and
icebp
pop
je
in
je
ficoms
adc
cmp
and
cmp
xchg
mov
mov
xor
lret
and
repz
xor
or
sahf
fdivs
xor
adc
push
dec
arpl
pop
test
mov
pop
mov
out
ja
jge
lahf
jne
sub
test
inc
xor
insb
xchg
xor
insl
and
stc
pop
or
cmp
mov
fiadds
out
pop
pop
xchg
lret
mov
xchg
inc
sub
push
push
mov
mov
mov
lret
icebp
cmp
xor
lods
sahf
stos
jns
pop
cmp
pop
add
xchg
loope
scas
inc
mov
in
lahf
div
loop
cmp
outsb
cmp
shrl
icebp
ror
inc
iret
loope
fucomip
mov
mov
adc
inc
and
mov
sub
sbb
push
mov
cmp
leave
hlt
test
roll
and
xor
les
sbb
and
sub
jge
into
sub
fsubrl
les
and
xchg
push
add
jmp
jp
dec
rclb
push
push
sar
adc
into
and
cmpsl
pushf
mov
dec
jecxz
and
add
dec
sub
mov
bound
sub
or
dec
or
icebp
pop
scas
inc
push
mov
push
movsl
or
mov
icebp
mull
stos
pop
mov
mov
test
jecxz
push
test
stc
cmp
push
inc
sub
cmpsl
out
jb
int
cmpl
daa
movsb
xor
or
sub
outsl
fistl
mov
add
cld
dec
sub
out
cs
sbb
lds
pusha
std
push
mov
popa
scas
xchg
lahf
aad
negb
lds
push
and
mov
insb
dec
popf
jno
jp
mov
out
jbe
ja
cmpsb
cmovg
push
or
stos
inc
dec
movsb
xchg
out
add
push
cmp
push
fists
out
push
ret
sub
movsl
adc
mov
stc
test
std
out
sbb
pop
jnp
sahf
sub
lahf
maskmovq
mull
neg
cmp
pop
cwtl
sub
jns
sub
xor
pop
pop
sbb
cmpsb
pop
aam
mov
jecxz
mov
and
jns
orl
inc
sub
fimull
xorb
mov
pop
arpl
out
mov
jo
mov
out
cmp
mov
divl
adc
cld
cmp
xchg
shlb
xor
cmpsb
mov
adc
jo
pop
push
xlat
adc
adc
imul
pop
inc
std
adc
movsl
js
pop
cmp
or
lahf
sbb
add
nop
sub
aad
in
out
mov
loop
dec
movsl
fs
aaa
mov
pop
dec
pop
mov
inc
adc
push
inc
add
rorl
sbb
cmc
sub
cmpsb
dec
mov
test
cmp
push
mov
fidivl
cmp
or
stos
mov
sub
xor
add
mov
loop
xor
and
add
rcll
jle
jnp
fistpll
jbe
out
enter
ja
pop
das
imul
mov
add
xor
in
lret
cld
int
gs
xor
inc
gs
inc
cmc
pop
adc
pop
xor
and
fadd
pushf
bound
push
jne
push
mov
xchg
pop
inc
arpl
mov
sahf
es
or
cmpsl
rolb
rorb
push
daa
jb
mov
ss
add
xchg
push
cmp
sub
aaa
lret
and
xlat
lods
repnz
jae
js
mov
dec
gs
sbb
xor
enter
mov
and
hlt
loopne
sbb
aad
cld
xor
push
and
mov
enter
and
mov
sub
idiv
into
mov
push
pop
popa
jl
outsl
sub
lods
orl
shl
incb
fstpl
add
lods
xchg
cmp
dec
das
push
aaa
ljmp
xor
cmp
insl
sub
xchg
cli
outsl
negl
pop
xor
aas
repz
sbb
fisttpll
das
or
enter
testb
inc
jecxz
inc
push
inc
xchg
lret
inc
xchg
je
test
loop
mov
inc
jge
pusha
pop
and
outsl
iret
sub
out
lret
ja
and
mov
lcall
sbbb
outsl
jnp
and
mov
and
loopne
and
outsb
xor
in
inc
jae
mov
mov
cmpsl
xor
mov
xchg
dec
jl
xchg
lahf
out
cmc
call
int
cmc
fcomps
in
imul
inc
mov
mov
mov
insb
xchg
xor
aam
cmpsb
xor
adc
lods
ljmp
cmpsb
adc
adc
in
or
lidtl
int
icebp
push
sar
imul
xlat
and
enter
dec
stc
sub
cmpsb
mov
xor
imul
dec
cmp
stos
or
mov
adc
mov
or
int
inc
mov
sub
outsl
or
cmp
dec
add
inc
push
jns
sub
ret
push
xorl
popa
cmp
pop
arpl
lea
inc
fidivrl
push
cmp
in
pop
sbb
and
jne
in
divb
adc
in
pop
push
out
gs
pop
lret
pop
mov
fldl
dec
pop
repz
int3
inc
jnp
adc
jne
push
xchg
xchg
fs
roll
pop
bound
lods
dec
mov
mov
or
push
jno
stos
push
dec
aad
in
inc
dec
mov
xchg
fwait
daa
or
add
adc
loop
xchg
ds
negb
adc
std
pushf
mov
out
mov
push
inc
mov
add
cli
push
jae
aad
mov
xor
mov
lret
jo
mov
mov
cld
xchg
push
and
fiadds
and
fnstenv
outsb
stos
inc
jno
leave
subb
ss
jg
add
cmpsb
mov
bswap
sub
hlt
aaa
daa
xor
and
xchg
cltd
or
repnz
maskmovq
imull
and
into
pop
pop
sub
fbld
jecxz
leave
clc
xor
dec
cmp
arpl
cltd
movsb
or
add
or
stos
pop
jmp
sbb
and
loop
mov
pop
inc
js
aam
or
inc
lods
xchg
dec
xchg
push
fdivrl
outsb
mov
sub
lods
mov
ja
mov
jp
loop
or
adc
jns
push
enter
stos
add
out
ja
cwtl
icebp
subl
pop
mov
or
int
das
inc
shlb
lock
push
negb
call
pop
dec
jo
dec
mov
push
adc
pop
test
pop
insb
lahf
test
hlt
and
push
jne
jne
mov
mov
mov
mov
add
gs
mov
mov
andb
mov
adc
push
jne
lahf
xorb
pop
sahf
push
jns
mov
push
xchg
fnstenv
jecxz
les
hlt
call
nop
or
xchg
mov
test
add
aad
shll
mov
inc
fists
std
mov
sub
xor
mov
mov
movsb
rcrb
push
xor
fildl
inc
test
bound
mov
push
jns
idiv
jmp
jge
arpl
dec
sbb
cs
cmp
cli
pop
jp
fstl
push
xchg
and
add
mov
adcl
push
xchg
lret
mov
flds
xlat
inc
xchg
cmp
push
out
popf
mov
jle
cmp
inc
cld
push
out
push
jg
pusha
mov
les
xchg
dec
mov
xor
out
and
or
xor
clc
sarb
and
sub
popf
cli
or
ss
sbb
rol
lea
insb
cltd
aas
mov
mov
inc
mov
cltd
je
mov
test
or
lds
aaa
xlat
sbbl
sti
flds
ja
das
pop
dec
scas
pop
fwait
jnp
lods
mov
vpor
xchg
stc
and
mov
cmp
pop
mov
xor
stos
mov
mov
jecxz
jmp
popa
icebp
cmp
test
ss
mov
fdiv
or
repnz
cmp
fstl
mov
adc
mov
scas
enter
divl
jg
wbinvd
aaa
sub
cmp
mov
push
dec
xchg
xor
or
mov
loopne
lahf
cwtl
xchg
fs
cmp
cmpsl
leave
xchg
inc
arpl
cld
sub
or
aaa
stos
jp
out
push
incl
xchg
cmpsb
xor
fabs
cmpsb
sbb
leave
adc
ds
lret
aad
xchg
jp
ret
and
inc
pop
fnstcw
push
lea
lods
push
pop
call
popa
pop
sub
sarl
es
fstpl
mov
in
cmp
fwait
dec
sub
jo
pop
std
ja
frstor
push
das
jne
push
pushl
pop
xchg
mov
push
lock
pop
icebp
xchg
adc
testl
mov
test
fnop
xor
or
fstpt
xchg
xor
or
insl
push
int
and
ljmp
test
test
fists
mov
xchg
or
pop
rol
addl
movsb
xor
adc
push
dec
shll
jae
lock
rclb
xlat
pop
lret
inc
lock
pop
add
test
outsl
stos
or
xor
insb
jle
and
out
sub
push
arpl
inc
movsl
rorl
sub
sbb
js
fbld
test
or
lds
fistpl
in
lea
test
repz
insl
movsl
ja
insb
jecxz
call
leave
mov
push
nop
xchg
cltd
shrl
test
sub
add
pop
sti
sub
add
in
sbb
mov
sbb
xchg
enter
jo
and
pop
lahf
jg
pop
cmp
test
inc
jno
pop
mov
pop
mov
mov
cmc
cmp
pop
cs
pop
stos
int
mov
add
sbb
jns
adc
push
loopne
data16
xchg
das
push
outsb
fwait
push
jae
flds
les
and
mov
insl
pop
mov
mov
dec
xchg
arpl
xchg
nop
xchg
mov
scas
xor
inc
scas
jbe,pn
nop
and
jle
mov
or
mov
stos
mov
fisttpl
lret
stos
mov
sub
das
frstor
into
xchg
adc
mov
jb
and
incb
divl
dec
cmpsl
pop
xor
lea
cmp
add
inc
pusha
out
into
add
imul
push
es
pop
push
aaa
adc
pop
and
mov
or
leave
and
ret
and
ret
outsb
xchg
pop
scas
cmpsb
and
test
lods
arpl
std
xchg
mov
inc
iret
in
lcall
or
popf
jmp
lock
adc
cltd
or
pop
adc
rcll
lcall
int3
lret
adc
jmp
fidivrl
pop
rcrl
pop
mov
clc
not
add
test
jne
js
push
ret
xchg
sub
lock
out
test
or
std
mov
dec
adc
push
mov
xor
jae
imul
icebp
fucomi
push
push
pop
push
push
xor
movsl
jb
ljmp
sti
lret
cld
daa
imul
jbe
addl
inc
test
and
push
scas
call
sub
xchg
inc
imul
mov
push
jmp
jns
sbbb
jns
xor
loope
cwtl
call
pop
insl
enter
in
inc
stos
mov
dec
cli
and
jecxz
js
int3
pop
test
inc
pop
stos
mov
jae
push
sbb
jbe
call
sbbl
xor
rorb
pop
fmul
or
adc
jo
lret
dec
lea
lret
ficomps
aad
shrb
imul
cli
lret
sbb
stos
insl
divb
in
insl
xchg
mov
sub
gs
push
add
sarb
inc
flds
push
js
dec
insl
or
xchg
mov
xor
and
dec
call
mov
ret
cli
mov
inc
testb
jmp
mov
fdivl
fists
inc
negb
and
pop
insb
inc
fsts
inc
icebp
xor
sarb
or
xor
inc
mov
ds
sub
sbb
clc
pop
stos
repnz
ja
or
push
push
sbb
ja
sub
out
and
fwait
pop
jns
iret
xchg
inc
and
fwait
mov
push
mov
inc
dec
pop
xchg
sbb
push
subl
and
or
jo
dec
mov
push
out
push
iret
mov
push
sub
iret
mov
lods
int3
cmp
sbb
repz
bound
fs
shlb
inc
push
les
mov
dec
cmp
lods
cmp
xor
insl
jle
jge
jbe
je
jg
mov
jge
mov
std
out
sbb
rcrl
sub
push
cli
loopne
idivb
movb
in
cmp
xlat
sbb
dec
jb
mov
xchg
push
das
stos
jb
fxam
mov
lret
mov
jb
and
rorl
je
dec
mov
sti
ret
and
and
ljmp
lcall
sbb
rorb
push
ficomps
sub
pop
cltd
mov
repnz
xchg
ror
imul
jg
je
mov
lods
test
subl
lret
rol
mov
popf
mov
push
mov
adc
mov
je
xchg
push
in
dec
jae
dec
aaa
daa
dec
sbb
leave
pop
inc
dec
mov
pop
mov
sbbl
sbb
aas
mov
pop
aam
sub
jno
push
cmp
mov
mov
iret
mov
add
mov
mov
test
fistl
add
dec
lods
dec
add
out
std
addps
pop
add
aad
out
dec
xchg
mov
push
rorl
loopne
mov
xor
ljmp
or
xchg
pop
rorb
mov
rclb
in
jae
out
inc
mov
sub
jmp
mulb
out
xor
lret
cmpsb
roll
sub
pop
dec
mov
pop
dec
jl
hlt
lds
cmp
mov
adc
insl
out
mov
dec
cwtl
bound
inc
mov
cmpsl
push
in
jo
inc
pushf
fmul
scas
xor
lahf
gs
outsl
in
lcallw
mov
lahf
adc
sbb
test
es
cli
out
or
insb
dec
xorl
and
pop
out
js
xor
enter
sti
mov
add
stos
xchg
xchg
icebp
jmp
frstor
pop
inc
outsb
loop
xchg
inc
lock
in
or
xchg
pop
idivl
push
cmp
xchg
hlt
mov
jmp
xchg
fists
jl
pop
xor
lahf
and
xor
dec
mov
ret
cli
jb
popa
cld
and
rcl
rorb
dec
add
test
mov
cmp
sar
daa
mov
adc
lods
dec
jne
sub
jp
inc
dec
cmpsl
and
sub
or
repnz
mov
inc
pop
in
fsubrs
addr16
iret
bound
lds
test
or
in
dec
arpl
repnz
sbb
out
push
xlat
sarb
push
adc
xor
jno
fs
dec
dec
dec
or
jge
fsubrs
bound
pop
xchg
xchg
inc
and
pop
cld
sub
sub
pop
movsl
clc
arpl
inc
inc
outsb
mov
subl
dec
mov
cwtl
cmp
lcall
mov
fstpt
insl
lds
icebp
aaa
scas
ss
aaa
or
ljmp
jnp
movb
and
mov
xchg
fidivrl
out
jbe
adc
dec
test
push
inc
adc
fnstenv
push
fmuls
adc
xor
loopne
cmpsl
sahf
pop
cmpsl
movsl
adcb
pop
add
dec
push
rclb
ss
jo
insl
mov
loopne
int3
pop
andl
loop
adc
sub
dec
outsl
pop
dec
pop
jne
sbb
push
or
add
sub
jns
aad
jg
clc
sub
sub
add
repnz
lcall
mov
aam
mov
aaa
push
cmp
call
inc
outsl
leave
std
ret
xor
mov
insb
into
sub
xchg
add
mov
and
push
push
lods
and
xor
sbb
ret
pop
mov
test
stos
inc
mov
out
lea
repnz
int
push
aas
mov
fcoml
icebp
inc
mov
call
push
bound
mov
out
fisttpl
pushf
lcall
sbb
sbb
ret
or
hlt
scas
mov
out
fwait
aad
pop
ret
push
inc
sub
mov
and
adc
dec
jp
xor
jg
jb
push
and
outsb
pop
out
add
pop
inc
daa
push
subl
scas
fdivs
mov
mov
jmp
in
out
and
lock
pop
xor
cmp
inc
and
xchg
dec
add
ja
jbe
dec
cmpsl
aas
js
es
lea
rorl
nop
js
ret
in
sub
mov
nop
push
daa
mov
mov
rclb
xor
dec
fdivrs
pop
mov
sbb
imul
inc
jl
mov
jo
fwait
and
mov
clc
adc
mov
push
jle
push
jmp
ljmp
or
jmp
inc
fldl2e
daa
cmp
dec
add
test
xlat
push
cmp
std
mov
pop
in
lods
in
movsl
jbe
fiadds
add
sbb
inc
push
stos
lock
test
repnz
or
in
xchg
sbb
in
std
and
xor
sahf
mov
pop
fucomp
inc
push
adc
ficompl
aad
adc
dec
testl
les
aad
int
pop
cmpsb
iret
idiv
imul
mov
aas
lock
mov
fsts
mov
sti
xchg
stos
inc
pop
add
sub
sbb
xchg
loopne
or
test
mov
pop
push
ljmp
mov
scas
cld
xor
mov
test
leave
scas
and
sbb
in
pop
cmp
fdivrl
sub
push
out
sub
outsl
dec
xor
in
insb
mov
test
out
test
inc
int
fstps
test
pop
out
xchg
jb
lret
xor
mov
call
jo
rcr
lods
push
imul
pop
dec
jle
ret
add
testl
cld
push
xchg
mov
icebp
push
scas
je
addr16
mov
sub
adc
data16
sbb
lahf
mov
mov
xchg
xor
inc
outsl
sahf
bound
jp
pop
in
inc
or
sub
testl
pop
jmp
es
mov
rcrl
mov
insl
jo
or
ret
mov
jg
jl
roll
cwtl
cmp
push
inc
pop
sub
aad
dec
stos
and
sbb
push
dec
out
xor
mov
and
rcrb
insb
mov
xor
cmp
gs
shrb
sbb
mov
repnz
lcall
push
out
jo
insl
adc
push
pop
aad
mov
nop
mov
scas
adc
es
shrl
sub
stc
add
test
lea
dec
add
or
cs
frstor
inc
ret
pop
mov
dec
xor
pop
pop
stc
rcrl
insl
pop
pop
mov
mov
movsl
rcrb
scas
fsubl
inc
or
fldcw
push
cld
lock
add
cmp
das
mov
dec
int
repz
mov
aad
sub
movsb
cli
sbb
xchg
pop
xor
enter
xchg
cmc
pop
repz
iret
pop
xlat
dec
jne
sub
adc
scas
mov
pop
push
inc
leave
mov
inc
adc
ja
les
xchg
inc
stc
lock
call
fdivl
repz
xchg
mov
or
or
pop
lret
push
adcb
cmpsl
xor
jne
je
iret
test
repz
sub
loopne
int
inc
dec
or
clc
inc
or
rcrb
cmc
xchg
cs
pop
or
out
test
dec
lods
xchg
test
jno
in
in
fsubp
xchg
inc
sbb
imul
sbb
lahf
loopne
mov
push
jecxz
jg
popf
dec
imul
xor
and
pushl
decb
inc
insb
bound
add
jno
pop
fwait
aas
fcoml
cmp
sbb
iret
lods
and
jg
mov
mov
in
sbb
pop
daa
int3
hlt
mov
in
rorl
scas
test
add
stos
scas
imul
mov
mov
loope
dec
lods
or
push
sbb
cmpsl
xchg
mov
daa
jge
mov
int3
in
andb
push
cmpl
dec
mov
sub
mov
add
inc
jge
jl
aam
mov
fs
or
jbe
fnstsw
fnsave
lods
das
lcall
pop
sar
lods
inc
repnz
sbb
pop
cld
ja
pop
dec
rcrb
inc
push
and
jle
popf
mov
lods
mov
jmp
cmp
repz
stos
cmp
dec
imul
cwtl
seto
mov
sub
or
int
mov
push
call
inc
xchg
fidivs
arpl
or
xchg
sub
jnp
sub
inc
dec
imul
sbb
out
inc
adc
int
faddp
or
mov
popf
xor
add
fistl
cmp
lods
mov
out
sbb
jne
fwait
rorl
inc
cmp
scas
das
jns
push
andb
test
lods
add
pop
in
clc
jne
jae
movsb
xchg
push
adcl
out
repz
ret
leave
loopne
shrl
mov
sbb
out
jnp
add
pop
jae
pop
ja
flds
sub
cltd
popa
xchg
pushf
lahf
or
imul
cmp
int
jo
cld
int
nop
in
pop
mov
pop
inc
lret
inc
rcll
cmpsb
pop
stos
movsb
jmp
inc
mov
jbe
inc
dec
sub
clc
cmp
jecxz
iret
and
stc
sub
or
or
adc
cmp
movsl
ret
mov
sub
or
movsb
ds
mov
movsb
test
mov
xor
push
call
inc
jb
cwtl
jmp
add
cmp
loope
mov
cmp
push
xchg
rol
jns
mov
cmc
sbb
fimull
cltd
add
inc
mov
fcomp
or
cld
add
les
lods
sahf
xchg
sbb
xchg
insl
dec
inc
outsl
inc
loop
bound
pop
mov
jmp
fadds
loope
lret
bound
push
jmp
cmpsb
cs
adc
repz
mov
cmp
ret
cmpsb
sub
sbb
or
mov
pop
xchg
xorb
jl
fs
lock
repnz
stc
popf
xchg
shlb
mov
adc
fdiv
adc
loop
ja
les
scas
fisubs
jl
jbe
arpl
or
out
adc
xchg
dec
xchg
push
adc
test
sbb
or
mov
adc
or
stos
sub
or
dec
lea
and
test
enter
cmp
mov
xor
call
pop
push
popf
add
test
les
inc
mov
push
xor
and
or
jb
adc
fistps
dec
ljmp
push
repz
xor
push
adc
mov
dec
enter
mov
mov
push
ds
arpl
mov
rorb
addr16
aaa
stos
addb
rorb
cmp
and
pop
fidivrl
jne
out
lahf
insl
outsl
sti
sub
ja
mov
ss
jo
outsb
push
push
mov
fisttpl
and
icebp
in
in
cmp
lret
sbb
fisubl
pop
xchg
aad
jmp
das
pop
jle
jno
fisubrl
mov
jb
cmc
and
mov
pop
mov
inc
add
divl
aam
fbld
add
mov
and
jmp
inc
jno
add
sahf
cs
into
in
mov
cmp
int3
sub
loope
pop
cmc
aaa
jb
inc
or
movsb
cmpsb
andb
sub
and
aad
sbb
js
xchg
shll
pop
subb
aad
mov
std
cmp
sbb
push
clc
clc
add
aaa
push
aad
xchg
adc
fucomi
in
cmc
test
xor
adc
ss
mov
loopne
aas
int
roll
int
lods
push
mov
inc
mov
fsubl
or
sub
fwait
arpl
push
into
stos
xor
push
sbb
ljmp
or
pop
sub
movsl
xchg
xor
sbb
lods
pusha
mov
sub
sbb
cmp
dec
push
imul
cmp
stos
mov
inc
sub
add
data16
mov
mov
pusha
xchg
xor
stc
push
scas
lods
pop
add
mov
and
mov
push
roll
sbb
mov
daa
or
lock
mov
xchg
fistps
pop
inc
mov
fistl
push
ss
sub
test
loope
push
lock
enter
fldl
inc
stc
sbb
insb
pop
pop
sub
and
and
mov
xchg
jp
stos
pop
mov
call
jno
jo
cmp
loope
pop
adc
fucomp
insb
xchg
and
popa
and
pop
ja
test
pop
sub
arpl
es
in
or
out
test
or
or
sub
jno
jne
aad
mov
and
pop
and
xchg
adc
dec
jg
das
mov
stc
stos
xchg
test
in
xchg
fmuls
movsl
outsl
sub
sub
xchg
fs
popa
xchg
faddl
mov
xchg
mov
data16
fwait
sbb
xchg
fs
xchg
lea
xchg
push
jecxz
call
loope
xchg
push
scas
mov
xor
std
mov
inc
out
ret
in
pop
call
dec
dec
xchg
jae
mulb
sub
push
mov
adc
or
push
xor
jge
sbb
mov
push
lds
mov
push
add
out
insl
push
int
dec
in
xor
out
cmpsl
adc
bound
and
mov
popf
sbb
push
leave
popa
fs
mov
pop
jge
xchg
lods
jae
pop
and
xchg
pop
jnp
fwait
xchg
roll
fldl
popf
outsb
jp
sub
popa
popf
cmp
xchg
jl
inc
jns
test
mov
push
wrmsr
les
sub
adc
inc
fbstp
lods
in
dec
movsl
int
mov
or
cmp
ljmp
mov
mov
sbb
daa
sbb
pop
xor
mov
mov
pushf
pop
test
inc
icebp
dec
adc
adc
dec
push
push
js
popa
sub
nop
or
and
ficompl
leave
loop
sub
mov
dec
mov
mov
adc
mov
jmp
add
cmp
stos
jne
fucomp
ja
pop
cld
xchg
and
add
adc
inc
popa
mov
mov
js
xchg
scas
push
and
pop
or
add
xchg
les
fwait
xchg
mov
repz
lcall
and
outsl
xchg
or
aaa
adc
pop
inc
mov
sub
push
lds
mov
jns
icebp
add
mov
nop
mov
xchg
fsubp
outsb
bound
xor
hlt
imul
pusha
lcall
dec
int
sbb
mov
jns
sub
push
push
insl
add
out
push
jns
sub
push
inc
xor
clc
sub
push
test
aaa
or
pop
pop
mov
rcrl
dec
pop
mov
outsl
add
arpl
xchg
movsl
movsb
mov
add
test
mov
scas
add
nop
js
sbb
test
and
adc
int
je
pop
lods
clc
or
cmp
lret
std
stos
ds
cmp
push
ret
test
push
mov
faddl
jecxz
adc
popa
pop
fnstsw
mov
jmp
pop
push
or
xchg
jae
and
call
jmp
inc
mov
ret
loop
int3
sbb
mov
inc
or
and
push
fnstenv
std
in
bnd
stc
mov
dec
cmp
mov
mov
mov
pushf
outsb
push
test
int
jl
ret
fbstp
aas
pop
adcb
imul
jae
jmp
pop
sbb
leave
sbb
mul
hlt
add
xor
mov
repnz
es
fists
imul
or
jmp
jmp
dec
incl
xchg
jbe
sbb
adc
test
push
js
js
push
sub
sahf
xchg
push
pop
and
pop
adc
sbb
cmp
adc
push
movsl
out
inc
cmp
daa
mov
pushf
mov
enter
push
mov
dec
ret
lcall
push
cwtl
mov
jae
loope
push
mov
jl
jae
lcall
sub
lahf
nop
test
pop
aam
cmp
bound
mov
mov
cli
or
jle
pop
inc
add
or
pop
cmp
movsl
mov
popf
popa
ret
add
jne
xorb
aam
fld
js
cmp
lock
mov
jbe
add
pop
in
adc
jno
stos
inc
pop
sti
jp
mov
lods
cmc
pop
out
ret
or
mov
cmp
int
mov
fisubl
popa
inc
mov
movsb
ja
lret
cmp
lret
cmp
mov
dec
stc
das
fiaddl
cltd
pushf
ror
in
pusha
in
out
sbb
pop
pop
arpl
or
jns
jge
cmp
in
jp
jmp
xor
lret
pushf
aad
bound
dec
repz
cmp
sbb
sar
in
xor
pop
or
mov
pop
aad
cltd
xor
jne
mov
dec
jno
call
fsts
push
xchg
inc
and
cmp
mov
cmc
push
sti
hlt
push
jecxz
mov
mov
fstpt
out
outsb
pop
jp
dec
shl
xor
and
mov
push
fnstenv
lret
push
dec
or
loopne
call
movl
rcrl
xor
push
inc
nop
push
mov
dec
sti
andl
mov
mov
dec
or
push
and
popf
in
or
mov
adc
jbe
lods
mov
nop
test
in
pop
cli
add
addr16
ret
xchg
jmp
mov
rclb
xchg
ss
movsb
sarl
adcb
pop
cltd
xor
or
jo
aad
inc
nop
push
sbb
sub
pushf
xchg
ja
imul
jle
fldcw
dec
cmp
lret
sarb
sub
sub
dec
adc
jp
mov
jbe
mov
ss
sbb
outsl
xchg
inc
repnz
xchg
sub
dec
push
and
rcr
or
pop
stos
in
shlb
push
mov
shlb
xor
dec
mov
test
xor
loope
ret
int
or
or
incl
dec
into
dec
icebp
mov
in
test
stos
adc
pop
dec
pop
jp
lret
repnz
gs
daa
sbb
or
mov
sub
icebp
adc
add
lcall
sub
adc
push
in
in
push
out
dec
sti
sbb
cmp
mov
mov
mov
xchg
sti
inc
data16
lods
add
iret
mov
lahf
mov
push
insl
fldcw
cmpsb
pop
cmpsl
cld
sbb
ss
inc
xor
call
cltd
jb
xor
xor
xor
icebp
xchg
and
aam
push
xor
inc
adc
mov
sbbb
mov
mov
dec
enter
cmp
add
inc
inc
lock
mov
push
or
mov
dec
cmp
pop
mov
sbb
bound
push
addl
xchg
and
pop
cltd
in
cwtl
jae
bound
in
pop
mov
cmp
mov
cli
ret
ljmp
cs
push
push
add
or
sub
jns
imul
andb
xor
add
clc
inc
mov
mov
jmp
and
inc
data16
sbb
int
dec
jp
and
shl
cs
lahf
mov
inc
scas
and
dec
xor
and
inc
icebp
inc
das
mov
push
lret
je
sub
cmp
cmpsl
cmc
inc
or
inc
loopne
xchg
ret
add
dec
imul
fsubrs
imul
jl
xchg
je
loop
cld
jp
xchg
aaa
push
cmp
stos
lock
adc
orl
dec
dec
subb
add
sbb
add
pusha
pop
repnz
add
cmp
mov
push
scas
jb
pop
lea
pop
out
loopne
outsl
cwtl
outsl
cmp
mov
or
std
daa
or
dec
and
data16
inc
inc
leave
outsb
je
sub
push
arpl
in
mov
divl
push
mov
rclb
mov
sbb
pushf
pop
arpl
xlat
test
test
aas
mov
jp
inc
fisttpl
inc
out
xchg
and
lret
jmp
mov
push
imulb
and
adc
jne
arpl
lods
fidivrs
pop
mov
or
jle
jg
pop
leave
jg
shll
xor
sbb
xchg
scas
rorl
shr
movsb
sbb
int3
xor
addr16
daa
out
mov
fwait
popa
xchg
cmp
ret
pop
push
push
xor
pop
cmpsb
in
mov
dec
lret
or
adc
pop
push
and
xor
testl
in
pop
mov
mov
loop
lods
mov
mov
mov
cmp
mov
push
jnp
lds
jno
pop
inc
jecxz
lcall
in
je
adc
imul
or
sub
push
cmp
ficompl
inc
xchg
sbb
inc
int3
in
daa
fnstenv
or
or
popa
int
cmp
add
loope
filds
dec
lret
loope
dec
adc
mull
addb
sub
and
cwtl
dec
sbb
pusha
and
stc
and
xchg
fwait
dec
sahf
jmp
iret
mov
ljmp
xchg
xor
adc
adc
cmp
mov
dec
aaa
je
add
cli
inc
cmc
lock
fistl
decb
jb
mov
fsub
fcoms
push
mov
mov
jl
call
inc
mov
aaa
pop
in
divb
je
push
fwait
jne
dec
loop
mov
cwtl
xor
outsb
aaa
mov
lods
fiaddl
push
and
iret
inc
adc
adc
sub
stos
xchg
fsubs
sbb
push
pop
in
out
cmp
sti
cmp
push
sbb
lret
mov
out
cmc
stos
jmp
jecxz
insl
push
pop
movsl
inc
stos
xor
adc
ret
icebp
xor
push
movsl
dec
fs
in
xor
outsb
out
push
dec
jg
imul
xchg
mov
icebp
mov
push
scas
cld
in
mov
or
jmp
pop
loopne
adc
sar
lahf
jno
xchg
jge
xorl
jns
into
mov
cltd
jbe
push
lock
cmp
adc
pop
jp
push
lods
xchg
orl
mov
mov
in
lret
fdivp
icebp
and
leave
jns
js
and
jmp
in
or
ss
xor
xchg
loop
daa
ja
cwtl
jns
sub
cmp
aas
orb
xchg
imul
add
cmpsb
shr
or
xlat
fmull
imul
fwait
dec
insb
rcrb
inc
insb
cmc
mov
pop
filds
mov
sti
xchg
repz
cmpsb
jnp
xchg
int
sahf
cmp
push
repnz
inc
icebp
lahf
pushf
jbe
lds
mov
out
insb
int3
mov
inc
jnp
push
add
jae
repz
lret
dec
inc
push
pusha
in
xchg
mov
or
xchg
cs
test
pusha
data16
xor
xor
adc
orl
shll
cltd
mov
mov
sbb
add
and
cmp
pop
rolb
jg
lcall
sub
inc
inc
iret
std
jle
jns,pt
add
icebp
insb
mov
sbb
jecxz
stos
inc
mov
mov
cmp
dec
fisttpl
aam
pop
nop
or
jecxz
sub
aaa
cld
data16
dec
mov
scas
sub
pop
add
out
icebp
out
andb
rcr
push
and
ss
lods
jp
iret
fwait
loope
loope
imull
pop
loope
lods
or
movaps
fsubrl
mov
mov
fldl
add
sbb
and
loop
cmp
lret
adc
add
jae
repz
push
icebp
mov
pop
jbe
fimull
or
and
stos
arpl
and
les
ret
enter
adc
xchg
dec
xadd
push
cmp
pushf
pusha
stc
inc
xchg
pop
in
ror
push
jg
insl
lods
in
aam
pushf
push
xchg
out
cmp
shll
out
icebp
mov
mov
sub
in
lock
cmp
adc
mov
push
imul
sarl
inc
insl
sbbl
sahf
loope
bound
shlb
sub
inc
xor
mov
out
jecxz
mov
dec
xchg
in
data16
loopne
mov
pop
inc
lods
jae
and
fcmovu
push
or
or
and
into
popa
into
and
in
mov
js
jmp
insl
sbb
add
cmp
inc
sub
cmpsl
sbb
pop
iret
out
call
or
aaa
js
dec
xor
insl
xchg
sti
icebp
out
pusha
pop
and
sbb
daa
push
mov
lahf
sti
inc
mov
bound
mov
mov
or
xchg
and
imul
orl
xchg
aas
push
sbb
mov
aas
jp
clc
cmp
insl
pop
push
push
mov
lock
mov
pop
rolb
mov
pop
inc
fimuls
aam
mov
or
jno
adc
in
ljmp
mov
mov
fwait
repz
or
outsl
sub
dec
stos
notl
sub
pop
movsb
fildl
cmp
cwtl
stos
mov
mov
dec
xor
movsb
sub
pop
pop
cltd
daa
fmull
nop
xchg
sti
testb
sbb
iret
push
pop
mov
xchg
loopne
pop
mov
mov
xchg
fnsave
cwtl
call
cli
mov
pop
mov
cmp
mov
inc
rorb
jnp
xor
jo
sbb
sarl
je
jmp
xorb
pop
xor
mov
mov
and
lahf
adc
mov
loope
lcall
dec
inc
movsb
adc
stos
hlt
movsb
add
push
sar
mov
nop
mov
and
stos
aam
or
adc
ds
int3
push
mov
stos
mov
testb
adc
pop
mov
cmp
push
push
jge
lds
outsb
enter
mov
popf
js
cmp
and
jge
jge
cli
pop
mov
push
push
fdivr
mov
es
lcall
ja
data16
subl
aas
or
andl
jno
shlb
adc
add
lahf
pop
sbb
and
stos
xchg
adc
pop
rorb
mov
push
nop
rol
xchg
pop
sbb
sub
stos
sub
test
push
mov
nop
subl
xchg
cli
inc
cmp
shl
pushf
and
push
mov
aam
adc
repz
lds
out
sbb
popa
pusha
xchg
pop
xor
dec
mov
popf
dec
or
out
adc
mov
adc
or
enter
push
inc
daa
xlat
xchg
out
jl
mov
iret
in
jb
jle
in
cs
mov
jp
in
jge
bound
xor
int3
xchg
loope
and
sbb
ret
pop
jmp
stc
jbe
fcom
push
sbbl
out
add
sbb
xor
sub
mov
add
and
and
aad
mov
mov
xor
jo
sub
sarl
test
mov
push
and
pop
lret
pop
incl
sbb
mov
in
scas
subl
mov
adc
sbb
dec
fiadds
ficomps
pop
mov
push
sarl
loopne
cmp
xor
loop
mov
dec
sbb
loopne
call
into
dec
gs
xchg
cmp
adc
movsl
lds
cmp
sarl
xor
push
repz
push
mov
repz
xor
lcall
push
inc
bound
outsb
fcmove
pop
cmp
mov
add
pop
rcrl
fwait
xchg
push
adc
lahf
arpl
inc
inc
push
lea
adcb
cmp
push
jmp
std
fnstcw
jge
loopne
jp
std
cld
jbe
mov
sub
mov
arpl
xor
popf
xchg
ljmp
stc
inc
test
movsb
dec
dec
or
mov
dec
mov
sub
lock
into
inc
mov
sub
push
mov
adc
jecxz
jne
xchg
xchg
xor
sbb
pop
pushf
push
out
lret
push
iret
aaa
adc
stos
mov
test
adc
jae
mov
sbb
adc
sbb
and
repz
inc
into
xor
jbe
mov
xchg
in
add
cwtl
clc
lock
adc
mov
mov
out
stos
lahf
stc
add
repz
mov
clc
dec
xor
orb
test
jl
inc
inc
mov
mov
adcb
pop
ds
dec
pop
sbb
add
mov
ja
push
cmpsb
mov
adc
xor
push
jnp
scas
mov
icebp
mov
divb
mov
xchg
ljmp
inc
out
push
hlt
inc
nop
test
and
popf
iret
scas
fdivs
inc
outsl
pusha
mov
xlat
fldt
js
fbld
stos
dec
cmp
gs
std
repz
push
inc
dec
shl
sbb
icebp
cmp
push
or
out
arpl
insl
xor
sub
pop
cmpsb
cmpsl
pushw
std
mov
cmp
pop
sbb
xchg
xchg
dec
add
repnz
addr16
mov
ds
hlt
push
shrl
mov
scas
int3
pop
mov
test
or
mull
push
xchg
sub
mov
fiaddl
pop
pop
add
cmp
push
lods
sub
stc
repz
pushf
sbb
mov
stos
adc
mov
into
movsb
nop
nop
fildll
mov
repnz
jecxz
jp
mov
cli
cld
xchg
and
ja
mov
push
pop
ror
std
xor
mov
mov
js
pop
in
xchg
loop
jns
imul
sub
push
xor
add
pusha
arpl
and
daa
test
and
dec
xor
push
repnz
mov
das
sahf
lret
insb
mov
aam
clc
bound
mov
add
or
std
cld
repnz
push
push
test
fwait
popf
adc
mov
jae
cmp
adc
pop
or
cmpsl
jp
or
push
mov
bound
fildll
sbb
fdivs
xchg
fadds
adc
push
lcall
pop
ret
push
or
in
std
sbb
add
enter
ret
inc
daa
xchg
pushf
xchg
mov
sub
fldz
pop
mov
adc
stc
xchg
adcl
mov
xchg
push
ljmp
popa
shlb
adc
sub
xor
enter
xchg
sub
mov
hlt
and
jno
pop
cmp
pop
push
shl
push
mov
ret
sbb
or
mov
mov
pop
stos
ss
mov
pop
mov
ret
jae
ljmp
aaa
push
cmp
mov
inc
inc
mov
mov
or
es
jp
in
xchg
out
aaa
jp
cs
mov
adc
pop
xchg
dec
inc
sbb
insb
sbb
push
cs
out
push
mov
movsb
enter
or
neg
pop
cmc
jbe
test
lahf
aas
mov
daa
pusha
cmpsb
notb
xor
loope
lods
cld
call
call
dec
push
mov
mov
dec
push
and
out
and
movb
pusha
fs
fwait
rcrb
add
aam
lock
fists
jns
jmp
lahf
popf
aas
lret
adc
pop
push
pop
pop
mov
xchg
mov
insb
adc
and
iret
push
adcb
or
test
andb
cli
dec
inc
xchg
inc
fidivrs
hlt
popf
add
loope
stc
pop
or
pop
or
hlt
stos
dec
inc
inc
push
loope
adc
push
lock
push
fstps
xor
sub
repz
xor
or
pop
lahf
and
addr16
jl
jle
and
jb
jno
std
fldl
sbb
pop
icebp
and
xchg
fdiv
sbb
fwait
dec
push
mov
data16
jns
roll
rcrb
cmpl
cmp
test
jae
test
mov
enter
push
sbb
int3
hlt
pop
adc
mov
jle
insb
or
andps
pop
mov
mov
inc
mov
jecxz
xchg
xlat
mov
pop
push
cmpsl
filds
or
into
dec
sbb
test
pop
jno
imul
push
mov
cmc
das
jo
jne
or
jp
test
repnz
popa
and
jae
push
psubd
or
adc
fimull
inc
and
fsts
clc
dec
fwait
push
mov
jp
mov
xlat
pop
push
sbb
jge
add
jo
fs
or
xor
adc
pop
repnz
xchg
or
adc
imul
bound
lret
and
adc
fwait
js
and
rcl
sub
or
add
pop
add
out
pop
in
jbe
jns
dec
int
sbb
ljmp
mov
cmp
arpl
jge
sbb
xchg
push
jle
xor
sub
pop
repz
push
dec
inc
stc
je
sub
pop
and
aas
sub
loop
xchg
add
cmc
jle
in
inc
add
out
fcompl
outsl
jnp
dec
jnp
xor
and
dec
cwtl
or
sub
and
sarb
mov
xor
inc
jle
pop
pop
jmp
movsl
sti
xor
das
inc
sahf
mov
insl
jns
popa
dec
aaa
and
or
lea
clc
mov
fwait
call
cltd
decb
scas
andb
fists
in
or
pop
sbb
rcrl
fisubrs
das
fmull
fldenv
mov
in
pop
cmpsb
jb
out
xchg
ja
dec
fisubrl
fisubrs
daa
xchg
icebp
cvtps2pi
lods
sbb
mov
fwait
dec
xchg
push
cmpsl
fildl
lret
imulb
push
pop
dec
cmp
xchg
fdivrl
inc
in
sub
int3
add
sbb
lret
sbb
add
loope
jmp
sub
mov
and
fwait
dec
out
gs
or
sbb
mov
in
mov
and
mov
cwtl
push
inc
xchg
jmp
jns
sbb
call
fs
dec
lea
add
lds
jg
ljmp
test
out
repnz
leave
popf
aaa
dec
int3
lds
jg
scas
mov
in
iret
shrl
push
xchg
mov
mov
push
test
arpl
mov
or
push
and
je
sbb
ljmp
mov
dec
rcl
xchg
scas
and
pop
dec
aaa
mov
push
mov
enter
std
and
cmpsb
fisttpl
leave
or
dec
push
andb
filds
jne
inc
mov
or
cwtl
inc
das
mov
shll
je
adc
scas
les
bound
and
or
mov
xchg
sub
push
subb
mov
enter
mov
adc
ret
xchg
cmpsl
mov
adc
stc
int
fucom
sbb
imul
mov
mov
hlt
insb
pop
out
cmp
dec
js
aaa
xor
fs
xchg
pusha
and
or
outsl
cmp
cmp
hlt
pop
addr16
xor
loopne
out
inc
mov
out
movb
mov
icebp
add
sbb
add
and
data16
push
xchg
stos
in
push
hlt
idivb
flds
aas
xor
mov
sti
scas
roll
jmp
or
test
repnz
cmp
pandn
or
sahf
and
mov
inc
arpl
and
inc
aaa
mov
mov
sahf
fisttpl
mov
sbb
cltd
loopne
xchg
je
lret
sbb
mov
jge
dec
rcr
mov
push
cld
xchg
pusha
lcall
mov
and
stos
adc
cwtl
sub
dec
mov
cmp
ds
pop
sub
test
mov
jle
loopne
push
aad
outsl
jnp
jl
xor
xor
sbb
nop
pop
and
out
iret
sub
insb
js
sub
dec
or
pop
and
in
sub
popf
jmp
jmp
pop
lods
jp
sbb
lret
aam
orl
pop
or
outsb
adc
add
add
or
sub
mov
lret
xor
pop
shll
call
arpl
and
popl
andl
lds
xchg
arpl
insb
or
sti
cs
dec
insb
xchg
js
add
dec
loop
fists
add
aaa
jg
mov
mov
test
push
out
push
mov
popa
or
push
mov
adc
inc
and
out
and
pop
push
sub
cmp
outsb
cmpsb
pop
pop
test
jno
leave
rolb
cltd
dec
jae
dec
mov
sbb
cmpl
add
xchg
inc
sahf
fimuls
sbb
push
pop
call
push
pop
pop
stc
pop
cmp
add
mov
or
jns
jo
jbe
mov
sbb
aas
push
sub
nop
data16
not
ss
lods
cld
and
and
test
aad
cmp
cltd
push
in
inc
cli
sub
fbld
clc
divb
ljmp
or
jl
xchg
scas
or
pop
lods
sbb
iret
mov
test
inc
mov
in
bound
ficoms
nop
gs
aaa
in
test
and
and
jae
mov
pop
fwait
pop
imulb
call
push
loopne
fiaddl
into
xlat
jecxz
lds
aaa
lcall
sub
ljmp
pop
sbb
push
jge
mov
sub
push
inc
shlb
inc
mov
or
sbb
sbb
cwtl
in
enter
rolb
sbbb
les
push
and
mov
sbb
andb
int
add
fidivl
sub
out
adcl
mov
fsubrs
arpl
mov
inc
ljmp
jp
inc
rcr
mov
add
in
add
sahf
adc
pop
fnstenv
aas
je
or
sub
and
pop
mov
cmp
xlat
xor
mov
in
xlat
xchg
cmp
sbb
shlb
test
xchg
add
icebp
hlt
idivl
insl
cli
pop
mulb
jecxz
rorb
pop
in
test
daa
dec
loope
mov
inc
ror
cmp
jo
cmp
pop
cltd
std
nop
lcall
stos
and
je
inc
lcall
push
push
jmp
mov
rorb
aas
fisubrs
xor
sub
das
test
sbb
and
mov
dec
inc
push
and
pop
lret
mov
fcomip
loopne
stc
adc
or
pop
jo
in
sub
and
dec
ficoms
xchg
sarb
stos
push
lahf
mov
sbb
gs
xor
mov
jge
fstpl
lods
shll
mov
roll
push
ds
aas
pop
or
xor
add
rcrl
mov
push
imul
mov
sub
cld
dec
dec
push
xor
das
mov
mov
ds
aaa
call
lods
out
int
rcr
add
outsb
iret
inc
into
stos
push
jecxz
xchg
in
les
test
mov
loopne
xchg
push
dec
push
cltd
mov
cmpsb
stos
stos
lret
sbb
aaa
xor
pop
outsl
mov
out
xchg
das
fstpt
push
push
or
inc
lds
aam
mov
sub
rcll
xor
sahf
shlb
jb
stc
cmc
jo
xchg
rclb
scas
es
imull
push
test
xchg
add
out
jl
movsl
cli
mov
or
jo
lahf
jae
jecxz
scas
aas
jl
iret
lcall
out
popf
test
sub
xchg
cmpsb
mov
xor
dec
in
add
add
mov
cli
sarb
sub
fiaddl
test
loopne
bts
inc
add
iret
pop
or
mov
loopne
pop
subb
movsl
dec
adc
ret
ficoml
jge
pop
jnp
pop
rcll
dec
push
fimull
xor
jnp
push
lret
jns
sbb
repz
sub
mov
daa
sbb
cltd
lods
shll
inc
lea
pop
iret
das
pushf
shrl
push
push
inc
xor
xchg
sub
mov
xor
dec
mov
pop
insl
in
rolb
ljmp
loopne
xor
sub
test
outsl
rcr
clc
or
jle
mov
xchg
xor
icebp
jno
mov
xchg
push
mov
xchg
push
sar
out
jns
lahf
lcall
mov
lret
dec
in
jnp
ror
cli
inc
dec
inc
or
mov
pop
pop
enter
lds
ficoml
jp
fstpt
das
and
add
loope
mov
jl
or
lock
shl
inc
icebp
lds
cmp
push
pop
mov
fimull
mov
or
xchg
data16
jnp
mov
push
lods
mov
adc
in
jg
loope
inc
push
dec
leave
push
sbb
cmc
xor
lahf
shrb
lock
or
cmp
les
xor
sarb
arpl
rcrl
jge
jbe
cmp
popa
pusha
je
std
mov
mov
adcb
pop
add
addr16
stos
iret
jp
cmp
mov
data16
sbb
in
lahf
xchg
push
or
dec
shrb
fnstenv
fstpl
out
xchg
enter
mov
cmc
insb
test
ret
and
jb
jge
jecxz
lock
int3
pusha
add
sar
cmp
bound
inc
push
or
mov
loope
iret
pop
mov
std
rorb
std
jl
mov
rol
and
lahf
rcr
loop
push
cmp
movsb
in
push
dec
aaa
sub
pop
cs
xlat
mov
jp
ja
testb
mov
cmp
subb
roll
mov
lret
ja
cltd
xchg
push
and
inc
xchg
inc
ss
mov
pop
mov
int3
and
mov
popf
or
jge
and
push
xchg
and
lret
out
stc
adc
je
sbb
cmp
mov
sbb
rcr
xor
in
pushf
cmpsl
dec
push
scas
push
loopne
jmp
cld
flds
mov
mov
jg
push
sarl
pop
pop
dec
popf
in
out
not
sub
lods
push
mov
test
rol
pop
jbe
sarb
mov
mov
mov
mov
test
pusha
xchg
out
shll
mov
outsl
pop
dec
mov
inc
sub
call
icebp
mov
pop
cmp
or
test
sub
insb
lods
enter
jle
mov
aas
push
ja
cs
add
jg
adc
or
jecxz
arpl
movsb
cmp
push
lret
inc
and
ss
mov
sub
mov
or
sub
pushl
add
loope
pop
mov
push
shl
mov
xchg
out
push
je
mov
cmp
pop
nop
iret
mov
sar
push
or
sub
and
repz
sbb
scas
pusha
jecxz
ds
adc
rcll
sub
testb
stos
lret
icebp
mov
into
in
cs
cmp
jmp
pop
popf
lods
push
std
xor
mov
hlt
insl
push
mov
jae
jmp
mov
pop
stc
je
out
and
adc
sar
dec
leave
pusha
or
sbb
fstpt
outsl
lods
jne
je
ljmp
mov
dec
hlt
arpl
pop
pushf
daa
cld
jl
push
fwait
sub
cmp
repnz
repz
ror
jp
pop
lret
fsubrs
dec
sbb
fbstp
sub
sbb
pusha
dec
orb
test
ret
popf
xchg
pop
xor
and
mov
sub
lret
into
push
mov
fcoml
popf
and
sbb
outsl
or
inc
mov
test
and
lea
popa
cmp
mov
imul
and
popa
mov
out
mov
mov
cli
mov
pop
das
cmp
sbb
push
xor
ja
pushf
pop
push
xor
sbb
sarb
scas
dec
aas
sti
out
or
xchg
and
pushf
xchg
xchg
cmp
repz
out
adc
dec
fadds
add
test
pusha
lock
jmp
sti
test
enter
repz
pushf
repnz
adc
cwtl
mov
mov
arpl
cmp
into
cmp
inc
sub
pushf
adc
xchg
fdivs
inc
mov
cli
cmc
cwtl
insb
push
ss
xchg
lret
inc
adc
mov
cmpsl
xor
sarb
push
inc
fwait
sar
inc
xchg
xor
cmp
int
xchg
scas
jl
xorb
xchg
push
jae
cmp
fdivrs
sbb
or
fwait
in
and
sbb
lock
cmc
stos
adc
inc
pop
and
bound
xchg
aas
mov
xchg
sub
sub
int3
ljmp
mov
adc
sti
mov
jae
in
ds
repz
push
pop
or
repz
aas
iret
mov
sbb
notl
out
sub
cs
in
roll
add
loop
mov
xor
out
push
aam
mov
filds
jae
sahf
dec
jl
sbb
ret
stos
xlat
sbb
mov
or
ret
aaa
push
jmp
sbb
cmc
ljmp
pop
popf
lods
outsb
ljmp
dec
out
repz
seta
in
pop
enter
pop
fldl
lds
xor
adc
or
or
inc
call
dec
xchg
jp
sti
in
out
fildll
pusha
les
stc
pmaxsw
adc
jp
mov
jle
jge
sti
repnz
ror
xlat
insb
pop
cs
aam
hlt
addr16
xlat
fwait
push
adc
mov
push
mov
cmp
jl
push
xor
push
jne
push
movsb
mov
hlt
repnz
or
iret
dec
iret
repnz
adc
push
in
fstl
jge
mov
jbe
sub
dec
dec
dec
push
sub
sub
fidivs
scas
je
push
or
xchg
lret
int
push
xchg
add
add
adc
movsb
movsl
jnp
jns
pop
inc
mov
add
push
push
loope
add
inc
out
pop
repz
sub
mov
pop
and
repnz
shll
mul
out
fcompl
test
lods
notb
mov
xchg
adc
in
sarl
add
or
stos
aad
and
jge
data16
stc
nop
idivb
popf
and
leave
adc
cmp
push
dec
add
popf
nop
xchg
jnp
xor
test
ss
fsubrl
les
push
pop
cmpl
inc
mov
or
das
popl
call
pop
push
jge
push
pop
adc
push
push
daa
int
test
xor
mov
ret
mov
mov
cwtl
dec
lret
cmpl
sti
ja
inc
popa
data16
js
push
mov
dec
dec
cli
inc
mov
inc
add
jno
int
jns
mov
mov
mov
fdivrl
mov
vpcmpeqd
mov
popa
jge
adc
or
push
mov
jmp
mov
pop
fcmovbe
push
ja
sbb
xor
daa
mov
ret
sbb
out
call
and
in
stos
sub
sbb
inc
lock
xor
dec
ret
pusha
push
fisttps
lcall
mov
add
sub
cmp
mov
insb
sahf
cmp
in
pop
xchg
inc
pusha
inc
filds
sub
adc
jmp
mov
cmpsb
xor
dec
cmp
das
sub
cmpb
jg
cmpsb
pop
jnp
jbe
sbb
dec
mov
outsb
cmp
mov
jmp
mov
or
ds
mov
inc
xchg
fisttps
sbb
addr16
adc
add
sar
or
dec
push
dec
fs
call
dec
daa
mov
imul
fs
xchg
ret
or
dec
add
in
fs
imul
push
xorl
adc
repnz
dec
icebp
add
lods
push
mov
inc
clc
gs
inc
pop
mov
mov
aaa
orb
cmp
inc
divl
sub
inc
ret
jae
shll
call
daa
xor
sub
push
arpl
aad
adc
pop
mov
xchg
out
fsubs
pop
fmull
outsl
icebp
mov
xor
sbb
xchg
adc
mov
scas
jne
inc
pop
cmpsb
js
clts
xor
rcll
mov
mov
pop
lea
and
pop
fs
sbb
dec
lret
mov
loope
icebp
mov
jno
add
das
scas
js
lea
adc
jbe
jbe
ret
mov
or
nop
pop
inc
movl
cwtl
aaa
mov
mov
sub
test
inc
jl
cmp
push
jp
popa
push
mov
mov
ljmp
add
dec
shrl
incl
hlt
jo
mov
cmp
xchg
cmp
leave
enter
jmp
sub
je
scas
pushf
popa
icebp
test
iret
ja
adc
and
clc
xlat
pop
mov
mov
cwtl
rep
adc
sub
insb
fdivr
adc
sub
or
into
mov
jne
sbb
ljmp
push
shlb
or
cwtl
pop
imul
cli
sbb
nop
je
pop
mov
stos
sub
pusha
in
subb
dec
enter
cmpsb
ds
test
xchg
sahf
pusha
out
jl
data16
pop
in
xchg
sbb
or
fldenv
jne
scas
adc
push
out
test
pop
and
stc
pop
push
adc
pusha
xchg
push
mov
lds
addr16
jbe
inc
xor
mov
adc
rdmsr
ljmp
imul
orb
outsb
scas
rolb
xor
and
fwait
jb
dec
cmpsb
sti
mov
xchg
cmpsl
xchg
dec
xchg
fnstsw
cli
mov
outsb
outsl
cvtdq2ps
sbb
mov
mov
cmpsb
cmp
push
inc
lcall
cmc
std
push
sub
into
mov
pusha
cmpsl
shr
fists
popa
xchg
shr
xor
adc
mov
out
adcl
ret
mov
adc
iret
sbb
fdivr
lock
pushf
int
xchg
ja
lahf
mov
mov
lods
in
xchg
xor
out
inc
pop
mov
dec
add
sbb
js
adc
xor
outsb
mov
and
dec
stos
out
mov
or
scas
cmpsl
lods
mov
rcll
in
das
pushf
xchg
xor
mov
jno
mov
sbb
xor
jp
dec
jp
or
pop
fbstp
xchg
imul
punpckhwd
lds
xchg
dec
push
xor
popf
mov
sub
mov
adc
xor
gs
jno
add
test
fsubrs
jnp
data16
aad
mov
lahf
in
adcl
mov
sbb
sar
aad
out
mov
je
lds
jge
pop
or
xor
lahf
mov
mov
cmp
test
shll
stos
mov
aas
push
mov
inc
push
clc
mov
dec
xchg
xor
sbb
or
xchg
mov
sti
lock
inc
inc
lds
movsl
das
xor
adc
out
push
dec
inc
sub
pop
sbb
ds
in
or
gs
pop
or
mov
pop
addr16
dec
loope
mov
sbb
jecxz
insb
xchg
out
xor
jge
repz
std
mov
daa
pop
and
jns
mov
rorl
xor
pop
pop
adc
fldcw
jbe
daa
mov
gs
mov
ljmp
xchg
mov
adc
ljmp
addr16
dec
and
cmp
out
mov
je
xor
cmpsl
leave
mov
decl
jge
dec
out
test
sbbb
repz
sbb
push
mov
jge
pop
add
lds
xchg
xor
sbb
test
mov
aaa
sbb
and
test
push
xchg
adc
addr16
pop
fstl
fistpll
les
inc
cmp
push
in
jne
fdivr
test
cmp
xorb
movsl
sub
pop
cmp
push
fwait
jp
cli
popf
jmp
pop
lods
jb
out
in
cmpsb
push
lods
pushf
scas
jns
mov
xor
aad
lock
mov
testb
es
dec
daa
mov
stos
push
jae
dec
bound
xor
fs
dec
ljmp
cmpsb
add
cmp
addr16
jnp
push
xlat
and
xchg
repz
loopne
inc
pop
mov
inc
sub
xchg
pop
add
xor
xor
cmp
rcr
xor
jo
mov
xor
cmp
daa
or
cmp
push
fsts
es
mov
or
inc
pop
inc
lods
int3
dec
lea
ror
addr16
sub
into
sub
sbb
pop
lret
dec
repz
aaa
mov
push
push
cmp
pop
xchg
mov
repnz
aad
es
addl
stos
ljmp
lea
dec
cmpsb
sbb
test
cmp
mov
imul
fwait
mov
loopne
push
jne
popf
lret
xchg
test
inc
jge
insb
fcomip
std
dec
aam
jno
scas
and
decb
cmp
push
shrb
das
in
adc
push
call
inc
or
mov
push
inc
mov
jmp
mov
cmp
xchg
fdivrl
mov
jl
mov
cmp
pop
dec
pop
ret
inc
ret
mov
mov
add
cmp
mov
cld
adc
push
mov
pop
inc
sbb
call
test
out
cmp
xchg
lods
mov
jl
fcomps
cmp
mov
pushf
mov
divb
add
add
jnp
jmp
sbb
pushf
push
xchg
test
lea
inc
addr16
pop
lret
add
pushl
popa
sub
cli
cltd
dec
sub
sbb
dec
int
shrl
or
mov
test
or
mov
jbe
in
outsb
sbb
jnp
popa
sub
push
sub
leave
cmc
popa
push
imul
add
shll
stos
mov
shll
push
xchg
xchg
xor
adc
push
lods
add
xorb
mov
cmp
int3
or
mov
fnstsw
mov
mov
stos
test
and
push
cmovno
mov
stos
fsubrl
dec
jmp
ja,pt
lret
out
adc
fcmovu
and
mov
xorb
jmp
lahf
jne
pop
dec
test
cli
and
jl
inc
and
dec
negb
stc
icebp
aam
ljmp
mov
iret
pop
and
rcrl
js
sub
xor
scas
mov
jp
sahf
or
loop
and
inc
fnstcw
jae
lods
mov
and
jg
jae
das
cld
mov
in
dec
and
sbb
loope
mov
sbb
or
jae
mov
mov
in
stos
sbb
and
and
fcoms
dec
rolb
insb
jl
cli
mov
dec
push
cli
arpl
sbb
imul
mov
stos
xchg
dec
jge
incb
pusha
push
lods
ja
popa
filds
dec
loop
repnz
aam
or
xor
out
inc
dec
cmpsb
mov
pop
jns
or
adc
push
jp
mov
dec
or
ja
fwait
sbb
mov
ja
lcall
adcb
insb
adc
pop
ds
notb
cmp
mov
push
jecxz
out
mov
ja
outsb
sub
mov
adc
jl
mov
xchg
cmp
loop
sbb
and
in
fst
rolb
inc
sub
lret
jmp
sarl
jae
scas
lds
inc
data16
lret
ds
nop
push
inc
jmp
sub
xlat
ds
cmpl
add
clc
loope
iret
sbb
mov
test
fistpl
xor
dec
imulb
and
push
scas
popa
fcompl
xchg
daa
add
outsl
loopne
push
in
insl
repz
xor
out
inc
lods
loopne
and
lcall
mov
stos
cld
and
fwait
cmpb
dec
into
movsl
aaa
mov
jmp
in
sbb
aaa
scas
jne
cmp
cmp
out
mov
imulb
cs
cmp
into
or
mov
mov
stos
out
loopw
xchg
jnp
mov
mov
arpl
repnz
es
shr
lock
sub
jno
push
mov
xor
mov
test
roll
and
in
stos
lods
sub
xlat
add
in
dec
fdiv
stc
leave
push
or
shlb
ret
inc
mov
xor
jns
fisubs
inc
shll
sub
mov
aad
add
xor
jae
mov
pop
out
fwait
and
nop
pop
pushf
hlt
xor
je
cmpsl
add
scas
xor
sub
jb
pop
loopne
xchg
sub
jp
aad
js
xchg
xor
jle
adc
adc
imul
add
mov
pushf
leave
lock
imul
dec
icebp
scas
clc
shlb
cmp
fidivrl
fstl
ret
pop
loop
jbe
sub
lods
xchg
dec
push
hlt
arpl
mov
cmc
mov
sarl
rol
or
jl
cli
mov
cmp
mov
out
xchg
js
imul
fidivrs
jecxz
int
sub
movhps
pop
lret
dec
cwtl
push
jno
and
mov
es
fcmovb
xchg
xor
stc
jmp
pop
sub
cmovle
test
jg
iret
or
scas
ror
lock
jge
cmp
mov
repnz
loopne
outsb
cmpsb
mov
pop
jo
mov
cs
test
jmp
cmp
mov
lock
outsb
outsl
pop
jnp
add
ret
and
push
sub
std
fsub
addr16
pop
jb
fbstp
cmpsl
mov
lods
dec
insl
dec
je
repz
push
cmp
add
fcmovb
adc
jg
cmp
and
aam
cmc
pop
jno
jg
inc
lods
xchg
add
add
inc
ret
mov
nop
push
incb
mov
pop
lret
stos
pop
or
add
push
shr
xchg
xor
into
aaa
bound
enter
sub
scas
jb
enter
inc
push
pop
mov
sahf
pop
pop
loop
dec
or
gs
dec
leave
sub
sub
out
jo
cmp
xchg
mov
lcall
repz
jge
and
ret
filds
xor
sar
test
sub
insb
fsub
lret
xchg
cld
adc
test
jg
jp
mov
scas
cmc
mov
mov
inc
and
sub
mov
add
jns
fdivl
lods
dec
es
jae
aad
arpl
int3
add
inc
mov
mov
xchg
cmpsl
pop
nop
cs
movsb
sbb
fcompl
lea
dec
cltd
jnp
xchg
out
cmpsb
jbe
ds
les
icebp
fiaddl
fisttpl
aad
push
adc
jecxz
jno
stos
push
jne
cmc
cmpsb
mov
daa
sbbl
gs
push
add
pop
add
enter
stos
dec
xchg
mov
mov
sbb
jae
push
loope
and
ljmp
sbb
insl
mov
outsb
jnp
imul
subl
mov
mov
mov
fldenv
push
insb
adc
cmpsb
sbb
cmp
int
out
sbb
in
mov
inc
dec
dec
jge
mov
and
mov
adc
mov
adc
out
mov
mov
fildll
test
and
fs
sbb
push
in
dec
in
stos
and
in
cmp
xor
xchg
lods
mov
fldpi
repnz
cld
data16
xchg
jl
aad
mov
pusha
ret
test
xchg
xor
es
outsl
mov
pusha
idivl
call
adc
arpl
sti
jbe
ljmp
ja
sti
mov
cmp
push
cmp
cmp
or
cmp
push
es
shll
sahf
or
daa
test
inc
jecxz
loop
mov
xchg
sbb
pop
dec
ljmp
scas
loop
jno
daa
out
jae
and
cwtl
in
xchg
stos
in
push
stos
xor
push
fwait
pusha
or
inc
test
jae
lea
dec
scas
or
rcrb
cmp
test
notb
sbb
cmp
dec
add
fs
or
sbb
push
xor
mov
popa
xor
popf
cmpsl
fs
mov
mov
aas
inc
or
repnz
imul
addb
and
test
push
popa
gs
mov
mov
hlt
or
inc
fs
les
loope
out
fcmovu
mov
jo
jle
int
jg
xchg
notb
scas
sbb
lds
xchg
push
cld
mov
popa
into
in
mov
jno
outsl
in
or
or
xchg
lcall
aam
sti
mov
dec
adc
in
mov
and
jnp
mov
push
mov
mov
imul
loop,pt
mov
adc
icebp
sahf
mov
mov
icebp
push
lcall
ja
cmpsb
mov
repnz
and
xor
mov
xchg
lahf
cmpsl
enter
xor
and
jno
jmp
mov
sub
xchg
inc
mov
sahf
pop
pop
js
imul
sti
mov
pushf
jae
bound
into
out
ret
fdivs
mov
mov
pop
adc
pushf
push
mov
adc
lret
sarl
clc
out
inc
push
or
movsb
mov
sbbb
sbb
xor
xchg
xor
int
mov
push
repnz
dec
cltd
dec
pop
out
out
movsl
adc
add
cmp
mov
addr16
out
ret
leave
pop
sti
shrb
movsb
jbe
xchg
test
out
dec
icebp
cmpsl
sub
outsb
sub
jl
inc
cld
xchg
push
push
enter
xor
mov
and
dec
mov
lea
cmp
adc
pop
push
push
adc
mov
inc
xlat
jno
push
and
adc
out
pop
bound
insl
outsb
mov
sub
iret
xchg
addr16
int3
adc
cli
int3
sbb
std
xor
jne
push
add
pop
cs
int3
push
out
or
fs
pop
sbb
mov
and
lcall
pop
dec
fnstsw
cs
jnp
stos
repz
iret
or
pop
xor
jecxz
and
push
adc
aas
sub
or
repnz
xchg
mov
ljmp
dec
dec
clc
dec
shrb
push
jns
lods
inc
cmc
push
les
imul
popf
push
ret
push
std
pop
xchg
loopne
xor
fcoms
or
daa
les
mov
lcall
sbb
movsl
jbe
cmp
jbe
sbb
out
xchg
and
test
rcrl
sbb
jle
pop
push
jg
lods
fcoms
insl
mov
clc
push
loope
stos
imul
ret
sbb
adc
mov
call
pop
adc
pop
stc
mov
mov
loopne
mov
popa
shl
cmp
incb
jb
push
shl
jge
wrmsr
cs
inc
rcll
fstl
nop
daa
sub
sbb
sahf
jecxz
pop
and
pop
lods
insl
hlt
fnstenv
dec
std
les
mov
rorl
arpl
fcomps
enter
leave
mov
add
pop
fwait
or
int
or
jl
push
cli
xchg
adc
ficoml
jne
ds
xlat
shl
dec
loop
push
cmpsb
cmp
pop
xorb
and
fcomp
pop
push
dec
nop
int
jge
pop
leave
bound
in
mov
inc
add
add
cmpb
clc
pop
in
lret
cmp
jnp
leave
shll
pop
lods
loopew
iret
sbb
mov
int3
fildl
leave
int3
adc
pop
das
cltd
divb
popf
or
mov
fwait
scas
shll
test
scas
rcr
add
add
jb
or
or
pop
sahf
sub
pusha
add
iret
nop
aas
push
push
aad
mov
rcrb
in
ret
loop
out
stc
jo
xchg
xchg
pop
iret
adc
cwtl
das
cmc
xlat
or
aaa
or
and
iret
ret
fdivs
pop
mov
xchg
xor
cmp
cmp
int3
push
mov
dec
test
or
xor
insl
imul
sub
ret
mov
fidivs
inc
jo
sbb
shl
xor
inc
aad
sti
fisubrs
aas
xchg
cmp
jo
sbb
dec
jl
adc
out
cmp
imulb
xor
cs
sub
mov
jns
sub
ss
xchg
jne
enter
adc
sbb
inc
sbb
sub
into
push
pop
sbb
hlt
mov
pop
stc
inc
xchg
outsl
vcmppd
loope
addr16
push
push
out
and
lds
adc
and
xor
mov
dec
mov
stc
dec
cmp
sub
sub
sbb
inc
loopne
mov
stos
nop
insb
lcall
xchg
rcrl
pop
inc
push
xor
cmp
neg
push
pop
inc
pop
pusha
push
mov
outsw
ror
xchg
leave
xchg
mov
movsl
popf
cmp
mov
and
shlb
clc
fcmovu
dec
pop
mov
imull
mov
rcr
mov
ret
pop
sbb
sub
in
lcall
mov
fimuls
add
inc
and
and
mov
out
mov
or
mov
cmpsl
int
push
sub
push
lods
lds
mov
jge
test
add
mov
cmpsb
das
or
and
mov
fdivr
add
pop
scas
adc
pop
insl
mov
xor
out
or
dec
mov
mov
or
mov
or
sub
and
mov
inc
cmp
inc
nop
pop
loop
xchg
xchg
mov
mov
jmp
mov
xchg
push
mov
in
test
loope
jb
popf
push
call
mov
jne
lock
aad
fsubs
rolb
out
cmp
enter
movsl
xor
sub
jb
add
adc
imul
scas
push
jecxz
pop
push
loopne
stos
xchg
jecxz
jmp
cli
dec
loop
inc
and
or
dec
jns
sbb
and
lret
sub
lret
mov
adc
sub
adc
mov
mov
test
pop
idivb
inc
jbe
cmc
mov
loopne
stos
cmc
gs
lods
divb
fstp
jns
mov
push
dec
dec
cmp
dec
cmpsl
dec
adc
mov
js
push
push
sub
lret
mov
cmp
cs
jle
add
lret
imul
cwtl
xchg
xchg
mov
xchg
mov
fsubl
and
cmovge
fstl
stos
push
fsubrl
mov
jecxz
sub
stos
les
cmp
cmp
dec
stos
popa
aad
shrl
leave
sbb
and
and
xor
jbe
mov
pop
or
cld
je,pt
mov
adc
xchg
dec
std
mov
sbb
push
rolb
bound
data16
mov
fsubp
fnsave
mov
mov
mov
jle
shl
adcl
sti
mov
xchg
add
mov
std
insl
enter
shrl
imul
fimuls
xchg
add
aad
lret
or
xchg
repz
mov
es
xchg
jns
xorb
inc
int3
xchg
popf
popf
shll
loope
and
lret
pop
inc
daa
addr16
in
jmp
cmp
push
gs
sub
mov
mov
clc
js
inc
std
sub
dec
jp
mov
pop
adcb
or
orl
js
sbb
xchg
or
sbb
ja
pop
es
inc
jg
out
mov
es
mov
out
pop
mov
rcrb
xchg
pop
pushf
jne
cmpsb
lods
jle
lret
ds
mov
mov
je
jno
dec
or
pop
mov
cmp
mov
adc
aas
sbb
es
rorl
pop
push
test
mov
cmp
sbb
or
pusha
js
shl
adc
rcrb
imul
fldl
add
mov
xor
xchg
iret
sub
jle
jl
add
jae
dec
jg
sti
in
inc
sub
lret
and
dec
movsl
jmp
and
ficoms
mov
add
mov
dec
arpl
and
enter
into
ljmp
shll
add
fisttps
pop
pop
xchg
xchg
mov
shlb
in
iret
or
xchg
cmp
bnd
sbb
cmp
lock
lcall
lock
xor
clc
repz
xor
sti
mov
sarl
dec
add
inc
dec
or
add
lea
jnp
jge
cwtl
adc
out
jno
sub
out
jno
pop
mov
add
repz
adc
dec
movsw
pop
pop
mov
pop
and
inc
lret
xchg
cmp
push
test
das
jb
xchg
push
mov
add
hlt
lret
push
pop
fnsave
insl
aam
mul
test
ljmp
notl
add
jecxz
xchg
inc
test
cmc
loope
jo
jae
adc
int3
sahf
mov
aad
int3
lret
test
dec
pop
push
inc
ja
test
addl
mov
mov
xor
movsl
jg
les
sub
popf
loope
xchg
pushf
addr16
lret
inc
andl
jg
cmp
mov
mov
fwait
stc
nop
xor
ljmp
sar
iret
jge
addr16
imul
push
ds
sub
add
in
add
jns
cmpsl
mov
imul
adc
fwait
push
mov
pushl
test
sbb
dec
rcll
push
gs
cmpl
arpl
faddl
sbb
pop
out
sub
jge
adcb
jp
lds
push
push
les
dec
jno
cmp
mov
jnp
xor
in
dec
adc
cmpsl
or
xchg
lahf
cmp
jns
test
jnp
cmp
les
mov
xor
in
push
dec
stc
test
aaa
mov
push
aas
movsb
push
mov
mov
or
xchg
xor
xorl
dec
stos
jb
mov
int
pop
push
or
roll
jnp
test
pop
mov
xor
das
pop
adc
pop
and
ja
arpl
add
leave
xchg
sbb
mov
or
mov
jnp
insb
rcll
test
mov
inc
fildll
cmp
ret
loopne
add
pop
dec
int3
les
ret
adc
loop
lock
stc
ficoml
add
movsl
popa
lahf
xchg
divb
jae
les
fcomps
push
jmp
pushf
testl
dec
loope
icebp
out
mull
mov
or
mov
dec
int3
jg
mov
mov
inc
mov
fscale
dec
inc
mov
mul
cmp
test
push
mov
add
ror
les
inc
shl
cs
jae
inc
sbb
ljmp
mov
mov
into
xor
mov
pop
cmp
test
sarl
pop
mov
insb
rcrl
cmp
xchg
or
mov
add
mov
mov
jo
inc
xchg
adc
sbb
shl
xlat
adc
nop
mov
xchg
push
or
in
stos
mov
nop
clc
test
outsb
out
sbb
push
ret
jecxz
inc
mov
jo
es
sbb
cs
push
stc
xchg
lods
test
pop
addr16
testb
push
loope
pop
xchg
mov
jnp
icebp
scas
xlat
int
mov
pop
das
scas
pop
sub
imul
mov
add
dec
jge
stos
xor
ss
ret
pop
mov
shll
fwait
cmp
cwtl
mov
cmpxchg
in
std
test
xor
push
sbb
mov
pop
icebp
inc
in
popf
jb
lahf
cld
arpl
ds
fcoms
je
ret
cmp
movsl
or
adc
repz
out
ds
dec
or
out
xchg
jne
ret
mov
test
test
cmp
xchg
mov
aas
sbb
ds
addl
dec
xor
testb
push
mov
clc
push
cmp
aaa
pop
jl
jae
add
pop
fwait
insl
jge
out
shrl
mov
shlb
and
pop
fists
push
and
mov
add
and
and
mov
fucompp
inc
cmp
idivl
les
sub
lea
mov
es
adc
lods
aas
popf
gs
test
cmp
outsl
jecxz
bound
movsb
mov
push
xchg
jae
pop
stos
push
mov
and
xlat
in
sub
sub
or
cmpsl
test
int3
inc
ja
inc
pop
xor
in
push
imul
xchg
cmp
sbb
pop
or
mov
push
mov
loop
push
inc
sub
scas
imul
das
xor
or
int
lret
pusha
jecxz
and
testb
jmp
testl
cmp
aad
pop
dec
movsl
pop
add
xchg
lods
inc
fstpt
pop
leave
pop
sbb
test
lods
mov
jbe
jne
or
imul
mov
daa
push
jecxz
xchg
cmp
xchg
ja
xchg
test
pop
sub
inc
sub
mov
insl
mov
dec
cmp
ljmp
xor
lods
test
push
jge
shrb
xor
dec
mov
and
leave
dec
mov
and
ja
sbb
push
add
in
push
push
push
cmp
adc
push
test
out
jge
sbb
or
cmc
out
mov
movsb
enter
mov
push
call
jno
in
sbb
outsb
shr
pop
inc
mov
xchg
pop
out
adc
shll
repnz
inc
push
das
scas
mov
movsb
and
outsl
mov
cmp
sti
jae
aas
sub
jo
out
popa
sahf
imul
pop
jecxz
or
fisttpl
sub
pop
push
fcomp
inc
pushf
jnp
inc
add
lahf
pop
jecxz
mov
sub
out
pushf
hlt
and
mov
das
aaa
mov
vphadduwd
xchg
cltd
addl
push
inc
mov
cmp
sub
stos
push
jno
sub
fdivrl
inc
ss
iret
fimull
stos
fwait
pop
inc
ss
test
lcall
mov
inc
xorl
cmp
pop
loop
mov
cmp
hlt
and
add
dec
lret
test
pop
inc
mov
aas
enter
inc
data16
and
xor
mov
mov
or
cmp
ljmp
in
mov
hlt
pop
movsl
pop
xor
lcall
pop
adc
or
ret
xchg
in
ja
rcl
insl
les
sbb
sbb
es
mov
and
and
adc
mov
std
lods
adc
mov
jne
popa
cld
push
stos
pop
dec
xchg
out
jl
xchg
test
aas
mov
ja
adc
fwait
je
push
jno
in
jae
imul
jmp
inc
mov
push
mov
data16
loop
mov
xor
scas
pop
adcb
movsl
mov
in
in
dec
pop
sbbl
mov
xchg
nop
xchg
dec
cmp
in
fwait
adc
paddb
aam
sub
jecxz
push
sub
cbtw
popa
popa
push
lret
lret
mov
stc
test
inc
shr
xor
pop
popa
sbb
shrb
adc
aad
adc
push
mov
cmpsb
mov
mov
add
imul
insb
or
push
add
push
sar
jbe
mov
mov
add
dec
push
jge
push
cmp
pop
add
loopne
xor
sub
sbb
xchg
fistpl
out
xchg
sub
push
sbb
adc
jne
inc
test
jb
repnz
pop
pop
sbb
testb
in
pop
add
sbb
and
gs
or
xchg
aas
nop
mov
aaa
add
mov
pop
and
or
or
test
stos
xlat
stc
hlt
nop
inc
out
and
lcall
inc
pop
mov
xchg
mov
repnz
jge
popa
mov
icebp
push
lock
ja
adc
pushf
fcoms
jno
je
jge
idivb
sarb
pop
mull
lea
xchg
inc
adc
sbb
dec
mov
sub
scas
jb
pop
imul
jne
sub
dec
cwtl
cmpsb
sub
adc
shrl
cmpsb
xchg
sbb
mov
dec
lret
sarl
pop
data16
ss
push
xchg
push
mov
les
into
test
fwait
test
add
xor
push
cmp
inc
mov
and
xchg
inc
into
sub
push
mov
adc
enter
inc
fstps
stc
inc
add
jmp
rcll
lcall
std
ds
sub
xchg
sbb
in
hlt
lcall
xchg
decb
stos
adc
ds
lods
push
pop
xchg
test
test
push
movsb
enter
dec
mov
fwait
jb
mov
and
add
out
jg
cmpsb
popf
inc
xlat
cmp
arpl
sbb
mov
inc
scas
pop
xchg
cmp
jp
lds
sbb
insl
xor
decb
adc
push
adc
movb
test
inc
pushl
cmp
adc
sub
sub
add
and
int3
loopne
lods
js
adc
mov
or
movntps
insl
les
jo
stos
and
xor
jge
out
add
int
add
lods
mov
aam
int
pop
fisubs
subl
mov
adc
and
mov
icebp
sub
xor
pop
or
mov
add
pushf
mov
xchg
aad
mov
xchg
and
in
les
test
pop
add
adc
jg
mov
xchg
add
xchg
pop
ds
mov
rolb
inc
shlb
mov
orb
sbb
mov
cmpsl
mov
or
cmp
cmp
push
add
mov
jno
xchg
push
cmpsb
cmp
xlat
sbb
and
inc
aam
mov
out
and
out
jg
sbb
out
jecxz
sahf
fdivr
fstpt
adc
jmp
int
inc
mov
fwait
mov
adc
in
jne
lret
outsb
and
sbb
cmpsb
fistl
adc
je
inc
ljmp
rcll
pushf
jo
mov
dec
push
cmp
xchg
adc
outsl
push
adc
addl
dec
ljmp
sbb
jns
add
push
mov
nop
icebp
cmpsb
fcoms
sub
aaa
mov
fcompl
xorl
addps
cmpsb
sbb
mov
sbb
cmpb
jne
daa
xchg
inc
hlt
mov
stc
jg
xchg
fstl
pop
movsl
aaa
nop
sbb
inc
mov
cmc
jne
or
shlb
fstpl
movsb
adc
sub
cmp
sbbl
and
rcrl
jb
test
arpl
test
xchg
lds
mov
add
bound
sti
xor
dec
xchg
push
xchg
jne
push
cltd
mov
aaa
jnp
and
imul
fs
imul
ja
dec
insb
jb
lock
sbb
pop
aas
mov
push
sahf
and
inc
cmc
int3
sub
repz
push
cld
ja
rol
adc
xchg
gs
outsb
mov
inc
lock
jne
enter
and
test
jb
sub
push
xor
arpl
xchg
jle
aad
jne
adc
push
xor
out
repnz
loope
int
mov
repnz
dec
or
push
cmp
jns
add
jno
es
push
jmp
flds
xor
xor
pop
mov
imul
sahf
sbb
or
mov
xor
sti
sub
mov
in
mov
push
stc
ja
lock
xchg
push
into
adc
cmp
idivb
and
push
or
mov
cwtl
mov
push
fmuls
int
test
sub
push
add
xchg
iret
das
cli
insl
fstps
cmpsl
adc
add
sbb
xchg
push
outsl
inc
sub
push
push
iret
jecxz
push
fpatan
enter
imul
aaa
shll
pop
imul
mov
adc
sbb
mov
into
lea
cld
jp,pn
imul
pop
xchg
and
dec
and
and
push
xchg
loope
cld
dec
aam
jecxz
and
sbb
jp
outsl
xor
or
jae
loopne
out
jl
and
or
sbb
jmp
test
sub
sub
sub
mov
dec
lods
leave
xorl
or
push
mov
mov
inc
mov
popa
in
xor
popa
rcll
int
dec
ret
inc
push
lds
xor
fisttps
aad
out
jge
loopne
or
cmp
mov
ret
push
adc
negl
cmp
xchg
pop
mov
sub
and
and
insb
inc
mov
push
mov
das
gs
cltd
loopne
sub
cmp
xchg
push
add
inc
divl
jp
mov
popf
inc
xor
inc
rolb
add
cs
clc
loop
pop
xchg
or
test
fiadds
cmp
test
mov
out
mov
int
mov
and
inc
out
adc
dec
push
sub
out
pop
mov
aad
add
jmp
mov
mov
mov
js
jp
pop
ret
mov
imul
outsb
fiadds
add
addl
inc
inc
mov
xor
push
imul
sub
js
xchg
push
sarl
pop
pop
lret
sbb
cmp
xlat
pop
dec
pop
stos
sub
lret
xchg
jl
loopne
push
pop
jle
dec
add
inc
or
mov
or
inc
adc
insb
inc
push
push
cli
rorl
jle
test
adc
bound
or
pop
cmpsl
sub
sub
cmpsb
das
dec
and
in
scas
xor
enter
adc
dec
xor
jno
daa
xor
sbbl
popa
mov
test
std
aad
sbb
adc
filds
stos
xor
or
addr16
pusha
xchg
mov
mov
in
bound
fildl
mov
mov
or
out
pusha
inc
dec
dec
test
das
movsb
dec
sbb
push
and
popf
dec
negl
aas
dec
or
std
sub
mov
and
cld
mov
mov
iret
enter
loopne
mov
pop
sub
inc
popa
arpl
fstpt
dec
or
inc
add
mov
dec
scas
or
pushf
lds
push
or
jecxz
sbb
fsub
mov
mov
or
stc
jnp
mov
jnp
dec
insl
push
test
dec
in
ja
stos
jno
shlb
add
mov
dec
das
mov
inc
outsl
and
int3
ficoms
std
lea
jno
int
jne
and
adc
mov
pop
and
sub
sbb
sbb
js
test
add
lods
ljmp
dec
push
jge
addb
gs
xor
pop
out
scas
xor
add
insb
into
loope
in
fwait
jbe
aas
mov
add
loop
test
add
fs
jge
stos
in
das
cltd
push
jns
mov
cmp
icebp
sbb
loope
push
jnp
mov
lds
cmp
and
mov
dec
xchg
or
mov
hlt
mulb
fdiv
push
mov
popa
jno
xchg
mov
cli
rol
adc
ds
cmp
addb
mov
adc
sub
inc
rcr
subb
adc
cvtpi2ps
divl
jge
mov
lret
jb
xlat
dec
out
add
push
rolb
xchg
or
cmp
loop
mov
inc
cmpsl
mov
xor
fs
dec
mov
enter
mov
push
lods
aas
adc
cmp
lret
icebp
aas
clc
shll
dec
push
cmp
jb
int3
shlb
xchg
mov
inc
movsb
or
mov
data16
cli
sub
fsubr
out
add
jo
sbb
pop
lods
sbb
ret
jp
or
add
jae
or
pushf
or
das
ss
stos
addl
mov
sbbl
mov
scas
or
push
pusha
gs
cld
shll
dec
hlt
sub
push
add
jmp
out
mov
jmp
fcomps
xlat
adc
lds
sarb
outsb
outsb
in
out
or
mov
addr16
xchg
dec
push
mov
adc
jecxz
je
push
adc
xchg
jmp
sbb
sti
mov
cwtl
insb
negb
fcmovnbe
lea
mov
add
shlb
clc
sahf
jno
shr
in
mov
dec
dec
lcall
mov
cmpsb
push
stos
lds
test
sub
inc
push
and
mov
rorb
roll
js
cmp
jae
mov
pop
pop
xor
add
int
cwtl
mov
ljmpw
test
ss
sbb
test
icebp
sbb
mov
xor
es
dec
push
jg
mov
jge
adc
pop
insb
push
insl
nop
adc
mov
loope
xor
hlt
xchg
insl
pusha
shlb
inc
inc
imull
jle
cmp
fildl
insl
or
mov
insb
pop
fstl
popa
imul
sub
daa
fdiv
aaa
cs
mov
pop
adc
xor
popl
scas
sub
mov
rclb
fstpt
in
out
pop
pusha
xchg
mov
cmpsl
push
mov
inc
lahf
cmp
adc
das
cmp
dec
pop
mov
in
mov
out
push
and
adc
sub
push
xchg
lods
mov
push
adc
inc
sub
cli
in
bound
rcl
fdivrl
cmp
int
imul
adc
xlat
idivl
mov
in
sbb
popf
pop
mov
pop
sbb
and
addl
cmpsb
push
stos
and
adc
repnz
or
shll
imul
add
call
popa
push
in
xor
pop
mov
flds
jbe
xlat
shll
out
mov
jge
insl
gs
mov
outsl
jecxz
push
pop
jle
outsb
je
adc
bound
clc
pop
mov
sub
xchg
shrl
pop
jmp
pop
jp
sub
fwait
pop
xor
push
push
f2xm1
adc
xchg
mov
lea
pop
add
pusha
xchg
cli
cmp
ljmp
stc
ret
mov
pop
pop
jb
inc
mov
push
jecxz
mov
push
jmp
or
pushf
add
jecxz
rcr
push
or
lds
sub
mov
lahf
mov
je
pop
xchg
or
jge
dec
dec
jne
dec
loope
fdivr
xorl
add
cmp
fstpt
mov
mov
mov
mov
mov
lret
xchg
movl
xor
std
fs
cmc
test
jmp
jg
adc
xlat
pop
push
mov
adc
sub
sti
cwtl
jge
fnstenv
addr16
mull
mov
and
dec
jl
jmp
mov
jmp
repz
into
push
inc
xchg
xor
cld
pushf
scas
adcl
pop
inc
cmp
sub
push
mov
ja
pop
jne
loop
in
ss
pop
mov
loop
xor
xchg
aaa
insl
inc
pop
subb
push
adc
insl
mov
mov
and
jge
repz
push
cli
mov
pcmpeqw
ja
dec
pop
sti
mov
push
mov
imul
ljmp
lret
mov
daa
mov
jo
int3
adc
sub
ret
sbb
lret
decb
xchg
jp
test
jbe
mov
mov
or
popf
gs
add
mov
out
pop
jne
fwait
cmp
arpl
xchg
mov
out
icebp
xchg
mov
outsl
iret
xor
mov
sbb
fbstp
jne
mov
push
pop
dec
add
lods
jge
cwtl
mov
xor
mulb
out
xchg
push
mov
or
adc
out
sbb
shr
fwait
jnp
scas
stos
stos
fwait
out
sub
scas
js
je
or
jp
loopne
lock
inc
push
je
pop
and
push
push
push
jecxz
push
adc
mov
divb
test
leave
scas
out
xchg
test
scas
jmp
sti
fstpt
arpl
pop
mov
movsl
ret
psubusw
or
pop
ljmp
mov
movsb
les
mov
mulb
mov
push
jae
add
cltd
push
sbb
dec
repnz
mov
pop
mov
and
pop
rcr
jl
sub
or
cs
cmpsl
jg
fidivs
adc
mov
bound
push
sbb
fidivl
inc
pop
aaa
xor
adc
dec
and
or
cmpsl
mov
mov
mov
mov
add
jbe
movsb
jge
mov
push
sbb
pop
mov
daa
rolb
pop
incb
cmp
xchg
int
aaa
mov
fisubrl
inc
add
mov
int3
popa
scas
rep
cmp
sbb
xchg
push
xchg
repz
adc
push
cld
ret
xlat
xor
mov
xchg
xor
xchg
sub
std
pop
in
shlb
mov
jae
push
push
mov
xor
or
mov
aas
dec
xor
fld
add
out
and
pop
pop
cmpsl
mov
sarl
cmp
cmpsb
adc
mov
outsb
mov
inc
scas
shll
and
movsb
iret
cmp
mov
mov
add
add
popa
shll
cmpsl
sub
ljmp
push
sti
mov
mov
sub
adc
movsl
jmp
outsl
ja
push
fistl
push
sub
inc
fcompl
call
out
push
add
in
mov
mov
cli
push
mov
dec
jl
enter
fisubl
jg
cmp
andb
frstor
cmp
or
cmp
push
inc
mov
dec
fstpl
jbe
fmuls
daa
mov
shr
adc
xor
xor
push
cmc
push
test
lcall
int3
stos
adc
inc
inc
cltd
or
test
out
add
pop
sbb
inc
ja
fwait
sbb
shr
xor
outsb
out
es
mov
in
ret
ss
fcomp
test
add
fsubrs
outsl
jne
in
je
push
shrb
sbbb
cmp
lea
pop
sub
inc
lea
sub
or
pop
hlt
dec
add
into
mov
mov
and
sub
xchg
test
dec
pop
lret
ss
inc
dec
clc
cwtl
xchg
dec
ljmp
ljmp
dec
cmpsl
inc
aas
test
sahf
dec
sub
adc
leave
dec
sbb
cmpsl
aas
cmp
mov
dec
ret
dec
lods
add
test
out
dec
mov
cs
add
mov
mov
insb
lcall
inc
push
notl
pop
out
lcall
cli
rcl
cli
xchg
mov
inc
xlat
fwait
xchg
add
sbb
push
jge
sti
dec
mov
dec
add
sbb
pop
daa
das
mov
and
test
mov
mov
xlat
mov
cmpsl
pop
sub
push
inc
in
adc
cmp
addr16
lock
xchg
mov
sti
fs
sbb
dec
xchg
add
xlat
bound
mov
shr
cmp
dec
pushl
rcl
adc
mov
scas
pop
cmp
mov
pop
pop
xchg
fsubl
and
rcrl
rcll
pcmpgtw
fisubs
sbb
fidivl
add
jae
jmp
loope
bound
push
pop
fstpl
inc
and
pop
jl
js
mov
test
jnp
cmc
sub
aaa
adc
dec
push
sub
into
inc
js
add
js
push
iret
popa
or
pop
cld
fnstcw
add
lahf
iret
popf
cmp
fsubrs
cld
cmpsl
push
add
xchg
ret
mov
cmp
std
mov
bound
sbb
movsb
cltd
shl
dec
lock
stc
into
add
loope
adcb
fbld
cmpl
mov
bound
test
fiadds
mov
pop
mov
dec
in
adc
leave
scas
mov
mov
push
jns
mov
rcrl
mov
add
pop
mov
hlt
insb
movsl
out
movsb
mov
mov
out
sub
xchg
rcrl
shrb
int
test
je
pop
sarb
jo
clc
pop
dec
cmp
dec
mov
sbb
loope
sub
mov
pop
jo
data16
enter
inc
outsb
xchg
or
dec
cltd
mov
das
mov
cmpsl
lcall
pop
push
enter
sub
sbb
montmul
cmpsb
inc
jge
lcall
dec
in
cmp
mov
lcall
and
dec
fildll
rol
mov
leave
mov
ss
lret
dec
mov
daa
xchg
sbb
ret
inc
adc
or
or
out
in
sahf
adc
sbb
dec
stos
cmc
jl
ret
adc
jp
mov
jnp
xchg
push
sub
push
dec
pop
add
fcomi
inc
mov
outsb
andb
aam
adc
gs
xchg
lret
inc
jl
push
arpl
sbb
out
pop
enter
pop
out
stos
jnp
xchg
cmp
icebp
ljmp
aad
add
or
xchg
add
cltd
insb
imul
loop
mov
loopne
xor
push
fistps
pop
aaa
rorl
push
and
notb
stc
pop
in
push
cld
or
and
dec
jecxz
cwtl
sub
aas
aaa
cld
or
mov
jecxz
int
movsb
xchg
cmp
add
dec
mov
cs
lods
inc
dec
popa
cwtl
add
lock
dec
push
and
xor
aaa
testl
out
testb
in
mov
negb
stos
iret
lock
and
jp
cmpsl
and
push
sub
cmp
lret
mov
sub
inc
push
xchg
adc
sub
jno
xor
rcr
pop
mov
daa
fistpl
cmpsb
mov
xor
enter
cmp
lahf
outsl
cmp
inc
clc
sbb
test
mov
idivl
cmp
cmp
adc
or
jae
clc
or
pop
mov
dec
aad
scas
mov
sbb
adc
xor
into
xor
xor
xchg
jno
insb
lock
test
scas
shlb
adc
pop
mov
add
test
cmp
fwait
out
push
insl
xchg
aam
mov
mov
jle
xchg
ret
insb
sarb
xor
clc
cmp
mov
push
rorb
jno
sti
and
mov
and
inc
mov
shll
in
movsb
sbb
mov
mov
sub
scas
pop
mov
mov
or
cltd
sarb
push
loopne
testb
and
loope
mov
sbb
jns
js
sub
je
add
mov
inc
popa
fucomi
or
jge
cmp
jmp
outsb
inc
enter
jg
gs
je
sbb
stos
orl
hlt
hlt
shrb
bound
pop
add
inc
mov
cwtl
idivb
rcll
scas
pop
icebp
insb
pushf
sub
data16
cmp
fisubs
lods
lahf
add
sbb
les
sub
scas
rclb
push
sbb
lods
push
xchg
iret
pop
int
mov
lods
cltd
cmp
fnstsw
inc
inc
cwtl
stos
adc
or
dec
sbb
pop
and
mov
push
fisttps
dec
loope
mov
jp
xchg
pop
jp
fnstcw
push
mov
pop
xchg
repz
pushf
fmuls
jns
sub
lock
sbb
push
push
nop
lods
loop
decb
cmp
add
push
sbb
sbb
popa
pop
jnp
inc
xor
data16
jmp
add
out
push
add
ds
pop
inc
add
pop
xor
pop
stos
rorl
pop
and
lret
gs
adcl
aas
roll
bound
inc
jle
jg
xchg
xchg
mov
test
mov
add
sbb
pop
jmp
push
lock
lret
outsb
lock
or
pop
scas
notb
xor
fs
or
jl
scas
aas
adc
mov
mov
xchg
push
int
inc
in
sub
mov
add
cmc
pop
xor
and
rcrb
cmp
js
das
lret
xlat
add
hlt
cmp
mov
push
xor
fnstenv
and
jl
in
data16
xchg
lahf
adc
icebp
mov
pop
jbe
jle
mov
bound
lock
outsb
dec
jmp
jno
xor
adc
fiadds
add
xlat
aas
adc
sahf
setae
add
pop
dec
mov
stos
test
pop
push
xor
push
mov
push
xor
int
adc
iret
lcall
outsl
movsl
pop
inc
jae
and
cmp
xlat
pop
ja
sbb
pop
ret
cld
add
cmpsl
nop
leave
xor
add
outsl
mov
push
jl
and
stc
lea
fldl
filds
int3
jnp
dec
push
ss
daa
lds
iret
js
out
enter
push
icebp
movsb
inc
xor
fnstenv
inc
dec
lcall
mov
mov
adc
roll
and
leave
fwait
popa
subw
cmp
shll
lss
inc
scas
insl
add
pop
xchg
jbe
xlat
test
push
xor
insb
jb
inc
ja
inc
xlat
nop
int3
pop
pop
enter
ret
pop
pop
adc
push
pop
cld
les
orb
xchg
cwtl
push
pop
dec
stc
add
mov
and
mov
push
pop
push
add
xorb
fnstenv
dec
imul
add
xor
jge
lahf
int
dec
repz
adc
pop
in
cwtl
xlat
mov
cmp
push
jne
aad
xchg
inc
pop
and
divl
mov
mov
loop
pushf
jg
mov
push
push
dec
inc
out
fldenv
out
lea
or
and
pop
and
push
loop
push
movb
mov
mov
jns
adc
jecxz
and
jl
jmp
sub
pop
int
nop
insl
dec
jmp
cli
pop
testl
push
mov
xchg
cmp
cmc
dec
pop
or
mov
sahf
int3
mov
xor
ja
xchg
cmp
js
shrl
into
mov
aaa
pop
pushf
jae
out
and
pop
sarl
sub
push
jecxz
xor
xor
jo
sub
xor
xchg
mov
shll
xchg
push
mov
inc
pop
xchg
mov
dec
adc
insb
xor
pop
inc
mov
pop
push
pop
fcomp
dec
cmpsb
divb
inc
cli
or
jb
out
add
add
push
cld
and
push
popa
jg
out
test
pop
jl
insl
push
iret
push
popf
xchg
rcr
or
fists
and
aas
pop
mov
fs
sub
mov
lods
or
test
cltd
sub
dec
or
jp
int
cmp
out
shlb
inc
cld
fistpl
inc
push
rorb
or
adc
add
or
dec
hlt
filds
out
jno
sub
insb
das
leave
sbb
inc
fstpt
mov
mov
xchg
sbb
into
or
push
pop
pop
repz
sbbb
mov
sbb
in
mov
add
cmpsl
or
cld
movsb
mov
mov
pop
dec
leave
and
dec
rcrb
shrb
fdivrs
repz
mov
mov
mov
add
fmuls
jb
jmp
pushf
inc
jge
out
fdivrs
and
push
inc
mov
push
jmp
dec
or
mov
fidivl
js
arpl
jmp
xor
ljmp
push
or
iret
clc
jne
or
popf
mov
nop
inc
xor
insb
cwtl
js
rorb
add
cmc
dec
pop
out
sub
jnp
sbb
leave
cmp
dec
scas
lret
push
sti
aam
imul
or
pop
jns
xor
xor
arpl
lret
adc
rcrb
pusha
scas
adcb
out
jle
fldcw
sbb
mov
sbb
mov
jge
fsubrs
jle
inc
cmc
add
mov
push
xor
pop
jecxz
std
in
pusha
cld
cmp
scas
mov
test
mov
pop
aad
ret
mov
sub
cmp
div
rolb
or
enter
jbe
inc
cmp
inc
add
pop
stc
sbb
fsubrs
cmp
loop
insl
and
inc
out
mov
adc
vpavgb
shl
js
cli
pusha
or
ja
adc
jle
adc
pop
popa
sti
sub
in
mov
shl
aam
sbb
lret
add
rclb
outsl
outsl
add
int
push
popa
xchg
out
cmp
or
pop
cmc
mov
or
out
cmpsl
into
mov
std
jmp
dec
setnp
or
shlb
add
mov
push
push
mov
stos
xor
mov
cli
cwtl
sbb
push
jns
xor
mov
pop
enter
jbe
out
cmp
cmp
push
insl
cmp
scas
lods
cld
jo
dec
sbb
outsl
xchg
cmpsl
ds
jae
testb
push
sub
jne
cmp
test
in
adc
xchg
lret
inc
outsl
pusha
dec
addb
das
iret
lea
test
xchg
les
mov
mov
push
stos
fsubs
lcall
rolw
movsb
imul
call
lcall
ds
add
ss
mov
dec
cld
shll
inc
mov
jb
insb
xor
enter
test
shlb
push
sti
mov
cwtl
in
fnstenv
or
sbb
jg
adc
sub
xchg
ss
enter
cmp
adc
dec
pop
push
es
rorb
pop
inc
sub
jl
push
dec
ret
push
sub
stos
lods
add
je
xor
fs
or
jg
pop
push
sbb
jb
lods
loop
or
push
or
push
shlb
sbb
andl
sarb
test
fstl
inc
popa
enter
mov
loopne
add
mov
jge
mov
jmp
jmp
mov
dec
mov
pop
mov
inc
test
xchg
and
dec
jno
adc
add
cmp
dec
stos
pop
lods
in
dec
sub
orl
mov
fs
jbe
inc
sub
das
sbb
imulb
cmpl
pop
hlt
lods
test
daa
jnp
cwtl
mov
dec
and
les
loopne
addl
bound
push
xor
outsb
jne
imul
lret
dec
mov
stos
js
xchg
add
cmpsb
mov
into
mov
or
aad
mov
adc
insb
cmpsb
imul
hlt
xchg
js
dec
test
int
dec
fs
sub
popa
js
lcall
sti
add
std
pop
mov
add
or
push
push
rclb
stos
pop
movb
push
out
ja
ret
xchg
lret
sub
and
les
and
out
xchg
push
dec
popa
mov
sbb
sub
mov
mov
idivl
inc
shlb
sub
pop
or
popf
mov
pop
lea
fstps
push
add
std
mov
xchg
mov
pop
xor
xor
or
leave
push
mov
mov
add
pusha
and
sub
push
ud1
orl
or
loopne
push
stc
lea
movsl
inc
pop
xor
ret
outsb
push
repz
adc
inc
lcall
adc
sub
add
ja
lret
xorl
shl
adc
aas
jge
push
ja
and
js
mov
call
pop
push
call
cmpsb
dec
add
inc
sbb
dec
jae
shrl
sub
jne
jle
jle
adc
in
or
and
insl
cltd
adc
scas
mov
shlb
add
outsl
mov
lahf
pop
stc
cmpsl
push
inc
jns
cmpsl
flds
testl
cmp
repnz
int
test
sub
xor
fisubs
movsl
cwtl
push
jle
push
and
dec
xchg
stos
subl
pop
movsb
pop
add
ja
pop
xchg
out
sbb
lret
popf
pop
sub
or
data16
add
dec
cmp
stc
push
dec
test
mov
loopne
push
lahf
jecxz
scas
fisttps
mov
dec
mov
fcoms
mov
clc
mov
cli
repz
push
icebp
mov
dec
imul
insb
js
negb
dec
enter
adc
mov
or
xchg
cli
movsb
loop
and
fs
je
imul
adc
xlat
lock
shll
imul
cmp
subl
inc
lahf
jno
dec
mov
in
mov
inc
lds
xor
into
push
push
sub
inc
push
adc
sbb
cs
scas
cmc
sti
shll
push
and
and
cmp
xchg
mov
scas
inc
mov
out
das
sub
ror
lea
ret
and
test
repz
das
jno
je
push
imul
inc
pop
cmp
lock
stos
or
mov
outsb
xchg
push
enter
pop
sub
lret
pushf
xchg
lcall
int
jp
add
cs
in
mov
jnp
or
jecxz
xchg
mov
cmp
sahf
leave
push
sub
mov
pushf
call
lock
mov
mov
ljmp
mov
fsubs
push
ljmp
xor
add
pop
es
mov
je
sub
loope
aas
xchg
inc
loopne
xchg
dec
or
mov
repz
cltd
pop
arpl
aam
lods
mov
nop
in
xor
inc
jp
cli
or
pop
lds
jno
and
stos
adc
aam
rolb
xor
pop
pop
push
adc
movsb
sbb
push
push
aam
mov
inc
ljmp
and
xor
xor
outsb
mov
inc
pop
push
popf
dec
or
je
in
stc
repz
inc
stc
xchg
push
or
mov
push
xchg
stos
lahf
push
fwait
push
sub
mov
push
jmp
movsl
inc
xchg
cmpsl
ss
pusha
rol
mov
int
or
and
fs
repz
nop
pop
sti
pop
and
fildll
pop
inc
mov
jmp
ljmp
rcll
in
inc
ja
out
pop
sti
cmp
pop
pop
aaa
pusha
jecxz
dec
or
ror
sub
lds
je
jb
xor
sub
pop
fisubs
cmpsb
jle
inc
mov
repnz
or
adc
xchg
xchg
xlat
stos
push
in
add
movsl
adc
fistl
pop
and
mov
inc
jne
test
xor
gs
pop
aaa
push
inc
inc
popa
inc
jp
movsb
loopne
call
xchg
shl
fiadds
pushf
mov
fisttpll
in
jno
lea
ss
lcall
xor
repz
arpl
mov
adc
push
sbb
cmp
mov
xor
xchg
pusha
outsl
popf
dec
jnp
xor
jns
pushf
jp
jne
insb
cmpb
fsubrs
push
imul
push
ljmp
sub
inc
sub
sbb
xchg
push
loopne
push
pop
cld
testb
aaa
lock
test
daa
mov
notl
outsb
xor
lahf
mov
aas
cmpsl
xchg
cwtl
dec
out
in
shll
mov
addr16
in
push
mov
sbb
mov
xlat
and
stos
daa
jae
scas
push
dec
jno
lcall
jl
scas
add
clc
jo
icebp
test
cmp
jp
fiaddl
enter
mov
arpl
test
push
inc
fcmovnbe
das
cmpsb
cmc
jmp
adc
ds
ficoms
bound
in
inc
fstpt
dec
test
fistps
ljmp
jb
mov
out
outsb
mov
mov
jo
clc
xchg
and
out
adc
inc
das
push
or
fnsave
sbb
roll
mov
outsb
pushf
jmp
sahf
in
push
mov
sbbb
jl
in
inc
dec
or
jecxz
sub
and
shll
or
adc
mov
lea
and
lcall
mov
mov
adc
ret
data16
add
push
arpl
in
shll
add
repnz
add
rorl
pop
xchg
mov
push
jg
lds
roll
push
jno
sub
test
scas
lcall
mov
les
into
or
jle
popa
out
or
jo
add
dec
mov
sti
inc
lahf
mov
mov
cmc
cs
jno
je,pn
xor
push
int3
lret
xor
mov
cmp
pop
xor
imul
push
ret
sbb
movsb
cld
in
push
ficoml
sbb
ljmp
repz
cwtl
jo
pop
ror
in
fisubrl
inc
pop
cmp
fs
out
inc
pop
imul
ljmp
add
insb
add
scas
imulb
mov
sbb
ret
test
cmp
jge
jo
loopne
stos
xor
fbstp
mov
mov
cmpsl
fstl
add
xorl
lds
das
pop
or
and
cmp
pop
xchg
jnp
outsb
fdivs
movsb
mov
popa
jae
cld
adc
jns
sbb
mov
mov
dec
repnz
outsl
es
xchg
mov
ffreep
push
dec
fstps
cmc
dec
repz
push
push
jmp
dec
or
arpl
scas
orb
das
add
test
mov
jle
mov
adc
mov
sbbl
add
pusha
pop
scas
and
fcompl
insb
dec
mov
mov
push
mov
push
xor
jl
lock
shr
insl
mov
stc
mov
xchg
inc
mov
push
in
movsb
les
jns
iret
mov
jne,pt
js
in
cmpsl
fistl
shrb
mov
mov
push
jmp
mov
imul
mov
call
adc
add
pop
or
lds
dec
test
ret
and
fmulp
mov
sbb
loop
loope
push
jmp
jl
es
adc
movsb
jno
sti
sbb
int3
in
push
inc
test
outsl
dec
movsl
sbb
test
sub
cmpsb
rclb
cmp
xlat
idivb
dec
movsl
jne
inc
mov
sbb
leave
imul
or
pop
fs
pop
mov
fnsave
cld
xchg
xchg
adc
int
dec
outsb
xor
or
inc
xor
lret
outsb
fists
mov
jno
mov
dec
xor
inc
mov
stc
cli
dec
jnp
out
paddsw
rcr
shlb
ud1
sbb
push
push
inc
fdivl
cmp
jb
iret
icebp
outsb
xchg
xor
push
push
lds
push
xchg
cmp
shr
pushf
test
add
push
mov
ret
adc
ret
aad
into
sub
pusha
nop
and
das
jae
mov
adc
outsl
repz
lods
movsl
insb
sub
mov
inc
popf
into
fiaddl
adc
cmp
sbb
sbb
xor
addr16
cmp
cmp
lret
and
mov
inc
rcll
add
sub
in
xor
mov
xchg
es
scas
gs
mov
fwait
stos
movsl
pushf
aam
pusha
xchg
loope
mov
sub
aaa
push
mov
jmp
arpl
adc
jae
adc
fsubs
icebp
insb
or
test
nop
add
movsb
mov
shlb
adc
adc
lock
xchg
ljmp
lret
cmpsl
mov
bound
jbe
je
dec
mov
pop
std
mov
pop
data16
inc
out
fldl
dec
pop
leave
cmp
lahf
mov
sbb
cmpsb
popf
sarb
pop
jg
xor
aaa
dec
push
test
or
rol
jnp
pusha
xchg
xor
lea
push
xor
or
les
nop
jbe
xor
cmp
or
sbb
out
cmovo
sub
icebp
repnz
or
pop
pop
inc
pop
js
cli
lock
inc
sub
cmp
mov
jns
loop
add
cmc
xchg
jbe
cmpb
mov
test
scas
pusha
mov
in
or
dec
jne
adc
mov
mov
incb
pop
xchg
push
inc
rolb
inc
inc
sbb
ds
xchg
data16
fiaddl
xor
cli
cs
push
out
push
push
fadd
lcall
mov
or
cmc
push
add
and
mov
push
ds
cmp
scas
push
adc
movsl
add
or
cli
popa
ret
xchg
stc
test
sub
clc
stos
xchg
jge
mov
loope
xchg
add
jle
jle
aam
scas
mov
mov
mull
fcoms
push
sbb
int
test
mov
and
sbb
mov
mov
mov
std
stc
jbe
add
sub
loop
jmp
and
pop
cmpsl
xchg
notl
out
inc
arpl
aam
add
out
mov
mov
and
push
xor
jmp
push
dec
lods
fwait
ret
imul
adc
das
pop
inc
icebp
jns
jg
sbb
jbe
fimull
and
xor
clc
fstps
mov
stos
jb
inc
loopne
mov
mov
and
jbe
push
imul
ljmp
sti
mov
inc
cmp
cmp
mov
mov
shlb
pop
out
call
mov
xor
pop
mov
jae
in
and
inc
ja
das
mov
push
cmp
addb
add
ret
mov
or
es
femms
sub
js
sar
rorb
and
inc
inc
popf
movsb
sti
call
pop
and
xchg
cmp
sbb
inc
sar
push
je
push
outsl
sbb
jg
popaw
mov
data16
xchg
dec
push
pop
cmpl
xchg
jo
mov
scas
jo
mov
outsb
mov
rcrb
or
pop
sub
pop
xchg
daa
mov
push
dec
xchg
ret
pop
xchg
or
adc
fstl
lahf
add
and
js
movl
jbe
out
daa
jo
sbb
lret
fwait
cld
lret
je
scas
jl
fsubr
mov
mov
push
sub
mov
fdivs
dec
jp
lds
pop
dec
imul
sbb
push
pop
mov
lret
in
pop
js
ret
mov
les
mov
fistps
inc
xchg
pop
xor
cli
mov
sbb
mov
xchg
insb
in
mov
jl
push
xchg
std
mov
cwtl
fiadds
into
sub
jo
pop
dec
sbb
or
dec
js
ret
push
jns
inc
add
loopne
sti
sub
push
or
std
xor
pop
xchg
pop
and
scas
adc
pop
pop
or
iretw
xchg
mov
ja
xchg
sti
cs
push
cli
leave
sarb
dec
in
out
xchg
and
mov
and
jge
cmpsl
sbb
ss
test
popa
fstpt
dec
pop
inc
cmp
test
sbb
fldenv
mov
test
test
call
fidivl
bound
mov
and
lret
arpl
test
push
lret
call
push
cltd
orb
xor
and
fstps
das
cmp
sarb
inc
lahf
and
jl
fstl
pop
ficoml
daa
pop
cmp
fwait
pusha
pushf
dec
scas
cld
je
xchg
sbb
mov
lahf
jae
iret
mov
daa
ror
dec
repz
pushf
dec
ds
ret
aad
stc
mov
sbb
adc
stos
fistl
leave
fcoml
movsl
dec
fs
mov
test
sbb
arpl
adc
sti
xchg
in
cmp
das
cmpsb
les
kshiftlq
icebp
push
jg
dec
shll
ss
sub
stc
pop
cli
inc
ljmp
dec
xor
ss
in
sbb
leave
daa
and
mov
sbb
mov
add
sbb
sub
adc
leave
or
daa
mov
nop
sub
ret
je
leave
and
repz
mov
pop
and
push
lret
cmp
cmc
int3
cmp
out
aad
lds
pop
loope
lahf
int3
adc
jns
dec
or
les
sub
sbb
imul
xchg
mov
shl
mov
insb
sahf
adc
insl
fwait
xchg
mov
push
addr16
divps
pop
iret
hlt
sar
dec
jae
adc
or
outsb
mov
and
icebp
jb
dec
push
repz
jmp
or
mov
fcmovnbe
pop
aad
addr16
adc
aaa
inc
cmp
js
aaa
inc
pop
push
jg
push
mov
jmp
mov
cmp
and
pop
jnp
jno
decb
cmpl
jb
les
orb
pop
jbe
in
jns
shl
fsubl
inc
movsl
jo
out
mov
sbb
inc
pop
sbb
jp
scas
das
sub
arpl
cmp
lea
cs
imul
or
sbb
pop
pop
pop
je
sbb
or
xlat
or
xor
in
imul
and
les
out
sbb
mov
or
sbb
sub
mov
lcall
mov
sbb
xchg
cmp
lods
mov
add
clc
add
inc
orb
in
fildll
sub
xlat
jae
mov
iret
adc
mov
lock
inc
aaa
cmp
cmp
and
loop
mov
sbb
movsl
int3
mov
xor
fdivrs
jae
daa
add
dec
inc
int3
lock
add
rcl
fsubs
sbb
stos
sub
push
mov
push
frstor
ja
xchg
pop
test
stc
cmp
push
stos
frstor
outsl
or
dec
shll
jmp
insl
pop
outsl
ss
ret
xchg
fidivl
imul
ja
push
adc
aad
test
fcomps
jae
pop
iret
scas
push
out
cmpsl
into
mov
push
fdivr
jl
jno
ljmp
js
jmp
or
insl
mov
push
cmpsl
push
out
stc
mov
jo
rclb
mov
push
mov
out
jg
jecxz
mov
xorl
outsl
inc
and
sub
ljmp
pop
subb
shlb
cmp
dec
fsub
lods
cs
call
adc
daa
js
loope
rcrb
mov
addr16
inc
aad
push
sbb
leave
jns
pushf
xor
xor
cld
mov
sahf
mov
hlt
pop
add
out
and
lock
sub
sbb
jg
sahf
test
and
jnp
mov
inc
sub
rcr
ja
aas
sub
cmp
mov
dec
inc
xor
mov
inc
and
movsl
rorl
mov
and
call
movsb
cmc
loope
pusha
or
pusha
add
test
dec
ret
sti
test
stc
in
cmc
cwtl
adc
cmp
xchg
inc
rcrl
cli
pop
adc
data16
mov
inc
push
dec
lods
cmp
push
mov
mov
lods
fdivl
mov
pop
mov
xchg
push
mov
pop
roll
insb
sub
lahf
orb
movsb
sub
ss
or
movsb
es
popa
sbb
lret
sub
fs
pop
in
loope
sbb
lock
fstpl
je
fldcw
test
mov
jns
jmp
inc
jecxz
cmp
adc
push
daa
push
out
addl
lahf
daa
cmp
stc
xchg
push
push
in
aam
mov
jle
cmp
ret
std
cli
test
mov
add
loop
imul
cwtl
push
xchg
lea
xor
ret
xchg
scas
ss
mov
or
jbe
push
xor
sub
dec
jo
call
and
shll
lea
mov
sbb
jb
cmpsl
pop
xor
loope
flds
mov
orl
rolb
xor
ja
cltd
js
stos
lods
out
push
ss
push
test
sub
mov
jge
push
lcall
cs
push
hlt
xchg
cwtl
fadd
push
clc
adc
add
les
pop
mov
xchg
iret
mov
push
adc
cmc
xor
out
jo
lea
sub
push
mov
out
fisubl
cmpsl
pusha
and
sub
rcll
xchg
repz
pop
sbb
sar
jp
pop
pop
lods
fidivl
cli
stc
js
sub
dec
mov
jae
in
xchg
outsl
xor
push
cli
add
fisttpl
test
jmp
aaa
or
neg
xor
in
outsl
cmp
dec
stos
add
fimuls
xchg
dec
popl
popf
add
outsl
ret
mov
dec
dec
and
test
pop
in
fcomps
cld
mov
mov
pop
sub
add
and
add
mov
sarb
aaa
mov
dec
repnz
aaa
lret
jmp
xchg
inc
movsl
stc
mov
pop
xor
movsl
mov
js
dec
xor
int3
and
fisttps
dec
cmp
xchg
ljmp
sbb
add
jnp
adc
mov
enter
dec
aas
pop
ss
mov
rolb
lds
shlb
push
and
call
push
rol
cmpsb
clc
mov
int
adc
fnsave
jp
adcl
std
sbb
sbb
jnp
stc
and
pop
pop
jmp
jae
ja
sarl
das
or
xlat
cmp
mov
jns
inc
sub
add
fnstcw
adc
call
xor
xchg
test
fs
imul
mull
sbb
or
jp
sub
loop
jae
inc
pop
call
dec
ja
or
and
pop
dec
mov
loope
sbb
repnz
mov
mov
mov
stos
imul
imul
sub
mov
loope
jmp
add
sti
cltd
into
mov
mov
fs
sbb
jns
xor
sti
clc
cmp
adc
or
inc
adc
lock
jge
inc
icebp
adc
cld
sub
cmp
loopne
rcr
shrb
xlat
mov
iret
add
rcl
addr16
rcrl
dec
jmp
fcmovnu
lea
or
adc
loopne
sbb
jae
mov
enter
mov
cwtl
add
mov
cmpsl
imul
movsl
addr16
push
aad
mov
pop
xor
jns
mov
in
decl
xchg
lods
ret
out
mov
pop
testb
fmulp
and
mov
or
int3
or
nop
jg
xor
sub
leave
xchg
mov
int
xchg
arpl
push
leave
adc
and
loopne
bound
push
ret
ljmp
movsl
fwait
gs
xchg
ss
dec
mov
xchg
pusha
into
lahf
ss
mov
imul
inc
bound
inc
xor
sub
loopne
inc
jb
outsb
pop
xchg
mov
insb
and
push
jne
hlt
leave
sti
mov
inc
sub
xor
lods
pop
dec
mov
lret
jae
pusha
repnz
in
mov
xor
insl
lret
pop
lahf
cmp
mov
aaa
add
mov
lea
out
out
int
rorl
dec
mov
inc
repnz
faddl
test
movsb
xor
jno
mov
adc
int3
jp
xor
mov
stos
aad
lret
int3
mov
or
into
pop
outsl
pushf
clc
shlb
hlt
inc
jo
arpl
sub
jge
out
adc
mov
jno
sahf
mov
push
mov
lahf
pop
pop
pop
fidivs
in
inc
adc
int3
mov
std
jmp
inc
js
xchg
and
lahf
movsb
js
enter
nop
adc
mov
shr
cmp
push
inc
pop
xchg
test
push
sub
sar
mov
and
loop
jae
fucomp
lods
push
out
mov
enter
dec
es
inc
pop
or
test
pop
leave
add
add
mov
mov
push
xor
push
stc
pop
cmp
and
clc
xchg
xlat
push
inc
adc
sti
jo,pt
mov
jmp
xor
mov
inc
xchg
test
push
lea
bound
sbb
add
mov
push
faddp
push
pop
int3
xor
mov
es
sub
dec
jmp
inc
xor
sbb
fwait
leave
add
jmp
and
xchg
xor
mov
cmp
loopne
fildl
inc
sub
inc
or
enter
je
stc
xchg
inc
aaa
sbb
mov
sbbb
mov
aad
lods
dec
ficoms
sti
or
mov
xchg
scas
push
mov
mov
stc
lahf
cmp
and
insb
xchg
iret
addb
jno
mov
jp
lahf
and
mov
lret
sti
xor
mov
sbb
xchg
loop
loope
pop
mov
fdivrp
dec
xchg
bound
xor
out
jo
xor
add
stos
std
icebp
sbb
loope
stos
dec
inc
sbb
dec
adc
loopne
dec
xor
faddl
ret
cltd
dec
mov
xor
pop
mov
adc
dec
outsl
fld
xchg
stc
lcall
popf
cli
aaa
daa
jno
lods
pop
into
sbb
mov
cmp
addr16
dec
xor
inc
cli
popa
out
aaa
mov
fldl
imul
fsubrp
insb
adc
dec
das
sarl
sub
xchg
cld
sub
or
xchg
sub
mov
xchg
in
push
xor
aas
mov
out
pop
dec
dec
insb
adc
xor
pop
mov
pusha
cmp
xchg
adc
enter
and
add
leave
inc
sub
xor
popf
fistl
mov
bound
into
dec
popf
cmp
push
adc
fucom
push
mov
dec
and
push
out
rcrb
dec
sahf
or
pop
xor
mov
and
inc
das
jge
stos
imul
ret
stos
addb
pop
mov
ret
imul
or
mov
and
orl
xorl
notb
testb
xchg
sbb
mov
xlat
add
push
pop
push
pushf
cltd
and
jnp
mov
and
mov
in
add
sub
dec
inc
fucom
push
push
adc
push
jns
imul
adc
test
mov
mov
dec
jmp
push
imul
ljmp
push
push
push
pop
sti
cmp
jno
ljmp
pusha
pop
jo
lods
pop
test
cmp
mov
push
les
mov
push
pusha
mov
and
pusha
jns
cmpsb
pop
in
lcall
fwait
pop
cmc
sahf
jle
aas
cmp
mov
cmp
stos
js
cmpsl
pop
mov
and
jp
dec
jne
mov
jae
insb
leave
fucom
sub
push
outsl
push
xor
pushf
jmp
stc
and
xchg
mov
jg
push
sub
addr16
adc
push
add
cmp
pop
adc
test
ljmp
lret
xchg
das
and
notb
add
jae
mov
ret
cmp
loopne
inc
std
xlat
and
xchg
add
je
cmpsb
mov
ljmp
out
fdivr
hlt
out
dec
lock
fadd
std
imul
jle
push
call
sub
xchg
sarl
jo
or
dec
xchg
pop
adc
xor
pop
lahf
aas
jle
inc
sub
stos
push
mov
mov
mov
dec
cmp
cmp
xchg
dec
mov
and
or
inc
sbb
mov
fwait
dec
inc
jno
or
push
xor
pop
mov
push
mov
inc
ret
xor
xchg
pop
push
fisubrl
lahf
and
popf
mov
dec
mov
mull
mov
mov
cwtl
jb
imull
test
test
mov
arpl
js
cmp
nop
mov
jo
int
jbe
jnp
rorb
inc
pop
jne
loopne
int
push
or
popf
cmp
fldl
sub
sahf
data16
add
mov
xchg
gs
stos
pop
ljmp
shll
ds
nop
movb
mov
jge
ss
push
shlb
je
popa
push
xchg
pop
lret
or
loopne
fistpl
adc
cmpsb
mov
lret
fs
fldt
testb
idivb
hlt
cltd
add
in
pushw
xlat
stos
lods
rcl
je
xchg
repz
mov
or
rcll
jnp
dec
xor
xor
cmp
insb
pusha
push
cli
push
insl
outsb
jne
sbb
sti
lds
mov
xlat
loop
repz
cs
mov
sub
jnp
fidivrs
leave
in
or
inc
xchg
lret
push
enter
add
xor
dec
rorl
ret
jmp
inc
cli
aam
jne
xor
inc
dec
scas
or
sbb
pop
sti
xchg
push
lea
subl
sbb
sub
aas
mov
sbb
rclb
fidivrl
lret
mov
push
adc
xor
cli
dec
fiaddl
loope
leave
sbb
lret
sub
lock
pop
mov
loope
inc
and
jae
pop
inc
mov
leave
or
push
adc
and
push
jle
adc
cmc
movsl
sbbl
lods
sbb
scas
inc
hlt
inc
add
jo
mov
icebp
fistpll
push
testb
cltd
outsb
or
fisttpll
mov
cli
ljmp
add
addl
mov
mov
xchg
scas
fwait
test
jg
lret
sub
mov
fiaddl
cmc
jle
jle
icebp
test
cmp
ds
cmpsb
sbb
stc
cmpsl
push
es
sbbb
aam
imul
ja
xlat
jb
push
xchg
into
pop
orl
jnp
jp
mov
out
fs
stc
jle
je
pop
jl
mov
pop
cmpsl
mov
jbe
inc
lds
shrl
test
ja
icebp
push
xchg
stc
iret
cmpsb
cmp
fs
dec
testl
or
and
mov
cltd
pop
lock
mov
sbb
cmc
sar
aaa
fisttps
loop
and
inc
inc
in
pop
int3
fwait
mov
add
pop
leave
addr16
fldenv
fstl
mov
sub
movsl
dec
dec
bnd
jo
loop
orb
hlt
xchg
js
jno
xchg
jmp
or
add
mov
jecxz
std
cmp
orl
jecxz
cmp
adc
mov
lret
popa
sahf
jmp
push
jle
notb
push
jo
shr
push
loop
lea
into
lahf
loope
jne
mov
fmul
sub
push
xlat
sbbb
pop
or
mov
iret
mov
fnstcw
xchg
sub
cmp
jne
movl
in
cli
clc
inc
les
push
inc
test
pusha
bound
fildll
pushf
cli
fwait
scas
mov
rcl
arpl
jge
jae
jns
or
cld
mov
into
adc
mov
ljmp
dec
in
pop
pop
test
xchg
sbb
mov
jg
sbb
dec
popa
test
or
sub
cmpb
cmp
out
mov
pop
std
fcoml
sti
jg
in
je
mov
imulb
or
mov
jne
mov
adc
clc
push
and
rcl
jo
test
sbb
aas
and
fwait
xchg
adcl
fisttpll
push
xor
imul
mov
pop
jp
outsb
and
adc
shll
or
mov
call
fadds
mov
mov
sbb
mov
mov
push
bnd
push
mov
out
push
movsl
or
fsubl
cs
sahf
push
adc
push
mov
pop
test
cmp
cltd
or
or
and
add
xor
out
rolb
wbinvd
test
negl
push
movsb
adc
lahf
mov
sub
cli
cltd
in
jecxz
lds
xchg
mov
mov
or
sahf
fisubrs
pop
inc
in
dec
das
inc
jbe
das
sbb
jno
loop
mov
fcmovnu
and
ds
into
jns
push
popa
sub
fs
pop
or
pop
add
bound
pop
or
mov
sub
pop
test
lods
add
insb
add
ljmp
cmp
daa
sbb
scas
xchg
int
int
bound
scas
into
rcl
add
clc
xchg
mov
das
xchg
pushf
decb
es
and
xchg
pop
and
jo
loope
fisubs
out
fsubl
test
andl
xor
jge
xor
jecxz
push
add
sub
insl
repz
push
test
test
and
andl
es
push
mov
mov
mov
adcb
insb
dec
scas
sbb
push
enter
dec
mov
pop
fnstcw
xor
sti
arpl
cmpsl
cmp
push
test
dec
out
push
push
inc
inc
adc
inc
lods
xor
mov
xchg
rep
fwait
xor
int3
mov
jbe
iret
xor
in
ja
test
imul
clc
mov
inc
lcall
pop
inc
sub
and
mov
mov
jo
jbe
mov
aad
push
cmp
mov
add
jge
shrl
fwait
jne
call
lret
insl
shrb
mov
mov
mov
iret
mov
fisttpl
sbb
fidivrs
mov
movsl
popa
lcall
cltd
sbb
fwait
cltd
jmp
pop
in
cmp
cmp
ja
in
mull
mov
lcall
xlat
mov
dec
and
add
std
je
test
jae
mov
sub
pop
pushf
jmp
mov
cwtl
lock
stos
cwtl
hlt
adc
imul
and
and
cmp
jp
mov
push
sub
inc
rcl
push
lock
and
mov
les
ss
push
lret
mov
loope
jmp
daa
push
pop
add
jnp
push
mov
pop
mov
imul
cmp
into
mov
pop
push
mov
sbb
push
lea
mov
fcoms
adc
divb
adc
push
insb
jb
mov
jae
add
pop
lods
es
cs
push
test
cmc
jge
sbb
xchg
push
out
inc
sar
movsb
mov
pusha
mov
scas
xchg
or
cmp
por
inc
pop
xor
mov
jge
pop
jp
cld
and
shrb
aaa
mov
arpl
in
fstpl
enter
in
sbb
or
cmp
add
and
mov
ds
dec
adc
sub
aam
ja
out
lahf
xorl
xchg
adc
push
hlt
add
imul
pop
movsb
xor
dec
or
dec
arpl
inc
mov
aaa
dec
out
mov
faddp
dec
xchg
in
sbb
mov
stos
push
xor
pushf
push
dec
sbb
cltd
sub
aaa
inc
stos
jb
sub
fadd
imul
push
mov
scas
dec
cli
rclb
mov
xchg
addr16
sar
aas
jnp
push
mov
and
inc
jno
in
jecxz
into
imulb
xor
adc
out
inc
das
pop
fldenv
mov
xor
dec
shll
pop
mov
mov
sub
ja
xchg
or
pop
jle
inc
mov
cmp
cli
lret
push
adc
pop
mov
push
dec
mov
cmp
in
inc
mov
filds
mov
sub
movsl
xor
neg
jne
fdiv
xor
mov
sahf
cld
orb
mov
jle
jne
add
fisttps
push
jg
in
push
aas
insb
les
jle
daa
test
push
test
push
push
xor
mov
vunpckhpd
cmp
cmc
outsl
je
dec
das
testl
push
jmp
pop
hlt
bound
lahf
or
jmp
testb
and
xor
push
push
and
jns
mov
cmp
dec
pushf
pop
and
les
andb
fstp
stos
jb
dec
test
mov
cmp
dec
lret
xor
aam
pop
insb
aam
pop
test
sti
mov
and
mov
pop
lahf
addr16
sub
pop
mov
aam
mov
pop
fimull
rcrl
scas
dec
mov
aaa
dec
fists
aam
sbb
pusha
sub
popf
jae
insb
lock
sbb
inc
jmp
or
negl
inc
mov
icebp
and
inc
scas
or
sub
imul
inc
decl
push
push
or
mov
adc
jbe
xlat
add
xchg
sbb
mov
push
pop
adc
dec
dec
enter
cltd
inc
aas
mov
roll
cmpsl
popf
adc
bound
dec
popa
mov
mov
push
mov
xor
push
cmc
xor
aas
js
dec
enter
fs
lret
pop
rcr
xchg
adc
loope
das
mov
es
mov
aas
lds
cmp
jae
sub
sbb
jb
xchg
pop
jns
ffreep
aad
jle
pop
stc
mov
stos
imul
repz
outsb
xchg
mov
inc
jbe
cmpb
adcl
add
cmc
sbb
inc
or
ljmp
jns
pop
xlat
andl
faddl
cwtl
insl
and
stos
punpckldq
mov
add
aaa
cmp
in
mov
pushl
adc
xchg
add
jl
mov
adc
push
mov
inc
and
fs
bswap
fmuls
out
outsl
xor
xorps
and
addl
xor
jmp
arpl
push
mov
mov
jae
cli
or
rcrb
pop
sub
push
mov
pop
lock
cmc
push
fs
mov
or
fnstcw
cmpsl
test
stos
das
clc
xor
outsb
call
add
add
hlt
daa
pusha
mov
dec
push
leave
aad
int
sbb
lcallw
sub
xor
imul
movsb
fdivl
or
insl
jae
std
jno
rolb
cmp
or
xchg
aaa
fsub
mov
sub
stc
cmp
iret
sub
fdecstp
mov
cld
cli
adc
shl
icebp
push
mov
adc
sbb
cli
pop
stc
jmp
fisttpll
pop
jno
sub
push
out
shrl
fstpl
lcall
insb
ds
cltd
mov
cmp
cmp
mov
in
add
sub
push
mov
mov
mov
push
out
pushf
jae
push
adc
dec
mov
mov
jb
pushf
or
and
push
add
mov
push
test
mov
xlat
aaa
loopne
dec
cmpsb
mov
sbb
arpl
daa
andl
mov
mov
aas
enter
rorl
cmpsb
xor
add
arpl
jl
fstl
test
pop
add
mov
cmpsb
push
sub
mov
add
sub
test
or
lock
mov
rcrb
pop
or
xchg
movsb
fstpl
decl
sub
sti
in
sbbl
xor
adc
orl
jns
xchg
shrb
jg
lret
les
inc
dec
lods
lds
stc
jno
sarb
hlt
sub
mov
int3
mov
insb
mov
rcll
sbb
push
in
sub
fcmovbe
jbe
bound
lods
std
lods
pop
out
shll
out
shr
jl
cld
loopne
push
xorb
call
sub
cmpsl
mov
leave
lea
aam
inc
push
bnd
xchg
fwait
adc
jnp
pop
rcl
daa
sbb
cmpsl
inc
xchg
pop
and
stos
int
pusha
aas
jp
insb
rorl
mul
xchg
les
or
out
pop
fcoms
and
mov
clc
inc
enter
mov
sub
nop
in
mov
inc
roll
mov
in
sbb
push
hlt
loop
lcall
bound
add
cltd
adc
xor
jecxz
sti
andb
and
lock
sub
lcall
sbb
inc
mov
mov
jecxz
push
add
in
mov
push
rcll
inc
sbb
dec
push
lahf
mov
js
adc
ret
dec
jnp
ds
push
shlb
shr
dec
inc
nop
xor
pop
in
push
fnstcw
sub
addl
dec
test
lods
add
daa
add
call
std
xchg
fidivs
dec
lds
sbbl
test
das
out
pop
xchg
into
fldl
out
xor
sbb
sub
es
mov
aam
and
and
xchg
sub
sub
sub
clc
push
ja
adc
pop
or
add
inc
call
ret
out
jmp
cmpsl
mov
push
ficoms
ret
jae
sahf
cmp
or
hlt
pop
fists
pop
mov
outsb
add
stc
sarl
dec
jge
jle
inc
sub
test
ret
pop
jp
bound
fcompl
jae
sub
into
or
xchg
lods
dec
pop
out
sub
xchg
enter
loopne
insl
rorl
and
jno
aad
lahf
popa
push
dec
cmp
sbb
push
xchg
faddl
imul
ja
push
sbbb
mov
jecxz
jnp
jo
cmp
cmpsl
adcl
sub
and
push
cmp
pushl
inc
and
stos
sbb
adc
push
mov
or
mov
inc
daa
sahf
mov
int3
sub
cmpsl
cmp
and
jae
testb
mov
add
out
mov
and
mov
jb
addr16
in
sarb
pop
js
testl
sub
xchg
aam
std
cmp
adc
and
mov
mov
mov
and
mov
push
ret
addl
jmp
mov
loop
push
push
dec
xor
pop
cmc
pop
push
stos
cs
xor
cmc
sub
mov
shrl
ret
das
imul
mov
inc
test
pushf
sbb
jno
jbe
sti
mov
rcr
ja
dec
xor
push
frstor
mov
pushf
add
lcall
shrb
mov
pop
push
into
ss
mov
int3
in
dec
test
or
xor
sbb
push
inc
lret
lea
cmp
stos
int
lods
adc
in
inc
sbb
fst
bound
mov
in
adc
pop
insl
push
ljmp
push
push
cmpsb
push
lcall
mov
inc
test
mov
jg
sti
pusha
pop
icebp
mov
pop
movzbl
xlat
and
xchg
into
adc
jbe
cwtl
xchg
cs
sbb
test
and
adc
push
add
fucom
lcall
jb
jo
adcb
frstor
sub
add
test
int3
fwait
std
loop
rorb
push
and
loope
sub
hlt
insl
ljmp
out
pop
ljmp
inc
dec
mov
loopne
ja
das
mov
xchg
mov
pusha
outsb
out
sub
movsl
cs
lret
add
mov
test
imul
jg
or
mov
push
imulw
in
fdivs
imul
push
cmp
pop
jbe
mov
jb
lret
cltd
jle
dec
pop
or
inc
xchg
jmp
out
xlat
je
mov
push
sbb
movb
xor
imul
or
push
pop
and
movsb
push
test
inc
sub
add
xchg
stos
pop
arpl
sbb
push
iret
inc
mov
xchg
je
pop
pop
jl
fsubl
push
sub
or
call
xchg
mov
mov
insl
out
ret
cmp
dec
and
fidivl
rcr
jo
data16
push
jp
rcrb
add
pop
jo
inc
adcl
xchg
xor
out
sahf
in
pop
and
xchg
in
ljmp
jo
into
inc
cmc
pop
sbb
aam
add
arpl
out
xchg
icebp
insb
sub
jp
imul
aad
cwtl
neg
jl
push
loope
inc
arpl
xor
outsb
dec
pop
jae
or
ret
mov
dec
xchg
sub
inc
cli
mov
outsb
sub
adcl
fnsave
add
jno
gs
das
inc
xor
popf
adc
sub
push
inc
or
mov
inc
pop
mov
lcall
mov
ss
push
jbe
or
ljmp
sbb
rolb
addr16
pushf
out
xchg
call
fs
or
inc
es
add
or
adc
ss
fnstsw
push
int
cmp
aad
jp
xor
cmp
xchg
in
inc
scas
insl
aas
mov
jl
xchg
xor
cmp
clc
sti
or
mov
popf
and
rorb
mov
aas
push
cmpb
ja
cmpb
cli
push
insb
js
or
push
mov
mov
clc
shlb
fimuls
inc
xor
adc
into
jmp
nop
repz
pop
icebp
jg
not
adc
shl
xchg
jecxz
lret
fcoms
pushf
jbe
les
sti
fildl
or
lahf
insl
std
cmpsb
int
and
negl
insb
push
bswap
jae
mov
or
mov
mov
dec
jnp
jo
lret
dec
dec
push
jb
cmp
jo
pop
xor
cmpsb
jmp
fimuls
das
add
faddl
test
jl
push
cmp
pop
pop
jmp
ljmp
sub
xchg
fbstp
jno
sub
sub
adc
shlb
in
mov
leave
sbb
sahf
cmp
push
rcrb
lcall
lods
dec
dec
add
and
imul
sub
sahf
sbb
xor
xlat
push
or
fists
cmp
or
jge
or
data16
sbb
cmp
and
ficompl
out
xor
xor
or
jae
mov
mov
aas
add
pop
or
repnz
inc
pop
gs
xchg
push
xor
mov
push
jl
popa
daa
cmpsb
pop
addr16
lret
fldt
hlt
dec
addr16
push
pop
mov
xchg
xor
div
xchg
inc
sbb
mov
and
mov
xchg
push
adc
mov
add
imul
ljmp
lds
outsl
clc
fcomps
dec
out
jp
xor
xor
scas
cli
push
iret
push
mov
sbb
jecxz
xchg
in
push
lcall
rclb
push
sub
rcl
ret
push
fwait
inc
fs
rolb
pop
mov
cwtl
aas
arpl
mov
add
scas
fs
inc
pop
ret
adc
mov
rolb
imul
push
stos
pop
lods
insb
push
ds
dec
mov
jne
fadds
pop
out
push
mov
movsb
dec
jl
cmp
lock
or
movsl
mov
push
jl
pusha
xchg
push
ds
xor
push
push
jnp
push
or
jns
cmp
stos
add
or
mov
jecxz
daa
sub
fidivs
sub
or
push
push
fs
inc
or
js
shll
pop
or
mov
sub
cli
pusha
stc
sbb
int3
ret
cltd
fistl
jns
ds
sbbb
fwait
movb
sti
cmp
and
ljmp
mov
cli
insb
pop
pop
cmp
popf
cmpsl
subb
sbb
out
pop
inc
js
adcb
fs
out
mov
repz
sbb
lret
test
dec
cwtl
loopne
test
adc
testl
add
mov
jg
mov
push
adc
imul
sbb
call
push
pushf
mov
insl
cmp
cmc
int
xchg
or
sti
push
in
stos
pop
mov
arpl
inc
sahf
popf
repz
sbb
mov
sbb
cmp
xorl
insl
push
adc
clc
frstpm(287
mov
je
mov
pop
xor
outsl
xor
dec
xor
push
jle
mov
mov
dec
add
inc
fldt
add
inc
insb
push
outsb
xor
ret
sbb
sbb
xor
push
cli
push
push
out
mov
mov
popf
pop
out
das
cld
dec
rolb
cmc
fiadds
dec
fwait
cmc
xchg
imul
push
rorb
in
push
sysexit
repnz
pop
sbb
adc
stc
addl
mov
xor
push
inc
or
mov
mov
inc
int
pop
inc
popa
popa
adc
xor
sbbb
lock
sub
inc
xlat
sub
pop
jno
cltd
test
loopne
push
fwait
pop
iret
pop
lods
adcl
sahf
mov
sbb
leave
rorb
and
push
push
and
and
push
mov
cmp
mov
or
mov
cld
gs
xchg
ret
jp
mov
lods
xchg
fsubrp
adc
fldcw
jge
xor
test
js
fsubl
jmp
lds
shlb
icebp
mov
dec
sbb
push
or
mulb
sub
ret
mov
sub
adc
or
mov
in
dec
lcall
push
pop
inc
push
adc
xchg
dec
rcl
lock
sarl
fwait
jmp
movl
out
jecxz
mov
push
xlat
pop
add
into
add
xor
push
fdivrl
cmp
mov
mov
mov
mov
leave
daa
dec
decb
repz
fcom
mov
push
mov
movsb
or
push
mov
out
push
aaa
sub
int3
cwtl
push
aam
dec
in
xchg
aam
push
cmp
jns
aam
and
ret
das
outsb
sbb
std
fsubr
pop
iret
xorl
mov
or
cmp
dec
xchg
arpl
add
hlt
fs
out
insl
xchg
push
mov
sub
jecxz
jnp
andb
repnz
xchg
mov
dec
andps
xchg
cmpsl
jp
inc
in
lea
out
or
add
xchg
mov
adc
scas
mov
mov
arpl
xchg
inc
sub
arpl
aas
les
mov
mov
push
sbb
fstps
push
pop
punpckhwd
jp
pop
fucom
pop
ror
out
mov
and
add
sub
call
call
das
ss
sub
jo
jp
stos
and
ja
cwtl
pop
mov
loopne
aam
and
xor
jl
nop
sub
sti
shrb
out
clc
pushf
xor
inc
and
cltd
int
push
adc
fwait
aad
out
ljmp
inc
jp
daa
rcrl
mov
inc
or
sub
nop
inc
add
xlat
mov
mov
pusha
adcl
cmpl
pop
loope
push
dec
xchg
ret
jnp
jmp
mov
aas
jb
sarb
test
pop
daa
add
push
inc
jnp
clc
add
inc
push
jl
and
adc
outsb
add
push
aad
bound
mov
dec
rclb
and
pop
inc
jno
mov
adc
mov
xor
out
das
imul
lret
repnz
inc
push
es
pusha
push
dec
sbbb
dec
pop
pop
aad
mov
popa
and
push
dec
ret
stos
push
out
push
push
repz
enter
lods
jne
mov
push
inc
ss
hlt
bound
cwtl
sbb
lcall
add
rcr
push
dec
sarb
jg
mov
cli
out
ficompl
add
stos
cmp
xor
and
pop
xchg
popf
in
cld
mov
dec
insb
das
test
jl
mov
add
jle
rol
loopne
inc
pop
movsl
dec
jge
push
push
fidivrl
adc
outsl
push
adc
and
mov
ret
xor
sbb
xor
sbb
popf
fnstsw
in
mov
sti
icebp
call
mull
and
mov
xor
push
jmp
test
in
and
jl
sar
sbb
push
jae
pop
fs
leave
sbb
mov
inc
sub
repz
icebp
ds
adc
clc
xchg
ss
jmp
fsts
mov
or
loopne
ss
mov
addr16
xor
daa
adc
xor
push
pop
pop
decb
in
and
sarb
add
inc
popf
sahf
cmpsb
push
stos
push
call
mov
mov
xchg
inc
xchg
ss
add
inc
jo
push
lahf
je
jo
sbb
pusha
xor
outsl
ret
mov
push
sbb
decb
or
xor
pusha
aam
out
xor
xor
pop
jg
push
adc
push
sbb
mov
ret
dec
inc
je
sub
inc
pop
add
pop
dec
sbb
inc
cltd
pop
push
rolb
xor
dec
popa
pushf
push
pop
cmp
out
inc
adc
inc
outsb
shl
cltd
pop
scas
pop
mov
dec
jo
jge
scas
mov
f2xm1
jge
scas
pushf
sub
iret
cwtl
loope
pop
push
data16
dec
call
add
and
add
cmp
test
mov
xor
out
inc
push
fwait
sub
jmp
mov
push
and
xor
jne
dec
stos
cs
into
lcall
jge
jl
js
cmp
loopne
fldl
repz
inc
imul
test
cmpsb
lods
pop
data16
add
pop
es
daa
xchg
add
aad
push
mov
xor
mov
icebp
cmp
cmp
inc
mov
mov
adc
sub
push
loope
lds
jp
in
loope
out
pusha
cmpsb
mov
sbb
scas
loopne
mov
fcompl
std
jecxz
repnz
pop
std
dec
or
pop
jl
pop
outsb
sub
nop
stos
or
test
mov
jmp
repnz
int3
popf
add
xor
fcmovbe
mov
push
and
lcall
pushf
loop
sbb
pop
dec
sub
jl
lret
xchg
movsl
push
xor
rclb
pop
jno
and
sub
mov
daa
popf
sbbb
fsub
xor
xor
mov
lds
imul
dec
adc
mov
adc
cmp
and
outsl
adc
sub
inc
or
inc
inc
loop
lods
pop
add
imul
test
lds
in
aas
push
adc
ljmp
fcoms
mov
cltd
inc
sahf
add
inc
aas
pop
mov
in
outsl
dec
xchg
push
and
mov
jbe
mov
mov
inc
aas
sbb
push
add
call
pop
mov
push
out
mov
sub
cmc
and
xchg
mov
loopne
cmp
jmp
jmp
dec
jmp
insl
push
fnstsw
xor
les
mov
push
pop
daa
sbb
mov
inc
repz
imul
inc
push
xchg
scas
movsl
pop
mov
dec
mov
dec
lahf
xorl
cs
jbe
jo
and
stc
push
loop
pop
mov
mov
je
stos
insb
cwtl
sbb
movsb
je,pt
xchg
push
dec
movsl
push
sbb
out
xchg
mov
mov
jae
jb
ds
pushf
inc
mov
xchg
sbb
imul
fs
xchg
filds
sub
jae
cmp
loope
and
lods
cmpsl
repnz
lret
popf
mov
or
cld
dec
mov
test
rcrl
int
push
jb
into
xor
ljmp
aaa
push
sub
mov
jge
adc
cmp
mov
xor
mov
xlat
or
cmc
scas
ja
imul
mov
push
xchg
or
inc
xchg
inc
insb
add
loopne
popa
sub
jp
jns
fs
scas
or
jns
lock
ss
pushf
and
cmc
inc
jl
inc
cld
dec
sbb
les
iret
les
in
test
push
pop
lret
cwtl
push
or
pop
in
xchg
sbb
jo
dec
in
shrl
popf
je
jbe
mov
jns
test
jle
sub
repnz
mov
jbe
mov
mov
int
pusha
cmp
pop
push
and
jl
inc
jecxz
mov
es
aad
mov
pop
xor
lcall
sbb
mov
xor
mov
add
orb
mov
pusha
stc
mov
outsl
push
test
push
xor
std
jne
add
clc
inc
inc
imul
or
xchg
scas
stos
add
push
inc
or
ljmp
ljmp
add
repz
sbb
pushf
mov
add
inc
adc
lock
xchg
ret
jno
pop
lea
pop
inc
loopne
pop
cs
jg
ljmp
add
lods
inc
xchg
add
inc
jmp
and
les
repz
and
popf
lods
sub
ficoms
fnstcw
pop
ja
dec
scas
sbb
mov
fstpt
imul
iret
inc
push
shlb
inc
or
pushf
mov
xchg
sub
nop
gs
xor
jno
xchg
jae
push
dec
add
dec
add
adc
mov
dec
inc
gs
cmp
sbb
sarl
inc
mov
les
jne
mov
dec
and
lret
mulb
sbb
mov
mov
lods
je
es
hlt
stos
xor
fisubrl
cmp
mov
xchg
ret
mov
jbe
je
cltd
jle
push
and
stos
int3
dec
insl
andl
push
inc
sub
mov
mov
subl
pushf
jae
pop
jmp
jne
dec
cmp
sbb
adc
mov
leave
stos
or
cli
mov
lods
or
jmp
lret
push
mov
scas
gs
mov
jecxz
cmp
xlat
shlb
mov
mov
jb
js
stos
xor
adc
inc
mov
pop
loope
push
and
out
add
push
addr16
mov
pushl
jge
adc
fcompl
movsl
aam
mov
xchg
sti
ds
jecxz
mov
jne
jnp
enter
jno
mov
js
out
leave
mov
mov
test
push
ja
nop
fidivrl
or
xlat
stos
dec
lahf
enter
movsl
push
cmpsl
dec
xchg
dec
sub
outsb
stos
cmp
pop
xor
lods
pusha
and
test
sbb
cmc
mov
pusha
xor
add
out
out
pop
out
or
imul
lods
adc
push
mov
mov
rcrl
daa
sbb
jae
insl
aaa
test
stos
les
adc
ret
test
adc
movsl
adc
shrl
adc
dec
or
jns
mov
std
and
call
loopne
push
lods
in
subb
shlb
lcall
or
mov
rcll
or
leave
push
addl
lret
mov
addr16
mov
inc
jp
movsb
pop
mov
ret
pop
pop
bound
lods
jecxz
in
push
mov
xchg
cltd
push
or
cmp
inc
cmp
sbb
jg
outsb
push
add
adc
inc
push
addl
fisttpll
jl
ljmp
loop
sbb
push
mov
xor
shll
ja
jb
mov
or
movsb
pop
jns
test
jmp
mov
lahf
outsb
cmpsb
out
cmpsl
and
push
outsb
in
ret
adc
cmp
test
ror
mov
cmc
jmp
mov
out
pop
mov
mov
mov
sbb
sub
sti
bsr
pop
dec
fwait
add
ret
insl
scas
roll
testl
repz
and
dec
movsl
hlt
xlat
jne
xchg
adc
push
fsub
adc
popl
mov
push
ljmp
mov
or
jecxz
pusha
shll
or
outsl
test
adc
pop
mov
fcoml
les
incl
xor
data16
adcl
mov
nop
ja
push
xor
mov
subl
xchg
push
jg
push
pop
xchg
jl
int3
mov
xor
daa
mov
scas
mov
lret
outsl
test
loope
pop
fdivs
sahf
int3
or
ljmp
pop
push
mov
sbb
and
pop
out
fldt
fimuls
pop
xor
imul
sbb
test
fsubrp
js
loope
push
scas
xor
je
in
pop
aaa
cmpsl
pop
mov
mov
inc
sub
dec
sbb
dec
add
sub
sarb
lcall
push
inc
sbb
jb
add
mov
jp
sarb
in
xor
fsubrp
scas
repnz
and
sahf
inc
pop
jge
sub
hlt
cltd
test
push
sub
inc
into
or
xchg
dec
sbb
hlt
lods
mov
push
mov
rcl
jp
sbb
mov
inc
sub
out
add
adc
dec
and
leave
inc
in
dec
mov
mov
sarl
mov
push
iret
adc
roll
sbb
mov
xor
fnstcw
xor
data16
int
push
or
outsb
sarl
aaa
mov
dec
mov
push
dec
shlb
push
sti
sbbl
mov
add
pop
fwait
andb
or
xchg
pushfw
mov
push
cmp
lods
cmpsl
sbb
stc
insl
dec
mov
push
mul
fcmovnbe
xchg
inc
push
mov
repnz
sbb
mov
and
in
push
aad
icebp
js
xor
test
repnz
xor
cmp
test
jno
pop
loop
or
xchg
push
test
and
xor
int3
mov
add
cmpl
push
lret
inc
sbb
stos
cld
movsl
cmp
ficoml
xor
roll
cmp
in
cltd
cld
jns
and
fistl
lahf
ljmp
mov
arpl
sbb
testl
inc
clc
ss
cmpsb
adc
movsb
inc
mov
mov
or
and
jnp
fldt
outsb
xchg
je
das
pop
movb
and
mov
and
test
sti
adc
xor
mov
js
aas
ret
sub
inc
jp
mov
inc
mov
fidivl
out
mov
ss
mov
stos
loop
addb
mov
lret
lret
jns
mov
fiaddl
fiaddl
inc
pop
cmp
add
punpckldq
inc
pop
adc
in
pop
cmp
xchg
repnz
in
rcrb
xchg
movsl
repz
and
cmpl
jne
jnp
out
add
mov
cmpsl
xchg
arpl
adc
ss
sbb
mov
and
sub
lock
cli
mov
test
jl
push
add
jecxz
push
mov
into
in
add
into
add
cmp
jmp
sub
out
mov
jns
mov
mov
ret
and
movsl
adc
imul
and
les
mov
push
lahf
dec
insb
je
adc
stos
pop
pop
sub
or
jo
dec
push
push
add
fnstcw
dec
fisubl
lahf
mov
fcompl
add
dec
int3
xor
sahf
out
sbb
adcb
lock
movsl
xor
andl
lods
cmpsb
and
xchg
adc
dec
dec
cmpsb
xchg
movsb
add
insl
ret
jge
jbe
pushf
pop
push
subb
add
test
popa
add
icebp
mov
gs
out
xor
dec
and
dec
mov
or
roll
xchg
in
lret
cwtl
add
gs
fimull
jmp
add
xchg
gs
hlt
into
sbb
rcrl
add
or
outsl
ret
or
je
pop
call
dec
xlat
bound
out
sub
aam
shl
pop
jbe
dec
mov
cs
push
cmp
flds
xor
arpl
popa
push
sub
inc
mov
imul
iret
cmp
sub
xchg
dec
jecxz
inc
shl
mov
cwtl
dec
adc
jg
lret
adc
or
jmp
fcoms
xor
dec
ret
adc
stc
inc
dec
leave
mov
dec
inc
lahf
call
out
adc
xor
pop
ljmp
ljmp
mov
int
pop
lcall
jbe
test
shll
mov
test
and
shll
cltd
pop
inc
test
lea
sbb
les
pop
not
cmp
xor
addr16
jl
test
shlb
or
arpl
cmp
es
xchg
or
imul
arpl
aam
aad
sti
and
ds
ret
fdivl
shr
push
bnd
cld
xor
add
ss
cmpsl
mov
rcrb
dec
ds
pop
icebp
inc
sub
cmp
jnp
es
adc
sti
mov
jle
xchg
and
insl
jnp
cmc
xor
lcall
cmpl
in
fisubl
mov
pop
xchg
xchg
mov
xlat
or
mov
arpl
sub
test
sarb
cld
mov
dec
add
sarb
aas
sbb
inc
addb
sbb
addr16
mov
xlat
inc
dec
jno
pop
xor
xchg
pop
shl
mov
dec
mov
cltd
inc
dec
lods
mov
ljmp
ja
aam
cmpsl
cmpsb
cmp
sarl
push
add
jb
pop
pop
sbb
fidivrl
mov
mov
add
movsl
in
add
aaa
push
mov
arpl
push
out
faddl
cmovle
lods
cmp
rol
ret
addr16
mov
mov
cmp
cmpsb
mov
xor
insl
sarb
data16
test
jo
setl
iret
mov
push
mov
mov
pop
lret
fmuls
mov
shll
push
sbb
aad
mov
push
and
arpl
jbe
or
mov
outsb
mov
data16
jecxz
add
test
loope
cmp
pusha
mov
cmp
jmp
leave
repz
push
push
shrl
nop
pushl
or
in
arpl
push
inc
pop
nop
mov
cmpl
test
mov
rorl
mov
int
add
add
and
insb
out
cli
loopne
movsl
xchg
cld
cmpsb
push
pop
in
in
xchg
pushf
and
cmp
fwait
xchg
lods
loope
push
ror
scas
adc
xor
jae
lds
xchg
lcall
ljmp
shlb
xchg
mov
xor
mov
pushf
dec
jo
adc
idiv
adc
push
out
push
push
ror
add
jnp
int
pusha
jnp
popa
shll
pusha
jns
jle
inc
mov
imul
mov
adc
pop
aad
popl
inc
xchg
fbld
inc
das
fdiv
imul
adc
bound
jno
mov
xchg
daa
pushf
aas
adc
sbbl
ljmp
sub
insl
push
outsb
imul
stos
xchg
jns
mov
sub
pop
mov
dec
jp
jmp
and
vmread
dec
push
rcrb
xchg
insl
sti
cmpsl
je
jae
cmp
loop
adc
js
cmp
xor
into
xlat
js
mov
fsubrl
fildll
mov
divb
repz
aaa
xor
shrl
loope
imul
lret
dec
jnp
sbb
cmc
mov
or
sub
loop
mov
jmp
sahf
jecxz
xchg
dec
lds
inc
mov
jp
not
push
sti
add
test
loop
dec
pop
jmp
loop
pushf
sub
les
test
fidivs
mov
mov
stos
xchg
fcmovne
jne
cli
add
push
loopne
sub
data16
xchg
inc
mov
xor
jne
mov
cmpb
dec
sbb
jp
notb
xchg
pop
out
movsb
add
clc
xor
xchg
dec
add
pushf
cmpsl
adc
sbb
dec
inc
aaa
jge
mov
insb
sti
push
jno
cmp
lret
aam
dec
mov
mov
sbb
outsl
lods
push
and
fisttpl
mov
sub
out
daa
mov
pop
iret
push
jl
cmp
into
cld
add
dec
stc
add
jns
lods
sbb
pop
or
ret
adc
pop
jo
ljmp
shlb
les
or
fnstsw
jne
mov
jno
jmp
dec
mov
or
pop
mov
dec
fadds
andl
mov
into
outsl
adc
fwait
stc
xchg
mov
push
in
cli
rcrl
jmp
cmp
jge
xor
ja
leave
in
pop
ss
dec
ret
sbb
arpl
hlt
imul
int3
fstpl
dec
xchg
repnz
out
mov
dec
gs
in
in
xchg
test
cmpsl
jnp
cs
enter
cmp
dec
mov
mov
cltd
sbb
cld
js
mov
ret
pushf
cmp
and
mov
sub
jge
mov
cmp
push
sahf
je
inc
cs
xor
inc
lret
push
adc
les
test
jg
out
push
sub
jmp
inc
adc
test
inc
adc
add
sbbl
sahf
xchg
jb
push
negl
xor
in
std
push
sub
pop
das
sbb
mov
cmp
ljmp
outsl
mov
dec
int
ss
leave
cmp
gs
sbb
pop
stc
pushf
mov
jbe
lock
aam
daa
xor
add
cli
dec
jnp
stc
std
fs
xchg
mov
mov
scas
mov
and
sub
scas
js
ljmp
mov
repz
clc
and
dec
out
imul
push
xchg
cli
and
and
xlat
ret
sbb
push
rcl
pop
mov
out
mov
inc
cs
nop
mov
xorb
add
mov
inc
in
inc
cmp
std
dec
dec
mov
xor
clc
sar
outsl
lahf
xchg
xor
push
add
jb
int
push
push
xor
mov
iret
push
fldenv
repnz
fisttps
ror
fisttps
jnp
mov
sub
mov
jmp
stos
mov
fwait
rcrb
pop
jg
pop
jo,pn
fistps
add
add
cmp
sub
xchg
xchg
test
xchg
roll
cmpsb
add
or
sbb
or
mov
cmp
shr
xchg
push
addr16
xchg
stos
or
dec
sbb
out
jmp
sbb
imul
cmp
cld
xor
das
sub
imul
aas
jo
xchg
out
mov
gs
dec
push
xor
xor
ret
xor
mov
scas
fsubs
in
cltd
sti
dec
iret
jnp
lods
xchg
into
mov
ds
jg
add
push
add
sbb
inc
xchg
mov
rep
mov
test
sbb
adc
stc
imul
lret
int3
shl
xor
ret
jns
lods
test
cmp
dec
or
cltd
mov
xchg
mov
cmpsl
mov
stos
add
and
adc
push
adc
addl
pop
and
and
mov
jo
and
psubsb
sub
inc
lods
das
dec
and
cltd
idivl
pop
fs
ljmp
dec
cltd
xor
fildl
ja
adc
pop
icebp
fistl
mov
or
jmp
ja
push
daa
dec
push
aad
sbb
cwtl
addr16
mov
jb
sub
or
lcall
scas
ret
inc
mull
out
enter
scas
jnp
sbb
dec
data16
jbe
stc
mov
lds
movsl
or
inc
mov
sbb
mov
fidivrs
dec
movsb
xor
movsl
and
jl
cmc
mov
or
loope
cmp
mov
push
lcall
imull
shl
imul
mov
sar
mov
out
test
mov
js
jns
xor
call
push
cmpsb
ja
jle
xchg
mov
pushf
sub
mov
inc
neg
fld1
xchg
and
nop
xor
add
in
scas
inc
mov
movsl
subb
xlat
pusha
in
repz
push
sub
mov
ret
sub
xor
test
mov
into
in
sub
xchg
pusha
mov
push
ss
je
add
pop
rcl
xchg
and
jae
adc
test
mov
call
mov
xchg
in
sub
fwait
pop
setae
and
cltd
sub
or
sub
jecxz
inc
mov
dec
lret
data16
cmp
shl
pop
push
fistpll
sbb
jne
sbb
inc
and
shlb
repnz
fists
mov
push
lock
xor
xchg
out
js
cs
push
lret
mov
xchg
mov
insb
and
mov
test
push
lods
inc
dec
fnstsw
mov
dec
dec
in
mov
mov
push
es
xchg
movl
jle
lret
icebp
mov
enter
add
push
ret
mov
andb
dec
ljmp
sarb
in
mov
rclb
adc
and
out
xchg
xchg
push
pop
mov
in
mov
add
lods
xlat
push
and
stc
pop
dec
sbb
repz
push
adc
jae
aaa
push
jle
movsb
sbb
xchg
in
in
stos
pop
xor
bound
xchg
repnz
xlat
xchg
inc
stc
out
lods
sarb
test
lods
movsb
and
push
sbb
mov
out
and
out
or
shrl
jecxz
sbb
shr
or
jl
les
sbb
add
jl
push
shrb
cld
mov
push
icebp
fimuls
push
lds
jno
daa
sub
xchg
test
dec
mov
or
hlt
xchg
jmp
adc
push
and
mov
orb
daa
adc
lret
fildll
jbe
mov
jmp
sub
dec
jns
gs
adc
jl
and
aaa
leave
xchg
movsl
dec
lahf
jnp
xchg
std
das
jl
dec
stos
pop
jnp
push
dec
xor
pop
aad
sti
das
mov
fcompl
rclb
pop
mov
or
or
cmc
inc
sub
pop
fstpt
dec
dec
daa
jnp
stos
test
adc
sbbb
pop
mov
xchg
scas
mov
pushf
mov
pop
jl
mov
movsb
mov
imul
out
adc
mov
nop
mov
cmp
test
in
aas
jl
or
xchg
cli
jecxz
stc
push
clc
lahf
lea
sbb
sbb
scas
test
out
out
pop
push
shlb
xchg
mov
repz
cmpsb
jmp
jp
cmp
cmp
jno
or
pop
in
push
insl
adc
mov
mov
scas
ret
repz
add
js
mov
cmp
mov
lcall
in
mov
xor
inc
icebp
add
mov
scas
mov
je
push
push
ret
pop
je
ficoml
xchg
push
pusha
mov
xchg
or
outsb
outsl
faddl
jne
jno,pt
ret
into
lret
aas
mov
mov
jg
leave
arpl
stc
jle
lcall
pop
ds
call
lcall
xchg
push
pop
loope
xor
jb
cld
cs
pop
and
or
jp
mov
and
ljmp
or
in
sbbb
sbb
add
jns
insl
cmp
test
aam
out
mov
or
enter
sbb
in
xor
nop
xchg
xor
and
pop
mov
icebp
lcall
and
insb
mov
and
pop
lret
xorl
sub
mov
xor
arpl
jle
and
icebp
mov
xchg
popf
shll
aaa
adc
imul
jecxz
xchg
mov
mov
mov
cld
insl
lea
add
gs
xor
cmp
dec
inc
xchg
mov
stc
shl
mov
loopne
je
andl
mov
negl
aaa
mov
push
mov
push
cld
lret
fistpll
sub
ljmp
xchg
mov
push
mov
lret
ror
mov
sbb
and
sti
adc
and
jecxz
or
shrb
fistps
test
xchg
repnz
mov
push
imul
sbb
push
xlat
xchg
fsqrt
pop
loope
inc
lock
xchg
aam
loopne
push
mov
ss
inc
and
mov
shll
sbb
notl
xchg
mov
nop
dec
xor
loopne
sahf
in
roll
xchg
push
mov
xor
and
pop
aas
test
jp
sbb
in
pop
les
inc
mov
pushf
cmp
stc
pop
shl
mov
and
in
and
lret
xlat
inc
mov
subb
enter
les
or
pop
outsb
adc
ds
daa
xchg
dec
repnz
push
mov
add
insl
sub
mov
push
mov
daa
cmpsl
cmp
xchg
in
xchg
lea
movsl
test
scas
in
lcall
push
imul
ret
or
mov
icebp
mov
xor
in
test
fsubl
shr
push
adc
inc
jns
sbb
inc
rclb
and
sbb
lock
pop
mov
cmp
in
xor
xchg
arpl
push
mov
xchg
cli
mov
cmp
mov
push
test
in
and
repnz
pusha
push
test
lcall
insb
or
inc
sahf
lahf
adc
movb
mov
pop
aaa
sahf
pop
pop
add
iret
fldenv
daa
xorb
loopne
fxch
and
dec
and
sbb
stos
push
and
sub
mov
jecxz
negl
icebp
xor
dec
in
push
pop
pop
cmp
dec
xchg
pop
mov
adc
mov
mov
imul
pushl
jb
aad
outsb
arpl
mov
xchg
inc
xchg
scas
out
imull
inc
mov
push
imul
je
mov
fldcw
and
sub
and
add
pop
movd
cmpl
adc
cmp
pop
sarl
lods
jl
inc
or
dec
mov
add
scas
sbb
enter
sbb
repnz
add
call
or
add
ret
xor
mov
push
mov
push
cmp
cmp
pop
ja
dec
out
lret
fildll
fsubrl
and
or
ss
stos
mov
dec
cmp
sahf
xchg
mov
imul
xor
and
push
mov
inc
pop
mov
fiaddl
addl
xchg
in
mov
fistl
jns
insl
in
xor
ficoms
loope
test
imul
pop
das
jno
adc
pop
imul
jae
xchg
mov
jne
mov
push
push
mov
inc
mov
mov
pop
inc
and
in
test
scas
pop
enter
bound
inc
xor
mov
add
inc
sub
orl
movsb
icebp
jns
bound
jne
adc
cmp
xchg
gs
lret
cmp
in
sbb
push
xor
js
leave
xchg
out
mov
addr16
xchg
pop
jne
scas
jbe
lret
xor
cmpsb
aad
xor
pop
pop
mov
xchg
scas
jge
ja
ss
sahf
ljmp
pushf
leave
lret
fidivrl
xor
xor
mov
adc
push
rolb
dec
dec
sbb
xchg
rol
jle
jnp
push
pop
cmp
scas
inc
loopne
mov
subl
sti
adc
push
pop
lahf
mov
mov
ficoml
push
leave
lret
mov
or
int3
xor
testl
pop
inc
and
iret
mov
pusha
insb
or
mov
lods
hlt
test
je
jne
idiv
mov
sahf
cmc
xchg
adc
and
stos
mov
cltd
cmpl
mov
mov
hlt
xchg
xchg
cld
lahf
jecxz
jnp,pt
or
mov
stos
mov
fwait
outsb
jns
mov
call
push
mov
dec
aad
aad
cmp
popa
mov
dec
wrmsr
dec
dec
mov
push
test
cmpsl
mov
imul
dec
ja
mov
inc
clc
adc
sub
stos
mov
loope
adc
push
test
mov
fidivs
insl
push
jg
jle
and
xor
and
mov
ret
jl
sbb
mov
sbb
pushf
and
ja
fdivrs
pop
pop
mov
xchg
ljmp
aas
xor
leave
addr16
call
adc
mov
decl
add
mov
daa
fmuls
movsl
cmp
rclb
daa
push
out
outsl
ss
push
cmp
sbb
mov
out
mov
adc
push
sahf
fs
adc
cmpsl
push
push
in
movsl
push
repnz
fstl
popf
and
xchg
repnz
push
xor
jle
into
loopne
jne
rol
cwtl
sarl
popa
inc
les
xlat
loopne
jg
stos
dec
adc
jns
inc
in
ficompl
add
push
into
mov
cltd
lds
out
add
pop
sbb
push
mov
push
jae
test
sub
and
push
xor
daa
cmova
jmp
mov
xchg
jne
mov
pop
pop
push
loop
xor
rcrl
pushf
mov
mov
push
mov
out
cmp
imul
aam
push
mov
dec
popa
in
test
xchg
push
sub
jg
xchg
push
stc
dec
pop
adc
sub
pop
sahf
mov
sti
cmp
and
call
pop
or
pusha
inc
lds
sarb
adc
jne
push
jne
stos
pop
push
adc
adc
or
iret
pop
xor
jbe
stos
dec
xchg
repz
arpl
mov
mov
mov
adc
jbe
movsb
xchg
push
pop
sub
push
xlat
pop
pop
das
adc
fdivl
loope
outsb
push
push
add
fdivs
aas
fisubs
jmp
roll
cltd
cwtl
aad
inc
jmp
fidivl
pop
das
pop
das
push
pop
mov
mov
call
adc
mov
jnp
pop
lea
mov
pop
mov
aam
out
and
ret
pop
loop
jno
lods
pop
arpl
pop
repnz
leave
test
inc
mov
inc
imul
notl
jl
test
push
push
pop
inc
add
in
je
pushf
enter
movsb
pop
inc
dec
stos
mov
jnp
inc
mov
xchg
xchg
aad
jno
fsubrs
sbb
lret
das
jl
popa
dec
mov
mov
sub
mov
push
testb
sub
sbb
mov
cmc
rol
and
aad
jno
cli
xor
and
adc
pop
mov
testl
sbbb
lahf
adc
arpl
pop
aad
in
pop
jbe
cmp
pop
add
data16
mov
clc
repnz
pop
pop
stos
push
jge
mov
gs
sub
jo
cmc
add
das
icebp
mov
push
roll
mov
adc
pop
pop
cld
scas
subb
test
mov
add
mov
add
mov
jmp
xchg
std
inc
das
mov
xchg
sbb
mov
pop
gs
mov
iret
nop
ret
or
insb
lods
out
fcomi
aas
clc
jno
aad
jae
mov
test
push
add
nop
or
mov
popa
lods
inc
fsubrs
adc
ret
or
cmp
cwtl
push
dec
adc
cmpb
std
pushf
aam
and
xor
out
jle
ss
in
push
cmp
mov
ret
push
mov
sub
loop
scas
pusha
test
push
loop
or
movsb
icebp
test
add
mov
and
adc
push
mov
insl
mov
faddl
and
mov
mov
jge
lds
sub
data16
dec
mov
lods
test
lods
js
jl
idiv
xchg
int3
cmp
test
fldenv
subb
filds
int
std
sub
jg
pop
clc
outsb
stos
in
fidivs
or
jl
in
mov
clc
jb
lock
and
jp
mov
pop
iret
mov
jno
pop
jnp,pn
push
outsl
fcoml
jb
adc
sarl
push
rolb
and
sub
jg
addr16
cli
pop
in
scas
or
or
stos
xor
out
mov
inc
rcrl
lcall
mov
imul
pop
rclb
stos
xchg
mov
mov
xchg
pop
testb
pop
xchg
aaa
mov
xchg
pop
inc
xor
fistpl
out
mov
xchg
push
mov
push
js
inc
stc
sub
jl
pushf
stos
xorb
dec
int3
std
mov
add
xchg
jns
cli
lahf
sub
push
mov
daa
les
adc
cmp
ret
je
jo
lods
jne
dec
xchg
fcmovb
lock
xorl
mov
sub
mov
dec
jae
jg
push
xor
dec
jae
mov
xchg
pop
sub
out
fsubs
sub
loope
fnstsw
addr16
rclb
dec
jecxz
test
das
sbb
add
in
sbb
inc
or
arpl
mov
movsb
lret
out
fimuls
mov
sbb
gs
in
outsl
gs
lea
mov
mov
xchg
mov
pop
push
push
sahf
push
out
push
push
add
dec
push
neg
icebp
lock
xchg
cmp
loopne
stos
mov
cmp
mov
and
nop
insb
sbb
fmulp
add
mov
jle
and
repnz
loope
sbb
insl
enter
inc
dec
inc
sub
lock
lods
enter
or
scas
push
or
insl
cli
cmp
mov
inc
mov
sbb
jmp
std
mov
out
js
jp
jo
pop
inc
sti
jo
ret
jae
stos
jmp
inc
dec
cmpsb
mov
push
bound
sub
rorl
xor
inc
push
adc
data16
jle
add
addr16
outsl
popf
jmp
and
dec
aam
or
dec
and
out
push
mov
fiaddl
mov
mov
jge
and
ret
or
mov
imul
aas
push
cmp
mov
je
and
xor
rcl
jae
lea
jmp
push
inc
sahf
fstpt
mov
sbb
dec
cmpsl
int3
pop
mov
xchg
repz
in
push
dec
xor
xchg
in
or
pop
adc
sbb
scas
cmp
lret
pop
stos
shlb
sub
sbb
jle
pop
cltd
movsb
imul
in
out
data16
or
syscall
adc
lds
jnp
pop
iret
adc
mov
inc
mov
or
outsb
fs
jge
arpl
push
call
in
lcall
lods
sbb
pushf
jp
push
rolb
xor
mov
sbb
dec
addb
ret
stos
push
iret
cmp
mov
push
repz
dec
or
jg
pop
ljmp
aaa
sbb
aad
pop
in
test
vpshufhw
sub
push
jl
popa
sti
mov
movsl
push
xor
push
mov
pop
jae
das
push
mov
cmc
mov
lahf
lcall
insl
cli
xor
xor
scas
aas
bnd
imul
lcall
lcall
mov
sub
repz
in
sbb
bound
jbe
insl
insb
jo
adcb
jecxz
pop
cmpsb
add
pop
pop
pop
call
cmp
or
out
sti
xorb
jge
insb
mov
jno
pop
mov
call
loope
inc
dec
dec
std
pop
loope
stos
xor
cmc
jp
dec
xor
adc
shl
xlat
jo
sbb
incl
push
jb
mov
int
clc
sub
mov
clc
or
dec
or
fimuls
out
xchg
adc
aad
mov
lahf
jae
and
push
leave
jmp
in
mov
mov
gs
xor
imul
inc
add
sub
mov
xchg
leave
xchg
xor
lods
mov
ja
push
mov
fucomp
jge
lcall
cmp
int
orl
insl
mov
inc
cmp
adc
dec
in
repz
sbb
mov
or
push
mov
out
mov
and
pop
mov
jmp
push
in
subl
mov
ja
jne
inc
jnp
sub
loope
es
sbb
pop
push
loopne
xchg
xchg
push
and
movd
aas
mov
fldenv
es
sub
mov
jle
cs
clc
mov
sti
dec
mov
enter
aad
mov
das
lcall
fistl
and
mov
dec
stos
out
ss
xor
xchg
mov
insl
push
out
outsl
out
inc
xor
sbb
jle
cmp
jg
add
hlt
inc
cmp
insl
pushaw
pop
and
jp
push
mov
xchg
bound
nop
pushf
stos
and
cmp
or
cmp
notb
mov
repnz
mov
mov
lea
jnp
sahf
insb
inc
xchg
repnz
mov
and
or
and
popf
stc
adc
and
shlb
fisttpl
stc
mov
arpl
loopne
push
enter
pusha
push
cmp
mov
nop
xor
dec
xlat
lahf
test
pop
sub
xchg
sbbl
mov
cwtl
pusha
cmp
inc
cmp
mov
call
mov
xchg
lock
leave
in
cwtl
xchg
fwait
lcall
adc
mov
jmp
mov
inc
out
into
jecxz
cli
inc
xchg
sbb
dec
loop
mov
xor
dec
dec
ds
cwtl
arpl
test
inc
insl
sub
jnp
pusha
scas
dec
jmp
inc
cmp
jbe
xor
push
mov
cmp
sub
add
dec
push
das
jb
or
adc
cmp
adc
cmp
adc
mov
mov
and
pop
ret
pop
shll
jbe
outsl
dec
mov
cmp
push
push
shll
clc
stc
fcoml
into
lods
into
xchg
cmp
jmp
cwtl
or
repz
iret
roll
jg
and
add
xchg
fbld
fincstp
jns
adcl
mov
lcall
lds
xchg
pop
mov
sahf
scas
cwtl
push
adc
loopne
ljmp
xorl
test
ljmp
push
push
jns
lock
mov
pop
push
push
sub
fwait
sbb
imul
std
push
push
sub
mov
out
push
push
arpl
pusha
aam
test
xchg
imul
mov
stos
mov
jbe
int3
inc
inc
lock
pop
outsb
icebp
jle
je,pn
mov
aaa
push
dec
pop
and
aaa
dec
pop
mov
leave
sbb
inc
sub
ret
xchg
rcll
cmp
stos
cld
cmp
les
mov
sbb
dec
bound
out
aam
mov
into
dec
in
and
push
xor
xchg
bound
push
insb
iret
and
adc
push
sub
adc
jl
insl
les
stc
loopne
inc
insb
ret
loop
push
jecxz
nop
cmp
xchg
dec
aas
dec
clc
cmpsl
aad
dec
ret
repnz
xor
repnz
pop
push
mov
inc
test
jo
xchg
mov
sub
clc
shlb
stos
pop
add
ss
dec
in
jecxz
mov
sub
in
inc
insl
in
inc
xchg
jbe
sub
mov
ret
ja
xchg
leave
push
ret
mov
daa
mov
sub
aas
movsb
enter
shl
subl
stos
or
mov
insl
or
push
pop
out
mov
imul
and
cli
movsb
and
mov
jmp
mov
addr16
push
sub
xor
cmc
out
imul
inc
xor
enter
int3
test
int
ja
mov
mov
mov
ds
cs
mov
out
in
inc
xchg
dec
mov
popf
mov
fstps
adc
and
xor
dec
or
arpl
jmp
flds
adcb
loop
popa
ret
shl
arpl
repz
and
adc
cwtl
insb
outsb
mov
test
push
rorb
mov
pop
testb
popa
outsb
cli
stos
dec
es
pop
inc
fisubrl
pop
push
mov
pop
push
mov
sbb
lret
xadd
push
cld
mov
pop
pop
and
pop
add
iret
jge
or
add
mov
mov
daa
inc
push
dec
sub
out
aad
jne
pop
addr16
popa
rcll
data16
cmp
sarl
xor
not
inc
xor
mov
dec
aaa
mov
dec
rcrb
cld
loope
push
sbb
push
scas
and
inc
repz
jns
sbb
inc
sbb
popa
xor
lret
xor
lahf
sbb
into
add
call
popa
jo
sbb
mov
push
scas
pop
sbb
xchg
scas
push
jno
mov
cmpsb
insb
dec
arpl
mov
icebp
xor
fiaddl
xor
inc
xor
push
in
jmp
leave
push
or
pop
sti
in
xchg
cmpsl
jmp
inc
mov
push
test
xchg
jle
mov
repz
xchg
sbb
xchg
sbb
popa
orb
push
fwait
lds
fisttps
je
mov
call
jb
aas
sbbl
btr
mov
dec
in
pop
orl
xor
repnz
mov
adc
lcall
out
shrb
lret
test
dec
dec
loope
mov
mov
push
jmp
lss
outsl
inc
leave
movsl
outsb
fstpl
cld
fimull
push
mov
lahf
sbb
stos
aaa
outsl
cmp
and
inc
xchg
jg
in
push
sahf
lret
mov
mov
mov
dec
imul
fidivs
and
xor
cmc
scas
ja,pn
daa
jl
pop
mov
pop
mov
mov
aam
fisubrs
pop
sbb
ret
adc
cmpsl
xchg
pop
xchg
xor
pop
fcmovnb
pop
inc
cmpsb
dec
mov
mov
and
out
pop
mov
inc
dec
mov
and
loopne
dec
ss
adc
testl
addb
test
fimuls
cmp
or
sub
stos
jmp
adc
xor
push
inc
mov
and
jmp
movsl
movsl
and
mov
inc
xlat
aam
icebp
mov
imul
sub
test
push
hlt
cmc
ret
mov
xchg
arpl
or
rorl
xor
adc
jo
pop
adc
lret
cs
out
jno
pop
pop
xor
out
xorb
push
mov
mov
aaa
adc
and
fstp
add
into
mov
rcrb
aas
inc
into
pop
push
bound
pop
mov
loop
lods
scas
jecxz
cmp
xchg
stos
adc
dec
popf
pusha
ret
mov
mov
test
xchg
dec
sbb
mov
leave
jb
xor
xor
jge
xor
lcall
xor
cs
rolb
clc
testb
mov
mov
jl
push
push
pop
cmpsb
clc
cmp
cmp
shll
xchg
add
orl
cltd
fwait
xchg
sub
call
test
adc
pop
insl
divl
jge
xor
and
mov
push
jne
mov
rol
outsb
push
jg
mov
push
mov
popf
fisubrs
ror
mov
roll
or
cmp
xchg
dec
or
in
cmpsl
jns
int3
sbb
loopne
lods
pop
adc
dec
adc
cmpsb
inc
sbb
movsb
xor
imul
mov
leave
scas
in
adc
pusha
add
inc
aas
push
add
fnstenv
icebp
fisttps
imul
out
rorl
bnd
sub
mov
pushf
idivb
push
jmp
test
sbb
pop
jne
mov
push
sub
mov
int
xor
aaa
pop
or
icebp
bnd
and
sbb
push
inc
cmp
aas
sub
cltd
jecxz
daa
pop
in
push
adc
sarb
pop
add
loope
mov
jo
fs
les
gs
movsl
lds
popa
imulb
mov
gs
xchg
adcl
int3
pop
pop
xlat
xchg
test
lcall
mov
mov
repz
mov
cmp
jns
bnd
inc
int3
pop
push
dec
pop
push
push
lods
add
pop
sub
imul
pop
inc
sub
into
sbb
and
cmp
jge
out
xorl
mov
insl
sarb
add
imul
add
sub
mov
imul
mov
sarb
mov
cmp
movsl
imul
test
sub
insb
push
mov
outsb
fmull
inc
and
test
or
push
jmp
std
bnd
mov
mov
inc
test
addr16
xor
imulb
outsl
test
mov
nop
and
mov
adc
loope
loope
or
mov
aam
cmpsb
jne
xchg
and
push
test
fwait
ss
in
movsl
cmc
cs
rclb
push
outsl
bound
mov
inc
jae
mov
les
inc
ljmp
call
adc
loop
pop
fisttps
dec
shl
xchg
xchg
dec
xchg
add
and
fxch
sahf
sub
pop
jnp
out
jne
mov
mov
push
mov
in
ja
inc
dec
stos
pop
sbb
cltd
xlat
bound
js
movb
push
mov
sub
insb
arpl
mov
ficompl
repz
lret
cld
adc
je
stos
aam
movsl
shr
jg
sub
xlat
test
push
leave
enter
or
pop
inc
mov
pop
cld
push
cld
ret
push
sarb
call
notl
shrl
in
mov
jge
popa
cmp
inc
movsl
out
push
lret
mov
outsl
add
or
out
push
jne
jb
pop
xchg
pusha
aaa
push
test
sar
dec
mov
imul
out
cmc
cltd
mov
test
pop
pop
mov
xor
and
out
jno
outsl
dec
mov
icebp
cmp
or
pop
inc
imul
push
jb
into
js
or
add
xor
aaa
ss
pop
sbb
mov
push
xchg
jp
or
lock
pop
jle
loop
fdivl
gs
loop
sub
in
or
xor
gs
int
jnp
and
inc
push
clc
out
stos
pop
dec
pushf
mov
dec
fsubrs
pop
sub
push
arpl
xchg
into
sbb
jne
or
push
xchg
lea
idivb
inc
add
xor
mov
jmp
xor
mov
dec
lods
loope
scas
sub
fcmovnb
stc
aas
test
sbb
xor
adc
and
mov
push
or
pop
dec
sarl
inc
insb
push
aam
mov
mov
shrb
dec
sbb
int
outsl
aad
dec
mov
push
inc
push
jb
sbb
jmp
mov
mov
hlt
idiv
mov
dec
push
sbb
push
and
cmpsl
clc
in
pop
adc
inc
lea
mov
lds
mov
cmp
es
in
push
jle
and
jo
icebp
test
pop
push
les
xchg
mul
cmc
outsb
mov
mov
mov
or
lret
push
icebp
dec
push
fnsave
push
mov
ret
imul
inc
xor
xchg
fs
or
aas
push
add
div
popa
lret
xor
mov
pushf
mov
xchg
mov
jbe
push
adc
push
sbb
ss
pop
or
negl
xchg
inc
out
adc
mov
push
cwtl
jo
jno
bound
sub
out
mov
mov
mov
xor
arpl
into
out
std
push
mov
outsb
xor
outsb
jo
xchg
shrb
fistpll
shr
out
jno
scas
setae
pop
aaa
sahf
mov
dec
mov
std
pop
sbb
and
imul
mov
aam
loopne
popa
mov
sti
pop
in
add
adc
mov
adc
pop
mov
add
out
cmpsb
jecxz
fwait
sbb
sub
int3
xchg
pushf
lret
xlat
xchg
pop
das
jnp
sbb
lret
pop
adc
clc
add
lods
jp
sub
icebp
adc
loop
int3
or
imul
int3
add
movsl
jae
scas
repz
inc
stos
pop
lds
int3
jge
adc
jnp
jmp
es
push
pop
xchg
push
cmc
ret
pop
xchg
sbb
movsl
in
sub
xchg
out
shll
mov
aas
mov
daa
cld
test
dec
pop
inc
jae
imul
test
imul
xlat
sbb
push
mov
adc
popf
push
jno
nop
lods
sbb
mov
push
das
cld
adc
inc
pop
in
stc
inc
push
int3
or
xchg
shrb
adc
mov
out
jb
sub
xor
dec
test
or
data16
cmp
mov
push
outsb
and
decl
mov
outsl
lods
xor
adc
or
xchg
repnz
mov
dec
mov
out
fisubl
mov
fistps
fadds
out
add
int
and
inc
mov
or
mov
lret
jb
mov
jl
jo
xchg
insl
jae
mov
stc
mov
fidivrl
aam
sub
movsl
cwtl
mov
push
loopne
ret
ret
les
rcrl
lcall
sbb
and
jmp
push
pop
inc
fdiv
lret
lods
cmp
xchg
jno
jae
ret
out
js
dec
mov
inc
and
aaa
sbb
shl
cmp
jne
inc
mov
ret
push
xor
loope
andl
xlat
or
jle
mov
hlt
fdiv
negl
aaa
mov
pop
iret
hlt
push
lds
clc
xchg
xor
insl
jnp
insb
mov
cmp
enter
add
out
lock
adc
jp
cli
xor
sbb
dec
mov
shlb
pop
add
jecxz
test
and
mov
pop
add
outsb
xor
ret
int3
dec
jecxz
mov
leave
imull
mov
std
andb
xchg
mov
popa
sti
clc
sub
dec
lea
jae
out
adc
jle
pop
mov
mov
pop
fxch
mov
rcrb
add
xchg
mov
mov
fnstenv
xchg
add
mov
repnz
jmp
ret
inc
out
and
push
mov
enter
lcall
cmp
dec
in
repnz
popa
sub
cmp
mov
jp
movsl
xchg
in
mov
fsubl
into
pop
sbb
mov
outsl
dec
mov
shrb
xchg
sub
fsub
fstl
sub
pop
adc
sbb
ret
lds
cmc
dec
cld
or
aaa
pop
int
cltd
and
sbb
outsb
push
sbb
out
pop
ss
loopne
or
les
mov
iret
aas
sbb
sub
cld
outsb
es
push
xor
push
test
inc
cmp
repz
nopl
scas
stos
inc
hlt
dec
ret
and
loop
push
setns
inc
std
lock
shl
sbb
mov
jnp
insl
stc
xor
adc
fisubl
jmp
mov
xchg
out
sahf
adc
je
dec
fwait
mov
lret
hlt
add
lret
and
inc
jmp
xchg
or
jno
jnp
adc
inc
hlt
jmp
push
out
adc
subl
and
mov
add
ja
jb
stos
call
cmp
lret
addr16
pop
adc
mov
rorl
out
or
xchg
add
test
jmp
test
test
push
push
push
and
mov
cli
mov
or
pop
iret
lds
shrl
and
mov
sub
sub
mov
lret
cmp
test
ds
lods
pop
out
push
lcall
pushf
out
shll
sbb
xchg
bound
adc
sbb
cmc
cmp
mov
push
subl
idiv
pushl
adc
enter
sbbl
pop
mov
and
xor
testb
repnz
add
sti
leave
nop
fistpl
fwait
mov
mov
rcrl
cmp
cmpsl
cmp
cmp
jl
xor
lret
jmp
fdivrl
std
cs
dec
push
into
mov
mov
sbb
pop
ja
ds
push
mov
outsl
and
in
jb
mov
push
ljmp
sub
lock
jmp
repnz
xchg
lret
xor
jp
data16
cmpsb
int3
xor
inc
inc
out
repnz
adcl
shr
fidivrl
pushw
jo
rcl
in
jecxz
mov
mov
sarl
repnz
mov
cltd
emms
pop
lds
mov
mov
sbb
mov
insb
jo
popa
clc
mov
or
loop
iret
sub
sub
fsubl
fstpt
pinsrw
lock
and
jge
and
pop
iret
faddl
mov
cli
es
inc
js
inc
imul
add
lcall
bound
cmp
aas
and
jmp
push
faddp
and
jnp
out
or
inc
jmp
adc
cmp
lret
fbstp
push
add
je
jae
sbb
cmp
cmpsb
jb
sbb
dec
push
adc
mov
ss
mov
out
mov
cmp
aaa
outsl
dec
mov
in
je
xchg
or
test
inc
es
gs
mov
stos
or
mov
xlat
fmuls
dec
lock
ret
lods
mov
addr16
and
sub
das
push
lock
popa
xor
sbb
gs
push
pop
fdiv
shl
out
xchg
cmc
inc
clc
insl
loop
outsb
mov
rorl
and
out
push
inc
sub
in
cmp
xor
ret
pop
flds
test
sub
ss
mov
sub
mov
cmp
repnz
lcall
mov
and
cmc
adc
pop
lcall
sbb
sub
jmp
dec
mov
mov
push
xchg
push
sti
pushf
decb
mov
push
stos
adc
add
dec
add
jns
dec
loope
push
ret
arpl
hlt
aad
xor
lret
rcl
imul
mov
aas
imul
mov
adc
mov
xor
fptan
enter
inc
dec
fistpll
jae
ljmp
popa
push
push
popa
ffreep
mov
mov
pop
pushf
adc
pushf
cmp
push
inc
ds
outsb
add
mov
jb
cmc
add
dec
adc
bound
enter
pushf
mov
rolb
scas
int
iret
div
dec
jmp
xor
mov
dec
and
ja
lret
into
adc
hlt
xchg
popl
push
andb
cltd
mov
imul
jmp
xacquire
xchg
cmc
in
lret
daa
xor
std
insb
and
xlat
ss
fcompl
pop
cmp
push
ret
mov
fnstcw
jns
loop
sti
out
lret
jae
inc
idivl
pop
lret
adc
lea
cmp
mov
jo
inc
pop
gs
cmp
lds
jnp
mov
add
clc
aad
pop
and
ja
es
or
jb
shrb
push
stc
add
inc
loopne
and
xor
lods
adc
mov
jns
push
push
les
enter
and
sbb
insb
xchg
sbb
cmpsb
or
push
push
loope
add
cmp
aam
pop
and
mov
xchg
addr16
cld
adc
les
push
mov
jp
mov
jnp
pop
sbb
mov
sbb
jl
inc
cmp
shrl
sub
es
stos
jbe
aaa
ret
gs
jg
add
mov
xchg
jmp
dec
outsb
sbb
arpl
sbb
icebp
or
arpl
test
es
jne
dec
lret
mov
ds
fprem1
bound
sbb
loopne
push
test
jae
dec
arpl
or
dec
jae
pop
int3
pop
mov
aam
mov
icebp
aam
pop
rcrl
or
rolb
mov
sbb
push
push
mov
pusha
mov
aam
jmp
inc
inc
xor
and
iret
mov
popf
daa
mov
adc
xchg
aas
sarb
mov
and
inc
js
mov
out
sarb
or
mov
push
jge
mov
push
sbb
fcomps
cli
mov
testb
and
in
std
int3
outsl
cs
loope
mov
iret
push
xor
cmp
repz
ret
ds
shll
jecxz
mov
fldcw
ds
sahf
hlt
push
sbb
xchg
outsb
int
iret
cmpl
push
sbb
mov
scas
popf
dec
sti
add
mov
jb
jmp
lret
cmpsl
xlat
lea
cwtl
xchg
mov
js
daa
mov
in
jg
lds
in
aam
pushf
insb
xchg
outsb
aad
movsb
jno
inc
push
sahf
mov
xor
rcrb
js
and
xor
ja
lcall
cs
push
jg
cs
fcoml
rolb
enter
int3
aad
cmp
jg
jb
cwtl
sbb
and
jno
xchg
dec
xchg
push
jecxz
lret
sub
sahf
adc
xor
sbb
xor
addb
mov
sbb
adc
lods
lods
stos
cli
mov
or
idivb
add
push
dec
in
sbb
lods
lds
adc
gs
add
ret
out
pop
add
mov
inc
xor
idivb
filds
mov
mov
xchg
xchg
fprem1
test
cmp
or
jp
std
mov
nop
ret
mov
cld
das
in
arpl
cmp
je
lods
inc
add
shll
jnp
ret
push
sub
push
rcl
mov
scas
mov
out
and
ds
lds
mov
lret
pop
xor
push
lahf
inc
dec
and
out
jns
xor
xchg
rcll
xor
mov
or
pop
movsb
push
jge
iret
push
mov
iret
mov
pop
add
mov
pop
push
movsl
outsb
fisttpl
and
popf
pushf
mov
ret
sub
xchg
adc
xchg
mov
push
rclb
in
movsb
insb
jle
imul
mov
movsl
inc
jns
sub
flds
repnz
inc
shlb
xchg
scas
jl
adc
push
cmp
sub
shl
xlat
nop
rcrb
xorb
cmp
dec
or
xlat
mov
repnz
ds
fwait
adc
and
xor
inc
jo
push
sub
testb
dec
mov
enter
mov
insb
je
jbe
in
dec
cmp
es
dec
sub
or
sub
ljmp
loop
cmp
leave
xor
stos
mov
fnsave
outsl
iret
mov
sub
idiv
in
add
lcall
push
mov
cmpsl
sahf
hlt
scas
or
cmpsb
xor
popa
call
jl
out
add
jae
rdmsr
hlt
loop
jns
mov
sarb
ss
mov
imul
and
int3
jl
cmpsb
inc
arpl
jmp
mov
cwtl
movsb
unpckhps
push
jg
testl
mov
and
xor
push
mov
mov
mov
movsb
fwait
int
push
mov
ja
repnz
push
jp
cmc
dec
orb
lods
lds
lods
rclb
mov
fsub
mov
push
push
mov
mov
inc
ja
and
dec
mov
rcrb
mov
mov
and
inc
push
sbb
insb
outsb
xchg
fisubrs
cmp
push
lods
cmp
add
or
sbb
leave
xor
aaa
test
imul
out
lret
mov
int
shrl
stc
ss
mov
bound
shl
jmp
scas
inc
mov
push
jl
fwait
pop
jge
js
adc
aas
sbb
daa
or
mov
mov
sbb
test
fwait
pop
nop
data16
xchg
lock
pop
cs
dec
xor
jbe
test
arpl
mov
out
mov
xor
cmp
out
jmp
xchg
adc
test
sbb
xor
js
cmp
outsl
jecxz
shrb
cltd
sahf
cmp
sub
popa
push
sbb
imul
das
push
imul
stc
sub
push
das
pop
inc
jp
dec
mov
mov
xor
or
ret
pop
mov
insb
out
jg
mov
fnsave
adcl
loope,pt
das
das
adc
mov
std
pushl
rorl
push
jne
mov
js
and
jb
rolb
inc
cmp
std
jge
test
mov
mov
lahf
xchg
mov
push
mov
lcall
mov
cli
push
cmp
fisubs
in
pop
jecxz
push
call
mov
add
into
popf
lea
sbb
adc
mov
movsl
pop
sbb
sarl
pop
cs
jne
test
popa
and
mov
jbe
aam
xor
test
int3
xor
lcall
in
lock
test
std
pop
pop
mov
aam
xchg
stc
pushf
repz
ss
adc
pop
cltd
and
pop
les
and
push
jle
jb
repz
dec
add
cmc
inc
loopne
scas
hlt
fcompl
and
sbb
mov
xor
movsb
outsb
popa
mov
jecxz
jns
lods
and
ja
ret
push
adc
pushf
sbb
jmp
inc
movsl
cmpsb
rcrl
out
jecxz
or
call
xor
loop
and
pop
andl
mov
xor
out
pop
jp
imul
xchg
xlat
out
bound
push
xor
and
mov
mov
loop
dec
lea
inc
pop
or
xor
mov
lock
ret
cmp
lcall
xchg
cwtl
pop
fldln2
out
iret
jbe
ja
push
lock
or
js
xchg
sbb
jmp
push
out
push
cmp
pop
mov
push
faddl
mov
das
arpl
hlt
daa
push
gs
mov
cmpb
and
jno
or
je
or
sub
nop
dec
add
inc
pop
loope
and
adc
jo
or
nop
jnp
xor
add
cmp
sbb
adc
std
jmp
test
or
jnp
mov
cwtl
test
jae
pop
mov
test
stos
pop
sub
call
cmp
and
inc
push
jbe
dec
jge
out
repnz
icebp
sub
dec
pushf
xor
sub
jnp
mov
mov
jl
aaa
mov
loopne
insb
push
rorl
xor
mov
sub
filds
push
xchg
into
jns
or
lea
lret
inc
pop
fdivr
push
cli
int3
fldz
scas
loopne
in
jg
fnstsw
sub
sub
fwait
movsl
daa
mov
jl
mov
pop
sti
bsr
mov
mov
dec
pusha
push
pop
pop
pop
mov
add
aam
repz
adc
ret
ja
sub
mov
mov
movsl
lret
inc
xlat
shl
int
rcrb
xchg
pop
push
cmpsl
or
sahf
shlb
lods
mov
lock
repnz
sbb
mov
pop
mov
push
jnp
adc
in
pop
insl
mov
aaa
icebp
lods
push
push
fisubrs
lds
pop
push
pop
imul
out
arpl
pop
sub
aad
outsl
pop
xchg
adc
orl
mov
icebp
addr16
outsl
lea
pushf
cmp
gs
and
xor
cmpsb
or
adc
fsub
xchg
call
ret
xlat
jae
push
movb
sbb
add
scas
push
stos
test
popa
pushf
aam
mov
xchg
sub
xlat
mov
je
or
gs
lock
clc
in
cmp
bound
lcall
testl
shrb
sub
out
popf
dec
xor
mov
leave
sahf
pop
mov
aad
leave
insb
pusha
fucomi
cltd
xchg
iret
cltd
imul
xchg
hlt
cmp
testb
lahf
sub
push
inc
pop
jge
xchg
xlat
shl
push
sub
add
xchg
xchg
repz
pop
mov
pushf
lods
dec
adc
pop
lret
xchg
insb
movsl
or
fsubl
cmp
mov
mov
add
push
fwait
shll
les
add
out
pop
loope
mov
cmp
shlb
mov
and
outsb
loop
inc
push
daa
add
xor
xor
xor
shl
sub
jno
aad
mov
js
ret
je
pop
cmp
jecxz
lea
or
xchg
int
cwtl
mov
int
pop
in
hlt
inc
cwtl
and
subb
rcl
adc
xor
out
mov
popa
inc
arpl
inc
mov
fwait
popf
cld
sahf
inc
sbb
push
mov
and
stc
or
sub
push
dec
and
bound
adc
fistl
inc
insl
and
mov
mov
inc
mov
mov
lret
pop
out
lret
leave
lret
sbb
ret
pop
les
mov
stc
push
stc
jge
push
dec
mov
inc
fsubrl
xchg
push
add
push
xor
imul
loope
cld
pusha
pop
inc
dec
imul
push
pop
aad
sbb
ret
or
inc
shrb
ljmp
pop
aam
mov
and
in
mov
sub
loope
into
clc
sbb
lcall
cld
nop
rorl
inc
test
enter
inc
sbb
out
jne
ljmp
mov
loope
hlt
add
xchg
outsb
dec
bound
mov
xchg
scas
add
adc
inc
lods
sub
call
mov
lret
das
xchg
xchg
fidivrl
jecxz
add
mov
pop
mov
hlt
ja
call
xchg
jp
jmp
test
inc
jg
xchg
mov
mov
imul
push
mov
pop
lods
aam
jmp
cltd
cli
jmp
and
jo
ficomps
pop
call
jmp
in
sub
in
out
cld
in
mov
cwtl
add
stos
mov
adc
and
xor
sbb
or
out
das
ret
push
jecxz
out
fiaddl
xorl
sub
movsb
scas
movsl
imul
mov
xchg
push
adc
mov
arpl
test
ds
sbb
adc
push
repnz
sbb
push
ljmp
arpl
mov
les
imul
sbb
xchg
sahf
jmp
xor
pop
fsubl
mov
mov
mov
inc
movsl
dec
adc
xchg
or
cwtl
dec
dec
outsl
iret
shll
sbb
mov
cld
cli
sahf
dec
daa
nop
or
push
add
pusha
cmp
jns
test
leave
add
and
add
arpl
mov
or
cmp
adc
dec
jp
mov
push
data16
sbb
jnp
bound
in
loopne
xchg
add
pop
jmp
mov
and
or
sahf
mov
or
or
rorb
xchg
adc
out
fwait
iret
jle
jns
mov
adc
cld
adc
push
mull
test
pusha
fnstcw
mov
mov
adc
daa
jecxz
sbb
or
xchg
stc
mov
gs
nop
ret
inc
add
dec
inc
mov
repz
dec
mov
xor
cmc
js
loopne
inc
fwait
xlat
fisttpll
push
add
mov
and
add
out
sti
outsl
push
push
loope
dec
pop
jo
in
adc
mov
mov
push
push
pop
movsl
pop
sbb
jb
and
push
std
test
lcall
testl
sahf
jg
inc
sbb
data16
mov
push
rolb
xor
pop
mov
push
xchg
and
fstpl
cmpsb
mov
or
inc
stos
je
stc
mov
dec
test
fwait
sbb
xlat
cmpsl
out
mov
sbb
hlt
scas
adc
pop
movsb
fldt
test
jg
pop
jmp
pushl
push
adc
adc
mov
add
popa
shr
pop
fistps
ret
cwtl
aas
and
andl
jno
gs
xchg
jbe
mov
cmpl
out
fs
push
mov
sub
xchg
aam
cmp
push
icebp
mov
jmp
sahf
fs
jge
mov
push
cltd
xchg
pop
pop
addr16
or
das
pop
lods
sbb
minps
shl
mov
js
popf
xchg
mov
ja
jmp
jmp
mov
cmp
loope
roll
add
lcall
jmp
cmpsb
push
xchg
jl
cwtl
xor
push
lock
inc
jge
ret
sbb
sbb
and
stos
mov
pop
mov
sub
pop
daa
and
push
mov
xor
push
pop
dec
addr16
and
cmc
mov
adc
inc
jmp
adc
xchg
adc
das
lcall
mov
lock
ljmp
bnd
push
ror
or
test
and
loopne
cmp
clc
aaa
xchg
cli
pushf
cltd
ss
ret
ss
push
mov
lods
pop
mov
repnz
lahf
xchg
ficompl
mov
stos
mov
xchg
sti
cmp
add
sahf
movsb
rorb
cli
push
andb
inc
icebp
adc
mov
insb
rorl
push
mov
ljmp
lock
loopne
jno
cmp
pop
cmp
push
clc
jge
idiv
in
cwtl
sbb
es
mov
out
jmp
cmpsb
mov
ret
cwtl
insl
into
jle
shl
jbe
fistpll
pop
or
lea
cli
rorb
ss
in
adc
mov
subl
cld
or
jne
mov
or
pop
adc
test
ss
stos
sahf
daa
pop
and
fwait
push
pop
fcmovu
mov
lahf
ud1
out
mov
jecxz
cmpsb
adc
enter
adc
inc
movsb
ss
repz
jmp
das
adc
adc
pop
es
enter
ljmp
xchg
sbb
push
movsb
test
pop
roll
leave
cmpsb
push
imul
jg
idiv
add
cmp
mov
pop
andl
dec
or
inc
idivb
cld
adc
push
cwtl
xor
mov
or
neg
push
aas
mov
xor
lods
sbb
cmp
pop
insb
stos
push
cmpsb
cltd
push
pop
cmp
mov
aas
and
cltd
in
fcmovbe
sub
push
mov
subb
inc
add
inc
pop
in
and
cmpsb
pop
add
and
xchg
add
insb
mov
lret
push
and
lret
ds
cmp
push
mov
cmp
cmp
sahf
daa
mov
lahf
sahf
sub
out
adc
push
adc
inc
xchg
mov
scas
push
jmp
fcomip
pop
pop
gs
insl
inc
mov
pop
je
cmp
fcoml
add
push
lcall
imul
es
out
jae
cmp
mov
rcrl
in
nop
stc
outsl
jl
scas
clc
pop
imul
jg
push
or
cmpsb
xchg
jmp
dec
sbb
int
orl
push
adc
mov
stos
cmp
or
pop
pop
xlat
inc
stos
rcll
outsb
sub
sub
cmp
add
fidivs
popa
fwait
mov
mov
out
mov
push
lret
dec
lret
and
outsl
rcrl
mov
dec
xchg
jmp
sub
xchg
mov
push
mov
ror
inc
fnsave
mov
imul
shlb
lock
sti
mov
mov
mov
and
movsl
daa
jmp
pop
push
push
jecxz
data16
stos
adc
mov
cld
gs
and
jecxz,pt
mov
icebp
xor
lods
dec
clc
mov
fcomip
or
movsb
xchg
loop
push
push
insb
stc
mov
xchg
mov
push
jns
shrb
mov
xchg
lock
or
loope
cmc
or
dec
pop
mov
int3
xlat
jl
jg
arpl
addr16
hlt
sar
xchg
mov
push
sub
rcr
dec
fildll
das
mov
mov
mov
mov
jb
out
push
adc
mov
int3
aam
sti
addr16
xor
mov
and
ffreep
ss
loopne
push
cmpb
cmp
out
scas
shr
mov
mov
hlt
lds
xor
imul
cmp
jo
lods
xchg
push
fdivp
lods
sarb
loope
pusha
adc
loopne
lds
xchg
xorb
push
add
mov
out
loopne
and
stos
dec
call
inc
fiadds
jle
xor
sahf
dec
push
outsl
cmp
fisubrl
xchg
xor
add
mov
mov
push
shll
xchg
stos
enter
mov
adc
xor
ftst
adc
stos
mov
mov
hlt
add
adc
int3
mov
negl
dec
das
mov
push
imul
in
imul
and
sub
bnd
push
mov
outsb
insb
xor
jp
xchg
addb
aam
xchg
jb
push
mov
je
sti
mov
pop
xchg
loopne
xchg
jg
jnp
pop
push
pop
shlb
cs
mov
jnp
aaa
fwait
xchg
mov
shll
pop
cmpsb
adc
inc
inc
out
mov
push
sbb
adc
mov
mov
jmp
add
inc
aam
mov
fcompl
mov
xchg
in
in
fisubs
jle
dec
pop
shll
xchg
jle
dec
icebp
out
mov
insl
fldenv
loopne
sbb
fnstcw
shrb
ljmp
dec
jle
jg
fildll
lds
and
and
push
cmp
mov
mov
jmp
inc
sub
push
lcall
pop
adc
mov
jg
adc
das
rcrl
sbb
fildll
mov
push
sahf
push
stos
inc
mov
xchg
adc
test
imul
sbb
stos
movsb
shrb
in
push
xchg
scas
jmp
or
cmp
xlat
xchg
inc
sbb
sub
dec
pushf
and
in
icebp
jl
enter
or
push
lea
imul
in
mov
add
cmp
push
pusha
or
dec
sub
test
shrb
ljmp
jnp
fstps
or
imul
lcall
pop
jb
mov
xchg
xor
testl
sbb
inc
es
push
mov
jne
sub
sbb
or
adc
mov
sbb
xchg
sbb
push
outsb
cmp
mov
dec
pop
mov
je
out
jmp
loopne
jge
or
inc
mov
xchg
subb
das
daa
int3
mov
nop
and
fwait
cmpsb
adc
setb
mov
sub
das
das
add
mov
pop
stc
movsl
dec
adc
inc
add
mov
arpl
popa
inc
pop
push
movsb
aad
sub
mov
in
es
sbb
stos
mov
cmpsb
scas
sbb
xchg
ja
or
popf
sti
test
imul
mov
js
inc
in
out
ja
xchg
sbb
sub
cmp
cmpsl
xchg
daa
mov
adc
mov
dec
fs
fidivs
mov
and
jbe
mov
mov
xor
addl
and
and
cmc
add
outsb
xchg
sub
subb
mov
orl
in
sahf
imul
and
popa
repz
cmpsl
or
std
adc
adc
test
push
pop
pusha
jl
lds
cmpsb
adc
cmp
jo
jbe
inc
mov
add
insl
adc
das
dec
and
shrb
fdivs
xlat
or
repnz
bound
fisttpll
xchg
xchg
adc
dec
or
mov
xchg
aad
mull
aad
adc
bound
ret
xchg
fsts
sub
jmp
mov
or
lock
test
mov
aaa
fwait
xchg
push
stos
pop
pop
cli
ss
insb
jl
inc
loope
lds
ja
int
mov
test
mov
cmpsl
and
sbb
mov
test
negb
nop
mov
rclb
pop
push
adc
jmp
idivb
mov
clc
push
incl
call
ret
out
cs
nop
and
cli
or
adc
lahf
dec
shll
xchg
cmpl
mov
ret
add
mov
cmpsl
inc
std
aas
cli
cli
cmpsb
mov
cmp
xlat
sbb
shr
lret
add
les
fmull
cmp
pop
xchg
sub
leave
fcom
sahf
mov
or
or
popa
daa
dec
push
xor
mov
jmp
lods
lret
lret
xchg
daa
xchg
stc
adc
in
lcall
push
fisttpll
cltd
imul
sub
dec
jns
out
xchg
pop
enter
cltd
mov
add
loopne
ss
das
jmp
loopw
test
fisubl
aaa
add
xor
push
cmp
lods
int3
scas
jns
xchg
loop
sbb
xchg
jbe
sti
sub
repnz
mov
add
ss
cmp
jg
or
sbb
mov
push
push
fdivl
lock
xchg
psraw
les
push
or
aaa
sub
cs
mov
repnz
loop
out
out
je
xchg
pop
in
mov
aaa
jmp
push
jae
negb
cmp
cmpsl
cmp
repz
test
xchg
mov
inc
clc
sub
jle,pn
and
mov
gs
cmc
movsb
push
jns
sbb
jp
ret
imul
addr16
ds
lahf
and
xchg
sahf
test
rcr
aad
mov
mov
ret
stc
in
xchg
sbb
dec
mov
xchg
in
fs
xor
into
xchg
sub
xchg
inc
or
push
fwait
mov
mov
movsb
lret
cli
lods
sbbl
das
adcb
addl
mulb
cmp
cli
js
inc
cmpsl
add
rcll
mov
cli
ljmp
jle
mov
mov
daa
xlat
lock
clc
in
adc
jnp
mov
adc
or
daa
mov
mov
sbb
and
mov
cmc
lea
cld
push
cli
mov
sub
jmp
scas
mov
aad
and
xor
adc
out
pop
dec
push
mov
and
xchg
popa
sar
repz
js
mov
mov
mov
outsb
dec
clc
mov
dec
inc
nop
or
ljmp
sbb
movsb
jne
fsubs
daa
les
shl
pop
les
ret
pop
add
pop
inc
aaa
add
xchg
pop
ss
mov
les
xor
mov
and
cmc
stc
fsubs
cs
push
sub
jae
arpl
inc
add
outsl
std
mov
pop
push
pusha
aad
jae
test
push
xchg
cmc
test
popa
stos
pop
sub
shll
cmpsb
fcmove
stc
ficompl
lea
mov
pop
movsb
lret
push
and
xchg
cwtl
and
and
inc
inc
jnp
rorl
shrb
lods
cmpsl
rcll
mov
add
adc
mov
js
xchg
cli
sub
pushf
cmp
inc
popf
pop
ror
lds
xor
jb
dec
adc
push
cs
inc
cwtl
out
adc
mov
fsts
arpl
call
out
lock
out
outsb
icebp
mov
jl
xor
inc
cmp
sub
xor
ret
push
push
test
jl
bound
adc
das
addb
mov
call
or
roll
ficoms
dec
ds
testb
xor
dec
rclb
popl
out
inc
xchg
lret
mov
push
dec
rcll
test
sub
push
xorl
mov
mov
mov
adc
das
jmp
dec
inc
cs
fs
sub
test
xor
push
pusha
sub
lock
sbb
imul
lods
sbb
pop
int3
mov
inc
or
arpl
das
xchg
cmp
icebp
ljmp
jle
movsl
mov
cli
jmp
jge
inc
cmpsl
jnp
push
push
scas
icebp
imul
mov
pop
inc
and
ja
inc
mov
jmp
lds
test
ja
out
clc
aas
les
or
pop
jmp
jp
sar
shrb
sti
add
and
push
push
scas
cld
mov
nop
sbb
xor
sbb
mov
ja
sub
ss
pop
sbb
in
pusha
stc
pop
leave
in
pusha
lcall
push
dec
in
insb
xor
or
push
mov
imul
popf
in
push
add
cltd
push
pop
sub
sbb
mov
sub
push
mov
nop
mov
mov
cmp
add
add
and
shlb
out
mov
cld
jb
add
xor
jle
or
cmp
pop
popf
xchg
mov
je
inc
mov
out
jns
sub
sub
jmp
cs
testl
mov
and
into
lods
lods
loopne
icebp
xchg
std
pop
adc
mov
pop
std
stos
jno
adc
push
jle
js
lahf
jnp
add
sub
scas
jecxz
sti
cmp
jns,pn
aam
jne
cs
dec
sti
pushf
shrb
sahf
orl
adc
cmp
xchg
fistpl
fwait
out
ljmp
dec
jmp
aam
or
push
insl
or
test
mov
andb
push
gs
hlt
or
xchg
jp
cmp
clc
pop
pop
fs
add
fdivrs
adc
cwtl
int
and
jmp
mov
je
push
stc
sahf
fnsave
adc
fs
lods
mov
in
popa
push
loop
add
or
lret
call
fs
inc
lret
jle
mov
ljmp
sub
out
adc
aad
mov
cld
mov
mov
icebp
out
mov
lcall
pop
pop
cs
sub
insb
xor
lds
jge
dec
cmpsl
sub
loopne
pop
inc
movsl
inc
pusha
lcall
xchg
push
outsb
sbb
cmp
outsb
sub
aas
push
sahf
insb
dec
test
imulb
xchg
ret
sub
or
pop
rorb
mov
sub
sub
outsb
push
xor
popf
loope
packuswb
pop
insb
dec
sbb
jae
into
mov
mov
pop
xlat
loope
icebp
inc
pop
push
mov
stos
pusha
jne
push
jbe
pushf
push
rcrb
add
lock
daa
test
jp
jbe
push
orl
rol
addr16
sub
out
or
mov
sbb
addl
mov
pop
dec
mov
daa
orb
xor
sbb
jno
inc
pop
popf
call
sbb
xchg
rcrl
fdivl
dec
jno
out
and
adc
out
lahf
dec
les
stos
xor
movsl
orb
leave
cwtl
nop
mov
fmuls
ljmp
movsb
pop
loop
push
jno
mov
jns
idiv
popa
mov
mov
mov
push
popf
add
loope
jb
orl
cmc
or
cli
xor
sti
inc
inc
cmp
xchg
dec
lea
mov
mov
jne
aam
popa
mov
jbe
lcall
push
outsb
dec
negb
and
jno
inc
movsb
sbb
jae
mov
flds
xchg
outsl
or
imul
dec
lea
enter
in
ret
clc
jecxz
das
ss
jnp
jle
das
push
push
and
adc
icebp
inc
fmuls
dec
push
cwtl
std
sarb
pop
call
jo
cwtl
int
js
clc
scas
sbb
les
xchg
lcall
rolb
sub
ret
inc
dec
imul
outsl
sub
xchg
jns
cmp
inc
mov
sub
aaa
xchg
sub
cmp
push
mov
stc
jo
add
pusha
fstpl
add
pop
pop
aas
pop
cmpsb
lock
xchg
negb
stos
add
scas
pusha
sbb
jle
cmp
inc
js
fidivrs
or
ficomps
out
ficoml
xor
fildl
dec
je
mov
xchg
xorb
adc
xor
push
psrlw
cwtl
push
pop
xor
cmpsl
daa
mov
aas
lods
mov
cmp
xchg
fisubrl
lea
cmpsl
jmp
and
cli
rcr
les
dec
xor
daa
and
cmp
sbb
out
push
sbb
leave
or
subl
es
sub
pop
and
ja
out
je
inc
add
adc
imul
jmp
aam
push
fwait
xlat
std
out
inc
roll
test
sub
push
pop
cmpsb
into
out
ds
adc
in
dec
out
push
or
scas
mov
pop
shrl
loop
inc
ss
movsl
cli
fidivrl
in
and
movsb
jmp
jmp
xor
fildl
xor
xorl
inc
aaa
or
jl
out
push
pop
or
ficoml
loop
mov
sub
sbb
push
ret
jo
in
add
fimuls
in
push
push
mov
data16
mov
scas
dec
repz
ficomps
es
rcrl
cmp
and
push
int3
and
cmp
mov
push
jle
adc
jae
inc
xchg
pop
pop
movsb
cld
add
sbb
rcrl
data16
push
push
push
js
mov
popf
cmpsl
aad
fstpl
mov
cltd
and
scas
jae
adc
add
negl
jno
dec
lahf
pop
cmp
lahf
pop
ror
clc
mov
mov
shl
out
adc
cmpsb
out
push
subb
repz
test
lods
add
mov
mov
push
outsl
sub
je
xchg
les
xchg
ss
in
insl
sti
sahf
push
int
imul
mov
pop
pop
adc
lret
lea
mov
or
lahf
push
daa
xchg
sbb
push
cmp
subl
push
arpl
sbb
aaa
jecxz
lcall
ret
push
ja
sahf
lods
jp
mov
popl
xor
mov
enter
xchg
cmpsl
push
pop
pop
mov
dec
scas
aas
outsb
and
xor
adc
or
cmp
test
aad
enter
cli
add
xor
pop
fdivrl
shlb
movsl
subl
xchg
push
and
ds
pcmpgtw
xchg
decl
test
dec
mov
lcall
clc
jg
data16
insl
mov
iret
mov
add
rol
hlt
not
push
idivl
sar
push
push
test
push
push
popa
scas
insb
pop
fildll
rcll
out
push
pop
iret
xchg
mov
mov
mov
push
push
insl
add
repnz
push
sbbb
popa
adc
mov
pop
mov
push
enter
out
int
mov
inc
lea
xchg
call
or
push
shlb
cld
roll
jle
daa
ds
scas
sbb
out
xlat
mov
jg
mov
or
or
add
or
mov
int3
leave
inc
into
xchg
loope
mov
call
add
and
push
ljmp
mov
cmpsl
sbb
pop
lock
sub
sarl
pop
cmp
stos
add
pop
xchg
jp
xchg
inc
xchg
call
push
or
sbb
and
rclb
pop
test
ljmp
dec
push
jae
insb
movsl
jl
or
pop
mov
scas
int3
outsb
out
out
pop
cmp
cmpb
xlat
rclb
stos
cld
adc
popa
dec
aaa
repnz
xchg
ss
adc
rolb
jge
jnp
dec
push
movsb
jmp
dec
stos
das
mul
push
or
data16
rcrb
mov
adc
loop
mov
shlb
mov
xchg
push
sub
push
nop
sub
mov
xchg
jno
icebp
mov
fdivrl
xor
into
stos
nop
xor
pop
sahf
xchg
stos
sbb
sahf
int3
pop
aad
test
mov
mov
sub
jmp
inc
cld
shrb
adc
sarl
jnp
into
mov
jbe
push
shl
add
push
xor
jbe
aam
flds
fstpt
mov
adc
jmp
sub
cs
sub
ficoml
mov
dec
xor
sub
mov
and
xor
aaa
lods
cmpsl
sub
cltd
mov
emms
push
jg
xor
sub
cmp
xchg
sbb
jl
jo
test
add
sti
xchg
inc
jg
rcrb
push
xchg
sarl
mov
stos
cs
jmp
push
mov
jp
movsl
enter
fildll
aam
rorb
cld
sbbb
push
js
inc
mov
jns
mov
loope
jmp
and
xchg
push
mov
mov
in
mov
decb
dec
addr16
xchg
add
sbb
repz
aaa
idiv
mov
jns
std
add
repnz
imull
and
push
mov
mov
pop
rol
in
pop
fcmovnbe
pop
mov
cmp
shrb
sbb
inc
shll
shrl
pop
xor
out
in
jl
mov
mov
mov
cmp
test
lods
push
inc
cmpsb
in
stos
pusha
jmp
icebp
lahf
jle
sub
call
xor
cmp
xchg
rolb
loop
insb
push
stos
xor
mov
mov
mov
cmc
mov
mov
cwtl
mov
ret
and
test
in
dec
lret
movsl
sub
sahf
mov
lods
xchg
and
ljmp
repz
fwait
shl
ret
fmull
mov
mov
popf
sub
mov
xorb
cmp
mov
cmp
xchg
xchg
repz
mov
xor
jns
jecxz
or
icebp
mov
jb
cltd
mov
xchg
mov
mov
cmpb
shr
mov
fwait
ret
cmp
in
cmp
rcl
rcrb
mov
mov
pop
clc
stos
in
inc
hlt
pop
mov
or
outsl
mov
lcall
pop
sbbb
loop
imul
and
test
mov
cmp
pop
pop
dec
jle
jge
push
fdivrs
xchg
pop
pop
mov
lods
int3
fdivs
sahf
jmp
mov
cld
lock
test
popf
mov
jb
cwtl
push
loop
sub
pop
fdivrl
icebp
frstpm(287
sbb
mov
jb
dec
mov
loopne
mov
xor
in
cs
mov
enter
jg
inc
mov
sti
adc
gs
stc
subb
addr16
out
and
loopne
ret
mov
sub
adc
xor
lock
outsb
xchg
mov
mov
mov
mov
and
or
add
cmp
push
addr16
insl
adc
push
movsl
clc
fwait
rclb
mov
xor
scas
ret
pop
mov
pop
pop
pop
lcall
mov
aam
loope
stos
jmp
xchg
mov
loop
adc
aas
mov
in
hlt
ljmp
lcall
in
mov
stos
imul
dec
aaa
stc
push
clc
dec
int3
scas
out
mov
or
insb
xlat
fistps
jge
mov
xor
and
cmpsl
in
add
inc
cltd
mov
sahf
jo
fsts
lock
or
pop
jbe
mov
or
push
xchg
fwait
sub
in
dec
cmp
icebp
lahf
cli
movsb
out
pop
sub
dec
xor
mov
in
xor
and
fdivrp
mov
mov
addl
push
es
pop
dec
mov
fisttpl
in
dec
daa
mov
lods
mov
mov
sub
and
in
adc
mov
sti
enter
push
pop
stos
pushf
add
mov
or
lret
or
sti
and
fisubl
xor
and
hlt
pop
push
dec
mov
stos
stc
aas
jno
cmp
lahf
jg
or
xor
sbbl
inc
test
xchg
xchg
pusha
xor
shrb
dec
sti
in
daa
ja
aaa
add
fistl
and
adc
mov
stos
pop
fsubl
pop
into
mov
lds
orl
dec
pop
and
push
scas
aas
sbb
push
out
pop
xchg
jae
filds
sub
jecxz
sub
ret
jbe
int3
in
mov
xor
into
ret
lcall
int3
cmp
inc
out
pop
jecxz
mov
movsb
pushf
push
inc
mov
jmp
or
int3
cmp
push
outsl
scas
and
aaa
push
call
ficoml
adc
clc
or
and
push
sbb
lods
fsubs
or
jmp
stc
mov
push
stos
mov
pop
add
sub
jbe
int3
sbb
in
cld
sbb
das
sub
iret
outsb
inc
sbb
rclb
scas
push
or
pop
sarb
add
and
movsl
sbb
xor
jo
adc
inc
xchg
sbb
aas
cmp
movsb
fwait
aaa
pop
into
insl
inc
fsubrs
xchg
lods
jns
add
divb
jne
aaa
or
push
lods
add
fstpt
popf
loopne
cltd
cmp
or
dec
mov
stos
push
inc
sbb
mov
sub
push
addr16
cmp
sbb
sub
jmp
sub
notl
inc
in
cmp
xor
stos
flds
mov
mov
or
push
gs
sbb
or
loope
pop
jmp
enter
imul
push
cmp
int
test
imul
push
les
inc
or
dec
ljmp
icebp
mov
pop
xchg
sete
push
int
loopne
jbe
roll
adc
cmp
cmp
cwtl
cmp
int
ret
loopne
adc
sbb
mov
jae
orb
sbbl
and
pop
fmull
jb
outsl
mov
mov
cmp
in
push
cmp
adcb
cwtl
adc
jb
dec
cmpsl
pop
jbe
sbb
cltd
shr
cld
mov
ret
mov
cmp
sub
ja
mov
pop
pushf
cmc
xor
push
push
and
xchg
aam
inc
jb
adc
adc
fidivs
insb
subb
fistl
shlb
into
inc
pusha
xchg
in
mov
mov
shl
cmpsl
xchg
jb
and
push
fdivl
pop
pop
aas
test
lahf
jecxz
das
push
push
add
xchg
xor
pop
popf
in
ja
sbb
in
mov
ds
dec
imul
dec
insl
fisttps
adc
pop
mov
pop
movsl
xchg
lcall
dec
add
dec
testl
insb
push
cld
inc
stos
movb
dec
adc
loopne
imul
xor
jge
test
mov
push
sbb
push
ficoml
mov
rorl
inc
ja
cmpsb
xchg
mov
incb
jg
push
cli
cli
pop
inc
into
pop
xchg
xor
xchg
loop
inc
cmpb
bound
inc
mov
sar
jnp
sbb
cmc
lods
inc
out
fstpt
ja
outsl
test
jae
cli
xchg
aam
ret
addr16
int3
movsb
push
jecxz
jecxz
push
jbe
dec
loope
iret
lods
pushf
push
xor
inc
aas
and
scas
sbb
in
aam
sub
jmp
pop
lds
xor
aad
sbb
pop
cmp
ret
or
inc
cmpsb
dec
pop
pmulhw
mov
shl
mov
dec
mov
mov
daa
out
xchg
inc
test
in
xor
outsl
sub
mov
stos
xlat
dec
stos
xchg
or
test
stos
das
mov
pop
jle
cld
or
jo
push
mov
pop
add
xorb
lock
test
lret
das
arpl
dec
dec
push
lahf
loopne
hlt
out
cli
mull
imul
pop
fbld
shl
scas
xchg
dec
xor
mov
fistl
scas
sbb
sbb
lock
fwait
push
xchg
xchg
add
mov
popf
push
je
test
loop
out
mov
push
xor
stc
dec
jecxz
test
cmp
add
add
and
call
adc
stos
sbb
sahf
leave
add
std
sub
int
inc
inc
addr16
jbe
pushf
ss
jmp
fwait
dec
add
adc
out
xchg
push
movsl
lret
sub
inc
or
adc
stos
mov
outsb
stc
fistps
cld
enter
in
jae
cwtl
xor
std
ljmp
lods
xor
inc
daa
pop
or
pop
dec
add
adcb
cmp
lds
cmpb
lret
fimuls
or
sahf
loop
fmull
lret
jl
mov
imulb
mov
sub
jle
mov
shll
pop
sbb
mov
pop
jne
mov
lock
repz
adc
jmp
shlb
in
xchg
cld
ficoml
test
iret
inc
sub
stos
mov
jmp
and
mov
loopne
das
je
pop
addr16
dec
shrl
jmp
mov
mov
adcb
lds
insb
insb
xor
add
jg
sub
ljmp
adc
xchg
cmp
add
mov
dec
jecxz
adc
test
pop
aas
mov
inc
fdivl
scas
add
adc
xchg
clc
popf
ret
out
pop
jb
scas
push
fisttps
xor
mov
ljmp
sbb
xchg
cs
test
fcmovnu
and
mov
jg
ja
inc
out
repz
adc
or
in
xorb
xchg
nop
inc
jmp
testb
or
fidivs
push
xor
rcrl
test
das
and
test
jne
adc
sub
sub
jae
shlb
movsb
lods
out
add
mov
bound
push
pop
mov
adc
mov
stos
sahf
mov
das
dec
jnp
pop
adcl
in
popf
mov
fcomi
cmp
inc
popa
rcrb
movsb
push
adc
pop
push
inc
dec
gs
xchg
jl
cmc
sbbl
mov
or
sub
sub
sub
mov
xlat
orb
sti
and
sbb
cmpsb
std
lds
cmp
jmp
fwait
mov
in
sub
mov
jmpw
jae
push
aaa
and
push
movsl
adc
bound
int
cmp
ja
sahf
adc
pop
push
xor
rorb
or
dec
pop
fldcw
ss
insl
adc
sbb
dec
sti
rorb
aaa
data16
repz
dec
adc
into
jbe
cmp
and
lcall
orl
enter
adc
int
sub
dec
mov
jns
jbe
repz
mov
fidivrl
inc
icebp
sar
add
scas
lret
sbb
ret
sahf
xchg
xchg
call
inc
dec
cmp
aas
in
pop
shrl
je
aad
mov
jmp
and
jmp
or
sub
fisubrl
test
mov
and
mov
pop
and
cmpsb
out
xor
imull
dec
movsb
pop
lock
jns
xchg
or
sub
repz
frstor
mov
ret
outsl
rolb
and
in
xchg
push
add
mov
jnp
movsl
sbb
orb
xchg
ljmp
mov
repz
jne
or
or
test
cmp
lcall
mov
push
jb
xchg
pop
in
cmp
cmp
dec
cs
mov
sub
mov
push
push
xchg
loopne
lcall
orb
inc
aaa
adc
cwtl
jecxz
xor
clc
ds
jle
in
stc
jecxz
jae
lods
test
mov
scas
fistl
mov
adc
or
dec
repnz
mov
mov
hlt
adc
xchg
dec
pop
sbb
test
and
mov
pop
or
ds
das
iret
lods
xchg
add
sub
inc
push
repnz
dec
sub
add
inc
in
outsl
leave
and
xor
mov
mov
movsl
sub
add
push
add
shrl
mov
je
hlt
mov
sti
scas
ror
xchg
into
inc
ret
sbb
add
inc
xchg
push
int
sti
pop
mov
add
jge
bound
dec
or
xchg
xor
cld
int
sbb
negl
loope
arpl
loope
in
sub
xchg
test
into
xlat
daa
loope
int
loopne
add
mov
shrb
push
roll
test
xchg
xor
pusha
jl
mov
mov
jge
jb
mov
lods
dec
mov
cmc
adc
mov
leave
sbb
and
xor
jge
movl
mov
inc
cmp
xchg
xor
add
int3
xlat
sarb
cmp
jmp
outsl
pop
icebp
push
push
fs
js
mov
inc
ret
pop
lock
sub
and
pop
lcall
pop
cs
dec
outsl
xchg
pop
mov
scas
mov
jp
ret
ja
les
cmc
fisubrl
jbe
adc
stos
jl
mov
cmp
loop
and
pop
loopne
xorb
movsb
imul
fistl
daa
push
lahf
pop
aas
scas
xchg
fstps
idiv
sbb
mov
mov
dec
push
inc
sub
int3
dec
xchg
xchg
xchg
sbb
fnstsw
adc
outsl
std
or
jne
stos
std
cmp
mov
not
cs
xor
pusha
scas
mov
sbb
lret
jl
pop
xor
daa
test
stos
cwtl
or
cs
into
push
push
sbbl
xchg
inc
fwait
and
xchg
pop
xor
bound
push
and
push
decl
push
out
fwait
jp
sbb
jl
into
icebp
es
test
fwait
stos
mov
cmpsl
rclb
mov
shrb
mov
push
out
mov
out
or
dec
out
leave
cli
sahf
sub
fwait
in
mov
push
add
hlt
imul
hlt
or
and
daa
out
pop
fisubl
aam
xchg
cld
and
mov
ret
aad
xor
mov
mov
xor
inc
cmp
fsubl
mov
and
mov
xorl
mov
bound
int3
cmpsb
mov
dec
popa
and
sahf
xchg
lret
mov
fistps
lret
stos
cmp
out
mov
dec
outsb
dec
and
mov
adc
shrl
sbb
ret
mov
sti
pop
push
push
xchg
or
mov
xor
mov
ss
dec
push
in
dec
inc
add
dec
cld
pusha
dec
push
fstp
dec
cltd
push
pop
add
mov
movsb
lock
dec
inc
rcrb
repnz
lret
js
jg
daa
mov
xchg
ds
icebp
sbb
jno
mov
push
push
xchg
mov
mov
jns
nop
movsl
jbe
out
imul
gs
push
test
jns
pop
bound
sbbb
pop
das
xchg
jle
cltd
inc
cmp
leave
mov
lea
nop
add
add
fdivrs
mul
outsb
mov
cmp
jmp
dec
push
inc
popa
xor
and
adc
push
lret
mov
xor
add
and
hlt
adc
jnp
jnp
cwtl
dec
cmp
fdivrl
ficoms
lret
in
jmp
adc
push
xchg
mov
leave
cmpb
in
adc
cmpl
push
fcomps
enter
sahf
xchg
pop
test
cmpsl
lret
add
out
inc
push
mov
rcr
imul
fsts
cmp
and
in
or
dec
in
stc
shrl
stos
lahf
orb
inc
fists
push
jbe
pop
cwtl
mov
adcl
into
cmpsb
outsl
dec
int3
dec
sub
pushl
arpl
adc
js
pop
sbb
jmp
jae
out
popf
xor
push
xchg
and
inc
iret
shlb
cltd
xor
cmc
push
sub
sbb
lds
jns
hlt
push
push
xchg
adc
pop
lret
mov
mov
loop
xor
scas
and
xor
loope
jp
call
jb
push
mov
sbb
lret
and
je
loopne
dec
cmp
lret
xlat
cltd
sbbl
dec
dec
ret
cmp
aas
leave
mov
xor
lods
cmc
inc
movsb
test
ds
xchg
fidivs
in
pop
aas
scas
int3
and
cmpsb
sarb
es
fisubrl
and
fsts
adcb
hlt
xor
add
sti
fsubrs
test
std
lds
jg
add
and
movsb
out
imulb
push
mov
or
xor
sbb
js
repnz
js
stos
jns
dec
cmp
out
dec
mov
icebp
jae
fdivl
jns
sarb
add
das
out
dec
mov
je
push
lods
into
sub
mov
mov
inc
inc
hlt
insl
aas
test
es
fisttpll
stc
mov
dec
inc
inc
and
add
punpckhbw
dec
push
jecxz
ja
pop
sub
cvtps2pi
pop
xchg
xor
fcmovb
adc
ljmp
mov
mov
cli
xor
jbe
pushl
mov
xchg
ror
add
fnstenv
rclb
repnz
jns
imul
add
jb
mov
mov
cs
xchg
out
push
cs
icebp
ds
sub
and
iret
xchg
das
sbb
mov
xchg
lea
imul
mov
stos
testb
mov
fs
mov
mov
aaa
decb
and
jnp
push
push
xorb
mov
pop
scas
enter
sbb
jne
imul
pop
adcl
mov
pop
or
pop
in
push
lods
add
hlt
test
aas
xchg
pop
rcll
int3
xor
dec
mov
lret
push
and
push
stos
push
out
add
aaa
pop
jno
mov
addl
sbb
sbb
push
jmp
fwait
or
sub
xor
mov
dec
outsb
pop
pop
scas
mov
mov
popa
push
inc
call
das
mov
mov
xor
xor
data16
pop
dec
mov
in
in
mov
jmp
adc
push
push
imul
jl
push
add
fcoml
adc
adc
mov
sub
das
rcrl
fisubrl
jno
inc
pop
arpl
outsl
gs
test
xchg
xorl
divl
or
xchg
cwtl
pop
sbb
inc
add
add
negb
jae
mov
jbe
popf
rcll
inc
movsb
lahf
clc
mov
cwtl
cmp
fwait
cmp
call
sbb
and
fdivrl
pop
repnz
mov
inc
or
mov
adc
iret
cmp
adc
mov
mov
and
pop
rcll
add
shll
pop
je
pop
iret
pusha
ret
jecxz
flds
out
mov
les
push
inc
mov
push
arpl
dec
xchg
cmp
aaa
jmp
xor
xor
imul
pop
xor
nop
jl
dec
lahf
out
adc
cmp
sbb
push
add
push
hlt
mulb
lock
cmp
inc
jge
sbb
xchg
and
and
mov
and
adc
sbb
mov
jne
ss
test
mov
pop
cmp
pop
int
xchg
test
xlat
cmp
out
fs
mov
fcos
push
sbb
stos
pop
push
push
or
mov
sahf
sub
jns
xchg
data16
mov
lahf
sbb
cwtl
inc
dec
mov
jp
dec
add
xor
addl
scas
orl
punpckldq
lcall
ja
mov
mov
subl
xor
mov
mov
push
test
imul
in
cmc
pop
cld
ljmp
jecxz
sub
nop
or
push
pop
loop
test
scas
jb
xlat
or
lcall
xchg
rolb
sar
aas
fwait
jecxz
adc
add
inc
loop
jmp
repnz
test
icebp
outsl
mov
adc
cltd
lcall
fistl
iret
enter
insb
rcrl
lods
leave
ret
fs
add
pop
push
enter
pop
jnp
cs
inc
lea
ss
data16
rcll
inc
adc
jp
ljmp
loopne
mov
popf
xchg
mov
les
dec
rcrl
inc
scas
stos
lahf
shlb
cmp
test
test
ljmp
xchg
repz
inc
ret
push
test
inc
dec
jg
inc
xor
sti
dec
test
sbb
jp
gs
mov
mov
push
enter
cs
cmpsb
mov
mov
or
mov
repnz
fs
mov
movsl
push
pushl
in
call
mov
or
xor
inc
jns
aaa
bound
call
dec
outsb
out
mov
xchg
xor
mov
jg
ljmp
cld
fwait
xchg
xchg
sbb
cmp
into
data16
sub
cwtl
mov
lock
in
mov
mov
js
repz
xchg
mov
idivb
mov
push
xchg
movb
test
lea
push
jp
testl
es
pop
lcall
push
xchg
add
mov
xchg
dec
mov
ret
jl
fstl
imul
enter
and
bndstx
cs
stc
aaa
jae
stos
jns
loopnew
cmp
cmp
in
into
or
lea
pop
cmpb
stos
in
cmp
inc
mov
push
jl
cmp
mov
mov
and
cmp
testb
cmpl
popa
sbb
test
push
mov
icebp
hlt
jl
psubb
mov
jns
add
pushf
push
mov
mull
sbb
test
xchg
insl
mov
mov
out
adc
cmp
cmp
lods
dec
jg
es
and
push
mov
ficoms
rolb
xor
fimull
mov
out
iret
mov
out
test
into
mov
icebp
cmp
int
cli
lea
jb
jb
cmp
sbb
mov
jmp
xchg
call
xchg
mov
push
jne
xchg
adc
pop
xchg
jle
xchg
jecxz
cmp
push
jecxz
ret
sbb
and
or
xchg
dec
int3
sub
jae
xchg
jno
sbb
cmp
stos
jl
ret
mov
jmp
mov
push
jne
addr16
stos
cmpsl
jg
sbb
loop
jns
movaps
xchg
push
or
mov
jge
nop
sub
dec
mov
jmp
movsb
xchg
test
in
dec
lea
adc
mov
pop
or
xor
inc
fstpt
cmp
ljmp
leave
outsb
adc
cmp
pusha
adc
push
push
pop
mov
out
sbb
add
jnp
mov
loope
adcl
int3
push
lret
cmp
in
xchg
mov
adc
pop
inc
add
cmpsb
xchg
mov
lcall
movsb
in
fabs
xchg
mov
sub
jns
aam
push
out
pushf
cmpsb
xor
pop
loop
mov
pop
sbb
in
xor
arpl
addr16
fcomps
mov
xor
xor
jmp
cmc
add
mov
ficoml
lret
cmc
jl
push
xor
aas
mov
inc
cwtl
decl
xchg
mov
ret
leave
or
in
sti
fistpl
mov
cmp
outsb
mov
fwait
or
ds
or
lahf
xlat
jmp
testl
or
jl
push
sub
push
fistpll
jl
cmpb
mov
cltd
dec
daa
cmp
or
push
jmp
ret
out
pop
insl
xor
push
add
addl
pop
hlt
xor
fdivrs
ret
xchg
bound
inc
repz
std
ret
xor
aad
lcall
dec
xchg
xor
leave
xchg
push
xchg
cmp
imul
xchg
sbb
jp
xchg
mov
lret
and
or
mov
ret
sbb
cmp
popf
enter
and
hlt
rorl
addl
rorb
mov
and
out
or
mov
mov
cmp
int3
xor
jo
inc
scas
repnz
insb
or
cmp
shll
movsb
jl
pop
fs
sar
jg
lret
cli
fdivrl
push
or
clc
push
or
jb
lcall
xor
clc
movsb
adc
aaa
pop
push
sub
jb
jp
cmp
push
mov
into
fsub
pop
or
xor
jmp
fimull
test
fstl
out
push
test
ljmp
das
adc
fildll
insl
call
shll
mov
add
pop
inc
sub
jb
mov
jnp
dec
sub
xchg
mov
js
imul
mov
mov
mov
mov
and
test
xor
mov
adc
push
push
popa
adc
xchg
ljmp
daa
cld
xchg
xchg
outsl
adc
add
pop
std
icebp
inc
insb
andb
pop
in
cmp
cmp
mov
repz
fsts
stc
cmp
mov
imul
inc
fisubrs
mov
fwait
jmp
cmp
mov
and
or
ror
push
mov
jns
test
mov
hlt
pusha
rol
mov
push
or
add
outsb
sbb
pop
sbb
mov
movl
xchg
xlat
shl
cmpsl
test
sahf
repnz
adc
pop
mov
pop
jno
or
test
imul
pop
pop
test
std
sub
xor
test
xlat
mov
mov
jae
pop
movb
and
xlat
arpl
inc
sbb
jmp
fcmove
inc
jge
jecxz
sbb
mov
xchg
cltd
adc
cmp
adc
dec
gs
pop
mov
lds
xlat
jmp
fisubl
mov
add
scas
cli
fmull
push
push
adcl
stc
ficoms
ret
sbb
in
sar
fsub
adc
cs
sbb
mov
xor
repnz
cmpb
xor
orb
mov
or
sbb
mov
inc
stc
out
mov
ss
shlb
adc
push
nop
pusha
inc
jbe
dec
or
push
lret
cs
mov
dec
test
xchg
mov
push
or
push
jge
cmp
cmp
sbb
scas
mov
aas
in
cmp
pop
in
adc
push
and
fidivs
pop
call
inc
jnp
ljmp
pushf
mov
push
sub
pushf
in
sarb
lods
stos
addr16
sub
arpl
int
fbld
jnp
clc
cld
stos
or
inc
xlat
repz
js
in
cmpsl
inc
and
aas
mov
mov
stos
jl
mov
cmp
ficoml
jmp
lock
out
ss
lcall
mov
mov
mov
xchg
inc
les
mov
fwait
stc
mov
inc
or
push
xchg
pop
rorl
and
inc
daa
adc
adc
fsubl
xlat
sti
and
jae
fwait
dec
lret
orl
push
pushf
mov
das
adc
mov
mov
cmp
xchg
and
int
sub
adc
rorb
mov
outsb
nop
pop
jg
xorb
mov
pop
or
ss
mov
cmp
xchg
movsl
pusha
fcomi
sub
jnp
loop
xor
jns
xchg
inc
jp
popf
mov
push
cmpsl
hlt
sub
or
mov
daa
and
cmpsl
cld
lds
mull
sti
mov
addr16
push
and
arpl
movsb
loopne
mov
popf
xchg
lret
mov
enter
stos
mov
mov
pushf
push
push
pop
or
loop
ljmp
in
imul
sahf
jmp
sahf
dec
les
add
js
or
mov
or
aaa
js
cmp
mov
fwait
js
andl
sbb
pusha
movsl
out
sbb
sbb
jb
or
ret
enter
mov
cmpsl
push
add
lock
pushl
test
mov
cmpsb
jns
xchg
dec
mov
and
cmp
mov
rcrb
jmp
push
sub
jae
add
mov
push
mov
mov
mov
prefetch
aaa
out
fs
pusha
push
fisubl
dec
cmp
es
cli
pop
out
rcl
int3
mov
les
pop
mov
icebp
xor
sbb
fidivrl
les
aad
pop
sti
cmp
sbb
movsl
or
loope
fwait
cs
rcr
inc
mov
es
mov
push
jl
and
xor
push
add
jbe
xchg
cmp
jl,pt
and
pop
cmp
loop
jnp
pop
sbb
call
jae
push
out
add
pop
pop
ret
enter
data16
inc
sarb
xchg
subb
loop
xchg
pop
fstps
insl
js
loopne
mov
jb
pop
jnp
nop
test
ss
adc
push
push
ret
inc
inc
pop
sub
int
sub
xchg
shll
mov
sarb
mov
push
dec
gs
test
aad
pop
mov
sub
mov
mov
mov
mulb
lods
mov
adc
leave
push
mov
clc
data16
adc
inc
xchg
test
sti
stos
sub
lock
ja
es
inc
lods
movsb
out
cld
or
pop
inc
pop
stos
pop
push
dec
popa
push
adc
mov
movsb
cmp
xchg
cli
sub
mov
xchg
cmp
test
lcall
xchg
mov
xor
or
lahf
test
pop
ljmp
subb
insl
jle
test
mov
mov
sub
fcoms
mov
xchg
mov
fidivrs
jb
dec
push
push
int3
inc
dec
fsubr
jbe
jl
fwait
mov
push
aas
fsubs
mov
xor
leave
sub
cli
lea
ret
bound
xchg
fs
roll
testl
cmp
lret
or
inc
inc
ja
movsb
sbb
jo
inc
inc
lret
outsl
iret
mov
cmpsl
push
insb
lcall
mov
je
add
aad
sub
cmp
ficomps
mov
sar
mov
js
out
mov
push
push
test
fdivr
mov
adc
xor
jb
sbb
dec
dec
mov
add
mov
push
lods
rcrb
aad
adc
sub
mov
mov
inc
sbb
cmp
bndldx
das
icebp
leave
ret
mov
adc
xchg
jl
mov
sahf
inc
mov
enter
sub
ret
ljmp
mov
xor
add
fimull
lret
or
pop
sub
pop
sbb
xchg
mov
mov
orb
dec
jne
mov
mov
out
pop
notl
xchg
jae
dec
jne
sub
in
xchg
and
or
ss
xchg
ret
mov
mov
cmp
shr
test
dec
out
lret
push
das
popa
xchg
mov
in
and
in
out
jl
pop
jge
xor
and
mov
or
sub
or
or
or
cmp
or
dec
jo
adc
mov
dec
test
test
sbb
dec
push
adc
sbb
iret
jecxz
imul
jb
jmp
push
sahf
mov
loopne
ja
dec
push
aam
and
iret
add
dec
mov
xchg
std
cld
pop
aad
in
out
push
or
or
data16
jns
mov
jg
clc
cmp
add
xchg
add
cwtl
dec
ja,pn
fmull
push
sbb
xor
jge
js
jmp
xor
outsl
xchg
jmp
jno
jecxz
lcall
fdivr
and
stos
and
push
aam
popf
in
in
jmp
cld
stc
sti
outsl
add
pop
repnz
dec
imul
out
repnz
int3
push
testb
rorb
jb
ja
mov
data16
add
push
fidivrl
sbb
aad
add
add
scas
dec
ret
cmp
and
xor
pop
cltd
int3
add
xor
sub
dec
sbbb
data16
mov
test
or
cmpsl
push
push
leave
and
add
das
inc
adc
mov
shll
inc
enter
mov
js
sbb
mov
inc
jbe
aam
mov
jge
jge
pop
dec
orl
add
pop
fcompl
xchg
pop
sbb
sub
inc
lret
mov
lock
sbb
rclb
aas
add
or
xor
mov
lods
cli
mov
repnz
pop
lcall
or
dec
inc
mov
mov
mov
xor
cmp
mov
jecxz
cmp
data16
aas
or
push
mov
imul
fwait
cmpsb
xor
jg
jmp
xor
stc
or
mov
xlat
shl
test
xchg
adc
test
and
lret
in
loope
sbb
in
or
pushf
lcall
push
dec
movsl
stc
je
dec
inc
pop
pop
add
xchg
mov
push
mov
push
roll
call
lods
roll
inc
fsubrl
iret
insb
fidivs
das
mov
rdrand
and
jl
arpl
pop
jbe
ljmp
out
xchg
fstps
test
mov
adc
mov
adc
adc
pop
push
rorb
jecxz
adc
cmc
xor
mov
ljmp
sub
cwtl
inc
bound
lods
inc
or
add
nop
enter
sbb
pop
add
mov
jnp
jecxz
inc
mov
mov
mov
mov
enter
push
or
aad
cmpsl
adc
arpl
je
and
sbb
in
test
ror
pop
cmp
cmp
test
xchg
out
push
pop
mov
aaa
aam
jns
xor
xchg
mov
add
pop
outsb
ljmp
mov
outsb
or
bound
adc
test
xor
aam
mov
pop
pop
shlb
outsl
imul
jns
insl
mov
adc
movsb
cld
jne
rcrl
mov
sbb
and
or
push
inc
xchg
push
and
loope
xchg
sub
jnp
inc
das
sbb
pop
xor
push
push
divl
push
push
push
add
push
push
inc
mov
gs
inc
dec
imul
shll
mov
ficomps
cmc
cmc
adc
pop
dec
fs
sub
add
adc
stos
pop
sarb
and
es
jl
aaa
push
mov
lds
push
inc
jo
das
sub
shl
idivl
fisubrs
aad
cmpsb
repnz
jb
push
dec
enter
xchg
jns
jle
jmp
pushf
iret
jl
fisubl
xchg
lds
sub
iret
aam
xor
in
push
dec
cltd
dec
dec
push
imul
imulb
mov
dec
and
arpl
add
cs
jmp
push
out
inc
sbb
lea
sbb
sbb
out
gs
stc
xor
jns
xchg
mov
test
ret
add
nop
lahf
enter
and
insb
addl
enter
sbb
gs
xor
add
sub
dec
dec
and
les
sbb
mov
sub
dec
test
cmc
pop
test
push
jae
outsl
or
cmp
sbb
ljmp
cwtl
imul
mov
and
repnz
mov
mov
or
adcb
mov
fidivrs
pop
lds
addr16
xor
mov
cmp
mov
jnp
sub
push
in
push
push
add
loope
push
jg
sbb
pop
xchg
xor
dec
xor
stos
int
jle
mov
pop
dec
xchg
fs
pop
inc
pop
mov
pop
xor
ret
imul
cmp
fldt
or
and
leave
cwtl
shlb
sbb
sub
mov
jnp
or
dec
jns
xchg
jp
lods
mov
or
sbbb
mov
push
xchg
scas
add
sub
loop
mov
inc
jg
push
std
out
and
in
ja
jne
popa
in
ret
xchg
cmpl
out
pop
pop
arpl
ds
test
das
or
loope
jmp
jmp
push
movsl
aad
push
ljmp
sbb
cltd
call
inc
rcll
adc
popf
and
dec
xchg
test
or
fcmovnbe
jp
mov
sbb
mov
out
shlb
imul
lcall
mov
xchg
shr
int3
roll
adc
sub
outsb
mov
or
clc
rcrb
nop
dec
cltd
call
push
jb
loop
push
shll
add
out
fs
add
mov
xor
sub
dec
not
inc
inc
es
and
sbb
sub
stos
dec
xchg
jns
cmpsl
cmpsl
xor
stc
fcomi
out
cmp
lret
aaa
addl
iret
mov
add
je
dec
add
stc
cmpsb
iret
sub
outsb
sarb
mov
cli
pop
cmpsb
pop
int
in
sbb
mov
jb
jb
inc
pushf
mov
clc
push
inc
xchg
fldt
jle
sbb
cmp
or
repz
test
daa
xchg
push
adc
cld
sub
in
mov
test
test
cld
movsl
jbe
lea
cwtl
clc
insb
mov
dec
inc
in
sbb
cmpb
fucomp
xor
aam
add
and
sbb
sahf
es
jnp
mov
xchg
fnsave
fcompl
nop
jecxz
jl
jg
add
dec
inc
test
cmpsl
es
add
insb
lret
sbb
fdiv
mov
dec
sbb
out
in
xchg
cltd
lret
sti
pop
mov
addb
sub
fiaddl
mov
xchg
add
arpl
mov
and
cld
xor
test
fcomps
inc
mov
pop
sub
popa
sbb
test
mov
jl
push
sub
jecxz
subb
cltd
or
ja
mov
xchg
call
and
lahf
push
xchg
stos
sahf
test
cmp
icebp
mov
inc
dec
mov
jns
xchg
in
sbb
jecxz
xor
xor
pop
test
dec
xchg
arpl
test
or
movsb
xchg
sub
popf
push
xor
repz
fsubrl
mov
xchg
jg
pop
xor
mov
test
jne
repz
imul
mov
push
ds
mov
sbb
xchg
mov
loop
adc
inc
sbb
rcrb
cmpsb
sti
lods
add
add
push
ja
sub
adc
insb
xlat
mov
mov
psubd
lock
cld
mov
mov
push
lahf
fldcw
or
sbb
xor
push
sarl
movl
pop
mov
icebp
mov
aas
mov
and
cmp
mov
ret
in
fwait
mov
std
xor
sbb
testl
ficomps
sbb
xlat
cmp
sub
sub
prefetch
in
lods
mov
inc
dec
cmc
mov
and
push
pop
mov
aas
mov
gs
out
fiaddl
xchg
or
addl
jne
aam
sbb
jecxz
inc
adc
leave
pop
data16
pop
cmp
cmp
dec
push
mov
or
jge
xor
adc
cmp
cltd
dec
mov
sub
jo
mov
sub
ljmp
mov
jb
repz
xor
insl
cmp
add
inc
mov
popf
fwait
lods
push
and
lret
adc
sbb
xor
arpl
push
js
push
mov
mov
in
rorl
subb
repz
adc
ljmp
jb
pop
push
inc
and
sbb
jo
mov
andb
out
pop
call
sub
or
pushfw
push
sahf
mov
cmp
divl
pop
in
pop
rcl
mov
push
lods
mov
adc
gs
call
out
push
xor
fnstsw
mov
rolb
ja
test
cli
mov
jp
jl
pop
add
je
pop
movsb
push
mov
dec
leave
dec
push
dec
inc
push
mov
lods
leave
mov
sbb
lock
icebp
fidivs
dec
mov
or
mov
jns
xchg
js
aam
out
out
scas
bound
mov
mov
or
sahf
lds
std
aam
pop
in
push
mov
cmp
add
sub
cmpsb
jo
ja
call
movsb
push
lods
jmp
mov
dec
ljmp
jnp
sbbb
negb
pop
jecxz
test
xchg
in
test
mov
lcall
hlt
dec
shll
ret
push
add
mov
jecxz
clc
or
and
pusha
mov
bound
dec
mov
std
pop
jns
fldt
loop
pop
ret
dec
sti
add
cmp
ds
mov
outsb
mov
mov
lock
mov
ret
jle
lods
mov
cmp
lret
or
mov
push
sbb
jmp
pop
aaa
loop
enter
adc
lahf
pushf
xchg
out
loope
ds
fstl
cmp
mov
xchg
lock
push
pop
jmp
mov
ss
aam
aas
sahf
xchg
pop
in
in
mov
push
ret
shlb
js
and
jae
push
bound
mov
ret
jns
mov
sub
or
xlat
mov
cwtl
and
in
add
inc
popf
lahf
sarb
mov
sbb
sbb
stc
scas
aaa
cmpl
gs
and
loopne
mov
imulb
cmp
mov
int
addb
or
adc
cmpb
mov
lcall
and
pushf
mov
popf
pop
jl
mov
maskmovq
testl
add
adc
pop
push
or
subl
cmp
push
and
pop
test
inc
xlat
movsl
mov
hlt
fldenv
sub
rcl
xchg
add
loop
sub
sub
push
or
iret
sbb
js
add
shlb
dec
inc
movsb
mov
flds
ficoms
scas
dec
fisubrs
jle
mov
add
shll
push
sub
cmp
cltd
pop
xchg
mov
xchg
jbe
xor
sbb
fnstcw
adc
add
mov
push
hlt
sbb
in
nop
filds
dec
outsb
pop
cmp
mov
pop
inc
repnz
test
mov
and
xor
stc
hlt
insl
cmc
mov
xchg
jecxz
cmp
fcomps
jmp
and
adc
xlat
mov
stc
into
push
divb
rcll
jnp
repz
in
repz
pop
rcr
push
sub
or
jp
and
push
jmp
cmpsb
xor
or
paddd
adc
mov
xchg
dec
fsqrt
pop
nop
cwtl
push
and
out
sub
xor
mov
mov
test
movsl
lcall
test
push
pop
pop
cmpsl
jnp
adc
add
aaa
iret
add
dec
incb
cmp
enter
repz
mov
dec
pop
mov
lock
jp
dec
loopne
or
inc
stos
mov
mov
mov
ja
ss
fldt
ret
inc
out
jne
cld
mov
sbb
mov
insl
in
mov
pop
sub
inc
scas
xchg
sbb
add
pop
push
and
loope
push
int3
dec
jge
jo,pn
cmp
xlat
sub
insl
loope
dec
mov
pop
inc
push
adc
xor
stc
add
cmp
mov
cs
dec
les
add
mov
popa
sbb
mov
fwait
push
xchg
leave
aam
idiv
or
or
mov
loop
stos
adc
int3
je
or
inc
es
mov
out
fisubs
xor
and
xor
dec
dec
or
notl
jno
icebp
jle
mov
fisttps
clc
inc
and
sbb
stc
mov
inc
sub
sub
nop
mov
mov
sbb
adc
push
cli
sahf
jmp
fistl
subl
bswap
xchg
xchg
jb
mov
arpl
xor
ret
pop
sub
jns
mov
leave
cmpsb
cmp
push
ljmp
cmp
sarl
popa
jp
lcall
mov
push
adc
xor
adc
in
mov
and
cli
outsb
inc
mov
mov
xor
mov
mov
cmpsb
insl
mov
lret
out
jl
pop
push
inc
sub
inc
aaa
cmpsl
xor
int
cli
lret
sbb
mov
add
test
icebp
sbb
jg
mov
das
dec
mov
xchg
mov
mov
push
jmp
loopne
movsb
cli
js
add
clc
inc
out
loopne
enter
enter
pusha
xchg
adc
mov
mov
or
sbb
and
jp
cmp
inc
movsb
sbb
pop
xor
mov
xor
xor
inc
icebp
add
jb
pop
sbb
cmp
lods
or
push
cltd
sub
jo
gs
test
hlt
pop
cmpsb
jo
dec
data16
pop
xchg
and
rcrb
out
sub
insl
push
out
xchg
push
add
sub
mov
stos
mov
xchg
sub
adc
incb
fcompl
fimull
in
push
loope
adc
aad
clc
mov
jmp
mov
rclb
popl
adc
lock
mov
scas
test
dec
dec
lret
sub
sub
mov
rolb
xor
shl
and
inc
push
sbb
push
daa
xchg
sarl
nop
iret
enter
jl
pop
into
std
int3
test
jae
scas
stos
push
mov
adc
cmp
shlb
xchg
pusha
inc
sbb
mov
loopne
dec
xchg
pop
loop
movsl
lahf
ljmp
cmc
dec
sti
je
or
daa
pop
sbb
mov
jns
pushf
shlb
sub
negb
popf
sub
js
xor
mov
inc
jb
mov
jl
dec
movsl
das
loop
push
inc
push
sub
fwait
xchg
outsb
push
notb
bound
mov
cmpsl
or
movsl
mov
mov
sub
fldl
lcall
leave
sbb
test
xchg
and
push
ja
ret
inc
mov
cld
jns
xchg
sbb
mov
lret
push
imul
xchg
pslld
pop
xchg
scas
dec
adc
into
stc
sub
fwait
in
out
jae
dec
lret
mov
adc
add
or
lret
xchg
test
xor
push
sub
jge
mov
jb
push
fxch
imul
mov
enter
out
enter
repnz
in
pusha
sub
adc
clc
dec
cmp
push
insl
and
and
packsswb
fsubrp
xchg
movsb
push
js
cli
sarb
mov
mov
xchg
xchg
out
mov
fucomip
xchg
sbb
inc
or
jno
xor
repnz
mov
sub
pop
ja
fsubrl
cmp
push
fwait
cs
inc
add
xor
test
dec
or
out
xchg
xchg
or
jmp
pop
pushf
or
add
fists
pop
push
mov
ja
aam
push
or
push
popa
sti
fstpt
out
mov
inc
pop
mov
fwait
push
ja
iret
jle
popa
icebp
fdivrl
mov
and
enter
mov
xor
rorb
mov
jg
pop
lahf
cmp
and
cmp
push
lret
mov
pop
cmc
mov
iret
cmp
push
pop
and
cmp
dec
cmpsb
out
add
mov
imul
adc
adc
mov
outsl
push
dec
fisubs
add
push
pop
mov
lds
jo
xchg
cmp
inc
pushf
xchg
in
mov
addb
insl
and
cmc
dec
dec
loop
aad
sbbb
flds
push
xor
mov
fisttpl
test
push
mov
mov
outsb
aad
jbe
mov
inc
fxch
mov
sti
int
mov
fiadds
dec
aam
in
inc
sahf
jnp
mov
and
inc
test
inc
fcoml
sub
cmpb
push
push
adc
dec
outsb
ret
and
pop
or
xchg
stc
xor
mov
add
inc
push
aas
xchg
div
or
add
sbb
mov
outsb
stos
es
pusha
cmp
mov
sahf
rcr
sbb
add
fwait
mov
stos
inc
data16
iret
sub
scas
or
jge
aas
into
mov
lcall
test
dec
loope
mov
ret
cmpsb
mov
and
cmp
xor
mov
out
xor
ret
xlat
mov
in
fs
mov
fs
sub
lret
movsb
adc
and
lret
push
jno
int3
or
loope
test
lea
push
fs
fbstp
out
push
or
outsl
xchg
hlt
pop
int
test
dec
push
orl
hlt
ss
sub
in
lea
jl
in
pop
inc
inc
cld
push
in
inc
dec
negl
cmp
or
lds
dec
and
jl
shll
push
adc
pop
repnz
mov
push
adc
or
mov
dec
es
dec
cli
test
or
ret
loope
std
xor
sbb
dec
test
test
test
rcll
xchg
xchg
cwtl
mov
into
lret
rorl
xor
mov
inc
pop
sbb
sbb
loop
in
in
lea
std
xchg
mov
xor
int3
in
inc
cmp
mov
rol
icebp
jo
dec
adc
rcl
adc
maxps
insb
push
mov
sub
and
repnz
dec
movsl
jl
inc
fistpl
nop
ja
jmp
repz
and
dec
inc
inc
jae
sbbb
js
cmp
fisubl
cwtl
call
push
and
shl
mov
in
pop
xchg
imul
subl
cmp
test
aaa
inc
push
iret
pushf
pop
ret
lahf
repz
adc
cmp
dec
dec
cmp
fistps
jge
ljmp
test
mov
jp
movsl
push
push
rcll
push
insb
jle
insb
xor
addr16
loope
jp
xchg
and
out
push
inc
mov
lods
fcomps
or
xchg
inc
sbb
jbe
add
movsb
push
inc
or
jnp
cmp
mov
or
scas
in
jo
std
add
enter
stos
mov
out
leave
pop
and
int
xchg
adc
cmp
out
jnp
and
add
fnstsw
push
out
mov
das
out
adc
scas
jne
lret
popa
aam
lret
pop
in
iret
xchg
add
movsb
int
and
xor
xchg
pop
ret
adc
lods
xor
pushf
sbb
mov
iret
mov
cwtl
add
and
add
flds
das
repz
add
pop
subb
lahf
lret
push
scas
sbb
xor
sbb
mov
mov
gs
loope
lods
lods
mov
ret
push
jnp
loop
cld
std
loopne
cmp
mull
and
xor
cmp
loop
lds
shl
cmp
xchg
push
or
cmp
divl
arpl
in
jmp
sahf
fsubs
jbe
sbb
fwait
jl
fidivl
or
dec
sbb
mov
shlb
jmp
mov
loopne
xor
insl
inc
lods
ljmp
into
fnstsw
add
cltd
ret
sub
mov
add
stc
shl
xchg
ss
or
ljmp
leave
enter
and
out
and
stos
popf
inc
add
gs
test
lahf
inc
movsb
lds
mov
leave
imul
pop
fldt
std
int3
scas
daa
les
lcall
aaa
das
enter
jmp
mov
mov
lahf
dec
push
mov
mov
insl
jl
mov
rol
push
leave
cmp
push
jno
stc
sbb
jo
mov
test
cmp
dec
mov
sbbl
jecxz
je
lea
shr
and
andl
cmp
inc
xchg
pop
pop
das
in
int3
xchg
mov
popa
hlt
jecxz
lret
sub
popa
mov
jae
mov
ret
outsb
mov
jle
xor
stos
insl
push
jb
int3
and
int3
decl
push
xchg
pop
enter
lock
and
rcrl
ljmp
xchg
mov
mov
push
mov
jns
push
adc
dec
int3
inc
xor
dec
cmp
popa
mov
xor
mov
scas
xor
repnz
and
add
pop
stc
lods
xorl
ss
mov
mov
popf
imul
xchg
jb
popf
pop
xchg
cwtl
jo
test
mov
movsl
add
jnp
lahf
pop
lcall
mov
lea
pop
imul
push
inc
repz
daa
cmp
mov
insb
out
aas
and
insl
adc
pop
and
pop
out
push
cs
add
pop
pop
inc
roll
push
pop
pop
incb
daa
push
jl
sub
or
pop
pop
sahf
clts
xchg
and
in
jb
rorl
cmp
sbb
test
pop
lcall
dec
and
push
ficompl
imul
jo
in
mov
xchg
adc
pop
add
sub
and
dec
cmp
scas
faddl
push
testb
fists
mov
mov
cmp
cmp
sub
xor
push
xor
lock
xor
mov
add
sub
addr16
push
ds
mov
jmp
jne
pop
popf
insb
sub
pop
sub
or
fisttpl
adc
shlb
cld
sub
out
mov
push
testb
movsl
andnps
adc
pop
stos
xchg
outsl
xchg
insl
fadds
insb
imul
push
stos
inc
jb
jge
push
push
pusha
or
ficomps
insb
sub
push
sub
lods
ja
xlat
sub
outsb
adc
fucomi
nop
into
cmp
loop
inc
divb
push
ret
pop
insl
sub
or
fstpl
mov
loop
sbb
adc
add
push
mov
add
jns
jb
inc
jg
inc
rolb
sti
xchg
push
in
mov
imul
cmpl
icebp
inc
mov
dec
push
mov
jbe
or
cmpsl
cmpsl
xor
or
movsl
dec
test
cmp
cmovnp
loopne
sub
pop
add
shr
ret
push
sbb
or
xor
mov
call
ja
push
mov
lods
fmul
iret
lret
mov
test
push
das
arpl
xchg
loop
das
and
icebp
push
cs
dec
sti
jbe
ja
out
ret
pop
leave
mov
push
loope
call
pop
xchg
in
inc
pop
mov
or
sbb
adc
in
pop
aas
imul
ret
xchg
fsubrs
or
add
push
testl
outsl
loopne
jae
pop
push
xchg
sbb
loop
dec
jecxz
jge
and
mov
mov
sbb
out
jp
loopne
mov
cld
movsl
dec
sbb
in
or
mov
movsb
into
stos
sbb
inc
mov
adc
lret
xor
cmp
lods
loopne
fcmovbe
adc
iret
mov
pop
cmc
mov
push
jmp
pop
mov
push
loop
sub
or
mov
sub
push
push
sti
lock
mov
mov
jmp
or
shr
jae
scas
repnz
jle
sbb
sbb
arpl
mov
xchg
push
enter
ljmp
mov
push
push
stos
xor
cli
pop
dec
mov
sbb
in
adc
jno
cmpsl
pop
or
xchg
fisubs
push
test
mov
ds
scas
dec
jge
popa
mov
lds
fisubrs
test
pop
xor
fabs
xchg
jne
cmpsb
adcb
or
pop
je
inc
inc
xor
mov
mov
mov
test
mov
xlat
xor
enter
je
mov
jno
mov
fsubrp
cmpsl
subl
stc
pop
sbb
lcall
xor
jbe
in
sub
aad
or
aam
jno
pop
icebp
int3
sub
adc
in
add
jns
pop
and
popa
adc
sub
xchg
dec
sub
push
cmp
or
push
popf
je
xor
dec
lods
rolb
clc
mov
dec
fistps
mov
fwait
lods
adc
sarb
push
jae
dec
and
sbb
sub
cmp
dec
push
bound
pop
test
xor
clc
xor
jbe
jbe
or
subl
mov
mov
test
mov
aaa
xor
cmpl
or
xchg
and
pop
aas
inc
nop
cld
outsl
or
jo
cmc
xor
jmp
push
mov
mov
sub
mov
leave
inc
out
pushl
das
out
push
mov
or
sbb
dec
or
das
sahf
in
mov
add
out
pop
lods
fidivl
mov
inc
pop
add
test
clc
and
mov
scas
or
andb
jne
push
jmp
popa
shll
mov
sahf
int
hlt
mov
and
or
or
mov
sbb
pop
and
mov
loope
pop
movhps
add
inc
xchg
ss
pop
add
xor
test
xor
rcrl
ljmp
xor
aad
popa
inc
jmp
or
xchg
clc
mov
in
arpl
jno
cwtl
and
pushf
mov
rolb
or
mov
mov
jns
lahf
xchg
leave
xchg
ss
inc
sbb
daa
repz
nop
jae
fsubrl
sbb
push
dec
jle
mov
and
repz
fwait
mov
mov
psllq
mov
loopne
mov
mov
adc
andl
dec
sbb
and
imulb
xor
popf
jb
mov
out
rcl
sti
cmpsb
fimull
pop
insl
sbb
lahf
mov
cwtl
xchg
int3
fisttps
test
pop
mov
cmp
pop
push
in
shlb
fucomp
add
pop
jecxz
inc
mov
lods
mov
aad
cwtl
mov
jmp
mov
repz
jle
xor
fmulp
xor
out
mov
xchg
inc
test
loop
ljmp
lret
adc
insl
stos
xor
insb
mov
or
or
push
add
mov
popa
int
leave
jmp
addb
jl
and
idivl
or
scas
out
pop
push
flds
xchg
data16
dec
mov
sbb
mov
test
jle
sub
add
cmp
into
test
adc
popf
add
daa
add
pop
fnstsw
ficompl
scas
and
inc
in
shll
outsb
stos
dec
inc
jp
adc
pop
leave
test
xchg
jne
or
int
fsubl
pop
imul
ds
lret
mov
aad
repnz
jl
sti
in
mov
jbe
mov
cmp
lds
ss
out
scas
shlb
cmc
and
clc
lahf
outsl
mov
mov
test
fdivrl
cltd
movsb
movsl
cmp
push
xchg
xor
sbb
mov
inc
mov
adc
lret
lret
and
mov
sub
pop
and
in
data16
add
sbb
or
pop
movsb
or
and
aad
fnstenv
and
enter
in
push
jl
mov
mov
scas
or
and
cmp
lret
sbb
xchg
adc
jns
loopne
jbe
test
in
push
fdivs
rclb
add
stc
aaa
gs
mov
loopne
xor
outsl
addr16
shrb
outsb
sarb
lods
sub
in
sbb
movb
mov
sub
pop
jp
jne
call
std
jne
mov
rorl
cli
addr16
loope
and
in
add
mov
scas
scas
scas
nop
xlat
dec
data16
aas
les
sub
xchg
jmp
jno
lods
pusha
dec
mov
and
push
stc
mov
cmp
jbe
cmpl
sbb
adc
cld
push
jmp
or
ret
mov
adc
ror
sbb
cmp
sub
loope
insl
add
and
inc
in
outsl
push
cli
insb
je
rcll
push
arpl
jne
cwtl
dec
inc
mov
lds
nop
cwtl
mov
out
jecxz
or
popa
call
inc
cwtl
push
leave
cmp
mov
subb
xor
mov
xchg
cmp
pop
xchg
mov
add
jecxz
insb
xchg
sub
dec
mov
jp
sarb
mov
cs
fnstcw
lret
push
scas
pop
sti
mov
lock
sub
jnp
cmpsl
pop
jbe
arpl
int3
int3
add
sar
repnz
mov
add
pushl
sbbb
mov
dec
pusha
push
dec
movsl
sbb
and
fistl
pushf
pop
stos
adc
and
out
inc
fs
jecxz
jge
fdivl
mov
jnp
xor
fsubp
pop
adc
xchg
lea
aam
std
push
xchg
stos
fdivr
shl
cwtl
fistl
data16
mov
outsl
lret
sub
sbb
test
mov
addl
cmp
dec
inc
xchg
js
jb
mov
into
inc
and
bound
lret
cmp
gs
in
mov
or
fldl
in
jo
and
xor
jecxz
lods
add
jmp
scas
mov
mov
cld
rcrb
aad
int
adc
cmpsb
mov
je
mov
lcall
pop
mov
aam
hlt
int3
sub
jecxz
pop
mov
fcomps
jns
jl
ss
add
xchg
lcall
test
mov
xor
xor
push
sti
mov
and
bound
push
mov
pop
adc
nop
das
xor
lret
add
inc
bound
push
sti
mov
xchg
loope
btcl
subb
mov
pop
insl
mov
and
fiadds
fisubrs
sub
imul
or
and
push
gs
jmp
xor
sub
mov
xchg
sub
jb
sbb
loopne
fs
mov
xchg
int3
push
jae
in
pop
repnz
outsb
sbb
push
leave
or
inc
popf
test
mov
andb
jnp
gs
pop
xchg
xor
mov
out
rcrl
imul
adc
jnp
inc
dec
adc
sbb
ss
popf
push
ret
bound
dec
jae
nop
or
mov
leave
push
imul
imul
xchg
cmpsl
sbb
xchg
jle
jge
xor
mov
jb
int3
cwtl
sbb
mov
movsb
roll
stc
inc
ss
dec
lods
loope
rclb
pusha
aaa
into
repz
cld
mov
xchg
mov
and
hlt
inc
fwait
dec
cmp
cmp
popa
jne
mov
notl
add
pop
enter
and
mov
lods
jno
add
setg
adc
and
addb
add
mov
pop
adc
loope
icebp
loopne
je
sbb
pusha
bound
movsb
movsb
arpl
sbb
ja
or
push
push
jecxz
adc
xchg
mov
pusha
hlt
imul
int
repnz
test
jno
pop
scas
sbb
jmp
jmp
aaa
sbb
scas
adc
push
pop
aaa
out
xor
cmp
lret
fsubs
int3
pop
push
test
psrad
cmp
xchg
in
fs
pop
shrb
insl
dec
ss
scas
in
dec
or
pop
pop
gs
lods
mov
pop
xchg
pop
int3
mov
addr16
mov
sbb
pop
ds
insb
cwtl
out
and
cld
dec
dec
insb
mov
scas
pop
nop
inc
lds
jg
repz
inc
jmp
ret
xchg
pusha
sub
push
int
icebp
or
sub
dec
dec
cmpb
xchg
fadds
mov
lds
fwait
dec
lcall
les
inc
and
lret
jge
int3
test
jmp
cmpsb
xor
push
jmp
jp
sbb
mov
xor
cmpsb
and
iret
mov
mov
scas
cmpsb
dec
lods
popa
test
fstpl
bound
push
sar
or
xor
shr
cmpb
mov
cwtl
fs
int
int
or
test
inc
xor
fcompl
js
xchg
sbb
call
fidivrl
test
stos
pusha
sarb
sti
mov
mov
clc
rep
pop
mov
cmp
mov
sbb
lods
aam
addr16
inc
loopne
mov
pop
dec
sbb
iret
iret
std
mov
test
adcl
xchg
mov
mov
xchg
sub
pusha
out
lods
sti
push
sub
popf
sbb
test
push
ret
xchg
xchg
sbb
inc
popf
xchg
cltd
popl
jp
scas
pop
or
cmc
inc
mov
mov
cmp
xchg
ja
jno
inc
aaa
fsts
jne
into
fstp
mov
push
and
cwtl
pop
leave
cmpsl
ficoms
ss
pop
scas
dec
hlt
add
cmpsb
bound
popa
or
mov
in
lds
sub
push
add
ffree
out
outsl
adc
or
rcrl
xor
bound
dec
in
mov
xchg
xorb
scas
xor
imul
dec
pushf
mov
inc
pop
aaa
aaa
sbb
pop
jge
outsb
testl
or
bound
jp
or
stos
test
xchg
jle
add
pop
mov
shll
cmp
jo
shll
cmpsb
mov
inc
sbb
jle
mov
xor
xor
sbb
daa
es
adc
shlb
out
lods
adc
aam
mov
dec
cmc
mov
adc
sbb
cmpsb
mov
leave
jmp
aas
xchg
cmp
out
jo
add
scas
sbb
addr16
xor
adc
test
lret
cmp
cmp
and
inc
jns
xlat
push
fldcw
loop
int3
sbb
xor
loop
cli
push
lcall
mov
sub
and
mov
inc
lods
arpl
inc
les
mov
xchg
sub
push
out
cmp
hlt
jb
jmp
add
mov
iret
pop
pop
mov
push
sub
orl
adc
or
inc
sbb
enter
test
ds
insb
dec
dec
push
dec
jp
arpl
mov
or
cmp
je
out
inc
inc
pop
add
xchg
adc
lcall
out
and
push
roll
mov
push
mov
jl
or
test
mov
xor
dec
imul
sub
es
adc
adc
sbb
subl
pause
fs
popf
shr
scas
mov
jmp
push
xchg
inc
push
xchg
xchg
and
mov
cmp
cld
je
add
adc
sub
jge
adc
dec
mov
inc
jo
push
add
in
ljmp
mov
in
jno
aad
imul
cli
cmp
push
push
or
lret
pop
loopne
jb
mov
fsubl
rorb
inc
lock
xor
jno
stos
add
push
xchg
or
fsubl
fnstsw
jb
adc
lret
sbb
stos
sbb
adc
imul
push
push
and
sbb
mov
fisttpll
fdivrs
hlt
loopne
mov
insl
sub
aas
push
or
sub
fildll
adc
in
cmpsl
mov
dec
sbb
sbb
pop
mov
or
mov
and
pop
sbb
mov
insl
xor
hlt
xchg
ret
in
pop
sbb
pusha
lcall
sti
push
es
inc
push
stc
pop
mov
xchg
addr16
cmp
xor
rcl
push
xchg
push
call
fucomp
decb
mov
sub
cld
ljmp
pop
fstpt
imul
js
cmp
xor
andl
iret
lock
fnsave
jl
and
pop
mov
dec
mov
rcll
lods
ss
inc
sti
rorl
mov
jecxz
or
loopne
mov
xor
gs
mov
rorl
mov
inc
lret
lea
ljmp
sbb
xchg
les
mov
sub
mov
xor
clc
inc
test
pop
ss
and
stc
lock
mov
xchg
dec
sub
imul
push
arpl
mov
dec
xlat
or
sti
sub
js
jg
pushf
mov
push
sub
dec
sbb
mov
fisubrs
stos
in
dec
ljmp
repz
aad
fadd
sub
mov
out
xor
and
mov
mov
inc
or
xlat
enter
xchg
mov
pop
out
cmc
mov
sbb
movsb
ljmp
rcll
add
xchg
popf
stos
inc
mov
fcmovnu
sbb
or
lods
adcl
jecxz
or
mov
into
cs
dec
aad
sahf
orb
jecxz
push
or
mov
inc
dec
out
adc
or
pop
push
xchg
mov
in
inc
cmpsl
or
dec
or
mov
pop
inc
ret
loope
fmul
pusha
push
or
lret
jb
ss
push
or
push
pop
cmc
lods
icebp
test
repnz
and
ret
mov
jge
test
push
test
mov
and
mov
push
pop
xor
jmp
fsubl
jle
xchg
push
xchg
xchg
loopne
fdiv
jmp
push
imul
lock
sbb
xchg
xor
int3
xor
push
insl
and
xchg
leave
xchg
adc
jae
mov
mov
mov
and
cltd
fists
cli
xchg
dec
repnz
loop
mov
cmp
jbe
imul
push
rol
jnp
aas
xor
adc
sub
mov
movsb
push
les
call
dec
outsb
in
scas
mov
cmp
and
mov
jmp
in
insl
add
mov
andl
pop
xor
push
pusha
sub
inc
aaa
inc
pop
bound
push
hlt
fimull
int
jb
pop
cmpsl
lahf
insl
mov
mov
xchg
rorb
scas
or
sti
mov
or
int
or
shll
addr16
fcomip
xor
mov
std
mov
mov
cltd
push
leave
mov
xchg
out
movsl
imul
sbb
mov
test
adc
pop
aaa
mov
int3
xlat
fsubs
mov
inc
lahf
out
aad
jo
shr
fs
aad
rclb
inc
adc
sbb
pop
push
fldt
and
inc
xchg
dec
adc
xor
arpl
test
imul
xor
andl
dec
or
mov
mov
fcomp
xchg
adc
mov
cmovle
adc
sub
ficoms
js
ds
std
inc
and
sti
lahf
add
add
or
das
loope
insl
add
mov
add
outsl
inc
push
insl
je
imul
imul
push
mov
in
hlt
dec
or
push
iret
or
loopne
or
aaa
popa
pop
mov
rorb
ss
mov
mov
shrl
arpl
sub
imul
cmpsb
push
icebp
and
mov
mov
jae
push
test
xor
pop
in
fildll
xchg
in
aaa
test
std
in
test
inc
sub
cli
loop
push
xchg
popf
pop
jp
mov
inc
test
push
pop
and
mov
pop
repz
pop
repz
lods
or
popf
push
add
mov
jge
jl
rclb
into
xchg
lods
sub
mov
inc
mov
cld
testl
and
daa
std
pop
jle
and
inc
jo
push
clgi
mov
fildl
cmpsl
push
daa
mov
and
mov
jb
jbe
out
fsubl
inc
fadds
push
loope
cmc
je
dec
add
aas
inc
push
adc
repz
cwtl
js
aad
jb
pop
orb
adc
shll
aas
sahf
repnz
popf
mov
je
mov
jae
push
jno
xchg
jo
xor
pop
cmpsl
pop
pusha
repz
aas
mov
mov
cld
jge
adcl
mov
adc
or
mov
cmp
ljmp
cltd
inc
mov
xchg
loope
movsl
xchg
dec
insb
sub
pop
enter
cld
push
sbb
outsl
loopne
pop
arpl
dec
mov
push
dec
jno
add
mov
movsb
pop
lea
das
inc
sbb
xchg
outsb
ret
cmp
sti
adc
mov
xor
jne
cmp
cmp
aaa
in
or
jb
pop
in
push
mov
dec
stc
and
insl
push
pop
aas
enter
inc
imul
dec
out
and
jecxz
mov
aam
push
and
outsb
movsl
pop
lcall
dec
pop
ds
jmp
icebp
sbb
mulb
xchg
xor
xchg
fcmovu
pusha
push
mov
and
loope
add
cld
fstl
addb
loopne
into
dec
jo
push
pop
sahf
dec
mul
je
out
imul
mov
into
call
xchg
lahf
xchg
mov
out
jno
push
loop
adc
mov
fwait
mov
inc
dec
or
ljmp
mov
hlt
mov
sarl
jecxz
mov
enter
mov
cmp
aam
fisubl
shlb
jns
adc
iret
aaa
mov
loop
in
icebp
mov
pop
push
push
pop
mov
imul
jp
popa
lods
xor
repz
pop
mov
bound
push
cmp
shld
pop
out
add
cmp
repz
aam
or
fimuls
push
mov
mov
shrb
mov
xlat
inc
add
or
dec
pop
insl
mov
stos
push
dec
pop
adc
js
pop
aaa
fildl
cmp
cs
mov
ds
mov
ss
xchg
jno
jne
jg
lcall
loop
or
mov
fldenv
dec
je
jo
stc
sub
pop
xor
lahf
jmp
add
loop
lcall
push
das
adc
inc
sub
xlat
cmp
mov
pop
popa
das
movsb
rorb
or
out
xchg
stos
adc
add
leave
in
psubw
push
push
aam
push
inc
sbb
push
push
push
cmpsl
xchg
sub
push
inc
and
and
cmp
cwtl
pop
into
int3
movsl
and
repz
mov
dec
and
cmp
sbb
pop
cwtl
mov
daa
jmp
aaa
fdivs
mov
xacquire
mov
dec
int
in
orb
je
jmp
stos
push
push
stos
xor
mov
clc
jno
xor
clc
xchg
adc
inc
mov
aad
cwtl
je
inc
fucomp
mov
fildll
jmp
pop
dec
mov
ss
mov
dec
aaa
push
mov
mov
mov
inc
das
mov
cltd
fnstsw
sti
repz
pop
test
ljmp
inc
jns
pushf
mov
out
in
cpuid
sub
mov
mov
imul
inc
xlat
and
xor
xchg
inc
xchg
xor
jl
leave
pop
xlat
cmp
mov
nop
inc
outsl
inc
mov
xchg
push
int
mov
into
fnstenv
pop
dec
rolb
in
push
mov
push
data16
ds
dec
xchg
add
insb
movsb
mov
sti
rcr
xor
fldl
xchg
dec
adc
sub
roll
and
sti
lds
push
jne
adc
dec
mov
arpl
stc
test
imul
je
or
push
cmc
push
add
jp
cmpsb
jp
push
iret
add
dec
push
mov
shrl
cmp
nop
cli
cmp
jp
loope
rolb
in
cmp
rcll
mov
loopne
mov
pop
jl
lods
imul
movb
push
test
out
and
nop
sub
jecxz
divl
jnp
out
inc
cmpsl
lods
in
jl
out
jg
jge
cmp
adc
mov
aam
sbb
pop
js
mov
and
add
or
roll
sub
adc
inc
imul
xchg
imull
ja
jge
enter
cltd
fidivl
push
sub
cld
lods
out
std
xchg
test
rol
xor
repnz
arpl
add
lock
ret
fidivl
in
in
jg
lret
in
mov
fisttps
outsb
test
and
pmulhuw
in
inc
pcmpgtd
insb
cmpsb
imull
test
mov
test
out
cmpsl
xor
test
pusha
xchg
mov
or
imul
lahf
push
cmp
scas
cltd
fimull
inc
pop
and
je
cmp
mov
sub
bound
or
adc
lds
es
std
xor
add
or
pop
cmp
or
popf
ss
loopne
aam
sub
xchg
hlt
adc
mull
rsm
ljmp
and
or
pop
jp
shrb
mov
js
arpl
jl
or
or
mov
inc
dec
dec
push
push
loopne
jns
pop
sub
xor
push
xor
addb
out
out
and
rclb
mov
ret
lods
and
add
pop
and
filds
scas
fisttps
fcmovnbe
mov
sbb
sti
frstor
rol
and
pop
lods
sbb
data16
and
imul
jl
inc
popa
pop
lods
scas
test
jmp
xchg
jae
sub
pop
aad
int3
into
dec
fs
xchg
push
jmp
rcrl
jae
test
test
in
pushf
pop
popa
cltd
rclb
loopne
sti
mov
stos
int3
mov
xor
and
jns
popf
pop
and
out
scas
adc
jle
test
test
cltd
xchg
sbb
xchg
popf
je
shlb
outsb
adc
mov
push
add
test
xchg
and
inc
scas
cwtl
jns
or
xor
repnz
jl
out
xor
cld
adc
imul
adc
xor
mov
out
adc
sbb
aas
jecxz
in
and
mov
lods
inc
out
cwtl
gs
and
push
inc
dec
into
mov
outsb
jae
pop
sub
xor
and
les
jg
xchg
mov
stc
jp
mov
adc
dec
jle
adc
and
lcall
adc
push
ss
fstp
sbb
pop
dec
mov
jge
sbb
inc
xorl
adc
rcll
fisubrs
pop
dec
lcall
outsb
je
scas
fisubrs
push
roll
push
fs
xchg
bound
push
in
inc
rclb
sbb
insb
call
mov
add
or
xchg
loope
pop
test
mov
call
sbb
push
pop
sbb
sbb
sbb
ret
lahf
and
into
xchg
rorl
push
aad
pop
stc
cmpsl
cmp
and
outsb
cli
sbb
sahf
pop
jg
aaa
test
mov
leave
adc
testl
mov
inc
cmc
inc
and
sub
repz
add
nop
je
sbb
outsl
clc
xor
lret
cmp
pop
pop
je
xchg
es
inc
movb
std
fldln2
jns
sub
movsb
mov
mov
adcl
mov
xor
aas
fildl
out
push
jl
insl
jle
add
test
shll
addr16
push
or
and
and
imul
and
inc
xlat
fcoml
push
sti
mov
fbstp
cltd
movsb
pop
pop
xchg
movsb
push
ret
push
push
pop
push
sahf
cli
push
je
mov
xchg
lcall
adc
adc
add
inc
jecxz
dec
xor
inc
insl
jns
aaa
daa
sub
in
insl
dec
lret
ret
sti
sub
dec
test
sahf
int3
cmp
inc
roll
xchg
dec
mov
loope
nop
cmpl
sbb
jns
push
imul
cmpsl
adc
jae
push
stos
xor
fidivl
cmp
jo
rcrl
pop
pxor
fsubrl
lcall
fwait
lods
inc
jl
rcll
xchg
push
fmuls
push
orl
loop
mov
mov
das
mov
stos
mov
in
dec
mov
pop
fldl
fisttpl
cmpl
into
repnz
sti
or
push
push
mov
and
mov
push
outsl
repz
fistps
das
push
mov
push
xor
xor
gs
dec
adcl
mov
jb
jno
int3
mov
mov
daa
xchg
push
shl
mov
push
push
stos
cld
scas
xchg
mov
movsl
cltd
add
push
out
es
jbe
loop
push
push
fistpl
sub
or
pusha
and
rclb
aam
roll
add
jle
rcrl
adc
test
pushf
imul
adc
cmp
mov
pop
std
push
popa
cvtps2pd
notb
int
cld
sbb
cmp
out
xor
iret
mov
lea
cmp
inc
or
inc
je
rorb
fisttpll
jg
add
cmp
mov
dec
sbb
out
or
push
scas
mov
or
subb
cmp
pop
sbb
jo
enter
mov
cs
pop
sahf
addr16
jg
add
imul
xchg
movhps
xor
cmp
fdiv
pushw
pop
pop
pop
xor
test
std
loop
mov
pop
mov
pusha
jmp
cli
push
sub
jl
xor
pop
aad
sub
out
lods
dec
test
test
ja
cmp
mov
rclb
ds
xor
loop
dec
loope
inc
dec
not
fwait
addb
xchg
mov
call
out
push
or
loop
lret
loope
aam
fimuls
adcl
aas
test
imul
dec
mov
out
fimull
push
stos
lcall
push
mov
hlt
test
mulb
jnp
jg
mov
sysexit
mov
inc
mov
xchg
cmp
mov
in
aad
js
je
xor
hlt
scas
or
pop
add
mov
add
inc
cmp
push
mov
xor
subb
cmp
scas
sahf
mov
incl
lock
hlt
in
sub
pinsrw
cmp
dec
adcl
jb
cmpsl
push
stos
xlat
call
fadds
mov
pop
cmp
aam
icebp
sarb
xchg
xchg
in
lods
adc
xor
jno
pusha
pop
jno
push
iret
int
jne
pop
js
pop
lods
rcrb
add
or
gs
jnp
xor
xchg
subl
xchg
pop
jno
cmp
jb
fidivl
push
repnz
jb
jbe
jno
sub
std
gs
inc
pop
xchg
cs
test
sahf
sub
insb
rol
sbb
cmp
scas
or
mov
or
pop
push
pop
mov
lock
mov
add
dec
movsl
jp
ja
shrl
mov
jae
dec
pop
mov
push
or
mov
xor
cmpl
mov
scas
push
loop
in
out
lock
jbe
inc
jo
std
and
push
pusha
jno
xor
out
jno
jl
repz
stos
div
insl
mov
xchg
cmc
cmpsb
ret
xchg
inc
mov
or
inc
outsl
out
lret
repnz
mov
xchg
mov
shr
iret
and
nop
cmp
or
mov
cmc
fyl2xp1
cld
insl
mov
sub
lock
and
aaa
pop
fwait
xchg
mov
add
mov
mov
xchg
inc
xor
sahf
hlt
sbb
mov
sub
dec
pop
sub
ret
pop
sbb
cmpsb
ret
or
out
int
lods
cmp
shl
mov
ds
test
dec
test
jne
hlt
push
inc
push
test
in
inc
inc
test
lods
in
and
mov
mov
fcompl
xchg
fbld
xor
xor
cmp
pusha
ds
pop
lods
gs
jmp
outsb
fbld
add
pop
push
push
push
push
bnd
add
dec
xlat
jp
sub
divb
or
xchg
stos
mov
cmp
movsb
pop
and
fsubrl
stc
xchg
jno
adc
decb
inc
shlb
mov
inc
cmpsl
sub
sbb
mov
ret
int
jb
xor
pop
out
adc
sub
dec
ljmp
adc
xchg
inc
mov
add
xor
icebp
cmp
dec
xor
xorl
negb
js
fsub
jno
mov
ss
jnp
adc
mov
in
add
mov
fbstp
push
and
push
out
bound
rcr
popa
xor
lods
test
xlat
add
adc
or
pop
daa
cmpsl
inc
push
and
mov
adc
stc
pusha
shrb
das
mov
sub
cltd
sbb
pop
pop
dec
jp
mov
xor
mov
sti
cmp
cmp
sbb
xchg
push
cmp
xorb
aam
xchg
push
pop
ret
bound
sbb
inc
cmp
mov
sbb
mov
and
mov
push
and
and
adc
icebp
dec
mov
push
hlt
adc
int3
out
out
mov
xor
add
fdivp
lret
gs
mov
jl
xchg
jo
lods
into
cmp
add
es
loopne
pop
mov
lret
popf
sti
addr16
notb
imul
arpl
adc
cld
jmp
jo
dec
test
xor
arpl
and
fists
pop
loopne
outsl
sbb
adc
mov
cmpsl
inc
sub
jg
lret
jl
aad
inc
and
jl
dec
aad
mov
jo
aaa
cmpsl
movsb
push
cmpsl
cli
mov
loopne
sti
sbb
mov
mov
inc
pop
fstps
movsb
fnstsw
jne
cmp
mov
and
xchg
mov
je
mov
inc
mov
inc
cmpb
cld
jge
stc
mov
in
add
scas
dec
xor
testl
ljmp
xchg
repnz
mov
adc
adc
pop
or
or
pop
push
add
jmp
xor
dec
push
dec
pop
xchg
das
les
push
xchg
mov
mov
or
test
lret
xor
das
adc
aam
mov
aas
jbe
cmpsl
lcall
imul
pop
add
adc
and
adc
cmpsb
adc
dec
xchg
sub
cmc
sub
je
int3
out
inc
arpl
cmc
call
shl
add
add
aam
adc
cmp
inc
aas
nop
add
add
add
out
imul
cmp
or
repz
and
and
xchg
push
fcmovnb
ja
nop
int3
bnd
jl
testl
pop
pop
orb
insl
push
cld
arpl
push
sbb
call
mov
adc
je
sub
addr16
leave
push
fcomps
out
xchg
pop
mov
aad
fucomi
adc
aaa
add
test
imul
lea
mov
xchg
fcomi
push
lret
ss
pushf
mov
pop
movsb
push
jmp
pop
sub
ja
les
insl
cmp
and
add
sarl
cmp
sub
mov
inc
mov
pop
cmp
popa
mov
fs
jecxz
inc
dec
aam
aam
inc
mul
sub
test
dec
fcomp
loopne
flds
lret
push
jp
jbe
jle
jae
fdiv
iret
mov
add
aam
aas
mov
fsubrp
cmp
push
iret
adcl
jmp
js
push
pop
in
and
fists
cs
adcl
push
mov
mov
shll
sbbb
jmp
mov
scas
repz
lcall
jae
cmp
jb
fbstp
mov
mov
push
mov
arpl
es
mov
pop
dec
push
push
xchg
das
aas
sub
dec
fisubs
inc
or
rclb
xor
fstpl
sub
add
or
adc
imul
mov
test
popa
imul
out
push
and
pop
add
adc
inc
xchg
cli
iret
dec
mov
addr16
dec
pop
shr
pop
fsts
nop
jl
xchg
mov
enter
mov
aam
mov
out
push
sbb
rol
loop
jae
out
push
jecxz
inc
dec
fcmovnbe
or
icebp
arpl
bts
mov
cwtl
jae
stos
cmpsb
inc
sbb
aam
cmp
inc
add
lds
das
push
mov
pop
xor
addr16
adc
cmpsl
outsb
xor
js
xor
lods
push
xor
lcall
imul
call
ja
fidivs
repz
jbe
jns
sbb
jmp
xor
lahf
jp
push
push
in
push
rol
xorl
xchg
out
xor
or
movsl
mov
pop
adc
leave
loop
lods
and
aas
cltd
outsl
pop
dec
out
jae
test
iret
sbb
jg
lock
push
adc
dec
dec
addr16
sub
lcall
repnz
ljmp
das
dec
lcall
fsubrl
inc
jg
sub
lret
inc
std
mov
sub
aaa
sahf
inc
push
das
push
cld
mov
push
in
push
jae
jl
scas
pop
dec
scas
icebp
popa
shlb
movsb
jae
jbe
inc
xor
sub
sub
mov
fwait
xchg
push
sub
pop
jle
call
call
or
cmp
pop
mov
hlt
adc
cmp
scas
fwait
sbb
sbb
jae
lcall
andl
sbb
test
mov
fdivp
push
cmpsl
jp
sub
into
jnp
ret
icebp
adc
nop
or
loope
add
js
sbbl
pusha
jns
ljmp
adc
arpl
add
mov
cmp
ds
mov
enter
lcall
jno
cmp
adc
push
iret
scas
jns
jge
cltd
or
ljmp
stos
sub
adc
jns
mov
leave
jg
aas
lahf
loopne
dec
add
push
and
data16
loope
xchg
cli
lret
aam
dec
jl
pop
jno
and
sbbb
inc
push
dec
hlt
or
loopne
adc
inc
xchg
pop
aad
jmp
cmp
push
je
lret
mov
cmp
pop
push
push
in
xchg
dec
int
lret
mov
movsl
jno
push
cli
pushf
les
hlt
or
or
cmp
xor
js
shlb
xchg
mov
inc
push
mov
jle
sub
jbe
jp
mov
test
shll
enter
xorb
pop
xchg
jmp
add
adc
jae
jmp
mov
mov
mov
and
jmp
add
cli
dec
lret
cmp
mov
lock
insb
adc
add
je
das
fsubp
je
je
fldl
movsb
movsl
mov
in
divl
imul
test
push
popf
sarb
xor
stc
mov
xchg
or
dec
cli
push
sub
sti
movsb
sub
hlt
cltd
sarl
push
enter
fdivrp
imul
inc
or
ss
loop
or
es
divl
pop
or
subb
cmp
mov
push
or
jecxz
test
cmp
mov
dec
add
jns
arpl
inc
fsubrs
fs
adc
xor
movsl
xor
aaa
popa
notb
loope
and
stc
stos
inc
lret
ss
sbb
fwait
loopne
popa
xor
xchg
mov
fistps
insb
sarl
fildll
xor
mov
xor
aam
bnd
and
cltd
jle
jo
or
test
int
adc
sbb
xchg
adc
loopne
clc
xchg
and
xchg
cmpsl
sub
xchg
inc
xor
pop
andl
lods
lret
push
popf
xchg
push
cmpsb
outsl
mov
fwait
scas
stc
cli
popf
xchg
push
xor
cs
or
jge
xchg
and
sub
push
cld
add
out
push
xchg
inc
cmp
insl
and
jo
jnp
test
cmp
stc
in
cmpsl
sub
bound
pushf
test
je
repnz
das
repz
cmc
ficoml
adc
sbb
jmp
out
dec
icebp
xorl
lock
hlt
pushf
or
iret
rcrb
mov
mov
ret
jg
ja
cmp
cltd
fs
mov
xchg
ss
into
ja,pt
shll
cmc
xchg
sbb
loope
xor
add
push
jp
aam
lock
pop
cmp
dec
jb
xchg
mov
cmp
and
jmp
cmp
cmp
dec
lds
jns
jp
cmp
xchg
dec
jmp
lret
cwtl
adc
sub
or
sbb
add
jns
mov
pop
dec
sbb
outsl
out
mov
mov
jb
sbb
int3
pop
sbb
adc
mov
dec
lahf
adc
gs
sub
mov
dec
add
push
xor
aam
pop
push
sub
popf
aas
mov
out
out
arpl
cmpsb
adc
mov
sub
ss
rclb
or
xchg
test
fstps
sub
dec
test
sbb
lret
sbb
test
fwait
mov
mov
inc
mov
pop
add
inc
cmp
adc
test
xor
cmp
adc
sbb
outsb
adc
shrl
std
scas
sub
pop
dec
xchg
ror
cmpsb
xor
pop
mov
int3
ljmp
into
fsubrl
bound
mov
outsl
loopne
stc
outsl
out
shll
push
push
push
xchg
jp
loop
pop
pop
adc
lods
xchg
adc
ljmp
sub
test
add
and
sbb
icebp
insb
fistpl
mov
push
and
mov
sbb
test
mov
scas
out
outsl
jns
mov
xchg
and
lea
fidivrl
std
push
sbb
mov
inc
sbb
push
dec
shrl
jbe
pop
xor
adc
and
fisubrs
mov
pop
stos
jmp
inc
pop
fisubs
mov
and
lret
imul
inc
das
inc
cltd
and
shl
cmp
jb
jp
push
xor
and
lods
add
scas
incl
insl
xchg
fistpl
popa
hlt
lds
sbb
les
mov
jo
lods
cs
cwtl
dec
out
ret
and
mov
cld
mov
out
pop
stos
dec
andl
or
scas
in
rcrl
and
push
fstpt
mov
mov
shrb
imul
icebp
pop
push
sub
das
mov
pusha
adc
mov
dec
and
sub
adc
rcl
inc
mov
in
xor
mov
pop
or
fnstenv
adc
sbb
push
inc
lods
lahf
outsl
iret
cmc
outsl
mov
cmovo
xchg
vmovaps
leave
xor
xchg
fmuls
stos
mov
adc
dec
fbld
test
adc
cli
fmul
test
push
call
stos
mov
or
lea
xorb
inc
out
subl
in
cmpsl
pop
insl
inc
aaa
mov
aam
fwait
add
jge
jb
pop
shlb
mov
pop
mov
pop
stos
ret
jae
int3
lea
outsb
xor
jnp
hlt
adc
rclb
js
cli
mov
mov
pop
jecxz
push
into
in
inc
push
popa
mov
fwait
xchg
dec
jecxz
sbb
fisttpll
xchg
lcall
and
das
sahf
mov
xor
enter
out
aaa
cmpb
dec
int
xchg
mov
or
in
and
xchg
stos
cmp
test
repz
pop
pop
loopne
jnp
push
loope
repz
mov
lret
jge
popa
cmp
push
subb
subb
stos
and
arpl
inc
push
repz
mov
push
push
cmp
shll
xorb
inc
sbb
shlb
cld
mov
out
and
ss
inc
and
dec
push
mov
pusha
dec
adc
daa
adc
fisttpl
mov
sbb
cmc
aaa
les
push
xor
fnstsw
stc
and
sub
mov
jecxz
sbb
addr16
mov
jo
pop
cmc
and
mov
in
add
test
push
in
mov
xor
and
nop
xlat
mov
jl
xor
cmpsl
loope
and
mov
mov
mov
lea
sub
jnp
sub
xchg
push
es
xchg
je
cmpb
sub
shll
repz
inc
loopne
add
sub
stos
lret
xor
imull
cmpsl
add
jp
cmp
adc
ds
scas
aas
in
or
lahf
ss
orb
das
aaa
or
call
loop
int
movsl
popf
stos
and
pushf
jne
dec
or
js
lret
movsl
xor
addr16
inc
pop
mov
decl
inc
sub
daa
vmovaps
jge
call
out
add
cmp
xchg
jae
and
jp
pop
pop
mov
mov
ss
inc
scas
or
xchg
mov
inc
popa
fs
dec
push
outsb
sbb
mov
lea
mov
xchg
std
scas
std
and
nop
jmp
popf
adc
mov
loopne
push
pop
mov
ret
fwait
into
cs
loope
jne
stos
adc
jnp
test
out
xchg
inc
xchg
and
ja
sub
mov
cmp
push
insl
mov
aam
ljmp
pop
ret
rcpps
jb
aam
inc
sahf
test
pop
testb
cwtl
inc
sub
call
push
jae
add
jbe
pop
add
addb
mov
test
sbb
add
jle
fisubrs
in
inc
int
sbb
lcall
ds
inc
loope
outsb
test
aad
fsubrl
mulb
lds
dec
cltd
shl
cmc
xchg
jecxz
mov
cld
add
ja
daa
lahf
inc
mov
dec
mov
adc
xlat
push
hlt
inc
mov
test
repnz
std
push
jge
iret
mov
jb
xor
mull
xchg
adc
test
adc
or
mov
mov
sbb
jle
xor
aam
jge
adc
and
out
test
das
pusha
fs
and
in
das
imull
or
pop
sbb
xchg
dec
sbb
das
sarb
lahf
dec
cmpsl
or
push
mov
sub
and
cmp
and
notb
mov
push
xor
js
xlat
pop
sbb
and
xor
push
push
mov
push
inc
xlat
jnp
sub
sbb
dec
or
add
inc
inc
mov
xchg
out
dec
int
jl
and
les
imul
pop
dec
lahf
iret
or
and
lods
iret
imul
mov
test
adc
aad
lret
cmp
sub
enter
mov
pop
adc
sub
inc
dec
insb
jne
cmc
stos
andl
cmp
imul
dec
cmp
or
dec
sbb
cli
mov
in
push
push
jb
or
or
aaa
add
add
mov
xor
ljmp
sbb
adc
inc
push
movsb
mov
outsb
and
loope
adc
xchg
dec
decl
sub
inc
mov
mov
push
push
jb
push
data16
dec
adc
add
mov
je,pt
pop
xchg
pop
idivl
movsl
mov
in
leave
movsb
aaa
insl
mov
sub
sub
imul
push
popf
das
lods
jle
cwtl
sbb
xor
repnz
arpl
or
divl
push
ds
inc
pop
lods
lahf
daa
lds
mov
pop
or
push
outsb
push
in
cmp
push
pop
mov
enter
or
push
into
outsl
pop
and
cli
mov
or
shll
pushf
outsl
mov
pop
or
mov
lahf
mov
arpl
jp
and
xchg
shll
popaw
int3
fistl
mov
pusha
inc
arpl
in
and
ret
adc
ret
xor
adc
movsb
mov
lds
ds
scas
xor
in
bound
inc
nop
jns
aaa
mov
or
sbb
add
sarb
inc
xchg
cmp
in
movsb
mov
faddl
xchg
jmp
sbb
mov
sbb
leave
inc
test
stos
std
repnz
lods
or
inc
movsb
inc
imul
inc
sbb
mov
mov
xchg
xor
sub
lcall
pop
inc
mov
enter
adc
dec
inc
pop
inc
mov
lcall
or
andb
popa
mov
rorb
mov
jmp
sub
mov
pop
mov
dec
fldl2t
adc
loopne
daa
mov
mov
mov
cmp
adc
sahf
popf
test
scas
mov
cmpsl
or
rorb
jg
jno
dec
or
mov
inc
mov
int
out
mov
shlb
je
popf
cli
xchg
and
into
stos
faddl
cs
xchg
push
loopne
mov
jge
jl
xor
jmp
movsl
in
test
or
rorl
mov
lock
arpl
mov
pushf
xchg
repnz
imul
in
push
dec
mov
jno
xor
loop
outsb
push
sahf
shl
imul
jmp
pop
sub
stos
cmp
mov
sub
xor
add
fsubrp
fmull
mov
scas
xor
xorb
dec
xchg
fnstsw
enter
cmp
adc
in
icebp
mov
mov
js
inc
mov
cltd
int
jb
lds
jo
xchg
sub
mov
xchg
popf
aad
xchg
push
push
mov
icebp
jp
lret
or
xor
lret
movsb
sub
lret
mov
adc
imul
mov
ret
jno
fisubs
ret
pusha
popf
out
mov
xor
dec
cmp
dec
pop
add
in
inc
sbb
mov
mov
or
adc
daa
ljmp
push
lods
xor
and
cmp
xchg
std
add
int
pusha
push
stc
dec
sub
and
leave
jo
mov
stos
and
pop
sbb
fiadds
flds
fwait
insl
lret
gs
push
shl
fidivl
add
dec
xor
test
lock
push
ret
mov
sbbl
test
loop
popf
and
jno
mov
xchg
add
aas
decb
fwait
adc
mov
mov
sbb
push
test
pushf
mov
mov
pop
hlt
push
test
sbb
adc
in
leave
add
adc
or
mov
out
out
or
shlb
sbb
scas
std
or
xor
mov
divb
ja
xchg
jb
mov
mov
arpl
pushf
aad
mov
jge
inc
mov
pop
fistpl
mov
mov
aas
sub
or
insl
adc
scas
adc
insb
addl
lahf
push
sub
lcall
cli
adc
cld
pop
inc
data16
sbb
jb
mov
or
fisttpll
push
mov
push
mov
pop
in
cmp
sub
ljmp
xor
push
loopne
push
add
stos
push
sub
cmp
fsts
mov
sub
add
pop
repz
stos
sbb
push
clc
cmpb
and
popf
imul
push
lret
xchg
xor
out
dec
jnp
adc
nop
mov
sub
dec
das
popf
testl
imull
filds
cwtl
and
adc
icebp
add
clc
mov
imul
jmp
imul
adc
sbb
sti
std
or
test
xchg
bound
imull
cwtl
iret
or
mov
jnp,pt
rclb
xlat
push
loop
pop
xor
push
mov
xchg
jl
fistps
ficompl
jbe
out
imull
lds
and
cmp
call
pop
or
add
fdivs
repnz
mov
xor
out
movsl
xor
xor
mov
in
enter
jne
ret
inc
in
cmp
or
sbb
or
mov
icebp
push
adc
sbb
cmc
sub
addr16
outsb
sub
and
dec
ret
inc
jo
and
test
or
sub
insl
mov
icebp
sbb
fnstsw
fidivrs
movsl
leave
aam
pop
test
std
mov
dec
sbb
std
fimull
mov
pop
sti
xor
loop
mov
xor
mov
iret
push
add
js
fwait
cmpsl
scas
mov
jns
sarl
mov
jbe
xlat
mov
insl
aaa
jecxz
outsl
inc
pushf
cltd
pop
mov
xchg
rcrl
int3
xor
aas
insb
ljmp
sub
jmp
test
sbb
jmp
inc
cmp
icebp
aaa
sub
push
push
int
aad
inc
or
lahf
or
sar
ret
sbb
cli
sbb
nop
lret
lcall
mov
fsubp
jb
cmpsl
call
or
fs
jnp
adc
push
js
popf
xchg
lock
xchg
aas
cmp
fsubp
sub
xor
pushf
arpl
jno
adc
movl
test
sub
loope
jecxz
cmp
xor
je
and
add
movsl
dec
fdivrs
push
fucomi
das
mov
fsts
lret
xor
inc
not
xlat
clc
inc
sub
pop
xchg
jb
mov
inc
fidivs
push
jno
adc
repz
sub
popf
fs
and
xchg
ficoml
push
pop
adc
dec
test
xor
push
xor
ljmp
xchg
cli
add
dec
pop
push
adc
add
es
into
fiadds
subl
cmp
mov
aad
int
adc
out
jle
mov
outsb
lods
adc
out
push
rclb
aas
je
test
scas
dec
jne
pop
loope
mov
lea
negl
ljmp
push
or
int3
insl
mov
cmpsl
es
aad
adc
or
mov
in
pusha
pop
out
mov
int
xor
jo
lods
int3
push
scas
adc
xor
xchg
popa
ja
pop
outsb
pop
ds
fisubrl
frstpm(287
mov
pop
mov
lahf
sub
add
imul
fistps
push
test
cmpl
adc
imul
in
iret
test
loop
push
fst
nop
mov
jbe
aad
jne
fsub
add
jge
sbb
push
push
adc
cmp
inc
ljmp
dec
ret
push
dec
cli
je
and
insb
and
inc
std
icebp
pop
push
cmp
mov
mov
and
adc
push
shrb
xchg
hlt
gs
inc
mov
xor
pop
mov
or
into
lds
and
sub
in
sub
in
mull
lahf
adc
out
int
arpl
js
loop
cmp
mov
iret
cwtl
mov
mov
loopne
push
sbb
dec
arpl
repnz
adc
pop
or
std
jle
push
xor
sbbl
lret
or
pop
sub
mov
shll
loopne
sub
out
jb
jbe
xchg
cmp
sarl
or
sbbl
xor
xchg
jb
jns
add
mov
push
mov
push
scas
dec
mov
xchg
and
adc
push
xchg
and
outsl
stos
loope
sahf
out
sbb
cmp
xor
sar
jno
mov
lea
clc
sbb
das
mov
loopne
and
fcomps
mov
into
push
sbb
into
call
add
cwtl
mov
xchg
sbb
dec
fidivl
imul
into
or
xlat
test
mov
testb
loop
shlb
sub
sbb
sbb
inc
mov
sub
inc
add
xorb
sahf
leave
nop
test
jne
inc
lret
fistpll
jns
in
dec
repnz
adc
cmc
lea
insl
loope
fadds
xor
lcall
es
and
cmp
jl
pop
pop
daa
jbe
call
xor
testb
inc
xchg
mov
mov
sub
pop
jnp
mov
jl
jecxz
loop
stc
or
cmp
mov
sti
inc
and
sbb
mov
aam
lret
fdivl
add
fst
cmp
mov
aam
jp
enter
jnp
cli
pop
mov
or
aad
sbb
lea
cmp
mov
dec
iret
push
insb
mov
subl
pop
stos
mov
mov
addr16
push
mov
fldcw
scas
sub
push
mov
push
push
sbb
aad
lods
cmp
jg
jl
inc
push
or
mov
push
sub
pushf
icebp
cmpsl
cmp
mov
cwtl
inc
lock
outsb
stos
inc
out
and
fsubl
sbb
xor
mov
movl
pop
lret
xor
or
imull
popa
jae
inc
add
iret
stos
mov
lds
shlb
mov
sub
icebp
dec
mov
push
imul
cmp
clc
sub
pop
push
test
into
call
mov
pushf
push
xor
adc
add
pop
sbb
push
sub
es
out
in
popf
or
dec
xlat
mov
sub
stos
loop
and
popf
imul
cmp
fnstsw
or
cltd
es
mov
lahf
push
loope
outsb
fcoms
repz
push
fbstp
sub
out
cmp
lret
dec
es
rclb
sub
fstps
test
pop
outsl
push
mov
mov
negl
push
mov
lahf
jne
pop
xchg
push
adc
and
mov
sbb
pop
scas
or
mov
dec
cmpsl
xor
jl
adcb
sti
lods
add
push
fcmovnb
adc
mov
mov
psllw
test
mov
rcll
inc
mov
xchg
lea
mov
imul
cli
push
hlt
cmp
add
sub
shl
lods
lahf
movsl
rolb
jl
cld
sbb
sub
das
jbe
outsl
mov
negb
stc
popf
lret
push
nop
inc
or
pop
das
mov
mov
mov
fcmovnu
iret
scas
jo
cmpsb
or
lds
dec
dec
dec
mov
jb
jb
dec
xchg
ljmp
mov
mov
fisttpl
pusha
outsl
push
mov
pop
inc
mov
cld
xor
sar
fimull
je
or
dec
scas
xchg
pop
push
imul
into
in
mov
decb
shl
inc
cmp
std
xchg
shll
popa
add
xchg
jnp
je
sbb
loopne
call
test
sub
mov
scas
cltd
rclb
xor
repnz
sub
mov
bound
inc
pop
shll
jle
fistl
repz
cmpsb
pushf
stc
inc
adc
movsl
and
shlb
add
jb
outsl
lret
shlb
sahf
in
mov
adc
cmp
jae
cmp
loope
adc
das
push
fwait
out
adc
jle
jecxz
das
xor
mov
clc
movsb
imul
cmpsb
add
mov
mov
jmp
jle
sub
pop
repnz
cmpsb
rorl
fildl
cmp
sbb
pushf
fisttps
push
fsubs
or
int3
out
roll
dec
sahf
mov
sti
aam
repz
cmp
cmp
icebp
inc
mov
test
imul
xchg
dec
pop
xchg
inc
jns
push
push
dec
pushf
rolb
cmc
cmp
xchg
pop
xor
push
xchg
push
jne
mov
or
out
icebp
xchg
je
inc
dec
clc
insl
aas
cld
and
jle
cmp
icebp
nop
and
js
cmp
pop
and
push
orb
sarb
cld
add
pop
mov
xor
dec
lods
push
inc
dec
cmpsl
push
stos
adc
push
and
adc
jns
fcoml
xorl
imul
fistpll
shrl
leave
loope
pop
sbb
pop
inc
push
cli
adc
arpl
stos
das
je
lods
cmp
push
push
jno
mov
add
push
dec
test
stos
js
sbb
inc
stc
pop
or
and
mov
jmp
add
mov
sbb
pop
sarb
rclb
push
fwait
cmpl
add
mov
jne
dec
push
add
jge
mov
ret
add
into
int3
sbb
scas
scas
mov
filds
icebp
mov
pop
dec
cmpsl
pop
pop
aas
scas
scas
xor
jmp
xchg
rcl
cmpsb
hlt
loopne
nop
sbb
cltd
popa
shrl
cltd
xchg
fistpll
cmp
pop
inc
cmp
stos
xor
icebp
dec
sbb
add
movsl
and
add
adc
js
repnz
push
sbb
sub
sbb
sarb
push
xchg
dec
and
test
xchg
sub
ja
bound
stos
dec
aad
stos
icebp
mov
cmp
pusha
loope
push
hlt
addr16
in
call
push
jo
inc
mov
dec
loop
imul
jnp
sbb
test
insb
xor
test
addb
stos
mov
aaa
sti
imul
xor
mov
mov
adc
inc
divl
cmp
call
cmp
das
imul
mov
lret
or
or
movsl
mov
jle
loopne
dec
sub
mov
jmp
add
push
test
mov
ret
sbb
ds
ror
arpl
adc
idivl
je
ret
xchg
inc
into
or
cs
xchg
jle
cltd
jl
jmp
dec
inc
aad
dec
call
dec
pop
add
mov
sarl
lods
enter
stc
aas
imul
hlt
mov
push
dec
cmp
repnz
fdivs
je
push
lret
out
mov
adc
out
pop
dec
dec
rcrb
sbbl
cmp
aas
mov
stos
mov
out
inc
lcall
test
dec
mov
inc
xchg
mov
dec
pop
lahf
inc
sti
lds
xor
jp
mov
jb
cltd
jbe
add
pop
call
ljmp
jne
pushf
push
mov
xchg
inc
cld
insb
sti
sti
xor
stc
mov
mov
or
mov
mov
xor
addl
pop
xchg
fiadds
std
movsb
shl
jp
into
fists
lds
and
outsl
mov
fisubs
aad
adc
enter
fcompl
xor
dec
push
and
add
cltd
movsb
sti
sbb
out
aad
adc
add
inc
pop
into
jmp
cwtl
aaa
xchg
jb
mov
das
mov
push
push
ds
add
rcrb
cmp
dec
or
test
jmp
mov
out
jbe
stos
adc
or
subl
mov
lods
arpl
nop
pop
inc
and
ds
push
pusha
push
cld
fs
mov
dec
push
jae
insl
ret
adc
rorl
mov
imul
sub
xchg
or
aaa
aad
push
sbb
push
dec
outsb
inc
ljmp
hlt
and
sbb
ds
nop
xor
pop
sub
mov
rcll
hlt
in
jmp
das
fcmovnbe
hlt
jg
lea
mov
mov
test
xchg
insb
sbb
mov
adc
or
sub
inc
sub
lock
lds
xchg
and
ss
les
xor
repnz
mov
xor
mov
pop
mov
cmp
jo
imul
add
xor
xor
bnd
xchg
cmp
sbb
daa
inc
das
inc
das
jmp
mov
fisubl
ja
mov
push
sbb
cmp
fstpt
and
ficompl
dec
arpl
aas
and
mov
inc
dec
lcall
inc
mov
scas
xchg
dec
xchg
adc
orl
xor
call
js
cwtl
or
icebp
rcll
and
out
hlt
cmp
popa
cmc
scas
xchg
mov
pop
lods
outsl
mov
mov
sti
xchg
cltd
xchg
pop
pop
inc
dec
leave
xchg
lods
pushl
fstl
movntps
adc
je
int
sbb
daa
cmp
xchg
in
nop
imul
mov
add
jno
mov
adc
xor
fs
or
rcl
pop
mov
sub
xchg
pop
mov
mov
rolb
dec
inc
dec
mov
mov
xor
dec
mov
xor
push
jle
pop
cltd
in
or
xchg
mov
add
je
push
dec
and
cmpsl
dec
inc
mov
int3
shrb
mov
and
test
in
jne
ss
and
and
inc
jge
inc
into
ja
sbb
push
or
mov
dec
scas
enter
lcall
cmpsl
dec
mov
insb
lods
or
jne
pop
push
sar
aam
xchg
sbb
lcall
xchg
adc
pop
fisubrs
push
mov
inc
aas
out
repz
jne
test
push
addb
sub
out
adc
cld
dec
gs
mov
adc
dec
xor
xor
lods
rcl
dec
add
mov
inc
pusha
and
dec
xchg
inc
xchg
inc
mov
je
out
add
mov
rorb
test
mov
inc
cmp
xor
jp
jbe
repz
cmp
cli
rolb
xchg
psubd
sarl
repz
xchg
je
push
ret
or
push
cmc
add
sahf
iret
int3
in
nop
jb
pop
pmulhuw
or
adc
ret
jge
and
cmc
cltd
lahf
and
cmpsb
aas
nop
mov
rcrl
aam
mov
xor
cld
arpl
nop
out
sarb
lret
insl
loop
pop
jnp
push
out
in
inc
jle
test
leave
imul
pop
sub
rorl
mov
pop
xchg
jmp
lods
jecxz
xchg
cmpsb
adc
sub
xchg
into
and
sbbl
popf
mov
cmp
ret
bound
push
cmp
dec
dec
or
fildl
fsubrs
aam
daa
lss
repnz
out
and
mov
in
jae
dec
inc
inc
std
js
call
pop
insb
dec
sti
cwtl
pop
fwait
ja
hlt
ja
jnp
ffreep
mov
adcb
mov
mov
xchg
xchg
sarl
mov
push
xor
adc
mov
in
test
or
dec
aam
or
lcall
and
jae
aas
mov
push
mov
jns
or
dec
sub
add
push
loopne
js
jae
xchg
enter
jecxz
sub
nop/reserved
loop
mov
pop
test
fld
mov
fwait
std
movsl
test
pushl
stos
xchg
lock
jge
je
mov
push
js
int
push
ror
mov
pop
cmc
jno
js
xchg
sahf
jmp
test
add
push
ret
cltd
push
pop
mov
fmulp
aaa
cmp
ret
into
addr16
js
cmpsb
mov
out
jne
cmp
xchg
add
jp
je
movsb
xor
jbe
mov
movsl
daa
pop
adcb
das
ja
jmp
xor
pop
jmp
xor
push
out
jp
dec
mov
aas
aas
jp
mov
jne
mov
jo
fidivrl
in
fldcw
mov
adc
jl
pushf
lcall
pop
cwtl
xchg
mov
xor
and
inc
insl
jecxz
repz
push
mov
out
sbbl
enter
jmp
cmp
pop
mov
aad
in
in
add
fs
cs
int
les
and
outsl
jbe
pop
jne
mov
mov
test
ds
mov
mov
xor
scas
imulb
pop
and
ret
push
mov
faddl
stc
or
lods
aaa
js
pop
cmpsb
jge
pop
lret
inc
sbb
xchg
cmpsb
loope
lods
xor
es
fistps
les
mov
int
movsb
dec
test
adc
adc
xchg
sub
xchg
jb
movsl
cmp
mov
and
or
gs
or
lea
pop
adc
or
inc
mov
cmc
mov
push
jae
gs
mov
dec
cwtl
sbb
je
push
pop
xor
test
push
int3
das
sub
xchg
or
sub
sbb
xchg
dec
sub
dec
jno
jecxz
and
dec
push
hlt
orb
dec
das
es
inc
cwtl
push
test
lret
sbb
jnp
into
lret
test
adc
and
lahf
cmp
filds
sbb
cld
push
sti
fisttps
mov
ljmp
test
mov
outsl
pop
lods
or
mov
inc
cmp
ljmp
lcall
push
out
imul
ds
mov
mov
adc
jnp
aam
sbb
addb
push
bound
inc
addr16
push
js
lahf
jmp
adc
loopne
fmul
fs
sbb
pop
dec
daa
pop
cwtl
jmp
or
cmc
push
jb
pusha
cltd
mov
mov
jbe
imul
nop
rclb
dec
jle
xor
test
js
push
in
jnp
imul
addl
fldcw
push
jns
lret
icebp
leave
jmp
scas
mov
xor
loope
test
and
jg
mov
std
outsl
cltd
fs
cwtl
popf
push
or
lods
xchg
xchg
cmp
ret
ret
inc
sti
push
mov
ljmp
jns
cmp
jle
mov
cmp
xor
push
vpaddq
shll
pop
adc
movsl
dec
orl
and
jo
fisubl
jmp
jmp
mov
imul
xor
fsubl
icebp
jb
dec
adc
shlb
sti
sahf
sbb
das
pop
fcoms
rolb
cmc
outsb
mov
imul
shll
hlt
add
adc
add
add
jmp
sbbb
xchg
adc
mov
xlat
popf
pop
subl
fwait
dec
les
out
jle
sub
data16
cwtl
aas
push
pushf
rcrb
mov
nop
sub
repz
cmp
mul
lahf
mov
test
ds
inc
mov
inc
jl
jo
aam
mov
cmc
adc
lahf
stc
popa
inc
popa
add
push
ja
xor
dec
sar
flds
push
popf
fbstp
xchg
pop
dec
lods
jge
dec
andl
les
out
add
nop
cmp
dec
mov
int3
clc
cld
fdivl
cmpsb
mov
inc
mov
sub
push
jae
call
stc
out
xor
out
adc
push
sbb
sbb
jle
cmpsl
mov
add
cmp
lret
mov
addr16
push
mov
xchg
out
sub
cmp
addl
mov
pop
fsubr
cmpb
in
imul
jl
pushf
xlat
xchg
push
sub
xchg
je
in
fisttpll
dec
cwtl
xchg
and
aam
bound
stos
shlb
sub
movsb
sbb
push
push
sbb
adc
int
pop
pop
mov
mov
mov
jo
push
add
mov
xor
xlat
stos
sub
aas
xor
shll
push
mov
call
xlat
cmp
or
adc
jne
or
mov
stos
cwtl
lret
pop
in
jns
sbb
loop
mov
xchg
dec
mov
xchg
push
cmpsl
es
mov
xchg
fdivrs
repz
sbb
ret
cmp
cmc
and
push
and
mov
inc
pop
rcll
mov
and
hlt
jle
pop
add
fistl
sahf
jge
adc
and
imul
shll
and
sub
sbb
sarb
jmp
popa
rolb
int3
sub
cli
xchg
mov
jge
das
jp
adc
xchg
cmp
popf
fdivrl
push
iret
out
jecxz
sub
pop
cmp
jbe
mov
cmpsl
push
inc
in
mov
or
sbb
hlt
popa
sarb
cltd
mov
lea
mov
jp
add
adc
dec
je
pusha
mov
das
mov
pop
add
mov
fistpll
cld
sbb
pop
xchg
mov
in
pop
sub
xor
mov
sub
push
inc
jg
mov
dec
lea
sub
mov
stc
mov
dec
inc
push
jmp
dec
gs
sub
gs
push
dec
sbb
aas
xchg
xlat
or
push
push
rcrb
hlt
add
lock
mov
stos
mov
leave
aaa
jbe
mov
dec
xchg
mov
lock
pushf
mov
jnp
sub
xchg
out
cmpsl
out
inc
sbb
test
fst
lahf
xchg
cmpsl
dec
insb
hlt
sub
cmpsb
jecxz
lcall
sub
imul
int3
xor
lahf
aad
lcall
or
out
out
enter
pop
movsb
addl
dec
mov
push
fistpll
aas
and
mov
cltd
mov
hlt
mov
xchg
inc
adc
sub
mov
add
jmp
cli
or
adc
cmp
popa
jmp
cmpb
dec
loop
popf
mov
shll
push
and
aaa
adc
mov
mov
lcall
fiaddl
push
je
push
mov
jbe
mov
cmp
pop
adc
jbe
mov
lea
mov
pop
jp
out
test
xor
xor
adc
jae,pn
jnp
addr16
sbbb
imul
jg
andl
push
pop
arpl
or
xor
jl
dec
add
adc
mov
out
clc
adc
mov
lret
imul
mov
hlt
out
cmp
xor
push
icebp
aam
jmp
jle
inc
adc
scas
data16
adc
jno
cmp
pushf
mov
mov
pop
jmp
cs
xlat
inc
adc
or
xor
jmp
ss
sbb
jp
push
loopne
pusha
xor
in
inc
shll
pop
ret
adc
add
pushf
push
jmp
dec
mov
dec
jmp
cmc
cld
out
lods
enter
cmp
in
push
scas
mov
int
inc
and
mov
cmp
xor
push
inc
popf
jg
pop
dec
in
fldl
cmp
subl
mov
test
mov
icebp
push
in
leave
pop
insl
cwtl
scas
or
movsb
xor
push
push
gs
push
sbbl
movsb
out
mov
testl
or
fwait
outsl
icebp
mov
jae
mov
fldt
cltd
inc
call
hlt
mov
cltd
mov
pop
add
xor
in
push
and
aaa
jbe
out
cmp
mov
and
and
pop
jp
dec
mov
add
add
popa
sub
and
insl
jbe
sub
pop
mov
clc
loope
rcrb
cmc
mov
pop
in
push
movb
xchg
xchg
or
pop
dec
and
or
sub
sub
pusha
lods
out
xchg
inc
xchg
in
pushf
pop
out
stos
jo
sub
sbb
divb
les
and
scas
xchg
push
dec
mov
in
add
pop
jo
mov
mov
adc
cli
decl
jno
and
enter
je
mov
hlt
shll
pop
mov
dec
test
clc
dec
xchg
and
xor
loop
rcrl
into
mov
idivb
repz
popf
pusha
icebp
mov
push
lretw
pop
imul
sub
xchg
push
inc
jmp
pop
add
test
mov
cmp
jmp
inc
xchg
in
xchg
mov
rorl
adc
in
push
sbb
cld
adc
sbb
add
xchg
je
add
mov
incb
mov
fimuls
inc
mov
popf
or
xchg
cmpsb
mov
dec
pop
lock
fcmovb
cmp
and
cltd
es
mov
sbb
and
aas
pusha
mov
gs
mov
sbb
mov
es
pop
lds
jne
loop
cltd
stos
xchg
out
dec
mov
sbb
cmpl
outsb
test
shrb
push
or
xchg
inc
gs
test
iret
fucomi
jecxz
mov
and
fimull
movsb
int
ds
aaa
cmp
push
das
mov
daa
or
insb
pop
jg
mov
sub
popf
addr16
and
fnstcw
insb
add
addr16
jle
subl
mov
aad
outsl
xor
mov
mov
or
and
and
xor
cli
jl
fisubrs
mov
shl
into
mov
or
add
jnp
xor
aam
lock
mov
xor
dec
enter
adc
jno
mov
shr
xor
sub
dec
cmp
inc
cmp
in
dec
cmp
sti
std
jnp
sahf
jecxz
dec
movsl
mov
sarb
xchg
aaa
arpl
inc
pop
icebp
cmp
clc
lret
loope
adc
data16
arpl
ja
dec
inc
stos
jp
in
outsb
inc
and
mov
xor
test
mov
out
and
in
xor
xchg
xchg
cwtl
dec
dec
inc
ss
je
out
sbb
push
loop
push
outsl
sub
or
and
push
add
adc
repnz
jmp
mov
clc
sbb
push
add
mov
fimull
xchg
stos
sub
cmpsl
leave
jne
mov
jns
sbbb
js,pn
cmp
xchg
add
dec
dec
mov
push
mov
mov
int3
enter
movsb
or
lahf
mov
or
dec
lahf
mov
ljmp
icebp
mov
add
shlb
out
cwtl
movsl
push
in
add
sbb
sahf
sahf
push
sti
in
inc
into
push
pop
sub
or
mov
lea
enter
mov
jg
mov
cmp
inc
or
mov
mov
fsubr
repz
or
jp
out
mov
sub
aam
in
pop
mov
ss
sbb
insb
iret
sbb
ds
fcompl
fisubrl
mov
repz
dec
in
jp
pop
pop
cli
cwtl
mov
ja
jnp
mov
popf
jo,pn
in
fldt
aam
in
add
out
cmp
jns
add
push
mov
testb
lret
rolb
push
dec
fstpl
xchg
rcl
sbb
inc
lcall
inc
aaa
in
inc
enter
lods
dec
mov
pop
dec
aad
jg
inc
arpl
sti
inc
or
nop
movb
lods
add
dec
cltd
dec
sub
fcmovnbe
insl
jne
pop
aaa
xchg
je
sbb
stc
jmp
and
sub
push
adc
in
mov
push
fs
iret
push
mov
xchg
shll
std
push
in
push
adc
push
mov
adcl
and
pop
mov
cltd
jle
xchg
loope
dec
sub
cmpsl
cmp
xor
jl
inc
psubusw
adc
adc
or
and
push
je
pop
repnz
in
push
sub
fistpll
adc
int
popf
mov
roll
push
pop
push
adc
out
test
cmp
push
xor
jns
pop
xor
cmp
push
jle
or
incl
aam
push
lahf
mov
fs
loop
test
mov
dec
sbb
jg
cltd
nop
jo
out
pop
and
das
rorb
ret
xor
popa
test
mov
ficoms
xchg
adcb
repnz
push
rorb
xor
and
jns
dec
insl
inc
je
int
xor
faddl
lods
sarb
mov
rcrl
xchg
mov
fsubrp
dec
add
cltd
jo
sub
cld
adc
jecxz
into
cmpsb
xchg
movsl
xchg
adc
stos
js
cmp
imul
mov
dec
out
jno
shll
lds
sub
movsb
or
cmp
mov
ret
in
pushf
push
xor
push
xor
mov
ljmp
sbb
push
and
mov
add
mov
fdivrl
popf
aaa
jbe
cmp
push
cmp
pop
cmp
adc
push
cmpsb
and
sarb
add
or
enter
mov
fs
fstl
daa
cmpsb
add
mov
xor
push
popf
mov
iret
adc
push
mov
push
cmpsl
push
rcll
pop
xor
push
popf
xorl
test
das
mov
mov
stos
mov
mov
test
int3
mov
les
dec
addb
aad
pop
dec
pop
ljmp
lret
fadds
jo
push
sbb
loopne
add
cmc
icebp
out
sbb
sub
xchg
repz
fdivl
jmp
aaa
jne
in
push
scas
add
shll
inc
popf
mov
inc
and
mov
mov
xchg
mov
mov
add
lds
int3
inc
std
lock
sub
xchg
cs
popf
xorl
cmp
dec
test
out
ljmp
add
outsb
aam
mov
rclb
jecxz
out
add
mov
dec
imul
js
pop
dec
mov
xchg
or
sub
shlb
push
stc
repnz
mov
push
jo
shl
mov
lret
jb
jne
sbb
xchg
scas
shrb
inc
insb
xchg
cmpsb
or
sarl
xchg
dec
aas
cld
pop
jb
je
xor
out
add
mov
push
sub
xchg
and
scas
mov
ret
insl
mov
push
mov
sahf
stc
fimull
inc
pop
sbb
sub
cmp
pop
movsl
cs
dec
inc
mov
lcall
or
adc
sub
pop
ret
adc
pop
ret
rcll
fldcw
into
fdivs
enter
and
cmpsl
jg
stos
pop
cmpsb
ss
xor
fmull
ss
lahf
enter
inc
cltd
and
aad
cmpsl
ret
bound
inc
mov
ljmp
sbbl
stos
loope
sti
fisubrl
or
cltd
out
fsubs
inc
sbb
lret
shlb
xchg
movsb
loopne
jb
push
sbb
out
imul
xchg
insb
jno
xchg
and
shlb
mov
out
out
jae
mov
jmp
and
sbb
sbb
dec
pop
xchg
or
stc
mov
lods
or
mov
xchg
cmp
aam
sub
jo
js
mov
leave
add
push
sahf
inc
cli
mov
sub
movsl
mov
nop
push
adc
pop
cmp
enter
movsb
lret
mov
es
out
lods
aam
cld
negb
dec
aaa
les
shlb
cwtl
lcall
adc
pushf
cld
jg
ja
inc
imul
lods
dec
xor
outsb
pop
je
jnp
inc
in
clc
mov
xchg
pop
push
outsl
imul
xor
and
inc
inc
push
xchg
imul
dec
pusha
out
dec
iret
imul
inc
in
data16
pushf
xlat
fwait
cmp
xchg
dec
xchg
mov
test
mov
xchg
jae
cmpb
mov
shrl
adc
in
fs
dec
call
das
dec
xchg
mov
push
jae
scas
sti
out
icebp
sub
mov
adc
mov
cmp
dec
adc
outsl
sbb
popf
test
aad
jbe
cld
xlat
xor
adc
pause
push
movsb
xor
mov
inc
mov
test
fimull
repz
aaa
and
iret
add
xchg
dec
sbb
jbe
adc
inc
fidivrl
xor
dec
pop
jl
lea
fwait
test
cmpsl
push
rol
popf
and
xchg
and
and
sarl
xchg
xchg
idivl
mov
nop
scas
mov
jecxz
mov
xchg
and
cs
mov
xchg
mov
dec
mov
sbb
adc
shlb
stos
int
sub
cltd
cltd
and
and
testl
insl
lds
push
dec
out
xor
sub
ror
or
cmp
mov
dec
and
push
aad
test
loopne
push
repnz
mov
xchg
outsb
jmp
inc
out
fwait
rcrl
pop
cmp
adc
mov
dec
pop
mov
imul
data16
insb
mov
mov
cmpsl
or
repz
aad
xor
sbb
cmp
insl
into
fdivl
pusha
cmp
loopne
aad
adc
xchg
cli
xchg
xchg
adcb
aam
cmp
lds
lods
sti
jns
pop
push
or
mov
mov
mov
lock
outsb
mov
lds
add
adc
pop
mov
test
lods
cmp
sub
jmp
push
fs
insb
lret
cmp
inc
add
ds
nop
outsb
test
jbe
imul
mov
insl
add
movsl
or
push
push
fdecstp
and
pop
sub
inc
enter
lret
jmp
fsubrp
add
nop
jo
hlt
mov
mov
mull
inc
pop
daa
pop
stos
sub
sub
mov
push
int3
nop
add
mov
jnp
dec
xor
out
arpl
fcoms
push
mov
lock
jmp
and
sub
xchg
sbb
xchg
pushf
sbb
aaa
xorb
or
push
in
aad
icebp
jbe
and
push
dec
mov
outsb
pop
stc
ret
sub
push
rcr
aam
or
rorl
sbb
lock
js
cmp
mov
mov
mov
loopne
cltd
cmp
pushf
mov
fsub
mov
addr16
sahf
mov
push
xchg
inc
xor
ljmp
test
lds
test
push
je
or
sub
jbe
dec
ja
pop
dec
xchg
dec
jge
loope
xchg
sbb
pop
push
inc
shl
loop
aaa
sbb
xchg
mov
push
jnp
push
mov
and
push
add
hlt
mov
out
jns
cmp
pop
xchg
int
mov
xchg
call
movsb
out
ljmp
jg
xchg
sub
pop
int
or
enter
movb
xor
adc
lahf
cs
xchg
repnz
sub
movsl
ds
mov
sbb
repz
fists
xchg
pop
daa
rolb
fcmovu
pop
jmp
dec
test
pop
jmp
mov
outsb
shrl
push
jno
mov
repz
xchg
inc
lret
insl
clc
fs
mov
jb
pusha
xor
ja
out
cmc
das
cmpl
pop
pop
pop
jg
jo
and
sbb
cli
sub
fdivs
xor
loope,pt
fwait
xor
out
mov
lods
fidivrl
and
adcl
icebp
out
add
jmp
mov
dec
mov
imul
sahf
xchg
xchg
in
dec
mov
push
out
scas
sub
add
clc
jne
fiadds
fdivl
ret
xchg
pop
mov
popa
popa
push
mov
pop
mov
push
jb
fwait
test
ljmp
sbb
insb
leave
mov
sub
adc
sti
in
add
fs
inc
incl
std
push
idivl
icebp
std
push
cmp
fcom
jmp
add
pop
cmp
ja
mov
sarb
or
dec
cmp
sar
fisubl
xchg
cli
test
inc
and
mov
adc
xchg
mov
dec
stc
sbb
mov
push
sbb
or
lea
mov
or
scas
aam
lahf
mov
mov
dec
push
insl
jbe
out
pop
pop
and
pop
aad
adc
ja
xchg
or
ljmp
jecxz
outsb
jo
pop
fcoms
mov
into
pop
jl
mov
fstpt
shlb
push
leave
xchg
push
sti
jmp
shll
pusha
lods
add
loope
aad
mov
stos
cmovns
lahf
ret
scas
mov
lods
daa
cmp
cmp
jne
xor
mov
mov
popf
mov
mov
add
orb
pushaw
cld
daa
aam
sar
or
int3
sub
test
shrb
push
cld
roll
in
bound
mov
inc
push
idivb
stos
inc
and
icebp
popf
xchg
movsb
mov
fsts
aaa
or
jmp
hlt
and
cmpsb
out
fstl
cwtl
bound
cmp
les
xchg
bound
xor
movsl
push
insl
scas
cmp
repz
negl
and
or
mov
ret
fcom
mov
arpl
xchg
sbb
cmp
adc
adc
sub
xor
outsb
jle
stos
testb
and
rcrb
push
arpl
wrmsr
pushf
push
lahf
sbb
xchg
rorb
enter
dec
aam
cmc
ja
push
dec
scas
mov
inc
jl
xchg
sub
mov
cmp
jp
xor
mov
xor
mov
fildll
add
test
cmp
xor
adc
push
inc
enter
je
add
stos
mov
sub
xchg
adc
stos
pusha
outsb
or
fidivs
in
test
add
mov
insb
loopne
out
mov
cs
sbb
xor
scas
cmp
notl
inc
pop
sub
and
mov
call
push
push
sbb
mov
repnz
movsb
cmpsl
add
dec
and
or
cmp
jno
outsb
mov
sub
jecxz
cs
fists
es
lods
rorl
dec
enter
outsb
sub
xor
inc
aam
mov
pushf
adc
xchg
ss
push
nop
mov
or
fstpt
add
pop
faddl
hlt
jbe
sub
fwait
aam
test
fidivs
into
pop
test
into
xlat
sbb
push
mov
mov
clc
adc
mov
fidivrl
lock
mov
cltd
xchg
aad
pop
dec
xchg
orb
mov
fistps
rorb
inc
adc
mov
dec
mov
fildll
jne
ret
mov
out
xchg
outsl
push
push
test
lcall
cmp
and
cmp
xchg
mov
push
adc
mov
pop
xchg
dec
aaa
and
je
les
push
stc
dec
and
jo
dec
pop
movsb
sub
orl
add
add
inc
jne
pushf
in
cmp
jg
sbb
inc
dec
jmp
in
cmp
xor
icebp
out
clc
out
jg
jle
dec
sbb
push
inc
in
add
sbb
les
lret
fadds
sbb
inc
mov
xor
pop
xor
ds
test
push
sbb
hlt
pop
lret
pop
add
pop
cltd
cmp
scas
fs
jmp
push
jne
mov
xor
jge
cmpsl
inc
in
push
sbb
ret
xor
out
and
mov
je
add
inc
insb
js
imul
test
xor
loop
scas
sbb
jecxz
adcl
cwtl
nop
lods
sbb
nop
int3
cmc
repnz
shll
sub
sarb
fldl
test
imul
mov
cmp
xchg
and
sbb
lcall
push
xor
outsl
add
dec
push
xchg
stc
test
sahf
push
pop
or
pop
sbb
inc
loop
xor
lods
push
scas
int
addr16
sti
jg
out
cmp
int
insb
jmp
dec
xor
pop
iret
and
mov
jle
sub
sbb
mov
outsl
sahf
ds
test
mov
rolb
jns
push
adc
shl
nop
bound
jmp
adcl
pop
lret
pop
jecxz
bound
stos
js
cmp
cmpsl
sub
and
push
stos
cmp
or
xchg
in
lock
adc
sub
imul
push
xchg
add
jg
push
pop
xor
fisttps
iret
mov
ud0
mov
cmp
lds
xchg
loope
test
ljmp
mov
iretw
aaa
cmp
les
add
popf
inc
push
jp
mov
lret
std
sub
add
je
pop
shll
push
and
and
in
cmp
push
insl
push
sbb
or
xor
test
sub
scas
fcmovb
mov
adc
fstpt
mov
insl
orl
xchg
fwait
sbb
push
sbb
aaa
cmp
mov
fldz
sbb
pop
bound
inc
inc
scas
rcr
scas
push
scas
movsb
mov
adc
imul
inc
shll
mov
lods
test
add
cmp
lahf
clc
sbb
daa
adc
mov
and
shl
dec
xchg
jecxz
sbb
insb
adc
inc
jg
adc
test
dec
fs
inc
jns
rclb
jae
mov
out
xchg
push
lods
inc
xor
sub
inc
repz
sub
push
jmp
insb
shrl
int
mov
mov
and
sub
adc
arpl
mov
dec
mov
pushf
mov
arpl
ds
lret
or
jo
xchg
and
sub
data16
sarb
dec
mov
jno
adc
jg
xor
mov
xchg
lock
iret
jo
outsl
pushf
cmp
cmpsb
dec
in
pop
xor
jb
dec
dec
jp
movsb
adc
xchg
pop
mov
mov
std
andl
sbb
jne
mov
or
sub
and
outsl
mov
or
xor
or
jecxz
scas
mov
mov
mov
jl
mov
js
es
push
call
jl
xchg
orl
adc
int3
and
fcoms
arpl
add
dec
je
push
push
shlb
pop
shrl
fists
dec
sahf
cli
mov
inc
sub
sar
in
daa
stos
cmp
loop
aaa
adc
xchg
les
imul
fisttps
mov
add
fdiv
test
cli
cs
mov
out
mov
dec
xor
lret
int
repz
dec
or
jl
pop
push
repz
decl
mov
dec
ja
cmp
xor
test
ss
divl
mov
out
jmp
insl
nop
add
std
mov
int
icebp
lcall
stc
push
lock
push
andl
add
inc
repz
sbb
cmc
cmc
pop
pop
jbe
fisttpll
mov
int
push
or
push
lods
xor
jb
cmp
inc
shll
dec
xor
scas
inc
andb
rcr
ror
xchg
int3
aad
je
dec
jns
ret
dec
ss
inc
sbb
lock
icebp
fidivrs
das
pop
adc
fwait
insb
mov
iret
adc
out
scas
les
idivb
jns
pop
jno
pop
outsb
lret
test
sbb
sbb
inc
bound
clc
fcoms
shl
in
nop
fisubl
ja
jmp
imul
arpl
fiaddl
dec
roll
in
cmp
pop
sbb
xchg
popf
lods
mov
and
out
xchg
dec
inc
sbbb
push
lret
into
ret
idivb
insl
rolb
inc
mov
in
inc
add
cmp
lret
fildl
sbb
pop
aam
adc
inc
add
mov
push
and
xor
mov
adc
add
dec
add
test
inc
push
jo
mov
mov
rcrl
mov
ds
dec
mov
jns
movsb
pop
jge
pusha
es
test
addb
sbb
iret
push
fdivr
lret
stc
push
mov
lret
jle
pop
xchg
stos
pop
ret
lcall
inc
leave
inc
insb
jae
test
test
mov
lret
mov
mov
push
mov
pop
mov
jmp
outsb
add
out
lea
loope
and
ss
in
pop
cmpsl
cli
ds
shrl
ret
cli
jmp
mov
xor
xchg
cmp
push
mov
popa
int
cmpb
shlb
and
adc
aas
fcoms
icebp
jmp
shrb
push
es
adc
stos
stos
cmpb
mov
push
inc
xchg
pusha
cmp
imul
pusha
add
dec
cmc
ss
push
test
push
mov
adc
fmull
ret
inc
xchg
je
lods
mov
xor
stc
es
jnp
xchg
mov
cmp
aaa
inc
jb
adc
jl
iret
sti
lret
cltd
xchg
hlt
push
add
xchg
adcl
push
sub
and
push
lds
mov
out
int3
in
js
and
mov
or
es
test
mov
sarl
sbb
jae
adc
jmp
mov
pusha
int
adc
out
ret
or
ss
jl
lahf
xchg
lcall
adc
mov
mov
dec
jmp
jecxz
mov
fistpll
sbb
insl
pop
cltd
inc
xchg
pushf
mov
adc
adc
faddp
cld
push
mov
dec
cld
movsl
xor
pusha
insl
sarl
hlt
pop
loop
and
adc
mov
cltd
cmpl
jo
das
push
vzeroupper
adcb
fldl
push
mov
xlat
test
aaa
js
cmp
xchg
cmp
inc
jbe
jmp
add
daa
push
mov
movsl
mov
sbb
xor
cmp
mov
and
scas
pop
ja
and
mov
out
add
add
out
les
pop
test
and
adc
pop
jno
lds
mov
and
and
adc
cmp
in
fs
jnp
push
pop
repnz
sbb
push
icebp
push
dec
mov
adcb
and
jns,pn
jl
add
sub
add
jno
mov
xor
sbb
push
sbb
fldlg2
cmpsl
and
call
je
sbb
push
mov
mov
xchg
cs
lock
lods
aaa
adc
jb
fcmovnu
orb
sub
mov
lods
div
popa
jl
cmc
push
jg
daa
adc
push
lods
mov
lea
push
or
pop
mov
fldenv
and
mov
push
cltd
xlat
add
mov
in
cltd
arpl
adc
hlt
cmp
adc
cmp
shlb
shl
sti
pusha
push
scas
sbb
lahf
fsubs
cltd
fimull
fwait
rcrb
pop
shrb
ret
fldenv
cmpsl
loopne
jae
jnp
enter
fidivl
enter
adc
mov
sub
ficomps
sbb
addl
xor
add
push
jecxz
jb
loope
std
stos
into
outsl
xchg
cmp
insb
inc
loope
adc
jge
out
jmp
insb
pop
andl
or
movsb
std
dec
push
add
jecxz
xor
fmull
test
adc
pop
xor
arpl
movsl
mov
inc
sahf
lods
in
push
ret
mov
jb
iret
sbb
and
nop
rorl
stos
mov
iret
out
pop
mov
lods
cmc
scas
rorb
repnz
outsb
pop
loopne
iret
xchg
pusha
or
pop
in
scas
mov
jb
ja
and
cmpsl
in
dec
cmp
in
in
cmp
test
cmpsb
add
mov
inc
pop
xor
enter
sar
xor
rcrl
or
movl
xchg
xor
aas
adc
cmp
lods
push
es
scas
fwait
pushf
inc
sbb
mov
pop
ss
das
mov
sub
syscall
out
add
push
or
mov
mov
inc
inc
adc
fstl
cmc
lds
dec
cs
punpckhbw
cmp
inc
cmp
popf
std
xor
or
arpl
push
mov
xchg
or
fmuls
aaa
push
cmp
fisubrl
push
mov
cld
int
push
repz
dec
mov
cmpsb
inc
dec
and
ss
incl
mov
xchg
add
push
cmovl
cmp
jbe
xchg
or
xchg
mov
cmpsb
outsl
bound
mov
xor
cmc
scas
pop
repz
adc
mov
bound
inc
andb
loopne
adc
xchg
sub
arpl
dec
sbb
outsb
ds
jns
push
cld
sbb
pop
adc
pusha
mov
push
imul
adc
xchg
mov
inc
sub
ss
adc
or
stos
data16
mov
jnp
jo
out
repz
mov
push
les
leave
jae
xchg
iret
sbb
add
adc
and
or
sbb
cmc
out
mov
mov
rolb
push
cmp
sub
pop
iret
push
popa
sub
rol
mov
lds
cmp
fiadds
scas
dec
ror
cmp
addr16
icebp
add
dec
jbe
jg
inc
adc
ret
add
cmpsl
insl
add
inc
cmp
mov
imul
mov
pop
ljmp
insl
mov
adc
inc
xlat
test
movsb
jne
subb
inc
loopne
arpl
or
rorl
adc
mov
sub
adc
adc
mov
inc
clc
mov
es
mov
ret
lods
movsl
cmpsb
pusha
mov
lret
daa
sub
ja
lret
sub
mov
add
push
and
xor
andb
lcall
pushf
sti
test
fs
inc
insl
arpl
bound
mov
sbb
enter
test
push
mov
lock
je
push
les
xchg
jmp
mov
inc
xchg
repnz
fstpl
add
rolb
int3
cmp
stc
sub
stc
lods
cmc
stc
test
cmp
ss
lods
fstps
xchg
push
test
adc
subb
mov
cmp
ficoml
dec
adc
push
push
stos
inc
je
ds
cvtpi2ps
mov
and
rdtsc
cld
mov
lock
add
test
fisubl
mov
mov
es
add
mov
jns
sbb
lock
movsl
movsb
cld
dec
sbb
mov
sahf
and
out
push
inc
push
fisubrs
fimuls
leave
out
nop
stos
lcall
or
lods
popa
mov
push
push
or
mov
mov
adc
and
pop
sub
subb
fcompl
lea
push
ljmp
sbb
aam
and
jecxz
dec
shrl
gs
inc
fnstcw
test
xor
push
inc
jg
insl
lods
jb
jb
jle
repnz
jae
add
sahf
test
ret
jae
or
lret
rolb
sub
daa
fs
add
cmp
jbe
scas
mov
fldt
shll
pop
test
and
mov
stos
mov
fsubrs
pop
je
ret
cmp
out
push
push
mov
xchg
pop
pop
sub
es
xchg
add
xor
xchg
movsb
pop
loopne
push
cmpsl
sbb
and
sub
dec
xlat
xor
jmp
inc
arpl
mov
add
pop
push
daa
mov
ret
lea
sub
in
sbb
or
ds
fs
mov
mov
and
sub
hlt
sbb
jmp
jle
std
xchg
dec
fs
popa
mov
and
aaa
dec
pop
dec
sbb
out
cmpb
adc
pusha
fs
sbb
iret
cmp
mov
mov
or
cmp
lds
daa
testb
pop
pop
jo
add
or
jnp
sbb
xor
cmpsl
pop
jno
es
fs
sar
lcall
fwait
jns
enter
xlat
arpl
push
adc
adc
add
ljmp
sbb
dec
push
lret
push
in
push
scas
fwait
mov
popf
sbb
pop
push
mov
subl
dec
int3
mov
enter
xorb
or
lcall
out
push
imul
xchg
lods
pop
imul
sbb
add
add
push
mov
xchg
mov
dec
cmp
in
xchg
sub
inc
cld
shlb
loopne
xchg
rcr
push
callw
js
scas
out
mov
or
pop
repnz
js
ficoms
dec
je
inc
sbb
mov
add
xor
mov
fbld
or
repz
push
mov
xor
jecxz
mov
dec
clc
aaa
jae
scas
outsl
sbb
sbb
sahf
aaa
inc
xchg
nop
mov
xchg
pop
or
orb
in
icebp
nop
mov
gs
mov
int
sahf
mov
sbb
outsl
pop
shlb
mov
sub
int
mov
sub
int
das
imul
pop
xor
leave
inc
mov
xchg
cltd
movsb
xor
adc
loopne
les
push
push
stos
test
stc
sbb
cmp
mov
popa
push
es
mov
mov
sub
stos
inc
cmc
ds
fldcw
movsb
ss
push
jbe
push
cs
jbe
repz
daa
cmp
mov
sahf
dec
pop
adcl
bound
add
xchg
mov
into
mov
bound
inc
dec
scas
inc
push
dec
enter
sub
pop
inc
data16
mov
sub
xor
pop
pop
or
mov
adc
jbe
movsl
sbb
pushl
inc
mov
pop
jae
nop
mov
mov
frstor
fnstcw
int
out
xchg
mov
push
xor
inc
mov
imul
std
jns
cld
in
push
stos
sarl
dec
mov
leave
push
xchg
ja
jnp
inc
imul
out
nop
jnp
sbbb
scas
aaa
call
and
jne
sbb
sub
aaa
ret
outsb
psllw
push
mov
pop
push
test
nop
sbb
mov
sub
xor
or
push
mov
fsubrs
cli
imul
popf
cmp
xchg
mov
faddl
adc
test
fdivrl
incl
inc
mov
stos
push
bound
adc
pop
adc
adc
cltd
jb
dec
movsb
push
daa
mov
jno
inc
je
out
jbe
pop
or
test
loope
ret
and
inc
xor
nop
in
lcall
rorl
decb
mov
sti
lock
pusha
push
lods
sub
push
inc
inc
scas
addr16
push
ds
xor
jmp
loope
mov
shl
in
or
inc
jne
aad
pusha
mov
call
push
je
scas
stc
xchg
into
lret
jae
dec
inc
enter
mov
aaa
xor
pop
int3
inc
mov
mov
jb
aaa
mov
jo
xor
or
sub
icebp
pop
subl
inc
das
dec
sub
jl
mulb
mov
mov
divb
mov
mov
mov
stos
xchg
sbb
push
pop
fsubr
es
bound
inc
pushf
ss
jno
xor
mov
in
adc
int
stos
fsubl
xor
lret
fprem1
decb
xchg
mov
jge
mov
shl
jns
mov
push
cmp
sbb
outsb
lcall
movsl
ljmp
cs
push
lock
inc
rcr
clc
push
pusha
sub
fidivs
cmpsl
or
arpl
jns
shr
mov
sarb
loop
jge,pn
loope
or
or
test
xchg
add
in
jmp
adc
pop
out
and
and
jmp
mov
lret
movsb
or
push
mov
jle
cmp
inc
test
add
mov
ja
arpl
lods
mov
adc
xchg
mov
mov
loop
jge
push
out
pop
loop
jl
aas
nop
cmpsb
pushf
jmp
mov
mov
xor
mov
cmpsb
sub
xor
jae
fs
repz
jns
mov
pop
inc
dec
push
shll
adc
cmovo
add
idiv
pop
fsubrs
scas
ficompl
in
pusha
xor
or
in
addb
rolb
adc
cld
pop
ja
sarl
mov
jb
or
out
push
sub
jne
or
push
lret
jb
jne
fs
xlat
shr
or
cltd
out
push
fidivrs
test
pop
outsb
add
es
mov
into
inc
pop
jmp
int
inc
popf
add
jg
out
xlat
mov
stos
and
xor
aas
outsb
xorb
jns
out
sbb
lds
add
bound
jmp
sub
iret
adc
mov
mov
dec
in
data16
pop
popa
dec
mov
daa
pop
push
cmp
loope
jecxz
sub
add
repz
inc
faddp
sub
cmp
adc
xor
enter
and
xor
in
inc
or
mov
add
lds
cmc
mov
add
cmp
icebp
push
cmp
sub
divl
popa
data16
gs
insb
mov
inc
in
dec
jnp
or
sub
clc
aad
imul
jmp
push
mov
and
or
ret
add
rorb
pavgw
jl
ss
je
scas
cmp
js
mov
jmp
inc
sbb
sub
or
je
mov
insl
or
jg
shll
and
shl
mov
out
adcb
movsb
cmp
and
inc
inc
fisubl
jl
cli
pop
fcomps
xchg
pop
pop
mov
pop
mov
repz
and
aam
fs
in
je
add
in
xchg
ret
add
mul
shll
pop
rolb
scas
pop
aaa
clc
ss
cli
aaa
cmp
pushw
lods
lds
outsl
adc
mov
sbb
popa
cltd
arpl
sbb
mov
stos
repz
adc
out
dec
jno
je
cmc
shll
movsb
jns
sub
push
clc
and
pop
xor
inc
test
push
or
mov
mov
mov
cmc
sbb
clc
rolb
adc
fwait
mov
push
inc
in
xchg
test
rcl
leave
and
add
ljmp
mov
out
xor
cmp
pop
xchg
push
xchg
insl
push
dec
loope
adc
or
dec
testl
inc
lahf
or
dec
pop
inc
jo
inc
xor
xorl
mov
jecxz
aam
cmpps
lret
mov
out
xor
xchg
paddb
xor
xchg
lds
pusha
push
mov
stos
fwait
call
ss
test
fisubrs
jle
je
adcb
mov
jecxz
outsl
test
inc
and
mov
push
push
push
sub
les
das
rorl
icebp
in
int3
popf
out
int
andb
push
lcall
sahf
inc
jb
or
adc
sbb
imul
scas
ss
enter
jecxz
dec
lret
adc
push
jp
pop
xchg
repz
add
nopl
xchg
xlat
push
stos
add
or
xor
or
cmpsl
cmp
jp
test
dec
mov
mov
jp
lea
sbb
push
dec
daa
adc
test
xchg
call
dec
ds
push
shlb
jo
inc
test
push
repz
arpl
leave
jle
and
fwait
push
push
imul
test
loop
scas
ret
nop
push
orl
dec
mov
fsubr
inc
or
loopne
pop
out
sti
push
fnsave
add
jl
clc
jne
pop
dec
mov
jle
push
fcmovnb
testl
sub
aas
xchg
add
lods
out
lcall
pop
repnz
sbb
roll
shrb
outsl
push
ljmp
pop
adc
pusha
adc
leave
iret
mov
push
hlt
movsb
stc
add
adc
stos
mov
jnp
mov
fisubrl
imul
xorl
cmc
aaa
xor
cwtl
bnd
mov
invd
cmp
and
xchg
inc
ss
mov
jno
nop
outsl
cmp
stc
or
push
dec
ljmp
add
iret
jbe
pop
arpl
cmp
mov
nop
test
testb
dec
jo
add
cmp
out
jbe
movsb
sar
cmp
adc
mov
sbb
enter
test
mov
out
sub
mov
adcl
nop
cmpb
xchg
dec
push
mov
or
add
cs
in
lods
inc
in
loope
repnz
repz
in
jo
sub
out
inc
lcall
jle
pop
cmp
aas
repnz
adc
jae
repz
jbe
stos
daa
repnz
xor
jge
mov
xor
lock
inc
or
sbb
aam
dec
or
xchg
sbb
sub
out
jns
ret
cltd
ja
jns
sbb
inc
jp
pop
mov
les
out
bound
jle
push
cmp
ja
push
subl
xor
pop
push
ja
pop
das
push
push
dec
aas
testl
or
test
mov
mov
push
adc
push
inc
jns
iret
inc
out
mov
lea
jge
xchg
cmp
push
xor
sbb
cmpsb
xor
add
dec
into
dec
sub
jmp
les
gs
jecxz
sub
jb
shrl
stos
mov
xor
add
cwtl
xor
sbb
aaa
cmp
push
and
inc
loop
out
and
out
inc
mov
bound
and
sub
sarb
leave
ds
mov
jne
mov
jmp
gs
mov
int3
mov
mov
pop
fiadds
push
inc
fs
add
cmp
fisttpll
or
imul
ret
es
fs
add
xchg
mov
mov
insl
cli
call
mov
out
inc
iret
out
aam
jge
add
add
or
into
outsb
xchg
call
push
jb
loope
int3
jb
lcall
add
repnz
xor
stos
xor
aam
js
mov
push
insb
fsts
mov
inc
xlat
loope
pop
dec
cmp
movsb
add
cmpsl
fldenv
mov
lcall
or
enter
loop
popf
mov
mov
rcrl
or
and
cmc
out
push
mov
cmp
fdivp
push
roll
or
fsubl
xchg
psubb
jp
aaa
mov
pop
sub
lret
ret
xor
jle
xchg
cmp
cmp
out
or
mov
add
mov
inc
lret
jl
pop
repz
fwait
xorb
lods
xchg
or
out
push
xor
adc
jle
out
pop
sbb
xchg
adc
out
rcrb
rol
mov
xchg
cwtl
popa
repnz
lcall
sbb
sbb
push
out
dec
dec
inc
inc
pop
std
fs
ss
ficompl
gs
add
jl
pop
and
rcll
dec
lea
cmc
cld
cmp
imul
lds
cli
fnstsw
adc
push
or
sti
inc
xchg
push
xchg
adc
cmc
fsubrl
js
inc
xor
mov
aad
pushf
push
arpl
xorl
das
gs
jb
cmc
outsb
pop
in
repnz
pop
call
out
xchg
cmpl
mov
sub
daa
and
pop
mov
pop
inc
mov
aad
push
insl
push
jmp
js
and
ficomps
pop
jno
jne
pop
pop
xchg
js
or
push
xor
fimuls
mov
fs
jle
or
sti
fs
mov
jnp
sbb
xchg
push
cmp
fisttps
insl
jne
sbb
dec
int
loopne
sbb
adc
fdivrl
pop
xor
mull
sti
add
test
inc
sbb
adc
lods
stc
call
push
icebp
jo
scas
je
sub
subl
sub
outsl
int3
fidivrs
lahf
js
xchg
xchg
jbe
and
and
inc
jbe
out
fisttpll
push
pop
in
sahf
test
and
mov
dec
rclb
mov
push
jne
cmp
pop
test
outsb
adc
int
xchg
loop
call
pop
in
sarb
xor
lods
out
shll
loop
fs
mov
test
sub
out
movsb
sub
sbb
test
imul
or
sub
aas
pop
in
mov
dec
and
or
dec
sbb
inc
jae
push
lods
fldl
stos
push
cld
fxch
daa
je
je
mov
int
test
or
adc
adc
cld
shll
inc
out
and
pop
add
call
je
into
cmp
cmpsl
pop
lcall
sti
jge
dec
arpl
bound
addr16
push
jbe
movsb
ss
test
movsb
add
jb
push
mov
and
jp
dec
rolb
test
inc
mov
repnz
jge
stos
in
jno
dec
push
sub
js
cmc
setns
jle
dec
adc
fisubl
mov
fiaddl
xchg
test
push
push
add
int
cmp
cmc
jnp
das
ret
fiaddl
daa
xchg
jo
scas
dec
test
aad
adc
xor
fldenvs
add
call
int
lret
inc
cmp
pop
pushf
movsb
xchg
inc
and
mov
out
shlb
in
dec
sbb
sbb
bound
stc
sub
popf
and
scas
stos
sub
int
sbb
cmp
mov
fadds
and
mov
inc
push
add
cmovg
sbb
arpl
mov
ljmp
movsb
icebp
insb
cmpb
clc
push
aam
lahf
mov
adc
cmp
push
sarb
sbb
add
inc
shlb
jb
xor
pop
sbb
mov
mov
int
sahf
add
cltd
hlt
inc
xchg
lds
mov
les
sbb
adc
mov
and
jg
and
jp
pusha
lods
xchg
push
and
fistpl
jo
mov
loop
mov
lcall
sub
test
sub
ret
fsubr
push
mov
loop
insb
and
and
jne
jl
mov
mov
jno
and
mov
jno
nop
inc
aaa
pop
call
xchg
lcall
gs
push
push
lcall
test
cmpsl
add
and
dec
fbld
add
cmp
sub
mov
fdivs
push
mov
dec
xor
das
ror
shll
and
nop
scas
inc
orl
jg
in
sar
xorb
push
sub
add
aam
loope
mov
jg
add
icebp
xor
add
test
sbb
xchg
in
vshufpd
sub
movsb
cmpsl
insl
mov
pop
mov
and
inc
push
mov
stc
sbb
sub
mov
or
test
fistpll
dec
sub
mov
aas
shl
add
enter
loopw
xchg
xchg
inc
hlt
nop
add
and
jbe
loop
xchg
test
ljmp
sub
sub
mov
and
test
xor
lcall
psllq
popf
bnd
daa
mov
adc
std
call
das
das
mov
push
sbb
cmpsl
aam
sbb
fdivs
push
jmp
mov
dec
outsb
lret
or
cmp
pop
mov
sbb
sbb
sub
mov
mov
lods
testl
frstor
prefetcht1
xchg
push
mov
pusha
lcall
lret
lret
mov
lods
cmpsl
mov
jb
xor
mov
and
sub
das
mov
mov
bound
jecxz
stos
mov
dec
out
bound
mov
dec
dec
leave
pop
push
imul
shrb
push
icebp
mull
xor
and
mov
mov
js
push
movsl
icebp
aam
jno
cmpsb
and
push
jmp
leave
inc
rorl
sub
pop
jns
sbb
not
repz
cli
adc
lds
sbb
stos
out
fcompl
mov
test
sub
ret
push
jmp
push
addr16
mov
xorl
out
mov
push
or
pop
ret
loop
orb
imul
scas
push
push
and
pop
shll
in
pop
adc
das
les
and
jb
adc
sbb
movsb
popa
clc
mov
iret
mov
jp
mov
jae
or
lods
clc
or
push
fadds
pop
mov
jecxz
xor
stc
rcll
negl
in
dec
les
dec
xchg
push
push
mov
lea
aas
sub
and
inc
xchg
mov
cmpsb
mov
mov
sbb
call
and
jno
pop
dec
fists
mov
adc
push
xor
loope
jge
rcl
dec
scas
shrb
fistpl
jmp
cmp
call
adc
int
jecxz
repnz
popa
cwtl
shll
pushf
add
aas
rorb
test
push
xor
xchg
loope
cmp
stos
ret
jmp
pusha
adcb
xchg
fst
cltd
sub
cs
stos
jle
inc
fwait
sub
jle
xchg
ja
outsb
push
xor
int
pop
aam
in
out
or
mov
inc
and
sarl
out
or
and
dec
fcomip
into
mov
mov
mov
jno
dec
ret
pop
fcompl
test
jl
dec
jge
loop
adc
rorb
out
arpl
leave
mov
push
in
xchg
iret
inc
push
add
inc
and
das
adc
fs
test
ret
and
or
xlat
dec
sub
push
mov
xchg
push
adc
call
jbe
mov
dec
sbbl
pop
cmp
les
mov
imul
leave
lock
fisttpl
int
and
jp
in
test
adc
ds
mov
fcomps
dec
pop
es
push
out
xchg
jns
jae
movsb
ds
test
mov
int
hlt
fadds
xchg
add
cli
inc
sub
push
or
and
jbe
hlt
adc
sub
jp
es
push
sahf
mov
mov
or
and
ret
pushf
or
insb
js
ret
in
fs
add
enter
mov
adc
sbb
out
mov
stos
in
nop
cld
sbb
and
xor
out
das
xchg
cwtl
xchg
add
jo
gs
sub
js
clc
xchg
xchg
cmp
divb
iret
stc
enter
push
add
dec
or
and
xor
mov
push
pop
orb
test
aam
or
mov
stos
push
mov
shrb
fnstenv
adc
shlb
mov
aaa
jmp
test
mov
push
jmp
jmp
push
mov
mov
ja
lcall
nop
xchg
mov
arpl
cmpsb
xor
pop
loopne
test
hlt
addr16
adc
xor
pop
push
jb
mov
adc
movsb
jmp
repz
out
ret
jl
imul
jne
sub
push
rcr
cmpsb
and
aam
lret
mov
xchg
pop
jl
notl
imul
sub
fsubs
lcall
sahf
testb
fcom
sar
loop
jle
lret
add
mov
mov
xor
movl
xchg
ret
pop
repz
push
sti
lcall
mov
fwait
jnp
push
mov
pushf
mov
test
dec
cmpl
inc
dec
pop
aas
jp
inc
fistpll
xor
adc
inc
pop
mov
or
or
jb
out
movsb
sbb
xchg
xchg
jg
sbb
out
sbb
sub
test
and
cmp
loopne
jo
scas
mov
scas
mov
sub
pop
add
gs
xor
mov
inc
or
mov
push
or
adc
xor
xlat
push
mov
into
in
repz
jns
mov
ret
je
fs
jg
fsubs
enter
push
inc
nop
iret
lahf
dec
stos
jae
jecxz
aam
lret
xor
scas
fisttps
xor
or
mov
loopne
int
movsl
out
bound
mov
insl
mov
cmpsl
xor
xor
jbe
sahf
mov
dec
push
jno
fmull
add
imul
call
jb
ficoml
mov
cmp
imul
add
leave
adc
icebp
mov
flds
out
decb
fadds
loope
mov
imul
movsb
inc
jne
or
dec
add
cld
sbb
sbb
test
pop
pusha
inc
mov
jmp
adc
fistpll
test
in
mov
jp
jp
push
fbld
imulb
test
cwtl
cwtl
xor
leave
cmp
ficoml
ss
jl
adc
fisubrl
xchg
pop
fsubrl
cmp
add
pop
aad
xorl
in
insl
shll
push
pushf
cmp
mov
cmp
jae
mov
arpl
mov
mov
in
sub
fwait
xchg
pop
outsb
push
hlt
je
call
or
xor
cmp
test
test
xchg
push
nop
cmpsb
imul
cmp
stc
mov
cmp
push
inc
mov
jle
push
push
icebp
jecxz
cmp
jg
fucom
ret
ss
loopne
ret
cli
insb
leave
pop
xchg
push
imul
push
xlat
push
pushf
jge
test
mov
mov
inc
inc
sub
mov
and
popa
jmp
jo
push
sub
fiaddl
into
pushf
pop
out
shrb
mov
bound
push
sbb
sub
jp
movsl
cmpsl
mov
dec
push
xor
inc
sbb
adc
pop
mov
shrl
adc
sbbb
lea
stos
addl
sub
cmc
movsb
popf
add
jp
mov
inc
pop
xor
xchg
mov
movsb
nop
mov
dec
aam
mov
in
sub
gs
jnp
pop
mov
cmpl
inc
push
xchg
jbe
in
insl
hlt
arpl
xchg
xchg
rolb
ljmp
lods
lret
sti
lea
test
push
clc
xor
test
dec
xchg
mov
jb
jmp
test
mov
jecxz
inc
xchg
ljmp
ret
and
pop
or
pusha
add
bound
addr16
or
mov
ja
bt
xchg
lods
mov
out
cmc
push
dec
or
jb
mov
insb
lods
lock
incl
das
cmp
aaa
xchg
mov
mov
mov
push
hlt
xchg
testl
stc
in
pop
jecxz
xor
or
nop
jg
or
inc
xchg
lds
mov
push
stos
mov
or
outsl
pop
xor
jmp
into
dec
int3
loope
lods
fwait
es
mov
xor
lea
sbb
or
or
fldl
mov
je
mov
jmp
sub
ret
js
cmc
cmp
hlt
cs
ja
push
adc
imul
push
and
hlt
hlt
ljmp
inc
sahf
xor
inc
add
mov
mov
mov
ror
popa
gs
push
xchg
addr16
or
in
sub
xor
aad
insb
iret
fnclex
mov
jae
jbe
or
into
mov
lods
push
cld
lods
sbb
rclb
jae
jmp
out
pop
cmp
imul
cs
jl
cmc
mov
in
pop
jbe
push
xor
sbb
mov
inc
lock
xchg
jo
outsl
movsl
sbb
iret
pop
dec
adc
inc
cmp
jo
rcr
dec
aas
int3
fsubrs
pop
mov
test
lds
je
lds
mov
xor
lret
sti
jbe
loop
pop
xchg
cmp
push
xchg
xchg
pop
iret
or
and
fldcw
push
decl
jp
push
push
adc
pop
aas
hlt
fdivrs
mov
ret
ljmp
rol
cld
aaa
icebp
lret
imul
int3
in
xchg
and
fcompl
ficompl
xor
xchg
push
cltd
ret
push
lds
lods
popf
dec
nop
imul
mov
cltd
mov
adc
sbb
cmpsl
mov
mov
rcrl
cmc
xchg
xor
jle
sbb
ljmp
push
push
fiaddl
jo
lods
and
jb
and
js
adc
pop
xor
xor
mov
test
clc
mov
lods
or
outsb
scas
mov
jne
mov
jle
sub
push
push
enter
pop
jge
and
mov
adcl
jecxz
xor
popa
cmpsb
fnsave
imul
sbb
sub
xchg
pop
ljmp
mov
stos
mov
pop
add
fdivr
mov
in
fstps
scas
bound
das
sub
daa
fimuls
xor
fldenv
inc
lea
mov
arpl
xchg
sbb
aaa
push
adc
dec
pop
and
or
adc
into
pop
mov
jmp
test
call
sbb
add
jno
or
mov
ret
pop
sub
jbe
jecxz
sub
in
mov
dec
jg
dec
lahf
xchg
insl
jge
cmp
and
loopne
inc
imul
ss
ss
lds
inc
stc
iret
adc
in
xor
jns
fists
sarl
dec
jne
imul
mov
xchg
xor
lret
insb
pop
mov
and
adc
or
les
lret
mov
pop
pushf
in
rcr
hlt
or
jb
jp
ljmp
nop
clc
mov
fldl
pop
call
pop
outsb
mov
dec
push
mov
adc
test
dec
xchg
bnd
sbb
dec
and
leave
jmp
aas
inc
or
aad
mov
adc
inc
fimull
dec
mov
jl
ret
es
sti
lds
jne
xlat
insb
repz
jle
jo
leave
add
or
aam
add
inc
xor
lret
push
aaa
mov
mov
mov
dec
jge
fs
in
cmp
sbb
sub
mov
mov
mov
inc
adc
popa
xor
jo
fwait
ret
xchg
ljmp
sti
sbb
fiaddl
scas
adc
mov
or
xchg
jl
mov
jb
mov
push
jecxz
mov
sub
int3
cld
imul
and
loope
outsl
in
pop
test
mov
sbb
inc
xchg
stos
push
add
cwtl
cmp
cmp
paddq
push
add
pop
lcall
out
jp
mov
sahf
jecxz
je
out
sbb
dec
sbb
push
dec
fistpll
ret
movsl
xor
fdivr
push
xchg
je
rcrb
pop
mov
ficoms
xchg
addl
aad
mov
mov
or
xchg
xchg
fstpt
stos
mov
scas
outsb
sbb
sarb
inc
fst
or
pop
mov
test
mov
cmp
pop
xchg
outsb
lea
out
pop
cwtl
dec
std
jno
ljmp
negw
sbb
mov
adc
inc
cmp
scas
lods
fmuls
clc
mov
adcb
add
jne
and
adc
mov
dec
movsl
adc
lcall
push
mov
push
mov
mov
es
mov
xchg
pop
mov
and
subl
fcomps
lret
cmpsb
sbb
lea
cwtl
imul
sub
cmp
repnz
xchg
adc
inc
pop
ds
or
push
cmp
insb
and
pop
pop
mov
pop
dec
das
or
pushl
inc
push
gs
fldenv
pop
sbb
sub
and
mov
lods
les
decl
ljmp
inc
xor
xor
jmp
jecxz
test
xor
mov
fucomi
filds
in
inc
add
pop
cmpsl
cmp
xor
int
or
xchg
ficompl
int
mov
mov
mov
cmc
or
push
aas
fildll
andb
jbe
jns
dec
sbb
sub
mov
jge
sub
cmp
daa
xchg
stos
lret
xor
movl
das
lock
addr16
add
stos
cmpsb
adc
rcl
fildl
sti
lcall
lret
jge
xor
cmpxchg
jg
sti
test
mov
cld
dec
fcmovnu
je
push
cltd
jp
lahf
and
or
push
jno
mov
loopne
dec
pushf
adc
std
fisubrs
cltd
push
jmp
sub
mov
xchg
xor
cmpsl
fnstcw
dec
mov
sahf
pop
cs
inc
cmp
mov
dec
out
sub
inc
mov
idivb
fwait
jno
adc
lcall
cwtl
sbb
mov
sarb
and
cmc
adc
ds
mov
jecxz
test
push
fisttps
jno
ret
and
nop
aad
mov
and
stos
jge
mov
sub
adc
mov
pop
negl
repnz
imul
mov
pop
pop
mov
loop
lods
mov
ror
jae
jae
jb
imul
mov
movl
pop
shlb
inc
js
push
xchg
outsl
cli
lret
cs
std
hlt
xlat
adc
jp
std
jbe
mov
repz
dec
jb
aad
mov
sbb
addr16
jo
bound
adc
xchg
scas
cmpsb
xchg
push
mov
arpl
arpl
pop
push
pop
or
xor
clc
fidivl
mov
push
inc
popf
dec
mov
and
add
lret
pop
int
adc
xor
or
les
adc
or
push
and
rcll
mov
out
mov
cmp
inc
enter
loop
xchg
pop
bound
cmp
cmc
shll
mov
cmp
outsl
pop
pop
adc
mov
inc
inc
or
loope
out
inc
add
pop
enter
call
ret
inc
inc
std
movsb
test
in
mov
sbb
out
mov
add
sbbb
in
jp
dec
mov
popa
lods
inc
hlt
gs
jmp
pusha
insl
outsl
int
cmc
push
mov
int
sub
sarb
fdivrl
pop
add
jo
les
jg
pop
push
repz
in
lds
fs
xchg
xchg
mov
mov
add
fdivs
xchg
lds
add
int
test
fbstp
push
sbb
arpl
push
sub
add
sahf
mov
mov
pushf
or
inc
aad
jns
pop
sahf
scas
mov
dec
std
push
pop
mov
sbb
or
ret
or
test
pushf
ds
adc
jno
xor
scas
mov
xor
jmp
pop
or
cs
xchg
std
inc
lahf
test
xchg
pop
lret
adc
stc
shrl
jb
jl
scas
sbb
push
dec
out
jmp
mov
xchg
inc
or
lods
jmp
popa
shrb
fistpl
loopne
in
out
ja
lcall
pop
call
pop
cwtl
dec
into
cmp
dec
sti
push
cmpsl
sub
mov
xchg
adc
fwait
mov
or
test
jg
cmp
inc
push
xchg
pop
jp
push
sbb
pushf
imul
nop
cmpsl
sub
push
sbb
lahf
nop
aaa
fidivs
hlt
movsl
and
lods
test
int3
insb
jle
sub
cs
dec
sti
inc
add
aam
loopne
pop
xchg
jge
or
insb
and
mov
add
imul
and
outsb
pusha
push
sub
lahf
sub
jne
inc
sbb
xor
or
ret
lods
int3
or
and
sbb
adc
in
std
add
es
roll
push
out
lret
arpl
stos
aam
sbb
stos
mov
clc
and
xchg
push
imul
sub
pop
fstps
xchg
push
divl
loope
mov
cmp
loope
cld
arpl
hlt
mov
out
lds
data16
mov
sub
add
xorb
call
rcrl
jae
jno
sahf
pop
insl
jno
mov
lea
stc
outsl
xchg
cltd
jbe
insb
pop
lds
push
rolb
sub
loopne
pop
push
addb
subb
ret
imul
enter
push
mov
out
xchg
ja
je
and
jno
dec
addl
les
inc
adc
fiaddl
cmpsb
jns
xchg
push
adc
mov
cmpsl
loop,pn
pop
movlps
outsb
mov
inc
push
xchg
in
or
stos
iret
int
mov
sub
popf
mov
jb
jl
fisubl
dec
xchg
nop
hlt
imul
push
pop
inc
fcompl
mov
add
sbbl
lods
jp
insl
in
sub
mov
adc
mov
scas
and
rcrl
inc
fs
aam
xchg
adc
inc
sbb
cmpsl
ss
lret
sbb
xchg
mov
shrl
ss
or
gs
aad
dec
pop
cmp
add
outsl
xor
insl
mov
dec
test
jae
add
insl
sub
sub
sub
fcoml
ss
jnp
outsl
xchg
push
lds
xor
je
pop
and
xchg
dec
push
sbb
and
lds
pop
cmp
aam
das
sub
ficomps
jmp
scas
fstpt
sahf
repz
sahf
jge
lock
add
jo
dec
pop
mov
mov
mov
adcb
and
cmc
rcrb
xchg
mov
inc
enter
lcall
cmpsl
sub
ret
inc
push
insl
lods
out
or
cmp
sub
or
scas
cld
xchg
mov
xchg
adc
inc
adc
mov
clc
inc
mov
dec
xchg
std
xchg
xor
adc
mov
adc
cld
rclb
pop
sahf
push
dec
shrb
gs
push
add
mov
enter
mov
mov
gs
xchg
adc
and
int
and
int
sbb
mov
inc
jne
jg
and
or
jl
mov
xchg
push
inc
ja
jns
adc
push
jmp
icebp
jo
and
ficompl
mov
inc
and
mov
mov
out
mov
out
mov
in
iret
repnz
mov
aas
lret
ds
mov
aas
add
sar
les
adc
or
mov
addr16
mov
mov
subb
pop
test
jmp
xor
pop
sub
outsl
sbbl
xor
out
xchg
bound
and
push
pushf
lods
leave
jmp
lods
ljmp
and
dec
imul
xor
xchg
cs
into
icebp
dec
cli
mov
sub
out
jb
mov
mul
inc
fcom
pushf
jno
js
lock
adc
mov
xor
xor
mov
mov
xchg
push
cmpsl
shrb
sub
fmulp
ret
dec
test
les
push
sbb
mov
inc
arpl
inc
mov
or
dec
out
jns
sub
fwait
inc
outsl
sub
arpl
mov
mov
je
sti
rcr
push
test
push
xchg
xchg
jb
push
mul
mov
and
js
jmp
lea
mov
pop
in
stos
cmpsl
mov
inc
xlat
push
jmp
outsb
in
add
jl
xchg
sub
push
cld
outsl
bound
mov
sub
hlt
dec
pusha
out
cld
divl
cmp
xor
add
pusha
add
pop
fcom
lea
inc
mov
aas
and
pop
cmpsb
xor
and
cmpl
fs
pop
cwtl
add
dec
inc
rcrl
ret
ja
fiadds
aam
xchg
sti
and
or
insl
mov
ret
or
adc
xchg
xor
fisttpll
mov
or
mov
jmp
lods
cld
stc
pop
fsubs
fdivrs
xchg
jnp
cmp
jae
mov
inc
sbb
dec
arpl
lds
cmp
cmpsb
mov
xor
mov
popa
stc
sbb
adc
inc
or
xor
or
lea
jge
dec
in
cltd
lock
fcoml
jecxz
dec
push
mull
xchg
or
jecxz
sub
sub
add
loope
ljmp
adc
or
push
and
xor
xchg
test
hlt
mov
dec
push
shrb
cmp
jp
add
jns
sbb
ret
mov
jge
lcall
je
cmpsb
fmul
lret
cmp
sahf
sar
cwtl
rolb
loope
sbb
loopne
xchg
and
add
inc
call
add
xlat
test
lods
inc
cmp
add
stc
push
das
outsb
inc
out
cmp
add
jecxz
out
dec
stc
pop
mov
std
dec
test
jl
in
mov
negl
ret
pop
inc
mov
add
inc
push
adc
mov
int
pop
mov
cmp
or
mov
fiaddl
mov
dec
push
sbb
popf
lcall
jb
mov
je
mov
in
in
mov
scas
rorb
pop
add
pop
cmpl
add
inc
cmpsl
push
mov
in
jne
bound
xor
stos
sbb
mov
sarl
aad
les
mov
loope
cmp
icebp
jle
push
rcrl
sahf
adc
gs
movsb
inc
adc
xor
insl
xchg
test
jo
xor
ja
mov
pop
cmp
and
xchg
jno
sarl
mov
adc
cli
push
push
adc
push
mov
mov
int
jl
xchg
sbb
pop
rcrb
cmp
push
jbe
jae
jge
inc
fsubs
mov
outsb
pop
mov
mov
ds
lds
insl
mov
mov
mov
xor
mov
daa
leave
pop
push
ret
jae
inc
cmp
jne
das
into
push
pop
xor
insl
shr
popf
or
in
fldt
pusha
test
loope
xor
pop
xlat
add
cltd
and
inc
jns
repnz
fmull
pusha
shrl
test
adc
cmp
test
inc
sub
rclb
push
cmp
test
cmp
ss
mov
pop
into
xchg
cmp
and
pop
js
sub
mov
cmpsl
fcompl
xchg
jne
sti
lcall
add
push
loopne
jp
jmp
insb
fldl
loop
xchg
roll
xor
in
out
ja
and
pop
xchg
fnstenv
cwtl
xchg
in
outsl
fdiv
rorb
add
aad
dec
leave
xor
das
add
cmc
push
push
lds
push
pop
mov
pop
loopne
testb
and
mov
or
pop
adcb
iret
aaa
les
into
cmp
cmp
lods
ds
into
ljmp
push
pop
ror
jno
push
les
sbb
cs
xor
test
shll
enter
xor
arpl
stos
xor
cltd
inc
jl
rcl
cs
jb
add
das
push
test
push
push
in
mov
dec
inc
les
mov
sarb
and
lret
sbb
and
sub
ret
push
cmp
dec
rorl
nop
mov
jmp
std
push
insl
adc
mov
lahf
cmp
inc
add
adc
xchg
insb
cltd
faddp
in
bound
xchg
pop
sub
into
pop
mov
enter
dec
stos
dec
test
aam
in
test
and
mov
jle
out
cmpsl
loop
lcall
jne
cmp
mov
xor
loope
movsb
ljmp
dec
scas
mov
pop
jbe
xchg
pop
pushf
pop
push
mov
pop
mov
fnstenv
sub
jmp
mov
mul
gs
shlb
std
jl
stos
daa
push
mov
pop
or
mov
movsb
lret
cld
and
stos
pop
addl
jae
gs
xor
pop
dec
xchg
cmp
and
mov
fimull
aaa
xchg
pop
jae
fistl
sbb
mov
sbbb
sbb
mov
stos
jb
push
arpl
aam
mov
inc
xor
xor
fmulp
out
cmpsl
daa
fisubs
lods
cmp
in
into
fucom
mov
ret
add
push
mov
push
fimull
sub
xchg
fistpl
fs
psubusw
push
lea
imul
cmp
mov
scas
ds
lods
add
sub
ds
mov
cli
lret
adc
or
into
imul
dec
lea
adc
leave
jp
inc
cmp
fsts
or
out
repz
jns
dec
fs
xchg
aas
jmp
adc
mov
cmc
test
popa
je
inc
sub
lds
inc
cmp
or
out
push
cwtl
shll
lahf
sbb
dec
int
aaa
repnz
xchg
ret
rorb
mov
pop
mov
push
xchg
fwait
je
cmc
lods
out
sbb
push
call
cmpsl
mull
std
leave
push
repz
adc
push
ret
dec
jns
movsl
add
pop
popa
pushf
mov
int3
mov
imulb
std
cmp
lea
rcr
sbb
divb
mov
mov
jne
test
addr16
lret
lea
sub
xchg
negl
dec
adc
flds
es
sbb
mov
aas
lods
mov
sub
frstor
jle
jae
push
mov
push
mov
pop
pop
arpl
test
dec
icebp
leave
lcall
ret
xor
fldt
fwait
call
jae
sti
out
mov
or
mov
stos
push
sub
push
in
push
push
fwait
and
aam
mov
sbbb
outsb
das
inc
mov
push
fsubl
incl
iret
xchg
xor
adc
out
xor
mov
cs
sub
in
mov
mov
fstpl
js
mov
sbb
orb
fmull
jp
mov
test
jnp
xchg
pop
inc
in
mov
jbe
inc
inc
jge
mov
arpl
push
call
mov
adc
sti
and
push
int3
lcall
xlat
sarb
das
push
stos
jno
das
and
loop
xchg
xlat
add
pop
adc
sub
mov
les
adc
and
sbb
adcl
cmove
les
imull
ja
cld
std
aam
sbb
ret
mov
cs
pushl
push
pushf
lahf
cmpxchg
out
std
mov
arpl
dec
jg
mov
jbe
test
xchg
movsb
jmp
std
cmp
js
outsl
sub
push
stc
repz
dec
cmpb
imul
cmp
mov
add
push
mov
dec
imul
xor
adc
sub
dec
test
mov
inc
mov
fucomi
mov
pop
cltd
sbb
or
cmp
mov
xchg
inc
xchg
scas
aam
sub
cmpl
mov
inc
mov
arpl
sbb
mov
gs
add
call
rol
jp
ljmp
pop
mov
int
jbe
inc
cld
jg
add
cwtl
mov
mov
sbb
adc
cmp
xor
fnstenv
in
call
shll
jmp
je
jp
hlt
jge
xor
int
mov
ljmp
mov
daa
mov
sub
and
mov
fs
cwtl
insb
sahf
lret
loopne
pushf
inc
je
add
xchg
shrl
and
out
cmp
in
out
into
jle
addr16
ret
adc
aam
and
jbe
sbb
mov
das
dec
pop
pop
lahf
shrl
xchg
call
out
sub
pop
outsb
adc
xchg
cld
add
sbb
push
dec
repz
mov
mov
pop
lea
add
add
sbb
roll
das
rol
mov
mov
lods
test
sub
mov
jae
push
cld
sbb
daa
lret
pop
test
xchg
mov
cs
xchg
pop
push
cmc
jge
rorb
or
push
cld
mov
pop
inc
or
ljmp
pop
ret
xchg
xchg
ja
fisubrl
xchg
xor
pop
mov
mov
fcoml
cs
mov
or
pop
and
pop
sub
xchg
xor
fs
xchg
call
xor
jae
aaa
mov
xchg
jmp
pop
cmp
in
lock
data16
pop
jmp
dec
dec
mov
stc
ss
ret
pop
fdivrs
in
fwait
jno
nop
sub
aam
adc
jnp
sahf
mov
cmp
sti
or
mov
das
mull
sar
mov
mov
push
jo
and
jecxz
xor
mov
inc
fs
popa
jge
aas
fst
xlat
loopne
test
adc
mov
pop
mov
je
stos
push
adc
lods
pop
add
imul
mov
out
lods
inc
mov
cmp
orl
pop
dec
test
cmp
pushf
inc
repnz
movsl
and
push
cmp
shr
mov
pop
xlat
pop
mov
mov
ljmp
push
jno
inc
sti
nop
bound
icebp
cmp
adcl
add
cmp
xor
mov
lret
pop
add
cltd
loopne
call
xchg
fistps
gs
faddl
scas
loope
xchg
sbb
pop
in
ds
mov
ficompl
rorb
mov
jae
cmpsb
lret
ljmp
mov
sub
sbb
cli
stos
out
arpl
pop
aam
mov
scas
fisttpll
loop
cmp
mov
cmpsl
push
int
sbb
loope
lret
cmpsl
scas
cmp
inc
mov
dec
cmc
add
mov
aas
pop
shl
mov
and
sbb
mov
fnstsw
in
add
push
and
sbb
aam
cld
andl
cmc
mov
mov
pusha
js
jns
mov
adc
pusha
sub
ds
add
or
push
mov
or
icebp
fsub
out
stos
jae
or
mov
das
add
jnp
lods
push
jl
frstor
cli
mov
shr
and
and
adc
xchg
jae
fisubl
mov
outsl
mov
int3
incb
xor
pop
stos
ficoms
add
push
fs
loope
pop
mov
dec
pusha
sbb
mov
dec
mov
movsb
iret
jecxz
or
jecxz
ss
inc
cmpsl
leave
jp
cmpsl
insl
inc
into
repnz
adc
and
or
dec
or
add
mov
jne
lods
jle
pushf
pusha
jo
push
loope
test
test
adc
inc
mov
out
sbb
sub
in
or
xchg
jns
lahf
mov
pop
clc
push
aad
daa
mov
cmp
or
pop
arpl
dec
mov
pop
stos
dec
pop
cmp
xchg
and
mov
rclb
add
inc
in
ss
hlt
mov
out
xchg
add
adc
sbb
jmp
jns
pop
xchg
loopne
mov
pop
into
les
ss
stos
ss
sub
pop
ret
or
xchg
sbb
rep
lods
sub
jecxz
pop
testb
int
jno
jmp
cld
cltd
insb
js
jae
jbe
sub
jo
pop
jge
lret
notl
aad
xchg
ds
test
adc
int3
push
push
mov
cmpsb
nop
das
push
xchg
sbb
push
cmp
cs
sub
fxch
pop
inc
clc
inc
gs
outsb
or
in
mov
in
push
test
mov
pop
push
pop
pop
mov
cmpsl
pop
test
fistl
lods
add
aas
xchg
add
adc
or
sbb
jo
popa
sbbb
scas
jl
scas
and
cs
inc
mov
or
push
pop
add
mov
or
add
jmp
pop
push
push
pop
mov
mov
adc
fcmovb
xchg
add
add
jae
movsb
mov
out
sahf
mov
outsb
jg
mov
mov
push
jb
jecxz
xchg
jge
repnz
jns
imul
lea
mov
xor
and
stos
push
arpl
sbb
stos
mov
inc
push
jae
daa
cmpb
push
mov
jg
xor
popf
and
out
dec
aad
sbb
jb
inc
loope
popa
mov
jne
outsb
dec
popa
insl
jno
jl
ret
insl
repnz
mul
push
loop
inc
daa
dec
mul
xchg
bound
mov
aad
repz
lcall
xchg
mov
or
ficoml
lods
scas
fwait
add
mov
xor
jmp
xor
and
sahf
out
ret
sub
mov
and
sub
pushf
lcall
into
pop
dec
insb
cmpsb
cmp
mov
jnp
loop
pop
adc
and
jno
xor
mov
jo
jno
in
das
daa
dec
pop
es
loopne
pop
jb
mov
xor
jbe
idivl
sbb
cmp
mov
scas
cmp
icebp
xchg
lods
push
ljmp
fucomi
lds
and
xchg
xor
add
cmp
insb
bound
mov
icebp
push
push
mov
jle
subb
popf
sub
push
test
pop
jne
imul
push
and
out
lods
mov
mov
or
xchg
and
std
cmpsl
pusha
and
dec
xor
lahf
jl
adc
gs
lods
mov
mov
jg
and
jo
es
mov
outsb
das
mov
sub
pusha
rcrb
or
push
cmp
mov
imul
cmc
jge
jne
jnp
sti
sti
push
cli
in
les
push
cltd
int
les
dec
movsb
add
jno
xor
push
out
xor
mov
add
rcrb
cwtl
pop
enter
inc
mov
push
cld
lret
xchg
lds
jl
insl
fsts
iret
clc
xor
in
mov
add
ret
jno
dec
cmpsl
inc
icebp
out
test
lret
ret
out
imul
cmp
inc
pop
div
movsb
addb
pop
pop
mov
cmpsl
loope
mov
aad
sub
out
scas
mov
add
jge
push
sahf
xchg
dec
mov
fwait
push
shrb
popa
and
pop
xchg
mov
push
mov
lcall
pop
push
push
ss
jp
add
sub
mov
push
scas
or
stos
mov
xchg
adc
mov
pop
into
ds
jbe
fistps
popa
xchg
pop
scas
shlb
inc
inc
push
fs
aad
xchg
test
add
dec
or
cmp
sbb
push
push
adc
dec
daa
fwait
arpl
cs
ret
xor
roll
pop
rcrl
cmp
sbb
jne
jbe
rorb
mov
popa
or
fsincos
sbb
lret
iret
jle
push
push
adc
scas
or
das
sti
push
add
int
mov
dec
divl
push
add
mov
cmp
cld
shlb
mov
mov
lock
adc
pop
lahf
shll
call
test
add
inc
push
repz
mov
fs
popf
out
rolb
xchg
mov
mov
push
or
push
or
imul
aad
dec
xchg
clc
sub
sbb
add
xchg
or
loope
fsubs
jnp
cs
ror
int3
std
arpl
inc
imul
repz
pop
fsubrs
dec
insb
aaa
fldt
mov
adc
xchg
imull
pop
jge
in
leave
push
pop
push
dec
dec
pop
add
mov
mov
push
add
adc
mov
mov
jp
xor
xchg
push
dec
mov
xchg
jl
loop
cmp
test
lods
sub
mov
mov
mov
outsl
xlat
mov
dec
mov
dec
and
mov
test
pop
xlat
insb
lret
push
push
fs
bound
cmp
add
test
jb
punpcklbw
mov
sub
shll
fmull
push
dec
lret
pop
hlt
pop
stc
or
add
xchg
cmpsb
fsubp
out
test
inc
pushf
mov
dec
and
icebp
mov
inc
lret
mulb
jne
les
cltd
inc
icebp
or
dec
sub
insb
and
inc
lods
cmp
iret
xchg
mov
inc
push
or
dec
fwait
mov
adc
sbb
clc
mov
sub
mov
loope
dec
stos
aas
push
scas
pop
aas
push
sub
fldcw
xchg
jno
push
or
in
rol
dec
outsl
and
mov
sub
and
imul
test
inc
addl
pop
fsts
dec
cli
sub
inc
imul
jne
sbb
mov
push
xor
stos
fwait
lret
cld
or
add
leave
test
dec
or
cli
insl
adc
jbe
mov
jno
mov
mov
mov
jg
inc
push
nop
cld
repz
jae
mov
or
jno
imul
mov
jl
out
mov
sarb
shrb
in
jg
inc
testb
cli
mov
nop
xchg
fbstp
call
pusha
mov
sbb
ja
dec
mov
repnz
and
lret
insb
cmp
sub
mov
adc
es
insl
test
scas
adc
out
sub
or
mov
xchg
dec
inc
aaa
jbe
lret
jmp
mov
roll
stos
pop
sub
loope
sbb
test
pop
daa
vmread
shll
push
add
fwait
adc
inc
and
jb
popa
add
into
mov
mov
fildll
cmp
lret
adc
mov
pop
scas
push
test
xchg
sub
jb
iret
pop
sub
cld
dec
mov
mov
push
sub
aas
adc
push
js
test
dec
jg
add
es
mov
imul
repnz
lahf
inc
dec
adc
pop
pop
sub
js
ret
sti
in
sub
adc
pop
out
loopne
or
jae
jns
movsb
adc
xorb
add
xlat
or
icebp
cmp
sbb
cmpsb
cli
mov
in
mov
push
lock
or
imul
and
pop
imul
push
sbb
xor
or
cltd
cmp
pop
daa
pop
xchg
inc
outsb
fdivrs
adc
lds
xchg
in
dec
in
push
icebp
cltd
lock
push
dec
ljmp
xor
aam
loope
or
lea
dec
pop
pop
lds
ljmp
mov
lods
adcb
adc
fsubl
mov
xchg
sub
lcall
or
test
push
sbb
pop
movsl
inc
ja
gs
aam
loopne
mov
insl
mov
cmpsl
adc
jne
adc
aad
aam
fnstenv
out
sub
hlt
test
jl
jo
adc
lock
scas
js
popa
scas
repz
and
or
xor
jl
inc
adc
std
mov
jle
mov
inc
pop
das
inc
lock
or
es
dec
adc
pop
add
adc
pop
dec
call
push
fimuls
lock
aad
push
std
fidivs
cmpsl
sbb
mov
mov
cmpsl
cwtl
or
shl
stc
mov
lcall
ss
pop
fmuls
hlt
mov
in
jecxz
pop
jno
inc
loopne
adc
adc
mov
outsl
jecxz
sub
dec
sub
mov
fidivs
mov
inc
mov
mov
fwait
dec
mov
and
pop
adc
jecxz
ret
inc
iret
lock
cmpsl
and
or
and
sub
cli
stos
dec
mov
aas
dec
mul
and
push
cmp
adc
mov
aam
cld
sbb
pop
aam
and
cld
sbb
push
xor
movl
mov
in
jmp
nop
cmpsb
ja
cmp
cs
mov
shl
lcall
ficomps
xchg
lods
xchg
insl
movsl
ss
sti
clc
push
rclb
add
dec
xchg
or
push
rolb
pop
repz
add
sub
ret
dec
mov
jb
jg
lods
pop
imul
sarb
gs
mov
jp
inc
outsb
stos
cmp
jecxz
add
inc
pop
imul
xor
mov
fcoml
pop
xor
inc
cmpsb
xchg
add
mov
out
mov
bound
xor
add
out
pushf
ljmp
adc
dec
xchg
mov
xchg
push
xchg
adc
adc
das
repnz
mov
adc
cmp
fcmovu
loop
loopne
sub
addl
lcall
xchg
out
pop
hlt
out
sbb
mov
pop
push
enter
pop
push
pop
push
cltd
sti
les
jb
or
adc
lcall
cmp
and
xlat
and
cmpsl
sub
sub
rcrb
scas
push
sbb
xor
mov
sub
and
mov
xor
push
imul
out
inc
cmp
dec
ret
xchg
adc
cmpsl
xor
repnz
out
jecxz
mov
in
mov
jle
mov
mov
loopne
into
lret
pop
lds
push
lret
cli
imul
int
in
mov
dec
lret
aas
daa
xor
jae
push
fildl
inc
jl
sahf
jle
xchg
and
arpl
out
dec
inc
cmp
mov
mov
outsl
mov
push
jno
loopne
call
xchg
mov
push
js
push
dec
mov
jecxz
pop
cmp
cmp
mov
jl
orl
mov
jge
sub
test
and
jae
cmp
mov
repnz
pop
das
jo
jnp
sbb
pop
push
jg
addb
sbb
pop
lds
cli
xlat
dec
push
in
cmp
pop
lahf
incb
jnp
sbb
mov
sub
leave
outsb
les
push
test
sbb
lea
js
mov
hlt
pop
mov
movsb
loop
rol
mov
push
das
out
and
insl
inc
into
jns
xchg
scas
out
call
mov
das
sbb
pop
sub
pop
pop
nop
xchg
push
subl
nop
jl
jp
testb
jl
and
dec
ror
cmp
add
fcmovu
movsl
adc
mov
xlat
xchg
mov
xor
cld
testl
push
adc
or
add
lea
das
lcall
cwtl
ljmp
fisubrs
add
lods
mov
mov
loopne
outsb
or
fimull
hlt
in
test
fucom
add
test
mov
pop
push
add
xlat
outsl
jg
push
cmc
enter
add
js
lahf
mov
mov
cwtl
dec
int
dec
push
int
in
inc
jb
in
mov
rcrb
sbb
jmp
ret
popf
stc
mov
ffreep
lock
sub
jg
test
pop
mov
mov
sub
mov
repz
sub
dec
jmp
inc
xchg
inc
nop
mov
or
aaa
inc
or
ret
sbb
jns
outsl
mov
push
insb
inc
filds
mov
fisubrl
fcompl
mov
and
jg
aad
mov
xor
lock
and
cmp
dec
shrl
push
loopne
popa
jmp
test
push
pop
push
and
out
outsl
jecxz
out
or
mov
mov
jo
mov
mov
lahf
push
negb
ret
inc
xlat
xor
lods
jl
adc
call
mov
push
xchg
outsl
pop
mov
cmp
in
hlt
imul
testl
popf
into
sub
bound
xchg
fiaddl
lahf
pop
mov
std
and
cmc
aas
push
frstor
inc
ss
sbb
cs
into
mov
mov
push
jnp
ss
push
notb
jmp
jmp
mov
lods
imul
xchg
push
cli
pop
or
mov
xchg
mov
lods
jb
inc
rorb
es
rcll
in
adc
cmp
sbb
cmpsb
and
xor
adc
call
loop
addr16
mov
cltd
xchg
incl
insb
inc
addl
fdivs
push
jae
mov
movsl
jecxz
orb
shl
enter
lock
hlt
je
dec
inc
out
inc
lret
cmc
mov
sbb
mov
es
jle
adc
and
dec
xchg
and
outsb
jns
jnp
or
cmpsb
or
pop
sub
adc
loope
xor
cmp
lret
lret
mov
nop
cmp
push
aas
cmp
fstpl
stos
cmc
mov
pop
or
dec
test
push
mov
insb
sub
lahf
adc
cwtl
popa
sbbl
mov
jg
jecxz
nop
xor
inc
sarb
add
pop
or
cmp
pop
mov
repz
and
sbb
adc
pop
jmp
xchg
rcll
mov
adc
subl
push
and
push
push
dec
cmp
cs
push
jl
mov
and
inc
xchg
mov
test
cwtl
adc
xchg
push
jge
aas
daa
xchg
cmpsb
lret
or
popf
neg
mov
cmp
fsubp
pop
mov
add
sbb
cmp
mov
mov
cltd
jle
or
outsb
ja
leave
add
movsb
push
mov
adc
add
dec
dec
outsb
adcb
jbe
xchg
xor
xchg
loopne
xor
shlb
iret
mov
inc
sbb
cmpb
cmp
daa
ret
fisubl
lea
hlt
fidivrs
xchg
sub
in
mov
add
mov
mov
pop
cld
rcrl
fisubs
xchg
inc
mov
shll
jecxz
mov
pop
xchg
jmp
sbb
or
mov
adc
sbb
shll
mov
imull
out
loopne
sbb
es
mov
gs
cltd
mov
jg
notl
adc
test
test
icebp
or
fwait
and
aaa
push
cmc
mov
pop
mov
mov
inc
jae
out
and
mov
or
sbb
or
cli
cwtl
cwtl
cwtl
jns
nop
out
fistpll
mov
sbb
hlt
test
and
sub
xchg
push
in
lret
pushf
aaa
outsb
sub
stc
push
popa
jg
mov
mov
xchg
pop
subb
rcr
lcall
jl
lret
dec
jne
pop
push
movsb
pushfw
add
mov
mov
je
scas
aas
pop
sbb
xor
push
pop
push
cmc
jl
out
cmp
subl
xchg
data16
ret
bound
in
lock
or
push
in
mov
sbb
rol
cmp
stos
dec
aas
lds
sub
mov
inc
push
push
int
in
out
adc
insb
add
testl
inc
movsl
mov
enter
mov
inc
clc
cld
xor
mov
jp
test
or
das
lret
shll
imul
sbb
jns
mov
sub
lea
sahf
mov
pop
stos
xchg
leave
imul
jmp
sbb
xor
stos
inc
mov
orl
add
adcl
dec
and
out
mov
and
sbb
cwtl
test
sti
or
cmpsb
or
loop
sbb
push
fwait
pop
add
push
fbld
mov
mov
rcr
jp
mov
push
sbb
mov
jnp,pn
jge
out
jo
adc
jmp
inc
jns
repnz
inc
inc
push
aam
xor
sbb
push
xchg
inc
test
mov
movb
loop
jb
dec
lahf
jmp
push
mov
mov
outsl
push
sbbb
loope
cmpsl
xlat
nop
push
adc
sbb
xchg
in
mov
inc
clc
out
mov
mov
push
bound
mov
enter
insl
inc
das
imul
add
frstor
aas
sbb
cwtl
push
sbb
inc
cmpsb
stos
daa
mov
mov
dec
movb
call
loopne
jne
dec
mov
test
mov
iret
iret
repz
xor
je
out
je
into
push
loop
cs
sbb
mov
adc
pusha
add
movsl
test
pop
outsb
add
in
nop
out
dec
inc
jns
jg
mov
jg
mov
cltd
fdivp
cmp
mov
cmpsl
and
xchg
dec
jno
leave
jmp
mov
rolb
into
push
xchg
adcb
fcompl
imul
adc
and
insl
imull
push
test
pop
mov
push
insl
push
sbbb
push
or
cmp
mov
pop
cmp
pop
pop
mov
xchg
push
enter
dec
inc
and
mov
cmpsb
arpl
or
and
xchg
arpl
adc
mov
sahf
repnz
dec
mov
or
xor
lret
sub
loop
lds
sbb
dec
fcoml
ret
mov
push
xor
jne
pop
jl
call
loope
pop
jmp
mov
and
cs
jno
sub
xorb
sbb
jb
scas
aad
gs
orl
divb
inc
fs
cmp
pop
or
mov
and
xorb
lret
push
dec
pushf
emms
movsb
leave
leave
mov
mov
negb
js
scas
sub
dec
in
sub
lods
jmp
xchg
popf
add
inc
sarb
xchg
dec
mov
hlt
xchg
adc
or
les
inc
cmpsb
xchg
pop
push
pop
push
push
das
pop
mov
add
sti
pop
xor
xchg
cmp
sbb
push
sub
and
and
aad
test
stc
inc
push
cmpsb
fwait
shl
xchg
mov
mov
jle
test
xor
mov
das
insl
cld
stos
lods
cli
sbb
mov
int
add
popf
imul
clc
jbe
mov
sbb
jno
add
imul
sbb
repnz
dec
mov
cmp
sbb
dec
jo
js
cli
add
inc
fildl
or
lds
jl
adc
push
mov
mov
loope
adc
or
jmp
popa
add
adc
mov
fcomps
cmpsl
fdivrs
loop
test
inc
push
sbb
fnstcw
scas
xor
adc
aam
xlat
sbb
push
xor
stos
mov
mov
fisttpll
loope
insl
xor
cwtl
jmp
movsl
or
and
subb
stc
lret
mov
or
imul
sahf
sbb
pop
lret
mov
data16
imul
mov
std
movsl
fmulp
popf
shrl
mov
sti
dec
aam
shrl
push
dec
jb
pop
ljmp
xchg
sub
push
call
test
icebp
inc
fisubrs
and
sbb
xor
ret
popf
out
pop
push
std
call
pop
loopne
xor
shrb
cmp
lret
push
les
push
sub
push
pop
rcr
adc
mov
ret
sub
lods
aas
jge
fildll
and
hlt
pushf
aad
and
jns
pop
cmpsb
xorl
mov
into
pop
out
add
xchg
mov
dec
lods
jl
cs
imul
xor
mov
aaa
in
std
sti
mov
and
xchg
xor
or
seto
lret
pop
cmp
iret
insb
lds
push
cmc
fsubrs
mov
mov
push
xchg
inc
xor
xor
adc
xor
pop
and
rcrb
pop
sbb
inc
jecxz
sbb
pop
or
xor
push
out
movsl
dec
int
fcompl
int
jo
je
xchg
mov
fcomps
cs
cmpsl
push
inc
lods
mov
fisubl
lahf
jno
insb
sbb
add
outsl
mov
bound
cmp
dec
in
sbb
dec
ficoml
adc
out
rol
movsb
out
in
adc
gs
call
cmc
or
inc
sub
jmp
jno
push
cs
or
pop
ds
mov
mov
divb
les
adc
add
pop
fsubl
add
call
pop
les
test
or
test
js
les
adc
jo
jns
xchg
mov
xchg
fdivrp
les
ja
ds
repz
jecxz
ja
mov
and
imul
iret
jno
fs
and
lret
pusha
iret
mov
testb
sbb
fwait
in
pop
and
js
xchg
jmp
pop
fbstp
repz
lds
mov
xor
dec
enter
addr16
lcall
jmp
lds
xchg
adc
imul
sbb
adc
jl
mov
sbb
mov
mov
inc
test
inc
fld
jnp
mov
push
mov
add
lret
cmp
dec
xor
inc
pushf
out
xor
lcall
dec
sub
cmp
jns
jb
mov
push
cltd
roll
cmp
jmp
daa
inc
nop
in
or
and
rcrb
xchg
jecxz
jle
icebp
cltd
xor
aas
fnstenv
subb
or
jno
mov
andl
jne
lret
int
jg
popl
out
rcrb
daa
lods
cmpsl
fstl
lss
mov
ficoml
out
lret
cltd
cmp
imul
or
lea
mov
js
in
js
xor
inc
sar
pop
add
lcall
inc
xchg
sub
jmp
subb
add
sbb
ret
cltd
and
inc
pop
push
scas
inc
push
xor
sahf
mov
and
loope
mov
push
lea
rolb
lds
in
popf
iret
xor
mov
fwait
push
out
push
orb
xchg
or
pusha
add
and
mov
cmp
xor
mov
leave
popa
rcl
add
cmp
mov
push
and
scas
adc
mov
cmp
leave
scas
mov
mov
sub
pop
mov
xor
push
popa
or
into
mov
imul
repnz
mov
mov
pop
jecxz
xchg
insb
mov
adc
or
loope
mov
push
cltd
fnstenv
dec
aad
scas
mov
adc
data16
push
bound
aad
pop
fstl
lock
sub
mov
pusha
push
les
test
sub
pop
and
into
xchg
shrb
movsb
ds
mov
mov
add
fs
mov
les
loopne
scas
ret
std
jp
mov
inc
mov
cltd
adc
aad
mov
shll
stos
push
test
or
mov
adc
imul
pmaddwd
test
dec
jns
xchg
das
ficomps
std
add
mov
add
jle
icebp
adc
leave
iret
sub
mov
dec
outsb
inc
fs
sbb
arpl
mov
fimull
pop
mov
loop
mov
loop
dec
sbb
rcrb
push
add
xor
push
outsb
nopl
jg
inc
sub
inc
cli
xchg
jbe
loop
aam
shrl
cwtl
rcrb
cmc
pop
jne,pt
mov
stos
stc
mov
mov
out
not
adc
pusha
add
mov
cli
aaa
jmp
xor
jno
or
ds
add
pop
pop
cld
jl
cmpsb
scas
inc
mov
cmpsb
xor
sbb
add
inc
out
in
int3
jo
aam
jl
lahf
in
mov
push
faddl
push
xchg
mov
mov
lahf
cmp
loopne
mov
cmp
aas
mov
aaa
sub
fnstsw
dec
stos
push
shrl
inc
and
inc
mov
cli
mov
jecxz
inc
xchg
sub
mov
adc
xchg
or
dec
icebp
lret
push
cmp
sbb
or
jb
mov
sbb
out
mov
outsl
std
and
mov
dec
out
dec
push
shll
push
pop
jo
loop
push
xchg
xchg
push
dec
jl
mov
sahf
rol
mov
sbbl
fbstp
sbb
pop
test
outsl
ja
call
pop
xor
mov
pusha
dec
decl
fnsave
stos
rcl
sbb
fildll
inc
cmpsb
rcrl
std
sub
xchg
pop
lods
xchg
cmp
pop
mov
stc
out
mov
ret
and
dec
ret
mov
insb
call
mov
mov
adc
ret
push
ret
nop
fdivrl
movhps
fcomp
mov
xlat
push
icebp
insl
pop
mov
adc
stos
cmp
cmp
aaa
ret
cmp
in
mov
mov
xchg
push
push
dec
lods
repnz
inc
xchg
mov
andl
push
dec
jmp
adc
pushf
lret
lret
mov
add
mov
push
cli
aam
add
xchg
sbb
pop
add
inc
and
stos
pop
sbb
dec
gs
push
pop
sbb
xchg
jo
loop
out
jecxz
jmp
or
inc
addb
mov
in
inc
andl
pop
insb
imul
orl
sahf
adc
fiadds
insb
xchg
adc
mov
xchg
fucomi
daa
xchg
xor
das
push
add
fwait
test
sbb
adc
cwtl
mov
subb
in
mov
mov
mov
mov
popf
xor
out
xor
adc
push
in
push
into
mov
insl
pushf
jmp
and
loope
pop
inc
lods
add
pop
sub
mov
icebp
sarl
aad
leave
or
dec
jge
or
jo
or
cmpsl
push
imul
pop
cmp
xor
add
aaa
das
fisttps
stos
test
sub
dec
mov
push
mov
pop
and
push
mov
ret
gs
mov
pop
pop
imul
mov
jo
pop
rclb
xchg
loop
dec
dec
out
pop
sub
popa
xchg
imul
mov
movsb
mov
cmp
cmp
out
and
push
repnz
leave
scas
fcompl
mov
insl
and
lods
into
push
xchg
loope
inc
dec
fistps
push
sub
call
cmc
and
fnsave
push
sbb
stos
mov
ret
jb
push
cmp
dec
push
adc
xchg
xchg
lock
mov
pop
bound
xchg
sbb
iret
jle
outsl
mov
sbb
xorb
outsb
or
mov
loope
mov
sbb
mov
mov
jbe
sahf
ret
jmp
mov
cmp
fstps
inc
pop
sub
pop
loope
pushl
loopne
cmpsl
jnp
dec
and
cs
repnz
outsb
loop
push
mov
arpl
out
jg
mov
pop
adc
pop
and
inc
adc
cmp
repnz
lcall
mov
pop
nop
mov
jge
dec
lock
testl
sbb
sbb
jge
lcall
lret
fisttpll
jle
subl
stos
rcll
sub
leave
mov
pop
jne
adc
add
cli
jb
pop
add
mov
ret
mov
jle
stc
pop
xchg
mov
add
adc
xchg
vmread
stos
cmp
int3
enter
fstpt
and
push
pusha
pop
xchg
loope
sbb
add
call
mov
inc
jno
pop
push
and
mov
bound
mov
inc
cmp
lcall
dec
mov
sub
lcall
fsubs
inc
imul
inc
mov
mov
push
or
xchg
mov
or
push
cmp
mov
add
fs
or
lahf
loope
je
sub
jecxz
xchg
push
fs
jnp
mov
in
adc
cli
addr16
or
mov
mov
sbb
shlb
sbb
insb
pop
mov
jnp
std
sar
adc
push
mov
pop
and
mov
pop
scas
mov
pop
and
je
loope
dec
fcoms
cs
fcom
and
jg
mov
or
aas
int3
push
ret
jle
leave
inc
add
xor
xor
push
pop
test
outsb
sbb
rclb
movl
cltd
imul
dec
mov
mov
hlt
sub
cmpsb
outsl
rcr
inc
in
add
xor
mov
add
ret
inc
push
dec
dec
imull
aam
jg
pop
int
mov
inc
mov
arpl
aad
inc
xor
add
or
rorb
push
push
mov
mov
jnp
pop
dec
sbb
aam
adc
push
outsb
sarw
sbb
mov
pop
aam
dec
icebp
or
and
arpl
dec
xor
sarl
or
lcall
xor
int3
push
push
and
push
aad
jns
inc
cmc
repz
xchg
int
inc
adc
test
dec
hlt
mov
xlat
pop
sti
cli
inc
xchg
pop
mov
add
push
mov
jge
test
or
mov
inc
add
ficomps
arpl
or
mov
jge
mov
dec
inc
mov
mov
push
push
mov
sbb
cs
add
adc
test
idiv
adc
xchg
pop
fildll
scas
shrb
test
pop
inc
fmull
and
int
cmpl
jmp
sbb
les
in
xchg
mov
mov
fbstp
shlb
pop
cld
jle
jmp
sub
addr16
and
mov
jmp
cld
mov
and
adcl
dec
imul
out
mov
sahf
inc
shll
stos
inc
fsubrl
and
or
pop
pop
jns
mov
push
cmp
std
or
mov
or
dec
sub
popa
dec
mov
movsb
push
fimull
addr16
test
xchg
in
test
iret
jg
sahf
mov
mov
sub
add
jmp
sub
jecxz
push
lods
dec
inc
outsb
andnps
xchg
sub
ds
test
pop
pop
cmp
insb
xor
popa
scas
and
mov
mov
movsl
xor
xchg
cli
cmp
mov
dec
out
fidivl
cmpsb
hlt
push
repnz
jo
mov
vpaddusb
mov
movsl
mov
fnstcw
ret
int
adc
ljmp
mov
and
mov
data16
imul
insb
xchg
js
xlat
loope
outsb
pop
inc
mov
fdivrl
xchg
addr16
jae
scas
xchg
sti
push
push
aaa
push
test
hlt
sbb
ss
push
mov
jg
pop
dec
lret
or
or
push
sbb
roll
and
adc
loopne
inc
es
ret
in
and
push
testb
ljmp
aam
or
mov
lret
clc
test
mov
nop
push
inc
xchg
lcall
ljmp
add
scas
clc
push
sub
popa
dec
mov
inc
dec
ljmp
pushl
xor
arpl
sar
adc
in
mov
xor
daa
mov
cmp
cld
cmp
push
pop
hlt
xlat
ss
or
jns
push
mov
andl
push
mov
mov
mov
push
mov
pop
mov
and
jne
dec
aas
and
adc
test
aas
daa
shl
mov
dec
testl
int
sti
imul
inc
xor
adc
xorb
push
xchg
cmp
mov
pop
jp
imul
jl
pop
cmpsb
xchg
int
shlb
out
xchg
fiadds
stos
push
in
mov
imul
addb
pop
es
das
adc
cmpsl
into
lahf
insl
push
push
out
loopne
xor
repnz
shlb
pop
sbb
push
lahf
aad
add
mov
add
cwtl
mov
testb
jne
or
sti
pop
jg
inc
ljmp
jle
mov
scas
sarb
pop
ss
cmp
and
scas
stos
push
test
push
stos
adc
sbb
inc
aam
fcmovne
sbb
inc
inc
leave
shll
arpl
sub
mov
repnz
test
sete
mov
jbe
push
js
pop
mov
xchg
in
nop
bound
and
xchg
repnz
lods
cmp
or
rcrb
jbe
icebp
int3
dec
inc
adc
test
jge
fldenv
jb
repnz
hlt
jmp
repz
push
data16
out
mov
mov
jnp
out
pop
leave
add
sbb
xchg
gs
scas
inc
repnz
adc
sbb
mov
or
inc
imul
adc
dec
inc
stos
and
fcomps
shrl
sub
mov
xchg
adc
test
inc
mov
xlat
lods
test
push
lret
outsl
xor
daa
mov
push
fimuls
js
std
xor
mov
in
shrb
and
sarl
ficoms
shll
mov
scas
sbb
rcrb
xor
fwait
inc
jbe
int
cmp
js
and
addl
adc
mov
sbb
rorb
or
mov
enter
jl
cli
mov
int3
pusha
fistpll
outsl
jecxz
outsl
andb
fstpl
add
sbbl
sbb
rcrl
inc
int
in
mov
lcall
and
inc
push
pusha
inc
xsha1
cmpsb
mov
cs
push
outsb
and
fsubr
outsb
sbb
fisubrl
or
mov
arpl
fisubl
fcmovbe
ss
repnz
jle
or
xchg
sbb
je
out
imul
xchg
cmp
inc
mov
repnz
fnstenv
sti
jmp
pushf
aas
scas
inc
cmc
cltd
xrelease
movsb
in
test
pop
in
dec
ss
daa
dec
push
add
adc
scas
cli
arpl
xchg
or
mov
clc
loopne
in
in
sbb
faddl
cmc
int
mov
jecxz
add
and
aad
xor
adc
inc
mov
pop
mov
negb
mov
addb
imul
mov
sbb
mov
out
xor
icebp
stos
ja
jne
inc
pop
lahf
cmp
mov
dec
cmpsl
testb
cmpsb
cmpsl
xor
inc
jb
in
lcall
in
or
cltd
clc
jmp
call
ret
inc
lods
in
out
cmp
sub
shlb
push
xlat
aas
xor
mov
inc
movsb
xor
dec
adcb
lock
fidivrl
mov
mov
jne
lret
inc
sub
lock
push
jmp
push
mov
inc
xor
add
add
and
or
aaa
jl
add
push
test
mov
cmp
pop
xrelease
ss
shrb
pop
sub
mov
cld
or
adc
lods
mov
mov
sahf
mov
sub
dec
pop
in
xchg
cltd
out
pop
cmp
mov
push
jno
scas
pop
xchg
das
cwtl
movsb
aam
in
movsb
or
xor
stos
jo
pop
lcall
and
xchg
test
sahf
mov
lds
int3
lock
xchg
mov
xor
rclb
mov
scas
mov
into
pop
insb
jnp
insb
pop
push
inc
rcrl
cmp
icebp
xchg
sbb
jns
rcrb
andb
fwait
test
xchg
lods
lods
call
push
bound
jle
pop
in
cmp
jle
mov
adc
xchg
cmpsb
sub
es
sahf
push
nop
iret
mov
mov
xor
scas
lds
jae
xchg
cwtl
jo
cli
call
and
clc
adc
pop
xchg
or
push
xchg
mov
xchg
lods
inc
ja
cmpsl
jnp
cmc
cmp
mov
mulb
and
adc
sbb
andps
pop
mov
pushw
loopne
push
mov
fsub
push
bound
out
icebp
mov
pop
aaa
inc
cmp
dec
fisttps
les
roll
out
dec
popa
popa
push
cmp
push
fimuls
repnz
icebp
insb
inc
adc
repz
jecxz
into
jo
aad
ja
call
and
and
lods
xchg
pushf
or
aaa
add
add
push
xor
mov
imul
sarb
mov
mov
dec
xchg
frstor
and
es
sti
ljmp
push
sti
pop
cmpsl
or
sub
rorb
push
hlt
inc
negb
adc
lea
andb
dec
lahf
sub
scas
add
xor
cli
lahf
int
push
movsl
push
repz
int
jmp
pop
and
or
dec
sahf
dec
sahf
cmpsb
dec
add
pusha
mov
pop
cmp
jne
pop
aam
lods
cmp
xchg
in
mov
adc
scas
in
mov
call
jmp
and
stc
lahf
test
push
in
dec
ja
jg
int3
sub
je
icebp
or
fisubl
imul
pop
pop
cmpsl
add
inc
jae
out
fnstenv
or
pop
mov
sbb
adc
flds
cmp
xchg
arpl
aaa
dec
adc
sub
lea
mov
inc
add
ljmp
cmpsl
cmp
loop
sub
or
cld
call
cmp
cltd
call
mov
jbe
test
pop
cli
sbb
int
lret
mov
into
sbb
loope
dec
dec
ret
aas
push
mov
jmp
inc
in
push
sub
push
mov
inc
mov
inc
scas
addr16
stos
inc
outsb
cwtl
cmpb
pushf
or
movsl
push
loope
dec
dec
add
mov
inc
outsb
aad
ljmp
lock
inc
shl
ret
add
sbb
cli
lea
push
sbb
jae
pushf
xchg
in
mov
cmp
clc
push
or
sub
fisubrs
enter
pushw
cwtl
loopne
or
loope
cwtl
int
bound
dec
insl
mov
add
sub
nop
ret
iret
inc
or
xchg
pop
in
mov
faddl
xchg
loope
inc
adc
add
sarl
pop
mov
adc
lret
imul
out
push
mov
repnz
mov
mov
jno
out
lcall
lahf
movsl
jmp
rclb
repnz
mov
mov
mov
mov
sub
mov
and
sahf
or
cmpl
les
filds
pop
iret
push
rorl
xchg
shrl
add
arpl
jno
push
dec
out
push
sbb
decb
sbb
cmp
insb
fsubrp
and
add
cli
mov
cmp
adc
push
xchg
xchg
insb
int
sahf
test
push
sbb
js
mov
dec
mov
push
iret
and
xor
xor
aaa
mov
mov
cmp
sbb
add
je
popa
frstor
divl
ret
pushf
cmp
out
sbb
xchg
push
mov
jns
shrl
xlat
dec
out
and
in
or
addl
sbb
jb
mov
gs
adcb
push
repnz
adc
push
mov
cld
gs
pop
roll
xchg
js
outsl
inc
inc
ja
inc
lret
rcrb
cmp
jge,pn
in
xor
dec
dec
sub
mov
loope
icebp
shr
lahf
xchg
cwtl
bound
in
add
add
stc
cmp
fwait
sti
pop
js
sbb
cmp
mov
jb
ret
ret
das
xor
xchg
xchg
sbb
add
mov
add
js
in
pop
jo
stos
jp
test
sbb
cltd
popa
mov
cld
inc
lock
cmp
mull
test
in
adc
gs
ficomps
pop
dec
and
lahf
mov
aaa
fimull
ret
aaa
and
mov
sub
fnstcw
rcr
addr16
lcall
inc
cmp
cltd
stc
pop
sbb
lcall
loope
lock
ljmp
rcll
ret
inc
xchg
in
stos
lcall
cmp
mov
or
jmp
xorl
sar
inc
loop
mov
mov
dec
enter
cmp
lods
lods
jns
in
arpl
xchg
bound
sbb
cmp
lret
es
sbb
jmp
adc
mov
or
imul
add
and
fistl
aas
or
inc
test
negl
movsl
jg
pop
xchg
pop
mov
push
xchg
iret
xchg
loope
lods
or
test
mov
enter
aas
repz
push
into
jp
mov
mov
outsl
or
aas
xchg
orl
jg
aad
int3
xchg
cmp
xchg
jnp
fiaddl
xor
popa
sbb
adc
insl
mov
lahf
pop
aad
jns
int
sub
sub
xchg
jne
lret
dec
outsb
pop
mov
clts
popl
shll
mov
mov
mov
lock
mov
sti
push
imul
and
andl
pop
and
push
xchg
clc
jl
insb
ds
inc
iret
add
dec
sub
iret
xchg
xchg
in
sub
jg
das
push
add
xchg
and
out
dec
cld
jmp
sbb
in
xor
jnp
xlat
ja
mov
adc
jmp
adc
cmp
mov
mov
filds
mov
sbb
mov
adc
jle
shrb
jge
add
sbb
fs
push
inc
gs
rcl
gs
xchg
hlt
push
loope
nop
inc
repz
insl
pop
cmovbe
pop
test
std
leave
arpl
jle
insb
out
push
pop
xchg
or
sbb
arpl
inc
scas
pop
and
aaa
inc
jo
lcall
cmp
ljmp
sbb
inc
iret
dec
std
jp
inc
mov
dec
fldcw
mov
outsb
js
add
es
and
test
and
jge
repz
lods
rorl
scas
sub
mov
icebp
lock
int
sarb
mov
mov
lcall
rol
das
pop
jne
mov
add
push
sub
inc
jns
add
sub
mov
mov
pop
jne
lods
cli
mov
les
test
pushf
aad
or
outsb
jp
stos
dec
add
xchg
test
sub
jo
pop
inc
mov
xchg
int3
dec
adc
mov
je
jb
pop
nop
mov
xor
sbb
dec
xchg
mov
mov
push
and
ljmp
sub
xorb
adc
rcl
sarl
mov
mov
loop
int3
jmp
lahf
push
sbb
cmp
sub
inc
sub
xchg
je
mov
push
mov
lds
jns
sbb
and
and
pop
and
and
movsl
push
jo
subl
cli
cmp
test
sub
mov
adc
in
dec
mov
add
aam
enter
pusha
or
lock
mov
sbb
out
cmp
mov
sub
rcll
movsb
sub
es
rcrl
stos
dec
lock
outsb
mov
dec
movsl
ljmp
mov
fildl
imul
mull
jae
ja
jmp
in
mov
cmpsb
mov
cs
sbb
mul
jno
iret
and
leave
popa
xor
adc
lock
cmp
xrelease
xchg
in
divl
lea
pushf
pop
add
sub
lods
and
adc
ficompl
cwtl
push
js
in
js
imul
and
xor
inc
cmpsl
es
jo
test
inc
and
and
jmp
movsl
add
repz
nopl
sub
out
mov
popf
ds
stc
rep
cmp
outsl
mov
add
addl
jae
fidivrl
movups
loopne
lods
push
or
mov
les
dec
ja
lds
adc
mov
xor
mov
xchg
js
adc
inc
inc
jmp
inc
int
dec
or
in
add
mov
repnz
mov
outsl
mov
inc
arpl
test
mov
jecxz
fxch
dec
fprem
cmp
inc
cs
xor
pop
pop
dec
cmc
pushl
add
dec
xchg
movsl
xlat
mov
jmp
bnd
icebp
rorb
lock
push
push
mov
or
test
inc
jp
fstpt
icebp
jne
loope
jecxz
adc
push
sub
xor
mov
bound
test
cmp
bound
in
xchg
cmp
push
mov
sti
sub
daa
mov
test
or
cmpsb
shlb
dec
scas
or
push
icebp
pop
stc
stc
scas
cli
out
bound
lock
outsb
scas
mov
cwtl
call
mov
ss
add
loop
repz
ficoms
les
fcoms
or
pop
jbe
pop
sarl
aam
fwait
mov
in
or
push
mov
inc
test
ret
xchg
push
xchg
fs
movsl
jle
cmpsl
mov
leave
sub
data16
sub
les
mov
mov
das
fnsave
mov
mov
dec
pop
mov
xor
mov
aam
outsl
fimuls
imul
adc
nop
sub
fwait
push
ret
repz
xchg
repnz
push
loope
inc
mov
stos
push
and
rcll
daa
pop
adc
int3
lret
outsb
iret
ret
mov
push
inc
arpl
mov
rcrl
xchg
loope
sbbb
mov
jno
nop
pop
or
jmp
push
ja
inc
jge
xchg
aad
jl
lds
pusha
fdivl
lret
loop
dec
fnstsw
fdivr
fcmovbe
pop
into
les
js
lahf
addb
pop
add
dec
inc
popa
mov
cmp
in
or
push
push
jg
sbb
leave
fwait
rol
or
mov
fdivs
stos
cmc
dec
push
jge
mov
pusha
and
push
dec
cmp
adc
lcall
fs
xlat
jmp
sarl
mov
movsb
aam
out
shlb
sub
jle
insl
ficoms
and
adc
aas
lds
mov
fcmovb
adc
sahf
or
bound
imul
adcl
lock
outsb
mov
or
rol
mov
adc
push
pop
or
pop
scas
scas
jle
pop
nop
pop
ficomps
mov
movsl
jno
faddl
jnp
pop
mov
jae
xor
or
comiss
adc
dec
sub
aas
inc
sar
mov
lock
mov
jge
fcmovb
lods
add
push
imul
xchg
xor
xchg
push
inc
fistps
insb
sbb
lret
mov
sub
add
push
or
sti
pop
pop
lahf
test
mov
jae
cltd
fcomps
fs
push
aas
mov
fidivl
push
xchg
mov
pushl
mov
int
lgdtl
ss
xchg
or
inc
mov
ja
iret
in
xchg
dec
adc
int
je
and
pop
dec
bound
sub
sbbl
xor
sub
jns
xchg
movsb
dec
add
mov
int3
xchg
inc
dec
insb
and
dec
setae
sahf
imul
fwait
movsl
mov
cmp
and
sub
gs
popf
dec
fdivrl
inc
gs
leave
aam
imul
dec
jg
loopne
jp
lods
lret
ret
mov
test
mov
pop
and
stos
push
add
insb
sub
rcrb
inc
rcll
rcrb
push
xchg
add
xchg
jnp
lock
push
pop
shll
in
test
subb
pop
push
in
and
adc
in
pop
call
mov
lods
imull
jnp
pushf
mov
fisubl
fstpt
mov
pop
fs
xor
jno
int3
sbb
dec
or
out
das
and
cltd
repz
iret
rcr
xchg
fwait
add
or
fcmovu
push
in
test
leave
or
lock
fs
es
xchg
xchg
ss
ret
sbb
imul
pop
in
stc
fcom
sbb
stc
lods
gs
xor
push
ret
lahf
jle
xor
inc
shrb
ja
push
mov
adc
jp
out
lods
or
jns
jg
je
inc
mov
pop
shll
je
inc
pop
or
sub
shlb
mov
aad
movsb
adc
ret
stos
iret
nop
and
lret
cwtl
mov
xchg
jle
and
xchg
xlat
les
adc
incl
mov
pop
cmc
repnz
inc
stos
push
dec
pop
mov
xor
sti
jns
push
jnp
mov
adc
dec
jno
call
rclb
cmp
pop
and
or
push
pop
push
xchg
or
loop
xor
idiv
cmpb
fs
sbb
aas
sbb
push
cmpsb
xchg
orl
dec
popa
push
fistpl
fmuls
flds
jp
leave
outsl
fsts
das
pop
aad
rdpmc
or
fwait
mov
cld
mov
sub
mov
adc
mov
aad
inc
adc
mov
jnp
pop
loop
adc
add
scas
push
sub
es
mov
lcall
xchg
add
enter
test
pop
repnz
sub
adc
lds
lods
xchg
in
xchg
idivl
pop
xor
mov
dec
test
popa
mov
test
mov
xchg
mov
cmp
sbbb
add
push
xlat
addb
je
rcll
lds
adc
lcall
jae
pop
cmp
xchg
aas
sbbl
dec
adc
fmull
jge
inc
xlat
cwtl
adc
pop
push
mov
dec
lock
dec
jecxz
sbb
ret
fwait
call
lcall
in
xor
and
test
lret
mov
adc
test
mov
cmpl
or
ret
adc
out
les
sub
jne
js
xchg
arpl
push
xlat
or
loop
mov
js
pop
jecxz
xchg
aad
and
leave
inc
inc
nop
les
inc
dec
push
ret
push
pop
dec
xchg
aam
js
test
jne
push
xchg
scas
out
and
fldcw
je
fadds
xchg
xchg
mov
outsl
inc
mov
add
and
cmp
ss
das
in
fisubrl
push
add
fsubs
xchg
push
xchg
mov
and
push
ja
in
in
xchg
inc
adc
xor
sub
mov
out
inc
in
mov
jp
lods
lds
ja
xchg
pop
shlb
mov
scas
andb
in
lret
add
sbb
adc
xchg
nop
ja
mov
add
inc
sub
test
xorb
lret
push
movsb
lcall
mov
cmpsb
pop
pop
xchg
dec
dec
and
add
sahf
fs
test
pop
inc
mov
fdivs
push
sub
sub
push
inc
push
out
dec
aad
fsubrs
jne
xor
iret
adc
add
nop
outsb
incl
push
outsb
xchg
sub
ret
icebp
pop
mov
and
mov
jbe
lahf
pop
xor
adc
sub
into
sbbb
pop
and
xchg
mov
push
test
movsb
sbb
jno
mov
jb
mov
inc
cs
movsl
sti
imulb
sbb
adc
jns
sbb
mov
jae
mov
sahf
pop
add
cld
into
pop
insb
leave
sub
pop
add
cmp
dec
xchg
pop
fs
dec
jnp
mov
inc
scas
cmp
in
fdivrp
enter
jno
push
mov
mov
movsb
enter
mov
mov
push
ss
cmp
fstl
xchg
jle
out
mov
xchg
cmp
adc
cs
sub
mov
aam
pop
mov
xor
cmp
add
sbb
dec
or
pop
ret
add
ds
pusha
pop
adc
jnp
jne
jle
push
xchg
loopne
hlt
fwait
andnps
mov
and
cltd
xor
mov
push
adc
mov
fcomp
aaa
aas
daa
mov
jo
arpl
add
or
push
fldt
scas
enter
insl
in
inc
insl
jno
push
fs
xor
jmp
xorb
aad
pushf
inc
inc
sub
jae
xchg
cmp
cmp
dec
push
ds
enter
ds
aam
cs
dec
jbe
ja
push
dec
and
stos
xchg
jp
fs
xor
sbb
loope
flds
jl
data16
adc
rcll
into
cmpl
aas
dec
fxtract
std
mov
dec
inc
inc
mov
xchg
adc
jmp
dec
jns
push
mov
stos
ds
lock
enter
cmpsl
jle
cwtl
fs
fcom
lret
mov
ss
int3
cmc
jmp
mov
mov
shll
push
pop
es
mov
dec
cmp
nop
or
jbe
pop
jmp
ret
dec
sub
pop
inc
mov
iret
in
jae
es
popa
push
inc
lahf
push
mov
cs
je
xchg
dec
push
pop
push
rcrb
cmpsl
mov
test
fldcw
fdivrs
mov
pop
fs
ret
inc
fstp
movsl
iret
pop
jbe
je
xchg
or
jo
std
adc
and
cmpl
rcr
sbb
cltd
push
cmpsl
int
out
adc
in
mov
lcall
mov
jnp
out
mov
push
mov
cli
sbbb
jge
pop
adc
sub
jmp
in
rcll
pop
mov
push
cwtl
jbe
adc
ljmp
mov
add
fnstenv
cmp
ret
and
aad
scas
xor
std
mov
out
dec
sbb
inc
mov
bound
lret
data16
xchg
rcrl
mov
lcall
aaa
jbe
out
in
dec
cld
adc
xchg
mov
sti
out
dec
pop
imul
sbb
jl
mov
insl
sbbb
fsubl
mov
mov
add
pusha
cs
sbb
insl
push
xchg
imul
rol
mov
loopne
fdivl
jnp
loope
push
pop
adc
mov
shl
xchg
sbb
mov
test
in
cmp
dec
scas
sub
std
cli
repnz
xor
dec
sti
push
call
pushf
mov
dec
movsl
sbb
and
lea
mov
cmp
push
std
push
push
inc
add
mov
sahf
test
or
pop
add
dec
stos
push
mov
iret
inc
add
icebp
outsb
push
ret
fs
mov
rorl
sub
pop
or
push
or
jns
pushf
shlb
pop
adc
shlb
push
and
mov
rcrl
repnz
aas
mov
sahf
sbb
and
enter
mov
pop
jno
dec
and
addb
cltd
fwait
fwait
inc
stos
nop
mov
gs
pop
nop
jno
xchg
scas
sub
cld
cmc
nop
dec
dec
push
lret
movb
lods
cltd
sbb
jecxz
jl
lret
push
aad
or
jnp
adc
or
jb
cmp
jo
test
mov
gs
push
inc
inc
dec
cmc
adc
lret
jmp
jo
adc
dec
lret
test
mov
daa
sti
sbb
sub
xchg
xchg
sti
adc
ret
int3
push
sub
sub
rolb
fiadds
lret
bound
je
sbb
cltd
push
insb
jg
add
jno
push
pop
add
sub
mov
mov
and
test
jae
fisttpll
cmc
cmpl
fnstcw
xor
sub
in
movsl
stos
sbb
test
add
lahf
cmc
inc
add
jle
je
cli
bound
cmpsb
insb
test
incb
jg
or
cmp
decl
pop
leave
aas
sub
adc
in
pop
xchg
inc
mov
in
adc
adc
out
sbb
mov
or
es
cmpl
push
lods
push
cmp
jmp
iret
sbb
push
aas
or
test
push
pop
iret
mov
push
leave
movsl
fs
jns
or
xor
sbb
out
cmpsl
push
aad
clc
outsl
inc
push
xchg
out
cmp
lods
in
lret
addl
cmp
sbb
add
in
adc
cmpsl
js
xchg
out
outsb
loope
pop
aad
adc
inc
test
pop
mov
js
xchg
xchg
mov
out
xchg
loope
xor
pusha
cmpl
lret
cmc
cmpsl
adc
mov
xlat
adc
leave
and
cli
mov
negl
or
xchg
or
sub
int3
fwait
push
decb
xorl
add
aad
jno
sti
arpl
aam
and
cld
cmp
sarl
mov
outsl
cmp
cmp
pmuludq
pop
notl
mov
mov
outsl
cmp
js
pop
loope
cmc
dec
dec
xchg
mov
mov
cmp
mov
mov
mov
lret
xor
cmp
pop
mov
add
push
ret
push
shlb
pusha
sbb
mov
inc
incl
ja
rorl
repz
xchg
and
movsl
dec
lods
jg
push
adc
xor
jp
test
xor
cs
and
popa
add
mov
in
dec
xor
data16
pop
adc
pop
mov
pop
sbb
movsb
dec
or
add
mov
inc
cmp
inc
push
push
mov
dec
xchg
cmp
inc
outsb
push
mov
shll
pop
or
xchg
adc
nop
or
in
rolb
jp
xor
pop
adc
pop
in
stc
xor
push
ret
outsb
pop
xlat
icebp
lret
mov
insb
jae
mov
pusha
repnz
xchg
xchg
dec
js
jmp
icebp
popf
addb
fmuls
scas
xchg
cmp
cmp
lret
xor
xor
pop
dec
int3
fcmovbe
iret
mov
or
or
pop
push
xchg
jo
sub
jle
lock
jmp
pop
out
test
xchg
mov
jnp
insb
mov
jl
imul
pop
int
cmp
mov
arpl
sub
daa
inc
pusha
jno
and
outsb
cmpsb
dec
mov
test
shlb
xchg
out
xchg
pop
les
dec
jb
and
loop
out
mov
adc
icebp
cmpsb
mov
pop
jnp
dec
out
xchg
dec
sub
das
mov
pop
rcrl
push
cwtl
pop
and
and
xor
xchg
sar
push
pop
xor
push
rcrl
push
mov
or
js
sub
jge
xor
sahf
popa
addr16
push
rorb
push
adc
vorpd
jmp
sub
outsl
xchg
push
jns
mov
popf
and
jle
cmp
jnp
popf
cmp
cmc
sbb
mov
cld
cmpsl
stc
stos
xor
das
mov
leave
pushl
or
adc
mov
rep
xor
dec
les
push
call
pop
add
jae
adc
mov
inc
mov
das
std
leave
cltd
aas
sub
inc
dec
fbld
lock
mov
inc
xchg
out
dec
into
lea
mov
add
les
xor
xchg
push
out
lahf
lods
arpl
das
jae
ss
xchg
mov
xor
xchg
mov
pop
imulb
sbb
pop
mov
jp
stc
mov
pushf
pop
push
sti
mov
inc
jmp
cmp
sbb
adc
fcmovb
loope
jae
in
pop
subb
sbb
mov
sbb
add
cmp
jl
mov
nop
add
jle
and
or
outsl
xchg
mov
cmpsl
int3
loopne
xorb
sti
pusha
icebp
test
mov
std
lea
jecxz
imul
mov
pop
fs
adc
jge
cmp
xlat
ljmp
pusha
jo
fmull
dec
cmp
jb
shr
fisttpl
mov
sub
adc
mov
jl
jnp
push
pop
jge
enter
ljmp
mov
inc
call
and
push
mov
js
fs
pop
fcomp
adc
bound
in
add
shlb
jne
mov
ret
cmp
pop
jb
out
xor
repnz
ret
mov
dec
dec
cmpsb
jge
in
lods
mov
hlt
loop
in
add
movsl
dec
out
scas
test
movl
fisubrl
inc
repz
icebp
dec
mov
sub
adc
mov
aad
pop
out
mov
add
fwait
andb
clc
popf
cmp
stc
fdivrl
push
pop
xchg
aam
iret
push
int
int
dec
icebp
call
jo
add
push
xchg
mov
xchg
xchg
cmp
loop
mov
or
xor
in
sbb
lret
mov
insb
pop
sahf
mov
mov
xchg
nop
jp
imul
loopne
insb
cmpb
fdivrl
mov
mov
dec
mov
push
mov
sar
mov
jne
jno
or
inc
mov
mov
stos
scas
cmpsb
je
adc
inc
stos
cmc
hlt
sbb
pop
stc
in
loop
imul
cli
decl
andl
icebp
mov
pop
fisttpll
xchg
inc
dec
sbb
or
icebp
dec
adc
jge
fstl
outsl
adc
inc
cmp
or
sbb
adc
xchg
pop
sub
adc
xchg
mov
outsl
pop
lods
sub
sbb
sbb
aaa
cmpsb
xor
fnstenv
popa
call
dec
xor
test
or
loopne
scas
movsl
xor
lea
or
sbb
ret
sbbb
rcll
andl
jg
cmp
gs
mov
sbb
mov
ja
mov
aaa
leave
jnp
sbb
inc
hlt
mov
rcrl
fistl
cmp
mov
mov
xchg
sub
outsb
xchg
mov
add
ljmp
imul
jbe
popf
mov
imul
pop
daa
sahf
into
add
push
ja
test
mov
dec
inc
lret
mov
xchg
insb
test
movsb
mov
add
aas
adc
mov
pop
nop
ljmp
push
cmpsb
movsl
aad
pop
std
and
mov
loop
cmp
rcll
add
repnz
test
mov
dec
add
push
mov
cmc
repnz
test
mov
aas
xchg
mov
xchg
test
addr16
add
xor
cld
das
adcl
or
lods
add
cmp
sub
nop
jb
xchg
repnz
sbb
mov
xor
movsl
dec
jae
mov
add
fwait
insb
and
mov
pop
and
push
push
loop
mov
pop
jle
rorl
lods
pop
repz
sub
in
sub
addr16
fwait
push
loope
in
scas
adc
roll
jl
or
icebp
xchg
out
jge
or
lahf
inc
push
jg
jae
test
test
adc
pop
and
out
out
mov
sbb
jns
mov
push
lret
sbb
sub
mov
mov
sub
hlt
pop
jmp
push
lods
bound
xchg
add
shlb
flds
test
fisubs
aad
pop
subl
iret
insl
and
inc
mov
scas
mov
xchg
cmpsl
and
cmpsl
out
fwait
xchg
sbb
popf
nop
and
cmc
jno
or
sbb
cmpsl
dec
outsb
decb
add
inc
or
cmp
fcomps
jp
mov
shll
cs
xorl
or
fldt
insl
xor
cmp
jecxz
sub
sti
mov
ret
out
and
sbb
dec
pop
es
movsl
lcall
pop
sub
aas
sbb
jp
aas
mov
add
stos
out
pop
je
xlat
or
mov
sub
hlt
insb
sub
lods
jecxz
mov
inc
add
adc
sbb
test
push
lds
ja
sub
fisttps
int3
xor
scas
xchg
out
gs
sbb
adc
and
inc
into
bound
inc
clc
in
out
nop
out
mov
xchg
jno
scas
sub
pop
ss
enter
cltd
stc
repz
subl
or
bound
cs
in
xor
es
cmpsb
lret
icebp
cmpsb
jae
mov
aam
push
enter
push
xor
fldcw
mov
repz
sub
fldl
lods
push
xor
in
adc
aaa
pusha
imul
sbb
adcb
and
cs
sub
xlat
sbb
adc
ja
jo
mov
pushl
fmull
sub
sub
test
sbb
ret
hlt
adcb
mov
divb
or
adc
jne
jbe
push
xchg
ss
push
ljmp
inc
mov
andb
stos
sub
adc
push
lahf
inc
xchg
and
insl
mov
or
out
outsb
or
sub
mov
nop
aas
jnp
cli
test
xor
xchg
sub
push
mov
pop
mov
add
cmp
and
hlt
stos
and
lcall
xchg
push
sahf
or
xchg
cmp
push
movsb
test
jbe
sar
mov
or
test
mov
fsts
pop
movsl
stc
sub
xor
mov
push
xchg
mov
pop
insl
aas
adc
or
xchg
add
dec
jp
sbb
iret
xchg
pop
movsb
push
push
mov
enter
mov
int3
or
push
mov
aas
dec
test
lock
mov
cmp
inc
idivb
repnz
add
arpl
imul
push
aaa
roll
movsb
cmp
std
repnz
or
inc
push
repnz
popl
mov
test
add
xchg
xchg
inc
fcmovnbe
inc
ja
lcall
jle
mov
fiaddl
mov
dec
repz
dec
lahf
pushf
out
mov
sbbb
aam
shrl
or
fwait
sahf
pop
sub
lock
cmp
or
sub
xchg
incb
negb
out
pop
adc
xchg
std
sti
rcrl
jns
pop
popf
aad
pushf
or
dec
mov
pop
sbb
mov
pop
jge
rolb
adc
push
mov
rcrb
clc
int
pushf
movsl
sbb
xor
call
lret
sbb
jl
icebp
outsb
loope
pop
adc
mov
rcr
pop
sub
aad
pop
in
inc
movb
mov
xchg
fldl
roll
xchg
and
mov
cmp
cmp
pop
sbb
ret
inc
and
pop
dec
insb
xor
push
mov
sub
adc
cmp
pop
ret
mov
cmpsl
push
movsl
mov
loopne
and
stc
lods
arpl
xor
or
push
jbe
andb
in
test
dec
das
shl
cmp
pop
or
pushf
test
mov
or
cwtl
je
pop
imul
xchg
cli
or
lea
and
mov
out
jg
cmc
cmp
icebp
adc
mov
add
test
pop
jne
faddl
js
scas
stos
push
mov
out
xchg
add
stos
push
icebp
fimuls
or
sahf
xor
rcrl
jecxz
std
sub
cld
sahf
xor
fidivs
std
fs
lock
leave
dec
xor
out
div
mov
mov
push
pushf
cmp
inc
ds
adc
mov
cmp
int
jg
ljmp
prefetchw
or
movsb
jl
cmp
stos
sbb
int
xor
testl
popf
dec
xchg
test
gs
inc
mov
dec
dec
push
sub
push
push
and
add
cmpl
addr16
add
movsl
mov
test
mov
pop
adc
or
xor
pop
push
mov
sahf
pop
jecxz
xchg
mov
jns
insl
fistpl
push
and
mov
xchg
adc
mov
movsb
mov
jmp
dec
mov
or
mov
rorl
mov
outsb
imul
inc
sbb
pop
mov
mov
mov
mov
push
push
enter
clc
mov
dec
mov
dec
out
repnz
out
orl
pop
sahf
mov
mov
call
in
je
add
ss
scas
push
out
fmul
inc
inc
mov
jle
lods
push
push
ljmp
jne
rcrl
pop
add
jnp
inc
inc
imul
xchg
mov
mov
movsb
xor
imull
pop
imull
xchg
leave
mov
jg
sbb
cwtl
mov
inc
cwtl
xchg
sbb
dec
movsl
rcrb
imul
loope
inc
outsl
sbb
cld
inc
jne
cmp
imul
mov
loope
daa
xchg
lods
jo
aam
sahf
or
ret
aad
aas
je
test
out
mov
or
decb
mov
stos
dec
lods
rcr
adc
mov
add
pop
xchg
hlt
nop
mov
ljmp
je
dec
xor
pop
popa
xor
test
ja
jbe
repnz
mov
jle
xor
add
adc
mov
bound
xchg
scas
fimuls
enter
jmp
repz
aaa
scas
dec
pop
div
dec
inc
pop
cli
sbb
push
push
dec
push
mov
pop
cwtl
add
in
xor
jae
and
mov
mov
jbe
cmc
adc
out
lret
jmp
scas
cmpsl
cltd
cmp
fiaddl
rorb
mov
arpl
sbbl
sarl
test
pop
xchg
mov
lea
stos
xchg
or
cwtl
andl
addr16
jns
stos
push
andl
jge
xchg
mov
outsb
movsb
cmpsl
and
xchg
mov
inc
jae
push
cmp
pop
or
out
mov
fisttps
push
dec
addr16
pushf
fistpl
rcl
es
es
xorl
enter
or
sbb
inc
aam
out
test
adc
pop
scas
ss
sbb
shl
clc
mov
outsl
das
pop
jp
into
mov
push
mov
inc
imul
cltd
fucompp
or
fnsave
mov
rclb
xor
xchg
sbb
mov
idivl
mov
xlat
out
movl
mov
mov
fnstenv
jmp
cld
cli
leave
sbb
xchg
lods
jb
and
jecxz
sbb
ss
mov
pop
int
cmp
inc
das
pop
add
fistl
jle
jb
sbb
ljmp
test
pop
dec
pop
sti
pop
hlt
call
and
es
outsl
mov
cmpsl
outsl
mov
pop
sub
out
dec
and
push
cmp
add
out
cmp
or
bound
push
fdivs
imul
int3
stos
lods
ljmp
popa
adc
loopne
nop
xlat
mov
ret
lods
into
push
imul
shl
jns
cmpsb
test
bound
and
loop
jbe
pop
out
aas
xchg
clc
dec
fidivrs
push
or
sahf
shlb
or
cmpsb
xchg
jmp
push
jns
loopne
lret
pop
jns
adc
cmp
cmp
push
inc
pushf
pop
sub
mov
test
jp
sbb
xchg
bound
js
inc
aaa
pop
call
or
jp
addb
ret
lret
and
sub
loopne
mov
xchg
or
sti
insb
mov
cli
xor
arpl
popf
push
jno
enter
mov
and
pusha
push
push
sahf
les
mov
mov
jle
scas
ret
data16
jmp
mov
mov
popf
cmp
enter
cmp
lock
rclb
mov
dec
sbb
jbe
mov
imul
mov
popf
jp
jb
outsl
cli
imul
xchg
mov
mov
jge
dec
and
add
sbb
jnp
ss
inc
inc
lods
inc
fildl
xchg
push
das
inc
sub
jns
dec
adc
cmc
jnp
dec
xchg
xor
or
or
pop
sbb
imul
lods
push
sbb
loop
cltd
cld
push
daa
into
decl
or
fcomp
push
sub
cmp
mov
dec
lcall
or
cmp
jg
in
sub
mov
jge
jecxz
mov
push
std
outsb
nop
and
scas
xchg
fucomp
xchg
xchg
aas
repz
push
mov
fnstenv
scas
loopne
fsubl
loopne
fsub
pop
cmp
jno
or
jbe
adc
dec
or
dec
fisubrs
mov
pushf
gs
lods
ds
or
and
mov
xchg
out
cmp
int3
bound
cmp
xchg
and
out
test
shrd
pop
pop
sub
xor
imul
mov
or
nop
loope
add
cltd
lea
fnsave
push
and
xchg
xor
mov
lock
pop
js
icebp
xchg
jbe
int3
jo
add
mov
iret
lods
loop
fldcw
mov
les
aas
push
shrl
xor
sub
or
cmp
xchg
pop
stc
dec
mov
stc
enter
xor
mov
mov
out
cmpsb
fwait
mov
inc
mull
shlb
push
icebp
fisubrs
out
jg
aaa
addr16
mov
sbb
pop
adc
test
pop
or
popf
push
jns
push
add
lock
or
outsl
add
and
sbb
arpl
push
sbb
cmp
or
movsl
pop
cltd
in
jb
mov
loope
popf
xchg
mov
rcl
jb
data16
sarb
inc
mov
std
inc
arpl
sub
mov
xchg
negl
mov
mov
push
mov
dec
aaa
insb
mov
fwait
push
dec
bound
ss
inc
cs
scas
setne
push
lahf
jno
pop
ja
pop
push
repnz
mov
inc
adc
push
sub
adc
lock
add
jae
xor
lods
jbe
jg
lret
bound
xor
and
mov
cmp
xchg
mov
pop
data16
push
dec
movsb
jne
xchg
add
sub
xor
mov
push
insl
push
add
stos
clc
push
mov
je
loopne
push
aaa
sarl
in
fidivrs
push
sub
jne
jecxz
pushf
inc
add
lret
loop
xlat
into
add
gs
push
xchg
adc
mov
addr16
loope
or
push
pop
aam
pop
cltd
pop
lods
sbb
and
fs
hlt
ret
xchg
icebp
sub
jo
lods
push
imul
cmp
shlb
notl
movsb
jne
neg
mov
xchg
repz
lods
lret
scas
jnp
popa
decb
out
xchg
mov
push
int
mov
movsb
sub
push
pop
enter
and
cmp
mov
xlat
push
cmp
inc
leave
xor
loop
aad
jns
push
mov
and
das
rorl
lds
popf
ret
pop
add
test
mov
imul
sub
jecxz
push
arpl
int3
nopl
call
jb
pusha
mov
inc
and
in
movsl
dec
cmp
insl
jnp
push
add
sub
mov
add
out
cmc
xor
sbb
or
loopne
enter
pop
or
or
pop
fildll
mov
dec
ds
popa
jno
ja
mov
out
lock
les
dec
insb
enter
adc
or
adc
xchg
jge
repnz
rcr
int
or
scas
sub
in
sbb
loope
push
cld
xor
subl
inc
jl
mov
sahf
mov
dec
push
fbstp
jl
aad
cmp
cvtdq2ps
and
cwtl
cltd
add
nop
pop
dec
aas
and
aam
inc
cmc
out
push
and
and
shl
mov
adc
rcrl
ja
jl
iret
cmpsl
sbb
jle
nop
fsubs
out
mov
fldcw
rcll
or
or
jno
xor
cmp
ds
adc
sub
inc
inc
jb
lock
jg
les
dec
mov
mov
ljmp
pop
or
mov
xor
pop
pop
dec
ret
lods
adc
sub
je
xchg
pop
mov
loopne
xchg
out
shll
fwait
add
movsb
jae
jl
push
and
pop
pop
jmp
mov
push
dec
lret
loope
outsb
jp
and
mov
ror
sub
pop
or
mov
mov
jmp
fbstp
adc
aaa
jae
popa
in
and
or
pop
pushf
add
imull
sti
pop
cmp
sub
jge
call
rclb
inc
inc
jmp
jge
nop
jle
imul
xchg
popa
cli
pop
cmpsb
inc
cld
sub
pop
mov
mov
mov
jbe
pop
fimuls
loope
aam
cmp
and
mov
cmc
mov
imul
notb
rcl
push
movsl
fistps
mov
mov
aaa
lods
pop
cmpb
fldt
cwtl
sub
add
jne
adc
lds
jbe
loope
in
mov
lods
lea
or
mov
out
add
andb
xchg
jp
push
cmp
lods
sbb
lea
in
dec
jl
pusha
cmp
fsubr
jg
stos
arpl
add
jae
test
adc
or
loope
lea
adc
lret
dec
addr16
mov
loope
fadds
and
movsb
and
movl
sub
cmpsb
pop
test
sbb
jge
xor
xchg
xchg
adc
cmp
repz
ljmp
emms
stos
or
outsb
cmpsl
or
mov
add
push
stos
mov
ljmp
adc
ja
sub
sbb
sub
fs
fwait
outsl
jne
aad
lods
rcll
je
fidivl
out
popa
mov
inc
inc
cmp
fdivrs
imul
in
push
lcall
inc
jno
std
mov
call
adc
lcall
mov
cmp
mov
cwtl
sub
les
shlb
popa
dec
pop
push
and
xor
fwait
push
lret
popf
push
and
repz
fwait
sbb
mov
iret
push
sahf
adc
or
lds
jmp
inc
js
sbb
jecxz
stos
jle
xor
loope
xchg
xchg
inc
bound
push
mov
testl
dec
mov
repnz
dec
push
dec
jecxz
lods
cli
jg,pn
or
inc
movsb
mov
loope
push
lcall
jne
mov
ljmp
jecxz
push
out
shl
popf
cmp
adc
pop
dec
ss
or
jo
aad
and
add
cmpsb
jle
sub
pop
jb
dec
mov
lret
jg
xchg
pop
test
jno
repz
and
in
das
nop
push
jb
cmp
sbbb
std
dec
arpl
cmp
sbb
out
lds
jns
es
mov
or
and
pushf
mov
test
xbegin
test
pusha
mov
cmpsb
inc
sbb
imul
cmp
inc
cmpsl
aam
jmp
mov
sub
cmpsl
xchg
iret
inc
loop
inc
fwait
roll
ficomps
into
clc
mov
insl
inc
hlt
orl
fadds
cmp
pop
jecxz
pop
dec
shll
xchg
add
ret
test
imul
mov
add
xor
dec
sub
jmp
push
mov
jg
pop
pop
ret
outsl
loopne
bound
in
push
jnp
mov
jecxz
lcall
pusha
je
shrl
mov
or
daa
leave
jge
je
cmp
jb
xchg
gs
out
xchg
test
inc
iret
xchg
outsl
mov
test
xorb
dec
add
fwait
test
arpl
add
mov
mov
mov
adc
ljmp
cwtl
sub
lds
sbb
je
arpl
and
cmp
lds
out
xchg
sub
jmp
enter
pop
fistpl
xor
shl
jae
cmp
ss
jb
imul
or
mov
add
fisttpl
adc
dec
sbb
add
cmp
and
enter
fsubl
ljmp
or
mov
mov
sbb
hlt
fdivrp
outsl
ja
arpl
sbb
out
dec
push
test
push
dec
jae
push
pushf
adc
aam
test
inc
ss
add
test
xor
lea
shl
jns
pushf
jnp
bound
jae
and
mov
add
cmp
ss
cli
in
mov
sbb
pop
cli
inc
and
or
cld
sub
dec
rcll
xor
ja,pn
les
sub
mov
cmp
jns
inc
mov
push
sbb
and
push
sub
jle
cmpb
ljmp
nop
inc
lahf
cli
push
pop
xchg
jg
sbb
lahf
mov
mov
aam
outsl
out
mov
jecxz
leave
stos
xor
jmp
cld
sub
push
push
sub
jae
mov
loopne
push
outsl
rcll
sub
mov
adc
imul
and
mov
cmp
outsl
mov
in
xchg
inc
jmp
push
addr16
push
imul
pop
xor
push
bound
push
out
push
es
sbb
ss
int3
incl
jne
adc
jmp
pop
pop
ss
mov
fsubrs
sub
loope
jp
mov
xchg
cmpsl
fwait
stc
ret
adc
mov
lds
mov
mov
inc
jnp
sub
push
cmp
mov
xor
jmp
stos
les
sub
xor
or
or
adc
imulb
add
in
jnp
loop
ret
fstl
xor
cltd
pushf
dec
cmp
test
cmp
xchg
addr16
adc
pushf
add
ret
out
inc
add
mov
sbb
xor
das
xchg
inc
das
fnstcw
jmp
out
out
inc
jne
std
pop
sti
jge
jno
inc
je
pop
pop
sbb
pop
or
fdivrl
aam
lcall
cmp
into
add
mov
mov
sub
call
and
testl
push
pop
imul
sbb
ja
sbb
mov
add
adcl
xor
es
imul
repz
out
push
jne
pop
in
loope
mov
cmp
cmp
xchg
sbb
pop
cmp
pop
dec
fwait
inc
sub
mov
inc
push
rcrl
sbb
xor
outsb
mov
in
mov
add
in
bnd
cmp
push
fsubr
jg
dec
incb
xchg
mov
loop
cmp
inc
sti
mov
dec
sti
stos
add
nop
dec
push
pop
imul
cmp
and
or
cmpsb
loope
nop
test
or
mov
sub
js
push
imulb
outsb
mov
cmp
mov
adc
test
lods
cmp
les
dec
ret
inc
shll
xchg
push
popa
mov
mov
sub
insb
sub
or
add
push
jb
push
cltd
leave
in
add
mov
jae
aad
sbb
rcrb
mov
sbb
rcrl
sub
scas
rol
pushf
xlat
cmpsb
fdivp
dec
rcr
mov
adc
jns
arpl
pop
lock
ss
cld
inc
sbb
popa
mov
adc
inc
push
sbb
dec
and
push
mov
jbe
into
int3
cmp
sbb
sub
shlb
cmc
dec
imul
mov
mov
mov
loop
mov
out
test
out
insb
and
push
pusha
into
inc
or
cmp
pop
lcall
pushf
jno
repnz
ret
out
adc
push
xor
cmp
cmp
and
mov
out
das
fldenv
and
mov
push
ljmp
or
xlat
jge
lahf
insb
cli
and
push
xchg
lret
mov
shrb
stos
cwtl
das
mov
mov
sub
sar
xchg
xor
push
adc
out
outsl
mov
aad
inc
sysenter
pop
push
sbb
or
mov
movsb
std
mov
lahf
add
mov
pop
cmp
dec
paddq
mov
sbb
popf
repz
sub
jno
ljmp
stos
pop
cmp
xchg
and
xchg
mov
push
dec
pop
daa
mov
icebp
mov
incl
stos
outsb
push
sti
stos
js
xchg
dec
mov
add
add
sbb
imul
pop
stc
or
cmpl
jb
sbb
addb
adc
sub
mov
insl
sbb
or
imul
dec
mov
dec
sbb
push
inc
out
mov
cmp
inc
test
shrb
rolb
loopne
ja
daa
outsb
push
jnp
insb
movsb
xor
movsl
xor
pop
add
pop
or
pop
outsl
pushf
fdivrs
sub
inc
pop
das
int
out
pop
inc
cmc
xor
add
cli
adc
dec
pop
pop
mov
add
jbe
mov
clc
fwait
rolb
lods
shll
jb
sub
aam
push
nop
jmp
xor
vmovntps
mov
or
add
test
mov
cmp
sti
in
add
dec
pop
in
popf
or
inc
mov
or
push
stos
ja
mov
imul
inc
xchg
pop
mov
lcall
mov
repnz
push
add
adc
in
sub
cmp
push
inc
xor
ds
stc
adc
loope,pn
sub
sarl
xchg
push
pop
repnz
das
insb
sub
or
in
je
aad
insl
insl
int3
sub
mov
xchg
ljmp
mov
inc
sbb
mov
jg
jo
std
lods
jo
js
imul
lods
sbb
mov
xchg
xor
inc
adc
cmp
je
pop
pusha
jo
pop
adc
jb
std
jp
push
push
divb
and
inc
mov
jp
mov
sub
iret
push
mov
and
dec
and
xor
loopne
stos
inc
mov
adc
aaa
paddusb
sub
or
adc
lea
test
int3
ficoml
ljmp
lret
adc
lahf
out
adc
fs
pop
lret
mov
scas
jne
xchg
sbb
mov
loop
or
aam
mov
jecxz
mov
iret
dec
push
pop
jp
mov
mov
loop
dec
cmp
sub
jl
pusha
mov
shl
out
in
cltd
daa
lods
and
cwtl
mov
ret
mov
sarb
dec
outsb
jno
and
in
cmp
add
shlb
or
scas
movsl
pop
addl
xor
bound
inc
sub
out
rorl
lods
testl
mov
inc
leave
adc
cmp
mov
shlb
bound
push
xchg
xor
push
out
jecxz
jb
pushf
out
cld
dec
xchg
pop
cltd
sub
add
lahf
stc
dec
lcall
dec
iret
sbb
sub
add
push
out
xchg
xchg
cmc
and
ror
sub
xchg
xor
fidivrs
push
in
fs
dec
mov
or
pop
mov
push
mov
inc
cmpsb
stc
adcb
xchg
mov
cmc
xchg
add
ljmp
scas
xor
or
ds
xchg
or
sti
pop
cmpsb
sbb
loop
outsl
stos
rclb
imul
fcomps
nop
xor
shlb
jno
mov
pushl
pop
mov
lret
sbb
cmp
mov
or
pop
push
lods
in
fisubrs
adc
pop
mov
add
pop
push
inc
int
into
clc
insl
push
mov
inc
cmp
std
add
stc
out
sub
shrb
mov
xor
imul
jae
cmp
inc
or
popa
addr16
cld
test
xchg
imul
fwait
mov
xchg
scas
inc
xchg
scas
mov
xlat
sbb
fcmovbe
scas
imul
mov
xchg
into
adc
movsl
sub
jae
mov
imul
mov
das
cld
add
xchg
inc
imul
test
adc
arpl
insb
pop
leave
cmp
jmp
lods
ficoms
sub
mov
xor
stos
adc
xor
jb,pt
mov
and
loop
xor
in
cmp
lds
sbbb
sub
rcrl
jne
popf
int3
push
mov
dec
push
scas
fisubrs
mov
lea
outsb
repnz
out
popf
xchg
lea
loop
jg
clc
popa
pop
pop
xchg
mov
inc
addr16
mov
mov
push
movsl
aad
xor
scas
adc
mov
mov
std
fmull
mov
inc
decb
sbb
add
insb
imulb
cmp
ret
dec
xor
daa
push
rcr
push
aad
scas
cli
push
mov
cmp
adc
out
fnsave
iret
movsb
sub
out
mov
mov
ret
insb
inc
push
add
je
pop
addl
xchg
pop
add
mov
in
movsl
arpl
sbb
pusha
mov
pop
pusha
sbb
stc
nop
dec
popf
inc
add
sbb
fnstsw
sti
icebp
add
mov
loope
xchg
lahf
xlat
and
int3
adc
or
pop
pop
mov
mov
add
rolb
rcrb
outsl
mov
fsubrs
inc
enter
aaa
mov
mov
mov
inc
jno
test
sbb
xor
movsl
xchg
add
scas
and
pop
je
pushf
daa
and
cltd
shll
jp
xchg
cmp
imulb
das
mov
adc
in
xor
jp
aam
jae
loop
pop
cli
shlb
lret
mov
xchg
subb
test
pop
in
out
sahf
jge
inc
cmp
xchg
push
xor
pop
push
outsb
mov
sub
sbb
in
and
daa
mov
xlat
sbb
mov
call
jnp
inc
xchg
xor
movsl
sbb
push
shl
ret
mov
lret
in
sub
in
cmp
jne
mov
ret
jg
jmp
sub
jmp
rcll
leave
aam
out
int
inc
xchg
pushf
rcr
idivb
int
pop
dec
pop
out
imul
out
sbb
or
lret
jl
movsb
das
lods
pushf
jmp
push
js
pop
test
xchg
pop
in
repz
call
and
mov
scas
sub
add
loop
cmp
cld
mov
scas
cmpsl
push
js
xor
and
pop
push
les
jb
loopne
out
leave
xchg
pop
rcrl
mov
pop
mov
push
paddb
cmp
rclb
cmpsb
out
cmp
and
dec
xchg
lret
jmp
jge
cltd
clc
mov
loop
cmp
aas
xchg
testl
cmc
rcl
int
inc
xchg
negb
ret
in
dec
in
sbb
jmp
outsl
push
pop
fbld
and
fldl
cmp
xchg
add
adc
lds
ljmp
fcom
inc
push
scas
rcll
pop
xchg
mov
mov
adc
mov
lock
clc
dec
adc
mov
in
xchg
jp
push
mov
mov
shll
or
pcmpgtd
pusha
sbbb
and
mov
cmp
andb
mov
orl
shrl
sbb
push
fsubp
dec
fxch
inc
call
lret
je
inc
cmp
xlat
sub
jg
repnz
or
mov
push
mov
pop
or
adc
stc
repz
inc
xchg
sarb
inc
inc
loop
shrb
sbb
stc
arpl
jl
inc
fnclex
shll
cld
mov
mov
mov
xchg
add
ret
mov
into
cmp
lock
mov
ljmp
or
fstl
icebp
aam
cmpsl
lds
cmp
xor
popf
scas
dec
std
add
loopne
pop
xor
dec
mov
fwait
mov
dec
xchg
adc
mov
push
fdivrp
mov
jns
xor
fnstenv
mov
add
lcall
sub
movsl
fsubs
jmp
xor
subb
pop
arpl
dec
cmpsl
sub
cmc
inc
mov
xor
xchg
inc
or
in
xor
xor
cmp
lret
fisubrl
enter
lcall
bound
mov
jmp
pop
fldt
cmp
cmp
jb
inc
ret
int3
add
dec
fs
cmp
cmp
and
call
test
cs
sbb
ja
testb
stc
jno
aad
sbb
cmp
stos
cs
loopne
fs
test
inc
repnz
fadds
mov
adc
xor
out
in
xchg
jno
stos
and
int
lret
sub
and
sbb
aam
mov
mov
cmp
cmp
movl
loope
and
jne
push
out
adc
sub
add
pop
ja
pop
repnz
mov
pushf
pop
jb
daa
jmp
push
ret
sub
mov
stc
aad
cmp
cs
mov
sbb
in
das
out
pop
sub
neg
push
jmp
ficompl
bound
jo
jns
pusha
mov
mov
and
scas
outsl
xchg
jmp
pop
jns
xchg
je
push
mulb
nop
fistl
dec
imul
lods
clc
sbb
test
bound
cmpsl
inc
movsb
push
pop
add
lds
loop
insl
aas
popa
test
stos
aad
and
xor
pop
jg
jle
adc
stos
pushf
adc
jo
jg
pop
adc
push
je
sub
inc
out
push
imul
mov
mov
test
xchg
mov
repnz
cmp
or
xchg
ret
fwait
xchg
jae
mov
movl
loope
mov
mov
cmpsb
and
mov
fwait
dec
push
lods
mov
mov
xchg
aas
out
pop
cwtl
les
psubb
lea
test
call
clc
in
sbb
adc
mov
add
and
lcall
arpl
or
lods
movsl
and
mov
cmp
sbb
jns
inc
sbb
mov
adcl
add
jecxz,pt
mov
pop
aas
cmp
cltd
pusha
es
push
xor
mov
pop
and
adc
std
jb
popa
das
ficoms
pop
stos
aad
add
addb
sbb
jecxz
mov
adc
es
icebp
cwtl
nop
and
mov
and
aad
cmp
or
or
dec
add
fldt
addl
sub
das
movsl
jno
popf
sub
test
test
repnz
mov
jl
push
repnz
es
outsb
push
adc
cmp
mov
aad
xchg
inc
xchg
test
sbb
in
das
mov
add
jno
or
push
and
xor
mov
fs
repz
push
sub
lds
sahf
or
fcom
aam
popl
xchg
mov
push
sub
das
pop
push
adc
call
inc
push
sbb
mov
xor
ds
push
ror
cmp
or
inc
sbb
dec
sbb
outsl
repz
aad
and
je
xchg
out
fidivl
cmp
popf
mov
push
push
cmpsl
jne
jno
mov
fbstp
scas
inc
insl
bt
inc
js
mov
add
push
sub
or
mov
push
add
das
ret
inc
mov
daa
rol
mov
aam
jmp
aaa
scas
repnz
adc
add
fwait
dec
ret
gs
or
fwait
and
dec
cmpsl
push
scas
mov
sub
rcll
in
or
pop
sub
scas
popa
dec
xchg
lret
xchg
je
pop
adc
and
jbe
into
sbb
mov
jbe
insl
loope
movsb
addr16
and
ja
inc
jns
lds
xchg
xchg
gs
out
dec
mov
mov
jecxz,pn
stc
push
jno
repnz
divl
xlat
push
jnp
or
int
push
xor
adc
int
cltd
loopne
and
fisubrs
cmp
pop
mov
pop
subl
mov
pop
testl
rcrb
pusha
bound
ficomps
jmp
xchg
jbe
mov
and
scas
push
insb
repnz
in
outsb
dec
sub
fists
scas
mov
sub
cltd
std
jne
jns
jmp
adc
mov
xor
adc
hlt
xchg
int3
mov
sbb
sub
lds
jmp
cmp
mov
and
into
into
lock
sub
xchg
lret
andl
push
add
fsubrs
stos
and
mov
and
sbb
sbb
or
movsb
sbb
pusha
mov
arpl
and
fiadds
jno
lcall
mov
xor
stos
lds
push
and
rcll
in
outsl
inc
push
pop
push
es
ja
xchg
add
jecxz
and
aaa
xchg
sahf
outsb
jle
nop
jg
pushf
in
flds
hlt
pop
jl
imul
shlb
gs
cmp
or
jge
fldl2t
loope
ja
xlat
pop
clc
adc
lea
out
xchg
fcmovbe
pop
sti
ja
xlat
mov
lahf
mov
fidivrl
fnstcw
loopne
pop
ret
cmc
fcoml
mov
icebp
insl
ror
push
es
popa
jle
mov
out
popf
out
jno
shl
jle
pop
insl
or
test
test
icebp
cwtl
ja
and
sahf
mov
repz
mov
jno
sti
push
out
and
sbb
bound
stos
stos
fisttpll
sbb
out
imul
or
pop
data16
xor
or
scas
loop
push
jnp
jp
pushf
lahf
dec
pusha
and
es
imul
repnz
add
in
pop
ret
and
ret
cmpsl
fstpl
inc
dec
pop
lret
cmpsl
orl
add
dec
pop
push
jo
inc
xchg
pop
adc
sbb
lahf
jo
jp
popa
cmpsb
and
mov
adc
push
mov
add
mov
cmp
jbe
lahf
repnz
clc
gs
fmulp
fldcw
and
cltd
nop
pop
hlt
mov
dec
fcoms
jle
mov
or
jg
cmp
data16
and
and
inc
cmp
or
lret
or
rorb
mov
inc
pop
inc
stos
cltd
mov
mov
aad
cwtl
push
out
push
xlat
pop
mov
push
push
lods
mov
pop
jp
fnsave
aad
adc
mov
stos
or
stos
enter
or
mov
iret
mov
sbb
fwait
mov
add
dec
adc
sub
dec
aaa
xchg
sub
or
mulb
mov
mov
adc
js
sub
pop
mov
rcl
add
jae
jge
inc
sbb
lods
and
xor
adc
add
fcoml
sbb
mov
xlat
mov
mov
dec
adc
jae
pcmpgtw
jge
cmp
xchg
fcoms
xchg
repz
cmp
scas
or
in
mov
inc
stos
push
jle
jnp
outsl
push
sbb
mov
push
aam
jae
jbe
cmp
clc
or
shr
sahf
scas
add
cmp
sbb
lock
fwait
push
inc
insl
cmc
shr
push
mov
sbb
pusha
sub
xor
cltd
imul
add
and
lahf
jp
inc
adc
mov
fidivl
in
or
lcall
jo
dec
mov
fisubl
popf
sahf
outsb
inc
push
cwtl
jo
dec
scas
push
cmp
push
sub
sub
ja
and
xchg
notb
les
jbe
xor
rorl
data16
mov
sub
cmp
jecxz
xchg
rorl
adc
xchg
pushf
xchg
pop
jnp
cli
std
mov
in
jg
inc
mov
rclb
sbb
mov
ss
arpl
mov
or
pop
and
sub
and
mov
adc
add
jle
push
hlt
lds
jmp
fadds
sbb
pusha
or
push
int
ret
jnp
jno
dec
push
inc
ljmp
out
ljmp
test
fistpl
push
fisubl
into
adc
ss
pop
xchg
movsl
pushf
push
int
sbb
data16
jg
and
fisttps
insb
fs
and
mov
mov
jb
enter
xchg
into
mov
inc
add
dec
test
pop
insb
add
mov
or
push
leave
jb
aam
addl
adc
or
dec
psubb
stos
pop
in
aad
leave
lea
cmpsl
sbbb
loop
and
sbb
push
or
int
hlt
shll
sarb
fwait
jge
ret
sub
sub
add
mov
push
fidivl
outsl
adc
xor
in
or
cli
cmpl
jmp
sub
push
pop
and
xor
fistl
jp
sahf
imul
scas
jb
dec
jnp
minps
repnz
mov
sbb
test
xchg
stc
cmp
xchg
std
loop
outsl
das
cli
imul
mov
mov
jmp
sbb
xchg
push
mov
or
xor
or
lea
lcall
out
mov
out
std
lods
ror
xchg
or
lea
mov
push
xor
std
sbb
dec
leave
fs
xchg
xor
jp
mov
xor
repz
mov
inc
shrl
add
cmp
pop
js
icebp
jecxz
fcmovu
decb
adc
pop
push
jl
mov
push
mov
add
add
loop
aaa
movsb
push
sbb
ja
sub
rolb
iret
push
js
push
mov
and
loope
mov
sbb
test
hlt
into
jo
mov
add
out
cmp
shll
dec
orl
sub
into
mov
fstp
mov
mov
popa
add
mov
std
fidivrl
andb
add
xlat
das
rcrb
xchg
mov
orl
xor
jp
jns
and
jae
mov
xor
subl
inc
mov
std
icebp
call
addr16
idiv
lret
inc
add
mov
stos
mov
mov
and
fidivl
cmp
addr16
jecxz
mov
mov
shrb
pusha
loope
mov
hlt
push
filds
jnp
pushf
mov
push
ret
mov
pop
mov
push
lds
dec
push
movsb
ret
jbe
iret
ror
mov
cmpsl
pop
mov
xchg
mov
aam
xor
pop
int3
push
cmpsl
pop
je
test
lea
ds
daa
mov
jecxz
or
loope
xchg
icebp
mov
mov
enter
jmp
push
adc
pop
lock
jle
mov
and
xor
mov
pusha
push
aam
xchg
or
push
mov
out
or
sbb
push
sub
adc
outsb
aaa
leave
pushf
in
xor
or
push
xor
test
test
xchg
loope
sub
fisttpll
jno
or
or
loope
pop
sbb
or
adc
aam
std
mov
pop
fcmovb
enter
fucomp
mov
out
test
test
xorb
pusha
xor
stos
pop
popa
loopne
outsl
int3
add
push
int
jo
cmp
pop
arpl
aad
shlb
test
pop
mov
das
or
fstpl
sahf
push
test
dec
sbbl
or
mov
xor
mov
hlt
jmp
outsb
out
in
ljmp
fistpl
adc
pop
and
dec
cs
xchg
imul
cmp
leave
out
in
je
lahf
cs
repz
scas
aaa
and
rcr
daa
adc
fmull
ljmp
aad
pop
mov
xchg
jae
sub
inc
or
mov
inc
xchg
adc
and
notb
dec
repnz
dec
push
addr16
stos
or
mov
xchg
out
inc
fisubs
lret
and
push
sub
cs
test
in
repnz
outsl
bound
mov
out
and
xor
insb
push
repnz
jnp
dec
mov
stos
push
mov
lods
stos
mov
jo
lret
mov
cmp
mov
das
sbb
outsl
sub
mov
cli
dec
mov
out
jb
ljmp
push
and
dec
loope
cmc
sbb
paddd
cmp
mov
bound
gs
xor
xchg
xor
jg
xor
bound
and
add
cmp
loopne
sbb
push
xchg
fwait
stc
shrb
jnp
lcall
cmpsl
test
push
push
dec
int
sbb
test
ret
jne
pop
in
dec
mov
lcall
fisubrl
adc
out
pop
fstps
cld
fcomip
mov
mov
sbbl
mov
jnp
sbb
jmp
jne
cmp
xchg
pop
mov
jecxz
pop
pop
in
adc
xchg
out
rcl
xchg
repz
sub
pop
in
mov
in
hlt
andnps
mov
cmpsl
cmpsb
ret
lock
clc
add
mov
loop
das
std
jecxz
xor
dec
leave
xchg
pop
xchg
pushf
pop
or
sbb
cmp
jne
pop
adc
sti
xchg
ss
imul
inc
mov
and
jmp
std
int
lods
cmp
test
or
inc
sub
xor
bound
insb
pop
push
imul
cltd
out
test
jle
cltd
jno
and
cli
push
andl
jecxz
sbb
sub
cmp
les
and
dec
filds
and
lea
out
and
cmpsl
xor
fisttpll
int3
cwtl
dec
adc
repnz
adc
lods
sub
and
les
movsb
shl
mov
dec
jns
les
aad
adc
dec
pusha
mov
jecxz
into
sbb
jmp
dec
arpl
cmpl
out
outsl
and
pop
andl
xlat
sub
lea
mov
cmp
repz
shll
pop
mov
and
in
std
mov
fldl
push
clc
pop
and
cmp
jno
mov
dec
adc
std
divb
sub
movsb
sti
mov
stos
jae
pop
aaa
jmp
xor
inc
loopne
fwait
popa
ret
cwtl
jl
cmpsb
je,pt
test
xor
lock
dec
inc
mov
inc
sbb
sahf
enter
lahf
in
pusha
loopne
add
cmp
xor
mov
sti
push
int
out
dec
mov
pop
ja
pop
mov
fisttpll
pop
lock
cmp
sbb
arpl
in
adc
es
popf
cs
inc
jmp
cmp
flds
mov
sbb
xchg
and
or
dec
sbb
pop
mov
sti
push
adc
push
mov
lahf
js
notb
mov
data16
ljmp
xchg
adc
sbb
ljmp
cli
lret
popf
cmpsl
mov
adcl
out
pushl
insb
pusha
push
sub
in
daa
repnz
xchg
out
pop
fnsave
mov
cmpsl
stc
rcl
lds
sbb
sti
push
jl
decb
mov
outsl
out
mov
cmp
ret
cli
leave
xchg
cmp
xor
pop
ror
sub
orb
mov
xlat
add
adc
pop
and
inc
add
mov
ds
mov
or
cmp
orb
ficompl
je
xchg
mov
jnp
and
cmp
ds
jno
xchg
cmp
xor
mov
mov
repz
or
xor
pushf
and
mov
pop
and
inc
adc
jmp
imul
aaa
nop
jne
movsb
sbb
daa
and
cmp
pop
jmp
decb
bswap
aaa
push
imul
loopne
int
repnz
nop
xchg
stos
and
push
notl
jb
or
jle
add
xor
xchg
mov
das
lods
mov
cwtl
and
in
cmp
or
movsb
mov
or
sti
mov
mov
mov
inc
dec
inc
in
xlat
mov
or
popl
pop
and
mov
and
jae
fldenv
cmp
popa
test
lahf
jo
call
repnz
push
inc
ja
sahf
cltd
push
mov
push
rcl
mov
rorb
jecxz
cld
mov
lds
js
decl
loop
sub
xor
push
mov
push
in
xor
fiadds
cmpsb
push
pushf
stos
out
pop
fisttpll
lock
lds
push
in
jae
dec
subb
sub
cmpb
ret
fsubr
dec
scas
leave
nop
push
cmp
or
add
rcll
outsb
mov
scas
push
jb
mov
das
mov
stos
nop
ds
cs
or
cmp
test
insb
dec
shrl
pop
add
pop
fimuls
pop
bndstx
jecxz
xor
test
xlat
jno
fsubp
outsl
push
mov
sub
sub
inc
js
dec
adc
fmull
push
inc
inc
push
xchg
mov
in
push
pop
inc
and
cmp
rcrl
js
mov
ret
sub
int3
fwait
lds
jmp
test
push
push
js
cwtl
sbb
mov
push
enter
fldl
mov
push
xor
insl
imul
adc
mov
lods
cmpsb
out
in
test
pop
sbb
adcl
lods
mov
adc
notb
inc
neg
in
and
out
xchg
mov
push
aaa
adc
rolb
push
xchg
sbb
es
js
sti
repz
xchg
popl
sub
mov
outsl
and
and
outsl
jecxz
and
repnz
repz
jbe
dec
ljmp
adc
sub
aaa
and
jne
rorb
inc
cltd
out
xchg
pop
lds
in
or
sti
push
mulb
ret
inc
pop
imul
mov
push
movsl
ret
dec
loop
jmp
ss
lods
aaa
sti
fstpl
adc
imul
adc
pop
lods
and
sbb
into
adc
leave
mov
mov
cwtl
mov
adc
out
fidivl
adcl
push
ficoml
xchg
pmullw
xchg
push
pop
xchg
roll
add
add
fsubl
xchg
jb
mov
imul
jnp
leave
rep
scas
sbb
pop
in
push
push
add
out
push
aas
cmp
pop
aad
mov
fwait
xchg
and
movd
je
int
mov
sub
push
cmp
rorl
in
sub
sbb
scas
dec
shrl
xchg
lcall
xlat
jno
add
cmp
jns
and
scas
mov
arpl
mov
jo
shlb
jne
xchg
dec
addr16
or
jno
xor
mov
push
aam
jecxz
aaa
pop
scas
push
out
push
dec
outsl
xchg
testb
jge
fsubs
shr
cli
out
mov
xlat
psllw
inc
push
add
in
mov
test
sub
fs
sub
test
loope
xor
push
dec
inc
pop
shl
jb
insb
xlat
jecxz
mov
push
xchg
cmp
insl
mov
lock
sbb
jnp
fstps
cmp
cmp
sub
sahf
clc
sarb
cmp
stos
daa
scas
mov
insb
fmulp
jecxz
or
push
gs
push
cmpsl
cmpb
fs
adc
decb
nop
mov
mov
ss
and
incb
popa
cli
cmp
adc
inc
and
outsl
and
mov
lahf
loope
loop
test
adc
int
sub
dec
ss
sub
enter
xchg
xchg
xor
ret
add
sti
fwait
mov
dec
and
sub
inc
xchg
pop
adc
pop
nop
dec
pop
sbb
push
dec
addr16
fstpl
fldt
roll
repnz
sti
loope
adc
int
add
pusha
data16
inc
ret
xchg
scas
aad
lret
js
shlb
scas
xchg
adc
ja
aam
test
movsb
push
push
scas
das
inc
adc
mov
int
sahf
insl
mov
insl
inc
mov
scas
inc
mov
es
stos
ljmp
jne
pop
sub
mov
dec
orb
test
pop
adc
jns
jae
sbb
aaa
pusha
ds
shlb
cmc
loop
inc
and
push
mov
adc
xchg
mov
cmp
or
or
adc
clc
test
jno
fmull
sbb
and
jge
mov
rcll
imul
add
test
or
dec
int3
out
fwait
mov
mov
fs
mov
fsubrs
xchg
or
jbe
jns
sub
inc
inc
in
dec
mov
out
shrl
push
in
sbb
mov
outsb
pop
push
pop
mov
pushf
push
call
dec
pop
ss
js
cmp
cmp
jb
cld
dec
fisubl
or
xor
pop
push
inc
je
inc
push
xor
push
mov
cmpsl
cmc
in
mov
adc
sbb
push
jns
cmp
fs
push
fs
jge
inc
rorl
or
outsl
insl
cmpl
push
int3
or
popf
movsb
jp
mov
scas
xor
fsubs
inc
jge
ret
push
daa
push
stc
mov
inc
mov
repz
jp
insl
ret
popf
pop
jg
imulb
ss
add
cld
xor
sub
dec
and
stos
sbb
or
repz
pop
mov
sar
cltd
mov
xchg
in
and
stos
outsb
and
pop
das
test
iret
aad
xor
pop
or
jecxz
mov
push
mov
fdivrs
jmp
sbb
push
test
aam
scas
xlat
daa
xchg
sub
sahf
pop
es
xchg
xor
mov
outsl
cld
fisubrl
fwait
add
popa
jb
das
fsubrs
mov
or
jno
loopne
jo
in
pop
ds
fadds
test
idivb
std
mov
popa
sbb
stos
adc
and
popa
sub
add
or
xlat
sbb
push
mov
cltd
repnz
icebp
push
imul
enter
inc
jb
jae
scas
pop
cmp
mov
aaa
fiaddl
pop
xchg
pop
aas
int3
cmp
jle,pn
fsubr
cmp
pmullw
sbbb
es
sub
stc
arpl
std
sub
or
and
adc
adc
test
jae
mulb
sbb
stc
dec
xchg
mov
xor
inc
hlt
cmpl
xchg
push
and
push
sub
xchg
or
mov
jns
dec
clc
jge
adc
mov
lahf
mov
scas
jle
inc
dec
int3
mov
xor
jle
addb
jp
in
cltd
movsb
mov
push
in
dec
add
les
data16
out
lcall
sbb
add
dec
and
gs
cld
push
mov
dec
js
or
fiadds
mov
or
inc
in
push
stos
pop
sub
das
lret
lret
mov
out
jae
out
xchg
iret
cmp
lret
push
aad
dec
nop
insb
outsb
call
movsl
je
lcall
in
stc
add
addr16
es
nop
test
adc
rcrl
pop
inc
pop
outsb
adc
mov
fsubp
test
mov
popf
push
mov
lcall
sti
push
jne
je
dec
sub
push
fstl
pop
insb
mov
aad
aam
mov
out
inc
and
adcb
sub
and
add
and
jge
je
outsb
inc
xchg
jg
aaa
sbb
aad
pop
inc
int
int
push
cmp
mov
push
push
push
leave
shlb
loopne
test
mov
leave
and
mov
adc
cmpsb
inc
mov
popf
jle
xchg
test
test
xchg
inc
mov
sar
mov
incb
fdivrp
add
scas
jns
sub
pop
pop
ja
mov
daa
mov
or
sbb
adc
cmp
outsl
out
scas
icebp
mov
adc
pop
movsb
mov
xor
fwait
push
xlat
popa
scas
clc
jl
dec
std
fnstsw
sub
lea
mov
ret
xor
lcall
pop
dec
clc
mov
dec
stc
call
adc
popf
sbb
and
out
dec
cld
scas
and
push
cmp
jg
push
pop
cmp
clc
sub
and
ret
femms
lret
repnz
push
push
cmp
test
stc
xchg
cmp
aam
or
xor
popa
dec
icebp
jo
lea
lods
imul
and
bound
leave
out
faddp
fwait
shl
jge
clc
shrb
push
and
and
shl
xchg
add
in
xor
dec
fcoml
loop
movsb
push
jno
hlt
rcll
sub
fs
stos
popa
and
xchg
mov
lret
nopl
xlat
push
mov
cli
push
mov
rcll
dec
sub
ds
jbe
jp
lock
sbb
mov
insb
pop
pop
mov
and
jle
lret
xchg
sbb
dec
bound
insl
xchg
cmp
cmp
jecxz
adc
xor
shr
setp
push
sbb
pop
xor
inc
je
push
iret
dec
jp
xchg
pop
jg
jmp
std
adc
movsb
cmp
fsubr
xor
mov
cmp
inc
cmp
pop
jmp
in
mov
lret
mov
dec
jb
rol
arpl
dec
call
xchg
in
fcom
push
jl
sbb
push
pop
dec
leave
inc
xchg
xchg
adc
cmp
push
fsub
rcrb
or
outsb
call
jecxz
xchg
mov
cmpsb
insb
scas
xchg
sbb
int3
dec
xchg
jo
dec
push
mov
lret
sbb
movsb
out
fisubrl
jns
sbb
mov
xlat
arpl
cmp
mov
bound
std
push
jno
and
sub
test
sub
lods
aad
out
mov
ljmp
and
fmull
jl
ret
jb
push
outsl
xchg
cmp
sub
jne
hlt
int
out
ja
ret
out
repnz
int
shlb
in
inc
jmp
xor
cmpl
lahf
jmp
sbbl
jo
gs
dec
xchg
cs
xor
cwtl
arpl
imul
jnp
push
cmpsb
push
ljmp
test
std
xor
pop
and
iret
and
loop
lods
lret
sub
fildl
push
mov
sub
imul
lea
stos
or
xor
cmp
dec
movsw
sbb
in
in
jae
or
push
lea
sub
sar
jns
mulb
outsl
mov
cmp
push
push
sti
int3
in
loop
dec
in
repnz
mov
cld
jbe
scas
push
pop
push
xchg
orb
pop
stos
pusha
mov
adc
and
mov
gs
and
lock
mov
xchg
pop
je
sti
mov
or
out
js
loopne
xchg
jno
sbb
or
aam
scas
cmc
popf
and
sub
imul
hlt
popa
lea
xor
mov
xchg
mov
push
ret
stos
cwtl
lcall
cmp
popf
shll
jmp
cmp
xchg
or
aaa
insl
stos
mov
cmp
fistl
jne
or
dec
cmp
add
movsl
call
or
mov
loopne
mov
pop
xor
mov
in
xor
addl
mov
mov
jbe
mov
adc
inc
daa
dec
xchg
dec
inc
repnz
xor
pop
xchg
scas
sbb
pop
es
mov
leave
mov
aad
std
ret
mov
pop
sbb
ja
out
and
or
xlat
and
xchg
jbe
jl
cmpsb
xchg
fildll
mov
dec
jb
mov
lcall
shlb
mov
mov
sbb
aas
xchg
sbb
push
inc
sub
jl
pop
inc
xor
cs
cmp
inc
es
fmull
cmc
push
js
daa
movl
mov
push
pop
mov
daa
cmpsw
stos
mov
inc
xor
push
inc
sbb
xchg
fbld
push
xchg
arpl
sub
inc
push
andl
test
or
inc
rcrl
rcl
dec
movsl
cmpsl
add
faddl
lods
mov
mov
popa
loop
pop
insl
in
jb
push
jne
mov
adc
sub
xor
mov
mov
xchg
sbb
fs
addr16
push
jecxz
lahf
arpl
and
push
cmp
popl
outsb
push
dec
push
xchg
int
inc
ja
cmp
fldenv
loope
jmp
mov
jbe
mov
push
cli
mov
das
push
arpl
out
enter
int
call
lds
sbb
ja
ficoms
adc
add
pop
adc
mov
pop
mov
das
push
sbb
loopne
ret
xor
mov
fs
ss
mov
lahf
inc
mov
decl
sbbb
ss
dec
and
ss
cwtl
icebp
xor
push
xor
gs
xor
sahf
in
lea
pushf
cmp
in
clc
cmp
roll
mov
push
mov
xchg
jns
jno
pop
int
mov
jb
fstps
pop
repz
faddl
dec
test
mov
ss
ret
sarb
sub
fidivs
jge
sbb
in
sub
mov
int
in
mov
jb
mov
aad
shlb
and
std
push
aaa
and
fs
shlb
mov
int
or
fsubrs
out
je
sbb
xor
lahf
sub
ljmp
bound
outsb
pop
das
xor
or
ja
or
jg
cwtl
adc
pushf
push
les
adc
cmpsl
add
sub
enter
inc
filds
adc
add
push
aaa
inc
test
xchg
fidivrl
imull
inc
lods
mov
mov
xchg
les
test
dec
jecxz
ffree
divb
push
cmp
dec
mov
add
jns
and
lahf
pop
inc
jmp
pop
push
aas
inc
arpl
mov
lods
adc
or
mov
pop
xchg
push
pop
mov
lea
sti
xchg
sub
mov
push
push
jge
push
xor
shl
stc
andb
aad
fisttps
stos
mov
imul
cld
xchg
mov
xchg
leave
into
jmp
test
outsl
xor
mov
xor
lret
loop
jle
cmpsl
push
call
add
jle
adc
pop
lods
jecxz
repz
push
stos
loope
mov
xor
enter
add
out
cld
aam
cli
jae
jne
dec
jne
out
leave
aad
pusha
shl
add
stos
ret
in
ds
or
into
hlt
lock
outsl
stos
or
lea
cltd
sbb
push
jnp
cs
ljmp
jge
pop
idivl
icebp
scas
ljmp
daa
in
int
loop
push
ret
pop
mov
add
jnp
xchg
mov
fidivl
jo
jmp
in
shll
xor
outsb
aaa
mov
mov
fisttps
sti
cmpsb
adc
dec
fstl
cwtl
jo
xor
push
lret
repz
divb
mov
pop
stos
repnz
js
mov
notb
popa
mov
lods
imul
lods
test
push
cmp
add
lret
in
sub
dec
cmp
mul
lret
out
in
add
out
in
xchg
adc
xor
push
xor
sub
call
mov
jle
inc
stos
xlat
stos
xchg
cmp
push
popa
lea
cmp
cltd
mov
add
arpl
mov
sarb
test
lea
or
lods
insb
scas
fidivrl
sahf
cmc
or
bound
jle
imul
lods
or
icebp
dec
sarl
mov
mov
das
shl
stc
repz
daa
xor
popa
sub
sbb
push
fildll
mov
dec
test
mov
dec
rcrl
mov
push
inc
scas
dec
fdivl
or
sbb
sub
xchg
out
and
xchg
imul
frstor
sahf
mov
sub
cmc
fimuls
nop
outsl
inc
jae
orl
xor
mov
xor
jg
divb
xorl
shrl
xor
pop
fldl
nop
mov
divps
and
sub
out
into
imul
inc
adc
cmpsb
add
enter
mov
pop
dec
mov
dec
jp
cli
mov
pop
jp
push
cmp
fimuls
bound
and
xor
hlt
mov
scas
sub
lds
movsl
push
imul
ljmp
jae
and
repnz
push
sub
arpl
pop
inc
bound
or
mov
lretw
lret
inc
in
mov
pop
dec
adc
and
xchg
push
shrb
daa
mov
mov
xor
fiaddl
ds
stc
data16
push
and
xchg
cltd
mov
adc
arpl
xchg
daa
mov
int
inc
sbb
mov
sbb
cwtl
fdivp
das
push
inc
and
sub
rcll
xor
mov
xchg
fs
nop
sbb
sub
sti
retw
adcb
out
sbb
xchg
insl
or
leave
xchg
xor
test
lret
add
aaa
popa
jp
enter
sub
loope
sbbb
gs
push
xabort
mov
xor
in
mov
cmpb
aas
loop
or
or
fimuls
pop
gs
inc
insl
aas
push
test
rcrb
loop
mov
loop
div
xchg
jle
push
icebp
repz
pop
mov
in
scas
ss
movsl
fcomi
push
pop
add
xor
xchg
lret
mov
insl
and
push
aaa
push
mov
mov
xor
cs
sub
stos
mov
or
mov
mov
pop
cmpsl
mov
imul
cmc
in
mov
ss
je
mul
xchg
push
fnstsw
xlat
aaa
add
dec
scas
fadds
dec
mov
rclb
xor
pushf
jecxz
rcrb
scas
dec
movsl
dec
xor
pushf
loopne
mov
cmpl
add
cmp
fnstcw
rcrl
daa
mov
mov
leave
dec
xchg
jmp
mov
or
test
or
push
rcr
dec
or
loop
mov
jnp
incb
cltd
xchg
ss
aad
mov
adc
daa
and
mov
or
sub
or
mov
js
or
and
jecxz
testl
inc
subb
jno
lea
bound
inc
push
pop
xchg
xor
pop
fisttpl
push
lock
xor
mov
add
gs
cld
testl
scas
push
popl
sub
sub
pop
cmp
xorl
push
adc
iret
in
lret
imul
ret
lahf
inc
pop
mov
xchg
icebp
jle
add
pushw
daa
mov
cmp
xor
das
xchg
pop
sub
pushf
jmp
loope
ret
xlat
fildl
xlat
sub
ror
test
pop
addr16
xchg
mov
inc
mov
out
cli
fidivrs
sahf
mov
fisttpll
fcomp
xchg
mov
dec
cmp
xchg
out
add
scas
fsubrl
cmc
add
test
mov
mov
adcb
and
mov
push
dec
jge
mov
mov
inc
mov
cli
pop
xchg
fwait
mov
dec
sub
test
jne
pop
xor
bound
nop
push
mov
cmp
aad
int
pop
movsl
pop
push
mov
cli
test
ficompl
dec
sbb
cs
lret
adc
mov
adc
cmpl
imul
hlt
clc
bound
fwait
movsb
adc
dec
filds
jle
mov
scas
dec
mov
iret
inc
pop
add
lds
push
sub
or
pop
cmp
fcmovnbe
imul
shlb
xchg
xor
cltd
jns
adc
test
dec
push
fidivrl
cmp
in
and
inc
cmp
sub
in
pop
mov
stos
push
cmp
sub
dec
sahf
xchg
ss
popf
clc
xor
adc
cld
rorb
orb
lret
popf
or
cmp
pop
mov
mov
push
insl
dec
sub
mov
nop
lret
and
jne
mov
dec
sbb
mov
mov
dec
jne
and
sbb
mov
mov
loope
xchg
mov
movsb
and
mov
pop
fldt
cmc
push
icebp
mov
mov
add
jno
pop
int3
mov
mov
pop
push
out
push
and
iret
and
add
out
mov
adc
or
dec
sub
je
loope
scas
mov
std
cmpb
sub
push
pop
aad
cli
lea
dec
pop
xchg
pop
cmc
xor
jne
push
pop
test
hlt
shlb
mov
ljmp
rclb
mov
sub
pop
cmpsl
bound
and
push
ja
lock
je
js
and
in
test
clc
mov
lods
add
pop
rolb
dec
leave
or
and
shll
adc
push
popf
push
rcr
and
dec
mov
xorl
rolb
divb
pop
cltd
sbb
mov
pop
les
fcmovne
jge
jmp
dec
mov
leave
jne
movsl
add
outsl
mov
pop
pop
mull
cld
lret
int3
xchg
push
sub
inc
sbb
and
xchg
gs
fimuls
inc
fwait
lcall
pop
daa
pop
jb
or
sbb
adc
inc
ds
call
ret
adc
cwtl
jae
pusha
push
and
dec
insb
sbb
rcrb
scas
inc
ret
mov
test
loopne
cwtl
pop
stos
mov
lds
scas
in
pop
push
pop
adc
push
xchg
jp
rolb
sbb
push
cmp
jae
into
dec
adc
xchg
or
jg
es
pop
data16
sbb
das
mov
push
fisttps
adc
out
shlb
sub
sub
xor
push
cmpsb
push
cli
and
add
jo
out
push
inc
in
in
jo
mov
sbb
adc
jno
sbb
cmovl
ds
imul
stc
cli
mov
das
cmpb
loopne
or
orl
mov
fidivrl
ret
fnstenv
test
jno
dec
aas
push
aaa
mov
cs
fwait
sbb
mov
mov
scas
packssdw
into
cmc
les
dec
or
push
cli
xor
fldl
add
shll
sub
fisttps
cli
mov
xor
inc
adc
mov
mov
int
pop
daa
leave
into
add
lcall
and
pop
pop
lcall
rcl
adc
in
roll
icebp
jns
call
dec
aad
repnz
cs
sbb
movsl
lea
int3
push
fcmovbe
jae
mov
mov
xor
mov
mov
das
divl
push
popf
inc
jecxz
sub
outsl
icebp
loope
xchg
cmp
insb
mov
enter
cmp
jnp
pop
and
xchg
adc
cmc
divb
fists
sbb
adc
jge
imul
roll
sbb
pop
loop
xchg
pusha
imul
mov
push
dec
dec
cmp
repz
sbb
dec
and
scas
lea
mov
mov
cli
mov
pop
out
mov
addr16
and
pop
and
popf
adc
xchg
xor
mov
jge
addr16
mov
jle
outsb
rcrb
in
cmp
push
or
imul
rcll
jnp
outsl
push
in
lea
leave
add
sbb
push
stos
out
orb
inc
nop
aam
insb
test
cs
push
pop
mov
test
pushf
xor
out
cmp
sub
dec
inc
das
in
mov
mov
lcall
sbb
xor
and
imul
bound
popa
dec
outsb
mov
adc
sub
lcall
stos
or
push
gs
lcall
inc
and
sbb
sbb
mov
scas
jne
mov
sysenter
mov
in
and
and
jne
xor
xor
cld
dec
cmp
fadds
aam
or
js
adc
mov
cmpsl
scas
pop
pop
cs
or
arpl
mov
mov
leave
mov
sub
jnp
jg
xor
aad
jb
push
push
imul
jne
jp
xchg
sarl
dec
and
in
jb
and
dec
sbb
je
xchg
sbb
aas
out
int
mov
jb
lock
sarb
call
mov
xchg
xlat
ds
jae
dec
out
leave
mov
les
stos
mov
jnp
popl
jg
adc
pop
je
aad
add
push
inc
cmp
pop
cmc
lods
jmp
repz
movsb
xor
loop
popa
mov
and
adc
push
fwait
sub
xchg
loop
xor
jl
test
pop
cs
movsl
pop
out
roll
inc
dec
add
jp
pop
out
js
int3
dec
sub
nopl
cmpsl
nop
push
and
ljmp
lahf
mov
adc
cmc
adc
cmp
aad
jl
or
out
enter
lock
je
sbb
pop
pop
aas
ja
push
jecxz
xchg
mov
mov
inc
adc
frstor
nop
fdivs
ss
or
fcmovb
xchg
ficoml
xchg
fstl
and
or
popa
imul
xchg
xchg
and
pop
int
sub
out
mov
mov
and
cmp
push
add
lcall
iret
rcl
aas
pop
push
or
pop
pop
sbb
in
mov
test
or
push
dec
adc
popa
mov
testl
xchg
sbb
sbb
xor
push
orb
jl
imul
icebp
mov
jp
popa
jae
dec
mov
cmpsl
pusha
lret
cmp
rolb
sub
adc
push
sbb
ret
mov
dec
cmpsl
sbb
pop
faddp
inc
dec
gs
scas
inc
out
test
test
xor
fmuls
inc
jnp
lds
cmp
mov
movsb
mov
dec
lock
cld
fiaddl
mov
or
push
jecxz
cmp
sbb
iret
negl
xchg
push
stc
sub
add
test
insb
ljmp
aaa
mov
jg
cld
aam
sbb
call
mov
incb
stos
sti
cmp
sub
stos
dec
loopne
jl
lock
js
pop
call
aas
xchg
stos
xchg
cmc
dec
push
mov
sub
inc
out
xchg
call
stc
dec
inc
adc
mov
mov
add
call
adc
pop
mov
lret
and
cmc
stc
inc
sub
adc
out
adc
sbb
cmp
push
mov
mov
push
xor
fisubrl
cmp
je
in
mov
sub
and
stc
imul
push
push
jecxz
mov
inc
fsts
repz
in
mov
lea
pop
fucom
push
push
and
xchg
lods
or
dec
xchg
push
mov
push
xor
call
hlt
add
xchg
mov
and
cmc
test
and
rorb
dec
mov
jne
icebp
and
pop
sbb
inc
and
adc
sbb
inc
cli
mov
and
dec
jns
sbb
stc
jmp
out
mov
mov
out
loop
and
out
and
out
mov
inc
xchg
je
ret
mov
cmp
xor
sti
shld
push
dec
ljmp
cmc
xchg
add
lret
lret
xchg
pushf
inc
xchg
sub
arpl
shlb
arpl
scas
inc
decb
hlt
add
mov
mov
jge
sbb
or
sarl
dec
sub
int
mov
jnp
lds
jbe
cmp
testb
loop
stos
bound
outsl
sbb
push
imull
pop
xchg
cmpl
nop
xor
ss
cmpsl
mov
andb
pop
pop
ss
ds
adc
pop
push
mov
dec
inc
sbb
dec
mov
test
ud1
mov
mov
sub
and
cmpsl
mov
jae
mov
xor
test
adc
mov
ffree
sub
scas
push
sbb
or
ret
add
dec
out
push
push
cmp
lea
or
repz
push
dec
cmp
sub
mov
dec
and
fiadds
stos
test
movsl
cmp
dec
mov
in
jmp
xor
sbb
pop
ror
inc
lret
pop
add
clc
mov
popa
les
xchg
loop
in
xor
mov
ja
inc
shrl
fs
cli
stos
mov
repz
jl
insb
dec
nop
fdivr
sarb
push
cld
push
movsl
push
fs
mov
sub
imul
adc
shrb
std
push
frstor
push
mov
andb
sbb
mov
or
xchg
push
test
inc
hlt
adc
cs
pop
gs
mov
push
jnp
lret
mov
dec
adc
repz
pop
in
addr16
std
fadd
addr16
or
rcll
or
call
mov
inc
jmp
pop
in
pop
mov
adc
xchg
add
adc
addr16
mov
push
out
dec
out
mov
in
pop
inc
mov
movsl
in
scas
test
jae
cmp
popa
lret
add
lods
arpl
mov
nop
data16
cli
xchg
enter
fbld
je
pop
push
cmp
and
popf
scas
stos
jae
aam
sbb
inc
fabs
test
aad
jne
pop
rclb
insb
data16
test
xor
loop
scas
pop
add
sub
xor
lock
inc
xor
mov
and
sub
jbe
sbb
sub
xor
aam
xor
mov
insb
sbb
movb
xchg
lds
lret
out
mov
jns
out
push
into
inc
pop
inc
cli
subl
pop
clc
inc
inc
inc
dec
pop
cmpsl
mov
ret
and
push
iret
or
js
mov
cld
mov
sbb
js
repnz
aaa
mov
clc
pop
push
pop
and
cmpsl
xchg
adc
pop
mov
push
add
push
aam
mov
xor
shlb
mov
loope
sbb
call
movsb
inc
pop
sub
mov
rcrl
jnp
in
jle
enter
cmp
jae
mov
xchg
jbe
insb
lahf
popf
jmp
cltd
cltd
pop
dec
pop
inc
xchg
pop
daa
flds
btc
rcrl
mov
xor
aam
sub
push
inc
insl
sarl
loop
out
dec
sbb
imul
cmp
or
cmp
loopne
push
push
movsl
in
pop
pop
xchg
and
adc
xchg
dec
mov
ret
mov
loope
rcr
insb
fidivrs
or
inc
adc
gs
mov
mov
mov
ds
jecxz
bnd
js
push
lcall
popa
mov
mov
ret
mov
dec
or
lahf
push
mov
mov
imul
sbb
sub
mov
jg
gs
and
jno
mov
and
adc
mov
jmp
add
push
mov
shrl
fwait
leave
outsl
dec
jle
add
cmpl
popa
add
cmp
sbb
int
dec
mov
cmp
mov
shrb
ret
stos
es
mov
int
mov
inc
jp
inc
ljmp
jp
lds
add
jmp
daa
jno
xor
jbe
lods
lds
or
insb
push
es
testl
mov
lcall
pop
and
dec
or
pop
mov
mov
cmp
mov
cmc
dec
mov
ss
aam
psraw
sub
cmc
xor
nop
sub
fwait
pushf
inc
pop
cld
pushf
out
mov
or
incb
flds
jge
or
aas
sbb
icebp
mov
add
mov
mov
ljmp
mov
sub
jae
jecxz
inc
inc
mov
and
dec
popf
lods
or
stos
gs
out
push
push
cmove
jae
addr16
jmp
fstpt
das
mov
in
orb
xor
push
pop
mov
xchg
test
aaa
test
scas
xor
mov
dec
loop
test
mov
push
jmp
and
mov
xchg
pop
xor
sub
pop
pop
add
jmp
xor
popa
lds
cmp
jle
mov
in
jle
xor
sbb
inc
push
xchg
or
dec
jmp
divl
std
xchg
fnclex
test
gs
mov
roll
icebp
pop
lret
in
pop
addb
mov
popf
testb
popa
in
jb
jns
pushf
cmpl
inc
test
adcl
into
inc
hlt
popf
mov
cld
sbb
sub
imul
pop
jo
and
aas
ret
test
mov
jge
or
jno
fadds
mov
loope
mov
int
loope
nop
xor
cmp
rclb
ss
pop
cwtl
push
and
inc
adc
addl
bound
into
pusha
jo
cmpsb
clc
nop
push
sbb
pop
sbb
shrb
cld
stc
in
mov
lods
push
shlb
lret
pop
mov
lret
jp
adc
and
mov
stos
dec
imul
call
pop
push
insl
lods
ds
lods
or
addr16
lods
out
mov
push
mov
mov
mov
cltd
mov
punpckhwd
dec
inc
cli
test
ret
mov
scas
inc
incb
pop
std
jmp
xchg
iret
dec
stos
inc
insl
add
push
iret
dec
or
fisubrs
cmp
rcrl
push
xchg
scas
shrb
push
std
xchg
ret
inc
push
jne
jae
lret
push
pop
andb
sbb
push
outsl
int3
orps
push
popf
neg
lods
scas
sti
sub
xchg
push
or
ror
imul
shr
fldcw
scas
mov
nop
xlat
fadds
adc
xlat
inc
adc
mov
daa
xor
cs
xor
aad
or
xchg
in
insb
xchg
mov
jmp
sub
into
ja
in
mov
xchg
push
fisubrl
test
mov
xor
and
xchg
push
xor
xor
xchg
sahf
stos
divb
xor
jl
xorl
mov
test
cld
dec
scas
popa
adc
sbb
stc
nop
pop
mov
xchg
jecxz
mov
push
push
stos
scas
mov
inc
xchg
xchg
pop
mov
sahf
imul
jno
test
push
mov
call
filds
fldenv
inc
bound
inc
mov
add
inc
test
adc
xor
jb
stos
jg
dec
or
insb
xchg
or
js
xchg
jmp
dec
push
insl
lea
mov
mov
mov
testl
jns
lea
pop
xchg
outsb
fs
mov
or
or
adc
fisubrl
add
mov
in
and
nop
or
mov
shrl
call
dec
std
sub
iret
test
adc
and
dec
in
pop
dec
fisubl
int
push
outsb
push
mov
bound
mov
pop
jbe
dec
cltd
cmp
inc
out
repnz
aaa
sarb
mov
inc
sub
int3
pop
lret
flds
pop
call
in
hlt
mov
in
push
inc
cmp
cmp
mov
sbb
dec
or
mov
jg
into
test
mov
add
sarb
and
cmpsl
cmp
xchg
mov
and
push
jno
sub
push
test
fadds
subb
ds
mov
fiaddl
test
fisubrl
or
test
insl
adc
ret
inc
int
fnsave
mov
push
pop
mov
sub
ftst
out
push
push
leave
mov
test
bound
and
cmp
lods
jecxz
imul
ret
stos
xchg
mov
xor
popa
mov
scas
loopne
jecxz
push
pop
ja
xchg
inc
stc
out
arpl
sub
lods
pop
imul
inc
fs
jnp
imul
call
xchg
mov
out
sub
data16
imul
out
and
mov
movsl
popf
js
xchg
movb
jae
xchg
pop
adc
ss
and
push
sbb
scas
mov
inc
test
lret
or
push
cmp
jns
rolb
repnz
mov
dec
push
or
xchg
cmp
cmp
mov
into
mov
inc
int
pop
cmp
into
pop
out
or
test
gs
mov
sub
inc
icebp
and
jl
es
neg
mov
push
xchg
test
inc
lahf
scas
push
stos
mov
shr
mov
jecxz
pause
inc
loopne
pop
decb
push
fldenv
leave
adc
enter
push
in
mov
mov
jge
in
aas
ja
gs
adc
in
jmp
imul
mov
push
imul
sub
dec
lock
in
jbe
enter
mov
pop
or
adcl
and
jb
jns
xchg
mov
cmp
das
mov
mov
sbb
lret
adc
or
mov
lret
imul
sti
aaa
xor
xor
rcrl
in
out
adc
shlb
loop
push
pop
iret
cmpsb
cli
decb
jl
lea
imul
push
push
adc
or
iret
repnz
sar
mov
icebp
or
das
hlt
adc
push
out
lret
movsl
call
add
mov
xor
adc
mov
adc
pop
inc
mov
mov
pop
push
lret
hlt
mov
lcall
dec
sbb
rcr
dec
std
test
aad
push
adc
mov
test
push
pop
mov
ds
ds
or
add
movsb
pop
lds
out
push
inc
rolb
xchg
add
jg
insl
gs
or
push
mov
rolb
jbe
imul
js
push
jbe
adc
push
xchg
gs
add
xchg
loope
fidivrs
cmpsl
and
adc
addr16
cmpsl
push
cld
or
mov
ja
add
pop
dec
pop
popf
sub
mov
mov
arpl
adc
movsb
iret
push
jg
xchg
push
xor
call
pop
roll
dec
mov
add
pop
outsl
push
jmp
pop
pusha
loopne
push
adc
add
test
dec
pop
gs
cmc
add
ret
mov
test
popa
add
mov
jo
xchg
insb
aas
andl
dec
xor
out
sbb
outsl
push
sbb
fdivs
push
mov
imulb
ja
pop
mov
clc
mov
aam
popa
add
pop
push
xor
pop
aam
sbb
insl
mov
or
loope
push
repnz
add
movsl
std
and
sub
jb
cli
inc
loop
repnz
cmp
jmp
lods
lds
add
jns
je
mov
aam
xchg
rcrl
rorl
dec
icebp
ds
roll
add
pop
call
outsl
xlat
aaa
jmp
pop
or
daa
sub
pop
cmc
fs
jne
sub
ljmp
ficoms
pop
jbe
cmpsb
push
inc
sbb
sub
in
repnz
stos
xor
xchg
dec
stos
sbb
mov
xor
mov
push
test
inc
into
lods
lcall
adc
xor
adc
ljmp
mov
pop
pusha
sub
test
loopne
cli
ja
fs
jne
lods
fcmovu
pop
adc
xchg
or
das
les
stc
xchg
in
push
fwait
je
repz
mov
pop
add
push
and
mov
push
or
push
fldcw
repnz
cmpsb
imul
xchg
loope
psubsb
in
and
cmp
sbb
pop
sub
cmp
xchg
repnz
xlat
dec
das
fldl
mov
scas
aam
adc
pop
das
sub
pusha
sub
push
dec
mull
addr16
xchg
aas
push
cmpsl
jno
insb
out
sti
or
mov
mov
pop
fildl
push
sub
pop
arpl
lea
cld
test
cmpsl
and
test
popf
and
mov
test
loopne
in
lahf
fs
dec
xor
add
and
dec
jo
fnsave
cmpsl
cmp
pop
add
ljmp
mov
pop
fcomps
sarb
or
inc
xchg
das
roll
loop
lock
addr16
jl
xchg
movb
cli
jecxz
and
fimuls
sub
dec
pop
push
mul
cmp
push
addl
daa
adc
movsl
mov
and
mulb
ja
cmpsl
inc
fwait
mov
pop
ja
lcall
rolb
sbb
sahf
ds
ljmp
test
cld
push
jmp
pop
sub
jl
cmpl
lahf
sub
mov
jle
addr16
loopne
mov
outsl
adc
repz
dec
push
lea
lock
mov
or
dec
fnstsw
mov
lret
mov
cmp
pop
mov
mov
lcall
sbb
adc
pusha
pop
movl
loope
call
dec
inc
or
das
movsb
test
sbb
fisubrs
dec
and
ljmp
jo
aam
mov
inc
fildl
cmp
mov
vmptrld
inc
shrb
mov
mov
addb
xor
test
lock
xchg
aaa
xchg
mov
dec
sub
addr16
push
ljmp
movsl
jns
xor
clc
insl
add
je
xchg
push
fsts
inc
shlb
cmp
adcb
xchg
lahf
push
repz
lcall
push
mov
and
jnp
aam
pushf
pop
push
pop
xchg
fldl
mov
jmp
xchg
inc
mov
add
test
push
ret
incb
loopne
loop
imul
cs
xor
and
ffree
sbb
sbb
ljmp
jp
push
sbb
jae
sbb
loopne
adc
sub
jns
adc
testl
mov
cltd
and
ret
cmp
add
lods
cmp
in
es
push
xlat
inc
iret
push
and
mov
inc
fstps
lret
xchg
ljmp
pop
mov
pop
pop
xrelease
and
fstpl
sub
inc
push
inc
test
sahf
xchg
mov
nop
cmc
inc
dec
and
xor
rcr
pop
in
push
mov
es
and
and
lcall
pop
xchg
int3
in
dec
pushl
arpl
mov
jno
cwtl
sarb
fiadds
sbb
inc
jecxz
or
xchg
add
enter
js
rorb
std
dec
mov
cmp
shll
iret
mov
xchg
ret
sbb
jge
pop
xor
add
jae
lahf
aas
fistl
pushl
lcall
out
mov
dec
outsb
pop
rol
sbb
imul
std
mov
out
xlat
aas
add
pop
popa
xor
jns
mov
pop
dec
cmpsl
cmpsb
stc
push
cmpsl
jmp
xor
xchg
xchg
mov
xor
sbb
inc
roll
mov
jmp
out
int
adc
in
jnp
lahf
xchg
sbb
mov
mov
cmp
subb
sub
js
nop
dec
jg
jecxz
adc
lea
sub
fildl
loop
aad
sbb
lahf
and
jp
movsb
jb
rcrl
int3
lret
push
add
ja
cmp
fstpl
fstp
stos
out
scas
in
xchg
ret
adc
in
fdivrs
jge
stos
test
mov
fwait
pop
orb
and
mov
mov
add
outsb
mov
mov
ja
js
jp
mov
or
dec
mov
out
repz
dec
dec
jge
out
lret
lahf
testb
cmpsl
cld
scas
cmpsb
xchg
pop
lea
les
push
or
int
test
mov
mov
test
out
mov
adc
jg
je
enter
fmull
scas
sbb
insl
adc
mov
ja
sti
pop
jo
lods
sbb
loope
jns
mov
sub
fiaddl
test
mov
xchg
cmpsl
and
xchg
jno
jl
je
fwait
lods
das
test
stos
cmc
out
test
inc
lcall
in
cmp
sub
xor
imul
loope
fmull
flds
lret
das
xchg
mov
leave
push
jnp
out
out
cmpsl
fmull
cli
ljmp
jbe
arpl
mov
fmuls
sti
jnp
cmpsb
mov
ficoms
or
imul
add
ja
mov
xchg
repnz
ret
daa
jecxz
imul
in
xchg
inc
jge
mov
mov
mov
dec
daa
cmp
jne
mov
int3
jl
sbb
pushf
push
add
sbb
sub
add
adc
adc
sbb
cltd
adc
add
sbb
dec
test
cmp
cmp
sub
repnz
orb
enter
ja
cmp
mov
fstpl
mov
or
or
mov
loopne
inc
inc
call
adc
cmp
mov
adc
clc
cmpsb
pop
scas
icebp
negl
cltd
mov
popf
repnz
jo
orl
loop
cmp
jbe
jmp
push
or
xchg
jecxz
fmuls
int
sbb
pop
pusha
push
testb
hlt
adc
icebp
or
push
mov
jl
mov
pop
test
ds
pop
mov
inc
xor
cltd
int
pop
les
pop
add
xor
mov
cld
dec
sub
mov
push
scas
out
fs
cmp
daa
aad
add
adc
push
pop
sub
adcl
imul
ret
insl
loopne
push
ret
jmp
mov
mov
push
roll
jns
mov
in
xor
and
vpunpcklbw
fs
pop
out
cmpsb
mov
mov
gs
scas
lea
mov
loopne
jo
cmc
jl
mov
xor
xchg
stos
mov
stc
inc
push
jae
mov
mov
cmp
popf
sahf
xchg
sbb
mov
test
cmp
fldl
gs
lods
rcr
adcl
ljmp
aaa
pop
test
push
std
and
lea
mov
lds
mov
jno
jno
outsb
add
lock
xchg
insb
mov
lahf
cmc
shr
les
dec
dec
push
mov
outsl
jnp
or
xchg
pop
add
cli
movb
test
aas
cmp
pop
insl
rclb
sub
mov
push
pop
out
sub
sbb
mov
cld
add
mov
ss
sar
fstpt
dec
sbbl
push
inc
clc
jg
xchg
inc
mov
lea
and
sbb
mov
jbe
movsl
add
bound
adc
data16
and
jne
or
mov
lea
and
popf
out
pop
xchg
or
call
cltd
movsb
mov
pop
mov
movsl
pop
sub
sbb
mov
jmp
nop
mov
pushf
pop
pop
adc
sub
and
ds
sbb
push
or
mov
in
inc
ljmp
arpl
mov
adc
pop
cmp
ljmp
test
jle
xor
pop
das
inc
inc
or
jmp
imul
push
rcll
ja
push
leave
or
cmp
pop
xchg
lret
jno
mov
aad
ret
enter
cmp
sub
sar
inc
dec
mov
push
rep
lock
sub
jl
movsb
movsb
mov
sahf
loopne
add
pop
or
xlat
popf
sub
insb
mov
int3
shl
sub
mov
shl
mov
call
cli
mov
lcall
addr16
xlat
icebp
loope
test
inc
cmpsb
add
push
cmp
push
scas
or
loopne
fisttps
fsub
adc
dec
lods
lds
imul
divl
cmp
gs
add
lret
out
aam
insb
inc
sbb
scas
imull
push
jns
mov
adc
pop
ds
pop
aam
fiaddl
pop
data16
in
and
dec
add
add
and
mov
outsb
aas
std
mov
dec
xor
ja
dec
push
mov
addr16
mov
inc
and
sub
xor
mov
add
lret
pop
mov
int3
push
or
pop
call
mov
lock
or
lods
lods
or
jg
mov
pushf
insb
pop
xor
push
ret
xchg
dec
jns
hlt
jg
pop
jno
sbb
icebp
inc
mov
out
pushl
je
insl
mov
inc
mov
loope
push
push
inc
mov
in
and
mov
cmp
inc
cmpb
stc
cmc
int
out
jecxz
sbb
jl
adcb
leave
xor
lods
int3
dec
js
addr16
loopne
mov
mov
push
fmul
add
fildll
nop
mov
jbe
pop
dec
decb
xchg
scas
inc
cmp
adc
insl
divl
std
push
int3
fimull
sub
dec
cmpsl
xchg
add
pop
int3
sub
ficoms
xor
call
xor
mov
pop
and
test
fwait
xchg
xor
sub
jae
inc
out
lods
sbb
lahf
and
iret
cmp
pop
fcomps
not
inc
jecxz
pop
adc
mov
inc
pusha
jae
dec
xor
mov
push
inc
dec
sbb
and
pop
in
pop
int
imul
cmp
add
push
jno
mov
scas
daa
addr16
or
xchg
aaa
movsb
pop
repz
daa
push
fildl
icebp
adcl
movsl
push
jne
push
addr16
fcom
push
add
dec
and
movsl
outsb
test
xchg
sbbl
pop
xchg
pop
cmp
push
into
movsb
mov
cmpsl
sub
jecxz
mov
add
fnstcw
faddl
add
jmp
out
lea
bound
push
es
push
in
push
push
sub
faddl
loopne
jmp
add
xor
xchg
fs
dec
sub
sti
mov
or
repz
ja
add
and
add
push
mov
repnz
jecxz
push
dec
cmp
arpl
mov
push
mov
out
lods
js
jnp
push
sbb
pop
pusha
push
push
movsl
shll
paddb
lea
mov
pusha
js
fcmovnu
cli
add
sub
in
cli
jge
lahf
or
dec
push
and
xchg
stos
lods
std
out
test
sbb
popa
push
and
dec
or
sub
push
adc
lock
hlt
or
loop
cmc
mov
dec
gs
cli
mov
incb
and
dec
cmpl
cmpsb
lahf
adc
jbe
repz
int
daa
outsl
stos
fiaddl
jb
or
stos
xor
push
out
cmp
bound
and
in
in
pop
dec
insl
cmp
push
ds
movsb
or
cmovs
ret
cmp
jge
mov
dec
mov
loopne
mov
icebp
out
push
sbb
and
into
add
lcall
out
movsb
xor
repnz
cwtl
push
jae
popf
fst
mov
and
sbb
inc
xchg
xor
repnz
shrl
loopne
xchg
mov
pop
jge
push
sbbb
cltd
cmp
push
push
ret
fidivs
xchg
cmpsb
subl
in
inc
jl
icebp
arpl
xor
xor
adc
and
or
cmp
jne
pop
in
jae
clc
mov
mov
add
xchg
ret
add
xchg
lea
fst
or
xor
rclb
mov
ja
nop
fisubs
call
outsl
add
mov
jns
jne
mov
dec
popf
add
stc
adc
repnz
imul
movsl
push
daa
fisttps
in
aad
insl
pop
leave
repz
in
ss
pop
inc
sub
scas
adc
mov
leave
lret
jns
rorl
mov
inc
jb
push
mov
mov
in
test
stos
fucom
int
jb
sbb
pop
outsl
xor
adc
leave
dec
outsb
push
setl
repz
sbb
testl
mov
jle
adc
mov
fnstsw
jg
in
mov
ret
cmp
sbb
pop
pushf
aas
dec
sbb
mov
lret
inc
inc
lods
xchg
sub
xor
mov
scas
and
scas
mov
xchg
scas
cld
imul
add
call
pop
push
and
inc
sub
mov
test
jp
jmp
idivl
lods
jl
xchg
movsb
into
xor
ljmp
pop
xchg
rcrb
pop
push
subl
ss
data16
xor
jmp
lods
jmp
push
mov
and
shlb
jmp
push
adc
inc
int3
sub
les
lock
dec
mov
mov
aaa
and
sub
imul
inc
cmpsl
add
xor
add
fs
sbb
data16
adc
aaa
jle
mov
lret
push
int
add
dec
adc
mov
pop
mov
cmpb
out
test
daa
jmp
ljmp
rorl
pusha
mov
mov
out
jns
in
mov
mov
or
mov
imul
fucomi
cmp
or
cli
push
std
ds
out
addr16
xor
int
sahf
push
pusha
push
mov
scas
sub
mov
xor
rcll
cmp
dec
push
pop
lds
cli
xor
push
add
lea
jg
jb
add
mov
xor
mov
je
fbstp
popa
jle
out
ss
jb
je
aam
in
adc
inc
in
jb
or
sbb
dec
lock
ljmp
fimuls
inc
push
fmuls
adc
or
movsl
or
cwtl
and
cmp
cmc
xchg
xorl
sahf
subl
or
fldl
mov
subb
add
idiv
and
rcl
shrl
movsb
jnp
js
cmc
addl
jb
es
or
sbb
imul
add
mov
hlt
out
mov
push
push
xchg
pop
shr
frstor
sahf
cs
push
lahf
data16
flds
add
mov
or
mov
aam
jl
mov
sbb
or
and
ss
nop
lea
cli
fwait
cmp
daa
add
pop
int
shl
pop
iret
jno
inc
ljmp
adc
add
jnp
adc
inc
movl
jp
invd
shlb
fisttpll
pop
mov
pop
ffree
pop
xlat
out
mov
mov
pop
repnz
pop
push
lods
cmp
mov
mov
push
jnp
cmp
fidivrl
jg
leave
jb
jle
sub
add
pop
push
stos
mov
xor
push
ss
xchg
fimuls
sbb
fcompl
dec
scas
adc
pop
iret
aaa
sbbl
loope
mov
fiadds
xor
rcll
out
sbb
dec
pop
call
mov
xor
mov
sbb
xchg
inc
cmpsb
jo
call
push
cmpsl
outsl
xlat
sbb
rorb
int3
push
movsl
out
dec
dec
or
xchg
or
jns
jg
lret
sbb
leave
inc
and
adc
scas
inc
xlat
jb
sbb
jb
loopne
popf
jmp
mov
jae
stos
mov
jbe
dec
hlt
fwait
cmp
jno
push
pop
and
and
pop
xor
inc
lods
xchg
movsb
cmpsl
pop
lea
iret
and
inc
pop
push
jmp
dec
mov
out
data16
xchg
sti
add
push
or
test
inc
add
lret
cmp
push
adc
cmpsb
nop
dec
data16
push
jmp
call
mov
adc
call
mov
ljmp
mov
xor
fldl
cs
inc
jo,pn
sub
les
call
in
sub
mov
mov
in
test
cmp
fsubs
inc
test
mov
ja
outsb
out
dec
sub
or
push
push
xchg
ja
ds
pop
jl
cltd
mov
mov
fimuls
inc
mov
repz
xchg
xchg
sti
and
inc
and
mov
nop
add
mov
pushf
int3
xor
imul
pop
xor
mov
adc
leave
int3
mov
fwait
mov
xor
and
mov
arpl
mov
int
xor
cmp
xor
das
push
lcall
imul
das
add
xor
lcall
mov
mov
mov
dec
inc
and
jp
shlb
popf
imul
jae
adc
outsl
dec
fdivl
mov
jl
pop
in
outsl
cmc
fstps
xchg
stc
xor
int
nop
inc
scas
andl
cltd
cmp
jbe
jg
mov
cmpsb
cmpsl
mov
fs
rcl
add
out
jno
jg
addr16
fcmove
pop
aam
cmp
cmp
mov
cli
inc
push
cmp
scas
into
sbb
out
cld
aam
or
lods
mov
negb
jecxz
adc
adc
sub
sub
mov
ja
dec
jg
xor
mov
lods
pop
loope
push
xorb
and
mov
jmp
sub
adc
stos
ret
out
imul
fsubrl
enter
push
or
sti
adc
pop
jno
std
and
enter
divb
hlt
rclb
mov
inc
in
sub
or
sarb
aaa
jnp
dec
and
aaa
push
shlb
fisttpl
les
cmp
stos
insl
add
mov
es
xchg
add
and
push
pusha
pushf
push
call
jmp
push
stos
iret
cld
sbb
int
pop
cmpsb
out
jns
notl
pop
cmpsb
rcll
cmpsb
aam
or
cmp
mov
adc
loope
add
imul
sub
xchg
shrl
jae
stos
xor
outsl
and
pusha
mov
sub
lods
stos
push
sub
cmp
jg
sarl
out
dec
loopne
pushf
mov
mov
cwtl
mov
push
pop
jp
mov
xchg
jae
iret
sub
mov
jb
pop
push
enter
es
sub
gs
and
pop
rolb
ffreep
xlat
call
orb
clc
jecxz
fildl
fidivrs
stos
popa
adc
in
mov
je
mov
ret
test
add
add
mov
fwait
xor
mov
or
loopne
cwtl
ds
mov
mov
push
mov
mov
inc
jg
push
fistpl
push
or
xor
xor
xor
mov
fmul
push
popf
jecxz
cltd
jnp
out
and
mov
mov
xchg
lahf
inc
mov
sbb
fwait
cli
dec
jmp
out
inc
sub
insl
pop
std
clc
inc
enter
aam
sub
mov
test
sbb
adc
fnstenv
pushf
mov
ja
ret
or
and
pusha
mov
push
mov
cmp
movl
push
jmp
es
ds
cmp
scas
sub
movsb
loop
lahf
mov
pop
push
in
arpl
in
mov
fmuls
lods
or
mull
and
cmc
out
idiv
push
je
mov
out
pop
incb
or
movsb
xchg
add
pushf
ds
ret
ds
ja
bound
sbb
iret
les
movsb
ret
push
xor
mov
dec
in
call
xor
lcall
push
pop
pop
xchg
addr16
jne
ficompl
pop
cmp
iret
and
jge
mov
in
or
push
or
test
xchg
cmp
cmc
add
jae
int
cmc
sbb
bnd
sbb
pop
lds
mov
neg
pushf
adc
adc
inc
jecxz
rol
imul
mov
fsubl
popf
shlb
mov
xchg
mov
out
adc
adc
lods
fisubrl
push
cmp
gs
lahf
int3
jb
mov
adc
stos
cmpsb
ficoms
lods
fcoms
addr16
stos
sub
insl
leave
pop
mov
push
lea
repnz
in
in
mov
fwait
scas
outsl
loopne
push
push
or
je
adc
addr16
xchg
pop
repz
mov
lock
inc
es
inc
lds
cltd
clc
repnz
pop
push
lock
mov
sub
mov
das
movsl
adc
gs
aaa
mov
xchg
dec
cltd
movsl
push
jno
inc
loope
ficomps
pop
mov
push
hlt
insb
es
and
jo
les
xchg
movl
push
lods
mov
xor
sbb
and
xchg
outsb
bound
addb
bound
ds
popa
rclb
in
cmpsl
lret
in
jae
movsl
xchg
lcall
movsl
xor
aam
or
inc
cmpsb
jmp
xor
and
leave
inc
rclb
pop
test
ror
push
pop
cld
scas
rorb
pop
lods
fisubs
mov
ret
es
adc
mov
or
push
push
mov
ret
fsubrs
sub
jae
add
pusha
stos
stos
repnz
dec
addb
out
jae
repz
pop
mov
inc
pop
pop
sbbl
mov
das
mov
jg
fsubp
mov
testb
int3
add
incb
movsb
loopne
loopne
dec
xlat
lret
cmp
push
push
je
inc
popf
stc
mov
xchg
stc
sub
outsl
jo
pop
ljmp
cmp
add
shll
in
iret
xor
rorl
movsb
mov
xchg
test
dec
sub
test
ds
jl
out
std
cmp
data16
add
outsl
lret
out
jns
pop
call
dec
inc
mov
testl
enter
aaa
loopne
pop
mov
scas
and
jg
jns
fstpt
ret
sti
inc
or
dec
push
test
and
inc
movzbl
punpckhwd
lods
je
loopne
jmp
into
adc
sbb
cmp
lea
xchg
mov
cmp
jg
lcall
lods
int
mov
pop
ljmp
or
inc
jbe
pop
cmc
xchg
cs
fdivs
cmp
mov
adc
dec
dec
aam
or
fbld
mov
sub
dec
int
cs
addr16
adc
insl
mov
shrl
dec
mov
sub
fnstcw
sub
bnd
imul
shl
mov
repnz
dec
jnp
mov
xor
and
jne
push
mov
addr16
out
cld
scas
mov
shrl
adc
hlt
sub
mov
imul
inc
inc
mov
sub
test
mov
lea
jmp
mov
dec
jne
rcrl
dec
jne
jae
xor
in
mov
out
sbb
jnp
and
repz
lret
pop
add
mov
jne
sbb
popf
jo
inc
dec
int3
xchg
cli
ret
scas
scas
ja
dec
add
mov
enter
inc
inc
jmp
xchg
adc
pop
jle
js
mov
mov
sbbb
in
jns
cmp
push
das
mov
jae
insl
lret
rcl
xlat
ret
mov
icebp
sub
pop
cltd
stc
das
cmc
mov
push
popa
ficoml
cwtl
mov
enter
mov
lds
xchg
mov
mov
xchg
mov
loope
jnp
push
jle
push
pop
jo
pushf
add
hlt
int3
jnp
fisttpl
inc
stos
jg
movsl
mov
xor
jne
test
mov
or
mov
lcall
jmp
jecxz
pop
enter
jl
and
push
xchg
sar
or
xor
sbb
loop
and
out
inc
lods
in
sbb
repnz
stos
sti
push
sbb
out
imul
mov
and
fsubl
cmc
mov
mov
sub
into
cmp
inc
inc
push
das
lcall
mov
popf
out
dec
mov
test
leave
jns
sub
inc
es
jle
and
cmp
mov
js
mov
push
jge
or
aad
into
jnp
nop
repz
ljmp
sub
mov
and
loop
dec
mov
jns
shrl
mov
xor
sbb
test
cmp
dec
push
mov
xor
or
xchg
push
sbb
adc
and
jno
cmc
jnp
int
roll
pop
scas
in
lds
pushf
mov
ds
enter
movsb
stos
xchg
inc
leave
xchg
movsb
mov
imul
xchg
fstl
pop
into
xchg
jl
mov
xchg
loopne
mov
or
popa
das
jg
pop
mov
pop
inc
dec
repnz
mov
ljmp
cld
movsb
xchg
mov
jp
pop
mov
xor
jmp
push
test
jg
add
adc
bt
lahf
mov
pop
dec
test
xchg
pop
addb
lock
je
fnsave
inc
or
les
mov
enter
fsubrl
sbb
mov
adc
lcall
push
iret
out
lds
movsb
adc
fwait
test
icebp
or
rorl
xor
lea
cmpl
scas
fiadds
mov
push
shl
or
repnz
int
inc
lret
and
shl
sub
rorb
or
movsb
pop
je
xchg
sub
jne
cli
fstl
push
push
ret
mov
clc
and
mov
push
dec
cmp
rcll
das
test
arpl
das
xchg
cmpsl
jecxz
repz
mov
push
or
or
adc
push
stc
inc
out
or
sti
push
in
outsb
xchg
dec
xorl
xchg
insb
in
inc
sub
add
jbe
sub
cmc
fwait
and
aas
lcall
pop
mov
inc
es
ja
lods
add
popa
jl
jle
into
mov
sbb
insb
fbld
and
jno
cmp
mov
dec
inc
xorb
sbb
decl
test
out
jecxz
popf
mov
repnz
pop
lock
insl
mov
cltd
fwait
addr16
sub
pop
xchg
lret
adc
test
out
stc
mov
cmp
iret
lods
adc
push
mov
cmp
shl
xor
cmp
xchg
mov
inc
mov
or
mov
nop
fnsave
pop
int3
cmp
mov
lock
and
xchg
mov
lret
sub
out
int
inc
inc
adc
or
icebp
pop
lcall
lret
lds
inc
push
dec
push
adc
mov
scas
in
inc
repz
test
cld
pushf
mov
pusha
loopne
adc
roll
dec
xchg
icebp
div
nop
call
or
cs
xor
mov
cmp
arpl
lret
mov
sbb
sbbb
jno
sbb
cmpb
int
jp
je
repz
push
cmpsb
jmp
cmp
pusha
das
pop
sub
dec
lds
xor
hlt
pushf
or
lret
imul
xchg
mov
ret
ret
sbb
dec
xor
leave
data16
mov
cmp
enter
push
mov
gs
stos
enter
mov
sbb
add
dec
mov
inc
add
add
jns
jnp
loop
cs
in
out
jl
mov
sbb
xor
xor
lret
es
cwtl
repz
pusha
ret
push
pop
cld
fwait
nop
rclb
in
popa
out
int
push
cmp
repz
push
cmp
cmp
or
jne
cltd
movsb
bound
xor
test
sbb
loopne
jne
pop
push
aas
nop
push
movsb
or
pop
mov
jo
cltd
sub
mov
call
push
cmpl
mov
test
lds
fs
sti
mov
jo
sub
jge
shrl
clc
mov
inc
pop
cmpl
rcrl
xchg
jo
pop
pop
xlat
sub
jnp
subl
and
addr16
xchg
xor
or
jg
aad
out
es
xchg
cmp
popf
xchg
hlt
outsb
sbb
out
test
test
sub
or
mov
pop
push
mov
cmp
popf
mov
xchg
dec
movsl
sub
fs
add
je
arpl
mov
subl
scas
xchg
push
out
addr16
inc
aad
pusha
outsb
inc
sbb
movsb
xor
cmp
xchg
pop
inc
xchg
add
mov
ret
jl
mov
jb
inc
sbb
pop
pop
sbb
stos
inc
flds
stc
adc
mov
aaa
jle
push
lret
jo
fmul
fwait
cmpsl
fdivrl
push
mov
xchg
inc
xlat
insl
push
pop
lahf
adcb
xorb
inc
xchg
push
dec
fcmovnbe
pop
scas
call
cwtl
shll
icebp
and
dec
cmpsl
push
bound
xchg
lahf
cmp
test
xor
and
dec
mov
pop
nop
stos
insb
cltd
pop
mov
xchg
arpl
push
cmp
mov
sub
test
lahf
insl
push
mov
xchg
mov
bound
cs
and
or
inc
lea
pusha
jo
push
fnsave
push
ret
in
nop
add
iret
xchg
inc
and
decb
aas
hlt
inc
sbb
mov
scas
and
test
arpl
cmp
xor
sbb
enter
iret
or
es
cmp
imul
cmp
pop
jle
pop
cs
pop
add
xor
leave
sub
pop
mov
add
jle
pop
xor
jbe
test
cmp
pop
popa
adc
mov
or
or
cmp
mov
pop
mov
cmp
sub
or
fistpll
push
clc
mov
mov
and
sbb
data16
pop
call
pop
jmp
jb
mov
pop
fwait
les
cmp
push
jg
push
mov
outsb
aam
cli
jo
cltd
aam
xor
xchg
mov
rclb
test
xchg
mov
jnp
mov
ja
addr16
jne
cmpb
pop
das
test
add
sub
dec
ljmp
xchg
sbb
decl
loopne
lock
outsb
je
xchg
mov
aam
jnp
into
and
repz
xor
add
cmp
sbb
and
das
lods
cmpsb
int
sub
icebp
mov
push
xchg
adc
inc
mov
in
xlat
push
js
jmp
xchg
add
cli
imul
fistl
inc
dec
insl
out
rcrl
xchg
mov
subl
fdivs
mov
cmp
sti
jo
push
je
xchg
imul
pop
jo
push
push
push
cwtl
rclw
ret
jno
jecxz
or
mov
insb
in
add
test
dec
or
mov
jmp
xorl
fcoms
sbb
insl
pushf
insb
or
jns
xchg
popa
push
fnsave
inc
pop
sub
loopne
xchg
mov
xor
add
and
adc
test
add
cmp
sub
xchg
sub
cmp
jge
dec
loope
or
data16
test
mov
pop
dec
jp
aad
inc
fstpt
cmp
pop
gs
xor
sub
inc
cld
movsb
and
fs
cmpsl
push
and
push
pop
ljmp
inc
insb
out
cmp
sub
jne
push
or
jae
mov
std
loope
xchg
add
sbb
xchg
jno
icebp
mov
test
and
popf
mov
movsb
sbb
adc
push
and
arpl
icebp
push
pop
cli
sti
repz
push
imul
xor
dec
out
dec
mov
xor
js
adc
lock
pop
xor
out
imul
scas
cld
fs
aad
inc
xchg
cmc
int3
sub
int
insl
push
daa
jecxz
cmpl
inc
or
dec
ret
push
fstp
std
mov
jl
or
mov
or
insl
shrb
imul
dec
insb
add
outsl
lret
or
out
sbb
sbb
es
repnz
outsb
adc
jo
stos
xor
lds
push
popa
scas
imul
xchg
dec
or
xchg
sub
cmp
call
lret
in
bound
mov
inc
arpl
and
push
push
popa
cs
xor
push
add
jo
or
in
ret
jnp
adc
outsb
adc
adc
inc
lds
mov
arpl
nop
out
jp
pop
repz
out
cmp
sti
xchg
shrl
mov
pop
mov
not
aas
inc
pop
fistl
lods
mov
loopne
movl
xchg
movsl
orl
inc
iret
pop
push
sbb
test
dec
in
dec
aad
cltd
sbb
sbb
push
aam
lds
imul
mov
sbb
xchg
xchg
adc
test
adcb
stos
mov
and
mov
mov
mov
mov
fsubrs
mov
mov
test
out
iret
out
leave
scas
je
mov
sub
es
push
dec
test
add
or
mov
mov
ret
sbb
adc
data16
clc
xchg
inc
xor
imul
dec
jne
daa
mov
push
mov
ja
xchg
lret
mov
arpl
xchg
mov
mov
sti
xchg
adc
faddp
lds
icebp
sbbb
scas
cmp
mov
data16
xchg
ss
stc
mov
je
mov
jge
sbb
push
int3
prefetch
and
and
push
mov
add
bound
ss
movsb
and
xchg
ljmp
mov
stos
add
pop
stos
sub
inc
shlb
cltd
cmpsl
jl
inc
dec
mov
fiaddl
mov
aad
pop
lds
adc
sub
pop
sub
iret
ljmp
imul
leave
outsb
and
xchg
in
insl
cli
sbb
lds
movb
push
ss
jle
loop
int3
ljmp
xchg
mov
pushf
or
stc
std
push
push
jo
add
repz
enter
fstps
sub
xchg
mov
ret
icebp
data16
int
push
fs
push
out
lods
lea
rol
push
popa
pushf
popa
out
mov
mov
es
lahf
mov
cmp
in
jmp
xor
jp
mov
add
or
pop
and
ss
int3
aam
in
mov
adc
jae
lds
retw
and
cmp
lahf
jmp
in
dec
push
pushfw
test
in
fsubrs
or
dec
cmpsb
stos
lea
push
call
and
cmp
mov
and
or
sub
mov
mov
jae
and
and
dec
sub
stos
adcl
sbb
sub
sub
pushf
lods
mov
xchg
ljmp
cmc
cwtl
adc
mov
test
sti
xor
and
ljmp
adc
sub
xchg
aam
je
je
das
jecxz
imul
js
mov
sbb
loopne
jb
dec
add
pop
sbb
sbb
pop
xor
fwait
rolb
lcall
adc
lahf
and
ja
enter
addr16
pushf
push
mov
mov
or
jg
rcrb
xor
test
movsb
fbstp
xor
cmc
cmc
pop
or
outsb
les
insb
gs
xchg
cld
sbb
int
mull
data16
cmp
adc
jl
popf
scas
mov
stc
das
rorb
shll
fisubrs
ror
push
cmp
fiadds
and
fisubrl
add
xor
mov
adc
and
and
pushl
cmp
cmp
jno
push
cmpl
or
cld
push
aam
out
mov
out
xor
xchg
inc
fnstenv
dec
daa
cwtl
mov
and
xor
xlat
inc
inc
xchg
scas
rorl
or
loope
sub
sbb
ds
mulb
pop
xchg
pusha
lret
adc
push
pop
aaa
movsl
xor
in
mov
shlb
cltd
jmp
dec
xor
adc
mov
loop
test
sbb
xor
and
ja
cmp
insb
push
or
test
adc
ja
aaa
add
xor
out
or
loop
and
fdivr
insl
and
stc
out
pusha
aad
loop
int3
push
ds
cli
iret
push
xchg
mov
pop
add
lods
stos
pop
movsl
mov
cmp
out
jl
sbb
enter
push
fwait
cld
inc
scas
ljmp
int3
cld
fisttpll
ljmp
ret
mov
dec
arpl
daa
mov
cltd
adc
ret
popf
mov
jecxz
xor
dec
or
mov
push
or
pop
sub
call
adc
lahf
jecxz
test
inc
mov
loopne
lds
mov
imul
xchg
test
lcall
mov
pop
mov
in
push
out
jne
scas
movsl
lods
add
pop
cltd
xor
xchg
jno
adc
pop
mov
xchg
pop
inc
cli
sbb
mov
addr16
sub
repz
pcmpeqd
cmpsl
sbb
roll
test
mov
sbb
mov
push
popf
js
sbb
adc
popa
enter
in
jns
dec
lret
jbe
fists
loopne
or
xchg
xchg
lods
pushf
pop
repz
jl
xor
popf
mov
cmpsb
pop
out
cmpsl
movsb
lret
addr16
adc
inc
sbb
xchg
sbb
mov
mov
lods
xchg
add
fiaddl
insb
cmp
lds
mov
push
ret
test
pushf
cwtl
pop
adc
cli
push
lods
push
hlt
fnstcw
pop
inc
mov
jno
lret
sbb
pop
inc
mov
inc
add
sbb
out
jns
mov
pop
dec
rorb
rcrb
lcall
mov
inc
fldl
lcall
repz
pop
mov
mov
mov
sbb
pop
sarb
adc
insb
fidivrs
fs
jae
push
insb
leave
loopne
addl
ljmp
mov
sbb
cmpsl
rorl
mov
icebp
push
push
jmp
and
push
sbb
lcall
out
push
cwtl
fidivrl
sbb
and
cmp
shll
cli
fists
mov
add
into
jl
mov
sti
iret
cmpsl
add
sbb
adc
fs
jnp
arpl
mov
sahf
cltd
outsb
clc
mov
repnz
jno
jge
sub
jg
out
test
cmp
out
lret
out
jmp
leave
xlat
sub
and
mov
cmp
xor
and
sbb
cli
push
cmp
imulb
cmpsl
call
lods
or
xchg
xchg
test
jo
xchg
ds
mov
pop
arpl
jo
jnp
sub
out
shll
inc
mov
pop
dec
xor
fsubl
push
cmpsl
iret
loop
mov
xor
popa
fistpl
cmp
cltd
jo
mov
cmc
lcall
sub
or
cmp
icebp
cmpsb
push
rorb
cmpsb
out
fsubrs
sbb
sbb
push
mov
std
xlat
jl
inc
pop
push
adc
decb
fistl
and
mov
imul
mov
sti
sbb
scas
push
push
xchg
push
jb
fmuls
jmp
outsl
ds
xchg
cltd
daa
fimuls
inc
xchg
mov
cmc
shrl
mov
jl
out
pop
sub
jo
in
orb
aad
inc
sbb
push
jge
xor
push
mov
push
add
xchg
inc
imul
out
sbb
inc
nop
push
shl
das
xchg
xchg
xor
outsl
cmp
test
add
std
mov
push
imul
sub
cmpl
push
pop
lods
xchg
cwtl
es
push
sub
sti
xor
pusha
fxch
fs
cmp
mov
or
xorl
sub
mov
imul
or
stc
int3
dec
sbb
adc
mov
or
xor
daa
addr16
sahf
lds
mov
jae
aas
idiv
js
jb
sub
inc
lods
mov
push
mov
iret
xchg
fldenv
stos
call
pop
and
out
sbb
mov
cs
mov
xchg
out
stos
insb
jge
mov
test
jg
insb
lods
or
pop
outsb
jl
add
les
aaa
cmpsb
xor
dec
inc
jecxz
xchg
icebp
xlat
cmc
and
sub
test
pop
mov
out
sub
fisubs
mov
loop
loope
movsl
sbb
fwait
gs
fst
sub
neg
lahf
fsubs
push
rcl
push
cmp
in
push
inc
dec
jnp
cwtl
push
in
jae
imul
jne
adc
xchg
hlt
push
stc
roll
out
push
xor
les
jno
inc
loopne
and
xchg
outsl
push
mov
add
stos
movb
inc
popf
roll
sub
call
and
pop
xor
xchg
dec
lret
inc
xor
cmpsl
dec
fs
sbb
fwait
cmpsb
push
xchg
pop
mov
mov
push
mov
and
ja
in
sbb
xlat
fsubp
ljmp
add
mov
mov
xor
dec
jmp
push
inc
jmp
jnp
dec
add
fists
mov
shlb
cmp
insb
mov
mov
loop
cmpsb
or
lock
jb
sti
xor
out
xor
bound
sbb
pop
inc
hlt
push
cmp
push
inc
outsb
cmpsb
sarl
mov
inc
adc
insb
mov
ljmp
push
rorl
imul
sub
jl
jmp
rorb
push
add
lcall
pop
loopne
mov
in
and
popf
ds
xchg
aad
cmpsl
jg
sbb
inc
add
inc
dec
sbb
aam
sub
cmp
gs
jmp
idivb
shlb
ss
mov
jp
call
pop
rcll
cs
mov
in
sub
lock
pop
mov
dec
in
ljmp
lcall
jmp
and
mull
and
mov
ret
std
pop
inc
push
andb
jge
shrb
pop
mov
lahf
shl
stos
scas
cmp
xchg
mov
mov
imul
and
mov
xchg
daa
xor
dec
dec
push
ret
ljmp
test
pop
mov
out
sbb
in
insb
inc
jle
and
adc
mov
xchg
adc
call
rclb
shl
cltd
cs
scas
push
xchg
int3
jnp
jmp
stos
pop
pusha
loopne
fisubrl
dec
jge
stc
cmp
xchg
adc
and
int
icebp
push
in
xchg
pop
mov
pop
in
iret
xor
dec
insl
jecxz
mov
cmp
xor
pop
lret
jmp
adcl
sbb
je
aad
js
in
mov
daa
add
mov
ret
jb
test
jmp
nop
push
mov
mov
call
lds
push
outsl
lds
mov
cli
ds
test
bound
xor
push
and
push
mov
nop
das
lods
cs
pop
popf
sub
int
orl
mov
xchg
mov
fisttpll
rorl
mov
jg
or
cmpl
adc
fdivrs
adc
cltd
in
outsl
cli
mov
lods
pushf
mov
test
sbb
xor
lock
sub
jne
add
mov
fwait
mov
xchg
pushf
push
pop
push
sbb
mov
mov
aaa
lods
and
lahf
shl
test
push
fcomip
xlat
mov
and
mov
and
test
fstpl
push
call
gs
or
xchg
int
adc
jl
inc
mov
popa
ret
in
sub
cmpsb
sbb
bnd
dec
andb
es
pop
mov
cld
test
bound
add
out
movsb
jp
sbb
jg
add
movsb
int3
test
mov
aaa
das
call
loopne
and
adc
mov
mov
add
pop
inc
insl
adc
clc
arpl
mov
mov
decl
xchg
sub
sbb
or
out
adc
xchg
loopne
add
js
or
mov
cmpsb
push
xchg
add
cmc
sub
add
rclb
xchg
mov
rclb
inc
mov
or
xchg
lods
loopne
inc
cld
xchg
ljmp
lock
in
jle
hlt
in
adc
iret
inc
mov
movsb
adc
jl
and
push
dec
xor
inc
int
aam
and
insl
mov
jmp
out
mov
leave
cmc
inc
pmaxub
ds
pop
adc
push
inc
xchg
ds
pop
mov
cmpsb
fstl
cmpsb
pop
daa
mov
add
insb
ja
push
movsl
mov
xor
aaa
mov
insl
fnstenv
scas
mov
mov
fstl
mov
bound
fnstenv
add
je
mov
lods
xor
cld
pop
or
jbe
cwtl
popf
mov
sub
cmp
mov
loop
jb
cmpsb
sbb
pop
inc
fsubr
test
jno
jae
std
xorb
jno
mov
mov
frstor
test
imul
xchg
mov
ja
cmp
dec
pop
sub
jp
adc
sbb
sub
repz
testb
imul
cmp
push
ljmp
jnp
mov
sub
add
jmp
inc
sub
cmpsb
xor
mov
std
jp
es
or
out
es
inc
in
pop
cmpsb
mov
in
sbb
sub
bound
mov
hlt
notl
jmp
les
jp
popf
push
jne
and
mov
cmp
inc
fmul
dec
jp
hlt
push
xlat
aam
scas
add
or
or
mov
in
mov
les
es
mov
jno
push
mov
les
out
xor
xor
rolb
jmp
adc
cmp
nop
pop
pop
mov
cmp
mov
incl
xchg
sbbb
arpl
push
xchg
jae
sti
push
inc
dec
sti
cli
mov
xchg
jno
loopne
add
popf
test
repnz
cmc
mov
jmp
mov
sti
sbbb
cmp
mov
out
int3
je
mov
push
or
xlat
push
std
dec
dec
sbb
sub
push
xchg
fildl
fwait
in
rcr
aad
inc
or
add
addr16
mov
cmp
mov
jnp
push
add
and
xor
stc
imul
into
cmp
std
insb
dec
push
shlb
repnz
in
lods
sarb
testb
ror
repnz
fwait
test
popa
and
push
cmp
inc
jae
fdivr
loop
sbb
mov
aaa
adc
push
sub
lret
xor
movsl
je
push
fistpll
jp
pop
cmpsl
into
mov
aad
testl
sub
cli
jno
mov
iret
mov
outsb
data16
dec
inc
and
scas
fidivrs
imul
mov
out
pusha
xchg
outsl
mov
mov
leave
inc
imul
adc
xor
or
xchg
push
inc
aam
mov
pop
scas
fisubrl
cmp
les
pop
xchg
push
add
orb
mov
pop
movsl
in
add
bound
dec
clc
jnp
roll
orb
pop
cwtl
dec
mov
cmp
sub
dec
test
push
adc
or
fdiv
adcb
call
fs
fwait
in
mov
shl
lcall
xor
les
dec
pop
mov
test
sub
push
sub
xchg
arpl
add
jle
sbb
or
aam
mov
pop
andb
repz
out
sub
mov
cmc
xchg
out
cwtl
inc
fwait
jmp
dec
into
es
inc
mov
push
and
int3
xchg
iret
pop
adcb
push
pop
imul
addl
dec
push
iret
and
lods
call
arpl
iret
pop
mov
in
push
xchg
fnstsw
mov
mov
out
inc
mov
aas
dec
mov
pop
cwtl
fxch
test
dec
pop
jb
ds
outsl
repnz
inc
in
adc
sbb
lcall
xor
cmpl
iret
mov
mov
jecxz
repz
add
in
cmpsl
dec
hlt
sbb
jg
ljmp
or
and
sbb
rcll
push
or
inc
andl
orl
insl
push
mov
in
clc
jmp
je
aaa
or
pop
mov
sbb
fdivrs
lret
int3
push
mov
push
repnz
dec
sbb
test
adc
mov
lds
clc
mov
pop
imulb
push
lds
dec
sbb
fwait
divb
add
xor
fucomi
scas
gs
mov
jns
ss
mov
cmp
or
lds
inc
out
inc
int
jb
jno
in
sub
xchg
imul
ja
mov
icebp
xchg
pop
sub
add
xchg
push
js
jecxz
fs
jg
cli
mov
cmp
out
dec
std
in
andb
dec
adc
das
jmp
fstl
pop
mov
dec
int
bound
mov
fstl
and
outsl
or
cld
mov
das
add
lret
jae
and
mov
pop
sbb
pop
jle
jno
jle
andl
andb
dec
ficompl
fwait
dec
cmpsl
loope
sbb
gs
push
dec
in
fdivrp
scas
loopne
mov
das
mov
ficoms
rolb
or
and
inc
push
add
pop
aad
mov
mov
scas
aam
mov
rolb
pop
stos
clc
bound
dec
ja
imul
in
push
js
cmc
shlb
jnp
push
mov
cmp
lods
mov
das
popa
repz
mov
sub
cmp
stc
mov
cmp
loope
in
xor
xchg
out
les
pop
jg
jle
pop
inc
xchg
fnstsw
fwait
pop
push
rolb
mov
leave
mov
lods
vzeroall
dec
mov
pop
mov
pop
mov
mov
adc
and
out
cmp
xchg
lret
sub
dec
cs
cmp
jb
pop
mov
push
pop
mov
fbld
inc
rcl
xchg
jb
mov
or
push
jb
hlt
clc
clc
call
aam
mov
lcall
pop
insl
repnz
xchg
loopne
push
jecxz
push
pusha
in
cld
xor
test
adc
inc
push
jne
push
cs
enter
in
cmc
pop
xlat
popa
xor
or
jp
push
cmp
inc
inc
dec
arpl
mov
push
xchg
dec
sbb
dec
mov
sbb
ret
lods
cld
fwait
lret
cmpsb
test
push
and
call
jmp
clc
xlat
movsb
mov
jg
push
fwait
dec
rcrl
ja
aas
out
jbe
and
lds
adc
mov
xor
js
mov
sbb
rcll
jge
cs
aad
pop
push
imul
cmpsl
stos
mov
stos
lock
pop
loope
cltd
lcall
mov
ja
mov
adc
int
xlat
lds
mov
jo
xchg
jbe
and
insl
mov
cmp
dec
mov
movsb
xchg
iret
xchg
jae
sub
fimuls
hlt
or
adc
scas
mov
jbe
jns
test
out
es
and
aaa
jmp
fsubl
or
lods
mov
adc
lahf
mov
push
jns
aam
repnz
jns
sbb
neg
add
fsub
aam
out
rorb
mov
dec
nop
stos
mov
addr16
mov
jo
stos
addr16
mov
dec
cmp
mov
xor
xchg
push
push
xor
movsl
jb
and
mov
mov
xchg
push
out
iret
mov
xchg
push
mov
pop
push
inc
shlb
sub
popl
xorb
dec
add
pop
cmp
scas
and
roll
xchg
xor
cmp
sbb
nop
dec
out
sub
sbb
mov
add
mov
push
cmp
lds
xor
daa
sarl
xchg
push
or
xchg
mov
push
in
or
scas
mov
icebp
dec
fistl
sbb
arpl
cmp
lret
adc
lahf
icebp
sbb
jnp
adc
lds
stc
pop
idivl
out
sbb
dec
cwtl
xchg
cs
fs
shrl
and
add
or
dec
sub
jbe
jbe
imull
wbinvd
repnz
dec
jo
daa
daa
repz
push
fs
dec
dec
bound
or
insl
or
xor
out
int
imul
hlt
mov
pop
mov
fcmovne
js
imul
pop
cs
push
ljmp
push
mov
jne
inc
xchg
add
or
cld
jae
aaa
lods
mov
pushf
fwait
cmpsb
je
or
xchg
push
push
add
jp
sbb
adc
mov
mov
frstor
adc
push
lea
adc
jecxz
lcall
ret
sub
inc
das
mov
pop
xor
xor
push
or
mov
clc
push
pushf
xchg
les
inc
xchg
push
out
jmp
inc
pusha
clc
mov
sbb
lea
xchg
mov
jle
cmp
mov
mov
sti
insb
nop
rorb
mov
push
dec
jl
lret
mov
nop
xlat
sarb
aam
mov
sub
mov
shrb
ror
push
scas
push
in
lock
xchg
xchg
jne
rclb
test
mov
pop
popa
and
cmp
insb
in
cmpb
loopne
mov
hlt
adcb
out
jb
mov
mov
shlb
mov
jo
xor
jle
mov
lods
js
dec
cmpsl
inc
outsb
loope
icebp
mov
shl
mov
add
and
stc
test
xchg
mov
mov
xchg
push
orb
inc
in
faddp
cmc
inc
lods
inc
mov
sub
popf
xchg
fbstp
adc
scas
loope
add
xor
aam
or
ss
push
jne
cmp
stc
mov
ds
adc
mov
inc
dec
lahf
lods
jecxz
pop
mov
sbb
orl
pusha
jmp
xor
sarl
das
sub
adc
add
out
or
rcrb
pop
rolb
insl
inc
shrb
jae
pop
gs
cmp
jbe,pn
mov
insb
xchg
xchg
sub
mov
mov
mov
imul
adc
stos
jp
cwtl
in
int3
mov
push
outsl
cmp
movsb
cmp
mov
mov
rcrl
jno
or
sub
mov
inc
pop
ljmp
mov
add
fcompl
ja
movsl
mov
xchg
xchg
enter
into
sbb
inc
hlt
fcompl
cmp
arpl
jmp
push
xor
and
sub
or
adc
push
int
mov
adc
icebp
subl
jae
push
push
and
fwait
mov
loop
pop
push
lods
and
lret
xlat
ffree
push
pop
aaa
jle
jb
fs
pop
pop
shl
pop
xchg
in
sbb
xchg
fnstenv
int3
push
mov
shlb
xor
xchg
cli
ljmp
and
fldenv
insl
int
and
es
mov
xor
xchg
and
je
sbb
ds
cwtl
scas
pop
pop
pushf
leave
into
xchg
and
sahf
xchg
mov
sqrtps
sub
test
out
ss
inc
hlt
loope
inc
test
and
mov
je
ret
push
ficoml
pop
xorb
imul
out
fildl
repz
inc
and
jns
pop
lahf
iret
xlat
ja
dec
mov
push
mov
pop
out
xlat
push
in
and
xchg
addr16
movups
mov
jmp
sub
mov
fs
mov
jns
int
xchg
mov
push
inc
inc
cld
cmc
add
or
jno
test
test
adc
fwait
pop
sbb
je
xchg
nop
ljmp
cli
inc
jb
clc
push
sbb
adc
js
std
push
dec
xor
out
xor
fbld
push
vorpd
mov
pop
mov
lods
push
nop
xchg
lahf
insl
call
mov
into
mov
push
inc
push
cmp
mov
fdivp
mov
mov
dec
sbb
jecxz
jl
test
stc
sub
data16
dec
sub
mov
cmp
mov
add
in
and
rcrl
pop
sbb
jo
paddd
scas
out
lret
mov
jbe
jecxz
insl
xchg
jl
jge
sbb
mov
clc
add
daa
shll
bound
gs
sbb
lea
pushf
mov
nop
xorl
dec
xchg
lret
or
push
pushf
mov
loope
jns
jbe
lock
insb
sbb
sahf
cmp
dec
inc
mov
jae
pop
push
push
cmp
xchg
jno
nop
iret
imul
sub
pop
shr
out
mov
subl
icebp
fsts
cmp
iret
cmp
mov
movsl
sbb
std
fldenv
push
addr16
adc
lock
filds
rolb
test
sub
mov
repz
mov
push
sarb
dec
inc
xor
jg
ret
in
pop
fsubs
push
test
mov
sub
push
sbb
fmuls
cld
jne
xor
lcall
sahf
add
ljmp
fwait
dec
dec
ljmp
push
ja
adc
cmp
mov
cld
out
xchg
xchg
scas
add
aaa
push
xor
js
cmp
cltd
mov
mov
nop
or
push
aam
and
sub
in
sbb
sub
jl
and
push
jo
jg
lfs
jp
xchg
sub
and
cmp
add
sbb
mov
adc
fsubs
fidivl
hlt
pop
mov
push
dec
cmpsl
pop
xlat
xchg
and
fmull
sbb
and
ss
mov
popa
push
xor
push
arpl
push
xchg
mov
mov
sub
stos
mov
aam
and
popa
cmp
cs
jae
mov
pop
xchg
int3
xlat
mov
push
test
sti
js
test
and
push
inc
cmpsl
mov
fisttpl
xchg
inc
inc
mov
scas
lahf
sahf
das
xor
scas
mov
jp
inc
push
es
sti
int
jl
xor
fistl
aam
repnz
inc
cs
sbb
xchg
pop
inc
bound
into
out
adc
sahf
out
lea
and
cmp
xchg
add
dec
pop
aas
push
cmp
pop
dec
sbb
and
pusha
clc
xchg
dec
pop
mov
xchg
clc
and
add
andb
cmp
cmp
cmp
daa
inc
inc
jno
sub
sbbb
xor
inc
or
lods
add
inc
cmp
or
xor
stos
std
jne
xor
test
das
es
mov
aam
and
xchg
mov
pop
jl
mov
loop
call
cmpsb
or
cmpsl
ljmp
push
pusha
xor
mov
lds
jb
int
sub
xchg
xchg
imul
dec
std
mov
inc
and
mov
mov
aas
cwtl
pop
iret
or
lret
mov
outsl
dec
aad
outsb
cmc
sti
shufps
and
mov
lods
addr16
sub
mov
pop
loope
and
sbb
pop
jge
cld
pushf
or
mov
stc
mov
mov
xchg
cmp
mov
xlat
mov
sub
xchg
push
aaa
bound
shll
mov
lds
mov
adc
pop
repz
jno
ret
icebp
leave
lock
inc
stc
mov
mov
sub
repz
cmp
loopne
jg
std
jb
push
int
and
das
in
test
aas
fmuls
or
es
xchg
jecxz
push
xor
test
std
push
ss
xchg
js
jmp
add
jnp
xlat
xchg
scas
jbe
fcmovbe
sub
orb
cmc
mov
push
inc
cmp
cmpsb
mov
rorb
cmp
pop
mov
push
inc
fdivr
cmp
adc
clc
or
sub
outsl
cmpsl
pop
in
lcall
sub
iret
cmp
fs
xorb
imul
movsb
push
adc
xchg
sti
pushf
push
jmp
mov
pop
jb
inc
xchg
push
lahf
mov
cmpsb
adc
xorl
lods
push
incl
or
xchg
imul
mov
mov
xor
ljmp
shll
es
mov
dec
lock
add
in
mov
xchg
test
sub
inc
dec
pushf
mov
xlat
xorl
ljmp
mov
or
mov
jb
and
dec
pusha
lret
repz
mov
rorb
mov
inc
push
push
xchg
arpl
jg
insb
ljmp
rorl
adc
shl
sbb
jge
test
add
push
mov
aam
ss
add
aas
mov
xchg
jne
and
cmp
xchg
hlt
add
jo
or
add
lock
nop
xchg
ss
movsl
pop
mov
ret
loope
jle
mov
in
arpl
mov
stos
jns
cmp
cwtl
inc
push
call
and
enter
xchg
mov
stos
ret
pop
fldcw
and
cli
inc
movsb
cmp
call
push
adc
addr16
aad
push
sahf
mov
movsl
pop
iret
fsubs
mov
sub
lock
shlb
push
popf
outsl
or
loop
addl
add
aas
cli
cltd
fidivrl
mov
ja
adc
push
cmpsl
sub
inc
aaa
les
and
mov
add
ljmp
dec
add
lea
lods
imul
add
adc
dec
out
out
push
mov
in
lock
jb
fistl
fdivrl
icebp
jmp
pushf
insl
jecxz
lcall
leave
sub
aam
pop
rcrl
jp
push
dec
mov
or
into
and
mov
jl
add
pop
sbb
dec
jns
call
inc
adcb
or
ja
call
cmp
lahf
inc
inc
pop
cld
jecxz
cmp
enter
adc
push
aam
push
stc
fst
sub
pop
push
dec
sbb
rcr
pop
test
jns
jl
test
cwtl
or
push
xchg
xor
sub
sub
dec
std
xchg
imulb
adc
out
ret
mov
sub
sub
ret
scas
scas
outsb
std
das
ds
pop
popa
jle
jae
movsb
std
cwtl
fs
call
jns
xchg
stos
or
xchg
cli
je
mov
pop
rcl
pop
outsl
movb
cmp
fistl
dec
repz
jle
in
pushf
mov
fs
int
insb
dec
xor
push
aam
and
mov
jbe
ljmp
dec
nop
cli
inc
pop
sub
movsb
cld
jns
mov
lcall
push
dec
cli
xchg
xor
pop
xor
jns
sub
fisttps
pand
push
dec
sub
cmc
adc
rorl
and
data16
add
xor
daa
imul
and
cmp
mov
pop
mov
lock
mov
int3
sarb
add
pop
pop
into
inc
jg
ror
stos
add
push
mov
dec
lods
movsb
xor
cwtl
sahf
push
and
loop
mov
test
test
gs
pop
jnp
push
mov
push
jae
adc
sub
lahf
gs
movsb
and
fisttpl
adc
fadds
mov
out
repz
imul
leave
fstps
sub
inc
push
dec
test
cwtl
xor
mov
iret
or
dec
and
sti
pop
inc
aad
std
fsubl
sbb
dec
or
inc
addr16
mov
negb
fdivrl
add
xchg
ret
pop
fdivrs
inc
inc
rolb
in
outsl
stos
andl
pop
mov
mov
lea
xor
repnz
push
mov
sub
dec
push
fldcw
dec
mov
out
lods
popa
xor
faddp
fsub
aam
jle
mov
iret
repnz
nop
or
fsubrl
repz
jp
in
add
push
fwait
lret
pop
add
sbb
roll
jge
pop
aaa
testb
shll
mov
push
xchg
mov
push
pop
add
dec
fistl
popa
adc
stc
lods
mov
fnsave
xor
jl
dec
sub
pop
cmp
fidivs
pop
dec
jbe
stos
movsl
cmp
int3
xchg
rcl
push
mov
test
inc
dec
adc
and
loop
inc
adc
xchg
jp
inc
outsb
arpl
cmp
jnp
adc
dec
fsubrl
test
jnp
xchg
inc
mov
in
lds
jne
mov
push
or
mov
mov
repz
ja
ljmp
in
pop
pop
sbb
add
out
std
mov
lock
ret
sub
arpl
mov
mov
stc
and
in
test
jnp
mov
jmp
adc
test
fwait
pop
lret
adc
rorb
idivb
imul
aad
lahf
sub
and
xchg
popa
rclb
scas
mov
orb
bound
stos
dec
pop
shlb
mov
add
dec
push
int
inc
pop
or
push
ss
ljmp
mov
push
or
scas
clc
fldt
xlat
data16
clc
push
shlb
and
mov
cwtl
out
shll
aas
cmc
or
cmp
call
pop
mov
xchg
jp
xchg
or
ss
dec
aad
mov
ds
jg
daa
cmpsl
push
mov
xorb
mov
repnz
loop
popa
jno
les
cli
out
stc
jnp
xor
or
mov
push
clc
stc
lods
xchg
ret
call
into
mov
shrl
push
pop
pop
pop
or
fs
es
dec
dec
cmp
test
push
cld
add
mov
xor
lret
sbb
lret
jbe
nop
fnstenv
mov
and
add
mov
pop
ljmp
adc
icebp
icebp
stc
rep
ret
repz
push
push
ljmp
fadd
and
gs
cmpsl
mov
daa
and
shrb
repnz
ficoms
or
ret
fs
data16
dec
ret
and
jle
stos
mov
sub
rcrb
nop
push
clc
mov
adc
cmp
xchg
inc
adc
movsl
adc
mov
repnz
adc
out
std
hlt
cmp
pop
rdmsr
add
jns
ljmp
sbb
icebp
into
adc
fs
dec
and
in
insb
jle
loop
push
repz
icebp
mov
jnp
mov
jno
dec
shll
add
imul
xchg
test
popf
inc
dec
aaa
in
mov
setnp
cmp
stos
in
sahf
out
mov
daa
movsb
outsb
sub
pop
mov
push
lahf
mov
shrl
or
je
aam
sti
out
lea
je
mov
inc
cmp
mull
pop
mov
mov
pushf
aam
push
dec
mov
popa
aam
cs
aam
popf
add
xor
adc
jl
aas
xchg
shlb
inc
std
pop
stos
jo
cwtl
and
in
pop
out
fcoml
push
dec
mov
movsl
pop
jae
mov
lret
lods
dec
ret
mov
mov
stos
or
nop
insl
inc
call
arpl
mov
fadds
inc
imul
rcl
les
int
arpl
pop
imul
xor
cmpsl
xchg
xor
dec
int
in
mov
xor
and
mov
sub
jl
inc
pop
adc
movsl
adc
stc
push
clc
call
mov
jo
push
ficompl
xor
pop
push
jmp
jl
sub
int
and
daa
aad
sub
dec
pop
lret
push
pop
jb
add
and
add
dec
daa
dec
inc
add
outsb
push
ss
push
movsl
pop
in
xchg
xchg
mov
inc
fwait
cmc
out
sahf
xchg
cmpsb
ljmp
mov
inc
mov
insl
push
lret
or
enter
pushf
mov
lds
movsb
add
outsb
lds
addr16
mov
dec
inc
inc
repz
sti
adc
dec
sub
cmp
sub
dec
mov
mov
shlb
jae
lret
lcall
outsb
mov
push
mov
pop
xchg
jb
xchg
sbb
js
out
test
fwait
mov
imul
push
mov
mov
mov
cmp
and
adc
mov
in
jb
enter
das
sahf
mov
mov
repz
pop
addr16
push
inc
add
fcmovnb
popa
iret
in
daa
icebp
or
int
sbb
adc
adc
xchg
add
addb
inc
pop
adc
mov
jp
hlt
push
jnp
xor
in
test
lods
sub
clc
inc
addr16
fstps
xchg
or
ficoml
fiaddl
pusha
or
sub
sub
rorl
in
int3
sbb
lea
add
mov
lock
cld
cmp
les
int
sub
test
out
je
mov
iret
clc
xor
lret
insl
push
cwtl
test
sub
fucom
lods
mov
inc
jecxz
into
bound
decb
push
inc
adc
or
lret
stos
adc
cmp
adc
ljmp
fldl
jns
gs
les
call
xor
iret
test
insb
stos
icebp
inc
cli
ljmp
dec
jns
mov
inc
xor
inc
in
xchg
and
cmp
sub
inc
sub
les
sbb
test
inc
daa
mov
cmp
jae
cli
xor
ja
fiadds
in
mov
hlt
repz
leave
lahf
stos
js
or
aas
jg
sub
pop
pop
xor
jo
fists
fwait
dec
add
mov
pop
out
mov
shr
outsl
rcll
dec
mov
xor
dec
out
movsb
test
adc
push
movsl
cs
push
movsl
inc
pop
js
icebp
shl
xchg
mov
lcall
xchg
xlat
inc
fs
add
stc
jb
jmp
arpl
in
neg
sarb
addr16
jecxz
pop
outsb
cli
mov
dec
xchg
fwait
aaa
push
mov
js
mov
shl
jmp
loope
sarl
andb
mov
mov
jecxz
jb
add
jp
dec
xor
scas
test
repnz
and
adc
and
dec
push
pop
jecxz
mov
cli
lea
jns
mov
push
sub
outsl
fsubs
fstpt
push
fsubl
mulb
ljmp
lea
stc
jnp
adc
fsubl
ret
dec
push
aam
cmpb
popa
add
out
ficoms
int3
xchg
xchg
ds
inc
loop
mov
lahf
loope
mov
shll
icebp
ret
and
lods
into
adc
idivl
lahf
mov
push
stc
cmpsb
ja
sbb
xchg
stos
lret
inc
inc
jo
fsts
scas
xor
mov
pushf
fsubrl
int3
mov
int3
out
and
mov
aas
or
mov
test
push
mov
mov
xchg
scas
xor
scas
dec
fcoms
pop
sbb
mov
xchg
cmp
je
push
loopnew
je
out
add
insb
jg
mov
ret
cmpsb
pop
cmpsb
push
scas
sbb
clc
mov
and
aad
mov
and
mov
adc
stos
mov
dec
cs
push
mov
rclb
add
push
xor
lret
pop
jl
push
mov
ja
dec
jne
jns
lcall
adc
lret
xor
push
scas
xor
cmp
rcr
lcall
incl
mov
popa
dec
inc
roll
lret
mov
and
movlps
and
daa
jno
inc
insl
pop
lcall
cmc
mov
ret
bnd
dec
sub
xorb
adc
ret
mov
int
je
adc
xor
xchg
sbb
mov
cmc
and
dec
les
mov
andl
push
mov
fwait
mov
loop
in
sub
cmp
js
inc
aaa
cmp
gs
cmp
or
and
std
lret
out
cltd
cltd
and
scas
out
cmp
insb
imul
andl
imul
jb
add
pushf
inc
sub
lahf
jecxz
sbb
insb
sahf
rolb
mov
cli
lea
add
mov
rclb
fstp
insb
dec
pushf
shl
icebp
popl
sbb
or
adc
cli
inc
sahf
out
fldpi
sub
das
jge
jnp
cmp
jae
adc
ret
sub
jmp
adc
pop
loopne
xor
sub
xchg
sbb
lahf
mov
mov
add
adc
in
push
outsl
sti
dec
adc
dec
xlat
mov
sahf
roll
arpl
mov
repnz
dec
retw
push
cmp
dec
daa
jg
jl
mov
mov
sbb
lret
mov
jmp
mov
adcb
sub
imul
test
dec
and
insl
xor
inc
xlat
adc
dec
outsb
push
repz
or
or
std
add
das
cs
fiadds
lcall
push
out
xchg
lock
or
sbb
ljmp
mov
and
ret
mov
test
sub
cmp
lods
and
lods
lahf
and
idivl
call
adc
loop
add
dec
pop
push
loope
insb
sahf
clc
dec
xor
movb
mov
mov
jae
adc
push
push
add
out
add
sbb
jne
aad
xor
mov
fs
bswap
repz
mov
cmp
inc
cmpsl
xor
js
jge
in
mov
stos
in
mov
gs
orb
add
jns
jo
cmp
push
fists
gs
icebp
xor
in
lret
iret
ret
cld
adc
jmp
lcall
cmc
pop
jl
cltd
cmp
dec
or
es
cli
or
jmp
and
loopne
xor
add
mov
ret
ret
inc
in
inc
mov
xchg
in
aad
add
dec
mov
rcl
jge
enter
in
ss
push
addb
pop
test
jnp
jne
mov
xchg
aas
sub
cltd
pop
sub
dec
ficomps
out
sbb
jg
cmp
icebp
sbb
push
ret
lahf
leave
mov
sub
lcall
pop
shll
ljmp
or
adc
hlt
insl
out
call
je
mov
lods
das
in
xchg
sbb
call
dec
mov
and
xor
sub
out
ljmp
mov
xor
insl
out
inc
lret
pop
dec
mov
inc
mov
es
outsb
cmpsl
scas
pop
push
rorb
pop
and
loope
cmp
movsl
xor
and
dec
push
cli
bound
jmp
xchg
push
pop
sbb
or
cs
mov
das
adcl
pop
mov
xchg
xchg
int
repz
and
push
ja
push
pop
cli
cli
sub
sub
mov
sbb
movsb
jne
mov
lea
push
xor
jmp
shrb
test
adc
inc
and
daa
cltd
sbb
inc
pop
mov
mov
testl
stc
sub
sub
lret
jnp
pop
fwait
mov
mov
pop
insb
cmpb
xor
or
lock
xor
loope
lods
push
arpl
pop
pop
jp
mov
mov
jmp
stc
add
adc
jb
das
pop
outsl
jecxz
gs
pop
fldt
adcb
inc
lret
repz
dec
mov
jae
cs
jecxz
push
mov
jle
pop
mov
roll
jle
mov
roll
scas
mov
dec
test
mov
jnp
mov
leave
pushf
ss
xchg
push
movsl
xchg
mov
es
cmpsl
fisttpll
shlb
test
lds
lods
add
or
jg
push
cld
pop
mov
lret
in
aaa
lret
sti
inc
mov
sub
repnz
sub
dec
pop
stos
pop
in
or
mov
pop
repz
dec
popa
test
dec
stos
scas
pop
xor
insb
cmp
lods
mov
mov
das
add
inc
ret
or
adc
jb
popa
xchg
fwait
xor
loope
sbb
xor
ss
out
mov
dec
sub
xchg
jmp
xchg
movsb
xchg
pop
mov
and
jg
adc
jp
add
loopne
jno
adcb
jp
lds
jbe
loope
jbe
push
js
jb
mov
shlb
call
sbbb
xchg
or
repz
enter
mov
movsl
repz
cltd
imul
test
mov
sbb
dec
push
or
dec
lods
add
scas
pop
mov
cmp
mov
pop
mov
push
cwtl
popf
ss
sub
push
add
push
xor
inc
bound
rolb
adc
stc
enter
daa
rcrb
adc
pop
mov
dec
push
cmp
das
testl
push
mov
outsb
sbb
inc
stc
and
mov
test
popa
and
ds
and
inc
xor
xor
push
out
and
data16
aaa
popf
ja
out
sarb
mov
cmc
jb
je
ret
stc
sub
mov
rcll
decl
es
pop
lret
or
pushf
adc
sub
jecxz
dec
sahf
push
inc
cli
sbb
xor
rorb
repz
mov
shl
mov
sbb
mov
fdivrs
dec
and
shll
movsl
sbb
arpl
add
shll
xchg
jge
adc
mov
pop
lock
xorl
test
jnp
dec
inc
lahf
stos
int
fwait
cmp
xor
out
xchg
sarb
mov
cmp
inc
lock
ret
sar
cltd
rcrb
push
daa
fnstcw
outsl
jbe
ds
gs
pop
cmp
jo
lock
outsl
jl
into
fists
lods
mov
jmp
cmp
xchg
movsb
js
add
pop
mov
dec
icebp
addr16
cs
sub
pop
mov
in
pop
loope
outsl
sub
dec
ss
pop
cmc
pop
sub
loop
jae
jp
cld
test
mov
dec
fmul
outsb
dec
ds
fiadds
or
sub
add
dec
outsl
incl
test
cmpsl
loope
xchg
inc
adc
daa
xor
adc
lods
jne
mov
int3
sbb
fldenv
xchg
aam
aaa
outsb
sbb
daa
nop
lock
js
and
bound
fsubr
leave
jnp
jb
int
push
mov
fisubs
or
mov
adc
arpl
inc
xchg
rcll
idivb
dec
mov
jne
inc
jo
mov
pop
hlt
fisubrs
bound
dec
nop
dec
dec
lods
jge
outsl
mov
popf
xchg
lahf
xchg
cmpsl
jp
jns
inc
add
repz
daa
adc
fstp
leave
pop
jl
lods
dec
inc
sbb
repnz
pop
inc
fwait
jns
pop
mov
lret
mov
movsl
mov
push
gs
imul
arpl
adc
jle
cltd
test
ljmp
out
popf
je
shrb
adc
mov
inc
ja
xor
cmovnp
xchg
jae
call
popf
pusha
fmuls
fisubrs
pop
or
ja
jmp
out
call
cmp
add
pop
pusha
jo
clc
faddl
mov
data16
jge
inc
subb
mov
jl
mov
push
in
cmp
aad
testl
mov
and
inc
out
mov
jl
pop
sub
sbb
popa
jbe
js
xchg
cmp
push
fwait
aad
fmul
push
test
push
jb
xchg
push
outsb
and
aam
aas
mov
out
int
inc
inc
idiv
and
lcall
fldl
mov
jl
push
mov
rcll
test
sub
mov
imul
shlb
mov
inc
data16
mov
xor
ret
jb
and
sbb
sub
pcmpeqw
mov
push
jp
inc
pop
jmp
call
das
mov
jle
es
add
inc
sbbl
xchg
fsubrl
adc
inc
sub
or
out
stc
mov
cmp
xchg
inc
sbb
ja
clc
lods
adc
pop
mov
mov
inc
les
ljmp
negl
out
andb
jmp
jecxz
push
pop
loope
adc
test
cmpb
ljmp
movsb
push
das
cmpsb
xchg
nop
scas
clc
lods
cltd
mov
loope
cmp
mov
sbb
sub
push
cmp
lea
cmp
pop
mov
or
pop
cmp
push
and
iret
mov
or
jg
clc
sti
or
or
fisubrl
cli
fldl
int3
loop
jmp
aam
jo
mov
dec
xchg
push
push
out
stos
jnp,pt
stos
cmc
cmp
repz
and
dec
test
xor
xor
adc
jnp
jo
add
fidivl
rorb
aam
xchg
or
push
pushf
lahf
inc
test
mov
ret
sbb
out
sti
repnz
push
mov
orb
test
mov
aaa
sbb
inc
inc
ljmp
xchg
cltd
pusha
imulb
lods
push
lcall
mov
mov
ftst
inc
dec
in
push
add
addr16
divl
cmp
mov
shll
mov
lret
inc
push
push
and
shlb
xor
sbb
or
mov
gs
adcb
add
sub
mov
repnz
mov
mov
gs
pop
mov
incb
push
cmp
pusha
mov
mov
in
filds
clc
or
sahf
xchg
lfs
loope
cld
enter
enter
pop
cmp
or
movsl
mov
xchg
icebp
mov
dec
jp
pop
xchg
mov
sub
mov
xchg
adc
dec
adc
into
jae
insb
dec
push
dec
xor
jecxz
push
outsl
mov
roll
pop
sub
jnp
mov
jp
dec
jg
sub
lret
push
mov
movsl
pop
xchg
jns
push
iret
insb
int3
and
cmpsb
push
clc
pop
shlb
jnp
stos
mov
nop
mov
bswap
notl
sub
nop
add
pop
test
aad
imul
int3
pop
jae
xor
ljmpw
adc
jg
data16
mov
jbe
or
jmp
sbb
pusha
jnp
xlat
push
pop
fisubrs
incb
sahf
and
mov
mov
stos
dec
mov
mov
and
and
sbb
xchg
ret
cli
xchg
dec
inc
mov
pop
cmc
mov
movsl
lcall
xchg
xor
nop
hlt
mov
mov
jne
pushf
jge
inc
cmp
shrl
sbb
push
jo
pop
mov
adc
into
js
movsb
imul
arpl
clc
mov
out
jnp
shlb
pop
pop
test
and
jmp
subl
stos
jne
rclb
sbb
dec
ds
arpl
pop
nop
inc
dec
xlat
cmpsl
shrb
xor
fisubs
outsl
fcmovnb
mov
dec
mov
sbb
mov
sub
lock
cmp
fnsave
or
jmp
cmpsb
xchg
insb
repnz
adc
mov
mov
testb
push
loop
adc
xchg
add
sbb
sbb
sbb
jbe
stos
add
pop
mov
xchg
loop
outsb
sbb
inc
jnp
lds
fdivr
testb
xchg
sub
or
and
pop
mov
dec
cmp
adc
jb
and
gs
sub
add
scas
mov
ja
or
mov
shl
xor
rcrb
mov
jno
cmp
daa
lea
push
jns
xchg
and
mov
daa
jp
adc
jo
cmp
repnz
movq
jo
cmp
pop
outsb
es
leave
roll
out
popl
sub
negb
arpl
jne
jbe
pop
lods
cwtl
out
fists
fisubrs
pop
mov
mov
inc
xor
outsl
mov
add
xor
js
fsubrs
push
push
xlat
adc
mov
or
xchg
lock
sti
xor
pop
mov
push
das
insb
adc
into
repz
daa
rorb
mov
add
xchg
daa
icebp
js
xchg
scas
push
pop
bound
decb
mov
ja
xor
arpl
xor
push
inc
mov
inc
or
sub
mov
lods
xchg
pushf
xchg
std
pushf
fists
mov
jb
add
or
push
push
cmp
sub
adc
imul
in
test
and
sti
jecxz
es
and
lret
outsl
ds
test
sbb
lahf
dec
insb
mov
mov
or
push
repz
enter
sbb
fldcw
add
nop
mov
push
jge
or
jl
out
pushf
jmp
add
ret
sub
xchg
fcomp
arpl
dec
cmpsb
mov
or
cmp
pushf
inc
mov
fadd
jae
lret
add
loopne
jle
inc
xorl
fsts
arpl
icebp
testl
filds
in
cs
cmp
clc
add
push
icebp
andl
adc
movsb
and
ret
test
pushf
mov
pop
inc
pmaxsw
call
mov
xchg
fbld
test
dec
sti
les
mov
adc
movsb
rcl
loope
cld
sub
add
mov
bsr
call
fucompp
out
iret
sbb
or
rolb
das
sbb
cmp
mov
pop
sbb
je
lds
pusha
xor
repz
cmp
dec
push
xchg
clc
mov
das
cmc
inc
mov
loop
fwait
ficomps
daa
pop
jmp
scas
mov
daa
cld
pop
bnd
push
sub
clc
rorb
jno
repz
adc
mov
int
out
into
or
imul
inc
mov
jle
pushf
in
and
out
push
sub
mov
call
xor
fnstcw
mov
pushf
call
jmp
js
mov
lods
loope
inc
int
cmp
mov
pop
mov
xchg
jo
dec
fldt
mov
fldl
lock
jnp
movsb
mov
cmc
and
push
stos
es
jo
insl
mov
pop
in
pop
les
and
pop
push
jb
xor
bndldx
adc
sub
outsl
mov
xor
xor
xchg
cmp
and
dec
push
std
mov
testb
or
loop
cmpb
jmp
popl
push
mov
inc
hlt
inc
inc
xor
stos
pop
lahf
scas
ja
mov
fnstenv
roll
in
stos
cmp
adcl
pop
dec
sbb
jno
sbb
shlb
lock
cmpsb
outsl
dec
movl
xor
add
xchg
lret
push
sub
cmc
sbb
ds
aas
sbbl
pop
popf
rep
cmc
shrl
mov
sbb
mov
aas
mov
andl
mov
sub
push
pop
cmpsb
jns
jp
aas
daa
ss
aas
sub
test
adcb
lahf
hlt
cmp
and
push
add
inc
int
jecxz
jge
int
icebp
and
stos
cmpb
test
add
sbb
fbld
or
add
pusha
mov
xchg
jae
out
mov
mov
test
push
or
jbe
xchg
bnd
lcall
les
roll
push
mov
xor
gs
mov
es
jl
and
stos
push
jl
pushf
mov
and
ja
in
out
mov
push
sahf
outsl
pop
out
jmp
mov
push
jmp
and
into
xor
cmp
orl
movl
jb
cmpsb
sbb
inc
out
cli
sub
xor
sbb
loopne
mov
cmp
push
push
fstpl
cmp
hlt
mov
adc
pop
dec
add
add
in
shrl
sbb
and
xchg
mov
mov
loopne
xchg
jae
fs
popa
mov
xchg
sahf
nop
mov
cmc
nop
sub
sub
sbb
mov
rcrl
pop
ds
xor
fcoml
pop
aam
stc
mov
out
lods
jp
xchg
xlat
mov
out
jecxz
push
test
out
mov
leave
je
cmp
js
rcrb
ss
cmp
mov
cmpl
pop
cmpsb
into
in
jno
lret
mulb
test
call
sbb
lods
in
mov
call
imul
push
push
leave
mov
fnstsw
loop
xchg
rclb
addr16
xchg
sub
add
xor
or
inc
add
pop
inc
fisubrl
shll
pop
mov
lds
xor
xchg
sub
inc
sbb
shlb
ret
sub
xchg
xor
jbe
dec
fcmovnu
cmp
sbb
add
jle
stc
add
fadds
sbb
subb
mov
dec
xchg
inc
jae
cli
mov
rcrb
inc
aad
lods
push
xchg
xor
mov
int
adc
lcall
pop
lds
push
leave
ljmp
pop
rorl
insb
sbb
enter
sbb
ja
mov
mov
int3
adc
insl
mov
cli
and
lds
lea
mov
xorb
loope
or
aas
aam
fiadds
jmp
test
jns
pop
vmread
outsb
xor
sub
add
xorl
icebp
dec
lds
push
lret
pop
mov
mov
push
or
fnstsw
pop
mov
sub
jge
ja
pusha
pop
dec
mov
ljmp
jne
aam
xchg
leave
cmp
and
jae
push
cli
enter
and
loope
lret
mov
aaa
mov
lcall
mov
dec
pop
insb
mov
bound
add
push
xor
add
jmp
fwait
std
xchg
ja
insl
inc
jnp
and
jb
pop
sarb
fidivrs
mov
filds
mov
push
inc
jge
shlb
xor
mov
xorl
fabs
insl
cmp
add
movsl
stos
xchg
ss
pop
outsb
sahf
pop
adc
aaa
ret
xchg
xchg
das
pop
mov
jge
xor
push
xor
andb
cli
push
cwtl
pop
sti
cmpsb
mov
sahf
mov
mov
cmp
lock
inc
inc
imul
movsl
push
push
lds
jne
xchg
jg
fistps
movsl
ret
xlat
and
mov
xor
lods
add
dec
rcrb
lret
sbb
call
movsb
adc
mov
lret
dec
addr16
into
jns
add
lret
or
push
loop
fidivs
movaps
lret
sbb
and
push
xchg
xchg
stos
cmp
pop
inc
sarl
out
jmp
rcrb
mov
push
in
jle
fimuls
scas
outsb
es
pop
xor
cmp
pop
push
loope
cmp
popf
xchg
dec
dec
sub
ficoms
jg
fdiv
cmp
xchg
inc
rcll
xor
in
xchg
pop
sbbb
mov
adc
push
mov
loope
insb
lret
insl
test
imul
loopne
repnz
cmp
xor
out
inc
ljmp
clc
pop
cwtl
and
sub
out
mov
in
sbb
sti
fisttpll
add
xor
cmp
cmp
pop
loop
sub
ret
add
cmc
cmpsb
rcr
xlat
ret
and
cmp
imul
jne
flds
loope
jns
cmpl
sub
aad
push
pop
lds
sbb
pushf
loopne
cmp
cmp
stos
enter
lret
enter
push
sbbl
pop
jns
adc
push
pop
js
ss
and
cmp
cmc
daa
dec
xchg
enter
sub
data16
in
out
cmp
sub
lret
adc
mov
je
pop
adc
xor
jmp
cmp
lods
dec
pop
jmp
out
sahf
pushf
imul
sbb
mov
jbe
int3
lds
push
dec
adc
adcl
lret
sbb
push
ficomps
mov
push
push
movsl
outsl
repnz
cld
pop
lea
inc
mov
jl
pop
xchg
pop
out
push
mov
test
ja
mov
stc
arpl
inc
fisttps
leave
sar
test
mov
rcll
xchg
dec
test
fdivrl
hlt
lcall
adc
out
adc
cld
jno
jb
mov
dec
mov
stos
and
dec
shll
xor
popf
andl
test
pop
sbb
mov
mov
mov
add
dec
push
xchg
xchg
lahf
fcoml
pop
or
fstl
sub
test
pop
ret
cmpsb
adc
iret
aas
test
dec
daa
mov
sahf
push
and
int3
cmp
int
pop
xor
movsl
inc
daa
pop
jae
repz
mov
cs
inc
xchg
outsl
gs
cmp
pop
mov
jne
lea
inc
mov
mov
mov
repnz
psubsw
push
mov
jle
sbb
lds
or
inc
test
push
push
add
incl
cmc
lea
add
jb
xlat
pop
jne
dec
push
std
xor
and
cmpsl
adc
jmp
add
sahf
mov
mov
insl
push
icebp
mov
les
cmp
jno
and
mov
fcmove
inc
xor
mov
cltd
orl
jne
jmp
dec
lret
and
stos
add
je
mov
in
ret
dec
sub
xor
lret
dec
sbb
andl
mov
aad
inc
sub
fidivrl
cmp
xchg
adc
ljmp
nop
gs
ja
in
pushf
mov
les
pop
in
imul
sarb
stos
inc
push
inc
dec
mov
mov
cmc
jg
popf
mov
jbe
mov
in
or
sbb
xlat
dec
adcl
sub
dec
sub
sbb
and
mov
push
ss
loopne
ret
fldt
inc
pop
pusha
cmp
xor
dec
pop
mov
pop
jge
dec
incb
and
pop
movsl
mull
mov
fwait
mov
adc
pop
pop
int
fwait
dec
lods
negl
subl
jmp
iret
dec
mov
mov
xchg
inc
ret
mov
das
icebp
aad
mov
in
push
add
fimuls
fst
inc
add
push
les
testb
in
jp
xchg
cs
pop
out
and
dec
pop
and
cmp
lret
ja,pt
gs
adc
loopne
sub
fnstcw
inc
adc
cwtl
sub
insb
pop
fsubrl
pop
shrl
jno
bound
insb
loop
push
nop
and
mov
or
addr16
adcb
adc
imul
add
lahf
inc
sbb
mov
xchg
dec
xchg
jbe
pop
mov
cmp
popa
xor
jb
mov
sbb
adc
insl
or
lds
int3
and
dec
adc
rolb
pop
cmp
mov
jne
outsb
cltd
mov
jecxz
scas
clc
pop
fs
xor
mov
add
sbb
sbb
in
scas
lret
shrl
add
es
in
es
mov
push
imul
repz
fisubs
scas
add
push
outsb
aam
cmp
and
fs
cmc
xchg
loope
mov
test
or
inc
insl
aam
repz
mov
pop
ja
or
scas
pop
ljmp
dec
pop
mov
inc
or
jecxz
mov
jo
add
push
sbb
adc
add
cmp
push
dec
test
mov
rorb
inc
mov
addr16
icebp
popf
pop
xor
sbb
clc
cmpsl
stos
add
push
mov
mov
mov
sti
nop
add
mov
cmp
push
cmp
rdmsr
pop
rclb
les
pop
mov
cs
popf
mov
sbb
stc
es
push
and
dec
jne
jmp
cmp
jg
stos
dec
sbb
test
add
xor
adcl
fwait
or
sbb
lds
pop
popf
xorl
xchg
inc
push
cmp
xor
cwtl
sbb
imul
imul
push
or
fnstcw
call
dec
pop
pop
fwait
ret
mov
push
into
data16
arpl
cmpl
iret
jb
sbb
outsl
hlt
mov
lock
jmp
and
int
imul
hlt
and
and
iret
outsl
ret
push
mov
call
test
and
push
mov
mov
outsb
xlat
sub
push
aam
lcall
add
hlt
sbb
movsb
pop
sub
lea
and
jae
je
push
jecxz
mov
mov
cmp
mov
sbb
inc
nop
cmp
mov
xor
aad
fs
rcrl
nop
shrl
clc
dec
push
outsb
push
lahf
pop
jns
sbb
dec
xor
push
out
insb
mov
gs
cmp
subb
addb
adc
mov
xor
cmp
sbbl
inc
inc
divl
repnz
push
or
cmp
xchg
int
cmp
sub
pop
lret
adc
popa
insl
add
xor
mov
mov
repz
mov
mov
test
decl
inc
xchg
repnz
inc
ljmp
or
cmp
adcl
repnz
jmp
push
std
sbb
iret
shl
fsts
std
popa
xor
mov
insl
cmpsl
xor
inc
sub
cmp
mov
inc
int3
jbe
repnz
push
pop
mov
leave
push
cmp
lcall
dec
xor
pop
cltd
std
aad
cmp
fst
lods
in
xlat
popf
adc
fstpl
mov
js
add
xlat
cmpsb
sub
fst
or
jl
sarb
mov
jle
jbe
or
and
ja
adc
cmpsb
aas
or
jo
in
fisubl
sti
fldpi
into
shll
jb
ret
or
cmp
mov
fldenv
mov
scas
out
jno
pop
jnp
sbb
cmp
test
push
xchg
sti
mov
les
mov
clc
jmp
test
add
push
data16
aad
sub
cmp
subl
shrb
cltd
and
popf
xor
dec
iret
in
jno
call
imul
inc
dec
sbb
jge
ss
enter
lret
dec
dec
lock
push
mov
xor
sub
decl
cmp
add
jnp
repz
push
cmp
jbe
in
jb
in
rolb
jg
aas
inc
push
inc
adc
clc
xchg
das
out
ja
popa
inc
int
push
sbb
jle
add
pushf
lock
lret
rorl
int3
rcr
mov
pop
rcrl
das
sbb
mov
dec
in
out
adc
cmp
repz
movsb
test
dec
or
add
push
mov
cld
cld
mov
aad
xor
or
jne
mov
movsl
bnd
or
rolb
and
insl
mov
jge
adc
fs
pop
dec
mov
das
pop
or
sub
mov
pushf
jp
ds
xchg
or
mov
mov
lea
add
fwait
loope
addr16
or
popf
arpl
or
xchg
dec
cwtl
ret
add
movsb
push
inc
rcll
add
push
sbb
or
movsl
movsb
je
rclb
mov
pusha
nop
mov
data16
fadds
xchg
jmp
jp
rorb
mov
mov
inc
pop
jno
setg
insl
iret
das
stos
xchg
aas
sub
adc
sbb
in
push
sti
pop
fcomip
fnstenv
mov
iret
cmp
and
jmp
dec
fwait
push
mov
mov
mov
sub
mov
add
in
cwtl
sub
pop
sarl
push
mov
fsts
mov
mov
mov
lods
out
push
xchg
add
mov
test
ret
iret
jg
inc
and
stos
push
cld
pop
into
pop
mov
sbb
test
cmc
and
das
ficoms
mov
cmp
mov
push
cmpb
je
inc
pop
mov
cs
mov
xchg
cmp
fiaddl
in
lods
pop
push
outsb
sahf
gs
pusha
cmp
or
test
fmulp
push
inc
loopne
add
nop
sbb
js
dec
lods
jg
loope
inc
inc
pusha
sbb
push
xor
push
movsb
or
xlat
and
mov
cltd
and
push
push
pop
cmp
sub
mov
push
jmp
xchg
push
mov
jle
mov
aaa
mov
mov
jp
mov
int3
mov
mulb
enter
sbb
leave
mov
into
mov
in
xchg
nop
mov
fildl
bound
stos
inc
cmpsb
ret
and
testl
cmpsb
es
inc
push
add
std
clc
inc
sub
mov
jl
loop
popa
lcall
cmp
dec
pushf
pop
mov
or
mov
test
mov
or
mov
pop
pop
xor
ror
push
mov
xlat
hlt
insb
ret
lock
frstor
xchg
push
xchg
jp
jmp
adc
xchg
xor
cmpsb
mov
or
jne
addl
or
pushl
jmp
in
cwtl
test
stos
mov
out
and
mov
push
xchg
add
add
addl
pop
xchg
jmp
adc
orl
das
jno
js
outsb
cmp
cmp
mov
cwtl
shll
fisttpll
rol
push
out
dec
cmp
aaa
xor
xchg
clc
cwtl
pop
lea
jmp
in
jbe
add
ja
bound
mov
lods
mov
sub
inc
push
inc
mov
icebp
ss
jecxz
pushf
lock
xor
mov
call
rcr
loop
xchg
popa
mov
ljmp
mov
pop
jb
mov
dec
int
sbb
or
mov
into
jg
inc
pop
jne
xchg
inc
enter
into
stc
dec
jmp
fiadds
mov
xor
dec
and
inc
iret
mov
push
add
movl
das
addr16
pop
mov
out
lret
das
xchg
lret
adcl
pop
and
incb
cwtl
outsb
sahf
inc
sbb
jne
faddl
cmpsl
sti
into
fimull
add
ret
sub
jecxz
movsl
mov
pop
ljmp
lret
xchg
inc
gs
mov
cli
out
aas
pop
mov
mov
jno
mov
add
adc
arpl
sub
repz
pop
add
mov
and
cli
add
mov
ljmp
cwtl
adc
mov
ss
add
add
scas
inc
lock
ret
pushf
insb
filds
mov
push
xor
fidivs
and
aaa
fucomp
mov
mov
ja
sbb
aad
arpl
push
cmp
and
ds
ja
loopne
ret
sahf
mov
dec
adc
mov
jbe
adcb
xchg
jo
fimuls
mov
mov
out
lret
and
add
pop
hlt
aam
add
mov
shufps
mov
inc
xchg
xlat
mov
test
out
mov
and
xchg
sub
and
into
inc
inc
add
stc
daa
mull
repnz
xor
imull
push
inc
push
mov
xor
push
inc
dec
add
fcomp
jb
inc
sub
jb
out
xchg
int
mov
out
push
daa
int
pop
sub
addl
add
lods
lret
ds
out
add
xchg
fdivr
fbld
push
fdivl
fisubl
into
pushf
stos
out
mov
lret
add
and
pop
arpl
inc
jge
loopne
imul
ficoml
test
cmc
arpl
cwtl
mov
inc
into
decb
in
push
inc
aad
pop
xchg
push
dec
pop
popf
mov
fcmovnbe
xchg
sub
popf
mov
fnstsw
cs
pushl
lahf
dec
jb
test
push
orb
push
in
test
shrl
outsl
pop
push
loope
dec
mov
out
xor
decb
out
cmp
test
js
xchg
lds
fwait
mov
xchg
xorb
sarb
mov
pop
jo
and
mov
jo
scas
or
pop
movsl
mov
jno
jnp
mov
pop
bound
inc
xlat
je
xchg
jecxz
popa
cwtl
movb
scas
sbb
rcl
into
add
inc
cs
insb
out
dec
and
loop
or
lcall
add
cmpsb
add
aam
mov
push
fbstp
cltd
lods
in
pusha
test
dec
punpckhwd
bound
add
aam
mov
sub
dec
test
cmp
mov
add
pop
jmp
adc
push
leave
jae
leave
add
scas
sub
movsb
cltd
adc
pop
inc
push
or
push
xchg
mov
push
jmp
and
jge
cmpl
push
loope
mov
sub
or
xchg
shll
mov
and
popa
push
test
adc
xor
xor
sbb
dec
sub
sbb
jge
lods
pop
mov
lock
xchg
sbb
inc
lret
stos
sbb
pusha
pop
jns
or
push
xchg
add
dec
movsl
sub
stos
aas
pushl
or
adc
cli
mov
pop
pop
test
add
xor
and
cmc
and
or
pop
mov
mov
jo
sbb
pop
test
in
or
popf
out
enter
xchg
rcl
adc
movsl
push
int
pop
loop
cmp
inc
mov
ror
pop
mov
popf
in
and
stos
xchg
sub
rcrl
in
movsb
jo
xor
pop
clc
into
out
mov
mov
test
clc
mov
sarb
scas
and
cmp
cmpsb
mov
cmpsb
adc
ffreep
jbe
out
add
scas
movsl
movsb
and
xchg
sti
ds
stos
xor
mov
sbb
sbb
xchg
mov
jo
mov
stos
aam
aaa
xchg
clc
pop
push
loop
xchg
pop
out
xchg
pop
push
aam
jns
add
sub
xor
shll
or
mov
fstpl
dec
inc
and
ss
mov
mov
xor
xlat
inc
scas
aas
xchg
sbbb
mov
nop
std
xor
hlt
fnstsw
mull
popa
jo
or
test
jl
fnstsw
repz
mov
sub
add
mov
iret
pushf
cs
jns
in
fmul
mov
ds
cmp
jecxz
jno
inc
xchg
arpl
pop
inc
ss
imul
jne
adcb
xchg
add
and
test
adc
ljmp
pop
repz
jp
jns
push
xchg
jecxz
xor
adc
fs
and
inc
jl
sahf
cmp
add
mov
sbb
inc
sub
sub
cld
ret
cwtl
mov
inc
sub
bswap
mov
ljmp
xchg
pop
test
mov
xor
andl
sbb
mov
or
mov
js
or
lret
ljmp
mov
xchg
in
mov
iret
cwtl
cmp
adc
adc
adc
mov
mov
arpl
dec
leave
leave
push
dec
enter
jnp
sub
cmp
pop
nop
sub
mov
dec
sbb
out
es
loop
jnp
loop
inc
sub
dec
push
fnsave
xchg
xor
xor
pushf
xorb
xchg
adc
mov
mov
cmp
cmp
push
sahf
mov
js
dec
scas
mov
ret
loopne
mov
sub
lea
and
and
jno
pop
int
jge
or
push
in
outsl
mov
adc
xchg
rclb
xor
cmp
sbb
sub
scas
in
mov
fstl
movsl
mov
xchg
lcall
xor
cwtl
or
xor
xor
mov
out
repnz
push
stos
sub
cmp
faddl
clc
push
add
imul
mov
jle
outsl
inc
dec
loope
stos
insb
mov
mov
je
mov
roll
std
or
ljmp
loopne
adc
push
mov
inc
xchg
jb
push
sub
xor
adc
out
repz
pushf
push
lret
loope
outsb
lods
add
jns
pop
add
mul
cmpsl
mov
lahf
mov
push
cld
sub
pop
pop
xchg
popf
adc
ss
icebp
pop
insl
add
xchg
adc
cmp
cwtl
les
pop
dec
pop
imul
shrl
repz
hlt
mov
inc
pop
or
aaa
push
cmpsl
repz
jecxz
repnz
or
subl
inc
cld
xor
lret
pop
dec
pop
clc
and
fisttpl
fnstcw
insb
test
cwtl
cli
xchg
add
dec
xor
fidivl
sub
in
mov
sub
sbb
fidivrl
mulb
and
push
fistpl
inc
fcmovnb
aad
xchg
clc
pop
jmp
cmp
rolb
adc
sahf
mov
pop
aaa
leave
inc
xchg
dec
les
or
loopne,pt
fs
mov
cmp
insl
adc
adcb
sub
aad
sub
and
add
cs
loop
xorl
std
repnz
lods
daa
cmc
ljmp
or
in
movb
dec
pop
mov
mov
mov
sbb
aad
mov
mov
insl
add
sbb
mov
adc
mov
ds
xor
in
push
add
push
or
fstpt
adc
shrl
fucom
mov
mov
xlat
loopne
sbb
lods
je
xor
mov
andb
and
inc
mov
scas
and
xor
sbbl
inc
mov
sbb
inc
pop
ljmp
stos
mov
xchg
push
jge
ror
xchg
mov
or
xor
jg
add
enter
sub
pop
pop
dec
xor
std
pushf
xor
popf
fstl
sbb
jno
mov
adc
je
popa
std
pop
test
mov
outsl
mov
fildll
xlat
sub
mov
idivb
mov
mov
sbb
fmul
cmp
xor
icebp
or
sbb
lahf
aad
push
adc
jo
dec
jecxz
mov
fstps
add
insl
je
jmp
mov
test
js
addb
mov
mov
frstor
negb
lods
cmpl
cmp
mov
dec
gs
nop
repnz
sub
cltd
shlb
pop
imul
xor
push
jl
sub
lret
or
es
cltd
dec
orb
jle
inc
xor
inc
lret
out
xchg
mov
mov
and
hlt
aad
dec
xchg
movsl
cmc
movsl
aas
or
shlb
test
inc
hlt
inc
outsb
fiaddl
fistps
loop
adc
and
xchg
jmp
daa
dec
inc
cmp
add
daa
pop
dec
and
lret
icebp
pop
push
fisubs
jp
mov
xorw
addr16
fnstcw
loopne
notl
nop
mov
sub
jle
or
jle
rol
test
mov
cmpsl
cmc
pop
mov
test
or
call
jecxz
test
mov
push
pop
aad
jae
jg
jge
sub
xlat
xor
dec
shr
outsb
les
mov
in
repnz
adc
mov
ror
call
push
aam
sarb
les
inc
dec
sbb
in
in
jnp
inc
mov
sub
lock
loop
in
adc
mov
std
test
add
lock
cmp
jbe
pop
mov
adc
mov
pusha
xchg
mov
cmp
pop
in
mov
shrb
int3
mov
mov
add
push
gs
cmp
mov
lods
adc
sbb
dec
mov
or
daa
lds
add
or
adc
push
cmc
add
jge
vpunpcklqdq
dec
mov
push
pop
arpl
mov
loopne
mov
lret
jae
mov
enter
dec
sbb
or
push
fbstp
lret
clc
push
ljmp
adc
sbb
dec
cwtl
xorl
mov
addr16
jecxz
test
pop
inc
icebp
cltd
dec
fnstcw
or
and
repnz
cmovge
popf
repz
adc
jp
mov
gs
xorb
inc
and
jecxz
dec
adc
pop
insb
pusha
dec
xchg
jl
arpl
pop
mov
hlt
xchg
mov
dec
dec
aam
jnp
pop
cmp
fisubrl
jmp
addr16
xor
imul
mov
outsb
sbb
xor
popf
leave
shrl
pushf
sub
aaa
dec
fisttpl
pop
cli
inc
pusha
stos
jbe
cmp
mov
mov
inc
pop
dec
popa
dec
cs
repz
mov
pop
out
mov
out
shr
and
mov
cmp
pop
adc
and
fstpl
idivb
stos
rol
lea
jae
out
add
and
mov
add
loopne
test
xchg
in
push
cmp
aad
jo
mov
test
mov
inc
inc
mov
lret
insl
sub
mov
xor
mov
shrl
pop
or
mov
mov
out
push
sbb
xchg
test
and
lock
rcrl
cwtl
es
stos
insl
push
lods
cmp
xchg
pop
xchg
and
lods
pop
jmp
sbb
cltd
test
mov
add
mov
mov
xchg
push
push
test
test
sbb
cmp
jecxz
aas
jge
xchg
jecxz
add
xchg
pop
dec
pop
in
xchg
ss
cmp
jge
loopne
push
mov
cmpsb
jne
test
dec
cmc
test
inc
and
mov
fistps
push
stos
iret
lea
mov
push
aas
mov
loopne
cmpsl
pop
xchg
addb
aam
mov
jne
add
cmp
outsl
ja
stc
mov
and
inc
inc
pusha
mov
loopne
mov
cmp
mov
mov
in
repz
jbe
fsubl
pop
push
mov
test
and
push
dec
pop
lods
pop
add
pop
inc
movsb
rclb
cmp
add
xlat
sbb
jp
subb
fsts
and
push
pop
fucomi
mov
or
leave
dec
pop
sub
xor
cmpsb
cmpsl
enter
pop
jne
les
loopne
std
push
or
jne
mov
push
fisttpl
je
aad
sub
pop
mov
fimull
cltd
pop
ficoms
pushf
or
fdivrl
inc
out
pop
mov
bound
cs
jns
jge
cmpsb
mov
int3
rcll
mov
cli
loopne
aaa
and
xorb
and
jl
fiaddl
js
sub
push
xchg
cwtl
cld
cmp
jle
mov
imul
arpl
imul
movsb
cmp
aas
push
xchg
pop
lds
cmpsb
inc
out
ficoml
frstor
movsl
out
outsl
pop
add
mov
mov
out
fbstp
outsb
sub
add
int3
mov
in
mov
mov
add
enter
xor
pop
int3
mov
mov
mov
fwait
aaa
hlt
sbb
cmp
daa
pop
imul
xchg
lock
xor
dec
inc
aaa
mov
or
inc
and
xor
cmpsb
mov
lods
int3
jle
das
int3
imul
test
ret
jmp
sbb
pusha
adc
sub
mov
push
ret
mov
subb
popa
incl
and
jle
lock
clc
inc
xchg
repnz
push
in
jno
jl
mov
jb
inc
xor
push
sbb
int3
lods
fucomp
push
test
mov
dec
jo
jecxz
jne
loope
addr16
loope
call
outsl
and
ja
std
sub
std
push
rclb
negl
push
push
push
push
shlb
sbbb
pop
fstpt
push
mov
and
xor
dec
mov
scas
bound
or
sbb
jge
je
outsl
sbb
das
aad
mov
push
jne
gs
inc
pop
test
aad
mov
shlb
push
in
add
adc
mov
cmp
mov
data16
mov
push
popf
and
movsb
or
lret
add
andb
enter
call
cmp
mov
push
inc
aaa
fmuls
test
das
or
lret
dec
mov
mov
push
sbb
jnp
repz
loop
adc
rcr
mov
jmp
iret
aam
xor
sub
scas
mov
add
clc
leave
jp
inc
lcall
aaa
pushf
stos
rcrb
mov
dec
dec
pop
xchg
std
test
mov
mov
js
cld
fwait
fwait
lret
mov
mov
cmp
mov
fnstenv
fstpl
mov
sbb
sub
mov
les
sbb
add
sbb
inc
hlt
test
push
and
fmul
das
loope
leave
gs
xchg
adc
inc
push
cli
xchg
adc
scas
dec
ds
inc
das
fucomip
sub
mov
in
or
add
ljmp
add
push
push
cld
lds
mov
rcr
je
dec
mov
bound
movsl
and
mov
pop
popf
mov
xchg
mov
cltd
es
and
cmp
call
jmp
cs
lods
adc
es
pop
rol
enter
fcmovne
sub
stos
gs
ja
cmpl
fcmovnu
and
or
testb
in
mov
pushf
sub
sbb
sbb
sbb
push
test
or
add
push
push
test
orb
jne
lea
sub
push
fsubl
mov
cwtl
add
dec
shlb
fxch
xchg
cmp
jne
stos
mov
lods
dec
mov
dec
dec
in
fstps
jbe
insb
add
stos
mov
mov
andl
enter
das
mov
stos
mov
enter
inc
adc
dec
cmp
push
out
loopne
or
xor
xchg
or
stc
cmp
pop
push
stc
pop
xor
dec
jge
mov
jb
ljmp
lods
xchg
scas
repz
dec
push
inc
adc
pop
sub
shl
outsl
mov
pop
lcall
and
add
push
fnstenv
leave
rolb
mov
orb
push
out
test
xchg
repz
in
mov
call
sbb
dec
loope
out
jbe
jns
adcl
push
pop
mov
cmpsb
test
sbb
push
stos
push
div
push
in
mov
sub
inc
test
add
rdmsr
pop
mov
jnp
loope
push
sbb
pop
inc
je
inc
mov
cmp
dec
push
jb
stc
fstpt
pusha
xchg
dec
call
cmpsb
stos
stc
ret
data16
sub
sub
ljmp
jecxz
mov
xor
into
mov
or
imul
jmp
add
mov
pop
jl
pop
mov
mov
mov
iret
or
mov
int3
stos
sbb
cs
jle
imul
popf
dec
daa
leave
test
add
push
or
movsb
inc
leave
sbb
sbb
and
sub
shlb
push
iret
jle
pop
jnp
hlt
pop
int
aam
jmp
movsl
jmp
xchg
or
cwtl
add
adcb
addr16
ds
xchg
push
mov
jbe
fidivs
lods
insb
cmp
pop
mov
nop
cmp
adc
add
xchg
jecxz
pop
ret
sahf
jecxz
add
loopne
fcom
stos
popa
jg
xchg
icebp
dec
pop
pop
jecxz
sti
bound
add
pop
rcrl
mov
mov
ljmp
and
call
aad
sub
mov
pop
pop
mov
mov
dec
cmp
mov
and
movsl
xchg
mov
pop
cwtl
adcb
sti
sti
imull
dec
stc
rol
jae
mov
ds
mov
and
dec
adcb
and
cmp
rcll
xor
lcall
inc
aam
in
sub
insb
movsl
jo
inc
cmpsb
dec
dec
cmp
imul
sub
xchg
imul
dec
cmp
roll
sub
jl
les
lds
xchg
inc
jmp
mov
push
iret
js
data16
pop
repz
or
loopne
add
push
popl
in
cmpsl
out
mov
jecxz
es
adc
loope
xchg
push
cli
pop
or
mov
adc
fs
jge
sti
rorl
xlat
lock
pop
or
iret
mov
jecxz
loope
mov
movsb
fcomps
jns
icebp
js
jl
adcb
add
mov
mov
pop
xchg
mov
dec
mov
test
aaa
xchg
mov
lods
popf
mov
cwtl
bound
cmpsb
pop
lcall
ljmp
xor
sti
icebp
js
out
stos
icebp
mov
push
mov
cmp
int3
and
into
andl
lcall
sub
dec
int
sahf
jp
xlat
push
out
decl
mov
jmp
cli
dec
scas
push
xchg
inc
push
mov
mov
xchg
cld
push
lcall
cmc
push
pop
enter
add
sbb
mov
mov
outsl
xchg
push
mov
lds
jg
pushl
inc
mov
cld
dec
jnp
fistps
jns
or
mov
clc
adc
push
fsub
jb
sbb
loope
add
mov
enter
cmc
inc
sbb
je
xchg
aaa
nop
fnsave
mov
cmc
add
faddl
sub
dec
cmp
jge
push
cld
jecxz
add
in
icebp
adc
adc
jne
mov
dec
xchg
cmp
jnp
mov
stos
jo
fwait
push
shrb
imul
dec
in
cmp
pop
popf
pop
inc
in
push
sbb
aam
xchg
and
fs
xorl
mov
fisttpll
addr16
roll
addr16
dec
fistps
call
jae
push
cmp
movsb
rcr
ret
stos
push
fistl
mov
stos
pop
les
mov
mov
lahf
xchg
sub
int
test
and
ljmp
push
and
shlb
decb
out
loopne
in
inc
aad
insb
inc
icebp
pop
mov
leave
cmc
sbb
adc
jge
sub
sub
arpl
or
scas
sub
sbb
push
lahf
sti
cmp
jne
pushf
mov
popa
jb
jmp
aas
add
aam
sahf
mov
data16
ret
scas
or
push
lea
mov
je
adc
cltd
pop
ret
aas
mov
adc
adc
jl
xchg
sbb
stos
ficomps
repnz
pop
sub
or
inc
ret
adc
rorl
inc
sbb
pop
aas
mov
in
addl
in
ror
imul
mov
jecxz
mov
lahf
movsl
inc
push
inc
lahf
in
dec
sbb
xorb
in
or
mov
adc
stc
imul
dec
push
jmp
dec
leave
mov
in
jecxz
out
mov
push
xchg
or
pop
mov
xor
mov
cs
xchg
and
mulb
push
mov
stos
rcrb
int3
xchg
mov
adc
ljmp
clc
pop
and
pop
lds
lahf
mov
mov
fmull
shll
cmc
out
pop
push
jmp
pop
stos
lock
push
and
fisttps
sub
xlat
pusha
or
or
int3
xchg
mov
stos
xchg
cwtl
in
mov
or
sub
in
fwait
sar
in
push
jno
stos
lcall
popl
mov
jle
orb
mov
and
inc
pop
cltd
push
iret
xchg
jb
xor
add
lods
dec
flds
dec
std
icebp
jnp
fstl
stos
mov
rcrb
dec
call
sub
cmpsl
out
pop
xchg
inc
xchg
popa
xchg
pop
out
mov
or
and
lcall
lret
sub
popa
pop
lock
push
stc
xchg
in
data16
daa
mov
std
clc
xchg
sub
mov
clc
je
stos
in
stos
stc
cmpsb
add
jb
xor
fisubrs
je
xor
xor
daa
cmp
mov
jb
adc
lock
pop
cmpsl
ljmp
xchg
sahf
or
mov
sahf
jnp
movsb
popl
outsl
sbb
cld
cmp
sub
adc
rorb
xchg
xchg
repz
loopne
xchg
sbb
daa
lock
test
xchg
mov
into
cmp
pop
es
leave
mov
cli
inc
lcall
push
mov
and
fstp
mov
dec
cs
into
pop
push
xor
hlt
add
pop
push
sub
cli
jle
outsb
icebp
jecxz
add
es
les
mov
ljmp
push
add
test
sub
dec
dec
cld
xor
leave
js
push
fdivrs
fcoms
imul
js
inc
das
and
push
cltd
out
sub
aam
or
add
mov
jl
sub
or
sti
shll
lock
mov
dec
cmp
lret
mov
in
cmp
and
in
stos
imul
or
or
or
iret
adc
mov
sub
cmp
loope
mov
push
insb
dec
hlt
cmc
jb
xchg
mov
push
mov
xor
lret
mov
sbb
sbb
dec
ja
inc
addb
mov
sub
inc
xchg
cmp
dec
in
mov
mov
sub
jge
jne
pop
rcl
xor
mov
mov
out
push
movsl
outsl
mov
push
adc
pop
mov
cmp
xchg
mov
mov
leave
mov
jl
cmp
cmpsl
cmc
repnz
addr16
cmp
adc
and
rorb
ja
jge
dec
mov
inc
in
xchg
shll
or
jp
adcl
test
jl
add
fnsave
enter
push
sbbl
mov
mov
mov
loop
push
ja
aad
cld
xchg
std
adc
lds
into
pop
dec
push
jge
int3
aad
xor
movsl
sbb
inc
xchg
cli
mov
cmp
sub
movsb
pop
inc
and
inc
cmp
adc
mov
or
or
inc
sub
aaa
not
jns
outsl
lock
lods
xor
xor
mov
fistpll
push
dec
mov
outsb
cwtl
scas
push
xor
into
testb
mov
out
push
mov
cmc
mov
jl
and
mov
push
inc
push
push
stos
ret
imul
add
adc
cmc
dec
lds
add
scas
das
push
add
dec
inc
roll
mov
pop
cmp
mov
pop
and
push
pop
ret
sbb
and
shl
xor
push
stc
xchg
lcall
int
sahf
lcall
mov
and
shlb
inc
fldenv
test
imul
aad
gs
inc
sbb
scas
jo
adc
push
add
adc
in
popa
mov
mov
push
ret
dec
mov
mov
xchg
mov
xchg
cs
in
out
jg
fistpl
mov
jne
mov
and
sbb
clc
insb
movsb
xor
mov
fwait
dec
ja
fildl
fidivrl
or
and
sub
cli
lods
cmp
adc
repz
jns
hlt
xchg
sbb
int
test
lea
add
mov
or
sub
insb
cli
sti
mov
inc
xchg
iret
inc
insl
mov
repz
mov
adc
repz
inc
xor
sbb
outsl
repz
mov
xor
adc
or
inc
out
adc
pusha
scas
arpl
scas
pushf
lcall
jb
shrl
jg
or
inc
adc
xchg
jbe
mov
and
mov
dec
cmp
imull
push
in
hlt
cmp
cmpsb
inc
mov
cwtl
pushf
pop
push
cmpsl
mov
mov
or
add
dec
push
fldt
stos
out
popa
jmp
push
sar
lock
xchg
cmp
nop
fisubrs
dec
nop
add
mov
out
cmpsl
inc
dec
nop
cwtl
pop
sbb
fidivl
add
and
inc
mov
mov
orl
nop
pop
lods
xchg
sbb
mov
in
cli
pop
ret
xchg
aam
add
sahf
inc
adcl
ret
ret
xor
inc
jo
icebp
xor
push
xor
in
ljmp
ret
add
aad
fcompl
movsb
enter
mov
pop
xchg
test
movsl
roll
xor
pop
cbtw
aas
dec
sbbb
insl
test
xchg
mov
ljmp
dec
dec
push
in
aaa
les
cmp
xchg
add
pop
outsb
stc
jbe
popf
cs
ds
fisubs
loop
or
fimuls
xchg
sub
loopne
and
cmpsl
cmp
xchg
addr16
adc
aaa
std
dec
and
cld
or
add
push
add
aam
popa
jbe
leave
mov
jo
shlb
xor
loop
stos
daa
xor
call
loope
ds
stos
insb
popf
add
scas
jmp
cmpsb
sbb
jge
mov
xchg
push
xchg
pushf
std
std
stos
inc
mov
jmp
imul
mov
mov
icebp
xchg
pop
sub
popa
data16
mov
lods
lcall
pop
shl
adc
inc
dec
hlt
sti
lcall
fidivrl
das
push
xor
push
mov
adc
cmpsl
hlt
mov
iret
mov
push
lcall
ror
or
hlt
mov
xor
ret
int
and
loope
push
cs
aas
or
push
fiadds
faddp
cmp
hlt
shll
push
push
in
cmpl
or
outsb
dec
shlb
fwait
mov
mov
jne
in
lods
out
cltd
pop
loope
in
pop
adcb
int
mov
loopne
int3
out
in
mov
fdivrs
or
and
outsl
in
dec
sbb
xchg
in
es
push
les
add
aam
add
into
push
popa
lahf
sub
imul
scas
add
mov
pop
pusha
jge
xor
mov
mov
xor
push
fiaddl
dec
lea
loope
dec
sbb
movsb
mov
dec
jp
std
lock
sub
jbe
nop
jp
sbb
sbb
movsl
icebp
mov
insl
outsl
ror
jg
pushf
rcrb
mov
mov
cmp
add
inc
nop
mov
adc
mov
mov
adc
sbb
cmp
sub
xchg
cmp
jne
push
xchg
pop
pusha
out
arpl
in
push
push
cmp
nop
sub
nop
xor
stc
mov
lret
pushf
ss
or
xchg
dec
xor
jne
inc
jae
stos
pop
nop
xchg
sbb
xchg
icebp
repnz
adc
xchg
lods
inc
add
stc
mov
xor
pop
movsl
jge
mov
aad
inc
outsb
cli
cmp
and
mov
dec
or
pop
test
dec
insb
clc
cmpsb
ds
jo
xor
push
fs
xchg
clc
push
sbb
stc
mov
sbb
es
lcall
stos
les
sbb
jno
sub
jl
repnz
repnz
mov
inc
pop
fdivr
adc
add
roll
mov
cmpsb
add
imul
fwait
inc
rcrl
push
fs
jle
xor
xchg
pop
and
mov
add
insl
addr16
xchg
dec
inc
mov
mov
and
fdivr
xor
sahf
pop
out
mov
sub
cld
test
mov
jp
and
or
ret
std
jg
test
cmp
adc
push
addb
cmp
popa
xchg
int
jl
pop
or
cli
fsin
pushf
mov
cmpsb
loop
xor
shll
mov
incb
xor
sbb
movsb
jl
sbb
das
jne
cmp
sbb
mov
mov
std
mov
imul
imul
xlat
dec
mov
jecxz
insb
orl
test
sub
mov
int3
dec
mov
cmp
lods
xchg
movsl
pop
fwait
jb
jno
mov
adc
push
test
or
cmpsb
mov
push
fs
fs
daa
sahf
mov
ljmp
add
imul
add
jnp
sbb
cmp
popf
out
xchg
jbe
das
or
sub
repnz
xor
jne
xchg
push
push
out
sub
int
inc
xchg
fdivrs
push
movsl
jle
xchg
push
mov
sub
stos
outsl
subl
push
mov
test
push
mov
or
inc
in
inc
out
lods
jo
out
std
movlps
cltd
jb
popa
mov
cwtl
xchg
cld
inc
int
cmp
cmp
sbb
inc
clc
mov
out
movsl
dec
sbb
shrl
outsb
pop
sbb
fsts
and
pop
lds
gs
jg
rorl
and
mov
sti
jmp
sub
or
and
push
imul
and
movsl
sbb
pop
push
adc
sub
sbb
daa
pop
mov
iret
ss
push
jb
rorl
mov
fmul
loopne
iret
add
mov
lods
faddl
lahf
mov
loop
adc
jmp
or
or
rcl
mov
test
xchg
xchg
xchg
shl
xor
ret
std
movsb
cs
add
sub
cmp
adcl
sub
xor
out
js
xchg
dec
lahf
in
cmc
ss
cld
clc
mov
fisubl
xor
insb
faddl
push
ret
ror
imul
dec
and
pop
cwtl
adc
push
cmp
jbe
cltd
cmpsb
lea
lret
adc
adc
push
test
loope
test
sbb
movsb
xchg
inc
xchg
adc
dec
sbb
mov
out
or
push
lahf
xor
jmp
movsl
test
mov
ret
xchg
ss
sbb
fcomi
add
dec
xor
int3
int3
inc
sub
dec
pop
xor
mov
arpl
push
mov
push
and
lock
sahf
fs
adc
jge
pop
mov
les
lcall
and
adc
cmp
andnps
or
push
jns
jbe
mov
dec
repz
dec
pop
sub
sar
loop
xchg
int
pop
cs
dec
xchg
scas
mov
out
pop
add
xor
mov
insl
stos
inc
scas
xlat
jns
push
cwtl
cmp
adc
cld
sbb
jmp
mov
pop
add
pop
inc
push
xchg
dec
push
xor
test
mov
adcb
cwtl
xchg
push
xchg
dec
sbb
mov
jno
pop
add
mov
sbb
sub
repz
pop
xor
push
mov
push
adc
jno
push
mov
pop
and
mov
or
push
push
into
in
push
ss
sti
mov
fldenv
mov
lods
in
dec
fucomi
aad
leave
arpl
push
add
stc
je
mov
jge
lret
addr16
lret
cmp
cmc
xor
lea
adc
inc
or
jmp
aaa
movb
jg
fstp
add
aad
xor
add
add
jl
mov
pop
incb
push
nop
scas
out
add
mov
push
and
xchg
adc
in
push
push
jmp
xor
sub
gs
and
mov
test
and
jnp
dec
or
ja
push
in
inc
add
cmpsb
jecxz
xor
lock
std
fistps
pop
inc
xor
xchg
mov
push
sub
adc
or
inc
inc
orl
ljmp
jbe
jmp
dec
adc
lock
mov
lock
xchg
les
add
das
mov
sub
inc
sub
and
rcll
inc
std
jo
dec
stos
push
inc
cli
push
dec
mov
xchg
dec
xchg
aam
sub
loop
jb
sbb
or
and
cli
fcomps
sub
pop
ss
repnz
mov
ficoms
shl
mov
int3
jno
mov
inc
push
out
aam
mov
mov
outsb
pop
and
sbb
mov
mov
shll
shrl
test
push
cli
add
enter
aad
sarb
pop
add
imul
cmp
pop
dec
adc
xlat
xor
cwtl
push
outsb
gs
bound
nop
lahf
jmp
jle
pop
mov
mov
jcxz
add
fsubs
adc
dec
inc
jle
mov
mov
dec
push
push
and
xor
notl
mov
cmpsb
ja
xchg
sub
inc
orb
mov
dec
cwtl
pusha
rcll
adcb
idiv
pop
sub
data16
rcl
xor
add
rorb
cld
fimuls
mov
push
mov
or
mov
lret
addr16
test
mov
iret
das
mov
loope
fstps
int
push
aaa
add
jl
or
aam
add
sub
rolb
dec
imul
push
xor
mov
aad
mov
mov
push
lods
mov
lods
gs
jge
mov
iret
dec
sarb
adc
fwait
cld
and
dec
sahf
sub
push
push
mov
mov
mov
xchg
mov
lcall
pop
jg
jl
push
test
adcl
fistpll
pop
and
lods
jg
jp
mov
mov
xchg
push
insl
cld
insl
adc
pop
inc
sbb
pop
rclb
xchg
sti
aaa
mov
add
xchg
dec
mov
into
lea
bound
or
mov
cmp
xlat
jp
sub
lock
pop
xchg
ret
xchg
dec
inc
mov
xorl
xchg
sbb
ret
and
aam
add
sbb
lea
loopne
out
jno
js
repnz
fiaddl
mov
adc
mov
or
in
test
mov
sub
pop
push
cwtl
sub
xor
dec
mov
xlat
dec
movsl
inc
push
and
add
xchg
push
and
popf
shll
xchg
rcrl
jo
push
sub
mul
or
stc
outsl
adc
stos
std
cmp
ftst
add
and
mov
dec
imul
mov
sub
mov
inc
gs
mov
sub
in
mov
cmp
or
call
ret
jb
mov
ficomps
insl
sub
jb
or
xor
cmp
neg
sahf
adc
stos
repz
test
mov
dec
pop
in
out
stos
iret
cmp
test
sub
xor
test
jnp
lcall
sub
mov
sub
ret
pop
data16
into
xchg
lock
dec
scas
jp
dec
in
jmp
and
rcrb
notl
loop
adc
mov
lret
xor
test
icebp
es
mov
sbb
pop
scas
aad
xchg
cmp
mov
jo
push
push
leave
and
sub
es
pop
int3
ja
nop
addl
mov
loope
cmp
das
sbb
xchg
mov
sbb
dec
pop
mov
loope
ret
sbb
mov
fldt
push
add
and
and
ficoms
lods
and
mov
xchg
pop
sahf
sbb
lds
cwtl
dec
addr16
cmp
add
pop
jecxz
xchg
mov
push
sbb
fadd
push
inc
pushf
mull
lods
lcall
mov
out
stc
mov
sub
movsb
lods
xchg
lret
out
inc
cs
jno
test
movb
movsb
lahf
jno
sarb
push
bound
add
bound
xor
and
test
push
cmp
test
fstpt
adc
dec
mov
movsl
pop
aas
adcb
sbb
fstpl
mov
or
scas
xchg
shlb
insl
mov
lcall
add
in
add
out
popa
jle
lret
out
push
gs
ja
adc
push
das
xchg
test
sarb
jg
add
pop
mov
gs
mov
aas
mov
inc
fidivrs
fucomp
and
int3
add
or
stc
cmpsb
mov
xor
jmp
mov
movsb
fisubs
sub
fldt
jg,pn
shlb
and
popf
fcomps
mov
pop
lret
pop
or
lods
jae
test
sub
push
cs
jge
dec
pop
lea
rclb
rorb
movsb
mov
inc
dec
jns
movsl
jbe
dec
pop
push
jns
jl
rcl
jb
enter
pop
push
rcrl
push
bound
in
bound
pop
and
incl
push
fstps
jl
sbb
cmp
mov
mov
mov
lods
add
sub
test
push
out
sbb
in
ja
push
push
into
xor
mov
cltd
pop
xorl
xchg
addr16
cld
xor
sbb
adc
pop
cmp
xor
add
ds
xchg
adc
neg
adc
bound
jge
cmp
sbb
jmp
push
or
hlt
pop
xchg
pop
cwtl
cmp
popa
jnp
push
xor
add
in
out
scas
movsl
push
test
lds
jecxz
fs
dec
add
jmp
pop
mov
std
cmp
iret
mov
sub
push
xor
dec
jle
mov
cmpsl
aas
aam
pop
jmp
sub
and
sti
push
test
mov
xchg
mov
push
xor
push
mov
cmp
movsl
faddl
sbb
cli
jae
adc
jns
pushf
lea
outsb
sbb
inc
mov
loope
nop
movsb
cld
movsb
ja
and
mov
out
in
rorb
call
sub
out
mov
jp
xchg
jge
scas
dec
jbe
or
scas
add
int
int
cmp
mov
mov
jo
and
dec
bound
xor
bnd
stc
cmp
in
adc
push
jg
sarl
and
jge
add
loopne
mov
rolb
adc
sub
inc
mov
insl
lret
scas
rcrl
lret
out
cmc
mov
inc
pop
inc
fs
rcr
pop
jg
mov
sub
add
cmp
and
scas
div
jl
das
sahf
or
sub
push
or
mov
aam
aad
dec
xchg
mov
and
xchg
ds
cmp
lods
hlt
les
aad
mov
inc
sub
xchg
xor
mov
mov
cmp
cmp
mov
push
das
mov
pop
pusha
xchg
int3
xchg
hlt
loop
mov
or
sub
fiadds
jg
into
and
push
cmp
dec
push
std
add
repz
push
jl
mov
and
out
aas
pop
lahf
lret
icebp
ljmp
xor
pop
sbb
fdivrl
mov
xchg
jge
jmp
mov
xor
or
sbb
mov
and
inc
cltd
inc
shl
pop
dec
push
test
shl
ret
bound
lcall
nop
rcrb
dec
jge
test
shlb
enter
xchg
dec
call
or
insb
inc
adc
aaa
movsl
lock
mov
push
inc
fdivl
cmp
xchg
or
outsb
sub
jl
mov
jp
xor
adc
jno
cmc
jne
cmp
jo
addl
sbb
int
subl
leave
pusha
adc
inc
cmp
add
lcall
mov
shrl
push
gs
mov
adc
daa
push
outsl
leave
test
sub
add
jle
mov
clc
sti
push
leave
inc
rcrl
cmp
shl
rcrb
ss
mov
push
push
inc
jp
lds
mov
aas
mov
inc
pop
fistl
push
push
jle
cmc
dec
cmpsl
fs
or
mov
andb
lds
mov
popf
shll
sub
xor
pushl
in
mov
mov
addr16
jmp
sahf
shrb
push
cmpl
repnz
and
push
push
pusha
test
mov
inc
mov
xor
test
arpl
cli
rcl
insl
clc
dec
filds
push
lea
fs
pop
add
pop
idivb
pop
es
je
adc
fdivs
les
mov
mov
xchg
mov
popl
inc
push
test
js
bound
andl
xchg
jle
mov
ja
jl
inc
cmpsl
jmp
arpl
sbb
push
add
scas
dec
out
sub
popa
imul
add
shr
mov
lods
dec
xor
push
fcoms
xchg
dec
jns
xor
sti
jg
jno
inc
into
push
mov
mov
in
and
je
and
push
ret
sbb
jmp
xchg
daa
and
sarl
mov
mov
test
push
stc
enter
popf
xchg
mov
pop
mov
clc
inc
jp
push
lret
mov
inc
js
push
sahf
pop
pop
popf
or
fisubrl
ss
out
ret
push
dec
cwtl
lock
clc
adc
bound
add
aas
cltd
cmp
hlt
shl
pop
inc
pop
or
push
push
jge
fldl
inc
add
decl
shrb
xor
and
clc
nop
xchg
inc
in
nop
imul
mov
mov
xor
mov
inc
daa
jecxz
idivb
mov
scas
outsb
push
dec
or
imul
add
inc
dec
xor
sbb
xor
add
mov
mov
rol
call
lret
daa
sahf
scas
mov
inc
std
dec
add
rorl
or
xchg
rclb
sub
mov
mov
and
fadd
add
rcr
push
inc
cmpsb
or
in
aas
repnz
xchg
mov
push
rorl
arpl
dec
sahf
sbbb
shr
cs
xchg
mov
lea
ret
ds
test
cld
ljmp
filds
mov
dec
jo
lock
dec
xor
pop
lods
push
daa
adc
sub
ror
shl
and
mov
addb
arpl
or
enter
or
adc
lret
add
lds
sbb
and
push
orb
aas
add
lret
ror
outsb
pop
mov
das
mov
mov
cld
outsl
mov
mov
in
subl
jo
movsb
das
fildll
jns
mov
add
sarl
xor
ret
mov
addl
and
test
cld
push
adc
mov
call
shl
cmp
mov
iret
ret
sarl
push
dec
jl
mov
sub
jae
push
iret
xchg
push
out
cmp
adcb
int
xor
sti
fsubs
or
sarl
mov
or
std
movsl
sti
dec
and
icebp
lods
je
in
in
fcmove
xchg
mov
mov
sub
push
and
and
std
pop
imul
pcmpgtb
lds
test
leave
out
mov
push
inc
adc
ljmp
in
pop
cmp
adc
xchg
mov
lcall
mov
adcb
pop
bnd
cmp
movsl
or
lea
push
in
daa
xlat
or
pop
sub
loop
mov
cld
push
cmp
sbb
and
sub
xor
or
je
icebp
ret
dec
fwait
addr16
aam
jg
mov
push
lret
dec
out
jp
sub
mov
das
inc
sbb
ja
cmp
pop
fildll
js
sbb
lea
into
mov
cmp
in
adc
add
fldcw
push
xorb
lea
pop
inc
stos
mov
dec
aaa
sub
mov
cmpsl
cmpsb
mov
jns
jmp
jae
mov
inc
lds
push
mov
mov
xor
icebp
inc
fisttps
stos
loope
jb
fwait
aas
sub
loopne
xchg
popf
int3
vmread
pop
nop
sbb
push
xor
mov
or
pop
enter
xchg
test
xor
mov
out
dec
cmp
mov
sahf
imul
adc
pop
ret
xchg
ds
stos
fdivs
cli
fldcw
in
arpl
mov
imul
ljmp
ss
mov
fisttpl
shlb
enter
iret
fwait
push
pop
gs
fs
mov
sub
loopne
lds
ret
lock
movb
xchg
sahf
mov
lea
js
mov
leave
inc
out
aam
test
inc
std
xor
scas
daa
loopne
pusha
fwait
sti
pop
xor
mov
inc
cmp
test
js
stc
cmpb
mov
pop
lds
fmul
push
xor
andb
ja
scas
cmp
sbb
lods
or
int3
xchg
ret
sub
popa
int3
dec
cmp
ljmp
mov
push
pushf
xor
ds
rcrb
jp
xor
xor
push
fcomi
dec
cs
adc
inc
lret
mov
insb
jp
push
push
add
jp
and
shlb
sti
jbe
or
aaa
sub
dec
stc
mov
jae
mov
adc
mov
dec
movsl
and
rorb
adc
cmpsl
pop
cwtl
psubq
push
test
jo
loop
and
cltd
xchg
mov
jnp
mov
loope
imulb
dec
jle
adc
pop
cli
test
cmp
jo
or
push
mov
cmp
jne
imul
imul
ffreep
fwait
cmc
dec
dec
mov
int3
dec
call
outsb
dec
inc
push
scas
xor
jns
pop
adc
jl
in
mov
test
cmpsb
or
js
insl
aad
sahf
pop
and
xchg
stc
pop
xorb
xor
push
pusha
mov
test
cmp
clc
xor
mov
mov
mov
sbb
xchg
pop
mov
or
loop
nop
je
add
push
xchg
int
xor
xchg
sahf
inc
add
pop
and
in
sbb
push
adc
jae
cltd
mov
mov
xor
stos
dec
fbstp
lahf
cmpsb
imul
xchg
or
mov
jl
aad
clc
ds
cmp
mov
add
mov
add
push
ret
scas
mov
jbe
fsts
xor
int
pop
lret
sub
push
fdivrl
mov
stos
imul
jne
sub
fs
inc
lret
data16
xor
mov
daa
rcrb
ja
xor
into
and
cmp
sbb
mov
je
mov
jp
jge
sub
scas
pop
jne
in
call
stos
xchg
insl
xorl
and
or
inc
push
sbb
cmpsl
and
scas
pop
xor
xchg
xor
stos
and
jnp
scas
jl
outsl
ret
jp
mov
add
rorb
sub
jno
loopne
cmp
mov
xchg
push
popf
inc
pop
or
call
and
cmpl
mov
pushf
mov
push
and
push
or
popa
sbb
fsubl
fidivs
psubb
cmp
hlt
outsl
sbb
test
mov
imull
lret
mov
loopne
mov
push
push
movl
sbb
sbbl
andb
sub
loop
int
into
fcomps
movsb
pop
push
xchg
add
pop
pop
jae
enter
jb
test
jmp
call
mov
inc
mov
aaa
inc
mov
sbb
scas
loop
lret
js
pop
inc
into
scas
or
and
xor
jno
jmp
adc
dec
sbb
push
pop
sbbb
dec
dec
stos
ret
xchg
cmp
mov
adc
mov
pusha
add
jns
xadd
jo
jmp
cmp
jp
jp
movsb
jns
mov
inc
xor
dec
push
imul
jmp
cmp
or
mov
popa
dec
sbb
cmp
into
pop
xorb
dec
mov
sbb
std
mov
sbb
fwait
mov
fs
mov
and
fwait
pop
arpl
push
sub
lea
mov
or
cmp
push
mov
jp
fucomip
shrl
aas
fisttpl
jb
sub
add
jmp
sbb
or
cmc
xorb
nop
mov
xchg
aad
adc
icebp
fbstp
xchg
fidivs
insb
push
loope
lcall
fs
lret
mov
aam
pop
aam
ret
add
mov
xchg
cmpsb
add
test
iret
mov
stos
push
jbe
addl
inc
jge
leave
enter
mov
lcall
dec
push
mov
lahf
repnz
pop
cmp
add
pusha
ss
push
out
ljmp
mov
inc
fildl
stos
mov
cmpsl
mov
cmp
mov
ljmp
adc
stos
incl
adc
pusha
jle
lods
mov
mov
mov
insl
pop
jl
lods
sti
stos
mov
cli
inc
pop
jecxz
roll
mov
pushl
push
js
gs
and
push
jl
xor
pop
andb
jo
test
mull
shll
sbb
enter
xchg
fistl
mov
jno
mov
add
divl
lret
xor
inc
mov
pop
rorb
cmovne
fnstenv
mov
imul
xchg
ljmp
sub
jo
lret
in
jno
cld
pop
repz
dec
gs
mov
les
hlt
push
pop
jb
push
pusha
aas
jge
icebp
mov
js
sub
pop
repnz
sbb
mov
mov
lods
mov
and
fcoml
notb
repz
clc
xor
mov
sub
nop
daa
mov
mov
popa
lret
xor
into
sbb
stos
aas
icebp
push
cmp
clc
hlt
int3
xchg
add
jne
pop
loopne
lock
mov
adc
fisubs
dec
fists
jns
pop
inc
ljmp
mov
outsl
xor
push
jbe
aad
mov
sbb
pop
push
mov
xor
push
aad
lahf
fwait
jmp
and
test
adc
lods
out
cld
test
adc
pop
add
cmpsl
xor
mov
in
sbb
aas
mov
jmp
arpl
js
sub
dec
ljmp
mov
fcompl
cs
jle
cmpsl
int3
mov
xor
movsb
dec
lds
ret
jnp
daa
jg
repnz
jg
cmpsl
add
ret
hlt
cmp
adc
inc
test
pop
push
xor
stc
test
push
mov
and
push
xchg
lds
pop
out
inc
cmp
jmp
sbb
out
lock
in
dec
ss
in
mov
jge
inc
push
mov
in
add
mov
loop
imul
jle
fstpl
xor
sub
mov
pop
inc
clc
push
adc
loop
cli
fadds
nop
jmp
andb
inc
adc
imul
scas
inc
jecxz
es
mov
push
and
pop
mov
aad
out
mov
shlb
gs
sub
call
xchg
cmp
imul
jmp
dec
xor
je
fnsave
andl
pop
lret
cs
out
dec
insl
bound
test
insl
fwait
mov
jecxz
cmp
pop
and
sbb
xchg
aaa
enter
dec
jns
cmp
or
std
loope
pop
pusha
rcr
les
pop
mov
decl
insl
sarl
int
mov
jle
push
jne
lea
mov
pop
popf
mov
jmp
adc
xchg
inc
push
lcall
sbb
imul
filds
pop
xor
push
and
ja
mov
push
cld
enter
stc
rolb
push
insb
or
pop
sbb
cmp
mov
jmp
add
call
mov
sbb
ss
pop
outsl
pop
repz
sub
pop
xchg
pop
cs
mov
xlat
dec
cmp
adc
jbe
push
push
lock
adc
fwait
pop
inc
hlt
loopne
mov
loope
mov
fimuls
lahf
inc
sbb
xorl
and
or
ret
repnz
sti
mov
ret
xchg
popa
lods
stos
das
adc
lods
loop
mov
sub
jo
nop
shll
pop
fs
or
cs
test
nop
mov
pop
in
dec
popf
addl
mov
sarb
xlat
in
mov
push
test
xchg
lea
push
arpl
xlat
les
aaa
negl
xor
dec
in
and
sub
int3
int3
inc
sub
cmc
sbb
pusha
lahf
or
cmpsb
gs
xchg
inc
scas
pushf
inc
pop
cltd
pop
test
loope
insb
out
mov
mov
movsl
or
das
sahf
outsb
in
jne
test
push
sti
ljmp
add
mov
adc
xor
mov
add
in
xchg
cmp
lods
or
xchg
cmp
jg
sub
mov
push
imull
xor
jl
push
and
mov
ret
mov
pushf
jecxz
int3
inc
xchg
pop
int3
rcll
movsl
std
jnp
inc
pop
mov
in
sbb
push
fimuls
sbb
push
fmulp
mov
inc
ret
hlt
imul
push
jg
pop
adc
push
adc
into
sub
fimull
fldt
cmp
sbb
fwait
cmp
call
jge
insl
or
jae
mov
push
ror
cmpsb
push
cwtl
divl
in
aam
daa
imul
stos
pop
aaa
out
cli
pushf
shl
jle
pop
es
mov
scas
mov
outsb
add
adc
push
rorb
dec
push
ret
sub
cmp
int
icebp
into
xchg
movsb
cmpsl
addr16
mov
hlt
push
xor
out
lret
adc
stos
push
orl
dec
sarb
adc
dec
push
fsubrs
sub
xchg
and
lahf
enterw
sub
or
aam
std
insl
mov
mov
call
les
std
dec
jle
test
ds
lods
rorl
aam
mov
mov
and
subl
push
ficomps
sbb
adcb
ja
add
loop
icebp
jns
test
insb
jg
mov
mov
mov
adc
das
in
cmpsl
add
repz
decb
fs
cmc
pop
fistpl
mov
xor
scas
cmc
pop
enter
popf
sbb
call
fldln2
cmp
pushf
fldenv
sbb
jl
outsl
cmp
fisttpll
mov
cmpsl
int3
jo
repnz
sbb
shlb
outsl
sbbl
xor
add
imul
out
push
fidivrs
push
jp
push
fs
in
mov
roll
inc
lret
gs
and
fstl
leave
lcall
jmp
mov
shl
xor
xchg
mov
leave
dec
sahf
xchg
or
lods
cmpsb
cmp
ss
mov
in
test
movl
lods
ljmp
dec
sbb
dec
mov
adcb
inc
mov
stc
jns
insb
jns
push
mov
mov
shll
pop
outsl
in
adc
stos
test
aam
push
dec
leave
std
push
lret
mov
or
push
or
inc
and
dec
js
mov
cwtl
mov
push
mov
loop
push
sbb
clc
icebp
cltd
sub
and
pop
int3
inc
aam
out
cs
aas
lahf
add
jnp
xchg
mov
enter
leave
or
jle
std
sub
or
jp
inc
test
dec
in
fst
leave
sub
aaa
ss
mov
ficompl
insb
mov
mov
dec
push
mov
cli
loopne
adc
mov
ret
test
shrl
js
sub
pop
daa
jb
push
mov
mov
mov
mov
lahf
xor
ss
sbb
rclb
movsb
cltd
lods
nop
cmp
jno
or
mov
push
daa
xlat
js
loope
inc
or
jmp
es
es
xorb
or
push
stos
push
outsl
xchg
adc
sbb
add
sarl
or
aad
pop
xorb
mov
pop
xor
jle
inc
push
or
sub
sub
sti
js
pop
insl
pop
js
inc
add
enter
popa
cmp
mov
cmpl
mov
cmpsb
sbb
addr16
imul
arpl
jns
jne
test
push
rolb
cmpsb
mov
scas
loop
pop
mov
dec
mov
inc
das
shlb
popf
test
sbb
aas
mov
gs
ret
fisubs
xor
mov
enter
pop
jbe
and
push
mov
popa
aad
pop
loope
xchg
and
pop
sub
sbb
enter
repz
andb
es
sbb
filds
xchg
icebp
mov
adc
shll
dec
sub
sub
xchg
push
mov
mov
push
push
jae
leave
scas
es
movsl
sbb
loope
or
push
inc
int3
mov
or
div
xlat
push
lea
and
mov
popf
mov
add
loopne
mov
jae
in
inc
xchg
sahf
adc
mov
xor
inc
fs
jne
xor
movsb
dec
es
ds
jp
mov
out
iret
jbe
xchg
fcmovnu
xchg
test
push
jp
mov
push
out
and
mov
rcrb
add
push
insb
ss
mov
pop
shl
movsb
popa
mov
lds
ds
aad
jle
sbb
or
xor
fadds
mov
xchg
cmpb
sbb
scas
shlb
shl
ljmp
xchg
movswl
aad
sub
out
mov
test
out
dec
xor
sbb
lods
cltd
lretw
adc
js
xchg
xor
dec
rcll
push
ret
insb
xor
xor
adc
or
jecxz
jge
ret
cmp
lods
cltd
stos
push
add
loop
test
ljmp
sbb
cltd
pushf
loope
or
rcll
jb
mov
mov
pop
adc
sub
dec
andl
cwtl
out
inc
and
pop
cmp
pop
add
xor
enter
and
pop
cmp
mov
popf
and
vmovss
push
jno
push
lds
push
subl
mov
and
pop
lock
push
inc
inc
sub
or
cwtl
xchg
enter
xchg
xor
rcll
rorb
ss
xor
cwtl
int3
dec
ds
mov
fidivrl
test
call
jg
arpl
jg
mov
clc
lret
daa
and
jg
add
xor
mov
je
xchg
jbe
jne
xorl
inc
mov
add
inc
pop
lret
jae
pusha
mov
out
fildl
lds
loopne
xchg
outsb
and
and
test
jp
sbb
xchg
lcall
leave
or
fwait
dec
lock
cmp
arpl
sub
outsl
jae
cmp
mov
sbb
add
push
inc
pop
jbe
cmc
loope
jo
xchg
sbb
sbb
xchg
cmc
mov
orl
into
mov
fstps
and
dec
dec
push
sbb
icebp
pop
es
mov
lahf
lds
or
or
fcmovbe
adc
push
cmp
mov
inc
cmp
inc
inc
call
stc
and
arpl
pushf
ss
pop
push
xchg
sub
mov
rorb
pop
nop
pop
mov
xor
inc
sbb
pop
and
adc
pop
and
jecxz
adc
push
sub
push
sahf
imul
jle
pop
lcall
mov
xchg
repz
rcl
dec
aad
fwait
lods
mov
or
cld
cmp
mov
adc
fcmovnb
int
sbb
outsl
loopne
div
outsb
sub
pop
into
leave
push
fidivl
arpl
cmp
inc
fildll
jno
cmp
gs
sbb
xor
dec
iret
ljmp
adc
push
addr16
or
incl
ds
xchg
mov
test
outsl
imul
or
cli
idivl
lahf
push
jp
xchg
mov
cmc
data16
imul
push
sbb
fildl
mov
loopne
ja
movsb
cs
mov
xchg
cmp
sbb
inc
cmp
test
push
jl
out
outsb
or
lcall
mov
dec
jnp
jl
or
pushf
stos
sub
loopne
add
adc
cld
mov
lcall
popf
push
cmpsl
mov
cmp
jo
cmpl
sub
lcall
in
int
dec
or
setle
mov
leave
andb
sub
sbb
test
mov
pop
into
jno
out
xor
aad
fisubrl
adc
dec
hlt
dec
loop
loope
push
pop
bound
jge
imul
dec
xchg
je
ja
fsubrs
mov
sub
mov
cmp
jl
jge
scas
stos
fsubr
ja
int3
xor
sbb
jmp
sbb
shr
enter
pop
test
cld
cmp
lret
popf
testb
inc
xchg
out
popf
add
rolb
lds
insl
mov
jg
pop
das
dec
push
out
dec
and
dec
lock
pop
cmpsb
xchg
push
lea
out
out
jne
push
or
and
pop
mov
inc
dec
mov
xchg
clc
jo
movsb
outsl
roll
ret
test
xchg
hlt
or
xchg
icebp
jl
sub
roll
jge
out
add
js
xlat
lret
out
inc
jg
rclb
xor
je
leave
push
and
pop
jne
mov
aas
or
sbb
inc
push
js
xchg
test
xorb
daa
or
movsb
call
lods
sbb
in
xchg
xchg
mov
int
sbbb
pop
sbb
mov
push
int3
mov
or
mov
mov
lds
xchg
adc
les
lods
imul
xchg
hlt
adc
lahf
mov
fsubl
dec
inc
sarl
cmp
leave
loope
pop
out
mov
inc
arpl
adc
xor
dec
mov
ret
lret
add
cmp
pop
dec
add
or
aad
in
mov
lock
cs
inc
mov
pop
inc
shl
xchg
cmpl
and
pop
and
popa
pop
pop
mov
inc
xchg
push
scas
decl
adc
sub
sbb
inc
add
leave
sbb
cmp
std
adc
ret
jne
jno
lods
fstl
mov
mov
sbb
ljmp
ret
push
mov
jle
clc
mov
sub
sahf
push
aaa
in
push
pop
aam
push
ljmp
int
adc
insl
in
sub
and
jb
lret
mov
fcompl
and
ja
ficoml
in
stos
dec
sbb
pop
or
dec
jae
push
mov
insl
in
push
and
inc
and
imul
aad
push
pop
jnp
mov
push
in
fs
mov
sbb
inc
imul
aad
add
aaa
jb
dec
inc
inc
daa
ret
scas
imul
lret
movsb
out
and
push
lret
or
jmp
pop
rclb
clc
xor
faddl
jp
out
sbb
scas
mov
lods
fwait
adc
push
ret
push
jg
roll
push
rorb
mov
inc
sub
xchg
sub
cmp
stos
je
sbb
pop
push
pop
pmaxub
adc
sub
mov
dec
leave
mov
insl
data16
pop
enter
mov
xchg
jb
rcll
jl
out
push
cwtl
jne
ret
loopne
int3
dec
add
rclb
icebp
mov
popa
pop
repnz
divb
jl
testb
mov
push
rep
jle
xchg
out
mov
aam
loopne
hlt
test
push
and
popf
cli
cmp
xorb
xlat
stc
mov
sarl
mov
test
add
adc
push
out
scas
jns
aaa
sbb
push
in
ljmp
or
xchg
je
loope
pop
rcll
lods
fldenv
jle
push
int3
test
push
xchg
scas
shrl
test
xchg
sbb
cld
stc
mov
hlt
loopne
jecxz
mov
mov
call
or
out
jge
ret
das
sbb
ljmp
fcmovu
fadds
adcl
jl
mov
out
mov
ficoml
lds
lahf
mov
out
pop
dec
sub
xor
aas
and
adc
and
sub
sti
stos
in
mov
in
mov
loope
outsb
sub
mov
xchg
mov
pusha
popa
inc
mov
rcl
ficoms
xchg
pop
popa
xchg
inc
xor
dec
xor
icebp
push
push
and
inc
int3
sbb
dec
loop
setl
inc
sti
add
jae
int
in
adc
xor
push
psrad
jg
enter
lds
jnp
out
xchg
pop
int3
arpl
mov
arpl
adc
inc
jge
ret
js
mov
aam
fildll
test
cld
out
mov
enter
mov
push
xor
cmp
cmp
jle
sbb
enter
and
std
sbb
or
jmp
push
jg
stos
dec
push
insl
lahf
aad
or
pop
jecxz
je
and
and
lret
and
xchg
pop
stos
jbe
add
sub
mov
enter
popf
dec
xor
incb
jp,pn
push
adc
mov
sarb
out
adc
into
data16
je
sbb
aam
jne
fcoml
jp
and
cld
pop
jno
mov
imul
lds
jno
sahf
leave
push
lds
cmc
sub
cltd
push
xor
fdivrp
cmp
jno
loop
mov
sbb
ret
bnd
inc
xor
dec
or
inc
das
add
jb
out
call
jbe
jge
int3
scas
jnp
adc
loop
lds
pop
in
jae
cmp
add
inc
push
add
arpl
pmulhw
dec
iret
xor
mov
mov
or
iret
xchg
dec
jge
or
sti
call
clc
sub
mov
mov
lret
aad
stos
cmp
mov
cmpsb
loope
fisttpl
dec
xchg
inc
shlb
gs
nopl
mov
pop
shlb
push
jecxz
in
icebp
fsts
or
jno
and
mov
inc
sbb
stos
out
into
stos
wrmsr
mov
and
fwait
add
das
jns
sbb
popf
cmp
and
lret
xor
testb
sbb
inc
jle
js
enter
mov
xchg
cltd
pushl
dec
ds
fsts
test
imul
lret
xlat
jns
das
jmp
adc
push
fdiv
ret
mov
mov
scas
jge
sti
cwtl
aam
imul
out
lods
aas
xchg
xchg
adc
insl
lcall
jl
sbb
fisubrs
in
leave
out
aad
sub
shrb
push
cmpl
sbb
adc
xchg
loop
or
popf
movsl
xchg
lahf
jnp
lods
cmpsl
adc
in
pushf
jecxz
orb
es
sahf
movups
dec
sub
es
mov
jg
adc
or
fcmovnb
adc
lds
dec
inc
add
jmp
pop
sbb
lock
mov
pusha
and
inc
jns
popa
push
jl
scas
lods
fists
adc
out
sbb
or
sub
out
arpl
mov
movsb
mov
das
and
mov
add
lret
lret
inc
jae
repz
sub
inc
jne
arpl
orb
jecxz
pop
icebp
xchg
test
loop
mov
mov
lret
je
loopne
int3
inc
popf
lahf
loopne
lret
and
jge
add
jne
sub
fmuls
pop
sub
lods
push
cmc
jl
in
adc
cmp
hlt
test
fistpl
and
push
negb
ficomps
cli
lret
ret
out
and
lahf
push
js
xchg
jg
sub
xlat
aas
clc
mov
jmp
aam
lock
sbb
daa
ret
sbb
jmp
cmp
inc
test
fdiv
and
das
dec
repz
mov
lods
scas
cli
sub
or
xchg
jno
jns
sahf
imul
jle
pop
mul
dec
xchg
in
test
rorl
loopne
xchg
sahf
fnstsw
and
fimull
lahf
roll
sub
inc
xchg
dec
mov
je
and
cmp
and
daa
aad
cmpsb
outsl
sbb
jp
loop
rcll
cmp
mov
js
into
rcll
mov
lret
sub
shlb
int
xchg
inc
fnstenv
jp
nop
enter
push
push
jbe
cwtl
and
enter
rorl
mov
fiaddl
dec
sti
call
aas
ror
repz
add
mov
adc
push
jb
inc
nop
sbb
mov
out
cltd
push
sahf
dec
inc
stos
pop
es
mov
popa
loopne
or
sub
loope
xchg
jns
imul
fcoms
sub
jl
outsl
lock
adc
push
adc
pop
mov
inc
adc
ja
xchg
insb
les
xor
call
sub
and
sbb
jmp
ja
ljmp
ret
repnz
movsl
adc
add
pop
cld
stos
daa
into
arpl
add
js
cmp
jp
in
push
out
ja
loopne
sub
stc
rorb
insl
xchg
dec
gs
movsb
sarb
jno
xchg
xchg
xchg
inc
lret
add
add
addr16
imul
ljmp
insl
mov
movhps
lcall
sbb
mov
mov
and
pusha
and
mov
ja
or
or
adc
fmul
sbbb
pop
pop
testl
rclb
hlt
xor
std
or
stos
es
mov
xchg
sahf
ficompl
sbb
mull
add
and
mov
arpl
xchg
push
popl
imull
xor
test
sbb
push
inc
inc
dec
mov
clc
divl
push
jmp
pop
repnz
cli
jge
sbb
xchg
or
stos
sarl
out
inc
mov
test
aam
push
addr16
inc
push
pop
fs
pop
nop
push
fisttps
in
jmp
jno
icebp
jae
loopne
test
outsl
mov
js
shl
or
and
das
into
shll
mov
jl
adc
in
mov
lea
pop
divb
push
ret
rcrl
inc
mov
cmp
sbb
adc
mov
in
std
push
test
shr
inc
stos
in
sub
jae
xchg
loopne
icebp
ds
out
cli
push
cltd
xchg
fdivl
mov
and
fimuls
mov
sub
int
sbb
in
xor
mov
ja
mov
out
pop
aad
mull
subl
adc
push
mov
sub
enter
sbb
mov
xor
gs
lret
xor
loop
xor
inc
jmp
inc
adc
mov
pop
add
in
push
xchg
in
popa
fcomps
dec
incb
lds
sahf
inc
jb
mov
test
pop
nop
push
and
in
mov
lahf
cmp
test
xor
or
fildl
dec
or
mov
das
cld
pushf
or
or
jno
lods
iret
mov
dec
xchg
add
inc
cwtl
jmp
out
sub
pop
push
sbb
jmp
les
fwait
mov
rclb
ret
ret
xor
int3
adc
pop
stos
leave
loop
lods
adc
pusha
cwtl
ljmp
xchg
fidivrs
sti
mov
cld
fstps
pop
jg
out
ret
outsb
stos
adc
in
dec
je
cmc
lock
inc
mov
add
aaa
jle
js
sbb
push
pop
daa
xor
adc
stos
enter
mov
data16
pop
push
cli
mov
pop
fiadds
mov
flds
lods
cmp
icebp
repz
and
dec
fisubs
into
and
push
imul
fisttpll
mov
test
xchg
ret
pop
test
and
bound
aam
clc
adc
sbb
fcmovu
out
pop
xor
and
pop
add
mov
inc
inc
fwait
dec
mov
or
mov
jns
cmp
movsb
test
adc
push
notl
imul
hlt
inc
out
ja
pusha
orb
sub
shrl
jp,pn
into
call
fmuls
scas
aam
fwait
ja
stos
or
xlat
mov
sbb
cmp
arpl
pop
jno
push
mov
dec
mov
lods
dec
cmc
or
hlt
repnz
lret
cmc
inc
fisubs
mov
pop
xchg
pop
scas
gs
mov
sbb
cwtl
cmp
mov
push
sbb
cmp
mov
cmp
mov
push
pushf
and
leave
mov
fisubs
out
arpl
pop
mov
inc
xchg
js
cltd
add
dec
lret
cmp
or
add
mov
mulb
xor
int3
add
sbb
mov
cmp
cld
insb
lcall
addr16
test
mov
dec
and
add
and
xor
sbbb
push
cmpsl
xor
cmc
ljmp
fsubrl
dec
int3
dec
and
arpl
into
insl
jg
loop
iret
xchg
xor
jnp
pop
and
loop
sbb
xchg
loop
cmc
int3
jl
pop
sbb
sbb
xchg
jo
mov
cmp
fists
xor
adc
dec
sbb
xacquire
loope
pop
inc
inc
push
or
nop
mov
aam
jle
icebp
ja
out
jp
dec
insl
lahf
push
jo
push
lods
mov
out
xchg
adc
push
shlb
pop
lea
pop
aaa
jne
mov
shlb
dec
data16
jb
fs
test
sub
lea
shrb
mov
sub
xor
fistps
in
sub
pop
sarb
push
mov
mov
aaa
sbb
mov
mov
inc
loop
or
enter
insb
sbb
push
mov
jge
jmp
xor
sbb
out
lcall
jl
jle
inc
pop
iret
push
xchg
inc
cwtl
popw
xchg
outsl
or
sub
xchg
jmp
adc
adc
iret
or
std
pop
jge
add
bound
mov
ret
sub
push
lea
push
dec
mov
shrl
fnsave
dec
inc
enter
rcrl
shll
sbb
dec
insb
lods
sahf
dec
and
dec
clc
out
out
stos
xor
fdivrl
mov
dec
pop
jg
lods
stc
stos
call
xlat
lret
aad
aas
fs
pushf
subl
mov
push
jmp
inc
in
jg
test
mov
mov
hlt
inc
fsubl
mov
pop
push
cmpsb
out
sbb
push
inc
xchg
repz
dec
inc
pop
cli
push
inc
sub
push
push
sbb
insb
dec
sbb
dec
xchg
repz
mov
decb
test
js
sbb
test
pop
add
cmp
pop
mov
xor
mov
ja
pusha
aaa
xor
pop
or
sub
cmp
aad
sbb
lods
div
sub
out
xor
cli
shll
push
mov
mov
out
es
mov
sub
leave
jne
jns
and
xchg
stc
in
or
xor
jecxz,pt
sbb
push
sbb
push
ret
xor
or
or
loopne
mov
dec
and
cmp
mov
push
push
push
add
loop
fcmovb
jmp
scas
sbb
mov
sub
mov
add
ja
pusha
inc
pop
push
orb
out
cmpl
mov
sub
dec
out
nop
mov
outsl
and
inc
mov
icebp
lahf
cwtl
push
jg
xchg
movsb
das
fadd
mov
or
ss
inc
or
lcall
pushf
pop
pop
pop
mov
test
push
iret
sarl
nop
sub
mov
fsts
int
jb
xlat
push
push
add
mov
or
lds
cltd
mov
adc
adc
sub
xor
out
sti
inc
xchg
cmp
mov
insl
movsl
sub
xor
jp
call
mov
cwtl
pop
xchg
data16
and
mov
or
or
xadd
jle
arpl
lods
adc
adc
jl
mov
out
mov
mov
or
in
js
jno
dec
inc
fildl
push
mov
push
pop
jecxz
mov
pop
dec
out
mov
xchg
xchg
sub
mov
popl
inc
lahf
cmp
dec
out
mov
mov
fisubrl
call
sahf
push
int3
test
xor
pop
inc
imul
scas
data16
mov
xchg
pop
out
popf
shrb
xchg
sbb
adc
fucomip
andl
repnz
arpl
shll
inc
lods
imul
sub
out
out
xchg
popf
sub
push
adcb
jl
jno
adc
push
sub
or
div
cltd
pop
fldl
cmpl
shlb
leave
and
loope
cltd
mov
ss
or
mov
or
dec
sysexit
dec
mov
fildll
xchg
jmp
sar
out
mov
gs
rclb
cmpsb
mov
int3
movsb
sbb
or
idivl
nop
outsl
lods
add
inc
and
js
or
int3
iret
mov
lock
xor
push
xrelease
jo
mov
xor
es
mov
repz
shrl
lea
or
mov
je
push
int3
ss
sbb
sub
pop
add
arpl
cli
fildl
clc
pop
rolb
dec
stos
les
aam
mov
sub
out
pop
dec
pop
xor
lock
cmpsb
mull
mov
inc
clc
sahf
mov
fildl
test
add
sbb
or
out
adc
pushf
andb
outsb
and
xchg
and
std
mov
mov
jmp
jns
jge
sub
dec
pop
fidivrs
xchg
inc
addl
out
inc
adc
lcall
xlat
jb
cwtl
xchg
ror
xor
popa
mov
or
es
pop
ficompl
mov
fidivl
ret
lds
bound
ljmp
aaa
es
adc
jae
popa
xor
sbb
fldenv
sbb
sub
xor
clc
fisttpll
cltd
scas
push
mov
or
sahf
mov
aad
pop
or
sar
pop
rcll
std
lods
fists
and
stc
out
mov
fmul
test
fisubs
mov
mov
clc
mov
nop
sbb
cmc
adc
fsts
pop
mov
xor
aam
loope
xchg
mov
movsl
arpl
pop
xchg
test
jns
aad
dec
mov
daa
adc
adc
sub
fidivl
out
xor
es
xorb
mov
stos
adc
ficoml
ss
hlt
mov
mov
xchg
out
cmpsl
jne
popf
xor
xchg
ljmp
sbb
call
stos
push
adc
es
dec
call
xchg
stos
mov
add
fwait
pop
sbb
stc
clc
roll
inc
lcall
cmp
call
push
shll
out
sub
jo
xor
das
fidivl
xor
or
lds
or
add
sub
xlat
lods
lock
sbb
mov
scas
inc
enter
cmp
xchg
test
cmp
aam
ja
iret
sub
push
sub
test
fnstsw
test
add
iret
and
mov
aaa
xchg
es
in
andb
pop
sub
or
cmc
icebp
xchg
sti
jmp
sahf
enter
scas
pop
outsl
dec
idivl
and
cmp
call
es
jecxz
cmpsb
push
dec
out
popf
mov
arpl
cmpsb
cmp
sbb
dec
lahf
dec
push
sub
mov
adc
mov
nop
lcall
xchg
lret
mov
add
scas
cmp
mov
mov
fiaddl
mov
sti
mov
aad
in
mov
fldenv
jb
mov
lea
sahf
aad
arpl
push
aas
xorb
xchg
movsb
pop
aam
adc
add
in
test
inc
pop
sahf
and
sahf
cmp
sbb
mov
cli
push
push
xor
add
or
sub
sarl
and
fiadds
fsubs
mov
xor
xlat
xchg
fidivrs
int
dec
arpl
stos
jmp
or
pop
imul
pop
jecxz
and
add
scas
sub
pop
sub
fxch
pop
mov
pop
sub
mov
gs
cli
mov
rol
mov
lahf
ss
mov
mov
or
ret
sub
cld
cmp
and
out
dec
cmc
repnz
cmp
push
xchg
cwtl
fnstenv
test
adc
adc
cmpsb
jo
cld
lcall
test
xor
test
push
in
sbb
push
dec
aad
dec
push
insl
xor
add
mov
loopne
les
rclb
mov
dec
xorb
stc
inc
ss
mov
inc
or
push
push
rcr
adc
enter
jle
ja
pop
pop
in
inc
and
stos
add
sub
mov
stos
dec
push
js
and
pop
jl
inc
icebp
out
dec
xor
inc
inc
fistpl
lock
test
mov
inc
push
xchg
cmp
adc
xchg
xlat
xor
xor
sbb
sub
push
push
pop
sub
fldcw
ss
leave
test
lods
mov
lret
shll
aad
mov
js
ja
or
adc
das
es
daa
sbb
and
xor
xchg
push
packuswb
ss
loop
incl
int
dec
jb
insb
les
mov
ljmp
scas
inc
out
inc
mov
arpl
mov
rorl
mov
outsl
and
mov
in
movsb
imul
pushf
shrb
into
pop
xchg
movsb
movsl
sbb
mov
xchg
inc
jg,pn
shrl
insl
jg
outsl
stos
stos
movsb
cmc
dec
stc
repz
scas
mov
lods
je
inc
pop
fildll
mov
repnz
xchg
fisubl
ljmp
aaa
mov
hlt
pop
sbb
adc
mov
into
jno
cmpb
imul
jle
ljmp
test
sub
scas
add
xchg
movsl
sbb
inc
add
cmp
jl
fiaddl
sbb
mov
int
aaa
fisubrs
insb
pop
mov
mov
cmp
mov
mov
mov
nop
adc
test
repnz
cli
xchg
outsb
dec
inc
dec
inc
sbb
dec
mov
aaa
mov
jecxz
mov
lods
xlat
mov
mov
rclb
jbe
sbb
aas
cmp
fbstp
jge
cmpsl
and
das
xor
test
ss
loop
addb
jo
test
inc
and
jno
add
mov
mov
push
mov
cvttps2pi
fistpl
add
mov
mov
mov
dec
add
add
test
pop
sbbb
xor
or
ljmp
cmp
xchg
pop
mov
dec
or
mov
test
ja
sub
cmpsb
mov
jl
mov
push
xor
in
iret
xchg
test
pop
add
clc
stc
and
sbb
pop
mov
cmpb
xchg
loope
adc
popa
pop
movsl
xchg
in
scas
xchg
push
pop
scas
js
lahf
xchg
pop
xchg
es
shlb
inc
jmp
pusha
dec
lret
add
cli
mov
scas
sbbl
inc
dec
cmpb
jge
jnp
jl
and
and
push
out
xchg
jbe
add
cs
cltd
lret
inc
loop
cmp
int
mov
jecxz
je
hlt
pop
cmpsl
js
lea
icebp
cmp
hlt
cwtl
lsl
adcl
push
or
mov
jg
jnp
xchg
out
xor
mull
ret
out
inc
sub
push
mov
mov
adc
fs
in
mov
and
into
dec
insl
sahf
pop
add
mov
cmpsl
je
imul
sbb
orb
scas
in
jns
andl
les
mov
enter
std
ja
pushf
pusha
push
jg
je
add
dec
cwtl
dec
movsl
pop
push
mov
fimuls
inc
mov
mov
cmp
rcr
add
pop
dec
outsb
pop
out
mov
mov
lret
das
lret
xor
nop
std
and
icebp
jo
imul
pop
xor
xor
fwait
int
add
lahf
filds
rcl
mov
jmp
fiaddl
jle
popf
icebp
mov
data16
jecxz
out
movsl
jmp
push
sub
movl
cltd
pusha
cltd
push
cmp
and
cmp
and
mov
idiv
sub
hlt
pop
rcll
fiadds
inc
dec
sub
test
cmp
cs
mov
fistl
ss
dec
mov
daa
push
lods
in
stos
test
mov
nop
imul
jae
shr
rclb
out
adc
andl
insb
adc
inc
cmp
popa
push
pusha
mov
dec
dec
popl
jb
push
aas
in
fadds
xchg
xlat
cltd
mov
stc
sbb
scas
aas
clc
or
test
notl
in
js
pop
scas
ljmp
adc
test
shlb
iret
das
sarb
cmp
pop
js
mov
add
xchg
int
cmp
cmpsb
jns
stos
jle
call
dec
and
xchg
gs
int3
lea
cmpsb
sbb
push
xor
pop
mov
shl
int3
andl
mov
jp
enter
push
lcall
mov
movsl
mov
pop
imul
xor
insl
call
shrb
aas
cmpsl
test
stos
inc
std
stos
sub
push
lods
js
push
or
fs
mov
aad
jne
in
inc
push
shld
xor
and
sbb
fbld
lods
jmp
push
push
dec
es
shrl
in
and
and
addb
stos
or
test
stc
loop
cltd
xchg
sti
pop
or
xchg
repz
into
stc
xchg
lret
ret
sub
mov
and
stos
daa
test
scas
cwtl
xlat
adc
lret
imul
daa
div
adcl
xor
add
jno
cmp
das
or
mov
cmp
push
dec
mov
scas
inc
sub
testb
inc
add
cmp
in
sub
call
pop
push
cmpl
mov
pop
jg
add
push
sub
xchg
lahf
imul
and
shl
jae
cmp
mov
scas
cld
push
xchg
int
ljmp
popa
les
popa
int3
lret
imul
fs
jno
gs
cmp
jno
add
sub
loopne
fsubrs
push
and
in
sbb
jle
and
xchg
pusha
mov
inc
adc
inc
jl
es
jge
mov
outsl
push
jecxz
fisubrl
push
popa
xor
and
or
jo
ja
mov
mov
adc
or
pusha
dec
aas
push
push
sarb
mov
aas
rorb
jmp
add
fs
xor
mov
pop
andb
dec
ret
rol
enter
fidivrs
add
push
lods
or
sbbb
cmp
ljmp
aaa
scas
ja
push
add
dec
mov
add
fistl
sub
inc
dec
adc
fs
sub
jno
lock
iret
cmp
fs
pop
dec
pop
xor
mov
jge
lcall
lahf
cmpsb
lock
addr16
dec
jmp
push
leave
out
xor
and
push
adc
jmp
mov
sarb
imul
outsl
ret
push
lret
rcrl
mov
adc
scas
jle
inc
inc
inc
dec
add
and
pop
xchg
leave
inc
sbb
cmpsl
test
cmc
lcall
aad
and
inc
inc
dec
cmpsb
lcall
push
xchg
lds
outsl
pop
pusha
xor
rorl
je
add
fwait
pop
js
icebp
mov
add
loope
andb
test
cwtl
aas
cmp
shlb
mov
daa
xor
ja
test
inc
divl
rorb
push
clc
mov
out
loop
xor
xchg
test
es
xchg
outsb
pop
rcrl
data16
sub
bnd
mov
inc
xor
sbb
adc
fwait
sub
jb
push
mov
das
mov
loopne
sub
sub
pop
push
pop
and
pop
cld
adc
adc
insl
lret
lret
scas
add
jbe
dec
add
movsl
pop
popa
xchg
xor
jg
out
stc
mov
ss
or
cmp
pop
mov
mov
or
pop
fisubs
mov
imul
fisubl
xchg
mov
adc
xor
lret
cmp
insb
cwtl
or
inc
push
out
mov
push
push
or
fstl
ljmp
xor
push
imul
in
add
jb
dec
jb
flds
xor
mov
test
ljmp
in
mov
lret
add
mov
loopne
movsb
and
jnp
xchg
sahf
fwait
dec
push
adc
rcl
xor
into
jl
lret
xor
rol
fs
dec
fsubrp
bound
sub
in
iret
jge
lds
sahf
cmpsb
into
test
mov
je
lret
xchg
dec
test
cld
dec
cs
in
and
mov
sbb
pop
mov
and
mov
dec
push
lcall
fmuls
imull
jae
or
out
jne
int3
das
xchg
addb
loope
cmpsb
insb
dec
xchg
cmp
mov
xchg
ror
jnp
xchg
sbbb
pop
xor
cli
loop
aaa
nop
loopne
iret
ffreep
mov
lret
lods
push
sbbb
dec
int3
ret
mov
outsl
sub
xorb
adc
aad
mov
idivb
aam
mov
dec
pop
fcomps
inc
mov
mov
xchg
fstps
mov
mov
sub
jne
bound
cmp
xor
popa
sbb
pop
add
ret
sbb
or
clc
adc
jns
pusha
mov
inc
pushf
sti
xchg
mov
imul
lret
test
mov
aaa
mov
aad
arpl
jbe
sbb
call
cmp
or
cs
mov
gs
repz
sbb
leave
pop
iret
xchg
ret
and
or
flds
mov
xchg
popa
movsl
jmp
pop
out
add
fisubrs
mov
xchg
aam
lret
xor
inc
dec
jge
pop
lcall
push
loopne
fcomps
xchg
cmp
gs
xchg
roll
mov
hlt
xchg
inc
mov
xchg
adc
popf
and
cmp
adc
xor
imul
arpl
addr16
clc
fistl
mov
negb
aas
cltd
sub
cmc
out
push
sahf
dec
stc
jmp
sub
jp
jo
fmulp
cltd
inc
or
sbb
imul
out
loop
out
jge
pop
out
inc
sbb
cmc
cmc
adc
pop
cltd
or
mov
in
mov
push
loope
jne
or
pop
xchg
adc
xor
je
pop
out
mov
popl
jg
roll
lock
mov
in
jmp
jo
push
popa
out
test
cs
daa
sbb
mov
mov
lods
iret
cs
ljmp
jae
clc
cmp
adc
rolb
push
or
pop
jns
movsb
xchg
or
out
inc
mulb
dec
stos
add
int3
cmc
adc
sbb
shl
and
nop
push
mov
repz
pop
jb
iret
push
out
push
repz
icebp
and
aaa
mov
insl
ja
xor
sahf
mov
cltd
sti
fsubl
daa
sub
in
rclb
inc
insb
imul
jl
cltd
xchg
pop
int
loop
mov
push
and
and
xchg
push
adc
xor
mov
inc
test
imul
or
lods
push
dec
jb
xor
out
jbe
sbb
loopne
mov
in
cmc
inc
xor
and
daa
sbb
xchg
push
sti
pop
mov
es
xlat
cltd
mov
jns
add
dec
aam
test
gs
in
or
push
ret
inc
push
aaa
test
in
jmp
fwait
sbbb
shll
inc
jo
pop
imul
jmp
dec
sbb
ss
int
test
cli
push
aad
mov
inc
imul
in
sbb
and
dec
cmp
push
jge
fistpl
add
es
fs
les
stos
sub
das
ret
cmp
mov
rcrl
inc
cmc
mov
push
cmpsb
xchg
mov
leave
rclb
and
and
mov
nop
adc
push
out
leave
stc
pop
enter
icebp
mov
iret
or
test
jle
xlat
fadd
addl
cmp
mov
lret
xlat
es
bound
dec
sub
pop
or
adc
test
pop
cmp
lods
jb
xor
xor
ret
jle
ret
shll
inc
aam
mov
pop
mov
push
push
nop
xor
lods
out
insl
dec
bound
adc
test
mov
ret
push
mov
jge
jg
ja
out
jno
cmovns
pop
in
fiaddl
push
sub
repz
and
jo
mov
aas
xlat
js
xor
aad
inc
xor
das
cmp
stos
imul
and
inc
adc
in
lret
jns
inc
push
pop
lock
mov
dec
or
pop
cs
jmp
movsb
dec
sbb
and
movsb
lcall
fstps
pop
test
adc
jb
mov
sub
add
jbe
mov
inc
icebp
pushf
int3
sahf
dec
inc
add
fidivrs
adc
xor
mov
hlt
mov
in
ss
mov
enter
mov
movsl
gs
nop
or
cld
cltd
mov
sbb
arpl
jns
cwtl
paddusb
adcb
xchg
jge
xchg
sbb
notl
mov
in
clc
dec
add
xorb
int
aaa
ja
xchg
mov
inc
jo
xchg
fstl
mov
pop
or
sub
dec
add
fsubl
addr16
push
pop
pop
imul
xchg
or
jb
inc
mov
ja
push
sbb
popa
pusha
scas
mov
sbb
inc
in
cmp
aaa
pusha
cwtl
sbb
ret
ret
mov
and
decl
mov
mov
fsubs
imull
mov
xchg
loop
push
sub
sbbl
mov
inc
sbb
cmp
and
lea
gs
xchg
mov
addr16
jle
in
and
loope
mov
addr16
push
xchg
movsb
popa
mov
out
mov
int
rclb
sbb
or
mov
outsl
icebp
jb
ljmp
push
mov
ja
and
sub
dec
mov
mov
inc
pop
jo
cmp
lock
dec
repz
xchg
adc
mov
cmp
andl
jp
cli
push
lods
loop
mov
decb
testl
xor
cli
aaa
out
imul
data16
std
cmp
lahf
cmp
shll
arpl
lret
jp
inc
in
mov
cmp
cmp
mov
mov
jns
dec
les
xchg
lea
std
and
adc
dec
int3
push
cs
adc
mov
fsubrl
inc
mov
out
or
mov
mov
mov
xchg
jbe
out
mov
mov
packssdw
fadds
pop
jl
rcr
pusha
cmp
or
aam
aam
push
repz
jbe
sub
adc
jecxz
xchg
xor
add
ret
xorb
popa
out
cltd
pop
mov
adc
call
dec
dec
cwtl
test
pop
into
mov
cmpsb
ror
ds
inc
test
pop
stos
sbb
test
xor
stos
pop
and
xchg
lahf
test
mov
xchg
lcall
push
gs
fbld
inc
ljmp
add
sub
imul
shll
cmpsb
mov
push
pushl
ljmp
int3
jmp
testb
cs
push
movb
xchg
ds
mov
xchg
int3
addl
outsl
dec
idiv
rorl
in
shll
jl
push
adc
or
mov
fsubr
xchg
mov
sbb
out
aad
clc
add
popa
pop
fmuls
mov
xchg
pop
mov
lea
std
add
inc
push
cvtps2pd
adc
dec
xchg
adc
lret
idivb
pop
or
fbld
lods
cmp
les
andb
dec
inc
or
negb
aad
xchg
sub
dec
shrl
mov
xor
lcall
pop
aam
pop
sub
bnd
xchg
jb
push
sti
cmpl
out
outsb
pop
nop
jo
aad
jnp
mov
mov
cmpsb
sbb
pop
out
stos
add
sbb
inc
mov
pushf
jns
mov
vcvtss2sd
int3
add
ja
lock
cmp
in
aas
loopne
xor
andb
xchg
popf
push
pop
lds
stos
or
dec
je
fidivl
loop
adc
inc
and
pushl
rcrl
xor
es
data16
inc
lea
adc
jae
cmp
jg
inc
sbb
lcall
push
cmp
jns
and
repnz
in
dec
pop
xchg
jbe
sub
in
jge
outsb
jnp
arpl
shll
xor
jne
pushl
lret
cld
sbb
xchg
jns
call
insl
test
hlt
fadds
sub
lds
or
jl
xor
rcrl
cmp
mov
sub
dec
adc
icebp
inc
xchg
xchg
jp
pop
test
int
mov
outsl
cmp
jecxz
sbb
jge
add
aam
or
test
fisttps
pop
xchg
sub
fwait
gs
fsubrs
add
test
mov
sbb
shll
cltd
xchg
push
pop
adc
test
adc
add
inc
mov
dec
xor
rorb
jns
pushf
and
mov
insl
arpl
fbstp
push
mov
jno
lret
dec
mov
into
add
pop
sbb
or
xchg
sbb
into
pop
inc
add
xchg
and
aas
jo
ds
jg
aad
fwait
sbb
mov
push
das
ss
mov
pusha
jg
add
fwait
mov
mov
fwait
ss
inc
push
lcall
fsts
add
push
xchg
cli
dec
xchg
mov
mov
sbb
mov
std
ret
insb
out
or
das
add
pushf
and
dec
pop
add
or
push
ds
inc
fildl
sub
xlat
jl
out
ret
push
lcall
outsl
pop
es
fsubp
out
push
stos
or
test
mov
cmp
lret
sub
push
fs
lock
iret
xchg
mov
push
xlat
cmp
int
sbb
mov
push
cwtl
jge
xchg
inc
and
jns
cld
movsb
out
and
xor
xchg
sbb
cwtl
imul
xor
ja
mov
mov
sub
xor
push
in
loope
aaa
fstl
mov
fwait
cwtl
xchg
into
push
std
pop
add
push
into
sub
dec
shlb
xor
xor
push
mov
add
inc
mov
sbb
sbb
cmp
jns
adc
xchg
lock
and
sbb
jl
push
inc
jbe
aam
div
adc
xor
push
or
jnp
repz
sub
bound
ljmp
std
sub
adc
push
andb
enter
dec
mov
xchg
enter
mov
add
pop
push
cmc
inc
cwtl
sbb
mov
xor
mov
cwtl
cli
lret
mov
push
test
or
fldenv
mov
addr16
stos
add
inc
ss
fcomps
mov
jnp
movsl
add
addl
adc
dec
mov
cld
bound
imul
cmp
inc
sbb
test
ficompl
cmp
loope
mov
ret
dec
enter
jl
mov
cltd
pop
cmp
or
mov
lahf
ja
cmpsl
mov
outsl
push
cmpsb
mov
xor
sti
imul
push
xlat
fsubl
push
jle
loope
sub
cli
push
test
sbb
xchg
sbb
insl
ret
std
mov
out
cwtl
or
push
sbb
and
mov
in
mov
in
pop
stos
fisubs
xlat
sbb
dec
pop
mov
adc
outsl
aas
inc
ja
lcall
jp
sbb
jge
insl
lods
test
mov
aaa
or
and
mov
cmpsl
push
in
inc
jbe
movsl
dec
inc
mov
les
rorb
jecxz
mov
pop
test
fcmovnb
pop
das
lea
clc
mov
js
jge
xchg
sub
xor
in
mov
mov
push
adc
jbe
inc
mov
pop
movsb
pop
mov
pop
es
mov
std
fmull
fstpt
xchg
sbb
imul
xor
inc
scas
mov
xor
xchg
mov
jecxz
aam
xor
test
sbb
ficoml
adc
cmc
fs
cmpb
inc
out
and
xchg
and
push
inc
outsl
inc
aam
xor
sub
jge
jp
xchg
adc
pop
pop
jns
shlb
mov
out
int
xor
je
in
pushf
jge
pop
aaa
test
sub
add
cmp
or
nop
add
push
add
fidivrl
ficoml
mov
xor
pop
sbb
ret
test
clc
mov
sbb
adc
push
mov
nop
add
cmp
int
dec
out
mov
cltd
daa
fistpl
jg
scas
jne
in
stos
out
mov
xor
push
je
lds
lea
adc
lds
ja
xor
out
pusha
clc
mov
lea
enter
or
sub
push
movsl
xchg
add
mov
cmp
ljmp
int
xor
out
rorb
in
push
insl
mov
imul
test
cli
xchg
call
mov
xlat
ja
mov
rcrb
movsb
inc
pusha
jl
xor
sbb
mov
outsb
cmp
or
hlt
mov
sub
xchg
inc
cs
aam
jne
stc
mov
fnstsw
cmp
imul
into
hlt
clc
mov
cmc
ds
scas
leave
sbb
and
inc
push
inc
pop
hlt
xchg
mov
cmp
gs
mov
arpl
pop
fbstp
ret
outsl
insb
aas
lahf
inc
loop
in
in
mov
jns
mov
aad
insl
sbb
mov
and
call
cmp
sbb
adc
push
jmp
cmpsl
stc
cmp
mov
or
inc
loop
cs
mov
out
mov
aas
fisubrs
notl
popa
dec
push
das
jl
mov
sub
xchg
lods
dec
fdivrp
or
ja
pop
rclb
add
aas
mov
insb
jno
jae
sub
jp
nop
ds
push
xchg
dec
ljmp
int3
mov
adc
and
repz
mov
popa
push
pop
mov
sbb
xchg
out
mov
xchg
pusha
scas
xchg
jnp
cs
mov
lea
lcall
and
inc
nop
lahf
mov
or
xor
fst
add
mov
adc
jmp
sub
loope
loop
sbb
sbb
clc
popa
pop
ja
mov
out
xchg
jecxz
inc
jbe
or
jl
adcl
rcll
cmc
lahf
shlb
mov
mov
rclb
inc
jecxz
mov
stos
dec
scas
adc
lcall
add
jno
sbb
scas
mov
stos
int3
and
mov
pop
mov
dec
xor
dec
out
sahf
mov
icebp
out
jnp
pop
ljmp
pushf
jmp
adc
mov
fdivs
aas
jbe
imul
decl
and
iret
xchg
pop
mov
dec
popf
jns
sbb
push
jge
push
push
mov
out
inc
pop
pop
bnd
jge
xchg
test
pop
mov
mov
pop
cmp
and
lret
xchg
cmp
popf
gs
sub
cs
ljmp
movsl
dec
jmp
insl
sti
pop
fwait
mov
jmp
add
nop
test
xchg
sub
pop
adc
js
sub
xor
jae
or
call
repnz
and
hlt
cmp
imul
or
xorb
pop
mov
cmp
inc
push
or
or
bswap
cli
lea
rclb
inc
js
cmpsl
sti
idivb
mov
scas
das
ret
and
out
sub
cmp
cmp
inc
popf
sub
mov
sti
aam
or
jp
or
cmp
xchg
lahf
pop
inc
in
xorb
ret
je
cmpl
pop
push
push
jle
mov
popa
out
insb
out
push
cmp
cmpsb
bound
sbb
jge
jg
test
adc
ss
aas
pop
lods
lds
sbb
ja
scas
sub
jge
push
xchg
mov
lahf
mov
inc
jnp
inc
dec
sub
xchg
inc
sub
enter
xlat
sub
into
lds
or
cmp
js
popa
sub
movsl
rolb
dec
mov
stos
fsubrl
cmp
push
sahf
iret
mov
mov
pop
int
sar
jecxz
gs
mov
lea
add
jecxz
mov
push
lock
sbb
fisubl
sub
int
sbb
outsl
add
sub
jo
xor
iret
inc
hlt
into
je
jns
bound
jle
adc
dec
inc
xor
leave
cli
ja
xor
dec
inc
sbb
fistps
xorb
imul
mov
adc
adc
lea
ret
aad
ficoms
mov
pop
jecxz
or
xor
adc
xchg
int
mov
push
pop
push
mov
andl
out
sbb
aad
daa
mov
out
jecxz
add
bound
mov
lods
jle
gs
mov
jmp
xchg
pusha
faddl
gs
lahf
or
push
xchg
inc
ljmp
jg
lods
xchg
mov
jmp
dec
mov
test
scas
dec
xchg
fsubs
or
stc
mov
pmaxsw
jne
push
ret
je
icebp
test
test
lds
push
sub
and
cmp
pushf
xor
pop
int3
sub
add
inc
jne
sub
aad
xor
sub
ja
mov
lcall
ljmp
and
pusha
loope
aad
cs
sbb
xchg
pop
mov
xor
or
xchg
adcb
mov
sti
in
jg
mov
push
sbb
cs
xchg
outsb
adc
push
jb
call
bound
xchg
inc
arpl
int3
dec
xchg
add
data16
cld
icebp
dec
fists
dec
ljmp
jg
xchg
cmp
adc
sbb
test
movsl
lds
push
xchg
jp
popa
adc
adc
adc
loopne
push
jb
jns
flds
enter
mov
push
lret
mov
inc
sbb
scas
movsl
enter
fincstp
pop
arpl
not
push
out
xchg
mov
cmp
imul
dec
addr16
dec
in
test
or
mov
xchg
movsb
lock
dec
push
mov
push
adcb
out
jmp
xchg
mov
aaa
cltd
aad
xchg
into
loope
push
bound
addr16
inc
hlt
push
clc
push
dec
je
pop
jae
test
cwtl
mov
xorl
cmpsl
jae
jbe
dec
fimull
rclb
out
repnz
mov
js
lahf
fisubl
loopne
lahf
popf
test
sub
mov
jns
outsl
leave
push
cmc
jns
inc
imul
in
mov
pop
scas
imul
sub
cmp
or
sbb
aad
dec
into
sbb
out
in
push
mov
inc
bound
lods
rcll
xchg
js
test
insl
xchg
pop
out
mov
or
cmc
mov
std
testl
and
loopne
test
clc
pop
inc
scas
rcl
pop
ss
push
jge
jmp
jecxz
lds
inc
stos
aaa
push
insl
ret
in
shlb
addl
or
mull
mov
sbb
push
jl
xchg
in
cmp
push
sub
sub
out
pop
lods
mov
lcall
mov
jb
sbb
pop
push
mov
mov
add
mov
push
leave
jle
out
shr
or
arpl
dec
xchg
add
jno,pn
fwait
jle
xchg
sub
push
or
imul
in
lret
sub
stc
mov
cmp
lahf
mov
out
jg
cmpl
ficoms
inc
jno
pop
adc
fnclex
dec
dec
inc
fucomi
js
xchg
and
adc
stc
adc
or
stos
and
cltd
int
js
ror
mov
mov
js
loop
mov
mov
cmpb
jge
pop
das
sub
push
sbb
fdiv
scas
notb
add
test
pushf
add
mov
cmp
addb
mulb
push
fsubs
jae
aaa
pushf
dec
mov
sub
push
push
inc
pushf
test
adc
add
lret
jg
popa
fdivrs
sub
push
lods
push
xchg
enter
dec
or
inc
xchg
aad
adc
add
and
jno
out
daa
and
push
stc
dec
lea
cmpsb
mov
or
sub
mov
cmp
mov
push
fsubrl
inc
addr16
fldt
clc
cmpsb
mov
leave
inc
mov
das
adc
push
stc
cltd
dec
xchg
xchg
and
outsb
adc
rorl
dec
ljmp
xor
repz
push
dec
pop
imul
cmc
int
jnp
js
push
loopne
xlat
sub
lods
dec
and
xchg
xor
sub
xchg
sub
inc
jno
sbb
scas
movb
inc
lods
mov
xchg
add
push
jo
test
lret
add
repnz
divb
aas
adc
dec
lods
xor
sbb
and
add
dec
pushf
rcll
mov
pop
jg
lret
xchg
dec
add
xchg
cmp
adc
mov
imul
sub
mov
dec
mov
test
iret
mov
std
dec
mov
push
dec
cmp
fsubrl
in
into
pop
mov
push
add
push
mov
fsubrs
mov
pop
jo
adc
xor
mov
mov
popf
adc
xchg
pop
iret
loop
pop
and
cmp
ss
cmc
pop
scas
insl
pop
movsl
push
sar
fwait
out
push
jno
pushf
lock
dec
and
les
push
sub
loope
cmp
aaa
aas
inc
mov
ss
mov
push
pop
rep
push
mov
sbb
arpl
mov
imul
aaa
stc
dec
push
sub
movswl
ja
or
cwtl
adc
mov
enter
pop
push
inc
aad
gs
xchg
insl
mov
mov
subb
repz
je
and
cmp
or
repz
add
xchg
frstor
outsl
inc
mov
mov
lods
push
ret
dec
std
or
enter
inc
mov
or
data16
add
dec
pop
incb
xchg
xchg
loope
decb
mov
mov
pop
add
fwait
clc
pop
sbb
inc
jno
xor
cmpsb
add
out
jge
xchg
in
pop
out
dec
xorl
or
pushf
iret
lods
sub
movsl
dec
xor
or
and
sarl
xor
pop
push
cmp
add
mov
int3
cmp
adc
xchg
jge
call
lcall
dec
imul
mov
inc
mov
cwtl
scas
mov
mov
popf
push
rorb
push
xchg
push
dec
incl
xchg
pop
test
in
jge
andl
sub
arpl
sub
test
xor
dec
fidivl
mov
imul
fiadds
inc
test
cmp
stos
cli
rcrb
cmpsb
les
cmpsl
lahf
outsl
popf
push
lds
lds
ret
data16
push
pop
mov
xlat
stc
push
iret
addr16
pop
xchg
into
push
andl
cmp
dec
cmp
dec
test
push
jae
pop
enter
mov
mov
mov
movsl
rclb
pusha
lcall
fcomps
fldcw
fwait
sarl
inc
nop
popf
lcall
xor
lcall
aam
in
push
xchg
cmp
push
mov
or
cs
adc
and
aaa
lret
xlat
cmp
das
insl
jnp
pushf
inc
ds
sahf
adc
mov
jae
xlat
sahf
rorb
inc
mov
sub
ret
xchg
mov
notl
les
movsl
xchg
test
jbe
cwtl
jb
inc
imull
pop
push
push
xor
xlat
jmp
mov
cmpl
mov
xorb
push
pop
push
lds
cs
arpl
sub
cmp
je
mov
lcall
call
mov
inc
cmp
into
mov
push
movsl
dec
cmp
fldcw
mov
mov
cmp
out
lods
add
aas
pop
adc
js
and
sahf
mov
add
outsl
pop
inc
popa
dec
or
push
xor
push
ret
pop
mov
aam
add
mov
sahf
adc
pop
inc
cmpsl
dec
int3
xchg
arpl
sbb
lret
popf
fwait
mov
inc
cmpsb
mov
dec
aad
xchg
movsb
mov
pushf
jp
arpl
push
lret
std
and
mov
stc
inc
push
out
stc
mov
push
lcall
xchg
push
pop
sbb
test
adc
adc
fmuls
mov
pop
jle
mov
sbb
cwtl
jo
push
add
cmp
push
or
add
es
das
inc
dec
and
lret
outsl
repz
and
xchg
adc
arpl
add
mov
jbe
out
fsubrs
test
inc
mov
hlt
in
cmpsb
inc
mov
cs
cs
cmc
lcall
shlb
call
mov
adc
fbld
into
shll
sub
xchg
ret
iret
js
lds
popf
push
andb
pop
icebp
mov
sub
aaa
push
imul
leave
cmpsb
cld
xor
test
fnsave
jae
mov
dec
mov
in
add
xchg
cmpsl
fildl
xchg
lods
xlat
pop
xchg
out
repz
jae
inc
mov
addb
jecxz
clc
cmp
test
icebp
loope
ja
add
movsb
and
lods
dec
bound
and
cltd
scas
pop
inc
and
inc
push
mov
or
inc
rorb
push
outsl
lock
inc
aas
je
jmp
lods
inc
xor
push
pop
ja
int3
push
pop
stc
fists
sub
shll
pop
call
sub
pusha
jl
out
mov
lods
sub
adc
shl
outsb
out
xor
push
andb
push
xor
jecxz
bound
imul
mov
and
ficoml
in
or
ss
shrb
add
je
js
int3
mov
div
push
mov
rolb
mov
fldenv
scas
push
mov
or
fsts
pop
add
mov
or
xchg
inc
clc
ljmp
rcll
mov
jp
clc
pop
jne
push
lcall
sbb
outsl
lods
lcall
into
mov
cmp
cmpsl
in
test
jecxz
xchg
sahf
gs
dec
push
test
mov
jl
addr16
xchg
xor
outsb
add
sbbl
and
rorb
ret
dec
adc
shrl
pop
pushf
nop
pop
mov
mov
inc
sbb
iret
loop
xchg
lea
popf
jne
pop
rorl
inc
mov
jp
jo
neg
icebp
loop
xor
inc
shrb
js
filds
sub
cmpsl
lods
ss
pop
pop
xchg
mov
and
fimuls
insl
xchg
xchg
stos
mov
ficomps
push
xchg
mov
push
inc
xor
lcall
popa
mov
lods
insb
mov
cmc
lods
inc
add
inc
cmp
dec
nop
jo
sbb
and
insb
imul
dec
scas
xchg
es
fisubs
subb
push
xlat
stos
lods
fs
stos
add
pushf
insb
add
fmuls
cmpsl
ljmp
inc
xor
pop
int
or
xor
mov
outsl
pop
shlb
movsb
inc
popa
dec
push
imul
shrb
arpl
ds
clc
mov
loop
mov
popa
filds
push
stos
int3
and
mov
cmp
push
stos
pop
dec
pop
call
xchg
mov
int
outsl
cltd
xchg
cld
cmp
inc
jb
push
sub
popf
ficoms
inc
into
sahf
adc
int3
dec
mov
dec
jl
popa
adc
cmp
loopne
jle
sub
jg
ret
lahf
or
jae
mov
fldz
push
xchg
sti
cmp
stos
lcall
movl
addr16
orl
incb
push
bound
dec
pop
jecxz
mov
jmp
iret
cmpxchg
and
mov
xor
rcl
cmpb
stos
and
push
mov
shlb
mov
fwait
scas
andl
and
cmp
fnstenv
jae
adc
shrl
jo
outsb
push
push
mov
xchg
pop
mov
lock
test
mov
xor
mov
repnz
push
and
mov
xchg
xlat
jne
cmp
pop
loopne
nop
xlat
sarb
inc
xor
aas
clc
add
fdivp
dec
and
adc
lret
in
push
std
in
repnz
roll
repnz
lods
adc
push
aad
das
mov
xchg
out
loopne
xchg
sbbb
out
hlt
arpl
lods
scas
pop
leave
fistl
loope
js
jg
xor
in
mov
bnd
insb
andb
dec
sahf
push
test
aam
and
inc
and
xor
rol
iret
mov
sbb
and
add
cmp
mov
jno
data16
jnp
aad
scas
pop
das
cmpsl
subb
dec
popf
stos
sub
icebp
xor
mov
loopne
jnp
loopne
push
nop
mov
inc
mov
sbb
pop
shll
les
std
iret
dec
or
lahf
movsl
int3
mov
aad
add
js
mov
loope
test
nop
and
int
iret
mov
sbb
pop
mov
sub
rcrb
adc
nop
stos
es
jge
xor
popf
jnp
jb
lret
popf
das
test
fcoml
sti
and
xorb
fimuls
jp
sbb
int3
das
daa
out
rcl
sti
inc
movsl
adc
iret
jo
sub
test
jmp
jno
mov
xchg
fnstsw
or
pop
pop
mov
fsubr
enter
or
cmc
loope
jge
xlat
inc
mov
js
sti
mov
xchg
sub
mov
sahf
xor
leave
pop
mov
sub
adc
les
pop
ljmp
pop
sbb
lret
out
dec
loopne
test
fidivl
stc
bound
sbbl
test
outsb
cmc
scas
pop
pop
gs
mov
scas
mov
cmp
aam
leave
dec
cli
outsl
or
sbb
dec
sbb
rorl
imul
ret
loopne
subb
sahf
dec
and
dec
push
mov
jmp
mov
iret
stos
cmpsl
loopne
icebp
das
inc
cmc
mov
xchg
pop
push
jo
cmp
cmp
ss
sahf
jge
push
jecxz
xor
jmp
ss
ret
sbb
push
sub
cmpsl
xor
sub
push
lret
shlb
nop
dec
addb
icebp
push
mov
clc
sbb
xchg
ret
adc
mov
subl
inc
addl
xor
adc
sub
pop
cmp
xor
cmpsb
xchg
pop
xchg
insl
xchg
mov
adc
scas
mov
fisttpll
mov
jp
loop
sbb
arpl
nop
shlb
xchg
sbb
scas
adc
mov
aaa
push
mov
ljmp
arpl
jno
lret
cld
shll
in
cltd
sti
xchg
cmp
mov
dec
scas
pop
enter
mov
insb
sub
pop
pop
cmp
js
push
mov
sahf
pushf
test
fidivrl
push
lods
aam
push
repnz
into
aam
sbb
sbb
xchg
and
ja
adc
es
stc
shl
pop
mov
test
push
mov
mov
in
movsl
xchg
jne
filds
jmp
lret
cs
inc
adc
mov
cmp
inc
sub
lock
stos
andb
pop
xchg
xchg
out
jbe
lahf
jmp
push
rcr
fucomip
jmp
xchg
fsub
jns
jne
jns
or
inc
pop
xlat
aam
jecxz
pop
js
popf
xchg
mov
int3
hlt
push
mov
lcall
outsb
testl
cs
cmp
lods
xchg
pusha
or
addl
xor
mov
xchg
mov
push
mov
xlat
push
call
xor
xlat
insl
sub
sbb
mov
sub
addr16
gs
insl
push
in
mov
sbb
ficoml
mov
pop
dec
mov
outsb
push
fwait
mov
scas
add
call
mov
cld
pop
pop
fwait
xchg
repz
outsl
and
mull
or
js
das
cs
idivb
cmc
clc
std
into
xor
add
mov
jl
rcl
jno
push
pop
ljmp
repz
addl
stos
scas
cli
insb
arpl
dec
fnstcw
inc
pop
lret
loope
xlat
and
idivl
pop
insl
dec
jg
sub
into
mov
fldenv
lahf
push
cmpsl
inc
pop
jl
jno
cmpsl
add
push
add
sarl
les
push
xor
inc
mov
inc
into
push
add
scas
int
fsubrs
mov
xor
push
lret
cmp
sbb
jecxz
fwait
out
mov
test
sar
cmp
fcmovnb
xchg
fistpll
pushl
sbb
fcomp
inc
lfs
gs
ja
xchg
fwait
dec
in
mov
iret
iret
add
sbb
pop
pop
xorb
frstor
mov
sarb
mov
outsl
push
test
test
or
fcomps
fcoml
das
loope
mov
jbe
scas
jns
mov
int
clc
push
or
push
dec
hlt
or
cltd
adc
es
hlt
pop
adc
mov
test
pop
out
std
fs
iret
push
xor
out
std
sbbl
jg
xchg
jbe
add
or
fistpll
das
xchg
adc
dec
iret
mov
out
inc
push
jne
pop
mov
ljmp
rol
push
jnp
jae
fucomi
sub
add
mov
in
cmp
cs
lock
lods
mov
push
out
sarl
and
sar
sub
or
mov
jns
dec
mov
push
shll
jns
sbb
push
sbb
cmp
cmp
in
cmc
dec
ljmp
fcomi
test
mov
xor
mov
pop
dec
jl
call
imul
inc
dec
movsl
js
fucom
repnz
adc
pop
pop
sbb
shlb
stc
adc
test
test
arpl
xorl
pop
push
add
imul
cmc
imul
clc
adc
mov
incl
pushl
and
bound
jbe
sub
mov
mov
jb
pop
jo
inc
or
loop
sub
jg
mov
aas
hlt
pop
dec
cld
addr16
jge
xor
adc
push
mov
jl
mov
icebp
repnz
mov
jl
fiadds
add
inc
scas
xchg
test
xchg
xchg
enter
fisttps
imul
pop
cmpsl
ds
push
sub
ja
xlat
rorl
adcl
xchg
xchg
mov
sti
mov
dec
mov
push
sbb
lret
jb
rcl
fiaddl
std
movsb
jae
lret
aad
mov
xor
jle
insl
mov
std
cmp
xchg
push
mov
pop
add
mov
jne
dec
enter
mov
pop
push
pop
data16
mov
mov
cmp
lock
and
imul
inc
sbb
cmpsb
inc
xchg
and
and
sbb
push
loopne
leave
cmp
jle
inc
inc
loop
inc
lahf
and
jo
adc
mov
sbb
push
mov
out
aam
jecxz
stos
mov
mov
lret
xchg
xor
and
adc
addr16
ljmp
mov
addr16
push
nop
dec
xor
das
in
mov
jbe
popf
or
int3
lods
cmpsl
push
andb
dec
xchg
dec
hlt
aam
sub
jge
scas
xchg
mov
inc
jp
add
divb
or
or
push
rcll
xchg
push
insl
add
or
push
ljmp
cli
ljmp
sar
sub
fsts
lret
pop
xor
loope
arpl
xchg
lods
scas
aad
std
and
sub
inc
and
add
mov
xor
cs
sahf
pop
cmp
shll
sub
mov
out
outsb
iret
adc
mov
cmpsl
inc
fsubs
sbb
adc
jnp
cmpsl
popl
xchg
aas
push
lret
mov
and
or
std
sarl
and
dec
inc
add
ret
icebp
sub
sbb
pop
mov
fbstp
add
push
lcall
js
jmp
and
mov
stos
mov
sub
dec
dec
test
popf
mov
sub
adc
das
mov
pop
add
xor
pop
iret
jp
stc
push
add
dec
adc
lock
cmp
mov
xchg
adc
std
and
mov
or
outsl
xchg
lret
pop
arpl
push
push
paddd
daa
xchg
cli
xor
mov
push
jmp
xlat
aaa
stc
mov
jno
mov
sub
gs
adc
mov
sub
outsb
sbb
das
mov
sub
sbb
sub
push
out
call
push
mov
or
in
test
les
jb
jo
mov
cltd
fiaddl
testl
mov
and
cld
xchg
cmc
cwtl
outsl
out
pop
add
sbb
adc
mov
add
stos
cld
stc
aam
inc
xlat
push
call
cmp
fildll
mov
xor
mov
ss
mov
nop
and
sub
mov
lock
sub
jns
adc
loop
shlb
or
outsl
aaa
push
sbb
pushf
lcall
xchg
adc
fwait
sbb
xchg
lds
imul
push
mov
mov
leave
gs
dec
subl
xor
loope
stos
popf
loope
xor
shrb
mov
scas
jmp
clc
ja
cmp
mov
call
out
fiadds
or
out
xchg
push
outsb
xor
mov
xor
adcl
and
leave
xor
xor
push
adc
call
xor
jnp
push
stos
lcall
add
ja
jp
aad
cmc
mov
or
dec
add
cmp
or
xchg
insl
mov
pusha
xor
jnp
bound
stos
dec
sub
movsb
movsb
std
inc
dec
cmp
hlt
jmp
inc
mov
imul
and
inc
inc
push
ljmp
stos
das
mov
lcall
push
notb
adc
push
bnd
mov
pop
lods
jmp
mov
push
pop
mov
out
lahf
push
push
sarb
or
subb
and
sahf
test
jb
cmp
mov
pop
xor
sub
mov
cmpsb
fs
jle
ds
stc
mov
sub
imul
sub
outsl
sbb
sbb
sbb
dec
inc
popf
or
lods
sub
aam
pop
stos
lret
imul
fidivrs
lahf
dec
or
dec
push
mov
jle
iret
mov
flds
push
jl
shll
aas
dec
ret
mov
shlb
and
mov
push
pop
jb
repnz
pusha
cltd
clc
mov
sbb
shll
test
mov
daa
pop
aam
lcall
adc
imul
or
lods
adc
repz
cli
int
dec
push
jg
mov
inc
pop
pop
shlb
sub
stc
or
outsb
pop
xor
jae
shrl
stc
xchg
and
push
cld
nop
icebp
jl
mov
nop
in
shll
aaa
ss
add
adc
adc
leave
push
lret
stos
cmp
xchg
xor
pop
js
push
mov
mov
je
movsl
jle
jge
push
xchg
imul
or
or
and
xchg
out
mov
inc
sub
or
push
pop
push
push
add
in
shll
aam
cmc
stc
stc
jge
jnp
cmp
lahf
call
push
push
or
outsb
inc
mov
and
lret
jg
sub
xchg
mov
neg
push
mov
cmpsb
pop
ja
cli
mov
and
push
pop
dec
mov
mov
aam
inc
outsb
mulb
mov
test
pop
inc
add
arpl
push
stos
and
imul
xchg
incb
test
std
andb
push
mov
iret
pusha
mov
clc
pop
xchg
or
test
mov
stos
dec
call
out
out
ror
xor
xchg
jle
dec
mov
popf
pusha
stc
rcrl
in
insl
in
push
faddp
sti
mov
movsb
mov
xorb
sbb
push
mov
add
push
jno
xor
push
imul
test
es
fsubl
jb
xor
js
mov
cld
inc
xor
inc
movsl
adc
outsw
popa
xor
jl
scas
adc
mov
inc
mov
stc
aam
mov
inc
sti
pop
fisttpl
mov
ja
jmp
mov
inc
xchg
movw
sub
jl
test
imul
dec
arpl
push
jae
mov
das
sbb
pop
jno
inc
stos
cmp
xor
mov
jle
pushf
pushf
test
mov
in
aaa
test
cmpsb
pop
stos
jmp
lods
stos
mov
xchg
insl
arpl
push
dec
adc
rcrl
jb
dec
out
jns
cmp
popl
pop
xchg
cmp
mov
stos
mov
jns
in
mov
and
adc
dec
int
jnp
lock
fdivrl
aad
mov
das
cmp
divb
out
cmp
push
mov
mov
js
popf
sbb
cmp
insl
mov
outsl
popf
and
pop
adc
adc
xchg
xchg
mov
or
inc
sub
push
lahf
ss
roll
mov
lds
push
inc
push
pop
mov
shrl
jb
xor
inc
dec
ja
mov
cmp
imul
in
mov
fistpl
loope
int3
inc
or
arpl
mov
rclb
push
xlat
rolb
fwait
dec
push
bound
jae
mov
int
cmp
addr16
mov
lods
fisubrs
push
push
rcrb
pop
call
xchg
movsl
dec
mov
xchg
xor
pop
faddl
stos
punpcklbw
mov
iret
fwait
int3
aaa
xor
dec
mov
sbb
lret
cmpsb
xchg
shlb
jmp
out
dec
xlat
sub
adc
roll
jmp
fnsave
mov
out
mov
stc
pop
ss
aaa
std
dec
or
jmp
lcall
mov
pop
jae
stos
gs
mov
sbb
and
push
fildl
push
ret
xorl
ret
mov
js
gs
mov
movsb
add
cwtl
mov
push
mov
xchg
popl
js
in
negb
mov
jns
pop
sbb
into
sbb
mov
mov
sbb
jg
divl
sub
popf
testl
xchg
and
dec
push
sub
test
jmp
notb
inc
testb
out
mov
out
jg
lcall
jge
xlat
mov
mov
push
cmp
popa
cmp
cmc
and
shrb
cld
mov
je
xlat
hlt
lods
test
and
test
lret
neg
jnp
pop
mov
dec
iret
and
and
add
or
int
jb
lds
ja
sub
jns
call
xor
xchg
cmc
inc
enter
push
push
shrb
sti
icebp
cs
gs
std
mov
or
movsb
jle
or
adc
leave
sbb
push
int3
dec
mov
mov
cld
xchg
push
push
dec
leave
push
cmpsb
hlt
mov
mov
lret
bound
fsubr
cli
int
lea
int
jmp
popf
or
push
hlt
jle
push
and
sbb
mov
fucomip
mov
fadd
pop
mov
ret
or
ja
repz
imul
imul
loope
mov
aaa
shll
xchg
inc
adc
addr16
push
aad
addr16
test
xchg
and
popa
mov
push
std
subb
add
pop
inc
cld
jg
or
and
out
mov
mov
jae
aas
notl
sub
cmp
test
scas
cltd
loop
in
mov
cmp
test
enter
outsl
sub
xchg
jp
movsl
cmp
mov
in
dec
lret
int3
andb
and
sbb
loope
dec
add
cmpsb
or
pusha
repz
mov
incb
lds
adc
outsb
sub
cmp
jo
sbb
xchg
mov
mov
shlb
cmp
and
xchg
sahf
rorl
pop
xchg
adc
call
mov
add
push
mov
test
pop
jne
mov
mov
pop
sbb
adc
dec
enter
push
sub
cld
inc
pusha
daa
out
push
lret
adc
cmpsl
inc
imul
pop
jp
mov
and
adc
stc
pusha
loopne
jle
cmp
dec
pop
mov
inc
daa
cmp
cmp
mov
dec
movsb
push
fs
dec
ret
jae
add
das
das
jmp
ret
ss
call
pop
sbb
leave
jns
daa
sbb
outsl
fcomps
adc
cmp
cmovns
xlat
or
lahf
cmp
pop
adc
inc
add
cmpsb
mov
je
sub
mov
push
fdivr
push
xchg
addr16
in
aas
xor
push
sub
sbb
push
in
push
sub
inc
sub
mov
das
stc
jae
shll
insl
xchg
rolb
mov
cmp
mov
shlb
movsl
aam
neg
and
dec
mov
pop
nop
sbb
call
inc
cmpsb
pop
or
cmp
xchg
int3
arpl
jmp
push
lods
int3
hlt
cmp
mov
jp
dec
aad
in
ds
jp
or
test
jmp
test
cmp
dec
mov
in
dec
sub
mov
mov
inc
push
fists
out
roll
adc
mov
les
xchg
jnp
dec
addr16
sarb
xchg
loopne
and
jnp
fisubrl
and
add
aas
scas
rcll
lahf
ffree
xlat
dec
jmp
sbb
je
scas
sub
jb
orl
mov
jno
out
adc
mov
pop
daa
mov
hlt
sbb
or
mov
xor
shll
movsb
sbb
bound
dec
xor
clc
insb
inc
dec
aam
xor
pop
add
ret
sub
int3
xchg
and
push
jb
mov
ret
jne
jmp
or
outsb
adc
and
mov
lock
mov
dec
cmp
mov
sbb
sub
sbb
sarb
enter
sub
das
mov
lods
pop
fs
sbb
add
js
fildl
or
cmc
push
daa
mov
mov
pop
pop
test
rorl
inc
repnz
adc
jl
fnsave
mov
cmpsb
stc
sub
xchg
mov
in
pop
pop
pop
lods
subl
add
call
xor
dec
test
outsl
into
inc
cmp
and
out
sbb
arpl
mov
daa
js
dec
enter
je
xor
rcl
pusha
insl
ret
call
push
mov
lods
mov
jnp
jb
and
mov
xor
mov
scas
insl
inc
xor
pop
sti
push
xchg
popf
push
popa
xchg
xadd
mov
or
add
pop
inc
jmp
bound
jg
sub
icebp
scas
inc
sub
subb
sbb
dec
stc
dec
jo
ds
pop
sti
mov
arpl
in
lods
mov
or
xchg
mov
lcall
mov
mov
jb
cmp
adc
addr16
in
add
jae
daa
mov
in
cwtl
scas
adc
cmp
fmul
or
les
std
sub
cmp
add
xchg
ss
es
fcoms
inc
adc
fnsave
push
push
mov
pop
and
paddusw
jo
push
hlt
icebp
add
mov
in
push
out
mov
pop
repnz
xorl
mov
addr16
fcmove
xchg
jo
push
lock
inc
aam
pop
mov
jp
mov
data16
push
cltd
fisttpl
cmpsb
mov
pusha
es
pop
push
icebp
push
movsb
mov
inc
adc
out
pusha
adc
jmp
xlat
sbb
adc
roll
data16
mov
in
adc
sbb
pusha
add
adc
dec
stos
lods
stos
adcl
cmp
xchg
sub
aas
dec
mov
loop
scas
aam
cmp
ljmp
adc
je
or
sbb
sub
adcb
aad
outsb
std
dec
jmp
test
test
dec
hlt
lds
aas
fcoml
icebp
or
rorl
call
adc
add
lret
fdivl
aas
or
adc
leave
cmc
rolb
adcl
std
mov
aaa
mov
nop
iret
lret
subl
pushf
lret
pushf
xchg
and
xor
push
jo
lret
outsl
sbb
rcrb
inc
cmovge
mov
pop
data16
ja
lret
xchg
pop
cwtl
lahf
xor
into
jmp
add
xor
pusha
sub
in
orb
stos
and
inc
bnd
xchg
pop
fcom
cltd
dec
cmp
pop
ljmp
syscall
lods
and
dec
xchg
push
sbbb
mov
mov
shrb
iret
mov
mov
cltd
push
xchg
or
aam
neg
loopne
bound
sbb
in
push
mov
adc
in
and
pop
cmp
out
das
test
into
fdivr
and
clc
jae
mov
or
and
mov
sbb
ds
add
fldl2e
hlt
xor
out
and
or
inc
dec
push
xchg
movsl
and
repz
stos
mov
ja
mov
mov
pop
xchg
lods
xchg
sbb
mov
inc
xor
push
mov
insb
pop
cltd
arpl
das
sbb
shll
fisubs
adc
and
xor
xchg
and
cltd
fsubp
pop
fildll
jae
inc
xchg
add
and
adc
sbb
cwtl
out
in
adc
mov
cwtl
xchg
xor
lods
xchg
jne
push
out
movsb
dec
ss
mov
pop
jae
push
lcall
lea
or
cmpsb
pop
cmp
cmp
add
or
push
into
mov
mov
out
mov
pop
in
out
or
aaa
push
jge
or
leave
lret
insl
inc
pop
adc
sbb
and
add
mov
imul
ret
std
add
lds
outsb
or
in
mov
fidivrl
ret
sahf
mov
loop
outsl
cmpb
cwtl
xor
lcall
cs
jnp
fcoml
push
sbb
cs
iret
outsb
lock
icebp
pop
js
scas
pusha
add
mov
mov
mov
call
cmc
jo
cmc
mov
ret
jecxz
fs
adc
sbb
mov
cmp
lds
add
push
fldcw
mov
shrl
fimull
int3
or
cmpsb
and
aaa
les
pusha
mov
inc
ja
aas
test
mov
insl
scas
into
shrl
in
daa
mov
inc
cltd
cmp
testl
std
xor
iret
clc
sbb
adc
rcrb
inc
adc
add
std
cld
adc
in
not
rclb
mov
lods
in
aad
test
rorl
inc
shr
push
mov
xor
push
movsl
jle
imul
lods
pop
mov
sbb
insl
clc
add
jge
lock
mov
and
adc
out
aas
mov
push
ret
loop
mov
loopne
lahf
mov
push
lock
dec
mov
dec
add
xlat
scas
mov
mov
dec
mov
sbbb
loop
es
into
sbb
mov
push
push
jmp
pop
or
cmp
and
or
push
inc
out
lods
ss
test
dec
mov
inc
mov
icebp
cmpsl
lods
push
in
adc
addr16
mov
cmp
pop
dec
pop
dec
mov
loop
loope
sti
push
jg
scas
dec
cltd
inc
aad
pop
cmpb
scas
sub
sbb
ret
imul
js
mov
lods
shlb
mov
inc
push
mov
jb
insl
lea
fwait
call
xor
aaa
fs
bswap
sti
sub
jg
xchg
adc
jno
mov
mov
cmp
fisttps
popf
dec
andb
mul
jns
imul
das
cmpsb
dec
inc
nop
add
fcomp
xor
jbe
in
add
add
negl
cmpsl
sub
or
jmp
daa
cmc
shll
fs
jle
cmpsl
xchg
xor
out
pop
adc
loopne
cmc
movsl
cmp
mov
dec
in
rorl
scas
jmp
jo
fcmovu
inc
aad
aas
or
xchg
xchg
pop
test
movsl
std
push
popf
fs
xor
adc
sub
sbb
inc
addr16
loop
aam
std
addr16
pushf
addr16
mov
push
cmp
ja
maskmovq
testl
mov
repnz
mov
test
xor
sbb
mov
imul
mov
mov
push
xchg
sub
mov
fwait
divb
mov
cli
int
pop
scas
mov
in
arpl
mov
loop
fiadds
faddl
mov
sbb
sbbb
imul
jbe
mov
adc
or
pop
mov
pop
in
pusha
arpl
sub
sub
std
pop
lods
jbe
xchg
pop
push
xchg
lcall
outsb
sahf
repnz
jecxz
out
pop
pop
nop
flds
lret
idivl
xor
ja
lret
add
les
out
xchg
notl
cmpsl
das
out
jmp
jp
test
dec
add
les
aam
lods
cmpsl
mov
cwtl
lods
rcl
push
je
mov
dec
pop
out
mov
pop
out
inc
adc
ja
dec
mov
push
daa
xor
out
icebp
or
mov
fnstcw
cmpsl
out
xchg
arpl
imul
ljmp
out
clc
dec
dec
jmp
inc
pop
mov
or
inc
xchg
sahf
cwtl
mov
mov
jp
inc
add
sub
inc
dec
inc
iret
jp
add
inc
or
add
insb
loopne
dec
pop
cmp
mov
cmp
movsb
aas
dec
dec
cli
push
andb
ret
test
xor
sub
in
xor
sub
movsb
stos
sub
rolb
test
into
mov
add
or
jecxz
mov
mov
mov
ss
mov
dec
pop
xchg
stos
cwtl
push
cs
push
and
rcll
test
add
jno
popa
mov
cmp
lds
dec
inc
cmpsb
mov
or
push
ds
mov
ja
jns
jae
xor
mov
lods
inc
dec
cwtl
xchg
pop
xlat
adc
push
add
sub
movsl
mov
xchg
xchg
inc
clc
negl
mov
cs
out
mov
mov
loope
jo
repz
lods
add
imull
add
xor
aaa
pop
int3
inc
lods
data16
or
pusha
pusha
cmp
add
stc
jnp
rcll
int3
or
loopne
lods
sti
jge
cwtl
mov
add
push
mov
jecxz
pop
test
sub
pop
test
cli
shll
pusha
dec
test
xchg
imul
rcl
or
inc
test
jg
sarl
jns
pushl
sbb
lea
sbb
iret
sbb
and
or
adc
or
xchg
xchg
mov
nop
push
hlt
xchg
mov
movb
sub
dec
mov
popf
ljmp
mov
cmp
ljmp
mov
je
push
cmc
js
inc
jmp
imul
adc
mov
sub
imul
jle
cmp
stos
jmp
lods
movl
jmp
shrl
repnz
fcompl
push
and
je
xorl
jmp
ljmp
mov
xchg
cmpsb
lea
jb
dec
mov
std
rorb
mov
in
stos
ficompl
dec
cmpsb
dec
xchg
mov
loop
mov
lea
cs
in
loope
and
xchg
mov
test
cld
aas
leave
mov
mov
sub
mov
scas
pop
push
aaa
inc
pop
cmp
jecxz
mov
xlat
mull
loope
pusha
inc
mov
sahf
push
shrb
and
in
mov
cmp
mov
cvtps2pi
pop
xchg
sbb
mov
and
jp
out
cltd
xlat
insl
mov
jno
orb
enter
ljmp
sbb
dec
push
pop
mov
cmpsb
je
aaa
mov
int
inc
pop
lcall
push
out
mov
sub
dec
inc
loop
pop
and
cmpsl
leave
pop
leave
xor
je
test
and
stos
imul
sub
mov
push
scas
test
movsl
fs
test
shrb
imul
add
out
dec
dec
shrb
jno
lahf
sbb
cmp
seto
out
dec
sbb
ret
mov
pop
jae
dec
adc
mov
pop
mov
lock
sbbb
fadds
outsl
pop
sub
xor
inc
dec
filds
push
pop
xlat
std
mov
cmp
mov
popa
add
jno
mov
mov
mov
dec
daa
mov
push
inc
push
dec
outsl
out
mov
imul
fcmovu
repz
jae
addr16
xchg
rorl
mov
sub
movsb
adc
fwait
jae
adc
into
cmp
mov
jb
cmpsl
fbstp
or
pop
dec
jno
adc
por
es
jno
inc
outsl
pop
ds
xchg
mov
jno
cltd
mov
xor
lock
dec
adc
mov
push
pusha
aas
mov
insl
adc
cmp
sub
movsb
push
and
es
adc
mov
pushf
ret
addr16
jnp
jo
inc
xor
pop
xor
or
add
fdivl
xor
mov
jo
cld
dec
test
jecxz
xchg
mov
loop
fstpl
popa
mov
mov
scas
pop
clc
aas
lds
shll
push
xchg
fimuls
dec
in
test
sbb
jle
repz
js
lds
cmc
gs
int3
std
pop
inc
jmp
aam
loopne
repnz
cmp
call
js
sbb
cld
ret
and
jle
mov
rolb
jb
mov
and
div
jg
xchg
mov
jns
in
mov
jae
and
jb
pop
pop
add
mov
lret
dec
push
hlt
mov
call
jg
inc
insb
lods
daa
mov
sub
je
mov
and
pop
sbb
add
or
or
add
cmp
sbb
xchg
lods
insl
cmpsb
pop
outsb
shrb
stc
cmp
jns
fstl
push
movaps
lea
jne
jbe
negl
sub
roll
test
out
js
jno
xchg
mov
pop
in
loope
loopne
cmc
int
dec
orb
mov
jg
xchg
dec
xlat
inc
xor
pop
pop
push
dec
xchg
lret
fbstp
addr16
inc
push
lds
cmp
ja
xor
push
mov
aad
sbb
out
repz
iret
mov
push
dec
cli
mov
leave
jo
mov
dec
in
xchg
in
das
shl
and
and
imul
add
pop
sub
filds
fisubl
std
mov
dec
stc
pop
imul
mov
adc
jle
dec
xor
hlt
pop
in
jo
xor
das
adc
in
pop
mov
dec
ret
sbb
imul
in
mov
adc
push
ss
aam
insb
movsb
mov
pop
ljmp
xchg
and
das
test
aad
mov
ljmp
adc
xchg
adc
ljmp
mov
movb
or
repz
les
or
jbe
inc
mov
push
leave
ds
xchg
xchg
cmp
outsl
pushf
cmp
in
xchg
lcall
aas
sahf
lret
jmp
jnp
xchg
xor
movsl
callw
jno
cmp
addr16
les
xor
mov
lea
movsb
fs
add
lods
mov
jg
fnstsw
add
mov
movsl
adc
ret
xchg
adc
test
or
inc
in
sub
mov
popf
mov
fs
stos
das
pop
clc
mov
mov
cwtl
mov
mov
xchg
jmp
test
push
xchg
pop
mov
dec
mov
jns
arpl
inc
dec
pop
call
out
sub
inc
or
fucomi
dec
xchg
push
aad
jo
lock
pop
add
out
rcrl
notb
incb
xchg
jne
daa
test
xorl
and
jo
stc
mov
mov
add
add
fwait
cli
stc
insl
mov
or
cmp
jae
out
shlb
pop
cmp
jae
ret
xor
inc
movsb
dec
in
popf
and
fs
data16
jge
push
scas
mov
dec
xchg
pop
dec
fcomp
mov
in
insb
push
xchg
xor
cmp
xchg
movsb
test
mov
mov
iret
dec
sbb
or
and
movsl
dec
jmp
test
xlat
jg
sub
ret
inc
mov
mov
stos
mov
xchg
outsl
ja
testl
dec
jbe
int3
fidivrs
popa
jle
les
movl
lea
mov
cmpsl
mov
adc
xor
dec
rcrb
adc
aad
adc
out
dec
xchg
stos
fdivrl
mov
mov
out
mov
inc
data16
sbbl
pop
xchg
push
sbb
iret
and
mov
sti
lds
popa
cltd
xor
notl
inc
sub
in
out
xchg
push
xchg
loop
out
out
xor
xor
jae
sub
cwtl
or
loope
cld
add
shrb
push
or
loopne
into
xchg
rcrb
dec
subl
jae
sub
scas
mov
and
cmp
lods
dec
rcrb
ss
repnz
sti
dec
inc
sub
sub
cmp
cmp
cmp
out
jnp
cmc
call
mov
inc
shrb
int3
jmp
sub
jbe
xlat
push
adc
inc
mov
loope
daa
dec
negl
push
mov
fwait
cld
testl
pop
adc
dec
xchg
outsl
cmp
jo
dec
xor
sub
test
ret
mov
mov
dec
xor
add
stc
inc
mov
sub
fdivrp
sbb
xor
mov
sub
sub
jae
fldt
cltd
leave
xchg
cli
fistps
rcll
mov
movsl
das
decb
scas
and
daa
nop
xchg
test
mov
into
jae,pt
inc
icebp
addr16
cli
icebp
ret
scas
push
sbb
jl
pop
pusha
cwtl
ja
jnp
lcall
mov
in
shl
movsb
rcr
mov
stos
pop
lods
xchg
das
sub
mov
fidivrs
fstp
int
xchg
leave
jecxz,pn
test
nop
orl
lods
cmp
mov
and
lock
lcall
xchg
pop
out
add
pusha
xchg
jge
jne
mov
xor
push
ds
movsb
fs
inc
popf
jmp
repz
inc
or
out
add
test
std
dec
push
subl
outsb
add
add
push
push
or
lock
add
test
cmc
repnz
shr
dec
in
mov
in
cwtl
dec
mov
fsubr
jbe
xchg
sbb
pop
xor
outsb
iret
ljmp
sub
fwait
push
mov
lods
hlt
out
ljmp
xchg
sub
add
mov
pop
loope
mov
push
test
and
dec
sahf
stos
or
lea
outsl
xor
xor
and
push
insb
es
push
jno
daa
mov
test
sahf
cmp
mov
aaa
xor
fcompl
add
clc
xchg
es
cltd
les
sbb
ss
loop
push
sub
xchg
lock
or
ret
sbb
les
std
push
push
jae
adc
outsb
ljmp
lret
repz
clc
mull
aam
xchg
aad
xchg
jg
adc
dec
sub
xlat
jne
mov
lea
sub
inc
mov
add
inc
mov
xor
pop
int3
fisttpl
pop
sbb
aaa
mov
mov
popf
sbb
mov
push
jecxz
icebp
jp
sub
and
aas
ret
popa
iret
jne
mov
xor
addr16
psadbw
repz
jge
lret
aad
cld
dec
pop
hlt
arpl
aaa
lcall
aam
flds
mov
outsb
xchg
push
push
dec
xor
out
jecxz
push
jge
lea
nop
fistps
dec
ljmp
push
inc
sbbl
dec
mov
jp
icebp
sbb
lock
fsts
sub
or
xchg
movsl
aas
mov
div
ret
cwtl
arpl
xlat
mov
mov
negl
int
add
or
in
es
mov
inc
test
sbb
jge
cmp
mov
test
jecxz
movsb
push
imul
inc
pop
mov
lahf
sub
pop
lret
mov
rclb
or
jg
push
cld
mov
movsl
inc
dec
std
jmp
les
inc
lret
inc
adc
fwait
lds
xchg
mov
mov
jle
inc
jle
push
dec
movsl
rol
rcl
xor
pop
push
inc
cs
in
adc
dec
lds
cmp
imul
jns
idivl
pop
cld
in
push
jne
mov
ljmp
xchg
push
bndldx
adc
mov
fidivrl
test
shl
js
sbb
cwtl
dec
ret
divw
jo
adc
out
mov
int
jge
jns
sub
fsubl
rorb
xor
cmpsb
aaa
pop
rorb
jne
or
mov
jne
add
fstpl
xor
arpl
lcall
mov
imul
cmp
mov
add
scas
jae
cwtl
faddl
int
mov
daa
ret
push
mov
cmc
xor
and
popa
push
aad
xchg
jmp
and
shlb
or
out
xorb
ds
ljmp
out
mov
mov
nop
lds
fsubrl
jnp
fisttps
pushf
mov
sbb
and
inc
and
jno
jns
jge
adc
mov
mov
inc
mov
dec
std
leave
lock
jb
and
dec
xor
sti
mov
shll
jbe
loop
fucomip
jp
push
data16
mov
icebp
pop
rorl
xor
pusha
das
jnp
fistpl
cmpsb
jo
add
ljmp
xchg
sub
rclb
jno
mov
sbb
popf
mov
aam
in
sub
mov
js
scas
mov
or
hlt
out
les
rcll
pop
mov
sbb
pop
frstor
in
push
dec
repz
incb
cmp
adcb
cld
mov
mov
push
mov
std
mov
xor
aad
scas
icebp
in
mov
mov
xchg
jo
aad
cld
adc
mov
lds
lods
imul
and
xorb
dec
cmpsb
sbb
dec
insb
adcb
jl
bound
fs
in
push
cmp
xchg
icebp
fstl
add
repnz
push
cmp
ret
push
adc
int3
mov
incb
xor
xchg
inc
jl
fwait
jbe
xchg
adc
push
mov
mov
lock
repz
ror
xchg
xchg
shr
jae
cmp
hlt
adc
push
push
xlat
jl
popa
push
lcall
or
inc
shrl
rcll
roll
push
hlt
add
sbbb
push
test
mov
out
cmp
xchg
and
jp
rcrl
add
out
push
push
xchg
stos
shll
sbb
sbb
cltd
fists
ljmp
mov
test
negb
stc
call
sub
mov
jmp
repnz
mov
imul
or
xor
out
es
sub
mov
incb
stos
sbb
sbb
daa
mov
and
mov
cmp
dec
push
rolb
scas
fs
or
mov
sarb
jb
mov
mov
inc
and
pop
add
stos
mov
rcrb
jns
add
inc
aaa
push
xchg
sbb
mov
push
js
in
cmc
cmc
mov
icebp
mov
xor
cmp
icebp
and
aam
test
xchg
repnz
adc
inc
jge
push
fisubrl
pop
jle
pop
pushf
daa
jae
loop
pushf
xor
loope
pop
mov
push
out
add
dec
fs
jnp
daa
push
push
pop
pushl
mov
rcrl
rcrl
repz
dec
push
mov
int3
mov
cmp
fisubl
xor
scas
xlat
and
das
sti
xchg
movsl
packsswb
sub
add
cmpsb
mov
pop
push
jbe
mov
fmul
dec
jno
mov
jl
pop
mov
divb
imul
xchg
mov
repz
subb
leave
std
addr16
xchg
pop
sub
or
outsb
ret
scas
lcall
fmull
int3
fidivl
dec
xor
movsl
dec
jg
or
dec
shr
add
jle
fwait
lock
sub
xor
in
jecxz
sbb
loope
out
cwtl
insl
xchg
lods
mov
xlat
in
mov
push
mov
lock
fsubr
iret
movsl
xrelease
push
aaa
push
dec
dec
sbb
addr16
jp
ljmp
aaa
mov
sbb
mov
push
lds
aas
in
fwait
dec
add
sbb
das
or
or
xchg
add
mov
in
mov
push
mov
adcb
mov
sbb
sub
jne
and
std
orb
inc
lock
mov
repz
les
call
shrl
xchg
jbe
push
xchg
adc
cmp
ret
pop
das
lds
push
mov
jecxz
sub
pop
mov
dec
jmp
enter
mov
cmove
loope
subb
jge
popa
pop
sbb
jmp
push
sub
dec
sbb
loop
xor
push
inc
add
or
dec
das
test
pop
xchg
pop
mov
je
bound
mov
dec
xchg
enter
int
mov
dec
add
mov
inc
je
nop
orb
arpl
dec
mov
stc
test
and
stc
iret
lds
lds
movsb
in
cmp
and
sub
shl
or
arpl
and
into
add
imul
arpl
pop
outsb
mov
lahf
dec
sub
mov
xor
cli
cmp
inc
xor
data16
dec
or
jno
push
dec
loop
testb
mov
xor
adcb
lret
roll
xchg
mov
popa
out
pop
inc
dec
int
pop
xchg
outsl
jae
mov
add
sub
pop
push
cli
or
mov
xchg
sub
clc
and
pop
pushf
popf
test
outsb
jno
pop
movsl
das
jle
in
jle,pt
pop
inc
xchg
or
dec
or
scas
or
pop
pop
stc
mov
push
push
mov
add
cwtl
pop
or
mov
out
addb
lcall
cs
mov
jmp
stc
repz
adc
das
sarb
cmpsb
mov
jb
mov
xlat
js
dec
cmp
in
mov
sti
adc
aad
mov
cld
aas
push
mov
mov
xchg
daa
pop
fdivl
mov
dec
mov
pop
push
dec
in
xchg
lcall
shl
inc
dec
ret
lods
out
xchg
or
jmp
test
cmpb
fcoml
and
xor
mov
xchg
fdiv
aas
in
dec
adc
inc
mov
test
mov
pop
cmpsb
push
jo
adc
push
out
push
lods
jo
mov
cmpsb
jge
shlb
jb
rcll
leave
insl
pop
mov
aad
sub
jp
test
mov
adc
or
jne
into
fsts
ret
sbb
pop
call
dec
xchg
lcall
adc
inc
mov
testl
xchg
jne
mov
push
pop
xor
je
call
cmpsb
fidivl
imul
lods
in
or
mov
loope
add
out
jns
jp
push
fsub
loop
outsb
enter
mov
cmp
inc
cmp
pop
mov
push
bound
cmpsb
mov
ja
int
push
dec
xchg
addl
repz
cmp
dec
fisubs
mov
xchg
cli
test
sbb
int3
popf
xchg
in
mov
out
and
js
out
test
dec
add
mov
aam
mov
adc
mov
jo
jnp
adc
and
lock
aas
mov
mov
sbb
mov
inc
fnstsw
aas
ret
mov
cld
bound
icebp
mov
jnp
mov
sbbl
ret
mov
or
push
cmpb
insl
jno
xor
mov
fwait
mov
jecxz
xchg
xchg
outsb
mov
mov
mov
push
lahf
out
imul
push
jl
loop
lods
loope
es
jae
mov
roll
stos
sub
mov
call
stos
mov
push
pusha
cmc
push
les
repnz
in
mov
popa
popf
cmp
std
adcb
sbb
or
add
iret
add
ss
jne
lods
in
stos
je
mov
mov
lea
mov
leave
mov
push
sahf
fimull
test
iret
mov
inc
call
jbe
cmp
inc
daa
test
xchg
nop
push
push
lock
pop
cwtl
pop
xchg
xchg
jge
push
push
aad
enter
ss
or
jae
hlt
flds
jne
lahf
mov
push
jae
dec
jae
fsubrl
out
dec
add
outsl
in
lock
cwtl
lahf
popa
pop
and
lock
sbb
jne
push
mov
insl
cwtl
std
or
popa
sub
lods
cmp
sub
xor
and
popf
or
pop
enter
or
cltd
adcl
xlat
inc
lcall
aad
test
mov
lcall
cmpl
in
cwtl
test
sbb
push
rcl
inc
cmpsl
pushf
shlb
pop
and
xchg
cmp
jg
mov
jno
mov
push
jo
stos
loop
mov
in
popf
mov
jle
jmpw
mov
adc
mov
push
mov
jae
insl
jnp
mov
arpl
ljmp
popf
jns
push
pushf
jl
dec
sti
cltd
mov
cmp
dec
sti
bound
add
lahf
ds
mov
sbb
inc
add
sbb
out
add
test
ds
testl
mov
int3
fwait
adc
insl
and
xchg
popa
cmp
loopne
addr16
imul
shl
pushl
aam
adc
mov
les
fcoml
inc
ds
push
repnz
push
into
mov
cld
jl
sbb
jg
je
idivl
pop
rcll
stos
adc
leave
sbb
dec
mov
pusha
jmp
ficompl
push
xchg
aas
add
xchg
scas
subps
and
xchg
and
inc
adc
scas
cmp
lcall
int3
jb
adc
sahf
xor
and
jae
lahf
xchg
mov
cli
dec
cld
sub
test
rcll
jmp
out
pop
jle
in
dec
inc
pop
popa
iret
and
add
daa
pop
lods
adc
js
push
mov
rcrl
nop
aam
pusha
insb
push
popa
push
scas
pushf
ds
pop
hlt
push
mov
cmp
xchg
add
and
inc
fs
mov
addl
and
sbb
arpl
enter
lret
pop
xor
adc
mov
in
xchg
sub
push
in
mov
mov
leave
jbe
jo
sarb
mov
incb
pop
add
add
mov
mov
jg
mov
sub
push
inc
push
stos
std
iret
mov
pop
pop
les
ret
cmp
mov
addr16
subl
push
leave
push
shll
mov
outsl
lret
insl
push
ss
enter
aaa
sbb
loope
aaa
mov
add
je
sub
dec
mov
sti
xchg
vpcmpgtd
insb
push
mov
inc
mov
mov
aaa
addl
fstpt
jbe
lcall
push
std
nop
push
sub
xor
bound
scas
fsubrl
out
in
cltd
mov
cwtl
call
or
add
dec
pop
es
shll
xchg
scas
outsl
dec
lret
mov
or
int
out
loopne
cmp
jle
jbe
push
add
ret
pusha
xchg
sahf
mov
push
and
test
add
ret
rcrl
or
sub
je
lret
pop
cld
dec
imul
pop
or
into
dec
fstps
dec
rcrb
mov
insl
adc
popf
incl
gs
adc
shlb
jnp
std
fistpl
orl
int3
sti
push
push
dec
xlat
leave
push
dec
fwait
lret
movsb
adc
insl
adc
xchg
lret
sbb
pop
dec
pop
mov
inc
divb
leave
sbb
movsl
outsl
idivb
leave
insb
mov
mov
pop
and
pop
insb
out
xor
dec
pop
jle
das
iret
inc
or
adc
sub
imul
inc
xchg
cmp
sub
add
ljmp
cmpsl
or
daa
stc
ret
icebp
aas
leave
bound
add
and
jnp
mov
test
or
fildll
das
test
test
sub
outsl
and
scas
xor
test
or
mov
sbb
push
add
fdiv
mov
mov
jle
in
scas
xor
mov
push
int
adc
std
mov
xor
jl
sbb
jle
scas
add
adc
pop
sbb
mov
inc
push
add
cmp
ljmp
outsl
pop
xor
mov
push
inc
xor
jns
cmp
shl
jno
mov
pusha
jno
fimull
jmp
repz
out
push
and
aad
mov
fstl
ds
or
daa
sti
fisubs
int3
jb
cmpsb
ret
int3
mov
dec
aas
pop
cmc
push
enter
out
mov
pop
or
add
es
mov
inc
mov
jl
imul
stos
sub
push
sub
mov
jg
pop
xor
dec
push
push
imul
jl
mov
icebp
rcl
jbe
cvtps2pi
mov
push
mov
outsl
jne
fldl
adc
push
pop
sbb
xchg
mov
xor
leave
xor
mov
pop
xchg
loope
dec
shrl
push
add
hlt
andl
stc
and
and
pop
adc
out
popf
cmc
cmpsl
and
sub
push
or
xchg
mov
orb
xchg
sbb
aaa
jns
pop
mov
push
dec
sub
jns
mov
fcmovnbe
jae
mov
rcrb
gs
mov
xchg
shrb
daa
push
sbb
or
mov
xor
fs
mov
adc
add
add
out
es
lahf
aam
mov
pusha
jecxz
fistps
inc
push
mov
loop
rcl
jmp
mov
fwait
cmpsb
xor
int
mov
lea
adc
adc
push
fcomip
add
xor
mov
inc
lods
aam
popa
mov
sub
popa
mov
scas
xor
je
mov
jb
xlat
test
insl
ret
out
fnsave
ds
mov
pop
inc
leave
shlb
lea
cltd
fstps
cmpsb
push
call
push
mov
iret
hlt
cltd
mov
sub
adc
push
or
cmpsb
nop
test
stos
xlat
xor
scas
mov
fdivl
inc
add
cld
and
test
add
rcr
adc
data16
push
push
cmp
les
jb
mov
in
push
push
rcr
pop
rol
cmpl
stos
fdivrl
iret
cmp
stos
lds
xlat
stos
lds
pop
mov
jbe
cmp
jle
popf
jecxz
dec
mov
shll
pop
mov
pop
xlat
lcall
jo
mov
mov
and
hlt
sub
in
clc
std
rcr
or
inc
mov
divb
mov
sub
push
scas
pop
xchg
cmpsl
arpl
fildll
movsl
pop
lret
ss
cs
sbb
lds
push
and
mov
xchg
add
add
sti
jb
call
test
jo
xor
cli
scas
mov
daa
in
out
mov
or
stos
xorl
add
inc
test
jns
std
pop
mov
push
mov
clc
push
inc
into
dec
or
mov
cmpl
call
mov
int3
jo
lods
and
push
push
pop
sub
hlt
cmp
jge
sub
jns
fildll
inc
jp
sub
sahf
clc
xchg
out
cmpsl
xorl
pusha
inc
inc
fisttpl
lret
lods
insl
roll
add
add
mov
pusha
scas
test
roll
and
mull
or
imul
dec
inc
cmp
jge
push
push
jmp
pop
aas
test
push
popf
ss
or
sbb
xchg
sbb
mov
nop
leave
mov
fwait
push
stc
xor
mov
and
mov
daa
rol
arpl
lret
dec
sbb
imul
cld
das
lret
int
arpl
xchg
xchg
sub
clc
in
cld
incl
hlt
sti
adc
hlt
pop
shr
adc
add
fildll
outsb
xchg
es
push
sbb
add
sub
out
fs
insl
jmp
xchg
rclb
test
sbb
clc
push
jg
mov
mov
loopne
ss
shr
or
out
fldcw
int3
mov
scas
or
andb
xchg
loopne
aam
mov
inc
mov
cld
mov
dec
pop
orb
sbb
ss
cmp
dec
xchg
cmpsb
jnp
pushf
gs
mov
fucomp
mov
mov
sbb
push
insl
enter
inc
push
aad
aaa
sbb
adc
fstpl
mov
insl
dec
scas
sti
mov
mov
pop
int
xchg
std
stos
mov
adc
scas
fisubrl
push
sub
xlat
cmp
imul
mov
mov
pop
std
jbe
inc
pop
out
and
stos
loope
jo
pop
ret
cmp
stos
sahf
add
xchg
nop
or
xor
jge
cmp
mov
xchg
lds
icebp
push
icebp
xor
push
fwait
dec
add
repnz
and
repnz
inc
leave
in
pusha
inc
push
je
out
adc
xchg
cmp
pushf
outsl
jecxz
dec
mov
inc
test
cmc
or
test
xchg
lock
pop
mov
cmp
pop
dec
mov
or
xor
fisttpll
dec
sub
incb
xchg
inc
aas
aam
push
xchg
pop
aas
xor
stos
test
imulb
mov
inc
divl
cmp
mov
and
push
scas
dec
fs
pop
mov
int3
xor
add
dec
or
cwtl
lret
jg
add
push
inc
and
jmp
push
sbb
cmp
push
scas
scas
insb
push
hlt
cmp
xor
es
add
push
movb
dec
jmp
mov
test
xchg
or
and
loop
inc
adc
cmp
dec
mov
mov
hlt
xlat
mov
cmp
pop
shrl
add
dec
cmp
inc
iret
popa
les
outsb
imul
fwait
jnp
inc
mov
in
pop
call
cs
push
mov
cmpsb
xor
fiaddl
mov
adc
mov
push
gs
lods
add
xchg
call
xchg
add
imul
mov
and
or
aam
pushf
mov
insl
push
mov
orb
loopne
lds
icebp
add
mov
movb
addr16
rcpps
lret
inc
inc
adc
mov
sub
enter
test
test
lahf
mov
jl
daa
pop
out
mov
lret
ja
pop
and
pop
lea
dec
push
enter
xor
xor
xor
push
sbb
adc
sbb
incb
in
std
lret
lea
push
rclb
aas
aad
add
shl
mov
cmp
add
into
sbb
aad
loop
out
jb
sbb
jbe
int3
mov
xor
nop
stos
popa
in
mov
outsl
fdivrl
xor
insl
insb
add
arpl
int
xor
ret
mov
stos
jo
mov
pop
gs
xchg
jnp
jb
push
inc
test
ss
sub
or
std
adc
sub
push
inc
and
ffree
aam
es
and
xor
subb
outsl
mov
ja
pop
add
in
xor
bound
lods
adc
xor
adcb
mov
push
xchg
jl
pop
mov
jno
xchg
pop
test
fwait
jg
int3
std
sub
and
pop
sti
or
jnp
xchg
mov
jns
hlt
repz
les
outsl
js
push
rcl
test
movsb
sbb
and
imul
popl
cmpl
aam
mov
xor
mov
movsb
xor
rcrb
xchg
push
push
add
push
mov
ds
stos
sbb
arpl
fstp
stos
adc
call
mov
ss
and
push
aad
pop
sbb
and
xor
es
or
pop
add
sarb
mov
dec
sbb
fs
mov
leave
outsb
insb
mov
xchg
or
and
mov
sbb
xor
stos
dec
sbb
sahf
push
inc
mov
icebp
jmp
cmpsl
cmp
js
mov
add
mov
and
cmp
sbbb
add
fsub
jecxz
and
cmp
fistps
lods
jne
ds
lret
mov
in
in
in
sti
or
paddusb
mov
repnz
clc
push
cmp
and
sub
das
mov
hlt
pop
mulb
or
movsl
lret
mov
jb
jg
in
stos
insb
fisubl
pusha
sub
jg
cmc
or
cmc
fxtract
pop
das
std
in
sub
jbe
movsb
mov
rolb
xorb
add
addl
xchg
lret
inc
sub
das
out
lock
pop
mov
ret
scas
add
das
dec
aaa
jmp
dec
mov
inc
gs
push
push
cmp
jne
mov
dec
mov
ja
jmp
mov
dec
jnp
daa
out
cmp
push
std
test
loopne
cld
aad
sarl
cmp
das
bound
dec
sub
lods
or
fdivr
aas
or
mov
push
cmp
les
fs
rol
cmp
push
mov
inc
fwait
popf
dec
into
loope
aam
cmc
dec
sbb
loop
mov
sarb
adc
inc
movsl
push
imul
pop
adc
mov
dec
faddl
and
and
xchg
push
jb
mov
out
aaa
dec
xchg
cmp
xor
jne
xlat
jg
pop
sbb
lcall
movl
jge
or
xor
sar
pop
and
mov
cs
xchg
push
jmp
inc
fs
mov
or
lds
loope
leave
adc
push
insb
in
jle
out
aas
cli
negb
and
inc
push
repz
lret
cmpsl
xor
pop
fwait
adc
sbb
or
xor
rorb
cli
sub
pop
add
adc
cmpsl
xchg
loop
nop
jg
fistps
add
cs
gs
or
fcmovnu
cmpl
out
adc
jo
notl
jb
push
idivb
movaps
notb
jb
jno
movsl
outsl
std
cmp
insl
insl
jl
imul
aad
nop
mov
in
fwait
je
stc
or
ret
gs
scas
mov
xchg
xor
fisubrl
push
bound
or
dec
pop
pusha
movsb
pop
clc
push
push
or
mov
lds
out
stos
cmp
leave
lahf
adc
jbe
dec
jle
xor
push
jo
bound
xchg
flds
mov
pop
xchg
jl
insb
sahf
push
and
push
mov
push
shl
lods
mov
inc
adc
pop
jecxz
icebp
pop
lahf
int
fs
jl
arpl
sub
jmp
dec
mov
jne
mov
sub
jg
jle
cmp
pushl
and
xchg
icebp
xchg
sbb
and
pop
mov
push
push
and
les
xor
dec
movsl
mov
fs
movsb
lret
pop
iret
or
push
sub
cmpsl
and
add
push
add
out
ficomps
outsl
repz
xor
aad
or
daa
dec
pop
stos
push
mov
fwait
mov
lds
fisubs
shlb
push
jo
dec
loop
mov
mov
mov
push
loop
cmp
cmp
dec
out
pop
imul
xchg
fstl
jo
and
pushf
jne
addr16
sbb
out
inc
or
dec
pop
mov
decb
inc
rorb
and
ja
mov
sub
lea
adc
jmp
in
sahf
pusha
xchg
scas
xchg
and
fldt
mov
dec
sbb
mov
push
and
enter
inc
pop
push
jbe
es
jp
sub
adc
mov
enter
xor
pop
bound
fs
es
xchg
dec
jne
or
lods
sub
out
cmpsl
shlb
movsb
mov
push
mov
xor
test
gs
loop
lcall
and
pop
or
sbbb
sub
mov
adc
out
or
sub
es
iret
addr16
pop
push
cmp
enter
jg
jmp
push
mov
adc
shrb
inc
lahf
popf
rcll
paddq
into
push
xor
sub
movq
adc
push
jge
out
arpl
mov
mov
pop
fmull
mov
mov
ret
das
inc
dec
pop
cwtl
mov
sarb
pop
enter
and
or
inc
addr16
pop
scas
fucom
rcrl
insl
lods
sub
mov
mov
jle
daa
in
jnp
add
or
fsubl
push
xchg
fbstp
jb
outsl
fistpl
out
ret
das
and
mov
cmp
cmp
mov
flds
push
or
scas
mov
jmp
test
ljmp
subb
aas
push
mov
dec
add
cmp
cli
push
mov
loopw
lea
pop
sub
mov
mov
das
mov
lods
cmp
pop
inc
sbb
cmp
addr16
jne
divl
and
or
add
mov
jno
add
mov
mov
ror
mov
test
fidivl
mov
adc
repnz
test
pop
xor
pop
cs
pop
xchg
movsl
mov
es
mov
xchg
jg
mov
adc
leave
mov
or
popa
lock
jns
inc
nop
mov
pop
stc
ds
sti
inc
scas
xchg
lret
or
xor
je
nop
loopne
push
xchg
hlt
ret
dec
ficoml
mov
hlt
fwait
sbb
xchg
les
mov
add
arpl
stos
push
mov
mov
cmp
cmp
enter
mov
nop
push
sti
add
mov
loopne
cmp
js
jnp
loope
jg
pop
and
repnz
jae
cmp
and
sub
jge
pop
fimuls
xchg
nop
fcompl
subl
jl
mov
xchg
data16
fs
in
mov
dec
jmp
xor
mov
data16
push
and
cld
xchg
mov
lahf
xchg
jle
cmpsl
jno
es
loop
in
or
push
adc
mov
xchg
sbb
inc
add
dec
adc
cmc
jmp
sti
adc
xor
les
test
sbb
mov
cli
push
and
out
jbe
cmc
mov
fldcw
fstl
xor
sbb
cmp
jle
ljmp
adc
sbb
cmp
cwtl
xor
shll
and
loope
jbe
aaa
xor
sub
loop
pop
aas
gs
inc
aam
sub
cmpsb
aaa
imul
xor
xchg
ljmp
daa
sbb
adc
icebp
push
inc
and
stc
xor
cmp
dec
loopne
sbb
in
adc
cli
adc
leave
xchg
xor
ret
ja
mov
out
xchg
add
lods
jmp
cmp
or
jge
pushf
jno
xchg
lret
add
fisttpll
and
sti
inc
pop
sub
in
aaa
inc
out
fldln2
out
repnz
adc
lea
fnstsw
enter
sbb
jo
int
fisubrl
xor
mov
pop
cli
repz
mov
mov
jp
jp
sti
out
inc
mov
ret
lret
repnz
mov
mov
xchg
imul
sub
xchg
pop
cmp
inc
shlb
push
inc
rolb
test
dec
movsl
and
ds
addr16
cmp
or
push
cmpsl
fucomi
add
sbb
mov
xor
mov
and
mov
mov
bound
cmp
jne
pop
pusha
mov
pop
cmc
rclb
scas
fdiv
adc
fcmove
insb
daa
and
jnp
jb
inc
xchg
je
lcall
in
push
sarb
mov
jb
mov
test
fdivr
and
lock
mov
mov
loope
push
lods
mov
cmp
es
mov
call
lods
pop
adc
add
and
fistl
jle
fmull
sub
or
adc
mov
aas
int3
jge
ret
lahf
and
jae
loopne
test
xor
xor
loopne
jbe
test
imul
ret
pop
popf
push
cmp
inc
int
cli
ja
repz
aaa
sahf
aas
in
roll
inc
out
xor
inc
out
mov
insl
push
and
pop
dec
pop
xor
xchg
dec
sahf
push
xor
jg
cmpsb
mov
inc
hlt
movd
ret
rol
add
movsl
mov
jle
dec
in
shll
aam
outsl
movsl
clc
fisubs
orb
sbb
dec
fimuls
stos
jns
in
nop
jb
ja
sbb
inc
std
sub
cmc
test
or
inc
dec
cmp
lahf
xor
pop
mov
movsl
lods
mov
push
sbb
jmp
lahf
fwait
cwtl
ror
popf
data16
xlat
shr
das
xor
dec
mov
int
in
inc
nop
ss
in
int
shl
imul
dec
xchg
leave
cltd
sti
jp
push
sarl
out
arpl
sub
push
cli
mov
mov
dec
lds
mov
push
cmpsl
mov
push
adc
mov
into
add
popa
stc
sub
outsl
mov
sub
lds
xchg
inc
dec
jne
pusha
enter
rep
insl
xchg
jmp
es
cs
test
lret
jmp
arpl
cmp
mov
jae
push
jl
mov
adc
movsl
fistpl
loopne
in
ret
pop
ss
test
xchg
push
mov
test
pop
fistl
adc
ja
dec
sbb
inc
into
int3
dec
pand
pop
adc
mov
pop
or
add
sub
in
cmpl
in
mov
lret
or
cmpsb
sub
stos
lahf
popf
cmp
mov
fldt
popf
sbb
pop
arpl
loop
cmpps
mov
mulb
cmp
cmpsl
cmp
ret
clc
stc
cmp
jge
or
mov
xchg
cmp
pop
outsl
mov
repnz
inc
xor
ror
es
ljmp
sbb
and
fmul
cmp
push
push
lahf
add
inc
jmp
mov
mov
xlat
fstps
in
inc
insb
ret
outsb
xor
fnsave
adc
sbb
adc
dec
jnp
into
shrl
adcb
icebp
dec
test
xchg
subb
jl
insb
loopne
push
push
mov
clc
outsl
and
gs
cmpsb
dec
pop
mov
add
insb
or
push
xor
inc
adc
mov
fstps
mov
xor
stos
xchg
inc
test
movsb
xor
dec
push
or
dec
cmpsl
or
scas
movsb
xor
popf
pop
mov
xchg
sti
insl
insl
test
fists
enter
cltd
dec
push
es
in
pop
push
clc
xorl
jg
sbb
mov
ljmp
mov
loope
adc
lock
mov
pusha
mull
xor
fs
test
call
jmp
or
push
cli
sub
xchg
lock
adc
xor
xchg
es
add
movsb
es
add
xor
xchg
test
pop
outsl
adc
dec
fld
add
inc
jge
stos
leave
xchg
insw
test
mov
sti
pop
sbb
ret
mov
cmp
jmp
jle
inc
pop
cmp
outsl
out
sub
int
stos
pop
dec
or
xor
jl
mov
lahf
mov
std
lods
out
mov
xchg
sub
sti
adc
xchg
sub
sub
lret
pop
jmp
lcall
loopne
pop
push
imul
xchg
or
notl
jmp
stos
inc
addr16
jg
pop
push
stc
xor
inc
xor
push
data16
fstpt
test
pop
pop
ret
add
sbb
mov
or
adc
leave
test
mov
jl
pop
cmp
xor
cmp
or
push
pop
sub
ja
jnp
loope
add
and
out
xlat
jmp
cmp
xchg
and
push
mov
mov
daa
mov
mov
aad
cmp
jmp
fs
add
pop
loope
pop
imul
inc
jb
jg
mov
mov
repnz
shl
lret
jae
dec
adc
out
fdivs
cli
rcrl
pop
sub
or
data16
or
adc
push
push
aad
lret
pop
sbb
ja
sbb
repnz
inc
mov
mov
sub
daa
out
inc
mov
lahf
icebp
inc
inc
mov
or
out
sub
dec
clc
pop
pcmpeqd
pop
test
pop
fwait
ljmp
aas
pop
lods
push
pop
mov
mov
sbb
in
add
or
jno
mov
pop
mov
jl
sub
mov
push
test
cli
aas
cmpsb
xchg
fnsave
pusha
inc
dec
int3
jg
je
dec
ds
flds
bnd
cvttps2pi
xchg
inc
dec
mov
jns
in
pop
lods
das
das
cmpsl
repz
movsl
test
mov
lods
mov
cmc
mov
out
pop
dec
push
aaa
fsubrs
lcall
out
add
mov
insl
scas
pop
cmp
cmc
fs
adc
imul
lss
cmpsb
repnz
stc
or
push
inc
xchg
sub
mov
mov
dec
and
mov
fldcw
sub
fcomps
xor
notl
mov
in
pusha
std
push
aaa
testl
dec
push
and
and
inc
push
stc
xor
int
mov
inc
imul
rorb
push
mov
dec
in
lds
sbb
scas
or
sub
popf
rcll
rcrl
xchg
pop
xchg
sub
push
push
push
mov
cmp
xor
jae
jo
test
and
jmp
das
dec
add
movsb
add
aas
rorl
jno
adcl
sti
pushf
nop
lods
jge
push
inc
cmp
mov
xchg
or
jp
jb
mov
push
notl
stos
adc
aad
fisubrs
arpl
notb
shll
push
jg
out
call
outsl
ret
ds
popa
add
outsl
or
inc
repz
dec
or
call
pusha
mov
pop
cld
arpl
jl
aam
lahf
orb
xor
xorb
dec
cld
and
pushf
addr16
pop
and
inc
mov
adcb
xchg
or
dec
pushf
test
or
es
repz
pop
and
imulb
jmp
push
sbb
int
sub
stos
inc
hlt
ret
adc
fstpt
cmpsl
les
lock
cmc
lret
aam
fnsetpm(287
or
sbb
rcr
jnp
cmp
sbb
aas
push
jbe
call
jns
and
jo
cltd
lcall
adc
xor
pop
fstl
insb
hlt
ja
or
jb
dec
xchg
mov
stos
testb
dec
mov
dec
shlb
addr16
cli
test
inc
inc
lods
cmp
add
sbb
xor
mov
add
jl
pop
das
jae
sub
xor
push
into
mov
jmp
mov
sub
lods
iret
pop
cmp
jno
or
bound
fcomp
subb
sbb
xor
shr
fiadds
imul
mov
popa
xor
bound
pop
fbstp
mov
popa
daa
xchg
call
xchg
sbb
add
and
lahf
popl
mov
cmpsl
rcrb
mulps
pop
jg
xchg
insl
add
ret
or
lcall
aad
movsb
imul
cmp
and
jp
xchg
decl
iret
and
out
inc
mov
out
test
or
jp
jge
aas
jo
push
mov
push
int3
pop
shlb
add
into
push
mov
les
jnp
jmp
mov
outsb
push
or
cmp
ss
daa
cmp
xlat
sbb
jmp
inc
push
dec
pop
add
mov
int3
sub
push
test
mov
and
inc
mov
push
out
mov
adc
push
js
add
dec
nop
inc
das
or
je
mov
xor
outsl
flds
sti
or
movsb
push
pop
clc
rcl
xor
fstl
xor
inc
loopne
das
pop
lods
std
mov
lret
ja
xor
ret
xor
sub
sbb
xlat
xchg
icebp
syscall
mov
pop
sbb
ret
sub
xor
xor
arpl
cmpsl
or
mov
pusha
cld
push
stc
aaa
out
les
cmp
mov
pop
lock
add
popa
in
cmp
dec
add
shrb
and
or
insl
sub
jecxz
jle
mov
mov
cli
or
mov
in
sub
sti
sahf
cmp
mov
cld
popa
add
hlt
jg
pop
xchg
adc
cmp
aad
sub
inc
leave
and
dec
inc
sub
data16
das
cli
pop
std
outsl
daa
test
ja
in
or
push
loopne
xor
cmp
rcrb
jg
xor
rcrl
adcl
inc
mov
dec
sti
stos
push
stos
out
sub
test
sbb
loope
jns
xor
inc
sbb
inc
adc
fidivrs
adc
ret
or
pushf
hlt
cmpsb
pop
push
and
sar
mov
jecxz
mov
clc
xor
stos
popa
loop
dec
aas
popf
movsb
mov
mov
andb
jbe
xchg
aad
and
inc
pop
shr
jg
int3
packuswb
enter
inc
testb
add
jnp
xchg
mov
test
fisubrs
inc
mov
pop
jno
or
call
ljmp
pop
repz
dec
dec
cmc
push
das
sbb
push
hlt
pop
push
pop
mov
push
popf
xchg
xor
adc
lock
cld
cltd
xor
call
jmp
cld
xor
arpl
movsb
cli
xlat
add
mov
movsb
fdivs
sub
push
sbb
sbb
mov
xchg
ret
lds
add
je
mov
js
popa
icebp
inc
aas
out
xchg
pushf
mov
dec
xchg
fwait
mov
mov
inc
cmp
aas
jg
xchg
rcr
gs
push
mov
mov
subb
cld
cmpsb
and
scas
jns
pop
int3
sbb
mov
push
scas
rcrl
xlat
stc
cmpsb
ljmp
gs
pop
push
xchg
pop
jecxz
lock
rorl
mov
lods
scas
cmp
shll
inc
xchg
loop
sub
jle
lahf
add
push
popf
popf
sbb
in
fisttpl
arpl
pop
pop
mov
sbb
sub
sbb
xor
scas
and
jbe
fidivrl
add
mov
xchg
inc
or
inc
pop
inc
mov
push
int3
xor
nop
scas
lret
jo
sbb
adc
lods
sbb
sbb
loopne
inc
inc
xchg
lock
xchg
fdivrs
scas
jnp
adc
adc
push
or
dec
int
xchg
cs
or
mov
iret
mov
xchg
jge
stos
nop
xor
dec
loop
xchg
sarl
mov
mov
fwait
in
into
rolb
mov
stos
xchg
lods
aam
andps
push
adcb
arpl
mov
push
pop
call
or
cli
iret
stos
adc
fisttps
and
lahf
aas
mov
std
rolb
mov
mov
scas
lahf
int
fdiv
cmpsb
push
sub
inc
mov
roll
faddl
sar
icebp
jae
push
pop
jecxz
mov
cmp
sub
ljmp
sub
xlat
or
fimuls
adc
nop
je
jnp
scas
pop
inc
jns
push
out
loop
loop
push
dec
and
stos
sub
add
cmpsl
lret
or
xor
cmp
sub
outsl
cmp
or
cmc
cwtl
test
jo
jmp
xchg
cmp
mov
xlat
les
daa
add
into
rcrl
enter
sub
sub
inc
outsl
xor
and
and
faddp
adc
leave
mov
jp
pop
sti
sub
ds
loopne
fwait
mov
cmp
sbb
pushf
and
or
pop
ljmp
test
push
cmp
fldcw
adc
sbbl
je
out
sub
cs
and
ret
ss
mov
xchg
and
repz
mov
xchg
cmp
mov
lods
push
fmulp
push
sbb
bound
sahf
add
cmp
movsb
jno
lods
movb
mov
pop
xadd
js
pop
roll
aas
fistpl
sub
repnz
fisubrl
xchg
mov
push
sbb
adc
leave
and
cmp
loopw
inc
inc
xor
mov
ret
cwtl
push
push
push
cwtl
mov
cmp
or
testl
inc
push
xchg
shll
mov
stc
movsl
int
mov
sbb
sbb
inc
imul
pop
mov
imul
outsb
push
xchg
int
rcrb
push
ss
lahf
call
inc
xor
push
push
lods
xor
loop
fwait
mov
frndint
adc
xchg
mov
inc
push
jo
xor
mov
xor
cmp
aas
cli
out
xchg
mov
mov
mov
mov
or
mov
jo
jmp
iret
inc
sarb
push
pop
jne
push
xchg
ret
mov
lds
mov
daa
mov
and
dec
mov
adc
scas
cld
dec
or
jge
mov
jmp
scas
xor
cmp
stc
dec
or
pop
sbb
jge
orl
imul
loope
scas
cmp
jo
pusha
lds
in
sahf
xchg
mul
movl
test
mov
shl
daa
lods
les
pop
cmpb
inc
and
test
or
stc
testb
and
add
stc
stos
in
scas
lea
shrb
clc
popf
xchg
je
filds
mov
adc
lahf
sub
pop
mov
mov
notl
test
imul
je
xchg
add
xorl
inc
inc
adc
ja
dec
mov
and
cmc
mov
mov
enter
cmp
sbb
adc
pop
mov
out
push
in
dec
jle
sbb
xor
mov
and
adc
cmc
push
cmp
leave
idivb
test
lcall
mov
cmp
mov
inc
sarl
clc
imul
test
xchg
mov
in
std
ds
ds
stc
fs
ffreep
lods
add
mov
das
jne
push
js
in
sbb
mov
pop
cmp
jo
push
loop
push
lcall
mov
lret
xlat
pop
movsb
fisttps
fdivl
test
sbb
mov
xchg
outsl
lret
sbb
adc
push
or
and
cmpsl
pop
mov
inc
sahf
repz
add
fimull
ret
pushf
or
mov
aad
add
sub
and
jbe
int
inc
jb
ljmp
pop
mov
loopne
int
in
das
sbb
xchg
push
fwait
pop
dec
std
jae
or
cltd
out
ljmp
push
adc
lahf
hlt
and
out
mov
mov
cli
jno
cmp
leave
js
xor
in
adc
cmp
inc
nop
or
inc
aas
daa
dec
loop
or
cmpsb
out
inc
and
push
iret
xchg
mov
cmpsb
or
lods
into
lods
cmp
lea
sub
out
mov
cmpsb
mov
mov
addr16
mov
test
outsl
and
movsb
ljmp
repz
nop
lds
shll
fs
xorb
jmp
inc
cltd
pop
repz
sub
stos
lret
mov
add
in
mov
and
out
pop
shll
add
call
sbb
mov
xlat
push
xchg
inc
xchg
inc
movd
out
xchg
cmp
repz
in
mov
loopne
cmc
pop
cvtps2pd
js
frstor
mov
mov
fwait
clc
jl
sbb
lock
lret
loopne
je
popa
mov
inc
hlt
lret
cmpsb
cmpsb
sub
sbb
out
mov
loop
cld
call
aam
lods
jo
in
sub
popf
xor
pop
and
pop
outsl
mov
jne
push
dec
push
cmpsb
and
imul
add
lods
and
int
pop
sbb
insl
clc
enter
or
jns
in
pop
daa
pop
jp
and
lret
pop
cltd
xor
leave
mov
xor
cwtl
mov
cmp
das
repnz
push
xor
fsubs
imulb
sbb
sub
xchg
mov
inc
inc
cmpb
clc
jae
fists
into
enter
sbb
pushf
adc
sub
pop
mov
xlat
add
mov
and
pop
xor
daa
push
pop
mov
ret
push
clc
pop
cmp
shrl
push
pop
xchg
mov
cld
dec
xor
push
lea
dec
mov
mov
inc
mov
adc
inc
jo
mov
jecxz
sub
loope
xlat
xor
pop
cs
dec
idivl
fwait
shlb
mov
rcr
push
cmp
lcall
sbb
adc
ljmp
lods
stos
or
push
outsl
xchg
popa
aas
sbb
shrl
xor
gs
mov
push
pop
imull
push
pop
add
cmpsb
rolb
sahf
fs
mov
jb
ds
push
add
cmp
rclb
mov
ds
pop
xchg
xor
adc
cmpsb
js
mov
mov
loop
mov
or
sbb
mov
popa
mov
in
jmp
dec
and
lret
ret
or
lock
in
mov
loop
cmp
lret
ljmp
stos
dec
sub
gs
in
xor
ja
sbb
cmp
dec
cmp
bound
jl
jg
or
jno
jnp
mov
leave
lock
adc
outsb
inc
hlt
jle
and
rcrb
shrb
nop
mov
sub
cmp
pop
push
loopne
mov
test
lahf
jle
sbb
sub
inc
jle
push
aaa
cmpsl
lret
sub
mov
scas
mov
xchg
mov
packuswb
xor
or
das
dec
or
adc
mov
daa
out
mov
hlt
insl
notl
loope
lcall
mov
or
or
aam
movsb
mov
insw
xchg
add
jmp
es
mov
test
add
sub
aaa
sub
cmpsl
sub
dec
or
stos
xor
hlt
insb
lcall
ds
roll
and
jmp
pushf
dec
adc
lea
jle
pop
nop
sub
fdivl
dec
imul
ds
dec
and
out
jg
adc
mov
xor
xchg
ds
add
mov
fucompp
test
adc
popf
scas
jl
xchg
mov
mov
inc
aaa
call
pop
xchg
lds
push
push
clc
jg
and
xchg
xchg
int
cmc
and
movsb
mov
outsb
xor
jg
pop
test
xchg
mov
nop
dec
enter
sbb
popf
loop
data16
data16
mov
notl
hlt
jle
push
jle
pop
cmp
lahf
xlat
sub
and
movsb
fldl
mov
stos
mov
dec
jl
xchg
push
push
loope
ljmp
lods
sub
xchg
mov
pop
add
cld
jo
xchg
adc
sub
cwtl
jo
mov
ds
enter
xchg
jo
icebp
add
jae
sub
jge
lcall
add
rorl
movsl
sahf
andb
mov
push
xchg
add
push
or
loopnew
xor
sahf
push
dec
xchg
shrb
push
sub
out
hlt
and
adc
call
fists
rorl
mov
lahf
adc
mov
push
rorb
mov
repz
clc
fs
adc
push
andb
rorl
imul
inc
pop
or
pop
push
xchg
jo
enter
add
jbe
mov
clc
xor
in
loopne
push
je
dec
sub
and
out
fdivrp
and
das
stos
and
xor
sub
push
shr
mov
xor
jae
je
outsl
adcb
in
fs
push
int
imul
pop
inc
test
and
xchg
or
sbb
and
jle
jg
enter
gs
xchg
push
jge
out
pop
std
sbb
inc
out
nop
rcl
mov
aam
cmp
movsl
cmpsl
jns
push
call
mov
scas
dec
mov
aaa
mov
test
mov
adc
xor
sbb
std
and
icebp
xlat
push
mov
test
pop
aas
or
cli
repnz
adc
or
out
and
adc
addr16
sbb
add
in
into
cmp
cmp
dec
jle
test
lahf
out
or
jae
out
repnz
xchg
pop
popf
test
ret
xchg
jecxz
icebp
pop
leave
cmp
xor
xchg
add
jg
pop
mov
aas
dec
lods
int3
mov
loopne
es
gs
scas
ja
sbb
xor
cs
mov
push
dec
mov
fisubrs
repnz
push
imul
stos
xchg
cmp
mov
in
dec
and
cmp
xchg
fs
mov
js
cmp
mov
pushf
sahf
mov
add
mov
insl
mov
icebp
out
xorl
mov
cmp
das
mov
sbb
das
movsb
aas
addr16
bnd
xor
cmp
fs
fs
add
lock
inc
lcall
lea
mov
sbbl
sub
pop
jecxz
mov
outsb
into
xchg
adc
jecxz
in
sbb
mov
add
ljmp
adc
jb
lcall
adc
jb
js
cli
sub
fldenv
jl
clc
mov
jbe
or
call
ds
addb
xchg
lods
movsl
jecxz
xchg
mov
jb
cmp
test
lcall
sbb
mov
jl
aad
and
xchg
cmp
push
add
bnd
cmp
mov
sbb
ret
xor
sahf
jle
or
inc
inc
aam
xchg
stos
xor
aas
xor
ret
pusha
insl
and
lahf
lret
lods
pop
sub
sub
cmpsb
push
add
out
inc
jnp
repz
xor
daa
jecxz
cmp
lds
repnz
ja
or
mov
int3
fucomip
popf
xchg
cmp
stc
jecxz
mov
and
mov
repz
mov
adc
push
dec
pop
jbe
mov
mov
jmp
ljmp
jmp
and
test
xchg
jnp
mov
adc
sub
xor
je
push
xchg
sub
pop
js
lock
aaa
push
outsl
pop
clc
mov
jg
in
mov
inc
icebp
inc
lea
xor
dec
outsb
mov
insl
xchg
push
stos
and
cmp
add
cld
repnz
ljmp
jbe
popf
call
mov
clc
lret
js
popa
repz
and
push
cmp
pop
in
cli
fs
lea
mov
cmp
repz
xchg
adc
xchg
cld
push
fidivrs
outsl
out
xor
cmp
push
mov
xchg
jmp
dec
in
push
dec
or
lds
testl
test
cmpb
adc
add
add
mov
jmp
xchg
mov
cmp
mov
sbb
ss
fistpll
out
aas
in
push
lock
xchg
sub
xlat
loopne
into
ret
inc
lods
dec
pop
mov
pushf
and
jg
push
test
mov
cmp
lret
imul
jno
mov
jp
in
and
mov
in
mov
adc
lcall
mov
pushl
int3
lahf
adc
jl
mov
cmp
shll
push
or
dec
push
or
xor
add
push
mov
cmp
sub
dec
stc
mov
pop
jns
dec
leave
pop
add
in
jge
mov
inc
stos
inc
sti
jg
test
jmp
jno
dec
fisubs
leave
mov
lcall
nop
mov
cltd
push
sbb
rcrl
mov
jg
aad
pop
fisubrs
or
dec
cmovae
xor
test
dec
adc
ja
lock
xor
mov
dec
mov
pop
js
xor
jnp
fildll
dec
mov
or
lret
adc
jb
sub
imul
test
in
or
in
add
mov
jle
pop
inc
test
pop
les
xlat
in
xor
je
into
pop
fdivrp
dec
movsl
iret
iret
mov
imul
sarl
cmp
pop
cmp
dec
ret
ja
xchg
ret
jbe
mov
fdivs
pop
sbb
into
mov
xor
lods
xor
ds
dec
aaa
in
adc
xor
jl
and
sub
mov
aad
nop
adc
lea
xchg
hlt
xchg
bound
enter
aad
mov
notb
sbb
xchg
incb
shlb
push
rorb
xor
ss
test
loope
sub
idivb
add
xor
out
or
addl
loopne
inc
sbb
in
insl
jle
push
pop
call
sbb
push
or
pop
sub
pop
push
and
outsl
mov
adc
sub
xchg
mov
ds
movsl
and
add
and
movsl
call
addr16
cmp
jae
mov
clc
mov
out
push
jge
mov
les
nop
cmp
int
jb
shlb
jno
pop
std
test
or
push
das
cwtl
or
cs
rcl
cmp
adc
test
sbbl
shl
paddsb
sbb
jnp
lock
lret
and
stos
aas
fnstenv
inc
repz
pop
rorb
hlt
sub
test
and
adc
xchg
in
arpl
mov
adc
popf
movsl
xchg
mov
js
push
aad
sub
cmp
and
lahf
fldenv
and
std
leave
pushf
adc
jae
mov
mov
gs
dec
inc
push
push
popf
fistpll
jns
popf
mov
sahf
popa
push
inc
ss
jne
leave
loop
jecxz
mov
fisttps
sub
xchg
push
xchg
and
mov
stos
mov
xchg
adcb
jle
cmp
imul
pushl
mov
mov
add
pop
push
stc
jae
jmp
popf
lock
xchg
loopne
adc
sub
insl
push
daa
mov
push
mov
test
andw
andb
mov
cmpsb
xlat
imul
push
fsts
lds
add
pop
mov
imul
jmp
push
and
mov
xor
add
shlb
js
xchg
les
shl
rclb
or
or
push
jmp
mov
sbb
mov
bound
sbb
aam
mov
sub
mov
jno
pop
sahf
js
jle
add
xor
pop
xacquire
dec
pop
mov
mov
adc
xorl
jmp
sub
jae
push
mov
les
adc
repz
fcomip
fs
push
push
add
xor
icebp
dec
mov
dec
add
shlb
jbe
add
mov
xchg
xchg
mov
push
fwait
repz
roll
jno
inc
push
es
mov
cmpsb
mov
mov
push
adc
fabs
rorb
test
daa
insb
inc
icebp
rolb
lods
test
add
lcall
push
sub
wbinvd
mov
mov
pop
nop
shrb
movsb
lock
xor
aas
stos
xchg
mov
xchg
into
or
jl
mov
test
xor
xchg
jnp
xchg
adc
push
and
arpl
dec
out
xor
pop
inc
jecxz
ret
xor
dec
imul
aaa
and
lock
andb
xor
arpl
nop
pop
out
ret
xchg
sbb
inc
adc
out
cmc
xlat
inc
jo
clc
dec
push
pop
cmp
movsb
fisubs
push
jbe
shll
iret
sbb
rcll
sbb
stc
es
adc
imul
xlat
cmpb
ret
add
sahf
es
pop
popa
and
sti
mov
jle
adc
in
jmp
cmp
sub
push
std
cmp
xchg
icebp
mov
cli
daa
sarl
fnsave
jnp
mov
movb
rep
cmp
push
pop
and
push
push
mov
roll
test
pop
push
cltd
mov
push
inc
sbb
lcall
pop
mov
sbb
ret
mov
pop
cmp
cmp
insl
loopne
mov
sarb
xchg
les
loop
cmpsl
lock
mov
loop
adc
loop
scas
push
cmp
in
sbb
sbb
iret
dec
mov
movups
sahf
mov
xor
fwait
lock
cmp
test
inc
es
mov
jp
sahf
xor
insb
mov
repz
lods
aad
mov
pop
add
mov
and
js
sti
jg
cs
nop
or
xor
pusha
leave
icebp
bound
cmp
sbb
jb
sub
lods
pop
adc
push
lds
pop
aad
push
stos
jae
inc
push
mov
mov
rorl
outsl
cmp
movsb
sub
sub
sub
cs
xor
inc
push
stos
aas
shlb
pop
inc
ret
imul
xchg
dec
pop
in
mov
cmpsb
fwait
and
fstpl
adc
pop
inc
loope
fadds
mulb
jb
lea
leave
cmp
fcmovnb
out
aad
repnz
push
mov
jne
pop
add
jae
mov
inc
lret
pushl
das
mov
stos
sahf
inc
push
pop
sub
and
push
inc
adc
fstps
xor
fsts
das
inc
jno
addr16
out
and
mov
in
out
scas
xor
jae
cltd
bnd
insl
jge
les
cmc
fldl
shll
jo
mov
in
xchg
lcall
out
and
cltd
dec
scas
arpl
cltd
shlb
lret
xchg
je
es
xchg
mov
lods
int
mov
inc
rorl
lcall
and
and
fcomps
xchg
xchg
in
aas
lcall
out
jne
stc
addr16
lods
pop
inc
push
pop
in
mov
arpl
and
arpl
pop
sub
dec
clc
das
imul
imul
mov
iret
adc
jae
dec
ljmp
mov
dec
jbe
fidivs
cmpsl
and
leave
pop
push
mov
cmp
imul
mov
lods
lods
xchg
adc
cmp
icebp
nop
and
in
adc
test
pushf
lret
mov
pop
ljmp
notl
mov
ret
adcb
jb
sarl
mov
cmp
mov
inc
into
cld
rol
or
roll
pop
and
push
cltd
dec
sub
xchg
jle
or
iret
incb
nop
sub
adc
js
out
pop
and
icebp
and
fwait
shl
imul
sbb
sbb
lahf
les
fnsave
sbbl
mov
cmp
xor
dec
pop
push
enter
aad
inc
outsl
pop
push
add
and
mov
notb
ds
lret
mov
inc
push
js
popf
pop
dec
imul
or
scas
ss
sbb
sub
jmp
or
jbe
nop
aas
mov
sbb
stc
mov
repnz
cmp
scas
mov
add
jecxz
jecxz
fld
and
mov
push
test
add
cmc
jno
ror
cwtl
push
ljmp
repz
inc
shlb
movsb
das
hlt
mov
sub
les
mov
shll
jns
insl
and
mov
and
sub
lds
je
dec
out
in
ds
xlat
icebp
cli
jge
fbld
loop
add
je
and
mov
je
sbb
mov
sub
jge
fwait
push
dec
adc
jnp
push
in
pop
popf
pop
scas
sub
mov
mov
push
or
adc
pop
lock
mov
aam
jecxz
dec
adc
xor
and
and
sbb
add
lods
iret
push
cmp
and
int3
les
sbb
cli
aaa
shrl
adc
addl
icebp
testl
cli
xchg
test
orb
test
test
out
push
in
das
fimuls
out
lret
push
lret
add
das
xor
test
mov
rcrb
cwtl
pop
ss
imul
mov
or
ror
fnsave
jbe
cltd
and
dec
mov
jnp
addr16
jg
nop
lds
sub
inc
gs
push
mov
ret
adc
in
out
test
xchg
scas
sahf
notl
add
lret
sub
xor
ss
inc
sub
hlt
cli
test
test
mov
cwtl
ret
rcll
push
xor
mov
xor
and
ss
cmp
cmc
rcl
add
dec
in
dec
dec
xlat
fadds
jmp
pop
and
sbb
inc
ljmp
scas
inc
pop
add
call
mov
repnz
loopne
mov
push
outsb
test
mov
inc
xchg
fst
xchg
push
loope
call
inc
adc
sub
mov
inc
xchg
ret
in
outsl
into
int3
std
cmp
cmpl
dec
or
loop
in
test
pushf
addr16
push
dec
adc
fstps
mov
cwtl
mov
addr16
jle
dec
sbb
push
test
xchg
adcb
jbe
inc
mov
lea
mov
cmp
xor
repz
push
cmp
mov
or
imul
pop
mov
ja
sti
mov
mov
push
jo
mov
arpl
fidivrs
jecxz
xchg
push
cmpsb
sub
push
fisttps
or
mov
sbb
cwtl
lahf
scas
push
cmp
lods
xchg
dec
mov
mulb
mov
subb
push
jp
push
scas
outsb
mov
xor
leave
outsl
pop
ja
mov
int
mov
or
orl
jo
enter
scas
cmp
add
xchg
outsb
repnz
xchg
shl
outsl
clc
out
fmuls
das
es
push
xor
mov
push
dec
stos
cltd
pop
sbb
cmp
sti
rclb
insb
push
xorl
fwait
test
push
add
mov
aam
cmp
test
mov
push
sbb
pop
ds
in
push
cmp
mov
std
jle
pop
lcall
jg
sbb
push
jne
stos
stc
insl
dec
sahf
outsl
push
mov
adc
inc
mov
or
cmpsb
xlat
xor
stos
orb
in
mov
inc
mov
mov
mov
in
imull
out
xor
or
xor
aas
cmp
adc
inc
sub
xorl
mov
stos
mov
in
inc
add
dec
ds
ss
jb
ja
xchg
out
dec
cli
into
dec
add
es
lock
aad
sbbb
lods
lds
lock
test
rcrb
gs
mov
loopne
lods
out
shl
ror
call
pusha
or
daa
js
add
pop
mov
fsubs
ficoms
xchg
and
sub
sbb
mov
add
aad
sub
mov
mov
in
push
lcall
xchg
xchg
pop
sbbb
mov
inc
stos
rcr
xor
and
aam
imul
jge
addr16
movsl
jmp
and
sqrtps
inc
ret
mov
push
pusha
lds
in
fcmovnu
adc
sbb
imul
push
sbb
or
fadds
faddp
push
ja
mov
rclb
std
mov
pop
mov
ljmp
cwtl
jo
sub
push
mov
mov
lret
ds
les
sub
pop
lods
hlt
in
lods
popf
xor
test
xor
jmp
es
push
or
cmp
lcall
shrb
cwtl
xor
shlb
sarl
hlt
xor
shrl
stos
add
outsl
adc
pop
insl
insb
addr16
dec
sub
nop
cmp
xchg
jnp
xor
aad
cltd
jae
adc
mov
loopne
mov
push
mov
pop
pop
mov
dec
jmp
insb
shrl
mov
sub
cli
inc
ds
pop
jno
push
mov
mov
ret
xor
xchg
cld
mov
lret
mov
pop
mov
mov
xor
adc
lahf
outsl
data16
jno
lahf
push
std
mov
or
aad
cli
mov
cli
sub
mov
adc
dec
pop
push
addl
enter
jno
mov
jp
ljmp
cmpsb
ja
insb
loop
pushf
push
mov
xor
and
and
pop
and
stos
fistl
test
push
adc
pop
int
mov
ret
inc
dec
add
cmpsb
xor
out
cmp
push
data16
mov
insl
xlat
jb
push
or
or
cmpsl
inc
test
dec
mov
and
or
push
sbb
sbb
or
push
pop
xor
mov
jns
push
lea
and
sub
push
out
movsb
jns
insb
mov
jbe
add
jno
or
pop
fisttpll
mov
mov
cmp
test
pop
inc
xchg
mov
cmp
loope
push
xchg
jno
ljmp
fwait
icebp
mov
test
push
test
shlb
ljmp
fwait
jl
jne
dec
mov
aad
or
pushf
xchg
jp
mov
imul
sbb
inc
cmp
adc
ljmp
mov
popfw
fsubrs
out
pop
js
ljmp
lods
out
cmp
xchg
sbb
adc
pop
aaa
fadds
sbb
ret
mov
cmpsb
jae
jns
and
fs
jno
imul
xor
mov
idivl
imul
sti
dec
shlb
repz
pusha
mov
cmp
out
add
cli
push
push
cmc
stos
jbe
mov
scas
lcall
mov
xchg
add
popf
jge
in
sarl
popa
jae
mov
mov
cmpsl
and
cmp
dec
dec
pop
test
out
loop
push
push
loopne
sbb
dec
jg
sbb
das
xor
cs
inc
or
jge
stc
sbb
cld
cmp
lahf
aad
add
pop
sbb
mov
cmpsl
fmuls
mov
xor
cmp
xchg
xor
imul
sahf
in
scas
push
aam
mov
inc
xor
ret
imul
mov
inc
cld
aam
push
jmp
sbb
dec
push
lods
pop
in
js
insl
lods
inc
loopne
push
out
movb
roll
shl
or
push
lea
sbb
push
mov
cwtl
sbb
sbb
mov
outsb
inc
and
cmpsl
cs
mov
inc
mov
add
out
aas
dec
xor
mov
push
pop
dec
arpl
in
iret
xchg
mov
rclb
scas
add
repz
lods
cmc
dec
rcrl
ljmp
ja
or
mov
leave
popf
and
adc
sbb
xchg
shl
push
pop
dec
test
xor
dec
das
outsl
cmp
cmp
jmp
test
es
xchg
xor
pop
push
sti
sbb
jp
adc
pop
mov
stos
hlt
add
inc
mov
sub
imul
jb
push
cmp
negb
das
sbb
out
lahf
int
xor
xchg
inc
das
mov
fcom
or
push
and
cmp
in
pushf
into
push
mov
daa
idivl
inc
outsl
push
gs
jae
or
je
popa
das
hlt
xchg
lea
les
xchg
lds
mov
sbb
adc
and
in
sub
mov
pop
lock
sub
xor
jle
dec
lret
dec
mov
scas
sbb
cwtl
idivb
gs
sub
fistl
daa
xchg
sub
push
sbb
aad
orl
sbb
inc
repz
out
cmc
in
add
push
loopne
nop
orl
les
push
mov
lahf
sbb
fst
mov
fwait
shr
lods
in
shlb
sahf
lahf
outsb
adcb
mov
or
push
inc
les
push
push
inc
out
fsts
mov
xlat
adc
out
rolb
push
or
push
in
mov
push
fs
cs
sbb
push
pop
movsb
sbb
adc
push
dec
mov
repz
ret
pop
mov
jg
les
xor
lahf
mov
stos
push
jo
jnp
dec
sub
lods
sbb
cmpb
xchg
fsubs
mov
push
popf
or
cmpsb
movb
push
xchg
fidivl
push
xor
test
ja
test
adc
aas
push
inc
test
in
cwtl
jecxz
xorb
lret
sub
enter
push
cmc
pop
je
xor
test
push
test
stos
ret
dec
sahf
inc
lcall
pop
mov
or
inc
in
outsl
dec
fs
add
pop
jno
jb
push
lahf
xchg
stos
xchg
sbb
in
jg
add
mov
jbe
mov
push
cmp
mov
jae
pop
and
cmc
mov
in
hlt
or
rorl
andb
das
push
stos
xchg
xchg
in
leave
lods
sub
cmp
lcall
cmp
lea
enter
push
mov
fs
pop
pushf
push
std
idiv
jg
enter
clc
mov
setns
sbb
daa
rcrl
fadd
inc
fstpt
dec
int3
jb
pushf
mov
ljmp
jle
mov
inc
add
push
scas
lods
sbb
gs
aas
cmp
xchg
shrl
xchg
insl
pop
lods
push
xor
lods
xchg
dec
push
rolb
pop
add
inc
bound
outsb
push
jg
sub
xor
popa
mov
dec
sahf
fcmove
insb
fnstenv
lahf
jge
daa
dec
jecxz
pop
adc
shll
cmpsb
cmp
add
imul
and
cltd
add
inc
sti
push
call
cli
mov
mov
sahf
xor
pop
sbb
cmpsb
adc
add
cmpsb
cmpsl
cmp
adc
pusha
add
sti
push
pop
in
push
pusha
mov
fcom
movsb
mov
dec
nop
push
loopne
inc
push
sub
mov
cmp
mov
push
mov
ds
mov
inc
and
pop
cmp
mov
add
dec
das
mov
jne
mov
retw
idivb
fdivrs
mov
mov
mov
inc
inc
pop
pop
int3
mov
pusha
leave
cmp
or
ds
gs
dec
out
jno
add
fnstsw
pop
jmp
jb
jg
mov
xlat
call
inc
pop
adc
into
mov
cmp
jno
sbb
inc
out
cmp
xor
cmp
jns
test
cmc
mov
mov
rcrb
addr16
pop
jae
int3
clc
xchg
into
pop
xchg
pop
jb
pop
mov
push
dec
out
lods
sarb
daa
jp
aad
pop
mov
jl
push
xor
cmpsl
push
jle
sahf
insb
gs
xor
sti
mov
pop
mov
aaa
or
pop
fnstenv
mov
xchg
lret
gs
aad
sub
jecxz
pop
fisttpll
repz
xor
outsb
dec
inc
pop
xor
mov
pop
jp
push
mov
mov
cvtps2pi
dec
jne
cmp
decb
cmp
mov
pop
mov
fisubrs
or
sbb
pushf
adc
xchg
std
push
mov
cmp
bnd
inc
xor
jecxz
out
xor
pop
aam
test
and
inc
movsb
imul
ds
sbb
out
xor
int
test
or
mov
loope
mov
push
outsb
inc
ret
dec
cmc
popa
icebp
cltd
scas
idivl
push
adc
sub
adc
lock
add
lods
out
and
popa
fmull
adc
mov
xchg
sbb
imull
mov
movsb
mov
imul
test
mov
jne
cmp
inc
and
jle
dec
mov
test
stos
clts
nop
push
out
ret
shll
popf
lcall
repnz
in
idivl
inc
sbb
adc
pop
xor
sub
popl
xor
mov
xchg
mov
lret
ja
inc
shrl
mov
push
test
adc
jne
push
inc
int
jmp
jmp
arpl
bnd
xor
mov
jg
add
sub
lea
mov
cld
mov
add
sbb
fdivs
mov
add
add
push
mov
xor
and
push
fdivr
mov
pop
lds
xchg
in
xor
or
push
dec
add
jnp
xchg
scas
sub
and
in
inc
leave
cmp
shrl
stc
xchg
sti
icebp
mov
inc
repnz
push
inc
pop
add
cmp
pop
in
fisubl
push
dec
pop
add
lcall
add
aas
int3
cmp
cs
xor
cmpsb
jne
dec
int
outsb
lds
cwtl
movsb
mov
lea
repnz
scas
inc
fldl2t
xchg
inc
insl
inc
xchg
pop
movsl
cli
sub
push
adc
int3
mov
jns
cmp
push
lock
out
sbb
and
push
jmp
shrl
xor
mov
iret
jle
pop
adc
lods
mov
dec
jl
hlt
lods
iret
or
pop
pop
div
mov
mov
imul
push
xchg
ja
cmp
icebp
sub
xchg
loopne
cs
and
cmpsb
cmc
jge
insb
pop
pop
pop
pop
sub
test
shrb
ret
call
popf
fs
aam
xor
jns
imul
and
subb
mov
jecxz
push
lds
cmp
das
xor
or
mov
jp
stc
enter
adc
cmp
inc
imul
jo
adc
in
sti
jecxz
les
xchg
xchg
xchg
out
jmp
cmpsl
adc
fistpll
mov
scas
sbb
icebp
insb
xchg
pop
std
cli
xorl
notl
lods
pop
sbb
cld
popl
push
lret
clc
cld
pop
dec
repz
nop
mov
lods
mov
inc
mov
pushf
shrb
fdivl
push
shll
jge
xchg
mov
mov
sub
in
addr16
js
shll
mov
and
add
inc
push
js
rcr
aad
cmc
jbe
dec
mov
outsb
jl
fnsave
sbb
sub
inc
les
test
ja
cs
inc
xchg
js
divl
aas
mov
dec
cmp
mov
fmull
loopne
adcb
loopne
sub
dec
in
sub
and
sbbb
cmp
xlat
add
mov
int
jmp
lods
sti
mov
pop
das
daa
ret
call
cmpb
pop
cli
imul
pop
flds
mov
cwtl
add
push
ds
pop
addr16
fldcw
add
out
jae
add
xor
adc
jp
lds
or
cmp
ss
std
sub
mov
jg
push
sbb
mov
aad
add
stc
daa
cmc
sbb
mov
and
and
int3
test
or
push
les
ljmp
xlat
outsl
pop
jne
mov
mov
fistps
sub
or
ret
mov
adc
cwtl
mov
sub
in
pushf
mov
lret
mov
aaa
popa
add
xorl
int
lds
sub
jecxz
adc
out
ds
add
mov
fs
ret
gs
adc
mov
flds
jns
sub
lea
mov
sbb
loop
daa
sarb
inc
xor
push
mov
mov
sbb
mov
mov
inc
loope
pop
pop
les
int3
push
inc
repz
mov
cmp
daa
inc
scas
daa
xlat
testb
pop
ret
addb
sarl
jnp
fs
insl
aad
shlb
je
inc
adc
clc
outsb
insb
cmp
mov
dec
xchg
sar
xchg
xchg
or
add
loop
push
out
mov
mov
ljmp
cmp
adc
cmp
mov
push
cs
das
and
gs
js
push
inc
in
cmp
leave
out
push
or
xor
push
jp
es
ret
orb
and
lcall
hlt
out
sub
xlat
xchg
push
lock
push
subl
add
jae
mov
jae
outsl
ss
lock
ja
leave
lods
mov
not
ss
test
xor
cmc
lods
adc
lcall
lahf
pop
or
push
jle
movsl
aaa
push
iret
nop
mov
push
rcrb
ljmp
adc
jae
xor
mul
xchg
das
add
xchg
arpl
cmpsb
xchg
out
rolb
repnz
repnz
mov
cmpsb
out
and
fdiv
div
insb
imul
lds
add
jl
mov
inc
jo
outsl
int3
les
int3
add
add
icebp
pop
aad
adc
xchg
lret
hlt
fists
add
jne
jne
xlat
ljmp
jmp
push
and
sub
cld
repz
pop
pop
jbe
test
sbb
mov
add
call
xor
mov
add
dec
popf
jns
mov
ss
loopne,pt
int
jno
je
div
pop
push
cmpsb
jns
xchg
xlat
pop
dec
and
enter
pop
in
mov
pop
pop
pop
es
mov
push
push
bound
loopne
imul
sub
test
enter
test
scas
and
inc
jge
add
icebp
mov
stos
aas
pop
mov
insl
xor
cmp
sub
lcall
fsubp
test
int
lods
lahf
dec
cmp
and
and
pop
push
pop
cwtl
lcall
loop
mov
iret
pushf
sub
lcall
loope
xchg
insl
in
pop
xlat
pop
bound
clc
mov
add
xor
call
xchg
add
push
add
xchg
sarl
and
jg
arpl
inc
xchg
movsb
inc
jp
inc
adc
sub
mov
mov
ljmp
fmull
add
into
aam
sbb
lahf
fadds
loopne
inc
push
inc
icebp
cmpsb
loopne
xchg
or
adc
test
jb
addr16
sbb
cmpsl
shl
je
into
and
adc
pop
push
mov
xchg
pop
push
in
in
add
fisubrs
xor
add
adc
and
loopne
test
call
pop
punpcklbw
mov
loop
and
aam
sbbb
mov
or
scas
pusha
ss
add
loop
aad
roll
hlt
cmp
out
xor
cmp
idivl
adc
into
add
dec
pop
sub
mov
leave
repz
push
jge
in
sbb
out
sbb
cli
mov
clc
inc
push
imul
aas
hlt
adc
fwait
cltd
mov
test
movsl
pop
subb
out
lds
popa
cld
jb
psllw
sbb
rolb
enter
in
jbe
xchg
pushf
inc
mov
mov
mov
or
jno
pop
mov
mov
inc
jge
jns
lock
sbb
adc
in
mov
sbb
sarl
push
adc
dec
jmp
call
daa
stos
iret
mov
aas
clc
lret
sub
movsb
xor
fsubs
mov
gs
movl
xchg
and
and
cmp
mov
push
push
adc
pop
leave
je
jle
sub
out
scas
clc
sqrtps
xor
fnstsw
mov
jae
xchg
sub
mov
cmc
push
lea
pop
movsb
pop
shrb
mov
loope
xchg
xchg
inc
or
inc
adc
mov
fucomi
sarb
cmpsb
and
jns
push
data16
ja
nop
stc
pop
loop
inc
out
adc
push
mov
mov
sbbl
adc
outsl
jno
xchg
lret
xor
adcl
dec
ja
mov
in
sbb
pop
imul
popa
movsl
mov
or
push
shrl
mov
test
ffree
mov
push
or
inc
insl
push
jp
xor
push
cmp
rorb
ljmp
cwtl
sti
cmp
cld
xor
les
pop
or
dec
clc
pop
loopne
jno
mov
popf
dec
push
push
sub
hlt
cmc
cmp
inc
lret
add
pop
out
xchg
out
sbb
scas
ret
xor
xchg
shrb
ror
scas
leave
xchg
fldenv
inc
stos
and
daa
xor
push
pushf
lods
mov
jge
push
fwait
lods
pop
movsl
daa
adcl
sbb
inc
test
lds
call
data16
cmc
test
mov
mov
clc
popa
lds
out
pop
sub
movsb
inc
repnz
sbb
mov
xchg
mov
jecxz
pop
js
lods
mov
sbb
outsb
cmpsb
push
lret
sub
jecxz
pop
leave
pop
out
cmp
dec
mov
stc
mov
bound
pop
inc
and
cmpsb
pop
fbld
xchg
decl
push
pop
sahf
fsubrl
dec
mov
jne
mov
aad
int3
and
xor
inc
jo
cld
sbb
push
adc
lea
out
push
mov
loope
repz
cmpsb
jo
mov
aad
fistl
adc
xor
enter
cmp
inc
ror
mov
mov
xchg
lahf
fisttps
ficoml
dec
xor
dec
arpl
cltd
sub
cmp
roll
fimull
lret
aad
fwait
sahf
sahf
and
add
mov
mov
in
jo
and
clc
push
xchg
test
mov
ljmp
mov
add
jbe
out
shl
pop
arpl
imul
xchg
pushl
pop
fidivrs
imul
push
in
cmc
pop
pop
mov
fcomip
push
imul
je
xchg
mov
mov
negl
push
dec
cmp
daa
jb
jb
xchg
out
cmp
loope
jmp
push
sbb
push
test
mov
sbbl
iret
loope
insl
les
rol
es
sahf
add
mov
jbe
ja
iret
pop
cltd
test
or
scas
scas
fisttps
inc
loop
in
dec
int
sub
cltd
or
push
and
xchg
or
mov
lock
jp
or
mov
push
gs
addl
adc
pop
xchg
pop
xchg
in
mov
or
fisubs
je
andnps
pushf
outsl
cmp
icebp
ja
fcompl
insb
mov
adc
dec
mov
xor
sarb
movsb
cmpl
jae
push
sbb
and
jmp
fsubl
lret
shll
fistpl
dec
fs
mov
push
or
sbb
rorl
inc
pop
mov
aad
push
mov
add
insb
mov
insl
rcrb
pop
ljmp
les
pop
and
in
cmpsb
push
imul
pushf
push
cmp
adc
aaa
xchg
lret
out
xchg
gs
rcrl
mov
jle
out
pop
adc
sub
pop
mov
mov
lock
xlat
xchg
cmpl
outsl
jl
add
adc
push
pop
sub
push
loope
add
mov
mov
jmp
push
sub
insl
cli
lea
and
pop
add
xchg
mov
push
andb
pop
psrad
outsb
lods
icebp
movb
std
mov
mov
loope
daa
adc
sub
mov
lock
xchg
xor
xchg
cmp
push
adc
mull
sbb
dec
and
lcall
test
and
loopne
faddl
in
add
push
pop
adc
shll
mov
mov
seto
pop
int3
cli
in
clc
stc
jo
icebp
insb
xchg
popf
daa
fs
xorl
pop
fwait
xor
inc
mov
mov
mov
insl
xchg
loope
fsubl
push
ss
dec
int
dec
decb
or
and
les
ss
jle
dec
stos
mov
int
xchg
call
stos
inc
adc
cmpsl
sar
leave
popa
fwait
mov
or
sub
push
mov
psubsw
jl
nop
push
jle
push
inc
dec
xchg
insl
jns
mov
mov
imul
cld
and
cmc
mov
lahf
jne
pop
imul
rcl
xchg
in
mov
sbb
mov
mov
je
cmp
xor
mov
aaa
dec
enter
cmc
xchg
repz
std
xchg
jne
inc
inc
mov
rcll
inc
xor
adc
loopne
inc
jmp
imul
mov
push
pop
cmp
lods
lret
cmp
dec
pusha
sub
stos
or
adc
mov
dec
and
jg
enter
jnp
xchg
adc
aam
pop
and
jnp
scas
add
popf
inc
shrl
mov
mov
push
dec
icebp
inc
repz
and
add
and
ljmp
shrl
or
cmc
pop
nop
add
call
push
divb
jne
pop
and
sub
subl
mov
jbe
loop
xchg
push
out
rcrl
mov
clc
rclb
cmp
add
les
dec
xor
shrl
stos
mov
pop
rclb
jg
dec
insb
popf
mov
push
sbb
mov
push
into
cmp
mov
in
stos
lret
xchg
sti
mov
js
jne
pop
jnp
in
test
mov
lret
cmpb
cmpsl
sbb
mov
adc
push
mov
inc
cmpsl
scas
sub
loopne
cld
jl
popa
mulb
repz
and
inc
jle
and
inc
and
xor
push
pop
cmp
push
popa
lock
enter
xchg
mov
pop
or
mov
neg
xchg
xchg
mov
outsl
dec
inc
pop
pmulhuw
sbb
imul
mov
xchg
ret
negl
sub
mov
mov
or
mov
scas
or
cmp
or
loope
in
clc
xor
aad
jge
inc
sbb
insl
xchg
jge
and
leave
jb
ljmp
es
mov
in
inc
cmpsb
cmova
mov
dec
pop
jne
mov
or
aaa
sub
mov
xlat
inc
andl
pop
lcall
sub
into
mov
sub
flds
dec
stc
mov
lea
sub
mov
insl
mov
dec
pop
jno
fcompl
movsb
popa
mov
mov
arpl
scas
and
popa
popf
ds
pop
int3
jle
xor
add
jecxz
sub
and
pop
in
rol
insl
add
fists
sub
hlt
dec
mov
out
adcb
pop
fsubl
ret
push
mov
stos
cmp
shlb
scas
es
mov
xor
loopne
data16
xchg
mov
adc
ret
aad
push
cmp
js
insb
hlt
cmp
or
cmp
std
xlat
mov
adc
xor
int
aam
or
rolb
test
xchg
ret
pop
mov
adc
aaa
lcall
in
inc
pop
inc
or
mov
mov
cmp
lcall
mov
dec
lcall
mov
mov
pop
cmp
inc
lret
out
jecxz
adc
pop
fs
outsb
clc
clc
sbb
stos
xor
mov
push
in
imul
ficompl
push
popa
in
bound
cltd
xor
mov
sarb
mov
push
sbb
lods
sarl
or
push
or
in
scas
cmp
dec
cwtl
mov
mov
fs
std
in
hlt
sub
mov
fisttpll
lock
pop
aaa
mov
cld
lods
int3
jnp
and
cmpsl
pmulhuw
aad
sub
jle
imul
arpl
xchg
repz
xchg
out
adc
xor
xor
adc
mov
stos
dec
inc
ljmp
popa
sbb
imul
idivb
mov
fsin
or
inc
aad
mov
mov
outsl
fiadds
push
lret
xlat
sbb
cmp
stc
or
fld
out
loope
jo
ret
xor
mov
xorl
mov
add
mov
and
fsubs
in
hlt
rcrl
xor
hlt
popa
mov
orb
hlt
xchg
mov
push
ret
mov
outsb
cmp
mov
xor
jge
cli
es
jp
cmp
jb
xor
inc
sub
push
mov
adc
lock
in
add
sub
xchg
pop
cli
xchg
dec
pop
and
mov
cmp
mov
fstps
pop
stc
inc
pop
and
push
lods
fldt
push
rcr
sub
mov
push
pop
cld
fwait
jecxz
sarb
push
add
push
imul
stos
ds
outsb
xor
adc
in
mov
out
xchg
sub
lret
and
das
insb
inc
rolb
fwait
mov
sarl
pop
popf
mov
scas
fwait
div
mov
pop
rorb
jmp
dec
mov
sbb
pop
mov
out
or
dec
push
lret
dec
and
fdiv
nop
bound
shll
leave
push
repz
clc
pop
dec
int
fiaddl
mov
jp
xchg
mov
sbb
pushl
fistpl
ljmp
rcrb
ljmp
jbe
jmp
in
push
push
and
pop
mov
mov
icebp
cmp
mov
and
xchg
in
push
mov
lock
pusha
in
or
inc
dec
push
dec
pop
dec
push
roll
popw
enter
or
inc
or
out
push
fwait
imull
ja
cmpsl
or
loope
rcr
out
inc
xor
inc
loopne
cmpsb
out
pop
cmp
xchg
sti
mov
addl
jae
mov
arpl
mov
or
add
rol
shl
fucomip
movsl
fcompp
xchg
fistpl
fldcw
nop
js
sbb
sbb
icebp
xor
cmpsb
lock
add
js
mov
adc
nop
jbe
pop
xchg
cmp
mov
shl
inc
xor
lea
mov
pop
aas
mov
add
aam
jne
mov
push
repnz
adc
sbbb
mov
jmp
xchg
fwait
jnp
mov
lret
insb
xchg
pop
stos
push
inc
int3
add
test
out
xor
lods
sub
out
mov
push
stos
enter
cmp
insl
sub
dec
insl
xchg
bound
pop
mov
test
jmp
lock
sbb
pop
mov
xor
sbb
in
pop
or
inc
mov
shr
lds
mov
xor
jl
sub
push
xchg
push
scas
pushf
sarl
cltd
loope
xchg
fildl
int
cltd
pop
inc
lcall
sub
fwait
int3
or
adc
adc
rcll
das
outsl
jl
or
insb
cli
rolb
outsb
sub
js
scas
movsl
push
ja
insb
pop
lret
test
inc
jns
dec
inc
mov
pop
push
adc
xor
mov
cmp
je
sbb
jmp
jp
cmp
mov
push
inc
mov
cmp
jecxz
mov
repz
test
aaa
xorb
cltd
aas
fstps
mov
sub
repnz
lret
xchg
push
sbb
int3
mov
sub
mov
and
xor
std
cld
js
adc
cmp
or
cmc
push
testl
lret
pusha
inc
dec
mov
aas
dec
enter
pusha
enter
xlat
cli
pop
cs
call
add
inc
out
shll
jb
mov
cwtl
or
ds
xchg
push
test
shlb
xchg
cmc
dec
test
mov
hlt
lods
test
insb
xchg
ret
ret
iret
fmull
sbbl
sahf
das
jecxz
mov
pop
adc
add
mov
cmpb
sbb
icebp
aam
cld
pop
rorl
jg
fistpll
jne
mov
jae
push
pop
push
xchg
sarl
movsb
loop
mov
pop
adc
dec
scas
dec
sbb
dec
sub
fucomip
in
inc
lret
pop
jp
mov
cwtl
and
mov
negb
xor
cs
xor
pop
js
mov
loop
pushf
and
dec
add
add
cmpsb
gs
orl
adc
fbstp
add
xorl
mov
adc
test
popf
int
cli
call
xchg
aas
decb
mov
shld
xor
cmp
lock
pop
push
lret
mov
sbb
cli
das
loope
sti
push
mov
cli
sbb
jo
dec
jle
test
jae
dec
push
addl
xor
and
fists
add
or
rcll
and
stc
add
jle
loopne
sbbl
add
xor
in
std
or
push
sarl
pop
jbe
int
cmp
xchg
mov
stos
fstpt
cmp
or
dec
clc
es
jge
addr16
enter
shlb
cmp
xchg
push
add
or
fldl
mov
into
pop
mov
adc
jbe
xor
lods
add
mov
add
stos
jbe
and
push
or
push
jnp
rcl
mov
sub
and
push
mov
lret
mull
dec
push
dec
enter
or
or
enter
push
movsb
inc
jns
xchg
lock
sahf
test
rcrb
pop
addl
hlt
shlb
cld
loop
lret
shll
out
push
sbb
sub
shlb
adc
cmp
cmp
ja
addr16
lret
andb
rclb
nop
sub
js
adc
or
dec
test
lret
cs
das
aad
cwtl
push
adc
or
push
or
repz
cmp
jg
xchg
mov
aad
repz
mov
xor
xor
and
jo
pop
mov
out
std
aam
push
inc
xor
aam
push
xor
into
out
push
ficompl
adc
sarl
dec
pop
mov
out
lcall
xor
movsl
lds
xchg
int
cmp
andl
dec
test
arpl
outsb
dec
dec
fldl
inc
add
sbb
pop
inc
push
and
es
jnp
jmp
sbbb
and
mov
clc
sub
test
sti
inc
inc
or
pushf
inc
jl
sub
inc
rolb
cmp
fwait
insl
aad
inc
lods
stos
pop
adc
inc
pop
inc
cmpsl
add
iret
mov
pop
xchg
adc
daa
loopne
outsl
cmp
inc
or
mov
pop
jge
inc
fst
fs
pop
add
cmp
add
movl
mov
adc
clc
outsb
inc
push
out
lods
es
pop
mov
loopne
sub
push
mov
jo
sti
pusha
out
or
jg
jle
shll
dec
or
adc
rclb
push
mov
xchg
aad
hlt
sbb
subb
cmp
pop
pop
and
std
pop
aad
andb
push
and
ret
call
in
bound
push
push
mov
lret
in
movsl
sub
sub
es
and
rorl
pop
xchg
je
or
dec
movsl
pop
js
cmpsb
mov
xor
or
dec
imul
in
lea
int3
jmp
add
imull
sub
sbb
je
fadd
add
pop
pop
sar
out
sub
into
pop
lock
hlt
xor
xchg
xchg
mov
mov
mov
mov
xorb
jne
adc
and
filds
jae
stc
int
inc
enter
call
and
cmp
aad
xchg
or
cmp
fsub
adc
dec
movsl
xchg
insl
mov
mov
mov
fstps
cmp
loopne
sub
sqrtps
xchg
pop
and
xor
jg
es
enter
adc
out
mov
cli
call
out
das
pop
add
pop
mov
shll
jp
dec
mov
add
inc
cmp
rorb
jmp
inc
sahf
sarl
mov
push
imull
ret
stos
xor
adc
mov
sti
mov
jg
or
outsb
xchg
inc
lret
xchg
adc
xlat
in
ret
out
mov
mov
mov
adc
dec
xlat
shlb
mov
or
les
lahf
add
sbb
repnz
xor
xor
imul
xchg
push
mull
into
enter
in
cs
mov
jl
cld
push
ljmp
cmp
or
and
pop
add
ret
add
xchg
dec
dec
shll
inc
sbb
dec
jae
lea
sahf
jecxz
push
lds
and
xor
scas
cs
xor
xchg
fstl
lock
adc
nop
pop
push
fisttps
mov
lret
in
std
cwtl
inc
push
xchg
mov
imulb
xchg
imul
sbb
shlb
inc
push
out
aas
pop
sahf
adc
in
outsl
mov
xor
adc
fildl
pushf
mov
and
out
stc
pop
js
or
cmp
mov
pop
push
sub
jle
sub
repz
cmpl
pop
rcr
mov
xchg
inc
mov
pop
mov
jg
in
jns
and
insl
pop
test
gs
lock
mov
mov
pushf
push
lods
pop
pop
cmpsb
sub
data16
mov
test
adc
mov
mov
and
movsb
sbb
fwait
ljmp
out
mov
push
int
aad
std
enter
or
in
mov
adc
mov
subb
sbb
pop
jge
mov
or
adcb
cli
pop
mov
adc
sbb
fidivrs
mov
aad
mov
inc
arpl
or
mov
loope
lcall
jo
clc
push
enter
ret
push
mov
lahf
xchg
mov
outsb
popa
push
fadd
xchg
jp
push
or
sub
inc
sub
lahf
and
imul
sbb
out
ret
mov
cmpsb
push
cmpsl
fiaddl
mov
dec
mov
xchg
and
testb
inc
mov
bound
pop
imul
loopne
inc
pop
mov
dec
jbe
movsl
ds
cmp
xchg
fwait
out
dec
incl
push
sub
cs
mov
leave
sbb
inc
es
enter
jo
and
adc
leave
cmp
xor
jg
dec
inc
jne
into
cmp
sar
push
in
in
std
lcall
cmp
or
arpl
stos
aam
shlb
xchg
repnz
dec
mov
xor
ret
popf
lea
cld
mov
mov
rcll
or
cmc
mov
out
sarl
lret
ss
lods
dec
enter
test
call
lock
mov
jecxz
rorl
push
cwtl
pop
fadd
iret
bound
in
push
outsb
push
or
jmp
cmp
sub
rcll
dec
mov
inc
sbb
or
imul
les
shlb
mov
adc
cmpsb
mov
cmp
out
shrb
loope
mov
push
jmp
pop
ret
mov
int
fcoml
jb
das
jge
clc
add
jge
out
es
xchg
loope
int3
aaa
xchg
lods
mov
cmp
adcl
in
jb
cli
movsb
test
stos
scas
or
xor
je
cmp
fcomps
hlt
jne
push
lret
or
mov
sbb
xor
sub
ds
arpl
inc
pop
sbb
xchg
sarb
mov
imul
mov
sbb
cmpxchg
lcall
in
xchg
hlt
pop
sub
icebp
jo
dec
stc
negb
repnz
cmc
lods
xchg
pusha
add
xlat
mov
ljmp
jecxz
dec
mov
cmp
test
pushf
test
psadbw
insl
sarb
sub
lcall
and
aaa
and
or
mov
sub
test
sub
data16
cmpsb
outsl
or
dec
test
mov
ds
data16
push
imulb
xorl
popf
jp
push
adc
es
ss
stc
fstp
out
sub
jne
rcrb
inc
push
mov
pop
jno
rorb
insb
sbb
cmp
daa
std
ds
pop
sub
je
int
dec
std
push
xchg
inc
out
lods
xor
mov
sub
jge
int3
mov
jne
and
cmc
fsubs
inc
pop
mov
int3
push
inc
jb
jmp
jmp
pop
adc
pop
jp
push
loop
jl
les
ja
cli
lahf
cli
xchg
mov
jnp
cs
sub
call
lret
shlb
popf
jns
loop
pusha
push
cmpsb
mov
scas
clc
dec
icebp
ret
jl
cmpsl
push
jb
xchg
aaa
dec
jle
mov
xchg
xor
xor
cwtl
jl
daa
jns
adc
int
test
shlb
dec
push
or
out
jne
rclb
shll
les
mov
fxch
jo
xor
cli
jne
in
mov
mov
popa
scas
adc
mov
jns
dec
sub
dec
fwait
mov
mov
imul
popf
pop
add
mov
mov
sarb
lds
pop
outsl
ljmp
inc
cmp
jbe
shrl
psadbw
enter
and
call
jnp
sarl
loop
lcall
neg
rcll
adc
jbe
or
lods
adc
add
mov
cltd
cmc
divl
test
lds
fstl
outsb
cli
mov
aas
int
je
add
push
in
jo
jne
lcall
mov
inc
test
push
inc
xor
cmp
inc
jbe
mov
adc
push
jle
test
jb
jge
outsl
xchg
cmp
dec
mov
xchg
or
clc
mov
sbb
push
insb
xor
xchg
repnz
and
or
mov
int3
push
xor
dec
and
jne
call
pusha
add
imul
in
out
jl
jbe
pushf
cmp
outsb
addr16
sarl
sub
cmp
mov
out
sbb
pop
insl
jno
add
lock
cwtl
cmp
pop
and
or
incb
xchg
adc
xor
lahf
scas
jno
jle
aaa
js
jecxz
test
sub
lcall
and
fcomps
xchg
fadds
inc
xchg
scas
bound
repz
lret
call
imul
add
icebp
lcall
fidivrl
stos
lea
push
or
lea
xlat
sbb
loopne
mov
mov
cli
lods
cli
inc
mov
push
push
insl
mov
adc
cmp
dec
int
test
xor
out
mov
and
movsb
mull
push
sub
insl
pop
add
and
mov
leave
cmpl
enter
pop
jmp
or
jecxz
jb
push
rorl
addr16
ljmp
sbb
mov
add
jbe
mov
lahf
fmuls
int
pop
jl
pop
adc
call
pop
lcall
ja
out
xchg
stos
fcmovbe
test
xor
mov
add
outsl
test
scas
or
pop
roll
popf
mov
pop
jle
pop
xchg
cmp
aas
sub
inc
xchg
repnz
dec
dec
jne
sbb
leave
sti
sbb
aad
frstor
or
mov
shrb
xor
cwtl
pop
jb
ret
push
cmp
add
and
outsl
in
mov
pushf
cmp
inc
iret
add
repnz
mov
sahf
adc
movsl
pushf
cwtl
lock
cs
mov
std
ja
cltd
outsl
cmpsb
stos
mov
add
adc
sahf
call
fucomip
dec
jge
jnp
xlat
data16
shlb
daa
lcall
sbb
dec
mov
mov
mov
sub
out
and
dec
insl
or
sahf
fmull
push
xchg
aaa
or
pop
ds
in
dec
imul
lcall
lea
pop
mov
loopne
arpl
adcb
mov
jl
push
out
push
enter
test
cmp
pop
pop
and
jne
les
aas
test
fisttps
inc
loope
ja
dec
adc
out
adc
and
adcb
push
cmpb
ds
pop
mov
popa
imul
outsb
lods
test
push
in
xor
repz
fiadds
outsl
xchg
xchg
andl
push
xchg
lock
dec
xchg
mov
sub
pushf
add
or
aad
repz
dec
pop
lds
xchg
loope
rcrl
fwait
xchg
sbb
push
cmpsb
into
sbb
iret
je
pop
jmp
xchg
mov
fcmovu
cmp
aam
pop
int
or
cmp
mov
scas
in
ret
jp,pn
mov
dec
and
inc
fimuls
pop
dec
sub
or
rol
out
xor
test
mov
cmpl
mov
cmp
stc
ficomps
das
in
insl
decb
loopne
add
fcompl
in
enter
xchg
and
xchg
int3
js,pn
outsl
dec
jae
mov
das
mov
je
dec
jbe
imul
and
enter
pop
pushf
dec
mov
mov
inc
mov
std
xchg
mov
aas
pop
lcall
stc
lahf
mov
and
in
fistpl
pop
sub
pop
adc
inc
mov
out
fstl
clc
movsl
add
add
insb
xor
cmp
adc
or
xchg
mov
rcrb
lret
inc
fwait
not
aas
xor
iret
and
insb
aas
inc
nop
inc
push
push
push
jns
lea
push
jg
movb
inc
lods
nop
mov
and
mov
cmpsb
adc
ficompl
shll
xchg
adc
mov
test
stos
jmp
lds
sti
inc
push
pop
popf
jg
nop
lcall
sarl
cli
mov
cmpsb
mov
ss
test
or
push
stos
pop
fstpl
aad
dec
adc
gs
flds
mov
jno
mov
and
xor
or
sub
xor
cmp
jp
arpl
or
push
pop
dec
mov
lret
ds
into
lock
fs
filds
sub
rcrl
fsubr
xlat
dec
sbb
pop
mov
cmpsl
jl
pop
xor
test
add
ljmp
cltd
push
out
jmp
jae
hlt
dec
sti
cltd
rclb
push
ljmp
nop
sub
mov
pushf
xchg
mov
movsl
add
fnstsw
adc
test
pop
and
les
sbbl
cmpsl
imul
jno
enter
data16
mov
pop
pop
cwtl
addr16
int3
repnz
xchg
or
loop
data16
pop
dec
popa
add
out
pop
je
add
outsb
lods
fs
pop
pop
fidivrs
cwtl
call
or
int3
jne
pop
or
jle
or
lret
jg
push
outsb
mov
or
mov
add
lahf
int
loope
add
fstl
cmpsl
fiaddl
jp
stos
scas
out
gs
mov
jp
xor
or
jg
test
lret
xchg
jns
fdivrp
loop
and
pushf
fistpll
lret
pop
push
es
fnstsw
xchg
movsb
dec
mov
dec
fnstsw
mov
xor
pusha
in
popa
adc
pop
dec
dec
repz
sahf
adc
fimuls
cld
dec
mov
aad
adc
mov
or
inc
loopne
lods
arpl
sub
jnp
sarl
outsl
cmp
test
mov
mov
cld
push
pusha
loope
js
push
mov
sbb
or
jne
xor
mov
mov
mov
sti
lcall
xchg
push
mov
clc
push
repnz
sub
jb
cmp
imul
and
add
lret
push
mov
xchg
rcrb
add
ss
cwtl
xchg
sbb
sbb
and
jns
xchg
enter
cmpsb
inc
dec
adc
xor
rsqrtps
push
xor
scas
sbb
mov
xor
inc
out
lock
or
cmp
jns
lods
fidivl
sbb
testb
jecxz
lock
icebp
mov
dec
xlat
xchg
jmp
pop
push
cmp
cwtl
pop
push
or
cmp
les
mov
lds
addr16
xlat
mov
push
jne
inc
lea
or
push
lcall
out
aad
repz
lcall
and
mov
cmpsb
mov
push
and
cld
adc
imul
cmc
fisttpll
mov
mov
mov
dec
inc
dec
mov
cmp
inc
je
fdiv
push
in
mov
mul
aam
xor
jg
in
mov
push
add
push
and
inc
xchg
in
jnp
loope
icebp
dec
inc
pop
aam
mov
loopne
sub
insb
dec
sti
pop
sub
and
addr16
loop
cmp
xor
inc
add
stc
sbb
inc
jmp
mov
pop
jns
cmc
fstp
popa
sub
movsb
and
test
out
adc
inc
hlt
loop
sub
mov
add
out
and
lods
cli
icebp
xor
in
movsb
push
push
dec
sti
jns
cmp
cs
aaa
fists
add
cmp
pop
or
mov
cmc
fnsave
neg
add
dec
mov
xchg
jno
inc
or
xchg
arpl
xchg
ss
ljmp
xchg
mov
ret
sbb
inc
inc
nop
fs
pop
mov
rorb
in
out
mov
mov
enter
inc
outsl
add
enter
push
outsl
shll
cld
fnstsw
mov
js
add
sbb
arpl
push
insl
jge
test
xchg
add
test
xchg
loop
sub
xchg
push
inc
mov
stos
sbb
out
dec
aam
cmp
addr16
and
loopne
es
sbb
shll
insl
insl
add
mov
or
dec
repz
dec
push
xor
xchg
insl
jae
lret
or
nop
ret
aas
in
xchg
or
stos
out
xor
repnz
adc
inc
insl
or
sbb
jmp
sbb
mov
jmp
mov
adc
jg
dec
pop
hlt
sbb
sbb
cmp
lret
and
mov
mov
into
popf
test
mov
push
stos
imul
rcrl
popf
xchg
xor
fldcw
data16
pusha
mov
adc
mov
xchg
dec
mov
int
push
mov
push
mov
int3
aaa
gs
mulb
jnp
test
add
in
jecxz
adc
xchg
jb
cmp
and
xchg
aad
cld
lea
mov
adc
push
cwtd
fldt
pop
jp
addr16
leave
lahf
cmp
mov
hlt
add
xor
xor
fisubrs
sub
add
pusha
add
je
add
int
xchg
xor
xchg
mov
push
out
mov
call
aaa
dec
jae
rcrl
sbb
stc
mov
arpl
in
push
cmp
push
stos
repz
sbb
stos
sbb
imul
and
imul
movsb
ffree
lret
adc
stos
mov
add
or
enter
popf
adc
add
mov
jmp
add
xor
cmp
mov
pop
cmp
lods
xor
sub
in
test
xchg
enter
dec
shlb
dec
and
les
inc
lahf
jle
test
add
rcl
lea
cli
ret
mov
out
xor
pop
lods
hlt
adc
shll
scas
fcmovnu
lcall
pop
cltd
incl
jle
div
jge
lods
nop
push
js
cmp
xchg
out
int
insl
or
in
aam
cmp
or
xor
jle
out
repnz
jp
and
enter
sbb
mov
and
mov
lods
inc
adc
out
pop
fprem
jle,pt
repz
xor
mov
push
pop
fucomp
nop
pop
push
test
cli
repnz
or
or
inc
mov
mov
jg
loopne
push
mov
dec
and
push
jae
insl
test
cmc
mov
push
dec
pop
fwait
scas
lcall
jle
mov
cmpsb
mov
jl
bound
xchg
push
pop
sub
dec
fisubrs
mov
inc
push
sti
jne
xor
data16
and
adc
xchg
jl
xor
mov
loopne
push
mov
jns
insl
outsb
je
mov
addl
jp
mov
xor
sub
ret
push
lods
pop
sub
mov
xor
ret
test
and
mov
push
jmp
jae
cmpsl
lods
add
cmp
sub
cmp
inc
xchg
out
sub
idivb
pop
je
lods
std
fs
in
sub
popf
hlt
dec
stc
nop
add
cmpsb
enter
pop
pushf
adc
pushf
mov
jb
in
cltd
adc
mov
adc
jecxz
add
and
xchg
loop
lods
jge
xor
dec
xchg
les
mov
push
shll
arpl
xchg
cltd
pop
js
in
adc
stos
imul
pop
push
push
or
in
jb
pop
fistpll
xchg
hlt
cld
cmp
push
mov
fcomi
les
jl
push
into
cmp
adc
ljmp
mov
and
aam
aad
ret
icebp
cli
mov
rorl
bndstx
mov
jns
sbbb
adc
je
push
mov
push
dec
inc
dec
xor
inc
cmove
push
cmp
jb
cld
jmp
jmp
push
mov
movsb
lahf
push
addr16
jo
ds
add
insb
cld
or
roll
inc
fs
movsl
cmc
sub
outsl
inc
sbb
or
out
jecxz
pop
sbb
cwtl
lret
lock
jbe
xchg
inc
sbb
dec
dec
imul
and
les
fwait
mov
out
stc
sub
push
rcrb
push
cmp
icebp
test
push
mov
push
push
jp
push
sub
dec
fwait
testl
and
cmpsb
lea
js
pop
test
inc
movsb
out
push
out
fimuls
push
adc
jb
mov
sbb
sbb
or
xchg
dec
ss
in
mov
and
cmp
or
sub
adc
cld
in
push
lea
mull
cmp
cmp
lea
cmc
ror
in
mov
nop
add
push
push
jl
adc
cs
xor
pinsrw
rcrb
leave
cmpsb
in
shr
sub
push
add
in
stc
push
aad
jp
cmp
pusha
inc
xchg
mov
imull
pop
sub
mov
push
movsb
inc
out
xchg
stc
sub
add
es
mov
push
sbb
cwtl
stos
stos
sbb
add
cmp
xchg
out
rolb
rclb
cmp
mov
lcall
xlat
aaa
push
jns
scas
outsb
xor
xchg
out
dec
push
inc
into
adc
bound
push
enter
insb
cmp
std
leave
mov
push
inc
ss
adc
push
imul
ror
les
dec
and
ds
icebp
cmp
cmp
push
aaa
sub
or
in
outsl
adc
ja
int3
iret
pop
adc
jecxz
test
fs
leave
pop
sbb
jb
mov
in
aaa
movsl
call
movsl
jecxz
jecxz
addr16
cs
cmp
jb
xor
mov
int
pop
aas
mov
add
push
test
inc
sar
mov
jmp
jp
sbb
and
pop
mulps
and
dec
and
cmc
jb
loopne
jb
es
iret
popa
push
pop
cmp
mov
ret
push
outsb
hlt
push
rorl
mov
sub
ret
sub
xor
lea
and
or
repnz
xchg
cs
pop
and
push
fdivrl
add
mov
inc
fistpl
push
jo
inc
hlt
cmp
jbe
int
in
cmc
add
data16
xor
dec
mov
in
xor
cmp
adc
lret
mov
movsl
mov
push
repnz
push
xchg
sbb
or
lea
jmp
mov
adc
fnsave
or
fstl
jmp
xchg
gs
bnd
pop
scas
xchg
lock
push
pop
fnstsw
push
inc
cmc
pop
dec
jae
rolb
or
inc
xor
lret
sub
or
in
je
sbbb
mov
xlat
scas
je
stc
mov
mov
xor
cmp
lds
lea
ljmp
xor
jmp
int3
cmp
cli
jbe
loope
nop
xchg
out
sub
inc
jmp
xchg
cmc
push
clc
inc
repnz
imul
cmpsl
xor
add
xor
es
gs
int3
add
sub
popa
cltd
pop
outsl
popa
sahf
mov
into
jge
push
inc
test
sahf
repz
adc
ret
pop
mov
xor
cmpsl
es
lods
aam
or
popa
popa
leave
cmp
jle
jp
out
into
cmpsb
push
sub
or
pop
and
les
jns
and
stos
sbb
jbe
push
imul
pusha
inc
mov
push
call
mov
stos
inc
or
cmp
cmp
push
mov
push
xchg
jg
fdivrs
xchg
push
inc
cli
xchg
mov
mov
sti
xor
jle
dec
fiadds
jle
jo
pop
mov
jo
sub
ljmp
mov
mov
out
movb
in
pop
adc
push
jge
xchg
sahf
jmp
fmuls
sti
jl
adc
xlat
cwtl
mov
popl
in
fdivl
daa
leave
cli
lock
cld
ret
cmp
fisttps
sub
stos
fldcw
es
cwtl
add
jecxz
lods
popf
iret
bswap
fistl
push
xor
inc
call
cmpsb
lret
jno
stc
sbb
bswap
mov
sub
sub
call
cmc
and
std
sub
push
adc
mov
push
into
icebp
scas
repz
lods
push
dec
ljmp
sbb
mov
xchg
cmp
mov
ja
enter
adc
jge
sub
test
daa
pop
jb
add
add
int3
cmc
cmc
push
and
outsb
inc
insl
pushf
mov
inc
inc
decb
test
sahf
fsqrt
mov
test
xchg
add
sbb
fs
dec
and
cmp
lret
adc
aas
adc
pop
adc
outsl
sub
es
lcall
jne
jns
clc
mov
and
in
xchg
in
out
mov
or
add
arpl
nop
out
sub
jl
or
sbb
icebp
adc
sub
js
cwtl
jecxz
icebp
mov
out
push
movsb
subl
mov
xchg
popf
icebp
rcl
dec
aas
add
insl
repnz
popa
pushf
daa
and
cmpsb
add
nop
lods
iret
xchg
notb
and
pop
mov
add
xor
mov
shl
jp
test
inc
mov
mov
cmp
popa
adc
pop
sbb
pop
mov
jb
pusha
insl
ja
add
mov
hlt
dec
cmc
fbstp
out
adc
fnclex
adc
loop
mov
cli
sbb
hlt
jg
and
and
add
jmp
in
inc
dec
out
sahf
add
fcmovne
xchg
and
lods
sbb
repz
gs
das
or
cld
sbb
mov
and
stos
loop
loopne
push
test
fistps
lret
loopne
outsb
mov
stos
lods
rcll
test
repnz
adc
loop
test
rcrl
inc
icebp
mov
mov
jbe
popf
push
dec
bound
orl
jno
std
sahf
cwtl
cwtl
bound
scas
fisubs
int3
imul
cmpsl
out
shl
or
sbb
jae
movsb
imul
jl
imul
xchg
mov
sbb
outsl
cmpsl
jb
sub
cmp
sub
sbb
mov
and
loope,pn
test
add
pop
loopne
mov
mov
mov
loopne
aam
pop
sub
aad
or
les
shll
mov
mov
adc
rclb
dec
xchg
bnd
inc
cmp
adc
mov
dec
es
lret
rcll
jb
pop
roll
jl
aam
hlt
sarb
xchg
ds
mov
xchg
jns
jo
andl
and
lea
lods
mov
and
repnz
xchg
pop
xchg
cmp
jmp
pusha
rcrb
inc
push
insb
addr16
lret
dec
sti
push
pop
enter
push
jmp
mov
mov
xor
aas
addl
imul
cld
daa
aam
call
xor
mov
out
mov
add
rol
xor
mov
mov
mov
inc
or
push
push
jae
sub
insl
mov
and
add
or
scas
imulb
mov
push
mov
lock
fcomp
cmp
dec
idivl
dec
lods
jo
scas
xorl
or
sarl
movsl
mov
mov
xor
popa
daa
pop
imul
lret
sub
cwtl
sbb
add
sahf
aam
xchg
and
dec
lahf
cmp
daa
pop
pop
inc
movsl
mov
out
cs
pop
push
loopne
loopne
add
sub
adc
in
and
or
xor
jmp
aaa
pop
push
xchg
ret
outsl
mov
int
mov
fldt
sbb
ja
negb
out
add
in
in
or
mov
cmp
movsl
mov
sbb
sbb
mov
outsl
es
add
sbb
mov
cmpl
cmp
lret
mov
mov
inc
dec
adc
xorl
ds
outsl
jmp
ret
xorb
jecxz
stc
leave
mov
cmpsb
ret
pusha
sub
icebp
in
fistps
js
pop
sbb
subb
dec
inc
lea
dec
cltd
sub
push
inc
mov
int
push
and
imul
rorb
jmp
scas
cld
aaa
xchg
jmp
sahf
jmp
outsl
dec
push
adc
and
ljmp
or
inc
pop
cwtl
adc
or
sub
pop
xor
mov
jle
cltd
daa
repnz
and
in
ss
mov
lret
movsl
nop
dec
lds
mov
ficompl
cmc
mov
gs
mov
mov
xchg
imulb
outsb
ret
cmp
sahf
bound
test
ja
and
jo
pop
fbld
in
or
cltd
push
stos
test
aad
stc
cmp
sub
je
mov
out
add
ja
cmp
or
repz
inc
sbb
mov
add
arpl
cmpsl
push
push
inc
ss
inc
xchg
into
testl
dec
or
and
neg
pop
pop
jns
add
in
addr16
dec
mov
add
cmp
push
cltd
cld
rorl
inc
iret
add
cmpsl
or
leave
cmpsl
ss
in
cli
jge
add
idivb
test
test
jg
adc
movsl
ja
sbb
mov
es
xor
pop
sti
inc
ds
sub
adcl
mov
arpl
jbe
sub
add
mov
cmp
push
cmpb
xchg
cmpsb
cmp
loopne
mov
movsl
in
cltd
xor
xchg
inc
mov
imul
inc
cmpsb
dec
stos
push
fisttps
enter
and
arpl
daa
out
icebp
bound
adc
repnz
jo
jg
ja
mov
push
pop
fisttps
xlat
mov
dec
jmp
sti
stos
cs
push
add
or
inc
sub
cmp
mov
mov
clc
mov
jae
insb
sub
cmc
sub
inc
xchg
xor
arpl
test
and
adc
pop
ja
push
notl
aas
ret
roll
pop
f2xm1
cmp
cwtl
fmuls
sahf
out
movsl
outsl
ret
xor
pop
pop
mov
mov
std
mov
xor
daa
lods
js
aam
out
pop
mov
stos
sbb
push
jb
xor
ja
dec
xor
dec
jnp
dec
movsb
daa
lds
xor
les
dec
mov
sub
ds
jbe
mov
cmpsb
cmp
adc
xchg
cmc
add
jnp
add
arpl
xchg
cmp
fisubl
jg
mov
fistpll
sbb
clc
mov
ja
sub
into
xchg
pop
sbb
sub
mov
jb
pop
loopne
in
xlat
sbb
sbb
ret
icebp
pop
sub
fldt
mov
or
int3
and
inc
ret
cli
fisttpl
push
cmp
mov
mov
stos
xchg
xorb
push
mov
jge
call
dec
push
pop
pop
sbb
or
jecxz
leave
xor
sbb
pop
and
fadds
pop
and
movsl
or
mov
lock
and
test
fldlg2
mov
cmpsb
cmp
mov
adc
fs
mulb
nop
mov
and
in
or
jp
inc
push
pop
sub
sub
mov
inc
jl
into
cmpb
fmull
data16
mov
cld
bound
or
call
and
add
shrb
ljmp
out
lods
lret
inc
in
mov
repnz
push
imull
inc
aas
sbb
adc
icebp
jbe
pop
fs
js
mov
fidivs
aaa
mov
aad
pusha
sub
and
mov
xchg
pop
imul
adc
mov
xchg
jne
mov
test
jno
mov
xor
sub
inc
adc
aad
mov
and
sbb
mov
mov
cli
fstps
cltd
pop
mov
popf
cmp
sbbl
test
int
leave
aaa
mov
aad
mov
jl
cmpsb
push
sbb
pusha
mov
repnz
lds
mov
push
adc
mov
push
pop
sbb
mov
test
notb
dec
rol
je
cltd
and
jno
fsts
jmp
and
bound
and
sbb
dec
notl
xor
out
push
inc
fmuls
pop
xor
cmp
push
out
xchg
xlat
loopne
adc
mov
outsb
mov
and
fdivl
mov
cltd
std
loope
mov
sbbl
pop
stc
lds
push
sub
nop
dec
das
xchg
cmpb
add
loopne
jnp
jb
pushf
mov
jb
or
test
xlat
cld
sub
sti
popf
ja
enter
dec
nop
sub
push
push
or
push
xchg
lahf
in
lods
pop
adc
and
rol
imul
incb
sti
mov
ja
mov
pop
jno
pop
mov
inc
sub
mov
adc
pop
movsl
les
iret
aam
fs
or
push
and
test
mov
aaa
int3
aam
mov
pop
fldl
and
fsubl
lock
mov
dec
sub
and
testb
mov
filds
addr16
jno
and
and
pop
cld
adcl
std
pushf
mov
mov
ds
cmp
hlt
jmp
jp
mov
xor
dec
roll
push
push
mov
sub
test
popa
inc
outsl
imul
inc
pop
push
sub
xchg
dec
cmp
inc
ljmp
adc
jnp
and
cmpsb
mov
sbbl
lods
out
pop
mov
jecxz
push
sbb
lods
andb
pop
jnp
cmpsl
daa
mov
dec
aam
and
adc
int3
pop
mov
dec
ret
cmp
loop
xor
fucom
xor
jg
cs
push
mov
jl
jg
stos
shrl
enter
xor
sbb
stos
aas
adc
adc
fsubrp
cwtl
sub
scas
xchg
cltd
popa
mov
mov
push
sarb
insb
push
je
sub
ret
rolb
rcr
out
clc
add
add
jl
es
inc
sbb
cmp
and
xor
call
mov
cld
popa
xor
mov
mov
std
or
rorb
add
cmp
mov
cmc
lret
andl
movsl
mull
arpl
dec
add
repz
xor
popa
mov
dec
gs
pop
pushf
mov
push
cwtl
add
pop
inc
ja
into
lods
push
push
lahf
inc
jae
movsl
push
mov
xchg
mov
pop
rcll
stos
mov
xchg
ss
insl
sub
xchg
dec
cmp
push
xchg
sub
dec
in
scas
sbb
popa
imul
pop
sub
xor
jbe
jae,pt
iret
mov
loop
pop
je
xor
xchg
xor
fcomip
cmp
xlat
inc
mov
fcoml
inc
and
shl
test
xor
or
insl
lcall
push
popa
mov
jns
cltd
or
hlt
jmp
nop
mov
cmpsb
add
cmp
xchg
sbb
sysexit
rolb
and
ret
std
je
popf
adc
lea
leave
sarb
dec
mov
jmp
cld
push
ret
sti
out
sbb
fidivs
sub
pop
pop
inc
fstl
enter
jl
or
jle
bnd
fnstcw
arpl
lods
fcoml
jnp
cmpsb
and
lea
lret
arpl
push
xor
imul
loopne
movsb
mov
inc
rcl
movsl
ljmp
push
cmp
aas
push
bound
and
mov
mov
add
fnsave
mov
in
xchg
sub
push
pop
imul
dec
stos
xchg
imul
test
sbb
add
ja
mov
stos
cmpsl
andl
mov
cmp
imul
arpl
call
jns
pop
or
shrl
dec
push
sub
inc
mov
ljmp
fdivrp
dec
loope
push
inc
fwait
inc
pop
les
fwait
pop
jno
sti
xor
popf
ljmp
jne
pop
cmp
repz
lret
dec
out
jns
push
iret
loope
in
adcl
xchg
dec
adc
fsubrs
mov
fdivp
addr16
clc
add
or
imul
in
movsb
mov
movntq
out
jnp
je
ss
repz
pop
stos
pop
mov
lret
pop
dec
and
jae
push
mov
mov
pop
cmp
and
stc
inc
pop
ret
mov
adc
xchg
hlt
xor
mov
mov
push
fimuls
push
pushf
aaa
call
push
sub
adc
mov
inc
sbb
in
push
mov
jp
push
leave
arpl
test
push
test
mov
aas
mov
pop
xor
movsb
dec
cmc
stc
mov
dec
push
nop
addl
and
stos
dec
xor
add
clc
jns
sbb
push
orb
mov
ds
mov
mov
aam
mov
das
sbb
int
cli
daa
xchg
xchg
pop
insb
leave
aas
dec
out
cmp
push
pop
mov
cwtl
pop
xor
cli
add
loope
inc
mov
lret
std
jg
fmull
xor
int3
pop
dec
and
xchg
pop
aas
pop
push
jo
mov
xchg
xchg
hlt
test
inc
and
mov
dec
lret
bound
inc
sbb
inc
sub
leave
out
pmullw
sub
fsubrl
sub
in
xchg
ljmp
aas
mov
or
cmp
jle
enter
or
jae
cs
mul
das
jp
sub
in
jns
xchg
add
mov
loopne
std
mov
cmp
pop
aaa
sbb
rcl
adc
add
pop
in
std
pop
aaa
das
and
leave
mov
out
cs
test
aaa
adc
adcl
xor
shrb
jp
adc
ja
repz
imull
inc
loope
data16
mov
pushf
jl
sub
outsb
in
hlt
mov
arpl
pop
jo
sti
test
sub
into
xorl
bound
xchg
cmpsb
mov
call
in
es
call
mov
in
fadds
clc
push
cs
mov
mov
inc
shl
stos
test
lods
mov
lcall
push
lcall
iret
lods
aas
xor
sbb
pusha
mov
lcall
pop
std
mov
mov
mov
xchg
js
or
shrb
leave
push
ja
adc
push
push
cmp
leave
push
pusha
mov
call
xchg
mov
repnz
arpl
push
adc
jg
rclb
xlat
xchg
mov
arpl
sub
push
mov
xor
or
aas
gs
mov
add
mov
in
adc
dec
int
pop
push
xlat
sbb
cmp
or
jecxz
jne
sbb
xchg
test
sbbl
add
mov
mov
inc
and
pop
les
lock
rcl
pusha
inc
sbb
int3
and
mov
les
js
fcoml
insb
fiadds
xrelease
es
sbb
sub
inc
in
xchg
outsl
stc
enter
mov
xor
adc
ss
add
les
pusha
stos
jge
cmpsl
push
test
push
pop
xorb
sub
cltd
ret
stos
mov
addb
mov
js
mov
fcomps
in
inc
inc
loope
hlt
fistps
and
cmp
ss
sbb
push
lods
adc
cltd
xchg
decl
fnsave
mov
push
push
sbb
in
cld
ret
and
or
in
out
mov
push
pop
and
outsl
sbb
inc
xchg
clc
and
testb
cmp
xchg
mov
stos
or
insl
xchg
push
cmc
xlat
pusha
rcrb
and
mov
sbb
push
push
or
punpcklwd
add
inc
pop
sbb
stos
dec
in
xlat
mov
loope
pop
aam
add
push
adc
inc
loopne
xchg
movsb
test
xchg
xor
xchg
sub
mov
repz
add
ret
inc
or
mov
testl
enter
jbe
enter
and
mov
test
sub
cmc
add
jae
pop
xchg
stos
inc
mov
jg
shll
xor
movl
mov
iret
fisttpll
addr16
test
and
mov
test
popf
test
das
cs
out
adc
jns
xor
jl
bound
jecxz
mov
orl
lock
jb
testl
jno
outsl
movsb
mov
sub
jo
pusha
xor
lahf
dec
pop
sti
mov
mov
aad
stos
push
adcl
sub
jnp
icebp
sbb
pop
or
cltd
scas
mov
and
daa
inc
xor
shld
mov
and
push
mov
out
dec
xor
xchg
xor
sub
cmpsb
add
xchg
outsb
in
adc
stc
mov
push
outsl
out
add
mov
lods
out
mov
xchg
inc
jno
dec
cmp
and
push
add
inc
inc
pop
and
jo
cmpsl
push
cmp
jge
stc
dec
rcr
and
in
xchg
jl
add
outsl
rol
mov
jmp
std
cld
cs
jo
ficoml
adc
mov
pop
mov
or
mov
test
arpl
xchg
jno
out
add
ds
mov
movsb
cmp
jl
jge
imul
sbb
icebp
lahf
lods
int3
and
jae
pop
xchg
mov
out
out
fucom
scas
lock
mov
bound
bound
js
cld
and
rcrl
imul
aad
stos
aas
in
fcmovb
in
jno
test
pop
or
xchg
js
insb
sub
jno
dec
sub
cs
in
aas
or
int
xor
mov
adc
xchg
stos
lcall
sub
movsb
iret
push
imul
inc
pop
add
xor
inc
jecxz
out
inc
push
mov
sbb
mov
fcomps
pop
or
movsbl
stos
xchg
sub
cmpsb
xor
cmpsl
icebp
jne,pt
fstpl
lds
mov
into
mov
xor
adc
pop
insb
mov
pop
lods
or
or
mov
mov
dec
sub
andl
sbb
pop
scas
repnz
scas
cld
adc
push
stc
out
repnz
add
icebp
andb
mov
popa
dec
sbb
fldenv
stos
in
fwait
jns
xchg
and
rclb
add
sbbb
dec
movsb
sbb
add
cmpsl
adc
inc
shr
sub
add
or
xchg
pop
out
pop
popf
add
int3
ss
sarb
cmp
mov
or
push
mov
add
rcrl
hlt
fdivl
inc
lret
push
loopne
adc
das
lret
sahf
xchg
mov
clc
lahf
adcb
adc
lds
add
daa
xor
in
pop
iret
jmp
faddl
gs
or
sub
push
push
and
push
cmp
pop
dec
mov
jge
dec
add
cmpsl
inc
std
xor
and
and
adc
mov
shll
in
fisttpl
xchg
dec
xchg
push
int
leave
pop
lods
mov
es
iret
je
pushf
test
mov
mov
ret
cmp
add
fisubrl
sbb
push
cmpsb
fmul
xor
mov
cs
push
and
rcll
mov
mov
mov
xchg
mov
imul
and
pop
lock
das
cli
repnz
rcrl
sub
dec
push
adc
add
fidivrl
sbb
push
test
cltd
lods
lea
inc
lea
insb
imul
test
mov
mov
mov
dec
jp
inc
adc
lods
cmpsb
in
inc
inc
xor
jbe
out
movsl
test
xor
xchg
cmpsb
sbb
fistpll
fdiv
mov
mov
inc
lods
lret
rcrb
movsl
sbb
mov
mov
pop
jmp
mov
pop
mov
ss
xchg
pusha
clc
sub
shll
inc
stos
and
negl
lods
inc
push
dec
dec
or
inc
int
and
adc
or
mov
loopne
data16
push
cmpsl
adc
cmpsl
hlt
std
negl
movsb
cmp
lds
outsb
xchg
cwtl
xor
aas
mov
push
mov
das
add
cmp
cld
sub
add
rorl
cmp
shr
and
cmp
ds
pushf
push
pop
test
cmp
rcrb
push
adc
pop
stc
aas
pcmpgtd
dec
xchg
lds
jo
andb
cli
and
out
pop
sti
call
jge
stos
mov
dec
mov
inc
push
push
push
inc
test
mov
sbb
lret
loopne
mov
in
add
and
dec
pop
call
mov
push
outsl
imul
push
pand
lret
nop
mov
shll
push
cmp
mov
loope
jg
sbbb
inc
mov
testl
cltd
or
enter
jns
test
or
shll
cwtl
sbb
aam
out
in
cmp
movsb
frstor
jns
sub
push
pop
pop
mov
cmpsb
jnp
lcall
aas
dec
add
stc
xchg
push
adc
mov
fmull
aam
push
nop
lods
lret
scas
pop
into
loop
in
sbb
int
dec
push
xchg
or
das
hlt
movsl
sub
adc
aam
out
daa
sbb
enter
xchg
xchg
pop
imul
scas
cmp
mov
and
addb
insl
into
push
popf
dec
mov
add
mov
outsb
dec
xchg
and
arpl
daa
insb
insl
sbb
into
sti
cltd
and
iret
sub
loopne
jne
xor
inc
push
or
adc
std
movsb
mov
je
stos
test
mov
pop
pusha
pop
mov
pop
push
dec
or
fidivrs
frstor
imul
inc
push
pushf
divb
add
jmp
jmp
add
xchg
inc
cmp
xchg
mov
das
xchg
cmp
or
mov
notb
jno
jle
or
mov
inc
pop
fdivs
leave
inc
cmp
outsl
imul
cmp
outsl
cltd
ret
call
xchg
mov
pop
add
pop
std
mov
push
inc
push
popf
jecxz
dec
pop
xor
mov
jb
pushf
lcall
or
stos
jge
xchg
loop
mov
mov
aas
cmc
pop
mov
ds
sbb
je
iret
jle
mov
and
inc
and
in
sbb
in
sbb
adc
fwait
cs
mov
mov
in
insl
or
hlt
rcr
and
sbb
add
mov
dec
push
sbb
push
mov
flds
stos
dec
test
sbb
inc
in
pop
fucomi
cmp
mov
jle
adc
ficomps
cmpsb
lret
bound
add
daa
mov
cwtl
mov
adc
xchg
loope
sub
add
push
out
sti
cmc
mov
aam
jae
push
pop
hlt
xor
hlt
lock
mov
repnz
fwait
push
pop
xchg
mov
jbe
add
les
int
xchg
lods
jbe
cmpsb
arpl
fwait
jl
xor
movsb
mov
shlb
movsl
xor
mov
loop
sub
push
add
stos
fisttps
jecxz
into
dec
iret
shll
rcrl
dec
daa
ljmp
or
insl
sbb
jle
and
cmp
daa
fdivs
xlat
xchg
les
rclb
jecxz
popa
repz
mov
lret
int
popf
dec
imul
adcl
js
jmp
addr16
mov
cmp
imul
xchg
jbe
pusha
xchg
int3
or
shll
addb
jg
pop
es
adc
int
jge
cmpsl
es
xchg
into
adc
adcl
add
pop
fistpll
pushl
or
shrl
inc
inc
sti
fdivrl
cwtl
or
mov
lods
push
mov
lods
mov
rorb
jmp
mov
mov
pusha
aad
adc
movsb
mov
pop
addr16
in
inc
mov
out
movsb
fabs
cwtl
fsubrl
jle
fnclex
add
fldcw
mov
sahf
add
sbb
dec
sub
lods
add
adc
pusha
xchg
out
adc
fs
fidivrs
push
fwait
insl
in
push
xchg
push
daa
cmp
push
xor
sub
enter
jl
inc
pop
jg
ret
out
gs
cwtl
dec
mov
outsb
ret
sbb
push
xor
and
int3
sbb
push
sub
shll
pusha
sti
xor
jno
jle
lods
pop
push
imul
jno
and
test
stos
imul
in
add
std
adc
cmc
mov
test
stos
inc
mov
add
sbb
gs
stos
jg
jbe
and
pop
loop
scas
test
mov
enter
sbb
cltd
mov
test
inc
lds
stos
xchg
cmp
add
nop
movsb
inc
mov
jnp
jg
repnz
and
mov
and
into
int
fsubr
pop
loope
movsb
sbb
xor
mulb
or
push
mov
xchg
iret
mov
cmp
cs
pop
stos
adc
push
cmpl
dec
dec
xchg
and
dec
cmpsb
inc
or
addr16
gs
jge
inc
dec
mov
ficoml
push
or
loopne
sub
and
mov
push
js
adcb
dec
sbb
into
cltd
mov
jno
es
je
mov
inc
repnz
push
rolb
mov
mov
sbb
int3
sbb
jnp
mov
jnp
icebp
push
shlb
call
or
arpl
or
sub
or
adc
sbb
stos
and
cmp
cmpsl
cmp
bound
pop
mov
dec
add
adcb
push
dec
pushf
xor
cmc
cmp
push
mov
rorb
inc
loope
imul
and
rcr
nop
sub
lds
jg
fstl
mov
testb
shl
add
pusha
cmp
add
rclb
repz
subb
mov
addr16
inc
dec
cwtl
cmpsb
leave
popf
xor
data16
fstl
leave
cmpsl
mov
sbb
xchg
lods
or
cmp
mov
mov
insl
aaa
mov
outsl
mov
imul
je
xchg
mov
cmp
fwait
imul
cmp
mov
daa
lcall
dec
movsl
sbb
lret
data16
ror
stos
outsb
fst
inc
or
sbb
dec
fnstenv
test
and
rol
arpl
subb
lock
ja
and
dec
cmp
shlb
addr16
test
mov
mov
jp
out
xlat
pusha
mov
xor
shrl
ja
outsl
sub
lahf
push
shlb
fidivrl
add
xor
push
in
out
shll
xor
xor
cmp
push
add
dec
push
andb
adc
xor
add
out
icebp
mov
adc
jg
or
fs
inc
rorb
sub
inc
cld
in
loop
aam
in
mov
ss
jo
nop
xchg
xchg
sub
cs
mov
sti
adc
xchg
clc
push
jo
int
xchg
pop
psubw
insl
mov
xchg
iret
sbb
push
pop
adc
jp
nop
js
xor
jl
incb
push
and
dec
mov
ljmp
xor
dec
jmp
xchg
xor
cmp
jo
sub
pop
push
out
and
stos
test
das
mov
pop
or
lods
stc
les
push
in
call
inc
pop
cs
or
push
fdivrp
mov
xchg
movsl
lods
jae
dec
cmp
xlat
mov
add
sub
hlt
sahf
lahf
lds
xlat
mov
pop
fwait
clc
or
push
xor
mov
pop
arpl
push
repz
inc
cltd
jb
sbb
pop
mov
or
xchg
mov
scas
pop
mov
fwait
sub
ss
movsl
popa
iret
cmp
pop
pusha
in
dec
dec
add
sub
fldenv
mov
repz
or
jno
stc
mov
aad
bound
xchg
mov
adc
imul
adc
cmpsb
push
inc
cmp
add
xchg
movsl
fimull
mov
in
fiadds
in
dec
daa
mov
in
daa
cli
or
inc
cmc
rclb
cmpsb
sub
pop
shll
pop
test
push
movsb
sub
in
movsb
icebp
addb
push
or
vphaddubq
in
rcrb
jb
int3
and
add
enter
cmp
xchg
xor
int3
imul
xchg
nop
fnstsw
loope
lcall
fisubrl
lods
loopne
fcompl
mov
imul
cmp
push
pop
hlt
popa
mov
jle
dec
sbb
in
inc
cmp
mov
test
mov
rcl
popf
mov
mov
mov
ror
cltd
jge
or
fnstcw
sbb
daa
lods
movsb
shlb
les
daa
smsw
xchg
push
fsubp
mov
add
and
add
adc
pop
xchg
test
or
jmp
lret
fmul
jecxz
pop
bound
inc
xchg
das
imul
outsl
fsubrl
dec
popf
pop
nop
mov
clc
xchg
sbb
pop
outsl
mov
movl
push
cmp
movsl
cmpsb
and
xor
mov
lcall
stos
jno
xlat
test
popf
testl
jecxz
scas
icebp
dec
adc
inc
test
call
dec
adc
int
mov
mov
pop
popa
aas
clc
shll
repz
or
std
aaa
cmp
inc
cmp
std
add
faddl
data16
sub
cmpl
mov
icebp
mov
outsb
dec
pop
pushf
fisubs
mov
and
sahf
rcll
mov
mov
cltd
sti
pop
adc
inc
les
xchg
mov
je
adc
hlt
mov
enter
xlat
idivb
mov
dec
and
mov
cmp
cmp
lods
ss
cmp
push
adc
inc
inc
and
mov
in
jno
mov
push
mov
cmp
stc
dec
push
popf
rclb
and
es
xor
fdivs
scas
es
js
arpl
or
sub
test
and
outsl
jnp
insb
out
and
ret
jecxz
pop
mov
loop
cs
movsb
push
mov
movsl
jmp
bound
mov
repnz
fcomps
es
in
jmp
pop
xchg
xchg
arpl
jo
cli
mov
sti
cmc
sub
in
and
jo
mov
shrl
mov
bound
out
push
stc
inc
push
shl
loopne
jmp
sahf
icebp
test
xchg
orb
shlb
cmp
into
aad
pop
pop
shll
imul
push
or
int3
daa
test
lea
add
leave
orl
add
pushf
hlt
scas
lret
sub
cmpsb
add
fsubr
mov
adc
insl
xchg
jae
out
outsb
imul
mov
push
dec
push
cs
add
inc
ss
ds
inc
shlb
push
push
fs
cmovns
leave
out
dec
mov
sub
jg
jns
add
add
stc
gs
lods
test
inc
xchg
cmp
insb
daa
faddl
push
pop
mov
mov
pusha
xchg
inc
fbstp
push
lea
loope
nop
rorl
mov
js
mov
out
jo
popf
pop
add
mov
bound
sub
jbe
call
push
mov
mulb
push
push
test
jmp
mov
jle
inc
sub
mov
pop
push
push
pop
inc
mov
xor
sbb
lret
bound
or
int3
lods
lret
add
mov
sub
dec
and
sahf
jle
cwtl
mov
in
cmp
and
mov
xor
imul
sbb
mov
jl
loope
mov
ret
sahf
fwait
lcall
pop
mov
sar
cmc
popa
mov
call
orl
lcall
lret
nop
add
mov
push
mov
sub
sbb
aas
fistpll
mov
cwtl
push
sub
aaa
mov
xchg
sbb
inc
mov
sbb
lea
add
ljmp
sub
shlb
inc
nop
jnp
sarb
inc
daa
inc
mov
push
cltd
push
cmp
sbb
inc
orb
sbb
sbb
divb
mov
loop
push
xchg
add
in
movsl
ss
or
arpl
mov
dec
and
adc
sahf
repnz
xor
aad
int3
or
rcrl
push
cmpsl
adc
in
push
mov
mov
inc
or
mov
sub
out
mov
or
cmp
jno
mov
push
jo
into
aaa
and
js
cmpsl
pop
and
cmp
mov
dec
pop
ds
add
out
fnstcw
or
loope
jo
pop
jge
bound
fildll
xor
lret
adc
aad
sub
jo
add
mov
loopne
xchg
cli
add
popf
aam
call
loop
xchg
lahf
xchg
mov
push
arpl
inc
lret
pop
jle
syscall
out
push
iret
cmc
popa
js
insl
out
jo
loop
test
mov
mov
push
in
or
rcrb
outsb
jb
je
dec
loop
shr
adc
jns
outsl
fsub
dec
aas
in
scas
addl
sub
dec
sub
loop
xor
push
mov
pop
and
jbe
push
push
mov
mov
imul
pushf
pop
mov
xor
ss
lock
inc
ss
test
ror
fprem1
adc
daa
addl
out
mov
in
pop
inc
mov
sub
icebp
dec
bswap
out
sbb
je
cmp
test
xor
lahf
push
push
mov
jl
jge
xchg
in
in
adc
ljmp
incb
inc
sub
cmovs
inc
push
add
arpl
cmp
adcb
dec
hlt
pushf
fwait
pop
aaa
scas
loope
mov
sti
mov
fwait
stc
in
call
xchg
frstor
cmp
adc
push
in
fsts
or
or
out
cmc
push
mov
int
sbb
shll
fs
rcr
clc
std
jbe
jbe
mov
dec
ret
sub
daa
jl
jb
out
mov
stos
pop
cmpsl
add
arpl
xchg
or
fisubl
andb
inc
mov
popf
pop
div
or
pop
daa
sub
mov
cmp
mov
das
movsl
int3
cmp
push
and
mov
mov
jg
inc
mov
aas
es
fiadds
xor
fs
jo
jge
xchg
jg
push
lahf
fnstcw
cld
xor
dec
ljmp
sbb
lcall
pop
movsl
rolb
xchg
pop
mov
inc
cld
dec
dec
lcall
jbe
cmp
adc
cmpsb
fs
test
cmp
add
cmp
subl
pop
xor
cmp
das
ds
sub
lahf
mov
sbb
outsb
rorb
sub
push
xor
mov
sub
fs
jbe
push
cmp
jl
fsubr
ret
sub
mov
sahf
xchg
fsts
push
mov
mov
enter
insl
sub
dec
test
mov
ret
je
pop
mov
nop
sub
cmp
mov
push
pop
clc
dec
xlat
mov
mov
mov
nop
cltd
aas
out
adc
lret
xchg
adc
loope
add
cmp
mov
mov
xchg
cmpsl
mov
or
jo
into
mov
fists
jge
int3
pusha
lret
xor
and
jns
pop
sarb
cmp
mov
cmp
loopne
and
mov
inc
sub
add
cmpsb
push
adc
xchg
sub
inc
mov
sbb
mov
test
into
mov
xorl
or
sub
cmc
pushf
js
inc
and
je
adcb
mov
xor
push
push
fsubl
push
lret
adc
mov
xchg
mov
cmp
cmpsl
sarl
lahf
decl
daa
ja
test
mov
bound
fcompp
and
fdivl
inc
adc
xchg
jecxz
add
mov
sarl
ss
gs
sbb
popl
or
mov
mov
sub
int3
or
push
icebp
or
mov
inc
jl
push
xor
sahf
push
and
test
inc
das
xchg
or
mov
out
test
jmp
int
jae
aad
pop
sbb
sbb
inc
mov
xor
push
cmpsb
pop
xchg
test
cld
cmpsb
rcrl
pminub
hlt
and
stc
push
push
push
hlt
xchg
mov
dec
scas
dec
cmp
mov
leave
jmp
addr16
cmp
sub
pushl
or
jp
mov
iret
rcrl
sbb
fs
je
repnz
ficoml
ret
stos
popa
movsb
fnsave
sbb
mov
or
in
sub
sahf
clc
test
sub
cs
cli
mov
dec
out
gs
fsubs
jne
push
cmp
in
xchg
popf
icebp
out
adc
dec
pusha
pop
cwtl
nop
sub
lcall
popf
test
fnsave
jmp
in
notb
sti
aaa
xchg
jg
sbb
jl
bound
mov
pop
fs
mov
mov
mov
fwait
jg
xchg
or
adc
cwtl
or
and
lea
jl
cmp
fsubp
push
lcall
shlb
lcall
inc
adc
xor
mov
sarb
rcll
and
add
arpl
xor
xor
mov
jno
dec
repz
dec
fsub
jne
mov
loope
aaa
sub
jecxz
rcl
xlat
inc
enter
mov
pushl
mov
cmpsb
mov
mov
pusha
sbb
cmp
xchg
and
xchg
test
inc
mov
and
int3
lock
das
mov
movsb
xchg
fmuls
sbb
dec
popa
popa
jge
fildl
cld
shl
ja
rclb
cli
or
mov
or
jge
mov
in
loopne
jbe
outsl
and
sbb
movsb
addl
movb
mov
inc
ret
jle
inc
arpl
jno
loope
mov
and
jae
imul
sub
mov
outsb
scas
call
lods
lock
std
mov
jae
stos
es
cwtl
loop
jle
lods
subb
dec
lret
mov
jae
clc
fcomps
adc
and
sbb
adc
push
and
add
xchg
or
mov
rol
mov
dec
adc
jmp
das
enter
lods
addr16
daa
fdivs
inc
pop
je
pushf
pushf
fcompp
xchg
aad
mov
loop
xor
push
call
outsl
rcll
popa
xor
mov
jns
and
sub
cmpsl
jecxz
in
jno
iret
push
shl
mov
sbb
sbb
je
xor
jb
sbb
jne
mov
xor
xchg
sar
outsl
adc
pop
adc
push
sbb
cwtl
pop
and
and
mov
jnp
cmp
mov
iret
das
pop
pusha
sbb
add
divb
jae
rolb
or
fisubrl
add
rolb
loope
adc
hlt
push
sub
sbb
mul
add
sbb
dec
decl
jns
hlt
leave
xor
inc
dec
pop
push
mov
das
movsl
inc
outsb
and
push
or
xor
ljmp
mov
adc
int3
jle
sbb
xchg
cltd
mov
xchg
out
call
js
sbb
lcall
repnz
in
mov
cmp
jge
divl
add
xchg
loopne
ds
push
cwtl
and
in
mov
mov
negl
inc
clc
aad
pop
and
jecxz
cmpsl
sbb
jl
cwtl
das
sub
testb
sub
das
mov
and
ljmp
out
imul
mov
xchg
pop
pop
ljmp
inc
es
sbb
movsb
and
paddb
add
xchg
je
dec
out
iret
mov
sub
mov
inc
sti
jl
out
loop
mov
push
push
push
mov
pop
std
xchg
pop
ret
pusha
or
es
not
cld
mov
sub
jge
jne
mov
push
popa
mov
ficomps
stos
shl
aaa
in
imul
inc
dec
add
cmp
out
or
scas
hlt
fiadds
test
mov
add
nop
dec
roll
cmp
int3
ja
xchg
sub
adc
fdivp
push
in
inc
sub
xchg
lea
cwtl
jle
sbb
repz
lret
pop
inc
adc
lcall
fsubl
push
push
lret
xchg
pop
mov
inc
frstor
push
push
pop
inc
cld
sarl
scas
mov
loopne
daa
push
ret
mov
lahf
leave
rorl
nop
pop
mov
cld
daa
push
fmuls
mov
dec
add
andl
push
jg
dec
test
into
sub
fst
aaa
es
pop
push
adc
testl
pop
stc
xlat
xchg
sub
sarl
in
repnz
push
pop
jmp
mov
push
lret
push
cld
mov
clc
js
into
orl
inc
lahf
rclb
xchg
add
mov
jo
cmpsb
in
mov
mov
xchg
scas
xchg
sbb
inc
pop
lret
mov
or
push
bound
inc
cmp
push
stos
pop
fucomi
or
stos
lret
xchg
scas
ds
or
sbb
lret
pop
loopne
xorl
gs
cld
adc
pop
xor
stos
adcb
rcl
cli
jg
jecxz
and
repz
mov
cmp
notl
std
repz
iret
pop
fstps
movsb
and
pop
and
nop
fwait
movsl
dec
cltd
push
ret
ret
int3
sbb
inc
push
mov
sbb
call
or
les
xchg
rep
jp
xchg
inc
stos
fdivs
or
mov
pop
clc
mov
mov
dec
dec
adc
cmovbe
cmp
xchg
clc
js
xorb
rcr
xor
add
mov
test
sub
inc
pushf
movsl
add
adcb
lock
xchg
xchg
sub
add
orl
inc
sbb
cmpsl
js
sti
sub
fs
cmp
xchg
mov
push
je
stc
faddl
add
mov
and
ret
int3
dec
xlat
mov
mov
loopne
xor
ss
push
mov
and
pop
cmp
pop
jno
imul
mov
mov
test
cs
movsb
adc
mov
inc
icebp
push
notb
pop
pop
jg
pop
sti
xchg
fs
or
aad
ja
xor
mov
pop
out
mov
cld
cwtl
and
clc
pop
add
loopne
test
loope
test
sub
hlt
xor
mov
in
sub
ljmp
in
adc
imul
inc
int3
in
inc
push
cmp
mull
sbb
jmp
hlt
mov
lahf
mov
pop
lods
test
mov
add
ret
cwtl
push
pop
mov
insl
insl
jne
sbb
pop
mov
repnz
xchg
cld
clc
rclb
mov
sbb
sbb
sub
cmp
outsl
in
cli
test
subl
into
jbe
jl
subb
nop
enter
jae
sub
cmpsb
mov
popa
pop
bound
outsb
pusha
repz
rcll
or
adc
inc
jle
dec
pop
add
sti
or
test
inc
sahf
push
mov
sahf
push
fisubl
aad
repnz
cmp
out
call
nop
cmp
mov
testl
int
sti
inc
jmp
mull
jecxz
pop
icebp
sbb
call
dec
mov
aas
sbb
sub
sbb
mov
dec
lret
stos
pop
cltd
push
push
cmpsl
add
leave
mov
imul
jo
inc
dec
xor
mov
inc
dec
popa
orb
dec
popl
mov
sub
push
mov
inc
cmc
ljmp
mov
rorl
and
add
jno
push
cmp
pop
mov
jp
or
inc
popf
mov
notl
dec
lcall
cli
mov
inc
loope
cmp
stos
stc
adc
std
int
add
push
cmc
in
fwait
jne
nop
fbstp
dec
shl
xchg
adc
aaa
loop
aam
jmp
repz
insb
mov
dec
mov
cmp
cmp
mov
scas
jns
cmp
pop
push
jae
jp
mov
imul
add
push
lods
mov
mov
xlat
inc
adc
pop
and
out
in
icebp
pop
hlt
mov
stos
dec
dec
mov
stos
pop
fnstsw
xor
pop
cmp
xor
push
fs
test
inc
lcall
jno
mov
movsb
enter
cs
push
sub
lods
adcl
mov
and
mov
cld
jno
and
xchg
jl
pop
pop
test
inc
mov
aas
sub
pop
jne
aad
test
pusha
subb
mov
mov
sbb
fidivs
dec
out
cmpl
mov
jae
mov
xchg
jp
lret
add
sub
sbb
mov
in
fsubr
jge
jnp
insb
in
int
mov
xchg
or
pop
call
cli
loope
push
hlt
dec
inc
scas
cmc
insb
jns
cmp
cmp
mov
and
dec
mov
xchg
loope
mov
or
lcall
push
lahf
mov
hlt
ljmp
mov
inc
mov
ja
rcrl
paddusw
nop
cltd
mov
push
into
sahf
or
mov
and
nopl
jmp
mov
cmp
push
dec
mov
cmpsb
popf
fs
and
stos
or
lret
out
push
push
je
jbe
dec
hlt
imul
sub
pop
out
and
pop
jge
fs
shlb
inc
adc
stc
pusha
add
mov
shr
push
mov
pop
lret
mov
dec
or
pop
pop
popa
xor
pop
test
mov
sub
inc
mov
add
pop
out
inc
xor
sti
add
xchg
mov
mov
push
lret
xor
out
adc
js
imul
adc
adc
js
mov
jecxz
cmp
sub
andl
xor
stos
stos
jle
in
and
sub
mov
sub
pop
cmp
dec
pop
mov
into
filds
aas
int3
fildll
daa
mov
mov
mov
xchg
or
addr16
scas
inc
scas
hlt
data16
or
outsl
xor
rolb
in
mov
mov
push
pushf
xchg
aas
in
mov
int
dec
xor
sbb
dec
test
xchg
adc
jne
xor
xor
ret
pop
dec
jno
and
sbb
add
mov
jg
cltd
sti
add
mov
jge
and
bound
lock
in
push
xchg
nop
jns
lea
repz
mov
xor
scas
out
xchg
or
push
sbb
in
jmp
jle
pop
add
add
pop
ret
xor
mov
std
cltd
adc
mov
inc
xor
fistpll
negb
xchg
pop
or
dec
les
sub
test
adc
xchg
push
and
fldt
xor
push
adc
insb
jp
sub
xchg
das
insb
nop
mov
inc
push
pop
mov
and
jns
outsl
fwait
push
int3
push
in
sbb
test
popa
inc
mov
mov
sti
lahf
nop
jmp
push
test
ret
sub
sbb
inc
and
adc
arpl
sub
or
pop
sub
mov
repz
in
imul
nop
ja
clc
inc
push
test
negb
dec
add
and
fidivl
in
fstpt
lret
mov
inc
jl
jle
arpl
fsubrl
cmp
outsb
inc
add
jmp
stc
in
stos
cmpl
jnp
imul
jns
add
test
add
mov
popa
pop
mov
pop
icebp
push
push
mov
leave
lcall
jo
fildl
repnz
pop
dec
dec
lea
jg
add
adc
mov
out
sub
in
rcll
lahf
or
cmp
sub
mov
dec
push
sbb
loop
mov
mov
imul
test
mov
adc
aas
sahf
dec
addl
and
fadds
rol
mov
ss
jnp
jo
out
sub
outsw
test
add
lods
stc
scas
repnz
pop
push
xor
xchg
xchg
cmp
cmp
shl
hlt
push
mov
mov
push
pop
daa
rorb
jmp
stos
mov
add
and
iret
mov
xchg
xor
aas
jp
setns
sti
fidivl
in
int3
imul
in
push
mov
xor
js
arpl
inc
jg
decb
gs
scas
jg
mov
cmpsl
jg
outsb
push
jle
pushf
mov
jl
bound
adc
in
adc
jge
leave
cmp
push
push
dec
push
imul
push
je
fcompl
xchg
mov
pextrw
pop
test
jmp
subl
sub
movsb
inc
lret
pop
es
movsb
bt
sbb
mov
stos
ljmp
sub
xchg
adc
xor
into
and
jl
lea
insl
fwait
jg
ss
and
push
das
or
cmc
cltd
test
fisubrs
test
fcmovnb
mov
popa
shlb
lahf
inc
adc
jmp
popf
cmpsl
fisubrs
jnp
xor
out
loope
jae
sbb
jecxz
jae
add
or
adc
repz
cld
pop
sub
cltd
mov
jmp
cmp
cmc
pop
imul
and
cmp
outsb
cld
mov
out
lods
sub
dec
push
or
imul
add
imul
or
push
mov
push
xchg
fistps
insl
lcall
fsqrt
mov
arpl
mov
aam
movsb
push
jge
add
cmp
mov
jge
cltd
xchg
sbb
dec
clc
pop
mov
jle
xlat
loope
inc
lea
xchg
cmp
mov
pop
mov
mov
xor
in
cmp
adc
jp
or
adc
mov
movsb
pop
dec
out
insl
mov
repz
push
xchg
andl
popf
popf
out
into
andl
jns
cmp
add
pop
inc
divb
ljmp
rcr
xor
mov
test
mov
ljmp
jecxz
xor
jmp
popf
add
mov
dec
and
push
jecxz
sti
gs
pushf
or
nop
imul
or
aaa
cwtl
pop
call
adcl
idiv
lahf
dec
cmp
inc
lea
sbb
movsb
subl
xor
test
sub
pushf
mov
hlt
and
sbb
mov
ss
shlb
push
iret
jns
lcall
adc
pop
int3
hlt
push
push
je
sarl
inc
add
mov
push
xor
call
fdivr
mov
cli
or
out
fcoml
push
hlt
or
into
mov
cltd
inc
lret
loopne
jge
xchg
dec
aaa
lcall
int
or
das
mov
inc
adc
add
jg
fists
mov
mov
add
push
xor
xchg
stc
add
scas
test
dec
popa
bound
push
mov
push
mov
jg
dec
pop
push
fmuls
divb
insb
pop
stos
std
add
sbb
mov
movsb
add
mov
adc
popa
ret
pop
faddl
xchg
and
add
dec
cld
rorb
xor
cld
fbstp
into
cmpsl
xchg
int3
fsubl
mov
sbb
xor
into
and
mov
punpcklwd
lcall
mov
in
or
jg
mov
in
jbe
fcoml
xchg
insl
je
push
and
nop
stos
int3
into
pop
xor
es
sub
push
dec
fisttps
add
xchg
cmp
mov
lds
idiv
gs
jl
dec
push
adc
popa
push
or
xchg
or
repz
add
cmpsb
add
stos
push
fcoms
xchg
push
adc
dec
dec
pop
data16
mov
in
ljmp
stos
iret
inc
xorl
fstpl
sarl
jbe
inc
mov
clc
imul
sub
lret
sti
cmpsl
sbbl
lcall
jge
jno
retw
in
pop
mov
test
out
enter
jb
int3
pusha
sbb
repnz
adc
push
mov
lahf
push
pop
mov
repz
cs
repz
cmp
mov
mov
sbb
mov
mov
lahf
sahf
xchg
nop
and
lahf
jg
data16
test
lea
clc
lods
pop
mov
push
cmp
add
mov
stos
repz
xchg
test
add
stc
or
push
sub
jmp
aaa
inc
out
bnd
test
mov
lahf
sub
ret
pop
or
adc
adc
sbb
jp
jnp
test
ret
jmp
mov
negl
lcall
mov
sbb
pop
adc
out
cltd
pop
scas
stc
scas
mov
jae
insl
mov
rorb
add
les
loop
bound
dec
push
jge
pop
aas
es
jmp
insb
xchg
outsl
pop
cmp
dec
sbbl
daa
rol
imul
ret
daa
pushf
jne
enter
popf
bound
dec
add
mov
lods
rcrl
sub
dec
push
loop
dec
test
push
fsubr
stos
jns
mov
sub
nop
sbb
dec
fwait
shlb
xchg
cmp
rsqrtps
aaa
dec
xor
cmc
pop
xchg
and
inc
push
or
mov
clc
push
xor
inc
fldpi
rcll
add
sub
mov
sarl
xor
adc
int3
sbb
sbb
popf
js
cltd
rcll
test
jnp
mov
ret
lar
cltd
lahf
je
push
jp
jle
out
jecxz
das
clc
movsb
push
sbb
push
lret
and
mov
rorb
mov
in
pop
adc
int3
lcall
scas
imul
lahf
jb
sti
repz
push
push
div
pusha
and
rcl
cmp
popf
scas
push
sbb
xchg
movsb
lods
adc
jne
rol
pop
out
mov
sarb
and
cmp
jle
fldt
mov
stc
lret
add
xor
incb
xor
mov
mov
mov
and
push
mull
loope
test
testb
sub
jmp
sub
dec
and
cmpsl
ds
mov
jg,pn
loop
lahf
pop
popa
mov
mov
add
and
and
pop
cmpb
bound
inc
movsl
dec
insb
inc
sti
insl
dec
dec
cmpb
loop
cmp
sbb
inc
sbb
jmp
pop
imul
jo
cmp
cli
lcall
lods
hlt
push
push
mov
mov
push
testb
ret
and
ret
adc
sbb
sbb
cmp
cwtl
xor
fildl
xchg
jne
pop
movsb
repz
cmp
dec
xchg
test
lock
jl
loopne
push
dec
mov
lahf
pop
xchg
in
mov
jae
xchg
cmpsb
or
je
jbe
mov
pop
and
dec
mov
push
sbb
lret
cld
inc
xor
gs
mov
icebp
mov
dec
mov
pop
pop
push
les
push
je
and
sarl
cmp
mov
cwtl
xchg
test
sbb
icebp
cmpsl
stos
add
adc
loopne
bound
xchg
push
cmp
jg
xlat
cmp
mov
aas
xor
push
lret
test
xchg
adc
test
sti
add
pop
push
jle
push
shll
xor
stc
dec
sbb
in
iret
dec
les
pop
clc
cmc
fmul
jmp
shlb
cld
cli
call
pop
int3
pop
inc
mov
mov
push
icebp
lock
cmp
addr16
mov
xchg
pop
sbb
mov
jmp
lock
movsb
sarb
push
dec
cli
xor
mov
shrl
xchg
mov
adc
xchg
call
movmskps
dec
lods
pop
dec
int3
ljmp
sbb
test
leave
mov
ja
push
mov
outsl
sarl
sti
sub
test
push
add
cmpl
adc
lods
xorb
sahf
insl
dec
cmp
and
test
mov
aad
sub
sbb
sub
in
mov
jns
aaa
cld
insb
pop
push
push
shrb
fildll
jl
cmp
sub
inc
jl
xor
dec
xchg
call
sub
mov
inc
push
andb
loop
pop
fidivs
lret
out
stos
mov
mov
int3
std
lds
movsl
jae
bound
lods
fxch
add
lds
insl
jecxz
sub
pop
cs
int3
dec
data16
ret
in
mov
add
cmp
xlat
jne
mov
adc
or
mov
pop
mov
xchg
in
pop
scas
push
shlb
je
mov
out
adc
int
pop
cmp
pop
push
fstps
lea
rorl
adc
movsb
lahf
jbe
mov
lret
sbb
test
sbb
pop
cld
mov
cmpsb
mov
loop
scas
rorl
and
mov
cmpsl
sbb
dec
jp
push
xchg
in
mov
lds
btr
imul
mov
add
adc
out
cmp
mov
pop
fisubrs
popa
aad
ss
ljmp
cmp
dec
mov
xor
push
jae
scas
xor
loopne
xchg
popf
ds
xchg
jb
add
xor
or
testl
lods
enter
sbb
outsl
sbb
ds
adc
or
loope
or
jae
mov
pop
out
cs
sbb
je
sub
sbb
daa
cmp
and
loop
aaa
jmp
movsb
cmp
mov
cld
push
les
or
inc
jnp
mov
jl
cmp
out
push
mulb
pop
std
sub
lret
push
jae
adcl
pusha
xor
lock
mov
sub
push
test
mov
sbb
cld
cmp
push
stos
jmp
fxch
fisubrl
out
adc
jne
loope
in
outsl
or
cs
mov
inc
shlb
cmc
push
inc
xchg
ret
test
out
loop
aad
sbb
rorb
dec
push
mov
mov
dec
sahf
sbb
divl
fsubrl
mov
adc
or
xchg
out
mov
or
mov
jnp
int
lock
cmp
mov
repz
xor
ror
imul
mov
inc
fisttpl
jle
loopne
jns
jle
jb
pop
aad
popf
fadds
push
pop
cmp
imulb
out
and
jns
js
push
enter
lret
test
loope
xchg
pop
inc
dec
jp
dec
cltd
int3
int3
mov
jg
ds
jge
add
in
xchg
jg
dec
orl
lret
and
sub
sbb
subb
add
mov
loop
mov
lret
out
loopne
pop
rcl
mov
pop
lcall
cld
jno
mov
pop
gs
xorl
scas
add
cmp
loop
xorb
inc
daa
aam
push
jne
cmp
jno
es
jmp
cmpb
mov
fsubr
int
sub
mov
lret
loopne
cmp
mov
mov
inc
xor
and
jge
imul
dec
and
jae
lret
divb
push
jecxz
inc
and
lret
pop
lahf
rorl
maskmovq
testl
popf
cmp
inc
into
int
or
sbb
push
in
xchg
lods
ljmp
jae
pop
or
shlb
xchg
stc
daa
outsb
xchg
cltd
or
push
add
add
sbb
inc
test
inc
add
inc
add
fidivrs
pop
xchg
jmp
shrb
or
test
adc
and
idivb
gs
cmp
ds
dec
dec
jp
sub
ret
adc
xorb
pop
sbb
pop
nop
pop
cmp
xor
into
dec
scas
inc
stos
aaa
jae
xor
shll
dec
lock
lahf
push
xchg
int
dec
sub
push
rcrb
mov
jmp
lods
pop
shl
mov
push
push
or
mov
imul
inc
mov
mov
cmp
jno
jns
cld
jbe
mov
dec
fstpt
lea
or
imul
sbb
out
out
jge
std
std
stos
neg
mov
mov
add
or
arpl
adc
pushf
mov
fwait
icebp
xor
test
inc
and
jo
testl
jmp
sbb
pop
sbb
imul
add
fs
add
loopne
adc
jnp
cmp
and
fsts
push
sbb
xchg
ss
sub
or
cld
xchg
adc
out
arpl
and
rol
jg
and
mov
leave
loopne
add
nop
das
sub
out
cmpsl
dec
ljmp
xorl
push
ja
mov
fs
adc
shlb
push
sub
mov
fimuls
das
dec
dec
arpl
xchg
in
xchg
es
mov
outsl
mov
sbb
sub
xor
xchg
or
stos
mov
mov
xor
dec
pop
sbb
aad
inc
and
insl
leave
imul
mov
in
pop
jbe
xchg
sub
cmpxchg
in
lret
rorb
mov
dec
cltd
adc
cli
pop
cld
out
fcmovnbe
fwait
jb
mov
adc
loope
cmp
sub
outsl
ret
mov
xor
xchg
and
push
mov
mov
hlt
iret
test
dec
add
fcoms
int3
mov
daa
pop
dec
data16
sbb
bound
and
xor
mov
xlat
cwtl
dec
push
jnp
inc
daa
aaa
jmp
dec
adc
fs
aam
and
fdivrs
pop
jnp
mov
leave
mov
push
dec
xor
mov
sbb
enter
jo
cmp
push
push
out
adc
mov
cltd
loopne
icebp
or
or
stos
mov
psubsw
test
dec
jmp
xlat
mov
iret
and
in
adc
xor
jecxz
cmp
dec
mov
sub
dec
dec
jb
test
dec
sti
add
sub
cmpsb
loopne
je
cmp
inc
or
lods
push
xchg
aas
scas
shll
aad
punpckhwd
jge
popf
jecxz
xchg
data16
outsl
xchg
and
divb
scas
sub
test
pop
in
ss
mov
loopne
sub
int3
xchg
mov
dec
scas
lret
shlb
and
out
sahf
adc
push
movsb
mov
sbbb
out
or
jecxz
nop
ja
jnp
arpl
insl
xor
outsl
pop
icebp
mov
sbb
jp
pop
pusha
mov
inc
dec
jmp
push
or
sbb
mov
jp
stos
xchg
xchg
add
shll
and
mov
pop
cmp
mov
push
lods
pop
cmpb
cltd
sub
pop
xor
and
ja
faddp
movsl
out
cltd
bound
mov
jecxz
push
sahf
sbb
inc
movsl
scas
dec
push
repz
mov
or
loopne
fstpl
jbe
mov
rcr
dec
and
add
push
jl
test
popf
or
sub
jecxz
sarl
or
push
adc
scas
je
int
lret
sub
lods
jecxz
sbb
jg
ljmp
or
movsl
push
cli
push
fdivrl
insb
xor
xchg
mov
lret
and
sub
mov
shl
jne
das
in
test
shrb
mov
or
lods
hlt
loopne
or
dec
mov
leave
cwtl
or
xchg
cltd
movsl
xor
mov
xor
pop
stos
arpl
mov
jle
jns
clc
nop
xchg
push
cmp
pusha
xchg
out
xchg
push
sbb
in
push
dec
int3
loop
loopne
sbb
fs
push
scas
or
xchg
lods
or
fdivrl
and
rclb
jo
sbb
std
in
popf
add
sbb
sub
fsubrs
pushf
cmpsb
fdivs
dec
or
inc
cld
cltd
das
lret
inc
andl
dec
aad
xchg
int3
mov
and
xchg
pop
lahf
push
je
xchg
inc
ret
cmp
pop
ja
xchg
test
pushf
push
je
pop
rorl
js
xchg
int3
clc
sbb
sarl
jbe
or
fisubrl
sbb
lret
fldenv
lock
in
test
rcll
cmpsb
sub
xchg
pop
add
mov
test
cmp
andb
les
inc
lret
in
pop
out
inc
in
mov
mov
arpl
bnd
mov
pop
xchg
mov
or
cmp
xor
push
mov
add
jno
arpl
leave
jg
pop
xchg
mov
sub
cmp
mov
lret
ja
ljmp
mov
ss
mov
mov
pop
mov
out
test
xchg
rclb
dec
xor
push
sbb
cmp
int
adc
notl
adc
aam
arpl
mov
lods
mov
mov
test
adc
fcmovbe
lea
cld
out
test
les
push
call
jl
cli
and
fs
pop
adc
mov
adc
xchg
sub
jge
pop
cmp
push
sbb
cmp
inc
mov
aas
mov
enter
cmpl
or
outsl
dec
cmc
inc
cs
and
mov
insb
iret
pop
bsf
test
push
mov
xor
lods
add
jo
cwtl
push
leave
cmp
pop
jecxz
jp
lds
fcoms
cmp
cwtl
xchg
push
lea
test
add
jge
pop
pop
rclb
sub
test
js
pop
int3
sub
aaa
das
sbb
mov
lock
add
dec
orb
jae
or
or
add
dec
js
enter
push
cmp
xchg
pop
push
push
sbb
or
nop
mov
mov
dec
movb
adc
mov
stc
jge
sahf
cltd
inc
pop
xor
dec
cmpsb
mov
sub
mov
xchg
clc
or
cmc
out
fdivrs
lods
pushf
lcall
or
mov
fmulp
rcrb
je
jno
xor
inc
lcall
inc
bound
cli
mov
popa
out
sbb
ljmp
in
in
mov
push
xchg
jmp
add
das
aas
outsl
cmc
stc
popa
add
push
imulb
es
insl
mov
insb
mov
sbb
mov
or
jp
ror
adc
sub
bnd
mov
ja
mov
pop
mov
nop
add
push
mov
shl
jns
sahf
das
fdivrs
push
repz
ret
and
dec
scas
out
and
mov
outsb
mov
xor
pop
mov
xor
xchg
sub
dec
inc
sub
sbb
and
inc
mov
scas
in
pop
fisubl
or
repz
sub
and
pop
sub
lea
pushf
lret
adc
fnsave
int
sahf
pop
ds
iret
cs
negb
cmp
inc
inc
xchg
xor
ljmp
xchg
sbb
mov
mov
pop
insb
xchg
leave
cmp
mov
std
add
arpl
mov
jmp
adc
xchg
sbb
out
faddl
stos
mov
stos
mov
and
pushf
sub
xchg
outsl
dec
cmpsl
xchg
dec
push
mov
push
hlt
test
sub
into
dec
dec
mov
jbe
popa
mov
outsb
fldl
pop
stos
jle
pop
inc
xor
pop
sub
xor
ret
and
sahf
mov
xor
imulb
std
cmpsl
in
pusha
inc
in
mov
pop
mull
dec
call
mov
mov
ds
mov
aas
je
decb
mov
and
push
cld
jp
xchg
jne
xchg
aas
jns
test
in
out
int
mov
push
fldl
or
xor
inc
or
bound
fldl
mov
jne
dec
lret
gs
and
fwait
bnd
mov
out
add
cltd
push
call
pushf
rclb
imul
mov
mov
xchg
das
jge
inc
shrl
mov
xor
inc
dec
dec
fiadds
aas
mov
mov
scas
inc
aam
and
lea
push
das
cmp
xchg
jmp
jge
sub
shr
cmpb
dec
pusha
cltd
mov
shll
outsb
outsl
sub
out
dec
call
jmp
sbbb
and
gs
xchg
rorl
rcll
and
stc
flds
jo
ja
popf
mov
xchg
sub
shll
shlb
ljmp
pop
imul
sub
jecxz
ss
insb
call
and
cs
iret
arpl
add
nop
imul
movsl
sbb
pop
lret
mov
add
in
sbb
movsb
out
ja
xchg
fwait
add
mov
idivl
xchg
lock
mov
leave
jl
fcmovnu
shlb
call
push
fistpl
outsl
xchg
xchg
pop
nop
jns
cmpl
jge
add
imul
mov
mov
push
pop
stos
fs
leave
insl
call
add
mov
mov
in
fdivl
or
shr
loope
xchg
push
scas
stos
mov
add
fwait
sarb
push
cld
xlat
or
lods
xchg
pop
int
addr16
aam
int
mov
jbe
xchg
movsl
push
jl
or
lret
arpl
push
mov
das
cmp
icebp
pop
add
cltd
orl
cmp
mov
jp
add
push
sub
insl
int3
inc
inc
push
je
inc
fdivrl
roll
rcr
hlt
fxch
lret
mov
gs
push
stos
std
jmp
lahf
rcll
addr16
mov
test
mov
imul
and
jno
ja
inc
les
dec
les
dec
cltd
mov
jae
add
xor
inc
mov
lods
test
inc
jle
push
ja
cmp
cmp
jbe
add
cwtl
sbb
pop
sbb
inc
ficompl
mov
mov
je
and
cmpsb
sub
scas
mov
add
in
sahf
fwait
mov
jnp
ret
adc
sub
xorl
inc
ja
jae
sarb
push
popf
scas
push
ja
mov
jne
push
sbb
ret
pushf
push
imul
stos
xor
xchg
xor
mov
shrb
mov
dec
sub
mov
fimull
adc
mov
jb
movsl
fcmovnb
mov
xlat
loopne
into
sub
lds
icebp
sbb
in
rcrl
pop
divb
sahf
mov
xchg
scas
add
mov
push
mov
int3
dec
arpl
dec
adc
mov
mov
jno
mov
enter
jp
movb
lahf
adc
dec
xor
jo
sub
inc
fidivrs
subl
mov
sbb
gs
dec
and
sub
and
pop
fidivs
lret
mov
lcall
add
dec
adcl
aam
xchg
jg
mov
cmp
ss
fisubl
push
push
mov
jg
or
enter
pop
rcl
mov
mov
movsb
arpl
stos
push
inc
popa
daa
out
bound
inc
jnp
mov
sar
push
cltd
xchg
lds
push
ja
mov
inc
lods
push
fldt
int3
cmc
jg
popa
jge
jg
scas
mov
addb
repnz
xor
push
jg
lods
test
out
lds
mov
or
test
or
loope
inc
cmpsl
xchg
adc
sub
ret
rcr
pop
imul
std
in
sub
out
or
insb
stc
pushf
or
jno
in
mov
jae
notl
sbb
iret
cmp
lock
xchg
mov
pushf
lds
jb
cmp
xchg
sub
mov
push
add
lcall
pop
nop
inc
cmp
mov
sahf
cltd
jns
test
es
sahf
sub
pop
pop
popf
cmp
and
xchg
std
sbb
mov
and
test
sbb
in
dec
adc
and
leave
addr16
inc
or
ret
pop
dec
mov
cmp
push
xchg
lahf
subb
jmp
mov
test
add
test
adc
cmp
loope
cli
sub
jmp
popa
push
gs
inc
cmp
jecxz
xlat
jne
aad
pop
xor
fadd
pop
scas
out
sbb
pop
sahf
ja
fldenv
jecxz
inc
cmpl
mov
adc
xchg
xor
cmp
and
adc
pop
mov
dec
fs
scas
inc
sub
loop
and
mov
ja
jmp
imul
test
sbb
or
mov
mov
xor
stc
sub
lret
fidivs
adc
mov
sub
call
aad
cmp
cmpl
stos
in
xor
fsts
mov
cmpsb
or
nop
in
cmp
jmp
in
jnp
push
jg
into
xchg
pop
int3
xchg
ffree
popf
ret
in
pop
sub
fs
xor
mov
in
cmp
push
adc
pop
ficomps
scas
rolb
stos
jns
mov
insb
lods
hlt
sbb
sbb
adc
xchg
push
mov
cmc
push
pop
ret
fmuls
sahf
xchg
js
adc
bound
jmp
in
push
outsb
sbb
es
out
fildl
pushf
repnz
dec
lret
cld
sub
pop
cmp
daa
and
mov
dec
ret
subb
sbb
inc
addr16
dec
jnp
shlb
shlb
fildl
adc
pop
fildll
fbld
add
xor
das
cmpsl
sub
addl
loop
sti
mov
js
pop
repnz
sarb
lds
mov
mov
xchg
jne
or
jmp
xlat
xchg
out
daa
mov
and
jne
test
inc
dec
mov
nop
daa
js
shr
sbb
hlt
sub
jecxz
push
mov
cmp
push
and
lds
call
cltd
popa
mov
add
pop
xchg
test
jno,pt
inc
pop
cmc
lods
es
adc
xor
or
ja
mov
fdivl
cmpsb
cmp
jnp
mov
cmp
pop
cli
arpl
fnstenv
mov
xchg
js
and
je
les
jno
xchg
ret
mov
mov
out
adc
mov
mov
adc
js
cmp
mov
mov
pop
pop
out
xchg
cltd
pusha
inc
add
mov
pop
hlt
call
scas
pop
mov
stos
jae
ljmp
push
shll
gs
and
lahf
out
add
jge
icebp
cmc
pusha
out
ljmp
sub
pop
cli
mov
xchg
push
pushf
fadds
push
mov
imul
dec
mov
xchg
jb
dec
addr16
scas
push
mov
pop
jns
and
insl
stos
arpl
cmp
add
dec
inc
cmpsb
sbb
sbb
jnp
push
xchg
adc
sbb
pop
mov
push
daa
fbld
dec
sub
ret
push
dec
jno
loop
push
mov
jge
sahf
fnsave
hlt
subl
mov
scas
pop
mov
jns
or
dec
sub
clc
hlt
lcall
outsl
adc
mov
cmpsb
outsb
sar
add
jmp
aas
pusha
ficoms
shlb
lcall
in
mov
pop
lret
pop
inc
subb
cmp
lods
xlat
jae
or
pop
mov
dec
jle
in
aam
adc
sbb
shll
dec
and
dec
dec
js
ret
movsl
adcb
lcall
push
notl
pop
ror
xchg
push
add
xor
sbb
out
xchg
inc
mov
jmp
stc
mov
gs
adc
push
adc
lcall
or
fadd
add
sbb
pop
push
mov
sbb
notb
pop
and
shlb
in
mov
mov
addr16
dec
addr16
nop
stos
xchg
arpl
push
push
rclb
sbb
fadd
int
nop
push
popf
xchg
dec
ds
rol
mov
mov
mov
pop
outsb
cmp
outsl
xchg
mov
lret
cmp
stc
jg
dec
mov
add
mov
outsl
pop
mov
xchg
insl
arpl
adc
ds
fwait
data16
cmpsl
shll
jo
pop
pop
sub
fsubs
outsl
mov
fdivrs
xchg
cwtl
aaa
push
loope
push
mov
sbb
mov
lret
cmp
and
inc
sub
xchg
lods
dec
xorb
or
lods
aam
mov
jl
and
pop
push
gs
das
test
addl
fs
lock
lock
push
cmp
mov
std
out
arpl
repnz
fwait
pop
sbb
mov
sbb
je
repnz
insl
aas
mov
push
stc
cmpsb
inc
mov
pop
jecxz
push
jbe
out
dec
icebp
inc
aaa
sbb
lods
jb
fdivl
adc
adc
push
push
idivb
fldenv
pop
fwait
mov
das
sbb
push
int3
sbb
and
dec
jg
fistpll
add
pop
rorl
jecxz
dec
xor
xchg
pop
rcl
pop
adc
sub
jge
dec
lcall
bound
ret
lcall
push
pop
jle
pop
mov
cmp
sbb
dec
jno
add
iret
cmpsb
fwait
aam
xchg
xor
fsts
dec
mov
sub
pop
stos
imulb
or
testl
cmp
aas
aas
sbb
pushf
int3
mov
lret
leave
into
pop
pop
mov
jnp
add
iret
pop
mov
pop
jno
clc
xor
add
into
push
scas
cmp
test
cwtl
or
push
mov
loope
std
xchg
lcall
mov
jl
lret
faddl
pop
push
fisubrs
stos
js
inc
mov
out
mov
mov
nop
push
or
aaa
xchg
pop
lock
inc
push
xor
mov
cmp
clc
lods
leave
ret
mov
sub
inc
jecxz
add
fists
ret
test
or
in
dec
sbb
notb
cld
or
and
cwtl
or
call
adc
mov
xor
lret
je
jl
cmp
xchg
js
push
pop
imul
cmp
ds
and
and
jnp
emms
mov
pop
adc
xor
outsb
mov
jns
test
jmp
outsl
and
mov
stos
mov
or
dec
jnp
or
dec
xor
daa
jle
scas
mov
and
cmp
sbb
dec
push
std
jecxz
fcoms
xlat
jmp
stos
pop
jge
jg
mov
cmp
test
subl
std
fcoml
cld
ficomps
loop
xchg
fiadds
cmpsl
ljmp
xor
pop
and
jp
ja
mov
mov
push
xor
cmp
aaa
mov
clc
fs
into
dec
xchg
xor
pop
sub
pop
dec
shrl
and
int3
mov
pop
fwait
inc
mov
dec
popa
sbb
xor
rorl
mov
sarl
rorl
testl
fucompp
fwait
insl
jo
push
jne
inc
imul
subl
aam
adc
pop
cwtl
mov
dec
jecxz
cwtl
fstl
xchg
ljmp
mull
call
xor
repz
inc
int3
mov
enter
insl
int3
jno
mov
cmp
jbe
std
cmp
sbb
testb
push
lahf
jge
pop
xlat
mov
sti
mov
pop
add
mov
divl
dec
pop
add
push
pushf
fdivs
and
jl
sbb
push
scas
dec
es
add
xor
pusha
std
cmp
ds
sar
or
mov
mov
outsb
out
cmp
addr16
adc
cmc
ss
loop
push
mov
cli
test
aaa
imul
sarl
les
push
add
test
lods
into
repz
cmp
loopne
test
and
jo
nop
mov
xchg
mov
pop
add
inc
adc
or
pop
repnz
adc
adc
pop
jo
push
push
jns
sysret
or
mov
push
or
pop
sahf
mov
fucomip
add
cmp
lods
mov
cltd
decl
in
mov
cmc
rcll
ret
test
mov
mov
repnz
push
jge
stos
aad
lds
nop
mov
push
test
ss
loop
pop
ljmp
cwtl
test
push
push
cld
push
push
push
mov
rclb
int
cmp
lock
insb
or
clc
xor
inc
ds
dec
or
pop
adc
adc
sti
jb
jl
aad
and
imul
xchg
add
push
push
xchg
sub
jns
jle
cltd
sub
xor
pusha
pop
and
arpl
aas
shll
fldenv
dec
rclb
pop
push
in
nop
scas
in
mov
scas
sti
xor
xor
shrb
into
push
inc
out
cmpsl
lds
test
in
jne
sbb
or
insl
popf
jae
cwtl
lret
popf
push
push
pop
mov
push
jmp
mov
into
sub
mov
stc
cmc
sbb
clc
fildl
mov
xor
popf
pop
imul
cwtl
lds
jae
in
sub
mov
das
dec
je
enter
pop
ret
sbb
mov
fwait
cltd
ss
shlb
les
pop
pop
sbb
add
jp
or
decl
or
stc
in
repnz
dec
je
leave
loopne
jle
and
mov
mov
out
dec
cltd
es
call
jne
push
rol
int
and
and
fstp
out
jge
pop
and
cli
cmpsl
add
or
repz
outsl
fistpl
fwait
or
xor
dec
mov
andnps
or
test
gs
and
mov
aaa
mov
or
out
add
outsl
add
mov
cmp
mov
xor
xchg
loop
fistpll
inc
mov
cld
je,pt
daa
lret
pop
add
roll
push
inc
push
push
jne
jns
inc
and
jp
pop
pop
std
add
jns
sbb
xchg
push
lds
xchg
fisttpl
je
pop
xor
insl
jb
push
outsb
jmp
push
out
das
pop
add
pop
lcall
mov
test
add
xor
aas
cmpb
mov
mov
adc
iret
add
xchg
inc
fmuls
je
mov
pop
mov
fwait
pop
jo
aaa
mov
and
xchg
popa
lods
repnz
in
mov
inc
jmp
push
in
fstps
mov
or
sarl
in
sbb
adc
das
in
sub
fsubrl
pusha
jg
rcrl
mov
or
aaa
clc
repnz
or
cmp
gs
pop
jmp
push
out
sti
jnp
mov
cmp
int
sti
mov
pop
lret
xorl
frstor
fnstsw
push
aam
push
cmp
sbb
xchg
and
pop
cltd
dec
rcrl
int
pop
add
add
push
push
rolb
xlat
imul
xorl
lds
imul
push
push
mov
cmp
div
jbe
jne
out
ficomps
mov
mov
or
lock
jl,pn
loop
shrl
or
mov
call
or
dec
bound
roll
les
push
fldcw
gs
sub
dec
aas
loope
jb
daa
call
mov
repnz
sbb
pop
add
testl
sbb
enter
loop
out
push
sub
pop
mov
jne
dec
ret
cltd
lret
out
cmpsl
inc
aaa
jge
jne
in
enter
pop
ja
xchg
enter
push
cs
lock
push
sbb
leave
xchg
push
mov
pop
mov
test
aaa
mov
dec
xchg
int3
push
dec
pop
mov
xorb
inc
das
mov
jg
mov
pop
into
sbb
ja
sbb
dec
nop
mov
cld
out
shlb
jl
insl
sub
mov
orb
ljmp
mov
jg
fwait
push
cltd
xor
jns
outsl
int
out
pop
pop
cs
push
mov
ret
int3
dec
aas
pushf
mov
mov
cmp
sbb
outsb
mov
or
mov
call
sub
shll
sahf
lcall
mov
or
sub
lea
js
test
cltd
pop
out
lcall
sub
not
add
mov
sbb
imul
mov
lods
push
test
clc
pop
out
cld
sbb
stc
arpl
shrb
jl
icebp
cmp
std
pop
xor
out
mov
and
pushf
out
push
xchg
test
adc
notb
cmp
mov
mov
dec
outsb
sub
cmp
mov
cltd
push
ret
cmp
pop
cmc
add
mov
mov
ret
mov
repz
jg
lea
cmpsb
jne
mov
push
and
sub
and
scas
out
cmp
popf
cmp
cld
fmul
inc
dec
testb
sar
pop
js
and
jns
jns
mov
ss
pop
or
fisubrl
icebp
lods
in
mov
pusha
xchg
sbb
adc
adc
test
lahf
pop
inc
out
leave
inc
mov
xlat
in
shlb
pop
lods
dec
mov
ret
xlat
pop
pop
addl
jns
mov
lea
pop
xorl
adc
jns
popa
mov
inc
into
cmp
mov
mov
pop
sub
cs
mov
inc
xchg
notl
pop
inc
iret
fs
jo
push
xorb
dec
in
jp
inc
data16
std
xchg
dec
out
adc
ss
fcomps
pushf
mov
daa
popf
pop
sub
or
push
adc
cmp
in
lret
xchg
inc
and
das
cmp
outsb
mov
pop
mov
mov
mov
lret
cmp
icebp
sub
push
lods
inc
pop
pushl
xlat
dec
fwait
test
push
repnz
add
arpl
cs
pop
jo
ds
or
pop
xor
cmpsl
jae
cmpsb
xor
ljmp
push
aad
mov
outsb
xchg
sbb
dec
xchg
repz
sub
jg
fcom
movsl
lcall
filds
lret
jmp
mov
mov
sbb
mov
xchg
sbb
cmp
sub
or
ljmp
adc
jae
mov
inc
xor
pop
add
mov
popa
push
fwait
pop
xor
cmc
cwtl
nop
xor
mov
fisubrs
dec
lret
cmp
psadbw
mov
push
test
cs
shl
adc
sub
jno
add
add
and
mov
mov
data16
push
js
sub
mov
out
inc
or
jmp
insl
fsub
repnz
xchg
mov
jns
fsts
mov
xchg
mov
data16
sbb
inc
icebp
sbb
test
bound
cli
jb
xor
jb
aaa
lahf
test
mov
and
fdivl
jns
inc
mov
xlat
mov
xor
js
add
add
and
inc
mov
vmovss
jge
idiv
sub
sub
stos
test
mov
imul
dec
pushf
cmp
mov
adc
ret
shll
aam
rcrl
xor
arpl
sbb
je
push
pusha
cmp
cmpsb
inc
and
pop
dec
je
loopne
mov
sbb
sbb
aad
int3
push
jle
push
mov
xchg
xor
push
xor
xor
cmp
dec
outsb
daa
mov
in
and
call
cmovbe
rclb
jecxz
movsb
rolb
popf
test
adc
data16
xorb
or
mov
insl
pop
xor
mov
ret
adc
mov
push
jns
stos
mov
js
push
es
out
sub
mov
icebp
leave
sarl
jno
inc
nop
cmp
adc
or
xor
xor
inc
mov
outsb
ficomps
popf
adc
push
sub
cmp
pop
cld
push
add
test
fwait
mov
out
push
jnp
dec
sub
xchg
xor
sub
ret
leave
rolb
jae
and
enter
inc
rolb
push
cltd
xchg
int3
jno
adcl
test
jo
repnz
push
mov
loopne
pusha
addb
aas
add
xchg
int3
jg
cli
pop
pusha
mov
add
inc
cmp
repz
or
scas
test
xlat
jmp
pop
pop
je
test
lret
mov
push
aas
lcall
jle
arpl
and
movsb
lcall
fstps
std
adc
jle
cmp
sbb
das
mov
mull
xchg
lock
cmpsb
mov
mov
inc
fcmovnbe
jmp
test
leave
sub
cli
into
and
js
int
jns
mov
inc
jno
ret
sbb
mov
adc
mov
in
aaa
rcrl
add
test
es
ror
mov
lds
stos
xorl
lcall
push
lret
push
push
push
scas
das
movsl
ret
xchg
lret
cmp
dec
xchg
pop
mov
mov
je
mov
imul
pop
cwtl
test
in
push
inc
add
hlt
jnp
mov
sub
mov
pop
xlat
pop
sub
sbb
dec
inc
dec
out
icebp
rcrb
and
add
cmp
cli
lcall
inc
pop
mov
jl
dec
jg
imul
enter
inc
xor
adc
dec
aad
adc
lahf
mov
subl
es
xchg
cmp
adc
ja
in
hlt
jmp
cli
xor
fisubrs
sub
jecxz
mov
call
daa
gs
pusha
adc
lock
jbe
divps
xlat
in
xchg
mov
ljmp
ja
sub
push
add
jmp
lcall
xchg
mov
push
fisttpl
sub
sub
lahf
insl
rcrl
ret
out
cmp
mov
fs
ss
rcrb
cmpsl
ljmp
lret
gs
lahf
cltd
add
fldt
or
add
push
testl
lahf
jl
repnz
inc
sbbl
insl
aam
popa
jno
data16
sbb
xor
adc
xchg
ret
jecxz
fsubr
sbb
imul
ja
push
inc
push
es
scas
iret
xchg
jae
scas
jo
stos
jp
ficoms
push
xor
and
or
or
sbb
dec
xchg
pop
cld
add
cld
in
xchg
mov
xchg
clc
dec
mull
xor
test
sub
decl
je
pushf
cmp
addl
popf
mov
daa
in
add
pop
mov
cltd
js
pushf
outsl
mov
jmp
in
jge
notl
movsb
sbb
adcl
loopne
pop
adcl
xchg
xchg
fwait
jnp
jae
mulb
add
pop
arpl
sarl
aad
insl
test
add
fidivl
xchg
call
dec
and
lahf
xor
mov
lock
outsl
dec
aam
fistpl
mov
push
cmp
mov
fs
push
in
cmp
adc
mov
mov
sbb
dec
out
push
clc
ror
rclb
inc
icebp
fidivs
push
shlb
jge
adc
mov
mov
fxch
test
inc
daa
mov
xchg
ja
jge
sub
scas
cmp
sub
out
into
mov
aad
sbb
add
aaa
push
mov
jne
mov
and
sub
push
enter
iret
adc
loope
push
test
push
orl
loopne
pop
into
lahf
fwait
sbb
cmp
mov
cmpb
ja
push
push
push
std
xchg
loopne
push
mov
mov
pop
lock
mulb
jg,pt
rcl
pop
push
mov
lock
jb
outsb
lahf
sub
shlb
in
ror
repz
enter
ret
pop
xchg
xor
nop
cmp
cld
iret
mov
pop
jno
fdiv
das
mov
jnp
popf
xchg
in
sbb
push
cltd
add
movsb
cmp
dec
repnz
popl
loope
stos
xor
xor
push
jb
push
pop
sub
sub
cli
cmp
jo
xlat
inc
in
in
xchg
xchg
int
lret
negl
and
data16
or
fbstp
jge
fwait
out
mov
faddl
jo
adc
cmp
bound
xchg
sbb
ja
pop
iret
jmp
inc
movsb
push
xchg
test
adcb
push
shll
adc
aam
pop
cmp
shrl
and
cmpsl
int
das
mov
adc
test
dec
lret
out
imul
in
add
xor
xchg
push
add
mov
repz
add
lock
jp
aad
int
mov
sbb
jle,pt
sbb
xlat
mov
in
xchg
xor
aas
pop
jecxz
out
les
ds
mov
icebp
dec
fldlg2
imul
inc
pushf
lods
lods
ret
pop
int
imul
mov
jg
daa
inc
out
repnz
aad
mul
jbe
xchg
arpl
leave
fisubl
call
push
dec
or
icebp
mov
cs
adc
lret
cmp
jae
pop
add
adc
popf
mov
lar
cli
mov
mov
mov
cld
shr
je
mov
inc
xlat
or
insb
dec
jl
aaa
dec
daa
lahf
mov
leave
pop
gs
pop
mov
rclb
jns
std
imul
push
inc
inc
jne
add
ss
adc
ret
cmpb
clts
sbb
lcall
jb
movsb
push
jecxz
push
nop
and
mov
cmpsb
lsl
rolb
arpl
cmp
jmp
inc
inc
push
cmp
ret
adc
or
pop
dec
ret
inc
lret
in
pop
stos
xchg
and
mov
adc
lret
xchg
lea
repz
cmpsb
nop
test
push
lret
ret
pop
dec
jl
scas
and
and
das
inc
addr16
enter
loop
pop
and
add
repz
imul
pop
or
das
roll
lock
fs
daa
mov
rorl
mov
jmp
push
nop
xor
fwait
decb
mov
add
cmc
add
fildll
mov
stos
jbe
mov
pushf
push
lods
mov
ret
mov
cmp
add
into
cwtl
dec
sahf
pushf
mov
cs
lcall
sbb
jg
xchg
dec
push
int3
shlb
sbb
in
push
sub
out
push
scas
inc
add
aaa
mov
int
dec
lahf
xor
push
and
insb
or
mov
sbb
adc
cs
add
and
xchg
insb
cmpsb
sub
mov
les
jae
mov
xor
in
add
or
in
xlat
pop
hlt
clc
test
pop
or
push
push
lahf
cmp
mov
jmp
push
mov
js
add
adc
shlb
nop
cmp
inc
sbb
inc
and
mov
xchg
in
rcrl
call
adc
and
js
iret
in
out
mov
ud2
mov
fsubrl
fs
int
scas
or
ds
push
add
out
cmc
cmp
push
adc
mov
mull
xchg
mov
pushf
pop
ljmp
pop
or
insb
jno
push
xchg
test
dec
push
xor
jle
test
xchg
xchg
or
cmp
in
data16
movsb
jnp
outsb
xor
rcl
inc
imul
xor
jp
cmpsl
test
xchg
and
mov
xchg
cmp
jge
dec
fucom
test
rclb
lahf
repz
sarb
mov
jp
adc
jns
and
movsb
out
bound
sbb
push
mov
adc
xchg
lahf
and
add
mov
cs
mov
adc
cmp
mov
dec
in
mov
stos
inc
fists
sub
aas
xchg
cmp
pop
xor
cld
int
jno
and
cltd
xchg
mov
jne
lods
cmp
or
fisubrs
in
xor
push
cmc
inc
dec
adc
imul
or
shll
insb
pop
es
idivb
dec
cmpsl
test
xchg
mov
lock
sti
popf
dec
jbe
push
lret
xor
lcall
jg
pop
inc
and
movsl
loop
xchg
pop
jge
fnstcw
imul
das
jge
fwait
mov
jmp
pop
add
push
push
mov
pop
dec
dec
adc
in
pop
xchg
mov
or
jl
filds
lock
pushf
cmp
xchg
push
mov
stos
js
scas
mov
test
mov
sti
cltd
mov
dec
pop
push
push
inc
jbe
in
iret
mov
mov
es
cmp
and
mov
mov
mov
out
fsubs
pop
pop
insb
mov
subl
int3
rclb
pop
das
and
xor
aad
decl
jge
mov
adc
jl
inc
popa
roll
cmpb
pop
outsb
xchg
pop
mov
out
mov
lods
inc
jno
push
mov
or
cmp
add
mov
cmp
je
daa
push
mov
mov
xchg
test
xchg
es
lds
call
dec
xchg
fwait
in
jbe
xchg
lods
xchg
sub
pop
pop
dec
dec
ds
std
cmp
test
jp
int3
xor
adc
movsl
shll
subl
push
add
xchg
xchg
cmp
mov
mov
popf
stc
loop
sub
int3
mov
andb
lret
loopne
push
lret
pop
imul
hlt
fiadds
es
rcr
out
jae
and
mov
mov
fnstenv
fisttpl
outsb
aas
or
push
test
mov
add
outsb
rcrl
shrb
dec
mov
push
push
or
cmc
inc
jp
idivl
adc
leave
or
ljmp
rclb
sbb
in
jecxz
xor
cmp
mov
xchg
pop
cltd
sbbb
insl
enter
pop
leave
pusha
test
cmp
pop
dec
insl
mov
dec
adc
lahf
cmp
jae
mov
int
jb
int
outsb
pushf
std
lds
je
ds
addr16
xor
or
add
sub
xor
xchg
fucomp
shrb
ret
jae
and
data16
add
sub
fwait
and
imul
scas
pushl
pop
idivl
push
scas
xlat
xor
cli
mov
inc
sub
aam
xlat
fbld
icebp
add
jbe
jno
mov
xlat
fs
stc
cmp
push
stos
movsb
mov
mov
repz
jp
cltd
nop
leave
sahf
arpl
out
sub
fnsave
pop
jl
lret
lahf
out
push
mov
sub
pop
fdivs
xor
test
xchg
hlt
std
pop
fcompl
pop
cltd
inc
cltd
inc
loop
dec
js
nop
xlat
mov
int
xlat
dec
dec
and
pop
pop
fs
adc
divb
int
cmp
lea
pop
add
int
xchg
and
xor
dec
fists
addr16
inc
mov
pop
xchg
aad
add
mov
xchg
aaa
mov
xchg
xor
nop
jo
in
jg
lock
jl
movsb
out
je
inc
fisubl
stos
add
xchg
add
loopne
xchg
fsubl
outsb
jns
andl
in
outsb
js
sbb
and
lcall
outsb
push
jo
cmpsb
inc
js
adc
inc
adc
jmp
or
fstl
test
mov
add
push
sbb
pusha
fistl
adc
inc
ret
cmp
jne
inc
mov
xchg
lret
xchg
fildll
fldl
and
loopne
movsb
sbbl
mov
xchg
inc
sbb
pop
xchg
cmpsb
push
inc
loopne
push
rcrb
inc
sarl
call
sbb
outsl
lahf
neg
jae
stos
pop
xor
lods
mov
mov
mov
outsl
imul
sub
roll
test
in
mov
inc
dec
xchg
loop
xchg
pop
add
mov
push
inc
movsb
jp
xchg
mov
xor
pop
shrl
fstps
pop
jbe
mov
pop
lods
mov
scas
std
adc
and
rolb
int3
lcall
fwait
inc
jg
leave
xor
pop
rclb
fwait
loop
clc
push
xchg
sbb
or
imul
sub
cmc
add
call
std
mov
mov
andl
cltd
dec
rorb
repnz
cld
push
arpl
movsl
sbb
ret
pop
fimuls
sbb
lea
pop
pop
jbe
stos
push
inc
mov
addl
js
cli
rcrl
pop
sbb
cmpsb
fmul
sub
push
mov
les
xorl
mov
xchg
lcall
lods
jp
sbbl
ret
inc
sti
out
cwtl
lea
in
imull
lcall
cmp
out
enter
xchg
adc
repnz
ret
xchg
icebp
addr16
addl
imul
sub
jecxz
addb
xchg
mov
in
add
jbe
insb
ja
sbb
cli
xorl
data16
cwtl
xchg
data16
lret
xor
lods
outsl
mov
shlb
test
jl
pop
aad
fsubs
pop
pop
push
jg
push
adc
push
movsb
fsubrl
inc
xor
mov
adcb
xor
push
pop
xchg
mov
sub
xorb
pop
jecxz
dec
mov
arpl
jge
sub
repnz
movsb
xchg
cs
xchg
xchg
xchg
nop
xlat
je
in
insb
cli
push
pushf
pop
pop
jae
pop
pop
mov
xorl
daa
push
hlt
fs
push
and
aas
je
jg
fists
xor
int3
cmp
lods
shlb
dec
sbb
mov
xor
test
pop
xchg
sbb
int3
movsb
mov
in
stc
jp
imul
pop
dec
inc
imul
gs
stos
loopne
mov
in
mov
cwtl
add
xchg
sub
pop
pop
fmuls
in
fsts
add
test
scas
icebp
test
addr16
mov
lcall
mov
fbld
aaa
add
lcall
push
mov
jmp
int
fmuls
mov
push
lock
jle
call
add
cmp
subb
orb
daa
and
ret
mov
jb
cmp
pop
xor
and
aam
das
popa
xchg
sbb
push
lret
int3
cmp
jb
and
les
cmp
lcall
sbb
mov
sbb
mov
or
push
add
lret
or
cmpsb
leave
fisubs
pop
sahf
xchg
lret
hlt
jns
out
adc
adc
xor
xchg
sahf
jmp
in
add
ss
leave
mov
testl
adc
pop
inc
mov
cmp
sbb
jmp
movsb
mov
dec
sarb
das
lea
sub
pop
mov
adc
bound
fsubr
or
sbb
pop
push
pop
and
jecxz
ficoml
cmp
add
outsb
dec
fwait
in
icebp
mov
sub
xchg
fs
out
loope
addr16
sbb
xor
cld
or
faddl
xor
jle
shll
and
rorb
shll
enter
arpl
sbb
ret
ret
outsl
das
mov
pop
dec
test
imul
rorl
lock
dec
stos
aaa
test
mov
repnz
xor
pop
repz
stos
pop
gs
pop
adc
inc
ljmp
pop
stos
int
push
sti
sub
adc
xchg
sar
cltd
fs
jg
add
mov
decb
push
jno
mov
push
testb
in
dec
pop
mov
stos
pop
sbb
sbb
lcall
repnz
call
jle
add
aam
lcall
mov
cmp
dec
fimuls
test
push
mov
mov
sti
repz
cmp
mov
or
adc
roll
jp
lock
jg
sahf
mov
dec
cli
filds
daa
and
jbe
push
repnz
and
pusha
push
adc
xor
jmp
sub
and
lods
mov
mov
cmp
push
push
stc
fistl
inc
inc
jne
jp
cwtl
sub
test
mov
pop
cwtl
adc
add
pushf
mov
andb
jmp
mov
add
lahf
pop
rcrb
aam
mov
gs
push
pop
pop
xchg
xchg
clc
mov
mov
mov
call
jl
cmp
sbb
cli
lcall
jmp
dec
dec
popf
notl
ja
outsb
lea
mov
push
jge
mov
cmc
icebp
into
push
adc
testl
jns
cmpsb
in
mov
mov
cmp
jnp
jmp
gs
push
xchg
les
xor
push
dec
add
rcl
lret
adc
push
mov
mov
and
dec
outsl
mov
jp
fwait
adc
outsb
pusha
js
decb
adc
mov
pop
and
js
je
add
xlat
out
int
dec
cmp
dec
mov
add
in
ret
negl
and
inc
jg
mov
adc
rcrl
lcall
sbb
xor
push
dec
lret
lret
int
mov
jnp
jmp
jbe
xor
xchg
pop
popf
push
jae
mov
das
dec
xchg
mov
or
sbb
imul
adc
push
ret
in
sub
and
sbb
and
in
jmp
mov
outsb
sbb
stos
push
pop
cmp
lahf
scas
mov
push
mov
movsb
or
inc
sub
or
cld
xlat
ljmp
inc
out
insb
pop
push
cmp
xchg
cli
imul
adc
dec
xor
mov
sar
cwtl
js
lods
test
mov
loopne
movsl
in
addr16
or
pop
add
dec
popf
out
mov
mov
mov
ret
ret
mov
loopne
adc
cmp
mov
xchg
mov
jmp
dec
adc
scas
arpl
mov
testl
mov
mov
push
and
dec
and
lahf
pop
xchg
adc
push
add
stos
mov
aad
fucomi
nop
dec
sub
nop
int
addl
hlt
pop
add
add
sbb
fistl
call
xchg
repnz
push
sarb
inc
xchg
cltd
loopne
pushf
xor
xchg
mov
sub
jno
fistpll
xchg
arpl
sbb
shrb
repz
movsb
movsb
rorl
arpl
inc
mov
xlat
mov
outsb
jl
xor
pop
inc
push
loope
push
mov
scas
lds
out
sub
pop
xor
fstl
addr16
add
jl
call
cwtl
addl
sbb
and
push
sbb
test
cmp
jo
mov
test
adc
push
add
adc
pop
lds
jne
cmp
dec
mov
inc
cltd
xchg
jne
dec
call
pop
mov
ror
cltd
test
les
push
shlb
xchg
inc
jae
and
mov
push
lds
jnp
pusha
mov
dec
adcb
xchg
sub
pop
and
dec
add
adc
shl
pop
and
data16
cmpb
lods
inc
clc
mov
sbb
loop
mov
bound
add
hlt
repnz
pop
cmp
inc
dec
stos
xor
sbb
sbb
stos
xor
sahf
mov
lcall
outsl
push
pop
xchg
lahf
andl
int3
ret
imul
sbb
mov
outsb
adc
or
push
pop
lods
lock
sbb
divb
cmp
jbe
inc
mov
insl
jecxz
inc
cmp
sub
add
xchg
adc
push
lret
jle
dec
popf
stos
das
cld
mov
je
cli
mov
and
push
mov
test
dec
xor
inc
mov
fidivl
fidivrs
adc
adc
adc
into
and
inc
gs
cmp
fs
std
test
enter
xchg
data16
cmp
jge
push
test
dec
sarl
xor
icebp
loope
cwtl
inc
jmp
imul
adc
push
fadds
popa
rcrb
xor
adc
push
pop
cmpsb
sbb
imul
push
loopne
gs
push
and
sub
dec
iret
out
imul
mov
das
popf
fstl
push
daa
mov
ja
incb
inc
mulb
push
outsl
fistps
jp
lcall
fisubrl
xchg
repnz
dec
mov
pop
xor
xchg
xchg
xchg
test
add
cwtl
lcall
mov
aad
dec
dec
pop
jecxz
jo
test
push
pusha
add
fidivl
mov
mov
jae
cs
jg
test
sub
push
rolb
add
cltd
jbe
mov
daa
shll
aaa
repz
aad
xor
pop
pop
inc
adc
cld
mov
mov
dec
push
adc
mov
pop
mov
aaa
call
shrb
cltd
dec
sbb
loop
pop
notb
inc
inc
and
mov
and
repnz
lret
out
xor
test
xor
jecxz
push
addb
fnstcw
push
xchg
aam
jne
insl
inc
shll
pop
insb
fnsave
pop
pop
fs
sti
cmp
pop
push
shll
movaps
mov
cmp
cmpsl
cltd
int3
aas
add
insb
xor
mov
xor
xchg
cld
push
mov
xchg
bound
cmpsb
out
clc
ljmp
divl
xor
in
dec
fst
jne
sbb
int
push
movsl
jo
add
cltd
ret
iret
cmp
jb
mov
gs
scas
add
int3
js
stos
adc
mov
jmp
test
out
adc
or
fisttpll
call
jge
jmp
push
test
fildll
xchg
pop
popf
add
xchg
push
cwtl
lret
sbb
sub
aad
fisubrs
cmp
pop
push
jo
pop
out
push
mov
lods
mov
call
pop
cmpb
mov
loop
and
dec
mov
mov
daa
enter
push
inc
dec
into
jns
add
outsb
fsubr
mov
mov
mov
mov
addr16
and
aam
mov
xchg
add
pushf
dec
cmp
xor
sahf
mov
inc
lock
imull
jmp
push
fwait
aaa
mov
aaa
loop
lods
imul
mov
xchg
mov
push
jecxz
iret
in
push
inc
ljmp
lahf
insb
mov
jecxz
cmp
jle
in
xchg
mov
jecxz
mov
fldl
mov
aam
dec
sbb
mov
xor
or
xor
popf
es
sub
push
movsl
mov
xchg
mov
lods
fwait
movsl
test
inc
jb
pop
and
xchg
les
or
add
pop
and
mov
jnp
jge
add
xlat
dec
jo
cwtl
incl
nop
and
shlb
pushf
jg
pushf
addps
rorb
jg
pop
test
mov
out
mov
push
pop
sbb
pop
inc
aas
test
xchg
push
cmp
ljmp
aas
fcoms
pop
mov
out
iret
lds
rorl
andb
fxam
fidivl
push
cltd
or
mov
mov
jae
jnp
push
ds
pop
cli
fistl
pop
shrb
lods
xchg
xor
jle
sub
mov
js
mov
mov
dec
jo
xor
xor
dec
fwait
in
pop
add
push
jg
pushf
movsl
mov
xor
cmpsb
cld
cmp
pop
pushf
bswap
cmp
xchg
cmpsl
bound
pop
mov
ljmp
mov
popa
add
bound
dec
test
mov
push
stc
jp
cmp
inc
mov
push
inc
mov
jle
inc
inc
out
dec
mov
ficomps
fidivrs
cld
loope
fidivrs
popa
push
divb
insb
inc
add
dec
aaa
jne
fbld
test
dec
jae
xor
enter
xchg
out
fdivp
pop
jae
daa
adc
clc
add
sti
jecxz
add
xor
int
xchg
aaa
add
lcall
cmp
aas
cmp
mov
iret
out
int
sbb
loopne
std
cltd
leave
pop
adc
mov
js
sarl
inc
inc
push
notb
bound
outsb
fsubrp
xchg
les
xchg
addl
and
jecxz
push
daa
cltd
mov
out
mov
add
push
dec
pop
dec
push
pop
xchg
push
fildll
xchg
cmp
sbb
rcl
sub
push
sub
dec
addr16
sbb
in
fwait
pop
xchg
fsubs
xchg
jecxz
divl
inc
mov
mov
cmp
xchg
xchg
cmc
jp
int
pop
pop
ds
sar
adcb
mov
aad
mov
movsl
mov
xlat
movsl
mov
ss
pop
mov
ljmp
repnz
inc
pop
sub
in
pop
gs
inc
pop
addr16
push
scas
lods
flds
repnz
mov
dec
push
jae
and
sbb
in
sbb
clc
jmp
sub
push
gs
out
add
jo
aam
scas
jmp
rcll
push
or
xor
rcrl
mov
xor
rorl
das
xor
daa
pop
sbb
sahf
fldl
repnz
inc
xor
sub
adc
fcmovbe
adc
cmc
adc
sbb
adcb
test
inc
xchg
xchg
mov
jmp
sub
fisubrs
out
xor
fsubrp
int3
or
lahf
rcrb
dec
call
mov
mov
jbe
stos
ja
sarl
aaa
xlat
fstl
xchg
jb
mov
jg
fsubs
and
les
push
scas
mov
frstor
loopne
mov
cmp
mov
ret
adc
popa
adc
jo
dec
inc
jl
or
shr
lods
mov
mov
add
push
jmp
adc
fs
ds
or
mov
sbb
lahf
iret
ljmp
jne
jbe
adc
cs
and
cmp
fildl
mov
das
rcrl
inc
bound
fs
sub
enter
fistpl
adc
pop
lret
adc
dec
dec
adc
je
jge
inc
jge
movsb
cwtl
adc
out
adc
push
lods
pop
sub
enter
xor
ja
push
sub
mov
stc
inc
js
inc
xor
jb
mov
mov
and
cld
and
stos
shl
mov
adc
pop
xchg
js
dec
lahf
jno
stos
xchg
adc
jmp
pop
push
iret
aaa
add
cmp
mov
pop
ljmp
or
jle
or
push
jns
orb
push
out
mov
call
into
sub
imul
daa
movsb
cltd
fistpl
mov
lds
aam
loope
mov
fs
out
fs
add
mov
pop
lods
test
in
imul
xor
mov
movl
dec
das
test
inc
insb
mov
pop
sbb
negb
xor
and
cmc
dec
and
xor
dec
ja
mov
mov
xchg
js
ds
sbb
iret
dec
sbb
add
jo
xchg
call
push
xchg
das
dec
sbb
dec
sbb
jb
xlat
xor
cmp
fistps
ljmp
xchg
jne
xchg
and
loope
xchg
cwtl
je
adc
sub
rcl
enter
jmp
lahf
ffreep
scas
aam
mov
enter
jg
push
imul
mov
pop
sti
inc
sbb
inc
subl
bound
mov
or
inc
dec
jle
sbb
ret
ja
fildll
cmp
cmp
outsl
xchg
pop
xor
push
lcall
inc
push
out
movsl
mov
rcrb
mov
xchg
adc
jnp
bound
cmp
sbb
or
mov
xor
push
cmp
ss
pusha
roll
lods
xchg
nop
mov
or
mov
ljmp
adc
je
out
int3
mov
stos
pusha
push
sbb
dec
ret
sbb
aas
js
push
clc
mov
mov
jb
imul
enter
mov
sti
scas
cmp
inc
and
xchg
out
push
popa
push
flds
pop
out
jb
push
fmul
sub
mov
out
sbb
or
cmpsl
xchg
jne
out
shl
dec
mov
or
dec
dec
xchg
hlt
xchg
mov
data16
xchg
daa
fnstcw
ss
xor
ret
mull
jecxz
sti
pop
mov
mov
lcall
out
inc
insb
ja
outsl
mov
inc
pusha
push
and
mov
jns
test
orl
cmp
inc
icebp
push
scas
xchg
int3
scas
mov
or
into
in
repz
inc
ljmp
mov
pop
sub
cmp
popa
and
mov
or
sbb
push
sbb
pop
sahf
imul
cwtl
test
mov
cmpsl
sarl
sub
push
xchg
push
into
aad
jno
fmuls
inc
imul
xchg
ja
mov
push
xor
sub
inc
push
mov
xchg
jmp
pop
loope
imulb
sti
push
push
outsb
es
flds
repz
cmpsb
mov
and
test
and
dec
inc
push
push
push
mov
or
fmuls
std
cmp
mov
outsl
mov
push
jo
movsl
popf
jmp
and
dec
jno
jl
andb
ficoml
lret
ja
daa
fcoms
test
lret
push
enter
pusha
jne
mov
div
mov
cli
inc
loope
inc
jmp
sbb
lods
nop
and
dec
dec
push
daa
pop
jbe
in
insb
mov
pop
fcmovnu
leave
jno
inc
and
add
lds
mov
pop
xor
test
out
out
cmpb
or
add
das
lahf
loop
ja
lret
pop
vpshab
push
sbb
dec
mov
add
adc
out
ja
out
lahf
push
cld
fidivs
pop
jbe
neg
shlb
xchg
xchg
add
insl
cmp
imul
sarl
jns
shrb
sub
push
subb
inc
mov
or
ljmp
loopne
mov
pop
dec
addr16
clc
sti
dec
or
notl
aam
or
daa
popl
loope
pop
test
xchg
test
out
je
xchg
inc
cmpl
or
in
cs
fsubrl
pavgb
popa
inc
call
lar
and
repz
stc
icebp
insb
sahf
addb
sub
enter
xchg
nop
sbb
scas
gs
or
cli
jb
cli
mov
mov
and
jmp
testl
add
inc
mov
popl
imul
test
insl
sub
mov
cmp
pushf
add
int
test
push
adc
lmsw
push
sbbl
scas
pop
cmp
sub
fdivp
cmp
mov
mov
ss
mov
call
ret
xor
cmp
ror
xchg
or
out
dec
out
sahf
sub
aas
cmp
cwtl
out
pop
ficompl
aas
lods
lahf
jle
in
je
aas
jnp
ret
dec
arpl
call
insl
mov
xchg
jg
or
xor
or
call
hlt
sub
in
or
jge
stc
pop
mov
outsl
daa
or
popa
mov
imulb
lret
inc
mov
mov
mov
pop
in
cltd
es
xlat
sub
jmp
testb
adc
push
shrb
xchg
add
xchg
xchg
add
out
scas
clc
and
lcall
sub
sub
dec
jge
mov
jg
mov
inc
adc
xchg
pushf
sbb
call
add
xor
fst
fldl
iret
pop
fs
mov
pop
xor
stos
pop
adc
xchg
sub
push
xlat
or
pop
push
roll
mov
xor
insl
jns
push
jge
jge
xchg
xchg
fstpt
out
out
pop
lcall
mov
dec
pop
and
dec
out
mov
or
into
jle
aaa
jo
aad
out
jo
ret
inc
mov
in
roll
mov
dec
jmp
addb
ljmp
push
push
mov
gs
and
iret
xor
mov
ljmp
frstor
push
jbe
or
hlt
mov
pop
leave
pop
fidivl
and
or
jns
mov
test
lcall
jno
mov
cwtl
hlt
popa
xchg
xchg
mov
adc
xlat
js
and
mov
push
sub
movsl
insb
iret
lock
and
call
stos
and
vaddss
es
shrl
stos
mov
arpl
xchg
xchg
es
ret
stc
jg
sbb
cmp
cmp
ss
jo
call
mov
xor
lret
lds
sbb
push
inc
inc
lcall
or
mov
inc
stc
decb
pop
ds
jmp
int
dec
lret
or
mov
mov
test
inc
push
sbb
bound
xlat
mov
xchg
jg
xchg
push
scas
in
outsb
inc
test
xor
adc
mov
mov
inc
jmp
das
movq
stos
pop
xchg
jne
test
sbb
xchg
pop
or
add
mov
sbb
inc
pop
orl
and
jge
repnz
xor
jmp
or
insl
sti
mov
mov
sti
xchg
int
add
out
pushf
hlt
mov
pop
mov
push
lahf
mov
shlb
sbb
shlb
rclb
cmc
movsl
fwait
sbb
sub
leave
jp
jmp
push
ja
fldenv
mov
outsb
pop
int3
mov
push
xchg
or
sarl
cmp
cwtl
fisttps
push
out
arpl
jb
into
ljmp
pop
subl
cs
cmp
sbb
push
aaa
add
dec
and
or
test
jnp
mov
mov
jecxz
into
sahf
nop
inc
jno
insb
cld
lahf
popa
push
mov
xchg
rcll
xor
pop
cs
stos
imul
jb
js
js
in
jge
sti
push
cmpsb
ret
mov
xor
hlt
sbb
rcll
insb
jecxz
jae
xor
mov
imul
mov
and
xchg
or
mov
mov
int
pop
sti
pop
add
loop
push
blcfill
xor
cmpsl
jp
xchg
test
mov
aaa
adc
out
sbb
lods
sbb
scas
jge
inc
aam
dec
std
shrb
push
aas
jns
mov
xchg
aaa
shll
shr
notl
push
push
lcall
mov
xor
mov
mov
loope
push
xor
push
fucomip
or
cmp
or
stos
dec
pop
cmp
mov
inc
mov
testl
xor
fidivs
pop
aad
mov
cmp
popa
jge
sbb
ret
pusha
sbb
das
icebp
mov
inc
in
push
cld
push
pop
and
fwait
lock
in
cmp
in
test
mov
mov
fs
mov
cmpsb
push
jnp
inc
sub
pop
mov
aam
jnp
jmp
ret
and
xor
mov
ret
cmp
repz
inc
jno
bound
add
jmp
adc
out
insb
ljmp
jns
fisubrs
jns
in
pop
jg
xor
loopne
sub
adc
or
inc
dec
jbe
fldcw
sbb
incb
adc
aas
adc
mov
pop
mov
std
mov
adc
mov
ret
aas
ret
stos
lcall
filds
xchg
sbb
mov
add
jnp
in
loopne
mov
dec
in
cmp
jl
pop
mov
into
addr16
adc
mov
ja
stc
sbb
outsb
cld
popf
mov
clc
inc
and
call
inc
hlt
fadds
sub
xor
aas
or
mov
sbbb
lret
jmp
mov
adc
movsl
adc
lret
insl
mull
scas
jbe
xchg
inc
push
test
pushw
jmp
mov
pop
lock
jle
inc
and
push
ljmp
xchg
xorb
pop
push
leave
mov
mov
clc
pop
jnp
aaa
aaa
and
mov
sarl
or
stos
dec
or
pop
jmp
push
push
pop
shrb
mov
mov
out
ja
sbb
mov
push
int3
mov
ficomps
movsb
jo
sbb
or
shlb
jo
icebp
faddl
addr16
fs
data16
loop
inc
repnz
jae
ds
sub
fistl
mov
xchg
jae
les
stos
add
mov
lahf
push
mull
dec
addr16
inc
cmp
rorl
push
mov
mov
inc
fistpl
aas
push
rol
xorb
sbb
ret
dec
adc
dec
shlb
lea
sbb
aaa
jno
inc
icebp
push
in
stos
mov
or
mov
jp
pop
push
dec
push
or
mov
pop
aaa
pop
lret
daa
fldcw
add
les
jmp
adc
out
adc
mov
mov
nop
sub
gs
sti
inc
popf
push
sbb
mov
mov
shrl
adc
mov
out
mov
xchg
jne
lcall
jo
arpl
push
fistpl
test
mov
sbb
incl
es
aad
movl
dec
test
jns
repz
mov
pop
add
dec
mov
es
or
cmp
loopne
sbb
lahf
pop
ss
mov
stc
dec
loop
mov
andl
adc
sbb
aad
or
bound
pushf
inc
mov
cmp
test
addl
mov
pop
adc
fbld
cmp
movsb
jg
pop
mov
insb
loop
shll
or
ds
scas
push
stos
mov
pop
and
scas
sub
mov
xchg
aas
sarl
sub
adc
movsl
aas
std
dec
jno
int3
fisttpll
or
push
loop
xor
pop
testl
test
and
pop
scas
out
enter
es
mov
xlat
stos
add
jmp
js
dec
dec
mov
push
pop
or
loop
mov
inc
or
xchg
sub
cltd
in
mov
aad
faddp
pushf
cmp
sahf
daa
cmp
sbb
popf
jnp
icebp
imul
rorl
arpl
addr16
mov
scas
insb
add
enter
scas
test
je
fstps
iret
lcall
flds
faddl
xor
cwtl
mov
test
fnsave
jo
mov
ljmp
dec
mov
adc
xchg
push
pop
mov
inc
leave
movsb
and
rcrb
xchg
shrb
or
dec
fs
stc
shlb
lahf
push
cs
icebp
sbb
sub
sub
or
inc
push
mov
aad
ret
lret
xrelease
ret
dec
into
mov
cmpsl
icebp
cltd
jmp
and
sbb
outsb
out
popa
and
xor
push
loop
xchg
add
sbb
cmp
pop
das
adcb
cmp
repz
jg
pop
and
jo
mov
aam
js
mov
push
mov
cmpsb
orl
mov
test
push
test
in
icebp
jl
lcall
and
mov
clc
sub
mov
adc
dec
jbe
inc
add
add
test
sub
push
loopne,pn
xor
clc
ret
xchg
out
test
dec
and
mov
sbb
dec
mov
cmp
clc
out
push
mov
lods
ret
shrb
sub
pop
jle
out
and
ds
ss
pusha
cmp
jmp
sbb
negb
cmc
inc
enter
std
mov
sbb
fdivl
divl
hlt
popa
xor
mov
lea
rclb
mov
sbb
popa
jne
mov
call
movsb
cs
jo
addl
sbb
iret
adcl
lahf
push
push
adc
inc
scas
sub
jmp
daa
iret
mov
and
or
outsb
mov
cltd
cs
cld
push
and
mov
xor
sub
pop
jo
xchg
mov
dec
lods
mov
and
cmp
icebp
push
jge
inc
push
out
sbbl
mov
jns
dec
cmpsl
jmp
loope
lods
inc
xchg
inc
sbb
sbb
les
cmc
lds
mov
cmc
push
mov
inc
fidivrl
orb
xor
test
data16
test
add
add
lahf
dec
add
int3
cli
mov
sub
gs
pop
push
or
cmpsl
in
into
cmpl
addl
pop
loope
in
xchg
pop
imul
leave
and
adc
xchg
dec
sbb
or
js
aaa
cli
in
mov
test
mov
xchg
test
mov
mov
pop
sub
xchg
repz
loope
push
jno
mov
and
dec
inc
orb
cmpl
fbld
or
fidivrs
pop
ja
loop
lds
popf
inc
cmp
popa
and
outsl
fists
xchg
cmc
mov
in
test
aaa
loopne
rolb
stos
jl
test
lcall
mov
xchg
sub
loopne
lock
and
sbb
loop
lods
hlt
sar
in
or
aas
repnz
sub
mov
int3
lcall
and
roll
fisttps
sub
mov
pop
jmp
push
mov
clc
lahf
dec
or
cmc
jp
rcll
or
xchg
dec
jno
adcl
fdivl
ret
and
arpl
mov
lret
fistl
loope
repz
adc
imul
or
enter
sbb
cli
pop
xchg
rdmsr
stos
mov
test
imul
fs
icebp
push
lret
adc
adc
sbb
xor
in
repz
inc
push
lods
push
lahf
jp
stc
std
pop
sbb
rcll
outsl
pop
mov
push
nop
pop
dec
insb
int
mov
sub
jmp
and
fsubp
mov
ret
lock
into
iret
sub
lahf
inc
dec
js
int
jmp
mov
mov
adc
xor
sbb
xor
lods
push
repnz
mov
inc
pop
jo
sub
imul
andb
popf
dec
repnz
cmp
lds
es
adc
es
cmp
push
out
mov
sbb
stos
std
int
xchg
insl
fsubs
pushf
pop
pop
fsts
cmpsb
or
jae
inc
pushf
ja
mov
lods
jo
jg
mov
cltd
shll
data16
mov
rclb
add
mov
cmp
idivb
pop
dec
repnz
stos
pop
or
fsubs
cmp
dec
inc
clc
mov
push
cmp
pop
dec
fcomi
mov
lods
bound
mov
inc
loope
mov
jo
enter
sub
das
iret
inc
push
fldl
ror
enter
dec
jnp
cmp
pop
add
scas
push
sahf
mov
lcall
shr
leave
add
mov
mov
subl
push
mov
sbb
adc
dec
jno
ja
leave
shll
pop
movsl
add
sti
cwtl
pop
cld
xor
shl
or
cmp
inc
cmp
inc
scas
pop
dec
xchg
sbb
rcrl
and
lods
ljmp
out
leave
daa
std
mov
inc
ss
fisubrl
push
sbb
xor
jnp
sahf
or
stc
mov
aaa
movsb
imul
sbb
je
sbb
lcall
std
pop
sbb
add
push
fmuls
ficoms
push
mov
leave
loopne
test
mov
sub
cmp
lods
cmc
ret
lea
xor
rep
lods
pusha
fdiv
fsubl
andl
mov
int3
data16
dec
fwait
lret
call
add
movsl
mov
pop
aam
ret
add
inc
push
mov
xchg
lods
pusha
sbb
lock
outsb
sbb
pop
clc
xor
dec
pop
add
jne
cmpsb
and
ds
inc
pushf
fwait
cmp
data16
sbb
std
jno
out
dec
xchg
aam
sbb
or
inc
pop
mov
jo
pushf
xchg
and
std
pmaddwd
sub
or
push
movsb
xchg
out
icebp
push
orl
xchg
icebp
loope
xchg
dec
xor
or
aaa
or
add
sub
xchg
xchg
mov
pop
inc
cmc
pop
jns
xor
mov
cltd
push
lods
mov
les
cmp
mov
or
sub
repz
subb
and
jl
sub
ret
dec
or
int
mov
push
mov
insb
xor
mov
jno
mov
and
out
cwtl
mov
mov
push
cld
adcl
clc
mov
rclb
jno
mov
mov
sbb
add
test
add
insl
js
dec
mov
out
or
inc
inc
pop
testb
cli
sub
pop
jns
pop
out
imul
xchg
lret
mov
add
rorl
lds
jle
mov
or
ljmp
pop
sbb
jmp
push
les
inc
mov
jle
xchg
inc
int
repz
fcoms
inc
outsl
push
pop
imul
push
lret
lods
fwait
xchg
icebp
inc
add
pop
mov
into
cmpsb
dec
cmp
ds
das
sbb
xor
or
jecxz
adc
icebp
lret
mov
cmp
sbb
or
les
push
mov
loope
into
loope
sub
pop
sbb
or
shr
push
loopne
stc
inc
test
xor
std
or
sub
dec
aam
mov
icebp
jp
inc
stos
lcall
xor
pop
aas
leave
popf
sbb
ret
mov
out
stos
inc
mov
mov
dec
sub
pop
pop
insb
stos
add
int3
in
stos
mov
dec
mov
stc
xchg
shl
test
cld
aas
pop
in
scas
xchg
test
cmc
cmpsb
ret
jg
bswap
mov
aad
pop
xor
mov
mov
ret
bound
inc
out
pop
adc
add
nop
push
shlb
xor
outsb
dec
xchg
ret
aad
icebp
testl
aad
jle
inc
sub
sbb
fnstcw
sahf
sbb
lods
dec
fsubr
mov
subb
push
leave
mov
pop
adc
adc
or
mov
rclb
dec
lea
sbb
movsb
cmp
cmc
jmp
sub
inc
je
dec
hlt
sahf
iret
pop
push
lcall
in
daa
lods
mov
mov
loopne
mov
and
pusha
push
dec
mov
cmpl
shll
int
xor
cmp
xchg
dec
add
shll
mov
push
and
mov
inc
js
ret
sbb
cwtl
push
out
mov
jne
scas
push
lea
cmc
jbe,pn
push
fisttpll
cmpsb
push
jecxz
and
fldpi
loopne
add
sub
jg
mov
sbb
mov
and
out
test
or
shll
cmp
push
and
or
xchg
pushf
push
cmp
psubusw
cs
int
shlb
sub
mov
rorl
enter
add
sbb
outsl
push
sbb
flds
mov
or
push
pop
xchg
jns
stos
jle
or
mov
int3
jbe
ficompl
faddl
and
mov
or
xorl
mov
gs
cli
xlat
data16
insl
push
cmp
fxch
call
inc
cwtl
jbe
mov
mov
or
push
sbb
push
dec
iret
dec
dec
int3
mov
out
adc
dec
sub
jle
in
or
jmp
popf
gs
test
mov
push
pop
adc
sub
mov
or
sbb
push
mov
xchg
out
adc
jno
icebp
adc
dec
mov
xchg
test
stos
inc
cltd
pop
jl
ret
idivb
fwait
test
orl
mov
mov
cmp
xor
and
sbb
scas
call
cli
adc
jg
rcrb
outsb
dec
cld
loopne
aaa
ja
jmp
pusha
inc
test
pop
mov
ss
jmp
jge
ret
clc
jno
fmuls
push
ja
adcb
mov
in
iret
pop
jno
fsubr
pxor
sub
xor
jp
inc
cmp
scas
dec
in
loope
and
ja
frstor
shlb
hlt
mov
cmpl
test
bound
pop
mov
lods
sbb
das
in
xor
cmpsl
cs
pop
mov
mov
mov
or
pop
cli
cmp
sbb
push
mov
loope
mov
jmp
jge
in
mov
jns
sbb
mov
aad
push
push
and
mov
or
cltd
mov
pop
in
faddl
sub
loop
pop
stos
pop
insb
lcall
and
xchg
das
scas
push
fdivrl
lods
mov
lret
mov
lret
xor
jecxz
add
jg
inc
push
fildll
sub
andb
rcll
xor
addl
jo
push
ja
push
adc
test
xor
mov
push
mov
adc
pop
mov
int3
shrl
es
cmp
dec
xorb
fdivrs
inc
sub
add
outsb
fwait
pop
dec
xor
sahf
loop
out
fstl
in
inc
ds
mov
mov
mov
cltd
call
popa
adc
call
inc
add
in
clc
and
mov
inc
sub
xor
jno
insl
mov
into
pusha
xlat
mov
clc
cld
adc
loop
or
adc
mov
mov
jecxz
jl
aad
cwtl
push
lds
jl
pop
mov
repnz
in
add
pop
test
test
clc
stc
inc
mulb
push
in
xchg
push
mov
jbe
or
mov
sub
and
xlat
sub
push
inc
pop
or
and
testb
jecxz
push
test
jle
dec
sub
adc
out
xchg
mov
lret
or
ficoml
fildll
inc
insl
pop
lds
inc
nop
cmp
sahf
pop
push
fwait
testl
dec
xchg
pusha
or
sbb
out
adc
mov
dec
pop
in
in
mov
sbb
aaa
sbb
test
popf
push
sbbb
or
cwtl
jg
inc
loope
je
inc
roll
test
push
push
inc
into
nop
xchg
fidivrs
cmpsl
das
lret
mov
mov
mov
in
dec
xchg
mov
and
sbb
pushf
pushf
xlat
fiadds
and
inc
lret
or
movsl
mov
movsb
fisttpl
rep
jns
lahf
sbb
cwtl
out
popf
pop
ds
xorl
ljmp
lcall
pop
fcmove
cmc
pusha
pop
out
adc
fcompl
sti
call
sub
adc
add
adc
loope
lock
mov
rolb
xchg
aas
data16
push
loope
xchg
jne
imul
int3
add
jmp
pop
fists
cli
fsubs
cmp
inc
jl
pop
hlt
and
ret
xchg
xor
out
out
push
call
out
outsb
add
jns
sti
stc
es
pop
ss
leave
xchg
js
fsubr
pusha
loope
lea
pop
dec
mov
repz
jbe
sub
aas
xor
gs
mov
ljmp
jmp
dec
sub
outsb
sbb
fcmovne
je
mov
mov
jecxz
mov
insl
out
fistl
sahf
repnz
sbb
sub
jmp
dec
mov
push
js
repz
mov
shrb
rep
and
inc
jae
or
int
scas
lcall
test
cmp
mov
out
cmp
fistl
inc
mov
das
in
stos
mov
data16
mov
jo
inc
fdiv
rorl
xchg
sbb
ficoml
xchg
sbb
xchg
xchg
xor
jmp
mov
loope
mov
pop
or
out
fcoms
ror
or
jo
cwtl
out
add
xchg
adc
inc
cwtl
or
push
fiaddl
sub
rolb
or
jle
sub
mov
mov
xchg
jmp
fstpl
xchg
icebp
dec
jbe
test
jle
xor
cmp
ss
inc
mov
sbb
inc
jl
xchg
add
push
dec
or
scas
clc
aam
imul
lcall
test
xchg
xchg
xlat
mov
mov
mov
fnstcw
adc
add
mov
jne
mov
mov
sub
lcall
lods
mov
push
fdivrs
jns
adc
sbb
cmp
imul
xchg
push
mov
mov
imulb
pushf
arpl
fcomp
mov
cmp
jl
cmpsb
pop
pop
outsb
lret
push
push
pop
ja
int
ljmp
movsl
and
push
sti
sbb
jno
sub
add
dec
mov
mov
push
sub
sti
jl
xchg
das
insl
cs
pop
insl
inc
ja
jg
mov
mov
jnp
mov
and
or
shl
jecxz
adc
arpl
xor
or
jnp
pop
stc
mov
mov
push
mov
mov
jo
jge
xlat
inc
dec
lds
jl
mov
mov
jnp,pt
xorb
jo
jmp
popf
dec
cmp
dec
sbb
int3
shrd
pop
jno
cmc
imul
imul
sbb
ds
or
mov
inc
int
or
test
sti
jg
xor
jo
lret
popf
outsb
push
popa
mov
test
ret
push
dec
mov
xlat
xor
jbe
dec
enter
push
jg
mov
aam
mov
push
mov
gs
adc
rclb
mov
mov
and
lcall
push
mov
pop
fucom
es
std
inc
pop
jecxz
pusha
aaa
les
and
or
push
test
mov
push
cmp
or
mov
out
insb
pop
jne
jae
adcl
or
outsl
sub
mov
mov
addl
cltd
jmp
idivl
fsubrp
xchg
in
pop
lret
mov
jnp
sbb
repz
sti
xchg
int
dec
mov
in
mov
fucomip
idivl
add
ss
in
test
lds
aam
call
mov
fcoml
and
cwtl
pop
imul
pop
add
int3
das
aas
push
out
ljmp
xor
jb
mov
lret
push
movsb
test
ljmp
add
test
aas
cltd
mov
push
ja
add
xchg
jne
xor
adc
push
dec
dec
xor
dec
mov
cmp
lret
push
testb
mov
jmp
mov
push
jne
int
leave
roll
xchg
xchg
pop
test
cmpsb
xor
dec
test
pop
popf
int
out
popf
outsl
xor
xor
xchg
mov
iret
pop
lret
je
cmp
pushf
or
lahf
ljmp
dec
cwtl
xchg
cmp
fs
mov
mov
mov
andw
insb
jecxz
aas
mov
js
rclb
fwait
jno
movsl
push
jb
push
push
mov
xchg
loope
xchg
imul
inc
mov
xchg
pop
stos
fists
into
inc
add
mov
xor
jae
aad
neg
cmpsb
test
orb
outsl
xchg
out
adc
adc
xchg
or
cmp
stos
das
push
xchg
cmpsl
mov
mov
pop
adc
xchg
lds
jle
adc
loope
dec
inc
fsubrp
cmp
aaa
fbld
dec
lcall
imul
je
cmp
decl
mov
cltd
mov
mov
orl
inc
pop
pop
jmp
cmp
hlt
sbb
fisubrs
dec
xchg
add
xchg
xor
fxch
mov
out
push
rcl
push
rcr
sbb
pop
push
imul
or
out
adc
out
lret
out
xor
xlat
xchg
push
pushf
lods
cmp
jo
sub
sub
push
gs
js
in
inc
outsb
or
xor
mov
icebp
xor
mov
ljmp
adc
mov
cld
cltd
xchg
inc
jle
xlat
xchg
test
vpshlq
or
imul
or
lret
into
clc
push
jecxz
sub
ljmp
repnz
loop
sar
xor
push
xor
or
pushf
fs
jo
mov
cmpsb
enter
dec
cmp
jns
icebp
leave
rcrl
in
negb
and
test
push
add
jne
sub
xchg
sub
enter
adc
pop
loop
or
jg
or
ror
sbb
or
mov
and
or
jns
popa
mov
xor
jl
cmp
orb
call
loop
xor
or
cmp
sub
mov
mov
mov
aaa
dec
sbb
jbe
pop
enter
aam
push
mov
xor
mov
mov
out
jp
stos
out
loope
fimuls
fldt
push
jle
inc
in
push
dec
outsb
mov
out
les
jmp
mov
dec
aas
push
sahf
cmpsl
xchg
mov
mov
cmpsl
mov
fsubs
inc
inc
or
add
mov
adc
lods
inc
insb
movsb
lods
push
movsl
mov
add
imul
cmp
push
mov
pop
ljmp
cli
fimuls
xchg
ret
lds
pop
xor
jns
adc
pop
mov
adc
xor
loopne
dec
xor
sub
mov
cmp
rol
adc
xor
sbb
cmp
je
cmp
and
ret
adc
xchg
or
repz
js
add
mov
jp
xor
test
popa
ja
jmp
rolb
fcmovb
and
cmp
test
add
imul
dec
add
inc
jecxz
nop
sarb
xor
subl
xlat
pop
cli
cmc
fwait
ja
add
cld
sbb
lods
mov
push
mov
mov
cld
push
push
ja
in
mov
push
inc
fistpl
enter
vmovaps
adc
jae
pop
inc
and
sbb
in
mov
xchg
jp
add
mov
dec
test
push
push
mov
push
rcl
xchg
insl
push
popf
loop
sub
mov
sbb
testl
rorl
iret
sti
lret
and
sub
iret
push
mov
scas
dec
pop
fiadds
add
add
xchg
stos
mov
enter
mov
sar
sbbl
jge
mov
cwtl
mov
inc
std
loope
les
imul
loopne
pop
ret
push
ja
ja
lds
addr16
mov
add
mov
lcall
mov
sub
daa
cmp
clc
jne
mov
rcl
bound
push
jae
mov
insl
fdivr
repz
pop
roll
ret
push
cmpl
pop
sub
mov
and
outsb
jg
lds
dec
movsb
imul
aad
xlat
xchg
dec
mov
pop
xor
fildl
pop
mov
inc
add
pop
loope
cwtl
nop
arpl
sub
rcrb
lret
sbbb
shll
xchg
pop
dec
cld
fidivl
in
arpl
xor
mov
mov
mov
fimull
mov
out
out
jecxz
jge
mov
movzbl
dec
add
scas
pop
fstl
sarb
push
cmp
je
jmp
negb
cmp
imul
mov
int
jo
adc
mov
daa
movsb
popf
lock
daa
and
xor
mov
sbb
shll
adc
hlt
arpl
shll
lcall
jmp
mov
loope
fimuls
inc
dec
movsl
add
xchg
aad
jo
nop
mov
cltd
cld
pop
js
fistpl
nop
cmc
lods
out
call
mov
cmpl
dec
rcl
cs
add
xor
bound
adc
enter
or
sbb
mov
inc
add
out
mov
sbb
dec
pop
jle
iret
test
pop
jbe
xor
inc
push
jmp
repnz
scas
or
adc
std
cli
lods
mov
push
call
subl
mov
mov
sbb
lcall
mov
push
dec
mov
fsubs
jnp
cli
addr16
and
cli
test
ljmpw
in
cwtl
mov
icebp
add
xor
nop
pop
xchg
movsb
inc
jg
aam
xor
iret
jecxz
dec
dec
repz
mov
les
push
mov
or
pusha
jo
or
dec
push
adc
pop
roll
jns
idivb
xlat
ljmp
insb
fcos
ret
shl
loope
adc
addr16
sbb
or
pop
lds
ret
dec
xor
mov
jge
push
stos
sub
lahf
inc
jae
sbb
dec
dec
pop
inc
xchg
mov
rcrb
jbe
lock
test
ds
popa
call
ljmp
cmp
xor
mov
gs
and
mov
lods
cmp
subl
sbb
lret
mov
cwtl
push
in
sbb
mov
outsl
pop
enter
pusha
jb
dec
lea
sbb
adcb
cli
lcall
out
adc
cmpsl
jno
xchg
adc
push
aaa
sub
push
pop
test
mov
inc
or
pop
cltd
xchg
in
subl
mov
jae
dec
dec
jns
push
mov
add
leave
sub
mov
inc
dec
outsb
int
dec
cs
mov
xor
insl
xchg
test
rorb
lcall
inc
roll
mov
mov
imul
jg
in
out
and
cmp
pop
dec
cmpsl
jne
push
fisubrl
imul
cli
push
sub
scas
pop
ljmp
inc
push
mov
into
loop
inc
stos
mov
insl
push
push
movb
pop
lret
outsb
inc
pop
push
jle
cmp
fistl
aam
lret
pop
stos
sbb
jmp
inc
push
fwait
out
data16
aaa
je
adc
jno
in
inc
cwtl
loopne
sub
in
cmpsl
clc
xchg
xor
or
cs
cmpsb
repz
add
in
xchg
sub
stos
sti
stos
ljmp
jle
push
aas
xchg
cmp
mov
bound
dec
and
in
fnsave
and
mov
sub
xchg
push
repz
cwtl
aam
pop
push
adc
hlt
sbb
and
sahf
int3
cld
add
and
or
aad
sbb
pop
test
lea
lret
pop
fstpl
sub
test
add
rcl
rcrb
pushf
or
fstps
fists
lods
repz
test
ja
mov
sbb
stc
scas
push
out
inc
sbb
cmc
inc
sarb
jecxz
ljmp
fxch
out
out
push
mov
sarb
test
icebp
aad
and
or
dec
popa
dec
pop
mov
rcll
in
movsl
add
pop
sub
movsl
bound
or
dec
lods
pop
das
pop
mov
js
rcl
lods
xor
mov
mov
mov
lock
pop
dec
or
or
jne
sbb
popa
sbb
ljmp
jmp
out
idivb
mov
fisubs
xchg
xchg
mov
pop
loopne
test
xchg
xchg
arpl
pusha
mov
adc
cmc
sti
xlat
xchg
adc
or
gs
les
std
orb
lret
sub
js
call
jecxz
subb
jno
notl
push
scas
jecxz
mov
ds
adc
push
pop
adc
mov
inc
mov
aas
fcompp
pop
out
stos
divl
dec
mov
lods
aaa
push
mov
sbb
push
daa
int3
jle
call
or
sahf
jp
or
pushf
jmp
icebp
mov
mov
out
mov
jmp
ljmp
in
sub
jno
pop
into
mov
cmc
inc
pusha
rep
or
popa
arpl
cmp
andl
jecxz
mov
jns
iret
cmc
and
popf
xor
push
mov
iret
incl
test
and
mov
push
mov
repnz
mov
or
test
mov
movsl
xor
and
out
push
cmp
repnz
lds
jecxz
xor
pop
imul
pop
rcr
push
popa
int
aam
jge
xlat
xor
inc
aas
fcomps
mov
xchg
je
fstpl
rcrb
xor
mov
addr16
mov
fadds
adc
push
push
lret
cmc
pop
out
inc
dec
lret
dec
jne
mov
inc
mov
es
lcall
scas
shl
repz
push
cmpsb
fwait
call
or
adc
xor
cmp
cltd
add
jno
repz
or
scas
push
sbb
sbb
out
loopne,pn
adc
adc
das
jno
inc
pop
insl
xchg
fidivs
push
sub
lahf
das
mov
inc
xchg
mov
add
adc
je
dec
out
data16
mov
or
bnd
cmp
sarb
orb
mov
loop
jp
jmp
sbb
into
jecxz
sbb
lods
imul
test
lods
mov
cmp
or
add
cwtl
inc
xlat
or
icebp
mov
int
js
ret
clc
dec
xor
stos
insb
push
add
stos
aam
dec
adc
and
pextrw
push
xchg
sbb
xor
xchg
sbb
push
sbb
sarb
sub
push
addr16
popa
inc
xchg
call
pop
adc
inc
add
fs
addr16
stc
fucomi
add
aam
mov
decb
xchg
pop
rol
out
jbe
cmp
mov
mov
sbb
pop
jmp
and
push
imul
in
shr
push
cs
mov
out
dec
dec
insl
xor
pop
xchg
sbb
pop
add
scas
lock
test
fidivs
stos
fisubrl
jb
test
mov
push
adc
sub
ja
sbb
mov
les
inc
lret
pop
stos
mov
and
clc
mov
mov
mov
cltd
add
push
mov
lahf
xchg
cmp
mov
mov
push
xchg
push
xchg
shrl
out
mov
pushf
movsb
stos
fnstenv
movb
rolb
add
jecxz
jno
ficomps
adc
pusha
mov
add
or
popf
fiadds
lods
mov
nop
inc
mov
sub
push
xor
cmpsb
xchg
adcl
xor
xchg
lea
leave
movsb
pushf
sub
imul
ss
sbb
sbb
icebp
mov
loopne
push
fistps
lods
mov
jge
cmp
jp
mov
or
lock
add
movsb
dec
mov
ja
push
lahf
imul
mov
imull
iret
add
sbb
mov
inc
cwtl
add
inc
xor
sbb
ficomps
aam
loopne
push
jmp
lea
lahf
dec
icebp
mov
rclb
pop
out
sbb
xchg
cld
add
out
or
in
mov
std
das
dec
dec
dec
sbb
cmp
mov
enter
scas
fnop
pushf
cmpsl
mov
jge
jae
adc
dec
add
rcrl
xchg
int3
mov
popf
ficoml
push
adc
rorl
lods
xor
outsl
dec
ja
jnp
pop
pop
xchg
mov
rcll
push
cmp
stos
shlb
jmp
xchg
cmp
push
xchg
xchg
pop
jbe
daa
stc
into
dec
mov
jo
ficoml
rorb
aaa
mov
aaa
gs
andb
mov
clc
in
dec
pop
mov
sarb
mov
sub
xlat
ds
fcompl
and
mov
mov
sub
sub
fiadds
stos
xor
cmp
jecxz
cwtl
push
mov
jo
mov
dec
test
lods
jl
aas
xlat
sbb
xchg
or
orl
xor
inc
das
dec
push
jl
xorl
xchg
rclb
pop
xor
in
int
popf
in
inc
pop
fsubl
fldenv
inc
movl
and
sbb
test
gs
lods
pop
inc
adc
imul
dec
mov
cs
xchg
outsb
jbe
arpl
mov
in
jmp
dec
sti
mov
or
push
cmpsl
pop
inc
aam
data16
pop
push
mov
imul
movsl
or
sub
or
jnp
push
enter
dec
push
sub
cltd
push
sub
pop
push
fimull
in
adc
mov
add
sub
or
mov
arpl
addr16
xchg
gs
or
lret
sub
and
cmpsl
add
xchg
pop
inc
mov
xlat
call
scas
cltd
push
xor
sbb
daa
gs
fbld
xchg
mov
out
fldenv
pop
cs
add
stos
lret
lods
or
cmp
xor
repz
cmpsl
in
arpl
jne
inc
cli
fcomps
sbb
aaa
cmpsl
mov
and
shrb
mov
leave
dec
mov
and
pop
mov
xor
fcoms
daa
add
icebp
aam
and
lds
test
hlt
xor
lock
popa
ret
pop
je
in
mov
fbld
je
data16
mov
iret
mov
test
and
icebp
push
mov
dec
dec
test
dec
jnp
mov
jp
lods
test
test
cmp
leave
sahf
test
fcoml
xchg
andl
adc
pop
ds
fcmovu
loope
subb
imul
xor
insb
in
inc
cwtl
fwait
mov
mov
inc
sub
mov
or
into
jne
pushaw
int
lahf
imull
dec
xchg
jmp
mov
pop
adc
mov
sahf
push
in
lock
push
and
outsb
jnp
adc
mov
cmp
push
push
inc
mov
mov
lcall
jnp
call
dec
pcmpgtb
sub
pop
xor
iret
xchg
or
aaa
sub
lahf
jns
repz
inc
jmp
adc
ljmp
fidivl
sub
adc
incl
pop
rep
int
mov
std
xlat
inc
jmp
mov
jmp
sti
mov
inc
push
xor
push
add
inc
dec
push
and
fsts
cli
pop
stos
mov
mov
pop
aas
inc
stc
insb
mov
sti
aad
push
out
popf
cmp
mov
ds
stos
push
pop
mov
and
fistl
push
imul
adc
inc
mov
jnp
xchg
xchg
stos
pop
xor
push
jns
lock
orl
lock
repnz
push
jp
pop
in
aad
push
xchg
lock
js
adc
xchg
pushf
out
fildl
lahf
in
cmp
mov
and
aaa
pop
into
mov
hlt
pop
jno
mulb
stc
ret
jecxz
rep
xchg
jle
lahf
push
mov
pop
mov
dec
xor
push
scas
enter
mov
arpl
mov
loope
jno
lcall
ret
addr16
fwait
subl
mov
sbb
or
push
xor
call
adc
sub
scas
adc
enter
sahf
sarl
rol
test
std
dec
mov
hlt
mov
xchg
push
sbb
clc
nop
std
int
sbbb
jge
pusha
mov
adc
insl
and
or
adc
xor
or
into
out
xor
jl
mov
jne
jne
jbe
adc
sbb
xchg
mov
jae
outsb
xor
push
mov
mov
insl
add
jmp
jle
mov
pop
mov
add
mov
icebp
fxch
rolb
fstl
fnsave
xchg
jns
lds
jg
lcall
stos
js
insl
jae
jecxz
mov
or
pop
adc
call
pusha
mov
pop
and
cltd
add
popa
outsb
push
orb
sub
jne
test
inc
subl
cmc
mov
gs
movsb
popf
test
cmp
adc
mov
into
xchg
jno
push
dec
add
test
push
clc
lret
je
xchg
scas
xor
mov
ja
pop
in
jl
gs
xchg
fdivrl
repnz
xor
insb
xchg
inc
pop
sbb
cmp
aas
in
dec
or
bound
shlb
ljmp
fbstp
xor
xor
sar
fildl
clc
in
rolb
cltd
ret
add
push
jle
jle
pop
fcmovb
insb
mov
mov
mov
inc
int3
aas
cmp
and
mov
mov
pusha
fcmovb
insb
fcmove
pop
jbe
aad
lret
stos
mov
mov
cmp
and
sbb
call
daa
adc
shrb
mov
mov
xchg
shrl
pop
inc
adc
stos
out
push
add
stos
push
mov
xchg
mov
pop
orl
add
push
in
int3
xchg
adcl
lahf
lods
mov
push
push
mov
imul
jp
lret
stc
cmp
dec
xchg
cmp
scas
int
cmpsl
or
pop
add
add
jge
sbb
in
mov
dec
add
fdivrs
sub
push
aad
dec
mov
aam
mov
jb
bound
push
aaa
pop
ljmp
mov
add
pop
imull
sub
movsl
shll
pop
inc
sbb
mov
leave
shll
cs
stos
aad
pop
mov
xchg
mov
jae
cmp
stos
sub
addl
filds
cmp
xlat
push
and
insl
pop
in
lods
xchg
or
data16
pop
lods
add
adcl
pop
sub
fmul
pop
fdivrs
lret
or
pop
cltd
cld
or
xchg
shl
call
aam
lahf
xor
inc
fidivrs
movsl
inc
lods
lret
mov
iret
test
inc
cs
dec
xchg
out
stos
xor
addr16
shrb
mov
aas
fdiv
jecxz
mov
ret
xor
push
and
cmp
iret
or
jb
pmulhw
cltd
idivb
adc
pop
adc
cs
out
xchg
cltd
into
pusha
push
push
sbb
outsl
test
imull
cmp
mov
xorb
mov
and
push
orl
cmc
cli
adc
inc
cmp
xor
int3
push
jl
mov
sbbl
test
insb
cwtl
mov
and
lcall
sub
pushf
pop
mov
gs
sbbb
push
std
adc
enter
sbb
push
mov
pusha
jo
stos
ja
or
jmp
xlat
and
inc
aaa
push
roll
jle
insl
sbb
int
xchg
pop
popl
rcrl
iret
xchg
sarl
daa
addr16
cmp
in
and
xchg
pop
xchg
fstpt
arpl
mov
xchg
lock
scas
in
fildll
lahf
adc
and
jl
arpl
movsl
or
outsb
dec
into
mov
mov
push
pop
jae
and
jne
ss
add
push
popf
test
mov
call
shlb
inc
insl
stc
pop
jl
bound
adc
hlt
test
mov
loop
xlat
xchg
sbb
or
popa
test
xlat
xor
pop
cmpsb
adc
imul
mov
fwait
out
add
adc
clc
cmc
ss
inc
negb
jnp
pop
xchg
sub
push
mov
icebp
mov
inc
scas
lret
fs
xchg
cmpsl
mov
sbb
out
out
push
inc
and
sti
sbb
or
test
mov
mov
xchg
cmp
sub
ja
out
sbb
jo
mov
xor
cs
cmp
clc
clc
hlt
lret
mov
pusha
and
out
add
icebp
push
pop
dec
sahf
sbb
fistpll
mov
or
and
nop
pop
mov
push
xchg
jno
pop
cli
sbb
repnz
notl
jle
imull
jle
jne
fs
testb
cli
mov
sahf
mov
xor
pop
cs
into
push
adc
test
js
sub
jle
xor
mov
lret
bound
sub
or
imul
in
dec
movsl
icebp
dec
xchg
popf
jp
and
mov
cmp
outsb
rolb
fs
pop
dec
dec
add
addr16
mov
or
in
outsl
das
sbbb
int
and
cwtl
das
push
sbb
pushf
mov
lods
out
push
pushf
clc
and
pop
push
lret
adc
sbb
add
divl
pop
push
sahf
in
imul
xor
xor
and
int3
insl
call
ret
nop
push
xchg
and
mov
cld
dec
es
out
inc
pop
mov
sub
lcall
test
test
cmpsb
js
bnd
or
sub
and
cwtl
fadd
leave
pop
xor
mov
aad
mov
in
mov
xchg
sti
mov
dec
xor
ljmp
ja
or
lods
out
xchg
fnsave
jno
ja
imul
add
or
out
inc
lods
mov
cli
push
lahf
xor
fdivl
cmpsb
push
dec
mov
sbb
ret
rcrb
push
scas
or
orb
test
fiadds
adc
xor
and
add
jb
loop
inc
lret
dec
leave
out
mov
loopne
jle
inc
mov
push
movsb
dec
sub
jns
xchg
pop
into
mov
sbb
sub
and
lds
and
or
insb
jb
je
and
sub
mov
lahf
cs
dec
sbb
mov
ja
pop
and
fwait
xchg
mov
dec
dec
inc
and
ss
inc
sbb
mov
test
mov
mov
pop
mov
loopne
xchg
add
jb
lods
mov
jge
out
shl
mov
push
xor
cli
iret
xor
aaa
mov
out
dec
lret
dec
jno
leave
rolb
lret
in
hlt
cli
lea
popa
sbb
ret
outsb
aam
pop
insl
push
push
sub
sub
push
scas
or
inc
add
sbb
in
sub
or
or
xchg
or
jmp
daa
pop
jns
es
imul
and
dec
arpl
mov
dec
mov
fisttps
popa
push
inc
aam
movsb
arpl
sbb
pop
fistpll
jp
push
into
stos
scas
into
scas
movsb
scas
mov
jg
pop
jl
cmp
je
stos
mov
mov
cld
sbb
add
mov
sahf
out
fisubs
test
pop
jecxz
mov
ljmp
lds
sbb
and
ret
aas
xor
les
sbb
mov
jnp
mov
mov
sbb
imul
sti
ja
std
inc
inc
mov
or
negl
and
iret
cmpsb
inc
ljmp
mov
lahf
inc
and
adc
pop
xchg
aaa
sahf
scas
repz
cmp
cmpsb
push
adc
shl
lea
or
pop
push
dec
es
sub
arpl
sub
sti
adc
xchg
clc
jo
hlt
and
ss
or
fs
movsb
imul
popf
lods
lret
adc
test
pop
pop
insl
xor
push
mov
fdiv
ds
scas
prefetch
jecxz
mov
stos
adc
loop
push
inc
mov
insl
jae
add
inc
lods
push
aad
jno
sbb
loopne
in
pop
or
mov
bound
mov
fs
lods
xchg
mov
pop
paddd
add
icebp
lock
sbb
pusha
lods
sarl
cmpsb
jne
jae
cmpsb
cvtpi2ps
add
aad
and
repz
imul
js
dec
test
mov
inc
ljmp
out
or
jp
loopne
pop
call
cmp
stc
lret
cmpsb
fiadds
cmc
inc
xchg
mov
ds
cltd
cltd
fisttpll
cmc
cmp
out
sub
outsl
xchg
mov
test
fsubl
das
enterw
mov
insl
pop
test
mov
insl
mov
xor
clc
xchg
add
repz
outsl
cmp
into
shr
pop
or
mov
mov
jne
out
out
in
xchg
shll
jecxz
xor
xor
cwtl
movsb
leave
dec
cld
adc
cmp
xchg
sub
cltd
lsl
iret
fldcw
in
inc
ret
jge
es
adc
dec
jb
and
xchg
jae
xor
cmp
xor
jp
xor
xchg
mulb
call
xchg
das
push
ja
sbb
mov
jno
cmpsb
fsub
xor
push
adc
jno
push
push
lods
insb
add
adc
add
bswap
mull
out
sbb
jecxz
fildl
dec
dec
xchg
jno
pop
or
les
cmp
imul
add
jns
or
push
inc
jg
aas
ss
loope
cld
aad
jns
or
push
cwtl
out
mov
and
subps
mov
shll
pop
inc
jae
iret
in
mov
rclb
fildll
or
out
mov
mov
inc
adc
jl
in
data16
ret
jae
es
loope
faddp
adc
bound
xchg
jnp
icebp
dec
sub
sub
in
sub
inc
out
xor
bound
mov
popa
leave
cltd
jmp
into
jge
shll
cwtl
and
sbb
jge
push
xlat
gs
arpl
popf
imul
pop
add
mov
sub
addr16
and
adc
mov
jle
jb
insb
dec
in
and
sbb
pop
mov
jmp
mov
insb
inc
in
mov
popf
clc
push
sub
inc
in
cmp
pop
hlt
leave
xor
lcall
mov
add
sub
add
es
cmc
pop
loop
mov
cmp
jge
pop
dec
adc
std
mov
pop
sbb
mov
insb
mov
int3
mov
scas
xchg
push
xchg
add
std
dec
andl
lahf
xor
jns
lds
dec
add
dec
mov
sbb
push
xchg
inc
push
repnz
ja
mov
dec
push
push
lret
sbb
mov
cmc
sti
ret
sub
adc
call
mov
xlat
jb
call
push
xor
xchg
jbe
loop
or
insb
mov
ds
sbb
or
rorb
rcrl
ss
nop
cmpsl
push
sub
and
arpl
subb
jge
lock
pushf
push
adc
js
pop
mov
pop
lahf
inc
push
cwtl
enter
sub
push
addr16
adc
and
mov
mov
and
incl
push
push
mov
dec
cli
sbbl
add
loop
mov
add
push
push
es
sub
pusha
sbb
aad
popf
cli
lods
mov
or
adc
fs
xor
imull
lods
mov
shl
push
es
inc
sub
sbb
jo
jo
mov
xchg
outsl
mov
xchg
push
aad
aad
testl
shll
adc
dec
ret
and
or
xor
ja
adc
fimuls
cli
popf
xchg
jnp
popf
imull
subl
dec
imul
push
call
mov
enter
rolb
sub
adc
mov
mov
pop
mull
sub
sub
sbb
stos
mov
and
pop
cmc
mov
inc
mov
fwait
loop
cli
inc
outsb
push
add
pop
inc
lea
push
aad
push
sub
aam
mov
inc
xchg
nop
and
pop
mov
mov
pusha
or
out
jno
nop
cmpsb
sub
jns
push
stos
lret
inc
fbstp
cli
lcall
and
and
ja
push
cmp
mov
int3
mov
jbe
xlat
cmp
or
pop
adc
push
mov
adc
icebp
sbb
pop
sbb
pop
xor
cmpsb
pop
jge
add
sub
and
es
int
insl
loope
mov
mul
xchg
daa
push
mull
jns
adcl
in
cmp
mov
pop
pop
push
pop
mov
adc
jg
int3
imul
mov
out
or
fildll
fcompl
adc
mov
xor
out
jbe
dec
shrl
pop
xchg
xor
mov
jns
iret
outsl
pop
xor
dec
cmpsl
addb
sbb
or
mov
and
dec
or
fsubrl
xchg
jg
and
dec
cli
nop
mov
xchg
shlb
sbb
imul
jo
and
arpl
scas
je
call
xchg
lcall
and
lcall
add
rolb
or
mov
mov
es
std
pop
adc
cltd
mov
jle
pop
pop
cs
into
xchg
mov
out
xor
xor
cmp
lods
push
dec
jno
jne
or
movsl
aad
adc
jns
repnz
icebp
fstpl
sarb
or
lea
and
push
push
add
fadds
inc
dec
mov
test
shll
fisttps
sbb
sub
sub
rclb
pop
mov
add
push
sti
nop
js
sahf
pop
arpl
xchg
aas
ja
fistpl
gs
xor
test
lcall
arpl
lahf
stc
push
cli
push
loope
pop
ja
push
dec
jp
or
mov
dec
fwait
push
pop
sbb
pop
mov
pop
xor
push
dec
loop
sbb
xor
cli
or
into
cltd
test
es
mov
or
mov
xchg
faddp
out
lcall
enter
loopne
loopne
iret
pop
or
js
lods
mov
cmp
cwtl
add
ret
mov
mov
push
add
and
adc
imul
nop
aam
ja
mov
popf
insb
and
mov
and
aaa
push
xchg
popa
imul
pop
xor
loope
dec
dec
xchg
inc
out
mov
fadd
sub
std
push
les
sub
xor
int3
mov
pop
push
xor
inc
dec
mov
ds
and
ljmp
xor
xchg
jb
test
cwtl
inc
call
dec
push
pop
fisubs
sub
or
repnz
test
data16
and
loop
fnstsw
call
pushf
rcrl
inc
dec
xor
popf
stos
add
push
mov
mov
js
add
mov
and
inc
dec
testb
mov
aad
lods
dec
test
out
pop
pop
xor
lods
test
imul
cmpsb
adc
out
pop
in
arpl
xchg
test
cmp
push
sub
ret
sbb
push
xchg
mov
pop
pushf
bound
cwtl
adc
xchg
dec
jno
dec
neg
sub
insl
mov
in
out
lcall
fdivr
mov
push
sbb
test
push
push
mov
add
test
in
stc
scas
ds
test
lds
push
shl
or
push
jg
push
shl
pop
inc
add
jo
cli
je
jl
pop
std
sbb
mov
xchg
jbe
pop
add
into
stc
loope
insb
xchg
or
sub
addb
pop
jns
xchg
push
sub
mov
cmp
mov
mov
jge
imull
fsubrl
iret
or
in
mov
test
cs
and
cmp
pop
repz
cmp
mov
mov
int
push
cld
cli
xchg
mov
imul
pusha
lret
pop
cmp
in
push
xchg
sbb
xchg
push
lahf
movsl
jl
les
dec
or
in
jb
xor
push
jecxz
sub
mov
push
incb
movsl
ficomps
or
pop
repz
sahf
pusha
mov
xchg
fcoms
inc
aas
testl
stos
dec
lahf
jno
sbb
bound
and
fbld
sbb
scas
sbb
pop
jno
inc
or
sub
es
add
add
add
in
sbb
mov
rcll
inc
and
cmpsl
insb
icebp
push
scas
fisttpl
adc
push
jnp
mov
int
mov
sbb
lods
inc
loop
int
mov
inc
fxch
imul
xor
lock
out
sub
push
lret
cmp
movsl
movsb
addl
stos
faddl
or
into
movsb
push
adc
dec
popa
xchg
pop
sbb
int
pop
inc
inc
sub
inc
mov
dec
aad
and
mov
divb
cmpsl
testb
sbb
inc
insl
sbb
mov
shrl
push
daa
icebp
dec
hlt
mov
jne
jecxz
imul
sub
loop
sub
fwait
clc
or
lock
cmpsl
jns
fs
test
orb
pop
ds
in
push
and
push
cmp
ss
inc
xchg
lahf
arpl
or
ret
inc
or
mov
in
pop
dec
popf
push
push
push
mov
mov
scas
movb
hlt
or
push
or
mov
jnp
sbbb
jae
jnp
hlt
adc
fcmovnb
push
mov
pop
ss
cltd
mov
lahf
jg
jnp
mov
daa
inc
pop
cmp
fildll
out
fstps
lods
sti
xor
inc
insl
push
loopne
push
insb
mov
cmp
testl
in
jns
and
sbb
inc
lahf
test
aaa
ja
pop
popf
in
xor
cwtl
and
dec
xor
add
movsl
inc
sbb
clc
adc
pop
xorl
lea
push
test
sbb
add
loope
sub
lds
je
push
imulb
xchg
repz
xor
ret
cwtl
fwait
add
mov
and
pop
mov
je
rcrl
ficoms
adc
rcll
popl
or
and
xor
fs
push
lcall
jl
jmp
mov
rorl
stc
sbb
idivb
cmp
xor
mov
sti
pop
outsb
ljmp
cmp
adc
or
loop
cmp
icebp
xchg
and
scas
lods
aaa
sub
leave
xchg
cli
push
rorl
insb
inc
sbb
aam
mov
ret
and
in
adc
sbb
and
idivb
sbb
test
dec
mull
scas
push
mov
xor
add
mov
mov
hlt
xor
jp
aad
mov
xlat
sbb
sbb
movsb
movsb
icebp
mov
mov
jbe
add
fnstcw
popf
movsl
fnstenv
push
jle
bound
mov
popf
movsb
in
sbb
loopne
pusha
fwait
nop
fdivp
leave
or
ret
ret
adc
movsl
daa
fs
pop
call
push
in
fcmove
inc
pop
stos
and
pop
mov
jmp
aam
pop
and
push
int3
lds
jne
jne
lahf
mov
adc
into
push
dec
shlb
pop
xchg
sbb
popl
push
adc
sahf
iret
fsts
jl
push
sbb
sub
dec
xchg
mov
in
xchg
ficoms
mov
loope
jecxz
cli
or
or
push
lock
pop
lods
out
dec
jns
enter
and
adc
mov
sub
dec
or
lods
sti
pop
inc
adc
scas
mov
mov
addr16
std
mov
adc
jp
or
jge
and
mov
cmpsl
cmp
popa
sub
inc
xchg
dec
mov
ljmp
and
dec
lahf
dec
ss
xchg
mov
pop
out
dec
xchg
mov
jg
fstpt
jge
push
repz
fwait
pop
jl
ljmp
push
je
js
cwtl
sbb
stos
push
push
int3
mov
mov
xchg
sub
incl
sbb
cmp
ret
sahf
stc
lods
cwtl
das
addr16
insl
push
mov
pop
xchg
mov
or
cmp
test
int
mov
ds
mov
pop
inc
mov
orb
sbb
nopl
pop
dec
mov
cmp
out
in
into
or
popa
pop
test
mov
inc
sub
pop
xchg
push
dec
fdivs
push
pop
addl
cs
xchg
ja
insl
sbb
leave
push
int3
cmpsb
push
and
iret
dec
into
iret
jb
daa
das
xor
jmp
cmp
cld
adc
data16
insl
lods
mov
fdiv
test
mov
jbe
sub
mov
in
insb
xchg
mov
pop
popf
pop
pop
xchg
push
jmp
cmp
add
xor
cmpb
cmp
ret
and
dec
jle
imul
push
mov
mov
push
sub
in
mov
xor
dec
inc
xor
xor
cltd
mov
rol
stos
sbb
push
loope
outsl
mov
js
pop
dec
aad
mov
dec
ret
outsl
je
sbb
adc
xor
aaa
cmp
lret
xor
sub
adc
push
inc
daa
andb
mov
repnz
andl
sub
fistps
xlat
out
inc
push
cmp
push
sub
out
ds
pop
and
inc
loope
push
add
inc
xchg
mov
out
mov
sbb
cltd
pushf
adc
or
cld
dec
lcall
shrl
subb
nop
stos
sar
sti
loopne
fs
cltd
sub
lock
insl
popf
shr
pop
push
jle
pop
adc
sbb
nop
ds
xor
or
jo
jo
add
lcall
cwtl
cmp
jne
cltd
jle
lcall
jg
fsubrs
or
inc
testl
or
ljmp
cmp
test
or
mov
shlb
pop
sahf
mov
jbe
inc
pushf
lret
jne
xchg
and
jbe
loope
jae
and
mov
fwait
in
add
push
sub
ret
iret
pop
enter
mov
pop
aad
add
and
and
es
aas
in
mov
mov
popa
je
pop
lock
inc
nop
pop
xchg
call
divl
jne
mov
out
int3
out
sahf
sahf
inc
jo
mov
clc
daa
mov
rep
inc
stc
xchg
inc
push
xchg
xchg
je
inc
divb
inc
jb
mov
cmp
and
scas
mov
adc
mov
or
fidivs
mov
rolb
ret
jp
jae
in
adcl
repnz
loopne
out
xchg
xchg
stc
cmpsb
push
sub
mov
push
push
lahf
lcall
imul
lds
outsl
ret
mov
shrl
enter
xor
das
sub
xchg
repz
pop
xchg
loopne
adc
mov
sbb
xor
test
scas
das
lcall
cld
inc
idivl
clc
pop
in
jp
jb
xchg
iret
rep
scas
xchg
andb
pop
rorb
sar
lret
or
sti
mov
bnd
sbb
pop
or
mov
repnz
test
dec
in
jmp
scas
push
jne
and
xchg
sub
mov
adc
push
bound
inc
jmp
push
push
adc
sti
cmp
mov
adc
xchg
dec
sub
sbb
mov
inc
sub
lcall
push
dec
adcb
movsl
enter
sub
push
pushf
sbb
dec
jle
dec
aaa
mov
pop
push
jl
push
mov
push
inc
lret
hlt
addr16
ret
std
mov
add
repnz
imul
mov
jle
mov
xchg
xor
sbb
movsl
lods
xchg
xchg
cmp
jmp
sbb
jl
lock
cmp
ja
pop
loop
push
adc
dec
xor
jb
pop
int3
pop
in
inc
or
jmp
or
test
jg
js
sarl
mov
test
xchg
mov
add
pop
cmc
in
pop
loope
sub
insl
mov
dec
movsb
or
popl
sub
mov
or
dec
add
adcl
inc
add
inc
out
lods
cmc
mov
mov
sbbb
cmp
test
out
sti
dec
add
jecxz
clc
movsb
add
outsl
popf
xchg
call
push
xchg
xchg
push
iret
mov
insb
loope
xchg
push
xorb
adc
lret
lods
repnz
jno
mov
pop
iret
lret
cmp
lahf
test
movsl
dec
mov
orb
push
arpl
sbb
popa
inc
inc
cmp
pop
cwtl
pop
jle
inc
dec
add
xchg
sbbl
jno
je
inc
inc
dec
fstpt
movsb
daa
add
sbb
fisttps
inc
sub
outsl
shlb
cmp
clc
sub
mov
jo
int3
push
mov
mov
lcall
cmp
sbb
push
mov
mov
cmp
fbld
pop
sahf
or
sarb
sbb
fstpt
adc
div
shr
cmp
sbb
aaa
adc
xorl
jne
xor
lahf
add
test
lcall
mov
orl
lods
das
xchg
xchg
mov
enter
jecxz
aaa
rcll
xchg
sti
scas
divl
mov
mov
leave
in
dec
lds
ret
sub
pop
mov
adc
pop
jne
dec
adc
cli
mov
call
or
dec
xchg
inc
push
push
add
rorb
iret
iret
sti
dec
les
pop
arpl
movsb
jp
add
lods
scas
data16
leave
andb
scas
mov
jno
jns
mov
jno,pt
or
jbe
add
pushf
insl
xchg
imul
das
scas
and
fbld
enter
dec
add
push
insl
out
test
or
push
mov
xchg
imul
push
inc
push
int3
rorb
cs
adc
sub
adc
in
jne
aad
loopne
inc
adc
sub
pusha
xor
frstor
addr16
xchg
mov
jge
or
sub
push
adcb
push
push
xchg
in
or
xchg
or
cmp
dec
xchg
aad
popf
ds
add
add
les
jb
mov
outsl
in
das
out
insl
push
es
pushl
sarb
push
mov
sbb
lds
xchg
mov
mov
jle
es
cmpsl
mov
stc
jecxz
adcb
xor
ret
pop
fistps
ja
out
mov
sti
inc
loopne
mov
gs
ss
mov
pop
xchg
shrl
xchg
loope
jnp
push
and
sarl
fs
test
sbb
cs
dec
pop
cld
pop
lea
jge
stos
push
adc
cmp
lcall
xor
arpl
jmp
sub
dec
dec
pusha
jo
outsl
sarl
or
outsb
xchg
stc
test
push
mov
aam
in
sub
rclb
out
jge
mov
inc
nop
test
fdivl
popf
aaa
xor
aad
je
les
xor
cmp
loopne
lods
mov
push
push
stos
movsb
mov
das
or
ret
hlt
xchg
xchg
cld
and
loopne
rolb
inc
pop
sub
mov
test
je
mov
stos
sahf
ljmp
sbb
pop
daa
arpl
xchg
mov
call
push
pusha
shrb
call
mov
push
ret
popa
and
mov
sarl
int3
out
cmp
pop
xor
shlb
pop
sub
outsb
pop
dec
pop
mov
out
fucomp
roll
jne
pop
cmp
lcall
ja
sbb
ffreep
xor
cmp
push
out
adcl
and
mov
pop
jne
pop
repnz
push
sub
xchg
pusha
fidivs
add
mov
iret
mov
mov
adc
adc
mov
push
movsb
mov
push
rcrb
and
sti
arpl
fsubs
mov
faddp
dec
test
fidivrs
mov
addb
int3
mov
dec
jo
sub
loopne
xchg
stos
das
mov
sbb
xlat
pop
sub
divb
imull
int
out
mov
or
push
out
push
call
jnp
fsubp
jmp
loop
xor
mov
jecxz
push
jae
pop
jae
loop
mov
lods
inc
push
dec
pop
and
sbb
cmp
pop
aaa
sbb
test
pop
jg
jmp
fdivrs
adc
pop
push
cld
imul
sub
xchg
in
adcb
movsb
add
jnp
cmpsb
mov
sub
pop
cmc
fsubs
pushl
and
inc
sbb
call
pop
pop
mov
mov
dec
inc
rcll
or
daa
hlt
stos
aaa
sub
jns
jecxz
nop
push
out
add
or
shlb
in
pop
mov
iret
int3
and
cld
outsb
pop
call
adc
xor
xchg
xchg
lock
mov
push
xor
outsb
sbb
xor
mov
push
pop
pcmpgtb
aam
inc
push
mov
add
pop
pop
mov
mov
cmc
adc
push
adc
or
lcall
xchg
adcl
mov
movsl
sub
lret
xchg
mov
test
loopne
in
or
lret
add
sub
scas
fs
aad
jnp
repz
or
ljmp
test
gs
mulb
mov
sub
sbb
leave
adc
out
mov
ds
cmp
lods
cmp
lds
aas
or
sbb
sbb
mov
notb
sub
push
pop
push
jnp
mov
dec
inc
sbb
cltd
pushl
ret
hlt
push
and
into
daa
push
loope
lds
shrl
mov
cmovne
fyl2x
test
aam
arpl
loop
sub
dec
add
and
call
aaa
lock
cmpsb
sbb
and
push
ja
sbb
idivl
xchg
ja
cwtl
xorb
sbb
lcall
xor
lea
xchg
push
nop
jne
pop
lret
pop
sbb
xchg
mov
movsl
inc
jecxz
arpl
xchg
push
in
adc
popf
loopne
or
add
or
sub
jno
and
out
dec
test
test
imulb
out
fistpl
pop
or
shll
xchg
mov
inc
aas
or
cs
xchg
mull
fisttps
outsl
leave
iret
loop
cmp
test
adc
stos
pop
cmp
mov
lock
out
stos
sbb
and
cmpsl
insl
scas
pop
andb
lods
es
sahf
mov
je
imul
and
and
jmp
pop
lods
or
mov
mov
cmp
fwait
pop
cmc
rcll
inc
cmp
inc
push
sub
dec
int
pop
dec
mov
lret
mov
push
mov
or
mov
ds
adc
push
adc
rclb
jmp
mov
xchg
rcrb
pop
movsb
add
addr16
imul
cmc
lds
push
loope
adcl
loop
ds
pop
andl
dec
and
xor
mov
dec
lods
les
jo
in
aaa
or
dec
mov
mov
fwait
mov
push
inc
sahf
xlat
scas
jns
jno
cmpsb
cmpsl
mov
mov
and
adc
lds
cs
loop
xchg
lcall
pusha
sbb
dec
xlat
imul
lcall
bnd
loop
jns
xor
xor
mov
mov
mov
rcpps
lret
mov
xchg
dec
es
push
add
aas
in
scas
jne
mov
inc
dec
xchg
test
cmp
mov
loopne
addb
cmp
out
pop
mov
aam
fnstcw
xor
lods
lock
stos
enter
push
andl
pop
sbb
pop
jg
or
lods
clc
dec
cmp
fs
xor
movsb
push
in
or
fisubl
mov
pxor
lahf
ja
sbb
hlt
cmp
dec
ficoml
lcall
jne
adc
pushl
aam
sub
adc
adc
sahf
push
mov
mov
lret
test
aad
dec
aad
inc
loop
fisttpl
stc
jmp
loope
es
bound
push
add
inc
push
das
jecxz
mov
lea
test
clc
mov
adc
aam
mov
adc
inc
shl
and
cmc
fstl
dec
shl
stc
xor
js
cmp
sbb
xchg
pop
arpl
fnsave
xchg
xchg
sub
cmc
inc
and
mov
jne
add
push
jne
pop
jl
loop
movsb
cli
test
sbb
fsubrs
in
push
pop
cmpsb
xchg
repz
xchg
and
mov
dec
loop
fildll
sub
test
scas
data16
stos
pop
sub
int
dec
mov
inc
xchg
hlt
cmp
lods
mov
call
rorl
ljmp
inc
jmp
popa
xchg
arpl
mov
pop
sbb
fildll
adc
insl
inc
leave
notb
out
xchg
rcrl
mov
loopew
add
sbb
loop
sahf
jmp
push
push
jg
sub
paddb
scas
cltd
inc
js
push
mov
and
in
jno
movsb
push
pop
sub
mov
int3
maskmovq
notl
or
inc
pop
lcall
testl
sbb
shll
dec
push
or
mov
fwait
ret
iret
inc
mov
adcl
mov
add
out
adc
dec
loope
daa
xor
lcall
jae
adc
test
loopne
enter
repz
push
mulb
mov
idivl
inc
das
xchg
dec
pop
sti
icebp
lods
mov
cmp
lcall
add
das
cmp
push
push
dec
scas
int
frstor
data16
jno
int3
lret
push
in
push
out
adc
sub
pushf
cmp
xchg
clc
xchg
ret
arpl
shlb
sarl
xor
dec
sbb
jns
sub
movsl
out
push
dec
ja
and
lahf
loopne
out
cmp
mov
insl
adc
stc
dec
les
aam
gs
idiv
dec
ficoml
mov
mov
xchg
adc
adc
pop
pop
sub
mov
test
fneni(8087
lcall
mov
mov
fbstp
sar
dec
cltd
movsl
pop
push
ret
lods
xorl
mov
xor
or
pop
inc
cmp
sbb
xchg
adc
pop
adc
pop
int
jb
outsb
add
pop
std
dec
sarl
insb
insl
test
aam
out
in
xchg
or
xchg
popa
subl
add
ds
sbb
inc
mov
data16
in
mov
bound
test
push
into
addr16
imul
ret
subb
pushf
and
or
add
hlt
shrb
dec
sub
int
pop
xor
jge
inc
mov
daa
adc
push
xor
testl
dec
popf
mov
lds
xchg
and
or
jne
and
inc
cltd
es
out
test
insl
mov
jle
aaa
xchg
mov
mov
or
cs
call
loop
mov
mov
data16
push
lock
mov
lret
jbe
pop
cltd
addl
stc
rolb
jg
pop
repz
std
testw
mov
xchg
mov
cs
rcrb
rolb
cmp
rcrb
jg
ss
mov
cmp
aad
mov
pop
sub
xor
and
lret
cwtl
and
mov
or
sbb
test
or
jb
and
mov
nop
ja
call
mov
aas
cmp
pop
mov
adc
inc
ja
add
cwtl
jle
cltd
adc
xchg
shll
sbb
mov
test
xor
push
lcall
fdiv
sahf
lods
mov
add
jnp
cltd
clc
loopne
jns
sahf
shlb
dec
sub
hlt
jmp
cwtl
das
lret
lock
jb
sbb
fists
xchg
fcmovb
and
flds
push
ret
movsl
fsubrp
cmp
lahf
outsb
jbe
lock
gs
and
push
cmp
jb
mov
cmp
fmuls
adc
icebp
test
std
fadd
or
push
and
xor
pop
int3
jge
and
pushf
icebp
in
pop
out
test
mov
subb
leave
push
ljmpw
cmpl
xlat
enter
iret
sub
out
mov
aaa
cmp
adc
adc
sub
push
or
enter
pusha
insb
mov
mov
xchg
cltd
mov
lods
notb
xchg
out
cmp
inc
repz
rcll
iret
mov
jecxz
inc
mov
pop
leave
xchg
sub
pop
push
mov
hlt
pushf
mov
mov
push
push
cld
jecxz
cmp
push
out
lcall
js
cwtl
call
inc
xor
mov
shlb
in
das
xchg
lret
lahf
andb
xor
mov
inc
outsb
push
push
popa
cmp
push
adc
out
negl
mov
inc
and
push
push
push
lret
mov
les
pop
or
addr16
lods
call
add
push
xchg
sbb
cmc
lret
inc
imulb
lret
ljmp
and
mov
gs
dec
imul
in
gs
add
sbb
pop
xlat
andb
jl
in
test
lea
xchg
shll
add
cmp
mov
int
jns
cmp
pop
pop
mov
or
pop
add
mov
es
and
hlt
mov
ficompl
les
sub
jg
mov
in
sbb
sub
repz
je
add
mov
ficoms
push
and
insb
int3
psubusb
inc
in
dec
shl
dec
call
movl
jge
add
sbb
fwait
xor
xchg
xchg
sub
cs
push
or
das
push
popa
push
mov
inc
sub
xchg
xchg
fsubrl
bound
pop
iret
jl
mov
cmp
add
dec
stos
inc
cmp
cmp
mov
and
out
mov
and
push
dec
outsb
test
jb
push
fdivr
test
xor
or
lret
inc
mov
out
iret
insl
dec
push
jecxz
pshufw
xor
mov
das
xor
icebp
mov
lret
xor
movsb
adc
rorb
loopne
jecxz
pop
iret
push
enter
mov
ret
xor
hlt
add
pop
daa
and
je
pop
inc
sub
dec
xchg
dec
push
addr16
cmp
dec
and
mov
mov
xchg
push
inc
sub
inc
dec
movsl
push
mov
sub
fincstp
scas
lret
int3
pusha
insb
out
xchg
sar
push
orl
out
in
mov
cmp
aad
and
add
cmp
negb
sub
outsl
in
dec
fimuls
subl
push
xlat
add
jo
xchg
loopne
push
push
push
aam
jo
int
cld
outsb
push
sbb
sub
inc
mov
movsb
dec
es
jbe
aaa
sbb
mov
ss
mov
cwtl
test
pop
call
mov
mov
inc
adc
xchg
cli
push
sbb
arpl
pop
xor
xlat
or
xchg
add
xchg
xchg
inc
add
mov
repnz
popa
dec
add
mov
movsb
mov
pop
xor
cld
add
xchg
pop
mov
sarb
and
loop
cmpsb
jne
push
lea
sub
in
push
jp
add
push
inc
in
aam
lea
subl
sbb
decb
rclb
shrl
out
xor
rcrl
iret
neg
xchg
sbb
jmp
add
dec
sub
popa
xor
mov
xor
callw
cwtl
adc
xor
arpl
lods
jg
and
sbb
adc
dec
jb
and
fcmovu
loop
push
add
setb
cmp
sbb
fmuls
push
sbb
nop
pusha
enter
dec
dec
jo
cwtl
dec
je
add
mov
sub
add
mov
mov
cmp
test
push
sbb
sbb
sub
push
dec
insl
cmpsl
adc
sub
jnp
mov
xchg
out
xchg
mov
mov
mov
repnz
sub
jnp
and
push
push
ret
pop
mov
insb
sbb
xchg
or
xchg
push
out
int3
lock
jmp
inc
cmp
adc
push
test
ja
mov
mov
or
mov
sbb
mov
dec
cmpsl
cmp
cmpsl
pusha
in
sub
add
mov
sbb
ds
testb
mov
or
xorb
mov
pop
jg
mov
mov
mov
scas
add
jnp
cwtl
cmp
in
inc
mov
push
mull
jg
into
in
mov
mov
leave
mov
imull
add
sbb
js
add
mov
mov
add
push
mov
pop
or
jp
mov
sbb
fbld
out
sti
cli
jbe
xor
push
push
rcrl
lods
ja
pop
xorb
adc
popa
push
sbb
aam
sub
movsb
cmp
aas
dec
loopne
jp
push
addl
inc
gs
push
mov
addl
shll
das
sub
pop
and
cmp
sbb
mov
dec
nop
add
dec
clc
xchg
cmp
mov
inc
xchg
or
pop
push
xor
jnp
lret
rclb
xchg
dec
sub
sbb
insb
mov
leave
inc
push
into
adc
push
mov
bnd
out
xchg
es
lret
push
dec
jl
lcall
ja
or
xor
lret
pop
sbb
pop
push
pushf
daa
sbb
add
cmpsb
cs
xchg
aam
ficoml
in
and
or
and
push
or
fisttpll
add
cmc
int
jmp
repz
dec
xchg
and
testl
inc
add
test
out
mov
mov
xchg
xchg
dec
in
aam
cld
call
xor
gs
or
incl
add
dec
test
jo
fisttps
cli
mov
sbb
incl
adc
jo
inc
call
lret
test
shll
jecxz
fsubr
ret
popf
scas
mov
movsl
jp
and
addr16
adc
inc
test
ds
mov
jne
adc
mov
pop
pop
adc
jne
pop
repnz
adc
mov
lcall
push
sbb
enter
jbe
push
jns
fsub
call
add
or
rol
dec
jle
sbb
or
popf
inc
mov
dec
lea
cmp
dec
xchg
xor
outsb
sub
aas
mov
enter
fcmovnb
ds
xchg
clc
pop
xchg
mov
inc
es
pop
sbb
es
repnz
imul
push
push
aad
push
sbb
push
lret
lods
inc
mov
lds
cmp
sub
push
lret
push
push
cmp
pop
lds
insl
pop
mov
neg
fidivrs
shrl
stos
sbb
jae
fsubl
ss
fstpt
ret
mov
movsb
push
fldcw
movsb
int
cmp
hlt
sbb
leave
jg
jo
push
int
or
insb
rorl
pop
flds
and
aas
pop
mov
insb
lahf
adc
lea
orl
pop
inc
pop
fwait
test
fwait
test
xchg
xor
lcall
add
fwait
std
mov
xchg
inc
orb
aas
pop
mov
push
xlat
jne
pop
push
mov
push
or
shll
imul
test
ret
or
inc
lea
push
popa
std
push
xchg
insb
xor
daa
push
divl
ret
sahf
int3
scas
sbb
loope
sbb
adc
jmp
ret
xorl
sbb
adc
push
imul
mov
mov
ficompl
sub
aam
std
and
cs
push
popf
movsl
and
add
inc
pop
push
sub
in
adc
push
jmp
mov
cmc
arpl
in
outsb
in
sub
in
loop
add
pop
movsb
stc
bound
inc
mov
pop
adc
push
call
scas
lods
add
or
jns
add
dec
pusha
fnsave
in
dec
out
repnz
out
addr16
push
mov
fwait
push
add
imul
aad
addr16
bound
stos
push
mov
fsubl
mov
cld
adc
sub
or
sub
jne
mov
sarl
xor
mov
fucomip
cmpsl
fldl
fstpt
sahf
divl
mov
roll
push
js
dec
popf
adc
out
jl
sbb
aam
xchg
cmpb
enter
lds
mul
popa
and
cltd
mov
loop
xor
and
lret
pushf
inc
xor
mov
ret
iret
daa
add
mov
adc
movsl
ret
xchg
mov
xor
mov
das
fidivl
dec
ficoml
mov
cmp
in
decl
mov
push
dec
int3
insb
mov
nop
and
test
lahf
xchg
xchg
inc
mov
stc
idiv
sub
and
lret
xchg
xchg
lds
xchg
lahf
mov
repnz
leave
shl
add
out
sub
mov
xchg
pop
xor
or
sarb
mov
lret
js
mov
pop
cld
pop
ds
inc
or
add
les
int3
adc
scas
lock
sbb
pop
mov
push
adc
je
ss
cld
divb
ret
rcrl
cs
or
ret
aad
cld
xchg
push
push
cmp
mov
adc
outsb
ret
dec
jge
mov
ss
sub
dec
lock
mov
loopne
in
scas
fidivs
xchg
xchg
loopne
movsb
negl
negb
cmp
fucom
je
insb
lods
fdivp
push
std
sbb
fisubrs
mov
push
push
jne
je
popa
ds
or
dec
jae
xchg
jg
pushl
inc
dec
and
mov
jg
add
mov
inc
xor
or
imul
arpl
add
add
mov
aas
fnstenv
aam
jbe
ja
aad
sbb
dec
fsts
cmp
or
sub
sub
into
adc
inc
mov
mov
push
insb
and
pop
jmp
inc
ret
push
pop
fadd
pop
pushf
add
cmp
jl
mov
inc
jo
push
adc
jmp
stos
mov
out
test
mov
fcomps
xor
movsl
push
outsl
xor
push
dec
sbb
test
mov
mov
sbb
jb
push
lock
je
adc
cs
push
xor
ret
sub
xor
dec
lods
push
imul
adcb
add
out
mov
mov
shlb
sbb
mov
shlb
scas
aad
cmp
add
das
mov
jo
sub
in
scas
push
aas
popa
xor
sahf
lret
xchg
mov
pop
xlat
adc
xchg
mov
movsb
imul
aad
and
lret
jns
xlat
cmpsl
add
xchg
dec
jmp
jl
ret
lret
cmp
ss
inc
jmp
rclb
add
data16
js
and
repnz
mov
cmpsl
mov
fucomi
arpl
jmp
sbb
push
addb
add
addr16
lea
cmp
icebp
mov
fcoml
out
jnp
sub
or
jbe
in
or
cmpsb
and
sub
dec
in
push
or
sbb
cmp
mov
mov
push
loope
sahf
cli
mov
mov
into
ret
dec
xchg
and
arpl
hlt
ret
sub
cmc
mov
push
and
push
in
shrl
icebp
and
mov
ds
adc
cs
sbb
jl
sub
cmp
pop
jae
jnp
adc
fwait
movsl
add
push
jge
mov
lds
out
xlat
add
xchg
fbstp
jl
cli
push
jp
pop
lock
iret
in
pop
adc
cmp
xlat
in
mov
sbbb
aaa
mov
mov
jns
push
cmpsb
inc
xchg
test
mov
in
jmp
sti
inc
fcmovbe
cltd
mov
fs
and
lock
test
ficompl
movsl
mov
rcrl
jg
adc
fwait
enter
rolb
lds
jp
push
xlat
xchg
mov
into
pop
test
daa
inc
pop
xchg
and
popf
or
je
sarb
or
xchg
or
mov
iret
ret
loope
lea
or
xchg
cmp
std
std
xchg
mov
xchg
xchg
leave
movsb
pop
jo
and
fstpl
mov
sub
add
adcb
pushf
inc
jnp
pop
sti
xchg
sub
inc
and
pusha
ja
popf
cmp
out
mov
lret
fdivs
sub
jnp
fistps
adc
ljmp
ficompl
pop
fisubrl
fidivrs
cli
aad
inc
enter
sahf
outsb
mov
xor
sub
mov
and
inc
mov
push
xorb
push
inc
sbb
pop
je
aaa
add
test
mov
sbb
sbb
dec
hlt
xor
cs
ja
xor
mov
fldenv
loope
ja
ljmp
pop
and
js
dec
mov
rol
push
fsubs
push
insb
in
clc
add
loop
minps
push
scas
enter
jge
scas
sbb
test
mov
or
aad
rcl
xor
scas
aad
add
rcl
imul
clc
not
lea
inc
ds
sbb
lea
jge
sahf
movsb
mov
mov
aad
jns
mov
cmp
and
cs
xchg
or
ljmp
int3
shlb
movsl
fimuls
cmp
pop
ds
leave
ror
jb
stos
je
std
dec
and
add
cmp
push
jmp
and
or
inc
push
les
add
imull
mov
outsl
pslld
lds
mov
or
xor
xor
xor
or
cmp
icebp
repnz
xchg
or
adc
fs
push
mov
jns
inc
or
fisttpl
test
dec
fmull
sub
xor
scas
into
jl
push
inc
out
test
jg
repz
push
and
jbe
sub
nop
mov
adc
sub
mov
lret
out
enter
xor
mov
ljmp
cmp
icebp
sub
mov
dec
je
into
add
int3
clc
cwtl
sbb
pop
in
lds
into
rorb
std
ffreep
jbe
lret
sub
adc
outsl
orl
cwtl
push
iret
arpl
cmpsl
xor
in
or
outsb
shll
push
sbb
fistpl
popa
mov
sbb
or
pop
shrb
sub
out
and
xchg
dec
push
sbb
jmp
ljmp
out
inc
xchg
sbb
mov
push
mov
jb
movsl
push
xchg
das
mov
dec
mov
push
aaa
rol
aaa
notl
and
xchg
xor
aam
mov
dec
popf
and
and
ds
xor
rcrb
shll
push
xchg
push
xchg
sub
stos
bound
lcall
xchg
js
push
popf
sbb
push
aas
out
icebp
bound
popa
jmp
stos
pop
adc
jmp
dec
lahf
lret
loop
dec
stos
into
jge
or
xchg
dec
ds
call
or
add
movsb
jl
mov
scas
sbb
push
inc
dec
cld
popf
adc
jno
push
adc
add
lods
ja
adc
jno
aaa
adc
sbb
xchg
jl
cwtl
mov
dec
mov
push
insl
mov
fsubl
sub
adc
in
test
adc
cmpsl
inc
and
sbb
test
in
or
dec
loope
inc
dec
xor
inc
xchg
ljmp
adc
sbb
dec
xchg
ds
test
pop
sbb
or
mov
dec
mov
jnp
repnz
cmp
in
es
inc
push
fldt
aas
into
out
mov
popf
jp
pop
movsl
xor
cmc
and
jnp
pop
jp
iret
incb
mov
fisttps
xchg
jle,pn
xchg
sub
testl
mov
add
sbb
add
sub
fwait
inc
cwtl
cmp
addr16
add
jle
add
mov
ja
mov
xchg
mov
mov
cmp
out
cmpl
pop
mov
lock
mov
jge
cmp
scas
ja
out
lea
call
push
lret
xor
mov
mov
jl
decb
subl
icebp
sub
imul
icebp
test
pop
xor
lahf
mov
aad
loopne
and
imul
dec
jne
xchg
push
xchg
pop
sbb
cmpsb
aad
and
sbb
les
jp
aas
jbe
mov
lds
jg
push
pushf
adc
push
mov
mov
shll
loope
push
repnz
push
das
mov
inc
inc
and
xchg
es
cmp
mov
cmp
clc
jo
pop
test
insl
or
and
push
mov
jp
push
pop
pop
ja
mov
pop
mov
addl
xor
and
out
dec
cmp
jecxz
fwait
mov
in
push
popf
movsl
iret
jbe
or
rcr
sti
repnz
mov
fwait
jne
out
popf
je
repz
inc
out
ret
out
fldcw
mov
pop
outsl
dec
andb
insl
cmpsl
imul
repnz
xchg
mov
or
pop
inc
sbb
cli
ljmp
lret
pushl
or
icebp
cmpsb
call
repz
daa
sub
mov
push
fwait
add
mov
push
insb
or
dec
lret
xchg
in
and
popa
xor
lds
gs
push
out
daa
pop
dec
add
fistpl
shl
cli
or
rcl
inc
in
dec
inc
scas
lea
mov
mov
mov
ror
jg
test
sbb
sub
sar
sub
rsqrtps
sub
fwait
and
scas
pushf
je
clc
mov
imul
sti
sub
inc
push
jp
push
icebp
gs
mov
fistps
add
pop
xchg
sbb
push
popa
popf
push
rorl
mov
shrb
mov
in
or
xchg
iret
cmp
insl
xchg
std
xchg
imul
fdivs
repnz
mov
adcl
fisubl
and
add
or
xor
sbbb
scas
js
xchg
sti
lcall
ja
icebp
fiaddl
lods
xchg
push
inc
jnp
daa
outsb
test
add
jle
xor
inc
adc
fistl
or
insl
jecxz
adc
fstpl
call
adc
dec
cmc
mull
push
cmp
rolb
and
out
test
repnz
jo
jo
int3
stos
or
mov
inc
or
lods
ficomps
cld
data16
or
and
xchg
sbb
mov
shl
jb
scas
or
imulb
test
and
das
int
push
pushf
xor
lret
mov
and
mov
and
fmull
fadds
xchg
stc
mov
push
cwtl
orl
push
pop
jo
imul
jns
or
das
push
inc
sbb
fidivrs
lret
das
pop
movsb
inc
xor
in
lock
or
ja
jl
jmp
flds
dec
jecxz
fdivrl
inc
sub
add
fstps
jnp
and
fists
int3
xlat
push
adc
jo
rol
scas
inc
jle
daa
xchg
enter
mov
adcb
pop
dec
call
sti
lods
into
fst
in
jmp
sbb
mov
ret
mov
stos
mov
mov
push
add
mov
jp
xlat
fimull
in
sub
cmp
xor
cmp
loopne
mov
cltd
mov
ljmp
into
leave
cmpsl
into
push
jns
fcoml
mov
loopne
cltd
sub
insl
push
pushf
add
out
pop
and
jae
and
leave
in
mov
or
cmp
sbb
out
repz
jle
xchg
iret
sbb
cmp
xchg
adc
xchg
gs
ror
sub
cltd
mov
push
inc
aam
imul
xor
pop
aam
mov
lahf
push
add
sub
in
pop
dec
clc
cld
add
out
jo
xchg
sub
push
sub
aad
popf
add
imul
mov
clc
dec
jg
pop
popf
add
xchg
inc
mov
stc
sbb
clc
ss
fwait
xchg
pop
stos
xchg
test
push
mov
mov
aas
orb
cmp
jge
push
pop
data16
lock
decl
xor
ss
mov
nop
push
pop
inc
inc
sub
mov
push
addr16
inc
pop
inc
lock
cmp
daa
movsb
dec
dec
adc
jbe
or
or
cltd
push
push
out
lret
xchg
cmp
and
xchg
aam
mov
leave
add
mov
xlat
mov
xor
int
or
push
test
sub
push
dec
sub
pop
lods
xchg
iret
lret
inc
sbb
data16
mov
cwtl
hlt
sub
push
mov
push
daa
mov
insl
dec
adc
pop
mov
push
pop
mov
pop
dec
test
fnsave
outsl
out
adc
inc
xorb
enter
js
fnsave
mov
jmp
push
pop
lods
and
iret
push
pop
mov
repz
jp
popf
mov
mov
lea
into
mov
aas
sbb
dec
and
rorl
out
loop
cmpsl
sub
cmc
mov
inc
jmp
sub
adc
das
lods
or
inc
js
or
movsb
push
cmp
outsl
call
pusha
push
out
mov
push
pop
xor
js
stos
dec
call
ss
sub
lahf
inc
fidivrl
sarb
lds
push
ret
movsb
push
xlat
mov
mov
sar
xchg
and
dec
je
cwtl
addb
sub
out
mov
cmp
mov
movsb
cmc
mov
adc
and
ss
xor
adc
push
push
and
sub
iret
pusha
dec
dec
push
sbb
data16
xchg
mov
push
mov
iret
push
adc
mov
push
dec
movsb
mov
out
mov
pop
jle
cli
outsb
cmp
leave
xor
scas
sub
add
hlt
fsubrs
enter
add
or
mov
daa
jg
ret
incl
dec
adc
fs
adc
test
jge
mov
mov
mov
mov
insb
data16
int
mov
leave
mov
mov
out
subb
and
jge
lods
mov
cmp
sub
loopne
insl
in
mov
fsubl
cmp
vmovsd
jge
mov
stc
mov
push
test
aaa
add
adc
mov
adc
scas
cmpl
jmp
iret
cli
dec
hlt
pop
imul
addr16
loop
cmp
adc
and
out
add
mov
mov
and
xlat
movsb
sti
int
push
movsb
pop
sbbb
sar
outsb
dec
cmp
ja
push
mov
out
dec
lds
pop
jle
jp
out
int3
jl
mov
scas
mov
mov
in
scas
jg
imul
lods
int
push
cltd
sub
movsb
dec
xor
mov
cmp
sub
jg
mov
into
outsw
shr
loop
mov
leave
add
xor
xchg
imul
mov
aad
popf
imul
leave
add
inc
insl
scas
bound
int3
sbb
fwait
sub
jecxz
rcr
cmp
mov
pop
decl
in
fidivrs
fs
ret
and
std
mov
xchg
jp
adc
pusha
xor
add
out
cmpsb
dec
mov
pop
push
mov
arpl
test
lds
lcall
mov
rorl
aas
sbb
pop
mov
pop
sbb
js
push
dec
add
clc
out
and
push
ljmp
andb
std
addr16
xlat
enter
dec
xlat
movsl
ret
and
outsb
ret
fucomp
mov
stos
stc
cwtl
push
fildl
xchg
xchg
push
icebp
movb
fiaddl
and
cwtl
and
dec
jg
mov
jmp
or
push
xor
popa
orb
loop
fwait
in
jle
iret
or
pop
mov
pop
das
ficoml
aas
mov
sub
cmp
icebp
adc
arpl
xchg
push
xchg
addl
add
icebp
fidivrl
stos
xchg
mov
xchg
mov
mov
imul
daa
xor
xor
sbbb
lods
orb
xor
and
cmp
xor
cmp
int
or
test
iret
ss
test
add
xor
lods
cld
pop
push
jbe
inc
xchg
xchg
in
pop
test
leave
xchg
aas
clc
mov
loopne
inc
jo
jmp
add
inc
neg
pop
xchg
mov
adc
cmpsl
xor
mov
fisttps
mov
cltd
sub
or
int
sti
cltd
cld
stc
push
jae
out
aas
xchg
mov
fcoms
aas
shll
out
mov
es
mov
or
add
jp
shll
jb
mov
leave
mov
sub
fbld
dec
movsl
mov
rol
mov
jns
fdivl
test
xchg
ret
mov
mov
popf
fdivrs
push
out
jb
ss
dec
mov
mov
add
mov
scas
xchg
mov
xsha1
cmpsb
dec
xor
cwtl
lret
lods
shrb
neg
pop
mov
mov
aad
leave
push
xchg
and
mov
ret
jne
mov
lret
outsb
pop
jp
push
and
or
pop
jno
sbb
xchg
cs
in
test
push
pushf
cmpl
and
jns
insb
fimull
aad
cmpsl
or
jae
fmull
pop
jp
aam
stc
bound
push
jnp
mov
jecxz
adc
aam
mov
sub
shl
icebp
mov
sub
xlat
jg
and
int3
int3
dec
jnp
sbb
inc
cmp
mov
in
loopne
scas
or
xor
xchg
add
lret
jecxz
pushf
adc
and
loope
cmp
in
adc
or
sub
adc
fs
out
sahf
dec
mov
es
lahf
jo
xorl
test
xchg
popf
arpl
sub
dec
inc
fs
aas
lret
and
fsubr
and
leave
test
push
es
stos
iret
idiv
mov
push
mov
or
fmul
int
jmp
fidivs
mov
call
sti
xor
movsl
inc
out
sbb
daa
sarb
popa
lcall
jns
xor
jecxz
add
out
add
push
and
scas
add
jmp
sbb
lahf
aaa
or
sub
arpl
xchg
std
imul
arpl
ret
xor
mov
inc
clc
adc
mov
push
ret
or
add
jnp
xor
cmp
push
xor
cmpsb
pop
pop
rcll
sbb
mov
mov
into
leave
add
mov
dec
adc
movsb
aas
ds
fisttps
cs
fcomip
dec
mov
pop
push
rorb
cmp
sub
mov
inc
subb
sub
insl
inc
cld
xchg
xchg
adc
xchg
rol
and
mov
push
scas
stc
jecxz
mov
gs
adc
subl
out
pop
dec
pop
add
mov
dec
call
pop
mov
insl
adcb
mov
push
xchg
cmpsb
scas
pop
out
ljmp
test
dec
scas
push
mov
lods
bound
es
jbe
and
sbb
xor
add
mov
push
into
in
push
inc
jmp
sub
int3
and
mov
sub
ret
push
cmc
test
and
mov
add
rol
pushl
imul
stos
outsb
cmp
cmp
fcoml
push
insb
mov
dec
or
rcrb
sub
inc
ljmp
dec
loopne
popa
pop
lahf
scas
xchg
jno
jae
test
outsb
aaa
sbb
cmp
movsb
mov
inc
mov
inc
jl
cli
pop
push
imul
in
cltd
pop
test
cmpsl
mov
mov
lahf
mov
sbb
cmc
mov
ja
outsb
adc
aam
xor
xor
sbb
mov
rorb
mov
out
lret
xlat
int3
ss
aam
inc
or
jl
cmc
jns
jmp
inc
sub
setne
or
push
shl
aaa
cld
in
in
mov
ss
push
test
insb
mov
lods
and
mov
fistpll
mov
push
jl
cmpsb
jbe
scas
cltd
jp
and
jb
lods
xor
and
popa
mov
outsb
rcrl
das
clc
pop
push
sbb
pop
clc
sbb
shll
addl
sub
rclb
hlt
adc
add
out
adc
push
cltd
and
mov
fimuls
cmp
loope
cmp
mov
xor
movsl
push
jp
inc
hlt
rclb
fucomp
xor
out
int3
aam
and
jb
sarl
dec
pusha
icebp
insb
ss
cltd
xchg
inc
mov
xchg
push
xchg
add
repz
jmp
mov
jns
push
cs
sbb
inc
cs
or
orb
mov
cwtl
cli
add
daa
and
dec
mov
or
xor
cmp
lret
lcall
outsb
add
rolb
pop
in
and
sbb
pop
leave
dec
mov
int3
ljmp
jmp
shll
jg
jmp
xchg
or
or
shrl
pop
nop
ret
popa
mov
inc
xchg
shl
and
fidivs
rorb
sbb
jmp
push
mov
mov
sub
ds
stos
mov
lock
mov
inc
flds
mov
and
pop
mov
out
cli
outsl
add
pushf
js
pushf
in
jp
lret
shll
jnp
sub
das
lea
and
lcall
cmp
cli
ds
int
sub
outsb
ret
movsl
cmpsb
mov
jne
repz
or
data16
xor
mov
std
sahf
daa
mov
ljmp
dec
rcr
sti
inc
mov
sbb
rclb
or
pop
les
push
push
mov
or
in
jae
popf
xchg
scas
pop
jmp
or
arpl
loop
add
push
mov
into
pushf
fcomi
add
popf
cmp
dec
and
pop
jo
xlat
and
lret
fwait
outsb
hlt
cwtl
loop
pop
sub
das
adc
test
jl
aaa
test
add
inc
mov
mov
out
pop
jno
jno
dec
push
sbb
cmp
push
dec
adc
imul
data16
in
mov
cmpsl
ja
fldt
cmpsl
outsl
je
adc
ficoms
xor
pop
out
fsts
sbb
or
test
jmp
sarb
bound
add
test
into
mov
jecxz
fldt
push
xchg
cmp
out
mov
mov
pop
mov
imul
lahf
lret
push
shll
sub
push
ja
aas
cltd
mov
jecxz
adc
mov
ret
rcll
adc
popf
je
add
rolb
xor
mov
jo
xchg
arpl
sub
pop
sub
mov
jle
mov
stos
jo
jg
cmpsl
pop
and
loope
and
mov
mov
or
in
cmpsb
jecxz
aad
jl
movsb
call
sbb
andb
addr16
jecxz
iret
push
xor
mov
out
mov
add
sub
inc
int
jecxz
mov
xchg
add
mov
push
clc
sbbb
jnp
jbe
dec
pop
js
mov
mov
jnp
out
out
test
testb
xchg
dec
jl
aaa
add
push
pusha
lock
cmp
xchg
outsl
int
je
cli
xchg
cmpsl
jmp
jo
and
mov
rcrl
flds
es
lods
in
push
test
andb
les
adc
dec
sbb
jns
cmp
inc
cmp
and
mov
mov
insb
sbb
add
adc
cli
cmpsl
flds
lcall
pop
and
into
xor
add
pushf
or
inc
pop
jle
push
jns
inc
or
dec
cmp
xchg
mov
jl
bound
mov
push
in
sub
mov
fcmovnbe
cli
sbbl
fisubs
inc
lock
fisubl
inc
sbb
movsb
dec
js
ret
xchg
ss
data16
mov
das
pop
out
je
mov
inc
inc
dec
enter
es
jbe
or
xor
inc
mov
dec
push
f2xm1
dec
inc
push
mov
and
cmp
and
dec
inc
mov
sbb
push
cmp
popa
loope
or
and
outsl
mov
inc
aas
mov
nop
sub
pop
lds
xchg
aaa
fistl
shlb
pop
fs
mov
lea
sti
repz
imul
adc
sbb
jle
add
mov
fidivl
idivb
xor
mov
mov
fwait
mov
outsl
push
add
es
xor
and
jno
adc
lea
xlat
mov
lods
push
fcmovbe
mov
inc
cwtl
and
pop
xchg
mov
inc
cmpsb
out
jbe
aas
mov
xor
movaps
shr
icebp
leave
rol
test
lea
jae
sbb
imul
mov
mov
popf
and
ficompl
dec
add
sub
sete
rcrl
xor
mov
xor
imulb
fisttps
js
popa
pop
or
jno
sbb
aas
cmpsl
mov
cld
cs
fisttpl
es
pop
mov
fwait
xor
addl
mov
jmp
inc
add
mov
in
dec
iret
ds
insl
leave
mov
cmp
jo
adc
scas
sub
sbb
shll
test
out
hlt
cmp
mov
mov
test
and
lods
and
imul
xor
sub
ss
das
jb
fistpl
in
and
aad
push
push
fwait
add
mov
adc
add
mov
pop
out
adc
adc
lcall
add
enter
ljmp
mov
inc
push
pop
pop
sti
lock
scas
xchg
sub
in
jle
inc
test
lret
in
cltd
shr
mov
inc
ss
fwait
pop
jnp
nop
inc
mov
aam
aam
cmpsb
mov
xor
xchg
xchg
aas
vunpckhps
mov
jns
lods
mov
cmp
mov
sbb
cld
testb
dec
mov
sbb
lret
je
cmp
loop
pop
adc
pop
add
push
xor
es
xor
jl
pop
fcmovb
mov
mov
leave
inc
arpl
sarb
mov
movsl
stos
mov
in
xor
pop
mov
ljmp
xor
dec
test
cmpsb
pusha
gs
sub
data16
inc
xchg
push
cld
es
cmp
push
push
push
push
outsl
scas
dec
dec
cmc
mov
sahf
call
sti
push
out
sub
push
inc
loope
sti
dec
pop
dec
push
cmp
adc
or
sbb
add
bound
push
fisubl
dec
sahf
xchg
test
imul
mov
dec
fcmovne
imul
mov
lret
fdecstp
sbb
inc
sti
std
cmp
bound
add
lcall
lahf
xor
int
outsl
mov
popf
dec
cmp
xor
inc
dec
test
mov
dec
pop
gs
xor
pop
sar
clc
dec
cmpb
dec
dec
insb
xor
sbb
bnd
sahf
mov
fdivrl
and
inc
cld
jb
add
xor
mov
addr16
stos
mov
mov
js
dec
inc
aaa
ficompl
icebp
hlt
ret
ss
mov
std
jp
xor
out
aad
push
fdiv
xor
cltd
jae
test
adc
out
sub
mov
cli
mov
fmull
and
xor
scas
cmpsb
aas
mov
xchg
es
popl
push
repnz
lret
push
arpl
fsts
stos
lds
ds
je
cmpsb
rcll
loop
popf
xchg
jg
inc
and
stos
fdivrs
push
addr16
mov
mov
arpl
adc
dec
add
je
fimuls
xchg
bound
nop
scas
or
ret
push
xchg
push
in
pop
jo
cmp
sub
aam
xor
mov
out
push
mov
sbb
cli
test
cmp
pop
push
pusha
std
push
xchg
out
mov
mov
lret
mov
inc
pxor
mov
test
incb
mov
insl
das
les
add
or
je
pop
loopne
or
xor
call
pop
repnz
jl
jns
inc
inc
or
pop
push
sub
jo
outsl
jle
in
or
fwait
mov
outsl
jle
dec
pop
push
and
cmp
std
mov
xor
sub
rcll
incb
xchg
push
call
push
dec
hlt
inc
cwtl
sbb
rcrb
out
das
into
frstor
scas
xlat
xor
cmp
outsl
clc
sub
sub
xchg
ret
lahf
sahf
pop
fs
sbbb
vpsubb
inc
hlt
int
das
add
xchg
and
sbb
add
fsubrl
sub
mov
nop
psubd
or
aad
movsb
lret
pop
and
adc
xor
cltd
stos
out
call
aas
push
sbbb
pop
loope
into
jno
jb
push
jg
pop
inc
in
imul
call
mov
repz
sbb
les
aaa
mov
adc
loop
dec
mov
push
sub
jp
iret
loopne
icebp
int3
lret
xchg
data16
xchg
std
jl
mov
push
pop
inc
jmp
cmpsb
xchg
mov
lahf
jb
mov
int
or
lods
add
mov
push
mov
mov
add
idivb
ds
jbe
scas
gs
jmp
or
xchg
call
or
lds
sbb
mov
not
or
out
repz
xchg
xor
mov
jg
out
cli
push
cmp
sbb
adc
pushl
call
mov
orb
cmp
out
xor
and
std
int3
pushf
jns
inc
mov
jo
inc
out
in
insl
adc
cli
cmp
mov
mov
mov
lods
pavgb
pop
movsb
dec
scas
mov
test
jl
xlat
out
mov
imul
ss
mov
sub
test
in
pop
add
js
mov
imul
ljmp
les
mov
jnp
xchg
or
push
ds
cmp
mov
jle
add
adc
pop
push
test
stos
sub
lret
movsb
ret
push
sub
jle
cld
cmp
rcrl
lock
inc
call
ret
call
sub
pop
ljmp
sbb
subl
lahf
sub
mov
sbb
push
test
rclb
andl
cmpsl
fcmove
mov
sub
push
adc
cmpsl
sti
ds
fdivs
clc
mov
sbb
and
jns
pop
push
push
insl
lcall
inc
imul
pushf
rcr
out
cmpsb
mov
aad
xchg
cld
mov
cmp
mov
es
arpl
dec
sahf
outsl
mov
int
in
jg
int
sahf
out
out
sub
or
xor
into
mov
or
jo
cmovnp
cmp
mov
cmc
scas
mov
pop
test
jmp
cmc
cs
lock
push
lock
add
dec
xchg
push
mov
cmpsb
out
mov
dec
lock
mov
adc
sbb
mov
mov
xchg
adc
jae
jae
lea
stc
mov
insb
mov
cmpsl
cmpsl
rcrl
xor
jnp
mov
sub
cmp
cld
scas
rolb
lret
pop
cld
push
cmp
and
cld
or
fistpl
in
sbb
shlb
mov
jge
dec
adc
repnz
js
mov
shr
test
jp
xchg
shl
xchg
add
lret
andb
mov
popa
outsb
outsl
mov
loope
or
add
cmp
lret
loopne
jmp
or
dec
push
jae
outsb
test
sbb
xchg
sbb
mov
mov
lods
imul
xchg
cmc
mov
jns
jge
mov
test
shrd
mull
inc
or
test
inc
pop
popa
popa
aas
sub
mov
outsl
adc
repz
mov
jae
movsl
aas
nop
jmp
xchg
stc
bound
outsb
scas
leave
dec
sbb
mov
mov
fistpl
push
subl
test
clc
icebp
mov
subl
and
jae
mul
and
mov
jae
das
adc
sahf
push
out
and
out
setnp
sbbl
pop
imul
push
into
xchg
mov
xor
test
sti
sub
rcrb
mov
sub
mov
add
xchg
xor
gs
push
jne
jle
mov
pop
jge
or
loopne
or
xchg
jmp
andb
jmp
out
fadd
mov
push
mov
mov
xchg
inc
dec
and
bound
mov
xchg
out
rorb
cmp
adc
mov
add
and
jnp
shlb
sbb
in
inc
movsb
push
pop
mov
outsb
leave
aaa
insl
stc
mov
lods
fs
sub
push
dec
les
push
push
dec
lods
and
sbb
nop
mov
jmp
cli
push
mov
xor
das
fistpl
outsl
sub
aas
mov
cs
mov
fwait
jne
mov
test
fisubrl
or
jg
mov
dec
shr
ds
add
jne
push
xor
aaa
addr16
mov
popa
cli
jbe
and
dec
xchg
jmp
adc
insl
pop
popl
push
dec
cmp
cli
nop
cmp
in
push
test
stos
std
dec
out
in
dec
add
sub
adc
test
aas
aam
incb
out
icebp
jnp
cld
fistl
jmp
mov
sub
push
outsb
dec
dec
lret
cmp
adc
out
inc
or
sahf
dec
imul
imul
fs
cltd
fwait
lea
xchg
jle
mov
push
imul
pushf
adc
js
mov
das
dec
inc
test
sub
cmp
xor
cmpsl
inc
mov
adc
das
popf
push
out
dec
jne
nop
pop
lret
aam
and
sahf
fidivrl
jbe
adc
cmp
shl
addr16
test
dec
popa
mov
and
sub
cmpl
inc
sub
in
push
mov
push
pop
pop
js
ret
dec
adc
hlt
ret
iret
popf
subl
outsb
outsl
push
jl
mov
mov
jg
push
cmp
push
add
inc
lret
sbb
outsb
ss
movsl
movsb
loopne
jle
push
cmp
push
push
jl
test
inc
fldcw
jecxz
data16
loope
add
mov
test
jmp
or
push
mov
sbb
popf
leave
shlb
pop
push
pop
mov
sub
mov
ljmp
mov
and
mov
push
cmp
rolb
sbb
xor
mov
mov
sub
adc
add
test
jno
push
test
xchg
js
push
rcrl
push
mov
adc
decb
add
dec
pop
sbb
nop
hlt
out
mov
sub
cmp
mov
add
sbb
xor
or
pop
add
je,pt
ret
fisubrs
and
aaa
das
fs
pusha
enter
pop
jl
in
jne
pop
mov
jae
dec
push
scas
pusha
popa
stos
out
in
cmpsl
sub
pop
fiadds
lods
inc
lods
fnstcw
pop
xchg
lea
int3
xor
jge
pop
push
sarl
jns
push
in
push
insb
add
xor
and
movb
add
sub
das
mov
adc
test
and
sub
cltd
js
push
cmp
add
push
je
mov
cmpl
fdivrs
fnstsw
and
push
push
xchg
cs
or
outsb
add
push
mov
jecxz
cld
out
jae
ficoml
cmp
outsl
ljmp
mov
pop
in
and
jns
xchg
xchg
mov
xchg
push
popa
adc
xchg
add
xchg
cmp
and
mov
fcompl
ds
sbb
test
cmp
jmp
pop
push
cmp
aaa
leave
ljmp
mov
sub
sub
jb
sub
mov
arpl
scas
and
mov
subb
pop
paddusw
lock
iret
lds
rcr
xchg
jl
sbb
sbb
xor
shlb
cmpsb
lock
xor
pop
stc
ret
inc
push
cmp
cmp
or
adc
mov
fs
mov
popf
lahf
imul
sub
mov
cltd
js
mov
in
jo,pn
lock
push
cwtl
popf
jl
stos
in
cmp
xchg
pop
cmp
ds
icebp
and
lret
dec
shr
ss
mov
out
cmc
fstpl
mov
ret
aam
jo
mov
jb
mov
sbbl
rclb
cmpsb
loope
imul
sub
fmuls
out
push
push
repnz
mov
cmpsb
aad
xor
lret
adc
repz
lock
jnp
sbb
xor
lret
add
pop
or
pop
add
mov
loope
adc
cmpsb
mov
xor
cmp
xchg
sub
add
arpl
adc
add
dec
out
sti
pop
iret
fbstp
push
jmp
push
shrb
nop
dec
and
jns
cltd
or
xor
mov
mov
mov
lahf
mov
lods
dec
jns
sbb
pop
or
int
mov
aad
push
xor
inc
push
es
sub
std
aad
push
pop
or
lea
dec
sahf
or
pop
arpl
dec
jne
or
sbb
lock
sbb
add
sbb
data16
mov
ds
scas
out
pop
lcall
hlt
push
adc
cmc
dec
pop
cwtl
adcl
push
pop
loope
xchg
mov
pop
mov
rclb
inc
mov
les
xchg
push
dec
mov
adc
icebp
jne
cmp
dec
divl
aad
jno
std
adc
icebp
sub
adc
dec
clc
cmpl
push
cld
inc
lret
mov
xchg
cs
repz
call
outsb
stos
sbb
or
insb
push
arpl
mov
xor
mov
iret
pop
js
push
addl
fstpl
lea
pop
jbe
mov
inc
lods
push
imul
enter
dec
imul
add
cmp
sbb
imul
xor
cmp
hlt
shll
in
xchg
fcmove
and
cmpsl
pop
mov
mov
int
nop
and
lahf
loopne
sub
push
in
mov
loop
cwtl
out
repz
insl
das
cwtl
out
and
mov
pop
or
xchg
push
mov
cltd
jp
push
rcl
inc
mov
mov
and
les
addr16
js
lahf
repz
lcall
cltd
stos
les
cmp
pushf
ds
out
inc
hlt
mov
push
jge
jo
push
gs
push
adc
dec
jg
jle
icebp
inc
dec
xchg
cmp
push
or
cmpsb
lahf
mov
inc
push
pop
xchg
xchg
adc
and
and
sub
push
das
jmp
xor
push
leave
adc
sahf
arpl
cmp
dec
pop
push
adc
push
fadds
in
push
pop
pushf
adc
sbb
mov
inc
xlat
fadds
test
pop
dec
iret
add
fisubrl
jb
out
xchg
and
jg
iret
cwtl
push
ficoml
sub
xor
xchg
mov
push
inc
movsl
in
mov
or
inc
stc
rdtsc
pop
nop
xorb
sub
imul
mov
std
xchg
movsb
jecxz
stos
sbb
push
add
adcb
fisubl
xchg
lcall
push
mov
xor
adc
test
push
mov
xchg
adcb
add
pop
sbb
and
sbb
scas
dec
fs
pop
pop
sub
pop
shlb
fcmovb
jb
and
mov
cmp
cmp
push
jno
add
push
pop
xor
pop
add
nop
gs
loope
mov
dec
outsl
xchg
cmp
rcll
sub
out
mov
stos
cmpsl
pop
cmp
mov
outsb
cmp
push
and
scas
in
js
ret
xor
jp
mov
fcmovbe
ja
xor
mov
adc
ljmp
xchg
jne
dec
cld
jg
jns
insb
hlt
data16
mov
inc
xor
pusha
xor
inc
fbld
ss
test
mov
rcll
pop
xchg
push
es
arpl
ljmp
data16
fisttps
in
jns
or
sahf
aaa
cmp
mov
mov
jne
jge
std
std
inc
test
test
jns
call
mov
xor
fsubr
les
insl
mov
cmp
adc
add
pop
cwtl
fcom
loop
push
add
xchg
cmp
sbb
scas
pop
sub
cmp
cmp
enter
popa
imul
les
hlt
lret
xor
cmc
xchg
imul
jnp
clc
int
cs
fwait
shll
daa
jge
mov
cld
cmpsl
mov
add
mov
mov
or
mov
mov
rol
ret
fcompl
push
jns
in
aaa
add
sub
pop
ds
cmp
xor
inc
xlat
fwait
adc
daa
ljmp
xchg
dec
mov
jbe
xchg
pop
inc
push
dec
mov
arpl
mov
sub
xchg
pop
pop
sbb
mov
in
cmp
mov
cmp
push
pop
or
or
mov
push
lcall
dec
push
push
xchg
mov
cmp
adc
jmp
nop
push
jne
push
shl
imul
das
cwtl
int3
inc
mov
push
dec
mov
xchg
rcrl
jmp
push
inc
xchg
mov
das
pop
pop
xor
rorb
scas
mov
in
mov
mov
cmp
pop
mov
inc
and
xchg
jecxz
xchg
jae
out
jo
loop
test
roll
repnz
push
inc
mov
adc
arpl
jecxz
fistl
ret
sahf
les
xor
bound
test
jae
pop
pop
or
clc
lcall
mov
leave
pop
adc
jle
popl
jbe
push
add
add
or
arpl
pop
push
sbb
cmpb
adc
shl
jg
pop
or
mull
and
cmp
in
mov
pminsw
push
jp
push
gs
outsb
scas
mov
jle
sub
insb
push
or
push
aam
in
mov
pusha
mov
push
js
in
test
cmp
stos
dec
jbe
or
xor
mov
and
out
sub
popf
mov
test
ret
mov
arpl
aaa
sbb
outsl
outsl
pushf
out
mov
adc
shl
ja
imul
mov
push
dec
call
push
add
or
and
in
xor
or
sub
jo
xor
push
hlt
dec
add
mov
mov
adc
rcl
add
out
push
cli
dec
dec
sarl
movsl
hlt
cmpb
hlt
sbb
dec
cmp
or
push
or
jne
xchg
stc
dec
outsb
add
pop
cmp
pop
xchg
sub
cmp
adc
es
movsb
mov
cmp
sub
dec
repz
pushf
shll
cmc
scas
out
shll
sub
inc
cs
repz
pop
std
in
mov
jnp
mov
dec
sbb
pop
xchg
lods
lcall
roll
std
dec
mov
jp
xchg
es
push
sbb
shl
dec
xchg
std
mov
insb
xorl
add
mov
push
lret
sbb
mov
lock
jecxz
js
pop
out
jmp
cwtl
xchg
daa
lret
sbbl
rcrl
cli
cmpsl
sbb
negl
rclb
sbb
pop
leave
pop
int
scas
out
and
shr
pop
lahf
mov
xorl
mov
xor
fisttpl
xchg
jg
popa
scas
sub
es
gs
bound
mov
mov
push
xor
adc
xchg
push
lret
mov
jecxz
out
test
stos
ret
add
aam
dec
or
jl
mov
adc
aas
or
stos
fstpt
fstpl
jle
mov
test
lods
cmpsl
adcl
pop
jp
jle
adc
push
or
mov
inc
movsb
scas
cld
imul
rol
jne
mov
xchg
cmp
fcoml
fs
mov
xor
jne
mov
rcrl
fmull
fldl
inc
add
or
inc
ret
sbb
bound
divl
rcl
loope
ret
loop
and
test
mov
mov
jl
pop
sbb
jo
insb
jb
int
cld
stos
xor
pop
pop
loop
inc
dec
jbe
repnz
pop
cmpsl
test
jno
scas
insl
imul
scas
xlat
stc
ds
outsl
or
es
sbb
shrb
or
shlb
mov
sbb
bswap
enter
xchg
push
inc
jmp
ja
ret
add
aam
add
xchg
adc
outsl
jno
pusha
lret
nop
fidivl
arpl
mov
jl
movsb
repz
cmp
into
enter
dec
cmp
fsubrs
lahf
cmc
shlb
push
sbb
leave
gs
push
daa
jg
mov
lods
add
or
pop
xchg
sahf
jne
aam
ljmp
cs
add
mov
push
int3
push
dec
mov
mov
adc
dec
mov
and
adc
push
jl
jmp
adc
call
aad
mov
clc
cltd
sar
jle
xor
pop
xchg
dec
mov
imul
icebp
inc
sbbb
js
push
arpl
hlt
mov
push
cld
sbb
shl
faddl
aad
je
fcmove
adc
lds
jecxz
push
lods
inc
clc
stos
push
adc
push
shl
aad
mov
mov
xchg
adc
inc
cmp
movsb
repz
cwtl
shll
repnz
or
mov
add
mov
mov
xor
and
imul
jecxz
leave
xor
lds
sub
adc
scas
je
gs
or
jge
lret
mov
lret
jns
xchg
sbb
shrl
cmp
dec
sbb
hlt
adc
xor
push
sbb
int3
lret
inc
fidivs
cmp
sbbb
xlat
imul
andb
mov
data16
jecxz
adc
out
pop
xchg
enter
imul
jge
xadd
ljmp
cld
sub
cmp
in
stc
or
inc
aad
dec
fwait
mov
or
add
xchg
and
popa
push
jmp
popa
insb
mov
xchg
bound
and
std
push
cltd
fadds
out
and
mov
cwtl
push
mov
push
movsl
lret
lret
roll
pop
dec
loope
add
loope
push
jno
test
call
out
mov
sbb
mov
xchg
jb
mov
cltd
loopne
add
dec
or
jg
jno
mov
xlat
xchg
and
sub
sbb
mov
dec
mov
in
mov
adc
mov
adc
mov
mov
movsb
dec
cwtl
lahf
xor
mov
cs
popf
mov
xor
jmp
addr16
inc
dec
xchg
sbb
sbb
push
clc
push
and
and
ret
jae
leave
stos
pop
out
xor
mov
dec
fidivrs
inc
pop
mov
clc
adc
mov
insb
xchg
mov
jl
addr16
xchg
loope
cmp
lods
xor
gs
iret
loope
loopne
sub
into
loope
dec
in
push
xchg
cmc
sbb
jnp
cmp
and
xchg
add
inc
in
mov
pop
scas
push
es
push
in
add
fwait
inc
iret
pop
ds
mov
jge
shll
ja
divl
mov
xor
mov
nop
scas
xchg
mov
push
cmc
inc
or
adc
clc
adc
xlat
pop
inc
loop
nop
icebp
jl
out
les
das
mov
sub
stos
mov
pop
pop
testb
jae
in
lock
js
fisubs
stos
sbb
dec
in
adc
sub
mov
shl
call
lret
stc
or
push
jo
cmp
iret
dec
popf
jne
movsl
jecxz
js
adc
pop
ret
inc
inc
scas
shlb
adc
and
popa
sub
outsl
inc
mov
mov
mov
stos
cmc
mov
mov
gs
popa
xor
sub
lea
mov
add
gs
sbb
fs
cmp
mov
lods
mov
incb
dec
aam
push
push
in
bound
push
out
pop
push
shrb
push
mov
jae
lret
mov
cmp
dec
xchg
or
sbb
adc
sbb
pop
mov
mov
mov
fildll
jmp
jo
xor
int
pop
lahf
cs
xor
ret
cltd
inc
cmp
pop
inc
ja
inc
fcomp
push
leave
iret
adcb
mov
shlb
lret
mov
je
mov
or
js
popa
xor
mov
imul
clc
or
repnz
lods
push
loopne
popf
inc
cltd
mov
dec
mov
rcrb
int
cli
inc
mov
dec
jne
push
cmp
pusha
adc
or
in
sbb
test
jecxz
add
jmp
and
outsl
sbb
outsb
inc
cld
ret
adc
adc
in
fnstsw
xchg
and
or
inc
sbb
push
cmp
mov
jae
xor
imul
repz
test
pop
loope
add
dec
cmp
inc
roll
pop
push
lcall
xor
jp
cmp
repnz
adc
out
rcrl
lock
fisubrl
push
nop
adc
mov
mov
mov
dec
push
add
andl
arpl
add
les
out
repnz
jnp
in
fs
loop
dec
test
xchg
inc
xor
push
mov
xchg
jnp
out
sahf
inc
daa
push
add
fs
lahf
loop
mov
popa
jge
lret
shll
add
repnz
cli
in
mov
mov
add
out
cwtl
push
jl
adc
popa
mov
push
jl
lahf
adc
xor
sub
insl
cmp
cld
dec
push
divb
sbb
pusha
add
push
sub
xchg
out
dec
push
adc
in
xlat
loopne
incl
mov
pop
out
jmp
fcompl
testb
inc
lea
sbb
loope
adcb
mov
std
inc
xor
dec
out
adc
into
addl
xor
in
ret
bound
scas
add
mov
cmp
mov
sbb
roll
add
xor
and
gs
add
shrb
push
inc
in
add
push
dec
pop
lods
bound
mov
insl
out
test
mov
mov
dec
or
popa
mov
jecxz
sbb
sbb
lahf
adc
or
in
in
xchg
jle
mov
stc
int3
loop
fwait
icebp
mov
in
out
rcrb
add
bound
xor
or
ficomps
mov
gs
mov
iret
clc
mov
pop
pop
dec
aas
fadds
loop
jecxz
jg
pushf
andb
ret
mov
jmp
jl
ror
xor
imul
mov
sbb
ret
push
inc
and
je
adc
mov
dec
test
mov
ljmp
icebp
mov
repnz
sbb
out
xchg
aaa
aad
aam
push
jmp
dec
sub
cs
stos
leave
mov
mov
gs
repz
stos
mov
and
mov
loopne
jl
out
roll
and
jg
mulb
sbb
sub
scas
pushf
es
pusha
xchg
mov
ret
loope
mov
ljmp
cld
lds
mov
call
push
dec
je
push
mov
adc
mov
sub
xlat
sti
sbbl
test
xor
pop
aas
add
cmpl
insl
out
loopne
jo
cltd
sbb
mov
testb
dec
sub
not
in
ds
mov
iret
add
jp
nop
push
lock
mov
lea
add
xchg
dec
mov
add
push
jl
push
xchg
xor
push
jns
xchg
mov
stos
imul
pop
dec
push
mov
int3
pop
out
stos
push
jne
xor
xchg
mov
dec
sub
mov
imul
testb
and
mov
push
mov
jecxz
movsb
and
out
pushf
sbb
and
cwtl
mov
push
xchg
ret
add
sub
icebp
out
or
test
or
mov
js
pop
cmpsl
fwait
outsb
inc
jge
or
add
sub
popl
loopne
mov
sbb
push
mov
dec
sub
cmp
xchg
xor
add
clc
push
test
sub
dec
scas
mov
sbb
in
lahf
push
lret
scas
aam
bound
bound
nop
mov
popa
or
test
iret
xor
lcall
sbb
jbe
sub
shlb
into
data16
in
fs
lret
out
inc
mov
lret
jle
jno,pt
cld
and
sbbb
arpl
dec
mov
roll
daa
xchg
lods
inc
nop
cld
sub
xchg
push
or
lods
lahf
iret
jmp
inc
jno
in
pop
inc
cmc
cwtl
adc
imulb
iret
dec
out
jle
mov
and
mov
xor
sbb
dec
lds
push
jmp
xlat
enter
cmp
cmpsl
out
shll
test
jge
push
outsb
mov
mov
mov
mov
fistps
sbb
rcll
or
mov
jle
sahf
mov
fs
fistpl
mov
pop
mov
or
push
lret
mov
cld
xor
add
repnz
jmp
jb
push
std
jo
cmp
popf
loop
xchg
add
scas
data16
sarl
adcl
insl
rcll
xchg
lret
inc
or
subl
fnstcw
aad
or
cmp
dec
push
xchg
mov
sub
jmp
cwtl
and
adc
cmpsl
gs
dec
mov
inc
in
or
in
ja
mov
xor
test
xchg
mov
in
xchg
jne
adc
add
je
idivb
or
xchg
in
js
sti
xor
sub
pop
and
repz
inc
divb
or
popl
popa
cltd
fstl
mov
and
rclb
scas
jg
pusha
jge
incl
sahf
fsubrl
push
out
daa
dec
ds
adc
enter
mov
test
adc
sub
cs
jle
sbb
push
outsl
push
mov
or
fdivrl
and
pop
push
mov
daa
mov
xor
ljmp
push
lea
es
iret
dec
cld
fmul
sti
repnz
jb
lock
mov
fucom
mov
mov
add
pop
push
cmc
sbb
pop
jmp
ja
les
jp
lock
mov
mov
mov
cltd
and
js
xchg
dec
test
jo
pop
sub
movsl
xchg
stc
jo
lods
pop
ret
sub
adc
lret
cmpsb
js
lock
loopw
fsubrp
imul
push
outsb
jmp
fistps
add
gs
and
outsb
pop
orl
inc
adc
lret
cmp
dec
mov
ljmp
mov
cmpsl
ret
jmp
flds
or
fsts
dec
cmpsb
push
cwtl
fildl
mov
xchg
dec
outsl
es
pop
lret
add
jnp
sbbl
inc
push
addr16
das
push
inc
stos
je
jle
sbb
add
lret
add
mov
sbb
subb
aaa
jae
jne
mov
pop
and
mov
dec
cmpsb
std
push
lea
mov
aad
mov
stc
jp
cmp
mov
sub
stos
xchg
or
fsubl
outsl
lcall
jbe
out
js
into
mov
xor
or
xchg
mov
add
adc
pusha
lods
outsl
push
dec
xor
cmc
add
loope
cmovp
test
or
cmc
insb
loopne
insb
call
sub
fdivl
pop
sbb
lea
fucomp
mov
push
cmp
cmpsl
xor
outsl
add
jo
mov
cmpsl
das
jbe
mov
incl
in
sbb
fldt
popf
and
or
inc
push
push
fs
adc
push
es
daa
sti
xor
xchg
or
cltd
push
pop
dec
mov
shlb
outsl
push
loop
fstpt
jge
cmp
sarb
mov
ret
fsubrs
xchg
test
cmp
mov
mov
jae
lea
aas
mov
or
or
push
mov
pop
jne
mov
adc
pop
cmpl
mov
sarb
arpl
mov
jnp
sbb
hlt
bound
push
pop
sbb
jge
stc
cmp
arpl
pushf
cmp
jno
inc
adc
fldt
mov
xchg
iret
rorb
mov
clc
lahf
cmc
lahf
das
fwait
sub
fldenv
repnz
and
fcompl
inc
xor
sbb
ds
xchg
mov
jne
stos
js
push
and
arpl
ja
jmp
jp
inc
ljmp
pop
mov
jne
push
dec
fisubl
mov
pop
in
pop
push
sbb
xor
mov
mov
jl
int
mov
add
cmp
adc
dec
enter
mov
or
push
push
add
jl
imul
push
fsubr
push
mov
dec
add
mov
mov
jmp
sti
cmp
push
stos
js
leave
sbb
jp
push
sbb
repz
xchg
sbb
in
daa
int
out
pop
xor
and
jl
dec
inc
iret
add
sbb
cmp
fs
jnp
cld
inc
push
ja
sbb
lcall
mov
add
inc
sbb
imul
fbld
and
repnz
push
int
or
mov
ljmp
sub
out
pop
mov
test
test
js
fnstenv
arpl
mov
jge
ljmp
sub
cmpsb
int3
outsl
icebp
push
mov
lock
rcr
mov
jmp
fxch
mov
and
cli
push
outsl
adc
pusha
xor
sahf
movbe
mov
add
stc
mov
out
and
hlt
cmc
sub
adc
arpl
enter
xchg
mov
or
ljmp
mov
stc
sub
xorl
pop
cmp
push
mov
xor
je
sub
test
push
pop
jge
stc
out
inc
xchg
sub
ret
adc
or
cmp
push
mov
ja
mov
jg
inc
jl
push
xchg
pop
sub
outsb
ret
adc
pop
push
popa
cmpsl
cmp
cmp
jnp
dec
test
fs
mov
lods
pop
xlat
dec
stos
push
mov
sub
xchg
sub
jne
test
test
xor
cmpsl
push
in
inc
push
push
dec
pop
jge
flds
pop
addb
mov
addr16
add
and
outsl
jno
jo
mov
xchg
das
push
push
fbstp
jb
jnp
mov
loop
aaa
jo
dec
dec
jmp
jb
mov
movsb
dec
dec
add
mov
aad
adc
leave
aas
push
ret
xchg
push
dec
mov
jge
iret
xor
fisubl
std
ljmp
stos
out
add
mov
roll
xorb
xchg
popf
pop
add
cmp
fldenv
stos
mov
xlat
in
cmp
scas
or
add
in
mov
in
das
loope
subl
jle
jecxz
xor
jge
es
repnz
mov
out
rorl
cmpsl
mov
loop
cs
sub
fstl
in
mov
cmp
out
xor
pop
test
jle
shl
push
lods
inc
mov
popa
push
jb
mov
xchg
jmp
sbbb
fidivrl
pop
xlat
lock
sbb
ljmp
int3
pushf
fs
rcrb
mov
dec
cmp
addr16
mov
test
je
sub
aas
leave
int3
pop
jp
mov
sbb
pop
push
ss
loop
cli
inc
test
xchg
dec
jno
shrl
xor
cmc
pusha
mov
mov
mov
pop
movsb
inc
cmp
pop
mov
cmpsl
dec
xchg
cmp
mov
outsb
clc
mov
and
lcall
jmp
movsl
push
out
push
dec
lret
sbb
push
mov
mov
repz
jb
movl
adc
sbb
mov
ja
mov
inc
scas
insl
mov
sub
lcall
mov
clc
sar
mov
mov
adc
je
adc
adc
bound
pop
sahf
xchg
outsl
pushl
dec
push
cmp
sub
int
mov
outsl
lods
cs
jecxz
dec
andl
push
push
xor
mov
lods
cmp
cmp
fwait
out
and
cmp
aam
push
or
sbbl
or
xor
push
int3
ret
push
jae
sbb
clc
loopne
mov
cmc
scas
pop
jmp
out
adc
hlt
rcl
cltd
inc
push
or
sarb
sarl
or
cs
pushf
jecxz
sbb
aad
in
iret
mov
adc
fcmove
mov
mov
xor
mov
popf
or
add
loope
push
pop
cmp
xor
jne
push
sti
push
xchg
loopne
int
dec
stc
pop
mov
idivb
cmpb
sbb
xchg
mov
fadds
pushf
push
pusha
jl
enter
cmpb
in
test
inc
movsb
pop
mov
ds
jmp
movsl
cmp
sub
in
mov
out
or
enter
xlat
repnz
mov
sub
jl
or
ja
dec
jno
sbb
int3
movsl
inc
xchg
xor
add
cs
js
lea
loopne
xchg
movl
in
sub
scas
out
mov
jmp
filds
jle
mov
lods
cmp
lods
sarb
dec
jle
mov
adc
out
ds
mov
jle
loopne
or
pop
mov
xor
mov
sar
pusha
dec
mov
fistpl
sahf
cli
fidivrl
jae
ja
ja
mov
popa
mov
or
mov
sbb
cmp
stc
jbe
rcll
outsl
scas
fwait
ret
mov
add
mov
cmp
add
out
into
aaa
aas
adc
das
fstps
cs
or
loop
aaa
mov
mov
scas
js
sub
cwtl
out
mov
sub
imul
jge
add
icebp
pop
pop
cwtl
sti
lods
pop
int3
cmp
lods
dec
inc
xchg
lock
sarl
add
rcll
inc
cmp
jl
add
mov
xor
mov
movsb
pop
aaa
daa
or
or
je
jecxz
test
sbb
add
jb
sub
cmc
adc
mov
mov
lret
mov
outsl
cmpsb
jg
xor
lahf
adcb
add
cltd
mov
adc
fnstcw
stos
jecxz
imul
daa
pop
and
sbb
add
inc
inc
pop
sbb
push
jge
mov
sbb
inc
pop
xlat
cmp
pop
pop
test
xchg
adc
jo
pop
mov
and
or
lods
add
and
push
pop
pop
xor
fildl
rcll
xchg
je
push
mov
pop
sbb
cmp
das
fildl
xorb
jg
dec
cmc
insb
fucom
cmp
push
ljmp
pop
call
jecxz
lahf
jno
sub
iret
inc
std
mov
lret
mov
es
xchg
pushf
lcall
pop
stos
jmp
fidivrl
outsl
and
mov
rol
mov
jns
pop
cmpsb
xchg
mov
fdivs
int
lret
push
pop
leave
xor
enter
movsb
dec
jecxz
inc
pop
inc
aaa
jbe
and
bnd
fnstsw
nop
ss
xlat
mov
xchg
dec
rcr
sbb
data16
ret
mov
sub
lcall
sbb
sbb
cmpsb
icebp
push
shr
mov
xor
dec
adc
mov
fidivrl
into
cmp
and
jle
jnp
popa
mov
mov
xchg
cmp
add
xchg
outsl
incl
fbld
cmp
and
fldcw
add
imul
hlt
ret
sub
insl
cmp
jbe
in
sub
lcall
cltd
insb
jb
mov
add
fcmovnb
xorl
push
sbb
and
xor
adc
cmpsb
sbb
xor
daa
jl
fucomi
in
push
iret
mov
icebp
mov
jge
dec
sti
lods
pop
pop
gs
xchg
movsb
xor
mov
stos
out
daa
or
out
les
sarl
les
lahf
xchg
push
pop
jnp
sub
adc
sub
popa
fdecstp
ljmp
jns
push
pop
add
call
fisubs
or
in
stos
xchg
fadds
jg
sub
fidivl
je
icebp
loop
call
adc
mov
inc
pusha
and
sarb
stc
cmp
pop
xor
xchg
lahf
pop
loope
jbe
add
jecxz
lods
pop
cmc
outsl
jp
andb
mov
je
fcmovb
incb
jns
lods
dec
add
sub
push
inc
dec
mov
into
mov
inc
mov
icebp
loope
scas
mov
stos
jg
pop
arpl
dec
push
add
call
sti
ja
mov
xchg
mov
adcl
mov
jb
or
pusha
sub
jge
jl
fcomi
xchg
sub
sub
mov
inc
mov
or
in
repz
inc
mov
jle
dec
cld
mov
movl
mov
or
or
sarb
jp
call
xchg
loope
cmp
lods
dec
loop
push
sbbb
mov
scas
pop
gs
mov
xchg
or
cli
imul
in
ret
clc
pop
mov
enter
jp
outsb
insb
clc
push
sub
mov
adc
dec
jb
aad
fs
or
icebp
scas
popa
pop
adc
ficoml
xlat
adcb
cmp
aad
and
xor
repz
inc
fs
jle
sbb
int
adc
mov
add
mov
mov
out
fdivl
fisubl
ljmp
aaa
in
cmpb
imul
fsts
and
jns
jns
fs
or
lods
mov
es
fidivl
rcll
and
push
repnz
mov
or
xor
push
icebp
push
push
test
ja
cmp
push
aad
xchg
iret
sbb
or
call
xchg
pop
cmp
fwait
loopne
addr16
int3
jg
push
mov
add
cmp
mov
stc
xchg
es
pop
pop
stos
or
cli
inc
sub
in
xchg
mov
aas
es
sub
arpl
cmc
inc
shll
aam
pop
mov
cltd
cmc
cwtl
les
jae
mov
xor
rorb
jno
sub
xchg
aad
xor
sub
test
not
mov
popf
jmp
mov
in
or
fbstp
adc
lahf
mov
mov
ret
adc
arpl
dec
mov
gs
add
push
and
ret
adc
cs
push
in
add
sub
out
jp
rorl
sbb
mov
dec
sbb
rcrb
gs
cs
lods
pusha
jp
fldcw
xor
pop
jl
movsb
ja
jo
popf
mov
and
dec
insl
adc
gs
xchg
mov
sahf
adc
pop
or
insb
mov
out
sub
popf
ret
enter
ret
sbb
addr16
jae
in
std
sub
scas
mov
ret
mov
mov
mov
test
mov
addr16
sub
int3
mov
outsl
icebp
inc
mov
xor
and
xlat
adc
vmwrite
sbb
xor
or
ljmp
mov
push
sub
cmpsb
clc
aam
ds
sub
sahf
pop
iret
imul
fldenv
cmp
hlt
jnp
scas
push
js
or
push
xchg
popf
mov
and
dec
jb
test
clc
and
lret
dec
nop
loop
mov
insl
out
fdivr
aas
jns
sbb
testb
mov
lods
cmpsl
in
sbb
lcall
test
xor
sub
inc
xchg
push
inc
cwtl
mov
mov
aas
mov
adc
mov
xchg
adc
lock
pop
cmc
sub
int3
pop
dec
mov
popa
inc
push
jnp
xor
lock
pop
or
in
mov
and
adc
cmpsl
ficompl
sbb
inc
xor
out
sbb
lock
imul
mov
and
inc
ret
mov
pusha
or
test
push
scas
add
cmp
daa
dec
inc
add
or
mov
pop
ss
lds
xchg
fildll
inc
cs
arpl
stos
jo
xchg
inc
in
xchg
xor
xor
lods
stos
std
push
nop
sub
pop
icebp
je
dec
popf
inc
xlat
popf
jmp
test
out
dec
inc
stos
les
fwait
push
adc
jg
mov
sub
cmpb
push
lret
lea
addb
push
mov
lock
lods
loope
dec
cld
jge
mov
and
xchg
stos
dec
mov
je
stos
popf
paddw
addr16
and
loopne
mov
push
pusha
sbb
xor
dec
pop
cmp
rcr
imul
aas
mov
incb
aad
sub
mov
or
add
mov
mov
ja
imul
fisttps
add
xchg
xor
cli
xchg
inc
inc
test
ret
xor
push
inc
cmc
insl
aaa
cwtl
xchg
mov
add
push
xor
dec
lret
jl
add
xchg
inc
mov
in
out
mov
fistl
lea
loop
dec
cwtl
mov
push
mov
mov
sub
pop
jle
mov
mov
add
pop
test
std
fs
or
aam
inc
jne
rcl
cmp
daa
hlt
call
fwait
and
and
fs
mov
es
xchg
dec
bound
or
mov
mov
ds
das
push
sbb
stos
bound
cmp
std
lahf
fdivrl
xchg
iret
lds
lcall
xor
test
sbb
hlt
add
inc
fsubl
and
or
gs
sub
andl
and
push
xlat
mov
cmpsb
xchg
push
in
push
dec
out
orl
inc
cld
xor
dec
push
pop
cwtl
sub
fcompl
lret
cltd
jmp
jne
sub
jmp
push
fiaddl
jp
sub
push
dec
jecxz
in
ljmp
lahf
sar
rclb
dec
pop
sarl
leave
add
rorl
mov
push
cmp
dec
int
xor
div
mulb
add
std
xor
push
mov
push
rorb
inc
sbb
cwtl
push
pusha
sub
fdivr
xor
fdiv
icebp
out
je
test
push
test
imul
ljmp
add
scas
mov
dec
psubsb
push
jno
roll
add
testb
mov
xlat
mov
jae
js
mov
dec
jae
nop
pushf
xchg
pop
sbb
xor
mov
les
fistps
movb
aaa
mov
pop
fbld
out
popf
mov
popf
mov
jle
jno
sbb
push
adc
and
and
fisttps
and
sbb
pop
jne
mov
movsl
fbld
adc
int3
xchg
aad
int3
lahf
cmp
loope
mov
mov
mov
sahf
std
pop
mov
inc
out
pusha
aaa
fisubl
ret
push
loope
jo
xchg
frstpm(287
dec
incb
int
sub
dec
aaa
call
mov
mov
sbb
sbb
insl
scas
jb
jo
cmpsb
rcr
in
push
xor
mov
mov
repz
xlat
loop
divl
pop
push
je
mov
xchg
out
outsb
nop
test
or
mov
mov
je
fwait
push
cli
je
push
mov
pop
cmp
ret
sub
xor
add
sbb
push
mov
add
call
test
test
mov
mov
movsl
cld
out
xchg
test
and
xor
mov
aam
push
das
mov
push
out
mov
ja
xchg
mov
loop
or
test
and
fld
into
mov
outsb
mov
and
xchg
mov
popa
iretw
mov
mov
cmp
jmp
test
out
sub
fwait
mov
mov
sub
pop
in
stos
lock
xor
fbld
nop
mov
aad
int
rcrb
cmp
pop
mov
out
data16
and
cmpsb
xor
inc
pushf
inc
enter
sub
or
sbb
enter
call
negl
popa
and
mov
out
xor
cwtl
jno
fcmovnbe
mov
pop
mov
adc
and
cwtl
add
stc
sub
mov
push
pop
dec
cmp
inc
ret
subl
push
inc
sub
dec
push
add
xchg
add
mov
mov
sti
push
in
xor
fwait
movsb
jbe
in
adc
std
ficomps
ret
sti
std
fwait
addr16
int
jns
mov
leave
sub
stos
push
repnz
mov
jl
fdivrl
into
pop
jecxz
jns
sub
mov
xchg
nop
fldt
mov
wbinvd
test
dec
mov
out
out
or
sbb
dec
sbb
orl
jl
pop
jns
dec
mov
test
add
iret
mov
sbb
mov
lods
mov
sub
push
xchg
mov
pop
inc
xchg
arpl
jno
out
leave
aas
rcll
cmp
xchg
or
popa
add
int
fs
push
or
mov
test
bound
bound
sti
or
cmp
pop
cmc
add
cwtl
fs
fsubrl
or
shl
sti
rcrw
mov
inc
int3
push
mov
sahf
sar
loope
ds
xchg
xchg
push
cwtl
jge
pop
push
pop
fimull
es
nop
test
adc
adc
iret
mov
das
xor
bound
xor
pop
pop
fistpll
mov
loopne
dec
mov
lds
in
int3
dec
xchg
cmpsb
lcall
jge
shrl
cmp
sti
jbe
movsl
dec
jbe
pop
ja
mov
add
pop
sub
fwait
mov
push
jnp
xor
cmpsl
lods
decl
mov
popf
push
outsl
dec
insb
test
add
in
and
je
add
insl
xlat
push
fisubl
adc
push
aam
stc
stos
add
jbe
pop
pusha
push
sub
into
cmp
xor
cmpsb
je
ljmp
pop
mov
sbb
shl
inc
xchg
mov
std
lret
insb
insl
cmpsb
dec
subb
int3
addb
mov
mov
lcall
add
xlat
xchg
fwait
add
rclb
xchg
lret
add
jp
mov
sar
mov
aas
mov
movsb
xor
dec
dec
mov
into
loop
and
inc
push
dec
int
cmova
in
mov
cmp
dec
stc
out
mov
sbb
nop
xor
mov
push
fistpl
aaa
sbb
sub
cmp
jg
cmp
daa
hlt
jge
inc
jl
in
rorl
mov
incl
sbb
push
mov
cmp
imul
pop
rolb
shrb
sti
jb
mov
or
jbe
ja
je
icebp
cmp
popa
enter
and
cmp
fnstsw
rorb
and
cwtl
loop
fsts
sbb
jg
jle
adc
jge
shlb
jno
add
mov
leave
pop
insb
and
adc
or
popf
inc
sub
popa
call
push
xor
xlat
mov
fidivl
sahf
push
add
ljmp
repz
jo
mov
adc
lret
add
push
cmpsl
mov
cmpb
cltd
mov
jp
insl
ret
sub
pop
push
out
call
cmp
inc
push
frstor
nop
movsb
enter
sbb
ret
fdivp
add
cwtl
shlb
sbb
out
les
andl
or
lcall
test
mulb
lcall
sbb
pop
daa
cmp
jg
push
push
push
bound
iret
movsb
pop
xlat
and
push
je
mov
push
pop
xchg
pop
jge
dec
test
mov
cmp
inc
cli
repz
push
mov
cwtl
pop
test
pusha
jnp
mov
push
out
jp
shll
pop
fwait
lret
in
and
stos
pop
mov
mov
pusha
gs
or
mov
popa
inc
aas
pop
push
mov
cmp
or
pop
xchg
call
jnp
daa
dec
mov
cld
inc
mov
pop
jecxz
push
mov
mov
out
fldt
ds
push
cmpsb
cs
push
jle
xor
dec
fldl
repnz
sbb
push
xor
out
add
jno
inc
cld
sub
jns
cltd
push
test
jns
pushf
push
inc
lods
inc
int3
lea
ficoml
push
mov
push
scas
rolb
lret
insb
mov
loop
add
sub
mov
out
and
mov
adc
xor
loope
dec
push
mov
push
mov
dec
jmp
inc
test
pop
in
lea
mov
sub
cmpsl
incl
adc
push
sbb
cld
pop
jmp
xor
sbb
mov
ja
dec
or
or
fdivrs
jne
jbe
jl
sti
leave
icebp
jmp
cmpsl
mov
cmp
jl
fadds
pop
jno
fwait
test
std
adcb
cmpsb
cmp
mov
std
xchg
mov
cltd
dec
aas
sbb
lods
adc
lcall
pop
sub
cli
jb
addr16
inc
push
ds
ja
pop
in
jp
xchg
jo
pop
shrb
outsb
sbb
xchg
adc
pop
gs
das
mov
jae
mov
and
mov
sbb
cmpsb
ljmp
movsb
mov
int3
in
xlat
mov
fcmovnbe
shrl
or
loope
bound
lret
sbb
lea
clc
mov
insb
mov
clc
popa
outsb
imul
push
dec
xor
mov
mov
imul
cltd
outsb
add
pop
sub
mov
mov
add
test
dec
lods
imul
enter
fsubr
lds
xor
scas
and
pop
in
mov
sbb
cs
loop
add
loope
nop
xchg
add
adc
mov
outsb
push
test
int
or
jbe
aas
or
dec
aas
lcall
cmp
mov
mov
mov
lock
cld
outsl
rcr
inc
mov
test
xor
negb
cli
test
jp
mov
cmp
int
and
in
add
js
fwait
cmp
out
pop
sub
in
jbe
push
or
dec
je
push
pop
push
push
pop
xor
sbb
pop
sar
jo
arpl
ret
int3
dec
sahf
les
mov
mov
push
sbb
imul
cld
stc
enter
out
mov
cmp
cmc
jl
jp
inc
lret
leave
std
sbb
jg
aad
clc
loope
sti
cmp
cwtl
inc
es
sub
xchg
pop
jne
icebp
push
pop
ret
stos
aaa
loop
add
xchg
cmpsl
cmp
sar
gs
enter
insb
pop
mov
sub
mov
cmp
pop
adc
out
cmpsb
lods
push
mov
sub
add
and
push
clc
mov
gs
dec
and
test
pop
push
fisttps
notl
ds
jle
push
push
cmp
loop
movsbl
loope
xor
lea
dec
push
dec
jno
jb
ss
in
aad
pop
gs
pusha
incb
push
pop
adc
adc
test
dec
cmp
sub
jne
rcl
mov
mov
sbb
sbb
mov
cwtl
loop
adc
jecxz
push
push
cwtl
jo
int
xor
ljmp
xchg
aaa
and
xchg
dec
mov
jne
cmp
test
out
out
inc
mov
movsb
mov
jbe
xchg
sbb
test
adc
dec
mov
int
sbb
dec
sti
bound
mov
aam
dec
pop
cwtl
cmp
jl
hlt
leave
pop
into
movsl
xchg
insl
sub
fisttpl
mov
cmp
or
cmpsl
mov
mov
mov
xor
outsb
mov
insb
cmp
ret
fistps
and
call
call
adc
test
data16
dec
inc
data16
fdivrs
fidivs
xchg
pop
sub
cmp
inc
sbb
pop
aad
push
xor
mov
mov
add
mov
mov
jnp
and
mov
jp
loop
ret
adc
pmaxsw
cmpsb
push
cmp
out
mov
or
and
xchg
or
cmp
sub
jge
jl
jmp
push
loope
jl
icebp
dec
in
xchg
fidivrl
sbb
inc
data16
xor
mov
icebp
fdivrs
cwtl
fs
insl
es
loope
and
addr16
xor
xlat
xchg
mov
xchg
jp
les
push
subl
xchg
pop
lods
nop
movsb
out
add
sbb
arpl
mov
cmp
ficomps
add
mov
sub
ds
aad
dec
lods
ds
dec
std
sbb
push
in
lcall
jae
shll
xor
ret
aas
popf
lock
inc
fwait
inc
aaa
adc
bound
sbb
cmc
aas
cmp
sub
lods
cld
sub
push
pop
push
xchg
lcall
loope
mov
subb
adc
jmp
stos
mov
sub
lock
lock
loopne
adc
popf
in
or
xor
js
cmp
pop
push
rclb
jo
cs
dec
cmp
fwait
pop
sbb
lret
sbb
adc
test
shll
fsub
pusha
es
push
call
cmp
inc
sub
mov
xor
ret
jecxz
imul
leave
adc
sub
adc
jl
pop
repz
in
outsb
cs
insl
sbb
jb
xor
cmp
scas
jle
pop
xchg
roll
jmp
xchg
and
mov
subb
fnstenv
into
ds
imulb
xchg
sub
sub
fprem
mov
jae
mov
cmpsl
in
or
cltd
sbb
inc
mov
enter
adc
push
mov
insl
adc
pop
int
mov
mov
jbe
bnd
sub
sub
push
daa
das
mov
and
jl
in
xchg
xor
rcrb
mov
aad
sbb
or
pop
jbe
mov
mov
stc
add
repnz
jns
mov
inc
xor
aam
pop
cmp
in
fcom
pop
sbb
icebp
fdivs
jle
stc
xor
mov
mov
ret
inc
aas
add
dec
pop
adc
pop
sbb
loopne,pt
cmp
mov
xlat
push
or
sbb
scas
mov
push
test
movsb
pop
out
imul
ret
mov
mov
js
cmp
add
lret
jge
lret
add
add
jne
and
out
pop
mov
out
outsl
mov
adc
add
push
sbb
xchg
push
pop
fstpl
xlat
push
mov
subl
fldcw
lea
hlt
popa
sahf
outsl
inc
or
popa
pop
mov
int
roll
mov
xchg
bnd
xchg
cmpsl
fwait
xor
jle
ret
scas
push
mov
adc
cli
ficompl
sub
inc
sbb
dec
cmp
fwait
sbb
das
int3
cs
mov
xor
sub
xor
hlt
shl
outsl
lods
dec
arpl
ds
and
rcrb
repnz
or
mov
scas
and
cmp
fwait
push
fisttpl
mov
push
sahf
idivb
or
mov
sub
test
adc
mov
mov
push
notl
jae
adc
outsl
ds
mov
nop
insl
mov
add
aad
imul
sub
push
cmp
mov
add
inc
subl
add
adc
test
cwtl
lahf
mov
gs
loopne
add
inc
fcoml
sti
idivb
clc
aad
push
dec
outsb
add
inc
into
icebp
aaa
add
cltd
pushf
ret
pushf
mov
mov
add
shlb
pop
cwtl
dec
jmp
xchg
mov
outsl
fdivp
push
dec
mov
sub
xor
cmp
xor
sbb
insb
jne
jmp
das
repz
xor
mov
or
cmc
and
cwtl
cmp
add
mov
adc
mov
mov
adcl
fimull
pop
bound
int
ss
or
cmpsl
xor
dec
es
adc
pop
push
es
mov
xor
pop
cmp
and
in
cmc
jmp
repz
je
xchg
sub
push
adc
push
inc
and
sub
jg
js
pop
cltd
add
push
xlat
xor
std
push
fcoms
fbstp
xlat
int3
sti
testl
dec
idivl
and
mov
mov
aad
test
shl
in
nop
neg
push
cmc
adc
pop
add
test
cltd
push
sahf
ja
out
xlat
test
mov
and
or
xchg
popa
sbb
hlt
sub
sub
or
xchg
sub
into
repnz
jno
pop
inc
dec
dec
inc
sbbb
xor
xor
xchg
and
push
arpl
dec
stos
or
sbb
xor
enter
jle
mov
mov
mov
sbb
jns
push
fs
sub
add
lcall
fistpll
out
pop
lret
repnz
ret
add
push
cmpsb
jmp
and
mov
xor
add
jmp
ret
pop
sbb
bound
repz
movsb
daa
jg
gs
jl
push
mov
cld
xchg
ljmp
jmp
sub
pop
cmpsb
movsb
cmp
call
pop
mov
xchg
mov
movsl
xchg
or
shl
bound
movsb
mov
and
cmpl
pop
lods
test
test
xor
test
addb
stos
in
add
jg
addr16
push
and
mov
sbb
lret
pop
fwait
testl
add
in
gs
ficoml
in
mov
out
pop
mov
insb
call
hlt
shll
data16
sub
adc
jg
loop
popa
jns
adc
pop
inc
bound
movsl
mov
adc
jmp
movsl
jno
push
mov
sbb
cld
dec
sub
clc
inc
add
mov
inc
push
inc
fs
bound
subl
mov
mov
bound
mov
fidivs
or
movsb
or
cmc
aam
push
push
test
cmc
inc
xchg
push
push
inc
xor
jp
fadd
dec
inc
into
test
jg
call
mov
jo
and
ret
bound
push
mov
mov
jns
or
lret
xor
andl
add
stos
dec
jbe
xor
ljmp
ja
dec
mov
sahf
test
mov
sub
adc
xchg
cmp
movsl
push
outsb
cmp
lahf
xchg
insb
sub
gs
or
leave
or
popf
cwtl
mov
jne
xor
sbb
xlat
and
fisttpll
int
aam
dec
inc
mov
cmp
inc
imul
adcl
cltd
or
mov
and
dec
and
icebp
inc
dec
sbb
pop
aam
jmp
popa
sub
fnstcw
loope
add
sti
push
je
lret
cmpsl
jmp
jno
imul
sbb
loope
fdivrp
and
leave
cmp
sbb
cmp
mov
inc
push
mov
loop
fdivl
add
xor
xchg
idiv
stos
jbe
jbe
into
pop
aad
cmp
arpl
rcrb
insl
stos
xchg
lahf
cmp
fcmovnb
mov
shll
xlat
in
shl
push
stc
aaa
hlt
sbb
pop
or
sti
mov
outsb
int3
and
jbe
in
lahf
and
js
shll
push
mov
arpl
lret
loop
fwait
out
cmp
cmp
shlb
sub
cmp
lea
inc
and
adc
into
push
incl
jl
mov
inc
lea
popa
int
inc
push
in
sbb
add
cmp
add
fwait
lods
sbb
adc
sub
xor
sbb
fistpll
xchg
pop
andl
lahf
sahf
or
pop
repnz
pop
pop
nop
test
in
lret
clc
xchg
lcall
ret
stc
push
xchg
lahf
cmp
divl
cmpsl
inc
imul
dec
sub
pop
and
out
ds
xor
jecxz
in
addr16
xor
rcr
cmp
xchg
adc
adc
sbb
add
mov
dec
dec
rolb
jmp
cmp
sub
jmp
jmp
mov
mov
and
sahf
test
data16
movsl
std
es
push
pop
pop
mov
xchg
lcall
ror
out
or
mov
ss
subb
cld
mov
pushf
pop
js
jne
jg
clc
pushf
pop
mov
mov
or
pop
mov
mov
lods
cmp
push
das
add
xor
scas
lods
cmp
mov
lock
dec
and
das
das
rol
dec
aam
sbb
jg
mov
stos
push
scas
jg
mov
aas
call
cmp
out
shl
ret
inc
out
in
lss
mov
cmp
jo
inc
outsl
dec
insb
or
mov
xorb
stos
and
mulb
out
scas
inc
les
adc
push
mov
pop
in
mov
mov
test
lcall
push
loope
lods
sbb
xchg
in
pop
repz
insl
cmpsl
pop
xor
or
inc
cmpsb
or
pop
sahf
cmc
pop
ret
loopne
sti
out
out
stos
pop
cld
dec
das
pop
test
sub
pop
sbb
pop
orl
push
fildl
mov
popa
mov
mov
ss
pushf
je
push
aas
idiv
movsb
stc
pushf
in
ljmp
decb
jg
lock
xchg
cmp
cmpsb
jns
out
pop
jecxz
cmp
fs
dec
pop
out
dec
mov
adc
jge
inc
mov
sti
adc
cltd
mov
cmp
pop
pushf
lahf
sub
fldl
inc
adcl
jg
adc
cmp
sub
orl
inc
sub
rcrb
inc
sahf
ljmp
jle
movsb
mov
mov
ja
xor
cmp
sub
jle
lcall
jo
jle
mov
mov
and
loop
shlb
dec
mov
out
sahf
imul
sub
mov
addb
hlt
pushf
and
cwtl
sub
call
repnz
inc
sub
shll
sbbl
popa
and
or
push
divl
lods
loop
xor
mov
mov
mov
outsb
pop
or
cli
mov
fpatan
sbb
inc
pop
stos
ror
aaa
ret
fistl
lahf
pop
mov
movsb
stos
clc
cmc
fnstenv
cs
cld
negl
xchg
gs
rcl
testl
sub
sbb
xchg
or
adc
xor
outsl
jecxz
sbb
scas
jecxz
or
xor
mov
int3
pop
mov
mov
mov
out
or
popf
fmuls
jae
push
daa
cmp
mov
and
mov
daa
pushf
or
out
push
jnp
mov
in
xor
jle
scas
jns
dec
sbb
mov
out
jno
or
test
call
xchg
faddl
sbb
popa
sbb
test
pop
mov
fistps
aaa
test
and
pop
or
cs
inc
push
loop
cmp
jns
lods
stos
dec
lret
pop
mov
fs
dec
sbb
or
xchg
sbb
icebp
test
jns
mov
cmp
cmp
or
adcl
les
mov
pop
icebp
push
ljmp
pop
aam
popf
xor
sub
in
loope
sti
jg
mov
out
sub
outsl
dec
dec
movsl
and
inc
sbbb
jp
sbb
orb
or
mov
mov
cmp
or
add
add
out
and
or
inc
cltd
adc
cmp
loop
mov
push
fsqrt
outsl
adcl
stos
bound
test
out
notl
arpl
mov
sub
fnsave
js
lcall
lock
adc
pop
xchg
cmpsb
sbb
sahf
push
nop
in
mov
xor
test
arpl
xor
test
mov
and
mov
cmc
cmp
into
jae
sbb
adc
clc
fst
jb
adc
push
xchg
ds
fldcw
xor
and
mov
fs
jne
cmpl
scas
lock
jmp
add
sub
pop
push
adc
add
scas
jecxz
je
addr16
add
cmp
add
shrl
data16
xor
ret
popa
push
mov
xchg
stos
mov
push
mov
xchg
dec
push
fmulp
stc
stc
push
pop
rep
test
push
xor
jg
adc
sti
adc
fsubrp
ret
mov
inc
sub
mov
stos
dec
shll
sbb
or
jmp
popf
inc
sub
cmp
popa
inc
xchg
mov
mov
adc
fisttps
int3
dec
inc
outsl
sbb
xor
repnz
mov
jno
fcmovb
je
sbb
andb
mov
std
add
bound
pop
sbb
inc
repnz
mov
pop
adc
xor
mov
lahf
dec
or
or
push
jg
push
gs
push
fwait
popa
outsb
and
xchg
outsl
nop
add
and
and
push
pop
bnd
lret
push
mov
dec
loope
jo,pn
js
inc
dec
negl
scas
outsl
adc
out
add
fcmovnb
xor
mov
scas
int3
dec
push
dec
jl
jns
fwait
imul
aas
fists
or
push
jg
js
jae
inc
sub
push
imul
inc
repnz
cmp
mov
aas
mov
test
sub
add
mov
movsl
sbb
or
or
testb
or
cmp
lret
mov
cld
sbb
leave
sbb
mov
pusha
mov
mov
or
fmulp
jbe
rclb
movsb
push
loopne
pop
inc
mov
jbe
mov
scas
gs
fwait
int
mov
addr16
mov
pop
in
mov
jmp
das
dec
imul
push
cltd
sub
and
movl
xor
dec
lods
push
int3
xchg
lods
push
das
loopne
sub
jmp
lods
xchg
mov
fsts
jns
dec
adc
xor
aad
mov
scas
cld
mov
push
aaa
xor
frstor
mov
enter
xor
xor
movsl
jle
xchg
fdivl
mov
cmp
cmp
jg
and
add
icebp
or
cmpb
mov
movsl
out
pushf
push
sub
mov
ljmp
flds
sub
push
and
aam
in
xor
xchg
push
fsubrl
adc
mov
mov
fcoml
mov
pop
jb
rcll
push
mov
negl
cmp
adc
lcall
shr
xor
inc
mov
sub
inc
test
fs
xlat
mov
stos
mov
xchg
pop
ja
cmp
pop
xchg
mov
push
loope
jmp
xchg
mov
adc
sbbl
xlat
jmp
movsw
lret
fsubr
inc
lret
cmp
push
jae
and
call
inc
iret
subl
inc
sub
repz
test
cmpsl
adcb
sub
sarb
add
mov
xor
cltd
pusha
clc
xor
push
adc
loop
mov
xchg
lret
js
bound
sub
and
into
loope
ret
dec
subb
fwait
jne
pop
adc
push
leave
iret
cli
and
mov
cmp
outsb
sbb
jbe,pt
lcall
movsb
cmc
pop
xor
dec
ficoml
inc
adc
or
pop
mov
xor
fsubrl
cmpsl
inc
lods
adc
cwtl
inc
mov
insl
mov
adc
mov
sub
inc
pop
leave
aas
xor
push
iret
push
jg
add
data16
or
jne
ds
das
jne
mov
cmpsl
sbb
in
iret
cmc
mov
inc
mov
add
lock
int3
popf
and
adc
daa
jno
fdivrs
mov
push
int
push
pop
mov
pop
lock
sub
add
daa
adc
aam
das
cli
inc
aam
inc
and
je
push
icebp
jb
test
fiadds
jmp
in
testb
int3
sub
push
cmp
lods
or
inc
sub
or
data16
in
add
or
outsb
pop
push
sbb
loopne
mov
mov
xor
outsl
push
scas
xchg
dec
testl
and
xor
stc
push
loop
in
es
pop
mov
movsb
inc
aas
jecxz
or
cs
jl
sbb
push
xor
repz
and
adc
in
sub
mov
in
fstpt
repz
sub
cli
js
out
sub
mov
es
aam
push
adc
jne
lret
add
xchg
cli
addl
fldl
push
push
adc
mov
mov
in
mov
inc
cmp
fs
xchg
mov
pop
cmpsb
push
mov
ds
and
rcll
popf
test
mov
xchg
push
ss
and
mov
mov
mov
cmp
inc
sar
into
fisubrs
sub
xchg
loopne
or
adc
push
mov
dec
cmp
imul
insl
add
rcrb
inc
mov
insl
stos
fildl
imul
imulb
mov
push
outsb
or
mov
pop
mov
ljmp
and
inc
lret
sub
sub
aam
outsl
dec
imul
or
lods
addr16
lea
ret
dec
sahf
cwtl
jne
negl
mull
cmp
enter
iret
movlps
jbe,pt
dec
pop
imul
lods
aad
lea
jmp
or
fs
add
push
iret
add
stc
add
pop
jle
mov
jp
sbb
leave
dec
movsl
xor
faddl
imul
adc
jnp
add
sbb
pop
dec
cmp
shll
repz
pop
clc
or
lods
lds
subl
jb
add
mov
lret
fcmovnu
lahf
xchg
add
aas
and
clc
fcmove
xlat
out
and
sub
aas
dec
xchg
xor
jmp
lods
gs
lods
or
sbb
cmp
inc
xlat
mov
or
ja
fcomip
rorb
out
push
pop
es
push
shlb
push
rclb
jne
inc
sub
sbb
sub
movsb
lods
mov
test
ud2
imul
jg
stos
or
test
add
arpl
ja
and
inc
mov
pop
fdivp
inc
pop
shlb
mov
adc
add
aam
mov
mov
pop
xchg
test
mov
add
push
out
cmpsb
call
mov
xchg
lds
or
std
int
push
push
loope
xor
fdivr
scas
and
mov
mov
jecxz
int
dec
cld
xlat
jae
shl
dec
and
cmc
mov
sub
dec
xlat
push
dec
xchg
pop
stos
pop
movsl
cmp
xor
fsubs
cs
and
or
testb
sub
rol
xchg
and
mov
inc
jmp
mov
cmp
pop
cmpsl
pop
neg
iret
and
xchg
sub
fldl
or
pushf
shl
loopne
mov
pop
inc
xor
cmp
lds
jmp
popa
lret
pushf
lea
xchg
lods
or
push
out
dec
xor
adc
mov
mov
fisttpll
inc
and
mov
xchg
iret
xor
jge
or
sti
inc
popf
test
push
rcll
fidivrl
fcmovbe
je
fldl
jle
fisubrl
negb
jae
imul
add
stos
dec
test
mov
adc
fcoms
aam
dec
and
pusha
icebp
sub
gs
mov
pop
fmull
pop
outsl
fcompl
dec
xchg
jle
rcr
mov
or
jnp
or
daa
loopne
xor
lahf
out
adc
sub
push
jbe
pop
iret
xchg
sub
shll
mov
xor
push
cmp
int
cmp
testl
pop
add
or
mov
pop
xchg
dec
popf
into
sub
movsl
lcall
outsb
jmp
sub
loop,pn
js
jae,pt
jb
jne
xorb
incb
decl
aas
dec
inc
lock
mov
dec
cmp
lds
loop
inc
fidivl
pop
ret
mov
mov
cmp
jg
jge
jecxz
inc
adc
repnz
loope
mov
ds
sub
cltd
push
inc
mov
idiv
dec
in
mov
popa
movb
mov
sub
outsl
xor
mov
aaa
sarb
repnz
add
incl
loope
adc
sbb
outsl
call
mov
add
or
data16
fwait
out
pop
ds
jno
add
ss
test
dec
jbe
data16
mov
pop
sub
sbb
fs
inc
inc
enter
inc
or
rcll
enter
pop
jmp
xor
or
je
sbb
inc
mov
cld
inc
ss
jl
add
jbe
stos
inc
dec
int3
xor
call
cmc
mov
loop
push
in
insl
cmc
rcrl
xchg
cmpsb
mov
or
lahf
sbb
push
mov
xchg
std
imul
jecxz
sub
icebp
hlt
jge
xor
lds
sar
jmp
loopne
aam
idivb
jg
stos
int
sub
cmp
call
fwait
bound
mov
adc
xchg
push
js
cmp
cmp
movsb
mov
test
xchg
push
sub
icebp
add
inc
push
aas
bound
push
mov
ud0
add
jns
xor
pop
or
les
push
jo
addl
sbb
les
neg
imul
sub
fsubs
push
movsb
sub
mov
jns
and
sbb
adc
mov
xchg
sbb
mov
cld
and
push
cmp
or
dec
push
or
pop
adc
or
fnstenv
mov
aam
xchg
dec
arpl
cmp
mov
xchg
mov
daa
jle
in
mov
add
dec
notl
sub
sbb
mov
jbe
insl
out
xor
pop
mov
pop
mov
ljmp
lcall
push
cmp
mov
insb
sbbb
mov
lock
push
push
inc
in
cmp
mov
mov
jg
push
call
push
pushf
mov
sub
leave
jmp
jne
movsl
inc
shlb
cmp
loop
pop
lds
out
xchg
cmpsl
sub
mov
inc
cltd
das
sbb
and
sub
add
lahf
jecxz
outsl
sub
rcrb
jl
in
int
fisubrs
mov
in
das
nop
jl
mov
idiv
mov
jb
mov
mov
jl
or
enter
lea
shr
and
dec
sub
outsl
gs
jno
mov
daa
xor
clc
sar
insb
setb
xor
test
xchg
push
icebp
mov
sub
stos
jge
ja
testl
xor
mov
xor
js
outsb
out
or
add
xor
ljmp
pusha
stos
xchg
imul
mov
adc
inc
xor
loope
pop
adc
cli
movsb
xchg
jae
add
pop
mov
arpl
push
lea
fucomip
test
sahf
mov
decb
stos
push
push
loope
sub
push
cmp
cmpsl
adc
pop
mov
ret
pop
sub
mov
or
sbb
sub
cmp
sub
shll
push
and
jg
sbb
mov
xlat
out
out
orl
mov
lret
ljmp
xchg
lock
lods
lret
nop
xchg
sub
jne
imull
dec
jg
mov
adc
idivl
inc
xor
addr16
xchg
cmp
pop
push
push
xchg
push
test
ljmp
and
je
sub
xor
hlt
pop
call
inc
push
shll
pop
rcll
ret
scas
mov
fldcw
jg
push
stos
xchg
pop
push
mov
mov
es
outsl
je
dec
inc
or
dec
insb
ljmp
mov
out
jl
fwait
pop
lds
pop
mov
fsubl
and
add
dec
leave
popa
icebp
sarl
and
and
mov
xchg
push
je
add
pop
adc
sub
mov
inc
push
orl
loop
jns
je
inc
jne
orb
cmpsb
dec
sub
jp
jb
lock
xchg
and
adcb
and
mov
fwait
adc
dec
sbb
and
call
xchg
sbb
jno
mov
pop
push
mov
add
lret
test
lods
cmc
xchg
pushf
jg
jl
cmp
or
push
or
imul
movsl
scas
loope
sub
jp
les
dec
jle
sbb
or
scas
mov
jb
shll
ds
imul
add
add
and
divb
mov
fcmove
into
inc
daa
push
adcb
loope
push
movsb
jecxz
dec
and
xchg
int
dec
sarl
jb
lods
push
mov
pop
loope
andl
ja
inc
or
push
shll
ficomps
pop
mov
fwait
insl
movl
outsl
mov
push
repnz
cltd
js
popa
pop
push
arpl
dec
push
mov
and
bound
push
mov
popa
cld
dec
xchg
ds
jl
jnp
icebp
dec
addr16
orb
movsb
pop
cmp
xchg
xchg
icebp
xchg
push
xor
push
cmp
sbb
es
enter
faddl
scas
es
sbb
push
popa
fwait
stos
jl
jl
add
shrl
sub
jnp
inc
rorl
adc
cmp
add
das
mov
std
addl
bound
xchg
jo
leave
mov
inc
mov
sbb
cmp
add
or
scas
pop
mov
jmp
iret
xchg
dec
aas
cwtl
nop
mov
jno
repnz
dec
mov
sbb
bound
insl
mov
cld
inc
xchg
mov
aaa
jae
sahf
mov
push
pop
jle
ds
pushf
jnp
mov
enter
incl
pop
repz
cmpsb
shrb
es
rsm
lods
scas
cs
icebp
jbe
cli
push
sub
jae
inc
push
inc
pop
jne
sahf
mov
pop
jl
mov
aad
jno
sti
inc
dec
inc
stos
aam
push
sbb
sbb
data16
int
out
aad
push
fnstcw
std
jns
xchg
and
fbld
sub
daa
outsl
jnp
pushf
xlat
cmpsb
pop
stos
inc
mov
dec
xchg
mov
loopne
inc
sbb
rolb
xchg
jb
xor
shll
xchg
add
faddl
or
rorb
pop
lods
jb
in
push
popa
pop
push
popa
dec
dec
rcll
cltd
out
mov
mov
es
sbb
leave
loop
sbb
mov
mov
jle
xor
push
mov
xorb
loopne
jmp
dec
shll
int3
sbb
cmc
stos
and
mov
push
push
fisttps
cld
popf
sbb
cmp
mov
sub
les
fcompl
or
pop
add
inc
pop
mov
dec
push
mov
cmpsb
jae
fldcw
imul
ret
lahf
das
cmp
scas
js
push
mov
xor
int
add
dec
popf
push
cmp
enter
pop
pop
lds
dec
or
sbb
into
fwait
push
rclw
cmp
lds
sub
in
mov
push
pop
fcomi
roll
push
stos
mov
add
xchg
xor
fistpll
pop
or
push
iret
leave
loop
addr16
pushl
push
pop
js
jb
jb
mov
sub
ljmp
dec
cmp
outsb
mov
cmpl
push
leave
adc
jecxz
mov
jne
test
xchg
xchg
mov
popa
out
cmc
pusha
xchg
inc
sbb
cmp
sbb
xchg
test
push
stos
mov
stos
insb
xchg
xorl
mov
sub
lods
inc
xor
nop
xchg
xchg
ds
je
mov
push
mov
jmp
sub
xchg
push
je
mov
xchg
pop
jbe
test
mov
push
fdivp
push
and
pop
pop
adc
ljmpw
repnz
nop
sub
cmp
scas
push
sub
stc
jecxz
jo
test
in
sbb
lea
add
test
sbb
arpl
rol
inc
cmpsl
push
out
stos
shlb
incb
hlt
rcrb
push
push
push
mov
pop
cmp
inc
jp
push
out
lret
pop
pop
mov
lret
mov
cmp
dec
cmp
cwtl
int3
pusha
pop
cltd
shlb
out
and
insb
ljmp
and
aad
inc
add
or
push
mov
adc
fcomi
loopne
pop
aad
jo
movsb
and
push
pop
shrb
in
jmp
push
sbb
adc
xchg
pop
lahf
or
movsl
and
push
sub
imulb
mov
jmp
in
cs
mov
lahf
icebp
sbb
xor
hlt
dec
je
test
test
ja
mov
cmp
inc
psrad
xor
add
leave
push
mov
and
or
cmc
cmp
test
jmp
jo
push
push
mov
push
cs
mov
pop
push
outsb
sbb
cltd
out
jbe
les
rcr
adc
push
test
inc
js
sub
fistpl
popa
enter
mov
test
add
les
outsl
das
fwait
xchg
aaa
cmp
addb
xor
xchg
pop
scas
call
sahf
ss
jmp
sarl
mov
mov
jmp
push
test
add
fmul
adc
mov
mov
mov
popa
mov
pop
mov
cmpb
fdivrl
loopne
pop
pop
in
mov
and
fucom
out
aam
mov
or
or
outsl
clc
mov
jns
and
fsubrp
repz
popf
pop
int3
scas
jbe
shrb
lods
mov
imul
push
jbe
xor
or
sbb
stos
xchg
pop
imul
sbb
inc
imul
dec
or
inc
dec
or
scas
dec
bound
and
imul
jecxz
movsb
cmp
std
addl
dec
pop
cmp
int3
push
mov
fld
jo
add
out
ds
in
mov
iret
shl
aad
inc
ljmp
sbb
pop
cmp
mov
mov
pop
push
adc
inc
cmp
iret
or
out
ljmp
stos
dec
popf
ficomps
add
shrb
jmp
push
jae
shlb
mov
imul
add
jmp
lods
hlt
popa
push
stos
cmp
adc
or
fldenv
les
fidivrs
sub
insl
mov
xchg
ljmp
sti
rorb
xchg
mov
ja
pop
sub
push
add
mov
ret
pop
push
mov
mov
in
mov
and
mov
inc
or
shll
mov
lahf
jne
inc
arpl
mov
push
aad
push
and
lods
inc
mov
ds
jns
call
stos
dec
in
pop
xchg
js
jne
pop
imul
mov
inc
add
sub
stos
std
and
push
ljmp
mov
fisubrs
jns
push
jnp
cmc
dec
or
std
ficompl
ss
or
mov
add
out
xor
sbb
jl
cmc
ror
inc
and
push
add
lock
adc
push
mov
jg
mov
cltd
out
arpl
adc
mov
or
jbe
movsl
arpl
mov
or
add
xchg
sub
add
fs
or
mov
jl
es
fnstsw
out
es
mov
test
mov
test
mov
xchg
cmpsb
adc
outsb
xor
push
pop
mov
roll
push
xchg
mov
pop
inc
xor
push
adc
and
jo
test
cmpsl
cmpsl
and
cmp
push
shll
mov
repz
mov
outsl
adc
repz
loope
jo
dec
popa
mov
jae
cmpsb
fistpl
sub
fsin
mov
fdivrp
jae
aad
nop
inc
test
in
loop
insl
xchg
stos
lret
dec
ss
mov
or
jg
and
jmp
int
jne
ja
mov
aam
les
ret
int3
sarl
ds
pop
mov
xchg
outsb
loope
into
sub
loop
imul
adc
pop
lods
or
sbb
sbb
sub
lea
push
lret
mov
cmpsb
scas
jecxz
push
aas
add
cmc
dec
rcrl
push
mov
pop
mov
xor
pop
sub
adc
jg
push
xchg
shlb
sahf
enter
mov
mov
adc
or
dec
sti
enter
std
mov
sub
sbb
dec
mov
movsl
iret
push
js
mov
cmp
cmpsb
jo
sbb
xchg
insl
dec
sub
les
xchg
add
cmc
test
lods
leave
lods
enter
sbb
insl
sbb
push
scas
dec
outsb
ja
loopne
cmovnp
scas
repz
mov
and
cmp
outsb
jle
mov
cltd
aad
dec
or
lock
jae
adcl
push
movsb
xchg
xchg
cmp
inc
sbb
scas
mov
es
lret
xchg
gs
pop
fcoml
push
ss
sbb
inc
es
andps
cmp
or
sub
and
dec
xchg
push
rorb
xor
fdivl
rcrb
ja
into
mov
test
adc
sbb
mov
xchg
dec
adc
sub
jnp
leave
repz
lahf
aam
and
hlt
ret
pop
fdivrs
inc
sbb
test
jl
sbb
shlb
mov
xchg
fmul
js
add
enter
xchg
mov
nop
sub
ja
jmp
mov
push
pop
imul
fsts
rcrb
cmp
cmp
lret
push
cld
push
shrl
in
push
cmp
xor
or
xchg
inc
fwait
xor
adc
hlt
push
adc
fisttpll
scas
jge
push
mulb
insb
push
lcall
scas
into
cmpsl
lret
sbb
cmc
pop
inc
or
push
sub
dec
aad
sarb
xchg
inc
call
add
bound
pusha
inc
lret
dec
mov
jmp
fwait
cmp
mov
in
pop
cmpsl
pop
mov
pop
and
and
dec
inc
pop
mov
mov
fcom
or
lods
and
xchg
dec
inc
mov
mov
test
sti
jae
imul
and
mov
subl
push
xor
aam
push
sti
pop
subb
pop
jp
cmp
bound
pop
int3
test
or
and
sub
mov
cwtl
mov
dec
mov
pop
mov
cld
mov
cwtl
pop
shll
jle
sbb
popa
mov
fstpl
imul
inc
add
xchg
out
fdivrs
mov
inc
push
cwtl
pop
into
cli
ret
cmp
xor
push
repnz
popa
outsl
or
lret
mov
cwtl
outsl
dec
add
jno
mov
pop
loop,pt
add
push
sub
sub
dec
pop
fstl
cmp
mov
mov
je
pop
push
cld
fwait
movsl
mov
sti
pushf
cmp
cmp
sarl
mov
xchg
outsl
jno
movsb
enter
imul
out
xlat
cmp
arpl
xor
inc
and
rcrl
enter
adc
pop
cwtl
int
shll
lret
mov
loope
addb
xor
xchg
hlt
inc
adc
lret
jecxz
add
inc
push
sub
aaa
mov
jmp
in
scas
pop
faddl
mov
mov
lods
cmp
and
test
arpl
pop
cmp
imul
shll
mov
fwait
es
popf
shll
enter
test
lahf
mov
or
sarl
test
inc
sbb
ss
sbb
out
mov
insl
push
mov
sub
inc
mov
dec
add
loop
push
rcll
jmp
mov
mov
and
add
mov
mov
call
shlb
push
sbb
ret
mov
icebp
cmp
ss
dec
sbb
mov
push
shl
sarb
dec
mov
and
mov
push
xchg
nop
test
dec
adc
inc
cmp
mov
es
add
sub
lcall
and
mov
data16
pop
in
dec
arpl
rorl
sub
fidivs
scas
inc
sub
xchg
stos
add
add
cltd
jns
sbbb
mov
ljmp
push
pop
cmp
mov
mov
pop
xchg
pop
stos
cmp
and
std
movsb
push
cli
mov
loope
enter
mov
movsl
xor
xchg
repz
dec
cmp
or
movsl
int
hlt
add
stos
jns
inc
fcomi
jge
xor
movsb
sarl
dec
cmpsb
or
repz
inc
imul
repz
add
push
or
mov
push
outsb
fisubrs
pop
sbb
sahf
faddl
rorl
push
out
xor
fdivr
xchg
or
jns
js
or
sbb
out
inc
cmp
dec
push
test
xchg
clc
cmp
ficoms
fwait
rorb
stos
xor
call
add
notb
jp
mov
cmp
jns
clc
add
mov
pop
add
orb
rcll
mov
popa
sub
mov
imul
adc
cltd
fdivr
xchg
cmovnp
xlat
and
in
fiaddl
out
decb
mov
xor
daa
fdivr
shlb
mov
mov
pop
mov
dec
popf
ja
mov
dec
sub
lock
and
aas
fisttpl
mov
pop
repnz
cmpb
icebp
ss
mov
sarb
shrl
mov
sti
in
icebp
out
pop
cmpsl
int3
pop
jno
bswap
cli
sub
pop
fs
dec
das
sub
insb
mov
push
mov
xchg
push
je
inc
out
sbb
cmc
stc
and
dec
xchg
daa
nop
out
cld
dec
xchg
in
adc
and
fisttps
mov
jae
in
add
insb
sahf
jecxz
dec
pop
outsl
push
jnp
cmpb
dec
pusha
pop
movsl
push
and
pop
loop
stos
dec
mov
stc
fildll
pop
xor
xchg
mov
lcall
mov
mov
pop
adc
add
fs
insb
jle
ljmp
jge
hlt
xor
push
sbb
xchg
ret
mov
lcall
pop
pop
add
and
add
mov
fstl
pop
dec
ret
lea
out
xchg
adc
rcrb
and
jge
icebp
inc
sub
jp
cli
pop
sbb
pop
es
mov
dec
stc
pop
dec
out
int3
movsb
mov
xor
fnstenv
jg
not
and
test
push
fucomi
jne
xor
mov
insl
xor
out
test
orl
lock
push
enter
jo
push
nop
jmp
dec
mov
sub
sbb
fiaddl
push
pop
xor
xchg
pop
fwait
stos
cmp
bound
lahf
push
dec
fwait
sbb
addr16
mov
xlat
daa
cmpsl
cmp
mov
adc
add
fldenv
mov
mov
mov
and
xchg
xchg
arpl
lcall
adc
gs
outsl
mov
movsb
fidivl
adc
add
pop
divl
sub
sub
decb
cld
cld
in
call
xchg
shll
push
jno
mov
or
push
pushf
nop
scas
repnz
orl
cmpsb
pop
sbb
mov
pop
inc
rorl
roll
adc
lret
lcall
and
or
sbb
sbb
dec
jle
xchg
cli
je
push
shl
fldt
mulb
xor
mov
test
outsl
lret
mov
or
push
push
shll
in
xchg
pop
lret
shrl
gs
cmc
pop
leave
cmpps
pop
mov
pop
in
in
mov
out
mov
xor
fwait
imul
loopne
add
sub
push
jp
lahf
pop
xor
test
mov
fsubs
inc
bound
cli
cmc
in
shrb
mov
mov
dec
xor
ss
repz
std
into
fisttps
pop
xchg
insl
cld
adc
dec
cli
or
popf
pusha
std
rolb
aam
dec
inc
jno
rcrb
add
jp
inc
jp
mov
mov
jb
mov
movb
movsb
or
test
jp
fwait
inc
push
sbb
pop
cmp
insb
adc
mov
arpl
rcll
mov
adc
xor
mov
push
test
dec
xchg
push
dec
pop
inc
pop
decl
xchg
into
or
aas
inc
fwait
outsl
lret
mov
int
push
ja
bound
cmp
or
xor
xchg
sub
pop
cltd
xor
inc
nop
test
push
imull
add
les
inc
mov
fldcw
add
add
insb
fwait
sahf
imul
lock
test
mov
je
dec
jge
mov
je
outsb
rolb
popa
jnp
movsl
xor
jae
nop
cmp
in
pop
jmp
inc
sbb
mov
cltd
movsl
mov
xchg
lret
jge
jnp
mov
inc
arpl
jmp
cmp
popf
shlb
lds
sbbb
je
jne
inc
push
add
enter
ret
xor
sub
cmc
push
sub
and
jne
push
jnp
out
sahf
aad
imul
std
ret
sub
hlt
fmull
dec
dec
push
imul
rcrb
xchg
test
mov
push
stos
inc
pop
pop
loope
es
call
aaa
mov
mov
push
push
mov
xchg
in
jmp
pop
cmc
in
rorb
cltd
push
loopne
fcoms
inc
xchg
mov
mov
lock
fadds
push
js
in
repnz
sbb
icebp
sub
push
nop
je
cmp
mov
outsl
pusha
inc
adc
inc
clc
lock
ljmp
dec
xor
jge
lock
and
and
jg
jae
mov
pushf
jo
inc
cmp
pop
xchg
in
or
push
inc
cmovne
sub
push
in
or
sub
and
mov
addr16
test
jns
lahf
js
dec
push
sbb
mov
dec
cmp
out
decl
fsubrl
xor
dec
cmp
mov
mov
xchg
cs
sub
test
add
jle
and
cs
pop
mov
cmp
adc
sub
xlat
sub
loop
insb
sub
icebp
add
repnz
push
bound
inc
mov
cmp
push
cmc
lret
jbe
sub
cmpsb
sti
push
sub
jo
into
inc
enter
adc
les
push
jp
sbb
cmp
mov
mov
rdtsc
ds
sub
sub
add
das
sub
xchg
outsb
mov
sbb
in
imul
aaa
inc
cmp
sub
push
dec
xor
in
loope
inc
iret
fwait
imul
mov
xor
fists
test
sub
ret
shll
xor
mov
outsb
les
enter
dec
push
inc
cmp
push
or
in
push
mov
push
inc
gs
mov
mov
inc
sbbl
inc
lea
out
pop
pop
pop
icebp
scas
pop
sbb
stos
add
stos
cmpsb
pop
cwtl
hlt
mov
call
xchg
cmp
push
loopne
int3
scas
ret
notl
sub
cwtl
jge
cli
or
in
inc
push
loop
fisttps
push
into
dec
jmp
sub
inc
lock
mov
add
mov
fdivs
sbb
loope
nop
insb
das
add
int3
mov
adc
inc
sub
dec
loop
xor
add
jge
mov
inc
mov
push
fs
jecxz,pt
loop
adcb
sbb
jmp
xchg
insb
push
rcll
jne
add
arpl
out
in
mov
pusha
mov
fildll
rolb
loopne
sti
repnz
xchg
sti
add
shlb
mov
xchg
sti
aam
sbb
push
add
dec
stos
pop
mov
jecxz
sarb
cmp
icebp
jle
aam
daa
sub
mov
cwtl
fildl
inc
adcl
out
popa
or
pop
addr16
out
addr16
pop
pusha
imul
inc
rorb
jno
fnstsw
mov
jmp
inc
push
inc
pop
xor
and
roll
mov
es
int
daa
xchg
add
mov
mov
pop
insb
fs
or
sbbb
test
cltd
jbe
sarb
inc
inc
or
sub
dec
ds
jecxz
ja
push
mov
sub
in
mov
cmp
xchg
fcmove
mov
xchg
mov
sub
movsb
mov
mov
jmp
jmp
and
xor
ret
adc
outsl
es
cmp
dec
ret
dec
rclb
jmp
dec
xchg
push
mov
mov
in
adc
and
push
push
loopne
add
pop
jne
adc
out
mov
ret
stc
movsb
pop
inc
pop
arpl
outsl
sahf
mov
inc
xor
ficomps
mov
cmp
push
push
push
mov
pop
cmp
lods
xor
pop
inc
mov
inc
jge
jbe
jb
in
les
loop
xor
add
push
jb
sub
outsb
bnd
movsl
dec
xor
stos
std
test
inc
cmc
pop
cmp
lods
mov
nop
imul
rclb
add
cmp
push
std
aam
cmp
sbb
and
jb
xor
pop
ret
nop
or
pop
sbbb
xorl
lcall
push
lret
mov
mov
hlt
daa
lret
xlat
jno,pt
mov
mov
sbb
in
jmp
jp
mov
daa
push
orl
add
mov
getsec
icebp
or
ret
insl
cld
int3
dec
cs
pop
leave
adc
call
int3
or
push
daa
xor
enter
cmp
adc
fisttpl
cltd
and
or
iret
outsb
mov
aad
inc
cli
jo
lods
push
out
fwait
push
std
imulb
mov
fisubs
rcrl
xor
into
aad
mov
push
inc
bound
inc
and
lahf
sti
testl
in
ret
or
shll
cwtl
cs
test
lock
push
jae
addr16
mov
ljmp
cmp
and
out
mov
xor
outsl
imul
push
inc
leave
push
or
mov
push
cltd
rcl
xchg
insb
push
mov
mov
xchg
dec
mov
inc
rolb
mov
rol
dec
pop
mov
adc
mov
leave
movsl
lea
loope
loope
inc
cmp
sbb
xor
fcoml
repnz
xchg
pop
push
and
inc
lret
test
insl
jecxz
iret
testb
dec
mov
sub
fsubrl
out
lea
ret
leave
test
sub
sti
ficomps
decb
mov
cmp
pushf
addr16
adc
adc
push
bound
mov
or
cwtl
mov
jmp
loopne
and
popf
test
and
jne
inc
cmp
gs
js
rorb
adcl
inc
in
xor
sub
jle
xchg
sbb
rclb
push
icebp
jae
mov
popa
insl
sub
pop
cltd
xor
jno
mov
or
fwait
pop
push
xor
mov
call
mov
mov
loope
dec
movsl
jae
jno
pushf
loop
push
sbb
mov
fwait
sbb
aam
mov
daa
nop
stc
push
mov
dec
test
mov
es
mov
testb
insl
mov
mov
or
dec
sbbl
inc
out
inc
ljmp
cwtl
or
mov
mov
ret
mov
jle
pop
push
bound
jb
ror
or
mov
sti
inc
insb
mov
jbe
jo
mov
jmp
dec
mov
jne
rcl
cmp
xchg
stos
or
pushf
jae
jns
pop
in
je
and
mov
roll
cmp
out
adc
mov
cmp
mov
pop
cwtl
xor
mov
mov
sarb
cmp
xlat
jae
lea
fisubrl
push
sub
or
sub
pushf
jnp
pusha
ret
sub
jne
outsl
out
dec
xor
js
xor
daa
inc
add
into
adc
push
test
jo
rcr
popa
adc
jno
mov
pop
negl
lret
ljmp
test
mov
in
aam
push
out
movsb
popa
sbb
push
and
lock
sbb
scas
pop
mov
cmp
mov
add
xchg
pop
pop
inc
mov
push
push
fucomi
testb
jmp
sbb
rorb
pop
sub
jmp
stc
std
cwtl
cmp
scas
lods
scas
fs
or
imul
mov
sbb
jbe
mov
stos
xchg
sub
cmc
in
dec
xor
subb
in
xor
test
xchg
jl
iret
movsl
into
jno
test
scas
shrl
je
roll
mov
cmp
inc
ja
mov
inc
mov
aad
inc
cltd
in
lcall
mov
out
sbb
sarl
adc
in
jmp
out
adc
shl
add
out
cmp
jp
leave
jno
out
ja
out
pop
mov
push
in
xchg
push
lods
add
ja
insl
loope
or
sbb
push
nop
mov
arpl
add
shlb
gs
push
sub
ret
and
call
and
jb
mov
scas
lods
andl
fmul
repz
mov
push
xchg
jno
hlt
ljmp
bound
mov
sbbl
in
xchg
insl
cmp
mov
outsl
loopne
out
push
sti
lahf
add
push
movsl
mov
cmp
sbb
mov
push
pop
cmp
adc
xchg
aaa
movsb
jp
mov
repz
xchg
xchg
jmp
dec
das
in
hlt
js
jl
xchg
ja
and
push
sbb
and
int3
es
cmpsl
adc
and
outsl
popa
push
push
or
push
icebp
sub
fwait
hlt
mov
mov
sbb
jp
mov
std
cli
push
aam
xchg
or
and
aam
or
and
mov
mov
adc
mov
adc
jb
mov
inc
dec
scas
cwtl
xor
and
pop
and
mov
cltd
pop
mov
movsl
gs
jns
and
mov
adc
dec
ss
push
inc
jmp
jl
outsl
jns
inc
rcrl
or
cmp
mov
jge
lret
mov
pop
pop
jp
ds
lahf
repnz
fcmovbe
fldenv
insb
mov
cs
sbb
mov
mov
inc
cmp
jmp
lret
sbb
imul
test
push
pop
lea
xor
aaa
sub
jbe
repnz
sbb
mov
stc
adc
lcall
shll
and
dec
and
mov
mov
push
loope
xchg
pop
sub
sbb
push
lock
fnstcw
rcrl
inc
mov
in
inc
ds
ja
jge
add
andb
std
push
loope
das
mov
stos
inc
mov
hlt
lahf
clc
mov
gs
xchg
outsl
fldcw
gs
shlb
jne
popa
lds
cmp
aaa
pop
ss
pop
sbb
mov
pop
fnstsw
rcrl
imul
xchg
xlat
aaa
push
pop
mov
imul
inc
ljmp
sbb
daa
int
dec
push
and
cmc
lea
and
sub
sahf
daa
jno
ficoml
es
je
std
inc
cmpsb
or
pop
adc
pop
and
or
movsl
test
push
outsl
into
mov
repnz
repz
sbb
mov
sub
bound
fistpl
dec
mov
lcall
xchg
xor
and
ret
cmc
lock
cmovl
mov
cmp
cmp
dec
dec
int
and
daa
decl
add
data16
pop
out
mov
xor
sahf
push
idivl
jge
mov
ss
lea
cs
jge
ret
add
aaa
fmul
outsb
fisttpl
ds
jnp
pop
dec
movsl
leave
in
cli
mov
dec
mov
xchg
push
mov
jae
and
repz
movsb
dec
fldt
mov
pop
lret
push
pop
aad
add
sub
push
mov
jns
test
icebp
daa
popf
insl
arpl
sbb
in
cld
inc
cmc
sbb
out
lock
loope
subb
adc
xor
xor
and
pop
jb
xchg
sbb
lds
mov
xlat
repz
jp
lret
std
adc
mov
adc
fs
and
inc
mov
ja
repnz
cld
idiv
jns
into
pop
pop
adc
jge
or
int3
test
adc
je
jo
push
adc
mov
insb
or
inc
and
je
loopne
lea
mov
mov
sbb
xor
hlt
dec
dec
imul
push
dec
push
stc
jbe
es
adc
push
repz
dec
in
mov
testl
pop
mov
cltd
fsubrl
cmovg
lods
xchg
mov
pop
jl
rclb
sub
adc
insl
bsr
fisttpl
sbb
stos
in
xchg
loopne
notl
andb
testb
push
dec
pop
dec
test
mov
xchg
inc
cltd
adc
push
jo
stos
adc
push
mov
add
xor
inc
sub
and
mov
xor
aas
scas
int
mov
xor
outsb
sbb
jb
mov
dec
stc
leave
jle
push
pushf
fcoml
mov
dec
imul
pop
mul
xorl
mov
aad
jno
stc
jno
ss
add
into
push
push
popa
js
jge
popa
int
mov
xor
js
xor
lds
push
pop
rorb
aam
mov
cmp
aam
and
test
jo
cmp
mov
pushf
outsb
lock
out
add
jp
in
inc
fcmovu
addr16
xchg
mov
lods
push
pushf
arpl
cmp
dec
aas
xor
cmp
lock
cli
call
stos
jp
out
push
nop
mov
inc
jmp
cwtl
dec
int
pop
adc
mov
xor
test
aaa
mov
push
push
or
or
mov
in
movsl
pop
icebp
or
push
sbb
jp
dec
orb
aam
ret
nop
loop
lods
jg
push
jae
test
mov
mov
pushf
jmp
inc
dec
mov
sub
cmpsw
push
push
clc
adc
sub
call
sub
pusha
roll
cmp
in
test
pop
jb
pop
movsl
xor
iret
or
icebp
dec
push
mov
sahf
sbb
out
mov
add
test
and
iret
fbld
add
dec
cltd
inc
jno
daa
es
in
inc
add
fstpt
sub
mov
sub
iret
or
mov
push
dec
add
repz
repz
into
xchg
push
xor
inc
fimuls
mov
jae
jl
add
in
add
int3
mov
pop
push
dec
das
push
or
mov
sub
fwait
leave
loopne
rorl
xchg
jns
je
mov
jl
push
arpl
add
roll
dec
mov
jae
jbe
sarl
xchg
push
dec
std
xor
fisttpll
into
subl
sbb
in
push
lds
pop
push
sti
pusha
cltd
xchg
jne
ds
mov
repnz
push
dec
js
cmc
cwtl
pop
xlat
dec
sub
push
rolb
or
daa
push
shrb
add
sbb
jb
mov
and
push
add
inc
out
test
mov
xchg
mov
test
mov
fsubl
push
std
push
mov
xor
or
xchg
jns
int
jnp
int
jmp
or
mov
cmp
mov
out
lods
push
stc
mov
cwtl
adc
outsb
and
xor
xor
inc
insb
addr16
jns,pn
aaa
outsb
mov
inc
pop
stc
sub
dec
imul
sbb
add
loope
or
stos
repnz
sbbl
xchg
push
clc
lcall
sbb
in
and
jmp
scas
inc
int
aam
mov
nop
jae
push
in
jecxz
sub
xchg
aam
push
pop
ror
shl
mov
fdivp
int
aam
mov
mulb
add
cmp
or
inc
push
out
mov
or
mov
sub
cmovo
das
adc
fwait
out
popf
hlt
push
and
sbb
mov
jne
cmpsb
cmp
lahf
dec
mov
cmp
cmp
or
jb
ds
jmp
push
je
adc
fwait
in
adc
jb
push
mov
jnp
push
outsl
das
mov
mov
das
mov
add
clc
mov
insb
loope
pop
inc
ljmp
xchg
int
mov
sub
dec
cmp
or
xchg
movsl
cwtl
pop
cs
lahf
fimuls
pop
ret
xlat
xchg
std
sub
lcall
jle
dec
popf
jmp
sub
dec
jle
dec
lock
in
std
repnz
test
pop
xor
icebp
mov
outsb
js
cmc
push
or
inc
outsb
mov
or
icebp
add
lds
pop
aaa
pop
xor
sub
es
add
stos
andl
jecxz
mov
add
and
mov
in
jbe
notl
test
add
andb
pop
je
sub
cwtl
cmp
jge
movsl
cmp
enter
scas
cmp
fldcw
ss
push
inc
clc
or
movsl
aam
and
subl
out
mov
mov
mov
bound
les
sbb
push
into
cmp
sahf
out
mov
or
repz
incb
psrld
or
fstpt
leave
jg
push
and
cli
mov
pushf
push
mov
movsl
add
scas
les
inc
mov
xchg
mov
xor
es
data16
mov
icebp
lods
xchg
ds
cwtl
sub
std
cmp
movsl
movsl
es
popa
sub
js
movsl
aam
xchg
jnp
cmpsb
popa
and
cli
inc
adc
pop
pop
mov
loop
imul
lret
sbb
imul
in
mov
add
mov
int
push
out
push
popa
adc
js
repz
insl
fdivrs
test
cmc
mov
sbb
pop
fwait
lahf
notb
pop
mov
mov
mov
rorb
movsl
jp
mov
in
mov
xchg
call
jns
push
add
push
cli
je
popa
lcall
sub
decl
sbb
add
mov
lods
or
pop
mov
test
lods
adc
shl
pop
scas
stc
in
jg
into
lcall
push
decl
add
mov
addl
pop
jno
movsb
mov
ja
jae
mov
clc
cmp
pop
fstpl
loope
jl
and
jg
mov
cmp
pusha
pop
std
xchg
out
or
mov
mov
pop
pushf
stc
aaa
sbb
int
pop
inc
loop
out
dec
dec
dec
scas
aaa
cmc
and
cmc
mov
lahf
nop
xor
add
cmp
add
out
aaa
adc
fcompl
cmp
call
mov
adc
cld
xlat
lock
ja
aad
sti
in
or
mov
adc
leave
arpl
cld
fidivs
sbb
ja
subb
push
jo
xchg
outsb
cmp
pop
jecxz
mov
pop
aam
xor
xchg
inc
mov
inc
cmp
mov
nop
push
fidivl
pop
push
mov
cmpsb
xchg
fisttpl
sub
mov
or
mov
pop
lods
pushf
mov
rcrl
mov
inc
int3
sub
xlat
push
pop
cmp
subl
jecxz
inc
push
or
push
cmp
xchg
out
frstor
pop
or
dec
mov
pop
es
push
sub
cwtl
push
sti
in
pop
outsl
into
xor
int
or
test
xchg
push
mov
cmp
xor
in
in
jae
jp
xorl
loopne
jae
sub
pusha
ret
test
jae,pt
roll
push
jns
mov
shll
push
cmp
xsha256
cmpsb
adc
jp
mov
out
les
sub
movsb
lahf
lcall
add
fisttps
mov
cmpsl
cli
fwait
jb
scas
ds
pushf
in
leave
loopne
lods
scas
cmp
enter
xlat
xor
aaa
xor
and
ljmp
jmp
outsb
mov
sub
mov
push
popa
scas
adc
dec
stos
or
ret
test
notl
in
lret
into
stc
stc
ret
xchg
mov
fwait
loope
cltd
aam
in
add
pop
adc
mov
int
mov
pop
dec
mov
orl
adcb
lret
iret
mov
mov
or
shrd
cmp
xor
jmp
jne
push
out
call
ljmp
sub
dec
and
cmp
test
aad
mov
adc
mov
push
icebp
rolb
mov
xchg
inc
xor
sub
mov
hlt
loop
inc
adc
adc
dec
and
paddusb
lret
aam
cmp
jecxz
orb
push
xor
xor
rorl
lea
mov
adc
shlb
pop
xor
arpl
inc
les
mov
fs
jmp
movsb
mov
pop
inc
mov
repz
adc
jne
sub
add
daa
sub
arpl
and
inc
mov
add
xchg
ret
lahf
out
out
lea
push
xor
pop
mov
loop
xor
jne
jle
pop
ds
in
jg
insb
roll
xchg
repz
mov
dec
xchg
jmp
xchg
adc
in
or
hlt
cmp
jae
jl
push
cs
std
mov
dec
mov
adc
pop
push
lds
sub
out
adc
and
iret
adc
jecxz
iret
in
insl
imul
repnz
pop
icebp
insl
push
inc
es
or
mov
lret
pop
adc
or
jecxz
movsl
jae
outsb
out
cmp
fs
test
notb
or
bound
cmpsl
divb
cmpl
sub
dec
xor
xchg
aad
xchg
jbe
cmp
into
pushf
or
mov
fstl
stc
push
imul
sbb
fwait
incl
jb
add
jns
xorl
rcl
movsb
lods
or
push
fcompl
cmpsl
add
inc
fnsave
dec
in
dec
hlt
outsb
pop
ja
insl
dec
sbb
sub
inc
ja
ljmp
and
xor
and
int
mov
add
iret
pop
data16
add
je
jl
bound
adc
mov
ret
mov
jae
jmp
and
sbb
mul
adc
inc
pop
sbb
sub
jnp
outsl
int
std
mov
repnz
flds
xchg
insb
rol
push
and
pop
sbb
ret
std
int3
pop
ret
and
aam
or
sub
push
pop
mov
xor
xor
rcrl
inc
pop
mov
les
lods
mov
scas
sahf
fdivs
and
repz
pop
shl
mov
dec
orl
gs
push
inc
pusha
or
jl
dec
loop
fdivr
sbb
mov
in
ljmp
rcr
fistpll
insl
jns
jge
adc
push
inc
rorl
mov
and
adc
mov
adcb
lea
jmp
mov
sarl
scas
repz
imul
mov
rcl
lcall
push
fstp
pop
push
out
and
enter
addr16
gs
subl
repnz
les
pop
testb
dec
out
in
mov
pop
jmp
arpl
fchs
or
adc
nop
or
pop
imul
sbb
inc
adc
popa
inc
push
dec
fimull
ror
xorb
dec
adc
mov
mov
je
push
sahf
rorl
out
pop
arpl
dec
xchg
arpl
push
inc
mov
divb
lret
dec
ficoms
lock
pop
jg
and
or
fisttpl
pop
lret
outsb
aas
stc
xchg
jmp
clc
adc
mov
and
aaa
add
nop
inc
adc
xchg
inc
arpl
dec
pop
cmpsb
mov
pop
out
pand
in
inc
dec
sbb
cs
testl
nop
mov
add
nop
mov
add
jnp
faddp
in
mov
cmp
ss
stos
and
je
mov
call
and
test
xchg
rcll
push
mov
inc
xlat
std
or
pop
js
dec
subb
enter
push
sub
scas
enter
incl
push
cli
or
mov
jg
jne
sub
aam
xchg
sbb
scas
pop
lahf
hlt
popf
scas
into
mov
mov
adc
push
sub
sahf
repnz
sarb
xchg
or
mov
mov
pop
xchg
cmc
leave
mov
aaa
jmp
lcall
not
adc
or
mov
inc
iret
outsl
mov
jg
mov
loopne
push
sbb
in
pop
add
outsb
and
addr16
shr
fistpl
mov
test
insl
es
mov
hlt
inc
adc
xor
hlt
jmp
std
dec
jecxz
incl
sahf
push
add
fisttpl
out
dec
fisubrs
imul
fiadds
fwait
jmp
shrb
ficompl
sub
push
xor
loopne
jle
inc
add
out
inc
lds
cmc
out
popa
pop
mov
or
scas
enter
sub
push
push
inc
jp
jp
xchg
mov
sbb
sti
fmul
inc
mov
xchg
in
fisttpll
add
out
adc
inc
in
mov
sub
adc
xchg
push
xor
jmp
cmp
dec
rcr
jae
cmpsl
call
xchg
sub
lock
ret
mov
test
mov
leave
push
fnstsw
stc
and
aaa
in
loop
jmp
stos
jmp
repnz
push
or
or
scas
mov
xchg
mov
jmp
aam
xchg
pop
test
or
leave
popf
jle
cmp
dec
mov
ret
jecxz
cmp
xor
lret
mull
push
adc
dec
pusha
popf
inc
dec
pop
dec
xor
cmp
stc
inc
push
sbb
scas
dec
gs
mul
into
fsubp
sar
inc
stc
jmp
sub
negb
xchg
push
testl
icebp
sahf
mov
and
mov
pusha
push
int
cmp
adc
in
cmpsl
jae
add
ds
cwtl
scas
mov
push
mov
sbb
mov
cmp
xor
rcr
mov
ljmp
push
pop
push
ljmp
leave
mov
or
pusha
les
out
push
adc
and
ret
push
dec
inc
cmp
fstpl
mov
or
scas
mov
push
pop
inc
ds
call
stos
push
cmpsl
dec
pop
jl
js
mov
repnz
mov
rolb
lret
rclb
out
push
mov
cmc
subb
leave
in
xchg
and
lret
mov
push
jae
popa
mov
pop
mov
push
shrl
int
aad
sbb
mov
stc
and
stos
and
lret
mov
data16
outsb
push
dec
aas
ret
pusha
dec
jb
dec
or
cwtl
push
mov
xchg
sub
mov
mov
ljmp
loope
dec
mov
cmp
pop
adc
ret
out
inc
mov
cld
cmp
xchg
fwait
ret
int3
mov
and
fcmovb
cli
cmpb
push
and
rclb
mov
mov
scas
jo
iret
nop
adc
std
cwtl
insl
subb
roll
sbb
aas
mov
ja
aad
test
push
add
bound
pop
sbb
mov
pop
inc
mov
mov
mov
xor
xor
fidivrs
cmp
sbb
jne
jne
push
out
mov
lods
xor
jnp
xchg
loopne
testb
xor
mov
bound
and
lahf
dec
bound
testl
or
sub
aad
mov
dec
loope
sbb
inc
ret
jg
out
mov
and
pop
in
jl
xor
inc
mov
jp
addr16
lret
pop
int
push
push
rorl
rcrb
imul
stc
sar
jae
xchg
mov
ret
movsl
outsb
fistps
hlt
mov
sub
loop
adc
sub
dec
cwtl
mov
je
xchg
dec
jnp
pop
or
or
pop
andl
enter
ds
mov
jbe
mov
xor
mov
or
push
in
fisubs
dec
js
pop
outsb
jb
addr16
inc
ss
add
pop
mov
dec
add
push
lods
or
addb
jno
popa
repnz
mov
aad
sub
cmp
mov
dec
jb
xor
pop
sbb
and
adc
pop
repnz
data16
inc
adc
add
or
rol
mov
jecxz
sbb
out
push
adc
cli
rorw
in
lea
or
jl
mov
sahf
lods
mov
in
push
daa
out
pop
pusha
push
jl
cltd
push
push
push
call
xor
xlat
sub
dec
and
dec
mov
push
xchg
add
lahf
clc
mov
lds
xchg
shlb
lret
stc
loope
sbb
xor
cli
and
clc
push
or
cltd
lods
add
loop
add
sub
adc
dec
dec
lahf
mov
repz
sub
add
cmc
mov
lcall
dec
out
mov
aad
cmp
cmp
add
jmp
push
inc
mov
dec
or
xor
aas
mov
lods
pop
popf
xlat
jns
inc
pop
adcb
sbb
cli
loop
pop
fsts
mov
pop
or
outsb
and
xor
fimull
xorb
repz
inc
xchg
lahf
xor
mov
cmp
nop
xchg
push
pop
movsb
xchg
mov
and
js
mov
cmc
xchg
out
das
fildl
adc
mov
ljmp
mov
xor
repnz
fbstp
lahf
xchg
and
cmp
scas
sub
inc
mov
dec
add
aam
push
in
jg
es
int
pop
push
mov
popf
xchg
or
adc
pop
push
int
les
inc
jmp
pusha
push
insl
cmp
xchg
sub
addl
inc
mov
testl
push
inc
xchg
jo
jmp
xchg
ja
sub
js
in
aam
test
fwait
pop
xchg
ficompl
mov
dec
adc
js
pop
push
test
push
mov
mov
mov
xor
sbb
out
addb
jge
lret
les
sahf
and
xor
insl
jmp
das
or
adc
lock
repnz
aam
push
popl
mov
xlat
push
inc
popa
mov
or
or
jl
test
mov
mov
pop
test
xor
aad
in
dec
mov
out
cs
add
add
icebp
and
fldcw
xor
int
cmpsl
push
sub
popf
xchg
fldl
out
stos
and
or
sbb
nop
js
pop
inc
fildl
lret
mov
imul
cmp
fisubrl
adc
fs
ljmp
pop
icebp
hlt
inc
pop
outsb
pop
pusha
mov
in
xlat
sbb
xor
sub
push
insb
or
pusha
cmp
dec
sbb
int
popf
gs
fsubrs
imul
cmp
xchg
imulb
mov
cwtl
jle
les
push
and
dec
cmpsl
icebp
mov
dec
and
popa
psubsb
dec
push
lcall
addr16
std
mov
into
pop
jno
stc
lods
jecxz
stc
xchg
sub
mov
fcoms
mov
loope
lods
jp
clc
adc
ss
or
ljmp
xchg
and
fmull
aad
mov
jb
cmp
test
jnp
adc
dec
out
fdivrs
jmp
push
sub
cmc
je
sbbl
fmuls
cs
adc
lret
repnz
gs
adcb
les
pop
jmp
push
cwtl
rorb
adc
xorl
test
in
aad
and
aas
ds
dec
adc
xor
pop
jg
adc
push
adc
sub
or
mov
add
movsb
or
sar
push
ja
xor
push
es
dec
orl
imul
out
fsubrl
xchg
mov
sbb
loopne
andb
xchg
nop
jns
jle
mov
les
or
inc
lods
subl
xor
leave
xchg
xchg
aaa
add
lret
sarb
sti
movsb
mov
sbb
cmova
rorb
cmp
imul
shlb
pminub
jae
inc
aad
sub
test
mov
dec
pop
mov
mov
add
xchg
xchg
arpl
fidivrl
lret
ret
insb
sahf
out
pop
mov
fldln2
jb
test
out
ljmp
data16
sub
sahf
xor
ljmp
mov
cld
sub
push
mov
sbb
mov
popa
ds
jnp
jg
cli
fbld
adc
cmp
or
dec
xor
and
inc
int
and
mov
ds
std
jbe
stos
sbb
mov
das
inc
mov
xchg
mov
lahf
daa
sbb
imul
sbb
mov
andb
shlb
mov
call
sub
mov
loop
add
test
or
test
int3
or
xor
paddusb
int
push
add
jp
dec
add
jno
fisubl
lret
pop
jno
inc
cwtl
addr16
cld
inc
gs
mov
sar
movsb
nop
sub
push
loope
push
aaa
xchg
ljmp
cwtl
inc
inc
inc
cmc
lcall
mov
jge
js
jecxz
shrl
and
daa
dec
fistpll
iret
or
in
in
dec
mov
lods
fisttpl
stos
lock
fs
cld
iret
inc
lods
push
inc
mov
pusha
imul
pop
lock
ret
shll
repnz
loopne
call
call
out
adc
sub
adc
xor
scas
or
push
leave
sub
sbb
inc
mov
mov
pop
mov
in
push
mov
dec
pop
adc
add
fwait
iret
cltd
sbb
in
xchg
or
jge
pop
int3
pusha
mov
push
das
icebp
out
fstps
mov
inc
sbb
push
inc
outsb
movsl
add
bswap
jge
lcall
cmpsl
shlb
pop
mov
scas
lcall
and
pop
nop
xor
or
push
ja
sti
rcr
ret
mov
adc
in
iret
mov
mov
sub
mov
mov
sub
dec
dec
mov
lods
mov
dec
ds
inc
dec
out
xor
int
mov
les
dec
pop
shll
insb
jae
sub
xchg
add
lahf
add
fwait
dec
mov
sahf
cmpsb
ds
adc
cmpsl
mov
sbb
gs
les
loop
xor
add
out
cmp
sarl
mov
mov
sub
mov
mov
popf
repz
hlt
mov
dec
rorl
mov
movsb
jl
and
fwait
fs
loop
adc
lock
adc
test
pushl
lds
cmc
cltd
push
rcrl
imul
cltd
enter
aad
inc
xlat
push
jnp
dec
pop
loop
jmp
add
orl
sbb
mov
dec
popa
je
stos
ss
sbb
pop
adc
or
addr16
cltd
mov
aaa
mov
or
outsl
sbb
mov
jge
pusha
addr16
or
bound
xchg
pushf
mov
cmp
stos
lods
fsubl
mov
sti
xchg
test
jbe
jbe
adc
sub
mov
sbbb
clc
cltd
dec
dec
adc
push
inc
jo
xor
rcrb
mov
pop
dec
inc
sbb
sbb
andl
ljmp
stos
dec
out
sub
scas
and
jae
jmp
mov
lea
adc
mov
leave
mov
and
jnp
out
sbb
xor
fs
sti
pop
sub
cli
adc
shrb
lret
outsl
push
fwait
cmpsb
rorb
pushl
xor
push
rcrb
xchg
add
inc
lods
ror
mov
aaa
mov
jle
into
daa
cmp
mulb
pop
aas
and
bound
sbb
shr
aam
push
dec
sub
insl
test
dec
adcw
mov
out
outsl
sbb
nop
mov
or
xchg
faddp
sbb
xor
into
cltd
lahf
push
stc
adc
xchg
das
daa
or
in
jmp
jae
push
mul
ficomps
ss
nop
xchg
jle
in
das
mov
dec
arpl
cli
inc
jne
cli
scas
test
xor
dec
shrl
lcall
jle
cmpsb
adc
adc
sahf
sbb
movsb
mov
dec
fdivrs
jns
scas
cmp
cmp
xor
dec
mov
mov
jg
ds
sub
fstl
popa
movb
aaa
push
jg
enter
sub
gs
dec
rorb
inc
xchg
inc
into
mov
mov
xchg
cli
aas
idivl
jae
xchg
repnz
cltd
xchg
add
dec
adc
rcrl
mov
dec
or
sarb
mov
push
or
or
pop
mov
dec
xchg
adc
stos
cmc
mov
add
add
and
push
push
mov
popa
or
mov
push
sub
les
jno
push
adc
andl
xchg
fstp
sbb
jnp
shrb
shlb
adc
add
fidivs
mov
test
dec
daa
or
sub
rorb
fcmovnb
sub
scas
jg
pop
lea
or
pop
movsb
mov
sub
fldt
hlt
push
imul
sarb
jmp
push
insb
cmp
test
and
push
or
dec
xchg
mov
cmp
out
sub
adc
dec
or
mov
xchg
popa
sub
dec
xlat
inc
lods
fdivs
bnd
sbb
out
es
cwtl
mov
dec
ret
ror
mov
cmpsl
cmp
mov
xor
orl
push
dec
dec
movsl
mov
cmpsl
sub
cmp
sbb
fwait
or
popf
cmp
popa
std
dec
dec
faddl
adc
icebp
cmp
incl
out
mov
xchg
cwtl
dec
cltd
mov
mov
int
xor
push
adc
movsl
or
mov
and
jo
mov
arpl
popa
test
scas
push
out
andps
or
and
jno
or
add
andl
outsl
xchg
icebp
ds
jns
dec
test
fs
add
cs
lock
sub
fwait
loop
aad
jp
or
call
pop
jne
shlb
addr16
xor
mov
out
or
mov
pusha
sbb
pop
pop
lock
lds
psubusw
scas
jo
dec
add
mov
aaa
movsb
aaa
lock
insb
jnp
imull
cmpsb
mov
xlat
out
xchg
gs
enter
inc
xor
imul
xchg
sbb
jbe
push
xchg
push
push
sub
mov
mov
cmp
lret
faddl
and
scas
int
aaa
push
mov
cmp
sbb
pop
inc
mov
sarb
cmc
cwtl
inc
loopne
sub
stos
sbb
jecxz
push
lahf
bound
jb
incb
out
sar
jg
and
std
mov
jb
fidivrs
popa
sub
xchg
in
iret
sbb
roll
xlat
sbb
stc
loope
mov
mov
lahf
dec
mov
jbe
pop
mov
and
rcrl
jg
test
addb
outsl
ss
lds
sub
inc
es
stc
iret
out
mov
inc
mov
cmp
ret
aam
add
lock
mov
cmp
xor
pop
jne
dec
push
imul
xchg
int
pop
mov
adc
mov
cli
jbe
or
pop
mov
fildll
jo
jne
xor
shl
push
push
loop
sub
inc
xor
xchg
xor
mov
mov
mov
xchg
movsl
mov
mov
fidivs
cmp
leave
mov
inc
mov
sub
jb
push
fs
xor
fwait
adc
pop
xchg
add
mov
shlb
push
adc
ljmp
sbbb
xchg
cmpsl
cmpsb
push
mov
xchg
subb
call
xor
nop
enter
jmp
shrb
test
nop
js
mov
jmp
loopne
aad
and
sbb
mov
sbb
xchg
rorl
push
cs
imull
shll
outsb
loope
sbbl
cmp
setnp
cli
ret
mov
inc
cmc
add
sub
cmp
sub
jle
dec
xchg
ljmp
mov
std
ljmp
add
cltd
cmc
in
xor
mov
fndisi(8087
xchg
jns
fadds
xchg
jns
repz
xchg
xchg
es
outsb
push
call
jo
or
sarl
xchg
stc
je
jmp
lods
rcll
std
push
push
adc
add
mov
lods
jb
mov
mov
xchg
lds
cmpsb
adc
xchg
mov
pop
daa
negb
xchg
sub
inc
adc
pop
sbb
rcll
aam
mov
mov
mov
pop
mov
push
inc
pop
sub
out
movsb
sbb
leave
and
mov
mov
ficomps
hlt
daa
lcall
dec
lock
xor
jns
inc
cmp
mov
es
mov
or
mov
out
test
popf
imul
pop
pop
clc
bound
inc
imul
iret
or
cmp
rolb
jge
cld
cmp
divb
in
mov
mov
ljmp
leave
in
cld
push
pop
add
pop
lds
xchg
test
push
icebp
mov
xor
cmpb
xor
sbb
pop
sahf
xchg
and
leave
push
jl
lret
add
cli
into
xchg
test
xorb
xor
mov
cld
mov
cld
mov
mov
ret
inc
nop
adc
faddl
sbb
lret
jne
dec
jmp
mov
mov
enter
lcall
push
subl
push
jnp
nop
sub
sahf
adc
adc
push
test
mov
dec
int
fiaddl
arpl
and
sahf
movsl
je
in
mov
inc
mov
mov
mov
push
sahf
jmp
cld
jl
roll
push
xor
mov
add
shll
sub
mov
cld
inc
fcoml
inc
inc
ret
xchg
orl
sub
and
or
dec
push
push
sbb
dec
xor
int
xor
daa
mov
sub
inc
push
inc
mov
push
xchg
ret
mov
push
inc
mov
cmova
mov
shl
popf
sbb
sub
out
cwtl
dec
mov
shr
pop
mov
or
dec
into
data16
imul
pop
pop
lods
jecxz
mov
pop
and
pop
dec
or
mov
add
cmp
cmc
adc
gs
jne
out
mov
push
test
xlat
sub
subb
notl
repz
pusha
scas
and
sub
inc
mov
or
sarb
or
std
sub
lock
push
popa
push
mov
jns
push
sbb
xchg
in
fs
cli
xor
or
cmp
push
sub
repnz
mov
pop
push
push
or
or
add
stc
add
loope
dec
sbb
add
sbb
inc
adc
icebp
push
adc
mov
or
repz
mov
iret
inc
pushf
adc
popa
idivl
mov
das
xchg
lods
adc
aas
std
sub
lods
in
loope
mov
fidivrl
mov
mov
mov
inc
ficomps
or
adc
sbb
mov
mov
mov
pop
pop
add
mov
into
sbb
ror
pusha
sbb
pop
into
adc
adc
pop
andb
je
aaa
sub
repz
sub
mov
and
xor
cli
out
ds
jbe
or
lcall
jb
in
sbb
jmp
lods
sbbl
jbe
xchg
or
or
inc
fcomps
scas
das
mov
push
fsubl
ja
jle
rol
fdivs
mov
inc
call
jb
mov
mov
daa
xchg
adc
fbld
or
sbb
xor
out
mov
sbbl
jno
sub
ds
xor
mov
pop
or
icebp
push
popa
repz
pop
adc
repz
push
jp
les
jae
jmp
jg
jg
inc
lcall
testb
cmp
mull
inc
fwait
adc
push
inc
dec
inc
ficompl
add
jbe
push
pop
stc
push
pop
cmpsb
bound
and
int
mov
add
and
adc
add
lods
ss
cmp
adc
pop
push
lods
cmpsb
fisttps
mov
xchg
lock
xchg
fnstcw
lret
jmp
insl
insl
push
add
xchg
in
jg
scas
push
cmpsb
pop
pop
mov
dec
xchg
inc
fidivrl
stos
fiaddl
mov
sub
sub
mov
and
fsubl
add
jp
rcrl
jecxz
cmpl
xchg
adc
movsb
mov
jne
out
inc
jge
push
push
loope
fsubl
sbb
cs
roll
fidivrl
or
leave
popa
popa
jnp
nop
rcrb
enter
jae
int3
jns
xchg
mov
pop
cmpsb
cs
imulb
adc
push
jne
aad
jae
xchg
push
add
dec
pop
mov
and
or
push
push
mov
adc
or
cmc
mov
xchg
outsl
inc
and
pop
fdivrp
and
loop
jge
xchg
sub
sbb
jbe
add
jmp
test
dec
and
ss
int
pop
shlb
inc
mov
adc
sti
scas
sub
inc
lret
cli
push
mov
ds
jl
loop
in
pop
fildl
and
inc
mov
jno
xchg
push
or
sub
cmc
mov
imul
jmp
or
add
xor
mul
dec
mov
or
in
xchg
xor
sbb
xchg
jle
je
fldenv
js
lahf
push
out
lock
or
mov
inc
insb
icebp
pusha
testb
ljmp
or
push
lcall
rcr
add
push
sbb
push
dec
sbb
std
lret
repz
sbb
push
shr
cwtl
and
cmp
add
fdivrl
repz
mov
cltd
fwait
cmp
cmp
sub
jns
ret
jne
out
jb
sub
clc
out
into
pop
xchg
mov
call
lea
jne
adc
cmp
les
stos
and
int
lcall
and
fildll
xor
sub
push
push
gs
fsubrs
fsub
mov
loop
cmp
jbe
dec
test
mov
inc
add
mov
std
andb
mov
jne
jo
push
gs
adc
ljmp
mov
mov
sbb
iret
dec
mov
popa
and
repz
xchg
dec
insl
scas
push
fiaddl
inc
cmpsl
sub
mov
jne
ret
lretw
or
js
fs
sbb
mov
mov
scas
hlt
sahf
roll
scas
adc
cmp
es
aas
mov
pop
xchg
test
test
xchg
xor
rcl
test
push
sub
push
fwait
dec
mov
in
into
je
dec
inc
add
enter
loop
ret
push
aas
outsl
push
dec
add
in
mov
xor
lds
push
in
adc
xchg
negl
xlat
loop
add
inc
mov
stos
roll
push
dec
dec
xchg
cwtl
add
mov
push
js
sbb
cmp
pushl
aas
fcomps
and
movsb
insb
mov
push
aaa
icebp
mov
xor
loop
mov
pop
xchg
repz
ss
mov
ljmp
push
or
ljmp
jnp
into
and
sub
push
xchg
repnz
pop
popf
add
fisttps
sahf
das
mov
insb
or
xchg
std
or
sarb
out
movsb
xor
addr16
push
add
inc
lcall
sbb
xor
addl
mov
push
pop
les
ja
xor
pop
stos
addr16
dec
xchg
repz
adcb
sti
push
or
inc
outsb
fsts
inc
lock
and
stos
sbb
and
shrb
xor
movsl
push
xor
in
cmp
inc
xor
int3
popa
sbb
ljmp
xor
je
fiadds
jae
ljmp
mov
shlb
iret
in
ss
jmp
mov
pop
inc
in
xor
lcall
xchg
mov
in
inc
fcmovbe
sbb
adc
mov
xchg
mov
outsl
xchg
out
inc
repz
lods
and
repnz
pop
ret
adc
insl
mov
shlb
cld
and
mov
arpl
pop
adc
gs
pop
and
jne
dec
push
pop
mov
lods
jno
jp
les
cli
adc
sbb
dec
sub
dec
dec
pop
pmulhw
dec
test
add
sub
xor
jp
lcall
mov
js
shl
xor
adc
dec
jge
xor
test
and
dec
mov
adc
add
jbe
lahf
mov
sbb
adc
mov
jmp
push
mov
sahf
cwtl
cld
xor
dec
dec
mov
or
shl
sldt
cmp
daa
sub
aad
xchg
pop
and
push
and
imulb
mov
xchg
xor
icebp
jno
test
mov
nop
mov
mov
bound
lret
sub
lcall
lds
cli
into
aad
sbb
popf
rorb
mov
jns
jmp
or
cmc
scas
jl
pop
stos
aaa
or
leave
pop
outsl
popf
dec
movsb
xchg
les
or
stos
das
test
jo
int3
sub
outsl
bound
in
fmull
in
je
sub
add
cmpsl
imul
out
adc
ret
div
imul
int
and
xor
mov
in
sbb
cld
cmp
movsl
stos
popa
clc
cld
shlb
shlb
push
mov
ret
popa
enter
xchg
add
pop
je
push
dec
cmp
add
roll
xchg
enter
sub
adc
movsl
push
mov
push
mov
sbb
jl
cmp
shll
add
dec
dec
mov
mov
mov
sbb
ss
addl
shlb
push
mov
movsb
sub
mov
in
dec
cli
ja
pushf
dec
stos
xor
ja
xor
into
ret
jo
mov
rolb
pop
test
mov
or
sub
lds
in
fwait
cmpsl
cltd
mov
mov
inc
cmpsl
adc
cmp
sub
repz
mov
pop
mov
pusha
out
xchg
jge
cmpsl
test
out
iret
aam
pop
sbb
icebp
sub
fildll
je
shrb
jp
out
loopne
xchg
sbb
test
aad
movsb
jmp
sbb
lcall
mov
mov
cmp
fstps
push
adcl
cs
imul
test
js
cmp
iret
dec
sub
mov
es
and
out
sar
push
into
sbb
mov
scas
cmp
ja
xchg
mov
repz
aad
and
pushf
imulb
sub
mov
cmpsl
popf
aad
add
pusha
jge
js
icebp
test
jp
cmp
popa
movsl
out
mov
inc
add
inc
sbb
clc
xor
and
rclb
push
clc
sub
les
mov
mov
cmp
or
push
mov
jmp
shrb
test
or
dec
and
mov
sub
ja
fdiv
ret
mov
jo
sti
push
cmpsw
in
in
pop
lahf
push
xchg
fists
call
xchg
and
pop
adc
pop
arpl
and
xor
lods
es
imul
clc
mov
lcall
aaa
pop
loop
outsl
loope
cmc
cmpl
pop
jo
frstor
sahf
or
test
push
pop
sub
add
cmpsb
adc
xlat
sub
dec
sbb
das
mov
outsl
call
in
xor
movsl
cmp
fdivr
jns
aam
sarl
sbb
pop
call
cmpsl
inc
push
xchg
sbbb
imul
repz
jo
mov
push
xchg
adc
xchg
sahf
das
lods
aas
sahf
cmpsl
test
jo
int3
cmp
cmp
mov
js
pop
fidivrs
pop
jg
icebp
ds
fdivl
and
shll
or
inc
jle
in
lret
jae
mov
inc
stos
nop
cmp
ds
add
push
paddb
sub
lock
in
aam
lea
cmpsl
sbb
adc
xor
shrl
sub
mov
adc
jbe
lods
inc
testl
mov
adc
hlt
add
shll
or
cld
pop
add
sub
mov
dec
lea
enter
jmp
jg
dec
aaa
das
dec
mov
add
into
push
std
fnstenv
mov
adc
das
cmp
pop
push
sub
mov
es
xlat
sbb
inc
add
test
lods
cltd
dec
subl
mov
or
dec
or
jmp
or
xchg
pop
aas
jge
aad
push
rorb
int
sbb
xor
cmpsl
jp
shlb
jns
ds
inc
add
scas
rorl
lret
dec
push
inc
xor
push
insl
ret
push
mov
xchg
jnp
sub
xor
imul
cmp
inc
push
cli
mov
leave
into
andb
loop
mov
mov
repnz
notl
je
js
xchg
mov
cmp
xor
daa
xor
iret
mov
and
es
jle
fists
lods
pushf
inc
dec
adc
test
dec
mov
cmp
dec
iret
addr16
repz
repnz
cmpl
popf
lods
lret
xor
fstl
add
and
and
pushf
add
dec
fwait
cmpsl
jge
and
push
or
xchg
xchg
stc
ljmp
mov
jmp
fsts
fwait
jle
adc
xchg
xor
rolb
in
xchg
adcl
das
push
jno
pop
dec
add
add
mov
mov
stc
cmp
and
inc
std
mov
adcl
add
and
leave
loop
xchg
es
dec
add
sbb
lahf
into
sub
icebp
jne
adc
xor
dec
lret
fsubrl
lret
push
test
sub
lea
stos
pop
ss
dec
dec
xchg
aad
jl
or
cld
stc
jecxz
notb
int
mov
test
push
push
xlat
aas
nop
pop
xchg
fnstcw
shlb
stos
dec
in
adc
test
fadd
lret
test
mov
arpl
repz
clc
icebp
stos
imul
not
push
call
adcl
orl
cmpb
inc
sbb
arpl
xchg
test
or
jo
sub
popf
xchg
jle
mov
in
xchg
xor
inc
or
jnp
movsl
xor
adc
mov
mov
fidivs
movsb
ja
mov
lods
and
pop
and
sti
mov
and
xor
stos
gs
xchg
sub
pop
push
popl
test
mov
decl
mov
push
rep
mov
lea
mov
test
inc
stos
mov
cmp
push
mov
leave
jp
xchg
ljmp
mov
pop
std
adcl
aaa
jecxz
insl
jo
mov
rcrb
popa
add
stos
pop
pop
das
daa
testb
lahf
cld
mov
cmp
adc
sbb
loope
push
mov
inc
mov
insl
xorl
lods
xor
rorl
hlt
jno
ret
jb
push
adc
lret
dec
jo
xchg
xlat
xchg
je
enter
inc
inc
ror
pop
xor
sub
jmp
pusha
jecxz
inc
mov
mov
lcall
aas
xor
cmp
push
orl
addr16
popa
in
repz
pop
imul
fld
ret
pushl
jecxz
adc
adc
or
mov
adc
sbb
inc
bound
ret
add
add
ror
jne
fldt
test
insb
mov
rcl
leave
xchg
mov
xchg
inc
xchg
orl
mov
pusha
iret
sbb
into
lods
sbb
lds
popf
stos
xorb
addr16
mov
rorb
aas
sbb
inc
jb
jle
add
inc
mov
mov
dec
subl
jb
test
lds
cmpsb
jp
int
xchg
fdivrl
out
scas
lea
sahf
inc
pop
test
xor
sbb
xchg
imul
jns
ret
jno
subl
mov
loopne
roll
jecxz
xchg
icebp
lret
addr16
xchg
mov
jg
lret
lret
dec
push
mov
adcb
fisttpll
or
rcll
sub
cmpsb
xchg
sub
enter
call
sti
push
ret
clc
lahf
mov
lock
dec
xlat
mov
fisubs
jp
and
out
push
mov
bound
sub
cld
call
and
fmulp
shrl
imull
push
call
dec
fwait
gs
xor
mov
mov
je
adc
negb
adc
xorb
cmp
lods
pop
lods
stos
inc
push
mov
pushf
cmp
shrb
mov
daa
std
xor
push
mov
bound
xor
jae
jp
inc
fistl
push
xchg
lret
mov
push
into
xchg
add
addr16
mov
xor
xchg
mov
rorl
pop
ja
out
jecxz
cmpsb
das
xor
jne
xchg
push
mov
cmpsb
push
inc
xor
inc
sub
repz
mov
jp
fistpll
movsl
out
sub
sub
fmuls
cwtl
stos
cmp
sbb
shr
cmp
mov
xchg
aam
pop
cmp
xchg
adc
fldt
cli
jmp
pop
and
or
jle
fs
jb
add
fistps
andb
jmp
mov
inc
movsl
push
jmp
jle
popa
inc
adc
dec
xor
pushf
or
rcrl
cmp
cmp
push
xor
dec
aad
inc
mov
pushf
push
xchg
loopw
ret
lock
cmpsl
xchg
inc
push
in
lahf
fnstenv
jns
cmp
or
push
lcall
cwtl
adc
push
sub
pop
and
in
mov
add
cld
rcrb
std
outsb
jg
adc
in
push
lods
mov
xchg
add
lcall
test
and
sbb
out
pop
jo
pop
mov
test
lret
adc
cmp
xor
jle
call
fsubl
cld
jp
pop
mov
push
lcall
aad
stc
loop
in
aas
adc
cld
mov
xchg
fwait
adc
mov
mov
xor
push
xlat
or
pop
into
or
push
adc
enter
jo
int3
adc
jmp
inc
inc
add
in
pop
xor
popa
mov
repz
ja
adc
mov
adc
mov
sahf
lcall
sbb
mov
outsl
imul
add
mov
insb
mov
xchg
jae
cmp
inc
mov
cld
add
inc
push
lea
outsl
jns
xchg
cmpsl
pop
mov
and
popf
les
pop
inc
rorb
idivb
ss
xchg
repz
iret
pop
add
shlb
and
xor
dec
sub
addr16
sbb
stos
int3
movsl
push
mov
insb
dec
push
adc
movsl
fwait
test
adc
ds
rcl
mov
subb
std
int
sbb
and
inc
sub
int3
test
sbb
jno
out
icebp
cmp
mov
mov
repnz
xchg
ja
pop
sbb
movb
ret
rolb
xchg
je
fdivrl
daa
push
ret
and
sbb
mov
push
loopne
jb
test
mov
mov
sub
jne
cmp
inc
dec
xlat
daa
inc
insl
lock
cmp
lock
cld
jmp
cmp
inc
testb
mov
push
xor
pop
in
out
orl
icebp
sbb
inc
popf
je
loopne
imul
sbb
fsubs
je
in
in
xor
mov
mov
lahf
mov
dec
adc
xor
stos
lods
imul
adc
hlt
or
push
xchg
xor
cmpl
mov
push
fwait
data16
add
sbb
push
icebp
imul
test
sar
insb
aas
sub
xchg
adc
cmp
scas
in
loope
lock
add
and
adc
push
lret
fs
in
lcall
sub
fldlg2
mov
sar
xchg
mov
dec
lods
lahf
mov
push
clc
lret
mov
pop
out
lods
cmp
shr
mov
push
lea
mov
mov
fisubs
mov
push
mov
loope
repnz
popa
or
pop
not
inc
sbb
mov
in
and
inc
lret
das
ret
cmpsb
lcall
jg
dec
push
jnp
add
inc
addl
sarb
jnp
das
jp
dec
in
push
mov
inc
ficoms
mov
and
lods
or
sub
dec
je
jne
jae
sarb
jnp
cli
cmpsb
stc
lret
hlt
sub
data16
add
xor
mov
xor
cmp
adc
call
jl
and
pushf
je
xor
aaa
dec
and
sbbb
icebp
or
cs
repz
rclb
gs
mov
cmpsb
or
mov
xorb
je
xchg
sbb
inc
xchg
adc
ja
test
pop
add
sbb
push
adc
or
xor
pop
fmul
xor
outsb
sub
inc
clc
loope
jno
in
in
pop
sets
fisubrl
inc
pop
sub
push
pusha
dec
lds
mov
loop
mov
movhps
test
or
jne
inc
clc
or
stos
bound
pop
or
inc
fs
stc
pop
cmpl
movsl
jmp
cli
mov
aad
mov
mov
cltd
sti
call
je
cwtl
mov
scas
mov
leave
fidivrs
cld
cmp
mov
call
daa
arpl
sbb
cmp
out
pop
pop
push
lahf
insl
and
mov
invd
inc
pop
out
dec
mov
test
xchg
sbb
out
ljmp
add
add
stos
out
push
mov
ja
pop
out
jge
xchg
dec
dec
xchg
and
data16
mov
mov
ret
mov
imul
sub
fistl
outsl
mov
jp
cmp
addl
adc
jle
cmp
jb
fisubl
mov
inc
xor
and
out
ljmp
mov
dec
sbb
mov
insb
mov
pop
test
das
mov
mov
lcall
test
je
mov
sbb
xor
inc
cli
mov
movsl
repz
jne
cmp
xchg
aaa
cmpsl
mov
and
sub
iretw
jnp
and
mov
addr16
outsl
jg
ja
sti
sbb
fmull
loopne
dec
dec
sbb
jp
rcll
jg
test
subl
pusha
mov
pushf
inc
cmp
xchg
add
jmp
xchg
xor
fiaddl
cmp
cmp
cltd
js
imul
jns
push
xchg
imul
dec
sub
mov
dec
cmp
mov
and
fwait
decb
rcrb
lret
popa
aam
push
jle
fucomp
or
ret
mov
inc
xchg
sbbl
fcomps
fwait
rcrb
inc
je
repnz
jg
mov
jg
cmp
fmuls
or
xchg
xlat
into
loopne,pt
mov
add
mov
sarl
cmc
xlat
test
out
adc
and
mov
xor
jmp
shlb
idiv
mov
and
or
pop
xlat
push
mov
test
push
imul
js
scas
js
pop
xchg
js
add
out
sti
adc
jb
divl
push
jbe
push
int3
sahf
sub
mov
mov
rcll
mov
xchg
inc
ss
and
ss
push
sbb
shrl
push
sub
mov
stos
pop
into
or
mov
jae
and
xor
dec
roll
scas
es
clc
and
out
mov
xchg
loopne
xchg
dec
outsl
outsl
sahf
stos
ja
popf
inc
arpl
test
in
mov
hlt
pop
mov
and
daa
mov
bound
sbb
xchg
and
sub
dec
popa
cwtl
daa
mov
inc
outsb
add
add
adc
cmp
xchg
dec
or
std
ret
fs
jae
sbb
hlt
push
test
aas
pop
lret
ss
fs
sub
push
mov
iret
movsl
jbe
repz
jno
lret
imul
xor
push
leave
mov
xchg
mov
push
sbb
cmp
xchg
xor
cmc
mov
xor
mov
cmp
mov
push
cmpsl
scas
movsl
jo
mov
fdiv
and
mov
pusha
loope
fbstp
or
cmp
cmp
das
add
pop
push
dec
je
inc
mov
leave
mov
pop
pop
push
loope
rcll
xchg
call
out
push
push
sahf
mov
cmc
mov
xor
mov
les
loope
rol
fwait
xchg
dec
jmp
and
pop
sbb
daa
mov
mov
cmp
rcll
aas
std
out
loopne
pop
push
or
lock
lea
in
sbb
cwtl
aas
xor
cmp
inc
add
xor
sti
mov
jg
push
dec
cmpsb
iret
xlat
or
pusha
loopne
xchg
in
push
cmc
ds
pushf
pop
cli
loope
fcmovbe
sbb
lret
and
ror
int
scas
mov
fnstcw
xor
cmpsb
pop
cs
insb
cmpl
ljmp
push
pop
push
xor
pop
jbe
lods
aaa
call
adc
je
shrb
stos
and
xchg
inc
cmp
lds
dec
addr16
lret
and
sub
mov
and
fstps
gs
add
and
inc
aas
arpl
mov
mov
arpl
shrb
movsb
enter
sbb
out
insl
mov
mov
or
nop
decb
mov
sub
jmp
inc
aas
cmpsb
jg
jb
hlt
xor
inc
jp
add
cmp
push
and
jne
jmp
pop
incb
push
call
push
ja
mov
fwait
aam
jno
xchg
pop
loopne
test
mov
faddl
jl
lcall
icebp
mov
push
jp
inc
mov
in
aas
testb
std
dec
sub
icebp
in
frstor
push
mov
enter
stos
push
test
loope
mov
jge
mov
inc
es
punpckhwd
dec
test
lret
shll
adc
in
xor
push
in
cld
pop
push
addr16
pop
das
outsl
enter
imul
decb
xchg
pop
ret
xchg
push
cmp
sarb
pop
pop
pop
sarl
push
xchg
stc
inc
cmpsl
ficomps
fldl
test
mov
sarl
dec
cmpl
sti
xor
negb
mov
mov
leave
mov
je
cmp
out
mov
jecxz
popa
rclb
and
fcom
shll
inc
or
cmp
insb
add
pop
adc
mov
sahf
out
rcrb
movsb
adc
std
cmc
adc
jno
pushf
dec
sahf
fmull
outsl
in
shl
pop
cmp
xchg
or
cli
call
mov
mov
gs
mov
pushf
imul
pop
pushf
data16
cmp
ja
adc
mov
outsb
out
in
adc
push
mov
bound
enter
inc
pop
lods
sti
mov
dec
je
push
sub
sub
pop
or
ficoms
mov
push
mov
xchg
fmulp
push
in
daa
scas
cmpsl
add
fidivs
addb
sub
int3
scas
pop
cmp
push
dec
daa
sahf
loop
mov
call
outsb
mov
mov
xchg
mov
xchg
enter
and
xor
lret
xchg
lds
inc
push
shrb
push
or
repz
idivl
or
dec
pop
out
mov
mov
cmp
push
push
pop
outsl
insl
sbb
dec
clc
fldt
and
adc
mov
in
mov
sub
jl
xchg
mov
mov
bound
pop
clc
mov
mov
xchg
loop
xorl
cmp
out
je
or
adc
imul
cmp
icebp
and
jne
cmpl
cli
ret
mov
jb
insb
xor
lods
dec
adc
or
scas
sub
pusha
in
xchg
sti
add
pop
rorb
rorb
movsb
adc
lock
xor
std
outsb
imul
je
add
jns
push
sub
gs
sti
cmp
call
or
inc
cli
lahf
dec
roll
mov
push
jno
add
js
lds
das
mov
add
clc
inc
push
aam
push
stos
xchg
pop
sbb
dec
xchg
test
inc
popa
xor
pop
es
or
cmp
sti
adc
and
mov
loopne
divb
mov
inc
test
arpl
notb
dec
dec
sarb
insb
sahf
add
aam
fdivrl
fstps
jecxz
mov
mov
xchg
call
ljmp
sbbb
add
xchg
pop
stos
xor
aas
dec
test
fldenv
repz
scas
cmp
clc
shlb
fidivrl
mov
sbb
dec
adcl
shlb
xchg
insb
xor
pop
dec
push
fistps
sub
mov
cmp
sbb
mov
push
loope
int
int3
jge
inc
push
adc
inc
nop
repz
test
pusha
dec
sub
int3
pushf
hlt
mov
scas
mov
outsb
inc
addr16
push
sbb
inc
push
rolb
pop
inc
inc
sbb
jmp
jl
cmp
mov
mov
cmp
push
insl
and
mov
sub
es
mov
sti
sbb
fxch
add
bnd
das
dec
pop
sbb
gs
lahf
jno
pop
loop
popa
inc
add
mov
pop
cmpsb
and
inc
mov
mov
fdiv
lret
or
les
mov
mov
repz
or
into
subb
mov
lahf
dec
popf
add
and
pop
jg
jne
loopne
movsb
call
out
lods
sub
and
aad
mov
adc
add
imul
inc
push
add
xor
outsl
dec
cld
in
sub
mov
test
and
cwtl
mov
pop
aas
sahf
lret
lcall
inc
movsb
mov
xor
inc
cmp
add
xchg
pop
xor
mov
add
or
ds
jo
sbb
xchg
lds
and
insl
cmp
xchg
hlt
outsl
push
je
add
fnsave
jne
mov
scas
cmpsl
sub
add
dec
mov
out
sub
mov
sub
fs
int3
push
xchg
add
jno
divl
dec
lds
jnp
mov
addr16
sub
mov
aas
loop
push
icebp
and
mov
xor
pop
rorl
jmp
sub
jmp
cmc
into
push
dec
enter
inc
movsl
push
imul
sahf
or
xor
cltd
xor
lcall
pop
sbb
ret
test
insb
fbld
shrb
sub
mov
adc
mov
xor
mov
xchg
pushf
movsl
aam
inc
inc
cmp
lds
arpl
inc
mov
imul
push
add
cmp
push
lret
sub
cltd
lcall
push
mov
jbe
fs
das
mov
pusha
enter
sub
mov
stc
loop
cld
shlb
hlt
mov
clc
in
lahf
or
ret
jne
xchg
mov
jne
call
mov
add
clc
cmc
dec
sbb
push
shlb
pop
rorb
xor
stos
jg
mov
lods
outsl
push
js
xor
jge
dec
daa
add
sub
jb
cmp
addr16
movsb
dec
sbb
and
xchg
push
mov
int3
sbb
daa
mov
aam
add
jns
loope
sub
sbb
cmpb
or
mov
push
sbb
cld
jnp
cltd
push
jmp
xchg
add
ja
jp
push
mov
loopne
ja
mov
scas
ljmp
ja
push
cmp
enter
cmp
mov
pop
push
sbb
cli
and
inc
mov
fildl
push
in
sti
subl
icebp
int
hlt
or
dec
xor
arpl
sti
rcr
cmpsl
and
insl
mov
ss
adc
out
jo
mov
in
test
sahf
rcrl
popf
mov
mov
xor
or
pop
loopne
andb
shrl
xor
icebp
mov
aas
mov
test
out
and
inc
outsb
into
cmp
outsl
imul
les
clc
aas
iret
adc
mov
sbb
add
or
xor
aas
jb
mov
push
ss
jge
ret
pop
sub
aaa
jl
testb
xchg
cli
fcmovb
ret
adc
add
shlb
mov
sub
rcrl
icebp
je
cmpsl
xchg
cmp
xorl
popf
ret
imul
mov
cmp
push
out
cmc
mov
cs
dec
inc
addb
and
cld
mov
lahf
imul
rorb
in
negl
popa
and
inc
push
mov
sub
xorl
mov
cli
pop
stc
dec
insl
push
push
mov
mov
lret
fldcw
icebp
test
push
nop
add
in
jmp
pop
push
sbb
addr16
jbe
push
data16
mov
fs
inc
xchg
jns
insl
cmp
jb
iret
lret
rcr
and
test
mov
adc
jae
dec
add
jg
shl
int
jl
dec
popf
int3
mov
cs
popa
clc
sbb
jbe
pop
and
js
es
jge
addr16
out
sarb
push
or
push
in
sub
inc
xchg
loop
icebp
or
test
inc
and
mov
dec
les
jns
inc
je
cmp
pop
sbb
stos
push
push
add
mov
and
cmp
imul
gs
mov
or
inc
into
jae
and
imul
jae
test
adc
out
inc
mov
adc
push
out
adc
mov
fcmovu
cld
sub
push
pop
insb
outsb
xor
push
and
std
mov
outsb
sub
add
icebp
push
jmp
ficompl
inc
ret
icebp
sbbl
ret
aaa
loopne
mov
push
mull
or
cmpsl
mov
cltd
scas
and
adc
and
stos
add
cmpsb
leave
pop
inc
inc
rcrb
clc
fwait
idivb
xlat
ja
scas
adc
push
ss
mov
lea
je
clc
cld
sbb
mov
es
jecxz
out
push
jb
add
dec
sub
sbb
std
fsts
fs
jb
lret
adc
in
xor
mov
jae
push
xor
fisttpll
test
test
inc
scas
je
jnp
and
and
dec
pop
test
jns
popf
or
shr
and
and
dec
fistps
or
push
xlat
ret
lock
jp
cmp
bound
mov
cli
cmc
adc
test
pop
mov
and
cmp
jo
scas
sub
and
lea
mov
les
out
lea
add
cwtl
js
das
or
popl
cmp
inc
jmp
les
adc
jp
push
jbe
pop
icebp
xchg
nop
inc
xchg
cmp
neg
jecxz
sub
subb
push
ds
cwtl
pop
test
xchg
jmp
call
dec
daa
jae
movsl
mov
lods
popa
mov
inc
repz
and
cli
es
negl
test
xor
in
cwtl
sub
push
and
hlt
mov
ret
mov
fs
pop
movsb
cmp
push
mov
nop
jl
inc
xchg
jle
and
outsl
pop
or
pop
mov
ss
cwtl
push
in
lds
pop
xor
dec
int3
cwtl
or
dec
dec
inc
data16
pop
mov
mov
lods
sbb
dec
les
pop
jge
pop
outsl
mov
dec
fsub
in
push
cli
insl
jno
popa
xchg
dec
bound
test
mov
dec
aas
aas
mov
inc
xor
gs
dec
mov
int
xor
lret
in
add
dec
sub
cmp
mov
rorb
leave
aas
pop
xchg
dec
insb
add
imul
xor
and
and
addl
inc
inc
out
mov
sub
push
mov
jle
mov
cmpsl
roll
in
jp
repz
lret
and
dec
orb
pop
or
xchg
aaa
psubsb
jp
jb
stos
jg
sbb
andb
mov
xchg
xor
inc
ret
cmp
iret
inc
es
enter
and
mov
pop
dec
pop
adc
mov
jnp
mov
sbb
dec
cmp
jo
icebp
and
xor
shl
xorb
push
ss
cmp
out
call
cld
sbb
mov
dec
loopne
and
mov
sub
enter
fisubrl
out
je
pop
mov
inc
jmp
cmp
push
and
jle
movsl
ret
xor
cmp
adc
xor
push
xor
xchg
loope
add
fs
icebp
aad
xchg
pop
les
enter
push
push
les
into
das
push
js
add
and
cmpb
pop
and
xchg
and
cmpsl
aad
xchg
outsb
fcmovne
hlt
aam
loope
xchg
arpl
vfmsubps
in
fsts
nop
jg
and
jp
add
enter
inc
in
in
loope
addr16
scas
lahf
jmp
scas
adc
popf
cli
xchg
adc
or
test
or
lahf
inc
pop
adc
icebp
xchg
in
xchg
out
mov
inc
sbb
push
ds
cli
in
sub
out
frstor
insb
sub
rcll
pop
xlat
xchg
or
out
push
mov
rclb
shlb
inc
jne
lock
inc
js
jmp
sub
stc
pop
mov
cltd
icebp
lea
leave
sbb
mov
adc
test
jnp
cld
push
inc
pop
gs
or
out
push
out
ss
pop
and
aas
inc
ja
in
pop
mov
push
xor
gs
sarl
es
outsb
add
mov
cmp
lock
xor
sub
push
dec
cs
das
out
mov
mov
push
data16
repnz
add
lock
cmp
in
inc
popa
dec
xchg
jae
cmp
mov
mov
mov
mov
les
mov
jecxz
mov
xchg
jmp
fs
aam
das
mov
mov
sbb
cmpsl
or
xchg
jp
call
push
cwtl
xchg
xchg
mov
lret
test
sub
or
loop
pushf
mov
mov
stos
jl
lock
insl
mov
lea
jnp
rolb
xorb
push
jmp
ret
cmp
xor
test
lods
mov
cltd
lds
testl
in
gs
out
adc
add
or
and
iret
jle
les
cmc
dec
repnz
loopne
je
mov
loop
cmp
aas
pop
cmpsl
pop
daa
inc
pop
mov
mov
in
xchg
in
in
push
inc
int3
xchg
inc
and
sub
cmp
scas
std
jecxz
pusha
test
shrl
mov
out
jnp
mov
lahf
fwait
mov
inc
mov
inc
imul
sti
loopne
and
movsb
pop
push
xchg
mov
addr16
lcall
inc
gs
in
iret
jb
in
jle
pop
lea
mov
cmp
dec
pop
mov
in
inc
pop
adc
cmp
lret
test
imul
mov
mov
stc
jo
pop
push
pop
cmpb
sub
push
nop
test
imul
mov
popf
shlb
icebp
icebp
dec
out
jnp
movsl
stos
xchg
or
xchg
fbld
mov
int
inc
inc
add
int3
add
mov
or
sub
sub
and
push
in
lret
js
xchg
fwait
lcall
jbe
pop
pop
jmp
sub
pop
jnp
add
aad
push
adc
mov
xchg
aas
adc
sbb
fimull
in
mov
add
mov
inc
mov
adc
gs
les
mov
inc
test
loop
xchg
stc
jne
and
xor
jl
mov
faddl
movsb
sub
out
mov
cmpsb
or
rcl
cld
xchg
outsb
adcl
aad
sbb
dec
jle
int
nop
cli
xchg
les
pop
dec
shrb
nop
scas
jmp
popa
bound
mov
popf
mov
cld
fs
pop
rcrl
inc
jb
jb
jle
xchg
fidivs
rcrl
mov
pop
mov
dec
pusha
aaa
push
stos
testl
jo
adc
cmp
adc
aaa
cmp
or
cmp
sub
jnp
adc
testl
jg
les
inc
rclb
sub
inc
xor
out
mov
out
lods
mov
cwtl
std
xor
aam
or
aas
ficoml
pop
mov
sbb
add
ds
add
loop
fmuls
or
pop
sbb
jge
xor
andb
int3
clc
pop
xchg
clc
insb
aaa
cmpsb
xchg
nop
outsb
loope
cmpsb
pop
push
lods
xchg
mov
add
cmp
mov
movl
push
nop
negl
dec
in
mov
cmp
xchg
cmp
pop
xlat
xor
cmp
and
repnz
pop
mov
cltd
dec
test
aas
mov
vandps
stos
jb
aam
add
imul
jp
inc
cmp
rcrl
mov
xor
cmpsb
xor
cltd
je
mov
mov
add
add
sbb
shll
sarl
xor
imul
movsb
mov
mov
xor
stc
mov
sbb
loope
repz
mov
fcomip
jne
mov
dec
mov
push
lods
or
and
jg
push
pop
les
jno
mov
lds
popa
xor
push
loop
cmpsb
pop
js
repnz
hlt
push
add
mov
js
fwait
dec
add
leave
mov
add
push
sbbl
les
sbb
out
push
sbb
faddl
das
cmc
movsl
aaa
lret
jbe
jne
dec
dec
jecxz
xchg
rorb
stc
xchg
lahf
outsl
out
jmp
sahf
push
mov
jecxz
rcll
jnp
cmp
int
shrb
mov
test
repz
int3
push
or
sbb
stc
fldenv
testb
add
jge
cmp
lahf
xor
inc
inc
pop
inc
add
sbb
pop
or
daa
sub
mov
stos
lea
push
mov
out
std
mov
in
jp
fnstenv
jl
popa
int3
xchg
push
lcall
fnstenv
inc
pop
clc
popf
frstor
cmc
inc
repnz
mov
outsl
inc
gs
mov
sub
jl
shrb
push
push
lds
mov
mov
sub
adc
icebp
jnp
icebp
adc
out
enter
mov
sbb
aam
inc
rcrb
cmpsl
adc
inc
fwait
push
push
cs
mov
push
add
rcrb
jmp
testb
lds
fnstcw
dec
inc
xlat
cs
mov
xchg
cmp
daa
shll
test
cmpsb
jp
popf
int
inc
out
in
rol
mov
xlat
pop
es
sbb
out
or
aam
mov
push
cmpl
mov
or
repz
divb
sub
dec
mov
mov
jp
lret
sbb
adc
mov
jb
shll
mov
cmpsb
inc
loop
lret
mov
inc
add
out
sbb
sti
clc
pop
and
stc
fs
and
mov
loop
test
pop
cli
mov
mov
shll
imul
jns
add
adc
int
jno
ljmp
push
aaa
push
push
cmpsl
adc
pop
pop
mov
or
jnp
out
jl
mov
mov
ja
sub
jb
sti
and
insb
sub
das
push
mov
xor
mov
cld
das
push
mov
subl
jno
xchg
xor
pushf
mov
jge
std
test
push
icebp
aam
xor
adc
mov
jb
jp
push
xor
jle
mov
shrl
int
dec
add
jae
add
imul
testb
repz
mov
cmp
aas
mov
push
cs
mov
jnp
xchg
test
mov
sub
scas
pop
add
mov
inc
icebp
push
push
pop
mov
push
loope
out
sub
test
push
xchg
dec
and
scas
inc
repz
bound
sub
dec
sahf
in
xchg
and
adc
jl
pop
pop
mov
fcomps
adc
xor
aad
push
fpatan
int
push
xchg
ljmp
cmc
fildll
pop
popa
psubb
in
imul
push
mov
dec
fsubl
mov
pop
inc
jmp
ja
popa
notb
jle
pop
movsl
jo
jle
jae
or
adc
xlat
daa
test
gs
mov
mov
call
test
aam
cmp
xchg
add
add
jmp
fildll
ds
lods
sbb
fnstcw
mov
and
jmp
push
cmp
lcall
jne
and
popa
js
xchg
inc
test
dec
and
add
mov
sub
xchg
sub
sbb
adc
repz
add
jo
jle
jl
xorb
or
bound
insb
insl
in
iret
adc
jle
leave
cmp
leave
btsl
mov
movsb
int
mov
or
xor
lods
xor
pop
jnp
shlb
sahf
mov
sub
mov
dec
clc
rcr
mov
cmpsl
je
cmc
pop
outsb
adc
lods
push
xor
movb
push
pmullw
sbb
xchg
insw
push
js
and
popf
push
pop
out
loope
inc
xor
jecxz
mov
psllw
sub
stos
mov
ret
mov
dec
inc
sahf
hlt
insl
or
ret
scas
ret
scas
mov
adcb
shr
adc
lcall
xor
and
in
mov
inc
gs
adc
and
push
xor
dec
pop
testl
rcrb
xor
mov
pop
andl
dec
sub
stc
imul
daa
sub
lds
pop
or
sti
push
sub
pop
push
cmp
jp
shrb
sbb
inc
bound
ljmp
lret
lds
out
push
in
xchg
out
sbb
sbb
bound
aam
sub
inc
push
ret
add
ljmp
ss
or
xchg
inc
sub
inc
sbb
mov
in
mov
cmp
or
aam
sub
icebp
or
ret
xor
fstpt
and
pop
or
scas
pop
add
xor
sub
out
in
stos
jecxz
jle
popa
lcall
mov
mov
push
cmc
add
sbb
les
xchg
xchg
leave
fs
mov
sub
decb
xor
pop
jnp
xor
mov
add
pop
movsl
mov
xor
xchg
dec
xchg
or
jo
cmp
ss
or
cmp
bound
add
jmp
daa
lds
loopne
ret
es
xorl
inc
rolb
ss
dec
into
insb
repnz
leave
xchg
push
xchg
or
cmpsl
dec
inc
cli
movsb
inc
cwtl
jle
jp
mov
or
dec
mov
pop
scas
sarb
push
cmp
fcompl
decb
fwait
shrl
mov
dec
jge
rolb
mov
in
mov
xchg
movsb
ficomps
push
push
js
xchg
cli
imul
pop
add
lods
stos
bound
arpl
div
adc
inc
les
in
sarl
jb
insb
pop
aam
dec
sti
stos
push
dec
ja
ds
adcl
fldt
popa
insl
icebp
xchg
pop
and
sbb
mov
xchg
xchg
ret
sbb
add
sahf
sub
iret
ds
fstpt
mov
pop
popa
mov
sbb
sub
sbb
adc
inc
or
cmp
pusha
je
les
pop
enter
fisubrs
push
fcmovbe
lcall
cmpsb
insl
mov
lret
push
nop
inc
popa
jl
and
lods
mov
fnstcw
sbb
xor
and
inc
shll
mov
clc
push
dec
jl
int3
dec
lock
imulb
or
inc
arpl
push
mov
lahf
cmp
dec
out
shll
scas
xor
or
les
pop
in
dec
rcrb
js
jo
out
mov
mov
sbb
cli
mov
pusha
and
mov
pop
pop
xchg
pop
rcl
pop
inc
test
movsl
jl
or
fsubl
mov
gs
push
push
sub
inc
fbld
rcrb
mov
insb
add
in
mov
loopne
or
adc
inc
mov
fwait
and
aam
popa
pusha
js
stc
and
push
pop
dec
mov
jnp
stos
je
sbb
je
aad
xor
push
add
lcall
cmp
sahf
sbb
inc
loop
pushf
or
iret
les
neg
push
jg
add
stc
mov
imul
gs
aam
xorb
fs
pop
sbb
pop
dec
sahf
dec
dec
mov
push
add
testb
mov
pop
push
test
jmp
mov
stc
xlat
mov
cmp
and
mov
cli
stos
scas
mov
outsl
add
pop
out
int3
into
jno
lods
sbb
adc
jo
xchg
adc
mov
jp
insb
pop
xchg
mov
mov
fsubrs
out
outsl
iret
in
ds
ss
ret
test
sarb
xchg
addl
nop
inc
lock
inc
mov
pop
sub
cs
cli
gs
xor
pop
ret
repz
std
mov
out
jl
xchg
das
adc
add
or
dec
testl
ret
jge
sbb
cmp
shrb
or
rol
sub
cltd
sub
fsub
mov
dec
lea
fadd
jnp
decb
dec
aaa
lods
push
add
xlat
adc
pop
out
sti
mov
fcomp
int3
clc
xor
or
add
jb
jmp
aam
std
lahf
mov
popf
sub
push
lret
sti
mov
testb
pop
pop
ret
pusha
jo
mov
mov
push
cwtl
clc
mov
mov
add
loope
jns
adc
inc
and
out
jg
cmpsb
lret
xchg
pop
and
aam
sbb
cwtl
in
test
jp
out
jmp
lods
testl
push
sub
aad
mov
scas
push
pop
or
jl
loope
inc
es
or
shl
dec
sbb
shlb
imul
psubw
lret
sbb
stos
fs
push
inc
addr16
mov
or
out
outsl
cmp
inc
psubb
scas
mov
ja
mov
pop
mov
fdivr
pop
inc
adc
push
int3
jo
movsb
push
mov
aaa
pop
add
push
daa
pop
loope
mull
lea
sub
cmp
sti
popf
xor
add
mov
jle
xor
and
mov
fcmovu
scas
and
pop
lods
mov
push
into
pop
das
mov
inc
ds
es
repnz
cmp
popa
pop
pop
or
mov
inc
push
jns
fwait
cmp
je
sbb
aas
test
mov
dec
xchg
fcomps
out
les
out
or
std
imul
or
ljmp
scas
dec
mov
add
xchg
imul
inc
es
enter
stc
in
sti
or
subb
jns
mov
bound
daa
mov
adc
in
bound
adc
ret
aas
xlat
cmp
lret
xchg
sub
inc
pop
sbb
or
clc
icebp
pop
cwtl
dec
inc
xlat
imul
and
mov
je
lret
repnz
movsl
mov
xchg
aas
jne
insl
std
aaa
test
sbb
idivb
out
xor
or
mov
dec
mov
out
lds
leave
imul
mov
scas
fdivp
xlat
add
dec
push
xor
push
dec
in
mov
push
pop
add
push
test
sub
in
xor
ljmp
mov
dec
mov
or
insl
jnp
hlt
sub
or
lret
sub
sbb
push
lods
mov
jae
inc
mov
mov
jbe
mov
mov
push
cmp
stos
insb
fldenv
inc
mov
cli
test
dec
push
lcall
ja
ds
cmp
repnz
pop
mov
inc
add
xor
add
test
imul
in
xchg
aam
ja
mov
sub
int
adc
adc
fsubr
mov
adc
cmp
lock
sub
ds
push
lods
fildll
aad
sbb
sbb
push
xchg
jp
sub
mov
outsl
outsl
cmp
aaa
test
mov
int
xor
ret
xchg
add
adc
mov
push
imul
in
pop
cmp
jecxz
aas
xor
mov
xor
sub
lret
pop
inc
mov
xchg
jo
sub
rcrb
aad
and
subl
adc
negb
push
leave
sbb
loopne
aaa
pop
scas
call
mov
daa
cld
dec
push
xchg
push
or
fcomps
lea
pop
jmp
mov
add
out
aas
ds
or
fstl
adc
enter
lds
jl
dec
add
mov
cmc
or
pushf
sbb
rcll
cmpsl
inc
cwtl
jg
pop
xor
adc
ss
add
aam
mov
mov
dec
shrb
sti
shrb
jmp
mov
cmp
cld
adc
cmpsl
ljmp
jo
nop
bound
sbb
into
dec
push
mov
lods
push
in
jmp
and
pop
push
mov
idiv
pop
outsl
icebp
and
sbb
dec
push
cli
pop
sbb
insb
hlt
es
int
fstpl
lret
cmpsl
repz
shll
jae
fidivl
add
mov
sub
ss
push
lahf
inc
mov
inc
ret
ljmp
lahf
ja
add
es
ficompl
pop
ds
xor
in
cld
jae
bound
pop
stos
jle
dec
mov
fnstcw
imul
push
arpl
inc
fdivr
fsubl
arpl
and
dec
scas
pop
sbb
repnz
fstpl
fisttpl
sarl
xchg
xlat
out
xor
jns
sbb
mov
and
mov
mov
jp
push
xchg
out
insl
pop
pop
and
inc
jle
test
push
push
inc
test
push
je
cmc
ljmp
test
fidivl
push
jp
mov
inc
mov
ss
jl
or
aam
iret
jno
insb
jbe
sti
stos
aaa
pop
push
inc
cwtl
mov
push
sub
or
xor
lea
out
push
ficoml
push
sub
repz
sub
and
mov
pop
cmpsb
cli
cltd
mov
inc
pop
clc
cmp
push
inc
mov
mov
lcall
negl
fst
jae
fisubs
or
add
iret
sbb
fwait
out
mov
enter
test
mov
bound
inc
adc
adc
dec
in
cmp
and
addr16
iret
gs
mov
js
push
and
and
xlat
lock
fsts
pop
adc
sub
push
sbb
out
mov
sbb
xlat
pop
sbb
test
scas
xlat
cmpsb
mov
mov
test
or
and
fadds
outsb
mov
lea
jle
dec
sbbb
lds
jo
ret
sbb
inc
cmpsl
pop
scas
inc
in
add
xor
cmc
imul
or
add
lods
pop
jmp
pop
fildl
imul
sub
add
inc
xor
mov
pushf
andl
test
mov
fcoml
outsb
cltd
es
test
sbb
iret
outsl
pop
jl,pt
jl
adc
fstp
mov
inc
xlat
iret
xor
int
jmp
rorl
and
cld
pop
mov
adc
cltd
aam
scas
imul
mov
aaa
call
loopne
loope
dec
push
sbb
xorb
cmpsb
cli
mov
mov
ret
pop
ret
jmp
push
cmp
mov
in
xor
and
filds
push
cmp
xor
inc
jl
jl
fs
dec
scas
or
inc
or
inc
mov
cmpsl
adc
push
addr16
mov
xor
sbb
xchg
shr
popf
pop
dec
inc
mov
inc
iret
sub
sub
aad
aas
ret
pop
insl
test
in
mov
test
and
mov
sub
dec
std
in
jge
add
sbb
or
insl
addr16
cwtl
jg
cli
mov
mov
int
mov
aam
jne
mov
jno
shll
clc
loopne
inc
mov
xor
sub
int3
jecxz
pop
mov
jmp
fs
jl
in
cmp
sub
push
xor
je
repz
leave
das
popf
adcb
mov
cmc
adc
or
or
fldt
mov
pop
imul
mov
add
fsubrs
ret
je
dec
jle
jno
xchg
sbbl
or
jbe
inc
addl
into
add
ja
adc
nop
xor
inc
and
pop
xor
pop
mov
testl
test
cmpsl
jl
dec
test
and
lods
fsubrl
ljmp
cmpsb
sbb
nop
jnp
imul
dec
bound
sub
insb
lret
mov
fwait
pop
int3
pop
shll
jno
or
add
push
pop
aam
lcall
clc
adc
rol
push
mov
sbb
jge
lods
popw
rcll
ret
das
push
loope
fdivrs
mov
mov
leave
cltd
or
add
shll
ljmp
in
add
loop
pop
dec
add
or
push
adc
paddw
js
pop
jmp
fistpl
cmpsl
ficoml
ljmp
push
cmp
mov
mov
test
call
in
pop
sti
test
mov
lahf
mov
dec
into
fucomip
sqrtps
push
jle
push
push
jbe
data16
xchg
or
xor
jns
mov
dec
xchg
dec
cmpsl
sub
movsb
push
xor
jecxz
fldenv
loop
cmp
pop
stc
mov
int
testb
outsb
jne
in
xor
testb
push
or
jl
sbb
sbb
pop
aam
lret
in
sti
cld
popf
sbb
fisubl
push
sbb
cwtl
and
mov
jle
jp
and
mov
pop
cltd
test
cld
lcall
pop
bound
stc
sub
into
shrb
fdivs
or
inc
leave
scas
and
mov
jb
test
fldt
out
setp
aas
popa
or
sub
dec
rclb
sbbl
inc
lods
sbb
pop
xchg
fdivrs
jp
jle
shr
fiadds
xor
lret
lea
jp
in
dec
roll
insb
enter
movsb
mov
xlat
rcr
mov
cli
pop
movsl
fabs
cmpsb
outsl
lcall
mov
jp
insl
sub
pop
xchg
cmpsb
xchg
rorl
xor
call
mov
sahf
push
xchg
pop
xchg
outsl
push
mov
cmp
xchg
mov
pop
in
arpl
push
int
mov
sub
xchg
call
nop
nop
cli
leave
in
adc
pop
insb
sub
pop
adc
adc
and
xchg
arpl
icebp
or
jne
in
fildl
fwait
cmp
push
push
les
and
cltd
stc
mov
xor
lahf
in
push
rcrl
lcall
cltd
arpl
push
dec
aad
xor
mov
jecxz
inc
sbb
cmpsl
ljmp
dec
sub
cmp
lcall
test
mov
cmpsb
sub
movsl
lds
add
rcll
inc
push
jo
dec
jle
adc
jo
mov
xchg
out
stos
mov
jmp
push
shll
arpl
negl
lahf
mov
sti
loop
and
ds
lods
lods
inc
loopne
mov
dec
sbb
cs
dec
les
loopne
mov
fsubrl
xor
je
imul
clc
mov
lock
imul
inc
sbb
sahf
push
movsb
adc
lahf
bnd
xchg
scas
adc
jge
mov
adc
outsl
dec
sbb
dec
xchg
inc
add
mov
push
jecxz
push
and
cs
adc
mov
adc
pushf
cmc
insl
pushf
mov
aaa
addr16
test
imul
into
loop
clc
xor
adc
popf
fmull
fisttpll
sbb
push
inc
jl
xorb
sub
fmuls
and
sbb
insb
sbb
xchg
scas
ficomps
loop
xchg
cmpsl
xchg
xchg
push
leave
xor
mov
sbb
test
int
dec
xor
mov
mov
aaa
addr16
jbe
icebp
add
inc
xchg
xchg
jnp
mov
pop
xor
xor
sti
cmpsl
jecxz
inc
adc
stc
aad
mov
mov
jns
xchg
sbb
xchg
cmc
stc
ret
push
xchg
xor
sbb
aas
loopne
repz
or
int3
insl
lret
fimuls
sub
dec
imul
and
push
clc
xchg
lret
jle
inc
imul
lock
subb
mov
inc
and
pop
jecxz
jnp
test
es
inc
xchg
fbstp
mov
loopne
mov
sub
xor
pop
out
jp
mov
cli
stos
inc
dec
jecxz
ret
loop
adc
xor
cli
dec
pop
ret
scas
push
les
rorl
loop
inc
xchg
adc
or
hlt
mov
loope
xor
insl
scas
movsl
nop
nop
stc
sbb
cmp
jp
lock
push
sub
xlat
cli
pop
xchg
sbb
and
xor
xchg
mov
std
stc
and
lcall
leave
adc
inc
in
int3
push
int3
dec
or
jno
daa
jnp
mov
cmp
cld
pop
xlat
insl
sub
or
jle
sub
mov
jnp
fisubrs
jns
in
jbe
push
dec
dec
mov
sarl
sub
mov
pusha
cs
fisubl
lahf
inc
xchg
gs
mov
in
mov
mov
into
add
in
inc
add
adc
sar
scas
dec
push
shlb
pop
adc
fbld
or
mov
js
sub
data16
fwait
cltd
jno
in
xchg
jp
lcall
daa
in
push
popa
jge
push
fcmovu
dec
xchg
cli
sub
call
or
jl
stc
mov
mov
add
ljmp
and
mov
xchg
fisubrl
ret
test
mov
cmc
mov
mov
mov
pop
test
jo
xchg
xchg
xchg
pop
aam
push
add
mov
or
sub
push
jg
stos
stc
pushf
mov
mov
leave
push
nop
sbb
mov
sub
xchg
jno
loop
pop
jnp
sub
data16
or
mov
out
dec
std
and
call
and
out
fcmovne
cmp
js
mov
pcmpeqb
xchg
or
sub
pop
xchg
xor
inc
outsb
insl
cmp
test
and
imul
mov
xor
cmpsb
mov
sahf
and
push
imul
lea
enter
aad
sub
and
stos
mov
insb
dec
out
or
dec
gs
pushf
stos
lret
cwtl
enter
xchg
je
and
hlt
jno
int3
sub
scas
xchg
xchg
popf
sub
cmp
sub
test
scas
inc
push
jmp
mov
sbb
xchg
jno
xchg
fcoms
push
pop
and
push
cmp
pop
mov
dec
out
incl
ss
lea
cmp
cmc
loope
scas
fwait
int
mov
mov
dec
fiadds
push
fldenv
dec
jbe
mov
push
mov
cmc
dec
mov
test
xchg
cmp
or
inc
cmp
lock
mov
dec
xor
sbb
mov
arpl
icebp
xchg
dec
sbb
mov
inc
test
cmp
inc
fs
sub
jmp
sub
mov
scas
arpl
jecxz
mov
fists
ja
adc
xchg
xchg
test
outsb
stc
aam
les
cmp
mov
xor
lea
mull
cmp
xchg
test
or
mov
xchg
cmp
out
xchg
xchg
movsb
outsb
cli
add
lea
pcmpeqw
lock
rcr
push
jg
xchg
mov
fsubrp
call
aas
rcrb
pop
call
cmpsb
orb
imul
imul
mov
dec
lods
ret
icebp
loop
mov
outsl
aad
ds
mov
cmc
ss
repz
js
pushf
sbbl
jp
sbb
in
rcll
xchg
enter
movsb
jbe
push
jmp
push
je
adc
add
movsl
push
outsb
push
ja
sahf
mov
xor
xchg
insl
fmull
or
or
cmp
sub
ds
sub
out
pop
jmp
loop
nop
call
inc
mull
popa
add
in
jmp
push
sahf
loope
imul
idivl
dec
nop
pop
ret
lcall
add
fsubrs
lcall
cmp
ljmp
leave
sbb
nop
repz
mov
sbb
icebp
dec
xchg
test
imul
aas
xchg
jno
fdivrp
inc
cwtl
inc
jno
leave
stos
push
fwait
dec
test
divl
sbb
cmp
lock
xchg
pop
out
mov
pop
push
movsl
jne
pop
je
idivl
sub
hlt
scas
push
aaa
jg
adc
jmp
outsb
xchg
sbb
mov
cli
filds
sbb
cmp
loop
nop
cmpl
mov
adcb
test
stos
push
jbe
lret
sbb
hlt
inc
shlb
xor
cwtl
inc
cmpsb
pop
sti
pop
mov
test
dec
ja
or
jae
sub
jns
cmpsb
decl
cmp
les
aaa
movl
pop
jmp
pusha
adc
inc
xchg
outsl
js
pop
jmp
sbb
cmp
daa
dec
shll
cmp
xlat
movsl
loop
mov
int3
lret
test
aam
adc
popa
loop
decb
jmp
push
jecxz,pn
mov
mov
ja
movsb
adcl
lret
orl
icebp
cmp
dec
lods
popf
sub
sub
lods
scas
push
and
movsl
jl
xchg
xchg
insl
dec
inc
push
jge
mov
xor
divl
cmpsb
out
arpl
jne
pop
xor
scas
inc
mov
out
inc
jl
cs
cmp
adc
es
pop
jb
addr16
aaa
sti
push
shlb
fstpt
add
sti
int
aas
orb
and
mov
mov
pop
mov
xchg
out
lods
lods
loop
dec
cltd
imul
rcrb
xchg
in
cmpsb
xor
xchg
and
adc
enter
scas
cs
shrl
dec
addl
sbb
pop
lahf
add
mov
adc
ret
mov
cmp
pop
jp
mov
pop
pop
xchg
push
cwtl
imul
mov
shll
mov
fldenv
daa
jg
or
jbe
pop
mov
and
jb
dec
xchg
mov
mov
mov
cs
adc
jmp
jl
sbb
movsl
loopne
dec
sahf
push
xchg
dec
leave
mov
pusha
loop
pop
fndisi(8087
xchg
arpl
adc
mov
cmp
pop
mov
and
xor
mov
and
aas
fidivl
dec
sub
and
inc
cmpsl
or
and
lock
es
mov
push
sbb
rcrb
add
push
adc
movsl
dec
push
add
inc
sbb
clc
mov
cmp
hlt
lock
mov
mov
je
xchg
adcb
out
mov
xchg
lods
ja
jp
jle
jb
cmp
mov
in
adc
mov
insl
std
and
out
add
test
adc
xor
adc
lret
insb
pop
push
lcall
push
icebp
pop
adc
pop
dec
in
lods
push
ljmp
mov
xchg
xchg
adc
aas
imul
sub
mov
test
cli
fsubl
adc
jg
fimuls
cli
adc
daa
mov
inc
push
out
jle
or
icebp
loop
and
ja
inc
and
test
sbb
lods
outsl
xchg
dec
test
insl
pop
cmpsl
inc
in
mov
adc
xchg
out
xchg
mov
repnz
aad
mov
aad
fdivl
jle
imul
sbb
lcall
xor
mov
pop
in
cmp
out
fs
int3
repz
mov
mov
pop
push
add
pushf
and
fnstcw
mov
std
xchg
cmovbe
jb
xor
pop
call
loope
jmp
or
jae
outsl
mov
add
jnp
icebp
xchg
xlat
lods
push
mov
in
cmp
dec
roll
add
pusha
mov
or
sub
repz
or
mov
adc
jl
insb
dec
daa
cld
cltd
test
test
into
push
mov
hlt
scas
ljmp
ret
and
bnd
out
mov
mov
cmc
add
dec
jnp
adc
test
into
out
mov
decl
mov
pop
and
adc
mov
xchg
arpl
mov
and
lret
dec
outsb
leave
call
inc
dec
pop
xor
outsb
and
pop
push
mov
pop
jno
jle
jno
mov
sbb
jl
mov
clc
nop
push
jo
mov
mov
repz
mov
jl
and
mov
cmp
out
test
mov
push
loop
orl
stc
cmc
dec
jb
in
popf
cmp
sub
push
jg
fiadds
iret
sub
mov
push
daa
mov
syscall
xor
jge
inc
xlat
les
or
in
and
add
daa
dec
xchg
push
fdivp
enter
pop
mov
xchg
std
push
xchg
notl
sbb
mov
add
xor
imull
adc
inc
inc
mov
or
pop
pop
fimull
or
movsl
mov
in
call
pop
pop
mov
sub
mov
mov
cmp
push
ss
jecxz
ja
mov
mov
negl
out
xlat
adc
cbtw
nop
in
inc
jne
cli
je
xchg
and
repz
mov
and
fsubp
hlt
jmp
mov
ds
lret
out
rcll
shlb
push
cltd
ret
pop
jl
cmp
lea
xchg
ss
js
push
ret
mov
nop
dec
sub
mov
test
orw
pop
imul
jbe
sbb
mov
or
pop
in
mov
sbb
mov
mov
faddl
out
add
pop
ret
test
pusha
cltd
jnp
test
aas
test
jmp
into
push
aaa
pop
jnp
iret
test
scas
cwtl
cmpsb
add
insl
inc
aas
mov
cltd
idivb
fwait
mov
es
jbe
call
adc
mov
mov
inc
sbbl
jo
cmp
call
icebp
sbb
inc
cmc
mov
jmp
adc
mov
enter
js
push
iret
lds
fdiv
mov
lcall
push
adc
jbe
xchg
fs
cmp
out
and
in
sar
cmpsb
iret
xchg
jbe
or
call
mov
sbb
push
jecxz
sahf
push
pop
lods
inc
push
fnstsw
xchg
das
sarl
jecxz
mov
mov
pop
daa
adc
xchg
mov
sub
cmpl
push
push
inc
dec
push
lahf
ds
ficoms
adc
dec
dec
add
add
push
xchg
stos
fcompl
inc
jnp
lahf
aas
or
sub
addb
add
pop
sarb
cmp
rcr
jbe
pusha
in
shll
repz
push
push
jmp
insb
cmp
pop
aad
pusha
fwait
and
icebp
scas
pushf
pop
std
std
mov
and
daa
inc
or
xor
mov
aam
jp
aaa
sti
mov
mov
sub
shlb
inc
in
xor
pop
out
lret
jmp
fidivrs
jl
xlat
inc
jns
repz
aad
mov
inc
out
mov
lock
bound
sbb
aam
je
cmp
xor
pop
loopne
cmc
shlb
data16
repnz
add
mov
push
mov
hlt
test
outsl
data16
div
inc
mov
push
testb
or
sub
cli
scas
rorl
lods
adc
and
xchg
push
mov
and
push
cmp
repnz
or
mov
mov
mov
lds
mulb
push
jmp
mov
xchg
shlb
xchg
inc
pushf
and
jb
jae
xor
clc
loopne
push
mov
add
sbbl
cmc
jnp
dec
mov
jo
xor
dec
pop
mov
mov
dec
pop
dec
dec
cmp
mov
stos
das
inc
push
push
nop
test
sub
int3
adc
pop
mov
or
mov
flds
sbb
in
ficomps
pop
pop
cmp
sub
arpl
pop
mov
mov
mov
jb
cs
and
or
in
loope
pop
push
nop
jp
pushf
test
mov
imul
incb
mov
jl
fstl
fbstp
pop
jb
sub
cld
shl
out
xor
adc
mov
aas
pop
daa
cwtl
test
outsb
leave
pop
push
sahf
ss
mov
xor
add
cmp
or
bnd
aas
imull
cmpsb
sbb
stc
idivl
add
jmp
call
out
mov
inc
jnp
sbbl
cld
mov
jbe
push
push
es
aam
ljmp
push
xor
je
out
fwait
mov
xchg
rclb
jg
movl
ljmp
and
je
rolb
push
mov
stos
inc
nop
jg
push
adc
lea
jno
push
dec
repnz
push
cmp
jg
shll
push
dec
and
adc
jbe
sub
fs
push
or
jno
out
test
mov
push
addr16
mov
xor
out
aam
xor
xor
bound
repnz
mov
xor
icebp
lods
xor
loope
pop
pop
rorb
test
xchg
add
cmp
mov
xchg
loop
push
xor
lahf
mov
pcmpgtw
mov
hlt
fs
sbb
sar
stos
jge
or
cmc
fwait
fs
push
sub
stc
test
hlt
xor
push
adc
mov
xchg
outsb
xchg
fmull
mov
addl
pop
sbb
stc
sbb
call
or
loope
sub
jmp
jnp
movsb
jo
mov
inc
das
out
lock
xchg
ljmp
movsl
jp
stos
fidivl
popf
daa
dec
in
sahf
movswl
cmp
adc
inc
lcall
mov
and
push
push
shl
in
out
or
sub
call
lcall
or
lahf
xchg
mov
inc
mov
and
ret
ficoms
dec
pop
imul
push
movsb
or
lret
push
lret
jns
push
into
xchg
push
mov
inc
loope
stc
jge
mov
push
ljmp
adc
adcl
cmp
cwtl
mov
shlb
and
mov
sub
adc
int
jg
xor
insb
jnp
mov
pop
popf
pop
mov
or
xchg
add
mov
mov
ret
out
pop
push
cmpl
insl
xchg
lods
and
cltd
movsl
in
shll
mov
push
ljmp
aad
cmc
pop
inc
std
sub
out
dec
cmp
xchg
jecxz
test
xchg
in
cmp
ret
iret
cmp
data16
pop
mov
es
movsl
je
popf
shlb
inc
ljmp
imul
push
inc
rolb
enter
xchg
inc
xor
xchg
push
test
movsl
sbb
js
loop
jmp
add
sbb
je
movsl
push
pop
enter
in
jp
mov
enter
fucomi
dec
movsl
or
fs
in
dec
lahf
daa
cmp
cmp
test
roll
int
and
jae
std
sub
loope
into
push
dec
nop
clc
adc
leave
sub
inc
rolb
lret
in
pop
pop
pop
mov
out
mov
scas
shlb
add
loope
xchg
adc
jl
in
clc
or
repz
imul
imul
je
sbb
mov
add
adc
daa
pop
dec
jecxz
adc
mull
in
xchg
push
cmpl
mov
add
scas
adc
mov
rorb
mov
sub
je
pop
into
xor
xlat
in
mov
scas
sub
or
pop
jg,pn
xor
sub
mov
sbb
push
in
scas
leave
push
ficompl
adc
dec
add
aad
je
mov
movsb
jmp
xchg
lds
or
int
retw
pop
mov
jns
lods
adc
or
lcall
or
sbb
loopne
dec
pop
cmc
dec
xchg
sahf
xchg
sahf
push
insb
xchg
mov
in
or
xor
mov
mov
cs
movsb
lret
add
cwtl
int
adc
sub
xchg
push
std
add
insb
fcomps
popf
jb
int3
movsl
sub
and
cmp
lods
call
icebp
scas
out
or
arpl
xor
adc
pusha
lods
push
or
icebp
lahf
inc
dec
pop
ret
into
and
icebp
data16
pop
pop
sbb
xor
rcl
adc
xchg
adc
fildl
pushl
lcall
mov
movl
test
imul
xchg
add
xchg
leave
lret
push
mov
adc
xchg
sbb
movl
fs
sbb
inc
adc
mov
sbb
scas
adc
fdivrs
adc
imul
adc
cmp
xchg
jb
cmp
and
adc
mov
and
add
pop
addr16
inc
movsl
in
cmp
jge
outsb
cmp
ja
cwtl
cld
mov
rcrb
mov
leave
repnz
jle
sub
mov
mov
pop
ret
int3
hlt
jp
push
in
insl
int
xorb
pop
sbb
dec
aad
pop
inc
repz
cmpsl
and
xchg
cmp
pop
push
mov
popa
or
dec
or
dec
inc
xchg
ds
xor
call
add
fnsave
inc
and
jmp
mov
sub
shrl
fdivrs
insb
lods
rcrb
mov
add
xor
xchg
push
in
lahf
lret
movsl
push
loope
sbbb
cmp
mov
xor
mov
aas
dec
push
pop
mov
fucomi
ds
xor
dec
fidivrl
push
mov
into
mov
roll
mov
xchg
xor
xchg
xor
pop
test
sbb
shl
outsb
out
es
jg
push
jns
popa
out
fdivrl
or
push
sbb
sub
mov
lods
loopne
jb
je
in
push
arpl
and
into
int
in
sbb
movsb
pop
pop
sbb
imul
or
aad
outsb
jne
adc
gs
add
shr
mov
test
jnp
and
push
sbbb
popf
mov
fs
sub
inc
push
xchg
mov
stos
and
push
sub
lret
jne
filds
clc
stc
dec
nop
inc
sub
jo
mov
mov
mov
xchg
mov
negl
fistps
adc
arpl
loope
jns
shll
inc
cmpsb
in
jmp
dec
adc
sub
sahf
daa
out
cld
fisttps
cmp
xchg
ret
inc
outsl
imul
add
enter
pop
enter
cmpsb
out
sbb
xor
cwtl
scas
movsl
movl
mov
divb
int
cmpb
fiaddl
dec
loopne
fnclex
jecxz
xlat
xor
ljmp
or
scas
inc
xorb
adc
scas
dec
lock
test
adc
and
ltr
add
loopne
enter
mov
ljmp
movsl
push
aaa
inc
jnp
popa
mov
lock
out
pop
or
push
cmpl
pop
fdiv
jp
in
push
mov
pop
fsubr
mov
fistpll
adc
add
mov
out
cmc
lcall
sbb
stc
roll
into
cmpsb
mov
xor
and
push
xchg
std
sub
or
sbb
das
xor
js
mov
inc
lret
inc
push
stc
mov
in
mov
data16
out
out
leave
inc
orl
dec
ficoms
aas
push
fucom
pop
sub
xchg
push
and
leave
lds
jg
arpl
pop
jns
and
sti
mov
loope
push
int3
aas
cmpsb
lods
push
mov
xchg
adc
cli
inc
and
mov
pop
mov
or
xchg
or
adcb
idivb
mov
push
aad
inc
jo
mov
mov
dec
imul
and
push
mov
jae
stos
xor
sub
insl
adc
adc
imul
cmpsl
mov
nop
cmp
xchg
sbb
mov
fisttpll
sub
dec
fwait
rcl
fisttps
mov
adc
test
test
adc
inc
xchg
ss
pop
lahf
adc
xchg
sbb
outsl
cld
stos
xor
dec
arpl
stos
pop
pushl
inc
add
vmwrite
ds
mov
adc
mov
dec
inc
inc
in
das
scas
mov
jl
call
jne
sbb
cmp
dec
out
push
mov
push
lods
int
mov
push
add
pop
ret
mov
sarb
lods
mov
mov
fidivrs
test
xor
push
sub
repz
and
scas
cwtl
ficoml
push
leave
rorl
int
push
dec
in
adc
and
mov
sub
fisttpll
pusha
ficoml
xchg
add
push
or
push
inc
or
imul
sub
xorb
test
lret
test
mov
cmc
jb
inc
call
pop
pop
fwait
mov
and
iret
lret
sub
mulb
xchg
push
mov
shl
or
push
xor
xor
scas
xor
lods
pop
jbe
pop
sti
push
mov
mov
sbb
and
or
xor
adc
loopne
dec
ja
dec
out
bound
dec
nop
adc
scas
xchg
xchg
cmp
sbb
divb
inc
stos
cmpsl
adc
out
jne
or
sbb
sub
subb
lahf
mov
lret
xchg
fsubl
into
jne
jne
cmp
aad
leave
imul
adc
inc
jle
mov
pusha
pop
test
mov
out
fabs
scas
push
adc
jl
mov
xchg
adc
dec
gs
mov
sbb
lods
jle
mov
hlt
xchg
shl
cltd
aam
ja
clc
dec
gs
incl
cmp
inc
pop
ret
or
push
lcall
cmp
mov
outsl
jecxz
pop
and
lods
gs
jno
and
addps
popa
cmpsl
ds
inc
repz
shlb
inc
pushf
insl
sbb
int
jne
pusha
adc
sub
clc
hlt
push
inc
or
in
adc
and
xchg
mov
sbb
test
jne
aas
push
mov
pop
lods
adcb
out
sbbb
jmp
push
movsb
sub
push
mov
add
xchg
scas
outsl
jmp
stc
dec
xchg
enter
adc
sti
ret
ds
sub
mov
je
fs
gs
xchg
push
enter
mov
jae
lds
jne
dec
fidivl
xorb
adc
loopne
test
cmpsl
mov
test
mov
inc
movsl
mov
push
jge
nop
sbb
or
dec
pop
pop
dec
adc
out
fs
add
or
out
orb
nop
xchg
jne
xchg
nop
sub
les
adc
inc
cmp
lods
dec
xchg
js
lret
loop
fbstp
inc
sub
mov
mov
mov
mov
test
jne
cltd
mov
movsl
sbb
mov
mov
mov
adc
shlb
mov
jno
push
lret
cmpsb
dec
mov
fcom
outsb
mov
and
ljmp
pop
lea
out
push
jecxz
mov
dec
hlt
and
addb
cmp
xchg
jae
divl
cmpsb
cmp
cmc
movsb
je
mov
fwait
and
push
fisttpll
jmp
cmpl
arpl
test
cmpsl
mov
inc
out
mov
in
cwtl
xchg
ret
sub
pop
es
lahf
pop
pop
iret
lods
jp
subl
aad
into
mov
movsb
push
aam
stc
lret
sub
scas
mov
popf
sbb
inc
inc
xor
mov
mov
xchg
cmp
movsl
lahf
stc
pop
std
in
stc
lods
mov
jmp
pop
insl
sub
rcrb
dec
or
or
inc
aad
imulb
mov
cltd
push
adc
push
out
jg
xchg
fwait
mov
pop
mov
jb
jbe
sbb
pop
hlt
or
or
lahf
xchg
test
jmp
sahf
cmp
ja
repz
rolb
sahf
hlt
mov
ss
outsl
or
cltd
mov
loop
push
push
movsb
jno
add
loop
pop
test
pop
mov
xor
cld
fs
test
lahf
add
and
ret
fs
jmp
push
arpl
divb
push
lock
xchg
sub
add
xor
daa
sbb
xchg
xchg
pop
enter
jl
mov
fbld
arpl
push
inc
lds
mov
mov
dec
cli
sub
push
lock
mov
stos
ds
or
loop
movsb
dec
pop
dec
mov
and
dec
push
sbb
jmp
lods
int
pop
push
mov
out
or
or
lret
ss
add
cmc
jns
sahf
cmp
push
lods
shll
jg
cmpsl
and
sbb
imul
xor
jb
and
rorl
test
cmp
outsb
mov
int3
jge
push
clc
aad
cs
pop
jns
or
pop
lcall
icebp
shlb
por
pop
lahf
lock
or
xchg
cli
addb
cmpsl
lods
lods
xchg
std
imul
sub
cmpsb
hlt
cmpsb
push
sbb
fstpl
xchg
mov
mov
and
in
icebp
mov
into
and
loop
mov
push
mov
ficoms
mov
xchg
mov
push
jecxz
inc
pop
xchg
fimull
andb
inc
in
loop
jg
jl
adc
xor
adc
jmp
fnstsw
popa
push
xor
mov
in
inc
fmuls
fstpt
jge
adc
fnstsw
inc
fistl
mov
push
cmpsl
cmp
cmp
mov
sub
xor
cli
jb
roll
stc
int3
js
mov
out
cmp
addr16
xor
xchg
mov
inc
add
test
int
hlt
dec
mov
dec
inc
pop
push
cmpsb
cmp
mov
and
outsl
pop
lcall
mulb
sub
fisttpl
daa
mov
out
xchg
fcompl
mov
fdivr
dec
jecxz
lock
mov
data16
sbb
xchg
out
sti
jle
fbld
cmpsl
mov
and
push
cmpsl
xchg
fisttpl
fdivrl
mov
loope
xor
outsl
into
and
fs
push
jmp
push
jo
dec
add
shrl
push
cs
mov
shl
jl
pusha
aam
cmpb
fildll
nop
fcomps
cmc
push
jbe
inc
data16
or
cld
mov
xchg
enter
mov
mov
outsl
test
sahf
xchg
mov
hlt
add
lea
imul
mov
jge
cs
sbb
add
mov
mov
cmpsl
cld
stos
or
push
jo
int3
call
stc
cltd
mov
cld
jge
jno
xchg
data16
sub
lods
mov
jae
loopne
push
push
loop
icebp
and
pop
adc
cmp
adc
push
ljmp
xor
push
adc
andb
es
mov
movsl
jge
int3
sbb
sub
jns
roll
data16
lret
pop
sub
jmp
and
daa
cltd
sbb
fisttps
ss
inc
push
fnstsw
mov
insb
fcomp
movsbl
je
or
fwait
push
cmp
outsl
sub
lret
sti
mov
xchg
inc
xchg
inc
pop
sbb
cmp
test
and
jns
roll
repz
outsb
std
ret
push
cmc
jb
pop
movsl
cltd
push
mov
ret
xchg
rolb
or
outsl
fwait
cmpl
test
or
jns
mov
cmc
or
outsl
sub
adc
cmpsb
loope
fnstsw
pop
mov
lret
sbb
jbe
ret
sub
mov
sbb
loope
adc
mov
mov
repnz
jp
insb
ret
aas
adc
test
mov
inc
stos
cmpsl
mov
lret
inc
test
add
scas
push
jno
dec
jecxz
aad
adc
or
sub
daa
sub
jb
out
lods
stos
mov
roll
test
cltd
ds
not
lcall
pop
push
aas
jno
xor
xor
out
mov
mov
shl
sub
sub
lahf
sbb
inc
mov
lea
fiadds
mov
jmp
aad
xor
sahf
inc
xor
inc
inc
shrl
out
mov
ja
call
div
lahf
insl
adc
sub
ret
mov
cmc
fwait
xlat
xchg
out
shlb
shlb
in
jns
sbb
or
mov
or
jno
or
ds
sbb
addb
lods
xchg
inc
jne
mov
sub
lock
xlat
pop
sbbb
xlat
test
sub
xchg
cli
shrl
adc
cmp
mov
xlat
test
mov
xchg
push
das
inc
pop
popf
jp
adc
insb
mov
in
data16
dec
rcl
fnop
sub
add
xchg
xor
push
lcall
lods
adc
cmpsb
inc
cmp
mov
push
xor
lahf
pop
jb
icebp
dec
test
jns
sub
ljmp
and
add
sbb
ja
push
push
mov
sbb
into
pop
dec
sahf
xrelease
sbb
cmc
clc
cld
lock
and
repz
push
daa
fwait
mov
in
leave
cwtl
xor
movsl
jne
leave
lahf
pop
clc
sub
icebp
loopne
jmp
out
mov
into
gs
jnp
fcmovb
mov
out
jno
aas
xchg
in
or
pop
in
push
inc
sbbl
push
cld
add
sti
jp
scas
mov
and
faddl
cli
pop
loop
dec
mov
ror
sub
mov
jns
das
cmp
pop
or
cmp
movsb
push
inc
push
int
push
and
movsb
push
jl
fnstsw
js
push
les
out
cmpsb
cwtl
in
stos
leave
dec
cmpsb
ss
lods
pop
sbb
cmp
mov
loope
pop
jne
mov
push
inc
negl
iret
js
push
aaa
clc
lcall
xlat
clc
sti
adc
inc
loopne
fnstenv
sarl
cmp
add
pop
rcrb
movsl
std
adc
pusha
xor
mov
in
ja
jne
add
mov
mov
xor
je
dec
jo
sbb
mov
push
cmp
mov
adc
push
mov
pop
dec
lcall
je
testl
adc
pop
or
cmc
scas
xchg
aaa
in
lret
xchg
sub
in
imul
push
stc
push
xor
xor
lods
and
jo
or
movsl
dec
test
lret
adc
data16
iret
sti
insl
js
addr16
lret
scas
sar
jp
dec
les
jge
mov
add
js
stos
mov
jb
mov
arpl
mov
add
mov
sub
push
shlb
jns
adc
mov
iret
leave
mov
sbb
sub
rcl
push
add
ljmp
mov
jmp
xchg
mov
pop
adc
cmpsl
inc
push
and
mov
mov
push
mov
test
push
mov
dec
test
mov
and
lret
ret
jb
sub
sahf
or
add
int
jb
mov
xor
iret
rcrb
jnp
dec
insb
out
pop
adc
jns
repz
sti
pushl
xchg
dec
pop
mov
clts
jnp
jle
outsl
push
out
mov
push
mov
jg
mov
ds
leave
mov
mov
or
loope
xor
stc
push
sub
mov
add
iret
mov
push
mov
stos
or
idivl
outsl
xor
xchg
test
sti
fwait
into
les
js
hlt
int
das
jbe
or
shlb
push
insb
stc
popa
or
popf
fcmove
push
xor
fldcw
call
cld
mov
or
pop
in
sarl
dec
test
fimull
aaa
inc
jge
dec
cltd
shr
in
ja
notl
int3
lret
mov
fsub
popf
add
push
scas
push
loope
sub
mov
and
das
daa
mov
add
pop
mov
sarb
mov
dec
sub
dec
mov
jecxz
mov
push
sub
fwait
lods
jne
outsl
stos
pop
sub
cmp
lret
mov
insl
ja
xor
xchg
xchg
fcoms
xor
jnp
sub
mull
in
pushf
xor
jecxz
test
and
sub
fcmovu
in
and
jmp
and
ret
inc
or
adc
ljmp
cmpsl
mov
cmpsb
enter
dec
loopne
mov
aaa
sub
mov
pop
arpl
dec
rcll
jmp
pushf
stos
xchg
aad
xchg
xchg
xor
addb
sub
add
daa
stos
jno
ret
adc
das
and
cli
icebp
outsl
aas
imul
jl
lret
inc
lods
push
add
mov
dec
jb
popf
sub
and
and
lahf
scas
pop
mov
add
push
xchg
inc
loopne
loope
insl
sarb
sub
adcl
popl
and
int3
xorl
loopne
or
lret
cmpsb
add
mov
xor
fs
mov
push
lds
subl
add
xor
fsubr
or
mov
mov
loop
mov
push
mov
test
xor
push
or
or
in
stc
int
add
jb
in
fwait
mov
mov
addr16
xchg
movsl
or
iret
leave
mov
aaa
lea
aas
ret
mov
mov
add
mov
fstl
push
in
int
scas
out
xchg
fimull
push
pushf
lahf
pushf
bnd
inc
std
cmp
sbb
adc
mov
sbb
sbb
add
mov
cld
scas
cwtl
iret
out
push
das
shlb
sbb
add
lock
adc
adc
sbb
aaa
mov
data16
addl
ret
adc
lea
jno
aam
inc
xchg
mov
and
pusha
and
jbe
enter
into
dec
aas
mov
fisttpll
mov
rcll
rol
pusha
xor
in
mov
sub
dec
or
ds
lahf
jg
adc
or
in
lret
adc
addl
add
imul
cmp
outsl
arpl
vaddps
loop
add
add
nop
jmp
out
jl
mov
add
pop
fwait
roll
repz
es
inc
jmp
sbbb
add
ss
ljmp
fdivrl
xchg
cwtl
cmp
pop
je
rolb
jl
popf
sub
fsubrp
push
sbb
jp
call
iret
mov
xlat
mov
jmp
roll
imul
mov
xchg
push
mov
insl
pop
sar
xor
pop
push
and
push
sub
pavgb
xchg
xor
shrl
movsb
and
das
lahf
aad
xorl
int
test
cld
sahf
mov
leave
insb
mov
inc
arpl
push
arpl
shll
pop
mov
ret
leave
xchg
decb
or
cwtl
mov
xchg
pushf
movsb
push
es
xor
lret
fistl
pop
dec
cmpsb
iret
push
mov
or
cmpsl
inc
jae
sbb
pop
stos
out
sub
pop
push
icebp
sbb
bound
rcr
push
inc
test
xor
pop
inc
lds
or
push
fadds
pop
dec
adc
adc
test
xchg
dec
cmp
inc
lods
pop
loope
push
adc
mov
ds
call
xchg
call
dec
dec
cmp
cwtl
and
ss
fbstp
inc
dec
push
fbld
adc
clc
rol
inc
sub
pop
pop
sub
idivl
cwtl
imul
xchg
push
pop
mov
sub
dec
enter
xor
xchg
mov
sahf
fs
pop
xchg
and
mov
shlb
ret
mov
inc
push
cmp
lcall
enter
pop
leave
mov
daa
xor
xchg
adc
lods
cmp
pushf
dec
and
push
pop
out
cmp
cld
cwtl
dec
jp
in
cld
push
inc
out
ficompl
mov
mov
gs
movl
xchg
mov
test
sub
call
pop
cmc
cmp
ljmp
iret
je
cwtl
std
push
add
xchg
inc
fwait
push
mov
dec
js
lods
push
ds
int
imul
or
out
jle
das
out
and
outsl
xlat
clc
mov
idivl
ds
add
enter
adc
mov
or
sbb
into
cli
cs
add
iret
repz
cmpsb
into
mov
mov
stos
out
push
pop
sti
adc
push
adc
mov
movsl
fsts
sbb
fistpl
jecxz
in
leave
mov
sub
stos
cmp
xchg
movsb
push
loopne
loopne
aad
cli
jnp
adc
add
negb
lahf
fwait
mov
xchg
mov
ds
xchg
xchg
fs
mov
pop
dec
pop
mov
in
sahf
addl
add
push
icebp
aam
adc
rcrl
mov
sbb
push
mov
rep
sbb
sarl
dec
std
adc
lods
test
inc
inc
mov
test
inc
insb
adc
push
and
mov
outsl
xchg
jne
popf
ficoms
sbb
in
mov
in
add
xchg
lret
xorl
xor
push
lods
xor
call
pop
xor
fcompl
jae
lcall
lret
add
movsb
andl
sub
xor
adc
mov
sub
jecxz
stc
mov
into
xchg
pusha
mov
dec
nop
inc
inc
lds
inc
xlat
dec
push
pop
mov
pop
cltd
jae
bound
push
mov
jns
push
xor
ss
scas
popa
sbb
data16
inc
movsb
js
leave
push
testb
mov
pop
stos
xor
hlt
mov
xor
sahf
cmp
insl
in
pushf
push
xchg
adc
lods
imul
xor
jb
stc
push
ss
mov
mov
fwait
sti
adcb
pop
mov
pop
inc
testl
adc
and
lret
or
movl
aaa
push
stos
test
push
pop
mov
pop
lods
call
adc
insb
jb
sbb
fistpl
ret
ja
mov
enter
ljmp
jne
mov
inc
cmp
add
fisubrl
mov
test
lcall
push
inc
fstps
jns
enter
sbbb
movsb
loopne
pop
icebp
mov
xor
pop
test
cmp
stos
lods
xchg
jl
pop
sbb
xor
stc
nop
jne
and
jg
add
incl
movsb
hlt
test
jecxz
sbb
mov
pop
fidivs
xor
insl
divl
xorl
jp
nop
add
pop
mov
loope
hlt
cmp
dec
lcall
pop
xor
cmpsl
mov
mov
or
xchg
aam
leave
lods
xor
ss
aaa
jb
popa
jge
test
ja
add
and
or
int3
dec
jmp
xchg
popf
xchg
inc
sti
clc
inc
pop
xchg
sahf
divl
outsl
aad
loope
lea
sub
aam
jno
and
and
sbb
in
xor
xchg
or
pop
add
fstl
sti
inc
fistpl
push
data16
dec
popa
cwtl
xor
sbb
aaa
ss
and
mov
xchg
stc
pop
inc
inc
add
and
adc
mov
lret
mov
jae
pop
xor
sub
ja
les
pop
test
sahf
add
cmc
or
hlt
mov
and
loop
sub
jo
push
xor
rcrl
outsb
mov
adc
xchg
test
pop
cltd
gs
and
add
stos
enter
jecxz
insb
cmp
sbb
push
jle
lret
cld
ss
jle
push
xchg
sub
inc
xchg
in
aas
pushf
xchg
cmp
sub
mov
cmp
cwtl
andl
push
imul
inc
xchg
or
inc
mov
add
jge
add
push
push
gs
pusha
push
mov
andl
mov
lret
mov
cmp
ss
lock
popf
cmpsb
adc
jge
jecxz
jae
cli
cmp
lret
mov
jge
lcall
dec
lods
inc
lea
mov
icebp
stos
and
pop
sub
mov
addr16
hlt
lea
sub
inc
add
mov
push
add
mov
mov
sub
loopne
push
fs
andl
jp
fmull
dec
lods
sbb
cs
popf
cmpsb
mov
cltd
mov
daa
fdiv
aaa
test
sub
jns
stos
je
push
decb
cmpsb
fwait
rol
xchg
cmpsb
xchg
lret
mov
loope
dec
lock
push
gs
mov
adc
pop
daa
adc
cmp
xchg
jge
and
jmp
jbe
hlt
push
movsl
xchg
arpl
adc
xchg
orl
mov
std
dec
enter
popf
inc
ret
out
in
jle
xlat
jg
dec
sbb
repz
mov
sub
lcall
xchg
sbb
cmpsb
push
push
gs
cmp
ja
aaa
test
movsb
icebp
mov
fucomp
add
add
cmp
test
jnp
add
pop
push
push
ret
push
loop
mov
mov
stc
xor
rorl
and
aad
mov
addr16
add
out
jmp
dec
xchg
mov
sub
cs
js
push
jg
lcall
sbb
jns
sub
sbb
jns
test
or
mov
or
dec
mov
dec
jl
add
jae
lods
cmp
jb
pushf
inc
sbb
loopne
adc
sub
cmpsl
repnz
into
jle
xlat
out
fsub
inc
mov
sub
aas
sbb
js
sub
rolb
add
ljmp
sbb
fcmovnb
mov
pop
repnz
call
fcomps
inc
test
ds
mov
jg
rorl
adc
add
inc
iret
lahf
adc
mov
sbb
aad
imul
mov
mov
in
std
pop
add
movsb
aas
push
push
paddd
push
cmp
cmp
mov
jbe
cmp
push
mov
jg
test
fsubrl
shr
in
inc
and
jl
ja
mov
fistl
dec
sub
pop
add
inc
pop
xchg
lcall
inc
data16
into
pop
mov
cmp
mov
adc
mov
sti
dec
dec
mov
jo
pop
in
jns
repnz
cmp
out
or
aaa
jnp
int3
mov
int
add
jb
popf
mov
jne
stos
mov
or
cltd
cmp
dec
jno
sub
mov
push
cmpsl
mov
popl
push
inc
and
push
or
cmp
pop
add
mov
pop
inc
xchg
in
ret
push
addr16
add
shll
adc
movsb
push
arpl
sub
jmp
out
sub
and
loope
sbb
aas
gs
aam
jmp
or
mov
fildll
popa
mov
push
mov
jns
enter
inc
or
pop
lock
jp
push
in
sbb
enter
xchg
dec
pop
cmpsb
mov
xor
aas
arpl
push
scas
mov
adcl
pop
aad
or
in
sti
rcrl
jno
jns
rcll
lods
sub
mov
lret
cwtl
popa
dec
rolb
and
cld
ja
and
xor
mov
pop
push
mov
mov
sahf
xor
mov
sub
mov
inc
fstpt
dec
loop
leave
mov
cmpb
inc
fnstenv
stos
and
or
xor
fdivl
cli
or
inc
clc
icebp
mov
mov
jnp
fmull
jae
stos
scas
xor
xchg
pusha
mov
jp
mov
stos
repnz
or
adc
jg
rol
cmp
test
test
cmp
test
pop
xchg
fcomps
mov
bound
daa
push
test
push
frstor
inc
xor
sbb
test
loop
jno
call
addb
std
in
fildl
mov
arpl
sbb
lcall
sub
pop
xor
adc
ds
add
mov
add
lods
pop
mov
sahf
push
std
xchg
mov
jp
cli
pop
add
rcr
imul
push
jge
or
jecxz
or
mov
les
push
inc
and
iret
jno
mov
pop
cmp
or
repnz
xchg
aaa
and
bound
pop
loop
cli
cmp
cmp
or
aad
adcb
and
bound
push
lret
mov
int
push
aam
jne
sbb
ret
push
inc
adc
push
test
lds
repz
mov
dec
mov
mov
cltd
mov
test
sahf
les
in
add
xchg
push
std
mov
pop
mov
repz
cmp
inc
sbb
hlt
jns
das
push
sbb
into
xor
mov
sbb
xor
imul
add
xchg
mov
stc
loop
or
push
sar
loope
lds
imul
sbb
add
dec
mov
and
mov
mov
jle
stos
pop
mov
sub
xchg
jb,pt
jp
xchg
pushf
lret
jb
cmpsb
mov
les
mov
movsl
push
ret
or
xchg
in
cld
lret
dec
adc
lret
and
lods
pushf
cmc
fwait
sbb
aaa
mov
mov
xchg
ds
jp
push
insl
js
ficoml
in
inc
out
nop
lea
cmpsl
mov
imul
inc
gs
sbb
xchg
add
flds
popa
rol
and
jae
xchg
push
in
popa
sbbb
cmp
mov
test
movsb
lds
push
xchg
adcl
adc
adc
lock
aas
pop
out
sbb
mov
jmp
add
loopne
or
adc
inc
sarl
stc
mov
pusha
jg
mov
xchg
aas
sti
test
and
pusha
fcmovbe
push
lea
int
imul
fcomps
xor
sub
adc
cli
lcall
cmp
std
mov
and
xchg
dec
mov
adc
jae
jge
inc
imul
add
das
shlb
push
leave
ss
addb
mov
sub
push
xor
std
iret
loop
cmp
xchg
xchg
add
jecxz
imul
js
sub
jbe
call
and
adc
lea
int3
adc
int
mov
repnz
cmp
imul
push
jnp
dec
pop
and
mov
lods
in
pushf
xchg
cmp
xchg
cwtl
jae
hlt
fidivrs
adc
mov
into
lock
add
pushf
icebp
sub
dec
leave
subb
add
loope
add
outsl
and
xchg
rcr
lret
call
arpl
mov
xchg
mov
sub
xor
lds
in
dec
jb
insb
xchg
pop
rclb
and
mov
lea
adc
sbb
mov
iret
in
mov
push
push
addr16
sub
push
mov
ja
jo
mov
andb
iret
cmp
nop
xlat
jle
enter
fcoms
ret
push
in
mov
xor
insb
xor
xchg
mov
mov
fisubl
mov
dec
je
inc
cmp
loope
add
pop
sub
ret
das
inc
inc
xchg
jp
jl
pop
dec
mov
stos
mov
loop
ror
lds
inc
aas
jmp
dec
xor
out
sbb
inc
inc
push
pusha
js
push
adc
inc
fsts
mov
inc
adc
stos
xchg
mov
out
dec
inc
jge
cmpsb
inc
cmp
sub
jnp
pop
arpl
std
jbe
sbb
aam
jl
and
pop
mov
mov
fsubrl
repz
test
ja
stos
adc
push
data16
es
or
pop
std
imul
cli
adc
lcall
dec
fidivl
test
ret
call
lret
cmc
jp
scas
cli
out
adcl
lock
rol
pop
rcrb
inc
pusha
sti
fcoms
call
xchg
mov
out
xchg
sub
xor
push
popa
es
arpl
pop
jg
xchg
xchg
flds
jae
call
push
jno
aam
daa
sub
insb
xchg
lods
fstp
xchg
les
xor
push
jl
loope
out
cs
push
in
dec
inc
lods
inc
mov
fisubrl
arpl
pusha
inc
mov
push
xor
push
cmpsl
mov
gs
mov
or
xor
mov
loop
ds
mov
or
mov
cwtl
xor
test
clc
push
out
mov
jo
cli
dec
push
pop
loope
jnp
aaa
or
or
jp
int3
xor
call
sbbl
mov
mov
xchg
into
pop
scas
decb
lret
inc
lds
std
test
sti
lret
fisttps
xchg
pop
xchg
adc
aaa
add
scas
add
test
lock
add
js
lret
xor
lret
or
pop
movsb
scas
or
lock
jne
flds
loopne
inc
test
add
fadds
nop
push
jb
xchg
jl
rdtsc
fstpl
xchg
ds
pop
inc
mov
jl
xchg
mov
int3
jg
and
in
out
mov
push
and
xchg
shll
orl
mov
mull
add
leave
enter
push
aaa
xor
push
loop
inc
mov
sbb
lea
mov
sub
mov
shrl
xchg
jb
add
ss
pop
pop
gs
jl
orb
xor
push
rcll
push
rcll
mov
imul
mov
loopne
mov
cmp
mov
adc
xlat
jge
shlb
pop
mov
xlat
imul
cs
add
outsl
pop
cmpsl
jns
psadbw
stos
cmp
fstpl
cli
jge
mov
jmp
sub
and
pushf
xchg
lock
es
in
test
push
jb
inc
jae
sub
cltd
je
inc
cmp
mov
dec
lret
ret
test
and
jmp
outsl
movsl
pop
iret
and
adc
jp
mov
pop
call
fnsave
fidivs
mov
ss
push
lret
pop
xchg
shlb
xor
cmp
ljmp
scas
pop
sub
js
xor
fistpl
sub
push
scas
mov
lock
jo
and
fnstenv
shll
adc
es
xchg
out
fisubrl
mov
stos
dec
dec
sti
xchg
or
adc
jno
into
inc
pop
adc
fwait
stc
stc
loopne
mov
std
push
in
std
xor
orb
ret
push
cmp
fsubs
leave
and
cmp
loopne
add
push
stos
cmp
pop
lcall
das
xchg
mov
cmp
in
lods
cmp
shll
sbb
mov
or
dec
ds
cmpsb
enter
sub
js
mov
add
data16
roll
xor
scas
dec
xor
add
push
pop
dec
pop
int3
push
dec
cmp
test
repz
cmpl
cmp
pusha
adc
xor
out
or
insb
jo
xchg
mov
aad
mov
cmp
xchg
mov
mov
pop
pop
out
cs
ds
pop
push
jge
test
dec
imul
icebp
subb
fmul
pusha
push
or
notb
leave
into
mov
loopne
fsubrp
mov
addr16
aam
iret
bound
mov
add
das
jle
aaa
loope
adc
pop
jb
xor
loopne
jno
inc
iret
or
je
decl
push
pop
dec
push
shl
sahf
sub
push
imul
rcrl
nop
dec
pop
loop
pop
ljmp
xchg
inc
aaa
inc
aam
cmp
sbb
test
inc
add
shlb
sbb
sub
movsb
mov
sbb
add
lock
push
fdivr
adc
add
gs
repz
subl
test
loope
xchg
inc
cmpsl
xlat
adc
mov
sti
xchg
pxor
nop
movsb
pusha
dec
sbb
push
jns
pop
int3
cmp
inc
inc
xor
addr16
int
loop
add
adc
lret
lock
ret
mov
roll
int
dec
adc
mov
rcr
pop
mov
cmpsl
mov
in
add
scas
out
jg
incl
pop
data16
mov
mov
sbb
fcmovbe
mov
es
sbb
push
or
cmpsl
push
and
push
adcl
or
add
inc
stos
xor
cltd
lahf
add
dec
mov
pop
fnstenv
hlt
adc
in
movsl
and
lret
aam
movsl
xchg
rorb
lret
mov
adc
push
test
hlt
and
mov
mov
roll
hlt
lods
lcall
mov
mov
pop
jns
decb
cld
xor
add
add
out
lret
xor
jns
sub
aam
add
sbb
fstpt
sub
sbb
xor
ljmp
icebp
cltd
rorl
popf
es
test
f2xm1
nop
fistpll
and
negb
xchg
pmaddwd
cmpl
addr16
push
xlat
add
xor
inc
lock
sarl
cmp
mov
dec
cmc
dec
int
fisubl
scas
dec
js
mov
sbb
xorb
mov
and
mov
aam
adc
cmpsl
push
movsb
cs
cmp
jo
cmp
mov
jno
and
jg
mov
movsl
xor
mov
mov
leave
call
sbb
rolb
or
in
jge
aad
jo
adc
jae
call
call
mov
sbb
cmc
xchg
icebp
js
in
xchg
mov
mov
or
outsl
and
xchg
rcrb
push
adc
push
in
and
stc
and
adc
nop
movb
dec
cmp
and
fs
rcl
pop
popf
lods
add
mov
jo
scas
jle
stos
fadds
icebp
sbb
cmp
jno
inc
xor
dec
xor
xchg
lods
loopne
cli
sub
adc
dec
aad
ret
cs
fcomps
adc
pop
jg
imul
iret
mov
out
ret
jns
aam
loopne
and
leave
aam
in
mov
xor
jmp
js
cmp
adc
pop
adc
inc
push
dec
adc
jno
xor
ret
mov
sub
sbb
push
push
out
push
push
test
popf
push
and
jo
cwtl
fnsave
out
fcmovb
loopne
data16
rolb
push
add
loop
jmp
xchg
cmp
sbb
ljmp
and
xorl
xchg
leavew
xlat
int3
jo
outsb
outsb
mov
push
mov
adc
pusha
loopne
lret
cmpsb
add
sar
xlat
jecxz
popf
inc
popf
in
push
js
negl
jne
repnz
inc
push
iret
movsb
pusha
out
adc
cmp
inc
int3
mov
testb
sbb
das
mov
divl
pop
adc
mov
cmp
dec
jbe
inc
pop
test
mov
mov
jae
adc
pusha
aam
insb
pop
loopne
xchg
push
fbld
test
xor
insl
adc
fnstsw
jne
mov
out
outsb
loopne
xchg
and
push
cmp
cmp
idivb
sbb
jb
bound
ret
cli
sbb
lcall
jl
fldcw
push
jo
jno
inc
stos
mov
stos
adc
hlt
pusha
stos
inc
xor
stos
xchg
pop
mov
xchg
jg
mov
sbb
loope
mov
in
outsb
enter
into
rorl
add
pop
xchg
std
pushf
xchg
sbb
dec
fs
cld
add
cmp
sbb
mov
shl
mov
sub
iret
fsubs
imul
scas
gs
gs
add
push
mov
mov
repz
ret
out
xor
and
mov
icebp
xor
mov
in
sub
xor
mov
xor
xchg
stc
jmp
stc
aam
jg
or
jg
test
push
sub
es
lcall
fisttpll
repnz
popa
add
mov
jle
mov
std
rcrb
das
test
arpl
cmp
dec
in
cs
sti
push
loop
ja
bound
xchg
and
in
add
mov
jne
inc
out
jne
stos
aaa
rorb
pop
push
stc
lret
push
mov
fmuls
inc
adc
lods
daa
jb
xchg
inc
sbb
push
icebp
mov
inc
pushl
aaa
dec
and
cmp
imul
sbb
push
add
les
call
scas
ds
mov
pop
seto
sar
xchg
outsb
clc
popf
ja
pop
std
fisubrl
and
mov
push
loop
daa
stc
das
lret
roll
cmpb
lret
mov
cvtdq2ps
xor
inc
push
push
sahf
xor
and
cmpsl
push
xchg
lret
rol
or
inc
hlt
dec
inc
fwait
lret
movsl
mov
jecxz
jne
repz
stc
push
sbb
mov
das
push
jns
mov
inc
in
mov
fldcw
out
ljmp
push
addr16
cmp
das
imul
in
sub
cs
sub
adc
push
icebp
inc
imul
jmp
int
dec
fsubrs
jns
stos
xchg
mov
cmp
into
in
cmc
inc
outsb
mov
addr16
sbb
iret
or
stos
test
ljmp
dec
mov
jns
out
ss
ret
shlb
adc
lretw
mov
mov
pop
inc
fs
cmp
not
in
scas
mov
xchg
int
jae
mov
add
lods
out
pushf
xchg
sbb
add
fs
dec
add
outsb
push
movl
gs
or
push
aam
not
xchg
adc
jno,pt
rclb
and
repz
in
sub
mov
and
das
mov
sbb
ja
jg
mov
or
sub
or
fldenv
push
fbstp
repnz
loop
ret
add
fbstp
xchg
lea
lock
lods
js
daa
or
jge
data16
add
test
xor
cmpsl
cmp
xchg
fxsave
push
clc
pop
and
adc
adc
jp
ljmp
fdivl
cmp
cmpsl
mov
icebp
int
shrl
mov
push
sub
fildll
rcr
ss
clc
ret
rcrb
xor
lret
rcrl
sub
jne
push
sahf
movsb
mov
std
leave
push
pop
push
stos
gs
jae
fistpll
xchg
loopne
or
mov
mov
or
lcall
mov
jo
lret
cmp
add
addr16
popf
inc
popf
sub
xor
xor
fnstsw
pop
gs
outsl
fbstp
sahf
gs
stos
xchg
xchg
or
cmp
scas
lds
or
add
aam
jb
lock
icebp
jae
ret
mov
es
mov
fiaddl
mov
or
jne
sub
push
push
dec
add
sar
xchg
stos
mov
push
addb
jg
and
enter
fadd
jl
dec
sbb
test
idivb
jns
fisttpll
loopne
dec
pop
add
push
push
jno
inc
aaa
xchg
push
push
cli
test
sbb
sub
outsl
mov
adc
pop
rolb
adc
sahf
sub
adc
mov
mov
sarb
or
test
repz
ret
lock
push
jmp
pushw
sar
pushf
inc
sbb
sub
sbb
repz
jge
fisubs
inc
cmpsb
jbe
sub
push
inc
int
cmp
adc
mov
jnp
cmp
outsb
pop
xor
mov
inc
fcoml
out
notb
pop
cmpsl
adc
in
imul
dec
inc
xchg
mov
hlt
insb
adc
xlat
aaa
mov
add
mov
stos
sbbl
pop
jecxz
push
insl
adc
mov
or
ja
mov
sub
push
xchg
dec
pop
fcmovu
stc
pop
jne
cmp
cltd
sub
adc
xchg
lcall
dec
cld
cld
pop
das
or
xchg
sub
ss
xchg
mov
xor
mov
test
inc
adc
fbld
mov
data16
ljmp
xor
lret
jno
mov
lods
jg
cmpl
xchg
int3
pop
divl
in
sbb
adc
jbe
mov
inc
pop
cmp
ss
adc
sbb
push
push
mov
mov
cwtl
test
and
mov
mov
pop
and
push
dec
adc
lret
loopne
movsl
cld
outsl
sub
jecxz
mov
loop
xchg
insl
and
pop
mov
mov
and
add
xor
and
add
loopne
xchg
pop
push
push
test
push
push
int
mov
lahf
test
cmpsl
adc
push
ljmp
inc
je
lahf
xor
and
fcoml
lea
shrb
lds
xchg
movsb
pop
and
xor
mov
sub
sub
sub
sahf
js
inc
ret
lret
jecxz
ret
jo
ja
ret
call
aam
jp
add
mul
pop
mov
jle
hlt
and
aaa
std
and
jno
push
mov
outsl
pop
movsl
cltd
stc
adc
push
in
data16
stos
jne
shrb
mov
push
lods
std
adc
jo
push
add
xor
ljmp
mov
arpl
adc
pop
mov
nop
shrl
pop
lds
pop
adc
dec
mov
fstpt
mov
xlat
dec
inc
mov
xchg
sbb
jmp
sti
pop
xchg
jp
xor
pusha
xchg
adc
dec
test
mov
mov
rcl
xchg
loope
mov
inc
push
pop
sub
sbb
aad
add
lods
add
xchg
mov
mov
roll
and
jne
xorb
xor
inc
sub
pop
repz
inc
fnstcw
or
dec
into
jb
clc
frstor
xlat
enter
xor
xlat
pop
push
push
inc
cmp
aam
aam
and
jg
and
pop
js
mov
mov
push
and
in
fucomp
mov
add
xor
and
cmp
je
dec
lds
in
in
push
push
call
ficoml
fadd
mov
mov
loope
in
cmp
cmpsb
je
cmp
adc
inc
cld
mov
push
out
fabs
test
add
inc
nop
addr16
or
dec
pop
mov
mov
outsb
jb
and
adc
rcrb
and
add
dec
mov
sbb
insl
fsub
outsb
arpl
lcall
iret
outsl
rorb
xchg
pop
in
cmp
clc
pop
pop
rcrb
pusha
dec
faddl
adc
add
imul
inc
mov
in
inc
aaa
cmpb
mov
shll
outsb
in
push
sbb
stos
cltd
cmp
push
cs
lods
mov
enter
jp
sti
aam
mov
out
mov
fs
mov
or
pop
add
stc
xchg
jge
loop
add
sub
popf
shrb
pushf
rcl
xor
jl
xor
sbb
lds
loopne
xchg
fildll
jo
scas
push
mov
xchg
sbb
fidivrl
mov
rcll
popf
hlt
add
fcomi
adc
aam
fyl2xp1
imul
push
call
push
jmp
fdivrl
flds
push
add
fwait
adc
loope
test
aad
ret
je
or
daa
xchg
pop
xchg
pusha
addr16
inc
mov
pop
or
add
movsl
movsl
fstpl
mov
inc
jp
arpl
fwait
movsl
cli
in
push
cmc
mov
icebp
dec
lret
cs
fisttpl
push
mov
fucomi
and
ret
fcompl
stos
mov
sahf
jae
sbbl
pushf
jecxz
mov
mov
sub
pop
fdivrs
pop
enter
mov
add
inc
sbb
in
pop
adc
jmp
pop
jmp
dec
stos
jns
int
cmpsl
jns
test
dec
mov
iret
inc
out
push
dec
pop
cltd
pop
inc
mov
lret
scas
lea
cmp
std
inc
dec
mov
dec
mov
sub
fstpl
or
leave
js
loop
dec
mov
cmp
pop
inc
les
scas
jbe
test
dec
icebp
movsl
movsb
ret
cli
adc
sbb
mov
das
mov
mov
ss
dec
inc
inc
in
cli
inc
sbb
mov
push
in
jge
repnz
or
mov
or
cwtl
js
in
jnp
data16
pop
orb
loopne
pop
or
xchg
out
xchg
or
gs
fwait
and
pushf
push
or
insb
pop
add
loop
mov
add
sbb
xchg
xor
aaa
mov
push
xchg
mul
pop
shll
cs
insb
sbb
pop
xchg
hlt
jno
pop
lea
mov
pushf
arpl
bound
in
xchg
divb
icebp
in
dec
jle
or
sub
into
das
popf
push
xor
pop
push
pop
cmp
pop
insl
dec
dec
or
cmp
lods
aad
aas
mov
sub
test
or
addr16
dec
cli
xorl
stos
repz
push
repz
mov
js
xchg
fisubs
lcall
out
pop
jp
pop
stos
loopne
push
sub
aam
xor
dec
int3
mov
jge
std
sbb
push
dec
cmp
xchg
mov
pop
mov
repnz
jp
loop
imul
int3
in
sub
dec
movsl
mov
test
cli
push
into
repz
adcb
and
jae
loop
test
jp
xchg
sarl
outsb
clc
xchg
jmp
rorl
or
mov
insl
adc
icebp
add
es
jle
add
in
push
sbb
xchg
xor
mov
enter
cmp
push
mov
inc
cmc
pop
sysexit
mov
push
push
xchg
xlat
mov
repz
lds
imul
pop
xchg
clc
inc
out
out
sub
in
inc
jecxz
iret
jl
in
into
mov
pusha
mov
mov
jb
lret
adc
sbb
pop
push
roll
xor
add
sbb
idivl
icebp
pop
add
test
aad
imul
jne
cmpsb
js
pusha
push
ss
adc
repnz
push
xorb
jg
adc
stos
pop
sbb
adc
dec
xchg
insb
add
lods
insb
cmpb
cmp
movsl
push
jmp
sbb
fldenv
in
adc
fmuls
push
sbb
jp
inc
add
or
or
pop
ret
lock
inc
dec
inc
jbe
mov
and
test
push
je
xchg
enter
jecxz
js
push
or
lds
xor
xor
arpl
xchg
xchg
nop
xchg
aam
and
popf
push
dec
push
mov
or
nop
adc
sub
scas
jmp
mov
lods
test
sbb
and
lea
cmp
jl
inc
into
mov
lds
xchg
repz
or
sarl
xor
sub
mov
jae
scas
addr16
rol
inc
jbe
idivb
push
add
pop
lds
test
sbb
pop
ljmp
pop
hlt
ljmp
xchg
add
push
fstpt
jbe
push
push
aas
push
testb
pop
pop
or
mov
ljmp
jge
push
mov
xchg
adc
jmp
mov
aad
js
stc
ljmp
inc
jle
add
aad
repz
bound
mov
add
add
sub
rep
sbb
neg
xchg
push
cltd
ficompl
and
sbb
add
clc
jecxz
cmpsb
int
sbb
fidivrl
lea
cmpsb
shlb
dec
add
or
mov
test
jbe
test
das
ss
sub
or
mov
ljmp
pop
pop
in
in
movsb
sbb
jg
adc
faddl
pop
shl
xchg
sub
daa
movaps
and
shlb
aad
stos
push
xchg
jp
jnp
inc
dec
sub
orb
pop
mov
pop
data16
out
fsubs
cmpsb
mov
cld
jp
pop
and
mov
shrl
lcall
jecxz
sarb
mov
andb
mov
cmp
adc
aad
mov
movsl
ret
adc
loope
int3
lods
pop
lret
jp
fcomps
das
jg
xchg
mov
int
lods
sti
jb
sub
nop
jmp
std
sti
xchg
test
clc
xchg
jb
ljmp
repnz
insl
out
insb
inc
std
lcall
cmpsb
xchg
pusha
test
cmpsl
push
ror
sbb
fldcw
and
mov
repz
jne
orb
xor
add
mov
xor
jmp
mov
std
push
xchg
and
xchg
neg
test
js
sahf
cli
fnsave
push
mov
ret
dec
xor
push
pop
sbb
or
sbb
mov
repnz
mov
jo
push
add
xchg
xchg
lea
ljmp
dec
cmc
jp
add
push
mov
js
lock
dec
js
fistpl
test
xor
xchg
jb
jo
sbb
icebp
sti
sbb
cmp
jb
int3
cltd
jg
idivb
xchg
aad
sub
push
mov
sub
ss
xor
sbb
dec
mov
lods
inc
xchg
cmp
sbb
mov
movsl
movsl
push
cmp
jbe
sbb
out
leave
bound
std
flds
mov
mov
addr16
loop
mov
jmp
aas
cmp
dec
inc
bswap
mov
push
outsb
js
pop
mov
adc
inc
sahf
and
aas
adc
xchg
aaa
push
cmp
and
xor
jbe
mov
dec
and
test
imul
mov
mov
xchg
nop
cmc
cld
mov
test
jecxz
xor
shlb
push
xor
add
pop
stos
je
insl
rorb
test
xchg
sbb
jg
loop
int
mov
mov
call
aam
adc
gs
push
adc
pop
fwait
into
and
mov
push
inc
fwait
mov
xchg
scas
jno
xchg
add
icebp
push
pop
gs
xor
stos
xor
fldt
into
jp
popf
ret
std
add
add
or
leave
lret
dec
inc
daa
xchg
pop
cmc
pushf
lahf
movups
jg
add
jp
stc
pop
lahf
and
jp
cmp
jp
add
cmp
adc
ficoms
ljmp
insb
or
inc
lret
or
mov
adc
lahf
sti
mov
adc
data16
in
cmc
sub
jb
lcall
ljmp
dec
xchg
sahf
sub
mov
sar
and
sbb
lret
sahf
push
call
inc
cmc
inc
pop
dec
and
outsb
jne
sbb
push
mov
dec
inc
adc
stos
mov
xchg
in
jle
adc
xchg
or
cmp
orb
cwtl
rorb
iret
add
jnp
das
aaa
iret
push
mov
stos
je
jle
out
icebp
rclb
push
adcb
imul
jl
test
push
xchg
fildll
shll
push
mov
pop
imul
add
cli
sbb
sub
mov
and
rorb
shrb
jae
psrlq
or
mov
fistps
mov
loopne
push
xchg
xor
pushf
pop
in
adc
ret
mov
push
movsb
dec
das
cmp
popf
clc
cld
mov
and
in
inc
dec
leave
cltd
mov
sbb
sub
sarb
das
das
loope
maxps
inc
jns
test
cltd
cmp
or
and
pusha
xor
in
or
lock
adcl
xchg
push
mov
stos
push
xor
pop
popa
inc
mov
mov
sub
jae
cmp
ret
fistpl
rcll
xor
sbb
push
and
in
out
push
cmp
sti
icebp
iret
xchg
aam
add
repz
mov
push
les
scas
xchg
aam
data16
in
loop
cmc
int
xchg
inc
cld
lahf
in
sub
shll
lock
data16
xchg
ficoml
lahf
imul
push
xor
adc
mov
push
imul
cmp
jle
inc
mov
mov
and
stc
je
dec
hlt
pop
inc
dec
dec
push
test
rcl
enter
xor
lcall
sub
jge
adc
scas
inc
adc
push
les
jge
sub
mov
shlb
dec
aam
sbb
bound
add
lods
jne
mov
jo
adc
add
mov
lods
sbb
maxps
jnp
fists
loop
inc
add
sbb
jmp
daa
push
cmp
popf
aas
das
leave
iret
inc
mov
mov
pop
mov
lea
pop
stos
sbb
mov
clc
sub
add
pop
cmovo
mov
pop
stos
and
orb
add
and
jne
int
inc
sbb
or
test
xchg
cmp
lods
sub
fcomps
mov
sub
in
push
xchg
pop
aas
lcall
push
inc
je
inc
push
fsubs
in
in
hlt
pmulhuw
cmp
fcompl
into
mov
movsl
sti
dec
call
sbb
or
sub
inc
inc
test
jge
cmp
mov
sti
out
or
lods
scas
movsl
add
sub
in
xor
xchg
stos
jecxz
mov
dec
add
push
ja
shl
test
loop
cwtl
addr16
aam
dec
dec
pop
popa
repnz
lods
mov
xchg
ljmp
ljmp
mov
sub
pop
lods
mov
pushf
xor
aaa
push
cmp
jge
das
push
mov
shl
xor
lcall
dec
mov
shrl
cmp
mov
or
iret
ret
push
rcl
cli
cmpsb
push
lods
int
xchg
sbb
jmp
jmp
inc
mov
mov
inc
daa
xor
popa
repnz
outsb
in
and
cld
fs
pop
test
mov
aad
xchg
push
dec
push
and
cld
pop
hlt
mov
jb
and
xchg
in
pushf
xchg
cld
and
pop
mov
pop
frstor
aad
cs
jl
push
mov
lods
gs
mov
dec
in
repz
xchg
jnp
scas
pop
push
jbe
repnz
out
loopne
ss
jl
mov
add
data16
jne
fbld
mov
mov
imul
insl
dec
cli
mov
xchg
test
shl
ret
pop
bound
sub
dec
jbe
push
insl
stos
sti
adc
add
xchg
test
mov
outsl
add
in
arpl
or
xchg
addr16
fdivr
jp
fwait
cmpsb
push
cmp
push
int3
jge
xchg
sub
inc
lret
dec
dec
iret
insb
push
ss
testl
push
adc
and
icebp
push
aaa
testb
pop
mov
std
shl
sbb
lods
sahf
ljmp
add
es
pop
sti
mov
or
jb
lea
mov
enter
mov
ss
sub
fnstcw
movsb
mov
and
aas
outsb
into
nop
mov
fwait
hlt
int3
mov
xchg
mov
aam
xor
sbb
les
aaa
int3
jb
ds
test
aad
int3
mov
je
ds
subb
inc
mov
mov
dec
cmp
mov
inc
fdiv
mov
pop
xchg
xchg
jae
mov
cmp
nopl
scas
bound
mov
int
mov
sar
lret
ss
dec
leave
cmp
adc
sbb
in
testl
xlat
xlat
cmp
fidivs
lret
mov
jmp
cmc
xchg
int3
dec
cmp
std
bound
out
test
hlt
cs
xor
cmpsl
filds
cld
adc
popa
and
cwtl
push
jp
aas
sub
movsl
jl
mov
mov
or
int
les
push
fmuls
in
test
test
and
ret
jne
sti
jo
mov
jns
lahf
insb
shll
lret
adc
add
jnp
add
popf
or
ds
repnz
dec
push
add
dec
aad
lods
into
dec
sub
cmp
fidivl
jl
insl
sti
sahf
or
inc
fiadds
std
xchg
pushf
out
inc
push
and
loope
in
ss
fisttpl
mov
cmp
push
stc
addr16
and
xlat
fistpl
sbbb
out
dec
mov
adc
aam
movsl
imul
push
mov
xor
mov
xchg
into
push
xchg
xor
je
mov
popf
stos
aas
shrl
cmpb
add
repnz
ret
cmc
inc
aad
inc
jns
jb
push
or
xorl
scas
mov
adc
jg
fildll
pop
dec
stos
adc
es
js
adc
mov
test
mov
and
xchg
xchg
mov
inc
scas
pop
xor
ds
lds
dec
stos
dec
pusha
int3
lret
mov
sahf
dec
std
rcrb
and
fcoml
add
jo
nop
xchg
fwait
imul
xchg
mov
dec
or
mov
push
out
es
adc
int3
sbb
outsb
lahf
lea
lods
data16
mov
mov
test
outsl
repnz
jl
icebp
scas
add
mov
push
aas
adc
adc
rcrb
jbe
shrb
add
inc
femms
mov
xor
sub
cld
push
mov
pop
imul
rcl
xor
sbb
sar
jmp
iret
es
flds
mov
xor
test
sbb
lea
push
mov
xchg
mov
fcmovnbe
gs
mov
mov
sub
int
cmp
sub
jmp
add
notb
inc
push
outsl
and
addl
or
pop
xchg
and
lea
pop
and
enter
movb
dec
sbb
popf
mov
cmp
ret
jp
or
inc
xor
leave
mov
push
das
call
sbb
fs
mov
das
mov
push
aam
mov
mov
std
adc
or
shll
test
notb
adc
loop
popf
rorb
insl
mov
mov
mov
outsl
aam
jg
je
insl
mov
gs
aas
dec
cmp
pop
cli
mov
sbb
leave
jno
and
adc
xor
inc
xor
jl
add
sbb
jmp
add
popl
loope
nop
sar
cmp
pop
cmp
insb
test
ret
mov
les
loop
sbb
pushf
out
pushf
push
jns
adc
cli
iret
xchg
xchg
std
movb
jbe
es
cmp
test
add
add
pop
lcall
daa
aas
sbb
jecxz
mulb
add
adc
and
adc
jne
jbe
mov
add
mov
iret
jne
inc
mov
mov
inc
cmp
pop
mov
nop
mov
into
stos
stc
test
daa
mov
jle
sub
out
inc
mov
rcl
cmp
sarb
fdivr
xlat
pop
mov
dec
cmp
mov
sarl
cmp
push
lods
dec
or
js
jmp
mov
jnp
inc
mov
cli
jmp
mov
jmp
or
arpl
mov
sbb
add
mov
imul
dec
inc
rcrl
fmuls
dec
scas
cmp
loop
out
in
mov
dec
shlb
cmp
jno
sbb
and
clc
adc
dec
cld
xchg
scas
mov
add
pop
lea
adc
je
xor
and
imul
cmpl
into
xor
std
push
push
divl
mov
mov
pushw
push
inc
and
xchg
bndstx
xchg
hlt
xchg
jmp
push
outsb
jp
fdivl
arpl
cmc
lcall
xor
push
cs
push
cmc
scas
fdiv
lds
push
xlat
sub
add
pusha
cwtl
outsb
pop
cwtl
mov
mov
xlat
in
cltd
pusha
inc
mov
dec
ja
sub
or
and
lret
in
loope
push
mov
orb
ret
je
imul
dec
dec
push
ja
out
gs
cld
lods
scas
mov
imul
cmp
jne
fucomip
jae
lea
jnp
and
ret
shlb
mov
pop
jno
cmp
xor
sahf
xchg
and
bound
or
cmp
mov
inc
lahf
lea
push
lods
lcall
jb
cmpsb
mov
insl
cmp
test
inc
or
mov
and
scas
nop
jae
sbb
mov
aad
jg
or
testb
lcall
push
jge
loop
rcrb
add
xchg
pusha
pop
fidivrs
cmpsl
lret
cmpsl
sti
add
xor
pop
adc
and
sbb
arpl
in
les
lret
insl
jbe
ljmp
mov
push
cs
repnz
sbb
shlb
sub
fwait
add
and
push
dec
xchg
xor
outsl
push
scas
and
sub
test
push
orl
mov
mov
cwtl
xor
cmovbe
sub
jmp
or
xlat
in
mov
inc
dec
fdivrl
mov
imul
jmp
fiaddl
bound
daa
xor
xlat
loopne
scas
and
mov
and
repnz
mov
mov
and
sub
push
ret
insl
bound
adc
test
loope
test
fs
pusha
lret
and
sbb
cmpsb
jno
movsb
jb
fdivs
mov
shlb
and
je
cmovo
or
imull
aad
cmp
push
cmp
arpl
ret
in
push
or
add
test
inc
aam
push
xchg
lds
daa
cmp
aad
pop
stos
ss
ret
dec
loop
inc
stos
inc
push
jne
out
sub
jnp
imul
leave
adc
ds
jb
jbe
les
arpl
rcl
push
inc
filds
mov
les
jb
sbb
inc
fimuls
inc
stos
sbb
call
push
jo
into
ds
push
xor
daa
negb
js
sub
pop
fs
ror
sbb
push
mov
lcall
fnstcw
jne
and
adc
ret
mov
jle
mov
push
or
sub
popf
les
mov
pop
jmp
rcrl
jae
cltd
cmpsb
jp
pop
in
cmpsb
cmp
movsl
insb
adc
sub
push
and
mov
loop
pop
int
stos
lods
xchg
jnp
cwtl
mov
sbb
inc
loopne
movsb
mov
pop
mov
nop
jge
lock
sbb
xchg
cmp
rol
mov
inc
push
or
xchg
sub
repz
inc
sbbb
sbb
inc
call
test
lods
mov
jns
add
mov
dec
jns
mov
lahf
outsb
pop
pop
add
loope
or
mov
std
loope
int
loop
or
in
cmc
and
inc
push
jecxz
mov
push
jp
decl
jmp
jae
and
dec
movsb
and
push
push
les
mov
in
test
stc
pop
jne
mull
sub
inc
les
lods
sub
xor
jmp
popf
pop
add
aaa
sbb
movsb
and
adc
lock
sub
push
mov
pop
jl
cmp
notl
or
dec
and
in
out
cli
lods
aad
lcall
add
adc
test
pop
inc
pop
adc
fnstsw
mov
adc
dec
push
repnz
sbb
mov
add
sbb
cmp
stos
std
sbb
pop
mov
jl
insl
fisttps
jbe
rcrl
mov
std
and
push
mov
fisttpl
int3
ljmp
stos
sub
sahf
push
das
je
xchg
mov
jbe
mov
in
mov
jge
mov
or
inc
push
mov
ljmp
sbb
and
into
lea
dec
dec
xchg
arpl
fistpll
push
pop
addb
pop
sbb
sbb
stos
adc
adc
es
les
push
sbb
clc
lea
add
lcall
dec
cmp
mov
mov
enter
jns
dec
imul
ss
adc
jno
mov
cld
test
daa
jl
scas
cmc
enter
xor
insb
popf
mov
out
dec
gs
fdiv
fwait
addr16
fs
push
jle
fnstcw
lods
shlb
and
jno
das
xchg
dec
push
into
sbb
negl
or
shr
pop
cwtl
dec
shlb
lahf
mov
ret
xor
test
sub
pusha
in
mov
lahf
insl
mov
push
mov
nop
xor
shrb
rcll
bound
xor
sub
inc
jbe
into
sahf
pop
inc
inc
insl
in
cwtl
outsl
push
xor
mov
repz
adc
jne
jae
mov
imul
inc
jmp
daa
stos
adc
lcall
into
add
xchg
repnz
call
out
jo
in
dec
xchg
int3
cmp
mov
lcall
dec
mov
mov
icebp
scas
jp
dec
adc
adc
jp
stos
xlat
jg
cld
inc
xchg
xchg
xadd
jnp
sbb
push
inc
mov
int
scas
ret
int
lea
mov
inc
loopne
loope
xrelease
adc
frstpm(287
inc
sub
inc
int3
cmpsl
cmp
dec
add
scas
mov
or
outsb
out
popa
cmp
push
test
iret
or
out
adc
mov
cmpsb
icebp
call
pushf
test
dec
push
hlt
pop
movsl
sarb
or
push
jmp
jmp
movd
fcomip
je
mov
mov
data16
loope
and
mov
or
mov
dec
pop
sub
loopne
sub
push
cli
shr
push
mov
shrb
int3
jo
mov
dec
inc
jnp
jge
jp
popf
imul
nop
dec
out
test
negb
inc
pop
lods
sahf
lret
lock
inc
call
leave
add
shrb
and
insb
inc
cmp
dec
cmp
jecxz
dec
mov
iret
pop
popa
xor
cmp
cmp
icebp
lods
pop
add
testb
js
fnsave
sti
push
jnp
jmp
fldln2
add
pop
aam
sbb
outsl
xchg
cmpsl
pop
pop
sub
sub
movsb
imul
mov
int3
stos
scas
or
aad
or
sbb
add
pop
outsl
je
mov
xor
add
dec
cmp
or
sub
mov
pop
mov
adc
shl
sub
mov
push
out
push
mov
jmp
lret
add
outsb
hlt
push
dec
rorl
dec
xchg
mov
int3
aaa
movsl
shl
xorl
mov
imull
fs
icebp
outsb
lahf
repz
arpl
and
jg
divl
and
inc
ja
std
xor
pop
cmpsl
jp
push
xor
out
add
in
xchg
je
test
sub
mov
add
scas
pusha
push
loop
dec
xor
sbb
jg
cli
in
jbe
mov
jno
popa
imul
les
inc
sbb
aam
bound
xchg
jne
xor
pop
cltd
mov
xchg
in
jne
xchg
jae
enter
fucomip
outsb
into
scas
lods
aam
stos
jmp
jns
ret
pushf
aam
test
push
mov
mov
jnp
xor
inc
addr16
mov
cs
decb
jne
dec
imul
sub
pop
add
sub
mov
lea
mov
cmp
push
inc
and
mul
cltd
test
call
sub
pushf
filds
movsl
push
push
scas
pop
fwait
es
mov
sbbb
jg
dec
lcall
je
jmp
inc
push
xor
fisubs
mov
lods
in
and
or
repz
fistps
test
lock
filds
or
adc
test
pop
dec
push
xor
adc
xor
daa
dec
insb
sbb
dec
mov
outsl
inc
fidivrl
test
dec
sub
add
cli
xorb
gs
ret
shrl
lds
push
movsl
loop
cmpsl
dec
inc
and
sbb
adc
pop
in
cmp
push
dec
pop
cmp
dec
sahf
adc
dec
cwtl
and
add
adc
xor
imul
imul
jl,pn
nop
lcall
mov
push
lods
mov
test
stc
pop
jae
outsl
sahf
mov
jnp
push
incb
test
mov
scas
push
push
arpl
mov
cmc
pop
iret
adc
data16
adc
adc
push
ja
sarb
cli
mov
in
loope
fmuls
pushf
movsl
das
xchg
and
and
lcall
sub
je
int
pop
mov
or
clc
fneni(8087
addr16
push
and
lcall
arpl
std
xchg
sbb
stos
divb
push
mov
inc
insb
add
icebp
jmp
in
inc
or
add
dec
js
movsb
repnz
xlat
cs
stc
jmp
cmp
xchg
fwait
and
mov
push
icebp
mul
daa
test
mov
or
cmpsl
nop
cltd
adc
je
sbb
orl
in
mov
cmpb
into
cs
xor
xor
xchg
cmpb
push
xchg
xchg
jb
mov
bound
or
fidivrl
xlat
ds
or
mov
adcb
outsb
test
pusha
into
jg
scas
hlt
or
xchg
and
leave
movsl
and
les
mov
ss
xchg
not
lock
xor
call
sbb
adc
mov
in
mov
cmp
pop
dec
dec
add
cmpsl
repnz
push
pushf
shlb
pop
mov
sti
out
pop
push
ljmp
cmp
out
jnp
je
test
xor
sub
xor
jmp
bound
dec
cli
jnp
aaa
out
inc
inc
push
test
fmuls
pop
enter
popf
xor
pusha
adc
lret
and
subl
mov
cld
xor
inc
dec
xor
jmp
out
shll
aad
test
movsl
loop
pusha
xor
nop
push
jg
cld
mov
ljmp
push
jg
cmp
sbb
mov
lea
xor
loop
xor
leave
icebp
out
test
insl
je
xchg
push
push
xchg
hlt
sbb
clc
mov
int
scas
imul
mov
jb
jbe
and
insl
sar
jae
aaa
outsl
mov
movsl
imull
testl
mov
push
xor
sub
jne
in
sub
leave
ret
mov
sbb
scas
lods
push
adc
xor
hlt
stc
xor
icebp
ja
xchg
inc
mov
lds
sbb
jae
rorb
mov
push
dec
jl
or
pushf
xchg
push
xor
inc
popf
decl
imul
loopew
xchg
hlt
sbb
sbb
and
and
loopne
aad
pushf
int
jmp
shlb
push
jp
test
ror
sub
inc
sub
cmp
xor
pop
sbb
jmp
inc
inc
aas
or
push
pop
std
jbe
call
pop
adc
and
sub
push
into
pop
sub
andb
mov
sbb
ss
std
addr16
jns
stos
cmc
nop
in
lods
in
mov
lret
push
xchg
repz
pop
stos
dec
push
inc
cltd
out
notb
adc
xor
or
mov
pop
insb
jnp
mov
repnz
and
cmp
mov
inc
les
jmp
dec
xchg
push
dec
lcall
idiv
adc
inc
cld
jno
and
xchg
and
test
pop
filds
sbb
lds
jne
add
pop
cltd
stc
mov
fadds
pop
jnp
mov
mov
in
dec
xor
int3
cmp
fstpt
daa
push
into
bsr
fdivrl
fwait
mov
or
aas
ret
push
jmp
jns
fwait
mov
cld
mov
xor
lahf
adc
cld
je
mov
stos
ja,pt
xchg
in
mov
jo
or
add
test
insb
xchg
xchg
lcall
xor
mov
loopne
clc
daa
cli
daa
xor
sub
shrb
cmp
das
inc
push
or
inc
arpl
test
inc
pushf
sub
sbb
es
xchg
out
pop
inc
test
imul
dec
push
sbb
es
sub
mov
sub
jnp
hlt
jnp
mov
push
and
mov
sbb
cmp
lret
ds
enter
clc
or
jle
dec
dec
or
repz
loope
jmp
insb
or
and
iret
mov
pushw
sub
inc
xchg
shll
mov
cmp
mov
xor
push
mov
aas
mov
push
ds
sbb
add
ret
xchg
mov
int
leave
jo
and
jae
xchg
and
lock
xorl
xor
sbb
popl
fnstenv
xlat
push
cmpsb
mov
mov
jp
ss
push
pop
mov
mov
loope
jmp
and
mov
xor
fmul
pop
jo
fstps
and
push
into
add
shrl
xchg
clc
mov
dec
sahf
outsl
icebp
sub
mov
movsl
ss
out
xor
out
fsts
and
fldz
lret
cmp
mov
repnz
popa
push
dec
ret
pop
or
repnz
shlb
into
push
lea
push
mov
mov
push
add
push
test
sbb
mov
or
ds
push
jae
cmpsb
cmp
jb
fs
ljmp
cmp
pop
xchg
xchg
out
popf
cmp
xor
js
mov
adc
jb
stc
xchg
jo
sbb
pusha
ficoml
sbb
daa
into
cmp
into
push
mov
xchg
lcall
pop
cwtl
fucompp
int
fsubrl
push
cmp
adc
popa
jae
int
dec
adc
ss
lcall
lock
jg
loop
mov
add
into
mov
sbb
sahf
jmp
or
stos
ret
mov
mov
lahf
cmp
lahf
hlt
mov
sbb
fnstcw
mov
dec
cmp
pusha
pop
loopne
inc
and
sbb
nop
hlt
nop
movsl
mov
sub
les
mov
js
cmp
sub
inc
sbb
fsubr
push
jl
lock
dec
stos
xchg
mov
jns
sarl
pop
pop
mov
leave
enter
jecxz
cwtl
push
xchg
scas
icebp
inc
inc
push
pop
pop
jle
fistpl
ret
jp
rcrl
cmpsb
jge
cmpsl
xor
adc
inc
pop
mov
cmpb
or
movsb
cmp
cmp
imul
adc
loop
inc
adc
push
loopne
jecxz
and
mov
sbb
jns
or
mov
pop
cmp
and
push
jae
ds
out
jl
int
and
pop
jb
imul
sahf
sbb
dec
mov
pop
push
cmc
push
or
sbb
xor
add
fdivl
mov
push
int3
adc
cmc
in
js
addl
adc
outsb
cwtl
add
pop
jne
add
pusha
and
mov
outsb
sbbl
inc
lret
andb
xchg
aad
fistpl
and
cmp
jbe
xor
loope
clc
cld
mov
ret
sbb
cbtw
shlb
push
mov
inc
and
xor
pop
and
and
test
fsts
inc
push
and
jne
stos
out
lahf
fcompl
test
dec
xor
adc
pop
je
add
sbb
xor
xchg
data16
pop
jne
pop
nop
cmp
out
jae
aam
lahf
sbb
mov
icebp
xchg
repz
xchg
sbb
xor
fsubs
sub
lret
mov
inc
add
lods
mov
movsb
movsl
movsl
sahf
mov
xchg
cli
or
fldl
mov
mov
sti
in
leave
mov
mov
ljmp
lcall
mov
les
push
test
lahf
and
fsubr
insb
neg
jnp
in
cs
test
xchg
xor
bound
nop
push
add
add
les
fnstenv
cmp
out
mov
mov
mov
test
test
jmp
popl
jbe
sbb
or
pop
push
mov
jmp
push
jmp
pop
and
in
pop
orb
fcmovb
aas
mov
xor
push
lahf
cltd
xchg
into
imul
out
xor
push
jmp
mov
mov
shlb
mov
clc
adc
xchg
lret
test
push
pop
pop
push
and
pop
adc
push
xor
add
std
scas
out
push
fdiv
add
adc
dec
ret
or
mov
jne
test
popa
neg
outsl
sbbb
cli
mov
fcoms
xchg
leave
int3
sub
mov
push
sbb
xlat
dec
mov
outsb
pop
shl
pop
push
sub
sub
dec
pop
lret
test
jnp
icebp
push
pop
js
pop
mov
bound
cmp
sti
aad
cmc
push
rcrl
in
cmp
push
clc
icebp
sub
jno
hlt
adc
lock
push
or
insb
xor
pushf
push
mov
adc
sbb
mov
ss
add
jne
inc
js
sub
out
push
fcoms
push
cmp
xor
mov
jns
cmc
imul
lock
je
cltd
push
ja
loop
int
ja
sbb
push
cmp
jl
cmp
das
out
out
fstpl
jnp
rorb
icebp
data16
shl
ss
ljmp
pop
pop
movsb
test
cltd
mov
xchg
pushf
xorb
xchg
movsb
mov
outsb
gs
mov
repz
sbb
jg
cmp
test
test
adc
es
stc
test
imull
popf
add
in
loope
mov
jb
test
ficoms
out
inc
sub
cmp
or
push
test
rorb
out
pusha
mov
xchg
sbb
sbb
test
cmp
loopne
shlb
insb
call
imul
sub
pop
push
outsb
les
cmp
inc
push
mul
div
add
xor
lea
or
and
shll
jne
pop
mov
mov
dec
pop
sub
xor
jmp
sub
outsl
or
jae
sub
enter
out
movsl
sbb
rolb
push
mov
jb
pop
fsubrs
mov
mov
rcrb
enter
mov
aad
stos
bound
pop
mov
mov
mov
mov
add
jo
push
frstor
xchg
jne
clc
adc
sbb
inc
dec
lods
fstps
fcomp
pop
or
clc
inc
adc
ja
jmp
test
pushf
dec
je
adc
pop
movsb
pushfw
addl
imull
xchg
int3
push
das
xor
mov
and
push
nop
lods
not
test
fldcw
rcl
mull
in
push
pop
popa
int3
push
dec
lret
xor
pop
cmp
cmp
jns
insb
and
xlat
cmp
push
jg
cli
in
cmp
in
jmp
mov
pop
sti
push
add
push
add
sub
pushf
ja
test
mov
mov
shrb
and
cld
pushf
mov
dec
jmp
add
adc
inc
sub
fldcw
test
pop
das
xor
out
inc
ds
push
lods
pop
dec
sahf
lods
jno
dec
les
cwtl
ja
pop
or
gs
paddusb
add
icebp
pop
les
fcmovnb
popf
int
ret
test
ljmp
mov
jae
or
push
push
xor
out
scas
aaa
pop
sarb
aam
cmp
scas
pop
cltd
test
cmpsl
lcall
ja
inc
jae
out
pushw
stos
mov
lods
cmpsb
jns
out
call
push
sbb
in
mov
jne
xor
push
mov
cmpsl
outsl
cs
push
or
sub
adc
test
jg
xchg
pop
xchg
enter
mov
test
adc
stos
adc
and
lahf
ret
testl
in
pop
inc
push
sbb
daa
push
les
xchg
xor
jle
mov
or
or
add
in
mov
adc
outsb
inc
xchg
add
jge
call
movsl
jbe
mov
out
xor
xor
push
lea
xchg
dec
call
dec
sbb
inc
push
stos
jns
testb
ja
and
lahf
fwait
push
mov
mov
iret
pop
jle
xchg
jbe
xor
fs
das
aam
out
push
lds
loope
shll
xchg
rcrb
and
jge
pushf
mov
push
mov
scas
test
pop
int3
std
lea
lahf
sbb
fldcw
mov
jae
push
ds
lret
add
inc
push
lret
pcmpeqw
testb
push
in
and
pop
and
xchg
sahf
mov
mov
push
sub
insl
cli
push
out
jmp
aam
mov
icebp
jge
sbb
mov
in
mov
out
loop
cmpsl
or
nop
xchg
pop
pop
mov
bound
int
pusha
xor
inc
jecxz
dec
out
push
add
or
ret
add
dec
pop
and
inc
test
test
xlat
add
jno
int3
xor
inc
mov
outsb
jg
mov
mov
dec
repz
dec
pop
sbb
gs
cmpsl
xor
rolb
std
cmc
and
cmp
push
sub
ja
pop
mov
pusha
adc
mov
cmp
or
mov
sbb
scas
and
enter
xchg
mov
mov
movsb
dec
xchg
xchg
sbb
jns
popa
ss
dec
xlat
cli
outsb
push
scas
imull
mov
stos
or
add
xor
push
fmul
nop
jle
pop
out
ljmp
dec
movsl
testl
add
rcll
mov
push
push
jne,pn
insb
xchg
dec
arpl
lock
call
or
jae
iret
test
fistpll
mov
push
sub
mov
lret
pusha
sti
add
movsb
jmp
stc
std
mov
xchg
addr16
jo
popf
jge
rcll
xor
inc
into
push
insl
ss
jecxz
mov
sbb
push
pop
mov
cltd
pop
mov
sub
push
pop
mov
out
xlat
inc
sub
xchg
cmp
mov
outsl
sbb
jl
pop
jae
xor
ja
adc
pop
ret
sbb
idivb
dec
popa
dec
cmp
stos
push
pop
dec
sub
sbb
xchg
sub
sbb
mov
sub
roll
loope
add
imul
adc
icebp
lcall
shrb
xchg
pop
sbb
xlat
mov
inc
push
xchg
jmp
add
push
sbbb
adcb
add
iret
jne
or
push
mov
dec
and
cmp
aad
fsubs
mov
inc
mov
xchg
mov
out
ss
inc
add
andb
xlat
mov
inc
xchg
jbe
jbe
out
push
and
icebp
pop
xor
dec
xchg
je
cmc
pop
jno
push
add
xor
mov
mov
sarl
iret
mov
or
add
and
dec
or
inc
int
in
sbb
or
dec
xor
jbe
mov
cwtl
ficompl
cs
push
pop
inc
repnz
xor
lret
xor
dec
clc
mov
sub
dec
test
mov
dec
push
cmp
cmpsl
sub
pop
inc
insl
into
cmp
aam
shrb
adc
mov
inc
test
decb
and
or
data16
dec
rep
cltd
lods
in
mulb
lods
cmp
lods
xor
lret
cmpsl
mov
dec
gs
out
adc
lret
cltd
ret
test
stos
add
mov
mov
mov
shl
adc
scas
push
jmp
inc
dec
jne
ja
fcoml
jns
mov
xchg
push
push
mov
pop
shlb
sarl
sub
mov
cmp
mov
sbb
js
mov
sbb
test
mov
xchg
cmp
loop
popf
push
cld
fists
addr16
sbb
call
xor
js
je
je
imul
cmpsb
pop
and
mov
push
mov
sbb
inc
cwtl
aad
fwait
out
sub
xor
sbb
sbb
and
sti
enter
mov
cmpl
enter
sti
jl
cmpsb
mov
mov
fidivrs
outsb
outsl
fistl
sub
outsb
not
and
sub
push
out
std
jo
cmpsl
cmp
cltd
ret
decl
loopne
pusha
lods
bswap
push
enter
roll
jae
mov
pop
cmp
repz
arpl
mov
cmpsb
mov
int
out
mov
jns
hlt
mov
int
rcll
push
dec
aam
dec
xchg
gs
jl,pn
jmp
mov
cmp
clc
mov
fsubs
inc
fsubl
push
gs
dec
loope
out
movsl
out
push
popf
iret
data16
stos
ja
push
adc
outsl
nop
jg
jg
jge
sti
and
mov
and
ja
pushf
mov
mov
mov
xor
xchg
das
dec
shlb
jmp
push
scas
and
sub
mov
fildl
xor
dec
xchg
cmp
cs
xor
pop
and
cmp
icebp
sahf
push
pop
fisubl
cmp
inc
mov
cli
imul
push
scas
xor
jns
push
ja
adc
dec
pop
mov
lcall
adc
or
adc
out
fstp
ss
push
xchg
addl
int
sub
movsl
mov
xor
pop
shll
aaa
inc
add
clc
xor
mov
sub
dec
daa
pop
jp
in
xor
jne
adc
in
pop
addr16
outsb
jns
rclb
xchg
xlat
jmp
mov
or
dec
sbb
sub
mov
sub
mov
xor
inc
shll
jno
pop
xor
sub
lcall
mov
dec
cli
es
mov
push
mov
test
shl
ljmp
pop
mov
add
aas
or
push
mov
int
rcll
jp
outsl
fs
inc
fists
ds
inc
imul
or
jp
int3
inc
sub
daa
cmp
pop
shr
arpl
mov
repz
ret
sbb
inc
pop
mov
jne
fwait
jne
in
mov
sbb
push
add
cltd
addr16
xchg
cmpsb
sub
dec
cmp
notb
jbe
shl
add
push
xchg
and
dec
xor
cli
cmp
rclb
ret
cmp
into
test
divl
pop
negl
sbb
mov
cld
cmp
pop
dec
lea
sbb
or
std
mov
clc
pushf
scas
aad
shl
hlt
lret
xor
js
enter
lret
jmp
inc
scas
xchg
cs
pop
fsub
push
mov
xor
mov
aam
sub
adc
mov
xor
pop
fwait
js
pop
add
cli
push
xchg
lret
xadd
adc
jl
loope
jmp
cmp
iret
fwait
cmp
in
scas
jns
cltd
int3
fdivr
push
push
mov
xchg
push
fdivs
pop
cmp
popa
in
fwait
mov
sbb
jecxz
mov
push
or
outsl
jp
fldt
pop
xchg
mov
div
and
or
sbb
mov
xor
dec
pop
jo
arpl
aad
jno
add
movsl
xchg
repz
sub
out
js
dec
movsb
int3
jge
mov
or
mov
fadds
mov
adc
push
not
push
inc
or
mov
out
cmp
sbb
loope
mov
xchg
or
jp
repnz
ss
call
icebp
in
cmp
ss
faddl
loop
mov
in
mov
fldcw
dec
sub
scas
movsl
test
in
movsl
popa
shll
xor
mov
scas
or
dec
fsubrl
pop
in
arpl
dec
mov
ljmp
clc
sub
pop
push
push
out
rorb
mov
mov
add
nop
jnp
sub
cld
popf
fisttpl
addl
mov
push
xchg
or
adc
lcall
shll
and
in
mov
jmp
leave
imul
aaa
ret
or
xor
mov
xchg
jns
test
mov
jmp
xchg
sbb
mov
sub
xor
js
sbb
mov
adc
mov
in
ret
test
pop
pop
ljmp
adcb
inc
jnp
cld
mulb
lahf
pusha
push
outsb
xor
adc
xchg
in
out
xchg
dec
or
jge
fstp
dec
repnz
mov
mov
aas
xchg
roll
fdivrl
jbe
adc
mov
cmpsl
cwtl
cmp
push
mov
shlb
mov
lea
int3
sbb
add
inc
aam
xchg
mov
xor
std
push
out
adcb
push
add
in
mov
add
inc
ja
or
es
ja
cli
std
in
in
ret
cmpsb
cmp
jle
sar
rcll
jp
pop
rclb
mov
xchg
lea
inc
lods
jno
js
push
nop
push
shlb
mov
fs
pop
jo
cmp
and
andnps
shr
push
in
into
push
aaa
dec
ret
push
fwait
add
inc
rcll
cld
mov
mov
sbb
movsl
movsl
pop
sbb
or
lods
mov
jl
dec
add
fwait
jo
adc
enter
addr16
pop
adcb
gs
cltd
test
sbbl
sahf
jp
mov
pushf
ja
jnp
roll
adc
icebp
jbe
jae
cltd
sub
test
rolb
push
mov
fdivl
into
stos
push
adc
outsb
jb
scas
or
push
xor
ljmp
out
into
rorl
mov
cltd
xorb
out
inc
dec
jg
adc
cmpsb
in
push
pop
bound
xchg
inc
xor
ds
sub
mov
push
push
imul
mov
mull
pop
xchg
pop
mov
sbbb
jl
lea
into
cli
inc
adc
loop
dec
mov
addr16
icebp
lods
sbb
or
in
jno
lock
sti
jmp
ja
fstpl
xchg
add
popf
rcrb
mov
js
imul
ficomps
sbb
decl
pcmpgtb
dec
clc
lcall
sub
jno
adc
xlat
sub
push
rcl
push
popa
cmc
mov
cltd
neg
dec
dec
adc
push
sub
mov
mov
mulb
popa
negl
std
stc
gs
ficoms
aaa
shl
jg
bnd
push
xor
push
hlt
xchg
mov
in
xor
inc
jg
mov
ret
jo
cmp
nop
hlt
sbb
push
clc
push
fstp
pop
add
cltd
ss
addl
loop
lret
aas
stos
add
jns
mov
and
ds
cld
ljmp
sahf
mov
add
hlt
xor
lret
lods
xor
lret
push
test
and
lcall
pop
call
xchg
inc
scas
hlt
push
pushf
dec
inc
ss
mov
cmpsl
cwtl
xchg
lret
xor
cmpsb
bound
jmp
mov
push
sub
pusha
outsb
inc
cmp
aaa
shrl
out
movsb
mov
out
lods
push
loopne
ljmp
xor
das
xor
lret
jae
xor
jp
aaa
es
mov
jp
sbb
add
inc
imul
call
ja
sub
sbb
mov
xor
lock
mov
xor
adc
mov
sub
das
push
neg
fbstp
aas
push
adc
aad
rcrb
data16
sub
loopne
insb
lcall
dec
mov
rclb
in
dec
xor
in
mov
xor
movsb
lret
in
push
into
das
push
xchg
aas
sbb
ret
in
xlat
lahf
nop
lret
mov
test
mov
aaa
mov
je
out
mov
data16
jne
inc
jo
clc
popa
and
mov
ss
mov
daa
mov
ds
mov
mov
xchg
fmul
adc
jns
stos
push
fs
jo
sbb
jp
jp
insb
cmp
mov
dec
jecxz
jbe
stos
test
test
jp
mov
cmp
rorb
xlat
cmpsl
dec
cmc
aam
loop
sub
inc
cmp
stos
lods
mov
inc
sub
mov
push
xchg
inc
adc
das
mov
mov
cmp
loope
nop
call
in
inc
add
push
lcall
les
movl
jge
les
repz
les
mov
fs
sub
dec
popf
ds
and
xlat
jp
hlt
cmp
pop
jp
cmp
pusha
and
movl
jo
stos
cmp
lret
pushf
fdivrl
mov
push
mov
loope
sbb
loopne
frstor
sub
loope
and
adc
jmp
sti
xchg
adcl
jnp
popf
aam
jl
dec
sbb
mov
loopne
or
es
jmp
into
inc
daa
mov
mov
and
cmp
lcall
pusha
fstl
testb
xor
push
fmuls
cmp
inc
popa
ds
stos
mov
int3
jp
aad
pop
rclb
pusha
xor
cmp
int3
ret
or
dec
sub
cltd
aam
sub
stos
sub
adc
stos
lfs
pusha
popa
scas
and
pop
mov
dec
xchg
push
cld
lods
cmc
call
and
cmove
lods
rcl
sub
mov
imulb
mov
mov
lea
cwtl
pop
fmull
mov
fisttpl
insb
outsb
testb
xor
fs
test
fdiv
dec
mull
or
aaa
mov
sbb
dec
popa
aam
fmul
lds
lock
add
int
in
inc
cmp
xor
mov
pop
orb
mov
divb
ret
pop
cs
mov
mov
mov
ret
test
sti
gs
inc
movsl
or
and
add
and
and
pop
shld
xor
rcll
lods
push
out
dec
mov
or
imul
faddl
push
lock
ror
lock
int3
in
fs
insb
aam
in
xchg
jnp
jmp
ret
jno
fdivrl
int
cs
xlat
mov
int
leave
push
popa
fldt
jno
mov
notb
sarl
add
pop
xchg
dec
or
sarb
gs
jmp
lahf
inc
or
adc
imul
inc
andb
cmpsb
std
xlat
pop
sub
adc
add
jg
push
ss
iret
js
add
push
mov
movsb
gs
add
stos
call
mov
adc
xchg
adc
out
cs
lahf
dec
mov
add
and
push
inc
pop
ja
inc
lds
mov
sarl
mov
sbb
clc
mov
xor
push
xchg
or
push
mov
aam
pop
mov
out
xchg
pusha
mov
cmp
cli
mov
mov
adc
xchg
out
xchg
cmp
popf
pop
enter
mov
bound
or
pop
jne
ljmp
dec
movsl
js
pop
lret
xchg
je
mov
mov
into
or
fisubrs
fs
pop
mov
test
daa
scas
inc
cmp
xchg
or
notl
sarb
sbb
jns
pop
push
mov
cmp
jmp
or
fwait
das
sub
aas
pop
xchg
jno
push
mov
mov
not
jo
fcomps
loop
xor
outsl
inc
adc
outsl
adc
daa
mov
add
adc
sbb
mov
vpacksswb
sti
cmp
aad
xchg
sbb
push
les
add
loopne
pop
fildl
jno
pop
and
movsb
ret
and
mov
inc
cmpsb
mov
aaa
or
mov
sbb
sub
push
ss
inc
inc
inc
inc
rol
sub
and
mov
push
xchg
jnp
mov
sbb
mov
aad
mov
lds
insl
mov
adc
mov
shll
xchg
xchg
push
cmpsl
dec
sbb
pop
adc
or
cs
xorb
push
inc
andl
popf
sub
jle
repnz
imul
mov
call
cltd
adc
out
outsb
jne
movsl
xchg
or
jnp
dec
lock
adcl
dec
push
int
addl
mov
push
cwtl
mov
rcll
pop
scas
stos
test
in
jne
sub
add
adc
jge
push
pop
mov
mov
sub
sbbb
repz
clc
test
scas
mov
xchg
xor
adc
dec
loope
stos
and
mov
push
lret
mov
lods
es
jbe
enter
leave
cmpsb
sti
cmpsb
dec
out
xorb
in
sbb
adc
dec
cmc
add
loopne
in
in
subl
jp
mov
jno
cli
jno
xor
xlat
lea
loop
jp
dec
pushl
xor
shl
ret
imul
mov
or
dec
push
mov
sahf
xchg
cmp
inc
jmp
sbb
daa
push
or
add
add
pop
cltd
or
sti
xor
add
cmovge
jmp
xchg
pop
popa
cmp
cs
shll
lahf
mov
fisubrs
fidivl
rorb
imul
cmp
loopne
jnp
inc
pop
xchg
popf
aaa
xchg
mov
push
jmp
jl
or
stc
pop
jle
fs
xor
fstpt
lods
js
mov
mov
adc
fwait
jae
jb
push
mov
xor
xor
mov
mov
test
sub
jo
pushf
mov
sbb
in
fistl
sbb
scas
mov
inc
add
push
std
je
rolb
cmp
dec
repnz
pop
sbb
fnstsw
add
in
cmpsl
lret
adc
add
ja
cli
addr16
rcrb
stos
inc
lds
mov
iret
mov
in
add
adc
inc
push
jl
sbb
inc
insl
cmpsl
imul
lret
sbbb
test
in
or
or
and
jg
dec
fdivr
dec
fs
dec
jno
push
mov
idivl
ror
add
repnz
cld
dec
mov
mov
jbe
sbb
mov
cmpsb
dec
xor
jo
lods
cmp
jecxz
mov
dec
pusha
sub
popa
mov
xor
jae
pusha
mov
rcrl
push
push
pusha
adc
push
push
test
movsb
fdivr
movsb
lret
push
lods
arpl
loope
repz
pop
pop
aad
mov
inc
xor
xlat
inc
cmp
mov
add
mov
xor
push
adc
icebp
stos
xchg
mov
cltd
dec
inc
push
clc
nop
push
pop
mov
cmp
call
aad
pushl
and
insb
mov
mov
loopne
jb
cmc
xlat
stos
lahf
stos
mov
pop
push
fs
gs
int3
data16
inc
adc
mov
loop
hlt
pop
das
mov
ja
imul
jns
mov
aad
scas
mov
and
mov
push
pushf
xor
jecxz
dec
jg
push
rcll
fidivl
dec
add
jns
dec
jno
xor
mov
sub
pop
jle
cmp
dec
mov
ret
testb
push
cmp
insl
sbb
insb
pop
cmpsb
mulb
lea
or
lock
stc
jne
pop
push
mov
inc
pop
dec
inc
cwtl
ljmp
cmc
pop
arpl
fnstcw
sub
push
xchg
cs
jle
icebp
cmp
push
mov
paddsw
inc
adc
pop
loop
inc
push
sbb
subl
sahf
mov
xchg
sahf
jno,pn
lods
punpckhwd
outsw
mov
push
fnsave
jge
cmp
mov
pop
arpl
test
push
or
orl
ffree
inc
or
arpl
xchg
mov
mov
push
jge
repz
pop
rcrb
fmull
jle
cwtl
sbb
xchg
scas
insb
xchg
jge
inc
pop
movsl
in
mov
ja
jae
jns
pop
fsubs
push
pushf
sub
xor
aam
mov
jno
push
adc
mov
popa
mov
xchg
sub
call
mov
out
lret
lahf
jo
shr
rorb
lods
test
pop
mov
pop
inc
mov
push
movsl
mov
inc
cmpb
mov
fildll
add
pop
jge
or
push
inc
adc
idivb
or
out
or
or
insb
cwtl
push
iret
add
cmpl
pop
idivl
mov
outsb
addr16
pop
adc
aas
push
mov
test
sbb
jne
push
dec
xchg
ret
cmpsl
ljmp
sub
sbb
xor
jl
pop
mov
xchg
lds
mov
adc
cmp
mov
into
ret
mov
push
cmp
ja
sti
clc
popa
notl
sti
cmc
adc
ljmp
inc
test
xchg
cmp
pop
arpl
aam
lahf
mov
stc
add
xchg
jecxz
push
out
xchg
push
cli
loope
imul
je
pop
push
shrb
fisubrl
jecxz
sbb
hlt
imul
ljmp
ja
int
push
cmp
leave
mov
roll
test
cs
pop
fdivp
in
adc
cmp
out
xor
scas
ret
mov
sbb
xor
mov
arpl
repnz
iret
pop
insl
dec
lret
test
mov
data16
daa
sbbb
and
and
xor
push
rclb
popa
std
leave
cmpsb
jp
std
std
adc
repz
jecxz
out
or
dec
pushf
and
insb
ret
inc
inc
int
sti
insl
insl
aaa
xlat
in
xor
sub
sub
ret
sbb
gs
popf
call
jl
in
ffreep
sub
xchg
dec
aad
in
iret
push
mov
inc
ja
icebp
push
lcall
out
cmpsl
pushl
outsl
call
xor
push
pop
loope
cld
mov
sbbb
sub
push
sbb
mov
lret
dec
dec
sbb
arpl
mov
lds
or
les
pop
std
sub
fidivrl
xchg
pop
sub
stc
adc
int
movsb
cmpsb
push
mov
js
rcrl
xchg
lods
mov
mov
cmp
mov
sahf
jnp
mov
shl
mov
sbb
xorl
adc
adc
xlat
sti
lret
mov
push
mov
rclb
xor
push
lea
loop
pushf
and
sub
jnp
and
xchg
adc
jp
xchg
pushf
jp
call
loopne
outsb
inc
in
mov
and
fsubrl
shll
push
cmc
fidivl
jge
nop
pop
jle
rol
fsubs
sbb
hlt
lods
sub
repz
sub
or
insb
lds
add
mov
js
scas
dec
in
pop
xor
ret
dec
dec
imul
inc
test
adc
ret
pop
js
mov
sbb
das
pusha
fwait
inc
pop
sbb
mov
jle
push
inc
test
call
xlat
mov
xchg
mov
push
push
adc
xlat
aam
in
aas
add
loopne
sbb
outsl
push
push
or
mov
mov
out
cwtl
mov
imul
inc
pusha
jbe
aaa
xchg
xlat
sub
inc
dec
mov
push
jge
iret
insb
jnp
mov
mul
shlb
repnz
in
mov
jnp
mov
and
scas
gs
sbb
sbb
jle
gs
xchg
jl
sahf
idivl
out
int3
rcl
shr
fcoml
sbb
fistps
push
mov
cmp
shlb
xor
xchg
insb
sbb
adc
sub
sub
pop
or
pop
push
lock
or
mov
lds
mov
xor
inc
cmovge
jg
jg
xchg
mov
test
and
leave
flds
movsb
clc
insl
hlt
jp
cli
stos
mov
mov
push
cmpsb
xchg
and
mov
cmp
je
jno
add
aaa
popf
loopne
aaa
orb
xchg
rcrl
cld
xchg
push
leave
sub
inc
not
push
add
in
xor
stc
add
repz
cmp
and
adc
rcrb
or
insl
mov
jge
ds
movsb
insl
inc
push
cmp
push
and
jp
push
jecxz
sub
lds
sarb
mov
bound
jno
mov
jno
xchg
or
outsl
cmp
xor
lret
inc
or
loopne
inc
sbb
call
sub
push
out
xor
mov
fidivrl
sub
jnp
int3
shlb
adc
mov
push
and
xchg
shll
lret
fwait
or
lahf
mov
fstpt
xchg
fcmovnu
xlat
ljmp
jns
fdivl
mov
mov
test
test
sarb
repz
in
test
out
insl
ss
lcall
dec
popf
iret
xlat
mov
ds
dec
data16
dec
mov
fstl
lds
orl
popl
push
and
test
idiv
movsl
in
lock
jp
mov
fwait
add
or
scas
repnz
test
insl
pop
dec
es
cltd
dec
dec
rorl
add
adc
pop
mov
sbb
nop
fsubrl
icebp
popa
mov
ja
mov
arpl
clc
add
out
inc
xor
xchg
cli
mov
dec
pop
clc
mov
mov
lret
cltd
popf
and
jge
mov
and
xlat
mov
mov
add
mov
mov
xor
pop
pushf
mov
mov
cmp
rolb
insb
call
cmp
push
add
popa
int
lods
in
push
mov
inc
xchg
jmp
lret
add
data16
sbb
out
test
daa
xor
in
aam
arpl
aaa
inc
mov
call
cmp
xchg
arpl
fistpl
sarb
or
push
lods
lds
popa
mov
mov
call
mov
fsubrs
cmpsb
jbe
xor
mov
jb
dec
sub
aas
lods
test
add
push
xchg
outsb
xchg
je
sub
push
push
fdiv
in
or
sahf
cmpsl
adc
jo
popf
in
and
xlat
test
mov
call
lock
fnstcw
scas
aad
or
imul
pop
or
or
dec
pop
pop
fs
imul
in
xchg
divl
sub
cwtl
add
pop
scas
cmp
mov
out
sbb
nop
rcl
sub
pop
inc
lahf
and
sub
enter
ja
mov
sub
xchg
or
xchg
lock
adc
adc
sbb
add
xor
andl
add
push
fnstenv
out
nop
rclb
cmp
push
btc
aam
jp
out
test
mov
xor
lods
dec
add
insl
mov
xchg
repnz
pop
xor
inc
into
ja
scas
xlat
loope
jbe
hlt
in
adc
adcl
or
iret
int
cmp
or
inc
sti
dec
mov
adc
cli
flds
jb
sbb
dec
sbb
or
mov
stos
xchg
rcll
ficoml
shl
sbb
sbb
sbb
lods
jno
sub
leave
test
mov
pop
orl
add
fistl
gs
jle
jns
or
lds
daa
inc
pop
jp
xchg
lds
mov
jg
cwtl
out
or
lods
push
dec
jo
inc
mov
pop
insb
jne
pop
gs
jcxz
outsl
add
idivl
mov
aas
and
loopne
ret
test
je,pn
lds
dec
pushf
test
dec
in
pop
add
or
jmp
btc
mov
inc
inc
hlt
sub
add
popa
lods
jbe
xchg
mov
mov
popf
hlt
lret
jmp
lcall
jg
jns
outsl
arpl
jge
dec
aad
inc
into
es
ljmp
sub
cmpsb
sub
mov
jo
fldl
inc
andl
ja
dec
ficoms
xchg
stos
fisubrs
loope
fstl
xor
iret
add
inc
fs
flds
in
adc
shrl
rclb
or
lock
add
adcl
outsl
in
scas
push
repz
add
inc
jge,pn
xchg
fistps
jae
xor
es
pop
out
test
jne
in
es
pop
in
popa
in
mov
rcrb
out
fwait
jnp
pusha
nop
scas
inc
pop
aam
pop
mov
sbbl
sbb
icebp
jge
dec
xchg
dec
sub
lret
fimull
adc
jo
jg
lcall
sub
and
les
sub
into
adc
sahf
mov
dec
es
jnp
cmc
dec
push
sub
dec
or
pop
xchg
cmpsb
aad
adc
pop
fcmovu
mov
cmp
sti
js
ds
gs
or
push
adc
cmp
adc
or
cmp
adc
xor
xchg
mov
or
inc
les
orl
repz
and
dec
inc
fwait
pop
add
cmpsb
and
adc
inc
sbb
sub
mov
stos
leave
push
std
ret
nop
stos
sbb
cmpsl
push
daa
movsb
arpl
add
adc
xor
adc
insb
outsw
mov
jg
in
or
lock
push
lods
and
add
cld
add
je
out
pop
pop
mov
or
fildl
pop
repnz
aam
insb
cmpl
xchg
mov
hlt
or
lret
shrl
inc
xchg
push
jb
sub
push
movsl
fadds
push
andb
jecxz
fs
mov
lret
jns
sbb
cltd
sbb
outsb
cmp
pop
inc
push
leave
and
pushf
mov
ljmp
lock
sub
mov
call
insl
push
lods
pop
test
add
arpl
inc
scas
mov
repnz
xchg
das
imull
mov
repnz
out
cmp
mov
scas
jae
mov
out
pop
ficomps
sbb
cmc
add
xchg
push
push
mov
dec
or
test
lret
addr16
lods
jne
and
cld
lret
jb
cmp
mov
test
ret
mov
pusha
shrl
push
sbb
loopne
sbb
jns
das
mov
mov
ret
mov
lret
pop
xchg
jl
or
out
add
jae
loope
jb
push
and
inc
jg
xchg
daa
sub
xor
addb
pop
imul
and
lret
jae
xchg
add
lods
cmpsl
lds
les
fdivrs
dec
je
add
out
sahf
shlb
scas
test
xchg
xchg
movsb
push
fwait
test
loop
insl
movsb
out
push
inc
push
popa
fidivs
push
xchg
in
imull
xchg
mov
lcall
push
mov
ficoml
mov
outsb
aaa
lock
imul
call
adc
and
add
popf
mov
jne
sub
or
or
or
cmp
mov
pop
pop
lahf
adc
or
movb
pusha
jecxz
inc
negl
inc
sbb
push
xchg
scas
xchg
pop
cmp
xlat
and
movsb
stos
stos
dec
sub
lahf
mov
cmc
xchg
fistl
lahf
push
sbb
inc
loopne
push
cmpsb
in
xlat
dec
fildl
js
cltd
mov
insb
mov
mov
lods
inc
sub
cmp
popa
scas
fsubrl
stos
jle
js
pushf
jge
popf
bound
cmpb
in
insl
or
mov
aas
mov
in
jle
movsl
in
nop
jno
lret
std
cli
or
mov
push
aam
icebp
or
inc
roll
mov
cwtl
sbb
nop
push
aad
repz
test
pop
sarb
jae
pop
bound
mov
pop
lahf
pop
dec
jo
int3
add
loopne
and
and
cmp
push
scas
cltd
jg
pop
cmpsl
scas
divl
lahf
insl
push
jg
pop
sarb
orb
shlb
ret
arpl
inc
jmp
push
or
push
incb
sub
xchg
mov
cmp
fwait
add
mov
bzhi
int
push
sti
ja
dec
in
loopne
mov
sbb
cld
dec
cmp
adc
xchg
pop
outsb
push
jae
sub
xlat
jecxz
aam
adc
jno
addr16
fnstenv
mov
loopne
dec
xlat
inc
add
or
xchg
fnstsw
fadd
clc
xchg
mov
loopne
mov
fs
add
in
adc
shlb
xchg
repnz
push
or
test
mov
setnp
icebp
xchg
inc
inc
mov
xchg
mov
repz
fdivl
std
or
dec
std
xor
mov
mov
xchg
push
pop
jns
hlt
mov
out
mov
mov
or
ret
daa
push
mov
cmp
sti
xchg
xor
pop
dec
jb
lods
push
sbb
movsl
aaa
jbe
sbbl
mov
and
outsl
inc
test
stc
xchg
andb
dec
push
add
std
lahf
shlb
lcallw
mov
imul
adc
lea
pushf
mov
mov
push
cmp
mov
push
inc
add
pusha
cld
jp
pop
inc
jp
dec
mov
mov
cli
dec
test
mov
xchg
mov
pop
scas
jno
mov
mov
mov
frstor
sbb
inc
mov
cmp
jmp
add
int3
lds
cmp
daa
test
or
lret
out
inc
daa
ljmp
scas
cmpsb
cli
hlt
mov
sub
add
mov
ret
rorb
shl
push
cmp
cmpsb
inc
int
push
pop
jns
mov
cmp
xchg
inc
pop
pusha
push
push
jle
jns
jae
dec
add
pop
lock
pop
xor
sub
sbb
sarb
jns
xchg
mov
pop
add
mov
inc
inc
dec
test
push
xchg
cmp
xor
scas
je
inc
mov
repnz
mov
mov
xchg
fucomip
mov
dec
sbb
arpl
pop
sbb
adc
push
xor
int3
andb
inc
pop
call
movsl
ds
jge
mov
rcrl
inc
nop
inc
test
div
pop
xor
imul
cmp
orl
repnz
dec
lods
jg
lcall
enter
out
mov
in
mov
xor
mov
push
addps
fmuls
cmp
leave
cmp
shll
shrl
mov
or
jecxz
adc
or
mov
adc
repz
jne
aam
fnstcw
add
push
jnp
lock
test
adc
sub
out
or
adc
jbe
mov
jge
push
sub
mov
mov
dec
ss
hlt
mov
rorl
fisttps
adc
mov
add
stos
fisubl
bound
lock
and
cmpsl
call
mov
fcom
inc
addr16
pop
shlb
push
sbbb
and
or
arpl
dec
mov
xchg
lahf
out
cmp
gs
jne
orb
shlb
inc
popa
add
sub
inc
out
stos
adc
adc
mov
pushf
inc
sbb
mov
push
scas
arpl
shlb
xchg
in
pop
std
add
sbb
test
push
sub
xchg
push
and
push
ret
push
test
lahf
test
enter
aam
pop
cmpsb
fs
or
mov
mov
pop
leave
dec
xchg
jb
loopne
loope
mov
rorl
arpl
push
or
and
jb
sub
dec
icebp
inc
dec
inc
add
jmp
adc
arpl
mov
lret
test
add
adc
into
jecxz
stos
fldl
loope
outsb
xor
dec
out
addr16
mov
rcl
mov
cs
mov
xor
sub
es
arpl
movsb
push
loope
jbe
ja
xor
sub
shrl
in
sti
repz
mov
xchg
data16
test
sub
test
cmpl
in
dec
mov
je
test
lods
push
and
insb
cld
push
pop
xchg
xor
cs
dec
or
mov
and
scas
mov
sahf
mov
fisttpll
sahf
imull
rep
pop
cmp
cld
push
cmp
lret
cmc
sbb
inc
cmpsl
xchg
push
xchg
cmp
pop
in
pop
push
cmpsl
jnp
inc
scas
orb
out
or
hlt
pop
jmp
mov
clc
js
sbb
jb
mov
popf
iret
into
xchg
fisubs
inc
sbb
leave
pop
icebp
jmp
sub
loopne
pop
loop
jno
and
cld
loope
and
mov
xor
push
pop
mov
iret
orl
lret
pop
pushf
pop
push
dec
mov
sbb
pusha
xor
xchg
mov
jns
rcrl
xchg
xchg
ret
mov
adc
fucom
clc
sti
jnp
xorb
inc
mov
iret
fsubrp
dec
das
or
sbb
and
movl
dec
loope
scas
idivl
lods
pop
adc
jbe
or
lret
ud0
testb
aam
and
pop
cwtl
mov
scas
xchg
into
mov
mov
mov
cmp
cwtl
xor
adc
fld
mov
popa
repz
scas
jg
outsb
mov
pop
cmp
rcrb
fs
mov
add
mov
mov
push
shll
xor
mov
sub
mov
lahf
inc
dec
cmp
adc
jo
inc
outsb
add
jecxz
mov
rclb
loope
addr16
mov
pop
pop
mov
xor
loopne
sahf
add
jo
mov
push
xchg
iret
push
inc
jmp
loope
adc
push
push
pop
test
ss
xchg
mov
addr16
dec
xchg
or
std
push
jbe
ja
pop
ret
jecxz
xchg
adc
mov
inc
stc
and
pop
mov
or
testl
dec
and
imul
sub
jbe
adc
dec
and
jb
xor
mov
mov
es
mov
adc
imul
stos
push
ljmp
out
ret
sub
outsb
sub
mov
xchg
adc
and
mov
add
push
jg
push
cmp
add
jbe
test
out
out
sub
ljmp
gs
adc
fs
out
mov
pop
or
pop
cmp
mov
mov
push
shr
in
aas
fists
mov
jnp
mov
std
imul
inc
push
jg
in
dec
enter
mov
stos
out
clc
add
js
cmp
pop
adc
dec
lods
push
imul
lcall
pop
fs
fistpll
in
mov
adc
lcall
mov
out
mov
mov
add
add
xor
jo
mov
fisubrs
test
push
sahf
int3
jnp
xor
subb
je
cmp
cmc
xchg
movsl
and
jmp
lods
pop
loopne
dec
sub
call
sbb
enter
mov
mov
es
mov
outsb
fwait
stos
mov
lock
movsb
fimuls
lcall
pushf
jg
rolb
shrb
pushf
test
xor
xor
lods
rolb
lret
stos
aad
jg
rcrb
add
sarb
out
jl
sub
shrl
cmpsb
icebp
scas
das
push
and
out
mov
xlat
mov
pop
inc
mov
xor
mov
movsl
jns
add
adc
insl
in
adc
aam
je
dec
icebp
add
cmpsb
out
add
subl
push
std
out
cli
jecxz
dec
mov
movsl
test
add
jns
dec
je
in
jne
mov
pushl
js
mov
inc
mov
and
add
inc
dec
push
pop
mov
movsl
jle
enter
jo,pt
or
inc
jae
lds
rcrb
jae
sbb
outsl
adc
lock
stos
adc
xor
cmpsl
ja
jne
push
xchg
dec
mov
ds
inc
push
mov
push
ds
int3
pop
push
jle
mov
mov
xchg
ja
cli
out
mov
adc
in
dec
cmc
jp
adc
fisubs
add
fisubrl
insb
stos
mov
cs
fldcw
je
testl
pop
mov
xor
sbb
aad
lods
bound
and
add
fbstp
push
sub
jp
xchg
lahf
pusha
inc
jl
inc
shlb
test
loop
fildl
imul
fwait
or
pop
sub
outsb
mov
adc
mov
aam
jno
daa
stc
add
adc
dec
push
sbb
mov
inc
push
inc
dec
or
ss
aas
xor
pop
ret
clc
int
mov
insb
mov
orb
in
mov
dec
aad
and
loope
sbb
ds
jns
dec
inc
mov
inc
mov
lcall
xor
movsl
push
cmp
adc
ret
repnz
popl
push
movsb
cmp
sbb
dec
jl
sub
movsb
cltd
adc
inc
pop
and
inc
xchg
fstpt
sub
test
mov
js
dec
xchg
pop
sbb
out
push
mov
sub
mov
add
xchg
in
aaa
sub
inc
mov
mov
mov
pop
inc
push
push
aam
dec
jge
test
jp
imul
fistpll
out
into
pop
mov
jmp
jbe
xchg
pop
fucomi
mov
daa
ret
jmp
ret
xchg
test
mov
repnz
mov
or
enter
push
xor
incb
nop
scas
gs
arpl
and
push
dec
outsl
sbb
inc
inc
das
insb
jbe
loop
mov
mov
mov
jno
js
push
je
call
mov
add
mov
fsub
sbb
test
sbb
inc
lret
loopne
mov
push
mov
cmp
cmp
or
arpl
or
inc
fmul
loope
mov
cmpsl
pushf
xlat
add
xchg
movsl
fistpll
test
adc
add
das
ret
lock
pop
xchg
sbb
inc
pop
stos
int3
dec
addr16
adc
jnp
insl
loopne
cli
outsb
mov
test
add
pop
push
mov
loope
pop
repnz
orps
dec
testl
sbb
mov
out
inc
loop
sub
sbb
inc
int3
into
jge
hlt
arpl
outsl
ds
jbe
insl
test
jns
sub
dec
fbstp
push
and
shll
push
in
fstpt
xor
dec
cmpsl
outsb
pop
add
jle
xchg
add
dec
enter
sbb
cmpsl
xchg
mov
insb
jmp
lret
lods
push
addl
scas
mov
xorb
sbbb
jge
push
les
mov
shrl
add
jmp
jb
shrb
sub
jecxz
je
mov
pop
popf
lods
or
adc
out
std
stc
inc
cmp
add
sar
out
dec
pop
into
test
or
and
sub
in
test
idivl
lock
add
loope
iret
dec
xchg
clc
aaa
mov
add
mov
insb
push
imul
sub
loop
jle
mov
sub
push
call
popa
cmp
jle
rorl
test
dec
and
scas
or
jns
push
test
cmp
cmpsb
pop
mov
cmp
daa
aam
fcom
push
cmpsl
sbb
adc
mov
sahf
xchg
and
cltd
lods
lea
mov
cmp
push
fisttps
fwait
pop
scas
push
aas
popa
mov
jp,pn
cmp
xchg
rclb
int3
inc
xchg
pop
out
je
push
es
mov
jb
or
dec
sub
add
mov
sarb
xor
sarb
les
call
inc
js
loop
nop
call
pop
sbb
add
out
pop
test
pop
and
push
pop
jns
repnz
movsl
push
shld
lret
cmp
ret
mov
popa
in
lcall
push
imul
mov
and
xchg
add
inc
cmpsl
test
fistpl
das
daa
inc
pushf
adc
cltd
pop
shll
sbb
push
add
in
mov
cltd
shlb
push
int
lods
es
cmp
inc
mov
cmc
jns
arpl
lods
mov
ret
sti
lods
fldt
cmc
push
inc
daa
ss
fdivs
mov
clc
mov
stos
imul
push
pop
pop
mov
test
fwait
mov
cmp
repz
int
cmp
stos
dec
mov
lret
notl
sbb
cmpsb
and
scas
test
fcmovnu
push
lods
loope
sub
mov
mov
push
xchg
push
pushf
cmp
xchg
addr16
sbb
sbb
dec
hlt
and
ss
test
xor
cli
dec
pop
je
into
ret
pop
dec
insl
insb
aaa
add
subps
xchg
push
rolb
lea
in
iret
mov
adc
push
sub
mov
in
inc
xchg
mov
dec
nop
movsb
or
dec
jbe
inc
xchg
lock
aaa
mov
rclb
fsubrs
test
scas
mov
sbb
sbb
sbb
and
hlt
in
mov
call
sti
mov
xchg
daa
mov
xor
xor
out
pop
or
popa
loop
pusha
shlb
sti
jns
adc
lea
jno
jg
push
mov
push
inc
cltd
enter
lods
mov
jg
jle
xchg
and
cwtl
add
js
inc
cld
push
fcmovnbe
popa
test
sub
or
sahf
insb
jnp
push
aaa
notb
inc
dec
dec
jle
cmp
shll
and
push
pop
notb
imul
mov
mov
scas
push
arpl
mov
mov
movsl
loopne
idiv
jle
loopne
xor
push
gs
push
push
outsl
mov
lret
outsl
add
jl
push
in
sub
loop
pop
push
and
sahf
cmc
push
sbb
clc
inc
idivb
add
push
cmp
inc
bound
inc
and
xor
loope
dec
pop
or
push
sub
inc
sub
mov
gs
jns
xchg
les
jno
cmp
ljmp
sbb
jns
je
xor
pusha
lods
cmp
sub
test
mov
in
push
mov
adc
lcall
stos
jmp
sti
push
ljmp
push
dec
sbb
sub
divl
xor
sbb
jns
frstor
inc
inc
pusha
inc
mov
sbb
movsl
push
or
xchg
je
mov
push
and
into
arpl
push
repz
mov
xor
push
mov
jg
jge
fsin
add
addb
dec
pop
loop
sub
test
inc
add
loop
jle
cmp
cmp
ret
cmp
insb
cmpl
xor
ljmp
imul
jb
insl
test
ljmp
stos
pop
jae
mov
or
lods
adc
jne
xlat
test
add
lock
cmp
sbb
push
stos
movsb
push
push
movsl
push
mov
xchg
divb
in
pushf
sbb
mov
stos
nop
xor
lea
or
jb
rcl
lds
push
push
push
sti
pop
inc
mov
mov
jmp
imul
sti
js
mov
push
pop
bound
stos
rcl
movsl
mov
rorb
dec
test
lret
inc
call
rclb
xchg
mov
xchg
repz
lods
loope
insl
inc
outsb
sbb
mov
cltd
pop
push
popl
and
lret
or
cld
mov
mov
xor
rorl
test
jo
dec
mull
cmp
je
pop
test
mov
idivb
faddl
sbbb
pushf
cltd
push
cmp
popf
adc
ljmp
dec
enter
adc
adc
ljmp
mov
add
data16
lods
sub
xor
imul
xchg
inc
negb
mov
mov
push
lock
xlat
cmpsb
in
mov
out
ds
in
cmp
andb
pop
sbb
mov
fadd
sbb
jb
sbbb
mov
jae
imul
add
cmp
adc
hlt
mov
cmc
pop
movsl
cmp
or
aad
popf
mov
adc
mov
add
jbe
in
pop
in
in
xchg
jb
pushf
or
and
jle
lea
pusha
push
mov
push
dec
add
xchg
test
nopl
push
outsl
add
les
mov
jge
popf
add
lret
push
or
sti
arpl
orl
js
mov
js
inc
mov
stos
xor
jnp
inc
jge
or
mov
mov
lods
and
adc
stc
sub
push
pop
fstps
into
mov
xchg
lahf
js,pn
dec
ja
pop
xor
sub
loop
int3
out
enter
add
and
push
xchg
and
loope
test
mov
pop
aas
mov
xor
add
or
dec
and
jge
aas
lock
incb
mov
add
into
xor
push
xor
pop
shr
xor
mov
fdivl
sbb
testb
mov
fstpl
cmp
cmp
mov
aaa
scas
mov
in
arpl
out
les
gs
add
loopne
out
cmp
in
lahf
cs
adc
jo
insb
xorl
js
cmp
pop
jnp
les
call
fs
sahf
stos
ljmp
test
inc
jo
mov
add
outsb
mov
movsb
stc
push
mov
clc
inc
nop
iret
divb
fucomp
cmpsl
aaa
mov
fs
xchg
mov
bound
ss
sub
sub
daa
pop
and
fadds
dec
mov
inc
sub
sub
cld
adc
mov
jp
stos
push
adc
test
push
aas
fwait
es
push
outsb
sub
jbe
out
rorb
arpl
add
loop
and
lods
dec
call
movsb
test
roll
mov
test
sbb
or
arpl
loope
mov
xchg
cwtl
into
xlat
or
fs
sbb
hlt
xchg
mov
mov
fidivs
test
jp
add
test
syscall
lcall
rcrl
pusha
call
je
jae
or
xor
shl
out
push
xchg
dec
int3
ja
dec
cmp
hlt
mov
es
out
jns
pop
repz
bound
in
jb
jp
sbb
jb
sbbl
mov
and
das
add
mov
pop
xor
clc
cmp
das
xchg
ret
daa
ret
dec
jle
pop
movsb
inc
lock
pop
jle
outsb
ss
cmp
mov
stos
mov
pop
adc
gs
movsl
mov
pop
mov
pop
das
imul
aaa
mov
and
inc
inc
mov
or
jl
jl
outsl
pop
lret
loop
sbb
xchg
popf
nop
pop
sbb
inc
push
popf
daa
inc
sub
xor
mov
jmp
aam
pop
sub
lock
jp
es
add
inc
xchg
stos
inc
xchg
icebp
popf
jb
xchg
fmuls
pop
xchg
lret
sbb
out
loopne
adc
popa
sahf
pushf
lahf
or
cmpsb
push
sub
dec
pop
daa
or
filds
mov
or
jo
rol
test
test
out
jbe
fdivrs
pushf
lods
jne
xlat
fimuls
ja
shl
add
lcall
shl
aaa
dec
shlb
fbld
out
gs
repnz
mov
add
dec
mov
dec
outsl
lods
iret
aaa
push
mov
mov
pop
xchg
int
cltd
enter
mov
push
cltd
push
in
xchg
fsubrl
rcll
imul
clc
insl
jge
sahf
je
xor
adc
shl
cwtl
lods
dec
decb
fsubrp
fcmovnbe
xor
sbb
call
movsl
outsb
mov
add
dec
pop
stos
addr16
sub
daa
sbb
movsl
mov
mov
and
sar
addb
xchg
pop
cmpsb
popa
cmpb
sbb
xor
push
testl
push
mov
push
dec
xchg
shll
and
jns
jl
negb
push
push
mov
mov
dec
mov
outsb
das
and
dec
jle
lods
icebp
xchg
popa
cmp
mov
sub
std
shrl
mov
test
fistps
lret
inc
lock
dec
cmc
jmp
push
aad
xchg
xchg
lods
aas
les
out
push
dec
pop
fldenv
lods
out
jb
or
jl
dec
xchg
aaa
adcl
sti
imul
cmp
loop
outsl
pop
push
hlt
ret
mov
jae
ret
inc
insb
pshufw
flds
xchg
pop
jne
jnp
incb
sti
mov
out
mov
loope
pop
int
sub
mov
insb
sbb
sub
sbbl
xor
sti
lret
and
pop
pop
outsl
xchg
cwtl
and
aad
test
movsb
shll
jns
std
mov
loopne
xchg
pop
loope
mov
popa
andl
inc
mov
xor
xchg
aas
or
jmp
push
pop
pop
icebp
imul
pushf
add
in
je
sub
jb
pop
push
push
sub
fidivrs
or
repz
es
inc
shll
sahf
popf
and
bound
push
je
popf
cmpsl
mov
scas
dec
add
and
xor
movsb
cwtl
packuswb
or
mov
sbb
pop
data16
fdivl
xchg
pop
push
lods
test
mov
fdivrs
sbb
add
push
pop
cmp
mov
fs
pop
mov
lret
sbb
les
or
loop
into
sbb
xchg
xor
ret
xlat
out
and
fdiv
cmp
jmp
pop
and
leave
add
loop
scas
cmc
pop
mov
lods
data16
orb
add
mov
hlt
jns
xchg
in
inc
or
xchg
call
sbb
push
roll
sub
sub
add
test
xchg
cmpl
pop
lret
cmpsl
xlat
jns
push
push
popa
les
int3
mov
mov
xchg
inc
hlt
and
fistpl
inc
into
xor
frstor
push
cs
pop
je
xor
js
push
jp
lret
enter
inc
inc
cltd
and
dec
xchg
push
movb
iret
loope
in
int3
inc
push
fcomps
mov
idivb
iret
mov
xchg
ja
ffreep
mov
and
mov
cmp
pop
push
rcrl
gs
sub
je
jns
scas
xchg
mov
popa
add
or
out
mov
mov
xor
inc
mov
pop
dec
std
jno
dec
cmpsl
sbb
cmp
sub
aad
sahf
mov
and
sub
xchg
mov
imul
adc
inc
pop
xchg
or
add
jns
or
pop
add
xchg
daa
pusha
mov
fs
lahf
adc
rorl
add
stc
lods
push
cmp
fwait
lcall
inc
pop
adc
cld
mov
mov
movsl
call
pusha
loope
ljmp
sbb
in
test
fcom
push
xchg
lds
lock
and
insb
sbb
or
push
mov
int
pop
mov
mov
mov
mov
out
xor
dec
dec
testl
adc
or
jbe
lret
hlt
mov
xchg
add
adc
cmpsl
fistpll
jb
loop
jo
ror
ret
sti
mov
xchg
frstor
pop
mov
xchg
out
adc
or
outsb
inc
push
stos
cltd
mov
jle
lret
mov
mov
mov
pop
push
dec
inc
stc
jbe
or
xlat
cmpsl
lock
in
icebp
lcall
jge
cmp
iret
xchg
addb
dec
jg
sbb
fnclex
push
jbe
mov
dec
mov
mov
das
mov
push
xchg
mov
pop
hlt
dec
test
clc
mov
pusha
push
scas
cmp
xor
shlb
sub
outsl
in
and
sti
xor
bound
mov
mov
push
jnp
fadds
sahf
sbb
lret
xor
push
nop
adc
mov
pop
inc
sub
into
cmp
gs
push
mov
mov
cmpsb
out
rolb
js
insl
dec
imul
push
adc
xchg
mov
add
sahf
push
outsb
push
jno
dec
cmc
xchg
mov
sbb
dec
call
push
insb
enter
pop
mov
fs
out
lret
imul
cmpsb
cmp
sub
imul
mov
outsl
ja
jo
test
jg
movsb
clc
and
rcrb
or
dec
push
mov
mov
mov
pusha
lods
add
js
rorl
xchg
shlb
addr16
jmp
mov
push
adc
push
movq
ss
outsb
out
cmc
mov
icebp
push
mov
xchg
mov
add
int3
pop
adc
adc
fisubl
adc
jno
pop
xorl
adc
lea
jle
aas
js
fistpll
jno
dec
xlat
scas
les
inc
jnp
mov
hlt
jae
push
cmp
inc
mov
lea
xchg
push
mov
repz
je
repnz
cmp
adc
sbb
add
push
pushf
adc
sbb
or
popa
fcomip
and
adc
jnp
jle
mov
push
add
dec
pop
lea
arpl
insl
pop
pop
in
xor
mov
es
insl
sub
xchg
dec
out
pop
xchg
add
hlt
loope
push
push
ror
decb
xchg
cmp
xor
xchg
loope
cmp
dec
pop
test
push
enter
push
stos
pop
fldt
mov
rclb
and
xor
bound
dec
ds
push
xchg
and
shlb
lcall
out
mov
bswap
in
insl
in
dec
je
dec
jmp
subb
xor
jb
jg
xchg
dec
or
push
adc
inc
sahf
shll
test
sub
outsb
cmpsl
stos
lock
mov
mov
into
shlb
mov
shr
push
rcl
xor
sbb
cmp
sbb
andb
sbb
add
xchg
pop
pusha
push
cmpsb
jl
cld
and
or
sub
jns
mov
je
iret
int3
adc
pop
fnsave
jb
les
mov
push
jl
mov
cmp
stc
insb
out
test
imul
inc
sub
mov
xchg
xor
mov
xor
push
sbb
lcall
jno
push
xor
inc
add
cwtl
test
es
aas
lds
mov
aam
std
int3
mov
xchg
data16
jo
add
push
je
cmp
mov
lock
push
cmp
fwait
mov
jmp
add
rol
push
enter
jp
or
daa
lods
rcll
popf
mov
xchg
bound
mov
push
adc
test
int3
or
lret
in
pop
mov
mov
pop
fwait
cmpsb
and
add
cmp
fmul
fcoms
add
inc
testl
loope
test
loopne
mov
mov
aam
jne
push
push
lds
push
mov
xlat
mov
aas
lcall
pop
mov
in
and
xchg
cmpl
jae
hlt
or
call
sbb
fcomps
mov
adc
push
leave
mov
mov
push
nop
jns
cmp
loopne
pop
sahf
push
mov
push
or
inc
push
mov
outsl
mov
dec
pushf
out
mov
ja
push
aad
sbb
call
rorl
sub
popf
outsl
or
movsb
xorb
iret
dec
aad
inc
out
pop
icebp
hlt
or
cmp
cld
repz
mov
outsb
cmpsl
icebp
mov
lods
or
xchg
mov
or
loop
jp
adc
or
sub
sbb
popa
jae
cmp
adc
inc
scas
or
pop
inc
hlt
ljmp
mov
push
stc
ss
arpl
cld
movq
ljmp
inc
push
add
pop
fsubrs
sahf
dec
and
fsts
pop
lret
mov
dec
add
pop
fldcw
stc
inc
adc
jmp
or
es
mov
push
xchg
and
xchg
cmp
mov
in
movsl
cli
shl
fldln2
sbb
sbb
xor
sbb
shll
std
xchg
mov
int3
dec
xchg
ja
jns
bound
or
imul
cli
sbb
inc
and
lods
enter
or
mov
nop
xor
in
pop
add
jp
jnp
ja
xchg
mov
dec
xchg
sbb
popa
mov
ds
jg
xlat
cvttps2pi
addr16
inc
stos
mov
js
out
add
xor
std
jmp
mov
xor
lods
cmpsb
mov
or
fwait
mov
stos
iret
pop
mov
push
and
push
dec
mov
lahf
xchg
icebp
or
fisubl
leave
test
push
xor
movsl
ret
adc
adc
out
loop
lret
jno
daa
cmp
sbb
xlat
loop
mov
xchg
ljmp
popf
test
adc
add
ucomiss
into
ljmp
lods
into
jne
in
cmpsb
sub
popa
sbb
or
mov
add
mov
cmpsb
stos
dec
lcall
ds
pop
ficoml
dec
dec
lods
popf
cli
xchg
pop
dec
cmp
adc
das
pushl
or
dec
std
mov
cmp
add
dec
mov
jl
mov
dec
inc
inc
sub
and
ret
leave
in
out
movsl
jns
sbb
sti
and
sahf
push
inc
lock
scas
out
in
mov
imul
outsl
lds
adc
cmp
mov
push
adc
ljmp
aam
xorb
in
mov
jl
notl
int
or
dec
xchg
or
sbb
pop
push
mov
repz
xor
mov
fdivrl
hlt
hlt
scas
int3
mov
fiadds
inc
ljmp
into
imul
mov
aaa
xlat
mov
pop
mov
cwtl
cmpsb
pop
pushf
cltd
roll
ret
leave
add
fmull
scas
pushf
cld
and
and
sbb
sub
jg
or
stc
xchg
dec
push
xchg
cmpsd
xchg
push
sbb
orl
sub
and
inc
jb
ljmp
dec
in
adc
xchg
sbbl
aam
xchg
bound
push
sbb
xorl
js
fcoms
sub
add
out
dec
cmpsb
jae
lods
mov
lret
pop
xlat
mov
inc
lret
aas
jb
xor
inc
test
mov
lcall
sub
mov
stos
mov
jb
movl
and
lds
fnstcw
sbb
xchg
es
or
mov
mov
notb
arpl
sahf
movsb
mov
into
into
lret
inc
jmp
andb
or
dec
aaa
and
roll
or
and
test
push
daa
mov
adc
lret
push
xchg
loop
push
aad
xchg
cltd
cmpsl
cwtl
mov
notb
loopne
pop
and
xchg
adcb
xchg
cwtl
push
shlb
fs
notb
add
cmpsl
stos
arpl
lahf
jl
dec
cmp
sub
mov
add
es
xor
dec
add
mov
lret
add
fsubs
and
cmp
mov
sahf
loopne
xor
sbb
pop
cmp
and
js
iret
pushf
mov
test
push
test
stos
cmc
jne
xchg
pop
or
insb
add
dec
push
sub
fisubs
mov
test
cmp
pop
fisubl
lock
imul
roll
imul
pop
lcall
inc
xor
ret
or
mov
xor
jno
xchg
sbb
jmp
push
fs
and
stos
add
push
push
mov
add
sar
xor
bnd
movsl
xor
and
jns
lahf
dec
sub
pusha
inc
aaa
pop
into
adc
xchg
loope
lods
pop
push
adc
adc
stc
clc
xor
lods
inc
cmpsl
sbb
add
mov
sbb
adc
xchg
or
orl
loopne
shlb
shrb
arpl
out
cmp
and
aad
in
mov
cli
inc
add
outsl
movsl
mov
cmp
adc
cs
aas
fldcw
mov
adc
adc
xchg
aas
daa
mov
mov
pop
and
jle
addr16
clc
inc
jno
insl
nop
and
push
insl
pop
dec
je
dec
or
mov
mov
pop
or
fstl
xchg
addb
mov
test
fimull
shl
rolb
push
mov
xor
mov
cmpsb
loop
jo
adc
pop
ja
dec
push
pop
adc
inc
mov
test
outsb
cwtl
bound
and
or
push
push
lods
jecxz
adc
jb
in
cmp
jb
jle
test
inc
inc
popl
xor
mov
cltd
aaa
test
mov
adc
pop
jecxz
mov
int3
rcrl
fisubl
pop
jb
in
aaa
rcll
mov
mov
cmpsl
sti
dec
sbb
jo
arpl
push
pusha
xlat
ss
ficoms
adc
mov
inc
xor
and
inc
mov
add
clc
sti
mov
ljmp
jl
sub
les
sbb
ret
sti
imul
es
test
mov
hlt
cld
insb
sbb
fsts
inc
ja
test
icebp
adc
subl
ljmp
std
dec
cld
arpl
icebp
cmc
jp
push
and
sub
push
xor
sub
pop
inc
sub
adc
xchg
xchg
dec
pop
pop
mov
adc
mov
clc
mov
jg
lea
fmull
jmp
xchg
jp
jns
sbb
lock
pusha
mov
sahf
jmp
das
xchg
loop
aam
jg
pop
nop
xchg
jl
xor
and
xor
inc
inc
jbe
int
aaa
jb
mov
inc
cmc
xchg
fildll
test
sar
mov
loopne
sub
mov
js
push
imul
inc
loop
mov
mov
add
insl
xor
sub
pop
push
das
jo
mov
mov
xor
jecxz
sub
enter
rclb
iretw
mov
jle
les
movsl
hlt
movzbl
clc
xor
push
test
fildll
xchg
sub
pop
or
pusha
pop
bound
mov
jp
pop
cmp
cs
les
cmp
in
add
mov
dec
sbb
cld
push
lret
mov
mov
out
inc
pop
lret
cmp
and
cmp
xchg
jno
mov
pop
pushf
andnps
pushf
cmp
push
mov
sbb
jbe
outsb
stos
dec
cmp
movsb
gs
cltd
lea
stos
jbe
sbb
insb
into
lahf
shl
mov
loopne
mov
add
or
inc
int
fsubp
lea
mull
inc
outsl
pop
scas
or
leave
dec
inc
inc
es
into
inc
jle
xor
ds
add
jge
out
ja
sbb
dec
shll
pop
pop
repnz
stos
inc
adcl
inc
cmp
xchg
mov
nop
or
and
inc
test
les
mov
out
mov
add
inc
fs
sbbl
fstpt
outsb
sub
add
add
je
push
into
insb
ja
fwait
stos
shlb
pop
sub
xchg
jb
inc
insb
sub
aas
xchg
jl
sbb
cmpsl
mov
cli
sub
adc
outsb
in
fisubrl
out
xchg
movsl
pop
push
xchg
xchg
je
aad
pop
mov
cmp
sub
sarl
inc
leave
lret
cld
frstpm(287
loopne
push
aam
sti
sbb
fld
aaa
cmp
dec
xchg
sub
movsl
cmp
ret
das
mov
pop
repnz
pusha
jne
mov
inc
aas
pushf
pop
mov
push
repz
push
test
stos
rcl
push
push
ds
adc
nop
pop
xor
xchg
and
lods
divl
push
daa
sarb
stos
mov
xchg
cltd
rcrb
xchg
mov
int
add
movsl
add
fidivs
mov
rcrl
xchg
fists
cmp
push
add
outsb
and
aad
ja
lret
outsl
out
popf
xchg
xor
nop
sbb
shrb
pop
xor
pop
arpl
test
outsb
adcl
testl
repz
jo
rcl
mov
fadds
mov
pop
xchg
jnp
icebp
inc
fldenv
adc
jle
das
jae
pop
fisubrs
fcompl
enter
mov
mov
cmpsl
rolb
nop
fists
arpl
jbe
and
insl
push
js
pop
data16
pop
mov
fdivrs
and
pop
and
cmp
inc
adc
sub
cmp
jp
mov
mov
xor
dec
inc
and
in
popf
int3
add
in
jmp
pop
cmp
cld
xchg
fsubrl
shlb
push
hlt
pop
popf
dec
cli
test
mov
inc
add
arpl
jb
outsb
add
cmp
bound
out
loopne
jmp
lods
cmp
pop
cmpl
setae
xchg
dec
push
repnz
pushf
in
movsl
in
loopne
pop
and
ljmp
jno
in
mov
xchg
je
sbb
ljmp
or
xor
aaa
cmpsb
xchg
ljmp
or
ret
mov
fisttpll
mov
xchg
in
dec
leave
pop
lea
leave
mov
test
jbe
mov
push
push
sbbl
imul
adc
sbb
hlt
mov
xchg
std
loopne
out
xchg
imul
loope
push
mov
push
add
mov
or
dec
xchg
sbb
mov
mov
andl
pushl
push
js
push
mov
in
dec
sub
jg
mov
push
mov
or
cmp
inc
mov
push
arpl
rclb
cmp
xchg
pusha
jb
xchg
inc
out
cmp
push
mov
sub
mov
or
test
and
pushf
gs
lock
sbb
gs
mov
sbb
mov
and
push
jle
xchg
aas
data16
std
xchg
and
cmp
ret
cmp
and
divl
repnz
inc
ret
sub
mov
mov
loopne
mov
xchg
dec
jle
sbb
test
jno
dec
jo
out
add
inc
out
sbb
adc
dec
testl
pop
mov
jl
call
std
inc
dec
addr16
outsb
mov
stos
and
add
pop
mov
mov
jno
aad
lret
sbb
cmc
lret
sbb
or
out
and
pop
mov
xchg
xchg
scas
xor
sbb
nop
ljmp
push
sahf
dec
js
xor
test
and
out
add
pop
notl
repnz
push
in
sub
imul
lahf
push
fsubl
mov
xchg
xorl
xchg
fstps
jmp
in
or
jmp
sbb
add
mov
add
dec
std
cld
inc
out
xor
xor
push
je
outsl
adc
shll
mov
mov
push
pop
fstps
mov
xchg
xor
fisttpl
push
cmp
mov
jg
adc
mov
ds
stos
inc
cmp
jb
xchg
ret
jbe
or
movsb
aaa
andl
sub
xchg
shlb
repnz
mov
insl
int
scas
repnz
sti
int
push
fisubl
call
repz
push
pop
in
dec
stos
pop
fisubs
jle
pop
das
into
fs
lahf
mov
xor
jb
push
sbb
loope
in
jne
or
aad
add
sub
mov
xchg
cmp
add
sbb
sub
lock
icebp
adc
add
hlt
in
dec
adc
loopne
in
adc
movsl
mov
aaa
lods
push
xor
inc
incb
call
push
xchg
xchg
js
ja
je
imul
sahf
data16
sub
pusha
test
sbb
xor
loopne
popa
or
xchg
lea
xor
fcomp
and
or
adc
ffreep
pop
push
fstps
cmp
adc
int3
popf
sti
jnp
int
aad
and
pop
mov
cld
push
dec
inc
repnz
push
sub
adc
std
imul
lahf
push
or
and
into
push
or
hlt
xchg
cs
push
pop
mov
roll
or
repnz
pop
and
lret
imul
sbb
dec
pop
xchg
test
jns
stos
mov
daa
pushf
sbb
cltd
in
arpl
sub
pushf
pop
push
ret
mov
in
lcall
popa
insb
jecxz
mov
dec
inc
add
daa
out
xorb
shlb
and
pop
mov
mov
add
lods
sub
adc
jmp
leave
jg
sbb
ret
add
insb
call
or
addr16
and
nop
or
mov
dec
mov
mov
xchg
fists
jl
dec
pop
dec
or
xor
stc
xor
sbb
adc
sub
adc
cwtl
xchg
stos
sarl
inc
xlat
das
xor
pop
cmp
and
xchg
in
xchg
or
cmp
out
and
push
negb
jl
inc
testb
mov
iret
bound
xchg
add
push
outsl
push
loope
js
bound
in
jnp
sahf
adc
cmp
mov
add
subb
cld
mov
cmpb
insb
xor
cmp
sbb
mov
jne
push
out
adc
and
inc
lea
addr16
lods
or
and
out
push
je
mov
inc
adc
lods
cmp
mov
pop
xorb
dec
cli
pop
sbb
popf
jecxz
dec
mov
jnp
bound
inc
fsubs
push
xchg
sbb
pusha
adc
sbb
ret
roll
adc
in
ss
xlat
xchg
and
jecxz
jle
shll
push
je
sub
add
mov
pop
sahf
or
sub
sbb
push
loope
shl
testl
inc
sub
out
mov
fdivrs
int3
sub
sarl
jbe
inc
lcall
test
ja
cs
cs
out
fisttpl
sub
fwait
cmpsl
mov
nop
xchg
lret
movsb
pop
xor
jge
cmp
imulb
ljmp
xlat
stos
data16
popa
pop
pop
xor
mov
or
sar
inc
pop
data16
jp
sub
adc
test
cmpsl
popa
in
shrb
imull
sub
aam
insb
subl
add
and
roll
sub
int
adc
fs
out
or
leave
add
sbb
jo
cld
leave
test
add
pop
mov
imul
rcll
jecxz
sub
hlt
cmp
das
cli
popf
mov
mov
xchg
dec
inc
xchg
push
jae
leave
loope
pop
sub
call
mov
dec
xor
or
add
jne
xchg
pop
in
movl
shrl
sbb
pop
mov
sub
fwait
mov
lret
loop
mov
shrl
xor
das
lods
or
cmpsl
dec
cmp
cmp
sub
xchg
adc
in
in
push
es
mov
movlps
push
sbb
or
dec
test
mov
bound
push
leave
push
iret
movsb
js
imul
and
push
vpmaxub
mov
addl
in
mov
mov
lods
aas
or
sbb
adc
add
jnp
sub
jg
inc
out
jl
push
push
ret
rolb
and
das
add
push
adc
mov
xchg
jp
nop
and
adc
mov
ljmp
call
dec
or
xchg
or
push
add
sbb
sbb
icebp
jns
fnstcw
data16
test
xorl
push
notb
loop
test
js
cmp
divb
mov
push
icebp
xor
mov
xchg
or
pop
mov
iret
stos
xlat
inc
xchg
mov
mov
enter
insb
int3
mov
or
mov
das
mov
inc
or
or
mov
mov
out
call
insb
push
and
add
xchg
adc
xchg
push
xchg
or
shlb
pushf
lds
add
mov
lock
pop
xchg
sbb
mov
lods
mov
in
cmp
mov
negl
add
sub
mov
pop
xor
icebp
mov
loopne
sbb
jmp
ljmp
aam
rcrl
jo
mov
inc
add
push
cli
pop
sbb
leave
rorl
inc
test
inc
push
fs
xchg
inc
dec
jecxz
imul
xchg
xchg
sbb
push
shll
sbb
mov
jb
imul
or
lock
xor
stc
iret
add
jbe
sahf
xlat
lods
outsl
add
cmp
jl
dec
ret
adc
add
xchg
aad
fwait
sub
cmp
sbb
dec
or
sub
xor
sbb
frstor
enter
push
daa
and
pop
fwait
push
stos
test
dec
loope
shrl
push
loop
pop
push
pop
dec
mov
scas
and
push
mov
push
subl
mov
inc
outsl
push
mov
cltd
sti
mov
or
jge
js
mov
bound
mov
jns
clc
jg
add
testb
mov
mov
repnz
mov
dec
adc
pop
adc
and
pop
mov
roll
cmpsb
xchg
in
jmp
test
push
add
mov
xor
clc
iret
in
cmp
das
and
std
jo
push
pusha
and
push
or
push
cmp
in
mov
insl
dec
xadd
mov
sub
les
fld
push
mov
mov
and
mov
xor
adc
hlt
mov
xchg
sub
jno
push
and
pop
test
mov
push
pop
and
fsubrl
mov
mov
sub
adc
cmpsl
xchg
and
push
inc
cld
and
fcomps
push
mov
dec
sub
mov
ljmp
adc
pushf
jp
popa
imul
insb
mull
and
out
dec
xchg
or
xchg
lods
xor
int3
push
outsb
loopne
fdivr
aad
mov
outsl
mov
jmp
sbb
mov
fisubs
mov
ret
xchg
lret
push
dec
clc
mov
jns
sahf
aad
mov
add
nop
inc
rcrb
mov
cld
pop
test
mov
jge
push
inc
lea
dec
lahf
loop
movsb
lcall
lods
ds
cwtl
inc
subl
fwait
mov
push
or
out
inc
xchg
into
mov
xchg
insb
add
dec
inc
mov
sbb
shlb
outsl
mov
dec
or
cmp
jbe
imul
lea
imul
mov
aaa
add
cmp
ss
lret
pop
cmp
sahf
jecxz
js,pt
orb
push
mov
push
stos
pop
out
sub
dec
rcrl
fstp
add
faddl
pop
arpl
jo
jl
lods
fs
push
dec
shll
jl
jo
sbb
sarb
sbb
mov
adcb
mov
or
push
adc
dec
shll
ja
imul
pop
outsb
add
jle
or
stc
xchg
mov
inc
rclb
dec
repz
mov
addr16
icebp
push
xchg
cs
fmulp
xchg
shlb
or
jl
mov
push
jns
push
ss
lret
loope
idiv
lea
push
dec
xchg
mov
rorl
insl
and
jle
rcr
stc
push
pushf
jg
into
push
movsb
hlt
repz
mov
xor
insb
lds
cld
lea
or
dec
stc
leave
push
xchg
lock
in
jp
insl
outsb
scas
xor
sbb
jle
cmp
push
fwait
mov
xor
jge
dec
jp
xchg
or
push
add
testb
add
fdivl
mov
imul
ror
aas
jnp
pop
test
push
inc
popa
outsb
or
fistps
sbb
and
cmp
pusha
nop
test
fisttps
adc
leave
jb
lods
or
push
add
loop
adc
outsb
rolb
fisttps
daa
call
xchg
mov
pop
xchg
mov
mov
ret
xor
add
insl
mov
pop
mov
push
sti
dec
pop
in
test
sbb
cmp
fists
mov
inc
out
iret
inc
cmpsl
aam
stos
ret
push
cmp
icebp
lods
mov
insl
subl
daa
mov
jae
push
and
fdivrl
shlb
xchg
fcompl
inc
in
sbb
dec
or
pusha
fistl
xchg
sbb
ret
cmpsl
xor
cli
jp
cmpsl
mov
loopne
mov
pusha
push
or
hlt
ljmp
sub
scas
aad
dec
into
shll
jmp
mov
js
call
addr16
jo
sbb
xchg
pop
pop
pusha
in
mov
lret
mov
bound
add
add
lock
fisttpl
adc
inc
jne
jns
shl
mov
ss
add
in
and
jns
dec
and
push
sbb
pop
jne
jb
jge
aas
lea
ficomps
inc
in
pop
xchg
daa
mov
inc
add
sti
jo
fadd
adc
int
insl
popa
jecxz
and
ja
push
shlb
in
mov
cmp
fstp
lea
ds
lcall
pop
daa
out
idivl
rcl
jnp
in
jae
pop
dec
mov
ret
stc
out
add
mov
lcall
int3
shll
xchg
adc
into
sbb
repnz
xor
rcrb
divl
fistpl
jns
xlat
repz
fstps
mov
js
outsl
stc
add
lock
sahf
aaa
mov
mov
sub
inc
sbb
dec
sub
xor
imull
pop
xchg
pushf
insl
fsubr
sub
xlat
negb
mov
sub
xchg
mov
int
add
mov
jnp
mov
adc
adc
dec
xchg
cwtl
lcall
shll
mov
je
in
push
aas
bound
lcall
xchg
bound
adc
lea
cmp
or
xchg
adc
ljmp
jge
clc
sbb
cs
xchg
add
or
pop
cmp
xchg
push
mov
into
fistpl
dec
jp
popf
andb
mov
into
in
ss
jp
pop
adc
jo
push
jmp
pop
bound
push
inc
ficompl
sub
dec
inc
je
cwtl
add
rdmsr
push
xchg
ret
addl
push
dec
pop
imul
pop
and
add
cmc
xor
iret
mov
mov
cli
test
sahf
mov
or
dec
sbb
pusha
mov
adc
jp
sbb
mov
movsb
add
cmp
adcl
xchg
fildll
xchg
or
clc
jb
fcom
jmp
fwait
cmp
add
enter
leave
arpl
mov
fdivs
and
sti
je
pop
bound
sub
cmp
mov
jmp
or
mov
lods
rcll
rorl
movsl
cmp
push
jl
xor
add
bound
add
mov
std
pop
add
jno
jbe
cld
and
mov
adc
dec
outsl
sbb
pop
and
clc
mov
xchg
push
xchg
push
push
mov
mov
mov
mov
xchg
xchg
or
mov
test
inc
gs
testb
gs
mov
movsl
adc
and
rcl
xchg
push
mov
xchg
outsb
repz
dec
inc
mov
push
insl
xlat
outsl
cmp
cmpsb
ret
cmp
dec
push
xchg
mov
mov
dec
inc
pop
inc
sarb
arpl
push
faddp
loop
cmc
mov
jno
negl
sub
jp
add
mov
push
jne
mov
jbe
sub
fbld
int3
push
mov
ret
faddl
nop
loop
pop
xchg
mov
aas
adc
xor
xchg
shll
pop
push
jno
out
mov
jl
adc
fs
pop
push
push
data16
jmp
and
fdivrl
enter
xchg
cmp
push
push
test
cld
fdiv
xor
jnp
jno
dec
add
loope
clc
inc
xor
addr16
pop
xchg
xchg
sub
push
pop
jmp
clc
pop
lcall
cmc
out
outsl
fwait
push
pop
in
dec
icebp
inc
adc
ds
gs
ja
mov
or
push
mov
icebp
mov
mov
jae
ljmp
arpl
loop
bound
je
addr16
aas
lret
test
mov
push
mov
scas
push
and
lea
xor
leave
xor
fisttps
xor
jno
xor
shl
iret
outsb
mov
mov
gs
cmp
jbe
dec
les
in
or
mov
aas
clc
pop
xchg
stos
rolb
insl
push
mov
xchg
add
dec
dec
inc
rorl
faddl
pop
inc
in
xor
sub
popf
ss
dec
pop
std
pusha
fwait
add
sti
movsb
jne
mov
in
or
ljmp
or
imul
cld
mov
push
mov
scas
pop
or
insl
cmp
mov
pop
movsl
hlt
stc
inc
sub
std
lods
jl
mov
xchg
inc
jo
addr16
or
pop
mov
jno
xor
sbb
ja
ja
xor
fbstp
pusha
gs
sbb
pop
sbb
push
mov
cs
stos
pusha
xchg
xor
pop
sahf
gs
push
imul
aad
sbb
pop
rcrb
leave
push
sbb
cmp
imul
fmull
cmp
icebp
cmpsl
pause
and
dec
cmp
out
jmp
and
repz
lods
es
inc
sbb
cmp
cmpsl
add
add
out
fisubs
sbb
push
in
int3
roll
inc
lcall
xchg
and
cmp
sub
push
out
aad
lret
addl
cmp
mov
xor
sbb
xor
push
int
dec
or
xchg
stos
mov
jecxz
cmpsl
andb
inc
dec
out
cmp
outsl
ljmp
scas
lds
lock
mov
fadds
rolb
cmpsb
mov
mov
pop
push
repz
dec
cmp
mov
sub
movsl
aas
lods
test
data16
int3
inc
cmc
push
testl
or
jnp
mov
inc
xlat
inc
and
dec
aas
popa
inc
mov
cld
cwtl
mov
sub
fildl
test
push
cltd
cmpsb
call
adc
daa
push
mov
xchg
test
call
and
mov
adc
pop
sbb
push
inc
sbb
stos
lds
pop
and
loopne
inc
xchg
sbb
push
cmc
mov
gs
sahf
xchg
call
imul
imul
scas
xchg
inc
mov
stc
add
mov
pop
adc
cltd
enter
sub
test
lahf
cmpsl
ss
add
enter
sti
das
jl
push
xor
inc
jo
jp
sbb
gs
addb
je
jmp
scas
leave
inc
ja
add
mov
nop
cltd
and
inc
ljmp
arpl
xorb
jge
add
fwait
push
cmp
sub
add
add
enter
xchg
mull
popa
cmc
rol
test
decl
xor
adc
cmpsb
jb
or
xchg
dec
adc
fdivrp
cmpsl
fdivrs
xchg
mov
insl
sbb
push
jo
add
inc
lahf
mul
in
lods
inc
into
sahf
subb
adc
pop
jno
fiaddl
js
xorl
xlat
xchg
jnp
pop
mov
stos
and
cltd
xor
push
mov
push
sbbb
pop
outsb
fmull
repz
fldl
fcomp
cli
sahf
pop
rorl
or
dec
les
into
mov
mulb
and
and
add
mov
mov
xchg
movsl
int3
sbb
es
mov
scas
xor
adc
stos
xor
mov
mov
or
mov
add
std
sarb
cmp
adc
xchg
inc
mov
lods
test
int3
add
xchg
out
xlat
int3
movb
sbb
icebp
testl
scas
sbb
rclb
cmp
js
xor
cltd
psrlw
aaa
sub
or
std
aaa
or
mov
and
ja
mov
push
inc
cmpsb
ret
lcall
cli
or
lods
push
call
sub
js
mov
in
and
sahf
or
in
mov
pusha
shlb
push
mov
cs
cmc
sub
adcb
stc
unpcklps
inc
mov
jo
test
sti
inc
add
jl
je
aaa
or
loope
push
ficompl
push
xlat
mov
pop
xchg
sbb
test
dec
pop
xor
movsb
mov
pop
xchg
pop
ret
jmp
push
push
add
loopne
fs
popf
add
and
push
addb
pop
inc
orb
enter
out
pop
aam
dec
in
push
mov
cmpsb
lahf
inc
jbe
loopne
sbb
outsl
cmpsl
inc
jle
adc
jno
push
sarb
push
mov
mov
cmp
aam
push
lcall
pop
mov
jnp
cmp
outsb
mov
cvtpi2ps
fwait
sbb
inc
cmp
fs
js
cs
mov
mov
leave
mov
lods
push
fs
push
pop
mov
ds
sub
push
pop
cmpsl
cmpsb
stos
insl
insb
or
inc
outsl
sbb
fsubr
jo
mov
sbbb
fdivs
movsl
pop
clc
mov
xor
pop
mov
jg
jl
sbb
mov
pop
rorl
mov
cli
mov
loopne
jbe
fdivl
xchg
daa
pop
test
xchg
xchg
hlt
sub
fs
mov
sbb
orb
jle
xchg
lods
daa
mov
push
in
xchg
pop
iret
arpl
out
and
cld
and
inc
add
int3
or
and
in
mov
fcoms
dec
mov
push
clc
imul
cltd
test
jge
mov
iret
mov
rol
xor
enter
xlat
pushf
leave
cld
mul
adc
loopne
dec
rorb
hlt
xchg
ficoml
push
repnz
call
pop
fdivl
in
loopne
fwait
int3
popa
mov
sub
in
ret
movsl
shl
xor
mov
test
rcrl
pop
and
push
push
sub
lea
les
mov
add
mov
fs
js
inc
jmp
mov
inc
add
mov
pop
add
mov
mov
cmp
inc
dec
shll
lods
loope
repz
popa
push
xor
cmp
or
daa
jecxz
insb
sbb
lds
pop
or
xchg
pop
ds
mov
int
aaa
std
or
sbb
push
fsubrp
loop
in
push
push
mov
test
call
aam
or
leave
and
xchg
mov
fnstenv
movsl
ret
clc
mov
lcall
test
sub
les
or
add
mov
aad
mov
aas
jp
loop
mov
cmp
pop
add
push
lret
loopne
iret
jo
lahf
add
sbb
jp
dec
jle
pop
sub
add
dec
pop
rorl
repnz
sbb
movsb
jle
movsl
punpckhdq
hlt
jmp
xor
pop
jle
scas
mov
add
nop
jmp
loopne
pop
nop
fs
imul
testl
fcoms
dec
loopne
out
addr16
inc
gs
out
stos
xor
add
mov
xor
cmpsb
mov
fstpt
leave
push
psubusw
lea
mov
shl
clc
mov
jo
dec
mov
inc
pop
pushf
je
xchg
jecxz
cwtl
jmp
xor
test
in
cmp
jb
rclb
ja
mov
push
sub
or
cs
pop
jle
cmpsl
test
repz
lds
sub
icebp
fmuls
daa
xchg
aaa
aam
mov
adc
mov
jbe
imul
mov
insb
ja
mov
dec
pop
mov
sbbl
adc
je
cmpl
add
push
sub
pop
test
push
adc
je
and
iret
in
jne
aam
push
mov
adc
add
in
outsb
pop
popf
into
sub
cmp
lods
mov
xorl
jg
sbb
mov
cli
sbb
insl
notl
adc
imul
jmp
addr16
xchg
clc
push
inc
inc
sbb
test
jns
jp
add
loopne
fucomip
inc
push
mov
mov
add
out
dec
cli
sbb
add
cld
push
hlt
pop
jb
movsb
push
jb
jo
xor
je
repnz
loopne
add
lods
add
mov
cli
jno
add
push
ljmp
mov
daa
out
mov
cmp
jge
stos
arpl
push
fldl
ljmp
imul
mov
jnp
inc
daa
movsb
mov
jle
jmp
mov
jl
jae
fs
test
stos
and
cmpsb
aad
xchg
shl
aas
stos
push
nop
clc
pop
jne
xor
outsb
popf
adc
xchg
push
dec
outsb
pop
or
scas
comiss
cmpsb
mov
add
repnz
cwtl
aam
out
inc
loopne
addr16
sbb
int
rolb
xchg
cs
add
in
add
sbb
jbe
test
jmp
pusha
out
andl
addr16
or
mov
hlt
xor
pop
cmp
sbb
mov
mov
in
insb
shrb
pop
xlat
insl
arpl
jecxz
xchg
cmc
loope
xchg
push
inc
test
push
xchg
pop
loop
out
lcall
jnp
ret
or
add
jnp
cwtl
xlat
push
fstpl
xor
sub
outsl
or
push
sbb
mov
and
push
inc
cmp
ds
fwait
stc
cmp
adc
lds
or
xchg
mov
xchg
imul
test
inc
imul
adcb
out
inc
xchg
push
test
pusha
adc
lods
loopne
or
pop
imull
cmp
in
rcrb
adc
or
test
and
cmpb
adc
mov
xchg
fildll
cltd
jb
gs
xchg
je
out
ror
adc
cmp
pop
mov
leave
leave
cltd
push
fsubrl
sarb
pop
enter
lahf
jge
pop
mov
cli
in
mov
js
cld
sbbb
inc
and
cs
and
insl
enter
loop
xchg
push
adc
mov
mov
in
inc
call
sub
ljmp
xchg
jnp
dec
mov
cmp
push
notb
sub
pop
or
sub
inc
adc
xchg
jae
or
lahf
jae
rorl
arpl
nop
test
mov
fsts
aad
dec
cmpl
jbe
sub
into
iret
gs
xchg
xor
inc
mov
fninit
dec
jmp
jmp
rcrb
mov
push
push
add
push
mov
clc
fildll
mov
push
out
push
mov
jo
lahf
sbb
rclb
aam
ljmp
int
cli
enter
jne
popf
and
push
in
outsl
movsb
xor
sub
dec
je
push
dec
jnp
out
dec
jae
dec
je
std
in
out
pop
xlat
cmp
outsl
jmp
xchg
xchg
xchg
push
outsb
cmp
ret
pop
pop
pop
xor
xchg
sti
adc
and
jle
adc
repz
fcomps
out
sti
lcall
hlt
stos
clc
out
out
aaa
int3
fsubl
test
std
mov
dec
aas
add
xor
movsl
ficoms
les
mov
jg
cmp
xchg
outsb
pop
xchg
pop
dec
lock
shrl
inc
and
cwtl
stc
mov
ss
cld
cmp
mov
lds
add
ficomps
push
jae
mov
jo
push
sub
mov
sbb
outsb
sub
lahf
scas
dec
cs
inc
mov
pop
rcrl
repnz
add
push
int
aaa
mov
jne
stos
or
add
cmpsl
xor
idiv
inc
sub
mov
xchg
setb
pushf
mov
sbb
gs
add
lods
jp
cmpsb
insb
lea
ret
fnsave
clc
push
sbb
add
adc
inc
rorb
xchg
cmp
iret
enter
push
js
jbe
mov
lds
add
fwait
xchg
adc
sbb
scas
lea
outsl
dec
or
lret
mov
int3
inc
movsl
and
jecxz
pop
xor
mov
lds
push
fldl
fadds
push
mov
mov
cmp
pop
dec
sbb
push
nop
jo
cmpsb
cld
jno
out
fcos
pop
gs
adc
mov
dec
nop
ljmp
inc
fcompl
jle
jns
xor
jno
popa
add
and
movsb
push
shrb
mov
dec
fsubr
xchg
lcall
cli
and
push
scas
dec
xchg
insl
mov
js
mov
leave
mov
sub
mov
movsl
shll
test
mov
fstpt
imul
jb
int3
add
fists
xor
xchg
fisttpll
pusha
jo
lret
iret
std
andl
jp
adc
jb
lret
popa
in
jnp
loope
lods
gs
imull
push
mov
inc
push
jo
ljmp
and
icebp
sub
sub
test
mov
daa
mov
movsb
dec
sub
fcomps
aas
xchg
sub
or
or
jne
xor
mov
inc
lock
jb
inc
or
jge
repnz
lret
adc
jno
lods
mov
scas
lods
testb
mov
fs
icebp
jns
leave
and
pusha
xchg
aaa
in
dec
inc
test
dec
jge
repz
inc
push
lds
repz
cmp
xor
dec
pushf
push
sti
ret
data16
or
jbe
hlt
jns
jb
iret
hlt
add
fistpll
jno
iret
or
cmp
jo
xor
pop
js
push
pusha
cmp
pop
or
sbb
shlb
mov
movsl
pop
fisttps
mov
lock
mov
sub
cmp
fcompl
aad
lods
and
sarl
test
pop
mov
push
out
cltd
scas
fnstenv
cmpsb
inc
mov
adc
lahf
in
out
mov
xchg
cwtl
cmpsl
mov
push
jg
and
daa
xchg
sbb
orl
add
rorb
pop
cmp
ja
ljmp
out
sub
and
je
out
data16
outsb
xchg
int
insb
or
lods
test
sub
bound
test
lret
mov
push
jle
sbb
fstpt
cmpsb
cmovl
incl
je
std
xor
out
mov
mov
inc
sbb
cmpsl
adc
mov
mov
or
ret
lcall
adc
or
jg
aad
pushw
repnz
xchg
pop
sbb
push
jmp
shrl
pop
xor
lds
movsl
loopne
clc
lret
xchg
js
aam
inc
test
popf
shl
xchg
mov
in
dec
inc
lds
dec
push
mov
stos
popa
sbb
inc
mov
xchg
insb
or
mov
adc
jo
outsl
push
inc
sub
pop
scas
test
cmpsb
in
pop
push
xor
pop
jne
push
decl
or
inc
xor
add
sbb
in
mov
call
pop
lret
jns
inc
mov
jp
push
lods
enter
std
scas
jb
mov
jnp
mov
mov
push
mov
cld
popf
ret
pushf
shl
sbb
mov
outsb
mov
leave
fcmovbe
icebp
scas
icebp
out
punpckhdq
fimuls
ss
cmpsb
cwtl
xchg
adc
jne
adc
insb
nop
xor
or
adc
in
scas
mov
std
cmp
andl
jo
repz
out
test
loopne
test
xlat
bound
popf
xchg
jecxz
rcll
out
sbb
jp
mull
mov
push
sbb
xchg
push
xlat
sti
lret
fnstcw
sti
pop
fdivrs
dec
scas
mov
add
and
and
jl
or
adc
aas
out
sub
pusha
std
mov
jns
jnp
pop
mov
jns
cli
inc
outsl
loopne
pop
in
cmp
in
push
nop
sub
mov
pop
dec
enter
pop
pusha
dec
imul
mov
or
popf
addr16
les
jns
dec
pop
lret
aam
jle
scas
inc
popf
inc
inc
mov
jne
xorl
push
repnz
out
mov
insb
js
push
pop
mov
repnz
sub
pop
rclb
mov
fcos
dec
push
push
sub
icebp
jne
jle
mov
std
ficomps
adc
mov
je
and
fsubs
add
dec
test
push
cmpsb
mov
and
mov
mov
stos
mov
mov
ret
lods
xor
aaa
test
and
push
ja
loope
sub
push
jp
popa
inc
mov
out
or
imul
hlt
cmp
inc
bound
sbb
fidivl
lcall
sti
bound
test
lods
push
jp
ret
jmp
cmp
orl
pop
stos
hlt
mov
aam
clc
cli
mov
jmp
out
insb
mov
jge
outsl
cmpsl
movsl
lcall
std
jecxz
jmp
pop
gs
adc
jo
stc
jae
ja
inc
int3
ds
imul
adc
add
push
rcll
mov
pcmpeqw
btc
adc
jnp
cmp
lds
xor
mov
in
xor
mov
and
mov
lcall
rcl
mov
test
ss
ljmp
dec
div
lods
lcall
sub
mov
cmc
imul
arpl
test
lret
out
push
xor
jne
lcall
out
cmp
or
fldenv
dec
add
push
test
adc
cmp
dec
mov
ja
xchg
aas
jo
jge
jns
push
or
xor
lock
xchg
mov
sub
repnz
or
xor
lcall
sbb
sbb
dec
dec
jae
int
xchg
dec
adc
repz
cmp
cmpsb
orb
pushf
jbe
jge
sbb
inc
cmp
push
imul
insl
sub
scas
jg
sbb
call
pop
mov
jae
scas
loope
xchg
lcall
mov
iret
push
rorl
test
xchg
fwait
push
aaa
aad
or
mov
icebp
mov
jle
ret
jno
cld
push
push
sub
mov
jge
sbb
shrl
dec
out
xchg
and
jno
repnz
xlat
test
or
dec
outsl
and
sub
in
into
outsb
jl
mov
inc
jp
inc
pop
xchg
dec
mov
mov
les
xor
ja
inc
enter
jno
cli
xchg
mov
cltd
mov
sahf
cmp
adc
mov
scas
mull
mov
insl
cwtl
cmp
push
popa
push
push
push
mov
xorb
push
icebp
push
fs
mov
jecxz
testl
fdivs
xchg
fidivrs
jg
sbb
jmp
jnp
mov
insl
add
vpmulhw
test
leave
mov
jbe
mov
adc
js
push
and
cmp
out
sub
mov
jbe
mov
fcmovbe
push
hlt
mov
mov
jb
out
xor
loopne
sbb
jb
nop
xchg
xchg
add
ja
mov
cwtl
ret
in
int
aam
stc
lret
mov
repz
mov
and
cmpl
mov
ret
popf
and
inc
aas
sahf
cmpb
add
lock
out
mov
push
mov
inc
mov
mov
out
mov
es
addr16
in
mov
aam
sub
mov
aad
mov
cmpsl
adc
mov
xor
in
pop
inc
inc
imul
pop
aam
jno
mov
aaa
push
push
fsubrp
cltd
icebp
dec
mov
add
and
ljmp
xor
in
adc
insb
jnp
cmp
jmp
push
push
sbb
jnp,pt
jb
sar
lods
mov
mov
loope
xor
cmp
iret
and
fdivrl
je
aad
jge
decb
add
in
lock
aam
ret
push
cmp
inc
stos
inc
mov
imul
mov
mov
adc
stos
ss
mov
sub
mov
data16
or
cmp
lods
inc
dec
or
mov
mov
mov
inc
inc
stos
das
jg
ds
mov
call
insl
dec
jp
sub
xchg
ret
in
in
push
inc
ret
mov
push
push
pop
sub
pop
and
lret
xor
lods
sti
daa
lret
fstps
and
in
ljmp
dec
inc
cmp
and
inc
in
cmc
xor
inc
pop
ret
pop
pushf
in
adc
xlat
or
mov
xchg
jle
and
cltd
dec
pop
ret
xchg
push
dec
jp
stos
mov
adcb
inc
icebp
outsb
nop
inc
or
dec
sub
sbb
dec
repnz
jne
js
clc
xchg
imul
fldenv
shll
xor
pop
out
inc
out
popf
dec
push
push
leave
cmp
enter
xchg
xchg
in
out
sub
push
mov
pop
sub
cmp
inc
inc
stc
cmpsb
vrsqrtss
jg
out
rcl
outsb
and
mov
mov
xchg
in
or
xor
adc
lods
sub
aas
inc
int
inc
imul
lods
push
xor
stc
test
mov
das
fbstp
fistpll
cmpsb
es
cwtl
cli
stos
mov
push
cmp
add
mov
xchg
xor
push
jb
push
pop
movsl
stos
mov
push
and
and
cmp
pop
xlat
lods
lahf
ret
pushf
fwait
pop
ret
mov
sahf
repz
push
mov
inc
cwtl
cmp
lahf
inc
dec
sbb
mov
test
data16
jnp
jb
repz
hlt
and
jo
mov
mov
bswap
test
cmp
clc
jle
addr16
shrb
js
dec
ret
fisubrl
das
push
lods
push
mov
and
leave
out
lds
jnp
out
fildll
push
sahf
and
ficoml
and
sbb
add
push
nop
gs
push
or
cmp
or
inc
push
jmp
mov
mov
and
fisttpl
inc
out
cltd
cmp
ja
xchg
js
imul
adc
stc
jo
shl
pop
inc
mov
mov
cmc
add
sbb
in
mov
push
inc
cmpsl
popa
inc
sbb
mov
inc
mov
jl
fimuls
cmp
jne
shl
ljmp
dec
cmpsb
cmp
dec
aad
sbb
jae
adc
lahf
cmp
call
int3
inc
pop
int3
push
inc
sub
out
dec
or
xor
cmp
stc
cmc
mov
sbb
dec
cmp
insb
cmp
sbb
outsl
and
leave
pop
dec
aaa
movl
push
add
stc
leave
mov
out
clc
mov
into
xor
inc
out
pop
jl
int
sub
jb
mov
adc
sarb
inc
ljmp
ds
xchg
xlat
sbb
int3
vmovups
xor
insl
cwtl
mov
jbe
push
sub
or
scas
movsb
jge
mov
pushf
xor
mov
decb
pop
les
scas
push
repz
js
lret
ja
sub
fnstenv
movsl
mov
jb
sub
mov
mov
fsubrl
inc
movsl
leave
xor
insl
xchg
or
into
in
or
lds
sbb
aas
dec
push
jge
pop
in
dec
jg
cwtl
rcl
daa
imul
adc
push
addr16
mov
cmpsl
jmp
scas
push
sub
mov
fisubrs
in
idivb
sbb
sub
fwait
in
mov
lods
inc
mov
cld
mov
xor
or
enter
xor
cli
negl
dec
and
mov
lods
lcall
mov
cmc
inc
add
lods
int3
and
sub
pop
std
adc
dec
xor
scas
and
cwtl
pop
or
push
cli
scas
pop
ret
sbb
ror
mov
pop
push
int
pop
mov
popf
pop
gs
inc
pop
outsb
adc
stos
sbb
ds
mov
sarl
repnz
cmp
xchg
mov
mov
mov
movsl
mov
lret
in
xchg
mov
add
inc
cmp
xor
adc
imul
sbb
das
cld
lret
pop
xor
mov
fmuls
push
xchg
sarb
or
mov
and
iret
sar
les
xlat
xor
xor
push
pusha
add
cmp
mov
pop
cwtl
inc
add
add
inc
scas
sahf
or
ja
mov
adc
leave
adc
int
pop
cltd
fldpi
inc
in
movl
xchg
jl
inc
gs
mov
stos
pop
sbb
lret
out
sub
add
jl
cld
pop
out
mov
sub
mov
jle
cmc
mov
push
mov
xor
sti
cmp
jnp
jg
mov
daa
sub
test
scas
out
out
jo
movsl
mov
repnz
test
leave
push
push
mov
cmpsb
dec
test
mov
xor
pop
sbb
jle
push
xchg
dec
and
push
aas
adcb
bound
mov
imul
cmpsb
or
pop
pop
jle
xlat
pop
xchg
ja
fcomip
stos
dec
or
xor
inc
jle
sub
adc
jle
leave
hlt
test
ret
decl
and
adc
sbb
mov
mov
arpl
dec
push
pop
xchg
and
jge
fwait
xchg
or
outsl
aam
into
mov
in
hlt
pop
loopne
fisubl
inc
frstor
jl
ret
push
push
and
insb
mov
xchg
dec
mov
push
fidivl
aam
add
mov
rol
mov
mov
mov
pop
hlt
mov
pop
fistpl
push
mov
lods
sbb
jl
je
dec
inc
loop
mov
mov
out
xchg
mov
and
and
jmp
push
and
xor
frstor
call
sahf
data16
mov
mov
adc
lret
cmp
andb
lret
roll
rcrb
pop
jo
hlt
xchg
out
dec
insl
addr16
loope
je
inc
lret
lods
adc
cmpl
cs
sub
scas
ret
sti
lret
fmuls
add
scas
scas
mov
xor
sti
jl
je
pop
mov
jb
inc
push
jmp
and
cmpsb
dec
imul
push
push
jb
pop
lods
lock
int
aam
or
cmp
stos
fdivs
mov
aad
xchg
mov
fmull
cld
xchg
push
imul
in
mov
ss
add
out
ljmp
vpcmpgtb
out
pop
mov
mov
xor
mov
jle
mov
loopne
xchg
cmp
in
jecxz
mov
outsl
xor
jge
test
fs
das
movsl
clc
cli
sbb
adc
je
ds
negb
outsl
push
mov
repnz
cmp
int
fs
mov
pop
adc
out
adc
je
in
sahf
mov
push
mov
cmp
cmp
dec
mov
stos
rcl
or
pop
fsubrs
add
dec
xor
adc
adcb
xorb
jp
es
sbb
repz
add
in
adc
pop
into
aaa
mov
test
push
stc
fidivs
mov
push
pop
stc
test
dec
xor
xorb
adc
daa
adc
clc
out
aaa
ret
xor
xor
dec
sub
mov
stos
xlat
dec
dec
test
pusha
adc
movsb
adc
pop
sbb
in
rcr
mov
hlt
push
and
mov
dec
repz
stc
sbb
jbe
dec
lock
jb
cwtl
push
sbb
jns
jge
lock
or
push
inc
stos
paddb
dec
xchg
movsb
jns
cmp
xchg
nop
mov
les
pushf
xor
shr
in
int3
lret
movsb
lods
xor
dec
push
cmpsb
shrb
lea
div
stc
scas
filds
idivb
cmp
mov
xor
repnz
movsb
sahf
adc
subl
push
call
xor
jnp
jno
mov
call
xchg
out
shl
sbb
xor
xor
les
popf
pop
das
mov
pop
dec
leave
lahf
aas
mov
or
aad
shl
fucomip
cld
xchg
pop
fmuls
sbb
add
jecxz
sub
pop
sbb
cmp
gs
adc
fcmove
ffree
out
cmp
inc
mov
and
lret
movsb
aas
test
js
xchg
inc
push
pushl
sub
je
mov
outsl
movb
pushf
nop
sti
pusha
add
inc
dec
leave
xchg
in
sbb
jne
sbb
mov
or
cmp
gs
cmc
mov
xchg
and
and
int
add
das
add
jge
mov
dec
out
xor
push
push
push
in
enter
test
sarl
mov
popf
mov
cmp
aam
es
icebp
dec
sbb
jl
or
aaa
pop
out
aaa
ret
add
js
int3
ljmp
or
outsb
sti
inc
int
sbb
or
adcl
lret
lcall
sahf
mov
out
mov
xchg
or
adc
push
loope
mov
scas
dec
dec
gs
gs
sub
insb
incb
pop
into
cmp
fldz
cmp
outsl
xor
int
shlb
test
loop
repz
ljmp
arpl
and
adc
mov
test
outsb
into
sbb
push
scas
jb
mov
mov
mov
or
mov
sub
idivl
ret
jns
inc
push
lret
push
adc
fsubp
cmpsl
mov
jno
sarl
cmp
push
jnp
or
les
mov
repnz
inc
mov
scas
push
and
jp
clc
cmp
push
push
jecxz
xchg
jg,pt
or
cwtl
cmpsb
push
mov
and
mov
imul
fmul
out
dec
sahf
cwtl
push
fs
std
aas
sbb
ljmp
cmp
je
lea
adc
or
insb
aaa
jge
imul
dec
add
lods
icebp
jle
pop
pusha
jo
adc
fldcw
int
jnp
push
movsl
cmp
ljmp
out
inc
mov
scas
ficoms
mov
jge
das
dec
mov
dec
xor
mov
jnp
loopne
push
sub
jbe
dec
mov
clc
cmpb
aam
inc
js
outsb
xor
arpl
outsb
mov
xor
mov
xlat
int3
dec
cmpsb
fwait
mov
add
jmp
jno
jp
std
mov
jbe
sub
in
mov
ds
stos
fisubl
xchg
fs
dec
notl
push
cmpb
sub
cmc
dec
cmp
aam
inc
pop
test
xchg
xor
stos
cmc
or
out
std
addr16
imul
jp
dec
sarl
inc
icebp
ret
addl
enter
push
aas
xchg
xor
pop
add
popf
aaa
enter
movsb
aaa
mov
arpl
std
shr
add
mov
adc
test
xchg
xor
cld
insb
lds
loope
dec
push
in
jge
call
mov
mov
out
push
mov
das
in
mov
int3
jg
jg
dec
dec
fisttps
pop
cmp
sub
mov
jb
jecxz
push
loop
cmp
ss
das
xor
cwtl
pop
and
xchg
add
xlat
sbb
inc
mov
nop
popf
lods
clc
test
dec
popf
or
shll
fistps
or
and
sub
popf
or
add
mov
rorb
mov
and
inc
mov
aam
inc
add
lds
test
jge
pushf
dec
addr16
lods
insl
mov
leave
sub
clc
cmp
cs
push
fsubrs
out
mov
xor
clc
mov
cltd
or
push
jmp
cmp
scas
push
std
xor
jle
lods
cmc
xchg
repnz
inc
mov
jb
sbb
decl
roll
out
xchg
push
jp
pop
inc
mov
pop
ja
pop
insl
dec
aas
mov
xlat
mov
subl
mov
mov
aas
mov
pop
scas
cmp
add
cmp
xor
push
and
int
sbb
rcrl
xor
dec
cltd
sub
lods
in
add
mov
leave
or
js
pop
cmpsl
lcall
test
daa
out
cs
sub
loope
cmpsl
jne
in
jnp
jns
mov
push
mov
cld
pop
cmp
int3
dec
inc
mov
test
mov
or
xchg
or
rcrl
in
lret
adc
and
cmpsb
lea
jl
sbb
or
in
jno
jno
popa
adc
bound
data16
pusha
movsl
and
das
mov
push
pand
cs
add
js
pop
andb
dec
push
scas
mov
pop
jecxz
sbb
rcl
sub
fucomp
lods
aas
xchg
lret
jle
imul
ds
pop
daa
lahf
cwtl
nop
lods
out
out
adc
cmpsl
adc
mov
fstpl
mov
ret
push
mov
mov
cmp
in
int
pop
xor
sub
fsubp
andb
mov
test
mov
mov
xchg
pop
push
push
leave
xchg
mov
pop
fistpll
sub
mov
pop
jne
test
lods
bound
mov
gs
shrb
sbb
das
aad
sbb
addl
jne,pt
sbb
xchg
repz
test
xor
mov
fwait
cmpsb
dec
jne
pop
adc
addr16
lret
push
sbb
push
jne
mov
lea
inc
in
jle
mov
shlb
mov
pop
aas
lret
int
jmp
pop
cmp
in
cmc
and
mov
lret
mov
inc
or
jmp
jmp
pop
bound
push
adc
cmp
xchg
dec
lret
int
leave
fwait
dec
in
fbld
test
test
xchg
jne
jbe
das
mov
fsubs
push
sahf
xchg
sahf
jae
add
inc
inc
or
js
mov
push
mov
int3
hlt
rorl
loopne
aam
pop
jae
test
lods
cmc
cmp
dec
inc
in
les
outsl
xchg
push
jg
push
cld
in
jp
xor
sbb
lret
mov
sub
cmpsb
xor
std
fnstcw
jae
jecxz
arpl
pop
mov
push
mov
xchg
or
test
clc
fwait
or
cmc
push
mov
xor
mov
pop
xor
push
xor
xor
sub
xor
push
pop
in
sarl
xchg
clc
aam
js
mov
scas
sub
andb
ss
mov
inc
call
add
cmpsl
fiadds
loop
xlat
repz
xchg
lods
adc
xor
sub
jns
call
push
fimull
cs
push
ret
leave
xchg
test
push
out
andl
xchg
in
lret
dec
arpl
pop
stos
icebp
adc
les
or
cmp
dec
iret
or
aad
roll
ja
jnp
or
fnsave
sahf
xor
jae
xor
loopne
sub
add
sbb
and
xchg
popf
divl
lcall
sub
bound
movsb
lods
push
and
cmpsb
mov
sti
lcall
and
add
jno
jb
fsubs
xchg
cltd
cmp
fwait
insl
bound
inc
mov
cmp
leave
xchg
mov
and
lods
test
jo
stc
test
pop
inc
dec
or
movsl
cmp
mov
mov
pop
jbe
out
jne
int3
pop
aam
and
add
int
sub
pop
test
mov
sub
adc
jp
clc
fnstcw
lea
insb
jne
pusha
push
in
mov
mov
inc
pushf
stos
inc
sub
sbb
insl
add
xchg
push
pushf
jmp
shrb
pop
stos
push
and
dec
inc
je
std
mov
out
in
int
ss
add
jecxz
lock
ret
lahf
js
arpl
inc
push
add
adc
pop
cmp
movq
int3
xlat
pop
popf
push
into
fstpt
mov
dec
mov
loope
lock
mov
mov
ja
js
push
into
xchg
fidivrs
mov
stos
push
xchg
pusha
inc
sarb
ldmxcsr
jecxz
imul
into
lock
rcrb
sarb
scas
push
sbb
pop
fwait
push
pop
scas
pop
push
jbe
xor
addr16
pop
jle
cld
inc
ficoml
xchg
in
pop
adc
pop
fprem
cmp
mov
scas
in
test
jge
das
in
and
das
rcl
jp
in
test
bound
pop
cmp
mov
cmp
push
cmp
xor
add
adc
jb
jns
pop
jnp
and
jo
jbe
adc
xchg
mov
xchg
sbb
lea
call
pop
dec
mov
mov
shl
ficompl
push
inc
mov
cmp
in
push
js
insb
jecxz
push
xor
xor
adc
aam
test
out
cltd
jae
mov
inc
idiv
push
jge
push
arpl
ja
or
inc
push
sbb
stc
sbb
jl
pop
scas
das
xor
loop
pop
add
test
push
sub
fs
push
inc
and
mov
aam
or
push
push
test
mov
inc
sub
out
xchg
mov
push
inc
and
push
and
into
dec
fidivrs
push
cld
sbb
mov
pop
cmp
inc
jne
inc
sub
cltd
aaa
hlt
into
and
push
jno
cmp
lock
test
mov
icebp
shlb
jb
test
stc
fs
out
jmp
stos
popl
stos
mov
push
aaa
mov
jecxz
out
fistl
out
mov
xor
adc
push
xlat
loope
inc
pusha
aaa
sub
ljmp
jmp
inc
mov
sbb
jbe
or
mov
arpl
jne
std
lret
sub
scas
mov
mov
adcb
ja
and
xchg
cmp
in
push
out
mov
call
inc
pop
jg
int3
pop
sub
sbb
mov
pushf
or
stc
int
and
and
mov
int
jp
inc
jge
mov
mov
out
pop
imul
mov
pop
cwtl
mov
sbb
jmp
push
and
aas
cmp
jle
int
icebp
inc
sub
jge
sbb
adc
iret
cmpsl
mov
imull
mov
fmull
cmp
or
in
stos
ja
mov
mov
xchg
movsb
outsb
xor
call
scas
std
arpl
lahf
es
shlb
mov
push
mov
mov
mov
lods
push
iret
out
js
jl
push
sti
shll
mov
ljmp
and
pop
stos
inc
outsb
je
push
sub
jne
jg
lods
lods
mov
fmull
inc
cmp
bound
pop
fwait
stc
and
or
hlt
lahf
mov
push
pop
sti
xchg
xchg
xchg
jecxz
ret
dec
ja
dec
pop
pop
loopne
shl
add
gs
fnstcw
push
push
add
fisttps
bound
xchg
sbb
xlat
and
mov
pop
je
xchg
pusha
or
dec
out
jp
push
sub
fistpl
mov
test
hlt
jle
sbb
jnp
xor
cmp
notl
nop
push
insb
push
fbstp
jcxz
ret
imul
cmp
vmwrite
cmp
mov
add
test
rorl
xchg
sub
jnp
pop
cwtl
cmp
sbb
sub
mov
arpl
sub
sub
pop
dec
mov
in
xchg
cmp
ss
fisubrs
enter
out
fnstsw
addb
lahf
xor
cmp
loopne
inc
imul
iret
outsb
mov
sahf
fdivs
ret
ja
test
cmp
push
push
movsb
pop
in
enter
das
ss
xchg
xor
xor
inc
jbe
sub
js
test
inc
sbbb
sub
dec
xlat
imul
lahf
das
fsub
loope
aam
iret
clc
dec
gs
popf
cld
clc
jge
mov
push
inc
adc
movsl
mov
mov
cmp
cmp
adc
xor
pop
ds
cwtl
sub
js
aaa
push
cli
repnz
insb
cmp
test
sbb
pop
test
jecxz
in
fbstp
jnp
add
mov
sub
push
dec
mov
fimull
js
out
jb
jg
loope
jmp
push
jb
mov
pop
jo
push
cwtl
adc
mov
jbe
andb
scas
or
add
sbb
adc
cs
mov
inc
std
ret
jb
lock
test
loopne
adc
add
push
scas
jb
inc
test
je
add
dec
push
adc
leave
sbb
inc
pop
mov
loop
and
je
jl
or
inc
int
add
fimuls
jp
sbb
je
cwtl
dec
xchg
pop
adc
xor
mov
push
rclb
jb
and
xchg
jmp
adc
cvtdq2ps
scas
cmp
dec
in
or
shrl
mov
imul
mov
mov
mov
leave
jmp
je
or
mov
testl
icebp
ljmp
adc
or
inc
in
in
repz
jno
leave
cmp
in
xor
xchg
pop
cltd
daa
outsl
xor
or
pop
cmpsb
aam
dec
arpl
lods
mov
loope
pop
std
fsubs
out
or
sbb
or
pop
cmp
jns
mov
sub
ror
jnp
dec
dec
jne
xchg
mov
mov
push
and
cmp
loopne
mov
xor
call
xchg
in
jp
aad
loopne
cs
or
add
dec
addr16
leave
or
mov
outsl
push
fistl
adc
ja
xchg
xor
bound
int
sub
jo
mov
ss
movq
adc
mov
mov
clc
popa
dec
add
fisubrs
cmpsb
aam
push
mov
lods
in
or
or
push
add
jnp
inc
cmp
sbb
fmulp
pop
pop
push
cmp
jno
loopne
cmp
jnp
das
and
mov
dec
xlat
rolb
pop
loopne
sub
sarl
test
mov
and
rcrb
dec
movsb
mov
sub
mov
pushf
adc
adc
add
mov
in
call
xchg
cmp
jno
pop
dec
inc
pop
stos
loopne
sbb
mov
fimuls
sbb
pop
jnp
sarl
mov
jns
packsswb
in
out
sbb
jl
lods
aam
fcomps
in
negl
xchg
into
out
cmpps
das
aaa
fstpt
into
dec
xchg
cltd
ds
ret
mov
subb
mov
ljmp
mov
addr16
out
push
test
loopne
icebp
mov
scas
or
push
jl
xchg
push
test
out
dec
pushf
das
xorl
xchg
ror
or
pop
dec
adc
ret
jae
mov
aaa
aas
mov
cs
fistps
outsb
insb
push
enter
in
ret
outsl
insb
ffreep
fldcw
mov
cld
jmp
mov
iret
js
sbb
push
cmp
mov
ja
adc
loop
scas
into
and
inc
mov
adc
scas
adc
lahf
lea
int
lahf
sti
sbb
jno
push
sbb
int3
shll
or
inc
or
and
inc
add
lods
mov
push
fnstenv
push
ret
adc
pop
jecxz
jb
shr
inc
xchg
sahf
int
dec
mov
push
sub
mov
loopne
jo
cli
dec
int3
pushf
pusha
insb
push
mov
shrb
push
jle
rorb
adc
jp
rol
lds
lods
inc
icebp
pop
fbld
daa
leave
jle
ret
mov
int
sahf
sti
mov
ss
mov
fbstp
subb
rorb
pop
fcoms
xor
test
jns
mov
js
pop
or
stc
hlt
sbb
cmpsl
adc
push
scas
mov
mov
mov
fmulp
sbb
jb
push
xchg
es
jnp
or
xor
dec
xchg
mov
sbb
mov
add
dec
pop
addr16
test
outsl
daa
xchg
cli
mov
das
mov
mov
jl
mov
lds
inc
jno
mov
popf
xlat
addr16
and
ss
mov
call
cmp
shl
mov
pop
shlb
dec
sub
lods
xlat
clc
dec
lock
push
cmp
jb
mov
pop
loop
insl
shl
scas
inc
adc
fildl
rcr
popa
dec
orb
scas
lods
and
sahf
les
and
mov
sub
push
or
sbb
sbb
fisubl
dec
stos
aas
into
mov
inc
andb
add
push
jmp
mov
out
scas
push
std
cwtl
movsl
adcl
in
mov
dec
push
das
clc
push
pop
and
leave
sbb
sub
cld
test
sbb
jns
mov
inc
ficomps
movsl
push
pushf
call
je
shlb
adc
nop
outsl
mov
cmp
fidivrs
pop
mov
jg
imul
sub
or
cmp
clc
pop
cmp
jmp
mov
ds
sti
aad
je
out
bound
xchg
or
mov
push
sbb
xor
bound
dec
jnp
jmp
mov
jno
dec
dec
into
rcrl
mulb
cmp
imulb
int3
push
cmp
ja
push
insb
push
jg
mov
ficoml
orl
pop
sub
cmp
adc
jmp
imul
das
shll
insl
insl
jae
push
mov
cmp
xlat
in
pop
mov
xchg
in
inc
scas
lods
fcomp
add
repz
jnp
leave
jmp
pop
aad
pop
add
idivl
and
pop
popf
loopne
shlb
std
jae
or
in
sti
ss
cld
cmp
cmp
pop
dec
push
mov
adc
das
daa
inc
pop
xor
xorl
xor
das
imulb
and
loop
testb
or
add
fbld
push
xchg
inc
aaa
xor
mov
mov
fadds
sub
ret
jnp
xchg
into
cs
jb
sub
jbe
enter
ret
inc
test
repnz
lea
ret
aas
jno
fbstp
or
mov
cmp
jp
add
cmp
adc
clc
mov
add
leave
push
mov
lea
inc
arpl
mov
xor
in
cs
jg
out
fcompl
je
and
stos
adc
cmc
inc
mov
or
sub
mov
add
shlb
and
lret
xchg
mov
mov
int
je
push
cmc
push
xchg
dec
dec
and
ja
movsb
pop
rcll
inc
and
mov
push
mov
cmp
add
dec
inc
cmp
enter
push
in
mov
subl
dec
push
sbb
clc
push
ret
pop
das
das
jl
lcall
inc
or
cs
cmp
lods
pop
popf
js
dec
add
cwtl
in
add
js
in
movsb
pop
xchg
push
xor
add
dec
mov
daa
pop
loopne
out
loope
xor
cltd
cmp
ret
stos
jge
incb
ficompl
push
or
or
mov
mov
leave
stos
cs
in
shll
pop
jle
mov
inc
sub
add
mov
xchg
rcrb
shl
xor
fnsave
and
dec
jge
pushf
je
or
mov
leave
and
jge
fldl2e
pop
push
xchg
ret
das
sub
push
shrb
rcr
test
mov
out
aas
and
movsl
popa
xchg
cli
std
inc
test
stos
pop
in
lret
fs
xor
mov
sub
bound
jle
xchg
lods
pop
jge
aad
mov
pusha
outsl
or
mov
adc
sbb
and
adc
daa
mov
sub
icebp
leave
cmp
test
add
jge
loope
test
sbb
outsl
jecxz
xchg
jb
xlat
sbb
cmpsb
ja
imul
and
outsb
add
bound
out
xchg
push
cmp
dec
xchg
movl
push
ss
mulb
adc
arpl
jl
jg,pt
subl
iret
inc
xchg
insb
ljmp
cmpsl
mov
push
fstl
test
cli
add
jecxz
fimull
aad
push
fsubrs
xor
jp
inc
sub
xor
mov
shll
cmp
mov
repz
or
in
mov
add
stos
fwait
mov
addr16
sbb
mov
stc
icebp
scas
mov
loop
inc
je
cmp
out
mov
outsb
mov
outsb
mov
push
ss
icebp
pop
or
stos
mov
xor
push
push
testl
xor
push
movsb
push
add
imul
push
jg
in
clc
and
mov
sub
and
and
pop
cld
popl
jle
cld
mov
clc
jg
mov
adc
adc
mov
mov
fnstenv
ficoml
pop
mov
mov
lods
leave
mov
bnd
mov
mov
add
je
aad
sub
inc
and
inc
test
lcall
xchg
rcl
push
dec
insb
inc
cmp
insb
loop
xchg
outsl
cwtl
iret
pop
inc
inc
cmpsl
addb
pop
adc
jecxz
loopne
dec
dec
ja
pop
adc
ja
cmp
xchg
aas
jae
mov
leave
loopne
aaa
inc
cmp
repz
insl
lahf
lds
pop
rcrb
jg
mov
ror
das
mov
movsl
movsb
ds
mov
xchg
std
ret
lcall
inc
int3
js
shr
inc
jecxz
push
cwtl
popa
sbb
or
insl
outsl
data16
imul
xor
mov
pop
inc
add
adc
and
movb
mov
imul
cmp
cwtl
out
pop
popf
movsl
gs
jae
jg
shl
arpl
bnd
lcall
sub
mov
icebp
pop
xchg
and
xchg
adc
sbbl
hlt
pushw
xor
fldl
jne
sti
sahf
das
inc
loope
mov
fwait
in
lock
push
sbb
insl
bound
add
pop
jae
ret
js
xor
bound
ss
cmp
clc
cwtl
cmpb
dec
push
jo
sahf
inc
loope
push
lds
div
mov
mov
sbb
pop
pusha
add
clc
movsl
or
mov
and
aad
jo
push
push
test
adc
dec
and
cwtl
cmp
mov
stc
aam
pop
pop
mov
pop
fwait
or
in
lcall
mov
mov
mov
mov
adc
xchg
inc
xchg
ficomps
jns
dec
fcmovbe
movsb
stos
pop
or
inc
cli
inc
fs
out
ljmp
mov
mov
ljmp
sub
jl
xor
lock
jle
dec
fnstsw
jb
int
test
pop
and
mov
jae
fildl
fpatan
inc
adc
into
adc
imul
jmp
sub
loope
imul
pusha
nop
push
xchg
mov
scas
cmp
cmp
test
lock
pop
in
sahf
sahf
push
jp
mov
sub
inc
rcrl
push
shl
xchg
jns
add
pop
push
jno
insb
inc
push
aas
or
mov
jmp
ret
jb
hlt
int3
adc
jp
inc
jb
xor
nop
xchg
or
pushf
jb
or
sysenter
in
dec
rclb
dec
cmc
leave
jl
and
pop
ss
dec
and
dec
movaps
push
test
lret
or
pop
push
mov
mov
inc
sbb
stos
andb
repnz
scas
fmull
push
add
les
mov
mov
cmpsl
cmp
mov
popf
stos
pop
js
jb
mov
subb
aam
sub
and
clc
sub
jle
add
fnsave
ja
mov
mov
xor
loop
fprem
clc
in
fsubp
pop
cmp
push
out
in
push
mov
add
xorl
ljmp
pop
mov
mov
cmc
test
lods
xchg
stos
loopne
xchg
les
leave
push
pushf
sbb
sbb
mov
inc
aaa
in
cmp
sahf
dec
mov
xor
jecxz
lea
xchg
test
pusha
pop
inc
pop
mov
jb
sbb
int3
jo
cmp
ds
or
xchg
push
mov
shlb
ljmpw
popa
popf
lock
mov
movsl
push
push
inc
mov
aam
push
inc
jno
inc
call
lods
xchg
pop
mov
sub
bound
lods
loop
jp
fldt
fsts
imul
loope
inc
mov
adc
jbe
jae
popf
xor
or
int
sub
int3
jno
adc
sahf
gs
mov
add
scas
adc
es
outsb
into
stos
test
pop
or
pop
mov
test
dec
insl
aas
fsubl
push
ss
inc
sub
das
or
popf
outsl
mov
jnp
push
int3
pop
adc
popf
jno
jl
push
xchg
rorl
out
mov
shr
sbb
pushf
or
mov
jmp
cmpsb
xor
adcl
shld
js
pop
popa
xchg
int3
add
insb
mov
sbb
sarb
mov
or
cmovns
scas
ret
xlat
les
or
inc
es
sub
mov
pop
and
movsl
xchg
jns
inc
xchg
dec
mov
lret
scas
jbe
out
mov
or
or
adc
mov
push
lea
push
and
sarl
scas
jg
hlt
iret
jge
add
mov
and
fxch
xor
loop
ja
pop
in
loop
ja
xchg
jae
mov
sub
push
mov
xchg
mov
cmpsb
insl
ret
and
lods
mov
push
arpl
cmp
pop
std
xchg
add
mov
into
pop
rcll
xchg
dec
in
push
cld
mov
rcr
sub
dec
xor
mov
mov
loope
icebp
sub
mov
stos
ficoml
outsb
and
aam
and
call
push
mov
jae
xchg
imul
daa
lret
inc
or
rorb
ja
ljmp
bnd
push
icebp
mov
mulps
cmc
jno
ds
out
pop
sbbb
movsb
add
cmc
ja
ret
lahf
mov
aaa
jne
pop
in
ret
addl
jmp
jmp
xchg
dec
and
fisttps
adc
xlat
data16
ljmp
adcb
sbb
cmp
cld
xchg
ret
lret
mov
fdivl
outsb
add
je
sbb
or
and
dec
or
fdiv
fwait
add
mov
xchg
or
dec
sbb
imul
pop
mulb
xchg
lock
flds
mov
inc
jae
xlat
imul
xor
and
xchg
dec
in
mov
sbb
popf
in
mov
xor
add
pop
push
xchg
lods
daa
in
fimull
sub
adc
mov
inc
xorb
cmp
push
or
sbb
cmp
std
shlb
jb
lods
mov
nop
cmp
lcall
mov
or
lock
stos
mov
les
mov
cli
dec
pop
aas
add
mov
pop
scas
push
xor
sarl
xchg
mov
sarb
pop
subl
shrl
movaps
jbe
add
out
xor
or
sbb
push
insl
lods
sbb
cmp
outsb
pushf
faddp
in
enter
cmp
adc
and
out
je
cmp
shrl
push
pusha
stos
adc
test
aas
push
push
or
xor
test
pop
jecxz
push
xchg
cwtl
dec
ja
movsb
mov
jp
popa
sbb
cli
add
loopne
jg
movsb
hlt
call
pop
xchg
das
xchg
lcall
or
test
addr16
add
and
and
push
pop
and
xor
rcrl
lcall
je
out
adc
xor
pop
sbbl
cwtl
and
pop
fdivrp
and
pop
shll
jnp
sbb
push
inc
test
sbb
ljmp
sbbl
mov
sahf
clts
inc
rcrl
push
jecxz
add
mov
mov
cmpsb
pop
mov
fcomp
pushf
test
hlt
xor
push
sub
vpsubusb
pop
fnstenv
cltd
pop
aam
cmp
and
in
in
jbe
jl
lds
ret
add
cli
push
gs
adc
inc
int
add
into
js
arpl
test
mov
rcrb
ficoml
lods
aas
lret
mov
aas
mov
imul
jno
push
mov
shll
aam
aad
sub
jg
push
mov
adc
in
cltd
mov
lret
lahf
loope
pop
repnz
int3
aad
adc
lock
lahf
adc
into
cwtl
sti
mov
lcall
fidivrl
lea
xchg
xor
lods
and
xchg
add
cmc
jno
cmp
daa
test
popf
cmp
cmovnp
mov
add
pop
pop
imul
mov
lret
dec
inc
sub
cmp
imul
sub
sub
add
jno
or
jnp
nop
mov
pop
cwtl
pop
jo
fldenv
push
stos
lret
stos
in
sahf
cld
pop
icebp
je
cmc
lahf
and
adc
das
das
jb
ret
ret
sti
shrb
fisubl
jae
and
pop
jb
push
rolb
or
sub
fmuls
adc
and
repnz
mov
ljmp
push
icebp
pop
imul
int3
jnp
xchg
and
aas
mov
outsl
int3
sbb
mov
outsb
dec
frstor
aad
add
pop
in
xchg
test
das
imul
hlt
stc
subl
shll
xlat
mov
sbb
jmp
addr16
inc
xlat
xor
and
scas
insl
sbb
lret
or
aaa
fs
data16
sbb
out
sub
fbstp
xor
and
xchg
mov
and
or
mov
or
bound
and
lock
xor
inc
or
popa
xor
outsl
dec
jp
pop
xor
orl
mov
cmp
int3
inc
add
sub
fiadds
dec
push
nop
xor
stos
cmpsb
out
insl
imul
jmp
bound
and
xchg
fsubr
push
or
sub
shlb
cmp
jecxz
xlat
pop
arpl
sar
mov
jb
and
add
sbb
xor
dec
test
lock
mov
xchg
mov
cmp
lock
stos
mov
dec
scas
lret
in
icebp
jg
adc
bound
outsl
stos
sub
pop
inc
arpl
and
nop
jbe
clc
out
fs
adc
test
adc
clc
inc
add
iret
in
adc
cld
xor
iret
xor
shll
inc
ss
fwait
sub
in
aas
out
and
or
mov
cs
push
cmp
adc
imul
xchg
pop
int
jbe
cld
mov
inc
fnstenv
mov
jg
adc
hlt
fstps
lods
sbb
sub
ja
push
test
xchg
lods
jno
push
xor
outsb
cs
push
jb
dec
adc
jae
and
lds
lods
ret
push
out
and
jle
ret
or
pushf
iret
fcmovb
movsb
popa
sbb
cs
mov
add
shrl
sbb
int
jnp
cmp
iret
xor
inc
addl
jb
stos
out
pop
lods
aad
lods
sbb
loop
mov
test
int
mov
lret
aad
shl
push
fcmove
or
outsb
aad
and
mov
cmpsl
rcll
add
mov
mov
cs
xchg
mov
lahf
pop
in
or
and
push
push
and
pop
aad
adc
mov
jg
adc
push
loopne
test
ss
pop
out
int
scas
jo
fiaddl
testl
mov
sahf
aam
stos
cmpxchg
cwtl
outsl
inc
mov
sbb
mov
lock
fstps
pusha
mov
imul
xchg
add
xchg
xchg
std
mov
orl
jle
rclb
jmp
or
xchg
dec
in
mov
movsb
xlat
mov
xchg
out
cmp
sbb
mov
arpl
or
sbb
cltd
pop
or
or
xchg
jae
fwait
out
or
aad
cs
push
jecxz
xorl
je
inc
mov
add
loope
notl
xor
repnz
sub
es
stos
roll
ja
out
mov
loopne
imul
enter
pop
test
fimull
iret
test
xchg
adc
loope
sbb
aam
dec
xor
adc
outsb
cmpsb
dec
mov
and
aaa
repz
push
aam
jmp
in
sbb
aaa
mov
jbe
jbe
decl
mov
jge
adc
or
cmp
lods
test
xchg
mov
loop
pop
out
dec
into
inc
adc
add
in
lock
or
xchg
cmpsl
or
pusha
dec
push
outsb
stc
aas
sub
test
jbe
mov
das
mov
pop
and
mov
jae
dec
ret
mov
enter
in
insb
jge
mov
addr16
and
test
clc
push
sub
add
mov
xchg
xlat
es
int
lcall
inc
inc
sub
xlat
xchg
decl
xchg
scas
add
popa
inc
dec
mov
jb
shlb
xchg
push
push
mov
dec
push
lret
and
scas
test
pushf
dec
xor
aas
scas
push
inc
pop
add
sbb
sar
int3
or
mov
adc
test
pop
adc
lock
fdivp
mov
or
pop
and
lret
push
mov
jecxz
adcb
fstp
es
fcompl
mov
xor
inc
mov
in
int
int
jecxz
mov
add
inc
dec
pop
jb
or
lahf
and
orb
imul
aad
faddl
loop
push
adc
jbe
int
sbb
fistps
cmc
ljmp
jns
outsl
mov
notb
sti
and
sahf
adc
test
shlb
inc
push
lea
les
es
ret
xchg
jmp
mov
xchg
add
add
push
in
std
movsb
xor
iret
lock
mov
in
mov
fucom
icebp
mov
sbb
adc
or
dec
or
push
xchg
imul
rorl
roll
das
pop
out
pop
jp
lret
fistps
popf
lahf
and
adc
aaa
popf
lcall
fistl
jbe
inc
dec
xor
xor
lds
imul
jge
and
out
xlat
std
mov
and
add
sub
jge
xchg
dec
aam
mov
push
mov
into
lock
cwtl
dec
jg
pop
or
jecxz
js
add
push
cwtl
jmp
sub
jg
and
loope
mov
data16
js
sbb
dec
jnp
sarb
mov
dec
sub
stc
movsb
add
rcrb
adc
inc
mov
dec
incl
lods
jno
pop
clc
and
inc
jns
int
adc
jb
lcall
pop
pop
pop
pop
or
aas
mov
dec
and
sub
push
inc
push
addr16
jmp
sbb
push
xor
aaa
cmp
adc
mov
pop
lret
repz
in
popa
xor
mov
adc
test
push
add
sub
das
push
or
daa
inc
mov
fwait
daa
sbb
loopne
stos
rcrl
pusha
mov
sub
xchg
jl
push
or
rclb
imul
loope
adc
pushf
call
fstpt
dec
fisubs
sub
dec
sbb
ja
add
push
inc
faddl
ljmp
std
hlt
inc
loope
add
int
outsl
ds
push
iret
lss
iret
ss
sarl
push
pushf
cli
mov
int3
repz
dec
push
sub
out
repnz
iret
cmp
add
imul
aam
sbb
fwait
outsb
jecxz
test
test
push
mov
loope
xchg
jmp
aam
push
jmp
jnp
cwtl
dec
jo
adcl
scas
mov
xchg
out
lcall
data16
cltd
jno
pop
ds
gs
cmp
push
addr16
push
cltd
push
leave
int3
xchg
sbb
repnz
pop
inc
out
aas
iret
mov
cmc
jb
popa
hlt
xorb
cmpsb
call
int
dec
sbb
out
dec
sbb
ret
stos
sub
cli
repz
adc
repz
test
fwait
mov
inc
inc
jo
outsl
aad
dec
sub
fstp
xorb
pop
mov
scas
ss
ss
clc
add
mov
mov
lret
mov
xor
stos
js
aam
movsl
jae
jae
lea
pop
in
ret
sbbl
pop
std
daa
adc
idivb
mov
sbb
sbb
dec
repnz
lahf
fcoml
pop
in
push
inc
lahf
mov
xor
iret
xchg
add
dec
push
mov
adc
stos
aam
movsl
push
fimull
sub
aam
mov
aas
mov
cltd
mov
jo
mov
inc
mov
push
jns
fcomps
lods
xchg
sub
popa
pop
mov
arpl
or
mov
fs
cltd
sub
daa
jle
adcl
insl
pop
std
mov
lds
xor
pop
cmp
rcrl
push
insl
dec
rolb
aaa
sbb
cmpb
push
clc
shll
das
test
xchg
hlt
mov
inc
mov
int
pop
cmpsb
ret
test
ret
fiaddl
mov
push
loopne
mov
out
adc
dec
bnd
adcb
repnz
mov
scas
xor
or
jmp
leave
pop
neg
stos
test
mov
insl
enterw
jg
sbb
mov
icebp
xchg
jl
push
mov
push
fs
cmpsl
loope
mov
enter
insl
lret
dec
sbb
inc
sub
or
dec
and
sub
adc
mov
add
cli
scas
and
mov
pop
rcrb
fwait
push
ret
lcall
push
jmp
lock
loopne
data16
ss
jecxz
sub
pop
loope
stos
fadds
sub
sub
je
fmuls
rcrb
jno
dec
pop
insb
movsl
mov
jmp
pop
daa
mov
mov
fstpl
pop
pop
mull
out
and
mov
push
popf
mov
sub
pop
imul
loopne
cld
js
and
ret
or
dec
xor
inc
jo
mov
push
jl
stos
je
jmp
out
lods
lods
push
sub
enter
test
rclb
int
mov
bound
ljmp
adc
dec
pop
shrb
pop
push
mov
xchg
popa
sbb
xchg
cmpsb
call
xchg
out
je
pop
fs
stos
pop
inc
sbb
push
sub
sbbl
mov
and
not
lods
xchg
push
jns
push
adc
inc
mov
sahf
add
cmp
dec
fs
adc
lock
jp
fs
rcr
cmp
adc
repz
pop
inc
pop
cmove
stos
xor
xchg
jns
outsb
insl
inc
pop
aaa
adc
jae
fidivl
push
xchg
imul
pushf
popa
movsb
out
nop
adcb
pop
xchg
insb
dec
and
xor
dec
fmuls
mov
xor
jl
sub
sarl
jmp
or
repnz
cld
lret
int3
loopne
mov
int
insb
jae
and
adc
jb
mov
xor
pop
push
adc
ljmp
or
or
and
xchg
stos
pop
and
imul
pop
jno
and
or
or
adc
cs
and
sub
in
push
or
dec
add
cmp
insl
imul
outsb
add
ss
in
xor
xchg
push
insb
aam
pop
mov
push
aaa
mov
mov
xchg
jno
mov
jmp
ret
fsubrp
add
jl
mov
sbb
testl
dec
add
inc
jnp
rcr
movsl
pop
dec
or
cld
sub
fdivr
movsb
mov
or
pop
mov
in
jge
ds
nop
sbb
and
adc
cwtl
push
call
aaa
and
repz
repnz
mov
sbb
inc
cld
push
jnp
xchg
push
jg
push
dec
push
push
dec
addr16
xchg
mov
sti
ret
inc
shll
jnp
xlat
or
pop
fwait
divb
je
pcmpeqd
test
andb
inc
adc
stc
ja
mov
fcomps
xor
cld
push
out
lods
xor
inc
lahf
add
iret
mov
subb
insb
add
es
lods
pop
outsl
sub
xchg
mov
in
inc
or
xor
pushf
dec
inc
push
cmp
insl
test
arpl
jecxz
xchg
mov
cmp
lahf
xchg
into
fwait
aas
rcrb
adc
loope
mov
out
add
insl
fildl
jmp
cmc
pushf
mov
adc
jge
pop
scas
xchg
inc
push
jmp
pop
sbbl
movsl
jp
cmp
dec
jmp
mov
faddl
enter
cmp
push
out
pop
imul
movsl
scas
enter
fldl
jns
add
jns,pn
xchg
mov
sub
jmp
pusha
mov
ss
sahf
sti
adc
pop
push
shrl
scas
lods
dec
das
arpl
rcll
nop
lods
cmp
pop
mov
xor
xchg
dec
push
dec
cmc
mov
imul
mov
sahf
fcomip
mov
pop
in
dec
add
imul
in
pop
and
fcompl
inc
sbb
cmp
cwtl
dec
sbbb
pop
xadd
jbe
jle
mov
add
popa
stc
xchg
fwait
adc
pusha
lcall
ret
in
int3
loope
outsb
dec
lods
in
jecxz
and
pop
pusha
adc
jmp
repnz
jbe
repnz
cmp
cmp
pop
pop
adc
stos
push
lock
push
or
rcrb
dec
xchg
sub
pop
ret
or
mov
fwait
pushf
inc
cmp
insl
cwtl
ret
in
stos
adc
sahf
outsl
fisubl
pop
repnz
dec
movsl
push
mov
pop
mov
add
fdivs
push
push
test
xchg
lock
loop
int
mull
sahf
mov
xor
aad
xchg
or
popf
mov
in
jo
jnp
es
or
outsb
xor
sub
jecxz
pop
fldenv
mov
xor
or
add
pop
push
hlt
push
sub
ja
cmp
mov
dec
in
mov
sahf
add
test
xchg
movsb
pop
insl
sbb
jecxz
js
push
cmp
or
or
push
jo
cmpsb
sub
push
pop
stc
shl
les
iret
cld
pop
scas
in
sub
popa
xchg
fwait
add
fs
lret
jo
dec
mov
push
or
sahf
pop
fdivrs
mov
jae
cmp
pop
and
and
jae
sbb
loopne
adc
push
lret
lret
jns
add
xchg
cmp
sahf
mov
jp
add
xchg
mov
lcall
inc
leave
shll
cli
mov
mov
sbb
or
and
and
sub
xchg
int3
xor
mov
pop
sti
xchg
outsl
sbb
ja
orb
mov
mov
and
testb
aas
ss
mov
lcall
sub
cmp
sub
add
shl
fldt
inc
imul
push
mov
mov
dec
loope
fists
adc
and
cld
scas
push
or
divl
or
xchg
xchg
add
dec
scas
push
adc
iret
pop
adc
pop
jae
ds
xor
faddl
xchg
sbb
add
pop
adc
xor
and
sub
pop
lds
popf
test
lahf
pop
push
mov
adc
jp
jge
insb
data16
cld
pop
xor
stos
hlt
cld
test
mov
jae,pt
mov
popa
dec
push
dec
or
lds
push
mulb
cmp
push
je
ret
clc
cs
mov
shrb
push
call
pop
scas
mov
loopne
aam
bound
sbb
fisttpll
daa
adc
pusha
xchg
imul
fwait
or
ljmp
adc
sub
adcb
ds
cmc
std
roll
nop
jne
add
iret
sub
out
negb
rolb
out
in
pop
jl
arpl
std
xor
xchg
or
inc
mov
mov
push
cs
xchg
add
add
hlt
icebp
xor
sub
mov
outsl
cld
cmp
adc
aaa
adc
jb
in
test
aas
adc
mov
jp
mov
add
cmp
adc
flds
ss
mov
lds
ret
xor
sbb
add
shll
and
xchg
dec
rol
out
je
or
and
sub
xchg
mov
test
mov
out
fcmovnu
push
sbb
into
mov
lret
dec
dec
adc
fldt
scas
adc
xchg
pop
out
add
popw
data16
add
mov
mov
push
mov
push
test
and
aad
into
mov
dec
pushf
dec
pop
out
into
in
test
push
in
insb
subb
mov
cmp
xchg
call
push
xchg
xchg
push
cltd
repz
xchg
push
jbe
fistpll
xchg
and
rolb
push
mov
int3
sbb
in
adc
xchg
mov
xchg
cmp
fwait
loopne
fcomi
cmp
loop
inc
lahf
fldenv
jmp
cmpl
movsl
xor
and
fistps
ja
add
dec
mov
pop
cmp
out
cld
push
sbb
pop
orl
cmc
push
out
mov
bound
loopne
neg
mov
sti
cmc
ja
cmpsl
sub
push
cmp
test
and
insb
mov
and
jb
ja
add
pop
bound
les
hlt
bound
mov
dec
in
or
and
mov
cld
scas
xchg
push
and
dec
in
xchg
push
or
fidivl
cmp
mov
lods
stos
lahf
data16
rcrb
arpl
faddl
jmp
xchg
push
mov
mov
rorl
jl
jb
push
outsb
mov
notl
xchg
mov
mov
mov
jo
mov
cs
aaa
mov
push
and
sub
orl
sub
nop
outsb
cltd
xchg
test
imul
fmull
xchg
add
movsb
insb
mov
cs
push
pop
js
add
leave
sbb
mov
clc
aam
leave
int3
daa
pop
in
push
cmp
add
inc
jae
mov
and
push
jl
stos
inc
rorl
loop
push
cmc
ret
lock
fsubrs
sbb
mov
les
lret
fcmovnbe
cmpsl
cmp
dec
xchg
fildl
add
xor
lret
cmp
push
test
stos
xchg
cli
test
pop
nop
mov
adc
sti
popa
push
xor
xor
push
repz
mov
mov
inc
repnz
inc
aad
idivl
cmp
in
mov
jno
xlat
mov
inc
ret
ret
adc
in
faddl
push
test
push
sbb
adc
loopne
fdivs
mov
jbe
push
mov
dec
repnz
mov
sub
lods
movsb
lea
int3
lret
dec
loopne
scas
sbb
sbb
lret
rcrl
sub
stos
loop
mov
arpl
hlt
add
xor
sub
pop
mov
out
nop
sub
dec
add
add
arpl
mov
notb
pop
aas
add
sahf
icebp
popf
hlt
jp
lock
and
inc
adc
sub
sub
insb
adc
mov
in
mov
xchg
cld
scas
andb
jns
and
push
fnstcw
xchg
into
cltd
push
sbb
enter
adc
sbb
adc
iret
ss
add
dec
mov
int
sub
fsts
mov
leave
push
lds
mov
fistpl
daa
inc
test
push
push
or
pop
jge
or
cltd
jno
xor
into
cmc
addb
mov
push
rdpmc
xor
shrb
cmp
mov
ret
in
pop
cmp
inc
test
push
scas
js
testl
call
mul
ret
imul
cmp
push
push
clc
lahf
cmp
cwtl
cmp
xchg
mov
stos
mov
out
sbb
loop
mov
push
cmp
into
lret
lret
into
std
dec
scas
fstpt
jge
sub
add
subl
test
lret
push
push
outsl
dec
jl
inc
jno
pop
lods
mov
sub
sbb
push
dec
inc
push
scas
popa
dec
jno
xlat
nop
enter
dec
sbb
sbb
dec
mov
rcl
cwtl
mov
push
mov
xchg
push
int3
adc
sahf
add
data16
xchg
xor
adc
mov
pushf
stc
mov
adc
mov
jp
ja
stos
dec
clc
in
and
pop
ljmp
test
popf
mov
into
push
in
xchg
cmc
jle,pt
rorb
movsb
je
or
pusha
cmp
adc
mov
lea
into
sbb
sbb
cmc
sbb
push
adc
mov
popa
fmuls
xor
and
sub
stc
mov
in
insb
sti
pop
mov
mov
hlt
xor
jne
into
cmpsl
mov
scas
jae
jo
ss
sub
repnz
hlt
fdivr
and
loop
ja
cmpsb
into
mov
pusha
imulb
dec
mov
jnp
mov
ret
pop
pop
movl
mov
xor
mov
jge
maxps
lcall
xchg
lods
lcall
mov
daa
cmp
xchg
add
inc
jbe
dec
mov
mov
outsl
sti
add
shr
fidivs
pushf
adc
xlat
cmp
pop
iret
leave
push
shll
push
and
sahf
ficomps
cmp
test
push
push
inc
xor
xchg
sub
jmp
mov
mov
jg
loopne
adc
in
dec
add
sub
mov
pop
int3
cmp
subb
inc
sub
cmpsb
mov
inc
fldt
jbe
dec
data16
jle
sub
sbb
lret
dec
popl
dec
scas
repz
shrb
add
mov
push
push
inc
inc
sbb
fmul
adc
mov
aas
nop
fidivrs
popl
lret
pop
setbe
jnp
ret
ficoml
xchg
divb
rcrb
and
pop
fidivs
shrl
ss
jbe
popf
push
bound
int
mov
cmp
in
fsubrp
mov
mov
stos
data16
and
add
out
addl
int
rorb
xor
sarb
and
sahf
outsl
mov
int3
lcall
das
cmp
ffreep
mov
jnp
cmc
out
xor
jge
pop
dec
jle
mov
pop
scas
insl
dec
lods
xor
dec
sbb
mov
inc
nop
cmp
jo
mov
sti
and
outsb
ficoms
pop
rsm
add
inc
lods
sbbb
insb
ds
xorb
pop
idiv
jmp
xchg
sahf
in
ret
xchg
fadds
paddq
mov
adc
test
jno
sti
inc
shll
jo
lcall
outsb
push
ret
cmc
es
repz
ret
ret
testb
dec
repz
cli
jo
gs
xor
cmpl
sub
xchg
add
mov
popf
mov
jmp
loop
cmc
test
mov
jecxz
xchg
out
mov
xor
fwait
dec
xlat
mov
push
loop
cwtl
and
loop
push
xor
cli
je
mov
in
push
push
fnstsw
stc
roll
push
or
pop
cmp
icebp
rcr
cli
mov
in
insl
mov
mov
cmpsl
add
cld
enter
mov
es
dec
mov
sbb
sti
inc
outsb
mov
pop
dec
js
push
adc
loopne
cmp
xor
subl
lock
inc
cwtl
test
pop
loop
mov
mov
jo
mov
fsubs
xchg
mov
test
mov
or
ljmp
push
loope
inc
xchg
ret
shll
push
and
and
mov
stos
fldcw
pop
test
hlt
test
xor
jo
test
or
into
loope
cmc
jns
push
aas
out
mov
xchg
push
cli
mov
mov
stos
add
pushf
or
xchg
rolb
or
add
cmp
inc
popf
pminsw
arpl
scas
jecxz
sbb
mov
xchg
mov
out
in
in
push
and
imul
mov
adc
ds
xchg
jb
lods
push
cmp
xchg
lods
cmpsl
sbb
cwtl
int
sub
bound
dec
pop
lds
into
or
jg
stos
dec
test
pop
inc
outsl
repz
inc
dec
popa
and
loopne
dec
mov
mov
push
std
add
popa
fisubrl
fwait
sbb
push
fldl
shlb
sub
nop
hlt
and
mov
adc
pushf
adc
sub
xchg
cmpsl
push
ret
lret
mov
js
rclb
js
xlat
cwtl
lods
mov
cmp
es
jne
pop
out
mov
in
sti
jnp
cmp
pop
insb
or
loop
sbb
mov
repnz
mov
mov
nop
in
adc
push
sub
sbb
rcll
dec
sub
shll
jnp
loope
inc
enter
xchg
mov
xchg
cmp
mov
into
dec
add
lods
test
pop
rorl
pop
in
dec
xchg
test
add
sub
mov
popa
mov
stc
subb
movsl
das
cli
call
and
mov
lods
aam
push
ret
and
add
push
adc
fmull
test
je
jp
fisttps
sub
dec
test
xchg
pop
lea
xchg
xchg
jl
xchg
jns
sbb
rcrl
adc
sbb
daa
adcb
loop
adc
xor
xor
jns
cld
inc
aam
cmpsb
add
fcomp
mov
pusha
ljmp
int
jbe
xorb
jmp
cmc
ja
mov
mov
sub
fidivrs
cltd
test
ja
jp
outsb
inc
push
repnz
jmp
jbe
push
sub
cmp
ds
punpckhbw
lock
inc
add
fsubl
arpl
push
ljmp
repz
sbb
cld
dec
scas
mov
xchg
jb
mov
adc
faddl
push
int
data16
xlat
fcomi
push
out
mov
stos
inc
mov
mov
sbb
adc
dec
fcomi
pusha
jmp
cli
pop
or
hlt
hlt
adc
sbb
loopne
repnz
mov
dec
dec
adc
xchg
jnp
xchg
mov
dec
shll
imul
mov
adc
lods
sub
enter
std
pop
xchg
lds
mov
mov
cmp
push
inc
dec
lods
sub
jb
loope
inc
push
test
lcall
out
mov
mov
ret
popf
in
fstp
pop
test
inc
mov
es
xlat
xchg
clc
push
push
cld
mov
stos
inc
push
clc
sbbl
adc
lea
outsl
jnp
pop
adc
adc
jo
fwait
pop
imul
stos
mov
js
test
xor
fcmovu
into
pop
sahf
loop
sub
jns
xchg
les
and
push
js
test
sub
push
insl
or
cmp
add
fnstsw
xor
adc
daa
mov
xchg
cwtl
es
mov
loopne
add
lcall
movsl
das
mov
test
dec
and
xchg
sub
pop
jns
movsb
fwait
jp
xor
mov
notl
or
orb
inc
les
jp
xlat
pushl
test
clc
pop
ljmp
dec
into
fimull
leave
addr16
stos
call
out
shl
aas
push
add
cld
enter
iret
int3
daa
into
mov
test
adc
mov
pop
xchg
mov
mov
out
repnz
insb
lcall
inc
push
sahf
mov
subb
mov
pop
mov
mov
adcb
mov
and
mov
sbb
test
ret
push
aad
lods
cmpb
mov
mov
or
lahf
cmp
dec
xchg
dec
es
test
and
in
hlt
fisubl
data16
fs
mov
mov
add
xchg
xchg
inc
xchg
xchg
dec
ret
sahf
lret
fisttpll
es
fbld
hlt
mov
adc
or
js
outsb
cwtl
inc
and
insl
cltd
int3
into
mov
sbbb
scas
shll
test
sahf
int3
out
pop
dec
add
fxch
xchg
test
das
dec
push
mov
xor
aam
push
les
aaa
xor
shrl
ret
pop
inc
fwait
sbb
out
cmp
adc
jle
lea
test
rcl
add
jl
jecxz
lods
xor
jae
add
fiaddl
xchg
adc
mov
sbb
lods
out
xlat
jecxz
pusha
outsl
or
sbb
popf
cmp
je
xor
inc
adc
jmp
flds
add
fmuls
imul
cmpsl
scas
stos
sarb
and
les
cmpsb
stos
jge
loop
mov
ss
sbb
mov
rol
inc
sbb
nop
ljmp
xor
out
xchg
ljmp
test
mov
out
inc
ret
or
mov
sarl
testb
cld
or
sbb
or
insl
push
in
movsb
ja
cmpsb
or
jge
data16
cmpsl
pop
or
dec
push
je
push
loop
mov
mov
adcb
sub
aad
scas
sub
dec
lcall
aaa
loope
adcb
push
sbb
jmp
mov
stos
mov
ja
fmul
aam
xor
xchg
xor
mov
stc
mov
pop
icebp
cmp
mov
xchg
and
mov
lret
sbb
add
in
loope
bnd
mov
out
fstpt
inc
pop
mov
test
xchg
or
mov
pusha
lds
xchg
push
cld
mov
bswap
call
popf
cmpsb
into
xchg
mov
push
and
stos
cwtl
jno
int3
scas
jmp
xor
xchg
add
sbb
mov
inc
cmp
xchg
daa
jae
sar
test
das
ja
repz
cmp
add
push
jmp
pop
mov
rorb
mov
xor
adc
xchg
adc
pushf
adc
dec
aas
inc
dec
mov
jae
std
pusha
sbb
sbb
jg
cmp
arpl
dec
mov
mov
mov
sar
out
pop
dec
sub
xchg
movb
pop
xchg
cmp
icebp
xchg
adc
std
leave
jmp
js
dec
scas
inc
mov
pop
cmpl
enter
scas
sahf
in
adc
push
pop
xchg
aas
xchg
add
mov
cwtd
iret
sahf
stc
push
adc
pop
out
sub
jo
jecxz
nop
mov
adc
test
in
and
mov
push
xlat
xor
imul
cmp
pop
jne
lret
loope
adc
sti
and
xor
push
xor
and
pop
test
imul
ss
sbb
pop
into
add
scas
lret
sub
and
int
mov
clc
cmp
inc
cmpsb
jae
cmp
xchg
push
mov
cs
pusha
dec
data16
cmp
add
testl
and
sbb
jo
or
mov
out
mov
cmpl
ljmp
jbe
and
pop
mov
leave
xchg
loopne
cmpsb
inc
pop
mov
div
shl
xorl
dec
cmp
dec
mov
pop
popa
into
pop
outsb
jecxz
mov
jg
cmp
sbb
in
mov
mov
cmpl
lret
or
mov
aas
bound
mov
rcr
and
adc
bound
decb
pop
lock
icebp
daa
shrl
jo
push
push
cmc
mov
lret
xlat
test
iret
dec
inc
jmp
add
das
xor
mov
jns
leave
or
mov
inc
or
mov
out
in
std
gs
pop
push
aad
incl
cs
les
push
lods
mov
jb
addr16
aad
mov
scas
cmp
icebp
pop
pop
jmp
pop
push
fwait
lret
push
jp
repnz
mov
jnp
sbb
lahf
stc
loopne
dec
sbb
sub
hlt
test
mov
lods
arpl
sub
adc
lahf
sarl
insb
sub
push
adc
adc
test
add
lret
sbb
mov
jmp
inc
ret
pop
jne
xchg
jl
push
pop
xchg
pop
jge
fcmovnbe
push
xchg
out
jbe
pop
dec
pop
sub
push
repz
mov
dec
add
aaa
dec
push
daa
sbb
dec
ss
out
cld
ret
push
filds
aaa
jbe
ret
icebp
push
add
cmc
add
xor
shrl
xorb
incb
xor
sbb
shll
mov
xchg
ret
nop
mov
sub
dec
inc
or
xorb
ljmp
call
jg
sbb
xchg
and
dec
xchg
and
pop
stos
pop
lcall
test
aad
sar
fldt
popf
enter
jo
sub
adc
xor
ret
into
in
shll
ret
dec
into
adc
mov
and
pop
mov
sarl
stos
add
je
test
sahf
aaa
js
pop
xor
push
xor
sub
and
mov
sbb
cmpsl
push
push
sub
in
lret
lcall
pop
and
jnp
outsl
mov
jb
cmpsl
pop
and
in
cli
push
inc
enter
sub
cmp
mov
cmp
mov
or
ljmp
nop
sbb
adc
mov
push
push
ret
ss
dec
hlt
mov
or
movsb
push
pop
lret
sub
add
and
mov
push
cmpsb
sbb
hlt
mov
lds
xchg
aaa
pop
jae
jo
xchg
sbb
hlt
pop
push
in
dec
popa
fdivrp
rorl
sub
jl
jb
push
add
test
sbb
pop
mov
shll
dec
in
xor
inc
fists
divb
xor
leave
fstpt
sbb
mov
mov
cmc
popa
mov
xor
or
push
push
sbb
mov
mov
sub
cmpsl
aam
lods
insl
jns
push
mov
adc
jno
adc
popf
push
popf
add
sub
pusha
inc
lds
push
ret
push
mov
repz
aad
pushw
cmp
dec
ja
mov
or
dec
add
clc
sbbb
xchg
lret
imul
imul
dec
sbb
mov
mov
into
dec
or
or
mov
jno
cmp
sub
mov
xchg
push
add
sbb
lret
dec
xor
ret
sahf
dec
pop
fcompl
pushw
mov
addl
push
fsubl
ret
push
jl
push
inc
jb
mov
leave
sub
jl
or
xor
les
pop
cmpsl
fadds
fsubs
push
cltd
jp
int
and
xchg
xchg
int3
imul
jp
js
repz
sub
ffreep
test
mov
mov
stc
das
in
ds
jmp
inc
test
leave
adc
jae
dec
dec
mov
adc
int
inc
dec
xchg
push
xor
sbb
sub
pop
sbbl
aad
jecxz
scas
or
add
xchg
sub
aad
ret
adc
fiaddl
adc
ss
or
sub
xor
mov
inc
pop
hlt
mov
inc
popf
sub
xchg
jns
mov
fbld
sub
cwtl
icebp
jo
and
lahf
shll
xchg
sysret
push
push
jl
scas
add
pop
scas
pop
fdivp
into
dec
lcall
mov
lods
sub
cmpsb
dec
hlt
push
and
out
fstl
imul
pusha
sbb
cmp
out
sbb
lock
repz
push
mov
cmp
fdivs
pop
xor
jp
movsl
xchg
testw
pop
rcrl
pop
loopne
fistl
aas
cmp
push
xchg
aam
lods
mov
cmp
pop
out
adcl
mov
inc
mov
xor
rol
filds
pop
dec
jmp
pop
test
into
cmp
aas
sahf
repz
inc
popf
add
or
adc
xor
je
mov
sbb
pusha
jbe
subl
and
mov
xor
mov
jne
xchg
mov
loope
inc
mov
sbb
jp
mov
cmp
lcall
and
sahf
int3
lock
lret
leave
loopne
mov
mov
nop
mov
xor
cmp
out
xchg
mov
adc
jecxz
cmp
jne
sbb
in
out
jno
mov
push
dec
mov
mov
aam
add
popf
jo
enter
repnz
int
mov
adc
js
das
sub
jp
into
stc
mov
push
dec
add
and
lahf
xchg
pushl
jle
jo
lods
aas
popf
push
jge
mov
xchg
mov
les
push
jo
push
mov
cmp
jp
int
pop
pop
ja
and
or
imull
mov
adc
stos
and
test
lea
or
pop
mov
outsb
jno
lret
std
push
mov
inc
mov
and
sarb
das
xchg
fidivrl
jne
sub
pop
clc
js
or
lods
stos
mov
movb
mov
int3
das
inc
popf
jp
addl
lea
dec
and
mov
mov
nop
fisttpll
pop
mov
lcall
pop
mov
fs
fbstp
pop
test
idivl
adc
fsubrs
adcb
out
push
mov
cmp
mov
ret
pop
jmp
cld
mov
jl
or
aam
test
callw
cmc
aaa
xchg
inc
sbb
int3
outsl
out
or
fwait
cmp
push
je
adc
sbb
or
mov
addl
pop
jp
push
adc
ds
dec
mov
mov
push
xchg
flds
insl
cmp
fadd
xchg
lock
mov
cmpsl
add
test
push
inc
ret
aas
mov
rcrl
mov
push
mov
adc
mov
push
stc
add
mov
and
fisttps
js
mov
add
and
mov
pop
cmp
sub
jnp
xor
fmuls
cli
in
jo
test
jb
leave
mov
inc
pop
or
iret
add
xchg
dec
sbb
push
cltd
jae
adc
jecxz
enter
xchg
jmp
ficomps
dec
mov
nop
sub
imul
cmc
addr16
xor
add
mov
std
and
xchg
push
ret
in
lahf
rorl
jo
mov
ds
stos
lods
lret
ret
mov
jmp
sub
push
fidivrs
enter
sar
mov
lea
loope
in
fsubs
scas
adc
sbb
pop
leave
inc
lahf
xor
and
inc
or
and
stos
call
insl
mov
orl
xchg
sub
icebp
pop
lahf
loopne
mov
ficompl
mov
push
sbb
lock
add
xorl
rcll
and
push
push
xor
adc
mov
xchg
add
add
and
jge
mulb
jae
fcoml
mov
jp
and
pop
xor
scas
sub
scas
xorb
adc
ss
shrb
pop
sbb
insl
push
mov
mov
mov
bound
rcl
cmp
lret
leave
clc
mov
cmp
or
test
lock
pop
fsts
mov
out
xchg
mov
outsb
subb
mov
iret
pop
daa
jg
stos
mov
pop
loope
ret
pop
sub
adc
xchg
add
sub
fistpl
scas
dec
shld
mov
lods
pop
mov
repnz
lcall
inc
cmp
stc
or
or
mov
sub
pop
sbb
cmc
dec
lds
jbe
push
push
in
xor
or
sti
cmpb
jae
push
test
mov
in
mov
test
and
cmpb
sub
filds
cmpsb
xor
inc
cmpsl
cltd
inc
add
jne
mov
add
repz
roll
sub
adc
fmull
mov
mov
mov
movsl
lret
jne
add
mov
xor
mov
mov
inc
pop
xor
xchg
pop
rol
into
pop
mov
and
in
xor
xlat
cwtl
jo
or
int
das
pop
in
test
inc
mov
lret
sbb
mov
orb
aaa
pop
pop
mov
jb
adc
push
cli
jbe
xor
inc
jns
xchg
pushf
jae
sahf
lock
cwtl
imul
and
dec
cmp
aam
pushf
movsb
jno
stc
inc
mov
pusha
xchg
add
or
or
arpl
mov
cltd
add
jg
outsl
jp
sub
xchg
inc
push
lret
dec
es
mov
dec
movsl
leave
mov
mov
stos
push
pop
add
cmpsl
test
xchg
rcrb
test
int3
movsb
mov
add
aam
rcrb
and
jmp
int
mov
inc
out
inc
lods
scas
mov
mov
inc
lahf
jns
rcl
jnp
mov
jo
jns
loop
lahf
outsb
enter
sbb
enter
cld
test
es
sbb
or
ljmp
mov
pop
pop
adc
cmp
sbb
sub
int3
pusha
mov
add
in
or
cli
xchg
jg
jae
xchg
xor
xor
loope
jecxz
mov
pusha
pop
mov
xchg
cmpsb
cwtl
pop
mov
xor
addl
cmp
pop
mov
outsl
cmp
sbb
mov
imul
and
xchg
xor
lods
cli
insb
lods
pop
sarb
add
out
inc
pop
xor
es
addr16
jg
insl
push
push
xchg
mov
mov
sbb
out
push
subb
out
arpl
mov
cld
or
sarl
cmp
movsb
in
mov
negl
je
aad
inc
or
inc
ds
test
pusha
dec
mov
sub
xchg
and
dec
ss
push
sub
inc
push
repnz
fsin
and
xchg
inc
ljmp
jne
mov
fs
xchg
push
mov
sbb
cmp
dec
popf
clc
imul
fdivrp
test
icebp
jg
cmp
popf
leave
test
cmp
cmp
or
or
shr
mov
jae
cli
clc
adc
stos
pop
cli
xchg
push
jo
sbb
mov
cmp
xorl
hlt
ret
jo,pn
ret
fs
lds
xor
bnd
std
add
add
fdivrl
gs
pop
cld
xchg
mov
testl
movsl
pop
scas
adcb
mov
test
jg
std
adc
inc
ljmp
lcall
fs
xchg
pop
or
cli
nop
push
xor
addr16
mov
jnp
mov
enter
jbe
sarl
test
lahf
cli
stos
dec
xlat
pop
sub
lret
pop
into
into
jle
jecxz
sbb
dec
cmp
out
loope
mov
jp
fwait
push
inc
mov
cwtl
aas
ds
dec
and
add
jns
xlat
jle
ss
jbe
jmp
inc
outsb
ds
mov
imul
or
add
cmpsl
sahf
scas
lds
push
fcom
test
xor
insl
xchg
adc
inc
xchg
and
mov
shlb
testb
xor
xchg
ret
mov
test
sbb
jb
jne
push
ret
xchg
pop
xor
jne
bound
std
insl
adc
aad
daa
fimuls
stc
cltd
addl
adc
ret
sarb
ds
mov
xchg
push
mov
dec
lcall
rcr
aas
sub
sarb
add
lock
lock
jl
add
lahf
jo
pop
test
in
cltd
cmp
or
sbb
jb
stc
jg
pop
lret
and
pop
cmpsl
pop
jmp
fs
loope
imul
adc
aas
sar
xor
mov
sbb
and
push
cmpsb
and
jg,pt
mov
dec
lods
into
cmp
int3
sti
iret
stc
jle
mov
cltd
test
add
cld
ljmp
incl
xchg
and
cltd
add
shlb
test
jbe
xchg
dec
fwait
inc
dec
call
mov
in
shll
pop
jbe
mov
or
and
sbb
mov
adc
stc
lea
xor
sub
cmpsl
inc
add
mov
jge
add
outsb
es
and
ja
inc
sar
test
enter
xor
js
mov
movsb
dec
mov
mov
fnstsw
fdiv
cli
dec
sti
mov
incl
ds
push
push
imul
push
push
out
cltd
mov
frstors
inc
adc
pop
mov
mov
mov
gs
dec
dec
mov
push
test
cmp
leave
aas
inc
jae
cmpl
and
imul
cmpsl
push
or
lret
jae
xor
bound
xor
scas
into
fsts
lahf
push
rcrb
dec
xor
fldl
lcall
pop
outsb
xchg
sub
cmpsb
adc
std
sbb
mov
lods
mov
inc
js
adc
and
push
mov
and
mov
pop
cld
add
imul
int
daa
pop
xlat
and
push
idivb
mov
add
test
xor
sahf
inc
dec
roll
xchg
fiaddl
dec
sti
fistl
into
mov
neg
js
iret
add
cmp
push
xlat
in
cmpsb
push
in
insb
mov
xlat
sub
push
sub
and
mov
push
sarb
mov
xchg
cmpb
add
dec
ss
push
rcl
nop
xchg
and
js
pop
in
push
in
add
mov
xchg
xor
adc
lods
mov
cmp
out
into
push
jg
add
ror
xor
fsubrl
lods
in
dec
mov
xchg
je
inc
aam
xchg
aas
pop
and
mov
cmp
mov
fisttpl
xchg
add
das
mov
push
insl
lret
call
lahf
inc
gs
pop
stc
jbe
mov
and
and
outsb
inc
aam
add
or
outsl
inc
mov
movb
dec
dec
dec
iret
and
in
cmpsl
imul
pcmpeqb
mov
jne
rcrl
fsubrl
push
lods
gs
lods
mov
inc
pop
mov
cwtl
sarb
negl
out
lds
mov
cmp
scas
out
sub
inc
adc
ss
jmp
arpl
adc
loop
popf
pop
pop
jnp
push
rolb
call
pop
xor
sbb
push
imul
iret
ljmp
sti
pxor
mov
test
push
jo
and
cli
add
add
lea
dec
mov
dec
fdivrs
dec
sbb
mov
icebp
sub
xor
punpckhwd
and
lcall
repz
push
in
nop
in
xchg
imull
xchg
mov
mov
adc
adc
jb
xor
rorl
mov
sbb
pop
lea
inc
pop
jge
and
cmp
sti
cmpb
xor
inc
mov
sub
xor
stos
mov
xchg
mov
lcall
cltd
mov
nop
clc
fcompl
jns
inc
aas
notl
std
ja
loopne
ret
test
mov
or
xchg
mov
out
jecxz
xchg
dec
pop
iret
cmpsl
popf
sbb
lock
jns
daa
fstpl
cmc
les
pop
xchg
mov
jno
sub
gs
pusha
lods
mov
clc
in
mov
loopne
mov
lock
xchg
out
fwait
andl
pop
outsb
cmp
sbb
pop
loop
mov
out
dec
ss
mov
cltd
int3
mov
or
push
mov
outsb
shrl
dec
mov
sahf
test
mov
and
jo
mov
in
inc
or
xchg
in
jne
mov
jge
pushf
pop
rcrb
addr16
mov
xchg
or
xor
lret
mov
leave
and
sub
cmpsb
mov
push
mov
xchg
pop
push
mov
fnstsw
xchg
cmp
mov
repz
xorb
fidivrs
fs
mov
fsubs
ljmp
loope
aaa
je
test
or
inc
xchg
xchg
std
outsb
loope
shl
mov
pop
dec
dec
and
ja
ret
das
push
hlt
mov
xchg
fidivl
lods
inc
xchg
xchg
daa
in
cwtl
mov
xchg
sahf
insl
adc
ficompl
sbb
cmc
mov
sarl
jecxz
sbb
inc
jno
adc
out
cli
cld
pop
or
bound
inc
xchg
fdivp
inc
stos
push
jb
pop
adc
sub
mov
fisttpl
imul
lock
bound
int
jge
js
addb
cmc
lret
jo
and
repz
bound
std
pop
xlat
andl
fstl
inc
dec
js
dec
test
popf
xchg
adc
sti
push
in
nop
xchg
xchg
xchg
lret
jns
bswap
aaa
xorb
or
mov
dec
cltd
sbb
scas
lret
add
pop
inc
cmp
iret
xchg
add
inc
xorl
pop
lcall
cwtl
mov
mov
nop
out
ret
xor
out
mov
dec
sub
mov
cmp
sbb
adc
shrb
inc
push
mov
es
adc
ret
and
addr16
add
and
iret
ret
push
sbb
mov
jbe
shlb
nop
dec
inc
pushf
orb
lods
sub
mov
sbb
mov
packsswb
xchg
pushl
enter
rorb
icebp
lahf
pop
popa
adc
dec
xchg
and
sub
xchg
adc
les
lock
pop
cmpsb
push
stos
aad
rclb
sbb
cld
cmc
xor
cmp
jle
ss
in
dec
jmp
cwtl
iret
sbb
rcrl
inc
mov
or
inc
inc
leave
stc
jmp
fdivrp
and
inc
stos
in
sub
call
cmp
xor
mov
jge
orb
adc
scas
pop
dec
imul
repnz
cmp
test
pop
imul
push
leave
xlat
cs
adcl
push
pop
inc
xchg
push
push
stc
push
data16
and
testb
pop
sbb
imul
pushf
out
inc
push
ja
pop
jbe
xchg
sbb
idivb
mov
pop
test
pusha
adc
sti
adcb
gs
jecxz
mov
rorb
add
mov
pop
xchg
js
and
mov
push
add
xchg
popa
adc
jae
jae
mov
sub
mov
xorl
imul
mov
imul
aam
or
dec
mov
es
ror
bnd
push
pop
add
sbb
cmp
dec
pop
sbbb
lcall
shlb
pushf
iret
stc
jbe
mov
aad
xor
add
xchg
sub
jne
lahf
cli
pushf
cmp
into
lret
cmpsl
mov
jg
insl
es
sbb
fldcw
pop
push
mov
lahf
aas
inc
test
jle
shll
cmp
shrl
loope
lcall
sti
dec
mov
or
dec
nop
mov
cmpsl
sarb
xor
sub
lcall
inc
jns
test
ror
int3
ja
mov
push
jecxz
mov
mov
ret
or
jmp
xchg
dec
ret
loopne
into
mov
inc
xor
in
mov
fmull
dec
jmp
scas
jno
pop
ds
sub
scas
scas
pop
mov
xchg
jmp
mov
adc
dec
and
inc
sub
movsb
imul
xchg
mov
mov
add
test
inc
pop
test
out
popa
xchg
xchg
jbe
push
cmc
pusha
push
rcr
sahf
sub
fcoml
xlat
adc
cltd
popf
mov
dec
and
bound
ja
mov
mov
xlat
gs
and
jns
mov
inc
addr16
dec
inc
stos
cmpsb
add
cld
dec
lods
cmp
lret
dec
or
repz
fwait
cmp
fistps
adc
and
jns
mov
jmp
unpcklpd
mov
aam
mov
testb
nop
mov
lods
push
mov
in
inc
cmp
lods
dec
adc
inc
push
andb
scas
out
pusha
add
in
cltd
ss
sbb
inc
xor
push
jg
mov
jae
adc
stos
add
negb
lea
ljmp
into
scas
repz
mov
iret
leave
mov
cmp
std
out
jnp
iret
push
incl
pop
mov
in
cmpsl
scas
jg
insl
rcrl
test
out
xchg
in
dec
xor
loope
inc
outsl
mov
stos
dec
or
lods
push
insb
jg
out
dec
pop
adcl
inc
xchg
xlat
or
dec
adcb
ret
pop
cmp
sar
push
push
lods
into
shll
mov
bound
xchg
lds
test
and
fwait
xor
mov
dec
nop
imul
sbb
push
scas
shll
pop
ret
loope
loop
add
bound
or
sbb
sub
mov
sbb
mov
je
pop
inc
jg
imul
inc
inc
mov
je
inc
add
in
pop
je
lods
arpl
das
mov
xchg
fadd
pusha
test
testb
or
stos
add
icebp
sub
pop
jnp
loopne
lahf
fisubrs
pop
rorl
stos
mov
sbb
xchg
jnp
mov
cmc
mov
lea
std
cmpsl
sub
cmpps
out
movsb
jp
xchg
adc
sbb
dec
sub
dec
icebp
and
mov
and
push
cmpsl
rcl
inc
pop
lret
sbb
insl
outsb
insb
sbb
sub
ja
push
fs
aad
jns
sbb
subb
mov
jno
pop
xchg
inc
ret
jge
mov
jle
subl
decb
loop
ljmp
in
lock
mov
js
lret
lret
lret
outsb
xchg
jbe
jp
push
xlat
inc
sahf
xor
cmp
xor
mov
popf
pop
mov
ffree
iret
arpl
dec
test
bound
push
fstpl
bound
out
dec
insb
das
cmc
mov
sbb
jo
in
rcr
jle
lds
scas
dec
add
cwtl
sbb
or
leave
push
aad
cmpsb
mov
push
shl
or
pop
dec
xor
inc
movsb
sbb
lahf
jae
add
data16
int3
das
addr16
in
daa
pop
sbb
adc
and
fsts
nop
xor
mov
loop
loop
inc
ja
mov
xchg
jb
cmp
mov
and
test
push
xchg
lea
outsb
subb
shr
jae
jmp
jl
add
push
mov
fldenv
adc
test
aas
stos
cmp
inc
fcomip
stos
js
mov
add
push
popf
shlb
lods
fidivs
insb
inc
ret
or
pop
call
lahf
and
mov
push
mov
or
shll
mov
cld
ret
frndint
scas
shrb
fbld
subl
xor
push
jg
cwtl
icebp
rcl
aas
gs
loope
mov
mov
push
mov
mov
nop
iret
mov
mul
lds
mov
or
mov
fsts
mov
mov
mov
aas
push
bnd
je
dec
test
aam
nop
push
dec
jmp
xlat
test
sbb
pop
inc
xor
data16
outsb
jnp
stos
loope
rcr
insb
dec
popa
mov
je
cmp
sbb
loopne
and
imul
xor
stc
repz
xchg
stc
mov
mov
mov
idivb
cltd
adc
fwait
inc
cmpsl
xchg
call
ja
mov
outsl
mov
out
out
fidivl
jmp
sub
loopne
adc
xchg
inc
fcompl
div
push
popf
mov
mov
sub
int3
nop
jo
cmp
cmpsb
popf
push
out
movsb
push
sub
cwtl
add
xchg
jg
iret
mov
lods
push
aam
mov
clc
adc
cmpsl
out
popf
arpl
mov
push
mov
insl
popa
adc
xor
mov
push
int
in
sub
xchg
pop
cmp
nop
cwtl
and
fwait
in
into
dec
pop
lret
adc
mul
fmul
cmp
push
push
int
addr16
nop
jne
xchg
pop
jns
add
jbe
push
fisttpll
int
call
mov
pop
adcl
fsubrs
pop
fimull
xchg
push
pop
test
xor
aad
ja
inc
push
mov
out
dec
or
push
out
dec
mov
mov
mov
pop
popa
and
jmp
mov
jbe
mov
les
inc
outsb
pop
mov
incb
sub
add
pop
or
lods
iret
xchg
and
mov
mov
lods
addr16
jae
aas
mov
jle
mov
cli
aaa
sahf
cmpsb
dec
test
leave
sti
sbb
lods
push
xchg
cmp
mov
jecxz
cmpsl
inc
jmp
mov
xchg
mov
add
dec
or
lea
push
fwait
push
push
test
mov
sub
mov
jge
xchg
cmp
xor
push
mov
loopne
sbb
cli
int
fsubr
mull
push
cmp
out
sbb
shll
clc
fcompl
xor
cmp
pop
dec
sar
sti
fwait
push
add
out
hlt
stos
mov
adc
add
pop
jle
imul
sbb
pextrw
jmp
gs
jnp
iret
aas
mulb
lods
in
mov
std
out
ljmp
sahf
dec
cmc
sbb
out
aaa
xlat
mov
mov
orb
stos
mov
and
cmpsl
dec
rcrb
push
test
add
ds
call
aad
sbb
pushf
jns
shl
xchg
ljmp
fwait
xlat
sahf
and
mov
and
ret
cld
and
inc
lea
mov
add
inc
dec
cmp
push
fs
cs
jns
pop
test
pop
push
xchg
loopne,pt
dec
lret
xchg
add
iret
sahf
or
sbb
xchg
fstpl
cmpsb
lcall
test
jl
xor
xchg
jl
push
pop
lds
push
xor
adcl
xor
lods
aad
outsl
add
sub
outsb
cmpsb
push
jmp
sbb
ljmp
push
pop
sub
and
push
mov
jnp
jecxz
aam
push
dec
out
fucompp
imul
cli
pop
rcrl
fimull
jbe
call
xchg
jg
in
enter
push
push
xor
cmp
xor
push
ret
lods
pop
push
mov
ss
jmp
shll
pop
mov
fadds
sub
clc
add
aad
mov
shlb
ficoml
or
cmp
adc
enter
test
stos
push
pop
ret
mov
scas
mov
jge
sbb
aad
dec
inc
inc
or
es
lock
cmpsb
or
in
lret
pop
fidivl
jo
push
pop
sub
jno
mov
in
mov
cmpsb
fwait
mov
es
or
into
xchg
popf
dec
fmul
pop
mov
and
cmp
imul
cmc
sbb
cmpsb
sbb
into
mov
mov
gs
lcall
cli
mov
add
mov
pop
mov
lret
mov
addr16
mull
in
add
ss
mov
mov
cmpsl
inc
adc
jl
nop
andl
pop
test
pop
enter
inc
in
fadds
dec
jae
and
pop
lea
cli
mov
sbb
or
dec
fbstp
cs
push
ss
sbb
test
cmp
dec
out
scas
jnp
cltd
jecxz
out
fadds
int3
mov
or
xchg
into
loope
inc
sub
jno
ja
or
mov
jl
inc
dec
xchg
dec
mov
sub
mov
in
dec
sub
push
add
mov
loopne
add
mov
clc
jmp
xor
into
pop
popa
sti
test
lds
xor
xchg
add
daa
hlt
inc
iret
or
mov
mov
xchg
cld
jle
xor
mov
dec
jecxz
xor
jp
adc
adc
rolb
pop
xchg
and
inc
jne
xchg
cmpsb
pushf
mov
sbb
dec
lret
mov
mov
not
inc
push
mov
or
mov
mov
pop
dec
jbe
loop
out
fucomi
sti
push
jmp
divb
adc
dec
outsl
daa
inc
mov
pushf
in
mov
ss
icebp
xchg
xchg
aaa
cs
movsl
or
shlb
cmp
inc
imulb
lret
push
fnstsw
xchg
jle
stos
test
sub
fcmovu
imull
arpl
fmul
mov
dec
mov
aaa
xor
movsb
cmpsb
pop
movsb
mov
imulb
sbb
xchg
dec
cmp
jns
cli
push
sahf
ljmp
shll
add
mov
loope
movsb
imul
les
pop
iret
aam
insb
das
and
int3
mov
adc
outsb
xor
pusha
es
dec
loopne
lcall
jle
xchg
mov
stc
adc
inc
dec
adc
in
dec
push
mov
imul
pop
arpl
mov
cmp
jo
inc
cmpsl
sahf
test
sbbl
add
in
mov
push
popl
jb
mov
inc
inc
shll
jmp
in
out
lret
hlt
es
push
push
push
mov
adcl
movsb
xor
movsb
jg
sub
test
sub
sahf
aam
sbbb
sbb
mov
movsb
mov
xchg
icebp
and
cmpsl
repz
cmpl
cmp
sar
sub
lods
mov
fdivl
mov
xchg
je
and
sbb
jg
mov
imul
cmp
inc
sub
xchg
icebp
mov
das
repnz
xchg
cmp
testl
push
clc
pop
jmp
ret
iret
push
xor
stc
sbb
adc
inc
fbld
mov
mov
or
fistl
push
rolb
mov
fwait
iret
mov
pop
insb
mov
cld
mov
push
andb
sbb
pop
test
mov
pop
jg
test
cmp
xchg
cltd
mov
xchg
and
push
mov
daa
scas
iret
push
fsubp
mov
stos
out
mov
xor
test
mov
adc
mov
dec
nop
jne
divl
cs
cltd
cmpb
push
pop
push
repz
xor
push
testl
and
insb
push
cmpsb
hlt
repnz
mov
cmpsb
cmp
lods
push
sbb
push
movsl
leave
sbb
sub
loopne
ret
dec
aad
aaa
xchg
jbe
add
leave
inc
mov
testb
adc
sub
xchg
mov
inc
lods
in
mov
loope
ret
bnd
hlt
fwait
data16
ret
sub
dec
imul
cmp
jno
xchg
addr16
out
xchg
cli
mov
push
stos
fdivrs
daa
and
add
xor
ja
adc
push
aaa
ds
in
or
test
jle
push
add
ret
in
mov
cmpsl
mov
and
or
jl
jle
lcall
in
sub
push
adc
pop
pop
lds
push
jecxz
push
das
xor
xchg
lret
xor
in
stos
fdivs
sub
out
inc
sbb
stos
stos
dec
xorb
jo
loope
stc
pop
sub
pop
or
jo
push
or
out
test
jecxz
adc
and
cmpsl
push
pop
stos
fwait
movsb
push
pop
loop
lea
test
push
lea
insb
loop
movsb
inc
sbb
repz
lods
es
rorl
repz
sub
jae
push
mov
fcmovbe
sbb
cmpsb
jno
pop
push
ret
or
adc
sub
adc
shll
push
outsb
and
xchg
sbb
icebp
xchg
jns
cmp
sarl
inc
sbb
xchg
in
adc
es
jp
push
sub
loopne
push
addr16
cmc
sbb
das
ret
cld
push
xchg
mov
mov
xchg
in
rorl
outsb
lods
les
movsb
push
and
pop
sbb
jnp
xor
das
popf
sarb
jae
bound
mov
xorl
dec
cmp
cmp
lods
mov
ficoms
mov
or
jmp
hlt
cmpsb
and
pop
sbb
xchg
out
jl
rcrb
imul
pop
and
sbb
mov
iret
jle
mov
mov
inc
or
sbb
pop
or
xchg
inc
pop
dec
pop
out
popf
ret
push
xchg
shll
sbb
mov
into
xor
adc
xchg
or
mov
jmp
jp
push
ret
das
mov
and
cwtl
add
jo
int3
sbb
syscall
sub
enter
mov
test
data16
lret
cmp
jo
mov
into
jp
and
pop
int3
add
sbb
fldenv
cmp
or
push
lea
std
jbe
shl
mov
es
xchg
adc
jg
repnz
mov
lret
xlat
jge
jg
xor
push
daa
lret
orl
cwtl
clc
mov
push
imul
fsubl
fldt
jmp
sbbb
fwait
in
jmp
mov
sub
fidivrs
divb
xor
dec
adc
es
push
sahf
cltd
xor
cmp
push
fwait
das
jge
add
subl
loopne
in
jo
js
in
lahf
and
cmp
lahf
mov
xchg
les
push
ficoml
fs
imul
repnz
mov
lret
xchg
xor
sti
add
push
lcall
add
add
fsubrs
add
fiadds
jp
cmpsb
jb
sbb
add
and
outsb
adc
sahf
mov
xor
pop
je
lds
movsl
mov
add
jae
pop
mov
mov
repnz
cmp
test
xorb
jno
lcall
sub
js
inc
fisubl
push
test
mul
pop
aad
nop
mov
or
cmp
xor
nop
outsl
rclb
mov
dec
fneni(8087
mov
and
sbb
add
xor
cmp
movsb
jne
fistpl
movsl
add
daa
rcrl
aam
popa
pop
fists
sbb
push
dec
aas
cmp
or
and
cmp
lea
lods
lods
jno
out
ret
addr16
fs
shlb
in
xchg
xchg
xlat
or
and
sahf
and
pop
dec
ljmp
shrl
adc
adc
cmp
mov
push
mov
les
sti
push
lcall
repz
out
bound
and
mov
or
or
rcrb
popf
gs
les
gs
loop
sbb
mov
std
sbb
push
sub
lods
pop
lahf
bound
loop
jne
iret
ja
ljmp
jnp
scas
cmp
pushf
lock
pop
jp
mov
addr16
ljmp
sub
add
jl
js
adc
pop
lret
rdrand
outsl
dec
pop
adc
xor
js
loopne
and
inc
push
mov
int
lods
xorl
call
cmp
fcmovb
or
stos
dec
lahf
mov
or
fnsave
aaa
cmpsl
lds
movsb
mov
fs
dec
out
jl
ds
mov
out
pop
sti
push
lea
arpl
adc
dec
stos
repz
push
test
xor
add
push
stos
call
hlt
aad
test
xor
jecxz
fidivs
mov
mov
inc
flds
mov
int3
sbb
xchg
imul
sarb
pop
in
lods
mov
or
jo
pop
and
pop
stos
adc
lods
push
mov
mov
jecxz
or
xchg
data16
dec
adc
test
or
and
mov
test
inc
and
and
pop
shlb
pop
arpl
popf
jecxz
pop
add
fninit
std
pop
cmp
xor
clc
enter
fcompl
and
pop
mov
cmova
cmc
ds
push
pop
cmp
jp
les
je
jbe
fdivl
mov
rorl
test
pusha
popa
push
inc
fstps
std
xor
cmc
pop
mov
mov
sub
jmp
fwait
add
fsubs
loope
adc
ret
jnp
mov
mov
mov
pushf
jl
adc
xorb
mov
rcll
xor
mov
pop
jle
pop
push
addr16
xchg
xor
lret
or
xor
enter
inc
xchg
pushf
and
xor
fbld
fdivr
add
xchg
mov
pop
scas
fidivl
outsl
pop
inc
cmp
lahf
into
sub
or
adc
popa
fucomip
imul
fwait
pop
sbb
xchg
ret
push
xor
cld
sbb
dec
xchg
jae
cmp
dec
rorl
jb
adcl
mov
shrl
inc
adc
push
mov
jae
inc
xchg
dec
or
jne
outsb
xorb
lret
pop
aas
add
scas
xchg
fsubrp
pop
mov
adc
xchg
test
mov
inc
leave
cltd
and
int
jo
out
pop
push
out
pop
movsl
and
sarb
push
pop
mov
in
inc
popf
dec
cmp
inc
mov
mov
or
mov
call
mov
loopne
dec
adc
imul
mov
enter
push
adc
loop
inc
pop
dec
shlb
adc
cwtl
sti
sbb
dec
push
in
lods
adc
pop
rorl
fisttps
inc
notb
test
movsl
cli
add
aaa
cmp
fwait
mov
ljmp
cmp
cmp
xor
dec
mull
repnz
lds
in
dec
or
dec
shl
bnd
and
xor
mov
add
not
out
cmp
out
mov
stos
aas
sahf
cmpl
and
cmp
mov
mov
jge
rcrl
dec
lock
adc
mov
push
or
or
sbb
sarb
sbb
and
mov
lods
aas
movsb
mov
fs
lds
mov
or
icebp
or
mov
mov
push
cltd
aad
pop
gs
aas
add
mov
test
aaa
lds
push
ds
aam
lahf
movsb
jnp
xor
mov
mov
pushf
and
repz
aaa
imull
rclb
inc
out
dec
aad
jne
cwtl
mov
aaa
pusha
pop
jg
sub
loope
pop
xchg
mov
cmpsb
cmp
lds
sbb
xor
xchg
loope
inc
add
adc
gs
cmp
push
pop
and
lcall
cli
leave
sub
nop
cmp
add
fidivs
sbb
sarl
aas
sub
push
mov
mov
cltd
nop
or
outsl
adc
popf
ds
ljmp
pop
insl
fidivrs
imul
jnp
push
test
xor
pushaw
dec
xchg
push
sbb
sub
lds
fsubrl
orb
cltd
push
jecxz
ret
clc
add
cwtl
mov
cmp
dec
pop
push
test
in
clc
sahf
cmp
int3
push
dec
sbb
xchg
fwait
pop
push
insb
push
imul
imul
and
xor
pop
add
mov
xchg
fidivl
pushf
push
cwtl
bound
xor
insb
repz
movsb
add
or
or
xor
dec
jae
frstor
pusha
dec
sub
push
inc
add
popa
sub
pop
fsubrl
dec
ss
xchg
xchg
cmp
hlt
pop
aam
mov
dec
aaa
mov
cld
cld
pop
dec
cmp
and
inc
dec
add
stos
mov
aas
cmp
mov
cmpsb
xchg
fistpll
mov
fcoml
movsl
lds
cmp
sahf
mov
ja
push
cmp
aas
lock
jg
dec
xor
adc
xor
sbb
sub
adc
add
insb
nop
push
aas
cmp
xor
aaa
in
loope
fwait
pop
mov
sbb
repnz
ror
pop
stc
dec
or
lret
jp
std
inc
and
idivl
ja
dec
pop
inc
and
sti
insl
pop
add
aaa
mov
and
mov
xor
scas
std
hlt
sub
lret
aam
repz
fcoml
les
mov
scas
mov
mov
pop
call
inc
inc
fnstsw
mov
xchg
ds
leave
sbb
out
mov
mov
mov
pop
sub
xchg
push
out
jbe
cmpsb
dec
orb
leave
scas
push
inc
in
xor
lahf
xor
test
stos
add
fwait
mov
fiadds
sub
adc
sbb
in
pop
push
popa
push
cmp
mov
jecxz
mov
aad
inc
pop
mov
stos
rcrb
and
data16
lock
xorl
xor
hlt
and
inc
mov
add
pop
mov
int3
mov
jge
out
scas
and
dec
lock
push
in
jge
lea
aad
dec
loope
mov
pop
push
mov
rcrl
aad
sbb
loop
mov
adc
jo
cltd
std
push
push
jo
xor
test
mov
gs
in
shr
fcmove
aad
insb
lcall
lret
pop
cmp
dec
test
cmc
lods
lods
jl
nop
hlt
mov
push
inc
loop
push
cmpsl
mov
loopne
pop
sub
dec
pusha
popa
push
jecxz
mov
addr16
lret
jb
add
movsl
xlat
fcoms
imull
add
insl
mov
xchg
shr
or
ret
mov
inc
loopne
gs
rcrb
test
sub
mov
stos
mov
mov
loope
jbe
aas
sbb
stos
pcmpeqb
jmp
cmp
lcall
pop
xchg
push
fnsave
adc
jp
je
sarb
dec
mov
fldt
in
insl
data16
and
enter
out
dec
mov
adc
cmp
pop
sub
sub
sarl
push
pop
jns
aaa
cmp
sbb
shr
pop
test
clc
test
mov
adc
mov
xchg
xchg
rol
sahf
sub
mov
lea
xchg
aaa
dec
mov
xlat
jecxz
gs
cmp
fsts
popf
pop
aas
cmp
in
jb
into
mov
lock
pop
push
mov
jno
lea
push
mov
lods
bound
fxsave
jge
jecxz
dec
mov
pop
mov
push
mov
mov
and
xor
mov
xchg
ds
sub
inc
mov
enter
mov
das
into
lea
das
into
sbb
fpatan
xor
jo
sbb
idiv
xchg
cwtl
jl
or
sbb
dec
mov
mov
push
flds
jne
inc
sbb
add
and
outsb
inc
imul
sbbl
xchg
xor
bound
sub
popf
jno
ss
xor
lret
cli
mov
xchg
test
outsb
sbb
dec
sub
mov
stc
cld
dec
mov
ja
cmpsl
test
cld
int3
cli
lods
xor
lcall
mov
cltd
add
jb
push
add
cmp
mov
sbb
sbbl
or
xor
adcl
adc
add
out
or
pop
cmp
or
jg
mov
cmc
dec
cmp
mov
pop
push
pop
sbb
int
jo
rol
lds
add
pop
push
enter
and
xor
xlat
jae
loopne
cmp
jecxz
les
insb
and
mov
fdivs
sahf
push
in
pop
test
push
stc
stos
inc
mov
call
icebp
add
imul
test
insl
jnp
mov
je
addr16
lods
les
inc
lock
push
clc
jo
mov
xchg
test
adc
adc
xor
add
dec
jg,pt
sub
add
pusha
out
pop
xchg
and
aas
cmp
sub
jb
and
pop
inc
jle
push
cmpsb
test
pushf
movsl
hlt
rolb
sbb
sub
and
jae
push
mov
mov
pop
pop
pop
add
xchg
adc
push
jnp
pop
or
rorb
jl
add
jo
xchg
je
test
shll
dec
mov
mov
pop
fstpt
test
and
sahf
insl
inc
testl
out
ss
fs
std
adc
cmc
rorl
out
inc
sub
xor
in
ret
cmc
cmp
inc
bound
shrl
sbb
scas
enter
add
fld
adc
lods
inc
mov
cmp
mov
mov
ss
out
and
push
xchg
lods
or
mov
mov
add
dec
sbb
lret
adcl
pop
ds
lods
xchg
arpl
insl
pop
or
xor
hlt
add
push
cmpsb
mov
and
ja
push
pop
out
sbb
jmp
mov
insb
arpl
movsb
fdivs
push
adc
out
add
movsb
push
sub
push
and
or
gs
stos
sbb
imul
pusha
mov
and
popf
loope
cli
stc
pop
addr16
lods
sub
mov
popa
add
mov
ss
mov
inc
std
imul
outsl
outsl
lahf
mov
rcll
and
lods
lcall
and
shr
enter
dec
mov
ret
out
incb
push
xchg
notl
stos
push
popf
push
sub
ja
adc
das
jecxz
mov
out
cli
mov
sahf
aam
repnz
sarb
or
lods
jb
mov
push
dec
or
xchg
push
mov
test
dec
enter
push
jmp
add
jns
push
sub
jmp
push
insb
jl
lcall
inc
into
mov
sbb
jmp
sub
jmp
vaddsubps
mov
mov
lret
adc
inc
sbb
dec
popa
stc
imul
xor
sbb
in
fs
sbb
fisttps
add
adc
bound
or
stc
dec
push
lret
xor
dec
jae
lea
imul
imul
std
sahf
or
hlt
pushf
xchg
loope
sar
arpl
imul
les
and
mov
cmp
xchg
mov
sub
mov
vmovd
repnz
jmp
push
int3
out
adc
or
subl
push
in
xchg
aas
pop
cmpb
adcb
outsl
xchg
xor
adc
push
test
lods
testb
lds
push
cmp
xor
rclb
mov
rclb
xchg
je
fwait
imul
into
cmpl
in
inc
fisttps
push
jecxz
int
add
ss
pusha
jno
sub
mov
mov
xchg
and
jae
push
insb
nopl
lods
leave
sbb
sbb
out
xor
aas
arpl
addr16
mov
sbb
ficoms
lods
sti
sbb
xchg
dec
out
xchg
jmp
mov
iret
lock
inc
xchg
xor
clc
adc
lock
pop
dec
aad
imul
orb
aad
sbb
pop
stos
jecxz
adc
test
inc
xor
rclb
or
xor
and
jecxz
dec
push
scas
icebp
incl
movsb
or
hlt
sbb
aam
add
ficomps
xchg
xchg
and
movsl
mov
adc
sbb
outsl
dec
pop
mov
shr
xchg
cmp
rolb
inc
sti
sbb
popa
outsl
aad
pop
sub
out
fildl
dec
sbb
outsb
jnp
call
add
jno
lea
aam
add
arpl
push
pop
aaa
stos
mov
jns
imul
add
in
pushf
xor
inc
in
cwtl
and
rclb
mov
or
push
in
xchg
orb
shlb
and
and
mov
push
lods
and
pop
jmp
pop
push
add
mov
sub
jnp
push
imul
orb
pusha
ret
out
and
sbb
negb
mov
jmp
imul
push
jno
dec
call
cmp
sbb
mov
sbb
mov
movsl
out
cmp
movsl
mov
xchg
enter
sub
sub
aad
std
mov
and
and
lcall
sbb
sub
scas
nop
cltd
push
sub
cmp
xorb
jne
pop
xor
pop
in
lock
ds
mov
adc
sbb
sahf
pusha
mov
test
stos
or
out
loope
add
jns
sbb
mov
inc
or
les
daa
and
rorl
lds
ss
cmpsl
jle
lea
mov
lret
pcmpeqd
aaa
es
add
sarl
push
add
jbe
lret
das
sbb
sbb
iret
imulb
outsl
mov
imul
movsl
pop
nop
in
enter
lds
ficoms
stos
push
mov
jecxz
incb
jnp
dec
push
jne
fbld
push
pop
sbb
pop
aas
ret
aas
inc
clc
jnp
inc
xchg
pop
sbbb
xor
mov
adc
test
sub
mov
lea
leave
aaa
sub
stos
mov
mov
shlb
sub
jnp
cmp
push
mov
lods
and
in
xor
xchg
verr
sub
scas
addr16
adc
lea
inc
mov
mov
jbe
and
lret
popa
push
in
or
pop
fwait
add
cmpsl
inc
lcall
lock
xchg
push
lock
mov
sbb
mov
das
pop
mov
aad
in
sbb
in
mov
mov
xorl
cli
rcll
jae
js
xchg
lods
cmpsb
dec
shll
cltd
call
clc
mov
push
mov
push
adc
and
mov
sbb
lods
xor
mov
mov
jmp
dec
scas
sbb
mov
outsb
push
pusha
in
and
fidivl
in
outsb
lar
imul
andl
divb
xchg
shl
dec
scas
addl
js
sbb
inc
mov
mov
sub
cli
add
enter
outsl
sub
mov
jecxz
repz
nop
cmc
repnz
fmuls
cmpsl
mov
sub
fwait
bound
hlt
int
cmc
outsl
stos
ljmp
cmp
ret
ja
mov
pop
mov
or
ss
aam
push
ljmp
push
hlt
push
hlt
xchg
adc
in
out
inc
pop
out
add
inc
dec
dec
jle
jle
decb
sub
jmp
imull
xchg
mov
leave
insb
adc
movsl
dec
test
xchg
pushf
mov
cmp
jle
cmpsb
or
pusha
std
std
leave
loope
xor
movsb
pop
ja
out
test
das
mov
ret
and
iret
adc
jnp
mov
js
push
fs
scas
sbb
rcll
icebp
inc
xor
in
mov
cmpsl
xchg
fimuls
xor
add
mov
fldpi
mov
nop
stos
lock
pop
dec
lods
add
bound
push
or
mov
in
imul
in
ss
les
inc
xor
sub
fucomip
insl
xor
push
scas
cmp
mov
jbe
push
in
jnp
push
sbb
jnp
or
push
test
add
aas
cmp
pop
je
fisubs
imul
pop
and
sbb
xchg
decb
das
es
mov
mov
sbb
out
or
mov
and
and
sub
fsubrl
rorb
or
or
pop
inc
jmp
adc
js
pop
mov
movsl
jb
xchg
dec
and
movsl
arpl
xchg
outsb
sahf
cmp
int3
imul
lods
push
call
insl
inc
mov
jg
scas
cmp
aam
popa
fwait
jne
sbb
stc
lea
adc
daa
dec
lds
aad
pop
daa
or
mov
fptan
cmpsb
push
mov
jecxz
mov
sub
cmp
and
or
dec
sarb
sub
inc
sub
outsl
leave
mov
pop
pusha
xor
pop
pop
popf
and
cmp
pushl
insb
mov
ss
les
mov
xlat
int
mov
in
dec
adc
pop
or
inc
cld
rcl
sbb
andb
sub
jle
xchg
jno
push
mov
movsb
sub
mov
pop
jg
adc
popf
sub
shr
imul
adc
cmp
sub
and
jbe
mov
aam
movsl
ljmp
aaa
int3
fisubs
mov
leave
loop
gs
adc
stc
push
call
sti
inc
mov
inc
orl
stos
sti
mov
iret
push
mov
or
testl
jge
das
sbb
popa
flds
jmp
mov
sub
scas
inc
dec
imul
dec
pop
sbb
xchg
jbe
add
movl
pmaddwd
xchg
pop
mov
je
sbb
push
mov
ds
pavgb
enter
sub
xlat
fidivrl
notl
lds
fnstcw
mov
sbb
push
dec
std
cltd
dec
xchg
lahf
mov
push
push
sub
sbb
aam
int3
pop
mov
cmove
scas
jle
sbb
inc
pop
ja
sti
mov
gs
imul
lock
and
sub
lds
cwtl
sbb
dec
cmc
mov
cli
movsl
nop
sbb
xor
inc
push
jo
jge
lods
mov
cli
jo
dec
adc
std
mov
fsubrl
jecxz
std
les
push
aam
or
xchg
push
out
mov
mov
xchg
fdivrp
mov
push
sbb
mov
prefetchwt1
push
sbb
outsl
inc
adc
xor
loopne
and
out
cs
xchg
enter
sub
xor
shll
mov
push
call
stos
sub
add
aas
aam
mov
rcr
pop
pop
rolb
sub
pushl
call
adc
test
adcb
and
movsb
aas
xchg
mov
dec
das
fimuls
xchg
iret
add
stos
push
jecxz
push
cmc
jecxz
call
jmp
fldt
testl
jb
pop
mov
adc
les
les
popa
push
nop
das
in
popf
xor
jmp
add
leave
jmp
je
addr16
inc
testl
movsb
shr
sub
imull
imul
movsl
add
int
cmpsl
pop
aam
aaa
mov
adc
imul
aam
incb
inc
xchg
cmc
fsubl
je
ror
test
sbb
or
mov
aam
jge
movsb
xchg
add
jge
shll
sub
lock
xchg
aad
popa
push
ds
lea
into
dec
divb
in
aad
cmp
cltd
scas
loope
mov
dec
mov
push
or
inc
shl
call
inc
mov
lret
cli
push
cmp
xchg
mov
mov
mov
jl
sub
popf
fwait
in
ror
sbb
sbb
push
push
xor
repnz
ret
mulb
je
pop
push
jmp
pop
lret
daa
sbbl
aaa
pop
xchg
stc
sub
mov
test
cmp
test
sub
adc
stos
lret
dec
sarl
xchg
sbb
cli
das
ret
out
scas
call
loop
fwait
arpl
cmc
fcompl
les
lods
xchg
daa
or
xchg
lods
daa
out
push
mov
mov
dec
scas
jg
iret
movsl
xchg
test
int3
fimull
or
mov
dec
loope
dec
aas
aad
jmp
pop
mov
scas
mov
adc
cli
pop
movsl
adc
nop
add
xchg
lret
repz
rolb
mov
pop
mov
and
and
aad
push
arpl
clc
pop
adc
sbb
loop
bound
in
and
inc
mov
rcrl
popa
xchg
fsubrp
scas
ds
pop
jmp
cltd
icebp
outsl
fisubl
in
lock
or
jbe
xchg
fsubs
xor
mov
adc
jns
jnp
mov
xchg
dec
inc
adc
push
movsl
mov
icebp
dec
sub
das
inc
dec
cwtl
into
push
js
inc
sbb
repnz
ficoml
sub
push
out
out
insb
test
mov
leave
push
jmp
pusha
adc
push
loopne
cld
push
out
jne
adc
jo
fsub
loope
mov
mov
xchg
pop
sbb
mov
mov
orb
aad
and
nop
out
xchg
adc
cmc
xchg
adc
mov
loop
dec
dec
cmp
xchg
jo
ljmp
mov
sarl
dec
adc
jmp
xlat
insl
mov
popa
repnz
cmp
test
jbe
cmpsl
jb
insb
xchg
sub
sub
cmp
fwait
xor
pop
cltd
pop
pop
pusha
call
rclb
out
rcrb
aam
mov
test
lahf
aad
mov
mov
jnp
bound
repnz
in
mov
aas
jb
test
repz
dec
ret
adcb
movsb
cmp
aam
test
push
mov
shlb
sarb
mov
sarb
lcall
jmp
add
fs
insb
cmp
lds
add
test
inc
mov
sar
xchg
imul
adc
aas
mov
sti
icebp
mov
lods
shll
inc
cmp
cs
roll
cmp
push
scas
and
dec
mov
stos
jno
jle
and
out
test
daa
sbb
mul
xchg
push
or
das
sub
or
or
add
rol
and
adc
mov
rcll
push
outsl
mov
dec
aaa
imul
lods
jnp
xor
or
inc
adc
dec
lcall
xchg
out
aam
mov
testb
sbb
xor
mov
ljmp
mov
jbe
sub
cld
cmc
jo
scas
sbb
xchg
ljmp
dec
cld
enter
ja
insb
pop
pusha
ljmp
lcall
sub
jne
pop
inc
pop
adcb
fidivl
data16
mov
or
inc
ds
cwtl
mov
xor
popf
or
insb
sub
xor
insb
stos
xchg
test
push
inc
mov
jns
lret
pop
int
filds
pop
sub
lahf
xlat
adc
cmc
fildl
adc
dec
sub
fwait
xor
arpl
jg
pop
jae
adc
jmp
push
add
xchg
loope
mov
or
fnstenv
push
pop
add
xchg
aad
sti
xchg
lea
repnz
lahf
scas
hlt
pop
test
popa
pop
dec
test
popa
shll
pop
pop
out
mov
lods
dec
test
sub
loop
mov
mov
int3
js
cmpsl
lcall
and
jle
push
aad
xchg
mov
mov
insb
adc
ret
pop
loope
rcrl
cmp
ds
xchg
pushf
rol
mov
daa
or
hlt
add
jne
inc
lea
ret
testb
int
subb
jge
repz
xorl
add
xor
mov
sub
in
sub
sub
out
xchg
dec
pop
shrb
ss
je
jnp
ljmp
mov
mov
sub
test
add
inc
mov
loop
fwait
mov
sub
lea
adc
loop
ljmp
lea
hlt
into
and
pop
mov
gs
aam
xor
lcall
decb
or
xchg
inc
cwtl
outsb
in
inc
clc
repnz
xor
out
xlat
mov
testb
call
jo
mov
mov
push
pop
mov
or
jnp
lea
lret
fs
and
fsubr
bound
orb
cmp
arpl
gs
push
jle
cltd
xchg
scas
jo
or
subl
mov
inc
bound
xor
xchg
sbb
ljmp
ds
push
movsb
mov
and
add
dec
mov
dec
js
inc
cmc
xor
push
ss
jo
dec
inc
std
cs
pushf
jbe
addb
icebp
int
xor
ret
movsb
jmp
inc
pop
inc
out
enter
add
out
icebp
dec
or
stos
xchg
and
shrl
xchg
push
dec
jbe
dec
cs
in
add
std
mov
sbb
addr16
dec
les
sub
push
pop
imul
leave
aaa
sbb
sbb
inc
mov
or
xchg
xchg
sub
bound
sub
cs
jb
out
mov
pop
popf
repnz
enter
sub
fwait
mov
and
rep
sub
mov
cwtl
addr16
sahf
popf
xchg
push
jbe
aad
jl
adc
pop
cmp
cmc
push
out
gs
pop
loope
push
or
jecxz
xor
dec
xchg
out
pushf
xlat
loopne
das
pop
fisttps
or
mov
xor
loope
outsl
mov
xorl
sub
stos
or
mov
ja
jp
dec
mov
mov
xchg
adc
clc
sti
repz
mov
clc
sete
lret
push
pop
rcr
sbb
lahf
adc
inc
pop
pop
cmp
push
push
pop
loopne
data16
pop
pop
popa
sbbl
repnz
rcll
jmp
aad
or
cmp
pop
js
fmuls
scas
pop
sbb
or
or
jb
icebp
pop
mov
xchg
mov
dec
std
clc
jl
and
ret
cmp
or
push
dec
insl
lods
mov
ret
testl
cmp
lcall
inc
jl
pop
mov
fbstp
mov
pop
into
mov
push
mov
js
sysexit
mov
subl
out
cmp
or
push
mov
jae
cmp
dec
mov
loope
pop
push
mov
or
out
cmp
xor
mov
push
mov
mov
xor
xchg
jno
cmp
pop
pop
adc
dec
outsl
sti
mov
jl
jmp
pop
and
popa
jb
sarl
daa
int
dec
push
xorb
cwtl
or
and
sti
mov
cwtl
dec
cld
int
push
iret
adcl
pop
and
sub
movsb
mov
popf
mov
cmp
xchg
mov
iret
and
jge
add
push
adc
stc
sub
stos
cmp
jge
pushf
stos
scas
movsl
xchg
mov
jle
cmp
fisubrs
xor
out
pop
lea
int
xchg
repnz
pop
dec
rol
fwait
add
test
push
in
mov
mov
lret
cs
jecxz
scas
nop
mov
dec
xchg
std
adc
ficomps
push
jmp
out
sub
or
fiadds
dec
sub
push
stos
mov
mov
ficoml
push
mov
mov
mov
push
rorl
or
jmp
repz
testl
push
mov
dec
jecxz
insl
mov
sbb
fs
push
out
jnp
loope
movsb
xchg
cmp
rorl
adc
rolb
hlt
inc
loop
nop
mov
xor
je
orps
aad
lret
adc
mov
ja
jb
shll
shlb
or
push
add
mov
ficompl
and
mov
lods
pop
pushf
cmpsb
ss
inc
xchg
sub
pushf
out
lcall
enter
cmpsl
adc
push
dec
incb
lds
mov
pop
mov
dec
push
pop
repz
incl
int
mov
mov
or
jb
push
dec
xchg
dec
sbbl
push
or
enter
insb
popa
and
sbb
and
mov
pop
movb
mov
add
adc
pushf
inc
into
push
jle
sub
mov
xor
add
xchg
ss
push
jnp
leave
leave
dec
leave
js
push
sbb
ss
or
lods
loop
xchg
and
add
sub
stos
punpckhbw
jne
cwtl
ds
fs
mov
ljmp
xchg
dec
insb
enter
xor
aaa
loopne
sahf
lahf
movsb
sti
ret
xor
xchg
mov
xchg
ret
cwtl
dec
add
js
out
or
out
hlt
mov
xor
sub
popf
cmp
sahf
or
roll
or
push
sub
or
and
mov
imul
ss
mov
out
stos
test
xlat
or
push
roll
pop
pop
call
mov
and
jge
pop
int
mov
rorl
jl
mov
cmc
dec
je
pop
and
add
cmp
hlt
xrelease
test
dec
pop
mov
xchg
xchg
lcall
push
mov
ds
mov
pop
std
xor
pop
inc
xchg
sub
out
cli
enter
pop
and
dec
xor
pop
sbb
push
sub
mov
or
movsl
insl
dec
outsl
jp
fsubrs
jg
xchg
mov
sbbl
xor
push
pop
mov
enter
imul
mov
cld
pop
lea
sub
in
and
enter
pop
iret
icebp
mov
xchg
adc
stc
shrl
outsl
popf
in
pop
cld
add
das
pop
daa
pop
dec
fnstsw
fsubr
fwait
dec
gs
shl
jne
clc
lret
and
push
int3
test
das
jle
fimuls
mov
test
mov
jl
cmp
test
cmpb
repz
mov
pusha
mov
mov
stos
sub
cmc
adc
ds
loope
rcrl
adc
fsubr
jnp
daa
adc
and
test
dec
ret
popl
fiaddl
mov
mov
and
pop
pop
add
push
int
mov
aas
sbb
pop
into
mov
fcmovnbe
mov
jge
mov
cmp
addr16
fbstp
fs
fmuls
fsubs
mov
dec
push
subb
jge
popf
add
pushf
pop
and
inc
sbb
mov
dec
jne
lds
sahf
cld
push
mov
loope
int3
cli
cmc
mov
test
jecxz
dec
or
xor
int3
bound
pop
add
out
jnp
mov
jb
push
loop
lret
push
int
jnp
call
bound
testb
loopne
push
mov
push
imulb
js
movsb
push
rolb
jge
mov
insl
xchg
fsub
sti
std
enter
mov
sarb
xchg
mov
addb
xor
fmuls
sar
sub
test
loopne
jl
cli
test
fldcw
cwtl
std
out
or
loope
scas
loop
add
sar
outsb
imul
in
or
jg
test
push
inc
pop
push
push
xor
mov
cmpsl
xchg
cltd
stos
iret
iret
lahf
out
inc
into
adc
xor
in
test
cmp
ret
pop
arpl
imull
pop
das
mov
hlt
inc
cwtl
icebp
and
xorb
and
bound
cwtl
push
xor
push
mov
test
fsubrl
jnp
pop
xor
fcomps
inc
jg
push
xchg
hlt
inc
insb
clc
pop
pop
jbe
jl
xchg
mulb
pop
aad
out
nop
aam
jmp
or
lret
icebp
inc
or
and
mov
push
xchg
mov
and
fstpt
insl
ja
push
jecxz
jg
dec
pop
xor
hlt
or
pop
filds
pop
sub
mov
or
xchg
sbb
inc
adc
pop
mov
shrb
adc
clc
push
and
fnstenv
stc
and
lea
inc
outsb
test
fs
fwait
xor
imul
adc
mov
xchg
jnp
pop
push
lcall
push
pop
dec
mov
mov
xor
xchg
jge
in
xor
and
mov
movsl
pop
jmp
push
jle
cmpsb
xor
cmp
mov
and
add
mov
xorb
in
lea
xchg
int
or
mov
out
or
xor
jp
xlat
test
sbb
daa
sbb
sub
sbb
sbb
lods
mov
mov
cltd
lea
jmp
ja
incl
dec
add
aad
lods
aad
rorb
fisubs
mov
loopw
sub
loopne
lds
cmp
mov
ljmp
add
test
subb
pop
call
inc
icebp
push
bound
ret
xor
ror
jmp
mov
aaa
fdivl
pusha
addb
pop
fstps
fwait
sbb
mov
dec
test
insl
lcall
fcomps
subl
or
sbb
mov
aas
ret
sarb
mov
sub
mov
jnp
movsb
dec
push
div
lahf
cli
fnstsw
test
pusha
add
pop
adc
js
cmp
lea
or
sub
inc
lock
fldt
insb
sbbl
das
ret
mov
dec
lret
or
dec
cmpsl
nop
cmp
jg
mov
xchg
pushf
sub
sub
lret
rolb
pop
add
fmull
stc
pop
es
pop
xor
sbb
dec
aad
adc
scas
repnz
sahf
iret
xchg
lds
shl
adc
outsb
clc
push
and
popf
mov
mov
adc
jp
adc
push
or
mov
popf
clc
jle
clts
lea
nop
pop
das
adc
nop
inc
repz
dec
test
int3
pop
repnz
out
stos
iret
out
test
add
adc
in
sub
nop
sbb
push
jp
negl
add
test
xchg
loope
mov
cwtl
daa
jmp
test
sub
lds
mov
ljmp
call
or
adc
dec
mov
cld
jle
out
jg
insl
xorb
xor
pop
popa
jnp
mov
test
dec
repz
xlat
xor
cli
jle,pn
mov
ficomps
lret
pop
xchg
add
mov
xor
mov
call
imul
aam
repnz
rorl
mov
add
pop
mov
inc
jle
add
int
xchg
daa
aam
sbb
or
notl
into
mov
test
addr16
subb
xor
subb
and
lock
pop
cwtl
jno
xchg
insb
and
adc
xor
je
ret
lods
pop
ror
gs
push
je
pop
xchg
jg
push
xchg
sub
hlt
sti
pop
into
push
insl
mov
incl
cmc
inc
pop
adc
xor
dec
insl
lret
push
pop
xor
cmpsl
imul
scas
loop
call
inc
mov
push
stos
mov
sti
jecxz
outsb
mov
or
in
inc
dec
add
mov
ret
lret
jp
dec
sbb
sub
outsl
hlt
test
or
inc
mov
imul
pop
rclb
out
shr
jae
pop
dec
test
into
mov
aad
imul
and
xchg
idivb
cmp
daa
in
inc
ret
sahf
dec
fwait
ljmp
imul
xchg
sbb
jns
jg
pop
sub
js
push
shrb
sub
add
inc
push
dec
fcomip
ljmp
stos
stc
fldcw
xor
jne
mov
enter
ljmp
ds
icebp
ja
ret
mov
adc
pushf
fists
jmp
popf
inc
fidivl
sbb
das
call
pop
cwtl
dec
test
mov
lret
aaa
fsubl
sbb
dec
out
fmul
add
bound
test
and
into
cmp
cmpl
xchg
mov
push
imul
mov
subb
lds
sbb
mov
xor
xor
cmp
cmpsl
lock
jmp
addr16
dec
shlb
dec
cmpsl
loop
jb
jae
lret
cmpsl
ret
adc
inc
dec
add
or
or
shll
test
jmp
pop
out
jnp
xor
mov
pop
pushf
imul
mov
push
je
pop
jle
in
mov
inc
fs
fildll
hlt
xor
adc
int3
mov
fwait
push
inc
shrb
test
mov
addr16
fmull
ret
mov
jecxz
popf
sbb
outsb
movsl
lods
mov
daa
mov
xchg
in
sbb
ja
and
lret
out
addb
push
or
cwtl
hlt
fcoms
movsb
cmp
and
adc
aas
push
adc
push
push
mov
cwtl
aam
sbb
js
xor
test
in
adc
adc
inc
pop
shrl
xchg
sbb
call
adc
xchg
hlt
js
mov
stos
pop
mov
jne
push
ficoms
xchg
mov
pop
push
call
push
lds
jg
pop
push
loope
aas
adc
cmpsb
sbb
cmp
jbe
push
inc
sti
mov
xlat
movsl
mov
lock
cmp
dec
mov
ds
ret
mov
andb
jo
dec
push
movsl
fwait
sbb
arpl
lods
pusha
gs
xchg
pop
mov
mov
loope
xlat
mov
popf
call
push
addb
lds
cwtl
divb
push
hlt
popf
lods
es
sbb
ljmp
push
pusha
add
dec
in
outsl
jle
repz
cltd
dec
xchg
ror
lcall
dec
imul
mov
ds
ret
pop
lcall
mov
rcrl
push
jne
xchg
adc
mov
mov
stos
addr16
push
mov
xchg
jg
das
cli
mov
rorb
jno
sbb
add
adc
dec
mov
daa
or
jg
lea
sbb
js
ret
loopne
pop
insl
sbb
pop
push
add
aam
push
aas
or
mov
cmpsl
cmp
jg
leave
dec
dec
minps
loop
scas
sbb
fsubs
and
pop
cmp
pop
hlt
insl
aas
cmp
jne
jl
jl
daa
xor
and
xlat
cwtl
test
iret
sarl
xchg
mov
rcr
nop
mov
xchg
cmpsl
sub
shrl
cmp
jns
repnz
mov
lahf
push
add
stos
cmpps
ja
xor
push
pop
imul
xchg
cltd
std
test
push
push
jno
lret
xchg
loopne
sbb
adc
mov
xchg
mov
jl
cmp
and
xchg
rclb
ret
cwtl
mov
mov
sbbl
xchg
mov
adc
mov
pop
ja
xchg
sbb
pop
cmp
js
rcr
int
jmp
xlat
inc
push
lds
inc
lea
dec
outsl
cld
push
addr16
ds
dec
popa
or
mov
or
inc
out
cmp
test
ret
loope
mov
mov
inc
adc
add
dec
je
push
lods
dec
cmp
add
scas
jae
stos
or
stos
stos
sbb
adc
jmp
fists
push
fdivrl
ret
jge
and
leave
mov
outsl
sub
movsl
je
adc
and
xchg
into
mov
loop
in
mov
xchg
dec
cltd
dec
lds
mov
testb
subl
pop
mov
and
jle
enter
gs
adc
jle
adc
and
in
xor
jle,pn
xchg
jg
pop
sbb
mov
inc
shll
sarb
leave
mov
sbb
lret
lcall
cmp
stc
divl
push
int
mov
jo
xchg
dec
jo
lds
out
mov
mov
or
jns
jno
pop
lods
jge
push
jbe
shlb
sbb
push
ds
nop
push
mov
sub
inc
repz
adc
std
xor
pop
sbb
and
or
rorl
dec
cmp
popf
xchg
mov
cmp
lret
test
daa
mov
push
jg
cmp
adc
cmp
jne
mov
js
adc
outsl
dec
dec
aaa
in
test
leave
scas
mov
or
enter
pop
arpl
pop
xchg
ds
dec
or
xchg
mov
and
inc
mov
aam
jl
inc
mov
jmp
mov
sti
inc
in
hlt
mov
das
je
xlat
inc
pusha
mov
dec
cmp
sub
fdivrl
mov
leave
js
or
xor
sub
adc
rcl
dec
stos
or
sub
mov
add
pusha
lahf
int
ljmp
icebp
sarl
pop
addr16
in
mov
stc
es
adc
push
aaa
jecxz
inc
and
mov
popf
std
scas
dec
mov
iret
mov
imul
inc
jb
pop
mov
cmp
jl
mov
test
push
repnz
aam
rcrl
in
cs
pop
mov
jno
mov
mov
test
popa
dec
jnp
mov
popf
dec
and
lock
xor
int3
in
popa
rorb
aas
xchg
or
bound
into
lcall
or
mov
dec
pop
xchg
jmp
dec
lods
mov
push
and
jo
and
shr
loopne
out
sub
icebp
push
cmp
mov
shlb
push
repnz
aas
pop
bound
out
and
push
jl
addr16
inc
inc
and
push
or
mov
lods
lret
mov
lret
sbbl
int3
insl
jle
xor
jno
out
daa
loopne
jnp
inc
adc
mov
pop
pmulhuw
xchg
sbb
xchg
out
in
subb
mov
mov
dec
daa
lods
xor
adc
cld
push
test
mov
test
test
loope
insl
rcrb
in
push
adc
iret
mov
jle
out
inc
out
adc
push
push
jno
movsb
inc
fsubrl
cwtl
jmp
mov
push
nop
inc
scas
out
je,pt
inc
xchg
push
or
lahf
frstor
mov
lods
lock
pop
jmp
add
push
in
dec
addb
scas
jne
cmpsl
in
dec
ret
xor
cwtl
shl
push
dec
pop
out
cmp
aad
pop
mov
pop
cmp
or
xchg
shrb
stc
inc
cmp
movsb
lods
mov
mov
popf
mov
xor
xor
shr
stos
push
mov
call
cmp
jp
dec
jecxz
mov
lcall
add
je
or
inc
sbb
in
and
inc
in
jbe
bound
pop
dec
icebp
cmpsb
sub
inc
inc
mov
sbb
cmp
mov
lods
xor
sub
fbstp
gs
int3
aas
jo
shrb
ret
cmp
mov
or
inc
push
scas
sbb
mov
je
or
es
subl
int
ljmp
jecxz
and
xor
jp
jno
in
popa
mov
push
fistps
mov
lods
push
push
jg
std
sbb
mov
lret
push
pop
mov
push
mov
jne
mov
xorl
fcoms
cmp
int
data16
xlat
cld
arpl
fs
push
lods
fwait
enter
push
adc
cmp
adc
dec
jmp
mov
out
loope
bound
shrl
jp
cld
aaa
test
xchg
cmp
jne
ss
push
cmpsl
xor
cmp
sub
movsl
pop
xlat
fmuls
inc
inc
leave
dec
insl
cmp
jp
inc
add
mov
xlat
gs
cltd
adc
adc
rolb
clc
cmpsb
das
pop
add
add
cmp
bound
lods
dec
mov
call
push
and
lcall
lret
mov
pop
scas
scas
dec
jmp
mov
pop
insl
in
int3
xor
aad
testl
add
mov
or
jmp
xor
cmc
sub
sub
cmp
lahf
pop
jecxz
and
in
mov
mov
popa
jl
mov
cmp
adc
mov
mov
data16
push
jge
outsb
or
sbb
and
arpl
cmpsl
es
jae
test
sbb
ss
bound
test
popf
shlb
pop
sbb
in
popa
adc
js
sarb
mov
rcrl
xchg
and
jae
dec
sub
pop
arpl
ret
sub
adc
lods
mov
in
jb
inc
hlt
shlb
mov
pop
adc
push
xchg
mov
cmpsb
and
lods
cmc
stc
in
enter
xor
push
pop
or
jno
call
pop
repnz
loop
popa
dec
outsl
popf
mov
jbe
mov
test
cli
push
mov
sarb
lea
les
adc
jl
shll
xlat
imul
lret
jle
insb
ret
movsl
mov
stos
aaa
idivl
lahf
and
inc
mov
test
pop
jmp
outsb
add
fidivrl
jecxz
push
cwtl
push
stc
aam
imul
mov
addb
fs
xchg
add
pop
frstor
push
add
lahf
jge
rcr
leave
sbb
push
repnz
sub
cmpsl
cmp
xchg
xchg
sub
inc
outsl
aam
scas
jge
pop
push
std
fstpl
sub
daa
add
push
imul
cmp
fdiv
cmp
adc
enter
sub
dec
jns
ficompl
out
adc
sub
orb
stc
cltd
mov
adc
cld
cmc
iret
shrl
xchg
and
dec
stos
icebp
dec
icebp
pusha
test
bound
push
push
jge
sbb
out
outsb
js
mov
scas
pop
fldcw
push
mov
roll
mov
scas
scas
dec
mov
aas
pushf
jmp
insb
out
cmp
call
xchg
and
push
adc
test
les
sahf
cmp
pop
movsb
testl
dec
adc
jb
test
xor
push
jnp
lret
fcoms
mov
xlat
mov
sub
cmc
rcr
mov
xor
jno
cwtl
mov
int
mov
loopne
loop
sbb
jp
pop
pop
push
jl
mov
pop
push
lret
popa
loopne
jecxz
adc
mov
jge
bound
shll
stos
loop
push
inc
cld
icebp
ret
sub
je
mov
pop
loope
add
cmp
pop
xchg
test
frstor
pop
fs
adc
je
jmp
aas
mov
fstl
sub
lret
jns
js
and
bswap
cmp
sbbl
adc
jo
pop
stos
hlt
mov
ds
aaa
scas
push
data16
cli
xlat
outsl
mov
sbb
push
jnp
xchg
repz
lds
int3
arpl
dec
sahf
pop
lds
test
push
ljmp
inc
lea
lds
sub
xor
int3
lds
setp
sub
pushf
and
or
mov
rcl
push
ret
xor
lock
mov
lods
adc
mov
inc
lahf
lods
push
push
pop
aas
aas
jle
int3
lret
dec
imul
stc
pop
xchg
or
cmp
add
pop
loope
mov
lods
insl
jmp
outsb
xlat
dec
sub
arpl
stc
push
cs
mov
sub
scas
es
mov
popf
loop
jb
mov
out
mov
imul
pop
add
sub
xchg
jp
lock
xchg
xchg
rcrl
jne
das
sti
inc
rep
bound
inc
xor
mov
cli
dec
data16
and
cmc
inc
jge
sbb
xor
fcom
jp
mov
fistps
and
stc
pusha
lret
mov
mov
mov
jecxz
jo
jecxz
sahf
movsb
pop
int
fwait
xor
out
repz
clc
jmp
mov
roll
into
cld
push
stos
or
mov
test
cmp
roll
lods
lret
pop
mov
gs
mov
scas
mov
inc
dec
pop
jns
dec
xor
or
fnclex
cli
xchg
icebp
repz
movsl
push
rdmsr
loope
sarb
xor
mov
mov
sahf
add
or
es
jns
and
push
pop
cmp
sahf
scas
rcrb
enter
or
scas
andb
xor
jno
sahf
pop
aam
lret
dec
mov
ss
xor
jg
xor
adc
imul
movsb
fs
mov
into
gs
stos
js
leave
movsb
push
cmp
xchg
stos
push
pop
sub
or
cmp
xorl
aad
sub
pop
xchg
lret
xor
adc
adc
test
sti
mov
push
xchg
xchg
xor
push
mov
xchg
outsl
ret
bound
cli
push
test
sub
rorl
or
cmpsb
cmpsb
pop
push
sti
movsb
sbb
add
sbb
add
jp
out
int3
into
int
adc
std
dec
orl
pop
lahf
xchg
xor
mov
gs
push
popa
loop
add
pop
cmp
inc
je
mov
stos
xor
hlt
andl
push
call
jno
imul
movsl
sub
jbe
cmc
xchg
add
cmpsl
scas
mov
cmpsl
cmp
fwait
loop
sbb
jnp
scas
mov
rcll
dec
call
mov
pushw
or
mov
clc
jo
xchg
daa
push
or
push
sub
testl
arpl
sar
pop
and
cmp
sbb
cmp
push
push
cmp
push
daa
mov
loope
std
ss
insb
cmp
ds
lret
pop
dec
xor
fstl
pop
shrl
xor
jg
jecxz
xorps
movsb
aad
std
ret
jns
aaa
stc
fcomps
aaa
outsb
dec
jle
aaa
fs
sbb
xor
mov
fsubs
pop
cs
pop
rcll
jl
pushl
or
push
fwait
adc
and
xchg
loop
sbb
sub
mov
add
cmc
out
fwait
in
xor
out
in
xlat
repz
mov
jmp
cmp
outsl
mov
mov
dec
mov
mov
divl
fwait
dec
pop
std
imul
in
aad
data16
or
mov
or
int3
int
xchg
ss
mov
push
xor
stos
ss
xor
lea
imul
push
sub
sbb
dec
ss
xchg
sbb
sbb
lea
test
repnz
jecxz
and
stos
test
cmp
jae
out
xor
xor
int3
std
clc
push
add
faddl
addr16
out
mov
lea
es
mov
xchg
sub
movsb
movsl
out
xlat
repz
fs
mov
in
stos
dec
pop
add
out
sbb
add
mov
fiaddl
inc
mov
mov
fstpl
xor
dec
jg
add
mov
and
or
out
push
dec
mov
cmpsb
adc
or
pop
cwtl
xchg
mov
push
dec
jno
xchg
pop
imul
lcall
add
jo
fldcw
xchg
sub
xor
and
add
xor
xchg
mov
mov
les
aam
cmp
pop
jge
testl
ljmp
cmp
push
xor
test
and
movsl
push
or
imul
stos
test
add
lahf
insb
js
push
cltd
adc
pop
data16
pop
xchg
mull
sbb
push
fsubrs
push
push
pop
shlb
fsub
test
leave
out
in
loop
scas
sti
fs
insb
aas
icebp
push
loope
imul
xchg
and
sarl
clc
xchg
jle
lcall
cmp
xchg
mov
out
es
inc
pop
dec
into
xorl
insb
dec
cs
in
dec
mov
movsl
sti
shll
mov
aam
mov
jno
mov
shrl
xchg
dec
pop
pop
cmp
clc
sub
inc
fisttpll
enter
lds
and
and
mov
in
jcxz
adc
pop
lds
inc
xchg
adc
lret
mov
les
test
popa
lods
push
push
rolb
xchg
or
dec
mov
loop
iret
test
rcrl
push
pushf
lahf
sbb
or
or
xor
inc
sbb
mov
jno
lea
sbb
xor
push
test
sbb
dec
cmpsb
iret
add
xchg
xchg
imul
aas
std
popf
loop
int3
add
jecxz
adc
mov
stos
enter
shrb
xor
vpsubsw
mov
cld
add
cmpsl
cli
xor
mov
lret
dec
mov
and
iret
inc
insl
js
stc
fs
ficomps
out
sahf
mov
ret
sbb
mov
mov
sbb
pop
cmp
sbb
lret
pop
lods
shll
and
loop
add
clc
adc
cld
xchg
addl
cmpsl
arpl
daa
pop
inc
mov
cmpsb
int3
mov
nop
push
xor
loopne
push
hlt
sub
clc
fldz
inc
sub
xor
jp
dec
mov
enter
xlat
iret
and
push
lea
sub
bound
dec
push
ficoms
popa
cli
ljmp
push
fcomp
cmpsl
sarb
ds
movsl
sbb
jp
jg
jp
data16
sarb
imul
leave
pushf
ds
icebp
stc
in
rcrl
sbb
subb
or
mov
mov
shl
or
sbb
ror
fwait
test
lods
sbb
in
dec
mov
mov
inc
mov
jecxz
mov
sbb
pop
xchg
jbe
scas
pop
push
leave
push
inc
data16
test
mov
mov
enter
es
mov
or
inc
xchg
and
out
jle
pop
jmp
arpl
mov
add
cmpsb
adc
mov
dec
lea
or
fisttps
fnstsw
popf
adc
fs
and
test
dec
push
and
jnp
aad
mov
xor
push
dec
mov
push
test
scas
sbb
xorl
push
out
js
push
mov
mov
mov
fs
addl
stc
xchg
mov
and
jle
dec
jb
sub
add
xor
sub
lds
pushf
push
pop
lret
stos
mov
es
sahf
pusha
adc
fistpll
dec
cmp
js
ja
cmp
xchg
adc
jg
inc
jp
aas
and
add
scas
xorb
jmp
aas
bound
stos
adc
or
repz
fstps
idiv
int
or
cmp
dec
push
jecxz
cmp
stc
xlat
and
cmc
add
imul
jbe
test
in
leave
leave
cli
stos
out
lds
adc
imul
mov
lods
outsl
bound
mov
cli
pop
fs
jns
mov
mov
call
xor
testl
cli
inc
andb
or
imul
or
clc
add
adc
popf
sbb
sbb
and
jb
aaa
and
mov
fbstp
ss
mov
sbb
sarl
inc
xchg
ret
and
push
stc
pop
lcall
push
add
aam
cmpsl
and
out
lret
fsts
or
roll
and
mov
pushf
enter
mov
push
movsl
outsb
mov
nop
loope
out
xchg
push
les
lods
push
out
and
mov
leave
xor
inc
sub
or
push
jmp
jg
popf
es
sbb
dec
pop
test
ud1
jo
add
add
sbb
xrelease
ret
loop
push
xchg
xor
call
cmp
jnp
lcall
xchg
jl
pop
int3
fwait
rclb
hlt
inc
sahf
dec
mov
cmp
fs
sbb
adc
mov
out
add
icebp
or
sbb
stos
ljmp
or
cmc
call
jecxz
lds
fwait
les
xchg
in
stos
cmpsb
jl
scas
sti
cmp
jmp
sbbb
dec
mov
xor
mov
lret
or
mov
cwtl
rcrl
pop
hlt
shr
add
out
pushf
sub
sub
shrl
pop
mov
xchg
stc
arpl
aad
ljmp
ljmp
mov
dec
cld
fstpl
pop
sbb
inc
adc
daa
pop
arpl
leave
daa
jbe
add
cmpsl
mov
dec
ret
inc
stos
inc
pop
mov
push
adc
lods
dec
pop
fidivrs
cmp
jmp
cmp
sbb
imul
push
lcall
popf
sbb
leave
mov
loopne
sub
xor
mov
inc
sbb
xchg
leave
scas
add
sbb
scas
jbe
add
add
add
xchg
loope
cmc
jge
lds
test
lea
arpl
jg
in
je
mov
loop
add
stos
lahf
mull
cmp
fists
xchg
mov
xchg
jnp
cli
jg
cmp
cwtl
mov
pop
xchg
mov
jne
inc
inc
addb
mov
sbb
fistpll
pop
or
push
aaa
int3
pop
add
push
sbb
popf
sub
cli
ljmp
pop
mov
por
xchg
insb
push
scas
push
jecxz
fmuls
sahf
iret
mov
popa
in
jg
aam
pop
rcl
out
xor
jns
mov
lret
cmpsl
out
movsb
lods
add
lahf
inc
nop
cs
outsb
inc
iret
sbb
cmpsb
pop
fsubs
mov
movsb
mov
jns
lods
mov
scas
cmpsl
jno
pop
mov
rcrb
push
sti
jg
movsl
sarl
sahf
xor
ret
dec
shll
pop
pop
cld
inc
cs
mov
mov
mov
mov
lret
in
ss
mov
pushf
mov
aam
cmp
or
dec
xor
fiaddl
mov
roll
sub
pop
dec
cmpsl
outsl
mov
stc
inc
adc
in
sbb
jl
inc
sub
xchg
mov
push
clc
loopne
dec
xchg
inc
xchg
cltd
cmp
inc
jp
mov
lock
jnp
push
mov
insl
test
cmp
push
cli
pop
sub
pop
loop
cmp
jb
jmp
adcl
and
pop
test
or
or
dec
insb
lods
fiadds
js
mov
xchg
movsb
icebp
and
jge
mov
and
sbb
sub
xor
in
jle
pushf
jno
jae
push
cwtl
sbb
xchg
enter
or
ficompl
insl
and
pop
aad
push
dec
dec
push
aaa
cwtl
nop
pusha
mov
cmp
fisubrs
hlt
xchg
popl
jbe
ret
gs
or
icebp
dec
fnstenv
or
add
je
gs
mov
cs
push
xchg
jns
std
cmp
sti
dec
fstp
pop
cmp
cmc
mov
dec
or
pushf
inc
lods
ja
push
dec
stos
leave
mov
ja
add
es
cmp
and
lret
test
popf
dec
mov
cmp
xchg
cmpsb
xchg
inc
xor
and
fildll
fs
or
cmp
or
mov
add
mov
jmp
xor
stos
jl
rcll
mov
add
fidivrl
jae
xchg
popf
lret
scas
add
stos
clc
xlat
mov
addb
jecxz
loopne
mov
je
aam
adc
aas
cmp
ds
lods
or
aas
enter
mov
and
rcll
incl
pop
les
or
test
aam
fcomip
push
cmpsb
cmc
loopne
mov
stc
pop
lret
sbb
push
mov
call
push
mov
lea
rorl
stc
and
arpl
xchg
out
lds
sarb
dec
jmp
dec
and
orl
mov
mov
pusha
push
cld
push
xorb
xor
das
aaa
inc
xchg
outsl
or
xchg
idivb
pop
mov
mov
lock
add
std
int3
lods
jl
mov
in
or
fimuls
leave
mov
mov
sub
aaa
push
adc
xchg
clc
sbb
jecxz
call
sti
outsl
jge
fisubrs
jp
add
lock
aad
ret
and
ja
dec
pop
mov
mov
lea
repz
jp
dec
mov
aad
xor
jo
pop
jle
add
push
push
lods
insl
pop
fwait
jae
xchg
cli
and
dec
or
mov
push
dec
xor
loop
ss
addb
jno
test
cltd
cmpsl
or
cwtl
cmpsb
stos
lea
orb
dec
enter
or
xchg
lret
pop
sbb
push
and
repnz
push
negl
sahf
cmp
ss
in
push
pop
pop
xchg
lods
adc
out
push
cmpsb
lds
pop
fucom
das
rcl
mov
js
pop
dec
fadds
loopne
xchg
testl
xchg
insb
xchg
fs
sub
rcrb
sub
in
push
sub
leave
fildl
mov
dec
mov
jmp
hlt
imul
shlb
in
fimull
mov
sbb
lahf
ds
sub
mov
sbb
push
addr16
fisubs
enter
xchg
cs
out
xchg
outsl
arpl
popa
lea
jle
push
xor
pop
mov
xorl
andb
pop
cmp
jmp
add
and
mov
pop
cmp
sbb
enter
xor
and
dec
xor
js
jb
xor
mov
mov
sti
scas
xor
cld
sti
pop
test
pop
or
xor
mov
add
mov
cmp
mov
inc
inc
daa
mov
xor
outsl
rcrl
push
jnp
jecxz
cmpsb
pop
mov
mov
ss
mov
xchg
sub
sub
and
imul
jb
sbb
push
loopne
jae
lcall
cmpl
or
or
sub
dec
sbb
les
mov
sbb
out
push
inc
pop
addl
cli
movsb
arpl
addl
pop
bnd
mov
mov
stos
cmp
jg
jo
sahf
fidivrl
mov
inc
stos
mov
bound
pop
adc
leave
dec
xor
cwtl
in
or
ss
cmc
rol
andl
and
lret
leave
out
sub
adc
lret
jp
lods
les
test
mov
xor
add
scas
dec
mov
jo
cmpsb
cmp
aad
in
and
add
ds
iret
adc
fisubrl
stos
shl
int3
xor
call
ficompl
mov
inc
add
xchg
xchg
shll
rorb
jb
dec
or
orl
sbb
js
push
int3
fmul
dec
sub
push
mov
push
inc
dec
in
lods
push
jb
andl
mov
pop
mov
std
sahf
je
cmp
ret
test
fwait
stc
test
popl
inc
and
aad
sub
xchg
data16
pushf
and
test
or
test
adc
mov
lods
sub
stc
rorl
rorb
stc
push
cmpsb
dec
lds
ss
jns
mov
pushf
mov
inc
xor
dec
enter
dec
pop
test
hlt
loope
xor
cmp
dec
and
jae
cld
jl
fisubrl
aam
pop
jae
aad
flds
mov
int
pop
ljmp
pop
sub
cwtl
aam
jae
mov
mov
sub
insb
mov
jp
mov
fsubrs
cld
and
lret
mov
in
scas
pushf
mov
jmp
js
adc
mov
jle
sub
mov
push
or
cmc
fmul
dec
push
xor
sub
fadds
push
aaa
aad
and
xor
in
or
dec
scas
rolb
out
mov
imul
mov
aad
test
fwait
lock
push
aaa
in
dec
xlat
fbld
xchg
in
inc
loope
xchg
push
cmpsb
xor
adc
sarb
xchg
scas
jns
fisubrs
jge
sbbl
mov
test
jae
rorl
pop
aaa
jge
ja
xlat
aad
or
fldenv
test
inc
cmpsb
es
pop
jl
inc
sbb
aad
ja
imulb
adc
cmp
xor
xchg
mov
loope
pop
sub
push
shlb
add
push
jge
nop
roll
scas
into
jg
outsb
popa
sbb
xchg
decl
scas
fstl
bound
add
jb
jp
aam
out
cmp
aas
xchg
cli
sarl
sbb
sbb
mov
cld
sbb
popf
jns
sub
and
sub
movb
add
or
push
rcrl
insb
enter
push
jnp
sbb
push
pop
xchg
jb
popa
adc
iret
ss
mov
lret
sub
push
lods
xchg
sbb
test
arpl
fdivrl
add
push
push
aad
inc
or
test
into
fstl
into
mov
das
pusha
mov
lcall
push
or
sub
adc
fldenv
out
cmp
xlat
add
sub
int
icebp
pop
je
shr
popf
insl
lods
jg
dec
cli
jle
lret
push
pop
outsl
rorl
sbb
mov
clc
shl
imul
jmp
enter
pop
es
cmp
sbb
mov
xor
dec
xor
xorb
jecxz
js
push
xlat
push
push
mov
orb
and
mov
scas
mov
mov
adc
out
mov
cmp
inc
and
xor
fcomp
cmp
fyl2x
xchg
ret
orl
cmp
out
add
inc
or
mov
xchg
into
sbb
out
lods
mov
popl
or
sub
cmpb
loop
push
test
cltd
mov
fdivrs
daa
fidivs
icebp
leave
add
xorl
or
push
adc
mov
mov
fdivrp
xchg
movsb
pop
fidivl
testl
pop
sahf
enter
pop
jle
repnz
lods
cmp
ss
cmpsl
push
btc
rcr
jns
mov
cwtl
inc
insb
in
xchg
cwtl
cmp
pop
lahf
mov
xchg
or
fsubrl
mov
dec
xchg
add
stc
addb
lret
xchg
in
jno
mov
mov
and
dec
adc
ja
cld
mov
dec
insl
lods
ja
outsl
inc
push
dec
enter
mov
lock
jae
es
inc
rcrl
decb
pop
or
cli
xchg
push
cli
pop
pop
mov
sub
mov
out
pop
adc
popf
pop
dec
repnz
mov
jmp
xchg
xchg
enter
enter
jp
pop
mov
push
mov
push
sub
fstps
inc
dec
adc
mov
pop
sub
jmp
pop
push
push
movsl
and
in
repz
mov
add
pop
push
xchg
mov
mov
pop
pop
in
aam
imul
loop
adc
out
jmp
ror
inc
sbb
divb
je
adc
out
mov
mov
lds
cmp
lock
or
decl
incb
mov
push
les
cli
fldt
lds
mov
subb
cld
outsl
mov
das
xor
into
lcall
push
adc
fldt
aad
pop
and
mov
jnp
leave
mov
xor
mov
mov
sub
add
jmp
fldt
pop
jne,pt
mov
loop
push
iret
push
push
jp
adcb
push
lcall
adc
cmp
sbbb
xchg
and
pusha
repz
pushf
cmp
fimull
adc
mov
ss
cmpsl
jg
mov
fsts
xor
inc
or
jae
cld
push
test
jmp
aad
mov
mov
dec
inc
xchg
movsl
or
cmp
or
jb
add
pusha
loop
xor
pop
lret
fsubrl
sub
scas
cmpsb
jg
mov
icebp
ljmp
clc
pushf
lods
fsts
aam
jne
cmc
or
pop
ljmp
inc
rcrb
mov
mov
insl
add
inc
ss
and
jge
mov
mov
xlat
pop
rolb
mov
jle
push
jmp
or
push
push
and
mov
push
lcall
fsts
mov
push
mov
lea
push
inc
fwait
adc
sub
xchg
xlat
mov
fiadds
cld
mov
xchg
jle
add
mov
adc
sub
cmpsl
mov
jecxz
aaa
pop
adc
pop
xor
dec
pop
or
movsb
xchg
popa
mov
add
mov
pop
mov
mov
loop
out
std
lea
inc
adc
cmp
mov
lods
lock
lods
xchg
jmp
adc
repz
popf
cmp
insb
loope
xchg
dec
test
aad
inc
shlb
mov
sub
mov
push
mov
insl
xlat
sbb
push
mov
es
sub
pop
adc
mov
lea
add
add
push
xchg
mov
inc
pusha
adc
sti
lahf
or
xchg
adc
inc
cwtl
jnp
and
xchg
cmp
mov
mov
push
imul
aad
add
mov
aad
test
cmp
jp
mov
adc
aas
cmp
stos
mov
fwait
dec
mov
sbb
sarl
mov
stos
stos
push
pop
outsb
jns
sbb
pusha
andl
push
jmp
stos
xor
hlt
push
mov
cwtl
inc
inc
mov
cmp
iret
enter
int3
sbb
test
inc
test
pop
iret
xor
loope
and
cmc
jl
add
sbb
js
fstl
push
in
cmp
dec
cmpsb
and
dec
bound
sub
mov
popf
push
xchg
sub
and
push
and
lret
arpl
ja
data16
clc
clc
movsl
jne
in
out
sbb
cmp
sbb
pop
xlat
cmp
jg
je
mov
popf
sbb
sub
dec
fneni(8087
notb
mov
inc
push
push
subl
jae
inc
inc
jge
xchg
sbb
inc
insb
imul
xor
repnz
push
mov
lret
xchg
adc
cmp
adc
outsb
pop
push
cmp
jle
outsb
or
ret
leave
mov
int3
push
sub
xchg
dec
repz
pop
xor
testb
lods
rorb
xor
popf
sub
add
mov
stos
mov
jns
adc
push
testl
repz
sbb
jmp
mov
sub
sub
stc
outsb
dec
mov
push
push
cwtl
cmp
add
inc
xor
push
mov
mov
pop
mov
jnp
xlat
dec
pushf
jmp
pop
mov
aaa
lds
jnp
cmc
jb
or
je
push
jge
inc
test
notl
jle
scas
add
nop
fcompl
iret
xchg
fcoms
in
inc
xlat
xchg
lea
out
push
fdivrl
sub
push
push
xchg
jg
or
inc
fisubs
sbb
push
mov
outsb
xchg
fsubrp
fsubr
popw
testb
xor
cmpl
cld
adc
jno
sbb
add
lock
call
mov
sbb
pop
lock
faddp
mov
addr16
add
cmp
push
fistpll
aas
jne
or
and
test
std
push
into
push
sub
cmp
testb
dec
push
daa
jne
popa
mov
sti
test
inc
fs
hlt
xchg
mov
sti
test
daa
data16
stos
loopne
cmpsb
stc
jmp
js
inc
inc
jo
dec
mov
shrb
jge
in
das
sahf
push
subl
push
daa
mov
mov
enter
and
push
neg
aam
test
aas
shr
clc
xchg
sbb
mov
and
pop
stc
incl
xchg
dec
add
icebp
in
mov
xor
movsl
add
lret
pushf
sub
xchg
loopne
loope
mov
loope
insb
xor
xor
or
sbb
fstpl
fsubrs
rorb
cli
jns
push
xchg
jae
in
jp
fidivrl
or
and
pop
cmp
outsl
xchg
add
and
sahf
and
shll
mov
ja
inc
xor
pop
bnd
pop
les
and
in
movsb
rcrl
ljmp
or
cli
inc
js
add
sbb
adc
mov
cmp
and
or
stos
gs
test
stc
push
mov
jbe
cmc
mov
movsb
imul
cmp
dec
or
pop
add
xchg
inc
add
out
push
orb
pusha
insl
frstor
popa
pop
pop
insl
test
and
nop
push
cmpsl
adc
mov
xchg
inc
sbb
inc
or
and
scas
jecxz
xorb
mov
insb
adc
cmp
sysexit
cmp
pop
arpl
in
iret
mov
in
mov
jo
nop
fistl
push
and
into
sub
orl
jecxz
aaa
push
jg
lods
sub
and
jo
inc
dec
mov
cltd
cmp
push
pushf
clc
hlt
int3
xchg
ljmp
data16
xchg
das
popa
imul
shl
pop
outsl
adc
sbbl
loop
xchg
xor
cmpsb
sub
stos
dec
hlt
imul
sub
mov
mov
je
xchg
insl
outsb
mov
mov
hlt
testl
push
mov
xor
xlat
push
loope
shll
xor
dec
sti
or
mov
and
and
subb
andb
sahf
iret
subl
adc
fdiv
push
aaa
dec
fwait
scas
adc
imul
push
negl
mov
xchg
scas
pop
sub
roll
jnp
les
loop
push
mov
lcall
jmp
daa
dec
mov
les
fadds
fdivs
or
push
dec
scas
enter
push
jo
int
mov
cli
sub
fldt
xor
adc
xchg
imul
lcall
popf
add
hlt
mov
jb
dec
adc
xor
out
outsb
xchg
inc
out
xorb
scas
cltd
jns
fbstp
push
jno
ss
fcomi
dec
test
aaa
fs
in
jl
in
lods
fnstsw
push
lods
imul
jb
cld
sbb
inc
shll
out
jmp
push
fidivs
push
cltd
leave
fisubrl
jns
sbb
mov
fstpt
hlt
mov
aad
arpl
xor
sti
out
out
pushf
push
push
jns
jg
cmp
push
cmp
fsubr
ret
test
repz
ja
fwait
loop
xchg
mov
fwait
or
lods
jne
jl
push
jo
idivl
mov
ljmp
sti
fsubs
sbb
push
aas
mov
fld
jnp
push
pop
fmull
divl
dec
mov
sub
ja
mov
adc
inc
cmp
inc
out
jg
daa
or
sub
andb
ficoml
mov
cmpsl
gs
cmpsl
jno
sbb
pop
mov
bound
enter
fisttpll
and
jns
push
std
fidivs
xchg
in
ret
dec
mov
scas
mov
push
jle
cs
or
jmp
push
ljmp
fcomi
shll
mov
pop
push
ret
jne
inc
xchg
cld
mov
out
int3
inc
jl
mov
inc
sbb
out
jnp
mov
sarl
xchg
push
mov
adc
jo
push
ja
pop
jo
dec
fdivrs
sbb
jl
jns
add
lahf
mov
imulb
sbb
ret
mov
cmp
ja
cmpl
add
sub
pop
dec
pop
nop
push
and
xor
or
xchg
push
js
mov
dec
jle
iret
imul
xchg
int
xchg
jb
imul
in
push
cmovne
popf
xorl
fidivrs
xchg
push
dec
or
mov
or
push
je
jae
nop
push
mov
jmp
mov
pop
or
loope
les
in
jg
pop
mov
mov
scas
push
cmp
rcrl
bound
xchg
pushf
sub
jnp
sub
jge
mov
decl
addr16
fwait
mov
mov
sti
popf
aas
push
lods
cmpsl
sbb
data16
mov
mov
push
ret
push
push
mov
nop
ds
push
mov
or
sti
insb
push
adc
mov
xchg
idiv
sbb
cmc
inc
fld1
js
xor
call
inc
inc
in
lahf
xorb
fbstp
dec
test
sub
mov
iret
addr16
cld
mov
loopne
nop
insl
xor
push
imul
and
push
add
cli
imul
je
test
out
and
repnz
and
shlb
jmp
aas
rcll
mov
gs
rcr
sub
loopne
adc
movsl
xor
xlat
test
or
or
ds
arpl
xor
jns
adc
push
add
or
cmp
ficompl
arpl
shl
jmp
xchg
sub
push
lret
sbb
lods
mov
xchg
lret
and
cmp
xor
mov
or
fsubr
aas
bound
and
jp
adc
lahf
dec
aaa
cmp
jle
and
pop
sub
lret
cmp
cmp
and
dec
into
xchg
xor
in
loope
or
jae
xchg
jmp
orb
cmp
test
stc
dec
and
push
aaa
mov
jp
push
outsb
fsubl
addr16
shlb
rorl
into
aam
in
xchg
addb
push
lret
jbe
inc
pop
jne
adcb
repz
sarb
daa
imul
pop
mov
add
cmp
out
shlb
push
test
shr
xor
movl
and
cmovle
push
ret
gs
idivb
test
fistpll
ss
imul
jbe
push
add
xor
mov
jmp
arpl
inc
push
daa
adc
or
imul
in
adc
push
out
pop
adc
arpl
pop
mov
xchg
data16
pushf
fbstp
mov
cld
arpl
mov
cmc
out
and
jle
sub
lods
or
sbb
jmp
xchg
dec
jge
adc
ficoms
ja
push
rclb
add
fcoml
or
idivb
mov
cmp
clc
sub
lret
repz
adc
mov
repnz
mov
add
bound
or
mov
lods
ret
mov
dec
sub
std
sbb
cld
mov
and
pop
popf
mov
and
add
or
push
test
cmpsl
shlb
scas
out
jmp
cmp
pop
inc
jo
inc
stos
lea
mov
xor
icebp
dec
mov
cmp
or
pop
ljmp
cmp
jns
enter
ret
sub
xchg
ret
out
and
mov
mov
adc
xchg
jp
pop
daa
jmp
mov
nop
or
fcmovne
mov
sahf
fisttpll
test
cltd
rcl
add
inc
pop
inc
and
xchg
fdivl
ficomps
xchg
loopne
xor
and
jp
pop
je
ret
lods
pop
mov
inc
mov
pop
cltd
ficoml
jbe
mov
testl
mov
and
in
aad
push
push
sbb
insb
ds
or
lock
adc
mov
sar
dec
mov
cmp
push
sub
inc
jecxz
inc
movsb
mov
pop
lcall
icebp
and
call
or
pop
ret
outsl
mov
lret
shr
imul
enter
sbb
lcall
dec
sti
mov
or
roll
add
xor
adc
xchg
mov
mov
jp
ja
pop
adc
xlat
or
mov
jno
cmpsl
jle
mov
sub
int
mov
stos
cmp
lds
jno
popa
std
iret
je
cmpsb
fidivrl
mov
pop
pop
jae
flds
out
lds
ret
cmp
fwait
sub
daa
call
mov
pop
insl
loopne
cmpsb
out
nop
dec
cmpsl
jne
or
out
cwtl
out
mov
loope
mov
pop
pop
into
fcomip
bound
xchg
inc
adc
mov
arpl
or
cli
add
jmp
sbb
adc
inc
cwtl
add
adc
sarl
test
pusha
xor
pop
lcall
out
lahf
push
jmp
or
out
leave
adc
dec
test
cli
out
add
icebp
sarl
lret
adc
sbb
in
sub
mov
dec
mov
mov
orl
xor
subb
push
push
xlat
mov
rcrb
mov
repnz
add
jl
jno
adc
out
out
sti
loop
in
jae
pop
aad
xchg
cld
and
or
pusha
lcall
mov
fcmovb
inc
sahf
push
out
clc
mov
stos
sahf
mov
mov
jne
int3
jg
lcall
cs
cwtl
testb
pop
sub
lahf
jl
jb
push
and
sub
stos
hlt
sub
in
inc
push
xchg
lret
sub
out
pushf
shrl
add
lret
icebp
cmc
mov
movsb
mov
pop
mov
jns
lds
cmp
ds
and
sbb
popa
add
dec
cmp
jmp
pop
fnsave
mov
dec
aam
aad
mov
mov
cwtl
outsl
out
adc
jge
pop
cli
lock
inc
push
fs
cmp
jle
or
in
data16
add
mov
data16
mov
enter
add
or
addb
sub
adc
mov
adc
jno
mov
mov
add
lea
pop
test
pop
aas
mov
shll
cld
jno
movq
es
aas
insb
cmp
aad
fcmovnbe
lcall
gs
adc
ss
sub
mov
cli
sbb
movsl
scas
pop
out
inc
cltd
das
loopne
cwtl
lods
test
loop
in
out
cs
movsb
test
insb
aaa
jge
mov
das
cld
movl
push
xor
scas
call
jge
push
mov
mov
into
jae
jmp
jge
inc
test
jle
je
pushf
out
std
cmp
add
and
mov
mov
push
mov
push
xor
pop
sub
pop
sbb
and
xchg
pop
rcrl
gs
and
pop
add
cmp
lods
pushf
jmp
mov
mov
xchg
and
aam
aam
lods
sub
int
push
es
pop
dec
ret
xchg
jb
test
mov
mov
aad
mov
je
push
outsl
adc
adc
ds
imul
scas
sti
hlt
call
fsubp
fwait
test
xchg
xchg
pop
hlt
loopne
dec
mov
cs
mov
dec
ds
enter
das
arpl
mov
rcrb
adcb
mov
mov
sub
push
loopne
inc
adc
fcom
push
aad
iret
mov
out
cmp
pop
lea
dec
lcall
jb
sbb
out
rolb
mov
mov
pop
and
cmc
call
insl
push
mov
les
std
nop
lods
or
out
fadd
cmc
sbb
lods
xor
pop
out
orb
cmp
inc
enter
dec
in
push
fdivrs
xor
xchg
aaa
jnp
add
imul
fwait
inc
mov
push
sbb
sti
mov
sti
dec
and
sub
mov
loopne
push
xor
outsb
out
or
or
sbb
insl
jge
mov
jno
rolb
inc
inc
insl
jb
mov
xchg
lahf
mov
push
outsl
mov
sub
adc
jo
sahf
and
bound
pushf
push
sbb
dec
pop
cwtl
fiadds
mov
leave
loop
in
mov
cld
sub
xchg
cs
cmp
ja
mov
mov
or
sbb
or
call
std
in
insb
jae
cmpsb
shlb
mov
repz
pop
xchg
movsb
and
in
push
mov
push
jge
xchg
jne
in
jp
in
ja
sbbb
adc
jmp
fsts
inc
aad
in
jmp
mov
int
cltd
rolb
pop
stos
mov
sbb
jp
fdivs
sub
repnz
dec
jb
and
enter
xor
cmp
or
cmpsb
mov
cli
xchg
pop
mov
push
test
mov
and
dec
sbb
les
fwait
daa
nop
loope
iret
jne
loop
je
test
inc
jnp
js
mov
sar
or
sub
ret
inc
mov
andl
pop
adc
in
repnz
lret
int3
test
enter
fisttpll
leave
lahf
pop
fdivs
xor
test
faddl
push
in
stc
imul
outsl
test
or
aaa
pop
mov
fcompl
out
jle
push
pop
or
lods
fldcw
mov
mov
cmp
divl
test
daa
push
repz
arpl
fnstsw
jp
int
xlat
repz
das
jecxz
jg
in
leave
or
pushf
ljmp
mov
mov
xor
hlt
cmp
int
cmp
les
sbb
into
sbb
add
xor
inc
out
in
mov
mov
mov
dec
es
jl
fcoms
popa
leave
cmp
outsl
fisubrs
mov
xchg
scas
addb
mov
fimull
arpl
push
repnz
sub
sbb
fs
mov
pop
adc
pop
pop
fistps
sahf
into
inc
jl
mov
jmp
dec
ret
mov
inc
jge
inc
es
push
je
add
inc
xchg
lock
jecxz
mov
inc
test
cmp
aaa
icebp
mov
movsl
lahf
lods
xor
ficoms
mov
inc
fadds
cmpsb
pop
push
hlt
jns
mov
mov
loop
lea
mov
aad
mov
ret
push
add
icebp
jge
mov
or
mov
adc
sti
xor
test
jg
xchg
mov
lock
xor
xlat
cld
cs
in
adc
xlat
imull
jno
pop
or
ja
or
xchg
push
fldcw
inc
adc
pop
das
lods
jae
out
outsw
loopne
dec
sbb
and
icebp
popf
jmp
push
int3
inc
adcb
int
repz
or
cwtl
mov
out
sub
repnz
out
lea
xchg
movl
mov
sub
push
jp
mov
mov
push
jb
add
out
scas
pop
aas
insb
stc
fs
mov
mov
adc
xchg
mov
aad
lock
pusha
push
mov
out
add
push
push
loopne
loopne
mov
in
mov
inc
push
xchg
xor
orb
add
dec
and
mov
push
mov
jae
rcrb
mov
fidivs
push
popa
call
popa
and
int
repnz
aas
mov
mov
or
mov
clc
or
xor
outsb
inc
and
xor
cmp
cmp
mov
pop
cmpxchg
jae
les
shrb
dec
xor
push
ljmp
jle
push
loopne
sbb
aas
jo
inc
dec
push
fidivs
jnp
lret
mov
in
mov
daa
push
inc
dec
imul
fmuls
push
push
mov
mov
enter
adc
ret
pop
in
js
mov
mov
pop
insb
lock
sbb
daa
mov
pop
scas
sub
fidivrs
xor
popf
pushf
xor
and
xor
sti
in
xchg
adc
rcll
nop
adc
enter
add
xchg
adc
cltd
xor
les
dec
dec
frstor
je
test
in
cmp
xchg
ljmp
mov
orb
loop
das
add
fsubr
ret
inc
cmp
cmp
sbb
inc
jno
cmp
das
sbb
pop
nop
lds
jle
testl
dec
pushf
and
cmc
adcb
mov
mov
ret
cmc
mov
mov
fistpll
push
pop
idivl
js
xor
ret
push
fimull
jge
sbb
pop
lcall
aad
in
cmpsl
cmp
mov
cli
imulb
dec
and
inc
xchg
lods
std
fwait
lds
imul
fdivrs
stc
jg
and
test
or
adc
dec
mov
jp
enter
adc
rcrl
jae
out
sarb
pop
fs
sbbb
fdivl
jno
push
jno
xchg
out
adc
lret
aam
mov
add
in
rclb
scas
icebp
xchg
sub
and
clc
and
dec
iret
data16
push
in
add
loop
inc
addr16
xchg
push
mov
das
pop
mov
je
je
pop
inc
lret
repnz
clc
es
adc
ret
jnp
mov
jnp
xchg
bound
mov
mov
popa
in
cmp
mov
std
stos
dec
or
mov
jg
inc
lret
shrb
dec
pop
rcrb
jg
sbb
lcall
push
sub
cmp
pop
divl
adc
int3
inc
cli
add
mov
scas
test
fsubrs
fcmovnb
cmc
call
jl
mov
inc
and
repnz
jecxz
iret
lahf
test
leave
lock
adc
movsl
inc
addl
push
cwtl
imul
addl
inc
in
shlb
addr16
push
jns
mov
stc
pop
adc
mov
or
shlb
add
sbb
jg
lcall
push
pop
cmp
pop
jae
or
xchg
je
hlt
aam
or
mov
fstps
lods
mov
mov
popa
xchg
js
jno
out
or
stc
push
jb
shrb
pop
sub
or
fldt
add
pop
or
scas
popf
mov
les
fucomi
enter
and
je
daa
nop
shll
adc
xor
notl
xchg
adc
inc
mov
or
nop
cltd
fisttpl
je
xor
dec
pop
lods
inc
andl
icebp
repz
cmp
test
ror
mov
xchg
xor
outsl
or
std
cli
lret
movsb
in
adc
cs
mov
mov
push
mov
xchg
out
mov
xlat
add
pop
or
loopne
mov
fisubs
nop
xchg
fwait
jnp
jb
pushf
add
cmpsb
data16
popa
add
rcr
sti
mov
pop
jg
aas
push
test
pop
std
inc
cltd
data16
sub
xor
clc
mov
les
lods
add
rol
mov
call
jmp
test
adc
mov
mov
mov
into
sti
lret
loop
xor
incl
mov
sbb
call
push
jmp
addr16
dec
adc
push
hlt
jne
out
outsb
das
jl
cmp
pop
out
imul
ficomps
inc
nop
jp
pop
cwtl
test
sbb
and
xchg
xor
imul
jb
out
shll
dec
mov
fbstp
shrw
ss
addb
mov
xor
xor
jo
pop
cmpsl
js
sub
ss
movsl
or
sub
scas
xchg
push
mov
mov
mov
jno
imull
jno
pop
cli
cmp
into
dec
pop
jae
movsl
add
mov
push
das
fisttps
add
add
lret
jecxz
stc
jl
mov
or
test
sar
sahf
ret
lcall
test
inc
and
pop
inc
push
icebp
subl
ror
mov
pop
cmpsl
aad
cmc
out
aas
fsubrl
in
mov
insl
daa
mov
ret
sub
rcll
cmpb
sub
daa
and
les
inc
out
lret
adc
scas
dec
loop
xor
adc
and
sbb
xchg
push
pop
sahf
fnstsw
sbb
cmp
add
fcmovnu
int3
mov
mulb
repz
add
popf
xor
shl
xchg
aad
test
out
jg
cld
pop
lcall
imul
test
jbe
std
xchg
add
in
mov
pop
mov
sbb
or
dec
cmp
cld
movsl
adc
lods
inc
pop
cmp
stos
pusha
and
imul
lds
mov
mov
mov
stos
xchg
xchg
aad
inc
pushf
int3
lock
add
xchg
push
ret
xchg
mov
dec
sbb
adc
push
sbb
lret
mull
cmp
cmp
xchg
mov
popf
pop
cmc
mov
inc
in
pop
jecxz
dec
mov
push
sbb
sub
ror
cmp
jl
fsubrs
push
adc
aaa
dec
shlb
cmpsl
inc
mov
sub
insb
fnsave
cmp
cmp
dec
or
sbb
adc
mov
aaa
aam
fnsave
cmc
push
mov
in
jp
decb
sub
xchg
out
and
andb
mov
cltd
inc
dec
sub
mov
and
fcompl
enter
push
jle
or
stc
notl
ljmp
cmc
mov
adc
push
int
xor
cmpl
dec
das
inc
fcomi
jmp
jl
cs
pop
jae
mov
dec
mov
jecxz
rcr
stos
testb
lock
or
adc
adc
push
lods
push
or
int3
in
cmpsb
push
mov
xchg
stos
imul
lock
incb
dec
imul
iret
push
add
pop
ss
pop
mov
int
add
mov
mov
jbe
push
mov
mov
add
aad
jle
pop
add
roll
jb
sbb
mov
mov
loop
popf
cwtl
mov
lea
cmc
mov
fisubrs
lret
inc
pop
sbb
or
cmpsl
xchg
jae
mov
xlat
xorl
or
mov
jle
adc
clc
rclb
adc
dec
pop
mov
mov
ret
shrb
push
push
push
adc
jb
and
push
imul
loope
enter
into
inc
shrb
push
call
cmpsb
cli
lea
rcr
inc
mov
scas
inc
or
sbb
inc
mov
stos
cwtl
mov
dec
std
scas
xor
pushf
arpl
adc
arpl
adc
add
sub
shrb
in
push
roll
xchg
movsb
sti
jns
cmc
and
js
sub
fcompl
fists
insl
ljmp
sti
dec
sti
mov
push
clc
pop
or
cmp
adc
inc
call
into
stos
jg
xchg
cltd
dec
xchg
shll
cmpsb
jmp
test
jb
push
aam
adc
cmp
xchg
add
xlat
pop
add
sbb
or
pushf
push
pop
or
xor
add
outsb
data16
sub
mov
iret
dec
pop
cmp
adc
mov
movsl
das
inc
sbb
cwtl
rorb
loope
fistpl
ret
jnp
clc
and
sub
pop
or
push
stc
insb
cmpsl
int3
push
cmp
push
sub
je
sbb
imul
clc
push
sbb
into
mov
outsl
push
out
and
pop
mov
lahf
repnz
scas
setno
or
dec
dec
xchg
jb
incb
add
dec
call
mov
mov
mov
lret
jmp
mov
mov
shrl
stos
and
add
arpl
xor
xor
fmuls
inc
inc
test
int3
movntq
ret
xchg
sbb
scas
bound
loopne
xor
pop
test
lods
adc
imul
inc
mov
movsl
inc
pusha
xor
xor
je
lock
adc
mov
add
lahf
fdivrl
in
push
inc
mov
sbb
jo
add
mov
add
mov
push
lcall
xchg
adc
test
sbb
fldenv
or
jnp
mulb
xlat
in
jg
xlat
push
loope
mov
movsb
ss
lcall
jb
addb
xchg
fisubs
faddl
lahf
mov
or
pop
add
and
ret
mov
xor
fsubrs
jne
loop
sbb
sbbb
sub
dec
leave
pop
lahf
add
lods
testl
lcall
mov
inc
xchg
test
xor
mov
imul
aad
inc
jl
xlat
lahf
repnz
mov
nop
pop
pop
push
mov
imul
inc
fs
aas
shll
jmp
pop
cmc
jbe
or
mov
decb
sbb
sub
mov
sub
cld
inc
sbb
sub
inc
xchg
fnstcw
mov
ds
cmp
push
sbb
repz
pop
shll
sarb
dec
pop
shlb
xchg
pusha
cmp
std
rol
jnp
test
jle
scas
jae
jle
cwtl
adc
add
mov
imul
mov
inc
jnp
cmp
scas
push
imul
aad
sbb
or
mov
clc
outsl
mov
mov
mov
test
jo
push
clc
and
and
mov
mov
mov
inc
enter
push
jecxz
xchg
shlb
bt
test
lods
fdivrl
fildl
js
mov
inc
push
movsb
sbb
pop
sbb
int3
mov
ljmp
inc
lea
ja
cmp
inc
cmp
movsl
push
dec
xlat
cld
push
scas
mov
pop
pop
scas
push
cmp
sub
inc
and
pusha
mov
scas
fiadds
mov
xchg
andb
inc
ljmp
pop
and
xchg
add
inc
lahf
inc
icebp
ret
sbb
jbe
jge
push
pop
dec
cli
mov
mov
mov
incl
pushf
stc
push
cmp
dec
xchg
aas
pop
lcall
pop
sarb
popa
cmpsb
imul
sub
and
push
ficoms
into
add
mov
jle
sahf
xor
xorb
lock
mov
mull
in
jge
test
jo
sbb
fbld
std
and
pop
cs
cmp
fwait
int3
rcrl
mov
add
jle
lods
negl
sahf
push
adc
mov
loope
mov
shlb
sub
sbb
popf
fwait
push
out
cmp
xchg
jb
daa
sub
pop
mov
jae
stc
sub
adcl
gs
lds
jmp
push
loope
ja
pop
inc
or
add
mov
mov
cmpb
out
mov
rcrb
pop
adcl
dec
shlb
out
dec
mov
repnz
aaa
inc
cmpsb
lcall
out
and
insl
mov
sbb
mov
pop
cmp
in
or
clc
adc
ds
inc
sahf
adc
and
dec
cmp
and
enter
cmp
inc
dec
add
fimuls
jecxz
lcall
aaa
and
sbb
sahf
cmc
mov
inc
or
inc
std
loop
add
adc
insb
je
cmp
push
add
inc
ds
sti
out
adc
mov
jbe
jns
push
xchg
mov
mov
bound
cmpsb
fdivrs
outsb
pushf
lcall
iret
stc
jbe
mov
xchg
andl
shr
push
bsf
or
lret
jbe
sub
dec
adc
xchg
lods
lahf
in
and
in
push
xchg
dec
adc
mov
jns
sub
xchg
stos
addr16
in
das
out
inc
or
cmc
iret
adc
imul
lea
mov
inc
mov
pop
jg
sbbl
into
push
add
add
mov
dec
hlt
cmp
sar
nop
sbb
arpl
out
pop
xchg
mov
ret
push
in
push
and
enter
cmc
out
or
pushf
out
scas
add
inc
je
and
mov
lret
je
and
js
jle
dec
sub
cmp
adc
faddp
xchg
or
inc
adc
lea
sub
jo
mov
ja
inc
add
in
pusha
jp
jbe
mov
xchg
fnstenv
mov
add
mov
inc
jae
dec
mov
mov
js
push
ds
cld
jno
push
lods
xlat
testb
pop
xor
sub
cli
mov
orb
fs
sahf
mov
arpl
dec
cmp
sti
or
negb
pop
or
insb
fcmovnu
push
xor
jmp
test
nop
lahf
idivl
jns
dec
ret
loopne
sbb
jle
repz
arpl
mov
test
jo
xor
adc
fists
mov
jo
pop
aaa
lahf
cmp
push
sbb
jle
rorl
gs
leave
js
fnstsw
test
jle
xchg
rolb
out
rcrl
adc
xlat
push
fidivl
sub
cld
cmp
pop
sub
jmp
dec
cmp
pop
adc
pop
dec
mov
bound
xchg
mov
aaa
pop
dec
mov
sti
cmp
or
mov
adc
cmp
leave
pop
push
xchg
data16
mov
mov
cmp
data16
jb
or
es
fcomps
sbb
out
mov
dec
push
sub
cld
mov
jge
imul
and
lret
orb
jne
int3
or
inc
aaa
mov
fidivrs
inc
shll
cmp
push
jmp
fs
outsl
xor
lea
lret
call
mov
imul
loop
cmpsl
mov
xchg
shr
pop
sbb
pop
fldt
pop
shl
mov
outsl
jge
adc
inc
addb
lcall
or
xchg
xchg
fmull
loop
xchg
pop
fnstenv
mov
mov
jne
pop
or
mov
push
nop
pop
lods
push
or
xchg
push
arpl
mov
mov
pop
mov
sub
orb
movsl
and
flds
ret
or
in
fwait
or
mov
aam
and
fcompl
sub
insl
and
movsb
lahf
cmovg
dec
add
cmc
repnz
mov
scas
repz
jo
ret
add
xor
push
pop
in
lret
fldcw
sahf
cmp
xor
pop
cmp
mov
push
push
psrlw
mov
fsubrs
xor
jge
ja
cs
ss
popa
negl
jecxz
mov
pop
aad
pop
add
jp
hlt
insl
shl
test
sbb
scas
mov
pop
aad
jne
into
jl
pushf
or
or
lahf
push
setl
dec
pop
test
sub
ds
push
subb
btsl
cmp
adc
xor
pop
push
jp
testl
loop
mov
bound
aas
or
pop
mov
outsl
and
mov
stos
jbe
stos
push
xchg
mov
add
mov
inc
push
pop
es
sti
adc
lods
loope
pop
cmp
hlt
mov
inc
xchg
adc
mov
sbb
mov
jns
testl
nop
xorl
xchg
addr16
lea
nop
bound
jnp
pop
das
xchg
or
xchg
imul
cs
xchg
mov
push
push
imul
sbb
pop
lret
fdivrs
sbb
fidivs
adc
js
cmp
inc
sub
lods
andb
iret
mov
pop
daa
aam
pop
insl
aas
shll
adc
pop
mov
sbb
mov
sub
push
lret
int3
jge
hlt
daa
sbb
dec
add
mov
decl
fdiv
xchg
mov
mov
jmp
rorl
mov
inc
add
cmp
dec
fdivrs
cmp
inc
xchg
movsl
or
mov
xchg
dec
inc
pushf
fldt
call
ljmp
retw
dec
mov
int
add
out
aad
dec
movsb
out
in
fcompl
jbe
fs
mov
repnz
js
sub
cmp
rcll
cmp
sti
test
jbe
jno
xchg
mov
out
lahf
mov
mov
in
and
out
xor
cltd
arpl
and
xchg
add
mov
out
adc
dec
add
stc
pushf
add
out
stc
lea
jo
or
fbld
dec
xchg
add
test
stos
jl
jbe
mov
and
ja
movsb
mov
repz
adc
or
idivl
or
lods
mov
std
pop
xor
add
mov
lret
sbb
pop
es
rcrb
ret
jmp
lret
sbb
out
or
jle
or
fst
negl
stc
lds
pop
in
push
push
stos
std
lods
or
loopne
and
daa
ds
hlt
cltd
dec
sbb
cmp
mov
cld
push
les
lret
adc
outsl
imul
into
cmp
sbb
pushl
lea
mov
orps
in
mov
arpl
sarb
jbe
test
insb
push
shll
sub
cmp
mov
into
pop
mov
pop
mov
cmp
jge
lcall
adc
ljmp
int
xchg
push
movsl
jmp
push
sti
dec
push
scas
cmp
pop
mov
test
lahf
insl
add
xchg
inc
mov
mov
xor
test
outsb
sbb
xchg
sbbb
sti
cmc
sbb
mov
mov
jne
movsl
and
ja
jge
out
nop
or
shlb
stos
push
push
inc
xchg
lcall
mov
pop
arpl
sbb
xor
or
aaa
ss
scas
xchg
or
add
push
shll
out
je
sbb
and
ljmp
sar
jge
bound
ss
lret
and
mov
cmpsl
inc
push
lea
int
inc
movsb
lret
adc
lods
shr
xchg
add
xor
pop
orl
pop
xor
mov
mov
xor
inc
dec
fwait
dec
pop
push
out
jnp
mov
clc
mov
fistpl
stos
mov
in
inc
imul
out
je
sub
xchg
push
xor
and
mov
pushf
jmp
aad
jle
pop
fisttps
cltd
or
aad
pop
ljmp
sbb
clc
pop
add
sub
pop
pop
sbb
outsb
aas
fiaddl
mov
cmpsb
stos
add
pop
insl
mov
fisubs
xor
lock
pop
jns
scas
rolb
stos
mov
jns
enter
iret
push
push
pop
sbb
push
enter
test
fsubp
daa
mov
mov
mov
adc
lock
xchg
mov
jne
mov
adc
data16
ret
or
jg
ficompl
sbb
mov
out
mov
and
test
and
rcrl
jbe
jge
jb
xlat
adc
scas
and
inc
out
gs
test
addr16
or
xchg
mov
pop
icebp
pop
push
mov
out
jge
adc
addb
lock
xor
cmp
imul
and
hlt
imul
imul
loopne
dec
ret
out
scas
fs
in
mov
jns
pushf
aad
cmp
pop
out
aaa
ret
mov
xor
ret
inc
lahf
ror
cmp
mov
ljmp
mov
jmp
fistpll
jmp
cmp
xor
arpl
lret
mov
xor
loop
lret
fstpt
iret
ret
sub
repnz
push
adcb
pop
mov
pushf
add
push
and
pop
ljmp
lods
aam
aaa
das
jmp
lock
mov
adc
mov
out
and
inc
cs
sbb
pop
cmp
hlt
into
fistpll
push
stc
data16
sbb
std
nop
aas
cmp
stc
jno
shlb
repnz
mov
jmp
inc
pop
inc
inc
jg
idivl
mov
subb
inc
loope
mov
popa
jae
lahf
fdivrp
xor
cmp
mov
subw
hlt
add
loop
adc
aas
ret
cltd
dec
mov
in
dec
outsb
sub
or
cmp
fmull
test
jmp
ljmp
xchg
xchg
fildl
mov
ljmp
mov
mov
lea
in
mov
xchg
enter
mov
lods
bound
mov
iret
repz
xor
js
stc
out
sti
push
lahf
test
pop
inc
pop
fstpl
je
in
call
outsb
mov
dec
jno
push
nop
ret
mov
shrl
jno
sub
daa
into
lods
popa
movsl
in
sbb
and
cmpsb
mov
enter
enter
push
xor
jle
xor
movsl
xor
xor
mov
lret
je
mov
cmpsb
pushf
stos
cmp
cmp
xor
aam
and
gs
sub
arpl
into
inc
in
cmp
and
adc
in
mov
push
ljmp
lea
stos
mov
movntq
out
xchg
out
ja
in
fwait
in
add
lcall
cmpl
and
push
add
clc
out
adc
lock
icebp
or
pop
push
pop
sbb
loope
sbb
mov
repnz
lds
mov
xchg
mov
dec
sub
test
stc
push
aam
dec
sti
rcrb
mov
sbb
mov
out
fists
rep
jl
jmp
aam
jb
jae
ljmp
inc
push
rcrl
add
insb
cmp
pop
xchg
mov
cld
jae
sbb
iret
sbb
or
inc
jno
and
enter
or
push
push
push
inc
lret
xlat
pop
subb
int3
adc
int
xchg
add
arpl
cmpsl
sbb
movsb
clc
int
push
pop
lds
mov
mov
outsb
mov
mov
imul
dec
cld
arpl
inc
jo
int
in
cmpsl
push
push
lahf
mov
jl
pop
push
test
js
xchg
add
pop
or
cmc
mov
xor
je
jno
movb
int3
jo
sub
cmp
mov
fdivrl
jae
lret
aas
sahf
insb
stc
cli
test
mov
adc
int3
xor
adc
lds
jno
ds
out
mov
and
pop
mov
push
xchg
sti
jp
in
stos
and
mul
adc
out
ja
stos
les
pop
ljmp
popa
fsubl
or
push
lret
stos
clc
sbb
aad
jl
xchg
dec
adc
push
fisubl
loop
push
sub
cli
mov
jnp
xchg
push
aam
lods
push
iret
lret
xor
aam
je
in
aaa
inc
sub
push
lods
mov
sub
pop
cmp
xor
add
lret
lcall
and
int3
push
xor
cmp
mov
jns
xchg
push
ja
cmp
dec
pop
out
push
loope
sub
popa
adc
and
mov
mov
in
fs
lds
pop
out
mov
push
jmp
divb
jns
pushf
out
push
lods
sub
xchg
jecxz
inc
or
mov
leave
cs
adc
into
ja
ret
push
mov
or
and
lcall
scas
push
icebp
sub
mov
out
test
xlat
or
add
mov
insl
pop
mov
out
cmpsb
inc
outsb
nop
dec
aaa
leave
mov
ss
stc
movsb
inc
xchg
stos
jg
aam
outsb
lret
aam
mov
lahf
jecxz
das
dec
lea
dec
sbb
stos
bnd
mov
sbb
test
add
sti
and
mov
inc
rcll
loope
fsubrs
ret
jg
fdivrl
into
scas
dec
in
mov
fs
data16
mov
shrl
adc
and
pop
push
les
stc
pushf
cmp
shl
scas
subb
out
or
xor
inc
add
jo
inc
mov
cmpsl
mov
mov
and
test
loope
or
lcall
test
ret
jl
arpl
pushf
popf
sub
fs
lock
cltd
out
fs
xorb
movsb
ret
js
mov
shlb
out
imul
lahf
stos
xlat
jns
push
jo
ficomps
hlt
add
sub
outsl
xchg
xchg
nop
fmuls
push
xor
lock
lahf
mov
jp
in
arpl
outsl
sub
scas
cs
inc
in
pusha
or
cmp
jg
pop
and
xor
dec
add
insb
cmpsb
stos
mov
movsw
pop
push
aas
push
xlat
or
mov
pcmpgtd
scas
or
mov
aas
in
xchg
loope
xchg
repnz
stos
ss
add
dec
pop
mov
pop
pop
lods
popf
adcb
and
inc
rorb
stos
mov
sub
and
mov
shll
or
add
cmp
enter
sub
fcmovu
out
fwait
xorb
inc
push
mov
out
fmul
add
lods
popf
dec
xchg
and
sarl
xorl
xlat
jns
fst
xor
std
xlat
inc
push
imul
aaa
in
sbb
mov
jle
xchg
cmc
xchg
dec
xor
test
notb
popa
gs
mov
mov
dec
je
sbb
xchg
add
mov
cs
xor
jmp
repz
cli
mov
scas
dec
notl
movsl
adc
hlt
jecxz
lds
mov
adc
stc
xor
daa
test
fadds
pop
dec
ja
lahf
mov
cmpsl
xchg
jbe
push
ss
or
mov
jb
in
sub
xchg
cltd
nop
movb
mov
mov
pop
cld
lcall
pop
or
mov
xchg
adc
sahf
arpl
and
rorl
mov
lret
sub
cmc
popf
sbb
js
mov
jno
dec
or
push
addl
inc
in
ficomps
mov
data16
mov
out
in
jmp
or
cmp
addl
jne
test
xchg
jge
insl
test
dec
out
ja
pop
fcmovb
xchg
shrl
sub
push
ja
fisttpll
sub
clc
mov
imul
jge,pt
fsub
sbb
sub
stc
xor
cwtl
dec
clc
daa
in
popf
es
inc
push
xchg
mov
out
loop
dec
sar
sub
mov
cs
mov
mov
sti
test
and
dec
xchg
subl
data16
aaa
lock
mov
std
sub
ja
xchg
sti
aas
test
dec
xorb
mov
lods
outsb
ds
inc
cld
cwtl
sti
loop
mov
dec
jo
mov
xchg
or
mov
sbb
sbbb
sub
aas
sbb
cld
sub
inc
pop
inc
pop
pop
and
or
addr16
popa
cli
in
loope
push
inc
popf
adc
xchg
xor
aad
and
adc
aad
mov
scas
push
scas
enter
stc
dec
adcb
shrl
jne
pop
xchg
adc
mov
dec
add
shlb
dec
mov
daa
fstpl
xor
lea
js
popf
stc
xor
add
push
clc
mov
xchg
pop
movsb
repnz
sbb
jle
mov
out
test
in
dec
jp
or
mov
xlat
mov
add
std
leave
stos
fildl
jb
shrb
divb
test
pusha
jg
std
pop
hlt
loopne
aas
insl
leave
test
pop
mov
lahf
fstpl
mov
ret
xchg
add
cmc
sarl
lods
or
cmp
mov
ds
push
pop
or
jl
popa
shrl
loope
mov
push
sti
aas
pop
movl
in
rcrl
addr16
jle
ds
sahf
mov
stos
into
dec
bound
jns
push
in
js
pop
add
adc
push
lcall
test
pop
mov
jle
mov
add
push
add
cmp
xor
add
addr16
mov
jle
in
add
test
out
loopne
and
cmpsb
icebp
fidivs
fnstsw
inc
imul
fidivrl
push
inc
dec
inc
and
push
js
add
pusha
je
sbb
test
lret
test
fnstcw
dec
ret
cmpsb
outsl
jns
mov
movsb
mov
leave
inc
jmp
mov
mov
fsts
push
or
pop
xorl
fcmovnb
pushf
inc
popl
mov
notl
mov
outsb
aam
cmp
push
in
add
push
call
push
dec
add
inc
call
bound
int
or
decl
rcr
popa
cmp
fs
push
mov
fmull
ljmp
fbstp
loope
push
les
cli
push
push
push
pop
sbbb
dec
negb
xchg
roll
lds
mov
and
mov
jge
xor
test
lea
addr16
pop
int3
sub
icebp
aam
test
loope
ficoms
push
push
out
adc
int3
dec
xchg
add
cltd
cmp
cltd
sbb
mov
hlt
push
mov
sti
cltd
repz
dec
call
int
pushf
mov
bound
pop
add
leave
mov
push
ja
jge
sbb
cmp
out
mov
sahf
imul
inc
test
jne
fs
aad
test
push
sub
sub
mov
rol
push
test
xor
testl
dec
jae
inc
xchg
jae
sahf
sbb
es
jne
call
mov
outsl
xchg
cld
jbe
hlt
cwtl
mov
pop
mov
xchg
aas
mov
push
repz
loopne
hlt
aad
data16
out
icebp
or
and
sbb
hlt
cmc
addr16
mov
bound
mov
pop
pop
test
roll
jns
and
aas
test
add
mov
pop
scas
jecxz
push
adc
mov
jae
lcall
xor
mov
mov
and
sbb
push
ret
add
pop
dec
mov
outsb
arpl
ret
push
cmp
and
int
xchg
ja
iret
or
or
lcall
mov
adc
out
hlt
or
sbb
popa
std
fsubrs
xor
ret
jmp
mov
fldl
addb
lods
fistps
add
fadds
movsb
movsl
mov
shlb
inc
movsb
mov
loopne
std
ds
mov
mov
pop
sub
int3
lret
cmp
push
inc
fistl
test
rcl
add
xor
fsincos
data16
xor
add
jg
cmp
sub
shlb
mov
int3
fiadds
jl
sub
inc
jle
mov
aaa
shrb
inc
cmp
mov
mull
cltd
adc
or
inc
push
push
inc
push
xor
cmp
cs
pop
add
sub
push
dec
adc
adc
test
push
cmp
das
sbb
test
rolb
icebp
aam
xor
cltd
mov
rol
xchg
je
std
mov
and
sub
iret
iret
stos
mov
inc
add
sbb
jle
js
loop
inc
sbb
sub
push
fnsave
jbe
imul
push
sti
cmp
pop
and
dec
sub
mov
push
sti
cmc
xchg
repnz
rol
int
call
outsb
jae
and
inc
mov
cld
test
xchg
fwait
push
clc
in
add
sbbl
push
mov
mov
xor
vpaddsw
aas
and
inc
divl
fidivrs
adc
and
outsb
cmpsl
push
push
inc
insl
loope
mov
sub
cmpb
mov
aad
adc
cmp
xchg
test
xchg
sbb
cmp
scas
and
out
pop
je
jecxz
les
push
jl
loope
dec
adc
insl
or
jae
insl
test
cmp
sub
jmp
pop
mov
add
dec
and
in
pop
sbb
or
jecxz
movsb
cmpsl
inc
test
aad
ret
dec
ds
jne
xchg
and
rolb
adc
jge
lcall
xor
mov
cli
xchg
xor
enter
mov
jns
mov
add
test
insl
rcrl
stc
fdivs
cmp
addl
fdivs
sahf
cmpl
int3
push
cmpsl
jmp
cli
lods
cmp
pusha
fs
mov
pop
add
jb,pn
pop
fadd
into
xor
xchg
xchg
xchg
int3
adc
cs
shr
imul
dec
add
mov
movsl
cmp
and
or
in
jg
inc
inc
gs
xchg
mov
fistps
pop
movsl
xorl
mov
daa
scas
out
leave
inc
lahf
xchg
ret
insl
xor
shrb
sahf
mov
xor
stos
movsb
sbb
xchg
pop
cwtl
cmp
sub
sbb
incb
ror
mov
xchg
into
aam
sub
fiaddl
and
imul
sub
and
inc
popa
xchg
ja
repnz
sbb
mov
push
dec
rolb
pop
outsl
movsb
test
adc
mov
push
out
push
mov
imul
rcl
leave
push
hlt
cwtl
outsl
test
dec
mov
cmpsb
test
xor
in
ja
jmp
mov
push
xchg
inc
gs
lds
pop
sahf
mov
cld
fwait
mov
sbb
mov
pop
in
es
in
aad
mov
and
in
cwtl
stos
popf
and
fdivr
fstpl
fildl
mov
clc
jns
dec
sahf
cmp
cli
and
icebp
push
jae
cmc
dec
ficompl
cmpsl
pushf
sbb
sub
and
add
lea
add
xchg
js
fcomps
ljmp
xchg
xchg
inc
pop
and
subb
data16
mov
pop
push
mov
or
outsb
mov
sysexit
clc
jb
mov
scas
fsts
dec
xor
jns
cmpsl
adc
mov
xchg
sbb
lret
jp
fnstcw
jle
xchg
xchg
push
pop
cmp
orl
cwtl
nop
mov
xor
lock
clc
push
out
jl
xchg
mov
xor
mov
xchg
mov
shr
fbld
sahf
ljmp
lds
inc
push
cwtl
add
cmpsl
pop
mov
mov
pop
addb
mov
stos
pop
loopne
hlt
add
fnstsw
add
outsb
add
sbb
js
es
push
movsl
push
xchg
or
mov
es
dec
jmp
cmp
xor
out
das
test
or
xchg
mov
daa
inc
std
fcomip
xchg
ss
adc
jbe
addr16
mov
notb
push
push
mov
iret
fs
lods
xacquire
divb
mov
inc
mov
sub
pop
mov
dec
mov
scas
arpl
sbb
push
push
and
mov
and
in
lar
in
lods
xor
xor
repnz
or
imul
mov
sar
inc
push
add
cmp
divb
loopne
push
addr16
cli
cwtl
repnz
lock
ret
jecxz
mov
aas
mov
lret
xchg
mov
ret
out
cmpsb
loopne
sbb
mov
mov
fstpl
test
rdmsr
push
xchg
jne
sub
cwtl
sub
mov
fcmovbe
pop
loop
div
sub
adc
call
lcall
fs
push
sub
jae
ds
addr16
data16
lods
mov
xor
jmp
fisttpll
aaa
les
push
dec
sti
call
mov
add
and
cmp
and
cmp
mov
sbb
sar
add
or
ja
pusha
icebp
sub
pop
mov
mov
mov
pop
xchg
cld
sbb
cmc
xor
push
jp
dec
jp
lock
pop
movsl
add
inc
pop
aad
mov
dec
dec
sbb
movsl
test
jp
iret
inc
xchg
stc
xlat
cmpsl
repnz
cltd
out
xchg
jae
mov
ret
es
inc
mov
cmp
mov
xorb
or
sub
xor
shrb
cmova
arpl
std
xchg
and
cmp
flds
xor
xor
mov
xor
outsb
jle
ja
sbb
fsubp
mov
stos
push
lods
ret
and
xor
popa
pop
mov
icebp
mov
cmp
popf
addr16
xorl
or
mov
or
push
cld
insl
jns
jae
ss
inc
mov
jne
nop
push
jnp
sbb
add
daa
lds
or
dec
aaa
mov
and
lods
add
fxam
mov
les
push
sub
lods
leave
push
sub
das
push
pop
jg
loop
shll
pop
mov
clc
or
add
icebp
and
pushf
sbb
push
aam
xlat
push
ljmp
nop
push
push
lahf
test
xorl
icebp
jecxz
movsl
add
pop
mov
or
ss
inc
xchg
dec
xchg
fildll
dec
sbb
cld
adc
fdivl
cltd
or
mov
pop
mov
add
js
cmp
cmc
call
lds
arpl
mov
jae
dec
jae
outsl
and
cmp
sbb
mov
std
cltd
data16
ret
jg
add
or
inc
jb
lds
fs
addr16
loop
push
lods
or
and
scas
shrl
int3
in
in
xor
sub
jb
jge
inc
rorb
mov
xchg
dec
cld
mov
add
repnz
cmp
sarl
jmp
movsl
push
test
cltd
inc
fcomip
mov
stc
shrb
dec
test
xor
mov
pop
sbb
dec
int3
les
add
gs
jnp
add
mov
jmp
xor
xor
cmp
aam
data16
bound
cmp
out
fucomip
mov
sbb
xchg
bound
ret
add
int
and
sub
jnp
pop
mov
daa
clc
das
mov
push
pop
aam
scas
scas
mov
sub
xor
jne
popf
jno
dec
ja
jp
dec
dec
imul
cmp
inc
aad
es
xchg
push
xlat
or
in
xor
cmpsl
mov
out
lea
xor
movsb
shlb
cltd
sbb
ja
cltd
xor
cmp
in
adc
push
pop
adc
arpl
js
cltd
add
inc
mov
lcall
cld
xchg
inc
xchg
mov
stos
addl
add
cmp
pop
nop
int
xchg
pusha
divl
pop
mov
mov
dec
dec
push
nopl
call
mov
sbb
fldt
or
and
mov
popf
dec
imul
aad
cmp
sub
loop
jbe
aas
push
ror
les
push
mov
aam
xor
mov
call
inc
push
addr16
jbe
push
mov
or
sub
or
mov
cmp
mov
or
movsl
jge
in
int3
cmpsl
std
xor
in
pop
aaa
dec
fs
pop
or
sbb
or
stos
jle
pop
inc
int3
add
es
or
sarb
sbb
push
dec
in
jmp
pusha
imulb
sbbl
sti
enter
sbb
adc
int3
jnp
sbb
add
mov
adc
pop
jns
insb
mov
jmp
aam
pushl
pop
sbb
js
pusha
shlb
or
test
cmp
pop
mov
fidivrl
cmp
inc
lds
nop
xor
aas
enter
push
push
add
or
sub
mov
mov
cli
adc
push
dec
mov
int3
je
mov
xchg
jg
xchg
leave
nop
das
mov
fildll
push
je
loop
dec
cmp
lock
pop
inc
inc
loopne
add
and
dec
popf
call
ljmp
adc
outsb
push
dec
cld
and
imul
mov
cltd
popf
dec
sbb
mov
pop
push
mov
jbe
pop
push
aam
pop
mov
mov
push
push
dec
out
je
inc
and
xchg
dec
jp
fimull
pop
sbb
inc
xor
sbb
pop
push
inc
ss
mov
je
icebp
sbb
xorb
push
inc
std
fsub
cltd
dec
stos
push
mov
mov
lret
pop
mov
mov
in
cmp
mov
sub
pusha
fwait
jo
je
xchg
push
cmp
nop
jl
push
jb
nop
shl
sub
sbb
inc
stc
sbbb
rcrl
xchg
dec
call
jmp
push
addr16
adc
mov
aam
sbb
sbb
mov
iret
outsl
xor
aas
sti
cwtl
sarb
test
enter
es
andl
sub
add
pop
xchg
jno
add
dec
adc
sbb
dec
nop
orb
cs
lahf
ret
sub
in
lds
insb
mov
push
popa
and
frstor
test
insl
fadds
imul
movsb
mov
push
sbb
imul
loopne
xchg
or
mov
push
push
shrb
lods
out
inc
out
and
xor
jo
mov
and
ljmp
xor
dec
jl
dec
mov
outsl
std
arpl
ret
sbb
in
pusha
bound
mov
inc
xor
pmullw
cmc
xchg
movsl
inc
popf
mov
test
int
xchg
nop
jl
repnz
cmp
cmp
lret
dec
es
ss
es
jbe
addb
das
push
xlat
movsb
pop
clc
adc
xchg
in
sbb
and
mov
cli
mov
jb
inc
ret
loop
je
neg
mov
insb
fisubs
and
adc
push
jp
jl
movntps
inc
xor
call
sbb
add
dec
test
and
xchg
pop
or
xor
and
leave
loope
jb
inc
movsb
xchg
aad
cltd
push
dec
call
mov
mov
iret
or
mov
shrb
mov
and
xlat
cmp
inc
and
push
xchg
mov
stos
test
adc
jo
stos
scas
int3
xor
cmp
add
shll
fisttps
inc
cs
fdivrs
pop
mov
jbe
mov
cmpsb
dec
mov
insl
sti
cmc
aas
push
pop
add
popf
pusha
mov
dec
pop
lret
mov
mov
lds
mov
daa
or
xchg
pop
cmpl
xchg
jns,pt
jb
mov
push
sub
rclb
pusha
mov
sub
dec
scas
mov
icebp
and
lcall
mov
dec
lods
mov
jno
jo
adc
leave
lds
fisttpl
loopne
loopne
lds
data16
xchg
ret
mov
sbb
dec
cmp
push
icebp
mov
dec
cmc
mov
push
cmp
aam
xchg
xor
out
xchg
inc
fdivr
leave
adc
xchg
testb
loope
pop
pop
imul
inc
jmp
lock
in
sti
jb
pop
mov
push
sbb
rclb
cld
daa
outsb
jb
hlt
loopne
fstl
mov
dec
jg
dec
jae
mov
mov
push
in
movsl
cmp
lds
pop
cs
fsubs
test
lds
mov
pop
xor
jns,pt
mov
jnp
lock
test
outsl
mov
pop
fimuls
mov
test
xorb
xor
bound
sbb
mov
addr16
lcall
out
push
push
push
imul
in
pop
cmpsl
icebp
mov
movsb
jno
mov
inc
lds
out
sub
cmc
popf
out
sbb
mov
iret
movsl
ret
xchg
stc
mov
push
imul
les
leave
ret
stc
loope
insl
jo
mov
dec
mov
jle
out
call
cmc
sahf
in
mov
push
out
adc
lods
dec
btr
imul
hlt
push
sbb
jnp
inc
stos
sub
pop
les
cmp
mov
sbb
scas
add
movsb
jns
mov
sbb
lahf
dec
mov
sbb
mov
sub
loopne
scas
xlat
cld
cmpsb
fxam
pop
ret
sahf
xchg
pop
cmc
fscale
jle
mov
or
fstp
jno
in
out
push
xchg
sahf
dec
mov
sub
cmc
jg
push
fcmovnu
repnz
and
jnp
popf
idiv
sub
xchg
scas
out
and
inc
push
or
ror
cmp
rcl
push
mov
rorb
sbb
gs
jb
push
cmpsl
in
sti
sub
mov
notl
sbb
push
jecxz
mov
sbb
mov
mov
lods
jg
sar
ret
xchg
cmp
pop
lret
jb
mov
pop
test
movsl
dec
push
mov
and
out
pushf
popa
cli
lods
cmp
xor
sbb
and
xchg
lcall
inc
pushf
das
cli
inc
pop
push
mov
iret
outsl
adc
push
xchg
mov
inc
xor
mov
les
or
arpl
push
sbb
aam
fistpll
adc
xchg
xor
imul
sbbl
rcl
into
mov
cli
notl
int3
ss
fdivr
pop
inc
mov
fcmovbe
push
ljmp
loope
inc
mov
repz
pop
jle
pushf
scas
gs
es
cld
sbb
jecxz
cli
pop
repz
test
xchg
add
outsb
add
sbb
iret
pop
pop
out
mov
xchg
lcall
out
test
mov
adc
add
shl
cmc
pop
int
insb
push
xchg
xor
adc
or
inc
ss
call
in
jb
test
loopne
lret
cmp
imul
xchg
pop
fildl
das
push
cs
or
jo
or
mov
and
stc
in
sub
mov
cli
sbb
mov
add
cmp
dec
and
icebp
push
cmp
fs
xchg
adc
ja
add
push
loop
mov
loop
xor
movsb
mul
pop
out
ret
mov
in
mov
push
xchg
add
mov
repnz
mov
push
jno
xlat
adc
jbe
xor
xchg
xchg
or
pop
mov
xor
dec
pop
repnz
fdivrl
jg
pop
dec
jmp
mov
push
push
gs
nop
ljmp
js
inc
cmp
and
xchg
jno
ja
cmpsl
jnp
jo
je
and
lods
sbb
pop
outsl
sti
fdivrs
rorl
dec
inc
cmpsb
or
mov
aam
out
pop
xor
fsubrp
mov
rcr
mov
aad
negb
sbb
leave
xor
push
ucomiss
int
cltd
sub
call
mov
subb
mov
ja
fnstcw
jp
fisubrl
sub
popf
dec
xchg
or
push
push
out
jecxz
icebp
outsb
adc
lret
aam
out
test
inc
ss
repz
cmp
filds
dec
sbb
cmp
push
adc
add
cmpsb
fdivl
and
scas
mov
fisubrs
loopne
dec
cwtl
mov
or
hlt
lock
mov
out
push
ds
cmp
js
inc
fldl2e
sub
outsb
imul
jno
jecxz
shr
cmpsl
inc
xchg
or
mov
add
dec
or
xchg
andb
and
xchg
test
lods
fildll
lock
mov
jb
int3
scas
and
mov
inc
call
test
icebp
and
sub
outsb
sub
add
mov
jg
jp
push
test
xchg
sub
movb
mov
mov
fwait
xchg
mov
mov
jge
repz
sub
pop
xchg
pop
cmp
sub
add
arpl
mov
pop
fldenv
je
aad
pop
xor
jno
outsb
testl
subl
aas
sti
jle
mov
int
sbb
aam
cmp
mov
push
into
lods
lret
pop
das
mov
mov
sbb
sub
aas
sbb
mov
and
mov
fists
es
lret
pop
insb
xchg
ja
pop
pop
popa
xchg
in
mov
dec
fs
stos
dec
bound
mov
leave
rorl
popf
inc
hlt
rcrb
out
jmp
std
mov
mov
fstps
lock
and
push
scas
pop
adc
and
js
xchg
dec
sahf
bound
add
push
enter
aaa
or
fistpll
sbb
and
daa
clc
cli
fmuls
xor
pop
push
mov
stos
pop
xchg
and
sahf
mov
push
adc
mov
imul
inc
mov
mov
subl
pop
hlt
adc
mov
mov
cmpsb
xchg
or
daa
xor
decb
push
add
sbb
cmpsl
out
outsl
sbb
jnp
es
aad
push
in
ret
lcall
jge
adc
adc
jne
and
jle
test
dec
mov
cltd
or
loope
and
pop
mov
and
add
add
into
jmp
movsl
jnp
dec
sbb
sub
sub
lods
fldcw
mov
mov
add
adc
lods
adc
pop
jns
push
in
lahf
xchg
sti
push
xor
cwtl
div
mov
mov
sbb
imul
aaa
mov
into
cmpsb
rorl
sbb
jb
das
xor
cmp
add
outsl
cmp
mov
lahf
sub
push
stos
fstps
leave
imul
sub
loopne
cli
push
jle
pop
and
inc
jmp
jl
jne
rolb
pop
std
loop
mov
ljmp
repnz
das
cs
repz
loope
cmp
and
mov
out
cli
sbb
lods
aaa
jl
push
pop
dec
cmp
adc
insl
inc
push
cmc
addr16
es
mov
or
cmc
cmp
mov
mov
add
sbb
inc
mov
cmc
and
es
test
shrl
sbb
in
hlt
cmp
in
push
lods
xor
xor
lcall
bound
mov
sbb
cli
aam
sbb
or
push
out
xchg
push
fisttpll
inc
push
dec
and
mov
xchg
stos
sub
pop
jne
push
push
stc
clc
ljmp
pusha
jle
daa
inc
sub
push
jmp
insb
jo
jb
xlat
mov
lea
push
mov
in
loopne
sbb
popa
xor
aad
cmp
pop
les
cmp
and
rcr
jae
popa
pusha
pop
out
and
shll
add
mov
jns
fbld
xor
mov
daa
filds
nop
mov
pop
inc
popf
sar
mov
test
pop
clc
jmp
pop
lods
mov
xor
adc
xchg
mov
hlt
push
dec
fisttpl
jns
icebp
in
loope
cmp
popf
stos
in
pop
cmp
dec
dec
mov
and
push
inc
jbe
xorb
inc
test
in
daa
jle
push
pop
and
vmovsldup
push
and
enter
daa
add
adc
add
fsub
adc
ss
jns
and
fdivrl
rcrb
jae
stos
mov
scas
cmp
add
daa
sbb
xchg
pop
popf
push
xchg
mov
cmp
pop
xlat
leave
sti
adc
pusha
cmpsb
imul
ja
gs
in
loopne
aaa
or
add
mov
mov
xchg
xor
sub
pop
mov
lcall
jnp
sti
push
xchg
sbbl
bound
push
jae
jo
push
lods
lods
int3
cmc
pop
xor
or
mov
add
out
mov
xor
jns
bound
dec
fbld
or
sub
inc
stc
aam
iret
dec
pop
jnp
cmp
xchg
add
roll
add
jb
xchg
jmp
push
shrl
fwait
add
or
pop
xchg
dec
dec
pop
jb
sti
inc
stos
and
outsl
repz
xor
sahf
insb
mov
insl
xlat
lahf
arpl
ja
clc
adc
mov
add
inc
ds
dec
fwait
jl
push
adc
in
jae
xchg
xchg
adc
out
insb
sti
loopne
or
iret
clc
adc
notl
shrl
fiadds
mov
xor
mov
xorb
sub
xchg
pop
xchg
ljmp
in
add
or
pop
xor
push
loopne
dec
in
add
mov
pop
jae
dec
cmp
push
stos
into
mov
xchg
and
and
mov
stos
lret
dec
rcrl
jl
push
jp
xlat
lahf
imul
jg
jnp
aaa
add
pop
pop
ficomps
xchg
arpl
mov
dec
or
icebp
sbb
cwtl
lock
pop
popf
push
shl
pop
or
repz
icebp
mov
frstor
loope
adc
sub
push
roll
dec
sub
stos
fucomi
dec
iret
out
int
in
insl
dec
inc
pusha
cs
andl
lcall
lcall
push
sarl
mov
jmp
mov
les
cld
xor
test
or
mov
mov
mov
cs
xor
xchg
cs
je
sbb
testl
cmc
popf
add
dec
inc
jl
sub
lahf
fsubrl
stc
add
mov
test
je
repnz
sbb
sbb
inc
and
jb
xor
sub
inc
xchg
fstl
adc
sbb
pop
cltd
pop
sahf
mov
call
xor
pop
ss
das
jae
adcl
and
popa
flds
cmp
inc
mov
lea
xchg
and
fdivrp
mov
or
mov
test
add
loopne
xchg
mov
ss
push
in
outsl
add
clc
mov
dec
pop
mov
daa
or
xchg
add
lods
sbb
jecxz
shll
mov
insb
int3
int
test
push
and
mov
push
dec
rcrb
imul
inc
push
fcoml
rcl
in
pop
lea
xchg
cmpsb
cld
mov
adc
cltd
nop
cmp
add
dec
test
xorb
sbb
out
das
lret
fstl
pop
shll
dec
addl
rorl
jb
imul
push
dec
push
jecxz
stc
lods
loop
sub
imul
or
jne
jge
outsb
test
cmp
xchg
add
and
icebp
and
js
in
pop
mov
leave
mov
jg
inc
loope
pop
mov
out
or
das
mov
fisubl
dec
pushf
add
insl
cmp
inc
lret
adc
xchg
pushf
cmp
xchg
xor
xor
scas
shl
xor
mov
arpl
mov
mov
das
push
lahf
mov
pop
sub
fwait
xor
sahf
mov
enter
in
test
insl
subl
push
push
add
push
sub
dec
sbb
test
mov
pop
xor
imul
imul
or
adc
mov
mov
push
sub
fisubs
lahf
cld
pushf
insl
mov
add
pop
cli
pusha
sub
mov
adc
xchg
repz
scas
pop
mov
or
pop
xadd
int
cwtl
arpl
push
cmpsl
in
es
and
sbb
mov
repnz
in
addr16
lret
inc
or
mov
push
add
rcll
subb
adc
push
icebp
mov
cli
ret
xor
ret
jbe
mov
int
leave
les
shrb
fnsave
shll
inc
adc
int
roll
inc
jnp
loopne
call
mov
add
inc
stos
lahf
ror
xor
or
inc
push
jmp
ret
loope
das
add
mov
mov
leave
cld
in
dec
dec
pop
sbb
lcall
ret
ret
addr16
inc
sbb
cwtl
nop
bound
cs
push
out
add
pop
call
push
adc
mov
sbb
and
jp
loope
lods
fmul
dec
add
jae
fsubrl
xor
sbb
jl
sbb
ret
xor
push
inc
mov
push
popf
outsl
pextrw
mov
in
sub
divb
into
movsl
pop
test
sbb
and
inc
mov
int3
ss
cmp
adc
lcall
push
das
test
daa
iret
dec
inc
push
jns
push
out
xor
imul
mov
xchg
mov
shrb
rcll
dec
push
clc
paddd
mov
push
sub
xor
das
xor
dec
adc
mov
or
and
cmp
push
sbb
jbe
stc
jge
test
dec
mov
xchg
leave
cmc
lods
mov
inc
mov
fwait
pusha
xchg
lret
add
jo
adc
push
adc
ror
sub
bound
adc
inc
sub
mov
lret
xchg
pop
cmpsb
xchg
nop
and
loopne
testl
mov
pop
jnp
std
enter
imul
roll
repz
repnz
je
shll
test
sbb
pop
and
mov
aad
or
xchg
fcmovnbe
test
loope
faddp
mov
insl
jle
jo
pop
xor
mov
xlat
sbb
repz
enter
inc
es
mov
lods
fs
sub
adc
jg
dec
in
leave
xor
sbb
out
inc
loopne
inc
pop
xchg
mov
repnz
cmp
rcrb
test
das
out
push
dec
jns
push
cmc
pop
adc
add
xor
jmp
test
addb
aaa
inc
les
dec
jle
ret
fbld
xchg
stos
add
test
cmp
repz
les
add
adc
push
xchg
arpl
xor
inc
push
sub
mov
leave
adc
imul
add
les
pop
xchg
or
or
inc
and
sarb
scas
std
loopne
insl
pop
mov
ret
cld
icebp
ljmp
xor
ret
sbbl
pop
in
push
or
and
sub
xchg
scas
cmp
std
pop
mov
cwtl
jg
inc
xor
xchg
sbb
fnstenv
inc
and
lods
das
ret
outsb
out
pop
jns
loopne
scas
mov
pop
rolb
or
mov
xchg
test
loope
ja
and
or
jne
xchg
or
js
std
fidivrs
xchg
stos
xchg
jle
sub
add
cmp
push
inc
clc
cld
pop
mov
push
mov
cmp
scas
pop
xor
shrb
mov
shlb
and
movsl
mov
sub
loopne
pop
rcrl
mov
mov
cmc
leave
es
dec
adc
addr16
cld
and
mov
imul
lcall
lods
cmpsl
negl
mov
in
cmp
test
cs
and
sahf
aam
sub
push
cmpl
imul
mov
pop
popa
testl
inc
cmp
outsl
inc
cltd
subb
in
and
mov
repz
or
jns
into
sub
pop
inc
sbb
pop
repnz
hlt
jmp
xchg
xchg
push
xchg
cmpsb
mov
mov
aaa
xchg
xchg
xor
ror
mov
clc
mov
pop
outsb
push
notl
shl
jb
clc
mov
dec
les
repz
pop
mov
jp
and
or
fimull
sbb
add
cld
xorl
call
cli
pop
aas
and
ret
push
mov
popf
and
pop
push
xchg
sub
jnp
cs
in
fdiv
mov
push
into
sbb
pop
xchg
cmp
mov
add
aad
ds
mov
adc
sub
mov
enter
xchg
ljmp
arpl
bnd
and
gs
jo
andl
xor
xchg
adc
or
cmp
cmpsb
fistpll
or
je
mov
cwtl
lods
ljmp
xlat
inc
xchg
in
mov
mov
lods
ja
cmc
inc
cli
repnz
lds
mulb
jle
popa
test
xor
mov
outsl
pop
sbb
push
shll
cld
add
lret
adc
sbb
ret
repnz
aam
push
fildl
pop
mov
out
fistl
xor
sbb
mov
out
pop
mov
out
sub
clc
sar
gs
cmp
or
add
jmp
or
sahf
pushf
mull
fisubs
jo
jne
pop
pop
xchg
fstl
int
mov
pop
testb
jecxz
test
jns
ja
test
fcmovnbe
adc
lods
xor
dec
punpckhbw
jo
jo
push
mov
pavgb
and
fsubrl
es
enter
cmp
jne
imul
dec
dec
add
inc
aaa
xchg
aam
xor
mov
in
xchg
sub
jno
mov
jns
stos
fs
imul
popf
xorl
outsb
push
ja
sub
mov
dec
in
mov
or
add
sbb
ret
popf
dec
sub
mov
pop
out
push
dec
cmc
in
aam
filds
sbb
pop
negl
sbb
adc
test
pop
jge
ss
inc
mull
rcrb
push
cmc
mov
pusha
mov
push
addr16
shl
pop
ret
popf
mov
ja
jp
xchg
sub
xor
sub
test
loop
sbb
in
xchg
pop
jge
mov
cltd
jbe
out
or
push
pushf
gs
adc
shlb
cltd
push
mov
mov
inc
lahf
inc
pop
movsb
pop
push
xor
cmp
mov
fcmovne
cmp
jb
mov
mov
pop
mov
push
inc
cmp
fwait
dec
cmpsb
aam
loopne
jbe
sub
int
bound
scas
push
cli
xor
jae
mov
push
outsb
adc
iret
xchg
leave
and
or
call
sbb
push
cld
pop
xor
cmpsl
and
ljmp
movsb
leave
pop
dec
shrl
sbbl
insl
call
out
mov
dec
in
imul
mov
iret
cmp
mov
cmp
sub
icebp
jb
jb
aas
add
bound
mov
mov
push
repz
fistps
ret
push
adcl
jbe
movsb
fists
xchg
insb
lcall
and
sbb
cli
xchg
movsb
fnstenv
mov
cmp
sti
jne
sbb
adc
sbb
mov
loop
daa
lods
mov
mov
cmpb
jecxz
add
xchg
cmove
daa
cbtw
cmc
pop
mov
lret
sub
push
andb
out
mov
fcom
inc
stos
call
enter
push
push
jnp
mov
push
jecxz
das
or
push
jno
scas
jge
cli
inc
and
and
jmp
mov
cmp
punpcklwd
pop
cmc
jg
jge
jmp
cmp
in
adc
sub
dec
pop
mov
jne
sub
pop
pop
mov
xchg
mov
mov
aad
jge
test
pop
inc
lock
push
inc
sbb
push
mov
hlt
dec
popl
inc
lods
or
sahf
pop
push
mov
or
cmp
popa
mov
fs
pushf
ret
lret
gs
xor
dec
pop
inc
sbb
lds
fcoml
lcall
repnz
ss
mov
popf
dec
xchg
mov
push
xor
pop
das
in
in
mov
pop
sbb
into
out
pop
adcl
jae
repz
jg
jno
inc
into
inc
loope
mov
and
and
xchg
lds
pop
clc
rorb
mov
in
adc
and
jno
xor
in
hlt
arpl
xchg
insb
mov
cmp
jns
int3
jg
mov
pop
and
mov
fstl
mov
dec
pop
sbbb
fsubrl
rcrb
mov
leave
dec
xchg
inc
xchg
pop
arpl
popa
jge
jp
cmp
push
or
ficoml
and
lds
or
shrl
xor
ss
mov
cwtl
pop
cmpsl
clc
mov
mov
leave
fcmove
inc
dec
hlt
stc
jnp
mov
lock
xchg
pushf
fwait
mov
leave
and
icebp
cmp
mov
dec
jbe
test
mov
dec
adc
jno
lret
sti
add
and
dec
xchg
outsl
ss
or
mov
xchg
or
jb
sbb
adc
ja
xor
scas
sub
repz
xor
fistps
faddl
jns
xchg
or
jo
clc
push
loopne
adc
sub
addb
popf
sub
adcl
dec
sbb
bswap
ss
ficompl
or
cmc
aad
bound
nop
mov
ss
mov
lods
dec
or
jb
aaa
jae
inc
pop
cmpl
and
dec
pop
cmp
daa
fsubrs
lcall
pop
xchg
aam
adc
imul
push
lock
lods
repnz
jmp
cmpsl
mov
mov
jp
fwait
pop
lret
testb
mov
daa
idiv
dec
sbb
mov
jp
fmuls
mov
xchg
xchg
inc
pop
adc
adc
scas
out
mov
fcmovnbe
sub
xrelease
js
mov
ret
js
fldt
movsl
repz
pop
cmp
mov
imul
jecxz
mov
test
push
and
xchg
dec
xor
out
sbb
or
mov
sub
adc
sub
push
mov
dec
jnp
sub
aam
lock
xor
adc
cmpsl
push
mov
cmpsl
cmp
inc
mov
pop
int3
jns
lods
lea
or
jnp
adc
movl
push
daa
cmp
xchg
call
fmuls
jno
enter
flds
mov
sub
push
mov
xchg
lret
sbb
jbe
incb
scas
sbb
push
dec
xorb
sbb
bound
inc
cmc
xor
push
sub
insl
and
xor
mov
adc
sahf
sbb
sub
ficomps
inc
sbb
inc
or
mov
std
lea
sub
dec
jnp
jg
das
mov
adc
cli
push
dec
inc
aas
lods
cmp
push
test
add
jne
dec
and
cmp
xor
data16
adc
mov
cltd
fldenv
test
cmp
pop
movsl
xlat
xor
imul
mov
push
cmpsb
push
pop
jae
fldl
push
add
lds
loop
sbb
dec
out
adcl
xor
sub
mov
dec
call
fidivl
out
jmp
cmp
leave
add
sahf
stos
inc
cmp
mov
cmp
clc
cld
dec
inc
cld
or
icebp
xchg
add
in
cmc
pusha
sub
pop
fisttps
sbb
stos
xchg
outsl
ret
pop
push
inc
lcall
or
inc
adc
sbb
cwtl
cwtl
imul
std
les
call
gs
add
and
addr16
std
out
cli
test
cmpsl
cmc
adc
mov
mov
adc
jg
inc
cmp
cmpsl
mov
arpl
rcrl
fcmovnb
dec
sbb
dec
mov
icebp
xchg
jge
add
and
int3
ja
stos
jge
adc
sub
xchg
add
xchg
lds
xor
pop
int
jg
jg
pop
fldt
jg
push
repnz
jmp
jae
scas
sub
jns
mov
movsb
mov
cltd
add
and
rcrb
mov
jns
mov
sahf
loope
test
repz
out
jae
jp
inc
addr16
icebp
out
stos
jbe
adc
cmp
jbe
and
clc
jae
out
jge
and
popf
stos
mov
cmp
xchg
push
lret
stos
out
aaa
lret
cmp
movsb
mov
jle
inc
insl
jmp
out
jle
fs
addr16
cmp
xor
inc
test
cli
ss
shl
mov
cmp
lea
fnstenv
adcb
dec
lods
outsl
push
dec
push
loop
sarl
cmp
xor
xchg
push
bound
inc
push
jae
js,pt
gs
je
dec
sbb
sub
jnp
and
lods
lret
jno
pop
shlb
aam
dec
aam
pushl
int3
adc
push
jno
cltd
cmp
xor
into
stos
push
adc
loope
push
idivb
inc
cmp
sub
xchg
data16
sbb
int3
sbb
test
jnp
test
adc
inc
pop
insl
repnz
into
push
imul
push
ficomps
js
adc
enter
outsl
mov
test
sbbb
testl
das
push
push
pop
arpl
push
lock
fs
mov
test
push
xchg
add
xchg
inc
out
and
xchg
jne
add
xchg
repnz
insb
xchg
xor
js
push
add
hlt
push
repz
jg
fsubrl
push
pushf
incl
xchg
rorb
hlt
dec
mov
stc
scas
xchg
loope
lds
lret
sub
std
fbstp
pop
cld
xchg
push
xchg
daa
inc
fimuls
ljmp
jnp
data16
sbb
loopne
xlat
arpl
or
imul
rcll
jbe
xchg
pop
lcall
push
inc
jp
mov
adc
sbb
and
scas
xchg
insb
nop
js
mov
jb
cmc
push
push
js
out
fdivrs
mull
nop
fwait
jae
and
sub
pusha
mov
xchg
test
mov
xchg
mov
aaa
pop
in
xor
push
fsubrs
shll
sbb
mov
dec
repnz
dec
adc
ss
dec
inc
test
jl
sbb
push
mov
xchg
out
cmp
xchg
gs
adc
xor
push
and
clc
movsb
pop
loop
and
lret
imul
sbb
add
iret
cmp
cmpsb
roll
divb
mov
fstl
push
scas
sti
sbb
jge
aas
scas
iret
add
into
or
push
rorb
cld
cmp
push
add
je
cwtl
xchg
mov
dec
add
and
inc
lds
roll
mov
cs
and
pop
pop
add
or
les
insb
sub
cs
dec
jb
and
adc
into
jne
xchg
push
xlat
pop
aaa
inc
xchg
push
mov
test
pop
out
hlt
stos
pop
repnz
mov
iret
push
in
in
testl
adc
out
hlt
inc
jmp
adc
lret
enter
lods
lahf
test
fsubrs
rcrl
pushl
int
cs
or
mov
mov
push
inc
cmp
push
pop
lock
add
xchg
push
xchg
cwtl
or
xor
cmpb
lods
je,pn
push
int
cltd
sbb
inc
iret
addl
loopne
mov
xchg
lods
mov
call
jbe
daa
movsl
cmp
movsb
fbld
add
fbld
sahf
xchg
push
xor
fldl
or
push
call
push
inc
pop
addr16
dec
fcmovnu
adc
mov
lea
mov
xchg
sub
push
and
or
or
pop
jge
ficoms
mov
cs
dec
outsl
mov
push
adc
aad
cmp
cmp
pop
adc
add
lcall
repz
filds
pop
dec
fstpt
inc
dec
mov
xlat
jo
daa
nop
lret
mov
stos
or
pop
adc
testb
jb
stc
dec
cmp
sub
xor
je
and
mov
jbe
mov
fsts
xchg
jne
je
das
cmp
push
mov
or
and
cltd
jb
stos
aaa
movsb
andl
lea
and
mov
enter
pusha
cmp
add
andb
sbb
lea
push
mov
mov
jbe
loopne
add
shl
mov
xchg
fidivs
push
int
xchg
cli
lret
data16
das
inc
int3
scas
mov
mov
lahf
xor
inc
aas
and
push
imul
lods
or
mov
pushw
notb
xchg
adc
outsb
push
push
xlat
scas
or
inc
xchg
test
mov
fcmove
push
push
xor
iret
mov
gs
addr16
adc
push
mov
xchg
test
lret
adc
jle
push
and
adc
pop
cwtl
test
push
call
lods
inc
aam
mov
xor
jl
out
dec
mov
mov
bound
mov
test
cld
rorb
xlat
ljmp
jne
pop
scas
test
mov
in
aas
clc
out
lahf
imul
xor
pushf
mov
pop
sub
lcall
push
int
fsubrp
push
cwtl
lcall
mov
inc
mov
in
inc
jmp
and
mov
add
repz
lcall
jmp
cwtl
nop
pop
add
xchg
jmp
pop
cmp
xor
xlat
mov
sbb
rolb
call
inc
push
aam
mov
cli
cld
and
xchg
push
fcomps
and
in
aas
mov
push
push
xchg
jecxz
mov
sub
xchg
movb
pop
ja
call
mov
imul
dec
movsb
rcr
das
push
mov
ljmp
and
arpl
into
sub
pop
inc
dec
into
jnp
pop
aaa
std
push
dec
sub
add
jnp
imul
mov
cmpsb
jp
cli
inc
sti
roll
aam
dec
movsb
daa
push
inc
xchg
push
bound
push
insb
push
ss
push
rep
divps
addl
test
cld
push
adc
mov
out
mov
jmp
cs
iret
lock
lods
fwait
jo
lahf
dec
jne
lods
inc
or
push
movsl
add
jbe
dec
xchg
jmp
sub
fnstsw
mov
xlat
mov
leave
js
repz
outsl
outsl
js
hlt
sub
dec
bound
scas
or
inc
jno
mov
lret
jmp
jecxz
pop
insl
decb
cmp
xchg
push
repz
ss
xor
imul
adc
push
in
packuswb
ds
int3
cmp
rol
dec
mov
ja
pop
ja
cli
sub
lods
push
loope
mov
out
test
pop
adc
mov
sti
xorb
in
insl
scas
sbb
or
xor
fisttpll
loopne
scas
dec
xor
xchg
mov
pop
imul
sub
int
mov
outsl
pop
sbb
jl
mov
scas
insl
movsb
adc
xlat
mov
push
cwtl
add
add
movsb
xchg
mov
orl
daa
mov
repnz
arpl
lret
jb
pop
test
leave
add
cmpsb
movsb
inc
jae
dec
add
add
pop
outsb
push
pop
scas
int
mov
sub
arpl
inc
and
ja
sbb
in
push
cmp
mov
mov
movsl
pop
jmp
adc
xlat
push
xor
in
shl
fwait
sub
mov
test
shll
cmpsb
cli
sub
xchg
lret
mov
cmpsl
mov
adc
jle
xchg
loopne
js
insb
jb
cmp
rcrb
adc
jecxz
shrl
mov
sbb
adc
dec
js
popf
jg
int
fwait
cmpsb
mov
clc
add
mov
stos
rorl
cld
inc
ljmp
mov
jbe
test
pop
test
int
shrl
cmc
cld
adc
lock
pushf
ret
cwtl
inc
or
mov
cmp
dec
push
fsts
call
xor
mov
test
jno
insl
repz
push
and
loope
mov
aas
sub
jno
mov
mov
pushf
mov
inc
cltd
out
push
pop
in
repnz
dec
ja
adc
test
dec
jb
jnp
scas
std
lods
mov
xchg
push
stc
jnp
divl
je
sub
cmp
test
in
in
sub
pop
fdivr
test
jo
lods
mov
push
cli
cmpsb
jns
jo
dec
mov
lds
xor
push
pop
jp
add
sub
rcr
mov
mov
orl
lahf
mov
xchg
lahf
pop
mov
xchg
jb
nop
fwait
push
add
push
add
ret
add
xor
pop
sbb
push
daa
fstps
jg
push
jecxz
repz
add
cli
rcrb
sbb
pushf
jns
push
pushf
outsl
inc
lods
xor
leave
or
adc
mov
sbb
leave
sti
dec
fs
sti
mov
push
rolb
adc
inc
rcrl
ds
pop
inc
cmp
imul
or
sub
int
pop
mov
jp
add
test
stc
pop
aam
mov
dec
xchg
stos
dec
cmp
sbb
pop
mov
data16
je
movsb
aad
and
jmp
rorl
ret
addl
mov
add
xchg
adc
push
and
fbld
sahf
pop
cs
xor
inc
adc
sbb
daa
lret
pop
xchg
and
adc
out
xor
xchg
mul
dec
mov
add
outsl
cmpsb
sbb
inc
mov
lods
inc
lods
adc
rcll
fs
movsl
inc
adc
lods
jae
addr16
popf
enter
adc
dec
ret
test
popa
iret
xchg
out
bound
push
pop
daa
or
lret
aam
jae
add
cmpsb
sub
rorb
stc
mov
outsb
xchg
call
ds
aas
sub
xchg
les
xchg
xchg
int
dec
adc
das
aaa
call
iret
mov
stos
addr16
mov
lea
inc
scas
jp
std
test
pop
pcmpeqb
sub
jne
xor
adc
add
dec
jle
pop
jo
mov
popf
test
insl
jae
lret
fxch
dec
mov
cwtl
jne
cmp
hlt
or
outsl
addr16
lds
jbe
mov
xchg
into
out
jge
jno
mov
pop
and
fs
inc
movsl
into
jp
cmp
mov
xor
gs
cmc
loopne
jge
pusha
xchg
adc
ret
mov
aas
jae
xchg
xchg
pop
arpl
inc
pop
cmp
inc
xor
dec
cmc
dec
repnz
mov
nop
lret
inc
sub
pop
add
adc
lock
inc
rcr
jl
mov
cwtl
fidivs
jo
xor
pop
inc
adc
push
jnp
add
mov
cmp
push
xchg
fwait
jno
gs
cmpl
in
popf
jmp
mov
hlt
cmp
sbb
adc
xchg
loop
cmpsl
push
xor
out
sbb
rcrl
in
add
jns
pusha
call
lods
add
xor
negb
loope
pop
xor
adc
in
fucom
fistpl
decb
enter
out
add
outsb
cmp
fdivrl
inc
jmp
adc
cli
je
imul
gs
jb
pusha
mov
lock
push
enter
xchg
inc
stc
in
arpl
cwtl
out
test
divb
mov
ds
dec
dec
out
stos
jns
sub
cmp
add
push
pop
mov
in
outsb
rclb
fisttpll
pop
or
rclb
xchg
sbb
xorl
outsl
ret
mov
mov
loope
push
js
test
and
mov
out
sbb
mov
fistps
mov
cmp
adc
lret
and
push
adc
sbb
cmp
push
jne
and
push
inc
jno
scas
inc
push
cmpsl
lcall
clc
lcall
adc
xchg
cvtpi2ps
rcrb
in
movsl
in
push
orb
pop
dec
add
mov
in
insb
dec
xchg
cmpsl
adc
in
insl
sarb
or
jnp
icebp
std
pusha
ljmp
lret
stc
jae
cmpsl
in
leave
sub
xchg
mov
pusha
imul
ret
outsl
stc
jbe
xchg
xchg
mov
roll
cmp
orl
jp
jmp
xchg
push
or
aad
call
sbb
jb
shl
test
ret
mov
mov
test
sub
mov
ds
xor
daa
cmp
cwtl
test
movsb
enter
ljmp
shrb
mov
daa
lea
shlb
cmpl
fmulp
cmp
or
mov
and
call
jb
mov
jp
loop
aaa
adc
fstps
mov
mov
aas
pop
add
or
fucom
and
data16
sbb
and
xor
jmp
sbbl
in
mov
je
jle
jne
outsb
das
dec
rorb
cmp
mov
jne
orb
rorl
scas
cmpsl
inc
fcmovb
fdivs
jge
or
push
enter
loope
int
xchg
pop
cmp
pop
bound
fucomip
push
lahf
fcmovbe
or
je
fistpll
sti
push
and
pop
jbe
repnz
push
xor
mov
mov
sar
inc
pop
xchg
push
mov
repnz
test
movsl
xchg
push
call
aas
test
inc
shll
adc
xlat
mov
aaa
add
push
mov
cmp
sarl
sub
inc
loopne
pop
add
sahf
and
pop
push
jp
sub
stos
xor
lret
pusha
in
ja
sbb
fmuls
loop
pop
ds
sahf
add
gs
icebp
xor
sbb
xacquire
imul
push
mov
aas
pop
adc
lods
gs
mull
rcl
add
push
cmp
adc
jae
jg
fs
jns
int
pop
ficoms
adcb
push
data16
pop
out
jae
adc
stos
cld
aad
pop
dec
aam
test
push
inc
mov
imulb
xor
out
fsubr
in
add
sbb
clc
push
or
lods
pop
lods
out
bnd
outsl
push
jg
stos
adc
jecxz
mov
xor
enter
adc
inc
push
arpl
loopne
sbb
jle
rcrl
mov
dec
lock
sub
int
cmp
xchg
add
add
sbb
sbbb
pop
push
bound
pop
pop
insl
pushf
test
mov
fs
mov
inc
aaa
pop
cs
incb
xchg
out
sahf
js
lock
and
mov
cmp
hlt
push
sub
icebp
add
push
mov
fnstenv
lods
ror
out
sub
jmp
testl
xchg
mov
pop
ja
addr16
cmp
fistpll
das
dec
ret
aad
out
subb
mov
push
mov
fnsave
in
jl
mov
cmc
push
mov
aad
mov
mov
cmc
fiaddl
ds
ss
jo
dec
fldenv
outsl
arpl
sub
frstor
or
sbb
mov
test
mov
mov
hlt
pop
mov
in
imul
cs
add
xchg
out
mov
cwtl
jp
iret
xchg
in
mov
mov
imul
jb
mov
mov
sbb
sahf
and
add
test
mov
jo
add
shl
pop
into
or
dec
pusha
scas
fisttps
jl
cmpsb
and
lods
mov
ret
out
or
push
sub
cmc
stos
lods
cwtl
xchg
and
jae
fwait
sbb
jl
std
lret
outsb
lds
loop
cmp
or
data16
ds
lahf
fmull
pop
sti
mov
es
sbb
pop
int3
mov
cmp
adc
incb
cltd
test
in
xor
add
call
mov
mov
push
adc
pop
mov
xchg
sbb
shll
sbb
fbld
fstpl
jbe
xchg
andl
aaa
and
or
addr16
popa
adc
leave
mov
add
int
in
jmp
shl
or
js
cmpsl
and
jmp
cmp
xchg
imul
fisttpll
test
ljmp
cmpb
inc
xchg
aaa
mov
sbb
dec
imul
cmpsl
scas
sub
cltd
xchg
and
loopne
push
lods
shll
xor
dec
das
mov
xor
push
pop
aam
movsl
lret
push
call
shll
ret
mov
or
mov
xchg
into
test
lret
cmc
xchg
jge
lods
addr16
lret
dec
dec
jns
fisttps
sub
pop
mov
int3
mov
jge
es
mov
jne
dec
cmp
mov
add
mov
sbb
add
cli
shrd
decb
rcll
loopne
arpl
emms
movsb
jge
clc
pop
add
stc
movsl
mov
test
les
test
shlb
jle
or
pop
loope
push
sub
jne
aaa
mov
jns
dec
mov
lret
or
pop
rcrl
mov
inc
inc
fdivr
mov
loopne
cmc
ljmp
ds
cmp
push
pusha
into
pop
outsl
stc
or
movsb
mov
stos
xchg
push
sahf
leave
iret
jno
or
test
daa
mov
xchg
vandnpd
leave
pop
cmpsl
xlat
mov
and
lret
test
loopne
je
js
push
mov
mov
cwtl
mov
stos
dec
mov
push
push
jbe
mov
mov
leave
push
fisttpl
adc
dec
mov
jnp
push
fldt
dec
push
sub
jae
mov
push
sbb
iret
movsl
pusha
ret
fisttps
pop
sbb
cld
xor
jo
leave
xor
stos
mov
popf
xor
mov
jne
lahf
mov
mov
cld
arpl
ret
push
out
inc
or
adc
push
enter
push
cli
mov
sub
repnz
movb
test
pop
push
out
out
inc
mov
adc
jne
call
test
xchg
cltd
popf
fs
out
sub
shrl
ljmp
ret
adc
stos
bound
fistl
orb
mov
jmp
aas
loopne
push
fisttps
mov
jne
lcall
sahf
xchg
push
shl
inc
stos
inc
push
add
or
pop
arpl
enter
inc
jne
mov
jno
gs
cwtl
inc
pop
xor
pop
sub
inc
repz
jmp
push
lods
aaa
out
fwait
mov
mov
cmpb
notb
mov
sbb
cmpsb
call
add
pop
popf
jmp
sbb
sub
into
xchg
movl
jl
and
std
jo
xchg
jle
insl
sub
movl
lods
mov
jle
popf
adc
and
push
jns
adc
popl
jae
aaa
fucomi
shrl
test
dec
mov
push
and
fidivrl
adc
stc
ret
push
pop
sub
or
das
push
das
cwtl
movsb
dec
pop
lcall
lret
leave
jl
adc
dec
dec
popa
lods
mov
mov
cld
inc
mov
ja
xor
pop
clc
adc
loop
fistpl
insl
int3
push
cmp
in
pushf
mov
cmp
pop
mov
into
int
adc
push
int
and
fwait
ljmp
adc
add
loop
mov
inc
insl
test
pop
insl
dec
in
loope
push
add
movsb
pop
fcmovne
mov
decb
inc
mov
or
pop
test
mov
in
jl
pop
inc
and
iret
imul
ret
lea
in
aaa
mov
xchg
or
mov
ret
or
sub
call
sub
out
jl
nop
cmp
push
pushf
ss
mov
sbbb
mov
sbb
push
push
ljmp
into
push
sbb
adc
push
rolb
bnd
ja
outsl
loope
pop
cmp
lahf
or
xchg
jns
dec
sar
fwait
addl
fisttpll
cmp
mov
cmpl
loopne
cmpsb
lret
sbb
lock
test
jbe
mov
mov
xchg
int
jmp
xor
andb
push
push
cwtl
cltd
in
pop
jg
imul
sbb
sarb
sub
jb
imul
jo
mov
insl
scas
mov
mov
in
cmpsb
ficompl
adc
pop
add
lock
cmpsl
add
fldcw
or
pop
jle
into
add
cmpsb
lcall
arpl
push
cmp
je
mov
jno
movsl
jo
lods
shl
inc
jle
ja
push
std
test
shll
cmp
insl
mov
aam
mov
pop
lock
out
jae
adc
stc
test
xchg
loop
addb
mov
cmp
in
mov
mov
and
shl
jns
aaa
lahf
jns
mov
out
fstps
rcrb
shll
adc
jp
fmul
fsubrl
mov
mov
lods
repnz
sahf
push
push
loopne
pop
pop
popa
fldt
fiadds
stc
cmp
prefetcht1
aas
dec
hlt
add
adc
xor
mov
mov
cmp
ret
notl
scas
into
mov
int3
cld
or
ret
cmp
subb
add
call
int
sbb
in
ljmp
jno
rcrb
add
dec
xor
mov
xlat
push
outsb
call
dec
pop
or
and
pushf
jne
out
inc
cmp
sbb
addl
roll
cs
and
mov
sub
pop
mov
mov
push
lods
shl
mov
mov
fildl
daa
shll
inc
mov
or
pop
push
add
repz
pop
fdivp
sbb
push
cmp
mov
iret
test
mov
repnz
mov
mov
push
hlt
and
out
push
ljmp
sbb
addr16
cltd
stc
pushf
mov
dec
pop
sbb
mov
dec
pop
rcrb
shlb
pop
mov
xchg
push
or
adc
jmp
cmp
bound
test
pop
fcomps
cmp
push
mov
or
jge
jle
sbb
stos
jp
xlat
add
in
mov
mov
jl
xor
lock
push
les
pusha
fadds
xchg
sbb
mov
adc
lret
bound
inc
loopne
jb
sub
dec
lods
and
ljmp
dec
mov
cli
mov
aaa
fs
mov
and
add
outsb
cmpl
daa
sub
test
ja
daa
mov
jl
leave
adc
aad
xchg
xchg
negb
sub
dec
inc
std
pop
sti
stc
pop
cmpsw
mov
cmp
rol
jmp
dec
mov
arpl
mov
adc
pop
xchg
mov
faddl
push
daa
les
pop
push
mov
push
int3
fildll
push
insb
das
aaa
sbb
loopne
pop
add
push
sahf
jnp
sub
insl
idivl
adc
lods
pop
mov
jp
ljmp
shll
sahf
jne
out
pop
inc
sbb
out
cltd
lcall
je
das
xor
addr16
and
icebp
test
pushl
imul
repz
je
lds
dec
decl
cltd
push
das
mov
xor
sbb
in
jl
dec
bound
jmp
pop
int
pop
fnstsw
in
aaa
fisttpl
pusha
jnp
fsubrs
xchg
push
add
jno
arpl
mov
mov
test
inc
popf
sub
xor
and
nopl
inc
ss
inc
and
out
jno
fs
push
or
cli
and
arpl
sbb
adc
pop
in
sub
nop
cmc
dec
fadds
add
stc
iret
lea
jne
dec
jmp
out
mov
mov
das
loope
icebp
in
xor
into
sbb
mov
cmc
push
outsl
addr16
xchg
repz
loop
sbb
adc
mov
or
ljmp
push
outsb
fildll
rorl
dec
xchg
outsl
sbb
outsb
fnstenv
sub
sub
sub
stc
shr
in
loope
sti
mov
jle
add
fnstenv
adc
mov
inc
repz
sbb
and
mov
inc
push
dec
in
cmp
xor
mov
test
int3
dec
insl
add
sti
sbb
dec
mov
sbb
add
sub
sti
std
cli
lods
and
mov
dec
jbe
sbb
pop
mov
pop
jmp
out
pop
mov
clc
xchg
and
icebp
lds
call
pop
jnp
cli
mov
xchg
add
jg
ffreep
out
mov
outsl
sarl
imul
xlat
cli
shrl
leave
in
push
fldenv
rcl
xchg
pushf
and
mov
mov
out
inc
outsl
cmpsb
dec
push
mov
ljmp
mov
fimuls
movl
sbb
sbb
mov
mov
mov
jg
push
stc
push
popf
adc
push
lret
mov
add
es
cmp
in
mov
movsb
in
int
push
scas
push
mov
inc
xchg
lods
push
popa
sbb
pop
cmp
inc
fiadds
inc
stc
or
outsb
loop
add
movsl
mov
jg
es
lcall
mov
popa
xchg
pop
mov
in
and
outsb
enter
jecxz
scas
sub
pop
sbb
sbb
push
inc
push
test
icebp
je
sub
adc
inc
pop
jle
test
sub
or
and
andps
int
cltd
movsb
int3
in
add
mov
mov
mov
jmp
or
ljmp
pop
push
dec
mov
jns
push
leave
out
in
push
add
rol
lods
xor
pushf
ja
lock
xor
adc
sub
mov
cmp
inc
push
gs
rcll
outsb
mov
xchg
dec
or
add
cmpsl
and
enter
jbe
mov
lods
dec
jp
jbe
shll
push
and
inc
in
pop
mov
cmpsb
int
jmp
clc
inc
xlat
xor
loop
push
scas
cmp
inc
mov
sbb
aad
lea
xchg
push
jge
sbb
cs
sahf
aad
adc
sbb
jge
enter
inc
push
clc
out
pop
insb
rorb
jae
sti
cld
mov
in
push
mov
or
pop
and
push
cmp
into
stos
add
in
mov
jle
inc
add
xchg
outsl
lock
and
push
lock
mov
addl
leave
push
xchg
dec
add
divb
bound
xor
fists
and
sbb
dec
xchg
jmp
sub
pop
gs
inc
test
test
mov
addl
and
cld
ja
lret
dec
icebp
gs
sbb
mov
sbb
jmp
imul
das
pcmpgtd
mov
push
mov
mov
cltd
cmc
xor
jmp
ljmp
push
mov
adc
add
call
jg
lcall
sub
pop
xor
repnz
bound
add
pop
xchg
and
rclb
cs
push
dec
enter
loopne
mov
ds
out
ret
mov
in
mov
mov
cmp
mov
test
negl
mov
in
test
push
sub
shll
stc
test
stos
fs
add
dec
out
xor
mov
and
mov
dec
or
mov
cmc
in
dec
xor
add
jecxz
jmp
test
inc
call
inc
test
xchg
repnz
push
cmp
cmpsb
out
mov
es
andl
jbe
shlb
dec
js
aam
ja
sahf
stc
push
ret
test
push
xor
adc
adc
pop
and
js
inc
add
scas
rolb
lock
jl
and
jle
dec
fsub
lcall
push
mov
sub
push
dec
std
into
in
xor
xchg
push
lret
jns
fmuls
std
pop
jno
negb
stos
xchg
sarb
inc
sbb
adc
jo
test
pop
xchg
ja
inc
mov
mov
and
dec
jge
jg
pusha
jbe
mov
pop
flds
test
mov
xchg
adc
mov
and
dec
push
add
inc
loope
cmp
enter
in
dec
roll
sbb
push
rclb
into
mov
inc
lds
cmpsl
push
sub
and
fsubl
lret
push
fists
in
pop
gs
adc
popa
mov
loopne
aam
cld
fnsave
out
xchg
xchg
fmull
sbb
nop
cmpsb
out
rcrl
and
outsl
fstpl
loop
mov
hlt
loopne
outsl
cli
sti
adc
push
roll
loopne
popa
jbe
inc
adc
and
or
mov
enter
mov
in
lret
lock
sahf
sbb
ss
push
lods
imul
push
adcb
imul
mov
stos
cmp
es
addr16
dec
mov
jge
xor
out
xchg
fimuls
mov
pop
fadds
out
les
imul
cli
js
dec
add
sti
cwtl
clc
xchg
or
mov
pop
loope
pop
add
aad
push
rcrl
cwtl
notb
fs
or
lret
aam
pop
mov
pushf
sbb
adcb
mov
lret
addr16
push
aaa
cld
adc
and
test
lds
ss
xchg
sub
dec
nop
sub
outsl
outsb
inc
pop
jns
push
fcoml
sbb
mov
scas
and
pop
lea
xchg
repz
fs
jmp
xchg
sub
arpl
sub
jo
imul
test
call
sbb
and
dec
add
sti
jae
push
test
test
pushf
popf
ret
jne
loopne
mov
jle
iret
xlat
stos
jg
and
into
out
mov
xchg
xchg
fwait
and
rcll
and
xchg
in
push
sbb
out
push
and
mov
xchg
push
pop
xor
sub
loop
les
xchg
jns
daa
mov
lds
fmull
movsb
dec
in
xorb
lock
lcall
cmp
out
sbb
sbb
ret
mov
pop
xor
cmp
jns
sub
xchg
push
in
insl
cld
daa
pop
shrb
ljmp
sub
cmp
push
push
dec
ja
mov
cmp
ret
mov
rorb
jmp
jle
movntq
push
loop
repz
mov
out
aaa
ljmp
movsb
fisttpll
mov
mov
dec
sarl
fs
sbb
pop
ds
fcoml
scas
imul
sbb
mov
jge
add
add
jmp
pop
movsl
fistps
add
mov
push
ss
mov
sub
mov
mov
cmc
mov
and
cltd
mov
jle
and
inc
arpl
aad
ret
or
das
adcl
or
je
jge
insb
and
push
cmp
push
cmp
push
mov
dec
jbe
insl
ret
push
in
push
clc
cli
jbe
popf
xchg
sub
and
mov
adc
pop
push
mov
icebp
dec
shrb
add
and
cmp
dec
in
xlat
pop
push
cli
jg
outsb
fcoms
sub
xor
int3
loopne
test
out
jo
out
out
mov
sub
mov
ror
push
repnz
push
sbb
sahf
inc
sbb
jnp
jecxz
jnp
add
jno
pop
and
adc
int
lahf
gs
xchg
sub
aaa
mov
sub
push
fsubrl
xchg
xorl
rorb
push
test
mov
aad
pop
lcall
jmp
mov
mov
loop
pop
mov
ret
gs
aad
hlt
nop
or
lcall
scas
jecxz
ja
jle
ret
cmp
add
cmpsl
lahf
cmpsl
and
sbb
mov
aas
pop
jno
shl
pop
test
ret
mov
popa
pusha
test
cmp
ss
add
sbb
andb
push
ret
sub
jne
jbe
shll
xchg
and
pop
and
xor
jno
xchg
xor
push
or
stc
in
xor
adc
add
movsl
notl
ljmp
iret
sbb
add
dec
notb
pop
cmp
push
fisubl
call
and
popf
inc
sbb
iret
outsb
mov
jo
or
and
mov
mov
push
gs
pushf
inc
jb
movsb
or
out
shl
xlat
cmp
decl
and
push
jmp
add
inc
push
push
imul
adc
mov
pop
jmp
aad
stos
push
xlat
sub
adc
pop
adc
cltd
cmp
sbb
pop
dec
jnp
sbb
or
xlat
jbe
test
mov
pause
cmp
xchg
add
rorl
push
rcll
add
arpl
push
add
subb
aad
and
push
mov
mov
add
jbe
inc
add
sub
inc
test
cmc
int3
fldl
cmp
fistpl
das
cmp
data16
pushf
ja
dec
xor
subl
pop
or
ja
movsb
mov
mov
xor
cmp
jl
int3
enter
add
inc
cmc
inc
jg
cld
cwtl
leave
adc
addr16
jmp
xor
sysret
xchg
cmp
and
adc
pop
jb
xor
pop
insb
loop
sbb
xchg
pop
or
into
daa
cmp
jne
mov
popa
pop
int3
cmp
inc
xchg
fimuls
mov
leave
sub
lret
std
lret
jmp
in
mov
mov
dec
push
lds
sub
mov
nop
cmc
add
mov
outsl
lahf
adcb
xchg
xor
or
mov
pop
jne
add
dec
add
dec
mov
leave
out
pop
fldln2
cld
ret
jecxz
aad
mov
dec
dec
and
push
push
test
jae
cmpsb
mov
lcall
mov
into
push
jne
sub
call
adc
xchg
sbb
dec
test
add
jl
cmpsl
mov
add
push
adc
xchg
enter
aas
xor
dec
mov
sbb
icebp
jae
lods
cmp
out
les
or
xor
cmc
cmp
inc
je
test
xchg
xchg
decl
outsl
mov
add
mov
or
cmp
mov
les
fsubrl
mov
xchg
lods
fmull
ficoml
jbe
insl
rcrb
repz
sub
leave
xchg
cmpsl
mov
test
mov
adc
push
cli
mov
les
ret
cli
hlt
xchg
daa
inc
fstpl
lds
push
mov
imul
dec
icebp
inc
js
xlat
loop
lds
adc
xchg
int3
mov
xchg
jno
cmp
jb
fs
cmc
cmpsb
pop
es
cld
and
pop
jmp
cmp
or
dec
jae
dec
movsl
add
push
mov
stos
lret
adc
inc
or
xor
pop
jne
xor
aam
push
pop
push
cmpsb
and
xchg
shrl
test
and
push
lods
mov
pop
xchg
push
push
jbe
and
push
and
das
testb
adc
sahf
push
jg
mov
mov
ja
or
nop
fcoml
in
add
jmp
lahf
ljmp
xor
xor
mov
fcoms
daa
pop
xchg
push
cli
sbb
iret
ds
mov
jle
push
icebp
mov
lods
jns
xor
lds
dec
jp
call
mov
cmpsb
movsb
cmpsl
aad
sbb
push
jl
adc
call
in
or
push
jp
cmp
inc
movsb
pushf
jb
push
imul
adc
dec
xchg
xor
mov
cltd
scas
dec
adc
popf
sbb
lcall
xlat
dec
push
pop
loopne
or
test
jg
cwtl
std
int
jno
imul
lds
dec
push
mov
xchg
rcll
cmp
mov
sub
or
inc
mov
pop
clc
xchg
mov
mov
dec
ljmp
outsl
les
adc
std
ffreep
addps
adc
lret
xor
lea
jnp
mov
repnz
sti
dec
cmc
fwait
xchg
sbb
adc
out
dec
addr16
cld
pop
fldcw
shlb
mov
sti
mov
subl
and
js
add
std
rcrl
and
loop
in
inc
add
pop
nop
aam
inc
cmp
push
aam
and
mov
pop
jnp
cltd
jp
or
in
inc
inc
jl
push
dec
shll
jno
jae
inc
loope
jg
push
jne
mov
in
jno
ljmp
and
insl
test
scas
movsb
shrb
cmp
mov
iret
push
das
jle
cmp
jbe
xchg
pop
sahf
repnz
and
and
pop
out
rolb
push
push
pop
icebp
int3
sbb
fwait
dec
pushf
hlt
daa
xor
lock
jno
fnstenv
sbb
clc
or
xchg
dec
or
mov
mov
xor
mov
inc
add
inc
sub
adc
push
jmp
xchg
sbb
lock
into
jo
pop
lea
loop
pusha
int
lds
pop
jae
inc
xchg
xchg
stos
lods
xchg
jp
scas
loope
push
test
mov
adc
cmp
push
test
pop
lea
sbb
cmp
outsb
xchg
je
push
lds
in
loop
fldcw
mov
in
sub
pop
adc
xchg
push
test
mov
jp
xchg
jp
jp
ffree
rol
into
fistpll
cs
sahf
inc
pop
pop
scas
inc
and
add
sbb
jp
or
push
fmull
nop
std
loopne
repnz
xchg
daa
gs
inc
pop
mov
mov
mov
sub
push
daa
push
popf
mov
out
sbb
inc
fcmovnb
mov
xchg
adc
movl
fildl
insb
pusha
mov
aam
dec
xchg
repz
push
xchg
test
jl
sbb
pop
gs
scas
enter
shll
daa
inc
lock
mov
xchg
dec
inc
inc
xor
out
inc
mov
inc
frstor
xlat
xor
test
mov
jb
shll
out
aad
or
orl
aaa
adc
mov
inc
inc
mov
dec
jecxz
mov
pop
pop
push
ss
sarb
push
rorl
jb
test
mov
add
mov
inc
mov
test
pop
cmp
std
into
sbb
xor
push
int
mov
pop
dec
sub
pusha
dec
fimuls
mov
lods
arpl
sbbb
jbe
loop
adc
cli
je
lcall
xchg
test
xor
jb
movsl
cli
jp
js
out
xchg
fdivs
lock
sbb
or
adc
shrd
pop
out
mov
scas
hlt
inc
cs
xor
lahf
shlb
mov
pop
pop
into
movsl
loop
fidivrs
sbb
jle
jg
mov
jae
dec
or
hlt
scas
setns
es
sub
xor
test
mov
fidivs
cmpsl
sub
scas
mov
enter
adc
push
jle
cmp
nop
arpl
outsb
in
stos
xchg
les
aaa
scas
in
int
or
andb
jg
mov
icebp
mov
push
in
pop
pop
movsb
cs
xchg
mov
or
repnz
cmpsl
mov
les
and
scas
dec
rcrl
aaa
push
gs
ljmp
mov
xor
popa
or
insl
add
ljmp
aaa
cmpb
xchg
and
xor
xorl
movsl
andl
lret
pop
mov
push
push
cltd
je
xchg
adc
sahf
mov
roll
ret
jmp
xor
repz
les
and
mov
add
sub
add
mov
fwait
int
xor
xor
sub
lea
push
cld
cs
pushl
mov
icebp
mov
mov
rorl
sbbl
sbb
jecxz
push
add
jb
xchg
pop
jecxz
outsl
push
or
int3
push
xchg
add
xchg
mov
bound
in
mov
add
sub
fsubl
mov
xchg
cld
imul
dec
int
mov
or
mov
idiv
mov
inc
out
outsl
mov
popl
fimuls
mov
ds
daa
out
pop
hlt
cs
inc
scas
lea
fucomip
sub
mov
sahf
cmp
lahf
mov
out
stc
mov
jle
sub
std
cltd
adcb
cmpsl
insl
outsb
lock
popa
stc
sbb
stos
js
cmp
mov
push
add
aam
xchg
add
or
or
pop
dec
lock
sbb
cmc
movsb
and
cvtpi2ps
je
sarl
jge
out
mov
out
and
and
lods
or
push
mov
xchg
dec
popf
test
hlt
scas
jecxz
pop
insl
jae
inc
cmp
pushf
sub
ljmp
inc
sub
es
adc
call
jbe
push
daa
shl
je
add
loop
dec
popl
xchg
incb
jl
out
stos
or
xchg
mov
pusha
jg
mov
mov
pop
adc
cmpsl
fsubrp
cmpb
fs
inc
test
push
mov
mov
cmp
pusha
icebp
jl
push
push
pop
push
clc
addr16
lock
sbb
dec
bound
and
arpl
pusha
or
scas
aad
loopne
into
fstps
add
fs
mov
pop
sub
add
mulb
outsl
dec
or
es
or
or
stc
pop
jp
aad
inc
jns
lock
sbb
js
ljmp
push
push
enter
pop
adc
pop
mov
mov
out
lcall
inc
jp
insl
push
xor
fsts
cld
out
sbb
insb
ret
jnp
dec
pusha
lds
bound
adc
mov
testb
ds
and
movsl
xlat
jp
push
sub
ljmp
add
xor
test
lds
lcall
mov
add
stc
aad
sahf
scas
testb
in
mov
xor
push
dec
sti
jg
orl
sbb
lcall
mov
lods
cld
mov
pop
bound
cmpsb
mov
push
pop
mov
mov
fnstcw
out
pop
push
les
add
daa
inc
js
hlt
sbb
pop
jns
push
ljmp
movsb
sub
or
mov
daa
mov
pop
and
push
inc
sbb
enter
fldl2t
pop
fdivr
inc
cltd
nop
jo
rolb
sub
and
jmp
cwtl
in
divl
sbb
cmp
sbb
cmp
cs
add
sub
add
lret
inc
push
scas
negl
push
dec
push
push
popf
push
mov
xchg
jecxz,pn
mov
lahf
push
in
xchg
les
push
sti
cmp
loope
xchg
xor
sbb
sbb
sbb
jmp
add
adc
inc
add
jmp
inc
sub
sti
popa
pop
enter
int
xlat
out
stos
test
push
addr16
insb
pop
and
inc
xlat
cmp
addr16
out
mov
mov
jno
cmp
push
je
jns
sbb
push
dec
adc
roll
rorl
cltd
cmpsb
pop
or
sub
mov
movsl
inc
mov
mov
cmp
ds
inc
mov
jge
fcoms
popa
pop
cmp
sub
mov
pop
and
mov
push
mov
addb
out
arpl
cwtl
icebp
rcll
lods
pop
mov
movsb
test
rorl
std
inc
xchg
cmp
outsl
or
dec
jge
mov
negb
push
fidivrs
popa
xor
loope
rcl
xchg
outsb
repz
repz
stc
notl
add
insl
xor
jno,pt
mov
jae
lods
testl
lcall
jns
and
cli
xchg
push
fnstcw
fistpl
push
nop
xchg
loope
xlat
jp
add
and
cmp
ja
mov
adc
cmpsb
cmp
aaa
xor
fcoml
test
js
test
jae
into
lret
sbb
jl
scas
aad
sub
mov
sub
pop
inc
pop
fistpl
imulb
fsub
pop
xchg
and
sbb
cmpsb
dec
cs
insb
int
jno
lods
int
or
popa
xor
mov
icebp
das
ret
xchg
and
jg
push
rcl
pop
aam
dec
cwtl
inc
pop
xchg
pop
xchg
js
jg
pop
jge
push
pop
in
mov
pop
pushf
popf
imul
pop
inc
loope
rcr
and
lret
test
pusha
and
pushf
pop
lahf
mov
sbb
push
mov
xlat
mov
sub
cmp
gs
sbb
push
jl
xchg
xor
jge
out
mov
push
dec
jns
jle
sbb
icebp
stc
xor
movsl
pop
jmp
xchg
sbb
xchg
jb
movsl
pop
mov
jl
mov
inc
cltd
and
mov
out
jo
xchg
push
sbb
adc
shl
adc
lds
icebp
imul
outsb
inc
out
pop
lods
sub
mov
xor
enter
stos
mov
cmpsl
icebp
or
inc
fmuls
jbe
adc
imul
in
adc
add
jns
xor
hlt
sarb
xchg
xor
cmp
std
lds
arpl
cmp
test
test
out
cmpsb
mov
js
inc
dec
pop
int3
jg
test
lods
outsb
dec
and
jg
cld
movsw
std
and
or
addl
popf
pop
inc
pusha
or
cmp
push
sar
clc
pop
push
je
adc
clc
loope
shlb
or
push
xor
jge
ret
out
stos
faddp
ficomps
jns
jmp
aas
pop
jns
jne
or
outsl
into
dec
mov
dec
cvtps2pi
loop
mov
or
lret
jo
cmp
je
cmp
push
daa
ret
inc
in
in
mov
and
je
stos
out
jb
pop
js
inc
fs
je
adc
stc
adcl
pop
pop
mov
or
int
outsb
mov
add
loopne
iret
testl
mov
test
jge
jg
in
stos
in
into
test
stos
mov
push
lock
mov
cmc
pop
xor
sti
jl
mov
mov
mov
cld
stos
jns
loop
push
mov
and
fstl
fcoml
sarb
out
dec
or
sub
push
jb
xor
dec
mov
cmp
pop
jmp
mov
out
adc
repz
mov
or
int3
shll
in
fcomp
and
movsl
fnsave
bound
sar
pop
dec
cmp
rcr
adc
push
adc
pop
and
bound
push
sbb
les
aad
loope
push
inc
fildll
stos
aaa
xchg
ret
cmp
dec
enter
insl
lock
mov
mov
and
pop
jmp
inc
xlat
and
lret
sbb
or
dec
sbb
lcall
out
dec
cli
sbb
mov
and
adc
or
adc
icebp
jnp
clc
pusha
and
push
pop
jnp
aaa
iret
lock
pop
sbb
dec
loopne
xchg
pop
dec
sub
add
jmp
mov
test
cmp
push
jmp
fbld
jge
subb
or
and
lods
adc
push
mov
jmp
js
mov
int
mov
pop
inc
clc
subb
adc
outsl
xor
ds
into
sbb
add
mov
pop
inc
int3
bound
pop
push
mov
add
mov
hlt
mul
xchg
push
das
int
sbb
pop
dec
jle
sub
xchg
mov
jp
jo
push
add
mov
mov
or
jo
add
mov
shll
and
addr16
xlat
gs
inc
jo
adc
and
flds
das
sar
xchg
push
fbld
jne
cmc
cmp
dec
negl
imul
push
popa
pop
mov
xlat
sub
pop
push
aam
movsb
les
xchg
jnp
stc
test
test
int3
sbb
rorb
sub
add
or
test
test
je
cmp
mov
loope
test
inc
xor
push
inc
mov
add
push
ja
xchg
xor
adc
ja
stc
dec
stos
xchg
sti
pop
jg
pop
dec
sbb
addr16
pusha
jbe
andl
clc
mov
jp
adc
mov
fs
lcall
inc
bnd
xor
cmove
dec
cs
call
loope
sti
jns
out
xchg
sub
sti
adc
loop
fimuls
mov
aaa
sti
jmp
int
dec
mov
mov
add
int
fcmovnb
scas
test
mov
pop
and
inc
and
cmpsb
or
push
or
jl
mulb
inc
cmp
jecxz
shrl
push
inc
sub
cmp
pop
add
add
xchg
xchg
popf
sbb
jne
adcb
sub
xor
pop
pop
aad
cmp
mov
lcall
sub
ret
inc
sub
mov
adc
cmp
cltd
mov
sbb
cs
xchg
les
leave
dec
jns,pn
mov
adcl
dec
cmpl
mov
xor
lret
pop
lods
ret
repnz
jnp
shlb
nop
sub
gs
and
and
xchg
jge
enter
push
ret
daa
pop
xor
mov
fiaddl
and
lcall
xor
arpl
pusha
cmp
push
pop
test
or
cwtl
mov
mov
lret
aas
aaa
fnsave
inc
scas
adc
mov
and
in
in
arpl
pop
mov
insl
subb
rolb
push
sti
jbe
sub
mov
and
fcoms
gs
arpl
testb
and
xchg
loope
adc
adc
dec
inc
aaa
jg
rcl
loopne
cmp
rdmsr
push
xor
sbb
fstp
fildll
dec
xchg
fimuls
aam
mov
je
fldcw
fistpll
push
jecxz
fwait
shl
imul
push
adc
dec
add
not
repz
xchg
lods
xor
ljmp
xchg
cs
rcll
js
add
lret
jmp
imull
mov
lods
xchg
mov
lret
movsb
inc
int
xchg
out
pop
test
scas
fwait
shrl
mov
loope
sarl
inc
or
inc
pop
or
cmp
outsb
fcoms
push
shll
out
lea
xchg
push
and
push
rorl
faddp
cmp
popf
or
jo
sbb
ror
xchg
adc
xchg
rcl
sbb
clc
ret
xor
mov
or
mov
pop
cmp
push
arpl
stos
jno
sbb
imul
lods
out
int
push
ret
jne
aas
inc
jnp
push
stc
push
psubsb
mov
and
es
cmp
aaa
xchg
insl
cmp
clc
lods
sub
ret
icebp
mov
fstl
lock
mov
ja
sbb
mov
mov
daa
cmp
shl
aam
ss
cltd
mov
jl
rolb
adc
std
imul
fwait
mov
jbe
arpl
fmull
cmp
jl
lds
in
mov
dec
out
jb
pusha
sti
lret
test
push
jp
ja
mov
in
in
or
jl
push
cmpsb
repz
xor
pop
xlat
lret
dec
mov
movsb
jge
lcall
xchg
sub
adc
sarl
fisttpll
lret
lds
insb
adc
fldl2t
inc
push
ds
add
sbb
insb
and
cs
shlb
rorb
dec
xchg
xchg
pop
inc
in
mov
lret
and
xchg
into
bound
clc
mov
inc
or
inc
sbb
mov
ss
push
push
jl
push
test
rorl
mov
mov
adc
sub
add
dec
fs
in
pop
sub
mov
std
idivl
xor
mov
jo
inc
xor
mov
mov
daa
jno
imul
cmp
or
sub
pop
ret
sub
js
adc
shll
add
pop
stos
pushf
mov
and
ror
pop
and
rol
cmp
and
ljmp
jl
rorb
insl
lods
das
inc
fisubrs
stc
xor
push
cwtl
cld
loop
sub
lret
mov
loope
clc
sti
jnp
in
jb
mov
std
jecxz
loopne
mov
add
in
push
cltd
push
pop
je
out
add
push
lret
mov
jecxz
outsl
cld
sbb
outsl
push
dec
or
out
add
stc
test
inc
lds
jno
push
popa
jns
pop
pushf
xchg
insl
ljmp
or
inc
jo
iret
dec
cmpl
sub
movsb
fsub
mov
sbb
sub
in
movsl
scas
bound
ljmp
out
xorb
sbb
rorl
pop
sub
clc
insl
popf
xor
or
jecxz
push
mov
adc
mov
xor
test
push
test
pop
aaa
addr16
sbb
jmp
ret
push
les
jge
pop
flds
insl
mov
mov
adc
xchg
or
or
cmpl
dec
inc
mov
mov
into
in
scas
jb
push
popf
jne
adc
loope
ljmp
xchg
pop
test
push
mov
mov
push
addr16
sbb
inc
add
rcr
xchg
mov
mov
sti
jg
mov
inc
push
insl
leave
out
sbb
sub
cmp
push
stos
hlt
mov
mov
loopne
pop
xchg
fdivr
pop
add
mov
jo
sub
rcrb
dec
dec
push
out
xchg
fstl
inc
in
jmp
xor
cmp
xlat
daa
add
fidivs
jle
xor
xor
inc
adc
stos
add
mov
shll
fdivl
cmp
test
jp
xor
inc
lods
fucomi
xor
mov
dec
xor
mov
or
and
mov
insl
or
dec
lahf
pushw
imul
stos
decb
ja
scas
xorb
xchg
and
pop
jmp
jno
pop
icebp
js
int3
clc
lcall
mov
cli
pusha
pop
pop
sbb
jp
xchg
pushf
sub
cmp
mov
inc
add
outsb
mov
or
xchg
sub
pop
or
ss
andl
repz
ss
es
test
mov
adcb
inc
push
dec
fdivrl
or
mov
mov
inc
or
out
lods
ja
add
push
sahf
jb
cmp
mov
jno
pop
movsl
das
loope
inc
or
movsb
out
dec
in
xor
dec
adc
loopne
mov
jle
mov
sub
adc
push
mov
dec
dec
int
js
sbb
int
cmp
jecxz
cmc
jne
insb
dec
pop
sbb
das
fwait
inc
push
mov
ja
mov
ss
xchg
daa
jb
lret
pop
aaa
sti
jmp
repnz
scas
inc
movsl
mov
or
cmpsb
mov
outsl
mov
push
clc
shll
sbb
sub
cmp
leave
dec
ret
arpl
lret
arpl
xor
int3
jmp
lds
add
ret
test
cmp
add
and
adc
mov
cmp
test
mov
mov
dec
xchg
mov
shrb
stos
or
push
push
es
pop
out
mov
out
shl
js
leave
jnp
ss
or
push
dec
fneni(8087
sbbl
dec
lret
mov
jl
mov
adc
mov
shll
lods
or
hlt
cs
lret
imull
jns
adc
mov
sbb
in
mov
cli
bound
dec
lret
out
mov
ss
int
shlb
xchg
dec
sbb
adc
jmp
pop
cmp
fcoms
std
movsb
lret
sarb
inc
inc
jg
ja
xchg
xchg
jns
and
xchg
inc
or
cmp
push
adc
xor
ret
and
imul
xlat
push
out
fs
dec
je
out
lret
dec
xor
xlat
in
pusha
cld
adc
or
xlat
cmp
cmpsl
clc
sub
xchg
push
jns
and
or
in
insb
inc
pop
scas
mov
sbb
rolb
das
add
mov
mov
dec
lahf
and
jne
test
push
daa
imul
jns
push
mov
cmp
dec
jo
mov
add
pusha
jns
jg
call
rolb
loop
add
cld
push
imul
jns
lock
dec
inc
push
lahf
es
inc
nop
inc
or
push
scas
jge
mov
mov
jecxz
sahf
daa
je
in
mov
push
imulb
push
pop
idiv
sbb
inc
ja
xor
add
stos
mov
and
outsl
clc
in
mov
push
lahf
cmp
push
mov
mov
jo
add
loopne
cmpsb
fsubr
add
cwtl
cmp
in
pop
scas
adc
imul
dec
push
lds
addr16
sbb
xchg
cmp
mov
ficoml
or
push
icebp
jnp
iret
stc
jle
int
pop
mov
rep
stc
pop
dec
cmpsl
fcompl
loop
mov
cmp
push
mulb
adc
fimull
gs
mull
fstpl
push
sahf
jns
scas
cltd
add
mov
aaa
jb
push
and
insl
xlat
fildl
stos
add
out
mov
mov
lahf
sub
mov
repz
cli
cmpsl
ret
daa
pop
push
mov
and
rclb
xor
inc
call
mov
imul
adc
jle
decl
xor
jmp
inc
xchg
mov
adc
and
sbb
jae
test
pop
pop
sbb
xchg
or
push
jo
push
ds
push
or
cmp
inc
test
in
mov
loop
out
add
outsb
imul
pop
mov
clc
mov
push
sub
jp
scas
rcl
mov
adcb
ret
divl
cmp
xor
jnp
xchg
std
mov
stc
lods
mov
call
and
insl
lods
stos
sar
les
mov
dec
lret
dec
push
stos
dec
mov
ja
repnz
std
mov
inc
imul
xchg
pop
sub
scas
imul
fwait
jg
mov
push
outsb
iret
adc
movntq
icebp
ret
jns
pushf
fbstp
xor
jl
les
fcomps
cld
mov
pop
adc
outsb
inc
ljmp
pop
enter
mov
add
sub
nop
pop
jmp
xor
mov
aas
ffree
mov
and
and
scas
in
imulb
cmpsl
fcompl
dec
mov
pop
stc
enter
mov
aam
cmp
arpl
xchg
xlat
adc
pop
repnz
mov
int3
out
jo
xchg
out
fisttpll
fistpll
dec
pop
mov
mov
jecxz
dec
push
pop
lods
int3
mov
fbstp
popa
adc
popa
fnstsw
or
jge
xor
fwait
insb
jb
adc
mov
jb
and
cmp
adc
shrb
mov
or
fists
pop
testl
inc
mov
sub
fidivrl
xor
lods
jae
cmpsb
test
or
pop
lea
push
gs
nop
lods
xor
test
inc
mov
push
cmpsl
dec
or
mov
les
sub
fmuls
lods
xchg
add
lds
mov
push
push
std
sub
jge
ss
jmp
mov
jo
gs
pop
xor
mov
fbstp
mov
xchg
nop
popf
mov
insl
mov
gs
or
mov
je
xor
movsl
mov
push
scas
mov
out
inc
and
sub
shr
adc
mov
xchg
cld
and
cmp
js
mov
push
push
sbbb
lret
jmp
stos
lea
dec
mov
push
inc
mov
cld
lock
inc
lahf
push
dec
cld
xchg
jb
daa
jno
cld
inc
fisttpll
loope
aam
mov
rorl
jnp
fiaddl
mov
cld
pop
and
mov
dec
xchg
pop
mov
mov
xor
in
cmpsb
jnp
mov
jns
ss
dec
mov
out
repnz
and
jl
inc
adc
mov
dec
jns
xchg
inc
stc
lret
ret
mov
lods
xor
jmp
lahf
ds
xchg
adc
fidivl
mov
stos
aam
imul
lods
fsts
push
adc
push
out
sbb
test
je
es
push
and
shrb
test
lret
push
or
lods
int
inc
test
out
fwait
mov
movb
add
lock
rol
mov
and
daa
jle
push
inc
or
add
ror
cmp
push
lock
pop
xorb
mov
movsb
and
jl
pop
or
loop
jb
push
ja
dec
leave
and
mov
cwtl
bound
out
push
js
jle
add
rcr
aad
test
ret
cmp
int3
pop
mov
push
test
imul
sub
push
jge
jae
ljmp
ret
lds
insl
loop
add
fcmovnu
mov
ljmp
mov
lds
lcall
jo
adc
scas
mov
loop
jge
inc
lcall
xchg
leave
daa
addb
push
fs
xor
popf
mov
add
aaa
xor
add
insb
xor
add
xchg
es
shll
inc
and
shll
add
ja
pop
mov
and
add
leave
and
addb
jmp
mov
movsb
pushl
andb
adc
jg
repnz
sbb
or
lock
std
sub
ret
jae
cmp
xor
mov
bsf
lock
pop
popf
sahf
sbb
mov
call
jge
sbbl
lea
les
adc
sub
sub
mov
gs
pop
repz
and
pop
or
dec
push
pop
mov
inc
sbb
xchg
insb
jmp
ljmp
shll
pusha
test
xor
leave
and
and
mov
scas
cmp
cli
insl
sbb
push
orb
xor
mov
inc
out
xlat
jecxz
paddq
testw
in
xorb
add
inc
into
xchg
mov
test
jno
inc
iret
add
pop
pop
ret
adc
out
and
pop
sub
push
jg
or
fidivl
hlt
cmp
int3
sbb
out
inc
pop
sahf
cmp
leave
test
dec
mull
fnsave
lahf
inc
jg
or
test
sub
lods
jo
mov
dec
xchg
push
xor
sbb
mov
in
insb
add
push
scas
sahf
and
xor
adc
xlat
mov
cmp
mov
sahf
xlat
push
jge
xor
mov
dec
cmp
adcl
pop
sbb
repz
imul
cmp
in
xchg
sti
fistpl
jb
pop
xor
int3
dec
in
lods
cmp
je
pop
aas
out
jno
pop
mov
sbb
je
or
push
and
loop
stos
adc
cmp
sahf
jmp
add
cmp
jle
std
pop
dec
bound
dec
mov
cmpsl
mov
and
faddl
dec
aam
fnclex
cmp
out
or
ljmp
pop
sbb
or
pop
jo
pop
mov
sub
push
cmp
push
cmp
cwtl
test
inc
pop
out
pushw
pop
ljmp
push
cmpsb
test
das
inc
mov
aaa
cmp
lahf
rcrb
lcall
cmpb
iret
fisubs
jno
mov
test
jl
mov
call
cli
inc
dec
jmp
jnp
out
mov
or
rcrl
shrb
sbb
in
jl
rorl
cmp
push
and
xlat
dec
ja
pop
arpl
sub
sbb
cmp
imul
scas
movsb
sbb
ret
inc
sbb
insl
lock
jmp
inc
pushf
std
dec
cld
arpl
push
push
add
cmp
pop
sub
cmp
out
pop
mov
mov
adc
and
push
hlt
or
add
out
cltd
popa
arpl
testb
jge
mov
and
popa
jnp
push
lret
mov
xchg
dec
shl
sbb
ja
xor
inc
mov
bound
aas
push
int
sub
xor
mov
sub
xchg
jp
int
shll
test
addb
or
lods
ljmp
iret
xorb
test
adc
pop
insl
or
sub
add
dec
sbb
mov
pop
xor
dec
xor
gs
fimull
mov
inc
adc
xor
mov
out
into
sbb
fwait
cld
jbe
out
xchg
rolb
ror
mov
bound
inc
test
xchg
jge
jae
mov
cmp
jbe
inc
sub
scas
ficoml
push
push
inc
fistl
add
jp
xor
inc
pop
pop
pusha
cmp
je
mov
aad
adc
loope
fisttps
mov
pop
dec
loop
pop
test
pop
arpl
pop
add
mov
push
out
cltd
stc
mov
push
xchg
adc
push
leave
or
cmp
popa
inc
int
fisubrs
sahf
mov
fwait
pop
jnp
ds
adc
add
das
mov
xor
call
inc
fcoms
and
cli
sahf
adc
ss
ja
movsb
add
out
shrb
dec
inc
rorl
enter
out
or
cmpb
mov
js
dec
out
mov
shlb
and
sahf
sbb
dec
sbb
mov
push
cwtl
pop
cmp
repz
xchg
cli
push
jno
je
xchg
inc
out
cmp
decl
push
daa
and
je
mov
push
inc
sqrtps
out
jbe
mov
int
ja
mov
mov
jge
inc
or
xchg
pusha
jmp
testl
inc
xor
mov
jo
dec
addb
fbld
repz
std
outsb
pop
stc
popf
push
xchg
mov
imul
push
jmp
add
xchg
sub
jg
lea
lea
mov
jecxz
addr16
outsb
cmp
mov
test
rolb
pop
push
out
data16
add
inc
fwait
pop
stos
inc
pop
ja
subb
xchg
pop
mov
mov
out
mov
sahf
sub
sbb
ss
adc
jbe
sub
stc
xchg
xor
lahf
ljmp
stos
out
scas
insl
sbb
xor
mov
hlt
dec
test
pop
fcoml
flds
addb
test
push
dec
in
lds
js
pop
lock
int3
mov
popa
into
ja
addr16
loope
dec
int3
popf
add
adc
clc
mov
mov
fs
mov
mov
popa
sub
add
leave
jae
add
sbb
test
push
dec
test
jae
sub
jl
jno
dec
push
mov
leave
lcall
ret
adc
in
outsl
ljmp
and
out
xchg
dec
push
into
out
inc
xchg
bound
loope
cli
sub
mov
adc
xchg
test
out
sbb
repnz
aaa
lea
inc
fs
popf
out
and
cmp
mov
cmpsl
inc
mov
xor
jecxz
mov
xlat
mov
scas
js
cmpsb
mov
lods
lcall
div
outsl
mov
inc
xor
repz
jg
push
lock
sbb
and
sbb
popa
pop
mov
cmp
enter
jbe
iret
pop
test
jg
adc
cmp
dec
dec
cwtl
test
adc
mov
dec
mov
adc
jge
push
ret
xchg
adc
sub
or
hlt
add
push
cmp
lcall
fstpl
fists
jge
push
cltd
sub
and
cmp
popa
iret
mov
cmp
push
mov
mov
push
sbb
ja
jmp
adc
push
cmc
bound
xor
mov
jle
aas
scas
add
inc
cld
cwtl
jbe
stc
sahf
es
pop
mov
shll
das
adc
in
push
lock
sahf
inc
mov
pop
enter
mov
mov
or
aas
js
jmp
lret
mov
pushf
dec
aas
test
stos
mov
xchg
insl
pop
cmp
cmpsb
dec
loop
dec
dec
cmpsl
add
inc
xor
iret
cwtl
adc
xchg
sbb
push
xor
add
mov
sub
jp
enter
lds
outsl
jmp
cld
out
mov
sarb
imul
movsb
cs
xchg
jb
les
jp
fdivrs
movsb
or
push
adcb
icebp
xchg
or
scas
int
std
mov
cld
push
out
adc
sbb
or
xor
shll
push
mov
jo
and
cmpsl
mov
sbb
dec
insb
fs
push
pop
push
pop
sahf
push
mov
outsb
add
xchg
nop
sti
loopne
out
mov
push
adc
test
test
xchg
mov
inc
add
dec
aaa
push
sub
fsts
sbb
jp
inc
mov
dec
lahf
sbb
dec
bound
mov
sbb
xchg
dec
jbe
or
jle
stos
mov
cmp
aaa
sub
jne
addr16
mov
push
add
inc
sub
popa
ja
jne
out
test
outsb
or
xchg
fmul
insb
push
les
adc
or
js
sub
les
out
aam
pop
and
xchg
movsb
and
mov
mov
pushf
cmc
pop
ret
cmpsl
xchg
daa
cmc
sub
aaa
sbb
pushf
mov
mov
subl
inc
dec
pop
test
andb
pop
mov
into
and
ss
lret
lea
and
movsb
repz
or
imul
dec
lret
in
enter
push
hlt
dec
jnp
loopne
pop
ss
mov
push
cmc
repz
pusha
adc
cmpsb
mov
jnp
dec
pop
into
dec
jge
xchg
sahf
loope
add
orl
mov
xchg
push
cmpsb
jecxz
cltd
rorb
pop
movsb
addr16
and
jno
xor
push
add
iret
cmp
push
or
mov
pop
add
or
scas
cmp
and
mov
ret
mov
mov
inc
dec
es
stos
adc
sbb
adc
loop
rolb
and
in
mov
enter
cmc
xor
fistpl
sub
push
pusha
xchg
or
mov
stos
push
dec
aam
cmp
leave
pusha
loopne
mov
insl
pop
orl
test
hlt
cmp
cs
mov
ficoms
cmp
bound
fs
pop
mov
fcmove
movsb
mov
xchg
cmp
repz
aad
xchg
mov
lods
jmp
push
or
stc
int
ret
fidivrs
sti
pushf
mov
sbb
sub
nop
fstl
jg
or
rol
sbb
sbb
insl
lret
add
and
jae
pop
out
mov
jae
js
lcall
hlt
mov
shlb
and
xor
push
rorb
addl
mov
push
and
hlt
push
cwtl
xchg
cmc
or
scas
in
out
cltd
or
lcall
xchg
dec
inc
sbb
outsl
mov
jmp
push
fdiv
lret
jecxz
add
xor
ret
mov
mov
not
imul
es
sub
notb
enter
mov
jb
into
push
out
loop
outsl
leave
xchg
xor
xchg
call
or
jae
ror
out
dec
or
dec
pop
roll
xchg
cmpsb
arpl
pop
cmpsl
bound
popf
stos
popa
mov
xorb
mov
push
into
shll
jo
pop
inc
icebp
jecxz
call
jl
je
repnz
push
mov
sub
xor
icebp
stc
lods
dec
dec
cmp
jmp
push
sub
jo
pop
adc
repz
in
inc
int
cmc
mov
scas
jg
jo
sbb
or
adc
insb
jecxz
cltd
daa
outsl
aaa
outsl
mov
ds
add
mulb
push
enter
test
mov
xor
xor
xchg
addr16
jne
loopne
in
xor
pop
jns
sub
lahf
sub
outsl
loope
cmp
hlt
out
sub
incl
loope
loopne
sub
jecxz
sub
cmp
rol
in
sbb
jle
sarl
jl
filds
out
and
shlb
adc
test
mov
orb
jge
pop
xor
adc
fisubrs
jb
stos
mov
adc
sub
lea
fidivs
test
pusha
xor
dec
fdivr
xor
icebp
mov
loop
mov
mov
xchg
clc
icebp
jle
mov
push
xchg
in
sub
jo
jnp
pop
sbb
cmpsl
and
loopne
stc
fwait
enter
mov
lods
xchg
xorl
clc
mov
incb
pusha
mov
pop
bound
push
daa
inc
dec
cmp
icebp
dec
sub
mov
cltd
fcomps
int
push
sbb
ja
cmpsl
int3
and
fwait
inc
jo
dec
xor
ja
repnz
aad
int
jmp
mov
pop
push
xchg
mov
arpl
addr16
pop
mov
dec
test
inc
gs
and
mov
lret
int
in
mov
jnp
fwait
sbb
pusha
in
sub
hlt
pop
movsl
scas
dec
inc
push
dec
cmp
mov
fiaddl
adc
jae
adc
xor
and
jns
lahf
icebp
movsb
pop
in
int3
mov
mov
out
mov
pop
push
cmp
lds
push
cmp
leave
mov
ds
cmp
adc
cli
xor
aad
jno
mov
lods
jge
imul
xchg
adcb
stos
mov
aad
or
mov
out
out
idiv
lcall
dec
fsub
sub
mov
fnsave
push
add
in
cs
pusha
push
push
repz
pop
dec
and
mov
pop
repnz
xchg
sub
imul
jbe
adc
push
movsl
aas
nop
scas
cld
xor
pop
in
sbb
lds
subl
dec
inc
movsb
js
test
and
push
lods
pop
adc
loop
mov
xlat
ss
push
cmp
mov
sub
mov
or
mov
ficoms
adc
lods
push
and
lret
shll
ret
mov
cmc
mov
sarb
pop
lret
or
ja
and
jecxz
pop
sbb
repnz
xchg
or
add
js
xchg
jp
jg
pop
push
inc
mov
sub
xor
mov
cmc
sbb
data16
dec
sbb
jo
cmpsl
cmp
and
rcrl
push
lds
call
xor
outsl
inc
and
leave
in
or
pop
fbld
fnstenv
decl
inc
sub
pop
mov
pusha
cwtl
sub
repz
mov
fisubrs
or
cltd
movsb
cli
push
xchg
les
sub
and
in
jnp
mov
testl
mov
jecxz
nop
icebp
dec
icebp
popl
adc
inc
add
mov
lods
push
mov
pushf
inc
xchg
fistpll
or
mov
mov
xchg
negb
sbb
hlt
popf
mov
ds
jmp
test
xchg
rclb
cmp
sbb
push
shll
addr16
cmp
xor
lcall
and
xchg
outsl
cmpsl
lds
push
jns
or
aas
ret
push
pop
outsl
push
js
repnz
inc
mov
lret
dec
mov
dec
aas
xchg
lahf
lods
call
mov
dec
sbb
div
or
push
out
adc
and
cltd
cmpsb
in
lods
hlt
test
mov
cmpsl
ret
out
or
imull
lds
dec
lret
pop
rorb
push
inc
mov
lret
fucom
pop
pop
gs
les
inc
or
clc
jmp
popf
outsl
ret
hlt
sarb
stc
icebp
aas
add
divl
sbb
jp
mov
mov
mov
or
dec
das
ljmp
pop
es
and
fs
sbb
adc
fldl
dec
add
xchg
cld
sbb
xor
pop
push
pusha
insl
cs
das
or
shrb
int
repz
and
sbb
mov
ret
aam
int3
jmp
add
jno
sbbl
das
inc
xlat
addl
lret
scas
data16
es
sub
cmp
jb
icebp
cltd
xor
mov
push
mov
pop
dec
mov
leave
test
mov
mov
test
xor
add
cmc
testl
enter
fists
out
pusha
test
cltd
sbb
or
xor
mov
jbe
jge
sbb
lret
inc
inc
adc
push
popa
and
xlat
sbb
push
mov
jb
push
xchg
cmc
sub
cmpsl
jae
add
mov
daa
cs
sqrtps
cmpsb
cwtl
pop
and
and
mov
fs
rcr
daa
mov
mov
lods
mov
jnp
jb
inc
adc
js
cld
nop
push
jb
mov
notb
xor
dec
push
jmp
aad
int
add
jne
jge
pop
dec
test
popa
negb
xchg
ljmp
push
lods
xchg
nop
out
or
jl
push
out
cmp
inc
int3
loop
cltd
add
xchg
push
jecxz
xchg
adc
xchg
or
push
push
mov
inc
mov
mov
cltd
inc
imul
cmp
nop
sbb
repnz
or
daa
mov
mov
or
push
imul
pop
add
in
xor
test
iret
mov
cmpb
add
sbb
lcall
mov
pop
test
into
mov
pusha
sahf
jp
mov
inc
push
add
and
push
mov
loop
insl
xor
mov
lahf
xor
push
inc
mov
pop
jae
jp
xor
xor
push
dec
or
pop
repz
fisttpll
jecxz
lea
dec
xchg
test
lret
popa
test
jl
out
jecxz
rorl
ret
sbb
dec
stos
xchg
push
push
and
clc
cwtl
mov
jb
ja
xbegin
adc
cmc
les
dec
mov
call
and
sahf
adc
xchg
mov
mov
shll
dec
dec
add
inc
pop
fbld
negl
je
loop
ljmp
mov
xchg
or
sub
xor
mov
in
mov
adc
add
sbb
xchg
adc
orl
xchg
jg
test
in
imul
mov
mov
inc
push
xor
test
mov
cli
push
and
lret
aad
jae
pop
nop
aam
gs
int
imul
jge
hlt
lahf
aaa
ficoms
add
aas
mov
mov
add
pop
xor
inc
xchg
mov
cmp
flds
or
stc
jne
out
faddl
out
push
and
inc
dec
xchg
data16
mov
fmuls
jb
adc
and
lods
test
sti
dec
adc
sbb
lea
mov
into
jle
lret
and
sti
fwait
mov
push
and
dec
mov
rcl
test
divb
mov
push
test
xlat
xchg
add
and
rcll
enter
cmp
in
movsb
out
sbb
or
dec
adc
daa
and
sub
mov
mov
cmp
dec
daa
adc
inc
fcmovne
push
in
mov
mov
adc
dec
pushf
sub
fidivs
cmpsl
xlat
push
xor
int
hlt
mov
aam
mov
jb
cwtl
inc
das
xchg
jl
mov
pop
negl
xlat
ds
jmp
pop
aam
xchg
lahf
adc
and
fucomip
lret
dec
sub
jle
mov
arpl
or
sbb
xchg
std
mov
in
xchg
out
mov
js
ror
xor
pop
pop
aad
cmp
das
and
movsl
jne
lock
mov
or
xor
mov
sbbb
daa
xchg
and
or
sub
psubd
inc
cli
cmp
pop
hlt
inc
pop
cmp
sar
dec
loop
sub
leave
sbb
xor
push
test
setp
das
leave
call
sbb
iret
ficompl
in
iret
in
jge
and
cltd
scas
enter
xchg
dec
shrb
adc
dec
lods
add
xor
mov
lea
and
cli
fwait
sbb
mov
jg
xchg
js
dec
roll
repz
dec
insb
mov
cmp
add
mov
fisttps
fsubrs
mov
pop
xor
je
inc
in
lock
das
mov
cmpsb
lahf
mov
mov
jmp
pop
outsb
cmp
jno
push
mov
call
int3
inc
idivl
inc
jmp
push
loopne
outsb
mov
imul
pop
les
ljmp
mov
sarb
mov
scas
shlb
and
repnz
mov
pop
subb
clflush
mov
aam
add
pop
movsl
test
mov
pop
out
je
movsb
xlat
jge
scas
xchg
adc
push
mov
cmc
dec
or
jg
roll
xchg
jae
pop
popa
mov
popa
add
call
imul
iret
dec
loopne
enter
cwtl
pusha
dec
and
clc
jns
jmp
sbb
adc
and
or
loop
mov
popa
lods
lahf
push
jecxz
loope
jmp
mov
sub
addr16
sbb
add
dec
roll
out
bound
out
xchg
cmp
mov
mov
pop
sbb
sti
andb
sahf
and
xor
fs
cmpsl
inc
arpl
push
clc
lcall
insb
sub
dec
mov
mov
fdivrp
sbb
faddl
sbb
pop
xor
mov
xchg
mov
or
pop
cld
mov
xchg
xchg
daa
movsl
mov
inc
dec
in
xor
aad
sbb
faddp
sbb
rclb
add
dec
xchg
icebp
adc
xlat
negb
and
cmp
cwtl
pop
sbb
adc
movsl
daa
mov
adc
sti
mov
mov
mov
xchg
pop
sbb
lock
inc
icebp
sub
push
mov
pop
push
ja
push
loope
and
mov
repnz
imul
or
aaa
fwait
or
data16
jp
xchg
gs
xor
push
dec
popa
mov
outsl
pop
inc
push
inc
xor
je
ljmp
push
push
add
mov
jmp
pop
out
pop
insb
mov
outsb
int3
cli
fsubrs
lods
add
sbb
xor
pop
adc
sbb
mov
adc
push
out
push
lret
lcall
adc
xor
cwtl
js
xchg
push
insb
lds
cld
jns
sbb
dec
mov
or
push
scas
jl
lods
mov
cli
cmpsb
ja
adc
dec
xchg
cmp
outsb
imul
mov
mov
sarb
loopne
adc
gs
push
sub
inc
xor
cmp
add
fisttpll
dec
or
neg
gs
dec
jp
in
int3
int
hlt
inc
dec
bnd
ja
add
subl
fsubrp
jo
fsubl
sbb
inc
adc
mov
pop
xchg
jnp
add
arpl
inc
imul
test
lcall
imul
sub
add
jae
pop
shll
ret
mov
jg
push
push
lods
adc
adc
and
cli
daa
push
xchg
adc
shlb
xchg
or
adc
mov
cltd
pop
push
addr16
in
dec
stc
cmc
into
sub
pop
push
push
push
sub
data16
mov
jecxz
push
pop
xor
cltd
xor
mov
std
jnp
jle
and
pushf
push
fidivrs
call
icebp
dec
xlat
ret
or
mov
lret
mov
movb
mov
xchg
mov
add
insb
leave
or
pop
sbb
push
adc
rolb
sub
arpl
repnz
fsubr
jo
enter
loop
mov
or
out
cmpsb
popf
sub
mov
rcrb
adc
sbb
lret
or
shll
inc
cmp
add
push
fisubs
cmp
xor
dec
add
mov
mov
insl
je
fcom
adc
jae
imul
jae
mov
jle
inc
sub
dec
sbb
negl
pop
push
adc
aaa
cltd
pop
cltd
jb
adc
xchg
out
in
pop
cmp
cli
je
mov
imul
fcmovu
xlat
rcrl
icebp
or
add
scas
dec
imul
lcall
pop
dec
mov
push
mov
cmc
popl
imul
repnz
sbb
fidivs
imulb
inc
es
bound
dec
insl
scas
aam
pop
jb
std
lods
add
xor
dec
mov
add
push
push
or
cmp
out
popa
es
insl
jb
test
int
aas
lret
ds
add
sub
sbbl
dec
mov
adc
idiv
pop
jecxz
test
sub
and
loop
pop
sub
lea
arpl
push
mov
mov
cmc
jo
sbb
pop
insl
fsub
cmp
cld
scas
scas
push
xor
mov
jns
outsb
sbb
lahf
addr16
rol
inc
jns
and
push
jns
inc
pop
mov
repz
test
jnp
xchg
mov
mov
dec
pop
mov
dec
cmpb
shl
mov
push
xor
sbb
jne
mov
test
loopne
xor
leave
push
in
fcmovu
dec
push
dec
loop
dec
pop
ret
call
sbb
ss
pop
out
lods
dec
pop
call
and
outsl
loopne
or
xchg
pop
pop
imulb
subb
sbb
enter
xchg
lds
mov
in
orl
popa
inc
std
xchg
test
adc
test
sub
bound
dec
frstor
insb
and
cmpsl
inc
mov
lahf
dec
sbb
jb
cmp
adc
fscale
inc
imul
mov
ja
mulb
in
mov
es
pop
pop
andl
jge
inc
clc
mov
pushf
es
pusha
sub
inc
outsb
pusha
fldenv
ja
inc
sahf
sbb
mov
and
push
xchg
repnz
outsl
sub
jl
mov
push
divb
cwtl
ret
adcb
imul
dec
repz
add
lcall
inc
mov
icebp
es
push
add
add
repnz
and
daa
jmp
xchg
repnz
out
in
pop
fcmovnu
adc
add
es
cmp
dec
stc
pushf
sbb
dec
mov
imulb
daa
shrl
iret
pushf
stc
pop
cmp
add
adc
rcl
leave
cs
add
and
pop
inc
or
mov
pop
iret
xor
nop
popf
lret
push
fwait
mov
dec
fisubl
add
jle
test
xchg
add
jns
mov
and
cld
scas
sbbb
dec
ljmp
mov
out
sub
or
cwtl
test
dec
jns
cmc
pop
fsubrs
jno
js
adc
arpl
jnp
ss
xchg
lods
xor
mov
outsb
call
add
je
cmp
mov
mov
xor
fnsetpm(287
mov
clc
cmp
sbbl
ret
cld
inc
cmp
jne
pop
jns
jmp
in
add
mov
cwtl
cltd
lds
pop
xlat
inc
rcll
cwtl
sub
pop
shrl
jae
cmpsb
stc
sahf
xchg
jle
jne
mov
stos
sub
mov
mov
scas
into
mov
push
dec
pop
adc
mov
lahf
sbb
inc
dec
cltd
dec
mov
out
std
sub
push
imul
pop
sbb
leave
icebp
mov
daa
in
cmc
cmp
movsb
cmc
and
pop
pop
mov
xchg
aam
or
inc
xor
push
xor
add
jmp
in
or
push
test
aas
mov
fwait
ret
clc
push
sub
lret
int
mov
pusha
lods
mov
and
pop
daa
pusha
ss
pop
cwtl
les
mov
pop
jmp
rcrl
pop
out
jp
rclb
outsb
es
jns
cmpsb
mov
in
cltd
loopne
insb
or
mov
mov
mov
sbb
mov
mov
jp
ret
and
cltd
sub
movsl
test
mov
push
out
jno
les
adc
mov
sbb
sub
pop
mov
jmp
push
add
push
jne
bound
std
or
pop
xlat
mov
stos
addr16
jnp
push
cmp
sbb
cmp
fcomps
gs
dec
sbb
xchg
scas
push
leave
fildl
cmp
adc
ret
dec
dec
in
and
test
cmp
mov
push
mov
out
xchg
in
insl
imul
out
xchg
bound
in
xchg
mov
or
ds
dec
jo
inc
mov
sti
out
mov
pusha
xor
xchg
mov
sub
int3
sub
pushf
out
xchg
rcrl
jp
or
mov
xchg
aas
push
jg
mov
xor
mov
bound
imul
jne
jp
jnp
dec
cmp
lahf
aas
dec
jmp
cmp
sbb
bound
rorb
mov
xlat
cmp
jmp
inc
rcrl
inc
dec
test
pop
jne
sahf
andb
adc
mov
rolb
xor
loop
cmpsb
ja
push
fwait
add
push
cmpsb
sbb
popa
inc
sbb
push
cmp
xchg
add
mov
je
jmp
jae
notl
jne
jnp
test
add
shll
xor
jp
jnp
or
jp
or
push
jp
cmp
jns
push
lds
jge
adc
xchg
subl
xchg
xor
mov
pop
xchg
lret
sbb
mov
pop
cli
fucomip
mov
xchg
inc
sarl
xor
xchg
mov
repz
int3
pop
scas
dec
mov
push
out
js
mov
push
jo
jle
or
mov
jg
bound
pop
pop
mov
mov
xlat
push
adc
push
sbb
insb
fucomip
popf
repz
fsubrs
popf
jns
bound
mov
inc
xor
out
and
xor
sti
andb
mov
mov
movsl
or
loop
xchg
mov
xchg
push
out
test
push
xor
in
repz
pop
jne
ret
mov
xchg
pushw
lods
pushf
fmuls
mov
and
lahf
out
push
aad
test
bound
lret
ror
addr16
js
sub
xor
enter
cmp
push
lods
jne
movq
in
jl
mov
arpl
inc
push
lret
lea
inc
sub
mov
mov
repz
push
gs
test
in
and
test
xor
adc
jo
or
mov
adc
add
cmc
out
mov
pop
test
movzbl
imul
lods
aad
add
enter
ret
inc
cmp
mov
pop
pop
xor
adc
xor
pop
sbb
sub
outsb
cwtl
mov
enter
out
adc
sub
dec
movsb
jecxz
aam
and
push
add
push
incl
popa
adc
dec
jmp
mov
insl
inc
or
cmp
or
mov
mov
roll
sbb
mov
shlb
push
lret
adc
cmp
inc
inc
add
lods
xchg
loop
call
mov
sbb
fsubs
mov
cmp
push
vandnps
dec
hlt
mov
test
adc
mov
and
js
xor
adc
mov
fbld
out
outsl
xchg
mov
ds
jl
inc
mov
adc
pushf
mov
imul
ss
push
int3
aas
dec
sbb
mov
fidivl
fsubrl
lret
adc
faddl
stos
lock
inc
jmp
fidivrl
leave
adc
xchg
jp
cmp
add
and
jb
inc
xchg
int3
inc
fistps
jg
jnp
inc
dec
cmp
cwtl
mov
mov
xchg
sbb
in
add
int
lock
das
cltd
nop
mov
test
xchg
repz
adcb
inc
jl
sbb
add
fisubrl
or
ja
inc
pushf
in
orb
mov
cwtl
xor
ret
data16
test
sbb
push
lods
movsb
jge
mov
pop
fs
adc
xchg
add
inc
xorb
mov
rorl
push
insb
mov
ftst
fcompl
fdivl
lret
or
mov
out
or
xchg
mov
dec
frstor
enter
dec
repz
push
mov
dec
fwait
mov
sub
cmp
pop
pop
or
testb
gs
and
ret
clc
hlt
inc
cmpsl
jmp
xchg
cmp
jnp
loopne
ret
dec
loope
pop
femms
xor
add
test
icebp
dec
sbb
jbe
xchg
sti
mov
xchg
cmpsl
xchg
and
rclb
sbb
mov
jb
pop
adc
int
mov
ret
imull
mov
or
or
pop
mov
add
mov
mov
sbb
in
add
dec
insl
push
mov
xor
pop
dec
mov
cmp
pop
add
pop
fcmovnb
push
ljmp
and
dec
inc
inc
stc
orl
fwait
cmpsl
xchg
sub
sub
xlat
mov
rcrl
mov
stos
xor
mov
sti
pop
gs
inc
mov
inc
mov
aas
lods
ds
fdivrl
and
icebp
xor
outsl
pop
frstor
dec
dec
and
fs
add
inc
stos
int
mov
dec
loope
dec
push
push
dec
repnz
aam
mov
dec
xor
es
ret
xchg
inc
stc
adc
fidivs
in
or
dec
or
mov
or
repz
nop
adcl
dec
push
xchg
cmc
fwait
out
mov
lret
xchg
jne
ret
int
mov
mov
jp
pop
mov
push
test
sar
cmc
out
hlt
jnp
addr16
es
insb
cmpsb
mov
lahf
fwait
cmp
fs
int
jno
jmp
cmpsb
out
int3
sbb
leave
repnz
pop
jmp
mov
mov
mov
lret
xchg
xor
xlat
inc
lods
adc
mov
add
mov
push
mov
cmp
std
iret
rcr
jno
fmuls
push
sbb
lods
sub
lds
add
rorl
cmp
rorb
mov
mov
pop
out
push
mov
sbb
or
shlb
insl
lods
les
cmpsl
pop
add
dec
into
xchg
push
adc
dec
xchg
sbb
ja
jb
lahf
clc
icebp
cmp
push
cli
lds
dec
and
rorl
push
lret
fchs
push
leave
pop
enter
push
and
shll
scas
inc
mov
std
cmpsl
fs
or
ss
testl
sbb
jmp
fisubl
xchg
cmpsl
pop
fnsave
cwtl
dec
sub
loop
fsubl
out
jae
outsl
mov
orl
sbb
push
dec
pop
or
dec
test
adc
lock
fisttps
call
jle
aaa
dec
lods
add
pop
mov
repz
mov
mov
push
call
rorb
adc
inc
les
insl
push
das
push
mov
add
push
imul
or
jmp
mov
scas
movsl
stos
call
pop
mov
add
mov
into
sub
mov
movsb
dec
stos
pop
or
hlt
or
mov
or
lret
push
call
in
xor
fbld
sub
testl
cmp
aam
or
sbb
sub
cwtl
ss
movsb
mov
movsl
jno
inc
cmp
and
pop
pop
add
xor
icebp
int3
push
mov
imul
pop
sahf
xor
push
jne
les
dec
addr16
je
xor
imul
inc
jo
pusha
cmpsl
sti
clc
out
inc
lods
popf
in
icebp
push
jnp
xorb
xchg
jns
popf
jmp
movsb
sbb
fcmovnu
and
sub
push
rorl
mov
cs
jmp
jbe
jno
or
or
inc
and
dec
xchg
xchg
add
mov
push
pop
lahf
inc
pop
lahf
jp
add
repz
clc
rol
jae
ds
fisubrl
lcall
mov
scas
fistpll
xchg
pop
mov
cmp
aad
pop
jle
jnp
push
xlat
data16
out
gs
subl
mov
aaa
flds
lods
or
hlt
pop
cmp
or
jo
and
pop
lds
pop
icebp
jo
xor
aad
add
jg
enter
movsb
mov
push
lret
xchg
jmp
int
push
xor
adcl
ja
mov
icebp
out
imul
andl
out
pop
mov
scas
insl
push
inc
aad
push
scas
not
inc
aam
adc
int3
xor
test
insb
pop
js
pusha
xor
loopne
mov
and
sahf
loop
add
gs
call
xor
inc
fstps
mov
in
jmp
pop
adc
popl
adc
scas
push
nop
push
push
sbb
dec
divl
mov
outsb
pop
adc
xor
pop
xor
push
jns
push
mov
add
and
dec
loopne
out
cld
das
cmp
xchg
data16
call
out
adc
push
popa
sahf
divb
push
mov
repz
aaa
push
inc
mov
lret
xchg
sar
mov
xchg
jle
pop
das
repz
fcoml
pop
out
dec
pop
and
jo
xchg
mov
ror
pop
movsl
xchg
cmpsb
jno
aam
push
or
movsb
add
push
cmpsl
inc
or
add
push
popf
cmpsl
inc
mov
int3
mov
or
ljmp
xchg
sti
sub
sbb
xchg
ds
or
hlt
les
mov
jo
push
mov
lds
cmp
sub
test
popf
addr16
test
ja
xchg
pop
and
rcl
push
adc
arpl
dec
fisubs
sub
leave
pop
dec
repz
imul
call
cltd
or
mov
aad
lret
cmpsl
fisttps
dec
fnstenv
pushf
pop
pop
cmpsb
iret
iret
pop
lock
ja
dec
add
stos
outsb
test
push
add
lret
sahf
cmp
test
dec
xor
sti
mov
bound
pop
xchg
jmp
lods
add
jmp
movsl
pop
fldt
rcl
lea
cli
and
shrb
adcb
sti
data16
js
stos
lea
insb
xchg
pop
add
inc
test
push
jg
call
sbb
dec
jg,pt
mov
enter
jno
push
push
jecxz
insl
lds
inc
clc
add
push
shll
mov
adc
addb
inc
pop
push
jge
testb
xchg
mov
stos
xchg
jnp
into
repz
and
pop
sub
pop
add
lods
sub
leave
loope
sub
iret
lret
sub
lock
pusha
lcall
dec
fildl
mov
sbb
xor
sub
xor
push
and
pop
add
es
xor
mov
test
scas
dec
push
out
dec
icebp
ret
fnsave
mov
mov
fucomip
lret
xchg
add
fucomi
lret
dec
jb
mov
loop
pop
scas
xor
ds
popf
mov
inc
fs
pop
aad
adc
jo
cwtl
icebp
pop
or
in
lods
jo
jmp
xchg
dec
mov
sbb
add
add
das
out
cmc
pop
jae
mov
xchg
mov
scas
lods
lahf
and
pop
add
inc
xchg
or
and
add
mov
mov
and
fcomp
cmpl
mov
leave
dec
rclb
lods
xchg
sbb
stc
cmc
in
lds
lcall
and
sar
jecxz
cmp
lret
mov
jae
mov
data16
scas
xor
inc
bound
call
movsb
push
sub
mov
push
in
xchg
lcall
xchg
xchg
mov
dec
or
pop
jecxz
fs
xor
inc
les
enter
pop
mov
or
iret
lret
mov
and
call
sahf
inc
or
lahf
iret
hlt
or
repnz
jo
pop
leave
int
movsl
push
icebp
xchg
test
fimull
pop
jb
dec
out
jno
jb
sarl
pushf
push
outsb
mov
iret
popa
or
xchg
xchg
mov
xor
call
fwait
mov
stc
cli
add
xor
inc
xchg
mov
loopne
mov
out
dec
nop
jp
sarl
fldl
push
adc
or
loope
fidivl
idivb
mov
pop
icebp
push
push
or
nop
cmp
aam
xchg
ret
push
or
xchg
mov
lea
add
mov
aad
test
stos
inc
jmp
jbe
into
in
test
mov
in
dec
aad
repz
xchg
ret
cmp
test
fwait
ss
inc
or
add
icebp
lods
into
adc
push
xor
jns
inc
cltd
inc
xchg
cmpsl
jge
xor
add
aad
xor
adc
adc
jno
in
in
cmpsl
js
cmpsl
xlat
sbb
dec
test
xchg
xor
mov
and
mov
sbb
shrb
adc
fistpll
out
or
cs
mov
dec
mov
inc
and
sub
loopne
or
es
mov
push
sub
push
cmpsw
into
jb
push
shl
mov
icebp
cltd
pushf
push
cmp
sub
cli
stos
and
inc
leave
push
xchg
ret
lods
pusha
xor
mov
pop
arpl
push
daa
sub
out
je
scas
pop
leave
aas
jo
mov
arpl
aaa
outsb
stos
in
cmp
inc
dec
negl
movsb
movsl
or
in
adc
xchg
cmpsb
lea
add
aas
jecxz
into
jp
imul
fs
cli
ljmp
loop
push
daa
cmp
insb
xchg
xchg
cmp
daa
or
push
jecxz
loopne
iret
ficoml
dec
push
xor
pushf
xor
dec
movsl
push
ja
aam
or
add
out
and
mov
adc
lcall
shlb
test
pop
stc
repnz
and
jp
popf
imul
fisubs
mov
cmp
jg
mov
sahf
fs
sbb
jo
cmpsl
out
push
sub
movsl
pop
lds
and
push
push
pop
adc
pop
fcmovne
cmp
cmp
pop
shlb
out
cmp
lds
xchg
repz
in
jnp
inc
mov
cmp
sbb
sub
les
or
mov
inc
mov
push
cmp
xchg
pop
sub
lods
outsb
xor
push
les
cmp
mov
cmp
enter
mov
incb
in
ret
cmp
in
sti
mov
mov
int3
lahf
mov
aad
shlb
ljmp
aad
fists
push
rolb
lods
cs
sbb
das
mov
mov
jmp
out
inc
pop
push
add
or
xlat
sub
cmpsb
ja
mov
push
inc
inc
and
xor
cmp
sti
rcrl
jo
clc
xor
lcall
sbb
call
mov
in
pop
subb
pop
ret
push
cmp
or
dec
sar
int
xor
xor
lcall
arpl
cwtl
loopne
cmp
test
jmp
mov
push
scas
pop
out
or
lcall
repz
call
add
push
std
test
ljmp
ljmp
lods
or
pop
out
mov
hlt
jb
outsl
xchg
leave
out
cmp
dec
imul
pop
mov
addr16
mov
pop
enter
adc
inc
xchg
and
out
imulb
jb
hlt
jp
pop
movhps
lock
insb
sti
jge
pusha
jmp
adc
fwait
jg
dec
adc
out
cmpsb
dec
or
cmpsl
outsb
in
mov
repnz
test
inc
cmpsb
push
mov
sbb
pop
dec
fwait
mov
mov
into
mov
xchg
test
add
mov
sahf
add
lods
addr16
dec
test
ds
mov
in
xor
mov
mov
hlt
in
add
mov
mov
loope
imul
or
add
mov
dec
les
in
pop
ds
je
fstps
jno
jg
jo
dec
mov
lret
xchg
test
inc
mov
scas
jno
stos
add
inc
stos
fdiv
scas
push
sbb
mov
outsb
lods
sbb
xor
push
sarb
pop
xlat
fistpl
xlat
xlat
sti
dec
arpl
fnstcw
ret
xorl
pop
aaa
sub
vucomiss
xor
or
cmpsl
test
mov
inc
dec
ficoms
mov
lcall
add
aaa
mov
sub
popf
test
xorb
pop
cmp
ljmp
and
fmuls
aas
repnz
sarl
sbb
xchg
mov
mov
inc
bound
test
or
dec
mov
xchg
inc
and
push
mov
mov
ss
stos
sbb
test
dec
mov
jmp
loopne
in
inc
push
icebp
xchg
rcr
push
push
gs
push
xchg
out
in
or
movsb
repz
cmp
cmpsl
test
sbb
jmp
adc
pop
xchg
je
xor
scas
jb
jmp
loopne
fldt
testl
mov
xchg
sub
shl
fistps
not
jmp
fadd
xchg
xor
pushf
push
sbb
fnstsw
ret
mov
sub
mov
shll
test
and
sbb
xor
lds
pop
stos
daa
lret
pop
lret
sbb
sbb
jo
insl
dec
pop
lods
push
sbb
dec
push
mov
loopne
scas
fiadds
test
cmpsl
jp
call
xchg
insl
arpl
mov
jnp
fwait
mov
std
fistps
jno
sub
je
mov
ficompl
std
mov
imul
xchg
arpl
dec
in
adc
mov
mov
loop
adc
repnz
mov
xchg
inc
push
mov
pop
insl
dec
hlt
cmp
iret
mov
ljmp
xlat
dec
jne
mov
jmp
outsb
daa
jo
xor
sbb
cmpsl
imul
push
push
aas
jge
dec
movsb
subb
or
or
add
xlat
push
or
fnstcw
icebp
and
mov
daa
shlb
addr16
rep
sahf
fs
mov
leave
mov
pop
jmp
push
cld
int3
xchg
fisttps
ljmp
lret
adc
xchg
iret
mov
and
andl
xor
push
out
fists
dec
cmp
sbb
jge
roll
adc
mov
mov
sbb
pop
arpl
idivb
sbb
mov
int3
mov
flds
push
and
inc
sbb
insl
jecxz
aad
bound
cmp
ss
popa
or
jns
aas
mov
pop
push
mov
pop
lods
adc
pop
in
nop
js
jmp
jne
out
sti
jmp
fcoms
add
pop
and
xor
cmp
dec
out
popaw
fildll
sahf
ljmp
out
scas
xchg
jne
pop
lret
adc
divb
js
jmp
and
xchg
aam
jge
add
stos
mov
stc
nop
rorl
jecxz
inc
insb
outsb
outsb
insl
lahf
scas
aaa
icebp
inc
cltd
ja
jo
push
cmp
enter
ffreep
lcall
adc
push
rclb
lea
xchg
inc
pop
popa
push
inc
dec
or
sub
imul
mov
test
push
pop
add
sub
and
aad
stos
aad
xchg
sbbb
in
xchg
sahf
and
adc
push
mov
repnz
pop
mov
test
mov
in
xchg
push
sbb
sarb
test
jbe
or
in
popf
es
leave
mov
nop
mov
out
dec
hlt
mov
test
add
fdivl
push
adc
add
mov
imul
or
lahf
es
sub
mov
or
add
stc
lahf
cltd
push
inc
outsl
pavgb
xchg
mov
movsb
xchg
into
cli
jnp
push
or
mov
jno
insb
and
cmpsl
cltd
dec
pop
push
xor
ret
add
rcrl
shrl
dec
in
cmc
js
push
add
aas
mov
addr16
xchg
cmpsl
fwait
test
xor
and
xor
mov
sub
das
leave
mov
push
movsb
addb
arpl
dec
xor
xchg
test
fdivr
rorb
or
lret
sub
xchg
lahf
inc
pop
and
or
mov
xchg
xor
jnp
pusha
and
xchg
sub
xchg
ja
jl
cli
mov
sub
sub
dec
xchg
rclb
std
inc
xor
xchg
ss
and
mov
ljmp
int
jge
fsubl
test
mov
xor
mov
jbe
jbe
pop
pop
sub
stos
je
movsb
data16
out
add
mov
inc
mov
push
dec
or
imul
rcrl
pop
cmp
fst
cwtl
adc
add
aas
cwtl
dec
fwait
shlb
dec
lcall
es
rclb
cltd
aad
push
lods
push
adc
scas
xor
xor
insl
mov
loopne
and
insb
jge
add
cmpl
ss
sub
nop
adc
shl
and
xchg
jo
aad
imul
movsl
sub
cmp
leave
lret
shl
mov
andb
inc
ds
dec
hlt
test
mov
insl
outsb
js
int3
test
xchg
jp
inc
rcr
cmp
lahf
jno
cmp
push
das
xchg
xor
cmpsb
adc
cmpsb
js
and
adc
shll
call
mov
inc
sub
push
mov
xchg
xchg
int3
lds
dec
push
jecxz
pop
jmp
jne
push
mov
and
cmovo
sbb
mov
jbe
je
add
adc
jnp
xchg
inc
push
mov
and
adc
jb
mov
dec
iret
sbb
rcrb
repz
pop
sbb
data16
aaa
gs
add
stc
fstpl
sbb
aaa
pop
std
jne
test
out
mov
xchg
and
sbb
jl
jmp
jl
je
dec
data16
dec
inc
sub
xor
adc
hlt
in
imul
mov
fstpl
imul
cmp
mov
nop
test
inc
jno
inc
push
fwait
mov
std
out
mov
push
aaa
cmp
clc
ss
rclb
aad
int
adc
mov
int
fcmovnb
or
in
sti
pop
jnp
add
js
sbb
mov
pop
movsb
add
movsb
sahf
and
inc
call
cwtl
jo
lea
pop
pop
mov
dec
xchg
fstpl
sbb
ret
sbb
and
push
nop
cmp
cmp
mov
ljmp
mov
add
ficompl
hlt
in
and
jge
sub
or
and
outsb
adc
xchg
js
aam
and
insl
jg
jl
popa
xchg
in
in
adc
bound
out
rorl
dec
and
sbb
insb
out
jecxz
and
mov
aas
jo
add
xor
inc
fistl
jecxz
adc
ss
xchg
adc
push
repnz
xchg
jp
aas
enter
pop
icebp
clc
repnz
mov
push
pop
popa
jge
fldcw
int
mov
mov
sub
push
ret
add
xchg
in
jg
scas
ret
xchg
jne
push
sub
rolb
jge
in
cmc
clc
jno
subb
js
jae
mov
or
sub
mov
jmp
loope
cmpsb
lods
push
push
cmp
inc
push
mov
mov
sbb
cmp
rcr
inc
mov
add
mov
cmc
mov
sub
mov
mov
pop
cmp
insb
mov
mov
insl
into
call
jmp
jne
cmpsb
popf
inc
shl
or
leave
jns
movsb
js
stc
dec
pop
out
lods
push
fcoml
inc
rorb
int3
and
icebp
inc
sbb
das
xchg
call
imul
loop
adc
scas
jmp
es
inc
and
fnsave
aad
pop
rcr
imul
out
pop
and
rcrb
jge
sbb
insl
mull
xor
in
popa
mov
push
fsubrl
insb
icebp
inc
les
sub
movsl
rorb
imul
and
push
pop
pop
sub
repz
xor
dec
mov
lret
loope
popf
aaa
xchg
mov
cltd
and
inc
pop
xchg
insl
xchg
data16
in
ret
movsl
loopne
inc
pop
inc
xor
and
clc
xor
iret
push
mov
pop
imul
push
sub
cmp
push
pop
sub
lods
pop
stc
sub
loope
in
daa
data16
add
repnz
mov
stc
scas
imull
outsl
xchg
lods
mov
popf
decb
and
add
xchg
fdivl
stos
dec
jmp
add
test
dec
ljmp
ljmp
push
cmp
xor
mov
lret
jnp
pop
mov
stos
es
inc
and
or
in
not
aaa
and
mov
and
in
inc
jg
test
jl
dec
testb
mov
sbb
mov
xchg
mov
sub
cmp
jmp
mov
insl
ret
push
test
mov
pop
jno
and
mov
lcall
movsl
mov
push
xchg
mov
imul
pusha
jle
ds
bound
inc
les
cmp
test
daa
sub
push
jge
push
mov
nop
mov
pop
push
dec
and
sub
or
out
xchg
je
movaps
sbb
xor
adc
clc
jae
jp
and
or
push
in
mov
add
jg
push
mov
clc
sub
popa
sub
popa
cmp
ret
add
mov
bound
out
inc
cltd
xchg
add
push
push
scas
add
push
mov
mov
scas
sbb
lahf
dec
jne
iret
push
mov
popf
fldl
push
sbb
sub
dec
lods
pop
pop
mov
popaw
stc
add
mull
icebp
lea
mov
push
add
pop
cld
adc
mov
test
mov
push
loope
inc
repnz
cmp
nop
pop
divb
pop
xchg
push
insl
fsub
mov
jecxz
dec
data16
push
add
lea
ret
movl
int3
mov
jbe
scas
ss
pop
shll
mov
mov
pop
cmpsb
jmp
pop
fisttpl
and
mov
adc
adc
push
sub
xchg
addb
or
jg
sbb
mov
in
sub
mov
into
lds
dec
push
fcmovnb
clc
scas
sarb
jnp
adc
and
mov
cwtl
outsl
cmp
mov
or
jg
mov
adc
pop
lcall
sub
push
add
pop
div
sub
into
mov
mov
push
sahf
push
popf
push
pop
jae
pop
and
mov
divl
jo
clc
inc
add
in
cmp
and
iret
jb
add
cmc
jo
loop
mov
in
fdecstp
rcl
pop
int3
mov
mov
rol
dec
sub
into
push
mov
dec
cwtl
inc
pushf
jae
pop
iret
mov
int
cmp
insb
xchg
lods
mov
pop
push
inc
adc
or
mov
outsb
jo
rol
shrb
scas
inc
jl
in
out
sub
pusha
and
jne
movsl
stos
loopne
and
testl
in
xchg
xchg
push
repz
rcll
rorl
ja
ja
es
movsb
jecxz
das
arpl
push
cmp
ja
sub
jl
jmp
insl
xchg
push
lods
add
adc
fadds
pop
dec
stos
iret
adc
pushf
fidivs
add
jge
jns
mov
leave
pop
ljmp
sbb
cs
or
sti
int3
push
fdivrl
scas
and
dec
les
pop
push
push
hlt
lret
xor
test
jnp
ret
add
dec
nop
sti
cmp
mov
mov
icebp
call
push
adc
cmp
int3
adc
push
xor
lock
rolb
fidivs
outsb
or
push
and
xor
stos
jno
and
cltd
insl
inc
aam
lods
jne
sub
push
mov
xor
dec
add
lds
stos
sbb
mov
fsts
pop
cmp
cltd
sbbb
gs
ret
jne
add
sarb
inc
and
stos
xchg
and
inc
andb
adc
aam
out
pop
iret
sub
test
inc
mov
mov
mov
push
into
ss
jae
sub
add
out
xlat
adc
mov
jne
push
push
mov
mov
mov
mov
and
sbb
mov
jae
fwait
dec
dec
addl
push
movsb
cs
dec
sub
jae
xchg
mov
mov
sub
mov
outsb
cmp
mov
cmp
int3
jmp
sti
fiadds
mov
stc
mov
ret
in
daa
fistpll
inc
je
popf
daa
xchg
jp
cmc
jno
cmp
mov
mov
mov
hlt
cmpsb
xor
lods
adc
mov
adc
lods
xchg
dec
add
xor
cmp
and
fisubl
inc
into
xor
cltd
in
inc
leave
push
or
test
je
rep
movsl
pop
push
loope
out
js
inc
cmp
in
cs
pusha
mov
aas
stc
shll
scas
adc
imulb
push
xchg
and
mov
mul
mov
xchg
test
fstp
leave
sti
enter
addr16
jno
loop
in
mov
mov
loope
mov
das
jl
loope
faddl
mov
lods
inc
orl
xchg
daa
cmp
and
adc
clc
push
sbb
jb
scas
push
sbb
cwtl
adc
imul
xor
mov
stos
sbb
scas
xor
imul
jp
pop
scas
xchg
loop
or
cmpsb
push
mov
push
pop
cmp
gs
cmp
in
scas
pop
lods
pop
cmp
jl
or
jb
out
in
sar
rolb
lret
insb
popa
dec
out
and
popf
mov
push
mov
pop
arpl
cwtl
fistps
dec
adc
leave
xchg
or
andl
inc
sarb
jle
mov
movsb
fnstcw
pop
outsb
repnz
cmc
rorl
aam
in
test
dec
or
dec
cmp
cmp
stos
jg
in
inc
int
push
cs
jno
lds
adc
daa
inc
popf
addl
xor
jp
cld
mov
dec
jecxz
mov
xchg
pop
fmulp
es
daa
and
mov
je
jmp
dec
mov
mov
cli
cmc
mov
xchg
mov
pop
aad
movsb
xlat
jle
lock
sahf
lods
popa
jb
pop
out
test
jns
inc
aam
sbb
sbb
ret
jnp
cli
adc
cld
and
cmp
test
add
loopne
inc
pop
andl
sbb
mov
jne
jle
add
data16
mov
ror
test
cmpsb
mov
les
push
sub
push
insl
inc
cmc
in
cmp
imul
cmc
roll
xchg
xor
into
pop
xor
push
mov
popf
divl
negl
jp
cmp
sub
mov
cmc
or
rorb
test
loope
leave
mov
and
ljmp
dec
inc
push
xor
into
xlat
andb
mov
mov
and
or
test
jl
mov
test
fisttps
ljmp
stos
shrl
xor
bound
in
add
lahf
imul
or
adcl
sbb
js
das
stos
insb
inc
push
cld
in
inc
out
add
cli
dec
push
mov
cmpsb
mov
lods
insl
movsl
outsl
jnp
cmp
and
ret
mov
sbb
sub
pop
icebp
push
mov
out
xchg
cmpsl
push
pushfw
push
cld
adc
shlb
clc
dec
cmpsb
mov
test
sub
loopne
aam
andl
repz
jle
pop
pop
imul
mov
jbe
cmp
ds
pop
adc
xchg
in
aad
xor
idivl
daa
outsl
xchg
cltd
jmp
push
sti
movsl
mov
mov
jmp
mov
add
adc
xchg
fsubrs
or
sub
jbe
in
inc
push
nop
stos
loope
xor
xchg
decl
inc
add
sub
mov
dec
sub
lret
out
mov
in
cwtl
fldt
jle
loopne
repz
mov
loope
repz
fsubrs
sbb
inc
pop
mov
push
stos
cmpsb
xor
dec
pushf
xchg
inc
jg
add
hlt
lds
and
dec
movsl
imul
mov
adc
and
bound
mov
mov
xor
lods
out
sub
jns
push
shld
pop
pop
stos
add
lea
clc
lret
push
cmp
mov
and
push
and
lret
mov
loop
push
fwait
cmpsl
iret
pop
mov
and
sarb
lret
jno
push
mov
imul
push
test
add
mov
jmp
rcll
aam
pop
cmpsb
cmp
lcall
dec
lock
xchg
or
popf
icebp
mov
ficoml
add
xchg
mov
jmp
xchg
push
xchg
xchg
fnstenv
jg
pusha
cld
dec
into
flds
je
cmp
push
mov
adc
jge
aaa
inc
fnstcw
cltd
cmp
pop
mov
mov
and
imul
loopne
test
jne
ret
lds
test
insb
mov
sbb
in
ret
icebp
mov
xchg
and
lahf
dec
mov
gs
fbld
notl
movd
stc
cmp
bound
push
or
inc
cmc
push
mov
outsl
cli
mov
fisubrl
fidivl
pop
cmc
sbb
clc
push
int3
rorb
mov
inc
das
adc
or
imull
xchg
inc
lds
iret
sub
iret
xor
push
xor
cmpsb
mov
xlat
or
dec
fidivl
or
mov
inc
add
or
jae
es
cltd
repnz
mov
or
test
cwtl
testl
ror
sbb
enter
inc
xchg
inc
cmp
or
dec
add
add
mov
packssdw
adc
testl
dec
pop
add
mov
lds
test
clc
arpl
dec
ja
mov
in
test
in
or
out
les
push
out
jae
sahf
mov
jne
xchg
jmp
mov
xchg
cmp
jbe
lds
stc
shl
mov
insl
and
sub
scas
stos
cli
add
dec
jg
dec
xchg
arpl
rorl
add
movsl
pushf
mov
add
ret
add
sub
inc
add
jae
in
adc
out
and
es
stos
push
xchg
mov
mov
cmc
or
out
sub
mov
repnz
test
jg
insb
roll
push
rorl
dec
sub
and
xor
jmp
rolb
roll
mov
mov
jo
imul
xorb
loopne
aaa
ds
cltd
fsubs
jns
loope
sub
aas
jmp
sbb
adc
pop
and
xchg
inc
and
jb
out
and
fsts
and
adc
pop
or
cmp
mov
icebp
mov
adc
ds
or
roll
outsb
mov
sbb
cmp
shrl
mov
jb
cli
adc
push
rclb
mov
adc
mov
push
movsb
sbb
inc
push
inc
mov
mov
xchg
mov
subb
insl
xor
int3
sbb
cmp
dec
jmp
repz
cmpsl
mov
pushw
adc
popa
and
cli
into
outsb
or
divb
mov
pusha
jo
hlt
cli
outsb
cmp
test
and
sub
inc
in
ljmp
mov
shr
mov
sbb
dec
iret
jp
mov
pop
daa
add
iret
or
sti
fwait
insb
int
mov
movsb
xchg
and
rol
in
mov
gs
and
addr16
fs
enter
pop
pop
cmpsb
sub
outsb
fmuls
mov
imul
and
xor
push
mov
push
enter
push
jl
stos
lahf
call
jmp
sbb
daa
cmpl
mov
sbb
aaa
shlb
repz
out
inc
sbb
insb
shll
insl
sahf
in
jb
sub
bound
pop
mov
vmovq
and
mov
push
mov
ret
push
cmp
cld
inc
mov
cmpsb
xchg
sub
leave
ds
imul
aad
mov
push
add
and
stos
add
ret
dec
sub
add
insl
dec
jae
cwtl
test
jae
daa
add
test
stos
or
lods
mov
adc
pop
or
sbb
mov
sub
sbb
fmuls
sti
push
mov
mov
pop
push
pop
pop
icebp
lds
es
ret
popf
ss
sbb
call
arpl
xor
ss
or
inc
testb
popf
shrb
call
mov
lret
orl
outsb
js
xchg
in
and
rclb
xchg
adc
cmc
ror
rolb
pushf
add
iret
test
ss
cmpsb
scas
pop
aad
mov
mov
js
loop
repz
sub
mov
xchg
inc
insl
lcall
add
jg,pn
scas
sbb
adcl
adc
ficoms
cli
lea
sub
add
sbb
icebp
test
or
sub
es
lea
rcl
push
mov
inc
cld
stc
add
sarb
loop
inc
fldl
cli
pop
adc
or
jg
sarl
call
mov
xchg
enter
jae
imul
adc
rcl
adc
sbbb
xor
mov
jns
dec
inc
inc
jge
into
pushf
fwait
popa
mov
sahf
cmp
adcb
test
shl
adc
push
sahf
icebp
xor
jne
sub
sbb
lods
cmp
or
out
mov
iret
addr16
cmc
xchg
push
xchg
in
or
out
mulb
jl
sbb
testl
rolb
dec
and
mov
jae
dec
add
xchg
iret
repz
mov
insb
outsl
scas
shll
fldl2t
aas
lret
iret
fcompp
call
xor
out
incl
jp
cmpsl
adc
and
jo
ret
lods
insb
in
aam
pop
in
out
add
jmp
pop
outsl
cmp
addl
ljmp
cli
mov
jb
mov
insl
push
push
mov
push
xlat
cmpsl
sarb
jp
sbb
sub
mov
mov
pusha
dec
inc
shll
cmp
imul
gs
mov
lds
or
jmp
jae
clc
jle
push
sarb
cmp
mov
jo
cld
push
jecxz
pop
xchg
in
pop
push
shl
test
jns
dec
jmp
dec
inc
inc
popa
ljmp
lods
xchg
pushf
cwtl
mov
xor
cmpsb
cli
ljmp
out
shlb
jp
outsb
hlt
push
sub
xorb
pop
js
popf
and
movsb
mov
add
push
xor
out
adc
insb
pop
mov
loopne
mov
xchg
xlat
add
stc
xor
push
mov
ds
and
add
divb
pop
daa
negl
fadds
lahf
cmp
test
xchg
fcoms
lods
iret
into
stos
or
add
or
jmp
jne
push
iret
shrl
xchg
inc
je
clc
ljmp
lds
fmul
dec
add
pop
idivl
add
dec
das
push
push
popf
mov
addr16
pop
bound
repnz
dec
sbb
lods
or
pop
sub
and
jle
lahf
or
popf
pop
testl
push
mov
int
push
in
nop
inc
fwait
inc
push
aad
sbb
popf
xchg
adc
dec
test
in
movsb
push
push
js
push
xor
or
negl
add
cmpsb
test
mov
les
sub
pop
sti
cmp
mov
push
cmp
daa
gs
add
stc
or
xchg
xchg
roll
out
fmull
fisttpll
stos
and
jecxz
inc
shll
or
inc
adc
adc
pop
jge
jmp
aaa
into
inc
sbb
bound
pop
jno
fsts
xchg
out
aam
shll
nop
push
clc
and
inc
inc
out
sub
mov
les
rclb
scas
xor
jb
int
notb
or
and
loope
jnp
dec
sub
in
gs
pusha
pop
jbe
insb
add
subb
pop
mov
adc
out
js
jbe
xlat
dec
sbb
ss
jmp
in
pop
rcrb
mov
add
xor
sbb
pop
repz
xchg
test
lods
cmp
cltd
dec
push
mov
adc
add
loop
insb
mov
jns
dec
xchg
jg
mov
jnp
cwtl
ret
ret
call
mov
fwait
mov
mov
call
adc
daa
sbb
data16
sub
movd
dec
mov
jmp
ss
pop
push
inc
xor
push
aaa
inc
rclb
xor
inc
dec
mov
push
mov
loope
sbb
sub
repnz
dec
mov
mov
mov
daa
xor
cmpl
xor
xchg
lret
cmpl
je
movsb
nop
icebp
push
fimuls
cmpsb
addl
in
ds
jp
sub
leave
cs
pop
xor
xchg
fmull
cmpb
lds
addr16
inc
mov
mov
scas
ror
push
int3
inc
adc
js
inc
mov
mov
adc
repnz
dec
sub
inc
or
roll
jae
xchg
aad
bound
jecxz
std
mov
movsl
out
out
test
push
jo
lret
addb
test
mov
add
sarb
inc
pop
lods
jmp
add
insb
out
pop
ret
sbb
out
xchg
loopne
push
call
aas
outsl
xor
stc
mov
aas
sbb
lods
or
jecxz
out
mov
cmp
sub
fnsave
mov
outsl
adc
add
jne
and
ret
loopne
jno
inc
sbb
mov
add
out
movsl
mov
or
xor
push
mov
lret
cmp
xchg
pop
dec
xchg
movsl
mov
add
addl
loop
push
xor
fcmove
ljmp
mov
fsub
inc
daa
test
push
in
jb
pop
or
pusha
les
mov
pop
jmp
push
push
popf
or
cli
jnp
fildl
inc
bound
mov
shrb
mov
sahf
add
pop
ljmp
push
clc
dec
or
mov
mov
jnp
mov
or
push
xchg
pop
insb
les
mov
aad
inc
jecxz
arpl
repz
lcall
mov
pop
jmp
push
dec
test
nop
mov
mov
repnz
call
mov
jb
xor
jns
push
sub
imul
pusha
fstps
insl
data16
push
mov
fsubr
inc
mov
mov
ret
std
jb
aaa
push
jle
pop
jl
sub
add
sar
adc
out
fnsave
dec
addr16
mov
push
add
mov
xor
cltd
test
sbb
cltd
mov
mov
adc
jmp
mov
shlb
and
repnz
cli
mov
mov
push
daa
pop
push
loope
rorl
mov
int
xchg
jns
and
in
mov
push
xchg
ljmp
cmp
add
icebp
xchg
and
dec
push
add
and
xchg
sbb
addb
inc
lock
addr16
xchg
jle
jnp
xlat
mov
insb
push
xorl
inc
fnsetpm(287
xchg
arpl
push
fwait
aad
inc
shlb
xchg
dec
repnz
test
pop
push
mov
sub
add
hlt
jle
dec
lahf
mov
mov
push
sti
xlat
sbb
loop
mov
inc
lods
push
dec
negb
out
push
or
mov
jp
int
inc
rcll
in
mov
stc
cld
pop
xchg
push
cmpsb
jo
push
lock
push
xor
fisttpl
std
sub
mov
cmpl
pop
mov
and
ret
out
in
dec
xchg
mov
mov
scas
and
cmpl
out
scas
mov
out
cmp
inc
adcl
push
inc
decb
popa
pop
adc
rorl
aaa
xchg
xchg
jbe
loope
imul
inc
push
out
mov
mov
js
dec
out
pop
cmp
mov
pop
fcompl
add
addb
cmp
mov
push
rolb
xor
cmp
cmp
in
outsl
jge
lock
outsb
test
in
or
mov
icebp
push
jmp
repnz
sahf
fstps
push
xchg
fwait
sub
into
insl
mov
loope
into
sbb
mov
test
hlt
sahf
or
sub
xchg
shll
sbb
push
imul
and
movsb
inc
sti
gs
loop
jmp
mov
stos
fcomps
cmp
xor
pop
inc
ret
ja
sbb
sub
mov
es
xorl
divb
leave
cmpsl
jns
pop
test
test
push
fsubrs
cmp
aad
adc
cmpsb
push
jnp
dec
cmp
fnstcw
add
das
jb
mov
orl
insb
inc
jle
mov
in
push
sub
mov
adc
cmp
sbb
addr16
fidivrl
mov
mov
jecxz
in
jns
cmpsb
jo
fsubl
dec
dec
scas
das
in
add
xchg
sbb
repz
adc
imul
xchg
jecxz
pop
inc
mov
pop
aas
xor
leave
adc
mov
pop
repz
mov
inc
in
test
divl
loopne
jbe
out
jle
ja
aam
ds
lret
or
mov
cmp
cmpsb
fildll
arpl
loopne
cld
xor
cmp
sbb
xor
mov
insb
jge
push
lods
jb
ror
mov
aas
lret
inc
push
and
lods
add
imul
test
mov
add
add
js
mov
cli
mov
push
or
inc
frstor
sahf
mov
dec
fldt
mov
popf
loopne
insb
das
push
mov
aaa
bound
jl
gs
jmp
cmp
dec
pop
mov
mov
sbb
insl
jg
andb
and
cmpsb
lahf
add
add
in
push
cmp
mov
pop
or
cmpsb
mul
adc
test
add
mov
sbb
ja
inc
aam
sub
aas
jg
daa
int
repnz
sub
inc
shll
adc
dec
and
enter
cmp
out
mov
dec
jne
test
cmpsl
sub
cmpsl
mov
or
push
out
hlt
cmc
add
jae
sub
fildl
shll
mov
popa
test
jno
mov
aas
mov
test
in
lock
and
in
lahf
arpl
ficoml
movsl
mov
nop
pushf
cwtl
inc
and
pushf
jns
jne
cmp
push
or
push
mov
push
pop
xor
inc
push
in
push
gs
cmp
imul
lods
pop
jge
dec
repnz
sti
xchg
or
repz
jae
outsl
add
sbb
xorb
cmp
push
lds
loopne
jl
lret
inc
mov
or
jp
sbb
adc
and
sub
ljmp
sbb
lahf
outsb
je
dec
adc
jp
sbb
ss
push
cltd
out
fcom
inc
push
inc
or
lods
loope
adc
daa
rcrl
xor
jne
jecxz
sti
mov
mov
and
sbb
fwait
ljmp
adc
and
aad
add
adc
adc
popf
inc
cmpsl
fiaddl
subb
fists
xlat
mov
cmp
arpl
addr16
cmc
xor
lcall
cmpsb
dec
dec
add
aas
lret
inc
xchg
mov
inc
iret
test
inc
rol
insb
jecxz,pn
xor
mov
or
inc
mov
and
fs
mov
mov
js
mov
jmp
mov
jle
movsl
add
add
or
adc
xabort
icebp
scas
js
adc
nop
sahf
jb
daa
pop
add
movsl
push
or
test
adc
adc
xlat
xchg
push
negb
inc
sub
xor
sahf
pop
inc
and
adc
iret
out
adc
sti
inc
bswap
dec
jb
adc
cmp
push
cmp
imul
in
cmp
push
inc
stos
call
mov
pop
stc
lock
push
push
imul
daa
pop
arpl
cs
adc
mov
imul
adc
mov
jb
inc
xchg
add
ljmp
arpl
fcompl
iret
pop
movsb
jno
inc
dec
jecxz
dec
mov
lds
fiaddl
sahf
or
in
rorl
inc
pop
jns
ljmp
shl
xor
mov
in
and
inc
stc
mov
in
in
shlb
ss
adc
add
shl
pop
mov
rcr
stc
mov
inc
push
add
cmpsl
mov
xor
push
sti
xor
push
gs
in
popa
test
mov
pop
repz
loop
mov
subl
adc
scas
pusha
inc
mov
ret
aad
std
call
sahf
out
mov
mov
xchg
dec
out
imull
cltd
cmp
stos
sbb
dec
ficoms
shll
mov
jg
inc
mov
lds
push
xchg
lods
in
push
insl
iret
iret
dec
inc
in
dec
jle
mov
or
adc
cmp
xchg
pop
dec
or
mov
stc
je
or
dec
push
dec
mov
dec
outsb
sub
push
and
fadds
lret
rclb
lret
ret
loop
jno
add
lcall
or
or
fstpl
push
pop
in
ret
or
popf
mov
xor
lods
push
int3
adc
stos
sti
xorl
movsl
mov
testl
mov
add
push
sbb
rep
psllq
add
cmp
repnz
fistl
mov
cli
iret
mov
mov
in
jl
movsl
mov
dec
lds
aad
je
jo
adc
mov
xor
int3
or
fiaddl
fmul
mov
lret
push
shrb
jb
das
rolb
ss
inc
clc
pop
gs
push
aad
push
jmp
push
mov
pop
mov
test
pop
xchg
rorb
clc
or
ds
fldenv
loopne
mov
in
cmpsl
lods
fidivl
int
lret
sahf
pop
adc
xchg
mov
and
mov
sub
dec
push
enter
pushf
jo
cmpsl
shr
pop
mov
iret
pop
and
js
mov
pusha
mov
aas
cmp
in
mov
mov
sbb
ret
test
jecxz
insl
adcl
jo
inc
lcall
jmp
push
call
jnp
xor
dec
ljmp
push
bound
data16
pop
xchg
sub
insl
jle
cmpsl
int
xchg
mov
jecxz
xor
sub
cmc
add
fldcw
sub
mov
pushl
sbbb
lea
dec
xchg
dec
lahf
dec
mov
xchg
jp
pushl
out
mov
adcb
sbb
shll
imul
push
inc
movsb
pusha
push
mov
int
adc
mov
pop
adcb
mov
cli
lock
imul
push
inc
adc
lods
xor
jns
jnp
mov
scas
inc
push
pop
mov
or
mov
adc
mov
daa
repnz
fsts
sti
es
sbb
popa
and
pop
and
add
pop
jmp
jns
test
push
mov
xor
shlb
les
in
int3
inc
sbb
std
aam
sbb
pop
cmp
mov
xchg
loope
ja
dec
dec
fmull
int
outsb
aaa
addr16
gs
loop
in
pop
sbbl
mov
xor
int
loopne
fnstsw
mov
dec
and
push
push
cmpsl
dec
cmc
fs
inc
and
adc
sarl
imul
clc
push
scas
dec
pop
cli
lea
lret
aas
addr16
dec
jns
mov
aas
nop
ret
addb
mov
inc
or
adc
jb
cli
ror
dec
pushf
inc
icebp
shl
lahf
xchg
dec
rcrl
repz
orb
jns
mov
daa
pop
push
mov
push
mov
fwait
pop
in
sub
push
cmp
fidivl
mov
adc
test
nop
or
adc
movups
xchg
pusha
call
fcmovnbe
xchg
xchg
lret
add
xor
and
loopne
push
cmp
sbb
adc
fistps
dec
stos
adc
shlb
xchg
jp
jp
xorl
adc
sbb
pop
mov
ja
inc
mov
mov
inc
pop
pop
adc
rol
testb
lds
pop
and
imul
fistl
dec
adc
test
movsb
movsl
xchg
push
icebp
mov
xor
jge
in
data16
sub
pop
lcall
lock
js
dec
xchg
sub
lea
sbb
push
fs
or
clc
push
cmp
inc
mov
inc
sub
push
out
insl
jb
in
add
and
xchg
test
push
inc
mov
out
cmp
ja
test
out
aas
adc
lret
ss
mov
cmpsb
inc
int
push
mov
adcl
pop
cmpsb
cmp
insl
shlb
jno
jns
cmpsb
out
mov
sbb
aas
push
bswap
lods
bound
dec
test
pop
leave
ja
lcall
mov
mov
jge
lods
sbb
mov
dec
fisttps
enter
mov
imul
sbbl
jne
mov
mov
fs
cmp
push
pop
mov
negl
lods
popa
add
push
popa
sar
jns
push
mov
and
sbb
in
out
cmpsb
loop
shll
fs
mov
lds
lcall
lods
push
inc
hlt
dec
ljmp
sar
sbb
call
xchg
insl
stos
test
dec
jle
push
insl
mov
mov
and
test
inc
movl
and
mov
dec
xchg
outsl
addr16
xrelease
jge
movsl
sbb
jns
pop
rorl
popf
mov
addb
sub
adcb
test
mov
xor
add
orb
push
cmp
push
out
add
mov
ficoml
in
sbb
mov
mov
mov
push
and
jle
cmp
add
ljmp
test
xchg
inc
ror
dec
outsb
mov
push
stos
cmp
sub
inc
aas
and
js
push
push
enter
mov
jmp
sbb
lcall
xor
and
and
mov
in
push
or
xchg
push
cmpl
lcall
cltd
adc
pop
add
stos
sbb
and
cmc
jge
popa
stos
testl
arpl
push
jmp
push
bound
mov
push
bound
aaa
xchg
ss
mov
mov
push
or
pusha
out
out
push
dec
jae
jne
aad
or
inc
iret
mov
xor
mov
call
iret
adc
mov
dec
test
xor
adc
push
xacquire
ljmp
mov
jno
jnp
push
jl
inc
cmpsl
repz
cmpsl
jbe
test
and
and
sub
cmp
fsubrs
dec
arpl
mov
mov
xor
adc
push
xchg
jmp
push
adc
inc
push
stos
inc
pop
ret
cmp
fisttpl
imul
into
mov
push
in
pop
sbb
mov
cmpsl
clc
ja
adc
in
pop
sub
mov
imul
mov
shrl
lea
push
sbb
jns
fiaddl
cwtl
dec
nop
aaa
test
fstps
add
andl
dec
push
sub
pop
cmpsb
rorb
sub
lea
repnz
scas
loopne
popa
dec
xchg
sti
mov
xlat
loope
sbb
jnp
jmp
dec
add
sub
mov
repz
das
xchg
add
pop
xchg
cmc
pop
sub
xchg
adc
pop
add
xchg
sub
sbb
cwtl
in
in
sahf
push
fwait
adc
lcall
cs
mov
jmp
push
in
xorl
jp
jbe
jmp
stos
fisubrl
or
mov
adc
in
data16
repz
push
fwait
mov
je
mov
in
mov
jecxz
pusha
inc
pop
mov
xchg
mov
pushf
pop
shlb
mov
adc
dec
or
push
hlt
out
mov
xchg
add
hlt
out
pop
pop
divl
clc
ret
pop
ss
mov
repnz
into
xchg
jmp
test
or
inc
adc
jae
imul
pop
divb
mov
pusha
sbb
in
or
push
dec
mov
xchg
outsl
int3
fwait
push
sbb
xor
ljmp
mov
inc
test
ljmp
xchg
mov
xor
call
ror
sbb
repz
and
arpl
cli
popf
pop
mov
xchg
cwtl
cltd
adc
rclb
pop
push
das
imul
dec
lods
dec
mov
xor
orl
pusha
jecxz
mov
cld
daa
sarl
xchg
aaa
and
in
jmp
sbb
cmp
mov
mov
and
ret
adc
adc
dec
xchg
cmpb
sbb
lret
xchg
mov
fists
mov
js
sarb
cmpsb
mov
inc
mov
add
push
mov
sbb
pop
icebp
mov
mov
xor
out
outsb
cmp
std
das
jecxz
insb
add
jns
psubq
test
cmp
inc
inc
loop
fwait
mov
mov
inc
cmp
dec
repnz
or
xchg
leave
fs
push
out
imul
data16
imul
fldt
sub
jbe
addr16
jnp
mov
data16
movsb
pop
xor
mov
stos
pop
test
repz
je
ds
pop
add
push
orl
xor
pmuludq
dec
inc
sub
repnz
icebp
mov
sub
nop
mov
pop
popf
les
inc
std
xchg
cmp
xchg
fists
lcall
fnstenv
jge
cltd
mov
cmc
outsl
mov
sub
bound
cli
mov
jecxz,pn
pop
adc
pop
movsb
push
jno
insl
xchg
mov
leave
dec
or
out
add
jb
movsl
lcall
mov
lret
shrb
rcrl
dec
testb
shrl
and
lds
mov
fs
enter
lahf
movsl
and
mov
mov
and
lcall
cli
outsl
sbb
sub
sahf
rorl
adcl
add
and
pop
cltd
bswap
inc
xor
sbb
push
xchg
cs
in
test
inc
mov
xchg
pop
out
js
cmp
mov
mov
cwtl
mov
xor
mov
insl
sti
xlat
jb
xor
repnz
pusha
sbb
ja
pusha
shlb
cli
andb
leave
sahf
pushf
sub
sub
notb
xor
das
lods
xlat
imul
inc
das
dec
pop
int
sub
pop
pop
mov
stos
fmul
mov
lcall
aam
or
push
int3
ds
cmc
enter
push
jp
cs
ja
notb
ret
adc
jae
js
fcmovnu
add
mov
std
xchg
sbb
xlat
in
adc
mov
or
stos
xor
adc
out
jae
scas
mov
out
shrb
mov
repnz
iret
mov
pop
hlt
testb
insl
jg
rorl
add
jo
inc
add
lahf
je
push
int3
ficomps
dec
xchg
ret
xlat
mov
aaa
rcl
or
out
push
mov
xchg
dec
out
mov
pop
xchg
daa
push
fwait
in
loopne
pop
cmpsb
outsl
sub
mov
inc
outsb
scas
faddl
divl
lret
mov
mov
mov
loopne
push
add
test
add
cmpsb
pusha
push
mov
jns
adc
xor
movsb
mov
pop
cs
jnp
arpl
rcrl
lcall
hlt
pop
aas
xchg
roll
xchg
pop
stc
push
int3
cmp
inc
or
ljmp
std
inc
mov
aad
cli
cmp
xchg
call
mov
sub
je
mov
outsl
fdivrl
incb
imul
inc
out
sbb
push
add
lods
sub
loope
pop
int
pop
mov
sub
in
mov
gs
in
loopne
pop
fucomp
daa
add
cmp
cmp
pop
lock
in
fidivs
jg
pop
test
mov
mov
adc
fwait
es
loop
test
inc
add
stc
ret
adc
leave
lods
or
mov
or
jecxz
and
mov
mov
xchg
pusha
jg
popf
cs
push
jb
dec
dec
mov
into
push
mulb
lods
add
and
sbb
outsl
dec
jge
testl
out
hlt
mov
inc
cmp
pop
mov
testb
and
adc
and
jecxz
add
push
test
decb
adc
jmp
add
dec
sbb
push
xchg
dec
in
loop
pop
sbb
ljmp
cltd
jb
adcb
mov
outsl
jl
aaa
and
hlt
sbb
jne
pop
jmp
or
pop
mov
push
xchg
clc
push
xor
xor
subb
xor
loope
les
push
mov
sbb
mov
adc
jo
jecxz
push
int3
inc
add
pop
pop
add
lret
inc
mov
cmp
jnp
into
mov
inc
and
imul
ljmp
inc
iret
pop
jge
mov
addr16
xchg
mov
mov
rclb
aas
call
addb
push
dec
jbe
or
add
arpl
lock
fucomp
in
popf
bound
cmp
fst
mov
pop
lock
cmp
mov
out
je
push
popl
pop
adc
adc
push
icebp
outsl
int
dec
cmpsb
xor
xchg
jl
in
call
fistpll
into
mov
jecxz
daa
arpl
xor
test
sahf
xor
jle
cmp
test
shrb
test
pop
mov
sub
push
pop
dec
xchg
or
out
inc
cmp
leave
sub
sti
enter
pop
sbb
or
inc
jns
xor
sbb
fs
add
jge
adc
jecxz
mov
jb
out
fmull
dec
xchg
and
push
pusha
mov
xor
insl
push
ss
inc
jle
or
movsl
enter
lret
and
cwtl
and
hlt
dec
and
nop
cli
push
fs
movsl
gs
test
add
sub
cmp
dec
sbb
cmc
mov
pop
sbb
dec
adc
dec
movl
push
or
sbb
jl
or
repz
aam
xchg
shlb
mov
aaa
cmp
iret
mov
pop
loope
fdivs
in
jnp
std
inc
inc
pusha
popf
imul
pusha
push
int
ret
jp
jo
test
pop
out
leave
push
cmc
cmp
and
and
add
testb
loope
cmp
mov
pop
add
ret
pop
inc
dec
notl
mov
pop
jno
mov
and
pop
popf
pop
popf
fs
movsl
inc
adc
fsubl
fnstenv
out
test
pop
mov
ss
insb
pop
xchg
sahf
or
xchg
sbb
mov
imul
addr16
dec
lods
mov
pop
jl
arpl
jle
in
dec
xlat
cltd
popf
dec
xor
data16
pop
or
adc
cmp
aam
xchg
adcl
dec
cmp
jae
sub
mov
mov
push
xorb
jnp
gs
adc
ds
sahf
inc
fwait
cmp
xchg
pop
xor
mov
mov
sarl
mov
out
xor
sar
outsb
cmp
jae
xchg
pusha
and
dec
ljmp
mov
imul
pop
adcb
arpl
cmc
lret
les
sub
fists
push
jno
call
sub
push
adc
xor
sarb
inc
mov
mov
daa
cmp
add
pop
js
xchg
xchg
jl
addb
repnz
in
mov
mov
lds
scas
popl
jle
sar
shld
in
in
cmp
push
inc
ret
add
or
or
add
aad
inc
mov
les
ss
popf
jne
mov
xor
pop
adc
in
jecxz
cmp
jbe
aad
push
shl
pop
and
sahf
add
mov
jecxz
stos
push
xchg
pop
inc
jo
jl
das
add
bound
outsl
in
aad
icebp
hlt
and
lods
mov
mov
mov
nop
imul
inc
mov
cmp
popa
jnp
gs
xchg
popf
push
test
push
enter
sub
xor
sbb
pop
and
cli
cmp
popf
sti
add
repnz
outsb
push
inc
cmp
and
cs
pop
ja
xchg
lock
xchg
push
adc
mov
fs
add
xchg
mov
clc
mov
cmp
xor
add
test
and
andb
lahf
jno
mov
mov
inc
hlt
je
dec
jp
and
cmpsb
pop
cmp
add
je
movsb
sub
insb
outsl
jno
push
dec
fldl
inc
sahf
jbe
fdivr
xor
ret
cld
and
push
mov
inc
pop
cmp
add
arpl
cmpsb
or
imul
push
lahf
cmpsb
mov
imul
xorb
sbb
mov
push
push
lea
cmp
sbb
inc
mov
sub
mov
divl
and
xchg
mov
scas
rolb
out
std
mov
push
clc
jl
jle
lds
mov
lret
sbb
pushf
jge
cmp
mov
and
imul
int
out
pop
cmp
dec
mov
push
inc
aam
mov
xor
and
jg
js
pop
outsl
xchg
lahf
movsb
sti
pushf
jne
stc
jne
adc
adc
xchg
lcall
std
subb
shlb
sub
dec
cwtl
popa
das
sti
mov
xchg
repz
stc
xchg
sar
or
decb
test
test
mov
pop
sub
jnp
sub
and
loop
arpl
ljmp
mov
adcb
int
xor
or
je
leave
pop
imul
mov
adc
jbe
mov
or
outsb
pop
or
xor
sub
gs
add
aaa
sub
mull
jp
or
repz
sbb
cmp
jmp
xchg
cmp
sub
cmp
mov
or
enter
popa
mov
mov
pop
sbb
movsl
in
mov
and
cld
sub
sbb
adc
xor
push
icebp
jmp
mov
inc
xchg
bound
adc
xchg
adc
inc
imul
in
rcl
mov
sbb
push
test
repz
arpl
pop
jo
sbb
adc
mov
movsl
mov
inc
pop
xor
ficompl
inc
push
in
jge
sub
jne
dec
push
mov
mov
xchg
loopne
add
jno
mov
pushf
js
aad
fwait
es
mov
imull
clc
mov
mov
cmp
data16
dec
push
shll
ss
jno
leave
rolb
xchg
iret
cmp
loope
mov
test
into
lods
xor
scas
mov
push
fwait
scas
adc
out
xor
add
jmp
dec
loopne
icebp
jmp
mov
leave
lods
inc
push
cltd
lret
and
mov
pop
sub
mov
pushf
sbb
scas
stos
jo
xchg
jmp
std
push
pop
xchg
or
dec
xor
fs
sahf
cwtl
addr16
and
mov
mov
xor
in
dec
adc
xchg
mov
loop
jae
outsl
cli
mov
adc
or
adc
jb
sahf
add
sahf
mov
sahf
mov
sub
xor
hlt
mov
pop
pop
shl
aad
xor
out
mov
mov
jbe
jl
adc
xchg
int
js
test
mov
sahf
jecxz
xor
and
sbb
hlt
les
and
mov
sbb
imul
mov
sub
aam
outsb
enter
jp
add
cmpsb
jge
mov
sbb
adc
xchg
xchg
push
push
cltd
or
mov
wbinvd
jg
adc
or
call
fnsave
shrb
xchg
inc
in
lret
push
je
ss
mov
movsl
pop
faddl
repz
sbb
push
xor
push
xchg
into
jp
ret
add
push
std
in
test
lods
jp
rcrl
pop
adc
pop
mov
mov
shrb
pushf
lahf
and
negl
inc
adc
jo
scas
and
push
imul
out
cs
push
shll
testb
push
jo
mov
fwait
stos
fdivl
ret
sub
inc
dec
out
loopne
or
leave
or
mov
sbb
gs
sbb
jae
adc
jb
or
insl
cmp
jnp
js
jne
adc
imul
xor
cli
in
imul
jne
or
pop
lcall
lods
sub
jno
fwait
punpckldq
dec
imul
outsb
pushw
cmp
pop
pop
sub
dec
mov
fisttpll
incl
jne
das
fwait
repz
cli
cmpsl
mov
fninit
insl
mov
ljmp
add
das
mov
sub
lcall
mov
call
enter
loopne
dec
nop
shlb
pusha
jl
jmp
mov
push
aam
popa
test
adc
shl
bound
xchg
sub
imul
pop
adc
es
push
adc
push
dec
sbb
xchg
fists
scas
stos
cmp
xor
mov
ss
xchg
push
test
sub
cmp
addb
or
xor
jge
into
pop
enter
jo
pushf
shrl
mov
jp
or
push
xchg
push
gs
pop
inc
imul
xchg
out
and
cmc
mov
movsb
xchg
jecxz
xor
cld
mov
dec
std
stc
and
jno
add
mov
add
imul
sub
push
fcmovbe
nop
test
mov
fwait
bound
jae
test
es
mov
adc
and
iret
inc
neg
sub
mov
hlt
nop
pop
enter
mov
push
scas
flds
fldenv
ret
or
fsubr
fidivl
jmp
insb
and
std
shll
push
lahf
push
int
imul
jbe
enter
adc
jmp
mov
insl
sbb
insl
jno
inc
sub
and
pop
mov
dec
cli
test
lods
loop
sbb
jg
inc
cmpb
mov
xor
cmc
jnp
sti
xchg
inc
mov
add
push
loopne
es
scas
inc
cmp
pushf
movsb
int
lret
sub
bound
xchg
ss
xchg
mov
stc
xchg
add
iret
pop
and
arpl
cmp
xlat
rorb
out
imul
inc
icebp
or
mov
fwait
mov
or
enter
and
cltd
adc
dec
popa
je
push
dec
testl
mov
lret
mov
inc
ret
pop
sub
sahf
mov
je
pusha
and
cmpsl
das
and
xchg
enter
sub
and
enter
mov
gs
inc
testl
sahf
jle
in
xor
insb
insb
js
lahf
aas
push
out
fidivl
inc
daa
xor
adc
xor
pusha
or
add
xor
popa
adc
mov
enter
mov
gs
dec
dec
fs
in
mov
dec
xchg
sbbl
lock
mov
inc
add
and
idivb
loope
mov
sbb
mov
mov
fistps
xchg
adc
cmp
stos
add
fbstp
jae
add
mov
mov
fcomps
adc
pop
in
int
lret
inc
mov
es
rcrl
in
and
xor
sbb
cmp
ja
jl
xor
addr16
in
lahf
fldt
in
scas
adc
enter
dec
nop
movsb
dec
dec
scas
dec
xchg
mov
add
mov
sbb
sbb
nopl
test
adc
sub
pop
xchg
aas
out
repnz
pop
mov
sti
pop
aas
bound
add
mov
insb
mov
es
xor
push
lret
xchg
outsl
movsl
std
sub
mov
mov
sbb
jp
inc
int3
push
mov
pushf
ss
adc
outsl
xchg
or
clc
movsb
and
inc
in
jle
popa
cmpsb
sbb
inc
shll
aad
add
xchg
mov
test
xorb
ret
cmp
loopne
enter
out
xor
cmpsl
aaa
cmp
xchg
and
mov
data16
mov
mov
call
sbb
push
sbb
xor
and
ret
push
dec
mov
fildll
paddq
or
pop
inc
push
and
pop
xor
inc
fistl
jg
jl
jne
test
lds
ljmp
xorb
nop
jp
out
repnz
bound
repnz
fimuls
mov
sahf
mov
sarb
mov
cmp
loop
ror
lods
imul
add
xchg
mov
data16
mov
stos
mov
movsb
in
std
dec
insb
loopne
mov
dec
or
adc
sar
xor
arpl
mov
mov
mov
jbe
cld
mov
xlat
push
cmc
test
adc
and
xchg
push
fstps
fldenv
mov
pushl
ret
pop
les
mov
add
pop
inc
imul
push
sub
jecxz
popf
lret
xchg
inc
aas
mov
mov
push
xchg
jns
enter
xor
and
jmp
lahf
sub
scas
cmp
daa
and
inc
bound
sbb
add
mov
int3
test
movsb
lods
fildl
scas
ret
sti
jl
adc
test
out
and
fwait
in
pusha
sub
and
pop
out
push
sbb
cmp
outsl
fistpl
out
stc
or
xor
out
pop
add
lods
mov
add
pop
mov
mov
fwait
mov
push
jle
cmpsl
xor
mov
push
mov
sub
inc
push
dec
pop
mov
sbb
cltd
les
pushf
scas
cmp
pop
xchg
xchg
imul
push
mov
fidivl
sbbl
mov
stos
pop
repz
out
lock
int3
fs
sub
test
dec
leave
inc
cltd
ja
mov
sahf
test
jg
test
adc
xor
xor
fiaddl
push
orb
add
inc
sahf
xlat
sbb
lret
mov
daa
dec
out
push
push
sti
incb
and
cltd
dec
sbb
push
incb
fstpl
das
or
dec
or
fldt
sub
or
fs
loop
add
pop
fldt
sub
bound
cmpsl
jp
frstor
adc
sub
in
gs
sahf
test
lds
fchs
iret
dec
xchg
icebp
push
dec
mov
arpl
mov
out
jmp
aaa
dec
out
mov
and
inc
sub
xchg
fiadds
push
mov
in
xchg
adc
cmp
or
jmp
outsb
jle
js
das
icebp
cltd
pop
rcll
sahf
xchg
in
popa
out
daa
inc
insl
orb
add
jo
adc
push
lcall
ljmp
mov
and
mov
rcll
or
dec
sub
mov
cmc
scas
add
pop
test
mov
push
sbb
call
sahf
test
lahf
ljmp
pop
push
cmp
mov
push
xor
mov
and
cmp
iret
sbb
dec
cs
mov
xchg
ret
packuswb
lea
pop
mov
jnp
xor
stos
into
out
dec
pop
testl
mov
mov
sbb
ret
dec
stos
jmp
inc
ja
test
pushf
ret
xchg
dec
adc
in
je
jp
je
out
cli
cmp
mov
loop
xor
movsb
sub
or
add
es
iret
not
shlb
clc
mov
jg
inc
xor
or
and
ds
scas
cwtl
sub
cmp
test
fsubrl
and
push
stos
and
mov
xchg
lret
mov
addr16
jb
je
mov
or
sbb
adc
dec
aaa
sbb
cmp
pusha
leave
cli
mov
daa
pop
lret
xor
fwait
inc
ret
push
shlb
ret
nop
push
pop
xchg
enter
mov
lcall
shll
daa
movsl
sbb
mov
jp
int
xchg
mov
leave
xchg
out
adc
fwait
popa
dec
fisttpll
inc
mov
add
leave
jge
imul
mov
lds
push
jae
leave
xchg
aad
jne
inc
jo
inc
or
xchg
fbstp
leave
and
imul
gs
icebp
add
mov
pop
jno
out
mov
jp
popf
mov
or
xchg
ljmp
push
mov
dec
mov
mov
xor
shlb
or
mov
frstor
mov
push
jo
jmp
cmc
call
das
mov
sub
jge
je
lahf
repz
and
mov
fld
pop
adc
xchg
lret
js
fwait
mov
insl
adc
pop
xchg
test
pop
cmp
movb
mov
push
mov
rcrb
int
cmpsb
and
aas
sti
xor
cwtl
dec
dec
mov
pop
fimull
loop
dec
inc
push
pop
pop
dec
inc
shr
jnp
ret
pop
push
cmc
xchg
push
jne
aaa
jle
sub
push
adc
jge
xchg
aas
shll
mov
cli
lods
ss
mov
mov
or
shll
push
mov
dec
inc
jo
push
test
push
dec
mov
lret
lahf
add
stc
aaa
jo
cmp
nop
push
mov
inc
test
dec
arpl
sub
fimull
and
lods
test
add
sub
add
push
js
int
push
fld
into
dec
mov
adc
or
mov
xchg
dec
or
sbb
fisubrs
jle
fidivrl
es
cmp
jo
repnz
movsb
jno
or
popa
shll
cmp
jne
push
test
xor
adc
xor
bound
pop
add
xor
insl
daa
adc
mov
adc
loopne
test
popf
jl
aas
aam
xor
lret
mov
or
fisttps
pop
mov
orb
je
inc
pusha
call
fildll
add
movsb
mov
fld
imul
mov
rorl
lret
cmp
adc
or
inc
scas
pop
dec
mov
xor
inc
or
pusha
aam
fbstp
dec
mov
xchg
jns
dec
cmp
xchg
ja,pn
jle
scas
sbbl
mov
in
push
pusha
cmp
fstp
inc
add
pop
mov
jnp
gs
lods
cmovle
sarb
or
ds
inc
insl
lea
mov
mov
pushf
and
divps
adc
lahf
dec
jo
xor
pop
fisubrl
movsb
inc
push
outsl
add
pop
or
popf
scas
repz
addr16
jge
std
outsl
mov
sbb
aas
dec
lret
ljmp
and
movsb
out
cmpsl
or
push
adc
xor
into
mov
pop
or
pop
xchg
lret
push
lods
push
push
mov
cmpsb
push
and
in
cs
push
cmp
jne
and
stos
stos
test
lahf
imul
mov
mov
out
sahf
sbb
fcomps
mov
and
inc
gs
addr16
inc
enter
lret
dec
push
inc
negb
sub
mov
sarb
add
lret
xor
cli
test
in
movsb
cmpsl
jg
std
mov
gs
sbb
jb
jne
les
mov
push
jp
repz
pop
int3
popf
lods
loop
push
xchg
or
lahf
jg
adc
int3
mov
lods
test
or
dec
int
push
mov
iret
push
roll
in
inc
iret
and
int3
add
mov
inc
push
jmp
in
out
movsb
repz
sub
xor
adc
pop
sbb
ds
xchg
lea
xor
mov
pop
aam
cmp
mov
call
dec
or
inc
mov
pop
push
mov
popa
mov
pop
sbb
cmp
jmp
jno
mov
sub
cmp
add
dec
aas
pop
jno
dec
stos
xor
out
addb
sti
sahf
ja
inc
xor
sbbb
js
jp
es
pop
mov
pop
leave
stos
pusha
into
adc
pop
xorl
xchg
mov
movsb
pop
clc
add
ds
ret
mov
push
xor
mov
xor
inc
jo
push
test
mov
cs
loopne
sub
cmp
or
dec
add
pop
out
out
out
rcll
cwtl
add
mov
icebp
dec
sub
adc
or
lret
fsubs
adc
mov
jnp
out
pop
or
popa
or
push
xor
pop
xchg
roll
push
mov
into
adc
pushf
xchg
jmp
dec
bnd
out
out
cmp
cmp
sbb
xor
adc
or
push
sub
dec
lds
mov
mov
mov
aam
jecxz
or
repnz
leave
jp
and
jne
xor
cs
movsw
push
mov
pusha
jb
inc
xchg
mov
popa
mov
pop
mov
daa
xchg
cld
popa
mov
in
push
mov
movsb
fdivl
inc
movsl
sbb
dec
push
adc
imul
mov
sbb
xor
xchg
inc
and
test
jmp
fsubrp
fldcw
shll
cwtl
jmp
pop
mov
fsubrs
adc
andb
sbb
push
mov
fwait
ret
xor
push
push
jle
xor
adc
out
dec
outsb
ja
cmp
sub
pop
js
ss
rorb
mul
xchg
clc
addr16
ljmp
imul
ljmp
xchg
insl
cmp
inc
jecxz
push
lods
daa
in
pop
mov
cmp
cwtl
lret
xchg
outsl
push
xchg
xchg
in
push
cmp
lods
xor
inc
or
xor
ljmp
mov
aam
cs
push
mov
xchg
pop
jg
fstpl
pusha
out
cltd
or
dec
dec
popf
fcomps
stc
in
sub
in
pop
cmp
xchg
xor
jno
lods
les
ss
push
add
sub
cld
jl
mov
int
pushf
popf
push
inc
out
aam
mov
pop
nop
sub
popf
repnz
mov
mov
dec
inc
sahf
test
ret
insl
rcll
mov
sti
xchg
push
mov
divl
fistpl
jmp
sbb
repz
mov
xchg
adcl
in
lods
dec
mov
insb
imul
test
pop
xor
mov
mov
mov
jae
and
lcall
imul
adc
jp
fstl
sbb
push
and
aaa
or
sbb
jbe
cld
mov
cmp
inc
dec
pop
and
or
ret
push
push
gs
test
add
add
addr16
std
fistpl
je
pop
push
movb
pop
adc
shlb
mov
pop
mov
arpl
and
cmp
jb
andb
loopne
std
push
sbb
dec
cwtl
clc
mov
daa
pop
rcrb
mov
test
jl
xchg
jecxz
dec
loope
push
dec
cmpsl
dec
fists
iret
mov
repz
out
mov
pop
pop
mov
mov
jmp
push
mov
daa
lahf
adc
adc
stc
cmc
fistl
adc
ja
rcll
dec
scas
add
cmpsl
dec
inc
insb
mov
je
and
pop
pop
adc
lahf
mov
push
push
and
pop
je
arpl
xlat
stos
xchg
test
or
pop
sarl
mov
imul
pop
dec
scas
adc
imul
js
movl
xchg
add
es
mov
dec
insl
loope
cwtl
sub
push
push
cmp
cmp
sahf
pop
sbb
ret
inc
sub
mov
jge
popw
or
pusha
mov
adc
sbb
push
fiaddl
add
daa
mov
dec
vmovdqa
fadd
popa
sub
fbld
into
repz
das
ss
lcall
pop
mov
and
jbe
or
mov
push
shll
icebp
adc
cs
jnp
imul
pop
xchg
ret
push
xor
jmp
and
xchg
dec
mov
out
inc
mov
xor
jb
sub
mov
xor
xchg
push
mov
jecxz
xorb
cmp
pop
inc
mov
shr
cmp
stos
or
push
xor
xor
sub
scas
mov
pop
pop
push
mov
xchg
rcpps
adc
shll
or
fsubrl
jo
sarb
jg
mov
data16
fdivl
outsl
outsb
cmp
jns
mov
push
or
insb
repz
roll
sarl
call
mov
jmp
xchg
xorl
int3
test
cmp
jge
rcl
dec
repz
add
fsubr
fsubr
add
outsb
imull
addb
dec
int3
jno
mov
mov
xchg
jmp
out
jg
pop
popa
push
mov
adc
cmpsb
popf
orl
jg
sbb
or
stos
mov
pop
pop
cmp
push
mov
arpl
movsb
push
subb
sub
add
hlt
in
ja
push
scas
out
stos
pop
cmp
leave
outsb
dec
xor
and
orb
movsb
fidivrs
out
movsl
andl
inc
sbb
adc
xlat
jns
mov
mov
xor
lahf
add
std
xor
into
lcall
insb
test
push
and
in
mov
push
lods
inc
rcl
sub
nop
idiv
int
imul
lock
push
sti
clc
dec
push
lahf
jnp
popa
inc
adc
loopne
xor
rcr
pop
je
cmp
repz
lcall
repz
out
xor
mov
inc
js
and
mov
iret
xchg
add
sub
and
mov
jnp
repnz
pop
cmp
inc
fwait
sbb
cmp
and
fildl
xor
out
stos
push
mov
repz
add
xchg
jge
dec
jne
jns
xor
into
and
pop
add
or
lahf
jno
mov
xchg
mov
insb
mov
inc
cmpsb
mov
cltd
or
adc
js
and
repz
xchg
out
pop
insl
daa
in
sbb
roll
sbb
imul
jnp
scas
mov
cmp
inc
loop
shll
mov
scas
inc
ljmp
in
test
ja
les
sub
push
push
push
jg
mov
test
scas
add
mov
adc
fdivrl
ljmp
hlt
movsb
inc
imul
test
imul
lods
es
sub
mov
insl
push
mov
cmp
loop
movl
pop
mov
mov
push
subb
sti
xchg
repz
in
fimull
in
xchg
addr16
jmp
mov
push
mov
out
aaa
pusha
jge
xor
push
dec
dec
pop
loop
daa
xor
xchg
dec
jg
aas
sbb
int
dec
mov
fwait
lods
xor
lods
orl
popa
mov
mov
clc
lods
sub
repz
stos
dec
or
push
cmp
jecxz
out
shl
xchg
pop
sub
lea
sub
bnd
iret
jp
cmp
lods
dec
lds
and
dec
cmpsl
std
or
and
xchg
xchg
loope
inc
cmc
inc
mov
pop
xchg
mov
mov
push
pop
pop
leave
pop
jge
push
add
mov
cmp
je
push
push
jno
mov
sub
push
jno
sbb
imul
cmpsb
shlb
inc
test
gs
xchg
popa
inc
push
push
and
andb
lds
mov
dec
fwait
insb
lahf
scas
fs
hlt
stc
cmp
push
iret
mov
sub
cmp
push
gs
xor
pop
xor
data16
or
arpl
pop
mov
enter
pop
pop
and
mov
icebp
xchg
mov
mov
imul
movsl
jnp
rcl
cli
adc
dec
inc
fstl
xchg
das
pop
movsb
xchg
dec
sbb
scas
inc
jb
into
nop
fistpl
and
data16
mov
test
repz
data16
xchg
mov
xchg
scas
cmpsl
out
and
sahf
add
movsb
jge
pop
movsb
inc
pop
mov
pop
pop
jge
neg
es
push
popf
ds
cmp
dec
push
sbbb
push
cmp
fdivr
cmc
jbe
jbe
in
cli
in
or
outsl
popa
cmp
or
mov
jne
inc
shll
out
nop
pop
shrl
insl
insb
xchg
and
cmp
xor
adc
cmp
sahf
cld
mov
xchg
sbb
stos
imul
sbbb
jge
mov
push
mov
imull
mov
mov
divb
outsl
scas
mov
inc
xlat
push
push
mov
es
pop
push
jecxz
push
sub
movaps
sahf
cltd
sub
mov
fcomp
ficoms
xchg
lcall
popa
mov
aas
inc
leave
xor
lahf
mov
mov
add
add
sub
orb
mov
dec
stos
xlat
xchg
stc
ja
cmpsb
test
add
int3
dec
mov
cwtl
cli
pop
xor
pop
inc
aam
pop
dec
pushf
mov
repz
imul
ljmp
jg
mov
fists
sbb
cmp
jge
push
or
fisubl
xor
push
push
pop
mov
je
ds
movsb
cmp
inc
nop
shrl
add
sbb
outsb
mov
pop
jecxz
xor
mov
sub
scas
jnp
aad
mov
sbb
fidivs
lret
outsb
loopne
xor
jmp
mov
push
jae
and
ucomiss
aas
mov
pop
popa
add
fidivrs
hlt
cmp
cmp
mov
fldcw
mov
add
mov
jnp
aam
push
pop
add
loopne
bound
sub
imul
mov
mov
loop
into
mov
inc
cs
push
hlt
out
pusha
pop
mov
inc
push
aaa
xor
xchg
mov
xchg
push
ficomps
ljmp
jne
and
lret
mov
or
push
sub
lret
push
es
add
pop
call
jl
fcomip
xor
push
cmp
fildll
arpl
scas
dec
push
js
inc
dec
add
or
loop
or
call
jge
adc
add
sub
or
test
pop
in
aas
leave
or
icebp
clc
int3
dec
cmc
popa
test
mov
mov
jns
mov
fdivs
mov
cmpsl
push
test
adc
shrl
insl
dec
pop
test
cmp
mov
andb
fcoml
adc
arpl
cmp
jmp
jp
ret
sbb
cmpb
mov
xchg
dec
pushf
mov
add
je
mov
enter
jnp
loop
jnp
in
aas
inc
mov
or
cmpsb
and
nop
mov
push
cmp
fbstp
hlt
bound
mov
aas
insb
add
jl
fstps
or
and
pushf
and
aas
test
or
add
mov
push
sub
aaa
out
clc
cmp
xchg
pop
and
mov
cs
je
mov
pop
scas
lods
push
imul
pop
lods
adc
daa
ljmp
add
cmp
fmull
inc
or
into
orb
sub
pop
cmp
sub
inc
ljmp
xor
xlat
pop
popa
stos
xor
xor
dec
lret
out
inc
aaa
add
mov
xchg
rcrb
cltd
lods
ret
cmp
or
incb
and
adc
lea
cmpsl
cltd
lret
mov
sbb
je
lods
out
loop
inc
inc
add
cmc
pop
xor
lahf
scas
aad
push
pop
jo
jnp
lods
in
sub
dec
loopne
sti
jb
clc
imul
adc
in
in
lahf
lcall
inc
push
negb
scas
pop
repz
or
mov
ja
jp
out
test
sub
aam
pop
bound
sub
sbb
or
inc
mov
xchg
push
or
pusha
lret
jmp
arpl
bound
shrl
rcl
lds
adc
push
xor
les
push
lcall
pop
mov
inc
xchg
inc
cmp
push
mov
inc
push
lds
sub
xchg
adc
add
lcallw
jp
sbb
js
dec
cld
movsl
mov
cwtl
xchg
dec
jg
and
rcl
pop
pusha
in
shrl
dec
adc
repnz
out
ret
out
outsl
out
push
push
aad
dec
test
inc
and
scas
lods
sub
xor
loopne
rorl
pushf
repz
mov
inc
jne
out
or
cmpsb
sbb
dec
fimuls
mov
push
push
cld
stos
mov
and
cld
cli
push
mov
xchg
jge
sbb
insl
mov
scas
jg
mov
enter
and
inc
xchg
shrl
in
dec
cmpb
cmp
mov
cmpsl
daa
cmc
sbb
ret
xor
or
mov
arpl
xchg
daa
pop
pop
or
ret
add
sub
xchg
out
push
sti
mov
lock
or
les
int
subl
out
adc
mov
fistpl
push
or
cmp
inc
mov
popa
jns
lock
mov
or
imul
in
js
clc
mov
aad
inc
outsb
xchg
and
ss
insb
aas
mov
les
or
pop
or
and
push
fistps
out
inc
jp
in
jnp
lods
enter
pop
hlt
jmp
dec
jns
add
xor
add
xchg
dec
pop
fs
shlb
jg
dec
movntps
dec
in
ja
test
sub
jecxz
in
das
roll
xchg
dec
xor
cmp
jge
jb
dec
imul
imull
xlat
cmp
stc
adcb
stos
xchg
xor
repnz
sub
outsb
jno
pop
mov
loopne
icebp
mov
sti
shll
adc
mov
sbb
pop
cld
pop
lock
and
andl
add
jne
pop
fimuls
cwtl
bound
pop
test
loopne
iret
cld
sub
mov
dec
loop
in
int
rcll
push
cmp
xor
bound
out
sbb
out
or
test
sahf
sbb
pop
movsb
aad
mov
daa
insl
mov
test
push
popa
jl
mov
xor
cmpsl
xor
lahf
out
jp
mov
fisttpll
idiv
and
mov
cltd
xchg
adc
jae
popa
or
mov
inc
or
hlt
push
or
icebp
pop
sarb
repz
jle
mov
sti
and
jbe
pop
clc
fstpt
insl
idivb
sub
stc
sbb
popa
enter
pusha
stc
mul
iret
in
inc
pop
sbb
negb
sub
adc
sub
inc
or
jbe
mov
stos
mov
sarl
shl
and
inc
xor
insb
push
mov
jne
cmpsb
mov
add
lods
and
jo
jp
cmp
sbb
cmp
cmp
mov
sahf
push
pop
and
push
xor
into
je
xchg
call
jmp
xchg
aaa
jns
jno
xchg
call
hlt
stos
lahf
mov
fdivl
mov
xchg
mov
test
pop
icebp
je
addr16
or
inc
mov
shl
mov
cmp
lods
lcall
and
sub
ret
sub
shrb
mov
rcll
sub
adc
adc
dec
jge
add
sub
xchg
sbb
or
shlb
loopne
xor
xor
subl
stos
mov
daa
and
insb
mov
arpl
mov
cmp
cmc
sbb
insl
xchg
sub
mov
gs
or
or
adc
pop
pop
push
sbb
mov
jecxz
lock
jb
jp
iret
cld
sbb
xor
ret
pop
mov
add
sbb
xor
inc
mov
divb
scas
push
pop
xor
hlt
jl
xchg
jl
cltd
lahf
lea
mov
push
lcall
lock
js
sti
in
orb
mov
nop
pop
add
add
mov
and
jae
cli
xchg
mov
and
call
ljmp
cld
mov
shl
js
fs
or
call
mov
inc
inc
pop
mulb
and
imul
xchg
insb
mov
jmp
push
xlat
xor
sub
xorl
jl
push
xchg
idivl
mov
mov
cmp
popf
pop
xor
pop
decl
mov
or
popa
sbb
pop
xor
gs
cmc
hlt
enter
dec
or
xor
jae
leave
movsb
cltd
mov
fld
stc
jne
pop
push
pushf
lock
pop
je
xor
xchg
addb
rorl
fs
xchg
sub
aaa
fisttps
loopnew
dec
inc
addr16
pop
stos
add
iret
adc
insb
xchg
xor
es
jp
mov
out
adc
mov
adc
test
push
jecxz
pop
xor
insb
add
and
sub
push
xchg
fdiv
scas
push
sub
and
test
cwtl
adc
jae
gs
mov
mov
add
andb
lret
and
faddl
mov
ljmp
xchg
xor
sbb
mov
dec
cmpsl
or
xchg
mov
cwtl
push
pop
dec
inc
fwait
sbb
push
xchg
inc
mov
cld
xor
outsl
jbe
jne
in
xchg
and
in
inc
add
lcall
lds
xchg
int3
int
cltd
sbb
xchg
lods
push
test
lds
call
cmp
stc
mov
mov
inc
cmpl
loopne
icebp
xchg
adc
ret
sti
mov
cld
mov
sti
ds
jbe
inc
lcall
sbb
icebp
xchg
pop
lcall
mov
pop
dec
lods
loope
iret
fcmovnu
notl
xchg
add
jge
adc
in
and
es
iret
arpl
or
loopne
in
aam
aas
stos
cmpsb
and
aad
lahf
gs
add
movsl
cmpsl
mov
mov
in
sbb
and
nop
cmpl
lahf
mov
dec
xlat
or
xchg
jg
xor
push
xor
xchg
jno
sub
sbb
imul
adcl
adc
scas
lods
inc
mov
pop
xlat
roll
pop
or
sub
insb
js
pop
divb
stos
adc
aam
cld
cmc
sub
mov
popa
push
and
pop
xor
ret
jg
or
leave
int3
outsb
in
sub
xorl
stc
inc
pop
cs
pop
xor
adc
jo
arpl
test
push
repnz
xchg
leave
mov
adc
xchg
adc
out
sbb
push
fmul
in
ja
xchg
jmp
popf
xor
or
push
scas
inc
je
push
ljmp
and
cmc
xchg
push
addr16
inc
pop
xchg
push
inc
cmp
fisttpl
or
jge
and
mov
dec
arpl
into
jne
inc
call
jne
gs
mov
push
xchg
inc
cwtl
pop
nop
and
cwtl
imul
insl
fidivs
aas
in
add
ret
or
popa
adc
loop
sbb
movhps
fs
push
daa
scas
data16
jg
xor
notb
sbb
xchg
xchg
stos
adc
mov
lods
pop
push
outsl
orb
push
out
sbb
adc
int
push
jo
or
sbb
movsl
xor
cwtl
icebp
xorb
xor
inc
jb
in
jp
jmp
jg
mov
addl
jmp
gs
inc
and
inc
add
adc
addr16
rcrl
std
out
xor
add
dec
imul
adc
xor
and
xor
dec
sbb
hlt
mov
and
flds
dec
push
call
aam
inc
faddl
enter
mov
pop
jnp
adc
dec
jo
cmpsb
inc
out
subl
or
rcrb
fisubrl
cli
fstpl
test
popa
xor
xor
fistps
sbb
stos
push
push
mov
sub
cwtl
fildl
cmp
mov
sbb
sbb
sub
and
pop
pop
xor
cltd
jae
and
mov
dec
push
ds
imull
inc
or
jl
pmaxsw
movb
cmp
cmp
je
shr
inc
rcr
loop
loopne
pop
or
xchg
mov
xor
xor
xchg
mov
das
out
sahf
out
sub
or
mov
push
lret
shll
cs
xchg
das
and
jle
insl
cli
mov
js
scas
adc
lds
ja
mov
sub
scas
ljmpw
jns
push
test
call
sahf
loope
cmpxchg
jg
adc
push
ds
push
scas
rolb
adc
cmpsb
push
push
jl
aas
dec
and
and
xor
sub
test
lods
push
mov
fists
outsl
lea
mov
or
aaa
fsubrl
pop
into
cld
std
cmpsl
popf
push
ds
std
fstps
pop
jl
or
movsb
sbb
imul
pop
or
mov
or
xchg
pop
int3
xor
add
mov
movsl
stos
cmp
xor
push
les
aas
sahf
lock
pop
cli
mov
mov
sbb
ud2
repnz
mov
hlt
ret
icebp
sub
cmp
outsb
lret
jp
ret
stos
inc
movsb
and
rcll
ljmp
dec
les
jno
lea
xchg
aas
fidivrl
imul
ficoml
sub
shrl
xchg
daa
mov
pop
stos
adc
mov
popa
mov
sbb
cs
shl
mov
inc
push
xor
add
insl
les
std
xchg
fbld
test
test
insl
push
rcrl
mov
and
jne
jle
dec
rclb
mov
adc
or
mov
adc
leave
lea
jle
fistps
rclb
addr16
push
sub
cmpb
mov
xchg
or
rolb
mov
outsl
test
xchg
inc
fldenv
jmp
loope
inc
push
in
fwait
in
inc
xor
push
jl
movsl
mov
or
mov
flds
push
or
test
inc
js
aaa
rcll
int
mov
dec
sti
push
inc
mov
sbb
ja
out
repz
inc
mov
sbb
dec
leave
cld
cmc
pop
inc
pop
jle
xchg
pop
lock
jno
outsl
jl
out
adc
mov
adc
arpl
xchg
lahf
dec
add
fcomps
mov
push
or
or
jo
insb
aaa
rcr
xchg
mov
cmp
add
test
ret
icebp
nop
aad
add
cmc
xchg
int3
dec
test
std
in
int3
dec
jle
icebp
pop
adc
add
movsl
imul
add
int3
cmp
outsl
mov
cmc
mov
jns
es
push
loopne
ror
push
jno
sub
fildll
sti
cli
lock
leave
jns
adc
xor
je
ffree
and
pop
inc
pop
lods
or
mov
mov
pushl
push
pushf
out
div
inc
or
sbb
in
jmp
hlt
push
test
ss
dec
pop
lahf
into
sbb
jg
fnstenv
pop
nop
aaa
arpl
aas
imul
mov
int3
mov
jp
and
ss
inc
pop
je
sti
mov
jmp
call
push
lahf
ja
andl
add
jl
push
repnz
sti
and
enter
or
int
and
fwait
in
test
cmc
inc
ret
je
xchg
int
pop
inc
mov
dec
xor
mov
adc
test
adc
call
iret
lahf
push
lds
test
xor
cltd
aas
sti
sub
leave
push
sarl
ja
xchg
mov
lahf
lret
gs
stos
cmp
sbb
bound
push
pusha
rclb
popa
decb
dec
mov
das
pop
adc
rcll
cmp
mov
aaa
out
inc
lea
aas
jnp
inc
loope
ficompl
mov
jl
mov
xor
aas
dec
push
adc
inc
push
xchg
sub
in
xchg
mov
js
lea
in
clc
mov
mov
adc
outsl
pusha
lods
movsl
xor
sahf
repz
and
mov
sbb
xchg
cmpsl
and
cmpsb
lret
dec
insl
repz
rorl
stos
cs
in
push
sub
dec
pop
mov
dec
jge
cmp
lods
addr16
pop
pop
and
jg
jnp
movsl
or
int
sahf
pop
sub
cmp
adc
xor
rcrl
cmp
dec
loop
pop
hlt
inc
lret
mov
adc
rclb
mov
in
push
dec
stc
or
cmc
push
mov
std
lret
call
in
into
test
enter
into
mov
fsubrs
repz
lods
xchg
mov
fs
mov
test
test
mov
mov
int
cmpsl
cmp
push
out
xor
jno
cmp
push
jge
pop
sub
addr16
push
fwait
lock
mov
test
js
ret
fmuls
mov
std
cwtl
test
es
arpl
mov
or
int
and
pop
mov
mov
pop
fwait
icebp
loopne
and
mov
adc
inc
dec
stos
stos
push
icebp
nop
push
and
pushf
popa
sub
dec
sbb
repz
out
jecxz
and
loopne
rorl
push
imul
add
sub
xchg
and
sub
pop
push
push
inc
loop
jo
int3
fcoms
cmpl
cmp
sub
arpl
add
jecxz
mov
or
daa
push
inc
into
icebp
aam
sahf
cmp
dec
cld
dec
mov
sub
pop
push
outsb
arpl
clc
repz
imul
push
add
mov
jmp
je
sub
test
inc
es
mov
xchg
inc
xor
loope
fnstcw
jns
mov
cmp
mov
clc
xor
int3
xchg
sahf
add
ffreep
stos
cmp
push
or
lock
and
loope
pop
shl
gs
adc
jne
out
clc
les
outsb
test
sbb
inc
mov
pop
sbbl
loop
test
push
insb
and
adc
pop
jnp
fs
movsb
jp
inc
lods
pop
mov
cwtl
cmc
fistpll
lahf
lock
sysret
xor
adc
outsb
cmpsl
adc
dec
inc
rol
test
jbe
sbb
push
stos
pop
into
fdivrs
in
ret
xor
xchg
pop
push
data16
fldcw
lret
jmp
jp
xor
mov
pop
inc
and
push
pop
and
jb
xchg
in
mov
sub
pop
popf
mov
ja
push
or
repz
loop
int3
sbb
nop
pushf
xor
push
repnz
inc
mov
fs
xchg
orps
push
out
test
dec
int3
out
fistl
pop
jae
pop
dec
lret
ja
sbb
mov
inc
arpl
sbb
arpl
push
ja
push
js
jno
jp
inc
push
les
es
scas
sub
mov
or
lods
call
jo
shlb
inc
je
mov
popa
loope
mov
sbb
fdivrp
add
cmc
mov
pop
roll
repnz
into
adc
and
sbb
lret
or
xchg
adc
xchg
xor
mov
lcall
dec
clc
mov
jo
sub
leave
stos
fs
pop
sub
mov
addr16
xlat
mov
mov
fldl
das
xlat
jbe
adc
clc
or
mov
leave
or
jge
push
aam
shl
inc
and
inc
mov
int
in
adc
push
loope
push
sub
and
add
mov
inc
inc
out
fdivrl
cs
es
mov
lret
je
or
sbb
jecxz
int3
std
cld
cltd
lret
or
std
push
es
inc
cmpsb
inc
or
xchg
pop
push
jge
mov
cmp
popf
shl
cmp
jp
sbb
rcl
dec
push
clc
cmp
gs
inc
outsl
loop
mov
jg
ret
adc
das
or
or
iret
cmp
xchg
add
dec
push
or
dec
js
xor
ja
dec
popf
inc
lods
lock
add
xchg
test
out
popf
fcmovnbe
xlat
mov
cmp
and
add
in
pop
push
xor
lods
cmpsl
jle
sbb
popf
movsb
clc
xlat
clc
xor
pop
popa
jb
jno
cli
outsl
jg
pop
ss
xor
cli
push
pop
mov
popw
vmovss
adc
adc
call
fcompl
inc
pop
mov
push
aaa
movsb
xchg
cli
mov
cmp
aam
push
mov
popf
ret
and
ret
xchg
out
cmc
xor
icebp
mov
loop
bound
mov
mov
mov
and
sbb
mov
mov
int
out
mov
mov
loope
mov
cmp
pop
mov
ja
cmp
mov
ds
js
in
mov
mov
jecxz
mov
pushf
jbe
shrb
inc
mov
cmc
xor
jne
jle
pop
scas
sbb
fwait
mov
xchg
pop
jl
arpl
sub
adc
aaa
mov
jo
mov
xor
and
xchg
sahf
inc
and
cmp
je
pop
xchg
mov
dec
inc
nop
sub
mov
inc
push
jns
pop
movsl
cmpsb
xor
pop
lds
gs
adc
insl
mov
jnp
pusha
test
mov
bound
xor
mov
scas
push
ret
lods
pop
pop
into
enter
sbb
shr
cs
lret
mov
mov
orl
aaa
aaa
es
cs
mov
push
mov
jne
mov
test
add
lea
pushf
sbb
iret
test
push
mov
jg
jnp
and
mov
jmp
shll
adc
ss
clc
and
adc
jae
flds
jnp
inc
pop
mov
mov
mov
test
inc
shr
fisttpl
inc
outsb
outsl
arpl
inc
mov
in
xchg
clc
cmp
mov
push
mov
repz
cmpsl
dec
xchg
mov
lahf
sub
test
mov
adc
jmp
aaa
xchg
xchg
in
scas
mov
xor
loopne
mov
cmp
pop
outsl
push
inc
test
orl
xchg
fnstsw
mov
rcrb
incl
mov
out
inc
mov
out
lret
mov
pop
push
mov
cmpsl
and
xor
push
and
and
mov
mov
movsl
add
and
imul
repnz
inc
out
std
mov
cmp
xor
mov
int
push
xchg
scas
pop
jle
shlb
jle
sbb
pop
fucomip
mov
mov
mov
add
daa
adc
push
or
mov
lahf
test
cmpsb
dec
push
out
pop
es
sub
js
jmp
xchg
dec
fstp
out
wrmsr
cmc
sahf
adc
adc
xchg
int
lcall
mov
adc
jns
inc
jge
jmp
cmc
xchg
inc
mov
cld
add
mov
lock
fs
mov
push
xor
push
jecxz
repz
xchg
xchg
in
enter
inc
xor
shrl
inc
lds
xchg
mov
lds
xchg
mov
int3
sub
daa
sub
add
xchg
cli
pop
push
cs
cli
imul
jp
loopne
jmp
mov
or
outsb
or
mov
ret
xchg
cmp
and
mov
sar
sub
adc
mov
mov
and
fs
inc
stos
fmull
add
or
repnz
iret
mov
das
ljmp
push
rep
int
iret
jle
stc
mov
and
fwait
popf
xchg
outsb
xchg
nop
ljmp
jge
loop
mov
pop
test
xor
add
fisubs
pop
mov
push
lahf
mov
pushf
add
popa
xchg
xchg
mov
enter
sbbl
cmpsb
mov
clc
fmul
jge
xchg
decb
cmp
xchg
mov
jb
jecxz
mov
lret
pop
push
adc
cltd
jno
inc
jmp
pop
xchg
lret
pop
clc
mov
popa
icebp
push
push
add
jp
iret
je
lods
cs
pop
cmp
stos
jb
and
inc
push
je
adc
rcrl
cmp
lock
sub
sbb
jb
dec
addb
mov
enter
sub
int3
xchg
sahf
sub
bound
push
jmp
int
sbb
xor
push
jae
mov
pusha
pop
inc
mov
xchg
fldl
daa
in
jo
mov
pusha
mulb
mov
adc
roll
add
pop
in
sbb
mov
sub
addb
xchg
and
fnstsw
ret
lret
xor
mov
sbb
movsb
notb
xor
add
movsl
in
mov
in
insb
sar
jecxz
dec
sbb
inc
add
push
or
sub
and
dec
mov
or
or
dec
fs
int3
mov
fstps
dec
fcompl
mov
fldenv
push
fsubl
mov
xor
mov
stos
dec
pop
sbb
lea
les
add
jmp
stos
dec
mov
add
sbb
cmpsl
test
mov
or
push
jle
xchg
movsl
out
cwtl
mov
add
mov
cltd
and
xchg
daa
and
jl
das
push
icebp
mov
inc
jl
sbb
cmp
xor
lods
xchg
push
mov
or
out
loope
or
repnz
jns
out
repnz
call
push
in
sbb
fcoms
mov
adc
imul
cli
add
jecxz
cmpb
mov
lods
mov
xor
popf
arpl
rclb
mov
jbe
ljmp
sbb
ror
fisttps
movb
repz
xchg
das
sub
and
divb
das
mov
cli
jl
mov
repz
sbb
shl
mov
lods
mov
push
add
repz
mov
rolb
loope
fs
outsb
inc
fisubrl
dec
or
into
fistpl
call
pop
mov
gs
leave
and
xchg
pushf
inc
pop
add
mov
xchg
pop
pop
pop
repz
shrb
fistpl
jbe
or
sti
into
mov
adc
jnp
dec
mov
sbb
arpl
mov
call
popf
push
popf
enter
jl
fs
mov
cmp
pushl
sub
cmpsl
pop
mov
mov
jl
pop
mov
and
mov
jl
popa
and
shl
sub
shll
les
cld
cli
adc
ja
nop
add
cmp
jmp
in
outsb
add
shlb
clc
xlat
pusha
ja
sbb
je
lret
bnd
pop
cmpsb
ret
sub
push
sarl
xlat
sub
xor
and
sbb
inc
xor
push
jnp
inc
repz
mov
mov
js
in
aas
lods
and
movl
out
shrl
cltd
jns
inc
andb
inc
pop
xor
push
in
xor
ret
push
loop
add
out
subl
cli
das
inc
clc
pop
xor
mov
stos
adc
imul
xchg
mov
jecxz
or
neg
sbb
lahf
adc
test
out
add
mov
push
in
out
pop
int3
or
push
loopne
stos
or
addr16
mov
cmpsl
into
mov
nop
xor
std
aas
jbe
scas
les
pusha
fiadds
orb
call
xor
jmp
inc
mov
loope
lock
lods
lds
les
pop
movl
lds
jo
xor
or
ret
ret
iret
dec
inc
mov
jle
push
xchg
in
push
xchg
mov
or
mov
jb
addr16
jg
xchg
or
shlb
sahf
clc
and
aad
test
negb
adcl
testb
pop
call
cld
mov
push
sub
imul
xor
jp
sbb
enter
out
lods
jecxz
out
adc
cmp
shrl
test
or
sbbl
dec
popf
insl
icebp
and
pusha
pop
scas
ret
fstl
dec
sub
push
and
out
dec
pushf
ret
dec
stos
scas
jle
leave
sub
into
mov
pop
inc
enter
shrb
in
jae
mov
lret
fidivl
lods
jno
mov
outsb
xchg
mov
jp
jnp
std
add
lret
or
call
inc
cmp
push
into
adc
hlt
sbb
je
mov
inc
dec
sub
out
into
jnp
aad
pop
mov
sub
test
xchg
sahf
test
jnp
clc
and
test
xchg
mov
pop
pop
jmp
jne
xor
xor
inc
rol
adc
stos
popa
shl
hlt
movsl
fwait
movsl
cmpl
movsl
and
cmc
jl
pop
repz
mov
sbb
js
iret
aaa
push
mov
sub
fwait
andb
dec
inc
mov
dec
in
cmp
in
dec
add
addr16
int
loop
inc
cli
int
cmc
push
cmp
aaa
lret
dec
or
into
mov
inc
and
lret
sahf
pop
mov
ss
pop
nop
sbb
call
les
in
insb
ss
jp
push
scas
stc
mov
cmp
dec
arpl
jl
sbb
or
adc
outsl
je
shll
cmp
dec
dec
sub
les
xchg
sti
in
and
test
mov
sbb
repz
mov
adc
loop
idivl
add
int3
imul
mov
fwait
movsl
cwtl
mov
imul
push
and
cmp
arpl
dec
outsb
nop
xor
sbb
inc
mov
sub
leave
je
fwait
dec
pushf
xchg
jmp
test
jp
fwait
and
xor
mov
mov
ljmp
imul
add
jmp
push
adc
ss
ljmp
adc
xor
rcl
rorl
xchg
add
dec
pop
enter
aaa
rclb
jle
loop
mov
push
ret
adc
jmp
stc
xor
adc
outsb
adc
cmp
out
cli
aas
jecxz
and
test
in
sub
enter
xlat
scas
mov
rclb
add
dec
pop
clc
dec
popf
icebp
xchg
sbb
sbb
push
loopne
scas
ja
sub
aad
or
xor
aad
rol
mov
xchg
sarb
sub
mov
fcmovb
bnd
into
xor
sbb
mov
push
test
pop
mov
jl,pn
bound
dec
daa
stc
outsb
sbb
stos
pop
cmpsl
std
cmp
out
mov
xchg
push
into
shlb
rorl
xchg
test
cmpsl
mov
enter
dec
mov
or
sub
mov
insb
xlat
movsl
mov
mov
lds
and
mov
pop
push
aam
out
movsb
mov
sub
dec
sbb
sbb
mov
cltd
push
jecxz
pop
sarl
xchg
dec
repnz
jo
gs
or
sbb
and
xor
outsb
pusha
in
xchg
mov
bound
out
sbb
xchg
cmpsb
movsl
ds
dec
icebp
sbb
rolb
addr16
in
aad
mov
call
inc
inc
mov
shl
test
mov
cmc
jg
dec
jne
es
push
lret
mov
lock
sub
xchg
mov
mov
mov
sbb
mov
jecxz
mov
ret
fimuls
dec
mov
sti
leave
lds
shrl
sahf
mov
lods
insb
xchg
xchg
push
jnp
push
sub
xor
ror
adc
gs
jno
xlat
sub
sbb
xchg
cmc
ror
outsl
rorl
shrb
pushf
arpl
or
cmp
lahf
test
jmp
cli
aas
jne
popa
jp
cli
call
mov
mov
pop
xor
push
icebp
xlat
fs
cltd
push
push
sub
cmp
add
ficoml
leave
push
dec
xchg
movups
xchg
ljmp
cltd
add
xchg
inc
aaa
aam
pusha
bound
cltd
int
jle
pop
enter
roll
mov
mov
sbb
jge
repz
lea
insl
arpl
das
xchg
out
repnz
cmc
jns
out
ds
std
lods
das
aaa
std
xchg
das
xchg
out
loope
in
adc
add
fildll
hlt
mull
mov
cli
repnz
xor
cmpl
outsl
in
outsb
pop
aad
cs
sub
adc
and
xchg
jnp
lods
inc
cmc
push
inc
add
ds
jnp
test
add
popa
jmp
pop
jl
lahf
dec
into
add
ja
mov
or
test
mov
dec
cwtl
lahf
mov
das
loope
and
sub
test
push
into
push
sarl
test
rol
pop
jae
stc
mov
add
enter
jge
stos
xchg
pusha
sbb
ljmp
dec
jns
cmp
inc
mov
imull
cli
pop
xchg
mov
xor
movsb
sbb
xor
xlat
lret
xor
stos
pop
int3
into
sub
imul
sub
jno
xchg
mov
push
mov
and
mov
stos
adc
mov
cmp
addr16
outsb
and
pop
je
mov
shl
movsl
jb
xor
pop
aam
mov
add
jmp
ret
push
outsl
mov
movsl
and
lods
scas
sbb
jl
sub
dec
leave
int3
jecxz
mov
sub
shlb
pop
and
xor
sub
addr16
push
popa
xor
lret
pop
stos
push
xchg
mov
fs
push
cli
mov
cs
ja
jbe
pop
sbb
pusha
or
repz
pop
xor
cltd
sub
push
xchg
sub
lea
dec
pop
adc
or
negl
ljmp
xor
adc
sbb
mov
cmpsl
push
mov
repnz
pop
inc
lods
lahf
xlat
out
xor
xchg
test
mov
or
mov
in
bound
daa
jb
insl
jp
out
arpl
mov
push
xchg
out
repz
pop
cs
movsl
mov
insb
mov
sub
cmp
pop
jmp
repz
ret
bnd
cwtl
subl
lock
xchg
sbb
xchg
xor
stos
adc
cli
ljmp
add
int3
cmpsb
les
pop
xchg
xor
lock
std
dec
mov
xor
in
inc
rorl
sub
pop
fnstsw
clc
inc
fistpll
xchg
mov
pop
ret
xchg
and
push
cs
xor
fimull
movsb
inc
cwtl
push
lds
jl
repnz
cmp
mov
fldcw
mov
xor
out
lock
sbb
call
sbb
or
sub
push
sbb
js
and
lret
js
inc
loopne
imul
loopne
cmp
jl
pop
add
ror
inc
pop
mov
sbbb
dec
dec
xlat
repnz
inc
jmp
sbb
int
aam
jge
cmpsb
loop
push
pop
addr16
mov
jno
push
sbb
or
scas
xor
push
jecxz
aas
adc
into
cli
or
or
mov
movsl
aad
cli
cwtl
into
xchg
movb
mov
jle
repnz
shlb
sub
mov
loopne
imul
insb
aas
mov
or
xor
mov
cmp
mov
xlat
ds
fwait
sub
xchg
cltd
pop
xor
jae
add
loope
pusha
insl
push
xlat
js
cmp
lods
jmp
jo
lock
out
enter
xor
jl
sti
imul
rorb
das
repnz
push
mov
ljmp
rclb
movsb
dec
sbbb
fucom
sbb
sub
pop
scas
cmp
cmp
in
cmp
push
mov
sbb
xchg
mov
mov
xor
jl
ss
in
cltd
rcll
mov
and
out
mov
nop
packsswb
pop
loopne
push
mov
jno
arpl
out
popf
imull
jb
adc
mov
jge
movsl
ss
test
and
ret
xchg
cwtl
sbb
pusha
inc
ret
fdivl
fidivs
jae
insb
fiadds
cmp
jmp
cmp
adc
sub
sbb
rcpps
mov
lds
adc
ret
pushf
pop
aas
imul
fcoml
ss
andl
or
push
sbb
cwtl
push
push
ja
and
das
push
adc
movsl
cltd
mov
and
push
jb
call
jecxz
add
jne
ret
rcrb
cltd
cmp
cmpl
sub
aad
sbb
movb
mov
cmp
dec
pop
ret
call
pop
mull
mov
xchg
inc
push
aad
rcll
mov
mov
out
push
xor
add
sbb
pop
ss
jp
adc
mov
jp
dec
sub
mov
adc
dec
cmpsl
leave
jecxz
sbb
jne
lret
inc
sub
leave
dec
test
divl
xchg
pop
stos
movsl
ret
outsb
jmp
je
and
add
xor
inc
dec
sarb
jne
jnp
mov
cmp
fwait
mov
xor
mov
sar
xchg
xchg
adc
test
dec
jns
ror
xchg
inc
add
pop
pop
imul
add
aam
jmp
pop
aad
pop
or
lds
in
and
mov
out
test
add
dec
pop
popa
test
sbb
hlt
push
or
pop
ret
inc
inc
neg
xchg
cmp
or
xor
lret
inc
push
jg
loopne
jp
movsl
adc
xor
inc
aad
mov
pop
fcompl
negb
lret
popf
iret
call
jne
push
fs
mov
icebp
lahf
xchg
pop
xchg
mov
sahf
xchg
xchg
add
cmc
inc
add
maskmovq
divl
xor
xchg
out
ficompl
je
movsl
dec
pop
mov
enter
jnp
lcall
inc
daa
aam
stos
movsb
mov
adc
jg
in
test
shlb
or
jge
outsb
aad
int
cmpsb
cwtl
add
adc
sbb
sub
test
xor
iret
pop
repnz
loopne
and
test
in
push
lods
push
test
mull
inc
or
cltd
out
movsb
test
cmpsb
in
insb
mov
fwait
jle
mov
ret
cmc
daa
dec
test
adc
mov
add
inc
sbb
mov
push
scas
dec
rorb
icebp
negl
push
stos
cld
addr16
push
pop
or
cmp
adc
add
sub
lea
jbe
jge
das
jae
cmp
inc
pop
cwtl
mov
adc
xchg
jmp
bound
addr16
mov
mov
push
dec
xchg
aaa
or
or
mov
xchg
leave
fbld
push
scas
cli
stos
popa
lcall
sti
lret
out
push
xchg
pop
mov
push
xchg
loop
or
int3
or
add
sbb
and
cld
idivl
subb
sbb
push
lcall
adcb
xchg
dec
aad
pushf
rclb
xlat
sbb
fildll
pop
ret
leave
scas
inc
xor
in
push
jg
in
dec
movsl
in
scas
and
adc
pop
mov
nop
sub
into
call
stos
jmp
lods
cmpsb
cmp
mov
rcrl
scas
and
and
lds
inc
in
push
lret
or
lock
and
movsl
subb
roll
hlt
bound
or
and
push
jg
cmp
mov
call
jb
vpshufhw
jnp
rolb
jns
mov
push
stc
ds
mov
fwait
jno
dec
divb
adc
inc
pop
sarb
or
push
cs
dec
pop
sub
mov
xlat
ret
fisttpl
lret
and
mov
mov
sti
fisubrs
shrl
mov
xchg
cmp
add
fcmove
sarl
dec
iret
jnp
and
xor
loop
ret
es
lcall
sbbb
lahf
repnz
bound
movsb
dec
push
push
push
test
ret
push
test
adc
jns
adc
push
xchg
js
out
imul
mov
mov
aas
pop
and
cmp
adc
sub
jl
mov
es
sub
test
insl
ret
jbe
xchg
popa
ret
je
ficoml
mov
int
mov
lods
es
mov
pop
pop
adc
sub
test
xchg
stos
out
cmp
sbb
and
mov
add
popf
inc
js
adc
mov
cmpsb
inc
shl
and
sbb
cmc
mov
and
out
cltd
idivl
mov
andl
lret
jl
pop
cmp
loop
push
push
je
ja
ljmp
aas
or
dec
sub
fimull
stos
ja
cmpsl
sub
andb
inc
pop
cmp
fdivrl
icebp
sbb
add
insb
cmovle
cmpsb
gs
mov
popf
mov
xchg
pop
sub
mov
nop
cld
inc
or
xchg
in
mov
repnz
inc
and
and
movsl
sbb
pop
cmp
cmc
dec
bound
mov
add
je
pushf
hlt
fwait
stos
push
xchg
cmp
and
adc
repz
sbb
push
loope
pop
test
aad
dec
daa
and
xorl
and
ret
sbb
inc
insb
pop
ret
rorb
xor
aas
mov
add
xchg
loopne
mov
inc
mov
out
and
bound
adc
inc
lcall
out
adc
pop
jae
xor
ficomps
sub
sub
ret
movsl
cltd
es
nop
xchg
pop
cmp
or
fs
adc
xor
loope
rclb
dec
lea
add
mov
std
push
loopne
rcr
fidivrl
in
mov
add
pop
mov
sub
lea
arpl
fsubs
mov
push
pop
divb
popf
cmp
sub
add
sahf
sub
es
push
xchg
es
icebp
xor
aad
imul
sub
pop
push
arpl
xchg
aas
or
xor
popf
scas
mov
push
sbb
cmpsl
mov
mov
add
sbb
xlat
pop
jmp
dec
fadd
enter
xor
and
nop
sahf
jb
mov
jae
add
cltd
icebp
inc
leave
lea
imul
orb
imul
cmpsl
scas
and
xchg
ffree
sti
addl
xchg
xor
repnz
subl
bound
fistpll
test
pop
stos
xchg
fcmovnbe
in
add
inc
mull
adc
add
push
xor
fildll
shl
inc
push
stos
out
lcall
xor
pop
dec
lods
mov
int3
in
pop
pop
ljmp
lcall
ds
mov
inc
inc
mov
divb
out
lret
jnp
push
dec
fwait
xor
insb
repz
out
stos
or
cmp
out
sub
sbb
test
ljmp
cmp
xchg
dec
mov
std
sbb
mov
ficoms
push
aam
xor
or
fwait
in
mov
and
pop
out
or
or
jmp
inc
dec
movsl
mov
rorl
add
xchg
mov
hlt
pop
adc
xlat
rorl
push
xor
cwtl
popa
aaa
mov
nop
mov
int3
insb
pusha
into
jl
ljmp
iret
nop
dec
scas
xchg
mov
in
and
cltd
jmp
inc
fsub
sbb
fsubrl
pop
cld
sbbl
call
frstor
jne
imul
sbb
adc
fstpt
and
inc
lret
nop
mov
mov
or
rorb
sub
stc
add
add
test
pop
pushf
leave
cs
xor
aas
fidivl
jns
and
ja
ret
and
push
subb
fnstenv
jmp
mov
ja
jbe
pop
dec
iret
out
shrl
cwtl
push
xchg
jnp
into
ds
hlt
dec
fs
adc
les
xor
out
and
pop
hlt
cmpsb
or
inc
cmp
lret
mov
mov
bnd
dec
cmp
test
aas
xchg
adc
pop
pop
mov
push
out
mov
adc
xchg
sbb
data16
lret
jnp
or
pop
xor
adc
bound
cmpl
arpl
cmp
inc
mov
ds
jp
dec
sbb
in
inc
pop
and
stc
xchg
test
sbb
out
sbb
adc
push
cmp
aam
inc
roll
cmpsl
sub
sbb
inc
popf
jle
je
push
cld
jo
fcoms
push
cmp
shl
mov
popa
mov
mov
push
aaa
rclb
scas
dec
xorb
xor
xchg
push
jo
or
aas
or
sub
addr16
ret
mulb
imul
xchg
mov
mov
cmpsb
push
pop
jp
inc
and
cltd
push
addr16
dec
jmp
sbb
jb
gs
mov
leave
lcall
cmp
insb
enter
es
mov
inc
repz
pop
icebp
imul
xchg
sub
add
xor
imul
inc
cs
jecxz
rorl
push
mov
or
push
mov
mov
repz
sar
bound
pop
pop
out
or
cmc
push
bound
or
xchg
dec
push
rcl
push
icebp
inc
gs
stc
rol
push
int3
rcrb
add
lds
outsb
sbb
mov
sahf
scas
out
dec
add
jp
mov
je
cmp
push
adc
pop
cmp
jo
inc
mov
dec
push
or
ljmp
enter
ljmp
imul
xchg
jecxz
je
or
fstps
push
push
push
cmc
mov
daa
rcll
add
cmp
hlt
adc
dec
mov
jns
mov
jae
neg
insl
sbb
pop
push
mov
jbe
mov
cld
or
addr16
push
dec
lods
inc
push
aas
cltd
or
inc
dec
mov
in
sbb
aad
in
sub
adc
int
xor
sub
pop
xchg
sbb
inc
push
xor
jnp
inc
lock
mov
xor
hlt
lret
push
push
js
insl
mov
popf
mov
cmp
jno
in
jge
sbb
std
jmp
lds
lods
pop
lcall
mov
xor
jae
sub
mov
lahf
mov
or
ret
jne
ljmp
cmp
popf
mov
push
bound
in
cli
pushf
cmp
mov
popl
sub
loop
jl
lea
iret
inc
jb
or
jmp
int
push
xchg
xlat
and
push
push
popf
cmp
adc
mov
inc
mov
stos
inc
sbb
xor
dec
xor
xor
pop
loopne
cs
push
out
cmp
xchg
mov
ror
inc
inc
rclb
ror
jnp
ret
or
frstor
ss
dec
rorl
push
push
jmp
jecxz
xor
movsl
pop
ljmp
mov
cmp
mov
mov
mov
pop
out
mov
into
std
jge
jns
call
or
lahf
sub
lods
icebp
xchg
mov
push
jl
pushf
cmp
jnp
adcb
and
and
idiv
push
clc
fnstcw
jne
cltd
les
mov
stc
in
cli
and
iret
inc
mov
andl
xor
mov
inc
sti
cmc
mov
mov
dec
out
mov
gs
out
jnp
adcb
dec
loop
push
mov
xor
pop
loop
incl
shlb
adc
cmp
lods
into
mov
xor
push
leave
mov
cmp
xchg
push
enter
mov
popa
add
mov
add
pop
xchg
sub
xor
lahf
arpl
bound
arpl
mov
movsb
cmpsb
sahf
sub
xchg
sti
mov
sbb
mov
mov
and
jp
inc
sbb
adc
xor
outsl
inc
mov
adc
add
shl
and
test
mov
mov
push
adc
inc
cmp
mov
test
add
and
sub
mov
mov
push
jl
daa
fldenv
sahf
ret
imulb
adcl
push
or
mov
adc
fmul
int
fnstsw
int3
lcall
xor
fldcw
ds
sahf
inc
xchg
sbb
mov
jecxz
pop
push
pusha
scas
mov
push
xor
mov
adcb
fbld
loopne
xor
lods
pop
ret
dec
push
movsb
imul
pop
ljmp
sbb
push
and
pop
xchg
test
push
cwtl
and
adc
pop
mov
lcall
or
mov
pop
imul
mulb
inc
data16
fstpl
and
mov
fstl
bound
cltd
pushf
pushf
mov
jns
out
ss
pop
xor
in
lret
or
push
sbb
notl
sub
mov
mov
cwtl
add
fwait
ret
ljmp
mov
and
pop
shlb
sub
stos
cwtl
xor
add
jp
add
cmp
movsb
push
lock
adc
pop
hlt
pop
enter
jge
lret
and
inc
add
mov
and
mov
adc
les
jns
push
daa
mov
lret
push
xchg
in
cmpsb
inc
fcmovnb
int3
test
ds
lahf
shll
cwtl
ss
add
scas
aad
jns
mov
lea
inc
or
subb
sub
mov
test
pop
aas
sbb
es
push
jae
jnp
mov
and
insb
out
push
mov
cmpsb
sub
pop
mov
int3
in
mov
scas
repz
fiaddl
andl
loopne
aas
dec
aas
imul
out
jle
stc
dec
test
clc
and
and
loop
ja
push
inc
add
sbb
insb
cmc
aad
mov
sahf
cmp
sub
loope
test
out
ds
or
ss
jmp
sbb
lahf
inc
and
jp
ret
inc
push
push
adc
cmp
into
jae
xchg
lret
xchg
mov
pmulhuw
sbb
mov
shlb
in
insb
aas
ljmp
dec
jnp
gs
loopne
das
mov
cmc
jg
sbb
sbb
out
clc
mov
call
jmp
sbbl
sbb
add
mov
mov
jae
fistpl
xor
cmp
pop
sbb
loopne
pop
cld
or
add
jns
iret
cmp
mov
out
mov
imul
and
stos
inc
sbbl
push
mov
repnz
xchg
notb
stos
fwait
xor
in
inc
out
arpl
jge
lcall
pop
int3
aas
push
leave
mov
mov
pushf
sti
out
adc
insb
push
adc
or
aam
xor
push
je
or
insb
stos
sub
inc
sbb
pop
xchg
sbb
cwtl
jae
in
push
shll
push
or
orl
mov
push
add
jg
pop
lahf
mov
inc
stos
stc
inc
movsl
shl
push
and
cmp
cltd
push
shll
push
jge
or
cmpsl
test
iret
xchg
sti
jmp
cli
xchg
or
roll
mov
std
ss
pusha
jo
sub
mov
mov
ret
inc
jae
dec
cmc
or
mov
cltd
popa
lcall
xchg
sub
and
or
leave
cmp
or
out
rclb
enter
xchg
inc
xor
inc
mov
imulb
or
das
bnd
orl
pop
movsl
cmovo
mov
jg
les
push
movsb
in
xor
push
ficoms
fisttpl
xor
sub
push
aad
xor
mov
lock
pop
sub
and
dec
les
push
mov
sarl
inc
add
es
mov
jl
shlb
inc
daa
sub
cwtl
mov
js
ja
lock
xor
pop
xor
ret
jp
lods
js
dec
push
add
ds
daa
sbb
mov
mov
test
or
f2xm1
loope
push
xchg
movsl
mov
movsl
adc
cli
iret
pop
out
and
pop
xchg
das
aas
jp
loop
lret
push
sbb
or
mov
bound
ret
add
cmpsl
adc
jle
and
jns
mov
inc
clc
popa
mov
or
cltd
data16
push
jbe
call
ficoml
ljmp
sti
jmp
pop
aaa
jle
jge
sahf
inc
ljmp
out
frstor
pop
pop
dec
jns
add
xchg
mov
add
push
push
addr16
and
ss
xchg
jne
mov
es
jge
rcrl
mov
or
aaa
cmpsb
arpl
fmuls
addr16
movsl
lock
out
fnstenv
inc
js
mov
sahf
add
je
pop
aas
ret
pop
sbb
and
insb
jmp
pop
mov
flds
and
jmp
jo
pushl
loope
push
addb
pop
sahf
jne
xchg
jae
fidivl
mull
sub
jmp
in
cmp
push
cmp
int
xchg
cmpsb
mov
sarb
xchg
sahf
push
jmp
pop
call
lds
repnz
js
out
mov
mov
out
lret
inc
and
adc
dec
lods
mov
inc
inc
and
aad
mov
lret
sbb
mov
aam
rcrl
ret
arpl
roll
or
sbb
jle
es
mov
lea
test
inc
or
cwtl
xchg
pop
addr16
mov
sub
sub
sub
and
lds
jns
fwait
jnp
adc
repz
fwait
push
loop
lahf
loopne
jnp
mov
mov
jne
mov
loopne
cmp
or
pop
sbb
pushf
cmp
xlat
les
in
mov
cmp
loope
xor
push
fists
xor
xor
loopne
cmp
sbb
mov
test
es
push
jae
enter
jae
sti
sub
negb
pop
mov
cmc
imul
mov
add
xchg
mov
dec
arpl
fisubs
leave
jge
mov
ja
cwtl
cmp
jbe
fists
fistps
mov
fidivl
gs
scas
and
push
dec
pop
or
add
imul
pop
pop
insl
loope
add
repz
lods
jmp
mov
pop
mov
lcall
xchg
out
jae
sub
xchg
sbb
insb
je
dec
add
sbb
jmp
call
test
dec
shlb
xchg
mov
outsl
pop
xchg
mov
xlat
cmp
cli
aad
push
dec
push
dec
movsb
insl
lods
mov
pop
pop
scas
push
outsl
cmp
stos
mov
add
mov
and
xor
stos
cmp
mov
mov
cmpl
enter
sbb
jle
mov
insl
gs
repnz
fnsave
stos
add
fadds
les
shrl
lea
arpl
shlb
ret
jmp
and
cmp
or
fstl
fwait
dec
adc
pop
fisubs
mull
xchg
les
jmp
lcall
icebp
ret
arpl
lock
faddl
lret
fldcw
pop
dec
mov
inc
jg
shlb
pop
xchg
cltd
adc
stc
ss
insb
add
cmpb
sub
fs
ret
jb
arpl
xchg
mov
push
inc
cld
push
stc
movsb
sbb
icebp
cmp
jecxz
int
int3
sbb
jno
add
pop
rclb
dec
mov
test
mov
in
mov
pop
push
sbb
push
int
or
out
iret
jmp
mov
sub
cmp
pusha
arpl
mov
pop
xchg
mov
shlb
shll
das
xchg
push
les
enter
sub
jecxz
xlat
dec
lods
cmpsb
sub
adc
xchg
pop
jg
jle
cmpb
out
xor
dec
ss
aam
xor
clc
pop
mov
sbb
js
push
cltd
cli
das
jns
jnp
adc
adc
jl
xchg
pop
sub
ret
out
gs
pop
inc
xchg
loopne
sub
ret
xchg
add
pop
sbb
test
int3
les
cmp
inc
faddp
imul
fsubl
out
pop
mov
lds
fisubl
sub
xor
test
inc
lods
sub
jno,pt
jne
dec
xchg
stc
xchg
xchg
sahf
test
pop
movl
es
aad
or
fstpt
outsb
cmp
push
xor
jle
enter
decl
sub
mov
pushl
lcall
pop
push
aaa
sahf
scas
mov
decl
out
add
out
lret
shlb
dec
ficoml
sub
lods
xor
enter
push
idiv
lods
outsb
sub
scas
outsb
adc
cmp
adc
jl,pt
aad
js
jae
and
pop
out
arpl
or
push
insb
push
pop
mov
out
mov
mov
sbb
sbb
movsb
xchg
pop
out
xlat
addr16
rorb
cli
sub
inc
loope
es
jp
sbb
test
mov
es
or
push
ja
aam
dec
inc
rcll
xor
pop
stc
adc
cwtl
mov
cmpl
add
cmc
cmp
add
aam
pushf
jo
inc
dec
mov
in
das
into
mov
inc
sub
cs
sub
cwtl
jmp
or
sbb
sub
pop
mov
shlb
mov
mov
cwtl
pusha
jge
nop
mov
dec
add
jne
fldcw
mov
dec
ja
push
jle
and
rcrl
neg
sbb
test
frstor
sbb
mov
ja
out
mov
sbb
scas
mov
repnz
jle
rolb
sbb
call
cmp
jo
loop
push
and
mov
sbb
dec
cmp
outsb
divb
lock
inc
cwtl
mov
sub
mov
cmpsl
sbb
pusha
cld
mov
pusha
fdivrl
adc
jnp
pop
ficoml
nop
std
cmp
lods
enter
cs
xor
jp
or
fildll
xor
push
push
lret
enter
pop
aaa
mov
loop
vcmpss
xchg
mov
call
mov
jns
mov
decb
push
xchg
test
sbb
push
add
jg
fxch
dec
or
inc
jecxz
out
adc
cltd
add
xor
inc
sub
fstpt
mov
sub
in
loope
inc
out
jo
xor
sahf
fstl
push
mov
and
add
cmpl
add
mov
mov
mov
jo
shll
roll
add
or
popf
mov
add
jno
in
stos
mov
lds
inc
ret
xbegin
lcall
sbb
out
or
push
cli
push
jne
adc
dec
sti
or
push
aad
mov
pop
data16
mov
leave
das
icebp
and
sub
push
cmp
into
dec
dec
add
mov
jns
adc
iret
rclb
int
repz
shll
xor
test
aad
xchg
xchg
daa
mov
or
mov
imull
dec
popf
cmpb
testb
push
ret
int
jge
jg
popf
outsl
sub
cwtl
cmp
add
mov
jecxz
sbb
pop
mulb
dec
mov
cmp
out
mov
jb
clc
loop
fsubrs
dec
fbld
insb
cld
jl
sarl
push
add
xchg
add
cmpsb
mov
insl
shrb
cld
push
xchg
xor
mov
inc
std
fcmovb
insl
pop
mov
lcall
flds
jbe
and
insb
pop
mov
jne
push
sbb
fdivs
daa
xor
div
adc
in
inc
jge
mov
insb
cmpsb
push
mov
xchg
sub
push
or
sahf
jns
cli
mov
jb
leave
xor
imul
addr16
pop
inc
cli
lret
fwait
or
adc
adc
xchg
and
cmp
cmp
outsb
lods
pop
dec
sahf
aaa
lahf
mov
out
inc
ret
add
or
fcmovnbe
cld
or
mov
jg
pop
mov
and
stos
jecxz
cmp
dec
xor
lods
stc
push
outsl
into
test
in
iret
mov
gs
pop
dec
mov
in
ja
je
pop
ds
scas
dec
push
and
imul
les
stos
popf
jnp
movsl
sbb
ror
sub
push
arpl
jecxz
ja
fldl
mov
ficomps
jns
scas
jecxz,pt
pop
shl
add
pop
leave
and
or
add
mov
pop
shll
incb
and
sti
mov
ret
inc
stos
iret
xor
pop
mov
out
mov
cld
lret
sbb
and
lods
lahf
inc
ss
pushf
inc
aam
fimull
mov
fildl
sbb
fisttpll
sahf
ss
lods
sbb
xor
outsl
cwtl
mov
fistpl
movsl
inc
ret
aam
scas
inc
push
int3
scas
repnz
movsb
inc
or
cmp
ret
jo
and
les
mov
stos
mov
mov
and
xchg
sub
pop
jecxz
or
push
js
and
std
hlt
fldt
mov
outsb
pop
clc
dec
mov
push
pop
mov
les
fwait
sbb
cltd
hlt
adc
adc
add
das
cli
movsb
stos
jg
int
inc
adc
hlt
mov
adc
pop
xor
ja
mov
shr
lock
rcrb
call
inc
and
mov
dec
adc
inc
ja
sbb
fldenv
dec
sahf
pushf
ss
dec
pop
xor
rcrl
add
jmp
inc
jge
mov
fstl
loop
idivb
les
dec
ljmp
ficomps
mov
stc
out
jl
icebp
sbb
repnz
fs
dec
imul
test
xchg
pushl
orb
jl
cltd
mov
shrl
mov
testl
pusha
push
add
repz
mov
sbb
test
rcrl
sahf
loope
xchg
push
jle
lds
xcrypt-ofb
cmpsl
insb
push
push
mov
aaa
cli
adc
in
inc
int
movsl
and
mov
lods
xor
add
add
es
iret
sub
das
in
clc
lods
int3
int
mov
mov
aas
mov
das
and
insl
xlat
das
adc
xor
sub
push
sub
cs
iret
inc
ja
imul
adc
push
loopne
jge
cmpsb
pop
or
std
xor
sub
fistpll
adc
movb
push
add
inc
clc
aas
in
jg
push
outsb
pop
sub
push
mov
inc
mov
jb
pushf
jle
xor
add
xor
mov
adc
sbb
out
fistpll
jmp
push
data16
push
or
popf
cmp
adc
or
loope
pop
stos
mov
fcompl
lea
jne
adc
or
lods
mov
clc
mov
repnz
sub
and
push
fstpt
xor
fcompl
andl
pop
lahf
jg
or
stos
pop
lcall
out
es
pop
insb
out
or
ret
cld
data16
adc
movsb
cmpsb
push
int
data16
dec
inc
push
xchg
fldenv
sub
daa
cmc
fwait
add
subl
stos
xchg
xchg
in
xor
cs
imulb
xchg
sub
cs
pop
dec
das
test
movsb
cmp
mov
dec
negb
sub
adc
push
mov
sbb
ret
xchg
cmova
rcl
leave
ja
inc
mov
xor
std
nop
pop
ffreep
sub
xchg
xchg
gs
xor
xchg
ss
jno
int3
stc
sbb
pushf
repz
cld
subl
dec
mov
jb
jns
mov
inc
dec
add
fcmovb
daa
mov
ja
jl
add
sbb
jns
xlat
inc
push
sub
gs
aaa
fldt
and
pop
ret
test
xchg
aad
cmpsb
mov
in
sbb
std
jnp
xchg
stos
lret
dec
mov
andnps
test
dec
arpl
sub
inc
inc
xchg
cmpsb
stos
sub
in
fistpll
pusha
test
xorl
scas
push
cmp
ret
int3
inc
jg
aas
jg
adc
inc
xchg
addr16
and
call
dec
das
out
lret
inc
mov
add
repnz
in
xchg
loopne
adc
loopne
in
xor
sbb
mov
loopne
loop
xlat
push
sbbl
cmp
pop
aaa
pop
mov
push
mov
insb
push
popf
push
pop
push
push
nop
mov
das
dec
cmp
dec
call
movsb
dec
and
ja
arpl
lods
cli
rcll
jbe
sbb
inc
cmp
and
jp
rclb
lsl
add
xlat
out
and
icebp
mov
lods
stc
sbb
loopne
sbbb
dec
fcomp
jge
sbb
sbb
jae
add
pop
lret
mov
pop
test
pop
jmp
jnp
jge
std
or
mov
outsl
gs
cmpsl
adcb
mov
xor
mov
lods
dec
sub
cld
push
divl
es
cmp
lods
leave
stos
shl
icebp
lock
adc
fisubl
and
sti
loopne
jae
cmp
bound
cmp
sub
les
lods
sarl
dec
or
push
and
movsb
sarb
push
mov
shlb
xor
jne
lods
cltd
dec
shrb
or
stos
pushf
into
add
test
ja
mov
popa
xchg
cs
pop
adc
stos
jmp
jmp
movsl
cmp
and
add
or
cli
aas
xor
ja
ja
mov
cmpsb
sti
and
std
fcmovnu
sub
jnp
push
push
pop
std
out
cmp
mov
pop
or
push
fistps
div
sbb
rcl
cli
lret
lods
push
sbb
bound
pop
mov
xchg
xchg
cwtl
jae
push
out
and
insl
into
inc
call
cmpsb
icebp
sub
mov
mov
out
xlat
js
push
jb
mov
adc
fmuls
mov
pop
aas
in
shl
or
inc
sahf
test
push
out
int
enter
inc
sub
mov
push
mov
cwtl
dec
pop
push
loopne
icebp
mov
push
xorl
inc
push
popf
test
push
out
int
mov
xor
push
and
es
repnz
jl
xchg
cmp
push
push
xchg
in
and
inc
inc
shrb
push
mov
push
loop
mov
pushf
push
xor
lods
imul
jns
push
push
mov
cs
stc
push
mov
sbb
pop
add
pop
pop
repz
xchg
loope
std
outsl
mov
mov
shlb
adc
insb
and
xchg
nop
not
prefetchw
or
ja
mov
bound
and
mov
or
bswap
mov
cs
sub
xor
ljmp
dec
gs
stc
loopne
pusha
pop
sub
shlb
imul
out
mov
imulb
es
adc
test
std
loope
jmp
orb
or
push
xchg
sub
inc
jmp
dec
cltd
mov
pushf
int
mov
jge
insl
add
lahf
dec
jl
shll
xor
sbb
cmp
jo
out
pop
mov
dec
lods
lds
sub
pop
push
xlat
inc
pushf
mov
std
mov
dec
jmp
push
mov
jl
jg
dec
mov
push
pop
inc
cmp
pop
lock
test
push
jno
push
imul
decb
xchg
pop
decb
sahf
and
lea
adc
mov
fildll
inc
xchg
sub
lock
clc
mov
push
aaa
dec
xlat
shrb
nop
push
push
les
inc
jo
pusha
lea
and
movsl
adc
popf
mov
into
add
daa
pop
stc
scas
shr
xchg
fs
ret
cwtl
dec
fidivrl
lods
sbb
movsl
pushf
aam
sbb
jecxz
mov
andb
rep
push
push
and
dec
mov
inc
aad
icebp
aas
mov
ss
jl
xor
out
jno
mov
mov
mov
inc
jge
out
xor
fdivr
test
lds
lret
dec
ss
inc
fwait
sbb
lahf
call
bound
cmp
mov
pop
pop
repnz
sti
fwait
mov
inc
pop
mov
les
mov
dec
mov
aad
mov
or
jge
les
jbe
pusha
mov
jl
cli
dec
addl
ds
mov
test
xor
mov
mov
outsb
pop
and
sub
ret
cmp
clc
jl
and
in
sahf
in
jne
test
cltd
mov
inc
mov
jmp
mov
add
pop
cmp
dec
jg
inc
in
mov
andl
xchg
lock
aad
push
inc
adcl
fld
cld
or
shrb
push
xor
fstl
sub
in
nop
push
xchg
mov
aaa
ltr
stos
and
sbb
sti
jno
loopne
cmp
jns
mov
dec
jge
lods
xchg
add
js
mov
ds
loope
pop
loop
mov
sub
gs
ss
cld
adc
push
divb
aas
or
cmc
outsl
xchg
ss
dec
cmp
iret
sbb
or
sti
cmp
push
pop
repz
jnp
ja
lret
popl
andl
rcl
sbb
in
imull
adc
outsl
dec
push
mov
fwait
xchg
jp
xchg
andl
out
jb
add
aas
imul
cmpsb
pop
lahf
inc
mov
in
idiv
ret
fwait
mov
ds
fldl2e
lahf
add
cs
sub
in
inc
mov
nop
sbb
or
mov
xchg
arpl
inc
cmc
shlb
jo
xchg
ss
xchg
addr16
test
lods
mov
std
pop
ds
cmp
fmul
mov
pop
xchg
sbb
push
enter
sbb
add
push
add
jp
cwtl
adc
leave
lock
test
inc
inc
aam
xchg
aad
push
push
lods
xchg
mov
mov
rcrl
sbb
addl
xlat
cwtl
pusha
icebp
stc
push
mov
out
jl
popl
insb
cmp
xlat
mov
push
fisubl
inc
leave
jp
outsb
icebp
pusha
das
hlt
imul
fnstsw
xchg
mov
ret
xlat
mov
adc
cmp
mov
out
out
aad
arpl
jbe
push
dec
mov
dec
xor
xchg
mov
inc
push
push
mov
add
aam
add
mov
xchg
aad
pop
rcr
mov
dec
mov
lods
jmp
ds
decb
mov
xchg
movsl
fidivs
push
push
mov
xchg
xor
sar
or
aaa
stos
jo
repz
sbbb
out
cltd
in
ljmp
imul
mov
ds
shr
into
push
jne
push
dec
pusha
dec
scas
jae
sbb
fdivrl
mov
outsb
mov
into
ss
ret
cmp
and
adc
test
mov
lret
jp
and
mov
out
aam
mov
popa
rorl
xor
dec
loopew
add
aad
push
xchg
mov
push
cmp
mov
mov
cltd
xchg
jnp
cmpsb
inc
jmp
xor
lcall
scas
add
mov
jns
fists
pop
push
arpl
rclb
sarl
outsb
dec
hlt
and
neg
fwait
push
xor
repz
xchg
notl
repnz
push
shll
loopne
mov
dec
lods
lock
mov
mov
gs
sbb
push
or
push
jae
out
mov
out
or
mov
adc
test
mov
sbb
mov
xchg
xor
dec
push
daa
sbb
jmp
outsb
dec
inc
mov
fldcw
xchg
and
mov
cmp
aad
and
loope
rcrb
push
and
mov
stos
add
divl
sbb
lcall
xchg
mov
cld
ss
cltd
popa
push
out
movsl
push
add
push
add
ds
cwtl
insl
sub
inc
in
out
movsb
fcmove
inc
adc
cmp
cmp
add
ss
xchg
cmp
cmc
mov
xor
out
pop
aam
mov
push
xchg
mov
lock
inc
mov
aad
mov
xchg
je
ret
rolb
cmc
idivb
dec
into
jle
test
loopne
add
jo
jbe
mov
push
push
pop
inc
movsl
or
pop
cmpsb
int
enter
aas
flds
dec
loope
jne
ret
imul
mov
ds
or
push
and
das
add
out
icebp
cli
mov
cs
push
stos
sub
jecxz
mov
dec
cmp
into
imul
pushf
push
ja
ret
pop
ret
mov
pop
movsb
xchg
ret
push
push
fistpl
insl
push
cmp
jp
push
or
cmp
loop
jg
stos
mov
pusha
testl
pop
idivl
dec
cmpsb
xchg
dec
mov
out
xchg
test
and
shll
inc
enter
sub
or
dec
mov
cltd
aad
lea
xchg
aas
mov
mov
xor
xor
ret
enter
fsubrs
lds
dec
adc
push
pop
ja
sub
fsubs
ds
inc
cwtl
pusha
shrb
rcrl
ds
pop
mov
and
popf
popf
xchg
jl
xlat
push
test
lods
es
loop
inc
jb
fldenv
cmp
xor
and
dec
in
and
fsubrs
xchg
out
jne
sbb
adc
fisubrs
jl
dec
inc
repz
add
popa
insl
fldenv
xchg
inc
adc
jae
adc
mov
in
or
scas
push
push
mov
out
mov
test
add
dec
sbb
mov
iret
dec
and
lret
mov
mov
mov
out
rol
call
mov
push
jmp
jno
imul
mov
xchg
push
dec
mov
insb
icebp
jmp
mov
dec
jo
adc
popf
and
add
popf
and
xor
mov
js
xor
lcall
and
xchg
xchg
call
dec
popl
les
jb
roll
or
sub
into
lea
repnz
push
cmp
xor
or
inc
adcl
lcall
xchg
cmpsl
testl
decb
add
push
aas
out
push
mov
sti
leave
jb
ror
lahf
dec
add
scas
ret
out
dec
in
clc
mov
outsb
pop
and
jmp
lahf
fcomi
das
bound
pop
js
movsb
mov
pop
pushf
sub
inc
jo
jp
xchg
mov
rcl
ja
mov
lahf
faddl
dec
mov
aad
pusha
lret
ds
outsl
dec
shll
sti
push
or
mov
xchg
in
dec
test
ret
loopne
call
jb
loope
in
shl
and
add
mov
lcall
nop
mov
cs
je
or
or
movsl
scas
jle
jl
insl
inc
popa
dec
inc
call
scas
cltd
lahf
cmpsl
bound
cmc
dec
xchg
mov
xchg
add
sar
scas
inc
mov
mov
add
dec
inc
mov
xchg
sub
add
sub
cmpsl
and
cli
inc
mov
xchg
xchg
xchg
test
mov
adc
data16
push
xchg
out
fcos
js
mov
cld
mov
gs
lahf
sahf
aad
aas
push
pop
xor
adc
pop
pop
iret
dec
add
rclb
js
xchg
cmp
cmpb
shlb
in
lock
cmpsl
sub
and
fmul
xchg
xchg
jle
dec
loope
mov
rcrl
repz
out
adc
insb
cmp
ffreep
rcrl
jl
jmp
fs
cmpsl
out
xor
andl
sarb
xor
sbb
and
inc
mov
pushf
test
jne
outsb
add
xor
std
leave
mov
pop
dec
and
push
dec
xor
repz
pushf
sarl
xor
sub
fsubr
roll
pop
pop
call
sbb
push
loopne
adc
sahf
subb
dec
pop
push
incl
add
jno
gs
bswap
fcompl
jb
stos
adc
inc
imul
clc
sahf
stos
aad
xchg
jno
mov
dec
sub
imul
mov
fsubrs
adc
lea
outsl
insb
xlat
stc
lods
shr
mov
mov
or
in
int
ja
or
jg
mov
push
sbb
es
cmp
aad
xor
icebp
int3
imul
lods
fisubrl
in
push
in
jecxz
ljmp
imul
pop
sub
dec
ficoml
mov
cmpb
call
adc
nop
movsb
mov
dec
sahf
xchg
inc
sbb
mov
xchg
sbb
arpl
aad
pop
mov
dec
cmpsl
mov
sub
or
push
pop
aaa
fldl
adc
dec
insb
pop
jno
sub
cltd
scas
test
or
jae
xor
out
add
xlat
mov
or
and
or
push
add
jg
adc
push
dec
and
xchg
adc
jo
xchg
add
sub
andl
in
xchg
dec
jmp
int3
rolb
shr
jae
jne
mov
sbb
sbb
int3
mov
inc
outsl
popf
decl
push
repnz
inc
loop
adc
fwait
pop
pop
scas
adc
repz
leave
mov
jp
loopne
xor
loope
and
lods
push
cmpsl
inc
out
push
popf
test
je
stos
xlat
adc
mov
push
xchg
xor
pushw
and
mov
int3
pop
out
dec
rclb
lock
sub
fldcw
add
ret
cwtl
jbe
or
mov
inc
cmc
insl
dec
inc
aas
mov
mov
sarl
ret
dec
xchg
hlt
daa
xor
add
ror
adcl
mov
mov
int3
inc
out
repz
add
adc
mov
mov
cs
outsb
scas
push
loop
arpl
push
cmp
mov
jbe
mov
in
mov
adc
push
and
cs
xor
and
rcrl
outsl
movsl
int
fildll
mov
xchg
es
testl
xlat
pop
in
fimuls
mov
or
sub
std
xchg
lret
insl
push
push
pop
movsb
stos
add
xor
gs
push
dec
inc
or
fnstcw
or
jno
leave
stos
andl
mov
loop
insl
xor
in
sub
in
inc
fstl
mov
xchg
lods
mov
mov
cmp
fldenv
mov
insl
ds
mov
xchg
xor
inc
int
int3
clc
push
or
movsl
xchg
push
push
mov
push
cmc
rcrb
xchg
push
arpl
add
movsl
out
nop
call
sub
pop
arpl
xchg
cmp
push
xor
mov
imul
addr16
cli
mov
aaa
aas
xor
adc
pop
scas
push
sarl
hlt
jl
stos
sbb
cmp
aaa
insb
imul
pop
inc
test
ds
push
cmc
mov
cmpl
lret
loope
filds
cmp
movsb
les
mov
mov
out
jne
lds
insl
vorpd
movsl
xchg
mov
icebp
adc
push
int3
lahf
outsl
add
orl
dec
in
sti
cli
xchg
test
xchg
aaa
cmp
shrb
sbb
adc
mov
fwait
pop
push
fsubrs
cmp
mov
mov
jbe
mov
test
add
mov
dec
out
and
ljmp
loopne
jge
mov
mov
mov
add
dec
pop
fsts
in
jmp
aam
pusha
adc
xchg
stos
in
insl
xchg
arpl
cmp
ds
enter
mov
add
test
push
ds
and
cmp
js
push
jbe
adc
imul
xchg
xor
out
xor
shl
mov
cld
in
dec
clc
outsb
popa
dec
sahf
pushf
sbb
mov
sub
cmp
mov
or
stos
and
add
xchg
imul
int3
out
bound
inc
sub
sahf
cmp
jne
or
push
and
or
mov
jle
push
insb
gs
cwtl
fs
push
xchg
or
cld
adc
fiaddl
insl
inc
stos
lret
fwait
xor
cs
push
rcr
pop
cmp
mov
sbb
insb
aad
or
xchg
jmp
enter
sbb
inc
sbb
hlt
push
lahf
add
jae
cmpsl
dec
popf
call
pushf
or
rorb
or
pusha
fidivrl
xor
bound
cmpsl
js
bound
sti
movups
mov
xor
mov
inc
lahf
lods
mov
xchg
popa
sub
xchg
cs
mov
shll
cmpb
or
mov
cmp
add
mov
jo
sahf
jmp
pushf
jnp
mov
pusha
clc
lods
scas
xor
insb
jg
jno
jae
pop
inc
popa
push
out
aam
add
in
rcll
and
mov
jno
mov
pop
icebp
outsb
lcall
push
pop
aas
out
incb
stos
xchg
nop
mov
mov
fsubr
sbb
mov
push
pop
rolb
xor
repz
push
jmp
das
inc
fidivs
das
add
or
mov
mov
aam
jp
adc
movsb
and
mov
stos
addr16
orb
lods
aad
adc
aaa
push
dec
aam
xor
insb
sahf
int
mov
push
bsr
std
fwait
addr16
add
icebp
fidivl
in
fldenv
cmpsl
inc
test
inc
and
cmpsb
xchg
lds
inc
mov
mov
mov
lsl
xor
in
cwtl
imul
jbe
subl
movsl
fildll
and
xchg
fucom
stc
repz
int3
pop
nop
decb
int3
rol
cwtl
mov
sbb
xlat
mull
sbb
enter
daa
cmp
dec
int
mov
or
aam
and
lods
in
add
stos
iret
xor
mov
dec
lret
dec
loop
cmpsb
mov
enter
rcll
jp
or
loop
ja
in
fadds
add
push
pusha
inc
dec
inc
jnp
scas
push
dec
imul
sbb
loopne
jne
ret
in
sahf
fistpl
cmp
mov
mov
pop
and
lods
std
lea
out
sbb
rcrl
push
std
and
cs
sarb
fisttps
mov
xchg
ja
sub
mov
sub
into
jo
les
mov
stos
inc
fs
rorb
ret
or
addr16
add
icebp
mov
sti
cs
adc
inc
sysenter
into
imul
xchg
idivb
sahf
lea
ret
std
outsb
jnp
test
dec
cld
lods
cwtl
testb
or
dec
je
ljmp
mov
test
imul
dec
adc
enter
xor
popa
cmp
or
icebp
shr
out
into
pop
push
mov
es
pop
loopne
add
xchg
inc
or
and
decb
out
add
inc
pop
sbb
mov
cld
stos
popa
push
leave
lods
sub
addl
lods
test
xchg
push
call
mov
leave
pushf
mov
je
jns
cs
clc
test
add
mov
mov
adc
cmp
andb
pop
jmp
enter
popa
adc
in
and
mov
les
xor
jl
and
notl
xchg
sbb
mov
adc
ja
lahf
lcall
movsb
xchg
imul
xor
cmp
pop
mov
xchg
xchg
mov
test
fldenv
fisubrl
xchg
mov
lea
ret
mov
jge
sti
repz
scas
cmp
or
jo
pop
adc
repnz
divl
inc
and
xchg
jg
cmpsb
shrl
dec
jge
bnd
sbb
mov
sbb
adc
push
imul
or
or
sbb
jle
std
cmp
mov
cmp
sub
xlat
dec
lcall
dec
mov
testb
subl
cmp
and
int
fisubrs
sbb
leave
or
push
jmp
dec
sahf
lock
xchg
aam
mov
mov
jo
das
jmp
fs
jmp
testb
popa
hlt
mov
mov
fmul
daa
or
cmp
int
add
xchg
xor
lcall
lea
pusha
sub
adc
cmp
or
mov
movsl
repz
loope
les
xchg
push
lods
xor
stos
test
sbb
outsl
icebp
push
rorl
cmp
add
mov
inc
jns
ret
mov
push
scas
xor
and
ja
xchg
xor
jae
jp
cmp
mov
popf
push
sub
aad
jae
clc
in
cltd
insl
insb
les
test
ds
xor
adc
stos
in
xchg
rcr
int
jmp
popa
fildl
push
mov
mov
imul
cmp
leave
or
sbb
lds
jmp
test
ds
lret
or
pop
aaa
hlt
add
cltd
dec
fcmovu
movsb
enter
mov
popa
ret
or
mov
mov
lcall
and
adc
enter
cltd
push
jp
dec
ljmp
mov
fcomps
scas
in
call
cmp
ds
jmp
cld
inc
js
fsubp
sbb
jae
sbb
cmp
xchg
cld
xor
fwait
sbb
inc
aam
ja
call
mov
xor
jp
test
mov
andb
sbb
mov
mov
mov
lcall
cmp
lcall
jp
inc
push
xchg
lea
jmp
dec
jmp
sarl
pop
fwait
mov
add
dec
xlat
clc
hlt
mov
mov
add
xchg
adcb
pop
fs
hlt
idivl
lcall
add
push
movb
es
loop
xor
std
dec
sub
loop
xchg
xor
jp
out
or
cmp
and
jnp
in
mov
aas
sub
pop
pushf
pop
loope
adc
mov
pop
arpl
xor
in
sbb
inc
mov
mov
cmp
and
pop
xchg
lret
inc
jg
dec
cltd
mov
arpl
negl
lods
rclb
nop
aad
mov
xor
insl
call
sbb
call
adc
bound
cmp
hlt
imul
mov
xor
xor
lds
insb
arpl
mov
jbe
add
adc
mov
or
adc
inc
sub
and
out
push
mov
idivl
fdivrs
xchg
stos
negl
ds
xchg
sub
idivl
call
fistpll
mov
loop
icebp
outsb
pop
cs
insb
xor
jl
nop
push
pop
sub
mov
pop
int3
xchg
daa
stc
divl
in
push
call
out
push
out
pop
sub
repnz
sub
adc
dec
pop
in
jg
test
out
out
leave
fists
clc
out
jb
jo
adc
imul
loopne
mov
mov
pushf
inc
in
sbb
popf
mov
dec
mov
jbe
mov
mov
pop
and
scas
pop
cmpsb
mov
and
lods
or
jne
dec
test
add
pop
repnz
inc
call
lcall
into
xor
sbb
es
and
add
pop
dec
cltd
inc
push
add
decb
inc
cld
xor
add
push
fwait
dec
out
or
cli
cmp
xor
jns
sbb
fisubrs
es
sarl
jns
dec
ss
dec
clc
icebp
clc
insl
shlb
and
push
pop
mov
mov
aaa
sahf
push
lds
push
int
jo
xchg
xchg
pop
xchg
xchg
aad
dec
leave
testl
je
xor
sbb
gs
outsl
xor
sub
test
mov
fnstsw
xchg
cmpl
testl
popa
cltd
and
shll
sarb
xchg
ss
mov
mov
or
scas
imul
mov
mov
out
loopne
push
fimuls
sub
int
pop
jns
addr16
insb
notb
mov
movsl
ret
mov
stos
cli
scas
inc
adc
sub
inc
subb
ds
mov
cmp
pop
inc
or
mov
adc
stos
repnz
sbb
jne
push
aaa
lcall
mov
fdivrs
ficompl
cmc
xchg
jle
push
mov
cmp
xchg
push
clc
mov
iret
adc
pop
fucomi
and
cmp
fs
hlt
mov
adc
adc
lea
mov
jmp
add
and
enter
push
stos
sbb
push
sbb
dec
in
xlat
pop
movsl
add
push
adc
lods
sahf
insl
mov
push
xchg
iret
ret
mov
push
or
xchg
cmp
arpl
cmp
sbbl
call
lret
aaa
ret
jp
xor
rclb
xchg
sbb
xchg
inc
and
out
filds
pop
mov
mov
and
ss
xchg
jp
icebp
jg
sbb
iret
dec
xchg
or
xor
cmp
jne
cmp
test
scas
aad
hlt
push
xor
loopne
inc
mov
push
pushf
and
sbb
sub
inc
xchg
out
test
test
iret
pushf
mov
adc
clc
or
int
mov
push
test
jl
adc
cmp
std
xchg
dec
xor
jne
jo
enter
fldt
cmc
aaa
shll
cmp
mov
mov
push
dec
scas
adc
les
cmc
scas
jmp
or
lea
shll
popa
fiadds
pop
shr
out
jge
lcall
mov
xlat
cmp
pop
push
cmp
dec
mov
and
xlat
fucomi
cmp
cmp
sub
mov
xchg
sub
add
fimuls
mov
sbbb
push
cmp
or
xchg
incl
xlat
in
and
in
jb
fists
push
pop
sti
outsl
rorl
lods
iret
iretw
lds
cmp
push
ret
ds
shll
repnz
fistpl
add
mov
adc
mov
fidivrl
imull
repnz
xor
call
adc
pop
shrb
xchg
mov
push
idivl
out
xchg
rorl
enter
mov
sub
insl
dec
pop
inc
ror
jo
jnp
cld
movsb
cmpsb
jl
mov
repz
popf
dec
lea
mov
mov
in
mov
mov
pop
mov
outsb
leave
notl
and
clc
out
js
cmp
fmuls
adc
push
fxam
lds
cmp
std
mov
bound
negl
sub
xchg
mov
xlat
ret
mov
dec
jnp
push
scas
jo
ficoms
dec
jle
push
fwait
mulb
sbb
xor
decb
popw
push
lret
add
cmp
adc
or
int3
add
clc
xor
push
cmp
movsb
ljmp
cmc
enter
fldenv
jge
and
mov
mov
pop
movsl
scas
scas
and
jp
pushf
out
xor
fdivr
bound
test
pop
lahf
loope
hlt
inc
xchg
mov
mov
push
mov
dec
or
jne
cmp
inc
stos
or
push
xorb
jmp
and
lods
ljmp
adc
cli
mov
add
inc
lret
sbb
cmp
jae
fst
add
xor
inc
add
push
out
and
jle
mov
shl
pop
fwait
orl
in
jo
imul
dec
mov
cmp
setle
mov
fcmovu
cld
mov
nop
mov
adc
ror
push
ss
je
cmpsb
aad
jl
add
lcall
inc
fldl2e
je
inc
push
ds
mov
cmp
stc
call
stos
lods
sub
pusha
adc
stc
cmp
lahf
into
dec
sbb
shl
lock
xor
mov
add
or
addr16
xchg
lods
sbb
add
adc
aas
mov
icebp
rcrb
lret
pusha
xor
dec
push
jp
lods
sub
push
es
arpl
daa
jg
mov
mov
in
daa
stos
push
mov
and
dec
out
dec
daa
mov
aam
insl
mov
dec
outsw
jno
cli
out
shrl
lea
mov
std
push
scas
pushf
fcomi
test
movsl
pop
test
loope
push
js
es
repz
mov
addr16
aad
push
sub
adc
aam
sbb
mov
jb
loop
shll
cs
jbe
adc
orb
mov
pop
repnz
fs
loope
stc
stos
or
popf
and
fisttpl
pop
inc
mov
into
ljmp
loopne
xor
or
cmp
jg
fisubs
ss
ljmp
add
cwtl
inc
pop
cmp
pop
int
outsl
fwait
cltd
lahf
cs
mov
nop
inc
ret
sbb
fdiv
rdmsr
and
iret
inc
ret
lods
out
push
nop
push
and
jmp
lcall
fsubl
mov
mov
xchg
dec
jb
data16
sahf
insb
insl
lahf
mov
and
sbb
ret
sub
sti
pushf
sub
in
jle
mov
jecxz
mov
and
jg
andl
lock
shll
push
rcrl
stos
cmp
pop
mov
sbb
xchg
mov
push
fcomip
dec
cmp
into
movsb
jae
push
and
sbb
mov
xchg
or
inc
sahf
push
or
xor
jmp
push
sub
mov
gs
dec
xchg
lea
std
or
test
filds
sub
xchg
scas
adc
ja
jae
inc
mov
lods
xchg
mov
xchg
sbb
rolb
mov
xchg
minps
ja
daa
cmp
pop
push
mov
inc
xabort
jl
pushf
dec
adc
xor
in
addr16
push
jge
inc
or
pop
dec
jecxz,pt
pushf
lock
add
adc
lret
mov
dec
icebp
test
jne
jnp
pop
aaa
jle
pop
enter
adc
lahf
mov
cltd
insl
rolb
dec
stc
push
inc
xchg
mov
push
es
imull
mov
dec
rcll
sbb
or
icebp
or
dec
push
jne
add
jl
jecxz
adc
enter
xor
jns
jecxz
mov
xor
pop
cmpsb
ss
pcmpeqb
sbb
sbb
sbb
std
fcoml
pop
imul
fdivrs
pop
mov
mov
lahf
loop
dec
jno
in
xor
and
stc
dec
in
fsubs
add
or
repnz
sbb
and
fisubl
xor
dec
ss
pusha
xor
in
push
arpl
outsb
gs
out
cmp
imul
mov
dec
rcr
sub
test
cmp
dec
fxch
std
jnp
mov
add
aaa
rol
cmp
push
jno
int3
stos
cli
addr16
scas
fildl
andl
out
jnp
mov
push
cwtl
mov
sbb
cli
test
in
pusha
or
jno
test
lods
fldl
mov
rol
sbb
aaa
in
iret
xor
aas
sbb
insl
jo
add
idivl
dec
mov
xchg
insl
jae
or
pop
movsl
adc
cmpsb
in
jo
je
jle
hlt
test
pop
inc
pop
mov
pop
inc
mov
stos
sub
lds
sahf
mov
push
out
xchg
dec
sahf
mov
daa
movsb
ficompl
cltd
jmp
movsl
ret
subl
inc
cmp
sbb
pop
shrb
dec
enter
sbb
pop
into
lahf
lret
and
inc
pop
pop
mov
loop
fmul
inc
jno
sbb
inc
ss
stos
sub
sti
jmp
fwait
cmp
aas
xchg
es
adc
aad
lret
sub
adc
sub
lret
xchg
arpl
cmp
pop
in
jnp
jp
notl
sub
data16
sbb
cmp
outsl
lods
lods
divl
xor
in
mov
sub
outsl
or
out
inc
add
es
cmpsb
loopne
mov
test
fprem1
jne
cmpsb
dec
mov
lea
add
sbb
mov
lret
fadds
xchg
inc
add
sub
jns
cltd
xchg
xchg
lret
insb
jb
push
and
cmp
loop
sbb
scas
pushf
into
int
push
add
pushf
outsb
test
jg
and
ss
enter
mov
jp
and
jo
out
inc
insb
pop
jne
adc
roll
pop
into
and
push
cmp
mov
sbb
cltd
jbe
pop
push
dec
leave
stos
sti
cmp
sahf
jo
xlat
inc
mov
bound
pushf
in
lret
add
mov
mov
fs
sub
push
hlt
mov
add
sbb
sub
loopne
lods
xor
stos
or
xor
leave
popa
popa
lahf
pop
mov
and
jae
push
repnz
inc
jg
cmp
cmp
ret
repnz
setae
push
outsw
adc
ljmp
out
in
stc
push
dec
mov
cmp
mov
mov
stc
mov
xchg
mov
sub
mov
fcomip
mov
mov
add
pop
pop
add
mov
cltd
cmp
ret
aad
shll
jo
adc
aaa
loope
stos
xchg
xor
int3
pop
fwait
xor
clc
jno
xchg
cmc
lret
cmp
sbb
pop
fisubl
inc
out
push
inc
jle
mov
mov
or
stos
mov
jnp
sbb
mov
faddl
iret
bound
adc
repnz
adc
xchg
cmpsb
hlt
fcomps
in
sub
pop
cli
test
loope
ja
insb
pop
mov
leave
add
sub
pop
fdiv
insl
push
cltd
movsl
fsubl
sub
test
iret
out
test
push
js
cmp
lcall
or
sbb
mov
pop
mov
cmp
sbb
xor
cmpl
inc
mov
icebp
adc
lea
fadds
cmp
inc
movsb
cmc
push
ficoms
and
sahf
leave
or
inc
or
push
fiadds
lds
mov
dec
lock
adc
lds
test
jno
pop
or
sbb
lea
sub
popa
arpl
dec
pop
fucom
inc
adc
add
push
lcall
fbld
inc
and
mov
mov
or
mov
add
jae
scas
xchg
mov
enter
xor
sub
insb
dec
mov
stos
add
xor
inc
push
ss
sbbb
xor
push
mov
push
testb
mov
mov
xor
es
adc
pushf
loope
or
popf
stc
fs
test
jecxz
dec
cmc
jae
push
and
ljmp
or
mov
dec
dec
mov
xlat
mov
cld
std
mov
sbb
mov
mov
aas
sarl
fwait
cmpsl
jae
scas
sbb
pop
int3
jne
and
dec
stc
or
pop
andps
xbegin
push
in
add
push
mov
mov
mov
insl
mov
enter
rol
and
mov
notb
stos
movsl
cld
xchg
iret
sbb
mov
cmp
push
push
insb
sub
push
rolb
mov
in
int
rcrb
mov
pop
adc
jecxz
divl
sbb
das
add
cmp
cli
add
sarl
cmp
rorb
fistpll
mov
clc
sbb
pop
dec
or
pop
jo
mov
fnsave
cmpsb
imulb
shrb
mov
shr
lret
aaa
jo
sbb
cld
das
push
mov
pop
les
fwait
dec
cmc
fwait
rcrl
xlat
cli
jne
xor
in
imul
jmp
fucomi
mov
cmp
sbb
lds
ret
inc
pop
mov
xor
out
xor
data16
sbb
mov
shlb
ss
cli
loop
outsl
mov
push
push
xor
lret
sbb
outsb
push
mov
es
sbb
negl
and
gs
leave
mov
mov
push
mov
sti
mov
pop
mov
adcl
fwait
lret
push
outsl
sub
imul
imul
adc
inc
outsl
test
and
push
xlat
xchg
inc
dec
push
sbb
xchg
adc
adc
mov
cmp
in
out
pop
daa
push
mov
adc
xchg
lods
daa
sub
xchg
mov
lahf
adc
jg
out
cmp
idiv
andl
add
mov
and
or
ret
mov
mov
and
sahf
inc
mov
out
out
sub
lods
mov
inc
push
dec
sbb
push
mov
push
into
out
es
fnsave
out
repz
stos
aaa
pmulhw
fidivl
stc
jle
aas
sbb
sbb
sub
sub
or
aad
cwtl
in
out
jbe
adc
das
pop
arpl
in
in
loop
cmp
xchg
xor
fldl
xchg
into
dec
stos
adc
lds
imul
inc
mov
xchg
cmp
jo
cmpsb
dec
mov
push
dec
sub
push
pop
xchg
pop
test
insl
nop
gs
push
adc
sub
out
and
adc
leave
les
jb
push
dec
adc
fs
hlt
adc
int
and
pop
movsl
in
dec
and
testb
push
cmpsl
dec
rcr
lods
add
pop
lods
mov
orb
neg
in
sub
lds
int3
mov
mov
or
pop
outsl
mov
outsb
fcmovnbe
lret
out
in
mov
int3
lret
sbb
jp
aad
lcall
jbe
sti
push
aam
xchg
xor
sub
fcomi
ret
ffreep
push
out
add
es
xor
add
jb
mov
add
cmp
push
rcrb
mov
or
xor
jmp
cs
fcomps
dec
ja
add
mov
ds
aas
out
jge
push
jae
mov
out
push
adc
xor
push
lods
add
lret
dec
leave
add
jecxz
push
lea
cli
push
mov
mov
push
pop
data16
mov
test
mov
mov
sahf
mov
sub
cmp
sub
push
inc
xchg
out
sub
xor
mov
jnp
push
mov
cmpsb
cld
iret
lea
sahf
add
idivb
cmpb
rcll
ret
iret
cltd
jg
xchg
mov
stos
xchg
in
test
inc
xchg
mov
lds
rcrb
mov
call
imul
dec
scas
mov
sbb
cmpsb
xchg
mov
cld
fisubs
xor
cmp
cmp
push
or
inc
push
inc
sub
test
fldenv
and
add
mov
xor
pusha
sarl
subl
ds
or
cmc
into
lret
push
mov
addb
scas
mov
jmp
rorl
adc
jmp
add
mov
loop
ss
push
aas
jge
or
dec
xchg
into
hlt
mov
sbb
into
sbb
in
push
fcmovb
jg
arpl
jl
shrb
lds
push
or
into
sub
sbb
outsb
sti
repnz
cmp
adc
mov
jb
popl
repnz
aad
pop
xor
scas
insb
jmp
in
dec
rclb
outsb
mov
andb
and
mov
or
pop
outsb
xchg
repz
nop
mov
push
stos
adc
loopne
insl
pop
push
or
hlt
into
dec
add
out
and
in
andl
jbe
push
icebp
and
data16
dec
in
mov
in
insb
mov
test
mov
loopne
mov
jmp
into
pushf
xor
outsb
cmovnp
inc
and
adcl
int
out
mov
lea
fistps
dec
stc
sbb
mov
roll
sub
jmp
mov
inc
xor
cmc
in
fs
stos
and
and
stos
inc
dec
jecxz
cld
push
sbb
shlb
inc
ret
aas
jp
sarb
xor
test
inc
hlt
mov
iret
into
or
xor
fiadds
popl
inc
in
add
into
jns
mov
dec
shll
mov
lret
cmp
pop
lds
mov
cmovb
cmp
out
push
push
cmp
push
in
add
repnz
push
mov
inc
je
or
and
dec
cmp
mov
push
mov
mov
push
aad
sbb
xor
jns
test
and
rcrb
push
push
cmp
cmp
xchg
js
mov
add
leave
push
cmc
out
stos
jne
jns
push
lock
std
and
aad
mov
test
xor
and
dec
cwtl
jne
mov
mov
sub
into
add
ss
dec
sbb
aad
test
iret
or
or
leave
mov
mov
inc
in
mov
inc
jnp
popa
mov
jmp
add
aad
int3
jl
adc
cmp
or
aaa
push
movsb
push
int3
out
fwait
push
mov
ja
imul
mov
jne
and
sbb
jecxz
add
xchg
dec
inc
jmp
pop
inc
sbb
mov
call
movsb
shll
push
dec
in
icebp
dec
mov
int
gs
xor
iret
das
mov
ret
or
dec
loop
xor
adc
push
aas
gs
mov
mov
and
stc
inc
pushf
stos
test
pushf
inc
cmp
shll
jns
pop
push
lds
out
nop
rcll
fwait
test
adc
in
pop
cmp
xor
sbb
mov
sbb
push
stos
xorl
adc
arpl
cmp
mov
cs
std
pop
and
mov
mov
jne
movsl
enter
outsb
sbb
push
fwait
or
push
dec
xchg
in
mov
mov
fmuls
jne
sbb
pop
jns
inc
dec
shll
adc
das
sbb
daa
loope
jg
push
push
daa
push
aad
sub
pop
lods
add
sub
inc
add
jns
jae
dec
lock
or
inc
push
stos
push
sti
xor
insb
push
adc
dec
dec
sahf
cmp
xchg
arpl
add
inc
add
ret
sbbl
imul
or
jmp
lock
rcl
outsl
add
mov
out
add
or
shl
imul
lods
popf
imul
inc
dec
imul
add
adc
mov
jp
rdpmc
inc
mov
loope
lds
dec
cmp
inc
sub
or
pop
sbb
fcmovnb
and
jns
lcall
test
out
repz
nop
mov
sbb
gs
mov
mov
pushf
sbb
mov
adc
in
sub
xchg
in
nop
cmp
push
icebp
mov
adc
int3
imul
and
cmp
xchg
sbb
inc
push
nop
xlat
xchg
xor
test
cwtl
popl
or
test
mov
pop
sbb
cld
lret
cli
cli
adc
dec
insl
idivb
mov
sub
pop
rcll
mov
and
test
jb
xorb
jb
outsl
push
mov
mov
int3
push
fcomip
xchg
adc
std
ljmp
dec
push
or
movsl
cmp
insl
pop
xor
xlat
adc
mul
dec
mov
subl
dec
jb
movsl
or
sub
rol
fisttps
mov
cmc
push
sbb
aad
mov
iret
lret
sbb
idivl
add
outsl
xlat
inc
mov
jbe
loopne
pop
inc
sbb
inc
sti
repz
pop
and
js
xchg
jbe
sets
sarl
ds
or
stc
pop
adc
xor
mov
notl
jne
cld
dec
enter
sub
jg
mov
mov
scas
test
adc
movsb
pop
scas
mov
adc
xchg
inc
mov
sbb
or
jnp
ljmp
mov
adc
mov
sub
sub
add
outsl
sbb
movsl
aas
push
test
mov
sub
lcall
ret
push
jl
sub
push
jl
das
enter
ja
xchg
lahf
mov
loopne
repnz
cld
jmp
mov
jmp
xchg
icebp
pop
sub
push
mov
testl
out
push
pop
adc
add
inc
or
jns
xlat
xor
mov
lahf
pcmpeqb
inc
popf
push
gs
push
movsb
lret
add
outsb
or
dec
sub
sbbb
push
insb
frstor
and
mov
in
mov
pop
out
rcrl
js
and
testl
cltd
lds
stos
push
mov
sbbb
mov
pop
dec
icebp
xchg
aas
stc
mov
sti
sub
fs
mov
adc
mov
cltd
hlt
nop
sub
xchg
inc
ja
adc
in
jno
outsb
data16
inc
shrb
shlb
push
dec
sbb
add
lds
mov
sub
vpperm
aad
xchg
addb
xor
mov
out
outsl
fstpt
imul
cmpsl
and
mov
stos
jbe
loope
movsl
jge
mov
and
inc
xor
jns
les
lret
pop
sbb
aam
add
jp
sub
jle
fstpt
nop
aaa
mov
or
daa
mov
sti
daa
xor
out
fnstenv
in
sub
lret
cmp
outsb
xor
push
mov
pop
out
cs
bnd
popa
xor
loopne
std
ret
xchg
and
or
rcrb
jg
repz
mov
mov
aad
lcall
pop
push
stos
sarl
loope
jp
push
loope
dec
xchg
aas
lret
pop
cmp
fisubrl
mov
jns
popf
call
int
or
subb
sbb
lods
xchg
sti
nop
xchg
inc
popf
inc
movsb
test
adc
push
je
xor
imul
cmpsl
xchg
movl
mov
dec
xchg
popa
adc
adc
xor
aad
push
sahf
push
fisttpll
in
push
mov
movsb
add
adc
aad
lods
pop
push
inc
mov
inc
cld
adc
lods
mov
aas
mov
bound
push
lods
test
xorb
iret
dec
dec
cmp
out
stos
out
cmp
jecxz
cmpsb
pusha
test
bound
pusha
ret
addr16
fcompl
ret
sbb
leave
pop
inc
mov
inc
adc
push
push
cmp
out
push
fldt
mov
push
lret
in
ret
mov
jne
pop
jg
inc
sbbb
push
mov
sbb
sub
mov
mov
iret
test
mov
dec
add
sub
xchg
push
cltd
incl
cmp
jbe
sbb
dec
scas
jb
sub
push
test
push
sarb
imul
inc
je
fdivs
dec
out
out
add
mov
cmpb
cmc
mov
sub
lahf
jl
mov
movsl
xchg
inc
cs
jns
cmp
inc
lea
inc
push
lcall
dec
movsb
stc
dec
test
jbe
cld
dec
xor
pop
mov
add
cmpl
add
in
pop
mov
add
mov
jns
insl
into
leave
adc
lahf
aaa
pop
insb
orb
loopne
pop
outsb
fcmove
pop
push
scas
repz
mov
addl
outsl
dec
mov
stc
lods
and
stos
pop
icebp
rclb
push
nop
in
inc
insl
push
sbb
xchg
or
je
mov
and
gs
or
cli
dec
fadds
jg
jne
sbb
or
sub
repnz
mov
fcompl
movsl
cmc
xor
stc
outsb
sbb
and
xchg
xor
pop
jmp
or
int
sbb
cltd
sbb
jne
repz
ror
jle
int3
lret
adc
rcrl
or
xor
xor
sub
fdivl
cmc
out
mov
rorb
fsubrl
addr16
push
ret
xchg
stos
adc
pop
pushf
sub
in
mov
dec
hlt
cmp
sub
aam
push
inc
cmp
cmp
jbe
dec
jbe
dec
mov
aas
dec
out
ret
jecxz
and
scas
hlt
nop
lret
sti
es
popa
sub
pusha
arpl
jp
movl
ret
ja
std
cmpb
cmpsb
cmp
shl
mov
outsb
int
loop
pop
cmc
fsts
mov
pop
cmp
cld
lods
sub
insl
mov
addr16
sbb
inc
daa
and
ja
adc
mov
pop
fiaddl
xchg
adc
pop
cmp
ja
mov
arpl
vmaxpd
inc
sbb
outsl
stc
push
mov
out
push
sbb
or
mov
jecxz
jb
push
fisttpll
xchg
dec
push
dec
leave
daa
int3
insl
inc
mov
and
pop
cmp
ret
jbe
rorl
stos
adc
pop
test
ret
xlat
pop
movsb
jno
sub
inc
xchg
int3
mov
jo
jb
les
cltd
push
or
push
out
jns
shll
cltd
dec
or
inc
fs
xor
add
jns
cli
add
mov
cmp
push
xchg
fsubl
mov
jmp
inc
cmp
or
leave
in
or
insl
dec
cmp
pop
dec
inc
cmc
push
inc
adc
fdivl
dec
pop
pushf
in
pop
bound
push
sub
adc
pop
inc
insb
and
scas
test
lds
and
pop
stos
cmovg
cmc
jl
loop
lret
movsl
sub
add
mov
int
inc
shll
inc
and
stos
dec
in
scas
xchg
in
stc
fs
lock
cld
xchg
int3
imul
jns
mov
nop
insl
aaa
lock
rclb
push
sub
push
inc
pop
dec
outsl
cmc
mov
pop
repnz
adc
nop
inc
in
mov
sbb
out
notl
xor
add
outsb
inc
inc
clc
add
push
sbb
cmp
repnz
push
push
imul
xor
xchg
out
maskmovq
testl
dec
xchg
jae
lret
mov
addl
sbb
test
test
loope
xlat
push
aam
and
cmpsb
bound
jmp
mov
mov
push
mov
jbe
push
pop
mov
sbb
mov
mov
mov
ljmp
pusha
pop
sub
cmp
pop
or
movsb
mov
or
dec
mov
xchg
xor
jae
cld
mov
push
lods
loopne
add
jge
mov
or
push
sahf
xor
xor
lret
sbb
xchg
sub
xor
sbb
xchg
inc
gs
dec
clc
daa
test
shr
dec
add
lret
ficoml
cmp
call
dec
pop
pop
js
or
pop
bound
sarb
jmp
inc
jo
inc
mul
cmp
push
mov
push
push
shll
test
add
mov
inc
push
scas
inc
scas
xchg
pop
pop
shr
hlt
out
mov
mov
push
or
xor
cwtl
cli
mov
jns
sbbl
arpl
sarl
and
cmp
sub
mov
xorl
pop
jnp
subl
add
jae
mov
mov
popf
jb
xchg
in
jnp
fdivl
inc
mov
mov
inc
mov
aad
loop
mov
dec
int3
lcall
cmp
call
adc
aam
cmp
cmp
jae
fdivs
lods
inc
loop
mov
clc
add
push
pushf
dec
mov
dec
in
pop
movsb
sbb
stos
rcrb
lcall
aam
push
and
shlb
add
cmp
cmp
add
xlat
mov
pop
scas
fldenv
add
fs
lea
xchg
cmp
mov
push
das
jne
repnz
pop
mov
insb
decl
loop
in
outsb
fs
xor
xchg
dec
xor
adc
lcall
cmpsl
fisttpll
cmp
in
sbb
js
lahf
shrl
pop
cld
mov
and
sub
mov
loopne
sub
sub
push
cmp
adc
inc
mov
xchg
lods
daa
aam
sub
sbb
mov
jl
ret
fwait
lods
popf
cmp
faddl
jmp
xchg
loopne
cmp
mov
test
lock
jno
movsb
push
inc
ret
dec
nop
leave
lret
sub
in
inc
jb,pn
mov
std
test
add
test
fs
mov
lods
dec
pop
xchg
lock
popf
dec
or
jo
outsl
stos
repz
out
sar
sbb
fsts
popa
and
into
stos
inc
add
inc
or
shll
sbb
je
add
lods
incb
lock
sbb
pop
das
pop
sub
cmp
imul
push
jns
fdivr
pop
fistpll
dec
stc
ficoml
jno
ja
and
and
sub
xchg
push
clc
dec
fidivs
add
decb
jg
jmp
sbb
popa
adc
pushf
and
adc
std
insl
stos
mov
push
xlat
cmp
lods
jecxz
jns
mov
mov
lods
push
fnstenv
cmp
push
push
outsb
push
pop
inc
sub
scas
scas
fs
mov
add
popf
mov
sub
and
ret
mov
and
fstpt
dec
imul
aas
clc
nop
pop
stc
adc
cld
sbb
fs
fdivrl
adc
mov
rorb
push
mov
mov
adcl
lds
insb
dec
dec
scas
push
es
pop
gs
in
inc
ljmp
stos
data16
lods
nop
int
fsubs
adc
jo
jg
dec
cmpsb
enter
les
lea
lods
lcall
dec
aas
pop
sbbb
dec
xor
sbb
insb
scas
in
cmp
out
xlat
push
das
and
mov
inc
sub
mov
pop
mov
ret
mov
sbb
icebp
and
test
jae
repz
lods
fcompl
add
fcoml
daa
or
mov
sbb
sarl
jb
xor
das
push
lret
loop
add
fimull
enter
addr16
mov
lock
cld
add
hlt
fs
push
clc
mov
shlb
jmp
out
pop
dec
pop
ds
stos
mov
adc
xor
and
cmc
jo
mov
adc
nop
mov
cmp
cmp
xchg
lods
inc
cmpsl
out
rol
icebp
pushf
mov
jno
adc
inc
and
jp
out
push
mov
add
lret
test
andb
aam
lock
test
das
add
cli
xor
cs
sub
outsl
mov
or
pop
fildll
xor
fdivl
pop
sub
or
les
fnsave
pop
cli
out
xor
push
mull
adc
ficompl
inc
sahf
mov
cwtl
inc
add
add
pop
sub
adc
push
inc
inc
sbb
jnp
mov
addb
push
add
push
ljmp
inc
dec
jo
mov
test
stc
mov
xchg
sbb
mov
movsb
popf
inc
int3
test
adc
fcoml
fildll
clc
xchg
jns
jp
leave
push
std
pushf
or
push
inc
push
or
lods
sti
outsb
push
aaa
xchg
xchg
bound
xchg
jg
in
leave
pop
push
push
enter
sbb
subl
shll
out
lods
jle
bound
repnz
dec
mov
and
pop
add
push
rcrl
pop
cmp
sbb
loop
cmp
inc
and
cs
ffree
sub
and
daa
pop
andl
add
add
cwtl
movsb
fcmovu
js
inc
sub
pop
push
fiadds
imul
cmp
mov
scas
push
sti
and
scas
mov
callw
mov
sbb
mov
or
out
sub
dec
mov
ret
cmpl
shrl
dec
es
jbe
imul
sbb
les
cmpsl
data16
insb
cltd
mov
or
lock
arpl
in
sbb
xchg
mov
loop
repnz
icebp
fnstsw
mov
or
loop
mov
mov
int
add
movb
stos
cmp
in
or
fidivs
mov
pop
push
in
push
scas
add
mov
add
jecxz
sub
cmp
lock
push
sbb
repnz
int
enter
aam
loopne
inc
xchg
sub
lret
lock
jp
stos
mov
jmp
into
or
adc
insl
xchg
xor
sbb
nop
inc
mov
mov
lret
xor
mov
call
pop
mov
jl
xchg
ret
push
outsl
mov
dec
fisttpll
sarl
mov
orl
enter
imul
in
sbb
out
xor
and
mov
dec
testl
lret
add
jb
ret
mov
into
out
jnp
cmp
mov
xchg
xlat
or
nop
jo
jge
mov
jmp
pop
jns
in
cmp
mov
push
mul
aas
mov
leave
xchg
ss
jmp
hlt
cmp
scas
cli
pop
jbe
adc
fwait
inc
pop
sbb
inc
inc
icebp
in
pop
sub
inc
pop
je
add
jle
lahf
call
sbb
adc
in
insb
andl
mov
stos
data16
fldcw
je
pop
les
mov
daa
xor
sub
sub
or
pop
aas
mov
insw
leave
jbe
dec
jns
test
xchg
push
fdivl
test
movsl
xor
mov
popa
xlat
daa
outsl
adc
addr16
pop
lea
hlt
jno
int
jle
mov
cmp
jge
pop
enter
push
add
negb
mov
rolb
dec
std
pop
cwtl
jbe
repz
fwait
mov
xchg
enter
xor
sbbl
mov
push
cmp
je
fstps
pusha
adc
sbb
mov
push
ja
xor
dec
mov
icebp
adc
xor
fnstsw
cmpsl
iret
sbb
loopne
fisubl
stc
lods
add
or
aaa
sbb
insb
ret
jo
mov
xchg
imul
push
sahf
push
mov
in
fistpl
mov
loopne
jbe
fcmovu
sub
dec
stos
pop
mov
mov
movsb
mov
inc
pusha
xchg
xchg
lret
push
push
add
rcl
jnp
add
cmp
and
gs
out
fists
fisubs
cmp
repz
les
and
pop
add
xor
cs
loop
mov
fstpl
mov
xor
cmp
rclb
mov
mov
cld
dec
xor
mov
xlat
test
dec
pop
adc
or
mov
adc
iret
mov
sbb
ljmp
mov
mov
scas
call
jmp
dec
inc
xor
imul
sbb
mov
sbb
loopne
xchg
mov
fidivs
jne
psrld
filds
pop
movsl
decl
mov
inc
mov
dec
movsb
dec
cmc
stos
jmp
in
adc
dec
dec
repz
mov
sub
or
stc
loop
sbb
test
xor
inc
inc
mov
mov
fnsave
cmovb
mov
jl
sub
xchg
adc
mov
in
cli
jb
icebp
pop
pop
icebp
sahf
jbe,pt
cwtl
or
and
loop
out
sbb
push
out
lods
rcll
adc
lods
add
icebp
mov
daa
mov
lods
ljmp
int
jns
arpl
xchg
pop
dec
pop
or
arpl
scas
ror
dec
push
mov
rorb
divl
sahf
push
push
lds
cli
inc
push
adc
ret
cwtl
and
inc
fs
hlt
mov
pop
scas
insl
xor
mov
nop
ljmp
jl
xchg
xor
or
sub
rolb
push
push
jle
fcoms
in
dec
mov
pop
sub
pop
daa
adc
jnp
cmpsb
es
je
popa
mov
or
in
cmp
pop
fwait
shll
mov
dec
sbb
test
push
xorl
cmp
out
adcb
inc
or
loopne
pop
sbb
cmc
fsubp
ret
outsb
jne
or
test
movsb
push
inc
mov
jp
loopne
adc
xchg
lds
push
jae
aam
add
clc
jo
adc
jl
push
imul
mov
sbb
sbb
inc
xor
dec
cltd
out
sub
sub
jp
push
jbe
inc
pop
sbb
cmp
add
insb
sub
repz
or
adc
nop
mov
xchg
sub
cltd
mov
psraw
mov
repnz
out
fldcw
ja
inc
cltd
in
push
sbb
push
sbbl
jno
xchg
push
pop
pop
mulb
repz
cli
jno
lods
inc
popf
out
inc
or
jmp
ret
dec
shrb
popl
mov
loopne
repnz
add
aaa
inc
fwait
es
cmp
in
fisubs
mov
aad
fnstenv
add
adc
das
fadd
leave
test
daa
adc
jae
outsb
push
sub
sub
adc
stos
pop
sbb
lds
stos
shll
stc
xor
dec
int3
mov
movl
xchg
mov
sub
and
mov
lcall
push
lods
scas
dec
aad
add
adc
and
pop
xchg
imul
ljmp
aaa
cmpsb
sub
cmp
lods
push
push
int3
ja
out
fdivs
stc
cmpsl
fstl
js
fucomp
dec
pop
sub
jbe
mov
lods
sbb
roll
pop
gs
xor
lcall
xchg
jbe
inc
jmp
faddl
jns
pop
push
test
inc
dec
cmpl
mov
mov
xor
add
push
scas
cmp
cmp
popa
and
add
test
dec
mov
push
lock
leave
cmp
insb
loopne
mov
pop
sub
lods
xchg
frstor
pop
push
rcll
add
dec
scas
rcrb
hlt
mov
movb
int3
in
and
fildll
jo
sbbb
xor
jmp
fildll
das
dec
repz
dec
xor
lea
jb
cs
add
push
inc
jmp
or
adc
dec
mov
push
jbe
ja
lds
hlt
adc
mov
jns
stos
mov
cmpb
xor
xchg
push
lcall
mov
cltd
adc
mov
mov
cld
mov
mov
cmp
mov
in
ds
icebp
insb
push
decb
mov
dec
xlat
popa
mov
movsb
dec
xor
pop
pop
repnz
test
js
test
cld
stos
push
aas
out
loop
mov
lds
aas
inc
sub
mov
add
scas
add
lcall
pop
fwait
iret
jns
fs
aas
mov
xchg
cld
dec
mov
mov
mov
mov
call
lahf
out
push
sub
add
push
sub
pop
movsb
dec
inc
imul
lretw
xlat
adc
not
mov
or
repz
sbb
lock
rclb
fdivrl
cmpsb
arpl
mov
xchg
mov
push
sbbb
add
sbb
les
cli
sbb
in
pop
inc
movsl
mov
push
mov
call
add
call
es
fcomps
xchg
jecxz
inc
inc
dec
xchg
sbb
dec
dec
xchg
rcll
cmp
mov
sub
loope
or
or
add
test
cmpsl
in
fiaddl
out
or
popa
and
pop
iret
jo
jne
arpl
mov
dec
xor
repz
imul
lcall
adc
ficoms
cmpsl
add
push
xchg
je
add
mov
not
inc
ljmp
and
inc
outsl
jno
adcl
xchg
pop
dec
loopne
jnp
sub
sbb
icebp
push
sets
sbb
fsubp
pop
mov
subb
adc
cmc
xchg
sbb
out
sbb
jbe
dec
out
jmp
cld
data16
mov
sub
sarb
and
arpl
adc
xor
fisubrl
out
and
and
xor
mov
je
std
iret
mov
shrb
adc
add
inc
dec
in
mov
pop
cmp
cmp
repz
push
adcl
adc
adc
test
ss
sbb
push
mov
xchg
push
pop
repnz
int
inc
adc
lret
inc
dec
mov
stc
mov
and
adc
insl
pop
push
mov
and
pop
aad
push
xchg
mov
insb
stos
mov
xchg
leave
cmp
out
or
inc
les
loope
clc
cwtl
sbbb
inc
xchg
test
icebp
out
lods
inc
mov
js
adc
dec
mov
shlb
fwait
ds
jae
outsb
add
cmc
lret
mov
sub
arpl
test
cld
addr16
sbb
leave
pop
xchg
mov
ds
repz
ja
fdivl
mov
ja
or
jle
mov
les
insl
and
stos
push
out
inc
add
ds
icebp
sub
jle
add
fistl
pop
and
pop
mov
cmp
adc
mov
cld
fidivl
outsl
xchg
xor
sbb
leave
lock
xor
mov
add
int
jne
sbb
addr16
mov
adc
shlb
nop
mov
and
out
in
gs
pop
push
addr16
cltd
sub
xlat
jbe
shlb
shrb
jge
loope
scas
in
ret
mov
cli
adc
sub
cld
testl
mov
inc
mov
dec
mov
pop
rolb
pusha
jp
pushf
insb
add
and
rorl
xor
out
rclb
lock
add
push
sbb
nop
jp
and
fidivrs
add
into
les
call
or
icebp
out
cmp
movl
rclb
shrb
das
daa
mov
sbb
inc
test
repnz
out
mov
fucomp
ja
test
inc
jg
mov
aaa
and
scas
mov
add
clc
xchg
rclb
fsubl
in
sbb
test
test
ret
add
add
pop
in
test
sub
cmc
out
xor
inc
jae
push
pop
lret
stos
and
imul
movsb
inc
in
sub
test
loop
std
add
xor
pop
sub
pusha
mov
push
push
icebp
sub
ja,pt
test
xor
roll
lcall
add
outsb
out
test
pop
mov
adcb
nop
jno
js
cmpsb
mov
mov
xchg
sub
sub
sub
add
push
fwait
dec
mov
dec
mov
xchg
add
test
push
push
and
xchg
adc
mov
shrb
or
ret
int
ret
sbb
xchg
fistps
outsl
std
filds
mov
fsubl
pop
ret
call
or
sub
sub
pusha
js
sub
jno
and
iret
es
cmp
fisubl
jmp
pop
sti
pop
add
addr16
cmpsl
fldcw
test
sbb
jo
ljmp
sub
add
insb
mov
mov
test
mov
ror
in
ss
fwait
mov
mov
call
ret
push
jecxz
or
aad
test
movl
dec
cmpsl
out
sub
fcomps
cmpsl
dec
add
jl
xchg
shr
test
adc
mov
std
mov
mov
int
fcoml
sbb
cmpsl
mov
icebp
add
mov
add
xchg
addr16
je
test
add
mov
repz
xor
loop
cmp
ficompl
leave
add
loop
dec
int3
push
fimull
lret
inc
push
pushf
jae
ret
lret
retw
adc
outsl
and
out
movsl
je
xchg
lock
push
sub
lahf
sub
sub
fisubrs
dec
xchg
repz
and
rcrl
mov
rorl
fwait
es
das
add
fcompp
push
rol
mov
sbb
or
xchg
jp
fwait
mov
sbb
push
mov
add
lock
stos
xchg
cld
fcmovne
sti
or
iretw
inc
cmp
mov
imul
mov
es
in
fdivrs
xchg
fdivl
ljmp
bound
outsl
sahf
fisttpl
call
pop
push
std
adc
das
ss
ja
inc
xchg
or
dec
push
xchg
fsubrl
adc
cmp
pop
xor
mov
out
xchg
sub
popf
inc
lahf
popf
sub
imul
or
and
xchg
xchg
sbbb
inc
popf
add
or
jns
out
mov
lds
lret
jnp
aas
fistpll
sub
push
in
push
adc
cwtl
jno
nop
xor
imul
in
pop
and
or
ss
sbb
in
push
adc
mov
jge
xor
sub
sbb
xchg
add
push
xchg
xor
lods
sbb
ficompl
repz
sbbl
ffreep
pop
sahf
fimuls
jg
adc
test
dec
out
xchg
test
cmp
push
testl
test
imul
sub
imul
std
adc
xchg
push
cmp
jbe
andl
xchg
iret
cmpl
movsb
das
and
loopne
push
add
push
insb
repz
sahf
fidivrl
mov
push
sti
xor
mov
xor
daa
in
jle
insl
cli
dec
out
inc
mov
adc
bound
cmp
aam
call
mov
subb
push
insl
xor
lahf
jb
test
js
dec
fcos
lods
adc
movsb
sub
movsb
mov
add
jecxz
test
aad
inc
sbb
mov
push
push
mov
add
xchg
xor
fmull
cmp
cmp
mov
pop
out
dec
ss
nop
xor
sbb
inc
dec
insl
lds
aaa
notl
adcb
ss
jnp
mov
sub
andb
xchg
push
enter
adc
out
inc
sub
lcall
push
mov
shrl
mov
movsb
mov
add
jmp
das
mov
jns
sbb
jmp
std
repz
add
and
loope
jl
scas
movsb
mov
pushf
xor
pop
loop
cmc
pop
mov
inc
inc
into
and
test
dec
aaa
iret
lret
jno
jb
xchg
dec
inc
out
ss
mov
mov
scas
shll
popa
shrb
out
in
or
push
add
and
psubsw
push
out
aam
xor
pop
notb
xchg
adc
add
cld
in
out
cmp
push
adc
fsubrs
fisubl
sub
pusha
je
xor
out
inc
gs
adc
movsl
and
or
xchg
jge
mov
fiaddl
fistpll
in
adc
xlat
mov
sbb
inc
lahf
cmp
lcall
cmpsb
jb
jae
inc
popf
clc
push
clc
hlt
mov
and
sub
orb
or
dec
fimuls
fiaddl
rcll
push
push
test
in
divb
rorb
aaa
pop
shll
push
pushw
mov
fistpll
mov
subl
movsb
ss
cs
pop
je
jle
cmc
sahf
jp
xor
cmp
xchg
push
or
sbb
mov
mov
inc
scas
jp
add
sbb
mov
jae,pn
cmc
arpl
ret
roll
or
bound
mov
mov
iret
mov
add
push
sbb
out
mov
mov
aaa
ds
or
cmp
adc
stos
pop
dec
mov
iret
add
mov
jbe
xor
jl
clc
divb
sbb
xor
and
or
add
icebp
inc
mov
rcrb
cltd
xor
mov
mov
and
push
shlb
int
lcall
lods
hlt
jae
adc
pop
inc
imul
in
pop
inc
loopne
jecxz
mov
addr16
out
call
lcall
gs
sbb
and
sarl
sub
push
mov
inc
ret
mov
add
sub
jbe
push
pinsrw
test
pop
test
xchg
xchg
adc
add
and
out
imul
shll
lods
lret
mov
lea
sbb
mov
into
cwtl
js
push
mov
xchg
test
movsb
add
mov
sub
pusha
loop
adc
add
push
aad
divb
es
imul
es
testl
pop
daa
dec
outsl
or
or
lcall
pop
ret
jmp
cmp
ja
popf
pop
loop
cmp
rolb
sub
jno
push
arpl
jae
test
lcall
mov
mov
push
jb
push
jae
adc
sub
lahf
imul
push
repz
lods
push
xor
sub
mov
lods
cs
mov
clc
je
into
fsubrl
sbb
out
jge
inc
shr
jg
mov
add
jne
fst
and
lods
jbe
xor
xchg
mov
jl
loopne
or
pop
test
push
mov
mov
stc
arpl
xor
lods
insb
ret
pop
adc
sub
cltd
roll
inc
pop
inc
aas
andb
aaa
dec
pusha
adc
pop
shll
mov
ss
inc
jl
mov
popa
dec
mov
into
or
lods
in
in
fldcw
sbb
repz
add
testl
mov
fsubrl
lods
lods
dec
adcb
inc
or
push
in
dec
mov
mov
mov
psrlq
mov
cmp
in
jae
into
ret
push
inc
push
push
cmpb
xor
fucomp
arpl
mov
dec
fcompl
sarb
cmp
aas
cmc
xorb
sub
jmp
sub
adc
push
mov
sub
lock
lret
xchg
mov
xchg
jo
subl
sub
stos
in
std
sub
and
pop
pop
mov
cmp
inc
repz
jb
dec
lods
cwtl
shlb
and
aas
enter
push
hlt
or
cmc
addr16
xor
or
push
mov
xchg
in
mov
jmp
gs
mov
lds
sub
sbb
arpl
cmp
push
and
pop
sub
adc
mov
bound
aas
mov
pop
push
mov
adc
jp
xchg
cmc
or
lahf
sub
jb
mov
frstor
popf
xorl
push
mov
dec
push
xchg
bound
jbe
ret
movsl
cs
and
clc
mov
mov
ljmp
out
adcb
pop
push
mov
bnd
test
mov
shlb
pop
out
xchg
mov
sub
mov
popf
nop
call
mov
inc
push
push
hlt
clc
loope
loop
jnp
ret
push
inc
jmp
repnz
les
cmp
cmpsb
cmp
lods
cmp
or
dec
sarb
lock
mov
mov
mov
mov
pop
pop
mov
adc
insb
out
stc
and
daa
loop
mov
roll
into
loopne
push
das
push
mov
lods
push
sub
sarl
out
xchg
cs
loop
push
jp
and
das
mov
push
ss
mov
and
sbb
xlat
and
call
lods
arpl
movsb
sbb
and
movsl
in
mov
test
outsl
orb
test
xchg
dec
inc
bts
imul
stc
mov
test
int3
cwtl
cmpsl
push
sahf
xchg
jge
mov
loope
sbb
cmp
cmp
mov
xchg
cmc
sti
jecxz
shlb
fsubl
xchg
outsb
xor
addl
xorl
call
idiv
jae
rdtsc
xchg
cmp
fsubrs
cld
cwtl
push
movsb
movsb
fisubrs
mov
mov
pop
dec
out
pusha
cld
adc
inc
cmp
fs
pop
mov
xchg
lea
xlat
fdivr
fldl
inc
orl
dec
mov
testb
pop
jle
dec
mov
xor
icebp
stc
add
les
ss
fs
adc
test
popf
mov
insb
jp
push
adc
push
dec
cmp
xor
xor
int3
aam
cli
lods
cmc
popa
xchg
jns
ljmp
push
scas
push
outsl
jle
fnstsw
cmp
dec
int
push
push
and
outsl
cmpsl
ds
fs
ror
push
jae
inc
in
xchg
call
insl
daa
movsb
xchg
xchg
sub
stos
es
ror
or
sbb
movsl
lock
mov
inc
in
push
cmp
cmp
push
idivl
xchg
sbb
mov
inc
rorb
adc
xchg
xor
pop
sbb
mov
test
dec
and
into
mov
dec
xor
iret
jg
aad
sbb
jle
daa
iret
xchg
adc
repz
cmpsb
mov
pop
mov
and
arpl
lcall
push
fs
jge
lock
bnd
jne
dec
std
inc
push
fwait
sbb
out
aam
in
cmp
cmp
dec
scas
pop
mov
mov
std
ja
fdecstp
outsb
pop
stc
pop
std
push
loope
mov
sub
lcall
in
push
or
outsl
push
pop
push
es
aaa
xchg
sarb
fdivrl
cmpsb
pop
push
xor
lret
loopne
sbb
in
inc
sti
aaa
in
xchg
fdivrp
ror
add
add
xchg
ret
loope
pusha
or
or
push
fadd
sub
in
repnz
sbb
pop
xlat
jb
jo
fsubrs
xor
mov
ljmp
pop
and
pop
aam
xchg
loope
fisttpl
outsl
dec
inc
icebp
loopne
push
jmp
add
dec
xchg
xor
mov
push
add
mov
std
xor
mov
mov
or
clc
pop
vandps
push
push
or
mov
push
mov
inc
push
sub
push
adc
out
mov
les
fidivl
inc
xor
out
scas
data16
les
pushf
test
push
mov
mov
mov
jo
adc
jns
inc
arpl
movsb
push
mov
mov
repnz
xor
lcall
xor
cmp
push
dec
addr16
shrl
xor
mov
je
xchg
sbb
xor
lahf
jecxz
jle
imul
inc
js
inc
into
pusha
pop
xchg
and
cmp
movsl
adc
jmp
and
icebp
sbb
or
pop
dec
push
out
push
fs
xchg
lahf
or
jp
pop
sub
inc
aam
mov
add
and
rsm
cli
loope
insb
sti
loopne
and
in
call
bound
inc
rcl
mov
mov
fsubrl
test
popf
dec
and
popa
stos
lea
xor
and
rcll
dec
pmaxsw
xor
cmc
mov
xchg
clc
and
lea
cli
lea
push
lcall
dec
mov
adc
faddp
daa
jns
cld
jmp
aam
imul
pop
add
cmc
mov
and
inc
sub
test
and
in
fisttps
push
stos
repnz
xchg
jp
xchg
mov
sbb
cmp
mov
decl
pusha
scas
push
daa
fwait
jb
sbb
xor
cwtl
test
ss
xor
bnd
fnstsw
addr16
iret
std
mov
mov
cmp
ja
sahf
xchg
push
bnd
pop
adc
cltd
ss
jge
xor
sub
dec
cmpsl
test
mov
cmp
int3
stos
or
aam
out
inc
or
pop
cmp
dec
js
insb
push
outsl
xchg
jmp
and
cmp
cmpsb
dec
loope
xor
xchg
xchg
lcall
sti
push
jl
mov
adc
adc
inc
shl
cmpsb
jp
loope
sub
rcrl
sub
xor
stos
movsb
mov
dec
fcomp
lret
in
push
ja
cmp
scas
sbbl
jmp
outsl
imul
sbb
sub
dec
push
daa
insb
inc
push
mov
inc
fisubs
mov
fldenv
pop
ljmp
in
mov
pop
imul
mov
xchg
aaa
imul
daa
pop
xor
lock
pop
pop
out
mov
mov
ljmp
sahf
xchg
and
sub
xor
ffreep
jmp
lods
xchg
loop
xchg
roll
popa
dec
jb
adc
xor
jg
cwtl
fldenv
leave
push
cwtl
psubusb
mov
xor
inc
imul
in
and
xor
add
shrb
fildl
clc
pop
mov
sbb
mov
mov
shll
push
xchg
mov
lret
adc
je
rorl
idivl
fs
mov
xor
sub
and
or
loop
mov
arpl
inc
adcl
sbb
ret
enter
paddsb
adc
pop
cmpsl
dec
push
dec
pop
or
movsl
add
aad
mov
loop
mov
push
sbb
in
sarb
ret
mov
and
frstor
rorl
cmpsl
mov
dec
arpl
int3
data16
add
mov
inc
lds
mov
lock
adcb
int
cmc
push
add
loope
xchg
call
hlt
mov
mov
cmp
fcmovnb
inc
insl
popf
cltd
mov
pop
push
add
jns
adc
fmul
pop
pop
enter
movsb
jge
jnp
lret
or
add
fwait
or
aaa
pop
lods
stc
rcr
imul
add
xchg
inc
in
cmp
and
scas
xor
iret
mov
outsb
fmul
movl
fistpll
lods
push
in
cmc
arpl
or
pop
cltd
cmpsl
pop
clc
subl
adc
rolb
push
mov
and
into
add
sarl
inc
cmp
fs
mov
or
ja
mov
cmp
outsb
xorl
fwait
hlt
pop
push
xchg
or
push
test
jo
movsb
adc
sub
push
lock
xor
scas
call
or
sahf
sti
cmp
or
jno
push
push
test
sbb
mov
cmp
roll
mov
stc
iret
xchg
cltd
jbe
adcb
adc
xchg
in
jnp
daa
fstl
jbe
cld
aas
movsb
lods
inc
inc
fdivrs
cmp
insb
lcall
cmp
stc
sbb
jb
or
mov
std
mov
dec
push
ret
mov
push
movsb
dec
cmpsb
pop
mov
push
negl
cmp
imul
xor
movb
xor
in
sbb
xor
jge
push
rcrl
and
ficoms
push
sub
icebp
mov
fstpl
fidivs
push
scas
enter
lcall
mov
outsl
add
pop
mov
and
dec
jb
cwtl
in
xchg
adc
ss
stos
fwait
add
lock
popa
imulb
xchg
repnz
push
pop
movsb
mov
mov
mov
xchg
repnz
imulb
jne
xchg
aam
mov
scas
leave
call
pop
sub
mov
push
subl
push
hlt
icebp
cmp
in
mov
mov
mov
mov
push
pop
inc
lods
cld
cmpsl
inc
loop
repz
inc
dec
dec
lret
adc
je
out
iret
xor
call
adc
mov
fs
call
push
repz
cmp
rcr
call
cmp
dec
jne
fwait
out
cmp
push
xlat
test
fldt
rcr
lret
data16
cmp
pop
xchg
mov
fisubrs
adc
fildll
mov
popf
cwtl
lods
xor
dec
addr16
rep
mov
jb
and
leave
cmp
sbb
lds
push
mov
mov
cmpsl
pop
pop
in
nop
xlat
sbb
jg
push
push
pop
stos
sub
inc
sahf
arpl
enter
ja
xchg
push
fcomps
stos
mov
xorl
jecxz
mov
ja
test
push
add
mov
and
mov
and
push
jge
cmp
aaa
js
popf
pop
push
dec
shll
pop
cltd
lahf
mov
lahf
in
stc
fstpt
xchg
scas
mov
cmpsl
dec
sub
add
jl
cmp
iret
sbb
iret
jp
xor
and
mov
scas
xchg
or
jp
mov
divl
jge
push
cmpsb
mov
and
inc
and
xor
cli
mull
lahf
lods
lea
mov
lcall
fisttpl
mov
sub
or
lcall
jg
in
call
cmp
sahf
adc
pop
cmpsl
fwait
clc
fdivrl
outsb
cmp
sarb
mov
jp
mov
and
addr16
add
jbe
cmp
test
push
inc
mov
sbb
ffree
shrl
push
xchg
xor
cli
add
push
jno
leave
nop
xor
xchg
fldl
cmp
adc
rclb
xor
pop
mov
mov
mov
cmc
push
sbb
or
pop
add
outsb
xchg
add
dec
sub
stc
lret
inc
cmpsb
and
push
imul
pop
jecxz
jnp
or
adc
pop
ficomps
insb
xor
pop
lahf
sub
xor
mov
in
int3
ja
mov
loop
orb
xor
ljmp
adc
das
aas
or
leave
in
add
pop
leave
push
push
movsb
sbbb
pop
mov
pop
aaa
mov
add
mov
fildll
lret
testb
push
mov
xor
stc
in
out
add
ret
test
in
lret
mov
cmp
jbe
mov
dec
push
inc
cld
push
push
add
xchg
pop
add
test
je
adc
dec
outsb
lods
call
bound
push
add
leave
add
dec
jno
xlat
insb
ret
sub
sub
scas
mov
lods
jmp
xchg
push
jmp
xchg
nop
lsl
nop
stos
add
inc
test
pushw
sbb
ljmp
lock
sahf
out
fdivrl
in
pop
sub
inc
or
push
add
inc
push
mov
aam
shl
aaa
rcrb
jo
cwtl
push
in
jl,pt
cmpb
pop
adc
loopne
lock
dec
xor
fadd
and
in
cmp
lds
mov
je
pusha
xlat
xchg
pop
sti
shr
dec
sbb
insb
pop
inc
inc
sbb
jno
jne
jo
or
xor
pop
loope
cmp
and
jbe
out
rclb
sahf
cli
sahf
pop
stos
adc
cmp
mov
fiadds
call
jns
ret
outsb
pop
scas
rclb
mov
sub
pop
pop
shlb
push
daa
adc
sti
lret
xor
mov
scas
ret
sub
das
push
mov
add
arpl
xchg
into
clc
jae
nop
xchg
jge,pn
push
mov
push
push
out
std
test
mov
pop
fsubl
xor
mov
cmpsb
dec
fisubrs
pop
movsl
enter
cmp
add
mov
inc
data16
enter
loope
mov
rcrb
les
push
dec
or
divl
notb
pop
fadds
mov
push
mov
mov
pop
ret
out
in
mov
or
adc
pushf
jnp
inc
stc
mov
fcoml
mov
cmc
call
adc
xchg
shrb
cli
out
lret
cltd
xchg
push
jecxz
shrb
sbb
rcll
cld
js
aas
lds
fstps
imul
sti
pop
pop
ficompl
stos
pushf
shl
xlat
mov
push
ja
std
mov
add
jb
cmp
pop
mov
lds
js
push
arpl
cmp
sbb
iret
push
cmpsb
adc
lret
rcr
les
cmp
out
mov
into
in
mov
adc
inc
je
push
xchg
mov
in
jg
insb
into
icebp
gs
or
and
sub
enter
dec
mov
dec
hlt
pop
test
lods
outsb
out
push
in
sbb
mov
je
push
push
mov
mov
subl
dec
dec
js
xchg
push
inc
fadds
inc
dec
lock
mov
jnp
into
mov
aaa
mov
xchg
xor
sti
repnz
adc
std
ja
pop
fnstsw
sbb
iret
psrlq
push
dec
xor
inc
push
mov
sahf
test
and
or
enter
dec
pop
imull
mov
jecxz
out
jg
adcb
push
and
out
shrl
out
cmp
shlb
push
pop
cmp
lret
or
pop
fadd
ljmp
lea
jnp
mov
cmpsb
push
pop
inc
bound
cmp
in
jp
subl
ljmp
dec
push
add
das
mov
jo
aad
and
mov
and
pop
addps
stos
int
sbbl
stc
iret
fwait
xchg
imul
xchg
lock
imull
xor
data16
pop
adc
xor
arpl
jns
sbb
shrl
mov
icebp
std
jno
xor
repnz
jbe
mov
xchg
cmpsb
aaa
jmp
cmpsl
dec
push
xlat
mov
push
jno
sbb
adc
push
dec
add
aaa
leave
popa
sbb
push
and
mov
cmc
loop
stos
mov
pop
incl
out
jl
xlat
jae
adc
dec
dec
push
xor
repnz
sbb
movq
aad
adc
mov
dec
adc
pop
mov
mov
xchg
dec
sbb
push
js
gs
iret
rcrb
rorb
push
pop
sbb
and
lods
jl
imul
shlb
dec
jae
mov
inc
pop
shl
mov
stos
and
jge
rcrl
dec
aad
pop
cmpsb
cmc
mov
sub
sbb
or
rcrl
dec
mov
jge
fistl
or
out
push
cmpsb
mov
andb
leave
pop
inc
lea
in
cmpsb
rcrb
mov
jbe
in
fsubr
scas
leave
adc
adc
imul
arpl
pop
adc
popa
push
scas
enter
jae
mov
xchg
fldenv
fwait
in
sub
add
ret
ljmp
call
jne
cmp
jbe
shl
lods
das
xchg
and
cmp
xor
aam
or
pop
popa
add
je
out
sbb
and
out
daa
inc
cmpsb
lods
clc
cld
mov
ret
hlt
push
adc
cmp
clc
push
test
jo
adc
mov
insb
mov
std
call
mov
aas
rorl
nop
stos
lea
adc
mov
pop
je
cmpb
insb
sub
xor
jmp
push
xchg
filds
sbb
and
stos
mov
mov
sbb
pop
mov
shrl
push
fisttpl
stos
pop
cmpsl
xchg
sub
rcrb
mov
sub
repnz
cli
inc
fisttpl
xor
or
js
jl
ss
pop
into
add
cmp
jmp
das
icebp
mov
jmp
das
test
and
or
stos
push
std
sbb
sti
das
xchg
fcmovnbe
add
xor
dec
push
push
push
xor
and
in
imul
mov
mov
jns
ret
lret
adc
and
dec
arpl
jno
repz
or
xchg
shll
or
push
fcoms
xchg
into
mov
ja
mov
or
shl
mov
xchg
pop
xchg
icebp
jg
iret
adc
movsl
addr16
subl
adc
jae
jae
mov
test
repnz
push
rcrb
jecxz
sarb
shr
or
cmp
das
insl
xchg
test
jne
idivl
cmpsl
and
aas
mov
ret
notb
call
jnp
jo
out
mov
or
lahf
jbe
test
ret
push
test
jecxz
mov
je
mov
add
cmp
es
movsb
fwait
mov
ja
mov
mov
or
outsl
dec
dec
loopne
test
into
or
gs
mov
mov
push
jne
push
pusha
xchg
sub
mov
fisttpll
mov
arpl
ficompl
out
or
adc
add
mov
pop
add
stos
iret
dec
adc
jge
bound
pop
data16
jns
insl
cmpsb
in
or
pop
aaa
leave
push
mov
in
fsubrl
fadds
jle
sub
enter
aad
imul
ljmp
mov
out
das
add
cmp
pop
xlat
mov
dec
js
sarb
jns
add
xor
jl
repnz
sub
aas
mov
movsb
cmpsb
sahf
into
test
bound
cmp
ret
cwtl
push
mov
cmp
mov
fnstcw
cmp
and
cmp
imul
sbb
inc
push
ja
adc
xchg
addl
dec
jl
and
cmpsl
pusha
mov
jle,pn
adc
fwait
clc
rorb
jl
sti
or
aam
pop
xor
mov
aam
add
shll
fadd
scas
cli
nop
pusha
das
int
jmp
mov
insl
dec
and
pop
adc
and
mov
lds
jge
mov
jecxz
inc
sbb
inc
test
repz
mov
les
add
repnz
les
xchg
pop
andb
jae
mov
sbb
enter
movsb
inc
shl
in
shll
fisubs
sub
sbb
es
pop
sbb
add
inc
call
movsl
mov
movsl
adc
mov
dec
rorl
xor
mov
outsl
mov
cwtl
inc
mov
mov
xchg
ds
imul
dec
xchg
ret
sbb
ficoms
fdivs
out
paddsw
push
test
mov
repz
ss
shll
lret
mov
adcb
clc
xchg
jge
mov
jno
aad
in
jae
mov
or
fcompl
and
repnz
es
mov
mov
push
pushf
fstps
push
jp
shlb
sahf
or
jae
push
fisttpll
in
cmp
icebp
pop
cmp
and
sbb
mov
xor
push
loope
dec
scas
dec
sbbl
jmp
sbb
jne
or
rorb
in
gs
std
loopne
pop
imul
and
or
fbstp
add
cmp
or
in
jl
jb
out
lock
and
mov
roll
jge
jb
out
stos
pop
je
out
dec
iret
shrb
sbb
fiadds
lock
xchg
scas
push
mov
fs
imul
xchg
sbb
sub
adc
fwait
nop
loop
shlb
cli
jle
test
xchg
fwait
enter
ss
inc
popa
out
adc
imul
xor
xchg
stos
or
into
lods
mov
jg
cmc
cmp
sub
cltd
dec
mov
notl
push
and
adc
dec
insb
mov
das
xchg
fdivr
jp
shrb
xchg
scas
xor
mov
scas
push
loopne
inc
inc
add
sub
loope
test
add
insl
pop
and
xchg
mov
js
jmp
mov
dec
jb
push
lds
dec
fists
and
xor
or
punpckhdq
jmp
sbb
repz
pop
mov
ret
cwtl
fidivs
add
aas
mov
inc
arpl
fisttps
les
icebp
xchg
lahf
and
or
movhps
inc
aam
cmp
sub
fwait
mov
gs
aam
inc
jo
xchg
pop
ds
jno
negb
into
scas
mov
sbb
sub
inc
sub
dec
xor
jg
test
and
adc
mov
loope
pop
dec
jb
xchg
push
adc
ret
jp
imul
sub
imul
pop
push
lock
pusha
popa
cli
out
orl
sbb
enter
outsb
sbb
jb
out
movswl
mov
mov
jmp
and
and
shlb
pop
lods
notl
jp
or
sub
xlat
xchg
inc
cmp
sbb
pop
imul
out
lods
dec
orb
jle
hlt
push
out
sbb
add
addl
loopne
and
mov
jecxz
mov
bound
pop
ret
iret
mov
xchg
push
pop
xor
or
xchg
jne,pn
movsb
sbb
mov
or
lods
shr
lds
mov
dec
outsl
mov
sub
adc
xchg
movsb
mov
jg
and
xchg
out
fcomp
enter
jge
cmp
mov
dec
popa
fists
cld
mov
mov
xor
cltd
and
xlat
frstor
cwtl
mov
xchg
adcb
xor
inc
jo
sbb
mov
mov
xchg
xorb
jnp
xchg
jge
dec
mov
sbb
sti
imull
fld
and
jp
repz
jmp
xor
gs
loop
mov
inc
rorb
rcr
jnp
sbb
scas
mov
icebp
and
outsb
daa
dec
ret
stc
dec
test
mov
aas
mov
dec
test
inc
mov
pusha
xchg
jg
sub
add
add
stos
popa
fildll
int3
idivl
sub
xchg
or
mov
push
push
cmpsl
cmp
cwtl
mov
std
sahf
gs
inc
ja
insl
mov
or
mov
test
mov
or
mov
cmpsl
cltd
cmc
js
cmpsb
push
or
and
add
dec
out
mov
mov
cmp
mov
lds
push
shll
repnz
sub
xor
shlb
cmpsb
sahf
xchg
sub
vmwrite
shr
les
movsl
aas
insb
xchg
cmpsb
adc
xchg
orl
push
iret
aas
aaa
mov
imul
xchg
aad
repnz
inc
dec
mov
adc
repnz
jmp
xchg
or
loop
js
xchg
cmp
stos
enter
mov
push
adc
mov
repnz
fisubrl
testl
xor
mov
roll
or
aad
mov
jl
xchg
cmpsl
mov
negb
into
int3
or
loope
xor
loop
xchg
pop
and
loop
insb
test
mov
fdivl
iret
inc
sub
gs
stc
das
icebp
add
sarb
arpl
sbb
mov
xor
push
inc
imul
sbb
xchg
adc
add
in
pop
fstpt
ja
jmp
jb
jbe
mov
mov
or
mov
int
into
pop
adc
stos
pop
xchg
jns
sbb
js
adc
stos
cmp
adc
aaa
aad
inc
push
imul
fimuls
sbb
inc
fbld
mov
pop
out
comiss
in
sub
lret
and
or
ficomps
mov
movsl
inc
stc
ret
lcall
mov
fs
daa
mov
pushf
sub
mov
dec
imull
jmp
sbb
insb
pop
mov
aas
jo
mov
out
and
adc
stc
dec
mov
fmuls
dec
push
mov
dec
dec
mov
xorb
adc
sbb
and
xchg
jmp
neg
xor
inc
add
cmp
lea
loop
fcomip
cltd
and
mov
pop
push
nop
push
div
jecxz
aad
add
nop
in
in
xchg
adc
mov
ljmp
sbb
adc
adc
add
lahf
loop
jmp
mov
hlt
addr16
fldenv
mov
inc
inc
and
stos
rorb
or
push
cmpsl
sub
xchg
push
cltd
stc
jns
inc
int3
stos
pop
lods
cmp
jo
xor
int
push
or
push
inc
jg
test
out
mov
mov
and
test
fimull
and
ja
clc
or
mov
cmp
stc
add
dec
xor
adc
mulb
inc
mov
mov
dec
or
cmp
shrb
add
bound
out
pusha
dec
push
push
pop
cmpsb
pop
push
push
push
das
adc
dec
pop
loopne
xorb
push
fsubp
pop
inc
sub
pushf
cmpsb
shl
loop
sub
clc
test
ds
push
and
adc
sub
aam
xchg
jge
insl
int
adc
push
pop
jmp
rcll
lcall
int3
outsb
ret
inc
sbb
adc
push
orl
sub
add
out
fisttpl
inc
pop
stos
and
pop
movsb
into
sbb
push
scas
inc
or
ds
mov
sbb
push
jo
rcrl
pop
inc
test
jnp
dec
scas
mov
cs
stc
imul
push
mov
add
fstpt
in
in
fadds
movsl
dec
shl
arpl
fdivrp
das
mov
and
or
adc
xor
dec
fbstp
pop
mov
dec
cmp
xor
sbb
mov
push
xor
mov
in
cmpl
lcall
test
hlt
push
mov
iret
adc
dec
fs
sub
and
dec
andl
sub
sbb
or
ds
out
xchg
xor
mov
pop
cmpsl
repz
dec
in
inc
adc
shl
push
mov
mov
push
fsubl
jp
jl
push
popf
lcall
dec
cld
or
mov
lcall
cmp
pop
clc
jge
adc
or
mov
addb
xor
mov
xor
cmp
arpl
insl
sbb
sbb
or
push
inc
or
xchg
in
cmp
mov
leave
cmp
rclb
nop
mov
inc
out
shrb
jmp
ss
mov
jmp
daa
mov
cmp
or
sub
stos
jbe
dec
push
pop
outsb
or
ret
mov
sbb
or
repz
jmp
out
add
jbe
orb
xchg
ja
icebp
mov
xor
inc
xor
pop
stc
add
and
xchg
mov
sahf
pop
sbb
mov
push
xor
cmp
in
xchg
xlat
push
inc
sbb
test
popf
data16
mull
pop
cmp
jnp
mov
maskmovq
mull
mov
jae
sbb
xchg
nop
or
ljmp
scas
fidivl
jo
sub
arpl
cld
mov
fs
xchg
subl
and
jge
xchg
scas
sub
out
sub
rcll
mov
jle
jp
cld
dec
out
push
aam
jno
std
sti
sarl
pop
jne
sub
adc
fisubs
mov
rol
xor
pop
stos
subb
sbb
js
cmp
cwtl
cmp
inc
mov
sub
int
insb
or
push
shl
ss
mov
or
fs
and
push
xlat
icebp
ret
mov
push
push
pop
cltd
and
mov
pop
mov
sbbl
clc
inc
cmp
push
cltd
push
out
call
test
pop
cmpsb
pop
fcmovbe
push
scas
ds
mov
movsb
and
jmp
inc
and
add
stos
jecxz
lock
xor
in
or
test
jge
mov
mov
jno
jle
or
cwtl
enter
pop
cmp
cli
aaa
xor
push
mov
cmp
cmc
cmp
and
aaa
cmp
fdivl
sbb
pop
je
fcom
xor
sub
ficompl
cmp
or
xchg
shrl
adc
cmp
shll
in
pop
popa
jge
mov
jno
mov
sbb
mov
out
ja
frstor
add
add
ficompl
pop
xor
pop
dec
es
out
cmp
pusha
push
ja
cmp
fdivrp
outsb
push
inc
in
xchg
push
ret
sub
inc
data16
daa
mov
dec
lods
testb
dec
outsb
push
test
lcall
loopne
jno
inc
popa
jmp
aas
cmp
aas
hlt
test
repz
push
outsl
sub
jnp
mov
negb
push
mov
push
push
cs
pushf
sbb
sub
rolb
bound
test
pop
pop
mov
in
aad
arpl
negb
sub
pusha
cli
js
sbb
cmc
and
adc
mov
and
mov
scas
popa
adc
adc
notl
pushl
mov
sbb
sbb
cmp
rorb
add
enter
mov
sbb
addl
and
lret
dec
pop
jae
push
sub
mov
cs
aam
jo
push
comiss
dec
inc
mov
dec
icebp
adc
mov
rclb
fildl
jl
ss
lret
in
lds
outsb
mov
outsb
insl
add
and
mov
xchg
xchg
add
out
xor
ljmp
notl
xlat
es
sbb
lahf
mov
jb
xchg
rorl
ret
sbb
dec
mov
pop
cmpsb
les
xor
aaa
xchg
shl
mov
popf
push
and
test
repnz
int3
inc
pushf
push
jb
add
adc
out
xchg
dec
stc
enter
jbe
mov
idiv
mov
push
lds
sub
cli
stc
mov
pop
hlt
scas
mov
xchg
sbb
sbb
out
loop
sbbb
cmp
fiaddl
or
inc
daa
pop
pop
ja
and
jl
clc
push
sub
jns
cmp
std
test
imul
loope
pop
cmp
mov
dec
jge
test
pop
out
or
mov
movsl
test
shll
test
dec
je
mov
mov
cmove
out
and
or
mov
int
or
insl
jge
sub
sahf
push
popa
shl
mov
dec
sub
inc
xchg
movb
rcll
call
je
sbb
shll
push
xchg
subl
iret
les
pop
int3
add
jp
std
xchg
lcall
fdivr
test
std
lods
xchg
add
sub
cmc
in
shlb
pop
mov
dec
sub
out
cmpsb
mov
add
lret
ror
adc
out
xor
mov
gs
hlt
in
sbb
dec
pop
and
subb
push
dec
mov
cmp
adcb
xlat
xchg
data16
jl
imul
fnstcw
inc
add
xchg
test
push
mov
lods
aam
and
decb
pop
jo
sub
mov
pusha
fistps
ret
imul
pop
cmp
gs
pop
mov
sub
and
xchg
rcrl
push
mov
sarl
jle
xor
push
mov
adc
mov
mov
fisubl
inc
enter
ffreep
pop
push
test
mov
imul
push
enter
add
scas
cld
mov
out
negb
and
andb
call
adc
sbb
dec
dec
out
clc
mov
mov
div
inc
stc
mov
xor
rorb
daa
cmp
mov
std
fwait
mov
sbb
mov
sub
cmp
or
push
shl
shlb
cmpsl
cmp
inc
mov
adc
insb
lcall
or
insl
sarb
cmpb
test
insl
insb
clc
sti
mov
xchg
mov
push
subb
dec
jl
stos
jg
mov
inc
add
push
cs
add
insl
or
dec
pop
adc
lods
sbbb
mov
pop
insb
inc
cmp
sarl
std
frstor
repz
push
sub
sbb
outsb
sub
push
mov
jle
sub
mov
popf
and
push
pop
ljmp
in
sub
enter
jge
cmpsb
ss
out
outsl
into
add
leave
and
les
xchg
into
scas
or
js
sbb
push
in
xor
dec
cmc
sub
jbe
jne
fildll
sbb
add
dec
adc
pop
das
aam
mov
jne
or
sar
lods
pop
cmp
jmp
out
outsb
xchg
jmp
jbe
leave
push
sbb
xor
jp
lods
adc
push
rcl
jno
pop
sbb
int3
push
or
or
test
push
mov
adc
ds
adc
stc
push
fsubl
mov
add
dec
push
ret
scas
adc
or
mov
or
dec
xor
cmp
pop
adc
enter
stc
sbb
sbb
xchg
xor
mov
mov
xchg
arpl
xchg
shlb
aaa
cmp
xor
or
inc
call
imull
scas
imul
test
xlat
jle
idivl
sbb
data16
push
push
pusha
fs
mov
filds
sbb
xchg
lock
in
lds
aas
ss
cmpb
fs
push
inc
inc
mov
scas
ficomps
in
and
retw
and
jnp
gs
stc
js
sti
push
fmul
dec
xor
ret
fstl
insl
cmp
push
lret
mov
ret
enter
adc
je
enter
push
add
daa
int
cwtl
pushl
stos
bound
fcoml
jg
lods
and
push
ds
xchg
push
orb
dec
jle
cmp
push
mov
mov
and
pop
cmp
and
std
lret
sub
or
xchg
out
out
rcrl
cld
pop
imul
dec
cld
lods
push
call
dec
jb
sub
pop
cmovs
inc
aaa
test
rclb
pop
flds
xor
rorl
cld
pop
scas
daa
fldenv
subl
ja
bound
cmpsb
test
das
fists
repnz
loope
sub
rorl
inc
shll
ss
pop
repnz
and
insl
sti
push
out
or
cmp
aam
gs
and
enter
dec
mov
mov
es
mov
or
aaa
jg
pop
pop
out
lock
pop
and
daa
scas
dec
mov
and
dec
insl
xchg
rcrl
outsl
mov
pop
arpl
ljmp
loop
insb
fldcw
dec
leave
jmp
and
inc
xchg
xor
xor
inc
fcomps
jle
mov
ss
cmp
punpckhbw
sbb
mov
cmp
pusha
xor
enter
push
mov
inc
push
aam
lods
mov
cmpsl
push
andb
dec
ljmp
imul
cwtl
sub
insl
and
mov
cmp
add
out
push
adc
lret
leave
test
xor
arpl
xor
call
or
test
and
test
inc
pop
push
iret
push
test
lock
mov
pop
or
xchg
arpl
inc
vmovd
popf
pop
or
pop
pop
fnstenv
push
call
adc
or
mov
xor
or
push
out
or
rcrb
enter
jne
xchg
mov
and
push
fisubs
or
xor
mov
jmp
out
cmp
adc
add
dec
mov
cmp
mov
ret
cli
mov
stos
adc
fs
dec
js
push
mov
mov
xchg
jno
push
aad
ret
lcall
jg
aad
mov
jl
xor
out
in
and
imul
add
ljmp
lcall
add
push
test
aad
inc
fmul
add
mov
push
inc
sub
lcall
insl
imul
mov
insb
insl
jne
daa
or
mov
inc
mov
fcoml
push
loop
push
jae
push
cmpsl
mov
inc
adc
pop
fwait
pop
xor
inc
addb
call
add
and
idivb
bound
inc
push
ret
pop
cld
cmp
pop
aad
insl
add
mov
or
lds
push
jmp
xchg
jo
je
jb
xlat
cmc
je
and
cmp
and
cltd
test
cmp
mov
push
cmp
movsb
mov
xor
fnsave
cmp
mov
lds
push
mov
or
mov
scas
xchg
test
sbb
mov
adc
scas
xchg
lods
fidivl
push
jo
les
imul
mov
push
xchg
pop
cwtl
sbb
mov
adc
scas
push
and
mov
movsb
dec
insl
add
xor
sub
sub
in
pop
rcrl
pop
dec
inc
push
dec
popa
rolb
std
arpl
xchg
or
push
push
mov
mov
pop
mov
xchg
je
sbb
add
add
sub
sub
lret
add
lahf
in
push
push
xor
mov
xchg
pop
add
or
out
push
repnz
ffreep
and
lock
pop
aaa
cltd
mov
xor
mov
sbb
sub
jns
mov
sbb
mov
sbb
jno
es
out
arpl
ficompl
xchg
cli
stc
orb
inc
incb
jmp
xchg
fmuls
inc
jl
or
js
repnz
cmp
mov
rorl
pop
inc
movsb
bound
les
xchg
insb
xchg
fmul
outsl
push
pop
sahf
jl
mov
and
cmp
jns
jno
roll
cli
out
pop
subb
cltd
imul
add
or
sbb
mov
idivl
cld
sub
push
bound
ljmp
xlat
mov
sub
mov
lcall
mov
xchg
mov
jg
and
iret
repz
int3
addb
aam
xchg
adc
push
push
repz
ja
add
sub
in
sub
imul
les
xchg
xchg
leave
mov
stos
sbb
loopne
repz
and
pop
das
shrb
pop
lcall
cmp
mov
inc
mov
cli
cltd
movsl
sub
ja
sbb
xchg
int3
inc
adc
jnp
test
out
or
repnz
in
popf
pop
dec
loopne
or
push
and
add
rcrb
sbb
jl
pop
stos
push
sarl
mov
push
leave
xor
cltd
inc
pop
dec
in
mov
fincstp
push
jge
nop
dec
lahf
faddl
int
push
cmp
or
es
jp
xchg
pop
icebp
mov
or
mov
add
sbb
mov
adc
repz
and
pop
sub
adc
adc
add
jg
jnp
pusha
call
cwtl
adc
shl
inc
test
push
xchg
ret
rorb
or
mov
dec
add
push
sbb
into
mov
data16
xor
imul
aas
xor
stc
cmp
push
cwtl
fldt
lret
pop
aam
test
int3
lret
test
nop
dec
cmp
cmp
and
popf
sbb
out
lea
xchg
xor
sbb
xor
push
mov
pop
cmp
cmp
or
outsb
addr16
adc
jle
outsb
or
icebp
mov
xor
and
out
dec
out
into
sahf
xlat
push
mov
dec
fsubr
rcrb
sub
in
imul
xchg
inc
mov
rcll
jp
and
mov
fdivs
pop
lret
dec
mov
mov
mov
push
jl
sub
sbb
push
cmp
test
mov
pusha
sbb
pop
dec
sub
cmp
pop
push
test
or
mov
adcl
pop
fcmovne
cmpsl
rolb
mov
ja
add
mov
cmp
or
inc
pop
outsl
lret
stos
jl
out
rorb
enter
aaa
xchg
insl
push
leave
sub
lods
sub
in
or
mov
in
add
inc
out
mov
inc
in
add
push
jp
mov
jle
loop
xchg
add
dec
jl
daa
adc
pop
push
xor
aas
inc
lods
jmp
sahf
aad
lods
aam
test
ret
sub
adc
insb
jge
cltd
fiaddl
xor
inc
std
pop
insb
imul
mov
xchg
xor
and
cmp
aaa
iret
push
add
hlt
add
adc
scas
inc
xor
jle
dec
dec
addr16
mov
push
mov
inc
leave
pop
shlb
or
mov
xlat
sub
sbb
inc
aas
cmp
popf
idivb
mov
in
pusha
xorl
sti
imul
dec
push
les
and
in
les
in
xchg
stos
shrl
add
cmp
or
loope
sbb
inc
inc
fidivrl
jl
repz
pop
imul
xlat
cmpsb
add
push
push
xchg
xor
mov
and
mov
inc
sbb
adc
or
mov
jbe
lock
pop
add
int
dec
addb
ds
imul
cmp
andl
popf
sub
pop
mov
pop
cmp
stc
cltd
popf
jl
clc
xor
xor
inc
pop
or
xor
scas
je
xor
dec
lea
in
repnz
cmp
mov
test
add
sub
imulb
sbb
sub
cmp
mull
bound
mov
sub
push
in
jmp
mov
xchg
pop
xchg
cli
xchg
or
cmc
sbb
mov
insb
jns
mov
sbbb
adc
jbe
or
stos
testl
cmp
push
sbb
jno
push
pop
fnstcw
mov
pop
jecxz
and
sbb
pop
test
jo
dec
ret
in
add
mov
daa
dec
cwtl
sub
aad
out
push
cmp
sahf
shll
sub
mov
outsb
inc
pop
fldcw
cmc
das
movsb
stc
fidivrs
xor
xor
out
mov
ret
add
shll
xor
mov
js
dec
sub
mov
inc
daa
in
ficomps
inc
loope
xor
scas
arpl
mov
ds
inc
cmp
inc
sbb
mov
out
clc
loope
jae
mov
jne
fistps
inc
push
mov
push
loope
mov
sbb
int3
xchg
mov
jle
sahf
adc
sub
sti
sub
and
mov
jno
sbb
icebp
iret
lods
jns
repz
or
inc
sar
xor
pop
cmpsl
int
xchg
in
ret
sbb
cmp
pop
cmp
incl
out
mov
pop
mov
fdivl
divb
aad
sarl
lds
sbb
adc
inc
xchg
cli
leave
in
adc
pop
clc
fdivs
cli
mov
pushf
fdivrp
dec
lds
rorl
scas
and
imulb
cmc
mov
stc
xor
fwait
push
xor
jmp
insb
je
fwait
dec
insb
insb
add
movsl
jae
dec
jge
or
mov
pop
sti
add
pop
dec
fs
shr
mov
pushf
pop
adc
cmp
or
push
fmulp
xor
clc
test
loop
inc
jp
loopne
jge
hlt
jne
inc
fwait
push
sti
fnstsw
fcoml
push
pushf
testb
pusha
repnz
loopne
pop
xchg
adc
xchg
bound
sub
or
in
add
lods
push
adc
mov
or
pop
pop
pop
mov
notl
mov
xor
and
test
lcall
dec
imul
xor
mov
or
pop
sar
sub
mov
and
xchg
sti
dec
jg
and
mov
add
xlat
sbb
daa
pop
mov
fsubr
inc
adc
stos
rclb
inc
mov
push
or
fsts
mov
je
or
dec
lret
fisubl
inc
in
outsl
dec
or
xor
cli
cwtl
xor
in
adc
xor
and
xchg
mov
cltd
cltd
or
popa
cli
jns
xor
inc
mov
mov
call
xlat
mov
mov
sub
fwait
pop
lcall
sti
xlat
mov
lret
jno
pop
rcr
loop
shrl
mov
ss
jle
lea
cmp
sbb
adc
inc
fdivrs
mov
xchg
into
popa
arpl
cli
out
imul
add
out
cmp
nop
fidivs
lods
cmp
push
out
jo
movsl
lret
push
icebp
sub
ds
cli
fistl
js
roll
cli
mov
call
jmp
popa
cltd
mov
and
and
ss
mov
xchg
movsb
dec
mov
aas
pop
and
jecxz
mov
or
rcr
xor
enter
mov
lcall
adc
pop
jbe
aam
fiadds
mov
stc
inc
push
pushf
sub
in
gs
add
adc
rclb
js
lock
in
mov
jmp
fs
pushf
shrl
jbe
ljmp
popa
clc
cwtl
es
xor
repnz
fisubrl
push
daa
enter
dec
dec
sbbl
sbb
add
ss
das
xchg
dec
pop
sub
cmp
inc
popf
mov
insl
mov
cmp
mov
and
mov
ds
jno
xchg
pop
pusha
jno
loopne
fcmove
je
fcompl
dec
xor
pushf
or
push
fcmovu
cmp
scas
push
lcall
cmp
scas
cmp
dec
push
clc
mov
loop
xor
adc
inc
pop
dec
jecxz
jnp
loop
xlat
or
outsl
push
push
xor
ret
lret
lds
mov
dec
sahf
adc
push
fcmovnbe
mov
call
pusha
lcall
xor
invd
sbb
mov
dec
xor
cs
imul
mov
shrb
out
fldenv
aas
mov
mov
sub
sub
fisubrl
inc
lret
sbb
or
xchg
pop
stc
popf
dec
insl
fnsave
mov
xchg
jmp
push
mov
adc
cmpl
mov
cmp
jle
or
dec
imul
fstp
sbb
int3
lock
repnz
sub
lret
mov
lcall
sbb
testl
pop
cmp
or
pop
pop
xlat
pusha
and
cmp
jp
fcomi
cmp
mov
testl
xchg
pop
divl
ja
movsb
pushw
mov
pusha
mov
sbb
stos
lret
push
cmp
sbb
std
arpl
adc
lea
adc
mov
movsl
jg
pusha
pop
fmuls
xor
out
or
sub
cmp
mov
or
add
lcall
mov
jne
aaa
ljmp
add
or
ror
mov
xor
and
mov
cmpsl
fnstsw
cmp
sbb
push
mov
mov
and
jl
mov
insl
or
mov
pop
test
cmpsb
jne
mov
dec
mov
and
mov
or
popa
mov
push
jle
lock
or
daa
ja
pop
jo
out
inc
inc
in
es
xor
cmp
inc
xor
mov
pop
js
mov
and
xchg
inc
sbb
push
dec
mov
sti
mov
sub
sbb
pop
movsl
mov
stc
or
ss
jmp
xchg
and
inc
and
iret
push
sub
xlat
push
test
inc
and
int
dec
pushf
pop
push
int
add
dec
inc
push
lahf
int
mov
loopne
gs
dec
cmpsb
inc
xchg
sub
fldcw
xor
dec
loopne
push
divl
add
jo
inc
adc
push
push
inc
cs
sub
sub
or
pop
jg
mov
inc
jmp
mov
push
loopne
pop
cmpsl
mov
out
add
xchg
and
push
addr16
jge
mov
add
test
int3
xchg
jbe
add
and
push
movsl
xchg
outsb
stc
test
mov
bound
adc
xchg
in
adc
adcl
jb
xchg
fdivrs
xchg
cmp
xorb
push
in
sets
sarb
lret
cltd
or
lret
cmp
cmpsb
mov
arpl
popa
xchg
outsb
push
push
lods
imul
ds
ret
hlt
sub
mov
int3
shl
daa
jg
xchg
insb
test
call
pop
daa
js
lds
into
mov
jle
jns,pt
call
inc
inc
test
movsb
cmpsb
mov
cltd
cmpl
popf
jae
adc
loop
js
lods
push
dec
fistl
and
pop
fisubl
data16
mov
xor
sbb
fcmovne
movsl
sbb
aad
leave
jge
sub
push
add
jmp
setl
out
and
jge
xor
mov
int
cmp
gs
test
mov
stos
loopne
xchg
jmp
lcall
xlat
js
cltd
cmpl
mov
fidivs
jno
cld
outsb
jl
pop
stos
sarb
std
push
dec
adc
hlt
bound
mov
adc
or
dec
std
das
xchg
enter
inc
xor
or
aaa
adc
cmp
cmp
push
fidivs
inc
cli
outsb
in
add
cmp
jecxz
stc
inc
or
push
or
inc
jae
les
mov
aaa
test
mov
popf
sbb
or
xorl
mov
pop
cld
inc
jecxz
sti
mov
push
mov
xchg
or
stos
mov
cwtl
shr
push
cwtl
or
mov
dec
mov
test
aam
nop
mov
pop
jle
scas
and
jne
aad
adc
sbb
leave
pushf
jmp
lea
mov
ret
lock
xchg
xchg
jo
es
inc
mov
lcall
and
popa
mov
clc
fadds
xrelease
inc
stc
popa
add
xor
test
fadds
dec
stc
jne
outsb
adc
sub
out
mov
dec
aaa
dec
cld
popa
aad
push
sbb
inc
xor
lcall
sbb
mov
mov
daa
sbb
scas
cli
cmc
sub
pop
cwtl
test
jnp
icebp
mov
lret
pop
xchg
lret
shlb
push
repnz
test
inc
push
mov
jns
cmc
push
jo
cmp
test
pop
cmpsb
and
nop
fnstcw
xor
jmp
into
jp
push
leave
in
rorb
sbb
and
ja
mov
gs
fwait
jnp
push
or
sbb
fwait
int3
mov
cmp
cwtl
popl
in
ss
push
adc
add
adc
sbb
popaw
insl
cmc
jg
shrl
push
add
lock
stos
lea
push
and
push
push
rcrl
add
sub
aam
mov
pop
and
jmp
xchg
pop
xor
pusha
rcl
das
cmp
sbb
push
xchg
rolb
xchg
add
ret
push
lret
inc
fwait
and
daa
testl
aam
pusha
mov
mov
mov
sub
xchg
mov
popf
pop
inc
in
dec
mov
jo
pop
push
ret
jmp
ja
mov
or
inc
test
les
stc
js
cmpsb
fcoms
std
xchg
mov
xlat
pusha
out
cmpsb
dec
push
mov
jecxz
and
mov
test
jecxz
xchg
mov
push
mov
xor
cmp
xchg
inc
push
jbe
push
imul
in
mov
stc
insb
scas
ljmp
xchg
das
sub
call
pusha
enter
xor
outsb
mull
cli
mov
testl
sahf
or
fwait
out
daa
and
push
enter
xor
das
call
add
cmp
ret
stos
jg
jae
leave
cmp
or
and
and
cmp
mov
xor
mov
in
dec
test
add
stc
dec
repnz
mov
ror
es
rorb
nop
and
mov
xlat
pushf
fstpl
xor
arpl
jecxz
inc
out
inc
cld
cld
lods
orl
je
in
aas
fisttpl
jge
jne
jecxz
lods
inc
test
mov
out
frstor
push
and
xor
bound
pop
sub
jg
jmp
mov
xor
or
jnp
xchg
sbb
icebp
adc
jbe
gs
cwtl
clc
cmp
imul
xchg
pop
inc
and
add
and
sbb
in
das
jbe
divl
mov
cmp
jmp
cld
jge
fidivrs
es
cwtl
movsl
imul
xchg
mov
and
cmpsb
fcoms
and
cmp
xor
jae
inc
movw
xrelease
cmpsl
mov
add
push
push
mov
sbb
cmc
push
and
mov
or
inc
push
dec
xor
dec
inc
adc
and
mov
stos
mov
into
enter
dec
mov
lret
xorb
inc
andl
mov
dec
add
cli
cli
mov
dec
cld
loop
notl
inc
push
dec
push
pushf
push
cmp
mov
lock
push
sbb
pop
xchg
scas
fnclex
test
daa
in
jmp
push
sbb
loop
or
dec
jg
pushf
mov
pushf
or
ret
popa
mov
dec
xchg
add
mov
aaa
imul
add
xchg
cmc
mov
and
sub
cmp
dec
sbb
ret
outsb
aad
call
fdivrs
sbb
sub
or
fwait
xor
clc
sub
movl
dec
lods
stos
fstl
jb
nop
mov
xor
sti
mov
pop
sub
xchg
decb
in
mov
cli
push
xor
dec
fsubrs
mov
push
test
jg
mov
iret
loop
lret
das
mov
push
jle
adc
ja
mov
add
fnstsw
xchg
sub
shlb
and
movsl
dec
sub
inc
test
jbe
inc
in
mov
and
xchg
sar
push
cli
mulb
cmp
xor
xor
sbb
mov
adcb
data16
aam
int3
mov
aam
loope
ret
icebp
mov
push
fcomp
call
add
mov
xchg
std
xlat
mov
shrl
adc
mov
add
into
sbb
cltd
push
xor
push
cli
outsb
mov
xchg
loope
fists
dec
jmp
nop
push
repz
fldl
pop
in
mov
enter
mov
movsl
xor
lock
lcall
ror
ljmp
jae
push
mov
adc
popa
in
sahf
lock
xchg
mov
rcrl
cmpsl
push
jo
sbb
inc
pop
mov
add
and
mov
popa
push
mov
out
loopne
hlt
push
iret
xor
push
inc
and
or
sub
movsl
mov
mov
or
sbb
stc
lock
in
dec
mov
adc
rol
dec
scas
int
dec
mov
inc
cmp
and
mov
push
test
xchg
jbe
sbb
mov
cmp
jl
pop
push
pop
lret
outsb
dec
cmp
test
nop
mov
xor
pop
pop
movl
sbbb
bound
and
sbb
or
enter
popf
jnp
jno
mov
scas
cwtl
pop
adc
inc
jb
xor
xor
hlt
ds
fcmove
sub
fildl
cmp
add
add
adc
out
mov
sbb
or
jge
call
xlat
rorl
dec
cmp
repz
in
xchg
cwtl
jns
stos
orl
mov
scas
mov
fisttps
cmpsl
std
loope
xchg
ds
xor
mov
pushf
test
cwtl
push
sub
sbbl
or
adc
or
bnd
es
pop
and
ret
add
fcompl
push
imul
lret
sbb
dec
iret
mov
loopne
inc
xor
mov
adc
mov
mov
and
jno
icebp
testb
int3
pop
dec
sbb
xor
pop
mov
mov
es
pop
scas
negb
dec
lea
xchg
fldenv
loope
loopne
iret
inc
scas
adc
dec
inc
xchg
sub
mov
movsb
adc
xor
clc
movsb
fcmovnu
js
and
mov
data16
mov
mov
arpl
xor
nop
pop
add
sub
fldenv
xlat
or
mov
popf
push
bound
pop
aas
xor
shl
div
ljmp
add
ja
add
mov
pusha
adc
mov
iret
mov
loopne
je
les
mov
jmp
clc
push
sub
inc
jle
dec
pop
lea
outsl
rolb
repz
pop
aaa
adc
jbe
xlat
mull
mov
loopne
cmp
shrl
or
outsl
fwait
xlat
mov
nop
ja
cltd
fcmovnb
int3
jo
inc
inc
ds
mov
call
sbb
jbe
mov
mov
jge
aad
mov
xlat
and
and
aaa
pop
daa
into
cwtl
mov
fldz
add
and
pop
cmpsl
push
pop
push
cmp
in
cli
jno
inc
bnd
fdivl
leave
jge
ret
test
adc
in
ret
shl
mov
in
mov
stos
mov
inc
pusha
fidivl
insl
add
aaa
imul
pop
mov
stos
pop
sub
sub
mov
cmp
pop
mov
xor
aam
and
cmpl
jge
dec
inc
in
sbb
mov
sahf
or
or
push
dec
mov
pop
mov
out
in
cmp
addl
pop
mov
mov
add
xorl
add
pusha
mov
fmuls
fsubrs
psubsb
shl
push
push
push
negb
int3
mov
nop
and
push
push
scas
repz
add
stc
push
fbstp
mov
ja
outsb
rcrb
mov
xchg
cmpsl
mov
aam
dec
push
sub
or
loope
cld
xor
pop
andl
or
and
in
idiv
xchg
cmc
xchg
xlat
sub
jns
arpl
push
inc
sub
mov
mov
cmp
inc
cltd
sahf
dec
mov
sbb
mov
add
and
fwait
cld
jg
sub
leave
and
gs
mov
repz
stos
add
int3
sbb
add
out
and
dec
jmp
jno
cmc
jnp
adc
jne
add
xchg
stos
cmpsb
fiadds
mov
cmp
popf
jg
jmp
push
je
xor
add
mov
jmp
clc
lcall
pusha
pop
cmc
test
in
in
outsb
add
add
mov
or
movsb
stc
sbb
sbb
sub
or
ret
push
loope
sbb
push
repz
jl
sbb
jo
outsl
lds
inc
punpckhdq
or
cmpb
daa
jne
pop
shrb
rcrw
call
cltd
cmp
ss
and
pop
jg
out
icebp
aad
or
mov
xor
cs
in
in
xorl
movsb
les
popa
int3
int3
add
xlat
or
lret
rorb
adc
pop
sub
xchg
push
in
addr16
scas
mov
sbb
inc
out
mov
das
lods
iret
out
adc
mov
dec
leave
dec
pop
cmpsb
cmp
mov
jmp
sub
fsts
and
sub
dec
inc
mov
and
sbb
ret
cmpb
in
and
popa
imul
sbb
push
iret
call
iret
sbb
push
imul
aas
out
aad
ds
movsb
pop
or
sub
cmp
jp
adc
add
iret
loope
stos
rcr
aam
xchg
cli
push
fisubrs
test
cwtl
test
sub
inc
movsb
inc
mov
add
rcrl
sub
xchg
or
xchg
cmp
dec
inc
repz
xchg
rcrb
stos
inc
push
sbb
jg
cmpsb
add
or
test
cmp
lahf
pop
pusha
inc
in
pop
in
or
stos
adc
mov
jge
rolb
adc
cmp
adc
inc
jl
popf
mov
cli
cld
pop
in
test
inc
pop
aaa
out
inc
aas
mov
push
sarb
dec
adc
es
jle
sbb
rolb
fsubrs
into
pop
add
push
pusha
cli
aad
mov
fmull
enter
dec
pop
inc
in
ror
iret
jmp
or
sbb
rolb
out
enter
lret
pushl
inc
cltd
aad
fldt
aaa
jo
test
mov
loop
in
sub
test
lods
xchg
stc
jp
negb
je
pand
pop
pushf
and
inc
or
adc
or
imul
xor
test
and
cwtl
xchg
jno
lret
dec
popa
or
jecxz
inc
mov
pop
fldenv
mov
jecxz
pop
ret
ljmp
scas
icebp
cs
rorl
insb
push
and
lcall
xchg
imul
addr16
ja
sbb
lods
lret
mov
jmp
outsl
push
jbe
and
lret
cltd
add
cltd
mov
jo
cmpsb
push
sbb
sub
sub
iret
and
outsl
jl
nop
imul
jbe
cmpsl
into
and
addr16
mov
ficoml
adc
addr16
or
jecxz
popf
in
out
je
and
push
loopne
outsl
and
clc
mov
push
mov
jmp
lret
sbb
popf
mull
out
or
notl
shlb
iret
hlt
pop
mov
xchg
sub
in
sbb
call
jo
sbb
sarb
clc
cmp
in
adc
inc
cld
imul
hlt
xor
jns
test
fnop
jg
jae
inc
int3
testl
mov
jp
rolb
cmpsb
cltd
xor
mov
mov
xchg
inc
mov
js
ret
cltd
jg
adc
adc
push
dec
arpl
mov
sub
fcoms
adc
add
push
addr16
adc
in
jg
leave
pop
mov
push
loopne
adc
ret
mov
cmp
jecxz
jo
pop
push
lret
sub
js
shlb
cmp
mov
xchg
jo
ja
repnz
ljmp
sub
orb
mov
adc
or
mov
mov
mov
jmp
or
movsl
adc
xor
xor
icebp
cmp
xorb
cmpsb
movsb
inc
out
jge
mov
mov
in
sub
in
aad
stc
sbb
jb
int
mov
cmp
inc
aam
imull
add
push
lahf
in
jge
arpl
imul
cmp
and
loope
mov
sub
cld
xchg
add
mov
and
or
std
and
popf
dec
int3
pop
loope
or
nop
test
xor
and
add
xor
sar
adc
addl
mov
sahf
bound
fidivl
cmp
push
sub
aam
jge
stc
sbb
enter
rorb
and
pop
push
or
pop
jae
xor
outsb
into
frndint
and
sbb
ret
pop
push
mov
jb
popa
push
mov
xchg
fsubl
leave
mov
jp
mov
mov
fadds
pop
add
sub
jnp
inc
std
sbb
xchg
mov
scas
out
cmp
add
cltd
das
cmp
test
mov
fisubs
adc
in
rol
sti
divb
jbe
pop
lcall
push
cwtl
jb
aad
inc
test
xor
inc
aam
pmaxub
mov
out
lock
sbb
cltd
and
fidivrs
inc
xor
dec
push
cmp
xchg
rclb
mov
sub
dec
lds
sub
add
push
dec
scas
test
xchg
lcall
imul
jbe
and
or
outsb
adc
imull
fistpll
pop
pop
psadbw
mov
mov
arpl
lahf
sub
push
cmp
xorl
xchg
push
or
and
jge
loop
xor
mov
nop
pusha
cmp
add
shrl
inc
mov
mov
andb
adc
pusha
and
aas
call
mov
cmp
mov
and
xor
mov
push
jg
or
repnz
push
xor
leave
mov
pop
icebp
je
push
push
or
mov
xor
lea
cltd
mov
cmp
mov
popaw
mov
xchg
ja
fdivrl
and
sbb
and
pop
cmpsb
leave
notl
xor
je
aaa
jl
xchg
push
cli
out
pop
pop
push
or
mov
sub
mov
xchg
in
in
mov
push
mov
add
ja
aaa
cmp
fimull
sbb
dec
pop
mov
out
mov
mov
xor
mov
in
xor
lods
daa
lock
jno
mov
cltd
sub
gs
js
mov
test
scas
jge
lret
daa
arpl
lds
mov
out
jb
shl
mov
and
mov
mov
andb
jg
push
and
push
outsl
loopne
outsl
push
mov
pop
int
push
cmpsl
or
mov
clc
stos
into
mov
rcr
lahf
mov
mov
fcoml
ss
adc
sbb
adc
jp
aas
xchg
xor
inc
cs
dec
mov
outsb
dec
cmp
test
mov
mov
mov
jmp
mov
pop
mov
inc
adcl
xchg
movsb
xchg
sub
lcall
scas
mov
inc
daa
adc
pop
sbb
addr16
and
push
dec
js
cltd
sub
lret
dec
clc
adc
xor
test
adc
loope
scas
leave
add
cmp
push
sbb
or
out
cwtl
fistpll
xchg
push
mov
push
aad
shlb
lahf
call
push
loope
mov
cld
push
in
cwtl
pusha
imul
cs
test
xorl
and
js
in
jo
and
cwtl
enter
mov
outsl
sbb
mov
lcall
out
mov
fimuls
jne
test
xchg
out
sarl
je
aad
xor
int
lea
outsb
fcmovbe
push
movsb
cmpsl
mov
jge
popf
or
fwait
arpl
sub
add
bound
cmp
mov
xor
mov
and
jbe
andl
lret
sbb
outsl
fwait
imul
sub
xchg
push
pop
sbb
adcl
fucomip
cmpsl
push
pop
xorl
cmpl
fstpl
push
in
lds
adc
inc
fdivl
and
xchg
or
dec
int3
in
mov
push
jb
loop
mov
fistpl
fwait
and
gs
int
jmp
add
aam
pop
xchg
fiadds
push
lcall
pop
push
pushf
adc
pop
jecxz
cmp
ljmp
imul
iret
adc
aas
mov
push
dec
pop
aad
popf
xor
sbb
testl
test
sti
mov
adc
icebp
je
jb
mov
fnsave
jg
push
cmpsl
and
adc
outsb
xchg
movsl
dec
popa
push
fwait
mov
out
mov
xchg
adc
push
hlt
enter
stos
pop
shrb
xchg
mov
cli
cld
jecxz
sti
in
icebp
pop
push
pop
mov
mov
push
adc
dec
cmp
inc
ja
xor
cld
sti
mov
adc
xor
push
shl
or
jae
xchg
mov
lret
lret
jno
lcall
xchg
and
stos
in
lahf
xor
loopne
sub
insb
push
sub
xlat
and
std
sarb
xchg
dec
mov
loope
inc
cs
dec
sub
mov
pusha
fdivrl
cmpsl
out
repnz
jo
aad
fbstp
sbb
fldenv
push
xchg
popf
cwtl
and
or
das
mov
xor
jp
sarl
int3
push
xlat
into
push
imul
icebp
jg
cmp
push
nop
imul
out
push
sbb
scas
scas
roll
inc
xchg
loopew
mov
mov
and
loop
inc
hlt
popa
inc
pop
leave
add
gs
and
das
cmp
jb
movl
in
mov
inc
jae
add
std
or
xchg
mov
imul
aad
vrsqrtss
push
arpl
fwait
dec
int3
daa
push
mov
pushf
mov
pusha
pop
or
insb
pop
pop
inc
xorl
data16
mov
nop
adc
sahf
aaa
adc
pushf
fisubrs
arpl
stos
jge
test
xchg
js
iret
add
jge
cmp
push
and
xchg
inc
cmp
dec
jp
xchg
add
pop
inc
cmpsl
aaa
test
repz
adc
dec
pushl
cltd
mov
and
adc
outsb
mov
cmp
loopne
pop
and
mov
jo
sub
dec
fs
cli
jmp
arpl
mov
out
mov
and
adc
sti
sbb
sbb
push
or
sarl
jbe
fwait
pop
adc
out
addr16
sbb
jae
pushf
xchg
mov
in
test
jo
mov
vpshufhw
jle
lret
sbb
push
into
pop
adc
sbb
and
and
jmp
int3
repz
addl
jp
rcl
cwtl
cmp
jl
test
mov
mov
faddl
imul
sub
ss
test
cmp
fnstsw
add
and
jns
add
ret
inc
lds
insl
aad
clc
mov
pop
push
out
jle
mov
xor
xor
cltd
arpl
imul
push
xchg
mov
adc
pusha
test
xor
jmp
inc
loopne
push
pop
push
shlb
cltd
leave
jns
jle
sahf
cmp
aad
and
hlt
fst
icebp
cmc
insb
mov
test
ret
imul
test
xlat
lea
xor
mov
stos
in
mov
jbe
imul
cltd
cmp
test
lods
xor
push
in
ret
xchg
rol
or
popa
rclb
push
fcompl
mov
cmp
das
or
and
aam
faddl
movsb
cmc
bound
outsl
addl
adc
mov
pop
dec
and
xlat
mov
stos
dec
outsb
mov
dec
lods
sahf
sbb
add
adcl
rorb
lea
into
mov
and
xor
insl
lea
into
mov
movups
jnp
inc
adc
inc
hlt
xchg
sbb
push
scas
decl
ja
sub
sarb
scas
inc
cmc
mov
enter
push
lock
dec
inc
les
xor
enter
lahf
jo
sbb
daa
jp
cli
mov
adc
push
push
and
stos
add
call
js
dec
mov
into
inc
jbe
in
mov
mov
inc
es
mov
adc
movsb
jmp
mov
aaa
imul
or
lods
int3
sub
ret
arpl
xor
popa
jnp
icebp
cmp
fsubl
les
pop
icebp
xchg
xor
loope
ret
jp
dec
cmp
mov
shl
cmc
sbb
pop
mov
dec
mov
sbb
and
pushf
ljmp
inc
aaa
mov
mov
idivl
dec
push
xchg
movsb
cli
dec
sub
leave
subl
je
inc
pushf
icebp
leave
data16
loop
or
push
xor
push
ret
cld
addr16
stos
cmpsb
lret
jbe
cmp
test
jl
imul
xor
in
mov
jle
pop
mov
sahf
jmp
mull
sbb
jg
incb
lock
xor
movsb
addr16
push
repz
scas
mov
inc
sub
repnz
jl
ret
lahf
push
xchg
adc
cmp
divb
inc
fucomi
xchg
or
mov
out
mov
in
je
cwtl
xor
jle
push
adc
sub
outsl
gs
imul
fildl
cmp
cmp
fldl
hlt
mov
addl
push
xor
or
sub
ljmp
push
int3
jecxz
xor
test
pop
andb
mull
add
mov
mov
lea
and
cmpsb
pop
inc
dec
fsubr
sti
mov
ficoml
cld
cli
mov
mov
push
out
adcl
sub
ja
out
push
loop
sbb
hlt
or
fsubr
xchg
in
adc
dec
pop
lcall
jnp
fwait
test
xchg
icebp
add
hlt
cli
out
enter
cmp
imull
filds
cmpsb
inc
in
push
cwtl
cld
addl
fdivrp
inc
xor
sbb
push
ja
leave
test
pop
insl
lret
xchg
cli
xor
out
jbe
fbstp
data16
pop
scas
pushf
cmp
pop
lahf
testb
fdivrl
shll
cmp
out
enter
jo
lds
cltd
push
xchg
out
mov
xor
jb
fdivs
or
jo
jb
arpl
xchg
sbb
mov
movsl
inc
inc
aaa
and
lea
test
or
inc
or
lea
add
pop
cmp
lcall
inc
pop
jae
scas
test
mov
rcr
adc
ficoms
std
add
ss
add
inc
pop
add
xor
mov
loope
icebp
inc
dec
arpl
xchg
das
jae
push
pop
test
mov
mov
push
jno
ret
sahf
sbb
mov
cmp
mov
xor
fisubl
test
test
and
sahf
int3
fbld
imul
leave
into
jl
in
pop
dec
test
add
mov
sub
shrb
mov
repz
pop
pop
cs
jne
mov
arpl
shlb
pop
fwait
pop
pop
push
rcrb
add
popf
leave
adc
cmp
cmpsl
or
clc
insl
icebp
dec
int
xor
mov
lds
xchg
cmp
ret
inc
adc
pop
mov
pop
or
movsb
sub
ljmp
pop
sahf
orl
stc
add
push
xor
xchg
hlt
mov
cwtl
add
xor
lar
into
inc
es
adc
mov
stos
xchg
mov
das
mov
fwait
jecxz
xchg
lds
fwait
in
mov
dec
mov
add
xor
push
add
inc
mov
pop
dec
jl
and
and
dec
cs
pop
cmp
push
fcos
cmpsb
outsl
inc
push
push
ja
mov
into
lods
mov
mov
scas
mov
es
out
sub
shl
popf
dec
push
hlt
mov
ljmp
cmp
cmp
push
mov
adc
pop
push
xor
push
adc
outsl
add
fs
sbb
sub
out
mov
add
push
cmp
and
push
add
xor
loop
in
xchg
xchg
cs
mov
imul
lock
lcall
cmp
rcr
or
jp
dec
pminub
mov
or
and
cmp
test
aaa
mov
inc
mov
rolb
sub
mov
ret
jns
pop
test
jne
and
inc
subb
jle
popf
movsb
stos
and
mov
sbb
sbb
aam
in
ror
pop
in
mov
and
inc
roll
jne
ja
jno
cmc
jnp
clc
push
sbbl
jge
fs
add
push
mov
bound
mov
lods
sbb
push
or
add
inc
int
out
fistps
inc
push
xchg
subb
jb
imul
push
mov
cmp
lahf
in
jg
pop
jns
pop
inc
adc
nop
and
adc
jne
ror
insb
nop
stos
out
inc
adc
dec
adc
lret
ret
xor
adc
shlb
fsub
mov
xchg
dec
jecxz
fisttpll
je
add
inc
dec
push
mov
cmp
xchg
mull
cli
cmp
sbb
mov
mov
stos
push
pop
fwait
addr16
push
and
cmp
jae
push
push
mov
lods
add
sub
dec
cmp
mov
out
iret
mov
imul
mov
pop
jge
adcl
xor
pop
scas
dec
add
fistpll
lea
idivb
cwtl
jb
push
xchg
xor
mov
mov
lret
mov
pop
cmp
pushf
pop
mov
filds
call
inc
xor
mov
bound
mov
dec
mov
rol
xchg
out
mov
sub
or
xchg
or
arpl
cli
bound
xchg
pop
stos
divb
mov
es
or
arpl
sub
sahf
test
outsb
mov
jnp
mov
mov
xor
cmpsb
and
lea
arpl
dec
out
inc
pop
sub
test
dec
mov
xchg
inc
and
sub
fmull
cmpsl
and
icebp
add
xchg
xchg
sbb
mov
clc
jg
idivl
dec
hlt
dec
push
mov
sbb
in
fidivrs
mov
xchg
fadds
cmp
cmc
add
ja
mov
sub
mov
fstpl
jno
cmp
cld
dec
cmpsb
fisubl
xchg
xchg
xchg
out
dec
loop
adc
mov
mov
sub
sbb
cs
xlat
mov
inc
cld
lea
pop
pusha
lods
push
shl
inc
loopne
in
xor
jl
call
cmp
dec
call
pop
jno
into
aad
popa
in
gs
in
in
dec
shlb
movsl
test
jbe
push
lcall
lea
cmpsl
pop
add
mov
stos
push
add
in
jmp
loope
arpl
aaa
and
adc
push
push
mov
pop
xchg
iret
test
cmp
jp
jae
mov
cmpsl
cmp
xchg
inc
lods
outsl
add
push
notl
idivb
pop
and
mov
rcll
or
cmpl
mov
xchg
xchg
sub
hlt
adc
push
fwait
xchg
mov
jnp
lds
mov
lret
xor
stos
inc
andb
add
inc
mov
fdivl
daa
adc
test
jnp
pop
lods
dec
adc
xor
cmp
inc
inc
ja
inc
es
jmp
mov
mov
push
pusha
test
call
push
mov
popa
fwait
mov
lock
movsb
int3
lret
out
leave
pushf
leave
mov
or
fs
rcl
mov
stc
and
jbe
lock
push
pop
jae
jno
dec
xchg
adc
xchg
aad
xchg
pop
add
int
aaa
mov
sub
fistps
add
ljmp
jbe
aad
sbb
cmpl
add
and
je
decb
and
enter
push
jg
inc
cmpb
pop
lds
ljmp
clc
int3
aam
cmpsb
dec
je
xchg
imulb
enter
out
ret
lret
mov
lcall
fwait
hlt
adc
jmp
inc
cmovp
jne
imul
push
aam
cwtl
adcl
int3
test
outsl
test
lea
xor
sbbl
ret
dec
add
lret
xchg
jae
in
mov
stos
lods
mov
dec
clc
jae
jb
add
add
push
pop
scas
hlt
or
push
lods
in
fidivl
push
mov
inc
pushf
jmp
cmp
mov
push
test
or
test
push
fdivrl
fs
aaa
push
in
mov
add
es
repnz
add
stos
xchg
sub
jp
lods
sbb
sub
or
sub
mov
es
jmp
inc
mov
jp
cmpsb
inc
xchg
popa
pop
or
xor
adc
add
inc
sbb
jmp
nop
ss
out
jnp
push
pop
out
loop
jno
daa
mov
push
push
and
xor
jo
sbb
insl
std
lret
test
mov
xchg
cltd
scas
inc
clc
cwtl
int
scas
out
mov
xor
pop
pusha
lret
out
or
inc
add
jmp
leave
icebp
out
xchg
mov
push
sahf
dec
mov
add
adc
push
add
mov
rolb
dec
inc
dec
add
dec
call
and
pop
jae
push
jmp
nop
leave
xchg
or
jg
imul
stos
lock
out
add
jle
jmp
clc
lret
jae
scas
cmp
aam
cmp
es
mov
outsb
cmp
ret
cmp
fwait
pop
enter
jnp
jge
stc
push
bound
push
pushf
xor
call
fwait
cmpb
adc
and
mov
xor
xchg
jo
mov
inc
sbb
mov
mov
adc
cmp
jns
and
inc
movsb
lahf
mov
sbb
jge
lds
lea
fsts
mov
mov
lock
jp
mov
xchg
adc
js
imul
pop
repnz
xchg
adc
testb
les
inc
sbbl
add
int3
pop
rcrl
ja
inc
sbb
xor
sub
sti
repz
pop
imulb
add
xchg
push
jmp
mov
insb
popf
push
mov
mov
cmc
dec
mov
or
mov
lock
fisttps
or
les
and
push
cmp
cs
loopne
lret
jno
pushf
ret
cld
cltd
outsb
mov
imul
xor
stc
in
outsl
inc
pushf
pop
pop
and
test
fildl
pop
mov
inc
xchg
data16
sbb
in
or
fs
xor
icebp
push
xchg
rorl
dec
repz
or
lods
repz
ljmp
data16
xor
cmp
add
lret
sub
xchg
jmp
xchg
fld
jb
jbe
fdivl
pop
out
xor
stc
cmpsb
inc
int3
cltd
lods
lock
mov
cmp
aaa
stc
cltd
pop
mov
dec
test
fldcw
ljmp
loope
dec
sub
lret
fiadds
out
test
hlt
dec
ret
cmp
shr
inc
out
in
xor
inc
xchg
jno
push
jae
mulb
fbld
pop
in
and
push
int
repnz
xchg
fildll
insl
cli
ds
xor
fstpt
sbb
jle
sub
inc
jae
mov
cmp
jecxz
sti
mov
or
inc
fs
ret
sub
sub
cmc
dec
in
scas
xchg
xchg
mov
lret
jle
push
mov
mov
pop
or
out
inc
mov
mov
push
es
xor
lcall
cmp
push
out
xchg
add
mov
xchg
or
cs
add
mov
and
push
movsl
dec
adc
xor
aaa
jg
fstpl
int3
imul
push
fmulp
push
add
pusha
shl
ja
adc
inc
pop
mov
jb
sti
daa
shl
cwtl
or
fmulp
add
ret
sti
add
sbb
inc
stos
iret
std
push
scas
bound
adc
test
hlt
jmp
jecxz
ja
adcl
xor
mov
mov
fwait
inc
xchg
sub
insl
jo
inc
mov
jle
rcr
jns
int3
fsts
xor
adc
pop
ds
dec
or
fnsave
enter
lret
mov
or
addl
sarb
cmp
test
bound
and
jecxz
lea
fcomps
jg
rcrb
sbb
add
jae
andb
or
push
cmc
mov
nop
rclb
push
in
imul
rorb
pop
push
xor
mov
cmp
bound
ret
and
lea
outsb
push
ret
aaa
inc
xchg
sarb
sbb
jmp
call
addr16
jb
and
inc
sarl
in
lea
jae
pop
push
das
mov
xlat
mov
mov
jecxz
jmp
mov
fstpt
outsl
sarl
daa
add
popf
cwtl
pop
mov
clc
xchg
cmp
stc
sarl
cmp
js
loop
nop
mov
jp
push
aas
out
outsl
add
mov
and
mov
add
jae
gs
js
out
mov
mov
sub
mov
out
into
enter
pop
mov
sbb
lea
adc
ds
dec
cmp
out
orb
and
cld
sbb
test
inc
xor
lock
sub
mov
sub
jbe
lcall
jp
mov
jb
test
push
shrb
adc
cmp
mov
sbb
push
and
ja
loop
pop
jl
out
adc
mov
xor
andb
fdivrl
mov
ljmp
cmp
push
call
call
pop
and
and
insl
lock
mov
sub
sub
and
call
jno
repz
inc
jge
sub
xor
push
jge
cmp
mov
addl
xor
inc
jmp
add
xchg
add
mov
dec
cltd
sbb
ljmp
pop
add
fimuls
pop
push
mov
xor
sub
aam
imul
jns
in
popf
stos
lock
push
sbb
jne
fadds
int3
hlt
adc
sbb
int
sub
daa
xchg
sub
sub
inc
pop
mov
sahf
add
dec
orl
repnz
mov
vmovntpd
pop
pop
shll
pop
add
je
sub
add
in
mov
pop
int
rolb
pop
jge
ss
or
insl
or
mov
mov
mov
adc
mov
push
aas
mov
mov
pop
insb
xchg
andl
adc
xchg
mov
adc
push
jp
decl
test
adc
sbb
aaa
dec
jb
adc
jb
fs
repnz
scas
mov
ja
test
scas
shrb
mov
aas
adc
xor
and
aad
mov
in
movsl
cmp
je
inc
xor
fildl
imul
mov
bound
sti
repz
adc
mov
xor
js
outsb
dec
jmp
ret
xchg
sub
scas
nop
jo
fs
insl
divl
push
xlat
out
dec
mov
mov
xchg
pop
pop
pop
adc
inc
movsl
jle
jg
icebp
xchg
xor
adc
in
popa
add
jae
dec
test
aaa
cs
cmp
sub
xor
push
push
cmpsb
addl
mov
push
roll
push
cmpb
ss
stc
lea
pop
mov
stos
scas
and
movsb
lcall
test
mov
push
in
inc
es
adcb
mov
xchg
jb
pop
xor
pop
stos
imul
inc
pusha
mov
mov
xchg
faddl
cmp
pop
vrsqrtps
das
jge
ds
std
pop
xor
push
in
dec
inc
in
push
add
add
arpl
sub
xor
outsl
mov
lds
mov
mov
mov
jle
out
sub
nop
pop
iret
pop
fcoml
nop
mov
adc
push
jo
cld
push
scas
repz
ljmp
imul
jle
cmp
dec
mov
xor
test
jo
add
nop
repz
xchg
bound
mov
out
fistps
out
jl
sub
aad
push
loopne
push
mov
mov
mov
add
mov
xor
mov
es
xchg
sbb
dec
inc
add
pop
mov
iret
fsubrs
movsb
pusha
push
ficompl
into
popf
pop
xchg
fcmovbe
aam
mov
fdivl
shll
loope
dec
loop
mov
inc
or
mov
inc
cs
cmp
arpl
add
mov
bound
mov
inc
push
mov
xchg
dec
adc
fsubrp
mov
and
popf
ljmp
jno
dec
sub
cmp
xchg
and
cmpsb
test
mov
cmp
sar
call
add
adc
test
push
data16
cs
fstl
adc
inc
stos
out
sar
xchg
into
lock
mov
loope
inc
fisttpl
mov
xor
push
mov
cmpb
sbb
inc
xchg
push
dec
shr
sub
leave
mov
sbb
inc
xchg
adc
xchg
insl
pusha
and
pop
jnp
adc
pop
dec
pop
push
sub
inc
cmp
mov
xor
int3
add
punpcklwd
pop
xor
mov
add
mov
cli
cltd
mov
add
or
jnp
jge
mov
in
movsb
pop
inc
mov
push
xchg
push
rcll
icebp
mov
mov
iret
pop
jbe
popf
lret
add
push
push
xchg
rcrl
fdivrp
mov
adc
es
pop
rolb
pop
testb
add
cmp
sub
sarb
cld
sub
test
sbb
and
jns
xchg
fisttps
enter
jecxz
nop
jecxz
push
push
mov
jl
aad
cmp
push
mov
iret
mov
mov
pop
dec
movsb
jge
mov
add
je
mov
rorb
popf
push
xchg
test
in
mov
lcall
inc
loope
xchg
sub
loop
mov
and
ljmp
int3
dec
out
leave
jbe
movsl
shlb
or
out
inc
lods
mov
scas
push
xor
cmpsb
insl
push
imul
dec
int3
je
in
pusha
adc
cs
test
loop
scas
icebp
mov
jmp
aad
jle
sbb
xchg
jp
push
mov
xchg
push
dec
mov
or
pop
aas
sbb
arpl
cmp
or
push
jecxz
jp
pop
addl
xor
test
xlat
ljmp
xchg
sbb
in
je
cmp
repz
imul
sbb
mov
les
xchg
pop
shrb
push
bound
in
mov
fists
cmp
or
and
std
and
jnp
pop
fldt
stc
jo
fxam
xchg
sti
or
les
xor
xor
pop
aaa
xor
ret
icebp
inc
adc
insb
jp
cmp
lods
in
repnz
mov
sbb
int
xor
sub
cs
and
xchg
decb
jecxz
cmpsl
cs
loopne
mov
mov
sub
adc
cmp
inc
or
pop
add
mov
addb
dec
adc
add
out
inc
sbb
push
icebp
out
xor
xchg
gs
inc
out
push
push
call
movsl
add
mov
mov
fs
out
mov
cltd
jmp
mov
nop
out
push
int
sub
jp
xor
ret
in
jge
adc
or
lods
lods
loope
and
out
sub
pushl
jge
sbb
out
das
pop
mov
iret
fnstsw
pop
pop
dec
lret
lods
xor
dec
js
fdivl
jecxz
xor
and
outsb
shrl
dec
cmovb
dec
xchg
lret
imul
scas
ja
mov
rcrb
adc
mov
mov
sbb
mov
and
repz
and
les
movsb
shrl
rcrb
cmpsb
xor
shlb
fmuls
scas
rclb
clc
dec
inc
fsub
dec
cmpsb
add
lds
inc
scas
ret
sub
ficomps
rclb
jns
popf
sub
es
into
dec
or
jno
xchg
cmp
rclb
loope
and
adc
inc
mov
ret
daa
sub
int3
es
xor
fists
pop
lret
add
pop
sbb
enter
pop
mov
sub
or
popa
bound
pop
inc
push
cli
adc
or
cld
push
cmpsl
pop
jge
fbstp
xchg
push
or
out
sub
loop
lods
push
mov
jbe
in
xchg
pop
dec
scas
or
pop
loop
gs
xchg
fisttpll
cmpsl
push
jg
test
insl
inc
loop
sub
andb
add
adc
mov
aam
lret
add
pop
movsl
ljmp
loop
je
sub
sbb
test
mov
fs
dec
in
cmp
nop
mov
sahf
rclb
ret
ret
inc
pop
pushf
rcll
pushf
cli
outsl
lahf
mov
cltd
xor
jno
in
push
dec
cmpsb
cmp
fwait
xor
ret
mov
xor
sbb
jg
rorb
pop
jg
sbb
xchg
adc
out
dec
jecxz
in
notb
pop
dec
leave
es
dec
cmp
sub
push
push
dec
filds
pop
sbb
cwtl
lock
std
iret
add
mov
aad
in
std
enter
js
stc
mov
add
or
push
jmp
js
pop
sbb
fwait
out
or
notb
and
jle
xor
pusha
in
pop
mov
sbb
or
sub
xor
in
enter
movsb
inc
jmp
call
sub
mov
or
lds
outsl
push
out
xchg
and
inc
adc
idivb
xchg
sub
jae
add
dec
popa
ljmp
jns
and
mov
cmpsl
insb
adc
xchg
cli
push
testb
jb
cmc
sbb
sbb
dec
loope
cmc
je
cmp
adc
insb
shrl
lea
jmp
mov
incl
test
dec
sub
adc
inc
lods
mov
scas
mov
scas
sbb
and
nop
push
imul
pop
inc
jle
push
lret
movsb
int
jmp
repz
pop
mov
roll
hlt
mov
mov
cmpsb
mov
loopne
pushf
mov
and
imul
inc
xor
xchg
fbld
or
into
dec
faddp
sahf
inc
cli
adc
mov
push
or
sahf
xchg
and
cmpsl
clc
xor
test
jl
xchg
lock
mov
testb
mov
shrb
mov
test
pop
scas
sub
jecxz
andb
mov
mov
in
dec
mov
and
lahf
pushf
dec
test
add
ljmp
aas
mov
xchg
jl
insl
xor
iret
daa
xchg
dec
idivb
lock
mov
std
xor
test
andl
fdiv
mov
inc
adc
insl
fidivrs
inc
ja
ljmp
push
dec
push
stos
inc
mov
xchg
push
clc
cmp
sbb
adc
jbe
movsl
cmc
outsl
or
das
popf
mov
inc
mov
into
jns
pop
orl
incb
sbbl
jb
xor
ficoms
outsl
sahf
ss
sbb
fcomi
sahf
arpl
daa
push
mov
ret
int3
in
mov
or
cmp
mov
gs
into
sbb
ja
pop
jnp
jb
sub
jcxz
mov
iret
insl
lods
sub
adc
test
adc
adc
shrd
movsl
or
in
ffree
jmp
inc
adc
pop
rcll
call
bound
outsb
mov
cli
push
iret
scas
and
or
das
mov
push
int3
out
in
mov
xchg
in
mov
shl
std
decl
aas
int
cmovbe
mov
aas
mov
jno
pop
mov
pop
stc
xor
js
out
insl
sub
inc
stc
hlt
xchg
adc
sti
stc
mov
in
jno
lods
cmp
hlt
push
pop
imul
lahf
or
das
mov
xchg
or
fiaddl
or
in
lret
test
or
push
cmp
mov
mov
mov
mov
pusha
push
cmp
cmp
ret
sarb
mov
jg
cmp
out
ljmp
nop
xchg
loop
js
jp
add
sbb
add
test
xor
xor
mov
mov
push
mov
lret
fst
stos
adc
mov
int
pop
pop
iret
cld
or
testl
std
cmp
loope
jl
mov
fidivl
divl
dec
inc
sbb
mov
lretw
xchg
sbb
cmp
mov
dec
adc
mov
jl
loop
push
jg
dec
dec
icebp
sub
cmp
je
loopne
or
fdivrs
testl
xchg
sbb
icebp
insb
and
fwait
push
inc
int
test
out
lods
fsubl
push
and
mov
lret
jo
fbstp
flds
shll
sub
xor
ret
out
stc
ja
xchg
insb
ds
mov
push
shrl
add
xlat
aad
mov
jae
jmp
mov
adc
fwait
loopne
push
xchg
pop
shrb
jb
in
add
mov
pop
lock
cmp
or
movsb
or
xchg
sub
cmp
add
and
add
xchg
cmp
mov
xchg
inc
mov
mov
pop
add
inc
lahf
les
mov
add
inc
leave
arpl
jmp
sub
imul
pushf
mov
subl
les
sbb
mov
iret
test
inc
inc
mov
xchg
ret
addl
sbb
and
push
cmpsb
mov
aad
aam
arpl
cs
mov
rcrb
stos
out
mov
add
cmp
sbb
push
lcall
or
push
pop
mov
adc
dec
dec
mov
push
xor
mov
insl
mov
test
lret
adc
jns
jge
dec
inc
cwtl
scas
cld
mov
push
fimuls
arpl
or
enter
test
mov
cs
pop
ret
mov
repnz
movsl
push
fsubr
repz
sub
xor
sub
sbb
xor
cmp
pop
adc
into
jbe
xchg
xchg
push
mov
jmp
sub
orb
mov
pushf
jne
pop
push
addr16
imul
mov
inc
rolb
arpl
mov
sbb
adc
sbb
push
mov
imul
adc
outsb
aam
mov
or
fucomp
xchg
adc
call
and
cmp
test
inc
push
fidivs
ret
movsb
adcb
ds
or
cltd
push
loopne
mov
sub
int
ja
loop
adcl
jg
mov
inc
js
lahf
sahf
lret
ja
imul
lods
inc
test
adc
mov
mov
pop
imull
mov
push
xchg
mov
cwtl
mov
xchg
sbb
test
jb
je
sarl
insl
sub
out
roll
je
rclb
xor
sub
test
out
fnsave
inc
cmpsb
out
or
les
int3
sbb
jl
pop
fwait
jge
adc
fiaddl
stos
test
push
inc
push
ljmp
push
rorl
sbb
loop
repnz
aam
jbe
inc
imull
and
das
push
inc
fidivrs
mov
mov
push
cld
jnp
pop
dec
adc
mov
xchg
mov
xchg
ljmp
ret
push
inc
pop
and
loope
pop
imul
pop
and
test
mov
mov
mov
aam
adc
sbb
push
rcll
jmp
mov
icebp
test
out
xchg
cmp
sub
jb
imul
cmp
mov
push
mov
cld
or
call
jge
mov
push
aaa
and
adc
scas
add
inc
sti
dec
pop
push
les
adc
cmp
cmp
xor
jne
mov
sub
pop
clc
mov
xchg
xor
mov
mov
jbe
mov
fwait
xchg
test
jmp
push
push
or
sub
lcall
daa
and
cmp
outsl
or
adc
push
dec
sub
shrl
out
push
shl
sub
pop
mov
loope
bound
idivl
mov
add
xor
sti
je
inc
ret
xlat
cli
sbb
mov
loopne
mov
sbb
add
jo
les
mov
sbb
cmp
jge
fsubl
aaa
in
int
call
iret
imul
aad
push
jae
int3
fwait
and
pop
jns
imul
outsl
pop
cmpsl
dec
inc
or
and
iret
pushf
jo
lea
cmp
mov
stos
in
sbb
inc
xor
sbb
xchg
movsb
mov
xor
sahf
adc
icebp
mov
test
js
mov
add
mov
sahf
scas
ja
and
popa
sub
lahf
cmp
das
ja
jb
jmp
xor
aas
xor
in
imul
subb
sbb
adc
mov
mov
and
movsb
in
adc
in
jae
cmpsl
or
inc
cwtl
jno
movsl
andl
outsl
int3
stos
push
add
mov
jge
adc
mov
xchg
stos
ss
addl
ja
jbe
push
inc
mov
imul
insb
mov
push
jge
mov
lods
mov
pusha
xorb
cld
addb
push
mov
arpl
daa
add
sub
ret
or
int
pop
push
mov
insl
aam
sub
xchg
pop
push
lea
cmp
jecxz
cs
movsw
dec
loop
movsb
sti
lods
sbb
subb
and
and
adc
jmp
mov
xchg
mov
iret
xchg
lds
sti
dec
std
cmc
jg
sti
outsb
iret
mov
xchg
push
dec
push
pop
add
inc
es
push
shl
not
sbbl
sar
push
and
aas
pop
cmc
les
push
outsl
pop
jo
lock
rcll
xchg
out
cmp
lahf
pusha
aaa
push
lea
push
and
popf
aaa
inc
jge
mov
inc
or
int
mov
jecxz
push
mov
stos
xor
arpl
shlb
push
aam
pop
loopne
mulb
push
lea
pop
les
test
cmpb
and
adc
lahf
mov
enter
dec
mov
cwtl
mov
jp
push
add
fistps
scas
or
sbb
and
cmp
add
or
js
std
bound
movsl
or
mov
pusha
fisubrl
out
loop
sbb
sub
jg
adc
sbb
dec
add
imul
mov
sub
adc
fistpll
mov
in
jno
mov
push
sbb
cwtl
sbb
pop
xchg
dec
ret
mov
dec
dec
inc
leave
fs
rcl
mov
cmp
cs
gs
cmp
jb
xor
loope
pop
lret
jns
movsl
inc
push
xchg
pop
adc
not
sbb
mov
loopne
jbe
mov
push
dec
out
inc
cwtl
xchg
and
enter
sbb
adc
and
sbb
fcoml
clc
xchg
mov
iret
sub
call
in
jo
mov
lahf
pop
pop
jae
mov
add
insl
cs
hlt
mov
mov
dec
test
pop
cli
pushf
mov
cmp
cltd
js
stos
pop
xlat
dec
outsb
and
cmpsb
dec
pop
adc
xor
sub
xor
mov
pop
imul
mov
out
xor
mov
mov
test
movsb
fadd
pop
push
mov
sub
shrl
or
jmp
xchg
fwait
ss
cmp
int3
test
test
jne
in
test
mov
dec
lret
mov
sub
mov
pusha
add
dec
dec
xchg
lods
mull
mull
adc
mov
lret
pop
push
jno
movl
imul
sarl
pop
call
cld
and
xchg
lcall
ds
mov
aaa
lret
xchg
xchg
add
lds
data16
mov
lret
out
jecxz
loopne
lret
repz
scas
jg
adc
imul
decb
fxam
adc
pop
mov
cwtl
jg
pop
jge
and
rorl
pop
lret
addr16
mov
inc
xor
add
ja
xor
loop
cmp
ss
sahf
lret
das
rcll
out
test
je
ret
mov
jmp
stos
adc
jb
aas
call
ficoms
cli
mov
outsb
cmpsl
cmpsb
or
sbb
js
aam
or
idivb
es
bound
inc
test
ja
loop
jb
movsb
insb
and
clc
jl
and
add
dec
add
ret
jecxz
dec
jp
add
test
push
fisubl
cli
mov
inc
xor
imul
push
imul
xor
je
push
push
dec
sub
sti
je
jno
and
fisubrs
push
pop
cltd
xchg
dec
or
jmp
pop
insl
scas
fcom
cmp
mov
imul
xor
insl
stc
push
idivl
pop
mov
daa
dec
mov
fs
stc
adc
inc
pop
imul
cmp
test
push
jno
or
into
outsb
lcall
div
callw
add
in
mov
pop
stos
inc
dec
xor
pop
fs
pop
or
xor
in
sub
xchg
xchg
and
xchg
and
data16
push
cwtl
movsl
jle
lods
inc
es
push
in
mov
xor
mov
outsb
in
int3
jge,pt
in
je
jo
inc
andl
rcll
rolb
ficoms
int3
std
aam
adc
test
test
add
inc
sti
test
or
push
jecxz
inc
test
aad
mov
and
adc
sahf
lahf
in
pusha
sahf
pushf
and
mov
popa
sbb
dec
and
mov
and
cmp
push
cmpsl
pusha
clc
scas
mov
hlt
mov
lldt
fbld
sbb
xor
push
std
int
repnz
fists
pop
push
test
sub
bound
sarl
cld
sahf
mov
add
daa
rcl
outsb
adc
push
adc
and
add
mov
sbb
add
sbb
in
pop
movsb
jmp
inc
shr
cs
sub
and
lret
jmp
cmp
cli
push
mov
cwtl
jnp
inc
dec
std
add
jle
scas
jl
lock
sarb
add
lds
in
mov
cmp
out
enter
rcr
movsb
pop
inc
ds
aam
mov
inc
scas
rclb
push
ds
mov
sbb
les
aad
inc
jecxz
push
icebp
push
mov
mov
movl
ljmp
jns
cmp
insl
xchg
dec
inc
push
inc
push
fcomi
loopne
xor
add
inc
push
leave
inc
jp
mov
jge
in
jmp
push
into
stos
cltd
jecxz
push
fcoms
jae
pop
test
arpl
push
lcall
movsb
negl
fs
je
rcr
sbb
aam
or
mov
sbb
dec
cmc
jp
or
mov
scas
mov
push
cmp
ss
cwtl
sbb
ljmp
mov
jmp
lret
movsb
cmc
cmc
movsl
add
and
mov
xor
loope
out
fcoms
adc
je
push
jbe
idivl
sub
je
in
inc
ds
enter
mov
inc
jge
jle
filds
nop
pusha
xor
test
add
and
jns
pop
push
xor
mov
ljmp
xor
dec
aam
scas
pop
arpl
push
jp
mov
ds
and
lods
bound
xchg
ss
outsb
aad
mov
outsl
loope
cs
xchg
mov
std
and
ret
jg
inc
pusha
add
imul
lods
push
mov
lock
push
scas
mov
pop
dec
jle
jns
mov
imul
mov
pop
sarl
aaa
addr16
leave
dec
push
punpckhwd
js
mov
lock
lret
mov
xchg
je
call
sub
notb
pop
shll
fsubrl
and
dec
pmulhw
iret
ja
adc
ljmp
loope
cmpsb
and
lcall
insb
sti
dec
adc
sbb
sbbb
mov
aad
loope
dec
std
xchg
sbb
rep
aas
jae
cmp
subl
mov
cmp
push
movsl
add
adc
push
sti
pop
cmp
shlb
lds
mov
lcall
inc
pop
fmulp
por
pushf
mov
sbb
push
jl
movsl
pop
and
xor
xor
xor
mov
call
test
adc
jb
loopne
mov
sbb
dec
in
xchg
inc
lret
sahf
hlt
xchg
jl
inc
insb
hlt
hlt
xchg
pop
arpl
enter
mov
gs
scas
andb
imul
shll
mov
das
scas
jb
in
pop
jle
imul
inc
pop
mov
repz
pop
pop
leave
fldt
lret
cmp
sbb
xorl
ret
outsb
test
xor
push
dec
push
lcall
xor
dec
scas
in
out
test
inc
and
adc
lds
repz
hlt
sti
mov
fiadds
inc
and
popf
jp
ja
jne
fnsave
ret
cmp
insl
add
es
sbb
fcmovu
lcall
dec
jge
mulb
int3
ret
hlt
jnp
lock
inc
ja
push
sub
pop
loopne
push
popf
ja
adc
movsl
into
aam
sahf
cld
mov
sub
and
dec
enter
jb
ljmp
out
add
frstor
idivb
xor
add
stos
mov
push
xor
jle
out
jae
sti
sub
sub
scas
shr
or
dec
mov
out
jo
cwtl
sub
popf
stc
ds
lds
mov
sbb
clc
sbb
and
push
std
in
jecxz
inc
xchg
xchg
ja
push
insb
mov
sub
je
daa
add
xchg
aam
mov
xchg
mov
mov
mov
int
fs
in
mov
dec
mov
call
gs
xchg
sub
cs
adc
cmpsb
pop
imul
sbb
fdiv
divl
jecxz
sub
in
jecxz
dec
dec
jecxz
imul
jg
lcall
cmp
movsb
sub
in
mov
lret
sub
mov
mov
and
push
jnp
cmp
pop
nop
mov
fildll
add
pop
mov
mov
call
inc
jle
mov
inc
stos
dec
add
mov
aas
push
inc
aad
ja
sub
jge
xchg
insb
and
sub
add
mov
and
dec
add
jge
scas
mov
lahf
mov
push
mov
jne
testl
arpl
pusha
div
xchg
ret
es
sbb
outsb
or
cmp
xchg
mov
push
mov
pop
mov
test
push
icebp
push
ja
shrl
jno,pt
jecxz
adc
fdivs
insb
les
lret
stos
xlat
xlat
int
and
dec
push
xchg
popa
add
iret
sbb
push
push
dec
adc
mov
or
push
mov
in
test
mov
pushf
or
repz
push
sub
jne
pop
dec
xchg
jbe
or
add
ret
es
cmp
add
push
jno
ret
in
and
les
sti
cltd
jmp
lret
outsl
inc
mov
cmp
inc
jno
pop
dec
jl
and
jbe
mov
aam
add
ss
hlt
jmp
sub
lods
lahf
sub
inc
push
ret
movsb
jns
bound
pop
repz
push
mov
adc
dec
mov
push
xor
fwait
xor
flds
push
push
sbb
sub
or
push
xor
mov
pop
and
sub
in
jg
xchg
les
mov
insl
push
cmp
push
ficoms
jo
aam
pop
adc
jns
cmc
sub
sub
lds
clc
ljmp
movl
mov
stc
scas
fwait
ja
stos
push
rcrb
je
shll
sbb
aas
rorl
pop
mov
and
cmp
pop
and
cld
loop
jecxz
scas
pop
cs
jae
inc
jo
pop
sbb
mov
push
repnz
dec
adc
xchg
hlt
sub
and
pop
mov
adc
notb
pushf
and
je
push
jae
push
icebp
ljmp
mov
pop
and
icebp
cmc
aad
dec
scas
fwait
adc
in
dec
dec
into
cmp
enter
cli
test
leave
idivb
fdivl
add
push
shll
call
jae
pop
jb
aas
sbb
lahf
lcall
mov
arpl
lds
cmp
mov
jg
outsb
push
mov
in
mov
push
lcall
stc
das
dec
loopne
pop
rorb
and
and
cli
sub
fdivl
xchg
insb
insb
bound
or
cli
push
or
insl
cli
adc
pusha
int3
xchg
pop
outsl
inc
pushf
mov
pop
jmp
xchg
mov
lcall
bound
jo
dec
in
or
or
dec
jmp
ret
dec
mov
xor
mov
es
pusha
jp
mov
cmpsl
dec
pop
rol
faddl
jns
mov
repnz
add
and
loope
mov
loope
imul
pop
hlt
js
xor
out
adc
stos
cltd
push
xchg
jp
push
pop
idivl
mov
pop
add
sub
jmp
int
cmp
insl
stc
lret
cld
add
test
lock
stos
push
xchg
jno
mov
xchg
fwait
js
adc
pop
jbe
dec
or
mov
dec
lss
ja
mulb
popa
lea
and
sub
fdivl
sbb
xor
jb
adc
imul
adc
pop
fidivrs
cmp
stc
das
imul
inc
xor
in
or
cmpsl
mov
push
mov
push
xchg
es
pop
bound
mov
and
sbb
movl
test
sbbb
imul
inc
or
sbb
dec
adc
cmc
sub
inc
addr16
pop
stc
fwait
bound
gs
ret
insb
jne
pop
jae
add
fidivrs
les
mov
arpl
fucomip
adc
sub
fimuls
dec
icebp
fxch
arpl
mov
inc
xchg
testl
sbb
xchg
dec
outsl
mov
cmpsl
in
ficoml
jg
lcall
push
inc
test
mov
xchg
fs
stc
push
push
or
inc
aam
jne
inc
ret
xor
mov
pushf
sbb
push
add
mov
mov
or
cwtl
int3
js
pop
pop
imul
insl
mov
xchg
lock
or
and
mov
loopne
push
testl
lods
mov
jo
in
push
test
divl
iret
and
add
add
insl
in
jmp
jae
test
int3
inc
cmc
in
or
leave
dec
sti
xor
sbb
jecxz
mov
dec
cmp
push
xchg
lds
popa
push
sbb
mov
xlat
inc
nop
rolb
or
xchg
or
jmp
stc
mov
imul
xlat
rcrb
lret
in
dec
call
leave
cli
addr16
add
mov
std
call
xor
orl
ljmp
mov
adc
lret
out
repz
push
pop
inc
mov
lea
dec
dec
movsb
js
push
or
andb
out
and
cs
cmpsb
jmp
pop
mov
cwtl
pop
xchg
mov
jno
fdivs
int
out
ds
push
sahf
mov
cmp
or
mov
xchg
gs
cmpsb
inc
xchg
pop
movsl
sbb
xchg
daa
rclb
inc
bound
inc
cmp
add
jae
xor
cwtl
cmpsb
fldcw
sbb
push
test
sbbl
dec
scas
xor
or
sub
jg
dec
mov
popa
mov
mov
je
leave
leave
dec
es
push
cmpsb
pop
sub
cmc
fsubrs
sub
ss
xchg
cmpsl
mov
sbb
lods
jmp
in
and
int
add
out
lahf
insl
jmp
rcrb
aaa
nop
fstpl
xchg
sub
push
dec
push
jae
adc
lds
jae
mov
les
shrb
cmovae
rclb
out
push
cmp
test
lds
inc
add
mov
dec
xchg
push
push
stos
shlb
sbb
sahf
fstps
cld
cwtl
popf
fistpl
sub
cmpsb
cld
mov
mov
mov
out
xchg
xchg
ficoml
std
push
adc
popa
rcrl
std
sbb
les
out
sub
mov
xor
mov
mov
lret
xor
sbb
shrl
add
orl
out
jno
xchg
lds
sarl
dec
subl
xlat
xchg
iret
insl
push
jnp
nop
and
aam
jbe
sbb
mov
lcall
xchg
pop
cmpsb
lods
mov
lahf
mov
add
and
leave
and
ret
pop
adc
mov
cmc
shr
arpl
test
mov
mov
push
in
mov
push
add
lret
adc
mov
xor
rolb
loop
lahf
add
adc
lret
into
jne
iret
aam
pop
inc
ret
cmp
pop
ss
mov
xchg
les
subb
ret
stc
mov
jns
daa
dec
adc
push
push
lea
push
ror
adc
jnp
add
lret
inc
pushf
lods
scas
sbb
jmp
fucom
pop
xor
xor
rcrl
mov
add
aad
sbb
push
dec
aas
mov
jg
mov
test
mov
and
sar
jae
outsl
into
scas
dec
packsswb
mov
fcoml
jbe
adc
jae
xlat
rolb
xchg
popf
mov
or
pop
out
cs
mov
ss
inc
mov
mov
jge
and
call
push
and
xchg
inc
push
test
dec
pop
mov
aad
adc
addr16
iret
dec
xlat
cmp
mov
and
pop
lea
ret
cs
xchg
push
push
rcrb
aam
mov
icebp
add
cmpsl
adcl
cmp
add
and
fwait
insb
stc
sbb
pop
bound
movsl
movsl
bswap
addb
sbb
push
fnstsw
ja
lods
mulb
out
fildll
push
mov
ja
mov
pushf
mov
aaa
xchg
ja
ffreep
push
neg
and
inc
xchg
loop
dec
inc
xor
lahf
cltd
test
ret
adc
pop
sbb
jae
pop
push
or
xor
ds
notb
pop
xchg
push
xor
js
sbb
in
mov
cmc
and
sbb
or
iret
rcrb
xor
push
adc
aas
imul
aaa
push
sbb
or
jb
movsl
sbb
add
add
popa
xchg
cli
inc
xor
bound
outsb
mov
jecxz
scas
into
ret
pop
popf
outsl
pop
das
mov
movsb
dec
pop
inc
lret
lods
pop
and
scas
jl
jg
sbb
std
push
cli
rclb
mov
into
fistl
insb
add
clc
test
gs
cs
mov
cmc
jle
xchg
sbb
out
push
jo
inc
decl
xor
and
fsub
mov
push
mov
aam
inc
sbb
dec
loop
inc
and
loopne
sbb
lea
les
xorl
mov
mov
xor
popf
mov
nop
or
sbb
xchg
pushl
hlt
jns
and
mov
xchg
nop
xor
mov
push
in
sub
icebp
in
xchg
inc
jns
rorl
sub
jl
arpl
outsb
ret
xor
insl
xor
repnz
iret
loopne
inc
inc
push
and
sbb
iret
sahf
mov
es
jmp
inc
test
fisttps
ja
int
repnz
in
jge
ss
adc
xchg
mov
mulb
xor
outsl
out
pop
mov
inc
pop
ret
mov
sub
mov
lret
pop
sbb
sub
mov
jl
add
add
dec
cld
add
insb
jg
mov
inc
dec
repz
or
mov
sub
cmp
inc
cmp
enter
or
mov
dec
and
subl
call
ja
mov
rcll
imul
pop
mov
movsl
mov
stos
dec
add
xor
daa
mov
pop
rcll
sub
icebp
hlt
fisttpl
pop
in
jns
or
jl
mov
push
es
xor
das
xchg
pop
jl
xchg
mov
es
adcb
mov
mov
inc
mov
in
and
and
xlat
pop
lock
in
das
fnstcw
xor
loopne
pusha
stc
repz
stos
cmp
loopne
xchg
insb
mov
fucomp
dec
adc
dec
mov
negb
mov
adc
pusha
xor
or
cli
imul
int3
mov
or
xchg
inc
test
imul
fs
sub
lods
jnp
add
dec
sub
pop
cmp
adc
sub
lret
movsl
jo
sbb
jnp
aas
or
lcall
sbb
xor
lret
inc
sub
mov
xchg
dec
movsl
cmc
xchg
ret
nop
pop
fwait
dec
movsl
mov
fs
pop
and
pushl
adc
push
in
add
sbb
fcomp
shlb
cmpb
pop
push
mov
jle
pushl
mov
cmp
loop
std
sub
stos
outsb
out
xorb
movsb
mov
mov
push
or
or
jmp
in
decl
xchg
out
insb
in
aam
push
add
popf
pop
lahf
push
imul
jg
outsb
andl
imul
mov
mov
rorl
inc
and
dec
mov
push
push
pushf
push
push
add
aad
loop
aad
mov
sub
test
clc
xor
das
add
subl
daa
mov
sbb
in
outsb
sti
xchg
call
jmp
mov
andb
arpl
push
pop
jns
aam
rsqrtps
sbb
or
sbb
and
fsts
ljmp
mov
clc
dec
je
sbbb
out
add
sbb
xbegin
sub
jg
js
sub
mov
loop
movsl
ljmp
xchg
testb
cmp
cmp
ja
mov
sti
clc
sub
mov
and
dec
jnp
leave
lock
or
pop
jae
iret
in
add
fistl
xor
cli
popf
xor
sub
sbb
lods
inc
xchg
pop
xor
xchg
fcoms
fnstsw
push
int
insb
outsl
add
lahf
rolb
push
cmp
rorb
popa
jae
movl
lcall
arpl
arpl
popf
stc
mov
mov
jb
lods
mov
adc
out
and
add
pop
cmpsb
add
lret
hlt
fwait
xor
sbb
cmp
add
push
xor
mov
mov
test
push
jmp
call
and
inc
mov
into
mov
daa
inc
mov
iret
or
das
shll
aaa
xchg
test
outsl
dec
xor
js
int
scas
sbb
std
lds
or
inc
cmpsb
popf
scas
out
xor
out
add
cmc
mov
xor
outsl
jmp
add
sub
xlat
mov
jb
imul
cmp
xor
add
aaa
mov
push
cmp
mov
mov
pop
jmp
repz
and
pop
fistl
pop
fcmovne
andl
int3
lret
cmpsb
popf
add
fs
or
push
cld
imul
repz
sbb
add
movsl
imul
clc
lock
outsl
aaa
test
cltd
out
fdivrp
sub
sbb
jl
pushf
aad
gs
cld
insb
sub
insl
daa
jno
mov
mov
mov
jecxz
scas
jl
rcll
sahf
test
pop
or
push
inc
pop
push
mov
aas
sbb
ss
xchg
jge
addr16
push
pushf
adc
mov
and
enter
pop
lock
push
sub
mov
sub
and
jnp
shl
xor
and
movsb
stc
lahf
adc
mov
push
inc
push
ret
add
xlat
jno
fcom
lods
lods
sub
shlb
mov
adc
lret
loopne
mov
pop
ficoml
mov
test
dec
aaa
dec
pop
repz
push
mov
outsl
sub
mov
mov
jg
lahf
xchg
lods
test
ss
clc
xor
cmp
clc
dec
outsb
clc
or
imul
mov
imul
jl
xlat
jno
pop
sbb
loopne
sub
and
adc
xor
fisttps
or
and
mov
cwtl
pusha
mov
sbb
pusha
nop
into
sbb
call
jg
int3
sub
mov
push
inc
cmp
fldenv
pop
push
dec
sub
pop
push
pop
je
fsubs
sub
shrb
mov
lret
lea
lret
and
movsl
sbb
js
push
mov
xor
push
fs
or
popf
jge
fsubrl
aas
xchg
jle
int3
xor
sahf
fisttpl
mov
xor
cmpsb
cmp
cld
nop
sbb
inc
bound
subb
popf
mov
fmulp
mov
cmpl
add
inc
mov
nop
dec
and
loopne
hlt
cmp
rcrb
rcll
add
aam
or
imul
out
add
mov
outsb
clc
push
cli
cs
add
xor
xor
into
push
cltd
fidivrl
adc
lahf
mov
decb
xchg
pop
adc
and
sbb
jge
lods
out
jmp
xor
cmp
nop
arpl
lods
frstor
sbb
lea
adc
jnp
or
aad
aaa
push
mov
js
clc
mov
pop
mov
pop
sahf
fdivrl
int3
cmp
nop
std
movsl
mov
push
xchg
sbb
add
push
loopne
mov
push
testb
rol
and
mov
insl
pop
adc
jnp
and
ljmp
and
pop
mov
sub
out
ret
std
mov
mov
hlt
imul
stos
jo,pt
ja
rcpps
out
sbb
jp
cmp
icebp
mull
jnp
call
into
cld
jnp
ss
int3
jl
inc
sub
inc
popa
dec
push
xrelease
testb
popf
inc
xchg
mov
push
mov
stos
je
fbstp
stos
andb
mov
xchg
sub
in
daa
nop
test
incl
dec
or
xor
jno
fsubrs
xor
sub
repz
mov
push
adc
jp
call
dec
jne
call
mov
dec
clc
aad
std
in
add
adc
cmp
sub
int3
test
jg
shlb
out
push
xchg
dec
mov
gs
out
push
push
pop
cmp
mov
adc
rcll
cli
adc
scas
sub
insl
out
fmuls
mov
mov
xchg
out
cmc
loope
and
push
leave
mov
mov
in
nop
jecxz
outsl
fiadds
add
test
jp
fbstp
and
int
mov
mov
ret
movsl
movsb
lcall
mov
sarb
arpl
mov
and
mov
sarb
xchg
das
mov
ret
mov
iret
push
movsb
jne
fcmovne
aam
sub
xor
in
loopne
int3
cmp
mov
test
mov
adc
mov
jmp
aas
pop
mov
push
daa
cli
sbb
out
inc
dec
insl
cmp
mov
lods
jge
out
pop
and
add
pop
push
inc
push
std
jge
mov
inc
xlat
fcoml
push
mov
push
mov
or
jg
lsl
cmp
lods
xchg
xchg
popa
jbe
jne
ljmp
shll
xor
pop
fisttps
jge
xchg
jge
nop
add
test
icebp
loope
dec
sahf
jo
shll
imul
leave
mov
xor
mov
cmp
fbstp
push
sbb
jge
bound
outsl
push
pop
lret
and
mov
inc
and
cs
jg
testb
fistl
aam
mov
mov
shlb
jl
pop
xchg
sub
sahf
cs
jmp
xchg
jnp
cmp
outsl
adc
pusha
xchg
mov
pop
sbb
mov
sti
jae
sub
pop
push
movsb
and
sbb
test
xchg
push
int
call
push
pop
repz
fcmovu
or
jnp
mov
xlat
or
aaa
adc
mov
leave
xor
xchg
xor
fwait
movsl
rorl
into
adc
aas
pop
daa
push
andb
xchg
loop
xchg
lds
sar
sub
xchg
or
adc
js
sub
add
fs
test
mov
mov
xchg
imul
stos
popa
dec
xlat
loop
ljmp
cs
pop
test
add
add
mov
into
insb
addr16
ret
aaa
dec
stos
inc
ljmp
out
icebp
cmp
clc
daa
test
adc
or
mov
push
pop
aad
and
pusha
sbb
inc
adc
mov
xchg
gs
pop
push
jle
mov
push
sbb
and
sub
aaa
in
ror
popa
jge
fadds
and
ficompl
cmp
aaa
out
shl
lods
hlt
push
mov
fiadds
add
sbb
outsb
jno
scas
orl
mov
jmp
mov
dec
fnstcw
popf
lods
xor
outsb
mov
xchg
jmp
int3
pop
add
xor
lds
cmp
shlb
jo
xchg
testl
stos
add
pushf
add
adc
ret
or
in
sub
xlat
adc
stc
es
adc
es
dec
mov
pop
pushf
inc
push
mov
in
push
sarb
xlat
xchg
and
xor
jmp
test
popf
rorb
testl
notb
cld
fdivl
sub
sbb
pop
add
mov
adc
cmpl
int
dec
test
data16
in
dec
xchg
mov
ds
in
mov
cmpsb
dec
mov
dec
and
xchg
and
fcoms
rcll
clc
dec
add
sub
jae
shlb
repz
les
mov
xlat
cs
jp
inc
daa
push
lods
test
shll
cmp
out
cld
push
push
push
xchg
lahf
loopne
das
imul
out
cmp
dec
aad
scas
mov
add
cltd
push
add
pop
mov
mov
xchg
and
add
xchg
les
sub
out
in
out
mov
xchg
push
int3
out
sub
adc
adc
dec
adc
scas
push
imul
mov
dec
sbb
orb
jns
mov
xchg
out
and
mov
inc
addr16
gs
pop
and
cmp
faddl
scas
lret
data16
roll
ret
mov
xor
push
pop
pusha
cmp
test
push
pop
cld
adc
cmp
xchg
ror
xor
int
mov
inc
in
mov
scas
xchg
push
lret
xor
dec
dec
mov
les
pop
cli
cmpsl
add
mov
dec
xor
xchg
enter
divb
jmp
adc
fs
jae
je
lret
add
mov
cmp
outsb
inc
cmc
sbb
out
fwait
es
or
xlat
dec
rcrb
fisttps
inc
lea
mov
fcompl
int3
ljmp
fs
push
mov
mov
jb
mov
aad
into
jnp
jnp
subb
ret
xchg
out
nop
sbb
push
and
jo
lods
sbb
sti
pushf
fwait
das
rcl
bound
xor
knotw
call
cmp
clc
adc
movsb
ds
ds
and
sbbl
sub
adc
lea
push
mov
add
jg
xchg
enter
or
scas
insl
lds
add
cltd
mov
fs
imull
ss
cmc
sti
push
adc
lret
sub
fcompl
enter
cmp
enter
loopne
in
fwait
add
dec
mov
mov
jle
popa
in
push
mov
out
sub
out
sti
dec
cmp
in
mov
bound
ja
add
xchg
fistpll
mov
mov
push
insl
push
and
inc
fwait
mov
add
jbe
or
or
aad
pop
sahf
inc
fs
push
xchg
pop
cmp
or
adc
shll
pop
cmp
into
sbb
push
cmp
xchg
xchg
sahf
cmp
push
mov
mov
cmp
mov
inc
popa
xor
das
test
or
mov
and
adc
gs
xchg
xor
test
inc
clc
in
ret
sub
dec
mov
std
sub
jo
sbb
lock
imul
lods
ret
fsts
js
mov
out
fisttpll
cmc
xchg
ret
std
imul
ret
push
and
sub
and
es
lods
sbbl
in
lods
rcrl
aas
or
lahf
insb
fmul
ss
add
pop
cmpsl
add
or
es
jae
mov
in
dec
or
push
std
mov
push
xor
adc
aad
daa
jne
sbb
shl
aaa
pop
stos
inc
adc
rorb
insb
int
xor
sbb
jl
or
subb
jecxz
pop
iret
into
scas
je
jl
sub
jg
loope
sbb
stos
fiadds
sarb
push
mov
cmp
test
mov
push
pop
jl
jnp
xchg
fnsave
sbb
dec
or
pusha
and
push
jno
fiaddl
cmpsb
ljmp
jno
es
test
push
cmpsl
mov
pop
fmuls
dec
dec
dec
inc
insb
add
test
fs
and
mov
in
mov
mov
sbb
pop
sub
fildll
or
lret
xor
int
sbb
or
sti
mov
rcll
and
jecxz
inc
sahf
inc
div
cmp
or
iret
dec
inc
jne
and
mov
jbe
mov
sub
scas
cli
mov
rcrl
out
mov
int3
orb
stos
adc
outsb
dec
cmpsl
dec
imul
dec
sarl
xchg
ss
mov
js
or
fbstp
aas
lea
sbb
xor
addl
xchg
jnp
sbbl
loopne
lcall
in
hlt
pushf
out
dec
add
jmp
or
or
lcall
neg
daa
scas
ja
arpl
incl
mov
xchg
jne
xchg
jecxz
xor
inc
sub
or
dec
mov
jp
fnstcw
fs
pushf
mov
sahf
clc
incb
sbb
inc
and
dec
les
mov
mov
mov
les
insb
cs
mov
in
push
jecxz
or
cmovge
mov
call
jl
push
std
daa
mov
outsb
ljmp
or
cltd
sub
push
xchg
decb
rcrb
xchg
push
mov
push
sbb
shlb
aad
call
mov
add
pop
imul
sbb
or
cltd
mov
cwtl
mov
xor
xchg
int3
sbb
jno
mov
push
imul
jo
jne
lods
imul
cmp
aam
mov
cltd
fldcw
add
and
into
xchg
sbb
mov
ret
xchg
clc
rcll
sbb
xchg
andb
jge
cltd
jnp
popa
mov
cmp
insl
inc
ret
or
cmp
mov
pusha
mov
aad
mov
in
inc
fidivl
es
stos
inc
call
repz
int3
jle
sti
cmp
and
push
lret
clc
pop
or
std
lcall
sarl
push
out
or
fidivs
mov
cld
int3
inc
mov
or
mov
js
pop
ljmp
shlb
sbb
fmuls
push
es
std
cmc
adc
and
sbb
jbe
add
pop
and
testl
sub
fnsave
sub
lret
aam
hlt
arpl
jl
mov
out
and
in
out
push
jge
orl
xchg
cmp
jnp
jmp
popa
outsl
int3
adc
adc
aam
daa
punpckhbw
sub
xchg
dec
mov
mov
cmpb
aas
mov
dec
lds
stos
push
dec
xor
test
call
roll
sbbb
arpl
inc
pop
hlt
in
out
mov
dec
or
xchg
sub
ficompl
aaa
pop
mov
sub
stos
adc
rcrl
cmc
add
push
ss
dec
clc
int3
fdivl
iret
js
cltd
rcrl
pop
xchg
fnstenv
in
add
pop
cmp
add
ss
dec
decl
mov
gs
xchg
inc
dec
shlb
test
xchg
or
jo
ret
leave
jp
imul
add
aas
xor
fwait
jg
dec
dec
fcompl
mov
lret
clc
mov
mov
stc
mov
push
cmp
push
mov
lock
lret
push
lret
sbb
test
jg
sub
mov
fdivrl
in
adc
leave
out
jl
into
pop
dec
push
ret
add
lock
and
ljmp
pop
lret
jle
cmpsb
pop
add
outsb
jno
shrl
sti
mov
dec
cmp
add
jecxz
adc
sbb
dec
mov
int
shlb
xor
cmp
inc
xor
imul
mov
xor
fsubl
jbe
and
mov
cmp
fnstcw
in
js
stc
pop
roll
shll
mov
inc
lcallw
jl
popf
and
icebp
sarl
jnp
data16
pop
insb
mov
lahf
adc
popf
sbb
adc
mov
mov
inc
xor
or
push
add
mov
fmuls
inc
jnp
insl
xchg
scas
mov
adc
aas
jae
call
mov
outsl
insb
ret
fcomip
out
sub
xchg
push
sbb
cltd
cmp
adc
pop
fimull
stc
repz
mov
mov
add
rorb
rcl
sbb
push
popf
testb
ret
cmc
mov
mov
subl
outsb
loop
sub
pop
pop
mov
mov
incb
sbb
daa
inc
mov
jmp
aas
dec
mov
fisttpl
fdivl
inc
fldln2
mov
pop
out
xchg
imul
add
ljmp
cmpsl
push
xor
test
inc
jae
movsl
lahf
das
jge
inc
daa
mov
cwtl
sbb
push
jnp
aas
fcompl
add
fisttpll
clc
notb
out
add
dec
js
and
iret
cmpsl
jg
jb
fldcw
rclb
push
mov
or
mov
mov
fs
out
xchg
mov
shll
xchg
cld
lds
int3
shlb
mov
fstl
or
test
cmp
negl
pop
imul
aas
add
mov
fidivrl
xchg
outsl
lret
add
aas
push
xor
cmp
cmc
stos
out
or
adc
jg
test
push
in
jl
adc
arpl
pushf
repnz
sbb
xor
xlat
shll
mov
int
mov
add
jl
or
test
mov
in
jmp
data16
jge
cli
in
xchg
cwtl
adc
mov
push
scas
jge
scas
dec
lea
test
sti
enter
shrl
xlat
into
xorl
enter
gs
pusha
sti
scas
mov
pop
inc
fnstsw
lret
fisubl
std
push
lea
xchg
jae
ds
xchg
and
clc
rcll
mov
popa
rorb
mov
dec
inc
sub
cmp
inc
xchg
dec
gs
mov
popa
mov
cld
dec
fimull
and
jg
outsl
add
roll
inc
movsl
clc
fbld
and
jge
inc
jmp
push
cmp
mov
aam
and
mov
idivl
icebp
jl
dec
add
add
sti
jecxz
pop
mov
mov
popf
push
jge
xchg
pop
push
cmp
cld
push
bound
xchg
push
xchg
mov
test
sub
jecxz
sarb
mov
iret
leave
imul
test
xbegin
popf
scas
mov
call
mov
jg
cmp
lret
adc
push
mov
inc
out
cmp
pop
mov
insb
dec
pop
jae
xor
jmp
cli
lcall
push
ds
mov
fisubs
fidivs
mov
xchg
sub
sbb
sbb
in
fistl
cmpsl
push
and
push
mov
mov
sub
cmpsl
sbb
mov
les
mov
repz
cli
sbb
xchg
mov
sbb
outsb
mov
mov
cmp
inc
popa
sub
pusha
add
push
hlt
push
jle
bound
add
mov
fwait
addr16
inc
fcmovbe
mov
mov
leave
movsb
xor
gs
sbb
or
lods
jno
fwait
push
dec
testb
sub
sub
fstpt
in
addb
cmc
sub
das
scas
les
and
add
cmp
lahf
or
sti
and
ja
xchg
jnp
mov
sarb
cmp
mov
cmp
adc
js
test
pop
iret
xchg
sahf
sbbb
scas
addr16
sub
sbb
int3
push
jp
out
cmpsb
inc
outsl
inc
sub
gs
mov
in
and
xchg
dec
call
lret
xchg
or
shrl
aas
cmp
mov
pop
mov
xlat
je
xor
jae
xor
push
mov
addr16
sub
mov
aaa
test
push
in
mov
xchg
adc
outsb
in
cmp
out
xor
jnp
mov
mov
js
stc
punpcklbw
or
sub
cmc
inc
mov
pop
stc
rclb
mov
pop
sahf
pop
pop
dec
call
or
mov
faddl
fisubrs
sbb
jno
sub
dec
imul
fsubrl
faddp
popf
pop
cmpsb
pop
nop
decl
push
mov
jmp
into
xlat
lods
mov
imul
outsl
aaa
in
mov
sbb
shrb
stos
sbb
ficomps
adc
push
test
xlat
ss
mov
orl
lahf
stos
mov
popa
xchg
mov
fbstp
stos
loop
or
add
adcl
adc
xchg
lods
jo
add
push
xor
xor
cld
jne
jnp
test
dec
mov
xlat
push
stos
jb
mov
pop
add
add
add
inc
sbb
mov
inc
out
mov
lahf
ljmp
add
adc
adc
outsl
dec
jns
xchg
mov
xchg
in
push
cmp
cmc
xor
cmp
pop
movsl
or
push
loop
pusha
inc
jae
inc
movsl
mov
in
pop
pop
les
cwtl
fistps
xorb
jecxz
push
nop
test
or
sbb
aad
out
mov
jb
push
cli
mov
cs
outsb
mov
push
aam
iret
les
cmpsb
pop
mov
mov
mov
mov
imul
push
xor
out
repnz
jl
test
push
insb
or
mov
ficomps
pushf
out
jecxz
stc
int3
aaa
or
sahf
mov
add
int
push
xor
and
adcb
sub
or
and
loop
mov
lret
cmp
mov
cmp
adc
je
lds
rcll
adc
xchg
sahf
xchg
mov
iret
lds
add
cwtl
ret
arpl
arpl
scas
xor
dec
stos
cmpsl
cmp
jns
sti
mov
sub
popa
cmp
outsb
pop
dec
dec
push
inc
add
xor
outsb
sbb
mov
xchg
mov
cs
lock
and
push
into
and
add
push
aaa
je
push
hlt
jle
loop
fisubrs
add
shl
fst
adc
xchg
mov
xchg
mov
xchg
mov
je
and
xchg
loopne
cmp
nop
xor
sub
into
jnp
jg
loope
sahf
push
int
jl
pop
shll
cs
imul
mov
rolb
adc
hlt
jmp
adc
addr16
jo
test
push
testl
aam
adc
push
addr16
ss
jnp
push
cmpsl
cs
out
rcrb
jge
jecxz
lea
ds
push
das
in
cmp
sbb
dec
jbe
leave
fistpll
xor
mov
cmpl
lea
test
xor
lret
push
mov
addr16
push
add
adc
fidivrl
mov
mov
cmpsb
sbb
jle
mov
scas
sub
push
les
lret
xor
jmp
push
sub
sub
fincstp
sbb
or
cli
mov
jae
jmp
out
in
pop
popf
int
call
in
shrb
clc
dec
mov
add
push
mov
fs
xchg
dec
loop
rclb
gs
mov
xchg
leave
adc
popa
sti
outsl
inc
mov
mov
cmpsb
jne
push
outsl
jae
pop
jecxz
cmp
xor
call
adc
call
pop
sbb
xor
psubusb
imulb
into
push
mov
dec
mov
dec
icebp
aaa
imul
xchg
ja
mov
bound
jp
ret
sub
inc
cmp
push
aam
fs
leave
pop
and
test
sbbb
pop
push
jb
inc
test
cmpsb
fisubrl
pushf
ds
out
enter
cmpsb
ja
fcomip
out
out
test
push
adc
stos
outsl
jno
pop
daa
mov
int3
or
ret
lea
inc
pop
lret
cmp
das
jb
outsl
shll
push
out
loope
xchg
and
push
xor
test
sti
shrb
mov
in
loope
pop
dec
cld
ret
iret
sbb
popa
and
popf
int3
rcll
data16
stc
jb
psraw
and
mov
cmp
cld
mov
pusha
pop
mov
jl
jb
mov
pop
mov
testl
in
xchg
fs
jo
ds
and
jb
mov
push
repnz
fadds
pop
xchg
out
dec
aas
jmp
adc
cmp
and
sti
inc
push
loope
in
in
shlb
insl
or
leave
dec
stc
xchg
repz
push
pop
fs
mov
xor
imul
imul
mov
jge
faddl
in
lds
xchg
pop
aas
xchg
loop
lret
iret
adc
xorl
xor
aas
xchg
mov
add
pushf
adc
dec
xlat
fwait
mov
cmp
fldcw
sahf
push
sub
sbb
xchg
add
push
or
pop
andb
or
pop
jl
mov
adc
fiadds
adc
ljmp
test
jnp
push
pop
jo
test
cmp
adc
cwtd
lret
sbb
and
sbb
or
lcall
inc
outsb
push
cs
cmpsw
xor
adc
imul
outsb
test
iret
cmpsb
out
xchg
or
cmp
cs
push
rcl
movsb
repnz
inc
mov
popf
ds
lods
mov
in
pop
ja
movsl
inc
lret
ffree
sahf
sub
aad
pushw
les
pop
mov
in
push
shll
inc
pop
cs
pop
rclb
lret
mov
gs
je
jne
mov
inc
stc
data16
and
popa
xor
mov
fsub
out
adc
in
push
ss
stos
ljmp
outsb
mul
aam
sbb
es
rclb
mov
cmpb
stc
mov
dec
bound
in
xchg
insb
xchg
loop
imul
ret
aas
cmpsb
pop
outsb
stc
jp
js
rcl
aad
fcomp
and
sub
mov
lods
decl
jb
int
pop
push
push
xorb
sub
inc
shrd
dec
pop
or
jmp
movsl
mov
jg
push
cmp
mov
mov
mov
imul
scas
stos
cmp
ds
add
xchg
clc
mov
fldl
pop
jecxz
sub
gs
lds
sbb
xchg
cmpsb
mov
lcall
pushf
rorl
push
pop
cmp
cmpsb
in
xor
jle
dec
mov
mov
push
jmp
cli
jae
fldcw
nop
sbb
pop
les
popf
sub
rcll
mov
test
xchg
mov
pop
imul
cltd
jne
popf
clc
push
ds
mov
mov
popa
push
push
pop
clc
scas
jo
xlat
xchg
sub
push
loopne
xor
fiaddl
pop
aad
sub
sbb
iret
jl
imul
int3
cltd
out
or
call
xchg
sub
and
shll
std
out
lds
or
ljmp
aas
mov
dec
sbbl
roll
sahf
inc
mov
push
pop
test
sbb
loop
pop
pop
push
fmuls
or
leave
xchg
cmp
pop
cltd
push
out
cmp
or
pop
aam
insl
sti
loopne
mov
pop
add
ss
cmpsb
inc
rorl
aam
push
fidivs
inc
sbb
jno
les
outsb
sub
sti
pop
sub
pop
fnstcw
jns
mov
pop
in
xchg
sub
rclb
pop
pop
mov
clc
jae
loopne
mov
sbb
jnp
hlt
rcrl
bswap
xchg
pop
cmp
lret
shl
push
in
cwtl
loop
push
jle
mov
cli
dec
inc
sub
xchg
data16
je
daa
test
test
sti
in
leave
xor
xchg
and
xor
xchg
and
nop
push
ficoml
add
inc
movsl
xchg
pop
in
or
lods
lret
jecxz
jo
in
jno
test
cltd
jbe
sub
imulb
dec
call
push
push
push
and
inc
push
pop
mov
or
jmp
jle
xor
jne
sbb
scas
inc
xor
sub
subl
sub
mov
mov
push
mov
inc
or
pop
cli
inc
sub
lea
and
je
xchg
stc
xchg
xorb
push
lock
mov
adc
sbb
jecxz
sti
jmp
mov
mov
xchg
push
add
fsubrs
pop
mov
add
cld
in
aaa
push
arpl
cli
push
add
xchg
inc
mov
cld
mov
jmp
xchg
in
mov
xor
je
pop
or
imul
lcall
out
icebp
xorl
xorl
cmp
sahf
das
js
pop
jl
cmp
cmpl
ret
pop
cmp
shll
jle
mov
imul
cmpsl
cmp
fld
aaa
scas
fadd
inc
or
jecxz
push
mov
stos
fs
dec
std
imul
sbb
clc
add
ret
ss
and
cmp
mov
xor
sbbl
or
mov
pop
mov
pop
lahf
icebp
test
xor
adc
sub
jg
cmc
stos
jg
sarb
xor
js
mov
dec
repz
dec
ret
mov
fnstcw
push
js
add
dec
pop
lock
jl
xchg
scas
lock
insl
nop
repz
adc
repz
inc
mov
movsl
mov
jb
push
arpl
int3
dec
and
lods
dec
xor
pop
push
add
cmp
adc
mov
inc
adc
fisubrs
stos
je
mov
adc
dec
lock
mov
jle
movsb
scas
jl
das
add
adc
push
adc
cmpsb
mov
scas
nop
xor
stc
xor
js
cwtl
lods
cmpsb
cmp
mov
sahf
push
call
mov
sbb
and
cmp
fwait
xor
arpl
jg
jae
stos
mov
pop
xchg
sub
cmp
sbb
add
into
cmp
bound
sub
or
jmp
sarb
fwait
xlat
call
inc
fidivrl
mov
jns
aaa
cmp
aad
jno
mov
xchg
push
jp
pop
and
dec
xor
addb
dec
push
stos
pop
jg
mov
sbb
add
out
sub
and
fnstcw
pop
lahf
adc
or
test
sub
lods
and
push
jmp
out
sub
cmp
push
rcrl
dec
and
adc
adc
sar
xchg
push
jb
inc
sbb
outsl
pushf
bound
xchg
sub
fisubs
push
and
inc
mov
iret
aas
and
adc
ja
aam
mov
sub
stos
lods
push
mov
nop
jmp
or
fildl
cli
subb
addb
loop
test
xchg
movsl
inc
adc
xchg
push
cli
push
inc
mov
out
adc
dec
enter
xchg
cmp
add
pushf
inc
daa
mov
xchg
loopne
fcomi
xchg
out
mov
faddp
jae
fidivrs
fildl
mov
push
pushf
test
xor
movsl
jo
lods
adc
xchg
push
xchg
push
je
mov
sarl
add
ror
mov
cmp
push
jae
mov
inc
mov
test
in
out
dec
sbb
jle
insl
mov
and
out
add
xchg
sbb
les
sbb
subb
jg
dec
xor
lcall
mov
mov
dec
aam
in
loope
inc
xchg
xchg
pop
fisttpll
pop
sub
sub
out
pop
mov
and
mov
mov
add
pushf
mov
outsb
inc
add
add
sahf
mov
iret
mov
mov
inc
jecxz
inc
popa
jecxz
ja
stos
out
sbbb
xchg
inc
mov
hlt
xchg
add
std
mov
out
rcll
or
shlb
iret
xlat
mov
mov
mov
popa
mov
cmp
cmpsb
fistl
jae
movsl
and
div
out
cwtl
xor
add
test
repz
cmpsb
and
out
jne
or
sub
adcl
iret
fcompl
adc
or
xchg
cmpsl
in
fnstenv
xor
pop
and
sahf
fs
sub
xor
addr16
mov
leave
and
inc
aaa
aaa
push
and
mov
or
test
adc
sub
fidivrs
or
xor
imul
sbb
xor
fwait
movsb
mov
cmp
cs
mov
mov
mov
imul
dec
shrb
jle
shlb
jnp
sar
push
mov
adc
jbe
xchg
int3
shl
and
pop
sub
insl
fidivs
cmc
outsb
or
scas
mov
pop
les
and
in
and
orb
mov
clc
enter
stos
mov
pop
jnp
sub
and
popf
cmc
scas
out
cmp
insb
andb
add
mov
push
jns
int
cmp
push
jg
mov
pop
jo
dec
cmpsl
push
insl
cmp
out
aaa
jo
icebp
sub
mov
inc
sti
mov
mov
dec
cmp
jae
pop
xchg
jg
adc
pop
int
sbbb
mov
sub
dec
das
iret
bound
shll
cltd
fldenv
pop
movsb
fcmovu
xchg
mov
push
sbb
jne
jns
pop
inc
sarb
mov
int3
xor
test
inc
xchg
or
sti
stos
enter
roll
call
aas
orl
inc
pop
and
out
jns
mull
cmc
inc
inc
lods
out
das
mov
in
pop
sub
loopne
mov
hlt
andl
mov
adc
roll
push
or
in
xlat
mov
adcl
aam
xor
pop
push
mov
into
mov
idivl
popa
int3
sub
mov
and
insl
mul
sub
or
in
jbe
lret
mov
or
inc
jnp
and
cli
add
adc
add
mov
sahf
in
nopl
xchg
mov
adc
shll
psrlw
outsl
xchg
adc
les
mov
push
or
out
jg
ret
xor
lahf
shrl
je
dec
movsl
pop
mov
mov
add
in
xchg
add
mov
sub
lea
cmp
insb
sqrtps
lock
push
addr16
fcomps
loopne
arpl
loop
iret
mulb
pop
adc
out
inc
mov
subl
mov
bound
fdivr
imulb
addr16
out
pop
dec
jle
sbb
popa
inc
dec
dec
adc
dec
hlt
jl
adc
clc
stos
sbb
ret
sub
inc
xchg
fwait
int3
jbe
jno
xor
push
stos
sub
out
test
inc
jle
stos
inc
pop
inc
jb
les
das
fdivl
adc
inc
gs
leave
shrl
mov
fildll
sbb
fisttps
jbe
cmp
pop
mov
sahf
push
out
xchg
sub
js
mov
mov
push
or
ljmp
sub
cltd
sub
jge
mov
jbe
jb
pop
mov
push
int3
aam
int3
inc
xchg
mov
add
jg
repnz
test
call
cmp
out
mov
sbb
mov
sbb
stc
test
push
pop
in
repnz
mov
push
sub
aam
adc
xchg
inc
mov
or
xor
ja
xor
les
lock
js
clc
cmp
sti
sub
dec
pushf
idivl
shlb
adc
add
movsl
sarl
ja
mov
add
insl
stc
jne
xor
and
js
mov
sarl
cmp
mov
gs
mov
lods
cld
pop
mov
ret
rorb
les
mov
adc
pop
xor
mov
roll
pop
cs
jne
inc
jnp
push
xchg
outsl
loop
loope
pop
cmp
push
cvtdq2ps
js
adc
jl
inc
ljmp
mov
fmull
jp
roll
cs
jmp
fdivl
out
cmpsb
or
xlat
imul
jae
or
sbb
push
or
sbb
sbb
insl
or
call
pop
aad
and
mov
fsubrl
jp
and
dec
outsl
arpl
dec
push
insb
rcrl
inc
pusha
and
and
push
dec
xchg
mov
and
mov
cmp
aad
jo,pn
or
add
adc
add
mov
jge
cmp
dec
cmc
jne
fisubl
dec
mov
push
addl
and
xor
ljmp
push
jge
mov
scas
cvtpi2pd
add
mov
sub
push
xchg
xchg
into
cld
ljmp
test
push
cmp
iret
sbb
jmp
iret
outsb
push
jbe
pop
push
int
roll
sub
lcall
cmc
fsubs
add
jne
jle
jl,pt
int3
iret
cs
out
and
inc
jle
sbb
sbb
sbb
daa
push
fs
iret
stc
cld
rorb
leave
mov
popf
and
shrl
inc
ja
ret
or
pop
shrl
subb
jp
jo
sbb
sti
jg
or
xor
or
add
dec
lea
in
dec
inc
xchg
insb
push
call
in
mov
xor
lcall
xlat
and
fldenv
jnp
stc
mov
lcall
adc
daa
ss
or
lret
adc
aas
sub
mov
mov
jl
dec
or
inc
aam
hlt
mov
xor
sub
sub
test
ja
push
push
cli
jp
lret
rorl
imul
fisubrl
stos
je
inc
mov
inc
mov
sahf
iret
popa
jmp
out
xor
jns
push
sbb
mov
push
repnz
and
fwait
sbb
fadds
or
adc
minps
fld
xor
fstpl
icebp
add
dec
rcrb
cmpl
lahf
int3
mov
mov
jae
movsl
jns
in
popf
mov
pop
and
stos
mov
pop
scas
imul
roll
cs
mov
add
xchg
pop
ljmp
daa
xlat
int
std
cmp
fcompl
xchg
clc
xor
test
fdivrs
pop
fisttpl
in
fmull
jecxz
aad
data16
rolb
stos
pushf
mov
sub
add
dec
mov
mov
push
xchg
push
rcrb
cmp
sbb
push
xchg
mov
mov
jg
out
xchg
xor
cmp
xorl
pop
jnp
jle
xor
mov
sbb
stos
pop
es
xor
pop
dec
adc
je
ret
xor
sbb
or
icebp
imul
leave
xlat
test
mov
call
mov
cmpsb
xchg
bound
push
ljmp
scas
pop
into
lcall
pop
test
xchg
fnstenv
shl
sbb
add
inc
int3
ret
fwait
push
icebp
das
mov
dec
pusha
inc
mov
dec
out
push
jp
outsb
adc
andb
or
gs
mov
enter
adc
mov
cmpsl
popf
in
loope
sbb
pop
push
xchg
outsb
push
push
and
pop
mov
pop
jle
mov
push
lds
add
mov
sub
xchg
test
xor
out
repnz
inc
iret
jge
sub
jmp
mov
js
fldl
xor
add
mov
mov
scas
cmpsl
sub
aam
mov
jg
lods
or
clc
sahf
test
mov
xor
inc
out
call
mov
sub
cmp
adc
in
mov
sub
add
cvtpi2ps
sub
push
fiadds
push
xchg
xchg
xlat
inc
insb
fsubl
rcrl
xor
dec
xor
sti
leave
rcr
xchg
pop
sub
je
dec
mov
cwtl
xor
sbb
lea
cmc
cli
or
jb
push
lret
jb
xchg
xor
cmc
inc
mov
push
loop
jns
mov
lods
mov
jbe
enter
mov
inc
ljmp
scas
mov
in
xchg
or
mov
paddw
jecxz
ror
mov
inc
sub
sti
lock
scas
ret
in
in
dec
xchg
stos
aad
outsl
test
pop
daa
mov
sub
jne
jb
mov
dec
jg
sarb
jae
nop
mov
mov
das
repz
test
pop
sub
xor
movsb
aas
xchg
ss
pop
dec
jge
xor
cmp
clc
sub
mov
push
xchg
cmp
push
popa
mov
jl
mov
mov
fdivrs
mov
fwait
push
or
cmp
cmpsb
ss
pop
insl
rcll
jle
push
bound
sbb
xchg
xchg
enter
dec
aam
subl
arpl
es
xchg
mov
lods
push
fistl
jp
idivl
pop
or
xchg
inc
enter
cmp
cmpb
negl
insb
cmp
add
ss
inc
daa
pop
outsl
cli
mov
hlt
pop
sub
mov
fdiv
jae
or
das
mov
mov
jg
sub
pop
push
enter
jmp
cmpxchg
sub
enter
loopne
fs
fcomps
cmpsb
or
mov
std
stos
cmc
lods
mov
lea
push
in
xchg
cli
not
insl
or
push
and
push
sub
loope
mov
pushf
mov
pop
repnz
test
bound
mov
dec
arpl
rcrb
out
push
ret
push
mov
imul
xor
out
mov
or
ljmp
inc
inc
in
inc
orb
adc
xchg
insb
mov
mov
push
mov
sub
add
mov
lods
sub
out
cmp
dec
es
int3
adc
and
daa
sbb
lock
aas
adc
aad
fnstenv
or
jo
arpl
and
imulb
mov
xchg
xor
xor
sbb
scas
or
cmp
push
imul
sub
mov
cli
add
xchg
nop
pop
out
inc
popa
ljmp
cmpsb
cld
addl
cltd
xchg
and
inc
xchg
jbe
hlt
subl
or
aam
mov
and
aam
hlt
lret
adc
and
outsl
sbb
aam
inc
lahf
inc
popa
outsl
lret
fisubrl
mov
add
cmpsl
imul
dec
popa
les
mov
mov
aas
pmaddwd
lahf
insb
cmpl
mov
mov
mov
stc
mov
test
xor
cmp
idivb
bound
xor
push
insb
pushf
or
push
lret
scas
adc
ss
leave
lds
cli
push
icebp
or
sarb
bound
mov
outsb
jb
aam
ljmp
cmp
int
push
pop
xor
movsl
pushf
xchg
iret
dec
sub
loopne
jae
dec
jb
stos
push
in
ficoms
mov
fmull
adc
mov
xor
insb
adc
stc
lea
outsl
sahf
add
out
negl
mov
jge
inc
enter
rclb
fs
mov
mov
repz
jnp
hlt
jo
lods
clc
outsl
popf
fwait
aad
orl
mov
mov
inc
cmp
xor
ljmp
push
and
in
xor
mov
dec
and
arpl
nopl
xchg
xor
test
pop
add
imull
and
loop
mov
inc
or
es
insb
scas
pop
fs
sub
and
test
js
movsb
xchg
test
std
shr
fstpt
jp
aaa
movsb
std
sbb
sbb
cmp
loop
pushf
in
rorl
sbb
movsb
fsubl
sub
jae
sbb
jmp
aas
roll
sub
sub
cld
fwait
mov
adc
push
enter
dec
dec
jnp
cltd
dec
push
testb
add
mov
mov
fldl
cwtl
rolb
inc
ja
inc
lock
lods
les
fists
out
pop
cmp
addr16
push
jnp
jnp
dec
mov
sar
sbb
shl
cmp
jl
mov
fbstp
jp
outsl
cmc
into
mov
sarb
les
mov
test
call
ss
pop
sbb
xchg
and
mov
lret
mov
sbb
and
push
in
xchg
cmp
dec
scas
or
in
or
add
pusha
sbb
xlat
ret
jno
sub
outsb
pushf
push
in
inc
cli
orl
adc
mov
fcompl
pop
push
lret
out
mov
inc
inc
pop
in
xlat
int
inc
sbb
or
mov
lahf
push
push
shlb
data16
xlat
cmpsl
loope
add
pop
aam
xor
xchg
aad
xchg
outsl
in
xchg
or
and
push
mov
iret
stc
ret
stc
enter
out
xor
xlat
lods
testl
push
rol
push
stos
iret
mov
push
add
popa
xlat
jle
sbb
add
mov
push
mov
jmp
mov
repz
cmpsb
stos
mov
xor
ljmp
sub
aam
dec
inc
in
xchg
repnz
fistl
imul
shrb
mov
pop
stc
shrb
sbb
adc
cmp
in
std
sub
mov
in
push
cmp
ja
xor
cmc
cmp
dec
data16
int
clc
jmp
imul
imul
and
or
jg
inc
sbb
lds
adc
mov
addl
loope
andb
mov
lea
jl
in
sub
and
dec
in
xchg
add
leave
cltd
and
js
mov
mov
lret
ja
xor
out
push
xchg
sub
push
sub
lods
lea
fdiv
sub
push
and
jge
mov
mov
or
push
leave
pop
adc
ret
xchg
icebp
mov
rdpmc
jo
dec
pop
sub
cmc
push
int3
pop
cmp
adcl
sarl
data16
sub
and
pop
clc
cmp
outsl
push
mov
adc
cmp
std
in
mov
inc
push
adc
int3
ds
testl
arpl
cmpsl
in
inc
push
ss
and
je
jge
lret
and
cmp
outsb
lahf
les
in
cmp
stos
xor
mov
jmp
dec
push
adc
out
add
outsb
mov
insb
pop
jge
fdivr
test
lret
ljmp
cltd
int
sub
outsb
mov
shlb
sbb
pop
test
mov
mull
rcl
ljmp
jecxz
lret
daa
or
insl
mov
cld
push
movsb
mov
pop
xor
xchg
mov
outsb
cmp
xchg
aam
daa
adc
adcl
cmp
ja
mov
sbb
mul
cmp
jnp
push
xor
insl
and
xor
dec
adc
add
or
jnp
xchg
iret
adc
je
push
scas
sub
out
fwait
in
push
mov
arpl
fidivrl
xorl
mov
and
xchg
loopne
pop
lds
test
mov
sub
push
push
sub
inc
inc
out
and
repnz
and
inc
aaa
popa
adc
and
xor
cmpsb
cmc
xor
in
push
dec
cmp
imul
mov
test
push
dec
clc
shl
daa
xchg
jae
lods
xchg
sub
imul
or
xchg
push
adc
addb
imulb
push
xchg
lea
xor
mov
test
push
inc
and
cmp
clc
mov
les
jne
stos
insl
add
adc
and
dec
push
pop
aaa
sti
test
repnz
pop
fsubrl
adc
test
dec
aam
sbb
mov
fsubs
lret
out
pop
sub
in
ds
dec
or
jecxz
jo
cld
test
aas
sbb
xor
adc
sbb
dec
jbe
push
testb
or
movsl
pop
add
jno
pop
jnp
decl
mov
mov
pop
pop
lret
adc
rorl
ljmp
ljmp
lret
adc
jne
gs
mov
inc
out
xchg
dec
cld
popl
sbb
lcall
mov
stos
outsl
adc
cmpsl
fsubrl
and
popf
sbb
mov
inc
add
lret
mov
ss
pop
cmp
call
jge
test
leave
lock
or
enter
ror
sub
mov
lret
inc
cmp
lods
mov
imull
cld
mov
push
fucomp
or
sub
daa
idivl
inc
testb
jl
call
mov
lock
push
mov
icebp
mov
lea
in
inc
roll
mov
movsb
out
mov
cmp
outsl
mov
inc
or
dec
icebp
and
jge
or
out
pop
cmc
xchg
lea
cmc
xchg
dec
or
dec
std
fistps
int
sahf
sub
pop
push
mov
mov
cld
arpl
pop
cld
in
inc
ds
cs
loope
rcrl
outsl
add
call
sbb
xchg
xchg
popa
cmp
outsb
jecxz
lret
inc
and
jle
cmp
xor
sbb
in
add
int
das
xchg
ds
sub
leave
or
es
mov
add
jnp
lds
notl
lea
cld
into
cmpsl
in
or
add
ret
push
cmpsl
test
les
xchg
sbb
mov
adc
scas
inc
cs
icebp
ffreep
sub
ret
push
sub
stc
cmp
mov
sub
jnp
jge
lods
lds
shl
es
or
inc
add
push
fs
mov
imul
dec
sbb
jmp
jecxz
push
outsb
bound
jae
jo
dec
fistpl
dec
mov
xor
pop
lea
mov
loope
lods
or
js
xchg
ret
out
and
inc
movsb
pop
jbe
xor
popa
lcall
push
adc
mov
ss
xchg
add
sahf
ja
lds
dec
jmp
xchg
cltd
outsb
pop
mov
xchg
push
rorl
in
repz
pop
or
js
iret
sti
rorb
js
fidivl
sub
nop
push
imul
xchg
lret
sub
lret
xchg
scas
mov
leave
mov
sbb
mov
add
fcompl
inc
sbb
lcall
int3
mov
push
cld
jns
lea
jge
arpl
jecxz
sub
pop
adc
imul
adc
icebp
xor
jne
or
mov
add
stos
sbb
aas
xchg
sbb
xchg
mov
aaa
jne
cmp
lock
dec
loopne
outsb
mov
enter
pop
in
jb
ljmp
enter
jmp
xchg
jns
jb
inc
jp
pusha
fmuls
mov
inc
lret
and
and
fwait
test
jo
xor
out
mov
jbe
aad
or
imul
push
sub
and
cwtl
add
cmp
push
sub
test
cmp
imul
js
insb
add
mov
outsl
jecxz
lock
fwait
ror
aaa
les
sti
push
ljmp
std
jmp
mov
mov
xchg
mov
cs
xor
mov
cmp
daa
adc
pop
or
add
cmp
popf
ds
in
cmpsb
jmp
mov
xchg
jns
push
ficompl
stc
add
mov
xlat
in
pop
sub
fmul
push
dec
cwtl
pushf
push
xchg
mov
push
fwait
scas
stc
jae
nop
popa
jmp
mov
xchg
lahf
sub
xchg
mov
adc
roll
jbe
loopne
and
mov
mov
pop
mov
xor
imul
lods
sarb
and
cld
clts
or
filds
xchg
lods
mov
arpl
xchg
lcall
repz
aad
push
and
in
stos
cmpsb
mov
idivb
outsb
test
nop
pop
imul
sub
cmp
jns
sahf
repnz
je
sub
push
aam
mov
out
dec
push
or
adc
lret
cmp
ret
mov
push
in
addr16
push
xchg
add
jle
pop
int
push
into
fsubs
enter
call
push
ret
inc
xor
rorl
adc
add
adc
mov
popf
jbe
out
add
loop
jno
imul
test
add
js
clc
mov
mov
add
sbb
lret
xchg
xor
mov
fistps
push
mov
dec
out
sbb
outsl
cltd
jmp
and
mov
mov
test
fst
mov
scas
nop
sbb
jl
cmpsb
ljmp
inc
outsl
push
fsubrs
sar
xor
js
es
xchg
loop
enter
adc
movsl
bound
das
xlat
xor
out
movsl
sub
repz
cmpsl
xor
push
out
and
push
mov
push
stos
sub
mov
or
leave
mov
sub
push
jbe
mov
xchg
ds
test
inc
xchg
stos
add
adc
popa
jbe
sbb
pop
rol
popa
popa
call
inc
adc
int3
push
or
jbe
sar
mov
inc
xchg
lea
cs
scas
faddp
mov
mov
sbb
add
add
adc
mov
leave
add
adc
sti
mov
adc
mov
testl
xor
xchg
mov
or
or
jecxz
into
sub
mov
stc
push
inc
leave
loop
popf
out
adc
xchg
ret
and
mov
in
mov
cmp
jns
jge
stos
jge
ljmp
add
test
in
jne
insb
xchg
pop
push
sar
push
lret
pop
mov
mov
mov
dec
out
mov
mov
adc
stc
in
cmp
sbb
mov
push
rcrl
push
orb
adcb
aaa
movsb
fwait
sub
add
push
dec
sbb
cltd
xchg
cmpsb
aad
adc
xor
ret
dec
sbb
dec
jbe
inc
mov
in
mov
push
std
out
loope
sub
mov
jg
ret
mov
mov
mov
int
push
jnp
lods
jmp
push
test
xorb
add
push
mov
push
out
or
popa
dec
and
jg
shrb
xchg
es
ljmp
clc
mov
clc
lock
cmc
bound
xchg
sub
lahf
es
in
ds
xchg
pop
in
inc
sub
frstor
mov
fildll
cmp
nop
negl
les
xor
push
inc
mov
dec
inc
xor
rcrl
pop
lods
and
test
fisubrl
mov
or
aas
sub
pop
push
das
mov
int
lret
mov
xor
mov
lret
leave
cmp
jl
rolb
pop
out
push
stos
fs
cmpb
loopne
pop
fistl
mov
mov
cmp
mov
mov
and
fdivs
nop
pop
dec
adc
jb
ja
movsl
or
fildll
cltd
cmpsl
ds
or
inc
std
dec
pop
cld
movsl
jo
add
les
leave
add
ret
dec
iret
shlb
add
shll
and
push
add
in
dec
popf
xchg
sub
pop
jp
cwtl
imull
shl
push
xchg
sbb
jb
das
out
jl
pushf
jns
imul
or
add
fmuls
test
jmp
into
push
daa
inc
mov
or
aaa
fs
lods
mov
out
sub
je
rclb
push
je
stc
daa
mov
out
rorb
add
pusha
divl
jo
stos
pop
sbb
mov
push
mov
push
into
xor
xchg
sub
pop
fadds
ror
ds
in
in
ret
mov
xchg
ret
mov
enter
mov
xor
mov
fisubl
mulb
push
xchg
test
cmc
push
aaa
mov
xchg
dec
lret
cli
popf
imul
cmp
xor
cmp
xlat
dec
es
mov
mov
inc
roll
jnp
test
mov
mov
popf
jns
es
repz
in
cmpsb
cmp
pushf
xchg
add
and
add
mov
adc
mov
push
stos
and
jge
lret
add
adc
ret
int
push
fldt
adc
xchg
adc
cmpsl
xchg
sub
jle
shlb
rolb
jae
imul
xchg
sbb
inc
out
shll
mov
iret
sarl
outsb
mov
push
movsb
repnz
int
inc
mov
mov
inc
pop
mov
and
cmpsb
rcrl
dec
sbb
popf
mov
and
dec
rolb
xchg
imul
adc
test
loopne
dec
pusha
jmp
cmpl
mov
adc
and
iret
pop
ss
fidivs
jno
jae
imul
inc
xor
push
adc
stos
pop
cmc
mov
adc
or
or
test
xchg
imul
orl
sbb
repz
xchg
mov
clc
imul
push
push
iret
jg
daa
fwait
cld
jno
sahf
nop
int
loop
mull
push
arpl
fninit
sub
inc
repz
sub
aas
mov
cmpsb
scas
mov
jg
jge
test
xchg
aaa
in
add
push
jg
adc
and
repnz
out
add
mov
cmp
shrb
scas
sahf
mov
jae
pop
inc
aaa
or
xor
lcall
sarl
bound
rclb
pop
jg
jns
or
je
ss
icebp
cltd
aad
mov
xor
or
fiadds
imul
or
dec
jne
mov
xor
push
dec
pop
ret
and
lock
xchg
push
add
movsl
pop
or
push
imull
fstpl
dec
sbb
mov
stc
out
pop
fcoml
ss
out
xor
pop
and
scas
cmp
lret
xor
cmpsb
sub
icebp
xchg
clc
cmp
mov
lock
push
add
addl
pop
mov
dec
mov
inc
je
fwait
jle
sub
sbb
out
push
outsl
les
inc
push
and
cli
sti
mov
xor
mov
jo
or
popa
and
ss
nop
inc
push
adc
jo
xor
add
js
dec
pop
jle
and
rcrl
xor
repz
push
mov
xor
cmp
or
lods
lods
sbbl
xor
cmp
cmpsb
xor
push
dec
stos
lcall
cli
mov
add
mov
and
repnz
xchg
mov
popa
and
cmpb
and
xor
push
stc
adc
ret
push
cltd
inc
aad
push
aam
test
jge
daa
rcl
jge
pop
popa
nop
inc
pop
loope
push
sub
cmp
dec
sub
daa
mov
push
pop
test
pop
mov
and
push
loopne
pop
enter
push
ss
rolb
aas
mov
fs
xchg
inc
or
mov
daa
add
outsb
pop
mov
jle
mov
inc
aaa
xor
inc
or
mov
inc
push
jp
mov
pop
test
mov
pushf
enter
mov
insb
int3
and
adc
decb
mov
lods
and
sub
in
cmp
pop
stos
jmp
cmpb
and
stc
push
test
rol
int
mov
movsbl
sub
add
and
jae
data16
pop
loopne
dec
es
enter
fwait
pusha
stos
mov
push
xchg
hlt
or
notb
leave
out
test
je
fimuls
lret
xchg
jge
jns
cmpsl
push
inc
shll
xchg
inc
clc
and
test
adc
lods
outsb
aas
sarb
scas
add
mov
jle
or
adc
test
rcll
movb
and
das
pop
shll
cmp
mov
js
adc
mov
ds
in
pop
jne
imul
and
mov
inc
dec
inc
shlb
sbb
in
rolb
aaa
sbb
and
outsl
or
adc
mov
mov
in
ret
cmc
vmovddup
lods
cwtl
sarb
cld
lods
adc
and
pop
dec
jmp
mov
out
cli
addw
push
stos
pop
sbb
pop
push
and
subb
fisubrs
dec
das
jmp
and
cmp
and
pop
dec
xchg
xor
adc
xor
pop
push
imul
sbbb
inc
push
dec
movsl
xor
push
pop
mov
notl
cmp
sbb
test
out
dec
mov
movsl
xor
lahf
shlb
or
push
cmpb
mov
fmul
test
jb
int
fdivs
fs
and
ds
jge
xor
insb
jbe
pop
es
aam
sahf
push
stc
add
sub
sub
mov
daa
jge
into
or
or
stc
int
jmp
and
sbb
fmuls
test
add
je
pop
xor
mov
inc
cmpl
xchg
push
sub
add
fiadds
shlb
loop
or
and
xchg
jbe
movsb
cmovnp
add
xchg
pop
adc
dec
add
orb
int
rolb
lods
dec
test
xor
ret
iret
inc
jno
mov
push
and
fmuls
cmpsl
sub
pop
cs
or
jl
and
jmp
cmp
lret
dec
dec
lods
or
push
repnz
dec
adc
dec
jb
pop
xor
nop
xor
cmc
jo
pop
pop
dec
lds
adc
push
mov
movsb
pop
add
or
bound
sbb
push
cli
arpl
fdivr
dec
cmp
jmp
adc
cmp
sarb
lret
stos
push
jl
les
dec
aaa
xor
out
test
iret
adc
xchg
or
das
mov
out
imul
dec
pop
test
inc
js
test
ret
fsub
xor
pop
enter
xchg
fisubl
dec
mov
add
inc
mov
sub
int3
lea
mov
mov
mov
test
adc
cwtl
sbb
test
repnz
out
pop
repz
xchg
in
nop
xchg
in
push
mov
enter
div
jmp
add
push
pop
add
or
outsb
outsw
dec
fistpll
out
dec
popf
add
js
cltd
mov
repnz
js
das
adc
lret
fwait
or
fsubs
mov
shlb
lcall
les
mov
nop
jp
in
jmp
nop
or
jb
xchg
sti
add
aaa
in
cmpb
sahf
movl
scas
xchg
das
into
inc
jecxz
cmp
adc
frstor
add
cmc
sahf
adc
dec
aam
dec
mov
lock
flds
and
ss
or
adc
stc
lea
mov
test
cmp
push
dec
fwait
and
movsl
andb
xchg
and
outsl
mov
sahf
test
in
cmp
sbb
push
dec
insb
pop
daa
dec
push
dec
popa
pop
lret
lahf
jl
fistpl
xchg
int
mov
repz
or
push
pop
or
lahf
clc
das
inc
aas
xchg
iret
mov
mov
push
push
cmc
jp
inc
sub
xlat
pop
shlb
rcrl
jns
icebp
xor
cmpsb
inc
pop
scas
xchg
mov
pop
jns
cwtl
dec
call
mov
nop
mov
int3
fnstsw
fidivl
dec
ffree
sub
out
sbbb
pop
mov
filds
js
ret
mov
push
and
int3
lods
pop
adc
int3
out
stc
imul
cli
fstpl
push
les
out
dec
or
loop
inc
lret
pusha
mov
push
and
add
in
jae
mov
mov
cmp
mov
lods
adc
rclb
cmp
fmul
arpl
dec
adc
lock
fiadds
mov
sub
cmp
rcll
leave
in
repnz
xor
lret
dec
mov
pusha
pop
cmpsl
ret
int3
sbb
mov
dec
pop
sub
das
mov
ret
dec
inc
sbb
testl
test
shlb
fprem1
cmc
test
jns
pushf
fs
or
jecxz
test
mov
nop
mov
hlt
add
adc
cmp
cmp
rorb
pushf
lock
sub
outsl
sub
cmpsl
ds
pop
or
int
les
pop
mov
sbb
jns
and
push
push
pop
ret
or
and
repnz
sbb
dec
mov
lret
mov
enter
lods
rcll
and
outsb
add
or
lods
mov
dec
and
les
add
mov
incb
inc
cmp
push
loope
out
popf
or
repz
xchg
and
ja
data16
fisttpll
push
rorb
pushw
mov
xchg
adc
xchg
and
int3
add
push
mov
ret
dec
mov
je
push
pop
inc
outsb
es
mov
icebp
jbe
xlat
popf
xor
inc
sti
pop
sub
mov
mov
rcll
js
mov
mov
pop
outsb
push
cmp
cmp
pusha
repz
mov
jo
bound
call
jo
addb
in
add
stos
jp
xchg
test
push
push
sub
out
push
add
mov
sarl
out
sbb
add
outsb
xor
and
push
fcmovnu
ds
scas
es
mov
mov
je
pop
loope
jg
nop
addr16
xchg
out
fnstsw
popf
das
inc
mov
idivl
shrb
test
add
adc
or
test
mov
add
adc
mov
or
dec
into
adc
add
add
jmp
push
lock
or
xor
adc
lcall
test
mov
pop
mov
shll
inc
sarb
xor
les
sbb
fsubp
push
fnstcw
push
mov
dec
repz
or
cld
mov
or
je
arpl
cmpsl
pop
ljmp
inc
es
in
mov
ja
adc
fadds
imul
and
cmp
jmp
scas
lds
and
mov
pop
cmp
and
lcallw
jmp
xor
mov
lock
or
pop
pop
test
mov
mov
jbe
adc
pop
imul
mov
test
mov
xor
shlb
mov
cmp
xchg
jns
jne
dec
lods
int
inc
push
jae
adc
inc
xchg
add
movaps
into
test
add
imul
sti
int
out
sahf
pop
out
add
push
add
fimull
cmp
hlt
cmp
shrl
movd
dec
dec
ficoms
inc
jnp
cs
fldcw
dec
xlat
fadd
jge
xchg
sub
not
lahf
cltd
leave
cmp
adc
xor
dec
xlat
sbb
clc
push
push
jge
out
jg
sbb
lret
mov
cmpsb
pop
js
mov
adc
xchg
push
xor
or
push
push
stos
inc
push
inc
jl
mov
jb
mov
push
enter
add
imul
xchg
test
repnz
cmp
in
mov
inc
insl
push
mov
fstps
je
push
aaa
xor
sub
cmp
sub
mov
xchg
cmc
out
daa
outsl
scas
push
testl
sub
cmp
adc
js
aas
mov
fimuls
lea
imul
lds
xchg
xor
mov
push
subb
mov
push
xchg
and
mov
xor
out
test
bound
std
adc
loopne
push
fbld
sahf
in
pop
sar
and
daa
nop
ss
scas
loop
cmp
out
pop
cmc
scas
std
xor
add
jo
push
shll
je
jb
add
int3
insl
popa
jmp
notb
and
inc
movsl
inc
dec
fdivs
cmp
xlat
adc
outsl
xchg
xor
les
push
pop
lods
mov
or
cmp
cmp
add
mov
sub
mov
insl
adc
cli
jmp
xor
mov
sbb
jl
inc
hlt
cltd
sbbb
xchg
andb
cmp
mov
xchg
adc
sub
std
cmp
push
xor
pop
xor
ljmp
push
sub
pop
push
scas
push
les
les
add
add
sub
mov
mov
iret
mov
push
lods
arpl
lock
fldenv
inc
fldenv
in
cmp
bswap
gs
sbb
adc
pop
aas
xchg
push
mov
mov
in
and
mov
inc
mov
push
out
mov
mov
insl
push
pop
jne
clc
sbb
jbe
vpmulhuw
lret
sub
lods
outsb
push
loope
inc
daa
repz
pop
pop
pop
cmp
aas
adc
cli
aam
jnp
in
popa
sub
icebp
lods
out
adc
iret
call
leave
fs
ret
jns
mov
mov
test
and
add
cmpsl
je
mov
xchg
inc
mov
lods
add
mov
sarb
add
bswap
shl
incb
gs
hlt
add
pushf
pop
push
push
testb
pushf
int3
xor
scas
stc
fidivs
sub
mov
lock
in
fsts
jo
in
and
fcmove
stc
or
lret
add
aas
imul
add
adc
and
adcl
mov
in
arpl
or
data16
push
cmpb
fisttps
scas
cmp
outsb
mov
dec
mov
not
inc
pop
repnz
mov
dec
insb
jnp
imul
ljmp
xor
ljmp
push
scas
in
out
or
iret
outsl
fnstsw
add
aad
out
cmpl
repnz
mov
fwait
push
fdivp
pushf
or
movsb
dec
push
dec
push
subb
adc
xor
adc
loopne
ret
jnp
inc
xlat
test
inc
mov
arpl
ficomps
pushf
xchg
pop
inc
leave
mov
ljmp
inc
outsl
les
and
rol
daa
mov
mov
xor
ljmp
scas
adc
aam
sbb
call
inc
insb
inc
cltd
pop
fsubrl
inc
push
shll
dec
push
testb
ret
xchg
pushl
rcl
ret
movsl
inc
andb
mov
inc
clc
pop
addr16
cmp
int
or
jo
xchg
lret
xchg
in
gs
cmpsb
and
loope
stos
mov
dec
xchg
mov
jp
pushf
push
cmp
and
movl
mov
fcomp
push
mov
adc
test
xor
inc
out
loope
sub
negb
test
mov
pop
jge
aas
fs
xchg
xor
es
lcall
aad
push
mov
cmpsb
sahf
jmp
cmp
pop
sbb
loop
adc
xchg
rclb
and
lea
or
sub
addr16
sbb
pop
sbb
aas
ret
in
sbb
insl
dec
in
and
adc
data16
arpl
cmp
in
jns
xlat
mov
out
in
inc
add
outsl
out
inc
mov
pop
nop
loope
outsl
or
jp
xchg
arpl
in
sbb
push
add
mov
cli
stc
into
cmp
lds
idivl
faddl
xchg
dec
ds
popa
and
dec
popa
push
incl
dec
mov
testb
js
cmp
lret
int3
xchg
or
out
jle
xor
pop
fistpl
jecxz
or
mov
sub
push
jo
in
pop
in
pop
shrb
daa
sub
xchg
adc
rcrb
loope
or
shlb
cmp
sbb
mov
lods
cwtl
add
adc
jne
movsb
fwait
dec
scas
jge
or
insb
mov
int3
mov
mov
pushf
out
xchg
andb
pop
cmpsl
jne
sti
inc
cltd
jb
sub
cltd
imul
cmp
ror
jp
xchg
sbb
push
mov
jmp
sub
mov
lock
fsubrs
ret
ret
fdivrl
inc
int
push
loopne
movsl
lahf
in
sahf
xchg
jmp
in
mov
fisttpll
stc
clc
movsl
pusha
and
and
xchg
aam
sbb
lcall
jnp
cmp
test
jecxz
push
outsl
inc
cmp
js
mov
das
sbb
sti
jae
jo
loope
xchg
or
pop
fsts
fisttpll
lahf
jmp
aaa
mov
insb
popl
sub
out
mov
xchg
out
rol
xchg
lcall
push
dec
dec
push
std
jge
cmp
test
jle
es
sub
jge
outsb
jns
mov
jne
sbb
cmpsb
adc
pop
std
loopne
gs
je
jns
jne
in
pop
fstpl
test
adc
lret
mov
filds
jbe
test
test
pop
arpl
test
dec
rcr
jl
in
out
scas
jae
imul
lods
pop
shrl
xchg
or
inc
and
cwtl
cmp
ljmp
roll
lcall
mov
aad
or
adc
xor
sub
call
adc
fwait
push
sub
outsb
roll
jnp
xor
lret
imulb
cmp
es
mov
aad
push
fdivrp
push
mov
rcl
aaa
addr16
pop
xor
cmp
sub
test
push
inc
or
leave
xor
lret
jns
aas
xchg
dec
insl
addb
stos
fdivl
idivb
xor
xchg
iret
mov
inc
and
or
mov
jne
adc
xor
fidivs
push
pushf
xorl
arpl
push
fucomi
mov
aas
add
mov
roll
mov
aam
enter
in
out
mov
and
mov
pop
fisubl
or
mov
imul
cmp
push
lahf
incl
ret
fldl
jno
fdivr
das
roll
dec
movsb
sub
stos
dec
test
mov
or
mov
in
aad
and
mov
data16
add
aas
in
add
mov
int3
lods
sbb
lea
int3
rorb
insl
or
repz
mov
mov
rolb
sti
out
addl
aad
adc
dec
aad
and
jle
inc
push
sub
fwait
sbb
sbb
pusha
mov
jnp
push
sbb
fs
test
add
lahf
add
mov
cmp
scas
out
inc
inc
xchg
cmpsb
dec
movsl
xchg
sbb
pop
push
dec
iret
lods
push
or
adc
outsl
call
adc
sbb
push
mov
cmpsb
or
fimuls
mov
ror
sbb
hlt
ss
xor
in
mov
je
dec
aam
ss
frstor
xlat
fbld
dec
lods
cld
int3
inc
mov
ret
and
aad
sti
test
push
pop
push
mov
rclb
movsl
cmp
popa
sbb
cmc
out
dec
dec
cmp
mov
addr16
xchg
test
cld
aad
sub
stos
jecxz
rcrl
lahf
aad
add
cld
dec
pop
leave
shlb
push
out
xor
sub
lahf
sti
sbb
sbb
cmc
pop
add
js
sub
inc
cwtl
movsl
jp
mov
div
icebp
lea
aaa
mov
dec
sub
xchg
sub
cmpsl
add
cmp
sub
jno
push
pushf
jmp
lcall
sbb
ljmp
add
ljmp
movsb
ret
push
daa
add
vcomiss
sub
or
fnsave
mov
inc
fcomp
add
sub
mov
sahf
or
push
hlt
pusha
enter
sarl
dec
sti
xchg
out
fstpt
outsb
bound
sbb
arpl
add
not
ficompl
and
add
pop
and
push
inc
in
imul
arpl
addl
cmp
call
jge
pop
call
add
or
movsb
test
movsbl
mov
jmp
add
movsl
mov
add
gs
neg
hlt
and
dec
xchg
stos
cs
jno
nop
mov
xlat
add
mov
push
cmpsl
outsb
aad
cmpsl
push
repnz
es
dec
push
mov
lock
hlt
push
das
roll
out
jno
inc
iret
bswap
inc
outsb
jecxz
sbb
pushf
aaa
inc
and
jnp
stos
mov
pop
add
jae
fwait
push
dec
or
jo
lods
hlt
xchg
fcom
sbb
test
pop
enter
imul
fmull
or
imul
loopne
inc
aad
sub
movsl
mov
pusha
cwtl
stc
out
stc
dec
lret
add
mov
lcall
lds
icebp
mov
push
xchg
mov
out
mov
movsb
xor
out
add
jle
mov
out
repnz
out
movsl
mov
dec
sbb
insb
sarl
mov
decl
sahf
push
push
sub
push
divb
push
push
xchg
mov
xchg
mov
push
gs
adc
pop
inc
dec
and
mov
enter
mov
aam
lret
outsb
push
aam
fcoml
jae
ret
inc
loop
push
pop
call
outsb
mov
pop
fdivl
arpl
adc
lea
mov
dec
aas
mov
mov
cmpl
sbbb
xchg
das
js
mov
pop
bound
mov
test
jno
mov
subb
aad
fimuls
push
xor
movsb
andb
or
or
xchg
xor
cwtl
fs
push
mov
jnp
and
lcall
or
cmp
popa
pushf
mov
pop
movsl
cs
lret
adcl
fcomps
sub
jge
push
mov
fmul
lahf
out
frstor
loop
data16
call
sub
imul
mov
out
or
cmc
xchg
movsb
push
mulb
inc
pop
push
sti
repnz
sahf
call
pop
icebp
into
loopne
repz
sbb
jbe
pop
imull
pop
jge
fcoml
pop
push
push
dec
jns
sub
lock
inc
adc
ljmp
ret
dec
mov
fcompl
rcrl
sub
lret
insl
popf
cmc
mov
push
jno
sbb
ds
pop
fwait
mul
xchg
filds
adc
and
imull
ds
cmp
push
mov
mov
data16
testl
pop
and
add
imul
jmp
cli
cmc
pop
sub
sbb
hlt
popf
cmc
addl
and
mov
mov
push
ss
push
adc
repnz
xlat
push
lock
int3
repnz
ret
and
es
and
mov
repnz
iret
lahf
mov
mov
mov
iret
ja
fs
mov
mov
or
lret
popa
jo
bound
mov
outsb
les
jo
mov
jle
fcompl
bound
cmp
add
adc
loope
movl
mov
mov
sub
lret
je
cmp
jbe
iret
imul
and
pop
and
and
lock
sub
sub
orb
loopne
push
loope
das
icebp
scas
test
dec
push
add
jl
mov
lods
popa
ror
adc
int
fists
lahf
push
mov
repz
push
mov
pop
push
jmp
jl
push
int3
xchg
mov
ficomps
test
dec
insb
mov
sbb
aam
or
add
jae
push
stos
and
cld
cs
sub
and
push
adc
pop
mov
stos
gs
inc
adc
add
cmp
push
sti
sbb
sbb
rorb
xchg
movsb
inc
addr16
inc
scas
cmp
add
ficoms
jg
push
mov
xor
outsb
sub
popf
fistps
stos
iret
sti
loop
add
inc
and
sub
stos
sbb
lret
stos
inc
icebp
into
cltd
mov
push
jbe
xchg
add
mov
std
inc
pusha
jg
pushf
aaa
lea
scas
push
push
and
mov
leave
mov
test
enter
jo
testb
adc
mov
mov
cmp
xchg
out
dec
adc
cli
inc
imul
jbe
test
into
cmp
cmpsb
cmp
shl
in
push
add
push
out
inc
mov
test
imulb
mov
pop
jbe
xchg
xchg
xor
adc
fdivs
ficomps
jl
in
mov
test
dec
cmpl
rol
in
pop
cmc
rcrb
adc
push
or
jl
or
sti
sbb
mov
xchg
add
add
sti
lock
push
in
js
movsb
push
jo
lcall
out
outsb
bound
mov
mov
das
mov
mov
sub
fsubl
xchg
cld
push
cli
insl
test
shlb
test
jmp
sub
rolb
pop
dec
lahf
daa
ret
imul
les
popa
jo
xchg
xorb
mov
imul
cli
shll
mov
inc
push
pushf
int3
add
sti
sub
cmp
inc
icebp
mov
out
test
stos
sbb
repz
sbb
lahf
mov
add
in
lock
jae
mov
outsl
rclb
sbb
inc
jno
dec
in
cmp
sub
in
clc
pop
fs
pop
mov
mov
pop
xchg
mov
pop
cmpsb
xor
xor
movb
aad
stc
insl
push
push
jns
sub
sub
dec
pop
xor
mov
out
imul
fisttpll
shll
pop
aam
aad
mov
mov
cmpsl
jmp
insl
push
or
hlt
add
xchg
and
fs
fsubrp
jnp
aas
aaa
pop
push
out
aad
insb
adc
xchg
aas
das
jno
outsb
loope
xchg
sub
outsb
adc
cmpsb
push
ljmp
push
addl
inc
jle
lods
push
or
adc
and
ret
lock
sub
xor
sbb
stos
sbb
cmp
mov
xchg
mov
rolb
mov
push
sub
inc
inc
adc
mov
es
cmpsb
out
add
int
mov
mov
inc
in
add
pop
mov
adc
jbe
add
pusha
mov
push
jecxz
arpl
addb
cmpb
gs
lcall
add
cli
add
jnp
cmpsb
iret
push
push
push
cmp
xchg
out
pop
or
mov
sub
lret
out
adc
push
or
pop
pushf
mov
inc
in
jo
inc
test
pop
or
addl
sub
shlb
shll
sub
jl
loop
aam
or
sub
dec
xor
cli
ss
out
adc
ret
mov
ss
lea
push
loopne
aam
sbb
lods
rolb
inc
sub
lea
add
sub
push
or
out
ret
jl
adc
cmp
sbb
bound
das
stos
inc
mov
pop
or
pushl
jge
xor
adc
std
lock
and
jno
addr16
sbb
test
and
sub
cmpsb
fnsave
enter
add
data16
nop
and
fwait
shr
mov
pop
cmc
repz
sqrtps
mov
pop
sub
mov
xchg
mov
mov
arpl
sarb
xor
add
mov
pop
dec
or
ds
dec
or
fistpll
hlt
rclb
mov
popa
into
pop
mov
je
data16
insl
subl
sbb
std
jp
cmpl
pop
mov
cmpsb
cmp
mov
mov
lahf
test
sbb
out
jecxz
mov
mov
push
fistpll
push
scas
pop
add
pop
lock
dec
mov
xor
ret
cmp
add
and
fwait
subb
shl
sub
jne
fstl
adc
cmp
mov
and
xchg
add
dec
mov
xor
insb
ja
mov
mov
xchg
cmp
add
adc
jno
mov
mov
cmp
cltd
push
push
or
test
rcr
dec
jl
mov
jae
or
popa
subl
loope
add
cmp
icebp
xor
arpl
insl
stc
inc
stc
arpl
lds
cmc
push
daa
daa
push
orb
sub
hlt
dec
or
repnz
sarl
mov
or
cmp
or
add
mov
nop
jae
lods
xor
adc
lods
aaa
dec
std
pop
lret
adc
std
mov
insl
mov
adc
sbb
inc
xchg
xor
loopne,pt
add
ds
mov
inc
loop
mov
call
or
popf
sahf
mov
push
cli
aas
divb
dec
popa
push
and
out
leave
cmp
enter
shlb
ljmp
fidivl
lea
add
mov
js
dec
cltd
jp
fidivrs
jo
dec
cli
mov
imul
mov
fistpl
xchg
mov
mov
mov
inc
imul
jnp
arpl
jnp
stos
adc
lret
fidivl
std
lock
xor
mov
jg
cmp
call
or
xor
fs
subl
or
cmpsl
aas
push
insb
dec
pop
jle
jmp
add
mov
rcll
fidivrs
call
ds
xor
add
nop
xchg
test
inc
loop
or
jno
cmp
lahf
popa
aas
dec
pop
xchg
out
daa
xchg
les
into
les
jmp
out
mov
lock
test
into
push
call
insb
inc
xchg
adc
fadds
xchg
cmc
jae
outsb
sbb
loop
rorl
mov
loop
sub
scas
dec
add
orl
std
lods
sbb
lods
movsb
shll
and
cwtl
mov
mov
stos
std
testb
popl
mov
cli
jg
not
or
das
push
sub
push
adc
dec
cmp
call
sti
jge
popa
push
xor
into
push
arpl
pop
xor
cmp
pop
testl
mov
sbb
imul
jno
pusha
test
in
mov
mov
push
test
and
or
lock
or
loope
sbb
adc
mov
adc
mov
in
cmp
andb
cmpsb
jmp
cmp
or
push
mov
xchg
stc
daa
xchg
in
cltd
cmc
fucomip
outsl
sbb
or
pushf
cs
xor
negb
scas
cltd
push
or
aad
stos
adc
mov
nop
and
push
cwtl
out
cwtl
ret
xor
xor
lret
aas
cmp
call
bound
std
add
pop
xor
jmp
mov
out
xchg
mov
xchg
dec
ss
insl
or
rcll
loope
outsl
ja
je
popa
aam
mov
jo
fldenv
std
xchg
pop
fnsave
insl
mov
dec
add
inc
push
pop
push
in
in
data16
leave
lods
lcall
and
mov
adc
scas
fwait
adc
fistpll
test
mov
push
xchg
adc
mov
pop
inc
xchg
jg
pop
or
es
mov
and
lret
xchg
mov
clc
call
mov
pop
pop
lock
mov
and
pop
idiv
stc
ds
or
mov
pop
dec
xchg
imul
mov
jl
mov
mov
mov
shr
ficoml
loop
or
ficoms
iret
pop
lret
xchg
push
aaa
push
in
jmp
es
jle
or
fwait
cmp
ljmp
pop
fsubrl
cwtl
adc
fdivl
xchg
sbb
lahf
jno
arpl
aaa
fsubr
cmpb
or
pop
mov
dec
push
xchg
test
mov
jne
std
mov
sub
in
call
movsb
lods
lds
pop
repnz
jl
loope
les
aam
mov
xchg
outsb
mov
mov
mov
xchg
inc
pop
out
and
lret
ret
pop
stos
ret
or
add
cmp
out
jle
pop
loop
push
pop
hlt
scas
lock
add
dec
xor
loope
pushl
pusha
xlat
ret
inc
pop
int
dec
mov
mov
jmp
imul
movsb
scas
fmuls
or
popl
sbb
js
popf
aam
sub
movl
shlb
dec
push
pop
add
mov
sbb
cs
or
das
fldenv
pushf
call
in
sarl
pushf
pop
or
sbb
mov
push
fndisi(8087
jbe
aaa
mov
xchg
mov
stos
and
jae
dec
nop
es
push
in
mov
add
adc
pop
add
jno
and
jno
dec
std
push
lock
cmpsb
rclb
pop
mov
jo
insl
and
int
pop
pop
mov
adc
cltd
xchg
pop
jne
into
ss
xor
jmp
fsts
xchg
jl
cmp
and
or
sbb
js
xchg
icebp
sarl
mov
sbb
cmp
jmp
lret
pop
out
fldl
mov
out
popf
sbb
or
js
sub
test
lock
jae
jecxz
jnp
rcll
aad
cmp
pop
pop
lcall
push
arpl
adc
mov
jge
pop
cli
pop
cmpsb
jne
push
scas
inc
pop
or
test
dec
movsl
mov
mov
cmc
inc
ret
outsb
mov
mov
adc
insl
mov
lcall
add
sub
fnstsw
fcos
cld
adc
lods
or
mov
ret
dec
inc
mov
jl
jg
inc
jecxz
mov
jbe
mov
mov
and
out
xlat
out
mov
ret
ljmp
mov
sarl
inc
jbe
ds
imul
push
and
mov
negb
adc
push
adc
add
or
push
mov
nop
pop
mov
cli
lods
push
loopne
mov
pop
inc
lock
inc
lds
imul
sub
cltd
rolb
nop
dec
inc
lcall
mov
mov
pop
mov
push
sarb
cld
cltd
mov
add
add
pop
out
lcall
mov
ror
iret
xchg
inc
pop
je
xor
fwait
dec
leave
dec
push
sbb
add
and
mov
jecxz
xlat
stc
push
out
add
aas
bound
xchg
xor
bound
fs
push
xchg
ja
out
jle
adc
push
fdivrl
xor
aad
lods
adc
push
inc
xorl
int3
jg
push
dec
inc
adc
test
push
jnp
cmp
push
dec
and
push
in
pop
std
jbe
leave
out
xlat
pop
mull
sub
test
in
fadd
les
ja
ss
pop
addr16
xor
lret
mov
loope
push
outsb
mov
mov
add
push
or
rcrl
cwtl
sub
sbb
and
mov
pushl
jbe
popf
xchg
jnp
cmc
pusha
ss
frstor
int3
xchg
icebp
cmp
lods
adc
fisttpll
imul
js
adc
xchg
push
sarl
repnz
rorl
or
out
out
xchg
stos
aas
std
into
inc
rcrl
cmp
jmp
fstl
div
jno
or
xchg
mov
add
dec
pop
out
fildl
and
pop
push
adc
in
hlt
imul
xor
stos
mov
out
repz
dec
cmpsl
pop
pop
jl
insl
mov
es
xchg
adc
aam
add
add
mov
call
std
push
dec
push
jno
test
loop
sarb
xor
push
jmp
in
insl
pop
dec
add
inc
mov
cmc
and
push
mov
push
push
lahf
jo
mov
jp
stc
pop
out
out
fxch
xchg
and
sti
and
mov
jecxz
insb
pop
fwait
sti
adc
sub
ljmp
mov
mov
cmp
fwait
or
mov
or
jmp
testb
aad
inc
sub
xchg
scas
dec
shll
mov
add
add
aas
or
or
push
mov
out
sti
and
xor
iret
push
and
out
shll
loopne
nop
or
ffree
or
mov
ljmp
jae
jo
dec
rcrb
xchg
insl
push
pop
jle
cmpsl
imul
mov
and
in
sbb
int3
pop
movsl
xor
fdivp
sub
jmp
mov
or
push
movsb
repz
dec
adc
andb
fwait
and
cmp
scas
jg
addr16
xchg
int3
or
inc
adc
xchg
pop
mulb
jp
add
add
ret
sub
adc
pop
std
leave
xchg
push
loop
xor
popa
xchg
cmpsb
in
test
jno
mov
dec
xorb
push
xchg
ret
mov
jbe
add
lret
cld
movsl
sub
dec
mov
adc
mov
mov
xchg
std
jmp
or
mov
pshufw
push
cwtl
pop
movsl
jp
jle
jno
cmp
xchg
shl
ficompl
mov
aam
cltd
stos
inc
dec
push
hlt
icebp
repnz
pop
pushf
bound
insl
lret
call
push
lahf
sti
adc
or
jmp
cwtl
xchg
pop
adc
xor
lea
in
pusha
fimull
mov
jno
xor
inc
dec
or
inc
lea
sbb
clc
cmpsb
dec
xchg
push
ja
pop
bswap
iret
fnsave
sbb
pop
cwtl
in
popf
enter
xchg
jb
xor
xchg
fistps
sarb
add
test
push
std
in
stc
mov
push
cmp
mov
push
add
mov
xor
dec
mov
mov
cmc
rcrl
aas
fisttps
sbb
in
xor
pop
lret
mov
or
out
cmp
daa
fmuls
popf
adc
and
jge
fmull
leave
test
pushf
int3
xor
dec
imul
mov
dec
loopne
push
in
and
jae
cmp
dec
inc
aaa
ds
sub
xchg
lds
out
or
mov
jo
or
cmp
and
enter
jg
popa
or
pop
inc
fiaddl
pop
inc
and
xchg
out
mov
jmp
add
ds
xchg
test
js
es
in
loop
sahf
xor
mov
imul
dec
lea
add
jl
cmp
jmp
mov
ljmp
adc
mov
in
sub
orb
pop
and
lahf
popa
loop
sub
dec
cmpsl
lea
mov
xor
fistps
dec
and
sub
fs
test
in
dec
mov
jl
int
jne
loopne
lea
movsb
fwait
sub
adc
sahf
ficomps
fiadds
cld
jmp
scas
dec
cmpsl
mov
adc
mov
xor
imul
mov
xor
sarb
pop
bound
jnp
or
jl
js
inc
adc
cmpsl
or
test
dec
loop
les
std
cltd
cmp
cmp
std
cmp
push
pushf
mov
into
xchg
arpl
sub
arpl
pop
iret
int3
in
lea
add
pop
bound
leave
ret
fmuls
push
pop
pop
mov
mov
dec
clc
and
in
das
push
xor
and
idivb
ja
scas
popf
repnz
lods
jne
iret
xchg
outsb
cltd
inc
mov
cmc
and
xchg
es
je
cmpb
daa
loopne
jne
mov
mov
fiaddl
adc
push
cmpsb
fidivs
mov
mov
test
and
inc
jle
push
inc
cmp
popa
adc
adc
inc
rclb
std
jne
or
push
inc
nop
cmpsb
rcrb
sub
cmp
popf
data16
sbb
call
jo
rolb
add
das
shlb
xchg
jo
xor
loop
and
sahf
add
shrl
pop
insb
leave
or
mov
lds
pop
mov
dec
xchg
loop
pop
push
movsl
cwtl
ja
push
ret
andl
inc
fmulp
mov
xor
and
xchg
in
xor
outsb
sbb
or
and
pop
push
lds
std
out
mov
mov
jae
push
jbe
aas
xorl
cld
dec
std
cli
xchg
inc
int
add
mov
inc
add
nop
aas
adc
jg
rorl
add
sub
mov
xlat
jne
je
sbb
setle
insl
lock
xor
mov
pop
insb
aas
je
inc
xacquire
popa
jne
mov
mov
jo
push
add
or
cmp
sub
dec
push
adc
sahf
movsb
add
jecxz
push
inc
push
jg
jl
jo
or
insl
sbb
sub
das
adc
dec
mov
sbb
mov
inc
jo
xchg
add
xchg
stc
out
cmp
add
cmp
mov
add
mov
ud0
add
dec
mov
dec
pop
or
xchg
xor
cs
movb
jp
cmp
cs
add
mov
adc
cmpsb
mov
leave
stos
or
xchg
xorl
pop
mov
mov
xor
movsb
sarb
mov
fld1
pop
mov
lock
movsb
xor
push
mov
dec
nop
jl
cmpsb
idiv
fs
adc
outsl
push
jae
cmpsb
jns
push
pop
out
push
pop
push
js
sti
hlt
xchg
push
or
nop
ljmp
loopne
rcll
or
ret
imul
jge
pop
jmp
repz
dec
hlt
or
shlb
imul
push
pop
xor
mov
dec
int
scas
pop
and
in
dec
xor
mov
add
sbb
shll
dec
push
repz
jno
dec
push
sti
or
lret
ret
mov
dec
in
add
xchg
mov
pop
shlb
icebp
pop
test
pop
mov
fs
xchg
xchg
push
and
pop
dec
movsb
mov
inc
mov
lret
aaa
popf
lds
jb
rorb
jg
loopne
ret
femms
popa
sub
mov
imul
addr16
sub
or
fisubl
pop
pop
ja
jne
in
icebp
test
or
jns
fsubl
jp
sbb
andb
flds
fldt
push
shrl
sub
sbb
mov
push
add
sbb
adc
jmp
cs
inc
xor
xor
sti
jns
add
scas
adc
fldcw
xchg
aam
cltd
roll
hlt
stc
inc
int
incb
and
sub
stc
popa
rcrl
lods
or
push
out
popf
adc
enter
pushf
xchg
mov
cmp
inc
mov
cs
sahf
fisttps
lods
xchg
stos
test
pop
jg
insb
jae
mov
int
jecxz
es
cmp
add
lock
mov
xor
jae
mov
push
xchg
and
dec
dec
insl
mov
jnp
popf
mov
sub
popf
inc
insb
inc
inc
lods
xchg
jl
mov
push
imul
xor
idivb
ja
xchg
rolb
mov
and
jl
xchg
mov
testl
push
jb
call
mov
sub
adc
jno
mov
cld
push
pusha
mov
inc
mov
or
push
inc
addb
inc
lret
adc
rorl
mov
inc
xchg
push
movsw
push
cltd
inc
xor
stos
cmp
inc
mov
insl
je
scas
in
iret
push
xchg
call
mov
pop
sub
lock
enter
pop
push
jmp
mov
hlt
ljmp
enter
inc
imul
push
or
xchg
bound
sub
inc
push
hlt
popf
shlb
xlat
add
cld
push
adcl
jae
enter
xchg
pop
stos
std
mov
pop
cmpsl
jno
outsl
adc
mov
push
mov
mov
dec
test
movsb
sbb
lods
insl
sbb
mov
iret
loopne
cmp
sahf
pop
mov
popf
push
lock
sahf
aaa
xabort
sbb
pop
pop
mov
mov
or
cmpsb
rclb
sbb
adc
mov
pop
add
and
pop
cmp
aad
xchg
mov
xchg
sub
pop
outsb
pop
jg
imul
xor
pop
mov
ja
push
movsl
or
fiaddl
cmp
sub
and
fistpl
push
ret
and
push
insl
xchg
rol
push
cli
lret
test
mov
pusha
cltd
fdiv
ja,pn
fs
xchg
xlat
pop
dec
adc
in
mov
enter
pushf
mov
xchg
shrl
or
xchg
mov
xchg
add
rcrl
sbb
mov
sbb
add
mov
popl
test
push
lods
test
sub
mov
cmp
xchg
and
adc
inc
inc
add
mov
fstl
pushf
pop
jecxz
mov
sahf
lods
aad
cs
fisttps
jbe
test
nop
push
or
xor
push
pop
fstps
jno
cltd
adc
cmp
jnp
movsl
pop
xor
cmp
fdivl
ja
mov
mov
icebp
fwait
sbb
add
lret
call
in
dec
nop
sub
loop
out
dec
cmpsl
ror
jg
mov
cmp
popa
sub
pop
adc
test
xor
mov
testl
dec
dec
dec
push
dec
call
mov
add
jp
adcl
pop
jns
out
sbb
xor
test
fnstenv
add
enter
or
mov
out
into
aas
push
fcmovnb
bound
mov
mov
jo
fisubs
sbb
mov
adc
imull
imul
xor
xchg
dec
daa
iret
xchg
jne
pop
into
jmp
loop
icebp
pop
js
push
bound
pop
outsb
daa
add
repnz
pop
xor
movsb
push
dec
enter
xor
sarb
mov
insl
in
das
lods
or
vxorpd
loopne
mov
pop
test
fnstsw
add
dec
adc
sub
inc
sbb
bound
fsubrs
aad
loop
cltd
cmp
jne
scas
and
fidivrs
sbb
sar
fidivs
sub
fpatan
sti
repz
stos
mov
sti
out
fcomps
jb
dec
nop
das
or
jge
pop
jo
out
fmulp
stos
loopne
and
in
pusha
jl
ret
adc
loope
cwtl
stc
pushf
push
in
addr16
ds
data16
in
pushf
out
lahf
fsubr
leave
ss
mov
xorl
mov
cmp
mov
push
pop
inc
push
mov
loop
mov
jecxz
xor
sub
sub
fnstenv
xchg
lods
or
jb
insb
sahf
cmp
imul
fwait
mov
jb
cmpsb
repnz
mov
xor
push
add
shlb
mov
push
cmc
inc
jle
lods
repnz
mov
ds
and
mov
insb
call
inc
imul
dec
mov
push
repz
cmp
fs
and
push
lret
cli
jge
scas
pop
sahf
sbb
push
sub
sahf
clc
lds
push
dec
sarb
adc
adc
mov
mov
lods
add
mov
dec
xor
stos
call
push
mov
xchg
adc
mov
aaa
adc
mov
sbb
xor
pop
roll
out
jbe
adc
es
in
lret
ret
inc
and
int3
into
push
mov
push
popa
inc
inc
mov
jg
std
scas
rcll
inc
push
in
fwait
cwtl
xchg
outsb
adc
xor
mov
cmp
nop
adc
and
dec
mov
in
ret
dec
ja
sbb
push
inc
add
orb
adc
clc
pop
xchg
xor
int
div
pop
sub
out
adc
cmp
lcall
aaa
push
mov
add
iret
test
cmp
subl
pop
stc
xchg
jle
cs
test
dec
lret
test
push
and
jmp
mov
mov
push
insl
lock
sbb
outsl
pop
jle
lock
jae
sarl
cmpsb
dec
cltd
and
test
cmp
jl
popf
xor
cmp
cmp
lock
xlat
repnz
pushf
xchg
shl
mov
loopne
sbb
lods
fsubrp
adc
sarb
sbb
sub
mov
shlb
inc
lds
lods
stos
or
cmp
cmp
iret
push
or
dec
cld
scas
push
gs
bound
pop
fnstcw
outsl
dec
dec
scas
add
sqrtps
inc
lahf
lret
xchg
or
mov
arpl
sbb
imul
das
push
int3
jle
fimuls
add
push
push
aad
xchg
sbb
and
mov
pop
pop
lea
pop
sarb
loope
dec
imul
fcoml
push
orb
sub
dec
mov
int3
jb
xchg
cmp
pop
mov
lret
pop
stos
fsubrl
xchg
sarl
stos
xchg
jns
aas
push
jl
lret
mov
or
testb
ss
sti
cmpsl
rorb
in
inc
inc
xor
or
addl
ret
outsl
dec
iret
lea
or
lret
and
xor
pop
mov
jne
lea
insl
sbb
mov
popa
out
call
inc
jecxz
mov
sbbl
js
or
xor
jae
jmp
inc
push
dec
test
push
lret
les
adc
adc
mov
call
pop
add
adc
cmp
jno
shlb
xchg
std
stos
xor
inc
xor
add
pop
ret
push
mov
hlt
inc
pop
xor
or
push
add
cli
das
je
cmp
mov
ss
cli
pop
mov
shll
ret
in
sub
jp
add
pushf
stos
and
mov
push
fildll
jbe
adc
pop
jge
cmpsb
imul
repnz
dec
clc
in
pop
push
dec
sahf
push
mov
ss
sub
insb
push
rcll
test
lods
pop
jge
mov
xor
das
inc
push
leave
mov
mov
xchg
sbb
test
mov
xor
cmp
adc
call
pop
mov
call
enter
pushf
aad
test
out
pusha
cs
popa
pop
in
xor
mov
lods
into
hlt
dec
test
fisubs
dec
or
pop
jbe
push
stos
push
xor
scas
sbb
in
ret
jb
push
lret
mov
in
idiv
push
cmp
dec
fdiv
push
mov
xchg
mov
mov
mov
shl
cmc
add
hlt
pop
das
dec
inc
or
movsb
mov
call
js
and
into
fsubr
inc
push
inc
out
push
icebp
and
shlb
fimull
addr16
fprem1
inc
sbb
and
and
push
scas
sbb
aam
mov
ds
nop
mov
xchg
clc
ja
add
shr
xchg
jbe
icebp
inc
adc
in
stc
sahf
mov
push
mov
clc
mov
lds
jb
pop
mov
dec
stc
aaa
sbb
outsb
jno
aaa
sahf
mov
pop
push
jmp
dec
push
dec
mov
movsb
aas
call
repz
fidivl
hlt
sbb
hlt
pusha
pop
inc
xchg
sbb
cs
pop
sub
pop
inc
ds
push
testb
fnsave
mov
gs
and
hlt
and
fdivrs
mov
add
mov
ja
inc
cmp
jp
jae
pop
cmp
montmul
cmpsb
inc
rcrb
popf
mov
pmovmskb
sub
dec
arpl
push
mov
popf
dec
pop
scas
dec
icebp
or
shr
mov
pop
mov
cmc
ljmp
test
push
xor
stc
cmovne
xor
add
je
ss
xchg
xchg
mov
ror
fldt
or
mov
outsl
lea
inc
sbb
fisttpl
fisubs
xchg
adc
sub
mov
and
sub
cmp
out
mov
push
xchg
arpl
lret
xor
pop
rorb
sbb
sbbl
pop
add
push
or
mov
les
adc
sub
inc
enter
xchg
out
in
mov
rcr
sahf
mov
aam
and
loop
xchg
sbb
mov
xchg
clc
cmpsb
mov
jmp
mov
add
loop
aaa
pop
xchg
into
xchg
andb
in
sub
into
push
stc
pop
dec
ficoms
cmp
and
add
repnz
mov
xchg
enter
add
call
and
mov
sbb
dec
sahf
cmp
add
mov
ja
xor
fsts
push
sub
imul
xlat
inc
push
xor
sahf
push
stos
ds
arpl
sbb
xchg
fstpt
out
cmp
jle
dec
mov
mov
sub
mov
pop
jecxz
sbb
push
mov
push
movb
je
fcomps
inc
int3
sahf
xorb
mov
xor
xor
sbb
movsl
sbb
aam
inc
push
sti
lret
popf
cmovge
xchg
jae
int
xor
xor
dec
into
xor
mov
int3
mov
ss
jb
enter
lcall
bound
icebp
add
mov
popa
add
mul
fistl
add
xor
inc
stos
sbb
dec
gs
jb
and
pop
int3
data16
test
add
sbb
clc
cmp
inc
jo
cs
fldl
sub
sub
popa
hlt
xor
pop
jo
jbe
rcll
fmull
aam
pop
xor
in
mov
mov
jmp
dec
sub
adc
jle
cmp
nop
mov
ja
cmp
dec
and
jmp
sub
cmp
inc
aas
sub
mov
in
mov
sbb
mov
out
dec
mov
imul
sti
push
fidivrl
push
dec
and
out
cs
mov
aad
lea
push
pop
cmp
ret
shrl
js
stos
inc
xchg
std
fldenv
add
test
inc
push
loope
xchg
test
data16
push
cld
in
loopne
xor
fcomps
clc
xchg
push
in
add
in
push
and
inc
jb
dec
icebp
pop
dec
sbb
fcmovne
mov
pop
jp
or
dec
clc
and
adc
cmp
fbstp
push
loope
stos
pop
bound
pop
addr16
stos
scas
or
add
mov
xor
and
xor
data16
xor
jmp
cmp
rcr
dec
mov
xchg
test
loopne
pop
lahf
cmp
mov
xor
lret
das
xor
pushl
sbb
lcall
xor
pop
xchg
imul
into
cmc
xchg
adc
addr16
enter
mov
in
stos
or
sbb
dec
xchg
jmp
std
mov
cmp
jl
add
xorl
cld
aam
jne
push
out
xor
imul
leave
mov
and
ljmp
cmp
push
push
mov
int
mov
mov
add
xor
mov
mov
add
or
inc
push
mov
inc
pop
inc
and
and
xchg
xchg
mov
insl
outsl
cmp
pop
test
outsl
and
std
lds
clc
lock
insb
ret
mov
xlat
dec
mov
sbb
push
xor
xor
push
inc
pushf
arpl
lahf
pop
fistpll
enter
arpl
cmp
sbb
dec
out
ljmp
filds
in
es
push
xchg
arpl
xor
pop
jne
pop
xlat
movl
js
fwait
into
xchg
dec
xor
jnp
sbb
jp
stc
pop
lcall
mov
sahf
or
or
jl
or
inc
insb
sub
mov
mov
dec
fs
hlt
out
add
jo
hlt
mov
jnp
push
fcmovne
pop
mov
and
and
int3
outsb
insb
inc
sbb
mov
lret
clc
hlt
adc
push
xchg
flds
mov
jns
lea
rcr
add
mov
xchg
in
je
lds
pop
in
lcall
or
in
cmp
mov
sbbl
xchg
int3
repnz
inc
mov
mov
mov
sub
rclb
mov
fdivr
jecxz
in
cmpsl
adc
shll
ss
imull
imul
pop
cld
xor
imul
and
cld
loop
mov
add
movsl
xor
popf
mov
std
movsl
push
sbb
mov
jl
sub
stc
push
dec
or
ret
cmc
cmp
push
aam
push
int3
std
xchg
xchg
xchg
mov
jns
in
cwtl
lcall
frstor
filds
mov
lcall
roll
dec
cwtl
inc
rcl
insb
dec
das
inc
test
sbb
ficomps
std
std
sahf
mov
add
iret
int3
adc
jecxz
sbb
sbb
movl
dec
arpl
push
insb
dec
sub
add
insl
jge
in
adc
cld
movsb
sbb
test
cmp
sub
ss
jne
push
jle
push
cmpsb
in
pop
popf
ja
mov
sets
dec
sarb
pop
data16
sahf
inc
lods
jbe
nop
subb
xor
in
adc
inc
push
imul
std
xchg
mov
pop
fimuls
sbb
fidivl
sub
mov
cmp
repnz
dec
lret
inc
dec
out
shrb
push
icebp
filds
add
out
or
dec
stos
test
cmp
iret
mov
dec
mov
fsubrs
jnp
lock
mov
sub
shl
push
leave
cs
in
cmp
test
adc
add
cmpsl
sub
jg
push
mov
sti
mov
and
pop
in
push
jnp
mov
fnstenv
lds
ja
cmp
sub
sub
aad
pop
daa
jnp
ja
xchg
mov
mov
xlat
xchg
sub
frstor
into
jge
push
imul
dec
ljmp
mov
decl
xor
mov
cs
cmp
fcmovb
nop
adc
push
fs
and
sub
xor
mov
lret
jmp
fdivs
pushf
shll
jno
lcall
or
ret
and
add
cli
inc
mov
xchg
sub
out
ja
fistpll
jno
xor
cli
int
pop
mov
fimuls
push
aas
std
pop
test
nop
dec
scas
add
dec
repnz
frstor
icebp
jmp
sahf
mov
enter
aaa
push
xchg
das
sbbb
je
loop
push
xchg
pop
fdivrl
lret
mov
mov
lcall
sub
mov
jne
pop
mov
in
ss
mov
push
adc
xchg
cld
mov
out
sbb
mov
les
mov
xor
mov
std
pop
pop
jae
cwtl
dec
jne
pop
inc
inc
cmpl
add
cmp
pop
daa
orb
mov
in
ljmp
sub
mov
sbb
push
ret
sbb
nop
loope
hlt
in
inc
mov
xor
and
jnp
sti
mov
or
and
fisttpl
es
ror
popf
push
gs
aam
divl
scas
out
jl
sar
out
test
cmp
aas
lcall
adc
add
ret
xchg
cmp
loope
xchg
das
loop
or
add
sbb
sub
dec
cmp
int3
mov
xlat
sub
xchg
cmc
out
nop
sbb
push
mov
xchg
into
inc
rcrl
jle
je
in
addb
add
or
shl
jp
ja
iret
sub
notl
mov
cmpsl
loopne
pop
test
adc
movsb
push
xor
xchg
xchg
jnp
mov
nop
push
xchg
or
lahf
fstpl
push
cmp
dec
cmpsb
adc
inc
jae
andb
les
js
adcb
xor
sbb
aam
jg
enter
pop
pop
inc
or
in
repnz
or
pop
inc
and
and
adc
lock
and
test
mov
cmp
lock
scas
loop
add
mov
lds
dec
mov
rorb
or
cmpsb
cmc
test
nop
decl
outsb
push
gs
fwait
int
in
xchg
ret
jno
jns
pop
das
lahf
xor
xchg
jnp
movb
ds
ljmp
mov
mov
aas
pop
pusha
inc
into
mov
and
push
subb
arpl
mov
sub
xchg
cmp
or
out
pop
test
movsb
xchg
lock
lods
ror
cli
pop
dec
out
out
out
fists
push
scas
add
inc
mov
fcoml
jmp
or
gs
test
adc
test
faddl
fdivrl
mov
pop
inc
test
jne
rolb
mov
cmp
mov
sbb
test
jns
hlt
xor
in
cmp
mov
jne
ret
cmp
mov
mov
push
sub
mov
jae
mov
adc
jne
dec
movsb
fucomi
cmpsb
or
adc
popa
mov
mov
shrl
shll
rolb
sub
cmp
xchg
out
sbb
inc
fsts
aas
jl
insl
inc
jnp
sbb
addr16
cmpsl
xor
iret
mov
hlt
xchg
xor
mov
insb
repnz
jnp
loop
mov
cmp
popa
in
inc
cmpsb
add
shlb
sbb
out
dec
jl
je
adc
int
push
pop
fldln2
sbb
pusha
cwtl
sub
inc
cmpsl
jbe
mov
icebp
add
inc
jg
jne
arpl
in
add
aam
jbe
es
int
bound
xor
lock
nop
mov
xchg
clc
xchg
sub
shl
mov
sub
jp
mov
mov
push
mov
popf
add
jp
mov
stos
pop
sub
movsb
adc
push
sub
aas
inc
mov
add
inc
push
aad
mov
cmp
inc
xchg
lret
pop
adc
adc
push
lret
test
mov
push
orl
aaa
mov
rclb
inc
les
out
push
pop
std
pop
ds
das
enter
mov
pop
inc
pop
int3
test
or
cmc
leave
dec
mov
xchg
xchg
jae
lock
sub
mov
fcmovnbe
jecxz
xchg
cmp
stos
stos
mov
data16
inc
or
clc
cli
sahf
in
and
mov
outsb
push
ret
pop
inc
rcrb
adc
in
popf
sarb
pop
sbb
sti
ret
imul
cwtl
or
pop
test
push
insb
mov
mov
in
sbb
rorl
in
repz
out
dec
sbb
cmp
lods
pop
mov
ror
and
cmp
out
lea
bnd
les
jo
xchg
fs
inc
jbe
push
dec
inc
cmpsl
and
out
lods
mov
dec
sub
cwtl
push
test
or
pusha
cli
sbb
rol
sbb
je
mov
push
xor
mov
xchg
sbb
sub
adc
icebp
and
xchg
xor
scas
sub
push
jae
jecxz
or
fildl
mov
popa
xchg
mov
aaa
dec
sbb
jg
daa
lea
enter
mov
insl
push
mov
or
mov
lods
iret
scas
xor
pop
notb
loopne
xor
lcall
adc
out
jmp
xchg
scas
mov
dec
outsl
xchg
jb
clc
cmp
pop
or
push
jmp
mov
pop
stc
xor
in
fbstp
test
fldenv
dec
data16
sahf
xor
pop
insb
adc
sub
pop
add
jae
jmp
add
repz
hlt
xor
insb
push
std
test
sbb
addr16
fcoml
jmp
jb
inc
pop
mov
xchg
arpl
fsin
cmpsb
jae
loope
mov
sbb
pop
fdivrl
sub
push
out
xchg
enter
movsl
mov
leave
xchg
movsl
jno
adc
cmpsl
mov
cmp
aaa
add
in
popl
mov
js
mov
mov
adcl
jp
mov
mov
rcr
pop
int3
inc
mov
push
fs
xchg
cmp
xchg
bts
arpl
sbb
cmpsl
leave
xchg
ss
adc
ds
mov
out
inc
jne
mov
or
xchg
jns
adc
cltd
jecxz
fdivrl
je
ljmp
sbbb
jg
dec
add
in
fwait
rol
mov
mov
popf
inc
adc
pusha
fcoml
push
jno
pop
ret
fldcw
cli
sbb
mov
push
cli
jle
cmpb
filds
scas
dec
add
pop
lea
push
or
fwait
xchg
filds
inc
jge
add
and
push
sub
int
jg
fldt
les
pop
or
jb
xchg
jbe
xor
fwait
mov
lcall
ja
fwait
rcr
cmp
or
jnp
dec
sbb
xor
rclb
inc
xchg
mov
test
fstl
inc
mov
cmp
inc
xor
out
add
sbb
leave
lret
adc
lcallw
mov
fildl
lret
outsb
mov
jecxz
sbb
in
in
push
jl
mov
push
xchg
push
xchg
int3
insl
cmp
xlat
add
imul
dec
int3
push
inc
sub
cmp
push
lock
into
inc
mov
icebp
fs
clc
shl
add
inc
out
dec
jbe
cmpsl
jle
dec
ficomps
inc
sub
pop
mov
mov
hlt
or
arpl
dec
adc
jb
cwtl
cltd
fldcw
push
push
sub
mov
imul
xchg
cmpsl
imul
ret
mov
stos
imul
lret
mov
pushf
adc
xor
outsl
sarl
mov
mov
stos
push
or
fsubrl
int
inc
jp
cli
pusha
cmpsl
das
add
mov
mov
jbe
ret
nop
sub
xlat
inc
mov
lcall
and
in
bound
cwtl
jo
pop
push
das
shrl
mov
mov
inc
scas
cmpl
and
enter
pop
cmp
push
aas
add
dec
xor
sbb
push
jb
dec
rol
mov
pop
jecxz
or
fwait
aam
push
sti
int
rorb
jno
add
scas
inc
sub
jp
mov
shrl
push
in
sbb
sahf
imul
dec
mov
icebp
cs
xchg
xor
ss
stos
test
or
out
fsub
pop
mov
int
loopne
out
push
xchg
cmp
insb
out
idivl
or
ret
lret
pop
jmp
call
inc
pop
ja
lea
inc
lds
or
pop
aas
dec
pop
push
jmp
cmc
add
bt
push
push
sbb
das
pusha
pop
dec
mov
out
test
pop
adc
and
int
ljmp
sub
mov
into
popa
xchg
push
mov
pop
xchg
jg
sub
sbb
xor
dec
fldl
out
sbb
push
jle
push
int
mov
ret
dec
ret
orl
fdiv
push
aas
enterw
adc
stos
adc
push
fwait
pop
test
test
loopne
cmp
pop
add
cltd
fisubrs
adc
push
nop
xor
fwait
inc
les
pop
jge
loopne
mov
xor
fcmovb
popf
sub
mov
sbb
mov
sbb
xchg
add
scas
popf
mov
sub
lds
fadd
cmp
cmc
pop
sbb
adc
cmp
add
cmpsb
clc
stos
xchg
imul
mov
sub
pop
cmp
into
clc
cmp
imul
dec
xor
lahf
cmpsb
push
stos
push
movsb
in
pop
ss
adc
jg
rcrb
aam
dec
or
push
push
cmp
in
cmp
and
push
adc
push
sbb
inc
movsb
bndldx
sub
xchg
add
xor
ffreep
sbb
call
jb
add
in
xor
cmp
mov
adc
xchg
sbb
push
ss
fnsave
xchg
ja
xor
popa
sbb
int3
aam
clc
cltd
std
adc
sub
loop
sub
popl
fsubrl
or
fbstp
fists
int3
cli
adc
imul
push
popf
aad
int
mov
icebp
cwtl
in
and
pusha
inc
xor
mov
add
loop
and
xchg
shrb
cmpsl
out
sub
adc
mov
lods
mov
add
add
mov
shl
pushf
push
sbb
inc
addr16
movsb
hlt
push
cpuid
mov
jns
mov
xlat
arpl
movsb
in
or
mov
jmp
mov
imul
or
movsb
int3
cmp
mov
jl
enter
pop
into
inc
inc
pop
mov
cmp
pop
out
sbb
pop
js
fistps
cld
dec
call
mov
or
pop
lock
out
push
pop
cli
pushf
shr
div
push
sbb
test
lods
mov
adc
mov
push
or
in
es
daa
xor
test
hlt
sub
leave
jno
lds
lock
call
adc
jl
out
mov
add
das
push
in
jmp
or
xchg
xchg
sub
mov
popa
inc
fcmove
out
into
inc
push
cmpsl
andb
lods
add
sub
fdivl
sub
andl
dec
and
lods
sbb
sti
sti
loopne
in
in
dec
sub
ret
xchg
cltd
xor
mov
xlat
xorl
mov
inc
stos
popa
sbb
stos
cmp
pop
cmp
fwait
dec
push
adc
jne
notb
aas
jo
dec
inc
pop
mov
mov
jne
cmp
call
add
repz
popf
push
pop
mov
filds
cmpsl
in
jmp
imul
dec
push
dec
jb
or
aas
pop
movsl
inc
out
hlt
icebp
adc
sbb
push
pop
jmp
mov
scas
cltd
jbe
pop
and
rcrb
mov
sbb
push
cmpsl
xchg
mov
loope
sub
leave
xchg
loope
jge
jmp
or
repz
mov
push
mov
add
lret
out
sbbl
stos
inc
jb
sub
adc
movsl
cltd
inc
mov
push
sbb
fstl
sahf
sti
in
fwait
dec
fsubrs
cmpl
inc
in
shll
jb
and
add
out
push
adc
and
mov
call
sub
ss
mov
jmp
mov
dec
lea
incb
shlb
popa
mov
inc
add
int
push
push
jo
jae
inc
sbb
pop
fbld
mov
sub
bound
aad
fs
test
jle
sub
push
ljmp
pop
jge
cwtl
xchg
std
mov
xchg
jp
mov
jae
sbb
or
out
mov
pusha
cld
call
cld
lret
xchg
bound
ds
ss
fwait
mov
mov
jle
mov
xor
mov
inc
out
jp
sbb
in
in
adc
shlb
dec
lret
mov
out
mov
fdivrl
ficoms
aas
rclb
popa
pcmpeqd
mov
daa
das
ds
xor
scas
push
les
sti
sbb
mov
or
xor
xchg
sub
jmp
cmp
and
nop
ja
and
aas
cmpb
mov
aam
mov
loop
xor
ret
dec
sbb
mov
movsl
mov
jp
ljmp
jl
daa
dec
imulb
movsb
rolb
mov
aas
jle
mov
xchg
stos
gs
outsl
add
or
add
stos
dec
jne
mov
leave
jmp
clc
mov
shlb
push
jb
shrb
jbe
mov
cmpl
jb
or
mov
inc
pusha
dec
adc
inc
dec
ljmp
imul
imul
adc
ds
test
cmpsb
mov
out
mov
cmp
jno
out
push
stos
lds
mov
push
lcall
cld
mov
mov
sbb
fs
imul
inc
mov
es
push
dec
jl
xchg
fcoml
or
mov
cmp
mov
clc
inc
ds
pop
mov
aam
push
dec
insl
dec
xchg
int
jle
movsl
cmc
mov
xchg
jge
daa
cmp
cmp
out
cs
or
popf
pop
pop
xchg
pop
lock
test
sub
mov
les
pop
mov
sub
es
lea
lods
inc
ds
outsl
test
mov
jmp
lods
adc
mov
push
fldt
pop
adc
enter
insl
lahf
sbb
daa
jp
pop
dec
and
es
cmp
sbb
jns
and
adc
insl
and
xor
stc
cmp
mov
mov
rclb
test
mov
inc
add
mov
push
jecxz
adc
push
pop
inc
out
jmp
adc
dec
xchg
loop
mov
mov
sbb
adc
in
sahf
andl
jb
in
jp
clc
lret
or
mov
mov
mov
and
sub
bound
add
aad
inc
mov
lret
aaa
push
adc
in
icebp
daa
jnp
popf
sub
cmp
call
xor
imul
fwait
lods
mov
leave
mov
cmpsl
adc
lahf
punpckhdq
mov
sbb
movsl
cmp
adcl
call
xchg
dec
xor
lods
inc
mov
pop
xchg
jne
roll
aaa
ljmp
or
cltd
mov
lret
fildl
mulb
cwtl
setg
mov
out
adc
jno
pop
jns
out
int3
mov
fistl
repz
mov
mov
jge
jp
imul
dec
pop
mov
incb
or
or
cmpsl
xor
enter
mov
jns
cmpsb
scas
aad
loop
js
stos
dec
das
fwait
inc
mov
rolb
in
cmp
mov
cmpsb
loopne
lahf
cmc
push
or
sub
addr16
loopne
leave
outsl
xchg
add
movsb
pop
add
sub
mov
cmp
sub
xor
sub
je
fld
bound
sti
mov
mov
pop
lahf
mov
jno
inc
negl
ret
push
adc
data16
inc
xor
leave
in
testb
mov
add
sub
pop
mov
stos
std
or
lea
push
mov
lods
es
push
add
pop
or
or
adc
arpl
mov
pop
cmp
adc
inc
push
lods
jb
imul
pushf
daa
pop
rorb
cld
insb
inc
adc
loopne
jae
fistpll
sub
and
les
dec
or
xor
sbb
loop
xchg
push
mull
popa
call
loope
imull
pop
jmp
addr16
sbbl
sbb
cmp
inc
xchg
mov
mov
and
push
enter
xchg
adc
out
cli
xchg
popf
mov
ds
and
rcrb
cli
aas
pop
inc
jecxz
mov
and
inc
mov
out
xchg
mov
cmp
mov
fucomip
xchg
mov
aad
outsb
dec
repnz
sub
jne
out
mov
rolb
cmpsb
or
jg
in
orb
mov
and
loope
sbb
pop
cmp
mov
mov
in
scas
mov
in
sbb
inc
aas
mov
or
push
outsb
cmp
int
add
imul
inc
sub
lcall
les
aad
mov
and
mov
in
push
idivb
sbb
in
add
jp
jl
sti
shrb
icebp
sti
add
in
or
jge
cmc
jmp
int3
xchg
int
sbb
call
int3
inc
test
aaa
cmp
push
inc
push
lahf
mov
cld
add
fs
push
or
out
pop
dec
repz
jle
mov
mov
lock
adc
push
fcomp
push
int
fwait
add
sub
pop
mov
lcall
in
and
or
idivl
adcl
xlat
sub
fcomps
lock
adc
xchg
mov
push
xchg
das
int3
xchg
xchg
and
mov
xchg
dec
sbb
jle
popf
mov
fisttps
jge
sub
add
insb
adc
mov
fldenv
fcomi
das
jns
add
push
mov
cmpsb
xchg
dec
add
jmp
push
and
mov
mov
and
mov
call
filds
xchg
lds
psllw
in
push
xor
leave
in
pusha
insl
pop
rcr
fmul
mov
dec
shlb
dec
pop
test
outsl
push
push
cmpsb
fmulp
jo
jecxz
mov
mov
pusha
add
xor
mov
sub
pop
pop
mov
mov
dec
out
jbe
in
aaa
pop
jge
sub
andl
out
pop
cmp
in
fs
mov
es
jmp
pop
sbb
es
mov
punpckldq
cli
push
lcall
je
outsl
mulb
sub
ss
pop
or
movsl
imul
shrb
mov
mov
mov
lods
int3
into
xchg
cmpsb
jecxz
test
or
mov
sbb
fadds
in
test
mov
mov
push
xlat
shll
sub
mov
and
scas
aas
pushf
inc
xchg
xor
pop
stos
jecxz
enter
push
scas
int3
mov
pop
inc
add
out
scas
ffreep
adc
aad
pop
xor
inc
and
jne
dec
push
test
push
mov
bound
mov
fldt
call
hlt
mov
and
aam
mov
push
test
mov
cwtl
mov
push
and
mov
jb
jl
jl
mov
into
pusha
mov
jo
das
lret
stos
add
pop
fisttpl
push
sbb
xchg
test
xchg
mov
ja
dec
ret
ja
fdivp
pop
sarl
bnd
pop
and
ds
fistps
out
imul
fcmovbe
lahf
in
mov
and
xor
fnstcw
dec
cli
loopne
je
pop
ret
jnp
add
aam
pop
push
lds
or
dec
pusha
and
or
imul
jecxz
mov
popa
cmp
icebp
inc
mov
mov
or
xor
rol
mov
ltr
mov
inc
fcmovnbe
mull
les
mov
or
fdivl
inc
call
inc
test
mov
or
dec
sbb
insl
inc
mov
popf
repz
in
pop
and
cmpsl
iret
push
or
dec
popa
jmp
sub
xchg
mov
stc
mov
cmp
arpl
cs
jne
scas
mov
into
pop
in
mov
xor
rcrl
mov
sbb
mov
fs
inc
movups
pandn
decl
mov
and
and
dec
xchg
pop
jo
std
lcall
or
in
push
nop
subb
mov
push
dec
cmc
xor
cld
aam
outsb
sub
enter
cltd
add
mov
push
repnz
inc
fldl
pop
lret
sbb
ds
sub
mov
in
into
xchg
fsubrp
inc
les
add
mov
sti
or
mov
call
cmp
pushf
out
pop
loope
sti
into
mov
mov
sub
xor
xor
add
arpl
sbb
lahf
sub
jbe
and
je
cmp
vmovups
roll
mov
loope
mov
or
mov
fimuls
icebp
test
or
lret
xchg
jecxz
adcb
shrl
out
in
inc
les
push
pop
lret
sub
mov
push
les
jb
bound
mov
aam
inc
dec
xchg
test
push
mov
adc
mov
adc
dec
lahf
andb
call
push
dec
dec
fisubrs
fs
adc
iret
lock
xor
and
inc
cmp
add
rcrl
inc
push
loope
xchg
pop
mov
cmc
ret
add
pop
inc
movl
mov
adc
icebp
xchg
cmp
pushf
aas
jp
add
pop
sub
mov
add
idivb
cmc
test
fsubr
jae
lock
push
aaa
sub
outsb
les
jb
shl
mov
out
xchg
jmp
push
inc
ss
stc
imul
fdivs
das
iret
push
jg
loop
xor
dec
dec
cmp
fadd
pop
aam
or
pop
cltd
push
mov
and
loop
jnp
xor
and
pop
xchg
xchg
xchg
adc
and
pushf
push
sbb
jg
inc
dec
adc
sbbl
push
neg
mov
xchg
pop
ss
sahf
daa
mov
pop
and
mov
fistl
xor
sbb
jnp
adc
test
mov
lds
sbb
frstor
pusha
orb
clc
inc
cmp
inc
sub
cmp
iret
daa
adc
push
pop
mov
xchg
cmp
stos
jp
ffree
daa
dec
hlt
add
pop
pop
loop
jl
xchg
pop
xchg
jge
addr16
push
or
jno
mov
ljmp
in
aad
ljmp
push
adc
push
fcomps
push
or
sbb
jecxz
fwait
insl
xorb
roll
cmp
mov
popa
xchg
loopne
dec
pop
roll
mov
push
inc
cmpsb
imul
ja
and
mov
jns
mov
ljmp
lret
nop
mov
sub
sbb
cltd
cmp
sbb
js
lods
ljmp
fs
stos
in
sub
fldcw
xor
ja
popf
cmp
adc
movsl
test
dec
das
test
repz
lea
daa
sub
lret
jbe
addb
sbb
cmpsl
fwait
mov
arpl
in
sub
sti
sub
xchg
or
dec
dec
mov
loop
jns
lods
pop
insl
cs
cli
sbb
push
xchg
rcrl
hlt
xchg
inc
pop
mov
jmp
insl
add
fnsave
inc
jge
int
inc
and
loopne
sbb
inc
maskmovdqu
notl
fnstcw
jo
and
mov
inc
pop
add
inc
loop
xor
insb
nop
stos
in
pusha
add
xchg
outsl
popf
lds
enter
es
ret
xchg
mov
cmp
xchg
mov
mov
lahf
add
mov
pop
aad
mov
lea
push
sub
call
lret
fstl
lods
mov
mov
dec
fdivs
push
jns
std
cmpsl
rorb
cmp
fcomp
call
pop
fildl
popf
scas
mov
push
jmp
sub
sub
scas
sbb
xchg
pop
aam
in
outsl
lods
out
fmulp
dec
lret
aad
movb
dec
into
add
enter
sbb
adc
jge
call
push
add
movsb
mov
movsl
lock
push
cmp
push
inc
sbb
das
mov
adc
and
nop
iret
or
mov
int3
add
and
and
sub
adc
out
mov
xor
cmpsb
cwtl
pop
mov
mov
dec
fstpt
int
out
pop
push
movsl
mov
scas
dec
xchg
cli
test
test
mov
add
inc
add
ret
in
fs
loopne
psraw
mov
lret
or
sbb
push
jp
mov
les
ljmp
and
lods
insb
jae
push
xlat
fwait
push
cld
xor
test
pushf
sbb
fdiv
movsb
pop
cli
pop
out
and
enter
sti
pop
and
clc
mov
xlat
or
adc
arpl
je
xor
or
imul
scas
push
sbb
popa
dec
es
xor
cmp
xchg
ja
lret
fisttpll
pop
sbb
push
lods
push
cld
stos
add
dec
sub
les
js
xchg
push
pop
jb
jne
ret
rorl
popa
mov
sub
int
jp
pop
add
fidivrl
cmp
idivl
fs
xor
stc
int3
js
or
mov
push
xchg
push
pop
mov
mov
pop
dec
cmpl
cmp
sti
lret
push
sub
push
add
xor
into
dec
pop
sbb
ss
loopne
sbb
jo
aam
inc
xlat
pop
imul
repnz
dec
cmpsl
bound
aas
icebp
adc
clc
test
sarb
lret
fildl
add
out
ljmp
mov
mov
mov
jge
mov
lods
cmc
add
or
jmp
mov
or
lods
lahf
mov
movsb
dec
inc
and
mov
ret
fcomps
aaa
popf
mov
xchg
iret
mov
lea
push
push
idivb
mov
sub
pushf
or
xor
pop
dec
jnp
icebp
movsb
inc
mov
inc
inc
xchg
add
lahf
stc
mov
andb
hlt
lret
lret
push
lea
jbe
lds
nop
arpl
jnp
or
in
and
dec
fs
pop
enter
jb
xorb
jle
cmp
adc
mov
outsl
cmp
lahf
sbb
mov
test
outsb
mov
idiv
sub
jecxz
inc
inc
push
stos
aam
div
cltd
xchg
sbb
inc
int
mov
sbbl
ljmp
pop
es
addl
rorl
out
enter
aam
out
push
and
aas
sti
mov
sbb
out
test
push
test
mov
outsb
or
push
in
aas
mov
mov
or
xchg
pusha
movsl
push
inc
rcrb
jmp
jnp
push
cld
or
insb
jne
xor
jge
pop
mov
imul
lret
mulb
push
xor
data16
inc
push
loop
pop
push
mov
cmp
jle
fadds
imul
loop
in
dec
ss
push
sbb
push
pop
ds
sub
cmpsb
testb
sbb
js
js
call
sbb
xchg
pusha
push
xor
sbb
inc
cmp
out
sbb
xor
dec
ljmp
sbb
xchg
ret
out
xchg
and
mov
pop
dec
sti
inc
inc
cmp
pop
dec
mov
dec
ret
loop
jbe
insb
sub
divb
mov
cmpl
xchg
xchg
add
adc
pop
js
popf
fdivp
dec
inc
dec
inc
clc
les
inc
sbb
and
adc
cmp
sahf
cwtl
aad
mov
jb
hlt
dec
mov
imul
push
xchg
jno
dec
pop
addl
mov
es
cmpsl
add
clc
test
sub
xchg
out
mov
dec
or
mov
lds
mov
test
add
popf
jle
mov
xchg
jge
fscale
pop
arpl
add
sbb
jbe
subl
int
pop
in
xchg
rcl
and
xchg
and
mov
xor
push
out
adc
mov
sti
and
pop
jno
movsl
add
inc
nop
dec
xor
aad
ds
sbb
ljmp
sbbl
jmp
ja
add
jl
mov
add
cmp
adc
sarl
jnp
dec
ficoms
call
or
xchg
or
in
adc
mov
jge
popf
cltd
cs
arpl
and
cwtl
cmp
movsb
sub
adc
pop
pop
lea
add
pushf
xor
pop
sub
pop
ljmp
sub
cmpsb
sahf
cmpsl
add
pop
add
push
jmp
pop
mov
pop
mov
or
mov
popf
add
jo
push
sbb
std
xchg
addr16
sub
or
in
stos
arpl
adc
lahf
cmpsl
outsl
js
pushf
icebp
sub
xchg
out
push
ja
fisttpll
cmp
or
pop
sbb
adc
insb
dec
loope
pop
adc
inc
dec
int3
repz
stc
pop
pop
xor
sub
adc
jmp
dec
rcl
rcl
pop
cmp
in
mov
adc
cmc
daa
jmp
jo
cmp
jle
push
les
mov
inc
mov
cmp
scas
jnp
add
in
rorb
jne
lret
and
in
sti
sarl
lods
and
mov
lret
push
push
xchg
test
add
dec
xchg
sub
outsb
jl
mov
insl
lds
sub
ss
and
xchg
cmpsb
dec
xlat
mov
xchg
sub
shr
lock
loop
add
ficoms
jb
inc
gs
outsb
pushf
jle
inc
dec
into
shl
push
repz
jl
div
jg
shrb
xor
jecxz
pop
das
movl
fldz
mov
adc
jae
cmp
fcoms
adc
inc
add
mov
es
jmp
xor
imul
rcrb
cs
les
scas
in
xor
jp
push
pop
out
sub
jbe
filds
addr16
notb
and
test
lahf
int3
lods
pop
mov
sahf
test
push
pop
popa
scas
test
std
repz
ret
pop
xor
xchg
xchg
xor
outsb
loopne
mov
mov
jne
popf
and
sarb
fs
pop
mov
push
jle
cmp
xor
xchg
mull
stc
ljmp
push
dec
mov
sbb
pop
sbb
inc
les
scas
ror
sbb
mov
daa
dec
cmpsb
push
cmp
fwait
push
sbb
cmp
lds
mov
js
push
pop
xchg
mov
sub
mov
pop
pop
fs
gs
mov
enter
in
imul
lock
out
inc
cltd
xchg
addr16
mov
idivl
mov
add
or
gs
or
xchg
lret
push
data16
mov
mov
sbb
push
sub
int
dec
push
xlat
cmpsl
sarl
movsl
cmpsb
ja
shlb
pop
loope
ret
inc
enter
push
clc
aam
icebp
movsl
iret
aas
add
cmpsl
hlt
xchg
inc
mov
lea
add
fwait
je
push
out
cmc
enter
add
out
mov
and
adc
and
jmp
stos
pushf
das
cmpsb
fbld
je
fcmovne
dec
xor
lcall
fcoms
mov
mov
sar
mov
lods
repz
lcall
data16
lea
in
out
ror
dec
aas
jge
sub
mov
sbb
aad
jmp
int3
shlb
xor
lcall
add
sbb
adc
pop
adc
decl
push
jae
or
dec
cmpsb
add
cmpl
outsl
cmp
and
mov
xlat
ficoml
jne
sbb
jg
je
lcall
mov
js
jp
es
xor
mov
jb
orb
and
mov
cmc
call
orl
xchg
loopne
or
push
pushf
pop
add
loope
xor
and
jg
addr16
fisubl
push
fisubrl
inc
pop
xorb
dec
icebp
push
inc
std
cmc
arpl
add
aad
cmpb
les
jo
movsb
cmp
pushf
addb
sti
ret
inc
adc
gs
jbe
or
sub
ss
mov
cmp
add
and
fwait
hlt
out
loope
or
xor
cld
inc
pop
push
sub
fisttpll
in
dec
dec
clc
xchg
mov
movsl
jo
fwait
out
xlat
sub
fwait
adc
loopne
push
punpcklbw
xor
test
into
and
cmpsb
xlat
mov
xchg
xor
repz
and
sbb
mov
push
fstl
aam
mov
mov
push
xor
std
jmp
fcoml
hlt
lock
pop
enter
dec
in
push
cmpsl
pusha
arpl
sbb
sbb
int3
movsl
loopne
mov
and
fwait
adc
icebp
push
mov
xchg
and
lret
out
cwtl
jle
push
jno
mov
mov
mov
out
aam
dec
inc
pop
loop
sub
int3
shrb
xor
iret
lret
pop
iret
push
mov
in
and
lret
pusha
jae
and
jns
fsts
fisubs
test
ret
outsl
gs
pop
insb
dec
in
dec
jle
mov
xor
enter
mov
jp
movsb
test
pop
push
pushf
mov
mov
and
in
ja
fdivr
ret
pushf
adcl
in
push
ja
dec
imul
xchg
testl
loopne
orl
test
cmp
enter
orb
ret
outsb
xchg
sub
pop
jne
int3
rcr
sbbl
pusha
lret
ds
xchg
mov
ja
sub
mov
pop
add
jp
jb
push
enter
jecxz
pop
sub
repnz
sub
push
sub
pusha
push
xor
adc
cs
sub
outsb
ficoms
rorb
leave
xchg
or
mov
sbb
std
pusha
out
xchg
add
pop
cmp
and
sti
fs
testb
rcll
stos
pop
movsl
xchg
jmp
lcall
dec
mov
adc
movsb
fwait
cmp
mov
or
enter
cmc
pop
mov
fisttps
orb
inc
xlat
mov
push
dec
insl
std
fsubrs
test
and
es
or
pop
dec
fdivrs
movsb
or
and
xchg
xchg
sbb
mov
add
push
hlt
adc
push
lock
sub
lret
fcomip
movsb
les
jbe
stc
sbb
setne
or
push
inc
jae
push
sti
fdivr
in
notb
xchg
add
imul
pop
leave
loope
lods
mov
out
cmp
int3
faddl
and
or
cmp
mov
jp
gs
fistpll
and
push
push
push
icebp
into
add
or
xchg
pusha
cmp
mov
jecxz
outsb
dec
outsb
dec
ss
mov
adc
xchg
lcall
out
cmp
push
dec
xchg
dec
lcall
push
pusha
mov
push
xor
mov
dec
in
inc
xchg
data16
mov
call
mov
out
adc
gs
out
sar
shll
aaa
dec
sub
sbb
loopne
stos
pusha
xor
pop
stc
jne
cmpsl
mov
in
jne
sub
loope
or
inc
cs
movsb
jne
out
pop
xor
sbb
enter
lods
ficoms
xor
shlb
cmp
mov
pop
lret
and
mov
lods
scas
sub
and
les
arpl
bound
cld
jno
stos
cwtl
sbb
adc
lds
mov
cmovnp
mov
inc
mov
les
mov
pop
sbb
inc
push
cli
fistps
cmp
inc
jnp
out
jge
cmp
clc
arpl
ljmp
js
rcrb
and
test
push
inc
loopne
push
dec
adc
pop
or
mov
sti
insb
stos
inc
push
js
idivb
addr16
outsb
sbb
or
lret
push
loop
mov
inc
mov
mov
fucomp
in
and
jecxz
cld
out
fwait
mov
jne
mov
inc
cmpb
adc
mov
out
pop
push
divl
or
sarl
lods
fdivrs
mov
xor
ja
dec
cmpb
mov
dec
stc
je
out
test
mov
jle
movsl
adc
push
add
xchg
adc
out
outsb
xor
test
push
fcoml
and
push
shrb
cld
or
inc
mov
adc
movsb
jne
lods
inc
pop
mov
xchg
pushf
fimuls
in
in
pop
movsb
mov
xchg
inc
or
outsl
testl
lods
mov
jg
cmpsb
movsb
xchg
bound
cld
pushf
test
add
jo
bound
xchg
fwait
and
lea
fs
cmp
push
fistpll
push
dec
inc
popa
lahf
loope
inc
mov
das
imul
push
sbb
inc
mov
push
movsb
mov
sahf
sbbl
insl
adc
xor
insb
inc
sarl
hlt
loop
inc
push
jbe
and
popf
sub
std
insl
inc
jo
bound
sub
or
push
push
daa
ret
repnz
loopne
pop
mov
jbe
inc
xchg
mov
and
mov
add
sub
dec
in
fildll
mov
or
lock
andb
insl
add
cmp
jmp
push
push
loop
push
mov
push
sahf
out
popf
pusha
sbb
loop
das
sbb
add
xchg
js
pop
fisubrl
pushf
push
mov
lods
push
cmp
into
mov
dec
adc
imul
dec
insl
cmc
dec
addr16
rorl
cmp
insb
popf
pop
mov
outsb
cmp
dec
and
orb
xchg
cmp
mov
jp
in
rolb
or
xchg
les
call
push
xor
into
and
sub
ret
int
aam
add
arpl
pop
cs
in
xor
scas
fcmovb
pop
fdivrp
push
jp
mov
push
pusha
xchg
scas
push
fcoms
jmp
loope
mov
rcr
inc
fdivp
pop
lds
mov
xor
fiadds
inc
outsb
pop
fisttpl
popf
pop
cli
repnz
sbb
jecxz
nop
jb
cmp
sub
mov
sub
mov
bswap
or
dec
or
inc
fdivl
and
pop
bound
push
lds
mov
jmp
mov
lea
jecxz
add
sub
adc
shrl
push
gs
add
leave
int
ret
mov
or
cli
xor
fwait
inc
pop
and
sub
adc
cmp
out
push
fimull
jle
das
test
imul
jb
es
test
data16
cltd
cmpsl
mov
cmc
imul
js
jg
mov
loopne
icebp
les
ret
pop
gs
outsl
fsubrs
jae
rcll
ret
outsl
cld
mov
dec
lret
xchg
add
negl
imul
clc
xchg
and
pop
aad
xchg
xchg
xchg
add
mov
sbbl
cmp
pop
adc
and
jge
ja
xchg
or
or
dec
lret
fimuls
notl
inc
add
sbb
sub
cmp
xchg
add
pop
clc
push
xchg
xchg
or
out
inc
in
add
mov
shlb
fisubs
inc
mov
scas
inc
or
loopne
cmpb
lea
test
jmp
and
sbb
or
scas
cmp
mov
xchg
je
inc
sub
push
pop
jne
jb
mov
sarl
ret
inc
int3
jle
inc
pop
inc
add
fs
push
xor
xor
inc
dec
cmpsl
or
lret
addr16
int3
mov
jmp
cmp
push
xor
cmp
adc
sub
ficompl
cmp
inc
xchg
or
sbb
bound
js
and
dec
pop
add
clc
jo
mov
xor
push
pusha
movsl
cmp
or
mov
xor
cli
mov
lods
and
scas
std
sbb
mov
imul
mov
pop
jno
aas
inc
push
inc
adc
out
cmpsl
test
xchg
and
fidivrl
adc
inc
scas
adc
int3
mov
or
jl
cmp
pop
adc
adc
mov
sbbl
hlt
lea
nop
in
std
inc
int3
frstor
outsb
inc
insl
popf
pop
icebp
adc
lods
push
insb
aaa
imul
icebp
cmp
sbb
xchg
mov
mov
mov
outsb
jmp
das
mov
cmpsl
ljmp
je
cmp
and
mov
lods
ss
jmp
cmc
loope
jbe
lds
cmpsb
xchg
dec
fmuls
daa
push
xorb
add
xchg
push
sbbb
repnz
aam
cmp
xchg
jne,pn
cmpsb
sbb
inc
xor
sbb
sub
or
xor
pop
stos
fnstcw
inc
push
xor
jecxz
or
jae
mov
div
sti
inc
in
mov
jnp
int3
fwait
std
test
and
xchg
test
or
loop
jge
shl
cltd
push
cmp
cmp
push
and
jg
ret
addb
jbe
push
jo
leave
sub
or
aas
inc
xchg
lea
arpl
cld
in
mov
and
std
or
jl
sbb
add
addr16
pop
mov
lret
sbb
jp
or
xor
daa
sub
sub
ret
xchg
mov
sub
mov
test
lods
test
push
jae
add
lds
fs
adc
int3
test
rcrl
fdivrl
xchg
fmull
pushf
icebp
lcall
test
cli
jg
push
sbbl
adc
pop
test
inc
dec
dec
add
add
xchg
insb
ja
mov
xor
sub
jns
out
insl
int3
js
push
xor
out
fucomi
or
dec
mov
jo
aas
lds
out
iret
add
sub
ret
inc
loopne
inc
pusha
leave
movsb
xlat
in
xor
mov
pop
into
int
pop
mov
xor
sub
mov
shlb
adc
sbb
cmc
or
jne
movsb
lods
inc
add
inc
cmc
mov
loop
mov
mov
xchg
loopne
push
mov
dec
loopne
add
cmpb
sarl
sar
nop
adc
and
push
mov
cmc
rclb
shl
xor
mov
jno
lahf
cmc
repz
jne
and
inc
adc
push
int
push
int
xchg
mov
jnp
orb
push
mov
aas
lods
cmp
jmp
arpl
pop
push
pop
in
fwait
int
cmpsl
mov
out
ja
daa
mov
std
rcll
aam
jnp
rcll
sub
sbb
add
scas
cmp
dec
inc
pop
lods
dec
in
xor
add
insb
jbe
xor
fmulp
divl
imul
fnstcw
jne
xchg
mov
out
call
ftst
add
std
jns
test
out
aam
add
ret
xor
imul
xor
jb
sti
push
cs
roll
adc
dec
jge
inc
mov
pop
icebp
clc
aaa
dec
rclb
cltd
sub
xorb
mov
test
jg
arpl
out
xor
pop
mov
inc
xchg
add
loop
xlat
xorb
je
push
fstpt
mov
arpl
enter
leave
add
sbb
pop
mov
fists
or
test
jmp
add
pop
jns
int3
inc
pop
sub
dec
sub
cmp
stos
out
mov
inc
fisttpl
cmp
sbb
sbb
mov
dec
iret
ljmp
cmpl
imul
dec
iret
scas
das
dec
jp
fcoms
pop
jge
loope
mov
xchg
les
and
popa
xchg
bound
lods
bound
push
data16
jb
sub
insb
test
leave
or
cmp
xchg
xor
mov
mov
out
mull
adc
sub
cmp
mulb
enter
adc
negb
ljmp
fcmovnb
sarl
pop
sbb
fcomps
mov
lods
push
jmp
out
jne
xor
in
test
inc
cli
sbb
jb
movsl
shll
gs
std
rorb
bnd
in
fnsave
xchg
pusha
cmp
jge
sub
jns
jge
xchg
jb
sahf
shll
addr16
iret
shl
push
jno
lret
cmp
rcrb
jns
lods
cmp
js
push
xor
add
push
dec
insb
and
stos
cmpsl
sti
sbb
jb
xchg
cmp
adcl
imul
std
xor
iret
fstps
popl
int
mov
cmp
bswap
fdivs
adc
push
pop
xor
rorl
int
fcmovnbe
mov
push
rclb
jb
ret
test
inc
movsb
cmp
pop
pop
adc
mov
fiaddl
movsb
fs
jg
xchg
movsl
jp
pop
rorl
popf
aad
jo
sub
or
mov
cltd
mov
or
and
mov
mov
in
add
into
scas
cmpl
enter
push
lret
stc
cmpsl
enter
sub
popf
pop
xor
xchg
xchg
and
xchg
jle
popa
out
adc
lret
cmpsl
outsb
dec
call
fidivrl
insb
jne
pop
add
imul
jbe
jb
jbe
jmp
push
movsb
pop
aam
add
dec
mov
dec
mov
mov
and
scas
pop
pop
xchg
scas
loop
pop
push
mov
jp
in
fcomp
jns
mov
rolb
sub
adc
and
mov
xchg
fldenv
sbb
popf
es
push
movsb
mov
fcompl
imul
lods
repnz
sbb
jge
ja
xlat
jmp
bound
and
insl
lahf
push
adc
sti
adc
inc
cmp
mov
enter
sub
fldlg2
and
and
imul
xor
clc
pop
cwtl
sbb
lock
or
outsl
sahf
mov
out
je
in
fstp
add
stos
xor
add
ljmp
mov
fsubrl
test
adc
sahf
imul
mov
mov
push
ds
dec
leave
scas
pop
mov
xor
xchg
add
imul
stos
outsb
jo
inc
mov
and
add
dec
and
dec
jp
adcl
mov
mov
xor
mov
and
gs
lcall
stos
cmp
fdivrs
and
lahf
or
jecxz
pop
and
into
cmc
jb
push
cmpsl
mov
inc
xor
mov
andl
inc
movsl
xchg
jmp
and
aad
inc
adc
pop
popa
jo
jbe
xorb
cli
test
es
imul
ret
jg
dec
push
sub
sub
call
push
xor
mov
inc
lret
mov
js
push
cltd
incb
lea
mov
mov
add
inc
mov
push
sahf
adc
ds
sbb
aas
hlt
mov
stc
or
ljmp
loop
sti
xchg
cmpsl
sbb
mov
mov
and
dec
inc
xchg
stos
xchg
mov
mov
loopne
push
xor
dec
lret
and
fstl
sbb
aad
jne
mov
loop
insb
mov
fistpll
cmpsb
inc
xorl
inc
int3
and
fsts
dec
clc
rdrand
mov
mov
addr16
in
inc
cli
sub
xchg
lds
xchg
in
out
sub
std
test
mov
add
push
mov
test
adc
and
jl
stos
sub
sub
push
pop
xchg
sarb
jmp
dec
sbb
cmc
push
cmc
mov
sub
add
leave
test
shll
jge
cmpw
inc
mov
arpl
pushf
xchg
dec
popf
cltd
dec
cli
in
inc
ss
mov
mov
ficoml
clc
movsb
mov
jnp
in
sub
pop
jmp
outsl
testb
sti
or
push
sbb
fisttps
mov
adc
testb
daa
jg
notl
mov
cs
in
push
mov
push
aam
and
clc
movsl
push
ljmp
push
scas
push
aad
ret
sub
cld
int3
jne
rorb
pop
addr16
aaa
sub
lods
stos
into
popa
pop
into
sub
mov
and
shll
and
out
out
stos
inc
ds
stos
fdivrs
mov
rolb
mov
icebp
jno
pushf
add
es
add
hlt
jge
in
mov
pop
stos
mov
sti
out
loopne
and
push
aas
cwtl
outsb
in
ret
loopne
adc
jae
xor
mov
add
add
xlat
psrlq
out
popf
mov
mov
mov
inc
jne
fstps
loop
jne
cmpsb
add
cmp
call
dec
mov
cmp
dec
adc
jmp
dec
repz
cltd
inc
sbb
and
jbe
add
call
loop
cwtl
and
push
nop
cs
movsb
jl
nop
cwtl
or
and
js
aas
in
mov
neg
sub
pop
scas
and
inc
and
and
loopne
push
lret
xchg
xor
shlb
jmp
jmpw
into
shrl
mov
dec
xor
fs
xchg
movsb
fwait
mov
xchg
sbb
add
mov
xor
movsl
jl
pop
xchg
cmp
push
cmp
xor
negb
in
pop
inc
cli
cmp
ja
sbb
leave
xchg
test
cmp
jnp
add
stc
push
cmc
test
int
add
pusha
insl
neg
pop
or
xchg
es
nop
adc
cmp
push
into
mov
stos
pop
aad
dec
jb
sti
testb
in
stos
les
push
idivl
addr16
cmp
jb
dec
addr16
jmp
ficompl
mov
repnz
movsl
xchg
xchg
or
std
or
iret
psubusb
jg
out
mov
mov
adc
cmp
pusha
sbb
dec
jbe
insl
or
fcomp
test
push
jnp
push
sbb
pop
cmc
shr
or
sub
mov
push
pusha
stos
add
mov
add
test
add
cwtl
movsb
push
push
js
and
mov
aaa
clc
fcmove
sub
mov
and
js
int3
rolb
inc
jbe
jo
fwait
imul
mov
lods
sbb
mov
iret
xchg
dec
dec
popa
jp
daa
cmpsl
fcompl
clc
sbb
dec
mov
push
mov
mov
bound
clc
enter
clc
lsl
movsb
sub
mov
int
lods
xchg
xchg
loope
sub
paddw
imul
pushf
lea
out
loopne
cltd
iret
bound
cld
outsb
in
rolb
push
dec
sbb
push
movsl
popf
lds
adc
cs
sbb
jg
iret
mov
jb
xchg
mov
or
xchg
stc
xlat
pop
add
and
sbb
lcall
lock
pop
out
mov
dec
repnz
daa
push
inc
cmp
mov
push
mov
les
into
das
mov
and
dec
movsl
cmp
mov
pop
sahf
lahf
test
add
add
repz
adc
sbb
xor
rolb
andb
cld
and
mov
jg
rorb
cmp
jns
pop
pushf
cmp
pusha
jb
xchg
cmp
inc
subl
mov
xor
pop
sub
push
cli
cmp
mov
int
repz
ss
cmp
xor
add
mov
pop
push
cmp
dec
ljmp
pop
ljmp
mov
xchg
shll
int3
xor
jns
loopne
mov
js
je
std
jae
es
dec
cmp
movsl
cmpsb
push
imul
inc
je
adc
pop
mov
cwtl
xchg
outsb
jl
adc
jecxz
or
dec
ret
lock
fiadds
mov
insl
inc
mov
or
es
xchg
enter
and
cmp
inc
sbb
cmc
gs
roll
jae
dec
dec
add
inc
sarb
pop
movsb
outsb
and
xor
mov
pop
pop
cs
clc
js
add
cmp
xchg
lret
out
test
lret
cmp
or
repz
das
fcomps
mov
ficompl
add
add
js
addr16
clc
add
cmc
repnz
adc
and
push
push
in
inc
push
ret
xor
push
mov
dec
sub
mov
sub
in
aam
gs
sbb
push
mov
test
jle,pt
jo
sub
rclb
jo
adc
mov
dec
outsl
sbb
jo
jns
pushf
jbe
loopne
adc
cs
mov
rclb
ja
iret
lock
out
and
sar
sub
mov
push
in
imul
add
xor
jl
adc
and
jno
pop
pop
dec
daa
addb
pop
xor
lock
inc
loop
or
data16
repnz
mov
mov
cli
jbe
push
pop
int3
fs
out
push
test
roll
orb
clc
cmp
cmc
or
jb
jne
rcrl
sub
lahf
js
sbb
pop
push
shrl
iret
movb
and
jecxz
aam
mov
cmp
add
adc
xchg
icebp
mov
jp
dec
mov
ret
cli
sahf
and
dec
mov
daa
mov
popf
xchg
rolb
idiv
vpunpckhqdq
jbe
cmc
rorl
mov
inc
xorl
or
xlat
mov
movlps
push
push
insb
neg
ds
pop
xchg
mov
dec
mov
jmp
idivl
add
push
mov
pop
out
rcrl
push
dec
adc
scas
sub
fwait
push
insb
leave
sbb
test
xor
cld
lods
mov
mov
jl
lret
xor
das
rcrb
inc
in
inc
imul
adc
xchg
jge
push
enter
lock
xchg
imul
inc
popa
sahf
notl
iret
fldcw
arpl
add
xor
push
sub
les
int3
leave
leave
xchg
cmpsb
aad
dec
or
iret
and
mov
pop
push
sub
and
fsts
pop
cmp
pop
loop
dec
push
adc
out
ret
sub
movaps
add
iret
pop
jns
movsb
adc
data16
adc
jle
ret
cmpb
and
sbb
jp
inc
and
add
aad
mov
dec
jns
gs
testl
xchg
call
stc
pushf
cwtl
rorb
jns
xor
mov
sti
add
lods
sarl
ja
rcl
mov
test
pop
mov
jb
push
fistpl
xor
mov
andb
mov
xor
ljmp
enter
push
push
mov
mov
pop
cmpsb
test
sahf
ror
or
adc
sbb
cmp
ja
orl
sub
rol
xchg
shr
cmpsl
sbb
dec
loopne
and
int3
enter
nop
data16
inc
mov
jno
mov
inc
out
stc
lea
mov
push
mov
fistpll
dec
leave
es
jge
add
fs
lea
xchg
bound
pusha
in
adc
shl
push
jge
push
rorb
movsl
and
or
push
dec
mov
stc
and
push
mov
cmp
cmp
dec
inc
test
out
jp
push
fbstp
pop
aaa
fwait
out
sbb
jns
cmp
jns
enter
jbe
out
ror
stos
mov
push
in
stos
ret
adc
pop
inc
sbb
out
das
adc
cmp
int
das
mov
mov
jne
scas
dec
lcall
lock
xor
scas
push
lds
sbb
leave
lret
ret
xor
sub
cmp
mov
mov
fstpt
sbb
push
insb
adc
stc
ror
cmp
adc
cltd
inc
inc
jbe
gs
lcall
lods
jns
rcll
icebp
jg
dec
mov
push
push
clc
in
xor
inc
cmp
dec
or
popa
in
xor
mov
mov
fimuls
cmpsb
std
sbb
stos
jb
data16
xor
push
sbb
add
xor
push
xor
aas
adcl
inc
enter
aam
xor
and
pusha
add
xor
mov
cmp
inc
mov
int3
inc
sub
fucom
leave
push
int
sti
popf
in
mov
mov
push
mov
xchg
and
push
jl
je
mov
cmp
aam
inc
cmpsb
sbbb
jno
jmp
mov
out
pop
outsb
pop
pop
int3
andl
or
lds
xlat
inc
mov
sub
push
repnz
push
cmp
xchg
test
xor
push
loop
xchg
lret
cltd
cmp
pop
ss
and
or
out
lea
pop
add
mov
jecxz
adcb
mov
es
jne
out
shlb
popa
cmpsl
out
repz
out
aaa
push
lods
lock
bound
jne
push
jmp
cltd
stos
jle
add
push
push
and
jno
sbb
test
bound
lahf
lods
fimull
xchg
loope
mov
cmpsl
mov
movsl
cmp
cmp
call
push
fldl
xlat
mov
pop
imul
mov
repnz
mov
pop
sub
aas
das
push
movsl
fists
stc
jp
sbb
and
mov
popa
scas
cmp
sbb
scas
sub
sbb
and
cmpsb
xor
pop
int
lods
and
je
lock
idivb
cltd
add
push
imul
fcom
sub
jmp
imul
mov
scas
sbb
shrb
push
divl
cmp
and
mov
mov
xor
push
rcll
mov
dec
push
sbb
fidivl
imul
into
nop
inc
cli
or
sbb
sti
cmp
pop
push
in
mov
aam
insl
cwtl
loop
punpcklwd
adc
jge
fiadds
push
movl
add
sahf
push
pop
je
pop
fnstenv
pop
hlt
das
ja
out
jge
push
lret
stc
inc
mov
mov
mov
or
sbb
repnz
ja
imul
lock
add
inc
mov
mov
xchg
popfw
push
pop
lahf
push
scas
lds
mov
cmp
pusha
sbb
sbb
xlat
push
fidivs
cmp
lods
mov
call
dec
fs
rclb
adc
jne
aam
arpl
jg
rcrl
ljmp
sbb
roll
rcpps
mov
jecxz
lea
iret
pop
mov
aaa
cli
mov
and
pop
mov
cwtl
je
aam
adc
sbb
jmp
push
lret
inc
dec
fdivl
xchg
test
mov
xchg
and
stos
dec
dec
cs
mov
pop
in
ret
sti
iret
test
mov
in
inc
push
int3
or
lods
push
std
sti
fsubp
jo
cmp
pop
enter
mov
int
xchg
xchg
out
incb
xchg
test
add
cmpsb
xor
popf
scas
xchg
xor
jne
inc
cli
sbb
push
dec
rol
ljmp
inc
cmpsl
fcmovnbe
sub
adc
lahf
mov
out
scas
int3
jo
xor
lods
or
movsl
movb
xor
xor
xchg
insb
enter
outsb
jne
iret
hlt
push
cmp
cmc
jnp
stc
mov
push
and
inc
jmp
xchg
not
and
jo
mov
xchg
or
loope
mov
mov
test
mov
mov
out
aaa
les
aas
sahf
and
cmp
mov
es
xor
jecxz
mov
cmp
aas
stos
lods
cld
mov
out
xlat
leave
mov
aad
sub
sbb
add
les
push
mov
inc
xor
daa
es
push
nop
xchg
and
sbb
or
push
decb
xor
cmc
sbb
push
pop
adc
shr
dec
insb
fimuls
cmp
fiaddl
aaa
sbb
hlt
xor
leave
dec
scas
jl
sbb
cmp
push
stos
sbb
bound
call
xor
outsb
mov
cltd
and
in
or
repnz
ret
ret
jmp
fsts
pop
enter
and
sbbl
addr16
adc
ljmp
out
adc
in
mov
loop
repz
cltd
aad
jl
daa
dec
cmp
cmp
ret
popf
or
movzwl
jo
mov
scas
jecxz
sbb
adc
and
sbb
dec
dec
adc
fcoml
addr16
movsb
movsl
test
fidivs
stos
xchg
push
into
jmp
dec
dec
test
lods
inc
mov
jnp
mov
stos
inc
movsb
sub
cmp
jl
insl
xchg
inc
call
imul
call
aad
push
mov
xchg
mov
inc
cmp
popf
or
in
xchg
outsb
rcrb
mov
push
and
imul
push
scas
mov
mov
nop
sbb
sub
fisubrl
rorl
xor
clc
pop
lea
adc
cmpb
sbb
xor
shll
and
lods
fidivl
add
cmp
js
out
mov
push
inc
lret
rol
jns
mov
jno
fcompl
push
ret
daa
pushf
sub
cli
les
mov
xor
pop
adc
jnp
pusha
cmp
pop
add
mov
pop
daa
lods
mov
dec
dec
xchg
fsubr
add
aam
fwait
in
mov
iret
jl
in
loope
xchg
es
jp
pop
stos
aad
ret
inc
sub
jge
cmp
int
shlb
jl
jb
cmp
data16
in
mov
fiadds
repz
shr
push
imul
mov
sub
decb
jo
and
sbb
enter
xchg
sub
orb
adc
cmp
xor
aas
xor
call
mov
scas
lock
das
add
gs
and
sub
xchg
push
inc
cmpsb
push
xchg
push
test
testb
push
sbb
cmp
cmp
mov
loopne
jae
popa
fwait
icebp
and
bound
cmpsb
ja
fiaddl
int3
in
adc
pop
xchg
push
xor
ja
outsb
sti
sarb
xchg
fidivs
push
pop
test
push
jecxz
xchg
pop
push
and
sbb
shll
je
jns
lock
outsb
loop
fwait
push
sti
sub
xchg
dec
dec
sub
or
push
or
xchg
push
aas
mov
in
pop
aad
ficomps
aas
das
dec
adc
xor
inc
je
and
or
jbe
xchg
aas
fs
out
js
rcr
out
dec
rcrb
jo
inc
sub
pop
in
and
jecxz
or
and
lds
adc
push
lock
icebp
emms
mov
lahf
iret
and
jge
in
aaa
loopne
jns
repnz
sub
adc
call
pop
out
pop
icebp
not
mov
xor
das
in
xor
add
loop
sbb
inc
cltd
out
repz
dec
cmp
es
sbb
out
dec
clc
dec
or
inc
jp,pn
cmp
imul
scas
jnp
mov
repz
bound
jno
pop
out
hlt
mov
scas
sbb
push
jns
cwtl
fiaddl
pop
stc
mov
pop
sbbb
push
mov
stos
mov
dec
test
ret
leavew
shlb
daa
pop
pop
inc
lretw
xchg
sbb
push
sbb
int
popa
idivl
mov
lea
iret
movsl
aaa
jne
arpl
cwtl
pushf
test
ljmp
and
out
cld
clc
mov
jno
mov
jo
hlt
ss
push
push
push
lret
das
mov
mov
jnp
mov
pop
icebp
fs
jae
ljmp
ret
outsb
xor
mov
pop
pushf
fidivrs
add
fs
jmp
add
call
in
outsb
mov
cmp
push
dec
outsb
pusha
push
lcall
nop
mov
gs
jb
fisubrl
std
jge
sbb
inc
push
out
xor
push
mov
sub
std
hlt
mov
or
into
aam
mov
lds
xchg
es
push
jb
mov
dec
rcr
arpl
int
or
cmpsb
sbb
sbb
rorl
mov
test
mov
dec
add
imul
add
push
in
xchg
push
xchg
clc
stos
into
pop
sub
loop
mov
xchg
dec
std
xchg
fsub
dec
inc
inc
aaa
sub
lea
lods
fistpll
sbbb
pop
in
mov
jno
lock
jmp
or
lret
xchg
jbe
mov
xor
mov
fimuls
addb
fbld
xor
pop
jbe
xchg
movsb
cltd
sub
and
je
int3
xchg
sbb
icebp
outsl
pop
and
out
pop
adc
lods
ficompl
xchg
mov
push
in
mov
pop
sahf
xor
mov
or
in
aaa
test
je
cmp
lods
in
in
cwtl
in
sub
inc
mov
mov
dec
sahf
adc
push
mov
mov
dec
pusha
gs
mov
jb
cltd
insb
xchg
mov
pop
cs
xor
sub
lcall
fnstsw
aaa
cmc
inc
icebp
mull
imul
add
xchg
insb
push
adc
or
cwtl
jns
popa
in
es
cmp
dec
mov
sahf
mov
add
and
nop
jbe
lods
movl
stos
icebp
mov
or
fnstsw
push
iret
xor
mov
cli
jns
adc
sbb
push
jecxz
or
cli
mov
ja
aam
add
adc
xchg
mov
mov
dec
and
xchg
in
xchg
andb
pop
ss
push
aam
pop
adc
inc
fstpl
repz
lods
add
out
sbb
pushf
cltd
fs
hlt
sbbl
cmc
mov
jecxz
jg
ret
xchg
shrb
sti
lods
sbbb
or
inc
insb
hlt
mov
into
xchg
mov
ds
iret
and
dec
nop
pop
xchg
test
pop
pop
sbb
sbb
bt
push
pop
negb
clc
aam
dec
fisttpll
adc
jnp
mov
cld
pop
adc
dec
xchg
pop
sub
and
fldl
aaa
inc
popf
es
jmp
mov
fimuls
clc
divb
inc
loopne
jns
popf
std
jl
in
nop
cmpsl
stos
cld
mov
sbb
jmp
mov
data16
cmp
pop
lods
adc
add
out
jne
inc
mov
dec
sbb
inc
mov
test
roll
test
bound
xor
mov
xchg
outsl
imul
insb
cmp
sub
and
jnp
lcall
xchg
loope
mov
aad
jns
pusha
or
sbb
fs
jb
cmp
xor
dec
sbb
mov
add
sub
aas
mov
loopne
xchg
push
pop
dec
pop
hlt
hlt
xor
mov
push
scas
test
std
jge
adc
fldenv
movsl
pop
pop
mov
jo,pn
mov
or
cli
or
lret
aas
js
test
or
mov
decl
outsb
or
push
ss
push
cmp
lea
mov
lods
jne
sub
cmp
push
nop
and
fisubl
jo
into
sbb
add
bound
les
test
sbb
xchg
and
movsl
mov
aaa
mov
repnz
fs
lret
ret
mov
mov
or
sbb
decl
ss
and
inc
cmc
orb
xchg
cli
mov
jbe
inc
xchg
dec
js
mov
rcrl
lcall
icebp
ret
or
xchg
add
test
inc
shrl
pop
pop
and
pop
pusha
call
push
fdivs
fld
or
mov
aad
in
mov
mov
rolb
aad
sbb
cmp
insb
push
jns
pusha
or
mov
jo
mov
rcl
jae
adc
or
pop
mov
repnz
in
dec
imul
not
test
in
inc
loopnew
popf
mov
mov
push
aas
xor
call
push
jbe
mov
test
jae
xchg
iret
push
push
push
pop
inc
and
and
push
popl
aad
push
lods
popa
or
push
push
pop
in
fnstsw
xorl
sub
std
test
inc
jns
arpl
lds
movsl
xchg
jl
cmp
leave
lods
int
push
xor
mov
cltd
pop
cmpsl
clc
sti
fisubrl
repnz
arpl
jecxz
dec
pusha
frstor
dec
mov
pop
rol
dec
push
ja
fdivs
stc
cmpsb
mov
sub
dec
pop
fsubs
int3
lea
mov
xchg
push
ljmp
std
cli
faddl
insb
jns
rsqrtps
loop
jnp
cmpsl
daa
shlb
popf
leave
mov
push
das
mov
sbb
pop
jmp
in
sahf
push
outsl
pop
lea
sarl
push
scas
mov
jecxz
sti
out
cmp
or
or
sbb
aad
mov
inc
inc
mov
std
mov
cltd
sahf
adc
pop
arpl
shrl
xor
inc
daa
inc
sbb
mov
mov
dec
dec
icebp
orl
mov
fwait
jmp
aas
cmp
sub
xor
lock
leave
lgs
sbb
xchg
xor
xchg
sub
hlt
iret
xor
inc
cmpb
cs
inc
fstpt
sub
dec
adc
sub
jnp
lahf
jg
repz
xchg
in
sbb
push
outsl
mov
ret
push
inc
sti
ja
sarb
mov
jecxz
cmp
push
jp
xchg
inc
lcall
js
mov
movsb
jl
ja
fcoms
dec
mov
mov
in
or
pop
sbbb
and
or
and
fmull
cmp
sub
add
outsb
xlat
pop
loopne
scas
ja
ss
mov
mov
jns
jg
or
xlat
inc
mov
idivl
fisubrs
cli
mov
sub
push
mov
lcall
adc
setg
aam
and
pop
pop
xchg
jge
loope
xchg
or
push
and
pushf
filds
or
stos
dec
mov
pop
jnp
adc
inc
cwtl
sbb
sti
mov
cmp
testl
sbb
test
repnz
js
je
jge
or
mov
scas
sbb
mov
ds
fistl
insl
in
adcl
push
je
shlb
and
stos
clc
jae
out
fimull
mov
pop
addr16
out
add
pop
rcll
in
insl
ja
adc
icebp
addr16
adc
cmp
dec
mov
shrb
push
mov
dec
sbb
push
stc
sbb
dec
in
es
mov
sub
pop
in
jae
xlat
sub
lods
addr16
mov
leave
bt
sub
fstpt
fistl
xor
mov
dec
pop
adc
mov
xchg
xor
mov
lods
sub
lret
ljmp
or
fwait
rcrb
cli
mov
or
int
inc
lret
sbb
jmpw
sub
mov
jbe
sti
rcll
adc
outsl
divl
xor
sti
inc
push
jmp
add
sub
sbbl
movsb
stos
repnz
dec
es
dec
fadd
xchg
or
lret
sti
xchg
repz
push
mov
xchg
ret
mov
dec
es
xor
dec
shlb
aas
dec
mov
mov
in
adc
mov
dec
cmpsl
cmpb
push
sbb
movl
outsl
xchg
adc
ret
jae
movsb
outsl
hlt
mov
fidivl
out
adc
stc
mov
ss
or
jmp
rcr
popf
xorl
ret
stos
popf
adc
fadd
leave
aad
mov
mov
or
dec
jmp
lods
push
rcrb
jecxz
mov
mov
jecxz
cmpsl
jnp
outsb
mov
cwtl
ss
sarl
jmp
lcall
scas
fmuls
pop
loope
pop
add
jae
inc
dec
aas
push
into
push
and
xchg
adc
adc
adcb
mov
fs
jp
scas
mov
clc
mov
xchg
dec
add
icebp
xchg
les
xlat
push
pop
cs
pop
daa
into
out
xor
ljmp
adc
cli
je
aaa
xchg
cmp
in
xor
clc
shlb
cmp
inc
sbb
sahf
pusha
stos
and
pop
dec
xor
inc
in
pop
enter
out
cs
enter
imul
iret
outsl
inc
mov
dec
pop
or
push
rolb
cmpsb
enter
jp
cltd
std
add
mov
pop
in
mov
mov
pop
aad
decb
add
and
fldl
or
mov
mov
mov
jecxz
xlat
lahf
mov
ficomps
mov
int3
in
nop
xor
push
xorb
push
je
stos
inc
sbb
out
fwait
and
pop
outsl
mov
incb
decl
stc
inc
push
out
push
lret
mov
in
lret
lock
sub
movsb
das
rolb
popf
adc
imul
and
decb
movsb
inc
je
cld
rorb
sbb
mov
push
clc
pusha
lcall
pop
add
fnop
mov
or
gs
add
std
jne
sbb
push
in
sub
cmpsb
add
sbb
cld
pop
cmp
mov
lock
mov
xchg
cltd
mov
addr16
xor
adc
out
js
jae
mov
nop
lods
hlt
xchg
insb
adcb
int
mov
lahf
xchg
add
jge
leave
aam
dec
out
sbb
adcb
mov
jle
aaa
mov
push
pushf
adc
push
movsb
sbb
add
or
sbb
cmp
mov
inc
fwait
iret
xor
fidivs
lods
cmp
int
lret
pop
aad
push
test
daa
mov
or
xlat
in
mov
sub
sub
inc
xor
pop
and
lret
insb
lahf
lret
push
jecxz
fisubrs
or
jno
dec
mov
cmp
xchg
adc
out
sub
push
inc
adc
or
scas
push
jb
lret
add
sbb
xor
xor
js
in
or
es
icebp
popf
movsl
xor
and
pop
repz
test
ja
sub
test
inc
inc
sar
pop
and
imul
xor
add
dec
dec
movsl
lds
xor
jl
cmp
sub
mov
mov
mov
inc
dec
jbe
jmp
leave
hlt
cld
adc
jg
and
hlt
cmpsl
enter
mov
adc
xchg
rolb
je
imul
sub
lret
or
sbb
repz
ss
daa
mov
les
outsb
popa
bound
mov
shlb
mov
sub
iret
xlat
push
lcall
add
in
dec
xor
scas
and
je
int3
jg
adc
pop
mov
cli
or
cli
add
mov
add
xorl
inc
mov
adc
mov
mov
mov
aaa
xor
xchg
sbb
mov
sbb
inc
push
add
xor
sub
sbb
jnp
pop
cltd
inc
sahf
mov
or
xor
and
imul
addb
mov
xor
pop
or
lcall
addr16
lret
mov
jecxz
pop
loope
imul
lds
and
fnsave
push
rolb
iret
ficomps
stc
sbb
aad
test
cmpsl
push
push
repnz
xchg
inc
sbb
push
in
mov
sub
mov
movsb
mov
xchg
inc
cmp
repnz
add
shrl
dec
dec
lret
inc
and
inc
pop
push
push
pop
push
stos
or
or
out
mov
sbb
pusha
outsb
mov
jae
idivl
and
add
adc
mov
mov
lds
sbb
push
mov
lock
and
inc
cld
push
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
sbb
in
into
or
push
jl
pop
xchg
fwait
sbb
jl
pop
jg
push
mov
xchg
xchg
movsl
in
in
mulb
inc
sub
jno
sahf
adc
sahf
in
int
xor
jle
ret
aas
imul
xchg
mov
mov
flds
sub
nop
mov
sub
ret
imul
std
xlat
mov
test
fmull
cld
in
jb
dec
push
pop
aas
mov
das
mov
xchg
hlt
mov
cmpsb
mov
into
sahf
stos
jmp
push
mov
cmp
sbb
dec
inc
inc
xchg
mov
dec
sar
push
pop
push
movsl
lods
push
mov
xor
fmuls
ds
lea
lahf
push
cwtl
mov
cmp
sbb
sbb
sbb
inc
xor
lcall
loopne
pop
mov
aad
pushf
test
jbe
dec
pop
dec
imul
xchg
pop
mov
sbb
inc
cmp
adc
fwait
insl
loop
out
mov
lret
sub
rol
leave
dec
sub
add
fwait
jmp
mov
push
pop
inc
repz
stc
cmpl
pop
aad
and
enter
sbb
stos
mov
mov
jg
ret
xor
pop
fadd
loope
dec
shlb
mov
mov
pop
mov
lods
mov
jecxz
decb
sbb
ja
jmp
lret
out
out
mov
imulb
jnp
push
test
dec
jge
xor
dec
inc
lcall
lret
stos
or
sub
rclb
mov
in
and
loop
add
mov
pop
pop
mov
xchg
mulb
inc
int3
xchg
jns
inc
and
and
pop
std
add
cmc
outsl
fs
ds
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsb
add
insl
