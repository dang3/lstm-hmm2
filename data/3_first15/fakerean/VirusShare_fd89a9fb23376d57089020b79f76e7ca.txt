lea
mov
mov
inc
mov
inc
dec
movzbl
dec
and
add
lea
mov
and
inc
inc
movzbl
inc
add
xor
and
lea
inc
mov
dec
add
add
inc
and
lea
imul
dec
sub
dec
jne
dec
mov
inc
and
pop
lea
mov
pop
sub
dec
pop
sub
inc
or
lea
movswl
dec
add
inc
sub
and
lea
add
ret
push
mov
inc
inc
sub
add
and
lea
mov
push
push
push
push
dec
sub
inc
push
add
add
lea
movsbl
dec
inc
dec
inc
and
mov
lea
push
mov
inc
xor
add
dec
push
dec
sub
push
lea
mov
pushl
inc
call
add
add
add
inc
sub
lea
imul
inc
add
pop
ret
inc
lods
clc
out
into
jo
sbb
inc
sbb
sbb
dec
adc
leave
adc
dec
add
scas
sub
mov
outsb
and
push
or
pop
cltd
push
popf
les
loop
call
scas
push
fstpt
fsubl
add
jp
or
cmpsl
dec
add
xor
mov
mov
leave
mov
sbb
leave
xor
icebp
lds
xchg
mov
inc
adc
lahf
scas
rcll
xor
push
xor
and
loopne
adc
xchg
pop
cltd
or
sub
loopne
pop
call
daa
scas
pop
mov
in
rcr
jb
enter
mov
jmp
push
lcall
stc
xorb
sub
fdivrs
cli
sahf
mov
mov
push
imul
subl
cmp
pop
push
mov
cmpsl
int
push
cmp
hlt
cmp
nop
leave
shrb
or
aas
arpl
fiadds
lahf
mov
dec
aad
jle
inc
cwtl
or
sbb
divl
sbbb
icebp
fdivrl
jmp
push
out
iret
int
mov
shlb
mov
lret
orb
ror
jmp
or
idivb
jb
mov
mov
movsl
jo
lahf
imul
std
mov
cmp
out
mov
or
push
fnstcw
es
lods
pop
jl
cld
or
je
xor
and
imul
loop
add
cmpsl
daa
sbb
jnp
push
pop
sub
mov
sub
fiaddl
call
jmp
cmpsl
mov
in
and
jmp
mov
loopne
scas
add
data16
lea
lods
dec
pop
clc
shlb
pop
adc
clc
adc
fidivrs
int3
insb
fidivl
inc
int3
fs
test
pop
sub
movsb
leave
enter
adc
ret
data16
sbb
adc
jne
cmp
push
adc
imulb
sub
dec
rorl
mov
fwait
mov
popa
pop
sub
and
or
adc
ret
jl
push
jns
add
xor
or
cld
addl
cmp
push
ret
shl
push
xor
inc
ss
repz
imul
in
inc
mov
dec
ss
stc
jb
in
int3
sub
loop
rcll
mov
lret
add
cmp
fwait
cltd
inc
push
lret
dec
out
test
push
mov
xchg
sbb
out
sbb
xchg
loope
sbb
sahf
lret
clc
jp
jecxz
rorb
xchg
xor
pop
fidivrs
int
pop
or
imul
push
rcr
xor
xchg
fsubr
jbe
sub
cltd
sti
jnp
mov
fisttpl
jl
pop
in
cmp
mov
lea
cmp
stc
mov
xor
out
mov
out
inc
fld
shlb
cmp
dec
scas
sub
add
add
out
out
and
jnp
hlt
jbe
leave
or
and
add
jmp
outsl
shl
sahf
mov
je
pop
jge
std
repnz
hlt
roll
or
xchg
cmp
insl
and
lret
leave
inc
mov
fwait
lock
hlt
rcrl
stos
push
adc
fwait
daa
or
in
cmpl
mov
adc
sar
lds
test
xor
and
in
out
testl
mov
sbb
cmp
sbb
inc
push
mov
jl
xor
lret
mov
dec
lea
fcoml
dec
mov
or
mov
loope
sub
arpl
ss
out
scas
lret
mov
xor
out
sub
fs
hlt
xlat
jl
and
in
std
push
shll
repnz
dec
pop
push
dec
cmp
mov
pop
jp
js
xchg
idiv
mov
cmpb
pop
mov
pop
xchg
scas
xlat
dec
xlat
sub
stos
cmp
fistps
repnz
mov
ds
cmp
mov
int
idivb
aaa
cmp
outsb
jb
and
sub
dec
fdivs
mov
jmp
and
add
push
mov
loop
stos
cli
ljmp
das
pop
addr16
jo
mov
mov
fists
nop
out
aas
cmpsb
dec
xchg
ficompl
pop
fstps
in
mov
mov
loopne
popa
adc
cmpsl
daa
add
add
fstpl
jmp
pop
call
xor
mov
out
std
lcall
repnz
push
lret
mov
cmp
inc
inc
cmc
cmc
fsubrl
jmp
mov
popa
lahf
je
jnp
jl
cmpsl
int3
add
xor
add
xchg
lods
popa
sub
loop
lret
dec
andb
outsl
test
repnz
dec
push
daa
jl
xchg
scas
call
inc
shrl
in
ret
loopne
lods
mov
popf
loop
pushl
js
sbb
dec
adc
push
pop
push
lcall
inc
jb
dec
out
mov
into
insl
xor
lea
adc
or
ret
pop
popl
sahf
adc
idivb
popf
jno
out
mov
inc
cmp
int3
mov
cld
ret
ja
dec
pusha
in
mov
add
add
out
xchg
fwait
push
adc
fcomip
pop
mov
or
fisubs
pop
mov
push
clc
test
jle
push
push
sbb
add
cli
imul
cmp
repz
or
cmp
in
daa
mov
repnz
nopl
scas
jno
sub
adcb
cmp
sub
scas
pop
pop
subb
movsb
cwtl
push
scas
aaa
push
icebp
outsb
push
sbb
in
push
repnz
stc
push
repz
jnp
movsl
sub
sub
jge
sub
adc
sbb
les
les
fcmovu
nop
fs
into
fs
sub
pop
xchg
xchg
cmp
jmp
push
cmpsl
inc
repnz
sub
lahf
in
adc
pop
lahf
je
or
insl
mov
movsl
test
es
sarb
xlat
test
cmc
aad
or
adc
call
cli
xchg
sarb
arpl
sbb
xchg
lods
add
mov
or
notb
out
push
popaw
aaa
sub
inc
sbb
sbb
punpckldq
inc
out
xchg
or
pop
jg
lods
push
adc
repz
or
in
pop
push
cmc
cmp
mov
sahf
negb
cmp
inc
rorb
pop
and
sahf
outsb
test
xchg
xchg
xchg
rolb
jno
sub
nop
sub
inc
stc
or
xchg
or
cmpsl
pop
das
lret
dec
stc
enter
xor
rclb
sub
loop
call
sahf
sbb
insb
xor
adcl
test
in
int
pushf
int
mov
in
gs
add
add
dec
mov
fstps
jl
fnsave
out
lret
or
jecxz
pop
int
or
int3
add
imul
add
loop
and
cmp
out
add
bound
add
daa
and
sbb
cmp
jl
stos
xchg
pop
leave
cltd
or
movsl
es
add
push
ja
jno
mov
add
dec
add
dec
in
mov
sbb
or
and
ja
or
pop
ficomps
jb
mov
dec
sub
fcompl
push
mov
sbb
inc
clc
sub
lret
lret
mov
dec
js
fnsave
sarb
test
xchg
sbb
std
int
jp
iret
out
adc
iret
mov
xlat
cmc
push
sub
fistpl
cmc
push
pop
dec
inc
xor
stos
sub
add
ja
push
push
data16
mov
dec
sub
adc
dec
push
xchg
rcrl
cs
ret
clc
lahf
insl
in
jmp
testl
xor
ds
mov
aas
adc
xchg
pop
dec
xor
mov
cmpsb
push
push
repnz
jno
lds
out
pop
aaa
popa
int3
xor
pop
aam
adc
cltd
push
xchg
jns
gs
idivb
ds
jns
iret
int3
cmc
inc
xor
test
je
inc
xchg
inc
sbb
cmp
xorl
pop
loopne
and
fadds
nop
sub
mov
mov
ds
push
push
or
add
and
xor
mov
jecxz
aas
in
les
xlat
je
dec
pop
inc
subl
and
cvtps2pd
adc
sbb
mov
je
loop
mul
jnp
and
add
sub
ret
dec
cmp
xchg
pop
inc
push
mov
das
stc
outsb
inc
or
mov
cli
dec
pop
fucomp
pop
or
mov
dec
fimull
fdivs
sarl
repz
mov
pop
jge
pop
fbstp
push
sub
inc
push
shll
mov
das
push
shrb
adc
inc
push
xor
bound
and
pop
insl
scas
jecxz
and
pop
pop
sub
mov
sbb
sub
popf
inc
stc
js
call
stos
in
aam
cs
mov
aas
lods
or
andnps
pop
popl
subl
and
notl
pop
push
dec
stos
lods
in
ficompl
or
sbb
frstor
add
lds
fnstsw
dec
dec
cmp
mov
insb
ja
inc
xor
cwtl
xchg
loopne
cmp
jns
jge
pop
push
sub
insl
cmpsl
data16
out
incb
ret
xor
xor
adc
out
arpl
stos
xor
mov
outsl
adc
call
loop
push
fsubrs
mov
mov
or
sbb
sti
cmpsb
rcrl
enter
shr
push
in
mov
sub
lods
dec
std
leave
insl
incl
sbb
ror
arpl
xchg
adc
ret
cli
pop
loope
andb
add
cmp
in
arpl
in
repz
xchg
cmp
imul
and
dec
xchg
or
dec
sbb
mov
in
jl
call
push
arpl
xchg
jbe
sbb
mov
cwtl
lods
enter
inc
or
inc
cwtl
scas
les
xor
lret
les
stos
popa
inc
adc
iret
pushf
fiaddl
hlt
andb
pop
pop
adc
movsb
nop
or
jl
inc
faddp
dec
ds
movsl
je
jl
mov
hlt
dec
test
add
xchg
mov
sbb
mov
cmp
mov
add
ror
mov
fcompl
sarb
pop
aaa
pop
stos
xchg
shl
adc
adc
cmp
repnz
mov
orl
sub
jg
shlb
lods
fldcw
arpl
mov
shll
lret
std
idivl
add
aas
sbb
add
push
rclb
popf
std
fwait
popf
movsl
mov
stos
pop
mov
fidivrl
adc
lcall
xchg
cmp
xor
xor
pop
ja
cmp
lret
je
fmuls
jne
push
push
xor
cmc
iret
cltd
and
sub
insl
inc
sbb
pop
imul
aam
jp
stc
pop
and
mov
pop
fwait
mov
mov
lret
pop
das
mov
lods
aam
mov
stos
cmp
jge
stos
dec
push
xor
inc
inc
lahf
rcll
mov
jge
mov
xor
test
call
fsts
push
mov
out
jnp
repnz
iret
xor
sbb
xor
test
lods
mov
sub
mov
fs
sub
push
mov
mov
xor
or
sahf
outsl
call
push
push
jnp
test
push
mov
fcmovu
jns
or
inc
inc
xchg
sub
or
mov
and
pop
cmpsl
les
hlt
mov
add
add
add
adc
mov
add
stos
mov
mov
pop
aam
int3
mov
in
in
push
mov
imul
push
loopne
movsb
xor
daa
xchg
outsl
sarb
ss
and
orb
jb
sahf
xchg
iret
iret
mov
cmp
sub
dec
cwtl
movsb
jns
or
or
push
xchg
popf
lcall
add
roll
mov
pop
das
mov
test
pop
pop
mov
pop
pushf
lods
lods
in
add
out
ja
mov
inc
loop
test
fiadds
aas
popa
push
push
clc
punpckhdq
adc
cwtl
pop
xchg
stos
call
jp
cs
dec
jge
adc
movntq
out
cmp
xor
paddusw
loope
testl
jb
lcall
sbbl
dec
xchg
pop
fwait
push
lret
aas
add
clc
ror
jl
insb
popf
mov
clc
scas
mov
out
enter
inc
jle
and
scas
stc
imul
arpl
jnp
lods
dec
mov
fnsave
lahf
mov
xchg
sti
out
xor
pusha
mov
adc
lock
push
lods
cmp
push
jo,pt
push
mov
or
mov
inc
pusha
movsb
jl
sub
ss
dec
and
faddp
push
in
or
jp
sub
or
in
and
lea
push
pop
dec
jge
in
pushf
pop
imul
add
mov
cmpsb
mov
es
jbe
int
add
xchg
push
push
fadds
inc
mov
and
hlt
nop
aaa
int
jg
ja
pop
jno
sub
xor
aaa
xchg
fs
popf
mov
inc
adc
rclb
adc
lret
ret
pop
es
movsl
add
mov
adcl
xor
hlt
shll
sbb
mov
adc
inc
je
inc
inc
sub
adc
mov
xchg
xor
mov
movsl
pop
adc
jl
or
scas
fwait
cli
pop
out
and
push
push
scas
mov
xchg
inc
in
mov
mov
cmc
frstor
xor
push
push
and
mov
pop
mov
sbb
gs
bnd
push
test
shrb
mov
lcall
stos
addb
test
rol
mov
rcll
xor
xlat
cmp
adc
out
shll
cmpb
out
or
mov
je
push
mov
pop
sub
and
subb
cmp
daa
dec
push
rorl
push
push
cli
jmp
mov
jae
js
out
test
je
cmp
push
das
icebp
inc
lods
out
push
aad
xchg
bound
jmp
jno
shll
insl
lcall
adc
and
adc
mov
in
sbb
ljmp
and
push
repnz
lods
xchg
clc
lea
ds
emms
imul
or
xchg
inc
add
iret
pop
cmpb
dec
xor
ret
jo
mov
scas
into
pop
lods
push
pushf
cmp
in
subps
mov
mov
and
pushf
lods
sbb
rorb
fwait
cmpsl
adc
mov
and
push
mov
cmp
adc
dec
mov
sub
in
or
inc
adc
adc
repnz
rdmsr
push
xchg
fwait
mov
iret
in
add
mov
repnz
adc
mov
sti
pop
adc
inc
jns
fdivr
mov
ret
addb
scas
inc
outsb
dec
stos
or
popf
pop
push
ss
add
mov
and
xchg
leave
mov
sbb
pop
push
out
cmp
push
or
cmp
cmp
pop
and
dec
aad
push
sarl
dec
xchg
int
loopne
inc
sahf
out
xchg
insl
dec
pusha
pop
js
sub
lret
ljmp
out
bound
out
test
sti
inc
orb
xchg
mov
in
cmc
xchg
fisubl
loop
movl
mov
dec
fistpll
mov
lcall
cld
aas
into
lods
test
sub
sarb
push
jmp
push
mov
sub
mov
mov
cmp
sbb
in
lods
ja
cld
ret
andb
fnstsw
or
mov
ror
mov
pop
xor
leave
out
js
aas
xchg
rcrl
in
insl
xchg
mov
pop
jnp
fcom
cld
out
aad
cmc
repz
shlb
push
int3
in
or
ss
fcoms
in
mov
push
mov
in
or
adc
nop
in
and
ja
mov
dec
cwtl
xchg
sub
or
insb
xchg
das
enter
imul
mov
ss
xor
adc
mov
lret
sbb
mov
jg
mov
out
ficoml
subl
dec
sub
sar
or
dec
ja
test
rolb
aam
test
and
adcb
mov
in
addb
cmp
xchg
das
push
push
sbb
mov
mov
dec
or
or
sahf
sbb
in
inc
mov
cli
cs
js
adc
push
and
inc
in
or
lret
out
pop
inc
cmpsl
in
mov
push
inc
mov
mov
shll
adc
mov
cmpsl
popa
data16
lret
aaa
ds
inc
pop
out
mov
outsb
mov
and
cmp
shrb
dec
and
xchg
mov
scas
sub
loope
or
popa
xor
rcll
rol
and
in
gs
imul
cld
sbb
aam
sbb
out
subb
aas
in
les
pushf
out
movsl
sbb
enter
adc
mull
lea
lea
fsubrl
sub
out
xorb
xchg
inc
xchg
xchg
mov
add
int3
ds
and
push
adc
loopne
push
aam
mov
dec
icebp
and
popa
sub
mov
mov
nop
aas
xlat
pop
mov
mov
pop
xchg
mov
rorb
in
loope
call
jo
adc
icebp
push
fwait
pop
push
fmuls
jns
enter
inc
cld
les
nop
pop
and
or
outsb
inc
or
add
cmp
arpl
and
xchg
inc
shl
and
das
and
int3
movsl
cli
mov
addr16
sbb
stc
inc
mov
push
lods
hlt
xchg
and
mov
cmp
enter
dec
bound
cld
mov
adc
lock
int3
pop
push
shll
xor
cmpsl
xor
mov
decb
adc
lret
cmp
sub
dec
mov
adc
push
xchg
test
mov
xor
call
jge
js
mov
stos
les
test
das
xchg
inc
rol
into
out
inc
aad
into
lret
or
jo
call
and
adc
sbb
and
hlt
daa
push
pop
test
jmp
mov
out
sbb
jae
pop
or
sbb
sub
rcrl
mov
mov
adc
addl
mov
movl
add
push
cmpsl
mov
xor
add
lret
cmp
pop
test
sub
jl
or
dec
jecxz
add
fisttps
repnz
clc
mov
lds
fcoms
sub
jae
in
fldt
shlb
ss
fistpl
xchg
mov
lcall
pop
xor
out
jb
dec
mov
dec
test
mov
bound
jp
pushf
push
push
loop
sbb
xchg
testl
xchg
shrl
mov
enter
cli
dec
test
pop
fisubl
in
repz
cmc
sarb
repz
bound
xor
or
fwait
addb
sbb
mov
lret
jb
inc
lock
jle
push
out
in
mov
pop
sub
lcall
outsb
lds
xor
movsb
jmp
jge
mov
rolb
jmp
dec
mov
push
xor
jno
sbb
or
into
dec
out
mov
outsl
xchg
outsb
pop
xchg
sbb
push
jne
push
dec
xor
jmp
mov
aaa
xchg
pop
leave
inc
inc
sbb
jecxz
xchg
dec
stc
or
repnz
sub
cwtl
push
test
mov
sbb
mov
fildll
in
addb
lods
mov
inc
or
inc
popa
sbb
das
push
int
adc
and
cli
ret
test
cmc
pop
and
sbb
and
data16
roll
aam
out
stos
jg
lods
dec
cld
stos
sub
sbb
ret
pop
cwtl
movsb
fadd
cmpsl
in
adc
int3
sbb
aad
sbb
addr16
xlat
shl
pop
pop
repnz
pop
sub
xchg
popf
loopne
inc
lcall
in
add
out
inc
data16
shrb
adc
in
push
mov
fildl
test
movl
sbb
lods
mov
je
fldl
xor
loop
and
xchg
pop
mov
loope
push
sbb
inc
sbb
imul
enter
sub
xchg
sti
inc
les
push
cld
push
lods
test
call
cs
fstl
adc
mov
int
js
jmp
jmp
mov
sbb
jb
nop
mov
aaa
or
mov
push
lea
ret
pop
sub
lret
mov
mov
aaa
push
ret
scas
rolb
nop
loope
sbbl
aas
addr16
aas
ss
ljmp
xchg
jo
pop
sar
mov
lret
jb
cmp
xor
idivb
mov
mov
std
dec
xlat
or
loopne
iret
out
jmp
shl
icebp
or
sub
je
mov
xor
xchg
cli
vpaddsw
push
ds
sub
mov
jl
in
scas
xchg
fs
dec
out
pop
data16
lods
adc
decl
lret
and
sbb
xchg
fstl
jae
mov
push
pop
into
add
pop
or
push
or
add
out
push
lods
xlat
pop
xchg
mov
dec
lds
mov
xchg
inc
shlb
xor
jne
xor
stos
aad
movsb
add
hlt
mov
clc
shll
les
jg
xor
mov
sbb
cmpsb
jecxz
andb
xor
clc
ja
xor
inc
jmp
xor
daa
popa
xchg
mov
mov
xor
inc
cmp
jl
jp
cltd
add
shlb
xchg
dec
int
adc
inc
loop
fisubl
mov
ja
jno
xor
call
repnz
shrb
mov
aam
daa
mov
xchg
lret
push
mov
push
mov
scas
mov
lea
push
and
sbb
es
movsl
addr16
fwait
xchg
xchg
mov
sbb
add
cltd
scas
fdivl
call
imul
push
sarb
out
sbb
jmp
sub
test
iret
out
pop
and
dec
sbb
adcb
sbb
xor
inc
incl
nop
dec
fcmovnb
adc
add
add
dec
jns
mov
inc
add
cmp
in
push
xor
imul
into
out
test
mov
inc
mov
lret
sbb
adc
and
or
xor
mov
lcall
fsubs
jmp
pop
lods
repnz
jmp
gs
inc
adc
lahf
dec
xchg
adc
popf
sahf
in
jbe
loop
inc
pop
adc
imul
pop
aad
cmp
xchg
ljmp
loope
push
pop
popf
subb
ret
push
cli
lea
push
imull
cmp
dec
pop
dec
fwait
lds
mov
hlt
push
adc
pusha
ret
iret
xchg
pop
mov
or
dec
jns
xor
aas
into
pop
negb
cmp
inc
dec
push
std
jge
or
aas
cmp
pusha
xlat
adc
movsb
fidivrs
outsl
jmp
mov
int
sti
test
call
pop
nop
jle
daa
rcrl
adc
lea
jmp
dec
add
xchg
jle
xchg
inc
adc
push
cmp
negl
and
stc
or
xor
xor
xchg
inc
popa
mov
adc
mov
or
xchg
pop
mov
ror
aas
jae
jns
cmp
inc
mov
and
pop
xchg
jo
mov
repnz
sub
daa
push
jns
jmp
in
pop
adc
mov
xchg
fdivrl
outsb
enter
pop
dec
dec
call
jecxz
xchg
cltd
inc
jns
test
lock
ja
fcmovu
sbb
mov
xor
xchg
sbb
stos
and
cmc
jnp
mov
pop
mov
jge
pop
dec
nop
test
inc
dec
pop
pop
iret
xchg
lods
mov
push
popf
popa
push
jo
xlat
sbb
fcoms
xchg
sub
ss
pop
sbb
out
bound
cmp
ds
out
mov
and
addr16
decl
mov
shrl
cmp
jbe
jg
out
cli
dec
mov
sbbb
adc
and
ret
mov
push
pop
orl
scas
arpl
sbb
in
inc
jae
pop
js
mov
cmp
push
jbe
adc
pop
jl
mov
lcall
fsts
mov
mov
data16
xchg
gs
xchg
xadd
inc
or
mov
xchg
and
lock
insb
cmpsl
aam
sarl
adc
jp
das
adc
les
mov
sti
stos
cmp
mov
inc
cmc
dec
sub
push
jl
mov
leave
scas
es
out
inc
sti
shll
call
jne
dec
jl
jmp
popf
inc
cmp
sahf
xchg
push
lret
loopne
push
dec
les
xchg
cmp
mov
lcall
xchg
cmpb
lock
insl
mov
xor
cmp
daa
sar
mov
sbb
cmc
out
dec
mov
std
and
pop
scas
data16
mov
jns
push
aam
sub
push
dec
add
test
ss
mov
pop
add
push
jle
push
xchg
cli
addl
loope
inc
mov
movsb
push
mov
jns
std
adc
aaa
adc
mov
test
mov
pushf
xchg
jno
sbb
js
mov
push
xchg
mov
addr16
mov
jbe
test
or
inc
out
call
call
add
cwtl
stos
add
mov
mov
mov
cmp
jnp
mov
mov
sub
stc
mov
pushf
nop
sub
pop
mov
mov
mov
lcall
sarb
mov
inc
jge
mov
lret
call
test
insb
and
and
inc
inc
jno
pusha
test
pop
pop
push
outsb
movb
scas
loop
scas
cwtl
mov
lea
pop
or
pop
sub
xor
jns
pop
addl
aas
popa
adc
add
imull
loop
fisubrl
divl
std
lret
les
dec
ret
push
lret
cmp
jbe
xchg
hlt
or
in
popa
cmpsl
dec
popa
sbb
lret
mov
popl
and
adc
insl
dec
pop
in
cmp
imul
xor
and
xlat
mov
push
lock
imull
sub
roll
test
sbb
loop
shlb
mov
dec
je
ljmp
out
jp
lock
out
add
jmp
push
jmp
movsb
pop
pop
movsl
enter
aaa
fcmovb
or
hlt
cmp
jmp
sub
out
xchg
pushf
out
adc
pop
mov
movsb
lods
push
inc
sbb
out
pushf
fwait
jbe
scas
xchg
lahf
dec
lret
repnz
xchg
lahf
fisttps
hlt
shlb
ret
cli
xor
sub
xor
mov
xor
cwtl
jg
orl
icebp
ja
and
bound
mov
inc
push
lods
decl
notl
sbb
adc
imul
scas
push
and
xchg
cwtl
out
cmp
into
inc
adc
push
cmp
or
xor
in
shrl
mov
lahf
dec
cwtl
lods
int3
stc
icebp
jle
icebp
test
leave
clc
sub
and
nop
test
xchg
pusha
sbb
aaa
and
fs
sbb
mov
bnd
mov
out
stc
stos
push
push
ljmp
das
jg
mov
xchg
mov
fistps
and
lahf
sbb
addr16
adc
repnz
pop
cmpsl
or
push
test
jnp
fdivs
in
sbb
imulb
sub
xchg
and
adc
inc
ja
out
mov
xchg
add
xchg
insl
xchg
stc
xor
sarl
sub
div
sbb
shlb
iret
inc
pop
loop
xchg
inc
push
sbbl
mov
ds
mov
inc
jne
inc
xchg
mov
test
repz
out
fldl
lods
mov
cmpsl
xor
sub
icebp
addr16
jmp
dec
pop
pop
sub
std
sub
cmp
aam
sub
sub
sub
cld
cmc
add
jns
add
dec
jns
add
xchg
fnstsw
push
and
sub
inc
adc
dec
push
test
fwait
or
int
lret
mov
in
mov
aad
lods
cmp
mov
inc
mov
push
sbb
mov
inc
push
cmpsb
fiaddl
or
repz
mov
imul
mov
pop
pmulhuw
leave
mov
fsubl
popa
xchg
call
sti
daa
mov
dec
test
pop
arpl
leave
sahf
ret
sar
repz
aam
js
inc
mov
pop
outsb
pushf
sarb
inc
jae
lcall
mov
and
scas
int
mov
subl
push
pop
lds
aam
jle
adc
inc
subb
lret
leave
daa
nop
mov
andb
jno
ljmp
sbb
filds
vmaxsd
enter
cmc
mov
movsb
push
test
pop
xlat
adc
stc
xchg
into
das
push
in
cwtl
cmp
fistpll
add
jp
sub
imul
mov
shlb
stc
cmpsb
jl
popl
xchg
push
xchg
jg
bound
je
pusha
nop
xor
pop
in
daa
dec
out
jae
pop
push
aaa
mov
lret
xor
mov
jp
inc
fs
pshufw
xor
mov
ss
fcmovnb
cmp
cmp
pop
rcl
inc
and
pop
jae
xchg
outsl
mov
cmp
xchg
subl
jne
out
std
jg
cwtl
imull
adc
jae
push
mov
push
andb
adc
sbb
jmp
into
insb
pop
into
leave
stc
fistpll
dec
sti
das
cwtl
xchg
xor
add
loop
fistpl
inc
mov
push
mov
imulb
push
adc
fidivl
icebp
jle
jne
jbe
inc
aad
aaa
mov
call
adc
xchg
sub
in
push
sub
push
stos
pop
push
pop
add
test
inc
mov
movb
dec
push
push
ds
and
pop
jb
jmp
out
je
dec
mov
repnz
fs
xchg
push
jnp
mov
dec
xor
sbb
icebp
and
rclb
lret
cld
dec
cwtl
test
enter
dec
imul
sarl
add
imul
movsb
test
xchg
add
loope
addr16
outsl
fwait
lcall
or
addr16
mov
sub
repnz
les
push
outsb
and
inc
dec
and
testl
test
sbb
in
push
mov
pusha
add
jge
pop
lahf
or
int
mov
test
or
ret
add
push
inc
mov
shll
sbb
add
adc
fnsave
loope
test
or
out
xor
mov
pushf
mov
pop
jmp
bound
push
into
scas
jge
jmp
popf
and
mov
mov
flds
in
mov
xlat
and
cmp
pop
or
mov
stos
mov
movsl
xor
add
pop
push
test
roll
jno
cmp
lds
xor
dec
xor
lods
int3
loope
fcomps
fs
imul
insl
sub
or
sub
jge
add
les
lea
mov
mov
cld
aam
push
push
cmp
adc
add
test
add
adc
shll
ret
fists
divl
imul
out
aaa
jnp
pusha
icebp
aaa
ret
pop
push
jae
aam
sub
jmp
dec
xchg
pusha
clc
stc
dec
out
scas
push
cmp
scas
loopne
jne
mov
fs
in
mov
pop
in
addr16
vpcmpgtw
sub
popa
xor
mov
nop
sub
and
xlat
push
mov
pop
push
jp
ss
xchg
dec
and
mov
push
xlat
xor
inc
push
push
push
jne
scas
data16
push
mov
jl
test
add
sbb
or
inc
das
jmp
cmp
and
cmp
jno
mov
mov
or
or
push
addr16
jecxz
rorb
testl
xor
pop
imul
pop
outsb
enter
pop
push
repz
pop
mov
inc
stc
outsb
sbb
mov
aas
jbe
fwait
and
push
rorl
jg
test
in
bound
fldcw
loope
scas
insl
test
lods
imul
std
stos
or
inc
and
pop
leave
loop
xchg
fldt
pop
add
idivl
sub
xchg
adc
lahf
gs
sbb
pop
nop
mov
sub
lea
inc
mov
inc
shrl
insb
das
mov
shrl
dec
cli
mov
loop
cmc
jmp
xor
pop
sbbb
into
cmpsb
adc
dec
jae
lods
cmpb
flds
jl
xchg
pop
mov
popa
mov
lods
pop
aam
imul
enter
out
sub
pop
jge
aad
add
sub
mov
lret
adc
cli
loope
push
outsw
xor
push
out
push
xchg
aaa
cmp
cli
daa
jge
mov
cmc
inc
sahf
stos
or
xor
push
es
dec
xchg
and
push
pop
outsl
inc
rclb
mov
mov
test
jge
ss
pop
loopne
js
jl
xor
roll
fwait
int3
negb
mov
push
push
fadd
cmp
mov
xor
mov
into
sbb
xchg
mov
jns
rorl
jecxz
cs
notb
jle
dec
and
jecxz
loopne
outsb
fidivs
lock
orl
inc
negl
pop
cld
fisttpll
mov
je
ret
vpmacswd
test
jb
lock
nop
cli
ds
push
subl
mov
push
fidivs
int3
cld
push
pop
or
aam
sti
fsub
jg
in
jmp
fnsave
pop
test
cmp
stos
cmpsl
add
shrl
rcrb
add
ja
pop
in
loope
aas
nop
sub
push
test
sub
fnsave
mov
orb
push
push
nop
mov
sub
mov
pop
dec
push
xchg
push
inc
fwait
out
cmp
sub
mov
cmpsl
cltd
xchg
add
mov
sub
adc
popa
imul
out
add
inc
jl
outsb
xor
out
test
loopne
stos
pop
fdivl
dec
popa
jp
mov
and
movl
mov
sbb
inc
loop
inc
and
gs
cmpsl
sub
lcall
cmp
push
pop
sbb
int3
jb
shl
loope
js
jo
dec
mov
sub
add
imul
sub
cmp
loop
insl
outsl
int3
push
xchg
adc
sbb
or
roll
adcl
jnp
cmp
jbe
je
jg
jo
sbb
mov
mov
xor
or
pop
fdivl
or
mov
mov
mov
int
inc
sub
jmp
pop
rclb
cli
jg
inc
shrl
inc
jmp
das
xor
and
add
lods
jns
mov
sub
dec
lcall
js
int3
jns
dec
test
out
push
adc
movsl
xchg
inc
mov
sub
ficompl
lods
aaa
aaa
stos
ss
sbb
mov
cmp
push
push
mov
adc
out
jl
adcl
aas
or
or
jp
mov
imul
ja
cmc
rcr
sub
in
ds
ss
xchg
jle
mov
aad
dec
lea
sbb
cmp
adc
dec
loop
push
mov
and
mov
xchg
add
mov
push
rcl
and
insl
iret
cmp
mov
cld
in
mov
cmc
mov
or
or
divb
in
dec
ret
inc
mov
cmpl
jae
xchg
repz
push
xchg
out
outsb
mov
and
adc
mov
lret
mov
imul
movntq
out
fsubp
jmp
sahf
fildl
sub
mov
mov
cs
incb
mov
mov
insl
inc
dec
push
fwait
stos
rclb
jg
mov
xadd
add
mov
mov
push
outsb
ds
mov
test
xlat
repnz
fnsave
xchg
jbe
test
loope
cmpsb
pushf
cmc
sahf
ret
mov
inc
and
lahf
jo
nop
fcoml
sbb
dec
ja
jne
idivb
add
add
cwtl
xlat
fimull
fsubrs
testl
dec
in
mov
inc
adc
push
mov
loope
pop
add
lods
cmp
hlt
out
fldl
cld
fisubrl
mov
fisubrs
lods
inc
pushf
loope
sub
ljmp
xchg
sub
push
pusha
pop
daa
aad
mov
mov
jnp
dec
adc
imul
int
mov
jmp
push
mov
adc
push
add
add
movsb
jmp
lcall
cs
mov
jl
jmp
dec
nop
out
pop
shlb
push
adc
arpl
sub
je
sbb
mov
sub
lods
sbb
es
loopne
push
js
push
pop
test
mov
mov
loope
dec
stc
and
jno
shrb
sahf
cmp
test
movsl
es
xchg
xor
lcall
out
pop
ljmp
sub
pop
fstpl
inc
int3
jp
loope
shr
xchg
pop
sarl
roll
push
daa
lret
mov
push
push
pop
nop
call
adc
aas
sub
std
adc
pop
sub
jle
lock
aam
pop
pop
xor
outsl
fbld
mov
xor
xchg
aas
orl
xchg
push
mov
daa
je
sub
mov
jg
ror
pushf
jmp
mov
mov
inc
sbb
jg
hlt
adc
cli
mov
mov
mov
pop
cmp
insl
in
stc
dec
mov
ret
mov
xchg
add
out
inc
jge
jmp
cmp
or
and
call
mov
sub
bswap
ss
out
insl
push
jle
dec
or
dec
jnp
sub
outsl
mov
es
hlt
jns
fnstcw
and
pop
pop
gs
mov
mov
sub
arpl
movsl
push
jecxz
cmp
mov
pop
cltd
jmp
outsl
fistl
das
cmp
sbb
je
lahf
das
adc
js
adcb
xchg
push
jns
push
ret
xor
pop
scas
add
sarl
loop
iret
aas
xchg
hlt
pop
xor
pop
xor
jno
jl
out
stos
repnz
mov
divb
aaa
push
out
cmp
fnsave
ret
sahf
clc
loopne
dec
std
or
and
jecxz
jecxz
jecxz
ja
aas
jbe
inc
sbb
cwtl
sub
fisubrs
push
cli
sbb
dec
lcall
mov
sub
xorl
int3
cmp
adcb
cmpsb
mov
dec
mov
sbb
sub
nop
adc
xchg
pop
and
sti
fisubrl
push
test
sub
repnz
rorb
imul
jge
mov
dec
scas
js
pusha
adc
pop
dec
jb
mov
pop
mov
in
daa
andl
and
xchg
xchg
mov
ss
and
mov
sbb
lretw
mov
adc
js
sbb
lcall
pop
pop
push
mov
push
push
fisubrl
repz
les
sub
add
jecxz
je
or
in
stc
sub
addl
add
and
sbb
sbb
cmpsl
hlt
cwtl
faddl
adc
sti
and
icebp
fwait
js
add
sub
int3
jno
outsb
ret
jg
add
lods
out
xchg
int
add
adc
adc
jmp
and
out
inc
fs
mov
adc
add
add
jmp
repz
jns
mov
insl
mov
adc
movsl
inc
pushf
and
push
xchg
lea
scas
insl
rcrb
rcl
push
repnz
sbb
shll
or
fcompl
xor
inc
cmpsb
dec
clc
jle
xchg
mov
mov
hlt
fidivs
xchg
test
cmp
dec
movb
xor
pop
jmp
push
mov
mov
arpl
push
or
in
pop
mov
rcl
mov
imull
sbb
jmp
das
movsl
dec
push
inc
ret
shrl
cmp
mulb
cmova
aaa
add
push
dec
adc
popf
ret
sbbl
cmp
mov
lods
call
mov
int
cmp
ret
lcall
adc
mov
mov
popa
or
test
es
ds
repnz
add
mov
xchg
in
rcrl
jno
outsl
push
test
sar
jno
and
pushf
fbstp
sub
call
out
pcmpeqw
push
clc
adc
into
mov
sahf
jo
dec
adc
xchg
cmp
push
sbb
inc
jge
adc
and
jp
inc
jno
mov
sbb
stos
mov
sbb
das
mov
mov
outsl
into
pop
gs
pop
pop
xlat
rolb
jne
mov
sub
mov
pop
pop
push
pop
xlat
jb
insl
jae
dec
mov
aad
jmp
cmp
out
movl
cmc
loope
sub
decl
mov
in
fbstp
xlat
fadds
aaa
push
daa
and
cli
and
lds
mov
push
dec
shl
testl
loopne
pusha
loop
mov
lret
fldcw
sub
aas
xchg
xor
mov
int3
gs
xchg
inc
mov
pop
jl
mov
outsl
pop
clc
sbb
in
out
sti
xor
pop
shr
jp
divl
or
pop
fst
jecxz
in
fdivr
stos
mov
xor
cmp
or
xlat
cmpl
xchg
pop
mov
mov
dec
push
xorb
cwtl
add
dec
enter
lods
jb
xorb
pop
cmp
insb
push
cltd
lods
mov
mov
pusha
les
sub
inc
insl
repnz
cld
sahf
in
fcmovb
enter
imul
sbb
push
pop
push
fisubs
sub
pop
cmc
jb
cmp
enter
jl
int
ficoml
int
movsb
mov
in
push
cmp
push
pop
mov
add
pop
mov
mov
sahf
in
push
mov
in
stos
inc
sub
xor
jmp
enter
dec
aas
xchg
lods
pushf
imul
jmp
subl
xor
aam
shll
push
aad
xor
jns
push
stc
repnz
pop
fidivrl
xor
arpl
jmp
aas
push
lret
mov
fadds
or
cwtl
andl
sub
das
in
inc
push
nop
inc
pushl
cmp
fidivrl
arpl
sub
add
xor
cmp
pop
push
xlat
mov
cwtl
leave
or
aaa
mov
jbe
cmp
ds
lea
inc
clc
and
cmpl
std
sub
pop
cmp
xchg
pop
data16
xor
push
cli
dec
mov
daa
lret
adc
mov
push
xchg
fisubl
fsub
stc
sub
or
mov
lret
stc
dec
pop
lcall
add
fnsave
mov
in
push
enter
fs
mov
aaa
cmp
add
cli
idivl
push
lret
sti
mov
xor
xor
aam
dec
dec
dec
adc
sub
and
xchg
test
ds
aaa
and
pushf
inc
push
das
mov
jno
lret
inc
mov
scas
cmp
dec
and
mov
scas
outsb
mov
data16
xchg
fdivl
daa
dec
stos
xchg
js
aad
add
aad
jb
adcl
jge
sbb
inc
scas
cmp
adc
clc
xchg
inc
out
mov
jge
xchg
daa
lahf
call
inc
xlat
cmp
xor
mov
fdivrp
push
pop
insb
cmpl
xchg
insl
add
push
fsubrs
jbe
or
lcall
ret
scas
mov
sti
cmp
xchg
test
sbb
xchg
xchg
add
push
mov
movsb
mov
mov
inc
test
fdivrs
mov
pop
mov
push
shll
mov
xchg
mov
push
test
scas
clc
add
push
dec
shlb
jae
pushf
xchg
mov
mov
out
pop
sub
and
ficoms
cmpsl
test
add
jbe
mov
xor
lret
jecxz
sub
adc
aad
push
iret
push
cmp
xchg
push
and
push
rcrl
adc
adc
scas
and
xchg
add
xchg
mul
fdivl
daa
xor
sahf
cltd
lods
cmp
int
out
in
mov
into
in
jle
pop
mov
popf
ficoms
adc
sbb
in
sbb
mov
mov
imul
dec
fcompl
iret
jl
lret
shufps
or
sub
lcall
aam
mov
xlat
sub
jmp
jb
psllq
or
aad
test
and
xor
rclb
ds
out
xor
push
scas
test
aas
push
add
scas
fists
xchg
xor
mov
xchg
adc
ret
dec
mov
shll
xlat
imul
mov
mov
push
lods
jle
stos
sub
sbbb
inc
lods
insl
fistps
das
in
les
and
xor
clc
pop
pop
nop
mov
adc
sbb
std
out
popf
xorl
xchg
fcomp
jg
push
popf
loope
mov
mov
scas
imul
and
mov
out
out
cmp
cmpsb
pushf
sbb
xchg
dec
mov
jp
cwtl
cwtl
sub
cmp
push
mov
sbb
jecxz
cmp
mov
movsb
pop
call
aas
sub
test
mov
add
pop
cli
cmp
lods
add
pop
xchg
adc
mov
imul
jmp
sbb
dec
mov
or
xor
bound
insb
mov
sti
push
mov
or
es
sbb
lods
cmpsl
and
lds
dec
xchg
jmp
jmp
sub
cmpsl
jns
push
stos
test
mov
in
adc
divl
notl
mov
mov
lock
fcmove
xchg
xlat
pop
cwtl
pusha
fldt
xchg
leave
mov
cmp
hlt
loopne
aam
add
mov
call
inc
adcl
jnp
subb
mov
in
cmp
jp
mov
inc
insl
imul
cmpsb
test
xchg
and
push
imulb
jmp
pop
mov
test
and
mov
mov
out
sbb
mov
jae,pn
lahf
fstp
clc
outsb
inc
int
ret
das
jnp
jp
lret
fs
jl
fcmovbe
subb
jo
fcmovu
in
jnp
daa
lcall
cwtl
sub
dec
xlat
test
cli
aad
ficoml
gs
sbb
js
add
js
ljmp
lods
mov
js
roll
ss
loopne
addr16
mov
aas
xchg
loopne
ja
stos
inc
outsb
sbb
mov
test
pop
out
lret
lret
inc
jnp
outsb
lahf
xor
xor
icebp
sbb
add
adc
push
sarl
repz
into
lret
outsl
pusha
dec
lock
insl
mov
sub
sub
push
es
gs
mov
cmc
mov
mov
pop
add
or
mov
hlt
xchg
rcl
lcall
sub
xchg
xor
stos
pusha
fdivl
xor
sub
cwtl
stos
in
aas
cmp
pop
mov
push
aam
addr16
adc
xchg
int
rorl
movsl
mov
mov
mov
xchg
pop
cli
sub
xchg
mov
xor
ds
cmp
pusha
sub
add
into
lds
or
inc
std
lods
or
sbb
out
sub
xchg
fldz
push
jmp
inc
mov
push
add
shlb
jg
cmp
movsb
or
addr16
jns
xor
lcall
imul
mov
js
enter
mov
in
cld
fsubl
sbb
pushl
orps
xchg
fwait
gs
fadds
sbb
dec
or
inc
ds
mov
pop
xor
rcr
cmp
rcrl
sub
cli
cs
mov
mov
jbe
sbb
ljmp
xchg
popf
bnd
jl
inc
inc
mov
xor
add
cmc
jl
pusha
pushf
fistpll
or
adc
dec
ret
sub
scas
lahf
mov
cld
std
clc
jg
pusha
mov
inc
pop
leave
loope
cwtl
push
jg
dec
mov
sbb
repz
hlt
jnp
repz
jne
gs
popf
mov
add
popa
dec
cmp
dec
into
and
pop
xorl
sub
dec
js
inc
in
jecxz
sub
jb
sub
fildll
sbb
rcll
sbb
popa
jg
jecxz
push
lods
mov
xor
sub
sub
sbb
jmp
dec
mov
pop
add
addr16
and
sub
shll
insb
cld
lahf
push
arpl
jno
adc
dec
cmpsl
mov
gs
inc
clc
xlat
or
stos
and
mov
mov
mov
push
jg
fildll
or
xlat
pop
jge
adc
insl
cmp
xor
daa
fdivrl
mov
or
xor
cs
lds
pop
fstl
std
lret
iret
imul
fisubs
clc
roll
push
adc
or
add
repz
sub
or
push
jo
cmp
out
bound
add
pusha
enter
dec
gs
mov
or
addb
mov
bound
xchg
xchg
stos
cmp
cmp
mov
inc
and
cltd
cmp
push
lea
call
xchg
lgs
rcrl
imul
inc
ljmp
insl
inc
ret
sahf
addr16
jp
loop
loop
lods
int
int3
adc
mov
mov
xlat
mov
sub
loop
pushf
mov
popa
push
xor
insl
jo
cmp
mov
popf
mov
xchg
arpl
ljmp
xor
jae
test
in
lret
out
outsb
sbb
adc
lea
mov
jo
test
sbb
inc
pop
jmp
and
xchg
xlat
insb
mulb
mulb
xor
aad
mov
popa
mov
aad
xchg
jge
js
xor
in
into
neg
add
cmpb
mov
adc
or
cmp
movsb
dec
sbb
or
inc
push
pop
std
xorb
rcrb
jecxz
subl
mov
jb
adc
pushf
or
lret
sub
xor
pop
pop
inc
fwait
add
add
sbb
adc
adc
xor
aad
nop
sbb
aam
insl
movsb
lcall
and
lds
roll
add
out
jl
push
xor
xlat
push
or
sbb
insb
call
pop
dec
loope
push
xchg
jg
mov
jmp
sub
xor
add
and
mov
lret
sarb
pop
cmp
in
addr16
jl
push
mov
stc
add
jb
daa
sahf
mov
outsl
dec
sahf
pop
ja
sub
fmull
scas
xchg
pop
pushl
pop
aas
add
clc
dec
adc
ret
pop
jbe
mov
jl
and
fwait
and
push
push
scas
inc
in
inc
push
push
ret
fwait
pop
or
adc
loopne
ret
sti
cmc
sbb
shl
lods
inc
jb
push
mov
inc
dec
adc
mov
arpl
ficompl
add
sbb
sbb
push
add
iret
fcmovnb
xor
cmc
mov
mov
cld
popf
sub
cmp
cmp
push
mov
cmp
adc
pushf
rolb
roll
mov
push
addl
xor
popa
and
lock
outsl
push
xor
inc
in
sub
and
movsb
sbb
subl
nop
jl
pop
push
je
dec
push
mov
sub
int3
out
flds
stc
addr16
push
aam
lea
mov
leave
ss
scas
pop
int
mov
out
dec
cmp
add
dec
imull
test
xor
sub
int
xor
mov
jmp
xchg
sub
pause
in
mov
ror
and
fwait
sbb
push
iret
movsb
inc
lock
cmp
fidivl
xchg
inc
jns
fisttps
hlt
mov
mov
cwtl
pop
mov
bswap
mov
and
movsl
push
popf
or
inc
loope
adc
sub
shrb
cmpsb
jmp
dec
out
cmpsb
adc
fists
or
ja
sarb
cld
pusha
xor
adc
shrl
jnp
mov
enter
push
cmc
dec
mov
into
lret
push
loop
sbb
jae
or
stos
mov
bnd
cmp
pop
insl
push
fimuls
xchg
push
scas
inc
sbb
gs
leave
pop
movsb
xchg
push
leave
ret
jae
mov
lock
outsb
mov
mov
addl
invd
decl
fsubp
jbe
test
jbe
scas
mov
aad
adc
ljmp
jo
mov
push
cwtl
inc
cmp
xchg
lcall
xchg
hlt
add
in
clc
dec
push
sub
addr16
popa
mov
fisubrl
les
mov
pop
and
and
popf
sub
icebp
inc
clc
fmull
mov
ds
les
jg
add
and
fisubl
adc
imul
cmpsb
mov
adc
pusha
mov
rcl
pop
xor
repz
into
cmp
dec
mov
and
and
and
add
aaa
push
js
lock
sub
mov
xor
mov
enter
sbb
sbb
cmp
loop
mov
mov
sub
mov
mov
sbb
mov
outsl
xchg
jmp
mov
and
mov
jo
enter
sbb
push
inc
inc
lcall
outsl
lods
add
rcll
int3
imul
xchg
push
sbb
sarl
push
pop
jecxz
add
lock
push
lcall
inc
rolb
inc
add
adc
mov
add
mov
dec
pop
xchg
inc
xchg
inc
cld
in
adc
pop
push
adc
adc
and
bsf
loopne
mov
xchg
inc
pop
pop
out
sub
cmp
data16
outsl
sysenter
aas
int
nop
push
push
jecxz
ds
jmp
xor
adc
in
in
les
jae
add
sub
pop
sbb
imul
sbb
roll
jmp
pop
xor
pop
cltd
mov
mov
push
fwait
mov
push
aad
sub
es
test
sarb
push
push
aam
xchg
icebp
pop
mov
mov
xchg
outsl
and
lods
cmp
fwait
pop
lahf
insl
mov
mov
or
xor
nop
fiaddl
rcr
mov
gs
mov
lods
sarb
mov
ror
cmp
ret
mov
jg
jne
jo
cmp
adc
xchg
pop
bound
mov
fs
fnstsw
jno
push
mov
stc
dec
in
lret
dec
inc
sbb
cli
inc
loopne
cmp
jg
neg
push
xchg
cmp
dec
adc
xchg
push
ret
lea
dec
movsl
jne
insb
and
lds
idivb
lret
mov
or
pop
inc
jno
xchg
imul
jne
out
test
int3
add
mov
jnp
xor
and
jmp
enter
fs
rclb
xchg
cs
rcrb
push
cmpl
push
dec
cmp
scas
jge
call
out
int3
inc
lret
adc
adc
jne
xor
ficomps
shlb
mov
or
aaa
push
fldenv
in
mov
adc
pop
mov
push
push
push
jo
pshufw
loopne
jno
std
lock
jp
cmp
adc
cld
orl
test
addr16
adc
push
xlat
dec
and
into
fisubs
ret
ror
adc
pop
xlat
loop
das
push
repz
or
jp
sbb
sub
dec
sub
incb
fmuls
xor
push
or
lret
loop
dec
push
xor
je
and
sub
out
xchg
stc
or
or
data16
mov
pop
popf
mov
icebp
ljmp
push
or
mov
out
jmp
movsb
xchg
das
test
fcmove
lea
dec
in
cltd
cmovl
add
add
mov
jg
adc
insl
shrl
imul
ljmp
lods
lods
jge
mov
or
mov
sbbl
decb
cld
stos
cmpsl
push
call
stos
mov
adc
or
add
xor
mov
pop
mov
sbb
loopne
into
incb
inc
fdivrl
cmc
sbb
mov
mov
mov
jae
push
sub
push
push
dec
les
movhps
sbb
inc
dec
cmpsb
repz
popf
lcall
xor
or
xchg
sub
sahf
adc
push
push
cmpsl
enter
jns
jns
push
mov
cmp
enter
cld
daa
fsubr
sbb
pop
bound
push
bound
jg
pop
sbb
jl
push
mov
adc
xchg
jns
mov
jb
shl
scas
push
jecxz
outsb
mov
mov
fs
cmc
repnz
jb
mov
pop
sub
pop
imul
lcall
dec
popf
imul
dec
inc
pop
rorl
push
inc
mov
inc
enter
inc
aad
shrb
jecxz
add
xchg
and
dec
add
icebp
jae
xor
ljmp
sub
xor
pop
or
test
and
ss
adc
loope
fisubrs
jns
out
sub
push
cli
out
movsb
leave
popf
mov
pop
in
fwait
outsl
mov
add
dec
enter
inc
dec
or
jne
or
jb
and
scas
out
dec
lea
sahf
push
add
movsl
xchg
jae
lock
mov
sbb
jno
jge
movsl
xchg
inc
dec
into
hlt
and
mov
xor
sub
scas
dec
lods
xchg
pop
jle
lret
in
in
fists
sbb
rolb
jmp
mov
mov
xchg
lock
mov
lret
xor
mov
test
adc
push
cmp
stos
ret
cwtl
sbb
out
xor
push
sub
mov
in
arpl
lcall
ljmp
fsubs
lret
add
mov
in
cmp
mov
jae
stos
movsb
iret
ds
ss
fcmovnbe
movsb
shll
test
xchg
in
clc
clc
push
int3
fucomi
cmpsl
jg
sbb
xchg
shll
inc
and
sbbb
lods
pop
lods
fsubrs
decl
in
cmpsl
jb
inc
test
jo
roll
in
pop
pop
mov
in
mov
adc
addr16
in
mov
or
dec
push
mov
mov
xchg
call
je
mov
je
push
lock
xor
cli
popf
enter
mov
movsl
or
repz
sbb
xchg
or
push
mov
dec
gs
call
lahf
lcall
rcll
jge
push
iret
jae
ss
mov
push
adc
js
mov
pop
cmpsb
add
inc
mov
cmp
icebp
jecxz
cltd
ja
pop
out
shrl
xchg
fimull
dec
jecxz
mov
enter
pop
fisubrl
mov
push
xchg
mov
stos
pop
dec
mov
int
jge
inc
mov
out
lock
push
jbe
daa
bound
in
pop
mov
mov
pop
mov
sbb
divl
imul
adc
push
push
lock
inc
cmovp
pop
cwtl
cmpsb
repz
in
xchg
dec
popa
or
repnz
lcall
dec
lods
xor
mov
loop
fsubl
stos
in
jae
arpl
stc
ss
ljmp
daa
pop
ljmp
rolb
cmp
lods
push
repnz
inc
push
andb
stos
movsb
xchg
add
test
fs
sbb
sti
cmp
jae
arpl
mov
adc
xchg
iret
fisttpll
dec
insb
jle
outsl
lock
push
inc
testb
adc
lcall
popf
xchg
mov
inc
inc
aad
ret
shll
and
xchg
adc
cmp
lss
adc
pop
or
icebp
sbb
mov
mov
xor
fildl
ret
jecxz
xlat
arpl
movsl
cmpsb
call
aam
enter
cmp
les
cli
xor
ret
inc
xor
sbb
std
aad
jnp
jmp
sub
in
dec
add
dec
xchg
in
mov
lock
xchg
sub
je
sub
aam
jge
lret
dec
out
ficoms
les
xchg
stos
imul
adc
mov
test
xchg
jnp
sub
mov
imul
sbb
sub
mov
cs
cmp
into
call
mov
movsb
dec
in
cmp
cmp
push
ja,pn
xlat
out
sbb
sub
sysenter
xor
clc
or
rorl
lods
gs
loop
mov
adc
repnz
sub
dec
jbe
add
call
add
mov
mov
stos
mov
aam
repnz
rorl
repz
or
jp
xchg
jae
add
inc
scas
mov
jno
mov
jmp
pop
jecxz
scas
bound
sub
sbb
hlt
pusha
shrd
jnp
adc
pop
mov
sub
js
push
addr16
pop
data16
stos
mov
cmp
push
push
pop
lods
andb
xor
hlt
enter
and
jge
cmp
xchg
idivl
inc
shlb
or
xchg
mov
and
sub
sbb
call
lcall
inc
out
and
push
mov
in
mov
cmp
mov
push
jo
repnz
icebp
into
inc
mov
mov
addl
cmp
lahf
and
sbb
pusha
pushf
push
mov
xor
out
insl
pop
scas
cmpsb
das
jge,pt
arpl
mov
mov
inc
test
push
inc
add
mov
ljmp
mov
mov
pop
jmp
dec
adc
insl
add
adc
fstps
fcompl
ss
cmp
cmp
daa
xor
fsubr
inc
push
xor
scas
jno
aad
pop
push
test
icebp
lea
outsb
xchg
adc
pop
mov
pop
idivb
iret
xchg
and
push
cmpb
cmpsb
mov
add
pop
loop
scas
mov
cwtl
outsl
jecxz
roll
dec
ss
pop
fs
add
adc
add
and
shr
jmp
cld
and
cltd
mulb
fs
sub
bound
iret
and
jmp
aaa
xchg
xor
jbe
fstps
adc
rcrb
js
jmp
gs
sbb
int3
jns
xchg
mov
mov
sbb
cmp
popa
daa
xor
out
lea
aaa
jmp
das
lret
dec
push
jo
cmp
fld
lods
fwait
loop
mov
out
adc
pusha
mov
mov
fimull
push
xor
jae
lds
dec
dec
in
mov
mov
aam
lea
inc
mov
mov
lock
add
inc
push
inc
xor
xchg
cmpsb
loopne
add
cvtpd2ps
xchg
addr16
xchg
and
enter
adc
les
stos
or
imul
mov
jmp
mov
mov
hlt
ret
pop
leave
sub
loope
fisubrs
stc
mov
adc
lahf
enter
mov
in
hlt
cmovae
ss
lret
insl
mov
mov
xchg
and
dec
mov
add
fidivl
or
inc
movsb
or
push
mov
loope
scas
and
pop
clc
pop
jae
lcall
push
ds
pop
mov
adc
mov
pop
xchg
mov
out
jo
jbe
sbb
andb
cmovl
push
pop
repz
mov
fldenv
ljmp
shl
inc
mov
into
mov
fisubrl
push
dec
insl
test
xchg
or
cwtl
mov
subl
cld
or
incl
pop
xchg
mov
pushl
nop
std
shll
xchg
fsubl
mov
pop
ss
jp
cmp
ret
in
rcll
shlb
stos
in
lcall
xchg
xlat
les
and
sbb
or
push
dec
sub
or
mov
or
dec
int3
xchg
je
lret
dec
outsl
jae
jb
enter
or
ljmp
fwait
loopne
nop
pop
add
mov
push
add
stos
pop
cmp
xor
js
nop
and
je
push
cld
pop
cmp
jge
repz
cmp
sbb
sub
or
adc
shrl
mov
mov
fwait
xlat
push
push
sub
mov
cltd
push
sbbl
sub
or
sbb
pop
aam
or
into
push
adc
loopne
lods
jnp
nop
aam
dec
mov
mov
push
push
mov
mov
js
cmp
push
lods
mov
jb
mov
imul
dec
aas
xchg
mov
mov
insl
scas
inc
sbb
jbe
sub
push
shrb
repz
stos
jecxz
stos
scas
pop
and
mov
rcll
mov
cmp
cld
cltd
test
fdivrs
mov
aaa
arpl
mov
stos
dec
dec
jno
cli
movsb
in
ror
jae
sahf
push
lcall
imul
dec
pop
mov
jae
xchg
jb
cmpl
lahf
mov
adc
shll
subl
bound
sbb
sub
pop
bound
push
pop
test
stos
fbld
in
call
xchg
mov
mov
loope
icebp
dec
mov
adc
add
fyl2xp1
mov
loopne
mov
data16
mov
sti
fs
nop
fidivl
mov
aas
jae
add
pop
test
cmp
jo
push
ret
lret
int
mov
loope
movsl
add
sub
cmpsl
clc
loop
sbb
inc
pop
sub
jnp
iret
int3
leave
icebp
shlb
repz
mov
popa
adc
ss
cmpsl
xlat
push
inc
adc
mov
popa
inc
ljmp
loop
and
shl
xchg
fs
adc
or
jno
test
bts
xchg
adc
adc
pop
ret
xchg
lods
ficoml
mov
insl
adcb
js
je
jge
fs
popa
mov
push
hlt
icebp
pop
mov
or
test
push
jno
push
xchg
fs
mov
mov
movsl
mov
sbb
xchg
or
jb
sub
ffreep
xchg
jbe
into
pop
inc
mov
dec
in
lret
and
dec
divl
cmpsl
dec
or
lahf
bound
insb
xchg
dec
push
lods
mov
out
flds
lods
sahf
adc
cmp
es
sti
sub
xor
inc
insl
jbe
rcr
movsb
lods
xor
shll
jl
mov
inc
inc
xor
or
or
dec
push
mov
jl
lret
xor
dec
cltd
roll
or
sti
mov
into
dec
pop
out
mov
decl
adc
push
lret
gs
aam
jbe
xor
mov
push
inc
mov
xchg
mov
push
mov
dec
roll
xlat
sbb
and
loopne
aad
daa
iret
xlat
push
cmp
push
hlt
xchg
and
or
xlat
pop
mov
cwtl
jnp
xor
adc
jnp
xchg
sub
ja
mov
mov
sbb
cs
repnz
adc
mov
data16
mov
and
repnz
fcoml
xchg
jbe
mov
shl
fwait
inc
addr16
vorpd
inc
lea
pop
lds
jae
add
jmp
add
sbb
sbb
xchg
cli
test
test
neg
cmp
pop
repz
mov
dec
out
pop
in
pop
repz
mov
xchg
jae
filds
loop
and
idivl
fisubl
std
xor
movsl
stc
xor
mov
jle
push
in
movsl
mov
inc
aaa
stos
cli
fwait
cmpsl
mov
add
fs
popf
cmp
rclb
loop
popa
shll
fldcw
gs
jae
sub
pop
mov
aas
clc
and
add
xchg
mov
push
mov
cli
fdivs
xchg
lret
pop
push
lea
xchg
cmp
mov
and
insl
loopne
mov
test
jmp
inc
rol
out
cmpsb
add
nop
push
push
inc
pop
loopne
sbb
push
xchg
leave
xchg
pop
pop
mov
inc
sub
out
dec
and
jns
outsb
std
sub
jl
mov
xchg
mov
fstps
pusha
inc
adc
lahf
cmp
rcrb
loope
mov
push
jmp
cli
mov
rclb
mov
sbb
fisttpl
repz
adc
sub
fisubs
cltd
shr
sbb
push
in
dec
fisubl
xchg
outsl
push
jne
out
bound
repz
cmp
pop
iret
mov
mov
cli
adc
dec
or
mov
in
jmp
adc
pop
inc
push
xchg
sbb
or
jge
mov
mov
andb
shlb
sbb
lcallw
clc
add
xchg
stos
push
mov
cmovl
mov
jle
push
in
sbb
lods
test
leave
out
jnp
je
mov
out
push
andb
jnp
adc
je
or
sub
push
lock
fdivrs
inc
and
sbb
stc
mov
cmp
repnz
xchg
push
lods
out
mov
dec
test
push
lret
stos
xchg
imul
jle
out
loope
push
lret
ja
and
lret
mov
scas
push
push
inc
xor
pop
gs
sarl
inc
gs
fs
pop
mov
inc
xchg
out
mov
inc
ffreep
in
jle
aad
out
iret
ret
cli
sub
xlat
jmp
sbb
dec
cmp
xor
sub
xchg
clc
pop
sub
int3
add
xchg
inc
and
lret
mov
int
mov
or
dec
mov
pop
pop
je
cmp
pop
sub
xor
pop
inc
repz
out
or
sbb
sub
inc
cmp
sahf
or
sbb
aaa
into
in
sub
lods
pop
loop
scas
or
cmpb
in
ds
xchg
std
dec
insl
arpl
ljmp
stos
test
scas
sub
repz
ljmp
xchg
and
push
and
and
sub
scas
sub
xchg
inc
mov
xor
xor
je
imul
xor
mov
imul
xchg
jnp
aad
sbb
push
jbe
adc
mov
or
roll
or
sub
mov
push
icebp
mov
xor
push
jne
loop
pop
mov
hlt
pop
jge
sti
ds
loope
in
cwtl
les
xchg
jo
out
les
fucomip
sbb
es
shll
lar
pushf
mov
cld
jnp
or
ss
in
adc
inc
dec
mov
mov
push
xchg
mov
addr16
inc
sbb
mov
lea
jmp
cltd
cld
test
and
mov
and
andb
xor
mov
add
xor
jecxz
or
mov
stc
pop
ficoml
jb
scas
jp
pop
mov
or
mov
rclb
in
fisubrl
loope
out
in
ret
dec
pop
fbstp
pushf
push
and
les
cmpsl
or
pop
stc
inc
jb
pop
cs
loope
xchg
leave
js
scas
xchg
repnz
lcall
mov
ss
sub
imul
seta
call
xor
mov
dec
shlb
outsb
jns
push
mov
cs
cmp
add
gs
sub
test
pop
mov
sub
sbb
idiv
push
mov
adc
pop
iret
mov
or
cwtl
ljmp
push
sub
int
pop
ja
dec
aas
add
lods
xchg
dec
jnp
rcll
pop
pop
loopne
fnsave
je
test
jno
int3
in
popf
sahf
cwtl
js
xor
popf
adc
sbb
push
hlt
subl
and
into
mov
sub
and
mov
xchg
bound
add
xor
pop
xor
pop
mov
cmp
sub
adc
inc
pop
xchg
pop
sahf
shlb
or
lret
rcrl
adc
sbb
mov
inc
or
leave
scas
ljmp
sbb
xor
inc
inc
mov
ja
data16
test
push
sti
and
xlat
outsb
jmp
adc
lods
inc
inc
jne
pop
sub
imul
push
ror
push
cmp
dec
sti
sub
and
das
aam
clc
outsb
jae
pop
outsb
sub
mov
sbb
push
lret
xor
sahf
and
into
pop
mov
pushf
add
inc
out
or
call
mov
sbb
in
fnsave
xchg
cmp
cmp
jns
cmp
hlt
mov
xor
clc
cmc
cmpsb
xchg
in
sbb
jno
sti
push
pop
fs
loope
sbb
gs
dec
filds
fistpll
push
outsb
aad
cmpsl
pop
cmpsl
fbld
dec
sbb
jb
ret
test
mov
pop
add
dec
add
sbb
xor
push
add
je
aad
stc
dec
adc
movsb
test
mov
mov
mov
lcall
roll
aaa
pop
or
mov
sub
hlt
inc
fwait
int3
bswap
and
das
jg
gs
mov
aas
push
mov
ljmp
popf
pop
lods
adc
dec
pop
sbb
mov
loop
xor
ljmp
and
dec
add
inc
inc
lds
pop
pop
dec
inc
xchg
cmp
or
cmc
rorl
int
mov
jae
push
pop
enter
jbe
xor
insl
fnstcw
sub
inc
popf
and
icebp
add
add
movsl
ret
dec
mov
icebp
and
dec
shlb
lea
fcmovnu
pop
call
scas
adc
dec
aad
test
pushf
call
test
and
xchg
sti
call
xchg
push
pop
or
jecxz
push
xchg
movsb
sbbb
dec
push
pop
lods
outsl
pusha
or
pop
ljmp
push
or
scas
leave
stc
sub
jnp
out
pop
push
cmp
ret
sbb
jb
das
fisubl
sbb
lret
in
arpl
mov
push
out
sub
popl
scas
ljmp
bound
sub
jg
mov
mov
mov
jge
fbstp
jno
fcoms
jno
jne
push
pop
fldt
test
mov
decb
lods
test
inc
sbbb
dec
sub
lods
cmp
push
cmp
mov
or
xchg
pushf
xchg
jnp
add
fsubrp
push
cld
dec
push
adcb
jbe
adc
rorb
and
or
sbb
insl
insb
popf
inc
ds
fmul
dec
ret
jle
push
outsl
loopne
ljmp
int3
or
mov
inc
inc
outsl
push
aad
jno
out
test
pop
jmp
test
mov
leave
push
ds
pop
out
pop
outsb
ds
push
adc
into
or
xor
cld
negl
mov
sub
push
xor
adc
call
inc
lret
ret
dec
add
inc
push
and
ljmp
fldz
jnp
inc
gs
lahf
pop
inc
ss
fisttps
mov
test
mov
push
cli
mov
in
pushf
xor
ret
cmpsb
or
mov
test
repnz
push
in
or
das
sbb
xor
and
imul
ja
movd
mov
divb
rcrl
in
out
shrb
add
inc
mov
mov
push
rcll
xchg
and
adc
fidivl
xchg
ja
stos
popf
mov
cmp
pop
ret
cmpl
orl
pop
sbb
cmp
xchg
xchg
jne
ret
arpl
or
xchg
loopne
sub
shlb
pop
andl
ret
aaa
psubq
push
dec
mov
mov
mov
hlt
insl
data16
stos
fstp
push
out
es
pop
sahf
std
bound
movsl
mov
add
mov
fsubl
add
ja,pn
or
pop
pop
and
mov
fisttpll
iret
pop
inc
into
mov
mov
push
lock
ds
inc
ss
out
stc
push
das
movb
xchg
push
mov
in
pop
imul
test
jb
xor
sbb
sahf
ficoml
mov
add
repnz
push
jbe
shr
cmovge
test
or
mov
push
fwait
cs
or
popa
pop
in
hlt
pop
pop
mov
in
mov
in
jno
sub
xor
xor
dec
leave
dec
icebp
or
data16
mov
push
inc
rcr
and
je
sbb
sub
mov
pop
lods
pop
jl
orb
movsb
cwtl
cmpsb
std
xor
nop
xchg
mov
and
fistl
imulb
loopne
adc
fs
sbb
jb
cli
mov
sub
gs
xchg
bound
pop
mov
add
pop
pop
lds
sahf
adc
xchg
push
addr16
std
fldpi
push
fdivl
and
loop
scas
push
mov
pop
out
pushf
cmpsb
movsb
adc
imul
repz
adc
in
test
arpl
mov
adc
clc
or
push
or
scas
inc
dec
cmp
test
nop
imul
lret
sub
dec
and
lea
mov
inc
sub
inc
dec
xor
lea
imul
dec
add
dec
call
call
call
inc
or
lea
movzbl
call
add
inc
sub
sub
add
lea
movzwl
inc
call
call
inc
push
inc
call
add
or
call
lea
mov
add
dec
dec
inc
xor
lea
mov
pop
dec
dec
sub
add
dec
pop
add
lea
pop
movzbl
inc
inc
inc
pop
inc
xor
lea
mov
inc
dec
sub
sub
pop
and
lea
pop
mov
dec
mov
dec
dec
call
dec
and
lea
mov
ret
dec
dec
push
dec
inc
push
sub
lea
push
mov
inc
push
dec
add
push
add
xor
mov
lea
imul
push
inc
ret
push
inc
inc
inc
add
lea
mov
dec
dec
inc
add
or
lea
mov
inc
dec
add
dec
sub
lea
inc
inc
add
dec
sub
lea
imul
inc
dec
add
inc
add
lea
mov
inc
inc
jmp
xor
movzbl
lea
imul
inc
dec
inc
add
sub
lea
inc
mov
inc
mov
sub
dec
dec
and
lea
imul
cmp
jb
add
xor
dec
inc
mov
inc
and
mov
lea
imul
inc
add
inc
dec
add
add
lea
mov
imul
add
cmp
jb
inc
mov
dec
dec
xor
or
lea
xor
imul
dec
pop
inc
inc
test
jbe
add
or
lea
mov
inc
dec
add
dec
xor
lea
mov
dec
dec
dec
dec
add
lea
inc
movzwl
dec
inc
inc
inc
sub
and
lea
mov
mov
inc
dec
movzbl
inc
inc
add
add
lea
and
mov
inc
mov
add
dec
mov
dec
sub
mov
lea
mov
mov
dec
add
dec
add
and
lea
dec
jne
mov
mov
add
dec
dec
add
or
lea
imul
dec
inc
inc
mov
sub
and
lea
movsbl
add
add
add
dec
mov
add
lea
test
jbe
imul
dec
inc
dec
dec
xor
lea
mov
dec
dec
add
inc
and
lea
mov
inc
inc
add
dec
inc
sub
lea
and
movzbl
add
mov
dec
add
movzbl
dec
xor
add
lea
movzwl
and
dec
inc
mov
dec
add
movzbl
sub
jmp
dec
dec
sub
lea
mov
inc
add
add
inc
sub
lea
mov
pop
ret
push
add
inc
inc
dec
xor
lea
imul
sub
sub
dec
dec
add
xor
lea
mov
inc
inc
add
inc
or
lea
mov
dec
add
dec
inc
and
lea
movzwl
sub
push
add
dec
push
add
sub
push
lea
call
mov
push
inc
add
pop
inc
inc
mov
add
lea
push
imul
sub
pop
add
inc
cmpb
je
sub
xor
lea
mov
dec
inc
sub
dec
sub
lea
imul
dec
inc
inc
dec
xor
lea
mov
inc
dec
dec
int3
inc
or
lea
mov
dec
inc
inc
inc
add
lea
mov
dec
inc
inc
dec
add
lea
movsbl
inc
sub
dec
inc
or
lea
ret
movzbl
add
pop
inc
ret
push
sub
push
dec
sub
push
lea
push
imul
push
inc
inc
push
inc
call
inc
push
add
lea
xor
mov
inc
inc
add
add
mov
inc
add
mov
lea
imul
test
je
inc
dec
jmp
inc
add
xor
lea
imul
dec
dec
mov
inc
add
xor
lea
imul
add
inc
sub
repnz
sub
add
add
lea
jmp
mov
inc
sub
inc
inc
xor
lea
imul
sub
add
dec
inc
pop
pop
ret
push
and
lea
mov
dec
inc
inc
add
sub
lea
imul
add
dec
sub
dec
or
lea
mov
inc
dec
dec
dec
add
lea
imul
inc
inc
add
dec
pop
ret
sub
and
mov
lea
mov
mov
dec
dec
mov
inc
sub
mov
xor
lea
xor
mov
add
mov
dec
inc
inc
dec
or
lea
mov
inc
sub
cmp
jb
inc
push
inc
xor
push
lea
movzwl
push
inc
add
mov
dec
add
xor
and
lea
xor
mov
add
xor
sub
sub
push
inc
add
xor
lea
mov
dec
add
mov
inc
add
movzbl
sub
lea
mov
dec
add
dec
inc
add
add
jmp
fldenv
inc
push
repnz
and
scas
js
sbb
orb
rcrb
mov
xchg
or
test
shrl
xor
scas
dec
fisubrs
and
fistl
pop
scas
or
cld
fdivl
mov
aas
imul
xchg
push
test
aas
inc
add
hlt
outsb
gs
dec
into
loope
les
scas
dec
cld
xor
sarb
jo
ret
imul
xchg
sbb
sub
lods
cmp
loope
xchg
adc
mov
jnp
lahf
out
insl
loope
mov
adc
aam
fldl
jb
xor
or
mov
pop
dec
iret
dec
sbb
fcoms
lret
add
mov
xor
pop
cmpsb
scas
jnp
add
outsb
mov
negb
xor
arpl
outsb
add
lods
mov
mov
iret
nop
sub
in
mov
daa
bt
mov
dec
adc
lcall
mov
mov
jno
xchg
out
xor
xchg
cltd
sub
loopne
xor
fildl
cmpsl
dec
test
lods
scas
std
stos
jl
sbb
sub
lret
in
jb
inc
rorb
lds
adc
mov
loop
scas
or
aaa
adcb
xchg
inc
daa
mov
xchg
inc
hlt
or
fnsave
clc
mov
ret
aad
cmp
daa
push
aas
cmp
jp
icebp
pop
mov
cmpsl
mov
scas
sbb
lahf
fistl
imul
sbb
or
mov
jl
push
dec
dec
les
jle
or
xchg
out
in
andl
popa
ljmp
inc
mov
dec
fwait
mov
sbb
pop
test
fcompl
sbb
sets
pop
cmp
push
stos
stos
idiv
pop
mov
xchg
adc
into
lea
sti
iret
pop
inc
pop
inc
dec
xor
das
lods
jb
mov
subb
iret
or
enter
loope
je
imul
add
stos
inc
inc
pop
dec
jb
int3
jne,pt
inc
push
mov
orl
mov
mov
jl
add
idivb
dec
mov
repnz
push
cmp
adc
pushf
scas
cmp
in
dec
add
jb
fdiv
dec
add
mov
orl
mov
jmp
adc
test
mov
add
xchg
test
out
pop
ja
jnp
and
shl
adc
sbb
jge
mov
fnsave
pop
xor
or
inc
out
adc
das
and
cwtl
sub
pop
mov
das
insl
add
mov
xchg
pushf
loopne
mov
iret
cmp
lcall
and
pushf
jno
subb
dec
imul
pop
mov
dec
hlt
call
mov
mov
test
enter
ds
rorb
inc
mov
inc
mov
addr16
fld1
out
adc
xchg
cmp
adc
test
push
xchg
roll
adc
pop
icebp
cmpsb
inc
xor
imul
out
mov
jl
xor
pushf
stos
repz
ficoms
arpl
popf
and
in
lcall
adc
call
addr16
or
adc
push
sbb
popf
push
push
add
es
lods
xor
jo
or
fisubs
xchg
xchg
xchg
call
ss
cmp
mov
cwtl
incb
jg
pop
imul
inc
stos
aad
inc
loop
sub
sub
sub
jns
mov
jecxz
sub
mov
js
hlt
movsl
sarb
lock
leave
cmpsb
ds
cmp
dec
mov
pop
mov
add
arpl
mov
shr
sub
xchg
cmp
pushf
mov
pop
xor
add
cld
neg
pop
xor
xchg
iret
stc
out
mov
insl
out
inc
inc
bound
imul
repnz
inc
aad
cmp
and
test
fldcw
or
push
push
fwait
popa
mov
in
jo
dec
shlb
out
test
jg
xor
mov
mov
jge
ret
mov
push
adcb
aaa
pop
subb
lret
roll
push
and
mov
lahf
sti
bnd
add
sti
dec
push
ss
or
jae
mov
add
cmc
popf
fldt
repnz
scas
adc
sub
fs
fs
xor
mov
cmp
rcr
enter
into
mov
sar
add
mov
sbb
cmp
sub
xchg
aas
mov
xorl
mov
inc
ss
pop
loop
cmc
movsl
fcoml
gs
jne
xchg
sahf
rcrb
pop
inc
push
idivb
test
xor
repnz
ja
pop
scas
cltd
das
cld
cmpsl
mov
mov
movsl
xor
addr16
data16
stc
push
nop
lea
pop
mov
push
test
jp
sub
add
repnz
sbb
xor
xchg
int
test
dec
movhps
push
mov
cld
hlt
scas
dec
in
leave
out
mov
sub
sub
mov
add
inc
adc
andb
sbb
jne
arpl
and
mov
fisttpl
lret
cld
mov
in
insl
and
test
pop
and
sahf
sbb
or
loope
stc
jnp
or
cmp
push
js
or
arpl
sysret
dec
jge
filds
cmp
fcoms
dec
sarl
pop
test
in
lods
aas
inc
push
lock
out
pushf
xchg
gs
sub
jecxz
in
lahf
adc
push
dec
scas
xor
call
adc
lret
dec
orb
dec
notb
or
cmp
or
dec
faddp
or
dec
in
or
je,pn
add
scas
xor
mov
cmpsl
push
ret
lahf
dec
push
xchg
pop
lcall
sub
xor
sar
mov
add
popf
mov
dec
xlat
add
inc
sub
cmp
pop
and
pop
push
jle
jmp
add
add
mov
mov
dec
in
pop
aas
jae
dec
mov
xor
and
mov
mov
push
jnp
xchg
jns
out
inc
mov
cmpsb
imul
loop
lds
or
inc
sub
repnz
dec
outsl
jbe
pop
or
xchg
mov
xchg
shl
sbbb
loopne
mov
cmpsl
clc
les
fwait
loopne
lods
insb
das
jg
mov
fstl
daa
dec
outsl
test
in
mov
lds
fisttpll
adc
jne
mov
mov
aaa
push
cmpsl
stc
addr16
int3
sbb
test
je
jnp
in
mov
mov
sarb
pop
fdivrs
cmp
lret
xchg
mov
stc
sbb
out
pushf
popf
aad
inc
sarb
cmp
loop
xchg
mov
imul
push
out
mov
jae
lret
aad
push
dec
mov
test
mov
sub
push
cmpsb
and
push
sbb
gs
adc
dec
in
sti
mov
pop
das
sub
aam
sbb
pop
pop
cmpsb
sbb
test
bound
xor
shlb
mov
xchg
mov
mov
loop
fidivrl
sahf
push
dec
add
dec
ja,pn
frstor
inc
scas
xchg
push
pop
jl
mov
fimull
ljmp
mov
in
inc
mov
into
mov
inc
push
sbb
insb
loopne
arpl
jno
dec
stos
gs
arpl
inc
test
mov
mov
inc
xchg
dec
inc
jmp
or
or
addr16
mov
cmp
xchg
sbb
adc
out
outsb
ficompl
cmpsb
in
jno
stc
jb
mov
xchg
mov
xor
lods
test
test
xchg
jg
xchg
or
or
movsb
sub
popa
push
xor
mov
hlt
loopne
clc
shrl
popa
out
es
cwtl
xchg
mov
leave
xor
sahf
push
push
xor
sub
nop
lcall
adc
push
pop
jecxz
fdivrl
mov
cmp
cld
out
sbb
scas
sbb
rorl
mov
cmp
inc
adc
es
ds
dec
loope
in
ficoms
mov
inc
test
in
les
div
lea
adc
sub
ja
push
sub
test
inc
in
jno
fs
xchg
xor
movsl
mov
gs
sbb
push
ja
mov
mov
xor
aad
sbb
or
push
adc
xor
rcrb
push
or
cmp
les
and
xchg
push
mov
sbb
sbb
fidivl
movsb
cmp
pop
and
pop
cli
cmp
fcmovu
mov
jge
negb
sub
add
or
es
imul
stos
and
jmp
ds
jge
lret
lret
and
into
nop
inc
out
aas
rcrb
jg
insl
shlb
hlt
rcrl
inc
sub
pop
adc
adc
je
out
sbb
fsts
shlb
push
loop
sbb
mov
jp
dec
pop
sub
pop
mov
es
mov
rcrb
mov
mov
or
push
fcmovu
dec
cwtl
dec
fbld
pushf
push
sub
jmp
call
leave
add
push
mov
pop
movsb
jecxz
or
out
push
push
fdivrl
fsts
cli
mov
sbb
adc
add
mov
pop
xchg
stos
aas
repnz
ja
stc
inc
fisubrl
cmp
popa
xchg
dec
lods
and
push
ficoms
or
fdivrs
arpl
xchg
and
cmp
cltd
mov
add
mov
pop
inc
adc
cmp
mov
mov
lods
mov
cmp
dec
loop
cli
adc
pop
lea
and
popa
lds
adc
add
xor
lret
les
sbb
push
jge
mov
pushf
mov
pop
aas
pop
ja
jnp
fsubrl
dec
jmp
insb
cli
xchg
ja
cmp
dec
push
jecxz
push
js
dec
push
cli
call
gs
roll
sbb
dec
or
jne
and
nop
addl
jl
cmp
or
sbb
and
cmp
mov
push
in
push
data16
jl
nop
xorl
fmuls
stos
push
and
mov
leave
pusha
notl
mov
mov
popa
xchg
subl
dec
mov
int3
lock
or
push
dec
jo
cmp
or
loope
shll
mov
idiv
inc
xchg
dec
push
inc
inc
dec
outsl
daa
dec
fwait
adc
jnp
pop
ss
xor
out
mov
jno
dec
mov
jl
pop
cmp
xor
je
xchg
lods
aaa
cltd
sbb
mov
cmp
xchg
jno
cmp
popa
mov
test
and
dec
xchg
mov
pop
loop
imul
inc
sub
insb
test
mov
mov
fistpll
stc
xor
jl
dec
mov
les
leave
dec
xor
bound
pop
dec
or
sub
add
nop
push
push
and
pop
mov
ja,pn
test
mov
loope
mov
or
cwtl
push
mov
nop
jno
imul
leave
test
das
outsb
cltd
inc
xor
inc
testb
and
imul
mov
cmp
lret
loope
push
xor
mov
jb
int
mov
xchg
mov
leave
cmc
subl
es
xlat
sbb
xchg
js
xchg
mov
in
push
stos
fildll
dec
cmp
jecxz
pop
jo
clc
movsl
xor
mov
sub
test
adc
dec
fldl
repz
sub
sbb
pop
fisubrl
ljmp
pop
jmp
jle
mov
inc
ljmp
mov
pop
dec
xchg
mov
xchg
repnz
mov
dec
push
jb
fnsave
cmpsl
and
add
dec
call
dec
sahf
test
addl
jge
xchg
push
hlt
mov
mov
adc
dec
mov
jmp
xchg
jne
lret
cmp
dec
imul
rolb
gs
out
xor
sbb
icebp
pop
push
std
adc
dec
dec
leave
pop
or
popl
cmp
int
jge
fs
or
dec
lret
ret
push
adc
iret
push
icebp
push
jge
shll
pop
mov
xchg
xchg
lret
icebp
in
dec
and
sub
jns
lret
sti
xor
push
mov
in
mov
movsl
jmp
mov
sbb
inc
fnstsw
cltd
insb
mov
mov
mov
inc
pop
scas
addl
fistps
sbb
stc
pop
mov
xchg
jecxz
dec
fidivrl
fidivrl
adc
cltd
sahf
out
sbb
xchg
movsb
inc
push
mov
sub
pushf
mov
aas
sahf
jl
sbb
stos
cmp
and
cwtl
mov
mov
stc
fwait
add
cs
iret
out
sbb
adc
sub
ret
xchg
adc
add
add
mov
ficoms
mov
data16
add
mov
jmp
and
jg
iret
sub
test
mov
das
hlt
push
lods
imul
pop
dec
out
add
push
jb
xchg
arpl
xor
dec
insl
mov
jo
data16
push
mov
loope
cs
fisttpl
lcall
sub
clc
add
sbb
fld
sahf
pop
pop
test
stos
mov
shld
sarb
xchg
cmpsl
jg
cmpsb
push
mov
pop
lret
xlat
xchg
dec
decb
mov
jno
add
ret
daa
mull
into
mov
cmp
add
mov
aam
das
lret
or
lock
inc
in
sub
inc
adc
adc
cmp
and
les
adc
add
inc
inc
add
jbe
pop
cmp
mov
lret
and
nop
lret
fwait
xchg
cmp
mov
dec
push
xchg
movsb
in
in
or
mov
jnp
mov
jg
ss
cmp
jb
xchg
sbb
sub
xor
add
cmpsl
jno
adc
jl
rcrl
nop
fsts
jg
fiaddl
jb
jecxz
jb
sbb
push
out
xchg
cmp
test
aas
pop
testb
cmp
mov
stos
repz
fwait
xchg
xchg
fcomp
mov
sub
je
lahf
cmpl
leave
push
push
into
xchg
mov
xor
stos
cwtl
loopne
pop
fistps
lcall
cmp
into
lret
pop
arpl
fldcw
xchg
divb
int3
clc
inc
xor
ffreep
cltd
mov
aam
gs
sub
adc
rcr
test
lock
mov
mov
push
pushf
lahf
xchg
rolb
xor
jns
call
icebp
push
fsubl
push
push
or
mov
jno
mov
dec
or
xchg
ffree
inc
cmp
popa
dec
fwait
pusha
adc
dec
testb
mov
inc
push
xor
xor
pop
mov
fnsave
int3
call
outsb
roll
sti
cs
daa
stc
inc
ja
mov
int3
cli
iret
push
flds
int
les
ljmp
sbb
out
data16
dec
fwait
mov
data16
xchg
adc
push
sbb
jae
test
pop
cmp
or
sbb
ss
call
ret
fmuls
bound
std
pop
push
iret
and
jbe
bound
dec
and
sub
push
lds
cwtl
sub
sbb
idivl
movsl
cs
dec
fisubrs
out
out
mov
sbb
xor
stos
inc
cmp
add
imul
sbb
or
and
scas
out
xchg
xchg
nop
and
inc
cltd
adc
push
push
fdivr
xor
sbb
std
pop
mov
mov
rcr
aaa
sub
inc
cmpb
push
or
mov
fcomps
mov
les
pop
xor
movsl
stos
int3
test
push
and
xchg
lods
rcrb
in
inc
aad
cwtl
mov
rcrb
jb
sti
dec
repz
ja
dec
mov
pop
mov
aas
adc
cmpsb
out
sbb
lret
mov
hlt
xlat
je
fisubrs
jb
push
and
ja
adc
adc
out
bnd
jg
shlb
xchg
add
movsl
xor
xchg
inc
push
or
aas
imulb
mulb
xor
rcll
movsl
or
xor
std
or
rcrb
ret
int3
call
jmp
push
jnp
push
lahf
jo
cmp
rclb
inc
enter
pop
or
shrl
inc
sub
dec
mul
jb
aas
pop
push
pop
push
pop
in
pop
repz
and
mov
adc
cli
inc
xchg
jnp
pop
xchg
xor
adc
pusha
movsb
dec
push
int3
xchg
pop
mov
int3
cli
mov
cmp
mov
push
mov
xor
popa
pop
fsts
or
push
mov
sub
cmp
shlb
jmp
pop
pop
ljmp
repnz
mov
sub
flds
mov
nop
and
btc
pusha
cmc
lret
jl
shlb
mov
sub
int
mov
imul
pop
pop
push
push
push
lods
xor
movsl
add
mov
and
xor
push
loopne
sub
pushf
jnp
and
repz
loop
shrl
sbb
xlat
pop
cmc
jg
aam
fwait
sbbb
dec
arpl
push
mov
push
xchg
daa
or
sbb
add
push
mov
add
shrl
push
add
jl
inc
cmc
cltd
cli
aad
fcompl
pop
and
fisubrl
stc
push
xor
loop
sbb
stos
add
dec
enter
subb
adc
test
out
loopne
mov
cmp
sub
xchg
and
xor
jns
in
sub
xlat
out
orl
push
scas
cmc
push
sbb
xchg
adc
scas
pop
hlt
mov
add
leave
nop
aad
insb
inc
jb
daa
mov
out
lret
inc
lds
lods
ja
jge
mov
ret
movsl
bts
mov
je
inc
lcall
mov
add
shl
addl
lret
test
addr16
jb
nop
add
insl
loope
aam
sbb
xlat
rol
xor
push
mov
sub
ljmp
inc
inc
jb
or
lods
int
xlat
xchg
sub
loopne
jo
lcall
or
movsb
and
jl
loopne
stos
out
xlat
mov
cmpsl
push
stos
clc
pushf
or
cmc
push
sub
movsl
cmp
add
adc
cmp
cmpsl
xor
mov
rcl
xor
mov
add
in
mov
jmp
adc
int
cmp
popa
lock
push
lods
sbb
cmp
les
xor
or
pop
cli
pop
sar
mov
out
push
pop
stc
shrb
clc
xchg
jmp
into
xchg
or
cwtl
jae
jb
outsb
mov
out
jg
in
cmc
dec
xlat
dec
or
xor
loop
cmp
sbbl
mov
ret
inc
sbbb
aam
fs
mul
or
and
or
xchg
sub
mov
out
inc
or
sbb
or
and
fcomp
ret
adc
pop
fdivr
sbb
mov
fsubrs
xor
xchg
sbb
xor
push
pop
add
test
mov
mov
pop
in
sbb
int
push
incb
fucomp
mov
jnp
mov
xchg
adc
rclb
mov
dec
in
fst
iret
int
xor
mov
cs
jg
adc
test
add
mov
cmc
fcom
mov
jnp
xchg
repnz
and
mov
popa
jns
in
decl
lret
cld
cmpsl
out
popf
ds
mov
es
push
push
nop
pop
jb
mov
pushf
mov
and
xor
jg
jle
xchg
in
call
movsb
fsubrl
and
cmc
dec
jb
xchg
cs
cmpsl
cmp
gs
adc
in
ret
decb
jne
leave
mov
testb
out
xchg
pop
cmp
fstp
mov
mov
dec
in
fucomp
push
gs
hlt
push
cmp
jecxz
into
adc
add
mov
jg
pushf
lods
ss
inc
mov
ja
mov
bound
fwait
mov
and
push
ljmp
xor
aam
outsl
mov
dec
mov
and
lods
les
mov
xchg
jno
imul
sti
and
call
jae
and
mov
fstp
in
mov
jbe
push
mov
and
cmp
in
shr
xor
int
xchg
push
movsl
adc
neg
enter
repnz
sub
imul
pop
sbb
inc
ret
lds
jne
fnsave
push
xlat
xlat
jl
adc
mov
pop
shlb
ret
adc
orl
jge
sub
jp
cmp
aam
dec
insb
and
cmpsb
pop
fwait
mov
nop
push
xor
std
js
out
inc
mov
outsb
inc
sarb
push
shrb
aam
pop
adc
dec
pop
aam
out
jmp
adc
push
inc
xchg
dec
xor
jg
cmpsl
scas
mov
shll
cs
lret
sub
scas
les
xchg
mov
std
in
dec
aad
sub
fadd
mov
mov
inc
dec
arpl
pop
aad
cmp
sub
test
repz
cs
lret
mov
xchg
lret
test
pop
and
and
inc
stc
popa
sbb
jbe
es
pushf
cmpl
and
imul
mov
jns
cltd
in
and
pop
jae
jp
dec
pop
scas
ds
nop
in
rolb
nop
cmp
sbb
lret
icebp
pop
lods
push
sbb
ljmp
sbb
pop
jno
insb
mov
fistpl
outsl
les
sub
shl
xor
sbb
pusha
xor
pop
out
and
sbb
ret
fstpl
add
dec
loopne
push
sub
int
outsb
add
ficoms
movsl
lret
mov
imul
popf
mov
stos
xchg
mov
mov
cmp
push
and
inc
sti
std
xor
fdivrl
testl
fnstsw
cmp
dec
mov
inc
in
pop
lcall
jmp
sbb
inc
cs
fwait
sub
mov
inc
cmp
bound
pop
sbb
aad
cmpsl
mov
jns
xchg
add
test
inc
mov
jae
dec
inc
fisttps
xor
mov
rolb
lods
xor
xor
or
dec
pop
icebp
mov
mov
cmp
mov
cld
mov
je
push
stos
aad
push
push
sbb
xlat
jmp
jmp
aas
dec
in
xchg
rol
push
inc
outsb
sbb
xchg
dec
repz
push
xorl
shlb
je
cmpsl
pop
xchg
sbb
inc
mov
jno
mov
fdivs
dec
pop
jnp
xchg
insb
xor
xorl
jg
enter
aas
cwtl
int3
cmp
gs
iret
jo
test
xor
and
xchg
mov
inc
cmp
lcall
jo
stc
sbb
stos
leave
add
xchg
pop
xchg
scas
xlat
cmpsb
pop
sub
clc
iret
inc
mov
pop
int3
mov
jnp
mov
lds
jmp
jecxz
cwtl
push
icebp
ret
pop
sbb
dec
out
or
mov
jno
repnz
fs
add
mov
fcoml
inc
dec
movsl
stos
dec
and
sti
repz
fwait
out
cmpsb
fdivrs
xchg
push
mov
push
jne
xor
pop
inc
je
aad
lahf
out
sbb
xchg
lea
jbe
push
xchg
jns
sub
cmpl
pop
or
scas
xchg
subb
and
pop
push
out
lds
mov
inc
or
xchg
aad
adc
cld
push
ja
pushf
fwait
cmpsl
in
js
dec
jb
test
lods
std
jmp
je
dec
mov
xlat
sub
or
or
jmp
adc
mov
mov
rcl
mov
imul
cld
outsl
sbb
leave
add
sub
scas
push
jne
mov
gs
add
xor
sub
fwait
repz
sub
cli
ficoml
inc
jne
popa
leave
mov
add
in
ss
push
cmp
ljmp
icebp
pop
and
mov
xchg
cmp
into
cs
sahf
int
pop
int3
pop
and
mov
adc
mov
ja
xorl
das
nop
adc
and
mov
fistps
add
cmpsb
and
add
xchg
cmp
and
imul
mov
imul
test
sub
in
imul
dec
rep
add
stos
stos
push
xchg
das
adc
out
push
and
sbb
mov
lcall
push
adc
push
jb
std
pusha
mov
push
data16
dec
mov
push
dec
js
hlt
mov
mov
call
dec
push
mov
pusha
or
mov
in
insb
sbb
mov
sbb
mov
ds
popa
lds
mov
or
add
idivl
push
test
or
fistpl
outsl
add
mov
addb
pop
jo
int
fisttpl
rcll
inc
push
adc
push
rcpps
hlt
and
add
incb
sbb
es
mov
and
shlb
mov
jo
adc
cltd
cmc
mov
mov
call
out
out
pop
test
jno
push
jecxz
leave
test
jg
scas
jne
adc
lahf
jae
lret
das
dec
out
ret
aam
scas
cmp
pop
shrl
adc
ja
and
std
roll
jmp
pusha
push
mov
cli
jns
mov
or
jns
dec
adc
inc
push
scas
mov
sbb
mov
pop
mov
push
push
mov
mov
pop
xor
enter
std
dec
sti
jno
jle
jecxz
lds
mov
jecxz
pop
dec
sbb
adc
jns
jle
mov
xchg
mov
push
sub
cltd
ja
das
scas
mov
xlat
imul
fidivrl
dec
jnp
stos
xchg
ja
jmp
inc
pop
inc
mov
iret
pop
psrlq
in
lcall
mov
xor
and
cmp
sbb
das
mov
sti
cwtl
add
pop
mov
push
pop
add
adc
inc
test
xor
cmpsl
lods
dec
stc
jne
lea
popf
fsub
ss
cld
xchg
pop
or
mov
jne
clc
xor
test
sahf
fisubrs
idiv
imul
mov
xchg
jo
insb
mov
jle
jnp
jb
xor
mov
and
outsb
or
pop
fsubs
xor
jb
shrb
sbb
pusha
and
in
cmp
jb
inc
pop
in
popf
add
shlb
addr16
fnsave
in
mov
sub
jae
jb
lock
fdivrp
jge
xchg
or
stos
fmulp
jmp
mov
dec
pusha
pushf
add
jae
xchg
fimuls
pusha
js
mov
and
dec
xchg
mov
or
pop
mov
jbe
aaa
add
xchg
and
adc
mov
xor
pop
inc
mov
pop
jecxz
adc
in
xor
js
andb
sub
xchg
aas
push
mov
mov
sbb
push
push
gs
insl
add
or
dec
inc
xor
sysexit
addl
xchg
imul
pop
cmc
dec
fists
jp
cmc
andl
stos
les
popf
pop
loop
xchg
pop
in
stc
mov
fadds
adc
xchg
gs
add
outsb
scas
lock
sbb
ljmp
iret
jns
insb
jo
sbb
jo
jge
add
and
int3
sub
pop
xchg
push
lahf
sbb
push
mov
jae
ret
repnz
jle
push
jl
sbb
lcall
pop
stc
pop
int3
fnstenv
stos
inc
jg
adc
or
and
xor
pusha
and
inc
jnp
adc
les
mov
mov
cwtl
sub
jnp
lods
xlat
push
cmp
push
or
js
lods
dec
mov
insb
adc
rcrl
mov
pop
add
jecxz
roll
popf
cmp
and
enter
pop
addr16
mov
fsubrl
sub
pop
lahf
insb
faddl
iret
inc
jge
pop
inc
cmp
adc
sbb
push
test
cmpsb
add
es
xchg
jnp
aas
ret
sub
xchg
ljmp
out
in
lahf
xchg
test
jns
mov
daa
jno
out
ja
adc
scas
xchg
nop
jne
repz
dec
cltd
mov
cmc
or
mov
sbb
aad
sub
jl
xchg
jecxz
mov
scas
pop
cmp
sahf
push
fst
in
fsubr
lahf
clc
out
imul
pop
pop
nop
add
lods
sbbb
fst
popa
in
mov
incl
icebp
das
push
sub
jmp
inc
int3
push
in
bound
lods
inc
xchg
mov
mov
pop
pop
stos
data16
mov
or
lcall
adc
mov
push
shr
adc
ffreep
xchg
push
lcall
pop
xchg
xor
cbtw
in
scas
movsl
cmp
shr
aam
pushf
and
scas
dec
inc
lods
and
ret
push
adc
inc
or
mov
mov
jle
dec
push
test
addl
push
add
jge
and
xchg
punpckhdq
and
das
das
inc
rclb
lods
dec
gs
fisubl
cmp
stos
aas
mov
mov
push
cwtl
xchg
adc
or
pop
and
mov
jp
pusha
insl
jbe
inc
cmpsl
cmp
xchg
repz
pop
lods
mov
icebp
fistps
stos
inc
adc
inc
adc
xor
sti
add
jmp
das
lds
lahf
inc
outsl
lods
xchg
mull
mov
jne
push
mov
test
dec
je
mov
leave
lds
aam
xchg
pushf
std
xchg
or
push
and
stos
push
sub
lcall
xchg
pop
jns
es
pop
jbe
push
adc
jle
and
add
dec
sbb
add
dec
movsb
pusha
mov
rcr
nop
sbb
pop
mov
and
sbb
ret
in
pushf
mov
mov
mov
sub
loop
addl
insl
int3
add
outsb
sti
pop
andb
or
ja
mov
dec
outsl
sub
outsb
fsubrs
push
mov
cltd
pushf
icebp
inc
sti
insl
pop
inc
sbb
dec
popf
sti
jb
addr16
addl
test
sbb
scas
das
negl
cwtl
mov
sub
mov
cmp
mov
rcrl
lea
sbb
dec
mov
in
pusha
dec
div
add
sub
inc
ljmp
jg
out
daa
cltd
or
push
push
jbe
add
mov
fnsave
orb
mov
repz
jp
loopne
push
jae
loope
popa
inc
sbb
insl
out
in
jnp
jns
xor
sub
js
add
and
mov
adcb
mov
sub
sti
bound
dec
push
sub
adcl
push
negb
dec
sti
cld
cmpsb
inc
int
sbb
fnstenv
out
pop
mov
aas
mov
push
les
imul
and
mov
pushf
mov
and
push
pop
and
nop
push
inc
adc
sub
lods
out
sbb
pop
loop
jp
stc
lea
cmpb
or
fistps
adc
aaa
jmp
repnz
divb
filds
popfw
shlb
insb
call
arpl
mov
pop
ss
shlb
sbb
inc
sbb
fcomp
dec
loope
mov
fwait
xor
sbb
test
dec
mov
jb
mov
orl
mov
je
jae
in
jl
pop
stc
pop
mov
push
pop
ret
shll
add
dec
fwait
testb
mov
int
sets
nop
lds
xchg
shlb
in
cltd
lock
cmp
cmp
dec
rol
lock
pushf
dec
and
mov
add
pop
and
shrl
cld
adc
sub
mov
sub
fsubr
sub
lea
cwtl
iret
mov
in
cs
mov
push
ljmp
jmp
inc
and
push
dec
ss
cmp
aas
mov
sub
dec
and
xor
int
sbb
into
push
xor
jbe
add
sbb
xchg
mov
pop
out
add
outsb
xor
mov
jae
fs
jo
clc
sub
mov
in
mov
push
jecxz
adc
lea
in
or
xchg
test
shll
xchg
fnstenv
shrb
or
je
inc
aad
jo
rcl
lret
in
call
push
hlt
jecxz
icebp
rcr
icebp
sub
cmp
push
in
jl
push
sti
cld
mov
xchg
mul
test
xchg
mov
push
xor
inc
push
in
jmp
xchg
adc
dec
sarb
aad
dec
push
mov
rcr
gs
ljmp
mov
fsubs
or
lods
aas
mov
sub
jne
xor
scas
std
lea
fiadds
xchg
sarb
or
adc
ret
pusha
push
fwait
mov
pop
push
lcall
mov
inc
add
xor
jne
xchg
das
in
sahf
xorl
repnz
cltd
mov
gs
rorb
stc
and
mov
mov
add
mov
xor
outsl
into
adc
lods
mov
mov
cmp
daa
xchg
jns
loopne
into
scas
cli
hlt
int
push
dec
sti
mov
out
lods
jns
adc
imul
pop
sarl
popf
jle
or
pushf
pusha
lea
scas
movsb
sub
jmp
push
push
loopne
loopne
xlat
out
jle
repnz
mov
fildll
and
push
inc
or
insl
fists
lea
add
orl
ljmp
mov
pop
imul
in
hlt
imulb
inc
rcll
sub
leave
lods
add
dec
mov
mov
sarl
ljmp
ja
ret
hlt
inc
sub
inc
negl
testb
movsl
lock
xor
xorb
pop
push
leave
pop
loope
adc
or
outsl
iret
in
pop
xchg
xchg
scas
pop
nop
xor
gs
mov
adc
dec
xor
ret
dec
add
push
mov
es
nop
orl
pop
xor
clc
test
lcall
fincstp
or
test
jmp
sbb
mov
dec
dec
push
jbe
mov
in
push
mov
lahf
sub
aaa
adc
fcom
jmp
clc
add
daa
arpl
cwtl
cmp
loope
and
jns
rep
mov
fcoms
std
xchg
xchg
sub
mov
cltd
dec
inc
test
xchg
sub
out
jge
jp
dec
inc
cmp
xor
push
int3
into
lret
sbb
sbb
lock
mov
aad
fdivl
mov
les
add
sub
mov
ss
and
jo
aam
xor
mov
jmp
cmc
sub
mov
dec
jnp
sub
push
insb
xchg
outsl
push
cs
stc
loopne
imul
xor
or
pop
jb
dec
sub
leave
pop
inc
hlt
lcall
lahf
mov
adc
mov
sbb
iret
pop
ljmp
inc
sbb
aad
mov
inc
sbb
das
cs
lcall
add
push
sbb
arpl
or
lret
sti
push
inc
jb
push
arpl
push
repnz
scas
push
jg
fcoml
push
cwtl
dec
test
mov
pushl
mov
cmc
cmp
dec
or
push
xchg
add
adc
add
xor
ja
lds
out
sbb
in
mov
mov
leave
push
adc
lret
add
outsl
iret
test
and
loop
icebp
xor
sub
jmp
fldcw
rorl
dec
jnp
xchg
ljmp
cmp
dec
sub
lock
in
aas
cmpsb
jge
push
test
xchg
mov
pop
xchg
imul
lds
cmp
mov
inc
jb
sbb
iret
mov
jae
enter
xor
xchg
out
sbb
xchg
push
xchg
jle
xchg
aad
mov
sub
xchg
imul
jmp
jne
mov
or
and
jmp
mov
jmp
xor
sub
je
out
sti
repz
xlat
mov
fiadds
mov
pop
xor
test
repnz
faddp
mov
lret
ljmp
pushf
jecxz
stos
cmpsl
jg
adc
jge
jns
fiadds
mov
mov
int
push
cs
rclb
shlb
pop
fldenv
mov
sbb
sahf
xchg
push
dec
add
push
arpl
hlt
xor
stc
add
xchg
in
jge
xchg
sbb
jmp
and
pop
push
rcll
std
xor
dec
orb
cmpsl
xor
cld
push
xor
outsl
aam
inc
sbb
jb
notl
stos
mov
je
pop
mov
add
mov
or
pop
xor
add
shrl
and
mov
fimuls
imul
push
test
leave
inc
das
dec
cmp
adc
cli
jle
add
sbb
dec
sbb
stc
lea
dec
cltd
pop
daa
fmull
push
mov
hlt
call
imul
fs
jb
and
in
and
pop
repnz
repnz
icebp
fsin
xchg
mov
push
into
test
out
fldcw
out
pop
mov
nop
jb
inc
sub
mov
in
insl
add
enter
push
adc
fmull
loope
mov
imul
xchg
mov
aaa
pop
lcall
std
add
mov
addr16
mov
std
mov
popf
in
lods
and
leave
es
push
jne
push
loop
xchg
mov
repnz
jo
andl
scas
cli
popf
push
decb
push
cmp
pop
push
fs
xchg
push
jne
clc
xchg
adc
arpl
lock
stos
inc
sbbb
inc
int
mov
lock
stos
xchg
mov
push
fimull
cmp
in
mov
sbbb
ret
ret
cmpb
adc
sbbl
iret
fiadds
xchg
lcall
pushf
fwait
adc
cmpsb
std
xor
jle
pop
subb
ljmp
cmp
cmp
ja
xor
xor
mov
inc
ficoml
or
roll
adc
stc
insl
xchg
pop
decb
jne
mulb
mov
fisubrl
adc
inc
shrb
push
shlb
shlb
imul
cmc
stc
hlt
ja
adc
inc
pop
gs
or
xor
rcrb
xchg
push
pop
sbb
popf
test
sub
mov
mov
mov
bound
mov
xchg
fists
das
sub
xchg
rorl
jne
incl
mov
dec
cmp
outsl
dec
adc
push
jbe
pop
mov
sub
outsl
sub
cwtl
or
mov
sub
dec
add
cmp
mov
mov
pop
pop
test
cmp
jo
in
pop
ljmp
mov
pop
insb
pushf
idivl
pop
imul
cmpb
push
pop
jno
aas
xor
pop
int3
std
push
roll
cmc
jge
and
je
inc
xor
pop
mov
add
xorb
mov
lahf
andb
fisttps
pop
imulb
and
and
imul
add
mov
mov
push
xor
cwtl
mov
fxtract
loopne
jo
aaa
push
sbb
lahf
aas
call
adc
jge
jb
outsl
stc
sub
push
les
mov
push
rolb
movsb
add
sbb
sahf
mov
or
or
roll
mov
add
mov
xor
adc
lahf
sub
loopne
lock
out
jo
jmp
push
hlt
mov
movsb
clc
mov
pushf
xor
cmp
xor
mov
xchg
jl
xchg
xchg
dec
mov
movsl
push
jbe
in
push
xchg
data16
clc
pop
lds
adc
pop
mov
jge
and
rolb
lods
add
or
bound
add
mov
ret
or
xor
ja
pop
push
xchg
inc
sarl
and
and
push
jo
xchg
out
cmpsb
aam
cld
cmp
mov
lret
cmp
stc
mov
movsl
xor
sub
and
sub
add
inc
add
push
fmull
xchg
or
test
sti
std
shrl
jecxz
xorl
mov
push
mov
jp
loopne
outsl
or
push
cwtl
dec
fs
jno
dec
push
int
add
jecxz
push
xchg
rolb
in
in
sbb
jg
jo
push
mov
sbb
sbb
ljmp
inc
sub
mov
aad
xchg
stos
in
mov
mov
aad
lea
add
icebp
inc
push
cmp
push
dec
xchg
test
in
jnp
lcall
adc
inc
stc
jae
mov
cli
xor
and
xor
adc
bound
mov
inc
pop
in
push
popa
mov
jmp
dec
sahf
data16
sbb
in
aaa
mov
rcr
shl
mov
xchg
sbb
ror
icebp
sub
add
xor
pop
push
dec
add
inc
ljmp
cmp
std
xor
mov
daa
iret
xor
addr16
xor
sbb
mov
push
mov
mov
iret
lahf
jo
mov
push
loopne
repz
ficomps
adc
mov
pop
xor
dec
in
inc
inc
mov
andl
repnz
adc
or
mov
xor
mov
test
dec
dec
outsb
ret
scas
shl
cs
pusha
pop
enter
and
leave
lfs
into
push
fs
jo
or
sbb
repz
xchg
aam
fsubl
in
arpl
popf
xchg
testl
mov
sti
loope
jge
gs
mov
xor
decb
and
pop
or
pop
clc
aas
aad
push
fistps
pop
or
push
mov
push
push
adc
btr
les
xchg
scas
xchg
in
pushaw
ja
jecxz
cmp
mov
movsl
jp
adcl
mov
jno
pop
mov
or
push
and
data16
inc
dec
mov
pop
test
aaa
jo
test
pop
out
mov
push
leave
pop
popf
sbb
mov
mov
cmp
rorb
adc
or
sub
dec
add
push
xchg
cmp
and
mov
mov
xor
or
or
inc
clc
and
in
adc
sub
dec
dec
or
fmull
movsb
pop
test
cmp
ja
and
outsb
and
ret
and
lds
clc
cmpsl
in
cmpsb
pop
imul
or
xchg
sub
subl
insb
adc
adc
and
inc
or
pop
and
and
jg
inc
cltd
cmp
pop
dec
movsb
in
jge
mov
ljmp
push
mov
mov
push
rolb
xchg
xchg
lock
jns
mov
bound
dec
fimuls
loop
insb
pusha
jne
rorb
cmp
pop
nop
loope
jo
hlt
xor
js
fbstp
std
xor
sub
sbb
mov
out
mov
dec
enter
mov
sub
lods
mov
xor
lea
js
xor
imulb
cli
add
adc
dec
mov
xor
jb
popa
cmp
add
stos
cmpsb
das
jb
inc
add
sub
inc
sbb
icebp
stos
or
hlt
std
ss
dec
cmp
lret
push
cwtl
daa
sbb
and
adc
xchg
or
inc
push
sbb
cmp
aam
lds
adc
jmp
rorb
or
xor
sub
and
cltd
jecxz
fscale
jb
cltd
int
pop
pop
xchg
aam
add
les
orl
adc
jp
xchg
aad
pop
cmp
mov
loop
lds
mov
adc
xchg
add
jmp
shlb
imul
cmp
mov
or
add
repz
mov
push
push
sub
mov
mov
sbb
and
add
pusha
imul
dec
mov
cmp
hlt
cwtl
or
mov
sub
dec
pop
in
fcoml
push
dec
fisttpl
sti
shll
jb
loop
mov
dec
pcmpeqw
std
test
xlat
push
js
pop
paddw
and
sahf
call
jns
scas
pop
fs
xchg
xor
arpl
and
gs
jmp
add
dec
roll
jo
add
push
mov
pop
sahf
xor
imul
std
mov
out
jb
or
mov
imul
mov
in
imul
push
xor
push
arpl
daa
sahf
lods
push
mov
jg
cs
mov
enter
add
das
add
dec
jp
sub
xchg
jae
pop
js
stos
aaa
push
xor
add
lahf
arpl
loope
lds
and
sbb
and
popf
out
movsl
imul
jno
dec
sub
mov
or
jo
push
jnp
jae
out
or
int3
fdivrl
cmp
imul
lods
sti
mov
xchg
sbb
push
fidivl
stos
lock
jnp
jne
cld
sbb
shlb
leave
popa
movsb
pusha
dec
ss
movsl
and
movsl
sub
sbb
cs
ja
shrb
xchg
cwtl
or
pop
mov
testl
loopne
movsl
mov
stc
int3
adc
lcall
sub
fwait
cmp
add
es
cmp
and
pushf
adc
mov
popf
jbe
jmp
add
xchg
mov
insb
mov
adc
cmc
xlat
test
mov
aam
jle
lods
lret
ror
fiadds
stc
mov
xchg
lahf
shlb
in
push
dec
je
dec
gs
out
xor
ret
mov
lds
scas
sti
loope
push
sbb
xorb
cmp
out
call
xor
dec
out
and
jo
sbb
aam
jno
mov
scas
sti
mov
xlat
test
xchg
cld
or
lea
push
cs
pop
sti
icebp
cvttps2pi
pop
pop
cmp
xchg
jnp
inc
mov
lods
inc
sbb
jno
test
hlt
pushf
cmp
dec
repnz
bound
xchg
pop
popl
popa
orl
and
lcall
fnstcw
popf
cmpsl
mov
dec
andb
repnz
or
add
insb
mull
sarl
sub
push
vpshaq
cld
mov
shlb
or
xchg
adc
sub
in
mov
out
jo,pn
aaa
movsb
ljmp
mov
and
pusha
ficoml
ret
adc
push
jnp
xor
imul
test
repnz
or
imul
iret
adc
xor
cld
jno
mov
leave
add
repnz
cli
cs
lods
mov
loop
and
xor
cld
inc
xchg
sti
mov
cmc
mov
loope
sbb
gs
sbb
gs
cmp
push
ret
xor
inc
call
inc
scas
xor
mov
sarb
mov
stos
neg
jp
add
aas
pop
insb
sub
sub
mov
or
push
pop
add
mov
push
fimull
ljmp
rorb
xor
out
xlat
lret
adc
or
and
xlat
sub
std
movsl
inc
or
outsb
sub
cmp
inc
lcall
nop
negl
arpl
push
xchg
sub
xor
loopne
cltd
ljmp
or
test
cltd
adc
lock
js
in
es
mov
mov
pop
push
mov
movl
mov
leave
cmp
shrb
cli
test
rcl
pop
imul
mov
sub
pop
jmp
mov
sub
sub
sbb
dec
arpl
or
add
js
addb
shlb
lods
clc
adc
cld
mov
ljmp
inc
outsb
and
jne
insl
push
pop
xchg
fisubrs
or
int3
stc
cmp
repnz
icebp
flds
xchg
lock
inc
icebp
jp
cmpsb
xor
repz
mov
scas
pop
jne
pop
mov
mov
adc
jecxz
mov
mov
test
push
dec
lods
aas
mov
stos
push
sahf
rorl
and
stos
ds
popa
rolb
nop
or
movsl
test
xchg
mov
or
scas
scas
enter
push
or
fs
dec
mov
xchg
mov
adc
mov
and
sbb
jl
jmp
sbb
inc
shll
mull
xchg
aam
test
ljmp
adc
sbb
adc
ds
mov
pop
ss
cmpsb
add
sbb
scas
fwait
int
cmc
scas
sar
cli
add
data16
cmp
sub
test
add
cmp
mov
cli
pop
jnp
jb
lret
ret
sti
xor
mov
pop
ret
jge
sahf
mov
push
sbbl
mov
mov
adc
sub
dec
loop
aad
mov
pop
icebp
hlt
xchg
jb
pusha
mov
xchg
aad
xchg
cmp
mov
repz
mov
rsqrtps
jl
pop
ficomps
or
mov
push
lret
filds
fcoml
stc
xor
xchg
lds
iret
jmp
pop
js
add
pop
loopne
sub
gs
xor
jecxz
stos
mov
loop
jmp
add
je
mov
unpckhps
fsts
scas
mov
movsb
mov
jbe
sbb
cmp
adc
jae
or
lahf
cld
imul
dec
outsl
jmp
cmp
jg
lahf
adcb
mov
cmpsl
adc
movsl
jbe
fcomps
stc
stos
rclb
hlt
sbb
das
lds
xchg
adc
mov
mov
daa
sub
push
sbb
ret
jno
jb
movsb
les
iret
inc
insb
sahf
pop
mov
mov
fs
pop
xor
jge
call
icebp
mov
mov
push
out
or
shlb
mov
add
or
xchg
xchg
cmp
pop
or
rorb
ret
mov
xchg
sbb
hlt
mov
xchg
out
fnstsw
mov
add
out
or
faddl
inc
sbb
cmp
clc
pusha
aas
sahf
sub
jle
add
test
popf
pop
cmc
xor
add
xchg
jmp
jne
push
test
inc
data16
std
ja
xor
rcrb
pop
sbb
mov
les
out
xchg
adc
sbb
adc
mov
movsl
stc
stc
shrb
mov
divb
sbb
sub
cli
jle
ret
imul
loope
outsb
sarb
or
adc
xchg
andb
sub
in
cmc
adc
push
loope
jg
sbb
into
lret
movsb
and
add
scas
xchg
cltd
outsb
scas
mov
lock
movsl
in
push
out
jg
out
dec
sub
jbe
cmp
mov
inc
mov
je
sbb
repnz
cmp
popf
cmp
push
mov
add
adc
sbb
cmp
mov
cwtl
mov
mov
mov
mov
rcrb
loop
mov
stc
jmp
push
sub
mov
sub
jmp
lods
repz
xor
pop
out
xor
adc
mov
mov
xor
jne
xlat
mov
add
fmul
mov
xchg
mov
repnz
mov
lcall
jecxz
pop
push
push
mov
dec
ret
movsb
jl
cmc
adc
aaa
push
mov
jl
xchg
mov
js
sbb
sbb
and
dec
mov
jnp
lea
mov
or
das
negl
and
dec
andb
dec
dec
imulb
dec
cmp
cmpsb
xchg
ret
int3
les
adc
push
ficompl
pop
repnz
rol
lret
xor
push
icebp
mov
mov
jl
push
cmc
and
mov
or
loopne
in
inc
xor
sbb
jl
and
push
mov
lahf
cmp
enter
pop
sbb
jle
or
enter
dec
inc
and
mov
stos
fmulp
sti
aam
sar
adc
lcall
ss
shrb
xchg
cmpsb
lcall
lret
ret
repz
int3
into
mov
pushf
stos
jns
mov
mov
xchg
jg
xchg
xchg
fldenv
dec
sub
mov
or
sbb
stos
dec
xor
push
mov
push
cltd
call
ja
add
mov
adc
dec
sti
enter
add
arpl
mov
in
mov
aaa
pushl
mov
cmp
jo
inc
xlat
mov
into
inc
pop
loop
ljmp
pop
rorb
dec
xor
add
popf
push
stos
xchg
call
dec
insb
mov
xchg
push
adc
in
lcall
xor
adc
cs
pop
inc
test
aaa
mov
push
lret
mov
movsl
mov
or
int3
xor
ss
imul
pop
mov
add
addb
pop
pop
inc
cmpsb
xchg
push
stc
jmp
ss
out
or
jbe
pop
or
sub
cli
pop
insl
xor
jmp
jb
pop
and
sbb
pusha
and
xchg
mov
loope
mov
stos
iret
jle,pn
es
mov
add
mov
xchg
and
adcb
or
push
and
push
insl
cmp
and
pop
sarb
pop
add
stc
repz
into
xchg
sub
addb
inc
or
ds
mov
nop
pop
cwtl
jge
pop
jmp
pop
push
mov
dec
dec
les
adc
mov
add
xor
imul
test
inc
les
cwtl
repz
test
sbb
add
dec
ud2
push
shr
xchg
sbb
scas
daa
xchg
xor
adc
lock
cltd
push
pop
xlat
jp
daa
pop
sbb
shll
fcmovbe
jl
push
movsl
xor
mov
ljmp
dec
movsb
out
popa
iret
cli
aam
movsl
stos
cmpsl
out
rcll
enter
mov
inc
sub
aaa
sbb
pop
aad
aaa
iret
mov
daa
stos
mov
adc
fcompl
iret
shrl
scas
pop
ret
and
call
lea
out
scas
push
imul
sub
adc
cs
filds
mov
inc
mov
and
cmpl
lock
lcall
sbb
loopne
leave
mov
cmpsb
mov
xor
leave
jno
and
lds
mov
fmuls
popa
cmc
cmp
jns
xor
xchg
test
pusha
test
dec
push
cli
mov
inc
xor
fdivl
sbb
pop
inc
mov
lcall
fisubl
or
sub
pop
cmp
dec
pop
icebp
cmpsb
mov
mov
jp
or
mov
repnz
pop
inc
jns
daa
or
cld
rol
inc
mov
mov
je
inc
js
test
xchg
mov
or
jecxz
xor
adc
mov
imul
dec
xchg
enter
popa
fisttpl
mov
inc
movsl
decb
cli
mov
lcall
pushf
insb
sbb
push
dec
je
or
xchg
xor
fucomp
fneni(8087
adc
sbb
jo
fisubl
stc
mov
loop
shl
xor
enter
push
push
test
mov
pop
imul
cmp
jg
mov
mov
das
scas
or
mov
std
cmpsb
mov
scas
cld
data16
xchg
ss
and
jge
jg
lods
repz
add
aad
ret
daa
outsb
loop
jae
cltd
mov
and
sti
xor
push
xchg
add
sarl
aam
aas
jae
mov
push
pop
pop
and
xchg
shll
push
jbe
mov
sahf
sbb
adc
inc
mov
in
xchg
sub
pop
scas
shrb
adc
je
int
int3
test
repnz
mov
jecxz
add
pop
ret
cmpsl
or
xchg
outsl
mov
mov
push
in
pop
lfs
lods
and
add
lahf
adc
testb
mov
addr16
rol
adc
add
insb
inc
shll
inc
mov
scas
cmc
cmp
mov
scas
stos
and
repz
test
mov
lahf
lea
popf
out
mov
or
stc
pop
hlt
mov
icebp
add
rolb
cli
mov
or
jmp
push
call
add
dec
aaa
mov
sub
pusha
xor
call
cmpsl
insb
jmp
incl
sbb
add
mov
mov
and
dec
and
and
inc
loopne
nop
and
mov
mov
sub
popl
insl
adc
and
adc
lds
popf
inc
mov
std
daa
cmp
je
or
jmp
or
ds
fisubs
jns
sub
xor
call
in
and
pushf
cmp
pop
mov
or
push
sti
add
out
aad
mov
push
lcall
stos
dec
mov
ret
fucomp
daa
imul
sarl
inc
fisubrs
dec
jo
sub
adc
scas
push
data16
cmp
popf
xchg
cmp
or
out
pop
jae
in
mov
inc
pop
ja
mov
popa
adc
je
pop
mov
movsl
cmp
jns
mov
add
push
add
xor
adc
sub
sub
aad
lret
arpl
push
sahf
jle
fcomps
in
dec
xchg
xlat
fcmovnb
pushf
nop
cmc
dec
popf
std
das
lods
jno
xor
rolb
push
jne
cmpsl
mov
push
xchg
mov
push
cld
repnz
cwtl
repz
adc
sbb
js
pop
push
clc
xor
movsl
scas
daa
cmp
xor
mov
in
mov
mov
fcoms
cmp
fsub
test
inc
mov
imul
sbb
enter
mov
call
xchg
and
or
cmc
xchg
jbe
outsb
out
leave
fwait
nop
adc
rorl
jae
inc
xlat
scas
adc
jecxz
in
jl
into
cmp
cmp
xor
jno
outsb
les
icebp
xchg
xlat
cmp
adc
lret
pop
cwtl
inc
jg
lods
shll
loope
insb
pusha
jmp
call
test
pminub
popa
or
mov
sahf
popa
fsubl
test
xchg
and
ror
and
decl
aad
jmp
sub
jge
repz
sbb
mov
mov
test
cli
jne
in
lods
add
lock
int
mov
daa
adc
or
mov
cli
and
js
sbb
in
or
jns
test
les
push
cmp
jnp
sbb
dec
popf
repz
cs
pop
imul
cli
jb
or
fmuls
fcomp
mov
and
add
and
pop
aad
out
fcoms
jmp
and
push
fimull
cmc
mov
mov
xchg
shl
cmpsb
adc
lcall
fcmovne
push
out
addr16
push
lock
enter
adc
xchg
cmp
adc
or
fmuls
movsb
push
aam
gs
xor
out
push
push
les
mov
mov
cmp
cmp
fidivrl
mov
in
bnd
sbb
dec
addb
lds
iret
outsl
sbb
test
notl
sti
test
mov
add
sbb
dec
push
dec
push
das
addb
lret
mov
jne
nop
loope
xor
xlat
push
ret
iret
xor
dec
les
sti
popa
inc
insb
lret
repz
cmp
and
push
addl
es
push
xchg
decb
mov
mov
data16
pop
bound
incl
cmp
xor
xor
jbe
hlt
icebp
pushf
leave
es
int
and
inc
daa
negl
inc
adc
mov
inc
add
xor
mov
jae
adc
or
sub
popf
dec
cmp
push
add
in
sbb
inc
mov
orl
lea
pop
inc
fdivl
adc
loop
shlb
pop
push
outsb
cwtl
mov
fs
es
mov
je
cmpsb
iret
jb
cwtl
into
aas
adc
jno
rorl
pop
cmp
fwait
jbe
pusha
adcb
ficomps
sub
cltd
add
loope
rcll
nop
fidivrl
or
adc
add
rorl
iret
and
xlat
fidivrl
aam
jbe
sub
imul
mov
lods
and
mov
mov
mov
lcall
in
cltd
lcall
xchg
jbe
test
pop
cmc
cmp
or
xor
cld
pop
jb
cmc
popf
aas
add
repz
xor
movsl
scas
jp
xchg
dec
loopne
pop
mov
pop
add
ret
fsubrl
xor
inc
iret
mov
cld
push
enter
xor
sbb
cmp
and
shl
lret
and
or
ja
movsb
popa
and
xchg
add
sub
jae
dec
bndldx
push
cld
mov
test
inc
filds
jecxz
cmpsl
cmpsb
hlt
adc
cmpxchg
fsts
cmp
arpl
push
xlat
push
icebp
daa
ror
and
jne
xor
add
and
or
adcw
repnz
cwtl
jmp
sbbl
pop
mov
lea
mov
mov
cmpsb
insl
sub
add
jmp
out
jp
xchg
dec
xchg
jmp
out
pop
adc
push
xlat
leave
add
cld
or
lcall
push
jmp
ljmp
decl
xchg
mov
and
sbb
lret
nop
lret
sarb
scas
dec
sbb
ret
int
sub
adc
pop
xor
test
mov
fadds
inc
or
inc
enter
adc
xor
cltd
fisttps
in
test
mov
inc
mov
stos
scas
mov
mov
pop
mov
in
loope
sbb
sub
ja
movlps
scas
bound
push
cmp
lds
pop
adc
popf
shll
test
ret
add
in
lret
bound
leave
xor
dec
clc
xchg
cld
push
outsb
pop
sub
imul
repnz
mov
int3
or
stos
sbb
rclb
add
mov
popf
xchg
les
popa
in
push
pop
add
add
mov
mov
adc
sbb
jmp
adc
imul
ret
jo
cmp
in
mov
sub
jnp
cmpsb
nop
out
das
mov
xchg
outsb
and
lcall
out
pop
xchg
repnz
adc
test
js
insl
test
sbb
dec
jo
sbb
xchg
jbe
rcrl
jle
adc
scas
pop
je
in
cmpsl
cs
mov
lret
rcrl
jle
cltd
pop
popf
mov
jnp
push
enter
pop
adc
outsb
xchg
jmp
imul
mov
dec
lcall
mov
in
dec
mov
or
jne
popf
inc
adc
mov
adc
cmpsb
cli
or
dec
cmp
cli
fdiv
cli
add
lock
adc
movsl
fmull
test
lods
imul
shl
das
cltd
arpl
xor
imul
and
aam
jmp
jnp
push
into
add
xchg
jecxz
mov
xchg
dec
sbb
sbb
and
aad
or
ret
xchg
sbb
imul
jnp
cmpb
clc
cmp
mov
push
sbb
stos
dec
daa
mov
in
xchg
shll
adc
push
cltd
xlat
add
test
cmp
dec
into
add
and
fwait
lahf
aam
cld
xchg
pop
xor
inc
xchg
inc
insl
adcl
sub
push
jnp
aaa
je
or
sbb
ss
xchg
adc
xor
mov
and
and
cmp
mov
arpl
iret
aam
shrl
mov
or
nop
iret
add
popf
enter
sub
nop
fdivrl
xor
xor
aam
mov
pop
dec
push
or
sbb
je
stos
arpl
mov
xor
dec
or
or
mov
xchg
add
adc
mov
call
inc
lahf
jae
lret
enter
ss
adc
sub
ret
dec
lahf
dec
sahf
xchg
cmp
outsb
test
sbb
add
ret
fistps
pop
xchg
jp
iret
ds
inc
mov
push
push
sarl
mov
jae
fdiv
data16
loopne
pusha
jns
out
jmp
dec
fidivs
add
sub
jg
es
gs
push
mov
cmp
cmpsl
push
pushf
leave
jp,pn
mov
mov
mov
repnz
mov
xchg
mov
mov
outsl
xchg
adc
push
sbb
daa
sbb
jmp
mov
test
xor
rolw
insl
sbb
add
insl
add
imul
das
mov
popa
idiv
out
addr16
sbb
cli
xchg
addr16
xor
and
adc
dec
inc
aam
pop
shl
push
sub
or
mov
cmp
das
fadds
imul
and
pop
push
daa
outsb
das
cmp
adc
pop
lret
cmc
bound
jns
pop
bound
pop
dec
push
jmp
push
je
repnz
ja
aaa
andl
cmc
pusha
push
or
gs
stos
xor
iret
mov
pop
sub
movsb
ret
fs
fmuls
scas
mov
fcoms
pushf
or
jg
out
in
lret
push
ret
push
mov
call
or
ret
xchg
inc
insl
push
ljmp
mov
pop
mov
sbb
sbb
out
daa
jmp
pop
or
add
sub
loopne
std
lret
pop
mov
fwait
sahf
mov
notb
cwtl
cwtl
cmp
shrl
imul
cmpsb
in
aam
xor
push
gs
push
loope
push
lea
jbe
imul
or
or
out
mov
pop
leave
sti
clc
in
in
lods
inc
mov
jg
ret
adc
mov
insl
fldcw
es
inc
test
and
push
xor
mov
adc
sbb
out
mov
push
pop
mov
cwtl
in
xchg
pop
fisubl
xor
sbbb
sub
sub
fidivl
inc
fsts
dec
fistps
xchg
and
pop
xchg
dec
inc
aaa
cmpsb
jecxz
push
or
in
in
jg
inc
jo
push
clc
xchg
push
inc
mov
jle
push
mov
fdivrl
or
jnp
sbb
mov
jno
gs
xchg
xchg
cmp
sbb
xchg
loope
fsubrs
pop
jo
rcrl
inc
dec
mov
mov
or
jne
daa
jo
cmpsb
ret
adc
dec
mov
and
or
lods
sarl
sub
mov
or
cmpsb
imul
mov
leave
jno
cmp
out
jae
sbb
negb
mov
mov
shll
adc
sti
pop
test
sbb
out
shl
shrb
je
repz
jbe
lret
ret
sbbb
js
mov
mov
hlt
pop
pop
das
gs
mov
sahf
popf
sbb
xor
jecxz
jl
push
adc
sahf
leave
mov
arpl
pop
jl
lea
xorb
and
mov
sti
jge
daa
les
push
ljmp
ljmp
push
and
js
add
arpl
negl
pop
stos
mov
bound
rcrb
pop
push
data16
setbe
imul
pop
pop
pop
cmp
jge
shrl
push
and
pop
data16
aaa
mov
mov
dec
js
stc
sub
push
and
shll
adc
xchg
add
xor
stos
mov
xor
mov
icebp
ret
sbb
mov
scas
xchg
aas
test
fdivrl
jb
jae
in
fisubrl
xlat
xchg
outsl
fistpll
shlb
mov
mov
ret
mov
loop
sub
gs
sbb
push
fdivr
cmp
mov
and
in
int3
outsl
mov
mov
les
data16
insb
pop
cs
sub
out
test
push
add
pop
lods
mov
sbb
and
stos
into
push
jle
int3
shlb
loopne
jp
scas
sub
or
cmpsl
dec
jo
std
jns,pn
aas
shr
nop
test
jbe
pop
imulb
and
ds
fisubrl
fcomi
xchg
fxch
std
pop
dec
rorl
adc
pop
inc
arpl
and
lock
add
mov
cmpsb
aam
hlt
jge
fwait
arpl
xor
loope
enter
sbb
lret
xchg
or
jne
lods
das
sbb
nop
jmp
fildl
inc
inc
adc
pop
outsl
lret
in
test
je
adc
cltd
inc
add
xor
push
pop
mov
xor
dec
lods
sub
add
ret
xchg
hlt
add
xchg
fxch
jns
fdivs
testl
add
push
push
cmp
popa
add
jne
movsb
dec
mov
sub
out
xchg
pop
lock
sbb
or
jne
insb
loope
in
test
mov
insb
les
or
xor
mov
and
aas
sub
stc
insb
clc
pop
pushf
jb
pop
push
adc
mov
push
push
js
es
insl
fimuls
int
and
xor
jle
xor
ja,pt
and
dec
lcall
or
xchg
mov
or
int3
jbe
dec
sub
add
ret
hlt
and
into
pop
fnstcw
mov
adc
icebp
pop
xor
aam
inc
cmp
cwtl
fildll
aaa
jno
je
loopne
xchg
sahf
jmp
sub
test
dec
lret
repnz
jae
enter
cmp
jmp
ret
xchg
push
ret
ss
dec
mov
int
ja
dec
mov
push
mov
mov
dec
ljmp
and
aam
and
cmp
inc
jge
int3
mov
adc
movsb
add
ret
push
int3
pop
aad
cmp
test
iret
pop
adc
arpl
rclb
cwtl
cmova
mov
mov
pop
pop
or
inc
cmc
ljmp
shll
scas
sbb
mov
cmp
jno
dec
test
leave
jo
imulb
imul
repnz
jg
add
mov
test
cmp
xchg
lock
mov
sub
mov
xchg
fsubrl
inc
into
iret
sub
cmp
fmull
sub
and
gs
sub
jae
jl
leave
or
pop
mov
es
mov
test
push
add
cwtl
inc
dec
jo
dec
inc
jo
inc
jmp
dec
cld
pop
ret
xchg
nop
lea
aad
cmp
push
push
cltd
mov
fwait
out
mov
xchg
jmp
insb
insl
daa
out
scas
lods
push
fucom
pop
mov
lock
push
mov
sahf
aad
test
iret
cltd
sar
cld
pop
fnstcw
dec
cmpsl
mov
jb
or
movsl
cmp
inc
icebp
xchg
jle
mov
movb
sbb
nop
cmp
adc
mov
pop
push
outsl
clc
lahf
ljmp
mov
xchg
test
mov
stos
and
sbb
xchg
pop
mov
lret
jg
sti
mov
pusha
cli
hlt
icebp
test
fisttpll
cwtl
imul
nop
mov
jbe
lcall
dec
jne
adc
shlb
xchg
xchg
sub
mov
int3
xor
enter
lods
lods
imul
jae
popf
xchg
lret
repnz
fs
mov
pusha
or
jmp
adc
mov
push
repz
les
mov
xchg
xlat
jle
push
fdivrl
neg
fwait
jle
push
mov
fadds
out
shrl
imul
cmc
push
ja
mov
mov
aas
mov
sbb
test
add
jmp
sub
pop
dec
or
loope
fsubp
stos
loopne
jmp
pop
or
push
and
inc
xchg
ljmp
insb
pop
dec
outsb
or
pcmpeqb
mov
mov
pop
pop
fsubrs
sbb
sbb
xchg
mov
scas
inc
inc
pop
rol
test
inc
push
jle
rolb
stos
pushl
enter
xlat
outsl
repnz
xor
jb
test
push
je
orl
cwtl
push
in
push
inc
cld
adc
sbb
aas
out
inc
aas
and
push
jmp
jp
call
repz
loopne
sbb
push
inc
xchg
or
cli
test
ror
jp
adc
cmp
jmp
aad
ljmp
sub
sbb
jno
das
jno
dec
xorb
test
mov
jp
xor
movsl
push
add
popf
xor
cmp
pop
test
mov
inc
sbb
xchg
mov
xchg
push
subps
imul
push
jno
and
lods
ljmp
mov
xchg
jne
and
sbb
sub
and
pop
cmpsl
inc
push
and
jb
push
mov
divl
inc
pop
xchg
push
or
dec
jge
fwait
jnp
jo
decl
loopne
or
cwtl
loope
xor
add
out
fists
pusha
cmp
subb
cmp
xor
dec
sub
push
loop
ja
mov
gs
xor
sub
insb
orb
ljmp
jbe
or
mov
xchg
rcrl
inc
push
inc
mov
clc
adc
jl
testb
pop
jae
jbe
es
mov
xchg
mov
dec
lds
int
pop
imul
sub
mov
jecxz
xlat
sbb
cld
fldt
pop
test
mov
mov
xchg
sub
push
ret
jl
add
jmp
inc
or
or
test
cmp
ds
ret
fildl
inc
push
loop
ljmp
in
mov
imul
adcb
into
jae
and
repnz
pop
pop
bound
lock
adc
enter
cmp
ja
push
aam
scas
xor
push
sub
in
pop
mov
inc
jae
js
add
jbe
repnz
iret
ljmp
imul
sub
xor
les
leave
pop
rcrb
gs
icebp
jb
xor
cmpsl
and
push
cwtl
cltd
adc
mov
cltd
test
cwtl
jne
xchg
shll
cmp
inc
push
pop
or
add
leave
enter
orl
shlb
jbe
adc
bound
std
popa
test
pop
stos
or
mov
jb
sub
lahf
insb
mov
sub
inc
cld
add
cwtl
stos
push
imul
rol
bnd
lods
fmull
mov
lret
dec
loope
je
add
dec
pop
rorb
sbb
inc
hlt
pop
out
mov
sub
nop
cmp
fwait
xchg
dec
outsb
mov
xor
cmp
fbld
xchg
pusha
addr16
repz
outsl
and
pushf
aam
jno
jae
aad
pop
inc
jp
ljmp
popa
cmp
sbb
jp
js
dec
test
cmp
mov
dec
aam
iret
in
mov
xor
test
jbe
stos
leave
andl
inc
cmpsl
jle
adc
adc
inc
enter
push
sbb
inc
int
js
ret
jp
out
or
shlb
jno
cmp
push
and
xchg
call
popf
cli
jp
mov
mov
pop
mov
inc
ffree
scas
movsb
inc
in
ljmp
mov
mov
cmpsl
shlb
iret
hlt
push
push
jae
fwait
out
les
or
cmpsb
cmp
addl
dec
fstl
or
outsb
push
mov
and
iret
out
out
or
or
sbb
ret
popa
ret
mov
mov
push
push
rcrb
push
mov
in
pop
mov
lahf
fbld
shl
inc
jle
adc
dec
aas
jb
lahf
lcall
mov
int
leave
repnz
mov
outsb
lods
and
les
sub
or
aas
rol
mov
jl,pt
aam
int3
push
and
pop
push
add
call
scas
mov
sub
jbe
fisttps
mov
cmp
inc
leave
repnz
es
test
jnp
push
int
std
pop
mov
xchg
rorl
jecxz
aaa
stos
loope
scas
fisubl
repnz
inc
and
xchg
wbinvd
arpl
int3
push
pop
push
out
dec
sbb
mov
cwtl
outsl
pushf
shlb
fcompl
fbstp
lea
cmc
arpl
nop
sar
xchg
pop
idiv
jno
add
xchg
mov
outsl
imul
xchg
cmp
and
push
mov
dec
jl
imul
pop
sub
addr16
gs
push
jle
cmp
fcomps
add
add
rcl
lock
mov
or
rcr
enter
adc
xor
fsubrs
push
cmp
and
shrb
icebp
jne
lea
fnstcw
in
aad
push
push
adc
or
inc
test
jecxz
ss
addl
mov
push
pop
outsl
sub
movsb
aam
mov
pushl
pop
test
imul
sub
add
lea
test
es
scas
jne
rol
sub
jge
dec
clc
shrl
mov
pop
mov
fnsave
mov
xlat
leave
daa
push
pop
leave
das
arpl
inc
and
imulb
daa
es
or
jb
mov
inc
pop
mov
sbb
adc
sbbb
stos
xchg
ret
call
xor
cmp
stc
sbb
das
subl
test
sub
popl
in
movsl
or
aaa
ljmp
sbb
lcall
movsl
adc
xor
outsl
or
cmp
jnp
xor
leave
add
pop
jbe
test
mov
push
push
je
fldl2t
jns
pop
ljmp
mov
mov
test
out
mov
inc
rcr
push
xchg
fisttpll
cltd
out
and
xor
add
sbb
test
cmp
cmp
daa
sub
sub
jb
movsl
or
push
faddl
cmp
repnz
int3
sub
rcl
sub
stos
lods
rorl
cmc
xchg
mov
frstor
cltd
mov
int
xchg
das
add
lcall
loop
mov
cmp
adc
cmp
adc
xchg
pop
pop
je
idivl
ret
ret
mov
pop
outsl
mov
and
and
pop
stc
xchg
sahf
cmp
mov
sub
mov
fistpl
in
aam
cmp
ja
sub
mov
in
movsb
or
mov
sbb
fisubl
in
jno
mull
or
and
push
or
cmp
mov
xlat
popa
sub
test
cs
and
cmp
and
mov
iret
sti
bound
mov
jl
xchg
push
adc
xchg
jecxz
pop
sbb
out
dec
mov
mov
xor
push
pop
in
or
lock
jns
push
jne
ds
icebp
xchg
mov
cltd
and
sub
jmp
or
addb
int
in
xor
test
lcall
cmp
inc
lea
aaa
push
dec
and
mov
in
pop
cltd
jg
inc
call
sub
test
hlt
jo
lea
sahf
aaa
out
pop
es
das
inc
xchg
xor
xor
stos
mov
or
xchg
sub
test
xorl
xchg
jecxz
adcl
enter
lods
gs
push
mov
sbb
sbb
dec
into
push
fiaddl
add
imul
test
dec
mov
andb
xor
or
ss
dec
sub
out
imul
loope
sbb
icebp
scas
hlt
cmp
mov
add
inc
pop
mov
mov
and
inc
mov
sbb
loop
jg
lods
ja
xor
jmp
ljmp
mov
shrl
nop
push
cmp
idivl
mov
outsb
mov
test
add
cmpsl
and
fwait
sbb
push
ds
pop
mov
and
and
js
pusha
pop
mov
mov
jg
rorl
lcall
rol
cmc
mov
test
adc
or
xchg
test
loop
mov
jae
cmp
jp
andb
out
inc
stos
lcall
mov
sbb
xlat
adc
xchg
cmp
outsb
out
ljmp
stos
mov
mov
clc
mov
sub
add
dec
jae
jg
test
xchg
add
das
stos
inc
pop
push
je
ljmp
jnp
dec
loopne
out
addr16
push
pop
mov
stc
lcall
outsb
das
nop
in
cmp
sti
sub
sub
les
adc
sub
mov
js
das
mov
and
dec
mov
loopne
mov
mov
sub
sub
xor
xor
scas
mov
pop
push
inc
ret
dec
push
loope
add
movsl
and
rcrb
aad
dec
mov
sub
imul
cmp
rorl
aas
pushl
into
jbe
stos
push
and
fnstsw
push
and
ret
mov
mov
rcr
or
adc
xchg
and
loop
adc
cmp
or
sbb
inc
push
inc
sarb
mov
fwait
data16
sub
dec
outsb
fsubp
sub
mov
pushf
scas
mov
or
sub
and
les
popa
or
sbb
test
mov
adc
push
push
cmp
fistpll
sbb
ret
sbb
xchg
push
fidivrs
in
dec
in
mov
je
jge
mov
push
sarb
push
push
push
sbb
rclb
hlt
fisubrs
fs
arpl
xchg
pop
lea
insb
sbb
shlb
pop
add
repnz
xchg
stc
pop
push
adc
xchg
pusha
nop
fldenv
lcall
in
data16
pop
cmc
jge
mov
sub
addb
inc
pop
ds
mov
popa
cmp
loopne
aam
xor
mov
dec
in
fisubs
sahf
push
fwait
leave
mov
cmpb
add
dec
mov
es
aaa
jbe
movsb
mov
ret
cmc
in
clc
pop
xchg
dec
push
clc
pop
sbb
and
mov
leave
test
push
orl
and
inc
jle
lods
mov
gs
incb
mov
cs
repnz
add
shl
mov
cmpsl
cltd
ja,pn
adc
mov
rclb
dec
mov
out
sub
and
data16
aam
fcomps
pop
mov
mov
mov
mov
bound
jnp
and
sbb
repnz
mov
mov
dec
cwtl
in
dec
inc
mov
clc
xchg
test
aad
lods
fdivrs
out
xchg
mov
inc
fdivrp
xlat
pop
mov
or
jb
xchg
test
stos
add
popf
mov
notb
test
out
cmc
in
and
int
or
cwtl
stos
inc
add
xor
xchg
pop
xchg
and
inc
xor
bound
mov
cmp
xor
into
jnp
sarb
push
orb
mov
pop
or
iret
fistpll
mov
lret
ljmp
inc
jbe
add
mov
push
jecxz
sbb
pop
lret
jae
pop
mov
cmc
in
pop
xchg
bound
mov
mov
pop
jns
jne
popf
adc
mov
inc
cmp
jae
vmovdqa
jge
or
scas
xchg
mov
add
dec
imul
add
adc
mov
std
jbe
adc
add
fstps
loopne
mov
popa
xor
xchg
sti
adc
inc
or
mov
mov
into
fdivr
imulb
xor
jae
and
aam
test
pop
or
push
adc
nop
jge
subb
dec
sub
test
jp
jnp
call
je
xchg
cmp
dec
xor
push
adc
add
dec
clc
and
icebp
pop
les
adc
fcoms
icebp
lret
fld1
ret
test
imulb
add
out
sub
add
idivl
mov
fidivs
dec
sub
xchg
insl
ss
sbb
mov
repz
outsb
mov
pushf
inc
out
pop
push
or
rcl
mov
sbb
rcl
ret
push
adc
movsb
pop
fisubl
xor
not
inc
add
into
lods
sbb
xor
dec
mov
mov
fidivs
inc
adc
xchg
mov
jp
fiaddl
cmp
or
add
or
mov
or
ja
in
test
inc
test
cmp
test
lods
cmp
mov
cmpsl
call
mov
in
popf
push
sub
mov
aaa
iret
mov
call
dec
lock
std
repnz
inc
movsb
push
mov
cwtl
lahf
mov
test
insl
out
adc
leave
scas
arpl
arpl
push
inc
dec
xchg
push
orb
rolb
xchg
cmp
mov
testl
push
dec
adc
in
mov
cmp
mov
subl
push
sbb
add
repz
cli
adc
cltd
mov
dec
test
cmp
mov
rcrb
dec
pop
data16
stc
and
dec
sub
mov
and
cmc
fsubr
subl
pop
fcmove
jb
es
repnz
jae
jae
mov
and
pop
bound
push
movsb
ds
popa
add
jae
xor
add
sbb
mov
adc
xchg
insb
and
sbb
nop
xchg
out
cld
jg
lret
mov
or
sahf
xchg
je
ljmp
pop
xchg
repz
test
lret
test
cmp
cld
mov
xchg
aas
mov
mov
jns
loopne
or
jecxz
mov
sub
sbb
jne
icebp
adc
ja
cs
adc
xor
sti
sbb
adcl
jge
outsb
add
xor
sti
adc
and
nopl
pop
xchg
mov
mov
mov
js
je
dec
jb
adc
ljmp
xchg
lock
add
mov
fcompl
gs
bound
test
movsb
arpl
les
jp
cmp
xchg
andl
test
repz
fisttpll
pop
pop
aas
jmp
std
inc
xor
test
fadds
mov
fcoml
jo
xchg
loop
rclb
cltd
fcos
cmp
inc
sub
jl
push
leave
add
add
popa
xchg
inc
lods
ljmp
pop
mov
mov
add
sub
mov
in
fisttpl
lods
pusha
cltd
cmc
cmpsb
cmp
xchg
mov
in
das
scas
or
leave
push
xor
lcall
inc
daa
sub
cld
cmc
mov
lea
push
xchg
sbbb
mov
ja
fdivrp
push
in
mov
jnp
adc
mov
dec
cmpsl
clc
pusha
mov
int
adc
in
mov
xchg
faddl
lcall
out
push
adc
daa
pop
jle
pop
shll
lret
jo
xor
ror
push
dec
cs
xchg
jb
adc
or
int3
test
roll
out
insl
xchg
insl
lahf
popf
xchg
scas
pop
push
sbb
and
gs
push
mov
jns
xor
push
out
sub
mov
xchg
cltd
ljmp
mov
pop
ret
mov
lods
pushf
adc
fwait
push
aaa
popa
xchg
into
nop
out
in
adc
cmp
jb
popf
outsb
dec
test
popa
aad
xor
adc
out
xor
iret
repnz
lods
pop
imul
jecxz
movsl
in
repnz
mov
sbb
sti
lret
ja
xor
dec
imul
cmpsl
or
jb
rolb
mov
aad
ja
add
nop
cwtl
mov
pop
and
aad
addl
pushf
sbb
cmc
mov
into
xor
popa
add
cmc
pop
sbb
jne
xchg
xor
pop
cmpsl
nop
ficompl
cmp
jecxz
test
cmpsb
daa
adc
daa
in
ud1
int3
jae
mov
pop
cmp
movsb
mov
pop
lcall
shll
cli
mov
adcl
push
in
push
cmpsb
test
lret
adc
jg
nop
pop
js
push
xor
cs
mov
dec
dec
xchg
mov
cmp
mov
or
or
or
mov
ljmp
jl
mov
fstpl
dec
sub
sub
sbb
jnp
sbb
insl
push
test
cmpsl
lret
test
popa
mov
test
sub
push
loopne
adc
cmp
mov
adc
mov
cli
cmp
inc
xorb
cmp
into
sbb
arpl
fwait
imul
inc
sub
mov
or
jmp
xchg
bound
mov
sbb
int3
ficoms
inc
ret
inc
insb
gs
inc
jo
test
notb
inc
push
inc
cltd
xchg
jl
repnz
sub
cmpb
dec
cmpsl
inc
nop
mov
lods
dec
or
hlt
push
out
cld
add
xor
cld
shrl
xchg
in
mov
push
pop
int3
pop
jge
mov
aaa
inc
inc
inc
repnz
cmc
lods
cmp
xchg
or
jmp
mov
xchg
or
pop
cmp
xchg
xchg
mov
adc
pop
pop
insl
pop
adc
leave
iret
out
fimuls
push
rcrb
in
stos
ss
lret
jb
shrl
sub
pop
jl
add
cmpsb
xchg
or
or
mull
jno
scas
mov
ds
sub
xor
rorl
mov
and
insb
lret
push
xorl
mov
scas
jnp
into
imul
xor
push
mull
adc
pop
daa
leave
orl
pop
mov
mov
mov
in
outsb
add
clc
adc
gs
nop
sub
dec
repnz
dec
add
shrl
jb
pop
inc
or
sbb
lea
or
into
and
inc
adc
push
aas
insl
cmp
push
movsb
aas
repz
orl
cmpsb
ljmp
push
xchg
rorl
lods
imul
lods
cmp
lcall
xchg
fstps
sahf
decb
mov
cli
jle
in
ret
sub
mov
dec
psllw
inc
insl
xor
js
aam
data16
arpl
inc
and
mov
ret
xchg
jae
sahf
dec
cmp
xor
xor
pop
mov
pop
scas
imul
pop
inc
pop
ficoms
pop
js
push
add
push
fidivl
pop
in
sub
test
insl
xor
lock
pop
iret
xchg
data16
sub
push
adc
jbe
mov
lahf
xchg
push
aas
leave
mov
sub
and
mov
push
test
adc
enter
sbb
popf
push
dec
loopne
ja
ljmp
psubd
enter
stos
or
pop
xor
lods
push
and
in
pop
and
sub
xor
mov
sbb
push
pop
mov
jmp
loopne
loope
cmp
push
add
stc
push
fwait
test
data16
add
das
andb
mov
xchg
jo
call
jbe
or
push
cmp
inc
out
out
test
dec
icebp
enter
push
out
sbb
xchg
int3
je
push
inc
adc
mov
adc
jno
mov
xor
pop
inc
cmp
jmp
das
xor
pop
out
push
movsb
lods
sarb
sbb
cmpsl
jns
ljmp
pushf
inc
mov
test
or
mov
in
cld
xor
push
imul
xor
repz
push
xlat
xchg
push
sbb
xchg
nop
popa
aas
call
addl
mov
or
xchg
shl
mov
lret
addr16
xchg
stos
divb
and
mov
mov
push
cmp
imul
aad
mov
daa
in
popf
addr16
push
fistl
xor
cld
push
xor
imul
scas
lret
xchg
sub
mov
ror
repz
lods
je
pushf
adc
test
mov
dec
or
pushf
push
std
int
aam
cmp
sbb
stos
push
and
mov
sbb
test
lahf
divb
loope
xchg
sub
test
jl
adc
ret
xor
pop
pop
mov
inc
hlt
pusha
add
mov
test
sbb
jge
pop
cmpsl
mov
cmp
aam
das
int
filds
mov
sahf
sbb
push
mov
mov
shrb
scas
adc
shll
stos
fldcw
pop
push
and
sti
jg
fistps
cs
jecxz
jmp
dec
movsb
and
dec
nop
cmp
clc
ljmp
pop
inc
out
mov
sbb
xchg
cwtl
iret
pop
mov
jp
or
dec
dec
jns
outsl
cmp
call
xchg
enter
fstpl
cmpsb
fsts
xor
pop
flds
pop
xor
ss
cld
cmpsb
jle
jb
cld
popa
xchg
sub
fadd
add
pop
rolb
adcl
cli
test
clc
dec
lret
xchg
sbb
add
sbb
or
mov
addl
mov
sub
imul
int
mov
rcl
xchg
clc
mov
imul
leave
bound
push
stos
lret
pop
stos
and
mov
jmp
sbb
lock
lock
lcall
rcrl
hlt
pop
mov
xor
push
add
sti
adc
sub
adcb
mov
imul
ja
clc
mov
sub
jg
addl
sbb
sub
movsl
les
lods
sti
sub
orb
mov
sub
imul
and
xor
jb
dec
nop
sbb
insl
imul
out
je
xchg
loope
popa
jmp
loopne
mov
jecxz
mov
mov
fnstenv
cmc
sahf
aad
pop
cltd
xor
clc
dec
iret
movsl
push
or
int
xchg
lahf
test
xor
adc
cmp
add
mov
popl
outsb
inc
sub
jle
call
es
mov
mov
pop
enter
fincstp
xor
enter
add
pop
outsb
push
xor
xchg
lock
lret
ret
clc
pop
and
dec
jne
or
inc
mov
push
jmp
mov
dec
fdiv
push
movsl
daa
mov
xor
mov
call
sub
clc
push
xchg
js
mov
push
mov
stc
leave
icebp
in
xchg
sub
or
pop
push
bound
outsb
pop
pop
mov
loop
and
xchg
je
cmp
rolb
sub
rcll
cli
cmp
lods
out
cltd
lods
dec
lods
mov
les
add
xchg
dec
shll
xchg
aad
cmpsl
mov
xchg
xchg
out
in
or
cwtl
hlt
pop
aas
stos
dec
inc
stos
jmp
ljmp
xchg
sbb
stc
mov
dec
push
mov
lcall
cwtl
negl
cmp
jbe
test
icebp
bound
in
add
mov
stc
syscall
xor
xor
and
out
xchg
push
sahf
inc
dec
pusha
push
push
lods
aam
xchg
repz
pop
loopne
addr16
popf
int3
lahf
mov
mov
cmp
jle
pop
jl
and
ljmp
inc
pusha
test
inc
adc
dec
xchg
jnp
and
jne
flds
xor
jp
jl
sarb
jp
sbb
repnz
sbb
jne
pop
sti
mov
and
xor
out
scas
jmp
pop
inc
mov
dec
pop
xchg
decl
addr16
xor
and
icebp
js
xchg
push
jnp
mov
adc
fstpl
and
cmc
outsl
push
add
and
fisubrl
movsb
pop
mov
mov
test
xchg
leave
jno
cltd
fxch
push
outsl
fadd
xor
in
fldt
adc
test
xchg
sbb
pop
jmp
add
dec
repnz
leave
mov
sti
adc
mov
popf
out
mov
or
mov
movsb
push
sub
jle
sub
or
xchg
inc
cmp
add
std
mov
int3
lret
xchg
decb
push
cmpsl
fucomip
pop
pop
jne
out
push
test
ljmp
or
pop
sbb
sarb
insb
adc
lret
dec
mov
mulb
fs
pop
mov
icebp
add
xor
jl
scas
xor
nop
int
sub
xlat
push
mov
mov
dec
sub
mov
pop
jmp
jae
lods
pop
pop
pop
icebp
lahf
lock
inc
je
mov
xchg
push
sub
adc
push
stos
push
sub
cld
loop
lahf
ljmp
xchg
mov
sub
add
mov
push
jmp
mov
int
mov
and
loop
xor
push
pop
pop
cs
dec
jl
inc
jge
jmp
pop
dec
lcall
aad
cmpb
std
into
push
clc
int3
mov
jnp
mov
jg
xchg
dec
mov
enter
push
xchg
push
xor
and
mov
dec
cmp
pop
push
pop
sub
das
stos
movsl
leave
mov
add
fnstsw
xchg
inc
add
mov
je
sbb
mov
jle
cmp
and
jns
cmpl
enter
sti
pop
dec
mov
out
gs
int3
inc
insl
cmp
js
push
jp
hlt
xchg
mov
inc
sbb
shll
mov
int
mov
ja
jecxz
xlat
mov
fildl
xor
insl
addr16
xchg
daa
push
push
sbbl
adc
js
and
lcall
pop
or
pop
scas
out
mov
inc
push
mov
dec
sbbl
mov
mov
repnz
das
cmpsl
and
aad
mov
dec
jecxz
or
and
xlat
sub
inc
in
lds
roll
repz
pop
pop
clc
in
mov
mov
ret
dec
call
cmc
int
cmp
mov
and
cmpsb
mov
fists
xchg
shll
popf
fstpl
pop
fs
inc
cmp
das
fwait
ret
cwtl
jmp
inc
in
or
push
mov
out
sbb
lea
push
es
mov
orb
pop
cmc
or
andl
jbe
insb
lret
mov
bound
sbb
fcompl
pop
pop
xor
aaa
inc
mov
movsl
loope
out
cmp
xchg
add
mov
insb
scas
inc
inc
unpcklps
xchg
std
ret
sarl
mov
lahf
fdivl
dec
aad
cmp
sub
and
jecxz
sarl
aam
sub
jl
sbb
mov
ret
pop
add
out
dec
xor
dec
sub
dec
adc
stos
sub
push
inc
and
pop
jecxz
cltd
fadds
pop
jp
xor
or
cmpsl
push
pop
js
dec
movsl
sti
gs
stos
out
mov
xchg
leave
sahf
nop
xchg
sub
pushl
cmp
in
movsb
outsb
jne
push
sub
inc
cwtl
mov
fldt
inc
test
cmpsl
xchg
mov
xchg
xor
inc
pop
jmp
xchg
mov
idivl
das
adc
rclb
dec
loope
and
fwait
dec
cs
in
fsub
xchg
push
dec
fiadds
fdivs
pop
arpl
aam
mov
ret
jle
pop
xchg
mov
lret
imul
fxch
mov
sbb
arpl
ror
sbb
cmpsb
or
lret
aam
push
lcall
jmp
out
inc
stos
pop
or
fdivrl
mov
push
ss
xor
hlt
loop
stos
mov
xor
jnp
pop
push
sarl
jge
fmuls
das
mov
mov
and
pop
gs
sbb
mov
jb
and
hlt
xchg
sarb
sub
or
shl
idivb
mov
or
xchg
pop
leave
and
pop
cmc
adc
std
mov
sti
stos
ja
std
inc
outsl
rolb
xor
pop
lahf
add
sub
add
dec
inc
jecxz
add
pusha
lock
in
jmp
imul
sbb
and
loope
cmp
movsb
adcb
add
insl
cmpsb
shll
pop
scas
jo
and
jmp
adc
xchg
and
dec
lret
in
inc
push
int3
inc
adc
add
mov
loopne
push
inc
and
xlat
popl
mov
ja
in
lret
mov
push
jge
aas
ror
lahf
pop
dec
dec
rcl
lock
adc
xchg
ds
add
js
movl
ljmp
or
xchg
xchg
cld
sub
mov
add
movsl
jne
pop
dec
push
out
aam
mov
xchg
or
mov
addr16
cmp
add
xchg
mov
cmpsl
xor
or
mov
sarb
es
popf
pop
test
adc
inc
xchg
test
push
jle
add
xchg
aaa
push
mov
adc
inc
das
aad
jle
cmp
pop
or
ds
push
pop
dec
mov
xchg
xchg
mov
mov
pop
lret
add
jne
mov
jns
jmp
jmp
test
dec
inc
push
fs
cmpsb
add
dec
xchg
nop
andl
push
or
lcall
xchg
outsb
sbbl
add
pop
gs
pusha
push
mov
add
roll
xlat
scas
pop
add
pop
lods
iret
loop
and
outsb
sbb
sub
mov
fildl
js
std
push
out
sub
ds
les
xor
lcall
fsubrs
cmp
jae
push
xor
mov
cmc
push
xorl
xor
sub
stc
xchg
or
insl
xor
andl
pushf
dec
or
outsb
lret
mov
fildll
orl
rcrb
lds
jno
adc
pop
jo
adc
jns
mov
outsb
mov
xchg
stos
mov
cmpsb
cli
xchg
sub
and
inc
icebp
test
leave
or
mov
jg
mov
bnd
xchg
test
fnstcw
outsl
inc
dec
out
cmpsb
pop
dec
aad
inc
sbb
sarb
stos
lea
inc
fs
outsl
mov
cli
and
pop
sbb
loop
xchg
cli
notl
xchg
ja
xchg
lock
pop
fsin
mov
mov
jae
insb
icebp
das
mov
inc
push
xor
testl
lock
fstpt
popf
fsts
cmpsb
lds
ret
jns
mov
sbb
jne
fistpl
or
jns
fildll
loope
cmpsl
mov
notb
and
inc
jbe
mov
or
lahf
pop
pop
out
inc
cmc
mov
js
negb
or
ljmp
xchg
iret
mov
cmp
xor
fsubr
jo
das
aaa
rcrl
push
mov
xchg
fstpt
ja
movsl
dec
lock
xchg
inc
adc
xor
cmp
sahf
sbb
cwtl
mov
mov
gs
lods
cwtl
ja
push
mov
es
sub
inc
pop
inc
hlt
pushf
ret
addl
xor
sbb
js
mov
fidivl
inc
icebp
orl
pop
stc
dec
xlat
movsb
inc
dec
mov
and
testl
inc
aaa
mov
push
mov
gs
sbb
subb
jae
popa
add
insl
ret
adc
sti
mov
mov
fidivl
xchg
push
lret
adc
push
mov
fs
or
lret
jge
xor
fcoms
lock
pop
in
jnp
sti
ja
js,pn
shlb
repz
dec
movsl
lods
sbb
mov
mov
push
push
enter
sub
sbbl
jne
sbb
addl
fcoms
ds
or
cs
cli
pusha
clc
arpl
fstpt
divb
scas
shlb
icebp
dec
mov
in
mov
mov
idiv
loopne
and
xchg
mov
push
fldl
ds
or
xchg
jbe
dec
sbb
jmp
jge
sbb
data16
movsb
das
and
jae
or
icebp
stc
xor
jnp
xor
cmp
sbb
mov
out
enter
lcall
je
arpl
orl
fidivrl
mov
ja
push
mov
inc
dec
scas
imul
out
scas
dec
les
sub
sbb
js
sub
bound
insb
aad
and
paddw
int3
cmpsb
leave
pop
push
jns
jnp
loop
in
idiv
pushf
aas
fsts
sbb
pop
xchg
das
sbb
mov
jle
or
int3
dec
jp
in
xor
pop
ss
ss
mov
mov
add
int
in
push
jae
xchg
push
xchg
loope
add
sti
pop
inc
aam
jp
dec
mov
jecxz
jp
cmp
popa
jge
ljmp
inc
lods
inc
mov
sbb
lcall
stos
xchg
ja
pop
sbb
iret
gs
repnz
push
xor
jno
cmp
shrl
aas
adc
popa
sub
mov
in
xor
rclb
imull
repz
lods
adc
ja
repz
aas
popa
and
and
sub
aas
js
js
popf
nop
cmpsl
inc
sub
out
enter
cmc
mov
sub
xchg
cmp
inc
dec
notb
aaa
cltd
shl
out
fidivrl
arpl
sub
xor
mov
dec
xorl
mov
jb
cmpsl
pop
cs
cwtl
adc
dec
int3
dec
cltd
repnz
cli
sub
out
fwait
push
loopne
dec
nop
ss
pushf
arpl
xchg
adc
into
imul
ljmp
stos
adc
sbb
icebp
pop
mov
xor
dec
sbb
mov
add
adc
jb
rcll
sarl
push
mov
cmc
ja
add
push
jns
mov
adc
push
loopne
or
addl
cli
bound
sbb
jl
cmp
push
pop
xor
dec
scas
pop
mov
xor
and
ljmp
add
cld
sbb
pop
jg
arpl
sub
pop
add
fidivl
testl
xor
cmp
test
loope
bnd
repz
ljmp
inc
ret
addr16
clc
fmull
fldcw
adc
xchg
ret
dec
lahf
popa
mov
mov
push
push
nop
or
iret
setl
je
lcall
cmpsl
in
sbb
popf
pop
xchg
lret
out
mov
rcll
cmpsl
sti
sbb
scas
jmp
sbb
pop
flds
mov
sub
outsb
push
idivb
in
fdivs
jae
cmp
jmp
jecxz
sub
mov
imul
cwtl
scas
dec
adc
and
lods
xor
jp
mov
int
adc
xchg
xchg
clc
push
insb
adc
outsb
jg
popa
test
inc
mov
and
stos
mov
ret
mov
shrl
aas
bound
rclb
mov
cmp
dec
lods
popa
cld
jo
jg
add
cmp
jge
push
pop
leave
das
movsb
jb
nop
jge
sbb
sub
cmp
mov
mov
adc
add
dec
inc
pushf
aad
cli
push
mov
and
mov
mov
adc
or
inc
clc
mov
mov
test
cmp
jb
mov
ret
sbb
xchg
das
dec
push
pusha
dec
lret
int3
lods
sbb
aam
pusha
cmpl
or
cmpsb
gs
push
mov
mov
int
and
dec
jne
mov
sbb
add
mov
jg
call
push
jp
cltd
repz
pop
loop
or
cwtl
mov
insl
adc
mov
cmpsb
orl
mov
callw
pop
fldenv
mov
xlat
addl
fsubl
test
rorl
adc
mov
jl
into
in
cmp
jl
cld
es
into
adc
xor
jo
leave
adc
nop
adc
dec
test
int
stos
mov
fidivrs
fs
in
stos
dec
ja
gs
pop
and
jns
pop
lret
add
push
mov
dec
sbb
rcrl
xlat
iret
pop
das
in
or
add
sbb
and
mov
inc
scas
push
cli
add
lret
movsb
cmpsb
sahf
lods
popf
jno
sub
gs
call
jae
imul
daa
add
test
adc
movsb
outsl
sahf
lods
pop
int3
adc
das
pop
sub
xor
loope
ss
jecxz
xor
orb
sub
jg
cmc
xchg
inc
lods
fisubl
ja
pop
sbb
aad
inc
std
leave
out
cmc
test
je
add
lahf
nop
scas
cmp
shll
out
xlat
jb
sbb
sub
cmp
jmp
hlt
xor
pop
mov
jge
gs
inc
ret
jecxz
outsb
aad
adc
inc
xchg
shll
loopne
xor
mov
aaa
dec
push
cli
ficomps
rcl
add
cmp
mov
inc
xorb
movsb
mov
mov
jnp
and
push
mov
fcoms
call
lret
and
adc
push
bound
cltd
pushl
insb
inc
lret
adc
in
sub
repnz
pop
cmp
jg
jne
out
cmp
lock
in
scas
test
xor
inc
in
lea
cli
push
js
bound
arpl
mov
movsb
mov
ja
dec
jge
xchg
rcrl
shlb
scas
add
jb
push
enter
cwtl
rcll
aas
sub
int3
mov
dec
push
dec
lds
jle
cmp
pop
sahf
fdivp
lcall
scas
dec
outsb
clc
fwait
adc
or
aas
adc
jno
mov
jp
in
loop
mov
add
repnz
pop
mov
xchg
insb
imul
push
ja
js
loop
push
adc
sbbb
push
shlb
repnz
gs
xchg
sarl
popf
mov
pop
ja
add
ret
and
js
xchg
sub
subb
es
mov
jno
int
or
cs
cmp
push
push
aad
inc
dec
cmpsl
call
sbb
outsl
jae
xor
dec
fnstsw
mov
mov
or
pop
xchg
pop
mov
lahf
mov
mov
add
mov
cs
dec
mov
aas
mov
pop
add
fistpl
stc
mov
jo
lods
in
fs
or
pop
adc
pop
cwtl
add
inc
cmp
xchg
and
jns
push
push
div
mov
addr16
gs
mov
scas
fidivrs
push
repz
sbbb
inc
ficoml
pop
unpckhps
int3
sbb
push
pusha
mov
jle
xchg
mov
xor
bound
cmpsl
jp
cmpsl
pop
cmc
and
repz
test
adc
jp
add
aad
repz
mov
mov
add
mov
repnz
mov
pushf
lahf
and
shlb
stos
fidivrs
and
movsb
pushf
arpl
cmp
les
fucomp
mov
ficompl
das
xchg
pop
cmp
xchg
or
xor
dec
mov
push
ljmp
insb
out
push
adc
stos
daa
jns
mulps
push
xor
lahf
icebp
mov
sub
in
test
adc
cmp
sub
adc
sti
jae
out
mov
out
pop
and
jp
rclb
enter
mov
andl
fwait
jae
and
pushl
addl
mov
pop
xchg
repnz
push
movsb
push
sbb
xchg
or
pop
mov
lds
mov
imul
mov
or
and
dec
cmp
sahf
lahf
fmul
xchg
cmp
int
jmp
lods
xchg
jp
xchg
sbb
scas
jg
cmpsb
aaa
pushf
pop
or
or
loopne
nop
jmp
lods
mov
notl
pop
mov
popa
lds
test
or
into
cli
mov
shll
jo
push
push
mov
fmull
dec
add
js
adc
jecxz
jns
cmp
mov
cmp
fmul
test
movsb
mov
sbb
jb
jle
fs
xchg
mov
aam
push
jmp
or
or
mov
cmp
push
insl
jp
jo
shlb
add
xchg
stos
adc
jle
add
push
lahf
add
push
movsl
aad
and
mov
push
sub
out
les
pop
shlb
fs
inc
mov
mov
dec
testb
xor
xchg
or
repz
sbb
jle
out
je
mov
jmp
movsl
std
inc
int3
push
dec
xchg
mov
jg
mov
jne
movsl
out
dec
sub
lret
setae
mov
inc
dec
movsb
mov
dec
and
cmp
mov
fmull
cmp
cmpsb
testl
push
pop
mov
cmp
add
fdivs
sub
aas
dec
mov
jle
or
dec
inc
xor
pop
xchg
outsl
jmp
hlt
in
xchg
mov
sarl
add
dec
dec
leave
out
ss
mov
and
pop
adc
ja
xor
out
xchg
mov
fdivrp
andb
cs
mov
arpl
fildl
dec
push
mov
inc
mov
pop
movsb
loop
jge
stc
lahf
xchg
bound
sub
push
int
mov
std
lret
mov
mov
dec
or
jb
out
loope
jecxz
jp
inc
inc
lret
mov
pop
out
lret
js
push
and
push
xor
push
repnz
daa
or
sarl
xchg
divl
repz
adc
mov
sbb
out
inc
loopne
popf
jns
stos
xchg
push
and
stos
pop
popa
and
mov
fldcw
sbb
cmc
add
lcall
xchg
and
ret
jns
out
dec
sbb
aaa
cmc
ror
and
sbb
jle
jmp
xchg
gs
and
rol
stc
repz
mov
rcll
jb
jno
dec
scas
adc
mov
ss
mov
push
jge
dec
rol
les
push
pop
jp
arpl
or
pusha
push
lods
fnstsw
pusha
sub
fmul
sub
in
dec
int3
rorl
vpsrlw
pop
inc
test
xchg
bound
mov
jne
das
arpl
lds
mov
jl
inc
fucomp
fisttpl
and
jecxz
inc
into
sbbb
push
cwtl
insb
lret
movsl
add
push
repnz
xchg
jnp
mov
ret
xchg
xchg
arpl
pop
mov
js
and
in
jp
repnz
test
mov
fwait
dec
enter
divb
pop
fsubl
das
push
mov
or
and
aam
xchg
sub
dec
lcall
in
repz
inc
add
loope
xchg
push
add
sbb
sbb
mov
push
adc
leave
mov
out
enter
or
data16
ljmp
xchg
repnz
add
cmp
subl
incb
jle
adc
mov
dec
or
hlt
loopne
inc
ja
dec
add
mov
jmp
pop
jno
pop
xor
xor
jo
daa
lods
jo
push
inc
cli
push
mov
cmp
fs
pop
pop
test
pop
lret
jl
imul
into
pop
and
imul
and
mov
rolb
mov
pop
sbb
jb
loop
cmpsb
inc
add
sbb
add
mov
dec
xchg
scas
sbb
mov
int3
sub
je
cmp
lcall
and
leave
stos
mov
nop
not
shrl
popf
xchg
adc
decl
rolb
in
pop
cmpsl
insl
lret
pushf
mov
add
xchg
pop
jae
imul
popf
cmp
and
pop
out
sbb
cmp
sub
jge
pop
jnp
sbb
xchg
rcrb
inc
fidivrl
outsl
add
mov
bound
push
push
xchg
js
jno
lcall
jge
jecxz
shl
test
inc
dec
rcl
mov
insb
incl
and
add
loop
mov
daa
arpl
cmpsl
add
inc
sub
daa
rcll
mov
or
mov
int
lods
xor
rclb
or
pop
bound
jg
out
mov
mov
jb
pop
adc
fidivl
and
cmp
adc
insb
cmpsb
fidivrl
pop
xchg
pop
adc
movsl
cwtl
imul
and
into
imul
pop
mov
pop
mov
repz
or
iret
fincstp
icebp
xor
fnstcw
lock
cmp
jg
cmp
in
dec
xor
aam
jne
pop
add
sbb
adc
repz
xor
pop
lcall
jl
out
and
xlat
push
rorl
pushf
jmp
sub
push
shl
pop
test
cmp
pop
bound
test
test
mov
fcmovnb
cltd
xor
xchg
leave
pusha
popf
jle
fstl
mov
cli
shlb
shl
push
addr16
nop
fstps
cs
push
add
int
and
mov
in
jmp
shll
cmp
ds
jne
scas
repz
adc
xor
lcall
jle
push
notb
xor
imul
lods
dec
leave
jno
adc
push
icebp
sbb
test
data16
fs
sub
mov
mov
xchg
cmpsl
int3
push
jae
cmpl
clc
add
add
xchg
pop
mov
mov
sub
xchg
addb
out
cmp
loopne,pt
and
push
inc
lret
cmp
adc
div
jl
or
xchg
pop
aad
ja
shr
loop
mov
sub
in
adc
sbb
mov
cld
sub
mov
jp
fwait
lret
aam
lods
cmp
lret
pop
in
loopne
add
sbb
xchg
adc
mov
adc
es
enter
out
sub
sbb
add
icebp
xor
push
xor
jb
out
and
in
ficoml
imul
ret
movsb
pop
insl
lea
or
in
loop
push
sub
rorb
fistl
gs
das
cs
insb
jns
fcmovnu
inc
xchg
adc
sub
dec
inc
jle
pop
das
adc
ret
ret
adc
dec
aad
dec
sub
outsl
fs
add
push
or
xor
cld
and
fisttpl
sub
int
sahf
test
jecxz
mov
inc
sub
xchg
inc
mov
jb
ret
push
ret
insb
lret
mov
cmp
fistl
pushf
inc
ret
pop
xchg
stos
mov
cmp
cld
lahf
ret
das
push
mov
inc
add
or
pop
jno
push
imul
test
in
and
mov
xor
insl
insb
and
adc
sbb
es
scas
lahf
dec
jae
subl
cmp
xchg
pop
jne
mov
subb
inc
mov
pop
xor
jo
aaa
fcmovnb
cld
xchg
mov
outsb
inc
fildl
movsb
push
call
sarl
mov
mov
cmp
pop
ljmp
push
cs
adc
icebp
mov
and
rcl
push
ret
adc
sbb
in
xor
sub
jge
jmp
aam
inc
and
sahf
add
mov
dec
ficompl
jne
pop
jo
and
sti
push
loop
into
jg
push
in
inc
adc
xchg
addb
mov
cmp
out
int
aad
fdivs
mov
dec
lea
xchg
xorb
das
jae
bound
mov
mov
jbe
mov
sub
lea
cmp
mov
clc
cmp
add
mull
and
mov
test
adc
dec
xchg
mov
lea
shll
jno
cltd
mov
cmp
inc
je
inc
in
mov
add
inc
cmp
stc
cmp
out
in
popa
lret
sbb
push
pop
iret
rclb
xchg
cmp
movsb
ficoms
push
pop
sbb
aad
outsb
inc
pushf
xchg
cwtl
sub
xor
mov
and
pop
movsb
mov
loopne
in
add
test
xchg
dec
icebp
push
mov
rolb
push
lock
jg
scas
mov
in
dec
pop
pop
push
sub
leave
rorl
pop
jg
movsl
mov
je
mov
inc
test
fsts
call
pop
sub
pop
hlt
sbb
jmp
push
repz
int3
mov
stos
sbb
and
outsl
out
cli
rorl
jns
je
imul
mov
lods
les
mov
jle
mov
sbb
push
sar
mov
lret
ljmp
sarl
mov
pop
test
xchg
andl
inc
sub
adc
mov
pop
jmp
mov
dec
ret
dec
sub
push
or
adc
stc
daa
sbb
pop
aam
mov
sub
enter
xor
push
mov
jle
dec
sbb
aas
mov
pop
push
dec
je
stos
xchg
daa
int3
sub
mov
add
ss
cli
mov
cmp
pop
mov
lods
andl
popa
sbb
push
pop
mov
jbe
addr16
pop
mov
sub
stos
add
call
sub
call
mov
imul
cmpb
mov
sub
jae
addr16
push
xor
aaa
movl
in
loop
dec
pop
push
sub
pop
push
mov
aam
or
hlt
push
addl
cmp
inc
ja
push
addr16
into
sarb
xchg
lods
sub
pop
sarl
push
inc
cmpsl
lods
xor
mov
dec
sbb
ret
pusha
test
xchg
cmp
cmp
repz
sbb
and
inc
pop
sbb
mov
or
pop
jecxz
bound
jbe
adc
xlat
fs
test
in
and
leave
xchg
xchg
mov
mov
mov
fnstcw
sbb
shll
stc
sub
xor
int
fnstenv
cltd
fists
loope
mov
sbb
sub
mov
jns
jmp
sub
cmpsl
ss
addr16
mov
lret
les
add
adc
mov
and
popa
outsl
push
and
pop
or
notl
add
mov
loop
xchg
fwait
mov
cli
push
aam
xor
imul
rcrl
loop
mov
and
adc
stc
mov
mov
mov
sbb
sub
mov
clc
xor
push
shlb
ljmp
aaa
sub
mov
lret
fcmovne
jo
push
mov
sbb
les
leave
dec
cmc
push
xor
push
mov
cmpsl
das
jge
mov
and
bndldx
rcll
popa
sbb
mov
rcr
cmp
clc
int3
mov
mov
and
test
pop
mov
stos
scas
sbb
or
scas
push
cli
xchg
pop
lcall
add
lret
jne
mov
mov
xchg
and
pop
jge
test
insb
pusha
mov
push
sub
xchg
or
mov
mov
add
enter
jg
outsl
sbb
mov
mov
jo
cli
add
loopne
push
xor
cltd
or
fcoml
sub
mov
jb
xchg
cmp
out
xchg
and
lret
idivl
repz
into
arpl
adc
rcrb
add
dec
pop
sbb
dec
mov
pop
insl
ja
cmp
adc
gs
mov
cmp
pop
adc
xchg
mov
popa
pop
sub
aaa
sub
hlt
adc
in
call
cli
lods
sbb
lods
int
mov
pop
jae
adc
and
inc
and
pop
push
mov
sub
dec
and
in
test
imul
ret
mov
xor
out
cmp
out
jns
dec
jns
push
andb
push
inc
sbb
out
xchg
push
test
push
call
inc
test
mov
mov
cs
mov
arpl
push
daa
xchg
lds
pop
inc
xchg
scas
cmp
jae
sbb
add
add
mov
and
mov
mov
xchg
insl
dec
in
movsl
repnz
cmp
jge
loop
cmp
pop
paddsw
inc
stc
mov
pushl
jae
cmp
push
xor
xchg
ja
loop
adc
adc
test
pop
mov
es
push
in
je,pt
xor
mov
lods
and
jne
pop
pop
lock
add
pushf
popf
xor
lock
rcrb
pop
sub
sub
inc
sub
xchg
adc
hlt
mov
xor
adc
mov
iret
or
pop
imul
sub
and
sbb
mov
in
fidivs
fcomi
rcrb
cmp
sub
ja
push
jne
add
insl
inc
repz
pushf
mov
dec
pop
aas
std
in
aam
add
cmp
js
mov
ret
push
adc
inc
push
out
scas
loopne
rcr
mov
push
and
pusha
outsl
fdivr
ret
ja
inc
and
pop
stc
loope
movsb
dec
cs
inc
add
movsl
mov
or
xchg
push
ret
lret
arpl
mov
cmp
cmp
sub
push
mov
add
lods
cs
enter
mov
rcrb
inc
popf
cld
ja
inc
sbb
decl
inc
jmp
test
scas
push
mov
mov
in
jecxz
mov
stos
jb
roll
push
lods
mov
mov
pop
outsb
cmp
pushf
rcrl
dec
dec
adc
jmp
add
es
out
adc
sub
loop
jmp
loop
iret
adc
inc
cmpsl
neg
jmp
cltd
lret
es
in
xchg
ror
mov
icebp
lods
fimuls
pop
inc
push
std
insb
xchg
je
inc
push
dec
ror
mov
mov
xor
cmpsl
add
pop
mull
fwait
sbb
pop
lret
xor
mov
nop
xor
jg
bound
pop
xor
sub
jno
stc
xor
sahf
pusha
push
inc
insb
lahf
aaa
mov
add
pop
mov
ss
adcl
cwtl
lahf
pop
or
in
enter
xchg
xchg
sbb
adc
xchg
xchg
push
push
sub
xchg
ret
fimuls
mov
inc
xlat
das
sub
ljmp
mov
ja
or
mov
xchg
mov
shll
cmpsb
outsb
das
cltd
inc
mov
dec
jns
mov
xchg
jecxz
shlb
mov
ficompl
rorl
addr16
push
mov
mov
std
xorl
pop
and
mov
mov
aad
pop
iret
dec
daa
leave
xchg
mov
into
leave
mov
mov
mov
jge
loopne
fldt
or
inc
xchg
mov
decb
iret
rcll
sti
mov
mov
jecxz
sbb
add
sbb
lods
jl
pop
sub
push
clc
rorb
mov
sub
xor
and
cmp
add
mov
shll
pop
push
notb
lret
sub
dec
push
jb
bound
inc
inc
mov
or
mov
lock
and
jle
dec
sbb
or
xor
xchg
ficomps
dec
inc
xor
in
outsl
jo
es
lds
sbb
hlt
add
jbe
jae
and
js
jge
fistpll
pop
jecxz
mov
mov
fldcw
push
pusha
jp
mov
test
cmc
pop
daa
cltd
fldenv
popf
popa
loopne
inc
inc
cmp
cwtl
push
inc
cmp
jo
lahf
xor
cmc
and
mov
fldt
insb
cmp
test
lods
pop
add
mov
in
or
ds
mov
cltd
or
lods
xor
jmp
cwtl
imulb
stos
mov
mov
adc
insl
fs
adc
cmp
add
fadds
push
jno
out
jno
repz
gs
mov
loopne
xor
dec
jb
aas
pop
ss
xchg
push
xor
mov
int3
test
outsb
xor
jns
mov
lret
bound
cltd
mov
inc
jecxz
icebp
dec
mov
xlat
pop
jp
dec
insl
and
lods
push
es
jno
lea
inc
pushf
push
pop
aaa
jmp
cmp
sbb
aas
scas
inc
or
rcl
mov
jae
inc
push
cmp
repz
mov
mov
and
mov
push
test
mov
xlat
xor
daa
push
cmp
cmp
ljmp
dec
fwait
std
sub
lahf
fabs
pop
mov
cmp
xlat
gs
push
cmp
lret
sbb
push
rcrl
push
or
pop
add
ret
outsl
inc
fnstsw
jl
into
jns
xchg
or
adc
shrb
xor
pop
ret
loop
fistl
ds
adc
fsubl
add
mov
mov
jne
leave
ss
dec
and
outsb
lea
test
cmpsb
or
or
push
rep
int3
test
inc
movsl
jge
xor
or
int3
cmp
int
out
mov
jmp
adc
nop
inc
push
xchg
xor
cld
xlat
xchg
mov
mov
or
lock
push
in
jge
pop
sub
mov
and
add
cmpsl
lahf
inc
lea
mov
mov
xor
adcl
xor
in
ja
push
adc
jnp
imul
mov
inc
xchg
add
mov
jae
lods
sbb
xchg
push
mov
dec
sub
orl
icebp
ds
cmpsl
sbb
lret
mov
lret
dec
dec
jnp
dec
out
out
mov
sub
aad
out
ja
cmp
lods
test
adc
stos
push
test
xorb
mov
fstpl
scas
pop
lds
into
mov
andb
dec
xchg
das
sub
out
add
or
mov
adc
sbb
pause
je
loope
mov
out
fimull
cmp
sbb
sbb
mov
xchg
ffree
lock
pop
lahf
xor
mov
fdivs
fdivrs
std
pushl
pop
ds
or
push
shll
shlb
sbb
insb
in
and
arpl
adc
pop
and
and
loop
data16
mov
clc
or
mov
cli
jns
xor
rol
lods
jmp
lret
in
push
xchg
push
in
dec
xchg
push
cmc
lds
hlt
mov
pushf
sub
lods
scas
divl
out
add
jmp
inc
jle
popf
stos
xchg
jl
xor
scas
stc
fldt
bound
or
mov
xchg
mull
pop
mov
push
sbb
and
cmp
cli
pop
sti
xchg
lds
xchg
enter
pop
mov
pop
sub
das
push
fsubrs
pushf
jb
dec
push
roll
ljmp
fnstsw
pop
inc
inc
push
pop
test
lock
mov
mov
push
xlat
jecxz
ja
cmc
mov
cmpsl
sub
pop
fistl
pop
sahf
stos
and
dec
pop
inc
dec
dec
adc
scas
or
cmp
push
into
dec
aas
out
cmp
faddp
sbbl
pop
add
add
jp
pusha
insl
cmp
out
cmc
cwtl
in
cmc
adc
lods
movsl
iret
or
sti
xor
jl
ds
and
test
int3
and
call
xor
cwtl
pop
sbb
rclb
inc
in
inc
jne
cwtl
or
aad
mov
mov
add
mov
push
jno
lock
inc
pop
loopne
stc
jno
or
add
add
mov
pop
dec
xchg
jno
mov
pop
push
pop
mov
negl
je
sbb
fnstsw
cmc
in
shl
sub
test
jecxz
adc
and
mov
sarb
sub
aam
jmp
cli
xor
ja
fdivrs
jno
xchg
add
arpl
jg
xorl
inc
repz
adc
fiadds
jns
jg
dec
xchg
sub
dec
dec
xchg
je
adc
sbb
pop
and
mov
pop
inc
push
rclb
mov
subl
push
or
mov
mov
add
aas
sub
xchg
arpl
sub
mov
movsb
in
lahf
mov
lods
adc
fcoms
gs
and
pop
cs
setge
sti
nop
xchg
cmp
scas
push
repz
push
mov
out
es
jns
enter
cmp
test
jmp
sbb
and
imul
repz
xor
pop
int3
incb
sbb
inc
jl
sub
lret
lcall
pop
lock
orl
add
or
sbb
ret
mov
cmpsl
or
scas
jns
and
std
sti
cmpsb
fistpl
mov
xor
sbb
arpl
lahf
sbb
stos
sub
jo
movsb
xchg
dec
cmp
cmp
cld
mov
pop
div
pusha
nop
lret
enter
jmp
dec
mov
cmp
aad
roll
ret
add
rolb
add
cmp
ficomps
jbe
es
into
and
pop
sahf
pop
adc
and
add
das
pop
pop
and
das
addr16
nop
pop
cli
aad
out
jbe
xlat
mov
imul
xor
jle
xchg
pop
scas
mov
int3
fisubl
andnps
sbb
loope
rcrb
dec
hlt
push
or
or
push
fs
dec
jle
test
and
push
into
mov
aas
mov
cmp
inc
insb
mov
dec
push
lock
fstpl
sahf
lahf
cmc
fsubrs
push
mov
cmpsb
imul
mov
and
mov
push
mov
dec
mov
gs
cmp
icebp
insb
and
cmp
sub
and
xor
xor
ja
jns
cmp
sub
repnz
cli
mov
cmp
dec
pop
mov
mov
in
sbb
xchg
ret
dec
addb
push
pop
iret
xor
pop
pop
mull
in
push
mov
mov
clc
mov
sbb
movb
or
jne
shrb
inc
addr16
add
and
scas
mov
pop
mov
jmp
sub
sub
pop
jno,pn
sbb
ljmp
ja
bound
rolb
fwait
jmp
jb
push
jnp
cld
pop
xchg
je
insb
push
xchg
adc
mov
outsb
mov
dec
xchg
mov
and
pushf
aad
loope
clc
aas
push
jmp
inc
out
lods
mov
cli
cmp
pushf
cmpsl
or
mov
mov
dec
test
dec
cmp
cli
idiv
cmpsb
mov
rorb
jl
ficompl
sbb
repz
scas
mov
cmc
popa
testl
loop
mov
leave
sub
aad
adc
pop
xchg
jno
mov
inc
scas
push
push
cmpsl
push
add
shlb
aaa
repnz
xchg
cmp
std
mov
lcall
add
data16
fsubl
or
insb
fdivrs
iret
sti
es
sbb
mov
xchg
xchg
bound
push
insb
add
xchg
loop
outsl
dec
sahf
mov
pop
icebp
mov
xchg
mov
push
xchg
pop
into
lcall
mov
test
mov
pop
cmp
xchg
addr16
lcall
xchg
add
js
loop
jae
fstpt
out
pop
daa
cli
out
roll
iret
dec
imull
lods
pop
inc
and
sub
add
mov
cmp
xlat
push
sub
mov
cmp
adc
and
jns
fwait
or
pop
popf
jecxz
aad
xchg
push
out
sbb
mov
sbb
arpl
data16
mov
push
out
sub
js
xchg
lahf
adc
call
push
loop
rcll
addr16
jecxz
xlat
xchg
pop
scas
bound
pop
in
std
adc
shr
in
or
xchg
xchg
movsb
xchg
push
cmp
cli
mov
je
je
fcoml
xchg
outsw
stc
jle
pop
xor
scas
mov
add
adc
test
pop
adc
cmpsl
in
cmpsl
rcll
arpl
loopne
popa
xchg
sti
repnz
mov
pushf
or
inc
xlat
cmp
test
jg
adc
adc
cltd
xor
ret
in
cmp
sahf
pusha
sub
hlt
imul
xchg
test
and
bnd
icebp
add
mov
cmp
push
pop
je
mov
sbb
mov
pushf
mov
nop
jbe
adc
cltd
pop
and
test
jb
mov
pop
jg
push
dec
push
xchg
mov
sbb
fucomi
xor
mov
pushf
xchg
inc
jg
fnop
mov
sbb
push
lret
inc
sub
push
sti
xchg
test
lahf
fsubs
push
jbe
icebp
mov
aam
js
leave
cmpb
leave
shlb
incl
bound
aad
cmp
jmp
mov
jae
lahf
pushf
std
inc
arpl
rcr
add
mov
mov
aas
jbe
fisttps
sbb
add
inc
mov
js
sub
cmp
and
out
movsl
cbtw
inc
pop
stos
inc
push
jnp
push
movsb
pop
hlt
mov
jmp
cmp
nop
xchg
test
imul
inc
std
loopne
scas
rclb
loopne
cwtl
pushf
cmp
stc
mov
add
jno
add
fcomps
pop
icebp
ds
jmp
movsl
cs
mov
in
sub
sbb
mov
inc
mov
xchg
out
movsb
pop
push
adc
popa
inc
jb
jmp
mov
fidivrs
das
adc
inc
inc
shll
gs
sub
and
emms
mov
lea
push
mov
mov
pusha
lods
mov
frstor
inc
push
outsb
inc
shll
in
or
movsb
das
stos
scas
ret
mov
lahf
lods
out
out
mov
ret
sub
je
push
add
cmpb
in
pop
fldcw
data16
repz
popa
std
mov
out
out
cmpsl
cltd
mov
mov
or
push
cs
inc
sbb
mov
sbb
mov
pop
adc
dec
imul
cmp
push
ds
and
lds
imul
push
icebp
sub
push
mov
adc
push
fadds
jno
mov
inc
pop
mov
pusha
cs
push
fs
fsubrl
cmc
sahf
mov
mov
adc
ret
cs
xor
out
push
fcoml
mov
adc
ret
sahf
test
aas
dec
iret
push
sbb
in
in
lods
lcall
jle
js
mov
or
clc
sub
xchg
push
sbb
xchg
insb
mov
jmp
sub
jb
into
mov
sbb
sbb
test
dec
fdivrs
sbb
fiaddl
pop
or
nop
cmpsl
out
cltd
jae
lods
dec
roll
fs
and
cwtl
mov
jg
dec
sub
shlb
nop
outsl
lcall
xor
mov
pop
loopne
rol
sub
lret
mov
sti
das
mov
mov
inc
mov
shl
or
rcrb
fdivs
into
jo
scas
or
std
dec
sub
sub
enter
ret
dec
in
adc
pusha
arpl
adc
data16
pop
mov
popa
or
pushf
outsl
sub
mov
adc
rcrb
or
push
stc
sar
push
push
mov
adc
call
cmpl
pop
sbb
sub
rcll
sbb
movsb
hlt
enter
add
and
icebp
mov
pop
out
push
rcrb
scas
and
cwtl
add
inc
mov
mov
imul
fs
fldt
rcr
sub
jno
js
cmpsb
pop
les
flds
jp
and
enter
int3
jmp
jmp
repz
jo
lcall
test
cmpb
test
inc
stc
popa
jg
inc
std
lret
cmp
xor
xorb
mov
lods
or
addr16
notb
cli
mov
or
insb
mov
pop
ret
lods
pop
in
test
hlt
push
and
and
inc
idivb
mov
push
pushf
stc
pop
in
pop
mov
jecxz,pn
fsubr
je
movsb
cmpsb
and
pop
ret
inc
loopne
mov
mov
inc
icebp
xchg
cmp
mov
je
pop
repz
and
dec
dec
inc
cmp
mov
or
or
out
xchg
add
cld
xor
jbe
orl
jle
sub
popa
popf
dec
pop
rclb
aaa
jne
dec
sbb
out
xor
hlt
aad
faddl
push
adc
jne
jge
or
jl
jo
pusha
aad
adc
addr16
aaa
insl
mov
outsb
outsb
mov
out
out
movsb
xor
pop
pop
or
xchg
adc
scas
pop
xor
aaa
outsb
inc
push
scas
repz
icebp
jbe
addr16
loope
daa
mov
cmp
pop
ret
mov
stos
pop
inc
push
mov
cwtl
aas
insl
xor
xchg
cmc
iret
xchg
pop
cs
mov
mov
jmp
jp
adc
pusha
or
add
movsl
mov
xor
into
and
loopne
mov
inc
jge
dec
out
loopne
push
movsb
cli
mov
aam
shlb
int
xchg
stc
pop
enter
mov
xchg
cwtl
test
aam
lahf
mov
add
sti
xor
lahf
xchg
mov
shlb
sbb
jle
adc
cmpsl
cwtl
jmp
pop
bound
mov
mov
xchg
in
inc
daa
lret
daa
mov
jecxz
mul
int
outsl
lods
std
test
aad
aaa
aad
aas
cmp
xchg
xchg
sbb
push
cmp
div
sahf
mov
das
cli
xor
or
test
fldl
stos
jo
push
xchg
dec
or
sbb
insl
cmpsb
jge
pop
pop
sub
lret
mov
pop
mov
ds
or
adc
popf
inc
jg
jne
adc
add
cmpl
add
mov
daa
lds
push
mov
sub
xor
xorps
xor
sbb
subl
xor
sbb
ud1
jo
xchg
or
in
loope
sahf
mov
shrb
rcl
pushf
cltd
or
pop
pop
cmc
inc
rsqrtps
int3
mov
and
mov
dec
dec
mov
jge
es
fs
aam
stos
inc
push
push
rcrl
ret
lods
loop
xchg
sbb
mov
cmp
js
xchg
fistl
add
sub
or
push
out
cmp
cmp
jne
or
shll
jb
fidivrl
mov
sub
mov
out
inc
pushf
ret
cmp
pop
notb
pop
push
dec
mov
enter
push
test
lahf
push
outsl
insl
adc
inc
enter
lods
aas
push
repnz
mov
cmp
das
pop
jecxz
pop
sarb
popf
in
sahf
push
mov
xchg
xor
aaa
dec
fcmovb
roll
test
stc
call
add
lods
jl
jge
repnz
adc
add
insb
popl
or
adc
pop
mov
or
aam
dec
out
stos
mov
andb
push
repnz
and
push
xchg
mov
push
test
add
stc
pop
inc
push
sub
lahf
jl
mov
dec
scas
inc
insl
cmp
jbe
lcall
popa
in
pop
call
jno
movb
out
test
add
fistl
cmp
cmpsb
jge
jg
pop
mov
xchg
pop
mov
jne
adc
test
mov
and
stos
jg
inc
mov
stos
and
js
cmpsl
mov
xchg
push
ds
push
xlat
fldt
imul
shlb
rcll
das
xor
push
xlat
dec
mov
roll
mov
adc
dec
xor
movb
hlt
adc
fdivr
scas
in
shlb
inc
fbstp
inc
and
pop
fbstp
cmp
push
xor
sbb
or
xchg
mov
arpl
lock
insl
clc
adc
lcall
lods
sbb
xchg
mov
int
inc
sarl
ljmp
xchg
flds
push
mov
inc
jp
dec
cmp
xchg
insl
or
xor
leave
incb
sbb
xor
bound
insb
mov
push
shll
dec
fistpl
in
push
and
pop
std
mov
xchg
in
mov
cli
in
xor
mov
jge
sbbl
pop
mov
push
shld
sub
pop
push
mov
mov
lods
jecxz
inc
scas
cld
xor
repz
cmp
jbe
add
push
mov
jo
pop
incb
and
and
out
inc
jae
jae
movsb
outsb
mov
cmc
lret
mov
push
mov
mov
mov
shlb
js
mov
lds
mov
out
pop
jno
sub
mov
or
aaa
sub
out
mov
sbb
filds
cltd
stos
mov
gs
insl
stos
jmp
or
xor
test
mov
xchg
and
pop
lret
inc
bound
xchg
stos
fidivs
loope
mov
stc
cli
and
test
ffree
lea
xor
shl
pop
in
mov
bound
aam
sub
inc
sbb
adcl
mov
pop
mov
jbe
cmp
das
sub
push
and
repz
in
and
lret
push
scas
aas
jge
mov
add
adc
cli
dec
mov
dec
dec
arpl
or
inc
sub
push
int
clc
dec
adc
loopne
ljmp
cld
fcomp
sub
imul
adc
loope
loop
pop
fimull
inc
lock
fucom
inc
dec
daa
popa
sarb
pop
je
jae
adc
adc
sar
cmpl
sub
aam
fldl
inc
mov
loopne
or
and
push
jns
test
fimuls
jg
cmp
inc
dec
lock
mov
jb
or
add
out
pop
cwtl
cmc
scas
add
movsl
xor
jne
outsb
sbb
mov
divl
mov
push
sub
cmpb
lret
dec
pop
pusha
daa
dec
lcall
rcrl
enter
lods
mov
push
cmp
repz
sahf
orb
shlb
mov
fists
push
arpl
cltd
clc
jecxz
mov
and
daa
jbe
mov
out
pusha
movsl
js
adc
fnstcw
lret
push
push
push
add
sti
adc
ss
xor
mov
mov
mov
mov
in
xor
pop
scas
mov
xor
push
stos
cmpsb
lahf
loop
in
xchg
and
inc
inc
push
push
adc
jbe
movsb
repnz
sub
mov
mov
jb
xor
aaa
jge
push
inc
arpl
cmc
fimull
mov
jg
push
cmpsl
test
sahf
pavgw
cld
sbb
push
or
call
out
insb
aad
cs
out
outsb
or
insb
stos
xchg
xchg
xor
or
test
and
movb
inc
inc
inc
xchg
mov
pop
pop
sub
fs
pop
push
jb
mov
test
insl
fisubl
lcall
add
ds
ds
cmpsb
psllq
mov
aaa
sbb
outsb
inc
jmp
ljmp
jne
fiadds
add
add
mov
dec
dec
call
jge
scas
or
adc
mov
pop
mov
jnp
jne
loop
and
movsl
sarb
popf
xbegin
push
xchg
mov
fidivrl
sbb
ret
xor
adc
push
test
adc
clc
sti
push
jb
push
aad
push
js
mov
ret
into
fldenv
dec
cli
sbb
fldl
push
arpl
repnz
setle
cmpsb
testb
sbb
mov
cmp
cli
xor
jae
roll
xchg
lret
mov
out
or
cltd
dec
lcall
xor
push
inc
pusha
jns
pop
decl
enter
dec
adc
in
lahf
sbb
and
lds
gs
mov
sti
cmpsl
cmp
inc
mov
adc
sbb
push
push
cmp
push
and
addl
xor
xor
or
cmpsl
lods
gs
cs
jns
les
out
pop
sbb
jne
fsub
fstl
adc
ljmp
mov
loop
test
aam
jo
dec
inc
stos
inc
adc
leave
sbb
out
xchg
mov
shl
push
outsl
movsb
cmp
sub
jb
gs
aad
je
sbb
sbb
loop
xchg
out
jbe
push
test
div
movsl
pop
jmp
aam
aas
scas
pop
cltd
hlt
loop
mov
pop
pop
andb
sbb
add
jno
and
mov
fcmovne
das
mov
dec
pushf
dec
in
fwait
popf
push
iret
sbb
ja
jb
in
pop
mov
or
enter
xchg
jno
sbb
iret
xchg
cmp
push
call
xchg
cmpsl
mov
addr16
insl
pusha
jmp
cmpl
add
mov
or
dec
mov
jecxz
mov
xor
mov
mov
je
cmpsb
insl
sub
xchg
gs
bound
cwtl
shr
jecxz
add
aam
stos
gs
mov
fidivl
ds
xchg
inc
xorb
adc
sbbb
sub
mov
mov
adc
lods
mov
or
sbb
imul
lret
outsb
ljmp
cmp
test
jmp
and
push
cli
in
ds
loope
insl
cmp
jno
push
ud0
sub
and
outsb
pusha
cmp
jno
inc
xor
dec
iret
data16
mov
fs
jge
jp
out
lods
roll
or
jae
fisttpl
ret
incl
pop
pop
cwtl
sti
fs
push
mov
add
movsb
ret
hlt
cld
jmp
mov
xchg
sbb
mov
mov
cli
aad
movsb
insb
mov
pop
inc
cmp
adc
insl
or
and
cmp
loope
shlb
fdiv
and
aam
test
inc
sahf
scas
in
jo
xchg
mov
xchg
movsb
nop
inc
imul
mov
adc
inc
stos
push
lret
into
dec
add
and
mov
shr
movsb
cmp
sub
jge
cmp
mov
into
push
jle
daa
fmull
push
fdivrp
sbb
faddl
outsb
xchg
lea
push
mov
dec
dec
cltd
fnsave
jle
jae
pop
dec
in
lock
testb
inc
ja
sbb
arpl
jl
movsb
pusha
inc
mov
jp
lock
adc
xor
push
add
or
arpl
shlb
xor
aam
mov
out
mov
fs
mov
out
mov
iret
push
sub
add
or
std
jge
repz
xchg
push
mov
push
addr16
mov
pushf
mov
push
push
sbb
mov
jl
sbb
xchg
adc
mov
mov
jmp
dec
pop
movsb
jecxz
hlt
fsts
sbb
xchg
mulb
push
pop
ds
or
sbb
push
movsl
add
dec
je
call
shrb
jbe
in
adc
xlat
sub
or
sub
xor
int3
mov
push
fs
js
sub
mov
daa
pop
jle
ds
add
scas
loope
movsb
mov
ret
pop
insl
mov
pusha
imul
fdivs
jbe
mov
adc
push
inc
int
outsb
lea
pop
jle
repz
mov
adc
addr16
mov
sbb
cmpsl
lods
mov
fildl
arpl
loope
mov
pop
inc
iret
aam
mov
lock
pop
pop
jae
das
ret
vtestps
roll
call
notl
aaa
inc
out
pop
adc
sub
adc
add
nop
hlt
out
in
mov
addl
xchg
les
push
xor
cld
dec
test
mov
icebp
out
push
pop
push
cmp
pop
xor
inc
push
leave
or
sahf
add
mov
mov
enter
xchg
xchg
call
shld
lea
xor
test
iret
mov
hlt
lret
nop
dec
mov
push
cwtl
andl
rolb
xchg
xor
in
xor
push
pop
or
frstor
jl
test
sub
dec
sub
jo
dec
mov
cs
mov
ja
pop
pop
enter
lahf
add
xchg
ja
lods
or
adc
xchg
pop
out
push
sbb
in
xorl
cli
and
mov
add
inc
xchg
out
rcrl
mov
loopne
aad
int3
jno
mov
mov
incb
repnz
jl
mov
arpl
lret
inc
outsb
sbb
sub
stc
sub
jb
sbb
sub
pop
adc
roll
sub
loope
out
enter
jne
mov
pop
in
add
rcr
jg
xchg
out
mov
pop
push
fcoms
mov
jns
adc
xor
mov
inc
ror
imul
adc
dec
mov
push
adc
jmp
stos
in
and
cwtl
inc
push
xchg
mov
mov
dec
out
std
sbb
cltd
in
or
cld
xor
pop
xor
enter
push
andl
mov
jge
mov
dec
stos
scas
and
lret
in
pop
inc
push
pop
push
and
mov
sti
ret
dec
jmp
std
sbbb
mov
out
sub
push
stos
mov
pop
mov
or
xchg
in
jnp
sti
push
mov
cmpsl
scas
xchg
outsb
cmpb
mov
addr16
mov
ds
data16
dec
inc
stos
add
cs
hlt
and
push
out
push
and
imul
pop
cwtl
jecxz
lret
jle
pusha
testl
in
sub
adc
in
pusha
mov
mov
sub
jle
push
loope
jmp
lret
pop
roll
test
mov
inc
fidivrs
sub
pop
fnstsw
int3
loopne
jecxz
or
xlat
adc
mov
lock
pop
enter
xchg
int3
xchg
notb
mov
mov
pop
aaa
aad
cmp
adc
adc
xor
sub
add
cmp
mov
out
mov
fisubrl
enter
jg
nop
or
aaa
mov
adc
in
and
fistpl
fwait
pop
scas
mov
push
fldt
cmp
jnp
in
ja
xchg
les
add
push
mov
xchg
lds
fmul
stc
into
and
add
int
jmp
or
add
inc
xlat
mov
enterw
shrb
jne
int
sub
fwait
popa
les
push
inc
pop
mov
cs
cmp
movsl
lods
or
mov
xor
adc
aam
sub
insb
mov
dec
fprem1
shlb
inc
out
out
pop
sbb
inc
or
sbb
or
loop
js
repnz
rcll
and
negb
out
or
adc
out
dec
or
int3
bound
fstps
xlat
add
mov
test
cmpsl
pop
lods
or
adc
out
dec
pop
jmp
or
insl
mov
jle
out
shr
lcall
pop
ds
in
cli
sub
pop
imul
cs
inc
jg
sbb
xchg
and
orl
mov
jl
out
pop
das
xchg
pop
mov
fidivrl
call
ficomps
pop
jmp
shrl
rcrb
mov
mov
cmp
movsl
xchg
mov
js
sbb
js
out
pop
pop
fdivl
fistps
pop
xlat
and
lds
daa
lahf
mov
dec
gs
enter
in
aad
or
or
dec
mov
scas
idivl
pop
popf
xchg
stos
pop
sti
mov
nop
xchg
add
pop
inc
scas
int3
int3
rclb
dec
icebp
enter
push
nop
adc
lds
mov
sub
and
xchg
aas
add
popa
leave
mov
mov
pop
sbbb
mov
push
pop
push
mov
mov
mov
fdivl
in
insb
fidivs
rcrb
iret
flds
mov
stos
ss
rcrb
shrb
sti
sub
inc
addl
and
and
clc
outsl
arpl
dec
rclb
push
and
cmp
dec
or
rcrb
popa
lahf
cmp
dec
icebp
or
push
out
jns
fisubrs
sbb
pushf
loopne
jnp
or
sub
or
outsb
cmp
fwait
mov
repnz
iret
cmpsb
scas
pop
or
icebp
mov
scas
rcrl
adc
in
push
loopne
or
punpckldq
add
mov
mov
push
dec
mov
in
cmpsl
ds
leave
mov
sbb
fnstenv
ja
dec
jns
ret
push
pop
aam
fldenv
mov
add
sub
lock
fwait
jmp
or
test
inc
add
jge
fwait
cmp
fnstenv
pop
das
fldt
cltd
mov
lea
sub
shl
aas
jmp
mov
dec
adc
xor
insl
xchg
out
xor
in
iret
cmc
dec
imul
push
or
push
dec
xchg
mov
xrelease
mov
jb
outsl
pop
lds
jmp
std
xchg
movsb
mov
cmc
mov
shr
and
push
mov
popa
lcall
repnz
mov
movsb
dec
test
push
pop
ja
jge
enter
xchg
mov
dec
test
push
jns
lahf
sub
pop
pop
inc
imulb
inc
jo
test
push
pop
cmpsl
in
sub
ret
sub
push
cwtl
cmp
ret
or
mov
shlb
push
addl
in
rclb
adc
dec
movsb
pusha
cmp
or
push
sbbb
add
adc
mov
mov
pop
int3
cmp
add
xchg
jecxz
sti
jo
adc
leave
or
out
inc
ret
cmp
sbb
inc
ficompl
imul
insb
imul
or
and
int3
imul
loopne
and
xor
test
cmp
loope
lock
loopne
nop
lahf
fcmovbe
fadds
dec
loopne
mov
cmpsl
cs
pop
fwait
xor
push
sub
cmp
ljmp
mov
adc
push
outsl
out
mov
mov
mov
out
ljmp
push
mov
out
push
sbb
xor
out
xchg
repz
imull
jo
mov
jne
cmp
fisubl
fimull
imul
sbb
roll
adc
hlt
cmp
sub
sbb
mov
sti
mov
push
mov
cwtl
mov
pushw
out
cmp
xchg
sahf
bound
xor
loop
or
nop
stos
pop
mov
xor
cmpb
mov
cmp
dec
xor
rcl
add
mov
gs
jmp
stc
daa
xor
xchg
mov
outsb
xor
cmc
aaa
jno
in
or
outsb
hlt
jno
test
pop
inc
pusha
ss
nop
ret
or
fdivs
aaa
call
je
add
mov
sub
jae
cs
sbb
sar
mov
dec
cmpsl
shl
xchg
jecxz
pop
std
jnp
shrl
mov
cmp
daa
insb
or
movsl
or
xor
xchg
rol
and
je
popf
shrb
sub
jnp
mov
mov
aaa
outsb
cli
inc
mov
push
mulb
cmpsl
xor
xor
fists
subb
pop
jg
int
mov
cli
lods
sub
into
cs
mov
pop
movsl
das
xor
inc
in
pushl
dec
mov
cs
leave
shrb
xchg
mov
mov
sub
jae,pt
and
popf
sbb
test
pop
pop
pop
loop
cmp
pop
push
pop
addl
outsl
pushw
pop
dec
and
dec
mov
cmp
dec
sub
movsb
pop
pop
add
or
xchg
leave
mov
jae
popf
out
lret
ja
jge
lret
xchg
jecxz
lret
psllq
jge
mov
fldt
imul
dec
push
push
push
mov
jno
dec
das
int3
and
insl
in
jo
pop
cmpsb
mov
xor
hlt
cmp
sbb
jnp
pop
push
xchg
xchg
imulb
arpl
and
fxch
sub
sbb
mov
mov
xchg
fwait
repz
popf
mov
test
les
inc
loope
cli
add
sahf
mov
repz
mov
je
jmp
push
mulb
shr
in
push
or
out
stos
dec
xor
inc
jg
dec
out
das
fidivl
gs
cs
inc
nop
lea
insl
xchg
sbb
vmovsd
mov
mov
mov
and
jae
push
inc
sbb
pop
jg
mov
pop
stos
pop
call
pusha
sbb
mov
sbb
rcrb
fistpll
dec
ds
lock
test
sbb
fists
push
loopne
orb
aad
hlt
mov
push
ret
cli
aam
and
outsl
inc
shlb
xor
jl
icebp
arpl
cmp
popa
jno
lods
xchg
insl
inc
adcb
mov
cmp
push
insb
xlat
dec
ja
dec
mov
dec
inc
ret
cmc
pop
push
repz
cli
pop
frstor
cwtl
leave
cmp
bound
mov
and
call
mov
push
fdivr
ds
pushf
xor
in
dec
mov
mov
sbb
lcall
test
sub
mov
aad
lcall
pop
push
push
push
xchg
das
pop
inc
add
fiaddl
sbb
sarb
pop
cmp
out
iret
lahf
lret
mov
dec
adc
fsubrp
nop
add
stc
outsl
lret
pop
mov
mov
cmp
xchg
jmp
push
inc
jl
aad
dec
repz
push
xlat
sti
dec
xlat
cmp
xchg
out
mov
mov
jge
icebp
push
cmpsl
jo
xor
and
jae
lods
fwait
mov
pop
dec
or
mov
jbe
subb
mov
mov
and
mov
jge
rorb
cmp
xor
fdiv
movsb
aam
xor
add
push
shll
imul
xor
jp
stos
outsl
ljmp
es
adc
das
stc
cmp
notl
test
jp
sub
cltd
mov
ja
add
adc
adc
push
pop
test
add
out
jo
pop
add
popa
mov
lret
mov
pop
loopne
dec
pop
cwtl
cwtl
ficoml
fistps
jg
dec
test
push
xchg
inc
in
lcall
sub
mov
mov
aam
jns
sbb
cmp
hlt
fs
adc
mov
cltd
pop
cmc
fisubrs
adc
lds
sti
fdivl
dec
sarl
add
int
sub
mov
cwtl
inc
leave
add
fisubs
out
push
test
push
adc
sub
dec
fcompl
popa
sub
cltd
imul
push
negb
clc
int3
jne
xchg
outsl
cwtl
je
pop
insb
and
and
mov
aam
adc
test
adc
jno
mov
sub
shll
push
dec
je
pop
fstpt
sbb
ds
cmc
add
mov
ret
inc
inc
xor
mov
fbld
dec
jle
orl
pop
add
lret
cmpsl
mov
pusha
leave
stc
sub
movsb
std
add
loopne
fcomps
int
inc
cmp
clc
enter
push
sbb
jne
cmp
psraw
or
jmp
mov
pop
mov
pop
or
adc
mov
adcl
sbb
push
push
cmp
fistpll
hlt
mov
mov
lret
cwtl
and
mov
shr
outsl
adc
shlb
or
aad
scas
xor
adc
push
mov
aas
mov
dec
push
cmpsb
aas
xlat
fcmovbe
lods
sub
xchg
mov
mov
fimuls
lret
fidivrs
faddl
xchg
fs
pop
fisubrs
sti
jne
pop
mov
mov
inc
scas
push
leave
in
testb
jno
cmp
adc
mov
pop
or
jo
lret
in
xlat
out
mov
arpl
sub
adc
adc
xor
pushf
xor
imul
lods
or
cld
scas
mov
popf
popa
mov
add
hlt
mov
sbbb
test
ds
xor
mov
and
int
or
add
push
jae
sbb
pop
aad
cmc
ret
mov
mov
xor
cmpsb
push
dec
leave
fwait
add
pop
add
push
mov
xchg
xchg
mov
enter
add
adc
cmp
sub
adc
xchg
dec
shrb
pop
gs
test
aas
insl
aam
push
or
cmpsb
or
jns
inc
dec
sbb
sbb
ffree
adcl
push
sahf
sbb
call
push
hlt
jno
mov
cmp
sub
std
rclb
push
call
xchg
mov
dec
test
mov
xchg
mov
push
cs
mov
push
and
int3
je
add
mov
and
shrb
xchg
int3
or
mov
fwait
sub
sub
addb
lods
enter
jo
mov
ret
jg
mov
bound
je
fsubr
mov
sbb
cmp
test
and
in
in
inc
mov
clc
mov
push
jg
dec
mov
xchg
xor
mov
push
pop
aad
scas
sub
mov
inc
int
fmull
test
movsl
rorb
or
rol
jecxz
aaa
adc
xor
push
sbb
insb
mov
cmc
push
call
fxch
into
add
scas
jl
jno
cmp
add
gs
fwait
mov
pop
cmp
jbe
lods
shl
nop
mov
stos
mov
or
lret
cmpsl
sbb
xor
pushf
sbb
sbb
int
pop
daa
pop
pushf
mov
mov
or
cli
adc
popw
in
bound
lahf
in
fldt
das
push
jp
bound
xor
sbb
out
pop
popa
js
fnstcw
and
add
call
cwtl
repz
xchg
inc
data16
jae
mov
in
lahf
dec
movsb
inc
cmp
sbb
sbb
les
and
push
mov
rcll
mov
les
mov
fnstcw
cmp
jo
orl
cmpsb
andl
lahf
cs
ljmp
adc
lods
sbb
jl
outsl
jmp
movsl
shl
in
sbbl
inc
js
cmpsb
mov
xchg
in
popa
data16
sub
fdivrp
test
jnp
into
pop
and
mov
dec
clc
sbb
sti
dec
inc
movd
hlt
stos
and
inc
fimuls
fwait
xchg
adc
xor
or
sti
sbb
out
xor
mov
cltd
fistps
ror
stos
pop
into
mov
mov
fstpl
out
and
enter
jl
mov
or
and
call
cmp
cwtl
cli
mov
in
inc
fstp
sub
mov
out
and
cs
in
mov
pop
jle
inc
les
loop
movsl
xchg
jmp
bound
adc
mov
ds
shl
xchg
ret
addr16
pop
mov
xor
fs
pusha
inc
movsl
push
pop
inc
add
xchg
into
inc
sub
subl
in
cmpsb
loope
cmp
push
repz
adc
scas
stc
mov
daa
sub
lods
and
fiaddl
das
mov
mov
out
dec
arpl
mov
adc
dec
mov
cmpl
inc
lret
movl
sbb
bound
dec
mov
fwait
mov
sub
xor
pop
mov
mov
jb
dec
xlat
xor
scas
mov
test
jmp
sbb
sbb
cmc
mov
cmp
cltd
mov
pop
mov
rorb
mov
aad
sub
sti
movsb
dec
lods
bound
dec
add
bound
repnz
negl
dec
add
jo
ja
push
dec
pop
xor
arpl
cld
adcb
push
ss
and
jg,pn
das
fldcw
mov
aad
mov
cmp
cmp
jno
or
bound
inc
enter
mov
aas
mov
out
mov
out
add
and
mov
pop
mov
dec
mov
mov
sti
and
add
mov
ss
jae
es
in
push
lea
lds
cmp
into
cmp
andl
test
pop
inc
insl
mov
into
ljmp
lds
mov
push
adc
bound
push
sbb
inc
rcrl
push
jb
jae
adc
pminsw
sbb
cmp
inc
popf
daa
cmpsb
dec
sub
imul
aaa
and
ja
and
ret
xchg
repnz
popf
pop
xor
les
pop
cmp
mov
je
popf
add
imul
pop
sbb
aaa
xor
mov
push
mov
imul
xor
add
xor
gs
sbb
fistl
aad
sub
mov
sub
xor
cmp
mov
sbb
lcall
loop
add
mov
es
jo
xchg
mov
test
jecxz
pop
dec
push
shrl
push
or
je
in
xor
push
xchg
mov
pop
popf
jno
lock
cmp
out
bound
dec
dec
aam
call
xchg
imul
mov
test
mov
push
dec
jb
rorl
or
mov
sub
jnp
cmpl
mull
shlb
cmp
adc
dec
lea
pop
mov
pushf
xchg
push
mov
cltd
sbb
in
dec
jg
pop
jecxz
stos
mov
in
fdivr
pop
xchg
inc
jbe
add
test
arpl
loopne
dec
scas
mov
lret
jp
jns
push
push
xor
push
mov
lcall
push
movsb
cwtl
jge
mov
call
and
xor
mov
adc
js
cli
inc
mov
pop
cs
test
inc
imul
fs
xchg
popa
fsts
jg
pop
push
into
loop
sub
xchg
stc
sub
and
rclb
pop
sub
insb
or
lods
xor
dec
in
mov
xchg
mov
pop
imul
push
test
xchg
or
jns
and
jge
push
scas
or
push
call
call
ljmp
fbld
or
mov
jne,pt
decb
sbb
enter
pop
jge
adc
imul
popf
test
push
nop
rorb
mov
ss
and
fisttps
in
mov
adc
aad
gs
in
rolb
push
push
stc
and
mov
push
mov
lds
sbb
or
jmp
sub
inc
pop
or
jno
xchg
xchg
sub
mov
xlat
sbb
arpl
negb
push
sbb
mov
push
cltd
or
stos
popa
jecxz
scas
push
jae
jmp
loop
loop
xchg
insl
cmp
sub
scas
std
mov
mov
call
sahf
test
loop
sub
jle
pop
sub
call
xchg
fisttpl
lock
xchg
daa
int3
jmp
pop
xchg
loope
sarb
mov
je
dec
fs
hlt
cli
dec
sbbb
daa
push
movsb
sti
xchg
scas
cli
or
push
mov
push
xor
incl
dec
push
sbb
popf
test
jns
jno
leave
iret
xchg
add
xchg
push
push
rorb
sbb
pop
cmp
jb
pop
out
jmp
loop
rcll
push
dec
dec
pop
adc
inc
loopne
mov
adc
repnz
fcmovnbe
aaa
xor
subl
mov
sub
lock
pop
jge
xor
jl
xchg
inc
cmp
mov
in
pop
dec
fmuls
jge
or
xchg
aam
push
mov
and
and
inc
and
inc
push
popl
adc
iret
loop
sbb
add
sub
xchg
dec
arpl
xor
call
xchg
sbb
dec
cli
data16
jp
popa
je
dec
fsubs
mov
aaa
adc
mov
ljmp
stos
in
movsl
xor
out
xchg
sbb
ljmp
fdivs
fisubrl
pop
jo
pushf
and
pop
fdiv
jl
insb
mov
cmp
sti
pop
mov
dec
or
fdivrs
shll
add
insb
aam
inc
lret
outsb
jg
stos
mov
imul
inc
dec
mov
mov
or
dec
scas
cmp
inc
fistps
mov
push
dec
in
fnstsw
hlt
jae
icebp
imul
xor
mov
dec
pop
outsb
xchg
push
or
inc
mov
xchg
jne
pop
xor
adc
mov
cmp
ss
rol
fsubr
je
aas
and
xchg
mov
pop
out
xor
push
adc
jp
push
icebp
mov
xor
dec
gs
add
out
mov
iret
repnz
jns
add
mov
int3
repz
leavew
add
mov
xor
imul
push
fstps
xchg
imul
out
movsl
pop
and
call
jnp
out
adc
js
rcll
jo
scas
mov
inc
in
bound
fsts
add
daa
scas
and
jge
and
mov
js
in
cs
into
aaa
shlb
jb
decb
rcrb
addr16
mov
cld
cld
sbb
push
rclb
sub
je
push
push
outsl
mov
xchg
int3
adc
mov
jp
call
bound
aam
jge
adc
pop
mov
adc
pop
ds
addr16
dec
mov
mov
sahf
cmp
jb
xor
pushf
add
xchg
sub
fs
pusha
imul
pop
stos
bound
or
pushf
cwtl
stos
movsl
dec
dec
movsb
jnp
fisubrl
popa
subl
mov
cmp
xchg
pop
and
rcrb
pop
and
pop
dec
add
cs
and
js
jp
gs
pop
les
add
bound
inc
je
jo
sbb
sub
fstpl
and
incl
subl
aas
pop
flds
or
xchg
sbb
xchg
lret
dec
je
icebp
lret
cwtl
mov
mov
mov
adc
adc
add
ficoml
dec
in
pop
cwtl
jp
repnz
pop
insb
pusha
cmp
push
cld
ficomps
add
lods
dec
ret
and
out
sbb
out
sbb
cmpsb
in
jns
pop
lods
push
popa
mov
imul
fwait
or
mov
cwtl
lds
xchg
inc
push
push
jecxz
cmp
scas
out
imul
fimull
popf
jecxz
mov
cmp
repz
adc
daa
stc
fiaddl
fs
in
add
hlt
pop
add
or
push
sub
daa
dec
mov
pop
pop
test
push
add
dec
sti
and
in
leave
sbb
daa
fimull
sbb
cmp
xor
dec
cli
jnp
pop
mov
jmp
adc
mov
fsubrp
inc
addr16
add
mov
lret
pop
adc
pop
mov
in
and
inc
xor
push
and
lret
cli
test
mov
cwtl
ret
sahf
mov
dec
dec
xor
xchg
mov
jp
ja
mov
in
leave
jg
test
ds
arpl
clc
movsb
cmp
lret
loop
call
and
sbb
or
pop
adc
lcall
xchg
ljmp
inc
mov
push
lret
pop
sbbb
in
mov
mov
test
data16
cmp
hlt
andb
or
sbb
add
inc
sub
inc
in
mov
or
icebp
jmp
mov
lds
fisttpl
fstl
push
mov
rcrb
arpl
addr16
sahf
popf
jo
inc
mov
out
popf
inc
add
mov
shl
enter
cmp
stc
push
cmp
icebp
shr
gs
xchg
sbbb
xlat
push
icebp
mov
call
dec
sub
dec
mov
cmc
fisttps
push
cmpsb
and
ja
cs
loop
xchg
jbe
repz
test
in
pop
bound
dec
cmc
cmp
push
jecxz
cld
xchg
cs
int3
or
or
dec
pop
dec
dec
xchg
xor
adc
push
jb
sub
leave
loop
stos
sarl
sub
add
dec
gs
cli
into
jg
lds
lock
iret
rclb
enter
aas
es
divl
adc
jle
mov
jl
shll
lret
imul
out
mov
cli
jecxz
add
cmpsl
pop
mov
scas
mov
add
push
mov
mov
sub
imul
pop
xchg
out
lcall
enter
test
cmc
subl
adc
fwait
sub
and
sub
pop
cmp
mov
fnsave
je
xchg
adc
add
dec
movsb
bound
and
repnz
inc
fs
jge
or
mov
sbb
lea
mov
imul
popa
dec
int3
sbb
push
test
and
xchg
mov
cmp
mov
pop
out
or
leave
xor
xchg
stos
pushf
mov
mov
sub
add
ret
negb
or
push
xlat
sub
cmp
xor
andl
scas
rorb
or
xor
js
sub
clc
pop
cmpsb
mov
mov
rorl
xchg
mov
cs
adc
pop
and
dec
jg
cmp
xlat
mov
mov
jns
rcrb
add
es
int3
xlat
into
repz
iret
cmp
dec
pop
sahf
push
rorb
push
push
lds
icebp
rcl
push
or
mov
and
sbb
stos
mov
dec
cmpsb
fistpl
fnstsw
fiaddl
aam
inc
stos
sub
roll
insl
jns
push
mov
push
mov
outsb
dec
mov
jmp
cmp
mov
xchg
jae
data16
jo
icebp
jne
std
movsl
fidivrl
add
mov
icebp
jl
ret
sbb
xchg
ds
mov
in
mov
arpl
cli
lret
inc
dec
je
dec
xor
movsb
sahf
dec
push
mov
lds
inc
mov
inc
cmc
fisubs
paddsb
loop
lret
pop
mov
dec
push
cmp
cmp
gs
repz
repz
push
lahf
xchg
das
xor
adc
sar
das
xchg
mov
dec
pop
negl
jo
imul
push
jp
mov
push
lea
testl
dec
in
add
stos
xor
rcll
push
jge
rcrb
xchg
jl
pop
pushf
popl
loop
xchg
push
adc
fsubr
cmp
and
jb
movsl
int
insl
ljmp
inc
xchg
add
jnp
mov
push
xchg
adcl
jp
inc
mov
pop
mov
add
movsl
add
sub
mov
mov
push
sub
mov
cmpsb
inc
push
inc
push
outsl
mov
xchg
icebp
xchg
add
xchg
call
add
in
daa
gs
jbe
arpl
inc
or
addr16
clc
xchg
pop
daa
xor
xorl
int
pop
fdivs
jmp
jle
popf
mov
jne
sub
loope
sbb
lds
lods
testl
or
lret
sub
mov
divb
into
add
clc
xchg
pop
enter
push
loop
rcr
cmp
clc
pop
sbb
std
fidivs
mov
mov
sbbl
mov
sbb
dec
or
popa
int3
shlb
in
popf
mov
mov
inc
lock
cmp
mov
xor
stos
jecxz
add
nop
cwtl
dec
adc
dec
lret
push
xlat
push
roll
sub
inc
shrb
movb
mov
mov
mov
mov
movsl
mov
pop
cli
dec
xor
leave
inc
add
push
repz
ljmp
ss
test
lahf
dec
iret
fldl
sbb
jp
fcoms
mov
fisttpl
aaa
movsl
test
push
push
jno
add
mov
sbb
int
mov
add
jl
and
push
mov
xor
inc
add
enter
js
xchg
ds
push
repz
xchg
xchg
roll
movsl
outsl
in
js
sbbb
fidivrs
push
leave
loope
data16
dec
out
stc
movsb
stc
cmpb
xchg
dec
dec
rcrl
decb
mov
test
and
and
stc
inc
hlt
ret
pop
and
jne
lods
mov
cld
aad
jnp
adc
push
mov
sub
movsb
cmpsl
ret
sub
fdivrl
fidivrs
addr16
sub
xchg
mov
lods
mov
jnp
or
int
mov
sub
or
scas
mov
scas
bnd
mov
mov
shll
jl
mov
cmpsb
add
sub
lods
bound
pop
and
add
pop
cmp
insl
mov
faddl
add
dec
movsl
dec
adc
repz
into
das
mov
fmull
scas
and
sbb
mov
or
cwtl
sub
mov
aad
jns
sbbb
ja
rclb
cmp
and
add
test
daa
dec
pop
lcall
dec
movsb
add
mov
jbe
push
hlt
and
outsb
xchg
in
aas
cmpsb
es
loope
aaa
inc
int3
adc
mov
mov
jnp
inc
sub
adc
das
xchg
and
sub
mov
cltd
sub
roll
or
int3
test
decb
out
sbb
cld
mov
insb
lods
jno
lea
not
ret
inc
push
cld
mov
mul
cmp
movsl
push
gs
dec
imul
phsubw
loop
int
es
fwait
push
int
pushf
add
in
push
push
inc
fsubr
push
lss
push
sbb
andb
jl
hlt
clc
movsb
test
and
popf
dec
pusha
fs
rorl
in
rclb
sahf
or
clc
ds
lods
jne
mov
inc
sbb
jnp
dec
sub
mov
sub
in
add
jle
imul
lret
mov
xor
push
shll
ficomps
leave
pop
pushf
jb
cs
ret
hlt
lcall
mov
mov
or
sbb
sbb
push
bnd
cmp
or
mov
insb
pop
lret
add
push
xchg
hlt
mov
sbbl
mov
pop
aam
dec
test
and
mov
int3
popf
and
inc
into
cltd
bsf
xchg
and
jo
inc
push
stc
out
lods
aad
outsb
mov
leave
pop
dec
xchg
popa
imul
or
or
or
pop
pusha
pop
or
fwait
rolb
xchg
jmp
scas
or
cwtl
push
inc
push
mov
movsb
adc
jnp
cltd
clc
mov
outsb
cmp
in
sbb
out
mov
mov
and
test
cmc
popf
roll
push
xchg
imul
shll
jp
sarl
icebp
mov
jns
xor
in
dec
test
shlb
nop
gs
mov
loopne
mov
in
inc
cmp
in
cmc
test
push
adc
or
lcall
dec
out
imul
jecxz
aad
outsl
mov
pop
or
aaa
xchg
ret
lcall
adc
into
mov
inc
push
dec
jmp
loop
cmp
add
outsl
ret
imul
mov
scas
repnz
mov
jnp
mov
lahf
lock
fmull
shrb
data16
xor
popf
icebp
push
in
push
and
outsl
dec
jnp
jge
loope
inc
mov
dec
ret
jl
pop
insl
std
movsb
cli
add
aas
ret
shll
repz
gs
aaa
int
ds
pusha
enter
outsl
mov
xor
pop
sub
stc
fcmovnbe
mov
jp
cmp
dec
lcall
shll
sub
cmpsl
push
lds
insl
xchg
loopne
mov
push
or
or
jge
jecxz
jecxz
mov
daa
mov
xchg
xchg
mov
jle
movsl
push
repnz
mov
push
xor
push
push
ja
mov
xor
xorl
sub
ret
test
std
rcl
addr16
pop
das
mov
cmpsl
add
mov
mov
daa
inc
xchg
repnz
dec
or
dec
adc
negl
jp
in
in
scas
jl
sbb
mov
jmp
inc
leave
xchg
es
gs
cltd
pop
mov
jle
iret
fdecstp
sbb
inc
or
push
jno
int
cmp
out
jae
std
mov
xor
es
and
jmp
cld
adc
repz
and
fdivl
leave
xchg
sub
pop
test
lock
inc
loop
mov
adc
cwtl
cld
ljmp
andl
xchg
jne
xchg
sahf
add
mov
js
fidivrs
adc
lds
bound
loop
jae
mov
and
mov
xor
mov
and
lea
push
cmc
jno
push
in
hlt
and
aad
cmp
js
mov
jp
movsl
addb
and
fwait
call
mov
adc
xchg
or
pop
pop
rclb
mov
jle
sub
popf
mov
xlat
xor
test
pop
loopne
out
clc
mov
pop
in
ljmp
ljmp
insb
fildl
push
int
push
repnz
ljmp
add
stc
ja
mov
sbb
and
or
pop
jmp
adc
add
xchg
mov
mov
in
or
int
and
dec
sub
jbe
cmp
cmp
jecxz
mov
cmp
lea
imull
imul
sub
pushf
call
sbb
test
dec
out
lret
ficompl
popf
pop
push
mov
add
adc
jecxz
jo
sub
shlb
push
xor
das
stc
repnz
or
int
cmp
xchg
sub
jb
add
iret
rclb
rolb
mov
enter
cltd
add
mov
adc
out
sbb
mov
pusha
in
dec
add
adc
pushf
add
sbb
mov
repnz
sbb
shrl
fmuls
sti
es
loop
pop
add
mov
mov
mov
lcall
ja
andb
outsl
mov
loopne
popa
out
aas
mov
xchg
ja
mov
pop
test
cld
pop
sub
xchg
sbb
push
jl
sbb
jnp
arpl
mov
adc
mov
sub
cmp
cmp
lahf
ficomps
icebp
rorl
push
rol
in
jno
movsl
int
es
jnp
jns
lds
sbb
sub
inc
sub
iret
add
sbb
std
nop
xlat
cmpl
inc
xchg
dec
and
mov
or
jmp
adc
lock
mov
mov
loope
inc
fstl
mov
dec
xlat
fldcw
fstps
mov
push
mov
loop
jns
cmp
fdivrs
out
inc
pop
and
xor
iret
scas
nop
fdivl
inc
mov
sbb
mov
roll
jbe
xchg
jnp
pop
xorb
movsl
push
scas
stos
cmpsb
into
pop
pushf
mov
mull
mov
sub
popf
shlb
dec
or
sarb
mov
push
pop
mov
sub
rcl
out
stos
stos
push
ljmp
mov
xor
dec
or
gs
and
lahf
and
data16
loopne
jg
inc
adc
mov
call
inc
stos
out
inc
rcrl
lea
cmp
xor
clc
leave
insb
ret
add
xor
xchg
lret
pop
sbb
aad
mov
mov
pusha
cld
popf
cld
push
mov
or
add
rcrl
out
rcrb
jbe
leave
enter
cmp
fcoml
data16
and
sbb
push
mov
cltd
insb
adc
hlt
mov
into
dec
aas
fimuls
inc
pop
nop
cmp
add
mov
push
or
mov
sub
jns
xchg
mov
inc
enter
sbb
icebp
ds
fimull
in
mov
jo
lds
pop
fsubl
js
mov
push
ja
push
xlat
sub
pop
mov
jl
je
mov
icebp
into
aaa
hlt
lock
popf
sub
and
cld
jno
sti
inc
test
jo
aam
enter
ja
mov
mov
mov
mov
mov
jbe
shll
sbb
add
mov
call
mov
mov
sti
rolb
in
addr16
mov
sar
fdivl
out
dec
dec
ds
push
cli
out
in
cld
cmpb
adc
fsubs
xor
dec
pusha
nop
push
xor
inc
mov
ss
sub
ja
loop
dec
and
push
inc
out
mov
movl
sahf
jb
jecxz
pop
mov
stc
cld
mov
test
add
das
pop
add
jno
mov
cmp
arpl
xor
sbb
ret
in
sti
dec
in
jl
pop
cmpsb
pop
mov
test
cld
aad
popa
sub
fiadds
js
cmp
leave
aas
sub
dec
add
mov
mov
jo
lret
sub
fiadds
dec
lods
inc
sti
mov
les
jo
lret
out
incb
cmp
cmpsb
xchg
push
pop
add
sbb
scas
and
inc
pushf
in
cmc
bswap
jnp
inc
inc
mov
sub
stos
movsl
es
lds
sbb
cwtl
jae
pushl
les
pavgb
gs
jns
pushw
jo
adc
out
sub
stc
fldl
xor
je
jno
in
sbb
xchg
mov
mov
sbb
aaa
push
mov
and
mov
cmp
lret
loope
mov
int3
mov
fdivp
cli
pop
shl
adc
push
pop
or
insl
inc
push
mov
or
aam
in
fdivl
sar
adc
loopne
hlt
stos
add
cmp
sbb
jecxz
mov
adc
dec
xor
sub
add
push
in
fs
inc
pop
or
int3
shrl
push
aad
es
sub
lcall
jno
mov
jecxz
xchg
mov
fistl
ret
adc
out
xor
lret
stos
push
hlt
popa
cs
jns
jne
ror
pop
add
push
push
sub
outsl
sub
xor
jbe
push
in
lahf
xlat
pop
add
pop
pop
jp
ror
jae
jmp
scas
fwait
cltd
pop
ss
aad
std
sbbb
xor
scas
enter
loope
in
push
add
push
ss
push
fadds
cli
cmp
rolb
xchg
es
sbb
cmc
je
inc
pop
mov
dec
xchg
pop
pusha
sti
popa
add
rorl
xor
loopne
dec
mov
call
imul
aam
test
pusha
push
hlt
shlb
les
loope
xchg
fwait
aad
mov
sub
stc
loopne
jae
sbb
lret
cmp
test
add
jae
scas
mov
filds
in
aaa
cmc
xor
icebp
sub
push
cmc
aaa
mov
jmp
stc
add
mov
mov
cltd
or
test
xchg
dec
push
sahf
xchg
cmp
mov
sub
sub
fistps
cmpb
dec
add
and
fs
adc
xchg
jne
or
cmp
and
les
push
jae
loopne
mov
add
inc
pushf
movd
and
xchg
fcoml
arpl
push
cmp
fildl
hlt
push
adc
mov
sbb
pop
push
xchg
dec
jecxz
sbb
int3
cld
and
in
lods
or
xchg
xchg
leave
addr16
es
add
sar
scas
enter
je
sbb
lea
jecxz
test
pop
lods
lock
xchg
daa
cld
xor
pop
loopne
jnp
ret
fwait
aaa
adc
rolb
pop
dec
push
out
push
sub
ljmp
dec
mov
dec
cmp
cmp
sbb
loope
test
xchg
aam
movsb
jl
adc
cmp
pop
out
mov
mov
mov
movsb
pusha
and
adc
inc
nop
aaa
sbb
dec
in
jne
int3
mov
xor
movsl
lret
divb
shrl
lcall
aaa
sub
test
stos
push
jno
loope
call
ret
out
repnz
in
data16
mov
divl
mov
add
push
pop
adc
fxch
test
jle
out
into
inc
test
dec
cmp
fsts
xor
add
leave
mov
or
mov
fbstp
lods
inc
xchg
faddp
adc
dec
mov
or
std
data16
jae
scas
in
mov
loope
dec
jl
sbb
sahf
gs
stos
inc
in
mov
inc
cmp
fisttps
pop
rcr
scas
outsb
jae
outsb
add
jbe
add
sub
mov
xor
pop
push
and
sub
dec
push
lea
and
push
rcrb
xchg
jmp
into
adc
das
mov
shll
pop
mov
pop
sbb
xor
out
jmp
dec
ss
dec
aad
cs
inc
bound
mov
out
adc
mov
xchg
hlt
fildll
mov
movsl
imul
in
repnz
cmp
pop
sbb
call
inc
push
add
es
push
mov
scas
and
adc
xorb
xor
sbb
in
jmp
xlat
sbb
mov
pop
imul
int
std
mov
lds
sbb
imul
cli
dec
mov
shl
lret
push
inc
push
or
sbb
hlt
test
fists
pop
dec
sub
inc
mov
inc
jns
in
cmpsb
dec
popf
push
jo
sbb
loop
xor
push
xchg
cmp
pusha
xor
subb
or
jl
sub
mov
mov
test
cltd
xchg
jb
cmp
imul
sub
aaa
mov
xchg
push
adc
sahf
jbe
sub
cmp
pushf
fildl
push
gs
aaa
fs
arpl
imul
imull
ret
loope
scas
lcall
call
outsb
mov
mov
out
outsl
test
jo
cli
andnps
repz
icebp
inc
rclb
repz
orb
aam
mov
mov
rcrl
sub
nop
lret
mov
fists
sbb
dec
flds
inc
fmull
outsl
shrb
leave
in
jmp
dec
mov
jle
jmp
js
jns
movsb
mov
mov
outsl
mov
ja
in
push
push
mov
loop
pop
add
js
mov
dec
int3
sub
and
stos
out
loope
stc
ficompl
jge
jmp
leave
nop
and
inc
test
repnz
shlb
sub
cmp
xor
out
sbb
and
aas
push
lret
cmp
xchg
push
cmpb
jge
inc
jge
jne
jle
sub
push
xchg
and
subb
xor
sbb
sbb
ret
jbe
addr16
lret
add
in
jle
pop
ljmp
xorl
scas
call
rolb
aaa
sbb
mov
adc
xchg
stos
lock
loopne
and
or
ja
fdivrl
ds
mov
adc
pusha
xchg
shr
xchg
iret
es
imul
outsb
outsl
pop
std
mov
lock
fidivrl
addr16
xor
dec
and
in
cmpb
and
shrb
jnp
mov
sahf
pop
cmp
dec
pop
sub
xchg
cs
and
sub
ficomps
arpl
xor
mov
add
mov
push
out
adc
or
adc
adc
cmpsl
lods
sahf
inc
jnp
imulb
insb
cli
xor
adcb
ret
dec
bound
cmc
mulb
inc
test
data16
push
imul
fwait
mov
fsubs
adc
out
pop
jl
push
xchg
cwtl
shlb
rcr
push
mov
pop
sub
fwait
pushf
movsl
lock
das
cmp
push
jmp
in
xchg
fmuls
divl
mov
dec
xchg
and
leave
ret
ja
jle
inc
aam
sbb
sbb
sbb
ret
sbb
cmpsl
inc
or
push
in
faddl
dec
idivl
inc
jb
lock
daa
dec
sub
addl
leave
es
insb
jmp
jne
rcll
insl
fdivr
daa
nop
pushf
shll
arpl
ss
or
je
stos
mov
das
loopne
es
and
call
mov
adc
mov
jp
jns
xchg
test
push
test
mov
dec
in
cli
nop
nop
imul
mov
repz
lea
div
iret
mov
xor
dec
fidivrs
and
shlb
cmpsl
adc
call
fwait
sbb
daa
mov
sub
mov
cmpsb
lds
in
mov
int3
push
dec
push
cmp
test
aas
push
outsb
mov
xor
jae
mov
out
pusha
sti
test
cmp
jns
sbb
or
xor
xor
rol
jl
and
sub
jo
dec
pusha
les
lea
call
pop
xchg
xchg
imul
filds
sahf
insl
sub
sbbl
add
mov
jne
jmp
sbb
and
out
test
push
clc
pop
into
mov
pop
lock
cli
dec
xor
aad
pop
sahf
xor
icebp
sub
fnstsw
or
push
xchg
mov
push
sub
mov
ds
sbb
dec
jl
std
push
pop
push
mov
les
fldl2e
or
scas
and
lcall
int
dec
jb
les
and
xlat
out
popa
or
dec
lods
shll
cmp
xorb
cmp
in
xor
das
cwtl
inc
jne
roll
mov
pop
pop
jmp
cli
pop
mov
xchg
ljmp
push
loopne
cwtl
dec
pop
scas
jecxz
fiadds
stos
lods
outsb
jp
ret
sub
lret
mov
lds
cmp
lods
rolb
or
clc
aas
outsl
cmc
insl
xchg
push
lahf
add
xchg
out
jp
cmp
fnsave
xorb
fcompl
inc
notl
lock
gs
mov
inc
sub
jne
imul
mov
aad
aam
mov
sub
jmp
test
xor
jne
gs
xor
sbb
or
and
add
std
xlat
inc
fisubrl
in
mov
in
icebp
inc
jmp
mov
mov
push
movsl
loop
sahf
push
jl
or
mov
popa
xlat
lret
xor
lahf
testl
add
fcoms
int
cli
adc
icebp
sbb
dec
xor
mov
bound
imul
push
xchg
sbb
bnd
or
lock
pop
sbb
and
jns
mov
repnz
mov
pop
add
mov
inc
fisttpl
mov
adc
stos
mov
xchg
xchg
orb
xor
mov
jnp
cltd
push
pop
mov
enter
xchg
std
neg
mov
dec
xchg
mov
call
int3
cmp
sub
cs
imul
jge
fsubrp
and
out
pusha
sub
xchg
pop
int3
sub
ljmp
out
adc
and
pushf
push
daa
ret
jecxz
pop
mov
xor
daa
jns
mov
jnp
xchg
fdivl
scas
push
aaa
pop
pop
mov
cli
xlat
sahf
add
add
out
iret
shlb
loope
xor
scas
or
mov
aad
add
sub
arpl
in
repz
dec
inc
sub
aam
iret
mov
push
mov
xor
loop
xor
inc
repnz
add
lods
jecxz
jb
fcmovb
xor
cmc
xor
xchg
inc
inc
push
data16
stc
dec
mov
push
shlb
pop
push
jle
loop
inc
cmpsb
mov
in
pusha
rorb
arpl
jns
mov
stos
outsb
mov
adc
out
xor
jge
pushf
cmpsl
adc
xchg
test
testl
ljmp
cmp
lods
scas
shrb
andb
adc
inc
daa
imul
xchg
ja
lods
arpl
mov
std
les
jno
lret
mov
add
jge
lds
push
push
dec
adc
xchg
push
xchg
sub
pusha
cmp
popf
dec
cmp
aaa
loope
pop
fdivrp
inc
jl
inc
out
enter
ds
test
add
arpl
jp
cld
xchg
mov
sub
xlat
pop
adc
lcall
shlb
lods
scas
sbb
lret
inc
lds
sub
fstl
cvttps2pi
adc
xchg
mov
inc
stos
nop
les
mov
fcmovb
or
lcall
fistpll
pop
inc
nop
cmc
dec
lock
mov
dec
mov
addr16
lods
or
pop
fiaddl
add
mov
fisubrl
mov
push
insl
je
mov
lock
ja
push
mov
inc
popa
std
dec
stos
pop
and
cmp
push
fcmovnu
cmp
shlb
into
clc
push
add
pop
andb
imul
cmp
push
scas
cmpl
mov
xchg
and
add
ret
fisttpl
nop
jae
std
pushf
cwtl
sub
sub
ficompl
xchg
out
aad
push
gs
and
or
aam
pop
loope
push
hlt
xor
fld
dec
sti
stc
ss
sbbb
xor
in
ljmp
jl
pushf
lret
lret
inc
sub
pop
stos
and
add
xor
mov
cmp
inc
pop
add
das
orl
jl
or
sub
and
xchg
iret
mov
iret
and
cli
push
pop
mov
push
inc
test
loopne
pop
stos
xor
popf
in
imul
dec
cmp
sub
mov
lcall
mov
xchg
sub
fnstenv
jns
fs
das
fldenv
xchg
and
xchg
sbb
pop
popa
jmp
or
sub
test
fs
push
loop
mov
repnz
addb
out
jb
iret
sub
sub
xor
out
std
orb
mov
sbb
add
fwait
push
test
mov
pop
aaa
push
add
inc
mov
popf
jl
mov
push
std
pop
xor
lods
gs
test
pop
outsb
shlb
bound
xchg
xor
fcmovb
inc
pop
dec
push
aam
mov
sub
or
test
stos
or
scas
sub
jl
cmpl
addb
in
jb
sub
dec
mov
jbe
outsb
inc
aam
xchg
adc
dec
or
in
pop
scas
mov
or
in
add
mov
fistl
inc
sbb
lcall
inc
movsl
daa
mov
sti
ss
mov
movsb
fwait
out
aaa
push
inc
cmp
xlat
mov
push
cmp
ss
dec
hlt
mov
xchg
mov
mov
xchg
out
enter
mull
cmp
out
dec
push
sarl
xor
cmp
or
mov
lcall
mov
rcll
xstore-rng
cmpsl
xchg
aam
inc
mov
addb
pop
idivl
sub
add
scas
arpl
sbb
imul
push
jns
data16
int3
lret
aas
or
or
test
or
insl
and
push
call
mov
push
or
sti
icebp
pop
aam
cmp
fnstcw
xchg
inc
sbb
dec
mov
fsubrl
sahf
lea
in
cmp
das
and
push
hlt
xchg
xorl
pop
lea
and
mov
je
adc
call
push
mov
push
sbb
in
std
jle
pop
test
loope
sarl
jnp
xor
repnz
cli
mov
jno
jne
arpl
ljmp
xor
mov
jge
xchg
lahf
mov
and
xlat
and
stc
cmp
ret
sub
sbb
int
movhlps
xor
or
mov
cmp
scas
push
sub
in
mov
int
and
sub
aas
xchg
adc
push
pop
cmp
adc
cs
push
pop
sub
dec
and
push
inc
sbb
lret
pop
icebp
push
leave
int3
shrb
push
popf
ds
push
aaa
mov
rclb
pop
daa
in
repz
jge
fidivrl
adc
in
sub
xchg
add
jmp
in
jmp
loop
nop
pop
push
mov
cmc
cmpsb
pop
addb
movsb
jo
push
stos
xchg
sbb
enter
dec
sahf
das
daa
loope
mov
in
cmp
jle
arpl
pop
imul
lahf
add
add
dec
push
imul
mov
js
insb
es
das
imul
ljmp
xchg
dec
add
jle,pt
mov
push
lahf
pop
pop
xlat
push
mov
inc
lret
ja
popa
faddp
mulb
lock
add
jno
push
dec
in
adcb
pop
mov
mov
stos
sbb
push
inc
sub
rorl
dec
das
popf
mov
jo
pop
xchg
lock
lea
aas
in
jg
iret
and
pop
jl
das
dec
insl
jge
aas
movsl
fadds
mov
xchg
shlb
test
xchg
mov
mov
dec
xlat
fnsave
add
jp
xor
inc
add
je
add
cmp
outsl
fstpt
add
mov
jo
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
add
add
jnp
add
mov
add
jno
add
jno
add
jno
add
jno
add
jb
add
add
xor
add
add
push
jb
add
add
jl
add
lea
add
add
into
jb
add
jb
add
jb
add
jb
add
add
add
add
add
jae
add
add
push
jae
add
add
jns
add
mov
add
jae
add
jae
add
jae
add
jae
add
jae
add
je
add
je
add
pusha
add
or
add
xlat
aas
add
add
add
add
add
add
jo
add
add
add
xor
inc
xor
pop
xor
