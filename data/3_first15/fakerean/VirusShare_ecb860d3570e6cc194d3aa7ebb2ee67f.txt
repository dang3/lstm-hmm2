addl
mov
add
push
push
call
push
call
mov
mov
push
push
mov
push
push
push
call
mov
push
push
push
call
mov
mov
test
jne
mov
push
push
push
call
mov
mov
test
jne
mov
push
push
push
call
mov
mov
push
push
push
push
push
mov
call
movl
lea
mov
call
movl
pop
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
mov
push
push
call
ret
nop
mov
push
push
call
ret
nop
push
push
mov
push
lea
push
call
mov
xor
test
jle
mov
mov
add
cmp
je
inc
add
cmp
jl
cmp
jge
mov
lea
shl
add
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
push
call
mov
mov
push
call
test
jne
push
call
pop
xor
pop
ret
push
mov
mov
mov
rep
push
call
pop
pop
mov
pop
ret
nop
push
push
mov
push
mov
push
push
push
push
mov
mov
test
je
push
push
call
pop
pop
pop
mov
mov
add
ret
push
call
add
mov
test
movl
je
push
mov
call
mov
jmp
xor
mov
lea
push
lea
movl
mov
call
lea
lea
push
call
lea
lea
add
std
jg
add
add
adc
add
mov
not
inc
add
push
call
push
push
mov
call
test
jne
test
je
jmp
push
mov
call
push
mov
call
lea
push
call
mov
push
mov
call
test
je
mov
test
jne
mov
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
mov
mov
add
ret
push
call
mov
mov
call
test
je
mov
push
mov
call
mov
pop
pop
pop
mov
add
ret
nop
mov
xor
push
test
push
jle
mov
mov
lea
cmp
je
inc
add
cmp
jl
pop
pop
xor
ret
lea
pop
shl
add
lea
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
test
movl
je
push
call
add
mov
pop
ret
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
add
shl
push
call
mov
mov
mov
mov
lea
shl
add
shl
mov
shr
rep
mov
mov
and
rep
mov
sub
lea
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
lea
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
xor
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
push
push
call
pop
pop
pop
pop
add
ret
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
lea
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
add
shl
push
call
mov
mov
mov
mov
lea
mov
shl
add
shl
mov
shr
rep
mov
mov
and
rep
mov
sub
lea
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
lea
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
xor
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
add
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
daa
adc
dec
adc
insl
adc
jl
shlb
test
test
and
adc
push
adc
and
and
in
add
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
push
in
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
fs
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
mov
add
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
xchg
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
push
or
call
mov
hlt
rolb
sldt
mov
add
cmp
jae
mov
mov
add
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
pop
pop
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
test
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
inc
add
pop
add
cmpsl
loopne
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
ljmp
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
insb
lock
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
cmp
add
pop
add
or
inc
add
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
add
inc
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
stos
rolb
mov
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
iret
filds
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
and
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
add
add
ljmp
pushaw
pop
fwait
add
add
add
rolb
stos
add
mov
add
mov
cld
pushf
adc
call
add
dec
enter
push
push
lea
push
push
call
std
lods
add
add
pushf
mov
mov
into
std
in
add
movsb
add
cmc
cli
data16
add
fldl
inc
in
push
push
push
call
jp
mov
push
or
icebp
incb
add
test
add
lods
add
pop
mov
fimuls
hlt
push
pop
arpl
call
out
mov
add
add
add
add
add
mov
pop
jecxz
arpl
ljmp
in
hlt
pop
push
push
push
push
push
lea
push
push
push
call
add
push
roll
mov
pushf
xlat
stos
lahf
add
add
mov
out
mov
add
mov
loopne
add
hlt
mov
add
add
loopne
xchg
jl
mov
leave
test
xchg
add
in
gs
add
push
push
push
lea
push
lea
push
lea
push
call
jno
repnz
mov
fs
add
add
shlb
mov
add
add
add
add
jge
add
add
test
add
add
pop
xlat
stc
into
push
sub
pop
push
call
push
lea
push
push
lea
push
lea
push
push
call
xlat
jp
add
lock
add
add
call
je
add
fiaddl
add
ja
add
arpl
insb
loope
hlt
test
jecxz
add
add
add
into
add
iret
add
movsb
add
add
subl
mov
lock
add
in
call
add
push
push
push
push
call
ret
cli
add
add
add
lret
mov
adcb
add
mov
lock
xchg
popf
in
add
add
jbe
bound
fldl
cwtl
ja
pusha
jne
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
scas
movl
add
mov
mov
test
fcmovne
add
mov
flds
mov
call
push
lea
push
lea
push
call
add
filds
add
add
shlb
mov
mov
sbbl
lahf
imul
out
incb
add
test
test
icebp
cli
add
cli
jl
add
nop
fldl
add
lcall
inc
add
add
push
push
push
call
jae
jle
jb
ja
icebp
js
add
test
scas
push
pop
add
scas
notl
mov
mov
jge
jno
add
add
jp
pushf
pusha
add
inc
hlt
push
push
push
push
push
push
call
add
xorl
push
movsl
popf
pop
in
xchg
les
add
js
jl
add
mov
rorb
lds
add
add
lods
add
add
mov
add
lret
add
add
pop
hlt
push
push
lea
push
push
lea
push
push
push
push
push
call
pushf
pop
add
mov
add
add
cld
out
add
cmc
fadds
sti
add
stos
add
add
enter
add
push
shl
add
mov
aad
add
add
add
addb
add
mov
mov
mov
cwtl
add
add
add
sub
pop
add
add
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
mov
add
add
add
add
add
std
mov
add
cmc
jno
add
pushf
add
jae
cmpsb
test
lret
mov
add
jns
leave
sub
pop
add
push
push
push
push
push
call
popf
mov
add
add
xchg
add
lahf
lea
addr16
add
jnp
add
int3
mov
rolb
push
sub
pop
mov
push
push
push
lea
push
call
lea
add
pop
scas
add
add
mov
int3
add
sbbl
add
test
add
add
add
mov
add
add
add
fdivs
call
jl
add
popl
cmpsb
add
add
add
add
push
add
roll
pop
xor
push
push
lea
push
push
push
push
push
call
add
add
add
imul
roll
add
lds
test
push
scas
add
addb
jns
out
jo
jecxz
add
lcall
jge
add
sbbb
push
mov
sub
pop
add
push
push
lea
lea
dec
push
push
pop
add
add
xor
sub
sub
sub
add
dec
sub
pop
inc
add
not
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
pop
add
ret
push
mov
bound
add
add
incb
add
add
push
popa
jo
add
jl
jb
add
cwtl
add
je
xchg
add
add
add
add
ljmp
add
lcall
jne
push
push
push
push
call
pusha
je
in
mov
out
add
into
push
mov
std
shlb
mov
jle
std
jle
cld
add
add
pop
jl
add
push
test
mov
mov
out
push
add
test
add
negb
cmpsb
in
js
leave
add
jmp
sub
pop
call
mov
push
push
lea
push
lea
push
lea
push
call
movsb
add
pop
pushf
out
mov
mov
xchg
ja
rolb
nop
pop
add
add
add
data16
cmpsl
add
lods
push
test
mov
add
jae
add
add
add
in
add
mul
add
mov
lcall
inc
call
push
push
lea
push
call
add
add
test
cld
lret
xchg
add
repnz
out
add
pop
mov
add
add
sub
pop
lea
push
push
push
push
call
fdivrp
pop
add
pop
pop
stos
arpl
outsl
add
cli
add
mov
aam
pop
add
push
pop
mov
add
add
jmp
enter
in
lock
lcall
push
push
push
push
push
call
fs
pusha
fwait
test
pop
add
mov
pop
pop
mov
add
push
add
add
test
in
jae
add
add
xchg
gs
add
pusha
mov
push
stc
add
add
lcall
jne
push
lea
push
lea
push
push
push
call
les
stos
add
jp
add
mov
xchg
mov
add
push
into
ret
jnp
imul
lcall
jne
push
push
lea
push
call
push
movsl
add
add
push
sbbb
rolb
pushf
xchg
add
mov
jne
mov
pusha
out
arpl
add
jle
add
pop
pushf
add
scas
mov
testb
add
mov
add
add
pop
fs
roll
bound
add
mov
add
and
add
push
push
push
push
call
mov
add
jge
add
repnz
add
fs
add
add
add
add
add
add
add
in
fiadds
add
scas
pushf
test
fs
les
loop
test
jecxz
jo
test
leave
add
cli
lds
pop
add
arpl
sahf
loop
in
add
sub
pop
pushl
push
lea
push
call
stos
add
add
lock
ficompl
test
add
add
xchg
add
add
jne
add
outsl
add
add
loope
mov
fbstp
add
jge
xchg
add
ljmp
jge
popl
add
test
lcall
jne
call
push
push
dec
shl
dec
push
or
inc
add
shr
sub
sub
sub
pop
sub
pop
push
push
push
push
push
push
push
call
jp
iret
push
jne
fnstsw
imul
ja
icebp
jmp
in
add
in
add
lret
jne
add
mov
loopne
add
jne
call
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
add
pop
in
jle
add
add
add
add
add
stc
add
xlat
std
pop
mov
add
add
repnz
mov
add
ljmp
cmpsb
jno
int
out
scas
sub
pop
push
push
push
ror
sub
push
xor
add
shr
not
lea
sub
sub
pop
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
jo
cli
jmp
add
add
add
add
movsl
add
add
fdivr
lcall
push
push
push
push
push
push
lea
push
call
add
add
arpl
add
mov
pop
add
filds
testb
mov
add
add
std
lds
add
xchg
push
mov
test
fistl
add
add
loop
mov
ja
jmp
in
push
push
push
push
push
call
addl
lcall
add
add
out
add
jbe
testl
pop
aad
add
mov
add
mov
sub
pop
call
push
push
push
call
pop
pop
pusha
int
mov
xchg
mov
add
test
mov
movsb
jle
add
scas
rcll
fwait
add
aam
sti
add
mov
ljmp
add
add
imul
add
push
mov
mov
into
add
scas
add
mov
add
out
sub
pop
mov
push
push
call
scas
scas
int3
mov
ret
mov
add
xchg
add
test
cmc
add
add
add
repnz
outsl
add
cltd
add
add
xchg
sti
add
in
add
push
add
lods
rolb
pop
add
push
add
lea
add
imul
add
movsl
fdiv
mov
in
clc
lcall
push
push
push
push
push
push
push
push
push
lea
push
call
into
into
fs
ljmp
out
data16
add
pushf
data16
call
jb
jl
jns
jne
add
sahf
add
imul
add
sahf
mov
push
into
add
mov
jge
mov
sub
pop
push
mov
push
push
push
push
call
add
pop
pusha
cld
add
mov
add
jbe
add
add
add
movl
cltd
jmp
add
aam
cmc
jp
pop
in
push
lea
jmp
cltd
lds
add
jo
push
add
add
push
sub
pop
add
push
push
call
add
push
pop
int
addl
mov
push
jns
add
hlt
add
fwait
add
movl
add
mov
repnz
add
cltd
icebp
push
add
imul
sub
pop
add
push
push
lea
push
lea
push
call
imul
add
jb
icebp
cwtl
jo
pushf
mov
add
add
push
jmp
jne
mov
jge
add
mov
lock
add
jl
add
out
enter
rolb
cmpsl
mov
xchg
aam
outsl
sbb
in
lock
add
push
lea
push
push
push
push
lea
push
call
jmp
mov
add
pop
add
fwait
add
fdivrl
add
add
enter
add
add
add
repnz
hlt
jno
add
add
add
icebp
mov
mov
pop
mov
xor
push
push
push
push
push
call
pop
rolb
add
js
push
jecxz
sti
xchg
pop
adc
scas
mov
add
mov
xchg
add
add
add
add
xchg
test
mov
add
nop
add
popa
lds
rcr
addr16
sub
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
xchg
insb
scas
aad
add
andb
add
mov
insb
push
add
jns
in
add
add
lcall
push
lea
push
push
push
push
push
call
aam
add
add
arpl
xchg
into
xchg
add
add
incb
jmp
add
jno
icebp
in
scas
add
xchg
scas
stos
pop
lahf
test
add
cwtl
add
mov
iret
jo
ja
icebp
aad
jle
popf
fcmovnu
push
jmp
add
in
call
xor
push
push
push
push
push
push
lea
push
call
add
mov
xchg
xchg
je
add
add
fiaddl
mov
add
add
xchg
not
add
push
add
add
ja
in
jle
xchg
add
add
orl
leave
add
bound
add
xlat
iret
sub
pop
add
push
push
push
call
rorl
into
add
mov
test
xchg
test
orb
mov
mov
jns
add
lcall
push
lea
push
lea
push
lea
push
push
lea
push
call
sarb
add
fnsave
add
aam
add
add
push
ret
add
leave
jnp
add
nop
mov
xorl
insb
add
add
push
lcall
lret
jl
fbld
icebp
lret
push
jbe
add
mov
in
call
mov
xor
push
push
push
push
push
call
aam
xor
je
add
add
add
aam
pop
lods
cmpsl
add
add
popf
push
fistpl
jne
add
mov
add
imul
push
cmpsl
add
add
sti
jnp
imul
mov
ret
add
pushf
popa
xchg
add
lcall
push
push
push
push
lea
push
lea
push
call
add
add
fiaddl
add
stos
add
addr16
add
jecxz
add
push
popf
mov
mov
mov
cli
add
roll
xlat
je
pusha
mov
pop
add
xchg
add
clc
roll
jge
sarb
int3
in
add
movsl
add
cmpsl
into
pop
mov
sub
pop
mov
xor
push
push
push
push
push
lea
push
push
call
lahf
test
arpl
jne
fcomps
add
mov
add
add
add
mov
mov
add
cli
add
in
in
lcall
enter
lea
push
lea
push
push
push
push
push
lea
push
call
jmp
add
test
loope
int3
test
repnz
cltd
xchg
add
add
add
xlat
add
addb
push
lcall
add
add
fildl
mov
add
lea
cmpsb
add
add
bound
call
out
pop
add
fdivr
lcall
rep
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
mov
mov
add
push
add
cld
scas
lcall
clc
mov
jns
in
stos
imul
mov
add
mov
jo
add
add
cwtl
lea
add
sub
pop
pop
push
lea
push
push
push
push
push
call
in
add
mov
add
add
jnp
movl
loopne
mov
mov
sarb
out
imul
add
cld
add
add
add
clc
add
call
mov
add
push
lea
push
push
lea
push
lea
push
push
push
call
test
jp
push
mov
add
mov
add
rcll
add
fucompp
add
jle
lea
lret
add
fwait
into
add
add
popf
add
add
add
push
push
push
push
push
push
lea
push
push
push
call
fs
scas
mov
lret
fldenv
add
in
popf
les
loopne
addr16
lock
xchg
outsl
add
pusha
add
add
add
nop
add
lret
addr16
icebp
xchg
mov
add
add
jbe
add
notb
sahf
push
call
mov
push
push
push
push
call
addr16
mov
add
in
scas
add
nop
mov
pop
add
jo
call
add
lret
mov
fwait
data16
scas
clc
add
sti
mov
mov
add
add
cmpl
add
add
add
add
aad
sub
pop
xor
push
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
imul
push
stos
testl
jge
add
add
push
lea
add
data16
add
lret
add
xchg
add
movsl
mov
add
clc
je
outsl
hlt
add
mov
mov
add
jp
mov
mov
in
sub
pop
add
push
lea
rol
pop
mov
push
push
push
push
push
call
fs
jge
jnp
mov
test
idiv
add
in
mov
sahf
add
icebp
add
test
add
mov
stos
xchg
mov
icebp
insb
add
insb
jae
add
aad
lcall
mov
pop
mov
imul
add
add
add
jl
xchg
add
stc
lcall
lock
lcall
adc
push
push
push
push
lea
push
push
push
push
push
call
add
int3
je
push
sahf
lcall
jle
push
mov
stos
xchg
add
insb
add
enter
mov
scas
pop
add
add
data16
add
mov
mov
push
add
push
in
fdivr
lcall
les
add
push
push
push
push
push
push
push
push
push
call
add
push
stos
pop
jl
jnp
add
add
lods
add
arpl
add
je
mov
add
lret
jecxz
add
pop
lret
push
add
pop
add
push
xchg
add
xchg
arpl
loop
mov
lcall
dec
sub
adc
push
push
push
push
push
call
add
add
pop
xchg
sti
lret
xlat
cmpsb
out
je
hlt
add
fucomp
push
add
fldl
xchg
add
pop
arpl
sti
add
add
jle
add
mov
add
pop
add
add
arpl
cwtl
je
add
ret
ret
cmp
repnz
add
push
inc
lea
pop
mov
push
push
not
push
xor
add
rol
sub
inc
pop
lea
inc
shr
pop
push
push
push
push
push
push
call
add
add
enter
xchg
fdivl
insb
push
into
stc
mov
add
jne
test
mov
add
mov
cmp
mov
jl
hlt
add
std
add
xchg
js
repnz
out
add
loop
faddl
cltd
out
iret
scas
add
lret
add
jne
clc
add
jbe
flds
lcall
jne
push
lea
push
call
loop
add
add
mov
push
je
fistpll
movsb
std
mov
jp
add
mov
add
cmc
add
ret
push
sub
pop
call
push
push
lea
push
push
call
add
add
mov
mov
add
shrl
add
add
add
aam
notl
xchg
out
sub
pop
push
push
push
add
push
or
inc
add
shr
sub
not
pop
rol
shl
pop
push
ror
not
pop
push
push
push
lea
push
push
lea
push
call
xlat
add
jmp
repnz
mov
mov
add
add
add
cmpsl
addb
add
push
add
xchg
fiaddl
popf
call
jge
out
add
xchg
in
in
lcall
add
jge
pop
lock
inc
push
push
lea
push
push
push
call
mov
data16
add
fwait
mov
lea
ret
roll
push
aad
add
test
fcmovu
add
pop
mov
jmp
add
incb
add
js
in
je
mov
add
rclb
push
lea
push
call
in
add
addl
add
mov
stos
jge
lret
add
mov
add
add
arpl
push
add
add
add
icebp
add
pop
push
add
cwtl
add
add
add
push
cli
add
add
xchg
add
sti
roll
xchg
jp
in
lock
lcall
clc
push
not
pop
push
push
push
push
push
push
push
push
call
pop
xor
stos
int3
int
data16
lods
add
add
pop
add
pop
call
lret
sti
stos
add
add
add
xlat
filds
add
add
out
jnp
add
pop
mov
add
rclb
pop
mov
int3
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
call
xlat
mov
push
fldl
filds
add
je
add
add
mov
add
xchg
add
add
add
bound
add
add
lods
add
jae
mov
add
cltd
sub
pop
add
push
sub
pop
add
push
lea
lea
pop
add
push
push
call
mov
mov
in
mov
add
test
pop
sti
mov
add
add
mov
mov
add
call
add
clc
pop
mov
xor
push
xor
dec
pop
add
push
push
push
push
push
call
add
ret
pushf
add
mov
jb
loope
hlt
ja
mov
mov
roll
enter
stos
movsb
xchg
xchg
sahf
add
mov
push
roll
je
add
add
add
pop
push
in
lock
lcall
inc
adc
lock
adc
enter
dec
into
mov
pop
add
push
lea
pop
pop
push
push
push
push
push
push
push
call
add
enter
jle
mov
imul
add
call
mov
fs
loopne
hlt
loop
hlt
jmp
out
xorb
add
add
xchg
add
add
add
loopew
mov
in
in
lcall
dec
and
jno
adc
dec
aas
aaa
iret
push
push
call
add
jl
add
add
add
mov
mov
add
mov
mov
test
in
lock
lcall
or
push
lea
push
push
call
add
call
mov
fildl
xchg
add
add
add
add
mov
add
add
mov
add
add
lcall
les
push
push
push
push
push
push
lea
push
call
xchg
add
mov
sahf
add
add
mov
shrb
add
add
add
add
popa
mov
add
lcall
movsb
push
sub
shr
shr
lea
pop
mov
xor
push
inc
pop
or
je
push
shr
pop
mov
push
push
push
call
popa
add
out
xchg
lock
testb
flds
jbe
jle
jl
push
xor
mov
add
fwait
add
push
push
jne
add
add
xchg
cltd
add
data16
movb
add
add
xchg
add
add
mov
lcall
xor
push
push
push
lea
push
push
push
push
call
add
jbe
add
jae
add
jne
cmpsl
push
add
aam
add
arpl
fiadds
xchg
arpl
bound
push
sbb
jl
add
iret
popf
pop
add
add
xchg
add
sub
pop
add
push
add
ror
pop
mov
xor
push
rol
not
ror
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
out
mov
add
add
add
mov
pop
add
add
add
xchg
sahf
push
repnz
add
mov
add
mov
mov
lods
add
add
add
fs
fwait
jmp
shrb
int3
add
shl
stos
add
imul
fdivr
lcall
jne
push
push
push
push
push
push
push
lea
push
push
push
call
mov
pop
xchg
add
xchg
std
movl
jae
add
loopne
add
jno
je
popf
les
jns
add
jp
add
adcb
imul
mov
add
sub
pop
mov
xor
push
push
push
lea
push
push
call
add
mov
jae
add
lock
loope
scas
ja
scas
add
push
stos
outsl
jns
add
out
cmpsb
add
add
leave
clc
add
sub
pop
add
pop
push
lea
push
push
push
call
add
pop
push
push
pop
xlat
push
add
enter
in
loope
filds
lock
sahf
xchg
push
lds
add
pop
mov
ja
add
pop
outsl
addb
lods
add
add
mov
add
fildl
cmpsl
mov
add
add
sub
pop
rep
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
rcl
add
leave
add
add
xchg
jp
add
add
add
pop
add
mov
add
mov
neg
push
into
test
call
add
mov
test
out
push
sarl
orb
fucomi
add
popa
mov
pushf
jae
add
fwait
sub
pop
mov
xor
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
jns
cltd
add
add
aad
sti
pop
add
jbe
test
add
xchg
arpl
fdivr
lcall
leave
je
push
push
push
push
push
lea
push
call
rcll
add
mov
jle
mov
data16
push
test
insb
add
jge
mov
addb
outsl
add
stos
xchg
pop
add
pop
add
in
call
mov
push
not
add
sub
pop
add
add
push
pop
rep
push
push
call
mov
jp
int3
mov
lret
movb
mov
popf
add
add
clc
pushf
add
pusha
add
mov
xchg
add
push
add
add
jp
xchg
jp
addb
flds
xlat
add
lret
jbe
add
xchg
add
add
add
in
clc
pop
pop
push
push
sub
rol
push
xor
add
ror
lea
sub
ror
sub
inc
pop
rol
add
add
pop
push
lea
push
lea
push
lea
push
push
push
push
call
repnz
popf
lret
bound
mov
lock
add
int
movsl
add
add
push
rclb
lcall
mov
add
out
push
add
add
movsl
xchg
xchg
shr
fdivrs
fdivs
repnz
pop
lock
add
in
in
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
data16
fstp
push
out
leave
cmpsl
push
mov
add
add
scas
jmp
in
scas
lea
outsl
movsb
add
addl
mov
jl
mov
out
sahf
add
mov
movsb
add
add
jp
mov
sub
pop
mov
push
push
lea
push
push
call
clc
movsl
mov
testl
add
add
add
add
jno
fldl
add
add
stos
flds
enter
add
data16
lock
lock
mov
push
sub
sub
inc
pop
jmp
push
lea
add
pop
push
push
add
inc
shl
pop
mov
add
push
not
lea
pop
push
push
add
xor
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
jge
xchg
stos
std
xlat
int3
jnp
push
mov
mov
mov
xbegin
add
rolb
outsl
add
jge
jno
add
mov
jae
add
movsl
ja
in
push
out
add
pop
addb
add
add
cmpsl
add
add
addl
pop
sub
pop
push
push
push
push
call
cld
out
cmpl
add
repnz
jmp
out
jns
aam
push
add
add
mov
lret
add
fs
mov
push
add
add
sahf
scas
clc
jo
xchg
add
sub
pop
push
push
shr
sub
sub
shl
pop
mov
pop
push
sub
pop
pop
pop
push
not
ror
shr
rol
pop
pop
push
dec
shr
sub
pop
leave
push
rol
shl
shl
pop
ret
push
push
lea
push
call
mov
push
mov
xchg
pushf
add
stos
outsl
in
add
in
add
add
add
outsl
stos
in
add
add
pushf
mov
ja
in
clc
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
call
push
add
test
add
jo
add
add
fsubr
push
into
jnp
add
loope
add
out
in
jecxz
add
out
enter
test
lea
add
add
cltd
shrb
lds
popf
add
test
loopne
push
push
ror
not
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
mov
jns
jmp
in
aam
add
into
in
imul
sahf
add
add
jnp
scas
mov
sti
add
add
mov
aad
add
add
mov
lret
add
addr16
add
in
pusha
ret
in
xchg
mov
fdivr
lcall
push
add
ror
pop
push
push
sub
pop
movl
push
lea
push
push
push
push
call
cli
call
enter
add
push
xchg
push
add
add
loop
rol
add
filds
mov
mov
mov
add
push
mull
ja
jge
add
add
mov
ret
add
sub
pop
addl
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
pop
mov
les
mov
pop
int
nop
stc
xchg
lods
pop
cli
jb
add
js
jle
mov
pop
fiaddl
add
nop
pop
shlb
addl
add
pop
cwtl
add
popl
mov
scas
mov
insb
add
add
add
add
lahf
push
mov
pop
test
je
push
push
lea
push
call
pop
pop
add
bound
add
cli
push
arpl
mov
add
add
add
add
stc
fs
fs
add
imul
ja
mov
add
push
mov
in
hlt
pop
mov
pop
push
pop
pop
pop
push
ror
sub
pop
pop
push
lea
push
lea
push
push
call
add
pop
mov
add
mov
add
add
popf
add
ljmp
test
add
addr16
add
mov
xchg
push
adcb
add
add
mov
in
lock
leave
ret
push
push
push
push
push
call
mov
addb
rcl
popa
add
add
arpl
xchg
xchg
add
mov
in
aam
push
add
add
add
roll
add
add
movb
jne
add
out
pop
xchg
add
fsubl
add
push
rol
ror
ror
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
out
add
cwtl
add
mov
mov
add
loope
add
movl
add
jmp
pop
int
add
add
fiaddl
fisubrs
int3
add
add
add
ffreep
add
jmp
in
fcompl
cld
push
push
lea
push
push
lea
push
call
mov
add
stos
add
pusha
jecxz
cltd
add
cld
ret
xchg
fidivrl
adcl
loopne
add
shlb
ret
add
push
roll
bound
mov
mov
fiadds
lcall
push
lea
push
push
push
lea
push
call
push
lods
out
faddp
push
push
loopne
cld
add
mov
add
add
add
std
sarb
add
out
mov
mov
add
add
jmp
xchg
jmp
xchg
push
add
iret
add
add
add
mov
mov
jmp
in
pop
push
push
push
rol
rol
pop
push
testl
push
push
push
push
push
push
push
lea
push
call
sti
icebp
loop
add
cmp
add
fldt
add
add
repnz
add
test
add
xchg
ja
subl
icebp
jno
add
sub
pop
addl
push
lea
push
push
push
push
push
push
push
push
call
pop
add
sahf
add
pop
add
mov
hlt
add
movsb
mov
jno
add
cli
add
add
pop
hlt
addb
add
gs
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
lods
add
fldcw
into
shll
pop
fdivr
mov
mov
mov
into
jecxz
add
add
add
add
add
lret
jge
pop
add
add
stc
stos
fwait
add
ljmp
xchg
add
add
filds
repnz
call
inc
pop
mov
push
lea
push
push
push
push
push
push
push
call
fwait
in
add
mov
lods
xchg
shrb
imul
movsl
outsl
add
icebp
pop
jae
lret
mov
jb
add
add
lea
in
add
mov
add
add
add
mov
jbe
add
jle
ja
cmc
add
jns
jle
add
add
xchg
in
js
out
xchg
pop
add
jne
push
push
lea
push
push
push
lea
push
push
push
call
faddl
add
cmc
lret
add
add
fiadds
add
mov
fcmovu
add
mov
out
testb
xchg
add
mov
lcall
call
lea
push
push
push
lea
push
push
lea
push
push
call
add
jne
push
ja
jmp
subl
ja
xchg
add
add
mov
stos
add
add
fcompl
add
adc
push
add
add
out
jb
imul
mov
xchg
add
pusha
insb
mov
out
mov
lahf
mov
add
add
add
outsl
andb
add
add
push
mov
testb
mov
jb
add
mov
popf
jb
xchg
shl
add
lcall
sub
call
hlt
add
pop
cmpl
jne
pop
push
push
push
call
addl
add
leave
mov
popa
data16
js
popf
repnz
mov
imul
add
xchg
add
mov
enter
mov
repnz
mov
jae
add
int
imul
sahf
cld
sub
pop
pop
push
lea
sub
shr
pop
pop
push
add
shl
pop
pop
leave
push
lea
push
lea
push
push
push
push
call
jmp
add
add
mov
insb
stos
add
add
pop
add
add
add
add
push
stos
pusha
pop
add
add
add
in
mov
jb
sahf
add
aam
imul
add
mov
jmp
add
std
shl
in
filds
lcall
add
push
push
add
pop
mov
add
push
push
call
loope
add
cwtl
in
add
add
push
movsl
fadd
xchg
xchg
add
in
add
cli
add
insb
mov
imul
enter
in
add
rolb
fldl
add
jl
add
mov
ja
add
xchg
xchg
nop
add
add
lods
loop
test
lcall
push
add
rol
pop
push
push
not
inc
pop
push
push
shr
pop
push
push
push
push
call
add
xorl
add
in
mov
int3
iret
mov
cmpsl
mov
add
sarb
add
xchg
lods
mov
add
add
out
insb
mov
out
pop
add
add
add
data16
jl
lods
add
and
mov
pop
sub
pop
movl
push
push
lea
push
push
call
lcall
shll
jmp
scas
add
jns
loop
incb
add
xchg
pop
add
mov
cmpsl
sahf
popf
mov
jbe
in
hlt
lcall
sub
call
push
xor
push
lea
push
push
call
add
add
add
std
pushf
add
add
add
pop
mov
jge
sbbl
add
addb
pop
push
push
lea
shr
pop
call
push
rol
pop
subl
cmpl
jne
push
ror
sub
xor
pop
pop
pop
push
sub
sub
pop
pop
push
push
push
lea
push
push
lea
push
call
fiadds
pop
int3
hlt
movsb
pushf
add
mov
popa
add
add
mov
add
add
mov
addl
add
sub
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
fidivrl
les
add
cwtd
pusha
mov
movsb
add
int
mov
clc
lret
add
add
je
add
add
in
loopne
leave
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
ret
mov
add
iret
add
jo
mov
fiaddl
mov
in
pop
test
popf
jne
add
add
into
out
add
fcomps
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
pop
push
roll
add
test
xchg
arpl
pop
xchg
add
add
add
movl
add
pop
add
mov
outsl
push
popa
add
mov
test
mov
stc
incb
je
xlat
in
add
pop
fwait
shlb
xchg
mov
add
add
add
cltd
fwait
into
imul
fdivr
lcall
in
add
push
push
push
push
push
push
push
push
call
aad
mov
in
add
test
pop
icebp
scas
mov
jmp
add
xchg
push
pop
roll
jge
add
add
out
xchg
lcall
push
push
lea
push
push
push
push
push
call
add
rcrb
mov
addb
jecxz
mov
leave
add
shl
stc
jecxz
add
stos
test
cmpsl
jmp
faddl
add
sahf
add
add
mov
call
ljmp
sbb
dec
inc
insl
push
lea
push
push
push
push
lea
push
call
add
jp
jnp
add
jo
add
lds
popl
lods
mov
movb
mov
add
nop
fistps
add
roll
jp
mov
add
sahf
pop
mov
sub
pop
mov
lea
push
push
push
call
add
add
out
add
add
popa
shr
hlt
cmpsl
add
add
add
add
movsl
call
xchg
add
mov
add
insb
shll
lret
ficomps
clc
mov
add
mov
loope
addr16
in
hlt
lcall
call
test
add
add
xlat
jno
mov
xchg
sahf
mov
mov
jb
rcrl
call
mov
loopne
add
add
mov
add
popa
add
shr
add
mov
in
clc
lcall
add
rol
rol
pop
shr
add
push
lea
push
push
call
mov
add
lcall
out
pusha
add
arpl
clc
lods
pop
je
push
add
jnp
jmp
popa
pop
add
add
lcall
add
in
jecxz
xchg
std
pop
test
repnz
cltd
lods
add
push
fisubrl
add
lret
mov
add
lcall
inc
cld
push
push
push
push
push
lea
push
push
push
call
add
out
xchg
nop
repnz
add
mov
popf
pop
int
lcall
imul
cwtl
jmp
add
stos
jno
add
mov
push
add
add
add
jmp
test
nop
xchg
add
sub
pop
mov
add
push
dec
shr
lea
xor
pop
add
push
push
push
push
push
push
call
push
popf
mov
mov
xchg
mov
add
cli
xchg
cmpsl
mov
cmc
addl
insb
mov
add
add
add
push
addl
push
jae
add
add
add
add
push
add
inc
add
add
push
push
call
mov
add
negb
xchg
add
idiv
pop
mov
push
add
out
xlat
rcll
add
mov
xchg
add
call
mov
pushf
popf
pop
lahf
loope
mov
lock
lcall
nop
nop
nop
nop
cmp
jne
push
shr
ror
pop
cmp
jne
push
ror
rol
pop
mov
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
pop
clc
fildl
lods
je
in
addl
add
into
add
add
push
jecxz
push
add
fsubrs
mov
sub
pop
movl
push
sub
shr
pop
jmp
push
xor
pop
mov
push
rol
shr
pop
mov
sub
jne
push
lea
sub
pop
mov
movl
push
push
lea
push
call
add
pop
mov
xchg
flds
push
fcmove
out
roll
mov
loopne
xchg
jl
out
test
mov
add
iret
jecxz
xchg
mov
sti
rcr
sarb
popa
fidivrl
in
hlt
lcall
or
add
push
push
push
lea
push
push
push
lea
push
call
add
imul
add
arpl
loope
add
push
add
pushf
lock
push
cmpsb
xchg
xchg
fadds
mov
add
mov
clc
aam
push
add
pusha
mov
add
add
js
insb
sarb
add
jge
add
push
cmc
mov
cli
out
sub
pop
mov
mov
push
sub
xor
pop
cmp
jne
push
push
push
push
push
lea
push
lea
push
push
call
push
add
add
addb
popl
les
jb
jno
jecxz
add
add
fwait
loop
lret
mov
add
add
add
add
add
out
icebp
add
rclb
add
add
add
add
add
int
add
jge
nop
add
sub
pop
mov
movl
push
push
lea
push
push
push
call
data16
add
pop
lock
add
mov
fists
xchg
add
nop
add
lods
add
push
mov
lock
add
add
mov
jnp
add
lret
add
loopne
xchg
add
fadds
add
add
aam
iret
add
int
add
mov
add
sub
pop
jmp
push
xor
pop
mov
push
sub
inc
pop
cmpw
jne
mov
push
shr
pop
movl
push
shl
shl
ror
pop
jmp
push
xor
not
pop
pushl
pop
push
lea
push
push
push
call
mov
add
jne
leave
test
bound
mov
add
mov
pop
add
jne
repnz
lcall
aad
add
test
imul
add
inc
mov
mov
mov
mov
add
push
mov
xchg
sub
pop
mov
mov
push
sub
dec
pop
mov
push
push
shr
lea
push
or
inc
add
sub
shr
sub
add
sub
shr
pop
not
pop
push
lea
push
push
push
push
call
add
aam
add
fsubrs
lea
lods
mov
xlat
lret
out
pop
lret
add
add
addl
pop
movsl
fidivrs
push
add
jae
add
add
add
aad
xchg
aam
fiadds
add
add
add
push
fidivrl
mov
mov
add
flds
push
sub
not
add
add
pop
call
cmpl
je
push
push
lea
push
or
inc
add
ror
inc
sub
pop
ror
pop
push
push
push
push
lea
push
push
push
push
push
push
call
in
add
mov
add
push
add
jecxz
incb
lock
push
loope
add
add
mov
add
add
add
stos
data16
icebp
xchg
lods
mov
add
loope
rolb
in
fcomps
call
push
inc
pop
cmpl
je
push
push
inc
rol
push
or
inc
add
add
dec
sub
pop
not
pop
push
push
call
pusha
add
jbe
cmc
mov
insb
andb
js
jecxz
jb
add
fstpl
loop
test
pusha
jo
push
outsl
imul
mov
jb
ret
in
clc
lcall
call
push
push
call
add
add
rolb
add
add
jecxz
mov
add
add
into
out
add
add
add
mov
jmp
arpl
add
xlat
pop
call
add
add
int
js
cmc
rolb
add
subb
fidivs
add
in
into
jns
add
add
lcall
cmp
add
int3
je
push
push
not
push
push
pop
add
shr
xor
sub
shl
pop
sub
sub
rol
pop
push
push
push
call
add
add
fcomps
subb
outsl
je
sahf
add
cwtl
mov
add
xchg
add
add
add
aam
idiv
xchg
jl
addl
in
hlt
lcall
push
shl
shl
pop
call
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
imul
rclb
add
hlt
add
xchg
add
faddl
outsl
add
add
mov
xchg
add
lods
test
sub
pop
cmpl
je
push
push
not
shl
ror
push
or
inc
add
xor
sub
rol
pop
pop
push
sub
lea
not
pop
push
push
push
call
add
addl
bound
add
mov
jnp
iret
add
std
std
add
outsl
pusha
je
icebp
add
fwait
add
mov
add
add
add
add
add
cmpsl
pop
add
push
cmpb
add
addl
cmpl
je
push
push
sub
dec
lea
push
xor
add
shl
sub
sub
pop
lea
add
shr
pop
push
push
push
push
push
push
push
push
call
repnz
add
add
addr16
add
xchg
movsl
add
add
out
add
mov
push
add
add
pop
mov
fwait
out
addl
mov
add
add
aad
xchg
mov
add
call
imul
sub
pop
push
push
ror
not
sub
not
pop
call
cmpl
je
push
push
rol
xor
push
xor
add
add
sub
lea
dec
sub
dec
pop
dec
pop
push
not
rol
shl
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
cld
test
cld
outsl
ret
jl
sti
int
add
add
add
pop
enter
mov
sahf
lds
addl
add
add
add
push
les
fcomps
sub
add
cmpl
je
push
push
push
push
pop
add
sub
add
add
sub
shl
sub
rol
shl
pop
xor
sub
pop
push
xor
ror
shr
pop
push
push
pop
call
cmpl
je
push
push
ror
add
push
xor
add
xor
add
sub
xor
sub
shr
not
pop
sub
ror
not
add
pop
push
pop
push
call
push
ror
inc
xor
pop
cmpl
je
push
push
push
sub
add
sub
sub
sub
ror
inc
pop
dec
sub
pop
push
rol
ror
pop
push
push
push
lea
push
call
sbbl
add
pop
add
mov
mov
hlt
add
lock
arpl
test
pusha
nop
lret
jno
mov
push
add
lret
fwait
fsubl
fadds
add
mov
mov
jo
in
lcall
add
add
lods
add
add
mov
hlt
pop
call
push
push
push
push
push
push
push
lea
push
push
call
add
add
flds
sahf
lret
popa
xchg
mov
add
scas
xlat
add
pop
mov
in
fdivr
lcall
cmp
test
add
add
jns
mov
not
dec
add
push
and
add
xor
xor
not
sub
xor
pop
add
add
pop
push
lea
push
push
push
push
push
push
push
call
test
loope
enter
fmull
pop
imul
add
mov
gs
arpl
into
push
hlt
push
roll
in
add
in
loopne
push
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
mov
rolb
jbe
fs
mov
testb
add
xchg
imul
dec
mov
add
test
stos
pop
test
pusha
add
addl
fiaddl
add
sub
pop
cmpl
je
push
push
sub
sub
rol
push
push
pop
add
sub
sub
shl
inc
dec
pop
inc
pop
push
xor
pop
push
push
inc
dec
pop
call
push
push
push
push
push
lea
push
push
push
push
call
add
addl
in
push
push
leave
mov
lret
repnz
add
cld
scas
add
add
fcoms
pop
shll
add
add
add
in
fdivr
lcall
js
jmp
les
je
push
push
inc
push
xor
add
shr
xor
inc
sub
sub
pop
add
pop
push
lea
pop
push
call
push
push
push
push
push
call
stc
movsb
iret
js
pusha
mov
rolb
add
add
push
out
in
call
rcll
add
mov
add
push
ja
mov
add
jl
cli
xchg
jmp
notl
in
sub
pop
cmpl
jne
mov
push
not
dec
pop
movl
push
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
jae
mov
icebp
add
mov
xorb
pop
iret
in
add
add
push
add
xchg
add
test
add
sldt
add
loopne
xor
sub
pop
xor
push
xor
pop
pop
push
sub
ror
pop
pop
push
not
rol
add
pop
pop
push
push
lea
push
push
call
jge
xchg
cmc
in
imul
add
add
mov
mov
sub
add
stos
enter
lahf
out
in
lock
lcall
push
add
pop
leave
ret
push
push
push
call
popa
xchg
cmpsl
cmc
xchg
ja
add
push
lods
lcall
movsl
add
in
xchg
add
lods
add
gs
pop
push
mov
push
lea
push
call
add
leave
pop
mov
mov
leave
add
shll
ja
add
add
push
fwait
pop
add
addl
add
pop
add
cmpl
jne
push
push
inc
lea
shr
push
or
inc
add
xor
not
ror
xor
sub
dec
lea
not
add
pop
xor
pop
push
add
add
shl
pop
pushl
call
push
dec
pop
push
push
not
shr
not
pop
call
push
rol
rol
dec
pop
jmp
push
lea
push
push
push
lea
push
push
call
mov
push
mov
xchg
mov
je
add
mov
test
add
add
clc
jae
rolb
add
movsb
add
les
repnz
je
sub
pop
cmpl
je
push
not
inc
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
bound
jecxz
fiaddl
add
mov
add
add
add
in
mov
add
pop
test
add
add
mov
jmp
add
movsl
add
mov
add
add
lods
lcall
jbe
mov
mov
insb
add
ljmp
sub
pop
mov
call
push
push
add
dec
shl
push
or
not
add
sub
inc
rol
inc
pop
shr
add
shr
shl
pop
push
sub
pop
pushl
call
push
sub
add
pop
lea
push
push
push
push
push
push
push
push
push
call
mov
pusha
add
add
add
icebp
mov
loopne
roll
pop
loopne
add
rolb
test
into
add
add
add
pushf
mov
shlb
outsl
int
mov
cmpsl
lea
add
test
incb
mov
pop
push
push
push
ror
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
std
lret
add
pop
mov
add
shl
movsb
int3
scas
add
jge
clc
add
cmpsb
ret
push
mov
add
add
add
add
lcall
rclb
loopne
xor
pop
ret
push
push
push
call
fdivrl
lods
testb
aam
add
enter
test
int
add
add
jge
add
push
movsb
add
add
add
insb
add
xor
add
push
shr
sub
dec
dec
pop
cmpl
jne
push
push
push
sub
add
sub
sub
inc
pop
not
xor
pop
push
push
push
lea
push
push
push
push
push
push
call
xorb
xlat
mov
mov
loop
add
mov
js
fbld
stos
loopne
add
mov
add
xchg
add
xchg
add
mov
std
add
fcompl
jne
push
xor
sub
pop
call
push
sub
rol
sub
lea
pop
push
push
sub
pop
call
push
inc
pop
jmp
cmpl
jne
push
shl
pop
mov
push
push
call
popl
xchg
out
scas
mov
push
filds
add
add
ja
roll
add
outsl
mov
sub
pop
mov
push
lea
push
push
push
lea
push
push
call
jae
gs
int
add
stos
lods
popf
int
push
xchg
out
add
mov
in
jle
mov
add
add
cmpsb
sub
pop
push
push
push
push
call
lds
xchg
add
mov
aad
add
add
clc
popf
jmp
orb
jmp
in
mov
in
hlt
pop
jmp
push
push
ror
push
and
add
not
sub
add
sub
inc
lea
pop
ror
pop
push
lea
push
push
call
in
stos
into
add
add
jns
jmp
xorb
add
add
out
add
lahf
mov
imull
sahf
cmpsl
add
add
test
xchg
divl
add
ljmp
hlt
lcall
jne
call
push
sub
lea
pop
call
push
push
sub
add
not
push
or
inc
add
inc
add
add
sub
add
ror
pop
pop
push
xor
dec
pop
pushl
call
push
shl
sub
dec
pop
call
push
push
add
lea
push
or
inc
add
dec
shl
sub
not
lea
pop
shr
pop
push
not
pop
pushl
push
xor
lea
lea
pop
call
call
push
push
add
add
push
or
not
add
ror
add
sub
dec
dec
add
pop
xor
pop
push
shr
pop
pushl
call
push
push
call
add
int3
fiadds
push
mov
pusha
add
add
loopne
mov
add
in
insb
xchg
add
lock
mov
leave
lcall
ljmp
clc
pop
lea
push
push
lea
push
call
add
stos
iret
les
add
rolb
add
add
flds
xchg
fldt
ret
add
jmp
iret
add
add
add
add
pop
test
movsl
testl
jge
fwait
add
pop
bound
lds
xchg
lcall
push
shl
pop
call
push
push
shr
shl
sub
push
push
pop
add
rol
not
sub
lea
shl
pop
sub
xor
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
movsl
jae
addr16
mov
add
movl
pop
lods
in
aad
lea
push
add
add
add
jmp
add
jmp
mov
add
add
add
popf
les
sub
pop
pushl
push
pop
call
push
add
shr
ror
pop
call
push
push
ror
add
shr
push
or
inc
add
rol
rol
sub
sub
rol
pop
rol
pop
push
push
push
lea
push
lea
push
push
push
push
call
pop
cmpsl
add
enter
add
insb
test
mov
stos
outsl
mov
add
push
add
ficomps
lock
add
xchg
mov
enter
push
int3
add
out
movsl
pushf
add
add
add
jne
push
pop
call
call
push
push
add
push
and
add
not
sub
sub
shr
shr
pop
not
shl
pop
push
push
push
call
rcrl
addr16
add
fwait
gs
jae
fs
add
push
add
enter
hlt
pop
pushl
push
xor
pop
call
call
push
lea
push
push
push
push
push
push
push
call
fildl
jb
add
lret
fdivs
add
add
mov
add
add
jbe
add
mov
call
stos
sub
pop
lea
push
push
add
push
or
not
add
inc
rol
sub
sub
shr
pop
add
rol
pop
push
add
pop
pushl
call
push
push
push
push
push
lea
push
push
push
call
in
jns
add
lock
add
mov
jge
mov
jmp
mov
test
add
sahf
cmc
jbe
add
out
jb
jp
add
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
pushf
add
add
roll
add
pop
add
sbbb
test
icebp
add
test
mov
add
mov
call
push
push
push
push
pop
add
add
sub
rol
sub
rol
rol
not
pop
sub
pop
push
add
add
pop
pushl
push
lea
pop
call
call
push
push
push
push
push
lea
push
call
add
add
add
jp
add
aad
add
push
imulb
push
jne
mov
stos
add
push
mov
call
in
call
mov
push
push
push
or
inc
add
sub
lea
sub
pop
not
xor
shl
pop
push
push
push
push
push
push
lea
push
call
add
rcl
add
mov
mov
xchg
aad
loope
add
add
cltd
add
add
movsl
mov
add
add
add
push
mov
jns
mov
fucomp
aad
mov
push
xchg
jmp
insb
addr16
sub
pop
pushl
push
dec
pop
call
push
add
pop
push
pushl
push
push
call
jle
add
add
add
add
add
aad
lret
pop
mov
add
mov
add
add
add
fwait
add
add
flds
add
add
add
add
add
add
add
pop
add
add
pop
add
add
in
clc
lcall
shrb
push
jle
push
push
sub
add
sub
sub
pop
xor
sub
pop
push
push
push
push
push
push
call
push
mov
add
cmpsb
add
add
add
movsb
add
add
add
jbe
enter
sti
js
sub
pop
pushl
call
push
push
sub
shl
push
or
not
add
lea
sub
xor
dec
pop
lea
ror
pop
push
push
add
add
push
and
add
sub
lea
ror
pop
sub
lea
xor
rol
pop
push
lea
add
shr
shl
pop
call
push
push
xor
shl
ror
xor
push
sub
add
sub
shr
sub
xor
sub
sub
pop
sub
pop
push
add
pop
pushl
call
push
push
push
lea
push
push
push
push
push
call
ljmp
outsl
add
add
movl
add
add
mov
add
rolb
add
fnsave
push
add
add
mov
jo
add
roll
addr16
mov
xchg
add
add
add
std
add
inc
hlt
push
rol
xor
inc
pop
lea
push
sub
rol
shl
pop
lea
push
push
not
pop
push
push
lea
pop
push
push
push
dec
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
pop
into
fadds
in
pop
add
fstp
add
insb
sarl
pusha
add
cltd
add
add
fmulp
movsb
lock
add
int
mov
add
add
add
in
sbb
pop
flds
into
add
xlat
int
rcrl
fstpt
xchg
mov
add
test
add
repnz
add
add
push
call
fiadds
cmc
popa
fucomip
out
add
add
out
aad
add
add
aad
insb
add
jle
arpl
add
mov
add
add
add
mov
cwtl
int3
xchg
add
jge
add
popf
jb
leave
pop
push
cltd
add
lcall
add
dec
fwait
pop
pushl
push
push
shr
pop
call
push
push
sub
shl
ror
sub
push
xor
add
sub
not
sub
shr
ror
rol
shl
pop
lea
add
shr
pop
push
lea
push
push
push
push
push
call
je
icebp
xchg
clc
loopne
sarl
sub
mov
scas
mov
lea
mov
cwtl
add
add
call
pushl
call
push
push
push
lea
push
push
push
push
call
mov
sti
sti
lahf
mov
add
imul
ja
jl
arpl
add
xlat
pusha
add
xchg
mov
roll
add
add
add
pop
add
add
add
push
lret
and
ret
add
pop
out
in
add
mov
add
cltd
jge
roll
lcall
rclb
bound
aas
add
add
add
mov
jbe
ljmp
mov
lret
sarl
aad
add
mov
push
roll
movb
add
icebp
test
rolb
add
lods
mov
iret
enter
hlt
lcall
inc
clc
pop
push
inc
rol
pop
dec
jne
jmp
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
jnp
jmp
call
shlb
ja
test
mov
add
repnz
pop
add
add
out
add
add
popl
addr16
xchg
add
add
add
xchg
pop
fisubrl
add
add
add
add
testl
add
add
lcall
inc
or
add
in
hlt
in
push
shl
xor
not
push
xor
add
lea
sub
inc
inc
pop
ror
sub
ror
pop
push
add
not
pop
pushl
push
inc
xor
xor
add
pop
call
push
push
lea
push
lea
push
push
call
lret
add
add
out
addb
add
pop
add
mov
int3
stos
add
pop
nop
xchg
bound
aam
add
in
add
into
add
testl
rcr
add
mov
scas
int
mov
outsl
int3
int
sub
pop
call
push
ror
inc
add
pop
mov
push
add
pop
lea
push
push
shr
xor
rol
push
or
inc
add
add
dec
ror
shl
sub
dec
pop
add
pop
push
push
call
add
stos
jns
jae
jmp
stos
add
cmpsl
mov
cmpsb
xchg
add
add
mov
andb
cmc
add
test
add
add
push
arpl
mov
add
jp
repnz
add
fildl
in
fcmovbe
add
lcall
jne
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
jmp
int3
add
add
push
fidivrs
add
mov
rcrl
out
popf
add
call
shr
add
jle
lods
cmpsl
add
loope
xchg
bound
rolb
movb
lea
fwait
add
add
add
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jns
add
xchg
add
add
add
add
add
shlb
outsl
mov
mov
add
add
add
subb
jb
xchg
pushf
in
xchg
push
jmp
stos
sar
pop
push
imul
leave
lahf
popl
ljmp
add
push
incb
lcall
push
push
dec
xor
push
or
inc
add
lea
sub
add
pop
shr
shl
sub
xor
pop
push
sub
pop
pushl
push
push
push
push
call
mov
out
add
add
lcall
add
xchg
xchg
out
add
xchg
add
push
imul
xchg
add
lahf
mov
mov
xchg
add
lock
call
push
push
push
push
push
push
lea
push
push
push
call
roll
add
add
add
mov
lea
stos
pop
add
test
add
add
jle
add
mov
loopne
xlat
in
mov
push
add
mov
js
int
sub
pop
call
push
lea
push
push
push
push
push
push
push
call
int3
add
lahf
je
add
xchg
popf
push
jl
je
add
add
add
loop
add
push
mov
sub
pop
mov
lea
push
push
sub
not
push
or
inc
add
ror
sub
add
lea
pop
lea
xor
shr
pop
push
lea
push
push
push
call
add
add
andl
mov
xchg
outsl
mov
adcb
add
add
add
lock
jbe
add
mov
mov
add
xchg
add
jp
in
add
jmp
xchg
jno
stc
add
mov
pop
add
add
add
xchg
add
imul
or
das
lea
push
call
add
pop
add
pop
add
add
movsl
idivb
add
icebp
add
cmpsl
mov
add
add
mov
ljmp
shrb
add
les
lret
add
xchg
aad
jecxz
pop
add
arpl
sub
pop
call
push
add
rol
pop
lea
push
push
push
lea
push
call
add
add
mov
out
pop
add
incb
add
lret
sti
add
mov
pop
xchg
add
movsb
add
push
mov
mov
pop
add
rorl
in
lock
push
push
push
add
xor
pop
push
push
dec
sub
not
pop
pushl
push
push
rol
dec
push
push
pop
add
add
inc
sub
xor
rol
pop
xor
ror
shl
pop
push
push
push
call
xchg
add
leave
pushf
lret
sahf
xchg
lea
add
mov
mov
test
add
jp
add
stos
add
scas
add
lds
add
add
rolb
js
arpl
add
add
ret
xchg
xlat
aad
mov
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
into
jne
scas
push
add
add
scas
popa
add
into
add
cwtl
stc
sarb
fdivrs
icebp
pop
xchg
mov
test
lock
sub
pop
call
push
push
sub
inc
push
and
add
sub
sub
sub
pop
add
pop
push
push
push
push
push
lea
push
lea
push
push
call
faddl
mov
push
enter
add
add
int3
in
add
sti
stos
add
xchg
nop
jnp
jge
xchg
lea
push
sarb
popa
add
movsb
shlb
push
add
add
iret
mov
sti
add
jl
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
push
push
call
xchg
add
mov
add
add
enter
loopne
roll
test
add
jnp
jmp
mov
push
jge
movl
sahf
pusha
jno
lds
add
add
arpl
add
pop
xchg
add
mov
sub
pop
call
push
push
push
lea
push
call
push
addl
add
rcrl
push
mov
jbe
add
push
ret
jo
mov
jo
push
add
fs
add
mov
mov
je
ret
add
add
testl
out
cmc
add
add
out
int3
add
lcall
lods
sub
pop
call
push
push
shl
sub
dec
shl
push
sub
add
rol
add
sub
sub
pop
shr
ror
pop
push
lea
push
push
push
push
push
lea
push
push
call
mov
jmp
mov
fnstsw
jnp
mov
add
add
add
push
scas
mov
lds
fwait
scas
lea
in
add
jo
add
test
push
add
add
jl
mov
fiaddl
jnp
lcall
out
fcoml
pushl
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
cwtl
rcl
xchg
in
in
jecxz
pop
stc
jge
push
mov
add
xchg
mov
add
filds
stos
jge
addb
cmc
add
jecxz
je
lods
pop
add
sub
pop
call
jmp
push
lea
push
push
push
lea
push
call
stos
add
add
lret
add
rcll
add
add
add
add
add
add
add
pop
popa
add
add
movsl
cmpsl
add
add
add
mov
scas
jmp
add
mov
movsl
jl
and
add
lcall
pushl
push
push
push
push
push
push
push
push
call
add
jmp
add
ret
add
mov
add
xchg
movl
mov
int
popf
fsubrl
addb
mov
jecxz
add
add
in
arpl
add
pop
mov
push
push
lea
push
push
call
add
add
aam
add
jns
push
add
add
sar
add
add
jae
mov
xlat
add
mov
add
add
add
add
add
xchg
bound
mov
lock
jmp
push
push
shr
shr
push
xor
add
xor
sub
sub
shr
ror
ror
pop
pop
push
push
call
in
add
add
mov
add
add
add
add
mov
fadd
shr
add
test
jae
mov
aad
mov
push
pushf
out
add
mov
pop
add
lcall
jne
call
push
push
lea
push
lea
push
push
push
call
icebp
mov
mov
pop
jno
out
add
fildl
pop
jle
fadds
mov
repnz
mov
xchg
addl
icebp
addl
arpl
add
mov
pop
leave
mov
mov
add
add
jne
add
repnz
call
lea
push
push
push
push
call
add
xchg
add
stc
push
pop
mov
add
add
add
add
ret
lcall
add
mov
add
add
mov
add
add
add
data16
push
out
push
jl
in
pop
js
lahf
pop
add
mov
in
lcall
shrb
add
xlat
push
xor
rol
push
or
inc
add
lea
not
ror
sub
shl
pop
shr
pop
push
push
push
push
push
push
push
push
push
push
call
add
lods
jno
add
test
add
movsl
add
xlat
add
add
cli
les
rcrb
lcall
jne
push
push
call
pop
in
les
les
add
jle
popa
add
movb
subl
add
add
add
push
leave
xchg
add
mov
add
add
clc
add
push
add
lcall
dec
push
add
push
not
pop
push
push
push
call
add
movsb
nop
add
les
add
test
subb
shlb
add
arpl
mov
add
xchg
mov
sub
pop
call
leave
push
inc
add
pop
add
push
push
push
push
call
mov
loope
add
cmpsb
mov
mov
rolb
add
add
add
add
test
int3
add
sub
pop
pop
push
push
push
push
push
push
push
push
push
push
call
out
lock
add
sahf
mov
add
mov
std
addl
add
add
std
add
fadds
cltd
add
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
call
add
mov
ljmp
ljmp
rolb
je
mov
mov
loopne
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
iret
pop
popa
mov
jge
add
fildl
add
add
add
in
jo
add
outsl
shll
add
out
aam
jecxz
mov
in
loopne
leave
add
push
sub
shl
pop
ret
push
add
pop
leave
push
sub
add
add
ror
pop
ret
push
dec
sub
xor
ror
pop
push
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
add
add
shrb
push
cmpsb
add
popf
imul
enter
push
adc
pop
add
jns
mov
xchg
jno
add
ljmp
add
mov
mov
push
sub
sub
add
pop
cmpl
jne
push
push
push
push
push
lea
push
lea
push
push
call
fcoms
pop
pop
add
add
add
lret
enter
add
add
add
jno
add
mov
push
add
add
addl
add
add
push
cld
popa
mov
add
mov
push
sub
pop
jmp
push
push
push
lea
push
push
call
add
repnz
jmp
push
imul
add
pushf
mov
test
not
std
add
cli
mov
pop
mov
into
fs
add
push
jl
sub
pop
mov
push
push
push
push
push
push
call
xchg
add
loopne
push
pop
roll
add
lock
add
add
pop
lds
jp
int3
add
popf
jp
mov
add
xchg
add
rclb
lcall
and
xor
push
lea
push
lea
push
push
push
push
push
push
call
lahf
add
add
mov
add
add
addb
negb
fildl
mov
xchg
cltd
stc
out
push
add
lea
insb
sub
pop
xor
push
add
pop
add
xor
push
xor
shl
not
shr
pop
dec
push
shr
ror
pop
sub
push
push
lea
push
lea
push
push
push
push
call
add
mov
mov
imul
enter
mov
incb
leave
add
add
jp
jecxz
add
out
imul
addb
add
lods
xchg
loop
push
xchg
mov
mov
add
add
sti
bound
add
jp
add
in
in
jmp
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
int3
add
mull
add
add
mov
mov
shlb
add
add
add
mov
out
add
mov
jp
add
add
add
rcrb
add
in
fcompl
add
add
push
shl
pop
pushl
push
rol
add
dec
pop
pop
sub
push
shl
xor
not
pop
cmp
jne
push
push
call
push
add
xchg
mov
add
add
add
add
roll
add
or
add
add
faddl
add
out
xchg
jle
add
fnsave
lea
lcall
enter
shr
ror
pop
lea
push
rol
lea
shr
pop
sub
push
shl
inc
pop
mov
push
dec
pop
shr
add
push
lea
push
lea
push
call
add
mov
add
add
add
jmp
sahf
add
jmp
xchg
add
hlt
pop
sub
push
push
lea
push
call
subb
testb
mov
add
out
add
stos
iret
data16
loop
add
add
add
push
add
loope
add
add
std
xchg
sub
pop
pushl
push
shr
add
rol
lea
pop
pop
push
push
push
push
lea
push
push
call
mov
jge
gs
jo
popf
jmp
add
add
roll
std
push
mov
mov
movsl
popa
add
lcall
jmp
mov
iret
mov
loope
incl
add
adc
push
push
push
call
fs
add
add
pop
add
adcb
pop
xchg
filds
cltd
rol
mov
loope
stc
cmpsb
pop
add
xchg
add
add
add
mov
roll
out
cmpsb
lock
clc
mov
incb
ficomps
mov
sub
pop
sub
cmp
jne
push
push
push
push
call
add
add
add
add
add
add
mov
add
add
mov
cld
cmc
int
pop
popf
jecxz
cwtl
add
pop
leave
ret
push
lea
pop
push
mov
push
not
add
pop
add
push
push
push
push
push
push
call
fwait
add
add
icebp
mov
les
pop
add
cmpsl
xchg
fldl
mov
mov
add
enter
mov
add
xchg
add
lcall
push
push
push
push
call
mov
out
add
mov
mov
loope
push
add
xchg
xchg
add
add
pop
mov
add
mov
in
lock
push
push
lea
inc
pop
push
push
push
push
call
add
add
mov
add
jp
fnstenv
jns
xchg
data16
add
bnd
jmp
in
add
add
roll
add
bound
mov
add
fldcw
loop
testl
lock
into
add
in
clc
lcall
pop
or
fldt
fcompl
ljmp
ljmp
adc
ljmp
add
push
ror
sub
dec
pop
mov
push
ror
not
pop
add
mov
push
push
push
push
lea
push
call
addl
icebp
mov
jno
mov
add
add
pop
mov
jl
clc
mov
data16
repnz
jb
add
add
add
stos
add
sahf
jno
sub
pop
add
xor
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
out
add
push
rol
mov
cmpsl
fiaddl
xchg
add
fwait
lahf
add
std
mov
hlt
out
enter
leave
ffree
mov
in
add
add
fadds
aam
pushf
add
mov
jp
mov
add
pop
sub
pop
mov
and
push
dec
pop
rol
push
push
lea
push
push
call
jl
add
lcall
mov
std
pusha
add
iret
add
fstl
add
mov
fistl
xchg
fldl
loope
add
fsubrl
add
ret
add
rolb
lcall
jl
imul
fiadds
lret
add
std
add
xchg
lret
sub
pop
rol
xor
push
ror
pop
inc
push
push
call
add
add
cmpsl
add
add
lock
xchg
add
pushf
push
add
in
add
cmpsl
scas
add
mov
add
fiadds
out
lods
enter
add
scas
sub
pop
cmpb
jne
add
push
lea
pop
cmp
je
push
push
push
push
lea
push
push
push
push
push
call
movl
pop
ljmp
jno
pushf
jnp
jae
arpl
add
pop
mov
test
js
rolb
add
add
add
add
in
lahf
xchg
mov
lcall
jl
out
cli
add
add
add
add
pushf
aad
add
ret
adc
jnp
add
test
dec
lea
pop
xor
pop
push
push
push
call
add
pop
out
xchg
add
out
fcompl
add
add
add
cmpsb
add
test
add
mov
add
lahf
pop
shrb
add
mov
pop
push
push
lea
push
push
push
lea
push
call
aad
add
loope
add
mov
mov
pusha
add
test
add
add
add
add
mov
add
add
pop
pop
push
rol
shr
pop
pop
push
push
lea
push
lea
push
push
call
rolb
roll
add
pop
sti
flds
rclb
add
add
mov
rol
cli
fs
arpl
add
lcall
push
sub
inc
pop
ret
mov
push
dec
not
ror
lea
pop
add
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
jo
push
mov
mov
add
xchg
add
add
add
add
mov
add
pop
mov
pushf
add
je
clc
add
mov
add
mov
jge
add
add
add
popa
sub
pop
push
push
sub
shl
pop
add
mov
push
push
lea
push
call
fistps
add
add
lea
xchg
xchg
in
add
insb
stos
shl
add
test
add
add
add
mov
pusha
sub
pop
testw
pop
push
dec
pop
pop
push
lea
pop
mov
push
push
sub
shl
add
pop
call
xor
push
push
lea
push
push
push
push
push
push
call
lcall
pop
add
je
mov
mov
roll
add
add
addr16
fstpt
mov
add
add
mov
mov
push
add
mov
xchg
push
mov
add
add
add
enter
in
add
sub
pop
pop
push
inc
not
lea
ror
pop
pop
push
xor
dec
dec
pop
pop
push
xor
not
pop
pop
push
push
call
faddl
add
lcall
jno
pusha
js
push
sti
xchg
mov
add
in
mov
pop
add
in
ja
add
cmpsl
add
leave
jle
add
mov
loop
push
idiv
add
pop
data16
mov
add
shrb
stos
mov
clc
pop
pop
push
push
lea
push
call
mov
add
cld
add
jo
mov
add
add
xchg
add
mov
add
push
fdivrl
scas
out
hlt
clc
mov
sub
pop
leave
ret
push
lea
push
call
add
movsl
pusha
add
lods
add
jns
add
movsl
jns
add
into
mov
push
mov
ja
loopne
sti
call
sub
pop
push
push
push
push
push
push
push
push
call
jae
xchg
std
pop
int
add
cld
mov
je
add
pop
add
mov
add
add
add
add
add
add
in
in
mov
add
push
add
shr
pop
push
push
not
ror
pop
push
push
pop
push
push
push
add
shr
pop
mov
push
xor
pop
push
pop
push
push
lea
push
push
push
lea
push
call
lods
jo
add
mov
lret
aam
push
mov
pop
pop
add
xchg
add
fstpt
mov
add
xchg
add
ret
hlt
mov
add
add
add
push
pop
faddl
fildl
add
push
call
push
push
lea
push
push
push
lea
push
push
call
add
add
add
pusha
movb
add
ror
pop
sar
add
mov
add
xchg
add
out
add
jecxz
add
add
push
fisttps
push
cmpsl
leave
add
pop
js
push
add
movl
add
pop
sahf
push
pushf
gs
pop
sub
push
lea
pop
mov
push
push
push
lea
push
push
call
push
test
outsl
lds
mov
stc
add
fiaddl
jl
push
test
stos
add
add
mov
xchg
push
add
addr16
clc
push
add
add
mov
add
add
xchg
div
addr16
add
cmpsb
add
mov
add
add
cli
push
add
add
add
add
lcall
ljmp
and
cmpb
insb
push
lea
push
call
in
popl
jo
jl
mov
add
fisubrl
jns
add
add
push
mov
repnz
rolb
add
js
add
rolb
add
add
ja
pop
add
add
xchg
lcall
pop
mov
push
add
add
not
pop
add
push
rol
shr
pop
pushl
push
push
push
push
push
lea
push
push
push
call
stc
fcomps
outsl
add
jb
add
iret
add
add
push
outsl
fstpl
cwtl
lea
add
pushf
jns
lcall
jno
xchg
gs
loop
mov
push
icebp
lcall
xorb
popl
push
lea
push
push
call
cmc
mov
add
add
add
add
cmc
mov
add
add
iret
add
pushf
int
add
call
shlb
addb
into
in
ja
add
cmpsl
movsl
mov
jae
add
sahf
test
add
pop
leave
movsb
add
jno
add
jno
mov
add
hlt
pop
mov
push
xor
xor
inc
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
call
std
nop
lcall
data16
divb
icebp
mov
mov
int3
add
mov
mov
add
mov
add
cli
mov
add
push
mov
push
add
enter
add
add
xchg
add
aad
lcall
add
jb
test
in
lcall
notb
ret
cmc
dec
sub
pop
lea
push
add
inc
inc
pop
mov
push
shl
lea
not
pop
add
push
push
lea
push
push
push
push
push
push
push
call
mov
into
leave
imul
pop
repnz
add
arpl
faddl
add
add
pusha
jae
add
rolb
arpl
add
push
add
add
add
call
mov
add
add
push
aad
into
add
gs
sub
pop
xor
rol
push
lea
push
push
push
push
push
call
mov
xchg
add
lea
movb
jno
mov
mov
add
mov
add
out
pop
add
mov
testl
add
add
sub
pop
nop
nop
push
push
push
push
push
lea
push
call
ret
add
cmpsl
push
add
pop
add
nop
mov
loopne
add
jne
mov
repnz
pop
xor
push
xor
pop
nop
push
sub
xor
xor
not
pop
nop
inc
push
lea
push
call
addr16
rcr
add
call
jb
stos
enter
pop
xchg
mov
add
stc
add
push
push
addb
mov
add
add
add
add
cmpsl
hlt
jl
in
clc
lcall
push
push
call
jae
add
add
add
pusha
ja
jmp
ljmp
push
add
add
add
test
add
add
in
clc
pop
nop
push
push
push
push
lea
push
push
push
push
push
call
jge
add
lock
out
mov
add
notl
icebp
clc
jne
add
add
popa
jbe
lds
lea
add
jne
fistps
push
add
sti
add
popf
mov
push
add
faddl
sub
pop
cmpb
jne
add
push
rol
shr
pop
nop
push
push
lea
push
lea
push
push
call
je
rcrb
fists
je
add
add
xchg
add
xchg
jp
lods
pop
mov
xchg
cmpsb
add
add
repnz
push
add
js
fs
stos
lock
add
add
add
jo
add
add
xchg
sub
pop
nop
push
push
push
push
call
xchg
mov
in
add
add
loope
add
add
mov
jle
mov
jbe
add
pop
rolb
jne
mov
jp
shlb
add
mov
add
add
add
add
divb
add
inc
or
test
add
add
shr
xor
pop
nop
nop
push
add
pop
inc
push
add
lea
sub
pop
nop
push
add
add
pop
nop
cmp
jb
push
push
push
push
push
push
call
pushf
push
aad
jmp
add
add
add
add
add
xchg
jl
imul
addb
test
add
add
out
mov
lret
push
add
pop
int3
mov
imul
xlat
sub
pop
xor
push
push
push
push
push
push
lea
push
push
call
pop
add
insb
mov
add
movsl
and
add
add
jo
fwait
sbbb
int3
cmpsl
cli
add
cmc
push
jmp
js
push
add
nop
mov
add
add
jb
iret
add
mov
jnp
mov
lcall
int
add
push
pop
mov
push
push
call
lods
outsl
jl
sti
stos
push
push
pop
cmc
push
mov
mov
loope
jo
add
mov
push
loope
mov
mov
cltd
mov
lock
add
loopne
add
mov
add
loope
push
add
adcl
test
add
pop
add
pop
add
jns
sub
pop
add
movzwl
push
push
push
push
push
push
lea
push
call
lcall
add
popa
add
in
add
popf
add
scas
add
lahf
mov
add
add
jo
jecxz
nop
mov
add
add
mov
movsb
cmpsb
add
add
jb
xchg
sub
pop
mov
push
shr
shl
shr
add
pop
add
push
dec
pop
mov
xor
push
push
push
push
call
add
mov
jne
mov
add
add
mov
mov
roll
add
jecxz
out
pushf
in
add
add
add
mov
out
popl
add
lds
add
hlt
shrb
add
jmp
lcall
dec
nop
add
lea
push
push
push
push
call
add
fdivs
add
pop
add
add
icebp
fisubrs
lcall
icebp
popa
mov
mov
out
filds
add
fwait
add
lcall
loope
push
lea
push
lea
push
push
call
stc
xchg
int3
mov
jb
add
push
add
mov
add
sub
add
push
cmpsb
jl
xchg
mov
add
add
push
add
push
mov
sub
pop
xor
shl
push
dec
pop
xor
push
lea
sub
add
pop
shl
push
push
call
mov
add
in
out
repnz
imul
add
addb
rcrl
add
add
add
addl
push
add
add
jns
ja
sub
add
pop
cmpsl
cmpsb
add
cld
movsl
add
jp
loop
enter
movsl
movsb
add
add
sub
pop
xor
push
add
lea
pop
mov
add
push
lea
not
shr
pop
pop
pop
push
push
push
lea
push
push
push
push
call
jge
mov
ljmp
jb
add
add
xchg
add
jb
pop
jnp
not
loop
add
lods
sub
pop
pop
pop
push
shr
shl
pop
leave
push
inc
pop
ret
push
push
lea
push
lea
push
call
lock
mov
add
add
add
push
jne
add
add
out
mov
pop
add
imul
loop
add
mov
push
push
push
push
push
push
push
push
push
call
add
jne
mov
add
aad
clc
aam
insb
jle
jbe
ljmp
je
add
add
mov
add
add
jge
out
add
lock
in
fdivr
lcall
push
push
sub
shl
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
addl
push
xchg
add
std
icebp
mov
lods
call
pop
les
enter
ret
into
lods
add
imul
imul
rolb
flds
add
xchg
xchg
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
add
lahf
add
add
pop
add
add
leave
push
add
add
pusha
lahf
cli
add
xor
jecxz
add
in
add
lods
pop
lods
sti
mov
lcall
dec
or
push
lea
push
lea
push
push
push
push
push
push
push
call
idivl
fadds
add
aad
add
push
cli
insb
add
in
mov
scas
add
add
lret
push
popf
mov
imul
sub
mov
push
xorl
cmpsb
add
cmpsb
pop
sti
add
mov
pushf
pop
fldenv
addr16
pop
push
mov
add
imul
enter
lcall
adc
test
je
mov
push
add
add
not
dec
pop
test
je
push
push
push
push
call
ljmp
leave
addr16
ja
pop
iret
xchg
push
xchg
addb
mov
add
xchg
add
mov
add
add
cli
cmc
add
xchg
ror
mov
push
add
jl
pop
fwait
pop
scas
jbe
out
stos
add
rolb
fsubrs
pop
mov
push
shl
xor
pop
mov
mov
push
add
pop
inc
push
add
add
pop
cmp
je
push
add
xor
dec
pop
test
je
push
push
push
push
push
lea
push
push
push
push
call
add
pop
out
jle
fiadds
les
rorl
in
scas
add
xlat
add
icebp
popa
push
mov
push
push
push
lea
push
lea
push
push
push
push
push
call
arpl
add
add
pusha
add
loop
mov
jle
stc
add
in
add
movsb
jecxz
xchg
add
add
mov
imul
bound
test
add
add
cli
add
add
sub
pop
inc
cmp
je
push
push
push
push
push
push
call
insb
jp
jbe
fdivr
add
out
mov
mov
add
add
add
add
arpl
add
jl
add
popa
add
add
xchg
cli
mov
sub
pop
test
jne
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
addb
mov
add
pop
stos
push
movb
fs
les
add
loop
add
add
add
add
xchg
fwait
xchg
xchg
ja
in
fdivr
lcall
rclb
inc
mov
pop
or
jno
push
push
call
call
add
add
arpl
out
add
mov
mov
mov
lds
add
add
add
jns
pop
add
xchg
jp
add
stc
shl
add
add
test
add
pop
add
in
loopne
pop
pop
push
push
push
push
push
push
push
push
call
je
imul
xchg
rolb
add
add
mov
add
mov
lods
add
out
in
out
push
add
cmc
pop
pop
push
enter
gs
scas
mov
add
add
add
add
in
add
add
sub
pop
pop
push
pop
pop
leave
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
cld
mov
add
jge
stos
pop
arpl
mov
pusha
pop
pop
fnstcw
out
add
add
jns
mov
xchg
movsb
int3
mov
iret
jbe
mov
ljmp
fnstsw
pushf
pop
add
jmp
stc
lea
lcall
imul
fmulp
add
add
lcall
or
mov
push
lea
push
push
call
add
and
xchg
addr16
jne
mov
pop
loopne
pop
ficoms
xchg
add
add
add
mov
fists
pushf
jp
cmpsb
add
add
lcall
clc
out
lret
fildl
add
add
mov
jae
add
hlt
lcall
push
rol
inc
pop
cmp
jne
push
sub
add
pop
lea
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
fdivrs
push
add
lods
add
fildl
in
add
add
mov
mov
test
jae
mov
cli
pop
lcall
add
add
add
mov
addb
insb
add
mov
add
jge
add
sub
pop
test
je
mov
push
push
lea
push
push
push
push
lea
push
call
incb
test
add
xchg
mov
fadds
jl
incb
add
add
mov
add
pop
mov
popf
shl
mov
loopne
add
cmpsb
movsb
add
add
mov
add
lea
xchg
fildl
add
in
add
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
add
pop
xchg
add
pusha
rclb
add
sahf
add
add
ret
add
jns
cld
add
mov
add
repnz
lea
movb
add
rclb
jns
imulb
add
addr16
pop
mov
push
rol
rol
pop
test
je
push
shr
pop
mov
add
push
not
pop
cmp
je
push
lea
pop
jmp
xor
push
shr
shr
xor
sub
pop
pop
push
push
call
pop
je
pushf
add
in
xchg
add
incb
add
iret
cmc
shr
add
arpl
iret
js
into
add
fs
addb
popl
fcmovnbe
add
out
mov
add
lcall
push
push
call
add
add
push
int
popf
add
add
add
loopne
add
add
xchg
frstor
pop
outsl
push
imul
add
add
ljmp
add
add
clc
pop
pop
push
dec
pop
pop
push
push
push
push
push
call
add
add
out
add
sbb
xchg
gs
add
add
add
les
lods
int
add
out
xchg
mov
jne
pop
push
bound
add
cli
cltd
in
outsl
add
pop
add
in
call
add
add
mov
xchg
je
lods
xchg
sub
pop
leave
ret
push
inc
pop
lea
push
push
push
lea
push
push
push
push
call
add
add
add
push
roll
add
test
add
add
xchg
mov
xchg
pop
pop
cld
imul
add
pop
add
pusha
jb
add
test
test
add
xchg
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
mov
add
fildl
add
testl
jns
add
add
add
add
out
mov
pop
std
into
mov
filds
ficoml
je
cld
add
imul
sub
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
call
in
fdivr
add
add
lret
je
pop
not
shll
pop
add
mov
add
popf
fiadds
in
stos
add
mov
push
pop
fsubrs
pop
sub
pop
pop
pop
push
not
add
pop
leave
push
rol
rol
not
pop
ret
push
sub
dec
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
pop
add
add
add
popa
add
insb
add
add
add
jno
divb
flds
add
xchg
fadd
outsl
jecxz
add
add
ret
add
imul
add
jmp
mov
mov
in
fcompl
push
sub
pop
pop
push
xor
shr
add
add
pop
pop
push
push
push
push
push
push
push
push
push
call
jb
add
jmp
mov
jb
cltd
add
mov
add
add
mov
mov
ljmp
cmc
add
fxam
mov
fadds
mov
add
add
jmp
add
xchg
pusha
add
mov
xchg
add
cltd
jo
pop
xchg
call
add
add
push
push
push
push
push
push
push
lea
push
call
jecxz
lahf
addr16
add
add
insb
add
add
xchg
mov
popf
add
add
cld
mov
mov
lods
cwtl
add
test
outsl
mov
lret
mov
stos
add
add
popl
add
mov
in
jl
add
push
add
in
loopne
lcall
push
rol
lea
pop
ret
xor
cmp
adc
xor
adc
adc
adc
xor
adc
cmc
cmp
xor
adc
jb
adc
cmp
sub
xchg
sub
xorl
data16
setne
jmp
aaa
mov
sub
leave
adc
rol
pop
jmp
mov
hlt
je
out
inc
and
xor
ja
jle
out
in
sbb
xchg
aas
or
push
mov
push
ret
enter
cltd
sbbl
lds
pop
aad
xchg
test
out
out
test
xor
sub
or
outsb
outsb
xor
pop
push
and
cld
mov
ret
xor
cmp
push
stos
mull
cld
fisttpll
inc
ja
dec
not
pop
ljmp
mov
mov
xchg
jbe
push
int
jns
push
mov
or
inc
mov
outsb
test
sub
dec
test
scas
std
mov
push
ret
out
addr16
fsubrl
out
adc
adc
jl
adc
sub
mov
les
jecxz
add
xchg
enter
mov
xchg
les
mov
or
mov
jns
push
fst
jb
mov
lret
push
push
ret
fwait
adc
stos
sub
xchg
sub
push
pushf
dec
inc
stc
cmp
pop
jbe
sbb
std
fdivrl
pop
or
xchg
popa
dec
push
mov
test
mov
pushf
jo
xor
insb
pop
into
xchg
fwait
cmpsb
inc
xchg
sub
mov
sbb
pop
fnstcw
ljmp
dec
inc
and
loope
xor
jns
stos
in
gs
test
mov
imull
aam
push
cmp
lret
loope
or
fnstsw
fsin
inc
imul
or
cmp
cmp
popf
mov
mov
stc
fisttps
out
bound
clc
push
cmp
adcl
cmp
shrb
loopne
pushf
addb
lock
push
mov
ja
push
adc
pop
or
ret
fwait
cmp
shr
cwtl
push
inc
sbb
pushf
dec
fdivl
fsubrl
sahf
push
in
mov
push
scas
cltd
idivl
mov
adc
mov
adc
shll
inc
sbb
push
int
pop
cld
inc
lcall
and
scas
add
fsubrs
inc
bound
adc
pop
xor
add
xor
cltd
add
mov
mov
out
cmp
mov
in
jnp
pop
les
cmp
mov
cmp
lock
lret
push
or
imul
fwait
jle
xchg
sub
jns
popf
adc
sahf
scas
cmp
stc
adc
mov
dec
es
imul
mov
inc
daa
xchg
inc
stos
cmp
and
out
mov
mov
in
mov
xor
pop
fisttpll
mov
and
xor
and
cmc
xor
lret
mov
and
jg
gs
jmp
and
mov
fdivrs
push
jnp
cs
aas
es
push
aad
das
repz
rcl
aaa
repz
jge
test
insl
xchg
mov
int3
sbb
mov
mov
mov
fdivl
jne
xchg
cli
inc
es
adc
pop
arpl
insl
cmp
adc
out
sub
jae
out
or
mov
pop
jnp
popa
mov
outsl
test
aad
icebp
add
inc
mov
icebp
mov
rcrl
xchg
jno
sarl
push
pushf
fisubs
dec
push
sbb
mov
sahf
int
sub
inc
sbb
jp
or
cmp
fimull
cmp
int
sub
push
idiv
fildll
push
push
lret
adc
test
popl
mov
pop
xchg
jne
jmp
xchg
pusha
mov
xchg
adc
dec
cwtl
iret
mov
shll
jbe
loop
imul
ret
inc
lret
adc
scas
call
pop
hlt
push
lods
inc
ljmp
mov
loop
fucomip
faddl
push
out
cmp
lcall
shll
movsb
lcall
xchg
loop
imul
popf
jp
dec
std
cwtl
mov
dec
aas
test
nop
je
shufps
cmpsb
cmp
or
adcl
mov
stos
pop
xchg
sbb
xor
adcb
scas
push
sahf
out
pushf
mov
adc
sub
xchg
pushf
lret
cmp
mov
fistpll
aas
inc
cli
jae
and
das
and
adc
pop
mov
ds
jnp
jb
push
fsubrl
ljmp
les
idivl
and
das
jg
pop
leave
pop
packsswb
insb
mov
push
mov
stc
test
jmp
and
cmp
clc
movlhps
shlb
imul
and
bound
addr16
mov
jmp
stos
jno
ret
mov
or
das
sub
mov
cld
jnp
sbb
js
jo
xor
xchg
movsl
lea
cld
cmpsl
int3
mov
mov
inc
mov
or
pop
hlt
mov
lahf
pop
movsl
jno
jne
cmp
push
fdivrs
and
out
lods
inc
mov
sbb
test
stos
icebp
data16
lret
gs
push
cld
int3
addr16
add
adc
ret
lcall
dec
and
jp
fiadds
xchg
icebp
out
stos
dec
ret
mov
sbb
mov
cmp
cmp
jo
dec
cwtl
in
pop
out
cli
dec
dec
loopne
pop
xor
jno
xor
call
leave
cld
jno
orb
test
jge
fdivl
out
jns
jae
cltd
inc
pop
mov
dec
pushf
aam
testl
adc
outsl
mov
popa
adc
ljmp
ds
nop
in
insl
mov
push
or
jle
sub
pop
and
popa
aaa
lret
std
popf
push
imul
test
add
jno
mov
push
cmp
cwtl
mov
ja
xor
arpl
sbbl
cmp
xor
jbe
ss
mov
rcll
push
or
insb
dec
cmp
or
adc
pop
fs
mov
insb
rorl
mov
dec
lds
or
fcompl
icebp
outsb
icebp
jle
pop
popa
or
stos
shl
cmp
xor
ja
rolb
sbb
adc
mov
lock
sahf
mov
rcl
mov
mov
jo
ret
jge
arpl
outsl
fisubrs
lret
pop
xchg
inc
mov
aas
jae
jno
lods
jp
pop
paddd
pop
mov
or
inc
add
dec
sti
push
jno
jne
sub
or
sbb
test
popf
cmp
mov
mov
jmp
jge
dec
jns
fisubl
fs
jmp
mov
bound
pop
sbb
jl
sar
js
inc
push
pushf
shlb
leave
and
inc
or
fsubr
jg
mov
cld
pop
into
sub
cwtl
cmp
clc
shrb
add
je
fsubr
repz
jnp
es
push
xchg
and
aas
incb
ror
dec
fisttpll
mov
fidivs
je
sbb
rclb
mov
outsl
push
ja
jmp
pushf
add
mov
scas
clc
lcall
inc
aam
add
je
popf
test
iret
sub
xchg
xchg
add
fcompl
mull
sbb
pop
loop
jge
push
es
stos
sbb
imul
mov
scas
in
fsts
stos
dec
jne
icebp
dec
jbe
jo
lods
pop
push
scas
xor
fwait
cld
mov
lret
or
mov
inc
movsb
scas
jp
fimuls
jnp
mov
ljmp
lods
enter
mov
or
in
add
dec
cltd
je
pop
mov
push
ja
mov
int3
jg
xchg
cmp
jecxz
mov
pop
xchg
xor
push
inc
mov
jo
inc
adc
jno
decl
xor
push
adc
mov
mov
push
or
ret
out
add
push
in
iret
aaa
leave
shlb
xor
shr
jge
loope
into
enter
inc
out
pushf
adc
cmp
sub
and
add
cs
xchg
nop
fnstcw
cltd
ret
dec
sbb
std
aaa
jno
sub
in
sub
pop
lea
fcmove
pop
outsl
fwait
and
sbb
popf
mov
adc
stc
imul
lahf
and
mov
je
pusha
dec
leave
and
or
sub
inc
add
pop
xchg
inc
mov
fsubrs
lret
test
stos
cmp
int3
aam
sahf
jb
mov
shrb
or
add
repz
push
and
lahf
or
das
xchg
sbb
es
cmp
gs
mov
in
adc
out
xor
mov
imul
cmp
roll
ljmp
xchg
xchg
shll
lret
push
dec
lock
cld
icebp
mov
xchg
push
outsb
mov
sub
mov
mov
jbe
enter
mov
in
rcr
dec
mov
add
add
mov
sahf
lcall
pop
mov
flds
dec
lods
push
cmpsb
ljmp
repz
fstpt
push
jmp
popa
fdivs
xor
in
loopew
xchg
push
hlt
rol
jle
imul
xor
dec
ds
pop
sbb
fldenv
mov
dec
cmpl
lods
mov
and
xor
mov
cmp
stc
fistpll
push
jg
sub
push
out
testl
lahf
or
cmc
push
bound
sbb
data16
movsl
jns
cmp
sbb
icebp
ret
imul
in
cmp
push
leave
mov
lods
clc
in
cmp
mov
sbb
test
daa
imul
jg
imul
je
sbb
mov
xlat
add
pop
jp
and
repz
push
push
mov
sub
pop
outsb
or
shrb
cli
insb
jno
aaa
pusha
pop
enter
movsbl
dec
sbb
dec
mov
cmp
stos
fs
movsl
scas
insb
mov
into
aas
jmp
loopne
in
xchg
pop
jo
dec
inc
pop
pop
xorb
je
bswap
icebp
xor
lods
push
scas
outsl
call
rcll
pop
fdivrp
loope
clc
pop
lods
adc
inc
popf
add
lock
sbb
rolb
mov
inc
dec
adc
test
xchg
cmp
aaa
mov
or
in
lret
add
mov
nop
inc
jl
into
pop
mov
sahf
je
subb
inc
mov
stos
scas
pop
ret
pop
cmp
lahf
xchg
stos
clc
add
inc
orl
or
adc
mov
sub
push
mov
insb
cmp
mov
push
jb
mov
clc
and
pop
rorb
int3
jmp
xchg
jecxz
ljmp
xor
mov
mov
loopne
nop
nop
mov
in
mov
cmp
stos
mov
test
call
stos
and
fsubrs
jnp
insb
hlt
rcrl
or
fbstp
jae
pop
shll
frstor
popa
inc
adc
test
pop
shrl
hlt
daa
ja
jp
push
fdivl
mov
cmp
rclb
sub
mov
add
mov
imul
sbb
sbb
dec
adc
repnz
stc
mov
movsb
int
xchg
jbe
jp
push
fdivs
loop
dec
and
mov
dec
mov
repz
pop
fdivs
mulb
cmp
lret
sub
int
pop
and
ss
mov
push
sub
lret
sub
cld
adcl
add
imul
pop
mov
adc
rol
paddw
push
mov
out
cmp
cmp
bound
push
mov
sar
subb
dec
jno
cwtl
pusha
in
adc
shrb
or
mov
push
ds
and
sahf
xchg
mov
fwait
sbb
pop
cld
loopne
push
dec
sub
dec
dec
mov
cmp
rcrl
scas
xor
movsb
jb
sbb
cli
orb
push
xor
and
out
cmp
cmp
and
jmp
jg
repz
adc
dec
out
xor
test
fsubl
mov
ja
xor
pop
or
dec
roll
enter
mov
dec
pushf
and
loop
add
mov
jle
fs
lds
test
aas
daa
js
test
xor
sub
fs
xor
xchg
and
test
jmp
js
mov
jecxz
cmp
idivb
cwtl
or
loope
addl
mov
scas
loope
movsb
xor
mov
fs
pop
imul
sub
js
insl
dec
incb
mov
mov
xchg
iret
cmp
sbb
loope
clc
int
aaa
xchg
mov
jge
xchg
sbb
scas
jnp
ja
jmp
arpl
gs
repz
add
xorl
hlt
and
stos
jne
add
es
in
insl
pop
dec
ds
mov
outsl
in
mov
aaa
add
add
lcall
add
movsl
jg
inc
fldenv
pop
rcl
sub
push
sti
mov
ret
sub
inc
sti
jmp
in
mov
push
lea
andb
cmpsb
test
out
repz
or
negb
imul
cmpsl
pop
insb
gs
scas
call
movsl
jmp
cmc
sbb
push
fwait
xchg
add
enter
popa
mov
test
and
jecxz
dec
or
aas
andl
push
push
lea
jbe
lock
loopne
movsl
xor
rcrb
in
pushf
in
xchg
xor
dec
fwait
xchg
push
cs
stos
ss
imul
xor
int3
js
loopne
cmp
xorl
xlat
add
dec
sub
lods
je
cltd
xchg
daa
mov
dec
push
ret
mov
pop
in
jbe
pop
mov
pop
jne
inc
adc
arpl
inc
popa
sahf
cli
pop
fnstsw
icebp
adc
addr16
loopne
push
shlb
pop
int3
xor
sub
mov
xor
mov
scas
ds
fldt
call
lret
movsl
lods
cmc
mov
jbe
ja
push
pop
loopne
into
add
cmp
push
js
enter
and
xchg
jne
cld
push
pop
fisubs
inc
pop
pop
mov
adc
std
in
in
push
mov
pop
mov
arpl
insl
std
and
inc
cmp
lods
addr16
outsb
and
inc
push
or
xor
or
aaa
sub
das
iret
sar
or
sub
add
cmp
mov
adc
cltd
sahf
loope
add
aad
jg
and
dec
pop
or
xchg
cli
arpl
fwait
decb
or
sbb
lods
imul
cltd
jp
sbb
dec
xor
imul
ss
or
call
fndisi(8087
arpl
roll
push
pop
sub
shrb
hlt
lods
scas
mov
cwtl
xchg
push
nop
ds
mov
into
or
jno
mov
rorb
jge
out
jp
or
adc
mov
test
jecxz
jne
jl
mov
add
xor
mov
mov
sub
ss
push
push
adc
mov
rorb
mov
ret
pop
addr16
sbb
andb
or
aad
add
rcl
xchg
mov
imul
mov
int3
push
pusha
xorb
lret
popa
xchg
cwtl
push
daa
pop
scas
jno
sub
inc
gs
data16
jle
sub
movsl
push
iret
fnstenv
jne
imul
sub
and
pop
sub
sbb
stc
lods
xor
xchg
mov
maskmovq
lea
jbe
fsubp
push
mov
sub
adc
inc
mov
inc
push
sub
insl
push
nop
mov
sbb
inc
lret
xor
xchg
add
pusha
adc
push
inc
lret
pusha
lahf
cmpsl
mov
je
add
inc
insb
jne
ljmp
and
dec
jg
int3
xchg
xor
les
popa
ret
inc
int
insl
addr16
mov
push
dec
movsl
loope
add
movsl
xchg
movsb
addr16
sti
popf
aam
mov
cmp
add
pop
sub
cmc
mov
sbb
xor
push
and
pop
pushf
xchg
mov
jnp
xor
pop
mov
xchg
test
sbb
mov
inc
sub
imul
cli
fdivrl
outsl
pushf
cli
cmpsl
xor
xor
stos
adc
enter
daa
inc
xchg
cld
push
xchg
inc
or
push
mov
out
push
sub
aam
and
lods
cs
and
push
sbb
fstpt
jecxz
int
or
and
fisttpl
out
inc
sbb
ljmp
lock
imul
out
mov
fs
insb
lods
jno
sub
leave
add
push
mov
mov
call
sub
lds
pop
das
stos
add
or
push
inc
addr16
xchg
ljmp
pop
cltd
outsb
outsl
mov
jecxz
nop
lret
loopne
xchg
insl
popf
inc
xchg
pop
jg
push
jecxz
inc
sahf
xchg
mov
adcb
loop
jecxz
icebp
sbb
inc
jecxz
jmp
push
or
scas
xor
xchg
mov
orb
fxch
test
das
mov
mov
push
dec
addb
cmpsl
mov
jno
sahf
xor
test
sub
add
jmp
lds
je
adc
cltd
dec
mov
or
and
lods
into
pop
mov
sbb
loope
xchg
cmp
loope
sbb
mov
push
loope
aad
repz
mov
test
adc
test
sub
in
add
xor
movl
mov
add
jg
out
dec
sub
push
imul
in
into
stc
mov
popa
mov
and
push
sub
xor
addl
jo
scas
fidivl
sbb
inc
mov
cmp
shr
sub
adc
push
mov
fidivrl
xor
push
jecxz
sub
loop
sarl
push
or
lea
jno
inc
xchg
movsl
jmp
pop
add
shll
xlat
inc
cwtl
jns
lret
push
xchg
dec
cmp
or
dec
cmc
bound
insl
in
sbb
mov
in
aas
leave
into
outsb
icebp
jne
inc
out
scas
cmp
insb
or
nop
ds
out
rcl
js
fs
insb
and
ret
cmp
adc
or
mov
mov
enter
into
movsb
push
das
and
inc
sbb
inc
push
push
gs
mov
add
out
xlat
sbb
mov
popa
popf
mov
inc
ret
cltd
jmp
lods
daa
push
mov
mov
mov
and
mov
fmul
in
mov
sbb
scas
sti
ja
mov
mov
sbb
clc
and
jnp
cmp
dec
out
push
push
dec
or
fisubrl
add
sub
dec
push
xor
fstps
cmpb
fimuls
stos
out
jnp
jge
sbb
xchg
jbe
cltd
jmp
push
dec
xchg
xor
pop
aas
adc
cltd
aas
cmp
push
sub
jmp
je
fistpll
mov
xor
xorb
das
xchg
mov
sbb
jle
leave
inc
dec
out
jge
movsl
enter
mov
mov
out
repnz
cmc
cmp
mov
and
gs
mov
aas
mov
stc
ja
or
push
sbb
adc
xchg
jns
xchg
cmc
cmc
in
jae
jns
xchg
jo
xor
jns
sbb
xchg
dec
lods
add
jecxz
ficoml
inc
mov
jmp
ja
xchg
sbb
ret
lret
mov
xchg
xchg
add
mov
cwtl
sub
ret
mov
pop
es
xchg
jle
mov
ja
jecxz
test
movzbl
push
ror
ljmp
cmp
andb
mov
sbb
fs
repnz
push
adc
cmpsl
jmp
insb
pop
or
sti
dec
xor
gs
and
testb
jbe
cmpsl
dec
loopne
mov
add
popf
insl
mov
orb
jmp
ret
sub
mov
stc
test
adc
mov
in
adc
jecxz
aad
lret
les
mov
loope
jnp
sbb
xlat
mov
mov
pop
stc
lcall
adc
jmp
mov
or
loope
daa
aaa
xchg
cmp
std
stos
sti
xor
test
jae
dec
cli
mov
jne
xchg
ret
mov
mov
sbb
and
mov
outsl
mov
sub
mov
pop
add
dec
ret
cmp
cltd
push
mov
andl
jne
fs
lret
xchg
push
das
inc
loope
jg
sub
pushf
out
pop
or
mov
xchg
lret
jbe
jl
sub
lock
sbb
mov
or
vcvttps2dq
add
sti
inc
nop
inc
cmpsl
jbe
cmp
cmp
daa
xchg
xlat
dec
pop
pop
and
fisttpll
mov
stc
jmp
nop
adc
and
mov
push
or
callw
lods
cmpsl
jge
inc
cmp
jnp
subb
es
or
fists
in
out
pop
daa
stc
lcall
mov
adc
mov
iret
ret
mov
rorb
mov
or
push
shlb
lcall
dec
das
arpl
out
mov
mov
sti
test
cmp
xchg
jg
outsl
jb
mov
dec
mov
sub
add
out
jp
insb
scas
sub
mov
and
mov
push
mov
sahf
daa
dec
pusha
xchg
cli
call
push
adc
outsb
push
popf
scas
xor
out
add
aam
and
dec
mov
mov
leave
stc
lahf
mov
sbb
int
dec
jns
out
cmp
cmp
jle
movsb
popf
cld
cs
lahf
jmp
ljmp
out
stos
sarb
cwtl
ret
pop
adc
ret
jle
lods
mov
xchg
mov
sahf
movsb
inc
or
iret
arpl
jne
jns
xchg
dec
loop
fsubs
push
jecxz
cmp
inc
pop
jne
test
sahf
js
fnstcw
lret
icebp
mov
sbbb
shlb
xchg
nop
adc
lea
mov
subl
divl
add
movsl
je
roll
into
mulb
sub
loopne
sti
lahf
mov
shrb
cmpsl
adcb
ffreep
cmp
std
xchg
dec
and
rcl
push
dec
jno
rcll
mov
inc
data16
mov
pop
mov
add
push
insl
adc
and
xchg
xor
jo
xchg
mov
test
and
rolb
xchg
cld
cmp
push
das
jns
hlt
cs
call
pop
rcl
xchg
aad
pcmpgtb
imul
push
ljmp
daa
das
test
mov
fwait
or
sti
repz
dec
mov
xor
lock
imul
ds
and
pop
idivb
and
push
repnz
push
and
fbld
mov
adc
pop
cmpsl
xchg
xchg
dec
scas
jo
js
out
mov
jbe
mov
push
movl
lahf
push
add
sti
inc
lea
sarb
mov
outsb
mov
shlb
outsb
loope
testl
cld
rol
enter
inc
orb
js
cs
sti
lods
cmp
hlt
outsl
mov
inc
or
movsl
add
hlt
jb
icebp
jg
inc
add
pop
mov
inc
bt
bound
bound
enter
int
inc
out
mov
shlb
je
mov
and
rorl
xor
imulb
adc
ss
int3
mov
pop
xchg
rcr
cmp
jns
mov
lods
out
push
into
rcrb
adc
test
mov
jns
in
xchg
jecxz
mov
mov
sti
xchg
iret
test
jb
pop
push
cli
fcmovu
stos
les
in
clc
bound
roll
push
out
dec
test
pop
iret
push
xor
push
cmc
cmpsl
mov
sbb
jl
and
xor
adc
daa
loopne
xor
and
lea
shrb
add
xor
mov
test
xchg
icebp
rol
and
cmpl
mov
fists
test
and
add
mov
mov
hlt
lock
xchg
mov
push
int3
or
mov
das
mov
xor
fldl
add
mov
add
add
test
pusha
inc
mov
add
rcll
inc
dec
or
std
xor
jmp
rcrb
repz
mov
mov
hlt
xchg
ljmp
popa
enter
pushf
dec
dec
decl
cmp
pop
mov
lret
mov
jle
xchg
jae
adc
fsubrl
push
mov
xor
in
test
mov
cmp
cmp
jmp
push
in
dec
int
cwtl
adc
sahf
sub
es
pop
add
rclb
addr16
fsts
int
test
jmp
cli
test
aad
xchg
scas
adc
and
daa
mov
sbb
jnp
and
dec
outsl
int3
inc
pop
mov
sbb
popa
cmp
pop
pop
iret
and
out
add
push
push
adc
movsl
leave
inc
mov
mov
mov
inc
ljmp
adc
xchg
stos
cmc
mov
mov
xchg
shlb
int
sahf
mov
test
out
out
das
je
xor
out
sbb
idivl
jmp
out
stos
mov
dec
popf
jmp
dec
je
arpl
ret
pop
and
jmp
xor
mov
jp
popa
in
ljmp
ljmp
xchg
mov
mov
push
lods
leave
cmp
popa
lcall
stos
leave
js
in
movb
inc
sbb
fcmove
sbb
fists
imul
sbb
mov
int3
lods
pop
cld
jb
inc
adc
sub
jge
shrb
xchg
xchg
or
pop
shrb
imul
lock
dec
adc
inc
lret
sbb
push
pop
mov
inc
xchg
xchg
lret
bnd
std
inc
and
stos
leave
dec
jg
jl
and
push
push
mov
call
in
xchg
push
mov
add
push
mov
push
push
aas
in
sub
sub
fstpl
push
cmp
ljmp
pop
sahf
shrb
stos
mov
pop
cmpsl
sub
cmp
jl
popa
stos
xchg
push
or
fisubrs
iret
and
mov
imul
xchg
ret
and
mov
testb
cmpsl
push
je
mov
movsl
std
xchg
inc
gs
cwtl
movsb
out
sbb
fneni(8087
test
inc
fbld
in
loop
mov
pop
hlt
lds
push
pushf
mov
jg
aad
ret
clc
and
push
mov
inc
stos
mov
sub
pop
test
out
mov
addr16
pop
dec
lds
xchg
inc
int3
js
pop
outsb
jnp
xor
sub
rep
fsubrs
mov
jle
ret
aam
sub
mov
popa
cltd
hlt
mov
dec
call
xor
gs
and
or
decl
popa
cmpl
shr
jne
and
push
mov
fiadds
xchg
jl
iret
dec
mov
loop
in
sub
add
xchg
jle
loop
inc
outsb
fisttps
mov
add
imul
sub
ss
lahf
add
pop
leave
mov
sti
jbe
stos
pop
cmc
mov
imul
pop
subb
xor
pop
leave
mov
aam
imul
adc
clc
sahf
or
lea
inc
inc
xchg
mov
and
jo
inc
scas
dec
inc
cmpsb
pop
lea
icebp
stc
xchg
xor
lahf
jo
int3
loop
jne
rcr
insb
in
pop
scas
mov
dec
fistps
imulb
sub
or
sub
mov
or
cwtl
out
mov
int
xchg
jnp
mov
sbb
sub
xchg
mov
mov
icebp
std
sarb
push
sbb
aad
cmp
int
call
iret
mov
les
jmp
enter
pop
out
mov
fmuls
pop
mov
inc
xor
lock
loope
inc
push
outsl
mull
cli
dec
jnp
xchg
nop
xor
std
jl
push
aad
add
jle
out
fisubl
int3
mov
push
dec
jp
xchg
mov
idivl
int3
mov
in
loope
mov
adc
arpl
and
push
clc
inc
movsl
mov
or
sub
sub
and
test
imul
push
sub
jae
std
shl
ds
repnz
fldenv
adcl
repnz
xor
jae
vmread
in
add
stos
push
popa
jnp
daa
fldt
push
daa
shll
sbb
das
jmp
sub
ja
aaa
and
jle
icebp
adcb
inc
icebp
pop
xlat
sbb
push
repz
in
sahf
test
xchg
orb
pushf
in
mov
add
das
adc
push
mov
jecxz
out
in
repz
lods
add
sub
jl
cmp
adc
stos
pushf
sub
lods
loope
pop
daa
jnp
cld
popf
mov
push
push
cmp
add
stc
mov
xorb
je
sbb
popa
pusha
rorb
push
jae
test
pop
xor
sbbb
xlat
je
or
inc
sub
xor
rcl
fdiv
and
es
xor
cltd
inc
mov
sub
push
sti
and
xlat
rcrb
xchg
inc
xor
and
fnstenv
dec
cwtl
xlat
int3
sbb
cmpsl
xor
ret
mov
fwait
mov
mov
mov
mov
dec
pop
mov
jb
xor
int3
mov
testb
and
and
shrl
fcomps
or
and
sti
scas
cmp
xchg
arpl
cmpsb
push
xor
mov
xor
or
jg
mov
push
repnz
pushf
sub
in
mov
push
mov
cmp
and
push
ljmp
sti
mov
loope
in
rcrl
mov
and
cli
sbb
push
ret
xor
mov
mov
data16
icebp
test
adc
sub
inc
iret
mov
mov
jns
push
and
movsb
icebp
sub
in
rorb
popa
scas
pop
pop
jg
divb
mov
jmp
sub
add
les
fbld
inc
cwtl
int3
loope
outsl
ds
xchg
stc
adcl
xchg
adc
jg
pop
addr16
sbb
in
lock
test
loopne
pop
out
pop
jle
mov
inc
cmc
gs
mov
cmp
xchg
andl
and
mov
jp
lea
xchg
lcall
imul
in
or
mov
mov
jbe
rorl
xor
dec
loope
jae
lret
imul
push
loopne
lcall
adc
std
inc
push
rcrb
pop
dec
mov
cli
and
mov
in
xlat
aam
and
cmpsb
les
clc
shlb
xor
sti
std
xchg
aas
sti
cmp
cmc
aas
clc
ficoms
pop
fwait
push
lock
jp
jns
clc
cmp
stos
mov
mov
ret
xor
dec
mov
iret
call
aaa
mov
jne
out
cmp
mov
pop
inc
xor
mov
xor
dec
mov
add
hlt
test
mov
mov
and
into
xor
ret
cltd
inc
lea
jae
clc
shl
call
or
mov
or
pusha
xlat
les
fisubl
sti
sbb
pop
fldt
inc
inc
sbb
in
pop
jns
jno
pop
xchg
loop
in
or
cmp
inc
cmp
sub
mov
cmp
jge
jo
jecxz
int3
sbb
movsl
in
fsubs
repnz
outsl
loope
mov
inc
pop
jg
or
dec
ficompl
xchg
sub
add
or
into
xchg
hlt
xchg
jle
dec
mov
cwtl
jg
adc
pop
xor
push
jns
into
pop
pmullw
cmp
jmp
out
lcall
sbb
repnz
inc
sub
or
xlat
jl
out
mov
mov
loopne
enter
xor
arpl
call
dec
inc
testl
dec
testb
cltd
mov
fstpt
in
sub
pop
movsb
in
lods
add
gs
and
sub
and
repnz
in
or
test
lea
inc
cmc
inc
aam
popa
inc
repnz
xchg
iret
push
sbb
data16
jae
sbb
push
dec
sbb
adcl
mov
pop
pop
mov
lock
shlb
int
inc
and
cltd
movsl
inc
out
loopne
enter
push
lahf
xor
aaa
push
repz
andb
fucomp
jecxz
jns
aam
mov
cmp
mov
cmp
out
or
xchg
test
ljmp
loop
mov
sub
and
stc
sub
popf
inc
and
xchg
gs
out
cli
adc
xor
xor
loop
dec
mov
mov
clc
notb
inc
fcompl
cwtl
test
push
hlt
cmp
inc
adc
subl
push
addl
pop
daa
cs
adcb
mov
leave
pop
addb
xor
sbb
and
dec
enter
daa
push
arpl
cmp
insl
mov
fiaddl
aad
or
cmpsb
sbb
push
hlt
jnp
pop
loop
fdivrs
cmp
mov
pop
mov
mov
outsw
push
shll
scas
jns
in
adc
jne
push
and
mov
xor
imulb
cli
jo
adc
push
push
pop
jecxz
cwtl
inc
and
cmpsl
inc
adc
sbb
es
movsl
shll
and
test
jbe
or
in
adc
pop
sub
sahf
stos
pop
insl
pop
dec
out
aaa
jo
cltd
pop
dec
subl
cmp
sbb
je
insb
lret
in
pop
mov
and
in
aaa
mov
and
push
test
adc
bound
and
mov
sbb
xor
inc
mov
cli
mov
or
push
xchg
and
jae
out
mov
push
test
mov
movd
dec
bound
lds
jb
rolb
jmp
daa
inc
or
jnp
imul
xchg
int3
mov
imul
pop
sbb
scas
push
xchg
movsb
fnstenv
sti
loop
fistpl
jb
push
xchg
and
xchg
jb
jne
xchg
or
pusha
popf
clc
int3
adc
and
dec
adc
sub
mov
mov
aas
pop
sti
mov
jmp
jb
ds
and
nop
imul
nop
stos
dec
xchg
adc
sub
cmp
xchg
jmp
sub
or
mov
sub
xor
iret
push
jge
stc
repnz
jecxz
or
test
repnz
stc
jno
jmp
pusha
pop
push
test
pop
sub
mov
xchg
movsb
lock
mov
sarl
and
and
sub
xor
inc
rcrl
jl
outsl
rcll
cmpsl
pop
test
neg
es
pop
fisubs
xor
cmp
xor
xchg
mov
scas
adc
inc
arpl
hlt
push
add
push
insb
mov
aam
adc
mov
loop
sbb
pusha
je
or
stos
sbb
push
jno
out
pushf
mov
adc
mov
mov
jge
pusha
int
lcall
inc
mov
sbb
popa
push
lods
jp
add
popa
into
pop
xchg
aas
je
add
sahf
inc
clc
add
xchg
adc
das
iret
pop
cmc
mov
sub
or
mov
adc
nop
mov
xchg
sbb
add
aam
push
cmp
or
fcmovne
ljmp
or
inc
mov
dec
das
jg
inc
sub
xlat
xchg
ss
jnp
adc
mov
or
lods
fwait
sti
dec
mov
mov
sbb
ja
adc
fistpll
lods
iret
stos
mov
xchg
lods
popf
aaa
mov
add
rcl
clc
mov
mov
or
mov
scas
stos
xor
je
cmp
add
push
aaa
out
cmc
sub
imul
rol
dec
sub
lret
adc
lods
leave
insb
fldl
ror
mov
in
pop
movsl
mov
and
adc
xchg
fs
nop
and
mov
lods
lahf
xchg
dec
mov
or
inc
inc
hlt
out
outsl
adc
xor
adc
ds
jnp
add
scas
ret
sbb
arpl
xor
aas
insb
cmp
test
mov
aas
scas
dec
push
cmpps
dec
pop
xor
xchg
xor
scas
or
arpl
pop
mov
dec
push
mov
cmp
push
iret
sbb
cmp
repz
adc
add
ret
dec
in
and
movsb
shlb
enter
sub
xchg
cltd
int3
xchg
fmul
aam
push
jecxz
repz
inc
jmp
jecxz
cmpb
and
test
or
les
ficoms
push
mov
push
loope
gs
or
rcr
repz
fimuls
pop
cmp
cmc
mov
jne
push
mov
repnz
xor
sub
sub
daa
loop
jo
loop
xchg
mov
fnsetpm(287
mov
in
loope
sarb
jnp
cli
fcompl
pop
cmp
add
das
push
ja
pop
add
dec
or
adc
in
lcall
mov
xor
dec
add
not
mulb
jnp
bound
in
outsb
jne
leave
lods
rol
cmc
bnd
jns
lea
daa
out
sti
mov
je
cs
es
sbb
popa
ljmp
inc
movsb
jmp
inc
adc
or
scas
xor
stc
push
stc
shll
xor
repz
xor
jne
add
int3
jns
js
ret
rcr
xchg
xor
clc
jl
ret
lret
in
in
hlt
sub
sub
jl
mov
pop
test
adc
js
ljmp
mov
inc
jns
mov
xor
push
inc
cmpsb
mov
add
push
mov
arpl
mov
jb
imul
mov
orl
sub
out
in
clc
movsb
mov
xor
movsl
cs
pop
pusha
ja
fildll
ret
sahf
pusha
inc
xchg
cmp
daa
mul
fwait
add
sbb
popf
rol
xchg
inc
jp
jg
add
lcall
lods
xchg
nop
mov
scas
mov
jl
push
sbb
jnp
cmp
ja
loopne
cmp
leave
add
mov
pop
daa
xchg
test
repz
aad
jle
fildl
cmp
sbb
xor
xchg
cwtl
in
cmp
in
fisubl
aas
xchg
push
shrb
ret
add
cmp
xchg
inc
scas
aaa
sub
pushf
mov
out
shr
xchg
sbb
jns
cltd
jno
jle
adcb
mov
daa
out
sar
out
loope
aam
add
mov
sti
xchg
inc
xchg
loopne
inc
pop
mov
push
adc
and
pop
push
sub
inc
stos
jb
cmp
out
add
xchg
adc
aas
movsl
xchg
cmp
addl
adc
in
testb
xchg
lock
in
mov
negl
ret
and
out
movsl
push
push
jns
sub
jo
lahf
cmp
add
fs
mov
pop
or
popf
aad
pop
or
push
push
sbb
sub
xchg
bound
imul
sub
stos
fwait
dec
jmp
jb
xchg
imul
daa
addb
sub
push
in
push
add
mov
fs
aaa
stc
sbb
push
mov
scas
or
sbb
cmpsl
test
xchg
inc
cmp
push
loop
xchg
in
or
cmp
add
jmp
xchg
add
xchg
sbb
shll
sub
pop
test
int
bound
mov
jb
roll
cld
aaa
lcall
test
or
add
jp
cmpsl
jle
jae
xor
push
adc
loopne
daa
and
jge
testb
hlt
mov
jl
pop
adc
mov
mov
pop
xlat
fstpl
mov
mov
dec
ljmp
fs
xchg
stos
pusha
cli
ljmp
int
imul
sbb
adc
jmp
filds
mov
pushf
mov
pop
or
cltd
push
popf
movsb
jne
mov
scas
mov
lret
xor
dec
xchg
push
lods
scas
inc
bnd
jg
or
sahf
hlt
dec
sbb
arpl
push
clc
es
or
mov
gs
add
insb
push
add
int3
in
cli
cmc
mov
pushf
imul
inc
inc
fbld
xchg
push
xor
mov
sbb
je
pop
test
gs
or
sahf
aam
sub
dec
mov
add
jns
mov
les
dec
or
hlt
xor
aaa
or
mov
dec
adc
scas
xchg
iret
sahf
and
cwtl
and
xor
cmc
lods
add
lret
rorl
xor
sub
jle
scas
fistpl
ja
xchg
sub
push
mov
xchg
fwait
mov
mov
mov
and
push
stc
jns
push
mov
int3
insb
cmpsb
sub
mov
jecxz
jne
sbb
addr16
xchg
loopne
scas
lcall
movsl
mov
out
sub
je
loope
push
jno
add
imul
sub
test
roll
jl
loop
insl
xchg
popf
push
adc
push
xchg
inc
sub
ss
xchg
shl
mov
inc
fidivrs
sbb
das
mov
pop
dec
push
clc
insb
dec
cmpsl
aas
fs
push
popf
inc
sub
pop
leave
in
dec
nop
addb
mov
mov
dec
cmp
xlat
inc
lds
sub
lods
int
inc
xchg
xchg
push
in
fdivl
pop
push
lock
inc
outsl
lss
adc
and
pop
mov
cmp
jg
dec
mov
push
movsb
int
imul
dec
jb
push
inc
cli
jb
and
xor
fiadds
push
pop
aas
or
shll
into
imul
lahf
sarb
and
mov
repnz
jne
cs
cltd
roll
in
cs
adc
cltd
and
cmp
xchg
mov
out
or
mov
mov
in
mov
test
mov
sti
xchg
jbe
fs
mov
out
mov
jns
push
adc
mov
add
xor
mov
mov
daa
int
pop
inc
add
jno
sbb
das
cmp
xor
cld
sahf
mov
gs
subb
cmp
daa
mov
cmpsb
add
js
test
mov
jmp
and
repz
pop
push
push
add
pop
dec
int
xchg
aad
fcmove
jl
mov
fwait
jo
aad
movsb
test
push
fistpll
aad
mov
les
mov
inc
mov
mov
push
xchg
push
pop
mov
stos
jb
repnz
lea
clc
sub
inc
mov
adc
popf
hlt
xchg
xor
mov
dec
loopne
push
mov
xor
inc
xchg
or
lahf
mov
test
jns
orl
hlt
push
cwtl
addl
daa
mov
mov
mov
jne
jns
push
inc
or
sub
adcl
test
mov
lahf
cmp
shl
push
rorb
jmp
xchg
jmp
call
ss
dec
test
or
js
in
sbbl
mov
enter
into
jmp
adc
dec
shrb
mov
cld
insb
cmp
aaa
cmpsl
lock
pop
popa
ret
stos
xor
cmc
ja
xor
daa
fstl
mov
leave
out
cli
not
fwait
jg
cmp
cmp
dec
add
xor
sub
shlb
in
push
pop
mov
mov
loop
inc
test
or
lahf
sbb
jge
sbb
aaa
dec
in
je
sbb
sbb
pop
loopne
cwtl
nop
cli
icebp
into
mov
pop
xchg
mov
adc
xchg
and
sub
jns
mov
sbb
arpl
aam
sbb
xchg
imul
jmp
popa
mull
xor
arpl
pop
stos
loopne
and
stos
jp
dec
fldt
leave
ret
lret
fidivrs
fistps
sub
cwtl
pop
jg
dec
mov
dec
jmp
sbb
notb
sbb
or
jl
gs
xchg
in
fsubl
xor
lds
imul
cmp
dec
push
push
pop
adc
test
mov
out
adcb
sbb
notl
pushf
mov
inc
mov
push
test
cs
cmpb
cmc
std
hlt
sti
iret
cmpsl
arpl
mov
fimuls
inc
and
inc
pop
mov
sahf
push
xchg
or
test
push
cmp
inc
mov
sbb
test
mov
test
cmp
sub
popa
ja
jbe
arpl
mov
add
pop
fcmovnbe
mov
push
push
push
shll
ss
mov
sbb
jnp
cs
idivb
cmp
xor
outsl
icebp
and
pop
mov
leave
in
xor
enter
xchg
movsl
ret
or
sbb
adc
mov
movsl
dec
outsb
mov
movsl
aas
andl
or
mov
popa
in
sbb
sbb
int3
cmpsb
jnp
mov
and
mov
dec
je
push
enter
xor
mov
stc
in
leave
xchg
and
xor
out
cs
cmc
dec
adc
call
outsl
out
or
mov
movsl
aad
imul
pop
ss
and
and
mov
mov
pop
data16
xchg
shlb
repnz
push
add
scas
push
mov
jmp
cmpsl
outsl
mov
neg
fcomps
and
inc
push
xchg
icebp
add
inc
pop
mov
leave
mov
pop
xor
dec
mov
xchg
in
sahf
sub
rorb
mov
in
dec
fs
mov
pop
push
sarl
push
outsl
out
cli
jle
pop
mov
sarb
mov
push
push
dec
cmpsl
mov
mov
pop
jnp
cmpsb
cmp
inc
cmp
or
lcall
mov
mov
hlt
imul
in
and
and
std
test
mov
dec
push
mov
push
mov
and
in
push
mov
sbb
ja
add
gs
add
pushf
int3
les
inc
jle
dec
and
push
sub
lcall
adc
mov
mov
dec
add
xchg
jmp
gs
adc
rcr
sub
cwtl
mov
jb
push
ja
popa
aam
sbb
xchg
bnd
negl
inc
sbb
popa
das
out
add
push
xlat
and
out
aas
fbld
in
fcompl
sub
pop
adc
inc
xor
dec
nop
mov
xor
repnz
movsl
dec
inc
cwtl
rorb
adc
out
adc
je
jnp
mov
adc
sarb
cmpsb
shl
cld
ss
cltd
jns
aas
lret
push
shl
push
loopne
pop
orb
fucomip
lret
test
mov
scas
xor
inc
pop
jo
and
test
xchg
inc
gs
and
in
add
add
xchg
stos
cmpsb
stos
cmp
and
jno
scas
subb
and
mov
inc
int
jp
push
pop
dec
out
cwtl
mov
clc
pop
cmp
xor
and
jle
pusha
outsb
outsb
and
inc
add
cmp
jecxz
jnp
nop
xchg
xchg
lds
adc
dec
mov
cmp
mov
xor
add
inc
inc
and
push
ret
out
loopne
xchg
fistpl
mov
cmp
fcoms
stos
in
inc
jg
in
xchg
and
insb
outsl
and
mov
loopne
adc
cwtl
into
jle
fnstsw
out
scas
ljmp
nop
ljmp
setge
mov
xor
mov
movsb
test
jge
and
add
cs
adc
aad
sub
and
pop
fs
out
fldt
dec
les
shlb
jp
dec
dec
mov
inc
in
jno
movsl
pop
sahf
xchg
jnp
xor
add
rolb
iret
jg
and
pop
in
lods
mov
mov
leave
sub
mov
mov
cmp
xchg
pop
cwtl
cmp
pop
insb
out
lcall
or
inc
and
or
je
call
xchg
inc
cmp
lock
sbb
cwtl
test
add
sub
je
ljmp
call
shrb
xor
lds
sub
in
push
push
push
xor
or
or
aad
mov
xchg
lods
mov
sbb
imulb
mov
mov
pop
sbb
dec
scas
cli
stos
mov
pushw
lock
sbb
xchg
not
pop
inc
cmp
xchg
fsubp
xor
das
testb
imul
ret
or
mov
sbb
stos
cmpsb
jb
xchg
mov
into
xchg
out
and
out
mov
push
add
stos
nop
imul
gs
stos
xchg
pop
scas
movsl
aad
push
jg
std
and
out
out
cmp
js
adc
jle
adc
lea
push
xor
push
movsl
fnsave
xchg
xor
add
pop
mov
dec
or
xchg
add
sbb
cwtl
sub
fs
jb
movsl
sarb
rorl
or
in
jb
ss
fstl
sub
jecxz
xorps
leave
xchg
out
iret
faddl
mov
je
lds
mov
pop
call
add
into
stos
adc
xlat
scas
cmp
jo
cmp
cli
jb
subb
popf
pop
xor
subb
mov
adc
adc
repnz
jo
fsts
jno,pt
in
lret
mov
push
or
pop
mov
jl
dec
pop
andb
shlb
cmpsb
cld
mov
jg
mov
movsb
in
je
and
jnp
cmp
mov
into
mov
fs
test
sub
loopne
aad
scas
lds
test
daa
in
lods
mov
jbe
test
popa
sub
and
dec
push
hlt
or
sti
icebp
cmpsb
mov
or
daa
cmp
imul
xchg
sbb
sub
dec
inc
push
cmp
dec
push
inc
cmp
jns
fisttpl
dec
sbb
push
or
leave
loop
shrl
imul
push
or
push
add
decl
lret
xor
pop
insb
jno
daa
cmp
push
test
push
jecxz
add
mov
add
ja
or
xchg
dec
lods
jno
sbb
jl
setge
and
xchg
mov
pop
pop
neg
clc
aas
fistpl
scas
fcomps
fwait
test
add
aam
cmp
dec
mov
insb
add
sbb
in
cmp
mov
repnz
bnd
and
insl
push
jg
adc
ja
push
shl
mov
push
icebp
and
data16
push
in
stos
dec
fdivs
dec
shlb
sbb
mov
stos
in
push
push
hlt
icebp
les
lods
iret
or
cmp
push
idiv
js
push
mov
xchg
jmp
cmc
outsb
or
adcb
pop
cmp
xchg
push
mov
inc
fsubrl
add
into
add
or
mov
test
pop
sti
cmp
add
push
push
fmuls
mov
sub
popl
cmp
stos
stos
std
lahf
imul
or
adc
cmp
fcoml
lock
mov
dec
cmp
fwait
dec
jp
es
ljmp
inc
pop
test
mov
cltd
sbb
fstpt
adc
int3
lock
jne
add
pop
push
fidivrl
popf
cmp
movsl
adc
repnz
leave
mov
or
test
ss
cmpsl
sbb
mov
xchg
out
mov
mov
xchg
jl
lock
or
fdiv
adcl
fcomp
addb
pop
adc
cwtl
das
xchg
pop
mov
pop
sub
mov
xor
cmp
insl
dec
lret
adc
stos
sbb
test
mov
pop
push
sbb
insl
dec
xorl
in
inc
and
aaa
mov
dec
sarb
xchg
jne
imul
xchg
xchg
cmpb
adc
sub
push
sub
aaa
xchg
xchg
movsl
adc
test
cmpsb
sbb
mov
xor
push
adc
inc
rcl
push
das
add
mov
stc
out
aaa
lahf
pop
jbe
sbb
test
sbb
or
dec
push
iret
jge
lret
inc
or
imul
leave
mov
cmp
xchg
testl
repz
lret
inc
enter
fnstenv
inc
mov
rorl
adc
movb
icebp
xor
int3
mov
mov
mov
arpl
dec
mov
xor
xchg
xchg
call
jnp
xor
pop
sbb
adc
xchg
cwtl
inc
addb
cli
inc
in
out
push
xchg
mov
inc
push
lahf
mov
jmp
xchg
mov
test
jb
sbb
push
lods
mov
cmp
add
sbb
push
sbb
lret
insb
lods
mov
pop
sub
insl
fwait
xor
imul
pop
lods
mov
xchg
mov
outsb
test
or
jne
fcmovbe
pop
and
dec
call
decl
pop
jb
adc
push
dec
sub
mov
jne
fmuls
mov
dec
mov
ja
scas
test
or
pop
mov
cmpsl
cmc
sbb
lret
lods
xor
or
cld
push
ret
mov
lret
xchg
mov
insl
adcb
adc
imul
push
cli
mov
adc
es
out
orb
insl
jne
push
lret
addr16
cmp
jb
ds
rolb
cld
fwait
notl
jb
sbb
inc
inc
xchg
into
jae
ds
mov
cpuid
jp
out
push
icebp
cmp
push
out
xchg
lret
mov
nop
pop
inc
cmc
sbb
jae
adc
int
mov
imul
mov
pushf
jo
sub
xchg
inc
xchg
out
lods
mov
mov
xor
ss
sbb
jge
or
push
popa
out
adc
or
sbb
mov
pushf
dec
jbe
std
pop
shlb
inc
add
inc
pushf
repnz
and
icebp
faddp
into
or
scas
iret
out
push
repz
inc
mov
icebp
out
mov
sarb
pop
mov
lcall
xchg
xchg
xor
in
popa
imul
nop
loop
xchg
packsswb
rclb
mov
sub
jl
xchg
push
cmc
pop
sti
jae
cmp
inc
sbb
sbb
aam
pop
lods
test
jg
imul
div
xchg
or
daa
mov
push
insl
sub
outsl
jnp
sbb
loope
enter
cmp
adc
int3
test
mov
add
pop
mov
sahf
xor
lahf
dec
outsl
jg
scas
mov
mov
lret
jne
pop
repz
mov
scas
outsl
sub
sub
mov
pop
jle
fisubs
adc
mov
push
xchg
xchg
lea
and
inc
outsb
cs
rcrb
iret
or
sub
mov
sbbb
hlt
sahf
rcll
jnp
sub
cwtl
jb
lods
dec
dec
arpl
push
cltd
je
mov
mov
cmp
test
cmp
out
test
int3
js
xchg
adc
jae
or
xor
lock
les
aam
pop
stos
movsb
or
push
pop
aad
pop
pop
dec
pop
cli
test
cmp
cmp
scas
add
hlt
mov
das
pop
mov
es
shrl
iret
pop
xchg
and
inc
jns
int
or
aas
ds
inc
daa
outsb
push
add
or
cwtl
bound
adc
shl
lock
js
lds
sub
add
inc
bound
jo
fucom
sbb
orl
or
fcom
jmp
and
orl
aaa
xor
or
sub
insl
push
pop
gs
ficomps
xor
imul
jns
popf
jecxz
cmp
add
or
cmpb
xor
test
sahf
jge
sbb
and
sbb
aaa
mov
push
mov
scas
pop
jle
faddl
mov
dec
jne
mull
movsl
lcall
or
mov
packssdw
filds
pop
sbb
push
test
lods
mov
test
jle
popf
iret
arpl
adc
xchg
pop
mov
adc
repnz
lea
aam
adc
scas
cmp
add
cmc
fldln2
fs
pusha
adc
xor
adc
push
mov
push
mov
pop
push
or
cli
xor
xchg
lret
sub
adc
fsts
mov
jecxz
mov
inc
pop
inc
fwait
mov
and
mov
test
jae
imul
dec
fstpl
adc
out
xor
jo
lret
mov
mov
out
inc
icebp
jnp
out
mov
dec
adc
mov
cs
push
push
or
pop
adc
push
add
jmp
dec
ret
xor
cltd
dec
jbe
or
popf
out
push
push
movsb
cmc
rcrb
sbb
and
dec
xchg
lahf
add
cmp
or
sub
xchg
push
das
insl
push
shl
mov
cmp
sub
push
daa
clc
xchg
adc
xor
cs
inc
out
mov
sub
push
cmp
andb
outsb
fucomip
inc
mov
cmc
fdivrp
lods
stos
xor
adc
jecxz
and
fadd
popa
shlb
pop
mov
mov
jecxz
adc
psadbw
push
loopne
xor
xchg
iret
sbbb
loope
repz
adc
mov
xchg
xor
jns
movsl
outsl
test
lods
add
clc
adc
pop
mov
cmp
add
mov
adc
pop
lods
lahf
jns
out
pop
iret
aas
stos
repz
pusha
outsl
pop
cmp
jp
js
ret
popa
sub
pop
jnp
or
inc
or
cmp
stos
rolb
mov
vpunpckhbw
scas
xor
pop
fwait
pop
sub
mov
pop
xor
ret
inc
pop
in
rcl
inc
in
jns
pop
pop
push
cmp
nop
and
mov
lods
lea
gs
mov
outsl
adc
sbb
push
scas
add
imul
xor
xchg
xchg
aas
pop
stos
add
rorl
xorb
imul
and
or
pop
nop
lds
mov
and
lret
dec
bound
lea
xchg
jo
sti
adc
scas
adc
je
inc
inc
cli
xor
cmp
imul
push
das
sub
and
js
arpl
loopne
scas
inc
pop
dec
sbb
mov
ffree
pop
mov
es
movsb
mov
adc
movsb
arpl
orl
xor
faddl
mov
inc
or
and
mov
lds
pop
and
inc
xchg
mov
enter
fs
mov
mov
std
mov
fildll
inc
dec
pop
add
push
dec
push
jns
mov
sbb
mov
pop
sub
mov
jo
or
pusha
lods
push
jo
or
dec
push
push
sbb
lds
pop
push
out
popa
mov
sub
inc
dec
cld
adc
dec
js
inc
fstpt
mov
adc
push
shll
mov
adcl
sub
loope
jo
push
pop
push
push
jecxz
push
adc
out
cmpsb
lahf
mov
and
aad
pop
loope
fcomi
xchg
dec
inc
ret
sbb
sbb
rorl
andl
sbbl
push
xchg
jle
push
jnp
xchg
xor
pop
mov
hlt
cmp
jp
outsl
mov
pop
call
ds
sub
sub
ret
cmp
mov
insb
xor
ljmp
add
int
pop
out
pop
pop
push
push
pop
sbb
das
rcll
or
andl
cmp
pusha
hlt
adc
add
ljmp
adcl
vmwrite
xor
aad
enter
sub
mov
data16
int
icebp
sbb
mov
stos
das
mov
push
xor
adc
outsb
cmpsb
out
fwait
sub
push
jbe
pop
adc
cmp
push
lahf
loopne
inc
in
mov
lea
cli
cmp
xor
jb
pushf
push
lahf
mov
jo
daa
out
leave
lods
sub
scas
adc
push
mov
arpl
cmp
and
outsb
jb
shrb
fs
ds
or
loopne
daa
test
xchg
popf
jp
push
add
stos
mov
sub
ret
dec
aas
and
fwait
xor
sbb
push
push
cmp
mov
sbb
inc
sbbb
outsb
fldcw
or
loopne
lea
mov
ss
fsubr
sub
jne
push
mov
xchg
daa
stc
mov
test
arpl
jne
test
gs
js
sub
test
pop
sub
xchg
rcrl
scas
test
cmpsb
cmp
cmp
xchg
or
inc
sbb
mov
push
add
imull
cli
loope
jno
jb
outsl
jle
inc
mov
mov
push
addr16
xchg
dec
xchg
call
sub
inc
jle
bound
pop
aaa
cmp
lahf
adc
pusha
sub
add
mov
cld
lods
sub
mov
pop
lock
dec
pusha
cmp
pop
xorl
je
scas
xor
mov
sbb
cmp
cmp
stc
pop
xor
push
out
xchg
push
inc
stc
xor
mov
xor
shlb
shrl
loopne
fisubrl
aam
sbb
and
dec
not
and
push
mov
sbb
mov
and
dec
icebp
mov
fdivr
adc
or
sbb
and
add
cli
pop
test
pop
push
mov
cmc
xchg
jmp
clc
sarb
mov
int
adc
adc
adc
mov
popa
or
mov
icebp
and
cmp
xor
xchg
jg
roll
mov
out
cmp
movsl
inc
pop
jmp
loopne
cmp
cwtl
pop
mov
mov
add
push
add
fiadds
es
mov
xchg
mov
push
add
sub
aas
mov
pusha
out
cmc
out
imul
pop
inc
mov
xchg
jmp
mov
sbb
jbe
sub
and
sahf
mov
in
xor
cmp
mov
in
roll
iret
add
mov
add
sbb
sbb
jns
push
sub
adc
push
sub
sbb
or
push
flds
xchg
jmp
or
aaa
mov
mov
insb
rcrl
cs
push
pop
je
inc
inc
cmp
push
push
enter
mov
add
jl
jecxz
xor
add
dec
add
mov
mov
push
cltd
ret
arpl
popl
je
adcl
daa
mov
add
xchg
cmp
push
mov
enter
add
jle
movsl
shlb
xchg
mov
ljmp
sti
sti
xchg
outsl
xchg
jge
je
mov
adcb
pop
ret
cmp
enter
add
inc
fimull
push
movsl
sbb
in
cs
out
push
jecxz
sub
dec
inc
scas
sahf
mov
sub
ret
cmovo
fistpl
lock
imul
inc
mov
idivb
arpl
test
int3
les
mov
cltd
push
push
xchg
xchg
pshufw
pop
movsb
test
js
pop
lret
add
lods
test
jo
and
rcr
push
adc
pop
sbb
xchg
int3
push
cmp
jecxz
dec
dec
out
js
xchg
xchg
repz
daa
adc
xchg
test
das
mov
add
fistl
sbb
stos
stos
add
clc
mov
les
xor
in
pop
out
sbb
push
sbb
adc
add
jg
pop
mov
out
inc
mov
aad
rorb
out
stos
in
cmc
daa
push
sub
pop
cmp
sti
lret
out
push
movsl
ss
cs
or
setnp
pop
add
daa
nop
dec
and
arpl
push
xor
xchg
mov
ljmp
adc
xchg
shll
imul
or
call
xchg
jle
mov
aam
mov
jb
cmp
jecxz
or
and
popa
xchg
xchg
fistl
mov
sbb
negb
test
cmpsl
or
dec
ja
jmp
icebp
push
stos
iret
pop
in
pop
xchg
mov
mov
cmc
sub
xchg
mov
aas
adc
cmpl
cmp
jno
mov
push
les
out
aad
xchg
fwait
cmp
mov
and
loope
push
shrb
mov
mov
mov
ja
jmp
push
das
xor
cmp
cmp
repz
cmpsb
lret
sub
cmpl
nop
out
add
mov
out
sub
and
mov
jecxz
and
xor
or
mov
push
inc
push
popf
cmp
test
mov
or
cmp
mov
out
out
push
or
cmp
pop
or
lcall
mov
out
ds
inc
sti
inc
jo
rcl
mov
ja
jno
hlt
imul
cmpsb
push
test
xchg
mov
and
lock
add
sahf
cwtl
fst
lods
sub
clc
pop
mov
rcr
movsl
fdivrs
je
sbb
daa
pop
out
mov
stos
call
lods
mov
ss
cld
rcll
outsb
dec
leave
ds
iret
jns
jno
jno
pop
fld
iret
inc
addr16
sbb
or
jbe
pop
xchg
fdivs
stos
cmp
in
mov
or
repnz
xor
adc
inc
dec
xchg
mov
mov
jge
add
test
nop
js
cmpsl
mov
fwait
jl
add
cli
repz
les
cmc
out
test
cmpsb
js
add
jne
add
out
adc
mov
into
ret
add
cmp
hlt
pop
pop
or
sbb
gs
adc
mov
xchg
or
insb
aam
xchg
jmp
lahf
movsb
mov
addr16
fadds
faddl
jae
scas
cmp
loope
int
push
std
xchg
pop
test
js
hlt
inc
and
lds
aam
sub
es
cmp
pop
push
xchg
cmp
in
pop
xor
adc
aaa
into
mov
fistl
or
das
loopne
and
das
or
divb
inc
and
push
and
ret
mov
add
cmpsl
add
in
imul
inc
add
cmp
sub
jge
push
sbb
mov
jb
cmp
shlb
mov
int3
and
cli
aam
jno
fwait
out
mov
sti
sar
mov
add
sub
jae
cld
iret
sti
lods
dec
test
and
cld
ja
pushf
fbld
filds
sbb
test
ss
filds
sbb
shlb
pusha
add
jae
mov
jbe
inc
gs
xchg
in
insb
lock
loope
adc
clc
and
ss
jmp
dec
andb
loope
and
lea
stc
adc
cmpsb
add
adc
sbb
sti
push
loopne
out
cmp
xchg
xor
inc
mov
push
insl
in
mov
jge
add
xor
cli
sub
mov
adc
sbb
orb
inc
adc
pop
or
or
insl
push
cli
adc
xor
mov
fstpt
xchg
call
test
fcoml
mov
fwait
das
push
test
fcmovu
xchg
sub
je
mov
lea
repz
add
fs
dec
mov
xchg
push
pushf
insb
test
hlt
incl
jge
sbbl
sarb
xor
outsl
mov
aaa
adc
insl
lcall
sbb
mov
pop
fsubrl
imul
fwait
xchg
aam
mul
mov
xchg
push
dec
and
outsb
mov
test
pop
shr
xor
mov
scas
cld
cmp
push
jo
scas
fucom
jp
xchg
dec
and
xor
jecxz
mov
pop
mov
stos
xor
mov
fmulp
fisubrl
lahf
bound
enter
jne
lret
mov
loope
dec
sbb
stos
mov
jo
sub
inc
orl
ja
flds
add
dec
mov
dec
fbstp
cltd
js
push
mov
stc
push
dec
mov
cmp
inc
loopne
sbb
je
xchg
pop
pop
xchg
dec
sbb
iret
call
sti
hlt
mov
sub
cmp
mov
les
adc
dec
cld
ljmp
fimull
aas
lods
adc
test
pop
sub
jno
xor
mov
jbe
fcoml
daa
sbb
out
fucom
push
mov
inc
push
fiadds
mov
sbb
scas
movsb
testl
xor
and
pop
movsb
aad
mov
int
pop
test
mov
push
mov
or
ljmp
cld
lcall
jp
addr16
mov
or
mov
into
sbb
jbe
in
pushf
xor
daa
fwait
pusha
xor
push
xor
jmp
add
push
pop
lock
lahf
cs
sub
push
jo
mov
and
jne
xchg
call
cmpsl
xor
ljmp
sarl
sbb
ficoml
and
cmp
aad
mov
xor
or
push
popf
inc
orl
mov
adc
add
inc
mov
push
lea
jae
orl
mov
sbb
mov
out
inc
inc
call
gs
stc
std
ret
mov
fcompl
aad
xchg
stc
pop
shrb
sti
sbb
movsb
and
lcall
cmp
in
jmp
sahf
dec
dec
movsb
jp
add
ja
pop
inc
popl
stos
cmp
mov
fsubl
jno
mov
or
xchg
mov
lret
jo
leave
in
add
iret
sub
ljmp
rcll
mov
inc
insl
xorb
xor
cmp
outsb
mov
mov
cmc
and
jns
arpl
adc
sub
gs
iret
mov
outsl
push
adc
jo
int
ja
lods
inc
fmuls
or
std
ret
pop
cld
inc
mov
mov
mov
adc
out
lret
ljmp
addb
jno
inc
xor
lods
ja
xorl
pop
inc
adc
ljmp
adc
pop
mov
adc
popa
ss
bound
rclb
in
or
adc
shl
inc
sub
sbb
test
push
adc
cmpsl
mov
and
rcrl
sub
jecxz
or
aad
fcomps
dec
popf
lods
insl
shll
push
orb
and
xor
daa
fwait
xchg
add
and
rol
andb
mov
test
ret
push
test
adc
dec
cltd
mov
cmpsb
sub
mov
aaa
out
scas
cmp
mov
jle
dec
outsl
stos
xlat
inc
push
jne
adc
mov
loopne
sahf
sub
loope
add
fs
push
add
test
xchg
mov
into
push
in
inc
jge
and
sbb
repz
sti
sub
sbb
lahf
mov
cltd
jg
insl
loop
jge
stos
cli
in
push
std
ljmp
loopne
mov
in
arpl
dec
push
ds
mov
vandnpd
clc
and
and
and
std
adc
adc
les
mov
fisttps
sbb
pop
cmp
push
aam
out
into
ret
pop
inc
adc
movsl
lods
das
add
flds
movlps
inc
push
ljmp
jo
dec
aad
jnp
mov
push
xchg
lds
adc
push
sti
call
xchg
fists
fwait
adc
and
cli
popf
outsl
xchg
in
pusha
mov
and
stc
fbld
out
or
sub
ljmp
cmpsl
adc
mov
movsl
push
adc
rorb
std
and
sub
cltd
fmuls
jnp
insl
lahf
sub
cs
pop
jp
jo
pop
pop
mov
dec
movsl
mov
cmpsb
loop
mov
mov
adcl
inc
add
adc
sub
jb
cltd
jl
rclb
sahf
and
movsb
push
aaa
xor
jmp
inc
in
mov
xchg
jg
jg
ljmp
imul
fs
in
dec
mov
xor
inc
mov
mov
pusha
jne
in
loope
inc
arpl
aam
pop
adc
mov
rcrb
cmp
push
fidivrl
dec
adc
mov
fnstcw
out
jns
pop
imul
pop
fcompl
pop
mov
aas
aas
inc
adc
adc
rcll
jg
xor
xchg
mov
xchg
sbb
sbb
outsb
lods
add
loope
or
mov
and
arpl
dec
xor
inc
es
xor
push
int
outsb
cs
sub
out
int
push
add
jmp
jb
lods
fbstp
xchg
mov
movsb
scas
loopne
xchg
mov
or
add
add
fldenv
into
sbb
mov
mov
test
imul
in
add
adc
rorb
or
imul
sbb
enter
cltd
into
popa
ss
les
inc
sbb
jnp
ret
nop
mov
mov
fsubl
cs
insb
stos
inc
sub
movsl
cmpb
in
xlat
mov
jns
lods
and
mov
inc
and
sub
jl
aam
lea
or
mov
in
aam
test
imul
in
jne
mov
jmp
test
xchg
pop
inc
sti
sbb
mov
es
sub
pop
dec
ss
shrb
push
fstp
mov
jge
sbb
imul
jbe
adc
push
outsb
insb
push
dec
mov
loope
xor
dec
xchg
inc
sbb
ret
mov
ret
lret
xlat
or
pop
stos
sbb
stos
jnp
lret
sahf
in
cmp
lods
jl
movsb
lea
in
jo
lock
inc
popf
add
sub
add
sbb
pop
xor
in
out
push
int
pop
mov
aas
mov
xchg
jp
mov
mov
sub
lock
or
jb
aas
pop
andb
mov
cmc
out
insl
fwait
cmp
sbb
mov
test
ss
into
lret
cmc
out
fcmovne
loope
mov
lret
je
ds
dec
sbb
pop
shr
xchg
es
pop
sbb
pushf
adc
clc
clc
int
inc
or
test
sbbb
movsb
push
and
inc
push
cmp
int3
mov
inc
lcall
movswl
adc
pop
out
push
jecxz
je
push
les
xor
adc
nop
outsl
mov
jge
hlt
sahf
inc
mov
lds
loopne
add
xor
insl
aam
mov
scas
xchg
xor
addps
xchg
lcall
sahf
add
and
fcoms
cmpsb
jb
clc
cli
dec
mov
aam
fidivrl
sub
fwait
xor
fsts
lds
push
sub
mov
hlt
ja
sbb
out
rclb
pop
sub
popa
mov
fucom
push
jmp
jmp
inc
or
mov
mov
pop
in
sub
dec
rcll
std
andl
test
push
inc
cmp
inc
jno
ja
bound
jle
push
inc
sahf
sahf
inc
jle
push
push
cmpsb
sub
call
dec
mov
cmc
jb
adc
pop
jo
push
dec
sbbb
sbb
and
lea
imul
movsl
add
mov
insb
test
test
mov
sbb
stos
scas
mulb
dec
push
rolb
dec
lock
mov
and
xor
out
test
fsubp
cld
cmp
add
xorl
arpl
sbb
enter
decl
lock
sub
pusha
mov
xor
mov
mov
movsl
jno
add
or
leave
cmp
jno,pt
iret
pop
idivl
in
sbb
adc
mov
bound
sbb
cmpsl
mov
push
fimull
stos
fcompl
xor
movsl
int3
pop
pop
xchg
mov
push
jnp
push
xchg
call
sub
addl
xchg
cmp
pusha
push
sbb
adc
xchg
out
adc
fldenv
jge
stos
jne
lahf
subl
js
xchg
hlt
mov
jg
movsl
inc
lahf
mov
rorb
mov
ret
int
ds
dec
sub
dec
bound
idiv
mov
sub
test
ja
ffree
scas
orl
sub
das
outsl
movb
int3
ljmp
dec
xor
sub
sub
mov
stc
outsb
loope
mov
sbb
sbb
and
lcall
adc
inc
xchg
lcall
jmp
addr16
les
hlt
xchg
jmp
and
jg
jns
push
xchg
scas
in
loop
icebp
pop
or
mov
sbb
mov
mov
and
cmpsb
sbb
iret
pop
jle
clc
sub
pop
flds
jp
lods
rcl
out
mov
das
leave
pusha
push
mov
cltd
and
leave
adc
jg
in
sahf
lcall
adc
dec
cli
iret
mov
jp
add
mov
imul
xchg
jecxz
cli
mov
insl
push
dec
lock
or
xchg
mov
mov
sub
mov
stos
inc
inc
xor
insl
inc
out
push
xchg
push
jbe
cmp
jecxz
dec
addr16
mov
cmpsl
push
inc
sbb
cld
call
xchg
lock
push
jge
and
mov
or
cmp
inc
dec
outsl
addl
jle
jecxz
dec
pop
push
and
rcrl
sub
pop
lcall
mov
and
sub
cld
pop
inc
or
and
mov
sub
cmp
ss
neg
mov
sbb
xchg
jmp
mov
lcall
add
out
aas
mov
aas
cli
xchg
subb
cmc
sub
push
cmp
cmp
cmpsl
sti
add
in
and
fs
fistps
and
adc
adc
jl
mov
loop
aam
dec
cmpsl
out
sub
dec
insl
sub
xchg
mov
jle
daa
jo
filds
mov
cli
popf
into
rorl
dec
adc
and
sar
jmp
movsl
inc
loop
cmpsb
repnz
shll
sbb
xchg
fdivl
jae
iret
dec
or
notl
mov
sub
aaa
xor
adc
repnz
inc
pop
inc
pop
enter
int
dec
frstor
adc
lods
lret
xor
pop
sbb
cli
xor
ret
add
setle
jb
lds
mov
pop
mov
shl
shrl
cmc
xor
lods
mov
decb
cmc
add
mov
cli
pop
xlat
push
jb
push
mov
mov
sbb
pop
nop
loope
pushf
loopne
loopne
push
repnz
pusha
insb
pop
push
lahf
xchg
popa
or
dec
jne
xor
push
pop
loope
mov
inc
xor
add
push
adc
sub
pop
or
jp
and
rcr
lret
repz
cmp
je
fsubr
fsubl
cltd
and
loop
pushf
cmc
xchg
xchg
into
push
push
aaa
cmp
les
jne
xchg
lcall
xchg
jge
les
pop
ljmp
add
dec
mov
aaa
scas
lods
fs
mov
xchg
sub
sbb
mov
add
out
xchg
into
call
out
mov
lds
std
movsl
rcl
aas
pop
or
mov
in
or
loope
repnz
fsubrl
ljmp
adc
cld
dec
or
enter
sub
or
hlt
adc
jle
push
fadds
std
lcall
sbb
in
sub
cmp
xchg
pop
cmp
mov
jmp
adc
fucomip
daa
shl
lea
push
stos
insl
pop
mov
fldt
and
sbb
popf
mov
cmc
add
dec
stc
addb
jl
scas
pop
clc
pusha
xchg
xchg
ja
dec
xor
dec
xchg
push
sarl
xor
pop
lds
rcrb
jl
push
cwtl
dec
push
inc
loop
push
fdivrl
adc
leave
sbb
outsl
mov
out
clc
pusha
cwtl
add
shll
xor
fmull
push
pop
mov
mov
xchg
in
out
or
inc
and
xchg
push
xchg
fidivl
cmp
cld
mov
push
xchg
mov
cmp
jae
les
adc
push
out
nop
mov
jo
jbe
push
xor
lret
daa
fcomps
leave
in
das
mov
push
xchg
mov
jo
lea
aam
pop
inc
and
movsl
push
fs
lret
dec
jg
shr
lods
cmpsb
and
clc
negl
mov
popl
shl
sti
cmpsl
out
cmp
cmc
fwait
scas
mov
sti
mov
dec
xor
push
mov
out
es
out
cs
xor
lods
test
test
mov
sbb
and
dec
sub
cltd
dec
loop
aas
add
adc
jecxz
sub
movsl
out
push
adc
push
fsubrl
loopne
mov
mov
sbb
cmp
pop
and
and
add
jecxz
int
push
andb
xor
add
mov
sbb
pop
cmp
icebp
or
arpl
mov
fdivrp
xchg
inc
and
mov
or
sub
or
pop
imul
pop
je
mov
stc
fucomi
sub
inc
subb
test
lods
std
jp
jns
sbb
stos
jns
sbb
push
sbb
cmp
std
sub
pop
dec
sbb
inc
rorb
lods
xor
lods
mov
int3
es
xchg
pop
ss
ficomps
add
push
fsubrs
sbb
subb
mov
push
iret
sbb
xchg
mov
les
int
insl
push
xchg
pop
and
dec
fdivs
adc
adc
ret
lock
mov
or
sbb
add
dec
cmp
ret
mov
stc
aam
xor
push
jmp
pop
push
ficomps
cmp
jnp
call
imul
jo
movsl
pop
add
cwtl
adc
fsubrl
pusha
rcll
leave
add
repnz
stos
nop
out
std
jns
inc
push
push
popa
orb
mov
pop
mov
movsl
mov
sbb
mov
add
xchg
lret
pop
cmp
shlb
movsl
xor
push
sub
imul
pop
adc
dec
push
ja
ficoms
ret
cmp
push
aam
outsb
mov
and
pop
and
jl
xor
leave
mov
jb
movsb
jmp
sub
stc
mov
imul
std
xor
xchg
popf
pusha
xlat
push
jo
xor
repnz
sub
dec
outsb
push
pop
int
aas
dec
push
dec
adc
pusha
out
fldt
xchg
xor
cmp
or
lea
xor
out
scas
fdivs
lahf
imull
jle
sub
mov
test
inc
push
fistpl
push
fdivrl
aas
dec
arpl
push
lret
xor
inc
ss
and
mov
orl
mov
lret
out
fwait
std
adcl
sub
mov
sub
xor
popa
in
in
sbb
mov
inc
and
aaa
add
insl
inc
add
mov
clc
push
pushf
pop
push
jl
xchg
and
fnsave
jae
cmc
add
in
sbb
insl
cwtl
mov
popf
dec
popf
cmp
jns
dec
add
and
out
mov
cmp
sbb
push
jmp
aad
push
rolb
aaa
lcall
cmpsl
mov
jp
repz
or
aam
stc
mov
int
sbb
adc
aad
adc
mov
nop
mov
cmpsl
add
inc
flds
pop
push
xchg
cmp
adc
xor
pop
fs
jb
cmpsl
aam
lods
rcll
in
or
sti
sub
mov
aaa
mov
adc
insb
stos
sub
jnp
js
mov
sub
ja
mov
dec
cmp
adc
dec
adc
shrb
adc
inc
or
pop
call
push
mov
scas
fbstp
jne
stc
daa
push
and
or
cltd
add
insb
add
cs
stc
add
dec
mov
dec
loope
sbb
xor
out
xchg
jle
sbb
cltd
add
add
or
pop
jo
lret
xchg
ret
dec
decl
xor
jl
dec
mov
dec
push
ljmp
push
call
adc
xor
movsb
jg
bound
xchg
push
arpl
dec
or
ss
iret
cld
aam
cwtl
fstpl
lret
or
sub
dec
sbb
lret
push
cli
adc
fistpl
dec
adc
mov
iret
xor
insl
add
cwtl
xor
ret
sbb
mov
inc
sub
pushf
popf
test
and
add
cmp
jl
in
scas
sbb
ret
orl
xor
add
sub
arpl
xchg
popf
into
mov
sub
mov
lds
into
sbb
fimuls
dec
in
inc
xorb
jecxz
js
cltd
jle
fidivrl
jo
mov
rclb
into
and
aad
mov
xchg
roll
inc
test
stos
mov
out
xchg
adc
lret
mov
mov
push
adc
out
les
jbe
and
mov
movl
sbb
jns
outsl
pop
js
clc
push
shrb
aam
jo
popa
cmp
mov
xchg
cwtl
dec
test
xor
add
adc
push
out
mov
imul
ljmp
gs
das
or
mov
rorl
fwait
aas
jne
loope
and
js
push
out
lds
jmp
cmp
xor
pop
xlat
flds
dec
ficoms
push
mov
fcomp
dec
jp
movsl
or
jbe
imul
and
cltd
popl
mov
add
dec
sbb
xchg
pop
xor
repnz
nop
hlt
or
dec
fldt
xchg
mov
xor
sbb
jl
dec
iret
lods
xor
and
mov
jo
adc
mov
push
std
jne
sbb
cmp
jecxz
js
arpl
icebp
ss
sarl
mov
js
mov
pop
lods
std
jecxz
int3
xor
leave
out
shlb
cmp
insl
jmp
loop
cmp
imul
mov
xorl
ljmp
mov
jle
sbb
lcall
in
addr16
mov
dec
push
into
push
mov
sub
bound
incb
dec
cmc
jecxz
out
mov
jp
xor
xchg
adc
into
pop
lret
imul
dec
xchg
jno
mov
out
sti
scas
pop
in
pushf
pushf
sti
xor
xorb
mov
sub
popa
adc
rcll
repnz
lcall
std
test
orl
jae
stos
mov
cld
xor
pop
data16
sub
aam
fdivrl
out
gs
or
aad
js
cmpsl
addr16
lret
fldt
cmc
inc
or
xchg
inc
insb
adc
in
lret
and
sub
repz
scas
test
dec
cmp
pop
stc
adc
inc
popa
cmp
adc
addr16
sahf
test
outsl
leave
mov
lods
adc
stos
clc
nop
add
or
jo
sarb
push
ja
mov
sub
sub
repnz
arpl
adc
lret
jp
daa
lea
push
test
in
mov
adcb
and
xchg
ljmp
jae
cmp
mov
mov
lcall
xchg
inc
sbb
jle
push
fidivrl
xlat
dec
jb
lods
xchg
sub
out
lock
and
lret
icebp
mov
mov
mov
or
jnp
sti
dec
dec
and
xor
std
ficoml
dec
loope
sahf
add
nop
cmp
out
int3
shll
je
jbe
sbb
adc
or
cmpsb
adc
out
jnp
fs
hlt
movsl
inc
mov
enter
arpl
inc
rcl
push
pop
cli
and
lret
loopne
dec
push
dec
repz
jmp
fdivl
add
xor
lcall
mov
flds
aas
push
test
or
orl
cli
jp
inc
sbb
jmp
jnp
enter
cmc
lea
dec
flds
cmp
popa
mov
xchg
repz
push
cmc
stc
mov
mov
sub
testb
pop
dec
jl
shlb
insb
dec
call
xchg
pushf
push
sbb
decb
sarb
rcrb
imul
pop
pushf
adc
xor
leave
pushf
icebp
xor
pop
add
pop
je
pusha
inc
iret
mov
mov
xchg
lahf
fnstcw
shl
pop
push
mov
mov
scas
add
shrb
sbb
add
lds
cld
or
cmpb
sub
dec
cltd
sbb
mov
lret
or
pop
mov
mov
outsl
pop
ffreep
out
movsb
pop
data16
in
jbe
cltd
int3
mov
xor
arpl
and
aas
sub
fxch
in
cli
adc
push
ret
test
mov
xor
lock
push
test
test
outsb
inc
movsb
pop
loope
or
or
cmp
inc
jbe
add
ss
out
jmp
imul
mov
bound
shrb
clc
stc
xchg
jmp
xchg
call
lods
xor
cmpl
sbb
std
shll
dec
cs
mov
ss
jne
push
mov
shlb
mov
idiv
mov
lret
aam
push
sbb
ret
notl
and
xchg
push
adc
mov
jl
or
je
jp
lods
bnd
mov
sub
mov
inc
jno
loop
mov
dec
pop
push
mov
loopne
and
push
and
mov
jge
pop
js
das
and
dec
in
push
in
decl
push
inc
mov
imul
dec
jecxz
sbb
mov
rorb
in
test
in
cmpsb
in
mov
lret
mov
mov
out
es
ficoml
mov
loope
lea
test
imul
insb
xlat
testl
popa
dec
add
xchg
adc
subl
sbb
mov
fwait
push
add
ja
das
dec
dec
mov
sarl
push
loope
test
inc
jbe
pop
es
sbb
xchg
les
leave
mov
aas
out
lahf
jnp
test
mov
movsb
xor
out
jae
pop
movsb
sbb
std
popa
jo
aad
ja
repnz
stos
xchg
or
es
loop
push
je
out
push
mov
jo
and
stc
xorl
mov
call
lcall
lds
outsl
jae
addb
push
ret
xchg
or
jle
mov
lcall
fldcw
dec
negl
mov
out
jl
pop
movsl
cwtl
sub
fsubs
mov
or
sbb
inc
pop
or
test
lahf
xchg
hlt
or
push
push
xchg
hlt
and
pop
lds
cmpsb
adc
into
shl
out
bound
out
inc
mov
push
loop
sarl
pop
out
lcall
cmpsl
mov
lahf
mov
cld
jbe
xchg
out
jmp
and
ja
add
mov
jnp
add
pushf
xor
scas
enter
in
aaa
clc
fwait
xorl
loopne
xchg
cs
enter
sbb
add
hlt
xchg
add
sub
js
fwait
test
test
das
xchg
cmp
orb
sbb
aas
inc
xchg
adc
cmpl
inc
mov
jns
pop
dec
push
aas
loop
fisubrl
lds
inc
aad
sbb
das
jbe
sbb
lcall
out
aas
int3
lds
stos
adc
outsl
cmp
test
ljmp
jge
cld
and
xor
mov
mov
xor
xchg
in
jg
lock
icebp
mov
rcll
stos
lcall
xor
pushl
lahf
sub
push
dec
push
lahf
roll
inc
neg
jecxz
mov
mov
movsb
xor
cmp
fidivl
cmp
cs
add
into
or
and
xchg
enter
pop
in
aam
and
jae
sub
sbbb
mov
sti
or
jb
in
outsl
sahf
mov
enter
inc
mov
sub
dec
outsb
mov
pop
ret
fisubrl
mov
xchg
pop
jmp
in
icebp
in
mov
shll
loopne
in
fimull
pop
push
and
inc
pop
mov
mov
xchg
xchg
fnsave
icebp
jmp
cmp
hlt
scas
mov
in
jge
mov
stos
outsb
loopne
out
lret
ljmp
cmc
mov
call
ja
daa
jne
or
pop
jnp
mov
cltd
cmp
or
lds
cmp
in
fsubs
dec
leave
scas
or
addr16
fildll
jne
int
mov
add
mov
mov
inc
daa
sub
cmpsb
pop
inc
xchg
cmpsb
or
jo
xor
push
imul
dec
push
or
popa
push
pop
mov
fiaddl
push
outsb
xorl
mov
fisubs
fdivrs
out
pop
pushf
push
mov
pop
sub
dec
jmp
js
out
icebp
notb
mov
xor
lods
outsb
out
stos
or
xchg
mov
std
jl
mov
ret
into
pop
sbb
dec
push
out
push
xchg
jge
lret
xchg
inc
xchg
mov
pop
push
lcall
xor
xlat
into
push
jp
push
scas
fwait
mov
mov
aas
sbb
mov
out
add
push
mov
pop
nop
lret
aaa
pop
stc
gs
jmp
aam
xor
mov
stc
imul
xchg
mov
push
movl
fisubs
xchg
mov
lcall
popa
sbb
loopne
cmp
or
inc
push
jl
icebp
cmp
insb
imulb
cmp
lods
loopne
lds
inc
daa
push
lahf
adc
push
mov
mov
std
test
mov
xchg
addb
iret
mov
and
mov
in
notl
enter
test
test
mov
stc
inc
ss
push
pop
cmp
mov
sarb
or
mov
inc
pop
ds
insb
sub
jg
xchg
jle
jmp
xchg
and
jb
popf
jp
stos
sub
dec
lea
insl
js
inc
call
loopne
xor
push
lock
sbbb
cmpsl
pop
mov
dec
loop
movsl
sub
rcr
dec
add
pop
dec
sbb
pop
cmpsb
das
in
arpl
dec
mov
js
or
add
mov
jle
cmc
fnsave
mov
push
add
cmp
mov
jmp
in
icebp
sub
pop
inc
dec
cmp
fimull
call
shr
cltd
js
loop
aam
push
xchg
fs
xchg
inc
call
xor
fimull
jne
xlat
xorl
nop
das
and
movsl
int
in
pop
add
insl
sub
sub
dec
pusha
jns
pop
in
or
mov
je
dec
call
pop
inc
test
push
push
mov
out
cmp
clc
ret
jb
test
orl
sub
sub
sbb
ret
je
mov
in
jg
fs
lcall
xor
js
adc
ret
xchg
cmp
push
aad
add
or
jmp
push
push
pop
push
sbb
out
fstps
push
mov
inc
ljmp
jns
aam
addb
adc
jp
add
xor
mov
pusha
ds
dec
in
xor
insb
mov
mov
cmp
mov
push
ret
cli
xchg
insb
pushf
outsl
aam
push
cmp
bound
or
jecxz
sarl
fwait
dec
mov
xorl
sbb
jno
out
mov
into
std
cld
sub
xchg
aad
mov
addr16
cmp
mov
push
push
cwtl
push
xchg
sbb
mov
sbb
scas
not
mov
mov
pop
pop
nop
rclb
pop
and
sbbb
jg
and
inc
mov
sbbl
sbb
and
ja
sub
jp
mov
dec
mov
and
mov
sbb
fdivrs
mov
adc
add
xor
or
fdivrp
ret
or
loop
adc
imul
xchg
cmp
mov
roll
nop
xor
push
sbb
push
arpl
lea
daa
repz
cmp
outsl
cmpl
scas
aas
add
fucomp
inc
jnp
cmpsb
outsb
dec
pop
sahf
xchg
cmp
adc
pop
push
sub
add
call
jae
dec
filds
repnz
cli
insl
lock
sbb
ret
mov
cmp
popf
and
movsl
nopl
imul
inc
fcompl
cmpsb
sub
push
inc
mov
or
stc
stos
adc
and
pop
fiaddl
test
repnz
rorl
or
test
inc
js
fldz
cltd
into
mov
inc
cmp
lcall
psllq
cmpsb
sub
fdivs
insl
lods
dec
ss
xor
scas
dec
mov
cli
xchg
push
clc
nop
jnp
xchg
lods
and
cmpsl
jne
addr16
adc
and
xchg
pop
je
repz
fnsave
adc
xor
mov
push
sub
lods
xor
xor
dec
add
mov
mov
jne
mov
mov
jne
or
data16
fistl
sbb
xorb
lods
cltd
mov
test
stc
mov
pop
std
pop
mov
stos
outsl
mov
dec
ret
adc
cmp
or
shl
clc
rcr
sti
sub
mov
bound
or
ret
and
nop
inc
sbb
xchg
adc
cmp
in
push
sub
popf
push
cmpsl
pop
jb
scas
outsb
dec
mov
sbb
or
push
adc
divl
ljmp
das
push
cltd
sbb
fwait
jecxz
jge
and
inc
loope
cmp
mov
dec
cmp
das
pop
sub
stos
add
jl
jae
inc
and
pop
sbbl
out
jge
mov
mov
jl
mov
movsl
movsl
out
out
nop
fst
xor
mov
lea
mov
mov
sar
cmp
imul
ret
pop
mov
fyl2x
testl
pop
icebp
mov
pushf
mov
dec
mov
adc
nop
popf
mov
fildll
push
imul
cmp
add
push
ret
xor
iret
aad
cld
hlt
xchg
mov
dec
mov
movsl
sbb
push
int3
fcoms
fistpll
mov
adc
adc
test
push
jg
xchg
popa
clc
sub
cmp
adc
mov
movsb
inc
xchg
dec
jbe
xor
pushl
js
shlb
pop
test
insb
or
jle
push
rol
je
repnz
sub
aad
and
aaa
sbb
call
adc
add
xchg
into
xchg
add
mov
adc
xlat
cli
mov
pop
dec
mov
jmp
test
out
or
cmpsl
insb
pop
push
int3
rclb
aad
inc
sub
stos
out
push
xor
out
pop
dec
jnp
xchg
pushf
out
add
test
jno
std
addr16
xor
pop
cmp
add
and
jb
out
scas
mov
dec
jecxz
mov
add
es
xchg
cmc
inc
and
fcomps
test
xchg
stc
sbb
adc
cmpsb
pop
inc
es
lahf
lea
mov
cmpsb
insl
cmp
xchg
pop
insl
add
orb
shll
or
jno
outsb
pushf
and
pushf
loop
or
leave
mov
push
mov
insb
sub
addr16
push
sbb
out
test
xor
inc
fdivrl
xchg
xchg
bound
int3
fiadds
lret
jae
xchg
push
arpl
mov
inc
mov
dec
xchg
mov
mov
ljmp
pop
adcl
data16
xor
icebp
push
in
stc
jp
dec
cs
pushl
xchg
mov
jmp
pop
out
outsb
ss
mov
inc
arpl
outsb
loopne
loopne
lods
adc
jae
out
mov
int3
repz
adc
lock
movsl
jne
push
clc
repnz
jns
mov
or
jo
push
testb
cmp
stos
nop
mov
add
in
pop
ja
sbb
jne
scas
fisubrl
cmc
js
xor
and
ljmp
in
sbb
lds
mov
push
jne
scas
mov
mov
cmp
dec
pop
or
fistpll
arpl
in
out
xor
jge
mov
jno
cmp
aaa
xor
adc
in
lea
sbb
lods
pop
jl
pop
ret
outsb
mov
andl
push
sub
mov
push
stc
mov
adc
mov
xlat
rcll
pop
pushf
push
mov
sbbl
xchg
adc
sub
xchg
jl
rorb
outsb
mov
cs
lahf
rcrb
movsb
push
push
or
add
mov
and
lods
sbb
or
js
push
ret
stos
push
mov
test
jae
pop
in
mov
xchg
cmp
and
push
mov
jo
mov
xchg
xor
fcmovnb
icebp
mov
inc
adc
adc
cltd
mov
dec
js
cli
rcll
negl
or
jmp
push
or
cmc
repnz
in
fisubrs
rcrl
out
es
sbb
frstor
ret
cltd
in
dec
mov
fcmovnb
fists
xchg
lcall
pop
adc
out
es
call
mov
fdivrs
popa
xchg
movsb
pop
push
test
std
adc
push
stc
pop
sub
or
hlt
adc
jle
cmp
fcoml
subb
scas
jne
pop
scas
stos
mov
xchg
aam
subl
sbb
loopne
scas
or
push
mov
in
in
cmc
mov
xor
pop
subl
pop
cltd
xor
jne
pop
jg
jae
xor
es
inc
mov
sbb
cmpsl
or
shrl
iret
pusha
pop
cmp
mov
je
mov
outsl
pusha
push
xor
push
bound
push
sahf
cli
mov
xor
jne
loopne
movsl
int
cmc
insl
pop
mov
fwait
addr16
mov
ret
inc
xchg
mov
jno
fidivrs
cli
mov
popf
add
adc
stos
jb
adc
lock
notb
in
leave
push
mov
dec
test
cmp
sub
mov
pop
lods
jno
jl
fimull
lret
mov
fsubrl
dec
and
dec
push
cmp
mov
out
and
mov
cmp
out
es
into
mov
outsl
xlat
pop
jp
dec
mov
mov
and
test
and
push
inc
mov
flds
or
and
test
pop
jae
das
mov
lcall
out
xor
test
dec
mov
push
push
outsl
mov
negb
mov
mov
push
push
mov
sti
xor
jp
jns
std
out
jne
sbb
popl
les
sub
mov
lea
sbb
fxch
pop
xchg
rol
jge
push
cs
out
cmp
cld
gs
cmpsb
fidivrl
mov
test
or
sub
stc
addl
shlb
loop
jo
jnp
push
mov
sub
repz
sbb
aam
xchg
dec
cli
jns
jb
lds
inc
int
xchg
lcall
pop
cmp
jns
push
fadds
add
add
in
lods
lods
in
in
mov
push
hlt
rcrl
loopne
sar
lea
add
dec
cmp
in
mov
push
test
pop
pusha
dec
int3
cmp
cmpsl
mov
icebp
das
xchg
xchg
cld
stos
iret
xor
lret
test
adc
sub
xchg
fstl
out
or
inc
push
mov
clc
jp
pop
sbb
mov
int
out
daa
out
dec
fiadds
sbbl
xor
xchg
pop
cmp
sub
mov
jbe
faddl
adc
sbbb
add
add
insl
mov
cli
clc
vcmpge_oqpd
cltd
pop
cli
lea
cmpl
mov
xor
das
addl
xor
mov
arpl
pop
add
sbb
xor
mov
mov
and
dec
lahf
sarb
sbb
cli
xor
hlt
xor
leave
imul
push
icebp
dec
cmpl
sbbl
data16
mov
in
int
in
mov
hlt
mov
mov
push
lds
xchg
out
mov
inc
mov
jbe
mov
dec
jo
xchg
pop
cltd
bound
es
dec
mov
xor
ret
mov
jp
mov
cli
in
arpl
aad
pop
dec
lcall
lock
cmp
mov
ret
repnz
lds
rcl
test
sub
std
loop
enter
inc
dec
push
fidivl
mov
mov
jmp
fwait
cmp
xor
cmpb
adc
push
sbb
fimuls
inc
sub
jmp
out
bound
mov
fdivrs
or
lret
sub
xor
sbb
dec
add
lret
jmp
mov
push
jmp
in
jns
rorl
and
call
and
sbb
mov
jns
shrb
sub
jno
xlat
int
pop
jl
push
push
push
or
push
hlt
or
in
out
into
jns
cld
adc
sub
fdivl
adc
das
mov
mov
mov
push
cwtl
or
push
mov
ret
mov
out
dec
adcl
pushf
lcall
loopne
outsb
sbb
ljmp
xchg
jo
inc
push
mov
mov
sbb
aaa
mov
arpl
add
xchg
cli
fldcw
fisubl
pop
mov
fildl
shrb
adc
add
ja
mov
jp
jge
out
push
cmp
aas
pop
fisubl
dec
daa
repz
dec
rcr
fs
jecxz
pop
push
ret
inc
les
push
dec
mov
jle
fsts
imul
adc
mov
fchs
xchg
leave
inc
cltd
test
cmp
ret
ret
mov
and
mov
inc
mov
rol
jge
push
test
fidivs
sub
xchg
lods
out
xor
mov
das
loop
in
dec
jge
frstor
pop
stos
mov
repz
cmp
test
pop
or
cmp
push
sbb
push
fisttpll
out
sbb
jp
iret
test
sbb
test
adc
pop
scas
stc
jnp
imul
loop
rclb
mov
fstps
mov
pop
dec
lahf
push
ret
mov
and
add
repnz
pop
pop
into
mov
pop
sub
mov
lcall
dec
adc
inc
push
inc
sub
addl
filds
or
das
cmpsl
sub
cmpsl
jmp
mov
rorl
scas
mov
imul
notl
add
loope
mov
sbb
or
mov
loop
mov
das
jno
push
mov
jno
imul
cmp
lea
gs
test
ror
stc
pop
icebp
inc
lcall
push
popf
xchg
stos
hlt
adc
xchg
inc
jns
fisubl
mov
aad
mov
or
sbbl
rolb
repz
jno
int
pop
jge
mov
int3
pop
ds
aad
and
add
mov
in
les
addr16
aam
and
jo
jg
adc
shrl
cltd
mov
leave
mov
adc
sub
xor
cs
stc
enter
dec
push
dec
cltd
jle
mov
and
pop
fbstp
or
enter
ds
pushf
ds
test
fimuls
inc
sbbb
add
adc
jp
cli
pop
sar
subl
leave
scas
aaa
mov
mov
cwtl
mov
pop
xor
pushf
mov
jne
jnp
cmp
popa
lods
fldl
shrb
stc
arpl
push
in
adc
fadds
and
mov
mov
fisttps
pop
or
insl
sub
push
cld
pop
pop
shl
lods
insb
pop
mov
push
outsb
xchg
and
scas
mov
sub
scas
pop
lret
jge
push
in
mov
mov
push
push
xchg
fwait
mov
push
push
imul
jb
add
or
mov
shl
cs
mov
and
shll
sub
sti
icebp
mov
inc
adcb
sahf
test
inc
cwtl
into
xorl
push
sahf
mov
mov
push
and
icebp
lcall
sahf
mov
jge
int3
jl
push
add
inc
inc
dec
outsl
sbb
cmp
sub
lret
pop
mov
ret
cmp
je
xchg
fs
adc
enter
jno
cmp
mov
jmp
mov
pushl
in
mov
aas
lods
xor
jl
xor
test
incb
sub
dec
cli
dec
sbb
sbb
hlt
mov
push
cmp
xchg
enter
inc
jmp
fildl
sbb
xor
fiadds
sahf
int
pop
stos
dec
shlb
xchg
loop
push
xchg
inc
rorb
mov
arpl
cmp
gs
and
imul
jmp
cmpsb
pop
shll
loop
jno
or
bnd
enter
sub
dec
or
lea
jnp
out
and
stc
aad
xor
notl
mov
pop
hlt
dec
aas
jb
sbb
stos
push
cmp
or
aad
xor
xchg
push
pop
or
cmp
xor
adc
test
jecxz
or
xchg
dec
in
xor
pop
fmuls
xchg
push
ret
or
fwait
aad
jp
in
mov
cmp
daa
xor
jo
mov
fwait
cs
inc
inc
in
cld
das
add
sub
push
pop
lahf
cwtl
ja
shr
adc
fisttpl
dec
imul
ret
loop
cltd
insl
dec
arpl
inc
sahf
mov
mov
inc
sbb
dec
call
mov
jge
pusha
xchg
jmp
arpl
mov
stos
loope
hlt
testl
dec
cld
fldenv
and
in
add
cmp
xor
xor
dec
data16
xlat
adc
arpl
movsb
arpl
lds
or
in
mov
pop
mov
shlb
mov
mov
rorl
loopne
or
fildll
adc
int
out
idivl
or
cwtl
mov
dec
mov
icebp
cli
and
xor
clc
rcrb
daa
iret
aaa
outsl
sbb
dec
in
cmp
jecxz
sbb
lcall
roll
in
xchg
push
xchg
push
js
jbe
push
pop
xor
adc
aas
loop
jno
imul
xor
add
cltd
dec
lahf
cwtl
sub
mov
push
mov
mov
dec
add
mov
dec
jecxz
into
xor
mov
dec
mov
leave
jno
add
imul
call
test
fdivs
mov
adc
in
lcall
cmpb
hlt
mov
xchg
dec
add
pop
adc
jle
out
addl
scas
repnz
jns
mov
les
test
fildll
cmc
aad
push
inc
fldl
rcrb
js
pop
sub
enter
pop
or
jl
ret
jbe
or
xor
popl
aam
out
jge
mov
push
out
imul
mov
lds
cmpsb
pop
rolb
or
sub
push
or
xor
adc
push
insl
jnp
scas
pop
xchg
jnp
sbb
add
push
cmp
jb
or
mov
inc
dec
push
pushl
adc
imul
rep
add
push
pusha
mov
loopne
aas
xor
pop
inc
xchg
mov
jno
mov
popf
pop
jge
sbb
rol
jo
dec
xchg
pop
pushf
pop
inc
dec
adc
cwtl
push
incl
xor
rcrl
push
cli
call
pusha
adc
clc
int
push
scas
popf
push
ss
cltd
xchg
aad
xchg
bnd
add
mov
push
xchg
outsb
das
mov
mov
jnp
dec
lds
jle
sahf
popf
mov
jmp
dec
push
mov
sbb
loopne
movsb
and
mov
lea
aaa
outsb
pop
or
enter
pusha
or
insl
std
sub
rcll
jns
xchg
push
imull
dec
push
mov
mov
fsts
imul
pop
sbb
jl
negb
test
cmp
add
and
fildll
pop
cmpb
add
mov
std
jl
sbb
push
pop
pop
or
bound
jmp
scas
xchg
cmp
cmp
pop
add
xchg
mov
mov
leave
js
aas
popf
in
fs
xor
xchg
xchg
imul
mov
mov
or
ljmp
or
add
sub
fwait
inc
dec
stos
out
adc
mov
mov
add
das
outsb
imul
xchg
xchg
dec
scas
fists
clc
loope
dec
mov
popf
loopne
adc
lock
loop
div
imul
mul
mov
fiadds
dec
addr16
adc
pop
dec
and
inc
inc
loop
cmp
outsb
shll
gs
adc
stc
or
out
lea
pop
xchg
aam
outsl
fsubrp
cmpsl
pop
loope
mov
in
mov
add
loope
or
std
mov
jp
pop
xlat
dec
push
rcll
pop
arpl
jae
imul
jmp
mov
pop
sub
cwtl
push
jo
adc
popf
pop
cmp
mov
int
pop
inc
xchg
adc
pop
out
mov
out
cwtl
adc
xor
xchg
sahf
sti
std
bsf
cmp
jge
fildll
lcall
jmp
insl
mov
or
fwait
lods
movsl
les
mov
repz
jno
mov
mov
inc
flds
add
dec
mov
or
mov
shll
mov
inc
add
xchg
sbb
ds
aad
sbb
pop
out
add
mov
out
icebp
push
mov
mov
addr16
mov
loopne
nop
test
mov
arpl
mov
jns
mov
mov
loope
pop
outsl
addl
inc
es
dec
lods
add
mov
sub
shrb
xchg
daa
sbb
iret
add
push
lret
ljmp
outsl
inc
mov
insb
add
loop
ss
loop
pop
rclb
adc
inc
inc
cld
inc
ret
ret
mov
orb
popf
push
dec
sub
pop
arpl
sub
xchg
out
dec
fimull
fs
hlt
fcomip
out
rorl
mov
mov
dec
xchg
xor
ss
ficoml
test
mov
jno
push
test
dec
xor
adc
push
mov
imul
cmp
xchg
cmp
xor
jnp
cmp
mov
dec
inc
adc
ret
cmp
fwait
stos
fsubrp
stos
mov
in
jecxz
in
fdivrl
test
adc
in
pop
das
sub
inc
sar
adc
lea
pop
push
jne
es
out
leave
aas
cmpsb
fdivrl
adc
mov
pop
js
mov
xchg
and
iret
jb
ja
stc
imulb
jle
inc
xchg
pop
out
and
fistpll
call
mov
sub
pusha
dec
cmp
sar
adc
lds
mov
xchg
mov
in
clc
int3
mov
scas
cmp
jl
adc
cmpsb
xchg
ret
jae
fisubs
sub
jp
out
fdivl
adc
mov
jno
push
sbb
and
popa
pop
loop
sub
mov
add
icebp
aaa
sub
push
jns
add
js
sub
lds
add
js
and
ja
rcrl
push
and
scas
xor
xor
testl
scas
fstl
insb
jle
hlt
mov
cltd
orb
pop
int3
inc
inc
cmp
dec
out
jno
outsl
sbb
fisttps
mov
dec
mov
push
or
mov
and
pop
dec
and
push
iret
xlat
cli
mov
lods
fdivrs
into
jp
pop
add
xchg
sbb
push
arpl
push
jae
mov
adc
lea
in
inc
sub
jl
aam
sub
jno
hlt
test
movsl
mov
mov
pop
cmp
jne
and
mov
add
outsb
cmp
lock
mov
aas
cli
stos
rcr
rclb
push
sbb
lahf
dec
ret
sbb
xor
dec
sbb
push
in
cmp
pop
scas
repz
sbb
lea
jno
lcall
pop
std
mov
mov
mov
data16
lcall
pop
sbb
and
cmpsl
fwait
pop
dec
pop
xchg
mov
pushf
push
mov
call
outsl
es
mov
insb
add
push
aaa
imul
dec
adc
sarl
scas
mov
loopne
push
jg
movsb
and
jp
popa
sahf
int3
pop
xor
sar
xchg
stc
popa
mov
in
jno
test
enter
out
xor
lret
cmp
xchg
outsb
data16
dec
pop
sub
mul
fbstp
pop
jns
push
insl
test
sbb
pop
test
jg
adc
jge
mov
add
sub
push
lods
mov
ss
aas
outsl
mov
add
in
adc
adc
adc
sbb
mov
mov
sbb
ss
rorl
pop
sbb
pop
jp
ja
and
into
pop
xchg
mov
fstpl
cmpsb
add
lods
lcall
stc
lods
mov
mov
test
pop
addr16
insl
gs
sub
jmp
addl
sub
and
or
enter
inc
push
cmc
stos
movsl
mov
enter
push
test
adc
sbb
jecxz
pop
aaa
lods
mov
test
mov
pop
mov
out
push
es
arpl
mov
pop
cmp
cltd
js
mov
hlt
mov
cltd
jmp
mov
mov
movsl
outsb
inc
dec
leave
mov
and
in
jnp
imull
xor
cmp
pop
mov
fildl
inc
sub
inc
push
cmp
and
xchg
jnp
inc
push
iret
jae
mov
pop
adc
aaa
shlb
cmp
jp
out
subb
and
or
mov
cmp
add
fisubs
mov
jmp
int3
iret
cmpsl
rclb
jne
push
imul
pcmpeqd
out
insl
or
sub
mov
out
xchg
mov
inc
les
cmc
pop
cmp
inc
xchg
divb
xchg
cmp
inc
sbb
cmpsb
sub
inc
adc
mov
jecxz
mov
xchg
movb
and
pusha
mov
imul
lret
or
sahf
mov
lock
lret
xchg
fst
sub
aas
mov
xor
push
mov
je
mov
inc
ja
mov
lahf
fs
aam
loop
mov
jp
pop
test
jl
pushf
ljmp
popf
js
push
cmc
inc
inc
imul
mov
cmp
and
aas
xchg
rorl
cmpsb
cmp
gs
jae
xchg
or
adc
imull
mov
bound
sub
pusha
ret
push
mov
ja
xchg
ljmp
add
stos
call
push
and
mov
mov
mov
psllq
jnp
popf
inc
xor
cmp
int
mov
sar
sbb
jns
mov
cld
loop
jbe
into
iret
pop
adc
sbb
lcall
lret
dec
sbb
popf
out
scas
mov
add
dec
clc
mov
or
scas
jno
xor
fs
push
pop
mov
sbb
nop
push
in
addr16
fists
outsb
mov
or
ss
sbb
mov
aaa
or
mov
dec
out
mov
xor
in
adc
stos
outsl
das
push
fsubs
mov
cmpsl
repz
xor
xchg
dec
in
aaa
push
flds
push
ja
pop
and
jecxz
js
adc
mov
xor
inc
push
test
or
outsb
aaa
jmp
mov
into
dec
lret
dec
and
daa
adc
pop
adc
sahf
add
movsl
repz
rorl
mov
xchg
pop
sbb
jo
fyl2x
fidivrl
cltd
shlb
cmpsl
cli
gs
adc
add
inc
jnp
push
pop
adc
es
xchg
push
dec
pop
outsb
shrl
push
sub
fldl
mov
xchg
inc
aam
dec
aad
add
aam
loope
xchg
add
mov
sub
sbb
stos
cld
fwait
outsb
cs
xchg
push
fsubp
adc
out
mov
sub
pop
jle
cwtl
dec
scas
arpl
sti
xchg
lock
dec
add
lods
mov
shll
addl
cli
push
mov
aam
insl
mov
bound
or
repnz
push
test
cmp
jae
test
push
in
lret
or
repz
pushf
xor
in
jnp
xchg
lahf
shrb
jno
insl
and
rcll
mov
in
lahf
movsl
jno
xor
mov
loopne
xchg
loope
jno
jo
xor
ds
test
lods
enter
xor
aad
sahf
movsb
jbe
sbb
icebp
popf
orl
stos
push
jge
and
mov
pop
mov
cmp
mov
cmp
aaa
xlat
mov
push
xchg
jl
or
loope
sahf
pop
mov
xchg
or
push
rcr
ds
insl
adc
loope
or
mov
dec
movsb
push
scas
cmp
mov
mov
ljmp
pop
enter
push
mov
rcrb
movb
sbb
mov
gs
test
mov
mov
test
pop
xchg
add
push
add
aad
and
idivb
xchg
push
test
jno
xchg
push
cli
push
sbb
rclb
mov
mov
or
js
mov
cmpsl
sub
inc
mov
ret
repz
pushf
adc
cmp
jnp
test
mov
js
dec
inc
adc
dec
aas
cld
mov
es
mov
xchg
mov
test
frstor
jne
xchg
mov
sbb
js
jge
out
pop
enter
icebp
jecxz
dec
je
mov
push
adc
and
dec
lds
inc
cld
loopne
lret
jb
cli
jns
xchg
sbb
lods
jmp
adc
lahf
adc
ljmp
push
repnz
sti
test
aam
push
ss
shll
inc
aad
mov
cltd
cmpb
lahf
and
xchg
cmp
inc
test
sbb
sub
mov
mov
lods
aaa
or
loope
sbb
arpl
sbb
rcr
lock
int
stos
add
or
mov
pop
loope
cmpsl
push
in
mov
pop
cmp
insl
aam
insl
push
imul
xchg
invd
into
push
cmpsl
outsl
test
fs
bound
lods
imull
loop
js
movsl
mov
inc
inc
fnsave
sbb
lods
or
test
in
cs
cmpsl
stos
data16
clc
roll
jae
xor
adc
outsb
stos
outsb
imulb
add
cmp
pusha
sbb
adc
imul
getsec
out
adc
and
mov
loop
std
cmp
xorl
pop
mov
pop
dec
jb
mov
pop
outsb
pop
das
aas
lret
xchg
push
jo
sbb
bnd
in
lods
ret
push
cltd
insl
pop
mov
and
mov
mov
in
xor
stc
mov
push
enter
adc
xor
inc
clc
into
mov
pop
mov
pop
or
int3
int
std
fnsave
lahf
sbb
mov
jg
push
and
insl
aaa
cmpb
in
loop
or
les
ss
mov
loope
pushf
xor
sarb
lds
rcrl
mov
movsb
mov
fildl
inc
pusha
subb
mov
jle
andb
lea
sub
pop
xor
dec
jb
fwait
and
clc
mov
mov
xor
clc
out
movsb
or
imul
enter
cmp
or
ss
and
std
add
xchg
roll
xor
jecxz
nop
loopne
repz
inc
pop
inc
sbb
mov
dec
scas
inc
and
xchg
mov
scas
cmp
aas
sbb
mov
orb
sub
push
loopne
inc
fdecstp
movsl
pop
pop
repz
xlat
idivl
in
dec
jle
pop
sub
ljmp
pop
into
pop
push
lods
sbb
sub
fucomip
push
std
mov
fisttpl
sbb
jmp
rcrl
fldt
xchg
add
fwait
sbb
xor
lret
popf
loop
pop
or
cmp
jo
adc
icebp
mov
loopne
adc
iret
pop
and
sub
fsubl
mov
test
bswap
add
stos
cmc
test
push
inc
mov
mov
push
add
or
dec
xor
fmull
nop
hlt
sbb
xor
cmp
fs
jge
inc
rorl
adcb
push
imul
mov
scas
cmp
fwait
sub
test
insb
mov
mov
scas
jl
mov
ss
out
insb
mov
pop
rolb
inc
mov
aas
call
or
pushf
mov
js,pt
push
cmc
test
into
inc
int3
push
nop
repz
jmp
out
xor
cli
adc
sbbl
jne
mov
iret
cmpsb
call
push
jecxz
cmp
sbb
mov
pop
xchg
pop
mov
je
nop
push
in
movsb
out
push
xchg
xor
mov
gs
hlt
hlt
add
add
int
sbb
push
ret
inc
jo
and
std
cmpsl
dec
fldl
lods
daa
jmp
sbb
and
scas
out
inc
jp
xchg
aam
int
mov
push
fimull
movsl
les
imul
xor
shrl
xor
inc
pop
adc
mov
sub
xchg
sbb
movsb
mov
sub
out
jmp
push
call
int
push
stos
mov
xor
or
dec
pop
pop
jne
pushf
dec
lods
cmp
jno
mov
pop
sarl
inc
cltd
bound
adcl
mov
ret
aaa
stos
jb
adc
push
sbb
inc
dec
nop
clc
aaa
js
pop
pop
roll
cmp
xor
popa
fiaddl
repz
mov
psllq
mov
dec
ret
mov
cmp
or
push
icebp
scas
inc
jnp
ret
push
pop
pop
xchg
ja
leave
dec
sarl
or
jae
int
daa
cmp
dec
xchg
pop
test
adc
add
xchg
xchg
jle
mov
out
cmp
pop
sub
lret
pusha
addr16
dec
xor
add
call
mov
mov
clc
mov
dec
loop
dec
scas
jmp
jbe
add
jecxz
xchg
mov
in
dec
fdivs
or
lretw
lods
mov
sbbb
inc
or
pop
push
lret
mov
addr16
lcall
subb
sub
push
push
inc
add
inc
lret
push
stos
sbb
and
add
sbb
cmp
pop
scas
xor
jne
inc
rcrl
mov
sar
jmp
and
cli
mov
fldt
cmp
in
pop
cmc
mov
loopne
jns
pop
bound
movsl
addr16
push
out
push
xor
loopne
movsl
mov
mov
out
psllw
fstps
push
arpl
and
xchg
pop
clc
lahf
pop
pusha
adc
repnz
push
mov
mov
mov
mov
andb
sub
sub
mov
addl
mov
xor
mov
hlt
xchg
ret
fnsave
sbb
pop
je
insb
hlt
dec
push
push
testb
js
rol
test
xchg
movsl
fildll
xor
enter
dec
xchg
xchg
scas
pop
ljmp
cmpsb
popf
xor
pop
inc
rol
loopne
mov
xchg
sub
cmp
push
stc
fcmovnbe
movsb
sbb
lahf
int
jge
outsb
movsl
sbb
push
inc
jg
ret
rcrl
inc
jbe
iret
mov
inc
mov
test
sbb
and
mov
pop
data16
popa
out
call
cli
sahf
inc
repnz
in
int3
js
in
stos
mov
iret
stos
adc
out
mov
mov
dec
push
jmp
fcoms
jle
mov
subl
and
sahf
mov
lret
int
inc
add
stc
pop
cs
pop
test
decb
lods
cmovnp
mov
pop
or
mov
jae
pop
adc
fadds
sub
ljmp
lock
xlat
inc
xchg
pop
mov
push
cmp
mov
ret
lret
test
movsb
cmp
sbb
daa
xor
lcall
int
arpl
adc
sub
pop
repz
pushf
scas
mov
push
mov
movsb
jmp
adc
xorb
jge
cmc
dec
lret
push
xchg
hlt
addr16
cmp
dec
aas
lahf
fmull
cltd
or
inc
xchg
sub
inc
es
xchg
movsb
fdivrs
dec
movsl
xor
jl
insb
xor
mov
inc
test
jnp
push
cs
pop
movb
daa
ret
test
andl
lds
gs
jmp
push
mov
sub
mov
inc
mov
dec
inc
inc
mov
les
mov
pop
mov
pop
sbb
in
in
cmp
scas
jl
test
jnp,pt
jmp
xchg
dec
movsl
cmp
cmpsl
lods
or
stc
jno
sub
in
cmp
ss
ret
stc
add
dec
mov
fsubs
mov
adc
xchg
repz
and
inc
or
inc
sar
negl
cmp
jns
mov
mov
movsl
into
negl
gs
js
push
sbb
int
out
subl
xchg
lea
ja
jle
cmc
scas
add
xlat
insl
add
mov
repnz
pop
xor
push
mov
sbb
cmc
or
jmp
fmulp
mov
nop
pop
fisubrs
imul
repz
stc
ljmp
sub
icebp
popf
or
jnp
fbld
mov
outsb
hlt
and
cmpxchg
pusha
dec
or
inc
xchg
mov
mov
ljmp
popf
dec
xor
pop
int3
jmp
jl
xchg
cmp
push
mov
sub
sbb
and
faddp
test
mov
loopne
int3
dec
pop
pop
xchg
adc
rolb
lock
roll
adc
jmp
sub
cmpsb
pop
ret
and
mov
push
adc
orl
pop
neg
mov
and
sub
mov
pop
adc
mov
lret
out
sbb
pop
int
jge
insb
xchg
adc
sbb
adc
mov
out
jnp
and
fcmovnbe
jecxz
lods
xor
xchg
fs
adc
sti
adc
xchg
xorl
lret
sub
bound
aad
ret
mov
dec
and
cmp
out
ljmp
pop
or
pop
ss
imul
fs
ret
insb
push
mov
or
fisubs
imul
and
jae
cli
push
or
vfnmsubpd
popl
sti
adc
xor
aaa
add
jnp
data16
sbb
inc
sub
or
decl
mov
loopne
addb
push
lret
aaa
sbb
mov
push
mov
push
js
pop
sbb
jmp
xchg
dec
lods
outsl
js
cmp
ljmp
ret
fldt
xor
lods
out
sub
pop
fs
or
iret
push
push
cmpsb
dec
add
aas
ret
movl
mov
mov
ja
outsl
xor
mov
movb
mov
dec
sarl
clc
inc
cmp
add
fisttpll
sbb
in
sbb
push
insb
nop
or
mov
add
add
cmp
into
xchg
shll
je
inc
hlt
stos
rcr
push
or
mov
mov
loopne
cmp
popf
xchg
inc
mov
and
mov
scas
mov
inc
inc
inc
aad
rcl
mov
lahf
aaa
daa
or
fistl
dec
ret
ljmp
mov
and
inc
dec
cmpsb
insl
je
pop
mov
addr16
cmc
push
xchg
fdivrs
test
dec
fs
pop
xlat
pop
mov
scas
flds
shld
sbbl
adc
cmp
adc
es
fldcw
push
dec
pop
test
mov
sub
cmp
icebp
fbld
jmp
mov
inc
cld
adc
mov
imul
sub
fxam
lahf
test
and
cmp
out
add
push
idivl
ret
xlat
movb
add
jo
adc
adc
pop
rcrl
xchg
xor
fimuls
adc
movsl
dec
dec
ficompl
lock
xchg
ja
sub
and
dec
or
imul
sbb
int
out
in
in
es
cmp
shrb
mov
cmp
push
fwait
sbb
sbb
xlat
pop
xlat
int3
stos
aam
xor
sbb
subl
aaa
stc
cmp
mov
inc
sbb
lret
aam
jnp
xchg
sti
in
jb
xchg
out
fnstcw
dec
fdivl
cwtl
fwait
cmpsb
nop
loope
or
pop
outsb
inc
sub
popf
aam
pop
jmp
daa
dec
dec
xchg
jmp
jno
test
xchg
jp
inc
pop
test
sbb
pop
push
roll
aad
jecxz
daa
aas
sbb
jb
adc
sbbb
inc
int
dec
lods
out
sub
mov
stos
jle
add
lds
es
fldcw
cltd
mov
pop
sub
mov
push
das
pop
sahf
jg
inc
sbb
inc
fmul
push
xchg
sbb
jnp
pop
adc
jne
pop
in
ret
inc
stc
jnp
in
mov
fs
pushf
sbb
sbb
jp
cmpsb
mov
cmpsb
add
aam
push
cwtl
repnz
cli
orb
in
clc
dec
pop
out
pop
sub
jecxz
imulb
pop
cmp
pop
and
xor
icebp
fwait
aad
sub
loopne
ret
add
ja
and
mov
fwait
ret
sub
aam
mov
sbb
xchg
data16
mov
lods
lods
add
lds
sbb
pop
sbb
add
cmpsl
mov
stos
and
lret
add
inc
mov
sti
lods
sub
imul
push
mov
mov
stos
in
xchg
ret
sbb
mov
sbb
stos
inc
pop
je
and
out
xchg
enter
cmp
insb
stc
outsb
ljmp
adc
push
loopne
jno
xchg
mov
int
fcomps
das
test
cmpsl
shrb
lret
fcoms
daa
or
sbb
mov
aas
out
xchg
cmp
push
push
and
ja
sub
iret
jbe
iret
out
xchg
mov
into
cmp
es
test
cs
push
cmp
xchg
dec
lods
scas
bt
pop
xchg
jne
scas
lods
add
dec
mov
and
cmp
xchg
mov
faddl
rcrl
sbb
call
adc
outsb
mov
jge
pop
push
push
es
mov
or
mov
sub
loopne
test
lods
test
into
roll
std
in
cmp
sbb
sub
push
sbb
xchg
mov
and
lret
push
add
add
pop
pop
stos
dec
push
mov
repz
popa
pop
aas
adc
sub
mov
test
sbb
test
out
pop
sbb
inc
movsb
jns
aad
ret
or
ja
dec
gs
out
jmp
cs
xor
addb
ja
sub
lahf
xor
or
bound
sub
inc
or
push
sub
mov
and
push
mov
jg
or
mov
cld
shrl
loop
cmpsl
add
sub
and
push
fwait
adc
push
sub
rol
pop
mov
das
mov
fcom
stc
sbb
ret
push
lahf
pop
inc
mov
mov
jns
jecxz
xchg
sbb
sbb
lcall
sbb
dec
aam
test
inc
cs
shl
icebp
add
pop
dec
inc
sbb
push
xlat
leave
mov
mov
sarb
dec
or
jb
push
pop
popf
repnz
xchg
das
stos
sub
cmp
mov
mov
and
cmovp
out
incl
sub
add
jae
icebp
fisttpl
in
out
mov
cmp
out
call
mov
mov
or
in
jp
xchg
pop
adc
fwait
adc
ds
adc
adc
ret
data16
fstps
pushf
add
adcb
mov
stos
inc
adc
enter
lret
mov
and
cld
dec
imull
iret
mov
sub
dec
hlt
push
pop
insl
call
mov
mov
test
and
icebp
bound
xchg
xor
fsubs
push
sbb
push
pop
lea
fdivs
aad
test
or
lea
aam
test
jb
dec
dec
xor
leave
shl
push
xorl
repnz
cmp
sub
jecxz
jbe
inc
mov
dec
inc
sbb
je
in
cmp
ljmp
xlat
sbb
dec
insl
sbb
jnp
js
mov
pop
jl
dec
jne
xchg
dec
js
ds
add
jb
xor
hlt
push
adc
mov
sbb
xchg
inc
push
ficoms
pop
or
xchg
xor
es
fwait
cli
mov
sarl
rcrb
ss
adc
mov
inc
out
mov
fidivl
lock
jge
cld
int3
jg
adc
push
aad
sbb
movsb
push
mov
mov
cmpsb
or
inc
das
sub
fisubs
leave
rcll
cmp
cmpsb
ss
pop
or
iret
cmp
stos
jb
test
or
push
popa
test
pop
xlat
decl
gs
sub
mov
test
rorb
shrb
mov
test
push
push
fsts
cld
fnstcw
testl
orl
mov
push
mov
pushf
adc
or
outsb
xchg
push
add
mov
idivl
pop
imul
stos
push
xlat
mov
test
scas
or
fidivl
push
fwait
hlt
sub
subb
addr16
push
imul
scas
push
lret
aad
add
sub
add
movsb
rep
mov
cwtl
mov
pushf
xor
orb
sub
sbb
mov
or
repnz
rol
pop
cmc
dec
or
test
inc
pop
lods
lds
push
pushf
push
out
insb
and
aad
push
shrb
jbe
lcall
jg
lahf
es
loopne
mov
push
mov
verw
xchg
jnp
add
mov
push
sbb
fisubrl
in
sbb
and
call
stos
xchg
mov
mov
jmp
push
movsl
and
addr16
test
ret
xor
enter
shr
out
shrl
enter
test
mov
sbb
rcrl
pop
sbb
lret
dec
roll
ficomps
lahf
xchg
sti
cmpsb
xor
rcll
insl
mov
lods
insl
jnp
inc
fstpl
les
shll
jae
insl
jno
adc
pop
icebp
push
xor
lds
sub
jbe
lahf
mov
movsl
rorl
call
fisttps
add
jmp
add
sbb
outsb
cmp
mov
xor
sbb
insl
shll
xchg
in
icebp
jbe
jg
add
mov
les
add
in
jo
push
and
pop
inc
add
xor
cs
test
rorl
fiadds
aas
adc
mov
mov
icebp
mov
lret
in
cld
movsb
fnstenv
push
test
das
pop
and
outsl
je
jle
lods
add
ret
cmp
mov
or
fucom
push
popf
es
inc
movsl
nop
cld
add
fisubs
dec
jne
inc
repz
or
mov
subl
jbe
push
lret
xchg
test
sub
imull
sub
sub
inc
adc
sti
sbb
int3
not
jnp
fstps
sub
adc
mov
repz
pop
cmp
or
cmp
fs
sub
int
jl
jecxz,pn
xchg
xchg
sbb
std
adc
xor
imul
xchg
push
repz
imul
mov
mov
movsl
iret
mov
js
shll
push
sub
clc
inc
loop
mov
and
inc
jp,pn
fchs
scas
lcall
addl
push
bound
push
and
stc
popf
shrb
daa
pop
mov
test
jns
or
test
sub
pop
mov
fcomps
repz
shrl
xchg
fildl
jmp
into
insb
lret
dec
cmp
std
je
fwait
jmp
mov
jbe
rcr
jle
es
and
add
jb
pop
mov
cmp
xlat
jb
lds
cmc
sub
pop
add
adc
mov
fwait
movsl
mov
std
movsb
pushf
push
mov
clc
sub
jns
in
pop
add
add
lahf
test
mov
or
fcomp
sub
jl
jmp
inc
popf
repz
jle
xchg
js
leave
pop
sbb
arpl
mov
inc
loop
jns
fbld
rcrb
pop
or
pop
jp
pop
les
or
cld
insb
push
push
xchg
imul
dec
lahf
popa
hlt
stos
out
dec
subl
lret
cmp
je
lock
jns
xor
sahf
jnp
mov
pop
add
test
fmulp
adc
xchg
xor
fadd
mov
sub
push
incl
sub
test
or
mov
adc
jmp
mov
jle
mov
lret
lds
rol
inc
jnp
inc
inc
cmc
pushl
xor
lea
je
add
insb
bound
ja
fcmovnu
push
jne
pop
cwtl
imul
push
sbb
in
lahf
dec
xchg
fisttps
push
jmp
jns
inc
stos
sbb
sub
jns
pop
mov
insl
aaa
sub
mov
cld
dec
inc
fstpt
in
pop
cmp
loopne
mov
in
cmp
outsl
stos
das
iret
sbb
sub
xchg
dec
or
mov
mov
les
ret
and
xor
int3
rcrb
fsubrs
loopne
ret
pusha
and
imulb
sub
mov
dec
dec
or
mov
push
lret
pushl
cmc
sbb
adc
jge
out
add
cmp
gs
sar
inc
xor
sbb
cmpsb
cltd
adc
push
clc
mov
das
xor
mov
inc
int
into
movsb
dec
mov
pushf
jge
daa
andb
out
adc
dec
shl
mov
adc
add
imul
dec
mov
imul
idivb
outsb
add
shlb
dec
pop
loop
or
shll
dec
jns
roll
cli
or
jmp
aad
dec
cmp
jmp
call
add
ljmp
shrl
mov
into
es
push
mov
cmpsb
data16
mov
or
xor
stos
jmp
stos
fwait
or
inc
sub
sub
cmp
imul
cli
lock
les
fnstenv
sysret
stc
js
mov
sub
sahf
jle
fcompl
pop
push
inc
jne
sub
ljmp
mov
out
jbe
adc
mov
fwait
bound
or
add
adc
or
aam
cli
movsl
popf
add
dec
fs
shll
ret
stc
mov
lcall
push
push
ret
pop
pop
xchg
sub
pop
ret
sarb
mov
cmp
sub
orb
fs
inc
aas
andl
dec
mov
mov
and
subl
push
dec
filds
fisttps
xchg
inc
add
push
aad
push
inc
and
out
movsl
mov
pop
jns
out
xchg
add
lret
ss
xor
push
sub
in
mov
ja
cmp
lea
xor
cmp
mov
mov
mov
ret
lods
daa
in
sub
fbld
add
out
movsb
iret
sbb
xchg
aaa
fwait
repz
push
fbld
mov
sbb
insb
test
ret
xor
jb
sbb
jb
stc
jno
cmpsl
popa
mov
sub
inc
in
out
fldenv
and
mov
push
int3
push
movsb
inc
mov
add
pop
push
dec
cmp
clc
cmp
pop
and
and
sub
in
push
jne
insl
mov
mov
subb
movsl
sub
mov
fsubl
sbb
mov
mov
leave
les
scas
je
lods
pop
sbb
pushf
aad
mov
mov
or
jle
addr16
add
mov
and
in
mov
loopne
outsl
pop
push
or
push
push
add
and
mov
mov
inc
arpl
xchg
inc
loop
dec
cmp
sbb
gs
push
les
cmc
data16
lds
loope
inc
lods
pop
xor
clc
mov
fdivr
xor
jo
push
lcall
mov
insb
add
jp
dec
cmp
adc
movsl
leave
cmpsb
iret
pop
dec
mov
add
fwait
adc
xchg
xchg
inc
pushf
loopne
and
cmc
inc
stc
sar
lret
lods
pop
mov
sbb
jmp
sbb
test
add
arpl
ficompl
cmp
js
out
pushf
aad
pop
jl
lcall
cmc
mov
mov
int
into
push
and
xlat
mov
leave
mov
roll
cld
lock
call
xor
fwait
push
sub
mov
inc
fwait
xchg
jmp
daa
lds
stos
fimull
inc
pop
push
lret
subl
repz
jge
xchg
jnp
das
mov
cmp
dec
or
jl
adc
lret
cmpsl
fdivrp
adc
push
sub
test
cmp
out
fcom
xchg
jmp
and
ret
leave
push
sub
push
pop
mov
loopne
lods
cmp
xchg
add
test
ljmp
subl
cld
loopne
mov
mov
das
les
popa
adc
stos
cltd
rcrb
clc
mov
inc
lea
add
dec
cmpl
xchg
out
mov
and
sarb
jnp
sarb
int3
jne
loopne
dec
insb
notb
inc
jbe
rcrb
dec
scas
pop
jle
mov
jge
inc
stos
pop
pop
cmp
add
mov
sbb
push
sub
xlat
mov
xor
imul
imul
jge
nop
xchg
push
aam
pop
jle
sbb
mov
push
mov
jge
dec
and
xchg
jno
out
sub
loope
push
add
loope
adc
fcoml
push
sbb
xor
jp
frstor
mov
mov
pop
mov
pop
xchg
xchg
cmp
mov
mov
imul
es
in
mov
shll
jp
mov
dec
jb
inc
add
add
inc
and
mov
test
js
adc
push
sbb
outsl
jp
add
sahf
mov
lahf
pop
int3
inc
jne
stc
and
outsl
addb
jo
pop
ficoms
sbb
add
xchg
das
push
xor
ljmp
in
adc
inc
adc
out
mov
pop
sub
div
icebp
mov
mov
in
push
sbbb
dec
test
add
sbbb
and
fildl
mov
movsl
arpl
repnz
dec
dec
dec
and
inc
push
mov
or
mov
jge
jle
sahf
lock
int
iret
add
jl
subb
lds
or
loope
push
or
out
xchg
leave
add
ss
dec
lods
cmp
xlat
sbb
in
mov
sub
lea
mov
les
shlb
mov
cli
sbb
add
sbb
out
aad
jmp
fcoms
mov
mov
imul
stos
lock
mov
rolb
xor
or
std
cmp
cli
rcll
adc
rcll
xchg
cmp
cmc
sbb
movsl
sub
sarl
push
jo
out
or
cmpb
das
sbb
clc
and
jecxz
notb
add
cli
adc
test
pop
push
push
push
sub
xor
jno
add
pop
ds
xchg
pushf
dec
mov
fwait
push
or
scas
xor
adc
imul
sub
outsb
xchg
arpl
sarl
adc
lahf
xor
lock
push
cli
mov
mov
mov
mov
ret
mov
or
pop
sbb
xchg
int3
nop
ljmp
jl
add
xlat
lret
mov
popf
repz
cltd
pop
shrb
adc
pop
ljmp
cmp
dec
sub
pushf
je
jne
xchg
ja
add
pop
sub
shlb
mov
bound
test
dec
or
cwtl
and
daa
divl
insl
cmp
stc
aad
mov
pop
mov
sbb
or
adc
lods
rol
inc
adc
or
sub
sub
jecxz
stc
insb
sub
stos
test
das
xchg
push
sub
in
enter
adc
popa
add
xor
jns
pop
movsl
popf
out
push
cmp
sub
das
mov
jb
sub
or
adc
cmp
sub
jg
enter
ret
push
ja
xor
stos
jae
add
cmpsl
cld
sbb
add
and
sub
cmp
scas
mov
cmp
insb
pop
test
in
sub
dec
test
out
inc
ds
shrl
xchg
int3
mov
jp
lret
loopne
add
dec
push
cmp
outsb
push
cmp
pop
js
test
daa
sbb
add
aaa
mov
push
aam
mov
sbb
jmp
fadds
stc
or
xchg
mov
mov
ret
pop
cmp
xchg
push
mull
loop
sub
pop
xor
or
push
lcall
aad
cmp
push
lods
arpl
icebp
aaa
cld
pop
clc
pop
cwtl
push
lods
insb
leave
insl
fstpt
mov
lods
shll
stc
ss
adc
sbb
mov
arpl
inc
aam
mov
cltd
ljmp
das
jbe
inc
jge
xchg
jae
jo
inc
jl
mov
xor
addl
cwtl
and
push
fsubrl
imull
repnz
rcll
jmp
jg
jns
and
scas
push
js
jle
popf
dec
aam
aam
mov
pop
mov
cmp
mov
push
pop
cmc
xor
in
mov
pop
push
pushf
cmpsb
jns
ret
movsb
jnp
nop
or
insb
fs
push
xor
test
lock
ret
leave
scas
sub
push
dec
call
adc
ljmp
dec
pop
lea
adc
into
enter
rolb
or
popf
jp
jns
xor
jle
mov
int3
arpl
mov
pop
sub
cwtl
into
insb
sti
cmp
sti
mov
dec
lfs
jns
imul
out
xchg
cmp
es
pusha
dec
push
sub
inc
cs
jnp
insl
jbe
xchg
fnstenv
jbe
imul
pop
fucom
inc
jne
jns
pop
adc
jl
negl
push
sarl
sbb
push
xchg
mov
mov
outsl
lock
out
mov
mov
pop
jecxz
call
pop
out
imulb
cs
aaa
push
xchg
mov
mov
ljmp
mov
push
mov
xchg
cli
mov
idiv
and
or
mov
and
push
pop
loop
inc
jle
loopne
imul
adc
lea
sbb
sbb
lahf
mov
test
sbb
rclb
movsb
jge
sub
insl
xor
stc
insb
ret
scas
xor
cmp
add
ret
inc
aas
icebp
mov
stos
sbb
or
pop
sub
mov
adc
jb
inc
lahf
rcll
xor
sbb
jmp
inc
or
loopne
sub
add
js
lods
jnp
lock
xchg
lods
ret
lea
push
xchg
pop
dec
addr16
data16
fwait
imul
frstor
fstl
test
or
movsl
rcrl
imul
gs
lahf
fists
ret
adcb
sahf
sub
nop
iret
adc
xchg
sub
cld
jnp
pop
mov
mov
adcb
mov
mov
aad
jnp
cwtl
xchg
push
add
movsl
mov
out
jmp
out
in
xchg
sbb
clc
jne
push
pop
rorb
cmp
fnstenv
inc
imul
jnp
pushf
mov
sbb
lods
mov
je
cmp
add
jge
or
cmp
mov
pop
mov
fcmovb
jl
out
sbb
xor
cs
shrl
int
idivl
mov
or
and
push
icebp
stos
pop
adc
aad
shlb
cmc
jns
xor
fwait
push
cs
test
test
roll
repz
js
sahf
mov
mov
sbb
fnstenv
push
sbb
fs
jae
mov
je
mov
xchg
lahf
mov
cmpsl
push
imul
mov
jno
iret
aad
repz
cltd
lds
jb
mov
jnp
push
rcll
push
fwait
xor
add
lds
add
movsl
inc
and
push
jmp
mov
inc
xchg
ret
insb
hlt
int
cmp
xor
das
or
mov
add
xor
mov
cmp
fiaddl
pop
cmp
jge
xchg
adc
jg
outsb
dec
fwait
imul
lcall
inc
pop
add
in
stos
xchg
mov
out
cmpsb
ret
lods
lds
push
outsl
xor
push
gs
loopne
das
and
shll
cmp
fadds
mov
jp
not
push
cmp
loop
pop
mov
mov
push
lods
lods
push
xchg
out
or
stos
jb
or
dec
lods
icebp
ja
loopne
popf
add
and
in
pop
ftst
cli
mov
xchg
mov
lds
roll
push
je
mov
sbb
es
push
jo
inc
mov
fisttpl
and
cwtl
mov
in
hlt
jbe
pop
sbbl
push
mov
ffreep
icebp
mov
push
inc
mov
fsts
mov
loope
sbb
adc
lea
add
push
or
popl
mov
cmpsl
stos
scas
js
psllw
push
inc
add
xor
jmp
and
iret
mov
int
shr
xchg
xchg
jbe
mov
push
addr16
cli
xchg
push
or
outsl
xchg
aaa
fsubl
lahf
jecxz
push
out
ds
leave
movsl
cmp
aad
jmp
jne
cmp
push
or
mov
cmp
pop
xchg
ret
lock
sub
mov
repz
mov
and
movsb
pop
sub
les
push
mov
or
push
aad
scas
xchg
ds
inc
les
add
lods
jl
sbb
rcr
das
lds
lods
lret
xor
mov
rcrb
jns
adc
loop
ss
aam
ljmp
jno
dec
xchg
imul
adc
cmpsb
pop
adcb
mov
cld
mov
dec
push
test
xlat
int
dec
fbstp
imul
pop
add
imul
es
scas
in
addl
sub
lcall
dec
mov
shll
mov
sarl
mov
adcb
into
arpl
data16
mov
inc
jg
movsl
mov
xor
sbb
movntps
cwtl
lcall
cmp
fldl
push
pop
sbb
int3
cli
jl
pop
daa
lock
sbb
pop
js
insb
popf
js
mov
add
pop
sar
sub
mov
cs
arpl
sahf
imulb
or
leave
push
out
mov
dec
mov
scas
addl
or
imul
xchg
aam
adc
insb
inc
inc
mov
mov
cmpsb
add
xor
mov
mov
enter
push
out
ja
jo
pop
push
sub
sub
dec
xor
subb
or
xorb
inc
lods
insl
fs
hlt
push
sbb
ret
sbbl
lret
addr16
hlt
lahf
inc
xor
pop
add
dec
loopew
aas
jmp
je
pushf
cmp
or
inc
add
movsb
jnp
or
andl
mov
xchg
sti
imul
mov
inc
fdivs
sbb
sub
nop
jbe
iret
cmpsl
and
arpl
xchg
adc
hlt
nop
pop
ja
iret
xor
xorb
jle
lahf
rol
test
jno
cld
fxsave
movsl
dec
mov
std
adc
test
bnd
xor
jge
and
aad
mov
arpl
stos
stc
sub
push
inc
inc
clc
push
cmpsl
adc
adc
add
mov
lods
mov
sub
mov
sbb
ja
push
and
and
clc
sbb
mov
outsb
out
push
fnclex
mov
sbb
jns
stos
sbb
xchg
std
xor
jae
lea
jmp
sbb
dec
scas
mov
scas
push
js
fsubrs
popa
jnp
fnsave
xchg
rcll
or
pop
idiv
or
ja
push
mov
add
jne
lea
test
sbb
jo
sub
sub
vprotd
cmp
subb
push
cs
xchg
fstl
pop
pop
in
jb
punpckhwd
movsb
pop
aas
push
jmp
inc
and
mov
fldt
cmp
test
rcl
xor
shll
lds
mov
add
pop
imul
imul
outsb
out
out
decb
iret
sub
cwtl
mov
push
call
fidivs
dec
sbbl
std
repnz
test
xor
ret
cmpb
jbe
mov
xchg
mov
and
movsb
ss
cmpl
repz
add
cmpb
xor
sbbb
or
stos
jb
les
add
int3
inc
stos
lods
xor
mov
sub
movsb
fstpt
fistps
out
and
mov
push
cmpsl
es
cmp
xchg
or
inc
rcll
pop
push
mov
mov
aam
fistps
inc
pop
aaa
sub
xchg
push
pop
cld
xchg
push
sahf
cs
rolb
jle
add
scas
inc
shll
and
dec
xchg
pop
ja
stos
mov
lret
jne
call
rolb
out
sahf
icebp
inc
jmp
and
sub
cli
dec
testb
mov
loopne
insl
orb
and
js
mov
inc
ffreep
fwait
cmp
fdivr
jg
push
clc
pop
dec
xorl
hlt
popa
push
inc
push
test
out
out
cld
frstor
cltd
push
aam
cmp
sub
dec
fwait
and
cmp
mov
lods
scas
rorb
pusha
mov
sti
lods
jl
sete
xchg
lea
in
dec
mov
cs
outsb
pop
mov
or
add
add
test
xor
ret
mov
push
ret
ret
adc
cmp
push
xchg
cmpsb
jae
adc
icebp
cld
or
cmp
xchg
popf
sbb
push
jnp
add
out
cmp
outsl
outsl
nop
push
cmp
xchg
shll
inc
shrl
pop
inc
mov
cs
cmp
aaa
jg
and
fcom
mov
frstor
and
jb
cmp
inc
leave
cld
add
sbb
adc
cwtl
jno
aas
push
and
sbb
mov
pop
sbb
insl
or
xchg
and
xchg
mov
sahf
imul
lcall
ficoms
test
loopne
loope
add
xor
sub
mov
jb
xor
icebp
lds
mov
xchg
mov
mov
loop
out
fstps
and
push
pop
xlat
test
mov
jno
test
pushf
mov
push
mov
cmpsb
test
adc
sub
stos
sub
repnz
xchg
rcrl
jg
insb
pop
fdivl
mov
xchg
sarb
jecxz
cmpsl
loopne
add
test
cmpsl
jmp
adc
or
std
in
mov
inc
pminub
aam
ss
dec
sub
xor
loop
jno
jne
cmp
push
cmp
cmp
lcall
xchg
xor
shll
and
cld
out
xor
lret
dec
call
aam
aaa
mov
sbb
je
push
mov
xchg
jnp
lea
dec
pop
jne
cmpsl
hlt
push
add
inc
adc
sbb
mov
cmpsb
xchg
or
sub
mov
lods
sti
jecxz
lock
sti
or
repz
pop
dec
dec
daa
jb
in
clc
jmp
and
loopne
imul
subl
xor
pop
movsl
fistps
adc
sub
mov
xchg
adc
cmpsb
fnstsw
inc
xchg
outsl
lods
stos
add
std
push
xor
and
inc
call
sbb
mov
xor
movsl
adc
roll
nop
ss
push
cli
lahf
call
sub
popf
movsl
test
adc
daa
dec
in
mov
jns
rol
in
in
icebp
sub
arpl
xlat
add
push
adc
mov
jl
adc
mov
mov
pop
imul
pop
add
push
test
or
fsubs
push
inc
cmpsb
inc
aaa
lret
fadds
fldt
mov
cmc
jne
js
test
and
shll
pop
outsl
loopne
lcall
pusha
cmp
insl
mov
push
mov
adcl
dec
push
pop
push
aam
out
adc
adc
add
es
cmp
xor
jmp
outsb
inc
data16
push
dec
cltd
xchg
call
movsl
cmc
cmp
inc
sbb
std
ja
mov
pop
lret
cmp
jns
scas
jbe
sti
mov
sub
movsb
sub
stos
arpl
rolb
push
stc
or
and
push
mov
mov
out
cmp
mov
lret
call
mov
sarb
fcoml
iret
das
sub
xor
inc
sbb
dec
daa
out
andb
rcrl
sahf
mov
les
mov
mov
call
pop
jp
push
std
inc
sbb
test
es
jl
and
jp
out
enter
pop
out
cmp
ss
rcll
and
cmp
xorb
adc
ror
js
sub
repnz
mov
mov
push
sti
mov
mov
cmc
mov
jb
fildl
int3
inc
pop
popa
cmp
sub
clc
std
shlb
out
sub
addr16
dec
and
cwtl
fmull
ljmp
xor
xor
jmp
dec
ds
xchg
xor
fwait
xlat
sbb
addr16
cltd
xchg
inc
jg
and
rorl
sub
jg
out
lcall
push
ljmp
scas
push
jae
test
sbb
sti
test
mov
test
xchg
sub
sbb
sbb
xchg
jne
cmp
inc
movsb
pushf
mov
pop
sub
stos
lock
inc
jmp
les
das
add
sub
jb
jle
jns
cmp
add
loope
add
add
fstpt
or
ret
sub
cmpsl
push
dec
xchg
arpl
mov
pop
ss
pop
mov
adc
fwait
jl
imul
push
pop
dec
adcl
scas
inc
inc
add
cmp
xchg
aam
and
xor
shll
add
into
shlb
test
stc
std
xchg
jmp
enter
int3
xlat
scas
nop
push
out
jg
cld
insb
adc
xor
cmp
iret
push
cmp
jb
fistps
sbb
xor
push
or
lret
subb
ret
das
adc
shll
shlb
rolb
or
ja
xchg
cli
shll
and
mov
out
pop
xor
inc
rorb
out
lcall
cmc
mov
sbb
mov
sub
dec
in
sbb
addr16
pop
xchg
sahf
mov
or
sti
inc
fidivrl
pushf
sbbl
add
inc
fs
inc
aam
sahf
add
adc
pop
loop
sbb
cmc
pop
sub
enter
jb
adc
iret
out
and
lea
inc
lcall
addr16
cmpsl
jle
sbb
and
mov
xchg
jne
and
xlat
lds
adc
pop
popf
fcomip
pop
das
movsl
xchg
and
mov
and
inc
iret
jbe
dec
push
push
add
sbb
pop
stc
pop
rcr
lods
idivb
mul
daa
nop
stos
fidivs
leave
mov
test
adc
ljmp
in
jns
mov
fdivr
cld
mov
ja
mov
xchg
inc
fnstsw
ljmp
adc
sahf
sbb
cltd
loop
fisubl
cmc
add
arpl
loopne
sub
ja,pn
adc
jbe
or
push
inc
sub
cmpl
add
int
gs
push
push
and
xchg
aas
lahf
std
lock
rcll
shll
pop
add
and
mov
mov
stc
dec
shl
lock
in
and
repz
dec
jp
pop
in
cmpsb
in
pop
sub
mov
jl
je
jnp
xchg
add
mov
cmpb
es
lock
dec
cwtl
sahf
jae
loopne
clc
aaa
scas
enter
bound
rol
jno
mov
data16
jbe
outsl
cli
and
sub
and
fs
mov
ret
mulb
or
imul
push
fs
je
jl
lahf
mov
jns
pop
andb
mov
xchg
mov
fdivs
push
je
popa
cmp
bound
xor
lods
jne
imul
call
xchg
clc
lret
mov
or
aam
mov
dec
out
adc
int
push
in
cmp
sub
imul
push
cs
movsl
xor
adc
lods
dec
pusha
ret
sub
mov
dec
test
fs
jo
mov
int
push
or
inc
pop
mov
out
xlat
dec
leave
int
jge
sarb
into
out
pop
and
mov
test
fildl
aaa
inc
cwtl
pop
xchg
sub
lret
jmp
psrld
jecxz
cwtl
sub
sub
inc
push
mov
fsts
adc
xor
cmpsl
outsl
mov
cld
mov
push
aam
inc
clc
outsl
pop
sti
fists
xor
out
cmp
lea
dec
cmpsb
inc
jbe
mov
cmp
mov
pop
xor
int
fstps
sbb
dec
jmp
add
adc
jb
lock
int3
mov
cmp
pushf
mov
cltd
mov
jns
mov
adc
int3
test
fbstp
or
or
icebp
out
testl
orl
mull
pop
clc
fnstenv
fs
test
pusha
xor
popa
mov
gs
add
adc
and
pop
cmc
mov
movsl
mov
pop
test
mov
pop
dec
mull
pop
imul
mov
inc
and
jp
jecxz
popa
push
aam
xor
mov
leave
cwtl
sub
gs
inc
push
push
sub
stos
mov
data16
cmp
enter
fwait
mov
sbb
pop
in
scas
lcall
mov
jnp
inc
pop
jmp
mov
nop
aaa
dec
jnp
imul
and
movsb
sbbl
leave
xchg
cmc
pop
jns
sub
pushf
mov
push
andl
cli
or
xor
lods
movsl
cmpsl
mov
push
nop
xor
aaa
js
lods
mov
push
cltd
ror
inc
adc
pop
lahf
adc
jns
out
xor
adc
pop
and
ja
adc
test
add
in
imul
dec
add
loopne
lret
negb
mov
faddl
in
xchg
jbe
sub
iret
mov
insb
jmp
fsubs
adc
dec
pushf
sbbl
insl
cmpl
test
sbb
cmp
mov
push
mov
iret
mov
pop
repz
ss
imul
fdivp
push
adc
insl
ss
dec
mov
test
andl
and
test
test
imul
cltd
cmp
pcmpeqd
mov
fcoms
mov
mov
dec
insb
out
gs
aaa
push
lock
ss
push
rcrl
sti
call
mov
xor
mov
and
mov
sub
out
in
xchg
and
mov
pushl
sub
loop
decb
cwtl
or
call
rcr
rcll
das
xchg
outsl
add
clc
jno
mov
scas
adc
adc
popa
idiv
xchg
mov
push
mov
aas
aad
lahf
xor
fidivs
ljmp
xchg
push
aad
repnz
insb
addr16
jns
lret
pop
add
ret
sbb
sbb
pop
add
dec
xor
std
mov
inc
and
in
gs
pop
mov
sbb
mov
cmp
pop
inc
enter
and
pop
inc
std
cld
mov
data16
and
cmp
daa
gs
mov
sbb
jbe
sbb
rclb
lds
aaa
and
pop
add
pop
cmpxchg
data16
add
sub
punpckldq
gs
repnz
mov
test
decb
cld
leave
aaa
xor
xor
add
leave
mov
and
push
or
mov
inc
mov
mov
xor
std
xor
call
inc
lret
jns
push
cwtl
add
xchg
adc
push
xchg
fistl
dec
inc
sbb
and
sbb
adc
pop
pusha
cmp
add
sub
repnz
sub
cmc
jge
mov
es
leave
frstor
push
cmp
push
inc
rcll
lcall
clc
xchg
cmpsb
cmp
ret
push
dec
dec
mov
push
jle
xlat
ljmp
scas
xchg
xlat
xor
jnp
scas
insl
in
iret
test
popf
jle
mov
xor
mov
push
dec
xlat
mov
xlat
mov
inc
jno
mov
or
sahf
cmp
cwtl
decb
adc
or
sub
les
add
and
or
push
push
fistpll
adc
out
jns
loop
leave
in
xlat
out
addr16
bound
adc
xchg
sbb
or
movsl
xchg
stos
cltd
sti
mov
fldl
mov
or
push
mov
or
mov
dec
ljmp
adc
bound
into
pusha
in
pop
push
add
xchg
inc
sbb
sbb
mov
movsb
enter
mov
and
or
push
mov
push
out
insl
xchg
fwait
push
into
aaa
bswap
fistpl
in
sub
in
into
xchg
dec
arpl
fildll
fwait
sahf
shrl
inc
mov
jmp
add
test
loopne
xchg
xchg
adc
sbb
test
out
mov
xor
sbb
nop
gs
pop
ljmp
cmp
lods
leave
inc
xor
je
and
test
and
push
ss
stos
rorb
add
arpl
shr
shl
stos
into
push
xor
clc
push
pop
decb
bound
sbb
hlt
pop
inc
xor
aas
mov
sub
jo
mov
shlb
dec
xchg
or
xchg
loope
mov
out
cmp
push
add
fwait
mov
pushf
int
bound
popa
into
or
clc
add
inc
imul
add
jmp
mov
rorb
xor
push
mov
xchg
mov
sbb
mov
sbb
xchg
jle
mov
sbb
inc
js
pop
sbb
rcr
leave
leave
dec
loopne
mov
adc
sarl
add
addr16
jae
dec
pop
nop
ss
mov
clc
push
mov
bound
xchg
aaa
or
mov
adcb
popa
call
and
cmp
push
mov
push
mov
mov
daa
pop
stc
in
add
in
les
mov
inc
in
insb
xchg
push
sbb
cmpsl
sub
aaa
push
loopne
cs
xor
xchg
out
bound
xor
adcl
add
les
insb
add
pop
push
popa
sub
pop
pushw
or
push
pusha
into
adc
mov
xchg
fdivrp
rclb
jg
hlt
sti
lods
add
lods
mov
pop
adc
ja
add
mov
mov
fs
adc
xlat
inc
sub
adc
scas
dec
jns
mov
lret
inc
lea
mov
xor
xor
sub
xchg
and
dec
shrb
insb
dec
iret
adc
leave
icebp
adc
jae
xorl
je
iret
scas
js
stos
add
and
lret
mov
adc
pop
add
lahf
stos
dec
push
movsl
repnz
clc
dec
dec
bnd
xchg
pop
dec
int
fiaddl
push
sbb
mov
mov
push
in
out
sub
orb
sbb
out
je
push
fdivl
push
dec
push
js
imul
sbb
dec
adc
int3
xlat
or
push
sub
movb
lods
dec
adc
mov
bswap
pop
mov
mov
add
inc
aad
pop
dec
jp
cmp
jae
or
ds
push
popf
inc
mov
hlt
push
mov
sarl
fadds
pop
lods
setb
sbb
call
test
ss
aas
lcall
ret
lcall
sub
jo
shlb
movsl
in
repnz
in
jb
mov
fisubrl
negb
repz
aas
addr16
xchg
mov
cmpsl
shlb
shrb
adc
into
dec
mov
test
mov
adc
pop
clc
loope
jecxz
add
pop
in
cmc
sub
pop
mov
ja
into
lock
add
jo
xchg
int3
cmp
dec
inc
aas
sbb
fldl
cmp
mov
xchg
cmc
pop
mov
pushf
jo
push
xchg
inc
lret
outsl
sbb
xchg
lcall
test
mov
xchg
xchg
fidivl
and
fs
orb
jp
xor
cltd
jnp
pop
push
mov
mov
jl
lds
jno
iret
or
jae
into
mov
fs
iret
adc
in
outsl
enter
push
in
int3
in
loopne
rolb
and
lods
sbb
mov
pop
js
dec
je
ret
jp
mov
sbb
cld
or
or
pop
nop
flds
pop
xchg
fistpll
movsl
jno
xchg
or
sti
and
pop
ja
jge
jnp
sub
fwait
loop
mul
xchg
repnz
popa
push
adc
lcall
sub
sahf
icebp
and
or
sbb
or
cmp
and
add
sbb
ffreep
dec
and
or
xor
sbb
pop
mov
jl
sub
pop
jmp
push
ja
xchg
pop
push
loope
and
dec
fsubs
fsubl
out
and
push
or
into
dec
push
adc
loopne
mov
test
fbld
call
les
daa
jl
fiaddl
mov
stos
dec
test
int3
or
shrl
aaa
cld
pop
rcll
rcrl
loope
sub
pop
aad
adc
xor
lock
aaa
movsb
loop
in
adc
mov
cli
mov
call
das
jb
jecxz
jns
insl
sbb
lock
in
in
fnsave
aad
leave
cmp
lret
mov
jae
jns
lock
stos
fwait
mov
and
lcall
cwtl
loop
mov
cmp
push
std
dec
push
xor
enter
xlat
adc
dec
jg
push
stc
xchg
ror
scas
mov
push
push
cltd
notb
in
btr
cmp
and
mov
xchg
sbb
xor
jg
mov
xchg
pushf
mov
pop
xor
push
clc
fcmovnb
test
les
xor
movsb
cmp
inc
lods
jle
into
mov
scas
hlt
stc
or
push
pusha
and
jle
lods
and
inc
cmp
je
dec
scas
mov
xor
mov
mov
out
test
int
inc
push
add
dec
les
call
imul
lahf
and
leave
in
fiadds
push
sbb
std
and
and
movsb
imul
test
mov
in
pop
fisubs
int3
mov
flds
mov
adc
mov
push
dec
mov
jg
mov
cld
mov
mov
xchg
mov
xchg
jp
lahf
jae
cltd
fnstcw
inc
sub
mov
cmp
pop
inc
mov
daa
es
jae
xchg
sub
outsl
cmp
es
dec
mov
mov
lcall
or
and
sbb
and
pop
rclb
cmpsb
mov
addl
lret
or
sbb
stos
dec
repz
sub
add
ret
inc
sbb
add
ljmp
mov
or
loopne
test
sub
and
and
or
dec
fisubs
xchg
cmpl
loopne
ss
lea
enter
mov
cmp
outsl
aas
jg
rcll
xchg
imulb
in
inc
or
sbb
rorl
imul
jno
aam
rorb
xor
lcall
in
push
imul
mov
jecxz
and
cmpsl
push
dec
sub
std
mov
mov
pop
dec
ret
aas
test
scas
dec
adc
popa
pop
sarb
xchg
iret
jo
cmc
sbb
mov
jle
adc
cli
add
ret
int
cli
dec
test
enter
push
mov
out
add
sahf
sub
lahf
sub
subb
into
imul
pop
mov
jns
leave
decb
sbb
jmp
mov
push
fldt
ljmp
fnstcw
mov
jne
jge
mov
mov
sub
cmpsb
popa
nop
shlb
scas
sub
negb
ds
in
sbb
mov
xchg
sbb
adc
push
int3
das
push
jmp
dec
add
dec
xchg
pop
cmp
scas
push
bnd
xchg
mov
lods
mov
sub
jo
cmp
mov
out
add
push
or
add
mov
adc
inc
jnp
jl
mov
enter
or
sbb
pop
adc
movsb
mov
dec
jl
push
pop
xchg
adc
imul
shlb
inc
cmp
mov
sbb
adc
testb
addr16
push
cmc
inc
and
xor
jg
dec
mov
mov
push
sub
in
fistl
mov
dec
dec
jae
fisubrl
mov
aaa
mov
addr16
mov
test
sbb
and
testb
or
rdpmc
leave
jne
adc
inc
pop
jbe
mov
aaa
repnz
pop
push
push
idivb
mov
imul
stc
gs
add
es
pop
shrl
adc
inc
mov
mov
xchg
add
dec
mov
sahf
inc
xchg
add
loop
aam
or
dec
bound
dec
shlb
fdivrl
inc
insl
mov
pop
fs
cmp
fsubrs
adc
cmp
out
xchg
sbb
lea
mov
lea
filds
inc
push
dec
jnp
sub
lahf
mov
mov
ss
mov
out
cs
mov
fcomps
ds
mov
add
shrl
lret
xor
in
icebp
xor
fiaddl
cmp
add
and
sbb
sbb
stos
imul
or
cwtl
popf
jb
and
popa
mov
adc
fsubrs
test
std
sbb
orl
ret
pop
aaa
sbb
mov
and
dec
daa
cltd
mov
outsb
jno
out
loopne
xor
fucompp
test
jmp
scas
fimuls
leave
xor
push
std
fiaddl
sub
sbb
gs
xor
or
mov
mov
or
int
ljmp
pop
inc
adc
cli
mov
push
out
pop
mov
sbbb
push
mov
lea
iret
mov
and
mov
xor
fwait
sub
mov
mov
mov
inc
mov
mov
js
or
jb
xchg
nop
scas
jl
adc
push
xor
mov
fs
sbb
push
popf
rcrb
cmpsb
adc
je
mov
scas
repnz
imul
lcall
xchg
addb
shlb
adc
negl
mov
inc
mov
xchg
int
push
add
cs
int
cmpsl
mov
pop
mov
insb
inc
repz
lret
sbb
inc
and
jae
mov
sahf
repz
mov
in
dec
daa
push
ret
add
sbb
pop
insb
mov
imull
or
ret
rclb
jl
xchg
jno
daa
and
mov
push
movsl
mov
push
mov
pop
sub
adc
call
or
cltd
loop
and
jbe
cmp
aad
cmp
shrb
xchg
pop
xchg
leave
jmp
dec
in
mov
pop
insl
mov
enter
dec
sub
int3
shlb
inc
scas
sahf
negb
sub
push
cmp
or
daa
jnp
shll
sti
faddl
arpl
fsubrl
xchg
andb
arpl
fsubl
lods
in
sbb
xor
xor
fcompl
cmp
mov
stos
adc
sbb
and
mov
xor
repnz
pop
mov
ja
add
dec
push
in
leave
xchg
std
mov
push
fcmovne
into
daa
xchg
nop
cld
dec
aad
hlt
mov
mov
dec
ret
out
stos
dec
mov
rcr
sti
adc
mull
lock
int3
sub
out
mov
mov
pop
mov
cltd
xchg
adc
std
xor
xchg
repnz
aaa
mov
in
imulb
pop
xor
das
fs
divl
shlb
aaa
ss
xor
cmp
imul
out
jp
movsl
push
jle
add
and
cltd
in
bound
inc
loope
cmpb
gs
sbb
and
sbb
sub
movsl
pushf
add
inc
das
push
mov
xchg
push
clc
movsl
mov
fdivs
je
xor
ret
mov
mov
jecxz
cwtl
sub
out
cld
hlt
rcrl
fistps
int
loopne
xor
shll
lret
bnd
add
pop
mov
loop
mov
mov
add
into
loopne
pop
cmp
rclb
bts
loopne
ss
jns
pop
mov
mov
inc
repnz
out
mov
dec
push
mov
dec
lahf
push
loopnew
cmpsb
cmpsl
push
inc
mov
inc
add
push
cld
imul
shll
xchg
mov
cli
aad
jb
sti
in
clc
int3
xchg
jae
xchg
rorl
or
sub
es
pop
ret
push
sarb
lds
and
inc
fwait
mov
icebp
cmp
cmp
mov
fwait
push
push
cmpl
and
mov
stos
ljmp
dec
ret
daa
add
imulb
jnp
sub
gs
pop
out
xor
push
cmpsl
xchg
push
int
mov
inc
jns
push
dec
mov
subl
arpl
pusha
jecxz
test
stos
data16
pop
or
stos
jmp
shlb
stc
cmp
mov
sbbl
cmc
les
inc
enter
ss
gs
sub
in
add
cmpsl
pop
xchg
lods
pusha
cmp
and
aam
arpl
pushf
lret
mov
cmp
lods
dec
or
aas
xor
jne
and
mov
cmovno
mov
ret
dec
aam
dec
out
js
xchg
dec
jl
out
add
cmc
mov
sub
ret
or
mov
jle
xor
aam
popa
and
push
cmc
mov
sub
sbb
jno
stos
mov
lods
lock
enter
lahf
lds
cmp
aaa
xor
or
scas
movsb
divl
faddl
sub
je
nop
push
and
leave
dec
cmp
xchg
mov
cli
outsl
aad
xchg
jno
jo
xor
jne
cmp
popa
mov
or
call
mov
xchg
addb
dec
mov
cmpb
arpl
in
testl
rcr
pop
sahf
lret
xor
aad
and
imul
xlat
rep
sub
out
mov
adcl
dec
dec
cmp
int3
mov
test
incb
or
pop
sub
negb
mov
sbb
add
push
push
push
scas
imul
add
add
int
pop
lahf
mov
scas
inc
fwait
mov
pop
push
and
xchg
cltd
dec
dec
cs
insb
shl
cmp
mov
or
test
jbe
lods
jae
mov
mov
ja
xchg
pop
faddl
and
mov
cmp
jmp
pop
sub
lods
jb
ljmp
scas
xchg
aas
aam
inc
dec
xor
fnstsw
mov
sarl
pop
arpl
push
xor
rcrb
dec
or
and
call
and
and
data16
ljmp
jo
add
fsubs
ds
or
cmp
jge
mov
faddp
jb
ret
jns
push
xor
ret
stos
es
pop
popa
push
add
outsb
pushf
mov
push
ret
lret
js
addr16
or
pop
rorl
sti
mov
mov
jae
stc
push
jo
lea
rorl
cmp
mov
fcmovu
test
mov
pop
outsl
filds
xlat
js
rol
push
sub
add
mov
dec
jno
shlb
mov
fsubs
mov
es
xlat
out
dec
ucomiss
pop
out
lea
jecxz
jg
mov
mov
insl
sbb
mov
push
and
shlb
adc
mov
nop
xchg
jns
jne
fisubrl
or
lea
fisubl
pushf
adc
sar
pop
pop
push
hlt
push
sti
lret
scas
or
push
add
jp
fldcw
inc
repnz
sbb
sub
aad
xchg
inc
ret
hlt
fbstp
pop
lock
adc
adc
ret
mov
out
push
jne
imul
push
outsb
xor
hlt
out
mov
inc
xorb
mov
pop
xchg
dec
clc
pop
mov
bound
lret
pop
xchg
dec
aaa
and
push
mov
test
xchg
lods
jmp
mov
outsl
adc
hlt
xchg
mov
sbb
or
test
pcmpgtb
fmul
dec
mov
or
out
adc
lds
arpl
stos
pop
add
stc
pop
lret
jmp
repz
fst
xlat
add
addr16
dec
add
mov
and
arpl
lret
scas
pop
sarl
inc
nop
adcl
xor
pop
jl
mov
shr
mov
cmp
pop
test
mov
icebp
gs
and
xor
shll
inc
data16
adc
jne
xchg
out
sub
mov
add
in
aam
push
push
and
mov
inc
push
jl
into
pusha
cltd
in
sarb
push
addr16
or
in
ss
inc
and
jl
and
aad
push
jns
outsl
and
mov
push
decl
loop
aam
and
jp
or
push
jp
daa
sbb
push
inc
push
into
or
xchg
test
sbb
outsb
js
inc
bound
je
cmp
aad
dec
mov
sub
pop
mov
inc
xor
adc
test
cmp
je
sbb
mov
orb
add
dec
in
xchg
fs
shll
aam
xor
cmp
ret
jmp
inc
fcoms
movb
or
sub
or
inc
lcall
add
pop
into
xchg
pop
shrb
push
lods
rcll
or
dec
sbb
xchg
sbb
lret
lods
aam
xor
lods
std
lods
xchg
xchg
xchg
lea
lods
repz
sub
dec
mov
lea
popf
pop
loop
add
adc
ds
pop
xlat
sbb
jg
cmp
lret
imul
hlt
jb,pt
daa
inc
lcall
mov
pop
dec
inc
or
mov
es
or
dec
sarb
imul
cmpsl
sub
mov
int3
aad
data16
dec
jg
fisubl
mov
add
adc
push
mov
sar
sub
iret
pop
enter
and
and
adc
lods
dec
cmp
shl
dec
inc
pop
out
or
push
out
mov
pop
sbb
test
xchg
push
mov
bound
scas
lock
push
fldpi
and
mov
cvtpi2ps
jno
rep
mov
pop
xor
add
mov
subb
sbb
sub
lods
push
testl
sbb
add
js
push
cmp
in
or
pushf
xor
adcb
imul
cld
and
ret
sbb
xlat
rolb
subb
hlt
xor
shlb
xlat
mov
clc
shl
pop
ljmp
sub
mov
mov
xchg
push
or
adc
dec
aas
inc
sti
lds
jb
push
push
jbe
sti
out
lds
ret
xor
mov
call
push
cli
hlt
pop
sub
inc
lret
clc
adc
pop
xor
pop
xor
cmp
add
dec
jns
push
inc
jb
bound
fisubrl
scas
cli
rclb
pop
pop
sbb
test
stos
pushw
pop
inc
xchg
subb
push
int3
in
cld
xorl
test
or
add
mov
inc
adc
imul
pop
push
or
pop
push
or
pop
xor
mov
sub
stos
adc
jmp
ficompl
hlt
cmc
mov
lods
scas
pop
mov
and
insb
lret
icebp
add
adc
push
and
sbb
outsb
jae
pop
jl
test
xor
sub
or
or
aam
mov
dec
jns
lock
mov
mov
repnz
mov
outsb
jge
data16
mov
cmpl
loop
mov
and
and
xchg
sub
mov
test
xor
sbb
fsubrs
dec
cmp
pop
xchg
cltd
push
or
pop
cmpsl
and
cmp
sub
popf
sub
dec
ds
cld
xor
push
sub
xor
divb
out
out
js
ror
lock
aas
xchg
out
pusha
es
movsb
sbb
mov
sbb
inc
xchg
stos
mov
inc
popf
pop
test
mov
xorl
out
inc
xchg
daa
in
xor
ret
jge
dec
int3
xchg
add
dec
repnz
and
pop
mov
xchg
scas
adc
fldcw
push
int3
push
popf
push
push
jo
cmpsl
ss
cld
icebp
imul
clc
inc
push
aad
insl
inc
adc
stos
inc
cmc
arpl
adc
sub
jnp
or
jmp
int
xor
rorl
lret
loopne
sti
test
xchg
fwait
and
nop
cmp
jp
inc
or
in
inc
jmp
addb
pop
jl
mov
inc
add
mov
xchg
les
xchg
dec
cs
push
addr16
cwtl
cli
dec
adc
jb
cs
mov
add
mov
ja
call
out
ret
shr
pop
cwtl
push
jmp
adc
mov
mov
mov
add
in
xor
mov
inc
jns
insb
push
jb
cmpsl
mov
pop
inc
xor
ret
mov
js
ss
cmp
xor
add
lods
test
cmpl
cmpsb
call
mov
cmpsb
adc
cli
into
insb
pop
fsubr
inc
or
push
sbb
add
dec
lret
lahf
scas
bnd
test
scas
in
xchg
popf
mov
nop
mov
les
mov
jnp
pop
adc
cmp
push
je
add
in
mov
cmp
es
jge
movsb
xor
push
pushf
inc
or
xchg
push
mov
jne
pusha
addl
cmp
add
add
enter
xchg
aam
inc
lret
xor
pop
push
add
mov
sbb
in
jl
mov
cs
mov
pop
cmpsl
aad
aam
adc
add
addr16
xchg
js
xor
pop
pushf
insl
and
push
dec
shlb
mov
push
add
loopne
and
leave
lcall
xlat
adc
mov
sbb
adc
pop
dec
out
mov
jb
sub
pusha
imul
imul
rorl
xchg
add
out
jle
push
in
add
daa
adc
das
xchg
jmp
cli
add
jmp
rorl
outsl
sub
inc
mov
cmp
sbbl
pop
mov
imul
iret
and
xchg
pop
mov
insb
dec
mov
subb
sarb
or
xchg
mov
xchg
inc
mov
sub
and
lods
xchg
cli
jg
push
out
push
adc
xchg
mov
pop
mov
repnz
fldl
test
in
xchg
xchg
lcall
fcmovnb
xchg
sub
add
mov
adc
int3
dec
sbb
lods
push
sub
and
dec
roll
xchg
cmp
xlat
xchg
cli
cmp
insb
test
sti
xor
adc
into
mov
in
in
adc
xchg
sbb
add
sbb
mov
popf
in
sarl
xchg
xchg
fsub
or
mov
lret
fbld
push
cltd
mov
mov
dec
pusha
orl
frstor
mov
hlt
inc
sbb
push
pop
or
xor
mov
push
fmuls
mov
sbb
xlat
jge
shlb
push
adc
cs
outsb
push
test
leave
xlat
lds
outsb
sbb
mov
pop
dec
cmpb
pop
lret
lret
jg
pop
cs
mov
mov
bound
mov
jo
push
enter
shlb
insl
or
add
rorb
jns
jecxz
ss
enter
xorb
mov
mov
mull
addr16
xsha256
cmpsb
aad
xor
sbb
sbbb
movsb
in
bound
lds
push
or
jb
adc
into
sub
loopne
in
cwtl
add
out
cwtl
sbb
fistl
repnz
mov
xchg
stos
sti
test
sbb
jbe
notl
fcmovnu
mov
scas
or
mov
and
mov
inc
arpl
ja
jo
fcmovnu
std
clc
adc
lahf
sbb
aaa
jp
and
adc
stc
addr16
inc
int
cmpsl
das
pop
adc
les
enter
addr16
clc
xchg
xchg
fidivs
mov
push
adc
ffree
fwait
mov
stc
xchg
push
in
mov
or
xlat
xchg
mov
je
int3
scas
push
aad
cmp
outsl
test
arpl
jmp
hlt
mov
mov
std
outsb
xchg
xchg
cmp
or
movsl
testl
in
test
xchg
sub
xor
jb
jl
outsl
mov
or
dec
fadds
jecxz
icebp
xor
xchg
pushf
imul
jo
insb
outsl
mov
int3
fs
ds
xor
lods
pop
in
mov
test
loope
lcall
push
mov
jo
shll
dec
inc
imul
data16
cwtl
dec
inc
sti
loope
lret
pop
in
rcrl
addl
jae
mov
pop
arpl
test
xor
cmp
cld
sub
cmp
aad
xchg
enter
les
in
xlat
xlat
test
sahf
stos
inc
mov
inc
or
xchg
out
movsb
das
fsubr
pop
pop
add
push
sbb
jl
mov
sahf
inc
outsb
gs
jecxz
orb
pop
pop
fsubr
pop
push
mov
dec
xchg
xchg
imul
in
fnstenv
xchg
sbb
adc
scas
sbbb
arpl
mov
aaa
xlat
mov
mov
push
or
test
sbb
stc
mov
sub
push
and
cmp
inc
mov
push
or
push
mov
jg
je
mov
aaa
sbb
dec
aas
and
cltd
repz
jbe
pop
mov
sahf
pop
dec
fldcw
xlat
or
sub
jge
nop
or
outsl
lcall
mov
pop
xchg
jmp
xor
sbb
imul
lods
inc
push
loope
push
call
pop
cmc
mov
enter
mov
ja
lret
sbbb
fstpl
inc
mov
lods
call
sbb
add
js
call
aam
cld
push
aad
pop
jp
mov
push
adcb
cmc
in
sub
add
cmp
dec
pop
and
iret
xor
dec
dec
sub
push
xor
int3
jl
stc
pop
pushf
movsl
shll
mov
test
icebp
or
ss
aaa
push
or
mov
adcb
mov
cmpsl
pop
push
xor
aas
fstl
sbb
std
loopne
dec
dec
sub
filds
insb
add
add
mov
mov
js
inc
sbb
adc
repz
jg
fcompl
fmulp
xor
push
jo
lea
mov
ret
je
lcall
ds
int3
sbb
cltd
sub
mov
decb
pop
loop
cmp
ss
push
mov
fstl
mov
dec
dec
add
mov
mov
testl
push
sbb
push
int
jmp
add
mov
aam
jg
adc
lret
mov
xchg
pushf
push
mov
roll
add
xorb
out
push
pop
push
mov
adc
push
js
jo
scas
xor
sahf
cmp
jns
or
xchg
rcr
dec
and
stos
aas
js
jp
push
test
jbe
lcall
and
daa
into
test
pop
clc
sahf
push
mov
clc
jno
shrb
mov
push
xchg
sti
xchg
sarl
in
or
or
ficompl
and
pop
sbb
mov
fsubr
dec
es
cmpsl
jns
mov
cmpsb
andb
sbb
adc
jns
clc
dec
aam
bound
movsb
js
sbb
in
fisubrs
stos
les
into
iret
adc
inc
arpl
hlt
push
test
sub
shlb
mov
bound
push
repnz
jmp
mov
mov
xor
push
add
xor
cmp
cli
jae
dec
cmc
orb
pop
add
and
xor
ljmp
add
sbb
sub
fcompl
mov
mov
loopne
aam
call
push
fs
mov
iret
inc
or
xchg
pop
cmp
rorl
aaa
pop
inc
pop
mov
xchg
mov
pop
jne
cmp
loop
inc
gs
pop
add
pop
add
jnp
and
sub
fidivl
cmpsb
ds
inc
fsubs
cltd
pop
inc
sub
push
jge
dec
fistpll
in
inc
movsb
lea
sti
mov
adcb
mov
push
xchg
adc
in
sub
xor
gs
ss
and
mov
psrlq
adc
rcrb
aad
dec
xor
insb
test
push
rcrb
cmp
sbb
cmpsl
jb
iret
xor
xlat
scas
xor
or
xchg
shll
xchg
mov
mov
and
jo
and
cli
xor
fdivrl
lahf
outsb
lods
scas
lcall
jg
adc
pusha
movsl
fldenv
jb
dec
add
fstl
test
jb
cli
jmp
pop
call
enter
cmp
fcos
mov
xchg
pop
xor
jne
pop
add
push
mov
mov
sub
or
cli
idivl
or
mov
or
test
mov
aas
inc
mov
shlb
xchg
popa
or
adc
lcall
test
mov
movsb
negb
push
aaa
loopne
je
icebp
inc
and
and
xchg
mov
inc
push
fbld
loop
xlat
and
fisubrl
push
aas
inc
cmpsb
add
sbb
jg
ss
push
push
push
push
mov
mov
stc
push
scas
xor
xchg
mov
or
and
aam
push
sbb
data16
ret
lock
repnz
xor
fs
pop
rcrl
mov
adc
je
push
add
jnp
mov
or
and
and
lds
insl
mov
popf
outsl
adc
xor
mov
scas
xor
or
andl
pop
hlt
cmp
sbb
aam
mov
lret
xor
mov
jmp
ficompl
arpl
add
pop
xchg
int
imull
dec
push
dec
jle
mov
test
clc
or
into
push
mov
mov
push
in
sarb
movsb
push
aam
ficoml
in
sub
mov
dec
into
pushf
and
jns
rcll
aaa
negb
mulb
loopne
popf
das
push
lahf
inc
dec
push
mov
mov
mov
and
add
and
sarb
mov
js
jp
pusha
sub
rcrl
cmpsl
arpl
or
jns
cmp
inc
mov
sub
loop
incl
fiadds
xor
push
aam
cld
jbe
adc
ret
dec
mov
mov
jne
cmpsl
pushl
xchg
or
imulb
inc
xchg
jns
jo
lret
in
loop
aad
push
rcr
push
jle
add
or
test
sarb
ficompl
push
loop
pop
ljmp
negb
fwait
dec
out
popa
add
js
add
ds
stc
jo
notb
add
or
push
sub
add
pop
sbb
or
mov
dec
popf
cs
mov
sbb
stc
sub
lret
cli
sahf
ljmp
jmp
pop
je
sarl
hlt
push
jmp
test
in
inc
loopne
cmp
pop
xchg
push
mov
pop
mov
lods
xor
push
lret
cmp
mov
rorl
push
cmp
xor
lock
clc
idivl
lds
mov
fcomip
stos
pop
push
xchg
xor
jne
ds
and
dec
adc
sub
scas
jge
dec
fmull
sub
push
xchg
cltd
mov
movsb
dec
mov
scas
adc
ja
lret
mov
fwait
mov
nop
lcall
jecxz
adcb
xchg
mull
mov
inc
jge
adc
jb
ficoml
inc
pop
outsb
sub
hlt
mov
and
mov
cmp
lods
mov
push
and
iret
fistpll
call
add
out
lahf
sbb
popf
pop
loopne
rorl
push
in
sub
push
or
fcmovbe
aaa
dec
sub
movsb
add
cmp
ljmp
sbb
and
dec
imul
cmp
in
inc
jb
mov
aad
es
pop
pop
and
push
mov
mov
sub
and
mov
sub
inc
xor
pop
imul
imul
popf
push
out
jl
mov
xlat
jno
xchg
sbb
or
inc
dec
out
cmp
or
std
cld
cmp
push
inc
lods
xchg
sti
jne
cli
dec
push
jae
add
adc
dec
push
sub
ret
test
enter
adc
aam
mov
je
leave
in
movsb
std
ficomps
mov
arpl
es
push
ret
xor
push
ret
es
cmpsl
cmp
xchg
fs
cmp
das
jg
sarb
stc
into
pop
xchg
sbb
movsb
jl
insb
mov
add
ret
repnz
hlt
xchg
fdivrl
into
jb
or
adc
dec
add
cli
jno
cmp
scas
std
push
and
inc
push
aas
aam
out
loope
xor
test
cltd
mov
jecxz
push
lock
insl
push
les
push
decb
aaa
cmp
lcall
jle
mov
and
xorb
push
inc
lret
jno
scas
fsubrl
cmpsb
test
outsb
fcoml
rorb
popa
ljmp
and
jg
sbb
push
bound
inc
fdiv
xor
in
cmp
popa
push
ret
xchg
jns
and
jmp
daa
sub
cmp
roll
xor
das
dec
mov
lods
xor
xor
xor
inc
cltd
sub
sub
into
mov
push
bound
inc
mov
mov
dec
lahf
stos
dec
push
jae
adc
dec
data16
fstpt
call
add
icebp
cld
in
or
xchg
xor
jp
jge
or
enter
pop
xor
mov
pop
nop
movb
dec
add
add
lcall
mov
sub
js
add
push
push
ret
mov
push
repnz
add
pop
fwait
sbb
jg
setns
xchg
in
pop
xor
insb
fnstenv
in
loop
inc
push
adc
push
mov
insl
mov
add
sub
xor
cmc
nop
bound
dec
sahf
mov
testb
lock
ficoml
fwait
movsb
nop
lret
jne
jno
add
out
adc
je
mov
call
mov
decl
out
rcll
sub
sarl
mov
mov
xor
out
pop
cmp
sub
jl
shll
mov
pusha
add
ret
mov
lock
lock
movsl
adc
pop
dec
inc
sub
fisttpl
mov
inc
mov
shrb
je
outsb
cld
cwtl
push
cli
cmp
dec
sub
mov
addr16
xchg
xor
imul
repnz
incb
iret
movsb
repz
inc
add
lahf
ret
dec
loop
push
cmp
jb
push
push
mov
or
and
mov
iret
jg
pop
lret
fs
fsubrs
cli
fnstsw
not
in
sub
and
loop
adc
cmp
sbb
iret
add
es
xchg
inc
test
and
jb
dec
mov
jmp
push
cmp
push
popa
in
das
femms
rol
add
fists
pushf
add
jns
xchg
mov
jle
aaa
das
mov
mov
pusha
mov
mov
mov
pop
push
jns
js
loope
sbb
add
xchg
push
mov
out
and
fbstp
out
les
stos
dec
xchg
sahf
or
lret
test
lret
adc
add
sub
psadbw
add
xchg
cmp
jmp
movsb
das
pop
fsts
and
jns
mov
pop
call
push
mov
das
pusha
shr
insl
ss
das
out
inc
add
and
add
xor
iret
lret
loopne
or
jecxz
mov
std
leave
ret
ja
push
cli
pop
sbb
jge
mov
dec
lods
mov
mov
aad
cmp
ficoms
or
push
popl
pop
lret
cmp
add
xchg
or
out
js
scas
cld
dec
mov
sub
out
std
xchg
test
add
mov
cmp
mov
mov
or
loope
cmp
adc
xchg
cmp
push
or
xchg
xor
or
popf
cltd
jg
fwait
rcl
imul
pop
mov
ffreep
fucom
adc
rol
hlt
xchg
mov
sub
inc
sub
popl
pop
adc
lods
pop
adc
pop
and
daa
jbe
mov
add
int
or
nop
sbb
addl
ds
out
inc
sbb
arpl
int
fbld
xchg
mov
sti
out
inc
push
mov
dec
cmc
imul
mov
pop
mov
xorb
adc
or
pushf
or
je
xor
lahf
mov
cmp
push
nop
aaa
shrb
mov
jecxz
aaa
es
mov
rcrb
js
ja
mov
mov
jb
sub
pop
xchg
adc
jne
fildll
sbb
or
subb
pop
adc
mov
push
inc
mov
aam
sbb
iret
cmp
les
sbb
push
push
out
outsl
lret
push
into
clc
pop
fpatan
fmulp
pop
xchg
testl
or
cmp
lret
addr16
dec
push
movsl
cmpsl
push
cld
cmp
mov
outsl
lods
in
sub
pop
imul
add
or
inc
pop
stc
lret
push
out
xor
nop
or
xchg
cmp
xlat
in
iret
inc
stc
add
stc
push
cld
mov
xor
ljmp
hlt
xchg
mov
mov
mov
in
mov
jmp
decl
sub
jecxz
sbb
aas
and
mov
mov
jg
xchg
adc
shl
in
xchg
nop
adc
jb
test
mov
jg
add
stos
andb
inc
cmp
sbb
cmp
mov
xlat
test
in
jae
sbb
mov
add
cmc
sub
push
cld
popa
sti
jle
push
add
mov
pop
lods
xchg
out
cmc
daa
mov
xor
sub
or
lret
and
xor
aas
mov
xchg
fsub
adc
adc
jae
fidivrl
shll
call
mov
sbb
jmp
dec
rcrb
inc
xor
mov
clc
bound
int3
xor
inc
gs
xor
and
xchg
dec
cli
in
shl
mov
push
loopne
into
add
jg
push
cmp
and
clc
iret
sbb
sbb
arpl
xchg
lcall
jle
jl
int3
xchg
aaa
cmp
cmpsb
shrb
mov
or
pop
sahf
mov
bound
pop
push
call
sub
fcomp
pusha
pop
bnd
mov
push
or
sbb
cmpsl
push
testl
cld
sub
aad
add
fcoms
adc
jnp
cmp
fsubr
inc
popa
icebp
inc
jae
adc
int
out
mov
fbld
pop
outsb
loopne
adc
inc
xchg
push
lds
das
inc
stos
ret
lds
add
xor
push
inc
jno
adc
frstor
stos
aam
mov
push
fstl
outsl
icebp
mov
dec
paddd
cmpl
rorb
cmp
out
xor
nop
xchg
lcall
cmpsl
mov
or
pop
mov
outsb
cli
jmp
push
mov
push
aas
cli
inc
jp
xor
or
xor
xchg
mov
dec
sar
mov
das
xchg
rorb
fucom
outsb
pop
imul
push
push
lcall
popa
pop
inc
xchg
sbb
fs
or
je
nop
std
lcall
std
xchg
sbb
add
fidivrs
mov
ss
mov
out
mov
lret
sbb
ds
test
inc
xor
push
andb
scas
stc
sub
xchg
cmp
arpl
pop
sbb
adc
push
loope
xor
pop
jl
mov
xchg
pop
and
xor
or
add
jp
add
and
jb
adc
add
jmp
subl
xor
adc
adc
xchg
mov
icebp
xor
and
pop
pop
stc
ret
shll
jle
pop
rcll
ljmp
xchg
ret
dec
enter
ljmp
sub
jmp
cmp
mov
movsb
adc
mov
pop
sub
sbb
mov
or
adc
inc
pop
inc
nop
sub
xor
fs
and
adc
test
sub
sub
push
cwtl
int3
cmp
jno
add
or
imul
inc
inc
aam
sbb
push
sub
dec
test
fisubrs
xchg
xor
in
es
lcall
mov
mov
call
pop
lods
pop
add
jl
cmp
pop
out
mov
jmp
xor
movsb
loop
fs
or
call
enter
adc
lods
adc
mov
xlat
pop
jle
sbb
cmp
push
dec
pop
inc
aaa
ss
lods
sbb
out
and
shr
push
mov
jmp
int3
movzbl
jb
and
xor
iret
out
mov
dec
lock
cwtl
inc
int
mov
dec
jge
popf
add
xchg
decb
je
std
std
push
inc
jge
iret
inc
push
test
cld
push
cltd
adc
cmc
add
fndisi(8087
pushf
cmpsb
shrb
lcall
fidivrs
push
and
and
ljmp
stos
cmp
popa
ss
xlat
xchg
inc
sub
pop
xchg
push
or
hlt
xchg
fldenv
andl
nop
cmpsl
ljmp
sbbb
mov
cmpsb
mov
sub
lret
addb
out
jp
and
adc
push
push
xchg
mov
dec
inc
dec
jns
or
pop
jp
adc
xor
xchg
push
in
push
cmp
mov
movsb
jne
sbb
add
mov
popl
imul
ficoms
shrl
pop
loop
shl
sub
mov
or
dec
mov
in
pusha
pop
pop
decl
xchg
int
pcmpgtw
sbb
xchg
into
les
ds
orl
rcrb
fldenv
ss
dec
mov
aam
lods
push
and
or
stc
and
jg
aaa
push
inc
mov
lods
xor
push
out
mov
or
mov
shll
sarl
jmp
inc
mov
xchg
incb
sar
addr16
cld
stos
js
movsl
das
data16
pop
or
outsl
hlt
loope
test
xor
stc
fnop
lcall
inc
fsubl
out
add
leave
and
into
adc
cmpl
push
mov
adc
jb
push
addr16
mov
sbb
dec
xchg
pop
adc
cmp
ljmp
adc
jae
mov
cli
push
dec
pop
cld
int
aam
and
fisubrl
add
popf
adc
imul
lods
mov
push
cmp
repz
test
mov
cmp
lds
icebp
push
jge
xchg
pop
jg
add
and
xor
sti
fadds
insb
xchg
xchg
xor
pop
push
jle
pop
mov
sbb
push
sbb
xor
mov
xchg
add
int3
insb
inc
cmp
test
adc
inc
lods
inc
xchg
popl
cmpsl
jne
xor
es
mov
or
adc
mov
dec
sbb
dec
cmp
mov
or
std
inc
cwtl
and
jne
fwait
sub
jge
sbb
pop
push
cmc
add
andl
in
jp
pushf
sub
insb
jmp
nop
clc
ret
jecxz
pop
and
fdivs
js
mov
add
movsl
shrb
in
out
xchg
bound
dec
cmpsl
or
and
out
shlb
popa
mov
das
fcoms
insl
fs
or
jb
repz
mov
cli
cmp
sub
rorl
sub
fldl
push
or
pop
mov
jge
fwait
add
insb
insb
sub
inc
and
mov
test
push
aad
je
cmp
mov
pop
jo
fcoms
mov
xchg
xchg
xor
pop
aas
cmp
daa
inc
arpl
mov
repz
data16
push
test
cs
sti
jae
out
cli
movups
push
out
loope
pop
imul
lret
xlat
leave
ffree
jge
rcrb
sub
mov
cmp
and
iret
add
xchg
test
push
xlat
and
clc
or
cmp
add
jb
pusha
mov
ds
inc
sbb
dec
mov
sti
mov
imul
sbb
fldcw
aad
std
mov
roll
sbb
or
cmp
hlt
jp
std
stos
mov
cmp
jg
lock
aad
adc
push
popa
pop
test
xor
fcoml
lods
shrl
jne
jne
clc
rcrb
mov
jo
stc
lock
sahf
test
stc
cltd
sub
shlb
cmp
lea
add
insl
or
stos
push
xor
or
shlb
cmp
xchg
push
je
scas
mov
pop
cld
jo
mov
shll
or
rorb
sub
mov
das
mov
mov
jmp
add
lock
gs
dec
daa
in
dec
mov
bndldx
fldl
jmp
xchg
inc
xlat
psrad
jge
adc
jns
test
pop
adc
test
dec
insl
push
daa
xchg
sahf
into
jge
std
pusha
inc
ss
jg
jg
outsb
mov
test
pop
roll
mov
unpckhps
aaa
cld
mov
adc
cmc
rcr
clc
test
mov
jb
das
fisubrl
es
fildl
leave
repnz
push
sbbl
fidivl
cmp
jge
add
popa
rcr
xor
xchg
sbb
out
pop
loop
pop
outsb
orb
in
ds
jl
es
and
mov
sbb
scas
xor
hlt
inc
outsl
mov
xchg
jnp
jmp
ret
test
mov
loopne
cmp
sarl
out
mov
ret
jb
or
inc
repnz
or
adc
es
xchg
sub
push
jge
dec
leave
mov
loope
inc
stos
in
adc
sbb
out
cmpsl
lea
sub
dec
mov
out
adc
and
jae
xor
mov
fimuls
sbb
loopne
dec
sbb
arpl
xchg
ret
ret
faddp
outsl
testl
xchg
and
ja
mov
jmp
xchg
in
ret
ljmp
xchg
jnp
insb
cmp
fstpt
xchg
orl
icebp
pop
sbb
xchg
lds
movsb
mov
xor
mov
or
int
lcall
push
jl
popf
inc
bound
insl
mov
gs
inc
pop
pop
icebp
outsb
mov
aad
add
stos
cli
xor
add
int3
movsl
out
les
inc
fs
icebp
mul
and
sbb
dec
push
sub
mov
cs
sbb
adc
scas
icebp
dec
mov
fsub
mov
push
lds
and
lds
in
cwtl
fs
addr16
stos
sbb
push
inc
fists
pop
int
imul
and
adcl
jge
ret
and
fistps
insb
pop
rcl
push
bound
nop
and
clc
mov
repz
mov
movsb
cld
adc
out
sub
or
jb
pop
add
testl
mov
mov
add
addl
inc
mov
mov
fdivr
pusha
push
mov
outsb
adc
mov
or
mov
in
nop
sub
loope
in
loop
dec
inc
pop
inc
mov
imul
arpl
test
into
idivb
fwait
ret
or
insl
cmc
xchg
data16
lock
push
or
sahf
mov
mov
sbb
int
repz
push
lret
data16
outsl
cs
hlt
ficompl
hlt
add
mov
sub
repz
add
sub
jmp
lcall
xchg
js
scas
or
arpl
cmp
add
lret
and
aad
push
aad
into
sbb
cmp
pusha
jb
jl
scas
bound
mov
adc
jno
sahf
push
test
jg
cmp
dec
aas
push
jp
xorl
adc
push
adc
cltd
mov
dec
call
push
sub
mov
mov
lods
cwtl
scas
pop
fisttps
insl
mov
fs
mov
test
jp
mov
jno
pop
in
jae
mov
inc
xor
outsb
subl
stos
js
popa
int
shll
cmp
jp
fldl
inc
adc
popf
pop
push
arpl
push
jecxz
arpl
into
xor
sbb
mov
imul
stos
inc
dec
bound
mov
aaa
push
icebp
fdivl
sti
fmul
lds
sbb
push
es
jg
mov
push
add
aaa
add
scas
mov
shrl
sti
bound
sub
mov
mov
lret
rcl
cmpsl
dec
adc
enter
cld
psubq
popa
or
out
xor
das
int
pop
fdivrl
sub
stc
mov
mov
jbe
xor
cmp
add
xchg
pop
add
xchg
scas
mov
je
add
mov
in
fdivs
mov
addr16
dec
testl
pop
shlb
mov
icebp
sbb
popa
inc
andl
rcl
lods
jae
xor
pop
cwtl
cwtl
dec
fcmovnb
mov
loop
out
xor
push
mov
dec
leave
jno
jne
insb
mov
aad
leave
shrl
pushf
jbe
sub
fldpi
inc
ret
or
xor
dec
lahf
adc
mov
xlat
or
sub
movsb
test
xor
and
fisubs
fcoml
pop
mov
push
sub
pop
enter
push
mov
adc
push
and
aam
xchg
sub
lods
fidivl
test
jmp
sbb
daa
scas
push
mov
mov
xchg
fnsave
mov
gs
shll
add
jg
jmp
jbe
ret
pop
test
nop
sbb
gs
movsb
inc
fwait
sahf
int3
push
xor
sahf
mov
rorb
pusha
sub
pop
sub
aaa
or
sbb
jae
jo
movsb
insl
scas
mov
clc
mov
dec
mov
incl
inc
and
push
in
loopne
adc
cs
loopne
mov
arpl
add
inc
push
sahf
cmp
lea
lock
jae,pn
and
xchg
push
xlat
into
fnstenv
imul
pushf
cmp
bound
andb
add
cmc
aam
pusha
mov
rorb
mov
into
pusha
add
xlat
int3
movsl
mov
mov
cltd
dec
mov
rorl
pusha
jb
add
jae
out
test
out
jns
ret
adc
in
or
ja
dec
ror
cld
xchg
decl
enterw
pop
mov
shrl
sub
push
pop
push
into
adc
and
in
shr
inc
inc
rcrl
loope
aaa
rcrl
jl
xchg
pop
cmpsb
mov
mov
repnz
ds
cmp
mov
aad
ja
call
push
cmpsl
push
add
jb
jbe
add
inc
mov
sbb
pop
nop
cmp
stos
sub
ljmp
mov
dec
adc
stos
mov
hlt
jae
sbb
int3
lods
pushf
out
stos
repz
lret
mov
out
xchg
lds
test
mov
xor
in
mov
stc
mov
xor
imull
leave
lds
imul
outsl
xchg
dec
sub
mov
fs
jne
clc
jp
add
xlat
cmc
pop
scas
nop
enter
rcr
adc
pop
jo
add
xchg
xor
xchg
push
rolb
push
add
push
mov
sub
in
pop
mov
std
pop
ret
dec
outsb
aam
mov
orb
out
aam
mov
mov
add
pop
mov
adc
fadds
mov
jp
mov
pop
cltd
inc
adc
inc
aaa
cmpsl
popl
xchg
negl
cmc
push
into
mov
mov
js
jge
decb
inc
pop
ds
cmp
cld
push
sub
mov
es
cwtl
cli
mov
shlb
aad
xchg
and
lahf
mov
aad
insl
cltd
fwait
andb
outsb
test
mov
push
push
movsl
ret
cmp
roll
mov
mov
loopne
dec
std
and
test
es
jl
pop
inc
cmpsb
fdivr
scas
mov
push
sbb
push
xchg
mov
fsubrl
aam
repz
dec
jnp
mov
cltd
inc
mov
das
iret
fldl
pusha
inc
pop
pop
je
push
jp
dec
rcll
cmp
data16
xor
data16
lret
mov
xchg
jg
or
in
sub
mov
int3
cwtl
test
or
incl
push
jl
xchg
imul
roll
iret
dec
aas
subb
outsl
push
andl
sbb
cmpl
adc
out
fsubl
push
push
mov
mov
mov
lret
fsub
loope
aaa
add
mov
test
cmp
pop
repz
xchg
adc
clc
jg
insl
mov
stc
jle
xor
fs
xchg
cmpsb
inc
mov
mov
lds
out
daa
fcmovu
xor
clc
jnp
inc
mov
mov
mov
lds
imul
aas
pop
es
push
pop
pushf
std
adc
stos
sbb
fs
lea
push
xchg
jne
std
clc
pop
fildl
add
movsb
or
pop
data16
hlt
daa
adc
sbbb
mov
fsub
cmp
push
pop
or
std
ja
cld
sbb
mov
push
sbb
mov
scas
mov
dec
push
push
sbb
or
cmp
sub
lods
mov
mov
fnstenv
mov
pop
adc
fsubl
loop
or
stc
daa
mov
or
push
or
enter
jns
add
mov
lock
cmp
mov
das
mov
push
and
dec
mov
xchg
mov
and
fs
push
xchg
fs
and
xchg
test
cmc
out
jnp
pop
cltd
fisubs
cmc
dec
push
mov
inc
sti
lods
add
fidivs
fisubrl
sbb
fs
xchg
adc
xchg
pushf
je
push
sbb
dec
cwtl
inc
mov
mov
add
jecxz
ss
and
out
fldcw
push
pushf
loope
add
cmp
push
pop
insb
dec
cli
jg
out
xchg
enter
loopne
cltd
je
dec
aaa
inc
sahf
rclb
xlat
mov
dec
mull
xchg
mov
ret
outsl
push
dec
add
pop
inc
sub
mov
stos
movsl
cwtl
lods
cmp
mov
inc
ficoms
test
gs
bnd
nop
pop
cmpsl
xor
adc
mov
mov
add
test
jo
jecxz
outsb
int
shll
jge
je
sub
enter
mov
cmpsl
test
xchg
inc
lcall
orb
nop
sub
test
sahf
adc
dec
clc
outsl
push
lret
pusha
lcall
scas
nop
notb
xchg
pop
ror
int
mov
sbb
cmc
lods
mov
add
ds
add
xchg
test
scas
sbb
sbb
out
sub
sbb
jl
adc
cmpsb
mov
mov
out
movsl
mov
cli
inc
cmp
cs
xlat
cmpsl
xchg
pop
xor
pushl
sub
mov
push
or
dec
daa
repnz
rclb
movsb
xchg
ret
mov
mov
loop
out
sarl
mov
sbb
call
sub
pushl
int
fdivl
lcall
stc
imulb
inc
mov
int3
bound
mov
das
ds
and
xchg
push
jmp
mov
in
repnz
ret
sbb
sahf
xchg
xchg
add
sub
orl
test
out
push
mov
inc
decl
mov
iret
orl
dec
mov
rep
push
test
lea
jno
and
out
mov
adcb
fwait
call
mov
add
mov
fistpll
pop
inc
mov
insl
sahf
aas
lods
mov
std
add
or
shlb
mov
cmp
fmull
push
lahf
fcmove
repnz
ss
popf
xor
sub
push
cmp
pop
pop
xor
mov
fnsave
jge
lods
pop
out
scas
inc
and
popf
push
jg
out
enter
push
fdivrl
or
clc
ja
fs
pcmpgtd
pop
in
call
cmp
xchg
or
pushf
inc
inc
dec
cwtl
sbbl
ljmp
je
add
add
test
jmp
stos
rcll
mov
push
or
adc
enter
cltd
stc
or
pop
ret
ret
movsl
popa
into
pop
push
std
ds
fstpt
movsl
add
inc
icebp
pop
mov
cwtl
add
or
add
pop
insb
xchg
push
inc
push
mov
dec
lea
add
jmp
std
mov
test
test
lds
sarb
inc
jl
push
mov
inc
sbb
cmp
fldl
lods
jo,pn
xchg
mov
xchg
or
sub
fimull
xchg
lods
rclb
jo
push
or
addl
adc
push
or
and
pop
mov
xor
jo
push
movsb
mov
addr16
and
dec
or
jne
or
cmp
scas
aas
sbb
dec
inc
push
xor
test
jge
xchg
adc
inc
mov
sub
cmp
pusha
sbb
imul
dec
daa
jne
shl
test
movsb
or
pop
jp
pop
mov
icebp
or
call
jno
fcomps
pusha
les
sub
push
dec
and
fwait
jns
outsb
clc
dec
add
xchg
ljmp
lock
jo
fisubrs
inc
inc
dec
jne
imul
mov
jmp
push
imul
imull
sbbb
mov
xor
sahf
mov
or
dec
fidivrs
ret
ja
xchg
or
xchg
mov
inc
data16
cwtl
mov
jg
fnstenv
adc
add
mov
lret
gs
push
mov
jno
mov
jle
mov
lret
inc
cmp
xchg
jns
jle
mov
adc
inc
mov
sub
fwait
cmc
mov
in
mov
loop
sbb
shr
popf
call
pop
inc
test
xlat
aad
ja
sbb
dec
or
add
lods
xor
sbb
out
outsl
add
mov
in
push
pop
fcom
shlb
in
cmpsl
leave
cmp
mov
mov
xor
mov
addl
ss
xor
mov
enter
mov
sahf
dec
pop
sbb
jle
sbb
lcall
add
jmp
aad
scas
add
ss
or
in
xchg
push
je
cmp
jns
js
xlat
in
stos
xchg
jae
jmp
mov
out
popf
cmp
stos
sahf
mov
fs
in
imul
jb
stos
push
inc
fwait
or
fisubl
fwait
cmp
mov
inc
add
inc
mov
ljmp
sbbb
scas
sbb
dec
aad
jo
or
pop
xchg
repz
jle
ss
pop
adc
mov
cltd
xchg
push
or
cmpsl
outsl
jno
lea
jo
lret
nop
fstpt
out
jno
popf
xchg
dec
xchg
loope
xor
icebp
stos
jns
mov
jg
fst
xor
ret
dec
push
ret
cwtl
ds
adcl
cmp
xchg
push
sbbb
inc
xchg
mov
lods
fimuls
jo
pop
daa
sub
lock
movsb
es
int3
xor
lock
jl
sub
jae
xor
movsb
in
or
lock
fwait
or
xchg
repz
sarl
mov
mov
sub
xor
inc
test
cmp
popa
mov
jo
fwait
xlat
mov
lds
inc
movl
jb
sub
mov
aas
sub
lret
push
mov
xor
jns
pop
test
jmp
dec
sbb
fcomip
fstl
mov
pop
icebp
pop
pop
sbb
sti
popf
mov
in
push
fisubl
iret
test
jne
jno
stc
bnd
stos
xchg
push
fmuls
out
negl
fiaddl
pusha
cmpb
lret
jbe
test
jg
shll
xchg
cltd
out
sbb
in
push
ja
shl
xchg
sub
cmp
mov
push
push
lock
movsl
ja
mov
cmpsl
jbe
xchg
sbb
inc
movsb
std
lahf
movsb
push
rcr
movsb
int
and
sub
adc
jle
das
add
js
and
ret
cld
push
jmp
insl
add
addr16
mov
js
inc
test
rcll
and
int3
add
jmp
popf
dec
int
jl
mov
hlt
sub
rorl
pop
mov
lret
jae
arpl
pop
sub
adc
popa
inc
dec
xor
adc
pop
rolb
aam
addr16
inc
add
or
adc
aas
test
scas
push
imul
mov
add
xchg
push
sbb
mov
sub
int3
push
and
cld
dec
mov
xchg
cmp
xor
imulb
xchg
xchg
inc
call
repnz
mov
rol
dec
add
mov
jge
cs
lret
add
jne
adc
test
push
mov
pop
push
aam
mov
aas
xchg
in
sub
sbb
jae
sbb
test
mov
sub
push
lods
aam
cmp
insb
cmp
adc
adc
stc
and
scas
lret
out
scas
or
shlb
and
sahf
jp
lahf
xor
cmp
sub
xlat
popf
cld
les
enter
sbb
pop
repz
leave
or
mov
js
imul
cmp
or
jecxz
inc
arpl
loopne
xor
jle
iret
imul
cmpb
into
stos
sahf
cmpl
sbb
notb
cld
test
les
test
arpl
ja
adc
gs
jp
nop
loop
imul
jnp
inc
mov
mov
push
mov
outsb
mov
in
or
aad
add
mov
dec
sbb
pop
adcl
mov
fsubrs
lock
fwait
mov
cmp
push
inc
test
icebp
lock
adc
inc
ljmp
dec
call
das
and
sub
jle
enter
std
jbe
out
adcl
int3
fbld
cld
pop
test
add
mov
xor
add
jmp
or
cmpsl
mov
cmc
or
test
popa
pop
stc
sub
inc
insl
sbb
ucomiss
add
push
adc
sub
push
inc
ljmp
lret
add
cltd
lret
fists
scas
lock
test
cmp
pop
dec
or
add
fwait
jno
push
xor
dec
data16
loopne
jb
lea
push
mov
stc
jmp
and
pop
or
das
push
and
mov
sub
out
xor
jnp
insb
add
loope
push
and
push
repz
push
ffreep
lret
sub
fstps
adc
daa
dec
xchg
pop
cwtl
addr16
sbb
push
push
loop
push
cmpsl
cmp
aas
xchg
sbb
dec
ret
pop
mov
scas
flds
mov
adc
dec
out
xchg
adc
dec
cmc
sub
and
stc
push
lret
fsubr
aas
sub
int3
mov
stos
in
cmp
movsl
stos
xorl
jle
and
cmp
lock
xchg
and
aas
and
mov
arpl
pusha
out
xor
test
fistps
aad
mov
imul
mov
aad
pushf
ret
cli
sbb
add
lahf
push
cld
inc
movsl
hlt
call
hlt
inc
inc
push
out
cwtl
cmp
cmp
out
mov
add
sarl
js
test
lret
pusha
clc
jns
cmpsl
pop
mov
xchg
mov
stos
mov
lea
mov
stc
stos
mov
fstp
in
outsl
inc
sbb
xchg
dec
orb
out
incl
lret
xchg
pusha
jecxz
loopne
xchg
add
lods
sahf
pop
jo
gs
rclb
adc
movsl
push
fisttps
cmpsb
mov
clc
shlb
lods
sahf
dec
ret
xor
jle
stos
stos
rcll
nop
mov
or
fsubrs
jmp
pop
jbe
add
pop
shl
stos
pushf
xchg
aas
sub
pusha
mov
ret
cmpps
mov
shrl
sub
pop
adc
cmpsb
push
ret
clc
inc
imul
adc
int
mov
pop
sub
cwtl
mov
adc
xchg
jae
scas
xor
arpl
add
pusha
cmp
cwtl
inc
jae
cmc
cmovno
outsl
add
xor
in
xchg
cwtl
mov
mov
ret
or
hlt
dec
mov
mov
push
jnp
jle
mov
or
lods
fisubl
mov
dec
lret
sbb
jne
in
lret
imul
jne
leave
mov
push
xor
dec
pop
cld
int
dec
jne
aam
bound
add
lds
sbb
inc
shrl
mov
lock
mov
push
shlb
ljmp
or
aaa
ret
mov
sahf
outsl
add
jmp
inc
je
std
mov
sub
jecxz
mov
jno
pop
add
add
addb
add
aaa
jno
clc
mov
outsb
mov
std
movsb
das
inc
and
jae
sti
adc
clc
lock
sub
jp
add
rolb
leave
fildl
je
jns
inc
outsl
into
push
pop
sub
subb
adc
pusha
arpl
dec
mov
push
insb
js
cli
shrb
xchg
out
jecxz
lahf
dec
mov
insb
imul
adc
adc
sub
jle
lahf
clc
jnp
in
sub
jmp
inc
dec
mov
dec
data16
add
and
cs
cmc
inc
popa
leave
popf
add
mov
scas
xchg
xlat
sbb
lds
aaa
adc
ret
xchg
rcr
cltd
in
push
imul
lahf
sub
jle
outsl
clc
add
sbb
inc
push
and
cmp
bound
lahf
test
roll
xchg
or
ds
push
mov
sbb
sti
push
daa
dec
add
xor
adc
leave
movsb
and
cmp
mov
xor
push
cmp
adc
mov
jg
cli
jns,pt
sub
into
add
in
mov
lock
push
aam
adc
sbb
loope
jecxz
clc
nop
nop
filds
fwait
pop
mov
cld
lds
push
clc
push
lds
out
or
stos
pop
sub
dec
arpl
in
inc
stc
cltd
test
pop
add
mov
test
sti
mov
mov
fisubs
dec
or
pop
mov
add
adc
sbb
in
or
rcrl
aam
sub
jmp
xor
jmp
sbb
push
dec
hlt
ja
push
xor
insl
imul
jnp
add
xlat
pop
xorb
lds
adcb
test
add
je
jo
or
in
sub
xchg
fildll
mov
clc
ljmp
mov
sbb
jo
in
push
push
fcmovu
outsb
dec
imul
aam
push
fucomi
ret
stos
fisttps
adc
fbstp
xor
lods
daa
je
ja
push
lods
lods
and
pop
mov
dec
roll
lods
inc
jne
fistpl
out
hlt
fs
hlt
ja
out
mov
jge
in
push
cltd
mov
std
inc
pusha
pop
imul
lea
mov
cmp
aaa
dec
mov
push
push
iret
pop
adc
ret
mov
popa
adc
jmp
orb
xor
xor
arpl
sbb
aaa
repz
cld
pop
repnz
addr16
push
or
sbb
cli
jl
mov
aam
loope
pop
inc
test
aad
icebp
stos
mov
pop
cmp
lcall
dec
or
popf
mov
adc
lahf
jbe
arpl
rorb
mov
fsubrs
iret
movsl
pop
jp
outsl
inc
enter
ja
cltd
inc
add
dec
int3
mov
pop
xor
mov
insl
cmp
fdivrs
push
stos
dec
adc
pop
cmp
pop
mov
pushf
cmc
and
leave
sub
adc
cmp
mov
aad
in
popa
or
stos
cmp
or
dec
inc
xchg
stos
lgs
fcoml
andl
pop
loope
sarl
pop
shll
in
mov
fwait
xchg
mov
jne
add
lock
mov
xlat
xlat
sub
push
adc
rcll
xor
iret
push
pushf
mov
ret
inc
inc
xchg
xor
add
dec
add
pop
xor
add
jae
in
dec
repz
adc
xor
adc
sbb
inc
leave
cs
hlt
lds
sub
jge
gs
jns
mov
and
ja
xchg
loop
shlb
movsb
cmc
stos
jl
add
cmp
add
dec
add
out
inc
sbb
mov
test
jmp
jle
dec
shll
test
pop
jmp
imul
mov
gs
add
pop
or
pop
dec
shrb
mov
fisubrs
or
icebp
inc
pop
stos
dec
andb
jmp
nop
fidivrl
addr16
dec
add
inc
inc
sbb
dec
stos
add
adc
in
mov
cmp
xor
mov
inc
cld
loopw
pop
mov
push
cwtl
mov
andl
xor
repz
in
ja
es
mov
jae
mov
repnz
stos
mov
mov
adc
xchg
gs
gs
movsb
iret
mov
outsl
xchg
inc
sub
jo
stos
daa
imul
cld
mov
xchg
sub
fldcw
dec
mov
push
sub
sti
repnz
sti
and
sub
dec
test
mov
push
or
lahf
dec
icebp
inc
add
sahf
xchg
divb
inc
in
scas
mov
sub
das
outsl
fidivrl
xor
sti
ret
sbb
mov
iret
jl
ljmp
cmp
push
fs
mov
test
jb
adc
stos
icebp
xchg
outsb
js
call
mov
cmp
mov
arpl
mov
ret
xchg
xor
test
rcll
ficomps
dec
xchg
std
inc
xchg
push
lea
mov
test
ret
xchg
fnsave
inc
sub
mov
shrl
ds
mov
cmp
je
sub
xchg
ret
call
incl
push
addl
mov
jns
push
sar
pushl
cmpsl
mov
lds
test
fstps
scas
ljmp
cmpsl
mov
leave
pop
in
stc
popa
xchg
out
dec
lcall
adc
mov
les
js
and
aas
stc
mov
inc
or
shl
add
das
adc
lods
jae
mov
shrl
scas
nop
scas
or
cmp
sbb
push
mov
push
aam
repz
mov
mull
bswap
imul
xor
std
add
ja
jg
fisttpll
stc
jecxz
stos
push
adcl
xchg
pushf
add
or
iret
lahf
add
fmull
int3
repnz
fildl
mov
cmp
lea
dec
dec
aaa
jae
jg
mov
orb
cs
mov
leave
dec
mov
inc
sub
outsb
sub
push
push
loopne
dec
mov
sub
lahf
sti
dec
ds
inc
fisttpll
pop
ljmp
mov
out
outsb
inc
lock
jno
add
imul
fadds
or
adc
loopne
inc
popa
aam
cmpsb
xor
popa
push
add
ja
out
int3
neg
shlb
push
out
mov
pop
dec
or
fs
ljmp
mov
repnz
xchg
and
push
aad
stos
push
push
popa
ret
hlt
mov
adc
xchg
rolb
ficomps
pop
xor
shl
fdivl
jmp
push
jmp
test
mov
add
push
stc
jmp
push
mov
icebp
insb
lds
lret
jle
dec
jg
push
jle
push
push
fld
jnp
mov
insl
or
dec
cmp
mov
jae
jbe
shlb
xor
xchg
xor
cmp
sub
orl
push
enter
mov
and
testl
jecxz
xor
pushf
mov
inc
push
fistpll
mov
add
inc
lcall
xchg
xlat
mov
cltd
mov
mov
pop
pop
dec
fsubrl
inc
xor
dec
enter
loope
push
xor
std
imul
xorl
pop
jnp
imul
xlat
pop
xchg
lcall
and
mov
popf
mov
cmpl
fldl
dec
and
fsubl
inc
ds
leave
push
mov
xor
dec
fsubp
or
fucomip
fdiv
cmp
mov
jne
inc
and
repnz
push
mov
pop
dec
stc
pop
repz
push
scas
hlt
mov
cld
xchg
jg
cmp
popa
dec
stc
mov
cmp
cmp
xchg
mov
cld
or
add
imul
add
sbb
js
nop
cmp
into
int
faddl
out
insb
add
pop
scas
xchg
daa
add
push
jmp
dec
cltd
imul
or
pop
and
sbb
fsubl
roll
fwait
push
lret
out
mov
mov
xchg
and
push
lds
ret
mov
push
or
pop
divl
imul
mov
cli
push
test
mov
icebp
dec
mov
push
out
sbb
sahf
addr16
inc
int3
dec
cmpsl
rcll
mov
cmp
popa
xor
sbb
push
mov
popf
daa
push
xor
iret
jg
mov
cmp
scas
movd
and
cld
or
cmpsl
rdmsr
mov
inc
dec
into
je
add
sbb
jns
lds
pop
jp
xchg
negb
lret
inc
cmc
pop
rol
lret
xor
cmpsb
jge
add
xchg
dec
cmp
mov
loope
mov
mov
jmp
pop
jl
loope
cs
mov
in
pop
imul
add
push
inc
popa
mov
cmp
mov
push
shrb
addb
add
inc
xchg
mov
cmp
mov
dec
mov
mov
out
movsb
cli
in
mov
mov
movl
out
mov
in
adc
dec
divb
arpl
ljmp
mov
add
jae
and
test
or
dec
lret
and
mov
cmp
mov
push
popf
dec
outsl
pop
jle
cwtl
and
loopne
lods
xchg
and
push
cmpsb
repz
sbb
sub
shr
es
call
add
dec
mov
jecxz
outsl
ret
pusha
add
in
jb
adc
cmp
mov
test
cmpsb
stos
stos
ja
push
add
jl
insl
enter
test
xor
mov
inc
adc
and
push
std
push
cs
jne
and
inc
scas
jl
lock
pushf
aam
xor
cli
push
mov
push
test
imul
testl
sub
push
mov
aas
jg
xchg
xchg
rcll
lret
lods
xor
stos
movsl
jecxz
leave
and
mov
pop
int
mov
cmpsl
xor
and
repz
into
movsb
push
movsl
sbb
fs
xchg
jnp
mov
mov
xchg
mov
shll
adcl
idivl
fnsave
add
ret
daa
mov
idivb
nop
adc
in
lcall
das
out
add
mov
xchg
lods
dec
mulb
cmpsb
cmp
inc
movsl
xor
xorl
jae
ss
pop
in
inc
mov
xchg
jo
in
scas
es
lret
jno
call
xchg
scas
mov
decl
adc
js
add
mov
mov
pop
std
ss
adc
movb
addl
pop
mov
mov
add
mov
cmp
push
xlat
pop
fdivrs
mov
shlb
inc
rorb
outsl
adc
je
pop
pop
jl
fnop
in
loopne
aam
fcompl
adc
sarl
lock
pop
js
jmp
sahf
push
mov
sbb
or
cmp
insb
sti
in
xchg
ds
push
cwtl
pop
mov
push
leave
mov
sbb
mov
xchg
mov
push
in
popa
xchg
lods
xchg
into
fcomps
sbb
popf
cwtl
mov
aas
jne
outsb
data16
leave
mov
mov
adc
pop
mov
xchg
test
push
loopne
stos
xor
out
loopne
sbbl
push
insl
pop
aaa
daa
loopne
aad
pop
pop
scas
cmpsl
lret
popa
and
ljmp
xchg
inc
sub
test
add
neg
xor
repz
into
cld
jns
cmpb
in
sbb
popa
mov
jmp
sbb
xchg
push
dec
pop
loopne
lcall
jecxz
scas
xchg
mov
mov
lock
imul
jecxz
and
jno
out
ss
inc
dec
loopne
or
jne
leave
mov
clc
add
or
repz
jle
mov
mov
fcos
ja
movsb
mov
xchg
in
outsl
inc
jmp
jne
cmp
adc
jp
dec
xchg
lret
sbb
neg
gs
lea
insl
add
mov
call
nop
lcall
popf
adcb
add
lods
add
xchg
std
mov
mov
fwait
inc
scas
mov
pushf
xchg
xor
sub
jle
sbb
or
lods
loopne
loope
imul
std
or
add
sbb
dec
inc
sbb
fsts
sbb
push
cmpsb
cmpsb
xor
adc
inc
adc
mov
popf
cmp
sub
ss
imul
or
cmp
jge
jb
dec
loop
test
cltd
xchg
mov
out
add
sub
movsl
imul
cmp
call
cld
sbb
shl
cwtl
add
imul
addr16
jg
push
or
out
repnz
clc
xlat
cmp
clc
leave
add
fadd
sbb
and
insl
adc
insb
inc
pop
dec
lea
inc
push
xchg
ficoms
adc
scas
ficompl
nop
enter
icebp
xchg
sbb
cmp
mov
xchg
ljmp
fdiv
mov
int3
mov
ror
aam
or
scas
iret
pop
imul
daa
xor
pop
sub
mov
sar
inc
xor
inc
ja
or
push
or
les
sarb
pop
dec
xor
mov
adc
mov
dec
insb
lcall
fstpl
and
xchg
jle
xchg
push
enter
sbbb
push
std
lret
movsb
sbb
dec
aad
in
sub
out
cmp
das
stc
cmp
xchg
and
mov
iret
mov
rcll
sarl
cmp
sbb
cs
lods
out
movb
lahf
pop
ss
insl
into
or
mov
in
hlt
popf
out
ds
repz
lods
sub
in
sub
loopne
sub
repnz
mov
popa
jp
jae
int
push
pushf
mov
shll
pushf
in
js
enter
hlt
add
js
inc
in
sbb
dec
in
imul
jge
imul
mov
mov
mov
mov
loop
rcll
mov
repz
mov
scas
jmp
and
ds
pop
jg
push
xchg
inc
data16
adc
ljmp
jl
mov
rcl
add
mov
insb
out
dec
fwait
mov
sub
cmp
cmp
and
out
cmp
rorb
cmp
xchg
icebp
jp
pop
subl
fisttpl
jno,pn
sub
xchg
flds
or
push
and
cmp
adcb
mov
sub
push
push
jb
mov
or
bound
bound
out
rcll
fisubrl
jmp
sub
shrl
jg
mov
xchg
imul
inc
jp
rclb
leave
mov
fists
lret
loop
pop
sub
lret
pop
xchg
and
jno
sub
dec
ss
add
cmpsl
scas
jle
mov
mov
loope
dec
lahf
mov
xchg
push
pop
cmp
aas
jg
loope
or
popf
stos
mov
testb
shll
in
mov
xchg
jl
push
mov
pushf
cmp
insb
push
adc
jl
jns
sti
jb
cmc
mov
into
cmp
mov
push
and
mov
pop
cld
fs
fisubrl
int
pusha
dec
int
stos
cmp
jp
or
ret
dec
jmp
pop
cli
sarl
in
jle
cmp
lcall
mov
in
lds
fiadds
mov
jmp
cltd
sti
in
lods
mov
mov
push
dec
mov
test
cmp
push
movsl
mov
jb
ja
shufps
mov
test
xor
leave
and
scas
call
enter
scas
in
xchg
icebp
mov
add
dec
cmp
popa
inc
icebp
xchg
mov
xor
push
mov
in
notl
xchg
stc
xchg
stos
call
pop
xor
jns
test
dec
push
sti
mov
pop
add
je
pop
inc
cmpsb
hlt
leave
int3
xchg
pop
rcr
cld
sti
int
into
sbb
lods
pushf
shrl
pop
xchg
sub
pop
loopne
addr16
loop
mov
ja
xchg
das
sti
or
jg
test
sbb
jmp
xchg
xor
fnstcw
xchg
mov
shlb
addb
sbb
cmp
jmp
mov
adc
push
mov
sub
scas
push
push
push
jnp
dec
lds
pop
mov
xchg
popf
icebp
adc
leave
xor
cmp
addr16
sub
xchg
and
ficoms
mov
in
push
jne
inc
dec
movsl
dec
sbb
rcrb
sbb
mov
sub
mov
lret
rorb
pop
inc
dec
lcallw
in
mov
leave
lcall
ljmp
add
outsl
push
mov
aad
popf
mov
loope
stos
pop
push
xor
fstl
icebp
sahf
mov
jle
daa
xor
lahf
sub
je
enter
loop
sub
jecxz
mov
or
movsl
insb
or
xor
icebp
jno
pop
sbb
mov
mov
incb
dec
cmp
xchg
inc
xchg
push
push
or
jnp
sub
jns
pop
xor
xor
popf
iret
and
imulb
pop
push
pop
mov
ficoml
pop
fsubrs
push
push
loopnew
testb
add
pop
pop
and
lret
fmuls
loop
test
gs
scas
adc
lods
push
pop
sub
and
sub
mov
leave
icebp
fsubrl
add
sahf
or
daa
ret
xor
arpl
adc
sub
pop
dec
xchg
orb
inc
lods
out
arpl
mov
mov
leave
inc
sub
push
repz
or
insb
adc
inc
lods
inc
lods
pop
cs
sbb
jae
gs
fistl
lods
and
cmpsl
ret
cmp
push
adc
jnp
adc
fs
sub
sbbb
add
in
rorb
sub
mov
das
repz
mov
xchg
lret
nop
jb
rolb
popa
shr
inc
daa
add
xor
sub
sbb
or
mov
mov
rcrl
jle
cs
nop
movsb
pop
fistpl
into
cs
xchg
scas
repnz
shr
aas
pop
rolb
ds
jmp
rorl
push
cmp
mov
in
fldenv
sti
pop
push
arpl
shlb
jge
aas
sub
xorl
or
add
inc
loopne
sbb
xchg
xchg
test
fdivrl
jl
inc
mov
push
dec
jg
fnsetpm(287
push
daa
call
clc
mov
arpl
mov
cmp
sbb
xor
sti
mov
push
insb
mov
xor
jo
loop
cmp
outsl
push
mov
sub
pop
push
rol
out
fcmove
in
decl
mulb
out
and
mov
loop
xchg
sbb
xor
adc
jge
xchg
xchg
subl
stc
dec
sbb
xor
shrl
movsb
in
je
and
push
adc
std
mov
jecxz
push
adc
sub
xchg
shlb
push
lret
pop
cmp
movsl
jns
scas
dec
dec
adc
insb
enter
and
mov
movsl
pop
test
jae
aam
daa
jecxz
insl
sub
and
test
pushf
cmp
movsl
dec
aas
jmp
xchg
clc
std
cwtl
inc
add
xor
cmp
pop
inc
aaa
jbe
jbe
push
je
dec
push
test
insb
call
lahf
je
jb
lcall
scas
mov
jae
ja
idiv
shr
scas
lcall
xchg
sbb
in
inc
push
cmp
dec
and
leave
xchg
mov
inc
cmpsb
call
mov
les
sbb
cmp
or
jbe
adc
mov
mov
incl
bound
scas
mov
push
mov
xor
jnp
mov
shll
ljmp
jnp
ja
lahf
adc
inc
sbb
fldenv
sti
jle
imull
xchg
mov
inc
adc
lret
fiadds
cmc
mov
pop
mov
jl
shlb
xchg
xchg
stos
cmpsl
mov
call
das
add
movsb
neg
popf
xchg
push
mov
rclb
mov
jbe
mov
movsb
ss
xlat
push
jbe
int3
dec
cmpb
sahf
cli
leave
out
inc
sbb
xchg
iret
test
ja
cld
xchg
lret
sub
mov
push
lret
int
dec
add
in
subb
and
enter
adc
pop
adc
adc
jnp
fbstp
aas
mov
jb
and
lds
call
lcall
sbb
inc
inc
or
push
and
push
mov
sahf
ror
test
cmp
rcrl
jg
mov
mov
mov
ret
das
pop
mov
addr16
pushf
addl
sbb
mov
stc
les
jno
scas
popf
mov
out
mov
adc
cs
mov
fldl
jg
ficoml
cli
scas
mov
xchg
mov
lock
cld
lds
jns
pop
test
mov
sub
je
xchg
pushf
data16
and
xor
fs
mov
movsl
xchg
dec
or
enter
stos
das
lods
stos
bound
lcall
cmp
jo
subb
dec
or
arpl
popa
and
mov
push
jge
jmp
scas
cmpsb
rolb
jbe
out
inc
call
push
or
mov
test
fstpt
xor
rorl
scas
bound
adc
cli
lock
movb
rep
mov
loopne
lret
xchg
adc
shl
sbb
xor
pop
adc
add
out
dec
out
adc
pop
push
xor
lock
cmp
clc
aaa
or
out
or
or
adc
add
add
movsl
jl
mov
sub
cmp
adc
dec
xchg
pop
gs
jmp
jb
cmp
xchg
and
das
and
push
stos
cmc
dec
fiadds
jp
push
xchg
mov
add
ljmp
test
lock
cmp
fs
stos
or
gs
inc
pop
inc
cltd
add
cld
repnz
sub
xor
mov
je
mov
xchg
push
mov
leave
movsb
or
ljmp
lea
jl
mov
hlt
push
jno
repnz
jmp
testl
mov
pop
cld
lods
hlt
push
add
pop
rcll
ja
cwtl
fcompl
je
test
xchg
mov
pop
dec
mov
xchg
pop
in
dec
ret
test
bswap
lods
imul
in
icebp
dec
cmp
cmp
and
jge
mov
fstpt
cs
imul
dec
fildll
loopne
mov
lret
fiaddl
repz
push
lock
fstl
push
test
cs
inc
pop
aas
pop
xchg
in
mov
sub
cli
and
and
adc
push
rorl
mov
lahf
cs
xchg
enter
out
jns
pop
enter
xor
mov
roll
negb
call
loop
mov
repnz
sbb
stc
cmovns
pop
in
mov
sub
push
in
loope
sarl
push
xor
sub
sbb
test
insb
adc
lock
in
call
js
cmp
mov
in
pop
aad
nop
cltd
mov
adc
in
pop
out
jne
mov
fbld
jne
in
cmp
xor
pop
fwait
push
jb
call
rorb
push
sti
rcll
dec
xchg
das
or
bound
clc
pop
mov
inc
std
ljmp
out
mov
inc
or
push
aad
pop
cs
cmp
pop
dec
clc
and
roll
rorl
add
mov
ljmp
mov
mov
subl
sahf
lcall
dec
sbb
mov
xor
or
dec
xor
ret
mov
xchg
sbb
xor
ds
push
mov
nop
pop
cli
fsubrs
call
push
or
in
push
cmp
lahf
test
movsl
int
fcoml
xor
adc
daa
mov
sub
stos
ss
filds
push
sub
inc
push
xor
jge
xchg
outsl
sub
xor
scas
dec
add
pop
sub
and
imulb
ret
aad
pop
cmp
call
xchg
bound
mov
out
dec
ss
jns
outsl
xchg
es
fwait
mov
push
aad
pop
mov
dec
addr16
leave
mov
cmp
cmpsb
xor
mov
loop
cmp
mov
shll
ds
outsl
jp
sbb
icebp
dec
mov
in
repz
mov
lgs
fcom
repnz
outsl
outsb
jbe
dec
lcall
iret
push
outsl
jb
or
js
mov
adcl
das
mov
sahf
push
push
sbb
mov
dec
lds
sbb
xchg
jnp
fildll
aad
bound
push
je
aad
ss
dec
inc
dec
push
iret
or
in
sub
inc
ljmp
add
rorb
popa
jbe
xchg
or
jbe
sbbl
mov
notl
ds
rcrb
ja
data16
aam
sbb
xor
pushl
ret
mov
test
xor
push
jmp
push
cmp
mov
pop
or
fsubrs
fadds
pop
aam
iret
sub
js
jmp
test
sub
add
lcall
stos
sub
stc
add
loop
push
sbb
stos
not
mov
aam
test
push
mov
jle
call
push
xchg
in
add
jle
xchg
das
rcll
lods
ss
leave
lods
imul
fucomip
jno
cmc
int3
outsl
repnz
rcrb
repz
ss
sub
iret
mov
clc
push
pop
jae
cmp
fmuls
jge
add
xor
gs
push
in
dec
fildl
xor
push
stos
and
mov
mov
clc
sbb
fisubrl
cmp
jle
mov
mov
xchg
sub
xchg
mov
movsb
filds
loop
mov
movsl
push
cli
and
vpsllw
stc
gs
or
xchg
notb
add
pop
shl
rcll
xchg
cmp
dec
subb
sub
sbb
or
aaa
pop
shl
cmp
loop
dec
inc
loopne
pop
in
outsl
jmp
je
xchg
adc
jbe
push
xchg
shll
xor
cltd
sbb
pusha
lcall
jb
sbbl
clc
mov
fiadds
jp
pop
jb
push
xchg
xor
or
xor
popa
sbb
call
icebp
sti
andb
stos
xchg
mov
mov
leave
ret
push
mov
mov
insl
iret
dec
nop
in
push
imul
div
cmpsb
and
pushf
add
dec
scas
lds
stos
test
push
movsb
xchg
das
fidivrs
jno
inc
lds
and
int3
pushf
pop
xor
fimuls
inc
jmp
movsb
dec
sub
mov
cld
pushf
add
shll
fs
sbb
cmp
mov
cmp
lret
test
scas
shll
ss
pop
push
and
add
cmpl
mov
push
and
xlat
or
add
scas
jl
dec
push
inc
xchg
and
mov
or
pop
stos
cltd
popa
pop
sbb
sbbb
push
scas
int3
mov
sbb
add
dec
sbb
dec
loopne
loop
sub
jl
int3
push
sbb
imull
mov
stos
pop
mov
cmp
sub
jnp
stc
loop
arpl
mov
mov
mov
mov
in
ds
dec
mov
lods
rcrb
fldcw
aam
jno
pop
stos
and
or
scas
test
ret
cs
pop
sub
pop
jo
jle
and
in
and
xchg
sbb
test
pop
icebp
aad
adc
xor
jmp
in
push
lods
xchg
enter
dec
lret
fldt
std
push
dec
or
cwtl
add
jbe
xchg
popa
lds
xor
mov
jle
je
lret
clc
or
out
jp
mov
ljmp
xor
sbb
mov
aam
sub
sbb
mov
inc
xor
shlb
pop
test
mov
ss
ficompl
hlt
fcomps
add
cmc
cmpsl
dec
ss
cmp
sub
adc
lock
and
ds
subb
sbb
push
mov
clc
mov
sbb
mov
jge
ffreep
das
adc
movsb
cmp
fwait
stos
inc
and
icebp
lods
jge
push
push
xchg
inc
cld
mov
fildl
sahf
shrl
mov
mov
lock
and
fdivl
mov
xor
mov
dec
shrb
rclb
hlt
inc
sbb
rcrl
xor
add
outsb
shrl
or
jle
adc
decl
push
xor
jge
fstps
mov
mov
mov
pop
mov
xchg
stos
movsl
test
ja
mov
cmp
inc
lods
push
xchg
roll
leave
nop
clc
mov
addl
add
xchg
or
fistl
mov
push
mov
test
adc
test
hlt
and
adc
in
enter
pop
sbb
xor
loope
jbe
iret
add
push
push
lret
mov
cwtl
push
jne
add
mov
mov
or
cli
push
mov
dec
cli
mov
mov
mov
dec
jb
pop
fcomps
ret
into
push
mov
dec
repz
mov
xor
sbb
cltd
incb
jne
or
pushf
xor
mov
popa
xchg
test
mov
out
loope
mov
mov
dec
mov
scas
mov
insl
subl
mov
test
js
mov
lds
and
out
jno
sbb
sbb
out
xlat
push
jge
je
inc
sub
daa
orl
adc
jb
es
xor
inc
gs
pop
pop
enter
xchg
and
mov
js
loope
loop
popa
or
or
xchg
enter
or
add
or
or
pop
or
je
xchg
addl
pop
or
imul
and
hlt
cmp
test
addr16
data16
and
xchg
popa
fs
bnd
xor
lds
push
nop
cld
lea
fidivrs
hlt
shll
loop
test
xchg
in
jno
mov
xor
and
add
pop
pushf
push
movsl
adc
jecxz
sarl
fnstsw
push
cmp
adc
sbb
lea
xchg
xchg
sbb
add
mov
mov
xchg
aam
loopne
addl
jp
fidivrs
fisttps
int3
pop
inc
and
cmp
dec
loope
mov
out
addr16
pop
pop
xchg
xor
pop
les
mov
cmp
xchg
mov
int3
es
jne
lret
xor
shlb
fisubs
imul
cltd
xchg
push
jmp
pop
in
stos
stos
jl
xchg
rol
adc
dec
push
flds
cs
iret
flds
imul
and
cli
pusha
cld
stos
daa
inc
push
jnp
in
dec
add
lret
loop
jo
xor
rol
out
popf
idiv
sub
cwtl
push
imul
adc
insb
add
xlat
lds
sub
test
push
push
adc
xchg
push
add
jno
sub
cmp
sbb
imul
inc
fildl
insb
mov
ss
adc
nop
add
inc
lahf
aam
push
xchg
mov
shlb
lea
push
ss
in
repnz
push
mov
mov
pop
sarb
mov
xor
repz
xchg
mov
mov
cmp
pop
sti
mov
push
repnz
mov
insb
sub
ror
and
push
cmp
out
mov
pop
loop
in
mov
push
loopne
inc
sub
sahf
arpl
fbstp
ds
add
imul
lret
popf
out
mov
out
test
adc
clc
jp
imul
inc
pop
jb
mov
outsb
add
push
call
dec
pop
inc
jmp
mov
xchg
jae
jnp
xor
movsb
mov
shll
sahf
add
sub
mov
xor
repz
jg
mov
lahf
mov
cs
sbb
les
dec
sub
sub
cltd
and
lds
dec
aaa
sub
ja
out
addr16
or
and
adc
fnstenv
rclb
pop
push
fimuls
jns
mov
xchg
mov
dec
sar
add
and
out
jecxz
lcall
gs
lret
jp
out
xchg
xor
inc
lcall
or
repnz
cwtl
dec
or
add
lods
shrl
push
pop
cltd
mov
or
pushf
fbstp
aam
aad
xchg
test
mov
lds
in
roll
inc
xor
inc
mov
mov
ret
incb
cltd
imul
dec
jecxz
jo
andl
outsl
mov
jg
ficompl
clc
test
mov
test
jae
cmpsl
jl
test
enter
or
decb
mov
xchg
jae
adc
inc
add
lret
or
shll
lock
push
adc
mov
push
jno
push
xchg
repnz
and
mov
scas
or
aas
mov
fistps
or
stos
shrl
jbe
movsl
sub
xchg
test
mov
jg
mov
loopne
jno
add
or
imul
gs
jge
or
mov
cmc
cli
sbb
lret
das
es
push
mov
ret
inc
cmpsb
dec
xchg
imul
and
loop
leave
push
cwtl
jae
sub
stc
sub
push
push
int
mov
adc
sbbl
inc
and
sahf
cmp
pop
leave
push
push
sub
dec
loop
add
xchg
lods
mov
pop
or
push
push
ss
fildl
or
inc
ficoml
sub
mov
lea
sbb
fs
push
int
mov
leave
mov
jns
fldt
mov
fisttpll
add
lcall
xchg
adc
push
jno
daa
imul
or
jne
fstps
push
xor
cmp
mov
dec
add
shlb
sub
inc
dec
mov
push
sub
pop
pushaw
js
jae
leave
add
xor
repz
popa
xlat
add
adc
pop
pop
outsl
mov
adc
fsubrl
enter
out
int3
push
dec
in
out
jecxz
cmpsl
pushf
mov
sbb
fcom
fcoml
les
mov
xchg
push
loopne
inc
pop
mov
push
or
sbb
aas
into
inc
dec
dec
fwait
subl
sub
or
into
pop
lock
sub
adc
ljmp
fcompl
cmc
mov
fimull
push
inc
cmpsb
stc
mov
leave
xchg
sbb
sub
mov
nop
push
or
jmp
out
pop
movsb
mov
jns
imul
cltd
pop
fildll
leave
pop
xor
or
add
cs
scas
movsl
xor
xchg
pop
jne
xchg
xor
ds
xchg
add
mov
test
pop
sbb
mov
xor
inc
out
das
jp
call
xor
leave
in
imul
adc
mov
stc
inc
xchg
cmpsl
xchg
lea
mov
enter
bound
imull
movsb
jg
in
fcoms
xor
push
addb
add
or
push
cwtl
int3
rorb
xchg
mov
xchg
lea
mov
addr16
fwait
hlt
mov
or
mov
out
aam
cmp
leave
loope
lods
pop
pop
push
imul
ljmp
test
mov
and
sti
jnp
fsubs
fsubrs
push
or
icebp
lcall
mov
aaa
cmp
add
adc
sub
pop
pop
sbb
mov
insb
or
scas
and
dec
cwtl
aad
loop
les
push
jne
dec
mov
cmpsl
cmp
popa
fwait
gs
inc
adc
nop
scas
push
adc
dec
sub
jne
or
push
pop
jb
test
or
sahf
pop
pushf
loopne
les
sub
pop
mov
jnp
bound
ret
icebp
mov
leave
push
jle
int
daa
or
xchg
jbe
pop
cmpsl
bound
add
inc
mov
push
dec
jnp
lret
pop
xor
fs
pushf
xor
push
cwtl
mov
mov
pop
out
mov
in
scas
jo
fdivrs
sbb
loopne
mov
and
push
insb
mov
fucomp
sbb
sub
cmp
jecxz
cmc
fnsave
add
xchg
out
push
sbb
mov
not
das
ret
mov
mov
jo
xchg
dec
mov
seta
std
cmp
push
xchg
fsubl
outsb
push
push
cld
jp
cmpsl
adc
aas
lret
cmpsb
idivl
call
in
lret
and
scas
or
andl
scas
sbbb
fidivrs
and
jne
in
push
xchg
mov
cs
cmp
mov
popa
jns
push
fsubr
shrl
xchg
aam
inc
in
cmpsb
lods
pop
mov
data16
or
dec
lock
cltd
enter
xchg
dec
xchg
cmp
cwtl
sub
sbb
sbbb
in
cmp
adc
add
mov
cltd
test
xchg
cwtl
xchg
push
pusha
xchg
mov
shrl
adc
fwait
mov
andps
les
gs
mov
pop
mov
cmp
lods
cwtl
aas
stos
push
jno
mov
lfs
sub
jmp
testb
jmp
imull
push
mov
mov
lcall
push
rolb
mov
sbb
push
jns
pop
pop
lea
sarb
repnz
je
cmp
cmp
xchg
pop
or
scas
flds
lahf
push
jmp
mov
xor
into
stc
je
add
je
pusha
imul
unpcklps
lahf
out
aam
jae
test
mov
jge
cmp
xor
xchg
add
add
xchg
movsb
imul
sbb
mov
pop
inc
clc
scas
sbb
stos
sbb
inc
iret
int3
or
cld
leave
or
or
into
push
ljmp
stos
rol
adc
cmp
movsl
add
bound
leave
adc
cmp
push
and
aam
pop
fdivrp
mov
or
mov
mov
lea
mov
lock
hlt
push
adc
leave
mov
and
cld
idivb
mov
leave
sub
notb
loope
out
or
mulb
or
pusha
insb
lret
jb
and
jns
mov
fistpll
add
add
xorl
test
jbe
fwait
shrb
iret
cltd
cmp
mov
mov
fwait
mov
ja
mov
sub
push
sub
aam
sbb
mov
arpl
push
leave
cltd
repz
add
xchg
pop
xchg
mov
movsb
or
pop
inc
add
ss
fnstenv
pop
outsl
gs
push
push
test
or
pop
imul
push
dec
imul
sti
pop
mov
pop
dec
jns
lret
pop
pop
cli
and
mov
enter
xor
cmp
push
ret
inc
jnp
clc
xchg
imul
sarb
std
xchg
or
adc
pop
and
adc
negl
scas
and
add
or
sti
cs
jg
fs
loop
scas
movsb
repnz
or
or
popa
push
cs
test
fidivl
lret
xchg
lret
sbb
test
outsb
call
xor
mov
ljmp
pop
inc
cmpsl
jmp
xorb
pop
cmp
popa
fidivrl
scas
lods
pop
ds
inc
out
mov
jp
or
mov
cld
jae
xchg
cmp
sbb
dec
sti
lock
sub
jae
xor
in
dec
push
call
push
pop
cmp
cli
mov
push
dec
pop
add
icebp
lds
sub
fld
push
xor
mov
pusha
sbb
aas
fstl
into
sbb
cmovae
in
loope
cwtl
sbb
add
sbb
push
or
out
loopne
push
into
inc
pop
imul
lods
or
push
in
pop
cld
imul
dec
mov
sub
sub
ja
shrb
inc
mov
std
xor
or
in
inc
cmpsl
ret
inc
or
fs
push
cmp
outsl
mov
adc
jge
mov
dec
fs
in
mov
mov
mov
insl
sub
fwait
or
xor
pop
mov
jge
lods
in
cwtl
sub
out
sub
hlt
sub
cs
test
stos
call
mov
jle
dec
dec
push
mov
adc
push
ret
pusha
push
into
addl
loopne
stos
jbe
cwtd
popa
jnp
jnp
lods
inc
sub
push
push
daa
pop
ud2
xchg
add
aaa
push
cmc
push
or
cs
std
fildll
cmc
imul
and
xor
int
xor
push
cmpsl
loopne
shlb
hlt
out
movsb
and
dec
gs
and
daa
cli
addb
mul
bound
adc
push
pop
xlat
aam
sbb
sub
je
adc
fwait
out
fldenv
lods
add
loop
sub
xchg
sub
fucomip
xor
pop
xorb
out
stos
lret
xor
mov
std
mov
dec
bnd
mov
decl
jg
movsl
repz
pop
jo
mov
mov
pushf
mov
fs
xchg
shll
repnz
inc
ljmp
mov
mov
movsb
leave
movsb
add
arpl
xchg
push
push
sti
outsb
rclb
sub
xor
xchg
jbe
xchg
mov
add
cwtl
jecxz
imul
cmp
aaa
aas
outsl
xchg
aam
xlat
out
and
dec
dec
fsts
fsubr
iret
jno
lock
jmp
mov
dec
jne
in
aaa
sbb
hlt
testl
jnp
imul
adc
out
dec
pop
daa
mov
es
pop
xchg
inc
sub
mov
sbb
xchg
lock
aad
jmp
xchg
test
fsubrs
jp
pushf
mov
push
ss
enter
pop
std
shll
inc
into
inc
hlt
push
fidivs
lea
insb
inc
cmp
js
mov
mov
jle
mov
dec
adc
jnp
and
out
shl
punpckhwd
or
xchg
out
push
loope
xor
dec
stc
clc
cmpsl
push
add
jb
lahf
stos
xor
arpl
cmpsb
movsb
mov
lods
xchg
lods
add
sbb
and
lds
in
xchg
jmp
js
in
dec
xchg
sbb
cli
jge
scas
shlb
pop
mov
rorl
lds
inc
fiaddl
pop
jmp
and
out
mov
imul
push
sbb
shl
inc
cmc
aam
dec
mov
and
mov
push
cmp
sub
mov
je
mov
popa
xchg
inc
movl
iret
test
and
pop
stc
hlt
fdivrp
das
adc
dec
iret
xchg
lea
and
mov
inc
into
cmpsl
push
icebp
aas
mov
aad
aad
das
rcr
mov
out
pop
test
pop
mov
xchg
pop
sbb
sbb
clc
cmpl
and
shll
shrl
adc
adc
dec
insb
jl
jp
test
and
idivl
mov
xchg
mov
int3
rcll
or
xor
inc
jmp
mov
lds
orb
rorb
jge
push
push
inc
xchg
js
mov
pop
fwait
mov
stos
rcll
jnp
push
push
sub
cmpsb
popf
in
adc
sub
xchg
cwtl
dec
jg
cmp
hlt
pusha
or
cmc
test
dec
mov
in
or
inc
or
outsb
cmp
adc
sbb
enter
iret
jmp
mov
je
sbb
dec
xor
dec
xor
dec
popa
pop
fsubrl
roll
sbb
cmpsl
ret
repnz
cmp
jb
mov
pop
cmc
outsb
into
in
stc
lcall
push
inc
cmpl
test
cmpsb
pushf
push
inc
ret
faddl
xorl
jae
lods
sbb
ja
xchg
and
xchg
fs
dec
into
shl
or
loop
test
es
jns
into
fisubrs
jl
aam
std
repnz
push
cmp
pop
cmp
mov
inc
mov
loop
cmp
inc
dec
fcmovnb
popa
push
scas
pop
pop
cli
push
jno
mov
cmp
shll
cltd
xchg
xor
in
in
mov
xor
mov
add
daa
inc
rcl
jmp
out
pop
xor
cmp
fs
pop
shrb
cwtl
adc
sub
nop
fwait
jl
shlb
sub
fdivrp
shlb
test
cmp
xor
fdivrl
out
pushf
int3
out
dec
mov
ja
cli
pop
scas
jbe
push
js
fs
cwtl
sub
into
not
mov
test
loopne
ss
jbe
loopne
jg
push
mov
pop
lods
lock
sti
stc
stos
pop
jl
enter
loopne
or
push
bound
cmp
dec
or
add
data16
inc
pop
loop
jge
ret
cmp
loop
outsl
xor
hlt
push
lret
mov
fadds
push
dec
jnp
mov
cld
cwtl
outsl
daa
dec
repz
lahf
or
xchg
xor
dec
lods
xchg
pop
leave
in
mov
negb
int3
inc
ja
sbb
pop
mov
or
jae
imul
lret
dec
lods
sub
pop
xchg
movsb
ficoml
cs
pop
mov
push
mov
addr16
inc
pop
into
rcrb
push
or
ret
iret
pop
xchg
dec
icebp
pop
dec
mov
mov
cs
pop
in
lea
das
stos
test
adc
or
std
add
shrd
jae
test
movsb
adc
xor
dec
pop
lds
out
or
out
loopne
mov
addr16
shlb
fnstcw
sahf
sbb
jnp
rcrb
mov
and
pop
leave
adc
stos
out
addr16
lds
mov
test
push
incl
in
std
jge
pop
mulb
jne
leave
jle
mov
pop
in
stc
lret
xchg
in
in
sahf
cmp
std
fiaddl
and
cwtl
test
jno
xchg
mov
movsb
cmpsl
test
and
xchg
cmp
loope
daa
jg
jle
add
ds
stos
lds
decb
and
mov
and
jge
ljmp
push
aad
sbb
xor
and
hlt
inc
int
aad
lods
sbb
fmulp
xchg
fstpt
xor
pusha
lahf
cmp
jae
xor
cmp
movsl
pushf
movsb
jmp
fsubrp
mov
fcoml
inc
mov
xor
fbld
testl
mov
into
push
out
and
aas
or
inc
inc
jnp
sub
xor
aaa
jge
mov
inc
xchg
fdivrs
xor
or
std
push
pop
jecxz
mov
mov
mov
jp
cmp
loop
dec
es
leave
xchg
ds
frstor
xchg
mov
xor
gs
push
mov
push
ljmp
test
in
xchg
ja
mov
or
xchg
xor
jno
jns
hlt
jg
and
lcall
inc
pop
and
sub
cmp
shl
fcmovnu
xchg
test
mov
imul
sahf
pop
lret
add
xor
ja
aad
pushf
movsl
sarb
fistps
push
outsb
push
mov
jne
int3
mov
imul
scas
add
arpl
test
sbb
dec
cmp
pop
stc
in
repnz
addr16
adc
loop
sti
mov
fimull
pop
jbe
jnp
jmp
lock
ret
sub
mov
in
mov
xor
pop
pusha
int
lock
pop
adc
add
xor
movb
test
inc
inc
add
mov
ficoms
push
pop
add
cwtl
arpl
popf
jg
dec
lret
push
inc
ret
pop
dec
fimull
outsb
mov
movsl
ja
repz
jbe
mov
add
jae
rcrl
mov
push
inc
sub
adc
fiadds
push
sub
pop
lahf
jmp
fisttps
pop
fistps
ds
jnp
inc
sbb
sbb
mov
cld
ja
shr
arpl
add
mov
or
pop
test
jae
aad
cmp
dec
cs
call
cmp
dec
fs
loop
mov
fs
les
pop
lahf
cmp
imul
dec
pop
stos
pmaxsw
ja
cmpb
jo
cmp
das
in
daa
mov
fwait
jmp
lods
jl
js
cmp
es
mov
mov
jae
push
imul
imul
xchg
popf
mov
jae
mov
and
mov
mov
js
movsb
movsb
push
xchg
cmpb
pop
imul
pop
cmp
lock
add
scas
sti
scas
jb
pop
and
mov
rcrl
loopne
jl
push
aaa
fcoms
pop
rcll
push
add
int3
adc
cltd
loope
push
clc
out
add
sti
fsubr
ss
test
inc
add
jecxz
fnstsw
outsb
mov
stos
xor
xor
jg
jge
xor
lahf
fnstenv
inc
mov
cmp
add
sarl
mov
inc
pop
xor
jno
pop
xor
inc
out
cmp
push
jge
hlt
mov
mov
scas
cmp
test
pop
dec
fnstcw
jno
cmpsl
test
inc
cld
loopne
movsl
xorb
ret
sub
push
dec
add
pushf
out
cmp
or
xchg
frstor
stos
das
call
loopne
or
cmc
dec
scas
test
or
int
add
cmp
sbb
push
pop
movsb
in
mov
aas
jl
outsl
or
test
stos
pop
aaa
mov
pop
loop
cmp
dec
mov
mov
xchg
leave
add
jge
xlat
test
std
jns
jecxz
repz
lods
xchg
cld
lcall
push
xchg
cmpsl
mov
push
xchg
divb
inc
xor
cmp
xchg
xchg
jg
xor
jle
jnp
cmp
add
mov
call
in
and
dec
pop
arpl
pop
sub
sbb
adc
mov
loope
fimuls
cmp
push
fstpt
sbb
sub
cmpsl
jns
in
xor
lret
jbe
inc
out
push
cmpsb
out
stos
ret
ja
xchg
jp
in
out
pop
gs
rcll
aam
ds
cltd
out
enter
fadds
es
push
inc
or
and
dec
xchg
je
or
loope
std
jge
aaa
divb
das
in
sbb
movsl
fwait
and
mov
insl
aaa
add
pop
ret
sub
xchg
aam
cltd
dec
add
stos
jns
xchg
sub
pop
in
jbe
lret
push
lds
mov
or
nopl
aas
pusha
outsb
dec
jle
or
jbe
mov
xor
pop
lods
add
and
dec
mov
dec
call
mov
cld
call
les
mov
movb
jge
sti
int
xchg
sti
movsb
and
lret
arpl
rclb
imul
push
and
add
iret
xor
call
cmp
or
mov
and
sub
cmp
add
pop
daa
outsl
sbb
mov
mov
cmp
sub
and
mov
mov
xchg
clc
jbe
add
sub
push
mov
jg
icebp
fcomps
mov
xor
push
push
bound
push
ret
pop
xchg
and
jae
clc
fsubrs
and
push
fbstp
cld
ret
add
jbe
adc
pop
icebp
jmp
out
jle
pop
and
fs
mov
out
in
cmpsb
xor
cwtl
jns
in
arpl
js
fbld
addb
into
or
nop
movsl
cli
xchg
cmp
adc
xchg
int
cmpsl
dec
loop
pop
lea
push
xor
push
adc
clc
push
mov
push
xchg
xchg
jecxz
icebp
mov
mov
add
sub
adc
out
lea
and
pop
addr16
adc
aad
ja
dec
loopne
int
xchg
lea
aam
push
cwtl
in
adc
add
dec
push
mov
arpl
icebp
xor
pop
aas
lods
cmp
jbe
mov
int
insb
cmp
arpl
lds
and
or
inc
jle
cld
ss
dec
pop
or
jmp
mov
fbstp
sbb
mov
jne
jns
jns
mov
int3
leave
mov
inc
loopne
test
lock
inc
incb
jbe
int
sub
push
pop
pop
dec
enter
cmpsb
xor
sub
shll
mov
lcall
adc
mov
xor
nop
and
xchg
imul
cmc
enter
xlat
or
cltd
xchg
addb
imul
cltd
je
inc
dec
xchg
adc
adcl
mov
fildl
sub
les
jl
and
test
mov
outsb
cmp
clc
jnp
repz
pop
sub
enter
jle
in
nop
lods
jnp
jmp
out
xchg
mov
adc
mov
xor
rorl
mov
add
repz
sti
lret
fld
aaa
fidivrs
xor
sarl
jb
add
inc
cmpsb
xor
or
aad
loope
ret
push
shll
ret
das
adc
or
sarb
dec
imul
mov
mov
mov
sbb
sbb
push
adc
jp
adc
sbb
fiadds
sbb
loopne
movsl
mov
popf
cmp
jmp
cltd
fstpl
insl
sbb
mov
cmc
nop
jb
aas
adc
cli
add
mov
sub
fdivs
inc
push
inc
inc
sub
fdivs
jne
int3
mov
or
push
xchg
insb
daa
stc
test
outsl
std
aas
nop
repnz
stos
xchg
pop
mov
jecxz
xor
jl
mov
int3
pop
jnp
mov
scas
in
mov
push
and
cmp
sti
sub
rorl
mov
fistps
scas
in
xchg
mov
loope
adc
adc
dec
or
mov
insl
shll
mov
push
xor
imul
sub
adc
data16
mov
mov
sbb
icebp
sahf
rolb
orb
in
mov
xchg
inc
shll
lods
push
inc
sub
push
in
push
mov
xor
repz
cmp
pop
pop
sti
daa
pop
lret
call
cmpsl
inc
inc
pushf
add
sbb
push
std
dec
cmp
cli
loop
int
mov
aas
icebp
test
jnp
push
push
push
mov
pusha
jno
xchg
xchg
sbb
out
bound
or
sub
scas
sub
pop
int3
push
pop
push
jnp
and
in
lock
ret
and
shlb
test
push
push
leave
inc
je
or
jbe
ret
mov
sub
pop
xor
jnp
push
mov
enter
xchg
dec
cld
jle
lret
hlt
add
mov
fcomps
mov
mov
or
jg
dec
iret
dec
push
mov
fnsave
mov
sbb
negl
pop
mov
data16
xchg
loopne
sbbl
cmp
gs
fisubs
hlt
inc
out
lock
sub
mov
jae
jecxz
push
cwtl
test
cli
or
ret
ds
lea
push
jmp
pop
xor
mov
pop
jne
fnsave
bound
testl
mulb
mov
lods
cmpsb
je
int3
hlt
fidivrs
inc
add
fdivl
push
pop
cld
pusha
shrb
lods
mov
adc
mov
push
sahf
push
xor
cs
pop
iret
rolb
dec
fidivrl
xor
popf
xchg
adcl
sub
shld
rclb
and
adc
mov
jne
push
ret
icebp
outsl
jg
mov
fwait
mov
jb
fisubrl
shlb
cmp
add
pop
cmp
push
cmp
xchg
push
adcl
pop
daa
pop
into
in
xor
adc
repnz
scas
gs
in
pushw
inc
shrl
add
xchg
pop
loopne
and
mov
lahf
or
pop
inc
imul
sub
imul
outsb
jne
or
mov
test
inc
mov
lret
lods
rcl
lcall
mov
xor
insl
out
mov
sbb
outsb
cmpsb
mov
repz
push
xchg
xor
sahf
mov
sub
jmp
mov
lds
inc
push
sbb
and
test
mov
cli
sahf
inc
add
adc
call
jnp
lahf
loop
lret
add
adc
mov
adc
lock
xchg
dec
in
fsubrl
jne
jl
push
mov
sub
lret
jmp
cmp
sub
and
cltd
adc
data16
mov
movsb
push
xchg
test
mov
pop
jnp
std
sbb
fwait
int3
jbe
adc
or
mov
sub
add
push
pop
imulb
mov
or
arpl
pop
xor
jo
nop
testb
mov
or
mov
jbe
mov
sub
and
add
pop
pushf
mov
test
incl
pushf
test
and
hlt
add
and
xchg
mov
mov
jmp
repz
dec
fstpt
mov
scas
xchg
data16
es
jmp
insb
xchg
je
or
orb
pop
xchg
adcl
shll
std
push
movsb
sub
psubusw
jno
lret
addr16
push
in
ret
jle
mov
fsubr
mov
inc
sub
ret
gs
pop
push
xor
mov
mov
test
xchg
add
and
popa
sub
shr
cmp
sub
sub
in
ret
rclb
dec
dec
into
rcr
push
jmp
daa
aad
insl
test
ds
cmpsl
js
add
gs
pop
gs
adc
bound
dec
sub
inc
pop
push
mov
outsb
mov
in
and
fnsave
push
or
cmc
scas
lds
popf
inc
stos
mov
add
sahf
inc
sbb
leave
jno
lahf
dec
adc
mov
out
in
mov
imul
insb
out
push
lea
shlb
ljmp
pop
test
fwait
dec
inc
mov
inc
jb
push
mov
and
adc
or
xlat
shlb
ja
aad
adc
cmp
lahf
fidivrs
lret
cmp
mov
mov
mov
aad
jb
lcall
lods
pop
rcl
xor
fidivrs
or
mov
cmp
pop
out
push
idivl
cltd
clc
xorl
push
sarl
sbb
imul
cli
in
mov
push
stc
inc
clc
jge
jmp
loopne
aaa
mov
dec
mov
adc
or
dec
sub
divl
inc
cmp
inc
mov
cmp
test
mov
sbb
mov
loop
je
push
lock
push
mov
sbb
xchg
mov
dec
dec
cmp
mov
inc
rcll
adc
mov
cli
es
cld
movsb
sub
andl
xchg
add
or
xor
dec
out
xor
adc
push
xor
fidivrs
xchg
rcrb
dec
clc
jns
iret
and
mov
aad
js
loope
xchg
add
pop
mov
in
ret
in
es
bound
mov
mov
mov
dec
ret
push
ljmp
pusha
xchg
jo
shld
sub
mov
sti
xchg
add
mov
out
data16
mov
add
cltd
cmpsb
fistpl
testb
call
cli
in
loope
mov
cmpsb
adc
add
mov
mov
push
dec
sbb
jo
mov
mov
mov
repz
test
dec
fstl
adc
add
or
jbe
repz
ret
pop
xor
jns
out
xchg
mov
adc
xor
daa
adc
cmp
mov
movsb
push
and
mov
lea
inc
xchg
xchg
and
ret
xchg
iret
pop
push
push
or
notl
jle
divl
ret
sbb
and
stos
cmp
ret
imul
iret
sbb
xchg
sbb
jl
and
lods
andl
lods
les
or
push
push
cli
das
scas
push
aas
pop
xchg
xchg
lret
pop
mov
loope
es
inc
arpl
sub
cmp
scas
ret
inc
adc
push
je,pn
sbb
or
or
cmp
mov
hlt
pop
outsb
aas
ljmp
clc
mov
dec
imul
sti
xchg
sub
xchg
scas
out
mov
imul
fimuls
dec
inc
or
out
sti
iret
shl
xchg
in
sbb
mov
rorl
movb
sub
ret
insl
xor
aad
and
sub
push
int
jns
inc
and
imul
dec
out
ss
mov
jbe
push
outsb
inc
outsl
and
push
pop
in
mov
arpl
out
push
push
adc
mov
dec
dec
add
xchg
adc
in
lcall
test
cmpsl
and
imul
mov
lret
and
div
popa
pushf
sti
xor
add
cmc
je
xchg
sbb
jo
jbe
cmp
jne
jmp
and
cmp
inc
lods
mov
xor
adc
sbb
scas
outsb
fnsave
sbb
cli
fildll
dec
pop
pop
or
popa
mov
and
fistps
mov
fcmovbe
fld
shlb
jb
mov
mov
jbe
jns
lea
gs
lea
add
stos
repz
pop
inc
jo
dec
lahf
je
push
cltd
xor
adc
ret
jo
fistps
jge
xor
push
jl
jge
push
inc
sbb
sbb
test
imulb
sub
adc
mov
nop
cvttps2pi
mov
jecxz
dec
rclb
andl
xor
daa
imul
jl
sub
aaa
lds
push
das
ljmp
xor
imul
mov
das
in
js
add
rclb
jns
jbe
lods
xchg
and
cld
xchg
cli
and
loopne
xchg
fs
dec
jbe
out
in
push
sub
cmp
call
clc
sub
xchg
jo
outsb
cmpsl
add
movaps
icebp
outsb
lcall
inc
aam
cmpsb
or
mov
shrb
jp
add
rorl
jle
loop
mov
cmp
or
cmpsb
or
pushf
int3
sbb
inc
mov
popf
scas
mov
sbb
pushf
pop
nop
xor
js
fsubl
mov
add
sub
ficoml
cmc
std
pop
clc
jae
inc
ljmp
cmc
cmc
ret
mov
sarl
mov
in
out
fsubl
inc
inc
pop
xchg
mov
repz
adc
and
arpl
dec
mov
into
int
xor
mov
jecxz
stos
cmpsl
sbb
sbb
jg
xor
push
sbb
adc
popf
mov
pop
iret
lahf
cmp
iret
mov
scas
or
rorb
loope
mov
and
leave
push
adc
mov
xchg
xchg
dec
pop
enter
test
sub
clts
push
inc
add
fmulp
dec
dec
outsl
aas
push
andl
sub
ret
shl
pop
dec
inc
xchg
sub
add
adc
adc
cmc
pop
ljmp
fisubs
add
gs
push
cmp
loope
ret
pop
or
or
or
cli
pop
lret
je
idiv
leave
insb
leave
cmp
mov
inc
jne
jl
jo
xor
jge
add
shl
in
or
out
inc
or
sti
push
outsl
clc
call
ss
push
push
lock
sbb
xchg
mov
cli
in
cli
jnp
loopne
xor
pop
ds
flds
sub
lea
out
stc
adc
or
lahf
mov
enter
pop
rcl
jp
or
and
mov
andb
cmp
loop
test
or
inc
lock
sti
addr16
imul
push
mov
addb
add
sub
jns
push
mov
push
cmpsb
ds
test
adc
les
inc
pop
and
in
or
pop
push
jnp
daa
movsb
in
inc
mov
ja
sub
adc
aam
leave
adc
dec
mov
sti
lcall
enter
mov
setbe
cmp
pushf
and
push
sbb
pushf
movl
mov
mov
pusha
add
inc
pop
sbb
push
push
xchg
jno
xchg
and
cli
add
sub
mov
sub
sbb
push
sub
insl
or
add
adcb
xor
fdivrl
test
push
stos
jo
loope
and
out
sub
add
and
daa
ljmp
jb
int
arpl
xor
popf
pop
rcr
xor
xchg
push
out
clc
popa
xchg
xlat
mov
or
xchg
es
fidivrl
or
ss
scas
loopne
xchg
movsb
inc
mov
in
mov
xchg
data16
add
pushf
jbe
fcomps
add
in
fs
scas
sahf
mov
sub
lahf
and
pop
push
xchg
iret
out
cltd
lret
sub
adcl
test
or
mov
add
pop
in
cs
insb
or
cld
pop
stc
mov
outsl
adc
push
pop
popa
and
js
jl
rorl
cmpsl
add
fbld
cmp
stos
push
sub
and
sbb
dec
and
mov
insb
push
scas
sbb
cmpsl
fsubp
mov
imul
push
aas
and
xchg
dec
in
jne
mov
add
push
scas
mov
in
popf
imul
cld
push
imulb
nop
or
adc
scas
and
enter
popf
imul
dec
xor
daa
pushf
xchg
mov
xor
pop
jbe
mov
popf
xor
lret
pop
test
ret
out
push
fisttpll
ret
aas
push
cmc
mov
and
cmp
jp
jp
ret
pop
xor
push
push
add
les
rorb
xchg
mov
cmp
out
cwtl
pushl
into
clc
mov
scas
inc
cmp
jne
xor
ss
arpl
and
ljmp
shrl
jns
cli
jp
es
ss
hlt
subl
add
inc
or
leave
mov
xchg
js,pt
insb
xchg
test
sub
icebp
cmp
xchg
push
pop
out
hlt
sti
fnstsw
sbb
or
aad
int
xor
lods
sub
and
or
mov
pop
and
out
pop
and
mov
mov
js
fistpl
mov
xor
or
aad
jge
fistl
aam
mov
push
std
adc
add
dec
in
push
fistps
cmp
mov
sahf
popf
sar
and
add
mov
mov
cli
in
adc
pop
cmpsb
repz
mov
mov
out
sbb
out
out
jne
inc
jbe
addl
nop
std
pop
fidivs
jecxz
bound
gs
lock
aaa
cmp
add
das
in
adcl
cli
ret
xor
cltd
cmp
repnz
test
and
or
push
dec
aam
xor
xchg
cmp
lods
insl
push
inc
in
xchg
clc
mov
out
mov
mov
xor
lahf
cmc
cltd
scas
lret
aam
lcall
repz
lods
das
rcrl
adc
mulb
jl
add
adc
fs
lret
mov
or
pushf
sub
lds
sahf
xchg
jg
out
mov
xchg
imul
gs
inc
adc
popa
jae
inc
or
pop
js
movsl
dec
fistpll
mov
pop
mov
clc
inc
mov
xor
add
mov
mov
shl
add
out
out
insb
sbb
cmc
xor
int
push
movsl
jl
es
fwait
movsl
inc
mov
pop
int3
lahf
mov
nop
rorb
lahf
andl
lahf
pusha
in
sti
inc
push
fnstsw
cmp
pop
or
outsb
sub
and
insb
out
mov
stos
cli
mov
inc
xor
cld
cmp
jl
loope
pop
imul
stc
je
test
push
pop
mov
jnp
cmp
pop
and
filds
aad
mov
cmp
in
jg
inc
les
ja
add
popf
ss
hlt
mul
sbb
int
jnp
loope
and
dec
mov
mov
xor
jo
add
inc
inc
idivb
jo
add
mov
mov
lahf
in
lahf
repnz
lds
ja
lods
addb
mov
outsl
lock
mov
cmpsl
pop
ret
pop
dec
add
mov
loopne
adc
stc
jle
sub
mov
xchg
sub
lock
push
cmpsl
adc
aaa
push
pop
mov
ret
mov
adc
stc
xor
lock
shrb
insb
js
popf
test
adc
mov
das
adc
jp
pushf
push
add
mov
push
add
inc
xor
sbb
imul
mov
call
push
add
cmp
mov
pop
imul
movaps
jmp
jbe
sarb
xchg
dec
aam
test
lahf
cmpsl
addr16
repnz
orb
fstpt
cmpsb
cmp
js
insl
pop
push
rorb
stos
cmpsl
add
out
xor
movsb
adc
jecxz
mov
add
xchg
mov
scas
cmpsb
push
fisttpl
mov
or
into
pop
xorl
lea
ucomiss
loop
adc
sub
mov
push
sbb
pop
adc
mov
adc
cs
sahf
idiv
dec
int
cmp
lahf
jmp
or
or
xchg
cmpsl
mov
ret
pop
pop
iret
mov
hlt
push
pusha
decl
sub
loop
mov
fdivrs
jns
ficomps
adc
inc
adc
stc
jne
subl
or
cmp
and
push
pop
dec
out
pop
fs
inc
cwtl
cmc
ret
imulb
mov
xor
sub
or
jmp
mov
and
xor
int3
mov
fs
and
out
push
xor
jl
divb
testb
addr16
imul
shlb
fwait
imul
pop
not
mov
push
cmp
pusha
cmp
js
movsl
cmc
test
mov
dec
pop
dec
les
xor
repz
add
js
fnstsw
pop
mov
es
pop
sbb
loop
and
sbb
imul
ja,pt
xchg
fisubl
imul
mov
adc
rorl
stos
add
add
iret
mov
inc
adc
xchg
pop
add
sbb
add
cli
jbe
test
flds
xlat
js
cmpsl
imul
ja
push
repz
outsl
mov
adc
push
mov
dec
adc
mov
or
cli
cli
mov
inc
aas
subb
xor
into
in
mov
adc
daa
fwait
cmp
adc
enter
or
stc
sbb
cmp
xchg
jmp
mov
inc
xchg
test
mov
or
xorl
dec
js
mov
pop
cs
pushf
and
insb
mov
and
int
rcrl
outsb
jae
inc
xchg
mov
dec
xchg
mov
add
and
js
jg
sti
push
xchg
lds
negl
dec
stc
sbb
js
jg
iret
push
sub
cmp
mov
inc
sti
adc
xor
jge
xchg
repnz
or
fsubrl
add
das
push
xchg
jecxz
dec
or
mov
shlb
xor
adc
xchg
push
arpl
inc
and
sub
add
jne
jg
xor
insl
notl
or
popa
fldl2t
cld
rolb
shlb
xor
add
jae
in
jg
addr16
lock
jno
jl
sti
pop
mov
insb
fisubrl
pop
pop
mov
out
inc
ret
adc
idivb
pusha
mov
dec
ds
js
shlb
mov
cmp
inc
mov
jp
out
lea
xchg
jne
mov
data16
es
push
mov
loopne
mov
mov
cmc
daa
andl
jg
jecxz
mov
inc
ror
pop
pop
test
je
adc
sbb
nop
ljmp
int
test
mov
movl
mov
xor
mov
sbb
push
lret
xor
hlt
add
ljmp
pop
lds
imul
xchg
mov
mov
pop
test
test
lock
inc
xor
pop
ret
lret
pop
sub
pop
or
mov
cmpb
cmp
jl
push
pop
aad
popf
xor
dec
nop
scas
xchg
inc
add
mov
out
push
xor
jg
mov
adc
loope
adc
ja
fisttpll
fisubrl
push
dec
clc
andl
arpl
sbb
xor
enterw
cltd
pop
stos
rcl
cmc
jge
or
test
leave
pop
icebp
xor
xchg
mov
jl
outsl
adc
xchg
inc
int3
mov
fcmovne
and
lcall
aad
jmp
aaa
fsub
sti
xchg
fcmovne
ljmp
test
pop
xor
mov
xor
shrl
jl
add
and
jne
in
shll
sbb
push
or
ljmp
mov
rol
jne
jo
mov
xor
dec
dec
dec
adc
mov
lods
std
movsl
mov
cmp
dec
push
aas
sbb
repz
pop
cmp
scas
mov
sbb
sub
xchg
xor
call
mov
adc
fstpl
cld
out
test
imul
stos
adc
inc
std
imul
mov
loope
push
adc
es
xor
fwait
loopne
or
jmp
sub
cmp
mov
fsubr
enter
cld
in
inc
fcmovb
ss
cld
dec
jne
repz
outsb
mov
call
notl
fmuls
das
sahf
add
mov
lds
dec
lds
dec
mov
adcl
cmpsl
adc
loope
cmp
popa
xchg
mov
fucomp
in
or
mov
mov
icebp
je
scas
bound
xchg
adc
or
jle
xchg
cli
sbb
jecxz
scas
sti
imul
sub
ja
pop
aas
aad
cmpsb
push
sub
loopne
daa
xor
ljmp
outsb
shl
dec
out
stc
dec
mov
bound
cmp
xchg
mov
out
int3
pop
imul
andb
out
dec
mov
jl
jb
or
cld
pop
and
fdivrs
push
jmp
add
ret
xchg
xchg
push
sbb
jo
inc
lcall
scas
xchg
jp
mov
xchg
adc
xchg
push
repz
pop
daa
lods
hlt
add
cli
inc
xchg
pop
into
push
dec
test
push
and
unpckhps
fwait
cwtl
outsl
xlat
ljmp
mov
ja
and
add
add
sahf
xlat
jle
jbe
popf
lds
pop
cmpsl
xor
mov
lock
xor
mov
loop
pop
and
xor
mov
mov
mov
dec
xchg
les
dec
xchg
int3
push
push
mov
call
into
inc
adc
add
popf
jno
cmp
scas
gs
dec
jge
mov
rolb
fs
sub
dec
push
sub
imul
mov
jo
jne
push
push
adcb
cmp
mov
jns
lea
push
sub
sbb
mov
decb
inc
sub
out
xchg
push
xchg
and
add
js
dec
call
or
shlb
pop
cmpsl
pushf
xor
in
stos
mov
sbb
daa
or
mov
stc
sub
dec
xor
int
arpl
arpl
rcrl
dec
xor
data16
and
ud2
jo
testb
or
jb
insb
add
aam
add
or
push
or
jnp
jnp
and
and
bound
das
je
mov
mov
push
cli
stc
lcall
or
cmp
add
mov
push
xorb
mov
mov
push
xor
jbe
pop
jle
stos
fwait
mov
mov
shll
push
fnsave
jb
gs
fidivrs
pop
in
iret
loopne
cmp
shrl
adc
ds
cld
fcomps
push
hlt
cmpsb
movsb
mov
in
jge
or
insb
shl
inc
mov
push
fisttpll
mov
icebp
mov
sbb
inc
adc
in
movsl
push
test
or
bound
repnz
xchg
fs
mov
inc
mov
add
jecxz
cmc
sbb
mov
lds
cli
and
ds
dec
lahf
push
insb
sbb
dec
sub
pop
in
cs
aam
ds
jge
clc
push
call
popf
inc
sub
mov
and
insb
nop
fwait
xor
ljmp
pop
jmp
mov
clc
mov
xor
stc
testb
dec
das
xchg
stos
mov
jmp
loop
pop
stos
push
scas
sarb
adc
sbb
inc
cmp
cmp
lret
daa
inc
mov
shr
leave
test
fs
in
push
sbb
movsb
addr16
jge
arpl
fmull
fs
jl
cmc
or
clc
xor
sub
inc
dec
decb
xor
mov
lcall
mov
cmp
jae
sub
jecxz
mov
std
pop
lret
add
sbb
push
inc
jmp
orl
test
inc
inc
stos
cs
dec
inc
aam
inc
shlb
dec
jo
sarb
test
enter
push
std
adc
nop
ret
cmc
out
dec
sbb
cmpsb
mull
mov
mov
jp
add
cmp
lea
dec
pop
mov
inc
test
fsubrs
sti
and
xchg
out
fxch
mov
aas
mov
mov
sbb
dec
cwtl
sahf
push
mov
insl
out
ror
mov
lock
repnz
clc
pop
add
adc
out
pop
repnz
pop
cmp
dec
mov
cs
xor
jo
pop
into
fistpl
push
push
mov
cltd
sti
xor
jnp
add
roll
js
cmc
pop
fwait
pop
ljmp
pop
in
fadd
rcrl
xchg
mov
add
sti
rcrl
sub
sti
sbb
sub
push
push
icebp
jns
sub
and
mov
xchg
rcr
and
cli
movsl
movsb
mov
idivb
xor
mov
xor
das
pop
cli
test
jle
jg
dec
mov
daa
add
xchg
cli
cld
cmp
jge
push
cs
sbb
fs
enter
ret
mov
adc
mov
jmp
insl
mov
adc
xlat
fisttps
pop
pop
jbe
mov
dec
pop
and
dec
sub
lret
pop
dec
paddsb
xor
int
mov
push
jno
push
cwtl
ror
and
inc
or
add
ss
push
xlat
pop
call
lret
arpl
mov
dec
pop
cmpsb
add
xchg
gs
pushf
gs
sub
jmp
or
cli
cli
pop
mov
add
in
dec
test
movsb
and
xchg
shlb
shll
mov
mov
or
in
in
xchg
cmp
or
cli
mov
jp
rorl
std
fstpl
call
pop
sbb
push
loop
jb
push
fdiv
or
sbb
adc
xchg
imul
fdiv
rcrb
rcll
ret
sub
cmp
xlat
push
jb
mov
movsl
or
sub
mov
lret
cmp
gs
pop
popa
movsb
mov
icebp
and
les
int
pop
xlat
or
inc
adc
aas
adc
cltd
push
gs
sub
sbb
loope
jne
jbe
inc
add
test
xor
pop
in
sub
into
jo
movsl
inc
mov
pop
fstpl
mov
adc
mov
test
daa
mov
and
or
shll
lahf
sub
iret
lahf
fsubrs
int3
and
push
jo
test
in
cltd
xor
movsl
mov
fwait
insl
es
loopne
mov
gs
iret
cmc
lcall
adc
sbb
stos
pop
xor
pop
inc
or
or
or
cld
push
aam
sbb
in
add
test
rol
cs
push
push
pop
xchg
test
push
or
mov
shl
cltd
loopne
pushf
inc
aam
adc
or
push
xchg
xchg
out
and
mov
jae
or
or
cmp
and
rol
cmp
jmp
jg
out
dec
xchg
fbstp
test
pop
xchg
insl
mov
or
jnp
sbb
loopne
insl
lret
xor
test
adc
iret
jle
cs
loope
add
cmp
cmp
inc
push
adc
mov
push
mov
inc
add
stos
xchg
mov
clc
in
clc
lret
pop
aad
imul
and
mov
jp
xchg
scas
int
sarb
dec
mov
lock
ja
call
jnp
lcall
add
pop
dec
enter
jo
push
cmc
sub
mov
imul
mov
pop
sbb
loop
lock
scas
shrb
xchg
stos
mov
push
mov
out
mov
addr16
cmp
in
test
movsb
xchg
xor
stos
cmp
mov
addb
lods
shl
in
sti
je
pop
add
arpl
mov
into
add
pusha
or
pop
pushl
xorb
js
fidivl
data16
flds
jae
scas
cmc
pop
mov
dec
jae
mov
sub
stos
xlat
xchg
mov
mov
xor
cmp
mov
adcl
out
aas
adc
nop
lods
fimuls
arpl
fwait
pop
lods
mov
xchg
mov
jl
pop
xor
lret
inc
shl
mov
or
mov
repnz
pushw
loopne
ljmp
inc
push
in
inc
int
pop
or
dec
fldcw
mov
pop
pop
cwtl
sub
cwtl
out
inc
movd
aas
movsl
push
hlt
mov
mov
push
shrl
add
jae
jae
sbbl
and
mov
es
ljmp
add
jmp
push
jge
into
mov
jae
mov
mov
or
xor
dec
aam
xor
test
xchg
test
loopne
mov
push
mov
add
jae
or
dec
or
ret
mov
fucompp
outsl
jge
jae
js
shl
shlb
in
cmp
je
jg
ss
jns
xchg
fwait
mov
pop
push
pop
in
aaa
fs
aas
push
jecxz
bound
push
leave
sbb
jle
push
mov
mov
aam
sub
addr16
arpl
push
push
inc
sub
or
fimuls
mov
dec
daa
lock
insl
in
push
fstpl
xchg
insb
scas
cmp
push
outsl
jg
cmp
fdivs
fld
jg
mov
add
xor
xchg
sbb
xor
mov
iret
ljmp
icebp
lock
fcomps
jge
cmpsb
and
or
mov
fsubrs
inc
sahf
cli
cli
add
mov
and
xor
jnp
mov
xor
cmp
push
xor
or
inc
fs
fcomp
dec
and
or
adc
pop
inc
dec
sub
jae,pt
sbb
std
notb
xor
negb
add
adc
out
out
or
dec
mov
cmc
icebp
stc
mov
jno
out
sub
jle
mov
adc
mov
adc
fisubrs
stos
sub
pop
and
xchg
fists
jb,pt
mov
xchg
add
pop
aad
iret
in
sub
and
icebp
outsb
push
ss
mov
jmp
pop
jns
cmp
dec
lods
pop
ds
xor
xchg
sarb
or
sti
ljmp
jo
test
in
jo
lahf
inc
pop
mov
mov
adc
ficompl
push
addr16
idivb
fsubp
cltd
rcll
rcl
dec
pushf
dec
sub
mov
push
out
xchg
push
mov
jecxz
push
jo
jno
in
sub
repz
ds
sarl
xor
pop
adc
bnd
aam
repz
inc
jge
jecxz
mov
push
bound
sbb
mov
xor
or
insl
inc
cmc
aas
and
cmpsb
loope
cmc
xor
push
pop
push
sti
aad
les
cmpsl
lock
inc
jle
fstpt
mov
pop
imul
pop
pop
or
cld
and
flds
test
mov
das
mov
test
pop
cmc
pop
jo
add
sbbb
lcall
mov
inc
adc
cmp
pop
xchg
jo
dec
mov
clc
out
popf
pop
lret
jmp
mov
pop
loopne
pusha
mov
xor
sahf
sbb
data16
and
jns
add
fdivrs
pop
xor
pop
out
adc
shlb
cmp
jne
adc
mov
cmp
loopne
cmp
fisubrl
insb
imul
stos
or
loope
stos
ficoml
movb
pop
sbb
and
jge
addl
xchg
gs
cmp
mov
mov
xchg
push
in
jnp
mov
mov
mov
popf
pop
mov
lret
cmp
or
cmp
pop
xor
pop
cltd
in
loope
int
dec
lock
shlb
push
mov
sti
pop
sbb
hlt
inc
cmp
add
pop
sbb
dec
shl
sbb
arpl
pop
add
sbb
sub
lahf
int3
dec
gs
in
cwtl
enter
cmpsl
bound
ds
adc
mov
mov
sbb
mov
aam
scas
mov
sub
add
xor
test
dec
fsubl
sbb
iret
movsb
xrelease
orb
cli
jns
shrb
cmp
cli
aad
jp
mov
xor
lods
jg
jg
lds
xchg
adc
in
js
cmpsb
cmp
or
cmp
dec
call
test
adc
xchg
mov
xchg
xchg
movsl
inc
jae
xchg
pop
cmpsb
xchg
fisttps
sub
jmp
es
test
andb
jmp
xor
jno
xor
push
mov
sub
je
add
daa
inc
data16
scas
daa
in
push
test
add
rolb
jge
inc
push
sbb
movsl
inc
outsb
push
sub
fistpll
xor
mov
test
sbb
xor
xor
call
xor
es
adc
xchg
shrl
mov
or
mov
cmp
ja
das
dec
push
mov
xchg
leave
cmpsb
mov
stos
dec
aaa
and
jp
mov
ret
inc
mov
test
mov
sub
imul
adc
sub
out
rcll
dec
inc
dec
cs
adc
imul
cld
pop
cwtl
out
ljmp
dec
fcoml
mov
fchs
mov
addr16
lret
popf
cmp
cs
inc
scas
or
repnz
xchg
jae
push
add
fwait
push
stos
xchg
in
fisttpl
ljmp
add
push
insb
cld
mov
ljmp
es
fidivrs
stc
imul
mov
ds
call
out
fsts
rorl
jp
cmp
mov
jns
test
jle
dec
scas
pop
xchg
insb
add
sbb
xor
iret
fidivrs
push
pop
push
lret
ljmp
sub
fiaddl
pusha
scas
cmp
cmpsb
dec
xchg
push
sti
in
mov
mov
icebp
mov
push
cld
daa
bound
stos
sub
inc
xor
ret
mov
out
stos
jl
sbb
insl
lret
fsubrs
inc
lods
out
std
xchg
loopne
adcl
in
cli
add
lcall
push
xor
xor
cmp
scas
or
pop
ds
ljmp
xor
add
mov
sahf
jnp
out
push
test
lock
push
icebp
sub
xor
jg
insl
add
cmpsl
jnp
loop
hlt
fidivs
lret
shrb
mov
insb
das
and
outsl
or
jb
push
sahf
push
fs
mov
out
push
or
adc
mov
adc
sbb
scas
or
jmp
std
mov
and
mov
or
scas
xor
and
jecxz,pt
adc
jecxz
dec
fldcw
cwtl
dec
sbb
sti
sbb
sahf
test
js
jp
test
cld
adc
or
xchg
arpl
sbb
and
sbb
sbb
jge
in
jae
xlat
mov
mov
out
push
mov
push
fldenv
dec
idiv
mul
test
push
test
lret
lcall
les
jb
jg
sahf
mov
stc
jbe
shll
cwtl
leave
xor
push
inc
pop
arpl
mov
mov
pop
loop
xor
scas
add
or
sub
jecxz
pop
pusha
int
inc
push
iret
push
pop
xchg
mov
clc
jb
add
pusha
das
data16
fisubrl
lret
in
cwtl
dec
bound
mov
push
dec
xchg
adc
shrl
popf
fbstp
xlat
xor
jecxz
insl
push
adc
mov
jbe
mov
dec
stos
cli
jbe
fldenv
cmp
mov
idiv
shll
jp
cmpsb
insl
imul
push
leave
movsb
push
jbe
push
out
shl
sbb
pop
aam
in
fbld
aaa
and
dec
cmpsl
mov
jmp
popf
daa
mov
inc
ret
cwtl
adc
pop
jae
test
out
ss
push
out
mov
add
fwait
inc
call
adc
add
xlat
sahf
push
inc
lea
and
rcl
out
dec
jno
js
notb
xor
mov
lahf
add
xchg
les
jb
fld
nop
enter
out
jne
mov
add
movsb
fsubrl
arpl
fs
jmp
xchg
push
jle
pop
lods
rclb
mov
xchg
fwait
sbb
pop
cmp
push
sbb
das
mov
lock
pushf
fstps
scas
bound
xor
xchg
sbb
cld
xor
sarl
loope
sub
add
mov
add
test
int3
fists
mov
ljmp
loop
or
loopne
jae
xor
xchg
jbe
xchg
add
cmp
push
insb
pop
es
push
sub
mov
daa
lret
and
into
cs
xor
sahf
mov
mov
adc
push
mov
sub
xor
cld
sbb
mov
test
popf
insb
adc
lds
imul
cld
cli
insl
xor
sbb
mov
jnp
daa
dec
adc
push
push
inc
xchg
inc
sahf
mov
sub
pop
jb
mov
and
lock
das
rcl
ret
jns
pop
fdivrl
sbb
aam
push
pop
std
sti
add
mov
enter
loope
pusha
mov
addr16
xor
and
nop
lock
fistpl
mov
mov
loop
das
sahf
call
popl
inc
xor
sbb
call
dec
sbb
jmp
andb
jno
push
sbb
shrb
push
jns
mov
mov
and
sub
jne
xor
cld
mov
lret
addr16
sub
sbb
imul
mov
mov
scas
insb
ret
xor
popf
push
ror
int3
es
test
pop
add
push
fwait
les
dec
add
push
jns
mov
adc
jo
sub
jl
out
push
pop
insl
lds
out
mov
movsb
mov
pop
xchg
aad
add
stos
idiv
loopne
mov
cmp
cld
or
mov
jb
mull
shll
test
std
scas
mov
push
mov
add
ret
sub
xor
in
fsubrl
movsb
mov
inc
pop
add
pusha
faddl
sub
dec
push
sbb
xor
xchg
insl
sbb
cld
arpl
int
adc
repz
fiaddl
jae
sti
or
hlt
rclb
int3
data16
mov
adc
xchg
outsl
mov
pop
jp
cli
cwtl
inc
aam
mov
adc
xor
add
aaa
jnp
push
mov
mov
scas
mov
shl
mov
mov
dec
jbe
mov
fwait
clc
push
sbb
jno
cmpl
jge
stc
xchg
adc
lods
xlat
pop
pop
lret
inc
aas
sbb
int
pop
jge
aaa
das
mov
cwtl
xchg
out
add
mov
xchg
loopne
mov
add
or
mov
loop
and
push
mov
dec
aaa
cmp
jns
add
mov
jge
cmp
imull
fidivrs
sbb
xchg
fsubs
fsubl
mov
arpl
inc
and
mov
adc
xor
push
jmp
push
ret
insl
les
and
mov
cmp
pusha
or
not
and
jnp
das
cmp
sarl
mov
loopne
aad
jg
inc
shrb
outsb
xor
test
test
cmc
clc
push
jo
push
dec
mov
sysret
pusha
out
test
addb
xor
jg
or
dec
and
push
dec
mov
and
and
jae
jmp
pop
pop
scas
jno
sub
xor
xchg
aad
cmp
xor
mov
pusha
sbb
dec
fstl
mov
adc
cltd
loopne
sbb
inc
xchg
mov
jge
movsl
pop
clc
sub
xchg
int
xor
jecxz
xchg
jecxz
cmp
popf
mov
xchg
xor
lret
sbb
test
push
adc
std
mov
jbe
cmp
int
test
lods
or
xchg
hlt
addb
int
das
flds
add
sbb
mov
push
int3
adc
fiaddl
push
aas
mov
adc
inc
rorl
sub
lods
lahf
pop
loop
ljmp
pop
loopne
imul
or
xlat
ret
outsb
cmpsb
sub
dec
pushf
data16
adc
adc
pusha
mov
cmp
popf
xchg
stc
cmp
adcb
pop
outsl
dec
mov
mov
inc
movsl
lcall
out
push
pop
loopne,pt
ds
mov
jg
sbb
sub
mull
jg
rolb
mov
insl
andb
je
inc
mov
pop
mov
mov
fcmovnb
add
movl
or
sub
call
lods
sarb
mov
stos
cmp
icebp
stos
cld
cmc
jg
mov
scas
jbe
loop
dec
loope
dec
mov
jbe
xchg
roll
cwtl
enter
xchg
arpl
out
lds
data16
mov
sbb
ss
fistpl
push
inc
icebp
std
fs
decb
call
add
cmp
cltd
int
mov
pop
mov
outsb
fdivrs
push
fistpll
mov
sub
mov
mov
into
sub
mov
mov
fildll
into
das
sahf
jno
xchg
mov
lds
test
leave
cltd
das
fwait
call
pop
dec
pop
subl
out
jl
or
add
xchg
int
adc
xchg
push
notl
sbb
adc
in
fldt
mov
jmp
pop
xor
decl
mov
sub
jbe
stos
shrl
mov
xor
ljmp
out
stc
pop
mov
fidivrl
add
fs
mov
pop
shl
push
inc
popf
js
fdivrs
sahf
das
xchg
sahf
icebp
addl
xorl
xorb
test
xchg
xchg
jl
mov
mov
test
add
mov
mov
es
loope
pop
inc
movsb
pop
dec
stos
movsl
les
sbb
clc
loopne
dec
inc
arpl
dec
testb
pop
fldcw
cmpsb
mov
lret
outsl
add
and
cmpsl
lret
test
scas
dec
push
sarb
data16
add
or
mov
sub
aas
mov
sbb
mov
push
inc
xchg
in
jo
inc
lcall
lea
orb
sbb
shrb
aas
into
sahf
jnp
enter
mov
hlt
std
jbe
test
mov
cs
pop
outsl
mov
jne
in
jae
xchg
pop
adc
jp
xacquire
stc
pusha
jns
jb
dec
test
insb
inc
imul
popa
shll
push
fstpl
cmc
pop
out
into
aad
xchg
xchg
pushw
and
js
mov
fdivrs
shl
dec
aam
sub
add
add
inc
loopne
push
jo
xchg
jp
jb
pop
mov
shrb
cli
movsl
push
inc
cmpsl
mul
data16
inc
fs
xor
jb
sti
pop
mov
decl
shll
push
inc
xor
jp
xor
jmp
aaa
cwtl
in
pop
jp
pop
loopne
jmp
fdiv
mov
inc
ficomps
mov
push
sbb
shlb
insl
inc
xor
dec
incl
and
sahf
xchg
out
std
adc
mov
sbb
sbb
aam
leave
inc
mov
imul
pop
add
je
dec
arpl
hlt
fisttpl
movsb
and
mov
incl
or
pop
lret
mov
jp
jbe
jp
in
mov
in
fisubrs
pop
cwtl
sahf
in
jmp
dec
mov
insl
dec
mov
daa
subb
idivb
pop
loopne
lods
pop
xor
jg
pop
and
sbb
ja
cld
sbb
jns
sub
jecxz
xor
pop
ss
push
push
and
loop
mov
cmc
jge
lahf
sbb
ret
mov
icebp
jg
mov
and
sub
scas
movsb
add
repnz
cmpsb
dec
push
dec
and
call
repnz
and
push
push
rcr
mov
mov
outsl
jnp
aad
jecxz
sbb
hlt
lods
mov
pop
lods
xor
push
jb
or
mov
popa
sahf
mov
adc
pushf
dec
fsubrl
cmp
mov
dec
xchg
inc
stos
in
push
and
aam
call
sbb
adc
add
pop
out
pop
loop
ljmp
inc
pushf
stos
cmpsl
cmp
test
mov
test
adc
push
mov
xor
out
icebp
imul
mov
mov
add
inc
shl
out
ret
or
imul
mov
lods
sub
shr
pushf
jecxz
pop
push
mov
les
repnz
sbb
adc
je
ret
es
jmp
aad
mov
adc
call
pop
out
xor
xor
and
pop
shlb
mov
mov
bound
or
rorb
mov
shlb
mov
fwait
shll
orb
or
sbb
sbb
pushf
fwait
repnz
xor
clc
cmp
pop
stc
loop
les
fwait
xchg
mov
pop
and
mov
lcall
sub
inc
or
into
ljmp
pop
ror
pop
sarb
loopne
inc
scas
adc
push
and
adc
popf
rorl
lds
xlat
xchg
xlat
sarb
cli
cmp
mov
shlb
xor
cmp
push
xchg
out
push
jp
cltd
movsb
inc
sub
sub
sbb
cltd
jmp
add
mov
arpl
add
xchg
adc
inc
adc
jo
xor
mov
int3
rcrb
xor
inc
inc
mov
adc
fists
xchg
cmp
mov
xor
stos
in
out
fs
test
ror
add
add
imul
loope
aas
dec
adc
mov
lret
sub
jo
mov
je
lret
push
leave
sbb
add
cmp
stc
and
stos
loop
ret
stos
test
in
lock
int3
push
or
ja
inc
loopne
adc
mov
out
ret
lahf
push
movl
xchg
mov
mov
jecxz
test
mov
mov
ja
outsb
gs
das
movsb
mov
push
sahf
int
mov
xchg
testb
add
pop
inc
cmpsl
xor
dec
repnz
xchg
ret
push
mov
pop
push
mov
cmp
dec
fisttpl
out
push
nop
test
sbb
lods
mov
into
jo
outsb
sub
adc
loopne
mov
pop
cmp
mov
sbb
mov
je
inc
lods
popa
psubusw
lahf
mov
jp
outsl
sub
jne
lret
daa
xor
int
and
clc
and
in
stc
xor
loopne
dec
inc
mov
sub
mov
inc
dec
pop
jo
adc
ljmp
xchg
mov
in
push
jmp
sub
lods
cltd
ja
jno
movl
pop
ret
mov
cmp
test
das
sub
lahf
push
mov
cmpsl
or
cmpsl
push
cmp
inc
mov
mov
pop
mov
xor
in
sahf
xchg
pop
lcall
pop
adc
stc
ficomps
iret
nop
mov
or
pop
sti
int3
mov
mov
int3
dec
add
dec
ficoml
dec
ds
dec
inc
mov
out
into
dec
mov
jno
mov
sub
shlb
fwait
mov
adc
cmp
aaa
pushf
sbb
push
xchg
mov
pop
jne
or
push
outsl
push
add
outsl
sar
add
pop
xorl
mov
mov
mov
or
adc
sbbl
jecxz
ljmpw
cmp
loope
cs
sbb
push
loopne
test
push
mov
lcall
dec
jne
push
pop
inc
fdivs
dec
leave
cld
lret
scas
fmuls
popf
or
mov
ljmp
pop
xor
testb
mov
nop
rorl
iret
pop
aas
sbb
nop
fimuls
mov
adc
aam
es
jbe
movsb
cltd
pop
sahf
int3
push
cmp
dec
adc
xor
leave
jl
xchg
and
mov
mov
mov
adcb
popf
mov
mov
je
repz
lds
xor
xchg
and
rolb
int3
and
jl
test
aas
ss
xchg
shll
xchg
adc
aas
aas
sbb
popa
mov
push
fistps
ljmp
and
iret
add
lods
adc
lcall
push
mov
insb
xor
call
lock
xor
and
aaa
or
push
mov
xchg
xchg
test
jbe
pop
mov
mov
adc
imul
rol
outsl
jns
bound
pop
adc
test
dec
jo
aas
imul
add
data16
lea
push
inc
push
sbb
in
leave
or
negb
xchg
dec
adc
and
scas
into
enter
pusha
mov
and
lods
jl
push
mov
jo
fidivl
daa
out
jge
cwtl
inc
into
lds
rol
sub
inc
cmp
out
out
outsb
es
mov
orl
pop
movsl
or
mov
or
dec
mov
xchg
xchg
lods
in
or
cltd
fs
into
lods
jb
cmpsl
xchg
xchg
cmp
xchg
daa
daa
rorl
sub
jmp
jg
mov
push
inc
daa
xchg
and
into
stos
sbb
xchg
in
ss
rcrl
jp
mov
lea
mov
int3
jmp
xor
pushf
xor
fxtract
popf
mov
push
dec
stos
scas
sbb
push
xchg
mov
adc
lahf
xor
cli
js
jp
jne
xlat
jecxz
mov
lcall
ds
or
push
jns
xor
xorl
mov
dec
repnz
ds
sahf
mov
jmp
jge
pop
fstl
icebp
xor
mov
popf
das
arpl
cmpsl
shrl
testb
jae
fcmovu
xor
xchg
andl
fildll
pop
outsl
sbb
mov
testl
push
nop
addr16
add
pop
sahf
je
or
xchg
cwtl
adc
cmp
dec
mov
dec
mov
inc
into
jmp
repnz
mov
cmpl
addr16
ds
add
sbb
jae
pop
andb
jae
xor
jmp
mov
cs
outsl
data16
out
dec
sahf
cld
in
mov
and
cltd
mov
xorl
mov
data16
jo
lret
mov
lret
out
addr16
xchg
clc
daa
or
test
mov
test
movl
popf
xchg
mov
jle
lea
push
sub
push
mov
adc
lods
fcomps
xor
mov
pop
clc
jp
lock
mov
pop
repnz
rcrl
lods
clc
mov
mov
cmp
mov
pusha
pop
or
mov
mov
dec
aas
jge
outsb
ret
test
cli
roll
pop
cwtl
inc
lcall
lahf
insl
push
cld
dec
inc
aam
inc
shll
pusha
loop
pop
pop
gs
sub
dec
ds
mov
cltd
loopne
aam
cmpsl
sbb
fs
and
out
popa
fimull
repnz
and
mov
xchg
push
pop
stos
icebp
xchg
cmpsl
sub
lahf
inc
dec
mov
ds
in
movsb
fidivs
dec
push
negb
neg
mov
jecxz
lock
test
sub
dec
cs
or
add
adc
xchg
or
push
sbb
stos
fisttpll
dec
xchg
les
jecxz
jge
sbb
mov
mov
ret
lcall
nop
pop
fcomi
adcb
addl
inc
mov
jg
jns
add
sbbb
xchg
aam
fildll
push
fimuls
out
jae
push
cmp
pop
jle
addb
jg
loopne
adc
fmuls
scas
lock
pop
sub
jbe
push
fdivrs
arpl
repz
or
stos
mul
in
mov
ficompl
push
enter
cmp
push
xor
lret
pop
fwait
call
enter
dec
lcall
les
insl
push
pop
lods
out
loop
inc
sub
or
and
loop
sarl
or
jmp
mov
aaa
xor
jge
mov
mov
dec
fcoml
push
fldcw
clc
cmovp
shr
ret
xchg
adc
pop
orl
jmp
or
dec
loope
push
and
shll
imul
inc
sahf
cmp
insl
jge
gs
fdivrs
call
pop
les
stos
jnp
pop
mov
jnp
cwtl
daa
xor
and
les
shrb
iret
inc
push
cmp
jb
jl
dec
fistpll
adc
or
test
flds
or
in
push
pop
ds
push
dec
fdivs
mov
mov
mov
xor
mov
out
pop
mov
daa
ret
movsb
outsb
out
loope
xor
mov
cmpsl
aad
aad
jg
stos
test
scas
les
pop
dec
addr16
lods
in
mov
jmp
jo
xor
mov
mov
pop
ja
xorb
mov
fldl2t
xor
add
daa
dec
in
sub
cmpsb
push
insb
jl
in
dec
mov
push
movsb
jmp
nop
ss
rclb
xchg
cmpsb
iret
push
jne
lcall
jmp
jns
gs
and
mov
in
jae
and
or
dec
inc
leave
fimull
icebp
xlat
pop
push
fcomps
adc
std
xchg
and
test
scas
cwtl
mov
mov
and
cmp
lret
sub
popf
aad
ret
sbb
filds
mov
xor
dec
enter
pop
ljmp
cmp
push
in
mov
or
xchg
js
int3
dec
mov
imul
push
into
test
mov
das
loop
inc
xor
cmp
rol
xchg
lods
dec
fs
inc
cmp
subb
fcoms
mov
je
pop
aas
xchg
pop
enter
jo
stos
dec
into
dec
xchg
mov
fst
mov
aaa
dec
pop
jno
dec
mov
fnstsw
push
or
pop
pop
mov
test
or
dec
lea
and
mov
test
daa
add
cmc
xlat
test
jnp
mov
xlat
cmp
mov
addr16
shlb
and
cltd
jae
ljmp
stc
push
mov
rorb
pop
add
movsl
arpl
js
enter
jge
mov
stos
jmp
sti
or
andl
pusha
fisubrs
or
popf
repnz
cmp
shlb
test
lds
sarb
inc
fidivrs
mov
subb
mov
movl
mov
push
push
cmp
jb
xor
add
in
es
add
inc
push
lods
sti
xlat
nop
sbb
shll
push
out
inc
mov
imul
mov
add
mov
mov
cmp
mov
bound
addb
lret
movntq
out
xchg
sub
fsubrs
jecxz
loop
lds
in
aad
xchg
jo
pushl
push
aas
stc
pop
jp
in
jno
or
jg
fimuls
nop
loopne,pt
push
pop
in
fidivs
jmp
adc
and
lret
lret
iret
mov
adc
fisubl
std
sub
jecxz
stos
cmp
pop
push
mov
int3
lods
mov
jmp
cmp
dec
fstl
insl
jg
jo
scas
outsb
shr
stos
cmpsb
out
clc
sbbb
pushl
subb
adc
addr16
cs
xchg
pop
test
inc
in
or
push
push
cmp
jle
aam
mov
sbb
pop
dec
lods
rclb
xchg
jl
mov
cmp
outsb
pop
int3
pop
xor
mov
sbb
sarb
lock
add
leave
sbb
daa
mov
jae
testl
cli
rcrl
mov
sbb
mov
xchg
imul
push
inc
pop
adc
ret
sahf
insb
mov
test
push
xchg
icebp
sahf
cmp
mov
cmp
jecxz
push
pop
and
inc
inc
popa
xor
dec
mov
push
cmc
mov
push
and
ret
cltd
inc
mov
dec
inc
and
loopne
icebp
test
cmc
and
xor
jbe
test
daa
pop
or
pop
test
adc
std
dec
loopne
jae
mov
jo
repnz
jmp
jge
test
or
mov
int3
bound
icebp
icebp
dec
adc
jecxz
sub
les
pop
mov
jo
push
insb
jg
dec
push
orb
jge
shll
xlat
pop
sahf
lcall
sbb
xor
or
bound
int
pop
jo
or
cmpl
scas
jne
jecxz
dec
jno
lret
lret
lods
inc
lret
ret
mov
out
push
mov
leave
dec
pop
aad
push
xorb
jb
movsl
insl
and
fldt
in
test
dec
sub
outsl
test
dec
scas
icebp
lea
mov
stc
lods
outsb
inc
nop
test
sarl
sbb
mov
dec
js
jbe
add
stos
mov
dec
outsb
scas
int
fdiv
xlat
orb
fcmovu
add
mov
xlat
pop
sahf
sti
xor
mov
scas
jns
enter
push
ficompl
xor
inc
dec
mov
test
int3
mov
sbbb
pop
adc
dec
cmp
cld
jp
jae
push
or
int3
bndstx
dec
iret
dec
lea
loop
mov
test
pop
out
iret
cld
jno
hlt
and
mov
cwtl
pop
mov
inc
xchg
sub
stos
mov
cli
stos
dec
sbb
or
call
addl
cmp
rcr
pop
mov
in
stos
adcb
xchg
xchg
mov
mov
js
addr16
push
dec
loopne
jl
outsl
clc
lahf
or
mov
adc
cmp
call
les
enter
jmp
mov
stos
out
xor
in
sub
xchg
ret
stos
xchg
sub
pop
loop
xor
inc
pop
pop
inc
mov
pop
push
mov
imul
push
lret
lret
xor
js
aad
neg
jne
push
sbb
sbb
jmp
push
fs
rolb
push
lcall
mov
jb
adc
inc
push
add
mov
sbb
int3
mov
subb
call
inc
sub
dec
fildll
bnd
movsl
cwtl
xor
outsl
imul
cmp
imul
subl
sub
or
push
decb
push
je
xor
jbe
push
cli
xor
xor
jo
pushf
pop
fnstsw
sti
imul
lds
jl
mov
xchg
dec
mov
or
xchg
add
and
shlb
cltd
mov
fwait
mov
shlb
test
xchg
inc
out
movsl
out
mov
sub
and
aas
mov
sbb
lret
jae
js
inc
movsb
and
pop
in
dec
out
sbb
shrb
jle
push
sbb
lea
ja
pop
stos
jecxz
cld
lret
pop
xchg
shlb
pop
shlb
xchg
pop
rolb
addb
je
in
insb
jecxz
scas
adc
data16
cmp
gs
mov
push
pop
pop
mov
add
or
pusha
sbb
stos
nop
mov
orl
sub
imul
pop
jl
xor
inc
push
adc
pop
test
lea
pop
xor
out
cltd
and
andb
sub
adc
in
loopne
jg
ret
es
pop
sub
es
incb
cmpsb
pop
mov
loop
int3
fisubl
and
fwait
gs
ffreep
mull
call
out
xchg
lds
xlat
repnz
addr16
inc
push
movsb
xor
js
addb
or
stos
pop
mov
or
ret
outsb
jmp
js
gs
fdivs
pop
aaa
and
cld
jno
in
insb
loope
std
xchg
jmp
int
stc
dec
sbb
aaa
popf
dec
hlt
aas
add
shll
data16
lock
mov
lea
jae
fsts
jl
negb
dec
ret
add
sub
lret
in
dec
cwtl
xor
stc
dec
add
sbb
add
push
cmpsl
xchg
lahf
xchg
imul
xchg
hlt
add
out
fists
sub
jmp
lds
pop
lods
insb
leave
sbb
fcomps
lods
mov
lea
iret
xor
lds
adc
aaa
sti
mov
out
jmp
jp
mov
add
ja
mov
je
push
mov
negl
push
testl
mov
cltd
jle
int
cwtl
xchg
sbb
pop
div
dec
popa
cmpb
xchg
sub
pop
sub
ret
dec
testb
test
loop
fiaddl
cmp
sahf
pop
mov
shrl
sub
sub
jae
stos
xor
push
push
push
add
mov
mov
inc
in
adc
mov
and
xchg
pushf
test
pop
mov
inc
test
push
and
pop
mov
xor
xchg
inc
sahf
sub
das
movsl
xor
xchg
mov
and
shlb
cmp
and
add
sahf
cmpsb
cltd
mov
ds
lret
cmp
jo
mov
insl
adc
aam
and
sub
push
shrb
cmpsb
sbb
sub
inc
and
mov
jbe
xchg
sub
jmp
call
rolb
jns
leave
pop
cmp
or
mov
jg
sub
cld
push
aas
sbb
inc
das
push
loope
cmp
in
push
outsb
push
int3
adc
pop
mov
popf
xlat
js
inc
pop
jg
sbb
mulb
or
or
rcll
and
push
xchg
cmp
test
and
or
andb
std
cmp
aas
push
out
mov
inc
xor
movsb
es
mov
cli
jnp
subl
jnp
add
loope
push
and
mov
xor
mov
or
aad
icebp
ljmp
mov
aaa
sub
imul
or
push
xchg
jb
add
cmc
clc
pop
pop
dec
pushf
scas
mov
cld
dec
jno
in
jmp
jle
stos
push
das
inc
or
sbb
out
inc
int
jb
push
sbb
jg
std
push
or
xor
subl
lcall
test
jbe
jne
sbb
mov
enter
push
mov
push
mov
inc
jne
pop
fsubl
cmp
xchg
cmc
dec
outsb
xchg
dec
arpl
jmp
fiadds
push
add
sbb
dec
pop
inc
cmp
fisubl
and
cmp
xchg
outsb
cmp
mov
lcall
mov
jno
xchg
rcrb
ds
mov
mov
into
into
lods
es
into
mov
xlat
jge
xchg
mov
inc
mov
fisttpll
test
pop
mov
jmp
mov
push
jmp
dec
push
scas
icebp
push
and
xor
xchg
shll
sub
imul
mov
or
dec
xchg
clc
in
hlt
inc
loope
lock
cli
insb
lds
stos
cmpsb
aas
mov
jle
jo
jp
mov
dec
push
adc
sub
gs
sbb
xor
stos
in
mov
stc
xor
stos
dec
cmpb
cmpsb
xor
inc
cmpsl
mov
inc
push
lods
daa
push
add
js
lret
popa
add
push
pusha
clc
cmpsb
mov
inc
mov
das
icebp
ret
iret
fisubrl
xchg
jne
push
jb
out
lds
jecxz
roll
scas
cmp
ret
movsb
jbe
adc
adc
pop
addb
adcb
aad
sub
xor
jg
pushf
mov
dec
repz
out
jns
outsb
sub
push
sub
pop
xor
daa
insb
xchg
and
lods
xchg
cmp
jmp
stos
movsl
call
pop
cld
cli
pop
lcall
and
mov
scas
xor
jae
out
jl
jne
insl
inc
pop
adc
push
data16
test
xor
mov
das
or
mov
pop
repnz
ror
cwtl
movsl
ss
out
fstpt
rdpmc
inc
sub
aas
ja
mov
outsl
cmpsl
and
push
lods
dec
shll
mov
xor
cs
xor
cs
cmp
xor
jb
lea
pop
lock
cwtl
adc
sbb
xchg
nop
cmp
fbld
sti
hlt
mov
push
jmp
adc
inc
mov
adc
inc
subb
fcompl
fiaddl
mov
jae
xchg
sbb
dec
xor
mov
hlt
mov
jg
aad
cmp
jno
popf
adc
je
xchg
popa
int3
aaa
cmp
push
pop
push
loop
push
jmp
and
inc
xchg
add
cs
inc
cmpsb
add
je
and
mov
mov
pop
adc
dec
lret
mov
pop
dec
repz
lods
adc
mov
adc
das
xor
dec
and
and
movsb
mov
iret
push
pop
addr16
andl
loope
dec
or
and
sarb
data16
push
dec
or
insl
pop
call
adc
daa
ret
movl
pop
cmp
fucomi
jns
lea
cmp
or
pop
repz
adc
lds
daa
mov
and
cmp
gs
dec
arpl
enter
fisubrs
pusha
nop
xchg
js
jge
fimuls
lods
dec
jp
jl
mov
dec
pop
aas
cmp
flds
adc
sub
incb
or
movsb
outsl
fs
xor
notb
and
mov
movsb
fdiv
xlat
inc
xor
xlat
xor
cmp
push
hlt
xchg
cli
jmp
lea
cli
popf
leave
push
aam
sbb
mov
xchg
inc
dec
roll
add
fmuls
enter
mov
imull
mov
out
loopne
clc
dec
push
ret
aas
push
pop
jo
push
or
pop
xchg
jp
sbb
sbb
and
jno
stos
int3
pop
mov
or
rcrl
lret
shll
cmp
loopne
pop
nop
out
fs
cld
ffree
sub
add
gs
push
sub
dec
cltd
xorb
adc
mov
test
lahf
int3
adc
enter
pop
push
add
jns
sbb
sub
or
sbb
lods
mov
push
and
mov
dec
sbb
les
test
hlt
dec
mov
xor
test
lods
addb
or
mov
mov
mov
mov
sar
insb
jge
dec
das
dec
out
mov
push
mov
rorb
fnstsw
inc
out
dec
dec
ss
add
jae
cs
jl
jae
or
in
arpl
xchg
imul
cmp
jle
daa
lds
cmp
dec
cmpsl
dec
call
inc
arpl
out
decb
add
mov
xlat
jle
sbb
cmp
ss
daa
movsb
push
jp
xchg
data16
test
ret
fildl
dec
stos
in
push
aas
mov
out
dec
icebp
sahf
pop
add
ljmp
push
sub
test
hlt
dec
daa
js
dec
push
pop
scas
pop
jbe
and
pusha
test
sbb
jge
fildll
or
cmp
mov
dec
aad
into
pop
mov
mov
sarl
mov
popf
push
pop
fbld
jo
xor
sub
faddl
insb
mov
js
adcl
jg
imul
imul
push
cs
xchg
pop
in
fdivr
cmp
jbe
ret
pop
icebp
pop
sbb
sub
push
insl
mov
xchg
inc
lret
dec
inc
adcl
lea
xchg
xor
rorl
xor
cmp
add
imul
adc
rcrl
dec
fcomip
les
inc
push
jmp
ret
and
xor
mov
mov
dec
call
xchg
or
nop
push
pop
ret
aaa
or
and
mov
pop
arpl
jo
negl
pop
add
sub
push
cmp
int
mov
fistl
mov
out
jno
cmp
jge
mov
int
ss
lock
mov
clc
sub
cmc
in
cmp
pushf
or
xchg
iret
cs
cli
push
fwait
std
inc
push
pop
cltd
inc
mov
mov
adc
loop
mov
into
cwtl
add
push
in
mov
adc
loope
jmp
shrl
jae
addl
repz
imul
enter
lds
lret
or
shrl
xor
sbb
pop
mov
and
xor
xorb
push
mov
sahf
fwait
cmp
idiv
dec
xchg
push
mov
xor
mov
pop
jmp
lds
sarb
fs
lds
les
cmpl
hlt
cmc
das
jg
and
mov
mov
jbe
xchg
mov
ret
lods
push
icebp
rolb
xchg
mov
cmp
push
shll
pushf
sbb
add
adc
fiadds
aad
shrb
fcomps
mov
addb
jbe
add
sub
inc
add
push
sbb
outsb
repz
ja
push
push
mov
mov
jbe
and
sub
aam
daa
call
lds
std
or
mov
mov
gs
test
popa
jle
adc
je
ljmp
mov
movsb
js
push
ja
int
leave
dec
lcall
mov
jns
cmp
push
mov
inc
fidivrl
xchg
aaa
mov
add
add
leave
hlt
scas
mov
add
daa
fdivrl
mov
std
dec
jmp
in
mov
add
mov
and
les
pop
das
dec
loope
push
in
loop
shll
lods
add
xchg
inc
daa
aas
mov
out
jg
or
mov
cltd
cmc
mov
inc
call
lcall
imul
push
lods
mov
lock
and
addr16
dec
sbb
push
mov
xchg
movsl
ficompl
xchg
int
outsb
les
sahf
loope
or
sub
xchg
xor
insl
ss
jo
jo
loop
cltd
cld
imul
push
insl
push
out
lods
jge
xchg
inc
int
dec
mov
aad
out
push
xchg
xor
rcrb
inc
xchg
or
mov
inc
in
addr16
and
mov
push
cld
inc
adc
ljmp
lcall
xchg
lock
inc
xchg
push
push
outsl
sub
hlt
enter
mov
addr16
mov
sbb
sbb
pop
aad
inc
out
dec
or
sbb
or
jbe
push
mov
outsb
xchg
sub
cmp
push
mov
adc
std
push
stos
mov
xor
lds
stos
fldl
sub
adc
sti
adc
lahf
mov
shlb
mov
dec
push
es
adc
subl
repnz
std
rcrl
fcmovbe
cmp
push
xor
cmp
icebp
cmp
push
in
sbbb
jle
dec
add
mov
sub
mov
shll
outsl
sti
shl
mov
push
xchg
fwait
dec
xchg
add
ret
ljmp
xor
fimull
or
pusha
imulb
stc
sbbl
loop
add
clc
aaa
push
aam
aad
fidivl
outsb
inc
xchg
out
inc
jmp
fs
xlat
das
cmc
cmpsb
cmpsb
test
ret
enter
pop
or
sub
repz
sub
push
sub
add
imul
subl
xchg
push
idiv
and
push
bound
and
in
lahf
movsl
ljmp
dec
jmp
cmp
push
in
mov
int
les
flds
adc
out
add
das
push
fidivs
outsb
lahf
or
push
xchg
push
xchg
sub
push
adc
jg
pop
adc
cmp
xchg
add
test
fsubs
inc
decl
jae
outsl
sub
and
jge
stos
add
shll
cmp
test
ret
cmp
jl
insl
incl
push
push
mov
mov
loope
andb
mov
repz
sub
repnz
fmuls
arpl
inc
loop
call
hlt
scas
cs
adcl
dec
ljmp
shl
aaa
fwait
and
emms
mov
movsl
fwait
in
idiv
fistpl
lea
mov
test
and
pop
xchg
sub
ss
into
shlb
bnd
push
or
sbb
fisubrl
in
mov
inc
repz
xor
in
repz
imul
rcl
repnz
js
shll
xor
pop
mov
dec
push
mov
add
ds
add
xchg
mov
imul
mov
push
shll
cmpsl
cmp
in
lcall
gs
daa
mov
inc
es
out
jl
imul
fnstenv
inc
xor
sbb
add
rcrl
je
iret
sub
repnz
push
dec
pushf
in
fmulp
bound
push
inc
jae
xor
scas
pop
das
mov
insl
xchg
sahf
mov
dec
pop
lods
aaa
insl
icebp
dec
adc
mov
inc
sbb
ss
jne
test
ljmp
cmp
fnstenv
popf
cs
sbb
xchg
pushf
ljmp
add
imul
xor
push
lods
mov
mov
fstpl
and
jbe
ret
dec
bound
lret
leave
dec
add
mov
cmp
shrb
stc
and
testb
xor
in
mov
mov
cwtl
loopne
push
or
les
mov
adc
dec
xor
jbe
nop
test
gs
add
dec
repz
iret
push
pop
inc
pop
cwtl
inc
stos
stos
and
sbb
cmp
and
out
pop
cmp
call
gs
xchg
orl
sbb
fwait
xchg
gs
call
lret
int3
in
sbb
add
mov
push
mov
out
pop
xor
mov
dec
pop
inc
aam
mov
dec
push
jl
jp
icebp
add
scas
fwait
and
clc
jae
push
or
ss
push
rolb
dec
rorl
add
fcoml
shl
aam
or
into
mov
xor
push
mov
stc
popa
test
jnp
fcompl
inc
cmp
mov
jge
aaa
xor
test
shrb
cmpb
scas
push
scas
sub
lods
js
rcrb
sub
lods
lret
fmuls
mov
rclb
pop
mov
popf
nop
leave
out
sbbl
pusha
icebp
add
stos
daa
imul
inc
mov
sahf
lds
adc
aas
ret
xchg
xlat
push
in
adc
push
icebp
mov
pop
mov
mov
ljmp
loopne
mov
and
ds
xchg
pop
dec
push
loopne
dec
pop
cmp
dec
mov
jmp
inc
push
cs
sbb
das
sub
adcl
cmc
es
fwait
ljmp
div
mov
push
fdivl
fdivrl
jne
add
add
push
jnp
and
xchg
xchg
add
jb
dec
add
mov
add
mov
insb
shll
xlat
mov
mov
sub
mov
cmp
jnp
lods
xor
jg
popf
push
jb
inc
mov
out
jno
and
adc
xchg
dec
pop
mov
sbb
shl
mov
xchg
fldln2
lret
sub
dec
call
pop
mov
or
aaa
inc
test
pop
leave
mov
pop
pop
dec
cmc
pusha
pop
xchg
pusha
dec
mov
jecxz
cmpsl
insl
test
push
and
mov
test
add
mov
xchg
lods
xchg
mov
test
jnp
addb
adc
lcall
stos
cmp
push
pop
sub
adc
call
xchg
sub
fisubs
stc
cmp
arpl
pop
imul
pop
adc
cmp
adc
ret
fcom
les
push
lods
lahf
jp
sub
stos
movq
and
jbe
dec
jmp
movsl
lods
ljmp
adc
outsl
daa
jmp
push
xchg
out
mov
scas
sub
xchg
sub
cltd
mov
xor
xor
fsts
add
or
push
inc
subl
roll
mov
les
stc
lods
jg
xor
fsub
dec
xorb
and
movsb
aas
fucom
sub
imul
jmp
test
inc
and
sub
aad
stos
pop
cmp
call
dec
or
mov
fimuls
add
inc
mov
dec
lods
mov
jb
cs
stc
ja
xor
pop
sub
mov
sahf
lds
test
sbb
or
dec
cli
adc
orl
push
shlb
gs
loope
lret
shll
loope
psrlw
dec
fildl
pop
and
rcll
xor
lds
test
mov
adcl
cmp
ret
xchg
xchg
jo
cltd
repnz
notl
push
mov
xchg
jne
jnp
xor
xchg
mov
xchg
loop
ficoms
leave
sub
xor
mov
in
imul
das
daa
sbb
cmpsb
xchg
lods
mov
sti
in
cmp
xchg
sbb
inc
pop
ljmp
outsl
insb
mov
out
lods
xchg
out
testl
sbb
std
fwait
pop
xchg
ljmp
jge
in
push
cmpsl
lock
int
faddl
and
not
mov
jnp
jns
cld
adc
push
and
mov
pop
fucompp
pushf
aam
sub
daa
jecxz
jmp
icebp
push
mov
cmp
rclb
sub
mov
imul
and
sbb
loopne
pop
mov
mov
stos
aam
int
in
inc
lds
test
ds
loope
fcmovnbe
pop
outsl
cmpl
xor
mov
jmp
mov
out
int
shufps
xor
push
out
repz
adc
aad
ss
stos
adc
and
cld
cmpsl
xor
lods
dec
js
lods
or
xor
push
leave
cltd
jns
pop
jo
lds
loope
sbb
mov
repnz
mov
sub
inc
mov
xchg
cmc
addr16
cltd
loop
jbe
sub
mov
inc
in
push
push
rolb
mov
xor
imul
dec
mov
sub
fisubl
mov
and
lahf
jmp
and
sub
enter
out
jmp
enter
decb
inc
jg
jecxz
int
jg
add
jnp
inc
dec
roll
mov
dec
mov
mov
adc
clc
sbb
in
lcall
sub
cmp
cs
fists
outsl
push
mov
add
push
cmp
jb
clc
les
pusha
add
mov
or
fnstenv
adc
sub
mov
and
mov
out
sub
rolb
mov
lods
test
sbb
dec
jno
jne
daa
inc
loope
mov
mov
test
pop
inc
stc
test
ljmp
xor
cli
lea
ss
mov
fimull
nop
repz
nop
cli
aad
int
dec
std
repz
sub
lods
mov
iret
ljmp
fcmovnb
bound
mov
arpl
xacquire
ljmp
jg
push
enter
hlt
jg
jo
sub
adc
jmp
outsb
incw
lods
mov
stos
scas
push
in
or
mov
pop
adc
push
sub
shl
cli
mov
loope
push
orl
xchg
dec
pop
inc
dec
add
repz
mov
and
mov
out
dec
cmpsb
or
xchg
inc
or
addr16
add
mov
mov
push
stos
sub
xchg
scas
dec
adcl
imul
int3
add
jnp
xor
xor
jns
cmpsb
dec
or
lds
xchg
cwtl
mov
dec
js
pop
push
sbb
pop
fnstcw
sbb
ficoms
push
jno
mov
test
std
cmpl
pop
cwtl
mov
pop
repz
pop
out
add
add
cmp
insb
mov
xchg
cmp
je
pusha
cmc
pop
mov
jns
mov
and
push
js
insl
sti
test
stc
aas
xchg
fsubs
jl
mov
fimull
popa
add
call
lret
daa
push
mov
adc
dec
mov
loope
loopne
les
xchg
jecxz
inc
mov
push
cmp
sbb
xchg
cld
pop
in
data16
ret
or
stc
jmp
je
call
sub
pop
sub
jmp
rcrl
test
xor
fildl
push
cmp
jb
sub
fmull
push
sbbl
and
mov
xor
cmp
lock
mov
cmp
cwtl
in
xor
sbb
loope
mov
and
std
mov
pop
mov
xor
in
xchg
inc
test
mov
cmpsb
andnps
adc
repz
and
adc
mov
rcrl
cwtl
push
cmp
dec
test
adc
std
test
jecxz
movsb
dec
repnz
loopne
test
xchg
in
loope
sub
stc
ljmp
lds
push
and
xchg
mov
fmull
mov
jne
fiadds
shr
and
bound
adc
sbb
sarb
arpl
dec
xchg
cmp
push
lock
daa
in
lcall
das
out
dec
or
xchg
lret
dec
inc
adc
aaa
into
cmc
popa
hlt
insl
sbb
dec
int
dec
sbbl
outsb
fldt
push
mov
cmp
and
in
outsb
cs
jnp
insl
xchg
es
push
pop
push
pusha
mull
outsb
clc
xor
mov
insl
addb
sbb
cmp
lret
cmp
push
add
add
inc
mov
sbb
push
cmp
adc
xlat
jnp
mov
sub
ja
getsec
jecxz
pushf
lods
mov
xor
inc
mov
je
xor
movsb
js
je
mov
xor
imul
test
mov
jnp
ljmp
inc
scas
shll
std
mov
sub
ja
notl
out
dec
enter
lods
jmp
and
or
sbb
adc
enter
or
insb
outsl
cld
jb
das
push
fs
add
mov
ss
aas
leave
test
dec
mov
cwtl
mov
outsb
nop
int
mov
sbb
pop
jnp
push
pop
out
xor
push
js
add
inc
dec
lds
or
lea
arpl
lds
loopne
jp
cwtl
popf
pop
adc
popa
mov
and
movsb
dec
xchg
iret
lds
in
lret
add
inc
addb
push
jo
xor
cmpsb
ss
pop
sub
test
dec
sbb
fstl
lock
mov
lds
mov
sub
test
add
sub
fadds
das
adc
daa
ret
or
leave
mov
inc
add
and
stos
std
hlt
sbb
je
lds
mov
clc
orl
inc
aaa
movsl
mov
shlb
mov
pop
sbb
out
negl
insl
arpl
pop
sbb
iret
pop
push
inc
jae
and
insl
sub
xor
int
outsb
dec
pop
mov
shr
cmpsb
nop
aas
push
jb
dec
and
or
test
jb
imul
push
and
out
jno
lret
cmpsl
imull
lahf
jmp
jns
imul
mov
outsb
inc
cmp
in
lds
scas
lret
shl
inc
mov
test
fdiv
sbb
mov
xor
mov
call
or
or
mov
jge
sub
sbb
push
and
sti
loop
enter
cmpl
adc
mov
movsb
cmc
sbb
fisubrl
rorl
sbbb
pop
mov
stos
jnp
lods
inc
fsubrl
mov
dec
inc
arpl
aas
daa
rcll
cltd
mov
push
push
mov
pushf
outsb
aad
cmp
push
stc
jmp
shrl
cmc
sub
cmpsb
leave
jb
mov
out
roll
pop
sub
push
xchg
mov
jge
xor
aas
test
loop
in
ret
seta
in
inc
gs
lods
outsl
push
jae
stc
lret
sub
fisttps
jge
add
jae
int3
std
scas
mov
add
xor
and
push
pop
call
xchg
rorb
push
notl
andb
mov
orb
xor
xor
jle
add
sarb
pop
stos
jno
loope
inc
inc
lea
into
inc
dec
mov
sub
loop
push
rolb
push
fs
adc
das
ficoms
pop
mov
push
shl
lcall
stc
cmpb
jb
sub
xor
push
adc
inc
jo
pmulhw
sbb
scas
sub
mov
mov
xchg
fscale
xor
jbe
das
in
lret
adc
and
test
sbb
cwtl
idivl
fistl
mov
sub
pop
sub
faddl
fcmovne
addr16
dec
adc
out
stos
and
sub
push
dec
sub
sbb
or
pop
dec
adc
mov
fildl
jmp
add
mov
jp
mov
cld
repnz
sahf
fstpl
pop
aam
sub
xchg
aam
mov
je
insb
fstpt
xchg
iret
mov
xor
out
jg
ss
mov
sbb
jb
test
cmp
hlt
jecxz
cmp
push
mov
pop
loop
jmp
clc
aas
push
inc
inc
test
loope
mov
mov
lock
jno
mov
pop
pop
cli
cltd
fsubr
add
leave
cmp
mov
pop
mov
mov
orl
inc
mov
mov
sbb
cmpsl
jmp
les
push
pop
pop
push
push
adc
xchg
incb
jecxz
adc
xchg
pop
sbb
mov
addr16
dec
jg
pusha
je
hlt
lds
bound
xchg
es
push
cltd
ja
add
push
xchg
stc
addb
and
xor
mov
pushf
data16
jp
mov
out
loopne
addl
xchg
stc
sub
mov
and
cs
movsl
sub
xchg
jns
call
add
stos
rcrl
dec
lock
sub
jnp
mov
xlat
cmc
inc
out
lods
mov
lds
or
dec
fcmovnu
xchg
mov
in
ja
jo
and
imul
shlb
test
es
ja
imul
daa
nop
shll
int3
mov
in
cmp
sbb
rcrl
mov
cmp
cld
cmc
addr16
aam
adc
int
xchg
mov
pop
into
pusha
xor
and
xor
ds
hlt
or
icebp
mov
lock
insb
insb
adc
std
jae
pop
pushf
dec
dec
sbb
jne
adc
lret
addr16
cmp
adc
out
add
ss
xor
ljmp
lret
aam
pop
dec
leave
iret
jmp
lret
int
inc
shl
cld
shl
rcl
push
jecxz
or
rorl
mov
fistps
xlat
fists
movsb
jne
cmp
jg
loopne
ret
sub
push
stc
fbld
add
lea
mov
mov
ss
lcall
dec
in
arpl
pop
inc
or
jecxz
sub
leave
shll
cltd
jnp
add
loope
jle
test
push
es
ss
mov
jecxz
push
clc
jbe
loope
sbb
negl
mov
mov
not
push
xchg
addr16
mov
jecxz
push
aas
pop
adc
shlb
push
jno
repz
dec
push
xchg
or
xor
sub
fstp
xchg
push
inc
movsb
xlat
lock
movsl
mov
addr16
roll
pop
push
data16
dec
loope
sbb
bound
aaa
or
and
xchg
and
sub
rolb
inc
in
in
lds
sub
movsl
jg
out
or
psubusb
loope
std
xchg
jecxz
mov
push
outsb
adc
sub
and
mov
out
mov
lcall
fprem
bts
pop
mov
repz
adc
xorb
mov
hlt
das
cli
mov
cmp
lods
aam
shr
pusha
ret
pop
mov
jg
inc
pop
mov
cmp
mov
leave
sub
mov
movsb
imul
adc
jb
imull
scas
pop
lahf
adc
pusha
stos
inc
pop
rorl
mov
shlb
dec
mov
adc
dec
icebp
xchg
mov
popf
pop
daa
cwtl
cwtl
sub
aas
mov
xlat
add
shlb
iret
inc
mov
sahf
and
cmp
test
adc
pushl
mov
mov
xor
mov
imul
mov
enter
cld
lahf
aam
adc
pushf
xor
insl
test
push
dec
movsb
mov
mov
jge
rolb
pop
shlb
mov
adc
jecxz
cmp
or
add
test
maxps
push
jnp
jno
lock
dec
cmpsb
or
cld
cmp
insl
ret
mov
and
push
pop
loopne
jp
lds
lods
sti
xchg
icebp
pop
push
das
shl
adc
mov
jo
adc
xchg
cli
nop
negl
and
fsubp
ffreep
cwtl
adc
addl
push
jno
mov
sbb
fs
cltd
cmpsb
mov
insl
adc
cmpsb
shll
lahf
pop
out
hlt
insl
jns
pop
popf
xchg
ret
mov
jno
nop
ficompl
jae
fidivs
call
stos
idivl
pop
fnstenv
ja
std
call
mov
xor
push
shlb
stc
test
mov
mov
std
and
fidivl
fldcw
stos
lods
mov
fists
sbb
dec
nop
pop
hlt
and
in
inc
ret
adc
inc
dec
rcrb
decb
jle
and
jge
adc
in
arpl
cltd
adc
sub
in
mov
out
and
sti
icebp
jl
mov
mov
in
xchg
test
stos
sub
pop
sarb
or
push
and
pushf
in
push
loop
jge
les
ret
lods
rorl
pop
push
push
je
in
mov
mov
inc
outsb
lret
dec
xor
scas
jmp
mov
jecxz
jbe
mov
pop
ja
pop
xorl
add
rol
pop
jle
mov
lret
fists
data16
test
add
sub
sbb
jmp
or
pop
inc
push
sub
scas
stos
lock
add
vpcomw
cmpsl
or
mov
clc
sbb
fcomi
test
arpl
out
xchg
and
jns
lret
cli
cmp
or
xor
add
xchg
sub
testb
rorb
std
aam
inc
mov
frstor
dec
lods
xchg
or
pop
faddl
sti
enter
mov
cmp
aad
cmp
sub
cmc
in
aaa
aaa
repnz
cmp
lods
jp
xor
add
lods
lea
inc
jb
cmc
sub
xchg
sbb
push
cmpsb
cmp
ljmp
adc
xchg
nop
repz
mov
pop
jae
aad
cli
ja
inc
jle
and
dec
mov
inc
pop
xchg
mov
mov
xchg
test
adc
scas
outsl
add
push
cmp
xchg
mov
pop
mov
pop
stos
gs
fwait
inc
test
adc
das
add
cmpsl
mov
xor
fsubp
push
mov
jp
js
daa
jne
sahf
nop
xchg
jp
mov
jo
xchg
push
stos
jecxz
into
mov
repz
adc
add
xor
sbb
addl
fidivrl
loope
fisttpl
ficomps
mov
iret
inc
mov
and
addr16
icebp
jl
sbb
add
sbb
mov
bound
jno
repnz
dec
sub
stos
sbb
leave
xor
sub
inc
xchg
push
jns
loopne
mov
push
fcoml
push
sbb
fst
fs
in
pop
ljmp
shlb
add
stc
aaa
adc
pop
cmp
lock
xchg
aas
fildl
xor
inc
or
sbb
sbbb
rolb
mov
lds
out
mov
pop
scas
insb
and
or
iret
adc
outsb
mov
mov
add
push
push
mov
test
jle
jo
jno
or
popa
cmp
daa
aas
add
data16
test
mov
fdivr
jg
add
sub
mov
pop
adc
mov
cmp
xor
mov
xchg
out
adc
cmp
std
jns
bound
rol
ss
add
je
xchg
push
test
inc
aam
lahf
std
adc
fstp
xchg
pop
lock
xchg
aas
push
mov
cmp
daa
mov
sub
addl
sub
dec
out
and
push
sub
mov
frstor
push
sub
stc
xlat
or
shl
cmp
pop
fcoms
and
adc
mov
shll
add
stos
pop
add
loope
push
mov
or
stos
data16
subl
or
stc
rdpmc
fmull
nop
and
or
in
and
repnz
or
jmp
jle
mov
cwtl
sub
and
xor
incl
outsb
cmpsb
daa
imul
arpl
dec
cli
daa
test
movzbl
sbb
add
mov
sbb
sub
out
mov
inc
dec
adc
insb
xchg
sub
xor
or
mov
sbb
int3
jl
fisubrs
and
push
and
aaa
sub
mov
mov
cmc
cmp
mov
xlat
xchg
mov
and
jp
and
scas
ficompl
mov
fmul
ror
or
decb
pop
enter
ficompl
imul
nop
fcomps
test
fiadds
xchg
aam
pop
adc
push
stos
and
jmp
repz
jno
mov
int3
ret
fcmovnbe
loop
xorb
out
sub
in
dec
sub
mov
jb
push
adc
or
push
int
mov
mov
aad
push
and
lods
dec
pop
idivb
scas
pop
stc
xor
cmp
or
pop
inc
cld
xchg
jg
pushf
sub
push
cwtl
jne
lret
movq
fs
jecxz
and
flds
mov
popa
lahf
movsl
scas
add
mov
icebp
or
in
pop
dec
push
xor
mov
shr
test
jne
js
xor
dec
cs
sbb
xchg
loop
jg
lds
dec
cwtl
pop
cmc
andb
movsl
out
jecxz
inc
push
mov
jle
lret
dec
xor
sbb
xchg
jnp
jle
sub
cwtl
fwait
scas
dec
je
aas
sub
out
into
in
sbb
sub
inc
test
mov
pop
movsb
xchg
jle
movsb
aaa
addl
sub
pop
dec
mov
imul
inc
mov
xchg
pop
push
push
lahf
je
sub
push
and
push
sbbb
mov
loopne
mov
scas
mov
dec
insl
jecxz
icebp
psllw
dec
push
ret
push
out
out
cmc
sahf
mov
roll
mov
add
jo
shrb
xor
dec
stc
gs
sub
pop
adc
lcall
adc
sbb
out
mov
xchg
xchg
push
add
xchg
ljmp
pop
adc
lods
daa
addr16
testb
in
fsubr
loopne
mov
ja
ffree
mov
rclb
xor
push
inc
imul
jne
xor
dec
out
gs
rol
dec
jle
pop
sub
jp
add
sbb
dec
cltd
fucomip
pop
and
jl
imul
scas
push
ffreep
xorl
and
or
pop
xchg
add
mov
outsl
xchg
mov
sub
lods
cld
dec
jg
scas
inc
jl
mov
ficoms
sbb
mov
pop
push
jno
sti
mov
stos
int3
mov
sub
mov
lret
outsb
jnp
cmpsl
mov
sub
ret
lea
jo
movsb
sub
test
push
xchg
sahf
stos
outsb
pop
out
repz
popf
in
add
xchg
mov
and
mov
ss
cs
imul
mov
adc
sti
movsb
sbb
inc
punpcklwd
call
test
push
hlt
pop
rclb
shrl
mov
mov
test
into
or
sub
pushf
push
arpl
nop
xchg
adc
or
test
pop
bound
popf
sarl
jle
nop
divl
in
mov
xor
mov
and
cmp
out
adc
add
jno
fmulp
adc
jmp
inc
mov
js
mov
adc
adc
inc
mov
mov
repnz
xlat
cmp
add
shlb
pop
sbb
inc
push
inc
add
rcrb
and
mov
jp
lret
mov
pop
mov
leave
cmp
faddl
mov
lea
mov
fadds
enter
adc
mov
push
push
stos
cmp
jl
ljmp
repz
stc
fsts
iret
inc
dec
add
rclb
mov
les
cmp
pop
aaa
movl
insl
movhps
or
xlat
stos
and
je
scas
lods
sbb
adc
xor
xor
aaa
ffreep
repz
mov
mov
xchg
lret
jp
je
xor
lods
jns
imul
outsl
cmp
clc
pushf
leave
repnz
pop
mov
adc
dec
insb
out
cwtl
pop
loopne
jl
sbb
ret
inc
or
push
push
jo
icebp
mov
fwait
dec
fmuls
shrl
cmpsl
arpl
and
clc
xchg
out
addr16
test
cmpl
out
add
sub
in
call
dec
shll
movsl
mov
nop
mov
cltd
xchg
fstps
xlat
stos
repnz
cmpsb
sub
push
xor
icebp
cmc
or
dec
mov
push
ficoml
push
je
jge
daa
add
pushf
or
rorb
rorl
lret
fs
inc
data16
xlat
xchg
ds
in
mov
test
and
xchg
loopne
vrcpss
call
dec
xor
pop
lret
leave
loopne
add
lea
pushf
xchg
adc
scas
sbb
or
bound
popf
inc
in
lods
repnz
mov
fs
inc
dec
clc
and
mov
clc
popf
sbb
add
sarb
sahf
sbb
ficomps
jbe
fdivs
rorl
inc
mov
mov
lcall
rcll
stos
mov
in
das
leave
or
xor
jns
xchg
add
dec
mov
ljmp
cmp
lahf
and
nop
sub
andb
push
xor
xchg
dec
mov
ss
sbb
ljmp
in
iret
mov
stos
shrb
fwait
shl
imul
loop
pop
push
into
push
lds
fsubp
movsl
adc
jl
add
inc
lret
push
addr16
mov
or
pop
js
mov
push
and
mov
xchg
mov
fisttps
or
loopne
fwait
bound
adc
mov
out
ss
lret
push
rcrl
push
leave
js
mov
mov
xor
xor
pop
adc
cmpsb
add
inc
std
test
or
insl
adc
js
mov
cli
cmp
sub
push
nop
fs
sbb
in
push
pop
into
dec
mov
es
jo
dec
movsl
cmc
mov
push
push
rcl
push
test
cmp
dec
cmp
sbb
not
enter
stos
fistpll
out
cmp
nop
jnp
and
enter
sbb
mov
pop
dec
fsubl
lds
xchg
add
mov
xchg
dec
test
adcl
xchg
jno
and
ja
mov
mov
in
loop
cwtl
inc
sub
daa
dec
xchg
push
mov
scas
adc
pop
cltd
mov
stc
push
mov
push
dec
jl
out
stc
outsb
xor
dec
rorb
arpl
add
mov
aas
mov
test
and
mov
sahf
mov
aas
and
ljmp
xchg
rolb
fbld
jns
mov
in
mov
jl
mov
jno
fadds
or
mov
pop
sahf
shlb
stc
or
cmp
shrl
pop
sub
xor
mov
inc
inc
push
dec
mov
push
add
mov
and
jno
xor
or
out
out
nop
lea
adc
or
icebp
sti
fucomip
mov
aad
pop
insl
sub
xor
sahf
fisubl
cld
push
mov
jbe
aaa
lods
inc
loopne
jmp
push
call
into
stos
loopne
xlat
sbb
dec
and
or
std
push
push
je
mov
out
repz
cmp
loopne
ds
outsl
pusha
push
dec
sub
ds
repnz
call
mov
std
fwait
pusha
cltd
test
mov
lea
in
inc
sub
test
cli
jmp
pop
push
pop
call
cltd
mov
or
and
movsb
mov
inc
fcomp
push
or
sti
jg
mov
mov
sub
fmul
jg
nop
dec
imul
mov
sub
outsl
xchg
xor
lods
dec
dec
insl
jle
xchg
lds
mov
cmp
pop
adc
int
lods
lret
iret
insb
dec
pop
add
pop
into
xor
sbb
mov
mov
push
shl
icebp
adc
pop
sub
sbb
mov
mov
jb
rorl
mov
sbb
out
pop
xchg
lret
pop
and
scas
mov
loop
mov
hlt
cli
inc
and
jne
adcb
push
data16
jle
aad
fs
cmc
xchg
pusha
sub
push
hlt
push
add
ja
lock
push
or
hlt
movsb
add
push
dec
fs
bsr
insb
repnz
insl
mov
shll
mov
int
mov
hlt
nop
idivb
sbb
inc
test
xchg
cs
xchg
or
mov
je
jge
cmp
fcoml
adc
dec
lds
mov
test
sub
adc
xchg
ja
arpl
xor
sarl
in
cmp
pop
pop
arpl
cmp
mov
mov
lcall
fists
out
mov
aam
mov
call
aaa
push
aad
or
enter
in
pop
jcxz
outsb
ss
aaa
cltd
pop
inc
cmp
aaa
mov
jae
push
outsb
inc
rcrl
repnz
insl
jns
sbb
xor
sti
ljmp
jns
jecxz
mov
inc
loop
xchg
mov
iret
fsubrs
inc
push
xor
mov
gs
adc
add
jno
mov
pop
test
add
out
fdivl
adc
scas
es
out
in
rcr
rorb
adc
add
popa
dec
push
or
xchg
fstl
xchg
addb
ret
add
sub
add
pop
jle
outsb
testb
rcrb
addr16
cmc
xor
inc
mov
push
lret
mov
pushf
push
sub
sarb
cwtl
jg
lcall
mov
arpl
adc
xchg
xchg
aam
rol
xchg
mov
pop
scas
push
jb
fwait
jno
ret
fldt
pusha
repnz
add
lods
aad
jg
test
xor
stos
into
fcoml
movsl
dec
xchg
nop
pusha
inc
sahf
dec
aad
dec
mov
movnti
bound
push
mov
mov
or
icebp
fdiv
mov
mov
sub
loop
pop
test
aad
in
out
aas
pusha
or
inc
mov
iret
repz
mov
jmp
cltd
ss
push
test
leave
rdpmc
shlw
push
mov
lret
movsl
cmp
push
fwait
add
adc
xor
jg
mov
pop
pop
mov
pop
mov
in
mov
pop
xlat
arpl
into
inc
mov
mov
hlt
sub
sbb
fldenv
cli
xchg
dec
lea
xchg
mov
inc
xchg
repnz
cmpsb
dec
jne
test
jg
push
iret
mov
jl
push
mov
pop
aad
push
inc
in
mov
loope
ret
loope
mov
pushf
push
scas
xchg
into
sub
fisubrl
lock
cmp
and
xor
push
aad
nop
inc
xor
xchg
xchg
inc
and
out
push
loope
subl
jl
sub
inc
pop
sbb
in
sbb
adc
popf
inc
inc
mov
pop
lea
or
push
ret
pop
sarl
in
stos
mov
in
pop
jl
mov
ret
dec
jecxz
pop
sahf
mov
mov
mov
addr16
cmpsb
or
dec
into
and
mov
stc
popa
icebp
cmp
imulb
sub
dec
into
pop
fwait
adc
mov
sbb
push
sahf
aas
lret
scas
inc
loopne
mov
mov
out
pop
fld
mov
les
lcall
insb
scas
insb
cmc
mov
jns
popf
sbb
jle
insl
or
or
andl
adcb
lcall
rorw
cmpb
and
iret
cmpsb
aam
loop
and
lea
adc
or
ljmp
inc
jg
mov
loope
test
ljmp
rcll
add
scas
cmp
adc
mov
jecxz
xchg
pop
fcomip
aaa
lods
mov
lds
jg
hlt
pause
or
addr16
ret
hlt
sbbl
stc
adcb
frstor
mov
add
mov
out
sub
ds
xchg
jnp
rorb
iret
je
out
shlb
aaa
lret
jg
bound
les
xlat
jg
aam
test
xor
pop
test
jge
jge
xor
xchg
pop
add
sbbl
mov
push
rorb
insb
and
stos
dec
xor
pop
data16
test
sti
das
mov
ds
jne
xchg
clc
pusha
xor
xor
dec
or
je
andl
cmp
call
testb
fstpl
pop
xchg
mov
and
cmp
mov
lahf
popf
inc
mov
rcll
pop
jge
das
cmpsb
out
pop
ss
pop
push
dec
aad
std
adc
sbb
loop,pn
test
sbb
add
into
push
leave
fstps
fdivrs
aad
in
lods
mov
adc
inc
mov
mov
pop
lea
lcall
hlt
repnz
js
adc
sub
loopne
xor
aaa
jmp
jmp
adc
dec
sub
cmc
fcmovnu
movb
mov
nop
aas
dec
bound
pop
clc
jno
inc
add
shlb
aaa
mov
popf
jge
push
das
es
incb
int
leave
pop
inc
std
fucomi
xchg
mov
in
mov
lret
stos
shr
sub
arpl
cmp
sti
rorl
iret
cmp
cmp
fsubl
xchg
rcrb
insb
inc
dec
lret
test
adc
fs
lods
cmpsb
push
pop
in
arpl
ret
cwtl
inc
cmp
ret
mov
shrl
jne
dec
std
push
jns
xor
sti
xor
xchg
sub
subl
add
mov
into
fisubl
pop
lcall
cltd
pop
pop
movl
in
ficoms
inc
arpl
adc
inc
jae
pop
mov
adc
in
xor
or
fs
pop
add
push
inc
jmp
pop
push
lret
test
pop
cmc
cmp
mov
xor
jns
pop
adc
xchg
mov
bound
mov
sub
dec
jge
jo
mov
inc
mov
mov
iret
xor
mov
fnsave
sub
mov
enter
gs
inc
scas
push
mov
int3
xorb
lahf
jb
lods
stc
jp
inc
xchg
pop
lret
fnsave
sub
mov
mov
pushf
adc
pop
movl
test
or
cmpsl
or
jbe
and
sahf
stos
mov
in
out
sarl
mov
inc
pop
lret
xchg
decb
dec
and
mov
mov
cmp
aas
insl
push
insb
push
push
enter
push
incl
pop
add
ljmp
xchg
bound
stos
mov
outsb
ss
dec
add
push
jle
lcall
cmp
adc
js
pop
xchg
repz
ljmp
or
sarl
or
sub
pop
jae,pn
adcl
cwtl
pop
jne
xor
rorb
gs
das
gs
jne
cmp
pushf
in
ffreep
inc
mov
mov
pop
rol
loop
insl
leave
rclw
rcrb
and
push
jge
inc
sbb
mov
inc
ja
or
mov
inc
cmp
stos
or
or
call
scas
jge
popf
xchg
out
sbb
cmp
fildl
ds
cmp
fistl
and
cmovae
fadd
hlt
xorb
xor
aaa
clc
cmc
loope
loope
and
fildll
inc
orl
mov
adc
in
adc
pop
je
sbb
jge
loope
mov
in
in
rorl
lods
cli
push
mov
mov
cmp
mov
push
and
lret
fwait
push
in
cmc
sub
lods
test
ret
lock
insb
push
push
and
cmc
xchg
jae
mov
add
push
out
fsubrs
xor
aam
test
movsl
lcall
sub
fdivrs
mov
mov
iret
repz
adc
lods
adc
sub
jnp
and
mov
fidivs
xlat
sub
jae
out
lahf
loope
dec
inc
pop
repnz
pop
sahf
push
scas
push
icebp
dec
icebp
inc
push
div
les
sbb
ljmp
sbb
jge
cmp
dec
mov
cs
aam
fwait
xlat
and
push
xor
aas
push
ret
adc
mov
sub
stos
push
cmc
aad
or
lret
cmp
fisttps
pop
xchg
push
mov
ljmp
adc
push
and
pushf
aaa
cltd
or
jo
icebp
js
clc
fcom
aad
mov
fldt
mov
out
xor
rorl
xor
jno
mov
xchg
push
mov
xchg
jne
lods
or
cld
pop
mov
push
push
pop
adc
dec
out
mov
pop
jp
ljmp
stos
cmp
dec
jnp
stos
out
rcrb
rcrb
dec
arpl
call
ss
xor
mov
mov
movsb
out
mov
fs
jecxz
cltd
iret
int3
and
pop
adc
cmp
out
and
mov
into
mov
loop
push
iret
cmpsb
dec
sub
sar
sub
adc
jmp
sbb
xchg
mov
scas
jo
and
mov
loopne
clc
mov
mov
pop
pop
cmp
test
ljmp
jb
ret
rcr
add
nop
int3
mov
dec
sbb
fiadds
fwait
bound
orl
out
rol
sub
movsb
adc
mov
push
ja
call
gs
stos
push
adc
mov
add
sub
jp
sub
push
pop
pop
xor
rol
jmp
enter
add
fidivrs
mov
cmp
shlb
andb
js
jno
movsb
das
mov
ss
out
add
movsb
ja
push
imul
pop
xchg
lret
ss
xchg
xchg
push
scas
sub
notb
pop
fdivrs
sbb
inc
cmc
push
jge
cmp
imul
clc
in
mov
and
out
sub
insl
sti
cmp
push
cmp
sub
out
mov
call
push
cmc
or
cmp
inc
xor
fdiv
dec
out
test
nop
or
rcll
popf
ds
fisubs
inc
pop
pop
pushf
sbb
and
pop
test
arpl
scas
daa
jns
jge
push
mov
fistpll
pop
outsl
push
in
jbe
push
pop
sbb
test
pop
xor
test
fwait
sub
in
pop
lahf
scas
sahf
xor
push
aad
pop
and
clc
outsl
add
xchg
and
jmp
inc
add
xchg
ret
mov
lahf
pop
cltd
in
popf
push
mov
aaa
pop
add
and
dec
dec
mov
call
dec
into
dec
ror
jns
out
and
ret
mov
jo
pop
xchg
imul
inc
outsb
aas
mov
scas
cmp
cli
in
imul
loopne
add
scas
sahf
inc
mov
out
test
adc
popf
gs
and
or
push
pop
in
cs
xchg
mov
js
das
fisttpll
outsl
lret
cmc
clc
push
sub
push
bound
mov
rcrb
dec
push
je
leave
nop
push
xlat
fdivl
cmp
sahf
inc
pop
fidivs
loop
test
sub
xchg
add
jnp
xchg
xchg
jb
jbe
jb
and
cli
fildll
push
cmp
aas
imul
scas
xchg
xchg
xor
inc
sbb
sbb
cli
lret
arpl
jbe
lock
dec
jns
cmp
mov
scas
jns
push
add
push
adc
sbb
cmpsb
xchg
jae
cltd
rcrb
or
ds
adc
std
push
mov
sub
mov
lods
inc
je
or
bound
cs
das
ss
push
and
xchg
loope
lds
ret
pop
in
fistl
lahf
and
lret
lret
mov
aas
sbb
dec
jl
sub
vpcmov
pop
daa
push
jno
arpl
inc
mov
test
push
dec
pop
or
ljmp
filds
xchg
xchg
out
sti
xor
jg
or
sti
push
push
stc
cmp
jns
icebp
lea
imul
sbb
aas
and
dec
xchg
and
jg
add
mov
and
popf
dec
pop
xlat
movsl
dec
outsl
scas
mov
shll
out
xlat
out
in
xchg
sub
lock
jecxz
pop
cli
imul
lock
lahf
add
in
rcrb
pop
imul
mov
xchg
add
insb
cmp
dec
xor
xchg
mov
add
out
mov
das
lret
stos
subl
cmp
roll
pusha
mov
xor
into
les
adc
jb
lods
imull
lods
cmpsb
leave
mov
jp
push
sub
push
inc
adc
jne
push
stos
pop
mov
fiadds
cld
cltd
fbstp
push
xor
iret
insl
in
lahf
fnsave
cld
loope
jb
cmc
int3
divl
addb
adc
sbb
sti
mov
mov
mov
xchg
enter
jns
sti
mov
rclb
push
push
pop
push
jnp
and
add
ret
xchg
xor
and
into
arpl
mov
das
inc
jbe
mov
cmpsl
sub
sub
xchg
pusha
aad
xor
jne
ja
pop
jle
gs
dec
push
rolb
cmpsb
hlt
loope
call
iret
in
fs
es
repnz
fiaddl
sub
mov
sbb
popf
sbb
mov
mov
push
jl
pop
imull
pop
push
sub
mov
sbb
js
insb
push
jp
sbb
or
imul
mov
pop
mov
jnp
mov
mov
cmp
movb
sarl
push
enter
enter
movsb
inc
insb
sbbb
inc
and
adc
inc
xchg
das
nop
xchg
jle
js
lcall
dec
cmp
inc
jge
faddp
popa
pop
jno
test
call
cltd
aad
insl
jecxz
jne
cli
mov
add
lods
mov
repnz
pop
xlat
ret
jl
fcmove
sbbl
xchg
ss
cmp
fildll
out
fwait
mov
mov
pop
add
aaa
ja
inc
lods
pop
xor
scas
dec
or
jne
lea
mov
jbe
arpl
mov
jmp
insb
pop
mov
sarl
testl
sub
sub
outsb
stc
cmc
outsl
sti
loop
or
shlb
ss
and
lods
adc
lods
xchg
push
jns
mov
jb
fildll
xchg
push
stc
je
xchg
das
cmp
rcrb
xor
cmp
push
dec
mov
mov
mov
sub
fidivrs
push
out
cs
gs
jno
xor
out
stos
cmp
aas
and
or
enter
mov
xchg
pusha
imul
push
push
mov
sbbl
jo
jb
outsb
mov
pop
sub
mov
mov
test
hlt
pop
leave
lret
test
arpl
cmpsl
adc
adc
push
cld
test
shrl
cld
xchg
into
repnz
fisubrl
jo
rorl
insl
sub
leave
cmp
sbb
adcl
bound
fsubrl
sbb
and
enter
and
fnclex
fadd
and
in
out
or
sti
xor
cmpsb
aad
or
or
adc
stos
xchg
insl
mov
insb
mov
sub
scas
dec
cmpl
insl
nop
jecxz
cmpsb
xchg
cmp
push
enter
cmc
test
mov
out
mov
mov
mov
push
xor
popa
fbld
mov
ja
ror
and
je
dec
movsw
lods
into
cmp
mov
push
push
mov
push
pop
add
pop
iret
inc
mov
lcall
pop
movl
push
jmp
addb
add
sbb
xor
adc
xchg
pop
dec
adc
mov
out
or
push
int3
sbb
hlt
xchg
jp
jge
fcoms
xor
xor
pop
sub
loope
mov
xchg
fists
mov
adc
cwtl
cmpsl
and
xchg
sub
xor
mov
xchg
sar
mov
repnz
pop
sarl
push
pusha
hlt
adcb
and
sbb
push
loop
mov
fsubp
fldenv
dec
in
cmp
rcrb
mov
aaa
xchg
scas
nop
enter
ja
test
or
mov
jge
adc
and
int
into
add
ja
dec
lods
addr16
xor
push
leave
jb
xor
les
push
sub
pop
sbb
movsl
mov
ja
pop
mov
cmp
inc
push
add
sahf
push
push
mov
jge
fs
pop
call
pop
push
int3
sahf
jno
lcall
stc
dec
sub
insl
or
lret
stos
sub
pop
add
test
inc
dec
mov
cmp
cltd
jmp
shll
mov
cmp
clc
jo
xor
sub
inc
cli
cld
dec
lcall
inc
mov
cmp
icebp
cmpb
jmp
add
add
pop
add
mov
repz
inc
mov
jbe
popf
push
lds
imul
jge
out
jno
mov
int3
jmp
fwait
inc
lock
jns
jne
pop
ffreep
push
xchg
cmp
outsl
dec
aad
lea
mov
lds
mov
push
ja
paddusb
repnz
cld
dec
cmp
test
das
in
test
test
nop
idiv
inc
mov
out
add
arpl
aad
scas
xor
in
dec
add
outsl
int
jge
adc
lret
loop
and
js
cltd
sbb
mov
fisubl
push
movsl
test
ret
scas
nop
imul
aas
xlat
or
out
jmp
pop
push
addr16
sub
sub
mov
lods
stos
movsb
shrl
cwtl
fildl
xchg
jae
adc
add
mov
mov
imull
push
out
loope
xor
mov
scas
repz
pop
movsl
jmp
in
or
jmp
or
pop
sti
into
adc
out
pushf
xor
adc
dec
pop
xchg
test
push
es
or
dec
push
test
xchg
jmp
aaa
call
mov
shrl
sbbl
test
jne
test
cwtl
inc
push
or
xchg
int3
jge
mov
mov
fadds
out
mov
ret
daa
dec
pop
int3
or
fldcw
call
jno
push
pop
out
pop
mov
or
mov
cmp
xor
jb
int3
in
fs
dec
cmc
fdivr
in
out
or
jae
jbe
rcl
aas
or
and
lahf
sahf
lcall
into
fsub
mov
mov
dec
or
ja
add
gs
xlat
xlat
jo
cmp
inc
arpl
lahf
outsl
push
jno
out
pop
imulb
dec
sbb
divb
test
popf
stos
mov
aam
in
pop
mov
or
cmp
sub
fidivs
or
adc
jp
test
int3
fnstenv
inc
hlt
enter
jnp
jmp
imul
xchg
cmp
push
jl
mov
fwait
and
cmp
xor
das
push
mov
lcall
mov
pmaxsw
add
scas
mov
push
or
mov
jp
xor
ficomps
lods
mov
inc
orl
ffree
clc
xor
mov
xchg
mov
lea
or
repz
xor
subb
xchg
sbb
mov
adc
out
mov
mov
lea
ss
inc
in
mov
mov
in
je
lret
out
inc
dec
xor
xchg
mov
test
jmp
fidivs
xor
or
lods
mov
jae
xlat
ret
in
sub
inc
pop
popf
scas
enter
out
lret
fwait
push
mov
arpl
sahf
push
and
push
roll
jecxz
inc
test
or
xor
or
push
sbb
jmp
cmp
xorb
es
fstp
lret
gs
rcrb
xchg
jp
pop
lods
sub
outsb
incl
and
es
sub
xchg
jmp
mov
push
stos
shr
mov
mov
imul
dec
je
jmp
jge
sub
addr16
mov
mov
lahf
popa
repz
pushf
idivw
jb
in
sbbl
adc
faddl
fimull
mov
loope
pop
rcrl
rorl
jns
xor
add
push
nop
xchg
and
xor
xchg
jnp
mov
adc
aas
xchg
incb
xor
add
jmp
test
dec
mov
push
push
jns
ret
sub
stos
cmp
addr16
aam
outsb
ja
pop
add
popf
call
inc
sahf
push
lods
jne
sarb
mov
insb
adc
bound
sub
sub
in
adc
cmp
divl
jle
out
call
aas
popf
rcrl
cwtl
jg
jmp
or
cld
repz
cmpb
jae
icebp
movsb
cmp
jo
push
sti
lret
enter
outsb
pop
sub
movsb
scas
loope
jnp
aad
rol
inc
fucomp
stos
cwtl
test
cli
loope
jb
movsb
jns
pop
jbe
cltd
stc
sbb
adc
lea
lods
or
mov
lcall
loope
push
add
mov
call
pop
repnz
jns
pushf
cltd
add
rcrb
in
imul
push
sbb
mov
push
cmp
cmp
outsb
mov
push
jnp,pn
mov
jmp
push
adc
shl
cmpsb
xor
and
sub
out
cmp
jns
dec
xor
in
mov
adc
push
xor
leave
es
test
lret
nop
sub
or
xor
xor
pop
imul
or
addr16
testl
stos
test
sub
lods
bound
push
xchg
xor
inc
stos
mov
fists
sub
sub
jl
xchg
sbb
jbe
aam
lret
jns
movsb
mov
nopl
sti
pop
fcoml
push
xor
add
xor
out
arpl
pop
icebp
push
mov
ja
jmp
cmpsl
rorb
cwtl
mov
dec
popf
inc
push
test
sti
mov
in
dec
popf
jmp
sub
nop
mov
popa
push
arpl
jl
mov
pop
adc
pop
mov
or
jge
lret
rclw
dec
rol
aas
push
mov
mov
enter
mov
dec
imul
les
cmp
out
inc
adc
outsb
scas
or
pop
xor
gs
jmp
mov
mov
pop
xor
rcr
out
push
cld
push
fs
cmp
adc
adc
sub
gs
daa
inc
test
mov
push
push
stos
push
or
into
dec
mov
mov
sahf
into
mov
pop
mov
push
push
jbe
fmull
push
push
enter
fs
mov
out
add
add
inc
inc
icebp
adc
hlt
loope
cmpsl
sbb
push
xchg
in
inc
inc
cld
in
mov
negb
mov
lods
lods
divl
pop
shll
jecxz
fiadds
pop
adc
push
in
add
push
movsl
inc
rorl
out
lock
jmp
lds
cld
rcrb
fists
daa
xchg
cmp
and
add
sarl
stos
lds
add
and
sbb
adc
test
adc
lds
push
adc
or
pop
dec
fsubp
rcrb
test
sti
jl
inc
testl
add
xchg
xlat
pop
stos
mov
bound
outsl
or
cltd
mov
xchg
pop
xor
adc
test
mov
add
movsl
cmpsl
pop
mov
xchg
mov
pop
inc
popa
clc
scas
rorl
jno
mov
daa
out
mov
lock
in
sbb
ja
nopl
xor
cwtl
cmpsb
insb
ficoml
mov
xchg
adc
mov
and
push
sbb
adc
push
xchg
lea
das
jmp
or
push
movsb
jb
cmpsb
ficomps
out
lret
int
jge
pop
dec
outsl
adc
flds
insb
cmp
incl
cmp
mov
into
inc
cmp
xlat
xlat
lock
xchg
mov
fldl
jmp
adc
add
std
pextrw
and
mov
and
sbb
sbb
mov
add
ficoms
or
push
dec
rclb
sub
ret
pop
sbb
int3
sub
push
aam
into
mov
inc
leave
mov
jp
sbb
into
xor
xchg
repz
sbb
cltd
out
cmp
ss
not
aaa
sbb
js
sbb
mov
jmp
mov
aam
loop
gs
pcmpgtw
push
pop
sub
out
mov
mov
int
fs
pusha
inc
pop
aaa
sub
jle
sbb
adc
xor
jg
mov
inc
jg
fildl
es
dec
rorl
push
lock
loope
mov
out
mov
mull
gs
cmp
shll
sbb
sub
xchg
cmp
or
in
icebp
cltd
testl
push
scas
push
sub
inc
push
call
xchg
mov
mov
loopne
imul
sbb
jg
xor
outsl
pop
xor
inc
int3
std
xchg
shll
fsts
mov
jb
push
popa
cmc
mov
dec
xor
and
test
mov
sub
inc
mov
cmc
cmp
pusha
inc
jge
repz
mov
pusha
fxch
fs
pop
hlt
cmpsl
dec
shll
push
test
xor
cld
or
test
xor
inc
stc
push
adc
sbb
loopne
ret
stos
xor
js
test
sti
movsl
sub
rep
test
cmp
pop
int3
dec
nop
pop
stc
sbb
jbe
cmp
adc
jo
popf
call
test
jl
cwtl
pop
sti
fstpt
add
inc
mov
das
xchg
push
add
mov
add
pop
xchg
sti
cli
outsl
sub
loop
daa
xor
xchg
sbb
hlt
sub
cmpsl
mov
cmp
pop
push
fs
popa
ljmp
in
add
xor
add
lret
push
dec
jge
dec
addb
push
stos
gs
fwait
enter
into
jns
dec
cltd
sbb
push
hlt
push
mov
sub
xchg
jno
jg
call
das
add
loope
out
in
mov
mov
std
in
xchg
shl
pop
push
pushl
imul
in
adc
sub
stc
ds
jnp
test
mov
mov
push
pop
mov
add
subb
les
int
mov
mov
shrb
jmp
cmc
pop
jnp
call
mov
jbe
push
loopne
xchg
xor
inc
fldenv
jbe
adc
adc
mov
inc
enter
test
xchg
fmuls
or
ret
clc
xor
add
xchg
mov
pop
xchg
fnstcw
sti
out
lret
push
dec
movsb
jge
dec
xor
cmc
inc
add
adc
data16
cli
adc
and
mov
xchg
or
addr16
xchg
mov
loope
pop
sub
pop
cmp
mov
xchg
adc
xchg
mov
in
test
xor
jge
mov
roll
mov
inc
je
xor
sub
adc
cs
mov
sarl
aad
adc
dec
and
and
or
push
and
mov
lea
sub
and
inc
out
push
push
sbb
mov
outsl
cmp
rol
lea
and
adc
push
mov
adc
das
pop
movb
cmp
mov
aad
outsl
aaa
leave
xchg
notb
pop
add
xchg
fcmove
jg
rolb
mov
rolb
xchg
jne
xchg
cltd
cmp
xchg
inc
sarl
jmp
test
scas
mov
xor
or
rcll
xchg
rorl
jns
xchg
add
adcb
mov
mov
gs
xor
add
add
cmp
xchg
scas
decl
sub
je
mov
loop
jne
xor
cwtl
xor
jp
test
jbe
ficomps
xchg
ret
insl
sub
inc
fildl
mov
push
pop
fcomps
icebp
shl
sbb
xchg
mov
pop
fimull
in
jb
out
pop
mov
pusha
in
xor
dec
push
loop
push
frstor
out
push
inc
push
dec
cmp
xchg
pop
xchg
jle
jge
add
xchg
xor
push
sahf
lret
jne
mov
mov
xor
inc
inc
mov
xor
in
and
jl
fwait
decb
insl
and
fadds
jbe
xchg
jnp
jne
test
imul
jae
clc
popf
add
stos
js
dec
or
les
mov
ror
pop
flds
adc
mov
push
mov
adc
jl
pop
sti
aaa
jo
sahf
push
push
dec
jb
mov
sets
inc
sbb
test
sub
shlb
xor
xchg
gs
xor
std
mov
fiadds
out
jle
jg
gs
sub
xor
adc
jmp
mov
mov
cmp
mov
mov
add
inc
dec
push
ret
pop
push
or
fistps
jl
gs
jl
daa
cmpsl
jne
in
insl
jnp
mov
out
sbb
sub
outsb
mov
dec
and
les
xor
and
in
and
pushf
std
and
xchg
popf
les
cltd
sbb
bswap
jp
dec
js
cmp
in
adc
decb
jl
cmp
push
jb
mov
xchg
loope
add
ss
hlt
push
nop
lcall
or
into
fcompp
sub
pop
ret
jae
and
mov
xorl
xor
cmp
add
push
xchg
jle
xor
cltd
cmp
inc
out
ds
out
insb
pop
pop
pushf
xchg
mov
cmp
pop
in
lds
imul
mov
cmp
cli
mov
mov
lcall
dec
arpl
xchg
push
hlt
fmul
mov
bound
sub
mov
in
mov
daa
push
leave
mov
aam
lahf
lcall
dec
mov
mov
jl
cs
push
xchg
inc
scas
add
cltd
gs
jmp
into
xor
imul
aaa
fdivrs
xchg
sti
add
dec
jge
adc
jns
jbe
shlb
sbb
repz
pop
add
out
mov
xor
push
subb
xlat
ja
lcall
shll
jb
xchg
sti
in
jmp
adc
mov
sbb
cmp
ljmp
or
dec
int3
lock
test
xchg
mov
incb
cmp
cmp
sti
dec
sbbl
hlt
test
stos
mov
mov
jnp
int
sbb
pop
addr16
adc
mov
pushf
repnz
ret
pop
adc
cmp
pop
pop
push
int
ret
sti
xor
dec
icebp
je
pop
jns
add
xlat
clc
in
nop
in
enter
xor
mov
adc
or
push
inc
das
add
das
xchg
das
aam
mov
jmp
roll
jbe
stos
int
insb
repz
xchg
sahf
leave
repnz
divb
inc
push
cmp
adc
pushf
out
pusha
push
mov
out
add
fwait
xchg
mulb
mov
sub
jae
push
stos
cld
xchg
xchg
xor
mov
xchg
aad
pop
movsl
lret
enter
mov
jns
bound
shll
pop
test
nopl
dec
ss
adc
in
push
sahf
hlt
cmpsl
inc
push
or
jo
out
mov
repnz
mov
aad
mov
push
cmp
cld
push
aad
out
xchg
jl
adc
js
mov
in
ss
cmpsl
in
std
daa
add
or
repz
push
fs
hlt
adc
add
adcb
and
enter
sbb
pushf
scas
mov
test
push
or
pushf
push
loopne
and
pop
push
add
push
aas
push
cmp
xor
repz
xchg
xor
sub
push
es
mov
int3
stos
ret
xchg
sub
movsb
sbbl
cld
mov
test
out
or
clc
test
clc
jge
pop
bound
daa
addr16
xor
dec
dec
popa
jno
cmpsl
add
adc
pop
mov
mov
mov
cmp
inc
xor
in
dec
aad
xchg
push
imul
add
add
fdivs
jmp
andb
ret
incb
mov
mov
mov
inc
sub
andl
mov
pop
lea
inc
mov
cmp
push
out
mov
out
fistpl
mov
mov
add
cmp
push
pop
aas
rorb
or
adc
cmpsb
aaa
lahf
xchg
loop
cltd
subl
mov
xchg
mov
hlt
mov
add
sbb
mov
inc
into
cld
dec
cmpsb
mov
pop
inc
mov
mov
aam
add
cmp
xor
repnz
mov
xchg
mov
cltd
xchg
jmp
loop
cmp
jno
dec
into
sbb
or
mov
in
sub
outsb
daa
inc
je
mov
mov
ret
fwait
mov
jecxz
add
addr16
jmp
jb
out
xchg
das
out
das
frstor
mov
jae
rol
inc
push
std
sbb
scas
inc
lret
mov
inc
jecxz
sbb
iret
lahf
ret
loop
push
nop
mov
sbb
cwtl
ja
mov
add
and
jp
jle
sbb
movsb
imul
imul
inc
stos
jb
call
rclb
cli
or
inc
sub
rcll
add
sub
and
mov
xor
pop
xchg
mov
lds
jecxz
cltd
les
shl
sbb
mov
mov
push
sub
jl
dec
test
pop
inc
and
in
mov
adc
movsb
mov
lret
push
call
or
je
xor
jno
pop
and
cmpsb
jmp
add
shl
lcall
movsl
jg
mov
out
xchg
fwait
test
sbb
xchg
sbb
test
scas
cs
pop
add
mov
cmp
call
stc
ds
lahf
rcrl
enter
imul
frstor
call
in
xor
inc
pop
mov
adc
out
jmp
loop
xor
cmpsb
pop
xchg
inc
or
pushl
bound
imul
inc
ret
pop
cmpsb
and
out
xor
imulb
dec
push
mov
out
lret
pop
push
inc
js
pop
pushf
lahf
fwait
test
push
push
lds
xor
mov
das
aaa
adc
daa
cltd
ffreep
imul
adc
shl
mov
jmp
es
in
add
ljmp
inc
in
jl
push
bound
pushf
mov
xor
dec
or
fildl
dec
push
mov
add
int
xor
cmpsl
test
cli
xor
sbb
push
daa
lret
xchg
pusha
mov
push
inc
mov
mov
fistl
lahf
pusha
xchg
push
adc
sub
xchg
push
leave
and
or
lock
imul
pop
imul
cld
add
popf
cmp
aaa
xchg
dec
sub
cmp
dec
xor
lret
push
outsl
mov
inc
out
adc
popf
xor
sbb
sarb
rclb
fs
sbb
imul
sub
scas
insl
mov
jmp
push
iret
pop
xor
scas
jbe
push
ds
loop
jmp
mov
mov
jge
insl
jae
push
pop
mov
dec
test
loope
cs
adc
or
pop
imul
imul
scas
jg
push
mov
dec
pop
mov
cmp
lods
out
add
sbb
call
and
out
mov
push
jle
ljmp
xor
andl
cs
dec
in
xor
negb
out
sbb
xchg
shll
fsubl
cmp
sarb
xor
popf
push
mov
xchg
arpl
mov
push
xchg
in
add
rcrl
fcmovu
fstpl
mov
push
pop
xchg
mov
sbbl
xchg
pop
cmp
les
xchg
ljmp
lahf
and
subb
jmp
mov
xchg
mov
repnz
dec
cmp
inc
fcomi
xchg
pop
push
shrl
mov
roll
jne
dec
sahf
aam
sub
test
lret
call
push
sti
push
jo
mov
in
add
test
jo
mov
icebp
div
stos
lret
mov
arpl
inc
inc
cmp
jns
loopne
sbb
fidivrl
loop
push
jl
in
test
pop
cmpsb
push
loope
mov
bound
dec
mov
fsubrl
sahf
jno
add
mov
fistps
mov
clc
scas
shrl
stos
push
xchg
xchg
mov
mov
jbe
or
shlb
pop
jae
sbb
mov
aaa
jb
inc
popf
pop
jle
dec
outsl
lods
inc
push
test
fbstp
and
xchg
xor
in
ss
movsl
shr
xor
push
in
push
sarb
cld
cs
jp
rclb
ret
mov
dec
jns
xchg
xlat
jecxz
adc
mov
sbb
pop
xor
call
mov
pop
push
xor
push
fbld
imul
fdiv
jno
lds
jno
insb
sbb
dec
sub
int
cs
jl
add
and
dec
pop
lret
pop
stos
jae
push
mull
fadds
insl
inc
pop
jge
in
adc
test
test
lods
sub
or
mov
stos
mov
popa
sarl
mov
cli
pop
push
adc
ret
xor
jecxz
push
sbb
data16
clc
inc
fdivrp
mov
push
movsb
jg
push
mov
cwtl
je
jmp
xchg
dec
and
dec
ljmp
mov
cs
cmp
push
and
ja
dec
cwtl
or
inc
push
rcll
pop
repz
mov
lods
push
mov
rclb
cltd
mov
fcmovnu
add
fcoml
lock
cmp
mov
faddl
pop
mov
jbe
cmp
int3
dec
push
pop
in
icebp
push
mov
shll
aas
add
sbb
mov
jmp
jp
and
dec
rorb
in
je
fs
repz
stos
xchg
into
jp
dec
xor
mov
fisubrl
lds
or
icebp
pushf
dec
add
push
out
sbb
rcrb
popa
mov
sbb
push
iret
mov
fucomp
pop
mov
push
insb
add
ds
pop
inc
in
inc
mov
push
add
cltd
out
divb
shrb
jbe
push
fistpll
sarl
cmpsl
lock
and
add
dec
sbb
push
sti
sub
or
mov
into
call
out
sbb
cmp
mov
adc
loop
loopne
out
or
mov
xor
clc
inc
inc
nop
mov
and
xchg
cmp
pop
cltd
mov
cli
fcoms
pusha
fldcw
and
dec
fmull
mov
inc
xchg
lret
sub
scas
pop
fisubl
cwtl
mov
call
xorb
out
dec
inc
and
pop
test
in
cld
adc
inc
shr
mov
popl
mov
sub
out
push
aam
popa
out
cld
mov
scas
dec
sub
andb
lods
fstl
fsts
jle
mov
pop
push
jmp
aam
rcl
mov
lods
or
jmp
cs
fwait
insl
cmc
cmp
mov
daa
sbb
das
sub
cmpsb
push
mov
sbb
lods
xor
pushf
imul
pop
nop
into
add
mov
adc
and
xchg
cs
and
out
lds
out
ficoms
subb
sti
push
ret
jmp
adc
cld
outsb
stc
jge
push
jmp
sub
jo
imul
mov
ss
ja
dec
mov
aad
mov
fwait
mov
mov
xchg
inc
sahf
xchg
sbb
pop
cs
test
adcl
xor
in
loope
mov
mov
or
mov
or
mov
mov
fsts
pop
imul
ret
cmp
lock
movsl
adc
into
and
jne
jge
mov
xchg
icebp
mov
sarl
stc
xor
scas
in
jo
in
cmp
xchg
pop
push
fstpt
jmp
arpl
jae
push
adc
test
in
lock
jp
test
in
ficomps
push
lahf
push
or
sti
xorl
pop
mov
pop
jmp
jo
jne
iret
xor
cmc
xor
mov
mov
xor
cmpsl
test
je
push
imull
pop
in
clc
cmp
stos
ss
icebp
pop
xor
cmp
js
test
inc
sti
aaa
mov
rcll
jg
xor
push
ret
xchg
push
mov
movb
pushf
mov
mov
cs
enter
cs
leave
fdiv
inc
arpl
jae
dec
rcl
int
in
pop
decb
sahf
or
aas
lea
test
repnz
push
iret
cmp
orb
mov
sbb
cmp
xor
inc
mov
pop
mov
pop
jmp
sub
inc
stc
push
lods
loope
sbbw
dec
into
mov
jne
fwait
mov
mov
adc
popl
push
lret
push
push
rol
dec
mov
sti
lret
dec
into
pop
loopne
xor
pop
sub
bound
int
push
jmp
add
mov
repnz
fnsave
push
clc
jg
insl
rorb
add
add
fisubrl
shll
test
loopne
sbb
and
push
cmp
fistpll
insl
shl
mov
js
xlat
pop
fsubl
xchg
cmp
gs
dec
add
mov
and
je
mov
int3
mov
js
xchg
inc
jae
mov
jo
cmp
jns
mov
xor
insl
push
ret
leave
inc
cmp
fld
mov
cmp
clc
out
inc
push
and
xchg
idivb
add
pop
and
int
mov
sahf
cltd
scas
repz
arpl
leave
jbe
in
or
jae
stos
bound
je
mov
jg
cli
pushf
sarb
arpl
push
daa
cmc
mov
loope
add
and
push
loop
add
inc
cli
test
cmp
lock
test
xchg
inc
loop
push
fildl
test
dec
insb
repz
adc
inc
cltd
imul
pop
lods
dec
das
fcom
insb
bnd
add
pushf
aad
sbb
jno
xchg
in
push
mov
mov
cltd
into
jno
xor
adc
mov
jl
adc
mov
xchg
pop
and
call
add
add
aam
aaa
mov
cmp
das
fistpl
pusha
mov
or
mov
xchg
rclb
fmulp
aam
es
ss
jo
push
inc
imul
push
nop
mov
fadds
push
fwait
dec
jns
enter
vminsd
pusha
inc
sub
inc
jl
xchg
pushf
jmp
lret
cld
call
fisubl
jbe
je
xchg
mov
inc
jmp
outsl
pop
pop
fst
or
add
adcl
mov
scas
xchg
mov
test
out
test
pop
xchg
dec
push
outsl
cmp
imul
ljmp
and
or
cmp
dec
daa
mov
add
test
or
pop
aas
insb
subb
inc
add
cltd
add
add
stos
jl
and
stos
out
mov
fs
fldt
jg
xor
mov
outsb
mov
fld1
in
divb
out
rcrl
jp
dec
jne
imul
outsb
fldcw
popf
dec
jmp
xchg
push
or
add
insb
inc
repnz
dec
pop
jl
fadds
sbb
dec
in
xchg
sbb
pop
call
cltd
ljmp
popa
lods
cli
fistps
inc
push
jmp
leave
ds
pop
jbe
push
insl
lock
mov
push
mov
jb
loop
fs
mov
or
enter
dec
jno
sub
lret
shlb
and
mov
push
cli
push
xchg
ljmp
adc
xchg
and
cmpb
lahf
mov
out
xchg
mov
es
pop
cwtl
dec
mov
roll
xchg
xchg
jo
cmp
ret
mov
mov
into
cwtl
aam
adc
cmp
je
cmp
cmp
xchg
mov
aas
lcall
fcmovbe
pop
out
adc
sbb
mov
fimull
lods
dec
xor
inc
dec
push
mov
jne
aas
out
lret
ljmp
scas
loop
in
pop
cs
mov
pop
and
mov
dec
push
lods
xor
or
les
pop
mov
movsb
mov
xchg
or
jg
ja
mov
fiaddl
lahf
cmp
mov
mov
pop
push
cmp
scas
or
mov
inc
and
and
mov
inc
add
jg
hlt
shl
inc
negl
clc
nop
inc
dec
and
pop
outsb
sahf
jg
popa
jmp
push
notl
push
cmpsl
ret
or
add
dec
sub
xchg
cwtl
xchg
sar
xor
push
pop
push
sbb
ret
in
mov
adc
xor
push
std
jb
iret
repz
lret
mov
push
inc
scas
xor
mulb
pop
pop
imull
mov
cs
icebp
jl
push
cli
rcr
es
fisttpl
xchg
push
and
mov
jp,pt
lcall
mov
push
inc
adc
jp
pop
pop
arpl
fisttpll
repz
popf
orb
dec
ret
test
jnp
in
aas
mov
sbb
in
adc
adc
or
into
jecxz
pop
shll
into
jmp
or
push
pop
scas
mov
pop
es
jmp
cli
pop
mov
pop
mov
xor
inc
jl
jl
or
lret
das
xchg
xchg
and
ficomps
test
mov
and
in
mov
mov
icebp
xlat
cmp
lahf
scas
adc
aaa
jnp
repz
outsb
stos
scas
push
sub
mov
pop
push
cld
cmp
or
or
adc
loopne
rorl
call
mov
enter
jne
lcall
fwait
xor
fnstcw
outsl
mov
push
fisubrl
inc
call
fs
xor
fcomps
adc
gs
sahf
pushf
test
cli
mov
mov
sub
bound
mov
pop
sub
aam
orl
cmpsb
cli
mov
pop
lret
adc
and
mov
add
add
xchg
sti
or
jb
xor
or
xchg
loopne
pop
outsl
fwait
lods
pop
xor
out
fistpl
xorl
std
cltd
jo
fmull
int
movsl
mov
lret
stos
cmpsb
int
sbb
xchg
lods
xor
pop
mov
cmp
jmp
cli
jne
pop
outsl
outsl
xor
cmp
mov
adc
mov
rol
inc
xor
cmp
sbb
and
sub
or
adc
subb
dec
mov
pop
xchg
lea
fdivrl
popa
jge
or
ljmp
testl
mov
dec
pop
xor
idiv
dec
jp
mov
in
mull
adc
mov
nop
leave
gs
adc
bound
std
fistl
adc
sbbb
sbb
mov
jmp
insl
jmp
adc
das
dec
pusha
jae
popf
pop
std
pop
fiadds
cmp
out
jmp
mov
sarl
std
sbb
xchg
lea
leave
addr16
ja,pn
pop
and
jne
popa
push
mov
xchg
fadd
dec
movsb
xor
xchg
xchg
call
fimull
cltd
movsb
aaa
cmp
ret
mov
xor
mov
sub
cmp
adc
and
inc
fnstcw
mov
jb
repnz
pop
pop
insb
jo
outsl
mov
dec
pop
and
and
mov
imul
sbb
push
aad
mov
mov
out
xor
mov
sub
loopne
mov
adc
out
xchg
sbb
outsl
data16
sahf
and
lock
lret
and
rcll
push
mov
in
ds
pop
test
daa
push
mov
fwait
xchg
popf
pop
popa
or
mov
or
stc
orl
or
and
push
loope
mov
jge
loope
enter
loopne
clc
es
mov
sbb
mov
mov
idivb
mov
jmp
adc
cwtl
cwtl
push
lahf
xor
jecxz
cmc
dec
movsl
jno
adcl
repnz
dec
xlat
add
jge
mov
lock
out
popa
popf
pop
cli
mov
cmpsb
xchg
mov
dec
push
mov
cmp
push
cmp
sbb
fstpt
jb
das
jne
scas
jnp
notl
dec
xchg
lahf
mov
add
pop
inc
jae
xor
jnp
insb
mov
aad
sub
pusha
push
aas
les
push
cmp
shll
add
add
popa
mov
mov
mov
push
adc
push
in
xchg
outsb
mov
iret
pusha
lock
lock
mov
sbb
cs
inc
fcomp
push
sbb
aam
adc
es
rclb
sbb
ret
mov
stc
adc
bnd
jno
pop
int
or
out
daa
bnd
mov
int
imul
fcoms
rclb
dec
adc
call
dec
insb
bndldx
out
mov
loop
adcl
out
icebp
xchg
pop
push
in
inc
repnz
repnz
bound
or
in
mov
push
pop
mov
dec
out
and
imul
dec
test
insb
pop
xor
div
jl
outsl
sbb
cmp
leave
ror
orl
stc
insb
pop
out
xchg
lods
inc
cld
ss
xchg
mov
movsl
bound
adc
lret
mov
daa
popa
mov
jl
cmp
add
add
sti
mov
dec
inc
std
lods
cwtl
fs
mov
dec
cmpsl
push
scas
mov
adc
mov
xchg
or
sbb
outsl
aaa
addl
and
or
adc
and
push
mov
and
and
int
and
cmp
adc
pusha
fnstcw
xor
adc
scas
stos
mov
data16
or
inc
jle
push
ja
fs
lcall
cli
ljmp
test
or
adc
ja
and
push
dec
out
outsb
mov
inc
add
inc
stos
imul
inc
das
jmp
fucomp
or
out
dec
mov
push
adcb
add
loop
js
mov
push
cmp
pop
adc
pop
ss
bound
push
mov
stc
pop
cmp
ret
add
or
inc
int
aad
loopne
shrb
imul
push
rclb
int3
sbb
out
std
repz
push
gs
jge
cs
add
out
in
xchg
lahf
adc
lret
inc
lcall
leave
jl
cmp
mov
mov
mov
popf
xor
fwait
ja
add
mov
pop
cmp
pop
sbb
push
rol
fiadds
xor
cmp
lods
push
mov
dec
dec
mov
pop
or
xchg
xlat
imul
pop
pop
cltd
test
push
sbbb
sbb
clc
add
push
adc
sbb
jecxz
sbb
lock
push
lcall
or
arpl
pop
cmpsb
sub
enter
rolb
in
sbb
fwait
xor
mov
outsb
mov
lock
es
mov
loopne
xlat
jmp
fisttpl
pop
out
and
rcrb
sub
and
pop
popf
cltd
jne
arpl
jge
shrl
jmp
shll
pop
add
out
repz
lods
addr16
adc
loop
pop
mov
lods
cmpl
jge
int
pop
xor
pop
xor
inc
inc
int3
mov
enter
fidivl
mov
push
fadd
lods
fisubrs
dec
sub
xchg
jo
aam
lret
rorb
pop
add
mov
jo
cmp
scas
in
cmpsb
addr16
repz
push
push
fildll
or
ret
mov
mov
call
push
sbb
leave
ljmp
fidivrl
syscall
xlat
xor
sub
outsl
nop
ret
imul
sub
jno
add
adcb
jmp
aam
fldcw
xchg
sbb
push
add
iret
push
jae
lcall
sub
xlat
jae
adc
adc
xchg
js
fidivs
das
mov
sub
dec
cld
xor
sub
fwait
adc
push
test
bnd
sti
or
cld
or
add
pop
imul
inc
pop
push
xchg
mov
inc
sti
lds
inc
cwtl
dec
mov
xchg
daa
stos
divl
mov
sbb
gs
arpl
push
out
push
or
adc
pushf
cld
jge
nop
and
mov
mov
jbe
mov
pop
or
sub
xor
shrb
inc
hlt
fiadds
push
fnstcw
mov
cs
mov
xchg
push
je
xchg
loope
jo
mov
andl
push
aas
pop
sub
fcompl
popl
mov
pop
popa
in
mov
mov
lods
cmp
ljmp
sbbb
into
add
mov
popf
xor
or
cli
stos
test
sbbl
xchg
cmp
push
arpl
rcrb
pushf
jg
mov
dec
fstpl
mov
or
loope
mov
hlt
imul
push
test
stos
jmp
daa
js
jl
mov
pusha
mov
ret
loope
sub
imul
ds
pop
and
popa
stos
xchg
pop
adc
fcompl
pusha
adc
mov
subl
pop
bound
cmpsb
mov
sbb
push
loop
xchg
fistps
sub
mov
pop
jne
sbb
cs
cmp
xchg
mov
clc
lods
sbb
cmp
mov
push
incb
addr16
imulb
fwait
mov
popf
icebp
sub
shl
jne
push
fiaddl
mov
cmp
int3
aas
push
and
sbbl
pop
mov
cmpsb
lahf
jge
cmp
hlt
add
push
das
fsub
je
mov
fnstcw
mov
int
push
insl
mov
jae
shll
or
int3
movsb
sti
fdivp
hlt
decb
jecxz
push
pop
dec
mulb
inc
into
lcall
call
int
mov
in
push
testl
stos
or
js
scas
mov
xchg
orb
movsb
in
shlb
sti
sbb
dec
cmp
push
std
je
test
and
lds
sar
repnz
cld
test
lds
cmp
cs
sub
fbld
ja
rolb
into
push
test
out
jbe
fadds
int
cwtl
xlat
inc
adc
int
pop
scas
and
int3
sub
mov
push
rcll
bound
xor
lahf
mov
add
outsb
xchg
nop
imul
ss
cmc
pusha
mov
cld
aad
mov
popf
hlt
mov
in
mov
xor
jnp
dec
jl
imul
rcrb
pop
dec
fdivr
mov
jno
and
iret
loop
inc
insb
pop
cwtl
or
or
mov
adc
sub
jo
in
xchg
rcll
dec
sbb
adcl
cmpsl
dec
pop
shll
sarb
test
bound
lea
and
or
add
jo
in
out
and
in
lods
lret
testl
xor
jo
xchg
cli
jle
or
mov
xchg
insb
test
push
mov
jge
imul
loope
xchg
xchg
xchg
and
lcall
xor
pop
fnsave
in
mov
mov
mov
iret
ret
sarl
call
loop
clc
or
cwtl
mov
movhps
pop
int3
hlt
pop
xor
enter
jge
jp
pop
push
mov
pop
ja
xchg
jno
mov
cmp
cld
inc
popa
ljmp
mov
or
mov
cmpsl
jmp
int
test
lcall
stos
inc
mov
cltd
inc
jb
aas
and
cli
insl
add
mov
add
je
dec
dec
inc
cs
ja
stos
outsl
xorl
test
sti
mov
mov
lds
out
mov
jge
cmpsb
inc
sbb
lds
cwtl
es
mov
push
mov
stos
cld
jmp
scas
movsb
aad
js
push
out
fidivs
and
mul
push
push
cmp
sti
mov
xlat
dec
fnstenv
pusha
pop
inc
jns
lret
add
shlb
dec
shll
add
aaa
jno
das
mov
cltd
sub
cld
repnz
xor
fsubrl
mov
icebp
mov
arpl
fidivl
pushf
and
shrl
ficompl
jo
inc
adc
lcall
into
stos
aad
cmp
jmp
sbb
sbb
or
cmp
push
or
cmp
js
mov
mov
daa
outsl
mov
jmp
jb
and
mov
mov
ss
arpl
leave
mov
jnp
test
or
or
lock
shr
or
hlt
pop
shrb
inc
add
push
sahf
cs
stc
test
or
pop
iret
and
mov
and
jnp
mov
xor
mov
inc
jle
xor
dec
jns
dec
push
daa
mov
jne
lcall
sbb
push
or
jp
mov
inc
mov
out
mov
gs
xchg
data16
inc
test
jl
mov
and
int
fstps
scas
mov
push
cli
shrl
hlt
or
sbb
cmp
outsb
adc
mov
sub
les
mov
daa
sub
pop
aaa
and
xchg
jmp
or
dec
ret
out
xor
dec
or
add
ficompl
jmp
je
test
ret
jge
mov
int3
and
rcr
dec
daa
out
or
movsl
imul
cmp
and
mov
jno
mov
iret
sub
fs
loope
ret
insl
cmpsl
sub
pop
cmp
xchg
add
mov
je
sbb
pusha
pop
orl
ret
lret
cmp
dec
mov
fstp
mov
push
pop
inc
cmc
push
adc
out
mov
push
inc
jp
arpl
mov
push
push
or
addr16
fists
cs
popf
rorb
add
mov
fwait
pop
mov
icebp
push
lahf
push
mov
push
mov
imul
int
jbe
in
adc
leave
andb
xor
inc
dec
dec
cmpsl
sub
popf
arpl
stos
inc
test
mov
test
push
sbb
xchg
sub
add
xchg
jg
push
pop
int
aad
add
xor
bound
jne
inc
out
inc
lahf
mov
outsb
lock
fnsave
imul
lds
mov
pop
push
ret
insl
push
test
int3
xchg
xor
dec
lret
outsb
out
pop
or
mov
pusha
jne
loope
jg
and
push
fisttpl
mov
adc
xlat
xchg
repz
stos
adc
push
and
lahf
dec
test
sbb
push
lcall
sbb
test
jnp
and
cmp
xchg
hlt
mov
mov
repz
mov
add
adc
gs
mov
cs
cmp
xchg
sahf
xor
enter
dec
stc
pop
out
jo
cmpsb
pop
cwtl
pop
mov
xor
sub
std
dec
jb
cltd
insb
pop
inc
push
inc
aad
sti
mov
mov
ja
mov
add
push
mov
cmpsb
iret
pop
mov
mov
jg
jae
mov
pop
ljmp
ret
dec
fsubrl
or
cmp
cmp
das
cmp
lret
mov
sbb
pop
add
push
in
ret
insl
or
mov
adc
push
pop
hlt
jecxz
ljmp
pop
enter
mov
xchg
fxch
fwait
sub
mov
jae
call
sbb
dec
and
es
cmp
outsl
jge,pt
mov
je
fdivrl
lret
bound
leave
pop
jns
popa
psrad
push
cltd
or
aad
xchg
inc
enter
icebp
stc
mov
mov
fstpt
pushf
gs
hlt
mov
fidivs
sbb
xchg
es
push
xchg
jo
sti
call
sub
inc
call
dec
sti
cmpsb
xorb
cmp
test
cmp
into
dec
cmpb
cmova
call
ret
dec
cmp
rclb
rcll
call
push
mov
pushf
outsb
xchg
mov
mov
jno
xchg
repz
xor
outsl
xor
mov
mov
sahf
out
mov
add
stos
rorl
inc
jmp
notb
inc
jns
and
divl
jbe
xor
insb
into
mov
inc
pushf
inc
in
std
ss
scas
neg
mov
popa
xlat
leave
into
inc
dec
shrb
mov
and
fbld
mov
ficomps
jle
jmp
repz
pop
xor
and
jp
push
xchg
xor
bound
add
imul
leave
pop
out
mov
mov
aad
outsl
add
cmp
jle
pushf
divl
xchg
pop
cltd
adc
gs
jg
fcomps
in
sbb
cmpb
insl
add
inc
xchg
sti
test
lock
mov
iret
inc
ret
xor
add
fisubrs
ret
xchg
js
aam
jae
jle
das
or
cmpsb
mull
ret
jmp
pop
jne
test
int
sub
inc
loope
jl
xor
fidivl
jge
stos
and
ds
sbb
inc
mov
mov
aas
adc
adc
adcl
push
dec
xchg
mov
jle
cmp
inc
mov
bound
repz
mov
sbb
fcoms
data16
mov
dec
mov
rorl
fists
xchg
rolb
negl
call
sub
mov
dec
push
popa
popf
adc
xlat
sub
add
inc
sub
out
push
imul
pop
ja
insl
pop
in
xor
stc
sbb
cmp
cwtl
dec
xchg
add
jp
sub
ss
hlt
jns
cmp
add
adc
push
cmp
and
repz
mov
xchg
stos
movsb
xor
adc
cld
jno
adc
mov
mov
dec
sbb
or
xor
iret
push
leave
aad
addr16
mov
sbb
cltd
cmpsb
nop
pop
sub
jmp
sbb
adc
loop
inc
addr16
sbb
int
movsl
pop
hlt
hlt
jle
mov
imul
out
fcmovu
xchg
cwtl
cmp
movsl
push
nop
imul
out
stos
fimull
pop
add
fsubrp
test
dec
test
aas
mov
sbb
rol
imul
push
or
std
pop
jbe
loop
xorl
adc
bound
movsb
sbb
dec
lret
or
push
inc
mov
sub
push
inc
stos
leave
push
pop
inc
call
sub
int3
call
andl
pop
or
insl
push
sub
or
das
adc
fidivrs
pop
xor
jno
mov
or
js
fisubrl
dec
ljmp
sub
daa
add
js
mov
roll
jo
mov
lds
les
push
or
mov
pop
cmpsl
mov
or
xchg
dec
and
out
aaa
sbb
mov
inc
pop
jbe
leave
addr16
and
jp
sub
adc
jg
outsb
clc
sbb
jl
cmp
jmp
mov
mov
xchg
ret
or
andl
or
mov
lods
pop
xor
ds
ss
push
outsl
or
pusha
ret
aam
test
leave
mov
test
mov
rcrb
sahf
outsl
xor
loop
loop
leave
mov
movsl
fisttpl
inc
xor
mov
add
pop
mov
add
shll
mov
cwtl
fs
inc
shlb
dec
xor
movsl
loop
movsl
test
popw
lret
out
dec
mov
jns
xchg
and
mov
mov
cmc
or
or
xchg
loope
xor
adc
mov
cmpsb
push
mov
inc
cmp
mov
rolb
popa
mov
inc
cmpl
pop
rcrb
data16
mov
or
cwtl
jne
mov
rcrb
jne
mov
movsb
jecxz
push
imul
mov
add
leave
inc
inc
scas
bound
xor
imulb
mov
stc
clc
pop
pop
mov
sub
sbb
xchg
movups
lret
in
repz
xchg
push
pop
push
xchg
sub
icebp
inc
nop
idivl
out
xchg
push
aaa
fcomp
loope
rorl
test
fnstcw
arpl
fistpll
addr16
mov
push
sahf
in
add
inc
dec
cld
jo
cmpsb
nop
movsb
js
mov
sub
cmp
xchg
lret
enter
sbb
cmp
int
mov
cmp
bound
cmpsl
shl
imul
push
fdivl
mov
aad
mov
fdivl
jns
mov
push
fisttpl
pop
adc
sbbl
out
xor
clc
dec
sti
movsb
sbb
divb
pop
addb
and
jp
lahf
xchg
in
inc
std
mov
dec
lret
std
mov
out
sub
or
push
or
subb
rorb
and
loope
mov
xchg
imul
scas
dec
les
sbb
mov
mov
pusha
add
out
add
push
in
mov
scas
fstps
lret
lods
xchg
push
mov
sti
xlat
dec
sarb
mov
movsb
fnstenv
jns
sbb
movlps
in
pop
aam
mov
adc
jae
jns
jnp
call
jae
lahf
inc
and
push
mov
adc
cwtl
adc
mov
add
mov
jl
testb
cmp
cmp
test
fistl
mov
ucomiss
gs
fwait
jle
imul
scas
hlt
dec
mov
cmp
xor
and
pusha
jecxz
es
inc
sbb
sahf
mov
repz
push
out
into
hlt
mov
subb
add
jg
dec
dec
out
aaa
pop
xchg
xor
imul
cmpsb
sbb
jo
shlb
mov
cmp
sub
cmp
xabort
mov
shlb
cwtl
subb
mov
sbb
add
push
shl
add
aaa
lods
mov
cli
inc
ss
fdivrs
push
xor
rcrb
cmpsl
xor
mov
popf
lds
scas
push
push
push
rcr
imul
lods
sub
push
jp
jae
sarl
icebp
out
mov
adc
push
mov
or
adc
repz
cmp
dec
push
mov
mov
lret
in
mov
ja
and
add
xchg
pop
in
xchg
shlb
pop
lcall
and
out
data16
mov
repnz
inc
mov
cmp
mov
cmpl
ret
pop
aaa
ret
push
popf
hlt
dec
stos
adc
mov
jl
int
out
jbe
or
pop
into
jno
cwtl
cmp
lret
lret
and
insb
lea
popa
ret
cwtl
andb
sbb
aam
pop
mov
clc
popa
orl
aas
scas
sub
mov
push
dec
sub
and
inc
inc
repz
shll
cmpsl
aaa
test
rolb
cmp
jbe
xor
subl
jge
jb
pusha
movsl
repz
lret
repz
int
adc
rorl
loopne
xor
ret
lea
popa
icebp
pusha
icebp
insl
fldl
sub
jae
adc
jns
xchg
out
mov
add
or
stos
fmull
sti
xlat
dec
mov
add
mov
dec
pop
push
rorb
add
out
fildll
xchg
mov
scas
mov
jns
push
movsb
leave
ja
mov
out
jg
insb
mov
push
or
test
dec
pop
xchg
push
je
shl
xchg
test
repnz
push
repz
shll
inc
push
xor
mov
mov
pushf
pop
pop
lods
std
ret
sbbl
cmp
clc
jno
icebp
adc
leave
add
cli
mov
icebp
inc
push
jmp
jbe
outsb
inc
jb
push
aam
sub
sub
sub
pop
xchg
push
jmp
push
int3
sbb
movsb
arpl
lds
cmp
ja
sub
dec
loop
mov
mov
arpl
xchg
cwtl
hlt
insl
sub
mov
lea
jnp
lcall
iret
jne
or
and
push
ds
mov
xor
std
das
jecxz
aaa
mov
mov
outsb
mull
rcrl
cli
and
cmpsb
or
dec
dec
arpl
rcrl
in
mov
add
and
ror
popf
mov
into
mov
loope
aam
rorl
inc
sti
repnz
cwtl
push
push
push
inc
pop
cmp
push
jge
jmp
cmp
popf
or
pop
jmp
mov
push
push
and
aas
out
and
mov
pop
mov
push
sbb
jne
stos
arpl
mov
aam
test
dec
gs
movl
sub
popf
or
repnz
in
rcrb
inc
pushf
hlt
cmp
test
jnp
jo
out
mov
push
pop
adc
sbb
ret
adc
jg
push
ljmp
into
mov
scas
inc
inc
lods
into
not
cmc
push
sub
lahf
inc
xchg
bound
jmp
and
jecxz
ret
mov
mov
popf
xor
push
add
insb
out
add
popf
push
fnstenv
push
hlt
add
std
fisubs
adcl
test
cld
es
xchg
and
jb
xlat
xchg
inc
sbb
xor
js
dec
shl
dec
mov
sbb
push
test
xchg
push
jp
mov
fidivs
cld
orb
into
jecxz
xchg
dec
push
fsubl
mov
adc
out
jecxz
jmp
xchg
stos
rcl
outsb
pop
pop
out
sub
repz
fstpl
iret
repz
and
imul
into
jno
jle
cmp
dec
loope
ljmp
add
add
push
or
cwtl
xchg
sbb
icebp
pop
incl
ljmp
jmp
mov
mov
stos
lret
lods
jle
jp
cs
inc
cltd
clc
pop
movsb
adc
sarb
into
inc
xor
xchg
and
lock
aad
and
test
cmc
push
sub
mov
or
push
in
pusha
jnp
sub
icebp
and
in
hlt
movsb
idiv
or
xchg
dec
cmp
pusha
jo
pop
and
xor
imul
into
scas
out
and
add
xor
and
in
or
sbb
jno
cmp
into
sub
je
fimuls
lret
aaa
test
jge
lock
addr16
or
mov
jbe
mov
cli
lods
mov
hlt
xor
mov
pop
inc
pushf
xchg
jge
and
add
xchg
cmpsb
xchg
in
mov
gs
sbb
cmp
xchg
insl
das
fidivl
mov
lret
fildll
xlat
repz
pop
in
ja
and
fcoml
icebp
aaa
add
lods
xchg
pushf
hlt
lods
cmp
js
cmp
and
ficoms
out
out
loop
lds
lock
mov
push
xchg
pminub
jae
dec
push
cmp
dec
inc
xor
roll
lret
push
mov
sub
lcall
aad
test
cs
imul
inc
clc
xor
or
dec
push
sub
ss
push
stos
xchg
mov
and
xchg
arpl
pop
lret
mov
dec
xchg
mov
rolb
dec
mov
fnstenv
mov
sub
imul
cmp
js
mov
outsl
in
dec
jbe
insb
jmp
xchg
out
fisubs
outsl
sahf
adc
and
push
lret
and
fcoms
ss
adc
pop
inc
sahf
insb
pop
test
and
sbb
sub
testb
dec
dec
popa
movzbl
sub
xlat
test
aas
out
jecxz
xor
push
adc
fldt
scas
cld
cmpsl
xchg
enter
lahf
inc
in
dec
icebp
stos
xchg
pop
addl
mov
imul
xchg
lcall
adcb
xchg
xchg
inc
adc
divb
sarl
mov
jne
pop
adc
dec
fwait
mov
or
cltd
in
dec
or
push
adc
test
arpl
jmp
push
mov
lds
scas
mov
xchg
push
mov
jno
subl
neg
inc
push
decl
or
out
mov
test
shll
push
pop
cld
clc
stc
clc
sbb
xlat
xchg
outsb
js
and
call
in
mov
xchg
daa
pop
ss
sbb
adc
mov
pop
and
jg
movb
mov
xchg
ret
xchg
jae
push
dec
cmc
insb
sarl
xor
cmp
cmp
dec
adc
inc
jae
int
aas
jb
xchg
jmp
jp
sub
push
xor
andl
adc
dec
sbb
and
inc
ljmp
jno
fs
and
mov
xlat
incb
mov
or
ret
lcall
sub
and
mov
cmp
icebp
pop
out
bound
adc
mov
nop
adc
jecxz
sub
lret
mov
adc
xor
cld
adc
mov
add
cli
sti
sub
pop
jmp
jb
push
ja
dec
movsb
and
cs
test
push
sub
jge
push
dec
notl
adc
pop
push
sub
xchg
fcompl
jmp
iret
xchg
pop
cltd
aam
add
adc
scas
or
or
lcall
sub
leave
adc
push
sub
mov
in
mov
out
rcl
and
pop
movsl
jae
cmp
repz
sub
or
test
cmpsl
shll
cmp
xchg
pop
jge
orl
andl
testl
adc
sub
dec
popa
and
mov
push
xor
lcall
imul
test
sub
sbb
test
jp
mov
cmp
sub
adc
mov
scas
jecxz
sub
icebp
gs
jbe
iret
dec
das
aad
inc
mov
mov
pushf
inc
adc
es
sub
push
mov
push
fidivrl
sub
sbb
push
push
fwait
out
pop
mov
sub
mov
and
mov
xchg
popa
sub
xchg
jl
data16
push
ret
jno
jecxz
cmp
into
push
xlat
int
test
cltd
cs
dec
push
or
mov
adc
loop
xchg
mov
popa
or
pop
lock
int
sbb
leave
pop
in
sbb
ja
call
je
sub
push
test
fsub
addr16
jae
adc
into
add
dec
push
mov
aaa
sbb
push
inc
xchg
jae
adc
cwtl
mov
sub
mov
jg
dec
scas
out
pop
sbbb
sahf
pop
fiadds
pop
in
xor
mov
add
pushf
iret
imul
cmp
ret
xchg
movsl
test
mov
add
cmp
into
ficomps
mov
sbb
adc
mov
fistpll
inc
in
js
pop
outsb
test
dec
mov
aad
sbb
xchg
push
dec
push
and
mov
test
and
fs
push
rorl
movsl
sahf
in
fwait
mov
scas
xchg
xchg
cmp
push
test
or
or
pop
out
movups
fmul
xchg
add
stos
fwait
cmp
pop
loop
sub
push
mov
fdivl
dec
insb
mov
jmp
jne
xchg
jp
mov
inc
and
mov
pop
cmpsl
fidivs
push
out
sub
fldcw
bound
in
xchg
fbstp
shl
outsb
call
xor
pop
mov
inc
xor
or
sbb
jne
sbb
adc
sbb
xchg
inc
movsb
dec
push
inc
add
cmp
push
mov
inc
mov
ja
mov
jns
sahf
dec
pop
xor
jno
mov
bound
mov
mov
mov
into
dec
xchg
das
clc
mov
jne
sub
sbb
inc
or
inc
aad
xor
sarl
sub
loope
adc
mov
jmp
fsubs
cltd
lds
arpl
mov
dec
jge
scas
pop
xor
adc
int
test
cmp
loop
mov
push
and
xchg
das
inc
shr
add
jle
out
pop
xchg
int3
or
pop
cltd
add
inc
adc
adc
and
int
in
push
adc
shll
test
pop
sub
push
adc
ret
add
jp
push
es
push
rorl
push
add
daa
loop
cmp
hlt
jmp
mov
hlt
xor
lds
adc
gs
rol
add
sbb
pusha
xchg
out
adc
orb
imul
lods
lea
sub
pop
pop
dec
jp
xor
out
adc
addr16
repnz
fldl
movsb
add
or
add
andb
xor
mov
xchg
xchg
jle
sub
pop
add
jge
cmp
push
aas
shrl
push
jp
push
sarb
mov
sahf
cld
pop
pop
push
dec
xchg
add
sahf
int
fwait
mov
inc
mov
cltd
nop
pop
add
push
std
cmp
cmp
data16
iret
mov
lea
es
xchg
stos
sub
cmc
repz
add
cmc
outsb
mov
fbstp
stc
rol
sbb
insl
dec
lock
mov
clc
roll
nop
and
sbb
cwtl
mov
out
pop
jnp
leave
outsb
rcrl
add
adc
pop
lcall
cmc
pop
imul
stos
mov
and
inc
std
test
repnz
push
jne
sbb
scas
inc
out
mov
sbb
in
in
jbe
shll
imul
dec
stc
sbb
dec
adc
mov
mov
jl
sar
aad
sub
fcomp
into
loopne
jae
outsb
cmp
jns
mov
jbe
test
adc
clc
cmpb
fldl
xor
test
in
nop
sub
cmp
ss
out
cmp
fmuls
out
adc
stos
jp
adc
scas
fs
jg
jbe
shll
rcrb
cwtl
addr16
xor
sub
add
and
mov
gs
test
jae
jnp
xchg
dec
pop
or
sub
and
cmp
or
leave
pop
jecxz
daa
pop
jecxz
sub
add
push
daa
sahf
mov
add
xchg
add
mov
mov
test
inc
out
aaa
xlat
int3
cmp
aaa
lock
sub
cmp
testl
nop
cli
mov
or
adc
insb
mov
jne
cmp
pop
jmp
xor
hlt
pop
dec
pop
jl
inc
testl
adc
and
cs
add
lret
jp
mov
pop
jo
inc
sub
aad
es
mov
test
negl
fsubrp
icebp
hlt
fiadds
popa
xor
into
lahf
mov
outsb
loope
and
inc
or
adcb
pushf
sar
lcall
sbb
roll
dec
jecxz
add
fidivrl
cmp
sbb
add
push
ret
and
es
jmp
or
push
pop
addr16
pop
mov
push
pop
cwtl
pop
aas
rclb
sub
jmp
inc
enter
dec
lea
cld
jae
aaa
hlt
test
loop
lds
imul
push
dec
jns
inc
adc
dec
aaa
dec
dec
aas
imul
ja
adc
test
push
push
jg
cmp
jno
fimuls
fwait
in
movsl
lcall
pushf
and
pop
jmp
dec
mov
adc
lea
inc
in
dec
mov
out
mov
xlat
je
sbb
lods
mov
pop
jno
jp
mov
addr16
fisubrs
mov
or
shrb
or
loope
jns
test
pop
int
cmpb
jecxz
xlat
mov
arpl
and
jae
aad
push
xchg
or
mov
xor
mov
pop
mov
mov
xor
lea
push
add
push
rorb
jb
mov
adc
or
xor
adc
in
mov
mov
popw
jnp
lods
insl
push
scas
aas
jle
das
jno
xchg
inc
mov
sub
insl
or
add
push
push
mov
push
push
cmp
cld
scas
jnp
fsts
fst
cld
push
xchg
push
sbb
sahf
fnsave
pop
fildll
pop
xchg
cwtl
cmp
sbb
mov
sahf
shll
int
jmp
mov
gs
imul
ret
pushf
mov
mov
das
sbbl
repz
icebp
divb
and
add
and
dec
mov
xor
cmp
jno
adc
push
xor
mov
je
outsb
or
inc
mov
pop
push
jns
jge
dec
test
lea
nop
lcall
jge
xor
orl
ds
leave
je
int
xchg
sub
mov
je
adc
js
test
add
dec
push
sbb
sbb
jmp
pusha
mov
icebp
mov
clc
push
cmpsb
cwtl
cmc
jp
jns
leave
dec
push
rclb
add
jo
xchg
push
pushf
in
pop
push
sbb
adc
inc
mov
xchg
lock
pop
and
pop
dec
pop
inc
xchg
add
gs
stc
jo
scas
xchg
aaa
mov
pop
mov
inc
jae
dec
adc
jl
scas
jae
pop
or
rclb
and
test
ss
cmpsb
inc
outsb
push
imul
iret
sbb
sbb
in
cmp
push
xchg
fwait
lahf
mov
and
in
leave
mov
lock
icebp
inc
push
and
dec
stos
push
ja
cmpsb
pushf
lcall
jnp
mov
pushf
out
push
add
and
imul
xchg
sbb
cmp
mov
or
je
mov
loop
push
stos
shll
mov
sbb
add
loope
fsubrs
pop
stos
and
shr
and
dec
inc
aas
push
test
rcl
xchg
or
out
fisttps
pusha
cwtl
mov
imul
fs
cmpsl
xor
push
test
outsl
ds
and
pop
mov
jnp
enter
daa
idiv
lods
fistl
sti
xchg
cmp
add
mov
push
lret
sub
inc
sbb
inc
adc
mov
mov
imul
scas
and
sahf
cltd
dec
test
jae
fisubs
dec
push
xlat
dec
mov
cmpb
out
push
sarb
nop
fcompl
jl
cwtl
and
mov
sub
loopne
dec
cmpsl
xchg
inc
pop
adc
xor
pop
roll
add
mov
repnz
and
bound
xchg
xor
inc
xor
jne
loope
das
outsl
bound
ficompl
push
insl
in
dec
sbb
stc
aad
fwait
jp
mov
sbb
dec
jno
imul
call
movsl
loopne
mov
inc
add
mov
dec
push
cmp
in
bnd
pop
jp
xor
cmp
adc
jl
in
add
imul
std
sbb
imul
lock
push
aas
mov
cmc
pop
inc
ret
or
sti
xor
xlat
sarb
cs
js
sub
mov
push
xor
inc
dec
dec
cltd
xchg
in
aaa
adc
ljmp
push
push
int
and
repz
xor
mov
xchg
sub
insl
mov
cmp
jo
ds
mov
xchg
dec
xchg
insb
mov
push
sub
pop
and
inc
mov
jns
das
cmpsb
fs
lret
pop
out
mov
ss
xor
cmp
jmp
repnz
sti
imul
shlb
daa
fadds
shl
popl
in
push
mov
loop
out
dec
adc
hlt
shl
popf
mov
ljmp
cmp
or
push
jmp
loope
sti
sbb
orl
imul
adc
jle
mov
sti
mov
cmp
mov
fisubrl
in
or
or
fildl
jns
add
inc
shrl
xchg
stc
sub
cmp
mov
fsubrs
aaa
es
insl
sbb
push
repnz
das
out
inc
jmp
push
push
xor
pop
mov
pop
cmpsl
or
loope
xchg
sbb
xor
sarb
mov
push
daa
mov
movups
or
sarb
repz
outsb
inc
adc
lock
cltd
fidivs
sub
push
orl
sarl
mov
xchg
sarl
insl
dec
test
cmp
adc
aad
adc
and
pop
subl
cld
sbb
cmp
inc
jb
cmp
dec
or
sbbb
aas
pop
mov
mov
and
inc
jb
jle
cmc
jns
movsl
test
or
jmp
fwait
sbb
add
enter
pop
fldl
dec
jmp
neg
sar
cmp
dec
push
sbb
out
ret
test
lahf
insl
cltd
pusha
xchg
iret
jo
pusha
xchg
and
enter
jmp
shlb
ds
mov
or
std
incb
mov
mov
add
es
pop
mov
sub
push
jnp
mov
mov
stc
faddl
cli
pop
and
add
adc
mov
mov
out
andl
mov
xchg
fisttps
movsb
movsl
lods
jmp
aam
nop
mov
jmp
mov
adc
push
and
xchg
ret
dec
cmp
jne
arpl
push
pushf
mov
loop
movsb
lret
mov
sub
loop
push
xchg
ja
fdivl
inc
mov
lds
sarb
lret
lahf
sub
pop
mov
and
fimull
in
jno
rcll
xlat
scas
mov
cltd
aam
loop
movsl
push
and
mov
je
lea
mov
loope
fnsave
es
or
leave
and
or
cmc
mov
xor
jg
push
std
mov
lds
dec
add
sbb
mov
push
lods
xchg
leave
in
pop
movsl
sarl
inc
add
mov
repnz
dec
mov
xchg
inc
loope
sbb
sbb
pop
add
mov
mov
inc
mov
hlt
fldenv
adc
mov
scas
mov
fimull
adc
push
push
das
outsb
test
insl
fnstsw
mov
out
mov
movsl
decl
lret
into
lahf
shl
mov
cmp
add
les
outsl
mull
push
mov
out
pop
xchg
mov
cmc
jp
jmp
push
push
inc
pop
cmp
sbb
sub
push
imul
negl
jno
fnsave
adc
jb
sbb
mov
sub
cltd
daa
cmp
into
pop
in
or
or
xchg
clc
in
mov
jns
fistpll
cmp
and
in
lods
pop
test
pusha
outsl
ret
cmp
and
mov
pop
lret
sub
stos
xlat
out
ss
cmp
gs
sub
cwtl
mov
out
sbbl
jae
and
aaa
daa
mov
jae
stc
push
adc
pop
push
in
test
jp
sarb
fsubrs
nop
cmpsb
xor
mov
scas
lods
push
test
repz
push
ficomps
test
out
push
sbbb
mov
push
sub
or
inc
sahf
push
lahf
out
push
jns
mov
xor
xor
mov
push
xchg
push
mov
jnp
jnp
or
xlat
adc
push
in
mov
es
mov
mov
fbld
movsl
add
rcrl
inc
jg
outsb
aad
orl
fstl
pusha
ficoml
pop
test
lahf
pand
mov
mov
outsb
aam
inc
jmp
insl
mov
add
js
pop
mov
cli
inc
iret
int3
jne
adc
jne
loope,pt
sub
jge
sbb
pop
bound
xchg
cmc
fwait
adc
jae
cmp
mov
add
or
js
and
sbb
fistpl
cmpb
orb
sbb
mov
ret
stos
cwtl
xlat
nop
jmp
jb
mov
jnp
divb
mov
aam
fisubs
fucomi
mov
out
movsb
call
jmp
mov
addr16
dec
aad
sub
jnp
fidivs
mov
call
aam
jecxz
bound
mov
fistps
pop
pusha
fnstenv
cmp
xchg
or
mov
cmpsb
sub
adc
sbb
sbb
fmuls
jl
mov
ret
xor
out
lret
lahf
shll
jnp
out
push
ror
adc
inc
in
sbb
push
sbbb
xchg
mov
orb
mov
std
adc
xchg
insb
xchg
jns
icebp
mov
push
mov
fnstsw
pop
cwtl
arpl
sub
and
cmp
mov
xor
adc
mov
push
jbe
stc
sarb
lock
add
shlb
mov
jg
data16
or
pop
mov
aaa
cmc
mov
inc
push
andl
jns
adc
mov
mov
jmp
aad
je
sbb
outsl
jae
jge
mov
xor
add
inc
xchg
sub
cwtl
es
jmp
mov
int3
mov
pop
pop
movsb
xlat
rcl
movsb
mov
out
gs
xchg
test
lcall
sbb
push
mov
jae
and
jmp
pop
or
dec
popa
mov
dec
stc
sbb
imul
cmpsl
mov
adc
aad
add
xchg
add
push
in
jge
mov
add
sub
jp
movsb
or
int
das
mov
push
dec
ljmp
push
sbb
bound
sub
push
jp
outsb
aam
insl
shlb
mov
sub
push
push
addr16
push
clc
cmp
or
mov
aad
push
movsl
cli
fdivrs
sub
fsts
cmp
or
mov
pushf
dec
xchg
adc
popa
fnstsw
mov
int3
or
pop
lods
add
es
leave
out
cmpsb
testb
out
cli
mov
adc
sbb
push
inc
push
imul
shrl
push
js
repnz
std
cmc
pushl
or
xor
lock
mov
dec
ss
sbb
or
xchg
scas
aas
cltd
shrb
adc
repz
call
imul
xor
out
mov
sbb
es
js
js
pop
sbb
mov
cmp
jmp
mov
push
lods
mov
jns
pusha
insb
test
mov
repz
jb
sbb
ljmp
stos
pop
scas
lds
dec
or
adc
add
push
testl
lahf
mov
inc
fstl
out
cmp
fiadds
iret
fdiv
mulb
lods
in
out
popf
cmc
xchg
mov
inc
rcr
out
enter
in
push
mov
cs
fwait
mov
movsb
xor
scas
pop
xchg
lahf
mov
inc
sahf
inc
mov
sub
sbb
fwait
sahf
test
and
push
push
adc
jno
out
inc
fcompl
sub
jb
inc
fld
mov
test
xchg
movsb
xor
mov
cmpsb
inc
sub
pop
push
stos
pop
ss
call
js
add
in
rcl
rorl
jae
pop
pop
jae
inc
mov
sbb
lahf
ret
cmp
imul
xchg
xor
mov
cmp
test
cld
inc
fwait
repz
xchg
lds
dec
jno
or
sub
inc
and
sahf
dec
dec
aas
in
jmp
out
push
ret
cmpsb
imul
cmp
pop
rorb
fiaddl
or
stos
stos
mov
jle
fsubl
fcoms
and
mov
adc
push
xor
sahf
push
fmuls
mov
or
xlat
mov
ret
fsubrs
cmp
xchg
mov
mov
sti
sub
add
and
dec
and
inc
dec
std
andl
popa
cld
sbb
add
movsb
mov
andb
mov
mov
add
xor
sahf
mov
popa
xlat
std
inc
adc
and
movsb
push
filds
dec
loope
pop
mov
lcall
mov
test
and
outsl
call
roll
jne
inc
mov
icebp
xor
inc
scas
jge
aaa
into
sub
jp
je
add
xchg
lcall
lods
movsl
gs
les
stc
sbb
xor
in
aam
adc
shll
je
pop
mov
lods
xchg
pop
push
lcall
sub
in
cmp
cwtl
inc
lods
sub
fiadds
mov
mov
lock
xchg
jecxz
popf
push
dec
fwait
mov
push
ret
cmp
sub
fisttps
mov
in
jae
std
fldt
int
daa
movsb
stos
push
aas
outsb
bound
push
push
cmp
sbb
pop
lret
jg,pt
and
std
pushf
lds
inc
repnz
lret
mov
popf
and
push
cli
pop
enter
test
xchg
lret
fwait
mov
aam
cmp
inc
inc
xlat
insb
cld
gs
imul
push
sub
insb
sbb
and
addb
lcall
inc
out
test
jge
inc
ret
sbb
pushf
mov
adc
push
or
adc
inc
ljmp
dec
test
dec
mov
pushf
aad
xchg
dec
lea
inc
or
push
hlt
nop
and
inc
divb
xchg
inc
jb
fdivp
mov
cs
inc
pushf
test
insl
push
js
sbb
xlat
jle
inc
enter
pop
pop
sub
insl
cmp
push
jle
jle
jmp
pop
cwtl
sbb
pop
pop
mov
enter
cwtl
aas
int3
add
push
mov
popa
iret
jl
lahf
dec
cwtl
lea
mov
add
xchg
in
je
jbe
mov
test
dec
push
ja
mov
fmull
cmc
mov
cwtl
fcoms
pop
sub
inc
push
pop
cmpb
mov
pop
xor
and
pop
out
push
insb
clc
or
sub
fwait
xchg
cld
lods
or
int3
shll
es
aad
sahf
jnp
sbb
cs
mov
jmp
mov
add
lcall
fnstsw
sbb
xor
cwtl
inc
popf
adc
add
enter
loopne
orb
adc
icebp
test
repz
movsb
jp
or
notl
mull
cltd
call
rorl
shlb
lret
std
loop
mov
lahf
push
and
shrb
mov
stc
into
ret
lahf
sbb
xchg
imul
out
adc
cmpsl
xor
out
mov
inc
push
mov
sub
push
push
lods
das
mov
aaa
lcall
mov
lcall
cmp
daa
cmp
pop
dec
mov
jmp
pop
test
mov
pop
ret
xor
mov
pop
lea
add
and
sbb
mov
jg
mov
into
dec
sbb
mov
cmpsb
push
sub
int3
aad
jge
mulb
enter
lods
popf
shll
addr16
pop
cli
out
fidivrs
and
push
cmp
push
sbb
push
mov
and
dec
cli
push
inc
sub
jmp
arpl
mov
movsb
jecxz
mov
mov
int3
xlat
mov
sbb
pop
add
aas
movsb
iret
mov
out
adc
push
sub
call
mov
mov
lods
jns
push
push
test
scas
daa
xchg
cli
inc
or
xor
enter
dec
dec
pusha
mov
out
jo
push
inc
pop
inc
lods
adc
icebp
in
add
inc
inc
stc
inc
dec
mov
hlt
leave
inc
adc
ja
xor
ja
mov
dec
inc
mov
sub
rcl
dec
out
and
ljmp
popa
push
push
xchg
in
shrb
fsubrl
cld
inc
pushf
das
xor
pop
lcall
xor
negl
and
filds
mov
popf
dec
adc
insl
cmp
jae
xchg
pushf
mov
push
sub
dec
mov
in
jge
sarl
jnp
lret
xchg
or
nop
cmp
xor
xchg
sub
dec
fstpl
movsb
cmp
in
aam
ficomps
xor
mov
setnp
scas
inc
mov
in
mov
mov
and
add
adc
mov
not
and
sbb
aas
or
inc
test
int
fldl
mov
mov
xchg
add
cmpl
mov
jo
popa
out
arpl
je
dec
dec
lret
mov
shr
cmpsb
gs
cmpsb
and
and
dec
scas
jle
push
jmp
lret
add
lods
scas
enter
mov
xchg
dec
adcb
jbe
xchg
cltd
mov
jge
cld
rcr
and
movb
aam
mov
fistpll
push
clc
int
mov
sub
jmp
xlat
jmp
jo
ds
je
pushf
setge
imul
xchg
adc
aad
mov
lahf
cmpsl
pusha
cmp
hlt
pop
fs
inc
movsb
push
rcl
push
cmp
push
jmp
ss
lcall
shlb
xor
insl
and
inc
stos
mov
push
push
std
jmp
pop
pop
cmc
xchg
and
xlat
lock
inc
rclb
or
push
mov
dec
sahf
rcl
sbb
in
sub
and
pop
mov
lea
pop
push
push
mov
pop
add
mov
aaa
jg
xchg
mov
xchg
adc
mov
xor
cltd
jp
mov
lret
and
and
fxch
sub
mov
ficomps
jge
mov
inc
jmp
les
shl
sbb
and
push
out
mov
hlt
test
ret
sub
or
lods
or
ljmp
aam
mov
mov
icebp
sbb
sbb
ret
call
es
add
jg
push
sbb
dec
hlt
dec
repnz
inc
rorl
clc
cwtl
xchg
inc
or
push
or
daa
cmp
pop
mov
andnps
sbb
push
scas
add
out
xlat
lahf
add
push
xchg
or
pop
es
cmp
stos
icebp
sti
rcrb
cmp
mov
js
repnz
cmpsl
mov
call
cmp
dec
push
rolb
cmp
lods
cltd
pop
scas
sub
dec
mov
nop
or
andl
shr
dec
jne
pop
sbb
outsl
or
int
icebp
in
jg
aas
pusha
xor
push
clc
bound
dec
push
testl
je
adc
mov
pop
aam
cmp
push
xchg
or
lock
pop
fidivrl
mov
cmp
push
test
stos
cs
add
leave
icebp
add
aaa
stos
mov
sbb
rcrl
into
mov
or
rolb
sti
mov
test
int
fildl
xchg
mov
loope
aaa
loope
and
sub
ja
lock
shrl
mov
neg
imul
jns
ret
push
jmp
add
dec
jl
lcall
test
jo
xchg
add
popf
xchg
and
stos
fisubl
sbb
jno
inc
add
jg
fiadds
loopne
cwtl
or
inc
cli
adc
repnz
xchg
addr16
je
in
jb
aam
inc
push
test
and
push
push
mov
pop
idivb
test
sbb
adc
adc
xlat
push
dec
adcl
pop
jne
nop
lret
std
js
scas
in
sti
lods
pop
fwait
bound
xchg
jp
jns
jge
ljmp
mov
inc
inc
mov
enter
lret
cmc
cmp
sbb
sbb
imul
dec
int
add
jp
mov
mov
lret
mov
sub
scas
dec
out
fildll
dec
and
ret
icebp
or
mov
sub
lahf
xchg
faddl
push
out
mov
js
fs
out
outsb
and
mov
jne
pushf
aaa
fnsave
imul
out
lret
mov
pop
jp
out
cmp
xor
pop
daa
mov
mov
lods
sbb
mov
dec
pop
insl
cmpsl
ss
adc
adc
pop
mov
mov
decl
cltd
sub
cmc
push
movsl
and
out
and
jg
push
subl
push
lods
jo
sub
mov
rorl
insl
daa
mov
adc
aaa
mov
fs
fdivl
shlb
inc
imul
xchg
pop
out
std
and
push
lcall
ljmp
outsl
fldcw
iret
fdivrp
clc
mov
movb
adcl
aad
xchg
mov
cli
xchg
mov
pop
xor
adc
loope
cmpsb
sub
mov
xchg
rcl
cmp
sti
xchg
bound
shrl
pusha
or
adc
mov
cmpl
xorl
cli
pop
ss
cmc
popa
jp
lods
jno
pop
cmp
inc
or
inc
js
sti
sbb
cmc
icebp
cmp
pop
das
loope
xchg
into
fcomps
lea
add
das
push
popf
js
xlat
add
jmp
aas
fisubrs
aam
scas
xor
mov
cmp
out
xchg
in
sarl
xchg
mov
and
divb
push
sbb
stc
inc
es
mov
sar
and
insl
mull
cmp
push
sub
lret
jbe
xor
inc
movsl
fnstenv
js
data16
cmc
pop
xchg
sti
testl
xchg
pop
rcll
lea
imul
out
fwait
sbb
and
fsubs
jo
test
daa
fistpl
cwtl
into
roll
mov
mov
pop
xchg
mov
ret
shrb
inc
testl
out
xor
enter
fsubs
adc
push
mov
inc
cmpsl
lret
test
or
mov
jp
dec
cs
lods
jbe
pop
imul
popf
adc
mov
repnz
daa
ror
insl
pop
int
movq
fistl
aad
cmp
or
popf
push
pop
push
out
sub
mov
xor
xor
xor
dec
push
push
jp
sbb
in
inc
insl
cmpsb
inc
popf
mov
mov
sbb
clc
aam
mov
sahf
cmp
lods
test
lret
mov
and
rcr
stos
inc
rcrl
or
mov
clc
enter
sbb
jp
adc
rcll
arpl
ja
jno
sbb
pop
jmp
push
in
popa
aam
imul
adc
cmp
out
or
pop
cld
mov
movb
xor
out
mov
add
int3
sbb
inc
sar
push
lods
dec
testb
movsl
stc
test
sti
mov
subb
jb
ljmp
mov
nop
push
sub
lods
dec
sbb
dec
mov
outsl
shlb
xchg
shrl
div
push
rcr
push
push
add
int3
and
push
pop
add
xor
repz
jmp
push
sbb
inc
popf
inc
lds
add
dec
inc
in
fwait
adc
mov
fsubrl
insb
adc
movsb
in
mov
push
sub
mov
jnp
inc
cmp
mov
hlt
stc
rep
xor
cwtl
mov
mov
cmp
or
mov
jne
pop
stos
mov
add
and
mov
aaa
xchg
arpl
mov
ret
or
ja
fstps
dec
adcb
fmull
testb
push
xor
adc
insl
int
xchg
push
ljmp
mov
sbb
rcrb
out
xor
xchg
cld
push
cmpsb
inc
push
bound
adc
xor
or
sahf
jge
xchg
dec
lahf
jno
dec
jbe
mov
sbb
fsts
test
cwtl
mov
mov
adc
mov
dec
sbb
out
lahf
das
fstpt
dec
sbbb
popf
popa
pop
push
push
cmp
incl
das
clc
and
mov
loop
out
sahf
arpl
shlb
test
mov
or
mov
add
sahf
loop
sahf
insb
dec
adcl
mov
pop
inc
xor
lcall
cmpsl
or
ficomps
dec
cmp
js
adc
xorb
dec
mov
je
jle
scas
sti
mov
add
and
js
pop
or
inc
rorb
mov
push
sarl
mov
testb
or
aaa
stos
cwtl
mov
aam
int3
cmp
push
mov
jb
lret
sub
lahf
xor
adc
jae
fmuls
mov
stos
sub
sahf
sbbb
test
cld
lods
inc
lret
jp
lret
enter
xor
mov
add
jecxz
cmpsb
dec
daa
inc
mov
lods
negl
mov
shld
in
cmp
push
and
clc
mov
pop
pop
call
shr
mov
repz
sahf
scas
adc
enter
loop
clc
mov
stos
jb
icebp
cmc
shll
mov
call
jg
push
sarb
xchg
fisttpl
adcl
fildl
scas
loop
mov
data16
fwait
jg
inc
mov
out
xchg
push
fisubl
pop
movsb
add
loope
fwait
sub
jbe
mov
notl
in
leave
xchg
xchg
add
shrl
dec
fwait
cli
loope
pushf
sbbb
adc
out
adc
mov
xor
data16
addl
pushf
xor
rcrl
jmp
lahf
push
jp
dec
movsl
jae
and
popa
mov
mov
and
xchg
jns
jecxz
pop
test
orb
mov
and
and
pop
jmp
cltd
adc
dec
cmpsb
popa
repz
xchg
scas
jp
or
in
push
test
push
scas
mov
cmp
hlt
cltd
fldt
pop
mov
push
mov
xchg
cmp
in
faddl
into
inc
scas
notl
int
push
sbb
mov
lahf
mov
test
iret
daa
inc
insl
xlat
std
xchg
pop
mov
mov
sbb
xchg
or
cwtl
pop
dec
sbb
push
xlat
and
test
xchg
leave
inc
sub
inc
dec
arpl
repnz
jl
scas
hlt
pop
mov
imul
lods
jmp
inc
pop
add
fdivrs
xor
daa
psubsw
xor
roll
out
out
pop
pop
and
into
out
jae
fsub
and
push
cmpb
out
test
sub
xchg
movsl
rorb
mov
lods
rclb
scas
into
test
xchg
cmp
stos
dec
push
movsb
mov
hlt
jecxz
mov
ljmp
mov
inc
sbb
icebp
cmc
test
rorb
ret
cmpl
sbb
inc
mov
dec
mov
jecxz
adc
xchg
cwtl
hlt
cmp
pop
push
adc
pushf
cltd
push
jnp
aaa
out
scas
js
adc
mov
push
mov
sub
sub
ljmp
xchg
cwtl
jmp
ljmp
and
push
inc
orl
fildl
push
sahf
jne
pop
pop
xchg
pop
sbb
insb
push
rolb
leave
cwtl
or
shll
in
cmp
and
xlat
xchg
fsubrs
lock
mov
mov
mov
ficoml
stos
aaa
jb
hlt
test
test
pop
stos
and
sbb
aas
mov
daa
arpl
lods
sbb
cmp
and
xchg
aad
xchg
cmp
outsb
dec
sub
pop
bound
int
ret
pop
lods
flds
cs
shlb
adc
xlat
pop
rcrl
pop
cmpl
and
dec
adc
jge
inc
cmp
mov
daa
push
cmp
ret
repz
mov
mov
xchg
push
add
push
mov
pop
sti
xchg
push
outsb
xchg
xchg
cmpsb
cwtl
or
mulb
xor
mov
dec
mov
push
lret
jae
in
mov
mov
in
sahf
mov
mov
icebp
pushf
aas
les
dec
repnz
pusha
mov
xor
repnz
enter
dec
rcrl
out
aad
push
lret
in
test
adc
jp
jge
add
sahf
lea
pop
xor
cld
mov
lahf
pop
jle
repz
out
lea
and
dec
push
push
pop
stc
js
mov
cli
rol
aam
adc
sub
sti
adc
and
ds
jl
and
sahf
std
mov
repnz
int3
lcall
idiv
fistl
push
fidivl
mov
jns
jg
jle
adc
rolb
push
out
std
and
es
mov
cmc
pop
cmp
inc
sarb
pop
fdivl
xchg
jnp
xchg
cmp
hlt
bound
mov
inc
enter
mov
pop
jl
mov
in
mov
clc
or
mov
jnp
dec
adc
xlat
or
cmp
pop
pusha
gs
imul
lret
ret
add
shl
fisttpll
mov
jbe
xchg
pushf
aam
push
jne
aas
stos
adc
inc
sbb
or
repz
pop
out
push
les
sub
inc
out
mov
sti
leave
cmp
xchg
shl
and
int3
mov
bound
inc
or
mov
shrb
xchg
sbb
insb
mov
adc
and
ljmp
in
rcrb
mov
jne
lcall
jno
mov
outsl
scas
fiaddl
push
std
mov
jo,pn
int
adc
jbe
lcall
inc
sbbb
dec
mov
mov
mov
add
ja
xchg
insl
push
lock
jle
arpl
scas
xchg
cmp
repnz
lret
xor
dec
push
out
hlt
enter
push
loope
out
sbb
fbld
push
dec
lods
int3
hlt
loope
fidivrl
sub
stos
xchg
xchg
adc
adc
test
in
dec
mov
das
push
adc
jae
mov
mov
xchg
mov
lock
inc
xlat
add
enter
xor
lcall
lahf
mov
adc
mov
insb
sub
incl
arpl
wrmsr
jg
dec
fcomps
leave
or
arpl
or
mov
cmp
shrw
jp
nop
jge
sti
roll
rcr
and
xchg
aam
xor
popf
and
clc
mov
mov
sbb
sbb
jg
leave
in
push
test
cli
ret
lret
sub
xchg
xor
xor
in
xorb
sbb
mov
movsl
fucomp
xchg
fcmovnb
push
dec
jge
outsl
inc
mov
repnz
cmpsl
jnp
xor
mov
xchg
cmc
sbb
or
ss
add
inc
repz
add
les
fistps
or
adc
shr
dec
aad
shl
inc
dec
in
repnz
iret
add
int
add
jecxz
xchg
int
sarl
jmp
inc
imul
xor
adc
mov
and
jnp
iret
fstpt
int3
sub
in
cmp
push
mov
loop
fmulp
add
pop
inc
mov
lret
pop
xor
test
pop
mov
lea
inc
int
lret
or
mov
popa
ljmp
mov
pop
push
in
mov
stos
ror
cmc
push
ja
dec
fisttps
sbb
and
les
mov
fdivrs
aam
faddl
call
add
dec
ds
test
mov
loope
or
jb
push
dec
pusha
stc
inc
mov
loop
daa
loope
sub
jmp
repz
rol
pop
mov
jne
push
repnz
adc
scas
xor
mov
jle
fildl
xlat
dec
js
push
inc
push
mov
fnstsw
adc
out
rorb
and
mov
or
push
stos
pop
dec
bound
sbb
sub
test
mov
orb
movsb
xchg
mov
and
adc
movl
dec
add
push
roll
shll
test
data16
rol
push
add
xor
ror
sbb
lret
mov
jae
sub
sub
push
mov
mov
push
mov
add
test
clc
sub
out
loope
rorl
imul
and
xchg
movsl
into
jae
clc
jae
pop
aaa
cmp
fwait
jp
aas
inc
popf
lret
sub
fwait
or
xor
int3
jno
inc
in
cltd
js
addr16
movsb
push
xor
sub
imul
iret
or
jle
movsb
fcoms
test
mov
iret
mov
mov
dec
push
dec
dec
inc
and
cmp
xlat
test
sub
or
je
xor
adc
imul
sbb
gs
mov
push
movsb
inc
sbb
add
out
push
test
xchg
movsl
cmp
adc
cmp
cmp
es
aad
inc
add
bnd
js
jns
mov
xor
or
stos
jg
adc
mov
out
mov
dec
mov
adc
mov
inc
jo
out
jge
dec
or
mov
cs
inc
dec
mov
add
xor
jle
adc
mov
bound
arpl
orb
jmp
punpckhwd
shlb
jbe
test
std
cmp
adc
dec
or
flds
xchg
outsl
or
mov
jne
add
xor
mov
imul
mov
dec
aad
xor
mov
imul
enter
shlb
loope
push
and
or
roll
ret
daa
mov
daa
pop
ds
inc
loopne
mov
xlat
dec
push
fs
mov
leave
test
mov
mov
std
mov
inc
add
cli
inc
lret
xchg
push
lods
dec
xor
jbe
lret
fdivs
jmp
xchg
pushw
jb
xchg
mov
aam
imul
xor
mov
in
mov
aam
lcall
dec
jae
mov
push
js
cmc
pop
mov
test
pop
xor
fwait
fs
xchg
addl
arpl
movsb
cwtl
insl
mov
add
aam
fildll
enter
dec
std
push
cwtl
int3
or
jbe
lret
fimuls
pop
mov
outsl
fadds
xchg
in
cmc
xchg
jle
and
insb
or
mov
cmp
jmp
cli
mov
lret
cmpsb
neg
add
add
xor
cmp
jae
ss
push
xchg
dec
jb
cmp
insl
push
mov
push
cmp
out
sti
in
dec
push
hlt
cmp
jnp
jae
inc
xchg
ret
sub
out
out
mov
stos
add
lds
inc
mov
cmp
mov
sub
rcrb
lahf
cmpsb
adc
lock
xchg
xor
xchg
push
mov
push
mov
cmc
loopne
xchg
hlt
stos
into
les
jmp
aad
fadds
pop
lret
jno
cmp
ja
add
jg
fldl
mov
aaa
mov
arpl
loop
clc
pop
inc
test
xchg
jns
andl
push
int
stos
jno
xchg
pop
in
cli
stos
pusha
repnz
ret
cmp
mov
inc
adc
movsl
add
pop
hlt
xorb
fildl
aas
dec
je
push
cmc
ss
cmp
out
add
add
cmc
pop
fdivl
xchg
inc
cmc
hlt
push
mov
data16
cmc
lds
std
jecxz
push
ss
pop
out
xchg
loopne
hlt
ds
push
inc
pushf
push
insl
mov
inc
sub
mov
jbe
dec
or
out
ss
rcll
sti
ret
cmp
bound
inc
adc
xor
mov
or
mov
cmpb
vcvttss2si
dec
daa
decl
push
push
or
popl
add
nop
loope
imul
jmp
mov
add
daa
inc
fdivl
shr
mov
xchg
ror
cmp
xchg
pop
mov
dec
mov
adc
stos
mov
jmp
pop
and
pop
mov
ret
shrl
call
adc
mov
jge
insl
lods
sub
addb
dec
pop
sahf
icebp
test
cmpsl
and
popa
add
fldl
pop
sti
ffreep
cmp
into
pop
or
or
test
decl
shrb
fdivl
push
sbb
jbe
int3
dec
jmp
mov
xlat
dec
jo
jp
pop
hlt
cwtl
pop
mov
jb
mov
inc
fdivs
cmp
pop
ret
pop
push
loope
pop
fsubl
mulb
dec
int
loopne
or
cmpsb
clc
adc
mov
call
fstpt
push
mov
push
pop
lock
mov
mov
cs
mov
push
sub
jnp
daa
sbb
sub
sbb
mov
and
outsb
loopne
mov
pop
push
mov
mov
inc
adc
subb
movsl
cltd
dec
mov
mov
dec
shll
add
jns
or
mov
inc
dec
cmpsl
mov
clc
xor
popw
ret
xor
jecxz
sti
stc
mov
fnstenv
jns
inc
bound
out
xor
imul
pop
sbb
in
testl
jle
add
sbb
andl
insl
nop
jecxz
hlt
in
push
xchg
dec
ds
mov
xchg
lock
scas
pop
push
mov
pop
lahf
sahf
pop
mov
clc
aaa
mov
jne
mov
and
or
xchg
pop
lahf
and
pusha
xchg
jle
into
rclb
imul
adcb
add
jno
lock
pop
jae
ret
mov
les
lret
or
jle
cmp
mov
lret
fisttps
std
in
mov
adcb
inc
data16
push
popf
pop
xbegin
imul
cltd
mov
push
inc
push
fsubrl
cs
fwait
adc
iret
int
adc
cmp
jno
out
mov
xchg
bound
push
sub
and
stc
inc
popl
jecxz
mov
xchg
or
jno
xchg
xchg
repz
stos
cwtl
pop
mov
loop
leave
scas
cmp
jno
stos
dec
mov
sti
xor
movsb
clc
iret
aad
push
sahf
xor
clc
jp
push
dec
and
in
lods
repnz
cmp
fadds
cmp
mov
jb
and
test
cwtl
pop
fdiv
ljmp
mov
int
xor
add
sti
cmp
mov
pusha
addr16
fcomps
mov
xchg
inc
xchg
cltd
push
aaa
idivb
lods
fwait
mov
sbb
mov
lahf
cld
cmp
dec
stc
movsl
lods
dec
and
xchg
enter
mov
repnz
sbb
jnp
adc
sub
jne
mov
sti
icebp
cmp
add
xchg
jae
inc
sbb
enter
lock
push
cwtl
pop
mov
mov
sbb
lret
fs
xor
inc
cmc
or
mov
mov
test
adc
sbb
mov
pop
insl
xlat
pop
push
add
ret
adc
shrl
cmpsl
dec
shrl
pop
in
adc
or
ljmp
int3
push
gs
push
dec
lock
xchg
sahf
mov
jecxz
mov
push
jne
jmp
dec
shlb
in
cli
in
dec
sub
inc
add
sahf
or
out
cmp
out
or
xlat
push
js
push
stos
pop
leave
push
sarb
fdivrl
nop
scas
pop
sbb
fwait
xlat
sub
mov
or
hlt
push
mov
mov
mov
add
xor
cltd
xchg
inc
xor
in
adc
les
ret
mov
sbb
cmp
or
jbe
adc
or
inc
sbb
xchg
jne
clc
mov
pop
lret
lods
pop
fisubs
xchg
or
gs
mov
fnstcw
movsb
imul
outsl
add
lahf
and
sub
or
sbb
xor
sub
cmp
or
xorl
add
addb
fnstenv
cmp
test
lea
sub
fwait
fwait
daa
outsl
xchg
incl
in
mov
jns
and
loopne
in
aaa
dec
ds
fidivl
stos
sub
lock
mov
lock
mov
pop
movsb
mov
adc
and
paddq
mov
or
lret
inc
cmp
inc
lea
icebp
dec
mov
dec
repnz
cmp
push
sub
js
dec
fsubl
adc
push
stos
arpl
add
scas
xor
sbbl
dec
imul
inc
into
pusha
mov
icebp
repnz
mov
lret
and
pop
jg
adc
and
cmpsl
vsubpd
mov
test
les
or
repz
mov
lds
cmp
inc
jg
in
mov
mov
xchg
sub
fwait
iret
dec
mov
xchg
sbb
push
or
mov
mov
cmp
stos
push
cwtl
ss
sbb
jle
es
mov
pop
fsubrs
inc
shl
cmp
loope
cmp
or
inc
cmp
repnz
or
push
insl
leave
stc
ss
subl
scas
jl
and
ss
rorb
mov
insb
jo
pusha
das
movsb
push
sbb
rcrb
test
inc
cmp
andl
jb
cmp
inc
dec
mov
les
cmp
cltd
lock
or
icebp
cmpsl
pop
daa
inc
sbb
adc
or
mov
divl
inc
push
mov
cmpsb
lods
mov
cmp
push
aam
lcall
or
lods
jp
outsl
pop
shlb
pop
sbb
inc
stos
push
inc
xor
mov
jbe
popa
xor
addr16
sbb
fistps
aas
outsl
jmp
mov
filds
decb
sub
jl
xchg
hlt
mov
adc
xor
ds
movsl
lods
call
inc
imul
cld
pushl
sahf
push
jge
push
sub
mov
out
or
mov
or
pop
sub
mov
inc
ljmp
cmp
or
flds
xchg
inc
fldcw
mov
or
xor
adc
sbbl
mov
add
mov
dec
mov
mov
xor
sarl
fwait
push
jb
dec
adc
xor
repnz
repz
dec
inc
sbb
lret
stc
popl
xchg
lahf
jmp
mov
shrb
inc
daa
stc
test
mov
in
sbb
add
mov
mov
addb
add
notl
pop
mov
cltd
in
fsubp
add
shrb
arpl
test
loop
sub
add
adc
push
arpl
mov
outsb
pop
mov
jg
pop
jno
gs
jb
sbb
dec
leave
mov
cmp
mov
or
fisubrl
popa
out
sub
stos
out
or
int3
mov
sahf
dec
andl
imull
inc
jg
adc
pop
dec
xchg
int
adc
add
xchg
sbb
or
mov
outsl
imul
xor
sub
push
inc
and
cli
imul
and
inc
hlt
xchg
lcall
sbb
and
sub
sbb
push
jo
arpl
in
dec
int3
jo
mov
cmpsl
xchg
jbe
push
add
add
ja
xor
xlat
lock
cld
clc
lock
insl
rol
in
aad
pop
loop
fcompl
rcll
push
in
jae
xor
pushl
and
cmp
inc
rolb
pop
cmpsb
loop
in
adc
lock
sbb
mov
pop
push
movsl
test
sub
xor
sbb
add
fcomps
sbb
shlb
scas
xor
xchg
fcompl
mov
roll
std
out
sub
fdivp
push
daa
pop
push
call
push
shrl
test
test
push
aad
cld
jg
mov
jg
mov
xchg
mov
sbb
and
jle
arpl
push
dec
movb
insb
js
negl
and
adc
push
xor
std
lds
clc
xchg
mov
lret
mov
mov
lods
jle
mov
xchg
loop
icebp
lahf
mov
pop
pop
mov
mov
cmp
outsl
cld
dec
ss
mov
dec
and
adc
jmp
sub
push
addr16
icebp
enter
lea
lret
jge
mov
cmp
sub
xchg
lret
loopne
fcompl
jno
push
add
fimuls
cld
push
sbb
call
xchg
push
dec
mov
fimull
paddd
adc
push
inc
jnp
mov
in
adc
mov
sub
and
imul
out
mov
inc
adc
repnz
push
out
negb
add
adc
es
ds
mov
push
jb
adc
pusha
movsl
pop
jmp
jo
scas
in
daa
loopne
in
xor
push
adc
jp
add
aad
xor
jb
mov
ljmp
xchg
call
mov
or
push
adc
mov
movsl
mov
mull
lret
out
and
xor
bound
scas
leave
cmp
sahf
fwait
test
mov
pop
sbb
je
cwtl
cmp
push
push
xor
lea
adc
jns
mov
xor
clc
xor
push
xchg
cmp
jbe
js
mov
scas
inc
xorl
cmpsl
and
lods
cmp
gs
fnstcw
nop
stos
ja
andl
stos
outsb
je
popa
nop
imul
test
xchg
jle
pusha
sti
mov
sub
fcomps
xchg
pop
sub
mov
mov
in
icebp
jb
ds
ss
lret
pop
mov
je
pop
outsl
dec
repnz
icebp
jg
xchg
mov
lret
push
fnstsw
fs
loope
mov
fbstp
sub
push
sbb
movsb
xchg
push
xchg
xchg
pop
aas
push
movsb
pop
js
shl
and
popa
lret
mov
jge
pop
fwait
mov
pop
xchg
bound
dec
mov
xchg
adc
and
lahf
cld
rcr
cmp
xor
icebp
out
mov
dec
jp
mov
sub
mov
sbbl
aad
mov
inc
sub
mov
xchg
movsb
enter
cmpsl
mov
cmp
xchg
in
mov
fbstp
mov
sbb
xchg
add
and
dec
inc
enter
xor
gs
movsl
sarb
stos
lods
in
mov
add
mov
push
jno
fmuls
mov
lret
jg
loop
test
pop
int3
jmp
mov
mov
xchg
push
mov
dec
test
aaa
push
sub
aad
cmp
sub
arpl
cmc
push
jp
pop
loop
fisubrs
ds
fildl
xor
ror
bound
addb
ror
cpuid
or
mov
cmp
shrl
data16
mov
jb
imul
data16
out
nop
lods
mov
fistl
inc
stc
sub
sbb
js
sbb
hlt
pop
test
jp
cld
fists
and
in
or
sbb
sbb
push
ja
cmp
rclb
xchg
aas
mov
test
add
pop
sbb
xlat
jecxz
sub
push
repz
mov
jg
sub
jle
repnz
ljmp
adc
jo
lods
imul
fs
insb
push
xor
js
xchg
sub
icebp
ljmp
cmp
dec
lcall
ds
jmp
imul
ret
cmc
stos
stc
dec
sbb
fsubs
pop
loop
aad
scas
inc
xor
push
mov
push
movsb
jge
or
pop
push
jg
lret
sbb
daa
cltd
and
mov
ljmp
jge
fsubp
bound
lret
out
aas
sub
or
bound
in
pop
push
jns
sub
lahf
inc
aam
mov
push
xor
xchg
dec
sub
pop
xor
bnd
xchg
fldcw
stc
das
inc
xchg
cwtl
loope
clc
and
mov
push
push
test
push
pop
add
jb
dec
shrb
dec
fucomp
mov
sahf
mov
mov
std
push
push
jo
cltd
scas
out
cmpsl
scas
jle
cmp
rorb
or
mov
pop
inc
das
and
lods
xchg
addr16
lret
mov
adc
mov
pop
mull
pop
inc
pusha
sub
cs
js
fsubrl
js
and
adc
loope
ljmp
cmp
xchg
pop
sbb
test
in
push
ja
popf
popf
mov
arpl
and
inc
or
lea
inc
pusha
aas
stc
cmp
xchg
xchg
nop
xor
out
push
mov
pop
sti
adc
int3
movb
sub
lods
iret
sub
cmpsl
pop
mov
adc
or
jecxz
inc
in
aam
inc
popa
int3
push
lds
xor
jge
mov
outsb
mov
push
pop
push
int3
cmp
enter
cmp
lods
test
fst
pop
sbb
inc
adc
mov
movsb
out
cmp
in
pop
mov
mov
or
shrb
or
sahf
addr16
bound
ret
in
cld
jp
test
outsb
scas
sbb
into
and
aam
jl
adc
rclb
scas
adc
push
gs
mov
sbb
addr16
and
orb
xchg
fstpl
aas
fbstp
or
jecxz
pop
aas
stos
or
mov
cmp
and
imulb
jg
mov
xchg
test
bound
mov
xor
dec
popf
loope
call
push
cltd
jns
inc
push
popf
add
and
push
mov
sbb
icebp
push
hlt
imul
mov
rol
outsb
mov
into
fs
imul
je
jmp
or
sub
push
add
sub
ret
jecxz
aas
out
mov
cmpsb
dec
push
fisubrs
push
movsb
pop
mov
loopne
cs
jns
and
or
fidivrs
mov
das
cmp
fwait
movsl
je
pop
push
mov
mov
sahf
and
arpl
daa
jo
stc
aaa
stos
rcrb
dec
repnz
addr16
test
sbb
in
push
das
shl
xchg
adc
add
testb
lods
cmp
inc
push
mov
adc
incb
lea
insl
jg
out
and
xchg
and
insb
mov
roll
mov
jg
mov
mov
inc
or
sbb
adc
inc
or
rcrb
ljmp
xchg
cmp
imulb
stc
repnz
xchg
sbb
mov
and
mov
dec
mov
pushf
es
imul
fadds
jge
pop
mov
mov
iret
cwtl
js
insl
or
nop
pop
jnp
sbb
popl
cltd
es
lret
aad
push
inc
out
out
ljmp
cmp
mov
sarl
fisubrl
mov
jecxz
das
or
and
push
cmp
dec
sahf
xchg
adc
sub
and
adc
jle
ret
dec
dec
push
aas
dec
push
lock
and
mov
cmc
clc
inc
add
or
cmpsb
sub
stc
ljmp
cmpb
ja
and
int3
mov
dec
cli
data16
aas
outsb
loopne
pushf
inc
jns
ss
xor
jnp
mov
jbe
inc
insl
call
xchg
push
bound
enter
insb
sub
stos
mov
pop
xchg
hlt
mov
adc
data16
or
outsl
sub
sub
push
pop
lahf
sbb
out
push
addl
sbb
inc
or
out
mov
testb
sub
add
imul
pop
jmp
inc
adc
and
call
cmp
jae
shlb
mov
xor
mov
xchg
dec
dec
cmpsl
sbb
and
pop
repz
push
xor
and
jae
jmp
cs
out
mov
adc
push
sub
sub
cmp
orl
adcb
dec
push
mov
cmpsl
or
and
js
jle
scas
scas
inc
mov
fwait
incb
les
pop
pop
jnp
push
fldl
in
push
jae
test
insb
xor
push
addr16
push
jnp
jecxz
icebp
cmp
xchg
jecxz
sub
jl
sub
adc
stc
jmp
xor
stc
out
ljmp
stos
inc
inc
outsl
test
xchg
inc
cmpsb
xchg
into
inc
arpl
push
cmp
negb
repz
lea
cli
push
fistpl
pop
stos
xchg
idivb
fidivrs
jle
fs
cmp
jp
mov
sbb
ds
mov
pop
jecxz
pusha
and
xor
pop
test
inc
mov
xchg
dec
jecxz
cmc
adc
outsl
xorl
inc
adc
xor
push
in
cmpsb
sub
inc
push
jmp
daa
xorb
repnz
jo
popf
push
imul
cli
pop
add
inc
jp
jmp
es
mov
mov
push
adc
imul
out
dec
test
add
pop
int
dec
sti
or
and
inc
outsl
lods
jl
mov
insb
fisubrs
js
lods
int
pop
enter
out
push
aad
lds
add
test
push
imul
xor
cmp
imul
mov
out
xor
jns
sub
lcall
and
pop
lret
xor
fiaddl
mov
push
gs
cmp
pop
push
add
sub
cmc
add
cmp
sub
dec
sub
scas
inc
xchg
sbb
add
mulb
push
sbb
cmp
jno
sub
jp
mov
pop
insl
scas
stos
push
push
xchg
sbb
push
cmc
je
insl
pop
sub
sub
jmp
pop
mov
dec
in
fbld
push
inc
leave
or
or
jo
add
dec
jp,pt
pop
sub
xor
ja
lar
pop
lock
mov
rcr
cli
jmp
iret
sub
jl
repnz
in
div
imul
push
inc
call
jecxz
sub
mov
pop
and
push
ljmp
in
pop
mov
daa
stc
int3
mov
mov
into
rcrl
mov
pusha
icebp
xchg
and
aad
daa
adc
jg
out
xor
xchg
or
pushf
and
hlt
push
inc
aad
dec
out
subl
ret
stc
bound
mov
popf
sbb
or
adc
insl
mov
sbbb
xor
aad
pop
push
pop
pop
scas
fistl
cmp
imul
repz
xlat
lcall
popa
jmp
test
jbe
jl
pop
out
sub
insb
xchg
dec
xor
popf
inc
mov
ret
xlat
or
stc
cmp
dec
stos
imul
adc
jp
push
pop
xchg
enter
or
xlat
dec
cpuid
lods
lock
mov
repz
sahf
and
adc
fildl
xchg
cltd
cli
add
mov
xor
or
pusha
sub
pop
lcall
sbb
pop
je
popf
daa
mov
stos
cmp
shl
xor
or
fwait
push
lea
add
push
sbb
shlb
idivb
movsl
jle
and
lahf
icebp
in
orb
lahf
add
or
test
pop
xor
shlb
adc
mov
loope
jp
mov
gs
lds
push
ja
test
add
mov
mov
pop
cmpl
outsb
bound
or
xchg
or
push
mov
xchg
cmpsb
inc
sub
jl
lret
xor
sbb
dec
cltd
popa
cmc
in
lret
adc
inc
in
mov
cmp
loope
mov
ret
add
push
imul
out
imul
stos
cmp
fidivl
inc
xchg
fidivl
xor
data16
inc
out
pop
shll
movsl
fistpll
int3
inc
add
into
cld
aas
sbb
mov
pop
outsl
clc
push
das
jo
xchg
xor
ss
add
mov
pop
jmp
pop
sub
scas
mov
push
fsubr
addr16
dec
push
mov
cmpsl
out
fbld
mov
pushf
mov
addl
mov
xor
popa
clc
divl
lret
sbb
mov
cmc
std
jo
lds
loope
mov
lods
cwtd
les
pop
lea
dec
testb
sub
inc
pop
dec
xchg
add
sub
dec
mov
mov
clc
or
add
jne
iret
push
inc
addr16
outsb
clc
mov
sbb
jo
cmp
mov
or
push
mov
movsl
pushf
or
gs
adc
sub
je
xchg
pop
sbb
cld
push
outsb
dec
jo
rorb
aad
out
mov
pop
fwait
aam
sbb
jecxz
pop
inc
je
mov
aad
fists
in
xor
add
pop
push
mov
decb
test
add
mov
rcrl
test
push
and
fwait
xchg
xchg
arpl
out
out
xchg
gs
es
sbb
pop
ss
call
inc
push
dec
mov
add
stc
add
fcmove
add
adc
push
repnz
or
lods
adc
decb
cmp
inc
push
pushf
or
push
cwtl
inc
mov
jo
push
adc
loope,pn
pop
and
mov
dec
test
cmp
mov
test
mov
jbe
inc
or
inc
push
or
dec
popa
arpl
xor
sub
sub
je
fdivrs
dec
sub
sbb
popa
push
push
std
pop
or
cltd
lcall
test
mov
orb
cmp
sbb
push
push
mov
adc
jmp
aaa
adc
scas
cmpsb
jbe
pop
fcom
loop
pop
shlb
loop
jecxz
push
imul
enter
outsb
jmp
ja
mov
stos
inc
out
cld
mov
fbld
sub
insb
int3
icebp
and
mov
xchg
fbstp
in
inc
pushf
and
movb
cmp
and
movsl
int3
gs
add
fcoml
lds
jb
sbb
jb
jnp
mov
in
ret
pop
nop
mov
repz
sub
in
je
push
ja
mov
mov
sbb
xor
mov
sbb
aam
and
xchg
stos
insb
test
fidivrl
pushf
adc
shll
adc
add
std
pop
je
ds
rcll
jl
mov
or
sbb
pop
out
dec
sub
jecxz
xchg
pop
cmp
mov
jge
inc
out
icebp
cmp
das
push
out
imul
push
es
sbb
push
lds
push
mov
loope
ja
aas
cli
pop
sbb
repnz
cwtl
fistps
xor
into
cmp
rcr
call
lods
test
push
pop
cli
sbb
mov
mov
xchg
loopne
imul
mov
cmp
xor
orb
xor
gs
add
scas
xor
mov
mov
or
shrb
dec
das
xchg
pop
test
xorl
mov
lods
popa
mulb
mov
ficoml
shrb
imul
sbb
clc
shlb
cld
das
gs
ss
sarb
lock
test
cmpsb
das
int
inc
ljmp
faddp
inc
pop
ljmp
mov
jmp
inc
pop
or
leave
ja
push
notw
inc
test
popf
arpl
cwtl
jle
iret
imulb
pop
sahf
adcl
inc
push
addr16
sub
pop
pop
fnsave
enter
adc
clc
push
scas
sbb
insb
out
pushf
repnz
mov
pop
fldl
jne
test
mov
cmp
mov
dec
mov
arpl
push
lahf
adc
ret
lcall
iret
jae
in
in
adc
xchg
jle
fildl
popa
fdivr
sbb
push
jmp
ficoms
cli
adc
xchg
movsb
sarb
jg
push
xrelease
mov
mov
mov
lahf
cmp
inc
jns
jecxz
push
jae
in
xchg
nop
fwait
repz
jne
dec
mov
dec
stc
insb
cwtl
push
jp
push
outsl
lods
and
dec
imul
jp
sbb
inc
mov
push
mov
jne
jo
stc
cmpsl
adc
sbb
mov
cmpsb
pop
jl
into
lret
jb
mov
outsl
dec
sbb
loopne
jae
add
xchg
jmp
aas
adc
mov
add
cmp
cmpsl
mov
adc
xchg
lret
lahf
add
sbb
xor
or
cmpsl
int3
inc
xor
sub
gs
in
jbe
xchg
and
data16
aam
xor
cmp
push
or
fldl
cmp
mov
popf
hlt
adc
mov
mov
sub
jno
mov
jno
ja
and
into
jle
dec
shll
lahf
or
push
push
add
mov
jae
cmpsb
cltd
xor
icebp
xchg
adc
scas
pop
dec
mov
add
lds
sub
adc
test
imul
outsb
in
aaa
push
add
or
in
in
sbb
push
mov
inc
sbb
enter
mov
call
mov
sbb
push
ds
iret
pusha
cmpsb
jnp
mov
and
pop
mov
notl
jae
bound
dec
inc
mov
xor
mov
popa
push
mov
xor
dec
shld
fwait
sub
cmp
pop
pop
add
sub
sbb
jns
fimuls
inc
cmp
pop
hlt
cmp
jmp
aad
neg
loopne
mov
inc
or
xchg
ret
out
movsb
or
lods
outsl
lret
sub
pop
cwtl
cmp
or
sbb
fs
cmc
shlb
shl
xchg
xor
leave
ja
xorb
and
fistpl
roll
mov
fimull
mov
pop
xchg
xchg
mov
movsl
adc
adc
mov
out
or
cwtl
call
mov
mov
pop
and
lcall
push
dec
imul
inc
test
int3
gs
outsl
xor
arpl
fwait
xchg
add
adc
idivl
mov
mov
lock
pop
out
inc
aam
gs
or
shlb
cs
cmpsl
or
scas
fwait
mov
das
cltd
pop
pop
cmpl
pushf
sbb
dec
scas
fsub
sbb
pushf
dec
fimuls
into
or
js
in
lret
fcmovu
fimuls
clc
sbb
jp
mov
push
ja
popf
cs
mov
mov
xlat
test
sub
movsl
inc
jecxz
imul
mov
inc
cld
leave
pushf
gs
imul
mov
stos
xchg
in
pop
popl
les
cld
data16
mov
test
and
addb
jnp
mov
adc
lret
dec
mov
mov
mov
mov
or
dec
add
and
add
dec
inc
mov
pop
fwait
sbb
sbb
inc
sub
sub
clc
cmp
in
cmp
cmpsb
ror
mov
dec
mov
fsubl
pop
and
dec
test
arpl
rcl
cmp
aam
out
inc
scas
in
hlt
sahf
mov
repnz
mov
push
mov
xor
fbld
mov
repz
cmpsl
in
mov
mov
mov
sub
shlb
test
repnz
pusha
les
lcall
mov
push
and
ja
sbb
movnti
out
and
xor
lods
mul
dec
je
mov
pop
inc
push
mov
inc
fdivrs
push
fcoms
dec
lods
mov
mov
aaa
aad
sahf
data16
add
syscall
jp
movsb
pop
mov
jmp
dec
mov
mov
out
stc
inc
xor
mov
mov
lds
pop
stos
jae
xchg
cmp
enter
push
fisubrs
clc
push
mov
cs
sbb
mov
mov
cmp
xor
aaa
nop
in
cmp
inc
lods
sbb
outsl
dec
fwait
or
and
nop
jge
pop
cmc
in
jmp
mov
sbb
adc
mov
pop
xchg
mov
push
mov
adc
cmc
or
push
xchg
loopne
adc
pop
fcmovnb
aad
imull
mov
fs
int
sbb
sub
leave
scas
or
adc
lea
std
das
inc
fbld
in
jmp
je
js
push
orl
lds
cmp
adc
stc
xor
pop
scas
scas
adc
and
lods
ljmp
outsb
nop
dec
jae
outsl
pop
iret
and
shll
enter
cld
and
mov
mov
fmuls
sub
aad
push
int3
sub
cmpsb
jg
mov
lock
push
inc
stos
push
xchg
and
imul
stos
mov
test
inc
shld
cmc
xchg
enter
adc
filds
mov
push
adc
lock
insb
aad
mov
add
and
loope
nop
mov
fsubrp
cmp
cmp
sarl
repnz
jno
popf
jb
movsb
push
adc
sbb
pop
ss
or
jp
cld
jmp
inc
sbb
nop
mov
lahf
test
jecxz
out
jmp
mov
jmp
sbb
mov
fidivs
fwait
cwtl
xchg
or
mov
adc
addr16
cli
stc
in
xchg
lods
sub
push
push
mov
lds
fsubrp
adc
dec
dec
cmp
and
jl
dec
or
incl
adc
pop
js
add
ja
fcoms
adc
sbb
cmpsl
stc
out
adc
xorb
pushf
adc
or
xchg
loope
lahf
push
mov
xor
test
sub
fscale
call
push
pop
mov
mov
sbb
popa
std
xor
int
jle
int
mov
std
jbe
pop
loopne
sbb
lods
in
or
test
push
in
mov
in
fildl
into
dec
enter
push
pop
jnp
push
dec
sbb
sub
imull
cmp
js
mov
scas
pop
lods
pop
pop
mov
dec
ret
mov
lea
lock
daa
sbb
or
loopne
sub
mov
sahf
push
shll
cli
sbb
sbb
mov
sub
jne
nop
stos
call
mov
sub
push
and
xchg
mov
xchg
push
sarb
push
test
je
pop
mov
jno
xchg
int
ret
daa
mov
xchg
mov
data16
push
sub
sub
dec
in
add
in
inc
adc
addr16
mov
inc
cmp
jns
dec
sub
fildl
loope
lret
cmpsb
movsl
ja
hlt
in
mov
aam
cs
cmp
out
rcrb
jno
ljmp
mov
stos
fmull
xchg
sub
push
and
jb
js
sbb
jp
int3
aam
rcl
ret
data16
fwait
lret
les
addb
adc
inc
mov
cwtl
pavgb
pop
add
int
xor
rcrb
cmp
popf
fildl
xchg
enter
lret
push
push
in
adc
cwtl
fdivrs
push
and
add
cld
and
shrl
shll
popf
dec
inc
out
push
fwait
cmp
lods
dec
sub
std
pop
js
or
sahf
aas
mov
inc
mov
pop
sbb
rcrl
aaa
rorl
mov
loopne
and
jae
and
test
jbe
and
and
push
or
stos
cwtl
rcrb
dec
add
adc
insl
sahf
sbb
adc
out
mov
sub
aaa
in
lahf
enter
push
adc
inc
xor
jecxz
pop
ret
test
daa
xor
jmp
xor
movsl
lea
lret
inc
bnd
inc
jae
cwtl
lret
adc
sbb
int
mov
out
gs
lahf
mov
in
ret
sub
mov
call
fmul
mov
or
dec
mull
in
xchg
add
std
stos
std
inc
outsb
hlt
ret
mov
out
xor
test
in
xchg
jecxz
and
daa
imulb
outsb
bound
dec
or
shll
cld
xor
es
bound
sbb
mov
add
sarb
dec
ret
add
inc
mov
push
jbe
es
repnz
test
jno
inc
sbb
hlt
das
idivl
sarb
sbb
in
in
stos
sbbl
sbb
repnz
sahf
pop
mov
xor
test
cmp
shll
movsb
call
lea
rorl
mov
shlb
inc
nop
dec
test
push
mov
cmp
pop
mov
aaa
negl
cwtl
inc
movl
out
popa
jb
mov
cmpsl
xchg
xor
jbe
js
fisubrl
push
inc
xor
hlt
inc
add
jae
mov
shrb
cmpsb
dec
and
imul
mov
xor
xchg
mov
ljmp
adc
xchg
mov
leave
insb
fs
mov
xchg
addr16
or
scas
inc
xor
mov
jg
into
fbstp
ret
ljmp
mov
inc
ljmp
xchg
lahf
push
xor
inc
mov
rolb
push
test
repz
mov
push
xchg
out
and
push
pop
jp
xlat
jb
or
cmp
test
mov
jl
js
testl
testl
adc
es
je
in
sahf
lcall
cld
mov
lcall
fwait
in
insl
xchg
xlat
std
and
mov
dec
sbb
xlat
lea
mov
adc
lods
shlb
hlt
pop
adc
insb
mov
rorl
repnz
jb
push
dec
xchg
pop
rcr
sub
dec
js
fisubs
xchg
loopne
cli
adc
aas
fldt
repnz
pop
jbe
pop
out
inc
in
outsb
mov
sub
loope
and
std
ret
in
add
leave
repz
xchg
or
cmpsl
jp
in
outsl
pop
inc
ja
nop
scas
out
xchg
cmpb
cmpsl
push
bound
outsl
outsl
mov
repz
add
sbb
jp
lock
xor
inc
add
sub
jno
mov
les
cmp
mov
mov
push
addr16
pop
mov
mov
test
pop
stc
dec
xor
adc
leave
ret
xor
push
push
gs
sbb
in
ss
and
mov
dec
push
jg
nop
incb
pop
js
add
push
or
and
out
mov
mov
testl
xor
adc
movsl
inc
pop
jle
jbe
sub
in
bound
sbb
inc
lahf
cmp
inc
and
test
loope
aas
push
push
out
mov
xor
data16
pop
sbb
dec
lea
mov
jecxz
add
sub
subl
push
mov
xor
cs
add
and
pushf
imul
xchg
push
fstps
fcompl
lds
test
enter
shlb
dec
mov
cld
inc
outsb
cmpl
lea
jp
sahf
pop
gs
fnsave
loope
or
dec
sbb
test
notb
pop
xor
insl
or
mov
fcomps
sub
rorb
mov
push
and
ds
jae
xor
xchg
call
xchg
xor
pop
adc
aad
sbb
scas
aam
inc
pop
jge
in
lds
mov
sub
push
xchg
sub
ss
rorl
adc
mov
not
mov
jne
jno
outsl
cmpl
and
cs
dec
movsl
aaa
or
enter
int3
pop
in
loopne
inc
cmpsl
je
sub
pop
out
sbb
mov
xor
push
data16
ficompl
stos
sbb
pop
movsl
aaa
hlt
fcos
xor
fiadds
mulb
std
ret
sti
sub
iret
daa
xchg
sub
imul
pop
and
xchg
hlt
add
in
add
xor
rolb
and
mov
adc
lret
jb
lods
jmp
data16
out
sub
mov
mov
outsl
sub
adc
cmp
mov
fstpl
cmpsb
mov
push
and
push
or
pop
jmp
add
sbb
lret
inc
fsts
dec
adc
pop
mov
ss
dec
xchg
sub
xchg
add
in
arpl
and
push
push
and
pop
fisubrs
xchg
lret
scas
xor
in
into
sub
orb
and
out
push
repnz
sub
dec
or
mov
stos
mov
and
inc
sbbb
pop
mov
xor
hlt
icebp
jp
sub
or
lret
movl
roll
aam
stc
stos
hlt
loope
mov
add
xorb
push
movsb
and
inc
outsl
aam
xor
rcll
and
fnstsw
sub
sbb
popa
mov
jns
mov
aas
cmp
ret
das
add
jmp
hlt
daa
daa
push
out
cmp
adc
sub
jnp
cmp
addb
fistl
adc
pop
pushf
dec
aaa
outsb
cld
pushf
sbb
xor
pop
and
je
in
inc
sub
pop
andb
aam
daa
xor
sti
insl
loope
pop
xchg
es
stc
mov
inc
in
data16
sbbb
aas
mov
mov
out
repnz
in
mov
xorb
and
cmp
and
lock
mov
xor
jp
or
cli
add
or
mov
fs
add
pop
push
mov
push
add
push
ror
fstpl
add
cs
inc
mov
in
inc
movl
xor
in
icebp
mov
idiv
rcll
pushf
jp
sbb
aad
insb
fs
les
movsb
gs
lods
sub
cs
add
mov
fcmovbe
inc
mov
mov
sahf
add
js
mov
mov
jns
push
das
cmp
das
xor
adc
xchg
inc
lock
and
jp
mov
lcall
dec
cmp
shrb
stos
stos
sbb
jae
cld
fildl
out
mov
push
andl
xor
mov
sbb
pop
cmp
out
sbb
jns
inc
xor
push
push
xchg
add
pushf
sbb
lahf
shlb
aas
mov
mov
scas
jle,pn
loope
and
adc
xor
fildl
inc
xchg
out
ret
repz
stos
sub
add
ss
pop
call
sub
pop
sbb
jp
ret
stc
push
pusha
xchg
sub
mov
xchg
lock
sahf
mov
sub
neg
cmc
scas
aaa
mov
lahf
inc
outsl
stc
lea
in
loope
xor
inc
adcl
adc
icebp
pop
adc
iret
mov
push
out
rcll
jbe
sub
sbb
push
rolb
scas
in
jg
sbb
inc
xchg
loop
fsubrs
cwtl
lahf
test
cmp
movsl
js
imul
mov
addb
lret
fs
xor
xchg
lods
xor
sub
stos
pusha
loope
ret
sub
or
pop
in
outsl
or
test
jge
ret
pop
cwtl
dec
dec
in
lods
jg
stos
cmc
sbb
lock
pop
pop
out
cs
stos
bound
add
sub
test
mov
dec
cmpsl
mov
les
in
xor
xchg
pop
ljmp
loope
shrb
push
mov
repnz
dec
idivl
popf
popf
sbbb
inc
xchg
test
jg
push
mov
cmpsl
or
lods
aad
lret
inc
xchg
mov
dec
mov
aam
fnstcw
cltd
adc
aaa
and
mov
add
and
repnz
inc
dec
dec
pop
scas
mov
jge
push
cmpsl
sbb
pusha
pop
push
fdivl
popf
add
addb
rcrl
ljmp
out
inc
out
mov
inc
inc
addr16
pushf
mov
and
test
push
es
test
je
jmp
rorb
ds
orb
jl
pop
inc
mov
cmp
cmp
push
pop
inc
push
xchg
out
xchg
adc
inc
add
icebp
adc
shlb
or
dec
mov
imul
nop
rcll
fcmovnbe
mov
mov
inc
xchg
sbb
add
adc
push
vcomiss
push
movsb
jns
push
hlt
aad
push
stos
inc
xor
add
jns
push
adc
out
lock
je
or
or
scas
inc
xor
loopne
add
mov
jno
sarb
xor
adc
cmc
rcrl
lods
push
roll
push
jns
dec
and
mov
lods
sbb
sbb
jno
stos
insb
cwtl
test
loopne
pop
pop
ja
loope
stos
aad
xor
jno
xchg
out
xchg
imul
pop
mov
mov
inc
mov
mov
scas
inc
aam
or
data16
aas
inc
pop
mov
lods
leave
mov
into
divl
adc
and
inc
lock
fs
sub
int
xor
stos
icebp
push
and
push
mov
fnstsw
xor
daa
add
xor
popf
pop
dec
jmp
push
ja
lret
loope
sub
test
adc
fidivrs
cmpsb
ds
jp
xor
push
daa
xchg
add
cmp
xlat
jl
call
and
cmc
jbe
mov
fs
test
sub
lods
jp
cltd
and
nop
or
inc
in
mov
jle
cs
xchg
int
adc
out
and
mov
or
inc
rcr
pop
cmp
lods
mov
movsl
mov
adc
cmp
insl
sub
push
in
pop
cmp
push
mov
lahf
and
pop
sub
stos
sbb
nop
insl
fisubrl
jbe
cltd
push
cmpsb
gs
jbe
cmp
dec
fst
iret
clc
ret
into
xor
lds
and
push
into
nop
pop
aas
pop
movsb
dec
mov
arpl
je
pop
add
in
into
mov
loop
bound
int3
push
inc
popl
mov
push
lock
loopne
push
stos
test
mov
fbstp
mov
mov
rep
idivb
stos
outsb
fwait
adc
and
fnstsw
sub
in
rep
gs
push
subb
mov
insl
jo
rcl
pop
sbb
ds
adc
iret
rol
int
push
imul
xchg
add
sarb
int
out
popf
imul
lahf
mov
mov
sub
xor
sub
and
out
jl
lea
cmp
loop
cs
sbb
xchg
lret
and
mov
pop
push
mov
sbb
pop
nop
or
pop
xor
mov
push
mov
mov
jae
cmp
and
fldt
pushf
repnz
pop
jb
jae
loopne
int3
pop
sbb
sahf
daa
adc
sub
stos
lahf
cmp
adc
leave
loope
mov
inc
jbe
roll
jne
sbb
sub
push
mov
pushw
xchg
jp
and
sub
lods
popf
jo
cmc
outsb
cwtl
jnp
sub
and
js
lods
ds
std
ud0
and
pop
pop
dec
dec
mov
push
sbb
and
mov
js
mov
xchg
punpckhdq
push
lret
mov
jecxz
mov
out
push
xchg
stc
mov
jge
mov
inc
push
sbb
sbb
jmp
pop
add
lea
inc
stos
jle
nop
movsl
mov
jmp
orl
jo
add
mov
mov
pop
or
add
and
add
cmc
fldcw
inc
mov
mov
les
scas
clc
adc
or
dec
out
aad
sub
adc
jmp
sub
push
jle
push
mov
nop
out
xor
mov
dec
jbe
push
fcmovnb
cs
sub
jecxz
pop
orl
and
in
xorb
push
adc
cmp
and
xchg
or
jb
sbb
outsb
cmpsb
pushf
mov
mov
pop
xlat
add
mov
aad
aad
pop
dec
clc
xor
jp
dec
and
mov
shll
push
inc
iret
or
je
adc
insl
fmull
ja
les
pushf
movsb
cmc
inc
stc
shrl
pop
movsl
cwtl
scas
add
cld
add
bnd
or
cmp
pop
dec
push
cld
arpl
inc
jnp
pusha
xlat
rcrl
in
or
mov
adc
in
fisttpll
and
fimull
jg
dec
xchg
outsb
or
movsb
movsl
fmulp
js
int3
adc
stc
jnp
popa
xor
mov
mov
jmp
pop
lods
fnstcw
and
es
adc
int3
jge
pop
fisttpll
in
test
inc
dec
stos
int
or
aad
sub
pusha
mov
xchg
into
cltd
lea
jg
insb
jg
xor
sub
mov
bound
imul
add
lea
hlt
mov
cmpl
jae
aas
cmp
push
push
jns
and
xchg
push
adc
cmp
add
mov
addr16
clc
pop
jge
shl
aas
fldt
push
xlat
push
into
mov
pop
mov
es
lret
xchg
lret
mov
loop
orl
bound
push
dec
sub
add
inc
inc
ja
mov
adc
pop
scas
mov
iret
test
aad
ficompl
test
add
xor
and
ljmp
inc
subb
std
es
enter
jecxz
fistpll
cmp
fdivs
ret
dec
cmp
gs
xor
subb
xor
inc
mov
sub
aad
sahf
popf
jne
ss
std
mov
sub
pusha
loop
into
inc
nop
scas
test
lods
mov
imul
sbb
xor
out
mov
mov
or
mov
push
sahf
in
jo
clc
or
imulb
push
incl
dec
dec
insl
sbb
inc
add
gs
push
fidivs
sbb
push
jo
and
xchg
sub
dec
aaa
lahf
pop
xor
ja
enter
imul
jp
xchg
push
lret
jl
and
ret
sub
mov
lret
xor
inc
cmc
dec
arpl
add
repz
in
mov
push
cmpsl
lcall
popf
stos
adc
shll
insl
gs
lods
out
pop
outsb
std
jbe
cli
aaa
clc
xchg
jb
dec
mov
sbb
xchg
mov
sub
mov
js
je
jg
arpl
loopne
jle
ds
cmpsl
pop
pop
adc
lds
push
sbb
xorl
pusha
xor
jns
xchg
and
pop
xchg
mov
sbb
cwtl
outsb
popa
push
ljmp
fidivs
mov
push
idivb
int3
lcall
sbb
xbegin
das
inc
fisubrs
insb
inc
push
adc
popa
insb
mov
xchg
pop
sbb
pop
jnp
popf
and
or
add
jne
fcoml
sub
jecxz
es
jno
pop
and
in
inc
rorb
add
ret
sub
cmp
xchg
mov
mov
add
out
and
mov
cld
xchg
aad
xor
sahf
push
pop
mov
pop
sbb
ss
cmp
testl
dec
cltd
rclb
push
jb
mulb
dec
dec
dec
pusha
sub
ret
or
mov
push
lock
pop
fcmovbe
in
mov
sbb
mov
mov
cmc
test
daa
fs
out
mov
bnd
cld
sahf
xchg
pop
and
or
call
sbb
add
incl
mov
mov
loopne
jecxz
cld
sbb
adc
fmuls
dec
ds
pop
clc
popa
inc
out
sahf
rorl
imul
imul
hlt
cli
lods
mov
mov
aam
and
inc
pop
xor
add
and
shll
inc
or
loop
cli
mov
sbb
out
sbb
stos
sub
jmp
push
jae
pop
outsb
lods
loope
cwtl
inc
push
mov
and
pop
jp
int
dec
shrb
inc
adc
sbb
ja
insb
or
int
dec
fiadds
andb
je
cs
gs
fsubrl
xlat
mov
jbe
add
mov
sub
pop
pop
and
pop
inc
shll
add
and
sti
adc
aam
test
bound
call
dec
adc
lds
mov
jmp
repz
jmp
add
rorb
xchg
dec
rorl
dec
insl
fs
jge
cmpsb
and
adc
jl
test
sub
out
orb
fildll
xor
fwait
push
push
adc
aam
jecxz
jnp
jle
sbb
sahf
call
jge
cmpb
adc
sahf
push
testb
fwait
sub
pop
sub
add
das
mov
fisubrl
popa
pop
jb
enter
mov
loopne
lds
fwait
cmp
jae
mov
sbb
mov
int
inc
scas
inc
mov
pop
inc
push
rolb
and
xchg
sbb
dec
in
xor
pop
lods
orl
adc
shlb
shrw
cmpl
mov
xor
ffree
pop
pushf
sub
loope
or
and
mov
out
mov
xchg
test
xchg
stc
filds
add
mov
cwtl
cmpsl
xchg
sub
lds
push
push
insb
out
out
dec
mov
shll
call
std
pop
and
imul
addr16
in
imul
aas
lea
cltd
lahf
shll
and
xor
out
sbb
pop
and
mov
test
hlt
xchg
cmp
movntps
add
jae
into
js
add
addr16
adc
repnz
roll
push
rcrb
mov
scas
inc
lahf
leave
mov
push
dec
sbb
add
push
sti
xchg
aas
or
dec
lahf
adc
dec
daa
inc
ljmp
scas
test
xchg
enter
xor
and
js
push
mov
and
popl
in
enter
inc
or
rorb
sbb
lds
iret
scas
mov
sarb
jmp
mov
push
mov
pop
pop
cmpsb
add
push
rorl
mov
fidivrl
sbb
push
cs
lret
in
pop
sub
mov
out
pop
les
je
add
sbb
mov
pop
insl
mov
adcb
or
dec
ds
fcmovu
mov
mov
imul
call
ja
das
jbe
mov
je
mov
lds
clc
dec
and
add
imul
push
adc
sahf
sub
jl
lock
out
out
cmp
sbb
out
mov
mov
push
loopne
fdivp
mov
jo
pusha
pop
adc
and
jo
jmp
xor
cmpsb
filds
push
or
cli
daa
add
test
jge
cmc
pop
cld
xchg
popa
rclb
or
pop
shlb
pop
fnstsw
cmc
mov
pushf
jle
add
mov
insb
clc
in
idiv
test
cltd
cltd
lret
mov
pop
imul
repnz
mov
adc
aas
add
movsb
mov
cmpsl
xor
push
or
xor
mov
lds
ja
movsb
mov
sti
push
leave
pop
push
add
enter
add
aas
cmp
sar
mov
movsb
xchg
bound
add
clc
outsb
or
cmp
fnstsw
or
test
mov
or
dec
fucomp
stos
aas
filds
clc
adc
adc
mov
inc
aas
ljmp
mov
sbb
add
push
es
mov
movsb
fwait
adc
loopne
or
push
test
push
sub
das
pop
sahf
test
cmp
insb
int3
sbb
and
sbb
into
loop
rcll
in
mov
testl
mov
std
jp
push
test
adc
adc
xchg
xchg
out
ljmp
push
rorb
insb
mulb
adc
loop
pop
mov
imul
push
xlat
cmc
or
shrb
jl
inc
jns
andb
jno
into
dec
adc
jge
mov
push
andb
sub
ficoms
xchg
jp
adc
xlat
cmpsb
pop
mov
push
sahf
inc
jp
mov
push
lret
add
iret
xchg
rcl
mov
dec
insb
mov
lcall
int3
push
addl
xor
insb
cwtl
adc
sarl
pop
jecxz
cld
push
sbb
dec
bound
arpl
enter
sub
and
adc
add
mov
aad
in
scas
cmp
add
out
add
bswap
scas
push
push
aam
or
push
cmp
push
in
pop
mov
mov
ds
test
mov
hlt
push
mov
pop
test
sub
nop
or
jmp
inc
test
insb
sub
jecxz
stos
ljmp
jo
lcall
push
cmp
sbb
and
or
xor
add
and
xchg
xor
pop
movsl
mov
pop
jg
lock
mov
mov
jae
pushf
jge
inc
pop
sub
test
in
outsb
mov
cwtl
push
sahf
loop
bound
test
push
mov
inc
mov
xor
pusha
xor
jae
xchg
mov
xor
xchg
into
push
ret
mov
std
ret
ljmp
xchg
adc
jge
jns
and
mov
testl
insb
mov
or
push
push
sub
xor
jbe
jmp
xor
pushf
cwtl
icebp
dec
lret
sbb
popf
mov
jb
outsb
cmp
adc
test
jp
jae
fsubs
popf
inc
push
and
jmp
js
add
dec
imul
xchg
outsl
ret
jle
dec
inc
and
pop
adc
cmc
movsb
inc
adc
lds
mov
lods
test
xor
dec
es
add
fwait
or
dec
xor
fcmovnbe
lcall
leave
imul
or
in
push
ret
xchg
add
mov
pop
lods
std
outsb
fs
lods
mov
daa
je
mov
mov
or
leave
fwait
jae
jns
cld
or
leave
adc
adc
cmpsb
repz
add
aas
lret
jp
pop
add
lahf
aas
add
jo
push
xchg
daa
xchg
cmp
push
out
cwtl
adc
lea
fs
sub
iret
lcall
dec
fs
push
pop
cmp
test
mov
fstps
mov
inc
mov
pop
enter
movsb
inc
add
push
popa
xchg
test
and
fadd
nop
push
lock
pusha
push
scas
repnz
xlat
xchg
scas
ret
mov
mov
jmp
and
pushf
ljmp
imul
push
push
js
lcall
fbstp
lret
xor
mov
stos
sub
pop
dec
pop
pop
pop
scas
push
cmp
adc
mov
iret
adc
idivb
mov
xor
sbb
mov
sbb
and
mov
lahf
rcrl
jb
and
cmp
sti
adcl
les
and
xchg
jne
movsl
fs
fildll
cmp
mov
inc
nop
jmp
iret
dec
in
mov
sbb
jle
push
bound
ljmp
pop
jle
pop
cwtl
mov
xchg
out
lds
mov
push
dec
and
jno
dec
dec
mov
jns
imul
sbb
add
xchg
jg
dec
inc
push
xlat
xor
pop
mov
loope
cmpb
xchg
int
xor
sti
jge
xchg
or
push
loopne
je
jmp
adc
lds
xchg
cwtl
repnz
pop
mov
or
cs
xchg
lahf
mov
out
test
js
test
movsl
nop
adc
in
xor
rol
sbb
insl
push
mov
js,pn
inc
jae
cld
sub
and
inc
test
push
adc
out
adc
jo
out
sbb
xchg
cmp
sbb
jb
and
mov
shrb
jo
leave
and
mov
cmpsb
lahf
ret
push
enterw
cmp
mov
mov
fldenv
mov
sub
repz
sbb
push
cmp
addr16
inc
xchg
aam
les
xchg
and
inc
out
push
mov
sbb
xlat
icebp
into
cwtl
inc
lcall
aaa
fsubs
jle
mov
das
lret
inc
mov
imul
jge
inc
cltd
xor
adc
fwait
clc
push
mov
lahf
cmp
pop
jae
incb
xor
js
hlt
imul
add
nop
repnz
test
stos
mov
pop
xchg
shlb
mov
lods
js
mov
mov
inc
or
dec
stos
daa
ja
mov
mov
mov
cmpsb
cli
push
xchg
push
shll
cld
outsb
adc
das
mov
aam
sub
sub
movsl
adc
sub
inc
mov
dec
out
out
mov
daa
adcb
sbb
test
add
and
sub
inc
sub
sbb
push
push
add
imul
arpl
jnp
fnsave
out
outsl
inc
and
mov
cmp
jae
pop
pushf
pmullw
imul
add
pop
js
roll
movsb
fistpl
mov
leave
or
roll
ljmp
xor
fs
push
xchg
test
xchg
xchg
popf
aam
in
jo
or
xchg
lds
mov
dec
mov
cwtl
in
push
adc
sahf
clc
cmc
push
inc
or
daa
jbe
adc
jle
fwait
sbb
jbe
imul
sbb
cltd
pop
fnstsw
sub
daa
add
jl
insl
push
das
icebp
sbb
jno
out
and
xchg
and
bnd
and
push
add
cmp
pop
test
js
adc
test
out
add
mov
xchg
in
or
lods
inc
xor
ret
int
or
pusha
push
movsl
add
das
fmull
inc
movsl
out
adc
sbb
sub
in
mov
aam
jns
out
xchg
jnp
test
imul
inc
add
outsl
pusha
icebp
aaa
data16
jne
shrl
push
fs
fwait
inc
sub
or
lret
jecxz
std
imulb
add
push
push
sbbl
add
aad
into
and
mov
movsl
bnd
stos
mov
mov
movb
xor
jge
mov
jnp
add
cltd
xor
inc
and
dec
sub
pop
imul
and
push
testl
cmp
mov
aam
pop
xlat
jp
int3
xchg
sub
daa
loope
stos
adc
add
notl
pop
xor
pop
sti
sub
sbb
jae
stos
pusha
mov
test
dec
jo
xor
test
fldlg2
inc
adc
fcoml
cmp
decl
adc
in
popf
fucomi
sub
add
aaa
cmp
add
dec
sahf
cmp
ret
dec
mov
mov
cmc
in
jnp
in
cld
mov
andb
roll
pushf
in
mov
es
int
or
popf
in
dec
das
popf
mov
push
in
lds
pop
jno
clc
mov
mov
icebp
mov
adcl
into
sub
xchg
push
cli
pusha
mov
outsb
push
and
in
outsl
or
dec
int3
push
sti
pop
fnstcw
jp
and
xor
fstpt
sbb
jb
nop
mov
dec
mov
xchg
jg
inc
and
jno
inc
packssdw
sub
mov
ljmp
sub
mov
stos
dec
test
mov
or
arpl
test
cmp
repnz
cmpsb
xlat
jecxz
xor
lcall
cwtl
shr
xor
ret
stos
pop
push
jo
sub
push
shld
jle
cmp
int3
bnd
or
call
mov
jmp
adc
into
sub
pop
push
inc
fcoml
xchg
aad
movhlps
ja
out
inc
rorl
shrb
addr16
lds
js
test
fldl
jne
pop
jns
ret
push
mov
and
lcall
nop
mov
sub
inc
push
jns
stc
sub
mov
jmp
out
cmp
mov
push
repnz
cwtl
jmp
out
ret
push
js
jl
cmp
mov
repz
jle
cltd
xor
push
lret
lcall
mov
jns
shl
add
movsb
test
out
xor
xor
inc
subb
fs
popa
xor
fadd
xchg
add
or
xchg
pop
add
jae
adcb
mov
ret
dec
in
leave
pop
lods
cld
cmpsb
or
push
rcll
or
int3
cli
and
scas
in
pop
sahf
movsl
movsb
push
pop
rcrl
cmc
inc
mov
inc
fbld
push
outsb
sti
pop
jne
js
jb
mov
lods
or
popf
jge
push
mov
push
add
ljmp
adc
jl
xor
into
pushf
push
stc
adc
cwtl
fs
push
jecxz
andl
cmp
jae
popa
cmp
cmp
jb
clc
int3
sti
push
adc
negb
test
testl
and
mov
fistpl
xchg
dec
enter
adcl
xor
fs
lahf
insb
pushf
pop
daa
xchg
and
xlat
xchg
loopne
rcll
mov
arpl
pop
stos
xchg
add
xchg
out
cmc
xchg
push
insb
and
nop
test
or
mov
lret
mov
jmp
aam
sbb
and
add
cwtl
test
cli
lret
lds
and
insl
mov
add
mov
or
mov
xchg
jge
repz
test
xchg
or
aaa
out
call
jecxz
gs
push
add
rclb
hlt
pop
xor
mov
or
por
mov
or
push
or
outsl
or
dec
ret
add
cwtl
inc
fwait
xchg
rorl
fisubl
dec
lds
inc
xchg
mov
mov
fldcw
inc
push
adc
xchg
fcoms
jl
jo
test
nop
jmp
push
add
adc
fwait
repz
imul
xchg
xchg
scas
das
insl
inc
mov
in
xor
dec
call
addb
testb
dec
testl
test
ret
jp
jp
fsts
scas
adc
cmpsb
cltd
mov
adc
data16
add
test
inc
jne
cli
jnp
lcall
mov
xchg
inc
add
arpl
cmp
stos
dec
fldl
cmp
lcall
xchg
xchg
mov
inc
jae
push
cmpsl
sahf
into
push
popf
pop
jnp
aam
jbe
push
mov
adc
ss
pushf
sub
pop
add
pop
jno
adc
out
cli
jge
in
inc
bound
dec
fildl
sbb
shl
loop
xchg
inc
jg
add
adc
aaa
xor
mov
sti
rclb
repnz
mov
mov
mov
outsb
test
lods
and
stos
mov
pop
push
pop
sub
mov
push
je
jg
add
lahf
addr16
sbb
mov
out
out
iret
jp
test
aam
dec
cmpsl
rcl
popa
out
fidivrs
hlt
fbld
cmp
push
cmp
ficomps
fnstcw
xor
mov
jp
test
rcll
into
pushf
bound
out
cltd
and
lret
push
push
stos
cmp
fidivrl
mov
xchg
jecxz
filds
arpl
cmp
out
in
ja
jp
inc
jl
lea
pop
ja
scas
xchg
pusha
xor
dec
outsl
push
sbb
ret
sbb
dec
shrb
sbb
arpl
enter
popa
js
or
repnz
fsubr
sub
loope
sbb
fisubl
lods
flds
ss
pop
lret
mov
scas
cli
fcmove
andb
ja
mov
add
xchg
adc
xor
enter
inc
loopne
dec
sbb
clc
int3
mov
test
pop
in
test
or
push
adc
insb
mov
push
out
push
dec
inc
das
push
ja
fucomip
mov
cmpsb
adc
aas
mov
cmp
sub
pop
std
shrl
icebp
mov
pop
dec
psubb
push
jmp
outsl
xchg
fcomps
jmp
fldenv
or
sbb
inc
sbb
inc
xchg
inc
mov
mov
pop
push
or
lock
std
push
popa
repz
mov
jb
push
xchg
mov
jb
sbb
inc
push
sbb
jg
fsubr
adc
mov
mov
cmp
fcoml
out
and
fwait
js
jns
iret
push
add
pushl
lcall
cmpl
verr
int
pop
rolb
outsl
xor
repz
repz
jbe
adc
in
dec
adc
sub
das
or
pop
ret
sbb
insl
mov
pop
jmp
xchg
repnz
cli
cmp
sub
add
fmul
xor
push
mov
clc
jnp
inc
xchg
pop
mov
or
add
cmpsl
mov
xor
loopne
rorl
ds
add
int
or
inc
aad
enter
cltd
jmp
inc
inc
xchg
imul
push
mov
sbb
into
mov
iret
aaa
jae
hlt
or
lahf
sub
sbb
mov
jle
add
gs
roll
dec
mov
push
and
dec
inc
inc
adc
add
movsl
cli
cld
je
push
stos
mov
test
pop
jnp
das
stos
pop
inc
mov
jne
jge
mov
dec
fwait
mov
xchg
mov
mov
xchg
ret
mull
les
pop
mov
pop
lcall
lcall
stos
cwtl
dec
mov
or
mov
lds
ss
dec
jg
sub
inc
into
sahf
imul
call
dec
js
out
inc
and
xlat
scas
mov
js
xor
jbe
rorb
push
and
dec
mov
and
les
mov
jo
add
mov
inc
push
mov
iret
bound
and
fsts
movsb
pop
popa
add
testl
scas
jbe
mov
push
mov
aaa
pushf
pop
cmp
cmp
inc
out
repnz
sahf
and
ficoms
xchg
fcmovnu
rorl
int3
fimuls
sarl
jns
movsb
popa
stos
sub
loop
out
mov
mov
xchg
out
and
mov
inc
cmp
adc
in
addr16
lret
fisubrs
imul
or
mov
push
adc
lock
and
add
add
ljmp
mov
cmpsb
mov
xor
cmp
roll
sbb
cltd
clc
and
loopne
in
pop
sahf
clc
mov
test
negl
repnz
or
mov
fstpt
out
imul
and
and
cmp
inc
jge
sbb
movsl
push
push
push
pop
jmp
or
in
adc
push
sahf
push
int3
and
sub
call
mov
sbb
cmp
jnp,pt
aam
or
loop
mov
shlb
adc
adcl
xor
sahf
jp,pt
adc
test
sub
add
cmc
out
xor
mov
inc
lcall
pop
mov
lret
dec
test
dec
adc
movsb
nop
and
out
pop
mov
mov
mov
and
not
mov
push
jmp
outsb
sub
lock
fs
add
fimull
sub
push
jg
jnp
roll
pop
js
add
lahf
imull
jl
lods
pushf
jle
fisubrl
fiaddl
fcoms
push
pop
mov
dec
shrb
pop
aaa
xchg
inc
add
xchg
jb
adc
cmpl
sub
jg
lods
push
outsl
xchg
nop
xchg
add
mov
ret
mov
sub
mov
mov
pop
loopne
xor
aaa
scas
sub
and
lcall
jp
adc
jle
add
out
mov
mov
ja
fdivrp
sub
mov
mov
mov
xor
or
shr
jo
dec
and
jns
add
mov
fcom
adc
or
mov
lock
mov
pop
scas
movsl
inc
insb
pop
mov
popa
dec
inc
into
mov
inc
sbb
test
jns
lahf
push
stos
dec
das
push
loop
stc
jae
mov
dec
mov
lods
push
fsubrs
xchg
jmp
sub
add
add
jmp
mov
icebp
outsl
or
notb
scas
int3
cmp
push
lret
dec
push
push
inc
jbe
cmp
imul
mov
inc
test
jecxz
mov
in
into
adc
in
lcall
inc
std
sub
shll
repnz
and
rcr
or
in
or
cld
push
sub
push
mov
icebp
inc
dec
jecxz
inc
scas
and
mov
test
pop
mov
adc
push
lock
scas
pop
add
mov
mov
and
or
xor
movsb
inc
xchg
outsl
orb
outsb
adc
mov
mov
mov
sbb
xchg
mov
xor
mov
loopne
pop
incl
movl
xor
das
mov
xor
fnstcw
push
popa
outsb
pusha
xchg
cli
pushf
jae
or
or
stc
add
int3
inc
rdtsc
sub
push
sti
ja
in
xchg
xchg
idiv
mov
fcomps
mov
push
mov
ficomps
movzbl
jns
lea
gs
push
mov
rol
pop
and
icebp
cmp
and
inc
and
cmp
mov
xchg
pop
orb
add
and
dec
ret
and
out
xor
in
pop
sbb
test
in
out
imul
pop
mov
fstps
pop
xchg
flds
mov
mov
lret
fnstcw
sbb
push
push
cmc
or
int3
cmp
mov
add
aaa
push
xor
outsb
daa
mov
and
dec
arpl
push
fcompl
sbb
mov
adc
lea
sahf
in
sbb
clc
adc
jl
sub
and
repz
xchg
pop
cmpsl
out
push
std
xchg
push
das
push
dec
mov
or
in
jbe
xor
adc
and
jg
mov
std
sub
push
repnz
in
fcomps
mov
into
popa
jmp
or
push
lea
sti
mov
repz
daa
xor
mov
mov
xchg
test
mov
push
push
or
or
shll
sahf
andb
cld
fdivrp
jmp
cmp
mov
loop
and
out
push
xor
xchg
push
jmp
mov
std
or
in
push
and
jle
ljmp
data16
dec
sub
adc
pop
fadds
sub
and
sbb
xchg
jnp
scas
test
ds
jb
sbb
xchg
test
negl
jbe
rorl
xchg
jne
test
adc
push
pop
fs
push
mov
popf
dec
pop
cmpl
into
sbb
in
clc
push
jno
xchg
dec
mov
jbe
or
sbb
cmp
mov
aam
push
mov
xlat
sub
jle
jmp
loopne
xor
pop
gs
cltd
popa
movsb
nop
pop
jg
std
add
adc
imul
jp
or
test
xor
dec
add
mov
adcb
push
pop
mov
cld
mov
mov
sub
push
mov
dec
mov
add
push
stos
mov
in
jns
iret
daa
ss
cli
out
cmp
ret
jmp
pushf
jno
nop
fnsave
xchg
pop
inc
cmp
push
mov
mov
push
std
jg
imul
add
or
mov
std
fsubrl
sbb
push
cmpl
pop
aaa
jb
test
jge
xor
mull
sub
mov
or
lahf
les
aam
and
lcall
lcall
mov
dec
mov
mov
int3
outsb
add
cmpsb
fstl
push
leave
leave
test
fcompl
enter
pop
lcall
aam
cmp
mov
add
in
int
and
call
push
push
lea
fcomps
and
mov
jnp
push
xchg
sahf
icebp
jnp
bound
sbb
shll
lret
imul
pop
add
bnd
mov
sub
jp
xchg
iret
jle
out
pop
test
jae
dec
ret
xchg
jnp
jg
add
xchg
mov
push
or
mov
bnd
insb
in
lods
int3
stos
adc
scas
cmp
call
push
xor
test
frstor
fidivs
or
push
int
data16
add
std
sub
jmp
xor
cmp
clc
into
push
in
pop
cltd
dec
sub
cmp
imul
adc
pop
psubsb
and
cwtl
fiaddl
mov
dec
in
dec
popf
insl
or
inc
mov
pop
mov
mov
sub
ds
sub
xchg
and
scas
add
je
xor
jecxz
enter
imul
insb
pop
mov
mov
xor
pop
sub
xor
in
and
xchg
jnp
in
sbb
push
mov
addr16
dec
or
sbb
lock
je
aas
orl
lods
mov
test
and
cltd
mov
arpl
lahf
pop
fdiv
sub
cmpsb
add
fcomps
add
add
mov
mov
not
loopne
or
cmc
bound
push
movsb
aas
fsubp
sbb
adc
daa
cli
jge
fnstcw
fldpi
pop
fmul
push
dec
cmpsl
inc
ss
in
pushf
sub
add
clc
sub
testl
push
rcrb
and
test
or
mov
sub
dec
mov
les
xchg
repnz
sbb
or
xchg
ret
xchg
push
mov
in
dec
adc
loop
mov
push
imul
pop
mov
movsb
out
jnp
mov
pop
push
test
fs
cld
sub
xchg
sahf
xor
push
add
insl
mov
imul
fldcw
lret
or
lcall
addr16
les
xchg
push
dec
and
pop
mov
pushl
mov
pushf
mov
fistl
rorl
ret
lret
test
aas
or
mov
jne
pop
or
cltd
mov
adc
inc
mov
add
frstor
mov
inc
cmp
jno
stc
movsb
sub
in
pop
hlt
inc
shl
jl
adc
cld
fistps
shrl
lods
loopne
mov
adc
adc
pop
jb
mov
enter
pop
jle
data16
mov
or
or
jno
push
xchg
clc
aas
adcb
mov
rorb
mulb
loope
fidivrl
and
lret
inc
sub
and
lods
mov
aaa
mov
pusha
in
mov
dec
int
das
hlt
push
dec
dec
cld
mov
sarb
iret
push
fldenv
testl
clc
leave
adc
sti
loope
and
pop
loop
jp
out
push
repz
scas
xchg
ss
lret
test
jle
mov
jle
cltd
and
iret
or
add
test
mov
sbb
test
int
scas
popf
pop
xchg
fcmovnbe
inc
mov
and
cmpsb
pusha
mov
mov
daa
pop
sbb
lock
xor
stc
popa
jno
fdivs
push
jmp
mov
mov
mov
aam
cmp
cmc
and
mov
or
mov
pop
inc
gs
add
jno
bound
cmp
or
xor
nop
inc
rolb
jge
mov
jle
xchg
jmp
jmp
add
add
add
lcall
pop
adc
popf
pusha
jecxz
filds
cli
mov
mov
xchg
idivl
push
lds
insb
ljmp
pusha
lret
xchg
jns
mov
imul
xchg
xchg
out
jo
xchg
xchg
jae
scas
std
fldenv
dec
xchg
cli
xchg
pop
loope
popf
test
outsl
jecxz
js
les
aas
mov
cmc
stc
fiaddl
mov
jbe
cmpsl
add
pop
repz
in
pop
into
pop
popa
xor
movsl
mov
into
mov
lods
cwtl
mov
insb
std
mov
in
stos
xchg
in
push
inc
shl
sbb
xor
pop
inc
sbb
rolb
test
xor
mov
cmp
mov
push
les
xor
or
adc
insb
jmp
js
add
imull
mov
inc
imul
sarl
fidivrl
jg
jle
ja
insb
ja
adc
in
mov
mov
sarl
mov
fidivrl
pop
xor
sti
or
cwtl
push
ss
in
dec
push
outsb
dec
mov
pop
nop
mov
pusha
test
in
icebp
jnp
and
fs
cmp
test
lods
dec
hlt
push
dec
test
and
sbb
lock
adc
jnp
stc
and
out
fwait
jmp
jb
je
pop
sar
fstp
stos
lods
mov
jp
mov
incb
jb
int3
and
fwait
xchg
adc
pop
pop
sbbb
out
pop
test
mov
cmp
pop
ja
pop
cmpsl
adcb
out
push
push
push
add
in
popf
sbbl
sub
or
pop
rcll
pop
cltd
aad
cmpsl
std
lods
cmp
pushf
sbb
inc
daa
movsb
mov
dec
je
lea
mov
pushf
ljmp
fmuls
out
inc
add
and
jg
push
push
add
push
ja
pop
sarb
aad
add
pop
jb
lock
jp
jbe
sub
es
stos
int3
out
push
std
xor
xor
sub
push
mov
push
popa
mov
jle
xchg
aam
lods
mov
gs
mov
int3
mov
lods
mov
adc
jbe
out
push
mov
enter
int3
cmpsl
inc
mov
fadd
jecxz
addr16
cmp
in
pushf
xchg
jge
aad
mov
scas
int3
rcll
jl
or
cmpsb
ss
mov
aaa
gs
adc
test
loope
adc
orb
sub
stc
movsl
xchg
stc
pushf
xchg
rorl
xor
inc
add
inc
pusha
push
sti
add
fdiv
xchg
call
popf
add
shll
mov
fdivs
fwait
jno
jmp
pop
sbb
jl
pop
ror
jg
sti
stos
xchg
xchg
mov
pop
stos
push
push
push
lods
lods
repz
inc
cmp
sbbl
aam
fadd
mov
jae
mov
mov
sbb
lcall
aad
pop
xor
mov
sub
and
pop
stos
dec
dec
jp
jge
imul
push
cmp
stos
idivl
mov
push
test
inc
pop
cmp
xlat
add
dec
pop
ljmp
loop
pop
imul
push
cmc
cmp
and
xor
xor
mov
popa
pop
repnz
jg
cld
and
in
sbb
jno
fs
mov
adc
jmp
test
mov
call
push
jle
in
fs
mov
or
and
and
xor
push
jns
mov
cmpsb
outsb
nop
push
dec
out
dec
js,pt
pop
outsl
sub
xor
movsb
repz
out
lret
add
inc
ds
add
shlb
sub
cmp
mov
mov
sbb
out
xchg
or
sbb
and
and
in
movsb
inc
pop
pop
mov
int3
shll
cld
sbbb
inc
jp
mov
sbb
fmuls
push
shl
mov
pop
loope
mov
fmul
sbb
jmp
ret
sbb
mov
test
shlb
and
push
sahf
test
fwait
dec
jnp
xchg
xor
out
cmp
incb
leave
outsb
sbb
movsl
pop
sbb
or
inc
outsl
icebp
cltd
mov
and
mov
icebp
dec
jnp
push
sub
jl
lock
sub
lahf
enter
sbb
lahf
aam
fs
mov
add
mov
fidivs
xor
lcallw
jmp
lahf
mov
aaa
dec
mov
xchg
and
fimuls
adc
push
add
pop
xor
mov
fstpt
loop
imul
jmp
aas
iret
sub
push
mov
out
sub
xor
insl
scas
test
test
mov
push
inc
mov
out
mov
lahf
fs
lock
lock
int3
mov
aaa
push
addb
fwait
adc
js
add
icebp
sbb
cwtl
mov
adc
or
pop
add
push
cmp
mov
inc
mov
les
mov
rorb
lods
push
add
push
or
in
or
popf
cmp
shl
pusha
cmp
lret
test
pop
mov
sbb
mov
stos
cwtl
add
inc
or
pop
rorb
inc
ret
fs
mov
inc
int3
cmp
lods
mov
mov
xor
xlat
test
movsl
cmp
lcall
xlat
cmc
fwait
sub
in
inc
dec
cmc
insl
mov
testb
inc
push
sbb
push
lret
shrl
dec
arpl
loopne
dec
xchg
lret
fmuls
leave
outsl
fnstenv
decb
imul
loope
sub
nop
je
call
pop
inc
lahf
movsb
into
addr16
adc
js
jne
dec
in
movsb
xlat
jl
out
inc
cmpsb
out
lock
mov
out
jnp
inc
aam
sbb
add
mov
idivb
scas
mov
out
iret
cltd
lcall
in
cmp
lret
addr16
stos
sbb
in
mov
das
stc
pushf
pushf
lret
jno
jecxz
cmpb
push
add
inc
je
sub
dec
xor
ret
pop
pop
jbe
sbb
pop
ret
cmp
dec
shlb
cmp
xchg
and
loop
or
adc
aaa
adc
loopne
sub
jne
xor
lfs
adcl
xor
mov
mov
ret
fsubs
int
push
into
sbb
pop
or
test
push
loopne
and
nop
fstps
jnp
lcall
dec
lret
cld
icebp
pop
in
jb
jmp
and
sahf
or
add
popa
mov
lret
aam
add
in
push
jnp
and
cmpsb
icebp
sub
xchg
call
sbb
push
out
cmp
cltd
bnd
out
std
xchg
lods
xchg
adc
int
outsb
lcall
mov
dec
xchg
loopne
cs
mov
aad
mov
pop
lret
xchg
inc
lahf
outsb
xor
scas
js
sub
imul
pushf
pop
cli
loop
xor
and
loope
push
pop
push
dec
and
mov
mov
mov
sti
mov
in
outsl
hlt
je
gs
ljmp
popa
inc
das
popf
lea
shll
ret
jecxz
mov
or
scas
stos
mov
jnp
out
push
mov
and
dec
or
sbb
mov
aad
loopne
negl
pop
pop
repz
push
mov
pop
popl
jb
inc
mov
adc
jmp
arpl
xchg
and
andb
inc
xchg
rcll
rorl
mov
scas
in
add
lds
jno
cld
pop
leave
pushf
adc
pop
lods
inc
mov
nop
into
pop
pusha
iret
adc
mov
out
je
loope
fldcw
cmc
push
jbe
adc
lods
and
stos
push
pop
or
push
sub
shrb
ljmp
rorl
mov
sbb
mov
mov
cmovb
aad
cmp
hlt
sub
in
lret
scas
pusha
push
jge
dec
adc
repz
push
push
jbe
lods
clc
jp
mov
lock
mov
cmp
adc
ljmp
dec
in
sbb
add
stc
cmp
jae
imul
mov
push
mov
lock
push
out
or
sub
mov
xor
xor
repnz
add
test
fwait
sub
sbb
adc
cmp
bound
push
mov
ret
cmp
call
je
mov
mov
cmp
xchg
cltd
sub
xorl
adc
or
xchg
gs
arpl
xor
mov
lahf
cmp
jns
cld
lea
inc
divps
pushf
pop
xchg
jl
dec
xor
jns
outsl
test
push
pop
faddl
in
and
pop
in
bound
lcall
xchg
fs
push
pop
test
or
arpl
or
movsb
sbb
test
enter
rclb
xor
bnd
sbb
pushf
jns
and
cmp
mov
rolb
inc
cmp
add
stos
mov
push
gs
lds
fisttpl
or
cli
int
xchg
dec
mov
xchg
in
mov
mov
sbb
aad
test
pop
xchg
inc
cmp
jp
repz
mov
fs
lock
shlb
mov
sbb
or
push
scas
cmp
mov
push
xchg
jle
dec
das
sbb
adc
lcall
mov
add
mov
sbb
iret
push
repz
push
mov
std
or
adc
ljmp
bound
lahf
std
sub
out
stc
in
cmp
into
int3
lcall
push
nop
js
lea
inc
and
icebp
adc
stc
jle
sbb
mov
pop
inc
pavgw
mov
add
jp
es
je
cmp
das
testl
mov
and
adc
movb
and
pop
js
flds
mov
daa
add
popf
shr
xor
scas
pushf
xlat
dec
test
mov
cmc
xor
dec
jmp
push
or
push
jmp
ds
outsl
imul
in
cmp
cld
test
jb
sub
pop
inc
imul
fiaddl
insb
jb
or
add
inc
stos
jp
jmp
push
inc
imul
mov
cmp
push
fidivrl
xor
insl
shll
orl
test
pop
pop
pop
add
adc
dec
cmp
add
adc
inc
push
stc
lods
shll
fsubrl
add
xchg
or
push
shll
lock
or
or
xchg
sub
jg
xchg
pop
xlat
mov
fstp
mov
decb
mov
ret
stos
in
cmpsb
stos
sbb
je
or
sahf
test
loop
cmpsl
fisubrl
icebp
mov
rcll
sub
jno
jae
mov
dec
cmpsl
ficoms
pop
dec
adc
mov
rolb
mov
mov
das
adc
push
mov
rorl
push
pop
mov
insl
jp
fmuls
ss
and
into
inc
int
iret
into
mov
into
cwtl
popf
insl
repnz
ret
push
out
cmpsb
aam
rorb
mov
sbb
mov
push
rcrl
out
adc
jno
cmp
int
addl
adc
cmc
roll
adc
int
xchg
or
aaa
loop
cmc
mov
daa
mov
xchg
mov
inc
cmp
out
lcall
dec
adc
and
repz
xchg
xchg
stos
loop
adc
test
push
and
into
in
pop
repz
fists
cmpl
enter
cmp
and
xor
xor
sbb
in
mov
inc
sti
sub
mov
fld
and
or
lahf
inc
scas
je
pop
pop
in
sbb
lret
jle
xor
dec
fdivr
mov
jbe
movsl
push
bound
push
xchg
sarb
push
pop
push
js
sub
sarb
sub
ret
add
ds
pop
enter
pop
jp
sbb
out
lock
sbbl
or
fnsave
mov
imul
int3
imul
sbb
cmpsl
and
push
int3
mov
mov
rorl
add
xchg
ret
xor
cmp
clc
jns
jnp
and
aas
sbb
ljmp
add
out
mov
adc
lods
or
inc
mov
sub
jo
fldl
adc
adc
or
xchg
add
test
nop
lds
scas
cmp
mov
sub
jg
in
insb
adc
jl
xchg
fsubrs
or
jb
in
jno
pop
xor
pop
popf
mulb
pop
test
in
xchg
ret
push
and
inc
into
loop
movsb
push
lds
jl
xor
test
testb
cmp
in
lcall
or
mov
dec
out
fidivrl
mov
inc
inc
bnd
and
das
cmpsb
xor
mov
mov
packssdw
test
mov
add
mov
clc
mov
enter
add
dec
lret
sbb
test
roll
inc
mov
adc
cwtl
ret
jge
push
adc
std
inc
xor
cmc
xchg
les
push
nop
jp
push
sbb
push
repz
adc
clc
pop
xchg
mov
xchg
test
lcall
scas
mov
push
adc
xor
pushf
dec
cltd
or
mov
inc
xor
dec
cmpsl
flds
mov
nop
dec
outsb
push
shll
std
or
inc
dec
xor
inc
test
into
testb
pop
sahf
sbb
mov
lret
lods
xchg
cmp
cmp
push
add
pop
nop
lcall
cmp
push
dec
push
xor
loopne
xchg
stos
out
mov
dec
mov
mov
dec
jb
dec
add
and
xchg
nop
test
push
add
xchg
inc
sti
sbb
pop
xchg
xchg
dec
addr16
pop
pop
fistl
pushf
in
outsb
jnp
pusha
cwtl
loope
cmp
push
push
sub
ret
or
xor
lds
das
std
pop
dec
jl
ficomps
int3
pushf
in
mov
add
inc
pusha
iret
xor
cltd
xor
scas
loopne
es
pop
jecxz
jae
add
ss
ret
gs
xchg
or
out
xchg
sub
incb
inc
cmp
and
cltd
jne
loope
fstps
or
xchg
aad
and
das
shrb
lret
rorl
cld
cwtl
push
stc
xlat
pusha
inc
pop
ds
aaa
inc
xchg
mov
jge
push
cmpsl
cwtl
jp
daa
into
enter
lret
ja
mov
enter
cmpsl
test
hlt
filds
mov
rclb
test
and
iret
mov
lock
push
dec
lods
scas
xor
testb
fisttpll
aas
cld
push
ss
mov
xor
adc
out
out
fldcw
mov
pop
aas
int
sub
jg
add
mov
mov
mov
adc
stc
mov
roll
scas
mov
lret
mov
shl
scas
aaa
pop
dec
push
inc
or
test
add
imul
repz
rclb
mov
in
fmuls
pop
das
mov
inc
xchg
or
pushf
ffreep
sbb
repz
repnz
xor
sbb
add
inc
mov
jmp
andb
push
out
pusha
out
lret
push
xchg
aad
mov
sahf
jbe
pushf
jg
mov
ret
mov
sbb
mov
pop
xor
sub
imul
pop
lods
rclb
adc
xchg
xorb
cld
mov
call
popa
jae
js
cmp
xchg
mov
inc
shrl
imul
int3
xchg
mov
sbbb
pop
mov
mov
cmp
out
inc
pop
pop
sub
divb
add
or
push
mov
push
hlt
into
jl
out
dec
sub
cmp
xchg
inc
jmp
add
sti
push
or
insl
lea
aas
jnp
mov
fnsave
jae
pop
lret
sbb
icebp
addr16
jo
cmp
mov
hlt
inc
fisubs
in
movl
cmpsl
jbe
jle
sub
adc
fistps
lret
negb
adc
adc
loope
mov
mov
test
rcl
div
movsl
lock
int3
int
push
cmp
repnz
xchg
cmc
or
test
jecxz
cwtl
add
mulb
jp
ja
or
divb
adc
inc
enter
call
pusha
push
rclb
fldl
mov
sbb
lret
or
xlat
lods
mov
xor
mov
jne
mov
fsts
aam
dec
sbb
addr16
sbb
pop
mov
xchg
mov
lods
cmp
pop
ja
inc
mov
in
repnz
std
mov
in
std
das
test
mov
loopne
cmp
add
mov
mov
adc
push
movsl
je
pop
sub
mov
cmpb
push
cmp
sub
mov
dec
mov
xorb
mov
or
push
stos
aam
cwtl
inc
test
rclb
pushf
cmpsb
fcmovne
jp
dec
test
cmp
addr16
ss
jle
mov
or
xchg
push
ret
mov
cmpsl
adc
jecxz
mov
shl
push
or
xchg
sub
jbe
jmp
hlt
icebp
cmp
gs
in
jnp
std
outsb
mov
inc
sbb
pop
test
call
pusha
xor
lock
or
jl
xchg
sub
sub
lea
cmp
test
add
rcrb
call
adc
shrl
getsec
push
lret
jge
les
adc
cmp
cmp
mov
inc
add
ds
cmp
push
jo
xchg
lcall
sbb
sbb
cmp
xchg
ret
dec
inc
adcl
xchg
mov
push
sbb
pop
mov
popa
lret
mov
js
jno
jecxz
outsb
int
out
fildl
add
jg
jne
sahf
cmpsl
cmp
xchg
push
bound
and
test
insl
mov
out
fld
push
xchg
cmpsb
cld
jmp
mov
repz
pop
add
push
lret
sbb
clc
sbb
sub
ret
lret
out
sub
sbb
cmp
fisubs
and
mov
cmp
sub
out
add
popf
fwait
sbb
push
test
xlat
call
adc
dec
jns
in
shr
lods
sbb
pop
inc
mov
aam
cmovge
sti
aad
push
cwtl
mov
xor
push
call
mov
into
mov
hlt
or
insl
mov
faddl
jmp
and
mov
sbb
call
enter
cmp
test
mov
in
fsubl
pop
aas
mov
xchg
loope
loopne
inc
mov
dec
stos
xor
lea
lcall
sbb
sub
outsb
notl
inc
test
ret
fsub
icebp
dec
pop
cwtl
std
mov
sbb
andb
pop
fwait
or
adc
divl
adc
mov
stos
out
inc
push
cmp
nop
test
stos
inc
hlt
scas
roll
lahf
adc
lcall
and
pop
inc
mov
int
ja
sbb
add
xor
mov
inc
pop
adc
sub
mov
adc
sub
cmp
sbb
xchg
data16
xor
ficoms
cmp
out
in
mov
sub
popf
cmp
cli
loopne
ljmp
test
dec
pushf
loop
and
inc
pop
push
lea
arpl
pop
cs
dec
test
jmp
mov
mov
cwtl
scas
adc
xchg
mov
xchg
mov
movsl
or
adc
fcomps
ljmp
add
mov
adc
or
in
and
add
mov
and
les
xchg
adc
xchg
icebp
roll
or
out
ss
add
pop
xacquire
stos
or
cwtl
mov
bound
loope
push
clc
jecxz
rorb
push
aaa
adc
mov
and
pushw
bound
je
es
inc
lock
rcr
add
test
sub
xchg
insb
push
pop
jp
jmp
jl
fnstsw
add
arpl
and
jg
adc
ljmp
out
das
and
incb
sub
stc
inc
dec
insb
out
sbb
adc
mov
jno
adc
mov
inc
les
sub
ret
mov
pop
mov
pop
cmp
fisttpl
xchg
jbe
cld
or
adc
or
inc
in
sbb
int
pop
xchg
nop
push
adc
imul
push
push
adcb
jb
adc
adc
rorb
popf
mov
xchg
lods
cmp
sub
popf
sub
and
xor
jecxz
sbb
sbb
sbb
adc
mov
je
cli
fs
adc
or
int3
popf
sbb
pop
fsubrl
push
adc
movsl
xchg
sbb
jo
mov
fwait
cwtl
and
jae
ret
xchg
jo
sahf
repz
out
in
stc
out
iret
loope
xchg
push
mov
rcrb
sbb
mov
adc
scas
ret
jnp
inc
pop
pop
mov
xchg
sub
std
fs
scas
fs
iret
mov
mov
bound
shlb
into
lea
jne
pop
jmp
outsb
je
jb
mov
les
sbb
mov
or
int
pop
adc
cmp
fs
sbb
mov
sbb
pop
jle
jecxz
sub
scas
cmpsl
xchg
clc
push
ret
adc
dec
dec
loope
jecxz
xlat
jle
les
lods
lret
push
test
or
inc
ret
sub
sti
xchg
and
mov
mov
sbb
dec
es
popa
pop
or
shrb
mov
mov
ja
dec
adc
jb
and
shlb
test
cmp
sub
out
lods
outsb
push
push
jb
test
push
pop
call
pop
cmp
imul
scas
cmp
aam
sahf
iret
or
fsubr
rcrl
daa
adc
stc
cmp
fsubl
dec
scas
mov
mov
xchg
shrl
cmp
add
dec
decl
mov
mov
lock
sahf
cld
pop
cvttps2pi
sbb
sbb
add
fidivl
push
mov
xor
pop
jnp
ss
int
cmc
cmp
or
movsb
pop
push
inc
cmp
in
daa
cmp
das
enter
sub
dec
cmpsl
lret
dec
cmp
out
incl
ret
decl
aam
lahf
int
pop
pop
ds
test
mov
xor
arpl
test
mov
mov
jo
enter
and
sbb
jnp
xchg
add
xchg
inc
iret
and
pop
scas
sbb
fst
fnstsw
and
cmpsb
jmp
out
scas
and
push
pop
push
jns
inc
dec
dec
cld
bound
mov
icebp
rcll
int3
push
roll
sub
notl
cwtl
shrb
insb
jg
test
mov
fdivs
mov
push
loop,pt
shr
sub
call
cwtl
cmp
sbb
ds
jl
xchg
andb
fwait
es
mov
test
fsubs
jo
mov
mov
fstl
lahf
lock
mov
outsl
into
add
test
mov
imul
bound
jb
push
xchg
adc
sti
cmp
aaa
jno
or
push
mov
out
addr16
in
out
sahf
fistps
pusha
test
cmp
jle
inc
pop
sbb
imul
cmp
ficoms
cmp
cmpsb
and
sbb
pop
push
icebp
add
outsl
and
add
add
out
imul
inc
fdivs
dec
bound
push
push
nop
cmp
and
inc
popf
xorl
fstpt
cmpsb
test
cmp
es
shll
mov
xchg
xchg
jmp
pop
cwtl
pop
hlt
mov
dec
push
icebp
lret
outsl
arpl
pushf
xlat
divl
mov
leave
jbe
lock
sub
dec
or
sahf
or
fcompl
sub
add
push
nop
sahf
aas
mov
in
shrb
mov
pop
ss
ret
inc
cmp
push
clc
mov
cli
adc
sti
jno
or
into
scas
lock
in
aad
outsl
mov
inc
insl
sub
fldcw
or
and
inc
inc
mov
rcll
and
inc
xor
mov
xlat
jbe
icebp
pop
pusha
or
cmp
dec
repz
mov
lods
mov
ret
fistl
jb
dec
push
repz
xchg
xchg
movsb
call
loope
jns
and
xlat
pushf
or
pop
les
pop
repz
nop
sbb
mov
pop
lods
sbb
inc
js
adc
jo
cmp
fdivr
pop
sub
leave
out
lock
scas
loopne
pop
fnstcw
lcall
add
dec
adc
sub
xor
jmp
cmp
jo
xor
in
pop
psllw
push
fdivl
xchg
out
add
nop/reserved
add
push
jb
aas
mov
ret
in
jns
push
adc
or
push
fisubs
dec
fisttps
jnp
adc
jae
jecxz
jmp
movsl
sub
cltd
dec
push
inc
ret
aaa
xor
mov
in
repz
clc
push
adc
xchg
dec
int
adc
lea
adc
and
std
ljmp
pop
mov
insl
and
out
lods
mov
mov
lea
cli
jmp
das
scas
adc
cltd
xlat
mov
mov
mov
push
sub
mov
sbbl
xor
mov
cltd
add
rolw
dec
aaa
push
or
insl
pusha
out
arpl
insb
lret
fwait
push
adc
adc
fisttpll
pop
lds
dec
pop
test
scas
xchg
insb
pop
out
jge
xchg
jns
mov
iret
dec
jb
mov
inc
mov
jne
mov
stos
outsl
mov
fistpl
das
inc
insb
rorb
mov
mov
mov
adc
xchg
jmp
stc
xor
inc
lods
pop
in
pusha
pop
xlat
daa
std
out
mov
inc
lahf
inc
jns
jnp
imul
in
repnz
xor
lods
loopne
hlt
xor
hlt
push
orl
dec
and
xlat
adc
mov
fucomi
repz
sub
pop
xchg
in
lea
xor
push
dec
or
outsl
xrelease
push
in
mov
add
ja
push
cmpsb
add
mov
lahf
mov
xchg
pop
push
lcall
push
xchg
cmpsb
dec
xor
enter
pop
push
mov
data16
push
stos
out
gs
std
inc
fwait
in
mov
leave
add
jne
test
shl
mov
adc
fldenv
xchg
adc
loope
cli
push
test
sbb
jae
in
clc
test
outsl
shrl
data16
pop
mov
mov
mov
add
xchg
mov
mov
sbb
jle
repz
ljmp
sub
popf
ljmp
sarb
repz
ljmp
pop
or
movsb
addr16
xor
mov
jne
in
fdivr
sbb
mov
adc
sub
or
pop
sarb
xchg
add
icebp
adc
jbe
ret
addr16
lahf
adc
or
xor
loop
ret
call
sbb
lret
pusha
js
rcrl
ffree
scas
lahf
adc
jns
mov
push
adc
repz
enter
sbb
mov
jbe
adc
cltd
push
mov
mov
lcall
pop
int3
lret
stos
jae
cmc
insb
adc
leave
mov
daa
sarl
rol
cli
stos
xor
or
push
add
mov
xor
pop
mov
push
stc
js
mov
push
popf
rcrb
lret
push
xchg
ds
pusha
mul
movsl
inc
repnz
test
lea
lahf
dec
out
aad
fisubrl
mov
lock
fiaddl
loope
xor
scas
sbb
jle
test
inc
and
hlt
inc
cli
in
stos
adc
add
jg
outsb
inc
jmp
xor
in
popa
xchg
aas
mov
int
icebp
cltd
jl
and
iret
mov
adc
sbb
in
test
push
pusha
loop
and
ss
mov
pop
sbb
cltd
mov
xor
idiv
xchg
cli
out
jge
or
test
outsb
mov
mov
cmp
adc
jge
stos
push
test
mov
pop
iret
stos
neg
aad
hlt
insb
pushl
enter
addr16
dec
mov
ds
pop
jl
dec
push
cli
lds
cmp
push
in
cmp
lods
fidivs
push
in
bound
pop
and
xchg
ds
es
add
ficompl
test
mov
and
sbb
scas
mov
faddl
pushf
das
sub
mov
xchg
xchg
repz
aaa
sub
cwtl
popa
inc
add
clc
mov
fcomip
ljmp
shlb
adc
fimull
lret
jge
cli
cmpsb
dec
or
aas
or
adc
sbb
inc
sahf
mov
movsl
int3
mov
push
loope
mov
push
int
scas
into
movsb
cmp
sub
jmp
loope
dec
or
mov
lods
inc
inc
sub
add
xchg
xchg
out
out
lcall
jge
dec
ja
mov
clc
decl
add
mov
in
repz
sti
pushf
hlt
sbb
nop
insb
arpl
mov
xchg
mov
pop
lcall
es
jae
pop
xchg
rorl
jge
xor
or
movsl
xchg
stc
pop
mov
jno
xor
fdivl
loopne
pop
popf
sub
push
pmullw
pusha
sti
adc
pop
pop
xor
pop
pop
sbb
std
sub
jb
idiv
sbb
push
push
adc
pop
into
cmc
in
mov
stos
add
mov
scas
in
sub
int3
hlt
jecxz
aad
mov
xchg
inc
in
mov
mov
pushf
mov
