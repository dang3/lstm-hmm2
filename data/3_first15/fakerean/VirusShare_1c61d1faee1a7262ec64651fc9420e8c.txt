add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
clc
or
lea
je
call
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
addb
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
daa
repz
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
inc
push
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
jecxz
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
int
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
rorl
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
clc
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
adc
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
or
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
es
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
std
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
adc
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
push
call
mov
add
loope
add
loopne
mov
jb
mov
in
mov
jae
add
add
lret
mov
add
iret
les
mov
push
jne
mov
add
add
add
out
add
outsl
jle
test
pop
jl
data16
mov
fadds
add
add
inc
jnp
mov
add
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jbe
add
rcll
add
mov
movsl
add
fwait
lahf
ja
add
in
mov
js
bound
add
popa
mov
add
clc
sahf
rolb
loopne
push
roll
add
int3
lea
pop
popl
push
push
push
push
push
lea
push
push
push
push
call
mov
push
add
add
sub
add
add
popa
pop
mov
fidivs
add
pop
lock
mov
xchg
add
add
add
ja
imul
jp
cmpsb
mov
fsubp
xchg
incb
pop
mov
xchg
cwtl
test
stc
add
mov
scas
add
lret
scas
fwait
iret
mov
test
lods
add
add
negl
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
vpunpcklbw
xlat
add
iret
add
enter
add
pushf
enter
add
mov
icebp
add
andb
std
push
push
mov
cwtl
negl
outsl
jle
add
cmpsl
add
hlt
mov
aam
bound
push
push
push
push
push
push
call
shl
movsb
out
add
add
add
jmp
fiaddl
into
mov
add
jno
add
faddl
mov
sub
add
add
cld
lea
pop
call
push
push
call
pop
bound
movsb
add
add
outsl
pop
add
bound
mov
jae
les
lods
add
cmpsl
jl
jno
add
add
test
add
add
stos
repnz
testl
add
add
mov
lea
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
add
xlat
mov
cltd
aam
add
ret
mov
les
std
add
jecxz
rolb
stos
add
fs
testl
sbb
push
push
push
lea
push
push
push
push
call
addb
pop
pop
add
xchg
add
testb
scas
add
add
fndisi(8087
out
mov
xchg
add
fiaddl
imul
add
add
mov
pop
mov
scas
icebp
mov
mov
add
rorl
aam
add
pop
call
push
lea
push
push
push
push
lea
push
call
add
int3
movsl
add
lea
add
mov
add
jne
add
cld
add
push
mov
add
rclb
push
cmc
jge
pop
add
roll
add
aam
bound
pop
jmp
ret
push
push
lea
push
lea
push
push
push
call
divl
jae
add
sarb
shl
xlat
add
add
mov
gs
add
add
jae
add
mov
xchg
add
popa
nop
add
imul
add
stc
add
add
stos
add
loop
cltd
add
add
mov
lea
pop
mov
push
push
push
push
lea
push
call
jne
fldl
add
bound
add
scas
imul
add
jno
outsl
add
call
mov
add
in
pop
add
lret
add
testl
mov
add
push
ret
int3
add
add
in
push
lret
mov
std
mov
lea
pop
mov
push
push
push
push
call
add
in
add
add
mov
fbstp
add
add
add
std
add
stos
lock
roll
add
jne
mov
addl
push
xorb
add
mov
add
test
add
xchg
pop
mov
add
lods
lahf
add
jle
pop
sar
js
add
mov
mov
add
rcr
add
mov
mov
lea
pop
add
add
push
push
call
xchg
int3
add
pop
add
add
bound
add
add
test
faddl
add
xchg
add
shl
jp
lods
add
add
add
aam
pop
add
aam
add
push
mov
pop
add
add
pop
mov
add
jge
add
add
mov
stos
js
add
aam
les
ret
cmpsl
inc
add
mov
push
push
lea
push
push
push
call
add
data16
hlt
add
aam
pop
icebp
jno
add
lret
add
shlb
jp
add
or
loop
lds
lcall
test
mov
loope
add
outsl
add
fs
repnz
add
mov
lea
pop
xor
push
push
lea
push
call
add
add
jmp
pop
call
jp
outsl
add
lret
mov
popf
enter
test
mov
ficoml
mov
mov
add
mov
add
add
mov
mov
cltd
add
fiadds
add
jl
add
add
loop
pusha
in
add
icebp
add
stc
out
hlt
lea
pop
add
push
push
add
inc
push
and
add
rol
not
shr
sub
xor
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
ffree
add
scas
add
faddl
mov
add
push
add
add
mov
out
pusha
cmpsl
mov
add
mov
add
test
int
cwtl
lds
aad
rolb
ljmp
jne
add
pop
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
add
in
jae
add
lock
cmpb
mov
gs
add
pop
mov
add
test
leave
jae
mov
add
testl
lds
add
in
jle
add
pop
add
hlt
lea
pop
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
fldl
popf
int
popa
fs
add
mov
sti
add
mov
out
xchg
mov
push
out
add
add
lcall
jae
add
fistpll
lods
jle
std
add
add
out
add
add
add
add
add
push
add
fs
negb
lea
pop
mov
movl
push
push
lea
push
lea
push
push
push
push
push
call
mov
stos
loopne
mov
add
add
mov
add
add
rcl
clc
mov
xlat
mov
jne
add
add
lret
notb
add
scas
add
add
xchg
test
repnz
add
roll
mov
lea
pop
lea
push
push
push
call
xchg
lea
jns
add
push
out
stos
push
add
xchg
imull
mov
add
add
add
jns
cmpsb
adc
add
add
push
add
mov
loope
add
add
test
jb
mov
lea
pop
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
sub
add
je
add
add
mov
iret
pop
add
filds
lahf
push
add
pop
shrl
jb
add
test
add
add
mov
mov
fldl
add
jae
loop
jp
push
pop
lods
mov
lea
pop
pushl
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lahf
pop
in
loopne
add
pop
add
in
add
add
mov
roll
jmp
add
add
fcoms
mov
neg
orb
les
add
xchg
add
fisubs
pop
int
mov
lea
pop
pushl
push
push
push
push
push
push
push
call
add
addl
mov
bound
jno
les
out
add
in
pop
test
pop
add
jbe
add
cmc
add
add
lret
movsl
scas
add
mov
fs
add
cmc
fwait
pop
sti
jl
push
xchg
roll
push
lea
pop
call
push
push
lea
push
push
push
push
push
push
push
call
mov
add
loop
test
ret
lods
add
xchg
insb
call
insb
stc
mov
add
add
add
add
gs
add
orl
pushl
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
add
sbbl
add
mov
add
cltd
mov
mov
add
cwtl
add
rolb
fisttpll
pop
shrb
mov
mov
pop
add
add
mov
test
popf
add
add
add
mov
jo
cmpsb
add
movsb
push
mov
lods
mov
lea
pop
call
push
push
sub
lea
xor
push
or
not
add
sub
pop
shr
ror
pop
push
push
lea
push
push
push
lea
push
lea
push
call
add
fiaddl
gs
add
ja
pop
add
icebp
popa
leave
jns
add
ljmp
mov
repnz
stc
push
icebp
out
cmpsl
add
pop
add
add
test
jle
add
rcrb
lret
out
mov
clc
mov
add
add
mov
xchg
push
add
add
fmull
jne
call
push
push
push
push
push
push
push
lea
push
call
adcb
add
add
add
add
in
enter
jmp
add
gs
int
add
rol
push
xchg
into
data16
add
xchg
add
fcoml
mov
lea
pop
push
push
push
push
or
inc
add
sub
shl
xor
sub
sub
sub
shr
pop
shl
add
pop
push
push
push
push
push
push
push
call
add
lcall
add
test
into
xchg
data16
jae
enter
addb
mov
clc
add
add
mov
lea
add
add
add
add
jp
add
lods
test
hlt
add
add
mov
pop
cli
jle
add
pusha
push
add
add
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
jmp
add
jbe
add
out
lret
mov
mov
imul
add
add
fsubp
ljmp
lcall
jno
sub
add
add
test
fldt
push
jne
cmpsb
add
pop
push
call
push
push
call
mov
cmpsl
data16
mov
in
add
aad
icebp
nop
cmp
add
xchg
push
mov
add
push
jmp
stc
add
jmp
push
mov
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
lahf
add
fcmovbe
add
int
shll
std
shrl
push
js
jnp
arpl
mov
add
add
add
add
push
addb
mov
add
add
push
add
test
xchg
add
mov
mov
add
add
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
pop
test
add
add
rolb
add
mov
push
ja
add
lods
ret
xchg
fisubrs
add
add
bound
cmc
add
scas
add
add
push
push
add
fcmove
lret
push
sahf
mov
ljmp
jne
pop
sahf
add
out
add
fisubs
lds
mov
lea
pop
mov
push
push
lea
push
call
xchg
xchg
rcrb
mov
les
add
gs
or
jae
out
push
xorb
xchg
add
jge
add
xchg
jno
lea
lds
add
mov
addb
cltd
nop
jno
jae
cli
lret
add
shr
add
xchg
mov
lea
pop
add
add
push
push
push
push
push
push
push
call
jp
add
repnz
add
add
arpl
hlt
add
add
div
fxtract
jmp
mov
add
jne
add
push
cwtl
data16
ret
add
push
add
sbb
add
push
lea
push
lea
push
push
push
call
in
call
fidivs
pop
add
xchg
test
xchg
lahf
xchg
add
in
add
mov
xchg
mov
add
mov
add
out
insb
sahf
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
call
testb
arpl
add
add
cmc
add
mov
mov
mov
pushf
out
xchg
add
jle
rolb
lods
addb
leave
aad
movsl
add
mov
add
jp
fidivrl
movsl
add
mov
fdivrs
ljmp
lret
outsl
add
mov
out
pop
negb
xchg
add
push
mov
lea
pop
add
push
push
call
mov
xchg
fcoms
xchg
lret
add
ja
xchg
pop
mov
add
pushf
add
jno
add
pushf
add
fdivr
push
lret
add
pop
js
std
add
add
add
lea
out
add
add
add
mov
mov
xchg
in
mov
mov
stos
add
pop
push
mov
push
push
push
lea
push
push
push
push
call
jne
add
add
lcall
repnz
push
add
rolb
push
jmp
add
mov
mov
mov
add
out
add
add
pop
cmpsl
xchg
add
into
stos
outsl
mov
scas
jns
test
add
fwait
in
in
ret
jecxz
push
mov
add
add
jb
hlt
lea
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
cmpb
cli
add
add
add
out
add
add
push
ja
lods
imul
add
loopne
imul
mov
fdivrs
add
je
push
add
mov
add
xchg
pop
add
add
in
add
add
add
add
jle
add
push
add
push
add
add
xlat
arpl
add
mov
lea
pop
add
push
push
lea
push
lea
push
call
jle
add
add
jne
add
jp
testl
add
mov
add
outsl
pop
cmpsl
jl
mov
mov
add
add
pop
add
add
hlt
add
sti
shll
cld
lea
pop
add
push
push
lea
push
push
push
call
add
leave
jae
pusha
lcall
ja
clc
js
add
add
add
xchg
add
mov
jno
cwtl
xchg
mov
lcall
push
add
leave
mov
add
pop
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
call
loopne
push
add
std
add
add
add
add
adcb
lcall
add
add
fidivrl
stos
arpl
into
jae
int3
add
add
add
lea
pop
xor
push
push
push
lea
push
push
push
call
add
mov
out
iret
add
cmpsl
push
add
pop
add
jge
add
call
popf
pop
add
add
cwtl
add
ret
add
leave
jno
hlt
add
mov
add
clc
in
jle
add
cwtl
add
pop
add
push
lea
push
call
mov
ja
out
add
xchg
add
add
add
add
lock
jnp
loope
add
rcll
add
add
out
aad
add
add
rcll
lock
add
insb
add
loope
scas
mov
roll
jnp
sbb
mov
mov
cmpsl
int
les
aad
in
lds
or
mov
xor
push
push
push
call
outsl
add
mov
mov
popf
sti
add
icebp
add
movsb
sar
jne
movl
add
lea
mov
rolb
mov
data16
add
push
scas
add
addr16
xchg
fsubrs
mov
add
testb
test
add
xlat
add
pop
add
lret
stos
add
push
mov
lea
pop
sub
push
lea
push
push
push
call
icebp
mov
ja
icebp
in
outsl
add
xchg
lcall
rcll
cli
xchg
mov
pop
add
mov
add
lret
xchg
pop
jnp
fldl
add
fildl
in
add
mov
add
add
pop
jae
push
mov
leave
xchg
loop
stos
xchg
add
add
icebp
addl
xlat
sti
add
cmc
xchg
jmp
jge
xchg
stc
push
mov
lea
pop
pop
rep
push
push
push
push
push
push
lea
push
push
call
data16
shrb
out
pop
add
cld
mov
out
add
in
lahf
mov
add
cmpsl
push
add
add
je
add
add
add
mov
jmp
int
add
xchg
outsl
into
push
int
aad
out
push
fcoml
mov
add
pusha
mov
pop
cltd
movsb
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
call
add
addl
add
lret
mov
xchg
add
les
mov
fistpll
movsl
cmc
mov
mov
pusha
mov
add
loope
repnz
clc
add
in
xchg
push
mov
add
add
les
les
add
mov
lea
pop
mov
add
push
push
lea
push
call
push
stos
add
add
add
add
lahf
add
add
lret
imul
outsl
add
add
sbbb
add
cmpsl
add
add
stos
fimull
pop
add
push
push
call
add
add
loop
push
mov
jp
xchg
jnp
lods
add
pusha
lds
add
add
pusha
add
je
test
add
add
add
add
mov
call
shrb
add
add
bound
jge
mov
mov
add
imul
lcall
add
pop
add
mov
push
push
push
lea
push
push
push
lea
push
call
fmull
jno
add
int
add
add
add
cli
add
mov
addl
lods
add
jno
add
cmc
add
in
add
in
mov
add
lds
nop
add
mov
jnp
leave
add
shll
les
add
push
lea
push
lea
push
push
call
mov
add
xchg
imul
add
sti
add
pop
lcall
cwtl
add
outsl
add
add
loopne
jno
add
ficoml
add
pop
add
push
push
push
lea
push
lea
push
call
add
addl
mov
mov
aad
shlb
push
add
outsl
add
imul
loope
add
mov
add
add
int3
fldenv
test
add
add
pop
add
push
in
xchg
lahf
out
add
jge
outsl
mov
lea
pop
mov
xor
push
rol
xor
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
testb
ret
rolb
push
mov
add
add
add
stc
repnz
add
addr16
push
lods
add
fs
add
push
add
add
mov
aam
bound
xor
push
lea
push
push
call
pop
add
sarb
push
mov
jl
add
int3
add
addr16
bound
data16
mov
pop
add
aam
mov
push
add
add
add
cmc
aam
jp
lea
push
mov
add
push
pop
add
mov
loope
add
add
add
or
add
push
xor
not
pop
add
push
push
lea
push
call
add
int3
aam
out
add
pusha
add
add
mov
outsl
sahf
add
mov
mov
add
add
cmpsl
movsb
add
imul
add
add
out
les
rcll
push
add
pop
mov
push
push
shr
push
push
pop
add
inc
sub
sub
shr
add
pop
xor
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
mov
cmc
fadds
mov
je
mov
imul
add
add
add
push
fdivrp
pop
add
popf
add
cwtl
push
imul
rcrl
add
popf
mov
mov
lahf
add
cltd
imul
pop
pushl
call
push
push
push
call
mov
mov
loop
add
push
cmpb
add
jae
mov
scas
push
add
loope
in
add
lock
lods
fiaddl
fwait
addr16
lahf
mov
mov
jb
mov
add
movsb
add
push
add
bound
lcall
ficoms
rolb
loopne
pop
add
lds
sahf
loopne
popf
jo
add
add
or
push
push
push
add
push
push
pop
add
shl
sub
sub
add
lea
add
pop
add
pop
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
roll
xchg
push
add
jae
ljmp
movsl
mov
rolb
pop
add
xlat
add
add
popl
mov
add
icebp
out
lea
add
add
sbb
mov
out
mov
mov
mov
mov
fnstsw
mov
push
pop
add
add
repnz
mov
add
push
jp
cmpb
add
pop
into
add
pop
push
push
push
push
push
push
call
jmp
mov
add
fwait
push
jo
test
jbe
jmp
add
leave
std
test
add
mov
fildl
pushf
add
mov
add
jle
add
out
pop
add
mov
insb
xchg
pop
add
add
pop
cmpsb
add
les
ljmp
add
cmc
loop
rolb
xlat
lret
lcall
call
add
add
pop
push
push
push
push
push
push
push
call
jbe
add
hlt
mov
add
xchg
popa
lock
xlat
test
addb
jbe
push
xchg
mov
enter
loope
stc
add
out
add
add
shlb
testb
aad
mov
stos
cmc
pop
in
adcb
js
add
les
rorb
push
push
ror
add
shr
pop
push
mov
push
ror
pop
add
add
push
add
sub
dec
pop
add
push
lea
inc
pop
mov
xor
push
push
push
push
push
call
push
add
jbe
xchg
neg
add
xchg
add
mov
mov
mov
test
loopne
fadds
jne
add
mov
add
mov
scas
add
jl
hlt
lea
pop
add
push
push
push
push
push
lea
push
lea
push
push
call
mov
mov
sahf
xchg
add
out
leave
je
scas
jbe
addl
mov
mov
jmp
rol
add
add
push
add
push
mov
jp
add
add
xchg
shlb
mov
add
jmp
push
addl
add
cmpsb
add
mov
add
stos
xchg
add
pop
push
mov
xor
push
shl
shl
pop
add
pop
push
lea
push
push
push
push
push
push
push
call
add
add
xchg
arpl
add
add
addb
pop
xchg
cli
add
aad
add
pop
jns
mov
add
push
add
add
add
add
add
test
add
cmc
push
add
add
add
add
add
add
cmpsb
cmpsl
out
ja
add
add
mov
lea
pop
mov
push
push
push
push
call
jbe
add
add
add
aam
add
mov
mov
in
cmpsl
fiadds
fiaddl
push
call
call
sbbb
std
aad
add
add
les
aad
pop
add
mov
xchg
cltd
add
add
lret
add
add
pop
xor
push
push
call
lahf
add
flds
add
jmp
cmpsb
hlt
cmc
add
add
mov
testb
jmp
cli
rcl
leave
arpl
add
repnz
mov
add
mov
pop
enter
clc
mov
rorl
add
xlat
add
add
add
add
push
add
test
add
add
mov
icebp
loop
mov
hlt
lea
pop
add
push
add
lea
pop
rep
push
push
lea
push
call
add
test
mov
mov
enter
push
jle
mov
add
cmpsl
add
mov
pop
clc
in
cld
in
push
add
cmpsb
xchg
repnz
add
movl
mov
lea
pop
mov
xor
push
sub
pop
or
je
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
push
xchg
add
scas
add
add
add
scas
mov
add
cmpsb
pusha
xchg
add
addb
scas
add
jb
add
add
add
add
add
subb
xchg
popf
add
jbe
popa
add
add
mov
add
add
add
push
push
lret
in
push
mov
lea
pop
xor
push
lea
push
lea
push
call
add
add
jne
add
bound
xchg
add
out
pushf
add
stc
jle
nop
add
add
arpl
add
pusha
add
hlt
push
add
add
rolb
jmp
add
out
xchg
add
add
xlat
mov
loopne
push
mov
aad
les
les
add
push
push
call
cltd
mov
add
add
add
gs
add
add
mov
movsb
xchg
negb
ja
add
add
stos
add
add
add
jb
add
add
aad
addb
add
int3
pop
mov
lea
pop
mov
xor
push
ror
pop
add
add
push
lea
push
push
push
call
add
pushf
pop
je
out
cmpsl
fnstenv
rolb
add
rcrb
cmpsb
add
add
add
add
add
repnz
movsb
test
lahf
add
add
add
push
add
add
bound
sahf
add
push
mov
add
add
add
jge
fiaddl
xchg
mov
add
flds
xchg
popf
lods
jmp
push
add
pop
push
mov
xor
push
push
lea
push
push
push
push
lea
push
push
call
add
push
add
cli
out
push
pop
mov
arpl
add
add
cwtl
iret
add
add
push
push
add
jp
cltd
sti
add
add
add
push
xchg
add
ja
lds
jb
mov
mov
push
clc
xorb
mov
lea
pop
add
pop
push
add
pop
rep
mov
push
push
push
push
lea
push
push
call
in
mov
add
add
add
add
add
ja
mov
jo
add
icebp
test
fucomp
push
add
mov
add
mov
int3
fs
pop
test
roll
add
cmpsl
test
cwtl
lock
icebp
xchg
add
fiadds
add
mov
mov
lea
pop
xor
push
lea
push
push
push
push
push
lea
push
push
call
hlt
mov
add
pop
add
popf
add
add
jne
xchg
add
fistpl
add
add
add
jp
add
jae
add
enter
add
add
add
add
add
fldl
add
nop
add
ja
ja
in
aam
add
fbstp
and
les
lea
push
push
push
lea
push
push
push
lea
push
push
call
pop
js
add
push
add
mov
nop
ljmp
scas
add
add
imul
fsub
mov
add
add
pop
or
je
mov
push
push
push
push
lea
push
call
add
add
leave
add
mov
add
test
mov
add
add
popa
add
lcall
add
add
call
add
xchg
leave
ret
add
add
int
add
mov
pop
fiadds
stc
add
icebp
xchg
add
add
add
test
xchg
pop
mov
lea
pop
add
add
push
add
rol
pop
rep
push
push
push
call
test
add
stc
add
jns
pop
loopne
xchg
xchg
add
cltd
add
add
jecxz
mov
add
lods
jle
add
popl
add
in
add
in
lods
add
lahf
add
mov
push
mov
lock
fstps
arpl
pop
push
push
sub
not
push
or
not
add
sub
dec
ror
rol
sub
lea
pop
lea
pop
push
push
push
push
push
call
add
repnz
cmpsb
add
mov
add
push
xchg
add
stos
les
push
add
rolb
jnp
iret
lods
add
add
xchg
add
cltd
add
mov
sahf
lea
rolb
stos
jmp
aam
push
sarb
xchg
pop
mov
ljmp
push
nop
mov
mov
lea
pop
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
leave
add
imul
popf
shlb
add
jne
add
add
js
jl
add
lret
cli
pop
lods
jl
jne
add
add
scas
mov
repnz
lods
add
pop
outsl
xchg
add
xchg
lea
pop
mov
mov
push
sub
not
add
not
pop
jmp
push
add
sub
pop
push
push
add
shl
inc
pop
mov
push
shr
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
mov
out
add
xchg
repnz
shll
jae
add
jb
frstor
mov
add
mov
push
add
mov
movsl
pop
add
mov
pusha
test
mov
movb
add
popfw
add
pop
mov
mov
mov
pop
add
addl
jnp
add
roll
pushf
add
jl
mov
add
mov
lea
pop
push
push
inc
sub
pop
push
push
push
push
push
lea
push
push
push
call
xchg
add
test
add
movsb
add
in
movsb
faddl
aam
add
pop
jge
je
sarl
gs
jb
add
mov
fdivs
data16
push
push
ror
pop
push
push
pop
mov
pop
push
push
push
call
pop
add
out
out
incb
jbe
pop
xchg
rcl
icebp
add
lahf
pop
jle
add
jae
stc
jno
lods
out
add
cmpsl
add
mov
xchg
add
add
add
mov
lcall
fisttpll
add
xchg
loop
mov
ret
jnp
into
push
out
mov
add
pop
pop
push
push
push
push
push
call
mov
mov
xchg
pop
add
add
add
add
add
cltd
cmpsl
mov
jecxz
add
repnz
push
jns
mov
add
add
jb
add
mov
pop
add
add
repnz
mov
add
jno
add
mov
aam
bound
pop
push
push
push
lea
push
lea
push
push
call
fldl
aam
insb
enter
test
fmulp
cmc
jo
lret
push
rcrb
add
rolb
add
pushf
scas
out
add
add
cld
mov
add
je
add
add
aam
add
nop
add
push
ja
push
add
mov
lea
pop
pop
leave
push
push
push
push
push
push
push
lea
push
push
call
fstpl
xchg
add
push
lods
jl
icebp
cmpsb
add
add
add
jle
leave
xchg
mov
mov
add
sahf
add
fbld
cld
lea
pop
ret
push
inc
sub
shr
ror
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
add
push
add
add
mov
fildll
mov
fwait
add
std
in
out
lds
iret
add
cltd
add
xchg
add
loopne
les
in
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
jecxz
int
add
mov
push
cwtl
pop
enter
jl
push
js
add
xchg
add
enter
jo
addl
add
lock
loop
add
call
shl
imul
add
pushf
mov
addb
iret
add
imulb
add
add
mov
lea
pop
add
push
push
add
pop
push
push
push
lea
push
push
push
lea
push
push
call
jl
mov
mov
ljmp
pop
add
add
add
test
test
rcr
lds
mov
mov
jb
mov
xor
push
not
les
jno
popl
int
mov
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
fiaddl
xchg
movl
add
loopne
add
fsub
scas
iret
pop
mov
push
add
pop
mulb
out
add
add
add
mov
loopne
stos
fdivl
fsubrp
push
jle
fimuls
add
add
mov
add
xchg
aam
aam
bound
push
push
not
sub
add
ror
pop
movl
addl
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
push
incb
add
add
add
out
pop
add
add
add
add
jae
arpl
movsl
add
push
push
add
arpl
add
xchg
int3
adcb
add
imul
cmpsb
ja
fdivp
mov
push
jmp
add
test
nop
add
fmull
rorb
outsb
add
add
out
pop
mov
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
push
add
push
nop
add
lea
in
jecxz
shlb
cltd
pop
add
add
add
mov
add
mov
add
jb
add
lea
pop
pop
push
push
push
lea
push
lea
push
push
call
jno
nop
mov
lret
lret
loope
add
pop
mov
iret
mov
clc
add
divl
add
add
lock
add
mov
pop
stos
add
push
add
int
mov
jb
add
push
cmpsb
add
add
lret
ljmp
repnz
add
lock
add
sbb
pop
push
shr
pop
pop
leave
push
sub
pop
ret
push
push
lea
push
push
push
push
push
call
data16
jb
add
add
ja
les
xchg
add
cld
test
add
xlat
fildll
mov
stos
jo
lods
mov
arpl
add
lods
pop
shr
mov
mov
lea
pop
push
push
inc
pop
mov
push
shl
xor
rol
shl
pop
add
push
push
sub
add
shr
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
shlb
jae
mov
fs
add
fdivs
sahf
add
test
gs
cli
add
xchg
mov
call
add
ja
into
loopne
iret
push
mov
cwtl
mov
mov
lea
pop
push
push
rol
add
pop
push
testl
push
shl
shr
pop
addl
push
push
lea
pop
call
mov
push
push
lea
push
push
push
push
call
shl
pop
faddl
sahf
rol
add
add
add
lcall
push
push
add
mov
add
insb
add
xchg
lret
add
push
jmp
data16
add
add
mov
add
pop
pushl
push
push
push
push
push
push
push
lea
push
call
movsb
aam
add
add
roll
pop
lea
stc
pop
sti
push
add
add
add
push
add
in
clc
mov
les
add
xchg
add
cwtl
test
add
add
jne
push
imul
loop
stc
mov
mov
mov
flds
out
add
cli
mov
add
xchg
mov
test
cmpsl
loop
pop
push
push
add
shr
dec
pop
call
push
xor
pop
cmpl
jne
pop
push
pop
pop
pop
push
shr
sub
sub
sub
pop
pop
push
rol
pop
leave
push
push
push
call
gs
add
add
mov
icebp
push
clc
scas
pop
add
loop
gs
mov
add
add
mov
iret
push
add
add
add
enter
lock
add
add
mov
lea
pop
ret
push
lea
not
shr
pop
push
push
lea
push
push
lea
push
call
pop
add
lock
add
add
add
movsl
jmp
loop
jno
shl
js
pop
loopne
je
add
ljmp
test
add
cmpsl
insb
les
data16
mov
add
lods
push
div
add
in
mov
incb
nop
into
pusha
lea
imul
mov
add
push
pop
push
push
lea
push
push
push
push
push
push
call
sarb
add
hlt
cmpsl
popa
fmul
add
aad
stos
add
fbstp
add
pop
int
outsl
add
add
jmp
mov
add
add
xchg
iret
jo
shr
add
xchg
roll
add
test
enter
add
pop
push
push
push
sub
pop
push
movl
push
push
push
call
push
add
lock
mov
fwait
add
ja
add
div
add
lds
div
test
xchg
xchg
add
mov
mov
int3
push
pop
add
cld
mov
or
push
call
push
lea
push
call
popf
add
mov
jmp
test
add
add
imul
aam
fists
mov
jae
mov
roll
push
mov
jo
xchg
add
loope
add
add
xchg
mov
push
add
scas
cltd
fcmovbe
mov
add
push
mov
push
jnp
add
add
add
mov
int3
lea
pop
push
call
push
push
push
push
push
push
push
push
call
cld
xchg
iret
fldl
add
add
mov
loop
out
stc
aad
add
scas
mov
lds
add
sti
into
mov
shr
mov
sahf
add
add
add
arpl
lods
int
add
add
add
mov
add
pop
lods
fimull
subl
lea
pop
subl
cmpl
jne
push
inc
shr
pop
pop
pop
push
lea
shr
lea
pop
pop
pop
push
not
inc
sub
pop
leave
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
pushf
data16
test
add
pop
loopne
add
lea
loop
add
fsubrp
add
test
pop
scas
add
nop
add
pusha
push
add
add
add
cltd
cli
add
jmp
mov
add
add
push
roll
scas
add
lea
add
push
xchg
xchg
add
push
aam
fmull
push
push
push
push
lea
push
push
push
call
add
pop
mov
fiadds
fsubrl
adcb
add
mov
out
jbe
add
leave
movsl
mov
add
mov
jno
add
mov
add
mov
add
cwtl
mov
movsl
in
mov
notl
xchg
add
movsb
add
add
cwtl
xchg
add
pop
push
mov
push
sub
pop
add
push
dec
pop
push
push
push
add
ror
pop
push
push
push
push
push
lea
push
push
call
add
je
pushf
jmp
add
add
scas
mov
add
add
test
xchg
dec
lcall
loopne
cli
pop
mov
add
add
xchg
clc
xchg
mov
lcall
add
roll
pop
lret
test
nop
in
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
test
add
pop
add
sti
faddl
rolb
pop
mov
popa
push
push
ljmp
jbe
jb
add
add
add
pop
add
sti
xchg
in
add
add
add
add
mov
clc
add
add
mov
pop
add
scas
js
fwait
nop
mov
add
add
add
add
pop
add
les
mov
lea
pop
mov
lea
push
push
push
push
push
push
push
push
lea
push
call
add
je
filds
add
add
mov
add
add
jns
mov
lea
cli
add
add
out
add
push
loopne
clc
sahf
add
add
leave
add
sti
sahf
add
addl
cmpl
fs
ficomps
and
sub
push
shr
rol
xor
pop
mov
shr
push
ror
pop
add
mov
push
shr
rol
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
pop
js
repnz
movsb
add
add
mov
add
mov
add
add
aad
add
mov
in
rcll
xchg
add
loop
fsubrl
add
fmull
pop
add
add
push
sub
xor
dec
pop
mov
mov
push
push
push
push
lea
push
push
push
push
push
call
addr16
lods
aad
mov
add
fucomip
add
add
fadd
ljmp
add
lods
add
add
add
add
into
loope
clc
pop
leave
add
fldpi
test
mov
push
movsb
add
add
cwtl
add
roll
pop
cmp
jne
cmp
jne
push
push
push
push
call
loopne
add
add
stc
add
xchg
insb
jge
scas
add
testb
add
mov
fwait
add
jp
lcall
ret
add
push
add
mov
out
add
add
push
mov
roll
push
out
xchg
imul
arpl
fadd
loopne
mov
lea
pop
mov
movl
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
lock
arpl
add
add
mov
add
out
gs
cmpsl
jge
push
cmpsb
push
add
add
add
frstor
xchg
call
in
out
test
in
add
data16
jmp
push
pop
mov
mov
push
ror
rol
sub
pop
sub
jne
push
add
inc
pop
mov
movl
push
push
push
push
lea
push
push
push
push
push
lea
push
call
xchg
addr16
scas
fildl
add
imul
mov
lahf
call
jp
add
jo
in
mov
add
lahf
shll
ja
cmc
cli
add
jge
std
add
ret
enter
mov
lcall
scas
mov
pop
jmp
mov
push
push
lea
push
call
add
jp
fildl
add
in
lods
mov
add
imul
push
call
add
ja
call
movsb
add
add
ffree
add
mov
stos
push
js
lret
clc
mov
cmpsb
mov
lea
pop
mov
cmp
jne
push
push
push
lea
push
push
call
add
mov
leave
ret
add
mov
add
jnp
add
hlt
add
arpl
add
fnstenv
test
add
add
stos
add
fcomp
xorl
add
nop
pop
mov
lea
pop
mov
push
pop
movl
jmp
push
push
call
jbe
xchg
add
mov
icebp
loopne
in
xchg
out
mulb
lcall
mov
lcall
add
lock
add
push
pop
add
loop
add
lods
add
in
mov
jo
addb
add
mov
movsb
add
jns
add
pop
mov
xlat
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
call
add
push
test
mov
jo
addb
jae
mov
xchg
xchg
add
fildl
add
test
repnz
add
add
lret
cld
jp
add
add
add
shll
scas
push
add
push
add
add
add
testl
push
add
test
add
add
call
out
add
add
push
ret
add
pop
jle
fadds
roll
xchg
mov
pop
mov
jmp
add
test
push
add
add
popa
add
rol
filds
pop
filds
out
mov
add
add
mov
lea
pop
movl
push
pop
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
out
add
mov
add
enter
into
hlt
add
xchg
push
jno
add
add
mov
pop
pop
ret
addr16
mov
mov
pop
jae
lds
into
add
add
add
mov
les
pushl
push
push
push
push
push
push
lea
push
push
call
incb
mov
int
push
add
add
addl
add
test
xchg
bound
add
adcb
xchg
add
add
add
lds
push
scas
add
roll
les
push
sub
not
not
pop
mov
mov
push
push
push
push
call
add
add
fldl
add
xchg
pop
jle
int
add
xchg
add
add
int
add
roll
add
in
enter
lea
add
push
add
add
ljmp
lret
xchg
popa
fiadds
add
sti
insb
shl
loop
mov
arpl
pop
mov
push
push
sub
rol
push
sub
add
dec
rol
dec
sub
rol
sub
inc
pop
xor
sub
xor
lea
pop
push
sub
pop
push
push
push
push
push
push
call
add
add
cmpsl
fistpll
mov
aam
add
cld
popl
push
add
jmp
add
add
out
add
push
add
add
add
flds
add
js
loopne
jb
add
add
add
mov
add
add
push
les
push
pop
add
cli
push
jb
mov
add
rcr
mov
pusha
adc
call
push
lea
push
push
push
push
push
push
call
add
add
mov
pop
clc
out
jge
add
add
fwait
add
add
add
repnz
xchg
push
add
add
cmc
add
add
add
mov
lea
pop
cmpl
je
push
push
not
xor
shr
push
xor
add
shr
sub
shl
rol
sub
pop
sub
shr
pop
push
push
lea
push
push
push
push
push
push
call
add
icebp
add
idivb
push
jp
xlat
push
stc
add
popf
add
xchg
jns
push
add
add
add
mov
xchg
add
test
mov
add
loope
push
int3
andb
xchg
xorb
add
int3
add
add
add
add
jns
push
pushf
mov
lea
pop
push
call
push
push
call
push
mov
js
add
aad
out
add
push
pop
add
in
add
add
xlat
add
rcl
std
imul
enter
add
mov
mov
bound
push
jno
in
add
add
add
fwait
jb
cmc
add
cld
lea
pop
cmpl
je
push
push
add
push
or
inc
add
not
sub
shl
shl
pop
add
pop
push
push
lea
push
push
call
fwait
add
push
add
mov
push
add
jne
stc
fdivl
lods
jmp
add
mov
mov
add
add
add
mov
popa
add
je
jl
icebp
out
mov
mov
scas
add
add
popa
add
cld
lea
pop
push
call
push
lea
push
push
call
add
scas
mov
hlt
pop
mov
mov
add
add
add
add
add
pop
push
push
mov
add
xchg
add
add
popa
add
add
rolb
scas
mov
add
shrl
test
push
filds
fldl
cld
add
les
hlt
lea
pop
cmpl
je
push
push
xor
dec
push
or
inc
add
sub
xor
shr
dec
shl
pop
sub
add
pop
push
lea
push
push
call
loop
loopne
add
loopne
scas
mov
add
push
mov
into
cmpsl
add
test
movsl
loopne
je
add
imul
add
add
loop
jae
add
mull
lret
popf
jae
jle
mov
lea
pop
push
push
sub
pop
call
push
push
push
push
call
loopne
rolb
jl
push
push
add
lods
add
add
mov
out
jo
push
add
jne
pop
add
int
add
popa
mov
add
cld
fwait
jo
mov
cmc
lods
add
add
add
fiadds
stc
mov
xor
jle
add
add
add
mov
lea
pop
cmpl
je
push
push
add
push
or
not
add
inc
add
shr
sub
sub
add
pop
shr
pop
push
push
call
add
loop
cmc
add
roll
lds
hlt
add
add
stos
stos
xchg
aad
pop
add
add
fiadds
add
jns
add
mov
add
add
push
pop
cmpsl
add
pop
in
add
pop
ja
add
add
aad
add
xlat
xchg
lret
ficomps
pop
sti
jo
incb
jae
hlt
add
add
mov
lea
pop
push
push
lea
push
push
lea
push
push
lea
push
call
add
bound
add
mov
add
push
add
test
add
mov
lods
add
iret
jno
sahf
push
add
add
xchg
lock
scas
add
flds
lea
pop
call
cmpl
je
push
push
shl
shl
shr
push
and
add
ror
inc
sub
lea
ror
inc
pop
ror
pop
push
ror
dec
xor
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
shrb
jmp
shrb
aam
add
add
in
std
pop
xchg
mov
add
repnz
test
cmpsb
popl
je
add
add
and
jl
call
add
lds
insb
arpl
std
pusha
enter
mov
xchg
add
add
lea
pop
call
cmpl
je
push
push
lea
xor
rol
push
and
add
rol
add
sub
pop
not
rol
pop
push
push
push
call
lods
xchg
add
add
add
ja
movsb
rolb
pop
add
loopne
add
cli
filds
add
xchg
test
add
push
frstor
rcl
add
gs
push
incb
cmpsl
scas
frstor
add
mov
mov
add
std
xchg
int
sti
push
lea
je
lret
jecxz
add
mov
add
scas
bound
or
push
call
push
push
push
push
push
push
call
push
shll
add
and
roll
pop
into
out
jnp
stc
add
add
fstps
pop
add
cld
je
add
add
add
mov
stos
xchg
cmpsb
push
jo
clc
xchg
cmpsb
add
push
mov
add
mov
mov
movsb
add
in
mov
add
popf
cwtl
jecxz
add
mov
lea
pop
cmpl
je
push
push
not
push
or
not
add
ror
inc
rol
sub
not
dec
pop
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
add
add
push
add
add
push
addb
popl
add
mov
mov
test
add
ljmp
jo
push
add
add
pop
mov
add
pop
jbe
add
mov
bound
fmuls
pop
push
push
push
push
push
push
push
call
add
push
add
add
pop
mov
add
add
add
int
xchg
add
mov
mov
add
popl
add
lods
shrl
fmull
in
cmp
filds
cmpl
je
push
push
rol
sub
rol
push
or
inc
add
ror
add
xor
sub
ror
add
shr
xor
pop
ror
lea
pop
push
push
push
call
movl
add
add
je
add
fnsave
pop
add
mov
add
fwait
add
loopne
lods
lods
mov
lret
add
add
std
add
mov
fistl
mov
mov
pop
add
cmpsl
fs
mov
add
add
add
in
mov
add
add
call
mov
or
push
push
rol
add
pop
call
cmpl
je
push
push
dec
add
push
push
pop
add
add
sub
add
pop
add
pop
push
add
add
pop
push
push
push
push
call
jecxz
cmpsb
mov
jbe
lock
pusha
pop
jnp
hlt
jmp
mov
std
add
xchg
add
xchg
add
jne
add
fadds
ljmp
jl
add
mov
rcrl
add
lock
add
push
add
add
pop
leave
add
add
je
mov
addr16
call
push
push
lea
push
push
push
push
call
push
mov
add
mov
xchg
int3
addl
add
add
into
hlt
faddl
add
push
add
add
add
add
mov
nop
lods
stc
mov
add
add
add
push
cli
add
jle
jge
add
lea
mov
xchg
add
call
mov
push
icebp
scas
add
push
imul
jae
rolb
add
jne
loop
cld
lea
pop
cmpl
je
push
push
ror
push
push
pop
add
ror
inc
sub
not
sub
add
lea
pop
inc
sub
sub
pop
push
lea
push
push
lea
push
call
add
sti
fs
ljmp
cltd
data16
addr16
mov
jnp
pop
hlt
pop
add
jnp
add
cmpsb
push
mov
xchg
mov
add
movl
push
add
add
insb
sti
in
imul
shl
pop
mov
aam
add
jb
add
add
arpl
shlb
add
mov
add
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
add
push
mov
jle
arpl
out
add
add
add
call
cli
add
add
push
in
xchg
add
fldl
fs
fwait
add
mov
hlt
out
test
add
add
ja
add
add
decb
out
add
mov
add
push
mov
pop
call
push
add
pop
cmpl
je
push
push
shl
sub
shr
push
and
add
shl
sub
not
rol
lea
shl
pop
add
rol
pop
push
add
pop
push
call
push
rol
lea
ror
add
pop
cmpl
je
push
push
shr
xor
push
push
pop
add
sub
sub
pop
ror
rol
sub
pop
push
push
push
push
push
lea
push
call
jmp
fisubs
outsl
arpl
cltd
add
outsl
mov
cmpsb
add
pop
sahf
pop
add
hlt
xchg
add
into
roll
add
push
lret
add
in
add
ja
add
std
mov
lea
pop
push
push
lea
push
push
call
jmp
mov
movsl
fwait
mov
add
rcrl
cld
add
mov
mov
pop
addb
add
mov
into
lret
xchg
lods
add
add
cltd
add
or
call
cmpl
jne
push
push
lea
push
push
push
push
push
lea
push
push
push
call
xchg
mov
cld
cli
enter
mov
add
jecxz
push
lods
aad
add
data16
mov
lret
add
fadds
in
push
push
lods
jne
out
add
rcr
icebp
mov
jno
imul
push
xchg
mov
outsl
ret
add
add
add
pop
push
push
jno
add
in
jmp
jp
fiadds
sahf
mov
nop
jmp
jl
add
lea
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
add
cmc
in
add
push
gs
lcall
xchg
icebp
mov
test
nop
mov
sbbb
sti
std
add
jmp
add
mov
jl
xchg
loope
add
jo
lods
jmp
aam
test
lods
in
stos
mov
lea
pop
movl
push
push
push
push
push
lea
push
push
call
outsl
ret
hlt
ret
faddl
add
jo
roll
adcl
cmpsl
add
ja
pop
lock
mov
out
push
add
add
stos
loop
add
loop
pop
mov
lea
pop
jmp
push
push
push
push
call
jbe
stc
add
pop
push
add
xchg
add
add
add
in
popaw
mov
out
imull
jnp
add
mov
pop
add
lret
scas
mov
leave
out
add
add
add
push
add
mov
xchg
add
xchg
add
jge
sbbl
leave
add
mov
lea
pop
xor
push
shr
not
lea
shl
pop
pop
push
push
push
push
lea
push
lea
push
push
call
add
lahf
out
add
out
cltd
add
mov
hlt
xchg
jo
jne
sarl
add
add
jge
add
add
std
add
mov
jo
cld
lea
pop
pop
push
push
push
push
lea
push
call
add
add
addl
loop
mov
js
pushf
push
add
add
fildl
gs
scas
mov
add
add
add
fwait
pushf
fstpl
add
add
add
mov
int3
lea
pop
pop
push
push
push
call
add
stos
int
add
xchg
add
leave
add
add
pop
mov
cmpsl
ffreep
mov
jo
add
add
test
mov
jmp
fldl
add
int3
add
add
push
jecxz
pop
xchg
add
add
add
mov
lea
pop
pop
push
add
sub
shr
pop
leave
push
add
not
dec
shr
pop
ret
push
push
shr
pop
mov
add
push
push
push
push
lea
push
push
push
push
push
call
add
arpl
xchg
add
add
add
add
add
add
jne
add
add
jbe
jnp
add
pop
stos
add
add
add
out
mul
add
imul
ljmp
cwtl
fnstenv
out
add
push
add
add
pusha
and
cmpl
jne
push
push
lea
add
shr
push
xor
add
sub
lea
sub
xor
sub
pop
add
sub
sub
shr
pop
push
lea
push
push
call
int3
add
push
stos
add
add
add
push
lahf
push
fiaddl
cmpsw
rolb
rolb
add
lds
add
pop
js
add
add
scas
cmpsb
add
addb
add
std
add
push
add
add
mov
addr16
fbld
out
add
add
add
add
fldt
aam
bound
pushl
push
sub
pop
call
push
push
shr
sub
shl
pop
call
push
push
push
push
push
push
call
add
cmpsb
loop
add
jb
push
push
xchg
add
js
jns
cmpsl
add
les
add
enter
add
test
add
jbe
movsb
add
out
test
add
stos
add
xlat
fcompl
out
roll
hlt
aam
xchg
jmp
les
add
stos
add
mov
mov
add
jns
hlt
iret
orl
add
cmpl
je
push
push
push
push
lea
push
push
push
push
lea
push
call
push
fildl
add
add
xchg
imul
mov
std
add
add
add
mov
mov
add
int
add
add
mulb
add
les
add
add
jns
jmp
sti
add
add
add
pushf
shlb
add
loop
fwait
add
mov
lea
pop
cmpl
jne
leave
push
shl
lea
sub
pop
add
pop
push
lea
push
push
call
add
jno
add
mov
pusha
xchg
add
add
clc
add
pop
add
data16
faddl
push
int
add
fiaddl
add
add
mov
mov
lea
pop
pop
pop
push
push
push
lea
push
call
add
pusha
lret
jb
push
add
add
nop
stc
add
add
add
mov
add
arpl
lcall
clc
add
rcr
add
xchg
mov
scas
add
in
loopne
cwtl
int3
add
add
add
out
add
add
mov
jnp
addb
add
add
loopne
pusha
jl
scas
lret
roll
hlt
lea
pop
pop
leave
push
push
push
push
push
push
push
push
lea
push
call
std
add
lahf
mov
mov
add
add
add
add
int
mov
imul
scas
fsts
push
roll
add
add
hlt
jo
mov
add
add
cwtl
add
add
add
in
stos
add
je
add
add
mov
lea
pop
add
push
sub
sub
inc
add
pop
ret
push
push
push
push
push
lea
push
call
lret
pop
jle
jns
add
lds
add
mov
xchg
mov
rorl
xlat
xorb
add
push
test
xchg
jmp
xchg
add
add
mov
add
lret
push
fwait
add
add
test
add
js
add
add
add
add
add
add
mov
mov
lea
pop
jmp
push
push
lea
push
push
push
push
call
frndint
mov
pusha
ja
mov
in
mov
add
xchg
lea
js
add
in
test
mov
popa
fldl
add
mov
mov
add
popa
add
mov
fsts
out
add
add
add
add
add
testl
add
in
into
push
add
mov
lea
pop
cmpl
jne
push
push
rol
sub
push
or
not
add
rol
xor
sub
shr
pop
add
pop
push
push
call
add
je
movsb
add
push
add
add
add
jno
add
add
leave
add
movsl
imul
jo
xchg
add
in
aad
add
add
add
add
out
add
add
insb
popa
call
hlt
lea
pop
pushl
call
push
push
lea
push
push
call
imul
ret
mov
add
add
pop
xchg
in
aad
lret
xchg
fcmovu
rolb
add
cld
mov
hlt
add
scas
add
add
add
jne
push
jmp
add
jmp
out
adcl
add
xor
add
add
test
pop
push
push
push
lea
push
lea
push
push
push
call
mov
add
jns
fldenv
fidivl
testl
mov
mov
add
add
add
add
loopne
add
add
add
add
add
out
roll
addb
add
pop
add
idiv
mov
aam
bound
pop
call
push
lea
push
lea
push
push
push
push
push
lea
push
call
ficomps
add
add
add
in
add
add
add
push
out
add
nop
xchg
arpl
xchg
add
stos
add
add
movb
mov
pop
in
push
add
pop
jmp
push
push
push
push
push
call
jp
add
mov
cltd
mov
add
divl
notb
add
fiaddl
out
jp
add
pop
add
jae
into
mov
cltd
in
addl
jecxz
add
nop
add
add
push
xlat
add
add
out
mov
jno
add
add
add
add
lods
pushf
mov
lea
pop
cmpl
jne
push
shr
shr
pop
mov
push
lea
push
push
lea
push
push
push
push
push
call
add
rclb
std
push
shrb
xchg
cmpsl
mov
shl
cmpsb
push
add
add
mov
mov
fldl
test
add
lods
leave
iret
xchg
cld
std
mov
fildl
add
add
sahf
iret
rclb
out
iret
faddl
nop
pop
flds
add
add
int3
add
mov
lea
pop
mov
push
push
push
push
push
pop
add
sub
sub
add
sub
sub
pop
add
sub
pop
push
push
push
lea
push
lea
push
call
jmp
fcoml
pop
pop
add
sti
xchg
testl
add
push
jge
add
loope
add
add
outsl
out
mov
push
add
add
add
add
add
add
add
sti
mov
push
lods
addr16
push
jb
mov
popa
adc
pushl
push
push
lea
push
call
hlt
jno
int3
add
movsb
cwtl
add
add
add
push
mov
add
jl
add
hlt
fs
add
out
add
mov
jnp
add
add
add
add
data16
add
add
add
pop
call
push
push
not
push
xor
add
sub
rol
sub
shr
sub
lea
pop
not
lea
pop
push
push
call
add
lret
cltd
in
pop
outsl
jns
add
add
push
in
faddl
add
je
add
add
imul
out
iret
lea
test
xlat
add
add
fiaddl
add
add
imulb
add
or
jne
push
push
call
loopne
jbe
cmc
icebp
pop
js
add
imul
xchg
add
mov
add
add
ja
rcr
add
add
in
in
add
jecxz
ror
scas
lods
push
add
add
ljmp
bound
pop
call
call
push
push
add
push
or
inc
add
add
add
not
sub
not
lea
add
pop
xor
shl
pop
push
push
push
push
lea
push
push
push
call
add
cld
mov
add
mov
arpl
add
imul
out
mov
add
popa
pop
add
push
leave
test
mov
fstp
push
add
add
cmpsb
scas
jecxz
les
jne
push
pop
call
push
push
push
push
push
push
lea
push
call
shr
add
pusha
stc
add
jns
push
sahf
mov
roll
aad
add
into
mov
add
add
jge
in
add
test
mov
nop
mov
jecxz
add
lahf
lret
lea
pop
call
push
push
inc
shr
not
add
push
xor
add
shr
sub
sub
pop
not
pop
push
push
call
jbe
mov
popa
add
jne
hlt
add
add
mov
enter
fiaddl
mov
add
fsubrl
faddl
lods
push
fcmove
mov
scas
fsubs
mov
lea
pop
pushl
push
lea
push
push
push
push
push
call
add
in
add
iret
aad
add
loopne
xchg
in
shrb
fildl
mov
add
jns
jb
add
add
fmul
push
leave
jp
add
hlt
add
repnz
hlt
add
add
jns
mov
xlat
cmc
add
movb
fs
jnp
add
push
mov
sahf
clc
add
mov
add
lods
add
add
mov
lea
pop
call
push
push
lea
push
push
push
call
aam
negb
not
loop
jb
add
idivb
addb
cwtd
add
sar
in
push
add
add
push
xchg
mov
add
add
icebp
add
cmc
add
loopne
add
add
sahf
add
add
imul
add
add
add
add
mov
pusha
adc
call
push
push
not
not
push
or
not
add
sub
inc
shl
sub
add
pop
dec
inc
pop
push
not
add
pop
pushl
push
push
push
call
add
add
add
outsl
mov
sti
push
je
xlat
add
xchg
mov
add
add
shlb
add
mov
insb
add
fidivl
add
jp
cld
lea
pop
call
call
push
push
add
push
and
add
sub
dec
shl
sub
add
sub
pop
add
dec
pop
push
push
push
push
push
push
call
aam
rclb
pop
fsubr
mov
add
push
lahf
add
mov
add
mov
rclb
add
lcall
add
add
pop
jb
fmull
jne
push
push
lea
push
push
push
push
push
push
push
call
gs
incb
add
addr16
mov
in
into
loopne
mov
mov
add
cld
jmp
add
addb
mov
add
add
pop
push
std
xchg
add
add
mov
popa
mov
lea
pop
call
push
rol
inc
pop
call
push
push
push
push
push
call
add
lahf
fisubs
mov
mov
ret
call
leave
add
mov
add
add
add
out
mov
arpl
add
add
add
outsl
je
add
jmp
add
jnp
xlat
int
add
in
test
push
xchg
add
add
subb
faddl
out
mov
lea
pop
call
push
push
sub
push
or
not
add
xor
add
sub
not
pop
xor
add
xor
pop
push
sub
pop
pushl
call
push
xor
add
pop
lea
push
lea
push
lea
push
call
add
add
lods
add
mov
add
push
add
out
xchg
sar
add
data16
jne
add
lds
push
out
add
aam
mov
mov
add
in
lcall
mov
add
xchg
lods
movsl
jne
js
add
jb
movsl
add
fildl
add
lea
pop
push
push
push
push
lea
push
push
call
nop
clc
lea
add
add
pop
mov
add
add
add
fildl
ljmp
sti
idivb
add
addb
repnz
ret
add
imul
add
cld
lea
pop
call
push
push
dec
push
sub
add
lea
sub
sub
not
pop
xor
pop
push
not
sub
sub
inc
pop
pushl
call
push
pop
call
push
push
push
push
pop
add
sub
not
sub
rol
pop
sub
pop
push
ror
shr
sub
pop
pushl
push
rol
xor
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
ja
add
cmpsb
fucomip
movsb
mov
test
lret
lret
insb
stos
lret
pop
pop
pop
je
movsb
out
add
push
jle
add
add
filds
add
jecxz
popa
leave
scas
pop
mov
add
les
shrb
clc
push
xor
call
pop
add
sub
dec
sub
shr
add
pop
sub
xor
pop
push
push
push
push
lea
push
push
call
pushf
arpl
stos
nop
add
add
out
mov
add
addr16
hlt
add
jp
add
mov
adc
scas
add
xchg
push
add
jo
mov
ja
add
lcall
fmull
jne
call
push
inc
shl
pop
call
push
inc
pop
lea
push
push
rol
not
push
or
not
add
lea
not
sub
xor
sub
rol
pop
xor
dec
pop
push
shr
ror
pop
pushl
call
push
push
push
call
jmp
testb
xchg
push
nop
cwtl
add
xchg
mov
add
lahf
add
add
cltd
add
add
js
add
out
andb
mov
in
add
add
aam
add
aad
or
in
lahf
loope
mov
les
call
push
push
lea
rol
push
or
inc
add
lea
sub
xor
sub
ror
pop
add
inc
shr
pop
push
add
rol
add
pop
pushl
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
adc
add
pusha
scas
add
loop
add
fwait
add
stc
out
data16
nop
add
fwait
addl
sti
movsb
pop
add
push
push
add
push
add
pushf
mov
jle
jne
add
pop
call
push
lea
push
push
push
push
push
lea
push
push
push
call
add
mov
add
add
xchg
loopne
testb
pop
add
add
xchg
fdiv
ja
in
cli
add
mov
rcl
fnstcw
arpl
add
popl
nop
aam
fs
add
xchg
in
ret
roll
mov
arpl
add
mov
add
jb
scas
arpl
mov
mov
add
out
jbe
ja
les
rclb
pop
mov
push
push
sub
push
push
pop
add
sub
add
pop
add
rol
sub
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
std
add
add
mov
add
mov
mov
loope
js
add
mov
mov
add
mov
mov
pop
addr16
movb
push
add
mov
add
ret
fcmovbe
mov
push
xorb
and
jne
call
push
sub
not
ror
pop
push
push
shl
lea
pop
pushl
push
lea
push
push
push
push
call
mov
mov
xchg
in
fldcw
imul
mov
popa
jecxz
bnd
add
pop
clc
mov
fstps
enter
add
push
mov
add
add
xchg
add
loope
add
xchg
pop
mov
lea
pop
call
push
push
push
push
pop
add
not
shl
not
sub
lea
shr
pop
not
xor
pop
push
xor
shr
dec
pop
pushl
push
push
push
push
push
call
add
stos
add
pusha
movsb
push
xorb
xchg
mov
add
pop
jo
cltd
lods
add
jns
jle
rolb
xchg
fwait
jmp
add
test
add
add
push
xchg
pop
pushf
mov
in
testb
call
push
push
dec
dec
push
or
not
add
not
not
sub
add
pop
pop
push
push
sub
push
or
inc
add
inc
sub
add
sub
sub
sub
ror
xor
pop
lea
not
dec
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
lcall
add
cmc
popf
loopne
hlt
mov
roll
movl
pop
add
loop
push
pushf
jb
add
jns
fisubrs
ret
aam
mov
aam
shll
push
jbe
test
xchg
add
add
sti
test
add
flds
mov
lea
pop
call
push
push
xor
push
or
not
add
sub
not
sub
shl
pop
dec
xor
rol
pop
push
push
push
push
push
push
lea
push
push
push
call
add
lret
cmpsl
jle
popl
test
fdivl
add
jne
cmc
push
add
push
mov
je
add
xchg
outsl
mov
add
jnp
xchg
add
mov
lea
pop
pushl
call
push
lea
push
lea
push
call
add
pop
add
pop
mov
pop
mov
add
outsl
insb
add
add
fiadds
cmc
iret
add
mov
mov
std
stc
add
lahf
mov
jns
add
add
jp
add
fistpll
mov
out
xchg
sub
cld
mov
in
jnp
add
mov
icebp
cli
test
add
pop
mov
push
lea
push
push
lea
push
push
call
scas
add
add
stos
add
add
add
flds
stos
add
loope
add
xchg
test
add
imul
addb
jmp
add
push
or
mov
ficompl
add
addr16
fmull
pushf
and
decl
call
xlat
shr
xor
not
pop
push
push
add
shl
pop
push
push
lea
xor
pop
push
push
push
add
rol
rol
dec
pop
push
push
push
not
rol
pop
push
push
rol
shr
lea
pop
push
pushl
push
sub
rol
add
pop
push
call
push
push
inc
not
not
push
xor
add
not
lea
sub
pop
not
pop
push
lea
push
call
mov
out
ja
add
addl
add
add
lret
ffreep
add
cmc
roll
stc
pop
rolb
xchg
xchg
in
call
xlat
idivl
add
mov
lea
pop
pushl
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
std
pop
add
mov
add
xchg
aad
add
add
lds
lods
mov
add
mov
addr16
int
add
call
jnp
add
loop
lcall
mov
add
add
jo
add
mov
lea
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
iret
cmc
addr16
add
pop
mov
cltd
add
add
int
jl
xchg
add
add
add
mov
lock
mov
pusha
mov
add
add
pop
sahf
in
cmc
add
mov
fidivl
bound
push
lock
lea
pop
call
push
pop
mov
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
in
cltd
int
xchg
add
in
jle
add
add
lods
mov
movsl
add
in
mov
add
add
arpl
add
add
cld
add
add
pop
cmc
xchg
movb
push
add
ret
lea
pop
pop
dec
jne
push
pop
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
add
ja
ficompl
add
add
push
push
roll
mov
add
ret
add
push
add
add
in
add
jno
les
flds
popf
add
add
rorl
add
add
sub
adc
add
push
push
not
shl
dec
push
or
inc
add
shr
sub
sub
shl
ror
pop
dec
rol
xor
pop
push
lea
lea
pop
pushl
call
push
shl
pop
push
call
push
push
push
push
push
push
push
call
add
add
add
add
xchg
add
int3
icebp
add
push
add
addl
add
add
add
movl
in
addb
loope
pop
outsl
add
mov
add
add
cmpsb
add
add
cmpsl
add
push
xchg
lods
lea
bound
cmpsl
mov
lea
pop
mov
push
sub
pop
lea
push
push
xor
sub
add
push
or
not
add
not
add
inc
sub
xor
pop
sub
pop
push
lea
push
push
push
push
push
push
push
call
lods
add
hlt
test
cwtl
fildl
insb
mov
push
add
add
add
push
add
mov
mov
add
clc
out
mov
add
mov
xchg
loopne
ja
pop
push
add
leave
js
add
repnz
mov
add
out
sar
fldl
add
add
add
movsl
mov
mov
lea
pop
pushl
push
shl
pop
call
push
push
push
push
lea
push
call
add
add
add
add
fldl
add
movb
add
jle
movsl
pop
add
test
add
add
mov
add
js
add
add
add
add
xchg
xchg
imul
int3
lea
pop
call
push
push
lea
push
xor
add
rol
sub
xor
pop
not
rol
pop
push
push
push
push
lea
push
call
fistps
add
pop
shlb
add
mov
arpl
mov
add
hlt
push
add
pop
add
add
test
addb
loop
outsl
cmpsl
add
add
mov
add
pop
add
push
roll
add
push
xchg
add
arpl
pushl
push
push
push
call
add
test
cwtl
add
mov
add
add
testb
add
lods
push
jb
pop
xchg
push
jl
add
loope
add
mov
add
je
addl
mov
insb
ret
ret
add
pop
add
test
mov
arpl
rolb
add
int3
mov
lea
pop
call
push
shl
pop
call
mov
push
pop
lea
push
push
not
shr
shr
shl
push
sub
add
rol
sub
shl
lea
sub
pop
sub
rol
sub
add
pop
push
add
inc
add
sub
pop
pushl
push
shr
not
pop
call
lea
push
lea
push
push
push
push
push
call
test
fldenv
scas
mov
lahf
add
xchg
add
xor
add
pop
aam
add
nop
xchg
jb
in
int3
sahf
add
shll
movb
pop
mov
mov
mov
add
fidivl
loopne
lcall
add
les
add
movsl
hlt
xchg
lds
add
mov
stos
lds
sbb
push
add
sub
dec
rol
pop
push
push
push
lea
push
lea
push
call
mov
add
movsl
pushf
mov
add
push
fisubrs
ljmp
out
add
jbe
mov
add
add
add
sar
in
pop
pusha
cld
add
mov
add
aad
int3
lea
pop
push
push
ror
sub
add
inc
pop
pushl
push
push
shl
push
sub
add
sub
sub
pop
rol
pop
push
dec
ror
pop
push
push
push
call
cli
cwtl
jne
pop
cmpsb
fsubl
xchg
lahf
add
add
ljmp
add
add
mov
mov
mov
add
jb
add
pop
call
push
push
xor
add
push
or
not
add
inc
sub
sub
shr
add
pop
lea
sub
dec
dec
pop
push
push
call
add
rcr
add
jns
addr16
add
add
cmpsb
add
int
add
add
xchg
jmp
enter
add
aad
in
add
add
add
add
add
shlb
out
arpl
movsl
push
out
add
stos
jge
mov
int3
lea
pop
pushl
push
push
push
push
push
call
stos
add
add
add
add
add
add
imul
add
into
loopne
clc
add
mov
pop
cmpsl
int
je
add
jo
imul
mov
add
add
push
fldl
mov
add
arpl
test
shll
add
add
mov
mov
lea
pop
call
push
add
add
pop
push
push
inc
rol
xor
pop
call
push
push
inc
push
and
add
sub
rol
shl
sub
pop
shl
not
pop
push
lea
push
push
push
push
push
call
jle
out
int3
mov
cld
add
push
add
jne
mov
incb
popf
add
add
cmpsb
add
cltd
mov
add
push
push
add
add
mov
xchg
loopne
mov
jge
movb
add
add
mov
shrl
pusha
cwtl
add
push
shll
out
hlt
lea
pop
pushl
push
pop
call
push
inc
pop
call
push
shr
pop
jmp
push
push
push
push
push
call
pushf
fnstcw
idivl
filds
enter
jmp
add
mov
fs
insb
in
enter
popf
add
out
add
out
add
add
add
xchg
mov
lea
pop
pushl
push
shr
not
pop
mov
push
rol
rol
xor
pop
jmp
push
push
rol
rol
push
or
not
add
rol
sub
sub
pop
rol
shr
add
pop
push
shr
sub
pop
pushl
push
xor
shr
shr
dec
pop
call
push
push
push
push
call
rcrl
add
jae
add
int
addr16
fildl
movb
fiaddl
mov
jge
rcl
lret
add
fcomi
add
fstpt
pop
pushf
add
add
add
add
push
lcall
hlt
lea
pop
push
push
add
pop
call
push
push
not
push
xor
add
shl
inc
sub
sub
inc
pop
shr
inc
add
pop
push
push
push
push
push
push
push
push
call
add
ja
add
insb
popa
add
push
xchg
xchg
jmp
push
ret
add
mov
xchg
add
sar
add
notb
andb
add
mov
call
xlat
test
enter
lea
pop
pushl
call
push
not
add
rol
pop
push
push
ror
shr
ror
pop
call
push
lea
push
call
jo
fs
lds
flds
test
loope
ljmp
addr16
icebp
mov
ljmp
jmp
mov
add
mov
xorl
add
nop
add
fisubrl
mov
add
leave
ja
jp
pop
add
add
jge
mov
lea
pop
leave
push
pop
add
push
add
rol
sub
pop
pop
push
push
push
push
lea
push
push
call
add
add
mov
aad
shll
add
loop
add
mov
cwtl
add
int
mov
arpl
test
insb
add
add
add
lcall
add
jno
add
add
add
jp
add
data16
lcall
sbb
push
dec
add
sub
pop
pop
push
xor
sub
shl
pop
pop
push
add
add
ror
xor
pop
leave
push
push
lea
push
push
push
call
mov
ja
testl
add
jmp
sahf
add
cmpsl
jecxz
scas
enter
insb
add
xchg
in
add
movsb
add
je
mov
aam
add
add
add
jb
into
add
enter
add
mov
xchg
cmpsl
mov
add
add
mov
movsl
jmp
add
fdivrl
ljmp
mov
mov
bound
add
push
push
push
call
ja
clc
out
add
add
add
add
stc
add
lahf
jnp
add
loop
add
stos
filds
gs
add
popf
add
push
lcall
push
add
add
add
jbe
pop
call
stos
add
add
add
in
out
imul
add
push
mov
fstp
out
add
int3
mov
lea
pop
ret
push
inc
pop
leave
push
push
push
push
push
push
lea
push
push
push
lea
push
call
rol
add
jns
jle
add
enter
xchg
add
mov
ret
roll
push
ret
pop
mov
pop
cld
sbbl
rorl
pop
ret
push
push
push
push
lea
push
lea
push
call
add
mov
out
filds
add
xchg
roll
cld
add
add
test
in
sahf
in
cmpsl
aad
fiadds
faddl
add
xchg
mov
pop
add
add
add
aam
bound
mov
push
push
push
call
flds
push
add
shr
popa
add
push
cmpsl
sahf
mov
movsb
add
out
bound
mov
mov
je
stos
xchg
rorb
stos
mov
lea
add
ljmp
push
xchg
jp
out
pop
mov
add
jbe
add
add
mov
add
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
call
jbe
add
testb
add
add
incb
add
repnz
loope
add
pop
mov
add
add
iret
aam
add
out
jae
mov
add
lcall
imul
jge
sbbl
add
test
hlt
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
push
call
add
add
lret
add
fiaddl
pop
add
stos
add
shr
add
add
xchg
pop
jns
pop
add
repnz
lcall
push
mov
add
mov
jbe
out
add
out
add
pop
jmp
mov
push
lea
push
push
push
push
call
push
test
ror
add
mov
push
add
cmc
add
fsub
add
mov
add
add
xlat
rolb
sahf
out
mov
mov
add
add
add
add
ret
in
in
imul
cmc
aad
movb
add
fldl
add
add
pop
mov
add
hlt
lea
pop
and
xor
push
push
lea
push
push
lea
push
push
call
pop
ret
add
gs
out
imul
mov
cwtl
add
jecxz
xchg
add
test
mov
add
js
flds
jmp
push
lea
movsl
loop
add
add
pop
lcall
add
add
js
push
scas
add
fwait
pusha
mov
lea
pop
xor
push
lea
lea
sub
pop
add
push
sub
pop
xor
push
lea
add
pop
dec
sub
push
lea
push
lea
push
push
push
push
call
add
in
add
test
add
pop
add
add
jb
add
stc
test
movsb
mov
push
mov
add
add
aad
mov
faddl
add
test
mov
mov
lea
pop
jmp
sub
push
pop
pushl
push
sub
shr
add
pop
pop
push
lea
push
push
push
call
xchg
je
add
roll
add
mov
stos
add
xchg
lcall
add
add
add
mov
add
into
loopne
add
leave
xchg
outsw
add
mov
pop
add
pop
sub
cmp
jne
push
push
push
lea
push
lea
push
call
add
pusha
cld
jo
add
scas
xorl
sarl
push
loopne
add
mov
pusha
mov
rolb
add
add
add
lret
shr
add
fmull
enter
add
pop
lea
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
fildll
add
fdivp
popa
jno
add
add
mov
leave
add
jnp
sti
hlt
push
mov
mov
add
int3
mov
xlat
add
loop
add
pushf
xchg
in
add
in
add
fistl
scas
add
ret
movsb
mov
add
jecxz
jge
repnz
add
mov
mov
pusha
sub
jmp
sub
pop
shr
push
push
push
call
pop
in
add
shrb
add
jecxz
add
out
jno
flds
xchg
add
add
fildl
add
mov
add
mov
cli
add
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
call
add
jne
int3
mov
cmpsb
xchg
movsb
add
add
add
je
data16
add
popa
add
push
add
je
loope
ljmp
jge
roll
add
xchg
fistl
xchg
rclb
arpl
in
mov
add
add
xchg
rolb
add
add
mov
lea
pop
sub
pushl
push
sub
ror
inc
pop
pop
shr
push
push
push
push
call
xchg
add
xchg
add
jae
pop
fiadds
sar
stc
pop
fiadds
add
mov
add
popa
fsubrl
add
add
add
addb
add
add
loope
add
add
fs
clc
int
cld
lea
pop
and
push
push
lea
push
push
call
leave
mov
jp
add
xlat
pop
pop
add
ljmp
jns
add
cli
ret
movl
sahf
in
add
mov
mov
xchg
add
ret
popa
add
jno
repnz
mov
lea
pop
sub
push
inc
pop
cmp
jne
leave
push
rol
lea
add
sub
pop
ret
push
push
push
push
push
push
push
push
lea
push
call
jle
cmpsl
in
add
popa
mov
add
add
roll
adcb
data16
xor
jne
add
in
mov
mov
xchg
mov
fdivrl
add
add
add
repnz
add
add
out
pop
mov
pusha
and
in
add
push
not
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
imul
mov
fsubrs
roll
pop
add
mov
add
leave
add
cmpsb
add
scas
test
add
lcall
add
aam
add
clc
scas
xchg
cli
jne
cwtl
testl
pop
add
pop
jmp
loopne
mov
add
fildl
js
mov
add
jle
fldl
mov
lea
pop
push
push
push
push
lea
push
call
fucom
add
movb
lahf
incb
xchg
js
lret
add
mov
pusha
aam
lea
add
xchg
mov
popa
add
divl
out
stc
jge
add
mov
jo
add
ret
push
add
pop
push
push
add
shr
pop
mov
lea
push
xor
add
inc
pop
sub
push
add
ror
pop
mov
push
push
push
push
push
push
push
push
call
js
fadds
insb
pop
fmul
out
ret
push
push
mov
jl
leave
popl
out
mov
loope
add
add
add
out
nop
pop
add
test
add
std
mov
push
xchg
add
mov
add
repnz
add
add
add
pushf
mov
add
xchg
jle
fadds
add
pop
shr
push
push
push
lea
push
push
lea
push
push
push
push
push
call
ror
lds
mov
icebp
insb
clc
add
mov
add
add
xchg
add
std
outsl
add
flds
scas
shrl
lret
lret
mov
mov
add
not
push
repnz
add
push
clc
add
add
fxch
add
call
fstp
add
add
add
aad
fdivrs
int3
lea
pop
add
push
lea
pop
mov
push
lea
push
lea
push
call
mov
push
negl
xchg
push
push
mov
leave
lds
lock
jmp
ljmp
out
out
jo
cwtl
pop
data16
cmpsb
jo
insb
xlat
push
push
add
mov
fwait
add
add
pushf
mov
add
cwtl
add
jne
add
ljmp
add
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
popf
add
push
add
out
addl
add
add
mov
add
add
xchg
mov
cmpsl
mov
add
add
rolb
push
mov
lea
pop
mov
add
push
push
call
js
mov
imul
xchg
in
leave
xchg
movsl
add
add
pop
mov
cmc
call
jnp
cld
add
mov
enter
jnp
pop
add
xchg
stos
loopne
test
xlat
arpl
add
mov
aam
bound
pop
xor
push
sub
pop
mov
push
sub
ror
shl
pop
and
rol
push
shl
sub
sub
sub
pop
rol
push
inc
add
ror
pop
xor
inc
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
jle
arpl
aam
movsb
add
mov
mov
loope
add
rolb
xchg
add
nop
add
add
add
iret
cmpsl
mov
mov
add
push
mov
je
cmpsb
add
jl
out
add
data16
in
sahf
add
mov
lea
pop
cmpb
jne
add
push
push
push
push
lea
push
push
call
xchg
test
add
lock
add
xchg
add
jb
add
add
push
add
ja
mov
iret
add
add
add
lea
pop
cmp
je
push
dec
xor
pop
add
cmpl
jne
push
pop
xor
push
add
xor
pop
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
fldl
add
add
sahf
faddl
jle
flds
jne
rcrl
jns
mov
stc
mov
add
mov
push
jbe
out
orl
popf
cmpsb
mov
std
leave
stos
add
add
add
pushf
xchg
call
add
lahf
mov
lea
pop
pop
pop
push
add
ror
dec
pop
pop
push
push
push
push
push
push
push
push
push
call
xchg
out
fistl
sarb
add
out
insb
add
add
jns
add
roll
cld
xchg
add
add
jo
sti
xchg
add
mov
add
mov
out
mov
lea
pop
pop
push
add
not
pop
leave
push
lea
push
push
push
push
call
add
popf
in
add
lods
add
add
call
add
cmpsl
add
leave
mov
add
add
loop
lret
mov
push
sti
lret
jne
add
scas
xorb
scas
data16
test
jecxz
int
add
add
add
stos
mov
popa
adc
ret
push
inc
ror
add
lea
pop
mov
add
push
push
push
push
push
push
push
push
push
push
call
out
add
add
loopne
add
lret
add
jae
jge
push
add
cmpsl
repnz
test
jns
bound
loopne
pop
push
cld
push
mov
lods
mov
add
mov
in
cwtl
add
add
add
add
pop
out
cmpsl
fwait
jmp
add
outsl
in
add
aam
bound
pop
push
push
push
sub
xor
ror
pop
add
mov
push
push
push
push
push
call
lods
add
mov
in
jge
add
mov
add
add
cli
popf
add
rolb
add
lods
fisubs
add
clc
pop
jle
add
test
pop
add
add
pop
push
faddl
mov
ja
scas
add
mov
imul
int3
in
fmull
cmpl
push
push
call
add
add
jp
test
stc
iret
add
ljmp
pop
mov
pop
in
addr16
std
add
lds
fistpll
fwait
add
clc
rolb
add
mov
add
mov
xchg
mov
mov
fldl
fcoml
push
add
add
js
add
ljmp
test
mov
lea
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
ljmp
jecxz
add
mov
jge
add
je
mov
mov
add
add
jecxz
add
add
in
add
faddl
add
pop
out
mov
lea
pop
pop
push
add
add
xor
pop
mov
push
add
not
pop
push
call
push
add
ror
pop
xor
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
divl
movl
jecxz
add
cmpsb
loop
mov
fiadds
add
pop
imul
add
add
mov
add
imul
add
mov
loope
hlt
lea
pop
pop
push
sub
shl
pop
pop
pop
push
xor
xor
add
pop
pop
push
add
inc
ror
pop
pop
push
sub
inc
pop
leave
push
push
push
push
lea
push
push
call
add
add
push
mov
add
into
jle
add
testl
add
std
scas
js
jb
mov
jmp
lock
mov
add
mov
sbb
or
push
push
push
call
add
adcb
in
lds
add
add
mov
add
add
mov
ret
fwait
xchg
add
mov
add
stos
xchg
mov
rcr
out
mov
lea
pop
push
mov
push
lea
ror
lea
pop
add
push
push
sub
shl
pop
push
push
push
xor
pop
push
push
lea
add
pop
mov
push
shr
pop
push
push
dec
shr
lea
dec
pop
pop
push
not
pop
lea
push
add
lea
pop
sub
push
push
push
call
shlb
mov
add
les
add
xchg
add
scas
lret
add
test
lea
add
add
mov
data16
add
movsb
cwtl
push
pop
jl
pusha
lods
add
les
loop
lret
leave
mov
lds
pop
mov
shr
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
jae
in
jne
pop
jo
stos
push
pop
mov
add
add
add
add
push
addl
add
pusha
imul
add
add
add
faddl
data16
data16
fcmovu
add
pop
add
test
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
call
shl
in
mov
mov
out
add
pop
cmpsb
add
out
add
jae
jns
mov
ljmp
mov
add
add
add
jle
add
jbe
lods
add
nop
mov
jp
add
incb
sar
add
add
data16
add
mov
add
fcomi
in
add
pop
mov
push
add
add
pop
add
push
rol
lea
ror
shl
pop
pushl
push
push
push
push
push
call
mov
out
mov
roll
add
aad
out
out
add
icebp
add
xchg
add
cwtl
bound
add
add
add
jae
out
into
movsl
flds
or
pop
movsl
add
mov
cld
pop
add
je
roll
add
pop
popl
mov
push
push
lea
push
push
push
lea
push
push
push
call
shl
xchg
add
add
lahf
imul
add
test
add
repnz
add
in
fadds
movsl
push
push
jae
shl
add
add
mov
add
mov
xchg
jp
add
add
add
add
add
add
add
add
add
std
add
push
ret
pop
movsb
jecxz
fs
mov
lea
pop
add
push
not
rol
ror
pop
xor
push
lea
push
push
push
lea
push
push
push
lea
push
call
out
test
lods
add
js
add
add
les
lret
add
gs
pop
pop
push
add
pop
mov
add
add
jb
add
mov
add
add
bound
pop
lea
mov
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
test
int
loope
add
iret
filds
push
add
add
xchg
push
aad
mov
std
test
leave
push
pop
add
out
add
add
mov
stos
lcall
add
jne
xchg
ja
mov
add
xchg
lea
pop
add
push
ror
pop
xor
rol
push
push
push
push
push
push
push
call
add
mov
fdivrl
pop
add
add
mov
js
mov
add
fldenv
add
add
xchg
loop
add
xchg
add
xchg
hlt
in
popf
lret
cld
mov
mov
leave
in
push
mov
lea
pop
nop
nop
push
ror
sub
add
add
pop
xor
nop
push
push
push
push
call
mov
mov
add
popa
addb
loope
add
int3
lret
jnp
mov
add
add
jmp
rolb
jb
add
fiadds
add
loop
sub
popf
cmp
add
push
sbbb
int3
int
imul
mov
xchg
lods
icebp
add
add
mov
mov
out
fstps
jno
add
fisubs
add
int3
movsl
mov
out
mov
lea
pop
nop
push
push
push
push
call
add
movsl
add
pop
scas
pop
jo
imul
mov
fisubrs
jne
add
add
icebp
add
cmc
add
add
mov
loope
add
flds
jae
rcl
ror
cld
fimuls
mov
hlt
lea
pop
inc
push
add
shr
sub
pop
nop
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
push
out
jmp
scas
xchg
mov
pop
leave
add
jp
rcrb
push
add
jle
mov
add
clc
push
insb
add
in
jle
add
pop
mov
jecxz
loopne
lret
mov
add
mov
add
test
add
lock
add
and
nop
push
lea
push
push
push
push
call
loope
repnz
mov
add
shlb
shlb
mov
add
add
pushf
sti
out
add
call
addl
mov
ja
add
add
lret
add
rolb
sti
popf
std
add
add
add
add
js
insb
add
add
jecxz
add
sti
addb
xchg
add
add
xchg
loop
fmull
cmp
jne
push
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
sti
add
lds
int3
add
js
add
in
add
add
mov
add
filds
add
add
jne
xchg
pop
lods
fbld
insb
add
movsb
lock
ja
mov
mov
add
mov
scas
rcl
stos
add
mov
rolb
out
mov
add
add
popf
je
test
pusha
sub
push
shl
add
pop
nop
push
push
push
push
push
call
sub
ljmp
add
add
add
fs
sti
out
icebp
enter
pop
adcl
ja
scas
out
mov
add
icebp
xchg
shlb
add
call
lods
je
add
add
out
mov
lea
pop
cmp
je
nop
push
xor
pop
nop
inc
push
push
lea
push
push
push
push
push
push
call
aad
add
add
mov
popa
roll
mov
add
xorl
out
fadds
jecxz
add
add
jns
add
push
add
add
fwait
add
add
fucomi
push
les
xchg
sti
add
imul
mov
add
stos
add
mov
lea
pop
nop
push
inc
add
inc
pop
nop
push
push
push
push
push
push
push
lea
push
push
push
call
fwait
movsb
add
jb
pop
mov
xor
in
cmpl
add
mov
pop
mov
fwait
add
push
add
jle
add
add
add
mov
mov
arpl
test
mov
jno
add
mov
lea
pop
cmp
jb
xor
push
add
add
pop
jmp
push
shr
rol
xor
sub
pop
mov
push
push
push
call
add
cltd
xchg
test
shlb
scas
push
add
in
add
popf
pop
add
fs
popa
add
mov
add
add
loop
add
add
faddl
add
lods
add
je
mov
lahf
mov
lea
pop
add
movzwl
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
rolb
xchg
mov
mov
add
popf
fadd
add
hlt
mov
push
add
pop
jl
add
addr16
bnd
imul
push
lods
jl
cmpb
add
add
movl
jns
mov
mov
movsb
add
add
mov
mov
loope
mov
and
mov
lea
pop
mov
push
inc
sub
pop
add
mov
push
ror
pop
xor
xor
push
lea
rol
pop
shl
push
ror
pop
xor
push
sub
lea
shr
pop
shl
xor
push
inc
dec
lea
not
pop
shl
push
push
call
add
add
into
hlt
aad
leave
jmp
mov
fwait
stos
jp
add
lret
out
add
add
ja
add
add
pop
test
pop
add
leave
pusha
push
push
add
hlt
pop
add
mov
lea
pop
xor
mov
push
push
push
push
lea
push
push
push
call
add
call
into
add
add
jl
in
jl
testl
icebp
jbe
add
fwait
out
flds
lods
add
mov
movsl
into
lods
add
mov
add
add
push
mov
add
add
sti
out
mov
movsl
add
mov
add
mov
jnp
jns
lock
add
stos
nop
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
popf
add
add
add
lcall
in
add
add
xchg
add
add
divl
in
xchg
add
movsb
lods
mov
add
add
mov
add
pusha
popa
add
testb
mov
and
push
lea
push
call
cli
pop
pop
mov
clc
add
mov
icebp
add
mov
fistpl
cwtl
shll
orb
jns
xchg
add
add
cmpsb
std
add
or
pop
push
push
push
push
push
push
call
jmp
add
repnz
cmpsl
add
pop
arpl
xchg
add
mov
add
je
ljmp
add
xchg
loopne
pop
mov
jmp
add
add
add
xchg
add
lea
add
iret
jle
out
xlat
add
add
add
pop
add
cli
std
add
mov
lea
pop
pop
push
not
pop
leave
push
push
push
push
push
push
lea
push
lea
push
call
add
lock
add
add
jb
jl
mov
popa
test
jnp
add
add
jb
mov
mov
mov
add
mov
cmpsb
add
cld
lea
pop
ret
push
sub
lea
add
pop
push
push
lea
push
lea
push
push
push
call
roll
outsl
loop
add
push
call
push
mov
add
sahf
cltd
mov
xchg
fcoms
mov
add
add
push
xchg
popf
roll
ja
add
pop
mov
push
xor
sub
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
leavew
xlat
jo
add
add
loopne
lret
mov
add
push
add
rcr
add
jp
add
add
mov
add
ja
add
push
lret
ja
add
mov
mov
add
jl
mov
add
add
lea
pop
push
push
push
sub
pop
push
push
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
xchg
in
xchg
add
add
add
add
add
repnz
fnsave
repnz
jae
jbe
add
filds
jb
roll
add
add
add
enter
pop
mov
lea
pop
mov
mov
push
dec
add
rol
pop
test
je
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
fildl
add
int3
jnp
xchg
jb
add
stos
add
add
xchg
cmc
mov
add
add
add
movsl
mov
test
jns
add
cltd
push
lret
add
add
in
scas
pop
mov
mov
lea
pop
test
je
mov
push
push
lea
push
push
lea
push
lea
push
call
add
std
je
mov
add
stos
xchg
add
jae
fs
jmp
cltd
add
test
add
add
xchg
add
mov
popa
xchg
movsb
stos
movsb
lcall
lahf
test
in
add
add
mov
movsb
jns
add
movsb
add
add
mov
jb
jmp
fs
jmp
xchg
add
jl
ljmp
mov
lea
pop
mov
push
inc
inc
pop
mov
inc
push
inc
sub
pop
cmp
je
test
je
push
push
push
push
push
call
std
add
testb
add
add
xchg
fiaddl
lock
add
bound
push
hlt
add
add
add
stos
add
push
lock
movsl
sahf
add
add
shlb
add
imul
add
mov
jo
add
add
sti
data16
pushf
xlat
addb
mov
lea
pop
mov
push
sub
pop
inc
cmp
je
push
lea
push
push
push
call
movsl
add
xchg
mov
add
mov
rol
xchg
cwtl
add
fwait
add
les
iret
test
xchg
shll
stos
add
add
add
add
icebp
cmpsl
lahf
out
icebp
ja
add
push
mov
add
shl
mov
stos
xchg
add
add
jb
mov
add
mov
lea
pop
test
jne
xor
push
push
push
push
push
lea
push
call
add
push
add
std
into
stos
add
mov
push
sarb
in
add
add
xchg
add
fsub
cltd
add
add
test
fcoms
iret
add
add
add
gs
pop
fisttpll
rcrb
mov
lea
pop
pop
push
push
push
push
call
out
add
add
add
int3
mov
add
jbe
add
add
mov
add
xorl
into
add
add
xchg
pusha
mov
lea
pop
pop
push
dec
pop
pop
pop
push
xor
add
inc
pop
leave
push
lea
push
lea
push
push
call
mov
push
addb
aad
faddl
add
mov
xlat
pop
rolb
add
add
mov
nop
add
mov
les
add
xchg
flds
push
pop
add
addl
xchg
add
lods
mov
in
lods
lret
push
pop
add
pusha
icebp
cmpsb
add
fisubs
mov
fcompl
mov
lea
pop
ret
push
push
push
call
xchg
add
jge
insb
les
add
lcall
jne
add
add
stos
add
add
add
add
jle
les
mov
js
add
ret
jmp
popa
add
jo
cmpsl
aam
mov
lea
pop
mov
inc
push
lea
push
push
push
push
push
push
lea
push
push
push
call
test
mov
mov
addb
add
xchg
rolb
jl
add
push
addb
nop
cmc
loope
add
cltd
icebp
mov
push
pop
add
add
add
add
add
pop
add
shll
xchg
mov
loop
ret
mov
loopne
loop
add
xchg
mov
lea
pop
cmp
jne
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
rcll
cli
add
add
jo
in
std
movsb
add
lods
in
xchg
jbe
test
gs
mov
imul
in
add
cli
loopne
add
lret
mov
add
add
testb
data16
mov
loop
jno
lahf
mov
mov
pop
leave
add
cmpsb
pop
scas
add
les
popa
add
add
push
add
lea
dec
pop
mov
push
shl
shl
rol
pop
add
push
xor
pop
cmp
jne
push
push
call
add
pop
pop
pop
add
add
cmpsb
add
add
shr
add
add
mov
mov
lret
add
loopne
mov
add
pushf
arpl
cmpsb
rorl
pop
mov
push
lea
push
lea
push
push
push
push
push
call
push
pop
loopne
add
out
push
add
popf
mov
hlt
test
sti
add
in
lock
mov
mov
lods
add
mov
bound
add
add
push
popa
pop
mov
mov
add
add
add
insb
js
movb
pusha
add
popa
add
jp
lea
pop
test
je
mov
push
add
add
pop
add
push
ror
pop
cmp
je
push
inc
add
sub
shl
pop
jmp
xor
push
shl
pop
pop
push
xor
pop
pop
push
lea
push
lea
push
push
push
push
call
cmc
add
stos
add
add
add
into
jecxz
add
call
xlat
incb
repnz
add
jl
add
ret
pop
jno
jb
out
popa
add
push
stc
jbe
jnp
lds
lret
mov
add
ffreep
out
roll
into
cmpsb
add
jns
fmull
push
inc
shr
not
pop
pop
push
sub
pop
leave
push
dec
pop
ret
push
sub
shr
add
pop
lea
push
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
loope
add
je
add
mov
push
xchg
out
mov
fs
add
add
add
add
fnsave
test
add
add
imul
add
int
add
hlt
faddl
pop
lods
add
add
arpl
pop
pop
push
sub
pop
pop
pop
push
sub
shr
rol
shl
pop
leave
push
sub
not
pop
ret
push
push
push
push
call
add
add
push
cmpsl
mov
cwtl
shlb
sahf
leave
add
mov
add
pop
push
mov
add
sarb
pop
adcb
gs
add
aam
add
xchg
add
add
sahf
fimuls
add
add
add
push
mov
add
arpl
add
aad
add
push
push
mov
mov
lea
pop
mov
push
push
call
add
add
add
aam
add
mov
xchg
add
lods
fnstsw
je
xchg
add
popa
movsb
add
scas
mov
add
ret
add
mov
jecxz
mov
add
add
testl
mov
dec
lds
loope
scas
xor
pop
pop
push
push
call
push
icebp
stos
push
add
lods
test
testb
ret
add
in
add
push
add
notl
hlt
add
add
mov
add
cli
rorl
mov
add
jp
out
add
test
xchg
push
adcb
add
int
je
mov
rcrb
out
stos
add
popf
add
add
test
pop
pop
push
lea
push
push
push
push
push
call
add
add
add
roll
pop
xchg
add
fildll
push
in
add
insb
sahf
xchg
pop
insb
mov
mov
loopne
cltd
add
jle
add
mov
pop
lret
pop
xchg
test
pop
add
add
add
add
popf
xchg
arpl
pop
pop
leave
push
push
push
lea
push
push
push
lea
push
call
int3
jns
fildl
rolb
add
pop
call
add
insb
ja
push
add
add
enter
out
add
push
mov
sahf
lea
add
add
push
jbe
mov
mov
add
mov
sbb
ret
test
jae
or
push
test
jb
into
push
push
jecxz
jae
in
jae
test
jae
je
jb
mov
je
mov
push
roll
push
imul
aas
mov
mov
cld
add
xor
cmpsb
dec
inc
push
dec
arpl
cmpsl
clc
aad
xor
mov
cli
rolb
clc
int3
js
xor
push
jnp
inc
ljmp
scas
sbbw
addr16
jns
xor
inc
out
mov
add
or
and
je
jbe
cmp
repz
orb
rclb
dec
adc
mov
add
add
dec
or
push
pop
inc
scas
lods
scas
aas
popw
dec
inc
xchg
sahf
pop
mov
pop
aam
cmp
xor
in
pop
xor
in
inc
jge
or
subb
ss
sbb
add
mov
dec
insl
mov
scas
dec
xor
inc
inc
mov
mov
in
mov
mov
fsubrs
add
lock
pushf
leave
pop
mov
sub
jl
lods
adc
fisubs
mulb
adc
or
mov
popf
sub
lock
and
clc
pop
pop
lods
out
jb
xchg
or
std
jecxz
or
clc
adc
jge
xlat
test
inc
xor
das
adc
mov
adc
outsb
push
outsb
sub
popa
or
cmp
loop
dec
adc
push
mov
inc
cmp
fimuls
mov
ja
add
test
insl
cmc
nop
gs
inc
incl
xlat
push
lcall
addr16
xchg
dec
adcl
xchg
mov
adc
mov
sbb
js
js
or
mov
mov
push
sub
jno
sbb
sbb
cs
mov
push
xorl
push
jge
shll
stos
arpl
push
jnp
repnz
add
pop
loopne
mov
lcall
and
jge
into
int
add
out
lcall
xchg
inc
sbb
adc
fnstsw
mov
cwtl
pushf
outsl
out
cli
lods
imul
movsl
mov
outsl
pusha
cmp
inc
iret
jno
shlb
xor
or
lods
adc
pop
movsb
mov
and
push
pusha
inc
inc
fnstsw
mov
in
lret
iret
sub
aas
add
lahf
jge
insl
mov
out
push
xor
mov
inc
popa
in
outsb
mov
mov
xor
dec
sbb
pop
mov
jecxz
sub
fbstp
lea
sti
loope
les
lea
cld
xchg
sbb
add
leave
lret
mov
cmp
cmp
daa
ljmp
fsts
and
mov
gs
ss
mov
popa
mov
repnz
imul
adc
and
subl
sbb
lret
or
call
and
stos
jbe
jnp
cmc
adc
dec
imul
jne
dec
mov
mov
cmpsb
das
sub
or
mov
dec
arpl
ss
jmp
loope
adc
mov
hlt
adc
int
push
and
sbb
add
sbbl
mov
jbe
or
in
rcrl
mov
aas
in
scas
imul
mov
je
add
sub
les
loop
out
dec
jo,pn
dec
nop
cltd
sbb
in
lods
inc
lds
mov
sub
int3
repnz
push
jns
jo
adc
xor
aam
add
pushf
lret
push
xchg
jmp
mov
bound
and
sahf
or
mov
dec
cmp
adc
iret
stc
inc
dec
in
cmpsl
or
pop
popa
ja
sbb
jae
aas
push
mov
cmp
lret
enter
int
andb
adc
dec
cmp
pop
pmullw
jp
bound
or
hlt
fs
jo
xchg
cmp
push
rcrb
dec
repnz
mov
mov
xchg
cwtl
adc
push
mov
js
inc
loope
ret
push
ret
xchg
adc
fndisi(8087
inc
je
inc
dec
outsb
inc
cmp
push
xchg
into
sti
adc
push
push
sub
or
mov
test
jge
mov
cmpsl
dec
or
cmpsl
add
inc
mov
rcrb
in
push
push
lret
xchg
xchg
jp
sub
pmaddwd
icebp
mov
add
mov
push
bound
xchg
pusha
xlat
adc
jae
cld
and
add
dec
mov
push
sahf
push
sahf
xchg
xchg
out
stos
xchg
jno
arpl
lods
clc
adc
mov
rol
sub
mov
pop
dec
rorl
push
dec
cmpsb
fisubrs
sahf
mov
fsts
stos
sti
dec
add
dec
dec
or
mov
call
lret
fisubl
cmovnp
arpl
aas
icebp
jno
fbstp
xor
shl
ss
inc
nop
jg
add
inc
cmpsb
adc
or
in
pop
inc
ds
jne
jno
gs
push
aas
sbb
push
xor
cli
adc
mov
cmp
sub
pop
adc
test
jle
fildll
jbe
cmp
adc
dec
fldcw
inc
jno
movsl
xchg
cwtl
mov
sbb
xchg
fisttps
mov
push
mov
add
pop
mov
and
dec
fidivrs
ret
das
stc
sbb
and
mov
test
ljmp
aad
sti
lret
push
imul
jmp
mov
cmpsb
enter
pop
addl
add
add
mov
push
mov
test
popf
xor
movsb
adc
jmp
adc
repz
inc
ljmp
xchg
aas
cld
lods
les
push
movsl
mov
int3
insb
aam
mov
dec
inc
xor
out
in
ret
push
call
rclb
inc
cmpsl
pop
pop
fmul
std
insl
cmc
push
mov
push
fiadds
out
mov
inc
sub
scas
or
add
repz
push
roll
push
push
in
add
push
outsb
arpl
lahf
jno
in
imul
fs
pop
or
xchg
jl
stos
pop
inc
pop
mov
in
inc
jmp
mov
pushl
add
and
push
sbb
ljmp
pop
enter
cmpsl
popf
jns
add
push
cld
sbb
mov
lahf
push
repz
xor
pop
hlt
mov
cmp
std
cmp
test
movsb
jmp
es
add
pop
inc
push
pop
xchg
sti
mov
cmpl
mov
punpcklwd
ja
mov
adc
pop
pop
cmp
out
jl
pop
cmc
ljmp
push
lods
fdivl
in
pop
jns
fistpll
iret
lock
mov
movsb
mov
hlt
xor
inc
adc
std
or
push
or
mov
sahf
or
cli
out
xchg
shrb
scas
cmp
mov
scas
push
iret
jne
loope
test
hlt
xchg
dec
daa
outsb
sarb
shlb
lret
push
mov
sub
push
push
sub
std
cmpsb
cli
add
fcomps
adc
les
imul
jns
dec
sub
add
mov
je
inc
fidivl
inc
lret
pop
adc
test
xor
ljmp
push
mov
rolb
stc
push
sbb
cmc
jp
mov
adc
and
stc
adc
dec
cmp
and
xchg
adc
xor
jnp
and
das
sbb
out
mov
mov
sbb
and
lods
mov
xor
addr16
push
out
xabort
insb
cmp
inc
ja
ret
shlb
mov
fimull
mov
out
scas
add
mov
mov
push
sub
loopne
stos
dec
mov
mov
fstpt
rolb
rcr
push
push
inc
ja
jns
insb
adc
adc
fdivrl
stc
in
push
fmuls
pop
xchg
xor
lds
sub
inc
pop
mov
mov
mov
cmc
mov
fidivrs
xchg
in
jle
imul
lret
in
shlb
fmull
mov
cmp
dec
cmc
enter
ja,pt
sahf
lods
jne
jg
dec
into
adc
test
test
adc
cmpsb
mov
push
repz
xor
std
mov
dec
mov
cmc
sbb
mov
lds
sbb
out
inc
mov
mov
icebp
xchg
fs
lock
repz
cmpb
jb
in
ljmp
mov
or
mov
cwtl
pop
call
jle
inc
ss
jmp
add
add
aaa
cmp
xchg
cmpl
ss
sbb
jno
mov
lock
insl
jge
or
stos
fcmove
sti
mov
mov
insb
ss
xchg
pop
xchg
int3
sbb
mov
sbb
ret
loopne
mov
inc
or
sbb
shrb
adc
mov
sub
mov
mull
arpl
test
das
sbb
movsb
cmp
pop
frstor
out
sub
fs
outsl
mov
ret
cwtl
aam
inc
imul
cld
add
mov
push
adcl
inc
iret
cli
shlb
xor
enter
in
orb
lods
arpl
xchg
sar
cmp
stos
fisubs
xor
mov
insl
mov
test
fistps
sub
dec
xchg
inc
jecxz
test
test
inc
inc
mov
sbb
inc
push
push
or
filds
jg
pop
addb
fsubrs
fsubrs
or
cld
pop
pusha
adc
inc
or
pop
push
jns
mov
mov
xlat
sbb
inc
jmp
into
mov
test
mov
rclb
cmpsl
ljmp
sub
cwtl
mov
sub
scas
hlt
cmpsb
inc
cmpsb
dec
test
fistpll
adcl
xchg
mov
mov
and
in
dec
adc
sub
jecxz
cltd
shll
daa
and
jp
cmp
sub
fwait
cmp
icebp
inc
push
jns
jns
test
and
and
mov
adc
and
loope
xor
gs
mov
cmpsb
xchg
bnd
mov
or
lret
popf
in
nop
add
sbb
fdivs
loop
popa
fwait
sti
daa
mov
movsl
or
dec
out
scas
mov
push
ss
dec
mov
daa
inc
lret
dec
popf
jmp
or
outsl
adc
daa
pop
je
imul
push
fwait
jle
cmpsb
pop
in
cs
jae
orb
popa
ret
adc
mov
out
pushf
clc
lds
cmp
lods
cmp
inc
in
fmull
cmp
jmp
pushf
dec
rorb
xchg
mov
sahf
hlt
mulb
fstl
daa
push
fisttpll
push
push
sti
pop
and
mov
dec
adc
pop
cmpsl
imul
mov
ret
and
and
sbb
insb
pop
rclb
push
es
inc
sar
xchg
jecxz
dec
lret
push
fcomps
and
sbbl
xchg
and
dec
lret
pop
les
sub
mov
jbe
ret
leave
lds
adc
ret
movsb
cmpsb
enter
js
push
push
dec
push
cwtl
aam
stos
mov
jb
lea
mov
and
jg
add
test
xchg
xlat
lock
mov
loope
insb
outsl
xor
stc
sub
sahf
and
ljmp
ret
mov
in
mov
and
mov
shlb
sub
cmp
stos
mov
insb
mov
mov
in
sub
push
sti
sub
fwait
cli
inc
cmp
mov
int3
mov
hlt
push
and
mov
dec
jp
cli
mov
sbb
lret
stos
pop
inc
xlat
data16
pop
test
and
orb
cmpsl
sarl
hlt
sahf
xchg
mov
cli
fwait
xor
jns
std
call
jmp
xchg
xchg
sbb
dec
cmp
push
popl
and
cmp
mov
int
arpl
push
pop
sahf
push
cmpl
cli
add
xchg
insb
inc
xchg
daa
dec
mov
sub
inc
pop
xchg
push
mov
sti
pop
scas
enter
out
decb
das
mov
loope
push
pop
sub
das
std
sbb
sbb
int
into
mov
inc
xor
or
cltd
idiv
aad
insb
loope
fcom
cmp
fldl
incl
push
xor
test
dec
jne
aam
fistpll
push
sbb
clc
lods
dec
jno
cld
insl
inc
lods
sahf
test
lock
sti
incl
popa
mov
cmp
cmp
jne
cmp
mov
jbe
mov
mov
xchg
negb
mov
pushfw
push
loopne
and
nop
cmpsl
aaa
cmp
std
gs
ja
sbb
rsm
outsl
fs
add
nop
and
mov
out
inc
inc
inc
std
jns
jno
pop
jo
mov
sbb
shll
fcmovb
mov
cmp
xor
pop
push
hlt
sbb
sti
push
repnz
in
int3
arpl
faddl
fdiv
pushf
mov
sbb
jmp
push
sub
or
mov
sti
out
nop
push
cmp
xor
xchg
mov
inc
add
jmp
xor
outsl
mov
or
inc
dec
cmp
sti
shrl
xchg
xchg
mov
mov
mov
xorl
sbb
jnp
jo
lahf
dec
in
aas
andl
enter
movsb
fstpl
mov
or
add
in
or
push
das
cmc
jb
call
xchg
xchg
push
push
bound
mov
popf
pop
mov
or
mov
mov
sbb
dec
jo
cmp
pop
inc
jne
in
and
aaa
mov
add
stos
int3
jb
xlat
pusha
push
lock
xchg
jge
jb
je
jb
std
cmpsl
dec
leave
lea
jae
push
xor
sub
pop
push
mov
jbe
outsl
fcmovu
push
jecxz
push
and
push
aaa
xchg
out
add
cmpsb
jecxz
inc
lock
in
ds
mul
inc
fdivrp
fwait
lods
imul
sbb
inc
xor
dec
lret
inc
subb
xchg
adc
mov
sub
sahf
xchg
js
inc
pop
cld
lahf
rcrb
leave
lret
cmp
data16
push
or
or
mov
into
sarb
fidivrl
sbb
jmp
dec
push
int
sub
push
cmpl
cmp
cld
mov
into
inc
out
jge
and
mov
enter
hlt
loopne
in
arpl
fisubrs
xlat
out
jge
sbbl
xchg
cmpsl
test
cmc
in
or
and
or
lcall
cmpsb
ret
aad
lret
and
adc
add
inc
scas
xchg
push
sbb
jae
test
ret
ud0
test
jns
mov
out
push
jecxz
das
pop
nop
jae
je
jmp
add
mov
lds
lcall
cli
test
mov
mov
mov
sbb
imul
mov
cmovno
xchg
mov
cmp
push
jo
inc
cmpsl
and
sbb
and
push
dec
jg
cs
movsl
mov
lfs
in
sbb
std
popf
hlt
fildll
lock
fwait
ljmp
xlat
scas
outsl
xor
mov
pop
push
testl
pop
dec
jl
mov
jg
mov
and
dec
ds
pop
outsl
sahf
cmp
jmp
leave
add
fidivrs
ficoml
mov
or
shll
xchg
inc
mov
mov
nop
popa
jle
out
and
sub
in
lods
inc
rcr
rclb
sarb
inc
dec
push
outsb
pop
add
cmp
adc
jecxz
push
mov
in
jb
pop
pop
inc
pop
je
pop
push
das
int
stc
xor
stc
adc
jp
fwait
clc
adc
add
ss
add
je
push
push
int3
adc
jmp
dec
in
ds
hlt
jbe
fidivs
stos
stos
jmp
out
orb
push
test
sbb
call
popa
in
lds
mov
sti
sbb
xchg
pushf
stos
mov
divl
sbb
popa
mov
dec
mov
testl
xor
into
lret
jmp
jae
xorb
xchg
shlb
int3
cltd
and
jo
mov
jbe
push
cld
loopne
std
push
mov
xor
sahf
dec
in
mov
iret
push
dec
ss
adc
pop
sbb
xor
pusha
in
inc
call
jns
in
xchg
imul
addr16
adc
pop
push
xchg
xor
shrl
out
or
mov
pop
dec
bound
cmp
addr16
lods
mov
inc
jge
sub
cmpb
ja
jp
lds
mov
scas
fwait
pop
xor
pop
xchg
adc
icebp
push
jb
jp
popf
mov
lahf
jnp
add
mov
jp
test
dec
or
dec
and
bound
push
pop
in
das
cmp
bound
scas
addr16
aaa
cmp
add
out
div
fwait
dec
leave
neg
je
loopne
jg
sub
jge
repnz
js
nop
pusha
xor
leave
push
pop
outsl
cmpsl
aaa
cmc
add
mov
std
dec
outsb
scas
push
push
jno
pop
push
sub
mov
sbb
add
pop
sub
popf
les
jb
pop
and
mov
pusha
test
push
popa
xor
cmp
push
pusha
inc
xlat
out
in
add
dec
ret
lret
or
pop
bound
mov
imul
imulb
mov
test
lods
movsb
out
dec
xlat
push
and
outsb
or
cmpb
adc
xchg
jle
add
out
adc
sbb
mov
xor
sub
mov
xchg
mov
test
sub
bound
push
cwtl
xor
sbb
sbb
push
out
and
and
mov
xlat
mov
fcomps
pop
xor
fisubl
dec
ss
cmp
mov
cltd
in
add
add
adc
imul
pop
data16
pushf
mov
nop
lcall
and
cmp
bound
dec
fdivrs
popa
negb
pop
jle
and
mov
fsubs
jl
inc
xchg
loopne
sub
adc
bound
inc
notb
dec
addr16
sub
jbe
cmp
nop
in
cmp
adc
xor
push
in
pop
in
xor
xor
xchg
xchg
icebp
loope
cwtl
popa
adc
mov
scas
mov
stos
pop
inc
shl
add
mov
inc
xchg
jb
aam
js
add
pusha
or
jecxz
xor
sub
sti
lds
jle
push
rcll
inc
cmp
and
arpl
std
dec
stos
sbb
push
jae
cmpsl
fcomp
pop
lahf
xlat
xchg
pop
pusha
nop
pop
insb
add
outsl
in
mov
arpl
push
mov
cli
adc
insl
push
sbb
addr16
fnstcw
add
insb
sti
push
inc
mov
insb
xchg
push
insb
and
xor
sub
out
cmp
mov
outsl
and
pop
push
xor
or
fwait
rclb
fsubrs
lods
in
pop
lds
xchg
icebp
jmp
lds
iret
mov
stos
cmpl
mov
xchg
jmp
cmc
add
lret
stos
inc
inc
out
outsb
sbbl
adc
or
pop
arpl
lods
pop
andb
mov
add
popf
int
xlat
cs
js
inc
dec
and
push
add
cmpsl
push
insb
sahf
lds
in
add
ds
jb
push
mov
fs
jmp
in
es
xchg
cltd
mov
jle
and
mov
add
dec
add
mov
je
jo
xchg
mov
adcb
mov
push
mov
mov
je
xchg
xor
pop
lcall
push
es
dec
sub
js
jecxz
jo
inc
and
inc
or
push
mov
jg
and
mov
mov
daa
push
push
ds
inc
in
mov
fisttpl
jae
andl
dec
lret
jbe
jb
fwait
out
and
movsl
xor
adc
push
bnd
iret
aad
fists
mov
in
lock
ja
jo
or
add
pop
sarl
outsl
push
adc
mov
mov
notb
pop
mov
addr16
push
add
popa
and
stc
out
int
imul
pop
mov
jge
mov
add
fldenv
imul
push
mov
push
cwtl
lea
scas
sbb
jne
scas
mov
push
hlt
jns
inc
sub
mov
xorb
push
dec
xor
add
push
mov
jecxz
dec
fistl
push
mov
mov
mov
sub
or
or
xchg
imul
vminsd
jb
or
mov
out
sub
inc
lods
ja
mov
div
xor
cmpsb
lret
pop
fsubrs
test
addl
and
fwait
ljmp
mov
pop
mov
aad
mov
idivl
adc
xor
or
mov
pop
mov
icebp
filds
mov
push
ret
jbe
hlt
xchg
es
push
out
adc
test
dec
xchg
cmp
das
or
adc
lock
iret
jg
cmp
add
mov
mov
je
sub
add
rcrb
test
test
outsl
outsb
arpl
data16
xchg
cmc
test
daa
inc
xchg
hlt
int
fucomi
stos
idivl
mov
aaa
cwtl
dec
mov
cmpsl
and
or
rol
add
mov
test
adcl
in
cmp
mov
push
daa
shrb
je
jo
push
mov
add
enter
jns
adc
shl
jnp
daa
jne
leave
and
cwtl
leave
cli
lock
fistl
aas
mov
in
out
mov
push
imul
in
insl
fcoms
xchg
outsl
cmp
fdivs
push
inc
imul
test
push
xor
sub
add
dec
dec
and
and
jge
add
fdiv
mov
and
or
sub
mov
adc
xor
adcl
pop
hlt
out
orl
popa
bound
dec
jb
outsl
jl
sub
test
loop
add
sub
das
stos
sahf
mov
xchg
shl
iret
imul
int
mov
in
or
aam
add
xchg
cmp
fsubrs
mov
cmp
or
pop
inc
arpl
pop
fidivrl
out
movsl
out
scas
sbbl
or
aas
stos
loopne
xchg
mov
sub
std
pusha
scas
imul
xlat
mov
cltd
in
jne
jg
stos
mov
jg
lods
mov
imul
lods
iret
pop
cmpsb
scas
xor
adc
dec
ljmp
xlat
or
int3
cli
and
arpl
rcrl
lods
inc
jns
jb
xchg
push
xlat
stos
xor
sbb
jnp
f2xm1
add
mov
or
sbb
push
and
imul
mov
stos
push
mov
jbe
icebp
xchg
or
cmpsl
fisubrl
mov
mov
popl
jno
std
ret
sbb
loope
mov
dec
ja
add
daa
mov
or
mov
xchg
cmp
notb
popa
mov
stos
jge
mov
pop
jg
pop
fs
cmc
lret
lea
mov
jge
repnz
push
dec
adc
xlat
cltd
xchg
rclb
outsl
test
add
mov
jle
lea
pop
xor
xchg
inc
adc
in
outsl
test
dec
imul
imul
sbb
enter
pushf
xor
out
jle
outsb
cwtl
in
mov
ret
mov
add
jg
push
ljmp
mov
movsb
testb
sub
mov
mov
in
xor
daa
arpl
repz
repz
jae
mov
les
lds
insb
in
shl
loop
adc
rcrl
repnz
imul
adc
cmp
mov
mov
cmp
inc
dec
enter
cld
xchg
push
in
jne
popa
fidivs
stos
lods
les
imul
iret
scas
pop
push
dec
out
rcl
cmpsb
ret
and
sbb
or
enter
or
inc
movsb
je
ficoms
movsb
jmp
dec
inc
cwtl
shll
xchg
cmp
pop
lock
sub
push
mov
lret
out
pop
jmp
cmpsl
in
add
xor
pop
js
rcrb
add
lcall
lods
mov
rorl
in
fs
jno
daa
xchg
in
sub
into
ja
xor
xor
scas
bound
das
sub
dec
leave
fldt
les
aas
adcb
mov
test
mov
push
lods
add
repnz
jge
dec
in
lret
popf
jae
sub
shll
fisttpl
xchg
mov
nop
mov
cmc
cmp
xor
push
adc
lret
dec
inc
and
outsb
aaa
mov
shll
add
pop
mov
aaa
sbb
int3
cmp
scas
ret
imul
bound
jmp
push
jbe
push
sbb
and
scas
les
jg
add
pop
adc
mov
cld
cmpsb
ja
movsb
pop
mov
aam
or
sub
fnstsw
push
mov
add
adc
xor
adc
dec
cld
jo
dec
cmc
shlb
add
push
loope
sub
adc
jb
repz
xchg
mov
movsb
lods
les
jmp
lds
jae
cltd
adc
cmp
mov
pusha
dec
stos
stc
adc
mov
or
mov
sbb
jle
imul
xor
pushf
in
stos
push
movl
imul
and
jns
push
fstl
hlt
outsb
inc
mov
and
lret
pop
mov
xor
mov
es
addb
pop
sub
jbe
and
movsl
fisubl
iret
orb
fstpl
int
mov
pop
stc
mov
mov
mov
mov
xor
jbe
repz
xchg
int
in
sahf
popl
push
mov
repz
sti
loop
jmp
stc
push
xchg
push
add
idiv
in
cmp
cmpsb
dec
jp
mov
xchg
sub
scas
or
or
adc
pushf
movb
jmp
pop
ficompl
or
test
inc
xchg
and
fbld
lret
aam
cmp
mov
std
xor
cwtl
pop
push
xor
cmp
dec
or
rcll
leave
insl
sbb
loopne
movsb
push
sub
test
aad
das
lock
stos
mov
divl
sub
mov
push
roll
adc
sub
sbb
push
aas
lahf
daa
push
shrb
mov
mov
addr16
mov
mov
cs
sahf
push
in
push
xlat
cmc
aas
cmp
mov
xor
inc
dec
imul
push
or
dec
rclb
sbb
aam
mov
xlat
xor
insb
cmp
jl
push
fcomi
stc
rolb
sarl
and
sbb
mov
sti
sbb
bound
imul
loope
dec
es
fstl
bound
sub
out
mov
icebp
and
fidivs
imul
push
lea
xor
xchg
inc
lret
xor
inc
or
aaa
mov
daa
xchg
jecxz
cmp
dec
ret
jmp
in
scas
pop
and
ret
sarb
or
test
gs
dec
add
or
sub
adc
xor
push
jne
fistpl
xchg
add
dec
fwait
stc
test
cmp
xor
dec
sbb
xlat
iret
aas
sti
cmp
jo
dec
dec
mov
pop
stos
push
sbb
cmc
rcrb
xor
fbld
pop
pusha
mov
cli
pop
loop
mov
ljmp
movsl
shlb
or
daa
cmp
aas
out
cmp
and
notl
mov
jne
pop
or
xchg
pop
push
xchg
fwait
adc
xor
sub
mov
adc
or
shrb
jb
pop
mov
and
inc
mov
mov
scas
stos
int3
mov
mov
cmpsl
cmc
cli
nop
ljmp
scas
push
aam
rcrl
lods
xchg
btrl
jnp
enter
mov
adc
jmp
jl
sub
inc
idiv
rorl
rorb
nop
rcrb
jno
rolb
mov
sub
jnp
loope
out
jae
jb
pop
dec
inc
cmpsl
sti
adc
push
push
dec
push
ffree
cmc
xor
push
xchg
inc
mov
sbb
leave
fcoms
fsub
jecxz
int3
faddl
adc
leave
outsb
sub
pop
sbbb
pop
in
dec
xor
ljmp
repnz
popa
inc
dec
xor
int
mov
rorb
dec
mov
lcall
cmp
fs
mov
sub
inc
aas
sahf
cmp
push
push
into
sub
out
loopne
cltd
sbb
inc
fistpl
movsl
insb
jle
in
hlt
cmpsb
roll
loope
push
mov
addr16
push
sarb
cwtl
imul
or
in
or
mov
xlat
and
jbe
jo
xchg
or
push
xchg
insl
cmp
cmp
sti
inc
popa
inc
jp
dec
dec
popa
imul
movsl
lea
jl
mov
jmp
push
sbb
aaa
jno
orl
icebp
sub
lcall
jmp
in
push
scas
jge
fbld
adc
mov
in
inc
movsl
stos
inc
add
dec
in
mov
aad
add
add
add
out
outsb
sbb
or
sbb
inc
dec
xor
add
sbbb
call
jl
icebp
int3
gs
xor
in
jmp
push
xchg
out
dec
aas
out
outsb
popa
mov
inc
and
out
and
xchg
adc
out
xor
scas
out
cmp
bound
xor
repnz
pop
xor
pop
nop
sti
sub
ss
mov
loopne
inc
imul
push
mov
or
mov
fadd
cmp
dec
pop
jge
mov
nop
sbbb
mov
cwtl
lahf
add
pusha
cs
js
xor
jmp
cmpsb
add
mov
call
dec
cmp
dec
xor
dec
aad
xchg
aad
jecxz
das
pop
jmp
mov
sbb
ret
rep
fcmovu
cmp
test
push
ja
je
shrl
and
xor
frstor
sbb
adc
pop
add
test
clc
mov
out
scas
mov
pop
lcall
jno
scas
push
xor
xor
sti
hlt
loop
push
fisubrl
clc
jmp
imulb
int3
jb
sub
or
adc
int3
mov
cmp
and
test
jo
mov
fldt
out
add
mov
mov
or
jae
pop
push
mov
jo
xchg
adc
mov
lea
and
ficomps
mov
mov
sbb
fidivs
push
or
pop
jp
addr16
decb
das
mov
scas
dec
push
pop
in
lret
int
js
repz
shll
or
jecxz
cmpsb
sbb
inc
sbb
outsb
cmpsb
int3
xor
sarb
fisttpll
out
dec
aad
mov
clc
mov
cmp
push
in
pop
std
popa
stc
adc
mov
mov
xchg
cmp
sbb
push
mov
or
fadds
lret
add
lock
pop
cmp
xor
jl
orb
mov
daa
aas
out
cld
in
sub
out
inc
call
push
xchg
pop
es
in
outsb
xchg
fnop
inc
push
sub
jmpw
mov
mov
xchg
sti
nop
pop
scas
loope
sbb
mov
in
cwtl
jbe
cli
xchg
and
testb
xchg
lods
cmpsb
xor
mov
push
popf
shrl
xchg
in
movsb
stos
mov
jg
inc
push
cmc
mov
repz
call
stos
jmp
cs
data16
push
mov
out
aam
add
mov
sub
stos
mov
in
ljmp
jge
push
pusha
lret
loope
mov
inc
test
push
xor
fldenv
add
ret
es
and
dec
andb
dec
fwait
and
fs
ljmp
cmp
or
fst
push
jge
mov
lods
mov
in
in
jbe
dec
push
out
xchg
in
sahf
repz
sbb
mov
mov
or
unpckhps
and
jecxz
outsl
dec
popf
dec
xchg
addr16
lds
lret
pop
stos
sbb
pop
aad
jecxz
push
arpl
sbb
add
push
gs
xchg
dec
sbb
test
xor
int3
push
mov
aaa
faddp
mov
and
dec
gs
insb
xor
rorb
sahf
dec
outsl
xchg
xor
lcall
in
mov
or
xchg
fcomps
sub
adc
inc
push
out
insl
lods
aad
mov
xchg
outsb
rcl
into
shrb
mov
cmc
jmp
rolb
mov
xchg
sub
sub
call
jle
xchg
insb
inc
movsb
mov
mov
xchg
jnp,pn
cs
inc
mov
cmpsb
aam
pop
ja,pt
sahf
data16
and
and
mov
xchg
ret
jg
pop
mov
xchg
sarl
mov
fdivrs
xlat
scas
inc
cwtl
jo
sbb
fnstsw
sub
ja
or
movsb
dec
push
jae
gs
enter
xchg
sub
mov
insl
lret
sub
out
dec
andb
xor
xchg
push
push
std
mov
pop
loopne
adc
jl
dec
imul
push
xor
mov
push
pop
inc
movsb
ljmp
pop
sbb
dec
mov
lock
gs
out
es
rorl
stos
xor
or
out
jecxz
cld
cmpsb
pop
cmc
ja
imul
push
or
shll
sbb
mov
or
das
sahf
mov
inc
aam
mov
jae
sti
iret
mov
test
ss
test
pop
cmp
ss
xchg
inc
push
and
scas
or
cmpsl
pop
inc
pop
adc
mov
lcall
mov
xchg
loope
add
fdivl
lea
insb
cld
push
push
adc
jg
and
inc
psubw
mov
mov
push
and
or
sti
adc
inc
pop
pop
sbb
xchg
xchg
inc
mov
movups
in
mov
jbe
fdivl
js
sbb
clc
pop
or
xchg
sub
mov
pop
sahf
imul
push
hlt
xchg
fcmovb
adc
xor
adc
add
movl
or
in
scas
int
loopne
xor
movsl
hlt
fs
das
mov
jae
mov
out
dec
cmc
rcll
cmp
jns
insl
mov
mov
adc
mov
push
xchg
out
js
cmp
push
into
js
hlt
scas
imul
sub
mov
mov
push
pusha
and
std
cmp
icebp
and
outsb
mov
sbb
jecxz
inc
pop
sbb
inc
cmc
dec
fs
data16
xor
imul
xor
aas
jge
pop
inc
fidivrs
mov
sub
outsl
inc
adc
stos
into
inc
or
popl
mov
jle
pop
pop
mov
inc
shlb
jmp
pop
xchg
scas
lock
imul
popa
ja
pop
mov
xchg
shlb
pop
cmp
jb
insl
pop
pushf
lea
jbe
xor
push
push
or
mov
sarl
cmp
add
xor
xchg
push
push
imul
jo
in
stos
mov
mov
jo
jne
xchg
fisttps
cltd
cmp
daa
jmp
dec
xor
jecxz
pop
dec
xchg
adc
into
lcall
lcall
adc
mov
adc
lret
loope
insl
mov
outsb
push
cmp
jl
push
xor
xlat
popa
push
pop
push
fdivl
xchg
push
mov
xor
repnz
enter
jle
mov
jae
pop
adc
movsb
cmp
mov
push
std
das
insb
add
bnd
jns
push
movsl
jo
fisubs
and
cmp
aad
out
dec
test
lods
pop
test
jmp
repz
push
xor
mov
fstl
test
sub
test
call
dec
sbb
cmpsb
cli
dec
and
das
cmp
pop
mov
jo
add
in
mov
aas
xchg
jb
ljmp
xor
xor
push
mov
mov
lock
mov
or
and
sti
in
push
push
dec
sbb
out
inc
lock
repnz
pop
push
sbb
dec
test
inc
in
xchg
xchg
xchg
in
popa
not
dec
loope
pop
enter
jo
sbb
cld
jo
clc
dec
aas
or
xor
loope
sub
pop
data16
popa
push
mov
xchg
repz
jne
leave
out
inc
out
or
xchg
andl
adc
mov
in
movsb
jmp
sbb
sub
mov
stos
ds
mov
xchg
mov
or
dec
sbbb
adc
mov
mov
push
push
pop
fiadds
push
sub
sti
jns
inc
cmp
in
mov
les
cmp
hlt
mov
inc
dec
test
cs
jo
pop
and
sub
inc
lcall
inc
popa
jp
std
pop
out
jge
gs
mov
mov
cmp
fdivrl
pushf
lods
lea
ret
adc
inc
and
mov
jle
cmp
cs
sbb
jge
fmul
adc
inc
outsb
mov
ljmp
pop
inc
cltd
into
mov
ret
mov
cs
fldt
nop
push
mov
fsubl
inc
mov
insb
xchg
out
jb
mov
add
shrl
lahf
daa
lds
add
push
pusha
lret
mov
rcrb
xor
mov
roll
push
push
outsb
push
lcall
push
push
ds
xor
es
mov
movsl
dec
pop
iret
push
lret
xchg
mov
lods
fcmovnu
loop
cmpsl
scas
mov
cmc
xlat
dec
sbb
pop
xchg
sbb
inc
loopne
inc
adc
cmp
xlat
jae
movsl
xchg
dec
fidivl
sub
inc
xor
pop
fimuls
add
jl
cmc
push
mov
jae
call
outsl
scas
mov
shll
scas
sub
sub
shlb
sub
addr16
loop
mov
cli
push
pop
andb
mov
mov
aam
pop
lret
adc
sub
imul
xchg
xchg
cltd
mov
jno
jb
adc
sbb
repz
js
mov
ljmp
mul
mov
cs
aam
sbb
sub
xor
repnz
fidivs
mov
testl
outsb
scas
adc
ret
push
leave
mov
mov
push
push
push
dec
sbb
cmp
idiv
lret
xchg
fnstenv
cwtl
icebp
add
or
in
mov
pop
xor
adc
bound
jmp
sbb
fbld
mov
rorb
sbb
cmpsb
push
ret
lock
and
or
adc
dec
fsubrl
jge
daa
mov
push
fwait
xchg
mov
adc
xor
mov
mov
sbb
xor
sbb
cmp
cmpl
pop
shl
aas
fmull
mov
mov
cld
pop
sub
add
sbb
pop
and
jmp
cmp
mov
inc
inc
repnz
cmp
xchg
pop
sub
out
pop
idivb
ljmp
jl
adc
test
std
mov
stos
mov
inc
loope
and
sub
lahf
jge
insl
cld
sub
in
and
bound
mov
sub
push
mov
cmp
jl
in
cmp
cmp
jecxz
jno
test
sbb
enter
add
and
add
pusha
xchg
mov
fdivs
push
in
dec
fistl
ljmp
cwtl
loopne
pop
sarb
sbb
mov
test
icebp
pop
sbb
or
lahf
addl
cmp
nop
xchg
xchg
ret
fcoms
ret
push
or
xor
xchg
inc
inc
std
es
pop
mov
jle
sub
insl
add
add
push
ret
xchg
dec
mov
int3
lods
inc
inc
test
pop
jno
mov
push
jb
mov
add
arpl
outsb
sbb
dec
xchg
gs
mov
adcl
sub
mov
inc
lock
add
sti
add
add
mov
adc
ljmp
aam
mov
das
dec
add
mov
aas
icebp
fcomi
cmp
lcall
jecxz
pushf
mov
sub
and
scas
lods
jo
lahf
lods
push
and
jmp
and
dec
pop
test
inc
xchg
fnstcw
gs
mov
int3
pushf
mov
sbb
pop
fcomp
xchg
loope
xchg
outsl
shrb
dec
popa
add
loopne,pn
xchg
inc
dec
sahf
xchg
movsl
cmp
mov
sbb
and
and
ja
xchg
test
adc
xchg
or
loopne
cmp
and
dec
xchg
mov
push
push
decb
mov
xor
push
ret
lock
adc
movsb
mov
addr16
or
fldt
outsb
push
data16
idivb
pushf
adc
pop
fwait
or
cmp
aaa
mov
push
cltd
fmull
ret
mov
ficomps
inc
ss
push
mov
pop
in
jmp
xchg
aam
inc
cs
iret
sub
in
inc
cmp
and
lahf
fsubrs
stc
or
inc
sarb
adc
repz
push
sub
mov
ffree
sub
inc
loopne
jo
out
xor
mov
test
aam
dec
mov
adc
xor
insb
subl
push
insl
aaa
push
xchg
ficomps
ret
mov
inc
xor
jae
repz
dec
int
sbb
testb
lahf
hlt
outsb
cmc
popa
adc
dec
jnp
dec
mov
cmp
xor
cmpsl
decl
test
dec
dec
fadds
cmp
sahf
cmc
lods
mov
stos
rcr
push
mov
xor
rcll
mov
popa
mov
pop
and
bound
adc
outsl
sbb
and
das
dec
repz
scas
pushf
inc
cmp
and
stc
and
aaa
fdivrl
pop
jmp
rol
sub
or
sbb
pop
push
hlt
sbbb
imul
mov
sbb
push
jne
in
fldenv
jl
ds
into
pop
push
mov
sbb
cmp
or
ficoms
js
push
sbb
fwait
ljmp
shlb
and
std
adc
mov
daa
inc
mov
fwait
push
adc
push
pop
xchg
out
lods
fwait
mov
mov
icebp
xchg
pop
icebp
pop
loop
mov
xchg
jbe
imul
insb
jecxz
dec
dec
mov
xor
mov
fcoml
repz
icebp
fldt
jmp
clc
movsb
cld
negl
out
enter
out
in
int
aas
cmp
sub
mov
and
movsb
xor
adc
push
jecxz
sti
rcrl
and
adc
xor
jb
imul
hlt
into
mov
jae
push
fnstcw
rcrl
or
cmp
mov
adc
into
popa
push
xchg
and
lock
add
cmp
enter
mov
mov
hlt
fcmovnbe
inc
mov
imul
rclb
mov
jp
xchg
movsb
jbe
out
js
mov
iret
jo
outsl
cli
sub
lea
inc
inc
insb
add
out
cld
popf
loope
sub
mov
rcrl
popa
jge
pop
ss
loopne
mov
jp
das
out
shlb
adc
and
mov
int3
dec
add
sub
fcomps
cmp
pop
call
in
jbe
pop
or
xchg
cmp
dec
inc
loope
aam
inc
cwtl
xor
outsb
rorb
xor
push
cmp
push
insl
push
ret
mov
sbb
lcall
pop
inc
push
fidivrs
push
popa
into
sahf
cmp
push
or
popf
pop
xchg
pop
or
pushaw
out
or
cmp
lods
xchg
pop
and
push
insb
jecxz
out
xchg
inc
test
movsb
dec
int3
gs
out
aam
cld
jno
test
pop
scas
xchg
inc
jecxz
xor
mov
jle
mov
popa
jle
out
pop
ds
sbb
aad
repz
jecxz
arpl
cmpsl
out
stos
mov
push
out
fwait
lock
iret
push
popf
cwtl
xlat
push
pop
jno
mov
sbb
push
xor
and
inc
orl
aam
xchg
scas
push
xchg
es
rolb
adc
dec
sbb
add
inc
cmpsb
hlt
jp
data16
int
fcompl
gs
test
filds
fsubl
and
fdiv
or
mov
ja
sahf
mov
and
cmp
jg
sbb
mov
test
dec
test
xor
mov
adc
pop
flds
call
lea
xchg
icebp
cltd
pop
rcr
jnp
add
fwait
mov
fs
test
mov
outsb
into
mov
mov
testl
subl
add
mov
stos
or
jmp
and
fs
ror
cmc
stos
push
pop
mov
mov
leave
lods
xor
mov
gs
es
dec
movsl
lret
daa
lret
lock
je
loopne
popa
dec
jmp
xchg
arpl
stc
dec
mov
xor
inc
addr16
fcoms
add
les
jp
iret
dec
sub
inc
aas
adc
outsb
movsb
aas
adc
je
fwait
add
mov
jns
lcall
pop
pop
or
arpl
adc
push
and
aam
push
and
fdivrs
dec
inc
test
xchg
pop
rorb
push
aaa
pushf
mov
inc
lcall
or
dec
pop
out
jecxz
cmp
sarb
mov
jecxz
mov
adc
xchg
sub
sbb
inc
movsl
push
push
aas
cmp
movsl
sbb
fcoml
pop
pop
mov
scas
or
in
mov
pop
testb
mov
aad
jge
aaa
push
les
lods
mov
pop
adc
lds
ret
call
add
mov
bound
inc
push
xor
fcoms
shll
fimull
xlat
or
dec
add
pop
adc
xchg
sbb
push
insb
and
jle
push
adc
cmc
icebp
aam
pop
dec
or
mov
cmpsl
sbb
sub
xchg
lret
mov
adc
mov
je
mov
push
outsb
mov
fadds
mov
adc
sbb
mov
lret
pop
cwtl
mov
adc
les
aaa
roll
sbb
mull
scas
adc
test
out
xor
xor
iret
ja
xor
in
push
sbb
sub
rolb
sbb
cwtd
xor
insl
mov
pop
jge
imul
sub
dec
push
mov
dec
out
mov
dec
mov
fwait
ds
and
xchg
lret
popf
xor
cmp
mov
pop
sti
int
push
lahf
sbb
mov
mov
dec
adc
test
inc
movsb
aaa
stc
mov
xchg
aam
pop
adc
imul
cmp
loop
xchg
mov
push
mov
inc
shlb
ljmp
pushf
xlat
test
rclb
pop
cld
or
and
ficompl
dec
adc
dec
and
jg
pop
lret
push
or
insb
jp
loope
mov
lahf
mov
mov
data16
scas
test
movsb
push
inc
jmp
mov
mov
xchg
lea
sub
cmc
or
mov
out
mov
xchg
fwait
push
imul
leave
test
mov
call
mov
mov
xchg
jno
adc
push
ja
mov
pop
pop
pop
pop
daa
shl
mov
mov
inc
push
sub
gs
fwait
pop
or
js
cmc
mov
popa
sub
iret
mov
sub
ja
out
push
hlt
jno
jge
out
test
mov
dec
mov
xor
push
adc
pop
out
mov
pop
dec
cmpsb
out
fidivl
jp
popa
dec
nop
and
inc
jp
clc
inc
dec
jge
std
das
cs
sti
mov
jmp
mov
adc
flds
push
pusha
push
notl
pop
lahf
and
test
test
dec
pop
pop
in
lods
ljmp
push
ss
gs
or
xchg
pop
xor
jp
sbb
dec
das
imul
fbld
xor
jg
sbb
add
xchg
test
ljmp
nop
cltd
adc
jmp
daa
xchg
mov
shlb
testl
mov
jge
push
mov
sbbl
push
popf
adc
cmp
dec
ds
or
cmp
jecxz
movsl
xor
push
loop
dec
lret
imul
jne
fwait
imul
sarl
xchg
sti
mov
xchg
das
pop
add
and
aad
imul
mov
jp
mov
je
xor
popf
leave
loopne
xchg
push
sbb
jno
scas
add
fs
testl
addl
sbb
out
xchg
loope
dec
scas
push
push
or
leave
je
adc
inc
mov
jecxz,pn
adc
cmp
xchg
xor
cmp
jns
lods
dec
push
ja
mov
out
adc
xchg
lods
hlt
ss
clc
adc
test
jle
pop
xchg
je
sub
movsb
sbb
sub
jp
jge
cmpsb
cmp
sub
jae
and
xor
test
out
push
mov
push
xor
lcall
outsb
mov
aam
jmp
jp
aad
bsf
cmpsb
and
sbb
jl
popa
repnz
test
lods
aas
mov
aad
outsl
sbb
bound
insl
repnz
xor
pop
fwait
or
mov
xchg
das
incb
rcrl
cli
push
jbe
addr16
call
hlt
icebp
loopne
jo
scas
dec
ljmp
je
shl
ss
sbb
xorb
fmul
dec
loopne
jmp
loop
mov
and
and
xor
pop
loope
js
or
gs
xor
push
cmpsb
outsb
fsubs
lret
fsubrp
out
sbb
addl
dec
push
call
mov
fcomps
xor
int
mov
and
imul
or
sub
sti
scas
stos
mov
sbb
stos
push
lret
xor
daa
sub
mov
fstpt
fistl
add
inc
cmp
push
divb
jg
sbb
lock
movsb
rcll
test
pop
lcall
mov
jb
dec
je
cmp
mov
pop
pusha
pop
lcall
add
pop
inc
ss
jmp
arpl
outsl
mov
pextrw
inc
movsl
pop
dec
sbb
mov
mov
aam
pop
push
das
inc
push
imul
inc
jmp
xor
adc
aad
jge
cmp
push
mov
inc
push
bound
push
fmull
push
xchg
xlat
and
cmp
push
scas
out
orl
push
repz
divl
push
jo
xor
push
mov
lahf
lock
or
dec
inc
int
xor
inc
sbb
les
ror
or
sti
ljmp
mov
mov
and
cmp
jo
repz
inc
push
cmp
pop
sub
mov
iret
or
mov
aas
push
jge
adc
lcall
addr16
push
hlt
setae
inc
je
jns
mov
add
add
repz
loope
sub
into
out
xchg
cwtl
pop
rolb
out
xchg
and
stos
dec
repnz
push
adc
lock
mov
repnz
xor
jg
test
xchg
mov
sbb
in
ljmp
dec
push
std
sbb
adc
cld
add
mov
pop
pop
inc
nop
aas
mov
add
pop
movsl
dec
daa
lock
pop
add
test
mul
inc
push
out
loope
xor
loop
dec
sbb
push
in
outsl
int3
shrl
js
insl
jno
outsl
in
push
sub
test
imul
test
mov
enterw
inc
dec
je
adc
dec
call
adc
jo
xor
int3
iret
inc
jno
or
out
mov
dec
and
pop
mov
xchg
jge
outsb
sbb
fucomp
cwtl
cmp
psllq
sbb
in
cmp
dec
mov
xchg
push
lods
jmp
out
insl
es
shrb
mov
mov
push
jno
pusha
cmp
xlat
loope
inc
fnsave
imul
bound
pop
adc
mov
add
jmp
add
cmp
bound
xchg
faddl
int
movsb
aad
push
pop
mov
stos
sbb
mov
aas
icebp
out
or
rolb
dec
jge
movsl
lret
jae
outsb
insl
pop
pop
push
scas
ss
mov
scas
nop
out
inc
mov
push
sarb
lds
imul
jnp
fistpll
or
int
dec
nop
jb
pop
inc
xchg
push
mov
stos
add
scas
or
xchg
sbb
add
jg
jecxz
xor
test
repnz
pop
jle
cmpsb
pop
mov
xchg
repz
sub
push
mov
adc
pop
out
stos
fists
xchg
scas
out
sti
daa
adcl
inc
jmp
shll
inc
xchg
cmpsl
mov
add
xor
lods
push
sahf
inc
jnp
mov
roll
xchg
xchg
or
mov
lea
enter
stos
and
push
out
and
aas
jnp
and
add
mov
xchg
cmpsl
stc
xlat
push
ljmp
divb
das
lods
or
push
push
lcall
insb
adc
rclb
in
cld
adc
sbbb
push
mulb
sub
inc
movsb
and
int3
push
ret
inc
inc
adc
pop
pop
popa
int
pop
or
jge
mov
cmc
sub
mov
mov
arpl
inc
fs
jb
movsl
aas
mov
inc
and
and
stos
int
mov
insb
call
jecxz
mov
jmp
pop
fndisi(8087
jno
mov
dec
mov
hlt
lock
cltd
insb
inc
mov
cmp
xor
insb
cmp
stos
fstpl
lods
popa
leave
or
cmp
jle
push
and
jae
aas
rcll
cmpsb
pop
lds
test
dec
mov
cld
es
scas
mov
ret
xchg
pop
mov
ret
xchg
pushf
notl
inc
cmpsb
xchg
adc
jnp
pop
push
and
jmp
into
iret
cmp
xor
push
and
jbe
out
arpl
out
cwtl
outsl
sub
outsb
mov
test
pusha
push
stos
mov
addr16
mov
jns
xor
rcr
mov
inc
loope
in
inc
inc
dec
int
sbb
mov
sub
in
inc
lods
pop
ret
std
fwait
adc
inc
in
xchg
shrb
sbb
mov
insl
add
push
xchg
cmp
add
dec
xchg
and
jo
fsin
jne
test
into
inc
add
int3
pop
icebp
fstpt
and
pop
lods
inc
addr16
fsts
fists
mov
pop
rcrl
dec
sub
xor
jl
pusha
movsb
adc
cmpb
jns
push
cmp
in
push
daa
dec
or
mov
push
push
pop
dec
nop
push
xor
sub
and
fdivrs
sub
sub
popf
dec
cmpsl
mov
pop
pop
fs
jge
jge
mov
loopne
sub
mov
jnp
jb
jno
mov
xor
das
adc
xor
sbb
mov
out
data16
mov
push
adc
popa
aad
sub
sbb
pop
mov
cs
lea
jge
fcoms
pop
add
arpl
cmp
std
nop
pop
insl
rorb
jns
push
icebp
test
negl
dec
xchg
xchg
scas
roll
fwait
mov
orl
dec
pop
xor
out
xchg
jp
out
add
ss
add
push
pushf
pop
das
sub
push
sub
in
xor
jmp
call
insb
outsb
dec
adc
mov
dec
inc
sarb
mov
leave
mov
jmp
loop
jns
jmp
nop
dec
xchg
add
xor
sub
repnz
mov
cmc
sub
in
xlat
ljmp
sub
bound
sahf
jne
sbb
scas
stos
pop
add
lods
xor
xor
mov
add
push
je
out
pop
jo
lret
repz
or
ret
out
std
add
inc
popf
xchg
movnti
cltd
mov
sbb
sub
xchg
mov
push
das
pop
loop
mov
jno
addb
jp
cmp
mov
cmp
out
adc
jnp
shll
out
xchg
les
jns
sar
lds
push
push
dec
xchg
fsubp
mov
xchg
cmpsl
jmp
ds
imul
cld
test
mov
pop
xchg
cmp
fs
shlb
push
ds
cmc
pop
ljmp
movsb
or
scas
int3
test
loop
add
gs
addb
mov
cmpsb
es
mov
mov
cmc
cmpl
and
pop
inc
adc
out
pop
out
cmp
jbe
cli
xchg
pop
sub
fsubrp
fdivr
push
iret
mov
sbb
xor
popa
or
adc
popf
dec
outsb
pop
jno
xchg
xor
jb
adc
shrl
push
ja
test
pop
out
jb
push
in
jbe
xlat
popf
lea
decb
out
pop
and
das
xchg
xchg
push
cwtl
jno
leave
mov
mov
mov
and
ds
mov
and
clc
rclb
cwtl
mov
lret
int
mov
xor
lahf
leave
pop
push
pop
repz
rolb
jmp
xchg
or
fstpl
repz
shll
lcall
fwait
pop
push
dec
jnp
push
adc
cli
xor
cld
jge
add
cmp
push
imul
inc
fmull
decb
testl
inc
ljmp
imul
out
push
mov
nop
popf
sub
adc
lahf
add
cmp
push
xor
push
loope
or
in
xchg
jmp
loope
ss
and
mov
dec
fldt
cmp
mov
mov
dec
icebp
das
pushf
inc
ret
cmp
adc
mov
dec
xchg
xchg
mov
dec
jmp
out
div
insb
hlt
sub
shr
jle
cmp
test
call
cs
rorb
imul
jmp
mov
sbb
lods
pop
inc
inc
in
imul
hlt
xor
aaa
mov
in
or
aaa
lret
int3
and
out
push
mov
enter
cmc
mov
jmp
in
lods
cld
cwtl
in
std
daa
sbb
mov
xchg
jae
lds
push
lcall
clc
dec
jge
ss
test
xor
cmp
gs
dec
jmp
sti
int3
pop
xchg
mov
cmpsl
pusha
dec
or
filds
pushf
sub
sub
xchg
mov
push
leave
out
mov
test
mov
cs
push
mov
movsl
adc
xor
pop
popa
jp
xchg
stos
jo
add
outsl
pop
pop
push
insb
cs
jl
add
fwait
mov
adc
sahf
pop
jp
je
jmp
nopl
shrl
xor
mov
inc
add
push
pop
pop
out
xchg
push
and
push
xchg
test
or
push
xchg
and
jg
mov
and
bnd
mov
mov
pop
jne
pop
jmp
jge
mov
and
cmpsb
in
xchg
sub
dec
clc
mov
das
out
cmc
popa
adc
xchg
cwtl
dec
cmp
sub
push
ret
popf
jmp
insb
fists
arpl
jmp
fadds
jo
dec
mov
test
mov
int3
cmpsl
mov
adc
into
in
lea
mov
gs
nop
xchg
mov
enter
push
xchg
cmpsl
xchg
mov
ror
cwtl
mov
mov
mov
mov
mov
sub
les
imul
xchg
push
push
aaa
mov
mov
imul
hlt
rcll
mull
sbb
inc
ficoml
jle
xor
repnz
jl
add
adc
sbb
inc
fwait
add
pop
push
mov
inc
fcoml
mov
mov
in
popf
out
mov
cld
sahf
mov
out
mov
insb
xor
add
inc
loope
and
xchg
loopne
mov
cmp
or
mov
mov
dec
lret
loope
inc
push
inc
pop
imul
cmp
or
xchg
xor
imul
jb
icebp
mov
mov
fistpl
repnz
repz
call
mov
hlt
pop
mov
or
int
iret
push
mov
fdivrs
cmp
mov
mov
je
ss
test
shlb
mov
cld
fldcw
adc
push
push
ljmp
je
pop
push
pop
push
fyl2x
cmp
aad
mov
and
sbb
sub
hlt
mov
hlt
addr16
cmp
add
jno
jp
jno
dec
outsb
jne
xor
out
dec
cmp
es
inc
cmpl
jg
es
pop
adc
adc
loope
sti
and
and
insl
fnstsw
pop
ss
gs
leave
cmc
mov
scas
inc
jbe
shlb
nop
cwtl
xchg
push
sub
test
bound
cwtl
mov
aas
mov
mov
lods
ss
jmp
rcr
mov
in
and
or
iret
mov
daa
stos
xlat
mov
repnz
dec
add
in
cltd
addr16
repnz
mov
cmpsb
mov
add
not
adc
pop
sbb
mov
mov
xchg
enter
pop
data16
jb
mov
fwait
add
adcl
cmpsl
shlb
sbb
adc
jmp
sbb
xchg
adc
pop
adc
jp
movsb
or
push
sti
cmc
jnp
mov
aaa
xor
push
mov
mov
xor
movsb
loop
dec
fisttps
mov
add
mov
pop
pop
jecxz
out
out
pop
inc
mov
add
pop
in
je
adc
lea
dec
push
out
lret
sub
int
push
xlat
insb
jmp
test
int
push
push
push
ja
fsubrs
xlat
adc
shll
in
xchg
cmp
aam
jb
mov
addb
lods
out
mov
sarl
xchg
ret
cmp
xor
lret
cmp
add
mul
into
jecxz
mov
fwait
mov
popf
fdivs
pop
dec
es
popf
sahf
or
mov
daa
lret
jb
add
lcall
pop
test
sbb
mov
aad
ret
cltd
xchg
dec
lds
fstp
cmp
cmp
iret
aam
push
push
sbb
icebp
mov
push
mov
stos
cmc
in
je
loope
jb
inc
jnp
push
outsl
imul
add
lods
mov
xor
shrb
add
jmp
dec
in
push
or
jmp
loopne
xlat
clc
jp
cmc
cmc
cmp
adc
xchg
cmc
test
cli
pop
adc
in
adc
mov
jae
arpl
ficompl
je
leave
aas
inc
mov
and
jmp
mov
mov
pop
sarb
adc
clc
int3
dec
ret
push
pop
mov
mov
add
inc
xor
mov
mov
les
inc
sub
dec
aam
in
xchg
add
mov
or
jecxz
out
out
jne
or
add
push
push
mov
cmp
cmp
das
insb
xlat
movsb
mov
dec
loop
pop
adc
inc
inc
mov
faddl
fisubrs
mov
pop
jns
adc
fidivl
or
jg
mov
jmp
in
push
fidivrs
hlt
dec
outsb
dec
mov
inc
xor
dec
lahf
push
mov
xor
sahf
or
iret
jmp
jp
mov
rolb
cmp
dec
shlb
sahf
mov
inc
ja
ret
pop
sahf
lret
sbb
pop
repnz
mov
sbb
pop
and
inc
and
add
ljmp
in
mov
mov
call
mov
jae
push
hlt
call
and
dec
gs
in
cmpsb
shl
cld
test
push
or
cmp
jecxz
jp
dec
pop
add
add
mov
mov
push
lcall
ffreep
imul
inc
sub
jns
or
and
inc
add
roll
icebp
and
nop
pop
mov
and
lock
in
ds
popa
mov
add
push
outsb
mov
fstl
mov
xchg
inc
and
xchg
xor
enter
mov
bound
fs
fidivrs
fwait
pusha
xorb
daa
mov
ret
pop
fisubrl
mov
std
adc
push
clc
xchg
sbb
imul
inc
sbbb
xor
mov
push
in
add
mov
pop
fistpl
push
lcall
xchg
fadds
push
mov
lret
leave
and
cmp
inc
sbb
adc
call
add
jb
lds
sub
and
icebp
fcompl
loope
fimuls
jp
stc
lock
outsl
jb
lret
and
pop
mov
cli
repz
pop
ret
vpshad
cld
mov
jno
jmp
stos
cmp
mov
mov
fwait
sarb
jmp
repnz
push
sub
jg
aaa
and
subl
mov
mov
icebp
mov
repz
sahf
mov
xchg
sbb
mov
xor
clc
gs
xlat
test
cld
into
rclb
int
mov
call
jnp
mov
push
push
push
pop
mov
shlb
or
std
mov
jg
jle
adc
popa
jbe
shll
cmpsb
iret
ds
adc
dec
inc
movsl
shl
fmull
pop
jns
jecxz
stc
loope
orl
mov
test
jmp
pop
js
or
jmp
push
stc
pop
lods
xchg
fdivl
add
cmp
rolb
and
adc
pusha
mov
lock
push
fiaddl
icebp
adc
xor
fucom
addl
push
and
fucomip
je
pushf
inc
sub
test
sarl
mov
mov
loopne
das
fcoms
outsb
scas
or
pop
add
xor
stc
and
cmp
push
xorl
mov
repnz
sub
and
test
not
out
xor
push
push
and
shll
xor
lock
in
inc
arpl
out
dec
mov
and
cmpsl
or
jg
jae
lea
sub
iret
fidivl
adcb
out
add
fistps
cli
loop
cld
cmpsl
ljmp
cwtl
movsl
aaa
aaa
sbb
fwait
stos
lcall
cmp
cmc
ljmp
iret
mov
dec
fistpl
stos
cmpsl
mov
clc
jle
clc
push
aad
xchg
push
cmp
shrl
out
jnp
pop
or
cmc
push
fnstsw
mov
and
dec
or
js
mov
nop
jns
push
sbb
push
popa
jo
xchg
fwait
inc
and
clc
mov
cmc
xchg
pushf
adc
int
shlb
mov
xor
iret
fimuls
or
and
cltd
lret
inc
fs
dec
lgs
lea
push
xor
lods
jne
xor
adc
xchg
mov
inc
fwait
add
or
insb
sbb
sub
mov
cli
cs
iret
decl
jg
cmc
loope
stos
cltd
gs
push
cmp
aas
aaa
das
cmp
add
adc
stos
rcr
cmp
sbb
mov
fpatan
inc
pop
out
or
mov
xor
test
xchg
or
ret
mov
std
leave
push
mov
cmp
and
out
sbb
pop
mov
lods
or
lahf
or
mov
jbe
daa
lret
cmp
lret
ret
movsl
fwait
pop
or
pop
push
xchg
sbb
xchg
cltd
pusha
push
dec
loopne
pop
jne
imul
scas
sahf
nop
xchg
mov
push
cs
popl
bound
or
js
lds
popf
inc
clc
cmp
ret
cmp
sub
or
insb
sub
jle
stc
mov
lds
and
sahf
shlb
cmp
inc
test
ret
jo
mov
sub
mov
and
add
popf
adc
out
test
or
pop
sub
in
cmc
icebp
int3
in
lcall
in
dec
out
int
ret
mov
cmp
cld
std
adc
xchg
test
jae
scas
adc
sbbb
dec
jg
aaa
leave
or
data16
xor
and
hlt
cmpsl
leave
lods
lret
scas
push
imulb
pop
or
insb
dec
movsb
cmp
sbb
xchg
push
mov
adc
js
dec
or
repnz
lea
insb
mov
lret
scas
js
xor
lods
inc
aad
popf
jo
mov
nop
int
mov
dec
iret
inc
cli
insl
add
sti
dec
test
or
pop
xchg
pushf
pop
add
mov
repnz
movsb
xchg
xchg
cmp
lret
testb
test
gs
pop
pop
test
sahf
jb
out
push
pop
adc
fildll
cmpsb
and
lods
imul
and
or
adc
cwtl
lock
jle
xchg
and
sti
sarl
lods
bound
mov
add
dec
sub
jns
repnz
inc
mov
lcall
xchg
and
jl
pop
iret
stos
and
sub
std
adc
lods
and
call
jns
jns
ror
aam
icebp
and
roll
outsb
stos
jnp
adc
or
rcr
out
adc
out
repz
jmp
jae
pop
push
xchg
loop
stos
adc
call
sti
movsl
push
sbb
push
call
aas
inc
inc
inc
and
loope
insl
push
jg
mul
xchg
cli
push
push
inc
add
jnp
mov
stos
stc
jo
mov
adc
pop
dec
stos
je
or
cmp
in
xchg
fcmovbe
xor
js
sub
cmpsb
and
adc
notb
lods
or
adc
stc
mov
pop
xor
mov
dec
sub
cmp
aam
xor
cmp
inc
mov
movsb
push
and
loope
out
lret
mov
xchg
imul
inc
mov
or
scas
dec
int3
sti
pop
repz
popa
icebp
inc
push
push
pop
and
int
push
sti
loop
clc
xor
pusha
add
flds
scas
fsubs
int3
test
pop
ficoms
pop
add
push
into
or
mov
jae
imul
aaa
clc
add
add
popf
loopne
pop
xchg
sub
sar
push
cmpb
arpl
xchg
mov
xchg
loop
mov
pop
subb
call
fistpll
call
sub
xchg
add
jo
je
dec
pop
pop
cld
pop
xor
ror
iret
xchg
xchg
dec
flds
mov
iret
idivb
stos
outsb
xchg
cld
push
or
mov
pop
ud1
std
jns
push
or
fwait
aaa
data16
sti
dec
stos
clc
mov
aad
adc
clc
movsl
setnp
iret
add
push
pop
push
sbb
xor
ja
and
hlt
sbb
pop
popf
std
adc
iret
fs
fistl
pop
cli
push
inc
call
aam
jl
push
mov
js
iret
ljmp
and
jbe
lret
std
xchg
shl
ret
or
pop
fcomps
lea
cli
fldenv
inc
ds
xor
sti
jmp
push
ss
stos
lds
inc
mov
jne
xchg
and
jg
pop
adc
jae
pusha
add
mov
cmpsb
fldt
jp
push
scas
mov
add
mov
mov
mov
pop
mov
ljmp
sbb
pop
dec
xor
inc
jmp
clc
dec
xchg
sbb
pop
nop
xorl
nop
inc
xor
icebp
cmp
pop
aad
lahf
cwtl
jmp
cmpsb
pop
scas
lds
push
mov
and
or
and
push
aad
push
mov
mov
add
push
cltd
je
pop
mov
aaa
adc
jmp
mov
sbb
push
leave
test
sbb
push
cmp
in
div
push
xchg
xchg
ret
inc
lods
int3
fcomps
inc
push
jne
push
lret
adc
mov
sbb
mov
int3
xor
nop
add
das
push
adc
mov
push
sti
shlb
daa
xchg
jmp
or
and
stc
jo
mov
add
dec
fdivs
in
rclb
test
lret
push
adc
jmp
icebp
push
fbstp
dec
test
xchg
sbb
push
pushf
add
inc
movsl
mov
xorb
iret
mov
xchg
adc
popa
fneni(8087
push
inc
sub
fs
and
sub
adc
subb
mov
outsb
xchg
pop
push
dec
lock
call
xor
movsb
outsl
dec
repz
test
addr16
movsb
xor
fnsave
xor
leave
or
inc
mov
push
sub
call
pop
xchg
adc
mov
lret
jnp
add
pop
mov
subb
push
fsubl
add
sbb
fxch
push
pop
xchg
lock
dec
data16
push
mov
xchg
pop
cltd
les
dec
sub
pop
scas
pop
int3
sub
arpl
xchg
push
mov
aaa
rolb
rclb
out
ds
ficoms
mov
rcl
aaa
sahf
aas
lods
cmc
mov
jne
insb
dec
push
ja
arpl
fwait
loopne
dec
add
stc
cmp
and
pop
shrb
loop
push
xor
pop
cmpsb
loop
pop
sti
fwait
jecxz
insl
inc
lods
jecxz
pop
sbb
add
roll
jge
mov
test
call
push
imul
or
sub
cmp
cmp
push
adc
daa
pop
xor
in
xchg
imul
jg
loopne
inc
cltd
jnp
pusha
mov
sbb
sbb
popf
xchg
mov
data16
jb
dec
xor
add
js
lea
inc
lods
ja
popa
fisubl
xchg
cwtl
push
mov
ret
js
dec
popa
pop
cmp
testb
int3
dec
and
or
test
or
aad
adc
push
xchg
mov
cmp
jecxz
jo
sti
ret
enter
sti
dec
add
pop
sbbl
scas
shl
ret
push
imul
clc
xchg
cmpsb
insb
adc
push
adc
or
and
push
nop
sub
sti
cmp
pop
je
shl
inc
hlt
mov
mov
imul
sbb
icebp
andl
mov
dec
fcmovbe
sqrtps
pop
insb
inc
xchg
xchg
mov
ljmp
add
lods
mov
xchg
lods
push
in
ret
push
inc
mov
fs
or
push
inc
mov
dec
jl
add
fstpl
pop
jnp
mov
mov
sub
xchg
or
je
mov
adc
pop
cmc
mov
sysenter
loopne
aam
sub
xchg
pop
jecxz
arpl
push
xchg
gs
xchg
adc
cmp
mov
add
mov
cmp
orb
cmp
and
sbbb
popf
dec
sar
push
push
mov
ds
iret
sbb
in
sbb
aam
sub
push
cli
testb
scas
dec
in
negb
xchg
fmuls
int3
xor
cmp
insb
mov
cmp
mov
mov
push
lahf
xchg
mov
lods
sbb
pop
loop
je
hlt
into
or
stc
add
loop
clts
fisubrs
cmp
jge
aas
pop
adc
push
jno
fucomi
jo
xchg
push
or
cmp
imul
sbb
pop
incl
or
insl
xor
mov
jmp
data16
dec
es
outsl
push
push
iret
fsts
imul
mov
or
out
push
dec
mov
hlt
mov
sbb
mov
xchg
cmpsb
data16
xchg
adc
push
mov
push
and
pusha
mov
out
xor
xor
mov
divl
loope
mov
mov
into
jp
sub
aam
in
addl
push
jnp
jecxz
jns
ja
test
dec
xchg
je
push
sahf
sbb
cmc
push
cmpsl
xchg
mov
loope
jns
dec
or
or
xchg
fdivl
out
push
or
push
bound
xlat
pop
fs
push
repnz
mov
lcall
in
dec
push
cwtl
int3
inc
push
push
int
pop
pop
sub
cmp
adc
pop
iret
push
fmuls
lock
loope
mov
imul
lahf
mov
jge
sbb
jmp
sahf
jmp
mov
inc
andl
and
push
loopne
and
into
xor
or
xor
inc
in
enter
xchg
sahf
inc
jbe
push
xor
mov
test
mov
mov
cmp
xor
dec
or
shll
dec
icebp
dec
pop
inc
push
faddl
or
fidivl
pusha
iret
cwtl
ja
cmp
out
dec
inc
push
cli
loope
xlat
testb
stos
sub
call
cmovae
andl
pop
movsb
dec
in
jns
adc
es
icebp
fidivrs
adc
call
sbb
ja
pop
imul
sub
jnp
pop
sub
ss
xor
fstpt
outsl
xchg
mov
xor
bound
cmpsl
out
add
jp
sub
test
imul
push
test
pop
outsb
mov
pop
adc
pop
lds
or
mov
xor
xor
mov
xor
mov
test
dec
test
popa
fwait
fs
jbe
add
fwait
mov
ret
dec
jns
lret
jo
pop
or
lock
pop
push
or
test
jno
rcll
push
mull
iret
loop
add
add
xlat
xorl
std
xor
or
pop
inc
out
iret
jb
pop
pop
insb
xchg
aas
push
cltd
lret
jecxz
cmpsl
push
ret
jno
mov
pop
push
aaa
aaa
mov
dec
dec
inc
mov
xchg
pcmpeqd
xor
and
sub
test
or
leave
sarl
xlat
outsl
cld
cmp
adc
out
lret
xchg
xchg
std
gs
dec
pop
into
sub
mov
push
adc
jle
push
lret
sbb
push
or
nop
lret
dec
movsl
pop
fidivrs
push
loop
dec
inc
mov
stos
popa
add
mov
add
ret
imul
dec
mov
fnstsw
out
out
out
or
test
xchg
lock
orb
cmp
repz
and
and
cmp
mov
testb
dec
push
cltd
or
ret
lds
popl
test
sbb
enter
ss
lret
dec
jb
int3
jae
push
subl
std
xor
pop
or
pushf
add
std
leave
or
sub
mov
lds
inc
fnstenv
arpl
outsl
dec
loope
or
mov
flds
sbb
xor
inc
jecxz
push
mov
inc
out
js
push
xor
lea
sbb
je
sub
add
jbe
xlat
xor
pop
scas
out
jnp,pt
pushl
push
sete
ret
inc
shlb
xchg
push
push
xor
adc
daa
ret
mov
inc
mov
fs
int
pop
fidivrl
sbb
xchg
mov
repnz
ja
in
lret
mov
scas
sbb
mov
dec
inc
mov
dec
js
adc
arpl
loopne
cmp
mov
ja
icebp
xor
jne
mov
sbb
ljmp
les
push
outsb
cmpsl
jb
inc
outsl
mov
or
lea
stc
int
test
shlb
sbb
xchg
pop
and
shrb
iret
cmpsb
hlt
imul
mov
dec
fs
fs
and
xchg
mov
sub
sbb
push
inc
imul
push
cltd
and
jg
outsl
mov
jecxz
push
scas
repz
jnp
ss
popa
xchg
hlt
mov
lods
loopne
or
jbe
mov
jne
adc
push
ret
push
push
out
das
mov
cmp
inc
ds
jp
jne
or
add
and
into
sahf
jns
out
fwait
xor
jg
push
fwait
popf
pop
enter
xor
aaa
add
sti
mov
jne
inc
cmp
sahf
js
aaa
shrl
ds
adc
sti
push
divb
lcall
pop
cli
xor
loop
test
lock
lods
mov
imul
pusha
inc
mov
sub
jg
jbe
stos
sbb
mov
fcmovnb
mov
pop
xchg
or
in
xchg
push
bound
mov
adc
mov
loope
pop
xchg
xor
sahf
push
cmp
leave
in
mov
adc
dec
rcr
mov
jg
lea
cmpsl
aam
mov
int3
cmpsb
add
ss
ret
rorl
scas
inc
jne
outsb
sub
leave
aas
rcll
pusha
imul
mov
inc
mov
inc
jnp
push
inc
jmp
add
pop
sbb
mov
inc
repz
rolb
js
and
imul
adc
outsl
inc
and
cltd
mov
out
mov
sbb
pop
inc
dec
lcall
movsl
push
dec
mov
mov
mov
pop
fisttpl
mov
dec
adc
insl
jle
insb
test
and
mov
repnz
insl
mov
les
in
push
mov
lds
sbb
je
cli
je
test
cmp
fwait
cmpsb
loopne
fst
mov
loope
lahf
mov
fldpi
lret
ds
cmpsb
or
fsts
push
rolb
pop
fists
test
xchg
inc
lods
inc
mov
pop
push
push
in
mov
repnz
adcl
inc
faddl
sbb
out
or
dec
std
ficompl
daa
mov
mov
cmp
push
pop
insb
orb
adc
lods
ret
dec
jno
es
leave
pop
out
lea
pushf
mov
rolb
nop
popf
xorl
push
imul
leave
jge
lock
ror
les
jp
outsb
mov
into
sbb
fidivs
lock
int
dec
pop
sbb
sbb
jae
or
ds
cmp
movsb
dec
movb
addl
out
xor
scas
jno
cmp
xor
xor
dec
pop
mov
pop
mov
int
das
int
jecxz
mov
mov
sbb
addr16
mov
bound
pop
adc
testl
lock
mov
clc
cmp
cmp
adc
lods
out
stc
shlb
fwait
scas
pop
xchg
mov
fisubs
jae
insl
ljmp
and
sbb
lods
xchg
xchg
sbb
js
shl
rcrb
icebp
sbb
mov
rorb
insl
cwtl
sbb
lahf
popa
mov
and
rcll
int3
push
mov
sbb
push
jo
xor
dec
sub
pop
lock
cli
aaa
stos
fcomps
push
mov
ljmp
jo
dec
jle
in
aaa
inc
and
nop
or
repz
lds
in
cmp
pop
mov
ret
repnz
pop
or
xchg
dec
mov
xor
int3
mov
inc
xor
xchg
data16
lock
and
xor
mov
mov
and
loop
loop
push
pop
stos
cmovae
cmp
pop
jns
rol
jns
xor
xadd
fwait
xor
adc
mov
jae
mov
inc
ret
sub
fs
insl
ss
xchg
inc
sub
mov
rclb
cwtl
jg
das
xor
dec
sbb
mov
or
mov
sub
mov
decb
mov
dec
fndisi(8087
lcall
gs
fsubrl
push
mov
les
bnd
jecxz
rolb
ds
jle
lahf
jmp
xor
mov
xchg
pop
mov
and
outsl
mov
sub
inc
sarb
arpl
daa
inc
jmp
arpl
ja
inc
pop
loop
jae
inc
mov
jbe
testb
mov
and
xor
xchg
cwtl
cld
mov
int
std
in
and
xchg
mov
pop
cmp
xchg
movsl
cmp
jl
rcr
imul
cmp
mov
test
add
dec
outsb
or
sub
push
inc
cmc
xor
or
movsl
repz
lret
push
daa
xchg
andl
fs
jns
dec
dec
sbb
push
xor
sub
push
in
xchg
cmp
pop
lahf
adc
pushf
cmpl
xor
mov
pop
lea
mov
rorl
stc
cmp
pop
mov
xorb
popa
sahf
jge
je
or
mov
mov
aad
in
movsb
popa
jecxz
ljmp
and
xor
pop
test
sub
mov
mov
pop
push
in
icebp
mov
addr16
addb
jae
push
mov
jnp
jb
jne
xchg
xchg
jmp
pusha
cltd
ret
daa
inc
or
scas
xor
js
jb
movsl
ret
xor
test
inc
in
out
stos
lea
dec
js
cmp
lret
sbb
arpl
insb
mov
mov
or
and
pop
fcomps
lahf
ret
loope
addb
or
and
jle
or
mov
and
movsl
mov
jb
mov
shr
jnp
sub
and
xchg
dec
push
fmul
out
inc
adc
dec
sub
jns,pt
add
fwait
arpl
jl
and
sub
sbb
loopne
negl
and
dec
push
in
inc
lcall
cmpsl
and
mov
popf
fbld
mov
mov
stc
and
and
push
shld
sbb
bound
mov
xchg
mov
cmp
mov
push
stos
jno
inc
ret
push
sbb
psubsb
cmp
movsb
aaa
popa
inc
and
jge
aam
and
lds
xor
aas
xchg
jg
test
in
rcrb
sti
cmp
fisttpl
sti
or
xchg
fldt
outsl
clc
mov
or
loope
pop
and
jg
popf
jecxz
int3
inc
mov
jne
bnd
data16
fistps
in
add
or
push
cwtl
and
jmp
stos
and
mov
fisubrl
jp
sub
add
lods
mov
add
cltd
xlat
pushf
mov
sub
insl
or
fnstcw
jle
push
or
mov
sub
clc
pop
pop
sbb
cwtl
movsb
aam
xor
add
or
xchg
test
and
popl
xor
das
aas
jecxz
stc
fsub
mov
inc
enter
dec
cmp
mov
scas
add
dec
mov
add
ficoms
fcomi
push
lea
loopne
aam
fs
pop
xor
mov
xchg
data16
mov
test
or
xor
cmp
pop
sub
jns
and
mov
push
or
daa
mov
jecxz
jle
ja
jae
lcall
pop
movsb
jne
bound
add
dec
call
sub
rcl
js
popl
pop
mov
mov
xchg
adcl
xor
mov
std
std
cmp
cmp
jecxz
sbb
das
lret
js
insl
fidivl
in
inc
cwtl
inc
in
imul
lahf
mov
outsb
sub
or
into
adc
cmc
dec
and
jl
push
jns
push
adc
xlat
js
push
or
lret
xchg
cmp
popa
xchg
xor
pop
or
inc
dec
cmpb
test
mov
roll
fists
jg
jno
cmp
push
xchg
pop
cmp
mov
gs
movsl
mov
mov
sub
loop
shll
dec
add
fdiv
jns
push
sub
mov
jmp
sub
aam
mov
cmp
ret
add
lea
cmc
outsb
mov
adc
test
adcl
mov
stc
out
rclb
sub
popa
inc
loopne
xchg
push
into
aaa
and
sahf
adc
mov
iret
into
aaa
test
mov
aam
cltd
jo
push
xor
adc
pop
scas
push
push
adc
push
push
repz
cwtl
subb
inc
fdivs
fmul
lds
inc
jl
lret
jmp
inc
pusha
subb
fwait
or
lret
sub
add
in
or
insl
test
movb
push
outsb
in
jno
xor
inc
pop
ljmp
pop
inc
inc
aad
sub
fwait
jecxz
cmp
mov
mov
icebp
fs
inc
adc
mov
cmpsl
pop
and
mov
sub
scas
add
push
cmpsl
mov
inc
aad
sbb
and
imul
mov
aaa
dec
pop
fdivrs
push
xchg
loop
or
loope
and
xchg
lock
fdivs
aaa
cmp
push
mov
mov
sbb
pop
and
pop
pop
stos
pusha
sbb
data16
mov
test
enter
pop
cmpb
fnop
jle
inc
shrl
jle
jnp
insb
xchg
inc
sbb
mov
loope
enter
test
dec
fmuls
mov
lret
stc
dec
mov
insl
jle
xchg
das
aaa
pop
jge
and
ss
inc
rorb
insb
push
cwtl
jp
aam
sub
mov
inc
push
add
mull
cmp
sub
adc
mov
or
xor
imul
and
lret
sub
inc
cmp
stos
fwait
cmp
fdivs
enter
and
out
sub
sub
jnp
adc
or
and
dec
out
nop
pop
or
aad
dec
pop
push
push
fnstcw
mov
imul
scas
inc
imul
or
mov
xchg
sub
fwait
or
enter
dec
orl
xor
lcall
out
push
xor
pop
inc
cmp
flds
icebp
leave
fists
dec
and
and
mov
push
jge
jo
push
stos
ds
xsha256
cmpsb
pop
mov
dec
dec
iret
push
stos
cmp
cmpsl
mov
shrb
jno
mov
shll
xchg
jnp
pushf
inc
dec
sbb
jno
xor
das
enter
dec
das
sahf
bound
jecxz
fmull
and
cmpb
xchg
or
test
sub
or
sub
call
loopne
or
dec
sarl
sub
scas
sub
out
xchg
or
and
sub
lods
mov
xor
shlb
mov
mov
enter
cwtl
sahf
cli
inc
lds
cmp
mov
rolb
ficoml
jno
pop
pusha
mov
xchg
push
dec
addb
stos
pop
cmp
mov
pop
jae
cltd
lea
mov
inc
testb
jp
cwtl
pop
dec
lods
cmp
push
adc
imull
aaa
mov
jmp
and
and
cmp
pop
inc
adc
jp
xchg
add
xor
gs
push
jecxz
inc
add
aaa
cmpsb
dec
cs
mov
in
and
adc
jle
js
adc
push
popa
mov
mov
int3
iret
pop
jns
rorb
pushf
js
inc
jbe
lret
jmp
sbb
lret
inc
cmc
or
jp
and
mov
fdivs
xchg
loopne
inc
add
xchg
cli
inc
push
js
in
mov
enter
and
je
push
mov
lds
push
fwait
mov
clc
push
cmpsb
cltd
test
enter
cld
xor
mov
mov
cwtl
lahf
push
push
adc
jns
loope
push
dec
insb
mov
mov
insb
imul
shlb
sbb
lds
mov
subl
cltd
scas
sti
pop
clc
jb
push
cwtl
pushf
scas
inc
imul
nop
ret
push
jb
test
pusha
xchg
loope
add
jnp
jg
fsts
sub
int
cmp
repnz
nop
dec
outsl
adc
inc
adc
fimull
xor
and
jl
out
or
rdmsr
mov
in
inc
cwtl
mov
or
test
and
lret
lahf
sbb
fcomp
jg
insl
sbb
pop
push
dec
aaa
push
nop
pop
fsubrl
add
fcmovnu
adc
cmpl
sub
inc
test
jmp
js
mov
cmp
adc
notl
xrelease
lret
popa
loopne
xchg
add
cld
sbb
push
out
pop
lods
xchg
or
imul
rcl
lods
hlt
fildl
int
and
jecxz
ret
and
push
movsb
imul
cli
pop
mov
or
ret
jl
aam
xor
fwait
xchg
js
inc
pop
mov
lock
push
pop
fbld
mov
dec
shl
dec
xchg
lds
inc
fstpl
movsl
xchg
rolb
cwtl
ljmp
dec
out
fcmovne
and
jp
imul
fistpl
ja
pop
xchg
aaa
cwtl
rol
push
ret
rorl
pop
sub
xor
xchg
xchg
mull
push
or
pop
imul
popf
ret
mov
jecxz
jmp
mulb
mov
adc
and
scas
ja
jb
loopne
int
inc
divl
dec
cmpsl
mov
cmpsl
push
add
cmc
movsb
sub
out
sti
call
and
pop
pushf
mov
xchg
lock
add
das
jb
fisttps
adc
pop
adc
pop
push
jb
fwait
cld
jb
pop
repnz
loope
push
ss
ljmp
sbb
dec
sub
into
and
xor
jmp
gs
inc
adc
cmp
nop
lea
add
push
rorl
add
iret
inc
jecxz
loope
ljmp
rcrb
push
push
inc
mul
das
xchg
ret
and
or
push
int3
icebp
sub
leave
push
pop
dec
movsb
cmpsb
lea
sbbl
adc
lcall
jae
loop
cmp
mov
int
sbb
push
lret
fs
in
mov
adcb
sbb
aaa
es
xchg
ret
and
dec
add
cmpsl
and
sub
insl
int3
mov
or
insl
push
cmc
mov
popf
in
lret
pop
mov
insb
mov
jb
shl
jns
cwtl
xchg
lea
aas
ljmp
ss
adc
inc
mov
out
add
sbb
lcall
cld
pop
in
xchg
fs
and
sub
popa
cmc
loop
inc
sub
jmp
test
mulb
sub
pop
and
add
loopne
aam
lahf
jb
cltd
adc
cli
or
xchg
movsl
pop
add
mov
xchg
int3
scas
fldcw
loopne
push
imul
imul
mov
sbb
fnstsw
cmp
xlat
fildl
cli
jbe
lret
outsb
mov
popa
icebp
jae
loopne
lret
add
pusha
out
mov
pop
inc
lods
push
xchg
mov
inc
push
mov
adc
pushf
add
insb
jns
mov
inc
fidivrl
sbb
pop
fsubl
ljmp
out
dec
pop
enter
xchg
movsl
test
pop
xchg
enter
xchg
in
jl
scas
xchg
loope
sarl
mov
out
dec
add
aaa
cltd
fs
push
mov
pusha
xor
mov
jb
mov
orl
sbb
and
inc
rcll
or
mov
insl
leave
sbb
cmp
or
dec
xchg
notb
jp
lds
inc
adc
jo
aam
sub
pop
insl
sub
mov
ficompl
out
out
dec
ljmp
pop
lret
jne
out
push
xor
into
int
int3
dec
sti
in
enter
subb
dec
inc
xchg
cmp
pop
cmp
or
sbb
ss
fsts
in
gs
pop
mov
xchg
mov
shrb
mov
nop
sub
sub
js
jp
scas
jg
test
mov
ja
pop
sahf
jb
inc
jbe
lcall
xor
test
insl
movsl
fimull
dec
lret
and
sbb
xor
mov
pop
out
jle
sbb
lods
add
pop
adcl
sub
xchg
in
jbe
jp
pop
mov
nop
mov
sbb
cmpsb
gs
or
and
push
xor
sbb
fsubrs
in
or
jo
fbld
imul
cltd
sub
xor
or
das
fwait
aam
sbb
out
push
dec
mov
pop
das
adc
pop
mov
aas
clc
adc
ljmp
test
in
int3
idivl
sarb
pop
jp,pt
xor
jno
or
sbb
scas
lcall
jae
mov
push
out
aam
pop
pop
aad
insb
sub
push
dec
lock
adc
push
pop
in
cwtl
cwtl
sub
xor
int
adc
icebp
jge
jnp
test
pop
xor
sarl
dec
mov
or
pop
sar
arpl
rolb
jb
mov
or
xchg
repnz
add
outsb
xorl
and
movsb
inc
mov
out
dec
sbb
pop
sbb
lods
imul
cmp
xchg
mov
movsl
sbb
mov
jae
jle
pop
fistps
std
daa
pop
add
rolb
mov
insl
push
pusha
sbb
les
push
xlat
inc
push
jg
adc
out
xchg
lcall
out
sub
insl
notb
fidivrl
inc
mov
add
enter
pop
pop
pop
and
push
mov
jle
cmpsb
push
mov
aaa
movsb
aad
clc
outsb
push
jno
das
dec
lods
sar
enter
sbbb
adc
sti
jae
sbb
mov
fcomp
jno
jmp
out
jecxz
ret
dec
mov
lds
xor
pop
loope
mov
sahf
push
or
insl
ss
mov
push
dec
mov
cmpl
adcb
lcall
inc
xor
std
cs
pop
scas
mov
pop
aaa
cltd
mov
xchg
sbb
stc
in
aad
in
push
outsl
inc
int
out
adc
jecxz
mov
jge
fistps
mov
mov
jmp
je
push
fwait
imul
nop
std
xor
shll
bound
jbe
push
fstpt
and
stc
mov
icebp
dec
lods
push
fldpi
movsb
sub
rorb
push
lods
cmpsb
pop
les
stc
pop
pop
ljmp
mov
xor
add
and
mov
je
add
xor
cmpsl
dec
sbb
cmp
and
pop
jb
js
inc
push
or
mov
dec
push
in
outsb
inc
inc
mov
inc
cmp
aas
adc
jbe
dec
xor
hlt
cmc
jne
pop
cmp
adc
dec
and
addl
mov
into
mov
sbb
dec
gs
cltd
movsl
cli
mov
std
jae
push
rolb
mov
ja
adc
dec
or
push
mov
push
leave
dec
outsb
aas
jbe
xorl
fcoms
fisubs
cs
lds
stc
pop
mov
cwtl
subl
sub
jno
dec
cs
rclb
jnp
std
imul
pop
fnstcw
rcrl
or
xor
adc
add
xor
xor
mov
outsb
sbb
popf
subl
cmpsb
std
cmp
mov
arpl
cmpsb
pop
xchg
negl
lds
adc
dec
push
sub
inc
mov
mov
ss
push
mov
ja
add
sbb
cmpsb
or
pop
add
loop
push
dec
std
push
rsm
fsts
call
movsb
lcall
cmp
test
bound
lods
neg
popl
aam
adc
lds
cmp
ss
in
daa
add
mov
cmp
ud0
addr16
rorl
jmp
dec
xchg
and
xor
xchg
xlat
jp
je
arpl
add
shlb
inc
dec
rcl
dec
inc
std
insl
cltd
into
ret
lret
out
mov
dec
shr
loopne
and
shll
aaa
out
xor
push
xchg
in
mov
leave
jmp
xchg
jle
in
dec
das
push
int
loopne
stos
cmpsl
xor
or
fimuls
sub
cltd
mov
mov
xor
jmp
push
mov
and
xchg
or
add
sub
loop
stos
pop
lret
mov
fiadds
mov
sbb
add
push
iret
test
pop
lea
and
js
idivb
shll
pop
fnsave
aaa
push
pop
hlt
imul
push
jle
popf
sti
les
loop
pop
xchg
inc
or
pop
fistl
int3
into
lret
test
xchg
lods
cmp
nop
enter
bound
rolb
lock
ds
cmp
nop
xchg
mov
sub
out
add
loopne,pt
cmc
jb
lock
cwtl
cmp
lods
lahf
mov
orb
ja
cmp
test
loopne
push
stos
imul
pop
and
sub
insb
ret
arpl
mov
adc
xchg
jae
sub
mov
push
bound
aad
inc
imul
imul
push
pop
loop
dec
imul
or
aam
cmp
inc
aaa
adc
jns
and
scas
shlb
cltd
popf
aas
call
mov
repz
push
test
shlb
sbb
xchg
inc
ficomps
out
ja
xchg
pop
xor
xchg
gs
mov
pop
add
pop
rcrl
or
pop
pop
cld
and
rorl
ficompl
sub
loope
xchg
inc
ret
jecxz
arpl
dec
lret
cmp
subb
xchg
ja
mov
mov
adc
mov
addb
shrl
ficoml
aam
inc
mov
cmp
icebp
jbe
mov
jg
lock
jno
fisttpl
push
jnp
dec
inc
add
jl
and
dec
pop
lea
std
mov
jne
lahf
aas
push
mov
xor
lods
xchg
cmpsl
cmc
jg
mov
jecxz
pop
sti
lahf
cwtl
leave
push
push
shll
inc
adc
sbb
jo
sbb
out
data16
mov
cmc
outsb
xchg
xor
ds
push
cld
int3
mov
fdecstp
loopne
lock
int3
mov
or
movsl
cmp
mov
jcxz,pn
and
bound
pushf
mov
fisubl
mov
add
inc
subb
push
xchg
fisubrs
dec
and
lcall
dec
lock
dec
out
mov
enter
xchg
das
sti
sbb
popf
daa
sti
push
lret
inc
daa
mov
pop
test
xchg
push
daa
push
dec
jge
or
ret
mov
and
dec
mov
loope
roll
inc
inc
repz
xor
loopne
lea
add
push
call
xchg
repz
cmpl
mov
ss
xchg
pop
dec
pop
jecxz
dec
aam
xchg
cmp
repnz
cltd
into
lods
or
sub
or
shlb
push
mov
cmpsb
fwait
mov
out
pushf
aaa
dec
mov
out
enter
lret
push
in
fmuls
cmpl
leave
mov
xor
in
mov
iret
or
cmpsb
enter
stos
jnp
lcall
filds
lods
xor
cmp
or
xor
aad
stos
gs
pop
sbb
push
or
loope
xor
xor
aad
push
int3
aas
mov
clc
mov
dec
clc
pop
push
ja
adc
pushf
jp
push
insb
testb
adc
popf
js
sub
les
inc
push
rolb
jnp
mov
mov
mov
std
and
test
daa
jl
mov
cmpsl
aad
inc
lahf
shll
jne
sti
jno
dec
mov
ljmp
mov
mov
lods
loope
adc
xor
xor
ja
arpl
xchg
repnz
xor
adc
scas
mov
outsb
arpl
jmp
xor
push
dec
and
push
test
dec
ret
sub
push
arpl
fbstp
jae
xchg
ja
push
jl
inc
addr16
test
xor
test
shrb
lods
xor
jmp
jno
and
dec
ss
push
cmp
cmpsl
pop
lret
lock
add
bound
jns
xor
adc
push
push
mov
outsl
test
decl
mov
cmc
inc
mov
stos
lods
cmpsb
in
pop
insb
ss
sahf
aaa
pop
stos
lret
mov
adc
xchg
cmp
sbb
mov
aam
sar
clc
or
lock
ret
mov
and
xchg
push
add
lds
mov
jg
push
cwtl
inc
sbb
out
sub
jns
jo
jp
xor
in
mov
jae
pop
orl
inc
div
inc
dec
jl
jne
shlb
iret
lods
fcomps
lods
add
sahf
sbb
and
cmp
mov
testl
lods
ja
sbb
jo
loop
xor
shlb
sbb
push
stos
inc
lcall
cmp
popa
ffreep
add
in
aad
sub
push
call
add
push
and
pop
xlat
add
mov
repnz
imul
sub
mov
sbb
and
fdivrl
mov
inc
loop
add
pop
out
and
inc
jne
arpl
nop
xor
push
mov
daa
shr
jne,pt
stc
add
hlt
jecxz
in
xchg
shll
sub
pop
loopne
mov
mov
shlb
lret
adcl
dec
cmp
or
js
sbb
clc
push
jns
aam
rcl
xchg
mov
call
inc
mov
call
cmp
data16
clc
mov
jecxz
jbe
in
popa
sub
enter
es
lret
mov
leave
popa
into
jg
ret
mov
xorb
int3
jno
push
dec
push
pop
rolb
add
es
xor
inc
mov
ss
add
in
test
add
fwait
sub
or
outsb
dec
cmp
add
jae
jp
jnp
stos
jl
dec
sbb
mov
cli
and
lret
dec
jl
cltd
scas
jmp
stos
ds
lcall
and
stc
jge
into
mov
stos
mov
add
aad
cwtl
out
js
mov
xor
add
pop
mov
jnp
mov
xchg
jo
pusha
mov
lret
lock
jl
mov
sub
popf
push
push
aas
mov
push
xchg
cmp
repz
push
shrb
xor
mov
xchg
inc
sahf
cltd
lret
push
jb
mov
xor
pop
mov
stos
sub
popa
outsl
push
xor
lods
mov
popa
or
jno
push
in
mov
push
sahf
clc
and
jg
lcall
pop
outsl
fxch
cmp
lods
jb
mov
icebp
mov
inc
leave
pop
mov
fs
cmp
mov
mov
in
and
mov
adc
idivb
mov
xchg
imul
sbb
mov
and
in
dec
lock
stos
dec
inc
adc
and
lea
xor
push
mov
cmp
push
xchg
jo
push
sub
leave
lahf
push
ja
adc
rorl
cli
xor
scas
and
push
ds
mov
iret
fimuls
inc
int
loopne
cmc
mov
inc
mov
and
lret
dec
xchg
popf
mov
mov
stos
dec
push
mov
sub
enter
jo
aam
mov
sbb
and
fstp
mov
sbb
hlt
jbe
dec
mov
inc
bound
jp
sbb
ja
ljmp
xchg
fsubs
pop
dec
sbb
mov
jb
mov
sbb
mov
shrb
add
out
adc
mov
push
imul
insb
push
fwait
sub
xor
int
add
pop
loope
inc
aas
or
insl
push
pminsw
sbb
sub
fwait
std
ret
xchg
andl
ds
lahf
lock
xor
in
fidivrs
mov
cmc
sub
test
fwait
cmp
push
lock
jne
cli
cltd
mov
cli
push
mov
scas
mov
cmp
push
pusha
aad
loopw
jmp
xorb
lcall
insl
dec
outsb
jp
inc
mov
dec
sub
shrl
sub
pop
scas
into
pop
push
mov
in
xchg
mov
and
jmp
stc
inc
ja
popf
or
stos
insl
lods
xor
xor
loope
arpl
adc
cmp
xor
fdivs
sbb
mov
pop
jbe
and
sbb
je
push
push
cli
and
jns
mov
or
dec
das
inc
adc
mov
loop
xchg
cmp
lock
sbb
mov
push
ja
xchg
ja
out
push
add
pop
dec
mov
stos
dec
fbstp
cwtl
inc
mov
shlb
mov
inc
fsub
scas
iret
stc
jl
roll
mov
push
dec
jp
pop
fs
in
ficoml
std
iret
add
in
pop
outsl
pushf
xlat
xor
das
push
and
daa
pop
aaa
pop
addb
fsubrl
jg
sbb
adc
dec
push
sbb
arpl
jmp
cmp
dec
fistpl
out
jns
cmp
sbb
in
mov
pop
mov
push
mov
inc
push
sub
ret
outsl
aam
adc
sub
bound
leave
jo
cltd
or
and
ljmp
repnz
addr16
mov
out
mov
cmp
rorb
cltd
adc
sbb
or
int
sbb
pop
faddl
jle
mov
xor
or
jbe
xor
push
or
xlat
xchg
adc
je
incb
push
cld
or
cli
cld
stos
fists
inc
add
adc
xchg
add
inc
in
aad
mov
aad
adc
add
mov
aad
daa
es
mov
and
mov
cltd
inc
rcrb
testl
in
xor
lret
sub
xor
insl
fsubl
loopne
lret
and
pop
xor
push
test
loopne
cmp
and
or
cmpsb
pop
popa
xor
movsb
push
je
xchg
iret
negb
ret
sbb
adc
add
inc
add
cli
je
in
jb
push
add
push
dec
bound
es
in
adc
rcrl
js
mov
iret
out
and
test
clc
xlat
aaa
loope
add
jecxz
inc
std
dec
push
xor
xchg
fnstcw
bound
adc
lret
jns
xlat
sti
push
pusha
pushf
fisttps
insb
outsl
cmp
lcall
add
shlb
call
bound
and
sub
addr16
movsb
or
dec
std
inc
dec
or
mov
mov
imul
cltd
and
out
jecxz
push
mov
ds
cmpsl
lcall
fnsave
inc
aaa
hlt
movsl
add
jne
sub
push
cltd
dec
sub
and
xlat
test
xchg
push
jl
and
push
lahf
xchg
sub
push
push
es
std
lods
stos
adc
inc
inc
pop
mov
xchg
decl
or
outsl
fs
mov
pop
pop
sub
mov
and
xor
jmp
xchg
lods
in
cmp
and
lcall
mov
dec
jecxz
pusha
movsb
adc
cmc
jle
and
adc
rorb
mov
jo
sbb
rcll
and
pop
roll
pop
xor
jmp
and
mov
into
sbb
cmp
test
dec
loop
sti
or
dec
arpl
rorl
push
aam
inc
les
push
sub
mov
mov
sbb
in
jae
and
outsl
enter
loopne
addr16
out
ret
xorb
mov
pop
scas
outsl
add
and
shlb
out
pop
jnp
xchg
insb
push
pop
and
xchg
je
adc
push
mov
les
sbb
inc
cmpsl
insb
lahf
dec
popf
dec
mov
or
pop
push
fimuls
xchg
mov
push
stc
cmpsl
hlt
push
aaa
out
xor
inc
jl
or
cmp
dec
nop
fs
test
nop
adc
lahf
ret
shrl
rcl
sar
insb
or
mov
leave
sub
ljmp
or
pop
pop
add
pop
mov
jmp
repz
pop
aad
ljmp
je
int3
test
and
rclb
icebp
sarl
fldenv
pop
popf
dec
xor
loopne
xchg
fcomi
mov
push
xlat
rorl
inc
in
pop
cld
jge
push
xlat
pop
sub
jge
xchg
push
xchg
test
int
jge
mov
clc
push
bound
xchg
ja
cld
or
call
pop
xchg
icebp
scas
adc
jl
cmp
insb
das
ljmp
mov
mov
outsb
outsb
cmc
sbb
sbb
mov
jle
test
test
lods
jg
std
in
cmp
orl
mov
lcall
in
out
sub
add
push
test
test
push
loop
jns
popa
mov
add
sub
sahf
js
jnp
cmc
mov
imul
in
sbb
cli
jl
je
xchg
insb
cmpsb
addr16
adc
mov
outsb
test
jecxz
xchg
jmp
roll
sub
mov
cld
lods
xchg
lret
loopne
push
fldenv
xor
ret
cmp
sub
inc
mov
xor
imul
push
push
xor
and
xchg
dec
loopne
gs
hlt
fxch
enter
sbb
inc
int
mov
xor
sub
and
add
jle
sub
inc
sarb
or
mov
pop
xor
cmpb
aad
pop
aam
mov
jnp
cmp
adc
jne
lret
addb
cmp
ljmp
and
leave
in
pop
mov
addr16
clc
push
jns
mov
cmp
lret
or
lods
mov
fcoml
mov
inc
hlt
xchg
shlb
or
les
pop
imul
scas
aaa
stc
and
xchg
jbe
out
pushw
xor
nop
fidivrl
loope
mov
decb
testb
sarl
pop
dec
jne
jmp
push
xor
add
sbb
cmc
cmpsl
cli
cmpsl
adc
cmpl
std
iret
aam
out
pop
mov
push
sub
dec
test
inc
or
loop
add
cmc
outsl
mov
xor
pop
push
mov
xchg
shll
stc
in
cs
lods
dec
aad
push
pop
in
pop
sbb
sbb
cmpsb
adcl
int
sbb
call
add
out
mov
test
mov
inc
shr
test
testl
jge
inc
push
cmp
dec
xor
ljmp
xchg
mov
dec
mov
cli
mov
mov
test
adc
jmp
imul
xchg
jne
or
sbb
ljmp
lcall
je
mov
xor
pushf
adc
data16
out
pop
push
pop
lock
cmp
sub
xor
enter
fdivrs
js
mulb
scas
inc
pushf
outsl
xor
mov
bound
nopl
or
dec
adc
xor
syscall
and
fs
out
xchg
std
jb
push
push
inc
inc
adc
lahf
fwait
jb
mov
or
jle
dec
push
lods
jmp
mov
and
push
xchg
das
pop
push
cmpsb
mov
loop
bt
test
sub
dec
push
xor
cli
imul
fucom
into
pop
cmp
imul
cli
inc
mov
and
outsl
cmc
xchg
sbbb
cs
int
jb
dec
mov
jge
push
xchg
inc
fisubrs
fwait
adc
clc
pop
cli
mov
jne
pop
inc
je
sub
sti
xchg
clc
sbb
fcomps
push
jae
xchg
cld
bound
frstor
inc
push
cmpsb
ljmp
sub
jp
push
iret
sbb
push
push
dec
jl
fistps
std
xchg
cwtl
fidivrl
ja
sti
mov
sarw
imul
loopne
mov
out
push
xchg
jg
mov
jg
sbb
imul
xor
pop
movsl
insl
adc
sub
cmp
sbb
xchg
push
aam
and
sbb
lahf
outsb
fsub
push
stos
push
clc
inc
sbb
outsl
xorl
cltd
popa
lcall
jne
inc
pop
sbb
mov
mov
pop
lock
jno
push
mov
mov
or
add
ljmp
shlb
adc
push
sbb
rorl
mov
gs
xorb
mov
fnsave
sub
sub
sub
outsb
inc
shr
dec
and
leave
push
fbld
call
out
shrb
or
sbb
mull
pop
outsb
mov
je
frstor
sbb
pop
mov
sub
pop
xchg
or
pop
fstps
mov
push
hlt
fs
push
pushf
xchg
push
int3
sub
lea
pop
xchg
or
sbb
and
or
dec
fcmovnb
and
add
int3
bound
mov
dec
sub
shlb
loopne
pop
cli
clc
call
push
cmp
mov
mov
lods
lret
ret
push
push
fildll
mov
sub
clc
int
adcl
cmp
pop
push
push
addr16
mov
cwtl
push
pop
popf
push
test
add
loopne
mov
jp
cmp
int3
je
cmp
jecxz
mul
jmp
adc
xor
add
cmpsl
inc
pusha
fidivl
and
jp
insb
movsl
mov
add
jl
mov
jno
cmc
sub
and
pusha
arpl
hlt
mov
xchg
and
shll
sahf
sbb
es
cmp
mov
cltd
sub
cmpsl
mov
xchg
repz
fadds
mov
inc
xchg
inc
mov
push
lret
ret
outsl
lods
inc
popa
pop
aad
adc
imul
mov
sbb
cmp
ss
xchg
stc
dec
cmpsl
leave
leave
pop
int
pop
adc
jae
sbb
mov
lock
adcb
dec
inc
scas
pop
xchg
mov
aas
out
rclb
pop
lods
mov
mov
mov
lret
orl
and
icebp
inc
in
cmp
pop
jge
stos
loopne
sub
jmp
test
outsb
fadds
adc
decb
push
stos
pushf
ficomps
cs
xor
jo
mov
sub
lea
pop
sub
jl
js
imul
insb
jmp
sahf
fiadds
test
les
stos
fbld
rcll
js
cmp
mov
addr16
aas
sbb
add
mov
fiaddl
dec
jbe
popf
testb
roll
sub
inc
loop
inc
test
fstl
arpl
lret
nop
repnz
out
imul
shll
notl
add
lea
fdiv
inc
imul
mov
mov
scas
cmc
ja
in
xchg
test
scas
je
rcll
cmpsl
test
sti
pop
in
mov
aam
negb
dec
mov
xor
jecxz
push
sahf
in
cmp
xorb
mov
std
or
inc
andl
sahf
arpl
xor
std
ja
js
sbb
gs
cltd
fildll
mov
xchg
add
sub
lea
lcall
out
call
insb
mov
in
adc
mov
loope
pop
or
sbb
fdivp
pop
add
jns
cld
gs
aad
movsb
or
jg
ret
jne
fcoms
cwtl
xchg
xchg
roll
pop
mov
or
sbb
fcomi
adc
and
test
adc
add
xor
pop
push
add
and
jg
test
mov
jb
xor
popf
mov
rorb
lock
adc
lds
mov
movsb
mov
sti
mov
je
pop
or
loop
jne
test
divl
xchg
pusha
stos
fmull
popf
xchg
movsl
jecxz
in
lcall
aaa
and
xchg
push
jno
sub
test
popf
les
push
call
cmpsl
cs
cmp
jle
xchg
imul
dec
in
int
int3
push
push
cld
cmp
dec
sub
push
iret
adc
cmp
mov
lcall
lcall
mov
push
xor
ja
and
stos
sahf
pop
pop
test
ljmp
lds
lret
outsb
int
into
or
dec
imul
ss
pop
jno
cmp
jns
xchg
dec
push
lods
jno
add
in
adc
push
imulb
jbe
ret
sahf
pop
mov
add
pop
mov
dec
mov
js
inc
push
fs
push
mov
inc
jmp
imul
sub
and
mov
mov
ret
dec
test
xor
xor
dec
je
and
fbld
inc
test
jge
inc
cmp
cmp
adc
mov
cmp
sti
imul
imul
and
mov
or
sbb
lods
mov
inc
mov
add
mov
and
sbb
subl
ret
lods
fdiv
sbb
in
xchg
inc
add
sbb
xchg
popf
repz
jg
iret
push
mov
lret
iret
push
repz
xchg
cmpsb
mov
int3
push
push
scas
cmp
sbb
mov
jnp
mov
loope
jmp
bound
pushf
stos
push
push
or
subl
loop
cs
lods
fwait
inc
ss
sbb
and
inc
stos
push
lea
clc
and
aam
js
pusha
dec
xchg
cwtl
jmp
int3
push
add
mov
sub
add
iret
ret
nop
pushf
sbb
jg
inc
or
adc
xchg
push
bound
pop
out
call
int
adc
scas
cmp
imul
inc
shll
lahf
jmp
mov
fstl
mov
and
and
addr16
imul
or
das
ror
stos
cmp
mov
imul
inc
add
jle
in
lods
or
mov
jmp
mov
dec
das
into
xchg
pop
out
jge
bound
dec
jle
in
push
push
or
mov
sub
xor
xor
frstor
dec
xor
aas
mov
gs
and
sbb
inc
sub
pop
adc
shl
lock
jmp
inc
lahf
lods
icebp
jecxz
adcb
dec
mov
bound
xlat
lds
das
decb
fldt
push
cld
test
imulb
adc
and
add
push
pop
mov
adc
push
push
std
popl
call
jne
jnp
dec
mov
daa
bound
jge
fwait
ret
cld
iret
pop
pop
mov
cltd
fsubrp
sub
es
das
push
push
je
gs
stc
cwtl
mov
push
addr16
pushf
xlat
movsb
divb
adc
cmp
mov
inc
and
or
mov
lds
clc
insl
pop
mov
into
push
and
cmc
imul
call
push
andl
pop
subl
movsb
addl
xchg
xchg
mov
cmp
adc
pop
and
ret
addr16
cltd
out
push
pop
jp
jb
push
sbb
sbb
dec
enter
mov
pop
lcall
es
ds
pop
add
jecxz
incb
fnstsw
cmp
ja
inc
loopne
push
lret
jl
fs
mov
fstpl
cld
mov
call
cmc
push
dec
rol
and
mov
negl
mov
mov
jbe
out
imul
fdivr
and
cmp
dec
icebp
dec
sbb
aas
mov
push
mov
and
xor
cmp
pusha
mov
pop
push
hlt
int
jne
and
adc
mov
inc
fmull
repz
add
mov
loopne
cmpsl
pusha
arpl
gs
pushf
push
mov
jmp
sub
xor
das
scas
push
add
dec
mov
and
and
dec
test
pop
jp
pop
pop
pop
sub
or
dec
bound
movsb
imul
gs
loope
lahf
pop
add
shlb
sub
scas
push
pushf
pop
add
adc
jl
pop
adc
jecxz
jnp
pop
sbb
ljmp
sbb
mov
fldt
jo
add
cmp
ret
sub
sbb
out
push
jp
or
sbb
jbe
fbstp
dec
iret
pop
scas
stc
mov
mov
rol
lock
jle
push
cltd
ds
dec
popf
add
sbb
iret
xor
clc
fisubrs
mov
popf
dec
dec
sti
test
cltd
das
ja
stos
adc
loop
mov
add
lock
mov
insb
pop
mov
out
in
test
jnp
aas
sbb
mov
mov
pop
arpl
adc
cvtps2pd
clc
mov
dec
add
lret
into
iret
mov
and
out
jg
cmc
pop
mul
std
mov
call
test
inc
inc
jl
sub
dec
lods
cmp
mov
outsl
sub
pusha
jnp
insb
cmpsb
xchg
enter
fistpl
rorb
dec
inc
dec
aas
mov
and
imul
sub
scas
test
ficoml
insb
movsb
mov
lret
movsl
mov
cmc
addr16
or
push
jecxz
cmp
repz
jae
clc
aad
movsb
sub
dec
push
out
xor
inc
mov
add
popl
adc
les
shl
xor
inc
mov
pop
movsb
scas
fmuls
aad
lret
pop
push
ret
and
fs
rcrb
pop
fwait
insb
shll
dec
pop
mov
loopne
fidivrl
aam
call
sbb
jecxz
imulb
shl
in
jb
jo
mov
imul
pushf
inc
clc
xchg
shr
inc
jmp
pop
cmp
xchg
mov
mov
jno
xor
shlb
jae
cltd
add
xor
insl
xchg
je
pop
std
sbb
outsl
aad
push
add
in
mov
mov
fists
into
and
add
lds
mov
ret
lahf
loopne
fwait
mov
jge
or
dec
and
inc
mov
mov
mov
sub
inc
int
pop
cmpsb
adcl
es
push
mov
aam
sub
pop
sbb
lods
daa
jbe
mov
adc
mov
jecxz
dec
shrb
push
scas
iret
mov
roll
test
pop
mov
rcrb
cwtl
lahf
fdivp
mov
cmp
sub
sbb
mov
incl
clc
pop
ret
or
nop
and
rol
xchg
jbe
jno
jecxz
xchg
mov
mov
test
adc
in
jl
jl
daa
jmp
xchg
stc
xchg
cli
popf
push
ret
adc
push
lret
dec
or
insb
pop
and
cltd
or
aaa
sbb
mov
adc
jg
mov
sub
xor
out
mov
cli
or
daa
loop
cmp
es
push
repnz
aaa
pop
loope
sbb
stos
jbe
push
mov
insl
push
mov
fisubrl
jecxz
jnp
or
xor
xchg
xchg
lret
fistps
fimuls
pop
es
push
or
or
call
clc
adc
xor
in
cli
movsl
push
add
out
cmc
jno
xchg
aaa
cmp
sub
mov
or
jl
sub
and
xchg
xchg
in
in
add
lret
fsubrl
pushl
mov
jb
adc
mov
and
lea
test
push
and
or
mov
mov
adc
adc
cmpl
xor
sbb
adc
cmpsl
je
mul
in
loopne
adc
in
lret
xor
dec
gs
fsub
pusha
lea
sub
and
and
aaa
inc
push
jge
iret
inc
aam
lcall
cmp
jl
popf
lock
adc
mov
fsub
enter
cmp
cmp
pushf
pop
and
adc
fwait
outsb
fcom
and
dec
icebp
aam
cltd
fucomip
pop
bound
cmpsl
adcl
push
mov
mov
leave
xchg
mov
cmp
xchg
fisttpl
insl
inc
das
add
std
scas
or
and
mov
out
dec
fistps
sbb
jnp
dec
insl
sub
mov
in
daa
inc
or
xor
imul
mov
shlb
push
insb
inc
repnz
orl
out
cmp
int3
int3
mov
mov
push
cmpsb
fs
push
filds
push
push
fmul
inc
out
mov
sbb
fsubrl
cwtl
mov
ljmp
pushf
xchg
push
sbb
outsb
and
not
in
lock
lock
pop
lahf
xchg
imulb
pushf
mov
mov
jmp
jge
out
fwait
or
pop
inc
jecxz
xlat
jge
or
push
add
push
int3
adc
sbb
cmp
aam
mov
hlt
xor
fldl
xor
outsb
imul
lret
or
addr16
mov
repnz
mov
xchg
inc
icebp
mov
frstor
inc
cmp
out
jmp
ret
adc
or
das
dec
sahf
in
adc
adc
es
mov
cmp
imul
cmp
mov
scas
jge
fistps
out
insb
int
fimull
cld
inc
xor
adc
push
cli
pop
jle
sbb
adc
mov
xor
xchg
sub
ret
push
jmp
mov
inc
jb
call
bound
cmp
movsb
mov
xchg
fcom
xor
pusha
mov
lret
sahf
mov
icebp
or
mov
loope
push
adc
inc
adc
jb
mov
or
inc
xor
sbb
fimuls
stos
add
pop
jns
shl
mov
inc
icebp
xchg
cmp
dec
sub
enter
lret
push
leave
mov
ja
aas
fidivs
mov
or
xor
fwait
js
push
pop
adc
mov
mov
aaa
and
fnstsw
mov
lds
dec
repz
cmp
lds
aaa
pop
scas
dec
jne
loope
pop
clc
dec
sbbb
sbb
ficoml
inc
jb
sub
dec
push
mov
outsb
push
push
xchg
dec
or
out
cmc
jb
jmp
popa
mov
and
xchg
cmp
lds
push
dec
mov
inc
nop
loop
pushf
push
mov
xchg
mov
sbb
sti
nop
fisttpl
xchg
daa
popa
mov
push
out
clc
xor
cld
sub
sbb
ljmp
or
pop
cmp
pop
rol
repnz
rclb
leave
mov
scas
fwait
push
pop
mov
stc
fsqrt
loope
pushf
jp
push
adcb
lret
cmpsb
inc
mov
fadd
aad
push
sub
or
popf
lock
or
int3
gs
pop
loop
std
jns
push
pushf
adc
lret
je
pop
add
test
lcall
int
xor
popf
dec
js
jnp
pop
ret
mov
dec
loop
imul
push
mull
aam
xchg
lods
push
test
orl
shl
xchg
mov
sub
mov
push
int
lock
outsb
pushf
pop
pop
push
pop
mov
iret
repnz
in
repnz
ss
fdivs
fdivrl
hlt
out
insb
cmp
xor
inc
repnz
aad
inc
loopne
jb
dec
cmp
or
push
les
leave
test
adc
fsub
mov
add
jae
or
stos
pop
cmpsl
pop
dec
bound
add
add
std
adc
jecxz
sub
fwait
or
sbb
into
pop
call
cmpb
jl
in
lahf
mov
xor
and
mov
push
sub
shrl
stc
dec
cmpb
and
xor
mov
clc
inc
push
mov
push
dec
adc
mov
dec
aas
fdivrl
pop
pushw
cmp
mov
jnp
jnp
jl
push
loop
xor
pop
xlat
fcmovu
mov
imul
mull
jns
mov
mov
sub
lds
mov
sub
testl
das
jecxz
in
mov
jne
insl
lret
jmp
mov
push
mov
jo
incl
sub
cwtl
dec
inc
out
iret
xchg
sbb
xchg
push
popf
sbb
movsl
pop
pop
ret
nop
fnstcw
lret
nop
push
stc
ret
xchg
sub
inc
add
gs
sbb
or
fnstenv
fisttpl
bound
call
outsl
jne
pop
cmp
jbe
movsl
inc
imul
fwait
bnd
pop
sub
lods
pop
dec
xor
iret
bound
movsb
mov
in
popf
sbb
mov
dec
xchg
jb
jnp
icebp
dec
lods
test
jae
push
gs
mov
push
add
insl
mov
addr16
andl
idivb
xchg
push
pop
add
sub
pop
push
xor
ret
lock
dec
lock
mov
test
cmpsl
stc
jae
cmpl
and
xor
inc
xor
outsb
pop
iret
lds
xchg
ljmp
sub
add
mov
iret
sub
xchg
js
dec
hlt
in
out
out
iret
movsl
out
into
mov
dec
dec
xchg
dec
fdivs
clc
in
mov
pop
dec
add
je
sub
dec
push
fisttps
mov
mov
pop
dec
movsb
inc
insb
shl
and
pop
dec
int
cld
repnz
icebp
cmpsb
lret
push
jo
or
adc
xor
sub
popf
inc
vandps
xor
in
loope
push
cmp
dec
xor
mov
cmp
or
sub
out
out
insb
jno,pt
dec
rcrb
daa
fldcw
loope
not
dec
fldt
xchg
inc
push
xlat
inc
adc
bound
sbb
fcomps
fucom
xor
ss
mov
jns
and
and
pop
movswl
mov
dec
cld
dec
cmpsb
ret
inc
int3
inc
movsb
sub
xchg
jnp
ljmp
jp
lret
pop
xor
fs
fimuls
std
in
dec
xchg
or
aad
movsl
arpl
sbb
push
add
adc
push
mov
scas
repnz
pop
cwtl
xchg
pop
jnp
fimuls
loop
js
mov
fcoms
xor
add
or
mov
fistpll
popa
into
push
ja
insl
pop
lock
dec
jne
daa
in
in
and
xor
lahf
pushl
push
mov
popf
xor
repz
push
fldcw
orl
cmpsl
stos
mov
mov
out
rorl
ret
pushf
xchg
and
fucomi
fwait
pop
insb
jb
pop
and
or
fstp
shll
adc
mov
or
adc
data16
in
sub
je
lock
push
jns
cmp
jb
push
xchg
and
xchg
inc
fsub
sub
popf
ljmp
jmp
cld
imul
lcall
mov
push
lret
shl
mov
pop
xchg
mov
xchg
or
pop
mov
pop
fbstp
jmp
adc
or
jb
pop
and
fstpt
adc
int3
jmp
dec
push
sbb
mov
fldcw
xchg
jbe
pop
call
dec
mov
push
and
xchg
out
stos
seto
adc
ljmp
inc
lock
filds
xor
xor
loopne
fcmovnbe
les
cmp
in
jne
icebp
mov
pushf
add
cmp
lret
js
xlat
adc
jbe
adc
mov
mov
movsl
mov
cld
sub
sub
jno
xor
mov
fists
sub
sbb
rcrb
insl
stos
and
stc
sbb
repz
cmp
shl
cmp
pushl
enter
and
out
movsb
mov
sbb
xorb
aas
arpl
ret
xchg
jns
xor
aas
ds
cmp
aad
push
pusha
push
dec
cltd
or
xchg
cli
call
ja
jecxz
xorb
aas
and
mov
jge
jnp
xor
test
and
icebp
mov
xchg
cli
clc
mov
roll
subb
push
jmp
sub
insb
andb
jbe
into
out
into
lds
fstpl
mov
aad
fs
or
arpl
mov
lods
popl
sbbl
mov
push
dec
push
loop
xchg
sbb
rcrl
stc
lahf
sub
jge
outsl
pop
in
ljmp
gs
icebp
sub
or
jmp
fs
sub
add
mov
dec
or
hlt
in
orl
andb
imul
and
xchg
dec
mov
loopne,pt
sahf
daa
mov
pop
and
sub
xchg
add
xor
xorb
je
adc
mov
inc
sub
and
jns
cld
xor
cld
dec
insb
pop
aam
push
push
or
mov
pop
lds
jmp
xchg
cmp
pop
inc
into
addl
lea
dec
sub
sub
lret
insb
mov
popa
pop
inc
mov
cld
outsl
jae
sub
ss
fadd
nop
ds
sub
movsl
nop
inc
movsb
push
mov
pop
adc
es
mov
lock
shll
fdiv
add
stos
xchg
movsb
inc
stos
pop
dec
jp
lock
imul
mov
pop
adc
pop
cmp
fidivrl
dec
pop
andb
shl
pop
and
loope
and
dec
popf
ja
dec
push
mov
xchg
sbb
mov
add
push
jp
movsl
stos
mov
xchg
push
jecxz
push
sub
andl
shlb
mov
sub
ja
xchg
jns
jg
int
out
addr16
xchg
cli
stos
int
lahf
sbb
fcomps
in
jp
or
mov
xlat
jecxz
out
sbbl
clc
sbb
xor
test
jmp
in
popf
nop
daa
or
add
std
test
adc
fsubrs
test
movsl
popa
andl
repz
mov
dec
mov
or
mov
xchg
test
cs
dec
stc
outsb
pop
je
jg
adc
xchg
lahf
movl
out
sbb
int3
sbbl
mov
pop
pop
das
adc
iret
mov
inc
out
push
mov
mov
into
cmp
add
lds
fldt
mov
lea
clc
movsl
lret
adc
sub
push
loope
setge
and
add
jnp
cmpsb
or
mov
aaa
mov
test
push
dec
into
add
jmp
in
adc
sbb
pop
cmpsb
add
mov
popa
or
or
lea
mov
mov
mov
enter
arpl
fists
and
mov
pop
hlt
sub
jo
mov
jmp
push
mov
scas
ss
cmp
fiaddl
mov
das
fcmovnbe
or
pushf
rolb
aaa
out
and
aaa
rcrb
scas
daa
aam
into
shll
pop
xor
jl
pop
xor
imulb
inc
lock
add
mov
jecxz
rclb
dec
hlt
fistpl
mov
add
je
dec
call
dec
cmc
test
inc
pop
addl
or
lock
call
sub
insl
inc
lods
and
inc
shrl
aad
std
jno
push
xchg
or
push
pushf
in
lcall
ret
push
cwtl
mov
jge
mov
std
xor
lahf
loope
ret
cmp
dec
in
fdivs
lret
jp
dec
aad
add
add
add
mov
inc
or
outsl
dec
jne
xchg
fcmovnu
xchg
jo
iret
out
in
das
cld
or
loope
loope
int
mov
insl
data16
loopne
push
shl
mov
popa
jne
pop
pop
push
data16
cmpsb
mov
fisubs
add
cmp
cmp
into
push
nop
jle
adc
push
into
mov
xchg
xchg
pop
jo
lods
xchg
mov
jns
mov
push
push
lea
inc
mov
xor
leave
pop
testb
push
mov
stc
and
and
int3
test
dec
in
shl
xchg
jno
sbb
inc
push
dec
jno
hlt
pop
xchg
add
mov
nop
cwtl
into
inc
lret
and
jle
loopne
add
mov
jle,pt
call
in
mov
xchg
testb
sbb
insb
adc
xchg
lahf
and
cmp
push
test
mov
imul
cld
scas
xchg
xor
and
int3
test
and
and
stos
pop
js
rorb
dec
mov
adc
dec
mov
shl
jae
xchg
fimuls
push
out
lret
fists
roll
rcrl
movsb
add
pop
push
out
adc
jno
popf
mov
adcb
rorb
and
sub
int
push
popf
aam
adc
and
or
roll
ret
lret
push
dec
dec
mov
data16
ljmp
xlat
jl
push
adc
movsb
cli
movsl
leave
aad
mov
ficompl
cmp
aas
arpl
sbb
push
fbstp
and
jae
cs
sub
and
mov
lret
mov
ficoml
div
cmp
out
pop
mov
sti
mov
cli
mov
dec
mov
loope
mov
lock
mov
or
and
cmp
int3
lret
mov
jge
test
jb
shlb
cmpsb
dec
aaa
in
jge
adc
dec
push
push
mov
adc
add
jnp
lods
daa
lahf
pop
lahf
lret
daa
daa
ljmp
dec
mov
mov
ficompl
jae
inc
xor
scas
clc
fs
lret
sbb
mov
es
jns
mov
mov
addb
loope
dec
test
jle
test
or
jbe
movsb
mov
sbb
shl
pop
mov
push
fdivs
xchg
out
dec
test
ret
je
adc
xchg
xchg
addr16
jb
xchg
fdivrl
mov
push
sbb
adc
push
push
fs
insl
add
xchg
xchg
iret
adc
add
fiaddl
mov
sub
loop
and
xlat
push
sub
dec
loope
cmc
lahf
mov
jbe
adc
adc
xchg
mov
sarl
push
in
ficoml
dec
mov
into
je
mov
sub
loopne
imul
test
loopne
js
cmp
je
sahf
dec
pop
push
and
out
ret
ljmp
outsb
push
jno
aam
add
fnstenv
adc
jge
mov
or
loop
test
das
mov
into
jp
push
add
jmp
ljmp
in
mov
push
sbb
xor
dec
jns
pop
mov
mov
inc
cs
pop
dec
call
in
test
repz
cmp
mov
ret
jmp
shlb
stc
not
sub
test
roll
out
add
ficomps
cmpb
nop
mull
test
sub
xchg
fs
mov
add
or
jno
add
adc
dec
xchg
xchg
aaa
push
int
inc
arpl
orb
add
mov
testb
pop
cmpsl
and
mov
lcall
stos
into
mov
ja
jo
and
les
insb
cmp
stc
gs
lcall
dec
xchg
mov
outsl
mov
push
mov
adc
xchg
ror
ds
pop
push
sub
int3
mov
push
add
mov
inc
leave
in
jmp
dec
pusha
sbb
or
xchg
dec
xor
xor
insl
ficoml
aas
mov
inc
xchg
and
fs
cli
and
dec
loopne
pop
jecxz
add
mov
pop
into
nop
sub
enter
mov
mov
arpl
and
mov
xlat
xor
mov
mov
xchg
rolb
or
jnp
enter
inc
jp
daa
call
repnz
cwtl
sub
add
add
js
pop
loop
dec
xor
aas
sub
sub
ds
bound
adc
xchg
or
sub
testl
test
cs
cmp
pop
pushf
enter
add
sti
out
test
jmp
fwait
in
fsubs
shlb
jg
int
xchg
inc
lcall
mov
adc
fidivrs
stos
jnp
arpl
inc
pop
dec
add
add
lret
in
rcrl
int3
ljmp
cmp
into
mov
clc
xchg
cwtl
out
push
jg
addl
xchg
mov
shll
jo
aad
ds
mov
inc
inc
sub
cwtl
call
adc
scas
fisttpl
shl
test
cmp
icebp
or
lea
sub
inc
mov
les
fwait
mov
call
xlat
push
jnp
out
popf
mov
faddl
mov
sbb
xlat
rcll
int3
xor
adcl
mov
pcmpeqd
sahf
ret
mov
mov
fcom
lret
sbb
mov
insl
mov
jo
adc
sti
ds
jmp
fcomps
jle
mov
cmp
mov
pop
inc
std
sbb
aad
js
sarl
jmp
mov
cli
adc
cmpsl
mov
mov
pop
jle
fbld
ja
rorb
and
mov
xchg
sbb
enter
out
mov
test
jne
adc
or
outsb
ficoms
into
push
mov
lahf
inc
mov
sbb
add
cltd
sbb
shrb
es
popa
loopne
aas
xchg
daa
ja
lock
arpl
sbb
ficoms
arpl
addl
mov
adc
mov
fsub
fwait
pop
or
add
xchg
aad
jg
xchg
test
jae
inc
lods
enter
divb
cmp
cli
rclb
loopne
xchg
std
aaa
or
jne
test
cmp
mov
sbb
and
fscale
pop
or
stos
jo
adc
xchg
sub
bound
xor
notl
sbb
enter
or
lcall
or
clc
mov
out
in
inc
jbe
xor
rcrb
rorb
jo
or
xchg
cs
dec
ret
fisttps
xor
jne
out
pop
mov
inc
lret
xor
pushf
sbb
in
mov
inc
icebp
loop
push
fwait
lahf
fwait
or
stc
ss
mov
adc
lret
pop
out
lret
jg
les
cmpsl
sahf
es
icebp
sti
and
in
xlat
jb
decb
sub
insb
nop
lret
call
xor
fadds
out
call
xor
in
add
out
jnp
xor
testb
ljmp
cmp
rcrb
dec
in
mov
dec
xchg
add
mov
pop
cmc
jle
cmc
and
xor
jo
mov
dec
xchg
inc
ret
cmp
jb
cmp
outsb
dec
xor
or
dec
push
pushf
cld
cmp
pop
ret
xchg
cld
cltd
gs
inc
lret
mov
mov
daa
addl
and
testb
push
popa
pop
mov
mov
cmovb
xlat
outsb
mov
xchg
push
dec
cmpsb
mov
adc
stos
les
push
sbbb
mov
xor
xchg
mov
xor
cmpsb
pop
fisubrl
push
xchg
repnz
mov
jae
bound
cmp
aad
push
jns
in
jnp
ljmp
pop
leave
inc
mov
rol
cwtl
es
jp
stos
out
rcrl
int
or
dec
jno
stos
cmpsl
in
sbb
aad
pop
scas
push
sbb
jnp
dec
adc
ds
cmpl
negl
mov
adc
rorl
lods
inc
push
jo
sbbl
lretw
mov
xchg
mov
outsl
imul
adc
subb
in
pushl
fadds
testb
push
sub
cmpsb
push
insl
or
mov
out
fistpl
lret
pop
push
adc
inc
push
cmp
and
pop
sub
push
pop
sbb
sbb
push
loope
cmp
push
das
call
imul
xor
icebp
js
fiadds
add
jb
jl
mov
mov
xchg
sub
push
cmpxchg
or
rcll
dec
bound
and
icebp
jnp
push
mov
imul
es
out
mov
fcomip
movsb
adc
movsb
or
popa
ror
and
insl
popa
out
lock
cmp
adc
iret
pop
xchg
push
xor
cld
ficoml
loop
push
ja
pop
xor
ficoml
and
cli
xor
outsl
and
stos
test
out
xchg
stos
push
pop
push
sbb
rorb
roll
xchg
push
push
adc
mov
push
adc
outsl
enter
mov
pop
pop
dec
xor
xchg
imul
mov
scas
sbb
pop
mov
pop
insl
mov
pusha
xor
or
mov
mov
mov
and
cmc
out
sub
clc
ficoml
jnp
ret
aaa
nop
and
fwait
scas
bswap
adc
jp
out
daa
rcrl
dec
sti
inc
and
mov
add
sbb
int
daa
mov
pop
sti
or
dec
jle
movsl
and
ror
std
push
sub
jne
dec
repz
cmp
mov
jne
daa
pop
call
pop
push
scas
testb
aas
mov
fdivrs
lds
jg
push
outsl
xchg
aaa
fdivs
lret
jo
add
inc
mov
cli
loope
daa
jae
xchg
mov
fcomps
add
rclb
lahf
out
sbb
push
imul
xchg
mov
push
addl
addb
arpl
jge
inc
ret
stos
shll
mov
out
inc
xchg
addr16
pop
mov
cmpsl
push
pushf
shr
sbb
out
cltd
push
sub
clc
fmul
fnstenv
cmp
cmp
cmpl
fsubl
mov
ljmp
lods
push
jge
ret
lcall
mov
lret
and
mov
jae
mov
aas
arpl
movsl
aad
push
data16
cmp
frstor
pop
daa
xor
ds
rorl
mov
icebp
lahf
fcoml
cmpsb
and
into
leave
mov
add
cmpsl
xchg
popa
fistpl
lea
mov
jmp
in
xchg
addr16
shlb
in
sub
outsb
push
or
loopne
inc
and
test
lret
dec
int
sbb
loopne
aaa
mov
out
ja
test
fcoml
mov
mov
mov
or
in
dec
jge
sahf
std
pop
jns
sub
mov
xor
add
mov
xor
inc
or
inc
arpl
mov
int3
xor
jecxz
sbb
clc
icebp
pop
in
ss
xor
xlat
popf
push
pop
sahf
je
rorl
rcrb
ret
xor
les
outsl
test
jnp
mov
xchg
add
fs
and
in
dec
push
popa
jno
scas
sti
push
mov
dec
sub
pop
inc
scas
imul
or
js
fwait
test
cmp
les
test
xchg
into
out
fstpl
xchg
xchg
gs
xchg
or
inc
pop
jno
hlt
add
ret
cmp
jne
popf
jl
sbb
or
or
int
and
dec
test
lret
xor
pop
fnsave
push
sub
in
lcall
add
dec
dec
les
push
xchg
inc
add
addb
sbb
pushf
ret
insl
nop
mov
dec
popf
jl
adc
dec
scas
jmp
lcall
adc
add
add
imul
repnz
mov
adc
je
xchg
add
mov
or
push
stos
jle
xchg
imul
xor
loop
and
testl
pusha
or
mov
mov
or
jae
es
pop
out
inc
fs
adc
xchg
mov
mov
mov
inc
clc
sbbb
inc
mov
stos
or
jb
xor
or
sub
jns
fdivrl
pushf
lret
mov
adc
and
ret
jnp
push
pop
and
or
or
pop
mov
out
js
loope
push
mov
sub
sbb
push
mov
dec
or
cld
or
repnz
adc
add
pop
xchg
jle
popa
ljmp
add
movsl
lods
mov
sbb
cmp
sahf
je
and
aas
jbe
inc
mov
das
jl
lret
test
xchg
fdivr
mov
fidivrs
stc
movsl
lahf
dec
add
mov
ret
into
add
loopne
mov
pop
pop
sub
cmpsb
into
xchg
lock
mov
inc
jmp
pop
sbb
inc
adc
push
scas
and
adc
mov
out
dec
push
add
lcall
pop
inc
test
movsl
or
daa
iret
sar
loop
mov
sub
jecxz
into
nop
aam
cmc
cmpsb
fdivl
mov
cltd
add
or
enter
mov
std
and
add
xor
data16
bound
lret
sbb
stos
jb
je
mov
jp
add
fs
ret
mov
pop
outsb
es
mov
dec
push
sbb
push
add
lods
mov
rorl
dec
out
mov
sbb
aas
lods
inc
and
mov
subb
xor
push
inc
inc
pop
pop
rclb
iret
call
push
cmp
outsl
mov
sbbb
aaa
dec
mov
sub
adc
popa
mov
jmp
cmp
mov
cmp
leave
adc
fldcw
dec
aaa
scas
shrb
and
pushf
push
ja
sbb
jnp
insb
inc
pop
jle
js
xchg
lret
testl
cmp
xorb
lods
xchg
testb
inc
ret
je
sarl
mov
lahf
subl
aas
sbb
imul
push
xchg
cmp
pop
or
je
xor
pop
aam
jno
sbb
nop
hlt
mov
lods
mov
aas
divb
loopne
jl
or
xchg
sbbl
pop
and
adc
rcr
mov
insb
fwait
movsb
adc
aaa
cmpsl
stos
icebp
fmuls
push
xor
fldcw
sub
sub
mov
lods
adc
push
inc
sti
mov
jle
pushf
xor
mov
imul
pop
in
in
jg
sahf
fidivrl
inc
dec
ljmp
ficoml
xorl
adc
lock
sbbl
xor
inc
scas
add
xchg
ds
test
es
add
jg
jbe
sub
push
and
xor
push
sbb
int3
mov
je
divb
leave
push
test
sti
ljmp
or
fs
ret
add
gs
loop
xchg
out
dec
mov
dec
xor
sbb
pop
rclb
inc
xor
push
sbb
mov
arpl
push
out
push
push
shll
test
pop
daa
aaa
push
pop
push
jmp
mov
icebp
test
iret
mov
cmp
mov
js
call
popf
cmpl
push
inc
outsb
cli
adc
lods
outsb
jne
dec
add
cmp
stos
sahf
in
mov
push
mov
sbb
repz
in
push
mov
push
mov
shlb
or
scas
cmpb
hlt
xchg
push
pusha
mov
push
mov
fsubr
sbb
punpckldq
add
sbb
pop
out
das
pop
push
lcall
xchg
cmp
jmp
jae
mov
insl
inc
in
xor
std
sarb
pop
sub
fcmove
push
dec
dec
mov
sbb
repnz
mov
lods
je
imul
subl
mov
cmc
or
adc
inc
out
adc
mov
or
inc
sbb
mov
dec
xlat
mov
add
iret
addr16
js
icebp
leave
popa
jl
mov
js
push
mov
fistl
dec
mov
fildll
xchg
addl
sbb
leave
icebp
sbb
pop
push
add
mov
test
mov
and
ja
cs
int
jns
fisubrl
lret
lods
mov
mov
xor
iret
aam
ja
mov
cmp
xchg
sub
or
or
int3
pushf
mov
ds
cmc
cli
cmp
cmpsl
cmc
xchg
mov
out
mov
ret
jne
inc
cmp
mov
adc
int
aad
stc
hlt
mov
dec
daa
and
adc
jo
push
or
xchg
repz
jl
faddl
or
xchg
cmpsl
inc
xor
mov
mov
jo
xchg
insb
pop
push
stos
cli
inc
sar
xchg
push
nop
pusha
and
xor
sbb
sbbb
dec
int
fisubl
std
outsb
mov
cs
imul
inc
adc
mov
mov
xor
aaa
xor
and
dec
shlb
in
push
std
fs
push
out
jns
and
sbb
adcl
push
mov
adcb
jl
and
lods
cmp
add
xchg
lahf
sbb
mov
outsb
fs
sub
rclb
stc
pusha
push
lea
icebp
mov
out
xor
mov
test
rol
xchg
and
push
sub
push
call
mov
ror
add
mov
push
sub
and
scas
cmpsl
subb
cltd
and
mov
idivl
lods
aam
loope
xor
inc
stos
mov
cmp
js
ljmp
loope
xlat
xchg
into
sbb
fnstsw
add
test
inc
std
inc
jbe
dec
je
sti
add
xchg
ss
out
xchg
xchg
pop
into
xchg
clc
ret
or
jo
and
jo
stos
and
out
int3
push
sub
push
or
pop
and
mov
stos
xor
cmp
nop
sub
into
sbb
movsl
pop
hlt
mov
les
push
movsl
sub
mov
and
stos
fisttpl
negl
test
sub
jno
ja
cmp
mov
jge
ds
cmp
test
add
dec
lcall
pop
mov
inc
jge
mov
jecxz
xchg
push
sub
cmp
mov
shll
out
add
inc
mov
push
lret
mov
ja
push
push
pushf
scas
loop
rclb
or
or
xchg
fstpt
loopne
sbb
jle
sbb
sbb
and
shr
fcomps
popf
push
add
test
push
rclb
pop
xchg
or
jge
lds
fcoml
adc
mov
xorb
adc
clc
xchg
les
mov
jb
gs
dec
mov
sbb
ja
push
mov
cltd
repnz
add
rep
insb
xchg
push
insb
xorb
lret
imul
mov
mov
out
add
adc
xchg
jo
mov
roll
imul
jae
orl
faddl
add
jae
adc
movsb
inc
cmp
gs
stc
push
push
popf
ljmp
fiaddl
stc
out
dec
les
xchg
pop
xchg
lcall
and
lds
fcoms
cs
inc
or
stos
and
cmp
xorb
repz
xchg
mov
testb
and
jmp
mov
dec
add
inc
movsl
lret
jae,pt
sub
aad
push
adc
call
jmp
cmp
cmpsl
mov
call
jmp
pusha
cmpsl
stos
fcompl
push
fwait
pop
lea
iret
imul
sbb
pop
test
test
xor
adc
scas
xchg
inc
and
cmp
cmp
int
dec
sahf
mov
jl
dec
fcompl
jnp
popa
pusha
rcl
cltd
push
lret
aad
ret
push
loope
lahf
popa
xor
mov
mov
loop
popl
iret
mov
push
mov
insb
pop
sub
pmaxub
mov
add
test
mov
xchg
imul
andb
push
ja
movsl
jmp
stos
adc
mov
test
adc
sti
mov
xchg
test
in
nop
out
add
mov
or
es
xchg
push
arpl
sahf
push
lcall
lahf
cmpb
push
dec
addr16
cmpsb
ret
cmp
test
je
out
dec
add
lret
add
sub
fcmovb
push
out
and
inc
loope
sbb
pop
pop
push
or
cmp
nop
popa
cmp
or
shrb
sub
popf
push
cmpsl
rorl
sub
pop
into
push
jle
sub
or
repz
addr16
jp
lds
fwait
cmp
sub
xor
insb
loope
in
leavew
int3
sbb
push
bound
cmpps
aam
sub
mov
adc
xor
dec
lods
xor
ficomps
notl
cwtl
xchg
cmc
mov
mov
mov
fidivl
scas
jge
pop
sub
mov
jns
xchg
cli
popf
xor
jg
scas
cmpb
andl
movsl
mov
popa
cmp
push
gs
cs
movsb
rcrb
pop
add
popa
addr16
ljmp
mov
dec
add
in
jmp
adc
fs
sub
pop
ja
mov
adc
test
sbb
cwtl
push
and
mov
jo
mov
add
dec
xor
mov
cmc
dec
jl
cmp
mov
or
imul
or
cmp
mov
xor
sahf
je
xor
inc
mov
dec
xchg
inc
xchg
xor
pop
xchg
loope
cmpl
mov
xchg
mov
int3
dec
xor
pushf
sti
and
add
fsubl
outsb
jg
jecxz
xor
push
in
xor
dec
or
out
into
les
pop
scas
mov
xchg
push
test
cmpl
sbb
dec
ret
jne
xchg
je
dec
inc
mov
lods
aaa
and
mov
mov
mov
sbb
and
lds
mov
push
xchg
sbb
jae
dec
pop
cli
pushf
ret
mov
adc
loop
xor
nop
push
sti
pop
stos
adcb
jecxz
dec
xor
sub
push
mov
cltd
int
or
in
aam
pop
xor
jp
hlt
je
push
sahf
and
mov
jmp
sbb
inc
aas
sub
mov
ss
fidivrs
into
enter
xor
scas
mov
xor
pop
div
in
test
add
or
nop
in
ss
jne
flds
mov
xchg
mov
dec
sub
lret
mov
arpl
adc
lods
jns
lods
aad
outsl
dec
nop
cmp
jne
pop
jge
sbb
xchg
cmp
sub
out
ss
push
inc
mov
mov
rorl
jge
test
jne
push
jecxz
jge
shll
aas
mov
cwtl
or
data16
add
cmpsl
cltd
insl
fadds
add
fwait
dec
aas
mov
pop
jns
sub
nop
add
fisubrl
dec
adc
jp
xchg
mov
leave
push
jecxz
repz
fwait
pop
mov
subl
stos
out
add
rclb
test
sbb
push
out
jmp
push
inc
lcall
lock
sub
outsl
push
out
dec
mov
es
in
mov
cmp
iret
fsubl
mov
mov
es
and
push
adc
and
lods
xchg
adc
and
or
mov
dec
shr
xchg
popa
cli
push
pop
js
pusha
add
mov
mov
sbb
rcl
and
cltd
popf
popa
insb
sub
mov
mov
sbb
insl
mov
hlt
ljmp
mov
or
das
test
aas
movsl
leave
test
cmp
pushf
test
jl
cbtw
cs
pop
daa
xor
gs
xor
pop
xor
rcrl
adc
sbb
push
fimull
cltd
sbb
jns
pop
pop
pop
fisubs
das
inc
mov
cmp
push
jecxz
push
and
in
inc
addb
cmpsl
sub
cmp
cmpb
fwait
stos
cmp
mov
icebp
fldcw
sbb
loopne
loopne
bound
in
mov
dec
hlt
sub
dec
fidivs
dec
mov
jle,pn
out
leave
shl
and
and
lods
fwait
insb
sub
cmp
inc
push
push
or
mov
cmp
xchg
cmpsl
aas
jg
dec
xchg
push
ljmp
add
push
mov
push
dec
movsl
dec
test
jg
jb
sbb
in
lock
and
push
lret
fidivrs
addb
pop
push
int
inc
fsubl
or
loope
xchg
pop
inc
xchg
rorl
or
fcoml
pop
imul
mov
jb
ss
jg
jp
xor
sbb
adc
push
add
xchg
iret
out
cmp
add
jo
add
pusha
jno
pusha
or
fld
cmp
push
lds
pop
fisubl
ret
lahf
sahf
je
cs
ret
sub
lock
dec
insb
and
aaa
lahf
xor
mov
mov
cmpb
js
jno
cwtl
xchg
mov
cmp
aas
aad
mov
sahf
mov
pop
popa
aas
and
scas
movsl
inc
and
andb
jb
insb
outsl
sbb
mov
iret
bound
sahf
or
push
adc
test
inc
adc
cmpsb
sbb
icebp
lret
aas
adc
mov
pop
int3
mov
inc
bound
sub
cmp
rorb
pop
or
adc
ljmp
enter
loopne
test
sub
icebp
shlb
pop
stos
adc
sub
and
pop
aad
repz
and
xor
pop
cwtl
fnstcw
inc
loopne
and
or
pop
mov
loop
fsub
popf
lahf
and
jb
dec
jge
iret
or
cltd
add
repz
cmp
mov
add
and
scas
pop
sbb
mov
aam
xor
out
mov
or
mov
sarl
sti
and
mov
pop
mov
cltd
leave
arpl
sti
inc
insb
call
add
movsb
mul
sub
clc
pusha
mov
cmp
filds
imul
cmpsl
fistpl
repz
jg
cmpl
add
inc
ficoml
cmp
push
and
or
sbb
mov
inc
xchg
loope
fcmovnb
xchg
outsb
xchg
and
dec
pop
popf
insb
dec
push
cmp
mov
cmpsl
pop
decb
adcl
mov
shl
xor
jl
xor
pop
out
push
into
adc
mov
loope
jo
jbe
xor
adc
mov
icebp
jbe
pop
addr16
push
out
js
sub
stc
jns
aaa
out
sub
ficomps
inc
lock
fidivrs
xor
jns
pop
pop
mov
add
cmp
dec
aaa
dec
in
dec
mov
test
adc
mov
or
mov
outsb
mov
push
jb
xor
ds
movsb
dec
push
ret
scas
inc
test
cmp
push
fidivs
outsl
test
xor
cld
sub
popf
mov
jns
inc
pop
mov
mov
mov
aam
adcb
pop
xor
push
cs
pop
mov
xor
or
orl
in
in
xchg
test
mov
imul
jns
sbb
in
loope
arpl
pop
enter
pop
pop
xchg
fs
pushf
jae
aaa
fidivrl
test
xor
push
xchg
dec
icebp
jnp
ret
inc
scas
xchg
ljmp
jg
xlat
pop
and
push
je
sbb
mov
test
sub
imulb
mov
mov
mov
dec
pop
mov
mov
repnz
mov
repz
mov
cld
mov
adc
pop
popf
sahf
mov
bound
mov
icebp
xchg
outsb
add
stos
xchg
or
mov
lea
fs
adc
jae
pop
inc
shll
mov
dec
add
aam
aad
xor
cmc
push
adc
mov
out
cmp
enter
lea
out
pusha
scas
mov
inc
int
daa
dec
jl
test
aaa
push
outsb
push
jbe
mov
inc
aam
fimull
aad
mov
adc
push
jle
shlb
out
test
sub
fimuls
inc
scas
inc
jl
pop
aam
inc
sti
stos
xchg
repnz
mov
or
loope
push
xchg
ljmp
int3
mov
dec
xchg
in
dec
mov
jg
mov
ja
xchg
cli
scas
jae
xor
mov
js
adc
lock
inc
mov
sbb
addl
pop
push
cmp
adc
clc
fxam
xchg
subb
inc
or
addr16
mov
sub
in
imul
cmp
mov
int
or
arpl
adc
inc
xchg
psubsb
cmpsb
scas
scas
imul
jle
sti
clts
pop
inc
or
mov
cmpsb
bound
xchg
sub
push
lods
push
and
push
out
mov
pop
out
sub
jae
test
stos
sub
cwtl
mov
icebp
movsl
mov
cltd
cmp
lods
ja
cmp
mov
push
push
push
push
jecxz
jo
cmp
out
lahf
pop
insb
xchg
mov
je
repnz
xor
lahf
mov
subl
fwait
cs
or
mov
cmpsb
shll
lcall
gs
enter
dec
icebp
rdtsc
imulb
mov
inc
sbbl
fdivrl
cltd
add
shll
mov
dec
fsubrs
push
lahf
outsl
sub
inc
xor
scas
sub
jmp
push
mov
and
add
int
movsb
imul
imul
aam
push
and
jge
pop
or
ja
or
fwait
sub
adc
xchg
xchg
adc
in
adc
aaa
ljmp
lahf
scas
enter
pop
arpl
push
xorb
dec
sub
sub
sbb
push
icebp
in
mov
add
add
ss
adc
repz
orb
push
add
jl
sbb
cmpsb
add
cmc
fucomip
fsubs
ds
xor
mov
jmp
outsb
pushf
enter
jo
aad
test
inc
and
fsubrs
and
test
xlat
icebp
imul
cmp
pop
mov
push
addr16
inc
and
push
sarb
clc
add
pushf
ret
jmp
cmpsl
push
sbbb
negb
cwtl
push
jmp
flds
add
ficompl
or
scas
cmp
hlt
lds
pop
ficompl
rolb
pop
outsb
adcb
push
mov
outsb
fs
stos
cmpb
mov
and
movsb
orw
jl
mov
mov
mov
repz
mov
sbb
push
jne
in
addr16
cltd
imul
cld
test
hlt
fisubrl
sahf
xlat
movsl
mov
mov
popa
pushf
mov
test
clc
dec
rclb
es
cmpsl
repz
xchg
ja
les
mov
add
xchg
pop
mov
push
sub
call
mov
inc
dec
mov
faddl
pop
pop
xor
push
mov
mov
sbb
js
pop
dec
push
xor
push
std
sub
inc
pop
lods
addb
nop
ljmp
xchg
shrl
xor
sbb
xchg
fsubl
in
push
stos
add
or
jmp
pop
dec
push
adc
lods
sbb
xchg
out
pop
lock
dec
push
xor
sub
in
or
adcl
mov
xchg
pop
scas
xchg
cmp
dec
orb
sbb
adc
add
jmp
ficoms
fldt
cs
test
aaa
pop
dec
js
int
cmp
push
out
mov
inc
decl
out
push
scas
in
cmp
and
dec
jl
test
loop
int3
mov
or
jns
das
mov
aad
enter
adc
or
and
jne
pop
or
nop
enter
push
cwtl
pushf
inc
push
jle
sub
test
adcl
inc
dec
nop
std
cmc
lret
cmp
mov
addr16
cmp
sub
fldcw
jmp
jnp
push
push
rcl
insb
js
mov
and
cmp
xor
jecxz
xor
lea
daa
incb
cmp
test
fnclex
jecxz
in
pop
insb
stos
jb
dec
add
sbb
cmpsl
aad
out
test
cs
xchg
jne
xchg
sbb
xchg
shlb
insl
loop
jge
jl
dec
mov
cmp
cmp
push
or
jo
push
push
mov
add
mov
adc
mov
stc
or
ret
jge
outsl
in
sahf
pop
xchg
adc
into
jp
aam
adc
mov
mov
andb
clc
xchg
mov
or
xchg
lcall
ds
xor
in
repnz
test
mov
jns
rol
cmp
cmp
push
and
dec
pop
mov
lahf
mov
cmp
sbb
mov
popa
mov
push
mov
test
shrb
ret
inc
and
xchg
push
dec
jmp
mov
shlb
sub
in
jecxz
shl
es
int
scas
das
dec
movsb
outsl
pop
sbb
cwtl
and
lcall
pop
out
stos
inc
outsb
dec
shll
pop
cmp
fadd
lret
pop
ds
adc
pop
jge
mov
andl
adc
cs
int
fsubr
jns
stc
in
ror
mov
pop
jge
pop
add
sbb
and
pop
in
cmpsb
fimull
add
lcall
push
inc
dec
fidivrl
xchg
loopne
out
sbb
xlat
mov
vmread
cmp
popf
xor
cmp
sahf
fiaddl
jbe
sbb
jl
jb
stos
xor
cmp
add
roll
xchg
mov
jle
jle
stos
sbb
stos
testb
sahf
fimull
pop
ret
daa
in
rorb
testl
adc
rorl
in
jns
mov
or
cmp
adcb
punpckldq
int
stos
rol
lea
inc
imul
sbb
mov
imul
outsb
enter
cltd
mov
jmp
xchg
jns
jmp
repz
mov
in
push
test
and
std
push
jne
sub
push
mov
aas
sbb
out
fldl
jl
push
sahf
lahf
cmpsb
sub
add
aad
xor
push
sub
cld
call
fs
ja
es
ja
stc
cli
add
xor
push
dec
sti
pop
in
mov
fistpl
fimull
cmp
bound
cwtl
xchg
mov
fwait
or
jg
outsb
cmpsl
jne
xchg
jnp
mov
lods
cmpsl
imul
imul
cld
fnstsw
jae
pop
hlt
cmp
rol
adc
lret
inc
mov
cmpsb
push
cli
fwait
cmp
mov
test
jg
loop
xor
jle
lods
out
mov
jnp
ljmp
mov
ja
fidivrl
pop
rcrl
mov
daa
add
rorb
pop
fdivr
decl
dec
mov
repz
xchg
inc
adc
push
pop
pop
jns
mov
mov
add
pusha
jne
sub
cli
dec
or
adc
lods
gs
mov
xchg
mov
out
xor
or
fidivrl
jl
cmp
push
cld
loop
jg
cmp
pop
push
sbb
int3
rcrl
mov
loope
dec
loopne
cmp
addr16
xor
adc
jmp
inc
jl
cmpsl
dec
add
add
mov
jecxz
mov
sub
or
mov
in
sub
or
shll
leave
cmp
inc
testb
data16
or
push
shlb
lret
inc
fadds
pusha
sbb
pop
shrb
cmpl
js
xchg
out
jl
hlt
andl
shrl
movsb
sbb
lods
pop
dec
rcrl
xlat
or
pop
mov
xor
mov
test
push
sbb
mov
aad
push
cmp
xchg
insb
cmp
xor
xchg
outsl
nop
add
push
pusha
mov
sub
cmp
adc
jp
pop
mov
xor
popf
aam
xchg
mov
pop
dec
out
cmp
push
bound
lods
sub
out
rcrl
bnd
adc
push
xor
mov
aad
xorb
mov
cmp
test
mov
xchg
inc
pop
xchg
shl
push
mov
cwtl
xchg
lcall
jl
fmull
xchg
aaa
in
pop
cmp
xchg
sti
push
mov
mov
push
imul
incb
xor
mov
aaa
testl
pop
ret
mov
movsb
roll
jl
pop
push
pusha
dec
inc
rorl
nop
not
leave
mov
push
inc
mov
lods
aad
cli
mov
dec
cmp
cmpsl
insb
inc
mov
mov
sub
jle
add
test
sub
leave
mov
or
mov
dec
shl
pusha
push
in
sahf
adc
mov
jecxz
pop
jp
lret
xchg
mov
and
xchg
in
jge
inc
xchg
lret
and
movsb
mov
mov
dec
dec
aas
jmp
mov
xchg
xchg
clc
mov
cltd
imul
in
add
push
ja
inc
je
mov
imul
pop
xor
pop
mov
mov
or
mull
push
inc
test
int
wbinvd
es
clc
pop
mov
pushf
ret
push
mov
scas
stc
push
mov
xor
sub
test
dec
loope
jmp
stc
xchg
push
sbb
lock
insl
mov
aas
xchg
sbb
xor
sbb
mov
pushf
sub
cmp
loopne
xor
jp
sub
and
ss
xlat
and
in
stc
dec
fxam
shll
sub
inc
lahf
loope
ds
sarl
js
addr16
iret
sub
testb
je
sti
cmpsl
dec
or
loope
adcb
les
and
xchg
test
addr16
ds
enterw
data16
xlat
imul
stos
das
jge
xchg
sub
mov
pop
push
add
call
push
movsl
hlt
iret
inc
les
sub
cmpsb
mov
xor
dec
into
mov
insb
jge
mov
cld
dec
add
enter
call
jae
jecxz
cwtl
jno
cwtl
or
aam
sub
fwait
dec
je
mov
pop
cmpsb
mov
cmpsl
jmp
mov
imul
push
dec
stc
mov
and
loope
popf
pop
in
icebp
inc
dec
fisubrl
nop
pop
test
dec
add
adc
sub
pop
nop
cltd
mov
sub
cmp
cli
popa
cmp
pop
into
lods
loope
out
pop
into
jbe
mov
xchg
scas
xor
orl
sbb
inc
inc
and
mov
and
jge
sbb
ss
mov
movsb
xchg
nop
adc
nop
cmp
inc
ss
orb
mov
ret
pushf
loope
xchg
or
out
or
sub
fsubrl
sbb
mov
adcl
lds
and
xor
ss
inc
push
jo
cmp
mov
xchg
inc
aad
pusha
jmp
and
scas
cmp
pop
sti
xor
rcll
iret
stos
pusha
out
sarb
push
divl
fnsave
push
hlt
push
pushf
in
and
sbb
or
std
and
aas
mov
lret
xlat
pop
in
sub
xor
jg,pn
insb
dec
cmp
inc
cltd
jae
sahf
cmp
test
add
out
jb
mov
nop
sub
stos
dec
ret
cs
mov
sbb
pusha
jbe
pop
nop
orl
mov
scas
inc
bound
pop
push
je
or
xor
out
idivb
or
xchg
xchg
loop
mov
sub
arpl
add
jecxz
imul
cmp
mov
out
in
or
int
xor
dec
ficoml
adcb
sbb
cmp
and
cmpsl
xchg
jg
lds
cmp
ret
lcall
add
pmullw
and
dec
add
pop
dec
sub
pop
in
js
jmp
in
and
cltd
lock
call
int3
push
neg
dec
push
int3
outsb
dec
mov
mov
ret
test
clc
push
xor
lea
push
inc
jb
fsubs
and
leave
iret
dec
inc
lahf
rol
mov
mov
icebp
cltd
jne
push
pop
mov
cmp
int3
and
inc
popf
cwtl
mov
push
mov
ret
add
xchg
add
dec
mov
mov
dec
ret
insl
loopne
addr16
shrl
jb
push
aas
clc
sub
add
sub
mov
sub
test
aam
push
add
mov
repnz
inc
je
cmpsl
loopne
mov
je
mov
scas
mov
push
out
in
dec
stos
and
clc
fmulp
mov
fdivrp
test
mull
xchg
aas
xchg
push
sub
inc
cltd
insb
lock
jecxz
lret
ss
cmpsb
pop
rcl
jae
fiadds
mov
add
push
xor
vmovups
pop
add
lock
into
notb
inc
leave
jge
dec
sahf
sbb
notb
cmp
lock
sbb
rcrl
ljmp
shr
dec
xor
mov
imul
xchg
jne
and
rorb
push
pop
call
call
dec
jecxz
mov
or
repz
jl
ss
cmpsb
or
lock
jge
push
mov
sarb
int3
mov
in
xchg
imul
pop
dec
pop
xchg
outsb
push
or
xchg
fdivrl
and
adc
sbb
adc
daa
or
imul
je
ss
sbb
fisubs
mov
sub
js
jp
jnp
xchg
mov
imul
mov
lret
xorb
or
andl
mov
int3
mov
dec
aaa
pushf
sahf
pusha
mov
and
sbb
adc
jecxz
popf
pop
xchg
mov
ljmp
xchg
sub
mov
arpl
jae
repnz
sbb
inc
test
xchg
jbe
pop
into
push
pusha
sub
arpl
icebp
iret
fadds
jne
push
and
cs
pop
adc
push
fs
cmc
arpl
cmp
ss
or
inc
or
pop
xchg
cmp
dec
pop
mov
lds
cmpsb
call
jle
sub
sbb
cmp
out
add
push
addb
sahf
leave
add
rclb
add
mov
call
sub
push
xor
fimull
or
cmp
pop
fiadds
add
dec
test
push
sub
arpl
mov
shrb
cld
sub
mov
jl
mov
mov
test
dec
lds
icebp
cld
fstp
mov
jmp
pop
dec
jno
into
fbstp
lret
sbb
push
clc
ljmp
movsl
rcrl
push
cld
push
jne
add
aam
cmpsl
lods
rolb
in
lcall
scas
repnz
add
sbbl
scas
outsb
pop
insb
mov
xor
mov
mov
int3
dec
sbb
adc
in
pushl
mov
lahf
push
push
lods
push
adc
int3
pop
push
in
fldl
or
mov
sbb
or
dec
movsb
pop
jnp
in
cmp
or
insb
cmp
jno
sub
pop
out
scas
adc
int3
test
push
xor
or
out
mov
add
cld
add
inc
push
bound
outsl
cmpsl
mov
cmp
pop
jbe
lret
std
cmp
bound
enter
inc
dec
jg
sbb
mov
repz
add
mov
rolb
jge
push
repnz
jno
js
sbb
inc
sub
arpl
les
lds
push
inc
mov
addb
cwtl
shlb
sbb
fcompl
and
mov
push
add
xor
call
outsb
push
sub
sidtl
shr
out
or
jns
mov
aas
aad
xchg
adc
add
push
inc
neg
stc
jo
inc
sub
ss
cmc
jo
or
mov
in
pop
cmp
jno
jge
les
fistpl
jne
mov
faddp
das
fsubrs
or
sub
xchg
jg
mov
push
outsb
jnp
cld
ret
or
cmc
jbe
fsts
cmpb
push
mov
clc
xchg
into
and
pop
imulb
pushf
stos
les
sbb
cli
aam
mov
mov
mov
mov
aad
xor
mov
cmp
mov
arpl
cli
repnz
loopne
loop
movb
xchg
iret
jbe
jg
out
jbe
push
sbb
jg
xor
or
outsl
mov
xchg
pop
popa
stos
mov
iret
neg
ret
lcall
push
into
loope
cltd
shrb
jae
out
pop
jns
mov
mov
ret
clc
pop
test
push
xchg
roll
mov
sub
mov
add
mov
test
push
iret
loop
mov
jnp
jp
sahf
sub
dec
fldl
gs
aaa
rorb
mov
push
loop
mov
imul
dec
or
fsubrl
movsb
jno
cli
sbb
or
test
cmp
std
inc
or
std
push
scas
fimull
push
fildl
jno
aas
mov
mov
pushl
pop
mov
lods
call
insb
arpl
add
fdivrs
sbb
push
pop
pop
mov
push
pop
pshufw
pop
dec
negb
popa
imull
push
or
imul
cltd
je
jp
data16
mov
jne
xor
cmpsb
push
jp
fidivrl
push
inc
cmp
jle
std
iret
imul
xor
cli
test
and
or
mov
jb
insb
sahf
mov
push
xchg
and
daa
dec
call
push
xor
icebp
es
sahf
lsl
je
mov
push
adc
lods
loopne
fsts
test
push
pusha
movzbl
mov
test
or
sub
bound
fisttpll
dec
sbbl
mov
pop
rorl
mov
mov
adc
inc
add
iret
jne
cmp
out
xor
pop
movl
push
mov
sub
movd
push
scas
popf
xor
cmpb
stos
test
lods
pusha
int
pop
mov
sbb
or
call
and
push
pop
call
dec
pop
outsl
adc
cmp
mov
insl
xor
les
inc
lods
dec
iret
pop
push
fidivrs
test
lgs
cltd
adc
xor
cmpsl
pop
lret
popa
cmp
jnp
mov
xchg
lock
xchg
fisubrs
fnsave
ljmp
dec
xchg
pop
dec
cmpb
arpl
je
and
jb
outsb
adc
lods
and
pop
js
loope
je
imul
pushf
movsb
sub
imul
pop
repnz
aaa
je
dec
add
sub
hlt
iret
dec
mov
cmc
jp
adc
add
loop
cmpsl
xchg
sbb
mov
mov
cmc
cmp
jl
mov
xchg
shl
rcl
pop
or
pop
loope
or
pop
std
fwait
into
in
and
mov
or
scas
ss
pop
xor
nop
mov
test
lret
dec
clc
inc
pop
aaa
mov
popa
mov
adc
div
nop
pop
jp
scas
push
addr16
or
mov
lds
fs
pop
jns
into
test
mov
shll
xor
sub
enter
mov
push
insb
sahf
adc
je
mov
mov
xor
std
jecxz
mov
sub
adc
lock
pushl
pop
roll
sti
xlat
add
sbb
lret
push
add
or
inc
inc
repnz
enter
push
mov
in
inc
cltd
push
es
inc
in
int
inc
sbb
cmp
test
inc
sbb
aas
sarb
inc
cmc
fildl
call
repz
xchg
dec
mov
cmp
sbb
paddq
mov
pop
push
mov
ja
sbb
aaa
int
test
scas
pop
ret
mov
fldln2
jle
sub
push
mov
adc
jmp
lcall
and
jns
adc
in
adc
jl
pinsrw
fbld
dec
push
add
pop
bound
xchg
movsl
dec
daa
cmp
mull
int
popa
inc
pop
in
fadd
imul
out
fstl
sbb
jmp
paddusb
dec
sub
jg
aas
mov
cmp
sub
sarl
stc
pushw
mov
stos
and
cmp
cmp
ds
lods
bound
aas
stos
insl
add
loopne
push
mov
js
push
shlb
jns
xchg
into
inc
out
sub
pusha
hlt
ja
gs
jae
insb
sub
sub
fsubrs
dec
inc
mov
mov
lahf
repnz
dec
gs
mov
adc
hlt
imul
loopne
and
popf
jl
jp
inc
mov
fidivrs
jmp
push
mov
sarl
out
aaa
sbb
xor
subl
andl
xor
int
mov
int3
mov
cld
push
imul
push
out
out
cmp
xchg
mov
push
outsb
sbb
fwait
cmc
mov
and
inc
mov
add
inc
test
popl
mov
out
mov
pop
mov
shr
imul
aaa
movl
adc
mov
jge
sbb
mov
adc
xlat
push
pop
outsb
inc
cmpsl
addr16
mov
inc
test
inc
push
push
jbe
xor
int
fcmovnbe
repz
les
jge
test
popf
xor
add
sbb
cmpsb
and
mov
fdivrl
loopne
push
adcl
adc
and
popa
cmp
jnp
cmpsb
mov
mov
pop
jp
add
hlt
dec
jns
mov
dec
fisttpl
and
push
and
in
push
add
mov
fcoms
xchg
sbb
mov
inc
loope
adc
loop
adc
out
sarl
mov
cmpsl
mov
mov
mov
or
aas
fidivrs
add
jecxz
aam
fmull
daa
stos
add
lock
sarb
and
add
sub
clc
addr16
movsl
into
or
lods
in
movsb
add
add
adc
mov
or
mov
das
jo
cmp
mov
aad
pop
hlt
dec
pop
scas
inc
int3
dec
pop
xchg
sub
daa
mov
pop
icebp
cmc
jle
icebp
das
pop
cmpb
push
or
std
mov
rolb
xlat
scas
sub
push
arpl
fsubs
in
xor
mov
add
cmp
loope
add
or
xlat
inc
add
in
add
inc
mov
mov
cltd
mov
jnp
in
dec
xchg
pop
inc
mov
cmc
push
mov
ficoms
movsb
mov
xchg
aam
add
dec
shl
ss
lret
or
or
xor
mov
test
ss
mov
iret
movsb
cmp
andl
popf
shll
pop
xor
and
dec
insl
lahf
mov
hlt
inc
push
scas
sbb
test
aad
push
mov
repnz
mov
rorb
fcompl
fwait
sti
int
push
and
mov
fildl
sub
lret
lcall
imul
rcll
add
lret
aaa
scas
dec
int
scas
push
imul
push
insl
mov
fs
repz
fsub
fidivs
sub
pusha
mov
push
sbb
or
push
sbb
lock
adc
xchg
mov
lds
dec
pop
xchg
int
mov
stc
iret
xor
cmp
fnstsw
sbb
push
fwait
pop
dec
mov
imul
or
ds
fimull
xor
sub
dec
push
pcmpeqd
cmp
mov
pop
daa
push
and
push
cmp
mov
iret
push
sub
lds
mov
jge
aaa
inc
sbb
iret
mov
testb
mov
out
sti
cmp
dec
aas
ljmp
sbb
lret
mov
ljmpw
cmp
inc
mov
popl
mov
pop
loop
cmp
into
adc
call
lcall
mov
lds
pop
adc
mov
shrb
cmpsb
imulb
and
inc
fmull
jge
bound
pop
jo
shr
imull
lahf
adc
xchg
push
stc
sub
add
divb
shr
shrb
dec
das
xor
ja
ja
aas
popa
xchg
pop
outsb
and
scas
xor
inc
js
push
notb
xor
push
add
xor
xchg
pop
test
push
das
mov
out
cmp
ljmp
je
lcall
pusha
stos
repnz
icebp
dec
jg
insl
jo
xchg
adc
pop
push
mov
jns
or
stc
sbb
gs
scas
mov
add
or
mov
movsl
sub
xchg
shrb
mov
movsl
orl
in
ret
sbb
push
idivl
fsubl
or
push
ja
aaa
mov
or
test
inc
outsb
or
or
inc
ret
xchg
pop
fistpll
stos
add
cmp
dec
xchg
jae
inc
testl
add
pop
mov
ror
lret
xor
pop
add
lock
pushf
stc
in
jne
pushf
subl
xchg
stc
cmpsl
inc
std
hlt
mov
lret
icebp
das
mov
stc
or
dec
rcll
cwtl
or
fwait
pop
test
sub
pop
test
in
jp
out
fistl
in
xchg
pop
daa
push
lods
sbb
data16
jb
outsl
popf
ret
inc
movsb
mov
adc
xor
sbb
mov
xchg
lods
mov
pop
sti
imul
int3
mov
leave
and
lret
fcoml
xchg
pop
in
sbb
dec
leave
bound
imul
lods
add
push
sahf
fldenv
mov
inc
outsl
push
xlat
pop
pop
daa
mov
mov
loop
rclb
mov
push
and
in
jecxz
scas
sbb
mov
and
movsb
sbb
inc
sub
adc
or
addr16
pop
mov
out
cld
push
fisttpll
imul
mov
mov
jno
mov
jb
std
stos
sbb
xorb
fists
shrb
ja
aaa
shrb
push
xor
xchg
icebp
arpl
rclb
ds
sub
sub
adc
cmpb
out
dec
sbb
loop
fsts
xchg
hlt
sarb
fwait
adc
clc
inc
adc
mov
les
push
jmp
mov
scas
mov
enter
sarb
das
pop
lds
fisttps
mov
popa
ret
fstpt
pop
lock
cmpb
fs
mov
movsl
push
aas
push
jnp
xor
mov
enter
mov
fidivs
idivw
in
mov
loopne
dec
clc
pop
popa
jnp
stos
mov
or
mov
testl
scas
loopne
push
gs
jnp
jge
add
adc
ds
xor
mov
xorl
mov
xchg
aam
data16
mov
idivl
lcall
in
ror
or
xchg
cli
inc
inc
mov
int
popa
jne
pusha
sbb
xor
adcl
sub
das
lock
lds
gs
in
pop
push
adc
inc
inc
adc
pop
je
push
cmp
aam
movsl
xchg
js
mov
imulb
mov
adc
enter
mov
xlat
sbb
in
das
lock
sbb
in
outsb
mov
decb
imul
test
out
or
add
add
push
mov
xor
xor
nopl
das
inc
insb
icebp
mov
and
lods
sub
xchg
sub
dec
or
and
loop
lods
mov
cmpb
int
fdivl
inc
xchg
fildl
popf
icebp
sub
pop
dec
test
fcomps
into
cltd
push
xchg
pop
and
stc
xchg
leave
push
sub
dec
pop
insb
sbb
stos
inc
or
sbb
adc
stos
movsb
mov
inc
or
sbb
popa
inc
pop
sbb
mov
xchg
cmp
pop
fstpt
stos
les
push
repz
movsb
imul
sub
adc
mov
dec
pusha
mov
mov
je
movsb
mov
addr16
aaa
mov
fcmovnb
mov
stc
jne
fwait
pushf
or
test
ljmp
cmpsl
es
xor
mov
adc
add
xor
push
inc
cmp
mov
pusha
stos
mov
fs
stos
push
decb
pop
sti
sub
adcb
xchg
ret
mov
sbb
push
push
sbb
and
push
cmp
ret
push
xor
test
in
js
mov
nop
dec
outsb
mov
dec
in
arpl
cs
push
in
ja
cmp
xchg
scas
jmp
enter
jl
or
add
jno
fldcw
jne
aad
shlb
jae
daa
dec
loope
cwtl
bound
pushw
jecxz
push
or
mov
call
jp
or
dec
lds
aam
cmp
or
sub
push
mov
sbb
mov
xchg
and
dec
mov
cltd
xchg
aaa
xor
jmp
cmp
push
jbe
xchg
inc
in
and
dec
jbe
mov
mov
loope
adc
and
pusha
pop
stos
test
or
ljmp
xor
cld
push
ja
mov
divl
out
cmp
int
frstor
jecxz
jmp
mov
sbb
jg
xchg
mov
push
stos
adc
hlt
cmc
incl
pop
int
jo
xor
pop
sbb
add
cmp
test
imul
es
xor
hlt
sbb
dec
dec
dec
fistl
rorb
das
push
mov
xchg
aas
scas
outsl
jb
out
cmp
jge
mov
xor
std
xchg
jno
mov
fisubrl
lods
or
int
jno
repnz
mov
ret
add
push
xchg
dec
pop
inc
inc
adc
push
loopne
sti
cmp
xchg
mov
sbb
mov
xchg
popa
imul
fmulp
jbe
mov
dec
imul
xchg
push
cmp
sbb
inc
xchg
push
testl
hlt
xchg
push
mov
fsubrp
leave
add
outsb
shll
shrb
inc
jae
adc
lcall
pop
xchg
inc
xor
jl
shl
out
push
add
xchg
pop
insl
enter
mov
repnz
dec
adc
xor
outsl
les
dec
jg
outsl
xor
faddl
dec
imul
loop
add
add
mov
adc
pop
push
add
loopne
je
lahf
mov
fs
js
or
adc
cmp
js
and
jne
adc
lret
and
sub
repnz
mov
stos
pop
scas
pop
rolb
cmpsb
xor
lret
cmpsl
aad
pop
inc
rclb
sub
cld
jb
sbb
les
cmp
sti
pop
rcrl
pop
mov
shl
or
jae
ja
jg
or
iret
mov
xor
adc
subl
icebp
je
xchg
mov
test
repz
inc
jecxz
les
flds
push
out
mov
fdivl
sub
cmp
mov
fstp
jae
push
adc
stc
push
mov
push
or
aad
cld
sbb
adc
ja
nop
mov
sbb
scas
into
sbb
daa
fisubl
sub
add
cmp
push
sbb
xor
adc
dec
jmp
mov
rcll
push
aas
pop
pop
mov
or
jne
push
xchg
dec
movsl
xor
punpcklbw
mov
notl
fimuls
mov
pusha
dec
test
lret
test
xchg
xlat
loope
repz
cmp
mov
xchg
adc
int
repnz
inc
aad
mov
cmpsb
add
jbe
mov
xlat
into
and
imull
xchg
jae
aaa
popa
and
add
mov
fmul
cltd
rorb
outsl
adc
dec
movsl
scas
sbb
cmp
lods
addb
sub
popf
sahf
ss
mov
stos
and
add
push
subl
cmp
inc
add
cmpsl
fsubrs
ja
js
dec
sbb
sub
rclb
xchg
sub
enter
mov
jl
icebp
aam
jae
sbb
pushf
ja
mov
pop
cmp
cmp
push
test
or
mov
icebp
or
inc
push
aas
imul
stc
mov
mov
xchg
mov
push
and
aaa
ficoml
and
inc
dec
lcall
inc
push
cmp
pop
or
roll
in
test
mov
jnp
inc
adc
pop
mov
dec
or
adc
das
movsb
add
push
xchg
xchg
fbld
or
arpl
or
out
mov
mov
xchg
movl
hlt
shll
xchg
loopne
sahf
push
adc
cmp
xor
adc
push
cli
insl
sub
test
mov
sub
add
xor
popf
leave
sub
adc
push
sub
aad
js
jbe
rclb
mov
mov
shrl
test
shrl
subb
inc
out
fsub
and
loop
jo
dec
mov
jmp
dec
das
add
fs
lahf
cwtl
cltd
rcrl
adc
sbb
dec
push
or
xor
sbb
push
sbb
dec
and
or
sub
out
dec
push
xor
jno
push
jle
adc
mov
repnz
stc
and
mov
mov
sar
scas
mov
das
dec
mov
fcompl
in
push
daa
sbb
adc
ret
sub
sub
adc
xor
mov
icebp
lock
push
jnp
or
push
or
fs
in
push
and
and
stos
fildl
jnp
adc
jo
pusha
or
bound
fs
paddusb
jg
cltd
sbb
adc
sub
or
pop
pop
lcall
dec
dec
movsb
sub
mov
inc
fisubs
adc
push
subb
imul
sub
loopne
cs
leave
xchg
and
scas
daa
cmp
xlat
imul
fs
loopne
and
repz
inc
shrl
lcall
add
dec
in
ret
sbb
add
int
test
test
mov
fwait
stc
ja
ret
push
lahf
cmp
mov
mov
aas
fisubs
sbb
and
out
jbe
sbb
repz
pop
mov
insl
xchg
aas
call
push
nop
push
addr16
nop
xor
in
mov
data16
xchg
popf
hlt
add
jnp
xchg
jge
das
aaa
push
and
sbb
inc
lea
fcompl
mov
sbb
cltd
psubq
adc
pop
jae
dec
add
ret
outsl
loopne
or
inc
out
dec
inc
in
lods
adc
adc
pop
mov
ret
das
mov
push
add
jmp
add
xchg
lret
lods
mov
clc
sbb
sbbb
std
xchg
fwait
into
btsl
push
cmpsb
pop
test
dec
sub
js
mov
pop
mov
lahf
pop
mov
dec
xchg
stos
push
pusha
jecxz
push
movsl
adcl
push
lea
sub
add
outsb
mov
and
pop
stos
mov
push
imulb
mov
and
insb
dec
and
scas
stos
xchg
sub
test
leave
push
xchg
clc
fildl
or
jns
and
clc
add
cmp
xchg
dec
or
mov
call
jb
test
lret
mov
adc
sub
xor
and
in
jmp
xchg
and
xor
inc
push
xchg
and
jle
adc
cli
lods
xlat
shl
lods
orb
mov
mov
daa
cmpsl
sbb
cwtl
xchg
jmp
idivl
adc
fidivs
js
jle
insl
mov
addr16
mov
mov
je
pushl
mull
in
sbb
mov
fdivp
cwtl
lcall
gs
data16
lods
das
cmp
das
adc
cld
stos
push
mov
cmpsb
and
aaa
sub
pop
int3
mov
mov
xchg
mov
sbb
or
popf
hlt
push
sbbl
jle
enter
lcall
loopne
icebp
add
hlt
sbb
loopne
adc
push
sbb
mov
dec
es
mov
jl
mov
xor
push
cmpsl
inc
xchg
or
add
sbb
cmpsl
aam
rorl
cmp
lret
iret
pop
scas
scas
cwtl
cmp
js
stc
and
xor
cs
mov
lock
push
add
test
lds
inc
cld
sub
push
jmp
mov
xor
jb
and
push
roll
jecxz
inc
xchg
stos
dec
popf
je
int
cmp
add
mov
into
out
sub
hlt
in
out
adc
fmull
adc
xor
jno
add
popf
scas
pop
push
decl
mov
mov
sahf
xchg
imul
lret
movsl
jo
inc
or
mov
cmp
sti
into
mov
lret
mov
and
push
push
iret
stos
inc
shrb
mov
pop
int3
dec
das
add
jnp
adc
popf
and
mov
jg
subl
clc
sti
sbb
cmpsb
xchg
jne
dec
xchg
subl
bound
rcrl
mov
add
add
add
adc
cmc
repz
fidivs
pop
push
mov
adc
int3
ljmp
cmp
sub
jecxz
xchg
push
nop
mov
mov
xchg
out
test
pushf
stos
pushf
dec
sub
movsl
in
inc
lock
movsl
or
cmpsl
push
imul
dec
xchg
js
in
mov
subl
xchg
cltd
fimuls
imull
daa
ss
sbb
mov
mov
mull
xlat
fpatan
mov
aad
adc
adc
popa
and
mov
cli
mov
and
subl
addr16
xlat
imul
adc
cli
jmp
push
inc
lods
lahf
and
xchg
add
mov
mov
xor
mov
aad
sub
pop
mov
mov
dec
jo
mov
movsl
push
inc
cmp
loope
mov
iret
adcb
repnz
sbbl
aam
mov
jecxz
mov
into
push
fstl
fdivs
popf
sbb
fs
popa
sti
inc
addr16
stos
popf
sub
cmp
jnp
mov
xchg
mov
mov
cs
xor
inc
into
pop
call
jo
jns
dec
add
imul
aaa
xor
xlat
mov
pop
loopne
mov
fldcw
mov
jl
js
sti
divb
mov
or
pop
mov
dec
gs
jp
aas
sbb
push
xor
orb
mov
xchg
jo
push
mov
call
pop
mov
lret
lahf
xor
ja
pop
push
cmpb
jns
jl
inc
inc
jae
ja
es
xor
mov
mov
jmp
sti
mov
ss
cmp
enter
jnp
xor
xor
ds
mov
stc
jno
sbb
in
jno
push
or
mov
je
sar
outsl
adc
push
pop
ja
int3
xchg
jmp
ja
inc
vmwrite
rorb
sub
test
and
aam
sub
and
mov
jg
shrl
jle
ret
adc
lret
stos
pop
add
mov
or
mov
cli
rorb
xchg
adc
inc
mov
popa
cmpb
and
cmp
imul
inc
lods
enter
jno
lock
je
jne
xchg
addr16
incl
cmc
stos
jle
div
adc
pusha
and
aam
data16
dec
mov
jnp
aad
inc
popa
jno
jne
lcall
addr16
sub
sub
cmc
inc
jo
ret
aam
dec
imul
lret
xchg
orb
mov
xor
jno
mov
jb
sbb
inc
pushf
sbb
xor
out
xchg
pop
xchg
cltd
cli
mov
icebp
jo
xlat
mov
gs
insl
mov
mov
mov
sahf
loop
mov
popaw
mov
lret
mov
jp
lods
leave
cmpsb
xor
mov
cmp
fadds
pop
and
jp
cmpsb
cmpl
idivb
inc
lcall
inc
push
inc
jns
insb
pop
or
sub
push
fcomi
fiaddl
lock
xchg
cmp
sbb
xchg
push
divb
jae
inc
jns
movl
lods
inc
hlt
jmp
je
out
pop
inc
mov
fmull
int3
mov
add
add
std
add
imul
xchg
lahf
jo
mov
outsl
ret
repz
jb
insb
int3
mov
rorb
add
add
inc
mov
inc
pushl
hlt
sub
xlat
pop
mov
cmp
xchg
or
cs
test
jg
mov
pushf
mov
nop
jbe
add
adcl
scas
dec
scas
lods
sub
sbb
enter
add
mov
push
push
cmp
mov
mov
lods
xor
stos
in
add
or
dec
cmpsb
imul
push
scas
mov
repz
dec
or
test
or
sbb
or
xor
cmpsl
shlb
lret
int3
sub
or
aaa
sub
jmp
xor
call
loop
add
inc
or
lahf
mov
xor
pop
xor
xchg
sbb
inc
mov
stc
xchg
in
dec
fimuls
add
rcll
or
mov
sub
sti
das
push
pop
in
pushf
aad
lret
mov
insl
enter
mov
lock
sub
aad
test
mov
sub
stos
and
sbb
test
inc
xorb
pop
out
dec
ljmp
jno
clc
in
push
sub
xchg
ret
data16
icebp
pop
stos
les
mov
add
cmp
xchg
hlt
mov
add
jae
das
mov
mov
cwtl
inc
andb
outsb
sbb
mov
pusha
loop
mov
test
repz
fwait
xchg
fs
sbb
mov
jecxz
inc
xor
ja
and
icebp
xor
test
dec
ljmp
inc
test
je
jae
fbstp
es
xchg
nop
je
ljmp
push
daa
xchg
mov
cs
xor
xor
push
mov
push
push
cmpl
xchg
mov
andl
outsb
shll
mov
nop
popa
or
mov
xorb
push
mov
pop
enter
mov
addr16
pop
add
out
add
cmp
js
sti
push
xor
jo
pop
mov
hlt
leave
mov
add
nop
inc
mov
imul
clc
sub
sub
cwtl
and
xor
fs
xchg
push
cmp
in
push
rcll
out
cmp
aaa
lcall
xchg
dec
and
jne
inc
mov
push
mov
aam
fldln2
ss
xor
pop
xchg
call
sarb
mov
mov
testb
or
adc
jp
hlt
mov
dec
out
ljmp
loop
and
inc
xchg
addr16
cltd
or
cmc
int
jl
cmp
and
xchg
les
dec
mov
or
int
inc
ret
jo,pn
cwtl
std
scas
repnz
lcall
mov
es
inc
push
jne
in
lret
fldcw
in
ss
jbe
and
push
mov
add
or
sbb
sub
sbb
jae
insl
push
loope
xor
out
aam
mov
mov
call
rol
stos
xchg
xor
pop
mov
popa
adc
es
loope
ret
decb
or
jmp
xchg
and
mov
jecxz
or
cmp
push
mov
xchg
cmp
jle
cmpsl
mov
xor
shl
hlt
cli
test
cwtl
or
sbb
push
gs
or
mov
ja
out
pop
frstor
jl
je
hlt
rorb
test
enter
and
xor
add
mov
push
adc
nop
jno
sbb
jg
subl
movl
popf
sti
mov
and
lret
int3
pop
xchg
lock
sti
enter
lret
xchg
mov
pop
xchg
ljmp
scas
scas
aaa
lahf
shlb
push
mov
call
jge
out
pop
rorl
push
addr16
sti
pop
rolb
pop
push
lcall
inc
shl
add
shll
sarl
and
jb
loopne
pop
nop
bound
jb
xor
repnz
addr16
pop
mov
rcl
mov
pop
dec
clc
jl
or
jecxz
clc
inc
test
sbb
inc
mov
dec
lret
add
fs
out
lret
jo
icebp
and
es
insl
xor
js
into
jmp
lock
inc
loope
stc
add
fadd
aam
or
imul
mov
es
aad
aaa
add
jg
inc
lcall
and
into
pop
xor
aas
jmp
ret
inc
aad
push
aas
sub
dec
or
adc
inc
xchg
lods
mov
lods
mov
je
lds
cs
lds
inc
ss
push
nop
sti
and
xor
bound
xchg
jge
cmpsl
fsts
out
xchg
xchg
inc
sbb
xchg
lret
mov
js
mov
out
xchg
iret
pop
jmp
imul
lret
add
xor
push
cli
cmp
sbb
fwait
push
mov
fs
std
mov
sub
loope
xlat
and
push
sbb
xor
into
xchg
pusha
pusha
or
push
cld
int3
aad
rcll
std
adc
adc
popf
out
jmp
mov
sbb
dec
outsl
mov
xchg
lret
jo
inc
lret
jmp
xchg
das
jbe
mov
pop
jae
dec
repnz
str
push
andl
rcr
loope
out
cltd
and
jo
push
push
lahf
arpl
mov
mov
ss
pushf
scas
push
xchg
enter
xor
mov
push
push
push
and
and
aas
mov
ja
lods
aas
pop
and
inc
int
mov
xchg
rclb
cld
ret
pushf
mov
xor
sbb
sub
jmp
pop
rsqrtps
lock
aaa
lock
fcomip
jne
xchg
mov
daa
call
dec
sbb
mov
pop
iret
jge
call
hlt
decb
insl
adcl
out
or
xchg
and
add
jge
popf
sub
fsub
xchg
outsb
stc
arpl
xchg
and
es
bound
out
cmpsb
scas
adc
in
cmp
push
fsubr
lock
in
aam
in
mov
and
rol
lret
in
ret
dec
mov
jle
dec
mov
sub
fcomps
dec
std
cmp
lods
mov
stos
xchg
add
in
pop
fs
mov
or
fucomip
sbb
out
scas
jecxz
jno
lea
push
cmp
addb
mov
adc
cmp
add
jne
cmpl
jo
sbb
repnz
xor
filds
sbb
shrb
sbb
fidivrl
nop
jb
cmp
dec
insl
insb
call
adcl
fcmove
dec
lods
jne
icebp
dec
lea
push
mov
in
notl
inc
leave
faddp
push
sbb
cld
dec
iret
push
dec
femms
leave
inc
into
inc
lods
es
fidivl
adc
inc
test
cld
xor
imul
push
jbe
imul
test
fildll
cmp
jns
popf
test
fdiv
push
and
add
jb
sub
and
cwtl
stc
inc
cmc
aad
aaa
and
lods
fadd
push
pop
out
mov
push
insl
out
xchg
lcall
sub
mov
mov
adc
mov
popa
mov
mov
iret
shrl
mov
je
and
fistpll
popa
scas
sbbl
stc
aam
loope
dec
test
stos
mov
push
mov
or
mov
aad
fsubl
call
xchg
jmp
jecxz
loope
hlt
cs
jnp
fnsave
or
icebp
div
imul
jge
mov
inc
xchg
popa
pusha
xor
imul
add
mov
push
in
imul
sarb
jg
jns
lea
xor
dec
or
sub
nop
cmpsl
dec
popa
cmp
aad
pop
push
push
jbe
push
cmpsb
add
xchg
cmpb
sub
mov
push
jecxz
pop
fists
aad
inc
mov
mov
mov
cltd
push
hlt
or
fldcw
push
xorb
mov
incl
push
xlat
and
call
negb
lods
jl
jo
sbb
xchg
rol
lea
xchg
and
lret
movsl
call
in
xor
js
jae
push
test
inc
test
pop
sbb
sub
adc
pushf
mov
push
cmp
mov
fistpl
jno
mov
ret
scas
mov
clc
xchg
fadds
mov
jmp
test
cmp
adcb
int3
into
dec
out
out
imul
out
cmpl
sbb
repnz
mov
xchg
mov
mov
sbb
push
or
inc
sub
xor
pop
mov
jge
call
inc
in
loop
mov
enter
sbb
push
in
mov
hlt
jnp
rorl
or
fs
pop
jbe
adc
cmp
pop
jno
lods
adc
pop
sbb
and
push
imul
iret
and
out
addr16
and
lock
stc
fdivs
add
shl
push
in
imul
fsubrp
push
mov
xchg
int
mov
mov
mov
pop
aaa
sbb
dec
xlat
stos
inc
or
cli
inc
ds
mov
xor
movsb
adc
mov
loop
test
push
xor
es
mov
scas
and
sti
mov
jbe
loopne
rol
out
es
sbb
and
mov
push
and
mov
out
push
mov
push
jecxz
pop
rolb
insl
icebp
jne
filds
loop
mov
jae
jp
inc
pushf
xlat
aaa
pop
jno
arpl
sbb
and
ficoms
out
sbb
js
push
mov
inc
rcrb
lea
iret
fimull
movsb
xor
lock
mov
test
lock
das
iret
cmp
fwait
cmc
test
frndint
dec
xchg
jbe
mov
inc
shl
sar
mov
imul
and
mov
mov
in
cwtl
or
jne
pop
std
rclb
xor
out
xlat
xchg
leave
loopne
shll
sub
xchg
mov
dec
push
rolb
dec
std
dec
pop
sbb
je
mov
pop
into
lock
xor
lods
push
fwait
and
pushf
lock
mov
mov
adc
lcall
btr
les
lds
dec
jl
cmp
icebp
pop
mov
push
and
fistl
packsswb
sub
icebp
adc
mov
dec
repz
push
cli
loopne
sub
cmp
or
insb
aaa
popf
push
lock
inc
cwtl
std
cmp
call
xor
in
cli
or
movsb
mov
jo
ror
mov
ss
or
cmp
repz
jno
loope
jmp
cld
xlat
and
sbb
aaa
imul
test
das
add
stos
fmull
shl
inc
test
dec
aam
outsl
dec
add
jmp
cmp
mov
pop
xor
xorl
lock
sahf
add
imul
test
mov
sbb
js
mov
xchg
lds
push
es
jo
push
and
outsb
imul
loopne
rclb
cmpsl
and
shll
sub
insl
mov
xchg
push
mov
sub
xchg
pop
or
lahf
in
push
mov
test
shrl
fistpll
in
dec
repnz
addr16
push
dec
jnp
imul
push
jnp
jp
jle
jl
icebp
mov
push
lock
cmp
adcl
scas
and
jle
add
add
sahf
iret
mov
enter
sti
mov
mov
psraw
lods
xorb
adc
mov
cmp
fdiv
mov
jno
pop
gs
jp
stos
pop
cmp
xor
divl
imul
dec
pusha
dec
leave
jmp
add
xor
inc
xchg
roll
mov
scas
mov
sti
xchg
jl
push
std
sbb
push
and
cltd
jg
pop
xor
mov
push
dec
out
and
cld
mov
jle
lds
lcall
xchg
mov
shll
outsl
or
leave
out
or
sub
xchg
jg
and
imul
add
push
mov
jecxz
ficoml
ja
and
lods
sarb
jo
fwait
shll
pop
movsl
arpl
frstor
stc
daa
wrmsr
cmp
xorl
les
and
int
xor
sarb
in
cltd
add
push
stos
push
movsl
div
fstl
push
mov
mov
fwait
pushf
mov
cmc
inc
cmpsl
jmp
nop
sbb
mov
in
test
and
adc
cmp
push
xchg
and
cmp
push
dec
jge
out
mov
mov
jmp
xchg
push
pop
jl
mov
daa
je
jno
lret
loop
pop
push
xor
xchg
pop
mov
lea
arpl
push
mov
ffreep
aam
inc
int3
adc
mov
mov
mov
add
sub
inc
in
arpl
sbb
inc
in
mov
movsl
imul
mov
imul
xor
cmp
cmc
data16
adc
outsl
cmp
pop
mov
stos
mov
mov
in
jo
sub
in
pop
outsl
mov
sub
push
mov
sub
jecxz
sbb
jb
jns
and
jno
hlt
mov
mov
adc
jl
push
cmp
sahf
std
mov
xor
nop
mov
int3
add
mov
aam
adc
arpl
cmp
movsb
cltd
mov
nop
add
in
add
push
lret
dec
pusha
int3
insl
fisttpll
fistps
and
sub
and
mov
outsl
mov
in
xchg
arpl
lock
jg
sqrtps
mov
jmp
shll
xor
aam
dec
cmp
xor
sub
repz
lcall
test
xchg
nop
inc
ret
arpl
into
pshufw
pop
push
shrb
dec
lahf
out
xor
and
std
push
ret
gs
pop
push
daa
mov
push
xchg
adc
xchg
add
pop
es
add
and
and
push
xor
js
pop
mov
jbe
lret
inc
sub
sub
inc
lods
daa
push
or
mov
and
jnp
mov
xor
movsb
mov
psllq
nop
xor
lret
in
aaa
mov
cmpsb
out
stos
mov
imul
mov
rclb
mov
cmp
je
les
or
xchg
jmp
js
loope
jmp
jmp
mov
mov
push
xor
mov
mov
stos
xor
and
pop
xor
test
out
lock
push
xchg
xchg
sahf
and
data16
sub
xor
mov
adcl
in
cmp
arpl
or
push
std
push
add
test
movsb
push
mov
mov
pop
add
cmp
mov
jo
xchg
and
inc
repz
dec
loopne
inc
pop
xchg
jmp
ficompl
daa
mov
insl
sbb
mov
sub
movsl
add
orl
js
mov
ror
push
adc
inc
data16
jmp
outsb
mov
nop
cmc
cmp
mov
xor
push
jl
dec
add
push
hlt
dec
pop
addr16
xchg
loopne
xchg
push
push
lret
cmpsb
aam
lret
xor
bound
in
lret
jge
push
sbb
insl
aas
push
pop
xchg
mov
fldcw
fnsave
jp
and
outsl
das
mov
into
add
icebp
add
test
vpmaddwd
xchg
lods
xor
sahf
dec
daa
mov
pop
fbstp
and
jo
iret
jnp
add
mov
or
add
mull
stc
inc
mov
and
dec
ja
push
fidivl
icebp
ret
add
xor
add
jno
pushf
fidivrs
fiadds
mov
lret
push
call
inc
popf
mov
jno
lret
fwait
out
push
or
es
mov
jae
cli
push
lods
jbe
sti
popf
jp
and
jns
mov
xor
es
andl
adc
sub
push
add
imul
ja
sub
dec
jmp
sbb
sub
cmp
orb
xchg
pop
and
out
add
cli
fwait
lcall
std
push
sbb
mov
rcrb
in
mov
mov
lahf
xchg
xor
jne
icebp
xor
lock
pop
inc
shrb
jnp
lret
add
push
inc
dec
pop
mov
notl
mov
pusha
dec
push
mov
push
je
inc
pop
and
call
add
lcall
fsts
xchg
shrl
push
clc
jae
jmp
mulb
arpl
pop
sti
pop
push
inc
out
jns
cwtl
cmpsl
adc
push
scas
xchg
pop
adc
into
popa
mov
ljmp
mov
shrb
test
pop
loopne
jl
loopne
daa
cs
int3
daa
add
stos
iret
shrl
adc
sub
pop
and
xchg
push
aad
jmp
repz
jp
sub
add
adcb
js
and
imul
xor
ja
push
push
jmp
ljmp
movsb
sbb
mov
testl
xchg
repz
or
mov
loopne
std
mov
mov
inc
inc
insb
mov
jecxz
pusha
lahf
lock
add
lea
cmc
mov
fistl
hlt
cmp
pop
ret
adc
incl
aaa
lahf
mov
sub
mov
call
mov
cmp
outsb
into
popa
mov
rorl
stos
cmp
das
fildll
fsubs
data16
rcrb
sub
clc
inc
fsubp
pusha
lret
jo
mov
sub
out
or
aaa
inc
bound
ret
jne
push
and
cmpb
cmpsb
ds
cmpsb
dec
lahf
jmp
and
fdivrl
outsb
adc
pop
jnp
jmp
in
xchg
ret
mov
or
arpl
push
mov
xor
repz
pop
xor
jle
fdivrs
es
imul
add
adc
jne
xorl
pop
pop
rep
pop
sbb
stos
jge
jl
inc
lret
fmul
inc
addr16
push
inc
inc
pop
stos
jecxz
fs
mov
jnp
jno
inc
and
pushf
shll
imul
sbb
mov
adc
dec
mov
out
inc
sti
enter
pushf
lods
lds
push
inc
scas
mov
repz
sbb
dec
aas
imul
push
lret
or
out
mov
xchg
push
mov
push
mov
pop
outsb
cmp
dec
pop
lods
jo
pop
loop
pop
out
ss
ffree
sbb
inc
int3
test
ret
call
lods
mov
sbb
mov
notb
frstor
ret
and
jg
cmpsb
mov
mov
xchg
bound
test
xchg
pop
pop
test
or
outsl
aad
repnz
add
push
fdivl
and
xor
xchg
loopne
enter
daa
out
fiadds
pop
inc
inc
mov
subb
cmp
mov
or
fwait
movsb
lods
xchg
cmp
mov
jo
pop
cmp
lock
mov
push
hlt
jp
or
enter
roll
lahf
and
les
fists
inc
sbb
gs
in
mov
xchg
pop
xlat
xor
rolb
movsl
sbb
test
and
bound
push
mov
daa
pop
jno
cmp
mov
mov
movl
xor
sarl
dec
adc
sub
std
pop
lea
loopne
or
in
mov
xor
test
lea
cltd
xchg
aam
push
stc
cmp
in
hlt
dec
adc
fisttpll
cmp
in
outsl
js
stc
or
ret
into
sbb
mov
hlt
nop
pushf
xchg
pushf
pusha
sub
dec
sahf
lods
cvtpi2ps
into
std
jnp
test
adc
ja
xchg
cmpsl
add
mov
enter
sbb
sub
pop
inc
mov
cmp
fdivr
outsl
into
mov
push
and
mov
ret
aaa
pop
mov
cmp
testl
and
fstpl
mov
adc
push
leave
inc
inc
jnp
in
mov
adc
xor
sub
lods
sti
mov
out
sub
xchg
sub
mov
addr16
inc
jnp
fstl
aad
mov
mov
xchg
pop
imul
bound
inc
mov
dec
jmp
adc
sub
ja
popa
mov
cmp
mov
ror
cmp
inc
push
arpl
push
jge
cld
inc
adc
pushf
rclb
add
add
xchg
mov
rcrl
mov
sahf
jge
pop
xor
hlt
or
fs
jl
mov
pop
push
mov
std
repnz
mov
pop
enter
inc
adc
xor
ljmp
mov
mov
psubsb
adc
pop
mov
jne
das
xchg
cmp
dec
out
stc
and
xor
pop
fildl
add
add
movsl
clc
int3
fsubs
mov
mov
mov
leave
push
xchg
xchg
lahf
mov
mov
mov
mov
out
and
inc
dec
test
das
into
pop
pop
shrb
aam
negb
nop
xchg
sahf
lods
xor
inc
stc
test
cmpsb
movsl
jne
xchg
sahf
jno
inc
scas
push
das
pop
fisttpll
xor
adc
out
jne
out
fidivrl
jne
fwait
shlb
and
mov
test
imul
shl
arpl
jno
iret
pop
inc
mov
add
adc
stos
stos
add
xorb
cmc
push
lds
push
es
or
push
sub
xchg
push
or
push
aam
ja
sbb
push
xor
adc
mov
jecxz
cltd
mov
stos
adc
mov
push
push
fs
ljmp
cmc
cltd
jge
lods
movsb
into
std
jmp
adc
pushf
ds
add
push
dec
stos
filds
insl
iret
and
xchg
lret
or
sbb
cmp
iret
pop
loope
mov
pop
shrb
iret
push
frstor
shrl
gs
ss
imul
pop
sbb
sahf
ss
faddl
insl
jo
loop
mov
adc
dec
clc
adc
add
test
cmp
int
test
and
jns
ja
test
imul
xor
mov
pusha
clc
inc
addr16
pop
inc
cs
jecxz
popf
sub
or
movsb
mov
mov
sarl
subb
mov
in
ja
mov
mov
loopne
inc
pop
out
into
adc
pop
lods
cmc
pop
and
lds
mov
call
mov
in
xchg
or
pop
sahf
fildll
adc
imulb
jl
rcr
inc
jb
or
xchg
jmp
push
sub
sub
sahf
mov
and
inc
cmp
mov
sahf
sarb
sbb
or
inc
leave
mov
fidivl
or
dec
or
cmp
lods
adc
cmp
add
sbb
lods
stos
test
andb
add
movsl
or
push
call
sub
out
addr16
scas
push
sti
lahf
jns,pt
insb
xchg
lret
iret
mov
fninit
adc
jp
dec
pop
movb
mov
xor
jecxz
jmp
mov
and
icebp
ljmp
mov
pop
cmp
mov
outsb
dec
data16
push
pop
or
stos
movsb
push
cmpsl
sbb
popa
fldt
ja
inc
lret
mov
or
rol
rorb
cmc
sub
mov
mov
fcmovne
maskmovq
divl
mov
stos
stos
dec
push
inc
jno
xchg
pop
scas
add
add
rcr
lock
out
dec
mov
push
ret
insb
test
xchg
clc
mov
sbb
mov
pop
jo
sub
mov
sub
jne
jo
int
jne
jp
sbbb
cmc
xor
lods
aaa
push
addb
inc
mov
out
ret
ja
mov
pop
inc
xchg
jno
jmp
pop
pop
xchg
pmuludq
push
or
scas
test
xchg
je
cwtl
sbb
or
inc
sbb
ja
jecxz
adc
inc
xchg
cli
jns
pusha
ja
jge
push
jo
or
add
add
sbb
cs
pushl
jae
test
inc
cmp
mov
sbb
cmp
lcall
push
jmp
pop
jnp
dec
lock
or
fadds
lods
xchg
pushf
mov
dec
movsl
jbe
mov
inc
test
stos
lcall
dec
mov
xchg
push
scas
inc
leave
lea
mov
sub
push
in
cmp
jl
cmp
fwait
icebp
nop
sub
fwait
jl
add
mov
inc
sub
cwtl
xor
lret
cmpl
jne
outsl
push
mov
sti
popa
fwait
es
jnp
xchg
adc
call
inc
call
stc
jmp
inc
or
dec
out
in
xchg
jge
mov
stos
imul
std
fwait
xchg
sub
sub
push
sub
jl
fisttpll
jg
mov
push
ja
xchg
js
int3
dec
int
sbb
das
xor
pop
pusha
leave
pop
inc
in
mov
inc
sbb
mov
mov
imul
push
fsubr
insl
push
ljmp
ss
or
mov
pop
loope
jmp
or
pop
enter
cmpb
mov
sbb
push
or
hlt
in
aas
lahf
push
aad
cmp
out
insl
jl
adc
lret
xchg
aam
or
dec
int
outsb
in
or
daa
mov
das
les
xchg
popf
mov
jle
cltd
leave
stos
stos
out
xchg
sub
into
hlt
leave
pop
mov
xchg
jo
mov
rcr
cltd
les
mov
in
inc
hlt
cmc
movsl
push
mov
inc
ds
clc
adc
xor
dec
dec
sbb
pop
adc
jge
jbe
addb
out
shll
subl
iret
out
fsubr
pop
or
stc
rcr
lret
xor
mov
adc
inc
jp
push
mov
cmpb
insl
lret
not
cmp
cli
cltd
xlat
test
aad
mov
jno
lret
pop
and
jae
fsubrl
add
sbb
iret
es
and
ret
vpacksswb
and
scas
jns
pusha
xor
in
in
jae
lret
sbb
repnz
or
jge
cmc
mov
shrl
test
shrb
lods
pop
mov
adc
pushf
cmp
dec
das
out
sub
das
clc
mov
mov
sahf
push
mov
push
ret
pop
mov
mov
aas
out
pop
inc
push
into
xchg
fiaddl
aas
jecxz
add
xchg
arpl
imul
setno
into
test
enter
cmc
movsb
push
sbb
push
leave
push
push
testb
cs
addr16
mov
jbe
sbb
repnz
sahf
insl
pop
add
mov
or
ficoms
fidivs
cmp
and
mov
mov
sbb
subb
popf
mov
scas
dec
sub
out
ja
or
in
aaa
mov
mov
inc
nop
push
js
call
lods
dec
push
and
rorb
cli
fcmovnb
adc
movsb
fsubrl
add
mov
ret
inc
pop
or
outsb
loopne
jg
add
stc
hlt
ljmp
jecxz
addl
dec
add
xor
fistpll
mov
xlat
inc
rol
sarb
sbb
inc
dec
jmp
inc
mov
in
test
popa
xor
jmp
leave
push
scas
pop
sub
mov
mov
negb
push
inc
pop
insl
or
mov
test
add
mov
xchg
pop
cltd
mov
jp
xchg
test
xor
outsb
faddl
push
mov
mov
jno
sub
adc
xchg
outsl
cmp
sbb
inc
sub
lock
gs
cli
push
fdivrl
pop
push
lret
cld
fs
adc
stc
ds
mov
cmp
mov
insb
push
les
or
xchg
cmp
loope
out
xchg
movsb
and
inc
hlt
adc
pop
mov
ja
push
xor
fdivr
xchg
mov
xor
movsl
pop
sub
sbb
imul
sti
jae
push
add
fsubrl
out
stos
sbb
inc
dec
fs
push
pop
mov
inc
cld
pop
mov
jl
sbb
mov
gs
push
push
jge
fs
inc
or
dec
sti
jae
sub
inc
movsb
repz
out
jecxz
movsl
in
shll
xor
xor
jp
test
sbb
stos
push
jbe
hlt
inc
xchg
or
mov
addr16
movsb
cli
shl
mov
mov
sub
inc
mov
lret
cmp
fldl
push
mov
fcomps
sbb
insb
add
roll
idivl
or
mov
jae
push
enter
lods
pop
out
hlt
mov
lods
xor
adc
sahf
or
test
and
jbe
je
sbb
push
es
mov
test
shrl
mov
mov
push
xchg
pusha
stos
adc
clc
jge
mov
fistpll
fsubrl
scas
popw
jg
rcl
popf
mov
adc
js
leavew
dec
bound
pop
fcoms
adc
fisttpl
push
popa
push
pop
inc
notl
sbb
lret
daa
ret
jl
xchg
in
mul
jbe
sub
mov
in
adc
mov
adc
addr16
mov
xchg
or
jnp
lcall
rdtsc
inc
or
and
aas
xor
xor
lret
xchg
mov
adcb
loopne
popf
outsb
jnp
movl
fcmove
test
dec
aam
add
xor
sub
notb
jmp
sub
popl
fwait
mov
mov
in
cmp
push
rorl
sbb
movsb
and
adc
inc
mov
dec
mov
mov
push
jbe
es
ss
mov
cmp
scas
push
jno
fcmovnbe
jl
push
pop
mov
jge
mov
xchg
and
pop
mov
sub
inc
dec
rcl
daa
pop
inc
insb
addr16
stc
shl
les
push
push
cs
cmp
cmc
lods
mov
imul
insl
mov
mov
inc
xchg
lods
outsb
xchg
mov
out
xor
jns
nop
dec
dec
fnsave
leave
xchg
sbb
sbb
in
cmpsl
das
loope
dec
xchg
push
adc
jmp
mov
je
mov
bound
int3
test
data16
adc
fs
xchg
repz
xchg
aaa
adc
sarl
mov
roll
cmp
push
mov
add
or
jno
jbe
nop
arpl
scas
test
enter
push
pop
bound
jmp
cmp
popf
mov
idiv
cmpsl
jbe
adc
fucomip
jnp
loope
cmp
push
lahf
xchg
aam
dec
mov
subl
cmp
ficoml
push
sub
xor
stc
imul
and
outsl
push
add
sbb
std
arpl
dec
adc
or
ret
hlt
jle
add
xchg
lods
stos
pcmpeqw
lds
cld
push
inc
movsl
cmp
mov
mov
rcrb
push
mov
fisubl
fwait
push
sub
fiaddl
jbe
cmp
mov
std
leave
push
dec
sub
in
and
or
pop
daa
in
push
push
dec
outsb
adc
faddl
and
loop
and
adc
in
sbb
adc
icebp
dec
lahf
pop
leave
mov
popa
lahf
insl
cmp
fwait
and
pop
rcrl
in
xchg
int
insb
ficompl
mov
mov
inc
cmp
pop
add
mov
pop
popf
mov
dec
out
inc
jo
testl
vsqrtps
mov
in
sbb
mov
ds
dec
js
into
lret
inc
je
addr16
cltd
loopne
cmp
adc
jl
jo
data16
or
lods
and
stc
loopne
adc
push
shll
pop
popf
jbe
call
pop
dec
xorb
pusha
fsubl
out
xchg
sti
push
orb
jg
imull
cmp
clc
outsb
sub
pop
out
jl
nop
imul
lods
inc
cmp
aaa
icebp
mov
xchg
mov
in
push
insb
or
mov
insl
lret
mov
xor
sbb
mov
adc
push
jp
inc
idivb
inc
push
mov
xchg
repz
xchg
outsb
pop
cmp
push
stos
xchg
add
xor
inc
lock
std
and
mov
imul
jmp
mov
ja
and
jp
mov
sub
int3
xor
lock
rcll
andb
push
popf
or
push
test
jae
scas
shlb
in
jmp
dec
adc
inc
inc
sub
shll
sub
pop
pop
pusha
shlb
and
fsubl
xchg
testl
add
in
or
je
inc
push
cmp
cld
add
push
mov
into
and
cs
fwait
pop
adc
insb
push
cmp
xchg
aam
notb
push
scas
pop
cmp
pushf
cs
jmp
or
mov
rcrl
jbe
mov
mov
pusha
jno
cwtl
xor
xor
jecxz
mov
sub
push
and
leave
das
push
fs
cmc
and
and
mov
loopne
popf
pop
mov
sub
cld
hlt
int
add
push
outsb
xchg
inc
add
nop
je
aad
xchg
add
in
add
repnz
iret
xchg
xor
push
int3
pop
sbbb
imul
xor
lret
xchg
sbb
cmpsb
mov
clc
cmp
cmp
pop
xor
pop
test
pop
lret
xchg
int3
mov
mov
lahf
fsubs
pop
jl
movsl
sub
sbb
adc
sbb
or
xchg
push
cmpsl
sub
add
mov
mov
xchg
arpl
xor
imul
popl
test
cmpsl
mov
mov
jo
outsl
jo
push
add
jno
std
and
rcll
movsl
or
aas
and
int3
mov
nop
pusha
cs
fdivrs
inc
inc
jle
mov
into
pushf
jle
pop
and
imul
sbb
mov
sbbb
pushf
lahf
cmp
jno
repz
movsl
xchg
test
jge
jecxz
dec
testb
or
pop
pop
xor
pop
inc
and
adc
fwait
clc
sbb
or
or
cltd
in
push
testl
andl
lret
push
cmp
in
test
adc
in
dec
cmp
cmpl
insb
adc
cwtl
fnstenv
sub
dec
ljmp
cwtl
ret
std
xchg
sub
jne
aas
into
jg
rorl
xchg
jb
lret
lahf
pop
mov
push
mov
out
cmp
in
addr16
push
andnps
push
push
icebp
push
fwait
adc
inc
pop
sub
hlt
and
and
lds
xchg
mov
cwtl
pop
pop
ret
mov
jnp
lret
push
aas
xor
dec
nop
cwtl
sub
or
aas
test
jl
stos
insl
cwtl
scas
sub
inc
inc
sbbb
aam
and
sar
mov
popa
add
mov
mov
inc
movsb
xchg
fnstcw
sahf
fmuls
add
mov
cmpsb
test
out
mov
ja
fwait
mov
lods
movsb
cmpsl
inc
fisubrl
sbb
jns
data16
adc
jbe
jno
scas
loopne
jecxz
inc
add
jg
mov
movsb
mov
imul
outsl
xor
jp
divl
data16
push
lds
imul
push
inc
inc
fsts
ret
imul
pop
sti
inc
inc
sbbl
jns
movsb
loopne
leave
stos
dec
bound
clc
rolb
inc
mov
out
inc
test
sbb
ljmp
push
pop
adc
inc
mulb
lcall
mov
add
pusha
mov
jno
push
mov
loope
or
mov
loop
inc
or
fldcw
mov
movsb
psllq
mov
adc
inc
out
ficomps
xchg
out
fists
repnz
sbb
ret
or
aam
add
and
out
inc
sbb
or
mov
lods
pop
movsl
mov
sbb
test
nop
cmp
test
scas
sbb
ret
aad
popf
lock
fstpt
lahf
mulb
jge
lods
mov
int3
out
pop
scas
sahf
mov
adc
sbb
mov
push
push
in
and
mov
nop
xchg
iret
test
int
icebp
imulb
pop
xchg
mov
push
jmp
movsb
dec
sub
jo
lock
jbe
push
xor
inc
or
insl
xchg
repz
or
add
sub
inc
divps
or
push
ror
add
xchg
imul
sbb
in
pop
push
mov
sbb
and
mul
mov
jl
xor
data16
dec
mov
dec
push
ret
sbb
jl
jns
add
sarb
mov
jno
mov
das
mov
in
fcoml
das
cs
cwtl
jne
aaa
sbb
mov
cld
arpl
adc
cld
sbb
push
cmp
int
ljmp
loop
sbb
xchg
dec
shrl
sbb
xchg
fiadds
mov
dec
addr16
xchg
xchg
xchg
pushf
out
ret
fidivs
push
and
adc
shll
dec
das
add
inc
vmread
and
cmp
cmp
mov
andb
xor
mov
jle
testl
adc
mov
mov
imul
jnp
pop
cwtl
int3
ss
and
inc
aad
aam
add
shrl
in
push
sbb
arpl
hlt
dec
lcall
lods
call
mov
dec
push
mov
in
pop
push
xor
ss
sub
xlat
jmp
and
pop
push
repz
daa
push
mov
daa
lret
rcr
xlat
test
push
push
in
pop
jmp
pop
andb
mov
sub
sbb
js
aaa
push
jne
mov
in
pusha
sub
inc
xor
xor
out
icebp
push
inc
jp
mov
fwait
xchg
loop
inc
out
add
fs
scas
jae
and
dec
jmp
jnp
stos
loope
xor
loopne
cmp
scas
roll
xchg
arpl
adc
lcall
into
mov
jne
hlt
dec
js
mov
das
sub
pop
inc
and
xor
push
daa
or
mov
daa
fildll
dec
andl
pop
leave
xchg
scas
jo
xchg
ja
aad
lahf
push
sbb
sub
in
sub
cmp
faddl
es
xor
testb
lcall
in
pop
pushl
rorb
mov
je
lahf
adcl
mov
ds
pop
cmp
aad
popa
push
scas
mov
jbe
arpl
sub
test
sub
push
jecxz
inc
dec
mov
sbb
jnp
or
daa
xor
mov
sbb
adc
shlb
frstor
push
inc
and
jb
mov
push
bound
xor
movsl
add
and
sbb
dec
push
and
in
mov
mov
push
dec
lock
mov
or
in
xchg
adc
jmp
test
mov
popf
mov
push
mov
mov
push
imul
daa
mov
xchg
sahf
cs
mov
lcall
jo
xchg
inc
rcrl
out
push
sub
js
adc
xchg
movsl
xor
rcrl
aad
jmp
scas
or
mov
es
pop
or
push
push
or
cmpb
lods
rolb
les
mov
inc
adc
pop
push
enter
sub
pop
xor
mov
shlb
daa
fildl
sahf
adc
mov
imul
test
mov
lcall
xchg
fwait
imul
cli
stc
inc
in
out
pop
aas
or
out
jmp
clc
dec
pop
pop
loop
cmpsl
or
jmp
mov
inc
ss
sahf
out
fwait
jo
jbe
xchg
jge
add
xorb
lds
adc
push
push
push
sbb
lret
mov
adc
pushf
xlat
icebp
popa
aas
fildll
mov
scas
stos
cmpsl
lret
jl
ficoms
lds
inc
addr16
pop
jge
adc
std
jg
mov
jg
push
arpl
xor
outsb
push
int
dec
flds
cmp
fiadds
jb
sbb
sub
mov
xchg
cmp
add
nop
sub
les
adc
enter
ja
fistpll
lahf
je
addl
xchg
imul
inc
xchg
pusha
jg
enter
cltd
xchg
out
je
sbb
mov
pushl
shrb
cmc
push
ljmp
adc
xor
dec
adc
outsb
leave
add
adc
jnp
outsl
enter
xor
sub
aam
pushf
inc
pcmpeqb
lods
xchg
sbb
leave
pop
rclb
mov
mov
fldl
faddp
sub
mov
rol
out
sub
and
mov
add
test
inc
sbb
ds
xchg
pop
mov
rcll
mov
mov
lcall
sbb
or
mov
jbe
ret
lret
pop
mov
push
ss
movsl
std
jp
sbb
cld
sbb
pop
repnz
cltd
out
icebp
cs
insb
rorl
daa
in
fwait
aas
jne
mov
popa
adc
inc
adc
outsb
or
fstl
dec
sub
jp
dec
dec
pop
arpl
and
out
lods
out
ret
pop
cmpsl
mov
mov
and
mov
xchg
hlt
jecxz
push
ret
out
rcll
lds
inc
andl
add
xchg
pop
cs
movsb
pop
pop
shl
aam
pushf
shl
xor
sbb
clc
xchg
rcl
jne
fbstp
add
fs
jb
mov
int3
push
jp
leave
mov
jne
cli
je
mov
jp
push
orl
mov
mov
fwait
mov
sub
insl
inc
xchg
in
mov
ss
out
psubb
aam
pusha
push
or
adc
bound
inc
decl
pop
pop
hlt
inc
and
in
pop
stc
pop
sub
or
subb
xor
xor
fldt
addl
insl
xor
shl
cmp
mov
xchg
xor
jmp
dec
js
jb
sbbl
push
andl
mov
movsb
pop
mov
test
daa
xchg
pop
imul
bound
add
and
pop
or
sbb
mov
mov
enter
push
push
adc
inc
push
add
sbb
leave
int
xor
scas
aaa
mov
je
sub
add
jne
push
out
lret
add
add
jecxz
test
and
cmp
adc
push
in
xor
or
or
cltd
fsubr
stc
divb
testl
add
in
push
mov
adc
cmp
imul
push
in
mov
add
sbb
push
push
mov
xor
dec
jge
in
insl
daa
adcb
int
add
xchg
xchg
and
jmp
push
lock
adc
fstl
cmp
xchg
sbb
rcll
jnp
adc
and
into
mov
mov
cwtl
nop
mov
jl
or
scas
iret
push
lcall
mov
or
push
dec
cli
or
xchg
sub
xor
psrlq
push
mov
imul
outsb
imul
scas
roll
out
das
les
jge
push
cmp
xor
jbe
cmc
fwait
sbb
pop
cmpsl
loope
xor
test
inc
divb
mov
sbb
movsl
sar
notb
lcall
ja
push
addr16
outsl
rcll
xchg
lcall
rcr
mov
in
clc
fdivrs
add
mov
jae
imul
out
sbb
jg
cmpsl
xorl
xlat
push
shlb
pop
cmp
jg
ss
rcll
sti
jmp
push
inc
mov
sbb
nop
add
inc
adc
xchg
xchg
push
pop
daa
sbb
push
xor
inc
and
stc
sti
cvtpi2ps
xlat
mov
xor
test
daa
mov
imul
fwait
sti
outsb
sub
js
insb
xor
lea
mov
into
scas
aaa
sti
loopne
pop
insb
aaa
cmp
cwtl
dec
lahf
sub
mov
leave
pop
cmc
fwait
xchg
movlps
aad
mov
xor
add
mov
lods
or
in
push
xor
xchg
pushf
jae
insl
ficomps
addb
xchg
adc
into
mov
shlb
sbb
hlt
inc
pop
gs
pop
pushf
stos
sbb
das
lcall
data16
in
jbe
mov
loope
out
or
ss
push
cmpsl
lds
mov
stos
cwtl
adc
xchg
mov
xchg
xorb
pop
inc
pop
dec
negl
loope
jmp
push
ret
call
adc
cltd
pop
arpl
lods
sti
std
lods
rcl
pop
jle
aad
test
pop
jno
mov
fldl
dec
movsl
push
pop
in
lret
and
push
or
jmp
xor
or
pop
lcall
add
les
ds
mov
lock
mov
jns
and
xor
jbe
fsubrl
push
adc
push
in
dec
adc
mov
or
aas
sar
addr16
xchg
lret
inc
push
mov
fildll
shl
enter
mov
ljmp
das
scas
dec
sub
and
mov
arpl
je
mov
sbb
aam
pop
inc
imul
repz
shlb
mov
dec
sub
inc
xchg
mov
lods
add
ds
clc
std
lock
jns
pop
sbb
add
jle
pushf
out
push
mov
mov
aad
insl
scas
add
inc
testl
cli
mov
mov
adc
or
and
ficoml
pop
pop
jle
jmp
in
jecxz
lret
loop
fisttpll
loopne
imul
leave
adc
sahf
mov
enter
inc
int
cwtl
fstpl
jecxz
stc
or
adc
outsl
std
scas
push
push
add
fxch
out
cmp
lret
or
mov
or
mov
mov
clc
out
daa
xchg
lret
push
and
ds
popa
mov
jmp
in
lea
push
sbb
out
cmpsb
sbb
fpatan
bound
fwait
cmpl
mov
mov
cwtl
dec
jmp
loopne
mov
mov
dec
fidivrl
roll
and
mov
xlat
mov
out
add
jmp
inc
mov
fidivl
jle
std
repz
mov
and
mov
and
sub
addl
shll
ret
outsb
sbb
loop
mov
inc
addl
adc
push
arpl
test
lock
int3
pop
arpl
xor
xchg
cmpsb
cmp
cmp
push
push
sbb
in
lcall
push
push
rcrb
aam
es
adc
or
scas
sub
out
mov
stos
aas
in
inc
iret
or
jnp
fisttpl
repz
pushf
lods
pop
or
testl
iret
mov
pusha
mov
dec
push
addb
xchg
in
inc
and
iret
adc
sar
stos
out
xor
jne
push
mov
or
aas
cmpsb
xchg
cmp
pop
scas
lahf
and
fisubl
adc
mov
shll
xchg
dec
xor
mov
or
gs
mov
mov
or
sub
lret
add
xchg
adc
loope
in
repz
faddl
jmp
cmp
jne
pop
insl
jbe
shrl
adc
cmp
ds
subb
dec
mov
stos
fmull
data16
add
popf
xchg
pop
add
imul
shll
xchg
js
addl
test
sub
mov
xchg
pop
test
icebp
xchg
arpl
adc
sub
mov
dec
rol
out
pushw
lret
pop
xor
outsl
nop
add
arpl
mov
xor
push
aad
aam
lahf
call
outsb
xchg
imul
repz
or
shll
std
push
pop
mov
into
add
and
cmpsl
gs
ljmp
inc
mov
mov
stc
test
dec
and
aas
cmp
lods
in
xorb
fsubs
xchg
mov
sbb
test
jns
sbb
notb
or
mov
std
movb
loop
cltd
sbb
repnz
sahf
cltd
into
pop
pop
xchg
sahf
push
scas
insb
repz
jle
cmpsb
cmpsl
insb
xchg
outsl
cmp
leave
in
xchg
ja
outsb
bound
pop
inc
movsl
ljmp
repnz
in
add
add
or
lea
loope
popf
sahf
push
push
dec
jmp
pop
lods
outsb
lahf
jb
fidivl
in
sub
sub
daa
mov
jg
arpl
pop
or
jnp
rcrb
shll
out
fcoms
lahf
hlt
addr16
scas
pop
mov
loope
ds
cltd
xor
lahf
dec
data16
test
add
mov
pop
imul
aad
mov
hlt
sbb
mov
xor
loop
xor
leave
cld
sbb
sbb
lahf
aam
dec
js
cltd
and
stc
dec
fs
insl
fmulp
out
and
mov
popa
cmp
jno
bound
cli
and
in
shll
test
sti
pop
sbb
push
push
std
or
xor
mov
xchg
sahf
mov
sbb
xchg
nop
xor
mov
mov
out
movsl
push
pop
lods
test
pop
mov
lret
scas
xchg
mov
inc
ja
sbb
and
test
mov
rorl
data16
insl
xor
lock
cmp
aas
imul
mov
push
mov
test
add
sub
or
inc
cmp
in
xchg
je
lock
jns
jg
loop
stos
jns
fs
loopne
fidivrl
jo
sbb
sti
xchg
dec
std
dec
push
lock
std
push
xor
loope
stos
pushf
ja
pop
mov
push
jbe
mov
and
mov
cli
sub
push
push
push
repnz
popa
xor
test
into
lret
sbb
je
rcrl
sub
out
lret
lods
testb
imul
jge
adc
mov
pop
sub
loopne
xchg
dec
cmp
push
test
test
mov
cmpl
fwait
incl
imul
xchg
in
jbe
shlb
mov
mov
popa
xor
mov
pop
mov
clc
mov
nop
jle
jno
cmp
add
fsub
jnp
mov
fs
push
das
xchg
adc
jo
mov
xchg
lahf
mov
hlt
adc
mov
pop
aad
mov
iret
outsl
or
mov
movsl
sub
jne
sbb
cs
mov
or
inc
jmp
mov
sub
fldenv
sbb
and
dec
addr16
call
pop
sahf
sub
sarl
cltd
dec
cmpsb
cmp
aas
inc
mov
xchg
add
je
inc
cli
cmp
and
jge
lea
das
mov
ss
clc
push
add
das
mov
sbb
adc
jne
or
pop
or
xor
add
hlt
inc
test
fsts
loopne
inc
lock
int3
xchg
adc
loope
rcrb
jl
sbb
dec
out
dec
and
inc
fcmove
imulb
test
xchg
pop
fdivl
addr16
xor
mov
shrl
test
movsb
clc
cmpsl
mov
in
push
or
and
inc
xor
mov
adc
mov
cmc
cltd
stc
xlat
push
sbb
inc
aas
out
loope
insl
sub
ret
pop
push
push
test
fld
jecxz
test
scas
jae
sbb
hlt
adc
stos
inc
push
mov
adc
push
sbb
xor
add
mov
out
mov
or
fdivrs
imul
cmc
adc
aam
cli
pop
fimuls
mov
add
dec
fsubs
xor
out
in
and
lods
popf
sbb
rcl
cld
xor
iret
lods
std
int
mov
mov
fdivrl
movntps
mov
sbb
das
call
call
mov
bound
imul
shll
add
cmc
cmp
sub
adc
mov
call
insl
push
insl
sar
cmp
push
inc
pop
fs
sti
inc
lods
push
xlat
mov
clc
aam
ret
sbb
mov
mov
jo
test
inc
inc
enter
xchg
dec
test
xchg
mov
aam
or
cmp
rol
pop
fcomip
sbb
popa
mov
movsb
subb
cmpsl
test
fwait
gs
gs
push
lret
aam
push
jne
sbb
lret
mov
or
je
pop
dec
loopne
cmp
sub
xchg
loopne
pop
imul
xor
ljmp
sub
dec
sub
cltd
stc
mov
jmp
sbb
dec
das
mov
mov
push
lock
cmc
loope
lcall
leave
pop
popf
mov
cmc
mov
and
frstor
xchg
cmp
sub
and
sbb
pop
or
cmp
mov
movsb
push
mov
cli
jge
movsb
add
mov
mov
xchg
jne
dec
dec
cmc
cmpsl
cmc
mov
icebp
xchg
xor
jb
pusha
or
xchg
out
dec
aas
xchg
pop
and
inc
lret
adcl
jno
or
push
imul
mov
lea
pop
push
insb
add
les
push
jbe
dec
add
das
rcrb
push
push
adc
lcall
mov
ret
int3
into
lahf
inc
inc
mov
xchg
pop
lock
or
je
mov
xchg
jmp
aad
and
lds
ret
gs
inc
stos
xchg
push
clc
enter
pop
inc
add
fldl
loopne
rol
fwait
iret
sbb
push
inc
data16
jmp
sub
xchg
cmc
int3
aaa
stc
pop
lahf
mov
xor
xchg
test
stos
sahf
cs
pop
dec
int
sete
ljmp
and
faddp
fmull
outsl
mov
add
das
push
gs
sub
mov
push
std
rcll
in
cmp
xor
jbe
push
xchg
in
pop
push
and
xchg
subb
add
or
or
xchg
movsb
xlat
push
push
test
mov
rclb
nop
sahf
push
xchg
lock
adc
or
sub
mov
jge
icebp
add
push
dec
mov
mov
xor
dec
cmpsb
inc
mov
insl
repz
fldcw
aas
gs
inc
push
inc
movsl
imul
movsl
sub
cmp
adc
sub
push
daa
shlb
addr16
xchg
inc
cs
aad
sub
xor
scas
push
cmp
pop
stc
aas
xor
jmp
jbe
xor
lock
rcrb
clc
inc
inc
mov
sbb
mov
outsl
adc
das
sbb
pop
lahf
add
ss
loop
fs
stc
clc
data16
sub
cmp
test
call
das
std
pop
es
test
lahf
push
mov
add
jl
jecxz
push
bound
xchg
adc
movsl
dec
out
cs
or
enter
aam
inc
and
ds
sbb
std
test
inc
cmpsl
lcall
push
sub
enter
imul
repz
add
push
gs
call
int
and
xor
sti
imul
push
imul
inc
push
roll
adc
mov
mov
in
xor
and
scas
push
in
inc
add
push
lret
in
xorb
lds
popf
je
add
pushf
jmp
cmp
scas
pushf
divb
mov
fs
xchg
lds
ret
icebp
mov
in
fildl
inc
xor
jno
insb
push
cli
push
xor
ljmp
mov
decl
mov
loopne
incl
ret
xchg
jb
add
sub
insl
shrl
je
outsl
bound
or
jl
push
insb
dec
sti
or
or
cwtl
inc
in
std
idiv
sbb
or
pop
xor
inc
jp
shrl
popf
rcrb
mov
mov
loopne
dec
cmpsl
xor
sub
iret
ficoms
cmp
scas
push
jo
out
das
jo
insl
adc
xor
in
adc
mov
cmp
xchg
sarb
sbb
rorl
clc
fmull
adc
push
xchg
jno
loopne
aaa
insb
mov
dec
pop
push
testb
dec
popf
push
jp
test
insl
adc
add
adc
dec
push
lret
fwait
xchg
jnp
in
js
mov
imul
xor
sbb
rclb
cmp
jle
or
or
add
mov
jns
cmp
and
xchg
mov
decl
xor
inc
dec
mov
daa
data16
inc
movsl
aas
xchg
push
pop
jmp
push
gs
loopne
ljmp
popf
add
mov
shl
inc
repnz
lds
loop
jg
popa
lock
fldenv
gs
mov
adc
lahf
lods
sti
int3
int3
mov
movntq
push
push
adc
add
xchg
lcall
outsb
lea
insl
pusha
hlt
mov
aam
sub
fmul
add
daa
sbb
sahf
daa
fldenv
push
into
mov
sarb
cmp
andb
sub
je
xor
cli
dec
cmpsl
scas
pushf
lcall
adc
mov
pop
stc
sub
cwtl
in
xchg
xchg
cmpsb
mov
inc
mov
movsl
adc
xchg
sarb
movsl
out
imul
or
cmpsl
pop
adc
daa
mov
idivl
pop
jmp
jo
outsb
or
lock
sbb
ret
mov
decb
lret
dec
adc
shl
mov
adc
mov
cmpsb
rcll
dec
mov
xchg
sbbb
pop
mov
adc
jle
les
sahf
ret
xchg
adc
push
lea
push
push
aaa
insb
out
addr16
aas
rcrl
inc
pop
inc
mov
inc
loopne
mov
repnz
lods
inc
mov
imul
push
shl
mov
lds
adc
xor
sti
lea
scas
xchg
mov
outsb
mov
iret
inc
cmpl
movsl
jmp
pop
or
arpl
or
fs
inc
test
pop
dec
xor
and
inc
outsb
ljmp
inc
mov
std
cmp
jge
mov
push
ss
lock
or
jle
adc
andl
stos
mov
fwait
mov
jmp
lea
xchg
mov
dec
dec
mov
scas
sbb
xor
popa
insl
sti
adc
mov
inc
xor
xchg
in
insb
cmp
nopl
pop
xchg
mov
sbb
jg
stos
adc
and
shr
sub
mov
clc
out
cld
pop
jg
in
lock
sti
lods
aas
sti
xchg
in
aas
lods
jge
jno
mov
pushf
sahf
nop
adc
adc
ficomps
xor
std
cmpsb
out
repz
jp
ficoms
fwait
out
imul
lods
mov
into
dec
mov
and
stos
mov
push
sbb
pop
mov
dec
out
fisubl
in
mov
mov
or
or
aam
push
or
mov
jp
lods
mov
mov
mov
adc
jae
in
pushf
sbb
ret
and
popl
mov
popf
in
mov
test
adc
jmp
mov
insb
mov
lods
cwtl
popf
shll
mov
lods
dec
pop
shll
mov
fistpll
pop
sbb
xchg
sti
and
inc
and
into
fs
add
sahf
mov
nop
mov
lods
in
pop
shrl
mov
dec
mov
cltd
pusha
mov
push
pop
fmull
add
and
pop
jmp
fwait
in
outsb
xchg
sbb
fldt
sub
pop
daa
push
inc
rclb
mov
jecxz
out
incl
fsubr
push
rol
jb
out
dec
xchg
jge
inc
loop
sti
mov
in
sbb
imul
and
dec
adc
inc
add
mov
adc
jecxz
in
and
loop
je
pop
rcl
bswap
cwtl
push
out
or
inc
fimull
out
es
jp
pop
cmp
pushf
xor
shll
mov
int
push
jp
sub
adc
xabort
stos
push
dec
frstor
or
lret
loop
xchg
and
fs
mov
orb
jmp
jle
divb
test
pop
inc
flds
addb
fucomip
jbe
push
mov
mov
arpl
jno
int3
ja
sub
sahf
sbb
mov
lods
mov
xor
insb
fistl
sub
out
inc
xchg
mov
push
ljmp
cmp
imul
cmp
int
out
arpl
pop
lds
test
dec
jno
int
xlat
and
mov
mov
outsl
les
aad
cmp
adc
jmp
lcall
jb
mov
and
mov
fistl
cmp
mov
hlt
mov
cmpsb
lods
in
xor
shll
test
lock
movsl
mov
pop
testl
pop
lea
xor
cli
popa
sbb
pop
outsb
add
pop
sti
xchg
sbb
xchg
mov
sbb
adc
cmp
not
inc
xlat
fisttpl
lea
and
loopne
js
push
mov
pushf
insl
or
xor
adcl
gs
or
push
mov
lea
add
push
jmp
cmp
addr16
mov
out
mov
popa
flds
add
jb
and
cmpsl
test
aam
and
add
cmpl
xor
and
pop
jg
sarb
movsb
int3
mov
cltd
sbb
flds
insl
inc
movsb
sub
jle
add
mov
lcall
mov
test
js
sub
sub
pop
sbb
dec
mov
neg
lods
xor
aaa
jl
cld
mov
int
sbb
push
cmpsl
add
leave
ficoml
int3
pop
push
cld
bound
rclb
cmp
pop
or
mov
mov
pop
add
test
enter
or
dec
dec
push
imul
xchg
lcall
adc
roll
sbb
sub
or
cmp
fldl2e
add
push
push
adc
or
adc
cli
lock
call
sub
cli
mov
cmp
jae
int
sahf
push
pop
pushl
fs
add
mov
sub
pushf
mov
pop
ror
bound
in
mov
call
xor
add
sbbl
push
push
movsl
mov
in
pushf
and
cmpsl
inc
push
out
cmp
or
jle
add
dec
sbb
or
pop
mov
daa
jmp
ljmp
out
inc
js
pop
test
fs
adc
iret
and
sahf
push
dec
or
aaa
std
int
stos
js
inc
add
or
sbb
dec
into
xorl
std
sbb
mov
cld
fildll
push
cmpsb
fidivs
cmp
loop
outsl
sub
cs
enter
ja
jno
sbb
mov
pushf
and
push
xchg
movsl
in
stos
mov
loop
push
jnp
xchg
lahf
add
stc
pushf
mov
movb
add
outsb
mov
imul
in
loopne
imul
gs
enter
int
enter
dec
or
aad
sbb
insb
dec
pop
arpl
fidivrl
leave
inc
sbb
mov
hlt
jb
ja
jmp
popa
push
ss
adc
mov
data16
fldcw
hlt
pop
xlat
cwtl
aas
cmpsl
mov
inc
dec
in
aaa
pop
fidivl
stos
inc
push
cmp
psubusb
dec
sbb
das
data16
push
inc
shrl
js
int
aaa
xor
and
push
loop
cld
fdivl
lret
push
movsl
mov
sub
or
xor
mov
mov
mov
clc
movsb
pop
in
or
jle
and
fcomip
mov
test
shll
cmp
daa
jo
rcr
jecxz
jo
mov
pop
enter
sbbb
inc
push
addb
sahf
cwtl
pop
sbb
test
insl
shll
in
pop
mov
sbb
cwtl
daa
mov
loope
insl
fdiv
out
les
divl
in
pop
test
xchg
ret
jle
shlb
dec
lahf
xor
cmp
mov
test
jge
movsb
aaa
icebp
xor
scas
mov
cs
mov
mov
loopne
ds
xor
sahf
mov
rolb
mov
mov
inc
pusha
cltd
stos
in
xchg
push
shll
cli
in
inc
mov
in
xchg
outsl
mov
pop
sbb
add
xorl
insb
xchg
lea
inc
cmp
mov
stos
mov
jnp
push
push
test
push
pop
push
mov
xchg
and
cwtl
pop
mov
lds
inc
sbb
pop
mov
das
push
pslld
dec
loopne
inc
xlat
jmp
cmp
jle
icebp
outsl
cmp
jae
inc
daa
dec
fildl
mov
lock
sub
and
jge
xchg
push
leave
dec
es
popa
loop
jne
push
xchg
arpl
xchg
outsl
pushf
scas
test
jbe
in
cmp
popf
push
sub
xor
push
cmc
push
pop
arpl
out
xor
push
in
xchg
mov
leave
mov
ss
cltd
jg
stc
inc
sbb
rcrb
dec
xchg
jo
pop
add
push
repz
sar
cltd
scas
cmp
mov
add
movsb
cld
out
ret
dec
out
in
xlat
jne
add
fwait
rorb
test
mov
mov
outsl
out
sahf
bound
int3
int3
cmp
push
xchg
mov
mov
lret
cmp
mov
int3
inc
loop
jecxz
mov
push
and
xchg
mov
jbe
repnz
xchg
pop
jne
sub
cmpsl
and
stos
push
jns
push
test
out
test
xchg
sarl
and
mov
out
test
sbb
push
les
adc
loope
ficomps
test
sbb
ret
xchg
cmp
outsl
sub
jmp
mov
mov
scas
adcl
test
adc
adc
lock
mov
ror
stos
cmp
sub
mov
xchg
jns
push
addl
out
shll
lret
and
daa
push
faddl
daa
clc
jae
cmp
mov
sub
arpl
stos
sbb
inc
xchg
ja
xor
mov
data16
cmp
inc
inc
adc
xor
jbe
cmp
lods
enter
fwait
mov
mov
adc
loop
out
iret
mov
and
push
inc
mov
xor
mov
inc
in
pop
lods
jno
push
pop
cltd
add
out
ds
push
ja
das
inc
push
mov
mov
push
xor
aad
xlat
test
adc
dec
xor
xchg
orl
ds
lods
or
int
pop
fsubl
xor
bound
mov
add
xor
dec
pop
cmpl
adc
pushf
fwait
iret
jmp
xchg
mov
cmpsl
inc
psadbw
pop
in
jle
pushf
mov
pop
and
mov
loope
push
and
orl
mov
lea
lods
mov
jo
xor
inc
dec
pop
into
scas
adc
mov
imul
push
sub
rorb
hlt
incb
jmp
pop
sahf
cmp
adcl
adc
insl
mov
pop
or
or
sbb
and
mov
es
lds
lret
in
pop
mov
inc
xchg
fwait
lock
or
jle
cmp
inc
mov
dec
lahf
sub
sbb
xchg
jb
cmpl
pop
add
in
imul
jo
shlb
rcll
fldenv
mov
dec
or
inc
add
inc
dec
mov
sbbb
decl
jl
cld
fmuls
mov
pop
inc
add
cmp
or
loopne
add
sub
jp
push
or
dec
mov
out
sub
and
pop
and
sub
rorb
sbb
fnsave
jg
pop
mov
ss
inc
bound
mov
mov
sti
sbb
jbe
inc
dec
fcmove
mov
sahf
lock
and
neg
lods
cmp
ljmp
xchg
jl
out
cmp
adc
in
sub
push
dec
cld
lret
push
insb
clc
es
pop
xchg
andl
add
jns
repnz
sbb
repnz
push
add
mov
out
dec
pop
jae
pop
jle
in
mov
sbb
sahf
sub
shr
lods
test
aas
sub
dec
dec
push
jo
inc
inc
cmp
and
dec
cmp
jecxz
mov
jp
mov
dec
movsb
mov
aam
push
mov
dec
cld
enter
push
pop
push
ret
mov
divb
jmp
lea
repz
mov
mov
test
pop
push
cltd
scas
mov
fildll
push
jbe
adc
repnz
fldcw
or
or
or
mov
and
push
movsl
test
push
mov
push
pusha
repnz
pop
add
insl
cmpsl
add
cs
and
dec
and
pop
cmpsb
shlb
lcallw
imul
jge
pop
sub
or
or
sub
repnz
push
fistpll
mov
or
adc
cmpsb
mov
repnz
push
sub
loope
jno
xor
and
or
sar
out
inc
stos
or
movl
lods
or
rcr
xor
ficoml
mov
sti
mov
xchg
aad
push
push
mov
mov
ffree
jmp
je
sbb
xor
daa
ljmp
mov
gs
shrb
imul
outsb
push
or
fiadds
mov
and
sbb
push
daa
cmpl
ret
cmpsb
in
ss
push
rorb
dec
xchg
mov
adc
hlt
mov
je
dec
push
add
xchg
inc
or
xor
lods
fldcw
jp
loope
inc
cli
and
sahf
jmp
bound
sub
ds
std
adc
xor
scas
ret
adc
jg
jp
imul
iret
mov
lret
dec
notl
addr16
cmc
pop
or
and
cmp
adc
pop
add
pop
dec
out
dec
int3
lret
addb
scas
jge
test
xor
movsl
xchg
add
sbb
cmp
out
test
push
push
clc
les
xchg
sub
push
mov
pop
sbb
notb
call
jno
xor
dec
push
ss
inc
sti
inc
mov
jno
je
std
inc
out
xchg
xchg
xchg
push
addl
adc
mov
lock
sti
arpl
mov
cltd
lds
stos
xlat
jne
or
jb
cmpb
inc
rcll
sbb
std
lcall
dec
dec
adc
inc
imul
mov
xlat
mov
or
add
test
pop
outsb
mov
lock
cld
pushl
cmp
pusha
jmp
test
mov
popf
clc
push
stc
push
mov
mull
mov
inc
repnz
sbb
in
loope,pt
push
mov
cmp
xor
lahf
xchg
mov
fstpt
xchg
imull
push
jle
cmp
jne
test
sti
jno
or
xchg
xor
fwait
add
mov
in
repnz
cmp
aaa
or
dec
cmp
aad
daa
jmp
pusha
int
pop
mov
cmp
ds
mov
dec
leave
test
das
pop
xor
xor
clc
and
lea
insb
dec
mov
sarb
fsubrp
inc
ficoml
mov
dec
jns
add
mov
scas
cltd
adc
xchg
jge
and
leave
pop
add
sub
enter
daa
test
mov
jge
cmpsb
cmp
int3
ffreep
lds
cmp
cmc
gs
loop
cltd
fnsave
lock
add
jle
cmp
xchg
or
sahf
int3
ds
xor
loope
fisubs
in
das
add
mov
adcl
fsubrs
btc
icebp
sub
lahf
mov
das
popa
int
and
dec
cmp
sbb
inc
aaa
mov
mov
into
es
je
mov
pop
cmp
dec
mov
dec
cmp
and
and
push
jmp
mov
stos
jno
rcll
jge
cld
inc
add
lret
inc
outsl
mov
daa
cmp
stos
stc
test
test
dec
enter
lret
ss
mov
rcl
lock
incb
pop
mov
xor
mov
push
xchg
adc
xchg
mov
fnsave
icebp
cmp
and
sbb
call
mov
orl
daa
cmp
hlt
pusha
push
js
js
add
mov
lock
sahf
insl
xchg
pusha
int3
pushf
pop
cli
cmp
adc
cmp
push
mov
push
ja
pop
and
data16
push
mov
dec
xchg
mov
mov
jecxz,pn
std
pop
std
mov
jnp
adc
jecxz
jl
stos
mov
imul
cltd
mov
lret
outsb
lods
je
push
lret
lods
sahf
pop
inc
mov
loope
pusha
ss
push
and
arpl
shld
sub
pop
rcrl
ja
or
inc
jnp
fbld
int
out
jae
mov
cmpsl
fimuls
sub
xor
cmp
dec
jp
sbb
clc
pop
lods
push
mov
dec
in
and
sub
xchg
repz
dec
dec
mov
test
ret
jns
xchg
cmpsl
dec
inc
add
or
mov
mov
xchg
add
xchg
mov
mov
mov
sbb
shlb
jp
sub
icebp
sbb
mov
xchg
popa
fs
in
mov
lds
daa
mov
jmp
xchg
mov
mov
dec
cmp
or
pop
sbb
jno
jl
adc
sub
fisttpl
insb
cwtl
or
cmp
xchg
mov
mov
sub
ljmp
mov
notl
or
ret
fsubrl
cmp
test
dec
cli
push
je
mov
movsl
add
or
push
cs
test
add
enter
lods
ljmp
sub
fists
and
adc
adc
cld
and
loopne
test
inc
inc
adc
jge
lahf
mov
mov
lret
in
pop
dec
jbe
sub
pusha
fldenv
test
fdivl
dec
push
mov
sbb
lret
imul
jge
fwait
addr16
out
mov
push
jbe
mov
sbb
jb
xchg
push
out
mov
dec
call
scas
mov
push
das
test
xchg
rcll
pop
sub
clc
insb
pop
jle
jb
clc
mov
notb
xchg
xchg
aam
or
mov
inc
faddl
cmp
fsubs
lcall
jecxz
sbb
cmp
lret
repnz
sbb
int
jp
pop
lea
pop
cmp
mov
add
pop
xchg
inc
adc
xor
iret
ret
jmp
push
dec
sahf
test
cmpsl
dec
push
lock
sub
sbb
mov
jo
push
out
inc
dec
repnz
lahf
pop
ja
xor
adc
push
mov
fnstsw
xchg
scas
push
sahf
mov
inc
sbb
fisttpl
or
fsubrl
xor
push
pop
cmp
pop
or
push
jl
mov
clc
mov
mov
adc
pop
fimuls
add
mov
scas
or
pop
in
pop
je
jbe
aad
sub
movsb
jns
xchg
dec
pop
push
cwtl
add
sbb
test
arpl
and
popf
cltd
xor
in
sbbb
pop
adc
loope
cmp
sub
sbb
pusha
rorl
call
stc
dec
xchg
cwtl
mov
popf
lahf
lcall
mov
inc
lretw
inc
scas
and
scas
or
sub
xchg
xchg
loopne
push
mov
pop
loopne
inc
ss
and
xlat
ds
dec
lds
test
mov
jl
aam
insb
and
shrl
ds
fwait
imul
imul
imul
mov
mov
sbb
cmpsl
mov
clc
xchg
and
out
repnz
insl
add
push
ljmp
lods
out
sbb
dec
sbb
dec
sarl
mov
mov
data16
shll
dec
and
sub
and
cld
push
push
sbb
lcall
in
pop
jb
pop
xchg
outsl
jecxz
mov
jg
hlt
stos
jbe
adc
aad
mov
sub
and
ret
sub
orb
stc
pop
inc
inc
cmp
pushf
test
or
jo
jle
out
in
inc
mov
scas
sub
andb
lea
inc
mov
dec
andb
lods
flds
pusha
dec
pusha
inc
pop
adc
pop
adc
push
mov
sbb
fsts
outsl
push
subb
sbb
lea
mov
sub
scas
or
mov
lahf
push
xchg
das
outsl
bound
jns
xchg
ljmp
pop
dec
inc
dec
xor
std
mov
jnp
ja
iret
mov
imul
outsl
js
or
push
jg
pop
fdivs
push
add
mov
jp
enter
sbb
xchg
sti
mov
adc
repnz
add
inc
sub
mov
test
outsb
cmp
roll
sub
push
mov
jns
sbb
test
jl
jnp
mov
sub
xor
mov
inc
jns
mov
add
orl
cmp
fcmovb
insb
lods
xor
cmp
push
xchg
inc
cmp
inc
xor
and
lds
fisubrl
pop
lods
aam
enterw
inc
xchg
xchg
mov
lcall
xor
fcmovnbe
push
pop
in
mov
icebp
ja
mov
ja
cmpl
sub
and
xchg
popf
sbb
call
js
pop
enter
clc
add
mov
add
in
frstor
popf
pop
push
push
and
or
xorl
mov
sar
jmp
das
les
push
lods
loopne
out
mov
loopne
clc
adc
xor
xchg
mov
add
fwait
orb
inc
lret
lods
xor
sbb
and
hlt
push
iret
inc
jns
mov
mov
cld
lret
fs
adcl
sbb
jbe
ds
pop
push
or
ret
cwtl
mov
out
dec
movsb
cmp
sub
xchg
lods
shlb
add
or
mov
shlb
cmpb
sub
push
call
enter
sub
push
sbb
sbb
aad
jmp
xchg
ja
pushf
pop
xor
aam
cwtl
cmp
lods
testl
inc
movsl
movsl
movsl
lods
or
push
rclb
in
and
cmpsl
in
cmp
test
or
mov
mov
stc
push
xor
pushf
xor
inc
pop
in
push
aaa
sub
push
push
adc
mov
pop
sub
xlat
cmc
jge
sbb
push
mov
mov
fmul
out
mov
inc
out
dec
push
enter
movsb
int3
stos
daa
xchg
xor
or
sbb
add
out
arpl
lock
addr16
adc
push
hlt
aam
rorb
or
aaa
mov
jge
shll
mov
jnp
sub
xor
imul
fstl
sbb
test
rol
adc
mov
ds
xor
pop
xchg
mov
jmp
push
repz
lret
ljmp
out
out
aas
sti
sub
inc
jmp
nop
cmp
inc
jmp
insl
in
cmp
pusha
or
stc
sub
mov
inc
scas
cld
pop
lds
das
adc
push
add
mov
sbb
pop
subl
jo
cwtl
dec
xor
sbb
mov
aas
mov
cmp
repz
aam
and
and
sti
lcall
inc
mov
mov
cli
adc
cli
ret
add
aaa
pop
in
roll
popf
cwtl
out
mov
mov
pop
and
add
jge
lret
cwtl
jns
add
jg
dec
leave
call
inc
lods
jae
sahf
ret
sarl
insb
ja
and
fisubs
daa
push
jnp
divb
pop
xor
iret
xchg
add
icebp
jne
in
lahf
cmp
or
dec
fwait
xor
je
xchg
pop
xor
mov
out
mov
mov
stos
jne
loope
mov
out
aas
mov
add
jge
loope
inc
cwtl
and
mov
sub
xor
dec
jecxz
mov
ljmp
idivb
xchg
pushf
fbstp
push
pop
and
cmpsb
sub
or
xchg
out
xorb
pop
in
sub
mov
lret
xlat
cmp
push
ror
mov
push
pop
scas
jne
xchg
xchg
push
adc
icebp
add
je
inc
push
mov
arpl
mov
jecxz
bnd
jae
jl
mov
push
scas
and
xor
cmc
test
popl
test
sub
dec
xchg
cltd
pop
sub
or
jno
mov
add
imul
lcall
adc
ret
pop
inc
imul
dec
rorl
mov
invd
data16
pushf
sti
das
movsl
inc
pop
xchg
pop
push
pop
test
mov
inc
xchg
imul
dec
mov
scas
ja
jl
imul
stos
mov
inc
mov
mov
or
xchg
aaa
mov
inc
sub
addr16
xchg
cmpsb
sbb
or
pop
xchg
call
inc
and
mov
push
xor
push
test
mov
xchg
js
push
xchg
sbb
mov
pushf
in
in
cmp
or
stc
cld
inc
and
in
xchg
mov
jae
cltd
iret
add
xor
xchg
stos
pop
into
movsb
jmp
hlt
adc
jle
dec
dec
mov
lods
or
or
mov
mov
js
loope
jae
imul
cmc
jg
fildl
les
sub
out
push
and
adc
in
dec
js
call
aaa
cmp
cltd
add
out
fsubs
jo
stos
roll
push
push
and
fwait
pop
mov
jb,pt
inc
sub
mov
rolb
mov
shll
ficompl
negb
test
ret
and
rclb
pavgb
fnsave
pop
outsb
rcrl
mov
inc
mov
cwtl
jmp
push
push
mov
xchg
jno
sbb
pop
xchg
sub
xchg
aas
cld
adc
sbb
mov
push
fnstcw
jle
ja
pop
in
sbb
shlb
pusha
rolb
nop
dec
jmp
sbb
or
xchg
xchg
popf
jecxz
mov
sbb
jne
push
pop
lods
fistps
lods
mov
jp
stos
stos
in
rol
jge
iret
arpl
lods
movsl
xor
inc
jmp
xchg
xchg
insb
dec
mov
mov
inc
arpl
repz
or
cltd
push
imul
push
lcall
xlat
pusha
mov
lock
lret
jo
icebp
mov
or
fadds
sbb
xchg
out
js
jbe
insb
mov
xchg
fmull
inc
repz
ss
xchg
xchg
add
mov
ds
jne
push
jns
outsl
imul
mov
and
roll
lcall
fcmovb
push
xchg
jl
cmp
add
je
lea
cmpsb
pop
je
pop
nop
pop
stc
and
stos
rol
ss
test
call
inc
push
fadds
insb
mov
mov
aas
std
xchg
sbb
imul
mov
fbld
push
ds
popa
adc
fisttpl
fistl
insb
or
movsl
mov
jbe
nop
mov
xor
xor
pop
cmp
ljmp
test
pusha
insb
popf
jno
jne
das
hlt
leave
cmp
xor
ret
mov
and
sub
inc
scas
es
leave
inc
dec
xchg
ljmp
decl
dec
inc
ret
aaa
fdivs
jle
cmp
xchg
sti
cmp
fs
mov
mov
dec
push
cli
xor
clc
adc
sbb
loopne
out
movsl
adc
inc
inc
push
jb
mov
je
lods
push
aas
mov
push
insl
mov
mov
mov
shrl
xchg
jns
pop
js
popa
jge
dec
out
push
mov
or
adc
sti
sub
sbb
loopne
rcr
xchg
es
aas
or
mov
mov
mov
and
dec
scas
imul
call
jecxz
in
in
inc
in
xor
mov
push
push
jmp
shlb
stc
push
push
cwtl
or
and
and
mov
js
shr
adc
or
push
xor
insb
dec
aas
xchg
out
inc
pop
mov
sbb
push
cld
iret
lods
xor
mov
xor
movsl
add
pushf
cmp
data16
ja
pop
rolb
inc
rcl
into
cltd
mov
std
sub
stos
test
leave
imul
cmp
fdivr
out
sbb
pop
stos
ljmp
sub
xor
pop
lret
sti
mov
fidivl
lea
pop
and
mov
or
ja
aaa
xchg
jbe
add
incb
pop
shll
jl
sub
insl
stos
pop
mov
loopne
fwait
jge
dec
mov
push
icebp
scas
mov
cltd
std
jl
push
pop
and
lods
jb
insb
mov
lds
jecxz
das
mov
shlb
mov
and
fsubrs
pop
xchg
xchg
adc
jmp
xor
dec
scas
mov
adcb
out
sbb
in
jmp
xchg
ds
out
add
dec
mov
push
scas
loope
idivb
testl
inc
jae
sbb
data16
mov
scas
mov
in
into
push
push
dec
lods
faddl
pushf
inc
xchg
jno
aam
or
pop
bts
dec
insb
pop
mov
test
or
cmc
dec
subb
stos
ss
std
aaa
pop
ret
and
adc
in
enter
test
jnp
jnp
fisttps
cmp
pop
push
lcall
int
fwait
jmp
mov
sbb
pop
mov
ret
or
mov
and
jo
dec
outsl
push
mov
dec
cmp
scas
stc
mov
out
lods
movsl
adc
jge
sub
or
clc
cltd
mov
push
pop
out
fsubl
adc
fidivrl
xchg
jbe
jge
lret
mov
jne
adc
mov
dec
lret
mov
push
or
jmp
mov
lahf
outsl
adc
push
xchg
fwait
pop
mov
lds
pop
std
add
enter
ljmp
std
xor
xor
pusha
push
loopne
std
fwait
cltd
push
jne
arpl
pop
outsb
loop
icebp
jle
neg
push
cmc
inc
scas
div
sub
xor
fistpl
lea
stos
sbb
sub
xlat
mov
and
xor
clc
push
cmp
or
lret
mov
or
ret
add
jmp
enter
std
and
dec
lock
mov
sbb
ret
stos
mov
mov
cs
pop
mov
mov
sbb
pop
in
mov
test
loop
push
outsb
aad
popa
xor
mov
lods
or
jl
test
sbb
mov
mov
and
aad
inc
sbb
mov
pop
loope
lods
inc
add
in
jnp
insb
mov
js
ljmp
cmp
jmp
imul
stos
loopne
xor
push
test
add
pop
adc
pop
fcomip
pop
enter
jmp
lcall
or
loopne
cmp
loop
daa
push
int
xchg
or
mov
inc
aas
es
loopne
in
sbb
insb
xlat
jbe
adc
inc
pop
mov
pop
jecxz
jae
xor
pop
jecxz
test
ret
aad
addr16
vmovaps
mov
shll
mov
ficoms
xor
stos
xchg
flds
pop
and
aas
mov
push
lahf
ss
cmpsb
sub
aas
and
loope
pop
cmp
mov
push
movsw
xchg
movsb
sbb
xchg
xchg
sti
lahf
loop
testb
sarl
pop
jecxz
shlb
outsb
mov
add
or
push
stos
mov
push
mov
fs
adc
xchg
xchg
icebp
imul
inc
xchg
in
cmp
xor
push
pop
pushf
icebp
cs
hlt
xor
outsb
sbb
cld
sub
stos
or
loop
subb
fistpl
push
les
mov
loope
xchg
add
or
and
xor
ja
fldenv
sub
add
inc
loope
insl
mov
jmp
inc
insl
mov
push
dec
es
jge
stos
add
filds
cmp
rcrb
jg
xchg
outsb
sub
xchg
pop
test
aas
cmp
push
mov
mov
xor
les
jecxz
xchg
insb
gs
test
test
addr16
loopne
xor
adc
ja
dec
push
jae
jecxz
sbb
jmp
sub
jp
xchg
sahf
xchg
subl
test
nop
dec
scas
lret
inc
mov
lods
mov
inc
xor
jle
imul
push
dec
push
ret
in
pop
fdivrs
cmp
fistl
lahf
pop
sbbl
std
std
pop
andl
adc
xlat
aas
sub
popa
movl
and
fwait
push
mov
inc
sbb
cmp
push
sbb
add
and
sti
loopw
xchg
dec
rclb
mov
add
shlb
sbb
mov
mov
pop
or
and
mov
mov
mov
adcb
stc
shlb
dec
cltd
xchg
lret
xchg
pop
dec
jno
mov
cmpsl
push
jnp
lods
data16
push
inc
ficomps
and
shl
leave
out
sbb
fcmovnb
add
fnop
sahf
es
icebp
pop
cs
dec
imul
mov
sarl
loopne
daa
loopne
mov
roll
idivb
je
push
mov
arpl
sbb
cld
push
cmp
mov
pop
push
mov
adc
add
jecxz
addr16
fmuls
push
adc
jno
mov
pop
popf
xor
adc
cmpsb
arpl
push
stos
mov
cltd
pushf
bnd
test
jae
adc
pop
enter
fwait
out
fadds
shlb
adc
mov
sbb
iret
adc
test
pop
add
pop
sbb
push
lret
rolb
add
pop
pusha
cmp
sub
mov
andl
repz
xor
fldl
inc
in
jno
shr
stos
pop
sarb
pop
mov
mov
jno
adc
adc
adc
cmpsl
push
repnz
loop
mov
sbb
or
jns
cli
arpl
jle
pop
or
repz
mov
gs
cmp
jg
int3
cmp
pop
jno
push
cli
xor
sbbl
lret
call
dec
imul
jnp
stos
jmp
mov
loopne
mov
sub
sub
mov
mov
leave
fisttpll
movsb
mov
pop
addr16
pusha
loop
adc
pop
fwait
cmpsb
aad
sub
repz
xchg
pop
ja
mov
test
mov
jmp
xchg
sbb
adc
mov
jl
dec
sub
push
sbb
sub
mov
fcomps
sub
shll
xor
and
jnp
jb
int
xor
ja
clc
sub
lods
add
shlb
adc
push
sarb
jne
xorb
ja
loop
cltd
js
jae
fiaddl
inc
fmull
out
mov
jecxz
stos
inc
bound
cmp
push
data16
leave
mov
push
ds
shlb
pop
je
cmc
leave
dec
js
push
fldl
push
inc
std
xchg
jmp
inc
mov
pop
leave
out
js
int
xor
adc
dec
rcrl
pushf
mov
or
or
mov
int
sub
push
jl
adc
push
jo
fs
xchg
mov
add
in
test
push
adc
push
insb
pop
adc
outsb
dec
mov
dec
or
sbb
dec
adc
mov
sub
or
mov
dec
xchg
cmp
loopne
or
imul
lahf
repnz
lahf
mov
or
mov
clc
pop
cltd
or
bound
cmpsl
push
sub
mov
jbe
and
inc
testl
xchg
in
dec
xor
scas
adc
adc
ret
adc
lret
push
lods
jnp
mov
fstpl
sub
rol
ret
push
xor
int3
push
xchg
push
mov
xor
sbb
sti
rol
jge
dec
jecxz
add
cld
pop
dec
inc
ja
clc
push
andb
in
std
js
sbb
cltd
mov
inc
pop
and
leave
icebp
and
clc
cltd
mov
dec
jecxz
inc
ret
mov
adc
and
jne
popf
mov
movsb
loop
and
negl
mov
int
jp
xchg
frstor
ds
adc
repnz
bound
imul
aad
rsm
cli
rclb
dec
clc
adc
lds
and
test
fwait
cmp
add
add
mov
xor
xor
sub
in
faddl
jbe
fwait
xor
es
inc
addl
fdivl
xor
inc
rcpps
shr
sub
mov
mov
jne
mov
xchg
out
inc
dec
mov
push
jge
adc
scas
inc
or
fisttps
negl
add
mov
mov
sub
std
movsb
bound
or
dec
lea
push
loopne
xchg
aad
sbb
fsubrs
pop
lret
cld
int3
sbb
js
cmp
adcb
lahf
sub
and
and
jno
adc
xchg
stos
shll
xchg
xlat
dec
pop
rep
sbb
scas
in
enter
push
adc
cli
and
test
insl
hlt
mov
mov
and
lds
daa
movsl
idivl
cmp
add
adc
ljmp
sub
js
lds
lcall
xchg
mov
ja
popf
repz
div
arpl
jae
push
imul
xchg
xor
test
sbb
test
repz
lcall
das
cmpsl
xlat
fdivrl
jge
jp
mov
lods
jae
jne
lcall
call
pusha
aad
xchg
dec
adc
lret
shr
enter
sub
cmpsb
nop
inc
sahf
test
inc
dec
jmp
jge
outsl
popf
int3
fs
pop
out
cmpsb
sbb
loope
loope
pop
cmp
sarl
scas
push
add
and
xor
xor
mov
repnz
fs
or
sub
lahf
adc
inc
mov
mov
idivl
push
jnp
fnsave
dec
xchg
mov
movsl
cld
movsb
rcll
jne
cmc
and
jno
mov
dec
cmpsl
xor
jmp
xchg
icebp
enter
popf
jl
and
jecxz
gs
movsb
jmp
push
jno
mov
popa
xchg
int
lret
push
or
incl
inc
call
push
fidivrs
iret
enter
jns
jle
out
int
mov
fs
push
mov
mov
pop
test
mov
mov
push
dec
dec
mov
jo
outsb
push
sbb
jecxz
jno
lcall
add
int
cmp
or
push
repz
pop
pop
mov
ss
xchg
push
pop
dec
push
stc
push
fists
cmpsl
iret
dec
xchg
xchg
dec
dec
sbb
ficoms
inc
sub
cmp
cmpsl
cmp
pop
push
test
sahf
outsb
daa
sub
xchg
dec
mov
mov
cmp
dec
xchg
and
cmp
push
adc
mov
push
lcall
stc
sbb
out
pushl
push
add
cmpsb
imul
std
pop
xchg
cmp
daa
pop
jg
test
push
in
hlt
push
or
dec
rcll
fldt
clc
adc
movsb
dec
push
mov
xor
mov
call
leave
stc
ss
lahf
cmp
add
in
insl
or
stc
sbb
sbb
jno
fcomip
push
add
movsl
inc
mov
push
fcoml
test
test
cmp
jge
push
pop
out
in
data16
mov
xorl
cmp
data16
stos
jmp
iret
sbbl
loop
sarl
leave
or
test
mov
xor
out
testb
adc
shll
ret
pop
data16
inc
xchg
add
add
loopne
cli
mov
mov
push
je
ds
sbb
out
dec
lret
xor
xor
pop
insb
push
test
xor
and
xor
je
jmp
jns
sahf
pop
fucom
jge
cli
div
push
vmulss
sbbl
jns
cmp
and
in
mov
adc
out
es
test
pop
test
xchg
xchg
cmp
rcll
fistl
or
adc
int
pushf
lcall
add
sar
or
int
inc
movsl
test
sub
call
in
aam
outsb
or
or
mov
xor
dec
and
fidivs
int3
xor
fiaddl
cmp
mov
xchg
aad
in
jae
repz
outsl
sahf
stos
mov
fisubl
dec
das
mov
adc
and
jno
and
out
neg
cmpsb
xchg
pop
pop
sub
int
pushf
out
lds
outsb
fstl
test
xchg
add
cmp
fcmovbe
push
sbb
sbb
scas
aam
fs
sar
int3
sbb
or
xor
jmp
jmp
pop
aad
dec
dec
fistps
adc
cmp
jmp
imul
adc
or
jns
sbb
negb
mov
jae
cmp
dec
loopne
mov
stos
jl
rorl
fisttps
xchg
popa
enter
andb
add
cli
and
pop
push
jbe
pusha
and
mov
cmp
push
popf
sbb
and
andb
rcrl
in
ret
push
jmp
mov
dec
aas
dec
daa
sahf
jbe
rol
cmp
adc
lret
fadds
cltd
and
inc
fildll
adc
leave
addr16
pop
mov
dec
and
rcl
push
jp
je
cmp
adc
testb
nop
add
add
out
lock
filds
mov
pop
mov
jg
dec
setle
sbb
mov
lock
mov
les
mov
sbb
mov
jne
in
push
pop
mov
mov
mov
mov
mov
lock
jecxz
fiadds
pop
imulb
xchg
mov
in
push
mul
fidivrl
fidivrl
popa
addr16
mov
ret
out
je
mov
push
popa
daa
cmp
mov
lahf
mov
jns
jbe
std
jmp
ds
test
pop
inc
sahf
dec
sbb
movsb
ret
cmpsl
clc
lahf
pop
dec
push
cs
imul
sub
dec
lret
dec
movsl
andl
adcb
sub
mov
adc
xor
xchg
mov
test
jge
inc
fcomps
dec
loopne
inc
cmp
adc
and
mov
mov
test
roll
sbb
mov
dec
out
mov
xor
jle
mov
popa
and
inc
push
ss
adc
sahf
jecxz
mov
add
sub
xchg
inc
add
dec
icebp
xchg
out
jecxz
push
pushf
add
int
jo
scas
mov
shl
and
mov
mov
ds
in
ss
movsb
dec
jno
leave
push
subl
mov
mov
lcall
push
imul
repnz
jle
mov
mov
hlt
rolb
or
lret
gs
test
lods
cmp
add
dec
pop
mov
dec
aaa
xchg
repnz
dec
leave
roll
dec
les
ss
mov
lret
and
shlb
and
add
mov
aam
push
push
jo
sub
mov
outsb
xchg
test
fs
sub
push
sbb
aad
mov
adc
add
scas
push
cmp
aas
jle
clc
addb
js
test
xchg
das
sbb
in
aaa
jns
inc
push
mov
adc
xchg
sbb
adc
test
loope
lock
mov
icebp
sbbl
sbb
mov
and
push
mov
lea
sbb
or
fnstsw
data16
sahf
test
xchg
mov
mov
push
movaps
je
push
shrl
aas
lock
xlat
pop
dec
call
shlb
mov
dec
jb
or
lcall
fucomp
mov
lock
in
je
packsswb
cmp
inc
lret
aam
movsl
call
push
inc
inc
aaa
insl
push
cmp
stc
int
mov
sbb
cmp
cmc
cmp
shll
inc
daa
loop
int
mov
sbb
xchg
jnp
mov
jge
push
arpl
or
arpl
or
jb
cwtl
pop
in
xor
jp
adcb
sbb
inc
lcall
repz
xor
loopne
lock
cmp
push
popa
lds
filds
jne
lock
and
inc
fidivrl
mov
xorl
repnz
inc
ss
imul
adc
xor
addr16
loopne
push
pushf
push
fwait
iret
lret
pop
jnp
and
jp
test
push
xchg
repz
gs
pop
adc
aam
loope
cmpsl
inc
jp
add
leave
pop
add
jb
rorb
int3
mov
jns
push
fistps
jmp
mov
test
je
lcall
mov
sbbb
jecxz
aaa
xchg
adc
add
addr16
cmpsl
dec
xchg
mov
jl
loope
cmp
fnsave
lock
lds
mov
in
stos
push
cld
jl
out
mov
std
mov
lret
addb
aad
fnstenv
int3
mov
shrl
pop
lahf
add
cmp
clc
mov
sarl
xchg
push
lds
cmp
outsl
lret
cmp
insb
aad
pushf
subb
popf
dec
inc
arpl
adc
adcl
stc
sbb
push
mov
adc
hlt
pushf
and
jo
push
cmp
push
pop
cmp
sarb
xchg
popf
pop
inc
or
mov
shrb
or
out
mov
insb
fisubl
xchg
aad
cltd
push
cltd
lods
outsb
sbb
pushf
fadd
mov
insl
mov
js
add
cwtl
xchg
dec
out
test
clc
mov
add
cltd
je
clc
js
sbb
mov
nop
imul
aam
jp
pop
orb
in
fmuls
push
add
bound
or
aas
out
scas
push
adc
push
mov
xor
xchg
xchg
push
ss
mov
sub
push
mov
insl
enter
mov
cld
inc
imul
mov
push
jno
pop
cvtps2pi
je
adcl
or
fcompl
addb
push
stos
fwait
push
jle
std
inc
cmp
xchg
and
pushf
cmp
rcrb
addr16
push
bound
mov
pop
test
mov
stos
fstpt
in
jp
je
cmpsl
jle
inc
cmp
mov
or
rclb
int3
mov
int3
jo
insb
inc
mov
xchg
or
int
push
pop
and
shrl
sarb
sti
int
cli
subl
cmpsb
incb
adc
leave
in
or
push
push
fs
xor
adc
fwait
pop
mov
or
mov
cs
jg
lea
mov
lret
adcl
xlat
cmp
jp
pop
mov
push
jne
xchg
repnz
adc
data16
movsl
aaa
pushf
inc
pop
push
in
push
sbb
test
int
and
or
push
test
lods
mov
loopne
nop
daa
test
insl
sahf
fisubl
mov
sub
push
push
mov
sub
cmp
fisubl
lahf
xchg
mov
sub
and
inc
inc
pop
xchg
push
inc
icebp
sbb
sbb
movsl
mov
popl
ffree
pop
xchg
sbb
lods
aaa
imul
pop
cmp
xchg
dec
xchg
rcl
lret
add
inc
push
imul
push
jl
int3
push
mov
inc
pop
push
loop
mov
pop
bound
imul
sub
or
push
mov
sbb
lock
or
ja
aaa
mov
popf
sbb
mov
lds
add
bound
jmp
bound
fs
cmp
or
mov
insl
outsl
movsl
stos
xchg
sahf
int3
in
cli
add
mov
mov
jns
mov
inc
mov
mov
sbb
cmpsb
cwtl
xor
pop
cmp
scas
adc
lds
cmpb
or
flds
push
in
fstpt
inc
loop
dec
icebp
or
inc
mov
xchg
outsl
inc
cmp
addl
sub
pop
sbb
ljmp
ss
add
sbb
ljmp
aad
xor
mov
call
mov
out
inc
push
popa
mov
lret
jecxz
mov
mov
int
pop
mov
inc
fs
hlt
call
sub
and
popa
jmp
mov
adc
push
cld
xor
je
mov
ss
inc
cmp
jp
dec
enter
and
push
nop
fimull
dec
mov
jge
fs
jge
cmpb
xor
mov
mov
inc
popl
sbb
jecxz
int3
js
jae
mov
push
das
mul
jbe
cli
loope
or
xchg
mov
addr16
cmpsb
sub
push
cmc
ret
imul
movb
cltd
inc
insl
sub
inc
inc
inc
mov
ret
in
repz
push
sahf
fisubrs
fs
dec
sub
shrb
sti
mov
test
dec
mov
cmp
and
add
call
fcmovnu
mov
das
call
fistps
int3
jne
jae
inc
std
jb
push
push
or
jae
fisubl
lods
xchg
adc
lret
mov
dec
test
aas
mov
add
imul
push
mov
xchg
insl
aaa
mov
xchg
daa
sar
repnz
xor
pop
sub
movsb
dec
cmpsb
mov
inc
pop
xchg
fnsave
push
inc
inc
pop
push
rcll
in
inc
sbb
cmp
std
fucom
bound
and
pop
negb
sbb
xchg
rcrb
loop
xchg
int
push
outsl
sbb
mov
inc
stos
out
stos
popa
jecxz
push
aam
mov
jle
cmc
pusha
xchg
dec
call
mov
jmp
or
iret
dec
out
pushw
stos
pop
pop
add
push
idivb
jb
pop
out
lods
push
jae
std
aad
and
stc
cltd
lods
or
stos
out
clc
mov
adc
loop
movsl
sub
push
lret
mov
push
adc
stc
iret
clc
jo
adc
xor
xor
and
cmpb
pop
jp
popa
nop
sub
pop
shll
cli
repnz
adcl
fidivrl
mov
mov
repz
jmp
add
movq
sbbl
sar
imul
or
or
mov
jbe
daa
inc
ret
insb
dec
fs
shlb
mov
je
shll
cmpb
faddl
aas
test
sbb
addr16
add
lock
fs
sbb
and
cmp
es
xor
stc
popa
cmp
jns
lock
xor
cmp
push
or
mov
xor
insl
std
and
mov
les
mov
inc
sarb
sti
xlat
scas
loopne
jb
stos
cmp
mov
cmp
push
push
in
aas
and
xchg
dec
jbe
loop
movsl
add
arpl
bsf
add
jl
gs
sbbb
and
call
arpl
jl
jnp
or
fdivs
and
inc
stc
loopne
fs
cmp
sbb
mov
cmpsb
stos
into
roll
jmp
movsb
mov
fldl
loopne
int
cmp
adc
imul
inc
stos
jno
cmp
fidivs
adc
hlt
cltd
mov
std
mov
xor
xchg
out
scas
jmp
or
inc
jg
xor
pop
jmp
adc
into
fwait
jmp
jnp
mov
jo
test
je
inc
in
cwtl
xor
lcall
xor
in
add
mov
mov
das
sbb
inc
sub
and
jg
sahf
hlt
pop
fwait
or
add
mov
idivb
xchg
dec
addr16
mov
adc
insb
pop
popa
addl
add
dec
inc
addr16
std
fistl
cmpsl
fyl2x
sub
xchg
mov
push
shrl
sub
lock
insw
ret
sbb
vsubss
ficompl
lret
mov
loop
adc
leave
add
mov
jae
test
pusha
fptan
int
adc
test
test
das
cmc
xor
inc
jecxz
stos
mov
test
sbb
ret
cmc
cmpsb
xchg
lahf
push
push
fists
xchg
paddw
adc
pushl
add
aam
pop
sti
sbb
mov
decb
and
jl
pop
ljmp
mov
jg
mov
je
push
pop
mov
jle
inc
jb
mov
test
bound
cmp
dec
dec
loope
lcall
mov
sub
dec
sub
adc
mov
or
sbb
ljmp
in
stos
sbb
mov
cmpsb
xchg
and
nop
fucomp
and
lahf
inc
cltd
xchg
fcoml
or
dec
stos
sub
mov
in
lcall
nop
lds
in
ljmp
xorb
xchg
fdivs
movsb
ljmp
fldenv
call
add
fwait
add
push
sbb
inc
and
mov
fistps
adc
sbb
jle
mov
jge
mov
mov
adcb
jecxz
icebp
cltd
mov
adcb
dec
cmp
mov
out
stos
and
incl
or
sub
xchg
out
inc
ljmp
sub
orb
out
and
mov
pop
or
add
ds
popa
sub
out
push
jp
dec
jecxz
rolw
dec
cmp
lock
test
cmp
rclb
xor
sub
inc
and
or
das
mov
mulb
or
fmull
inc
test
inc
dec
sbb
fdiv
xchg
pop
fldenv
xchg
inc
add
jmp
mov
pusha
pop
push
mov
aaa
imulb
stc
sub
into
sub
ret
pop
adcb
add
popf
push
fcmovbe
jle
xor
int
push
pop
and
sub
mov
int3
mov
pop
mov
push
xchg
fldenv
jbe
sub
pop
je
cmp
into
enter
sbb
mov
dec
or
xchg
test
mov
test
loopne
add
push
xor
fdivr
mov
rorl
cltd
xchg
and
scas
int
pusha
add
cmpsl
popf
pushf
sub
add
aaa
decl
cmp
mov
lea
cld
ret
fs
popl
andl
add
and
outsb
mov
in
data16
sbb
bound
add
divl
imul
lret
data16
or
test
aas
dec
mov
ljmp
arpl
sub
aad
cmp
adc
adc
shrl
lret
nop
insl
push
and
mov
inc
or
test
pop
pop
dec
and
in
or
mov
fdivrs
xor
mov
outsb
jns
in
fistl
mov
lret
xchg
cmp
sti
cmp
out
push
test
dec
or
xor
push
sub
lret
sub
ds
jl
inc
daa
in
lret
jg
xchg
cwtl
pop
stos
and
mov
test
stos
or
sahf
fldl
cmc
xchg
es
aad
outsb
mov
ds
rcll
ret
aaa
mov
jl
mov
mov
cmp
lcall
sub
and
push
andl
aas
test
add
in
test
imul
pop
sbb
aad
mov
mov
inc
sbb
sbb
inc
cli
add
pushf
stos
push
xchg
movsb
and
testl
ret
aaa
das
inc
add
pop
xchg
xchg
inc
pop
sbb
jge
and
xor
rorb
fucomp
cmc
cmp
bound
mov
ja
nop
add
dec
or
jbe
sub
dec
sub
push
sub
ret
sub
in
insl
pop
sbb
inc
popa
pop
mov
nop
xor
jecxz
and
jb
or
lods
cmpsb
sbb
pushf
mov
mov
push
dec
push
lret
imul
popf
mov
add
repnz
adc
repz
popa
inc
xor
flds
sarl
mov
add
pusha
xor
ret
push
iret
push
jns
dec
jns
es
sbb
jns
pusha
insb
mov
mov
test
jne
mov
shll
dec
jge
insl
adc
mov
xor
shlb
mov
add
add
add
jl
xor
fimuls
cmp
inc
cltd
jae
js
pop
stos
cmp
lcall
sub
push
inc
pop
aaa
call
mov
lret
mov
pop
cld
fs
adc
cmp
rcrb
cld
mov
ljmp
mov
popf
out
cmpsl
pop
lea
push
xor
ss
repnz
mov
stc
repnz
stc
inc
ret
xor
stos
xor
cmp
dec
jb
sahf
dec
add
mov
loop
and
in
sbb
mov
lock
pushf
mov
sbb
negb
arpl
insl
aas
sti
call
sbb
iret
hlt
dec
dec
in
mov
aad
mov
repnz
xchg
repnz
push
mov
repnz
or
push
call
out
scas
mov
lods
and
adc
cld
imul
out
pop
bound
mov
and
nop
add
mov
sbb
mov
jnp
xchg
mov
dec
dec
bound
inc
movsl
dec
add
sbbl
jae
cmp
mov
dec
inc
inc
add
mov
mov
push
fbld
call
jno
ficoms
xchg
js
imul
mov
mov
mov
cmp
ljmp
mov
or
inc
out
push
sbb
pop
in
push
mov
pusha
fldcw
cwtl
adc
pop
sbb
test
mov
push
repz
jl
add
pop
fcoml
loope
mov
sub
sbb
mov
outsl
push
xor
lods
push
pushf
mov
push
push
jne
dec
add
or
aam
mov
fbld
cmp
jns
clc
fsubl
mov
lods
sub
add
nop
iret
aad
mov
mov
mov
cmp
outsl
imul
mov
push
push
push
jmp
lret
sbb
jno
scas
rorl
pop
dec
inc
sub
movsb
cmpsb
sbb
shll
js
popf
stos
test
mov
xchg
xchg
gs
push
inc
loopne
mov
pop
in
lea
sahf
mov
push
das
xlat
dec
or
inc
xor
mov
and
push
insl
pop
or
pushl
jbe
imull
ss
scas
aas
fs
into
inc
scas
mov
cld
mov
lods
jmp
sbb
xchg
js
cmp
cmc
das
int3
loopne
push
iret
mov
gs
aam
xchg
inc
mov
adc
xchg
pop
xchg
shlb
jnp
mov
add
adc
dec
or
jbe
mov
push
xor
cli
nop
mov
sbb
cmp
push
and
daa
xor
test
aad
push
shlb
jnp
lahf
aaa
shrl
pop
mov
mov
xchg
inc
sub
mov
scas
loopne
or
dec
lcall
mov
adc
stc
dec
xor
inc
cltd
shr
inc
lahf
sub
cmpsl
push
xor
sbb
cmp
cmc
movsb
push
dec
dec
xor
xor
insl
xchg
insl
fwait
mov
cltd
out
push
ds
mov
in
adc
pop
loopne
inc
aad
int3
pusha
loopne
popa
inc
cmp
gs
fs
fsqrt
sahf
addr16
jge
adc
imul
leave
nop
adc
test
into
es
aam
and
data16
sti
add
adc
je
cmp
dec
pop
int3
pusha
outsl
and
push
sub
sbb
in
imul
push
cld
shll
cmp
push
xor
sub
push
mov
sbb
mov
xor
das
dec
add
cli
mov
cli
in
sbbb
lds
cmpb
mov
pop
bound
xchg
aaa
movsl
push
pusha
scas
cmpsb
sbb
enter
mov
in
mov
dec
push
jno
dec
cwtl
fcmovu
jecxz
push
mov
pop
and
outsl
lods
bound
push
add
jg
loop
cltd
insb
inc
pop
jbe
mov
orb
mov
xchg
ret
sbb
and
sub
call
dec
in
xchg
pop
push
aad
xor
cltd
sar
fisttpll
sub
cmp
cmp
aaa
add
mov
divps
loop
addr16
jns
xchg
adc
mov
dec
jl
mov
and
cwtl
fsubrs
test
xor
mov
pop
lock
xchg
or
movb
incl
into
pop
and
in
add
push
jecxz
sbbl
xchg
push
leave
clc
popa
ja
sbb
or
mov
popf
and
jp
xchg
inc
or
cmp
dec
fadd
mov
pop
pop
sarl
xchg
iret
shlb
push
inc
jb
xor
js
jge
scas
sarb
out
je
add
mov
and
out
scas
push
fisubl
insb
repnz
mov
jle
adc
mov
jno
add
lcall
jp
aad
nop
scas
push
jnp
sahf
mov
movsb
pop
mul
push
push
cltd
add
test
sbb
pop
inc
ljmp
sbb
orb
adcl
inc
mov
js
cmp
sub
add
or
cltd
fnstenv
lods
lcall
movsl
jnp
xor
decb
sub
movsb
fdivl
inc
lret
push
call
call
inc
pop
and
test
mov
dec
je
mov
test
push
dec
mov
xlat
xchg
pop
mov
pushf
fwait
loop
push
notl
movsl
jne
cmpsb
popf
bswap
adc
mov
xchg
fmuls
adc
jp
mov
push
and
inc
adc
fisubl
xchg
or
bswap
jg
xchg
arpl
add
repz
outsl
int3
mov
mov
lret
pop
and
jge
mov
lcall
add
mov
jmp
push
sub
adc
aam
or
mov
jne
inc
sbb
negb
sbbl
lahf
shr
lds
xor
call
push
or
ret
lods
andb
pushf
aas
aam
ljmp
les
repz
jne
ss
dec
xchg
mov
mov
sti
shlb
ret
les
mov
pop
mov
bnd
stos
inc
xchg
dec
lods
lcall
jge
adc
sub
push
aam
jns
icebp
popf
xchg
scas
les
add
adc
inc
push
xchg
jne
cld
rep
mov
cwtl
jb
xchg
xchg
ja
jne
popa
inc
clc
iret
out
fnsave
push
pop
xchg
mov
or
adc
mov
jo
mov
sub
cs
and
cmpsl
jg
insl
int
ss
call
jp
mov
sub
sbb
pop
and
call
dec
add
scas
inc
mov
fldcw
mov
mov
js
mov
insl
adc
aad
xor
int
ret
sub
loopne
sbb
sbb
cmp
inc
mov
add
cmc
xchg
cmpsb
inc
movsl
test
lcall
push
inc
xor
mov
cmp
mov
inc
imul
mov
sub
mov
dec
mov
mov
inc
mov
mov
dec
dec
ret
insl
xchg
sbb
push
push
imul
imul
push
sbb
lock
mov
and
xchg
lods
cwtl
cmp
repz
adc
data16
ret
dec
fsts
mov
les
mov
incb
and
mov
xchg
lcall
cld
rcrl
std
xor
out
sbb
jecxz
adc
and
sub
mov
nop
dec
mov
in
mov
sub
int3
insb
lods
jbe
mov
jp
jp
or
pop
out
sub
push
sub
fsubrs
ljmp
outsb
dec
or
leave
jmp
lock
jle
or
popa
pop
pushf
movsb
out
int3
dec
lock
popa
icebp
jl
sbbl
pop
cltd
push
lock
push
mov
pop
adcl
sub
pop
or
cmpsb
mov
cli
bound
inc
mov
in
mov
dec
daa
mov
aad
scas
stos
sub
loope
pop
movsl
dec
ja
lock
mul
or
xor
jge
ss
roll
and
ds
cwtl
cmp
cmpsl
adc
cltd
add
xor
and
popl
imul
mov
mov
sahf
mov
jb
dec
xchg
movsl
ret
fisttpll
or
xorb
mov
push
bound
xchg
inc
stos
mov
insb
ftst
js
pop
jmp
push
stos
add
cmpsb
icebp
out
xchg
xchg
popa
push
mov
popf
cmp
test
ja
mov
pop
xchg
xor
lahf
loopne
inc
jo
xchg
inc
add
aaa
int3
push
sahf
insl
or
sub
clc
inc
push
jl
lahf
adc
test
imul
outsb
adc
inc
dec
sub
out
adc
cmc
imul
jae
jne
xor
jge
cmp
movsb
outsl
fstpl
pop
mov
sub
jne
jnp
cmp
push
sbb
call
mov
sti
mov
sbb
sbb
mov
pop
pop
inc
add
mov
add
mov
jnp
mov
cmp
popa
clc
ret
sbb
or
cwtl
jne
push
xor
pop
orl
or
nop
rcrl
dec
shrl
push
push
cmp
testb
xchg
dec
add
outsl
subl
push
aam
fs
add
ja
sub
inc
xor
out
pusha
aas
mov
aaa
cmc
leave
add
or
cmp
sbb
fcomp
jmp
movl
leave
xor
push
sub
inc
vmovmskps
lods
sbb
and
xchg
sbb
inc
stos
cmc
std
sub
pop
popf
pop
mov
adc
sbb
inc
or
dec
adc
sub
test
and
aas
cli
faddp
xor
shlb
int3
mov
fstp
sbb
pop
jnp
push
adc
sti
push
xor
nop
repnz
jb
into
inc
insb
adc
jle
mov
shlb
inc
xchg
mov
xor
movsl
inc
je
jl
in
into
or
sub
cmp
and
push
test
cmp
inc
cmp
in
cmpsl
mov
dec
xchg
daa
lods
cmpsl
pop
add
xchg
adc
lds
mov
xchg
push
test
stos
mov
cmpsl
push
andb
aad
in
xchg
ds
repnz
shll
jae
xor
mov
jle
rorl
xchg
stc
stos
nop
je
sub
add
and
inc
cltd
mov
rcr
stos
inc
ljmp
test
enter
ja
and
inc
and
mov
testb
iret
sbb
pop
je
sub
cmpsb
pop
or
xchg
jge
jnp
aam
scas
adc
push
mov
add
xor
sub
movsl
stos
gs
xlat
mov
ljmp
lods
insb
dec
gs
aaa
inc
gs
push
sbb
pop
jge
in
pushf
mov
push
cs
clc
mov
cmpsl
and
cmpsb
adc
jle
lods
adc
mov
movsl
stos
out
sbb
loopne
push
jne
movsl
mov
sbb
mov
imul
pop
cltd
cmp
ljmp
mov
mov
shlb
xchg
mov
sub
push
mov
stos
dec
xchg
xor
das
mov
and
mov
lods
ljmp
xor
mov
mov
into
into
xor
push
roll
icebp
cmp
fimull
int3
iret
addr16
push
cld
mov
pop
in
push
hlt
in
push
pusha
stos
jmp
lret
sbb
cmp
xchg
hlt
and
jl
jnp
shrl
dec
test
out
mov
data16
xor
andb
xor
orl
dec
enter
add
dec
xchg
les
xor
add
jae
ficomps
icebp
out
call
cltd
fbld
sub
push
mulb
jecxz
je
or
inc
mov
popf
xchg
fsubrs
or
jge
out
xor
push
and
pop
insl
out
pop
enter
and
mov
insl
enter
mov
fsubrl
inc
xchg
xchg
jb
push
ss
xor
mov
in
lods
add
pop
ds
dec
pop
mov
out
inc
js
xchg
and
dec
dec
inc
mov
mull
jp
out
hlt
nop
cld
add
neg
aaa
fildll
jmp
cmp
jo
adc
mov
cmc
mov
add
hlt
sti
les
shr
sbb
loopne
dec
cmpsl
rolb
or
test
or
or
xchg
stos
mov
jp
imul
loop
add
idivl
mov
mov
orb
inc
cli
jmp
cmpsb
iret
shll
add
mov
in
ret
hlt
push
add
lock
ror
dec
clc
xchg
push
cmp
mov
stc
push
ret
adc
jle
mov
test
xchg
jnp
cld
mov
jl
push
ljmp
mov
dec
cmp
dec
aaa
mov
adc
call
decl
jno
shlb
jne
cld
insl
insb
arpl
push
out
daa
sbb
push
sbb
cmpsl
jecxz
mov
add
test
sub
hlt
test
ret
ja
xor
mov
hlt
bound
in
js
adc
andl
adc
lock
fisubrs
add
and
dec
dec
cmp
mov
cmp
movsl
ret
mov
bound
andl
mov
dec
stos
sub
xchg
xor
loopne
out
shll
dec
sbb
outsl
jbe
add
push
leave
xor
hlt
imul
pop
loopne
add
sarb
push
xchg
repnz
sub
arpl
mov
lock
in
shll
das
enter
imul
shlb
rolb
mov
inc
mov
ss
aad
push
sbb
std
push
sbb
stos
xor
push
ror
rorb
or
arpl
inc
sub
add
insb
repz
leave
sahf
add
loope
icebp
fsubs
sahf
push
test
pop
inc
push
jns
cmpb
popa
pop
jmp
jne
clc
adc
pop
inc
jns
jg
ror
pop
mov
xchg
pop
jb
add
sti
cwtl
and
pusha
pop
in
mov
into
pop
mov
ja
arpl
loop
cwtl
scas
loop
fwait
xchg
dec
ficomps
movsb
add
cmp
mov
xchg
xor
xor
insb
xor
js
inc
push
cmp
mov
popf
or
sub
pop
mov
dec
sbb
mov
pop
add
decb
push
cld
nop
push
push
mov
vucomiss
cli
iret
dec
aam
subb
inc
adc
lds
adc
adc
pop
push
pop
xor
in
fdivs
push
cmp
inc
orl
and
nop
add
or
xor
inc
cmp
jnp
sbbl
dec
push
call
lcall
ljmp
addr16
xchg
out
cmp
movsb
imul
shrb
rcrl
lods
add
gs
xchg
add
pop
inc
iret
in
in
add
leave
inc
nop
int
int3
leave
jl
push
shll
lret
call
xchg
pop
dec
les
and
lods
rolb
push
roll
or
clc
ss
mov
sub
pusha
pop
mov
movsl
jns
mov
and
mov
and
ret
pop
inc
jg
rol
xor
mov
mov
inc
lods
aaa
repnz
fsub
add
stos
pop
sub
mov
rorb
ss
sbb
and
xchg
mov
and
mov
test
loop
pop
jae
shll
dec
or
shl
loopne
or
stos
es
push
xchg
lea
int
xorl
sbb
sub
jmp
mov
aad
jnp
adc
andl
jmp
dec
ds
enter
add
push
cmp
cs
mov
pop
imul
leave
shrb
push
jle
push
mov
jns
sub
test
test
popa
pop
inc
ds
cmc
cld
pop
add
push
ljmp
ljmp
pop
pop
or
jle
adc
push
and
dec
mov
push
sub
loopne
inc
icebp
lret
mov
and
imul
imul
and
ror
loop
mov
lahf
je
push
pop
repz
cmpsl
rcll
les
pop
inc
mov
dec
inc
pop
ja
test
pop
push
mov
push
push
cmc
inc
xor
out
adc
cmp
nop
jo
in
jle
into
mov
aad
js
mov
fsubrl
jmp
lods
sbb
cmpsb
hlt
inc
pop
mov
and
jmp
push
inc
jns
cmp
lretw
push
test
loop
into
sti
pop
mov
ljmp
sbb
or
into
andb
pushf
hlt
adc
lahf
sub
popa
sahf
mov
mov
push
dec
add
andb
int
test
incb
call
jecxz
jp
lea
push
into
call
ja
fisttpl
jmp
imul
xchg
dec
nop
out
adc
negl
mov
xchg
aaa
icebp
and
adc
and
pop
insb
ret
fucomi
popf
sti
test
fs
ds
pop
pop
push
cwtl
xchg
pop
fidivrs
out
or
xchg
jne
filds
inc
cmp
cmp
mov
inc
and
mov
lods
loopne
push
and
jmp
or
loope
movsl
clc
pushf
mov
stos
and
pop
push
push
scas
mov
in
icebp
add
pusha
repz
push
lods
cmpsl
stos
stos
pop
jecxz
lock
dec
push
mov
movsl
in
adc
repnz
popa
arpl
inc
push
dec
xor
sub
inc
and
cmpsl
loopne
fidivrs
imul
outsl
dec
cmp
stc
pop
mov
es
stos
mov
inc
inc
mov
and
out
ljmp
fwait
adc
ffreep
in
cwtl
push
pop
rcrb
shlb
add
lcall
cmpsb
xchg
or
inc
or
inc
inc
clc
cli
jecxz
aas
iret
call
in
inc
or
sub
gs
je
test
mov
jbe
ror
xor
repnz
dec
stos
ret
push
xor
rorl
mov
call
cmp
in
dec
sub
sbb
arpl
les
pop
adc
or
jb
stos
pop
xchg
incb
lea
mov
push
mov
fdivrl
xlat
xchg
jnp
dec
cmpsb
or
popa
popf
lds
and
adc
lret
out
adc
test
loop
mov
push
cmp
xchg
test
pop
sbb
cmp
rclb
push
fidivrs
out
cmp
sbb
repz
aam
repz
mov
or
push
mov
ljmp
repnz
repz
in
add
je
test
or
int3
add
or
loope
fidivrl
lds
dec
mov
mov
add
push
cmp
mov
and
sbb
cmp
jne
mov
lret
fs
lahf
stos
rcll
shrb
jp
ret
test
inc
icebp
hlt
push
inc
shrl
xchg
fwait
outsb
rcl
cmp
xor
dec
mov
test
cmpsl
xchg
add
scas
inc
aaa
mov
jmp
adc
into
mov
or
andb
inc
sti
xchg
lret
sti
cld
xchg
push
mov
lret
jae
mov
adc
push
pop
jecxz
and
push
jo
push
in
jae
aad
scas
aam
loop
ret
add
jno
dec
mov
jae
int
cmp
shrb
lret
xor
cwtl
mov
add
aas
sub
inc
pop
xchg
or
inc
pop
xor
xchg
out
imul
sti
adc
sub
es
shl
arpl
dec
jb
jmp
stos
xor
jnp
in
test
int3
test
dec
ja
inc
shlb
xor
push
and
aaa
divl
and
lcall
dec
lods
daa
sub
cmp
or
lret
call
cmpsb
mov
and
movsb
ja
mov
inc
cwtl
sub
stos
imul
mov
xlat
cmpsl
das
test
je
mov
lock
xchg
lret
inc
mov
out
hlt
jo
add
push
fildl
adc
mov
rcl
out
fistpl
add
ja
mov
ret
gs
clc
push
xchg
push
sub
push
push
xor
rorl
pop
xor
sub
or
adc
and
iret
and
lods
cmp
frstor
icebp
aad
test
jecxz
inc
je
cmpsl
repnz
sarl
sbbb
adc
or
ja
movsb
xor
les
sub
xchg
mov
mulb
pop
pop
sbb
in
push
ror
inc
lea
jns
jge
dec
dec
cmp
sub
jno
jecxz
mov
jl
cmp
jns
push
decb
rcll
mov
in
xor
test
adc
movsb
jge
push
jmp
bound
or
in
cmpsl
lahf
sbb
inc
jb
xchg
jecxz
pop
push
stos
xchg
cmpl
cmp
lods
mov
mov
or
sti
pop
cmc
adc
mov
ds
or
inc
aas
mov
loop
out
adc
mov
jae
rcrb
test
js
mov
jmp
cmp
mov
cltd
push
pop
clc
mov
popa
pusha
xchg
flds
mov
sub
push
std
mov
jg
jge
xchg
dec
push
adc
mov
shlb
mov
dec
sbbl
or
repnz
fmul
mov
jge
inc
lcall
and
push
jnp
sti
addr16
push
push
or
dec
xchg
sub
and
cmp
add
push
inc
clc
push
loopne
std
fdivl
mov
sbb
pop
sub
push
scas
repz
outsl
fadds
scas
mov
adcl
fnsave
gs
test
xor
xor
ljmp
pop
bound
pop
sbb
call
fnstsw
sbb
ret
in
cwtl
idiv
scas
scas
push
adc
shl
jmp
mov
mov
and
mov
or
std
js
mov
mov
in
repz
and
and
jnp
jno
insb
andb
push
fistps
and
add
test
push
gs
mov
sub
out
lcall
popf
cmp
add
inc
loope
inc
fadds
pop
adc
js
and
dec
lret
cmp
sbbl
inc
sbb
jne
pop
iret
xlat
mov
test
or
pop
andb
mov
mov
cmpsl
mov
dec
mov
and
mov
push
add
addr16
push
out
adc
adc
in
add
xor
inc
in
pop
mov
dec
cmpsb
jno
sub
inc
cmp
dec
push
add
inc
clc
adc
cli
into
xchg
sbbl
push
push
sub
icebp
sbb
sbb
jp
push
mov
daa
fnsave
adc
cwtl
dec
mov
or
pushf
cltd
ljmp
pushf
imul
mov
sub
push
jecxz
pop
faddl
insb
pop
add
cmp
xchg
ret
lret
jg
test
xchg
xchg
jno
les
mov
jne
mov
xor
popa
push
test
jp
outsb
or
hlt
mov
sahf
fbld
xchg
xchg
pusha
loopne
bound
or
pop
inc
lea
sbb
xorl
jo
mov
sub
push
lods
loope
push
call
or
cmp
xchg
jmp
push
lret
xchg
mov
mov
js
dec
negb
shlb
cmp
rcrl
cmp
ss
xchg
jge
and
push
adc
xor
dec
mov
insb
dec
lods
das
jp
hlt
loope
or
loopne
sbb
mov
xchg
add
lods
push
pop
dec
pop
push
xchg
push
xor
mov
mov
or
jne
shr
and
lock
push
jae
sbb
fsubrl
jge
jo
lods
inc
popf
mov
inc
imul
aad
daa
fdivrs
ljmp
shrb
adc
test
jp
jg
int
or
xor
cmp
mov
sub
cmpsl
sbb
testl
cltd
ds
adc
dec
shl
fwait
insl
cltd
test
jns
jbe
push
lcall
inc
stc
dec
xor
push
jbe
add
scas
mov
mov
adc
xor
aam
dec
mov
sbb
sub
jno
roll
xchg
decl
outsb
inc
aaa
in
je
pop
daa
push
jbe
out
sbb
sbb
je
movsb
mov
or
dec
popa
test
movsl
jecxz
and
lods
daa
add
in
mov
mov
lahf
icebp
sub
or
fs
sbb
dec
cli
adc
pop
add
mov
inc
jle
mov
fldl
adc
mov
or
mov
jecxz
das
lahf
jmp
or
inc
adc
aaa
xor
cli
push
lret
mov
sbb
push
out
ljmp
mov
bswap
in
shlb
inc
in
mov
cs
mul
adc
mov
mov
xorb
mov
shl
mov
data16
push
movsl
adc
fnsave
xor
popa
dec
lea
sub
out
sub
popf
sub
pushf
lret
cmp
push
dec
or
mov
mov
out
jle
test
cwtl
pop
push
popa
cli
cmpl
iret
mov
pop
shlb
call
rorb
aam
rcl
movsl
cmp
mov
push
and
jle
fcoml
or
add
dec
xor
inc
xor
jecxz
cmp
jge
jle
insb
dec
fisttps
cmp
movsb
cmc
mov
and
mov
jbe
repz
lods
sbb
lods
out
imul
lahf
sbb
cwtl
jnp
mov
and
and
popa
lds
adc
insl
leave
dec
push
pop
sub
popa
stos
and
mov
sbb
sub
dec
scas
mov
and
xchg
aam
push
mov
xor
add
test
mov
popa
cld
jns
shrl
mov
ljmp
adc
ds
jbe
push
adc
xchg
adc
xlat
aam
out
inc
int
fnstsw
cmp
mov
or
in
push
jns
into
sarb
aad
icebp
xor
out
inc
push
lods
sbb
sub
ret
stos
jb
add
fdivr
dec
sub
fs
xchg
sbb
ljmp
ljmp
in
sbb
ds
test
mov
mov
ret
into
testb
inc
cmp
cmp
daa
sahf
pop
adc
dec
scas
pop
lods
jmp
mov
sub
loope
xor
movsl
sbb
mov
int
sti
adc
movsl
outsb
mov
inc
dec
cld
cld
jp
testl
dec
xor
mov
rcrb
lods
inc
adc
pop
pop
or
nop
test
xchg
sub
push
xor
int3
pushf
xor
out
repnz
fldcw
mov
out
pushf
repnz
outsb
out
xchg
and
iret
xor
fmulp
pop
cltd
push
push
frstor
add
jmp
mov
outsb
lock
fsubrl
pop
mov
ja
add
sbb
jg
mov
adc
jo
mov
iret
and
push
sbb
sub
sub
mov
pop
sbb
add
cld
add
int3
cli
xor
es
sub
dec
and
push
in
pop
xchg
idivl
mov
pop
pop
call
ss
dec
cwtl
sub
gs
mov
jmp
cs
repnz
cmp
sbb
xchg
aas
mov
adc
inc
test
push
mov
adc
mov
xor
cmpsb
mov
enter
arpl
mov
xchg
mov
adc
shll
nop
sbb
jmp
cwtl
out
sbb
xchg
cltd
push
pop
pop
push
das
cmp
xlat
pop
dec
es
push
xlat
int
xor
loope
cmpsl
test
sub
fisttpl
test
and
stos
repnz
out
in
sahf
adc
sti
mov
pop
mov
arpl
pop
faddl
xor
testb
add
xchg
jge
jns
jl
mov
cmpsl
jmp
imul
cmp
test
and
pop
cmpsl
and
fimuls
test
addr16
movsb
jnp
mov
popf
mov
push
in
jl
inc
jg
bswap
push
and
pop
imull
mov
test
dec
or
cmp
fs
faddl
and
jmp
es
sub
mov
pop
and
fwait
inc
inc
add
mov
mov
cltd
adc
pop
pop
jg
and
or
in
push
popf
mov
mov
inc
in
fdiv
push
fisttpll
flds
std
fdivp
inc
mov
mov
mov
dec
cltd
out
rcr
ss
frstor
pop
pop
aaa
xchg
mov
cmp
pop
push
sbb
xchg
ret
cmp
dec
dec
cmpsl
out
fdivrs
sbbl
inc
adc
loope
mov
scas
je
frstor
in
cs
cmpps
pop
int
js
cmp
jbe
sub
jo
mov
inc
and
cmpsb
cmc
push
out
addr16
jmp
ret
push
scas
pop
cmp
sub
arpl
push
mov
and
lds
mov
adc
les
mov
pop
inc
adc
popa
lret
sbb
icebp
adc
pop
test
cwtl
or
pusha
xor
cmp
xchg
bound
mov
loop
ds
sub
lret
pop
imul
inc
icebp
inc
jmp
push
jno
loopne
pop
push
xlat
arpl
cwtl
mov
mov
int
xor
dec
loopne
adc
jecxz
dec
movsb
dec
stc
cmpsl
and
popa
and
mov
dec
jecxz
mov
and
cs
mov
sub
cwtl
sahf
movb
pusha
sbb
dec
aaa
xor
ljmp
push
rorb
scas
cmp
das
mov
sbb
lea
sti
adc
adc
pop
xor
shl
or
popa
add
pop
fs
and
cs
xchg
outsl
fld
in
insl
adc
and
jge
insl
loop
stos
dec
dec
mov
pop
daa
inc
jge
rep
mov
xchg
out
std
sub
jno
xchg
mov
and
cld
cmp
push
cli
movsl
xchg
add
pop
mov
xor
cmp
inc
adc
xor
and
jne
dec
mulb
stos
das
scas
lcall
lahf
pop
mov
inc
add
cs
adc
jmp
rclb
mov
adc
add
in
leave
mov
sbb
xlat
mov
xor
int3
or
mov
mov
push
leave
imul
stos
dec
rcl
pop
sub
das
aad
sbb
xchg
ret
pop
shlb
jno
movsl
mov
in
lahf
adc
addr16
in
inc
inc
mov
mov
fsubs
jle
pop
mov
pushf
add
imul
jnp
leave
dec
outsl
cmpsb
bound
fnstsw
mov
xor
and
jge
push
xchg
loop
test
sbb
ss
shl
jbe
mov
inc
outsl
into
popf
icebp
jle
arpl
in
shlb
cld
xchg
xchg
fiaddl
xchg
dec
js
adc
xor
int3
xchg
divb
stos
ret
fidivl
clc
or
cmovo
cmpsl
pushf
jbe
push
pop
pop
jl
sbb
inc
xor
andb
idivl
xor
stos
aaa
lods
mov
sarl
push
xchg
test
cmp
jae
or
inc
rorb
repz
sub
lret
popa
adc
xchg
inc
cmp
call
or
xor
dec
adc
mov
pop
mov
sbbb
clc
sub
mov
movb
push
test
sbb
stos
imul
xchg
mov
inc
addr16
add
xchg
lea
xchg
xor
or
or
mov
sbb
jnp
cld
out
cmc
xor
inc
test
mov
mov
movsb
pop
push
xor
aad
stos
cmp
push
ss
cmp
pop
adc
sbb
mov
lea
xchg
push
lret
cltd
push
data16
in
xor
arpl
aas
faddl
xchg
std
popa
adc
lcall
xchg
in
popa
jno
inc
stos
jmp
sbb
clc
dec
inc
std
mov
lods
pushf
ret
xlat
lock
inc
mov
dec
push
dec
loopne
mov
inc
or
inc
mov
outsl
clc
loop
inc
push
jo
push
jl
arpl
cltd
sub
dec
mov
lock
sub
aam
xchg
push
xor
cmp
std
sarb
inc
int3
pop
jge
jno
les
push
mov
inc
xlat
xchg
jecxz
xor
xor
push
loopne
lahf
push
fsubl
scas
push
cmp
mov
pop
out
cmp
gs
jle
xor
xor
out
fildll
scas
fs
sbb
jo
mov
mov
xchg
repnz
addr16
pop
jo
pop
push
adc
mov
sbb
and
adc
inc
stos
movsl
out
dec
rorl
lret
lea
inc
cli
sub
imul
pop
add
add
sbb
enter
pop
insl
les
fcompl
xor
sbb
jns
out
xchg
ret
notb
stos
and
mov
pop
in
cmp
js
lret
mov
jp
mov
je
mov
push
or
sub
or
pop
into
sub
pushf
cmp
xor
sub
cmp
das
aas
lea
push
sbb
stos
push
ss
popa
loop
hlt
push
and
mov
ret
cmpl
and
mov
add
push
inc
dec
in
aaa
aaa
test
jl
cwtl
push
in
movsb
inc
std
es
xor
adc
mov
push
data16
test
or
mov
addr16
pop
cmpsl
sub
push
xchg
lds
jnp
sub
or
push
and
xchg
aam
ja
aad
or
mov
pushf
push
ret
mov
and
adc
sub
int3
lahf
loop
inc
sub
jbe
lret
int
and
pushf
in
outsl
cmp
xor
xchg
pusha
or
pop
out
mov
dec
add
mov
mov
cwtl
movsl
fdivp
pop
adc
paddd
stos
sti
out
cmp
stos
mov
iret
fs
incl
adc
rcl
call
or
fisubrs
xchg
add
test
in
test
stos
and
mov
ret
mov
xchg
xchg
sahf
in
stos
pushf
sbb
push
jno
mov
shll
adc
addr16
dec
mov
data16
sbbl
jp
push
jge
insb
jns
stos
loopne,pt
mov
add
xchg
ljmp
mov
aaa
and
and
roll
mov
sub
sbb
xchg
movsl
lods
jo
xchg
and
add
insl
sbb
or
mov
pop
sbb
arpl
and
sarb
mov
jle
jge
mov
cwtl
pop
int
inc
mov
enter
sbb
add
test
lret
mul
mov
je
push
std
pop
mov
mov
test
aas
dec
xor
fisttps
rcrb
pop
repnz
aaa
mov
and
popa
sbb
dec
enter
adc
repz
scas
cld
test
test
mov
inc
in
ret
ljmp
hlt
inc
cmp
loope
pop
add
loopne
pushf
outsl
and
pop
push
in
dec
or
push
out
bound
push
sti
push
add
sahf
insl
rclb
ret
cmpsb
mov
adc
jmp
sbb
sahf
inc
cmpl
aad
rcrl
add
popf
push
mov
in
es
fcmove
mov
aaa
fstps
inc
xor
mov
jg
jp
add
push
and
out
pop
pop
mov
sbbb
insb
pop
ds
mov
lcall
mov
sub
mov
aas
mov
fnstsw
xor
lea
fidivrs
cmp
call
mov
mov
imull
mov
mov
mov
and
push
nop
test
jb
aaa
cmp
test
enter
mov
mov
idivb
dec
in
dec
insl
rorl
jmp
push
in
imul
fistl
imul
add
pop
add
adc
bound
test
out
sub
push
dec
push
in
cltd
int3
test
xlat
das
aad
jbe
cwtl
aaa
dec
inc
scas
arpl
sahf
jmp
fisttpll
lret
push
mov
outsl
add
push
lcall
gs
adc
cmp
std
call
push
cmp
aaa
test
jmp
mov
xchg
addr16
stc
mov
aam
insl
or
push
loope
dec
cmp
es
cwtl
in
xchg
xchg
push
lds
stos
sub
fdivs
sarl
out
cmp
psrld
add
or
cmpsb
xor
test
push
gs
mov
dec
xorb
mov
jg
insl
es
mov
sbb
pop
lret
je
out
or
fdivl
sahf
xor
lret
dec
pop
xchg
rcrl
or
mov
xchg
jno
stos
bound
dec
adc
out
mov
jne
adc
push
fdiv
cmpsl
mov
sbb
mov
dec
mov
mov
mov
imul
xor
stc
stos
popa
aaa
cli
mov
jno
enter
push
sub
mov
shlb
popf
or
stos
shlb
movsl
lea
mov
cmpsl
nop
dec
aaa
xor
jge
and
push
jecxz
push
sub
cmp
xchg
enter
mov
ficompl
and
xchg
lret
in
adc
shlb
mov
sbb
mov
imul
pop
push
daa
cmpsb
xor
hlt
movsl
lods
sbb
jp
je
movsb
jns
jmp
xchg
cmp
test
inc
mov
addb
dec
addr16
or
adc
out
sbb
out
mov
jge
add
jge
pop
in
mov
shlb
idivb
sti
push
jne
xchg
mov
jbe
mov
sub
outsl
xor
pusha
dec
js
mov
scas
dec
std
dec
aam
xchg
pop
shrl
stos
repnz
ret
jle
icebp
xchg
in
mov
fisubrs
std
jl
mov
movsb
xor
stos
push
mov
cmpsl
loop
sub
xlat
gs
mov
in
in
inc
adc
jle
mov
push
xor
lds
ljmp
and
xchg
loop
push
mov
and
mov
test
add
add
pushf
adc
fadd
out
das
or
ljmp
jnp
mov
dec
cmp
and
decl
movsb
jo
cli
mov
adc
stos
sub
jg
sbb
adc
sbb
mov
mov
mov
sbb
mov
jns
cmp
mov
aad
mov
adc
mov
dec
fiadds
adc
pop
outsb
dec
xor
shrl
dec
cmpsl
shlb
adc
subb
icebp
push
push
and
cli
push
int3
je
incl
push
arpl
mov
push
aaa
lea
xor
adc
or
int3
mov
jmp
inc
push
pop
pop
addr16
cli
xchg
jno
imul
cltd
loopne
xchg
rclb
cmp
mov
push
popa
adc
rorl
popa
sbb
sbb
loop
clc
sbb
es
es
jnp
pop
faddl
mov
gs
add
jmp
mov
lret
mov
movsb
ds
add
insl
pop
sub
ficoml
lods
imul
xor
in
add
xor
cld
nop
fwait
sbb
add
sub
aam
imul
mov
cmpsl
mov
movsl
es
std
lea
inc
lahf
jb
mov
cmp
ljmp
out
leave
movsl
and
aaa
inc
sub
xchg
push
aad
jmp
jmp
mov
pop
mov
push
and
pop
pushf
lds
int3
mov
repnz
mov
or
jle
pop
loopne
ret
push
adc
movsb
cmpsb
dec
inc
sub
xlat
adc
scas
push
jo
sahf
dec
cs
clc
sbb
pop
push
jns
sub
push
or
nop
sbb
mov
sbb
mov
cmp
dec
jg
inc
std
add
add
xchg
mov
jnp
cmp
test
fildll
adc
popf
cli
sbb
int
mov
mov
adcb
jge
jge
test
push
jbe
shrl
mov
test
inc
add
mov
aam
inc
mov
enter
rcrb
xchg
sbb
mov
jb
jp
jbe
ficoms
int
lods
xor
adc
cmp
int
jecxz
jmp
repz
insl
add
paddd
xor
jge
lea
mulb
lcall
aad
ljmp
in
sbb
add
jle
push
xchg
jnp
test
mov
aam
adc
xor
test
lret
sti
popa
scas
or
jbe
mov
in
sub
repz
jle
mull
aad
sbb
push
aam
push
cmp
loope
push
dec
frstor
mov
sbb
shlb
lods
xor
mov
mov
test
sbb
cmpb
loop
xor
xchg
rorl
test
in
xlat
and
jmp
cmp
je
frndint
cmp
mov
aad
inc
cmp
pop
xchg
add
adc
adc
add
push
pop
adc
mov
dec
aaa
mov
or
jo
cmp
loop
add
add
push
stc
and
cmp
fists
xor
leave
movsl
pop
scas
arpl
js
sahf
sti
inc
adc
imulb
aas
mov
push
mov
push
insl
cwtl
ret
pop
inc
push
push
gs
push
jnp
cmp
push
inc
je
push
ds
gs
mov
mov
xchg
loopne
mov
ret
jmp
xchg
mov
adc
pop
stos
xor
sbb
adc
or
inc
std
mov
xor
adcl
mov
or
stos
int
pop
dec
or
dec
sbbl
pop
ret
rorl
sti
ljmp
ss
push
xchg
hlt
rorl
cmc
test
aas
xchg
ja
into
cld
les
jecxz
movl
mov
dec
mov
iret
inc
mov
orb
leave
dec
sti
shll
jge
add
mov
aad
mov
in
int3
pop
sbb
les
and
mov
insb
adc
ds
cmc
les
in
dec
cld
pushf
mov
fiadds
push
mov
mov
jne
int
or
sbb
dec
and
bound
push
call
stos
test
loop
in
andb
mov
addr16
mov
jae
mov
sahf
xchg
sub
xchg
loope
int3
mov
mov
aam
mov
pop
fsubrl
or
mov
cmp
sub
lds
js
push
jg
out
push
sbb
xchg
rol
jae
fcoms
mov
loope
mov
mov
imul
in
xchg
push
lds
fimuls
mov
addr16
and
jb
pusha
xchg
mov
cmp
mov
lcall
in
jmp
cmpsl
mov
push
cmp
pop
iret
or
outsl
add
outsb
loope
loop
adc
sub
daa
push
shll
stc
dec
daa
sub
sti
stc
inc
call
inc
cltd
inc
mov
and
push
les
and
stos
push
mov
fnsave
push
dec
out
stos
jg
xchg
fisttpll
adc
sahf
fs
inc
pushf
test
jo
cmp
cli
icebp
sbb
mov
ljmp
push
nop
popf
mov
addr16
movsl
mov
or
jl
shll
cmp
cmp
popf
mov
lret
pushf
pop
inc
xor
fadd
mov
add
pop
dec
sbb
shll
add
and
or
out
inc
adc
adc
sbb
pop
mov
sub
mov
mov
subl
jg
pop
jmp
jno
adc
in
add
fbstp
add
or
jmp
lock
je
push
xchg
arpl
jl
loope
dec
data16
sbb
rorl
lret
imul
dec
pop
jo
pop
inc
cmpsb
cmpsb
xchg
pop
sbb
aas
jl
aad
lcall
add
je
mov
push
fistpll
cld
cmp
pushl
int
cmpsl
ret
scas
mov
ja
lods
sbb
ja
ret
and
push
stos
or
idivl
or
sub
outsl
fidivrl
pop
enter
jb
jne
or
mov
inc
xor
les
push
je
imul
roll
push
fs
pop
ljmp
ljmp
sbb
pop
icebp
pop
rclb
lret
cmp
xor
ljmp
aad
adc
repnz
adc
insb
inc
lret
and
or
lea
sbb
mov
xchg
cmc
lods
rcll
and
into
xchg
repz
ss
lret
mov
out
push
add
inc
sub
mov
sbb
adc
pop
in
or
push
xor
jg
bound
xchg
or
daa
sarb
out
push
xorb
cmpsl
hlt
cmp
shrl
cmpsl
inc
lcall
jbe
or
inc
sub
pusha
xchg
adc
pop
loope
mov
sbbl
int3
int3
jne
insb
lea
movsl
mov
pop
jo
sub
cwtl
in
mov
repnz
cld
xchg
in
les
inc
lea
inc
into
lods
lcall
nop
fldcw
pop
lcall
cmp
nop
dec
sub
loopne
pusha
adc
popf
lods
cmpsl
sbb
imul
test
cmp
je
cmp
ret
mov
sbb
adc
fldenv
in
stos
call
fs
dec
xchg
xor
into
je
test
clc
xchg
mov
shlb
es
fdivr
push
and
mov
iret
cwtl
pop
and
and
cmp
imull
xchg
test
test
xor
xchg
ror
jmp
push
and
pop
insl
mov
push
sbb
push
xchg
xchg
fmuls
dec
int3
fisttpll
mov
pop
enter
repnz
into
xchg
add
cmp
stos
out
jecxz
adc
push
or
pop
ja
fbld
les
pop
into
mov
ds
lds
or
dec
sbb
jb
cmp
inc
arpl
mov
sarl
mov
loopne
push
daa
and
lods
adc
ljmp
cs
add
or
mov
rcr
std
test
push
negb
data16
fidivrl
imul
out
adcl
js
pop
rolb
mov
pop
out
mov
js
xchg
inc
xor
data16
stc
push
data16
fsts
inc
cmc
jg
mov
repnz
imul
mov
pop
mov
or
bnd
sbb
les
arpl
add
fldcw
repz
ficoml
mov
and
and
add
popa
sbb
mov
loopne
push
inc
push
or
inc
dec
lock
test
xor
xor
cmp
xchg
inc
xor
and
jbe
cmp
das
shl
pop
dec
dec
out
in
mov
icebp
pop
jg
mov
scas
and
pop
jns
out
add
jo
sub
les
push
in
loope
sub
or
or
lods
cmp
int3
rclb
jb
mov
push
or
ljmp
in
adc
fisubrs
sub
xchg
mov
mov
das
inc
jg
faddp
adc
push
test
xchg
dec
jb
jp
dec
test
bound
jg
scas
pop
jl
xor
or
add
js
or
inc
mov
imul
frstor
xor
pop
ja
add
mov
fcoms
and
mov
push
fistpl
adc
lock
or
jo
ljmp
mov
test
int3
das
int3
bound
stos
sbb
adc
int
ret
es
andb
sti
imul
and
cmp
and
sub
adcb
pop
lds
mov
xlat
sbb
push
imul
fisubs
cmp
xor
stos
icebp
mov
jb
sbb
pop
leave
and
xchg
mov
or
sub
test
test
fldenv
inc
cmp
ss
jge
int3
push
jns
data16
mov
lret
and
nop
cmp
jmp
inc
inc
lcall
pop
movsl
les
or
mov
outsl
das
pop
insl
jnp
pop
sub
repnz
lahf
push
loopne
xor
lods
sub
adc
outsb
fucom
outsb
testl
je
pop
adc
pop
jg
or
push
xchg
fldcw
push
sarb
mov
aad
out
jle
mov
adc
nop
dec
addr16
mov
or
or
arpl
lock
sub
cmp
nop
daa
aas
rorb
inc
lahf
sub
xchg
or
sahf
in
dec
jmp
in
or
imul
sahf
mov
int3
ficoml
shrl
scas
movsb
push
mov
and
mov
cmp
das
add
jbe
lds
lcall
mov
cmp
insb
push
aaa
les
subl
icebp
cmp
sub
std
outsl
ds
xchg
ljmp
add
je
adc
jbe
scas
mov
sarl
outsl
cmpl
das
mov
push
lods
int
cs
add
jmp
insb
add
fidivs
cmp
subb
aas
in
inc
lods
and
test
adc
push
nop
stc
inc
aas
dec
mov
sahf
aad
ljmp
inc
sbb
mov
idivl
add
sbb
std
inc
jnp
mov
insb
insb
inc
lods
out
mov
inc
mov
pop
mov
sbbl
or
push
pop
insb
xchg
mov
pop
xor
and
jl
gs
aam
push
pop
loope
mov
xchg
push
test
pop
mov
xor
add
lea
pop
sbb
inc
jge
js
in
dec
pop
xor
sbb
or
lcall
fsubr
add
mov
mov
mov
test
andl
adc
iret
loop
jmp
repz
mov
pop
and
push
popf
outsb
add
pusha
xorl
popf
imul
jp
fadds
fwait
push
jge
sub
push
stc
shll
adc
push
je
jae
popf
lret
inc
xchg
jb
sbb
mov
sbb
in
push
push
jbe
xchg
ss
cwtl
test
daa
sbb
mov
dec
popf
pop
lock
test
push
sub
mov
ljmp
imul
sbbl
jb
mov
mov
xchg
push
int
fidivl
mov
mov
jmp
scas
or
fsts
add
pop
push
rclb
or
sbb
cmc
dec
add
sahf
in
shll
or
cs
mov
lds
add
pop
push
push
insb
sbb
mov
sti
xchg
ss
jg
jmp
cld
mov
dec
xor
cmp
push
mov
push
sub
xchg
xchg
sbb
xchg
subl
sub
dec
adc
cmpsb
and
sbb
jecxz
add
int3
sbb
mov
and
fisttpl
fistps
mov
push
cs
setp
daa
inc
jl
sub
push
rcl
jae
iret
cs
ja
rorb
jnp
dec
push
push
shll
fstpl
push
sbb
push
dec
sub
push
fs
cmp
sub
xor
imul
ret
roll
and
stc
ret
cwtl
scas
loopne
add
ret
aad
inc
or
decl
and
jp
jns
fldl
cli
push
outsb
das
pop
or
ret
jo
xor
jle
dec
data16
inc
sbb
outsb
or
adc
and
ja
push
call
cmpb
jg
push
sbb
je
mov
sbb
ret
popa
mov
adc
insb
cli
fwait
ds
cmp
adc
push
add
shlb
das
mov
test
orb
jmp
jle
jbe
inc
sub
jns
gs
test
cltd
add
sub
xor
jmp
mov
jge
loopne,pt
jns
stos
add
mov
popf
sub
clc
mov
cmc
dec
pop
inc
imul
mov
mov
aam
cmp
test
cmpb
gs
popf
dec
inc
adc
scas
add
loop
mov
imul
lds
xor
in
pop
or
popa
testl
xchg
push
test
sbb
sbb
fstpl
jne
cs
add
add
add
icebp
cmp
out
sub
lea
cld
negb
outsl
jno
jno
xchg
enter
in
mov
loope
mov
insl
pop
les
jo
cmp
mov
and
push
jnp
dec
mov
mov
sbb
sahf
test
data16
pop
mov
pop
xchg
mov
in
or
in
push
mov
sbb
lcall
sub
jmp
sarl
mov
aas
dec
test
add
cltd
int3
or
pop
mov
add
clc
pop
add
mov
and
xor
mov
sbb
outsl
jnp
push
sbb
lret
aaa
mov
das
mov
mov
mov
push
fimull
stos
inc
cmp
sbb
out
push
push
incl
fisttpl
fisubrs
jno
cvtdq2ps
outsb
mov
mov
addl
outsl
dec
call
lcall
mov
adc
cmc
sbb
sub
shlb
mov
dec
loop
push
lea
jns
jecxz
push
cli
negl
inc
inc
ljmp
pop
nop
lcall
in
imul
js
jnp
lret
push
pop
lds
negb
ret
imul
cmp
aad
mov
std
xchg
push
or
push
pop
mov
sub
mov
lds
push
sub
int3
orb
cmpsb
sub
clc
xchg
fildl
jle
pushf
sbb
sub
rcll
ja
push
sub
jl
mov
filds
ds
pop
lret
bnd
adc
inc
push
sbb
jno
sbb
fidivrl
std
dec
xchg
mov
mov
lds
notb
cmpsb
stc
cltd
xchg
mov
ljmp
inc
and
xor
popf
scas
jg
mov
punpcklwd
cmp
fdivs
jg
aad
cli
sbb
and
outsl
popf
idiv
lret
into
pop
mov
insb
dec
fidivrl
jp
addr16
mov
mulb
push
arpl
mov
adcb
lea
dec
in
pop
ljmp
aam
cltd
mov
xor
fcmovb
mov
ja
cmp
cmc
inc
pop
movl
repnz
iret
dec
mov
dec
or
mov
pop
out
add
lds
xor
sar
jnp
fwait
dec
inc
cmovne
mov
add
jb
jl
inc
mov
sti
jae
notl
int
insb
add
adcb
mov
out
fisubrl
lea
adc
xor
push
and
jle
sbbl
clc
or
jmp
stos
lret
sub
je
out
outsl
mov
xor
les
addr16
data16
test
jg
cmp
cmp
push
dec
sub
shlb
pop
divl
call
pop
push
fiadds
les
sub
jge
push
nop
cltd
arpl
inc
in
out
pop
out
ljmp
mov
sbb
cmc
adc
incb
jbe
jnp
rcr
sbb
fdivl
mov
mov
push
clc
imul
imul
out
add
repnz
scas
out
dec
imul
push
aas
pop
dec
or
daa
cmp
mov
movl
into
cmp
addr16
xor
mov
repz
adc
out
scas
arpl
pop
jns
mov
lea
jns
stos
cmp
add
outsl
xor
cltd
leave
push
mov
shr
inc
nop
mov
or
ja
movsb
mov
mov
shll
pop
dec
insb
mov
mov
cmp
mov
jb
xchg
pop
xchg
cmp
shrb
fisttps
lods
push
fsubrs
and
imul
clc
es
xchg
mov
lods
jmp
ds
aad
cmp
push
or
call
xor
mov
dec
mov
sub
jo
dec
outsb
lret
xchg
stos
js
mov
hlt
adc
test
popfw
stos
sbb
pop
sahf
pop
mov
scas
jle
push
sub
mov
inc
push
adc
fdiv
daa
rcr
mov
sbb
mov
push
and
push
fadds
mov
pop
into
insb
aaa
inc
cmp
or
and
sbb
sbb
mov
adc
iret
movsl
mov
outsl
sub
popa
mov
sub
jno
shr
repnz
push
mov
add
xor
lcall
pop
call
fwait
pushf
adc
and
int3
mov
add
mov
addb
jp
in
adc
negl
mov
enter
jnp
call
decb
xor
loopne
cwtl
stos
dec
lods
test
fldt
fwait
notb
jno
jne
sub
jno
sbb
inc
test
mov
rcrb
mov
lods
arpl
out
add
sbb
mov
js
test
das
in
jb
iret
idiv
cmp
cmp
xchg
outsb
call
pop
ljmp
rcll
in
int
mov
add
popf
inc
mov
ds
cld
test
data16
mov
add
inc
pop
adc
xor
adc
sbb
sub
mov
in
aas
fcomp
fadds
lods
loope
cs
cwtl
adc
es
xchg
and
pop
push
dec
pushf
sbb
pop
mov
add
out
mul
xor
or
ss
fsubrp
adc
xor
inc
adc
call
pop
pop
jmp
xchg
push
les
stc
pop
cmp
xor
sub
jno
jne
aam
xchg
gs
and
jns
inc
nop
sbbb
cmp
cmp
mov
movsl
jmp
push
leave
xchg
mov
repz
jbe
mov
sub
sub
lret
lock
shrl
fadds
bound
xchg
mov
mov
cmp
push
xor
adc
shlb
pop
dec
add
daa
cmp
cltd
dec
lock
push
scas
das
and
pop
out
adc
nop
sub
jae
jae
pushf
pop
pop
jae
push
push
pop
test
in
xchg
push
sub
pop
mov
and
movsl
adcb
pop
add
fnstsw
lods
rorb
hlt
lret
push
jbe
push
lret
movsl
loope
or
sub
stos
dec
push
adc
adc
pop
push
movsl
dec
ficoml
into
jg,pt
fistpll
loopne
sahf
jge
adc
cmpsb
in
aaa
jne
lahf
cmpsb
jae
enter
inc
nop
cmp
or
mov
pop
push
lcall
daa
lret
movsl
cmpsl
pop
and
jbe
jmp
cwtl
mov
lret
hlt
sahf
hlt
or
fildl
sarb
into
push
mov
idiv
gs
dec
movl
in
xor
xchg
test
mov
xchg
les
push
add
jns
sbb
ret
adc
scas
cmp
cmpsl
lcall
or
sbb
and
lret
imul
pop
fdivrl
and
xchg
rcll
dec
je
rolb
or
pop
fnstsw
cmp
aaa
pusha
dec
inc
fwait
mov
insl
push
sub
das
stc
sahf
cmp
aaa
js
fcmovnb
push
or
popf
test
sub
mov
jge
xor
jmp
mov
xchg
mov
and
xchg
jge
repnz
pop
mov
xor
shlb
fistl
jmp
popf
dec
and
clc
js
pop
aam
or
gs
dec
mov
lea
mov
cmpsl
add
lahf
out
filds
push
pop
xor
daa
in
cwtl
jecxz
cmpl
divw
mov
dec
sbb
and
lods
shl
cmp
sbb
pop
nop
mov
and
push
mov
sub
xor
loop
adc
icebp
orl
or
add
or
aas
std
inc
pop
pop
pop
mov
mov
xchg
add
cwtl
movsb
mov
pop
rolb
mov
sub
sarl
cmp
test
lret
arpl
lcall
je
or
mov
or
repnz
in
mov
sti
and
andb
xchg
sub
push
out
push
jne
cld
testb
add
mov
cmp
add
xchg
mov
pop
mov
lock
pop
mov
push
inc
dec
or
add
adc
cmp
pop
xchg
out
pop
sahf
repnz
cs
daa
sbbb
out
xor
sub
pop
das
pop
out
mov
popf
rcrb
les
push
cmp
xor
in
xor
jl
or
movsl
ss
nop
mov
icebp
lods
mov
imul
cmc
jae
pop
adc
stc
inc
xchg
lea
lock
push
or
add
and
inc
push
or
data16
jl
scas
pushf
orl
inc
inc
or
or
cmpsb
push
push
mov
das
mov
inc
lds
sub
xchg
mov
xchg
lcall
mov
jns
fwait
daa
fwait
mov
mov
sbb
dec
loopne
in
int3
sbb
imull
cmpsb
gs
xchg
lea
pushf
filds
in
sbb
inc
push
and
pop
adc
incb
leave
or
rorl
mov
jb
rcrl
mov
data16
xlat
mov
es
scas
pushf
push
mov
and
out
mov
add
fwait
out
mov
mov
out
sbb
or
in
mov
and
fadds
sub
into
sub
and
faddl
sbb
insl
leave
add
mov
enter
mov
icebp
cmc
fcom
insb
mov
push
stc
sub
push
hlt
jne
cmp
inc
pop
mov
jge
pop
out
mov
cmpsb
sbb
sahf
and
xorb
into
adc
test
roll
jae
scas
or
jle
mov
pop
mov
pop
sbb
pusha
inc
dec
cmpsb
ret
xor
xchg
adc
jne
cmp
hlt
mov
and
xchg
push
js
or
push
jge
push
clc
jbe
outsl
push
lods
addr16
into
lret
push
scas
mov
xor
mov
les
ss
frstor
mov
out
jmp
inc
push
cld
jmp
hlt
addr16
inc
push
mov
adc
cmp
push
mov
push
xchg
mov
rclb
loopne
notb
insl
inc
xchg
das
and
or
test
lods
ret
pop
push
lds
aaa
push
dec
jb
fldcw
cmpsl
out
mov
jp
outsb
xchg
push
dec
push
add
stos
cwtl
pushf
sarb
gs
leave
pop
aad
int
push
jne
stos
and
push
shlb
mov
add
or
jnp
mov
loop,pn
push
into
rorl
out
push
jae
and
push
daa
mov
cmc
jae
push
or
das
adc
data16
aaa
mov
scas
arpl
arpl
sub
cwtl
ret
aas
push
mov
out
lods
sub
xchg
aaa
lds
mov
test
add
stos
adc
imul
bound
sub
test
mov
add
aaa
inc
clc
mov
mov
ret
pop
xor
adc
ficoml
sbb
pop
jbe
pop
cli
mov
test
xchg
xchg
dec
data16
mov
cmp
jae
aam
adc
sbb
sub
sbb
dec
repz
pop
or
cmpsl
pusha
test
in
jns
pop
or
pop
mov
lods
dec
jge
jmp
add
cmpsl
mov
sbb
jmp
ss
xor
pushl
int
pushw
leave
xchg
jne
push
sub
fnstenv
cmp
gs
mov
sub
lcall
dec
sub
mov
adc
rcrb
arpl
push
mov
or
jle
fcoms
dec
inc
jns
mov
fnstcw
aad
rcl
sarb
test
in
pushl
or
mov
dec
sbb
and
fcoml
icebp
or
jbe
mov
and
dec
xchg
cs
xor
popa
out
sub
or
pop
aad
cmp
inc
int
sysenter
sar
lods
push
loope
stc
js
outsb
outsb
stc
jno
xchg
xor
js
mov
jle
outsb
add
sbb
push
movsl
mov
pop
sub
dec
push
out
scas
push
xchg
scas
xor
cld
mov
sub
repz
in
aam
sub
cmc
push
loope
jecxz
test
ficompl
sbb
xor
nop
adc
shrl
inc
enter
hlt
adc
mov
scas
je
daa
dec
adc
jmp
cmp
movsb
lods
sbb
je
call
xchg
push
lahf
cmp
dec
data16
imul
mov
xchg
cmp
inc
ljmp
aaa
js
outsb
jno
sbb
adc
push
dec
mov
xor
aaa
xchg
sbb
xor
movsl
out
js
insl
mov
stc
neg
mov
pop
test
shll
dec
bound
test
push
jl
mov
jb
dec
jno
inc
test
icebp
ss
or
pop
fcompl
cmpsl
pop
les
push
mov
rep
xchg
xor
out
jns
mov
mov
in
imul
inc
push
out
sub
jg
out
pop
cli
fistpll
lea
aas
pop
jmp
inc
mov
mov
adcl
sub
cwtl
fistl
loop
cwtl
bound
bound
mov
pop
lods
mov
sbb
jb
add
mov
lods
rcl
push
or
push
sub
sarb
pusha
sti
adc
scas
bnd
dec
or
rorb
jg
pop
lcall
jmp
arpl
push
xchg
fistpll
popf
mov
sub
adc
adc
push
cmp
cld
sub
inc
dec
popf
in
push
dec
test
fcmovnbe
inc
unpcklps
ret
push
int
bound
fwait
jnp
mov
or
daa
sbb
jbe,pn
pop
mov
mov
dec
dec
and
push
push
fbld
mov
ljmp
mov
lods
xor
sub
daa
stos
or
aam
or
pop
xchg
pop
or
sbb
enter
pop
arpl
sub
loop
xor
sub
xor
xor
in
les
aaa
inc
mov
fsubs
cmp
ds
adc
mov
outsl
push
inc
fistps
test
push
out
insl
es
jns
fimull
mov
jecxz
sub
arpl
and
cmp
inc
or
pop
push
sahf
push
xchg
test
mov
xor
xchg
lret
jmp
lahf
movsb
mov
xchg
sbb
cwtl
pop
in
std
add
loop
lahf
inc
leave
xor
fisubrl
lock
cmp
addr16
or
or
adc
inc
pop
adc
inc
inc
or
cwtl
sub
mov
sbb
push
sub
mov
adc
mov
dec
sub
test
sbb
repz
mov
les
fld
loopne
je
pop
inc
fcoml
sbb
xor
dec
test
cmp
inc
jno
data16
push
mov
mov
in
cld
adc
and
popa
lahf
aam
pop
sbb
das
pop
mov
pop
das
push
cmc
mov
in
sbb
bound
aam
cmp
ret
or
push
xchg
arpl
insl
repz
jne
fs
xlat
ficoml
mov
je
lods
hlt
mov
push
test
mov
pop
mov
jne
lret
xchg
lods
sti
mov
sub
cmp
clc
adc
mov
adc
lods
xchg
out
push
call
cltd
xorb
fs
pop
lcall
cli
add
dec
push
rcll
mov
lea
mov
jp
lods
and
pop
push
jbe
jnp
xchg
clc
fdivs
add
pusha
stos
decl
xor
nop
fidivl
pop
mov
or
jmp
fadd
loopne
inc
icebp
jae
fstps
fistpll
test
pop
pop
mov
or
or
out
fists
fdivr
pop
xor
xor
sbb
jmp
jge
popa
cwtl
out
push
or
sub
repnz
push
mov
je
imul
lret
out
cmp
fsub
add
out
jl
imul
mov
aas
pop
adc
testb
add
xchg
mov
outsb
shlb
cmp
lds
in
push
mov
mulb
es
movsb
insl
and
mov
iret
imul
and
jb
jne
add
push
add
insb
mov
push
out
push
pop
orl
ret
inc
sti
add
leave
xchg
add
push
int3
test
testl
lcall
bswap
cvtdq2ps
jecxz
fistps
add
add
shll
in
ds
sbb
or
jl
data16
or
leave
xor
adc
subb
add
jmp
es
and
dec
out
xchg
out
data16
insb
popf
stos
lods
imul
ja
push
jo
call
or
add
sahf
add
push
mov
push
loopne
imul
or
mov
fldenv
mov
jnp
outsb
pop
dec
sub
and
subb
lret
jns
push
ret
push
out
xchg
fdivs
inc
in
and
xor
push
sti
sbb
push
cli
adc
mov
fcoms
in
push
xor
scas
scas
cmp
sbb
cmp
push
jb
sub
xchg
inc
push
rorl
mov
test
xor
xchg
mov
rorl
pusha
inc
in
pop
lods
cmp
int
pop
push
adc
roll
les
jae
fiaddl
inc
in
cld
or
mov
push
cltd
call
clc
adc
dec
test
fbld
lock
jno
lds
aas
outsb
int3
cmp
loope
insb
cmpsl
sub
testb
adc
add
push
add
adcb
jl
loope
cmp
push
push
push
mov
fildl
fsub
mov
pop
pop
lods
scas
add
mov
insb
or
clc
or
in
stos
pusha
jg
inc
data16
sbb
aad
rcll
xchg
sbb
mov
pop
cltd
test
xor
mov
jbe
int3
cmp
clc
sub
lahf
lret
imul
cmc
out
add
fdivl
xor
mov
shrb
call
mov
and
ret
cmc
push
sbb
lds
bnd
aad
orb
fistpl
mov
sbb
cmp
xchg
push
inc
test
add
enter
les
out
imul
stos
sub
pop
cld
fadds
mov
pop
fwait
jbe
xor
jne
cmp
mov
cltd
fiadds
and
push
mov
mov
call
je
lret
xor
jbe
or
aad
and
rcr
and
scas
adc
jl
cmp
adc
insb
jo
scas
pop
mov
inc
addr16
xchg
popf
hlt
sbb
cli
adc
mov
movsl
sbb
in
test
or
imul
ror
sbb
cwtl
repnz
xor
aam
or
mov
test
push
mov
cmpsl
pop
loop
out
cmp
cltd
push
xchg
ret
add
jnp
adc
jae
in
test
jl
mov
xor
push
add
lods
adc
jae
xchg
shl
jmp
fdivrl
xorb
movsb
test
mov
jb
dec
ja
aas
lods
mov
xchg
notl
dec
clc
sbb
enter
inc
and
and
mov
pop
out
pop
rcrl
cmp
mov
xchg
mov
pop
cwtl
sub
inc
fwait
jb
add
sti
dec
movsb
fstpt
enter
push
adc
sub
xchg
cmpsb
nop
sti
pop
adc
int3
fistps
andb
idivl
iret
sub
testl
loop
jo
mov
cld
xor
popl
mov
stc
gs
pop
pop
lcall
addr16
push
stos
cs
bndldx
insb
mov
rcrl
dec
movsl
jp
rorb
out
or
ret
movb
aas
js
movsl
mov
xchg
cmpsl
pop
ja
test
stos
inc
mov
xchg
rcrb
or
cmp
loope
xchg
cmp
and
stc
push
mov
jg
into
add
mov
fimull
sbb
jp
dec
mov
lahf
mov
call
fwait
pop
and
clc
push
sub
push
add
int
xchg
and
mov
aam
or
in
dec
orb
add
movq
pop
jle
sbb
cmc
xor
jecxz
je
xchg
sub
dec
and
adc
mov
pop
xchg
inc
test
push
aam
aas
fdivl
test
mov
pushf
daa
lcallw
clc
sbb
mov
aas
loope
sbb
int3
xchg
int
dec
mov
outsl
in
out
fisubrl
sbb
call
negl
dec
push
dec
mov
ror
adc
test
xchg
mov
mov
aas
push
pop
xchg
mov
mov
add
call
mov
and
lcall
ja
pusha
cmp
mov
sbb
sub
out
mov
push
js
cwtl
mov
scas
xchg
int
adc
jle
clc
std
mov
mov
out
test
shlb
pop
and
mov
scas
sbb
pop
mov
clc
in
xchg
and
xor
cld
sub
xor
sbb
push
sahf
pushf
js
adc
inc
aad
push
push
js
cltd
in
fs
jb
push
inc
and
mov
adc
aam
insl
add
inc
outsb
inc
scas
inc
jmp
mov
xor
jbe
mov
cmc
xor
and
imul
pop
pop
xor
and
xor
int
pushf
int3
dec
fistpl
push
or
std
cmp
out
lret
sbb
je
dec
scas
add
out
push
inc
cld
mov
cwtl
dec
in
in
adc
cmc
je
rcrl
and
mov
push
lea
pop
ds
jno
shr
rorb
jge
roll
inc
das
dec
adc
pop
xchg
xor
fsubl
loopne
dec
ljmp
sub
push
inc
sbb
rolb
xchg
or
dec
xchg
pop
xchg
xor
sbb
or
sbb
push
icebp
popf
xchg
rolb
mov
inc
cmc
mov
in
rolb
rcrl
mov
push
call
mov
ds
adc
aaa
push
das
cwtl
xchg
adc
push
mov
dec
mov
xchg
add
or
or
cmp
add
jp
test
out
pop
je
sbb
pop
inc
out
adc
js
push
orl
mov
test
insl
outsl
fldcw
inc
mov
push
or
push
sbb
jl
imul
in
sbb
sub
arpl
bound
xchg
leave
fisubs
cmp
jno
xor
xchg
cmc
sub
or
mov
ss
fiaddl
dec
lcall
loope
add
aas
mov
cmp
fdivp
icebp
mov
ret
fimuls
adc
cmp
mov
in
inc
in
ja
dec
mov
and
pop
in
xlat
loop
ret
lcall
mov
flds
loop
frstor
sbb
or
add
lea
rcll
lret
push
std
call
mov
es
sbb
xor
pop
hlt
fwait
inc
jle
jmp
insb
stos
loop
fildll
cmp
jb
push
out
out
stos
cmp
outsb
outsl
cmp
mov
and
push
sub
cld
outsl
je
nop
and
jge
mov
inc
sbb
and
data16
das
sarl
xchg
push
cmp
add
push
cli
pop
push
dec
mov
inc
mov
xor
push
xchg
in
jns
in
adc
inc
popf
cld
cmp
push
pushf
sbb
loope
movsl
mov
ficoms
mov
orb
in
lcall
fmuls
xchg
loop,pn
jo
push
std
xor
jge
push
ss
in
mov
xor
cmp
mov
xor
add
push
push
ret
hlt
push
pop
mov
jns
in
mov
xlat
xlat
lock
int3
movsl
and
mov
jg
mov
je
jne
dec
or
data16
int
lcall
out
add
jbe
ret
add
mov
xchg
lds
adc
adc
mov
cmp
xchg
or
add
cmp
mov
jno
stc
cltd
adc
sub
test
xchg
pusha
jle
cmp
xor
sub
sbb
or
lret
mov
ret
addl
jb
jp
enter
inc
xorb
lret
aam
clts
jecxz
inc
mov
inc
insb
bound
lcall
pop
sti
add
les
xchg
add
mov
cmpsb
push
jne
sbbl
sub
push
push
and
rcrl
push
pop
popf
loopne
and
or
test
loopne
pop
or
scas
xchg
dec
rcl
daa
blcmsk
mov
lret
mov
inc
pop
pop
jg
lahf
scas
dec
xchg
jae
mov
mov
test
sarb
rcr
jl
cmpsl
aam
sub
add
inc
vcvttps2dq
adc
mov
jl
jle
pusha
mov
test
movsl
inc
les
xchg
shlb
pop
cmp
xchg
js
popf
add
lods
cwtl
cmp
pop
dec
dec
fwait
std
ret
sub
int
or
mov
into
fildll
xchg
roll
jo
inc
sbb
enter
loope
push
push
xor
xchg
jecxz
clc
dec
dec
lcall
fcoms
mov
pop
fsubrs
push
in
div
not
fwait
add
pop
clc
out
mov
aas
sub
adc
cmp
sub
enter
repnz
sub
fwait
lock
lretw
mov
dec
or
inc
mov
dec
mov
push
push
add
and
jg
mov
sub
pop
movsl
clc
insl
dec
xorb
mov
push
rcl
push
sbb
inc
and
lret
inc
fbstp
pushf
mov
cmc
repnz
shrb
mov
movsb
jns
push
imul
int3
dec
push
xor
fnstsw
mov
mov
mov
pop
ljmp
jae
sbb
jecxz
jl
adcl
sahf
dec
pop
xchg
ds
inc
jns
pop
lods
mov
fsubr
xchg
jge
add
les
pop
bound
sub
pusha
sub
xchg
test
xchg
je
adc
xchg
fwait
call
cmp
push
rcrl
pop
xor
arpl
inc
popa
inc
cmp
out
movsb
cwtl
popf
sbb
imul
int3
jp
arpl
mov
jb
fisubrl
and
xor
int3
pop
adc
cmp
dec
scas
jnp
add
mov
adcb
sbb
jns
xacquire
test
popl
outsb
imul
fistpll
lds
mov
dec
push
movsl
push
cmpsl
or
out
jmp
inc
lret
mov
mov
xor
rcrb
mov
and
shl
cs
sahf
and
jmp
push
mov
stos
mov
sti
jl
mov
cwtl
xchg
mov
mov
std
imul
mov
shlb
pusha
jmp
adc
jmp
or
sub
and
pop
adc
rcrb
mov
cmpsl
pop
cltd
xchg
cmc
xor
sbb
pop
inc
lds
jae
push
imul
sub
imul
cltd
lock
lret
dec
cld
add
cld
jo
cld
pop
add
xor
mov
jb
mov
and
mov
out
outsl
je
dec
cmc
mov
mov
pop
call
xchg
sarb
repz
leave
ffree
push
xchg
dec
fwait
data16
cld
ss
jne
and
lcall
pmulhw
imull
or
mov
jmp
aas
xchg
dec
sbbl
aam
insb
out
adc
ljmp
cltd
lret
push
jns
or
mov
addb
gs
cmpsl
mov
repz
sahf
into
and
mov
pop
or
outsb
pop
xlat
xchg
mov
jnp
lret
add
jb
mov
mov
lods
mov
mov
jb
jns
daa
imul
pop
test
inc
pop
test
in
ret
xchg
hlt
cli
jg
adc
mov
mov
mov
pop
mov
mov
popf
mov
mov
scas
outsl
out
fucomi
ja
pop
mov
pop
out
jg
icebp
cmpl
aam
sbb
add
nop
mov
in
dec
add
cltd
clc
stos
andl
or
add
inc
lahf
inc
jge
or
sub
and
daa
fcoms
jecxz
in
outsl
xor
mov
mov
mov
sbb
ja
mov
jne
sbb
jl
mov
and
push
or
mov
aaa
loop
mov
shll
dec
fidivrs
js
gs
bound
stc
loop
push
ljmp
popa
movsb
in
mov
adcl
inc
in
mov
popf
psrlw
cmp
sub
ret
std
adc
and
movsb
jp
scas
cmp
xchg
push
push
sbb
add
sbb
dec
lds
scas
sub
movsl
lock
popf
test
push
call
pop
mov
movsb
cli
push
cs
adc
mov
mov
in
xchg
inc
enter
filds
fwait
hlt
push
and
fldenv
in
add
cmp
ss
adc
fsubl
hlt
sub
dec
je
popa
xchg
inc
outsb
add
or
mov
lock
fsubrl
lcall
mov
and
mov
push
xor
dec
mov
mov
mov
sub
inc
pop
inc
loope
jno
lretw
test
out
jl
sub
js
jle
mov
orb
dec
xlat
mov
and
ds
cmp
and
add
xchg
mov
jae
or
cmp
add
fsts
pop
aam
mov
ds
pop
dec
inc
je
adc
test
and
shll
sub
jb
insl
aad
std
mov
sub
popf
fsubl
fcmovnb
jp
adc
jecxz
cli
jmp
mov
outsb
enter
test
mov
and
or
xor
mov
jns
mulb
inc
push
cmpsb
in
imul
push
cwtl
sbb
rcll
rcrb
fcomps
lods
jo
mov
pop
jge
adcl
and
nop
fdiv
rol
jl
sbb
mov
or
andl
fcompl
jne
mov
das
pop
sub
ret
mov
test
push
int3
push
popa
sbb
dec
sub
arpl
cmc
out
bound
cwtl
cmp
mov
lahf
js
aas
jne
jp
loop
or
cs
xor
iret
outsl
lods
andps
dec
mov
fsub
mov
mov
cltd
sbb
pop
mov
in
inc
jo
out
ror
ret
jae
cltd
cmp
xor
mov
sarb
sub
xor
adc
mov
push
addr16
ja
cld
inc
xchg
sbb
imul
stc
daa
cmp
xor
sbb
clc
cmp
lods
inc
xor
mov
arpl
sub
xchg
clc
or
and
sub
mov
adc
xor
cs
negb
and
lock
mov
jmp
jl
mov
in
xchg
and
in
xor
aad
stos
mov
jp
in
aad
iret
jle
push
and
lds
sub
addb
sbbl
jle
xor
sbb
sub
daa
mov
cmpsb
stos
sbb
xchg
mov
push
cwtl
cmp
xor
data16
push
out
pop
push
daa
adc
xlat
rcll
fildl
dec
cmp
lret
mov
ljmp
pop
lods
sbb
jo
add
cld
sti
mov
out
sar
adc
push
mov
cli
pop
arpl
pushf
xchg
shl
insl
or
inc
fwait
sub
mov
push
dec
iret
ds
add
xor
jne
loope
dec
idiv
mov
jg
loopne
dec
pcmpgtd
inc
rcll
test
cli
mov
clc
addb
cmp
push
fmuls
mov
mov
loope
mov
repnz
dec
xchg
cmp
iret
sbb
push
icebp
pop
mov
std
lret
lcall
shlb
jg
or
xor
cltd
push
test
out
es
mov
mov
jg
sahf
sub
lcall
ret
mov
shrb
xchg
popf
mov
into
aam
dec
dec
jecxz
ljmp
sbb
sbb
je
in
in
push
dec
enter
mov
mov
pop
std
insb
mov
xor
xor
movsl
jbe
xor
subl
arpl
mov
dec
ret
sbb
in
dec
push
pop
sti
stos
inc
iret
mov
in
push
js
or
in
mov
sub
in
mov
cmp
mov
and
aad
dec
insb
pushf
and
mov
jp
out
mov
sbb
mov
add
fcompl
xor
aas
jb
push
sbb
movsl
mov
subl
and
sbb
xor
sub
pop
adc
out
idiv
ret
fs
push
ja
dec
addr16
ds
add
and
inc
outsl
cltd
mov
adc
ljmp
inc
cli
or
or
xchg
out
inc
cs
mov
or
mov
es
movsb
ljmp
icebp
or
nop
int
or
faddl
xchg
fwait
mov
insb
in
insl
mov
or
mov
lahf
xchg
andb
insl
cmpsb
and
test
out
orb
sarl
in
outsl
mov
sub
sti
pop
sbbl
or
adc
rorb
mov
and
xchg
sahf
test
iret
and
shrd
fmuls
fwait
mov
in
pop
lcall
lods
push
repz
lret
sti
dec
lret
fsubs
mov
testl
and
shl
sbb
xor
xchg
rolb
or
mov
jno
sahf
lret
sub
mov
add
test
daa
aaa
in
std
sub
pop
test
xchg
xchg
dec
jne
popa
das
jae
and
cmpsb
mov
xor
xchg
out
push
pop
ljmp
and
push
jmp
divb
insl
out
cmc
mov
aad
nop
adc
jo
jae
add
lahf
mov
mov
jg
imul
leave
inc
and
fs
mov
test
dec
ficoms
xor
iret
sub
pop
jle
nop
int3
xor
mov
xchg
sbb
shrl
fisttps
shlb
pop
xor
call
xchg
cmpsb
int
ljmp
arpl
fs
jnp
mov
or
scas
sub
sub
push
incb
fs
rclb
push
fcmove
adc
int3
int
xchg
fdivs
cs
negb
test
insl
mov
mov
mov
test
fstps
rcll
sub
mov
fildll
incl
outsl
add
rcrb
bound
or
adc
jmp
inc
sub
or
inc
mov
in
and
adc
jl
xchg
ret
stos
sti
popf
mov
cmp
jb
testl
icebp
sbb
jge
mov
pop
dec
sarb
fstpt
outsb
or
xlat
ss
cli
imul
jbe
jb
out
mov
sbb
add
sbb
or
xlat
addl
cli
xchg
aam
std
xlat
ljmp
outsb
add
daa
bound
notl
jge
mov
sahf
pop
dec
cmp
sub
imulb
ret
push
lock
xor
in
cmc
cmp
mov
ret
cli
mov
sahf
fstpl
jns
ret
stos
inc
add
or
ss
mov
hlt
and
icebp
mov
mov
jmp
ljmp
int3
push
pushf
enter
mov
gs
dec
clc
nop
and
fsubrl
loop
movsb
jg
push
mov
inc
xor
lcall
or
stos
xchg
lods
add
insb
jae
sbb
jp
jbe
pop
cmp
data16
iret
ss
add
xor
push
jl
inc
mov
mov
mov
sbb
mov
or
sub
xchg
mov
mull
and
test
mov
and
push
jecxz
mov
loope
jl
or
inc
out
push
rclb
cmp
lret
xchg
jno
dec
repz
das
jg
adc
into
xchg
pop
ret
or
add
inc
pop
dec
mov
sub
fildl
xchg
and
data16
arpl
mov
xchg
inc
pop
jmp
jp
sahf
adc
out
sub
jb
aam
notl
jnp
xor
mov
iret
fisttps
or
je
outsb
sub
cmp
insb
pop
sub
fmul
iret
mov
test
mov
xchg
hlt
sbb
pop
nop
dec
lret
rdmsr
xchg
iret
jbe
sar
mov
mov
mov
dec
lds
xchg
sti
xor
mov
fisttpll
mov
xchg
and
push
mov
inc
icebp
test
in
js
cltd
push
lea
push
xor
movsl
in
add
dec
imul
or
or
clc
mov
sub
fildl
jns
shl
ja
insl
xor
test
mov
test
cmp
jno
fldt
aaa
jge
ret
sub
jp
xor
dec
sub
aas
mov
cmp
mov
loopne
mov
sbb
in
and
int
stos
int
aam
xor
xchg
jo
xor
adc
xor
push
inc
mov
bound
dec
gs
rol
imul
and
inc
sti
jb
aas
cs
dec
mov
stc
mov
ljmp
enter
cmp
inc
mov
repnz
dec
pop
outsb
pop
rcll
les
mov
sub
pop
xchg
sbb
xlat
push
sarb
lea
push
push
mov
mov
adc
mov
mov
in
cmp
scas
mov
cs
cs
push
sahf
push
jns
dec
aas
stos
adcl
push
fcompl
cmp
out
addl
notb
cmc
int3
pop
shrl
loopne
fidivs
loop
mov
or
mov
fwait
out
add
add
rcrb
xchg
fbstp
arpl
ret
xchg
mov
mov
addr16
adc
cmpsl
add
cmc
movsl
xor
push
stos
in
xchg
sbb
mov
es
lret
push
out
push
int
sub
jge
nop
xor
lea
stos
xlat
les
ljmp
mov
insb
inc
nop
cld
push
mov
push
pusha
stos
cmp
out
adc
ja
dec
mov
sbb
gs
cmp
aas
aas
aam
imul
ret
cmp
js
lret
andl
pop
lds
fiadds
mov
xor
mov
adc
push
mov
pop
inc
shlb
xchg
scas
imul
dec
test
xchg
cmp
pop
scas
out
add
adc
jb
mov
fwait
mov
push
xlat
in
enter
dec
movsb
add
xchg
loope
stc
inc
xlat
sbb
iret
ror
inc
js
cltd
and
and
pop
dec
insb
push
jecxz
push
mov
mov
and
dec
adc
sub
dec
xchg
or
and
mov
decb
pop
sub
mov
xor
out
jmp
sub
es
cmc
jb
pop
sub
adc
adc
imul
push
mov
or
xchg
pop
xor
jae
rolb
xor
push
iret
stc
add
mov
ds
cmc
push
hlt
cmpsl
mov
sub
movsl
jnp
dec
fldt
js
fdivr
lea
pop
dec
sbb
insl
dec
sbbl
sahf
jae
sub
movsb
pop
pushf
sub
out
inc
jnp
jle
fisttps
xor
mov
mov
rclb
push
out
cmp
loop
and
add
and
xor
mov
lock
jb
rcr
lods
js
fisubl
shl
mov
hlt
jb
mov
jo
in
pop
add
mov
nop
pusha
or
fwait
jmp
xchg
outsl
sbb
and
dec
shlb
dec
data16
mov
out
aaa
adc
cmpl
iret
stos
push
add
popf
repz
xchg
divl
jmp
in
lock
andl
aaa
sub
fisubl
aas
mov
nop
sti
stc
cmp
sbb
mov
jmp
sub
mov
ja
sarl
dec
xor
or
mov
cs
or
in
inc
mov
ss
ds
adc
add
inc
dec
shll
inc
add
or
inc
adc
jmp
cmp
rorb
fdivl
cmpsb
fbld
imul
jns
xchg
push
jg
mov
dec
mov
or
mov
jmp
imul
mov
mov
aaa
in
dec
sub
callw
aad
popa
leave
and
insb
insb
or
loop
jo
scas
lcall
js
js
stos
cmp
jno
fildl
stc
or
or
cltd
cmp
fwait
std
sbb
sbb
adc
mov
mov
shlb
test
mov
inc
popf
adc
cmp
stos
dec
inc
or
and
jle
xchg
inc
decb
mov
xchg
js
rcll
les
add
pushf
pop
clc
repz
movsb
mov
sub
scas
xchg
pop
aad
shl
aam
stc
sub
std
pushf
adc
popf
in
iret
xchg
enter
jmp
mov
mov
mov
cld
adc
push
adc
jns
andb
rorb
shlb
sahf
loop
in
loopne
mov
sti
icebp
xor
in
pop
test
cmp
pop
sub
mov
insl
mov
jbe
ret
jmp
out
test
push
lret
fdivs
or
pop
and
rorl
cmp
sbb
in
mov
imul
sbb
pop
mov
roll
dec
mov
cmp
cmpl
dec
xor
sub
call
pusha
or
jp
scas
test
inc
push
sub
