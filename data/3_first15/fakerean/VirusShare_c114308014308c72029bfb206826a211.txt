sbb
add
mov
mov
xor
pop
xchg
or
shlb
push
icebp
xchg
sub
in
loope
mov
xchg
bnd
mov
sti
das
add
push
std
cmp
xchg
ss
jg
int3
cmpsb
push
lea
pop
int3
mov
xlat
push
push
jmp
push
or
aas
sbb
jnp
and
cmpsl
call
imul
imul
add
pop
test
or
mov
cmp
push
pop
gs
stos
imul
adc
cmp
xor
adc
outsl
sarl
xor
push
jp
or
push
and
jnp
mov
ljmp
mov
mov
sahf
test
sarl
cmp
movsb
jne
into
js
push
cmp
faddl
lret
sub
inc
lock
movsb
xor
dec
scas
pop
mov
fdivrs
jnp
adc
jge
cli
lret
aaa
cmpsb
aam
mov
mov
in
push
jl
aad
lods
push
mov
fldcw
shrb
jbe
rclb
mov
sub
push
cmp
dec
pushf
popf
js
push
pop
stos
enter
cmp
ret
mov
mov
mov
adc
outsb
and
ds
sub
cmc
rcll
out
and
and
iret
stos
push
cmp
push
divl
mov
stc
aam
cli
jge
push
rcll
or
pop
lea
icebp
leave
push
jp
push
iret
pop
push
cs
pop
dec
mov
std
sbb
and
bnd
inc
xor
cmp
pusha
rclb
adc
jle
fistpl
jl
jae
cmp
fadd
or
adc
inc
mov
in
inc
inc
dec
scas
int
jo
xchg
es
push
dec
jnp
sub
mov
bound
dec
in
inc
inc
scas
xor
jae
aaa
rorl
dec
ret
pop
mov
es
in
nop
adc
add
dec
lods
adc
adc
insb
and
test
movsb
aas
mov
xor
ret
xchg
and
addl
and
dec
mov
enter
mov
xor
aam
call
sub
gs
ss
in
cmp
in
xchg
andb
in
mov
xchg
shlb
iret
pop
in
or
mov
scas
test
cltd
pop
dec
iret
mov
test
jbe
fs
minps
mov
dec
sbb
sub
mov
sbb
cmp
pop
lcall
cmc
mov
xlat
and
fstps
pop
xchg
add
in
outsb
cmp
fisubl
add
fdivs
cmp
or
pop
push
jmp
int
clc
and
popa
sbb
movsl
jno
enter
rcr
jmp
push
shl
jb
test
enter
push
js
add
stos
inc
dec
mov
dec
in
int
in
inc
adc
arpl
mov
cmp
dec
fiaddl
jl
mov
pop
sbb
lret
mov
hlt
jg
push
aam
mov
and
lcall
pop
pop
popa
lahf
inc
xor
ja
dec
pop
or
jnp
jge
sahf
aaa
call
mov
xchg
cld
adc
inc
xor
xorb
int
shl
mov
jl
vmovaps
ds
fisubl
ror
imul
out
sahf
loopne
int
pop
jo
cld
iret
shrl
fimuls
test
push
adc
pop
push
mov
loop
dec
mov
adc
add
mov
aaa
mov
pop
cli
xchg
out
lcall
insl
fwait
jne
aas
jno
jecxz
int3
dec
mov
xchg
mov
pop
std
dec
push
push
test
xor
cld
mov
pop
cmp
adc
ret
pop
mov
fcompl
xchg
jb
push
push
les
lret
into
cmpsb
cld
jb
xor
rorb
sbb
xor
push
pop
mov
ret
mov
adcl
mov
inc
int
xor
inc
and
lret
std
neg
out
adc
dec
into
push
std
cmp
vphaddubq
push
push
mov
pop
sub
popa
pop
cmpsl
add
inc
push
into
mov
push
dec
lock
dec
inc
insb
pop
mov
and
ljmp
cmp
push
int
sbb
xchg
pop
mov
add
insb
inc
jle
jmp
stos
mov
outsl
add
mov
not
mov
xchg
repz
aaa
mov
jnp
sub
sbb
mov
call
xchg
xor
movsb
mov
test
lret
cmp
jge
xor
mov
jmp
add
push
movsb
lea
mov
add
and
mov
push
fsts
jecxz
aam
adc
sub
sub
mov
or
mov
adc
scas
xlat
int
fldt
push
xchg
jle
mov
popf
push
inc
sbb
jl
in
mov
mov
lret
nop
cmpsl
mov
push
mov
lods
inc
stos
lea
cld
mov
push
out
push
mov
jnp
xor
lret
xchg
aad
mov
pop
dec
iret
mov
xor
sahf
mov
cmpsl
in
sbb
cmp
adc
scas
adc
fmul
ja
mov
xchg
and
mov
movsl
rcrl
gs
or
inc
in
jl
push
xor
sub
dec
add
adc
mov
jno
jb
imul
rcrb
xchg
mov
aad
add
ds
aas
xchg
js
xor
jnp
fmuls
or
stos
arpl
jo
test
ss
push
or
inc
or
pop
movsb
mov
repz
jl
push
mov
mov
jmp
cs
rcrb
lret
dec
jae
mov
push
and
sbb
or
out
arpl
lret
sbb
jbe
fcomip
sbb
inc
fs
jns
mov
insb
and
push
test
mov
movsl
sahf
mov
jp
data16
enter
jle
addb
xchg
adc
fcoms
inc
push
sbb
test
and
clc
mov
cmp
sub
stc
pop
and
cmpl
in
mov
jmp
jle
ret
pop
and
jae
adcb
outsb
jbe
std
leave
lock
cs
pusha
jp
mov
sub
leave
sbb
imul
shr
mov
jmp
repz
xchg
sbb
pop
mov
test
dec
loopne
lock
aam
sub
sti
lock
outsb
mov
push
pop
adc
push
sub
mov
shlb
push
ficomps
arpl
add
movsl
out
or
test
data16
ret
das
sub
sbb
adc
cmp
test
inc
cmp
push
lds
push
pop
pop
xchg
adc
xor
cltd
and
cli
shlb
es
call
aas
jns
inc
jo
inc
nop
das
sbb
aas
xor
iret
jecxz
in
imul
adc
mov
movsb
lods
inc
in
pop
lcall
mov
mov
ret
sub
xor
xchg
pop
xor
xor
sub
rcll
xchg
pop
xchg
ficompl
pop
and
ja
outsl
mov
dec
lahf
jg
mov
rolb
push
call
jae
inc
dec
push
add
and
jge
sub
inc
repnz
lds
test
clc
jecxz
ficompl
dec
loope
js
dec
sub
mov
in
mov
mov
lds
dec
ja
mov
popa
int
adc
ds
pop
call
js
incl
lret
xor
imul
outsl
push
ret
dec
outsb
cmp
mov
popa
ljmp
mov
lea
stos
fisttps
or
mov
jl
jecxz
cmc
pop
iret
jg
push
jp
jl
push
flds
cmp
mov
sbb
xor
add
mov
lret
inc
cld
cmp
into
in
daa
bound
ret
jmp
adc
cmpsb
insl
ftst
cltd
and
mov
pop
adc
addr16
incl
ret
add
push
lcall
sbb
shl
in
adc
jg
sub
mov
mov
and
lds
orl
cmp
push
aad
sahf
push
add
mov
mov
dec
xchg
repnz
std
adc
or
leave
pop
push
mov
shl
inc
fidivs
pop
jbe
pop
das
inc
or
pop
adc
sub
jmp
mov
cmp
mov
stos
xchg
int
xlat
jl
cs
mov
popa
out
repnz
sbb
jnp
inc
ret
cmp
mov
mov
shl
add
jp
adc
add
stos
dec
sbb
clc
sbb
mov
pop
ret
dec
and
dec
cmc
jae
add
cs
push
js
icebp
push
add
inc
push
scas
mov
outsl
popa
pop
ficoml
push
fnstsw
mov
fnstenv
adc
or
movsl
xor
pop
pusha
adc
dec
push
and
cmp
inc
sbb
outsb
jae
negl
or
adc
pop
cmpsl
pop
rol
and
xchg
inc
pop
pop
inc
rcl
popf
movsl
cmc
jno
mov
fs
adc
cmpl
push
xchg
adcl
mov
lds
stos
sub
call
and
jne
sbb
clc
push
leave
into
push
lcall
mov
dec
lods
popa
lcall
loop
aad
fsubl
lods
in
adc
js
pop
sbb
sub
mov
pop
push
cs
pushf
jle,pt
xchg
decb
lods
sub
sbb
jns
jne
je
mov
xchg
mov
push
mov
fisttps
or
pop
pop
xchg
jne
sbb
sub
testl
mov
xor
inc
push
xchg
lea
repnz
fwait
aad
loope
jp
jbe
jo
icebp
shll
jg
mov
add
mov
rcrl
and
cmp
fsubrs
pop
imul
pushf
inc
fcompl
rcr
dec
cltd
clc
sbb
fidivs
loopne
jns
leave
icebp
or
popf
push
aaa
xchg
subb
mov
push
xor
scas
es
add
sub
cmp
or
xor
push
jp
sub
pop
lahf
inc
xchg
mov
jns
jno
inc
inc
test
ror
dec
icebp
jl
aam
adc
or
cmp
push
push
repz
mov
mov
push
pushf
imul
out
insb
bts
mov
inc
mov
jb
jno
loop
loopne
xor
jb
cmc
cmp
xor
ret
stos
pop
xor
test
adc
dec
dec
call
mov
loope
lods
jb
dec
jnp
insl
call
test
arpl
or
sub
fmull
ds
push
call
mov
jbe
add
inc
movsb
sbb
loopne
xchg
daa
mov
iret
into
mov
cmp
les
add
call
and
jae
imul
lea
shrb
push
add
into
cmp
add
inc
fs
addl
cmp
maxps
stc
xor
mov
adc
mov
mov
push
call
push
scas
sub
sub
mov
enter
aas
fcoml
scas
repz
and
aas
mov
jae
add
cs
lahf
mulb
in
je
filds
imul
subb
int
jle
ret
mov
xchg
or
dec
push
mov
cwtl
pop
dec
leave
enter
sbb
js
mov
fimuls
xor
cmpsb
gs
ds
cwtl
adc
loope
out
push
inc
jnp
sahf
in
dec
push
int
verr
loope
jo
add
adc
mov
cmp
mov
jno
popa
sub
out
or
icebp
pop
xor
sarb
inc
outsl
jle
mov
adc
in
popf
push
ret
mov
cmpsb
pop
test
pop
mov
cmp
mov
mov
add
inc
out
push
std
push
in
into
scas
and
aas
imulb
insl
js
mov
inc
push
jle
cwtl
add
mov
aaa
out
push
lea
gs
jns
jle
or
out
ss
jns
xchg
mov
cmp
lret
int
pop
mov
inc
pop
mov
ror
in
loopne
xchg
mov
jl
mov
clc
and
repz
add
fimull
push
lcall
in
loope
pop
and
cmc
jns
xchg
sarb
int
aas
jmp
movsb
mov
add
sub
add
sbb
xor
add
inc
xchg
jne
push
fsubs
cmp
pop
mov
cmp
imul
and
adc
mov
sbb
xor
pop
or
mov
out
mov
xchg
aad
out
sub
or
lret
lahf
iret
jb
push
push
and
or
inc
and
mov
cmpsl
jmp
sub
outsl
clc
call
xchg
push
inc
cmc
mov
fldpi
jae
out
fs
fistpll
int
or
push
jmp
andps
ljmp
jnp
shl
mov
lret
xor
popa
lahf
jno
xor
test
ljmp
ror
pop
mov
out
inc
sbb
out
sub
int3
aaa
jge
inc
add
lret
sbb
and
out
xor
lods
lret
ja
jne
cwtl
push
outsl
js
sub
pushf
push
out
ret
clc
shll
fidivs
leave
dec
aad
out
lods
or
cmc
dec
add
sbbb
in
aam
lock
repnz
fsubrs
enter
jnp
jne
mov
xor
mov
push
in
xor
mov
int3
sarb
leave
sub
daa
pop
lea
mov
or
ja
notb
loope
dec
filds
adc
jp
mov
sar
rclb
imul
inc
ds
clc
mov
les
sbb
rorb
int3
addr16
lret
cmp
and
ds
pop
mov
mov
fincstp
lea
and
clc
in
fnstcw
sub
pop
imul
adc
int3
clc
or
adc
and
inc
lods
mov
adc
cmp
sti
or
cs
jge
fsubrs
mov
insl
adc
lahf
pop
test
loop
loope
fnstenv
cmp
inc
sbb
int
mov
jb
xchg
xchg
sub
into
xor
sub
sbb
movsb
out
xchg
insb
mov
in
repnz
pop
cmpsl
lds
das
int
dec
sbb
xor
call
sbbb
sub
pop
fwait
sub
mov
push
or
shrb
fmuls
inc
out
cmp
test
adc
loope
add
and
fwait
or
out
and
fdivp
cltd
mov
xchg
das
and
mov
es
sub
push
or
mov
and
cmpsl
sub
add
clc
movsb
out
cli
and
add
inc
in
cmc
xchg
dec
in
cmp
out
push
xchg
add
lahf
xor
cwtl
jecxz
push
outsb
lea
scas
mov
into
fwait
or
in
xor
push
std
insb
dec
jle
loope
xor
inc
mov
cmp
xchg
pop
lcall
ret
inc
test
arpl
pop
lret
dec
mov
test
or
mov
xchg
jmp
push
nop
sub
nop
jmp
loopne
lcall
test
rcll
mov
add
lcall
add
out
push
stc
dec
inc
out
fwait
cmpsb
jmp
and
js
sbbl
fucom
xchg
dec
pop
inc
pop
mov
mov
jg
jbe
in
mov
in
icebp
mov
adc
sub
mov
push
jge
push
sahf
push
pop
stos
pop
idivl
fcmove
push
adc
vpcomd
aad
inc
aaa
nop
xor
mov
stos
adc
and
or
or
stos
rorl
lds
pop
inc
in
mov
and
mov
scas
dec
push
mov
dec
mov
mov
cmp
jp
push
gs
mov
popf
fsubrs
inc
ret
das
sbb
xor
es
std
test
out
jmp
lea
jae
mov
sbbb
loop
push
movsl
js
push
sbb
sbb
stos
dec
insb
and
jge
sbb
in
add
xchg
xchg
and
or
negl
jnp
es
leave
insl
and
xlat
int
adc
lret
push
cld
pop
dec
and
ret
mov
movsl
push
cmpsl
lods
testb
cmp
jg
xchg
xchg
xchg
pop
stos
mov
push
sbb
sbb
pop
xchg
stos
inc
mov
into
out
lcall
add
jmp
sub
xor
dec
pop
mov
jge
jo
scas
mov
mov
in
popf
imul
adc
mov
xor
lret
ds
rorl
jle
lock
push
xor
or
fmull
adc
xor
cltd
mov
mov
pusha
jl
sti
pop
pop
xchg
idiv
ss
jbe
mov
ret
out
sub
repnz
dec
mov
mov
sahf
rcll
enter
sub
mov
imul
mov
sti
push
sub
lea
lret
arpl
clc
fstpt
lea
fnstenv
jle
push
scas
popa
push
aaa
fsubrl
push
rcl
es
pop
mov
xchg
adc
es
and
inc
add
pop
fnstcw
push
test
js
push
lods
mov
sub
and
push
push
pop
mov
arpl
adc
dec
out
scas
fs
and
ret
mov
mov
mov
test
sub
sub
or
mov
or
cltd
outsl
sbb
imul
iret
xchg
pop
adc
mov
mov
mov
cmp
in
repz
pusha
test
arpl
shll
adcb
mov
out
xchg
pop
hlt
sub
lahf
stos
dec
lcall
cmc
in
or
push
pop
dec
jmp
fldenv
pushf
daa
fcmovnbe
sbb
xchg
mov
pop
pop
lods
loopne
mov
or
fwait
test
hlt
push
add
fwait
dec
fldenv
xchg
repnz
or
cltd
push
mov
js
xor
popf
aad
movsb
loopne
in
out
popa
mov
mov
dec
lock
inc
shlb
fbstp
fsub
or
mulb
push
push
xor
icebp
xchg
push
lret
neg
mov
in
nop
orl
or
push
daa
bound
addr16
ret
test
adc
test
and
ret
and
cld
pop
fucom
out
mov
sbb
addr16
out
int
jmp
and
xchg
jge
pop
scas
imul
add
rolb
mov
push
in
cmp
fisubrs
xchg
xor
scas
je
loop
insb
xor
ljmp
xchg
xchg
shl
out
dec
test
loopne
clc
add
mov
clc
movsl
cltd
add
cli
adc
sbb
jle
push
and
sbb
movsl
push
mov
outsb
jae
std
fucom
inc
cltd
bound
sbb
fdivrs
mov
addr16
adc
mov
jecxz
movsb
xchg
notb
mov
les
dec
sbb
fcomip
sub
jnp
hlt
sbb
push
data16
mov
mov
mov
add
sahf
add
jg
js
imul
inc
pop
push
jp
pop
or
adc
out
sub
andl
cmp
sbb
mov
in
mov
dec
lret
je
decb
and
icebp
mov
insb
inc
push
dec
popa
adc
fs
jbe
adc
loop
dec
imul
in
mov
mov
mov
inc
mov
gs
and
je
and
cli
mov
sbb
fs
daa
pop
and
mov
xor
adc
adc
xchg
sub
bound
lods
push
add
lods
jle
popl
adc
popf
rcll
mov
push
cmc
test
popf
push
xchg
mov
or
ljmp
pop
in
icebp
pop
xor
xchg
fucom
iret
sbb
insb
pop
test
push
mov
xchg
pop
pop
frstpm(287
negl
dec
fucomip
aaa
push
sub
pop
lock
std
mov
testl
lcall
fldenv
sbb
or
jns
gs
pop
arpl
jecxz
je
fldt
das
sti
mov
fsts
rcr
mov
and
jge
pop
push
jno
shll
divb
jno
dec
sbb
lret
outsb
in
xor
sarb
cmp
inc
jnp
mov
push
jp
lret
pop
test
sti
cmpl
inc
pushf
push
dec
jge
push
stos
dec
sub
adc
mov
sbbl
fistl
jne,pn
test
mov
int
sarl
lods
xor
shr
lds
mov
and
push
jno
shl
idivl
fisttpll
lret
das
jbe
stc
pusha
out
lock
pop
mov
and
ja
jno
lahf
mov
cmpsb
mov
daa
cmpsl
and
cmp
std
mov
sbb
idivl
pop
and
xorl
sbb
in
sub
adc
and
fiadds
xlat
mov
stc
iret
inc
ss
movsb
ja
adc
push
pop
or
or
cmc
les
or
mov
sub
mov
inc
popf
sub
lea
scas
out
nop
mov
push
arpl
add
xchg
rol
imul
out
and
lcall
mov
xchg
fs
imul
dec
enter
adc
sbb
pop
mov
rorl
fucomp
imul
lea
dec
fisubl
fstpl
jp
aad
dec
ds
scas
xchg
adc
push
pop
mov
sti
or
int
cmpsl
mov
imulb
fwait
rcrl
imul
add
and
mov
clc
mov
inc
mov
and
xchg
dec
mov
jmp
enter
scas
adc
push
mov
push
dec
fwait
pop
xchg
add
inc
int3
dec
and
aaa
cmp
cmp
call
jmp
into
jmp
popa
push
mov
adc
inc
call
mov
outsl
lcall
mov
in
inc
das
fnstsw
jae
pushf
mov
cmp
or
addr16
sbb
enter
mov
xchg
push
add
or
jmp
divps
cmp
mov
cmpsl
mull
cmpsl
adc
or
orps
inc
mov
lock
test
in
and
repz
mov
icebp
xchg
or
push
xor
in
push
inc
pop
fwait
std
mov
loop
pop
or
in
dec
andb
jecxz
sub
cli
pop
fwait
xchg
xor
mov
ror
lcall
or
out
cli
push
xchg
mov
sub
popa
mov
pushf
jno
add
or
stos
ret
into
push
adc
cmp
movsl
fwait
or
pop
lods
push
out
or
sbb
mov
popf
push
mov
in
mov
cltd
xchg
arpl
mov
testl
pshufw
fsubrs
stos
mov
ret
sub
dec
loope
mov
mov
andb
jge
dec
jge
fstpt
gs
inc
xorb
repnz
mov
sub
sbb
push
outsb
sub
mov
out
adc
data16
mov
movsl
cmp
or
pop
out
mov
ljmp
orl
mov
xchg
ret
jbe
hlt
push
jb,pn
lods
xor
or
scas
dec
aad
pop
push
jbe
test
add
subl
inc
mov
jl
add
lahf
popa
rsm
les
sub
lahf
fcoms
dec
icebp
outsb
sub
jg
dec
dec
lret
out
popf
stos
xchg
xchg
add
test
clc
lea
sti
xor
push
mov
ret
out
add
mulb
inc
leave
sti
jmp
xchg
jle
mov
andb
scas
bswap
int3
jp
lahf
call
add
data16
dec
sbb
xchg
or
pop
test
pushf
mov
insb
dec
aas
sbb
mov
push
pop
aas
sbb
pop
sbb
mov
xchg
mov
adc
pop
add
into
ret
inc
jp
cmp
sarl
mov
mov
mov
stc
int
sub
pop
fcoms
add
loope
xchg
jnp
xlat
or
xchg
enter
sub
jnp
sub
outsl
sub
shll
insb
mov
xor
xchg
aad
jp
lods
aad
xchg
adc
mov
mov
cmc
dec
mov
and
pop
or
leave
jb
cmp
sbb
dec
arpl
mov
outsl
pusha
enter
push
dec
in
pop
and
imul
les
mov
mov
inc
push
lds
inc
mov
fsubr
sub
int
and
xchg
or
es
hlt
lea
pop
mov
imul
jl
mov
push
mov
int3
mov
std
loope
je
leave
div
jle
dec
adc
test
add
xor
inc
mov
sbb
xchg
sub
into
fsubrp
push
mov
int3
fistpl
mov
hlt
push
loop
push
sarb
xchg
pop
xchg
lods
loop
out
aam
ss
xchg
adc
repnz
ja
mov
loop
inc
insl
pushf
and
jns
adc
int3
push
sbb
push
inc
in
pop
sub
insl
enter
mov
jmp
or
test
pop
adc
push
orb
pop
add
and
cmp
popf
insb
movl
mov
ror
psllq
push
add
mov
and
cmc
pushf
in
push
lock
or
js
or
cltd
loop
cmp
pop
jno
loope
incb
aam
xor
popa
xchg
mov
sub
mul
sub
call
sbb
fs
movsl
mov
mov
xor
sub
cwtl
scas
in
fiadds
mov
int
sub
ret
mov
jecxz
fstl
add
data16
xor
cmp
popf
mov
ficoms
mov
mov
mov
lret
out
mov
arpl
popa
and
xchg
xchg
iret
jnp
jne
imul
clc
in
stc
jge
mov
and
lods
pop
mov
cmp
loope
out
dec
or
test
shrl
mov
mov
popa
icebp
cmp
daa
es
aad
pusha
add
sti
mov
call
stos
aad
stos
fstps
int
cmp
pop
jg
incl
mov
push
pop
jnp
and
popa
sub
sub
mov
jmp
sbb
fmuls
cld
and
negl
xchg
dec
pop
movsb
call
jmp
enter
sub
jb
cmc
and
pop
xor
jne
jge
dec
stos
xchg
jge
pop
push
cmp
sub
out
inc
lcall
mov
sub
xor
pop
lcall
mov
mov
pop
fisttpll
mov
mov
mov
pop
das
jl
push
cmp
jno
fs
and
iret
cmp
fcmovnb
ss
mov
jecxz
sahf
bound
mov
pop
int3
cmpsl
in
cmpb
leave
stos
into
pop
xor
popa
insb
and
test
dec
xor
inc
mov
or
jecxz
imul
mov
movsb
mov
mov
test
xor
add
andl
and
aam
mov
data16
das
cmp
adc
sub
push
fisttpll
inc
dec
mov
push
cltd
xor
inc
push
int
out
mov
sub
and
lcall
test
lods
lds
cltd
aad
mov
inc
mov
mov
mov
or
or
sub
xchg
push
lds
movsl
jmp
jb
jno
sub
bswap
leave
ja
loop
jp
ret
popf
pop
std
hlt
loop
sub
lea
das
sahf
lock
hlt
ss
icebp
rorl
loope
stos
pop
stos
sbb
inc
into
dec
imul
loopne
pop
movsb
repnz
inc
loopne
push
iret
loop
cmp
bound
cmpsb
std
sar
jecxz
add
push
cmc
ret
and
sub
jno
mov
mov
outsb
imull
negl
sbb
shrl
and
and
pushf
dec
jnp
ret
and
fcoml
xchg
cmpb
xchg
mov
cmp
out
mov
in
dec
scas
sti
stos
or
nop
cmpsl
rolb
push
nop
rcl
pop
movsw
xor
jle
stos
outsl
jb
movsb
mov
pop
mov
adc
lods
arpl
dec
mov
jl
push
popa
aad
icebp
cmp
aam
fists
inc
lods
pop
jne
popf
push
dec
sbb
mull
sub
inc
push
pop
das
xor
and
xchg
jge
jg
ja
mov
cmp
pop
ds
mov
out
lcall
cmpsl
jne
out
addr16
popa
pop
xchg
mul
cmp
ds
lldt
push
scas
pop
cmp
lods
mov
pop
push
outsl
mov
push
sti
dec
push
call
test
data16
sub
inc
xchg
push
inc
cltd
fisubrs
sub
rorb
sti
outsb
inc
push
mov
xchg
inc
mov
mov
dec
adc
ja
fists
adc
jb
inc
mul
pop
and
test
in
test
aaa
dec
inc
jmp
stos
rcrb
fisttps
mov
adc
xor
stos
sbb
mov
jne
or
mov
or
mov
hlt
mov
xchg
xor
adc
mov
adc
outsl
ljmp
test
xor
and
mov
or
rcll
int3
jmp
adc
mov
ss
mov
mov
cmc
cmp
pop
push
cltd
jno
pop
nop
or
jg
roll
scas
sbbl
add
mov
adc
je
imul
add
cmp
jmp
jle
sub
adc
xchg
fisubl
dec
inc
jl
add
mov
cmc
mov
iret
fistps
push
cmp
insb
lcall
lret
ss
std
push
sub
mov
jo
mov
addb
pop
out
add
je
pop
adc
xchg
xlat
clc
add
dec
in
add
sbb
mov
outsb
inc
sub
in
inc
fidivs
pusha
fwait
sbb
xor
int3
movsl
ds
and
jno
cmpl
jp
mov
sub
aad
inc
mov
imul
inc
fnstsw
push
cmpsb
clc
lods
push
out
rcr
push
clc
outsb
jg
repnz
adc
pop
dec
cmc
loope
fs
icebp
push
jbe
in
jne
icebp
pop
sub
mov
mov
sbb
mov
xchg
or
push
imul
push
adc
into
jno
xor
sbb
pop
notb
cmp
pop
js
dec
mov
sub
sti
inc
aad
and
xor
pop
sub
shlb
sub
insl
ljmp
mov
rorb
add
add
std
sub
jp
cmp
popa
cmpsb
mov
xchg
adc
and
test
pop
push
int
jb
sbb
xchg
push
cmp
add
adc
mov
adc
jmp
mov
push
add
inc
mov
les
add
xchg
or
xchg
jecxz
pop
adc
cltd
or
fdivr
or
add
sub
sbb
and
cmp
aas
insb
xchg
push
lds
pusha
pop
sarb
call
pop
int3
push
pop
dec
dec
loopne
ret
movsb
lea
fisubrl
xlat
or
and
adc
pusha
fld
adc
sub
lea
jecxz
cmpsb
fldenv
and
pop
out
outsl
xchg
andb
mov
cli
sub
fwait
add
push
jne
mov
inc
sub
jno
xchg
dec
lcall
sub
sub
std
xchg
ljmp
or
push
xor
stc
mov
jmp
push
mov
or
scas
mov
mov
dec
cmp
lods
insl
push
fiadds
lret
xorl
gs
bnd
sub
mov
cmp
and
dec
xor
add
outsb
repnz
pop
ljmp
aam
fnstcw
or
sti
loop
ljmp
xor
lea
jmp
icebp
icebp
jo
jae
ret
add
or
or
cld
jmp
mov
imul
adc
sbb
stos
push
clc
fidivs
shl
cwtl
shr
xor
sub
jno
scas
mov
pop
jp
in
xor
sbb
inc
in
jne
xor
loope
ds
insb
lahf
les
mov
in
xchg
fs
and
stc
sbb
jl
pop
lahf
mov
mov
cmpsl
xorl
sub
sahf
sub
xchg
dec
push
sti
xor
cmp
pop
xor
xchg
add
into
sahf
sub
shl
mov
or
jmp
or
mov
icebp
jnp
push
inc
dec
jne
shrl
pop
sub
lret
mov
shlb
add
repz
push
add
inc
jno
dec
lahf
rorb
jle
mov
repnz
aad
cld
loopne
xchg
test
ljmp
out
mov
dec
pop
stos
dec
shll
rcrl
out
mov
xor
dec
adc
push
sbb
mov
je
push
cmp
ret
mov
gs
movl
mov
mov
and
fistps
dec
rorl
loope
fadds
add
movsb
cmp
dec
call
pop
and
dec
jecxz
sub
mov
stos
xor
cltd
js
sarl
fcomps
movsl
fidivs
cmc
mov
aas
clc
mov
inc
inc
adc
adc
inc
adc
dec
pop
and
mulb
inc
xor
int3
loopne
in
adc
push
mov
imul
clc
ret
push
ret
mov
int3
mov
rcrl
push
inc
pop
pop
stos
push
and
sbbl
push
mov
add
popf
xor
scas
rcr
fwait
cmc
je
jl
push
mov
pushf
inc
into
test
cmp
xor
jo
jne
xor
pop
add
mov
adc
enter
adc
scas
push
cld
call
sbb
inc
bound
dec
cli
or
jmp
push
icebp
icebp
test
jb
aas
jae
fcoms
xchg
sbb
or
in
mov
idiv
xorl
mov
pop
pop
flds
mov
ficoms
sbb
inc
sarb
in
xchg
and
xbegin
add
xor
out
aaa
sbb
aad
popf
xchg
aas
inc
sub
iret
push
mov
mov
ficoms
xorb
push
xor
pop
je,pt
decb
add
jns
mov
dec
rol
sub
pop
insb
call
hlt
int
cmp
pop
inc
int3
fnstsw
and
inc
mov
mov
mov
fmuls
jmp
stos
lahf
test
sub
loope
jecxz
gs
sti
ret
jecxz
mov
jnp
xlat
push
fstps
imul
push
and
sub
lods
jg
out
dec
adc
xlat
stos
xchg
jne
adc
jle
or
mov
dec
nop
sbb
mov
pop
lods
adcl
in
sub
cmpsb
sti
scas
and
dec
sbb
push
dec
push
mov
jns
lock
fildl
cmc
lods
or
sub
fisttps
int3
enter
or
sar
and
clc
or
mov
mov
mov
mov
orb
sub
cs
sub
sbb
push
scas
fidivrs
imul
push
jecxz
stc
lret
scas
sub
cmp
fdivs
dec
std
outsl
xchg
jle
imulb
cmp
lods
gs
sub
push
hlt
hlt
scas
push
push
mov
out
mov
push
fscale
in
mov
push
stc
mov
cmpsb
outsb
stos
ss
push
jecxz
xor
cs
adc
outsb
fsts
sub
xchg
out
and
loope
xchg
in
cmp
and
mov
jmp
pop
in
ret
mov
mull
add
mov
push
ret
add
xchg
pop
daa
repz
fucom
addb
or
gs
in
fwait
in
push
cmpsl
dec
push
adc
repz
repnz
in
out
adc
jo
fildll
sbb
repz
inc
lret
and
sbb
stos
lods
lahf
std
orb
repz
popa
pop
popa
stos
adc
in
sub
cli
xchg
sub
mov
paddw
loop
mov
stos
xchg
movl
xchg
shll
fdivs
jl
outsb
xchg
pop
dec
sbb
mov
int3
aaa
sbb
mov
push
shlb
insb
sub
push
and
mov
std
and
sbb
jge
sub
sbb
xlat
test
jl
movsl
pop
popf
cmpsb
insl
xchg
adc
test
sti
xlat
jae
ret
dec
lea
mov
idivl
add
inc
jg
inc
mov
fnstenv
loopne
and
and
insl
mov
mov
sub
je
jle
es
pushf
xchg
push
adc
pop
xchg
add
sbb
xor
call
insb
fistps
push
or
sbb
or
xor
shl
fstl
hlt
cli
pop
pop
and
dec
gs
fcmovnb
int
icebp
pusha
stos
das
nopl
mov
adc
cmp
dec
lds
push
clc
cli
add
jnp
daa
add
and
lcall
es
add
pop
push
loope
push
sahf
in
jb
orb
sbb
dec
xchg
xorb
pop
popa
test
and
test
insb
jecxz
std
fdivs
cltd
mov
push
push
xlat
ret
add
or
jmp
mov
jae
test
and
sbbl
shll
cmp
and
mov
adc
clc
or
ret
push
movsl
cmp
push
xor
fildl
in
lods
inc
or
aam
addr16
aam
mov
fisubs
call
inc
in
adc
data16
loopne
cmp
pushf
or
xchg
int
adc
and
mov
xor
inc
jae
xor
hlt
mov
xchg
add
lods
jae
pusha
jmp
fiadds
sbbb
mov
add
jmp
stc
dec
dec
or
jmp
inc
pop
adc
cltd
mov
jmp
sub
xchg
scas
aad
adc
pop
inc
lret
push
hlt
sbb
sbb
and
inc
cltd
add
stos
pop
movsb
fs
ja
icebp
int
sbb
into
cmp
pop
jb
mov
xor
dec
clc
xchg
xor
lret
cmp
mov
out
mov
push
fdivrs
mov
jmp
stc
popa
xor
int
movsl
inc
rcll
int3
addr16
push
push
push
daa
or
mov
loope
or
and
inc
movsl
push
fldenv
fwait
js
mov
xor
cmp
icebp
and
push
sub
pushf
add
fisubrl
test
das
je
out
lods
pop
pop
or
cmpsb
lahf
add
ret
xor
test
sub
xor
mov
cmp
ljmp
lods
pop
addr16
mov
lret
fwait
test
pop
cwtl
mov
int3
adc
jecxz
roll
or
and
and
pop
xor
roll
stos
xchg
call
mov
jmp
jg
in
mov
jae
jl
mov
add
addr16
fnstsw
push
xchg
cmp
cmp
stos
dec
inc
daa
stos
push
loopne
push
xor
or
sahf
lds
pop
mov
cwtl
movsl
dec
scas
lahf
and
idivl
jne
stos
adc
fsubr
iret
ret
mov
movsb
mov
subb
add
fstpt
in
adc
clc
ret
cmpsl
loop
xlat
mov
pop
push
jnp
popf
test
push
push
xchg
loopne
inc
pop
sbb
cmp
dec
add
subb
into
jb
mov
loope
hlt
out
movsl
push
gs
pop
ljmp
mov
sub
mov
jecxz
jge
inc
mov
pop
rorb
movsb
clc
pop
and
ja
mov
mov
cli
fimull
mov
pop
fiadds
and
inc
cmpsb
mov
lock
popl
aas
ficoml
mov
add
repz
sbb
inc
sub
xchg
or
xor
jecxz
xor
outsl
or
sti
inc
jo
mov
xchg
mov
pop
adcb
mov
or
sbbl
fs
mov
or
xchg
push
into
lds
les
or
ja
dec
adc
movsb
sar
aas
jg
cmp
movsb
mov
mov
cmp
push
fwait
lahf
push
cmp
xor
sub
mov
mov
jmp
add
jns
arpl
lods
adc
les
ret
pop
inc
pop
lods
idivl
mov
fs
adc
ss
cmp
xor
adc
stc
dec
cmc
cs
inc
sub
dec
fisubrl
cmp
xor
mov
xchg
mov
fdivrs
addr16
cmpsb
in
out
xchg
xchg
or
clc
mov
add
loope
nop
sbbb
jge
and
push
xlat
mov
xlat
daa
push
sub
fisubrl
sub
fnstenv
and
or
pushf
decl
cmp
add
cwtl
clc
ja
in
mov
adc
pop
dec
lcall
jl
push
push
xchg
fwait
push
cmp
outsb
out
jmp
ret
xor
inc
or
mov
lahf
mov
pushf
lret
adc
sub
movsb
cwtl
arpl
stos
out
sbb
popf
sbb
adc
mov
mov
push
cld
in
sbb
insl
and
fstps
push
out
pusha
jl
gs
pop
xchg
repnz
mov
out
loop
adc
jne
ljmp
insb
sbb
nop
cmc
dec
adc
scas
stc
mov
jo
jb
push
ds
mov
leave
jg
fimuls
and
rorl
lret
sub
and
mov
cmpl
test
out
push
xor
js
fnstenv
and
fdivs
imul
rcll
notl
cmp
lret
stos
lret
mov
addr16
push
and
add
in
lods
mov
or
sub
imul
push
mov
pusha
cld
push
push
cs
jmp
ret
push
xchg
xchg
mov
lcall
jae
leave
push
cmp
out
lea
repnz
mov
aam
xchg
xchg
bnd
imul
in
mov
fs
mov
dec
out
aad
stos
inc
cli
pop
jb
stos
jmp
dec
mov
dec
lea
push
jb
cmp
jge
mov
test
pop
cltd
mov
xchg
adcb
mov
inc
pop
push
mov
lods
xchg
add
je
pusha
rep
sub
mov
inc
int3
bound
roll
jbe
pop
mov
jg
popf
add
jno
cld
mov
fistps
mov
jnp
loop
jbe
insl
scas
das
adc
cmp
add
insb
arpl
in
push
insb
movsl
ret
dec
loop
sub
sahf
shll
gs
sbb
cs
cmpl
sbbl
stos
icebp
cmp
movsb
and
or
push
mov
jp
push
mov
lcall
aas
fnsave
lds
sbb
sarl
fidivrs
enter
in
sarb
jns
mull
or
push
out
pop
shrb
sbbl
icebp
ja
cmp
insb
js
insl
hlt
sti
sarl
xor
inc
leave
mov
push
out
jmp
xlat
lods
mov
aaa
nop
fistpll
mov
shld
in
scas
rorl
aad
fstpl
pop
ss
roll
lock
aaa
outsl
nop
popf
mov
xchg
jl
push
xor
add
xchg
and
enter
test
mov
int3
sbb
cmc
and
xchg
inc
cli
das
js
sub
adc
cmpsl
cs
rcrb
pop
negl
pusha
push
mov
jns
jo
stos
movsb
xchg
js
and
stos
adc
insl
out
add
dec
rclb
cmp
xor
mov
sub
cmp
pop
cs
adc
push
pop
out
xor
loopne
push
out
pop
pop
pusha
sub
in
xor
push
xchg
dec
shl
lret
dec
mov
xor
or
mov
or
pop
sahf
pusha
push
es
imul
pop
pop
les
pop
xchg
xchg
dec
scas
repnz
dec
aam
mov
xor
cmp
add
int3
or
shr
clc
scas
jl
push
and
jge
test
xchg
ds
jecxz
pop
mov
jno
mov
and
xor
rcrb
mov
nop
out
rcl
mov
mov
jmp
cmp
or
and
pop
mov
es
sbb
outsb
mov
push
insb
loope
pop
jne
lds
mov
jecxz
fsubrl
mov
decb
arpl
rolb
push
fsubs
xor
cltd
mov
outsb
dec
mov
repz
shlb
add
icebp
fdiv
sbb
bound
cmp
xchg
pop
sbb
pusha
sub
inc
test
or
pop
dec
lret
mov
sbb
sbb
test
cmpsl
or
sbb
sub
in
push
into
sbb
mov
jle
sub
pop
pop
test
fs
ret
jae
sbb
ret
dec
popl
push
imul
pop
push
dec
push
add
sbb
mov
rorl
leave
out
cmpsb
aam
and
daa
outsb
lret
and
sbb
push
nop
repnz
xchg
cli
xor
lods
mov
into
fsts
push
mov
inc
and
mov
jns,pn
inc
mov
mov
mov
ds
daa
mov
lods
daa
jp
stc
inc
aam
cmpsb
imull
jbe
jo
mov
cltd
jge
repz
nop
xchg
mov
fwait
mov
out
and
dec
sarb
enter
cmc
divb
add
cmp
xchg
sbb
dec
or
pop
pop
sub
notl
mov
or
popa
mul
insl
sahf
psrlq
xchg
ja
adc
sti
push
sbb
mov
push
ja
in
mov
dec
out
imul
scas
movsl
lahf
cmpsb
dec
jae
lret
icebp
push
jae
lahf
pushl
mov
jb
xchg
and
push
dec
pop
add
adc
sub
and
imul
hlt
adc
mov
sbb
cmp
pop
fs
dec
mov
jge
pop
mov
call
arpl
lds
push
mov
addr16
mov
xor
xor
rcrl
push
repnz
test
sti
leave
rorl
outsl
sub
inc
dec
push
lds
inc
push
mov
adc
andb
lcall
imul
pop
daa
cli
das
xchg
fdivrl
push
dec
push
lret
pop
or
xchg
cli
daa
mov
jbe
aam
imul
in
fbld
into
sub
les
out
or
les
jae
pop
mov
stc
and
xor
outsl
sti
pop
repnz
fcmovu
ret
dec
bound
or
jb
inc
js
adc
sahf
sti
mov
and
pushl
jbe
iret
adc
shll
movsb
cmpsb
mov
sbb
mov
pushw
loope
ss
mov
mov
fs
shll
pop
daa
push
mov
mov
mov
enter
popa
mov
aaa
clc
add
add
cli
inc
daa
and
js
jge
push
mov
dec
or
mov
jb
test
mov
mov
ret
push
jae
ret
dec
inc
adc
jno
sub
les
ja
movsl
clc
lret
cmp
pop
push
mov
xor
xor
aas
inc
pop
cli
add
pop
mov
inc
ret
inc
stos
stos
dec
push
push
rcr
loop
inc
call
outsb
hlt
das
xchg
jmp
mov
and
fdivrs
arpl
adc
arpl
add
cmp
inc
cmp
mov
xor
xor
dec
stos
daa
jecxz
add
pop
dec
jne
adc
dec
arpl
xchg
mov
iret
cli
pop
mov
xchg
test
fxch
pusha
push
popf
adc
adc
movsl
lret
add
cmc
fnstenv
sub
scas
jg
movhps
dec
and
mov
push
rcrb
mov
cmp
add
and
push
out
push
pop
repnz
popf
mov
xor
mov
cwtl
add
jbe
repz
jo
rcrl
adc
pop
sub
and
mov
loope
or
lods
aad
ret
add
mov
sbb
insb
mov
cli
rorb
repnz
or
sub
in
adc
dec
les
xor
jae
imull
lods
jne
rorl
push
mov
mov
dec
or
and
jg
sbb
out
mov
pop
addr16
lods
push
das
pop
dec
daa
dec
xchg
and
sub
cli
cmovns
sbb
mov
mov
fdivrs
pop
or
movsl
mov
and
sbb
les
jns
popf
xchg
fsave
loopne
icebp
cmp
cmpsl
jmp
jl
out
xor
sub
sub
ret
out
out
adc
dec
push
out
leave
jecxz
sbb
loope
push
fwait
popf
out
icebp
xor
pop
rcll
shll
cmp
inc
mov
inc
inc
fmuls
mov
fwait
sahf
pushf
xor
gs
push
loop
push
repz
inc
adc
add
in
sahf
inc
xor
dec
mov
leave
fadd
out
mov
fs
adc
fcompl
mov
xchg
sub
out
pushf
out
dec
movsb
frstor
movsb
jecxz
adc
adc
iret
in
cmp
sbb
jge
loope
imul
rorb
adc
dec
fdivp
mov
push
xor
aas
inc
daa
stc
das
es
loop
movsl
addr16
lret
in
cmc
xor
adc
cmpsl
mov
xchg
push
ret
jecxz
loopne
hlt
hlt
add
lods
xchg
jmp
and
jnp
imul
cwtl
fists
ss
addr16
js
call
mov
push
testb
add
cmp
lret
mov
sbb
pusha
sub
dec
jp
loopne
xlat
sbb
push
adc
adc
push
jb
cmp
add
les
adc
shll
sub
adc
data16
shlb
sarl
mov
rcll
ret
lods
int3
jno
or
iret
or
push
cmpsl
jg
or
jmp
aad
es
pop
mov
mov
and
pop
je
sbb
femms
call
call
push
lret
mov
pusha
cmp
popa
mov
cmp
stos
insb
sub
jle
iret
les
mov
inc
loopne
pop
mov
imul
pop
lahf
jno
and
movntq
subb
push
lret
cmpsb
out
xlat
rcrb
enter
adc
cli
mov
add
notb
sub
movsb
imul
jb
and
shll
inc
std
mov
adc
push
or
leave
push
adc
into
out
or
fdiv
xchg
jecxz
or
push
fwait
inc
cli
ret
fnstcw
push
jno
mov
cmp
aaa
xor
in
cmpsl
outsl
lcall
leave
aam
or
call
out
iret
cmp
inc
lods
aaa
jge
repnz
mov
adcl
adc
inc
gs
ljmp
ss
cmpsl
push
mov
gs
orb
out
lods
js
out
ror
cmp
rcl
not
pop
push
pushf
sbb
pop
inc
xor
dec
out
xor
cmp
iret
test
cmp
dec
lea
fiadds
outsb
cltd
or
mov
ljmp
adc
and
xorb
adc
imulb
clc
shll
sbb
fistpl
hlt
scas
fsubrs
daa
pop
sub
roll
jg
sbb
inc
mov
enter
inc
jp
inc
jb
fstps
mov
or
daa
add
out
push
xchg
jb
or
in
sbb
dec
fstpl
lock
mov
sbb
cmp
jb
lahf
andl
sarb
mov
sbb
ja
jge
imulb
mov
adc
inc
fprem1
ret
jae
insl
mov
dec
jno
or
cwtl
or
jl
inc
push
sti
fsubs
sar
push
adc
xchg
lock
mov
and
test
jns
decl
cld
sub
mov
or
orl
repz
sub
pop
push
add
mul
scas
negl
inc
mov
add
jle
xchg
lods
stc
fwait
test
xchg
push
sub
push
idivb
dec
xchg
std
mov
lock
or
rcl
and
aaa
push
jmp
jecxz
mov
clc
jae
out
sub
and
hlt
cmpsb
pop
mov
cmc
and
dec
inc
repnz
scas
pop
jno
mov
jge
lea
ret
jae
icebp
out
jg
mov
cmp
cmp
or
jno
andb
jb
jnp
into
add
into
xchg
pop
push
imul
sahf
adc
test
lea
movsl
ret
cmc
push
and
jns
sbb
shl
dec
aas
fcmovnb
pusha
adc
mov
icebp
sub
mov
inc
pop
sub
mov
testb
inc
out
mov
jl
fsts
xor
jae
test
jnp
ror
ja
mov
jecxz
jg
lret
in
xchg
mov
lods
test
es
pusha
dec
jecxz
scas
mov
cmp
popa
test
insl
sbb
stos
xchg
les
lret
cmpsl
sbb
outsb
in
imul
or
push
movsb
cmpsl
loop
arpl
dec
or
scas
sbb
loope
ret
movsb
inc
sbb
mov
mov
std
inc
push
call
stc
jne
xor
inc
mov
loop
mov
fistpll
iret
lock
sub
xchg
cmp
aam
lods
stos
cwtl
shlb
inc
scas
jb
mov
xor
adc
sub
aaa
les
imul
xchg
pop
adc
je
xchg
outsb
cmovp
mov
add
fabs
add
test
out
movsb
dec
imul
pop
mov
inc
sbb
xlat
ljmp
adc
mov
or
int3
sbbl
bound
jmp
xchg
sub
and
in
mov
adc
pushf
inc
adc
int
jg
pop
out
aad
xor
xor
lea
int
sbb
pop
mov
push
jg
negb
xchg
mov
dec
insb
lret
stos
ja
or
ss
icebp
shlb
fiaddl
and
mov
cltd
insl
dec
cmp
fildll
inc
sub
rolb
mov
sbb
xor
mov
cwtl
add
dec
addr16
popf
push
pushf
cmp
loope
mov
mov
shrb
lahf
mov
jecxz
in
jbe
sbb
aaa
shrl
sbb
clc
sbb
popa
mov
cld
popf
in
xor
push
push
and
imul
dec
cmp
lds
sub
into
lret
jno
mov
dec
sbb
rolb
jge
pop
vpmadcsswd
pop
lcall
fwait
adc
repz
add
loopne
jbe
sbb
out
dec
mov
insb
pop
loope
inc
int3
addr16
test
loope
push
subb
sub
dec
lods
divb
in
or
mov
es
out
or
in
and
jb
dec
adc
xor
mov
pusha
xor
inc
xchg
cs
xor
dec
xlat
in
sub
add
mov
inc
out
je
out
sbb
push
lea
ss
insl
mov
xorb
sub
or
add
lods
sbb
add
inc
outsb
sub
xchg
xor
insb
aas
hlt
js
movsb
lret
stc
mov
ss
ljmp
add
dec
inc
stc
dec
std
mov
arpl
cwtl
lds
dec
inc
in
out
insb
out
cmp
aaa
pop
cmpsl
jge
nop
or
ret
aam
hlt
jl
xor
sub
movb
ljmp
mov
lods
sarb
sbb
test
lret
xchg
cmp
push
fcmovu
ss
jp
fs
mov
xchg
add
pop
inc
mov
hlt
call
clc
jo
lret
lods
jns
stos
inc
dec
mov
es
sub
sbb
fdivr
push
or
or
enter
xlat
out
stc
pop
adc
push
cli
cmp
addl
adc
outsb
xor
lock
push
adc
mov
das
mov
xchg
or
mov
cwtl
jg
fsts
cmpsl
pop
sar
jae
fistl
or
in
out
dec
push
into
popa
outsb
mov
xchg
out
ret
push
xor
xorb
cmp
mov
movsl
andb
lret
lret
push
xor
lods
cwtl
lret
iret
inc
or
lret
dec
movsl
andb
movsl
jae
ror
ret
jmp
repz
dec
scas
dec
pop
inc
fisttpl
sbb
ret
and
sbb
dec
pusha
jge
push
inc
jmp
call
jge
cmpl
adc
adc
es
xchg
mov
fimull
sbb
and
push
data16
mov
lret
leave
add
and
pop
sbbl
xlat
shr
or
xchg
sub
fdivrl
dec
inc
pop
pop
mov
lcall
bound
adc
lods
push
out
int3
aaa
movsl
shll
xor
or
fbld
add
pop
sbb
add
inc
loopne
out
lret
mov
jecxz
xor
xor
call
fs
hlt
es
cld
incb
rcll
jge
mov
mov
mov
jmp
jbe
clc
dec
adc
mull
xor
push
inc
xor
mov
mov
jecxz
or
loopne
push
jae
push
inc
sub
add
jo
cmp
das
xorb
adc
cmpsl
jg
subl
lret
cmp
into
andl
repnz
inc
mov
adc
pusha
js
sbb
add
shrb
pop
mov
dec
mov
fiaddl
ja
xor
xchg
data16
mov
adc
push
mov
in
mov
sarl
rorb
int3
push
push
cltd
int3
pushf
insb
loop
add
sbb
xchg
jp
mov
fsts
fsubrs
push
push
jg
mov
xlat
ret
sub
adc
cmpsb
fs
daa
sub
mov
push
and
xchg
mov
shr
push
xchg
rcrl
mov
cmc
ficomps
pop
push
mul
pop
xor
jnp
fisubrl
xor
jp
scas
aad
pop
and
push
pusha
and
test
push
ret
add
test
jnp
jno
ret
popa
sub
jp
push
add
lods
ret
xchg
xor
jg
mov
fdivrs
mov
inc
js
xchg
mov
jl
pop
enter
cltd
int3
push
sub
out
push
cmp
mov
out
mov
leave
cs
test
adc
daa
and
push
imul
daa
sub
and
pop
inc
jl
cs
push
or
in
f2xm1
dec
adc
or
in
mov
pushf
or
pop
add
pop
dec
cli
xor
jge
mov
inc
rcrl
sarl
data16
lods
pop
push
push
cwtl
mov
fstpt
cmpsb
fwait
jp
mov
andl
bound
nop
xchg
movsb
adc
xchg
inc
dec
mov
int
push
cmp
gs
arpl
xor
jmp
ljmp
pop
mov
testl
mov
test
push
push
cmp
xchg
jae
dec
push
insl
mov
dec
inc
insl
mov
dec
aaa
imul
fwait
data16
rclb
jecxz
mov
lret
push
scas
test
dec
sub
xor
dec
enter
ret
push
pop
out
cmp
mov
add
mov
aam
fs
xchg
popf
rcll
pop
sbb
jge
and
out
mov
loop
pop
out
ret
cmp
xchg
ss
jge
xor
sbb
je
or
jg
ds
xchg
cmp
fimull
cmp
arpl
cmc
mov
test
push
mov
hlt
movsl
push
dec
or
pop
incb
lahf
and
mov
xchg
fisubrl
aaa
fbld
mov
xor
push
punpcklwd
in
stos
test
dec
test
hlt
xor
dec
repz
aas
mov
cmpsl
push
or
fdivl
pop
divb
jnp
mov
out
jnp
rorb
sub
int
fcmovbe
jbe
cmpsb
add
sbb
clc
mov
xchg
mov
popf
sub
imul
jg
outsb
cld
sti
cmp
cmp
sbb
jle
arpl
inc
cmp
and
fisubrl
out
pushf
mov
push
mov
adc
test
push
cmpsb
cmp
inc
mov
dec
enter
imul
es
fimull
das
int3
call
into
mov
out
loope
mov
pop
lods
sub
dec
imul
pop
and
aaa
xchg
xchg
stos
loop
jl
mov
jg
mov
cmp
dec
pop
xchg
xchg
subl
scas
jge
cmpb
dec
add
out
jne
mov
movsb
lea
sub
or
iret
pop
sub
adc
sbb
mov
sbb
inc
aaa
jg
sahf
cmpsl
das
repz
cltd
inc
mov
loop
jae
outsb
jge
or
or
imul
pop
mov
iret
notl
cld
sti
jp
cld
adc
sbb
mov
dec
test
and
cmpsl
and
xchg
pop
cld
fnstenv
rorb
and
xor
ficompl
push
sahf
mov
test
clc
scas
pop
push
xchg
or
push
sub
sub
addr16
jae
outsl
shl
fsubrs
xchg
aas
push
inc
test
push
pop
and
ljmp
and
out
adc
test
mov
loop
add
icebp
sub
adc
jge
or
or
push
inc
test
xchg
push
push
test
or
loope
inc
pop
adc
loope
lods
mov
rcrl
scas
les
insl
jmp
nop
cltd
fistpll
xchg
stos
or
sub
fisubrs
sub
lret
fwait
pushl
test
push
xor
es
mov
mov
sub
add
dec
cmpsb
adc
push
lcall
mov
stc
or
imul
das
jae
push
insb
dec
insb
sbb
test
dec
mov
movsl
xchg
mov
rclb
jb
push
sbb
mov
fstpl
test
dec
sub
xor
cmp
out
rolb
jae
xchg
popa
stos
gs
cmp
and
stos
ficompl
push
mov
icebp
sub
pop
testb
int3
sbb
cmp
in
inc
sti
jo
jnp
aaa
lahf
and
xor
sub
mov
arpl
mov
xor
or
sub
cmp
dec
adc
push
cmc
ja
pop
imul
jbe
cld
xor
addr16
leave
bnd
sbb
jbe
les
mov
pop
scas
cmp
incb
sub
dec
sub
enter
dec
inc
bound
test
lahf
push
pop
in
push
jge
push
and
jb
push
push
popf
mov
xor
stc
cmp
xlat
pop
stc
and
orl
sbb
test
dec
sarb
mov
cmp
scas
out
mov
daa
stos
pop
mov
dec
adc
dec
push
fsubp
test
loop
and
lahf
push
pop
dec
popf
xchg
or
mov
jb
ret
add
inc
push
lea
inc
inc
fstpl
das
push
pop
shl
mov
sub
mov
and
xor
sbb
mov
push
mov
cmp
out
or
push
loop
cmp
mov
pop
pushf
enter
sbb
mov
or
aaa
in
cmp
ret
sbb
inc
jg
fld
ss
sbb
dec
and
std
jne
sbb
cmp
js
mov
cmp
jb
mov
jns
gs
xchg
adc
inc
in
fcmovnu
mov
loop
pop
mov
mov
mov
cmpsb
data16
cmp
shrb
jge
lods
sbb
cmpsb
loope
or
scas
fucom
into
stos
nop
xchg
fistpll
push
mov
in
cmp
push
inc
es
pop
testb
lcall
imul
test
dec
gs
loopne
push
cmp
push
and
ret
gs
pop
push
outsl
hlt
adc
push
and
xor
out
test
add
and
xor
jecxz
in
negl
cmp
cltd
push
test
xlat
adc
mov
idivl
dec
jecxz
adc
mov
jmp
xor
stc
mov
lock
addr16
ret
and
addr16
divb
sbb
adc
push
fistpl
and
mov
push
rcrl
adc
cmp
mov
aad
fwait
and
sub
xchg
add
gs
ja
inc
push
dec
xchg
clc
data16
clc
gs
fs
out
cs
xchg
stc
xchg
dec
int
add
cmp
lea
fnsave
push
pop
test
shlb
stos
sub
pop
fisttpl
insb
mov
sub
xchg
int3
iret
mov
and
pusha
mov
fdivp
lods
cld
dec
enter
stos
das
jnp
stc
into
je
shr
xbegin
xor
jae
pop
mov
cwtl
cwtl
jo
dec
scas
das
mov
arpl
xlat
mov
and
pop
add
ficompl
inc
push
inc
jno
test
sahf
rclb
imul
adc
out
pop
mov
lret
fs
jno
repz
daa
push
cmpsl
adcl
lds
out
sahf
rol
cmpsl
sub
mov
popf
cmp
dec
cmp
mov
jg
andl
push
cmp
sbb
jns
call
sbb
dec
pop
daa
movsl
or
push
fldcw
rolb
bound
leave
sub
ljmp
mov
shlb
and
sbb
add
jne
lcall
jmp
mov
adcl
stos
into
or
cmpsb
mov
call
mov
pop
jl
movsl
hlt
xchg
scas
mov
xchg
out
out
inc
js
lods
xor
cmp
insl
lea
push
and
jno
arpl
xchg
or
or
pop
test
jecxz
xorb
mov
push
ljmp
push
fwait
pop
aad
ret
xchg
lret
mov
in
gs
push
add
mov
mov
pop
gs
movsl
into
sub
lods
pop
jnp
int
sbb
sti
aam
stc
loopne
inc
ficoml
jno
loop
les
and
or
inc
aad
roll
in
loop
mov
inc
pop
push
stc
mov
shll
lahf
daa
mov
stc
scas
lods
jge
sub
mov
cwtl
js
scas
or
vmovdqu
ljmp
fidivl
in
call
test
push
pop
push
pop
pop
aaa
pop
in
stc
xchg
or
cmp
mov
gs
int3
ret
icebp
xor
xchg
xlat
sbb
push
push
lahf
imulb
popa
into
std
sub
insb
xchg
mov
pop
int
ljmp
and
inc
xchg
bound
mov
daa
data16
lock
xchg
push
scas
add
scas
push
movsl
jp
jge
sbb
xor
shrb
sub
movsb
xchg
repz
lcall
pusha
xchg
data16
sbb
jg
xlat
and
inc
arpl
xchg
push
pop
lock
and
cmp
or
sbb
cltd
cs
jl
push
bound
cmpl
addr16
pusha
outsb
clc
mov
dec
add
repnz
int
pop
mov
js
mov
int
mov
leave
pop
ret
ds
or
cmp
mov
cli
pusha
fs
outsl
insb
lahf
mov
jl
xchg
jp
lcall
dec
pusha
mov
movmskps
imul
jp
movsl
enter
dec
jbe
outsb
loope
add
xchg
pop
push
arpl
mov
xor
mov
inc
dec
data16
dec
aas
mov
lcall
inc
mov
int
push
mov
mov
pop
sub
mov
and
xchg
mov
mov
add
fwait
ss
addl
shrb
int
js
ret
lcall
test
shll
xor
out
test
sub
mov
xlat
fcoms
dec
sahf
faddl
or
pop
imul
fistps
rcrl
push
fiadds
shl
nop
movsb
test
mov
add
rol
pop
insb
push
jg
and
loop
aad
push
fistps
and
cmp
test
movsl
out
leave
xor
mov
mov
sarb
push
mov
ja
inc
inc
cwtl
sbb
andb
int3
inc
rcr
loopne
mov
xchg
jle
hlt
inc
mov
or
sub
aam
popf
aam
xchg
jge
mov
insb
in
or
inc
jnp
xor
cltd
repnz
cmp
sbb
cltd
dec
push
adc
cmp
jnp
pop
pop
mov
push
fcoml
test
sub
cwtl
in
unpckhps
lahf
fstps
sub
loopne
and
pop
ficomps
fs
shll
test
mov
aam
mov
cmpsl
jbe
pushf
mov
cli
jnp
mov
lahf
repz
add
pop
push
idivb
mov
ds
add
enter
ror
cmpb
outsl
std
repnz
mov
out
mov
xchg
mov
test
ss
xor
push
pop
push
adc
xchg
push
out
or
sbb
gs
jmp
push
repnz
sbb
icebp
stc
pushf
cmp
lods
imul
daa
rcrl
fldcw
jno
leave
aam
sub
cmp
cmp
outsb
call
inc
jnp
mov
movsl
pop
jecxz
dec
pop
lret
fstpl
pop
leave
mov
and
incb
cmp
jnp
rolb
push
sbb
smsw
push
push
mov
sub
jmp
aad
das
das
xor
jg
test
fsubp
jl
into
jp
push
aam
ficomps
arpl
mov
or
mov
pusha
pop
mov
jo
loop
push
mov
lret
in
dec
adc
dec
ror
mov
sub
sbb
out
pushf
mov
mov
hlt
xchg
mov
insl
fdiv
test
aaa
addl
jmp
das
adc
pusha
push
inc
lahf
adcl
sub
bound
sbbl
mov
xchg
or
inc
rcr
mov
in
jg
mov
pop
mov
imul
mov
pop
adc
frstor
mov
ret
pop
cltd
add
xlat
dec
clc
clc
gs
std
ret
mov
xchg
xchg
mov
jecxz
ljmp
bound
dec
lahf
sbb
shlb
jbe
mov
cltd
lods
sbb
mov
and
popa
adc
mov
adcl
cmpsl
test
das
mov
xor
mov
daa
lds
dec
fbstp
jle
mov
mov
pop
or
fcomps
orl
outsb
sahf
adc
push
inc
mov
in
lods
and
or
push
cmp
jns
and
adc
iret
or
in
pop
mov
sbb
enter
pushf
je
std
mov
sub
lods
clc
jbe
bound
dec
cmpsl
sbb
lock
repz
js
outsl
jmp
xchg
xchg
ss
xchg
outsb
cmpsb
sub
lods
mov
mov
out
xchg
mov
insb
inc
xor
xchg
ret
push
mov
sbb
mov
mull
lret
sbb
xchg
mov
icebp
lahf
ds
bound
dec
ja
out
iret
bound
jbe
mov
push
js
movsl
inc
cmpsl
in
shll
inc
jl
fstpt
jg
cmpsb
scas
mov
aas
pop
fidivl
mov
jae
shrb
dec
push
inc
inc
pushf
es
neg
sbb
out
mov
int
enter
jno
mov
aad
or
jns
popf
dec
push
lcall
adc
jno
sbbb
jg
inc
pop
mov
inc
and
lods
jmp
loopne
cld
into
sub
movsl
mov
sbb
pop
mov
mov
push
ret
or
lds
mov
popa
push
xchg
cmp
push
push
dec
xor
jl
or
pop
movsl
rcrb
jl
test
inc
sbb
mov
jecxz
dec
and
cmp
stc
daa
and
loop
idivl
or
cli
mov
int3
mov
add
and
mov
cli
xchg
or
cli
iret
inc
mov
fs
cwtl
lahf
bound
cmc
sti
mov
mov
xor
adc
rorb
pushf
inc
mov
ja
pop
add
cmpsl
add
mov
cmpsb
nop
scas
xchg
lretw
dec
rclb
dec
jns
cmp
lea
rol
stc
add
cli
xor
fwait
cmc
jmp
push
test
sub
in
mov
mov
mov
and
loopne
test
rclb
fildl
push
sub
pushf
jno
add
repnz
jno
es
push
ds
fcomp
inc
cmpsb
or
push
mov
add
and
shll
add
xor
cmp
addr16
shl
xchg
sahf
mov
pop
jmp
push
movsl
scas
loopne
lds
addl
jns
bound
hlt
data16
repnz
mov
lahf
xchg
pop
cld
scas
lods
push
jne
sarl
adc
loope
cmpsb
add
in
std
xor
cld
ja
popa
push
mov
cltd
xchg
mov
sbb
negb
rcrl
add
sbb
ffree
lcall
mov
ja
xor
xchg
xlat
mov
js
fst
jp
ljmp
js
icebp
jb
lcall
loopne
and
push
lret
pop
dec
cld
push
es
imulb
clc
push
mov
and
ljmp
ficoms
jge
sub
cwtl
jl
scas
icebp
lea
fists
inc
or
ret
lahf
outsl
dec
sbb
jecxz
addl
popf
xor
in
pushf
out
out
push
arpl
adc
mov
xor
mov
je
jp
sub
mov
jp
adc
xor
addb
popa
cmp
mov
ljmp
cmpsl
inc
or
rcrl
add
mov
out
pop
xlat
shll
mov
dec
paddsb
addr16
test
jecxz
mov
jae
divl
mov
jmp
cld
push
cltd
dec
jnp
push
ficompl
sub
movsb
xlat
pop
adc
sub
pop
xchg
push
mov
adc
int3
nop
push
jb
mov
mov
std
mov
mov
add
sbb
shlb
js
hlt
cmpsl
call
push
add
and
pushf
jmp
ja
cmp
ret
popf
push
jp
and
fimull
dec
cmp
aad
xchg
or
lret
testb
push
mov
xchg
push
pop
sub
hlt
das
test
loope
mov
adc
fwait
ljmp
jo
push
aad
je
dec
insb
push
or
jb
lret
int3
and
into
mov
push
push
test
adc
movsl
mov
and
xchg
mov
fmulp
pop
in
roll
mov
mov
and
push
mov
adc
mov
lahf
test
sub
aas
fidivrs
push
fimuls
cmpl
inc
xor
mov
js
ja
sbb
es
xchg
cmc
lahf
push
mov
mov
pushf
xor
lret
popf
mov
jmp
cltd
movsb
in
out
jp
scas
cltd
insl
sub
in
cmpsb
dec
outsb
sub
mov
mov
ds
push
nop
mov
jge
sub
xorb
pop
shrb
mov
xchg
xchg
in
pop
rorb
addl
fcompl
cmp
push
leave
pop
hlt
jo
sbb
pop
jne
jbe
lods
out
arpl
add
or
out
pop
cmp
sub
shrb
or
add
test
mov
out
inc
add
xor
lcall
add
jo
xchg
rcr
mov
lods
adc
xchg
push
movsl
xor
lret
push
xor
xor
mov
pushf
cmp
popf
call
cmp
mov
fsubrs
xor
in
jnp
cmc
icebp
shlb
sub
push
jmp
into
subb
dec
push
mov
mov
adc
jo
dec
imul
push
mov
into
scas
jecxz
test
stos
fistl
cmp
cmpsl
loopne
cs
xchg
push
xorl
sub
mov
jle
dec
imul
pop
scas
aad
aas
aad
xor
lret
repnz
pop
pop
cs
dec
push
sbb
and
in
adc
cmp
mov
jbe
push
aad
push
aaa
hlt
dec
xor
stos
xor
sbb
out
int
xor
popf
mov
xchg
ret
pop
xchg
rcr
mov
ret
mov
rcrl
push
adc
lret
mov
pushf
or
and
jae
cmpsl
pusha
bound
fcompl
push
int3
push
imull
xchg
lock
push
lcall
cmpsl
jbe
inc
hlt
insb
pusha
imul
push
imul
cmp
out
test
sbb
icebp
in
imul
cmpl
lahf
adc
addr16
sub
rorl
add
call
ja
shr
and
xchg
mov
xor
aas
mov
shll
fwait
push
pop
sar
inc
or
jmp
mov
imul
add
fstl
adc
idivb
or
sbb
subb
adc
stos
mov
sbb
adc
ja
inc
rorb
movsb
idivl
push
cmpsl
lahf
push
out
sub
clc
fdivl
repz
jne
out
arpl
push
jns
lods
push
sub
pop
negl
lret
rclb
lods
inc
cld
in
das
cmc
lret
mov
out
push
aas
xchg
fldt
or
loope
sub
outsb
and
je
adc
adc
gs
jmp
bound
loope
pushf
loop
jmp
mov
or
pop
mov
lods
or
xor
popf
andb
pop
cmp
pop
rclb
cld
sub
sbb
jne
fwait
xchg
mov
sarl
lret
mov
cmp
jp
mov
and
inc
in
dec
js
push
sub
ja
subb
jl
inc
js
adc
rcrb
pop
shrl
fnstcw
push
sbb
lods
xchg
rcl
leave
loope
mov
and
jo
fs
jb
adc
xor
mov
cmp
pop
cmp
inc
ret
pusha
cmp
xchg
iret
js
ss
ficomps
pop
or
adc
sbb
hlt
mov
into
popa
xlat
and
test
adc
ret
outsl
test
outsl
push
jns
xorb
jle
xchg
pop
push
ficoms
add
subl
mov
lods
lds
sub
dec
or
adc
stos
lds
mov
add
lods
dec
pop
les
adc
repnz
push
bound
sbb
push
mov
ja
loope
cmp
ds
int3
mov
lret
lahf
lock
out
mov
mov
jbe
popf
incl
sbb
mov
stos
sarb
or
das
les
jb
push
repnz
mov
out
dec
cmp
test
loope
data16
mov
add
jno
jne
in
sarb
fmulp
aas
popf
and
lcall
sub
mov
test
push
nop
gs
inc
ds
mov
push
ljmp
lods
push
pop
xor
jmp
imul
std
adc
push
icebp
jnp
les
js
mov
sub
bound
stos
lea
jl
cltd
outsl
les
aas
mov
mov
shlb
cmp
clc
std
lds
jge
sub
dec
jae
fucomi
daa
loopne
sub
pop
sbbb
int3
xlat
fs
cmp
cmp
daa
cmp
and
pop
xchg
pop
pushf
stos
daa
xor
aad
mov
mov
or
lds
push
jno
lcall
sub
stos
in
mov
mov
fildl
hlt
fcmovne
iret
mov
loopne
ja
or
iret
jb
xor
adc
movsl
fwait
gs
xor
test
loop
test
mov
pop
or
out
sti
test
adc
bound
jno
mov
inc
mov
xor
pop
insl
dec
push
imull
pusha
lret
cmp
pop
cmp
test
xor
bswap
movsb
and
je
les
aaa
inc
rol
and
dec
cmp
aas
enter
pop
in
out
movsb
test
loopne
or
leave
cltd
aaa
jo
test
lret
adc
mov
dec
push
pop
mov
add
cli
in
es
cltd
dec
xchg
cmp
test
arpl
aad
fildl
jmp
push
dec
data16
test
pop
je
repz
dec
push
xchg
or
lds
es
jmp
push
sub
sub
mov
dec
jns
dec
push
inc
xchg
cmpsb
mov
sub
fimuls
inc
lods
ds
iret
leave
out
sub
orb
or
inc
ss
lods
fimull
cmp
mov
mov
xlat
or
lods
fnsave
xor
js
fdivrl
jmp
xrelease
and
ja
shlb
and
fnsave
pop
push
call
jbe
cltd
test
clc
addl
push
icebp
cmpsl
fistps
sti
movsb
push
bndldx
adc
xchg
jne
mov
jle
mov
sbb
cmp
mov
out
iret
filds
imul
mov
enter
mov
popf
mov
pop
cmpsl
jne
xchg
adc
sbb
sarb
pop
mov
add
dec
cltd
cmp
xor
shlb
sbb
loop
push
mov
mov
mov
lods
ficoms
pop
jbe
das
imul
cmpsl
pop
lods
aaa
mov
sbb
jg
mov
push
inc
jmp
mov
mov
pop
or
push
xor
ret
adc
cwtl
jge
push
add
mov
mov
cmp
fisubs
in
xor
out
lcall
cmp
cltd
xchg
dec
mov
scas
outsl
push
xor
push
repz
jp
out
fwait
sub
ret
push
dec
ror
sub
loope
in
jb
lcall
fcompl
fsubs
rclb
sbbb
push
das
sti
push
div
push
popa
inc
nop
sub
dec
inc
dec
outsl
and
xchg
mov
stc
pop
inc
cmova
cltd
push
mov
jmp
popa
xor
out
inc
pusha
bound
popa
xchg
dec
ja
dec
addr16
mov
sbb
mov
daa
inc
mov
inc
dec
aad
adc
add
cmp
sub
cs
aas
xchg
pop
outsl
dec
cwtl
lret
or
lret
cmpsb
add
jb
sti
daa
int3
add
pop
lret
push
pushf
aad
sbb
mov
cmpsl
scas
mov
fstp
stc
testb
scas
sbb
pop
ljmp
sbb
or
cmc
cli
push
mov
ss
dec
stos
mov
mov
pop
sti
loop
xor
adc
inc
repz
int
daa
mov
bound
stc
xchg
mov
leave
and
dec
test
push
rorb
das
mov
cwtl
sub
add
cmovne
and
fdivrs
cmp
sub
cmp
jb,pn
pop
add
sub
jo
xlat
arpl
data16
dec
fidivs
or
int
pop
scas
rorl
int
xchg
adc
stc
stos
fsub
pop
out
or
movsb
adc
push
inc
mov
loope
mov
leave
test
imul
iret
mov
mov
dec
xchg
jnp
dec
dec
movsl
jp
pop
and
decb
push
push
rorb
pop
mov
mov
dec
adc
mov
fnstsw
fsub
jnp
cmp
sub
jg
push
int3
or
nop
in
fnstenv
xor
inc
addr16
jecxz
pop
lock
mov
or
fisubs
loop
mov
dec
xor
sbb
adc
dec
add
adc
outsl
aas
pop
cmp
aam
outsb
xchg
cmp
jmp
push
xor
rorl
cmp
sti
outsb
jae
push
pop
push
sbb
movsb
ret
in
das
mov
in
mov
or
sbb
lret
cmpsl
insl
xor
mov
lcall
push
stos
lock
adc
inc
movsl
cmpsl
dec
pop
loope
in
movsb
int
inc
pop
nop
packuswb
sub
sbb
aam
pop
pop
and
xlat
mov
or
push
or
orl
sbb
mov
fwait
xor
in
inc
inc
xchg
andb
repz
sbb
push
dec
std
cltd
in
push
add
mov
push
test
mov
jge
movsb
cltd
fs
xchg
jmp
hlt
adc
test
cmc
mov
in
js
and
mov
mov
jae
pop
push
lock
push
cmp
push
xlat
cwtl
loope
mov
or
jl
sar
iret
jo
xchg
incl
adc
xor
dec
push
into
cmp
push
cltd
std
adc
cli
dec
jne
enter
dec
dec
xchg
pushf
fstpl
data16
dec
xchg
jl
push
jae
pop
nop
shlb
fstl
xorl
xchg
push
scas
lahf
pop
sub
sbb
or
stos
enter
pop
outsl
jl
insb
jnp
inc
mov
xchg
cwtl
mov
mov
xor
mov
dec
xor
rcrb
movsl
sti
inc
pop
xor
test
scas
jns
adc
add
clc
nop
sti
mov
jns
sahf
push
xlat
jl
sub
mov
ret
loop
jp
in
in
mov
stc
das
inc
decl
cs
jns
xchg
xor
in
inc
dec
jo
fdivr
jo
mov
jne
stos
pop
mov
or
subb
jmp
popf
cld
add
mov
xor
xchg
add
movsl
in
shr
pop
inc
mov
add
int
aas
mov
push
pop
add
or
femms
std
js
ficoms
cmc
pop
add
stos
cmp
push
adc
mov
scas
add
dec
sub
and
out
ret
int3
call
push
cmpsl
inc
stos
adc
mov
xor
popa
xchg
in
sbb
cwtl
repz
lahf
sbb
push
lods
daa
popf
imul
fdivrs
mov
or
pop
cmp
add
pop
cmp
jo
cmc
in
sub
push
and
sbb
sub
mov
popa
lret
pop
fildll
decb
inc
dec
cmp
lods
pop
clc
dec
pop
scas
xchg
ljmp
call
mov
xchg
insb
xchg
mov
imul
loope
adcl
jecxz
xchg
cmc
sbb
cli
dec
mov
adc
mov
push
addr16
sbb
ret
cmpl
cmp
push
cltd
rcll
xor
shl
scas
jl
pop
dec
loop
or
or
cmpl
mov
mov
xchg
xchg
and
insb
xchg
or
fsubrs
repnz
mov
das
push
ret
sub
stos
arpl
lods
and
andb
repz
cmc
sbb
xor
frstor
sub
cmp
rolb
push
popf
loope
cmp
push
or
aaa
dec
dec
and
pop
test
mov
das
mov
ja
mov
jecxz
jb
mov
hlt
jns
xchg
stos
mov
jae
ja
inc
xor
mov
dec
cld
test
pop
mov
int
add
sub
cmp
inc
adc
mov
add
aaa
outsl
addr16
dec
ja
pop
jns
mov
cmp
int
es
rclb
loop
int
jg
test
xor
xor
xchg
jae
stos
clc
ja
loopne
out
pop
in
mov
out
cmp
call
or
fists
pop
nop
fcmovb
mov
sahf
and
aad
xor
scas
test
fisttpl
cld
mov
aaa
add
pop
xchg
sbbb
lock
xlat
push
ss
pop
cmp
pop
mov
int3
mov
cs
cmc
rol
inc
and
ljmp
sbb
cld
es
sub
mov
pop
inc
sbb
dec
and
pushf
mov
push
inc
mov
mov
or
pop
mov
out
fsub
imul
mov
dec
inc
pop
cmpl
mov
jb
std
pop
vmulpd
or
imul
das
mov
dec
mov
testb
adc
mov
mov
xchg
cld
push
cmp
out
jmp
roll
pop
lret
xchg
ss
addr16
shll
add
shll
icebp
dec
add
fs
ss
hlt
jg
repnz
adc
les
mov
adc
lock
jmp
jge
push
iret
out
push
jg
add
add
xchg
gs
in
imul
sub
cltd
or
fsubs
mov
scas
dec
imul
rcrl
and
andb
scas
repnz
add
mov
jne
jo
test
flds
faddl
xor
bound
in
or
cmp
outsb
xchg
int3
daa
cmp
and
fsubrl
sbb
lods
dec
fdivs
in
push
mov
sub
dec
mov
or
sub
insl
push
clc
mov
hlt
les
fstpt
xchg
sbb
mov
mov
push
push
test
insb
push
popa
cmp
sbb
test
push
leave
loop
push
xchg
fisubrs
mov
xchg
out
ja
and
popa
aam
imul
call
xor
jecxz
idivb
add
push
fbld
push
sbb
dec
jmp
fisttps
cmpl
inc
pop
aas
cmp
add
outsl
outsl
mov
xor
scas
cmp
jle
cmpsl
add
lea
loop
scas
sbb
ss
loop
mov
push
inc
hlt
push
fs
inc
dec
mov
lods
testl
jg
sbbb
xor
or
jmp
dec
sbb
xchg
addr16
imul
movsl
xor
imul
mov
mov
pop
xchg
cmp
fdivs
repnz
test
mov
dec
rolb
mov
push
jp
icebp
or
pop
clc
inc
aam
cs
xor
jmp
jnp
es
jbe
shlb
pop
rol
mov
mov
sbb
orb
imul
test
cld
sbb
jle
test
cwtl
int3
push
sbb
popa
and
lret
mov
xchg
add
repnz
pop
inc
sti
lods
push
sbb
push
fdivs
adc
jb
sub
or
adc
add
mov
cmc
adc
dec
adc
xchg
stos
xlat
mov
add
out
loopne
xorb
sbb
fstl
mov
dec
jmp
jmp
insl
cmp
inc
push
pop
jne
rcrl
pop
movsl
jmp
sub
adc
xchg
jge
sbb
and
xchg
cltd
ror
xchg
je
stos
jb
sbb
jecxz
mov
xor
jmp
inc
dec
mov
lods
ficoml
cwtl
mov
and
mov
mov
lret
lret
test
cmp
add
pop
mov
insb
push
xchg
aam
cmp
popf
fisttps
cmp
mov
jb
test
hlt
cmp
in
jns
clc
out
jge
les
mov
push
xchg
nop
nop
test
jns
xchg
xor
sbbl
in
dec
sbb
inc
mov
stos
adc
dec
imul
fcmove
icebp
mov
and
jno
and
add
inc
inc
pop
xor
and
subl
out
inc
jbe
fists
bound
es
push
dec
jmp
out
fldenv
addb
out
mov
or
xchg
or
jb
mov
repnz
ljmp
sarb
and
inc
hlt
sub
sub
ljmp
pop
pop
sti
sub
movsb
mov
fistpl
mov
and
adc
pop
popw
scas
push
fdivrs
call
push
inc
jb
adc
lea
fs
or
lds
mov
sbb
rol
in
push
cmp
or
lock
mov
and
xor
nop
cltd
sarl
jo
outsb
insb
lcall
inc
test
data16
aam
push
ss
sub
or
cmpsb
dec
pxor
fmull
and
pop
and
push
dec
dec
mov
push
jl
xlat
push
stc
data16
or
push
mov
scas
stc
clc
push
pop
jns
add
aam
mov
repz
pop
frstor
mov
add
out
in
and
in
and
test
jmp
daa
mov
cmp
nop
stc
jae
xchg
xchg
add
push
loop
gs
sarb
insl
or
ud1
scas
push
inc
xor
lods
fbstp
repz
jo
pusha
cmpl
adc
cwtl
cmp
int3
mov
movsl
mov
ffree
mov
nop
test
pop
adc
hlt
jecxz
jge
ljmp
movsb
cmp
stos
insl
adc
sbb
cld
dec
test
loope
pop
push
push
mov
jle
jmp
sarb
and
adc
bound
sub
sub
and
loop
add
xchg
push
mov
rcrl
mov
push
jl
pop
mov
jns
es
test
fdivr
mov
imul
pop
sbb
xlat
mov
ktestb
mov
or
into
pop
sub
test
cmpsb
mov
mov
arpl
aaa
sti
sub
pop
and
dec
and
imul
loopne
mov
mov
loope
scas
xchg
nop
in
xor
mov
gs
nop
sub
clc
pop
xchg
or
sub
movsl
mov
cmp
je
mov
push
sbb
sahf
fwait
je
cmp
bound
pop
scas
and
adc
dec
inc
mov
pop
cs
les
add
pusha
int
push
inc
or
clc
int3
push
shlb
mov
vpminub
in
mov
cmc
pop
mov
xchg
das
roll
push
lock
movsl
mov
mov
and
inc
sbb
and
mov
loopne
jbe
jb
insl
mov
outsl
das
adcb
hlt
add
pop
and
pushf
loop
fucomip
xchg
xchg
pop
xchg
fldl2t
sahf
mov
repnz
push
stos
popf
pop
push
xor
inc
mov
mov
dec
mov
shrb
and
filds
mov
sahf
je
mov
and
push
mov
cmp
test
lods
aad
jmp
cmp
sub
xor
call
sub
and
inc
ret
push
push
dec
adc
mov
mov
outsb
sub
out
mov
sbb
push
sbb
cltd
mov
fmull
pop
test
imul
dec
aaa
xchg
xlat
out
gs
mov
insl
and
pop
push
cmp
xchg
mov
push
int
dec
mov
das
sub
clc
pop
xor
loopne
pushf
fnstcw
jne
inc
cmp
xchg
adc
mov
mov
mov
mov
cli
repz
fidivl
and
fldenv
push
push
pop
fldcw
adc
andb
cs
or
hlt
push
fsubrl
int
fisubrl
inc
into
cmp
fbstp
pop
jnp,pn
inc
pop
cmp
mov
push
ret
pop
dec
in
aaa
or
mov
faddl
and
xor
pop
pop
inc
sub
push
insl
or
mov
int3
out
jl
push
mov
ss
enter
je
push
xor
adc
out
out
sbb
fs
pop
lods
sub
ret
into
cltd
psadbw
arpl
frstor
add
or
dec
roll
mov
orb
popf
and
out
out
imul
ja
mov
and
cld
mov
fldcw
mov
insb
xchg
mov
mulb
fcoms
pusha
and
or
lret
andl
push
int
cmp
mov
sub
push
pusha
adc
pushf
testb
mov
xor
push
and
ret
shl
mov
in
aad
mov
jne
dec
movsl
xchg
jae
mov
mov
cli
cmpb
lret
rcll
push
lret
push
sub
jmp
mov
popa
lock
jg
stc
shll
movsl
xor
mov
push
pushf
or
outsb
push
xor
inc
push
pop
icebp
dec
and
clc
les
mov
insb
cmp
out
xchg
ja
ret
enter
push
dec
xor
add
lcall
xchg
lcall
inc
cmp
gs
dec
and
clc
stc
xor
cld
and
xchg
scas
mov
sahf
xchg
add
adc
mov
xchg
add
push
xchg
mov
test
jnp
mov
pop
push
in
sarb
sub
inc
adc
push
enter
icebp
ret
repnz
jmp
xchg
pop
xchg
jbe
mov
and
mov
inc
enter
jne
mov
mov
jo
dec
les
mov
movsb
outsb
dec
int
das
popa
jnp
gs
push
ljmp
bswap
js
and
sub
fdivrs
jle
fildl
int3
outsb
es
inc
fs
pop
jo
ljmp
pop
ljmp
xchg
arpl
sbb
out
push
je
scas
mov
mov
faddl
negl
int3
call
cmp
lret
xchg
inc
repz
loope
add
xchg
add
jg
push
push
ret
or
ret
mov
imul
bound
shrb
mov
xorl
les
inc
mov
add
nop
xchg
mov
jnp
dec
mov
sbb
cmp
loope
jecxz
pop
inc
es
stc
ljmp
cmp
leave
or
lret
sahf
std
mov
fdivr
and
stos
sbb
cmp
pop
push
ret
lock
lods
test
adc
clc
fs
divl
in
ljmp
adc
push
imul
rclb
ljmp
ss
or
fistpll
mov
push
rol
adc
ljmp
in
xchg
inc
push
lods
mov
fildl
stc
or
ror
mov
sbb
test
test
faddl
jecxz
stos
mov
movsb
imul
fidivrs
int3
push
jp
jnp
mov
mov
mov
dec
mov
loope
mov
enter
pop
adc
aam
jl
imul
aad
fimull
test
dec
outsl
or
push
push
xchg
xor
aas
int
mov
std
inc
je
das
mov
add
test
popf
rcrl
imul
pusha
mov
in
and
pop
mov
repz
inc
mov
adc
dec
aas
inc
fdiv
cmp
and
negb
ljmp
arpl
sbb
fdivp
shrb
fimuls
out
push
rcll
out
into
mov
xor
mov
sbbl
xchg
ss
pcmpgtb
insl
add
jo
cmp
mov
ficoms
in
dec
mov
std
pop
lds
shl
mov
into
out
and
cmp
mov
inc
mov
mov
rcrb
xorl
mov
add
xor
movl
xchg
imul
mov
movsl
jg
lods
mov
pop
add
xor
jmp
xchg
bound
mov
or
push
ja
iret
popa
mov
popl
jmp
repnz
dec
in
or
cltd
cmp
dec
jl
and
inc
rclb
mov
arpl
or
dec
cmp
xor
jecxz
call
test
and
dec
mov
repz
daa
cmpsb
daa
pushf
dec
mov
xchg
xchg
add
jge
sti
or
les
xor
test
xor
and
mov
inc
mov
cmpsl
or
rcll
mov
jae
ficoms
jle
jl
movsl
adc
lahf
push
scas
adc
iret
testl
inc
jle
jecxz
push
push
sub
xor
mov
inc
cmpsl
cmp
sahf
in
cmp
push
sub
call
and
inc
aaa
repz
mov
dec
cmp
push
cmp
outsl
incl
dec
cli
xchg
insb
xchg
clc
mov
and
and
add
xlat
cld
sbb
pop
pop
int
lret
mov
jge
and
cmp
std
daa
dec
jne
scas
and
sbb
in
inc
popa
pop
les
or
mov
mov
es
push
jl
mov
adc
xor
leave
lods
nop
stos
sbb
imul
add
push
loopne
or
loope
or
sbb
pop
add
in
je
push
psubq
insb
lahf
mov
movsb
xchg
jne
inc
adc
jns
cwtl
jmp
daa
bound
push
pop
jne
jge
add
cmpsb
pop
inc
adc
clc
xor
add
dec
sbb
xor
mov
xchg
and
popf
sbb
inc
sub
mov
sub
add
aad
push
mov
testl
jns
cmp
test
add
pop
mov
pop
inc
insl
mov
cs
incb
adc
dec
mov
cmp
movsb
inc
nop
jnp
push
test
jmp
dec
mov
cld
mov
pop
lds
je
ljmp
push
cld
push
mov
and
bound
filds
outsb
out
iret
lock
faddl
lret
scas
cmp
or
cwtl
push
dec
enter
jno
pop
sar
jp
lock
push
sti
pop
sub
inc
addr16
and
lea
push
add
out
sub
and
mov
insl
adc
add
fs
or
xchg
in
mov
enter
test
sahf
lea
cmp
mov
bound
cmp
or
push
dec
jo
std
insb
sub
dec
jno
dec
xor
popa
jmp
lods
test
insb
xor
adc
dec
mov
insb
add
fiadds
pusha
adc
int
dec
in
pop
testb
xchg
imulb
xchg
add
or
add
xchg
jmp
pop
sbb
pop
fxch
lcall
jl
pop
push
iret
push
aaa
or
inc
aad
dec
jmp
xchg
sbb
jbe
sub
pop
push
mov
bound
mov
sbb
pop
dec
in
push
je
xor
int
and
push
sub
fldenv
mov
sti
and
pop
and
mov
hlt
adcb
idivl
scas
fisttps
aam
push
in
add
sub
mov
repnz
shlb
negl
adc
xchg
andb
adc
std
jnp
pop
mov
inc
add
call
mov
jne
jb,pn
bound
arpl
mov
push
je
push
add
push
cs
mov
std
mov
mov
lea
test
sahf
dec
mov
cmp
scas
xor
mov
cwtl
divl
dec
and
cmpsb
gs
scas
mov
push
loope
cmpsl
xchg
adc
push
xor
gs
push
xchg
jb
sbb
pop
cmp
push
sti
xor
sub
xlat
insw
dec
sarl
jo
js
inc
fs
fsubrs
dec
repz
jnp
cld
dec
add
cmc
inc
sub
mov
ja
add
xorl
sbb
arpl
rcl
dec
mov
loop
push
cld
jo
rorl
sub
add
aaa
xchg
movsl
add
orb
mov
cli
pop
nop
mov
aad
xchg
inc
dec
mov
mov
dec
push
addl
stos
xchg
hlt
add
ljmp
cmpsb
push
dec
out
and
cld
cmp
rorl
adc
dec
scas
scas
andb
add
jecxz
pop
int
das
movsb
xorb
js
mov
mov
push
inc
shrl
call
incl
ja
movsb
add
fdivl
in
imul
add
add
pop
mov
pusha
idivb
sarl
inc
fs
scas
push
test
je
test
aam
mov
or
mov
data16
jmp
mov
in
xor
out
jge
jle
inc
sbb
add
call
popa
mov
lret
pcmpeqb
or
shlb
icebp
push
test
das
es
cmp
sub
stos
or
out
fucomp
outsl
and
sub
cmp
cmp
mov
dec
push
or
stc
out
jl
pop
ja
cwtl
dec
pop
or
sarb
adc
js
inc
mov
jo
xchg
cwtl
test
cmp
lret
pushl
mov
outsl
push
push
js
sbb
sub
movsl
mov
clc
add
jmp
stos
out
jg
jecxz
js
shl
aam
in
mov
pop
sbb
inc
insl
sbb
mov
sub
fildll
js
jns
pop
loope
movsb
sub
call
js
cmpsb
in
xchg
add
jns
mov
mov
pop
or
out
cmpsb
js
ret
adc
enter
jbe
add
or
sub
jo
imul
addl
arpl
scas
push
dec
push
cmpsl
addr16
loope
jge
lods
or
mov
jne
rorb
cli
add
push
inc
ds
das
fdivrs
loopne
sbb
in
iret
add
pop
iret
fwait
lahf
jmp
mov
xchg
rclb
mov
jns
cld
cmp
ret
rcrb
les
mov
dec
lret
stos
das
cli
repz
xchg
or
jns
jns
cmp
sahf
cli
test
mov
cmp
sbb
dec
xor
xchg
lds
xchg
sub
clc
ja
movsl
dec
rclb
stos
movsl
jns
mov
add
sub
gs
test
sub
popa
aaa
ss
popf
mov
xor
mov
and
mov
popa
xor
cs
sub
mov
aam
inc
stos
lcall
setp
jae
icebp
stos
and
sbb
mov
inc
pop
dec
push
andb
in
pop
mov
mov
sar
push
jns
cmc
xchg
dec
cmp
xchg
sahf
fsts
or
push
cmp
dec
add
in
lods
int
xchg
xor
icebp
fldt
mov
fidivl
lea
lods
bound
fcompl
fs
sub
fildll
shrl
sub
mov
sarl
or
xor
dec
adc
icebp
movsl
rep
test
dec
mov
xor
imul
mov
stos
cmp
or
mov
push
dec
xor
dec
outsb
call
sub
lods
in
pop
mov
lods
cmp
adc
pop
cmc
add
lods
jne
mov
push
outsl
jg
mov
dec
lock
pop
mov
mov
pop
dec
xchg
push
divl
jp
xlat
jb
pop
lds
sub
ds
mov
dec
xor
lods
xchg
adc
pop
xlat
jns
jecxz
imul
sub
mov
movsb
popa
inc
or
loope
mov
pop
push
xchg
inc
jge
mov
dec
mov
cmp
jp
sub
pop
mov
fcoml
pop
dec
rcll
movsb
and
ja
mov
pusha
ja
bound
mov
inc
mov
shll
ljmp
inc
dec
stos
das
loope
inc
jnp
sbb
jge
decb
lea
pushl
js
sbb
cs
adc
mov
pop
jbe
xor
popa
pop
lahf
lods
leave
lcall
mov
sbb
jne
push
jmp
insl
in
cltd
jb
cltd
loope
adc
lcall
sub
icebp
lea
ds
sbbl
and
fidivrs
movsb
fwait
imul
lcall
test
adc
sbb
xchg
testl
adc
movsb
push
aas
dec
cmp
adc
cmp
fmuls
or
and
push
xchg
push
sub
imul
pop
mov
add
or
xchg
xchg
dec
inc
xchg
mov
mov
js
sub
aam
subl
out
lret
fs
in
clc
or
rol
fs
mov
test
jmp
mov
imul
adc
push
test
sub
cwtl
les
int3
loope
aad
pusha
test
jno
rorb
xchg
or
sbb
sarb
adc
hlt
xor
popa
andb
cmp
in
int
rorl
add
call
push
les
std
pusha
xlat
xlat
cmp
dec
pop
add
mov
pushl
mov
out
cmp
popa
lea
sbb
add
popf
je
mov
xchg
jecxz
mov
ljmp
outsl
popl
push
mov
add
pop
test
sbb
sbb
rcr
jecxz
lds
mov
enter
xchg
shll
or
xchg
cmp
xor
insl
ret
inc
nop
and
stc
mov
push
inc
idivl
and
push
stos
test
push
fisubrs
xchg
pop
insb
pushl
popa
or
xchg
inc
je
daa
jle
and
fwait
icebp
push
insl
push
rolb
aam
fdivl
cmp
xchg
cmp
jns
sbb
push
mov
int3
ss
outsb
loop
repnz
mov
mov
fbstp
cmpsl
cmc
cli
movb
xchg
shr
push
sarb
ret
call
insl
and
sub
adc
mov
movsb
mov
push
dec
sbb
dec
sub
push
outsl
sub
repnz
loope
add
out
push
mov
adc
addl
daa
sub
stos
xor
imul
loopne
subl
xchg
and
inc
jb
lahf
mov
and
push
repz
ds
shlb
and
cmc
fwait
mov
pop
adc
inc
push
test
push
jg
xor
adc
adcl
gs
arpl
mov
cmp
fisttpl
mov
aam
repnz
rcll
dec
inc
lea
mov
repnz
sti
sbb
xchg
fcmovnb
stos
clc
xchg
mov
leave
ret
dec
mov
aas
pop
sbb
das
inc
leave
xchg
mov
or
out
gs
fmull
cwtl
jmp
in
aam
dec
mov
rolb
jmp
loope
jbe
insb
xchg
ja
in
lret
cmp
rorb
push
inc
push
mov
pop
ret
mov
mov
scas
xchg
jmp
sbb
inc
cmp
mov
mov
mov
mull
mov
add
pusha
adc
cmp
stos
push
inc
leave
dec
sbb
cmp
outsb
adc
add
xor
stos
sub
test
xor
mov
mov
lock
sti
cmpsl
mov
fldcw
mov
mov
lea
and
mov
pop
push
leave
fnstenv
or
ljmp
aas
ror
pop
pop
aaa
xchg
movsb
dec
in
push
push
stos
or
mov
inc
nop
adc
inc
mov
and
sub
push
cli
pcmpgtw
into
lahf
jecxz
mov
sub
dec
mov
cmp
mov
stos
rorb
jl
lea
jp
jo
repz
lret
pop
and
in
lcall
push
xchg
mov
stos
popf
rclb
loop
repnz
dec
push
pop
lahf
arpl
jmp
and
jo
test
jno
es
pop
in
push
sbb
and
mov
inc
int
xchg
add
xchg
popa
mov
pop
pop
lock
cmp
inc
sti
xchg
in
lods
or
into
push
outsb
mov
inc
or
xchg
adc
mov
jnp
jle
outsl
cli
ljmp
in
xchg
xor
mov
loopne
push
cmp
mov
mov
je
jbe
pop
inc
test
add
f2xm1
dec
aad
out
popa
sbb
cltd
pop
mov
sarb
add
mov
xchg
jno
xchg
pop
int3
mov
shlb
pop
push
test
dec
add
cmp
pop
inc
pop
pop
add
mov
shlb
lcall
inc
xchg
push
push
inc
pop
out
jge
jo
adc
loop
fs
sbb
nop
imul
scas
fdivp
pop
repz
push
idiv
test
sub
xchg
js
lods
xchg
fcompl
psadbw
divb
xlat
scas
mov
sbb
jb
sub
aaa
out
dec
pop
pop
xchg
mov
in
test
or
shl
jp
push
cli
inc
jns
imul
popf
add
jmp
enter
cltd
push
test
push
out
pop
xor
out
push
sbb
adc
in
cs
adc
jae
cmp
xchg
pop
lods
jmp
add
or
inc
adc
pushf
sbb
lret
mov
or
dec
pop
test
sub
and
inc
outsb
add
xor
aam
inc
cld
ljmp
leave
pushf
sti
xchg
int3
push
sbb
or
pop
arpl
push
mov
cmp
cmpsb
mov
jmp
pop
cmp
rcl
or
subl
xor
das
and
jno
sbb
rclb
movsb
adc
xchg
or
das
pop
mov
or
insl
push
jmp
fsubs
scas
std
in
mov
loop
xlat
ret
ljmp
js
xor
ret
outsl
jmp
inc
dec
sbb
leave
jne
jge
das
test
jnp
repnz
lock
adc
test
decl
cmp
inc
mov
jl
aad
imul
xadd
add
arpl
in
jmp
jp
inc
inc
and
xor
mov
xchg
jge
adc
test
insw
or
pop
movsb
xchg
movsl
xor
adc
cli
jge
pop
sub
les
sbb
cmp
cmp
mov
add
cmc
pop
les
je
movq
aas
add
sbb
mov
adc
xor
xor
push
divl
lods
and
mov
cmpl
xchg
clc
jle
dec
test
scas
clc
adc
movb
ds
test
mov
nop
jb
out
xchg
rcll
sub
xchg
pop
out
sub
jmp
or
sub
daa
xchg
clc
mov
fwait
mov
mov
push
cs
cmpsb
mov
fxch
jnp
adc
dec
and
fimuls
icebp
jecxz
push
pushf
bound
lods
mov
dec
xchg
mov
inc
jo
jle
rcll
jbe
add
lock
pop
jne
adc
fxch
sahf
shl
bound
xchg
xor
fmulp
mov
imul
cmp
ret
fsubs
push
dec
shr
mov
mov
mov
mov
mov
jne
jle
sub
mov
leave
insl
jo
jnp
adc
lock
push
cmpl
jp
fsubrl
jns
lcall
sub
cmc
cmpl
push
scas
pushf
xchg
pop
cmp
sbb
mov
jmp
sbb
and
mov
or
mov
test
aad
jge
and
sub
add
or
pop
pushf
shll
or
ja
insb
imul
mov
imul
insb
loope
cwtl
push
push
adc
loope
cld
out
pusha
cmp
addr16
inc
addr16
shrb
dec
movsl
push
mov
push
movsl
xchg
int
in
mov
ret
and
bound
xor
pop
inc
idivl
cmpsb
jg
xchg
pop
test
lods
cmpsb
xchg
mov
das
xor
enter
in
imul
xor
mov
mov
push
mulb
xor
add
int
enter
sub
adc
mov
mov
das
push
dec
cltd
roll
sbb
test
repz
cmc
out
jecxz
stc
je
int
in
cli
or
scas
and
fstpt
push
in
pop
int3
lds
or
repnz
into
mov
push
test
add
loop
xchg
and
cmpsb
jb
add
inc
lock
inc
nop
movsl
sbb
adc
push
cmpsl
pop
add
nop
lret
inc
ljmp
iret
call
jno
mov
rcrb
jmp
pop
movsl
pop
mov
and
dec
lods
clc
cmpsb
lock
push
sbb
jb
pop
fcomps
mov
cmp
dec
xor
add
test
fsubp
pusha
add
fwait
inc
push
pop
test
dec
mov
sub
sbbb
push
mov
inc
sub
enter
stos
mov
fwait
call
enter
int
xchg
loopne
jne
fstpt
jbe
jo
push
mov
mov
lock
out
lock
das
xchg
addr16
jns
sar
xchg
cmp
mov
loopne
pushw
xchg
iret
roll
jp
xchg
jo
or
ficompl
mov
cmp
dec
out
mov
cmp
sub
xor
jmp
cmpsb
les
fwait
lret
sub
lahf
push
negl
leave
or
sbb
sbb
pop
mov
mov
mov
stc
add
fst
xchg
leave
bound
test
rcrl
test
leave
sahf
xchg
sbb
out
mov
hlt
ret
sub
pop
dec
inc
push
std
push
mov
jge
sub
or
out
shl
cs
ljmp
pushl
add
or
and
out
stos
imul
lret
sbb
cmp
popf
faddl
push
jg
adc
mov
shrl
testl
adc
dec
test
les
cmpb
sub
push
xorb
andb
outsl
dec
pushl
adc
xchg
adc
xchg
stos
cmc
into
pop
cmp
pop
dec
into
or
loope
jne
out
in
stos
pop
cmc
pushf
loope
inc
xchg
iret
lcall
rcrl
xor
rorb
outsl
mov
nop
decb
jns
xchg
xchg
mov
in
xchg
jg
pop
sahf
inc
jae
pop
es
mov
pop
stos
in
and
push
adc
add
clc
shlb
pushf
pop
dec
xchg
pop
andb
xchg
mov
pushf
dec
and
xchg
ljmp
xchg
sbb
pop
mov
fdivr
push
sti
sarl
cli
pop
xchg
cmp
inc
xchg
fs
andl
sub
pop
mov
cmc
and
mov
movsl
repz
cmpsb
add
push
cmp
insb
fs
insl
xchg
arpl
lahf
or
stc
in
or
adc
fistpll
mov
pop
in
data16
movsb
adc
ret
gs
orl
out
pop
jo,pt
es
loop
cltd
jb
fwait
mov
pop
sub
arpl
das
and
movsl
inc
mov
jne
nop
lock
mov
fucomp
outsl
add
and
and
add
lahf
insl
mov
pop
adc
fisttpll
aaa
or
and
or
loope
and
or
imulb
mov
adc
movsb
das
scas
dec
sbb
aam
push
push
mov
push
cmp
push
xlat
jo
cmp
pop
rep
jmp
leave
push
mov
mov
jne
mov
sbbl
add
leave
bound
das
popf
inc
mov
inc
sub
sub
cmpsb
adc
jo
std
xchg
in
shll
gs
ds
adc
add
xchg
inc
xchg
call
cmpl
into
pop
lock
sbb
mov
push
mov
cmp
mov
lock
mov
mov
sub
sbb
mov
mov
cmp
or
in
sbb
mov
adcb
dec
cmp
mov
mov
rcrl
sbb
jmp
xor
aaa
out
pop
adc
xlat
dec
pop
push
jl
adc
aad
pop
and
mov
pop
mov
mulb
lea
fsubrp
inc
stos
and
inc
jecxz
loopne
sti
mov
jl
pop
pop
adcb
mov
int
sbb
sbb
xchg
pusha
sbb
mov
clc
pop
mov
in
xchg
push
adc
fcomi
and
xchg
testl
movsl
push
cmp
or
mov
mov
movsl
push
les
popf
mov
test
mov
cld
imul
cmp
cmp
es
pop
test
addr16
sub
in
in
jne
cmp
cmp
outsb
sti
daa
pop
decb
xchg
adc
push
push
rep
into
testb
out
pop
dec
mov
lds
pop
test
cwtl
jno
cltd
pop
stos
mov
pusha
push
inc
inc
ficomps
xor
ja
pop
xchg
jp
sbb
subb
out
fstpt
aam
inc
mov
cmp
mov
int3
outsb
stc
fidivl
mov
cltd
cmp
or
pop
or
hlt
adc
cmpb
jnp
mov
popf
scas
mov
ficoml
jnp
jns
jo
dec
std
jl
push
push
mov
xor
cmpb
imulb
jns
pop
int
dec
leave
cmp
mov
cld
outsl
cwtl
out
mov
xchg
or
xchg
lods
ds
repz
and
add
sub
xchg
mov
inc
adc
jno
das
ret
lds
cmp
mov
sub
xor
outsb
push
fnstsw
test
sbb
push
mov
in
jbe
xchg
adc
movsb
shl
lock
arpl
dec
adc
ljmp
add
icebp
std
cmpsl
nop
fcoms
ss
sub
inc
cld
fs
popf
scas
mov
fidivs
shlw
cld
fists
mov
in
aaa
scas
mov
sbb
mov
inc
pop
ds
mov
in
pop
rcll
mov
into
addr16
cmpl
test
fnstenv
cltd
dec
fstl
cmpsl
mov
insl
aad
movsb
xchg
xchg
bound
inc
insb
mov
xor
movb
mov
daa
out
pop
scas
adc
pop
mov
dec
add
in
or
stos
lods
pop
fstpl
std
xchg
sbb
cmp
std
jbe
dec
inc
jg
test
inc
addr16
inc
cmp
sarl
cmp
ret
or
cmp
xchg
xchg
dec
jl
jb
sbb
mov
push
mov
andl
shll
shl
and
add
jecxz
and
or
jge
push
push
dec
xor
jl
push
xlat
mov
add
inc
xor
xor
aas
sub
lods
jmp
adc
aas
loop
addr16
dec
adc
ret
mov
testb
or
pop
sarb
pop
dec
xor
movsl
aaa
test
mov
testb
or
into
stos
loope
lods
pop
add
mov
or
xchg
inc
xchg
add
mov
int3
mov
loope
or
sub
push
test
imul
test
sbb
fiaddl
in
sbb
add
loop
push
xchg
jp
mulb
xchg
dec
js
adc
mov
popa
stos
mov
dec
cmp
test
pop
seta
xchg
sub
sub
and
jbe
call
cld
imul
jne
xchg
lods
or
pop
pop
pop
daa
in
fstpt
sbb
mov
test
lods
or
rcrl
cmp
mov
push
cs
aaa
xchg
cmp
repnz
or
xlat
jmp
mov
sub
sub
push
cmpsl
fwait
fwait
pop
xchg
mov
sti
jo
insl
iret
mov
inc
mov
outsb
or
scas
mov
mov
imul
sbb
call
dec
inc
push
mov
ficoms
cmpsb
test
mov
push
and
xchg
fnsave
pop
add
into
nop
fsubs
int3
lods
mov
cvttps2pi
das
xor
hlt
je
or
jl
mov
mov
add
int3
movsb
aad
pop
add
or
lds
imul
cmc
inc
inc
jb
sar
mov
pushw
fdivs
and
jp
or
outsl
push
push
imul
dec
pop
inc
mov
xchg
es
cmpsb
add
push
lds
stos
test
ret
sahf
loope
add
dec
test
cld
test
scas
int3
cmp
dec
mov
test
or
lcall
xor
shll
sbb
test
add
iret
sbb
adc
test
scas
sbb
leave
repz
test
inc
xlat
lea
or
push
movsb
call
push
lret
or
fcoml
movsl
cmp
adc
sub
add
aas
add
andb
and
pop
cli
icebp
outsl
dec
stos
push
cmp
gs
pop
mov
jae
push
in
arpl
std
int
test
adc
sbb
stos
mov
movsb
imul
add
daa
jmp
aam
xchg
int
dec
test
fcoms
leave
pop
jp
and
orb
mov
leave
push
in
dec
mov
pushf
ds
pop
push
push
jg
icebp
jno
add
inc
and
fdivl
out
dec
add
sti
jne
push
mov
je
jle
cmp
dec
pop
push
fnstsw
adc
inc
addr16
mov
adcb
push
jo
pop
xchg
jg
mov
in
jg
nop
pop
pop
gs
arpl
icebp
push
mov
mov
pushf
pushl
inc
addr16
or
fwait
adc
xchg
call
adc
jbe
xor
xchg
int3
ja
sub
jg
jle
sub
or
add
or
jecxz
test
mov
lret
lcall
sbb
int3
cmp
leave
mov
cld
hlt
and
dec
pop
lret
out
movsb
fadds
les
into
sub
mov
bound
ljmp
sub
and
dec
cmp
sar
rcr
mov
dec
dec
in
xchg
add
adc
test
in
push
in
push
fistpl
fstpl
mov
mov
fisubl
mov
cmp
popa
push
xor
and
cmpsl
int
jns
inc
sbb
sub
pop
or
jle
dec
xchg
sbb
pop
push
push
out
jnp
xchg
cli
add
sbb
cwtl
dec
insb
faddp
mov
hlt
repnz
pop
push
adc
dec
leave
sub
inc
ret
std
dec
testl
push
sbb
loope
fcompl
imul
bound
and
jns
icebp
sbb
fidivrs
ret
xorb
cmp
mov
sbb
lock
dec
mov
int3
cmp
push
loopw
dec
loopnew
jns
sahf
scas
cmp
or
ret
cvtps2pi
dec
push
mov
in
shrb
and
mov
call
xchg
stos
mov
outsb
repnz
sub
cmp
or
hlt
xor
call
in
or
xlat
inc
mov
or
aaa
add
aam
pusha
out
mov
pop
jle
and
mov
mov
leave
and
rcl
aad
push
mov
dec
stc
aad
jb
mov
mov
cmpsl
add
adc
mov
shrl
dec
outsb
push
testl
lea
adc
dec
xlat
add
imul
jo
pop
test
mov
jno
sub
mov
fwait
xchg
and
arpl
lahf
int3
ret
mov
push
lock
xchg
mov
or
adc
mov
test
jae
mov
in
and
test
cs
push
push
test
push
jo
inc
icebp
dec
push
cmpsb
and
fwait
sbb
inc
and
fimull
dec
sbb
mov
dec
add
pop
adc
cmp
out
pop
xchg
push
adc
push
rcrl
sbb
scas
les
cmp
or
test
fbld
sahf
out
imul
popa
push
std
repz
jg
cmp
mov
rcll
cmp
jnp
inc
dec
clc
pop
xchg
push
mov
mov
or
andb
jo
gs
add
inc
mov
faddl
pop
jmp
into
test
sbb
imul
and
jno
ficoms
and
out
addl
dec
aaa
subl
adc
into
lret
add
push
sbb
sub
adc
adc
push
frstor
lods
inc
cmpsl
inc
dec
xor
es
inc
test
xchg
push
loopne
pop
mov
cmp
pop
pop
imul
pop
cwtl
mulb
inc
fdivrl
fstl
mov
or
cltd
aaa
mov
xchg
mov
mov
sbb
mov
stc
sbb
out
lds
dec
push
fsubrl
xchg
xor
rcr
push
inc
mov
loope
scas
inc
sbb
mov
lret
adcb
inc
sbb
jmp
cs
jnp
lods
add
ficoml
xchg
popf
insb
push
ja
fmuls
mov
jle
push
and
xor
mov
out
scas
lods
sub
xor
ret
andl
xchg
call
mov
lds
pusha
sahf
outsl
int3
cmpl
sub
stos
inc
mov
push
iret
push
nop
hlt
mov
fdivl
xchg
mov
add
xor
fnstcw
stos
or
push
bound
inc
sbb
rcll
loope
mov
adc
dec
jno
xor
cmpl
adcl
mov
sub
and
divb
jo
outsb
jb
add
loope
inc
push
int
jl
xchg
or
roll
xor
test
ljmp
xchg
inc
jb
test
adc
cmp
imul
orb
sbb
and
stos
sbb
mov
or
lds
out
aaa
jmp
dec
add
popa
mov
cmp
ret
popa
sti
cmp
movsl
sbbb
imul
xor
testb
fildll
popf
das
xor
gs
fdivp
nop
popf
aad
out
pop
test
mov
sub
int3
sahf
add
icebp
adc
aaa
mov
mov
xchg
jl
mov
insb
ja
sub
loopne
mov
pushf
xchg
inc
sarb
invd
xchg
das
mov
push
dec
shrd
out
popf
lods
mov
add
aas
lea
mov
icebp
adc
jle
aas
imul
vpunpcklwd
dec
xor
out
es
inc
cld
cs
fiadds
std
push
mov
cmp
rolb
sbb
icebp
int3
loope
out
mov
or
or
jae
add
dec
adc
hlt
pop
jno
push
addb
cmp
dec
pop
inc
int
lret
int3
stos
inc
sub
cmp
xchg
in
ficomps
rcr
cmp
cmp
add
adc
mov
mov
adc
add
test
pop
and
push
mov
push
and
xchg
jl
push
jl
test
dec
inc
dec
or
push
mov
ja
cmpsl
addr16
dec
inc
clc
pop
fisubs
mov
add
cli
xchg
ret
or
int
ficoml
popa
sbb
insb
stos
ja
outsb
lret
test
mov
sbb
pop
jg
enter
xchg
aad
adc
inc
loop
add
lods
adc
pop
dec
nop
push
stos
jge
adc
sub
insl
or
jmp
repz
stc
mov
pop
sbb
ljmp
add
mov
lahf
les
mov
mov
or
ret
stos
rcrl
into
mov
in
push
popf
sub
in
pop
in
adc
js
sub
pop
imull
dec
pushf
jno
pop
addl
rolb
jno
and
push
pop
jbe
dec
out
xor
int
ret
insl
shl
rep
sbb
push
jecxz
dec
xor
int
ret
lock
call
popaw
je
orl
push
push
inc
pop
inc
aad
scas
inc
push
in
loop
leave
lods
add
cltd
and
into
ret
enter
rcr
ret
cltd
xchg
outsb
pusha
mov
jg
sti
lock
out
icebp
aas
sbb
mov
add
mov
xchg
ja
mov
pop
loop
push
and
lock
lret
add
xchg
and
cmp
jl
mov
sub
imul
cmp
movsb
adc
inc
lock
out
hlt
adc
insb
lret
push
cmp
negb
pop
jae
int
shrl
fmull
insb
cmp
cmp
jno
ja
int3
cld
and
push
jne
push
ds
sbb
aad
dec
repz
in
push
sti
pop
add
mov
loopne
lods
call
and
es
cmp
test
nop
or
inc
mov
adc
fucomp
sbb
imul
xchg
shrb
adc
fdivrs
mov
pop
sub
mov
notl
cmp
andb
cmpsl
das
add
leave
xchg
add
and
push
add
sub
out
or
mov
test
cld
adc
pusha
movl
cwtl
fdivs
outsb
shl
mov
mov
popl
lret
cli
push
xchg
xchg
ret
loopne
xlat
out
insl
addl
loope
pusha
add
jecxz
sbbl
xchg
jne
lods
shll
les
sbb
outsl
lock
jo
jle
je
es
loopne
bound
cmp
adc
mov
jbe
fists
pop
mov
jno
ja
cmc
mov
jns
add
loop
sbb
shl
cs
add
mov
cs
inc
call
repnz
stos
arpl
and
cltd
push
enter
mov
aaa
je
sub
adc
xchg
sbb
push
subl
lahf
movsl
or
sub
mov
sbb
imul
add
fwait
mov
adc
cmpsb
je
push
adc
cmp
add
add
int
out
lds
es
fistpll
jb
pop
push
cwtl
inc
push
rolb
insl
or
xchg
xchg
mov
test
leave
push
jnp
mov
add
cmc
movb
xchg
ds
outsl
xor
mov
sbb
cmpsl
dec
push
mov
lsl
call
sub
dec
push
sbb
dec
test
cmpsb
or
cmp
cmp
sbb
enter
pushf
pop
pop
data16
outsl
ljmp
shlb
ja
cmpsl
notb
mov
cld
jp
add
shr
push
xchg
inc
sahf
movsl
push
add
stos
insl
daa
aam
sbb
push
or
out
mov
dec
xchg
push
ljmp
test
jbe
in
push
scas
imul
or
sub
or
rorb
jne
inc
popa
in
negb
mov
or
mov
inc
sub
dec
sahf
jg
mov
and
and
cmp
jne
leave
xchg
test
in
mov
push
cmp
sbb
fdecstp
and
lret
sbb
fildl
jbe
dec
sub
andb
or
shl
push
lods
bound
aaa
xchg
in
scas
loopne
and
push
and
jbe
mov
mov
out
jne
inc
cmp
rcrb
mov
sbb
and
sbb
or
int3
lcall
push
or
lds
fdivrp
loop
paddsb
xchg
mov
in
cmp
jae
push
mov
ret
cwtl
cmc
outsb
push
out
cmpb
xor
mov
mov
inc
das
or
cmp
push
cmp
iret
insl
stos
ss
sbb
mov
js
leave
sbb
and
ss
das
push
movsb
mov
in
sbb
pusha
je
in
fsubrl
cmc
inc
ljmp
jmp
mov
push
rcrl
xchg
adc
loop
rclb
add
mov
dec
pop
out
lahf
fsts
nop
inc
inc
cli
inc
inc
xor
add
js
jmp
shrl
ja
scas
and
mov
jnp
xchg
in
scas
mov
fisubrs
push
rol
scas
pusha
jp
int
mov
ljmp
mov
pop
push
mov
jne
sarl
mov
lcall
stc
les
outsb
sub
gs
repz
inc
sub
out
test
push
popl
loope
adc
jle
push
iret
outsl
add
inc
jo
fdivrs
push
mov
push
bound
cmp
clc
mov
addb
cmp
push
sbbl
adc
add
push
sbb
dec
push
push
aam
notl
shr
clc
pop
mov
cmp
add
jo
inc
jge
popf
popa
clc
dec
add
and
pop
pop
push
int3
mov
je
rcrl
sub
daa
fnsave
ja
adc
sbb
int
outsb
ror
pop
enter
xlat
test
sbbb
or
enter
sti
cmp
lea
cmp
or
jle
mov
je
adc
dec
inc
sbb
and
jp
fs
sub
fmull
cltd
jecxz
jecxz
jno
iret
lds
fcomp
xor
jecxz
pop
mov
cmc
push
popa
std
mov
les
or
fsubrs
mov
popa
lds
movsb
and
or
cmpb
jbe
notl
test
jae
stc
bound
es
mov
mov
in
mov
and
out
cmp
add
inc
sbb
push
inc
sub
push
jb
scas
mov
mov
lods
or
into
test
push
mov
je
adc
sub
mov
push
adcb
iret
push
mov
es
mov
fs
lock
lcall
push
out
inc
dec
add
mov
mov
and
jecxz
sbb
or
ret
jne
test
adc
cli
xlat
in
mov
jge
mov
loope
arpl
pop
pop
xchg
dec
imul
stc
aad
push
cmpsl
fstpl
test
inc
cwtl
mov
daa
and
mov
inc
jae
cmp
add
insb
dec
aad
dec
pop
and
xchg
stos
mov
cmpsb
mov
adc
lods
enter
mov
xlat
mov
imul
inc
jp
mov
mov
loope
pop
xor
bound
xchg
fs
push
mov
push
ret
mov
aaa
stc
bound
mov
adc
stos
adc
inc
adc
push
and
sarl
adc
adc
fs
xor
sub
repnz
lock
fdivl
mov
test
sub
pop
pop
sub
data16
and
add
or
pushf
mov
push
jnp
dec
adc
ljmp
ss
hlt
inc
jg
sub
ss
mov
jae
shll
pop
xchg
lds
insb
jae
mov
iret
push
cmp
xchg
xchg
insl
in
popf
fs
dec
lea
jnp
mov
sbb
nop
jns
dec
arpl
insl
in
or
out
stc
es
sub
adc
imul
sbb
add
stos
jns
lret
dec
mov
xor
sbb
ljmp
sub
mov
ds
mov
rcl
pop
jge
stos
loop
test
jno
aas
mov
add
inc
jbe
out
mov
jbe,pn
rep
push
shl
mov
jge
scas
jae
out
jb
and
ja
pop
jmp
out
out
out
push
out
stos
cmpb
mov
outsb
or
cmovbe
pop
enter
jae
add
cld
mov
sbb
lds
test
mov
fs
gs
adcl
push
sub
arpl
lret
int3
loop
pop
inc
push
sbb
dec
xchg
shlb
jo
cmp
xchg
sbb
dec
mov
jmp
std
aam
stos
add
out
lahf
enter
pop
mov
dec
icebp
les
clc
cmp
push
shrb
pusha
mov
push
roll
jnp
lret
adc
cld
loopne
sbb
mov
cmpsb
inc
jle,pt
cmp
mov
fisubrs
shll
jbe
push
lret
dec
loop
mov
scas
test
add
fcomi
sbb
mov
xchg
sub
lods
fdivl
add
or
int
mov
leave
cmp
scas
mov
fmuls
pop
push
mov
in
ret
sub
shlb
xchg
inc
nop
mov
and
fldt
xor
leave
cmc
xchg
mov
adc
test
cmpb
push
cmp
mov
inc
xchg
and
arpl
sub
iret
xchg
mov
call
sbb
subb
mov
inc
mov
sbb
rolb
mov
xchg
sahf
es
test
pusha
xor
sub
fiaddl
ds
jbe
fcoms
lret
cmpl
bound
cmp
mov
push
es
out
add
into
test
clc
jno
dec
dec
pop
add
dec
mov
shll
adc
aaa
mov
cmp
in
out
xchg
jnp
cmp
je
dec
cmp
imul
int
add
inc
repnz
rorb
mov
pop
js
outsb
inc
dec
pop
loope
jmp
push
nopl
sub
fldl2t
jae
gs
push
mov
or
movsb
repnz
or
pop
int3
push
inc
add
push
jns
push
mov
or
js
sub
pop
pop
push
sbb
push
mov
nop
popa
adcl
mov
das
shl
mov
mov
inc
xchg
sbb
cwtl
aaa
cmpsb
test
mov
mov
in
sub
stos
or
cmp
dec
xor
into
test
data16
and
mov
add
es
sub
adc
cltd
arpl
aas
roll
push
dec
test
or
sub
repz
addr16
jo
or
mov
sub
fs
outsl
adc
cs
push
pop
inc
jle
iret
rcrb
inc
mov
add
data16
jle
jo
mov
pop
jp
icebp
mov
inc
or
pop
mov
mov
push
xlat
mov
jge
or
sti
fsts
fists
shl
push
push
test
enter
in
mov
ds
lods
xchg
scas
jg
and
shl
xchg
sahf
push
cmp
push
lahf
repnz
xor
pop
adc
jo
fildl
out
sahf
sub
das
sbb
push
lcall
inc
pop
add
sbb
decl
mov
in
sub
mov
aad
add
mov
jnp
mov
push
loopne
cmp
pop
push
cwtl
fwait
out
fstl
loope
leave
mov
bound
and
out
clc
sbb
in
loope
sub
jno
fincstp
call
lods
cmp
push
jecxz
mov
jno
lret
je
xchg
xchg
popa
jne
add
stos
test
cmp
stos
push
shrl
mov
push
lret
jg
sub
sub
inc
inc
cmp
mov
jno
sub
lcall
je
in
xchg
adc
mov
pop
sub
sbb
in
scas
cltd
dec
cmp
mov
int
insl
sbb
sahf
xchg
test
jge
aam
stos
scas
pop
das
lock
mov
pusha
adc
pop
imul
mov
out
addr16
jae
in
test
push
mov
lock
xchg
push
out
mov
es
or
into
mov
jo
ret
jl
into
lods
sub
and
mov
pop
testb
and
mov
push
addl
xchg
repz
mov
add
dec
popa
cltd
mov
cmp
jmp
sub
bound
mov
frstor
lret
cld
and
out
mov
push
jmp
lret
mov
push
movb
pusha
cmp
sbb
adc
dec
jmp
and
mov
mov
sub
push
mov
push
insl
sub
lds
fbstp
cs
cmp
adc
sbb
repnz
cmp
jp
int
or
or
lds
fstpl
popa
notl
xorb
jae
and
fnsave
fbstp
or
cmp
adc
inc
jae
xchg
cmp
xadd
lods
in
and
adc
imul
aad
addb
jl
es
mov
rcrl
push
mov
xor
and
stc
push
push
push
movsb
je
sub
inc
pop
push
in
fsqrt
stc
imul
jb
insb
inc
cmpsl
insb
fwait
rolb
cmp
pop
jb
enter
or
dec
ljmp
jl
rorl
mov
mov
pushf
cltd
iret
mov
jne
dec
sbb
sti
cmp
scas
mov
idivb
adc
jge
shll
jge
std
pop
jne
insl
mov
mull
push
test
sub
dec
adc
inc
mov
out
xchg
xchg
xor
or
out
or
push
dec
mov
sub
loop
push
pop
lods
sbb
mov
divl
fcmovb
mov
cmp
xchg
pushf
icebp
inc
cltd
insl
pop
jmp
aaa
popa
mov
incl
mov
mov
mov
dec
mov
xchg
mov
pop
adc
insb
fimull
push
clc
or
sub
mov
xchg
mov
cmpsl
lods
scas
cltd
xchg
movsl
test
mov
clc
inc
test
add
sbb
or
outsl
pop
call
sahf
xlat
add
arpl
cmc
pop
mov
and
not
push
or
int3
fcom
add
adc
push
ljmp
loopne
andb
pop
sti
mov
or
shrl
inc
push
cmp
sti
cmpsl
stos
jb
loope,pt
bound
jbe
int3
sub
jne
cs
mov
jnp
adc
addb
and
mov
mov
cmpsl
aaa
daa
jl
cmp
sbb
lods
out
and
std
xor
push
enter
jnp
ss
xor
dec
sbbl
adc
and
iret
cld
pop
sti
cwtl
sbb
pop
popa
imul
cwtl
int
clc
xchg
or
gs
jecxz
cltd
daa
ss
out
dec
popf
mov
mov
pusha
jns
jns
sbb
mov
mov
push
std
push
sub
mov
add
icebp
ds
adc
popf
xor
mov
cmp
jno
cmpb
fs
mov
xor
xor
jb
sbb
xlat
mov
xor
cmp
js
push
jge
ficoms
aam
lock
inc
imul
leave
pop
mov
mov
mov
out
arpl
aaa
and
inc
cmp
int
daa
cmpsb
mov
decb
popa
clc
sub
sbb
loope
cmc
pop
mov
or
xchg
dec
iret
es
bound
xchg
or
arpl
push
sbbl
adc
or
jmp
mov
dec
inc
lock
data16
jge
imul
bound
adc
rcl
loop
xchg
lahf
mov
xlat
outsl
movsb
adc
xchg
gs
mov
push
int3
and
test
test
stc
lods
test
fimuls
aas
out
fadd
pop
sbb
sbb
and
es
xchg
mov
test
mov
cmp
das
dec
push
jns
jno
mov
mov
sbb
out
or
dec
lods
cli
sbb
inc
add
out
fyl2x
push
sbb
fisubrs
jmp
test
loop
adc
fsubrp
pop
leave
imul
pop
cmpsb
cmp
fmuls
mov
dec
adc
jne
push
push
xor
cmp
lahf
stos
loop
jae
lret
jnp
loop
rcrl
nop
cmpsl
jo
and
pusha
dec
jb
shlb
decl
hlt
mov
mov
jge
shll
rorb
repz
adc
pop
pop
xor
fwait
xor
xor
in
loop
cmp
imul
xor
mov
movsb
sbb
cmp
add
lds
mov
mov
push
mov
addb
fldcw
movsb
mov
push
mov
xor
and
push
ljmp
adc
ficoms
xchg
xor
sbb
je
mov
fistpl
cmp
xchg
stos
fisubs
xchg
enter
sub
jbe,pt
shll
jno
cld
imul
dec
dec
dec
hlt
insl
jg
rcrl
inc
mov
cmp
jb
scas
sub
loop
dec
fnstsw
inc
in
sti
mov
fsubrp
sbb
stos
dec
outsl
dec
xor
lds
mov
sbb
loope
push
popf
push
daa
mov
fucomip
and
sub
xor
dec
inc
lahf
cmpsb
jo
mov
push
subb
and
mov
inc
adc
lcall
sbb
pop
ljmp
mov
dec
xchg
mov
in
mov
lret
adc
scas
mov
shrb
test
ss
jle
push
jne
dec
and
and
sub
mov
enter
pop
je
cs
sar
add
sti
or
into
insl
in
mov
pop
push
jle
xchg
pop
mov
das
add
out
div
lods
lret
add
jge
popf
pop
push
pop
pop
into
mov
mov
orb
scas
push
repnz
sub
mov
pop
scas
mov
jb
in
and
mov
cld
inc
fnstcw
push
std
and
sahf
shll
dec
ficomps
cmp
cmp
ret
xchg
adc
dec
mov
adc
pop
fdivs
adc
mov
out
clc
fisubrs
lods
sub
ja
or
insb
insl
sub
adc
outsb
insb
inc
fisttps
adcl
dec
lahf
les
dec
xchg
out
and
xor
cmp
xchg
pop
frstor
xchg
ljmp
dec
xchg
xchg
inc
popa
fsts
adc
orb
fcomi
jp
inc
ss
push
xchg
mov
mov
ficompl
inc
rcll
lret
sbb
addb
inc
scas
mov
or
push
xorl
mov
ret
mov
clc
test
jno
sbb
add
pop
mov
fadd
sub
ds
test
xchg
addr16
fldt
sub
je
jnp
adc
out
pop
addr16
xchg
push
sahf
imull
or
leave
inc
pop
stc
out
pusha
iret
add
cmp
jns
out
std
stc
jge
dec
mov
sarl
aad
and
mov
cld
lds
out
int
sbbl
dec
test
xchg
xor
mov
inc
int
mov
test
mov
adc
dec
dec
pusha
xchg
inc
pop
jg
mov
mov
xchg
cmp
ret
iret
lea
aas
loop
sub
outsl
jle
xchg
sub
add
pop
add
xor
sti
adc
scas
sti
jnp
and
data16
rcrb
mov
push
mov
add
test
cmp
jmp
and
add
xlat
rcl
roll
xor
mov
mov
mov
imull
sub
mov
xor
sbb
outsb
dec
jnp
loop
cmpsl
mov
mov
outsl
inc
xchg
adc
aam
out
mov
xchg
inc
mov
push
cmc
adc
sbb
xchg
sub
jne
xchg
pop
bsr
arpl
inc
pop
fstpl
in
xor
int
setb
sbb
dec
add
adc
cmc
jnp
sbb
dec
jle
adc
add
stc
mov
test
push
jae
xchg
xchg
insb
in
rclb
jp
fstps
fimuls
pop
xchg
aam
test
inc
mov
cmp
jae
or
cs
aas
scas
stos
xor
fisttpll
push
mov
das
enter
icebp
jae
out
movlps
push
inc
sbb
sbb
imul
mov
lods
jnp
jne
repz
in
loopne
shll
add
pop
scas
pop
fcoml
iret
call
dec
mov
dec
fldl
gs
enter
fldenv
inc
sbb
sub
pop
lock
push
cmovne
inc
je
add
inc
mov
movsb
lahf
inc
inc
jns
xor
xchg
outsl
addb
test
loop
in
mov
outsb
adc
mov
mov
data16
shlb
scas
or
inc
jbe
and
push
scas
add
fistl
outsb
into
sbb
mov
jmp
mov
mov
rorl
lcall
inc
push
in
cmp
jp
lds
xchg
mov
das
xchg
pop
xchg
ror
scas
lret
mov
pop
imul
sbb
pop
jno
dec
mov
and
test
xor
clc
imul
aaa
or
test
into
imul
lods
and
or
push
out
xchg
into
fildll
push
push
out
adc
aad
push
cli
add
sbb
outsb
outsb
test
mov
push
lds
push
aam
mov
cmc
in
imul
adc
and
sbb
cmpsb
in
mov
mov
push
jb
popa
inc
out
arpl
inc
pop
mov
icebp
cmp
cs
xor
out
nop
sub
mov
inc
outsb
xor
divb
inc
xlat
fnstsw
adc
rclb
xor
add
das
pop
fsubs
nop
inc
xor
pop
outsl
cmp
and
sbb
cld
mov
xchg
dec
pushf
adc
push
cmp
and
aad
dec
mov
leave
add
jno
cltd
ja
mov
jbe
mov
mov
push
aas
clc
fwait
xchg
ljmp
pusha
scas
pushf
imul
sub
leave
mov
push
fidivl
lret
lret
xchg
mov
repz
cmpsl
or
aam
jne
pop
mov
es
fs
mov
jbe
stos
fadd
fadd
nop
lds
stc
cmpsl
mov
sbb
jo
popa
adc
fwait
push
rclb
adc
out
inc
sbb
out
insb
xor
je
mov
bound
mov
scas
jl
mov
lahf
icebp
roll
push
inc
hlt
sub
enter
mov
sbb
lahf
addb
add
xor
addr16
mov
scas
arpl
mov
cmp
addr16
xchg
outsl
fdivr
scas
mov
cmpsl
push
nop
leave
gs
adc
xchg
cli
pop
lahf
scas
daa
adc
test
push
jne
xchg
inc
andl
mov
or
push
fbld
sbb
mov
nop
cld
inc
xchg
pop
dec
add
movsl
pop
popf
fiaddl
and
stos
lods
xor
stos
or
pop
sahf
ljmp
xchg
sub
les
inc
je
lcall
jb
mov
jne
cld
xchg
leave
adc
clc
cmp
out
and
lods
stos
dec
cld
std
jle
test
push
adc
jnp
or
and
adc
sub
icebp
jb
push
push
into
xorb
adcl
dec
cld
sahf
test
dec
test
mov
clc
ja
jge
or
jns
push
iret
clc
cmp
out
jp
insl
cmp
cmp
popa
lock
mov
inc
pop
loope
test
cmp
lods
mov
push
mov
insb
jmp
mov
sahf
pop
fwait
popa
movsl
scas
dec
cmp
les
in
adc
insb
addb
cli
pop
sub
xor
aam
sub
imul
ret
insl
adc
dec
mov
stos
mov
pop
ljmp
jo
pop
and
or
xlat
jb
inc
inc
sti
in
pop
decl
pop
cld
icebp
lock
inc
add
cmp
ret
xor
cmp
ret
cmp
jg
mov
inc
stos
push
fdivrp
or
scas
sbb
iret
stos
or
sub
xchg
sahf
push
xchg
js
sub
stos
f2xm1
shll
cmpb
inc
jb
mov
psubsw
enter
pusha
or
enter
lock
movl
mov
dec
xchg
data16
sbb
fs
or
sbb
inc
jnp
lock
fistl
sti
mov
in
lods
mov
aaa
mov
stos
movb
xchg
pop
mov
repnz
sbb
cmpsb
jge
imul
and
add
aad
and
arpl
ljmp
push
jecxz
or
jg
stc
cwtl
dec
ret
sahf
mov
or
jbe
lods
ds
insl
jp
sub
out
jae
scas
and
gs
mov
sahf
ja
mov
addr16
mov
mov
mov
int3
mov
int
push
insb
loopne
mov
in
or
mov
pop
into
ret
fildll
shlb
xor
pop
add
daa
xor
in
popf
dec
jo
sahf
sbb
jge
sub
jnp
dec
aad
jne
jnp
pushf
negl
dec
ja
ljmp
fisttpl
fdivrs
ss
cwtl
dec
mov
inc
into
test
gs
jns
fcmovnbe
mov
mov
sar
in
adc
and
mov
dec
cmp
pop
in
arpl
dec
or
mov
add
push
mov
adc
jo
in
inc
imul
mov
test
movsb
roll
pushf
add
mov
pusha
xchg
scas
jle
cltd
stos
insl
in
xchg
push
in
jnp
outsb
orb
jge
test
dec
shlb
mov
push
cmpsl
cmp
ljmp
sbb
mov
cs
scas
mov
push
aad
nop
pop
lods
mov
ljmp
ja
and
jno
int3
sub
cwtl
xor
mov
adc
lahf
inc
inc
xor
lds
mov
xorl
rolb
addl
stc
es
popa
fistpll
ljmp
flds
push
pop
fstpt
leave
fwait
divl
jnp
hlt
lea
cmp
xor
lret
js
push
sbb
dec
movsb
out
imul
vsubss
je
mov
cwtl
data16
mov
or
push
push
cmp
xor
and
and
jmp
and
cwtl
dec
push
cmp
dec
adc
and
pop
ret
stos
out
adc
mov
pop
pop
rcr
dec
cli
fst
add
push
lahf
out
push
jge
imul
fnstcw
ficoms
ljmp
inc
cmp
adc
jno
and
push
sti
mov
outsb
insl
sbb
xchg
fdivl
rol
cmp
lock
mov
and
cmp
sbbb
mov
sub
stos
mov
sub
jg
nop
imulb
mov
ficoml
or
fsubrs
dec
jp
and
hlt
mov
dec
and
cwtl
ret
pop
addl
mov
push
lds
pushf
cltd
xchg
out
cltd
xor
lods
movsb
sbb
mov
xchg
jle
adc
das
dec
bound
jge
pop
jle
lcall
jl
pop
lcall
lcall
cmpsb
imul
adc
fmul
xor
xchg
push
enter
insl
add
xlat
and
inc
xchg
and
pop
in
stos
mov
movb
xlat
scas
std
rorb
imul
in
imul
test
xor
xchg
pop
jmp
push
dec
or
and
lock
pop
pop
shll
xchg
sbb
jno
xchg
cmp
xchg
inc
xchg
decb
dec
push
into
add
add
push
mov
inc
ljmp
lret
xor
push
pop
je
scas
mov
leave
out
ret
fdivl
movsb
in
test
push
push
cmp
and
or
jae
jg
mov
mov
or
test
std
fdivl
sbb
rclb
xlat
fcmovnb
pop
or
dec
repnz
std
loop
repz
mov
jb
mov
arpl
cli
cmpl
test
gs
in
bound
xorl
cs
and
imul
mov
pop
shrb
in
arpl
rorl
rcrl
call
in
stos
arpl
and
rcl
add
sub
xchg
pop
repnz
pusha
and
rcll
aas
lock
fwait
sbb
sbb
cmpsl
xchg
dec
mov
mov
aas
pop
call
movsb
inc
lahf
notb
stc
cmp
insl
shrl
repnz
dec
push
adcl
mov
movsl
nop
xor
int3
inc
push
je
insl
sti
sbb
jae
loopne
cmp
fdivrs
fsubl
out
adc
outsl
mov
cmp
xor
cli
aaa
sbb
cli
cli
push
inc
or
cmc
lahf
mov
pop
ja
es
dec
pop
jp
add
cmp
imul
or
push
int3
and
out
pop
xchg
lds
mov
cmp
pusha
bound
ljmp
fistpl
mov
lcall
aas
in
or
and
sub
dec
jae
pusha
mov
cwtl
cmp
pop
stc
cmp
jns
cmpsb
mov
sbb
sub
int3
sub
pop
loop
insb
dec
pop
ret
sub
cld
cmpsb
fistpll
or
mov
pop
cltd
test
mov
lods
adc
xchg
test
sahf
xor
mov
cmp
jl
cld
mov
pop
add
cwtl
mov
scas
testb
xor
movsb
push
sub
fcmovb
aas
mov
push
cmp
adc
mov
inc
mov
mov
movsl
aaa
imul
adc
loopne
test
movl
ret
xchg
adc
hlt
xchg
push
mov
iret
jns
dec
push
jecxz
mov
sub
andb
fcmovu
hlt
mov
hlt
movl
fdivrs
xorb
mov
iret
ret
out
or
cli
cli
mov
div
aas
movsb
xchg
adc
adc
and
cwtl
xor
xchg
jge
js
in
dec
lea
mov
or
cld
roll
test
addr16
sub
lret
mov
inc
jb
add
dec
ficomps
jnp
iret
mov
mov
out
insb
dec
mov
mov
mov
jmp
fcompl
scas
jle
add
sti
cs
subl
stos
pop
jp
add
sub
es
rorb
adc
ret
aad
mov
shrb
add
arpl
jg
mull
xor
and
dec
setns
clc
xchg
jnp
insl
pop
pop
iret
subb
dec
xchg
shrb
xchg
outsb
jmp
sub
idivl
stos
icebp
sbb
data16
dec
sbb
jnp
lahf
dec
and
test
mov
push
rorb
sub
and
push
scas
int3
jge
ds
shlb
aas
dec
mov
push
pushf
aad
jl
adc
adc
pop
lds
je
jne
das
add
dec
ss
jmp
aam
fisubrs
les
mov
in
push
das
icebp
add
shlb
lret
sbb
cltd
fldt
and
mov
testl
cmp
push
jo
rcll
rdmsr
sub
sub
xchg
sbb
xchg
mov
and
nop
ja
jbe
mov
inc
enter
sbb
faddl
mov
ja
add
scas
jne
or
jl
mov
and
shrl
jb
lret
ds
cmpsl
lods
dec
shll
jns
gs
cmpb
jnp
xor
jl
in
lcall
addr16
rcr
push
sbb
push
mov
push
movlps
rclb
sbb
sahf
pop
cld
mov
mov
adc
pop
and
sbb
pushf
imul
jmp
xlat
dec
jb
mov
xor
lods
enter
lods
push
xrelease
push
mov
mov
jo
or
lods
push
out
cmc
or
int3
ljmp
rorb
jp
std
xchg
loope
iret
int
add
jbe
adc
nop
mov
jne
mov
mov
push
sub
push
std
xor
bound
daa
jl
sbb
sbb
jecxz
cmpb
cld
mov
push
addb
adc
inc
shll
or
xchg
icebp
jb
rol
and
or
insl
xor
sahf
jae
mov
adc
or
out
jbe
jecxz
push
popa
repz
or
sbb
adc
movsl
xchg
xor
aad
mov
or
aam
addr16
imul
out
or
push
cmp
lret
mov
jo
mov
stos
aad
inc
mov
xor
cmp
dec
dec
pop
and
and
movsb
inc
mov
add
notl
js
push
push
cmpsl
hlt
aaa
sub
enter
pop
push
sti
lock
clc
mov
les
fildl
add
jp
mov
inc
mov
push
in
shrl
rol
int3
mov
xchg
jbe
adc
cmp
mov
ret
mov
xchg
out
adc
aad
dec
or
cmpsb
movsl
movsb
push
mov
pop
sbb
and
les
xchg
in
popa
ret
and
out
or
in
inc
ret
in
aam
dec
sbb
jno
pushf
enter
shrb
cmp
fstpt
mov
sbbl
iret
mov
pop
or
add
xor
inc
rolb
clc
jbe
mov
rcrl
mov
mov
add
loopne
fistpll
jecxz
or
xchg
stos
aad
add
cmp
adc
imul
fsubr
idiv
hlt
mov
xor
lret
movsl
xchg
test
insl
out
in
jmp
das
dec
lret
pop
xchg
movb
jb
pop
imulb
aam
jo
mov
xchg
inc
ret
or
or
lock
inc
push
mov
cli
push
stc
aaa
xchg
and
pop
jbe
fcoms
pop
push
mov
adc
inc
pop
xor
bound
rolb
dec
sub
mov
iret
push
jae
popa
stos
mov
push
inc
or
fstl
lret
sub
sub
jmp
mov
cmc
pop
add
cmp
aaa
ds
jl
bound
push
xlat
dec
les
and
dec
push
je
ss
jmp
cmp
dec
inc
push
mov
pusha
sub
es
adc
adc
sbb
inc
ss
pop
das
cwtl
or
lret
xchg
cld
mov
mov
add
jne
jmp
je
lcall
sbb
fisubrs
je
pop
ds
inc
cltd
stos
pop
or
fsubrp
jp
push
adc
inc
xor
adc
loopne
icebp
sbb
icebp
insl
mov
outsb
stc
pop
mov
enter
xor
ret
daa
ja
cmp
inc
jae
rcl
shl
fmuls
js
popw
mov
in
and
cli
xlat
jge
repz
pop
fildll
pushf
cwtl
in
sbb
out
jbe
cmpsb
pop
lahf
add
int3
lret
pusha
jns
insl
and
pop
fmull
pop
jnp
std
mov
mov
cmc
lcall
idivb
lea
mov
jae
out
mov
and
cmpsl
cmc
enter
cmp
out
cmpsl
scas
cmp
stos
ja
jle
push
xchg
add
adc
out
filds
add
sbb
jbe
rorb
aas
sbb
mov
xor
std
test
repz
sbb
test
mov
add
and
stos
push
and
test
ja
mov
nop
aas
push
pushl
jecxz
jno
inc
je
sbb
cwtl
ss
xchg
xor
push
push
mov
fisttps
aas
std
pushf
jg
inc
jmp
pop
movsb
or
iret
jecxz
mov
sahf
call
loop
test
cmp
xorb
xchg
pushf
mov
push
aad
out
rclb
mov
rorb
sahf
pop
xchg
cltd
test
cs
fdiv
lcall
pop
sub
sbb
jbe
stos
rolb
mov
outsb
xchg
xor
cmp
add
cmp
leave
and
jge
mov
stc
xchg
jne
inc
push
and
in
fs
xor
sub
arpl
or
dec
dec
pop
call
mov
imul
rorl
mov
cmp
jae
adc
cmp
sub
pop
inc
inc
push
sahf
mov
iret
adc
or
xchg
sub
push
jp
out
test
andb
test
cmp
or
cltd
jo
gs
pop
push
loope
outsb
jns
xlat
adc
es
outsb
fbld
fisubrl
test
xchg
rorl
push
in
mov
mov
xchg
test
mov
mov
or
ret
fldl
inc
scas
lods
mov
das
add
inc
xor
lahf
sub
lock
xor
pop
cmpsb
add
pop
fmuls
jns
loop
mov
in
xor
call
push
clc
mov
pop
mov
push
cmp
sbb
mov
and
jae
add
xchg
hlt
cmp
mov
mov
es
adc
sbb
push
mov
pop
mov
jo
insl
and
jmp
inc
mov
gs
dec
add
arpl
inc
and
jne
add
lret
mov
mov
mov
out
xchg
daa
lds
repz
daa
test
imul
mov
xor
pop
lret
call
call
add
lock
mov
add
popa
jmp
cmp
int
or
stc
or
shr
mov
push
jbe
cmp
ret
xchg
mov
scas
mov
lds
adcl
cli
xchg
inc
in
fcmovu
fs
add
arpl
inc
test
add
mov
pop
jp
ja
sub
mov
mov
mov
push
cltd
popa
add
insb
add
sub
les
cmpsl
push
hlt
push
or
loopne
ljmp
cltd
jnp
insb
repnz
fisubrs
stos
pop
inc
xchg
push
xchg
jae
xor
adc
push
lret
int3
adc
mov
xor
cmp
fnstcw
sub
adc
loop
mov
add
decl
and
xor
adc
lods
aaa
cmp
mov
mov
sarb
mov
jle
mov
stos
scas
inc
mov
fwait
mov
scas
mov
mov
xchg
or
jg
das
fnsave
jl
out
mov
pop
mov
add
test
popf
sbb
dec
mov
xchg
xor
into
cmp
xchg
xchg
sub
jecxz
dec
stos
ret
mov
xlat
repnz
das
cli
clc
fsts
pop
adc
dec
dec
inc
bound
inc
xchg
mov
adc
dec
dec
cs
jmp
xchg
and
xchg
movlps
scas
jbe
fcoms
jmp
lods
xchg
xchg
in
enter
xchg
das
ja
ds
and
ret
mov
pusha
dec
mov
hlt
std
xor
fadds
movsb
and
jp
repz
pushf
mov
subl
inc
stos
in
in
sub
shrl
xor
fimull
inc
cmp
mov
xchg
xor
xchg
sub
and
int3
or
sub
push
pop
xor
xchg
mov
mov
mov
mov
ficoml
popf
or
jg
pop
or
or
imul
adc
add
jno
and
movsb
pop
in
test
mov
inc
cmpsl
js
adc
sbbb
das
cmp
inc
lods
mov
mov
lds
jnp
mull
fdivl
fidivl
imul
test
xchg
jp
dec
es
out
mov
es
xor
cmpsb
dec
pop
inc
je
scas
and
mov
cmc
dec
adc
adc
orb
mov
inc
out
jg
push
mov
clc
loop
mov
inc
int
and
mov
and
push
inc
mov
or
and
loope
jb
or
pop
scas
stos
sub
adc
js
shll
inc
cmc
dec
add
pop
shll
js
push
lds
jbe
add
das
imulb
xor
inc
or
adc
mov
jne
xlat
mov
mov
xchg
dec
faddl
jl
sbb
xchg
addr16
push
mov
xchg
add
push
lcall
imul
jg
lods
ljmp
dec
sub
inc
and
push
adc
or
mov
fiadds
and
xor
dec
and
pop
and
adc
lret
out
adc
into
popf
push
inc
add
adc
leave
jne
mov
sti
lods
push
out
xchg
mov
aam
cwtl
or
cmp
lret
addr16
ret
inc
clc
clc
jp
gs
lcall
dec
xchg
insl
xchg
dec
mov
lods
push
pop
jl
inc
add
inc
sub
or
std
dec
loope
fidivs
negl
icebp
enter
xchg
andb
push
mov
adc
adcl
lret
jmp
in
mov
jg
mov
outsl
popf
jns
insl
mov
cmp
lea
mov
or
mov
mov
xor
inc
stos
or
sub
or
mov
fsubrl
adc
cmpsb
in
std
int
and
lock
in
scas
or
cmp
frstor
mov
lea
icebp
pop
test
js,pn
push
or
fdivl
shr
xchg
mov
jne
negl
mov
mov
mov
or
aam
cmpsb
pop
pop
int
pop
cmp
jne
jg
jnp,pt
jle
roll
sbb
jl
add
fnstsw
lahf
cmpb
cmp
lcallw
stos
rcll
mov
dec
leave
jl
mov
outsb
and
in
sbb
or
adc
ret
popf
push
dec
pop
cwtl
xchg
dec
and
inc
mov
fs
dec
mov
add
icebp
dec
shlb
test
cmp
into
and
mov
mov
ljmp
jge
add
adc
jmp
add
dec
test
xlat
jo
test
dec
aad
mov
pop
pop
push
lea
push
outsb
fsub
pop
cwtl
int
rcll
in
stos
inc
nop
sbb
loopne
and
xor
iret
pop
xchg
xlat
sahf
xor
test
insb
mov
inc
pop
mov
pop
aad
pop
cmp
xlat
jo
add
fsubs
rcrl
outsb
and
icebp
xor
mov
mov
dec
fbstp
lock
mov
leave
insl
pop
fnstcw
adc
dec
in
daa
jae
in
mov
mov
sbb
pop
and
shrb
jae
scas
mov
xchg
out
dec
xchg
pushf
sub
pop
pop
pusha
jne
les
adcl
aas
mov
push
mov
out
add
arpl
xchg
cvtdq2ps
ffree
mov
subb
jl
push
push
insb
push
std
xor
fadds
rolb
adc
arpl
in
cmp
jae
jae
dec
dec
dec
aam
sbb
push
call
sbb
push
scas
push
in
inc
xchg
movsb
fldl
ss
push
mov
arpl
pop
mov
cli
sub
push
jecxz
arpl
cmp
xlat
push
orl
push
or
andb
rcr
mov
aad
negb
hlt
mov
nop
ljmp
sub
lock
dec
mov
fnstsw
lods
out
cli
repnz
fadd
addr16
enter
lcall
in
fs
adc
lods
pop
mov
dec
sete
pop
pop
popf
sub
addl
cli
lods
cmp
mov
fstl
sub
iret
add
push
lods
filds
in
sbb
imul
cmpsb
push
push
sub
cmc
sub
cmp
and
dec
xchg
and
mov
mov
je
popf
or
mov
inc
or
cld
xorl
js
adc
lahf
sub
jle
inc
outsb
pop
icebp
or
movsl
ja
lret
sbb
gs
inc
xor
pop
push
leave
and
xchg
pop
scas
jo
pop
cltd
mov
mov
testl
or
xchg
mov
pop
hlt
jb
cmp
sbb
sahf
pop
mov
push
xchg
push
dec
in
daa
adc
sbb
adc
pop
test
stos
js
inc
stc
push
cmpl
jns
sbb
or
scas
cmp
dec
fistl
sub
lret
shrl
lods
ficoml
movsb
push
inc
xor
xor
scas
mov
js
fnstenv
sub
xchg
mov
aaa
int3
std
adc
movsb
cmp
bnd
ljmp
mov
and
adc
sbb
pop
je
cs
lahf
test
out
jo
and
dec
sti
sbb
mov
cmp
es
pop
push
int3
jnp
les
cmp
cmp
sub
xchg
fucom
insl
into
out
mov
clc
push
and
jb
icebp
enter
mov
sub
mov
sub
outsl
lods
icebp
sahf
int
xor
addr16
mov
shll
das
lods
test
jle
sub
dec
sub
add
dec
int3
loope
cld
outsl
jnp,pt
sub
push
xchg
rcr
aas
jl
inc
mov
pop
and
enter
clc
cmp
jmp
lds
mov
pop
pushf
and
xchg
adc
push
jge
xlat
inc
icebp
subl
xor
jecxz
test
fwait
jl
icebp
fistps
mov
mov
sbb
xor
cmpb
lcall
add
add
xchg
divl
pop
mov
out
clc
mov
push
insb
mov
adc
pop
inc
repz
mov
push
inc
sti
pusha
cmp
loope
mov
out
and
dec
gs
and
mov
sbb
fstpl
in
cli
jno
push
stos
xor
jo
jl
ret
push
cmp
cs
jbe
out
subb
lods
dec
std
ja
push
sub
into
sahf
out
xchg
jnp
test
inc
out
adc
enter
and
adc
push
sbb
dec
push
test
lods
adc
addr16
imul
sub
push
shl
jp
xor
push
pop
cmpsl
xchg
sbbl
out
mov
push
or
push
pop
pop
pop
mov
in
inc
jo
pop
clc
cmp
std
push
in
sbb
and
lret
inc
aad
roll
stc
arpl
std
pop
adc
mov
stos
and
call
sahf
mov
dec
stos
fwait
test
sub
mov
les
push
lds
mov
dec
xchg
adc
call
mov
push
imull
jns
pushf
inc
std
pushf
pusha
sub
insl
dec
leave
ret
jl
dec
pop
xor
call
or
imul
dec
lods
sbb
xor
mov
pop
mov
into
mov
xchg
push
repnz
pop
and
dec
cmp
xchg
jne
jo
fwait
jb
mov
sub
jo
fwait
and
push
sarl
into
dec
scas
ficoml
jo
imul
push
push
push
loop
fisubrl
shrl
xchg
stos
imul
pop
xor
enter
sub
idiv
rcr
inc
lcall
in
mov
sub
pop
sbb
mov
scas
pop
popa
and
insl
sub
jbe
cmp
pop
cltd
inc
and
iret
pop
or
bound
push
push
push
insl
loope
and
pop
inc
push
sti
clc
pop
mov
xor
mov
xor
jb
fistps
mov
mov
ret
outsb
aaa
xchg
xlat
mov
lods
imul
push
jle
sub
das
in
inc
sub
mov
lret
dec
sub
xchg
cmp
xchg
pop
in
mov
mov
cwtl
enter
xchg
push
push
sbbb
ljmp
push
and
cmpsb
and
adc
mov
xor
inc
or
xchg
push
movsl
lret
mov
push
mov
not
loop
enter
das
inc
mov
push
mov
inc
or
mov
insl
loopne
adc
dec
pop
mov
clc
sbb
push
fsubr
add
lret
pop
xlat
fisttpl
imul
xor
xchg
aaa
ljmp
add
rorb
inc
in
hlt
pop
in
out
fisubrs
xchg
movsl
je
push
test
lock
inc
sbb
daa
aam
jno
xor
sbb
fcmovnb
jno
push
cmpsl
add
addl
xor
les
push
push
inc
out
mov
pop
mov
lahf
mov
das
jns
enter
nop
mov
loopne
scas
xchg
xlat
mov
iret
adc
jecxz
stos
pop
lea
orb
push
or
out
in
testb
into
mov
out
mov
push
push
jp
test
cwtl
cmc
or
mov
or
xor
jo
cltd
xchg
fwait
push
mov
lret
sbb
movsl
xor
and
jbe
push
loope
cld
sbb
lcall
push
xor
fxch
aam
jne
mov
xor
jb
adc
jae
int3
ret
mov
cmpsb
jae
jno
popf
mov
mov
inc
push
add
or
int
outsb
out
and
xchg
lock
popf
cmp
adc
or
jmp
push
pop
jns
in
jns
sub
loopne
pushf
lret
push
mov
cmp
inc
in
xchg
into
sbb
dec
push
mov
lock
daa
mov
fwait
push
push
inc
push
mov
shrl
pop
pop
fwait
test
cld
sbb
adc
aas
xor
jnp
lock
xchg
icebp
data16
mov
ljmp
fabs
enter
aad
sbb
mov
sbb
xor
jp
mov
mov
sub
jle
or
cli
aam
daa
test
imul
cmp
xchg
xlat
or
add
outsb
and
add
punpckhdq
cwtl
jmp
movsb
out
jp
mov
pop
pop
sbb
orl
scas
pop
cltd
subb
lock
inc
int
push
xor
sahf
testl
mov
hlt
test
int3
xor
lcall
mov
sti
fstl
jge
repnz
add
in
push
test
mov
aas
pop
insb
lods
mov
jge
fidivrl
and
adc
fbstp
inc
shlb
divl
pop
cmpsl
dec
shrl
in
into
icebp
outsl
inc
scas
add
sbb
mov
mov
push
std
adc
dec
lcall
cltd
jb
cmp
jne
adc
cmp
mov
out
test
sbbl
jno
rol
popa
xchg
push
dec
adc
mov
orl
icebp
loopne
loopne
or
ret
daa
iret
test
lcall
inc
add
mov
dec
adc
cmc
idivl
mov
jge
out
cmp
int3
fmulp
xchg
stos
out
decb
cmp
call
inc
scas
andl
mov
sbb
lea
jmp
scas
test
lods
jae
jo
nop
pusha
push
mov
xchg
scas
and
add
and
add
pop
dec
cmp
sahf
in
outsl
adc
cmp
cs
sub
clc
mov
fnsave
push
xchg
adc
aaa
out
dec
lahf
jp
pop
xchg
repz
jae
shl
jmp
and
mov
jnp
and
inc
rolb
fs
lock
cmp
loopne
push
xchg
pop
jp
mov
jmp
fdivp
mov
mov
imul
jno
cmp
and
mov
lods
stc
xchg
testb
jbe
xchg
daa
push
sub
or
mov
mov
add
push
cmc
int3
dec
xor
pop
push
ficoml
jl
mov
imul
aad
daa
and
and
pop
popa
mov
shrl
cld
xor
pop
cmpsl
pop
sbb
pop
movb
int
mov
sub
jb
xchg
xlat
mov
dec
jno
test
sub
call
scas
xchg
add
xor
daa
xlat
scas
je
jns
adc
cmp
mov
das
sub
cmp
push
mov
jmp
lcall
pop
rol
roll
mov
loop
stc
stc
or
push
mov
imul
insl
repnz
push
jo
jno
xchg
adc
or
pop
push
mov
negl
cmpsl
xor
add
data16
int
fwait
lods
aam
mov
fcomi
mov
pushf
xchg
mov
lods
jnp
cmc
iret
adc
cmc
ret
mov
mov
idivb
push
sahf
arpl
rcll
out
xor
cmc
pop
test
int
pop
dec
daa
aam
aaa
or
sub
mov
repnz
xchg
cmp
add
ljmp
jecxz
fstl
and
adc
movb
dec
jno
cli
lds
cmp
pushw
mov
jne
popf
lret
dec
mov
pop
cmpsl
add
scas
dec
sbb
cmp
mulb
les
shll
gs
pushf
jo
mov
lret
jle
shrb
loopne
xor
push
jae
out
adc
add
jns
shlb
idiv
xchg
insl
pop
pop
mov
add
aas
xor
push
mov
sahf
pop
dec
sub
lds
pop
shl
mov
or
cmp
pop
mov
jl
cmpsl
jp
mov
cwtl
insl
js
and
fisubrl
pop
ss
jl
mov
cltd
cmp
sbb
imul
lcall
aaa
popa
and
pusha
mov
add
jp
mov
ret
icebp
dec
imul
pushf
sahf
in
push
mov
fsubrl
imul
movsl
xor
hlt
pcmpgtb
push
lahf
mov
mov
pop
sbb
decl
pop
and
ja
xchg
sbb
sub
mov
in
scas
xchg
push
xchg
imul
mov
jns
add
xor
jno
jb
lea
js
pushf
adc
popf
jle
mov
rcll
ds
jl
push
loop
mov
stos
iret
cmp
in
pop
inc
mov
mov
cmp
or
push
inc
inc
push
dec
jg
jmp
jl
fistl
add
int3
mov
cmp
bound
outsl
testb
cmp
imul
rol
insl
sbb
pop
mov
rol
dec
cld
xchg
and
enter
les
adc
lock
out
inc
xchg
ljmp
hlt
ficoms
aam
insw
movsb
shl
iret
xlat
out
cltd
jno
and
js
movsb
xchg
sub
add
scas
shrl
pop
ss
ret
pop
js
xchg
sbb
add
xor
incl
insb
addr16
mov
cmpl
hlt
stc
push
popa
sti
xchg
push
dec
into
push
cmp
inc
cmpsl
add
xchg
scas
xor
arpl
shl
cmpsb
fstpt
mov
hlt
into
dec
outsl
mov
nop
les
loope
cmp
and
sbb
adc
mov
cmp
lea
sahf
popf
jmp
flds
cmpsb
xchg
enter
add
in
cwtl
cmp
jl
jge
inc
mov
mov
out
sbb
add
mov
out
in
inc
pop
mov
pop
xchg
scas
je
jb
push
test
outsb
add
sbb
lods
rcrb
jbe,pn
lahf
cmp
and
sti
and
ss
out
xchg
pushf
mov
lds
or
xchg
gs
dec
cs
mov
cmpl
data16
rolb
push
jo
push
and
fsubrs
cmp
mov
inc
pop
mov
pop
divb
xchg
pop
cmc
push
sub
mov
imul
shll
aam
add
sar
sub
cmpb
add
cmc
xor
cld
sbb
lahf
or
cmp
push
and
mov
sahf
xchg
inc
call
lds
scas
xchg
mov
pop
int3
inc
dec
sbb
addl
pop
mov
mov
xchg
stos
jle
scas
in
xchg
hlt
fcomp
pop
or
movsl
and
mov
int3
sbb
inc
pop
or
outsl
cwtl
nop
movsl
stos
add
xchg
xchg
repz
scas
or
xchg
jne
cwtl
mov
mov
mov
inc
inc
in
jg
xchg
roll
mov
stos
in
inc
rcrl
dec
fsubs
cmp
out
pop
jb
es
mov
ljmp
test
sbb
jno
jecxz
adc
arpl
pop
and
hlt
dec
xlat
adc
stos
push
sub
xchg
fimull
icebp
mov
jmp
fcoml
cmpsl
cmp
test
sub
xchg
fs
push
daa
psllw
add
scas
dec
shrl
rcrb
xor
jnp
inc
sbb
xchg
test
xchg
sbb
fwait
std
jae
inc
test
xor
cmp
int3
roll
out
je
add
dec
hlt
dec
outsl
mov
add
insb
sub
mov
scas
jmp
pushf
jae
pop
test
sbb
sbb
xor
fwait
in
push
push
xchg
outsb
xor
call
call
sti
xchg
lds
pop
in
dec
out
mov
xor
iret
cmpsb
mov
pop
dec
xor
clc
jp
call
jg
mov
sbb
add
aaa
repnz
dec
arpl
stos
xchg
stos
pop
inc
inc
pop
mov
and
sub
mov
xchg
xchg
fcmovbe
push
sbb
push
dec
fisttpll
mov
outsl
xor
jne
inc
and
insl
icebp
bound
mov
mov
clc
and
push
fidivs
lahf
push
inc
out
add
sub
adc
fwait
inc
aaa
pop
dec
xchg
or
repz
ret
xchg
push
repnz
fwait
jo
testb
dec
sbb
mov
lods
insl
in
mov
mov
imul
cmpsl
sub
int3
lods
inc
pop
dec
jge
mov
dec
cld
popf
cmc
insl
push
insb
mov
int
xchg
xorb
xchg
mov
arpl
mov
jp
sub
popa
ss
pop
call
ret
fbstp
pop
aas
aaa
subl
call
out
gs
mov
int
cmc
adc
push
mov
rorl
jl
mulb
outsb
inc
xchg
leave
imul
test
testl
sbb
mov
xor
icebp
aas
out
jbe
jmp
mov
outsb
push
or
data16
pop
int3
push
je
loope
stc
je
loope
pop
fcmove
adc
adc
movsb
jnp
mov
fs
ficoms
dec
jmp
or
cld
sbb
or
lret
fwait
addr16
cmpsb
hlt
ficompl
push
ja
jp
push
jecxz
add
leave
xchg
mov
dec
xchg
loope
fisubl
lods
cmc
jl
out
lds
sbbb
xchg
sub
inc
outsl
clc
inc
cmpsb
cmp
jbe
mov
mov
out
xchg
mov
shl
or
lcall
xor
inc
shl
int
mov
fwait
hlt
ss
mov
icebp
sbb
mov
daa
add
pop
fs
rorb
arpl
or
imul
lods
cld
clc
adc
stos
cmp
popa
xchg
sbb
push
jnp
daa
lret
and
call
mov
mov
cltd
pop
imul
in
cmp
mov
mov
in
xchg
inc
adc
filds
xor
mov
mov
lahf
ljmp
mov
sbb
addb
cmp
push
in
insb
dec
inc
mov
rcll
inc
into
add
xor
ret
jg
fs
inc
outsb
sub
je
outsb
or
adcb
cmp
dec
sbb
mov
sahf
add
inc
mov
mov
push
outsb
jo
leave
cli
jno
and
sub
mov
sti
das
pop
loope
clc
sbbb
or
leave
mov
and
mov
cli
mov
jne
mov
fs
xchg
push
adc
pop
jle
pop
mov
dec
mov
rorb
mov
mov
inc
push
das
sbb
out
and
push
aaa
sub
leave
shll
xlat
mov
cli
xorb
repz
jecxz
cmpsl
and
fimuls
or
jnp
repnz
fistpll
inc
sbb
or
outsb
adc
mov
push
ljmp
add
sub
or
mov
mov
mov
xchg
adc
xorl
loop
mov
orl
repz
or
mov
jecxz
test
xchg
lret
gs
mov
sub
fwait
xor
cmp
sahf
jae
adc
push
insb
lock
imul
shrl
mov
mov
mov
and
add
leave
es
lods
dec
enter
into
repz
scas
fstpl
outsb
push
test
shrb
inc
jns
xchg
mov
ds
cmpsl
cld
cmp
pop
js
inc
or
jne
push
in
test
mov
sbb
xchg
cmp
call
test
stos
out
inc
add
push
pop
jns
xchg
or
sbb
mov
js
test
fists
jg
jo
dec
mov
sub
insb
and
clc
jne
sbb
in
xchg
fstpt
mov
scas
cmc
sbb
into
out
cmpl
push
mov
and
mov
lahf
adc
adc
push
adc
xor
pop
or
xorb
nop
adc
std
adc
pushf
sbb
shrb
and
divb
cmp
loop
ret
in
xchg
adc
adc
pop
shll
dec
mov
sti
cmp
jmp
jmp
mov
sbb
mov
cltd
cmpsb
insb
movsb
mov
sub
sti
je
inc
addl
mov
cld
inc
xor
shll
test
dec
pop
inc
pushf
js
stos
fdivp
ror
popa
mov
push
jmp
sbb
out
mov
outsb
adc
loope
mov
lret
xor
sub
shll
jb
test
pop
daa
and
sub
fs
daa
mov
pop
or
sbb
je
fnstsw
imul
js
xchg
imul
add
ja
pushf
loope
add
cltd
inc
das
mov
scas
pop
push
dec
adc
cwtl
pop
repnz
hlt
fldl
out
enter
cwtl
jge
jns
jb
loopne
imul
jmp
pusha
sub
addb
frstor
daa
pop
int3
and
fdivrs
ja
lods
jmp
and
int
repnz
iret
movb
xchg
push
and
mov
dec
test
stos
stos
call
pop
test
outsl
dec
enter
inc
inc
mov
in
jmp
or
dec
pop
adc
push
sbbl
push
fdivr
lret
sub
rorl
add
pop
addr16
xchg
scas
out
sahf
addr16
mov
fildll
cld
in
jle
insl
jg
test
add
fdivr
jne
in
iret
jmp
gs
mov
fstps
popa
aam
inc
movsl
in
je
and
or
xchg
add
and
adc
jle
sbb
sahf
lret
push
loop
in
push
inc
enter
and
loopne
addr16
xlat
cli
xlat
sti
out
mov
and
lcall
ljmp
outsb
mov
out
mov
je
in
fs
test
in
sbb
jp
cmp
fwait
adc
and
push
or
std
lret
pop
mov
push
sub
adc
das
adc
xchg
xchg
sbb
dec
mov
add
sub
fdivrl
imul
cli
push
hlt
lock
ret
pop
cld
cmc
mov
xor
fxch
pop
imul
jg
add
dec
jnp
in
or
jp
fcom
xchg
sbb
pop
ljmp
jns
pop
pop
push
scas
movsb
adc
cwtl
cmp
xor
jo
aam
fistps
das
repz
push
mov
push
mov
xchg
enter
sbb
ds
cmp
imul
sbb
stos
lcall
jge
lahf
loope
aaa
test
pop
jnp
push
test
lret
mov
lahf
mov
adc
fldcw
and
xchg
jmp
or
jb
dec
test
loope
decb
stos
rclb
push
mov
leave
inc
fwait
xchg
xchg
dec
lret
xchg
inc
adc
sub
jnp
pop
push
iret
ss
cs
or
inc
and
mov
cmp
pop
sarb
lds
pop
andl
push
mov
lcall
outsl
insb
push
and
dec
add
dec
inc
mov
inc
pop
push
fisubl
ret
popf
in
in
add
sub
leave
adc
lods
mov
aad
iret
pop
inc
mov
and
push
xor
mov
pop
jo
jns,pn
jnp
jae
mov
mov
sarb
pusha
mov
dec
jne
fwait
push
sbb
mov
movsl
adc
lret
lcall
dec
lcall
loop
test
inc
push
fidivrs
mov
sub
int3
fistpll
mov
enter
bound
dec
xor
jecxz
mov
aas
inc
aam
fstl
ljmp
inc
jl
xchg
lods
adc
ret
outsl
or
movl
pop
jp
cmp
inc
inc
or
in
rorb
rolb
or
xchg
je
and
outsl
mov
cmp
sti
inc
mov
mov
adc
adc
fwait
mov
jnp
cmpsl
adc
fistpl
or
pop
sub
sbbb
ljmp
jb
xchg
push
push
push
out
js
imul
mov
xor
lods
sub
jmp
add
cmp
shll
push
roll
loop
push
dec
add
cltd
test
test
ret
cmpsl
repnz
or
pop
add
add
pusha
loope
jnp
dec
in
out
pushf
cmpsl
add
imul
dec
testl
pushl
pop
cmp
push
sub
cs
repnz
mov
testb
cs
and
pop
loopne
std
mov
ljmp
sub
negl
jb
lahf
push
orl
cwtl
adc
mov
mov
cmpsl
in
xor
xorb
cmp
push
cmpsb
jge
pusha
push
and
cld
mov
jp
pop
mov
pop
cwtl
lea
mov
test
test
cmpsl
cmpsl
inc
cmp
push
in
mov
loop
sub
std
mov
jecxz
pop
xor
ret
lcall
jge
out
test
ffree
insl
fstpl
mov
rolb
xchg
mov
inc
loop
fmull
aam
xor
ret
xlat
mov
lods
cld
in
cmpsb
xchg
cmp
push
imull
mov
cmpb
in
imul
insl
mov
jle
movsl
stc
shrl
inc
mov
pop
outsb
push
pop
aam
push
mov
dec
roll
testl
cmp
cld
cli
push
or
cmpsl
and
jge
xorl
bound
jo
stos
mov
push
cltd
jmp
fldcw
testl
add
sbb
inc
cli
cs
cmp
repnz
xor
sbbb
movsl
mov
icebp
rorl
or
mov
test
lahf
push
out
orl
int
test
xchg
mov
jns
fnstsw
pop
subb
pop
dec
fwait
pushf
jp
rcll
mov
jle
push
push
test
lcall
addr16
jl
push
xchg
sub
fwait
pop
add
xchg
les
sub
pop
sbb
mov
movsl
rorb
mov
insb
pop
enter
mov
adc
shr
mov
leave
push
or
xchg
xchg
cmp
dec
scas
lock
inc
push
inc
cld
cmpsb
and
mov
mov
lret
dec
cmp
mov
addr16
imull
push
and
sub
ds
push
aad
xchg
in
ss
loope
xor
and
mov
inc
and
fildl
addb
sub
xchg
imul
fistl
ret
popa
gs
or
dec
sub
aaa
sahf
out
lods
adc
cwtl
mov
outsb
dec
iret
imul
in
bound
add
imul
loop
in
test
cmc
mov
mov
xor
xchg
ljmp
cli
cltd
adc
add
push
pop
cli
clc
lret
and
loope
jno
pop
ret
xor
pop
bound
out
je
int3
aad
test
cmc
mov
lock
cld
or
inc
lock
pop
mov
and
clc
push
cwtl
pop
or
jne
es
or
movsl
push
adc
adc
jmp
lods
test
add
pop
dec
add
cmpsl
aad
popa
jecxz
aaa
inc
push
mov
xor
sahf
push
xchg
jmp
adc
push
lods
ret
call
push
fdivrl
fnsave
mov
popa
jmp
imul
mov
adc
stc
mov
mov
mov
inc
xlat
jecxz
cmp
mov
aam
fidivl
sub
cmc
addr16
xor
ret
sub
stc
insl
inc
cs
enter
int
mov
in
std
jmp
jl
pop
cmpsl
test
int
fs
lret
mov
xchg
testl
cmova
mov
bound
cs
ret
ds
mov
dec
in
data16
je
pop
jmp
insb
das
push
cmp
ret
or
std
bound
andb
fld
add
and
cli
bound
int3
pop
lret
push
sbb
movsb
mov
sub
mov
mov
fwait
iret
xchg
pop
jns
dec
lret
push
push
dec
mov
pop
mov
stc
jne
loope
pop
dec
cmpsb
enter
stos
xchg
or
leave
sbb
push
cltd
fs
mov
cwtl
lods
inc
movl
dec
ss
out
dec
jb
sub
sahf
scas
inc
cmp
cs
pop
lea
jl
push
lahf
shlb
xchg
jle
ljmp
push
push
sbbb
mov
jecxz
mov
sub
int
leave
bound
cs
push
sub
push
stc
cmp
lcall
out
out
ja
dec
jl
dec
fstps
outsb
shl
ljmp
push
lcall
sbb
icebp
movsl
push
jecxz
pop
lea
in
rorb
pop
mov
rcrl
mov
cmp
cld
xchg
das
pusha
and
mov
enter
xchg
xrelease
out
cmpsb
xor
sbb
repnz
mov
scas
adc
dec
test
push
and
cmpl
popf
ja
mov
loopne
pop
mov
jns
push
insl
and
xor
outsb
addl
cmpsb
ficomps
inc
jge
ljmp
repz
xor
out
dec
pop
adc
test
outsb
sahf
push
dec
sarl
scas
adc
dec
out
xchg
loop
sub
stc
sub
pop
stos
adc
test
out
or
mov
notb
and
popa
sbb
outsl
sub
push
fstps
pop
sub
or
popf
sbb
movsb
mov
adc
pop
aas
mov
fnstcw
and
loope
xchg
jecxz
movsb
jl
xlat
das
push
mov
aaa
jbe
pop
and
rolb
mov
lods
fs
push
adc
gs
dec
pushw
fistl
mov
js
sub
ja
sbb
mov
and
sbb
js
cli
cmpsl
xchg
add
in
adc
int
mov
xchg
sarl
or
aad
and
mov
add
mov
adc
jno
xor
aad
add
sub
cmp
and
popf
xor
mov
push
or
pop
es
xor
xor
xor
dec
push
movsl
int
lods
xor
scas
mov
dec
and
cmp
movsb
scas
inc
mov
je
lret
adcb
fwait
mov
jmp
push
xchg
mov
xchg
les
sbb
push
leave
mov
mov
in
mov
rcrb
xchg
or
sti
adc
aaa
in
add
mov
cwtl
cwtl
imul
mov
mov
rolb
subl
and
mov
out
dec
add
shlb
xor
cmpsl
xor
dec
out
leave
hlt
pop
or
xorb
xchg
aas
and
cmpsb
mov
or
jmp
popf
adc
or
and
sbb
pusha
lds
fiadds
test
or
cli
adc
cmp
pop
mov
pop
pop
addl
inc
popa
mov
rcrb
mov
imul
adc
fs
sbb
mov
cmp
add
out
jmp
add
test
lock
ret
xlat
pushf
gs
push
push
rcrl
push
push
pusha
pop
or
cmp
mov
imul
mov
loop
je
aas
jmp
add
sbb
decb
xchg
or
mov
xchg
les
adc
or
roll
das
leave
cmp
pop
xchg
pop
lret
lods
mov
imul
jo
jg
and
das
repnz
xor
ss
push
movsb
sub
pushf
xchg
movb
subb
sub
or
and
xor
ja
repz
imul
lret
in
fmul
xchg
cmp
pop
or
xchg
mov
xor
or
andb
fadd
xchg
cld
stos
push
and
lea
movl
lcall
jmp
mov
push
cwtl
lods
out
lock
mov
xchg
dec
int
adc
xchg
pop
scas
test
call
fisubl
mov
and
fimull
iret
mov
xchg
fnstsw
sub
insl
call
rorl
in
push
lahf
mov
in
xchg
sbb
push
adc
push
inc
outsb
xor
cmp
jge
sub
pop
adc
and
pop
add
inc
push
adcl
test
jns
sarl
fidivl
adc
and
and
dec
icebp
imul
into
es
xorb
and
inc
mov
inc
add
pop
dec
sbbb
lahf
xchg
outsl
lds
push
pop
mov
call
jae
or
mov
lods
mov
jmp
cmpsb
push
or
push
pop
jo
pop
jbe
outsb
push
sbb
sub
stc
inc
aas
cltd
sub
inc
xchg
cs
imul
sbbb
mov
dec
jo
lret
cwtl
inc
in
addb
add
jecxz
cmc
pop
mov
sbb
lea
jle
mov
mov
and
sbb
mov
or
and
add
pusha
mov
push
mov
lcall
mov
xor
sbb
imul
scas
test
outsb
push
mov
mov
icebp
mov
xchg
mov
mov
or
sub
xor
mov
daa
or
mov
xchg
sub
push
inc
loopne
inc
jns
outsl
pop
in
in
sarl
push
lret
fcomip
mov
push
leave
into
sbb
mov
popf
fs
sbb
shrb
dec
out
push
mov
mov
aad
jo
addr16
fmuls
and
xor
cmp
inc
lea
mov
data16
mov
mov
adc
rorl
sbbl
ret
es
inc
nop
add
xor
js
jecxz
lea
sbb
mov
stos
movsl
nop
aam
shll
inc
addl
ds
movsl
mov
jae
jnp
mov
mov
adc
jge
dec
pop
inc
mov
mov
dec
or
lret
test
and
aam
cltd
into
mov
xchg
mov
lcall
popa
mov
push
xor
pop
fucomp
aad
adc
xchg
xchg
and
fidivl
add
push
cli
out
pop
xchg
xor
aas
in
popa
mov
test
adc
fcomps
enter
and
stos
jle
xchg
cmp
mull
mov
rorl
stos
adc
xor
int3
dec
or
xchg
pop
dec
mov
test
xchg
arpl
pop
and
rorb
in
cld
jb
icebp
cmpsl
call
sub
fcompp
sbb
iret
dec
or
mov
add
xor
rcr
mov
pop
jmp
adc
outsb
and
outsb
test
ja
test
xchg
test
inc
sbb
repz
cld
test
sbbl
sbb
mov
pop
adc
xchg
mov
ret
jnp
lods
xor
out
push
dec
mov
stos
call
lret
mov
xchg
mov
lret
or
or
and
and
cmp
push
stos
sbb
shrl
sub
jle,pt
cmc
add
push
or
out
aas
and
cmp
mov
loop
loope
and
jb
sub
jecxz
xor
jo
mov
es
xchg
dec
mov
sbbb
mov
mov
testl
and
add
mov
cmc
idivl
lcall
mov
mov
jp
loopne
lret
lret
dec
arpl
fisubl
jnp
scas
dec
scas
dec
dec
push
adc
sti
test
mov
ror
ret
je
shl
xor
movsb
movsl
sub
cltd
cmp
mov
repz
std
jmp
xchg
pop
test
mov
std
mov
and
pop
mov
sbb
and
dec
jle
pop
push
cmpsb
cmp
lods
mov
stos
push
xchg
clc
pushf
lea
popf
paddb
adc
fsubrl
lret
cli
ret
or
loopne
ret
lds
movsl
cs
gs
lahf
movsl
sahf
leave
lds
mov
mov
xchg
inc
aad
shlb
or
loopne
fimuls
and
in
or
jb
lahf
jae
fxtract
lret
xchg
mov
mov
das
mov
dec
xchg
imull
ljmp
ss
lcall
jg
sbb
imulb
cmp
inc
lea
mov
xor
test
sarb
fadd
sbb
loopne
mov
xchg
xchg
call
into
add
cmc
adc
in
outsl
addr16
stos
jns
and
mov
or
test
fneni(8087
int
or
dec
cwtl
fwait
and
pop
xchg
dec
jnp
mov
add
cmpsb
stos
stos
pop
jmp
xor
movsb
lret
and
mov
cwtl
mov
xor
inc
mov
jb
mov
mov
sahf
ficomps
insb
scas
out
fs
inc
imul
mov
je
mov
addr16
xor
mov
loopne
shlb
pop
xor
jnp,pt
scas
cmp
and
cltd
fsubs
push
outsl
xor
jae
cld
sub
pop
pop
xchg
int
adc
inc
lods
mov
pop
mov
sub
and
inc
lret
jmp
call
enter
cltd
lods
stc
sbb
adc
in
sub
in
pop
fs
jge
jmp
push
test
pop
and
div
sub
in
inc
aam
fs
mov
mov
push
stc
add
xchg
dec
add
mov
xchg
and
loop
out
aad
scas
aas
call
pop
and
aaa
ret
cmpsb
pop
mov
push
ss
pop
lahf
test
insb
pop
jp
pop
in
dec
imul
sarb
xor
sub
xchg
out
xchg
aam
pop
jbe
cltd
fs
adc
fs
mov
ljmp
and
fwait
lods
push
ret
fldt
dec
mov
lcall
cwtl
enter
shrb
add
lret
add
insl
mov
das
adc
jge
stos
insb
lods
pop
test
push
add
sub
ja
and
andb
push
sbb
mov
shr
cmp
loope
dec
idiv
adc
mov
pop
and
jo
cmp
les
stos
dec
push
cld
lods
test
cmc
pop
dec
stc
cwtl
out
mov
jmp
ljmp
push
mov
xchg
lcall
iret
jb
enter
jmp
or
rorl
pusha
mov
fidivrl
ds
pop
aam
repz
test
mov
adc
ficompl
pop
sub
dec
out
xor
sbb
push
add
push
popf
sub
arpl
daa
jecxz
test
adc
mov
jns
add
inc
loopne
push
xchg
divb
sbb
lahf
fs
call
and
or
mov
lret
mov
mov
pop
out
xor
lea
cwtl
push
lret
inc
dec
lock
or
daa
sub
dec
cmp
idivb
notb
cmpsb
das
lods
cs
mov
jae
out
or
testb
cmp
jge
adc
or
lret
adc
xchg
push
sub
pusha
loop
and
mov
dec
js
aas
or
push
mov
xchg
into
mov
jmp
jmp
in
xchg
and
arpl
pop
inc
movsb
xor
pop
xor
or
sbb
pushf
cmpsb
lds
rorl
out
mov
mov
or
repnz
sub
rcl
pop
stos
pop
mov
dec
dec
pop
and
and
pop
xchg
add
packsswb
pcmpgtw
lahf
scas
out
mov
inc
jle
test
std
mov
pop
xchg
add
xchg
outsl
inc
aaa
push
mov
inc
mov
stos
rol
stos
int3
rolb
movsb
mov
bound
repnz
arpl
popf
xchg
pushf
int3
out
lahf
into
jnp
pop
mov
in
mov
jl
xor
out
test
outsl
outsl
add
jne
xor
and
dec
xor
fimull
jecxz
pop
rcr
mov
xor
pop
sarl
cmc
sbb
sbb
and
sti
pop
out
mov
lods
dec
xchg
je
shrb
pop
jo
mov
and
and
ffree
dec
fisubl
xchg
cmp
pop
jl
out
aaa
sbb
int3
mov
roll
mov
inc
addr16
out
shll
xchg
bound
xchg
pop
inc
and
xchg
clc
xchg
and
test
sub
sbb
and
jmp
orb
pop
inc
daa
mov
jne
enter
and
or
popf
sahf
setle
data16
call
dec
xchg
je
adc
dec
mov
fwait
add
add
into
inc
pop
clc
data16
xor
adc
popf
lea
jecxz
ret
dec
aam
xchg
jl
daa
cmp
push
mov
mov
add
roll
inc
and
jl
sbb
loope
or
shl
gs
cmpl
cwtl
cmpb
lcall
das
outsb
cld
aad
repnz
pop
adc
push
outsl
mov
ljmp
outsl
dec
test
cmp
adc
mov
inc
cmp
sahf
scas
mov
js
lds
int3
sbb
push
jle
pop
fldenv
scas
insb
cmpb
adc
cmpb
jns
or
jae
in
and
and
lods
mov
or
xorb
cltd
int
std
gs
lret
push
cld
jmp
sub
xchg
jmp
movsb
lcall
adc
inc
push
add
scas
aas
fst
fsubrs
loope
es
gs
scas
pop
les
or
and
lahf
shlb
or
in
das
dec
es
xchg
inc
xor
mov
fiadds
inc
pushf
cmc
scas
and
sub
sbb
sbb
adc
xchg
xorb
push
inc
ja
mov
stc
cld
push
ja
sub
mov
lcall
pop
add
arpl
stos
mov
pop
pop
mov
inc
mov
pop
jg
mov
cltd
mov
shl
push
xchg
repz
dec
cmp
and
mov
xlat
push
push
in
pop
test
and
push
outsl
movsb
clc
cltd
fmull
movsb
lds
xchg
mov
jmp
and
in
aam
hlt
das
mull
jae
shrl
inc
rolb
lock
adcb
push
lahf
push
jae
imul
das
jl
adc
scas
sub
xchg
mov
mov
imul
lods
cmp
lock
repz
enter
out
sahf
adc
inc
xchg
and
xor
mov
mov
std
arpl
jnp
mov
idivb
mov
mov
shl
jmp
stos
nop
test
pusha
xchg
adc
jae
rcll
sbb
and
add
add
mov
push
cld
fiadds
cmpl
xlat
adc
or
rorb
mov
and
xchg
fistpll
push
add
fstpt
ds
adc
test
lods
outsb
pusha
into
loopne
sti
adc
scas
mov
fst
and
jbe
shlb
in
xchg
xor
pop
stos
ja
in
cwtl
or
mov
shlb
movsl
xor
lods
cmp
mov
test
fidivl
cmp
adc
push
loopne
jo
jl
dec
bound
cmp
roll
mov
add
sub
sbb
ljmpw
fadds
lret
scas
add
xor
nop
inc
add
cvtpi2ps
inc
mov
jnp
mov
movsl
popa
inc
pop
dec
fwait
add
add
test
mov
adc
icebp
out
dec
je
lock
out
push
jecxz
lret
pop
jb
mov
push
out
xchg
sub
cmpb
popa
mov
add
loop
fwait
mov
push
mov
fs
loop
test
mov
xlat
fadd
mov
sub
iret
mov
ljmp
or
arpl
and
movsl
cld
add
stos
cltd
gs
movsl
adc
and
inc
sub
and
push
push
dec
lret
testl
lcall
mov
outsb
arpl
pop
sbb
cmp
mov
add
add
inc
movsb
cmpsl
push
dec
mov
fcmovu
cli
xor
add
outsb
cwtl
std
jns
and
xor
jne
adc
mov
push
cld
fs
clc
inc
jmp
insb
jno
adc
push
xchg
dec
test
inc
jle
lahf
jb
mov
push
push
arpl
cmc
pop
int3
adc
cld
mov
mov
loop
inc
fimull
ja
xor
sbb
mov
mov
in
jo
sbb
in
ss
or
mov
inc
cs
add
mov
outsb
aas
or
cmp
xchg
add
push
inc
rorw
hlt
jbe
popa
sarl
call
pop
jecxz
lds
and
jno
pop
test
jnp
cmp
jno
out
and
push
pop
stos
scas
sub
xchg
shlb
or
dec
idivb
hlt
and
scas
adc
jo
or
bound
xchg
mov
xchg
fistps
out
aad
lret
cmp
and
pusha
lock
cs
push
sahf
cmp
ficoml
push
or
fcmovnb
in
repnz
dec
mov
inc
cmp
daa
notl
push
lods
inc
jle
sbb
adc
sub
mov
movl
test
xchg
hlt
push
mov
mov
das
xchg
xchg
inc
out
pop
push
push
mov
pop
mov
and
push
adcb
cmp
xchg
adc
mov
mov
jae
sti
jnp
fwait
xor
stos
cwtl
sbb
mov
mov
jbe
je
bound
call
xor
fisubrs
cs
lock
and
jnp
cmpsb
cs
fdivrs
lea
add
inc
cmp
in
sbb
imul
pusha
lds
xor
sub
dec
inc
cmp
push
adc
mov
pop
push
add
ficoml
aam
push
jns
cwtl
scas
dec
sub
push
xlat
dec
mov
je
js
mov
push
dec
movsl
sti
mov
add
mov
adc
push
lods
cmp
pop
mov
in
call
inc
imulb
adc
frstor
sbb
push
outsl
shll
loop
sub
out
xor
sti
je
es
sub
mov
jo
cs
jno
clc
push
pop
xor
or
rcl
and
push
push
test
xchg
adcl
es
xlat
push
pop
add
or
fstpl
aam
cmp
addr16
lcall
jns
sbb
shll
mov
fcmovu
stos
inc
lret
cmpsl
je
mov
nop
fisubs
xor
xchg
lcall
out
fadds
or
outsb
nop
xor
jo
pop
andl
jle
xor
sbb
pop
xorl
out
into
xchg
movsb
ret
insb
out
movsl
fwait
xchg
push
aam
or
rcrb
cmp
push
test
xor
lahf
inc
into
xor
mov
xor
xchg
cmp
imul
cmp
jecxz
stos
and
in
sub
sub
mov
es
add
pop
loop
mov
adc
xchg
pop
fidivrs
hlt
aas
jge
sub
mov
add
jbe
xchg
adc
push
or
mov
gs
add
jle
pop
inc
dec
stos
frstor
jecxz
loop
mov
mov
xor
fnstcw
mov
pop
pop
mov
nop
and
imul
fmul
out
nop
pushf
aas
jge
mov
pusha
repz
lock
insb
icebp
mov
test
mov
jns
sub
mov
insl
movsb
cmp
ret
enter
clc
divl
cmp
sahf
rep
sarl
dec
lock
stos
lcall
sub
movsl
loop
or
lock
out
fmuls
mov
shll
test
dec
imul
bound
mov
mov
dec
mov
sbb
shrb
popa
jo
mov
push
lea
aaa
mov
sub
arpl
rclb
inc
scas
add
xor
loopne
and
repnz
xchg
jae
mov
pop
jle
aaa
mov
enter
dec
push
clc
cmp
insl
into
fdivp
xor
fwait
std
cmp
out
ljmp
mov
leave
jmp
and
bound
add
popa
add
outsl
adc
jp
xchg
add
nop
sti
sub
xchg
popa
sbb
and
mov
mov
aas
cli
cmp
ret
repz
mov
fstl
sbb
xchg
jae
fucom
sbb
adc
mov
je
mov
or
fs
jnp
and
ljmp
sbb
jl
jbe
int
cmp
inc
or
cmpsb
jle
add
outsl
jne
and
xor
jbe
out
in
stos
das
ss
xchg
pusha
data16
sub
aam
inc
int
jl
imul
lret
sub
xor
inc
lock
popa
ljmp
int
inc
stos
ret
in
push
dec
shl
imul
sbb
cmp
daa
scas
popa
dec
fildl
inc
xor
fcoms
mov
loop
loope
stos
popa
pusha
sbb
es
out
inc
stos
stos
cli
push
lahf
sub
mov
sti
aam
xchg
push
mov
sub
xchg
push
jle
push
fisttps
push
out
aam
cmp
inc
push
xor
sub
insl
fsub
out
loop
pop
xchg
ret
fld1
dec
out
inc
and
xchg
push
dec
sarl
in
iret
xlat
repnz
les
jbe
mov
xchg
imul
mov
or
jae
push
gs
fisttpl
cmp
push
jecxz
fwait
sub
movsb
bsf
insb
or
test
adc
enter
aad
sub
xchg
and
ret
xor
and
das
or
mov
test
lret
or
mov
adc
xor
stos
into
leave
rorl
test
insb
pop
addr16
mov
xor
pop
hlt
mov
ret
dec
and
dec
pop
fwait
mov
outsl
dec
inc
andb
mov
movsl
testl
lds
je
or
insl
lock
notl
and
scas
arpl
in
fadds
or
push
mov
jp
popf
fistpll
es
in
test
xchg
mov
jbe
sbb
fwait
push
or
cltd
jmp
aam
repz
out
add
inc
and
aad
out
ss
dec
sbbb
xchg
dec
lock
mov
inc
xchg
fst
in
mov
jns
test
xchg
stos
cltd
jl
rcr
mov
push
mov
lods
push
inc
mov
out
imul
push
mov
pop
loopne
inc
shl
popf
push
add
sbb
shr
xor
pop
shrb
mov
xor
clc
movsb
pop
inc
sub
repnz
test
inc
div
cmp
dec
rorl
addr16
and
xchg
pop
rol
inc
out
scas
mov
outsb
push
mov
rorl
stos
ret
jmp
shrb
mull
hlt
je
pop
aas
test
gs
push
pushf
mov
into
add
addl
out
or
imul
pop
or
mov
repnz
loop
push
pop
push
sbb
inc
push
cmpsb
movsb
loop
pop
outsl
dec
out
xchg
fwait
movsb
stos
jbe
mov
stc
ret
enter
js
sub
out
in
and
mov
xchg
lret
push
in
int
in
cs
gs
cwtl
push
loope
icebp
jg
add
or
mov
imul
sti
lea
iret
leave
jg
fmul
hlt
stos
int3
incb
ror
pop
mov
ljmp
cwtl
int
dec
xchg
out
add
mov
add
popf
adc
mov
cmpsl
jmp
loope
test
mov
push
ret
es
adc
psubq
scas
out
adc
pop
sub
or
sar
mov
push
rol
add
sbb
fwait
lahf
or
add
add
pop
mov
add
push
ret
rcrb
dec
notl
rol
pop
mov
daa
ljmp
cld
lret
mov
pusha
lret
push
mov
and
add
popa
adc
add
jns
jo
adc
aad
ret
aaa
rolb
ret
in
jmp
pop
icebp
sbb
dec
mov
fistpll
sub
fbstp
movsb
mov
ficoml
jecxz
dec
push
inc
lea
pop
sbb
or
jo
adc
jl
inc
push
sti
sbbl
xor
mov
fimuls
jle
push
sub
popa
jg
mov
pop
sub
test
adc
lock
clc
xchg
repz
int3
or
in
nop
jle
int3
daa
sbb
jne
sub
in
pop
add
test
adc
xchg
sbb
xlat
outsb
adcl
xlat
ljmp
add
test
pmulhuw
sub
mov
imul
addr16
xchg
sub
fisubrs
sub
pop
dec
jo
and
loopne
icebp
mov
push
roll
and
and
cmpsl
roll
pop
jecxz
pop
push
ss
and
dec
out
sbb
push
int3
dec
mov
rep
xchg
fdivl
jo
js
pop
mov
mov
cmp
or
jp
push
fstpl
pop
xchg
and
fisubl
add
jne
ss
imul
pushf
jg
loope
adc
dec
aaa
pop
pop
push
arpl
mov
mov
and
rcll
sub
loopne
cli
int
test
and
clc
xchg
cmp
mov
sbb
pop
sbb
mov
inc
jne
inc
out
pop
push
inc
test
sahf
mov
pop
sarl
ret
ja
fsubrs
cli
clc
lahf
pop
dec
mov
push
adc
int
fwait
ds
stos
xchg
repnz
hlt
xchg
shlb
sub
or
cmp
mov
xor
in
pop
sbb
cmp
call
fidivs
imul
pop
adc
cmp
jmp
out
and
lods
mov
roll
pop
cld
or
movsb
push
lods
iret
fnstenv
testb
push
mov
push
std
repz
adc
push
add
pop
or
daa
inc
inc
fsubs
or
aas
sub
mov
aam
pop
jno
mov
jge
or
add
std
push
mull
scas
test
xchg
mov
pop
mov
test
pop
mov
pop
dec
aaa
xor
ljmp
cmp
das
in
js
push
les
jb
mov
negl
imul
inc
je
adc
xchg
add
or
lods
jecxz
pop
stos
mov
or
inc
dec
mov
xchg
test
sub
je
or
popf
jnp
dec
and
add
pop
sahf
mov
push
adc
in
out
das
xor
sbb
sti
loopne
sarl
push
mov
xlat
xlat
ja
adc
cmp
data16
mov
push
outsl
sbb
fsubrl
daa
push
sbb
push
movsb
pop
movsl
outsl
xchg
ss
mov
je
cs
sbb
adc
test
cmp
xchg
push
jne
addl
loopne
btc
push
sahf
imul
dec
test
mov
clc
jg
fdivr
cs
xlat
lret
fcomi
rclb
inc
pushf
ret
inc
cld
jb
pop
sarb
pop
enter
and
addb
inc
mov
lock
jne
and
ret
xchg
out
lahf
mov
mov
xchg
mov
std
aas
in
xchg
pop
lret
rolb
and
mov
and
dec
jge
sbb
out
inc
mov
fucomi
scas
jae
in
jno
sar
lret
sahf
popf
push
sub
push
inc
sbb
adc
cmp
xchg
fs
mov
dec
movsb
mov
icebp
movsl
pop
push
stc
decl
inc
loope
mov
jmp
insb
sti
out
outsb
ficomps
pcmpgtb
adc
cmp
dec
adc
aam
sbb
dec
mov
movl
and
dec
mov
cmpsl
sub
sub
xchg
ljmp
leave
insb
rcl
mov
jp
outsl
pushf
mov
sbb
pop
cli
test
iret
into
rcll
int
xchg
xor
cmpl
adc
in
fcmove
cmpsl
push
or
cmova
cmpl
pop
jge
jnp
adc
xlat
xor
ror
jle
mov
mov
inc
arpl
add
jnp
out
mov
push
cmp
push
dec
out
lds
lcall
lahf
mov
in
mov
dec
mov
popf
pop
xchg
mov
std
push
aaa
jl
popf
lcall
sbb
ljmp
and
push
mov
adc
xchg
outsl
xchg
rcrl
cmp
mov
ja
fsub
add
pushf
std
push
pop
js
rdmsr
and
jl
gs
nop
adc
inc
jae
xchg
data16
mov
mov
jp,pt
cmp
lret
dec
or
xchg
jae
fxch
xor
xchg
sbb
in
and
add
popa
xchg
jg
idiv
std
push
cmp
lock
ljmp
xchg
out
dec
jne
stos
sub
aam
leave
out
xchg
mov
sbb
push
mov
xor
mov
cmp
mov
rcr
lcall
test
gs
insb
pushf
loope
fldl
pop
scas
push
push
sarb
and
ret
jl
mov
cli
xchg
jae
jnp
adc
adc
cmpsl
lods
xchg
mov
push
in
mov
adc
and
adc
into
fwait
cld
ret
sarl
pop
sbbb
bound
movsl
lock
inc
inc
pop
repz
push
push
xchg
daa
add
repnz
lret
lods
dec
cmp
push
std
jbe
enter
test
scas
mov
ljmp
inc
jecxz
gs
cwtl
or
jle
insl
add
or
stos
arpl
pop
out
dec
pop
and
outsb
pop
cmp
xchg
cmpl
jbe
fsubr
cmp
lret
inc
pop
fcoml
and
or
or
pop
pop
int3
inc
mov
pop
cli
mov
scas
das
shll
out
jmp
xchg
mov
cmpsb
mov
dec
cmc
mov
testb
adc
mov
icebp
mov
mov
cmp
push
xchg
hlt
cmc
lret
pop
aas
and
fstp
cltd
sbb
and
outsb
push
xor
mov
fadd
push
cmpsb
pop
enter
aaa
iret
add
fidivs
lret
add
xchg
lock
rcrb
nopw
dec
sbb
stos
inc
pushf
repnz
sub
lods
jg
shl
inc
mov
addr16
jmp
xchg
iret
jne
lock
xor
mov
cmp
fxch
repz
out
cmpsl
ds
cmp
js
jns
jne
mov
in
adc
mov
inc
stc
cmovno
das
push
push
pop
dec
pop
or
dec
imulb
fmull
mov
mov
cmp
lock
mov
cmp
jle
jge
pop
xchg
jns
adc
mov
push
lods
in
mov
mov
daa
push
das
xor
mov
call
cld
inc
jae
xchg
push
jns,pn
fiaddl
loope
pop
xchg
dec
shrb
xorl
mov
cmp
and
cwtl
inc
adc
xchg
and
mov
sti
test
out
or
inc
xor
jne
mov
dec
inc
in
jb
push
jb
push
xlat
adc
ljmp
lcall
lret
xor
pop
fwait
je
pop
leave
sbb
lods
mov
loopne
inc
std
or
cmpsl
pop
pop
aaa
adc
cmp
movsb
rol
push
outsb
shlb
pop
sub
jbe
xor
add
adc
lcall
mov
xor
push
cmp
test
push
fwait
daa
es
mov
pop
xacquire
arpl
arpl
push
cs
enter
push
fcompl
inc
je
xor
fcomps
mov
cmc
sbb
sbb
sahf
mov
cld
js
sbb
inc
fistpl
xor
stos
jne
stos
jecxz
subb
sbb
sub
in
in
inc
jae
pop
inc
pop
lahf
adc
popf
mov
pop
cmpsl
andb
add
out
scas
fsubl
shrb
pop
fbld
fs
sbb
add
xchg
mov
xchg
mov
xor
sbb
shrl
sbbb
push
gs
lcall
inc
jmp
mov
test
shlb
sti
and
pop
push
jb
mov
aam
sub
push
aam
into
push
mov
or
fidivs
cmp
les
sarl
mov
adc
div
sbb
cwtl
mov
loope
sbb
or
js
mov
dec
mov
mov
in
out
push
or
mov
int
mov
out
xor
sub
ror
imul
xor
stos
fcoms
mov
cmpsb
xchg
imul
jecxz
xor
and
xor
jge
dec
int
cmc
xchg
cmpb
mov
lahf
cmc
lds
loope
clc
cmpsb
pop
mov
and
mov
push
mov
jo
inc
out
mov
cmc
repnz
xchg
hlt
mov
jne
push
lret
mov
jns
inc
jecxz
mov
mov
mov
roll
cmp
or
jp
push
inc
dec
add
rclb
repz
and
fcmovnb
adc
mov
mov
jo
dec
or
xchg
jg
or
iret
addr16
or
mov
push
sub
and
pop
andl
xchg
add
jns
jge
adc
cmp
xor
les
out
sub
sbb
rcll
lds
rorb
call
cmp
lret
cmp
repz
sub
dec
cwtl
fcoms
inc
add
and
aas
push
push
pushf
jge
test
das
xlat
add
jecxz
sbb
inc
lret
pop
imul
lret
test
adc
push
into
push
or
hlt
sub
jmp
jmp
sub
fst
imul
test
stc
cmc
fs
xor
and
lret
pushf
sbb
xor
mov
xchg
es
inc
push
subb
insl
test
and
outsb
repz
pop
dec
cmp
scas
out
or
push
jg
adc
push
jp
mov
sub
cmp
dec
push
add
push
xor
stos
jecxz
pop
insl
rolb
sub
les
dec
sahf
mov
aad
daa
btcl
adc
rcll
mov
inc
add
cmp
cld
and
dec
hlt
jnp
xchg
dec
jnp
in
loopne
sbb
jl
jle
pop
push
mov
lcall
fwait
bnd
rorl
push
mov
out
jl
xor
push
cmpsl
mov
clc
inc
sub
aam
ss
adcb
lahf
add
mov
add
adc
popf
dec
movsl
fiadds
sbb
push
dec
lahf
or
mov
push
aam
bound
clc
frndint
dec
fxch
jns
pop
maxps
jno
sub
in
int
cmpb
mov
lock
ficoml
movsb
stos
mov
mov
inc
test
push
cmp
fwait
iret
push
and
adc
cmp
inc
cmp
and
add
and
jae
push
aad
js
pop
enter
mov
pop
pop
rol
or
inc
shrl
xor
and
rolb
pop
rcl
test
loopne
mov
pop
xlat
xor
and
daa
xor
out
test
pop
add
mov
incb
lods
ror
mov
mov
popa
and
sub
or
test
movsb
stc
mov
mov
and
dec
scas
xor
ss
dec
sahf
sub
lods
neg
jne
or
sbb
test
in
inc
imul
push
xchg
cmp
or
es
inc
xor
dec
lret
popf
adc
sbb
add
xchg
xlat
rcrb
leave
dec
mov
arpl
fstpl
in
into
adc
sub
subb
dec
shll
fcomip
loop
fcmovne
cld
rolb
jbe
mov
sub
inc
xchg
push
mov
mov
rcr
inc
mov
mov
scas
scas
xlat
adc
sbb
arpl
xchg
test
cmp
mov
movsb
push
pop
xchg
lock
xchg
inc
jl
jecxz
mov
ss
inc
cmp
scas
lods
pushf
int
cmc
jle
push
mov
stos
mov
push
cmp
aad
les
daa
dec
or
mov
bound
scas
xlat
imull
leave
add
into
jno
sbb
pop
je
bound
sub
inc
loop
movsb
mov
mov
jo
and
cwtl
pop
xchg
mov
adc
aad
pop
inc
out
jg
arpl
or
outsb
inc
sbb
lea
mov
mov
aam
pop
xchg
mov
mov
iret
push
sbb
inc
das
sbbb
jne
out
xor
dec
dec
pop
cltd
pushf
cmp
push
and
sbb
xchg
insl
ja
rcll
sti
xor
jno
fwait
lods
das
sarl
add
inc
int
push
cmpb
ss
insb
push
push
test
jbe
das
mov
mov
lret
jno
cmc
push
cs
jecxz
test
xor
cmp
imul
xor
add
jns
xchg
adc
shr
lahf
dec
push
jle
movsb
aas
addl
lea
jmp
fistps
daa
or
fs
stos
mov
xor
movsl
clc
scas
jne
cmp
dec
add
dec
loop
clc
adc
jbe
cmpsb
dec
jmp
dec
fildll
cmp
pop
inc
push
das
mov
repnz
mov
ja
sub
repz
or
movsb
dec
mov
fst
pop
mov
jecxz
xchg
bnd
cmp
pop
mov
loop
lods
test
mov
dec
icebp
or
cmp
and
add
adc
cmp
aad
pop
inc
das
jecxz
daa
mov
stc
sub
sbb
dec
in
jno
and
nop
fsubl
add
flds
mov
jecxz
push
jge
stos
sbb
ret
push
dec
bound
jno
hlt
or
cwtl
push
lret
ret
jecxz
pusha
fcmovb
inc
mov
push
xor
lcall
filds
fimull
and
dec
push
and
dec
ljmp
mov
sbb
mull
adc
fmuls
sub
push
mov
inc
mov
mov
pop
test
cmp
dec
andb
sbb
mov
aaa
mov
movsb
mov
add
insb
add
mov
loopne
push
mov
lock
aaa
lods
cmpsl
int
push
push
sub
or
addb
push
or
cmp
inc
sub
sub
sahf
dec
and
sbb
cmp
inc
inc
test
add
mov
addl
shll
and
push
mov
mov
ss
sbb
fcoml
or
ljmp
ret
cmp
xor
sub
xor
or
sar
ds
scas
dec
pop
pushf
pop
pop
push
push
testb
ss
xlat
int
mov
cmpsl
jnp
out
push
jb
mov
push
loop
mov
in
mov
adc
mov
add
mov
std
cmpsb
xchg
xchg
jmp
inc
mov
dec
lock
push
jecxz
add
out
add
in
pusha
je
mov
call
xchg
dec
adc
faddp
fdivs
outsl
loop
mov
dec
sub
into
cmp
outsl
xchg
pop
sahf
inc
cmpsb
dec
sbb
data16
inc
stc
dec
stc
inc
repz
in
add
inc
sub
ss
push
call
adc
jns
cmc
mov
lea
and
enter
xor
test
inc
fcomi
stos
xchg
ja
mov
xchg
inc
in
or
fcmove
jno
push
cmp
fxch
rol
aam
in
mov
mov
ja
ljmp
mov
pop
lods
adc
outsb
into
insl
cmp
mov
mov
xor
cmp
leave
fiadds
mov
mov
jns
stos
adc
push
jbe
lea
pop
mov
mov
aam
rolb
pushf
out
cltd
mov
adc
add
fcompl
xchg
and
cmp
imul
xlat
hlt
ljmp
add
mov
jno
xchg
dec
sbb
mov
cmpsl
mov
dec
repnz
sbb
decb
and
std
rcll
cmpsb
cmp
jle
stos
jno
ret
or
imul
pusha
rclb
lods
mov
cld
jae
inc
in
imul
push
shlb
das
sarb
int3
lods
fsubrl
cmp
stc
test
cwtl
cld
mov
mov
stos
fdivrl
xchg
lea
rcr
ss
movsb
cmc
mov
stos
push
and
pop
jbe
dec
sub
inc
movb
lock
mov
jg
in
test
mov
pop
cmp
mov
sub
and
scas
mov
in
sbb
in
aaa
mov
in
pop
adc
jle
sub
pop
mov
jmp
dec
mov
stos
mov
cld
scas
inc
lea
test
push
fwait
pusha
jae
and
push
adc
je
xor
xor
push
sub
or
stc
xchg
jb
ss
rcr
push
sub
mov
add
sarl
movsl
pop
sub
inc
add
push
mov
xchg
push
xchg
push
sbb
mov
jl
or
add
fwait
cmp
jmp
jmp
pop
inc
ret
pop
ret
mov
mov
jmp
addr16
out
cmp
and
fwait
nop
xor
sbbb
add
ds
cmp
mov
sub
call
fistpll
and
lahf
ljmp
enter
incb
mov
cld
fldcw
mov
mov
nop
mov
sbb
mov
inc
xor
pop
dec
pop
inc
icebp
icebp
xchg
sub
sahf
add
inc
jle
fistpll
data16
mov
sahf
pop
cmp
jg
and
lcall
push
push
outsl
inc
pop
jae
or
jge
adc
cmp
jb
add
fwait
sbb
in
pop
pushf
aam
sub
addr16
jno
or
jge
daa
xor
es
je
pop
sbb
int
repnz
xchg
bound
sbb
pop
mov
addr16
test
pop
adcb
dec
pop
fcoms
cld
pop
js
adc
push
mov
mov
movsl
nop
out
add
add
lcall
cmp
mov
xchg
enter
ret
lcall
sbb
mov
out
arpl
fbld
adc
sarb
je
pop
arpl
xchg
insb
out
fidivrl
xchg
stos
imul
mov
mov
push
add
lods
outsl
jp
repz
jle
pop
out
out
lret
jle
push
xchg
dec
mov
sub
mov
loop
mov
push
mov
and
mov
repz
mov
test
sbb
mov
inc
cmp
loopne
jbe
addr16
orl
leave
fcmove
popf
inc
repnz
push
inc
or
pushf
xor
mov
pushf
out
cld
adc
out
lret
sbb
scas
inc
adc
push
dec
xchg
cmpsl
add
test
sbb
jge
stos
mov
aad
pop
nop
sti
mov
sahf
jo
pusha
faddp
test
jg
jl
jb
dec
es
jmp
sub
and
mov
dec
mov
fwait
mov
and
imul
ret
inc
or
dec
dec
push
xor
shrb
mov
and
xchg
dec
xchg
cmp
loopne
xlat
push
hlt
cmp
outsl
loop
jge
inc
test
mov
stos
rcrb
xor
dec
inc
pusha
mov
loope
cmp
sbb
pop
cmp
adc
pop
jne
mov
loop
lea
pop
stos
pop
in
ss
sub
in
and
insb
outsb
xorl
mov
mov
and
dec
out
sub
push
fisubrl
and
sub
fdivr
rcrb
mov
call
test
sub
pop
les
roll
jno
or
subl
jmp
mov
push
xor
call
sbb
sbb
inc
xor
insb
or
mov
outsl
aas
aaa
mov
inc
sahf
clc
jo
repnz
pop
insl
xchg
popa
aaa
mov
lret
cmpsb
pusha
jle
test
mov
bound
fcompl
cmc
or
fs
mov
repz
lock
dec
mov
inc
and
ljmp
fstps
pop
jnp
cmpsl
leave
push
push
dec
pusha
popf
sahf
rcl
dec
ja
dec
enter
dec
mov
xchg
push
mov
fidivs
sar
cmc
sbb
sbb
cmpsl
cld
gs
fcoml
fiadds
arpl
rol
mov
jp
mov
mov
stos
iret
mov
jge
lcall
inc
ljmp
push
pop
jbe
and
js
mov
xchg
pop
cmp
adc
outsl
std
in
ret
sub
xchg
mov
pop
rclb
push
pop
mov
inc
jae
popf
inc
shr
cwtl
gs
scas
sub
adc
out
aam
mov
int
or
aad
bound
mov
fadd
lahf
movsl
jp
and
add
jb
movsl
pop
ja
bound
gs
mov
fldcw
sub
or
mov
xchg
xchg
sahf
mov
and
fsubrl
pmulhuw
inc
fucomi
lds
jnp
nop
push
mov
mov
pop
mov
sbb
jp
ljmp
mov
and
sub
fwait
pop
xor
sub
jns
mov
push
xchg
mov
cmovg
cltd
xlat
rcll
jmp
dec
aaa
mov
leave
add
or
movsb
lea
je
pop
mov
dec
insl
out
sbb
es
mov
fisttpll
dec
adc
mov
jg
repz
fwait
imul
mov
mov
sub
data16
je
cmpsb
xlat
repz
mov
lock
jle
enter
cmp
loope
cmpsb
pop
cmp
sub
out
lret
jnp
repz
dec
lods
into
pxor
roll
mov
enter
jg
push
inc
int
jnp
or
sub
jmp
sbb
andl
adc
or
adc
fisubl
pop
sbb
je
ret
adc
fildll
add
popf
xchg
stos
fwait
cs
sbb
and
sbb
cmp
inc
andw
inc
into
test
add
lods
xorl
out
sbb
stc
je
inc
das
pop
clc
push
pusha
das
xchg
filds
sub
sbbl
adc
push
mov
xchg
out
dec
es
pop
mov
mov
and
jg
jp
mov
lods
push
daa
repz
inc
pop
sbb
icebp
jecxz
mov
js
and
jge
and
pop
cmp
xchg
decl
ds
add
push
es
inc
adc
pop
ret
lds
or
scas
ja
clc
xchg
and
or
jnp
enter
cmp
into
mov
cltd
test
jg
fstpl
lock
out
int3
loop
inc
mov
and
fnstcw
in
cmp
sarb
push
cld
ss
xorb
xor
mov
xor
in
mov
shl
ret
and
das
xlat
push
add
mov
xchg
xor
mov
dec
sbb
mov
dec
add
xor
shlb
ret
dec
jae
mov
cmp
nop
sbb
jp
in
insb
mov
mov
dec
or
fwait
mov
stos
xor
and
into
out
test
mov
mov
and
loope
shrl
xor
jge
rcrl
xchg
ljmp
push
adc
in
fstpl
out
sub
xchg
push
cld
fwait
sahf
sbb
dec
mov
xor
dec
cld
rcr
test
push
nop
mov
pop
dec
in
mov
imul
push
mov
lock
or
sbb
and
fs
sub
and
pushf
outsl
icebp
jno
mov
outsl
lods
cli
push
push
add
add
jp
jns
sbb
cli
outsl
mov
stos
int3
inc
push
sbb
mov
lahf
mov
pop
and
mull
lea
and
ret
xor
and
fadds
pop
fidivs
movsl
mov
mov
mov
mov
pusha
mov
mov
cvtdq2ps
data16
rcrl
mov
mov
orb
dec
sub
jp
lea
movsl
ja
jo
jecxz
stos
lahf
shlb
daa
pop
int3
pop
push
loopne
xchg
cmp
xor
xchg
and
dec
cmp
xchg
aam
les
es
adc
imul
mov
xchg
fistps
dec
sub
xlat
pop
lret
iret
icebp
cltd
sub
mov
ror
cli
mov
arpl
inc
mov
mov
imul
jo
out
mov
std
cmp
sbb
push
orb
sub
movsb
mov
lahf
pop
enter
lock
mov
fsubr
loope
dec
push
add
mov
test
xlat
jns
dec
pop
push
insb
dec
aad
and
scas
jp
imul
pop
push
int3
cmpsl
xor
push
mov
inc
into
pusha
bound
sarb
rcr
inc
in
pushf
mov
adc
adc
dec
push
sbb
pop
fnsave
test
mov
pop
cmp
test
or
pop
cwtl
push
jmp
inc
ret
push
adc
jb
icebp
mov
int
mov
mov
imul
mov
and
test
das
pop
mov
fimuls
xor
xlat
icebp
mov
loope
outsl
or
mov
jns
push
cmpsl
leave
scas
or
inc
cwtl
ret
sub
jb
out
je
mov
push
pop
adc
add
and
iret
xchg
xchg
scas
pusha
fmul
in
jnp
nop
nop
xchg
pop
mov
xchg
xchg
hlt
ss
mov
sbb
stc
adc
imul
push
sbb
fucomi
pushf
mov
inc
push
dec
loopne
loop
xchg
adc
sahf
int
mov
xchg
in
jge
sbb
mov
scas
mov
sarb
sti
mov
adc
popa
sub
aad
movsb
xlat
prefetch
xchg
xchg
mov
test
jnp
shll
out
add
mov
jg
mov
pop
mov
lds
clc
call
xor
cmp
mov
mov
or
jbe
sbb
push
inc
dec
rcrl
imul
daa
lock
push
outsl
xchg
stos
dec
sub
push
fsubrs
add
adc
push
rorl
push
jnp
stos
sarl
add
cmc
cmpsb
push
cmp
pop
mov
sub
scas
jbe
out
test
out
insl
addr16
cmp
test
mov
dec
cmp
repnz
std
mov
cmp
or
dec
jp
sahf
test
aas
addr16
loope
adc
dec
cmpsb
fst
in
push
sbb
or
hlt
and
iret
mov
pop
or
mov
int
ret
popf
iret
lcall
xchg
jo
xor
jp
mov
dec
mov
sub
sahf
push
imul
push
popa
cmp
loope
and
jmp
clc
add
insl
and
dec
xchg
pop
repz
cwtl
movsl
pop
push
jge
ljmp
cltd
dec
movsb
ja
mov
fbstp
push
mov
std
popl
xor
inc
aam
imul
fcompl
add
pop
mov
jae
sbbb
popf
js
in
add
mov
addl
jnp
adc
out
mov
mov
xor
cmp
test
and
xor
repnz
data16
add
flds
cmpl
cmp
cmp
sbb
pop
clc
ss
ljmp
je
sbb
xchg
mov
dec
out
movsl
aam
es
mov
mov
test
bound
xor
cltd
and
sbb
sarl
xchg
and
pushf
jmp
mov
jl
mov
and
fwait
cltd
mov
std
lret
mov
mov
xchg
xchg
std
and
ficoms
lods
xor
mov
repz
les
adc
repz
or
mov
cli
dec
jbe
dec
inc
outsl
lcall
ljmp
sbb
cmp
mov
aad
out
add
cmpb
je
bound
cltd
int
fs
lret
sahf
mov
lds
mov
cmc
js
inc
sub
mov
adc
fsubs
or
out
add
push
dec
add
lock
sub
xchg
mov
int
data16
test
cli
pop
xchg
mov
addr16
xchg
imul
push
pop
jnp
jg
leave
dec
push
out
js
dec
mov
jg
lock
mov
cmc
prefetchnta
andl
pusha
jo
imul
fmull
out
adc
andl
shrl
sbbb
mov
rol
mov
add
add
cmp
mov
out
negb
adc
mov
fidivl
int3
inc
daa
adc
test
aas
pop
mov
adc
loopne
add
jno
addr16
orb
movsb
fdivrs
mov
push
inc
push
mov
jmp
stos
sbb
cld
dec
cmp
pop
dec
bound
push
jp
test
xchg
scas
sti
push
shrl
cmpsb
sub
inc
mov
and
xor
pop
xlat
jb
add
arpl
mov
cmp
push
ret
mov
lods
xlat
fcomi
ljmp
inc
push
sbb
jecxz
dec
dec
fwait
ret
sub
movb
push
aam
mov
test
jbe
inc
mov
popf
fisubrl
jmp
mov
xor
jo
push
cmpsb
jmp
push
loopne
iret
pop
pop
jno
ret
sub
and
push
xor
enter
arpl
xchg
mov
shlb
call
cs
pop
and
or
jbe
hlt
push
sbb
cmp
fbld
mov
xor
rorb
add
jl
and
push
dec
in
mov
fsubrp
enter
push
in
stos
sbb
aam
mov
shll
ljmp
fnstcw
xlat
xchg
test
fists
adc
dec
insl
movsb
mov
movsl
aam
scas
xchg
mov
fcos
xlat
mov
pop
cwtl
and
sti
fbstp
mov
aas
and
jb
adc
ret
xchg
inc
sarb
mov
mov
jp
pop
or
rol
pop
or
icebp
outsb
test
mov
mov
push
lods
jmp
lods
fldt
and
neg
das
out
les
ret
cmp
clc
mov
dec
sub
mov
xchg
xchg
lret
pop
data16
sub
mov
into
push
mov
mov
xchg
inc
test
jnp
cmp
push
cli
push
into
lock
stos
mov
leave
ss
adc
push
ss
add
rorl
lods
lods
cmpsb
mov
mov
aaa
mov
movsb
sarl
shll
rolb
shrb
cwtl
imul
xchg
xor
adcl
shrb
jno
fstpt
test
xchg
pushf
inc
hlt
xchg
mov
aas
push
sub
fdivrs
inc
fs
sub
cmp
add
jbe
add
les
push
xchg
dec
mov
mov
add
mov
mov
out
outsl
int
sahf
stc
call
pop
sbbb
jbe
mov
mov
stos
xchg
cmp
aas
cs
clc
test
ret
adc
aaa
test
repz
daa
dec
push
sarl
dec
ja
cmp
scas
jle
mov
jns
sahf
or
push
push
dec
push
out
mov
mov
mov
fs
adc
push
adc
stos
mov
push
mov
push
xchg
cmp
pop
mov
xor
sahf
and
inc
cli
mov
push
aaa
inc
sti
mov
daa
ljmp
ficoms
aas
pop
out
subb
ss
cmp
mov
stc
inc
ja
das
mov
ja
lcall
movl
and
popf
xchg
ja
or
pop
cmp
jle
cmpl
cmp
movsb
stos
movsl
mov
jo
stc
movsl
mov
sti
xor
cltd
mov
iret
dec
leave
in
push
hlt
cld
enter
lods
jle
call
cs
sbb
and
cmp
pop
clc
dec
jnp
pop
xchg
add
lods
push
daa
lahf
pushl
mov
aam
and
push
ror
cli
fadds
jle
ss
mov
std
jge
ja
test
gs
push
addl
sub
stc
shll
sbb
xor
sub
mov
jg
sub
sbb
mov
loope
inc
cltd
gs
popf
xchg
cmpsb
xchg
inc
mov
mov
cmpsb
cmp
dec
jnp
sti
mov
mov
je
inc
sbb
dec
jmp
insl
xor
testb
inc
xchg
fucom
loopne
xchg
sub
and
arpl
xchg
cltd
mov
and
rorl
jl
movhps
push
and
dec
aaa
dec
cmp
push
cmpsl
xchg
mov
ljmp
fisubrs
mov
loope
mov
cmc
lds
scas
sar
pusha
push
xor
xchg
repnz
std
leave
imul
ss
dec
xchg
jo
jp
xor
in
xchg
adc
scas
scas
sub
sbbl
movsb
mov
jecxz
jo
data16
pop
js
shl
aad
sub
mov
push
pop
xor
mov
mov
jg
mov
incl
cmp
aas
adc
adc
imul
xor
in
mov
out
test
loop
shrb
popf
jg
test
mov
pop
clc
mov
data16
loope
and
push
in
insb
mov
or
push
mov
mov
lods
mov
test
or
dec
fists
sbbb
in
es
inc
jge
mov
std
jb
rclb
sti
jp
je
mov
jp
and
cmpsb
mov
adc
add
fistps
dec
sarl
or
es
out
mov
jno
push
cmpsl
sbb
loope
and
stc
xchg
ret
push
arpl
mov
and
in
xchg
mov
test
ljmp
xchg
dec
jecxz
or
push
cmpsb
sub
sub
fildll
pop
fwait
pushf
cwtl
dec
mov
xlat
sub
adc
rorl
xchg
out
mov
int3
push
cs
imul
lcall
jg
cmp
jne
mov
in
repz
scas
lock
mov
push
jecxz
jecxz
pop
inc
or
popf
adc
add
pop
xchg
mov
sub
lock
jne
push
dec
mov
pavgb
fistpll
testl
or
es
jae
clc
xor
in
cli
aad
cwtl
psllq
loop
push
and
scas
idiv
loope
xlat
cmp
test
push
pop
pop
imul
dec
mov
mov
cmpsb
std
lods
das
lea
lods
mov
mov
dec
sub
lahf
sbb
mov
push
push
test
mulb
in
jmp
sbb
hlt
pop
or
dec
addl
sub
ret
data16
sbb
lods
sarb
or
pop
jp
shl
test
and
mov
push
or
es
loopne
mov
fisttpl
jmp
call
adc
mov
lret
or
push
jg
stos
or
pop
mov
shrb
pop
imul
mov
jo
add
sarl
cwtl
pop
vpaddusw
fsubrs
pop
push
xor
aaa
outsb
ret
add
and
push
adc
stc
aaa
aad
xor
jmp
mov
outsl
pop
pop
dec
sbb
lods
ret
pushf
cmpsb
dec
sarl
mov
dec
insb
add
test
ja
lods
or
inc
push
sub
movb
shrl
xor
in
mov
or
pop
movsl
popf
nop
test
scas
xchg
adc
add
out
lock
jno
fbld
fs
imul
lahf
cltd
aam
jmp
movsb
icebp
test
and
mov
fyl2xp1
xlat
fwait
mov
rclb
pop
mov
into
and
mov
cs
mov
mov
movsl
movzwl
aam
rcll
mov
pop
pop
and
movsl
out
push
stos
mov
imul
and
aam
call
xchg
movsb
cmc
fcoml
jnp
jo
shrl
ret
jg
add
sub
popl
in
ret
lods
loope
cmp
pop
mov
mov
or
mov
add
icebp
stos
inc
add
mov
mov
dec
test
shll
jg
fldenv
sbb
jae
jb
mov
or
xchg
repz
into
pop
add
push
addr16
shlb
mov
lahf
sub
std
js
inc
pop
dec
mov
scas
lds
mov
add
ret
mov
fs
mov
stos
nop
shll
sbb
outsb
stos
movl
cmp
fld
mov
pusha
rcrb
in
dec
jnp
mov
and
repnz
popf
jo
data16
repz
out
mov
xchg
jns
dec
daa
decl
xchg
sarl
aas
iret
insb
stos
imul
out
adc
mov
sbb
sub
stc
or
dec
out
pop
outsb
hlt
jge
cmp
sub
lock
std
in
leave
adc
cmp
popa
dec
jecxz
xor
cmp
dec
mov
sahf
rclb
or
mov
test
fbstp
add
inc
lret
add
mov
mov
lock
dec
movsb
mov
inc
push
aas
out
aas
push
lods
xor
dec
and
das
jmp
repnz
stc
fcompl
imul
mov
outsb
sub
sub
sub
xor
or
mov
and
jg
test
pop
lcall
lret
in
mov
cmp
imul
jge
xchg
ret
mov
dec
sub
mov
and
aas
mov
lock
sub
xchg
mov
inc
sbb
in
loope
push
xor
push
insl
popa
insl
aas
mov
loope
mov
es
jmp
in
sbb
lods
xchg
mov
push
fidivrl
mov
insb
mov
or
les
inc
dec
sbbb
pop
sbb
add
cltd
adcl
inc
fsub
gs
mov
jl
cmc
xor
in
mov
or
add
dec
sub
int3
sbb
and
adc
ss
std
xor
xor
call
iret
adc
dec
es
test
cmovg
jnp
int3
mov
ds
push
jbe
nop
jle
cmp
pop
and
lods
lods
or
xor
mov
adc
jg
hlt
sbb
leave
xchg
push
adc
mov
jnp
or
int3
pop
jg
push
pop
jl
out
jns
adc
mov
lea
mov
adc
dec
movsb
adc
push
adc
ret
fmuls
dec
pop
test
sahf
leave
mov
subl
or
jae
rclb
push
jg
mov
scas
outsl
inc
push
mov
iret
mov
loopne
xchg
outsl
out
push
loopne
xchg
aaa
enter
adc
dec
add
push
jg
rcrb
xor
lods
addl
addb
loop
or
test
add
sub
mov
adc
or
fists
jo
adc
ljmp
lea
adc
aad
xor
pop
dec
adc
pop
xor
les
sub
sub
call
addr16
mov
aam
ljmp
push
mov
inc
ljmp
mov
mov
add
aam
outsb
push
dec
stos
sbb
dec
shll
incl
adc
mov
jae
sarl
xchg
xor
dec
jg
fimuls
jge
add
dec
jecxz
lock
xor
testb
adc
stos
mov
adc
movsl
xor
xchg
xor
jle
dec
iret
adc
mov
mov
std
lock
bound
push
mov
cli
gs
add
lcall
xlat
cmp
into
mov
arpl
jg
repnz
stos
dec
pop
imul
mov
dec
jle
imul
cmp
push
adc
loop
dec
je
insl
fwait
call
pop
lods
cmc
je
add
inc
cwtl
jb
int
ds
imul
jl
test
iret
jns
cmpsl
jl
nop
shlb
jae
inc
or
inc
cmp
fwait
sub
imul
mov
mov
or
sahf
inc
pop
cld
aad
scas
push
js
xor
push
cmpsb
mov
push
cwtl
xlat
leave
pop
les
lock
loop
dec
rolb
jle
js
mov
idivl
out
ds
adc
push
data16
aas
cmp
xchg
xor
cwtl
pop
out
in
data16
xchg
mov
mov
or
dec
inc
or
jmp
or
jge
jo
jo
or
fsubs
in
jl
arpl
xlat
ds
jno
sub
xchg
xchg
mov
fistpll
adcl
and
xor
notl
push
pop
test
jmp
adc
and
sbb
div
jp
repz
fstps
lcall
roll
pop
es
pop
lret
ja
jecxz
aam
xlat
pop
pop
stc
test
xor
mov
sub
idivb
fsub
push
push
rorb
adc
dec
xor
leave
pop
lret
aad
pop
in
loop
jl
mov
or
loop
movsb
lret
inc
out
nop
movb
lret
mov
enter
xchg
pop
dec
push
int3
jl
add
mov
xor
push
cli
or
adc
mulb
scas
and
sbb
jge
or
or
cmc
push
jp
add
sahf
or
cmp
test
inc
dec
inc
xchg
ljmp
ficoms
in
sbb
cmp
and
mov
int
sub
sahf
lock
jns
cmpsl
xchg
sub
add
lods
dec
inc
ret
jg
data16
add
cmp
int
outsb
add
sub
mov
dec
cmp
addr16
cmpps
lret
or
dec
inc
xor
xchg
xchg
adc
sahf
addr16
mov
lods
cmpsb
subl
mov
inc
lcall
add
sub
bnd
adc
mov
pop
incb
out
insb
leave
mov
clc
jmp
out
pop
dec
gs
push
test
cmp
xor
inc
in
push
push
icebp
scas
lea
cmp
movsb
and
mov
out
cmc
fldenv
sub
fmull
in
lahf
cmp
cmp
std
imul
sbb
hlt
dec
xchg
nop
and
mov
pop
adc
insl
xor
hlt
popa
ds
sbb
mov
outsl
enter
fsubr
fsts
sub
xchg
xor
xchg
lock
fmulp
out
or
and
jbe
adc
lahf
test
insl
test
push
stos
cmp
mov
in
dec
sahf
popa
pop
mov
jmp
call
lea
fidivl
aas
mov
imul
aam
jp
mov
or
sub
test
xchg
rcrb
dec
add
xchg
or
jg
test
lods
fnstcw
stos
scas
icebp
movsb
je
out
dec
mov
pop
jge
sti
pop
hlt
mov
hlt
cmp
sbb
test
sbb
dec
and
mov
inc
rep
xor
push
mov
pop
push
pop
mov
lock
ja
dec
cmp
sbb
daa
or
xchg
pop
inc
cmp
sahf
adc
bnd
xor
and
daa
jo
fists
jle
repnz
mov
push
mov
or
push
fwait
je
push
jo
in
push
push
int3
cmc
adc
jno
mov
jno
inc
ret
mov
jne
lsl
andl
xor
xlat
aaa
dec
inc
imul
and
push
aad
imul
push
pop
push
inc
pop
cli
mov
inc
movsl
test
subl
sarb
data16
sbb
je
aam
inc
xchg
out
cmp
dec
dec
xor
xchg
mov
cmc
and
fwait
icebp
inc
mov
fistl
and
ljmp
or
add
ret
inc
test
outsb
into
int
or
cmpsb
cld
lcall
movsb
std
add
or
mov
aas
cmp
push
pop
lods
push
xchg
add
insl
shrl
stos
out
leave
lock
lds
sbb
out
aaa
sti
mov
push
fwait
testl
mov
out
xor
test
sub
pop
and
icebp
inc
push
mov
lods
pop
aam
or
push
push
outsb
add
or
mov
in
lods
ret
adc
xor
xor
out
pop
jns
fdivr
add
jo
xchg
xchg
lret
arpl
lret
sbb
push
orb
or
jnp
adcb
xchg
add
and
push
cmp
das
mov
adc
mov
shlb
popf
out
xchg
rcrl
cmp
mov
pushw
fcompl
adc
imul
push
in
mov
xor
pop
addl
add
mov
adc
dec
cmpsb
and
push
mov
ss
das
push
es
in
push
xchg
mov
repnz
sbb
adc
sbb
call
cmpsb
mov
test
adc
add
xchg
jecxz
cld
mov
sbb
mov
sbb
cmp
cmp
leave
add
shlb
neg
daa
pushf
jge
and
out
das
dec
add
jae
push
inc
inc
push
add
mov
dec
cs
test
mov
dec
fcoml
idivb
sbb
cli
sbb
and
pushf
mov
js
jne
sub
mov
rorl
imul
mov
push
test
pusha
dec
xor
mov
scas
jecxz
movsl
in
push
ret
xorl
xchg
or
ljmp
and
movsl
mov
mov
sbb
test
mov
fwait
mov
mov
pop
shlb
and
mov
xor
pop
js
jb
popf
lahf
jecxz
rcll
clc
popa
negb
add
ja
jbe
pop
jl
cmp
in
pop
repnz
cmc
xchg
xlat
ljmp
inc
ljmp
imul
add
xchg
push
mov
test
dec
clc
dec
das
pop
lea
enter
ret
jb
cmpsb
mov
xchg
xor
pushf
movsb
pop
test
fstpt
insb
ret
jle
pop
js
movsb
inc
jge
adc
jo
stos
push
add
loop
or
xchg
cmpsl
sbb
fs
adc
mov
test
mov
adc
in
add
stc
mov
ljmp
or
ja
push
dec
add
mov
inc
adc
sahf
cmp
cmp
leave
push
adc
insb
sub
xchg
imul
movsb
cwtl
adc
test
lock
mov
shl
shrb
pop
stos
cmp
or
cmp
mov
pop
ffree
mov
add
mov
push
inc
push
sub
js
cltd
popf
call
mov
fs
push
pop
mov
dec
out
jo
sub
int3
inc
pop
idivb
lods
flds
or
fsubrs
out
ret
sub
xchg
jbe
sbb
push
mov
movsl
fldt
sahf
lods
sarb
loop
pop
or
and
fprem1
jbe
pusha
ficompl
jns
dec
scas
jnp
fcmovne
mov
ljmp
push
cmpl
andl
mov
test
outsl
test
add
mov
or
dec
call
inc
ljmp
fwait
mov
das
test
fwait
dec
jmp
and
dec
jmp
rorb
imul
add
dec
jnp
shl
jbe
pop
shrb
lods
dec
and
jno
jo
or
ficomps
out
repz
sti
and
sub
xor
sbb
dec
xor
das
icebp
aam
sub
adc
imul
jbe
mov
jp
aas
int3
adc
sarb
pusha
inc
add
mov
mov
mov
mov
sarl
mov
cltd
adc
loope
cli
inc
pushf
or
mov
lret
adc
inc
out
inc
leave
leave
push
mov
leave
inc
sbb
push
cmp
adc
inc
jae
loop
and
mov
fs
cmpsb
cmp
xor
xchg
ret
mov
jmp
and
orb
mov
movsb
ret
push
or
mov
xchg
jbe
sarl
fistl
shll
jb
movsb
outsl
mov
cmc
in
mov
push
cwtl
imul
sbb
sbb
inc
rcr
inc
and
sbb
daa
cmpsb
add
ret
push
xor
mov
jns
mov
jle
inc
mov
out
jge
and
fld
push
das
mov
scas
pop
push
jae
adc
pop
fdiv
int
mov
pop
mov
mov
push
lahf
cmp
sbb
ret
pop
cld
rclb
sub
adc
mov
ret
roll
movsl
and
dec
adc
add
scas
fwait
fs
enter
lret
outsl
data16
popf
inc
jne
cmp
ret
into
ja
push
lret
mov
int
mov
fisubs
loop
out
xor
add
jg
imul
add
or
into
test
fstps
iret
out
jne
subb
cmp
sub
sbb
js
loop
shr
push
jg
pop
lahf
cltd
dec
jnp
jbe
test
push
daa
pop
icebp
pop
stos
xor
xchg
lea
stos
xchg
adc
fs
int3
adc
jecxz
shlb
mov
mov
mov
jp
push
stos
lea
cmp
ficoms
and
hlt
fbstp
pop
cwtl
iret
push
sub
ret
mov
dec
insb
stc
push
jl
fbstp
sti
cld
fmuls
mov
push
sti
in
sbb
mov
sbb
ss
cli
mov
repz
fs
loop
lods
sbbl
cmp
fsubl
mov
cmpsb
xlat
xor
fisubrs
stos
aad
or
inc
pop
enter
addr16
lea
roll
in
enter
xchg
and
mov
addr16
cld
mov
stos
outsl
mov
leave
ret
rcl
sbb
cltd
lods
xor
dec
jg
pop
inc
sub
in
out
inc
push
shr
and
test
loop
sahf
cmpsl
iret
push
sub
scas
sbb
sbb
adc
inc
ljmp
jmp
adc
xchg
in
mov
faddl
mov
dec
pop
loope
or
jb
test
jae
dec
outsb
ss
pop
sti
sub
in
out
inc
dec
push
in
frstpm(287
repnz
pop
sub
push
out
int
inc
add
stos
mov
push
push
mov
add
imul
arpl
inc
xchg
adc
mov
push
int
gs
fnsetpm(287
fwait
jle
mov
pop
pop
ljmp
out
cli
fisubl
fwait
lret
leave
popa
ja
jp
aam
or
jmp
and
xchg
bound
stos
pushf
push
add
js
mov
je
jmp
ljmp
scas
and
addb
in
addb
add
ret
nop
sub
rol
push
or
xor
xor
sub
shl
insb
inc
push
inc
icebp
mov
jne
mov
push
dec
loope
jbe
daa
nop
xor
roll
xor
push
pop
sbb
jmp
loop
test
mov
push
dec
neg
xchg
push
push
and
scas
sub
cmp
out
or
jo
leave
jecxz
hlt
gs
loop
xchg
das
icebp
mov
js
test
and
lcall
inc
out
imul
jecxz
inc
lcall
cmpsb
adc
xor
aam
lods
adc
cmc
cmp
mov
stos
adc
sbb
cld
iret
or
cmp
shrb
imul
ss
cmp
imul
bound
int3
cmpsb
cmc
aas
ljmp
mov
lcall
in
repz
dec
mov
pop
lcall
loopne
or
shr
in
lds
icebp
xchg
mov
out
mov
lock
adc
call
xchg
xor
enter
cmp
inc
out
iret
push
les
push
incl
xlat
fwait
int
push
sahf
jo
sub
add
adc
addr16
mov
paddsw
ret
mov
aaa
or
outsl
dec
imul
lret
lock
addr16
lock
cli
mov
mov
push
stos
cli
sbb
lcall
ss
or
leave
bound
insb
mov
inc
xchg
mov
fcompl
stc
inc
xor
stos
pop
hlt
sahf
push
cmp
mov
mov
cmp
ja
push
ret
cmp
cmpsl
es
adcl
lcall
inc
add
in
cmpsb
imulb
mov
adc
sub
cwtl
push
int3
inc
xor
hlt
push
jo
aaa
pusha
push
into
lret
insl
fisttpl
cwtl
scas
cmp
adc
pop
adc
std
scas
lock
ljmp
add
mov
or
cmpb
mov
test
cmp
jmp
xchg
push
dec
dec
aad
lcall
mov
xchg
push
cmp
or
into
mov
das
sarl
in
jp
push
scas
leave
push
add
adc
and
js
mov
mov
mov
push
loop
jecxz
jecxz
imul
and
adc
xchg
mov
ret
cmc
pop
inc
inc
fdivrl
pop
sub
xlat
sbb
dec
mov
addr16
lods
cld
fcomps
push
lea
add
lds
iret
das
dec
xchg
arpl
jae
inc
jb
dec
xchg
sti
mov
mov
decb
pushf
pop
inc
mov
mov
inc
out
pusha
sbb
cmpl
int
stos
dec
pop
fcomip
std
mov
or
xor
mov
pop
lea
xor
mov
jno
xchg
dec
enter
jno
mov
cmp
scas
sub
dec
fiaddl
jno
ret
add
add
js
mov
jge
inc
pop
and
dec
in
rcrl
ficoml
inc
push
pop
xchg
roll
test
fdivl
mov
mov
xor
ficompl
pop
jecxz
ret
add
push
out
loope
push
sbb
mov
gs
and
loop
les
sub
insl
pop
push
and
add
xor
fisttpl
leave
xchg
ja
xchg
movsb
inc
mov
out
out
aas
jns
cmpsl
mov
xlat
aas
pop
test
xchg
cs
andl
jo
push
adc
fidivl
fldenv
fldt
sub
xchg
xorl
push
lret
iret
rdpmc
lahf
outsb
add
pusha
or
push
push
arpl
xchg
in
mov
pushf
cmp
jno
loop
sahf
inc
mov
movsb
les
ss
inc
cmp
xchg
sahf
xor
sbb
inc
add
cmpsl
ds
rolb
pop
addl
fmuls
clc
test
je
xchg
and
mov
sub
xor
test
cltd
add
dec
arpl
in
cmpsl
lock
daa
in
das
repz
testl
dec
jbe
xchg
cmp
xor
mov
cmp
or
faddl
jl
sarl
or
decl
jae
outsb
rclb
mov
enter
cltd
out
imul
add
mov
test
loope
insb
xor
mov
mov
add
cmp
lods
fsub
cmpb
or
pop
push
daa
fiadds
sub
std
lret
pop
add
mov
push
dec
sub
and
mov
xor
mov
out
xchg
cmp
mov
push
sbb
clc
out
xchg
stos
insb
sbb
dec
add
cli
lahf
ds
adc
jl
lock
dec
aas
mov
jno
repnz
push
bnd
loop
and
sbb
xor
add
sahf
clc
inc
js
mov
test
jns
cwtl
gs
popf
fiadds
pusha
insl
inc
xchg
lock
push
outsb
inc
pop
lret
clc
pusha
jmp
repnz
add
xor
sahf
lcall
sbb
mov
push
add
popa
jns
dec
outsl
ror
or
out
mov
sub
addr16
fldcw
icebp
into
insb
and
mov
push
dec
testl
out
negl
cmp
sbb
lcall
scas
push
jb
sub
aas
pop
sbb
inc
mov
mov
xchg
mov
push
repz
mov
adc
adcb
jnp
sarb
or
cmpb
sbb
lret
rcr
mov
cltd
mov
orb
xor
loope
add
repnz
lret
cmp
cmp
jbe
mov
push
dec
shl
or
sbb
cmp
jg
popf
xor
cld
inc
je
test
sub
jle
add
fbld
adc
lods
int3
cs
ds
jns
or
cmp
movsl
fiadds
aaa
lock
adc
sbb
daa
add
mov
mov
movsb
imul
xchg
mov
push
add
xchg
xchg
xlat
push
iret
test
inc
push
add
fsubrp
imul
scas
inc
dec
mov
sub
xlat
pop
xchg
adc
insl
sbb
pop
cmovb
adc
mov
bound
push
xor
jge
xor
flds
and
leave
mov
xor
inc
mov
mov
pop
mov
pop
repz
sbb
das
test
imul
lret
out
add
push
sbb
wrmsr
and
push
clc
in
mov
repnz
mov
pushf
dec
pusha
pop
mov
aad
xor
push
andl
cmpsb
jmp
mov
in
cmp
shr
fucomi
pop
cmp
clc
fstpt
outsl
jge
out
inc
xchg
in
add
inc
mov
sub
mov
fdiv
in
xor
push
dec
mov
mov
adc
cli
clc
mov
lods
stos
push
clc
fs
imul
fs
sbb
add
pop
jbe
sbb
mov
sub
aam
shl
fdivrl
xor
mov
loope
loop
xor
repnz
mov
cmpsl
jl
fwait
jmp
inc
addr16
rol
dec
pop
fldl
jp
call
lods
push
cwtl
out
push
sub
fs
add
sbb
outsb
inc
or
pop
imul
test
ret
mov
std
mov
push
push
mov
daa
out
aas
xchg
lods
mov
xor
mov
out
pushf
sub
push
jbe
or
insb
pop
add
push
les
mov
jno
xchg
xlat
add
fwait
xor
dec
repnz
or
mov
into
sahf
loopne
fwait
jmp
mov
out
pop
fists
pop
out
sbb
add
jge
jb
xchg
insb
pop
inc
cmp
sub
mov
mov
ds
mov
cmp
jmp
das
sti
inc
cmp
outsl
mov
pop
cltd
fnstenv
jnp
movsw
mov
ficomps
incl
dec
jno
mov
sbb
push
sub
cmc
sbb
iret
stos
push
loopne
repnz
and
sub
jae
mov
push
adcl
push
pop
mov
pop
imull
out
fisubl
push
repnz
or
call
pop
jns
xchg
mov
mov
fdivl
adc
fs
sub
repnz
push
mov
cmpsl
mov
test
or
cmp
testb
mov
enter
sar
andb
ret
pop
or
aas
test
lcall
sar
icebp
dec
movsb
mov
cwtl
in
subb
cmp
and
ds
sub
xchg
adc
pop
push
dec
jmp
mov
and
es
std
ljmp
and
sbb
sub
mov
mov
ja
out
ja
aaa
or
pop
lret
dec
fimuls
and
insb
add
jne
loopne
jle
test
dec
mov
lret
movsl
pop
pop
or
push
add
xchg
fisubs
rep
in
jne
pushf
xchg
adc
mov
pop
mov
mov
xchg
sub
jb
inc
or
lret
bound
adc
pop
scas
ds
in
mov
and
pop
inc
cwtl
leave
lahf
mov
movsl
dec
push
xor
or
inc
ss
xchg
jbe
cmp
jnp
bound
call
pop
cmpsb
je
mov
mov
or
mov
or
mov
clc
cmp
cmpsl
xchg
sub
mov
mov
out
mov
adc
or
out
or
shll
pushf
aas
ret
pop
pop
lds
dec
push
mov
mov
insl
scas
or
daa
cwtl
mov
jo,pn
pop
mov
pop
jp
jne
dec
in
adc
ljmp
scas
inc
daa
js
inc
lret
fdivl
push
cld
mov
pop
cs
jecxz
js
test
cmpsb
aaa
bound
movsl
add
ficompl
mov
pop
sahf
daa
adc
outsb
mov
mov
inc
arpl
sahf
and
out
out
jle
mov
and
adc
out
inc
push
xor
loope
or
imull
xor
xor
cmp
testb
mov
pop
mov
xchg
neg
loope
std
xlat
mov
cld
std
out
dec
aam
or
sub
push
ret
call
sbb
lods
dec
lahf
xlat
in
adc
sbb
iret
cli
loopne
cmpsl
push
sub
lock
jp
pop
ja
mov
or
imul
xchg
fmul
jo
ljmp
jecxz
shll
dec
int
push
ljmp
lods
es
xchg
pop
push
lock
sbb
sbb
pop
es
loopne
mov
mov
xchg
jg
xchg
cwtl
sbb
negl
test
lret
jmp
xchg
add
xchg
test
jecxz
mov
mov
insl
aaa
inc
pop
cmp
repnz
test
pusha
push
xchg
sub
data16
mov
adc
or
pop
jp
pop
mov
popf
cmc
pop
ja
and
popf
mov
fldt
inc
int3
xor
push
xor
and
shrd
push
jns
sbb
sbb
adc
xor
fdivrs
mov
inc
ja
ds
pmaxsw
cmpb
jo
cmc
xlat
or
sub
xchg
fldl
cmp
shrb
jns
mov
or
pop
pop
mov
ret
mov
lock
jecxz
add
arpl
testb
lahf
dec
push
dec
leave
insb
or
iret
inc
popf
stos
or
shl
stos
inc
aam
dec
hlt
mov
lret
movsl
inc
mov
dec
fdivrs
xchg
and
xchg
sbb
adc
or
mov
hlt
fwait
jmp
fcmovnb
push
scas
lds
sahf
fwait
xchg
fsts
dec
xlat
xor
sub
xchg
and
mov
dec
xchg
into
in
push
pop
jne
fidivl
mov
test
popa
test
xchg
es
loop
or
div
push
not
mov
add
and
mov
dec
jno
cld
sbbb
add
mov
mov
dec
mov
loop
into
ficoml
and
loop
fwait
out
cmpsb
and
push
sbb
push
stc
mov
jg
adcb
cltd
and
mov
fs
cltd
sub
sbb
or
jl
out
xor
mov
pop
sbb
mov
xchg
insb
shll
stos
adc
push
insl
push
push
movsb
lds
nop
sbb
adc
je
cmp
inc
dec
pop
cmc
lea
rcrl
fisttpll
xor
scas
mov
xorb
cmc
jo
lock
mov
imul
add
es
mov
or
ja
xchg
pushf
in
jb
stos
sbb
xchg
xor
int3
pop
add
js
mov
mov
adc
repnz
enter
lock
sbb
and
push
and
adc
pop
dec
inc
dec
sbb
stc
inc
dec
fidivs
dec
in
push
or
sub
mov
adc
outsl
addb
test
repz
and
jb
pop
jecxz
clc
lds
inc
add
int
loope
cs
sub
mov
sbb
inc
ja
jp
cmp
pop
jle
add
add
dec
inc
shl
mov
inc
sbb
mov
pop
cmpsb
fsubr
sbb
rcll
int
add
fisubrl
imul
andb
push
stos
ficomps
push
incb
ret
push
and
negl
scas
jge
pop
push
icebp
sti
jb
mov
mov
push
imul
add
imul
iret
fisubl
push
xchg
sbb
sbb
inc
pushf
mov
sub
les
addl
ficompl
add
loope
or
xor
xchg
fidivrl
ss
lahf
shlb
jbe
sbb
pop
addr16
insb
in
adc
mov
outsb
xor
sbb
lock
mov
jmp
add
imul
fidivrs
addr16
stc
scas
push
cmc
xchg
adc
jle
adc
test
fdivs
movsb
dec
aas
pop
scas
in
push
jbe
mov
call
dec
jp
mov
aas
cmpsl
dec
mov
jbe
fisubrl
repz
loope
sub
sbb
adc
mov
and
and
mov
imul
and
pop
fistl
sbb
xlat
add
imul
pop
mov
mov
icebp
cs
jge
push
adc
cmp
inc
lcall
mov
mov
imul
pop
xchg
cmp
mov
cmp
loop
mov
pop
pop
jo
test
out
mov
pop
push
shlb
inc
xacquire
pop
xchg
pop
jl
sbb
adcb
inc
icebp
outsb
push
pop
xchg
data16
gs
adc
and
lea
ret
push
pop
inc
out
sti
xor
mov
pop
xor
adc
movsb
inc
pop
inc
stos
adc
aaa
out
fdivrs
fnsave
and
jge
dec
dec
add
ds
test
jp
push
or
and
sbb
mov
add
mov
sbb
repz
dec
mov
mov
cmp
pop
mulb
mov
out
loopne
in
stc
add
testb
jae
loop
adc
stc
sahf
mov
das
out
mov
adc
inc
add
roll
adc
xchg
xor
push
and
mov
mov
xor
add
pop
lods
lea
in
push
add
sbb
adc
inc
fs
mov
je
push
jno
ljmp
add
xchg
dec
adcl
xorb
adc
adc
push
sahf
inc
cmp
enter
cwtl
ss
sbb
roll
popa
fwait
enter
divb
mov
mov
int
lock
ret
insb
push
mov
jge
sbbl
xor
cmp
adc
dec
pop
cs
aas
xor
popl
sbb
sarb
bound
mov
dec
xlat
add
xlat
enter
pop
xchg
pop
scas
in
dec
jnp
mov
sub
and
ss
push
push
dec
jbe
lahf
outsl
cmpsb
xorb
adc
test
popa
jae
and
cld
shrb
sub
in
repnz
mov
scas
shrb
sub
iret
loope
pop
pop
jecxz
mov
sub
js
inc
xor
xor
and
jb
pop
div
mov
daa
aam
lods
push
imulb
sbb
mov
and
inc
cmp
mov
and
xchg
jmp
jne
dec
ja
inc
setge
test
or
out
cmp
xchg
icebp
shll
pop
mov
pop
imul
sbb
add
xchg
out
xor
and
jae
mov
ss
shll
cmp
jno
mov
cmp
xor
dec
push
xor
add
mov
or
add
push
cs
jo
jecxz
mov
roll
ret
imul
fsubp
cli
sbb
neg
ficoml
and
or
and
repz
les
sub
cld
mov
jns
push
inc
xlat
and
push
xor
xlat
insl
lods
sbb
loope
push
cmp
xchg
repnz
aad
into
or
mov
enter
lret
repz
pop
xor
adc
pop
pusha
arpl
test
std
int
sbb
jmp
xlat
clc
mov
mov
es
xor
loop
dec
inc
jp
popa
gs
dec
pushf
mov
mov
pop
adc
test
push
mov
jno
mov
cmpsl
lods
fistpl
adc
pop
add
and
pusha
push
inc
pop
jmp
jo
cmp
dec
cmp
mov
addb
ret
hlt
repz
fmul
jbe
mov
fisttpl
jns
inc
lahf
fwait
xor
lods
or
inc
xlat
xor
pop
fisubrs
pop
cwtl
sub
lahf
cs
in
pop
jns
ret
loop
ja
sub
outsl
shrl
xchg
lret
inc
push
out
scas
into
dec
cltd
rorb
inc
out
aaa
rcrl
stos
add
xchg
mov
das
loop
jp
jns
test
fcoml
xor
test
imul
stc
pop
jnp
call
inc
push
xlat
add
sti
dec
daa
push
fildll
pop
bound
arpl
and
das
push
fs
in
sbb
stos
mov
dec
loope
mov
adc
lret
and
add
mov
xchg
jnp
stc
scas
leave
enter
add
mov
cmp
shrl
inc
cmc
sbb
test
imul
loope
add
lods
je
pop
call
pop
mov
sub
or
cmpsl
push
mov
ret
icebp
enter
nop
xor
subl
test
push
pushl
fisttpl
sbb
xor
out
mov
sub
repz
push
jecxz
jne
xor
or
adc
imul
sbb
outsb
add
adc
scas
push
pop
in
mov
mov
jmp
lods
xor
arpl
mov
cmc
inc
and
cmc
in
xchg
std
xchg
pusha
xor
sti
sbb
imul
push
dec
lret
xor
mov
mov
das
repz
adc
adc
repz
in
cmc
jle
rep
xchg
fiadds
in
mov
outsb
call
pop
push
inc
dec
pop
clc
ficoms
scas
mov
addr16
mov
je
sbb
push
sbb
mov
xor
rol
sub
mov
and
imul
aam
cmp
arpl
adc
es
mov
cmp
pop
repnz
push
jne
inc
adc
jl
lea
fists
and
fbstp
enter
mov
adc
cmc
dec
sub
mov
sbb
push
call
imul
rcl
dec
sub
out
lcall
pusha
pop
pop
fdivp
lret
adc
pmaddwd
push
arpl
loopne
fisttpl
xchg
insl
push
inc
pop
shl
lahf
je
pop
sbbb
jno
notl
xchg
push
fstpt
loope
pmullw
push
lods
out
movsl
rol
sub
pop
jp
inc
into
movsb
lea
add
cli
pop
outsb
aas
push
bound
inc
out
and
roll
clc
xor
mulb
cmp
loop
add
daa
and
test
lock
mov
sahf
push
add
adcl
addb
push
pop
arpl
dec
loop
sub
cmpsl
icebp
enter
jle
pusha
or
or
mov
push
inc
add
fbstp
push
xor
das
imul
inc
std
iret
lea
pop
or
sub
sbb
mov
cli
cwtl
xor
lea
pop
pop
sbb
jecxz
and
stc
push
loope
cmp
cmpsb
je
and
pop
movsb
fcmovbe
ljmp
out
fildll
mov
pop
fs
cmp
lsl
loopne,pn
cmp
cs
sub
inc
insb
xchg
lea
adc
lcall
adc
push
cltd
push
loope
lret
push
out
push
push
mov
loope
fistps
jae
jl
flds
xor
jae
mov
xchg
add
or
xor
cmpsb
lahf
sbb
out
adc
scas
cwtl
mov
jne
sbb
out
push
ljmp
clc
addb
xorb
out
addr16
test
pop
sbb
xchg
push
cmpsl
jne
lock
fxch
sbbb
js
sub
mov
jg
enter
sbb
clc
and
test
mov
add
flds
mov
inc
inc
and
adc
mov
cmc
lcall
pop
adc
mov
cld
adc
mov
int
inc
leave
adc
in
pop
push
test
in
sbb
inc
mov
or
jl
mov
mov
jmp
pop
aad
dec
js
in
scas
add
xor
xchg
in
mov
add
out
outsb
add
inc
xor
mov
and
dec
or
push
pop
adc
mov
rorb
cmc
xor
incb
xchg
xchg
loopne
jg
xchg
out
mov
cmp
insb
jmp
stos
inc
xchg
jno
ret
cmc
imul
pop
jnp
enter
push
jecxz
fucomp
xchg
jb
inc
lock
lcall
repz
add
pop
lret
std
inc
andl
cmpsl
out
outsl
inc
decb
mov
jmp
xchg
dec
movsb
movsb
sub
not
and
push
push
scas
sarb
repz
dec
imul
cmp
dec
jae
dec
and
push
jle
cmc
bound
xchg
movsl
or
push
out
in
inc
repz
sbb
in
leave
jg
pop
sahf
leave
bound
jno
test
dec
repz
sub
sub
or
xchg
outsb
push
hlt
xchg
fnstcw
sub
push
mov
je
jmp
insl
jmp
cmp
cmpsl
jbe
pop
hlt
adcl
inc
pop
lcall
add
or
adcl
pop
adc
sbb
cmc
out
test
addl
add
or
mov
cmpsl
fildl
sbb
jge
sti
xorb
loope
scas
mov
push
xchg
insb
pop
sub
push
sarb
add
or
cmp
outsb
sahf
lock
adc
mov
xchg
cmp
or
popa
sbbl
out
pop
jae
inc
call
loop
pop
bound
pop
cltd
icebp
push
mov
dec
movsl
fwait
notb
lods
lea
leave
dec
mov
hlt
fsubrl
fists
stc
mov
test
mov
or
jle
mov
ss
xor
sbb
cld
repnz
sahf
lods
add
shr
push
std
scas
cwtl
mov
test
dec
icebp
loop
cmp
pop
bound
into
mov
scas
outsb
lahf
movd
daa
fmuls
lds
shlb
in
inc
inc
addl
je
popf
dec
into
sbb
loope
sbb
push
dec
adcl
dec
inc
fabs
mov
xlat
test
xchg
jl
je
mov
sti
mov
lret
aaa
lock
push
mov
cmp
sub
ret
out
fsubl
adc
or
cmp
inc
adc
cmpsl
xor
lret
adc
mov
inc
fwait
mov
fstpt
or
inc
xchg
lea
xor
xchg
mov
cli
lcall
xor
cwtl
or
and
sbb
pop
jmp
rcrb
stc
addb
faddl
call
in
ds
gs
cltd
clc
rolb
jno
push
fnstenv
adc
icebp
sub
dec
push
push
test
adc
push
dec
and
push
xchg
movl
shlb
dec
pop
jmp
stc
fcmovu
xchg
mov
movsb
push
out
insb
arpl
add
lcall
mov
sar
hlt
sub
adc
vmaxss
mov
addr16
jnp
rol
adc
adc
repnz
inc
imul
shl
divl
lods
insl
mov
adc
leave
mov
adc
loop
xor
push
ss
sbb
xchg
push
cmpsl
inc
jp
fwait
or
or
sub
mov
inc
inc
fimull
sbb
cltd
test
jns
sbb
mov
sbb
jo
push
pop
insl
std
dec
repz
mov
mov
ret
insb
aam
leave
mov
jb
rcr
inc
mov
adc
xor
or
mov
outsb
adc
imul
jb
add
pushf
pop
xor
sbb
sub
in
push
jno
pop
sbb
or
scas
rorb
or
jmp
push
add
pop
sbb
repnz
cli
push
sbb
pusha
cmp
sub
add
mov
jo
int3
rclb
xchg
or
push
jecxz
out
loope
xchg
and
pop
test
mov
movsb
imul
xor
enter
mov
mov
rol
or
mov
xor
int
call
and
loop
nop
popa
cmpsb
lret
jmp
call
es
fbld
sbb
push
iret
push
dec
add
inc
lret
dec
xor
add
fisubl
add
xchg
sarl
outsl
xor
nop
fstpl
jne
fwait
adc
jp
filds
mov
xor
pushf
cld
fcomps
pushf
jmp
fnstsw
xor
adc
push
sbb
dec
gs
push
mov
sub
jge
js
lock
and
add
dec
pop
cmp
gs
das
xchg
std
cwtl
aam
in
or
adc
mov
into
xlat
je
adc
mulb
fldl
add
mov
push
dec
sbb
adc
inc
call
adc
cmpsb
loop
jge
push
jle
aas
mov
cwtl
lock
and
sub
sbb
shl
push
mov
les
aaa
frstor
or
push
mov
addr16
jo
or
and
sarl
sti
addr16
xchg
add
jns
xchg
push
cltd
std
lods
mov
xchg
out
adc
and
xchg
pop
jo
test
ficomps
aas
subb
inc
lods
les
jmp
outsb
adc
sarb
out
das
mov
push
dec
sub
sbb
sarb
mov
std
cmp
mov
jmp
inc
jecxz
pcmpeqb
insb
xor
sbb
movsb
mov
in
dec
or
mov
mov
jo
xchg
adc
inc
mov
sbbb
into
nop
pop
cs
sbb
and
enter
aas
fwait
push
orb
fstl
inc
mov
mov
xlat
sahf
mov
icebp
nop
xchg
mov
jp
mov
mov
nop
add
out
andl
adc
pushf
jb
mov
inc
ss
lcall
gs
cmp
dec
js
jp
andb
cmpsb
mov
xchg
push
ds
test
fsts
dec
pop
mov
sub
aaa
xorb
rcrl
iret
mov
mov
lret
popf
or
dec
pop
divb
push
lea
add
fs
push
push
aas
ret
ror
enter
nop
mov
mov
std
es
pop
jo
ljmp
stos
jl
mov
cmp
xor
mov
iret
add
mov
mov
jmp
test
jae
loop
scas
push
cmp
sub
mov
cmc
notl
jno
xor
insb
cwtl
cmpsb
imul
dec
daa
hlt
sub
cmpb
mov
sub
arpl
mov
mov
jmp
js
decl
jbe
outsb
js
lock
mov
mul
push
adc
shlb
out
orl
dec
outsl
inc
into
ljmp
stc
or
cmp
js
lock
xor
sbb
jne
cmp
inc
das
add
cwtl
jbe
dec
fbstp
outsl
sub
dec
cwtl
iret
xchg
fs
jl
pusha
fs
add
int3
cs
jne
fbstp
jle
pop
jae
testb
lret
cmp
and
xchg
adc
cltd
mov
xor
inc
jecxz
fiaddl
push
ja
imul
add
enter
and
pop
or
sub
sub
jmp
loope
repz
int3
flds
and
rclb
jae
ja
clc
cmp
outsl
jb
stos
loop
pop
shll
push
faddp
in
push
out
cmpb
adc
cmpsb
lods
push
bound
je
outsl
cmp
adc
pop
testb
cmc
lret
sub
cmp
test
outsb
fidivl
jo
jg
jecxz
aas
test
sub
es
pop
push
lock
shlb
cmpsl
or
imul
inc
pop
stos
and
fsubs
mov
fwait
jle
pusha
pusha
hlt
cwtl
xchg
and
es
ret
imul
jno
mov
dec
insl
xchg
xchg
jle
xchg
mov
mov
or
stos
loope
int
bound
xchg
lahf
jbe
cmp
in
fs
jo
mov
xchg
cmp
mov
aaa
pop
push
mov
push
push
ret
insl
mov
into
js
add
sbb
xor
push
repz
das
movsl
mov
ljmp
mov
mov
test
sbb
test
fcomps
mov
pop
lret
insl
mov
add
mov
mov
mov
into
push
adc
loopne
aad
inc
or
xchg
adc
push
jecxz
ljmp
xchg
sbb
sub
aam
pop
ret
or
cmpsb
xor
mov
cltd
add
inc
in
mov
out
lahf
dec
mov
ret
dec
or
mov
dec
or
testl
inc
rorl
addl
stc
cmp
push
jae
and
insl
insb
mov
push
sub
cmp
xorb
jge
mov
mov
stos
cmp
insl
push
ret
pop
cmp
outsl
dec
lds
pop
bound
pushf
mov
push
std
jecxz
lods
pushf
or
xchg
scas
loop
add
xor
clc
popa
lea
or
and
cli
jns
sub
lcall
sub
in
test
cmc
js
cmp
std
outsl
jmp
xchg
jl
ja
ret
enter
insb
dec
dec
inc
push
sub
lods
call
xlat
outsb
arpl
scas
aad
jbe
adc
lock
rclb
mov
mov
arpl
mov
jo
lds
rcll
clc
push
aad
cmp
mov
ret
xchg
pusha
aas
in
pop
loop
and
inc
out
push
and
sti
sar
cwtl
lcall
mov
jmp
mov
add
incb
enter
mov
out
ja
add
pop
push
out
imul
repz
sbb
cmpsb
ljmp
bound
fsubr
pop
sahf
push
cmp
test
pop
add
cmp
or
mov
push
or
outsb
ljmp
pop
ror
int
stos
lcall
push
mov
out
sbb
mov
jecxz
cmp
and
ja
push
enter
js
loop
cmp
or
lret
lret
dec
mov
jmp
ror
mov
icebp
dec
les
gs
imul
insb
lcall
jmp
movsb
cmpsl
xlat
and
inc
adc
adc
mov
setno
push
sbbl
xchg
cmp
rclb
ljmp
stos
gs
mov
insl
xchg
sbb
or
xor
and
scas
sbb
sahf
ja
jnp
sub
movsl
add
sbbl
sahf
filds
movsl
inc
jae
ljmp
sub
adc
pop
xor
jl
lret
pusha
mov
mov
add
mov
repnz
mov
push
shrl
mov
popa
addr16
mov
dec
jle
pop
xchg
cmp
push
lock
push
dec
les
jno
test
add
or
stos
sbb
xchg
outsb
sbb
adc
das
cmp
pop
movsl
imul
xor
movsl
fildl
outsb
jo
jae
jnp
pusha
dec
and
and
dec
or
jns
cltd
aas
add
loop
xchg
xor
in
mov
sahf
dec
nop
push
cmp
outsb
call
inc
enter
emms
aaa
adc
inc
inc
xchg
stos
add
xchg
int3
jne
cmp
repz
jmp
cmpsl
lods
jmp
or
stos
movsb
lods
popa
cmpsl
sbb
and
int
and
lret
aad
xchg
lods
jne
inc
and
enter
iret
adc
nop
push
xchg
js
addr16
rcrl
push
fldt
ret
push
mov
fwait
adc
pop
test
iret
out
into
dec
pop
mov
test
xor
pop
test
mov
push
push
testb
sub
pop
cmp
inc
sub
popa
push
cltd
aaa
push
mov
es
outsl
outsl
repnz
fmul
adc
pop
fiadds
lahf
stos
add
mov
push
in
xchg
xchg
cmpb
out
sub
mov
aas
pop
mov
pushf
jb
leave
sub
cltd
cmc
and
cwtl
pop
add
pop
jae
sar
adc
in
push
dec
mov
xor
pop
xor
hlt
jno
shlb
jl
add
ds
aad
out
or
and
imul
mov
xchg
nop
push
out
mov
mov
mov
mov
jmp
test
ljmp
insb
lods
mov
cmc
mov
pop
jbe
push
xor
jecxz
lret
xchg
inc
jmp
fisubrl
jmp
insb
fidivrs
fildll
scas
dec
dec
repz
hlt
scas
nop
push
xchg
aas
test
push
shrl
push
fwait
mov
leave
mov
mov
xchg
out
out
arpl
adc
pop
mov
mov
mov
bound
jecxz
inc
cwtl
xor
addr16
hlt
arpl
inc
lcall
outsl
jle
sbb
jp
aas
sbb
or
xchg
mov
mov
das
xchg
outsb
filds
ja
add
cltd
jnp
mov
mov
scas
insl
mov
push
mov
mov
ror
mov
les
roll
push
into
or
mov
lret
jns
hlt
xchg
push
daa
rcrl
pop
sub
jno
les
mov
mov
repnz
pop
rcrl
jbe
cltd
es
mov
rorb
into
shll
push
xorl
pop
repnz
sbb
movsl
cmp
xor
jge
jno
and
fsubs
jmp
add
push
push
inc
xchg
pop
in
lods
and
test
adc
loope
inc
rcrb
xor
pushf
cmc
leave
lret
mov
ds
repnz
dec
lock
push
mov
mov
lret
insl
loop
popf
lret
pop
inc
cs
xor
sahf
and
adc
outsl
mov
push
roll
outsb
push
mov
xchg
test
into
out
faddl
add
cltd
adcl
aad
xchg
dec
push
cmpsl
xor
xchg
pop
negb
dec
cmp
sbb
xor
repnz
clc
iret
cltd
xchg
loope
imul
xchg
das
jne
add
or
cs
push
mov
dec
fdivrp
cmp
jmp
pop
xor
movsl
testl
xor
cmp
aam
add
dec
dec
sbb
mov
lock
popf
out
loop
push
sub
sub
xchg
pusha
subb
cmpb
out
jb
std
jecxz
adc
aaa
shrb
test
pop
out
mov
mov
xor
push
push
mov
imul
insb
flds
popl
scas
bound
push
cmp
push
xor
cltd
fimull
jae
bound
mov
dec
dec
xor
int3
iret
cmp
test
jge
loop
pusha
fdivrs
lea
jl
loopne
rclb
mwaitx
mov
xchg
mov
xchg
pop
in
call
sub
in
shll
loopne
or
pop
or
jae
stc
push
fmuls
jbe
imul
aam
outsb
jecxz
push
jle
shr
sbb
pop
cli
sti
mov
in
xchg
fsubl
ficompl
pop
decl
adc
mov
dec
mov
add
cmpsl
cmp
push
jne
inc
and
aam
sbb
adc
and
jbe
jb
mov
pop
in
xlat
xor
sub
rorb
mov
adc
mov
cmp
not
mov
lcall
mov
cmp
addr16
in
lods
test
or
int
inc
lock
add
adc
lods
dec
testb
sarb
test
int
fcoms
lret
pop
xorb
cmp
das
ret
scas
dec
cmp
call
sub
sbb
inc
test
xchg
mov
and
push
in
das
xchg
fbstp
fs
xchg
push
jo
xchg
aaa
nop
bound
mov
mov
repnz
cmp
shlb
xor
lcall
jne
fwait
cltd
push
movsl
push
cld
in
jno
cli
fwait
outsl
pop
cs
dec
test
ljmp
pop
push
enter
aad
push
jg
gs
fdivs
out
push
int
clc
mov
leave
mov
aam
push
lsl
xchg
mov
daa
or
add
mov
push
dec
iret
mov
inc
or
dec
aas
and
xor
int3
test
add
xchg
arpl
leave
decb
mov
push
dec
jmp
mov
push
dec
inc
or
in
das
outsb
mov
out
sub
cwtl
lods
pop
mov
xor
dec
imul
ja
or
cmpsl
xor
test
enterw
sbb
insl
mov
cmp
sub
adc
clc
es
lods
sub
inc
lock
sub
mov
mov
out
and
shl
leave
sub
lea
sbb
inc
xor
jae
jbe
sbb
rolb
shrb
popf
lret
push
movsb
enter
cmpsl
popf
enter
data16
push
mov
test
sbb
cs
pop
out
test
dec
jb
push
mov
incl
xchg
add
push
iret
push
cmp
lods
popf
and
cmp
cmc
scas
and
cmovl
addr16
dec
mov
in
daa
xor
pop
lods
ss
and
cmc
dec
mov
stc
add
dec
or
xchg
pop
dec
cltd
mov
dec
sbb
sbb
fwait
xor
cltd
adc
mov
jmp
mov
or
test
outsl
in
ja
ja,pt
outsb
fwait
cmpsb
out
rcll
jnp
shrl
bnd
lods
add
lods
stc
mov
repnz
stos
sti
pop
aas
ret
cmp
inc
out
lods
fsts
inc
adc
push
or
lahf
mov
icebp
popf
fcomi
cmpsl
sbb
lret
xchg
js
and
out
decb
mov
and
in
jne
lcall
mov
push
jnp
lahf
aaa
push
mov
jbe
push
push
inc
add
add
nop
clc
adc
cmp
pop
mov
nop
daa
pop
test
or
repz
pushf
sbb
add
adc
fiadds
fwait
dec
xor
fistpll
dec
int
outsb
dec
adc
cmp
aas
and
cltd
pmulhw
int
add
xchg
push
sub
or
jnp
int3
and
pop
clc
mov
push
xor
mov
fbld
jo
pop
mov
mov
arpl
xor
mov
clc
mov
inc
jno
jbe
sahf
push
dec
pop
jl
movsl
xlat
sub
lock
pushf
scas
in
dec
mov
jne
mov
hlt
rorb
insl
pusha
jbe
stos
adc
repz
sub
inc
int3
dec
imul
clc
mov
mov
add
in
add
lea
hlt
imul
shr
imul
pop
inc
dec
lods
mov
mov
or
and
or
mov
test
je
push
push
jg
sbbl
jp
fidivs
cltd
mov
repz
sbb
push
outsl
lret
dec
pop
or
mov
xchg
cmp
cmpsb
mov
sbb
outsl
ja
in
sub
push
ret
pop
data16
out
xchg
ljmp
xlat
cld
rcrl
lret
dec
dec
rclb
xchg
pop
out
insb
movsb
sahf
imul
push
xchg
out
sub
pop
aad
aaa
cltd
call
jb
andl
sub
repz
aaa
xchg
cwtl
loope
pop
lahf
mov
adc
sub
int
jb
pop
xchg
mov
fwait
in
mov
int
test
or
es
icebp
out
insl
inc
mov
cmp
out
mov
inc
inc
test
mov
or
adc
lods
mov
stos
mov
add
push
jmp
xchg
imul
fisttps
xor
daa
jecxz
fnstenv
repz
in
add
fnstsw
cmp
in
std
aaa
lea
call
xor
loop
sahf
or
xchg
jp
lea
mov
sub
push
aaa
mov
test
cmp
mov
leave
jae
inc
cld
test
mov
iret
jb
push
divl
add
add
fcomps
pop
data16
ret
mov
jb
dec
sub
mov
cmp
cmc
nop
jae
mov
ds
xchg
sbb
dec
sahf
je
push
adc
scas
std
mov
mov
dec
jle
out
sub
loope
and
mov
in
aaa
mov
sbb
push
int
pop
jne
sbb
mov
xchg
jge
clc
jg
or
nop
mov
jo
and
mov
xor
push
or
mov
cmpb
rorb
loope
or
mov
mov
movsb
cmp
lods
sub
adc
out
repnz
adc
dec
fwait
leave
mov
and
popa
mov
cld
xchg
pop
movsl
and
dec
divb
mov
test
xchg
enter
cmpsl
mov
mov
ds
xor
jno
fists
and
lret
loopne
add
fdivrp
mov
jns
scas
mov
fadd
lret
jecxz
pop
and
pop
inc
repz
lods
ret
rcrl
jno
out
mov
cld
pop
test
sbbb
aaa
movsl
lret
cmpsl
out
sub
cwtl
mov
popl
js
jg
inc
jge
into
insl
dec
mov
dec
cmc
mov
popf
adc
add
adc
lret
cmp
cmp
in
into
and
fidivs
mov
pop
mov
aaa
lods
add
adc
cs
test
cli
mov
push
push
lea
icebp
sahf
jg
add
sub
add
lods
ds
cmpsb
dec
sub
pop
jg
and
sub
add
daa
mov
addl
add
flds
jno
pop
arpl
pop
test
test
lret
inc
mov
mov
icebp
or
xor
pop
movsl
mov
sub
mov
mov
scas
ret
xchg
movsl
aam
cmp
xchg
jl
nop
lcall
xchg
shll
and
push
stc
inc
adc
jno
adcl
push
and
lods
fisttpll
movsb
hlt
mov
cld
out
ret
adc
fadds
popf
adc
shlb
mov
in
arpl
cmpsb
fadds
test
mov
sub
lea
mov
repz
pop
fucomp
ret
mov
push
movsl
add
pop
ficoms
push
sarb
aad
lcall
popf
movsb
inc
mov
cld
xchg
rcrl
push
dec
aas
jns
cmc
imul
xlat
add
insl
rorl
push
mov
inc
iret
lahf
shr
adc
xchg
je
pushf
orb
cs
in
out
cmpsb
jbe
sbb
dec
xor
pop
mov
mov
jp
push
fnstcw
hlt
dec
cwtl
jle
fistl
push
cmc
dec
xchg
adc
roll
aas
fs
jno
xor
push
sub
shll
in
fimuls
into
dec
mov
jp
sbb
mov
xor
pop
mov
add
imul
cmp
and
aam
fwait
lds
std
cmp
push
movsl
insl
add
in
add
stc
adc
les
adc
das
mov
addr16
adc
and
mov
pop
sbb
add
mov
mov
lea
in
movsb
sub
pop
or
push
test
mov
ds
les
cli
push
add
aaa
cmp
mov
adc
gs
dec
lret
lds
mov
mov
enter
ret
cli
loope
sti
aam
fisttpll
iret
xlat
pushf
xor
js
notl
lods
dec
out
dec
sahf
xor
jno
fcoml
push
les
cltd
mov
leave
loop
xor
out
pop
daa
add
je
xlat
inc
jae
scas
adc
in
and
jl
sub
add
repz
pushf
or
lods
xor
shrb
fmuls
add
push
in
adc
stc
mov
push
subb
mov
dec
ljmp
daa
or
push
mov
mov
scas
lcall
insb
movsb
sbb
pushf
push
iret
jb
andl
ss
cmp
test
mov
mov
push
push
sub
xor
mov
mov
std
sub
ret
mov
leave
ficomps
sub
mov
mov
jmp
pop
sub
mov
shrb
mov
scas
mov
aad
push
setbe
push
pop
cli
addr16
xor
scas
push
orl
pop
in
es
jl
out
pop
inc
cld
fnsave
pop
and
and
lds
iret
hlt
inc
testb
insb
lea
loop
outsl
lds
jge
xchg
xchg
subl
es
pushf
rcrl
pop
push
addr16
mov
jge
shll
inc
adc
pop
pop
sahf
cmp
cmp
dec
mov
xor
mov
xlat
pop
and
or
sarb
cmp
scas
dec
xchg
nop
adc
out
add
jp
ret
adc
incl
xlat
lret
sub
dec
xor
push
and
mov
test
cmp
inc
loope
test
mov
repz
cmc
inc
inc
push
lds
mov
test
dec
ljmp
sub
lods
or
in
pop
xor
ja
clc
movsb
push
enter
loope
mov
mov
mov
and
mov
xor
out
jl
push
inc
push
jne
aad
inc
pop
icebp
rclb
mov
ret
dec
jo
push
bound
ud2
mov
push
mov
adc
pushf
xchg
lods
jecxz
and
shr
jecxz
sub
inc
mov
push
or
ljmp
into
mov
xchg
sbb
addr16
or
je
outsl
xor
ss
jnp
and
aam
push
das
dec
jb
mov
mov
xchg
inc
fs
mov
inc
das
mov
xchg
or
je
icebp
addr16
lret
repnz
in
mov
imul
mov
mov
jl
repnz
cltd
cmp
jne
pushf
mov
pop
mov
push
mov
pop
pop
pop
loopne
add
jno
pusha
in
mov
insb
and
jb
dec
les
js
rcl
shrb
popf
xor
xorb
push
mov
cmpb
dec
out
push
aaa
sub
mov
loop
mov
hlt
jo
int3
out
das
or
pop
sti
jmp
ljmp
mov
sar
cwtl
jno
dec
jmp
push
jo
movsb
adc
jo
mov
sbb
dec
inc
or
sub
jns
insl
dec
add
jge
mov
inc
rcr
push
pop
cmp
cmp
pop
push
xor
mov
inc
out
cli
push
jb
rolb
hlt
js
mov
pop
out
cltd
dec
xchg
popa
popf
xor
jo
data16
sarl
inc
scas
xchg
lods
sbb
mov
out
jns
sub
popl
daa
jp
adc
fisubrs
fldenv
mov
jmp
cld
add
scas
lea
stc
xchg
sub
bound
cltd
push
cmp
xchg
push
ds
dec
and
add
adc
fst
shlb
icebp
add
ja
int
icebp
jae
cmpl
sbb
sub
jbe
mov
push
repnz
das
push
push
dec
test
ret
fwait
cmpsl
push
lcall
mov
loop
bound
test
aam
jne
add
push
fwait
or
jne
out
pop
push
arpl
jnp
mov
add
pop
sub
sub
outsl
add
inc
cli
mov
mov
call
lock
cltd
popf
in
mov
imull
cmpl
fstpl
and
sbb
je
lea
sbb
movsb
fldl
jne
inc
mov
dec
dec
cmp
jmp
cltd
xchg
enter
not
ficompl
inc
loop
mov
fistl
imul
hlt
jns
add
frstpm(287
sbb
xor
into
xlat
and
adc
mov
or
or
xchg
das
lds
sbb
lcall
in
push
mov
jl
and
ret
popa
mov
mov
adcb
jb
add
ljmp
jne
add
xchg
mov
sub
mov
mov
mov
lcall
int
bound
xlat
call
mov
dec
fs
mov
mov
lea
adc
xchg
mul
fdivrl
or
xor
jp
and
imull
fcoml
popf
cld
push
repnz
and
mov
movsb
in
dec
cmp
arpl
enter
sub
ss
xlat
aam
sub
or
pop
pop
dec
push
adc
jo
mov
jo
sbb
aaa
ljmp
push
repnz
pop
dec
lock
inc
mov
in
jbe
xlat
xor
adc
jmp
mov
pop
into
push
ret
push
xor
int
mov
add
mov
add
xlat
outsb
xor
xchg
mov
dec
adc
movsb
jae
dec
test
push
test
les
arpl
or
adc
xchg
and
idivl
and
cmp
mov
jnp
xchg
mov
ss
rorl
out
les
sub
mov
xchg
int
out
stc
sbb
aam
mov
lcall
lods
mov
fwait
stos
cltd
insl
int
sbb
ret
lea
lock
cmp
xor
jns
xor
lahf
xchg
xor
push
arpl
ljmp
push
push
mov
pop
sti
sbb
dec
xchg
jo
sahf
shlb
sti
lds
adc
jle
jae
mov
push
aam
mov
hlt
and
pusha
xchg
in
mov
gs
and
jne
out
sub
call
je
inc
cld
sbb
pop
fiaddl
addr16
push
enter
sub
push
add
dec
sbb
jp
add
stos
cmp
cmpsl
push
push
inc
insb
jecxz
jnp
lcall
lea
adc
mov
clc
jo
push
rcl
xchg
call
pusha
cmpsl
mov
lret
in
lea
jbe
popf
jb
pop
fiaddl
inc
sub
imul
cmp
cld
xlat
mov
and
addl
xchg
arpl
sub
clc
imul
ret
cmpsb
jp
rorl
pop
mov
inc
cmp
mov
and
daa
repz
xor
outsb
dec
popa
xor
or
mov
pop
lret
cltd
data16
and
adc
mov
xchg
test
jnp
sbb
jecxz
push
cwtl
ret
jns
cld
pop
movsb
ret
push
fiadds
sbb
sbb
pop
aad
in
sti
push
inc
dec
lahf
icebp
jg
add
ror
xchg
outsb
mov
call
repnz
sub
mov
aaa
sub
shlb
out
xchg
mov
ss
in
push
pop
push
addr16
fcoml
js
fsub
dec
xchg
popf
inc
and
adc
ljmp
push
fisubrl
add
testb
jbe
lods
fst
dec
pop
xchg
xor
push
clc
sbb
fidivrs
dec
repnz
add
test
mov
ds
and
rcl
je
dec
nop
stos
sub
daa
mov
fsubr
push
fld
stc
and
orb
dec
mov
out
lret
ret
daa
cmp
daa
aad
ja
lcall
mov
inc
pop
aam
mov
push
cld
sub
rolb
cs
adc
adc
cmp
xlat
and
test
andb
arpl
or
dec
ror
adc
ficoms
inc
daa
mov
fs
mov
and
int
mov
lcall
push
xchg
fiadds
push
movsl
loop
cmp
outsb
dec
sub
jl
add
xchg
ja
loop
sbb
xor
sahf
sbb
stc
mov
call
clc
std
mov
sarl
push
jb
sub
insl
dec
push
add
cmp
jb
and
mov
decb
push
mov
dec
jno
mov
shr
mov
scas
push
xchg
cli
sub
or
movsb
adc
lods
mov
and
xlat
fcmovnb
je
repz
gs
inc
cmp
cmp
insb
sbb
movsl
mov
xor
xchg
or
std
dec
cld
jnp
pop
sub
je
xor
jmp
in
fcoms
sbb
xchg
fimull
mov
and
cmp
outsl
pop
or
xor
test
pushf
xchg
xor
cmpsb
in
inc
dec
xor
clc
pop
mov
sub
js
sbb
jne
sub
inc
pop
shlb
filds
mov
push
push
loopne
cmp
mov
pop
in
imul
call
cmp
cmpsl
enter
inc
lds
loop
mov
icebp
inc
ret
loope
lds
stc
pop
adcl
mov
sbb
xlat
int3
loop
rcl
leave
lods
cmp
jmp
in
pop
lods
xor
mov
cmpsl
or
pop
jnp
sti
mov
or
and
call
sbb
push
dec
cwtl
out
xchg
xchg
andl
mov
loope
push
addb
std
lds
xor
fyl2x
jle
cmp
dec
jb
add
ljmp
ret
cmpsb
xor
xchg
jbe
sub
lcall
adc
add
lcall
jnp
stos
movsb
lcall
pusha
cmp
xor
add
jmp
adc
mov
sbb
mov
pusha
jbe
and
fistl
dec
aas
pop
adc
push
mov
dec
popf
aad
in
cmp
inc
or
leave
test
and
mov
jno
addb
jle
jno
push
arpl
xchg
loop
jno
mov
jecxz
cmpsb
out
xchg
lret
into
stc
flds
jae
mov
xchg
popa
mov
sbb
sub
adcb
loopne
shr
add
stos
insb
mov
jbe
push
enter
pop
addr16
andps
hlt
or
insb
jmp
cmp
out
scas
pop
jne
push
mov
xchg
sub
loopne
aas
jge
and
cmp
repnz
add
mov
popf
jge
xchg
mov
jb
inc
pop
ret
popf
ret
adc
fst
jnp
and
inc
mov
inc
outsl
add
xchg
jo
dec
test
or
add
hlt
scas
xchg
sub
icebp
sub
sbb
pop
sub
and
sub
mov
sbb
addr16
imul
popf
insl
jp
xor
loopne
movsl
sahf
in
scas
xor
in
scas
push
add
imull
mov
pop
test
daa
bound
xor
popf
fdivs
cmpsb
das
mov
cmpb
push
mov
mov
and
in
leave
cwtl
inc
fs
pushf
or
jb
icebp
mov
push
inc
out
and
aam
push
pusha
push
nop
rorl
and
jne
pop
loopne
loopne
add
xchg
pop
nop
xor
dec
or
pusha
cli
inc
push
cmpl
jnp
daa
sub
adc
jo
xchg
ficoms
jmp
add
cmp
andl
stos
movl
aad
in
inc
enter
xchg
ljmp
sti
ds
mov
jo
push
push
aas
ljmp
mov
sbb
into
inc
jg
bound
push
jbe
sysenter
outsl
jae
mov
mov
je
stos
xor
sbb
mov
out
imul
cmc
dec
jge
or
pusha
jl
mov
fs
int
mov
data16
fstp
mov
es
jnp
loopne
sbb
cmpsb
jne,pt
notb
scas
dec
sub
int
bound
ss
mov
shll
loop
jb
outsl
ret
pop
int3
mov
bound
fcoms
or
push
mov
cwtl
pop
push
jo
out
and
dec
cmc
in
mov
jg
call
xchg
ds
xor
out
rcrl
or
sbb
loopne
dec
sbb
adc
jb
addr16
push
jle
push
aas
outsl
notl
mov
sub
dec
mov
dec
into
ret
cs
jge
nop
mov
jmp
cwtl
push
inc
stos
xor
pop
push
movsb
loope
jp
xor
ds
add
jne
out
lahf
inc
sar
xlat
push
push
lcall
test
pop
rorl
cmp
mov
sub
push
rolb
in
adc
jmp
jbe
scas
xor
mov
xchg
fdivr
xor
sbb
mov
hlt
cmp
mov
sbb
push
insl
cld
movsl
mov
iret
sbb
jns
xchg
ds
scas
cmp
sbb
xor
sbb
add
xchg
inc
mov
in
push
sub
push
add
test
mov
fs
imul
push
js
js
xchg
inc
shrb
ret
cmp
jae
and
mov
sbb
add
insl
xchg
mov
push
jnp
or
xor
sbb
jl
dec
fmull
sbb
add
jl
sbb
outsb
adc
sbb
dec
rorb
xchg
addr16
mov
xchg
push
adc
aam
mov
xchg
hlt
inc
cmp
dec
pop
jns
repz
mov
cli
pop
cmp
je
lock
mov
sbb
xorb
adc
mov
jno
insb
push
lea
pop
add
inc
or
js
jnp
clc
inc
jecxz
loop
push
push
sahf
mov
xlat
movsl
aam
dec
loop
gs
sub
jb
int
repz
cli
add
mov
mov
sub
ret
inc
inc
aam
lret
push
shrb
mov
xchg
test
adc
ss
jl
frstor
pop
dec
jge
aam
push
dec
sbb
mov
jb
das
mov
and
enter
imul
mov
lret
subl
jl
pop
lds
sti
dec
cmpsl
jp
dec
and
and
fstpt
notl
movsl
shr
cmc
mov
lods
adc
insl
xchg
aaa
mov
or
push
add
sub
add
adc
aaa
jo
daa
mov
mov
bound
inc
je
test
test
adc
imul
mov
mov
push
mov
cmp
xor
dec
leave
pop
jp
int3
mov
jno,pn
mov
jmp
pop
mov
repnz
mov
push
dec
lds
ds
aad
lock
jb
sbb
jne
nop
adc
mov
adc
and
jo
jnp
xchg
push
and
stos
sti
sub
repnz
aas
pushf
les
push
jl
pushf
sub
inc
xchg
outsl
test
jmp
jns
jecxz
mov
jnp
xlat
inc
mov
cltd
add
rol
adc
mov
mov
cmp
push
dec
pop
das
in
lds
push
sbb
jle
cs
xor
push
mov
stos
outsl
lcall
jb
add
push
leave
aaa
inc
and
xor
inc
dec
mov
testl
out
push
lret
test
shlb
adc
mov
pop
xor
xchg
pop
dec
divl
mov
mov
adc
xchg
fwait
out
std
dec
andl
bound
sub
lcall
lods
mov
fstl
cmp
push
enter
and
movsb
idiv
fisttpl
pusha
add
das
in
mov
stos
pop
imul
rclb
mov
cli
push
test
rolb
jmp
dec
int3
push
nop
add
ljmp
out
mov
pop
jmp
cmp
dec
mov
sub
cwtl
mov
inc
jae
dec
ja
push
popf
add
mov
sbb
jae
jp
mov
fbstp
sbb
push
mov
aas
push
push
test
shlb
std
out
lahf
mov
pop
mov
cs
xor
push
popf
pop
int
dec
mov
or
push
jmp
dec
movsl
adc
imul
shlb
mov
push
repz
shrb
addr16
imul
fwait
adc
subl
jmp
mov
xchg
imul
insl
in
fiadds
add
mov
cltd
lret
sbb
adcl
xchg
sti
xor
cli
adc
mov
cld
push
mov
imul
loope
into
pop
lahf
dec
cmp
out
lea
and
mov
xor
adc
fcomip
rclb
xor
mov
fmuls
push
mov
fadds
dec
cmp
pop
ret
and
dec
clc
jb
fs
jno
es
jno
adc
pop
aad
call
call
sub
mov
lahf
sub
bound
aam
pop
mov
xorl
mov
nop
mov
imull
dec
xchg
shrl
inc
push
mov
mov
pusha
fnstsw
lock
push
ss
sbb
testb
cltd
xchg
leave
negl
adcb
cmpsl
jmp
mov
out
ja
mov
push
daa
lock
sbb
repz
shl
add
dec
jp
lea
fiadds
cltd
popf
inc
fdiv
jmp
lcall
push
mov
cmp
movsl
in
je
sti
insb
sar
inc
cmp
jns
in
pop
jb
daa
ret
or
mov
pop
fs
adc
movsb
mov
mov
cwtl
pushf
inc
sub
mov
sub
fildl
out
adc
push
clc
enter
out
outsb
push
jmp
xor
iret
fadd
xchg
cs
popa
push
add
pop
std
jmp
lods
hlt
movsb
cwtl
jbe
movsb
loope
aam
or
jns
fidivrs
inc
mov
mov
inc
push
in
pop
icebp
fidivrs
mov
push
adc
popa
cmp
dec
jle
mov
add
ds
loope
push
clc
sarl
mov
adc
xchg
adc
push
or
lods
hlt
mov
test
hlt
mov
pop
lock
cmp
insb
inc
lock
adc
inc
lods
adc
cmc
sbb
mov
pushf
pop
std
sahf
in
xor
lcall
push
test
int3
lcall
jnp
loop
mov
jo
dec
push
stos
out
jno
and
repz
push
mov
xchg
fcoml
xchg
pop
mov
mov
mov
jl
ja
nopl
mov
dec
xor
lock
sbb
scas
in
rorl
faddp
loopne
icebp
add
pop
cli
and
fsubs
and
inc
inc
aad
mov
pop
clc
jae
fstl
cmc
stc
fcoml
mov
popa
sub
pop
lahf
mov
dec
notl
test
jge
iret
sub
loopne
imul
fsubs
mov
loope
push
lret
dec
fisubrl
in
adc
mov
nop
inc
lret
add
dec
add
mov
push
mov
adc
pop
fdivr
jns
xchg
jae
mov
sub
lret
fidivs
mov
adc
push
jge
cbtw
in
mov
das
cmpsb
inc
or
mov
jns
sahf
cltd
add
rcrl
dec
push
cld
pop
pop
and
cltd
dec
cli
outsb
mov
in
sub
xor
into
cs
cmp
sub
jmp
pop
adc
and
js
sub
jmp
imul
push
sub
ja
sbb
mov
fwait
sbb
mov
mov
fidivs
cld
or
movsl
shrl
fisttpll
pop
roll
mov
fwait
cltd
or
shrb
cs
inc
fdivs
nop
shll
ret
gs
push
int3
inc
add
push
push
stos
cli
mov
jb
xchg
xchg
or
orl
pavgb
or
jmp
mov
push
stc
xchg
movsb
fs
outsb
mov
push
adcl
incl
xchg
pop
fdivr
data16
pop
ret
inc
and
lret
ret
test
hlt
das
loope
in
clc
xor
roll
popa
stos
pop
jns
pop
je
dec
mov
jae
sarb
mov
lds
clc
add
jg
sbb
sbb
cld
pushf
shl
xor
inc
je
and
sbb
loopne
push
repz
xlat
adc
cmp
mov
pushf
xchg
test
ss
fdiv
int3
adc
xor
or
loopne
and
and
fnstenv
push
pusha
stc
mov
xchg
mov
mov
mov
xchg
jg
vpunpckhwd
mov
jp
cmp
test
ret
loopne
mov
xchg
fstpl
fstp
or
add
clc
jnp
data16
inc
mov
dec
outsl
sbb
pop
sbbb
lods
add
enter
cltd
insb
outsl
movsb
sbb
test
or
cmp
push
int
in
imul
loop
lret
fdivs
mov
inc
popa
xlat
insb
pop
and
push
cs
enter
push
sarb
stos
out
outsb
inc
xchg
ljmp
push
mov
mov
jno
lret
fstpl
inc
dec
xlat
jb
int
mov
jg
cmp
cmc
mov
push
cmpsb
inc
xchg
movsl
add
test
sbb
in
sub
scas
call
leave
fists
inc
xchg
xor
pushf
test
cmp
mov
cli
sbb
dec
cmp
cli
cli
add
decb
aaa
scas
mov
mov
insl
frstor
cs
sub
lods
sub
mov
test
pushf
xor
outsb
mov
sub
jl
ror
add
push
fwait
cmp
data16
loop
mov
xchg
mov
inc
outsl
lret
jecxz
xor
faddl
dec
mov
fmull
push
mov
push
mov
sbb
and
sub
cwtl
mov
jo
pop
and
and
and
xor
cmp
jae
inc
xchg
movsb
dec
repz
sbb
or
rcrb
cmc
lahf
scas
push
cmc
fcoml
xchg
mov
jge
jb
pop
push
sub
dec
sub
cs
jge
scas
mov
dec
jecxz
pop
mov
in
dec
push
inc
std
hlt
imull
lods
mulb
inc
or
add
cmp
lds
inc
cmp
fcoml
cmp
cmp
dec
ret
mov
daa
in
cmpl
mov
cmc
in
sub
cmpsb
fs
subb
xor
jno
pop
setno
xor
dec
test
fisubs
cli
dec
mov
xchg
jno
adc
push
xchg
add
mov
ljmp
mov
daa
add
jle
xchg
sti
loopne
pop
cmp
pop
imul
out
or
xchg
out
inc
mov
xor
lock
jp
adc
subl
xor
sub
and
sub
push
je
imul
out
jno
cld
lods
sbb
rcrb
mov
sub
fstpl
out
and
sar
mov
xchg
mov
popf
add
xor
out
xchg
fcompl
iret
sub
cmp
dec
push
inc
jb
clc
sti
sub
mov
scas
sbbl
lea
fcomip
lds
sub
push
sub
out
mov
lods
pop
popf
sbb
lods
imul
xor
cs
fs
inc
rcrl
clc
adc
sub
and
repz
leave
adc
divb
inc
lcall
lret
outsb
xchg
mov
fsts
xor
inc
push
or
or
xor
jns
das
je
mov
repnz
xor
mov
sbb
and
lret
sub
ss
sub
dec
xchg
adc
cmp
push
js
lock
sbb
or
iret
xchg
mov
scas
xor
mov
lea
hlt
pop
loope
pop
pop
and
shl
lock
mov
je
or
jne
movb
cli
test
add
mov
and
mov
aaa
sbb
sub
xchg
test
out
ja
in
xchg
jne
or
sub
push
rclb
jmp
popf
pop
mov
mov
or
cmp
xor
bound
stos
and
repnz
xchg
mov
or
jle
insb
cmp
push
xorl
jmp
push
sbb
sbb
xlat
and
adc
divl
int
in
xor
repz
les
mov
sahf
data16
xor
arpl
aaa
jnp
out
out
inc
add
into
push
cmc
jecxz
inc
push
test
in
push
fsubrp
ja
cs
adc
sbb
xor
push
popf
out
mov
bound
mov
stos
fadd
aas
adcb
inc
outsb
or
loopne
out
add
mov
push
icebp
ja
fwait
inc
push
enter
or
xor
push
mov
pop
jg
mov
movsb
insl
mov
xchg
notl
sahf
sub
into
not
mov
xchg
add
popa
xor
pop
cmp
and
jg
mov
jnp
outsl
das
fldenv
sti
repnz
pop
aam
xchg
xchg
jmp
testl
and
xor
sbb
ss
fdivl
out
stc
add
mov
and
push
decb
stc
adc
cs
movsl
mov
fwait
jnp
xchg
cmp
mov
aad
mov
negb
inc
inc
stos
mov
lods
lahf
sbb
int
ljmp
test
cltd
jmp
jle
dec
sbb
cmpsb
cmp
sbb
cmp
inc
int3
scas
imul
and
outsb
push
cmpsl
inc
mov
nop
lea
call
or
or
xchg
xlat
aaa
fmuls
les
rorb
mov
inc
push
lahf
sub
cld
add
sub
idivl
dec
cmpb
inc
and
xchg
jo
bound
lcall
add
stos
ja
push
sub
imul
fstps
ffreep
fcoms
lods
das
mov
xchg
rorl
mov
cli
bound
imul
outsl
clc
fcomp
push
jg
imul
xchg
dec
das
cmp
adc
jo
inc
ret
jg
jle
push
pop
leave
loop
fwait
outsb
add
jae
mov
xor
dec
cmp
cmpsl
cmp
adc
clc
incl
cmc
mov
xchg
jae
lods
xchg
loope
inc
in
and
int
and
or
xchg
inc
mov
cmp
cmc
cmp
cwtl
imulb
and
cmp
adc
fnstcw
cmp
insb
push
xchg
insl
in
xlat
lods
cwtl
in
xor
and
pop
stc
sub
lret
in
shrb
sahf
pop
mov
in
sub
bound
sbb
xchg
call
es
sbb
inc
inc
inc
mov
repz
stc
in
call
dec
jns
icebp
in
scas
push
mov
addr16
jb
and
loop
cmp
popf
push
inc
jno
jecxz
loope
lret
xor
sub
mov
test
imul
push
xchg
stc
dec
insl
notl
jns
out
lret
lds
mov
fs
movsb
dec
push
cmp
inc
int3
aam
les
pop
test
daa
dec
inc
add
popl
cmp
addr16
cmpsl
push
jno
lods
roll
add
push
dec
xor
fcomps
inc
inc
icebp
icebp
test
call
jecxz
pop
push
dec
adc
pop
pop
push
pop
gs
or
sbb
ret
test
xchg
inc
fsub
sub
or
adc
jno
sub
leave
pop
or
shll
in
xchg
in
lahf
adc
mov
xor
cmp
and
shr
das
jae
arpl
daa
mov
xlat
in
pop
mov
arpl
orb
test
in
pop
shlb
jnp
cld
jmp
cs
and
lea
outsl
adc
popa
js
pushf
add
mov
stos
aam
repnz
push
jge
add
add
shrb
daa
sti
leave
daa
jbe
lret
xlat
add
fadds
orl
sub
push
out
loope
dec
xchg
jns
xchg
adc
lods
or
fisubrs
gs
adc
push
xchg
mov
rorl
gs
cmpsl
rcr
jne
xchg
push
jl
fists
cwtl
push
xor
scas
lahf
adcl
fcmovne
lret
and
repz
ret
add
popa
and
inc
sahf
xchg
add
mov
sub
adcb
insb
cwtl
jno
mov
push
cs
sub
sub
cmpsl
aas
jne
stc
cmpsl
cmpl
ret
push
cli
dec
jne
add
outsl
out
mov
cmp
neg
aaa
cltd
cmp
out
or
or
repnz
test
lods
mov
sti
mov
xchg
in
lock
inc
js
test
lahf
iret
push
sub
sub
push
cmc
jl
mov
shr
adc
int
and
cmp
popa
ds
out
sbb
mov
and
lret
outsl
mov
mov
into
or
bswap
mov
je
push
fs
negb
insb
daa
insl
popa
cmp
dec
je
mov
dec
lsl
and
mov
daa
sub
xlat
push
cwtl
cltd
and
push
cmc
pop
jmp
cmp
mov
testb
mov
add
dec
movsl
inc
mov
mov
sub
mov
jmp
outsb
or
dec
mulb
mov
xchg
ret
stos
adc
ss
cmp
test
add
mov
in
mov
ret
ljmp
js
push
mov
dec
gs
arpl
dec
pop
inc
nop
sub
xor
mov
ret
pop
jecxz
cs
xchg
add
cmp
fs
pop
adc
sti
add
seta
push
cmpsl
inc
and
dec
aam
pop
shrl
fucomi
scas
repnz
ljmp
inc
adc
push
push
fbld
xor
cmpsb
cmc
adcl
jecxz
popf
xor
jecxz
mov
cmp
mov
and
push
dec
mov
hlt
mov
jmp
sub
pop
loope
sahf
xchg
pop
mov
xchg
scas
pop
out
jbe
int3
sbb
push
shlb
movsb
jmp
xchg
sti
jecxz
sarl
movsl
jle
les
jae
mov
aas
xor
add
pop
fdivrs
mov
xchg
sarb
push
outsl
push
outsl
pop
mov
xchg
sub
int3
in
in
sub
jns
push
mov
sub
sbbb
or
mov
mov
negb
out
or
js
adc
push
pushf
jb
xor
pushf
pop
daa
hlt
jne
mov
aaa
mov
scas
cmc
push
xchg
jmp
fdivrl
sub
and
add
scas
push
leave
mov
cmp
mov
push
lods
int3
mov
mov
aad
out
sahf
adc
xor
pop
mov
xor
push
mov
cmpl
adc
test
push
inc
add
das
test
fcmovnbe
sub
and
sub
mov
fiadds
addr16
dec
adc
inc
jno
sbb
cmp
int3
push
add
lds
int3
loopne
xchg
in
ret
xor
cmc
jo
addr16
push
fs
fwait
jo
cmc
mov
mov
or
ja
stc
xchg
or
stos
xchg
pushf
mov
mov
lret
mov
stos
cmp
xchg
push
push
sub
mov
rorl
fwait
rolb
or
and
xchg
mov
xchg
cmc
cmp
ret
daa
test
or
xor
fmulp
call
out
fcmovnu
jno
push
scas
mov
fadd
loopne
mov
and
jecxz
cld
jge
lcall
rcll
rolb
pop
and
sbb
ret
popa
ss
shl
ror
sub
add
pop
dec
paddb
ljmp
sahf
sbb
xchg
add
mov
out
dec
jnp
push
scas
lds
leave
scas
negl
cmpsl
jg
or
cmpsb
fists
std
pop
in
addr16
fisubs
addr16
in
fdivl
jg
daa
es
lds
mov
outsl
mov
in
fdivrs
test
test
sbb
xchg
notb
mov
push
mov
loop
jp
lods
pause
dec
lahf
jecxz
jp
adc
xchg
shlb
cs
mov
mov
xor
or
adc
lds
mov
or
xchg
push
repnz
test
sub
push
pop
fidivl
xchg
sar
jl
mov
jo
cmpsb
in
fdivs
mov
lret
subl
cmp
in
test
mov
in
decl
enter
push
cmc
fdivrs
pusha
mov
adc
sub
pop
dec
lcall
xlat
cld
in
jnp
sub
es
and
subb
push
push
mov
insb
faddl
pop
xor
pop
adc
jns
jl
jge
jno
adc
adc
fnstenv
fsubrs
mov
xchg
xor
jnp
rclb
std
jbe
pop
dec
add
movsl
ja
stos
fs
movsb
xchg
add
mov
pop
pop
das
jge
mov
jg
stos
fisttps
xor
outsb
add
inc
mov
mov
push
xchg
mov
xchg
mov
das
mov
fisubrl
loope
testb
nop
mov
and
js
ja
fsubl
inc
jge
je
cmovne
xchg
dec
mov
jbe
rcr
cmp
ret
mov
pop
xorl
scas
and
or
js
mov
mov
dec
jo
in
and
or
dec
inc
cld
repz
stos
sub
inc
mov
mov
inc
adc
mov
fiaddl
xlat
movsb
insl
pop
das
xchg
inc
ss
js
and
dec
scas
xchg
jnp
jo
ret
daa
sub
aaa
lock
sti
dec
es
shlb
fisubl
aaa
mov
inc
xor
in
xor
push
adc
and
adc
in
dec
inc
pop
mov
mov
xchg
mov
mov
aas
rcl
repz
sbb
xchg
scas
jl
repnz
cmp
xchg
lods
sbb
imul
or
mov
jno
das
lcall
inc
cld
mov
lock
inc
orl
pop
or
add
cmc
mov
xchg
inc
add
into
mov
sub
pop
xor
add
aaa
stc
push
ret
ret
mov
sahf
sub
mov
push
aad
ljmp
dec
clc
out
test
sbb
push
jecxz
nop
repnz
loopne
dec
fcmovnbe
fstps
xchg
testb
in
mov
sbb
fimuls
fcmovbe
dec
or
mov
aas
es
loopne
data16
lods
addl
xchg
xor
xor
add
jle
bndldx
push
add
cmp
addr16
adc
pop
xor
movsb
sub
outsl
mov
aaa
data16
add
and
fcoms
mov
loop
insb
dec
mov
lods
loop
out
aas
mov
mov
push
in
cmp
sub
pop
push
mov
out
lea
push
jo
stos
insl
jb
fs
mov
adc
out
sarb
xor
or
cld
push
cmp
sub
jp
cmpsl
or
xchg
xor
fists
mov
jbe
xor
sbb
je
nop
cmc
into
adc
sbb
jno
push
lods
out
in
sbb
call
adc
dec
cwtl
and
mov
stc
jl
push
xchg
or
in
dec
loop
xchg
or
push
mov
jns
data16
outsl
xchg
fldl
lret
cmc
inc
lds
push
out
jno
mov
js
jp
les
dec
xlat
cmp
pop
aad
loopne
lret
pop
fisubrs
mov
sahf
out
push
xchg
bound
adcl
pop
shl
nop
jb
and
adc
stc
loop
in
es
js
ror
fmull
xchg
in
sbb
xchg
addr16
lret
rcl
rolb
add
lret
mov
pmullw
xchg
push
mov
sbbb
and
mov
dec
jbe
cwtl
iret
inc
and
sarb
inc
test
sbb
or
or
loop
in
test
int
imul
push
fcmovb
xor
mov
xor
pop
and
imul
pop
jp
fsqrt
inc
stc
push
inc
test
inc
lock
cs
jbe
xchg
push
push
adcb
and
dec
jno
xchg
add
ljmp
xor
xor
repz
xorb
add
leave
jge
jmp
aam
insb
in
divl
lds
pushf
outsl
sub
in
xlat
mov
in
jno
cli
loope
inc
xchg
jp
lods
add
scas
jnp
js
call
test
negb
pusha
xor
lret
scas
push
inc
or
inc
popf
sub
xlat
nop
or
mov
push
in
pop
mov
sarl
outsl
push
cld
jge
js
add
das
jp
ret
ja
lods
pop
jnp
mov
mov
cmp
scas
push
scas
call
push
xchg
repz
mov
pop
dec
xor
push
and
popf
outsb
aad
test
sub
jbe
xchg
or
pop
or
xchg
cltd
flds
movl
mov
or
cld
mov
and
idivl
sub
add
pusha
push
inc
mov
nop
dec
arpl
rorl
not
jnp
repnz
cmp
mov
rcrl
jbe
ds
es
cs
adc
pop
sti
adc
daa
lret
push
or
mov
ja
mov
es
dec
in
jl
sbb
pop
ret
xchg
fldt
addr16
aam
mov
dec
push
jecxz
cs
jge
mov
sbb
cltd
jo
cs
out
sub
or
cmp
rcrb
mov
sub
loop
hlt
pusha
pusha
dec
bswap
jns
mov
cmpsb
repz
push
push
fildll
add
or
inc
lret
insl
sbb
add
cmp
out
int3
jbe
jmp
imul
jl
or
sub
ss
inc
add
shlb
repnz
lcall
shrb
aam
add
jp
sbb
and
xor
sbb
push
jp
and
call
imul
add
mov
dec
lock
push
lret
lret
jbe
in
jb
in
lods
pop
stc
out
rorb
cmc
fimull
cmp
xchg
mov
scas
sbb
push
std
inc
das
mov
enter
cmpsl
jb
push
enter
and
ficoms
subb
pop
jno
xor
pop
mov
cmpsl
sub
jecxz
in
mov
aad
jle
xlat
mov
sub
cltd
or
shll
fildll
call
dec
sub
cmp
cmp
cmp
inc
jmp
sti
xor
xchg
cli
xchg
aas
or
cld
stc
push
sti
adc
mov
ljmp
push
clc
push
xor
fsubl
mov
xor
fs
int3
or
mov
fcomip
push
testl
ss
cmp
decb
jge
xchg
sbb
mov
out
sub
popf
std
notl
fwait
cmpsb
xchg
xchg
pusha
jl
out
loope
dec
dec
dec
jno
pop
ljmp
pop
aam
repz
sbbb
xor
movsl
lret
cmp
add
in
mov
jecxz
fistpll
push
gs
gs
push
stos
addb
pop
and
std
out
sub
mov
scas
sbb
repz
jno
ljmp
aaa
sarl
inc
mov
fwait
mov
ja,pt
dec
rclb
sbb
sub
hlt
sti
out
iret
jge
popf
push
lods
pop
sub
jne
dec
xorl
ret
pop
popf
inc
loope
sbb
mov
pop
mov
addr16
inc
sbb
mov
fldt
xor
ret
and
jp
mov
adc
imul
lods
clc
or
js
jp
jmp
aam
bound
dec
orl
insl
add
mov
mov
clc
inc
call
in
mov
xor
mov
pop
test
stos
ljmp
mov
enter
sub
addr16
sbb
mov
jae
xor
push
adc
notl
and
cs
sub
mov
mov
test
rcr
in
jo
sbb
and
jle
mov
dec
ss
rcrl
arpl
mov
sub
adc
neg
jnp
cmpsb
push
add
adc
stos
or
sbb
sbb
js
clc
mov
mov
push
fcmovnbe
mov
sti
pop
jge
add
dec
icebp
movlps
lea
scas
scas
cld
fcomip
xlat
xchg
lods
mov
scas
pop
lds
xchg
pop
and
mov
dec
jl
ljmp
inc
test
pop
sti
lds
clc
mov
popa
push
fidivs
adc
cs
inc
mov
movsb
xor
adc
decl
mov
in
pop
pop
xchg
mov
inc
inc
pop
data16
cmp
shll
push
mov
data16
jmp
stos
mov
not
add
jns
int
or
xchg
mov
imul
mov
das
jns
mov
iret
mov
std
xor
ficoml
xrelease
in
fwait
jbe
js
jo
lea
insb
mov
jge
adc
inc
dec
jo
rorl
dec
mov
in
inc
push
jecxz
out
inc
add
dec
or
add
jae
js
adc
pop
cmpsl
pop
push
daa
push
fists
mov
ss
cltd
dec
adc
out
pop
add
and
or
outsb
mov
faddl
fst
int3
aaa
add
mov
mov
push
push
outsb
dec
clc
or
sahf
mov
inc
xor
out
lock
dec
stos
jge
or
int3
mov
mov
in
vpsllq
daa
pop
sbb
lods
lods
jne
jp
movl
xchg
mov
popa
dec
out
jge
fiaddl
je
out
lock
pop
sbb
mov
pop
stos
mov
movl
loop
es
imul
jo
xchg
mov
ficomps
fldt
test
hlt
pusha
fwait
dec
fsub
out
xor
or
mov
sbb
pop
and
ja
pop
mov
push
test
lods
mov
sbb
xor
mov
cmpsb
out
dec
jns
iret
rcr
fimull
sbb
sub
dec
sub
fs
or
std
lret
adcb
aad
loope
movsb
mov
mov
lock
lret
sti
hlt
push
lods
adc
sti
jbe
and
fidivs
push
cmp
dec
jne
xor
lret
push
push
dec
dec
fwait
pop
std
push
push
jle
out
out
std
stc
mov
xchg
outsl
mov
or
js
inc
add
mov
mov
or
sahf
lods
ss
fldenv
jbe
cmp
lods
jp
test
jae
mov
jns
sbbb
shlb
iret
jmp
pop
jg
aas
stc
adc
jp
pop
call
mov
sbb
sbb
shll
inc
and
test
jb
and
sub
cmp
std
aaa
lods
xchg
loop
pop
aaa
popl
dec
imul
bound
add
or
cmp
and
sub
pop
out
fbstp
mov
xor
xchg
cmpsb
out
in
push
pop
lcall
rorl
test
push
adc
addr16
ret
push
cmpsl
inc
nop
or
lds
push
in
ss
rcll
add
ret
cmp
imul
insl
enter
loop
divb
cmp
mov
ds
push
sub
xlat
cltd
push
int
pop
pop
jecxz
insl
xchg
mov
cmp
aad
incb
int3
cmpsb
negl
push
mov
mov
mov
mov
sub
mov
loop
dec
out
lock
mov
popf
push
push
nop
ljmp
lss
xchg
push
test
es
mov
cs
add
mov
or
adc
es
out
inc
lcall
xor
pusha
push
mov
or
shrb
pop
cmpsl
mov
xchg
jno
shlb
leave
xchg
aad
ja
push
pop
jne
outsl
adcl
pushf
mul
xchg
outsl
lods
and
jbe
addr16
loopne
push
mov
dec
adc
cmpsb
or
aam
inc
mov
xchg
and
dec
adc
pusha
jae
orl
lds
mov
stos
adc
push
mov
int3
xchg
fstps
mov
cmp
ret
xor
cmc
inc
aas
pop
and
ret
nop
push
cwtl
dec
xchg
addr16
jbe
dec
pop
addr16
xchg
mov
push
scas
mov
ret
mov
nop
jne
rcll
dec
jge
and
mov
inc
dec
loope
imul
jae
pop
dec
inc
add
and
add
fcomps
movsb
pop
lds
mov
shr
xor
push
sbb
or
pop
mov
orb
mov
imull
test
loop
mov
lds
xor
push
outsl
std
inc
mov
pop
das
aaa
jmp
pop
mov
mov
dec
imulb
mov
add
add
add
inc
fld
cmpsb
fdivp
xchg
lock
xor
cmp
shrl
out
cmp
inc
sbb
test
jb
pop
xor
adc
cmp
stc
jmp
sarl
add
xchg
jno
adc
push
pop
pop
xlat
cwtl
jl
in
lock
inc
inc
aaa
xchg
aam
jns
cmpsl
pop
sub
inc
sub
pop
pop
imul
xrelease
pop
adc
clc
inc
rclb
xor
out
stc
mov
mov
aas
popf
lcall
mov
jb
sub
iret
mov
es
aaa
or
les
aam
outsl
leave
jp
call
push
mov
mov
ret
jp
sub
jnp
sahf
dec
and
xor
mov
mov
xchg
inc
repnz
add
lret
adc
inc
mull
lret
aas
cmp
and
ss
xchg
jo
push
or
mov
fnsave
xchg
sysret
xchg
daa
mov
xlat
sbb
fidivs
aaa
fsts
leavew
mov
cmp
das
cltd
and
sti
cwtl
test
and
push
aad
mov
setbe
dec
add
fcmovne
xchg
jo
lcall
lret
jbe
jb
sti
cmpsl
and
mov
inc
in
and
sbb
stos
enter
in
push
movb
cmp
push
inc
jle
pop
xchg
fstl
addr16
insl
xchg
adc
push
xor
add
and
jle
inc
ret
push
aas
sbbb
adc
sub
insb
cmp
sub
inc
inc
test
sbb
pop
push
xor
test
sahf
cmp
movsl
cmp
dec
push
mov
add
pop
or
daa
and
shrb
mov
jg
mov
sti
pusha
out
out
out
push
shll
cs
mov
dec
jae
mov
inc
mov
ret
sbb
sbb
mov
or
je
outsl
sbb
jae
clc
ror
push
dec
daa
jmp
fwait
insb
dec
and
mov
mov
mov
jns
data16
mov
mov
outsl
push
mov
or
lods
mov
js
ds
ss
mov
jb
int
push
and
or
cmc
add
sahf
sub
ds
and
xchg
mov
call
or
outsl
xchg
jo
ret
lea
stos
jmp
push
movsb
and
xchg
dec
loope
aas
push
pmaxub
jne
push
sub
add
push
and
rclb
bound
push
jnp
jg
lods
lret
xchg
mov
int
xchg
lods
push
idivb
adc
das
mov
mulb
aas
xor
mov
outsl
mov
inc
aam
pop
sbbl
loope
and
out
push
iret
or
ds
cmpsb
mov
imul
push
dec
dec
add
inc
cwtl
int
cmp
pop
jge
fnstenv
jbe
and
aaa
mov
mov
adcb
mov
outsl
movsl
scas
add
mov
xchg
dec
or
mov
insl
jmp
xor
sub
add
daa
xchg
outsl
push
lret
mov
insb
jo
ds
mov
icebp
sub
push
sarl
mov
dec
push
push
insb
pop
ror
add
jo
ds
cmpsb
int
aam
mov
lahf
movsb
icebp
jb
scas
jmp
xchg
xor
dec
sub
dec
mov
inc
mov
or
xchg
lods
xchg
js
nop
pop
adc
mov
subl
shl
add
pop
sub
and
stos
sbb
inc
push
icebp
xchg
jp
cmp
pop
xchg
jnp
lcall
nop
xchg
ljmp
pop
sar
xor
jl
fs
xchg
cmp
icebp
push
repz
mov
mov
fmulp
jl
imul
faddp
sbb
das
xor
mov
mov
movsb
xchg
std
das
aaa
mov
jg
notl
test
mov
add
cmp
mov
xchg
or
mov
xor
xchg
sbb
test
mov
mov
in
loopne
adc
das
or
repnz
lock
pop
add
loope
js
lods
push
jmp
fldl2e
cmp
pop
gs
mov
stc
cmp
push
xchg
push
addr16
xchg
mov
xchg
mov
test
sub
xchg
add
cmp
jne
push
in
into
push
icebp
jae
sti
push
xchg
loopne
leave
jecxz
aas
jne
popf
jo
pop
mov
mov
pop
repnz
jno
mov
loope
xchg
xchg
lods
fwait
call
xchg
cld
mov
mov
and
popa
jno
faddl
jne
fcmovb
xor
mov
or
push
add
stos
mov
out
sti
ret
or
out
enter
clc
shl
inc
addr16
xor
xlat
xor
mov
std
lods
stc
push
xor
mov
inc
mov
dec
xchg
in
popa
rcrl
sti
inc
xor
add
dec
fsts
adc
pop
or
imul
imul
push
int3
cs
sub
out
sub
imul
fnstcw
push
lds
mov
or
adc
mov
ljmp
inc
movsl
pop
dec
add
mov
pop
jne
int
div
cltd
sub
repz
jne
mov
cld
inc
mov
adc
pop
sub
xor
mov
push
ret
scas
fs
aad
and
in
call
jmp
lahf
mov
pop
test
in
aam
fsubl
repz
std
dec
imul
call
jmp
movsb
nop
test
sub
cli
add
pop
pop
outsb
push
aam
xchg
jp
lcall
jnp
pop
pop
movsl
sub
lods
and
dec
aaa
stos
mulb
fdivr
enter
xor
pop
inc
imul
adcl
push
cmp
mov
je
sti
insl
clc
sahf
rorb
in
jle
cltd
xchg
and
pop
enter
stos
adc
mov
push
adc
jns
pop
sbb
and
xchg
push
mov
jp
mov
cmp
sub
pusha
arpl
pop
dec
clc
fs
fcmove
dec
cmc
jg
push
and
rcrb
in
push
xchg
adcl
xor
test
add
cmp
sarb
or
xlat
or
fwait
std
and
pop
addb
mov
jg
push
or
mov
fistps
stc
rcrl
jo
rcrb
sbb
stos
and
mov
inc
lock
inc
cmc
imul
or
repnz
xchg
cld
sarb
push
lea
loop
dec
dec
popf
lcall
cmp
je
jno
sbb
mov
or
mov
dec
data16
in
leave
mov
mov
push
cli
aad
sbb
xlat
adc
out
sbb
push
fisubrs
cld
andb
js
push
fwait
cmp
insl
aaa
dec
sub
sbb
xchg
sub
fdivr
aad
les
out
pop
and
lea
lea
and
xor
sbb
jae
push
loop
loop
shr
xor
sub
cli
cmp
mov
and
pop
outsb
xchg
outsb
lahf
icebp
sub
xchg
imul
lds
sub
repz
mov
data16
lods
xor
xchg
jp
scas
jg
clc
nop
fists
pop
fld
mov
test
jl
roll
int
xor
mov
leave
inc
cmp
hlt
int
sub
adc
jae
test
push
es
enter
sub
add
push
into
xor
adc
xchg
nop
push
aam
sarb
fimull
icebp
shl
insb
pop
push
xor
inc
icebp
mov
shlb
push
shl
leave
cmp
in
or
sbb
jo
into
icebp
mov
frstor
mov
lret
sarl
jecxz
aam
xchg
stos
xchg
nop
arpl
pusha
add
jno
loop
push
xor
xchg
jno
add
inc
jecxz
and
inc
mov
mov
xchg
lock
movsl
xor
xor
stos
sbb
fldlg2
mov
ss
pop
imul
push
push
aad
mov
xchg
cmp
xchg
or
mov
pop
rcll
inc
int3
xchg
push
cmpsb
mov
xor
loopne
or
xchg
clc
push
dec
mov
xchg
dec
fildl
daa
jle
outsl
xor
test
xchg
cmp
addb
inc
and
xor
fdivrl
je
jbe
loopne
repz
repnz
mov
add
or
cli
ss
sub
sbb
sbb
adc
andb
dec
jo
icebp
sbb
sbb
pop
push
icebp
mov
fcom
pushf
mov
stos
push
push
cmp
aad
dec
mov
rclb
and
mov
or
jno
ficomps
pop
jp
lock
add
push
mov
int3
xor
mov
leave
dec
jne
test
out
lea
addr16
sbb
js
xor
scas
xchg
outsl
aad
push
push
push
and
jg
mov
incb
fistpl
inc
loop
nop
outsb
testl
mov
rcl
jns
les
sub
mov
xor
dec
add
ljmp
jl
and
scas
add
cmpl
push
lods
push
adc
and
xchg
adc
popa
mov
mov
repz
shll
jnp
pop
mov
daa
xor
lock
sub
cmpsl
push
mov
mov
push
dec
and
cmc
pop
add
add
mov
and
clc
lahf
cmpsb
js
loopne
cs
and
enter
or
mov
je
insb
cli
mov
sub
nop
push
repnz
dec
mov
mov
fisubs
js
xor
add
mov
pop
jp
cmp
mov
clc
hlt
mov
cmp
in
sub
stos
addr16
out
and
lods
hlt
aam
jae
cmp
loop
mov
xchg
and
test
push
adc
fnstsw
mov
xlat
mov
insb
out
sbb
push
scas
cmp
xor
add
in
lahf
and
adc
sub
ss
mov
mov
std
paddusw
xor
pop
mov
add
inc
sbb
xchg
mov
mov
test
imul
scas
push
fistpl
push
sahf
sahf
mov
popf
call
cmc
dec
xchg
cmp
push
mov
rol
arpl
fiaddl
addr16
xchg
add
and
push
or
sub
rcrl
scas
fdivl
and
ret
inc
bnd
cs
cwtl
and
and
aaa
adc
pop
outsb
cmc
cmp
mov
addl
mov
call
push
push
lods
cmp
xchg
add
or
cmp
xor
insl
int3
scas
inc
jp
cmpl
ror
and
inc
add
out
cmp
pusha
mov
jbe
fwait
or
mov
pushf
div
rclb
pop
ds
dec
pop
cmpsb
js
lds
cmp
sub
dec
fcoml
push
mov
sbb
sub
add
sub
xor
cmp
xchg
and
and
test
and
mov
push
push
jl
mov
fists
gs
and
repz
xor
dec
xchg
loop
test
inc
cltd
xor
in
cmc
jecxz
loop
sub
jg
mov
sbb
mov
in
ja
dec
add
jb
ja
sbb
mov
addb
xor
xor
out
ja
add
dec
in
aas
aaa
xchg
xor
pusha
es
push
mov
xchg
cmpsb
sbb
lret
pop
push
adc
xchg
pand
movsb
inc
je
mov
push
jo
fwait
ljmp
orb
stc
stc
mov
jge
push
and
mov
mov
repz
xchg
dec
or
out
ljmp
sbb
in
adc
je
mov
movsl
and
popf
pushl
inc
fildl
push
mov
ljmp
sub
cmpsl
and
or
cwtl
xor
mov
mov
fsubrl
jmp
dec
insl
gs
push
test
outsb
jle
repz
ss
fidivrs
clc
fildll
repz
add
fldenv
cmp
adc
std
outsb
jbe
cmp
push
cmpsl
sbb
bound
xor
cmp
leave
outsb
xchg
cmovnp
fldcw
and
sti
movsb
push
fistpl
adcl
push
in
push
and
out
movb
loop
sub
dec
ljmp
mov
arpl
adc
and
dec
xchg
dec
adc
sbb
sub
nop
mov
shll
jmp
add
out
add
jns
mov
popa
arpl
stc
mov
mov
or
js
call
cmp
gs
sbb
les
std
xchg
sbb
gs
and
jno
xchg
pop
out
mov
dec
add
aad
ja
popa
ret
outsb
mov
sbb
jo
inc
mov
jb
int
das
adc
fsubrl
iret
fsubrp
cld
sub
and
out
fiadds
lahf
mov
jge
lcall
fwait
push
push
or
movsl
lahf
rolb
mov
rcrl
pop
add
ret
jns
cmovbe
push
or
fmull
or
psllq
xor
and
xchg
push
dec
pop
add
xchg
mov
aas
mov
aam
mov
add
jp
mov
lret
lcall
call
aam
fdiv
out
lock
cltd
lock
push
imul
popf
mov
enter
jle
dec
jle
xor
iret
lock
sub
into
add
push
cmpsb
mov
lret
pop
mov
cmp
push
and
leave
push
mov
fucomip
cmpsb
push
jp
cmp
cmp
pop
pop
insb
push
and
cmp
xchg
lods
hlt
not
mov
sub
adc
mov
adcl
fs
pop
test
lock
ja
cmp
hlt
ret
lock
je
repnz
adc
in
push
lcall
lret
arpl
test
ds
cmp
mov
stos
jno
mov
dec
dec
stos
outsb
hlt
or
and
adc
mov
pop
or
aas
lea
jno
sub
lea
jbe
imul
and
jb
mov
aaa
or
pop
push
mov
push
outsl
xor
mov
jle
pusha
and
gs
mov
jo
sub
pusha
mov
sub
inc
mov
rol
pop
add
jmp
in
fcoms
insb
lcall
movsb
cltd
add
push
popf
in
pop
jmp
jecxz
cmp
stos
les
adc
mov
and
xlat
push
jns
push
fistpll
test
mov
mov
sti
cld
dec
mov
sahf
icebp
jne
mov
aad
xor
sbb
jge
sub
inc
addb
xchg
repz
mov
movb
xchg
push
rcrl
rorb
push
pop
in
mov
fwait
xor
in
out
mov
fs
xor
scas
or
dec
or
ret
into
cmc
adc
push
pop
sbb
and
in
testb
aad
xchg
das
jo
daa
and
push
in
push
ds
shl
mov
and
lcall
sub
jp
cmp
inc
lahf
seto
sbb
lcall
mov
leave
aam
sbb
sbb
adc
popf
pop
out
mov
into
xchg
jbe
cmp
in
add
nop
mov
xchg
ss
out
mov
cld
cmp
push
pushf
insb
mov
jb
mov
mov
bound
in
popf
sti
aad
dec
push
cld
filds
inc
sti
icebp
je
adc
and
jle
inc
out
jg
add
mov
ja
cmc
dec
sub
mov
cmp
mov
out
add
xlat
xchg
cs
jge
and
sbb
jle
mov
nop
or
xor
mov
inc
jmp
push
and
lahf
lahf
arpl
pop
ja
bound
jg
push
call
shll
jmp
mov
adc
jnp
add
inc
and
sbb
loopne
addr16
mov
or
dec
pop
mov
add
inc
and
cmp
pop
lock
sub
test
daa
sbb
stos
mov
stc
cmp
aas
sub
or
xchg
sar
or
imul
add
mov
aaa
push
cmpsl
push
jo
fstl
push
push
mov
mov
push
mov
mov
leave
mov
cmpsb
push
pop
mov
paddsb
test
mov
test
jge
pushf
mov
sbb
stc
out
in
mov
push
in
jb
inc
pop
ja
faddl
mov
xchg
sub
fs
jns
push
fdivl
mov
sbb
push
push
insb
mov
loopne
jmp
xor
flds
jbe
mov
mov
xor
push
dec
mov
cmc
cmp
adc
jae
lret
pop
test
or
fdivs
ror
sbb
xor
les
idivb
rcr
inc
jae
shlb
xor
mov
sbb
test
addr16
dec
test
repnz
add
add
jl
add
xor
insl
mov
mov
jge
inc
mov
sub
shl
movsb
inc
jne
lds
push
and
sbb
xor
add
push
xor
popf
dec
js
and
icebp
imul
repnz
iret
sbb
xor
add
fidivrs
icebp
inc
jnp
inc
repnz
popf
test
inc
andl
shlb
loop
jmp
adc
cmp
out
add
stc
mov
std
cmpsl
aaa
adc
mov
push
sub
or
loop
pop
xchg
mov
jecxz
out
mov
icebp
mov
cwtl
cmp
push
leave
push
pop
test
sbb
jno
jne
mov
add
aam
rol
adc
xchg
or
cmc
aas
xlat
and
mov
xor
das
jns
pop
dec
sarb
mov
push
mov
jbe
daa
add
rorb
out
cli
std
sub
mov
mov
sub
stc
js
cmp
mov
aaa
stos
xchg
fisubs
bound
jbe
dec
push
faddl
mov
bound
jecxz,pn
mov
dec
jecxz
in
add
pop
add
and
mov
and
jo
and
cltd
aaa
loop
mulb
jno
sarl
sub
outsb
jmp
adc
xor
adc
out
fdivrl
push
mov
push
sub
std
xor
js
in
icebp
pop
arpl
insb
add
mov
sub
int3
and
xor
pop
xchg
je
xor
into
jge
mov
lea
push
xchg
mov
push
rcrb
push
xchg
jbe
fisubrs
push
add
dec
mov
flds
mov
jnp
inc
leave
dec
out
push
cwtl
jnp
push
aaa
dec
and
or
jnp
push
scas
lods
mov
dec
add
mov
adc
push
mov
push
inc
testl
test
adcb
inc
daa
add
pop
jge
mov
lock
outsl
into
pop
jl
mov
jno
xor
das
push
mov
stos
jl
mov
call
sbb
push
or
or
mov
je
or
mov
lea
jbe
and
adc
iret
loop,pn
mov
pop
and
lods
sub
mov
fsubrs
mov
push
jae
dec
into
pop
xchg
jle
jge
fbstp
pop
cmc
mov
mov
mov
jmp
scas
cltd
mov
es
js
cmp
lock
adc
or
out
or
add
ljmp
fbld
xor
push
inc
shlb
fcomps
mov
fimuls
sbb
shll
sbb
out
pop
imul
lock
push
or
lret
mov
cmpsb
stc
inc
and
jns
or
outsl
repnz
inc
adc
push
cmp
leave
dec
and
cmp
aam
mov
push
xchg
subl
fisttps
mov
aam
lods
std
push
mov
sbb
sub
sbb
stc
mov
xor
xor
mov
jbe
adc
adc
sub
enter
std
out
adc
je
and
in
sub
push
mov
fcompl
mov
les
jns
adc
sub
cmp
pop
ja
mov
inc
jns
lret
leave
sbb
xchg
mov
fiaddl
inc
xchg
orb
adc
lcall
test
test
or
scas
add
jmp
mov
lock
ljmp
dec
jge
push
jecxz
cmpsl
or
adcb
mov
lahf
insb
inc
push
orl
cmp
mov
mov
mov
jnp
jge
push
adc
or
adc
mov
lock
rorb
or
sbb
ret
in
sbb
daa
sub
fbstp
fwait
in
dec
les
fcmovb
pushf
pop
scas
imul
pop
lock
push
int3
xorl
call
mov
xor
sub
aad
repnz
xchg
mov
jge
sub
cmp
jo
into
or
dec
jns
outsb
xchg
push
pop
jmp
add
dec
sub
jl
out
add
pusha
imul
inc
add
pusha
rcrl
or
das
lods
nop
cwtl
lret
fcomps
cmp
mov
sarb
insl
jb
mov
push
das
xchg
or
inc
int
mov
jnp
shl
or
sbb
stos
loope
mov
fcmovnu
pushf
insb
adc
mov
mov
xchg
jecxz
xor
dec
add
cli
data16
push
cmc
mov
mov
xchg
pop
push
stos
push
xor
or
je
scas
inc
adc
sbb
mov
or
movsl
sahf
dec
icebp
push
jae
arpl
cwtl
push
adc
or
es
push
inc
add
nop
ss
adc
xchg
push
xor
ds
pop
lcall
test
aas
leave
in
xchg
adc
cmpsb
loopne
jno
xchg
shrb
jle
adc
test
out
leave
or
retw
out
into
sbb
inc
fiaddl
pop
fcmove
stos
inc
int3
or
xor
aaa
adc
pop
repz
sub
jmp
ds
cltd
out
pushf
mov
mov
repz
jnp
loope
pusha
out
xor
push
inc
pop
mov
cmpsl
scas
imul
or
in
idivl
push
add
movb
mov
pop
jno
fwait
inc
adc
in
or
sti
inc
rcll
dec
leave
ljmp
nop
push
mov
imul
out
dec
mov
push
andl
and
mov
mov
addr16
gs
scas
call
adc
xchg
jne
orb
daa
xchg
adcl
and
sub
adc
cmpsb
cmpsb
inc
fdivrs
rcrl
stos
xchg
xor
out
or
cmpsb
xor
pop
js
xor
sub
push
mov
sbb
test
xchg
rclb
pop
je
stos
lods
mov
scas
inc
cmp
adc
pop
push
int
jbe
enter
and
js
ret
jp
xchg
xor
mov
push
lahf
mov
lret
push
sub
rcrl
fs
xchg
or
pop
lods
cmp
test
sub
pop
sub
jnp
add
jp
push
arpl
data16
outsl
add
leave
pop
int
icebp
loopne
mov
popf
cmp
scas
mov
fldl
xor
ljmp
fs
imul
dec
mov
adc
repz
mov
bound
iret
push
push
sub
sub
adc
lahf
pop
negl
pushf
notb
xchg
and
jle
shl
es
addb
out
imul
jmp
push
mov
xchg
mov
repnz
add
sub
mov
inc
sub
stos
cs
dec
dec
mov
addr16
sar
jecxz
mov
push
int3
cmp
mov
xor
outsl
jp
add
push
stos
jo
sbb
scas
xchg
std
dec
lahf
lock
mov
mov
xchg
xor
pop
mov
movsb
and
or
out
or
xchg
sub
cmp
into
cmp
in
dec
lock
shl
mov
jl
aad
xchg
rcl
cmp
jb
arpl
push
es
sbb
cli
fiaddl
add
insl
arpl
mov
push
xchg
mov
aam
xchg
xchg
mov
outsl
jae
sub
sub
out
bound
lea
cmp
jo
push
pop
loope
into
outsb
inc
inc
xor
jecxz
jbe
pop
repnz
rclb
ds
adc
mov
cmpsl
je
lods
shll
mull
xor
xchg
lret
imul
sbb
mov
sub
push
xchg
jno
clc
shrl
pop
jg
mov
jecxz
icebp
in
add
push
mull
mov
jo
mov
sbb
mov
in
stos
and
movsl
inc
pop
ljmp
movsb
rorb
cmpsb
lea
ds
or
sarl
mov
adc
ret
fidivs
or
flds
and
cmc
fidivrs
inc
sbb
jmp
das
push
test
add
cmp
movsb
lahf
jo
dec
add
inc
dec
cmpsl
and
dec
test
and
mov
push
dec
cmp
dec
mov
int3
jb
dec
cmp
rclb
stos
sbb
mov
mov
arpl
xor
out
daa
rcr
cmp
dec
imul
jno
insb
es
daa
jl
xchg
mov
test
iret
sbb
lods
push
repnz
popf
jg
nop
ljmp
and
fwait
vcvtss2si
lahf
dec
in
popf
outsb
jns
jmp
mov
aas
mov
pop
pop
jge
clc
mov
ss
ret
xor
jbe
in
add
jo
popa
outsb
jne
into
test
mov
jmp
mov
sahf
nop
jmp
and
ret
sbb
jne
rol
sbb
push
jnp
add
inc
shrb
inc
mov
mov
adcb
or
repnz
push
pop
es
pop
imul
sub
or
testb
jno
and
jo
or
dec
pop
clc
scas
aas
scas
jne
mov
and
cmp
sbb
push
jno
popf
mov
sub
jp
and
fdivl
fwait
xor
push
test
add
sahf
clc
scas
mov
fwait
cs
shlb
iret
fiadds
cmp
inc
pop
pop
mov
dec
sbb
std
int3
enter
and
adc
mov
mov
cmp
sbb
shr
mov
jo
jnp
pop
fiaddl
nop
adc
into
adc
ret
mov
mov
insb
push
lcall
mov
je
ljmp
popf
ds
mov
cld
shlb
dec
inc
fnstcw
push
adc
jp
xchg
jmp
mov
sbb
popa
mov
je
shr
aam
jae
rcrb
cmc
mov
cmp
iret
dec
inc
add
push
adc
test
xchg
push
mov
rcl
mov
dec
mov
pop
in
inc
or
push
mov
and
dec
mov
xlat
inc
es
mov
nop
dec
sub
outsb
sbb
xor
pop
rcl
jle
push
push
cmp
xor
imul
inc
cmp
sub
ret
adc
dec
sbb
inc
pop
repz
mov
push
dec
fwait
lret
jnp
xchg
cld
stc
cmc
xor
cltd
stos
mov
hlt
test
add
imul
xor
jp
pop
pop
repz
int
iret
out
mov
dec
pop
stos
xor
rorb
xchg
mov
pop
sbb
inc
push
jle
in
and
aas
cld
or
nop
test
and
cmp
pop
ljmp
or
push
mov
mov
sub
lret
mov
add
clc
aaa
imul
imul
call
add
xchg
xchg
xchg
pop
sbb
sub
jg
lret
nop
sbb
lret
repz
loopne
sbb
cmp
movsb
cmp
mov
jae
subl
es
jl
fs
cli
cltd
loope
xorb
pop
pop
mov
rorb
cmp
sbb
lds
xchg
cmp
sub
dec
fildll
adc
push
mov
fmuls
aam
sbb
insb
xor
aaa
jnp
xor
inc
jl
pop
jecxz
xor
mov
push
popa
jns
and
xor
and
sti
mov
inc
iret
cli
inc
dec
pop
jg
fisubrl
pusha
push
lahf
nop
pop
cld
fcomp
ja
fisttpll
xorb
inc
xchg
je
mov
test
mov
aad
mov
pop
cmp
adc
mov
mov
cld
add
mov
dec
dec
ret
mov
push
ficomps
jo
jno
add
fwait
mov
and
mov
enter
mov
sbb
xchg
popf
pop
add
mov
mov
ljmp
mov
hlt
mov
aad
adc
and
mov
xchg
call
shrb
push
inc
adc
dec
icebp
in
mov
or
cmc
test
orl
jae
mov
pop
fisttpl
addl
aad
lock
lret
add
lds
or
shll
pop
and
mov
dec
popf
sub
jecxz
outsb
push
xor
dec
js
std
and
jmp
xchg
loope
cld
call
mov
cmp
mov
test
cvttps2pi
int3
jno
jnp
jl
les
sub
xchg
add
stos
subl
and
xorl
push
or
ret
aas
loopne
mov
testl
jne
mov
pop
adc
stos
ljmp
mov
xor
adc
inc
cmp
and
xor
xor
or
sbb
ds
and
sbb
mov
inc
out
mov
mov
push
push
lahf
mov
out
rorl
mov
out
dec
mov
jno
add
rcl
mov
jmp
lods
push
pop
cld
and
es
mov
cltd
js
or
cmp
dec
arpl
hlt
xchg
mov
ss
in
pop
xchg
cltd
iret
in
into
imul
test
int3
imul
les
mov
repz
dec
mov
cmp
sbb
data16
fnsave
cld
mov
cmp
jb
mov
xor
mov
ljmp
stc
push
mov
mov
mov
pushw
and
sbb
bound
imul
pushf
lds
das
mov
push
in
jns
lds
mov
movsl
icebp
pop
sbb
add
push
outsb
or
jbe
loop
xchg
jmp
sbb
and
std
sahf
or
cmp
mov
push
xchg
mov
clc
dec
jle
int
push
test
and
in
lcall
call
lret
sahf
mov
sti
inc
jecxz
fdivrs
push
imul
fstp
repz
and
adc
subl
test
aas
std
mov
push
lar
adc
xchg
sub
cmp
flds
mov
sahf
pop
sbb
ret
and
or
in
test
pop
fistps
mov
sarl
std
cli
pop
mov
popf
xor
std
push
rorl
popa
into
pop
gs
jbe
dec
mov
jge
repz
inc
cmp
fwait
popf
jne
fimuls
les
cltd
mov
mull
jl
mov
push
sub
push
sbb
mov
push
scas
xlat
mov
popa
cld
in
lret
push
dec
out
mov
jg
mov
xchg
add
mov
push
arpl
xchg
test
jle
sbbl
sub
or
divb
insl
push
and
in
xchg
es
popf
xchg
outsb
cmp
push
dec
push
icebp
pusha
dec
mov
les
sub
xchg
cmp
fldenv
adc
negl
lret
fisubrs
push
jne
mov
in
mov
dec
std
dec
jae
hlt
scas
push
inc
loope
and
push
lahf
iret
call
mov
or
mov
rcll
cmp
cmp
push
out
xor
mov
xor
xchg
nop
stc
mov
scas
mov
mov
int3
cmp
xlat
inc
cwtl
xor
daa
push
mov
in
or
adc
mov
dec
ds
popa
pop
lds
sub
daa
xor
inc
cmc
mov
subb
jle
lock
push
shll
in
insl
push
imul
lret
or
gs
sbb
mov
ret
inc
push
lcall
cmp
cmp
inc
jno
push
or
sti
sbb
loop
popa
sub
add
adc
das
mov
bound
push
bswap
sbb
sub
push
adc
add
int3
das
stos
mov
mov
mov
pop
adcb
mov
jmp
cmc
clc
mov
inc
loop
shll
xorb
jp
mov
in
pop
nop
cmpsl
add
test
rorb
scas
mov
shll
ret
fucomi
xchg
sti
mov
push
xchg
mov
or
push
xor
pop
ja
xchg
mov
sub
xchg
scas
adc
add
outsl
jnp
fstpt
icebp
or
xchg
or
and
rolb
es
iret
jg
xor
outsl
jecxz
test
xor
add
in
int3
les
push
or
in
mov
sub
xor
jae
dec
test
divps
stos
pop
lea
mov
cltd
dec
dec
cld
pop
sub
iret
fwait
mov
mov
addr16
push
cs
neg
test
inc
mov
pop
stos
repnz
cli
xchg
jp
dec
sub
pop
pop
std
mov
aas
lods
lcall
jae
cmp
rolb
mov
mov
lock
testl
rcll
lea
add
dec
mov
mov
outsb
push
xor
jmp
loope
jns
mov
outsb
push
inc
jmp
movsb
fs
dec
and
mov
mov
and
insb
push
cmp
xlat
sub
pop
or
or
lds
pop
mov
add
sahf
call
sub
stc
aam
in
gs
cmpsl
mov
sbb
jae
pop
add
mov
or
cli
xor
fstpl
xor
cmpsl
and
inc
inc
les
sub
jg
sti
jg
rorb
mov
inc
inc
loop,pn
jb
dec
or
outsb
adcl
subb
add
and
mov
push
pushf
push
mov
xchg
mov
mov
xor
fsubp
mov
mov
pop
stos
stos
cmp
mov
pop
nop
lock
sahf
leave
stos
fstpt
and
cltd
xchg
mov
stos
xchg
mov
cmp
or
mov
enter
sahf
loope
jmp
mov
out
push
push
mov
shl
int
sub
push
xor
andb
jmp
pop
sub
pop
negl
jns
lret
pop
inc
fdivs
fisttps
mov
ljmp
leave
jno
mov
mov
fiadds
fstp
xchg
stc
and
ret
mov
mov
out
test
jnp
shrb
out
call
negl
and
pop
cwtl
dec
jne
movsl
mov
stc
inc
mov
js
out
rcll
scas
in
pop
rolb
je
mov
pop
xchg
popf
test
push
adc
mov
adc
or
sub
dec
shr
inc
push
jl
jbe
push
cmp
dec
sbb
mov
test
push
mov
cmp
mov
jecxz
mov
out
shrl
inc
lret
jmp
stos
or
iret
or
mov
and
and
hlt
fsts
and
cmp
test
add
xor
sahf
add
xlat
imul
jb
mov
sbb
jge
cmpsb
lods
mov
daa
in
stos
in
inc
dec
ja
shll
ss
jbe
inc
fists
inc
push
mov
lods
cmp
dec
fwait
mov
sbb
cmpsb
dec
cli
push
mov
xchg
sub
lcall
les
jp
dec
jo,pt
out
loope
je
hlt
mov
dec
fadd
sbb
lods
sub
xchg
or
adc
mov
icebp
and
mov
adc
loope
pand
and
adc
ret
push
movsl
lcall
out
shlb
in
xorb
out
rcrb
push
stos
jae
iret
and
inc
sub
js
and
js
mov
mov
adc
lock
insb
push
stc
loope
cmp
ret
sub
mov
scas
lret
xor
test
push
pop
xor
scas
and
ljmp
stc
push
xchg
into
lea
jnp
push
pop
push
cld
xor
push
mov
lcall
sti
cwtl
shll
jno
mov
mov
dec
inc
mov
pusha
mov
imul
push
and
je
mov
sub
mul
fwait
sub
pop
hlt
mov
dec
subb
mov
sbb
mov
inc
lods
lret
dec
mov
mov
int
adc
data16
mov
cmp
daa
shll
in
iret
fnstsw
mov
scas
sbb
and
test
mov
jb
rcrl
xor
push
add
mov
jae
mov
nop
addr16
mov
jbe
sti
ret
dec
popf
push
into
fucomi
push
shl
dec
outsb
in
mov
xchg
notl
nop
movsb
cwtl
cmc
mov
das
inc
jecxz
test
gs
inc
dec
outsl
lret
adc
gs
cmp
mov
sbb
pop
add
mov
dec
std
inc
imul
in
dec
xlat
into
inc
pop
insl
outsb
jmp
leave
in
clc
nop
xor
jle
xor
mov
lock
pop
xchg
fdiv
cmp
jnp
leave
mov
jmp
jg
mov
mov
xchg
xchg
stc
dec
sbb
xchg
xchg
data16
sbb
sub
dec
je
shrb
pop
movsb
clc
lds
shlb
andl
imul
push
es
and
jl
mov
repz
jnp
jp
jge
sub
fs
jecxz,pn
loop
insb
movsb
test
add
mov
or
and
or
movsl
bswap
add
clc
orb
fdivp
into
inc
je,pt
or
fsubrs
sub
xchg
js
cmp
loopne
imul
mov
push
arpl
outsb
leave
fstpl
xlat
lahf
adc
ret
adcl
xchg
add
lock
xor
pusha
insl
jmp
or
in
jp
mov
lahf
add
push
mov
pop
std
call
adc
pop
mov
cmc
jp
mov
rol
sub
mul
or
cmp
jecxz
push
cmp
cmp
ja
nop
lcall
mov
or
test
inc
xlat
sub
inc
data16
mov
xchg
push
je
flds
push
cli
outsl
ds
mov
ret
insb
fld
add
xor
nop
std
jmp
dec
push
sub
test
push
jnp
test
add
jp
jmp
ret
subl
enter
loop
xchg
pop
daa
add
notl
jmp
jge
call
loop
imul
jno
sbb
jecxz
adc
icebp
insb
mov
mov
xchg
adc
gs
sub
cs
jbe
cwtl
repz
fildll
mov
test
xchg
test
xchg
dec
mov
movsl
in
mov
dec
inc
inc
mov
aam
aam
mov
fldl
and
sarl
icebp
sbb
xchg
decl
adc
and
mov
add
push
ljmp
mov
push
pop
imul
pop
loopne
arpl
cmpsl
mov
push
scas
aad
in
daa
or
or
pop
sbb
sub
ficoml
pop
dec
mov
dec
mov
jnp
fsubs
fidivl
loopne
mov
dec
lods
dec
ss
cmp
pop
dec
das
cmpsb
inc
popf
mov
or
dec
pop
sbb
out
add
push
pop
pop
or
mov
xor
push
loopne
icebp
mov
push
insb
shrl
pop
adc
mov
inc
mov
decb
es
jo
testl
mov
lahf
es
inc
push
and
rclb
dec
jge
fistps
sub
ja
out
xchg
nop
andb
lret
pop
loop
movsb
lds
dec
sbbb
pop
adc
test
mov
adc
imul
cli
inc
xchg
lods
or
mov
insb
push
jnp
jecxz
rcll
xchg
cmp
mov
decb
addr16
sbb
cmp
mov
std
das
ret
adc
aaa
mov
jg
pop
push
outsl
mov
aas
cltd
cmpsl
iret
xlat
push
lcall
sbb
ljmpw
icebp
and
aaa
push
test
das
mov
jnp
inc
cmp
add
ret
or
inc
mov
sahf
sub
fisubrs
fs
xor
loope
in
push
xchg
jnp
inc
js
pop
jo
add
add
ret
sti
jne
imul
std
ss
cmp
shll
mov
mov
lgs
mov
nop
or
or
cwtl
outsl
or
stc
lret
out
movsl
cmp
and
pushf
outsl
add
push
push
repz
sbb
push
pusha
lret
mov
adc
fiadds
mov
xor
jmp
stc
test
sub
push
sbb
mov
pop
repnz
xor
jl
int3
imul
cmp
into
xchg
stos
or
repnz
hlt
and
pop
lcall
imul
call
dec
push
mov
gs
adc
mov
enter
out
cmp
mov
cmp
daa
bound
mov
insl
inc
or
icebp
fsubrs
rolb
pop
lret
addr16
mov
sti
mov
jns
push
and
je
test
ja
decb
in
inc
movsb
dec
xor
imul
push
jo
mov
mov
lahf
mov
xor
push
cmp
jae
xlat
cmp
stos
inc
cmp
or
daa
mov
lds
mov
rcll
loopne
inc
into
dec
mov
push
stos
pop
add
xor
jge
pop
push
pop
mov
inc
lds
mov
mov
xchg
jae
sarb
sbb
arpl
sub
ja
mov
xor
xchg
inc
je
xor
sbb
out
pop
xor
in
mov
in
mov
inc
mov
scas
jl
inc
xchg
xchg
rclb
lock
or
loop
jno
mov
inc
dec
imul
and
sahf
jo
cmp
mov
xchg
out
fiaddl
xor
ja
cmpb
xchg
into
dec
cs
or
pop
stos
or
mov
outsl
or
push
jns
mov
pop
stos
mov
gs
std
mov
inc
mov
addr16
loopew
fbld
xchg
movsl
sbb
mov
out
daa
add
lods
out
xor
cmp
out
mov
loopne
lret
or
into
cmp
cld
ret
rcl
popa
cli
lahf
dec
xor
or
stos
popa
jns
cmc
daa
mov
call
leave
and
je
adc
iret
jb
aad
xchg
cmp
xchg
push
imul
int3
inc
xlat
mov
pop
insb
or
ss
sti
jg
or
push
mov
adc
lcall
xorl
sub
test
pop
jecxz
or
jne
inc
pop
in
fidivl
imul
aas
ljmp
ror
sub
iret
into
jnp
lods
cwtl
loopne,pn
gs
or
mov
mov
pop
in
push
jp
xchg
nop
lret
in
push
mov
xchg
das
insl
xor
mov
ret
add
sub
je
pop
cltd
in
cld
dec
shlb
or
pop
push
xchg
into
pop
fdivl
pop
add
inc
mov
add
pop
pusha
push
xchg
or
cltd
jbe
mov
andl
cs
in
les
sbb
hlt
ljmp
lret
inc
push
cmpsb
sub
pushf
daa
xor
jge
je
push
fistps
enter
sub
jo
leave
xor
pop
dec
clc
mov
das
mov
inc
fidivrl
test
mov
inc
js
lcall
and
sbb
push
stos
cs
jmp
ret
insl
cmp
fstl
fnstsw
iret
loopne
push
cmp
cs
mov
mov
mov
into
or
stos
or
jne
mov
xor
sahf
pushf
fcmovb
hlt
insb
insb
adc
subb
outsl
cmp
sub
push
cld
test
pusha
xchg
jle
cmc
insl
ror
lahf
pop
out
call
insl
rorl
clc
push
aad
or
mov
dec
add
in
xchg
mov
pop
inc
mov
and
push
ret
inc
jae
mov
lahf
dec
adc
clc
lret
mov
xchg
push
xor
mov
and
stos
call
xchg
cmpsb
es
jecxz
rorb
repz
pop
scas
gs
xchg
xor
dec
jbe
jl
xor
xchg
sub
inc
push
mov
dec
clc
ror
imul
push
push
adc
int
addb
out
xor
mov
sub
pop
mov
cmpsb
fsubs
sub
fsubrl
dec
jb
andl
cld
jb
or
mov
inc
lods
fsubrl
testb
std
std
in
lea
jecxz
repnz
sub
inc
les
rorl
cld
clc
pop
dec
dec
pop
dec
pusha
imul
sub
sub
and
dec
outsb
lea
sbb
adcb
shlb
mov
loopne
cltd
out
insb
scas
mov
sahf
push
iret
cmp
mov
mov
dec
and
add
test
in
loop
mov
bound
dec
add
sub
leave
leave
das
divl
sbb
push
rol
cmc
or
cmp
cmp
in
into
jnp
xlat
arpl
jg
jno
lret
and
xor
adcb
call
std
fsubl
xchg
mov
pop
loopne
or
int
push
xchg
loopne
popa
mov
ljmp
mov
add
jmp
pop
or
adc
sbb
mulb
aam
cs
push
sbb
rcrl
out
push
add
xchg
jge
cltd
add
cmp
cwtl
xchg
pop
aam
jo
das
add
cld
ret
jb
in
and
mov
xchg
push
mov
in
js
mov
push
push
fadd
push
mov
inc
xchg
sbb
pop
xchg
mov
inc
add
icebp
shlb
cmc
pop
cmp
ss
mov
jne
ljmp
xchg
jo
xlat
adc
sub
rorl
repnz
jbe
push
cmp
out
xlat
or
push
inc
and
ret
pop
or
mov
mov
xchg
mov
sahf
push
xor
int3
imulb
sahf
dec
or
in
xchg
mov
cld
jg
out
cmp
dec
sbb
sbb
mov
mov
push
test
add
push
add
aam
jg
and
lahf
push
fistl
pop
adc
xchg
and
je
repz
pop
addl
fisttps
cmp
enter
outsb
push
pop
lods
cld
mov
xor
cld
sti
pop
shll
cmp
push
pop
filds
sub
mov
and
push
int3
xchg
add
into
pushf
inc
mov
xor
test
or
jl
mov
jb
mov
sub
bound
cmp
and
jecxz
xchg
inc
stos
xor
int
pop
add
lahf
out
mov
lret
xor
jo
and
pop
insb
icebp
popf
aam
pushf
push
push
add
ljmp
addr16
cmc
cmp
xchg
out
fcomps
rcll
lea
js
cli
adc
aas
in
iret
xchg
mov
mov
mov
cltd
pop
clc
es
xchg
fwait
add
addr16
add
push
pop
xor
xchg
push
jne
push
cmp
int
sbb
mov
push
or
and
xorb
inc
lahf
lods
inc
cmpsl
mov
inc
and
fisubs
push
scas
sub
cs
cs
nop
xchg
stc
pushl
sahf
jo
cmp
ljmp
fsubrl
in
inc
inc
dec
xor
xor
dec
mov
or
int
xor
sub
test
std
scas
js
pcmpeqw
xlat
inc
popa
xchg
or
lods
js
cli
test
loopne
cmp
xchg
icebp
in
fdivrs
mov
shrd
mov
aam
cmpsb
inc
out
shlb
enter
stos
inc
lods
mov
sbb
mov
push
lret
inc
xchg
lds
xor
notl
psubb
mov
sub
xor
push
call
aas
cltd
push
inc
mov
das
sbb
clc
stos
fnstenv
pop
mov
idivl
xchg
stos
iret
flds
incl
pop
mov
rcrb
inc
adc
call
adc
xchg
inc
pop
into
inc
lret
out
add
adc
xor
push
xor
pop
or
xor
and
adc
outsb
xchg
clc
daa
fstl
mov
push
fsubs
lods
int3
mov
mov
jo
sub
pushf
add
das
and
ljmp
jae
mov
mov
adc
and
int3
cld
mov
sbb
jl
aas
jns
add
dec
inc
scas
dec
and
in
imul
in
mov
roll
fwait
pop
adc
into
lahf
jno
mov
cwtl
fildll
jg
pop
fdivrs
mov
add
je
or
outsl
dec
testb
cmp
scas
mov
and
sbbl
sbb
cmp
pop
cli
or
gs
mov
mov
inc
push
cwtd
clc
stos
iret
sbb
rolb
xchg
inc
push
add
or
inc
mov
add
lods
inc
insl
push
movsl
dec
or
mov
mull
orl
xor
cmp
lods
adc
mov
pop
call
pop
daa
iret
pop
push
push
mov
loop
lret
lock
leave
xor
ret
incl
cmp
jmp
mov
ret
inc
xor
inc
cld
outsb
pop
lock
adc
mov
xchg
movsl
addr16
out
cld
mov
mov
inc
push
out
cmp
dec
les
clc
pop
or
add
scas
mov
mov
dec
das
jmp
sbb
jp
cmp
fs
push
cmpsl
pop
idivb
xor
adc
lahf
and
ds
hlt
sahf
xchg
sub
jmp
test
movsb
cmc
cmp
mov
idivb
mov
jmp
and
out
sub
push
inc
shl
sbb
jo
push
movsb
jge
or
add
subl
or
mov
bound
xchg
add
dec
pop
into
adc
xor
add
dec
stos
rcrl
cmp
aad
and
xor
adc
cmp
movsl
jp
jmp
int
add
jns
jge
mov
push
ror
mov
js
test
push
jl
pop
sahf
shlb
adc
rorb
jb
sti
pop
mov
mov
dec
pop
mov
mov
cmc
movsb
dec
cwtl
jmp
and
pop
out
xor
stos
xor
aam
stos
loop
ficoml
in
and
jo
mov
jl
int
stc
mov
mov
pop
sahf
call
or
repnz
cltd
fisubs
jmp
or
repz
cmpsb
inc
mov
xchg
gs
mov
das
push
pushf
xchg
jmp
cwtl
sbb
push
ja
and
jl
pop
sbb
repnz
cmpl
cltd
ret
in
nop
aaa
mov
and
into
or
jo
or
imul
ds
push
adc
xchg
enter
lods
psadbw
stos
popa
lret
mov
test
jg
jmp
cmc
or
adc
push
icebp
mov
je
xor
fldenv
pop
or
sub
call
ds
cmpsb
inc
stos
push
xor
lds
lcall
mov
ror
jbe
aam
test
jg
insl
xchg
bound
movsl
les
outsb
or
dec
out
push
mov
or
inc
test
jl
xchg
adc
test
outsb
mov
fcmovb
and
inc
mov
repnz
out
stos
loopne
jmp
inc
lahf
push
out
insb
pop
cmp
repnz
out
ss
xchg
bound
sbb
es
lods
push
imul
scas
cwtl
movsb
loop
adc
cwtl
mov
out
cld
rcrb
pop
mov
dec
sbb
push
xlat
pop
je
mov
xchg
sub
jnp
dec
dec
sub
sbb
xor
mov
std
cmp
je
sbb
out
jnp
stc
xor
cmc
cmpb
cmpsl
call
or
sti
xchg
scas
repnz
outsl
cmp
jg
neg
xchg
data16
mov
sub
jne
mov
push
dec
lds
adc
in
push
lods
xchg
scas
cmp
in
ds
xchg
pop
adc
test
mov
int
sub
xchg
mov
inc
inc
add
ret
push
xor
xchg
and
sub
mov
adc
push
rolb
pop
ss
ret
inc
sar
das
dec
cmp
icebp
in
mov
sbb
loope
push
mov
insl
sbb
or
xlat
dec
iret
cmp
aas
xchg
nop
sti
jg
es
add
cmp
aam
xchg
mov
sub
push
add
push
call
outsl
xchg
test
sub
jno
xor
jno
mov
sub
repnz
inc
fisubrs
sub
cmp
aam
fcomps
cli
push
sub
or
or
test
push
mov
rcrb
and
jg
xor
stos
xchg
ja
xor
mov
cwtl
subb
leave
or
adc
push
inc
push
gs
outsb
cmp
mov
xchg
fs
and
es
or
fdivr
and
or
test
into
enter
pop
mov
cli
shlb
cmp
jmp
pop
push
sbbb
movsl
xor
sub
mov
sub
stc
pop
enter
add
es
sub
adc
jb
inc
add
addr16
call
fldcw
fcompl
cltd
push
mov
sub
ss
out
inc
test
sub
dec
mov
sbb
insb
push
or
test
jle
incl
jl
mov
cwtl
das
xchg
es
lcall
out
mov
push
xchg
lret
in
xor
std
add
hlt
aad
insb
add
clc
pop
cmpb
out
insl
push
pop
stos
or
test
add
aad
ljmp
les
cmp
ds
mull
push
mov
rorl
scas
add
je
aas
mov
pop
icebp
or
xchg
mov
dec
pop
pop
inc
xchg
icebp
fwait
mov
ret
or
fistl
lods
xchg
jle
pop
and
mov
xlat
cmp
sbb
lods
xchg
outsl
ja
lcall
ja
loopne
fistl
mov
outsl
mov
stos
inc
sbb
xchg
subb
cmp
lcall
xchg
mov
add
sarl
inc
cmp
imul
loope
push
inc
dec
cmc
pushf
or
rcl
lret
inc
aad
ret
xor
mov
arpl
adc
fldt
daa
mov
inc
xor
push
dec
lret
ljmpw
jmp
dec
and
jmp
and
fisubrl
or
ss
ret
fidivs
les
inc
arpl
pop
pop
fldenv
cmp
cmpsb
or
lea
xchg
stc
int3
out
mov
sub
cmp
ds
jno
sbb
xchg
and
enter
xchg
stos
imul
mov
adc
lea
xchg
sarb
rcrb
iret
xchg
jle
add
les
and
bnd
adc
cli
dec
xor
pop
fwait
and
and
inc
jae
cwtl
je
cmp
lods
stos
pushf
and
das
mov
fwait
or
push
jno
fnstcw
lock
stc
loop
jg
jns
sub
mov
fwait
adc
ljmp
xchg
jp
mov
cld
push
cmpsl
mov
shlb
cmp
jne
divb
jo
xchg
ret
add
sbb
jnp
dec
push
dec
mov
xor
mov
mov
add
iret
ret
clc
fstpl
pusha
sbb
imul
and
out
fucomip
fbld
push
cltd
push
cltd
pop
scas
es
jns
pop
ja
xor
jp
les
dec
or
inc
push
xchg
pop
clc
std
push
cmp
cmp
dec
mov
shll
es
pusha
push
xchg
dec
jle
lret
add
jb
aam
into
aas
lret
xor
imul
or
jecxz
jg
idivl
mov
movsl
xchg
test
sub
cwtl
dec
cltd
sbbb
jmp
xchg
pop
jae
jne
xor
cs
dec
or
in
jmp
cmpsb
nop
mov
jne
push
cmp
xor
sub
lods
ja
aam
mov
sbb
popa
push
sub
ficoms
pop
test
mov
mov
cmc
adc
mov
sub
daa
inc
out
addr16
test
mov
pop
aad
mov
cld
into
repnz
or
mov
sbb
outsb
lcall
bound
dec
fcomip
out
call
add
mov
shrb
add
fnstenv
int3
xchg
mov
adc
fwait
loope
jle
int3
sti
push
jno
pop
mov
mov
xchg
jmp
sarl
loopne
test
pop
pop
dec
push
xchg
out
adc
movsb
mov
push
bound
lock
iret
pop
test
aam
mov
xchg
mov
enter
lods
jne
mov
out
scas
xchg
pop
in
nop
insb
or
stc
and
xor
cmpsl
sub
cmpsb
imul
cmp
xor
int3
inc
fists
mov
jb
scas
cmp
and
pushf
rcll
repz
mov
xchg
push
in
das
adcb
sbb
dec
sbb
cld
mov
std
xchg
cmpsl
fwait
cmovns
cld
lods
bound
and
cmp
sbb
pop
outsl
push
lea
inc
fisubrl
mov
sbb
jbe
shrb
lret
mov
xor
sbb
sub
jbe
pop
pop
dec
xor
shlb
mov
clc
hlt
add
and
or
xor
sub
fldt
or
pop
sub
jno
jb
inc
or
push
test
dec
jl
scas
fidivs
xchg
popa
sti
jno
outsl
std
cwtl
call
adc
out
xor
inc
cs
js
push
addr16
mov
dec
data16
cmp
mov
aas
lds
addr16
cmp
inc
fidivrl
popf
xor
mov
in
inc
mov
sbb
mov
mov
xchg
ficompl
inc
mov
es
pop
adc
mov
nop
sbb
sub
std
cmpsb
push
fistpl
xor
or
pop
out
mov
sub
outsl
insl
pop
pop
push
inc
repnz
fsubrp
lcall
das
lods
push
sbb
xchg
mov
insb
fidivrl
mov
test
pop
or
pop
fadd
sbb
add
push
jmp
rcrl
xor
jo
push
std
daa
lea
pop
sub
mov
leave
sbb
scas
jmp
and
xchg
arpl
mov
xor
mov
das
ss
adc
adc
pushf
fcmovb
jg
jl
jl
pop
or
movsb
ds
in
lret
sbb
rcrl
lods
fimull
push
push
xchg
inc
cmp
xor
gs
add
test
mov
lahf
mov
idivb
out
ljmp
and
cmp
mov
sub
sbb
pop
jmp
rclb
movsl
ds
or
out
out
jb,pn
int3
pop
mov
jo
in
scas
mov
rcrb
pop
push
and
es
cmp
xor
and
push
and
movsb
add
daa
sbb
and
pop
pushf
inc
pop
movsb
popf
xorb
mov
fsts
xchg
pop
insb
mov
ja
or
pusha
repnz
mov
xchg
mov
enter
pop
call
jp
dec
fdivrs
shl
and
mov
addr16
add
pop
fcompl
cmpsb
outsb
jle
pop
je
mov
insb
xchg
cmp
lret
dec
ds
cmp
mov
in
push
mov
test
jg
sti
fmuls
es
loope
mov
xorl
xor
cli
out
sahf
into
stos
lahf
clc
or
lods
popa
mov
pop
dec
btr
inc
outsl
pop
test
adc
add
mov
cli
popf
xor
lahf
fcoms
test
push
aad
insb
cmp
cmp
push
mov
out
inc
les
inc
dec
jb
andl
mov
xchg
pop
leave
jle
push
or
add
sbb
mov
sbb
adc
inc
jne,pn
test
out
sti
sub
fstps
lock
iret
xor
sbb
xchg
or
in
pop
adc
or
sbb
outsl
pop
mov
aas
rcr
insb
in
loopne
pop
mov
fwait
jb
add
cmpsb
adc
jne
adc
ja
pop
pop
mov
lcall
leave
cmp
cmpsb
lahf
cmp
pop
mov
insl
push
ja
je
xchg
outsl
xchg
or
xchg
xchg
jae
in
rcll
pusha
les
jge
inc
fs
add
das
adc
or
orb
dec
lods
mov
mov
flds
pop
jbe
add
xchg
or
sarb
lods
or
cmpsl
push
sbb
push
test
divb
dec
mov
or
pop
es
jno
stos
jecxz
adc
loope
cli
outsl
in
jne
jg
jo
pop
pusha
sub
aas
enter
and
repz
add
xor
and
push
and
daa
or
jp
cmp
sub
adc
divl
or
loope
cmp
std
enter
inc
push
enter
or
repnz
lret
sub
je
call
arpl
aad
in
ss
cmp
xor
push
jns
in
imul
xor
imul
std
es
mov
xchg
ds
sbb
jle
pop
les
into
dec
stos
and
xor
sub
sub
cmp
fisttps
mov
aad
mov
adc
sbb
enter
push
and
popl
imulb
dec
cmc
xor
ds
ret
jle
pop
mov
jmp
dec
test
cmp
mov
cs
outsb
movsl
shlb
cmc
and
aaa
test
sbb
cwtl
xor
aas
aas
ficompl
loopne
jnp
push
mov
rorb
push
int
dec
in
xchg
sbb
push
push
xchg
xchg
insb
mov
test
sub
xchg
or
inc
fimuls
push
push
fidivl
add
lahf
jmp
push
icebp
cmpsb
mov
push
xor
sti
cli
fdivl
xor
or
ljmp
ljmp
and
cltd
jb
popf
dec
jmp
into
lahf
add
js
or
cmp
dec
dec
sbb
shrl
mov
in
mov
push
cmc
outsb
jb
or
lcall
mov
cmp
lea
pop
cmp
out
and
xlat
mov
scas
stc
xor
popf
mov
xchg
xor
in
js
fstpt
lahf
jno
mov
mov
in
jg
fisubs
ret
jno
adcb
cmpsb
adc
fimuls
sub
sub
aad
mov
pop
and
lret
jle
stos
scas
mov
mov
sub
push
push
sbb
add
mov
lods
xchg
loopne
ret
insl
ljmp
into
js
sbb
jbe
repnz
loope
cmp
aam
lds
dec
add
xor
mov
pop
lods
sbb
test
clc
pop
daa
xor
pop
rcr
jecxz
ret
jnp
jnp
add
int
insl
repnz
jmp
xorl
jg
fs
inc
mov
cltd
mov
ljmp
mov
xlat
pop
or
pop
dec
sar
add
js
mov
out
jns
mov
mov
sub
arpl
add
mov
mov
inc
repz
mov
shll
jns
mov
cmc
xlat
add
lret
vpaddq
fwait
adc
jg
fstpl
pop
imul
add
mov
mov
popf
jge
scas
or
mov
icebp
adc
push
jae
push
sub
scas
xor
insl
mov
and
arpl
dec
xchg
add
push
or
jae
add
stos
stos
test
jbe
sub
fsubs
add
inc
sbb
push
aaa
mov
or
scas
add
movsb
addr16
imul
pop
adc
jge
xchg
jb
mov
iret
xor
int3
out
inc
push
imul
pop
dec
pop
jnp
add
mov
pop
mov
lods
ds
inc
jns
fiaddl
mov
mov
add
push
idivb
mov
lret
jp
xchg
mov
jl
ret
mov
imul
xlat
popa
outsb
mov
adc
mov
pop
repz
outsl
mov
je
push
test
xchg
or
add
jne
mov
push
adc
lahf
mov
jnp
aad
inc
push
mov
outsl
les
push
sub
jne
xor
aaa
sub
pop
push
push
stc
dec
pop
pop
dec
mov
xor
jg
or
xor
and
mov
cli
out
and
pop
orb
ljmp
pop
insb
mov
sub
and
pop
pop
jo
or
mov
push
pop
call
inc
dec
mov
jns
sub
xchg
sub
sub
dec
sub
rcll
cmp
sbb
inc
icebp
pop
and
das
mov
ja
push
add
lods
push
pusha
movsl
mov
mov
mov
aad
loop
sub
testb
gs
icebp
mov
fwait
add
aad
not
adc
dec
add
scas
jae
outsb
das
andb
loop
lock
cmp
xlat
pop
push
fptan
inc
xor
push
fiaddl
test
mov
push
and
out
sti
push
rorb
xchg
fs
sub
fisttpl
ret
xchg
jp
sti
rorl
dec
adc
imul
js
xchg
dec
dec
fistpl
mov
or
sub
sub
scas
ret
xor
or
sbb
xor
stos
xor
fbld
stos
sub
mov
push
adc
cmp
out
mov
fdivl
popa
mov
sti
aas
sahf
shl
stc
xor
mov
loopne
add
cmp
mov
mov
sbb
lods
sbb
bound
rorl
mov
push
jbe
pop
sbb
std
test
jnp
mov
bound
into
mov
jmp
ret
scas
scas
jecxz
push
cmpsb
repz
sbb
js
mov
mov
nop
mov
xchg
shrl
out
fisubrl
xchg
orl
imul
and
cmpsl
lahf
iret
cmp
lret
adc
inc
dec
nop
sbb
sub
jb
rcrb
fsubrl
jl
pop
inc
add
add
pop
pop
iret
mov
aam
cmp
xchg
push
mov
into
adcl
inc
insl
pop
fs
frstor
mov
add
mov
mov
es
lods
movsl
adc
dec
fwait
ret
popf
mov
rcll
mov
cltd
jnp
fwait
js
inc
ljmp
repnz
insl
push
mov
add
pop
icebp
push
jge
add
inc
or
outsl
shl
mov
and
rcrb
sbb
pop
cmpsl
or
push
mov
aaa
or
xchg
inc
clc
movsb
negb
sbb
mov
lods
sbb
orl
push
xor
pusha
aam
add
pop
cli
mov
xchg
xchg
dec
pop
push
add
cmc
pop
ret
xchg
jmp
in
mov
lods
mov
mov
fwait
dec
mov
bound
cmp
mov
aad
dec
xchg
adc
jns
and
mov
pusha
mov
aam
inc
push
sub
jge
push
int3
ret
pop
lods
fdivs
sbb
push
out
ds
jne,pn
mov
lahf
xor
xor
cmc
mov
pop
cmc
mov
mov
xlat
pop
cmp
xchg
cmpsb
in
je
js
fbstp
xchg
mov
mov
repz
or
mov
es
or
jno
pop
loope
dec
loop
xor
fwait
in
sub
and
jb
loope
mov
js
lea
push
mov
jo
ja
imul
lea
ljmp
and
and
sub
stos
xchg
add
outsl
repz
push
sbb
in
or
addb
sbb
loopne
ljmp
mov
jnp,pt
pop
mov
mov
xor
arpl
and
rolb
popf
xorb
or
push
or
jle
xor
bound
mov
imul
push
pop
fs
mov
xchg
shll
cmp
leave
mov
mov
mov
aad
inc
pop
into
ret
jge
inc
gs
cmp
sbb
inc
mov
inc
fs
and
inc
cwtl
popf
fdivrp
roll
mov
test
dec
xor
repz
pop
jl
repnz
sbb
jb
loop
mov
orb
adc
cmp
jns
push
xchg
call
popa
cmp
lock
scas
sbb
pusha
aaa
shrl
loope
xlat
mov
test
push
jae
push
cltd
je
sbb
inc
and
adcb
out
add
addr16
jle
pop
adc
imul
xchg
xchg
scas
fisttps
mov
jl
movsb
jp
aad
and
cli
mov
sbb
sub
pusha
fldcw
sahf
jno
sbb
push
negb
ficompl
fmulp
fsubrs
adc
inc
cmp
ret
cmp
clc
data16
jbe
mov
mov
lods
jo
push
and
ja
cmpsl
or
lret
push
popa
test
incb
sub
nop
insl
sub
fwait
fs
mov
repnz
aad
lea
pop
imul
ljmp
mov
dec
cmp
das
and
add
cmp
ret
mov
push
mov
xor
mov
popa
rolb
out
repz
cmp
leave
pusha
add
mov
sti
fisubrs
push
mov
pop
adc
loopne
or
outsb
out
fnsave
xlat
pop
cmpsl
sbb
imul
fwait
adc
pop
mov
cmpl
ja
rdmsr
out
push
jo
imul
mov
mov
pop
ret
mov
push
into
mov
sub
leave
xor
inc
stc
push
or
push
loop
sub
daa
add
inc
or
inc
fs
push
fs
jmp
cmp
xor
push
mov
add
mov
add
lahf
test
jns
fisttpll
push
rclb
and
push
xchg
push
repnz
pusha
push
push
ret
fwait
stos
jb
sbb
push
push
sbbb
mov
arpl
inc
jmp
inc
loop
pop
mov
jmp
loopne
adc
xchg
and
ret
jno
xchg
pusha
mov
mov
dec
push
xchg
pop
mov
sbb
mov
push
xchg
inc
sbb
lods
stc
cwtl
mov
or
push
xor
push
test
push
and
test
adc
aas
into
inc
inc
and
or
lret
subl
imul
fcmove
sub
cltd
ret
mov
mov
popa
push
dec
adc
sub
pop
dec
aad
adc
int3
bound
fwait
pop
repz
xor
jb
dec
out
mov
int
idivb
imul
loope
push
int
test
and
out
pop
push
cmp
adc
xor
pop
push
decl
inc
pop
jne
push
mov
xor
sub
inc
xchg
jno
aaa
icebp
and
loop
out
ljmp
xchg
into
es
xlat
add
dec
dec
add
pushf
pusha
mov
inc
mov
stos
dec
insl
push
inc
popf
fidivrl
add
sti
scas
aam
ret
fadd
aaa
lods
cltd
aad
add
or
dec
xchg
inc
jl
bound
sbb
xchg
aas
in
rclb
lock
cmp
shlb
cmp
fidivrl
xlat
mov
shl
pop
sbb
or
pop
xchg
inc
out
icebp
dec
js
fdivr
dec
stos
adcb
sbb
or
xchg
cmp
inc
and
mov
add
mov
addl
jp
inc
jl
inc
rclb
pop
sbb
jnp
mov
cwtl
and
hlt
loopne
mov
cmp
loopne
or
inc
and
movsl
cmp
jns
cmc
ret
pop
add
es
or
push
ljmp
les
mov
push
das
jmp
pusha
sub
cmp
ret
xor
pusha
push
cmpsb
cmp
push
pop
pusha
inc
cltd
jecxz
push
sub
cmpsb
int
xor
push
mov
ljmp
sub
sbb
les
pusha
aaa
scas
out
sahf
lea
cmp
nop
std
and
pop
mov
sti
xor
cmp
push
test
add
cld
insb
or
ror
inc
mov
dec
xchg
and
add
mov
fistpl
int3
and
fst
adc
sti
jp
jle
push
mov
and
cmc
sbb
lods
repz
mov
ja
adc
mov
mov
cmp
fwait
hlt
std
sbb
push
cs
and
cli
outsl
bound
jno
out
jp
test
or
imul
lea
mov
stos
lea
add
push
rcrb
movb
dec
in
test
jmp
jb
rcrb
addr16
jbe
fs
jecxz
int3
ja
cmpsl
cmpsb
mov
jle
mov
mov
ljmp
add
clc
dec
dec
int3
xor
xor
cmp
mov
pushf
idivb
inc
inc
das
mov
std
jmp
arpl
addr16
lods
sub
loop
xchg
outsl
dec
add
divl
xor
in
ja
jle
xchg
jne
aam
sahf
mov
cmpsb
lcall
aas
add
sti
dec
loop
outsl
out
sub
jnp
shr
mov
insb
into
dec
xlat
shr
dec
xchg
imul
inc
xorl
mov
shlb
sub
fldenv
lods
jnp
scas
ret
adc
mov
js
int
or
dec
jnp
dec
in
sbb
xchg
fldcw
aam
mov
push
aas
or
daa
arpl
inc
or
bound
jle
loope
stc
je
andb
xlat
jge
sahf
push
mov
jge
jl
dec
sub
push
or
add
dec
iret
mov
hlt
rcrl
cmpsb
mov
inc
adcl
dec
scas
xor
std
ret
js
xchg
out
call
fwait
enter
out
add
daa
sbb
mov
sahf
jae
xchg
xchg
clc
mov
out
jl
inc
mov
mov
cmp
mov
xchg
es
call
sub
and
mov
or
sub
jb
dec
push
loope
test
addr16
addb
sbb
adc
pop
popf
push
add
sub
test
outsb
stos
ret
insb
and
lea
sarb
cmpsl
dec
in
push
or
mov
adc
mov
outsl
mov
loope
lahf
cwtl
cmc
cltd
jle
loopne
ret
xchg
push
fwait
xor
push
mov
cltd
xchg
push
mov
mov
lret
pop
push
sti
pop
lods
xchg
or
sbb
push
movb
push
lahf
xchg
push
dec
orb
in
inc
pop
insb
add
pop
mov
test
push
loopne
and
jg
push
cltd
popa
cs
rorl
addb
xor
aaa
fsts
aam
rcrl
mov
sbb
cmpl
sub
mov
mov
pop
test
pop
lret
xchg
jnp
pop
scas
shr
xor
pop
mov
inc
and
and
add
push
das
pop
sbb
pop
cld
mov
dec
sbb
mov
or
mov
jmp
cld
pop
cmp
fcomps
xor
and
mov
push
enter
into
xor
mov
jbe
or
sub
fwait
jae
fwait
or
enter
imul
cmp
cmc
lea
xchg
fwait
pop
xorl
sub
xor
mov
xor
add
pop
sbb
push
lods
mov
or
out
jbe
inc
imul
mov
pushf
outsb
fisubrl
icebp
xchg
divb
test
jmp
cmc
shl
add
sbb
movsb
sahf
loopne
jno
cmpsl
in
inc
xchg
test
jge
arpl
xchg
ret
xchg
jecxz
sbb
pop
mov
add
loopne
push
sub
mov
pop
xor
mov
jne
dec
push
cmp
push
pop
repz
test
lock
cs
push
sub
mov
mov
pop
or
notl
cwtl
aaa
sbb
mov
xchg
pop
add
gs
stos
subb
cmp
mov
fnstsw
ret
sub
xchg
cmpsb
push
jp
or
cmp
jne
add
lret
sti
es
jecxz
shlb
decl
inc
inc
adc
adcl
loop
cmp
aam
mov
or
popf
ret
ficoml
push
and
lea
rolb
mov
add
sbb
lahf
out
mov
push
idiv
loopne
sbb
or
cltd
nop
push
adc
int3
dec
jns
mov
mov
jns
test
inc
cmp
rol
ret
mov
push
iret
outsb
pop
add
lcall
pop
push
sbb
inc
int3
in
xor
insb
pop
fbstp
scas
jno
or
clc
sub
inc
push
and
cmpsb
pop
pop
mov
xchg
movsl
inc
dec
outsl
mov
loopne
repnz
fsubl
in
jb
mov
xor
lcall
test
lods
mov
dec
mov
and
dec
and
sbbb
and
mov
xchg
fnstsw
adcb
cmpsb
xor
lock
mov
stos
jnp
or
loopne
inc
mov
mov
dec
and
mov
push
dec
je
imul
gs
pop
mov
lahf
xor
test
fnstenv
stos
push
pop
add
in
push
mov
and
push
mov
xchg
fists
push
pop
mov
xchg
pop
out
push
in
mov
mov
pusha
push
mov
and
mov
test
xchg
jb
repz
aaa
and
pop
insl
dec
movsb
cmp
inc
enter
add
push
lea
sbb
aaa
sub
outsl
dec
add
add
data16
push
icebp
dec
cmp
mov
hlt
fmull
xchg
and
pop
repz
rcll
in
cmp
mov
adc
in
aad
scas
mov
mov
xchg
pushf
out
movsb
fmull
or
shrl
lea
xor
or
inc
push
pop
mov
ss
cmpsb
movsb
xor
mov
inc
test
in
mov
jl
mov
das
shll
cld
fimull
or
scas
nop
sub
sbb
fs
hlt
icebp
sbb
testb
mov
lods
cmpsl
lret
scas
out
mov
je
or
push
pop
jmp
test
pop
movsl
enter
loop
dec
pushf
xor
and
hlt
dec
fisubrl
jno
xor
lret
pop
jmp
ljmp
int
test
data16
mov
add
in
cmp
fldl
jle
fisubl
mov
shr
adc
xchg
sbb
sub
movsl
ffreep
add
xchg
outsl
mov
stos
pop
fbstp
jle
jno
ret
clc
sarb
adc
scas
ljmp
inc
mov
push
cmp
notb
scas
xchg
test
movsb
add
sub
fs
gs
data16
lods
clc
in
hlt
stos
out
fcoml
inc
push
dec
xchg
sbb
jle
sarb
mov
pop
test
xchg
cltd
gs
repnz
push
scas
fsubl
pusha
push
movsb
scas
jb
movsl
inc
inc
xchg
xchg
mov
iret
fsubs
jnp
dec
adcl
push
add
cmpb
decb
into
mov
mov
adc
mov
data16
xchg
stos
pop
clc
and
fidivs
mov
mov
fidivl
or
fmuls
loop
scas
sarb
push
daa
movsb
xlat
in
cmp
lcall
pop
pop
ljmp
sti
sarl
pop
inc
fcmovb
aad
decb
or
mov
insl
mov
mov
mov
repnz
pop
and
or
addr16
adc
out
xchg
movsb
test
loope
das
ljmp
push
jp
orb
xchg
loop
cmpsb
mov
stos
inc
arpl
sub
mov
sub
jnp
mov
jecxz
jp
cmp
add
leave
fidivrl
adcb
adc
mov
jg
add
mov
loop
inc
call
cmpsb
popa
sarb
pop
lret
add
icebp
dec
fidivrs
into
mov
repnz
mov
icebp
dec
cli
xchg
fucom
ja
sti
cli
outsb
adc
sub
inc
cwtl
pop
and
in
insb
movaps
test
scas
fldenv
fsubp
cmc
pop
push
cmp
mov
sub
imul
add
dec
or
or
sbb
adc
test
jae
mov
insl
stc
mov
repnz
xor
ds
cmp
outsl
pop
popa
cld
sbb
mov
fistps
aas
and
repnz
aam
mov
inc
mov
test
sub
ja
out
cld
mov
sbb
mov
lret
popa
mov
mov
push
mov
xlat
fcoml
inc
test
in
ficompl
cmpsb
adc
push
popa
push
insl
in
jae
and
in
mov
icebp
jg
dec
pop
shlb
sub
cwtl
repz
lcall
out
mov
mov
xchg
int
mov
sbb
or
push
jo
in
dec
in
xchg
test
sub
scas
mov
adc
ljmp
pop
jne
adc
mov
mov
xor
out
std
lds
das
clc
int3
jmp
movsb
add
dec
shlb
and
aad
push
xorb
xor
xor
and
ljmp
imul
xchg
or
fidivl
mov
inc
jae
shlb
ljmp
mov
ss
ja
lret
movl
lods
xchg
xlat
and
adc
int3
adc
push
mov
sbb
and
xchg
test
and
test
ret
fwait
std
cmp
jmp
test
jge
fsubrs
hlt
test
test
cs
popf
test
xor
or
testl
sahf
subl
cmp
xchg
jnp
popa
das
dec
movsl
pushf
push
mov
es
xor
cltd
jg
mov
xchg
popf
xorb
js
sti
jp
cmpsl
mov
es
pop
test
mov
lcall
loop
lret
scas
mov
fs
adc
dec
idivb
dec
pop
mov
or
adc
push
mov
dec
mov
sbbb
inc
mov
mov
inc
jnp
loope
and
out
nop
add
sbb
xchg
mov
lods
push
lret
les
xchg
pop
les
mov
mov
jne
or
scas
jnp
inc
decl
in
push
fscale
xlat
mov
les
xor
push
fs
pop
mov
popf
repz
dec
popl
push
imul
sub
sub
adc
sbb
aad
pop
leave
jae
pop
jmp
jmp
sub
in
dec
sub
lods
xor
adc
iret
enter
test
pusha
adcl
mov
cli
push
cwtl
ret
aad
inc
lea
dec
or
sbb
es
lods
clc
push
xchg
push
lods
dec
sar
fwait
jecxz
jo
scas
loopne
dec
or
pop
dec
cmpb
mov
into
fst
mov
int3
sbb
cmp
fcoms
stos
xlat
inc
or
ljmp
adc
add
cwtl
add
add
adc
mov
inc
popa
sub
insb
pop
pop
cwtl
adc
outsl
sbb
push
aad
pop
ljmp
jnp
movsb
inc
fwait
push
xchg
jns
pop
ja
xor
sub
repz
cmp
fs
in
sbbl
pop
nop
cmc
adc
mov
sub
mov
ljmp
sub
repz
mov
push
adc
inc
cmp
xor
jb
and
shll
outsl
les
cs
or
loopne
xor
xchg
and
mov
jo
cmp
mull
lock
mov
pop
mov
jge
call
stos
pop
sbb
in
lea
loop
mov
jnp
lret
inc
xchg
inc
mov
aam
jp
inc
inc
dec
sub
ret
or
repnz
xchg
fstl
fwait
and
xchg
xor
xchg
in
out
xchg
mov
dec
daa
add
mov
insl
loop
ret
jmp
inc
sub
movsl
in
xchg
dec
popl
out
xor
xor
jg
xor
xor
or
jecxz
gs
bnd
mov
fisubl
or
cmp
ljmp
sbb
mov
fwait
pusha
aam
adc
enter
gs
jbe
cli
sbb
pop
mov
lea
iret
jbe
cmp
divb
push
lock
loope
test
add
mov
sahf
fwait
cmp
dec
push
sbb
adc
inc
adc
sti
in
dec
iret
push
or
cmp
popa
daa
inc
xor
pop
shr
jge
je
push
outsl
inc
xchg
call
mov
addl
das
sarl
fcompl
nop
cwtl
jge
cltd
aaa
xchg
sub
push
sub
cmp
or
clc
mov
ret
dec
inc
and
pop
addr16
pop
mov
add
idiv
hlt
mov
ret
mov
xor
test
cmpsb
pop
incb
mov
jecxz
inc
mov
ficoms
and
adc
cli
cmpsl
filds
jb
cmpl
jmp
inc
in
push
jno
stc
push
orb
ret
lock
xchg
mov
scas
scas
pop
outsb
sbb
xchg
mov
in
pop
cmp
cmc
enter
push
in
shll
dec
fsubs
clc
jnp
test
push
out
sarl
mov
xlat
cwtl
add
imul
cmp
pop
pop
sarl
ss
iret
cmp
adc
lods
xor
movsl
scas
or
cmp
sub
xchg
cmp
shrb
mov
push
mov
repz
jmp
pop
lods
add
test
sub
data16
mov
mov
cmp
sbb
repnz
and
mov
data16
testb
dec
push
xor
popa
leave
pop
and
data16
inc
mov
jecxz
xor
jge
mov
mov
ret
inc
fistpll
lcall
aam
sub
fcompl
cs
adc
cs
adc
es
inc
and
js
mov
adc
adc
add
cmp
and
insb
cmc
xor
jle
rcrl
ja
and
adc
frstor
in
jg
and
mov
pop
popf
ja
xchg
inc
cli
jp
cwtl
add
pop
lahf
xor
lods
sbbl
jl
xchg
and
mov
mov
movsl
test
stos
imul
clc
aam
jl
lds
push
data16
mov
inc
call
sub
das
in
fwait
fwait
xchg
xchg
xchg
ljmp
push
jge
jg
adcl
dec
sub
ss
rclb
xor
adc
ret
mov
das
ljmp
outsb
bound
outsl
pop
jb
call
inc
mov
inc
sub
mov
jl
sub
push
fucomi
push
fcomi
negb
sbb
scas
imul
xchg
daa
xchg
push
push
sbb
cvtps2pi
dec
sbb
enter
or
lcall
cmp
lret
or
mov
push
dec
call
xchg
mov
pop
jbe
push
es
mov
dec
jo
dec
jecxz
aas
loopne
add
fbstp
aad
pop
inc
jle
dec
int3
cvtdq2ps
push
dec
or
ja
push
idivb
adc
jnp
divb
lock
repz
aam
test
xor
push
mov
xchg
lret
loop
loopne
orb
cld
pop
aaa
in
mov
pop
dec
ljmp
adc
loope
mov
pushf
add
push
mov
mov
cmp
je
dec
shr
xchg
fs
hlt
cmpsb
cmp
cmp
es
or
sub
sub
sub
or
movsl
stos
cs
jg
popa
pop
int3
mov
lea
dec
lret
push
int
nop
xor
imul
pop
int
mov
shll
jno
dec
cwtl
dec
shr
jg
icebp
nop
ja
insl
push
jo
scas
faddl
repnz
rolb
shll
movl
add
cmpsl
xchg
sahf
sub
xor
sbb
adc
mov
mov
adc
int3
out
sub
shl
sarl
push
adc
call
fs
push
mov
insl
pop
push
sti
mov
loope
in
je
push
shrl
lahf
fdivr
pop
cmp
add
ds
xchg
addb
insl
ret
cwtl
push
lret
sbb
addr16
and
push
dec
lock
repz
cmp
sahf
jno
imul
lock
push
sub
shlb
jp
pusha
or
jl
sbb
cmp
jne
gs
xor
mov
fcmovb
add
cmp
push
decl
ja
pop
dec
fnstenv
repz
inc
popa
fisubrs
scas
inc
out
sub
ss
or
adc
test
dec
jle
lcall
inc
hlt
sbb
or
inc
data16
outsb
ret
stos
data16
inc
inc
scas
add
jns
sbb
in
fnstcw
popa
cwtl
imul
and
fidivrs
pop
pop
cs
mov
mov
imul
push
arpl
and
pop
pop
or
pop
in
or
hlt
stos
jo
mov
arpl
and
lock
ficomps
mov
and
xchg
cwtl
hlt
out
rcll
jne
stos
and
xchg
or
test
sbb
out
dec
scas
in
mov
push
mov
pop
faddl
jns
xchg
stos
cmp
loope
mov
xor
sbb
lds
xlat
push
sub
jne
mov
insb
xchg
imul
popf
mov
pop
xchg
out
inc
rol
mov
mov
inc
jle
push
mov
cltd
sub
int
cmc
mov
lods
cmpsl
in
cmp
mov
pop
or
inc
cli
inc
cs
mov
iret
subl
in
jno
fwait
mov
js
sub
mov
inc
jmp
aad
mov
xor
inc
sub
push
imul
and
cmp
ss
sbb
cmp
out
testb
addr16
or
sbb
ret
pop
cltd
inc
add
loopne
push
fnsave
data16
das
int
push
xor
outsl
xchg
mov
pop
pop
cli
es
adc
shll
xchg
mov
mov
nop
mov
rol
or
mov
stc
xor
inc
sub
test
mov
sub
outsl
mov
data16
loope
out
and
inc
cld
cmp
subb
xchg
inc
mov
add
imull
jle
xlat
dec
aad
pop
jp
subb
mov
fs
mov
dec
and
ror
lret
mov
popa
test
xchg
cmp
mov
jp
mov
adc
cmp
mov
and
push
insl
les
clc
aad
mov
mov
imul
fwait
hlt
and
dec
rolb
add
lods
dec
xchg
ljmp
pop
aam
mov
sti
sbb
fucom
pusha
hlt
in
mov
jle
hlt
jl
je
arpl
push
test
mov
mov
bound
mov
stos
hlt
pop
or
xor
push
dec
cli
xor
add
cmp
nop
test
call
xchg
xchg
nop
sahf
or
push
data16
push
xor
cld
sahf
mov
push
rep
out
pop
xor
push
sub
inc
mov
lds
and
loop
cli
push
xchg
push
lret
lds
xor
xchg
push
push
sbb
push
pushf
mov
cld
xor
and
addr16
pop
rcrl
mov
cmpsl
stos
int
xor
fs
jo
dec
ja
or
repnz
test
pop
rcl
fwait
in
xchg
jne
sub
cmp
insl
xchg
imull
inc
repz
jp
movsl
xchg
jnp
add
out
pushf
adcl
pop
inc
pushf
dec
jge
into
movsb
movsb
xor
je
mov
ds
dec
lds
lods
lds
js
xlat
into
xor
test
testl
inc
or
pushf
scas
fidivrl
lods
int3
pop
dec
andb
sbb
xor
push
mov
lea
add
mov
mov
mull
add
fwait
sbb
xchg
sub
mov
mov
adc
daa
cmp
push
popa
sbbb
scas
sbb
cmp
jns
cmpsb
dec
xor
cld
jmp
hlt
and
jl
daa
rcrb
in
jns
cmp
mov
mov
and
jp
dec
cwtl
lods
in
and
pop
shrl
push
cmp
mov
fildll
sbb
nop
cwtl
roll
jnp
jecxz
test
divl
sub
add
es
outsb
and
loop
clc
push
fisttpll
mov
xchg
leave
mov
subb
hlt
jo
add
cmc
or
jo
mov
fidivrl
jnp
jge
xchg
daa
mov
xlat
xorb
mov
push
loope
call
shrb
xlat
icebp
les
movsl
dec
movsl
in
jae
mov
xor
lock
pop
loopne
or
fldt
sub
loopne
sbb
fchs
dec
das
daa
mov
adc
movsb
lods
fsubp
push
call
andb
pop
add
jle
movsb
xchg
aaa
dec
imul
xchg
pop
loope
inc
pop
sub
mov
xchg
add
insl
xchg
jl
adc
cmp
aaa
lret
pop
push
sub
fisubl
in
mov
lods
divl
dec
outsl
ret
mov
cwtl
ret
pop
hlt
aas
push
add
sar
cmpsb
push
push
hlt
js
ret
sbb
jnp
pop
mov
cwtl
add
cltd
repz
xor
stos
repnz
xor
rorl
dec
clc
mov
fstpt
cld
mov
sbb
mov
lea
xchg
jge
xlat
lea
and
xlat
and
aaa
rcl
out
iret
mov
jo
ret
jae
mov
loopne
int3
xlat
mov
jnp
fiadds
dec
cli
shlb
push
xchg
xor
or
outsb
lods
popa
push
loopne
mov
outsb
cs
shrl
addl
movsl
inc
ret
insl
sbb
out
xor
jno
push
xchg
pop
imul
push
out
insb
push
xlat
pop
mov
xchg
fcomi
ret
ret
xchg
xchg
rorb
test
call
pop
or
jge
addr16
orl
adc
and
xor
mov
mov
aad
fs
mov
sbb
xchg
pushf
inc
push
into
sub
mov
ret
fisttps
out
xor
sbb
addr16
inc
lods
jl
int
cs
pop
cs
daa
fistpl
ficompl
call
pop
xchg
dec
pop
push
push
std
insb
mov
repz
andb
mov
clc
fnstenv
inc
lods
addr16
sub
stos
pop
icebp
icebp
divb
xor
xor
in
or
mov
sbb
in
xor
lret
shrb
addr16
adc
data16
fisubs
jmp
jl
push
adc
dec
add
mov
mov
cmp
jle
test
push
dec
xor
pop
dec
push
sahf
dec
mov
jmp
jbe
jg
out
inc
xor
xchg
loop
sbbb
xchg
pop
mov
mov
lret
scas
data16
sahf
fs
push
pusha
fsubs
jns
repnz
shlb
inc
pop
xor
mov
lret
sub
sub
js
jo
mov
and
std
in
cli
cmc
mov
xor
adc
lods
imul
enter
lret
inc
scas
sarl
mov
cmp
mov
xor
xorb
inc
jp
sub
pop
pop
aas
ljmp
dec
push
lock
mov
ficoml
out
xor
pop
xchg
aad
dec
dec
add
test
jns
sbb
ds
pusha
or
adcb
std
dec
scas
in
push
jae
sbb
leave
stc
push
pop
or
cwtl
jnp
aaa
or
lds
sub
pop
ja
pop
inc
jno
or
push
leave
sub
std
fwait
adc
fildll
pop
xchg
ljmp
mov
push
lods
jmp
jbe
pop
fildl
pusha
aaa
jecxz
xchg
sub
add
sbb
lcall
lds
dec
js
xchg
enter
scas
pop
inc
fs
mov
pop
mov
sbb
pop
les
pushf
pushf
mov
jns
cmc
mov
xchg
mov
ficoms
aad
cmc
das
push
lahf
sbbl
and
fnstsw
jb
sbb
add
loope
add
in
push
in
test
popf
mov
nop
sbb
xor
push
jmp
lret
sub
xlat
mov
ja
arpl
lds
je
stc
test
adc
pop
dec
popf
pop
cmp
icebp
inc
xchg
sahf
into
fldl
inc
xchg
and
mov
fstl
xor
subb
sub
mov
out
sub
cmp
jnp
sbb
push
repnz
addr16
jge
pop
cmp
pop
inc
ret
das
add
hlt
xchg
ljmp
add
push
mov
dec
fnstcw
ljmp
cmpsb
add
sbb
ret
call
xchg
cmp
and
stos
sbb
fisubrs
cli
sbb
orl
aaa
roll
dec
adc
mov
popf
mov
popa
fwait
cmpsb
or
mov
inc
sti
std
jge
sbb
or
imul
push
sahf
lcall
fcoml
mov
fidivrl
sub
jae
decb
or
jnp
sub
fldt
add
cmpsl
sub
xchg
stos
lods
inc
fiaddl
jmp
fstl
xchg
adc
loop
stos
cmp
or
cmp
or
mov
and
repnz
movsl
pushf
movsl
cmp
cmp
sub
or
lcall
inc
fidivl
mov
xchg
cli
inc
dec
pop
or
sub
jne
jle
jl
sub
arpl
stos
pop
mov
mov
movsb
rcr
push
lds
inc
add
mov
mov
dec
pop
aas
and
mov
lock
push
inc
imul
pop
movsb
icebp
ficompl
out
inc
fists
cmpb
add
les
out
pop
jnp
mov
add
mov
inc
or
loop
sbb
xor
gs
push
arpl
iret
xor
test
pop
pop
xchg
jg
daa
rorl
and
sub
cmc
jae
push
inc
mov
add
loop
push
mov
inc
push
push
repz
jnp
cmp
sub
ficompl
dec
stos
mov
mov
ss
push
pushf
dec
orl
adc
js
add
add
xor
mov
cwtl
inc
jge
jbe
ficompl
fdiv
sub
fadds
nop
mov
aam
insl
xor
sarb
outsb
mov
cltd
cmpsl
adc
addps
lock
or
cmpsb
pop
popa
push
ja
dec
jne
xchg
push
lds
das
sbb
gs
fdivp
adcl
scas
push
arpl
pop
pop
repz
push
inc
jge
adc
cmp
mov
jns
adc
fmuls
popa
cmp
dec
sub
push
adc
cmp
push
dec
into
inc
jae
in
pop
pop
push
dec
push
test
mov
lret
imul
sub
sbb
inc
cmp
push
or
movl
sbb
jnp
popf
es
lcall
popf
adc
std
push
daa
je
pop
test
ss
test
xor
enter
sbb
pop
icebp
pop
adc
aaa
in
adc
xchg
xor
mov
push
xlat
mov
lods
aaa
jle
clc
or
fisttps
mov
popa
inc
icebp
or
dec
std
into
sbb
fadd
dec
cltd
loopne
subb
jle
jnp
mov
imul
mov
push
pop
je
add
mov
sbb
outsb
sbbb
lea
les
jmp
push
push
and
dec
lods
inc
push
cmpsb
je
inc
scas
dec
outsl
dec
lret
push
ss
add
scas
dec
push
or
sbb
insb
mov
or
dec
pushf
add
insl
cltd
cld
subb
dec
dec
add
lock
jle
cmp
stc
sub
cmp
mov
inc
sub
pop
sbb
sbb
insb
xchg
dec
xor
sub
lret
mov
out
or
std
add
invd
jno
pop
push
xchg
pop
xchg
xchg
xchg
int3
test
or
sbbb
add
sbb
repnz
jmp
and
jecxz
xor
int3
cmpsb
sub
popa
scas
cmpsb
outsl
sbb
jnp
or
sub
adc
dec
cs
fs
and
lret
stos
xchg
pop
dec
sub
out
cmp
std
mov
cli
mov
lods
mov
pop
jecxz
jp
lds
adc
cli
out
sarb
or
push
les
adc
sti
sub
mov
mov
push
sub
out
loope
into
push
repz
fsts
fcmovne
sub
sbb
sub
xor
add
fcoml
xchg
sti
sar
out
push
loopne
js
mov
xlat
push
ret
cmpsb
test
jle
arpl
inc
adc
adc
mov
fcoms
add
pop
mov
mov
sub
sbb
and
xor
repnz
orb
lret
pop
xchg
or
push
push
lret
mov
scas
pop
pop
adc
sbb
or
jne
dec
iret
mov
dec
xchg
incl
and
add
outsb
mov
mov
mov
push
fimuls
xor
aas
aam
imul
pop
jl
xor
jmp
insb
aaa
sub
int
xor
mov
fldpi
popa
stc
sti
lret
or
push
push
sub
jl
dec
mov
push
sub
jmp
pop
sub
cmpsb
push
js
xor
mov
cmc
jo
fldl
hlt
je
jnp,pt
movsb
sub
fcmovb
cmp
daa
fs
add
pop
jno
rcll
push
sbb
xchg
mov
inc
fwait
cmp
pop
cld
pop
fldl
ret
mov
dec
mov
sub
sbb
lret
fisttps
pop
and
xchg
fldcw
add
bound
je
xor
mov
pop
xor
pop
push
js
loopne
push
adc
aad
dec
push
arpl
test
sub
jbe
lds
sbb
pop
aaa
xorb
incb
push
ret
repnz
in
lock
sbb
jp
inc
pusha
or
in
lcall
jns
in
orb
sub
lea
pop
inc
iret
add
and
jbe
dec
sarl
lret
scas
adc
mov
sbb
inc
push
sbb
dec
ret
cmpsb
out
jne
shrl
lock
and
xor
jmp
push
add
xchg
andb
mov
outsl
xchg
dec
lcall
cmc
pop
and
dec
mov
push
push
mov
push
lcall
jge
clc
and
test
pop
cltd
xchg
mov
pop
or
inc
mov
sub
bound
xor
mov
xchg
icebp
dec
jp
jl
daa
repnz
inc
iret
out
mov
inc
lea
fxch
xchg
jge
int
xorl
mov
pop
fcomp
mov
imul
addr16
enter
ja
movsl
insl
dec
xlat
lahf
sti
push
xchg
mov
ffree
dec
xchg
jo
mov
movsl
dec
sub
dec
xlat
rclb
into
movsb
iret
leave
or
adc
cmp
out
lds
repz
and
pop
incl
push
fildll
xor
or
movsl
push
push
lahf
mov
shll
inc
mov
aas
adc
sub
adc
pop
int3
in
out
mov
daa
push
and
lcall
add
adc
imul
repz
adcl
clc
movsl
push
lock
lret
pop
dec
mov
call
repnz
xchg
xchg
mov
and
and
sbb
stc
out
mov
and
xchg
dec
cld
adc
mov
sub
icebp
xor
cmp
loopne
fnstenv
cwtl
pop
in
pusha
dec
push
leave
or
cmp
ljmp
xchg
mov
xchg
filds
xlat
sub
test
shrl
das
jo
or
fldt
sub
aas
cmp
pop
loop
testl
dec
cltd
cmp
lods
nop
mov
ss
icebp
outsb
dec
outsl
repnz
arpl
popf
jecxz
add
rclb
mov
jp
add
jp
bnd
lea
mov
pusha
jp
mov
pop
shll
mov
shrl
mov
xchg
xchg
push
fbstp
lods
in
adc
sub
jg
dec
cmc
pop
dec
fistl
jno
jg
hlt
sub
lods
fcmovnu
ja
inc
dec
lahf
insl
aam
or
imul
cmp
mov
mull
lods
push
inc
inc
dec
mov
pop
out
push
adc
ljmp
dec
das
imul
pop
push
mov
aam
push
xor
mov
jns
in
push
testl
daa
push
sub
test
sahf
fidivl
jg
jge
imul
mov
aaa
adc
xor
shll
fs
ret
jl
shll
repnz
bound
divl
push
ret
mov
lds
pushf
enter
leave
pop
inc
or
pop
testb
and
in
scas
inc
sbb
lods
into
adc
mov
out
xchg
ret
or
mov
dec
out
push
sub
bswap
and
dec
add
sbb
fstpl
adc
cmp
aam
pop
xchg
jbe
mov
dec
lcall
gs
out
fcmovu
xorb
xchg
cmp
sbb
movsb
enter
cmp
mov
rorb
pop
xchg
frstor
iret
jae
or
mov
or
mov
popf
testb
xchg
pop
add
cmp
shrb
fwait
je
ja
enter
mov
dec
aad
pop
mov
adc
ds
push
mov
jns
push
mov
mov
push
pusha
in
gs
jge
sub
dec
cltd
lahf
adc
xor
imulb
lock
sbb
sub
mov
pop
iret
test
cmp
popf
mov
js
lret
rorl
int
pop
push
lods
push
push
in
ljmp
movsl
jo
mov
lret
incl
cmp
repz
enter
jns
mov
xchg
sbb
add
pop
int3
ljmp
cmp
in
fistpl
imul
xor
xor
fdivrl
out
pop
sbb
cmc
push
cld
mov
dec
and
lcall
xchg
mov
push
xor
mov
or
mov
lcall
mov
or
jecxz
cmp
jmp
cmc
add
fistps
pop
and
out
ljmp
xchg
dec
mov
or
into
in
jp
xor
pusha
jno
jbe
aas
xchg
push
gs
push
leave
fidivrs
inc
fnstcw
and
fistpll
jae
jge
repnz
fcoms
pop
iret
movsl
or
dec
mov
dec
mov
shll
sbb
adc
jmp
popa
cmpsl
mul
pop
add
into
es
cmp
stos
xor
dec
pop
pop
mov
movsb
inc
pop
jb
lahf
data16
lret
inc
jecxz
ret
idivb
push
aaa
sub
sbb
into
sbb
lds
out
shl
inc
shr
sarb
pusha
sub
inc
ret
hlt
mov
xor
mov
inc
xor
in
test
inc
inc
sbb
lea
mov
aas
ss
pop
xchg
idivl
add
dec
not
test
insb
fstpt
jl
test
fsubs
push
xchg
cltd
push
mov
pushf
jno
test
cmp
in
adc
cmpsl
cmpsl
bound
xchg
orb
andb
mov
pop
std
pop
xor
fs
sbb
jmp
stos
jge
add
inc
pop
fsubrl
mov
insl
fldcw
jecxz
ror
cmpsb
inc
jnp
fcmovnb
cmp
sti
mov
mov
xchg
mov
or
cmp
fsubrp
hlt
jno,pn
mov
sarb
shlb
addl
cmp
ret
in
out
cmp
fdiv
and
jge
pushf
daa
jp
mov
xor
mov
xor
test
push
push
jbe
dec
test
lcall
mov
inc
aad
lock
subl
xor
mov
ljmp
adc
movsb
loope
pop
mov
mov
add
and
iret
fstl
out
leave
scas
fiaddl
push
lds
subl
out
or
sbb
sub
sbb
lahf
jl
imulb
cltd
sub
enter
js
loop
xor
ljmp
std
push
lret
test
out
mov
pushf
fildll
or
cmp
lock
cmc
adc
cmp
cmpb
mov
and
jp
push
fsubrs
rcrl
popf
outsb
cmp
das
pop
pop
test
fcos
pushf
arpl
pop
inc
sub
sub
popf
jno
ret
add
pop
in
inc
mov
ss
jb
jb
add
call
out
cmp
mov
cmp
cltd
cld
mov
inc
mov
jecxz
add
lahf
and
mov
inc
cmp
xor
mov
mov
leave
jp
outsl
test
mov
adc
sub
inc
add
adc
test
inc
cmp
repz
in
cmp
pushl
es
mov
jne
test
or
pop
mov
xor
shlb
bound
mov
test
mov
test
ljmp
popa
stos
gs
mov
jo
stos
out
inc
mov
or
adc
and
dec
mov
fnstsw
mov
mov
leave
je
xchg
xchg
jmp
push
sti
mov
jmp
add
fstpt
aam
filds
pop
adc
sbb
jbe
jb
mov
mov
ret
rcr
inc
fadds
dec
popf
dec
movsb
inc
push
and
rcrb
arpl
outsl
scas
insb
and
rolb
push
pusha
xor
dec
cmp
push
sub
or
mov
xchg
es
imul
cmpsb
lahf
cmp
push
cli
mov
pop
iret
push
sub
mov
sub
into
icebp
lret
xchg
xor
push
mov
imul
or
mov
cmp
mov
cmp
cmpsb
pusha
cmp
rcl
add
inc
mov
dec
jnp
mov
dec
lahf
js
subb
insb
mov
mov
xchg
jbe
negb
add
sbb
mov
mov
add
cli
sub
je
jae
mov
or
int3
fwait
jbe
xchg
iret
adc
or
aas
and
arpl
xchg
inc
cmpsl
imul
sub
cltd
pop
xor
inc
dec
sub
std
pop
leave
sbb
fildl
seto
out
jge
mov
and
leave
test
enter
cwtl
mov
popf
insl
das
aas
push
movsl
pop
insb
and
xchg
sahf
inc
das
inc
push
test
xchg
lea
mov
xchg
mov
loopne
rcll
push
repz
les
lds
mov
xorl
mov
mov
add
jle
sbbb
and
mov
ljmp
inc
cmpsl
mov
and
jae
adc
iret
dec
mov
pmuludq
cld
aaa
test
add
pop
xor
jecxz
sub
push
push
add
fsub
push
xchg
shlb
and
enter
loopne
iret
shll
fcmovnu
stos
cmp
add
out
loope
popl
hlt
stc
cwtl
stos
mov
subl
out
jp
fiaddl
enter
cmp
sub
imul
xchg
mov
sbb
sbb
add
lret
shr
cmpsb
cmc
sbb
mov
call
jmp
dec
fsubp
jae
cmp
iret
addr16
cli
stc
lock
push
test
div
jae
xchg
xchg
pop
test
jnp
mov
inc
add
sbb
cmp
jbe
cmp
xchg
xor
push
mov
stos
rcll
fcomps
popf
and
mov
or
pop
fmull
sub
sbb
xchg
push
pop
mov
js
into
cmovo
stc
mov
insb
push
and
mov
fsubrl
insl
jne
in
sub
xor
popf
cmp
aam
and
mov
adcb
or
jmp
inc
inc
mov
rorl
jbe
mov
xchg
inc
jg
mov
enter
cmp
repz
out
xor
cmp
or
je
jp
fimull
stc
pushf
pop
cltd
jnp
sub
test
jge
fidivrl
icebp
mov
mov
scas
rorb
sbb
add
jo
out
mov
adc
lret
inc
test
xchg
test
bound
daa
out
std
out
inc
pop
fnstsw
push
sub
les
lcall
ror
imul
mov
dec
loopne
mov
lea
lods
rorb
ret
mov
and
and
sbb
les
adc
in
add
aad
adc
adc
cli
xchg
pop
imul
and
pop
xchg
iret
sbb
ret
lret
lods
jl
sub
sahf
fs
add
jle
arpl
mov
insl
arpl
mov
fidivrs
xchg
ret
pop
les
cmp
sbb
mov
je
xor
mulb
mov
ret
lret
cmc
ljmp
inc
pop
jne
add
xchg
pop
push
cmc
inc
insl
mov
divb
mov
push
inc
fisubrl
insl
stos
adc
mov
lret
fdivrs
inc
mov
sub
sarb
or
cmpsb
cmp
jge
mov
or
push
cmp
fists
xchg
loope
pop
loope
cmp
lock
or
sbb
dec
fildl
adcb
cmp
test
and
sti
adc
lret
jle
cmpsl
cmc
testl
inc
pop
nop
cs
xchg
out
and
imul
inc
aas
pop
icebp
push
adc
sub
mov
sbb
push
in
lcall
or
lret
xchg
or
scas
mov
cmp
cmp
mov
aas
aad
inc
dec
mov
orl
push
sbb
mov
add
jecxz
cmp
subb
sub
out
dec
add
shl
hlt
test
mov
sub
xchg
xor
mov
mov
or
iret
jg
repz
sub
jb
or
call
out
mov
imul
jae
pop
icebp
fdivs
outsl
mov
js
lcall
popa
pop
jmp
and
ja
fbld
ud1
inc
addb
adc
aad
adc
jb
mov
cmp
es
mov
sbb
repz
rclb
or
push
les
mov
outsl
cmp
stos
push
rcl
add
mov
xchg
pop
jne
adc
leave
lret
lods
mov
pop
lgs
adc
sub
das
adc
mov
pop
or
lcall
lret
push
movsb
adc
pusha
push
aas
out
push
fs
xchg
aas
xchg
aas
mov
lods
xor
pop
sub
leave
test
mov
popa
mov
mov
aam
xor
rcr
pop
gs
shlb
inc
and
inc
fimuls
adc
jle
jno
adc
fcomps
sbb
mov
sbb
dec
je
sub
movsb
ljmp
fcmovnu
jp
cmc
ret
inc
inc
lahf
cs
push
shl
sbbb
cltd
push
jno
add
mov
pop
aam
and
loop
gs
pushf
loop
inc
push
bound
add
outsb
icebp
lock
pushf
mul
loopne
xlat
mov
mov
rorb
push
das
cmp
sbb
mov
ss
adc
sub
in
and
push
mov
ljmp
sbb
and
jae
cltd
insb
push
movsl
mov
insl
xchg
mov
dec
cwtl
iret
lods
xor
scas
cld
mov
pop
ror
mov
xchg
in
sub
lock
jecxz
fimuls
mov
imul
sub
repz
sahf
dec
and
xchg
sbb
cmc
dec
xor
insl
push
jns
popf
dec
push
mov
addr16
jge
adc
sbb
mov
shll
out
push
jl
add
aad
sbb
out
fsubs
sbb
dec
push
sbb
enter
jo
xchg
mov
and
dec
xchg
sbbl
inc
cmc
cmp
insb
dec
in
divb
fimuls
in
or
je
in
lods
ja
pop
cltd
fadds
inc
or
lahf
rol
cli
out
in
pusha
pop
notl
mov
xchg
pop
or
pop
xchg
xchg
push
inc
xchg
fwait
inc
xorb
add
push
xchg
push
subl
dec
lods
daa
pop
sbb
rcr
enter
insb
push
or
mov
push
sub
icebp
cmp
pop
pop
sub
outsb
xor
push
movsl
stos
or
sbb
or
mov
divl
es
testl
in
and
outsb
fwait
lcall
nop
sbb
sbb
test
pop
rorb
cmp
enter
push
pop
mov
dec
ficompl
lret
ret
sbb
sbb
js
jae
mov
popf
mov
dec
adc
bound
inc
leave
repnz
xchg
pusha
inc
sub
pcmpgtw
xlat
push
or
mov
daa
roll
insb
jmp
jno
outsl
mov
lods
jns
xchg
sbb
rorl
xchg
in
xchg
push
outsb
sbb
jnp
dec
xor
inc
inc
inc
jmp
mov
and
mov
fldl
mov
cld
xor
shl
pop
xchg
shlb
rcl
or
mov
pop
js
ljmp
jns
imul
jecxz
push
ret
aam
push
out
mov
and
sub
gs
fistpll
mov
inc
test
dec
push
rorl
es
xor
pop
cmpb
ljmp
movsb
xor
pop
hlt
imul
sbb
lods
call
shlb
mov
test
movsl
push
scas
dec
mov
jle
sub
add
or
or
rolb
mov
dec
in
mov
sbb
movsb
sbb
push
cmpsl
movsb
jb
es
andb
inc
pop
push
ds
pop
cld
adcb
mov
sahf
push
cmp
call
push
inc
adc
cmp
mov
xor
xchg
pop
or
dec
jo
movsb
mov
outsb
or
data16
nop
adc
push
iret
incb
das
mov
les
sub
clc
mov
xchg
out
stos
cmp
push
xorl
sbb
cmpsb
mov
aam
shll
and
out
imul
push
jmp
adc
pushf
push
xor
xchg
sbb
out
jmp
fldt
loopne
xlat
push
xchg
shrb
mov
test
sbb
mov
mov
adc
push
xor
sarb
repnz
jp
movsb
fistl
clc
dec
fmuls
xor
jl
aam
imul
aam
jg
scas
lea
call
add
cli
cltd
or
mov
es
xchg
sbb
inc
sbb
sbb
in
addl
icebp
imul
bound
fisttps
ljmp
add
lret
shr
xorl
and
aad
scas
or
xor
push
add
mov
call
cmp
xchg
pop
inc
pop
daa
push
jl
jb
sbb
xor
test
cs
scas
add
std
jl
and
pop
adc
in
iret
sbb
push
movsl
mov
in
pop
int
add
pop
inc
and
data16
in
out
inc
lds
aam
xchg
jns
imul
mov
pop
in
fldl
test
movsl
addb
fadd
movsl
daa
je
mov
mov
jae
aad
shrb
xor
sahf
push
ret
push
jecxz
or
pop
jae
xorb
xchg
repz
popf
ss
outsl
frstor
in
lods
clc
and
xor
aas
pop
rclb
in
sub
pop
dec
jo
fwait
sbb
stc
frstor
cmp
shrl
clc
mov
fld
stc
lock
jp
add
std
push
filds
pop
adc
and
sub
lret
push
int3
shll
sub
inc
push
or
lods
stos
loope
imul
mov
push
sbb
xor
scas
repnz
mov
daa
lods
xor
int3
test
or
in
pop
loopne
mov
pop
out
ret
je
sti
adc
seto
lcall
add
xchg
dec
jmp
int3
mov
testb
sub
aas
adc
cmp
lds
mov
xor
pop
int3
sub
andb
arpl
inc
or
jmp
jmp
xor
xlat
pop
cltd
arpl
sbb
test
fstpt
scas
test
jl
addr16
dec
stc
jbe
add
xor
das
mov
push
sub
dec
out
into
jno
push
mov
adc
inc
es
xchg
xchg
xor
mov
add
sbbl
adc
mov
mov
mov
lahf
addr16
sbb
xlat
lock
pop
sub
and
mov
mov
or
xlat
push
gs
adc
xchg
addr16
lods
gs
or
mov
xchg
cmc
cmp
or
sub
mov
out
outsl
dec
addr16
stos
cmpsl
iret
pop
xor
loop
xor
add
mov
adc
stc
xchg
mov
lods
imul
xor
cli
cwtl
xchg
shrl
mov
inc
xchg
cltd
ret
jl
xchg
sti
add
cmp
lods
jmp
rcll
lock
stc
xchg
fnstsw
dec
sub
in
stos
mov
stc
mov
jle
test
cmp
mov
push
aam
mov
cmp
aad
cmp
repnz
sahf
cli
cmp
nop
sti
cld
mov
popa
jg
adc
scas
insl
jbe
xchg
xchg
das
scas
push
scas
lods
mov
xchg
leave
mov
pop
and
cwtl
imull
inc
repz
pop
mov
or
xchg
imul
adc
int3
jb
int3
ret
scas
mov
sarb
mov
outsl
outsb
sub
xchg
or
or
add
jle
scas
adc
stc
inc
fs
jg
sub
fs
std
pop
inc
shll
fdivs
sti
out
in
subl
sarl
or
xor
orb
and
xor
repnz
fdivs
lret
push
mov
lret
mov
xor
sbb
lds
and
adc
pop
rcl
lds
fcomi
xchg
sub
xlat
fcomps
out
jb
stos
xchg
dec
jb
pop
xor
ds
int
xchg
adc
xchg
jp
jecxz
imul
dec
jo
lea
mov
cmc
or
xor
cmp
mov
sub
js
mov
out
pop
dec
pop
sahf
xor
sub
scas
mov
xchg
mov
scas
cmpb
ss
and
push
cmp
push
cmp
mov
lods
scas
enter
pop
sub
jnp
jle
push
aas
add
inc
or
dec
push
xor
or
iret
jne
sbb
jae
cmp
pop
mov
xchg
jno
in
xchg
repz
cmp
mov
and
repnz
add
mov
push
add
cli
sub
sub
je
in
cmp
xorl
and
loop
arpl
lods
punpckhdq
hlt
in
inc
roll
lds
mov
imul
adc
leave
ljmp
test
adc
lods
nop
xor
test
sbb
cmp
repnz
pop
imul
mov
loopne
inc
or
jecxz
sbb
mov
mov
rcrb
fdecstp
cmp
pop
fcomi
popf
add
mov
sarb
jmp
mov
fwait
jmp
push
mov
stc
adc
sarb
pop
sbb
lods
fsubl
push
lods
adc
in
in
or
mov
cwtl
in
xor
adc
mov
insl
cli
sub
inc
and
lods
loopne
pop
stos
ret
frstor
das
aaa
ret
xchg
dec
mov
ss
shlb
add
jae
daa
mov
dec
add
mov
or
test
adc
jmp
adc
push
fdivrs
xlat
sti
inc
add
mov
outsl
leave
jbe
out
pusha
jmp
pop
inc
mov
repz
adc
int3
test
and
adc
sub
adc
and
add
inc
pop
jno
std
aam
ljmp
sub
hlt
popf
daa
repz
sub
xchg
sub
adc
push
cmpsl
adc
fwait
jo
addb
mov
mov
ljmp
xchg
movl
sub
cmpsb
aad
dec
test
movl
jecxz
inc
lcall
sub
inc
aad
fs
jno
sub
push
sub
push
out
divl
dec
sub
mov
ret
push
mov
aaa
mov
ror
movsb
push
xlat
push
pop
inc
jne
pop
xchg
outsb
add
fsubs
adc
and
mov
cmpsl
push
pop
das
clc
sub
inc
rclb
clc
xchg
or
scas
push
sahf
jb
rorl
and
daa
or
ljmp
leave
call
into
and
fstps
sub
fdivrl
jns
pushf
ljmp
cli
or
inc
rcl
push
mov
mov
mov
mov
mov
sbb
addb
sbb
adc
pop
aas
xchg
loop
sbb
inc
push
jmp
jge
outsl
xor
repnz
jmp
fcmovnu
or
dec
cmp
leave
cltd
adc
pop
adc
jecxz
sbb
xchg
nop
cmpsl
cmpsl
mov
jae
jbe
jno
cmp
sbb
daa
push
dec
das
call
or
lds
xor
fmul
cmpl
and
testb
mov
cs
in
ljmp
inc
test
adc
adc
mov
inc
mov
fsubp
dec
pop
mov
jle
sbb
sub
in
xor
mov
subl
pop
iret
or
sub
xor
inc
scas
fsubr
imul
mov
cmpb
test
sti
add
cmp
push
cmpsl
add
jmp
inc
in
mov
lcall
inc
add
cld
add
pop
adc
pop
mov
repz
pop
pop
cmp
mov
popf
in
xor
aad
idivb
push
cmp
jg
test
mov
dec
pop
cmp
mov
repz
scas
aam
imul
inc
adcl
adc
push
sub
lods
call
mov
repz
aam
and
sbb
xor
mov
and
fwait
lcall
push
movsb
cmp
rorb
fcmovnbe
push
sub
rorl
jmp
fstpl
fs
pop
xchg
idivl
inc
add
pop
loope
add
popf
push
lcall
xor
ret
mov
cmp
pop
repz
xor
cs
mov
stos
or
lock
movb
iret
shlb
fyl2xp1
dec
inc
cmp
push
cmp
inc
mov
cmc
mov
xor
jmp
xchg
jp
add
enter
adc
inc
xor
push
lcall
mov
adc
imul
pop
popa
sbb
jb
pop
and
and
out
nop
and
mov
insb
pop
add
or
lret
jg
rcrb
sbb
scas
jns
push
shlb
adc
mov
mov
push
loop
lods
cmp
adc
fnstenv
xchg
mov
adc
in
or
ds
das
add
or
mov
dec
xchg
lahf
and
push
push
mov
das
int3
or
jae
jbe
call
adc
aaa
mov
dec
push
mov
jecxz
cmp
fs
lea
jb
xor
sbb
add
das
mov
cmp
add
mov
data16
or
rolb
jbe
out
xor
jl
dec
adcb
sbb
fldcw
mov
rclb
lret
and
or
xchg
in
xchg
mov
push
es
push
xlat
movzbl
addr16
adc
imul
pop
jl
inc
xchg
lret
sub
lock
test
orl
push
arpl
imul
jb
pop
push
and
xchg
adc
push
inc
pop
xchg
cwtl
push
leave
pop
sti
std
jge
jbe
sub
in
sbb
jg
xchg
out
insb
cmp
mov
cmpsb
adc
loope
xor
mov
and
mov
xchg
xchg
cmpsb
sbb
cld
movsb
test
push
clc
insb
inc
jmp
cmp
movsl
sub
pop
cmp
jne
mov
repz
xchg
andb
xchg
int3
cmp
shlb
js
adc
inc
mov
mov
inc
sub
scas
adc
inc
cmp
mov
dec
and
rolb
repz
push
repnz
adc
inc
fidivrl
mov
sbb
sbb
rep
mov
fs
xor
mov
or
adc
jb
inc
and
or
mov
push
fs
je
jl
xor
and
call
lahf
adc
push
lods
data16
icebp
clc
xor
cld
xchg
pop
scas
in
sbb
sbb
push
push
push
sbb
dec
xorl
mov
push
sub
inc
mov
stc
mov
add
addr16
sbb
shll
jp
dec
or
cmp
shrl
daa
lahf
cli
call
cli
xor
in
icebp
fdivrs
sbb
xchg
iret
mov
push
mov
cmp
push
clc
clc
shll
fiadds
mov
xor
ret
inc
cmp
xor
xor
dec
pop
aas
lahf
inc
dec
sarl
jle
mov
cmpsb
leave
sub
sbb
mov
cltd
dec
jne
addl
repz
roll
mov
jae
in
xchg
xchg
in
roll
xchg
jbe
inc
orl
push
cmp
pushf
push
leave
dec
imul
pop
xor
sbb
and
xchg
stc
jge
hlt
jns
adc
hlt
add
dec
adc
aas
sub
cmp
int3
loope
shrl
int3
push
cmpsl
loope
cmpl
sub
cmove
movsl
mov
jecxz
test
mov
and
iret
push
test
cmc
pop
pop
outsl
aad
mov
cmc
mov
clc
lea
mov
jecxz
sbb
rcrb
lock
jmp
movsb
xchg
mov
mov
sbbb
and
mov
push
jl
subb
cwtl
xor
rcrb
push
mov
xchg
add
call
andb
inc
dec
outsb
mull
push
xor
cmp
push
or
shrl
jno
movsb
cmpsl
sbb
std
mov
leave
shlb
push
dec
sbb
cmc
addb
jo
and
xchg
adcl
lods
shll
pop
and
push
mov
hlt
xor
lock
mov
fidivrs
mov
pop
out
or
clc
fst
bound
insl
lcall
jae
sub
push
mov
cmp
pop
xlat
out
xor
mov
mov
push
xchg
in
popl
adc
and
add
push
call
push
or
cmp
cltd
mov
xchg
orl
or
fadds
sub
js
dec
inc
push
lods
fcompp
int3
xchg
shll
fisttps
cmpsl
lret
mov
mov
mov
jo
sarb
cmp
xchg
out
cmpsb
mov
push
insb
lods
aam
xor
enter
push
popf
sub
vphadduwd
stos
mov
sbb
mov
jbe
jmp
xchg
cmc
mov
lahf
add
cltd
out
mov
nop
fcompl
mov
push
push
cmp
test
jae
fisttpll
out
pop
push
outsb
inc
mov
pop
arpl
adc
ss
movsl
add
and
lahf
sbb
scas
jg
sahf
sub
xor
dec
pusha
jbe
mov
mov
dec
xor
mov
loopne
pop
jne
fs
iret
mov
popf
flds
imul
cwtl
fstl
pop
sub
sbb
int
inc
rcll
sti
andl
fdivp
aas
lods
shll
ja
pop
inc
js
and
sbb
ret
dec
mov
clc
iret
inc
and
push
cmpsl
popf
pop
nop
push
fs
pop
repz
mov
leave
or
and
iret
aad
jo
adc
xchg
fwait
xchg
add
sbb
pop
jmp
jns
adc
repnz
push
pop
jge
ja
xchg
test
add
insl
inc
adc
push
and
mov
jmp
cld
and
push
sbb
mov
pop
imul
mov
das
mov
int3
xorb
lret
mov
rcr
or
sub
in
cmp
or
enter
mov
adcl
xchg
pushf
ss
imul
push
pop
jns
cwtl
pop
into
pop
jl
xchg
icebp
mov
aad
loope
xchg
xchg
hlt
pop
mov
popf
jnp
dec
sub
or
add
int3
sbb
pop
add
andps
add
test
cltd
adc
rcl
adc
dec
adc
mov
ljmp
es
jb
jns
xlat
sub
rcr
jne
xor
jns
movsl
fucompp
mov
fstps
xor
imul
and
or
notb
push
mov
aaa
xchg
jecxz
push
xchg
les
cmp
pop
stc
cmc
cld
outsb
sbb
and
push
push
out
rep
mov
imul
mov
push
lahf
nop
mov
mov
idivl
xor
aaa
mov
mov
xor
fstp
xchg
jge
jnp
xlat
out
jl
pusha
add
cwtl
enter
outsb
lods
add
fs
das
mov
mov
iret
jae
fimull
push
and
jo
inc
fmull
test
fsubl
mov
jp
inc
cld
and
test
sub
or
es
in
ret
push
ficomps
loope
mov
and
dec
xlat
pop
movsb
rol
sub
dec
jg
xor
rorl
out
jl
pop
push
loope
push
push
sbb
push
fsubrs
mov
add
mov
cld
cmp
add
mov
mov
fstl
jns
mov
aad
xlat
add
xlat
xchg
jle
sub
faddl
popa
dec
add
xchg
aad
sti
adc
outsb
imul
cmpsb
subb
mov
add
add
dec
fisubrl
push
push
mov
mov
lea
in
scas
inc
adc
and
adc
lcall
push
loope
imul
shlb
adc
imul
aam
or
leave
xchg
and
rcrl
or
jae
aas
mov
mov
addr16
adc
or
xor
stos
in
add
xchg
mov
sbb
jbe
hlt
leave
mov
pop
pop
jle
jo
in
adc
out
xor
enter
push
cmc
aas
and
fisttpll
lock
xor
mov
sbb
pop
jnp
out
rolb
lods
push
mov
lret
jbe
ror
dec
in
or
pop
inc
fists
sbb
pushf
mov
push
adc
fisubl
fnsave
jmp
ljmp
insb
aam
adc
aad
mov
daa
dec
ds
inc
lock
sbb
repnz
fcompl
jle
pop
inc
xor
mov
leave
sub
stc
popa
std
cld
adc
pushf
aad
mov
fidivrl
or
subb
or
sub
pusha
xchg
ret
out
ds
in
fcoml
and
push
sbb
and
push
and
hlt
popa
lods
xor
je
daa
inc
adc
test
pop
shr
out
push
ljmp
cmp
in
popf
cmp
imul
and
pop
test
outsl
out
mov
xlat
scas
and
sarb
xor
xorl
std
xchg
mov
cmp
in
xor
push
cltd
jo
xorb
cwtl
cwtl
cmp
or
dec
and
iret
mov
cmp
xchg
data16
mul
xor
dec
into
insl
sub
xlat
adc
repnz
es
stos
xchg
xor
mov
jle
mov
inc
out
sub
lret
push
and
mov
xor
pop
out
es
and
mov
cmp
fldt
mov
push
add
scas
bound
fisubrs
sahf
xchg
mov
sbb
cmc
stc
mov
clc
and
movsb
inc
inc
dec
mov
fmull
push
adc
gs
outsl
ret
inc
xchg
xlat
adcl
in
push
mov
call
inc
test
mov
push
mov
jl
xorl
cmp
scas
push
scas
mov
sbb
or
and
push
mov
stos
adc
jbe
mov
mov
ja
pop
jecxz
out
call
jle
mov
popa
sub
and
jge
into
inc
std
push
sub
shrl
jmp
testb
ror
jl
mov
loopne
es
aam
fdivrs
test
insb
jle
cmpsb
pop
or
call
test
push
sub
jbe
cmpsb
mov
mov
jg
in
dec
dec
mov
cmp
push
dec
std
xor
push
loop
fdivrs
cli
xlat
mov
inc
scas
fwait
aas
cmc
xchg
fstpl
test
addr16
std
scas
call
push
adc
adc
pusha
inc
fisubl
popa
push
incl
ret
test
lcall
xchg
test
aaa
xor
jl
dec
cld
pop
ljmp
aad
sbb
bound
mov
mov
xadd
pop
stos
inc
jle
outsl
jnp
fadd
and
mov
push
add
mov
lea
xor
mov
shlb
jo
or
and
cmp
sbb
test
into
inc
das
cltd
pop
cs
iret
daa
aaa
fdivr
cmp
jl
stc
or
jb
loopne
pusha
clc
arpl
les
inc
xlat
lea
add
sub
rol
ret
negb
fwait
inc
xchg
icebp
push
loopne
das
test
mov
pcmpeqw
pop
iret
call
fwait
and
jmp
mov
or
idivb
push
jno
and
xor
rcl
cwtl
pushf
mov
push
lret
xlat
push
scas
jecxz
out
cli
mov
inc
mov
lds
mov
imul
inc
push
mov
fdivp
cmp
clc
loop
insb
or
jmp
mov
or
call
andl
sti
shlb
nop
insl
stc
inc
mov
sbb
jecxz
or
out
xchg
mov
jb
dec
adc
js
scas
and
loopne
mov
cmp
ret
push
cmpb
les
xor
push
mov
out
adc
insb
test
or
fsubrl
xor
cltd
mov
rolb
fucom
jle
inc
mov
aaa
add
xor
jns
out
stc
pop
inc
ficomps
pusha
aam
cld
inc
and
or
pop
lcall
xchg
fisubrl
jne
or
cwtl
cmp
sbb
dec
jp
xorb
jno
pop
fmuls
jle
pushl
push
push
out
inc
xor
jmp
orb
nop
shlb
inc
imul
mov
jb
jno
jge
fcoml
ja
loop
in
push
xchg
or
mov
inc
rol
push
sbb
mov
jbe
adc
rcll
fdiv
ret
cwtl
fmul
int3
sbb
shr
sbb
aam
push
aad
hlt
sbb
mov
cltd
and
and
aad
lea
mov
icebp
push
or
and
push
mov
and
mov
mov
arpl
cmp
loopne
jmp
repnz
les
stc
rcr
test
cmpsl
mov
sub
ds
aam
in
call
xchg
and
test
mov
into
push
fisttps
mov
movsb
add
xor
jne
add
inc
xor
sub
push
test
loope
dec
jge
cwtl
out
out
and
lods
sbb
leave
pop
loop
pushf
push
sbb
xchg
cld
lret
js
stos
mov
lret
xor
and
std
xchg
mov
push
push
in
cmp
mov
jbe
inc
or
inc
scas
data16
jp
xlat
jae
stos
add
pop
in
pop
cmp
roll
repz
lret
and
mov
into
dec
add
lret
sub
fsubrp
mov
pop
orb
cmc
pop
mov
adc
popf
sti
add
sbb
sub
add
pop
mov
ja
lcall
stos
cli
shll
jmp
cmpsb
hlt
mov
xor
pop
cmp
lcall
fwait
ds
mov
ds
push
sub
call
pushf
push
movsb
nop
lcall
mov
sti
mov
arpl
cmp
dec
fwait
push
or
lock
nop
or
and
cltd
outsb
xor
jno
pop
mov
sub
cwtl
dec
mov
es
int
bswap
mov
dec
mov
popa
adc
sub
xorb
lock
inc
cmpsl
sub
scas
test
push
mov
jbe
mov
lock
cmp
frstor
or
repz
jl
pop
cmc
sbb
fwait
mov
sub
iret
cmpsl
cld
inc
sbb
fs
fnstsw
fisubs
and
jb
out
push
aaa
or
and
lods
insb
jmp
cld
push
dec
es
mov
insl
dec
sbb
and
in
push
aam
dec
push
add
rorl
dec
or
sbb
syscall
push
xchg
cmpsb
cmp
bound
jg
leave
scas
lock
jl
outsl
pop
push
mov
jmp
add
pop
ljmp
scas
push
repnz
test
jg
fsubrs
out
adc
jo
xchg
mov
stos
and
xchg
lahf
push
jae
lret
jmp
stos
pop
cltd
fisttpll
pop
into
mov
out
mov
dec
test
lret
pop
imul
mov
lret
pop
lcall
xor
push
jno
lret
sbb
jo
xchg
cmpsl
add
les
xchg
pop
fidivs
hlt
out
xor
dec
mov
aad
push
xor
dec
jl
mov
outsl
in
sub
pop
cmp
in
stos
int3
ss
nop
sarl
adc
pop
cwtl
in
pushf
jo
mov
fmuls
sub
imul
cwtl
xor
mov
mov
inc
mov
lds
adc
mov
xor
daa
and
loope
sarb
sarb
jnp
jmp
and
jp
jmp
adc
loop
sbb
es
stos
int3
or
mov
js
lret
push
sbb
aad
pop
dec
aaa
lods
mov
or
clc
fsubs
imul
lods
gs
and
adc
test
or
lea
out
inc
or
pop
add
lret
movsb
xchg
gs
dec
es
pop
xchg
sti
shll
aaa
lret
and
push
xchg
fs
xor
je
sti
arpl
stc
jo
sbb
gs
mov
push
aam
add
mov
jp
xchg
cmp
sbb
push
cmpsl
mov
popa
pop
mov
sarb
dec
das
cmp
mov
xor
mov
push
push
cmpsl
mov
aam
xor
roll
inc
jno
jb
and
push
xchg
out
out
aad
or
fistps
int3
pop
xchg
pop
mov
mov
enter
xorb
or
adc
inc
orb
fistpll
pop
int3
cmp
or
popa
pop
mov
pop
imul
daa
sub
dec
inc
adc
xchg
or
mov
pop
bound
imul
jp
shl
mov
mov
dec
test
push
pop
bound
scas
mov
notb
lret
and
dec
push
lahf
int
sub
repz
mov
xchg
xchg
mov
jge
inc
test
jl
cmp
or
insl
adc
dec
mov
jecxz
cld
in
popf
sub
cmp
xchg
sub
push
cmp
mov
outsb
ret
rolb
loope
add
mov
lock
add
out
dec
jo
jno
add
pop
mov
xchg
das
mov
jmp
and
push
clc
iret
and
lds
adc
cmpb
nop
addr16
out
jns
jo
cs
pop
adc
mov
mov
stos
hlt
out
xor
and
test
or
out
xorb
repz
mov
add
xchg
sar
or
cltd
ja
mov
sub
inc
ds
sub
scas
daa
aaa
jp
fldcw
sbb
and
xor
sub
imul
into
xlat
adc
sti
fidivrl
sahf
ret
pop
cmp
sbb
pop
in
or
mov
dec
aaa
aaa
stos
or
shrb
pop
fldt
dec
xchg
inc
inc
and
nop
sbb
enter
cmp
and
and
push
cld
inc
pop
lea
pop
or
ljmp
or
inc
cld
imul
adc
call
and
enter
sbb
xlat
arpl
ret
xor
es
cs
outsb
xorb
xor
dec
push
lcall
rep
or
aaa
lds
sbbl
jns
fldenv
inc
ja
incb
les
jno
xchg
pop
pusha
fwait
into
out
lds
sub
ja
ficoml
jl
inc
lods
cwtl
mov
sbb
sub
fdivs
lcall
pushf
ljmp
cmp
push
inc
sub
and
shll
push
lods
push
insl
mov
lcall
data16
jb
push
jmp
movsl
dec
add
push
outsl
addr16
xor
mov
add
test
sub
stos
and
xchg
add
xlat
add
adc
mov
icebp
pop
ja
leave
add
out
insl
and
sbb
cmp
out
inc
fnstenv
xor
ja
inc
dec
lock
scas
fcompl
and
xchg
fxch
cmp
ret
lcall
cmp
jg
cmp
lcall
xchg
lret
dec
dec
mov
mov
jb
dec
imul
std
or
dec
sub
push
push
add
in
mov
adc
inc
jmp
push
add
in
push
fsts
imul
mov
rclb
push
pop
jecxz
cmp
jmp
and
xchg
out
call
cmp
movsl
sbb
jmp
lret
sub
rclb
jl
lret
xorb
xor
sahf
pop
into
jne
int3
lahf
dec
mov
bound
loop
movaps
pop
add
fs
pop
xor
outsl
cmp
dec
mov
jmp
sbb
sti
push
stos
bnd
mov
dec
mov
orl
inc
cmp
lds
pusha
cmp
out
push
lret
mov
mov
call
xchg
cmpl
pop
lahf
dec
rcrb
xor
sti
cli
rorb
repz
into
push
arpl
cmp
mov
sti
xchg
shl
jg
jo
cwtl
das
and
adc
xchg
ja
rorb
jns
sub
ret
xchg
pop
sbb
sbb
ljmp
push
pop
inc
imull
clc
xchg
and
dec
mov
int
xor
jmp
dec
dec
jb
loopne
mov
lock
pop
clc
push
or
popf
ds
enter
test
pop
dec
lods
cmpsl
mov
shlb
movsb
xchg
dec
push
daa
out
rcr
cmp
inc
out
jnp
scas
outsl
sub
push
dec
dec
xlat
addr16
shr
cmpsb
out
outsl
mov
xor
push
mov
in
movsl
outsl
jns
xchg
test
or
lcall
xor
or
xchg
insl
xchg
adc
imul
pop
ja
jns
ss
jb
pop
pop
mov
xchg
sahf
add
jmp
mov
pop
or
sub
subl
or
enter
jbe
push
mov
repnz
sub
mov
lcall
int
adc
xor
bound
add
sub
xor
jecxz
pop
je
mov
pop
jo
int
xchg
popf
pop
ret
jge
inc
mov
icebp
mov
nop
loop
cmc
loope
push
sub
cmp
movsb
mov
cmp
int3
adc
xchg
sub
loope
jp
mov
popa
xchg
cmp
aad
out
lret
int
lods
xor
inc
test
in
mov
lcall
aaa
sbb
cli
ficoml
pop
stos
dec
mov
pop
clc
shll
int
sbb
sbb
fsubrs
adc
cmp
mov
test
mov
or
out
xor
and
mov
xor
add
pop
scas
adc
push
repnz
sar
scas
mov
ret
cmp
push
outsb
inc
and
ficomps
stc
icebp
enter
je
pop
scas
sbb
outsl
xchg
ficoml
sbb
xchg
or
mov
and
mov
jg
mov
xchg
mov
outsl
rorb
ljmp
cmp
cmc
pusha
jno
fwait
les
mov
popf
or
hlt
inc
pop
mov
push
orb
adc
xchg
mov
loopne
loopne
in
out
repz
add
xchg
into
scas
ds
inc
fimuls
cwtl
das
cmp
push
shl
sub
outsb
iret
pop
test
movsl
lret
xchg
jo
push
lret
out
adc
adcb
out
ret
ret
fsub
enter
xlat
and
test
push
das
insl
mov
push
popf
repnz
aaa
sbb
cltd
mov
xor
add
popaw
mov
mov
mov
and
enter
sub
ja
dec
sbb
adc
push
inc
test
cmp
decb
push
insl
mov
push
mov
mov
sahf
mov
jl
push
fnstsw
les
test
dec
pop
decl
into
xchg
mov
outsb
fistps
sbb
pop
repnz
cmc
lock
shlb
mov
jecxz
cmpsb
mull
inc
imul
jns
jnp
sub
xchg
jae
push
stos
in
pop
leave
xchg
mov
mov
push
lods
imul
mov
or
push
and
hlt
outsl
jecxz
test
mov
and
jnp
aas
dec
xchg
inc
int
es
aaa
push
lret
js
or
xchg
push
int3
jns
and
imul
push
js
shrl
dec
xor
mov
jmp
lea
outsl
js
pusha
es
mov
inc
shrb
dec
idivl
cmp
stos
sbb
sbb
mov
mov
mov
mov
adc
jno
mov
in
jbe
jg
xchg
and
out
pop
mov
div
movswl
bound
mov
jbe
mov
push
xchg
sub
jmp
mov
ret
jmp
out
push
inc
and
xchg
and
sbb
pop
sbb
movsb
rclb
lock
addb
cli
test
cmp
mov
dec
mov
mov
mov
fcoms
cmpsl
add
pop
inc
mov
repz
jbe
popa
sbb
pop
mov
dec
sbbb
xor
punpckhwd
rolb
les
subl
test
and
stos
test
lods
outsb
cmpsb
push
mov
push
in
cmp
cltd
ret
mov
jecxz
push
pop
fwait
outsb
in
call
mov
daa
inc
mov
dec
sbb
sub
cmp
mov
mov
mov
jae
pop
pop
mov
push
mov
inc
dec
push
push
sub
sti
es
lds
xlat
std
popa
mov
sbbl
sbb
outsb
sti
xchg
or
arpl
sahf
cld
jge
mov
scas
callw
and
push
xor
xchg
aaa
cmpsl
cli
cmp
sbb
cmp
xchg
aas
outsl
popl
daa
push
and
sub
ficoml
iret
or
push
sub
xchg
rorl
xor
fidivs
test
daa
int
mov
cmp
ds
sub
fdivrs
xchg
nop
dec
mov
mov
mov
add
jl
push
cmp
pop
mov
cmp
add
ds
mov
mov
sub
pop
aaa
cmp
cld
cmp
int
pop
das
xchg
rorb
lret
mov
pushf
in
in
outsl
cld
jbe
ret
data16
sbb
lods
push
add
sarl
mov
rcl
pop
sbb
and
cmp
nop
popa
xchg
andl
sub
add
jno
pop
mov
cmp
push
mov
cmp
aam
js
fdivl
sbb
mov
das
mov
popa
mov
and
jl
cmp
pop
and
hlt
scas
add
out
dec
pop
aas
stos
pop
pusha
and
jno
xchg
add
cmp
insl
jnp
fidivs
sahf
stos
mov
aam
add
in
cmpsb
adc
and
push
cmpsl
adc
test
xchg
inc
add
jg
xchg
fwait
test
adcl
add
pop
pop
sti
or
fldl
cmpsb
push
jno
call
add
sbb
sub
aas
into
xor
pop
in
push
nop
jge
xlat
call
mov
ret
push
cmpsl
fiaddl
jnp
adc
les
out
dec
mov
movl
sarb
cs
aad
mov
inc
test
lods
sub
xchg
sti
mov
clc
lods
or
into
test
or
dec
jp
add
cmp
movsl
lock
les
sub
das
loop
addl
add
cmc
jne
std
or
dec
push
mov
jb
xchg
mov
xchg
pushf
and
xchg
cmp
or
and
das
data16
xor
scas
pop
xchg
in
dec
mov
mov
cld
cltd
fcompl
jmp
ret
jns
mov
jmp
repnz
stos
mov
inc
into
xor
push
mov
aaa
hlt
and
mov
scas
sahf
jecxz
lret
pop
loop
jecxz
pop
dec
or
xor
mov
inc
xchg
mov
addr16
subl
or
mov
bound
aam
inc
cwtl
aaa
test
mov
mov
mov
fdiv
push
jl
xchg
les
pop
sub
sub
pop
jle
test
data16
test
sbb
push
pop
gs
shll
sub
jbe
imul
test
and
mov
push
fcoms
push
ja
pusha
xchg
cmp
or
ss
inc
push
ss
jno
loopne
jg
daa
jg
mov
int
test
fiaddl
ret
bswap
mov
mov
sub
rcrb
adc
leave
jp
or
cmpsb
nop
pop
sti
pop
stos
imull
adc
lret
andl
outsl
push
gs
addr16
fwait
cmp
das
pop
and
cmpsb
xlat
dec
scas
ja
jae
mov
das
or
insb
cmp
cmp
sbb
fstps
cmp
cmp
in
sub
aad
cmp
xchg
enter
subb
cmp
das
and
fstl
ret
xchg
mov
jl
pushf
es
xor
jl
add
fists
movsb
fldl
das
inc
xchg
adc
rorl
add
loope
jge
decb
in
sbb
cltd
dec
dec
cmpsb
xchg
pop
and
outsb
out
jmp
cmp
nop
push
scas
mov
aad
and
add
mov
je
mov
enter
jae
outsl
xchg
dec
or
rcr
lods
daa
sidtl
sbb
ret
stos
jno
cmpsb
cmp
lods
or
pushl
mov
je
nop
hlt
push
ret
push
repnz
aaa
test
add
push
in
in
adc
pop
mov
or
les
xchg
cmpb
fbstp
cmp
aas
and
pop
je
dec
pop
test
mov
shl
aad
fs
fisubs
mov
sbb
cli
repz
and
in
dec
into
insl
pop
mov
sbb
push
cli
xchg
mov
sub
mov
fidivl
cmp
aas
adc
adcl
jne
daa
mov
fisubl
aad
cli
push
push
sbb
sbb
movb
clc
mov
jmp
lock
repz
dec
in
fbld
rcl
cwtl
xchg
in
enter
or
test
std
sub
pop
ret
jns
orl
dec
test
int3
insl
aam
mov
in
push
add
scas
mov
cmp
cwtl
inc
popa
imul
pop
data16
movsb
push
jno
aad
ret
jb
sbb
jae
xchg
rorl
addr16
mov
cltd
add
imul
xor
fsub
cmovp
mov
bnd
or
int3
mov
pop
iret
es
and
mov
imul
aaa
jle
sub
cmp
xor
pop
sbb
and
scas
add
push
imul
adc
mov
std
jg
aam
xchg
jae
dec
xchg
shll
push
pusha
pop
fnstcw
cmp
leave
lods
mov
sbb
stos
jbe
cmp
jbe
xchg
inc
movl
pop
pop
pop
push
cmpsb
mov
lods
xor
stc
sbb
lods
push
scas
out
mov
adc
mov
lea
stos
lods
push
mov
movsl
and
inc
add
movsl
jb
adc
adc
andb
and
pop
ss
fdivs
mov
push
fs
mov
or
and
es
push
insb
call
fsubr
jae
xor
fidivrl
daa
jae
pop
sbb
push
xchg
push
xchg
mov
dec
mov
push
sub
or
cmp
test
cmp
ret
cmpsb
and
shrl
fistps
imul
cmpl
fstpl
jnp
sub
add
bound
aas
imul
scas
stos
push
xchg
and
jb
and
adc
push
in
sub
inc
mov
out
xor
cmp
push
lret
sbb
mov
adc
jb
xchg
sub
popa
push
ret
and
fadd
cltd
sub
xor
and
cmp
push
mov
add
or
and
jno
nop
insl
mov
leave
jbe
iret
add
sub
insb
adcb
mov
adc
jno
sbb
xchg
and
ficoms
cltd
push
lahf
das
sbb
outsl
das
or
and
mov
mov
loop
sbb
push
divb
inc
dec
pop
pop
mov
lret
inc
clc
lods
xchg
xor
pusha
inc
int3
mov
lock
pop
xor
testb
in
leave
mov
popl
movsb
mov
int3
xor
inc
inc
or
gs
cmp
imul
lods
loope
xor
clc
stos
and
xchg
dec
dec
into
add
fdivp
mov
inc
jno
or
rcrb
adc
xchg
jl
pop
lock
pushf
cli
mov
xchg
fistpl
ret
fwait
jg
adc
mov
push
aaa
push
and
or
jb
fucomip
fisubl
cmp
cmc
xor
adc
mov
incl
ret
mov
out
int3
int
repz
sbb
push
mov
sub
mov
xadd
pop
fldenv
lret
fcmovbe
xchg
xorb
mov
stos
es
cwtl
cmovle
inc
jle
inc
mov
test
push
sti
push
cmp
std
test
jg
mov
xchg
lods
and
pop
push
cmp
xor
sbb
adc
xchg
sub
daa
adc
push
outsl
push
stos
inc
mov
scas
push
iret
bound
push
lods
jo
in
les
loopne
lahf
xor
int3
sub
pop
mov
outsl
adc
clc
jmp
and
mov
inc
test
inc
sarb
inc
sbb
xchg
adc
pop
gs
xchg
sbbl
scas
movsl
es
sahf
scas
test
jge
push
xchg
sbb
xchg
xor
imul
test
push
test
push
dec
xchg
out
or
bound
inc
adc
lret
in
aam
out
test
push
mov
jmp
test
aad
mov
inc
cwtl
pop
stos
mov
pop
nop
mov
xor
push
or
subl
sub
in
or
nop
xchg
mov
push
jecxz
jbe
xchg
push
mov
loope
or
lock
xchg
ret
and
dec
pop
mov
sbb
pop
xor
cmp
pop
mov
dec
sti
mull
or
popa
xchg
cli
bound
cmp
call
cmp
fstp
dec
jp
arpl
push
notl
int
cmp
jmp
lret
pusha
fwait
imul
test
lea
pushf
sbb
xor
call
push
mov
mov
mov
cmp
inc
ja
in
push
push
and
pop
jmp
adc
sahf
inc
or
clc
andb
xchg
imul
or
lock
jl
mov
imul
mov
push
add
lods
and
cmpsb
sub
repnz
or
fisttpl
pushf
pop
push
ljmp
clc
lahf
jns
push
xchg
sbb
std
sarb
or
insb
mov
int
mov
in
mov
push
mov
mov
lods
jnp
in
push
dec
ss
adc
jmp
mov
pop
inc
sbbb
pop
sub
aad
ret
push
call
outsl
std
ds
stos
repz
jecxz
pop
or
es
insb
inc
mov
lock
push
or
inc
mov
cmpsb
rcrl
dec
decl
stos
sbb
ljmp
lcall
mov
jae
or
lahf
xor
lods
imul
mov
cmp
adc
arpl
aam
pop
and
cmp
fldcw
mov
mov
lahf
xchg
scas
mov
adc
fnstsw
pop
sub
inc
ret
mov
loop
add
loopne
movsb
dec
or
cmp
subl
and
inc
pushf
gs
lcall
mov
jno
jg
mov
mov
push
xor
fadd
jbe
test
mov
mov
jne
pop
sbb
ret
outsl
cwtl
jge
scas
lods
jb
fadds
ret
and
sbb
ret
sub
inc
jl
adc
pushl
adc
out
ret
xor
jne
jmp
daa
cwtl
push
push
test
lock
inc
sbbl
movb
jnp
dec
sbb
pop
pop
pop
dec
mov
inc
adc
lds
shrl
mov
xchg
dec
lods
lds
sub
adc
movsl
int3
mov
mov
dec
mov
mov
aad
push
adc
adcl
xchg
test
adcl
sbb
push
in
cmpsl
or
fidivrs
in
push
jo
inc
xor
dec
aad
push
fs
cltd
lret
aas
es
in
dec
pusha
in
lret
stos
xor
pop
push
ljmp
popa
shlb
push
cmpsb
icebp
stc
lods
add
pop
mov
mov
fsubs
push
out
cmp
mov
rclb
lret
lea
out
cmp
ss
test
call
mov
pop
cmp
xchg
jns
pop
sbb
test
mov
fisttpl
imul
jp
xchg
fadds
in
dec
cltd
cmc
outsl
test
cmp
inc
adcb
lods
das
jp
mov
sbb
push
insb
es
ljmp
in
dec
inc
js
pop
mov
ret
mov
pop
hlt
xchg
cmp
je
imul
and
push
mov
mov
rcll
xchg
sbb
mov
sub
cmpsl
cmpsb
lods
add
sub
inc
loopne
xor
testl
in
enter
mov
dec
notl
popf
pop
out
or
rcrl
push
faddl
aad
dec
jl
adc
cmpsb
pop
dec
lea
int
out
fldl
xlat
push
movsb
test
cmp
fmull
cmpsb
stc
jl
mov
adc
and
popf
jl
rclb
insl
addr16
sbb
jns
push
jp
pop
sti
orb
iret
arpl
imul
or
sbb
int
jnp
add
xor
push
into
dec
add
adc
add
fadds
adc
dec
mov
or
adc
and
sub
or
xorl
adcl
and
add
imul
jp
xchg
and
or
cmp
repz
negl
push
jbe
jp
mov
cwtl
add
pop
jge
xorb
mov
arpl
mov
or
fiadds
inc
call
insb
or
push
pop
nop
xchg
adc
cltd
xor
test
jae
push
and
xchg
dec
pop
cmp
inc
xchg
cmp
or
xchg
mov
mov
cmp
dec
inc
lahf
test
popf
pop
cs
xor
outsl
xchg
popa
jmp
mov
adc
push
or
mov
jl
or
cltd
mov
fstpt
inc
jg
mov
pop
sub
jo
mov
enter
icebp
enter
sub
cmp
and
push
cli
sub
faddl
adc
mov
dec
stos
mov
mov
push
mov
mov
int3
mov
push
mov
notl
and
cmp
add
cmp
or
popl
lret
mov
mov
mov
mov
popf
out
adc
xchg
int
and
dec
test
sub
adc
mov
inc
test
aas
cs
fiadds
in
leave
pop
inc
into
mov
sub
ja
loopne
dec
xchg
loope
pushf
push
dec
mov
mov
jmp
jge
xchg
popa
jmp
bound
data16
dec
xor
sub
push
xor
mov
jae
fdivrl
lods
xlat
jb
lcall
inc
adc
in
xchg
decb
jge
pop
fdivl
pop
jg
stos
xor
sahf
jecxz
in
push
es
sbb
dec
enter
pop
push
loop
jbe
sbb
lret
xor
std
ja
fidivrl
sub
scas
jl
sub
add
adc
xor
mov
or
sub
mov
movsl
mov
cmp
xchg
dec
int3
lock
lret
jno
in
std
and
lcall
jl
mov
adc
cmp
movsl
ja
dec
push
mov
ret
movsl
pusha
inc
or
lret
movsb
mov
mov
mov
push
in
mov
mov
lock
out
mov
mov
into
mov
jmp
pop
cmp
xchg
and
inc
into
sti
fiaddl
jbe
iret
addr16
mov
xchg
loopne
and
idivl
lods
mov
ficoml
jle
mov
popw
fisubrl
sarb
sub
mov
iret
mov
ljmp
nop
push
test
cmp
and
std
xchg
outsb
les
dec
jge
xchg
lret
sarl
je
sbb
dec
sahf
xchg
and
loope
out
sahf
mov
cmpsl
ljmp
movsl
cmpsl
sub
cmp
das
sbb
mov
pop
fcmovnu
push
imul
lods
and
xchg
sub
gs
or
fcomps
sbb
insb
dec
sub
xchg
mov
sub
ljmp
sbb
vpcmpgtd
or
gs
ja
jg
xor
fistpl
cmpsl
das
loopne
xchg
movsl
cmc
loopne
push
jbe
xor
or
xor
sahf
pushf
mov
inc
addr16
pop
mov
jl
sbb
out
mov
pop
xchg
cltd
mov
cmp
stos
int
lods
ret
add
test
mov
addr16
ja
sbb
cld
sbb
mov
push
lar
add
xchg
addr16
in
inc
pop
cmp
fidivrl
or
push
cli
stc
sub
mov
ss
or
addr16
nop
fnsetpm(287
enter
inc
outsl
sub
hlt
push
push
pusha
push
aaa
aaa
test
int3
dec
jl
out
out
jo
and
repnz
sti
xor
orb
pushf
fisubrl
arpl
enter
push
pushf
sbb
aaa
jg
scas
nop
test
les
cmpsl
mov
inc
dec
fcoms
jae
xlat
pop
adc
sub
aaa
sbb
push
dec
inc
xor
ja
mov
pusha
fisubl
out
xchg
pop
pop
and
les
fdivrs
fildl
out
outsl
dec
push
mov
inc
scas
cmpsb
adc
mov
fdivrs
rcrb
jle
adc
inc
pop
dec
dec
es
push
jns
daa
mov
loop
sub
sbb
and
loopne
clc
test
daa
pop
outsl
or
push
lret
add
mul
jae
xor
cmpsb
ja
dec
and
or
repz
loope
dec
mov
mov
push
or
mov
and
es
jge
insb
in
test
jno
nop
out
fiaddl
cmp
add
inc
mov
push
sbb
jne
sub
cld
ror
xchg
adc
push
lcall
xlat
push
push
leave
mov
jle
lods
scas
inc
outsl
adc
mov
push
inc
imull
outsb
jecxz
sbb
lahf
pop
lret
pop
sub
sahf
hlt
pop
je
flds
movsl
dec
insb
test
stos
inc
xor
cs
test
push
hlt
xchg
pop
dec
fisubrs
pusha
mov
or
popa
pushf
scas
cwtl
out
fstpt
lahf
cmp
mov
adc
cmp
sti
cmpsl
lock
push
jae
jbe
jnp
stc
and
das
inc
inc
push
int3
push
adcb
aam
int
fisttps
daa
mov
jno
mov
stos
fdivs
dec
fisubl
les
push
mov
xor
das
mov
jo
icebp
outsl
bound
jmp
pusha
dec
setae
out
dec
inc
mov
cs
or
xchg
push
xchg
jp
mov
insl
stc
adc
add
inc
xchg
pop
out
mov
dec
mov
push
roll
or
cmp
test
push
enter
xor
and
adc
mov
icebp
xor
ja
mov
fwait
dec
cmpsl
ret
frstor
inc
sbb
aad
outsl
js
ds
xor
lcall
xchg
movsb
adc
xchg
sbb
sub
jecxz
aad
scas
pop
leave
icebp
xchg
out
sub
cmpsb
bswap
sbb
hlt
cmp
and
pop
adc
mov
mov
pop
sbb
push
cld
movsb
xchg
out
into
jl
mov
popf
gs
aaa
push
adc
sub
stos
jmp
test
mov
fsubs
xchg
xchg
push
lods
cmpsl
scas
sub
pop
cld
xchg
sbb
adc
cli
xchg
add
movsb
xchg
pop
mov
push
mov
orb
sub
jecxz
movsb
jg
and
sbb
fcmovbe
and
outsb
pushf
jmp
ficoml
jnp
sub
mov
pop
fwait
mov
pusha
dec
add
sbb
popa
push
out
cmp
dec
add
idivl
stos
inc
stc
add
adc
out
pop
ret
dec
jmp
push
cmc
loope
ss
xchg
icebp
or
cmp
xlat
dec
loop
or
add
push
outsl
sub
mov
pop
push
ljmp
xchg
call
mov
fwait
sub
xchg
push
arpl
out
lods
mov
shrb
inc
cmpsl
or
out
pop
cwtl
push
cmp
cmp
test
add
inc
mov
dec
into
insl
icebp
sbb
jns
lods
in
cwtl
les
sbb
adc
outsl
and
std
adc
jecxz
pop
inc
test
jno
mov
mov
in
out
repz
roll
mov
negb
xchg
dec
push
jns
out
arpl
imulb
mov
cmp
or
cmpsl
mov
jecxz
test
mov
inc
mov
bound
mov
jbe
push
adc
pop
jg
jnp
cmp
shlb
pop
cmp
or
clc
shll
cmp
cs
mov
js
mov
repz
stos
pop
xchg
icebp
out
cmp
movsb
je
out
and
sub
dec
xchg
inc
nop
xchg
ret
rorb
cmpsl
shll
pop
popa
jle
sti
hlt
sahf
aam
xor
dec
xor
push
push
sbb
sub
mov
jno
imul
pop
cmc
inc
cmp
and
inc
cmc
ja
ja
inc
mov
xlat
aas
insl
mov
imul
addr16
xchg
call
mov
mov
adc
ljmp
pop
scas
jl
jp
adc
scas
mov
stc
and
out
mov
push
push
test
sahf
jns
ret
shll
or
scas
negl
js
pop
mov
dec
movsl
jbe
push
gs
dec
xor
aaa
push
lret
lds
pop
jno
int
mov
fldlg2
cwtl
xchg
imul
into
xchg
and
pop
enter
inc
push
insb
lret
cmp
add
push
ljmp
xchg
adc
xchg
sbb
scas
or
mov
loopne
test
xlat
pop
push
pop
psubw
sbb
pop
int3
lahf
inc
cmp
mov
mov
inc
mov
outsl
and
pop
cmpsl
xor
mov
clc
sub
stos
jge
enter
jbe
adc
outsl
jb
xor
mov
das
or
lahf
sti
popa
add
icebp
adc
les
sub
pop
mov
movsb
push
in
jne
lahf
push
std
aad
mov
pop
fisubrs
xchg
pop
stc
push
or
in
mov
dec
mov
mov
dec
push
sbb
pop
push
mov
lods
cwtl
inc
or
mov
fsubrs
inc
adc
in
sti
and
jp
cmc
mov
fdivrs
xor
and
in
rcrb
out
adc
inc
push
sub
ret
imul
je
and
jp
mov
cmpsl
jo
pop
add
mov
sub
mov
mov
lock
ja
dec
lret
push
incb
test
incb
mov
and
jmp
xor
lods
fidivrs
out
iret
sbb
in
js
mov
ljmp
pop
mov
movsl
mov
inc
add
mov
mov
push
pop
jne
push
xchg
out
mov
fwait
shlb
scas
ja
insb
pop
inc
or
cmpsl
out
cmp
out
and
lock
aaa
es
ss
fdivrs
xor
mov
sbb
add
cmovle
stos
enter
aam
or
roll
sti
je
fstpt
pop
push
fidivl
pop
sub
mov
sub
pop
xchg
add
mov
scas
ss
lods
mov
scas
xchg
in
sub
push
jb
and
out
ret
imul
inc
lods
scas
scas
push
das
shl
call
stos
xor
or
xor
or
inc
repz
push
popa
xchg
cwtl
or
pop
scas
or
iret
movsl
iret
filds
xor
jb
mov
push
faddl
scas
ss
movb
loopne
xchg
inc
out
dec
fwait
sub
pop
clc
mov
cmpsb
cltd
xor
mov
lcall
cwtl
arpl
and
jbe
cltd
mov
push
sub
imul
xchg
jne
mov
mov
aad
add
jbe
cwtl
sbb
sti
pushf
popl
in
cltd
jnp
sub
sbb
stc
jg
stos
rcr
imul
lods
mov
and
lahf
xchg
mov
js
in
movsb
mov
cmp
add
or
in
mov
std
inc
push
test
lods
push
inc
lcall
sub
push
push
mov
pop
shrb
aad
adc
out
add
rol
or
xchg
jp
das
adc
adc
lret
jbe
mov
gs
outsb
lods
xlat
je
pusha
mov
lcall
sbb
idiv
xor
xchg
jb
cmp
lock
xor
add
inc
ret
scas
mov
lahf
add
and
les
jecxz
dec
xlat
test
sarl
or
js
roll
imul
mov
iret
xchg
repz
dec
sbbl
nop
int
in
mov
loopne
inc
out
in
jg
pop
lock
pop
dec
clc
ja
fdivr
rcrb
xchg
cld
adc
push
jg
lret
das
jecxz
pop
repz
add
cmpsb
mov
pop
inc
xchg
ja
mov
xor
push
mov
into
and
rorl
lods
loopne
xor
sbb
mov
inc
or
xchg
int
pop
aam
mov
test
shll
inc
mov
xchg
inc
popa
repz
fbstp
mov
fs
sub
xor
shrb
xor
cmp
or
shrl
cmp
dec
adc
cmp
ja
push
push
js
hlt
out
inc
data16
and
cmp
mov
push
pushl
sub
sub
add
in
push
mov
cmp
xchg
sbb
and
fimuls
mov
push
pop
jne
sbb
les
mov
jmp
loopne
add
push
push
xorl
add
cmp
push
rcrb
ja
xchg
sbb
andl
lahf
cltd
add
cmp
xor
xchg
adc
pop
pop
sbb
in
push
jg
dec
jmp
mov
iret
or
js
imul
test
jb
xchg
cmp
push
mov
out
xchg
pop
xlat
fildll
sbb
in
or
das
ja
push
test
sub
int3
jns
clc
clc
mov
into
mov
es
jno
ljmp
test
dec
loop
lock
test
rcr
test
sbb
sarl
dec
add
cmp
in
mov
sbb
mov
test
jnp
jecxz
data16
into
pop
pusha
xlat
leave
mov
adcl
leave
andb
add
lock
xor
aaa
push
pop
mov
add
test
cmp
jecxz
mov
jno
movsb
cmp
add
iret
negb
and
jno
sbb
ds
lods
ficoml
push
mov
jne
icebp
jecxz
out
or
imul
arpl
mov
xchg
mov
and
popa
inc
jo
xchg
in
movsl
faddl
xchg
test
mov
add
xchg
mov
xor
into
pop
sbb
mov
dec
mov
imul
icebp
das
push
pop
daa
inc
arpl
fsub
in
xchg
dec
out
sbb
loop
jge
jns
cmp
imul
out
xchg
outsb
imul
jp
add
sahf
jg
ret
sub
pusha
fwait
lods
aas
cmp
rorl
inc
mov
pop
popf
xchg
or
cmp
stc
subl
lea
xchg
lret
mov
cmp
xorb
fld
aad
pop
in
and
je
xor
aam
sbb
repz
aad
lret
inc
pop
push
bound
and
inc
xchg
imull
in
call
inc
loope
push
out
aam
flds
pop
xchg
xchg
pop
loopne
mov
push
add
scas
pop
mov
sbb
int3
outsl
dec
dec
push
mov
bnd
lret
pop
repz
aaa
jecxz
mov
pop
fdivl
adc
xor
dec
jge
out
repnz
arpl
stos
ja
stos
lret
xor
insl
ss
fucomp
sbb
pushf
mov
inc
sub
and
pop
in
lds
lcall
cmpsb
fbld
pop
decl
ja
cmp
js
add
imul
sbb
mov
out
popf
fmul
daa
repnz
dec
push
xchg
ficoms
inc
and
sbb
xchg
pop
inc
aam
dec
cmp
adc
pop
adc
and
sub
and
je
mov
cmp
inc
push
sbb
rorl
dec
lods
les
cmp
xchg
es
xchg
adc
push
dec
nop
pop
fs
gs
cld
add
sbb
jmp
jb
movsb
mov
push
and
mov
dec
inc
mull
test
lods
imul
cwtl
cmc
and
jae
int3
adc
out
add
stc
in
orb
jg
pop
cmpsb
push
push
or
cmp
xor
mov
popf
inc
adc
adc
out
xor
pop
test
jl
scas
mov
mov
shr
rcrl
adc
sub
inc
hlt
movsb
orb
iret
lock
adc
cmpsl
inc
adc
inc
arpl
into
out
repz
cmp
sub
xchg
pop
repz
cmpl
xchg
jle
cmp
sbb
fs
test
test
mov
aaa
cwtl
cmp
jg
add
mov
adc
test
add
lea
xor
jecxz
mov
ror
lods
dec
imul
cmp
lret
test
cmp
mov
add
pop
cli
inc
test
push
ja
test
xor
roll
inc
jg
aad
jl
mov
sahf
adc
sub
outsl
addb
fld
int3
jmp
lods
adc
fldenv
movb
or
jb
fbstp
xchg
stos
popf
and
cld
notl
aaa
insl
popa
add
xchg
out
scas
cmp
adc
push
pop
jno
xchg
lcall
sbb
mov
xlat
shlb
jb
lods
jl
jecxz
sub
inc
lock
mov
subb
into
mov
mov
sar
negl
in
subl
les
pop
mov
add
xchg
out
stos
sarb
leave
out
stos
hlt
adc
rcrb
and
sbb
repnz
mov
shlb
arpl
and
or
fwait
les
movsl
insl
cld
jbe
cld
out
ds
mov
bound
dec
mov
js
stos
pop
xor
imul
std
aaa
loopne
popl
xchg
stc
pop
mov
push
pop
arpl
mov
gs
push
bound
mov
fisubs
sbb
pushw
popa
popa
ret
mov
dec
jecxz
iret
jge
mov
aaa
std
xchg
movsl
jbe
data16
add
mov
fs
lods
inc
repnz
adc
push
dec
out
cmp
xor
jnp
ret
mov
insb
lods
lcall
fldt
mov
push
aas
fildll
jne
jmp
mov
dec
movsl
pop
mov
xchg
iret
sti
mov
sbb
xlat
xor
or
cwtl
or
xor
xor
xchg
cmp
pushf
inc
mov
inc
ror
pop
or
aam
popf
mov
jb
push
fmul
or
xchg
xchg
add
push
jae
test
movsl
push
dec
ljmp
inc
jge,pt
adcb
pop
or
pop
mov
xor
mov
jmp
jae
arpl
jb
or
mov
mov
bound
lret
adc
xchg
or
rorl
cmp
jmp
xor
add
adc
sahf
fistps
in
pop
daa
adc
popa
fwait
jmp
adc
fbld
mov
adc
dec
or
inc
add
or
cltd
lods
cmp
add
push
fwait
jns
sahf
mov
fdivl
daa
int
sbb
mov
xchg
mov
mov
push
cmp
xor
faddl
lea
inc
pop
scas
in
mov
pop
push
movsl
enter
xlat
fs
idiv
adc
fidivrs
push
pop
dec
adc
jmp
or
sub
dec
jmp
ss
lds
mov
lea
test
lcall
jbe
mov
out
popa
adc
rcr
xor
adc
subb
cld
cmpsb
loop
imul
jb
movb
pop
pop
and
xchg
pop
xchg
popa
rorb
mov
cmp
gs
cli
mov
nop
shrl
das
xchg
or
jge,pn
data16
mov
sub
push
scas
inc
cmp
cmp
es
add
into
jle
push
out
push
into
pop
repnz
adcb
inc
lock
pop
outsb
jmp
push
mov
sbb
int
incb
movq
xchg
movsb
repz
divps
or
call
fcoms
cltd
shrb
push
icebp
mov
jns
lret
dec
inc
stc
adc
add
pop
shll
jns
jno
inc
shrb
push
test
lods
adc
lcall
ss
jge
add
adcl
rcll
cld
mov
push
leave
sti
dec
fnstsw
cwtl
cmc
mov
pop
inc
dec
push
dec
ljmp
add
cli
dec
jmp
fnop
mov
decb
outsl
xchg
mov
mov
aaa
clc
push
loope
cmp
test
mov
ss
adc
adc
pop
sti
xor
jl
in
xchg
mov
faddl
popa
adc
xor
cmc
ret
mov
bound
in
cs
jmp
sub
mov
shll
or
dec
push
mov
icebp
mov
inc
out
pusha
mov
inc
xchg
icebp
xchg
sti
and
dec
push
cmp
adc
insb
insb
mov
iret
and
dec
test
shrb
test
inc
nop
jmp
out
sti
repnz
imul
fwait
dec
adc
loope
idiv
xchg
icebp
lds
pop
repz
xor
mov
xchg
repnz
and
xchg
mov
adc
pushf
movd
xchg
cmpsl
sub
dec
cwtl
ds
ret
lock
fwait
add
add
fidivs
outsb
inc
sbb
in
aas
mov
pushf
sub
sbbl
int3
and
scas
mov
ds
inc
mov
sbb
lods
stc
dec
outsl
stos
pop
xchg
test
inc
dec
xor
inc
mov
repz
iret
in
xchg
xchg
or
scas
mov
jne
jg
adc
pop
lcall
iret
sub
getsec
enter
icebp
lods
push
out
pop
and
push
aam
icebp
dec
inc
mov
test
out
movsb
mov
out
and
cs
push
in
int
popf
mov
movsl
or
jae
mov
pop
stos
negl
xor
rclb
outsb
pop
cmp
xchg
mov
cld
xor
inc
adc
in
daa
jne
cwtl
push
dec
sub
gs
cmp
xlat
rorl
das
cmc
push
test
sti
lods
lahf
sub
sub
cli
js
mov
gs
je
imul
mov
xchg
pusha
aaa
aam
mov
mov
repz
and
push
fwait
jae
cmp
mov
and
cld
leave
adc
adcl
adc
movsb
or
cmp
cmp
fdivr
scas
bound
fldl
xchg
mov
jns
sub
mov
cmc
sub
jg
jecxz
int
fdivrs
jo
cmp
push
mov
fsin
mov
je
outsb
pop
push
scas
sbb
lods
push
mov
jl
pop
clc
movsb
lods
es
repz
push
sti
pop
sbb
xchg
call
pop
mov
pushf
cwtl
pop
add
js
adc
jp
aad
push
cmpsl
cmpsb
mov
ja
jp
shlb
inc
sub
sarb
push
cmp
pop
cltd
and
jp
mov
in
jmp
push
push
mov
insl
outsl
lahf
stos
mov
and
sbbl
mov
enter
in
xorl
mov
lahf
pop
push
int
and
adc
dec
lds
mov
cmpsb
das
mov
test
gs
loop
push
jbe
outsl
adc
js
xchg
push
adc
or
or
stos
add
push
add
leave
out
movsl
nop
scas
push
xchg
shll
pop
mov
cmp
filds
adc
sub
cwtl
popf
rol
pop
xchg
in
adc
loop
pop
stos
lds
movsl
rol
sub
mov
cmp
jns
mov
out
xorb
push
leave
and
push
and
jl
mov
repz
mov
or
pop
xchg
jecxz
push
add
test
cmp
xchg
jae
xchg
out
insl
dec
sub
ja
dec
lahf
rep
jle
ja
or
cmp
or
dec
and
mov
iret
sub
in
int
pusha
lods
fwait
and
pop
rcrb
pushf
in
arpl
adc
pop
daa
cmp
sub
std
add
cmc
mov
lods
and
xor
ret
aaa
or
insb
into
push
mov
pushf
insl
lret
shll
xor
out
je
xchg
jb
std
or
add
cmp
pop
and
out
rcrl
pop
sbb
ds
bound
jno
pop
data16
adc
cld
xor
test
jo
test
mov
add
stos
pusha
cmp
push
shlb
lea
scas
mov
enter
das
das
data16
sub
jb
imul
fs
mov
sub
loop
shrl
cmp
cld
mov
xchg
scas
int
and
rcl
in
xchg
jg
in
icebp
rcl
xlat
dec
incb
push
mov
inc
or
mov
ret
nop
scas
xchg
in
and
sub
mov
divb
xor
mul
adc
sbb
lods
sub
mov
out
subl
sub
push
add
popa
mov
mov
xor
je
fdivrl
inc
inc
jge
movsl
imul
pop
fwait
push
cmp
add
sbb
int3
add
push
in
cld
xor
ljmp
loopne
mov
jecxz
inc
lcall
pop
push
cmpsl
adc
dec
ret
frstor
das
jp
psubb
adc
add
int
inc
ja
xchg
jge
ljmp
addr16
jmp
leave
clc
sbb
xchg
shrl
scas
jb
mov
notb
idiv
in
lods
loop
subb
adc
scas
lcall
or
dec
stos
scas
inc
aas
pop
xor
das
cli
daa
pop
and
mov
mov
in
fsubrp
push
jno
and
mov
xchg
pop
push
mov
jmp
mov
mov
mov
enter
repnz
outsb
and
mov
adc
sarb
das
outsl
je
mov
imull
shl
xor
jmp
mov
das
sbb
in
or
dec
and
xor
jo
out
mov
mov
cmp
les
loop
adc
ljmp
push
fdivrs
mov
push
or
stos
mov
or
aam
fists
loope
pop
pop
cwtl
daa
bts
xchg
cmp
mov
cmp
lcall
mov
xor
cmc
and
push
mov
lds
mov
loope
test
hlt
xchg
or
and
out
dec
jo
test
mov
cmp
or
jns
or
sbb
and
dec
inc
testl
cmp
jmp
adc
and
icebp
jns
xchg
mov
adc
push
les
out
jecxz
pop
std
push
xor
addl
scas
dec
push
sahf
jne
mov
lea
xor
mov
inc
jnp
arpl
push
push
jge
push
mov
les
mov
adc
mov
lahf
pushf
xchg
push
mov
lds
inc
aaa
mov
loop
push
or
xchg
fimuls
xchg
pop
leave
mov
dec
and
pop
popf
stos
stos
dec
xchg
mov
stos
inc
sub
jo
sbb
xchg
push
dec
scas
pop
imul
lods
or
out
outsl
mov
or
fiaddl
hlt
stos
pop
sbb
cmp
insl
pop
shrl
stos
ret
dec
dec
sti
sti
push
push
mov
stc
dec
dec
loopne
mov
xchg
sahf
or
adc
xchg
mov
jge
idivb
inc
inc
adc
int3
adc
xchg
and
fadds
push
fs
sahf
mov
push
inc
cmp
cmpsl
sbb
int
mov
nop
push
xchg
sub
mov
jmp
jne
jae
mov
int
test
addr16
pop
aam
add
sub
iret
jo
in
inc
sub
push
cmc
adc
mov
inc
push
dec
test
inc
xchg
in
inc
fdivrl
and
sub
push
in
orl
mov
add
mull
stc
cmp
sbb
es
jmp
mov
rcr
push
xchg
clc
mov
notb
into
sbb
jne
in
shll
ss
mov
fcmovnu
ljmp
hlt
mov
cld
lds
cmp
inc
mov
jno
dec
mov
loopne
mov
nop
gs
sub
aas
mov
pop
add
out
pop
push
mov
jo
pop
cmp
xor
and
repnz
push
jb
jb
inc
aas
mov
cmp
cld
outsb
add
shl
ficomps
cmpsb
fwait
push
lret
sbb
scas
or
aam
dec
push
loope
mov
cmpl
xchg
mov
sti
inc
inc
lret
push
push
mov
loopne
je
movsl
mov
gs
insl
es
ret
popa
pushf
inc
lock
adcl
ss
pop
jo
xor
dec
push
stos
and
in
outsb
or
mov
sahf
fiaddl
cmpsl
fidivs
mov
lods
ds
out
jp
inc
std
or
jge
sbb
jne
cmp
xor
shl
xor
mov
fldt
stos
nop
xchg
sub
sub
in
or
adc
mov
inc
sbb
fadds
pop
shlb
into
dec
jl
or
or
inc
pop
sbb
fwait
pop
xor
cli
and
and
xchg
xor
scas
cltd
push
lods
pusha
pop
fsubs
mov
movsb
nop
lret
sbb
push
or
je
shlb
icebp
outsb
adc
inc
mov
inc
jmp
sbb
xchg
dec
bound
cwtl
sbb
xor
loope
sub
sub
cmp
movsb
and
mov
lock
in
pop
lock
mov
xor
add
fsubrs
shl
sbb
nop
sub
loop
push
mov
out
mov
out
rcll
std
cmp
clc
xabort
daa
scas
jge
xlat
add
lret
mov
lock
add
mov
pop
push
push
scas
incl
cltd
aas
iret
dec
add
mov
pushf
xchg
int3
cwtl
or
sbb
fs
lret
dec
cmp
addr16
jl,pt
dec
add
loopne
xchg
aaa
cmp
push
ds
cmp
mov
push
test
xchg
inc
iret
jae
mov
out
mov
mov
in
adc
pop
mov
stos
mov
or
rcll
xchg
mov
jmp
jbe
xchg
fcoms
jae
cmp
iret
popf
sbb
push
mov
pop
sub
imul
jns
mov
xchg
add
lds
int3
popf
adc
sbb
mov
xor
xchg
popa
cmp
add
pusha
jne
cmp
sub
pop
outsb
in
mov
in
gs
jl
popa
jo
stos
mov
popa
leave
in
push
or
in
mov
add
and
sub
loop
ljmp
lret
or
test
outsl
mov
in
push
repnz
xor
push
in
sar
cmp
test
push
call
in
xchg
jns
in
adc
mov
pop
adc
movsl
mov
pop
int3
les
nop
ds
mov
and
mov
filds
pop
cmp
xchg
cli
push
push
xorps
test
push
mov
add
repz
xchg
cmp
add
aaa
mov
lods
ds
adc
scas
aad
dec
and
lds
in
push
divl
adc
test
sub
xchg
fists
mov
jecxz
sub
or
xor
fldcw
das
mov
and
jp
sbb
mov
xlat
and
jecxz
cli
push
mov
mov
sbb
outsl
rcr
mov
pusha
popf
sbb
push
pushf
repz
xchg
and
add
jmp
pop
sub
ja
xchg
rcrl
lods
xchg
push
stos
iret
loop
inc
jle
jbe
mov
psubsw
sbb
fbstp
ss
push
mov
mov
mov
sarl
xchg
cmp
push
cld
or
fsubrs
mov
neg
xchg
cwtl
cmp
fwait
pushf
dec
xchg
mov
push
movsl
pop
std
out
enter
dec
jg
shll
rclb
arpl
jmp
pusha
push
and
stos
jmp
lods
mov
sar
mov
imul
fbld
outsb
cwtl
scas
repz
fcoml
sahf
xchg
rolb
int3
jne
lods
insb
add
cmpsb
mov
stc
sbb
dec
shrb
pop
sbb
bound
sti
jae
ret
ret
test
out
xchg
mov
nop
sbb
int3
pop
nop
pop
mov
loop
imul
cld
cwtl
xor
dec
roll
xorb
sub
mov
inc
lea
enter
fnstenv
sub
jae
mov
xor
add
clc
mov
jl
mov
push
dec
shrb
jae
or
mov
sbb
pusha
mov
inc
adc
and
xchg
add
in
cmp
scas
adc
mov
add
insb
mov
mov
or
in
sub
lahf
stos
scas
inc
mov
push
lods
push
test
js
sub
lret
cld
xor
sbb
fldcw
mov
and
pop
aad
loop
bnd
pusha
cmp
jge
out
flds
cld
cwtl
push
mov
xor
outsb
cmp
pop
mov
adc
popa
pop
sti
cmp
sahf
ror
or
mov
jbe
int
and
test
out
enter
inc
xchg
es
sub
xor
mov
cld
pop
test
xchg
and
push
sub
dec
fisubl
jecxz
enter
pop
faddp
out
xor
dec
push
ja
sub
jl
aad
ja
loopne
outsb
movl
dec
jae
mov
aam
or
xchg
mov
jmp
fdiv
mov
out
dec
sub
gs
pop
cld
mull
in
in
lahf
xor
fisubl
insl
and
jle
cmp
inc
xchg
and
push
je
cli
jbe
cwtl
clc
dec
into
lcall
push
dec
nop
pop
lret
mov
jbe
test
xchg
dec
xor
arpl
sub
mov
orb
pop
xchg
jecxz
inc
add
or
cmpsb
lds
lret
imul
sbb
mov
sub
mov
and
daa
das
sbb
sub
sbb
jns
sbb
and
xchg
or
pop
leave
xchg
jns
dec
shlb
push
add
pop
xchg
sbb
fs
cmp
mov
mov
iret
sbb
inc
xor
loopne
or
inc
xor
mov
push
inc
lock
push
ss
cmpsl
lock
cmc
push
lahf
ljmp
mov
or
mov
pop
sub
mov
arpl
sti
call
xor
push
push
mov
sbb
or
addr16
lahf
or
xchg
pop
dec
pop
movsl
jle
mov
xchg
add
mov
cs
pop
jbe
dec
in
push
xor
mov
mov
shll
sub
jle
xor
call
push
movsb
push
push
ljmp
inc
mov
sub
push
mov
aaa
and
adc
movsl
push
add
jno
xchg
je
sbb
addl
push
int3
jg
mov
fldl
mov
jnp
scas
fistl
mov
movb
js
inc
pop
out
imul
insb
mov
dec
xchg
dec
ret
or
rcl
xor
inc
mov
hlt
sbb
stc
and
xlat
test
pop
and
data16
js
push
scas
test
sarb
test
mov
push
aas
std
cmpsb
in
test
nop
clc
xor
mov
sbb
xchg
cwtl
stos
aaa
pop
mov
cmp
out
jnp
out
mov
out
xor
pop
add
mov
cmpsl
loop
cli
fdivp
dec
or
xchg
daa
xchg
sub
xchg
jmp
jmp
out
jns
imul
jl
incl
lock
lea
dec
js
movsl
xchg
popf
cli
mov
and
out
xor
call
outsb
repz
mov
and
fstpl
rol
push
bound
insb
xchg
sarl
call
mov
jae
subl
addr16
dec
sti
das
out
pop
fs
sbb
jle
rcrb
cmp
daa
test
jbe
jg
mov
sub
pop
cltd
jo
cld
mov
mov
jp
lea
pop
inc
sbb
rcrb
cmp
pop
sbb
jle
aam
push
add
pinsrw
out
into
inc
rcrb
and
sub
and
sub
mov
push
fcomp
cmpsb
mov
rcrl
cli
or
jg
mov
movsl
xor
pop
cs
test
adc
pop
mov
xor
xchg
fs
pop
dec
adc
push
in
adc
jno,pn
cmpl
jns
sub
hlt
adc
sub
pop
or
movsb
jae
jp
ret
negb
mov
div
out
sbb
sbb
fstps
fsubrl
das
adc
out
ljmp
ds
mov
xchg
arpl
lods
cmp
hlt
push
push
mov
lahf
ja
pop
stos
gs
movsb
sub
sbb
outsb
lea
jae
aad
fisttps
xchg
mov
dec
adc
out
cmp
xchg
mov
cmc
mov
xor
hlt
fiaddl
faddl
xchg
fs
sub
mov
jge
sub
das
mov
inc
daa
jae
leave
mov
dec
xchg
dec
cmp
mov
pop
dec
xor
mov
sub
sbb
xor
mov
add
and
lods
sub
test
loop
pop
mov
inc
xlat
xor
add
in
add
mov
insl
jge
jmp
or
lahf
mov
pop
inc
and
rcl
mov
sbb
ljmp
loop
push
jecxz
hlt
pop
inc
mov
jmp
cmpsb
or
or
cld
jns
xor
cmp
into
jl
xchg
mov
mov
push
in
sbb
xlat
dec
mov
addr16
push
bound
mov
inc
rorl
out
loop
adc
dec
cmpsl
dec
fdiv
movl
xchg
ret
paddw
int3
pusha
in
sbb
out
nop
clc
and
outsb
jae
subb
leave
cli
mov
adcl
out
stos
jle
imul
pop
or
lods
mov
sub
jmp
imul
ficoms
mov
test
push
xor
fcmovne
cmp
or
and
adc
xchg
shl
mov
jmp
dec
sbb
sbb
icebp
pop
dec
testl
es
mov
lods
inc
pop
in
lret
fwait
jmp
pop
add
in
rclb
mov
out
iret
aaa
push
sbb
notl
mov
cmc
pusha
pop
test
arpl
sub
in
sahf
shr
push
bound
stos
lret
adc
lea
scas
add
popa
movl
mov
popf
mov
repz
mov
repnz
adc
movsb
test
inc
cmpsl
push
js
inc
lods
scas
out
cmp
dec
or
push
mov
or
pop
sub
dec
and
fidivrs
xor
xor
sbb
xchg
cmp
bound
or
cwtl
xorb
and
scas
aas
adc
xchg
fidivl
mov
cmp
xchg
cmpsl
cmpsb
inc
push
jbe
cmc
pop
push
or
jo
mov
pusha
int
mov
sbb
hlt
xchg
jno
cli
and
loope
out
and
cmc
mov
gs
cmp
test
cld
cmpb
test
cwtl
pop
mov
or
inc
add
in
pop
enter
gs
fcmovbe
push
scas
pusha
jl
mov
sub
add
ja
cli
nop
sub
repnz
enter
fistpll
cmpsb
jp
jg
xchg
insb
div
das
out
into
shl
ret
dec
xor
push
push
mov
mov
push
push
pop
int3
mov
xor
add
fs
rorb
cwtl
dec
add
movsb
stos
xlat
call
rcr
dec
add
lret
inc
mov
fwait
lods
leave
fucomi
sahf
ret
pop
push
sbb
ds
loope
icebp
insl
add
mov
aaa
mov
movsl
push
pop
loop
inc
outsl
cmp
inc
rorb
sbb
mov
in
les
lcall
mov
inc
xchg
pop
add
ds
xchg
jb
jp
jne
mov
dec
mov
andb
lcall
cltd
lret
pop
pusha
ljmp
clc
gs
sbb
fisttpl
adc
out
pop
mov
ret
mov
inc
inc
or
lock
jb
enter
lds
mov
add
fsubs
sahf
sub
mov
jle
pop
cmp
adc
sbb
insl
add
ficoml
push
lods
mov
mov
pop
stos
rclb
int3
fmull
pop
xchg
mov
fs
call
add
jo
sbb
push
fdivrs
jb
cmpsb
sub
push
ds
pop
or
push
push
aad
or
push
and
push
add
jno
imul
and
sarl
add
inc
inc
loope
fistpl
insb
or
lods
inc
pop
xchg
mov
mov
dec
cmp
adc
leave
rorb
xchg
scas
icebp
cld
pop
in
jo
jg
leave
or
pop
in
divl
sub
dec
loopne
addps
mov
pop
mov
mov
movb
xchg
aad
test
cld
fidivs
insl
jno
sar
rorb
mov
jge
push
jl
adc
jnp
lcall
jp
popa
mov
mov
es
rolb
pop
test
pushf
in
xchg
lea
push
pop
hlt
adc
test
arpl
jge
pop
lods
xchg
xchg
and
in
dec
mov
aam
jmp
insl
mov
sub
sahf
pushf
sbb
ret
push
pusha
mov
pusha
lods
std
stos
pop
mov
shl
adc
sub
sub
lret
pop
lock
fcomps
movsb
std
sub
aam
lahf
jb
ss
cltd
loop
add
mov
dec
pop
shrl
jg
addr16
mov
pusha
xor
fimuls
sub
das
mov
mov
mov
addb
daa
adc
loop
shll
aad
pop
fimull
mov
cmp
addr16
add
jmp
hlt
movsb
jmp
push
mov
push
aam
push
dec
xor
add
jnp
popa
push
popf
sbb
mov
push
jmp
jae
icebp
pop
out
nop
mov
mov
cmpsb
cmpsl
cmpsl
xor
movsb
gs
xchg
add
xor
pop
andl
sbb
mov
int3
stc
mov
iret
pop
xchg
pop
mov
push
addr16
pop
xchg
xor
adc
inc
or
add
popa
adcb
les
out
or
sub
sbb
xchg
adc
popa
sub
add
rolb
jecxz
mov
xor
adc
mov
adc
xchg
inc
mov
scas
andl
jns
inc
pop
mov
mov
jmp
xor
inc
mov
xlat
icebp
sub
imul
stc
notb
pop
pop
mov
std
inc
daa
mov
mov
jbe
add
pop
cmp
sbb
jae
xchg
adc
push
jb
fldenv
mov
dec
xor
les
pop
ret
aas
fmull
sbb
sbb
enter
mov
mov
cmp
xchg
leave
popa
or
sub
inc
lret
xor
and
cmp
repnz
adc
pop
jne
xchg
setp
push
ret
or
inc
enter
jb
lea
xor
jg
ljmp
pop
cmp
dec
mov
mov
shl
push
ret
mov
stc
lods
xorl
dec
bound
add
xchg
jecxz
fbstp
and
stos
mov
pop
xchg
lea
sub
fdivrl
push
mov
inc
fbld
or
lret
aam
lods
pop
sub
mov
out
cmp
iret
xor
lret
sub
aam
xchg
push
add
das
mov
xor
jae
or
jecxz
cmp
adc
cmp
lds
in
mov
or
insl
imul
cld
scas
jge
cmp
popa
dec
roll
sbb
lret
jg
out
and
mov
jns
cwtl
stos
mov
push
cld
rcrl
jo
dec
enter
inc
rcr
inc
or
jne
push
outsl
add
dec
stos
jbe
insb
push
popa
cmp
dec
jne
sbb
stos
scas
jne
aad
mov
mov
les
ja
fisttpll
cld
push
loop
mov
pop
scas
push
shrl
cmp
push
ret
add
mov
test
mov
add
mov
test
dec
lcall
out
cwtl
std
jb
sarb
movsb
mov
addr16
xchg
jb
mov
das
pushf
xor
dec
testl
xor
roll
add
in
jno
lahf
pop
mov
lods
call
pushw
mov
fdiv
nop
push
adc
and
dec
movnti
pop
xor
mov
mov
es
adc
adc
ds
or
and
cmpsl
fldt
out
lahf
enter
push
xorl
ret
push
and
pop
inc
adc
mov
xor
sub
or
jno
sbb
movaps
xchg
sub
into
jae
int3
lahf
sarb
add
xor
addr16
push
jbe
orl
xchg
scas
jge
cmpsl
data16
ljmp
mov
mov
cmc
inc
or
movsb
xchg
imull
sub
adc
out
or
and
mov
aaa
mov
mov
push
lcall
push
cwtl
xlat
movsb
add
jnp
jo
xor
sub
sbbl
cs
out
push
dec
mov
test
cmpl
pop
xchg
pop
outsw
and
sti
xor
xlat
stos
rolb
rcll
xchg
ss
mov
out
pop
jecxz
int
push
enter
insl
je
into
pop
xorl
pushf
std
cs
lock
adc
mov
idivl
les
jbe
rol
mov
push
jb
or
out
cmp
lea
sbb
xchg
sbb
xor
sub
pop
in
and
xor
adc
push
or
push
adc
shlb
fcomps
and
lea
stos
push
mov
loopne
pop
xchg
daa
rclb
popf
mov
enter
std
in
and
dec
mov
mov
mov
inc
dec
jb
inc
push
inc
push
ja
pop
xor
push
cmp
adc
outsl
sbb
inc
in
mov
jg
mov
xchg
loope
dec
data16
sub
add
out
pop
cli
enter
dec
sub
mov
icebp
push
mov
rcrb
sub
jmp
imul
inc
add
sbb
adcl
pushf
ret
xor
dec
je
xchg
rcrb
sbb
nop
push
push
dec
cwtl
outsl
popa
ret
shrb
jne
out
loope
add
push
push
jmp
int
aam
aas
bound
sbb
or
pop
sbb
push
mov
jnp
mov
fwait
jecxz
xor
jo
push
mov
xchg
push
mov
mov
sbb
fadd
xchg
stc
or
add
jmp
cmc
xor
xchg
cli
jle
inc
sbb
pop
add
shll
mov
sub
cltd
sub
adc
sbb
pusha
jp
fdivl
mov
mov
xchg
add
cmp
adc
inc
xor
jle
inc
stc
je
jge
cmpsb
mov
daa
jne
or
mov
xchg
mov
lods
or
stc
add
jge
jbe,pt
out
xchg
cmpsb
mov
ss
mov
lock
rcr
mov
jbe
orl
cmc
fnstcw
fisubrs
aam
sbb
mov
pop
ficoml
push
test
mov
scas
call
add
mov
push
lahf
push
sub
sub
mov
add
inc
movsb
mov
or
movsl
mov
cmp
lock
push
xor
push
pop
mov
cmpsb
mov
push
ret
mov
lret
sub
and
fstpl
js
enter
fiadds
sub
loop
out
fsubrs
xlat
inc
iret
or
mov
sub
pushf
xor
cld
or
sub
jnp
jg
stos
mov
cmp
mov
imul
sbb
add
arpl
mov
adc
in
cmpl
lods
inc
cmp
jns
lods
xor
repz
add
push
es
bnd
add
sub
inc
jo
cmc
jnp
mov
jg
repnz
icebp
jo
frstor
mov
and
stc
xchg
aam
and
dec
mov
fucomp
out
bound
neg
cmp
repnz
cmp
mov
xor
jo
cwtl
push
scas
xchg
mov
lret
inc
xor
gs
bound
inc
mov
xor
scas
or
and
or
scas
call
push
jno
scas
test
pop
mov
adc
lahf
into
xor
es
push
bsr
rcrb
jo
push
shll
mov
out
stos
out
pop
xchg
mov
mov
lock
ss
add
mov
arpl
cmp
scas
lock
xchg
jnp
les
mov
pop
or
cld
sub
icebp
add
outsb
xchg
push
inc
jle
stc
xchg
test
jl
xor
pushf
jns
xchg
cmpsb
jge
lods
mov
mov
xor
mov
and
sahf
push
push
sub
in
cmp
mov
outsb
jge
ret
jg
inc
jo
andl
in
icebp
inc
mov
and
cmpsb
repz
leave
nop
or
push
push
cmp
fs
out
mov
mov
add
jg
lods
and
or
fstpt
sbb
sub
lods
mov
cmpsb
or
mov
fisttps
ffree
pop
lods
fwait
les
cmc
pop
pop
fimuls
jmp
rcrb
dec
movsl
inc
push
fwait
dec
test
pushl
push
push
out
ss
inc
in
jae
test
mov
cmp
rcrb
mov
and
rorl
push
mov
gs
dec
repz
clc
mov
shl
jbe
hlt
sub
hlt
mov
mov
inc
in
jns
mov
rcrl
jp
sub
imulb
add
icebp
adc
jge
aam
or
repz
cmc
out
aam
xor
mov
mov
push
movsl
movsb
call
and
pop
setae
xchg
xchg
test
dec
and
xchg
cmp
ljmp
shrb
pop
cli
imul
mov
push
mov
dec
sub
mov
pop
adc
imul
insb
pop
push
lods
sbb
jge
and
std
loopne
jno
fmul
rol
pop
jb
add
test
mov
imul
sarb
rep
mov
push
sub
notb
pop
mov
popa
fs
push
cmpb
mov
in
pop
adc
sahf
sahf
mov
push
pusha
mov
sbb
mov
ror
int3
cmpsb
dec
out
cltd
mov
cmpsl
cmpsb
test
out
lods
mov
adc
xchg
mov
cld
add
lahf
loop
xor
imul
and
push
out
cld
cmpsl
popf
pop
nop
push
flds
nop
rorl
fcomps
divl
inc
adc
push
push
lahf
pop
dec
xchg
sub
sbb
xchg
mov
mov
fcmovbe
jecxz
sub
aas
push
imul
jge
mov
sub
lret
or
cwtl
push
ret
inc
push
push
sub
pop
pop
push
pop
xchg
arpl
hlt
andl
shufps
mov
push
cwtl
push
fsubl
mov
mov
sbb
pop
add
data16
lods
loope
pop
or
dec
push
nop
das
fistl
lret
lods
in
stc
fyl2x
adc
push
int3
pop
dec
or
nop
sbb
push
add
lret
sbb
push
test
xchg
pushf
test
in
fwait
xor
in
jno
mov
rcrb
dec
sti
cmp
mov
scas
lret
adc
mov
mov
sub
lds
test
test
addl
mov
rorl
sub
mov
mov
insb
dec
sub
in
js
inc
cmpsb
lock
rcl
xor
mov
push
or
out
ja
sub
and
add
daa
mov
cli
jl
loopne
sbb
les
mov
mov
bound
in
push
push
clc
nop
lods
mov
out
inc
cmp
test
xchg
sub
add
lret
and
addr16
and
sbb
mov
ljmp
push
jmp
xchg
popf
mov
mov
and
and
rcrl
addl
xor
push
loop
add
int3
jmp
outsb
sub
aas
sbb
mov
jecxz
sbb
jo
imulb
inc
mov
rclb
adc
jno
mov
mov
pop
xchg
jo
inc
mov
sti
sub
or
push
adc
pop
mov
frstor
jl
jno
mov
cmc
mov
loopne
lock
lock
adc
inc
adc
lods
sbb
cmp
arpl
out
xlat
cmp
bound
mov
imul
xor
dec
add
push
inc
cmpsl
sub
mov
sub
or
jo
jb
js
mov
pop
add
mov
pushf
lock
jg
add
cmpsl
mov
push
data16
cmp
cs
adc
mov
push
test
xchg
or
pop
or
push
das
pop
cwtl
test
push
clc
insl
and
sbb
rcl
push
repz
lods
movsl
xchg
repz
fisubrl
mov
jne
les
mov
xor
pop
and
movsb
cmpsl
jg
enter
jno
fsubrl
or
jp
ljmp
adc
inc
test
dec
jnp
test
xor
dec
adc
scas
out
sbbb
imul
fnop
mov
std
into
pop
cmp
push
jecxz
pop
daa
lret
in
jecxz
push
insl
mov
insl
rolb
sub
jge
sbb
push
jp
sahf
push
pusha
testb
pop
jns
bound
push
add
enter
cmp
mov
inc
cmp
sub
jo
dec
mov
rorb
inc
stos
jge
inc
rcrl
ja
inc
or
xlat
inc
in
jecxz
lahf
mov
inc
mov
mov
and
adc
insl
mov
mov
pop
dec
sbb
pushl
out
test
and
push
push
mov
scas
mov
hlt
in
inc
or
jns
xchg
sahf
daa
leave
hlt
xor
jbe
xor
xchg
mov
xchg
jle
or
mov
pop
jne
or
mov
movsl
pop
push
stc
adc
hlt
add
das
jge,pn
movsl
jmp
test
lds
xchg
nop
addr16
adc
and
and
add
xchg
in
addr16
dec
and
rorb
loop
jp
lods
ss
pop
imul
pop
sbb
pop
ds
or
mov
adc
mov
ror
decb
pushf
cmpsb
inc
mov
ja
das
lcall
ljmp
jbe
fcmovnu
push
mov
loopne
mov
hlt
mov
daa
sub
imul
inc
stos
scas
dec
or
mov
lods
test
pop
adc
shrl
aad
stos
mov
cmpl
insb
mov
imul
mov
or
sahf
into
in
add
jns
add
jbe
and
jbe
cmpsl
mov
push
int3
nop
pop
int
orl
and
mov
int3
sbb
arpl
xlat
inc
fisubrl
inc
cmpl
out
or
mov
push
pusha
xchg
test
push
enter
add
dec
jmp
mov
pop
loope
mov
and
pop
xor
imul
daa
inc
push
repz
cmp
mov
add
xchg
xchg
std
dec
addr16
mov
insb
push
xor
pop
inc
insb
lods
xchg
or
mov
icebp
addr16
iret
std
adc
adc
push
int
push
aam
int3
sarb
pop
push
jne
pop
xchg
inc
and
jno
mov
arpl
cmpl
sub
push
mov
sub
lock
dec
mov
jno
daa
push
xorb
cmc
or
mov
or
adc
push
jne
add
repz
js
dec
aaa
jp
xor
dec
sub
sub
inc
sbb
ja
ljmp
les
mov
adc
mov
into
test
dec
push
pop
mov
cmp
or
pop
add
negl
mov
push
call
outsl
pop
arpl
pushf
cld
lcall
mov
pop
mov
aam
mov
clc
ja
or
sahf
mov
and
clc
mov
mov
or
jns
cmp
cwtl
sub
call
adc
add
push
cli
insl
repnz
push
cli
jnp
loope
cld
arpl
imul
hlt
mov
ja
adc
inc
adc
inc
sbb
iret
cmp
push
test
jne
lret
xor
pop
fdivrl
inc
mov
arpl
inc
movq
jl
aas
mov
jns
negb
es
cmpsb
adcb
std
stos
dec
sti
jb
pop
cmpsb
cmp
xor
icebp
adc
ret
adc
push
out
fistps
mov
mov
inc
pusha
aad
pop
out
jmp
sub
push
mov
sbb
sub
dec
into
dec
sbb
test
mov
nop
into
mov
jp
cmp
xchg
leave
addl
pusha
into
cmpsl
mov
adc
incb
pop
repz
mov
mov
shrb
xor
mov
mov
mov
inc
lret
inc
mov
les
jns
jp
imul
adc
inc
and
filds
gs
cmp
mov
rcl
and
sbb
test
roll
das
fwait
add
icebp
sti
mulb
sbb
xor
pop
xor
repz
into
movsl
and
pop
outsb
aam
cmp
mov
push
adc
stos
in
in
lahf
and
and
sbb
cltd
xor
add
jae
and
sbb
inc
into
sbb
mov
mov
ljmp
frstor
mov
lret
sbb
cmp
xchg
mov
imul
arpl
push
mov
cltd
lock
jp
fwait
jnp
mov
movsl
test
bound
or
cmpsb
jbe
add
nop
mov
popf
rdmsr
sahf
sub
inc
dec
aaa
inc
jmp
sub
jle
pop
push
jns
jo
loopne
sarl
mov
clc
jg
xchg
add
cwtl
jae
mov
rclb
push
int3
bound
jbe
sbb
movsl
repnz
outsb
mov
rolb
and
and
or
sarb
pop
add
mov
inc
xchg
jecxz
js
pop
sbb
outsl
repz
andl
jle
push
pop
inc
stc
jo
shrb
and
pushf
mov
push
mov
xchg
aaa
pop
xorps
aam
js
pop
out
jle
jns
push
cmp
cltd
push
sub
jmp
lcall
mov
pop
hlt
mov
scas
stos
sub
gs
pop
and
inc
lahf
add
fstpt
out
in
lods
rorb
inc
lret
cmp
ja
push
jae
imul
ss
cmp
jmp
adc
aaa
stos
js
repnz
into
int
pop
jno
imul
jp
pop
sub
rolb
mov
das
sub
dec
movsb
jbe
dec
movsl
pop
push
int
test
mov
xchg
nop
scas
mov
or
mov
je
push
mulb
jge
or
or
sub
cmp
dec
mov
cmp
mov
jbe
mov
jne
mov
mov
sub
fidivs
sub
dec
sahf
pop
sar
add
sbb
pop
js
adc
lods
enter
je
cmpsl
or
stc
dec
es
xor
lahf
shrb
mov
dec
inc
sub
cmpsw
cs
mov
mov
inc
add
test
pusha
cs
std
aam
sbb
cwtl
mov
adc
or
inc
or
or
xchg
push
pop
push
push
bound
shrb
pop
or
dec
push
lahf
fbld
xor
mov
push
adc
mov
cmp
dec
xchg
mov
push
xor
adc
stc
inc
dec
sub
lret
test
repz
jns
test
int
stos
mov
ja
add
dec
mov
mov
stos
rorb
and
mov
pusha
cmc
ss
pop
mov
fnstsw
mov
push
jmp
pop
adc
pop
shrl
xchg
jg
adc
pop
adc
repz
in
mov
mov
test
je
mov
out
push
out
mov
inc
mov
mull
in
out
sbb
sarl
bound
idiv
xor
mov
push
pop
mov
mov
pop
out
add
sbbl
adc
pop
outsb
jp
and
xlat
adc
push
leave
icebp
mov
mov
sbb
insl
mov
sub
pop
cmp
xor
aad
and
push
into
out
bound
out
popf
testb
sahf
scas
pop
inc
adc
add
jo
push
push
jne
call
inc
and
int3
sbb
fstpl
ret
adc
cwtl
inc
out
enter
mov
xchg
pop
mov
out
jp
scas
je
loope
dec
addr16
scas
mov
mov
push
les
xor
mov
fwait
dec
push
adc
push
push
jp
ss
test
cs
jnp
les
stc
xor
or
cmp
insl
js
ds
push
fistl
dec
sub
add
aad
xor
cmp
cmp
fnstcw
xchg
or
xchg
pop
lahf
xor
mov
mov
stos
sar
aaa
jnp
xchg
pop
jbe
mov
out
insl
fwait
sbb
test
adc
ja
in
dec
test
popa
jg
mov
pop
fisubrl
add
stos
pop
testb
add
cwtl
cmp
pop
sbb
mov
dec
xchg
insl
and
out
jecxz
push
mov
xchg
out
popf
cmpsl
push
leave
sbb
add
xchg
std
ds
testb
ljmp
add
xchg
jl
and
andb
jno
sarl
aaa
leave
aad
pop
adc
mov
push
push
dec
jp
sbb
add
lock
push
or
pop
push
lock
nop
enter
in
dec
mov
movsl
push
movsb
cmp
ret
inc
push
push
sbb
inc
cmpsb
ret
xor
pushf
aas
test
xor
jb
fbstp
ljmp
shlb
test
insb
xchg
test
aad
add
loop
pop
mov
into
mov
adc
ret
cli
mov
in
add
ljmp
mov
clc
aas
dec
xlat
dec
sbb
sbb
pusha
push
enter
shrb
cmp
dec
add
and
fdivs
and
inc
and
sub
sub
mov
sarl
add
sbb
outsl
or
stc
dec
dec
test
scas
enter
je
clc
xor
enter
or
pushl
xlat
cmp
dec
movsl
xchg
xchg
inc
jae
jne
jb
xchg
dec
add
les
insb
xorl
rsqrtps
fxch
push
fildll
testl
insb
cld
mov
std
pop
and
pop
scas
sbb
mov
pusha
cmc
or
add
jmp
adc
loopne
pop
cmpsl
mov
mov
stos
and
cltd
sub
in
inc
pop
out
out
rol
cmc
xorps
jns
mov
bound
gs
sub
in
xlat
jnp
dec
pop
cld
fidivrs
adc
movsb
jmp
and
pop
idivl
add
bound
rcrl
sbb
inc
mov
or
inc
loope
fadds
gs
sub
push
int
pop
lds
and
fistpll
xor
or
out
mov
and
sub
pop
fisubrl
and
fbstp
aad
mov
frstor
push
mov
les
fcmovnb
jno
jne
mov
popa
rcrb
dec
scas
pop
xchg
add
adc
mov
dec
rolb
mov
mov
push
push
xchg
dec
movsl
sub
mov
imull
mov
xor
fs
and
rol
pop
sbb
in
pop
mov
bound
pop
pop
dec
sahf
push
xchg
push
dec
cmc
sbb
popl
fnstcw
insl
mov
jmp
sahf
xor
scas
push
pop
movl
xor
pop
mov
out
inc
enter
movsb
repz
gs
xchg
mov
mov
ss
sti
mov
jb
stos
movsl
pop
icebp
loope
lahf
xor
and
call
fsubr
loope
stos
mov
jae
jo
add
and
jl
mov
cmp
aad
xchg
dec
cmp
pop
jg
sbb
and
test
xchg
mov
insb
repz
jno
ljmp
mov
insl
enter
stos
out
shrl
lods
or
test
fcmovu
sub
xchg
gs
stos
orb
fiaddl
mov
lret
cmpsb
stc
insb
push
cmpsl
inc
sub
jp
lahf
jp
mov
mov
movsb
pcmpgtd
mov
xchg
test
sahf
push
mov
mov
int
sbb
mov
sub
lods
pop
dec
sub
push
add
mov
jns
mov
dec
jnp
pop
test
jge,pn
mov
sahf
test
call
xchg
mov
push
sbb
pop
inc
jge
inc
inc
inc
push
icebp
xchg
pop
mov
adc
inc
jl
stos
cmp
lret
sbb
lock
out
pop
xor
inc
jmp
mov
push
aaa
mov
out
ds
inc
stc
inc
lods
shr
lahf
sbb
push
idiv
incl
xlat
dec
mov
mov
push
rorl
add
insl
stos
ret
subl
xchg
in
jae
jecxz
xor
and
cli
jns
inc
aaa
jp
mov
ljmp
jae
sub
js
or
loopne
jmp
or
push
call
in
arpl
xchg
and
jecxz
loopne
adc
cld
lock
mov
in
inc
cmp
mov
pop
xchg
jae
std
das
inc
lds
int
or
scas
ret
fsts
pop
imull
insl
or
rorl
dec
rcll
xchg
add
mov
lahf
mov
adc
jbe
cmp
fists
leave
mov
dec
pop
adc
push
lods
dec
mov
rep
popf
roll
add
jns
loop
mov
cltd
adcb
std
scas
clc
orb
fisttpll
inc
inc
insb
ret
jae
push
dec
je
std
jmp
dec
mov
mov
push
in
jle
xchg
add
fs
dec
jo
lods
ljmp
xchg
call
fistpll
push
add
das
dec
dec
pop
mov
add
pop
jo
lcall
cs
sbb
sub
pop
and
mov
mov
cmp
and
ja
lea
mov
cmp
mov
jmp
test
jns
dec
out
mov
popf
fdiv
arpl
xchg
das
mov
pop
lahf
or
xchg
rorl
jae
sbb
in
loop
sbb
sbb
mov
xchg
call
pop
lods
lds
xor
lret
xor
xor
xchg
lods
dec
push
and
xchg
mov
call
and
fcoms
mov
mov
pop
inc
push
jmp
jnp
les
dec
je
mov
fsubrs
dec
or
sbbl
rcrl
inc
int3
adc
xorl
push
add
lock
add
insl
push
cmp
sub
or
push
mov
push
mov
cmp
dec
mov
jb
xor
mov
test
insl
xor
sbb
dec
stos
call
imul
lret
leave
xchg
pushf
addr16
into
jge
push
cmc
cs
fucomip
lock
addr16
fnstsw
jge
xor
adc
cli
jp
mov
outsl
stc
sub
cwtl
mov
call
shrd
pop
ret
push
inc
inc
shrl
mov
cmp
sahf
xlat
fucomip
push
add
mov
daa
cmp
lods
outsl
dec
imul
cld
push
adc
les
sbb
fisubrl
pushf
cmp
nop
xor
sbb
fidivrl
out
pop
mov
loop
mov
jl
push
aaa
inc
ret
mov
pushf
jb
sbb
sub
mov
negb
jno
stos
cmp
mov
pop
or
sub
loop
addr16
enter
in
sbb
lock
dec
lret
mov
call
popa
xchg
popa
jle
and
jae
dec
mov
mov
test
jae
or
jnp
and
lret
jnp
cmpsl
mov
decl
inc
stos
jle
mov
lret
movsb
rcll
test
dec
jp
mov
das
adc
aas
xor
mov
pop
in
ret
sbb
fcoms
mov
outsl
ficompl
lods
stc
or
dec
out
movb
add
sub
or
add
fabs
daa
and
pop
mov
int
cmp
cmp
push
das
sti
mov
insb
es
movsb
cmp
test
xor
dec
or
sbb
mov
xor
rcrl
cmp
xchg
nop
fidivl
sti
data16
pop
movsb
pop
sbb
cltd
add
jne
jne
xor
jge
in
leave
sbb
jle
mov
repz
dec
cli
xchg
test
push
mov
fcomip
outsl
jl
imul
je
adc
mov
lds
and
and
dec
test
arpl
std
adc
and
dec
sti
sub
and
xor
in
jl
sub
jne
js
aam
adc
stos
xchg
xlat
mov
rclb
out
xchg
add
pop
inc
adc
das
cmp
jae
xlat
test
dec
mov
sbb
cltd
insl
xlat
or
fwait
lds
imul
cli
or
fldcw
add
jle
xor
xor
mov
cmpsl
mov
adc
sti
push
cmc
dec
xor
lds
test
movsb
insl
data16
mov
mov
add
in
fisubs
loopne
arpl
inc
sbb
and
cmp
and
xchg
push
repnz
or
sbb
addr16
xchg
dec
imul
fwait
lock
aam
lods
and
stc
cmc
add
pop
add
jbe
mov
push
sbb
ss
dec
addr16
xor
xor
inc
push
les
in
lods
in
and
mov
lahf
sarb
mov
adc
and
add
jae
mov
cmpsl
lds
lcall
call
stc
sahf
repz
sbb
adc
inc
test
add
lods
push
loopne
adc
je
int3
adcb
lea
xor
aas
mov
icebp
and
lods
inc
xchg
jg
cmp
std
les
mov
xchg
push
sahf
test
inc
adc
cli
imul
hlt
in
sbbl
pop
loop
or
out
jo
in
or
cmp
scas
mov
inc
adc
jno
mov
andl
pop
mov
shll
and
mov
out
roll
sub
mov
adc
cmp
and
mov
sbb
mov
inc
mov
sub
cmp
mov
dec
arpl
or
out
add
repnz
or
and
scas
push
mov
mov
in
outsl
jb
aad
aaa
jo
out
ret
or
loopne
stos
in
xchg
in
iret
mov
std
push
push
pop
ficoms
xchg
dec
inc
mov
xchg
xchg
xor
ds
ret
sbb
xchg
add
add
mov
sahf
mov
out
mov
pop
pop
lret
aad
pop
sub
aas
jecxz
adc
idivl
inc
mov
ds
pushf
mov
mov
sub
and
call
or
fcoms
sub
scas
lock
rclb
hlt
mov
in
mov
dec
sbb
sub
inc
dec
in
lods
insl
inc
xchg
jbe
roll
xchg
xor
pop
pop
sbb
sub
adc
jecxz
sbb
cmp
in
jecxz
or
jecxz
lret
repz
pop
xchg
dec
insb
dec
and
xor
call
xchg
outsb
fsubl
repnz
dec
jo
dec
jge
js
rolb
push
sarb
jecxz
push
pop
and
aas
or
mov
js
lcall
cmp
shll
and
repnz
inc
je
xchg
and
fcoml
out
enter
scas
hlt
outsb
jbe
cmp
and
jno
dec
sub
shrb
jno
dec
rcr
movsl
and
jp
sbb
sub
xor
dec
hlt
in
movsb
jb
sub
js
mov
dec
shl
scas
cmpsb
jle
cmpsb
mov
sbb
rorb
push
push
shl
mov
ss
xlat
addr16
dec
mov
pop
and
inc
cmpsl
sub
jmp
inc
hlt
push
sub
cld
stc
sbb
dec
xchg
mov
xlat
shlb
sub
cmc
mov
bnd
repnz
bnd
ja
xchg
cld
sbb
ds
sarb
push
and
in
mov
loope
outsb
push
test
ds
rorb
push
in
lret
sub
inc
or
ja
sbb
orl
inc
or
fstpt
je
mov
ret
jmp
shr
mov
mov
jl
scas
xchg
pop
xchg
pop
sarl
push
std
lcall
sti
add
dec
mov
xchg
fidivl
ds
sbb
test
faddl
sbb
adc
mov
bound
jmp
xor
ja
loope
pop
scas
xchg
cmp
subl
call
dec
push
adc
ret
je
inc
je
in
push
fwait
jl
pusha
jle
jno
add
xchg
outsb
repnz
or
sbb
jmp
mov
mov
nop
addr16
mov
xchg
mov
bound
js
mov
inc
das
push
std
push
repz
cmovl
out
mov
insb
pop
jns
mov
dec
inc
push
pushf
idivl
js
pop
outsl
and
dec
sub
pop
mov
les
adc
fs
jle
inc
lahf
cmp
cld
arpl
ljmp
and
mov
mov
call
scas
sarl
push
stos
add
sub
fidivs
mov
jecxz
xchg
xchg
cs
jnp
outsb
adc
mov
fwait
adc
or
add
dec
push
ss
xlat
mov
psubb
pop
arpl
push
bound
cmp
lock
mov
or
xchg
testl
pop
ds
mov
xchg
push
andb
shlb
cmp
ja
lds
data16
sub
lds
cmp
jl
popf
jecxz,pn
pop
insl
mov
in
clc
ja
push
imul
inc
push
xchg
mov
mov
mov
imul
ds
or
add
shrl
or
and
inc
push
sbb
jnp
lds
insb
cmp
lret
dec
testb
mov
mov
jle
mov
mov
xchg
out
movsl
jg
popa
out
sbb
sbb
imul
repnz
and
jb
div
jl
mov
es
jle
ret
sbb
pavgw
mov
stos
cmp
fnstcw
adc
xchg
xor
cmp
repnz
cmpl
sub
xchg
je
sbb
fistpl
add
sahf
push
notl
cmp
scas
sbb
dec
getsec
or
xor
sub
xchg
sti
jb
cmc
or
jp
loope
fadd
jl
push
xabort
enter
or
jg
test
pop
popf
push
xchg
mov
xchg
sub
push
jb
aad
rol
stos
out
aad
pop
cmp
jb
dec
leave
lock
add
and
push
sbb
loope
push
lret
insl
xchg
inc
lahf
insb
fcompl
xchg
in
push
xlat
push
lcall
pop
jb
cld
test
lea
jbe
jns
pop
scas
jb
push
cmp
mov
roll
sub
inc
out
cwtl
dec
jnp
lahf
xchg
lret
in
out
in
xlat
cmp
shl
movsb
pop
cmp
mov
and
mov
jno
adc
cltd
pop
cmp
adc
cmc
mov
adc
icebp
inc
imul
jnp
xor
or
push
inc
push
sub
push
orl
and
sub
nop
popa
mov
addb
fdivrs
outsb
mov
adcb
mov
jae
cmp
inc
cmp
in
fcompl
inc
xchg
iret
cmp
cmp
mov
inc
mov
mov
pusha
mov
cmp
lcall
xor
testl
cmpsl
adc
inc
xchg
lds
jg
mov
sbb
or
inc
sub
or
ret
and
fs
out
pop
sarl
stc
call
enter
pop
jb
dec
mov
aam
push
inc
gs
nop
push
jle
int3
dec
cmp
enter
xchg
ret
test
ret
xor
xchg
cld
jno
pushf
daa
out
mov
idivl
mov
insl
inc
sbb
pop
cwtl
jno
add
push
lea
fsubrs
xchg
lock
js
lahf
notb
fdivs
push
out
jl
call
sbb
add
stc
dec
movsb
das
popa
add
cltd
xchg
sub
jbe
push
sub
xchg
bound
pop
mov
fmul
mov
jl
mov
adc
jl
add
cmp
in
sbb
adc
dec
lods
push
fs
addb
les
sti
xor
pushf
or
add
cs
mov
rcrl
ja
cmp
xor
lret
aas
shrl
jp
pop
cs
cs
icebp
adc
pop
sub
stos
jl
inc
data16
mov
call
push
xor
jl
dec
sahf
adc
xor
push
repnz
or
xchg
test
add
mov
push
imul
mov
mov
jge
clc
jb
xchg
lahf
pop
fistpll
loop
leave
push
cmp
aaa
dec
mov
lahf
inc
mov
mov
cmpsl
rol
dec
scas
push
jb
inc
pop
test
jbe
mov
mov
xchg
cld
test
inc
or
enter
pop
inc
stc
adc
movsl
test
getsec
pop
popf
mov
frstor
mov
shll
stos
pop
inc
scas
and
test
mov
je
push
jmp
add
sbb
cli
mov
je
cmp
lret
addr16
jl
flds
fisttpl
cld
jnp
fldl
iret
pop
or
popl
icebp
xchg
push
dec
inc
pop
loopne
mov
add
xchg
sbbl
into
and
cwtl
rolb
mov
mov
in
nop
cmc
xor
and
mov
adc
mov
push
xlat
sub
dec
popf
pushf
mov
mov
das
adc
adc
and
or
notl
bnd
cmp
sbb
cmpb
addr16
mov
lods
icebp
test
addr16
lock
xor
cmpsl
adc
lret
sbb
push
cmpsb
dec
out
mov
pushf
incb
bound
xor
jb
cmp
xchg
aaa
addr16
testb
ret
xchg
pop
sbb
icebp
fxam
push
arpl
rol
jb
lods
and
adc
push
pop
and
mov
stc
inc
orb
insl
dec
outsl
shll
inc
shr
and
xchg
jge
cmp
cmpsb
mov
fcom
xor
pop
mov
sti
adc
jge
adc
mov
loope
ss
pop
xor
fiaddl
adc
enter
cwtl
inc
fsubrp
lds
push
mov
cmp
and
in
testl
adc
inc
or
add
mov
cmp
jo
lock
fistl
idivl
pusha
adc
loop
daa
notb
mov
cmpl
xchg
jno
mov
dec
xchg
xorl
adc
dec
stc
ds
pushf
enter
ret
xor
cwtl
rclb
rcr
subb
push
pop
outsb
cmp
test
push
jns
shrb
jle
sbb
loop
dec
lea
test
xor
jo
sbb
sarb
hlt
outsl
xchg
pop
dec
out
mov
loope
daa
js
or
cltd
lahf
jmp
test
sbb
ret
add
xchg
cmp
gs
or
mov
jmp
pop
inc
int
daa
repnz
mov
add
insl
call
mov
shlb
sbb
jmp
mov
popa
int
cmpsl
jae
xchg
xor
aad
push
sub
gs
push
xchg
sub
dec
call
fiaddl
fs
nop
cmp
mov
xor
jmp
fisubrs
sub
sub
das
mov
fsts
flds
xchg
div
lea
inc
out
and
lea
data16
mov
clc
adc
inc
push
jne
mov
pop
in
imul
lahf
and
arpl
subb
mov
out
repz
jb
pop
movsl
das
and
ja
cld
mov
inc
test
movl
inc
add
pop
push
mov
mov
arpl
cmp
jo
aaa
loop
jg
insb
fs
or
addr16
xchg
mov
fwait
int3
dec
mov
sarl
ss
addb
lds
icebp
in
push
stos
xchg
jge
push
xchg
lahf
xlat
and
cmc
push
adc
fwait
jae
pop
and
push
into
adc
shl
inc
add
jge
jg
data16
xchg
push
pop
lock
inc
int
pop
add
jo
or
cmc
icebp
ja
inc
mov
in
ret
pop
jg
inc
cmovl
lds
add
stos
in
sub
arpl
inc
call
sbb
adc
lods
stos
int
push
xor
inc
je
imul
out
orl
add
xchg
leave
ljmp
repnz
lods
jne
sarl
mov
adc
test
mov
inc
xchg
mov
cmp
imul
xchg
shrl
sbb
xchg
ret
mov
pushf
adc
jnp
sti
xchg
push
adc
ss
lahf
imull
and
inc
stc
addl
test
pop
inc
jle
sub
inc
pusha
push
pusha
mov
xchg
frstor
adc
lods
add
jge
xchg
fisubrs
decb
dec
movl
inc
repz
jl
aad
jae
and
mov
inc
insb
inc
imul
inc
mov
mov
ret
push
push
mov
outsl
in
pop
shrb
bound
mov
ret
movsb
jge
pop
shll
outsl
push
fimull
test
jg
cwtl
scas
mov
fsubp
vpackuswb
js
mov
or
mov
jns
lret
mov
pop
orb
lcall
insl
pushf
out
pop
dec
mov
lock
mov
ljmp
sub
mov
push
jmp
ficoml
xor
inc
mov
lock
enter
hlt
insl
adc
aaa
popf
shrl
jbe
repz
lds
andb
or
or
inc
and
inc
add
ja
and
ljmp
arpl
mov
mov
sbb
jmp
stos
add
cwtl
pushf
dec
adc
rorl
xchg
fcomps
and
shll
fsubrl
jmp
adc
pop
int3
add
imul
inc
jge
test
sarl
cli
aaa
add
in
push
aad
inc
xchg
or
xchg
loope
and
push
push
pop
rcrb
xlat
xchg
push
sub
fisubrl
cld
shlb
loop
shlb
dec
popf
push
ljmp
add
mov
ss
dec
push
fucomi
stos
aam
sub
xchg
xor
xor
adc
loop
mov
ret
repnz
icebp
cmp
xor
subl
fcoms
pop
sub
inc
ret
shll
pop
aad
pop
jno
shl
ret
rcr
cmp
int3
adc
mov
mov
fcoms
xor
adc
dec
inc
addr16
mov
rol
pop
psrlw
cwtl
mov
pop
mov
int3
fidivrl
pop
sahf
mov
out
mov
lock
push
adc
or
bswap
xchg
or
lret
mov
jne
je
push
jl
xchg
mov
or
xchg
pop
push
dec
in
xchg
adc
test
ljmp
int3
addl
cmp
les
xor
and
mov
fnstcw
insb
push
push
jmp
push
jge
fstpt
jl
stc
jp
pop
push
sbb
mov
sub
jle
push
cmp
je
cmp
outsb
lret
inc
test
xchg
inc
popf
dec
in
inc
dec
adc
enter
push
mov
out
sbb
inc
dec
nop
ud1
jg
xchg
jmp
xchg
mov
out
subb
inc
mov
push
dec
mov
lock
leave
ds
subl
lcall
bound
add
outsl
sbb
dec
cmp
cmp
add
push
aas
add
test
sbb
outsb
repz
inc
sbb
ss
adc
jecxz
in
daa
ret
lods
mov
or
pop
cmp
pop
out
lea
pop
roll
and
xchg
push
mov
inc
outsl
cmp
inc
xor
xor
in
push
or
pop
bound
add
mov
cmpsb
cmc
jnp
enter
pushf
jg
mov
sbb
lds
xlat
cmp
fimuls
pushf
push
decl
jp
jns
and
xchg
dec
pop
pop
scas
mov
push
pop
push
xchg
sbb
mov
and
fimuls
roll
shrl
andnps
add
lret
cmpb
frstor
int3
shll
pop
out
pop
es
lock
lret
cwtl
mov
cmp
dec
dec
bound
lods
pop
jns
inc
push
push
out
scas
movb
repz
xchg
mov
dec
subb
mov
mov
mov
mov
in
stos
sub
jl
es
into
sbb
add
inc
jecxz
call
push
fisttps
outsl
pusha
cmp
call
and
outsl
inc
daa
repz
dec
repnz
fbld
lret
lods
inc
enter
jns
and
cwtl
dec
dec
je
mov
pop
enter
in
cmpsb
push
adc
mov
loopne
pop
add
push
pop
scas
pop
push
mov
out
rorb
loopne
pop
cmp
mov
daa
jo
or
mov
xchg
sub
out
cmp
negb
in
xchg
and
rclb
push
pop
and
sub
xchg
jb
mov
out
int3
in
mov
xor
insb
inc
stos
filds
inc
adc
or
in
gs
fs
ljmp
xor
mov
test
xchg
mov
pop
divb
loope
fs
mov
xchg
jo
fidivrs
imul
je
xchg
cmpl
lret
imul
mov
test
mov
in
test
shrb
jge
fadds
mov
push
cmpsl
sbb
shll
test
call
aam
add
push
pop
adc
mov
sub
and
fsubs
mov
lods
inc
mov
repz
or
sub
scas
enter
xchg
das
test
jno
jbe
hlt
sbb
inc
jp
out
frstor
sub
cmpsb
aam
jo
dec
bound
cmp
adc
sbb
xchg
cmp
icebp
add
mov
in
jecxz
cs
jne
cld
filds
in
cmpsb
ret
or
movsl
mov
and
inc
out
jmp
push
daa
adc
adc
inc
dec
loope
jnp
dec
mov
xchg
sub
je
or
jmp
xor
pusha
add
inc
sbb
xchg
aad
xor
lret
sub
dec
mov
stos
aad
stos
fdivl
xor
sub
mov
and
ja
pop
insl
dec
jmp
xlat
test
adc
mov
repnz
popf
testb
in
sub
cmpsl
jbe
cmp
popf
fcomps
inc
adc
push
mov
or
adc
pop
mov
addr16
sarl
add
add
xlat
stc
out
insb
rcrb
das
shlb
insb
xchg
mov
pop
push
in
scas
cwtl
and
lds
add
scas
test
adc
pop
negb
ficomps
jnp
add
or
sbb
loope
mov
mov
fs
lret
pop
stos
out
mov
pop
sti
mov
out
les
push
je
sbb
stos
or
jp
jmp
ret
sub
loope
leave
in
shlb
xor
in
adc
notb
and
es
popf
imul
push
fdivrp
and
cld
add
push
add
insb
mov
jge
ret
mov
in
inc
arpl
shll
pop
movsl
sahf
nop
std
rorb
xor
adc
in
and
cmp
xchg
pop
pushf
popa
mov
sub
sti
sbb
or
dec
repnz
lea
aas
addr16
fcmovnbe
int
pop
push
and
add
fadds
ljmp
lahf
and
adc
push
xor
pop
pushf
fnstsw
incl
sub
roll
ret
push
sub
je
xor
popa
xchg
stos
push
aas
cmp
xor
test
and
rol
dec
ret
aas
mov
and
mov
stc
pop
or
pop
xchg
and
test
and
mov
das
flds
push
dec
jo
aas
pushf
pop
jmp
inc
cmp
out
lahf
push
push
int
add
mov
jo
sbb
pop
pop
rol
decb
and
repnz
hlt
cmc
testl
sub
xor
cmpsl
int3
fwait
enter
outsl
and
jb
push
inc
push
adcb
leave
sub
add
pop
push
ret
xchg
in
sbb
ret
shrl
mov
and
aaa
mov
popa
movsb
notb
fstps
push
roll
cmp
push
in
js
test
bound
adc
mov
cmpsb
add
cmc
rcll
jns
je
cmp
mov
enter
int
hlt
rolb
aas
aaa
mov
dec
out
xchg
add
cmc
lcall
nop
mov
shll
pop
in
sbb
ror
sub
jns
lcall
es
andb
pop
arpl
popa
pop
push
jno
andl
xchg
xchg
cmp
ret
jns
pushf
js
or
into
into
fstl
dec
pop
xchg
cmc
nop
lock
jno
nop
cmp
in
xchg
push
cmpsl
sbb
pop
pop
dec
stc
sahf
xlat
mov
in
mov
fnsave
pusha
adc
jbe
jge
subl
mov
sti
xchg
sarb
xchg
sub
scas
cmpsl
xor
xor
mov
sub
ds
mov
jp
cmp
jo
in
and
fcomp
pop
js
int3
out
loop
aaa
xor
inc
cmp
push
push
xor
test
and
imul
int
xchg
push
js
sbb
cmp
jecxz
push
ret
jb
inc
sahf
sbb
adc
inc
fsts
mov
cmp
test
out
imul
mov
arpl
jecxz
push
lds
sub
fsin
fs
sbb
jb
and
adc
push
cmc
scas
jbe
jge
and
std
pop
das
add
fsubrl
mov
push
push
push
or
aaa
xchg
roll
inc
jmp
out
out
arpl
xchg
fimuls
push
sub
lret
fidivs
cmpsb
int3
shrb
sbb
cmp
push
pop
mov
xor
ja
xchg
jb
adc
loope
mov
mov
mov
adc
cld
pusha
fwait
leave
lret
in
test
lret
dec
aaa
mov
mov
in
ljmp
inc
sbb
jns
pop
fsubrl
addb
out
movsb
add
add
push
je
mov
and
inc
cmpsl
data16
lahf
sbb
gs
inc
jle
sti
inc
jl
jecxz
rcrb
arpl
sbb
push
loop
stos
lcall
sbb
popf
jno
adc
cmpsb
mov
jno
push
xor
scas
test
xor
dec
fsubs
dec
and
in
sbb
call
jmp
sahf
out
out
push
adc
loop
mov
movsb
insl
xchg
dec
jle
mov
push
testl
out
divb
cld
push
xchg
fisttpl
push
mov
jecxz
repnz
sub
push
cmp
in
cld
iret
shlb
mov
int3
push
mov
fildll
and
daa
jb
scas
xlat
pop
cmc
mov
loop
sub
or
test
push
shlb
sub
inc
in
fdivs
push
or
sub
sbb
xchg
jmp
jmp
jbe
dec
and
insl
cmp
mov
dec
int3
dec
xor
mov
mov
adc
jno
xchg
pop
test
loopne
movsl
xchg
jne
test
sbb
lret
test
clc
xchg
jno
and
sub
test
adcb
lret
out
fsubr
shrl
lahf
cli
sbb
cmp
stc
sahf
popf
or
mov
mov
or
in
jae
add
das
mov
jns
dec
push
in
xchg
lods
mov
cltd
lods
jnp
lods
imulb
inc
fnsave
fimull
rorl
fidivrs
pop
fcomps
adc
jo
lret
sub
pop
sub
js
stos
mov
and
cmp
xor
and
jmp
mov
pop
loope
out
pop
inc
gs
pushf
je
lods
cli
aad
and
xchg
mov
out
pop
enter
loopne
lahf
mov
xchg
dec
loope
pop
push
mov
lret
add
dec
mov
imul
iret
pop
enter
jle
ja
in
pop
jb
cmp
xor
ret
push
rcrb
mov
adc
in
jge
jb
sbb
mov
insb
push
fimuls
mov
sub
lret
out
mov
and
push
dec
ret
sbb
sbb
cmp
mov
sbb
rclb
stos
mov
or
mov
aad
sbb
push
sub
enter
in
movsl
adc
aad
mov
rcr
pop
pop
repz
xor
cmpsl
stos
pop
repnz
add
pop
cmpsb
jb
jl
aam
jecxz
jecxz
sub
aaa
dec
rorb
add
xchg
push
subl
test
icebp
cwtl
enter
cli
ss
fldt
iret
sub
jnp
sbb
bound
jo
dec
ficoml
leave
pop
fsts
dec
xor
jg
int3
or
je
data16
cmp
sti
stos
jmp
in
push
dec
mov
push
lock
and
add
cmpsb
adc
adc
xchg
lods
clc
mov
loop
mov
xor
adc
sahf
sbb
loope
xchg
sub
fsubl
xor
xchg
dec
daa
outsl
cmp
fdivs
dec
jb
or
cmp
je
adc
xchg
in
adc
lret
mov
inc
inc
dec
inc
sbb
pop
data16
popa
pop
mov
lods
mov
iret
sbb
push
enter
cmp
fsubp
add
cmc
pop
pop
jg
pop
sub
fsubp
push
jb
pop
cli
mov
rcrb
mov
push
jb
mov
pop
push
cs
divl
inc
aaa
mov
mov
or
or
fistpll
jecxz
test
fs
gs
sub
cmpsl
xor
mov
in
and
lahf
fimull
xchg
sub
ds
jge
mov
rorl
ss
dec
aam
in
mov
inc
popa
cwtl
mov
jl
les
adc
data16
jnp
xor
stos
xchg
repnz
jecxz,pt
ds
arpl
stos
loop
sbb
int3
push
inc
inc
insb
sar
pushl
movsl
bound
fmuls
stos
pop
movsl
push
ljmp
push
mov
ficoml
lahf
cld
mov
lret
adc
xchg
stc
cli
push
ret
mov
int3
dec
sbb
stc
imul
dec
je
lcall
mov
inc
xchg
out
and
dec
and
lahf
jb
incl
repnz
adc
in
fbld
xor
cmpsl
lea
fildll
mov
rcr
lea
mov
xor
adc
in
push
sbb
adc
ret
jns
mov
cmp
ret
fcmove
cmp
out
fdivs
sbb
in
cmp
subps
push
and
add
mov
xor
pop
inc
inc
push
rorb
enter
push
cs
jecxz
sub
insl
das
test
addr16
insb
sarl
push
ret
adc
sbb
stos
xchg
push
mov
int
popa
pop
xchg
int
pop
push
xchg
sbb
repnz
les
pushf
aaa
cmp
dec
imul
mov
arpl
insb
imul
xchg
xor
enter
mov
xchg
mov
mov
lea
aad
ja
fidivrs
loop
in
and
push
shlb
pop
push
xchg
and
lock
aam
and
mov
fidivs
sbb
and
jb
mov
inc
scas
sar
bound
jg
loope
in
and
fdivrl
lahf
mov
pop
ljmp
ss
push
jne
or
lods
cmp
jecxz
into
mov
jae
xorb
stos
lods
push
xchg
aaa
stos
push
dec
push
jb
ret
mov
cmc
out
inc
outsb
imul
xchg
cmc
or
adc
out
xchg
cmp
push
mov
dec
stos
add
pop
fcoml
ljmp
hlt
sahf
push
seta
loopne
mov
mov
dec
hlt
pop
scas
adc
jp
scas
in
push
das
repnz
inc
inc
and
stos
lcall
adcb
adc
int
push
ret
aaa
rcl
mov
dec
loopne
xor
mov
mov
call
flds
in
movsl
sahf
addr16
movsl
hlt
push
jnp
and
jb
dec
aad
inc
jmp
ds
dec
jg
xchg
xchg
sub
push
sbb
loope
testb
out
lahf
pop
daa
push
add
insl
xor
in
cmp
insl
rol
and
inc
leave
ret
pop
add
inc
or
push
out
rcll
jmp
rclb
sub
mov
imul
cmp
scas
xchg
dec
scas
xchg
xchg
and
test
ret
rorl
movb
and
clc
enter
fidivrs
mov
or
nop
mov
or
xchg
or
jmp
out
xchg
adc
pop
mov
ljmp
adc
insl
sub
fisttps
or
int
in
jmp
lea
sub
cmp
inc
mov
xchg
aas
xchg
jne
push
insl
ss
cmpsl
sbb
add
fcmovb
imul
pop
out
ss
add
lahf
pop
fcmove
and
or
loopne
rcrl
or
mov
ss
sbb
ljmp
inc
movsb
xchg
xor
xor
lea
int
sbb
ja
leave
add
imul
popa
dec
inc
jo
out
jb
movsb
icebp
inc
sub
imul
jg
add
repz
add
ret
fwait
push
lds
repnz
outsb
ss
ja
pop
scas
pop
lods
je
imul
lret
xchg
xor
sub
mov
btc
push
and
mov
pop
xlat
add
cwtl
pop
xor
mov
cltd
xor
arpl
mov
add
pushf
dec
sbb
rorb
dec
cmpsb
sbbb
xchg
cmpb
xor
pusha
add
test
push
jns
sarb
inc
shll
xor
movl
push
sub
dec
or
adc
scas
cmpsb
movsl
xlat
addl
lcall
jp
jno
sahf
mov
push
jb
je
cltd
out
or
inc
sbb
mov
loope
mov
int
andnps
jl
xor
and
outsl
add
icebp
push
in
scas
xchg
xlat
xor
fsubp
imul
cmc
loope
sahf
xor
cmp
lahf
repz
cltd
and
xchg
pop
int3
aas
mov
aad
add
pop
lahf
jo
dec
pushl
loope
adc
dec
jmp
xchg
jbe
pop
clc
icebp
in
in
sub
jecxz
mov
inc
inc
xor
dec
lcall
ja
into
out
sub
in
in
roll
cmc
push
jne
jae
sbb
sbb
movsl
fucom
aam
push
fbld
pop
cmp
ficomps
add
adc
ljmp
or
push
movsb
in
ds
popf
sub
dec
jecxz
sahf
outsb
dec
mov
imul
sbb
mov
push
hlt
imul
pop
decb
fdivs
shrl
xchg
mov
jns
inc
mov
lahf
and
in
jne
test
ret
inc
mov
testb
js
loop
xor
xchg
dec
sub
add
repnz
jae
jl
rcll
cmp
out
mov
push
in
test
lock
fsubl
out
push
sub
dec
xchg
mov
pop
add
mov
jp
inc
out
mov
inc
mov
dec
cld
repnz
cmp
xchg
les
cs
sbb
sbb
adc
in
mov
push
xlat
fildl
stc
mov
sub
mov
push
jne
push
mov
loope
repnz
aaa
imul
push
mov
sbb
lock
sub
dec
dec
lcall
and
movsl
addr16
jecxz
or
xor
sarb
sub
add
xor
arpl
or
scas
ret
mov
jns
int
filds
xchg
cs
cmp
int
lcall
mov
and
insb
imulb
add
pusha
test
jnp
les
inc
sahf
cs
xlat
hlt
mov
or
out
or
xchg
hlt
and
insl
adc
shlb
dec
and
xor
xchg
testb
addr16
add
sbb
movsl
aad
fs
sbb
and
shrb
pop
test
loop
dec
mov
aas
cld
or
mov
cmpl
rolb
dec
cmp
adc
fistl
mov
mov
loop
les
das
and
jle
jns
mov
adc
mov
sbb
push
push
pop
in
cmc
aas
jb
push
and
int3
mul
outsl
and
dec
push
add
pop
sub
adc
rolb
cmp
rorl
scas
adc
mov
sahf
inc
mov
mov
adc
das
dec
inc
scas
cli
xor
sbb
push
xor
mov
rcrl
mov
jg
dec
gs
adc
aad
out
mov
inc
cmp
dec
or
pop
les
cmp
pop
add
push
imul
lahf
in
in
xchg
into
sub
mov
mov
test
pop
pop
subb
movsb
jbe
cmp
rorl
xor
add
in
aaa
stos
push
mov
inc
enter
inc
es
rolb
and
cmp
mov
pop
fcmovne
nop
jl
mov
int3
push
mov
nop
xchg
cltd
push
and
pushf
push
mov
stc
lods
inc
or
add
jo
loopne
les
mov
js
mov
aam
in
push
inc
cmp
pop
daa
int
sbb
sti
xor
mov
sbb
addl
mov
clc
fisttpl
dec
fistl
and
sub
add
push
xor
fdivl
mov
lock
jmp
shl
out
imul
mov
cs
xchg
xchg
fisubrs
hlt
popf
pusha
cmp
sarl
test
adc
cs
mov
shrl
inc
dec
mov
mov
jne
sbb
lcall
fwait
pop
sbbl
icebp
xor
out
roll
push
lea
es
clc
in
test
push
or
lods
aad
pop
mov
push
mov
rcrb
imul
push
repz
in
push
sarb
pop
js
push
sti
push
out
lods
movsb
cmp
sbbl
mov
mov
mov
clc
ror
loop
xor
cmp
in
mov
roll
and
aaa
ja
js
jp
daa
mov
dec
cmp
mov
je
sbb
xchg
jae
std
push
lods
dec
fidivs
push
xor
cmp
adc
mov
rcrl
je
cmp
movntq
daa
in
or
fwait
rcrl
push
sub
movsb
inc
or
ror
stc
decb
fists
add
sub
sub
push
arpl
jge
xchg
adc
mov
sbb
push
scas
div
or
imul
iret
in
mov
mov
adc
and
lods
mov
das
in
movsb
pop
std
xchg
clc
mov
daa
add
lcall
xor
sarl
jge
js
push
adc
and
punpckhbw
fucomip
adc
cltd
pop
lods
pop
or
icebp
test
ljmp
sbb
into
rol
notl
dec
hlt
ret
arpl
sbb
adc
push
shl
fs
jnp
xorl
push
jecxz
pop
lret
aas
push
jl
sub
sub
adc
mov
mov
xor
aam
movsl
mov
sti
pop
pop
add
out
ja
mov
sbb
add
push
out
ret
test
mov
out
icebp
addr16
out
loopne
push
es
jp
jb
imul
sbb
xor
mov
jno
sub
cmc
cmp
add
and
pop
ljmp
scas
lret
aaa
xchg
lock
into
lahf
scas
test
push
in
push
cwtl
ds
nop
orb
outsb
adc
jno
mov
xchg
mov
xchg
adc
cwtl
dec
sub
je
cmc
cli
pop
rorl
xchg
mov
stos
dec
cmp
stc
adc
movsb
mov
pop
adc
pop
das
or
sbb
lahf
cs
neg
mov
adcb
fimuls
cmp
sub
je
popa
and
mov
ret
push
fdivrs
cmp
into
adc
cmp
push
and
push
aaa
xchg
pop
mov
imul
mov
xor
fisubrl
pop
inc
fcoms
ficompl
jno
pop
popf
lret
xchg
sub
pop
dec
pop
nop
mov
inc
adc
push
cmp
or
jne
stos
add
clc
jb
cmpsl
rorb
out
pop
sbbb
add
dec
mov
mov
mov
rorb
mov
in
inc
pusha
mov
cmp
dec
xchg
lcall
lret
in
bound
sub
insb
nop
arpl
jbe
insb
pop
push
dec
or
and
inc
add
mov
repnz
jmpw
aaa
mov
popf
cmp
mov
aam
ds
and
imul
mov
pop
out
add
lea
pop
enter
enter
mov
cmp
mov
jo
jle
and
cmpsl
xchg
aas
out
and
push
scas
lock
addr16
and
adc
fldcw
sbb
xor
fbld
pop
jb
or
or
push
xlat
cmp
dec
pop
cs
mov
mov
gs
jmp
dec
in
mov
lea
pop
jle
out
sar
or
xchg
push
aaa
lods
xlat
jg
pop
movsl
sbb
in
pop
loop
pop
iret
lahf
sbb
add
arpl
scas
pop
push
adc
in
pop
xor
lods
inc
hlt
into
iret
push
movsl
sub
pop
dec
pop
shrb
loope
dec
add
cld
in
jp
arpl
mov
jns
outsl
cmp
adc
and
in
add
lods
dec
fsub
lcall
jnp
add
pop
frstor
mov
dec
lret
popa
test
pushf
fistl
inc
pop
cwtl
es
pop
je
adc
test
adc
fidivl
cmp
ret
push
xor
push
jmp
aam
sbb
xchg
jne
push
adcb
inc
outsl
xlat
push
test
addr16
adc
lcall
push
cltd
mov
decb
inc
sahf
out
sub
daa
inc
test
gs
xchg
bound
popa
lock
jmp
cmp
addr16
mov
mov
dec
jns
adc
cmpb
int3
and
lahf
xlat
rcrb
les
scas
daa
out
xor
aaa
mov
inc
das
subl
lods
aas
xorb
push
add
aaa
ret
sbb
xor
fimull
dec
aad
add
sbb
push
clc
repnz
les
sbb
insl
nop
sahf
iret
push
sbb
jbe
stc
fsubr
jg
cmpsb
xlat
cmp
mov
xor
stos
pop
xchg
ss
mov
jbe
xchg
fildl
push
sbb
sbb
jno
mov
sub
inc
icebp
or
mov
into
loop
mov
fcomps
cmpsl
cltd
lock
insb
aam
inc
adc
adc
xchg
push
repnz
jno
pushf
and
and
jnp
pop
push
adc
mov
lods
insl
inc
cmp
or
adc
adc
cld
dec
int
mov
or
fsubl
inc
push
jbe
loope
adc
adc
movsb
aaa
or
inc
jge
addr16
stos
pop
dec
jbe
or
in
in
mov
or
and
xlat
cmp
ficomps
ret
mov
pop
pusha
fmull
ret
out
adc
aaa
inc
loope
mov
fidivrl
sbbb
sti
jl
jb
pop
mulps
fwait
xchg
mov
xchg
insb
lock
lret
push
xchg
xor
cmp
pop
jmp
leave
rcll
loopw
xlat
adc
xlat
cs
rorl
push
test
dec
fmull
ficoml
jmp
jmp
jmp
push
mov
sub
mov
mov
lcall
das
cld
js
xchg
xchg
std
mov
sub
mov
mov
inc
in
aad
jl
add
xchg
les
sahf
push
push
mov
movsb
xlat
or
inc
mov
cmp
mov
xor
mov
sarb
pop
mov
jecxz
stos
inc
xchg
call
nop
in
pop
or
xor
mov
and
push
mov
xchg
cmp
mov
inc
clc
inc
clc
sahf
or
outsl
imul
sub
push
lahf
jl
scas
and
pop
call
dec
into
loope
xchg
stos
sti
and
xlat
std
idivl
pop
test
add
aaa
sub
aad
inc
arpl
lock
inc
repnz
ficomps
sbb
adc
mov
daa
xor
std
das
and
mov
pop
nop
out
lods
dec
ja
push
sbb
daa
sbb
ja
mov
shrb
mov
addl
out
mov
repnz
aaa
pusha
xchg
call
mov
imul
movsb
cmp
test
add
add
or
sti
notl
xchg
repnz
push
mov
je
xor
xchg
pushf
lods
cmpsb
mov
sub
fwait
xlat
imul
fwait
je
insl
cmp
pop
dec
adc
and
and
pop
xchg
mov
xchg
pusha
lret
imul
mov
adc
inc
cmpsb
sbb
ret
add
xor
fs
mov
insb
sbb
pop
dec
mov
stc
mov
mov
jb
jne
add
mov
int
in
pand
inc
xor
push
pusha
das
sbb
or
clc
cmp
into
cmp
shrb
test
sub
ret
cmp
sbb
pop
gs
insb
mov
jl
lret
cmpsb
and
mov
dec
int
jge
pop
jge
cmp
mov
sub
ja
adc
dec
fimuls
xorl
sbb
add
sarl
jmp
xor
dec
data16
pop
nop
scas
cmp
mov
jmp
mov
sahf
xchg
add
sbb
xchg
pop
imul
adc
xchg
jb
mov
fsubl
leave
lcall
add
sarl
mov
xchg
or
in
push
dec
int
clc
mov
pop
outsb
push
mov
mov
ret
add
scas
in
imul
pop
cmpsb
and
dec
jae
movl
mov
pop
jne
fildl
or
mov
daa
fisubl
pop
popa
out
notb
fs
mov
push
xchg
divb
out
xchg
jmp
mov
test
pusha
out
and
sub
or
mov
xchg
dec
mov
inc
loop
jl
out
daa
lea
adc
mov
jnp
and
add
aas
or
stc
mov
jae
lods
mov
out
cmovg
lcall
mov
ja
sbb
mov
ljmp
cwtl
fildl
push
dec
sub
out
leave
rcr
mov
test
hlt
leave
enter
push
dec
xlat
adc
je
xor
cmp
jg
testl
add
movl
loopne
je
mov
test
icebp
dec
test
lea
pop
int
lods
xchg
test
xchg
popf
lods
lcall
insl
add
fdivp
into
in
mov
jg
rcrl
scas
ret
push
add
mov
stc
cmp
loop
adc
incb
xor
jg
inc
sub
cmp
test
pop
cltd
xchg
push
cmp
roll
int
lahf
test
pop
jle
idivl
push
pop
lahf
loopne
aaa
dec
lret
rolb
xchg
iret
ret
in
lret
mulb
out
xchg
bnd
pop
popf
inc
test
mov
test
lcall
cmpsb
cmp
cmpb
push
dec
push
fimull
cs
test
pop
sahf
jno
pop
loop
bound
jbe
jp
dec
mov
inc
pop
int3
and
xlat
shl
cmp
rcl
lcall
add
loope
mov
ja
jnp
call
ret
mov
xor
dec
and
nop
or
sub
bnd
pop
jmp
push
push
je
pop
repnz
ret
cmpsl
ds
dec
gs
xor
mov
add
jle
mov
dec
iret
jbe
cmpsb
and
dec
xlat
arpl
ret
inc
pop
movsl
push
cmpsb
scas
ljmp
sti
jp
mov
adc
xor
into
jle
aam
btc
sub
mov
fwait
aam
cmc
daa
cwtl
into
inc
dec
xchg
xchg
mov
lret
gs
mov
pusha
lds
pop
popa
cwtl
imul
pop
xor
dec
je
inc
icebp
mov
test
sbb
in
mov
std
mov
iret
faddp
fists
pop
add
stos
jns
fwait
xor
enter
ret
out
hlt
add
aaa
mov
pop
lock
sub
rcrb
xorb
adc
sbb
dec
sub
jo
or
aam
inc
push
mov
daa
stc
mov
mov
outsb
lret
out
fdiv
nop
hlt
ja
jecxz
out
test
jecxz
test
pop
push
out
in
mov
xor
clc
pop
inc
lods
mov
bound
dec
push
mov
xchg
stos
fstps
and
and
mov
andb
lea
out
mov
es
cs
push
pusha
lcall
gs
aam
dec
fdivs
dec
idivl
je
divb
cmpsl
arpl
and
fiadds
mov
sbb
mov
cs
jmp
inc
pop
inc
mov
das
sub
xlat
push
test
iret
sub
arpl
push
test
or
xchg
mov
adc
iret
shlb
jmp
test
jnp
sbb
stc
in
rclb
cmp
mov
inc
sti
cmp
sbb
sub
out
ljmp
push
xlat
push
lea
sbb
jnp
sub
lea
dec
xchg
int3
cmp
out
je
pusha
xor
or
rorb
loopne
fnstcw
jno
mov
mov
mov
fildll
repz
sbb
lea
gs
adc
stos
or
jne
shll
enter
sub
sti
frstor
adcb
xchg
adc
dec
sub
or
js
mov
mov
outsb
jg
imul
fisttpll
cltd
stos
cmpsb
xchg
cmc
cmp
orb
jo
stos
mov
jnp
pop
pop
in
stc
add
sbb
cmpsb
mov
xchg
mov
aas
divl
aas
mov
icebp
xor
jle
pop
cltd
out
stos
or
push
pop
lahf
push
repz
cld
repnz
mov
pop
negb
ja
mov
xchg
sbb
decl
jne
loop
aam
cmpsb
outsb
and
push
loop
xor
dec
dec
pop
dec
push
pusha
js
xor
out
xorb
and
pop
mov
jp
push
sbb
lret
fiadds
sbb
mov
imul
jmp
insl
daa
decl
aam
and
xchg
enter
jo
mov
inc
xchg
lret
ds
jg
xchg
movsb
push
xor
cmovno
lock
rcrl
and
outsb
out
jmp
ljmp
shrb
and
mov
mov
add
push
dec
mov
cmc
in
popa
pop
cmp
popa
cmp
std
das
sbbb
shl
fsubl
push
push
int
dec
push
lock
addr16
enter
xchg
pop
xor
and
add
icebp
cltd
inc
scas
rol
fisubs
ret
sbb
fcomps
dec
pop
mov
dec
rolb
sbb
push
stos
ljmp
or
adc
shrb
repz
fsubrp
cmp
and
sub
popf
mov
repnz
lds
ret
and
and
xor
and
or
sub
push
aas
sbb
test
inc
sbb
pop
jbe
sub
push
mov
in
push
inc
cmp
adc
icebp
into
or
scas
dec
cltd
adc
nop
add
mov
mov
rolb
jmp
adc
dec
imul
add
sub
dec
into
fdivr
jmp
pop
imul
pop
add
in
push
dec
adc
xchg
dec
sarl
aas
mov
jno
mov
adc
rep
ror
movsl
stos
aam
mov
scas
mov
adc
outsb
decl
int
ljmp
xchg
xchg
pop
jp
bound
sub
xchg
cltd
and
out
sub
test
lods
leave
imul
ret
hlt
mov
jle
dec
inc
std
shlb
dec
mov
shlb
lret
loopne
ja
xlat
outsl
xor
scas
pop
dec
into
in
pop
out
mov
inc
outsl
jae
test
out
cmp
mov
movsl
push
ret
push
int
xchg
xor
lcall
sbb
dec
sbb
or
mov
pusha
mov
lahf
lret
js
stc
jg
and
inc
loopne
pop
scas
cli
push
imul
or
cmc
mov
sahf
jbe
dec
dec
pop
jbe
mov
mov
ret
popa
arpl
push
cmp
xchg
jo
jb
adcl
xor
inc
sub
jmp
lret
sub
mov
std
lea
push
orl
and
fprem
mov
cmc
xchg
clc
pop
or
in
xchg
sub
and
ds
mov
or
push
stos
mov
pop
pop
push
mov
daa
loopne
popa
pusha
outsb
fsubrs
adc
push
inc
or
imul
clc
or
jae
dec
and
push
subl
sahf
or
and
sbb
test
push
iret
lods
jno
insl
pusha
mov
out
nop
jmp
mov
xchg
mov
mov
dec
mov
mov
jnp
clc
add
mov
add
dec
mov
cli
inc
sub
and
dec
cltd
or
mov
inc
in
loopne
jg
arpl
inc
lcall
mov
in
push
dec
stos
dec
dec
push
shl
call
jae
bound
insl
jb
pop
ds
popa
aad
lahf
mov
dec
sub
xor
scas
mov
das
daa
inc
leave
mov
pop
jbe
cmp
cmpsl
sahf
pop
push
push
ja
mov
adc
pop
movsb
dec
pop
imull
jge
pusha
or
imul
mov
pop
xor
daa
in
ficoml
or
cli
mov
cs
testl
jle
pop
je
and
mov
lret
adc
sub
insb
hlt
cmpsb
lret
add
add
mov
mov
push
pop
push
mov
push
and
aam
sub
movsb
push
inc
daa
mov
push
and
cs
push
fucompp
imul
mov
fnstenv
sub
sub
ret
inc
pop
cmpsb
cwtl
inc
sets
inc
sub
shrl
ret
movsl
je
imul
mov
insl
jge
shlb
mov
out
scas
dec
leave
mov
movsl
sub
cmp
insl
pop
popa
and
scas
adc
xlat
fistl
xor
cmp
lret
arpl
lds
rorl
aaa
andb
out
jnp
xor
scas
in
mov
add
inc
jge
jns
sub
and
cmp
scas
cmp
adc
int
and
add
mov
xchg
stos
or
pusha
aam
dec
xor
xchg
movsb
jge
dec
into
pop
dec
rcl
out
shrb
idiv
aam
jo
sub
fcomps
xchg
insl
cmc
mov
adc
inc
cmp
notl
sarl
inc
imul
pop
cmc
mull
and
jge
mov
add
aaa
lcall
jbe
mov
lret
mov
push
pop
pushf
stc
test
outsb
inc
xor
mov
adc
push
cltd
sbb
cmpsb
pop
sbb
push
das
mov
sbb
lods
push
xor
inc
jbe
or
sbb
and
les
cld
pop
dec
popa
lret
stos
daa
xor
jle
mov
les
mov
arpl
adc
pop
push
mov
cmpsl
cld
je
dec
inc
ret
lds
loopne
sahf
aas
lods
and
push
sub
aaa
pop
jp
hlt
andb
jo
mov
cwtl
mov
cmp
pop
lea
pop
scas
cld
hlt
xchg
cmpl
pop
xor
mov
mov
mov
stos
data16
out
fdivrs
jmp
mov
mov
push
push
dec
xchg
lds
lret
lods
rep
pop
push
shlb
insl
fsts
loopne
mov
arpl
pop
xchg
fwait
jp
insl
std
outsb
add
push
frstor
xor
dec
lock
mov
pop
mov
and
mov
dec
fisubrs
sbb
mov
cld
test
and
sub
mov
and
mov
call
and
mov
test
gs
cmp
mov
lods
notb
scas
lahf
sub
sbb
subb
inc
jns
pop
xor
ljmp
das
mov
pop
pop
pusha
addb
xor
popa
xchg
adcl
cltd
nop
lret
jno
leave
and
ret
push
sbb
cltd
in
add
lcall
sbb
jae
iret
movsl
jg
hlt
inc
jg
aaa
adc
jno
loopne
mov
mov
movsl
test
pop
fnstcw
test
notl
aad
das
mov
adc
xchg
push
add
negl
inc
pop
mov
xor
popa
mov
out
cli
mov
lret
xchg
mov
test
out
je
into
ds
xorl
repz
imul
adc
popf
mov
adc
in
mov
pop
popa
cs
pushf
in
and
cmp
fwait
les
ror
dec
mov
fistps
fs
fisubrs
scas
jnp
push
aam
in
push
ds
std
xor
push
cmp
pop
pushf
push
cmp
lock
mov
rcrl
addb
jnp
aad
inc
iret
notl
and
rcrb
xchg
adc
and
mov
lock
dec
mov
adc
jp
decl
out
pusha
sahf
and
movsb
xor
push
fnstsw
lret
xchg
clc
adc
pushf
cmpsl
lods
xchg
push
adc
lret
jl
adc
jmp
pop
nop
fcmovbe
mov
xor
shrb
jmp
pop
mov
adc
dec
stos
flds
adc
insl
push
push
add
enter
fs
cmc
mov
mov
sbb
jecxz
shl
cli
repnz
adc
cli
ds
sbb
mov
jl
test
clc
fimull
jae
cmc
ficomps
mov
daa
pop
dec
jp
ret
insl
fisubrs
add
rorl
stos
push
or
jmp
adc
nop
jns
xchg
inc
fsubrp
mov
mov
mov
andl
adc
and
in
adc
sarb
add
xchg
jns
subb
add
push
jge
ljmp
mov
inc
insl
push
loop
fstps
nop
outsb
jp
pop
pop
das
push
into
idiv
daa
pushf
arpl
sarb
out
addr16
push
inc
or
clc
or
shll
xchg
outsl
mov
jbe
sbb
inc
test
inc
xchg
sub
mov
pop
push
pop
dec
sbb
or
pushf
cld
outsb
jb
jns
into
pop
into
movsl
imul
and
testl
lret
movsl
jmp
fs
dec
pop
push
cld
inc
cmp
push
or
test
mov
jmp
adc
stos
mov
mov
mov
cmp
push
adcl
pop
test
xchg
mov
xlat
xor
push
sub
pop
popl
je
mov
cmpsl
mov
add
push
mov
or
dec
or
pop
add
sbb
and
out
mov
movsb
ds
and
out
cmp
test
xchg
lea
and
push
stc
or
imul
jge
ljmp
adc
lret
xchg
and
mov
pop
inc
xchg
cmc
xor
cli
xor
cltd
mov
and
xor
dec
subl
js
fldt
lods
fwait
out
and
sbb
push
cmpsb
test
lret
cmp
insb
pop
jl
or
xchg
cmpsl
lret
adc
movsl
hlt
inc
imul
xchg
dec
iret
add
dec
outsb
jb
pop
or
mov
mov
daa
dec
fisttps
or
inc
and
xor
mov
loop
sarl
add
jl
scas
dec
shl
ret
scas
and
xor
fmuls
ret
push
cmpsl
dec
clc
aam
aas
xchg
fisubrs
adc
movsb
leave
shrb
fwait
inc
dec
movsb
inc
lock
xchg
add
xor
jecxz
pop
bound
pusha
xchg
out
sub
movsl
adc
or
or
push
jmp
mov
sti
sub
sarl
sbb
or
negb
adc
and
jge
pop
stos
push
lret
push
rorl
out
push
loopne
rcl
lcall
push
out
test
mov
xchg
aad
and
mov
sarb
aad
sarb
push
lcall
jge
jmp
xor
testb
cs
scas
fwait
jne
xchg
das
ljmp
out
stos
push
mov
aaa
movsb
xor
add
adc
sub
adcb
js
int
sbb
scas
mov
xchg
inc
ljmp
leave
or
xchg
pop
popa
mov
jecxz
dec
in
or
stos
push
bound
call
inc
mov
and
fdivr
in
sub
call
mov
pop
iret
pop
jno
popf
or
shrl
repz
mov
push
ja
pop
sub
andl
lods
mov
daa
mov
push
shl
mov
pushf
sbb
mov
adc
or
leave
mov
sub
push
aam
imul
cmp
iret
cld
loopne
jp
lock
sub
jb
cmpsb
sub
js
iret
icebp
lock
pop
jne
xchg
mov
decl
aas
hlt
jg
mov
sub
aam
mov
sub
lret
and
xchg
and
mov
mov
xor
rorl
pop
dec
cmc
insb
pop
sbb
mov
add
mov
mov
in
repz
mov
cld
dec
lret
call
in
std
xchg
insl
lcall
bound
pop
inc
mov
fmul
fdivp
lods
iret
incb
and
xor
pop
icebp
sti
scas
push
add
bound
in
xchg
dec
mov
fiaddl
add
test
jns
out
imul
nop
jecxz
jp
mov
iret
and
jno
aad
mov
sahf
mov
sbb
jne
push
call
jle
push
rol
dec
lods
sub
lods
sahf
aad
and
cmp
aam
jb
xorl
dec
push
sbb
aad
dec
out
mov
loop
pop
adc
mov
int
cli
imul
sarl
pop
rcl
call
sub
inc
adc
xchg
sub
jp
jbe
inc
and
cmp
mov
cvtdq2ps
inc
sti
daa
mov
fs
js
or
mov
inc
in
cli
push
int3
sbbl
test
sub
adc
xchg
imul
movsb
sub
jmp
xchg
cmp
imul
push
lret
outsl
mov
fdivrs
adc
pop
in
mov
sub
imul
xorl
insb
fs
mov
pushf
in
lock
jne
and
push
fisubrs
inc
sub
fwait
call
fnsave
pushf
les
cli
test
movsb
mov
xchg
jmp
mov
dec
movsl
or
push
push
insb
mov
and
dec
pop
dec
aad
xchg
adc
dec
or
loopne
into
fwait
outsb
jno
mov
add
push
insl
test
out
xor
iret
add
enter
hlt
outsl
shl
inc
cmp
ss
push
cs
mov
mov
je
sub
xorl
push
sbb
inc
faddl
test
sub
stos
stos
mov
sub
popf
mov
stos
or
xchg
lea
mov
push
stos
sbb
jge
dec
pop
clc
lods
jmp
xor
sbb
popf
cmpsl
cmc
andb
iret
mov
mov
mov
dec
push
arpl
cs
and
or
fisubs
psrld
cmp
sbb
mov
daa
sub
repz
ljmp
cld
inc
jns
imul
pushf
sti
add
xchg
daa
inc
loope
mov
in
in
sahf
cmp
je
outsl
lods
add
pop
mov
mov
ret
pop
inc
aam
and
rcll
test
ret
push
add
stc
and
ret
dec
xchg
cmc
xorl
adc
pop
hlt
jmp
push
int
fstl
repz
jb
aam
js
cmp
daa
add
popf
sub
sub
cmp
ja
dec
mov
mov
mov
dec
pop
sub
ficoms
lea
cwtl
testb
adc
or
push
sbb
push
add
mov
cltd
loope
movsl
push
arpl
mov
and
in
lahf
insb
push
pop
dec
sbb
xchg
xchg
addl
scas
lret
adc
or
cmpsl
jns
xchg
call
arpl
sub
or
hlt
and
xor
xlat
xchg
imul
sti
fidivl
loope
loopne
xchg
imul
xchg
ss
popf
fld
test
xchg
cwtl
out
mov
adc
dec
icebp
cmp
xchg
xor
mov
outsb
mov
xlat
js
mov
mov
push
cmp
movsl
mov
dec
std
mov
mov
inc
test
pop
in
adc
inc
imul
std
dec
dec
mov
int3
arpl
cli
dec
xlat
inc
mul
xor
and
stos
sahf
xchg
insb
mov
out
add
push
popa
sbb
sub
mov
pusha
pusha
mov
add
ja
xchg
je
add
inc
push
push
push
scas
xor
push
or
pop
mov
ljmp
add
rcll
add
aam
int
cwtl
xchg
sbb
ror
mov
jp
int
mov
xchg
dec
pop
gs
pop
aaa
push
inc
inc
out
inc
inc
fwait
and
xchg
sbb
rolb
movsb
data16
arpl
and
sbb
mov
mov
cmp
jle
add
xor
cwtl
dec
push
add
jmp
data16
xchg
mov
flds
mov
icebp
adc
push
mov
ds
data16
sub
fsubr
inc
push
bound
sub
pop
sbb
pop
xchg
or
and
cmp
stc
inc
push
je
lret
fisubrl
add
filds
and
or
arpl
xchg
cli
mov
test
mov
mov
fwait
mov
and
mov
mov
or
xor
popa
xchg
rorl
lds
jb
cmc
or
enter
cli
push
fs
sub
loop
mov
inc
js
pop
out
fmull
jecxz
dec
jne
mov
ljmp
or
adc
insb
push
out
sub
jl
xor
aam
push
loop
add
iret
sarl
add
or
xchg
sub
or
cltd
sbb
xchg
xor
pop
push
xor
mov
xchg
adc
pop
cmpb
mov
cs
sahf
xchg
popa
sub
sbb
xor
popf
repnz
pushf
js
int3
add
inc
pop
les
add
push
xlat
je
divps
fsub
and
cmp
inc
int3
and
jmp
inc
sbb
jo
adc
shll
push
movsb
test
jle
xlat
aam
scas
sbb
add
mov
lock
or
clc
add
pop
icebp
lods
enter
stos
jb
jbe
dec
aaa
xchg
fwait
jg
stos
fisttpl
fdivs
test
inc
sbb
lock
adc
cmp
xchg
xchg
aaa
imul
lods
sbb
lcall
fdivrl
sub
idivb
pop
mov
jecxz
mov
xor
imulb
insb
mov
mov
les
loop
into
inc
outsb
in
inc
push
lods
jecxz
lret
push
adc
mov
scas
push
data16
xchg
jl
popa
push
add
repnz
inc
shlb
das
mov
insb
test
inc
fs
sbb
mov
sbbl
pop
icebp
xchg
int3
je
mov
dec
xchg
int3
enter
inc
insb
dec
adc
dec
cmpsb
inc
lock
data16
inc
dec
out
fwait
std
movl
jmp
push
ljmp
inc
mov
or
xor
icebp
jmp
adc
jne
push
mov
dec
movl
inc
pop
jnp
dec
xchg
push
jns
les
dec
dec
add
dec
push
sbb
xchg
pop
lea
lods
loopne
test
xchg
mov
test
jns
inc
loop
lods
pusha
jl
ret
xchg
mov
daa
inc
mov
cmp
out
jle
xor
pop
dec
arpl
sbb
sub
mov
roll
mov
lret
xor
xor
jmp
data16
cs
cmp
test
xchg
aas
mov
repz
sub
outsb
or
mov
aas
fwait
lcall
std
push
icebp
xor
mov
arpl
mov
mov
imul
ror
push
dec
addb
int
mov
loope
push
lds
cmp
push
cli
adc
mov
sar
cmc
jp
jnp
movsb
shll
dec
stos
push
outsb
mov
pop
add
mov
les
pop
popa
orb
sub
out
or
stc
imul
pusha
adcl
adcl
call
jnp
add
mov
outsb
push
movsl
mov
and
push
mov
mov
lea
ret
and
das
jecxz
xorl
add
pop
pop
das
sub
cmp
xchg
hlt
int3
jmp
loopne
jmp
pop
pop
and
jge
jle
sbb
mov
pop
cmp
inc
cmpb
mov
fcomps
pop
mov
std
xchg
adc
jnp
sbb
outsb
xor
movsb
pop
pusha
inc
push
test
sub
neg
adc
movsb
fwait
aaa
in
adc
push
mov
xchg
notb
mov
fildll
stc
aas
mov
cmp
jecxz
xchg
lea
repnz
mov
pop
push
or
rcrb
inc
les
ret
push
or
sbb
add
sub
or
sbb
and
xchg
lret
testb
push
in
mov
adc
dec
insb
push
ret
jae
push
into
jge
pop
ret
pop
ds
xor
dec
dec
mov
insl
and
out
pop
jl
nop
sbb
mov
jge
mov
inc
mov
pop
fiadds
pop
into
shrl
push
and
dec
adc
xor
jmp
mov
fbstp
xor
out
testl
mov
ljmp
dec
pushf
inc
addb
lods
and
insl
jle
sub
xor
cmpsl
dec
movsb
or
push
in
aaa
xchg
pop
fsts
sbb
xchg
loopne
mov
adcl
das
push
scas
sti
and
adc
cmp
ret
out
xchg
test
mov
rcrl
ret
hlt
insb
xor
sub
loop
clc
pop
fidivs
fistl
add
test
push
cmp
fsubrl
fcoms
xor
push
ds
mov
pusha
mov
xchg
inc
jns
xchg
jne
add
loopne
aaa
jnp
imul
cmc
jae
and
shrl
mov
cmc
mov
add
mov
and
dec
add
mov
jmp
shrl
lods
int
inc
mov
fwait
test
inc
or
mov
or
cli
test
stc
xchg
clc
add
pop
aam
sbb
mov
sub
mov
ret
mov
ja
dec
mov
enter
loop
fmuls
sub
insb
pop
cmpl
mov
xor
test
cmp
cmpsl
pop
inc
dec
daa
cmpsb
xchg
dec
rcrb
adc
lcall
insb
pop
inc
mov
inc
outsb
js
push
adc
push
or
int
addr16
sub
aas
hlt
movsl
pop
push
inc
mov
adc
mov
nop
jl
and
fwait
inc
dec
cltd
mov
clc
and
jp
and
repnz
pop
subb
mov
mov
dec
mov
pop
add
mov
inc
adc
xchg
mov
ja
imul
lret
shll
push
jle
xor
stos
cmp
lods
inc
call
add
push
or
mov
mov
pop
fwait
lahf
cmp
roll
sar
push
imul
inc
in
aad
dec
dec
lea
es
mov
xchg
dec
add
stos
out
lods
push
mov
insl
cmp
sbb
push
inc
xchg
test
or
cli
pop
fimuls
iret
mov
xchg
test
in
lret
sbb
icebp
js
loopne
incb
xor
inc
xor
out
negb
pop
stc
pop
and
cmp
test
fildl
in
jecxz
icebp
or
inc
sbb
scas
lods
push
out
cmp
cmpsb
mov
xor
mov
movsb
sbb
je
insb
cmp
decl
push
jmp
mov
mov
movsl
add
mov
pushf
cmp
mov
loopne
jl
xor
mov
jno
jmp
aad
and
scas
pop
fwait
xor
cmp
mov
adc
xor
jne
and
fiaddl
repnz
repz
test
stos
cltd
inc
cmp
or
lds
dec
mov
and
stos
out
xor
fcomi
out
cmpl
insl
imul
cmp
out
iret
decl
add
jb
xor
xor
cmp
dec
adc
add
lods
mov
or
adc
mov
pop
jo
cmp
in
mov
aaa
stos
cltd
aad
pop
dec
rcl
lret
sbb
add
sub
mov
mov
adc
test
xlat
xor
dec
jmp
mov
ja
xor
sbb
push
or
pop
dec
pusha
icebp
imul
fdivl
popa
and
jge
mov
mov
lods
repnz
aas
stos
pop
and
movsb
in
sbb
js
fists
lcall
arpl
and
and
xchg
ret
add
add
lret
adc
dec
orl
push
mov
xchg
test
jge
push
inc
out
nop
or
nop
filds
sbb
pop
lock
push
push
xchg
int
and
adc
sbb
xchg
pop
add
call
out
test
sarb
push
mov
dec
jb
xchg
sbb
lds
inc
fisubs
std
cld
mov
inc
inc
push
pop
inc
les
out
in
lret
and
sbb
xchg
leave
sub
inc
aam
cltd
movsb
xchg
jae
test
into
jmp
dec
xor
pop
add
lret
in
ds
sti
cmpsb
test
jnp
jge
cwtl
and
push
movsb
std
fcos
into
pop
cmp
cmpsb
cli
es
ljmp
sbb
mov
lods
sbb
test
xor
push
mov
and
push
cmp
js
or
pop
movb
mov
push
loopne
testb
lahf
cmp
jb
stc
adc
cwtl
stos
mov
xchg
push
mov
aaa
cmc
subb
andb
pop
xchg
mov
xchg
mov
dec
out
gs
mov
cmp
push
mov
adc
adc
jmp
xchg
or
xor
fstps
inc
and
andb
aas
mov
mov
pop
mov
notb
xlat
dec
stos
in
dec
cmp
rcll
mov
and
sbb
jle
mov
xchg
hlt
pop
jle
sbb
imul
arpl
popa
mov
lea
adc
into
mov
and
jge
xchg
cmp
in
in
mov
pop
fldt
imul
mov
or
inc
adc
xchg
mov
mov
dec
lea
cld
pop
loop
cmc
in
xorb
cwtl
push
adc
jle
aaa
sbb
in
ljmp
mov
adc
pop
adc
xor
mov
or
jecxz
imul
lcall
mov
jns
test
hlt
adcb
or
fistl
les
lods
aad
mov
mov
cmp
push
pop
mov
jb
add
jns
dec
lea
mov
outsb
pop
mov
jg
imul
mov
lock
outsl
fidivs
cmp
push
rcrb
scas
xor
cmp
jge
nop
or
pop
popa
jno
flds
and
pop
mov
mov
stos
imul
clc
cmpsb
movsl
cmp
leave
mov
jnp
sub
aam
dec
leave
gs
and
mov
cli
insl
repz
xchg
aam
pop
xchg
mov
or
bnd
inc
jae
pop
leave
hlt
cmp
ss
repnz
xor
sbb
inc
jmp
ja
sub
pop
add
and
adc
aad
leave
cmp
ja
repz
mov
xchg
and
in
or
scas
notb
pop
push
orb
xchg
cmpsl
xor
inc
outsl
jp
xor
mov
shlb
in
jecxz
sahf
mov
hlt
jmp
push
pop
push
pop
jg
xchg
mov
scas
hlt
lods
and
pop
push
test
pop
les
push
std
inc
mov
mov
leave
lods
pop
stos
lret
pop
pusha
xchg
lock
mov
movsb
stos
ljmp
rol
cmpsb
adc
rcrl
mov
test
std
ret
push
push
stos
sar
mov
sahf
decb
cmp
leave
vpshaq
dec
mov
int3
out
mov
aaa
enter
int
adc
and
pusha
jp
inc
mov
aaa
inc
in
sbb
repnz
icebp
ljmp
shrl
pop
lcall
or
loope
fsubrl
sbb
dec
push
movsl
cmpsl
inc
mov
mov
push
stos
and
mov
ljmp
adc
and
out
jno
out
adc
leave
xchg
enter
lcall
mov
out
aaa
pop
movsb
jmp
test
lods
or
andl
lret
pop
pushf
cmp
mov
pop
xchg
mov
jecxz
sub
lods
add
arpl
aad
jle
out
das
ss
int3
inc
lods
nop
push
adc
cmp
jb
imul
hlt
jbe
mov
sub
adc
add
popa
pop
jbe
ljmp
xor
jmp
repz
call
mov
or
in
arpl
shl
xchg
mov
or
popa
pop
inc
push
aam
xchg
jecxz
add
pusha
sbb
sub
xchg
adc
mov
mov
dec
cmp
int3
andb
mov
std
add
push
fistps
jnp
dec
or
popf
out
mov
sub
fsubs
cmp
mov
rcrl
daa
push
sarb
mov
adc
loope
mov
xchg
rcl
shll
repz
xchg
and
inc
popf
clc
inc
or
or
int
int
ja
fcomp
nop
push
mov
mov
cwtl
incb
and
popa
clc
and
mov
inc
push
aas
loope
ret
enter
aas
std
mov
insb
jns
jns
push
mov
leave
adc
xor
pop
dec
cli
mov
push
js
leave
xchg
scas
arpl
xor
imul
lret
rcrl
mov
jbe
add
or
dec
jnp
xchg
adc
sbb
sbb
or
jl
filds
cltd
dec
cmpsb
iret
inc
pop
lea
cmp
pop
fisttpll
cmc
dec
pop
test
fcoml
cmp
cmp
add
adc
xor
scas
xchg
hlt
pop
dec
popa
or
aas
sub
popf
imul
outsb
fimull
and
fldl
rclb
mov
jne
iret
sbb
call
push
ret
pusha
jge
shl
clc
add
inc
sti
adc
xchg
pop
cmpsl
xchg
sti
mov
out
addr16
jecxz
dec
cwtl
mov
fcom
cld
test
aad
fistpl
mov
adc
and
stos
push
add
jbe
imul
shll
ficoml
clc
sbb
jb
mull
add
mov
shrl
adc
jnp
je
insl
jge
dec
add
or
out
mov
dec
jl
rorb
dec
stc
mov
cli
clc
cld
xchg
mul
ret
pushf
roll
adc
sub
push
xchg
ror
adc
es
dec
push
mov
ret
outsl
sbb
mov
mov
sahf
pop
ret
xor
jle
push
stos
or
clc
scas
test
mov
cld
fdivrs
sbb
dec
aaa
das
movsb
iret
nop
mov
ret
movsl
les
insl
daa
test
xchg
or
push
mov
lret
pop
in
sbb
popf
dec
repnz
jbe
or
jbe
in
mov
cld
mov
test
cli
hlt
xchg
and
mov
pop
or
mov
inc
sub
jmp
dec
mov
and
jg
and
cwtl
mov
cld
shll
mov
fcmovbe
mov
adc
adc
call
aaa
mov
mov
sarl
mov
bound
pusha
outsb
jbe
ljmp
and
xor
cli
cmp
pop
and
dec
or
and
sbb
bound
mov
add
aad
mov
jle
jge
ljmp
imul
mov
xor
insb
insl
scas
jbe
cmp
loopne
cmp
sbb
out
enter
call
test
bound
shl
lock
and
sbb
pop
bound
cld
cld
pop
push
push
xor
cmpsb
repz
in
jg
pop
xchg
sti
mov
sub
mov
arpl
rorl
mov
push
movsl
mov
pop
lds
bound
lock
mov
sbb
mov
sbb
mov
fmuls
add
xchg
jns
jb
out
mov
in
xchg
fdivl
or
mov
inc
dec
xchg
add
lds
jne
aam
lods
mov
xor
adc
cli
insl
or
push
dec
and
icebp
cmp
fcomps
xor
mov
jno
dec
aad
pusha
or
imul
cmp
loop
xor
add
iret
mov
jne
xchg
or
popf
lock
es
cmp
mov
dec
iret
cmp
xor
stos
addr16
mov
fistl
lcall
dec
sub
push
xlat
fists
pop
rclb
mov
sti
mov
lret
enter
fistpl
aam
fmuls
cwtl
lcall
test
add
inc
cmp
fisubs
cwtl
icebp
jb
daa
dec
push
dec
hlt
fists
nop
add
loop
mov
scas
leave
sbb
aaa
int3
std
xor
adc
adc
add
inc
aaa
loopne
add
sbb
mov
lahf
fwait
and
cmp
arpl
lahf
jmp
aaa
lds
je
xchg
pop
xchg
flds
sub
mov
and
pop
push
sbbb
xor
daa
mov
inc
push
pcmpgtd
xchg
xor
outsl
sbb
call
and
and
mov
shlb
mov
fwait
shll
enter
xor
clc
mov
aaa
pop
je
ds
xchg
and
jbe
push
add
add
out
insb
addb
in
subb
pminsw
and
ret
pop
lahf
cmpl
lods
jne
ret
cli
mov
int3
or
fstps
das
cmp
or
sub
push
sbb
aad
xchg
and
hlt
mov
inc
xchg
pop
in
mov
test
or
add
inc
pop
mov
push
mov
add
push
sbb
loopne
pop
mov
stos
mov
out
test
lret
xor
outsl
push
add
xchg
pop
fcom
test
mov
xchg
mov
push
add
xlat
jae,pt
add
inc
stos
pop
pop
test
pushl
das
push
mov
bound
outsb
lods
mov
shrb
adc
inc
mov
push
in
xchg
cltd
push
cmp
imul
mov
std
and
xor
call
xor
mov
cs
arpl
outsl
sbb
fdivl
cli
pop
scas
push
inc
dec
stos
sbb
push
adc
pop
mov
push
jo
sbb
xchg
jno
push
faddp
adcb
pop
stos
add
fsts
stc
add
dec
adc
rcrl
fmul
clc
out
cmp
dec
mov
sbb
insl
pop
into
mov
ss
xor
fwait
in
jns
fst
lock
sbb
xor
mov
insl
inc
cmp
ret
rol
jae
inc
cld
mov
xor
iret
or
push
dec
xchg
out
and
std
fbld
push
mov
fbld
and
inc
dec
and
push
iret
arpl
repz
aam
cltd
rcrb
shlb
arpl
scas
add
pop
mov
data16
xor
shlb
loop
inc
sub
sub
xchg
add
cmp
lret
push
iret
mov
fnstsw
insl
decl
cmp
jmp
mov
inc
jne
mov
jg
cmp
imull
mov
sbb
daa
cld
mov
sub
mov
pushf
out
js
addr16
rolb
lock
dec
sbb
cli
out
inc
pop
out
sbb
cld
pop
pop
int3
mov
xchg
divb
mov
out
rcll
pop
fsub
cltd
or
leave
jge
cmc
mov
repnz
or
mov
mov
repnz
stos
add
xor
jae
cld
push
js
in
fs
fs
pop
dec
mov
movq
or
push
out
repz
shll
scas
push
push
and
pushf
sub
xor
cld
arpl
loope
into
out
jge
and
pop
cli
flds
rcrl
push
movsl
out
mov
cmpsb
int
add
rol
ljmp
iret
aas
nop
insl
pop
xorl
idivl
mov
ss
push
jno
pop
cmp
mov
and
lahf
push
mov
out
jne
movsb
push
jne
popf
inc
bound
jl
mov
jecxz
and
jmp
adc
and
mov
aas
sub
mov
dec
and
jae
add
dec
out
insb
dec
imul
inc
sahf
adc
sub
test
shl
xlat
rcr
add
mov
addr16
aad
in
aaa
mov
lcall
push
and
not
sbb
js
hlt
shlb
pop
add
test
addr16
mov
lods
mov
mov
pop
or
arpl
mov
jecxz
and
jns
sbb
scas
shl
add
pop
xor
repnz
push
test
inc
movsl
and
cltd
daa
xor
mov
xchg
test
xor
mov
cmc
pop
lods
movsb
push
dec
dec
out
jecxz
aad
mov
adc
pushf
jecxz
xchg
decb
ljmp
mov
mov
mov
in
mov
xor
mov
push
jecxz
inc
imul
xchg
frstor
adc
xor
push
push
dec
xchg
ljmp
or
int
xchg
in
movsl
dec
xor
lods
push
inc
mov
or
popa
cmpsb
add
nop
addr16
pop
dec
lds
hlt
sub
sub
sub
call
fisubs
test
fwait
push
sbb
push
jbe
xchg
jg
add
aad
ret
sbb
mov
jbe
imul
sub
pop
and
repz
pop
or
sbb
pop
fs
push
stos
das
or
sub
mov
in
cmc
mov
je
clc
ud2
ffreep
and
les
pop
xor
sahf
out
xchg
daa
xor
sti
or
xor
adc
arpl
stos
cmp
lds
repz
gs
sbb
aaa
xlat
bound
mov
ds
mov
stos
fidivs
out
clc
cwtl
jnp
clc
hlt
sbb
orl
out
std
sbb
adc
mov
xor
sti
icebp
lret
repz
mov
cli
mov
loop
and
dec
nop
xchg
xor
pusha
and
hlt
aam
and
add
sbb
pop
adc
fs
cmpb
popf
xorl
mov
xchg
push
sbb
jge
mov
sbb
fs
aas
jnp
call
add
les
mov
sbb
and
ljmp
push
xor
jne
aas
dec
adc
jl
enter
jno
lds
jg
cmp
data16
fisubs
out
mov
loope
dec
out
cmp
stos
adc
jl
mov
lcall
fwait
ret
fildll
xchg
mov
jg
jl
lods
mov
or
pop
ljmp
mov
gs
mov
and
cmp
addr16
fcmovnbe
pop
jp
sbb
loop
adc
add
and
aad
pop
fs
imul
pop
je
das
jae
out
cmp
lods
push
pop
push
rcrb
mov
xchg
clc
mov
or
cmp
sub
pop
in
shrb
cltd
hlt
roll
cli
addl
scas
add
mov
fs
cmp
adc
cli
mov
and
mov
sub
sub
lret
outsb
mov
dec
rcrl
cli
int
pop
ret
jae
and
cmp
insl
or
mov
sub
test
push
xchg
arpl
sbb
aaa
jno
push
and
pop
ljmp
in
and
test
stos
mov
xchg
ljmp
sbbl
mov
sub
in
orl
hlt
pop
cmp
in
pop
push
test
or
inc
lea
out
push
in
aas
pop
hlt
lret
repz
pop
aam
sbb
icebp
stos
sbb
mov
jbe
pop
scas
dec
out
or
lods
cmp
iret
mov
xchg
outsl
cs
adc
call
test
add
popf
jo
xor
movb
mov
mov
popf
cli
mov
sbb
out
mov
cmp
sub
punpcklwd
mov
adc
inc
pop
xor
mov
mov
dec
inc
xchg
pop
pop
mov
ret
subl
rorb
jns
outsl
adc
loop
jno
or
mov
imul
rclb
jnp
sti
ss
inc
mov
xchg
int
jle
rolb
mov
ja
xor
inc
and
movsl
outsb
xor
and
stos
inc
push
sub
fmulp
jp
lret
pop
nop
aas
inc
lods
pusha
xor
cmp
pop
subl
mov
movsl
fs
shll
aas
lods
mov
sub
iret
sti
or
imul
testb
test
xchg
call
push
arpl
in
push
jmp
arpl
aaa
leave
jns
inc
aaa
daa
arpl
cs
stc
js
mov
jge
aas
sti
mov
fnstsw
cmp
mov
mov
icebp
jle
movsb
xchg
xchg
push
cld
popa
bound
pusha
push
lea
es
fcoml
pop
mov
mov
or
sti
shl
test
divl
ds
and
sub
jl
rcll
je
inc
jecxz
leave
sub
movl
or
xor
test
push
loope
mov
fcoml
aad
xchg
or
sbb
aas
clc
arpl
fldt
inc
xor
xchg
inc
mov
ss
loope
mov
jne
repnz
xor
not
mov
ret
gs
cltd
and
test
and
aam
popf
dec
inc
ja
aam
sbb
push
ss
outsb
mov
scas
sbb
inc
lods
or
adc
leave
std
mov
mov
xor
or
fcmovnb
rcrl
movl
sarl
repnz
lock
jbe
mov
push
xor
adc
push
aaa
rorb
lea
lcall
mov
xlat
clc
mov
xchg
xchg
imul
lret
push
jo
and
arpl
adc
pop
cmp
sub
mov
mov
testl
mov
stc
dec
ret
jbe
jbe
dec
outsl
loop
xchg
shrb
out
leave
pop
stos
clc
pushf
xor
or
sub
cmp
jns
xchg
dec
movsl
lahf
enter
adc
orb
adc
andl
jecxz
jno
fcomi
movsb
roll
stos
push
cmp
and
and
in
icebp
jns
sahf
outsb
sbb
jecxz
and
jnp
in
mov
in
xlat
and
rclb
arpl
inc
sub
xchg
scas
ja
ss
xchg
mov
push
dec
jb
and
sbb
shl
inc
xchg
add
in
mov
cli
imul
adc
fld
mov
aaa
push
add
inc
mov
mulb
mov
out
cmp
lcall
cmp
hlt
imul
lret
add
cmp
gs
int3
mov
bound
scas
push
ss
jae
xchg
add
test
pop
stc
xor
fsub
lods
imul
mov
mov
mov
lods
adc
bound
cmp
sbb
das
addr16
cmp
je,pn
test
push
add
sub
test
sub
data16
aad
mov
test
jno
adc
insl
sti
jp
jl
sub
orl
fs
sub
movsb
cmpsl
sbbb
cmpsb
sub
ror
hlt
cmpb
push
xlat
or
insb
cltd
aad
incb
pushf
add
push
xor
in
jle
mov
lcall
sbb
xchg
clc
dec
mov
and
push
inc
popf
mov
mov
adc
xchg
mov
cs
insb
mov
popf
or
and
add
scas
mov
dec
xor
daa
sbb
xchg
xor
mov
pop
mov
sub
sbb
xor
dec
dec
adc
std
mov
sbb
and
mov
xchg
outsl
aaa
fcom
push
imulb
jecxz
sbb
outsb
insb
and
sti
sbb
jns
fstpt
scas
add
xor
push
fdiv
sarl
insl
mov
addr16
or
sbb
cld
add
lea
js
ljmp
in
mov
fdivrl
cmp
push
ljmp
lret
frstor
sti
pop
adc
xchg
pop
iret
xor
jecxz
pop
gs
in
push
test
out
int3
mov
shll
mov
pop
movsb
xor
daa
ds
dec
js
jnp
ja
or
enter
pushf
and
xchg
push
sub
add
inc
cmp
fldenv
into
sub
jnp
cmp
pop
inc
add
lcall
add
stos
imul
test
push
lea
stos
jmp
adc
fbstp
stos
pop
dec
mov
adc
shrl
stos
addr16
test
sahf
nop
xchg
dec
and
jno
lock
xchg
imul
xor
cmp
scas
adc
push
adc
xor
ret
aad
popa
add
jle
push
inc
scas
push
in
mov
fistps
ja
scas
pushf
pop
mov
fcmove
cmpsb
leave
jp
mov
jp
repnz
iret
pop
sub
rolb
addr16
jb
std
lods
jmp
cmp
sub
fcom
push
sub
rcrb
data16
push
xor
cmpsl
fstl
in
pop
aam
xchg
in
push
dec
aad
in
xlat
call
xor
cmp
fildl
dec
or
lahf
add
outsl
jnp
and
push
outsl
inc
popf
jns
rorb
lods
rclb
dec
jo
push
out
data16
adc
pop
or
push
fmuls
push
out
int3
adc
xor
jl
xchg
jo
push
roll
push
xchg
inc
mov
testl
cmp
and
in
push
iret
repnz
arpl
daa
push
push
push
cwtl
mov
scas
pop
shrl
insb
shll
mov
jle
mov
xor
fistl
mov
nop
int
popa
subl
in
or
bound
adc
sbb
pop
lods
sbb
mov
dec
sahf
loop
std
cli
sbb
aas
jl
sbb
add
sub
outsb
and
xchg
pusha
cmp
pop
inc
das
xchg
mov
bound
mov
xor
sub
cmp
das
ds
jmp
ds
adc
mov
repz
test
repz
mov
outsl
adc
imul
lea
jnp
mov
and
addb
and
jne
adc
mov
rcr
insl
xor
fdiv
push
pop
movb
adc
mov
dec
outsb
adc
popa
les
leave
and
add
movsb
mov
pop
inc
cmp
lods
fucom
mov
or
cmp
or
mov
mov
dec
adc
sti
push
jbe
out
out
fs
inc
jle
inc
sub
dec
mov
hlt
shrl
or
mov
pop
adc
loope
jp
out
mov
adc
mov
aam
mov
lods
mov
mov
sub
inc
xchg
add
and
sti
adc
sub
shlb
or
mov
dec
mov
jns
dec
jbe
adc
push
orl
mov
clc
pop
loop
xorb
lret
and
mov
xchg
ror
mov
mov
js
ljmp
outsb
out
pop
mov
dec
jne
js
mov
xlat
out
fmuls
jp
cltd
jo
pop
cmp
testb
mov
arpl
mov
cld
test
insb
sub
fcoms
mov
cmp
pop
rcrb
xchg
mov
inc
xchg
lods
adc
mov
shl
decb
je
popa
out
jge
lret
or
cli
icebp
xor
xor
outsl
aam
or
cli
test
lea
or
cld
cmp
push
mov
enter
gs
xlat
push
popa
cwtl
addr16
lds
push
out
out
sub
push
lret
cs
xchg
test
daa
in
adc
jns
pop
add
sahf
pop
jmp
and
popf
ds
testl
add
roll
orl
adc
jns
sub
ljmp
xor
lods
adc
pushf
jb
flds
sbb
sub
ljmp
and
pop
inc
inc
ret
sbb
in
not
sbb
inc
xchg
test
mov
loop
mov
jl,pn
xchg
add
cmpsb
pop
jbe
rcl
addl
xchg
lods
xchg
dec
hlt
test
adc
aad
mov
jne
mov
push
addr16
in
ret
push
sub
xlat
xchg
jae
mov
jmp
or
out
gs
sarl
stc
daa
adc
cld
shrl
inc
addr16
push
mov
cmp
mov
mov
mov
mov
test
pop
cmp
mov
stos
dec
cmc
jmp
dec
subl
pop
daa
sub
adc
fwait
fisttpll
call
mov
pop
jle
mov
push
jo
dec
in
jae
test
imul
mov
fcmovne
lock
mov
inc
rcr
divb
adc
bound
sbb
or
outsb
mov
ds
mov
ds
leave
push
pop
mov
ja
pop
in
in
cmp
je
loop
stc
std
mov
mov
imul
pop
jle
and
repz
popa
out
mov
mov
or
mov
fcoml
mov
sarl
sub
je
sub
sbb
loopne
xchg
jge
lea
push
pop
loope
mov
add
jmp
imul
xlat
ret
jg
repnz
ljmp
inc
pop
cs
and
push
std
sbb
in
scas
push
sub
ds
dec
faddl
aaa
jbe
mov
mov
out
mov
cwtl
add
bound
lea
xor
dec
pop
hlt
mov
sub
mov
lcall
sub
test
incl
pop
pusha
dec
pushf
mov
ret
cmp
mov
pushf
pop
push
sbb
jge
jg
inc
pushf
adc
cmp
add
aas
and
xor
jp
ret
or
jecxz
or
jb
mov
sbb
sbb
inc
bound
add
jne
out
cmpb
and
sbb
cmp
add
add
mov
shll
repz
icebp
rcrl
repnz
mov
clc
mov
jnp
clc
jbe
push
rcll
pop
aaa
mov
and
js
lods
loope
cmp
jae
inc
mov
jmp
sbb
sub
mov
lods
sub
inc
fidivrl
or
jle
adc
dec
inc
xor
mov
dec
fists
lret
arpl
test
sub
lret
aad
ret
cmp
shlb
lcall
dec
xor
jne
ret
cmp
xchg
clc
dec
hlt
data16
push
inc
dec
stos
xchg
jb
cli
mov
jnp
mov
out
and
dec
icebp
jne
shll
add
mov
js
adc
and
aam
inc
push
push
xchg
dec
enter
stc
jo
mov
or
pop
mov
ror
jo
mov
shlb
in
jg
add
cmp
cmp
jne
popf
or
dec
mov
push
call
cld
dec
lahf
ror
das
sahf
inc
pop
cmp
jno
sub
in
xor
jno
add
sub
loopne
jae
test
add
xor
push
ja
jo
inc
pop
mov
rcr
inc
out
sub
mov
pop
test
dec
lds
sti
aad
xchg
mov
fsubrl
cmpsb
cltd
or
sub
sub
push
sub
les
cmpsl
push
xor
pop
scas
jbe
xor
jb
scas
fwait
bound
cltd
cld
push
bound
inc
in
inc
negb
inc
and
mov
or
xor
cmp
sub
fildl
cld
test
dec
lods
or
cmp
xchg
inc
arpl
dec
rorl
loopne
adc
ficompl
js
pop
cmc
das
cmpsb
pop
mov
lock
mov
mov
push
pusha
mov
and
in
mov
scas
incb
sbb
xor
xor
add
notl
pop
icebp
add
in
addr16
rclb
inc
sub
and
fisubrl
xor
stc
xor
cli
dec
fs
daa
lret
pop
push
outsb
fadd
shrb
mov
imul
mull
ffreep
loop
sbb
test
xchg
ss
add
mov
sub
jle
int3
mov
ss
aam
and
sbb
sub
out
test
sti
push
cmp
bound
rorl
mov
add
mov
ljmp
sahf
xor
jns
outsb
xor
cltd
loope
cmp
cld
mov
gs
repnz
or
rcr
fsubrs
push
xchg
scas
pop
xlat
stos
out
into
add
jmp
push
or
fnstsw
adc
daa
push
gs
add
lret
pushf
inc
jae
cli
cmp
mov
js
xchg
cmp
mov
xchg
scas
sub
scas
hlt
push
movsb
pop
test
subb
push
inc
push
xor
ret
nopl
ret
stos
aad
repnz
adc
and
dec
out
adc
sub
sub
out
leave
orl
or
jnp
mov
mov
xchg
xor
xchg
out
dec
add
lods
sbb
dec
jg
repz
fildll
pushf
je
ss
xchg
lods
daa
dec
out
clc
xor
loope
outsb
push
jne
push
ljmp
fwait
loop
mov
sbb
das
push
mov
mov
fstps
push
mov
xchg
mov
stos
adc
cmp
jmp
fistps
aad
jmp
scas
pop
ljmp
ds
outsl
into
pushw
and
adc
dec
lods
push
sbb
pop
leave
enter
fsubrl
push
dec
stos
mov
repnz
or
mov
push
xchg
paddd
adc
out
pop
js
dec
cmp
pop
adc
add
inc
das
nop
into
push
pop
pop
jae
iret
inc
stos
add
imul
daa
pop
iret
sbb
jns
or
adc
sub
mov
sbb
pop
sbb
jecxz
les
xlat
pop
sahf
mov
popf
insl
mov
es
mov
test
mov
mov
loop
outsb
test
cmpsb
dec
cmpsb
pushf
arpl
pop
push
sbb
gs
xchg
fiaddl
pop
test
adc
mov
pop
mov
and
mov
jp
pushf
dec
dec
enter
hlt
icebp
test
repz
out
mov
gs
std
or
sahf
xor
xor
dec
aaa
imul
pushw
xor
xchg
mov
pop
adc
xchg
loope
aaa
cmp
sbbb
lcall
pop
aaa
fidivrs
adc
push
out
movsb
xchg
xor
mov
push
mov
push
pop
in
js
popa
stos
scas
clc
mov
sbb
pop
or
and
mov
stos
cmp
andl
xor
test
mov
jp
adc
or
sahf
sbb
aam
sahf
lcall
add
or
ret
pushf
pop
fmull
jns
pusha
outsl
sbb
pop
andb
mov
lods
sub
jg
addl
fs
cmp
imul
packsswb
push
push
ds
dec
stc
out
push
cs
int3
cmpsb
inc
jne
cmpsl
sbb
stos
and
adc
sub
adc
push
fwait
loope
adc
or
lcall
pop
mov
xor
cmp
jns
sub
cmpsl
or
add
fwait
jae
stos
outsb
xor
in
fwait
stos
aam
test
jmp
push
jp
inc
aaa
jns
fadds
mov
add
and
scas
fwait
inc
fwait
hlt
int3
pop
sbb
add
sub
rorb
jle
inc
out
aaa
lcall
out
inc
mov
xor
xor
mov
mov
jae
lret
popf
enter
dec
fisttpl
mov
and
cmp
addr16
out
or
cld
cmpsl
xchg
mov
testb
cmp
sarb
out
xchg
mov
push
sub
dec
mov
pop
mov
and
enter
sbb
sbb
add
mov
adc
sbb
adc
mov
icebp
add
xchg
mov
je
aad
rcrb
fisttpl
rorl
add
insl
xor
add
popa
call
xor
stos
das
in
mov
mov
mov
cwtl
int3
xor
xor
add
xchg
add
mov
mov
addl
pop
lret
add
lods
rolb
xchg
inc
dec
lcall
testl
shlb
stos
mov
leave
or
imul
adc
and
cwtl
test
test
fwait
insl
adc
nop
inc
loop
popf
lret
jns
jae
inc
jp
ljmp
pop
popf
dec
or
outsb
sete
mov
adc
or
push
or
addb
sub
leave
add
cwtl
jmp
xchg
stos
pop
test
xchg
push
fs
inc
sub
inc
dec
ret
nop
outsl
in
test
xor
lock
mov
outsb
hlt
inc
std
push
cmp
xor
mov
lea
shll
adc
pushf
xor
loope
sub
ficoms
or
cwtl
xor
daa
lcall
scas
dec
adc
jb
adc
cmp
xor
dec
sub
cmp
sub
in
push
mov
jecxz
mov
adc
sbb
push
jecxz
ja
test
int3
jne
dec
or
push
adc
xchg
nop
jle
mov
cmp
fisubrs
mov
ret
ret
fwait
mov
lahf
sub
sub
into
dec
ja
mov
adc
lret
mov
frstor
sarl
insl
xchg
adc
pusha
sbb
addl
scas
mov
xlat
sub
xchg
rolb
insl
sub
sbb
enter
inc
idivb
jmp
jno
fldenv
inc
test
lea
jmp
ja
je
push
rcrb
and
push
aad
mov
sub
pop
daa
jo
and
imul
inc
sbb
lcall
adcb
cwtl
push
lahf
test
push
add
push
xor
push
jbe
out
sbb
pop
push
aam
xchg
and
lcall
mov
mov
pop
scas
push
push
mov
mov
and
pop
fsub
out
fwait
daa
adc
or
frndint
loopne
xor
scas
popa
mov
stos
mov
roll
ja
cltd
pop
scas
mov
loop
xor
inc
fs
mov
bound
imul
xor
jle
mov
xchg
cmpsl
pop
ja
scas
inc
xor
sbb
xchg
jb
test
test
xchg
inc
paddusb
fwait
sahf
pop
push
cwtl
out
pop
cs
jnp
jp
mov
repnz
ja
push
arpl
test
icebp
or
insb
inc
xchg
jb
mov
test
and
or
decb
ljmp
in
pushf
into
mov
jp
dec
jmp
xor
in
mov
stos
sbb
mov
decl
xor
test
jno
stos
mov
pop
into
clc
sub
jmp
fsubl
pop
pusha
pop
adc
nop
call
aaa
jae
int
cmpsb
scas
subl
add
data16
mov
frstor
mov
adc
adcb
jo
nop
out
aaa
dec
scas
pop
insl
add
jae
xchg
add
cltd
and
je
dec
jo
mov
mov
les
xchg
mov
lods
add
xchg
imul
sbb
cmc
and
mov
adc
and
es
push
in
inc
shlb
mov
jae
lahf
sub
pop
in
test
jle
push
ret
dec
adc
adc
int3
ljmp
je
xchg
test
addb
pop
mov
cwtl
and
cmc
or
and
data16
sbbb
inc
xchg
sub
inc
rcrl
pusha
hlt
or
mov
in
sbb
out
pop
mov
aaa
loope
mov
fcoml
aaa
mov
lea
jbe
sub
rol
call
pop
pop
lods
arpl
icebp
sbbl
rcrb
jbe
xchg
cmp
mov
out
fldenv
int
loop
ja
lcall
add
fiaddl
in
imul
adc
xorb
cltd
adc
sahf
popl
ljmp
jns
mov
and
movsb
or
cmpsl
iret
sub
fstp
icebp
xchg
sub
push
adc
ss
add
dec
loope
data16
push
add
lds
sub
cmc
pop
iret
or
push
and
jmp
jne
das
jns
fisubl
adcl
aad
and
cltd
mov
sub
lret
mov
je
mov
inc
insb
mov
inc
xor
or
test
lahf
movsl
outsb
pop
repz
cmc
xchg
movsl
mov
xchg
pop
add
mov
out
mov
add
jmp
mov
stos
push
push
dec
cmc
add
xchg
int
push
or
mov
push
mov
out
rsqrtps
in
movsb
sbb
add
mov
aam
xchg
aaa
inc
test
add
stos
jge
out
enter
adc
mov
xor
loopne
pop
dec
push
outsb
ss
mov
mov
popa
aad
inc
mov
shlb
xchg
sub
stc
aas
sbb
cmc
iret
mov
dec
rcrl
cmpsb
mov
rol
stc
scas
jmp
dec
lret
nop
adc
int
cmc
mov
aad
jg
push
cmc
xlat
add
outsl
push
aaa
stc
mov
and
mov
dec
loop
stos
xorb
cmpsl
jo
push
push
mov
dec
add
mov
cmp
pop
add
pop
test
add
jl
dec
push
das
addr16
jnp
jnp
std
sub
test
inc
lock
stos
inc
insb
mov
and
sub
jl
pop
data16
push
jne
imul
push
xchg
js
mov
mov
fs
sub
adc
jl
inc
push
cmp
mov
mov
xor
ja
outsl
test
sbbb
fiaddl
adc
jbe
fadd
mov
and
aam
testl
cmp
mov
add
lea
addb
mov
push
out
mov
and
pop
fmull
adc
pop
mov
fistpll
rolb
insb
mov
cmp
out
out
inc
push
test
adc
and
pop
arpl
mov
xlat
iret
pop
aad
push
xor
movsl
mov
push
pop
and
aaa
nop
outsb
test
mov
bound
leave
sbb
popa
cmp
jl
xlat
ss
mov
mov
clc
mov
dec
dec
lds
mov
sbb
cmp
roll
xchg
mov
adc
jmp
stos
mov
pop
stos
rcr
sub
cmpsl
lock
jnp
stos
and
pop
mov
neg
mov
icebp
lahf
scas
push
fdivr
inc
adc
and
push
in
sub
outsb
ficomps
pusha
push
sbb
cld
notb
pusha
lret
shr
pop
inc
es
ret
sbb
aas
es
insb
popf
fsubrl
leave
incl
cmp
cwtl
mov
cmp
in
sahf
imul
or
inc
stos
lods
jecxz
js
iret
clc
dec
pop
icebp
in
movsb
pushf
jle
shrb
push
lret
xchg
decl
adc
in
push
sub
test
lods
std
cli
mov
int3
fwait
aas
mov
test
or
outsl
mov
std
xor
cs
or
mov
mov
test
mov
xor
jae
push
sahf
xor
xor
in
push
imul
xor
xchg
xchg
cwtl
push
rolb
repnz
and
movb
cld
xchg
ljmp
push
and
icebp
pop
add
pop
pop
lret
out
mov
mov
lret
fisttpl
fstps
mov
cmp
fcmovnb
mov
pop
je
pushf
addl
add
lret
xlat
cld
push
mov
mov
enter
cld
es
xchg
or
mov
rorl
push
ret
mov
stos
jbe
lods
hlt
adc
jno
icebp
and
daa
mov
inc
cmp
loope
and
subl
dec
outsl
sbb
das
mov
ja
mov
dec
mov
pusha
flds
cmp
sub
into
or
inc
gs
sub
dec
daa
int3
xor
xchg
sub
es
or
sbb
xor
mov
jns
in
cmp
dec
inc
xor
push
mov
imul
out
adc
push
mull
adc
push
mov
adc
adc
repz
shlb
enter
mov
mov
setp
push
pop
adc
inc
dec
movsl
cmp
fsubrs
add
inc
mov
sbb
sub
or
inc
call
call
xor
push
divl
call
cli
cmp
scas
add
or
imul
mov
jle
popf
orb
or
or
stos
and
jecxz
and
aad
in
xchg
lock
adc
mul
ja
lahf
lcall
aad
and
jns
fsts
push
adc
lahf
in
dec
xchg
inc
push
icebp
inc
or
mov
mov
cmp
subb
idivb
xchg
cmpsb
mov
push
shrl
push
xchg
push
and
loopne
decb
arpl
ja
in
mov
clc
sbb
insl
in
sub
ja
popf
fistpll
or
jno
pop
lahf
mov
mov
rcl
sub
pushl
jae
pop
inc
adc
xchg
adc
out
aad
mov
nop
das
je
xchg
mov
cld
jle
ss
dec
sub
cmp
mov
cld
xor
mov
lret
jmp
lea
pop
es
js
cmp
pop
or
mov
adc
ret
dec
loopne
sbbl
sbb
pop
fisubrs
push
inc
push
pop
dec
add
lock
xor
hlt
ret
inc
push
mov
rcr
mov
xor
dec
pop
rcll
jne
push
mov
jecxz
sbb
repz
mov
or
adc
dec
fisubrs
cmp
dec
xchg
pop
in
mov
sbb
sub
push
pop
jo
ret
sahf
jo
decb
push
push
sbbl
or
ret
cmp
loope
jge
and
callw
mov
mov
icebp
in
fistl
mov
das
in
addr16
add
das
xchg
mov
fnstcw
push
inc
push
inc
repnz
icebp
jecxz
cli
repnz
loop
lods
scas
xor
push
sahf
xor
pusha
jbe
inc
fstps
inc
imul
mov
sbb
adc
lcall
jge
bound
adc
into
or
mov
aas
aas
pushw
sub
and
xor
lds
pop
mov
xor
sbb
sarb
jne
bound
mov
mov
inc
adc
push
inc
xor
cs
test
xchg
shll
xlat
ljmp
adcb
sub
lret
xchg
inc
sub
movsb
aas
pop
xor
cmpsb
mov
outsb
nop
insl
pop
and
push
sub
adc
sbb
sub
xor
mov
shll
movb
adc
icebp
call
sarl
jnp
or
adc
std
loopne
ficoms
gs
pop
push
addb
inc
mov
xorl
xor
sub
dec
push
add
jbe
mov
lret
iret
test
sbb
mov
mov
mov
cmp
pop
sbb
inc
adc
cmpsl
push
mov
fildll
or
int
xchg
pop
sahf
pop
sub
pop
sbb
repz
mov
push
or
jmp
stos
or
xchg
not
dec
int
fldl
mov
sub
stc
repz
sub
jge
jmp
adc
xchg
inc
mov
mov
subb
jle
lcall
pop
in
rclb
call
xchg
mov
pop
sbb
sbb
sbb
mov
in
imul
sbb
push
push
scas
mov
mov
scas
pusha
cmp
xor
pop
push
stc
cmp
mov
lods
cltd
into
xchg
mov
adc
pop
mov
aas
lds
aaa
jbe
test
mull
xchg
leave
das
jge
inc
lcall
adc
out
or
adc
jae
leave
xchg
inc
push
mov
push
mov
inc
addr16
push
sub
add
pop
testl
xorb
repnz
xchg
xlat
push
pop
pop
lret
cmp
inc
dec
ret
sbbb
lods
xchg
pop
push
outsl
mov
push
and
jp
aaa
lret
jmp
pop
fstps
dec
adcb
into
dec
cli
adc
push
fdivrl
jecxz
aaa
cmp
push
mov
adc
into
xchg
mov
push
lods
test
sub
ficoms
add
sub
lret
sub
sub
lahf
fildll
pop
das
out
sub
movsl
cmp
inc
loop
in
jno
hlt
mov
cmp
adc
pop
cli
ljmp
or
sub
gs
add
mov
popf
pop
add
out
mov
in
jns
or
outsl
arpl
dec
pop
ss
xchg
and
pop
mov
mov
and
jmp
push
sub
std
out
pop
sbb
mov
xchg
mov
inc
fildl
jle
xor
adc
xchg
cmp
push
xchg
int
mov
movsl
pop
cmp
cmpsb
andb
push
mov
sbb
scas
sbb
dec
mov
jp
test
jo
cltd
push
jns
xchg
dec
inc
filds
clc
cli
sti
pop
jge
jo
pop
es
imull
or
inc
mov
add
scas
sahf
test
mov
frstor
push
sbb
and
xchg
inc
sub
in
scas
sbb
or
xor
jne
mov
cmp
lock
das
mov
xor
add
bnd
sub
rol
mov
pop
adc
push
repz
pop
mov
into
movl
push
xchg
shll
sub
cmpsl
pop
xchg
push
loop
lods
repz
dec
mov
mov
imul
sub
jp
insb
lock
in
sub
mov
xchg
shll
xchg
mov
ja
ret
push
push
loope
sbbl
mov
cwtl
sbb
add
xor
je
ljmp
stc
jmp
inc
scas
push
push
stc
les
jae
sub
mov
mov
xchg
pop
aad
lds
test
nop
imul
push
pop
pop
sbb
mov
ja
outsl
stc
cmp
cli
mov
or
xor
and
sti
mov
js
std
insb
imul
lock
ds
stos
pusha
mov
adc
fucomip
jae
dec
pop
add
mov
in
outsb
add
lea
and
mov
js
lods
pop
mov
pop
scas
js
mov
add
rorb
and
pop
rcl
push
inc
adc
test
shlb
jecxz
jo
fwait
adc
stos
and
lock
rclb
lods
xchg
fiaddl
mov
jp
cmp
sti
fs
add
in
mov
mov
mov
call
int3
push
fidivrs
push
dec
or
sti
jo
pop
xor
aam
test
aad
insl
dec
rorl
pusha
mov
or
out
adc
add
cld
inc
cmpsl
decb
ss
mov
aas
mov
iret
lcall
sbb
je
into
xor
xchg
pop
lahf
pop
sub
xor
pusha
sbb
xchg
and
daa
data16
push
xchg
arpl
popw
fdivrp
xchg
mov
jbe
jnp
dec
sub
sub
mov
fadds
sbb
and
in
cs
pushf
jb
xor
mov
add
lcall
int3
pop
ljmp
jb
mov
adc
mov
xchg
pop
insl
icebp
fiaddl
mov
addr16
in
scas
mov
mov
push
scas
sub
jp
xor
cmp
mov
popf
cmp
inc
xchg
lea
sub
or
fnstcw
push
mov
fsubl
cmp
adc
mov
inc
push
ja
dec
test
cmpsl
imul
pushf
test
jbe
push
push
popa
das
dec
fidivrs
and
out
sbb
jg
clc
jp
lods
les
push
out
cmpsb
mov
icebp
mov
mov
cmp
dec
lahf
shrb
or
mov
iret
call
mov
subl
cmpsb
ds
cli
push
add
mov
lods
into
push
imul
sub
cld
push
dec
sahf
or
addb
aad
inc
and
dec
mov
loope
int3
mov
test
cmp
das
or
sbb
mov
mov
mov
add
inc
jbe
ja
lods
outsl
sub
subb
shr
adc
dec
les
outsb
loope
dec
stos
mov
jb
mov
jo
cmp
lea
add
subb
out
pop
cmp
loop
idivb
inc
mov
xor
push
int3
jmp
sbb
sbb
out
xor
sbb
mov
xchg
mov
jge
lret
nop
jns
mov
in
sub
aas
nop
xor
push
fucomip
gs
test
int3
pop
out
push
dec
cmp
mov
fldenv
sbb
out
aaa
test
mov
mov
shll
test
sub
inc
ljmp
inc
jne
mov
shlb
sub
mov
mov
aas
movsb
fldcw
push
add
jg
cmp
or
mov
xchg
jno
xorl
jge
clc
enter
lahf
decb
pop
ret
clc
dec
xchg
xchg
add
test
xchg
mov
repnz
xor
lret
pop
add
or
jecxz
sbb
loop
mov
cli
in
sbb
mov
adc
aas
push
addr16
out
dec
xlat
mov
push
fildl
push
inc
adc
mov
or
lcall
arpl
mov
lret
movsl
in
lea
or
mov
into
mov
xorb
push
sbb
pop
fcmovnbe
and
mov
loopne
fs
sbb
icebp
sub
sbbb
scas
dec
pop
xor
and
xor
imul
dec
jge
adc
add
test
mov
mov
adc
test
inc
sub
jae
pop
pop
stos
and
adc
sahf
aam
out
add
mov
imul
or
push
xor
addr16
sbb
stc
loope
lds
cwtl
cwtl
cmc
stos
out
pop
pop
mov
adc
pop
and
jle
adc
jmp
or
or
xlat
lret
mov
mov
dec
jp
stos
rolb
inc
je
gs
xchg
inc
sub
cmp
test
subb
ret
pop
push
sub
push
lds
mov
fcoms
sbb
les
mov
xchg
test
shll
mov
repz
add
xchg
and
cli
mulb
dec
outsl
stc
sbb
repnz
pop
lahf
rcrb
rclb
js
das
add
jg
in
mov
pop
aam
push
pushf
fcoml
rcrl
lds
out
mov
sbb
push
test
stos
rcrb
arpl
sahf
or
das
out
push
rorl
pop
add
dec
pop
fstps
and
andb
addr16
push
xchg
mov
cmpsl
lea
or
iret
sub
pusha
loope
jl
add
jmp
push
rcrl
inc
mov
add
xchg
jne
adc
out
mov
or
cli
insb
mov
ret
andb
cli
aaa
lret
fimuls
andb
or
pop
idivl
test
pop
shlb
adc
cmc
fbstp
mov
rcr
loopne
dec
push
inc
or
jne
cmp
imul
mov
sbbl
test
fcomp
into
mov
pavgb
jp
xor
fildl
stc
icebp
ret
andl
icebp
mov
lcall
push
inc
mov
jmp
lahf
data16
popa
stos
adc
clc
xor
cmp
repz
lahf
mov
icebp
es
pop
sub
shl
cmpsl
mov
xor
dec
ds
pop
mov
imul
mov
fldt
sbb
mov
xor
fucomp
movsl
mov
mov
outsl
int
test
nop
icebp
loope
int3
scas
cwtl
jge
jno
xchg
xlat
nop
push
into
stos
sbb
fs
cmp
jnp
out
out
imull
ja
ss
xor
or
cli
nop
std
mulb
ljmp
jecxz
fadd
pushf
inc
hlt
sub
pop
jnp
adc
into
in
mov
ss
call
mov
sahf
mul
xor
insb
add
add
xlat
in
or
jg
cmp
insb
sbb
or
cmp
aam
dec
fmuls
adc
or
pop
xor
pop
cmp
lds
shll
cmp
sub
push
aas
jne
shrb
js
inc
mov
adc
add
push
pop
sbb
or
adc
sbb
sub
std
mov
imul
fistpl
movsb
push
mov
inc
fsubrl
shlw
fldl
xor
popa
sub
mov
test
test
mov
pop
mov
bound
pop
aad
adc
and
cwtl
nop
aas
xor
popa
lahf
push
jne
imul
mov
sub
into
sbb
cwtl
cmpl
or
mull
mov
sahf
fs
or
scas
std
arpl
jb
adc
inc
adc
cmp
fstpl
jb
mov
xor
mov
jnp
movsl
inc
jg
data16
xor
mov
xchg
sub
push
jnp
frstor
mov
scas
jno
out
jle
push
push
mov
out
pop
divl
jl
jne
pop
dec
std
aad
sbb
test
fnsave
je
xchg
inc
fidivl
jmp
shlb
movsb
test
std
fdivrl
int
cwtl
sbb
push
lods
dec
insb
imul
sub
and
lods
cmpsl
mov
xor
rcl
fildl
sbbb
fs
test
adc
iret
mov
icebp
pushf
dec
push
inc
jae
jg
mov
loope
sub
mov
dec
sub
mov
arpl
lret
popa
mov
sub
or
jne
xor
mov
fsubrl
add
and
xchg
fwait
ret
test
cmp
das
inc
punpckldq
leave
repz
loopne
jbe
lods
mov
lods
add
and
ret
lret
mov
pop
call
mov
adc
fsubrl
jecxz
fs
out
adc
dec
call
aad
jo
xor
add
addr16
stc
cmp
sarl
xor
sub
mov
dec
sub
iret
jecxz
in
mov
push
fmuls
and
rcrb
aam
mov
leave
mov
sub
pusha
roll
ds
jg
iret
loopne
dec
jno
dec
cmp
xchg
js
inc
mov
xchg
sub
stos
inc
cmp
mov
test
inc
xchg
adc
xchg
fs
pop
xor
test
jno
test
mov
sub
adc
movsb
jno
ljmp
or
cltd
push
cmpsb
fcmovnu
add
pop
inc
add
inc
pop
hlt
sub
ret
add
cmpsb
push
mov
imul
mov
int3
imul
push
lods
stos
push
cwtl
shl
inc
popa
aas
pop
js
notl
scas
mov
adc
jo
sub
cmc
in
jno
dec
mov
lock
jbe
enter
test
push
pop
mull
aam
clc
jne
xorl
in
orb
cmp
cmpsb
mov
mov
jmp
xchg
sbb
pusha
mov
push
subb
ljmp
aad
nop
call
in
xchg
push
mov
out
xor
popf
jge
ret
cmpsl
xor
fistl
sahf
out
outsb
xchg
loope
out
loope
adc
outsl
pop
inc
cwtl
jecxz
loope
cwtl
sbb
das
rorl
pop
push
xor
xchg
nop
pop
pop
loop
dec
mov
cmpsl
aaa
pop
lea
push
cmp
fucomi
pusha
mov
push
and
lcall
scas
inc
add
je
adc
cwtl
lock
push
sbb
imul
addr16
jae
repz
push
out
pop
and
jg
pop
daa
adc
and
and
push
fcoml
mov
jp
inc
or
dec
shll
mov
fmull
sti
mov
sbb
push
jo
test
xchg
inc
xchg
or
inc
std
cs
orl
dec
mov
mov
or
xlat
xor
cld
jo
mov
mov
ss
mov
and
add
repnz
movb
mov
jmp
mov
sahf
pop
inc
sbb
movsb
mov
dec
mov
das
mov
mov
ljmp
loop
mov
loope
inc
inc
push
orl
in
jnp
push
mov
pop
insl
sub
aam
rolb
cwtl
in
add
sti
fsts
push
arpl
out
test
cwtl
adc
test
fcomps
mov
mov
mov
rcr
rcrl
mov
mov
imul
mov
xchg
and
mov
mov
ret
pop
sub
sti
xchg
inc
mov
lea
sti
lds
xchg
pop
sub
nop
cmpsb
jo
dec
xabort
popa
pushf
sub
insb
fcmovne
arpl
lret
fimuls
iret
fildl
shll
int
mov
jbe
adc
inc
push
or
mov
sbb
jnp
mov
testl
lods
nop
or
je
jecxz
pop
jns
inc
cmp
aaa
jnp
stos
icebp
out
clc
les
mov
inc
test
mov
popa
push
fcmovb
fdivl
fsubl
mov
leave
cmp
inc
scas
pop
mov
movl
jmp
cmp
lock
sub
or
arpl
cwtl
addr16
fisttpll
aad
or
xchg
add
xor
inc
cwtl
mov
xor
mov
push
push
iret
adc
fcmovb
cmp
push
cld
adc
lods
sahf
and
mov
jbe
add
pop
ljmp
cs
std
clc
push
into
es
les
dec
mov
jbe
push
sub
jo
enter
cwtl
pop
and
je
jp
sbb
push
aad
lods
lcall
fcoms
mov
mov
adc
mov
add
bound
std
out
lret
jecxz
and
add
xchg
dec
adc
cmp
out
cmp
cmpsb
mov
outsb
cmp
jnp
stos
inc
mov
out
cli
icebp
fs
fwait
gs
dec
pop
imulb
mov
sbb
and
into
clc
fs
pop
lret
jae
arpl
vshufps
negb
inc
arpl
movsl
ret
mov
jne
pop
inc
lea
sub
je
dec
inc
jo
icebp
jmp
lods
mov
fdivl
dec
nop
ljmp
popa
cmp
inc
or
rclb
stos
enter
pop
adc
sbb
imul
dec
hlt
incb
mov
push
mov
mov
fsubrs
loop
fwait
push
ret
fnstenv
or
out
es
sbbb
jo
loopne
pop
jl
pop
pusha
lds
test
add
mov
mov
cmp
mov
scas
xor
inc
ds
stos
es
xlat
mov
xor
jo
out
push
jo
icebp
hlt
in
fsubrp
and
filds
aaa
jo
cmpsb
xchg
lret
mov
out
cmp
fists
jb
fdivrp
hlt
pop
xor
mov
clc
les
dec
mov
push
addl
popf
cmp
addr16
outsb
inc
dec
mov
andl
outsb
sub
mov
fs
in
test
mov
icebp
pop
jecxz
sbb
divb
mov
mov
fwait
xchg
push
les
je
test
jne
add
lds
mov
jmp
push
int3
xor
or
sub
mov
mov
mov
pop
imul
ljmp
idivl
cmpsb
lgs
sahf
pop
cmp
sbb
movsl
sub
mov
cld
dec
call
in
hlt
lods
inc
idiv
pop
jbe
dec
insl
imul
sbb
mulb
jb
xchg
or
fsincos
push
sbb
std
mull
lods
pop
lret
gs
mov
addl
inc
xlat
mov
fsts
push
mov
sahf
sub
test
aad
dec
inc
dec
scas
xchg
pop
hlt
pop
adc
adc
push
scas
pop
fisttpll
xor
mov
stc
sbb
jecxz
add
sbb
test
scas
pop
or
push
cmp
cwtl
sar
inc
xorl
mov
and
sub
scas
imul
pop
test
lret
jge
aad
nop
cmp
inc
sbb
mov
lods
fwait
mov
fiaddl
inc
cmp
xor
mov
sbb
loope
mov
xchg
dec
in
mov
inc
xchg
ss
mul
or
sub
xlat
cmp
in
inc
pop
aas
adc
mov
xchg
arpl
lret
pop
jo
dec
mov
mov
cmp
mov
cmp
incb
dec
mov
out
lods
loope
xchg
rolb
pop
outsl
arpl
cmpsl
mov
and
test
pop
notb
jecxz
hlt
cmpsb
popa
inc
subl
loopne
inc
inc
test
pop
out
and
js
mov
mov
fdivrl
pop
add
rolb
sbb
jae
push
mov
dec
inc
jb
bound
dec
mov
xchg
ja
sbb
or
adc
cmp
ss
rorb
sbb
outsb
jne
cmp
je
add
mov
js
xchg
sbb
sti
pop
sub
adc
inc
js
pop
mov
push
xor
lock
lds
and
rcrb
xor
ficoml
mov
dec
fimull
ds
into
pusha
fisubl
push
sub
addr16
xchg
jge
xchg
pop
or
sub
addr16
nop
popf
int3
cltd
fdivrs
or
leave
repz
lahf
pushf
mov
inc
xor
dec
mov
imul
add
je
or
jnp
fwait
mov
jnp
and
lds
mov
jecxz
jge
mov
in
hlt
es
negl
pop
push
mov
cwtl
jle,pt
cmp
mov
sbb
sub
rcl
lods
sti
icebp
mov
iret
test
fwait
test
push
out
push
sub
stc
sub
cmc
popa
mov
mov
xor
pop
sub
sub
fsub
pop
insl
push
lods
lock
and
adc
push
jmp
pop
aas
jnp
aad
pop
int3
mov
and
xlat
insb
les
add
in
imul
popa
push
mov
into
loopne
aaa
pop
xchg
mov
imul
mov
cmp
vpmacsswd
jle
sbb
int
movl
sbb
adc
outsl
fildll
inc
insl
adc
insb
mov
and
add
fs
fwait
pop
lret
int
dec
jnp
mov
pusha
mov
sbb
aaa
movsl
and
out
lcall
cmp
sarb
xor
xor
repnz
shll
call
sbb
adc
xchg
jns
pop
out
mov
mov
test
int
adc
aad
out
divb
lds
xchg
jnp
dec
jb
cmpb
frstor
inc
in
popa
fwait
mov
sarl
je
dec
cld
clc
cmpl
lea
int3
xor
daa
repnz
inc
ret
insl
sbb
aaa
push
sbb
mov
jge
add
aad
xchg
sub
mov
jbe
cmc
lds
mov
push
jge
mov
mov
shrb
out
mov
stc
sti
pop
aad
outsl
mov
sub
xor
lret
adc
das
test
popa
xchg
fmull
out
inc
dec
cs
aaa
mov
adc
mov
sbb
cmp
scas
out
pop
lret
sahf
inc
add
push
shufps
mov
stos
mov
into
rcll
cmc
inc
mov
cmpsb
idivl
add
cs
iret
pop
pop
sub
jo
pop
lea
jns
aaa
ljmp
dec
xlat
mov
js
or
sbb
mov
out
das
add
cmpsb
inc
ficompl
fdivrl
push
stos
adc
fidivl
mov
adc
xor
and
scas
scas
rcrb
test
inc
cmp
dec
jecxz,pt
sbb
subb
jb
popa
mov
mov
sahf
and
add
sbbb
push
nop
aas
sbb
mov
iret
addr16
mov
pop
enter
test
ja,pt
sub
add
sub
fidivrs
sub
cmp
xor
mov
or
fstl
lret
mov
aad
loop
lret
cmc
out
into
cwtl
aas
testl
dec
push
test
or
cmc
adc
mov
lcall
mov
cltd
sti
push
pop
mov
repz
push
mov
dec
hlt
xor
mov
scas
mov
jne
xor
shrb
or
sahf
sti
ret
jmp
xchg
cwtl
inc
ja
stos
sar
daa
jp
mov
dec
sbb
cltd
mov
jle
dec
popf
jno
fistpll
in
ffree
xchg
adc
sub
xchg
stc
bound
or
push
sahf
or
cwtl
std
inc
lea
stos
sub
pop
fadds
ljmp
sbb
push
sub
xor
sbb
fldt
inc
movsb
xchg
add
lea
jo
jmp
mov
iret
int3
aad
in
xchg
pop
pop
cltd
imul
lcall
mov
inc
inc
sbb
xor
roll
push
inc
inc
sbb
add
mov
mov
add
adc
test
inc
inc
and
push
adc
enter
add
ljmp
daa
push
xor
mov
pushf
gs
bound
pop
xchg
outsb
insb
inc
sahf
xchg
lods
les
pop
scas
mov
fs
movsb
je
add
pop
subw
je
out
add
addr16
and
or
jge
jmp
adc
mov
sarb
push
cltd
mov
inc
and
sbb
imul
call
xchg
je
lret
aad
and
lahf
inc
mov
dec
scas
or
in
pop
test
jnp
dec
jmp
stos
mov
rep
sbb
inc
lahf
xchg
xchg
pushf
fimull
stos
addb
xor
and
jge
xchg
loope
pop
scas
adc
adc
pop
es
imul
loope
xor
cmp
xor
pop
sbb
pop
ret
dec
xorl
push
rcrl
jge
cmp
mov
or
scas
int
add
cmp
sahf
cmp
pop
adc
inc
nop
int
sarb
adc
out
lds
mov
mov
push
jp
jge
xor
pop
xor
pop
stos
dec
jb
pop
roll
fs
pop
pop
movsl
pop
data16
notl
pop
dec
xor
xor
lret
inc
add
test
bswap
push
hlt
add
pop
mov
pop
xor
pop
mov
adc
mov
in
mov
jnp
sub
mov
out
xchg
jmp
pushf
subb
lret
xchg
stc
cmpl
pop
stc
bound
movsl
sbb
sub
fcoml
jl
sub
pop
cmp
ret
movsl
flds
roll
jle
fmuls
fsts
or
or
sub
sub
jge
push
xchg
mov
arpl
cmc
sbb
fs
ret
dec
loope
xchg
rcll
adcl
push
mov
cmp
insb
adc
or
outsl
jp
fidivs
fadd
fistps
mov
movsb
mov
addl
xor
pop
and
xchg
loope
add
fs
test
ds
xchg
mov
std
out
xorb
fs
clc
pusha
and
and
push
cmc
push
out
stos
fimull
xchg
out
or
sbb
sub
fimuls
jg
repz
test
mov
push
and
ficompl
enter
jle
repz
xor
mov
xchg
mov
aam
add
adc
jmp
adc
pop
pusha
mov
cmp
add
std
movsl
push
dec
and
stc
hlt
sti
push
int
insl
mov
fstpl
jae
test
adc
jb,pn
outsl
xchg
jbe
dec
lds
out
rcr
pop
int
add
pop
push
cmc
and
jg
mov
xchg
sbb
dec
cld
and
repnz
xchg
dec
or
mov
or
out
js
sbb
fcompl
scas
imul
outsb
mov
and
gs
mov
iret
xchg
and
pop
out
push
sbb
cmp
mov
ljmp
push
movsl
shll
ss
imul
xor
loope
and
or
pop
insb
out
sub
adc
adc
jl
inc
adc
pop
or
dec
and
out
sbb
arpl
bound
sti
mov
rorb
xchg
arpl
jp
mov
sub
ret
int3
stc
fucomp
dec
inc
into
jecxz
push
cs
loopne
loop
sub
test
lea
inc
out
insl
jl
sub
jns
out
cmp
adc
adc
imul
jmp
push
xchg
aam
or
jle
loop
pop
dec
ret
dec
shll
sbb
stos
mov
pop
stos
sbb
je
push
idivl
mov
push
cmp
push
lcall
rorl
fs
outsb
sbb
in
ret
sbb
lret
movsl
bound
mov
adc
xor
push
jb
mov
push
ss
movsb
push
jge
scas
mov
or
add
sar
mov
pushf
scas
push
push
dec
sub
pushf
inc
out
ret
stos
jg
push
dec
push
inc
xor
addr16
jle
mov
add
les
mov
shll
notl
dec
lcall
or
repz
and
push
push
xchg
mov
lret
sbb
rcrl
xchg
cmp
push
mov
pop
mov
stos
les
pop
cli
dec
popf
cmp
inc
mov
sbb
fs
cmc
lock
xchg
xor
mov
inc
popa
inc
dec
pusha
jg
jb
aaa
pop
lea
mov
jp
lea
push
jle
sarl
lods
repnz
fisubrl
aas
movsl
ss
les
test
sub
mov
hlt
mov
loopne
testb
inc
icebp
pop
hlt
fistl
xor
add
fsts
sbb
ljmp
adcl
scas
mov
icebp
mov
icebp
stc
icebp
xor
jbe
jns
imul
lock
xor
cmp
jecxz
add
ret
insl
fdivl
cmpsl
mov
mov
lds
jp
inc
int
fucom
pop
cmpsb
outsl
mov
jne
rcl
testl
dec
lds
or
int
lret
xchg
sahf
and
out
arpl
jmp
fmulp
cmp
push
cltd
jecxz
inc
xor
mov
roll
fisttps
jbe
push
push
mov
negb
mov
xchg
dec
adc
pop
or
sub
in
ret
shll
dec
or
es
mov
ja
cmp
sub
hlt
cwtl
clc
mov
xor
outsb
ror
lods
inc
iret
and
xor
mov
sbb
stc
mov
in
and
pop
cltd
arpl
int
push
xchg
gs
imul
fisubs
movsb
cmpsb
out
in
out
shrl
pop
jge,pn
cmpsl
mov
ljmp
mov
push
clc
in
push
mov
bound
jnp
mov
xchg
mov
xchg
arpl
jae
mov
enter
icebp
jne
inc
xchg
mov
adc
out
mov
jp
jb
cld
or
stos
lret
ljmp
pop
sub
out
mov
lcall
adc
dec
enter
sub
insb
inc
jbe
fistpl
cwtl
xchg
push
inc
and
mov
mov
cmp
cmp
push
add
lods
sub
in
aam
in
mov
pop
adc
in
push
rcrl
sbb
adc
outsb
mov
dec
push
jbe
rcrb
popf
xchg
xchg
sub
xchg
in
sub
icebp
lods
into
dec
cltd
push
xchg
inc
add
loop
mov
dec
push
adc
inc
sub
ret
dec
add
sub
sbb
lret
ja
das
and
push
adc
push
shlb
daa
pop
and
and
into
xor
lea
fisubs
sar
divl
pop
inc
jne
xchg
fiadds
lods
mov
out
inc
xchg
jmp
push
movsl
mov
push
lods
les
jmp
add
out
in
push
and
inc
mov
mov
movl
jp
push
mov
xchg
mov
js
aaa
test
aas
pop
and
mov
jae
cmp
sub
cmp
fnsave
adc
push
pop
xor
jge
iret
lahf
push
and
push
and
mov
xchg
mov
movsl
movsl
repz
and
test
out
mov
test
xchg
cmc
mov
sbb
dec
xlat
jno
test
enter
jbe
pop
add
sub
inc
push
loopne
test
call
cld
push
xor
outsl
adc
inc
icebp
movsl
iret
scas
sbb
jnp
fsts
pusha
stc
mov
adc
lds
mov
and
add
cld
jne
arpl
popa
xchg
lea
popa
adc
mov
popf
fildl
sbb
pop
jl
mov
pop
cld
pop
dec
mov
cli
jp
int
testb
fildll
push
dec
fadd
sub
xor
lods
fists
inc
dec
dec
pop
pop
mov
xchg
das
fsubl
jo
xlat
jecxz
jno
inc
repnz
cmp
dec
lret
jmp
aad
mov
mov
xchg
lods
ret
jle
add
ds
jg
ficompl
lods
add
sbb
push
pusha
pop
std
imul
sbb
shll
push
loopne
sahf
inc
cltd
ffree
icebp
mov
ret
cmp
dec
hlt
adc
pop
jno
out
sbb
test
mov
cmpsb
or
call
jmp
pusha
mov
pop
dec
movsl
out
xchg
xchg
jnp
test
lret
cltd
sarl
and
and
daa
jl
hlt
gs
dec
xchg
lds
inc
push
cmp
aas
adc
notl
sub
sbb
pop
adc
xchg
iret
addl
jne
push
dec
loopne
sub
scas
inc
and
and
sbbl
out
and
sub
nop
mov
aaa
fisttps
mov
add
xor
inc
pop
dec
adcl
into
cwtl
fdivl
mov
ret
out
push
jae
aam
or
xchg
pop
cmpsb
movsb
pop
int3
mov
loope
pop
test
or
jle
and
inc
mov
mov
jmp
dec
test
push
inc
mov
sbb
xor
sbb
mov
shrl
xchg
out
pop
xlat
jle
das
daa
push
rcrb
and
mov
pop
mov
in
and
mov
mov
pop
mov
ds
adc
lock
add
loop
pop
mov
fucomi
in
xor
mov
pop
or
fldt
ss
push
cld
shll
testl
xchg
test
xor
cmp
test
xchg
mov
in
fcmove
or
pushf
mov
or
addr16
sbb
call
test
ds
in
sub
loopne
mov
test
movsb
hlt
mov
and
test
es
add
xor
pop
in
sti
adc
pop
cmpsl
adc
lea
jp
push
mov
dec
mov
ret
adc
or
push
mov
cld
mov
inc
clc
mov
scas
rcr
mov
adc
cwtl
daa
ljmp
out
dec
add
mov
mov
dec
pop
push
xchg
stc
pop
ljmp
cmp
cmp
ljmp
push
inc
arpl
and
sub
rcrb
xchg
push
hlt
xchg
add
sahf
jl
mov
bound
leave
inc
addr16
adc
ret
sbb
std
jmp
dec
outsl
imul
and
mov
stc
adc
in
scas
data16
pushl
xchg
mov
cmp
sahf
insb
sahf
and
sub
mov
dec
inc
movsl
fimuls
std
xor
xchg
cs
sbb
aad
push
idivl
aam
sahf
std
pop
aas
test
xor
cmpsb
cmp
js
out
or
push
push
in
mov
cmp
lahf
imul
mov
mov
dec
mov
mov
jae
cmp
leave
lcall
push
add
mov
xchg
mov
shl
jno
push
add
pop
mov
cltd
sbb
xchg
or
dec
in
fisubl
and
jge
daa
jnp,pt
arpl
inc
outsb
inc
jns
adc
pop
push
sub
cmp
divl
inc
repz
out
out
js
pop
outsb
or
push
test
and
or
pop
pop
lock
dec
mov
lahf
std
pop
sub
mov
fisubl
xlat
pop
pop
icebp
mov
jmp
jnp
push
mov
es
push
addl
and
or
repz
mov
jnp
test
jnp
jb
sbb
adc
sbb
lret
stos
roll
pusha
or
jae
fs
lea
push
test
add
push
outsb
lahf
sub
inc
out
ret
popf
inc
pop
sub
stos
enter
cwtl
mov
mov
cmp
dec
pop
outsl
popa
scas
adc
out
lock
aas
cmp
sub
pop
out
lret
mov
xor
dec
stos
push
adcb
or
pop
daa
mov
jle
inc
sti
out
pusha
inc
dec
inc
inc
pop
mov
push
xor
aaa
out
and
ds
mov
xor
cmp
popf
inc
sbbl
mov
cmp
stos
icebp
sbb
ljmp
push
xor
and
push
in
and
inc
cmp
fidivs
cmp
stc
shr
vmread
xchg
ret
lods
popl
dec
out
dec
notl
lods
inc
call
shrl
add
adc
inc
cmp
add
pop
out
int
mov
and
push
jb
push
lock
rcl
lret
jns
mov
cmp
movsl
mov
cltd
pop
sub
cmpsb
inc
mov
pop
rorl
cmp
js
and
rclb
sti
outsl
lds
fwait
jle
sbb
jecxz
shlb
ficoml
add
dec
pop
mov
or
incl
in
or
test
inc
jmp
mov
or
add
cmp
inc
add
in
jo
jl
sub
sbbl
test
pusha
rcrb
cmp
dec
jl
push
ret
rcrl
bound
gs
push
popf
pop
inc
inc
fs
imul
fs
sbb
dec
jbe
adc
mov
insl
mov
stc
mov
add
mov
xchg
lods
inc
push
jle
fcmovnbe
inc
aas
leave
loopne
or
mov
int3
sbb
mov
dec
js
sbb
test
push
push
sub
adc
xchg
lahf
add
out
lock
mov
gs
and
fwait
mov
xchg
xchg
inc
jo
scas
fcomps
outsb
inc
in
push
xor
xchg
dec
xchg
xchg
sbb
stc
and
add
or
shll
hlt
fmull
sahf
call
test
push
sub
mov
outsb
cmp
sarl
daa
pop
mov
jge
inc
and
or
loop
xor
cmp
fadds
jb
mov
lret
inc
test
jg
call
pop
loop
add
mov
addl
jb
pop
adc
xchg
lcall
rcll
cmp
push
jno
sub
xor
mov
xorl
add
mov
xor
in
pop
push
xchg
nop
mov
add
adc
jl
lea
mov
cmp
sbb
mov
int3
dec
fisttps
pop
dec
jnp
xchg
jbe
push
fdivrs
push
push
aad
ss
pushf
fwait
mov
mov
and
pushw
rcrl
ljmp
cmp
popf
inc
sub
bound
lods
cli
in
stc
dec
stos
call
vpermil2ps
std
mov
push
mov
jg
and
stc
inc
and
or
pop
xchg
rcl
data16
add
lret
sub
fnstenv
mov
jl
and
inc
out
out
sub
pop
sub
jmp
lea
mov
push
lahf
inc
push
adc
repnz
sub
dec
adc
lcall
aas
gs
and
sbb
sub
or
jecxz
rorl
mov
jns
jae
ret
adc
jo
dec
pop
pop
or
sbb
xchg
mov
mov
jp
cmp
adcb
jbe
adc
mov
mov
xor
hlt
adcl
outsl
mov
movsb
dec
ficoms
pushf
mov
jae
jl
inc
sarl
ss
mov
add
inc
add
dec
pop
cmpsb
outsl
and
lea
and
cli
and
decb
push
inc
sub
pop
mov
add
sbb
xor
loop
fdivrs
inc
loop
push
mov
cmp
fldcw
int3
imul
xor
lret
je
out
add
fcoms
sti
imul
xor
mov
xchg
adc
and
jl
xor
xor
xchg
mov
movsl
adc
sbb
jbe
stos
nop
xchg
sub
jge
imul
fimuls
jae
cmp
xchg
testl
mov
pop
popf
test
sbb
mov
idivl
das
in
testb
pushf
mov
xchg
adc
xsha1
cmpsb
iret
add
inc
pop
jle
xchg
xchg
pop
push
leave
rolb
int3
aad
out
movsb
pop
push
adcl
xchg
aam
lds
lahf
pop
sbb
or
add
jne
sti
inc
rolb
mov
stc
fcomip
roll
popf
push
push
cld
or
iret
loop
sub
bound
dec
jae
sbb
fwait
leave
sub
in
push
mov
xchg
jne
jne
cmpsb
scas
sub
and
cmp
sub
inc
int3
or
mov
test
loopne
lds
ljmp
pop
mov
imul
loopne
mov
dec
std
psllq
sub
xorl
xor
icebp
mov
test
sbb
movsl
and
int3
les
lods
gs
sbb
cmp
aad
mov
inc
jmp
jl
push
shl
push
stc
adc
sub
xor
push
pop
sub
inc
xchg
lock
cmp
pop
pushf
test
fld
pop
pop
ret
mov
pusha
dec
jns
js
xchg
jge
cmp
ljmp
mov
pop
fidivrl
dec
scas
push
jb
sub
std
pop
dec
ljmp
scas
orl
cmp
mov
emms
and
or
mov
inc
fwait
xlat
mov
xor
out
popf
aam
or
imul
xor
rcrb
jmp
movsb
pop
adc
and
gs
adc
mov
xor
out
lret
sti
mov
dec
and
sbb
test
mov
add
or
cmpsl
push
lahf
push
or
xor
icebp
sub
cmp
out
xor
mov
adc
mov
cmp
dec
aad
xchg
xor
mov
cmp
pop
xor
jecxz
xchg
xor
push
cmc
push
in
cmp
daa
adc
daa
cmp
repnz
xor
cmpsl
dec
mov
insb
pop
stos
mov
mov
movhps
mov
add
mov
in
out
lods
push
gs
jmp
add
loopne
cltd
cld
cld
sbb
push
add
pop
pop
lock
mov
mov
mov
mov
out
cmp
pop
test
inc
divl
add
dec
mov
repz
ficomps
jb
stc
enter
icebp
sub
mov
insb
and
mov
sbbl
fistpll
inc
lock
js
popf
sbb
xchg
xor
sbb
testb
mov
inc
lret
into
fistpll
pop
xchg
and
or
pop
loop
pushf
ret
dec
add
jo
gs
add
mov
inc
mov
orl
cmp
jb
sti
push
jecxz
sbbb
ret
push
mov
xor
dec
mov
sti
cwtl
loop
pop
adc
xchg
jmp
in
test
out
insb
sahf
cmp
and
adc
js
xchg
in
inc
decl
push
fiadds
push
repz
jl
mov
push
sbb
or
mov
enter
lea
mov
pop
cmpsb
and
xor
sub
sbb
sbb
push
cmc
shrb
sub
es
mov
mov
add
cmp
pop
dec
xorl
aas
stc
std
addl
xor
repz
jbe
out
sbb
cmp
xor
xchg
sub
mov
jo
adc
cmp
outsb
lea
sub
or
lock
dec
add
scas
scas
stc
pop
movsl
and
jns
and
std
push
daa
outsb
loope
cli
mov
jb
ljmp
xchg
cmp
fwait
inc
and
jg
or
inc
push
mov
push
adc
cmp
lret
arpl
mov
push
cmp
fisttpl
lds
sub
mov
stc
xchg
and
inc
adcb
and
push
lds
and
andl
add
rcrl
cmp
ret
push
sbb
fdivrl
dec
xor
dec
cmp
rcrb
xchg
cld
in
or
fsubl
pop
scas
cltd
loop
cmp
mov
push
mov
cmp
out
out
cmc
xlat
xor
mov
sti
lea
scas
cmpsl
mov
push
andb
or
stos
fcmovbe
cli
jmp
scas
xor
icebp
xchg
icebp
xor
mov
and
and
popf
push
push
cmp
mov
nop
js
fsin
xor
cld
adc
mov
add
ss
cli
xor
pop
xchg
jne
icebp
arpl
clc
mov
and
outsl
mov
pop
push
dec
insl
icebp
add
pop
int3
mov
mov
test
stos
mov
cmp
fsubrl
out
lods
inc
fcoms
adc
mov
xchg
int3
pop
std
lahf
push
int3
enter
adc
add
cs
xor
insb
aas
ffreep
int3
lahf
pop
inc
hlt
xor
movsb
mov
adc
les
adc
sahf
stos
mov
scas
bt
add
mov
mov
jnp
sbb
fsubrl
push
pmullw
dec
mov
cs
cld
fdivr
mov
add
rcrl
dec
and
lods
cmpsl
lock
mov
add
xorb
inc
pop
aad
insb
flds
push
call
sub
pop
add
fidivrl
sar
pushl
stos
shlb
movsl
pop
pushf
in
push
sub
sarb
in
sub
cmc
int
movsl
cmp
pop
sbb
scas
imulb
mov
adc
lods
dec
cmpsb
and
jecxz
cmpsl
out
cmpsl
push
into
xchg
pop
pusha
xchg
dec
sahf
stos
insl
adc
inc
xchg
jl
fdivrp
pop
dec
cmpsl
adc
xchg
ds
mov
xor
inc
jecxz
jmp
push
and
sbb
insl
pop
movsb
sub
ljmp
mov
lods
adc
xsha256
cmpsb
xchg
sbb
mov
mov
cwtl
loope
aad
push
and
insl
xchg
leave
mov
push
cmp
lock
adc
dec
pop
loop
fnstcw
and
ret
std
and
push
movsb
sub
push
push
lock
jl
test
jmp
dec
pop
mov
push
inc
test
add
mov
mov
vmwrite
je
cmp
lock
hlt
push
int3
bound
dec
insl
or
push
mov
call
jbe
xor
pop
pop
outsb
stos
mov
out
inc
xchg
jae
ret
and
add
mov
xor
sbb
mov
pushf
push
push
mov
add
adc
sub
lret
dec
jg
in
je
lcall
fistpll
push
movsl
lahf
lods
dec
pop
push
out
sti
mov
sarl
stos
mov
mov
call
inc
or
and
mov
repz
jecxz
dec
mov
test
add
adc
jecxz
lahf
daa
les
ds
inc
mov
push
cmc
jo
vsubsd
jmp
sbb
jecxz
sub
jl
xchg
jp
repnz
dec
push
or
call
std
enter
lret
into
fistpll
xchg
xor
cs
mov
mov
adc
mov
or
push
imul
pop
into
cs
and
mov
aam
gs
push
lcall
neg
sub
test
dec
mov
mov
cwtl
cld
adc
pop
shll
les
ret
lahf
inc
sbb
fldcw
mov
ds
outsb
repz
mov
push
outsb
push
mov
inc
dec
movb
sub
inc
and
sbb
loopne
mov
jb
stc
cmp
sti
adc
sub
xor
sbb
mov
adc
jns
mov
dec
adc
push
jmp
pop
fdivl
or
ljmp
mov
xlat
push
and
lcall
shll
pop
ja
sub
xor
cwtl
adc
loope
loope
pop
lock
sti
ffree
divl
dec
test
dec
hlt
popl
pop
lods
in
push
das
clc
cmp
mov
adc
imul
xchg
aam
jl
dec
pop
dec
cltd
adc
adc
or
sbb
dec
shlb
test
ret
in
cs
fcompl
xor
ret
pop
rclb
jb
popa
aas
stos
ds
mov
mov
insl
or
mov
outsl
sbb
lods
jmp
lret
fimull
fidivrl
xor
lods
adc
or
jp
jg
or
mov
mov
jnp
scas
or
add
inc
push
mov
dec
cmp
pop
nop
mov
and
mov
into
ss
mov
in
js
enter
fisttpl
push
in
mov
or
cmp
pop
loop
inc
xlat
test
mov
push
orl
insl
and
std
sahf
adc
adc
xor
adcl
mov
jp
iret
jg
cmpsb
mov
and
pop
adc
setp
int
fnstenv
fwait
and
dec
mov
mov
jle
shr
inc
or
sbb
adc
mov
inc
ss
stc
xor
mov
jle
sub
jl
cmpsl
aam
test
andb
mov
iret
and
cmp
xchg
sub
mov
into
sub
add
addr16
jp
testl
xor
xchg
or
aas
mov
pop
xchg
and
fnsave
les
iret
adc
xchg
mov
xchg
call
dec
sub
das
and
push
cld
cmc
jb
xchg
xor
xchg
icebp
inc
and
mov
jae
cmp
loope
js
xchg
pop
jmp
je
cmp
adc
push
mov
les
sahf
ljmp
mov
cmpl
mov
int
push
aad
out
fstpt
std
ret
xchg
mov
dec
xchg
sbb
ja
add
pop
ljmp
loopne
std
in
mov
ficoml
dec
movsl
push
sub
mov
xor
add
pop
cmp
pop
test
imul
popf
push
decb
jl
leave
sbbb
js
or
mov
adc
mov
or
xlat
rcll
sub
adc
ds
xlat
xchg
add
pop
adc
or
icebp
ret
mov
mov
loopne
jo
inc
adc
pushf
mov
inc
jl
mov
std
jb,pn
hlt
push
jno
adc
inc
xchg
test
mov
sbb
sub
pop
sub
mov
inc
gs
iret
pop
jne
les
push
cmp
sbb
js
popa
out
lahf
and
xchg
test
push
cmp
aas
and
push
addb
out
dec
out
lods
adc
scas
fadds
inc
xchg
sbb
int3
sub
xchg
in
cmpsl
inc
sbb
je
mov
rcpps
xacquire
cmpsb
jle
push
mov
int3
dec
cld
xor
lcall
xchg
mov
push
adc
jb
xchg
add
cmp
xchg
mov
cmp
lret
cmp
cltd
dec
sbb
xchg
pop
rcr
or
ficompl
scas
mov
arpl
fdivrl
fistpl
xchg
jmp
xor
xor
lods
lahf
mov
jnp
push
mov
dec
leave
jns
cmp
push
dec
mov
cmp
add
jge
std
js
pusha
dec
sbb
ja
sti
mull
arpl
repz
pop
push
mov
pushf
dec
mov
push
bound
adc
movsl
inc
mov
jecxz
insb
gs
inc
or
ret
add
cmc
mov
leave
sub
inc
and
nop
loopne
in
push
jle
mov
int
pop
call
push
dec
add
std
and
movsb
fwait
scas
mov
push
pop
jecxz
jnp
loopne
daa
adc
out
cmp
fdivrs
insb
push
or
xor
sbb
xorb
nop
adc
mov
sahf
je
mov
sbb
jge
and
add
pop
jns
popf
mov
rcrb
push
mov
jle
outsb
xor
pushf
shrl
sahf
cmp
pop
dec
add
mul
or
data16
fsubrl
push
dec
js
sbb
sub
in
xor
popf
push
cltd
mov
add
xchg
pushf
add
or
or
mov
icebp
in
inc
mov
dec
rcl
jl
pop
jge
push
xor
inc
push
sti
scas
sahf
mov
lahf
cmp
push
xor
notl
out
shl
jmp
sub
xlat
fistpl
loope
repnz
les
fiadds
in
inc
and
mov
test
and
rcl
jl
data16
adc
divl
sub
mov
dec
setbe
push
push
popa
sbb
adc
out
fsubrl
rorb
idivb
xchg
push
mov
arpl
xor
and
mov
push
lcall
jle
xchg
jecxz
repz
cmp
adc
mov
cmp
and
inc
mov
roll
or
mov
cli
es
aam
dec
out
jo
js
and
out
ds
xchg
addr16
scas
mov
in
imul
aam
cmp
jle
push
mov
sti
lea
inc
lds
in
rcr
das
rol
dec
pop
insb
ds
pop
dec
aad
pop
xchg
dec
fisubl
sub
jns
add
data16
sbb
push
test
cmc
hlt
mov
push
xor
jne
xor
lcall
dec
pop
mov
xor
sti
leave
and
scas
scas
in
ja
and
sbb
loope
loopne
jno
add
inc
push
xlat
ret
nop
aad
mull
test
dec
aad
or
jle
pop
mov
mov
ja
insl
lcall
es
bound
xchg
fdivl
clc
hlt
loope
add
out
pushf
lock
shrb
mov
ljmp
pop
xor
mov
fdivs
scas
leave
xor
mov
je
cmp
cmp
mov
loop
jge,pn
mov
mov
int3
in
fisubrl
jno
cli
mov
stos
stc
popa
ss
sbb
adc
out
stc
loop
xor
nop
push
inc
imul
imul
cmp
pop
ds
jae
scas
sbb
test
rolb
inc
and
gs
push
ss
mov
add
leave
rcrl
scas
and
dec
roll
jmp
xchg
mov
push
sbb
test
pop
lea
sub
add
xchg
leave
mov
hlt
cmp
ds
mov
fsubrl
loope
gs
lea
jg
cmp
outsl
mov
add
add
adc
pop
iret
push
in
jge
cwtl
shlb
in
clc
std
fs
or
push
insl
rorb
shl
sbb
jae
adc
icebp
add
dec
jne
adc
ljmp
pop
leave
fs
dec
ret
leave
ss
inc
test
dec
mov
lods
enter
bound
sbb
std
adc
push
mov
call
mov
fldcw
jle
mov
add
fxch
fstpt
popa
xor
jns
leave
jl
mov
xchg
push
leave
or
sti
jl
iret
fsubrs
pusha
pop
outsl
movsl
mov
addb
cmpsl
in
mov
repz
aaa
push
pop
repnz
minps
iret
sbb
jnp
shrb
mov
fldl
cwtl
adc
ret
lahf
fildl
mov
mov
cmp
cmc
sbb
pusha
xchg
adc
mov
popa
andl
popf
sbb
or
sub
pop
mov
dec
sbb
in
mov
mov
and
mov
pop
mov
fucomi
roll
mov
jae
xchg
cs
into
dec
jno
or
dec
xor
add
in
imul
das
stos
dec
loop
ljmp
pop
lret
lock
loopne
and
push
fsubr
mov
xchg
insb
adc
xchg
insl
stc
push
or
mull
dec
adc
pop
out
in
cli
mov
cmc
ds
insl
nop
dec
ret
xchg
aad
cmp
jb
mov
imul
mov
mov
jp
cmp
enter
addr16
jl
push
add
xorl
out
and
jg
or
sub
or
orl
es
loopne
or
sbb
sub
gs
push
arpl
dec
lock
sahf
stos
fnstsw
cmp
add
sarl
mov
push
jmp
jo
psubd
movsl
cmp
andl
or
mov
fistps
mov
daa
mov
out
sub
dec
pop
cli
sub
ss
cmp
push
sbbb
repz
or
mov
outsl
cmc
pop
xchg
lea
sub
or
jmp
and
test
call
cltd
push
scas
sub
adcb
or
std
adc
cmc
bound
shll
adc
outsl
jb
inc
push
enter
jp
data16
out
xchg
inc
mov
or
push
clc
inc
jnp
ja
pushf
and
push
dec
insl
or
test
jmp
xchg
cmpsb
jmp
inc
add
lahf
xchg
sub
jmp
cmpsb
ds
fiadds
or
push
cmp
cmp
jne
aaa
dec
push
fsubrl
lods
fldcw
mov
jmp
js
js
fidivrs
cmp
clc
cli
cwtl
push
out
in
mov
adc
pop
mov
loope
les
jo
mov
in
xchg
iret
cmp
hlt
hlt
aaa
inc
sub
popa
jle
push
push
fcomp
fwait
xchg
out
sbb
mov
je
sbb
in
adc
popf
lret
loop
sbb
xchg
inc
pop
ficomps
sbb
pop
aaa
out
neg
jb
fnstsw
subps
movntq
mov
sub
cmp
xchg
fists
inc
push
scas
hlt
call
pop
inc
mov
pop
int3
das
sbb
aas
enter
mov
sbb
stos
pop
mov
and
inc
fwait
imul
mov
mov
push
es
arpl
fldcw
sbb
loope
sub
and
xchg
pop
adcl
adc
sub
rorl
testb
mov
jne
mov
mov
mov
int
dec
sbbb
ret
jg
je
pop
test
addl
push
add
data16
xchg
retw
xchg
push
dec
mov
mov
jb
jnp
cli
out
inc
jmp
mov
jmp
in
fbld
adc
jp
push
jle
sarl
cltd
je
cmp
cmp
ds
inc
mov
loop
in
lret
dec
pop
jmp
adc
sub
roll
or
jbe
mov
mov
or
frstor
xchg
sub
xchg
cmpsl
push
inc
icebp
jb
fcmovbe
repz
cmpsl
inc
ficomps
movsb
xchg
sub
int3
pop
pop
add
inc
add
test
fistl
add
insb
jne
mov
fimuls
stos
xchg
fistpl
lock
js
in
bound
push
inc
jg
adc
pop
push
pop
mov
lods
mov
adc
jle
fdivl
adcb
push
insl
sub
or
jo
adc
les
mov
pop
sti
or
lcall
adc
das
add
cmpsl
or
sbb
iret
xor
push
pop
mov
push
mov
aad
lahf
test
jae
cld
push
cmpsl
lret
dec
xchg
cli
jno
mov
movsl
ret
movl
push
xor
into
ss
sti
arpl
sti
mov
cmp
loopne
jg,pt
stos
sub
sahf
mov
add
pop
cmpsl
sub
push
mov
test
and
outsb
mov
out
das
bound
scas
or
aad
imul
loope
dec
mov
ficoml
jbe
cmpsb
cmp
or
bound
rcll
xchg
adc
ss
cmc
push
std
cmpsl
loope
mov
push
dec
int3
dec
push
cmp
lods
in
or
sub
sahf
sbb
je
jnp
mov
roll
mov
dec
loopne
push
mov
adc
inc
and
jo
cmp
or
aaa
xor
rcr
jo
iret
nop
repz
test
mov
xor
icebp
and
mov
inc
inc
lea
cld
pop
in
jb
jg
cs
loop
add
dec
xor
mov
loopne
cli
xlat
jnp
sbb
pop
sub
in
cmp
ret
or
add
repz
mov
or
rcrb
in
lock
aaa
ja
test
mov
cwtl
ja
sub
sub
in
mov
inc
pop
mov
xchg
mov
test
cmp
addr16
add
inc
loopne
lock
pop
xchg
xor
pop
cli
jb
mov
in
sub
push
pop
into
das
xchg
faddl
mov
repz
orl
mov
mov
pop
dec
jae
lcall
pop
les
je
lock
fwait
das
mov
in
js
xor
jno
jb
push
pop
xor
int
inc
sbb
sarb
out
sarl
fs
repnz
xor
sbb
sbb
add
dec
lret
mov
gs
stos
adc
push
sbb
and
ret
mov
lret
xchg
push
dec
push
ficoml
in
out
mov
and
inc
cs
dec
xchg
mov
xchg
or
aad
mov
mov
pop
push
xor
fwait
out
mov
lock
jmp
mov
loop
sub
sti
xchg
adc
dec
push
fsubr
fs
inc
cwtl
add
dec
xor
idivb
jnp
test
push
aaa
and
loop
addr16
jp
shlb
push
ss
inc
mov
add
xor
and
xchg
arpl
xor
cmp
mov
or
mov
adc
fists
ja
in
inc
mov
insl
sbbl
jmp
mov
adc
inc
mov
inc
hlt
lcall
inc
imul
mov
daa
popf
xlat
cli
sbb
fistpl
inc
mov
jno
in
in
data16
xchg
aaa
scas
pop
jl
mov
popf
int
jno
in
and
xchg
inc
arpl
xor
outsl
shrb
mov
lahf
add
aaa
outsb
daa
mov
mov
cwtl
dec
mov
cmp
mov
adc
out
jmp
inc
mov
movsl
mov
sbbl
lods
scas
ret
in
mov
out
xor
outsb
and
rcrl
sahf
mov
test
xchg
push
ficompl
xorl
mov
in
mov
sbb
mov
mov
xchg
ret
nop
iret
insb
or
in
rol
lahf
sub
sub
rclb
sbb
mov
dec
lea
xlat
dec
adc
test
xor
in
cmp
call
fstpl
push
insl
add
imul
mull
and
cmpl
out
fisubrl
inc
cmp
or
cmp
call
mov
jbe
xor
clc
mov
mov
jle
xor
aam
decb
xchg
jge
pop
mov
pop
out
lret
jmp
adc
testl
lock
cmp
inc
into
dec
or
lea
cld
dec
mov
clc
out
rclb
inc
nop
push
fadds
add
push
idivb
loope
sbb
inc
inc
fldt
dec
loopne
scas
mov
sub
pop
cmpl
lret
sub
ss
cli
xchg
mov
iret
add
roll
les
push
and
cs
popf
enter
cltd
movsl
loopne
xlat
push
push
xor
pop
sbb
or
or
add
scas
andb
ror
sub
sbb
into
jae
adc
jge
adc
add
sbb
dec
pop
mov
out
out
ret
push
fimull
add
aaa
lods
incl
dec
mov
int
sbb
cld
xchg
stos
icebp
add
call
cmp
lds
adc
mov
je
mov
lret
cli
std
jge
dec
sbb
std
push
or
lret
lods
jb
add
mov
je
sbbl
mov
mov
aas
jno
stos
xchg
fistpl
ret
daa
dec
cs
pushf
ss
mov
pop
fmul
push
and
fstpl
leave
cmp
mov
stos
add
popa
enter
jns
push
xchg
jg
lock
or
inc
dec
xchg
les
ss
addr16
lea
loope
mov
add
mov
enter
jle
inc
ds
cld
cmpsb
je
pushf
stos
js
dec
jecxz
clc
lds
test
out
in
add
jnp
icebp
sub
cld
out
stc
cmp
dec
sub
dec
pop
sbb
enter
xchg
loop
es
js
mov
and
or
mov
frstor
mov
adc
out
insl
add
jo
imulb
daa
into
inc
inc
jnp
outsl
mov
jmp
stc
dec
adc
xchg
insl
dec
popf
mov
mov
es
mov
xor
inc
rclb
lea
inc
push
dec
sub
cmc
in
test
push
xor
add
mov
mov
pop
or
clc
ret
xor
jae
xor
pop
call
push
mov
push
jo
sbb
in
xchg
pop
adc
and
cmp
dec
and
repz
out
xor
outsl
adc
repnz
andl
jno
jl
sbb
or
inc
dec
add
int3
mov
mov
jo
lret
pusha
add
cwtl
loop
xchg
iretw
les
movsl
xor
iret
mov
call
icebp
mov
and
fs
mov
mov
div
fstps
ss
mov
sub
xor
loop
pop
movsb
mov
inc
xchg
cmpb
divb
scas
xor
or
ljmp
iret
imul
in
or
jne
test
xlat
addr16
adc
sbb
mov
daa
fldl
add
mov
add
dec
add
dec
jmp
sub
sbb
push
inc
repz
or
pop
sub
mov
cmp
addb
pusha
or
push
sub
scas
imul
test
jmp
popf
pop
loopne
push
inc
xor
mov
cli
push
mov
dec
mov
fdivrs
pop
fcompp
mov
fistl
mov
aas
imul
dec
jecxz
call
cltd
sbb
sub
and
sarl
add
lods
xor
mov
pop
sub
js
pop
stc
push
cmp
add
xchg
or
call
push
cmc
xchg
dec
dec
fadds
out
std
lock
xchg
jns
decl
dec
mov
jbe
or
mov
mov
cmp
popa
es
es
movsb
ja
mov
addr16
or
lcall
pop
xor
lea
fdivrl
dec
adc
aad
mov
scas
hlt
add
ret
mov
jae
jns
lret
jnp
mov
dec
mov
xchg
mov
ret
mov
add
mov
mov
xchg
sub
loopne
xchg
dec
pop
fwait
mov
xchg
dec
jmp
mov
lret
and
clc
fldcw
shl
pop
pop
scas
aam
hlt
imul
xchg
fwait
push
adc
cmp
cld
jb
lods
aas
adc
out
pop
dec
out
aaa
jmp
cltd
div
mov
push
cmp
mov
jo
cmpsb
pop
stc
packssdw
adc
inc
push
xchg
ljmp
movsl
and
sub
int3
leave
stos
sub
xchg
lock
or
ret
xchg
jp
test
mov
popf
mov
pop
mov
fcomps
imul
into
cld
push
in
fnstcw
adc
pop
dec
ds
mov
sbb
jecxz
xor
mov
mov
aaa
insb
aad
sub
mov
pop
cmpsb
jecxz
mov
js
inc
out
xchg
or
push
xchg
int
sarb
mov
fsubs
ret
ret
in
jp
jmp
into
inc
inc
in
icebp
adc
mov
xchg
pop
sbb
add
fiadds
fdivrs
add
scas
adc
pop
ret
mov
loopne
pop
test
cmpsb
es
in
insl
mov
cmp
mov
xchg
push
jecxz
add
mov
adc
inc
add
push
sbb
test
and
test
jle
jo
inc
mov
dec
fs
xchg
fsubl
xor
data16
fwait
sbb
lds
push
push
movsb
push
push
ja
jno
xchg
push
jp
cmpb
mov
sub
xor
or
popl
test
push
or
pop
lcall
jno
in
shll
rcrb
adc
mov
lret
pop
inc
jno
inc
icebp
insl
aaa
flds
push
cli
dec
lahf
push
jne
iret
mov
ss
loop
arpl
rcrb
mov
add
stc
sub
repz
outsb
bound
mov
lret
sub
ja
pop
mov
xor
es
bnd
xlat
or
add
in
scas
bound
into
ss
cli
mov
cmp
sbb
sbb
adc
mov
jl
sub
std
add
movb
push
mov
dec
inc
fisttpl
mov
mov
cmpsl
aad
imul
xchg
and
push
mov
sub
outsl
xchg
arpl
inc
lret
stc
cmpsw
insb
iret
xor
lea
shl
and
imul
mov
stc
insb
jbe
pusha
add
int3
sub
mov
push
add
lods
ficoml
sbb
mov
cmc
int
xchg
add
add
test
fistpll
pusha
ret
cmovo
inc
enter
mov
pop
test
xor
mov
mov
mov
js
jb
push
adc
insl
xlat
cltd
pop
sbb
push
add
sbb
mov
shll
pop
sti
pop
adc
xor
sub
scas
in
in
int
add
pushf
cmp
js
xchg
outsl
sbb
ss
xor
mov
cmpsl
and
xchg
lods
mov
inc
mov
gs
int3
es
add
mov
xor
sub
push
push
adc
dec
mov
jg
xchg
shrl
xchg
loop
sub
stc
pop
out
fstl
mov
rcr
test
dec
scas
push
fidivrl
and
xchg
lahf
cs
mov
push
dec
test
mov
dec
xor
mov
aad
idivl
jnp
dec
rcll
xor
pop
pusha
sub
sub
daa
das
enter
lret
seta
sbb
test
push
test
sbb
shl
inc
bound
mov
movsl
and
popf
mov
sahf
jae
mov
push
fidivrl
pop
jge
outsl
test
mov
nop
sub
rorb
push
mov
test
test
inc
in
inc
popa
inc
test
scas
insl
mov
fs
xchg
push
pop
cmp
scas
sbb
repz
xor
pusha
pop
jbe
cld
leave
add
in
mov
lret
fsubl
scas
mov
mov
cltd
add
insb
sub
sub
lock
add
mov
sub
in
lret
xchg
cmp
xchg
repnz
push
push
mov
lcall
push
jae
and
mov
andb
dec
jns
mov
orl
cmpsb
cltd
loopne
or
fsubr
dec
jmp
bound
mulb
adc
jg
out
addr16
into
inc
push
arpl
push
int3
sub
ja
jno
inc
cmp
jb
mov
out
xchg
add
adc
mov
rol
cmp
mov
inc
rcr
sub
dec
push
rcr
inc
enter
dec
sbbb
ss
add
mov
mov
into
fucomi
pop
adc
add
imul
outsb
adc
mov
daa
rorb
xorb
mov
inc
and
icebp
xchg
daa
in
pop
jbe
mov
push
cmp
divl
aad
cmp
imul
push
add
nop
stos
mov
js
mov
ljmp
js
mov
pop
jae
in
enter
and
pop
in
and
inc
jmp
jno
fadd
mov
bound
xor
test
leave
push
adcl
pminub
cltd
ljmp
inc
push
sbb
ljmp
sbbl
dec
add
xor
int3
shr
repnz
mov
sbb
jnp
lods
mov
or
es
les
push
repnz
aas
imull
push
int3
xor
add
inc
loop
aad
test
mov
jnp
cmp
fldl
sti
mov
mov
xchg
add
dec
dec
adc
inc
pop
mov
sub
sbb
movl
or
dec
stc
dec
jno
or
jns
aad
mov
mov
jne
pop
ror
ja
pop
cmp
repz
fwait
adc
inc
ds
jbe
outsl
jns
pop
pop
aaa
mov
test
pop
pop
pop
scas
jl
and
push
std
je
push
test
popa
stc
shrb
push
out
xchg
push
enter
mov
cwtl
xor
fadd
in
les
test
xor
loopne
int3
sbb
gs
mov
push
or
inc
xchg
fdivr
sbb
mov
enter
push
inc
std
push
in
xchg
inc
icebp
xlat
in
int
mov
nop
xchg
sbb
nop
call
in
arpl
pushf
adc
scas
and
pop
inc
xchg
push
scas
mov
shll
pusha
cs
push
mov
mov
add
cmc
mov
fisttps
cmp
jmp
rcrb
pop
pop
nop
mov
movsb
mov
push
out
adc
dec
into
dec
mov
pop
sub
push
inc
inc
arpl
inc
jge
outsl
mov
cmp
cmpsl
xor
hlt
arpl
mov
pusha
jl
idiv
fwait
and
ja
mov
mov
jl
ljmp
mov
inc
jmp
hlt
les
loope
jmp
sub
pushw
dec
dec
cs
jp
test
movsb
fs
cmpsb
add
and
mov
push
inc
or
orl
das
outsl
xor
xchg
add
pop
shlb
pusha
cmp
incb
sub
inc
fwait
inc
out
pop
sarl
jnp
in
xlat
xchg
cmp
jbe
mull
lock
mov
and
add
xor
lahf
dec
add
orb
mov
gs
mov
xor
xchg
jae
cwtl
jecxz
dec
sbb
lahf
jmp
cmp
test
std
push
inc
leave
xchg
adc
mov
adc
dec
shll
imul
mov
daa
stc
mov
xchg
or
out
jno
or
imul
mov
jp
push
mov
shrb
sub
out
adc
lock
push
dec
sub
fisubrs
pop
icebp
adc
scas
pop
es
dec
add
movsl
adc
adc
js
cltd
sub
adcb
shll
andl
inc
xchg
and
scas
mov
nop
sub
sub
pusha
mov
and
stos
ss
push
mov
repz
jb
in
and
gs
xor
or
loop
push
push
std
movl
lds
aad
xchg
xor
dec
xor
push
pushf
jg
clc
imul
jae
adc
cmp
jle
mov
lret
cld
and
negb
daa
mov
andl
aaa
pop
lcall
inc
cmp
movsl
fnsave
sbb
ja
push
out
dec
mov
fidivrs
jns
daa
std
push
outsl
cli
and
insl
add
loopne
and
jb
pxor
fwait
push
xchg
loopne
mov
xchg
aaa
ret
leave
cmp
popf
out
shrl
data16
mov
subl
popa
or
mov
inc
test
aaa
stos
and
or
mov
push
pop
mov
xor
add
sub
xchg
adc
andb
sbb
push
icebp
xchg
adc
or
das
arpl
nop
add
movsl
cmp
dec
cmc
dec
sub
fmulp
repz
std
in
push
inc
inc
sbb
cmp
call
scas
adc
pop
fdivrl
pop
and
and
imul
stos
std
pmuludq
sahf
xor
sub
dec
inc
add
sub
jmp
xor
dec
jae
push
sub
inc
push
sahf
dec
or
cmp
cltd
into
inc
push
imulb
arpl
lcall
jo
lock
cmp
out
stos
xor
xchg
or
mov
ror
icebp
dec
test
hlt
cmpsb
pop
pop
jmp
lock
fs
xchg
je
movsl
lcall
or
movsl
mov
lea
push
xchg
aad
sbb
fcomps
ret
sbb
sbb
add
add
enter
inc
addb
lret
in
fs
fcomps
les
mov
repnz
and
repnz
mov
das
cmpsl
add
pop
adcb
mov
mov
sbb
mov
imul
jo
roll
xor
push
fimuls
mov
xlat
jnp
orb
ror
xor
clc
stos
pop
sub
jmp
mov
arpl
dec
mov
cmp
mov
jbe
pusha
sub
or
cs
mov
cmp
and
lods
andb
ficomps
pop
jmp
mov
fdivr
pop
sub
sub
inc
or
xchg
daa
inc
rclb
lret
js
cmpb
int3
aaa
jmp
jae
xor
push
push
out
ljmp
xchg
cmc
push
inc
xchg
pop
notb
push
je
or
push
sub
out
lods
enter
jns
in
xchg
out
xor
cmp
ss
pop
mov
push
das
in
out
cmp
xchg
es
jmp
inc
lock
or
aam
and
cmc
lea
dec
xor
push
adc
test
and
mov
cmpsb
inc
xor
lret
andb
aas
mov
mov
or
inc
mov
insl
add
imul
js
sub
cmpsl
sub
jbe
jb
lea
ret
xor
and
mov
scas
cmp
inc
jae
ljmp
sbb
pushf
sub
pop
mov
sbb
flds
mov
cwtl
dec
ds
aam
gs
imul
das
mov
cmc
cmp
inc
test
fstl
insl
lret
negb
sub
sbb
cmp
test
jno
mov
jne
push
and
iret
sahf
or
jo
mov
sub
fsubl
jnp
sti
pop
xchg
sub
xchg
add
aam
insl
mov
mov
adc
call
call
xchg
repz
or
jp
rolb
cmc
dec
es
ljmp
aam
out
dec
inc
xchg
roll
movsb
ds
push
cs
stos
inc
je
cmp
aaa
adc
les
adc
sbb
sub
popa
jne
in
out
jns
adc
mov
lods
dec
dec
aas
lahf
test
mov
ficompl
repnz
push
lea
xor
orb
and
dec
push
notb
das
pop
mov
dec
or
negl
mov
or
sbb
mov
or
outsl
xor
inc
shrb
addr16
ficoms
mov
popf
addr16
and
and
arpl
into
inc
mov
nop
and
lret
cs
sbb
sbb
push
scas
add
push
sub
es
push
test
inc
cmpsl
fwait
xchg
inc
cmp
xor
and
xorl
inc
and
dec
or
sub
jge
in
pop
shll
sbb
ret
out
jle
push
das
in
xor
mov
fisubrl
add
sbb
imul
imul
and
aad
xor
stos
clc
cwtl
pop
mov
ljmp
dec
sbb
leave
fs
movsb
in
ss
mov
mov
cmp
xor
jle
aam
ret
pop
jle
repz
jnp
lret
sbb
mov
or
lret
pop
dec
iret
sbb
adc
cwtl
fldt
out
lcall
out
jl
out
jge
mov
test
jnp
pop
inc
ss
sub
jb
push
nop
mov
cld
adc
dec
xchg
cs
mov
push
mov
scas
inc
test
cmp
push
adc
mov
push
sub
sbbl
fdivs
mov
ja
cmp
push
push
mov
loopne
lods
mov
ss
push
add
mov
and
loope
sarb
bound
adc
inc
jae
adc
daa
lods
xlat
pushf
cs
int3
jo
ret
add
push
cli
cmp
lcall
pusha
cmc
iret
shll
xor
mov
push
ficomps
xchg
cs
adc
dec
sub
loope
loopne
mov
xor
ljmp
mov
pop
fs
das
fisubs
mov
cmp
sbb
and
xchg
out
sbb
add
scas
jne
daa
mov
mov
std
pop
in
outsl
xchg
aaa
hlt
push
fcmovb
mov
push
filds
adc
out
out
fldenv
cmpsb
jg
imul
fs
divl
shl
add
aaa
dec
icebp
pusha
pusha
pop
sbb
nop
aam
mov
repz
ss
int3
or
lea
mov
int3
or
lods
push
imul
add
mov
out
inc
sub
adc
push
mov
mov
mov
ficoms
add
in
insl
pop
xor
adc
sbb
push
cmp
cmp
out
pop
jne
das
cmp
dec
aaa
out
dec
xchg
push
jge
ds
in
push
jo
and
pop
add
insb
jmp
push
aam
lcall
shrb
pop
cltd
movsl
gs
xchg
add
push
xchg
jp
xchg
fisubrl
fistpll
push
xor
out
jg
int
insb
push
adc
rcrl
or
shlb
lcall
jae
mov
push
fcmovb
lods
inc
push
mov
mov
aam
in
mov
int
sub
ds
test
sub
pop
mov
ds
lcall
cs
xor
or
adc
frstor
jnp
in
jg
loopne
jo
xor
ja
fists
movsl
rorb
sbb
xor
cwtl
in
imul
dec
je
cli
stc
add
mov
or
test
pusha
or
scas
std
cmc
jo
mov
je
cmp
xor
and
cmpl
or
push
xchg
hlt
and
cmp
sub
cmp
sti
stos
jae
icebp
and
jbe
adc
mov
dec
incb
pop
popa
adc
mov
and
out
fisttps
jg
or
pop
jg
mov
add
sahf
xchg
jg
ret
add
and
pop
lods
sti
fmulp
jbe
pop
xchg
pop
sbb
jae
mov
hlt
mov
addb
scas
xchg
ret
movsl
xchg
mov
js
loop
add
ss
sbb
repz
and
lret
pop
and
pushf
sbb
mov
in
jno
and
pop
int3
mov
mov
mov
repnz
mulb
xchg
les
addr16
and
mov
mov
mov
inc
je
adc
icebp
insb
imul
and
push
jns
xchg
and
lret
aaa
push
outsl
jo
xchg
push
das
mov
inc
test
rcrl
cld
ffreep
aaa
dec
push
push
aaa
add
inc
out
xchg
rolb
imul
shll
mov
lods
mov
pop
pop
stos
lea
pushl
xchg
mov
cs
jp
push
jae
shr
sbb
out
push
jge
xchg
mov
les
jb
js
lds
or
lahf
out
and
mov
mov
mov
mov
icebp
cmp
hlt
xchg
mov
out
cld
mov
mov
xor
adc
shl
in
cmp
sti
push
xchg
lods
addr16
push
xchg
push
cld
hlt
fsubl
dec
inc
fdivrl
xchg
out
dec
pop
into
in
in
adc
add
cli
nop
mov
mov
jbe
inc
xor
xchg
in
popa
cltd
dec
push
insb
movsl
xor
add
data16
mov
mov
ljmp
dec
imul
xchg
or
test
sti
mov
mov
sub
add
icebp
divb
dec
test
or
sbb
pop
dec
cmc
pop
inc
sub
test
sarl
ja,pt
and
lods
sub
push
fwait
xchg
mov
scas
dec
xchg
aas
in
int3
push
test
clc
out
rcll
lods
insb
xor
push
mov
subb
xor
sbb
das
jmp
and
jnp
cmp
fs
push
imul
push
and
outsl
aas
stc
and
das
and
xor
mov
xorb
mov
fidivrl
imul
test
loope
loopne
xor
mov
and
dec
lret
push
push
sahf
xchg
sub
jg
lret
inc
or
test
inc
and
and
xchg
mov
jmp
jle
ljmp
inc
mov
scas
or
adc
jae
cltd
jns
out
out
fst
fldenv
repnz
out
mov
sub
jo
cltd
and
imul
test
xchg
negb
pop
mov
ret
insl
push
fs
add
in
into
fistps
mov
loopne
aam
xor
popf
pop
dec
les
or
dec
jmp
icebp
ja
je
add
mov
mov
mov
push
xchg
push
stc
call
inc
mov
xchg
mov
std
xor
hlt
js
in
jg
mov
inc
pop
cmpsl
cmp
filds
fadd
mov
inc
push
mov
shlb
inc
addr16
js
push
sbb
lods
movsb
mov
add
sbb
jo
sub
shll
cwtl
icebp
rolb
or
cmp
fwait
arpl
rcrb
adc
lock
cmpsl
jmp
mov
adc
push
lods
loop
roll
or
popa
std
lret
stos
cs
andl
sub
int3
lea
xchg
push
pop
mov
addr16
scas
out
xchg
dec
ret
mov
data16
mov
xchg
xor
add
shll
jle
repz
scas
and
and
dec
arpl
dec
out
cmp
mov
mov
rclb
inc
adc
xor
xchg
or
mov
jp
out
xchg
fwait
mov
out
js
jl
out
fists
adc
add
shrb
stos
mov
cli
in
inc
inc
adc
and
cli
or
dec
movsb
sbb
push
fcoml
popa
pop
aas
int
adc
hlt
cwtl
lods
les
ljmp
add
xchg
mov
jge
pop
dec
sbb
mov
xor
movsl
cli
adc
or
lods
inc
adc
mov
push
lock
xchg
lea
dec
and
sbb
and
sbb
pop
adc
dec
in
dec
hlt
dec
cmp
mov
pop
int3
sub
popf
ds
mov
in
mov
fcmovb
subl
sub
sbb
pushf
dec
pop
or
loopne
cmc
mov
fbld
mov
push
ljmp
into
popa
pop
lahf
outsl
es
sbb
mov
cltd
mov
lret
fsubl
adcb
rep
into
jb
test
mov
cmp
out
ja
xor
add
pop
es
outsb
sbb
aam
js
add
test
outsb
aam
test
jno
sti
pop
imul
push
sar
xchg
andl
je
xchg
decl
add
xchg
jmp
inc
pop
cmpsb
xor
out
fidivs
push
in
adc
mov
lock
jmp
inc
mov
inc
arpl
and
pop
pushl
inc
cmpsl
jecxz
mov
xchg
mov
and
mov
jle
jns
fwait
sbb
push
sub
mov
aas
pop
mov
push
and
mov
nop
loop
stc
jl
fcos
int3
and
mov
push
pop
mov
fldenv
dec
adc
pop
aaa
push
cmp
lahf
in
sub
mov
leave
push
lcall
xor
gs
lcall
inc
bound
mov
push
sahf
imul
xchg
pop
push
lcall
icebp
mov
jbe
loopne
cmp
loope
movsl
test
add
mov
push
repz
or
loopne
pop
push
jns
test
inc
in
lea
in
adcl
out
pusha
inc
test
sbb
popa
cmp
xchg
sbb
xor
jge
dec
add
cmpsb
sbb
sub
movsl
aad
and
push
add
pop
mov
getsec
push
repz
stos
inc
add
in
cmp
lds
xchg
test
ljmp
jb
lahf
push
faddl
andl
sti
push
add
pop
mov
out
dec
ret
push
jmp
xchg
or
out
xor
cmp
popf
push
fcmovnbe
jmp
sti
mov
lret
xchg
ja
outsl
mov
pusha
fs
sti
sub
jle
stc
sub
je
add
pop
aas
adc
rcr
adc
mov
pop
lret
mov
pop
stos
pop
cltd
pusha
dec
pop
out
xor
ja
out
sub
pop
mov
jecxz
vxorps
cmp
insl
test
mov
pusha
fnstenv
imul
aad
js
daa
in
aas
sbb
lahf
ret
or
imul
fldt
cmp
lock
and
outsl
mov
outsb
cmp
jmp
adc
mov
sub
xor
cld
add
mov
xor
xor
scas
lahf
es
ficoml
mov
es
adc
jmp
insb
icebp
cltd
xchg
or
imul
mov
xchg
ss
sbb
sbb
push
cmpsb
mov
bound
shll
cwtl
dec
push
outsl
adc
xchg
aam
outsl
dec
lods
sub
lret
fdivrl
mov
pop
sar
popa
loope
dec
mov
subb
sbb
dec
inc
push
sahf
sub
lods
pop
cmpsl
out
aas
dec
fwait
dec
dec
cmp
fdivrs
stos
fwait
add
mov
pop
sbb
add
out
pop
mov
scas
mov
cmp
push
jmp
xchg
addl
cmp
jge
adc
pusha
xlat
or
jns
cmp
mov
std
sbb
idiv
sbb
pop
in
adc
mov
cmpsb
jne
in
ds
lcall
and
or
push
hlt
gs
enter
dec
push
outsl
leave
shll
ja
inc
mov
dec
mov
repz
cs
test
pop
cld
test
pop
xchg
bound
jl
sbb
wrmsr
push
stc
sbb
out
inc
mov
ss
cltd
addr16
enter
xlat
jne
dec
push
cmp
xlat
pop
insl
push
xor
pop
add
add
and
lahf
sub
gs
mov
clc
sbb
mov
cmp
mov
dec
test
hlt
sub
cmp
mov
ret
mov
ljmp
add
lods
pushf
fs
lock
xchg
stc
jno
addr16
stos
mov
sti
call
push
adcb
sub
test
hlt
or
arpl
jg
and
stos
inc
insl
repz
pop
fdivp
jns
jge
xchg
xchg
add
dec
jecxz
jo
das
jge
fisubrs
icebp
sub
sbbb
insl
mov
mov
lds
add
mov
mov
mov
clc
push
jo
pop
mov
iret
jbe
cltd
icebp
dec
pushf
rorb
lea
sub
jnp
call
adc
sub
sub
lock
add
lret
std
fcmovb
sbbl
or
movsb
andb
cmp
sbb
push
add
inc
mov
mov
icebp
push
xchg
aad
fdivrl
push
rol
lds
lret
clc
int3
add
xchg
pushf
in
add
sub
push
stos
xchg
js
gs
xor
fdivrl
divl
jno
add
aad
pushf
aad
jne
sti
pop
les
mov
bound
decl
inc
or
mov
mov
cmp
inc
test
stos
dec
mov
inc
push
pop
outsl
addb
ja
ret
xor
aam
inc
ret
pop
xchg
mov
cmpsl
nop
les
mov
jle
insl
mov
idivl
roll
je
or
scas
cwtl
sub
scas
in
xor
clc
pop
dec
movsl
jno
inc
add
jno
or
pop
sahf
mov
mov
inc
jp
pusha
sbb
adc
xor
jne
sbb
scas
inc
add
xor
add
dec
fisttpll
add
adc
xchg
shlb
push
pop
xor
dec
outsl
icebp
jg
push
ret
cltd
jge
mov
cwtl
adc
mov
xchg
shlb
mov
insl
mov
add
insb
pop
lea
inc
inc
jmp
xor
arpl
push
outsl
pop
mov
or
outsb
jmp
xorl
mov
and
pop
push
or
mov
push
cmp
dec
pop
push
jnp
and
insl
xchg
xchg
ret
in
test
mov
int
add
out
dec
lods
fs
xchg
loope
and
daa
adcb
test
cs
and
fwait
sub
je
adc
or
addb
out
repz
sbb
test
insb
push
add
insb
inc
sar
repnz
xchg
js
mov
popa
xor
sub
fisttpl
sti
xchg
mov
fnsave
jnp
dec
popf
jmp
mov
int
add
fidivs
sub
shrl
pop
stos
shrl
pop
pop
sub
xchg
cmp
rcrb
and
repnz
cmp
pop
in
insb
mov
jb
dec
jbe
mov
repz
mov
mov
leave
pop
push
push
mul
inc
mov
xor
mov
mov
xchg
bound
mov
jle
push
je
pop
rcl
cmp
std
mov
inc
push
mov
lret
dec
inc
lahf
add
xlat
lea
or
inc
inc
subl
cwtl
enter
je
adc
dec
addb
popa
fisubl
pextrw
jbe
pop
mov
inc
or
sbb
pop
lea
adc
ret
cld
into
cmc
jae
fildl
fisubl
hlt
addr16
push
adc
pusha
fldt
pop
int3
xor
or
mov
loope
adc
inc
add
pop
and
mov
in
fcoml
gs
cmp
push
xor
lret
cs
sub
cmp
aam
push
mov
call
sbbl
mov
loopne
popf
pop
int
cld
cmc
in
mull
sarb
aad
inc
decb
lcall
push
push
mov
xchg
lcall
daa
push
test
nopl
fincstp
out
sahf
movsl
sbbl
jmp
lods
jmp
pop
jns
rcll
subb
push
insl
xor
iret
jmp
push
movsb
out
in
push
fs
xchg
and
daa
sub
and
mov
sub
or
inc
push
hlt
mov
ss
jae
push
addl
pushf
and
sub
sti
xchg
cmpsb
pop
or
nop
frstpm(287
hlt
int3
outsb
sbbb
and
push
movsb
inc
pop
mov
xor
mov
daa
mov
dec
add
dec
push
or
stc
cli
adc
cmp
addb
push
popf
out
xor
mov
lret
mov
sti
sub
add
push
ljmp
inc
lods
push
in
outsb
cmp
pusha
call
int
xlat
into
shlb
fcoms
pop
xchg
bound
leave
rorl
inc
shrl
into
lahf
jmp
subl
ss
lret
in
and
mov
adc
cmp
int
stc
and
xor
sub
xor
xor
jl
add
shll
je
jp
push
and
xor
mov
fsubrs
cmp
mov
mov
out
mov
push
out
mov
inc
andl
or
cmp
fcmovnbe
sbb
sbb
pop
pop
enter
aas
mov
push
xchg
sbb
add
mov
mov
ds
int3
call
lcall
add
sti
or
jne
cmp
xor
pop
arpl
pop
aad
add
jns
push
pushf
mov
sbb
jns
push
lret
dec
jg
and
les
std
and
insl
out
mov
enter
es
mov
lds
inc
adc
xchg
lock
dec
fninit
inc
adc
mov
shr
in
inc
inc
ror
stos
ja
push
xchg
jb
xor
push
xchg
loopne
lret
out
int
push
mov
xor
mov
inc
les
cmc
in
push
ds
inc
xchg
dec
je
icebp
push
ficomps
xchg
lahf
lods
xor
hlt
dec
testb
roll
xor
bound
fwait
cld
into
xchg
adc
dec
mov
cmp
xor
pop
mov
iret
mov
mov
jge
pop
icebp
sub
faddl
stos
push
xchg
in
dec
call
in
dec
dec
mov
ret
sbb
into
cmp
adc
or
jp
stos
add
xor
add
shrl
mov
add
jo
cmpsb
test
add
lock
mov
push
rcll
mov
mov
addr16
out
movsl
sub
ss
loop
addr16
out
lcall
add
cmp
mov
mov
or
mov
push
push
aad
movsb
out
sub
ljmp
dec
or
enter
mov
sub
in
ss
xchg
jg
cltd
xor
sub
jg
popa
cwtl
fstpl
jae
movsb
and
lock
jecxz
adcb
pop
movl
icebp
xor
mov
or
push
push
rorb
sub
shl
ltr
orl
ret
pop
or
mov
neg
jo
outsb
insl
mov
subl
add
mov
leave
popa
dec
mov
cmp
jge
loope
mov
push
das
mov
cmp
lock
popa
xor
bound
cld
mov
fcom
arpl
and
loopne
sbb
xchg
scas
std
in
mov
pop
dec
std
and
std
jns
sbbb
push
adc
xor
cld
jecxz
leave
sti
aam
test
lcall
xrelease
push
lret
mov
lds
ror
and
loop
jne
decl
shl
daa
adcb
mov
sub
lods
jno
cmp
fists
pop
fldt
jl
xchg
sub
arpl
jo
insb
imul
mov
push
iret
mov
insb
jmp
mov
das
xor
add
sbb
lret
insb
xor
inc
movsl
xchg
xor
adc
mov
ret
enter
call
lcall
jl
out
xchg
in
mov
test
test
jnp
pop
xor
aam
adc
or
cmp
dec
orb
mov
andl
fisubl
faddp
movsl
jge
popa
mov
leave
sub
sub
jg
sub
sub
movsl
inc
mov
and
int3
adc
adc
and
mov
push
imul
mov
mov
bound
pop
aaa
and
lret
jmp
mov
xchg
inc
addr16
sahf
mov
sub
cwtl
push
or
push
dec
sub
imul
cmp
jb
sbb
notb
jle
iret
push
cmpl
adc
xor
jmp
jne
adc
dec
mov
nop
fwait
sub
pop
jb
sbb
insl
mov
mov
popf
ret
mov
loop
xchg
mov
iret
mov
movb
mov
inc
sub
enter
cmp
out
push
je
push
push
lcall
fadd
hlt
push
lea
movsl
or
mov
arpl
sbbb
lahf
icebp
mov
pushf
push
mov
pop
inc
aas
sahf
push
xchg
jno
rclb
mov
pop
adc
sub
sbb
outsl
and
lods
icebp
adc
pop
movsl
mov
fldenv
xchg
shll
jne
pop
sub
xor
inc
in
and
lea
sarb
pop
lds
inc
mov
dec
ret
add
repz
jle
int3
sub
adc
fsub
dec
jmp
nop
notb
faddl
cwtl
sub
or
cmpsb
xchg
mov
scas
jmp
call
bound
pop
cmp
xor
rcrb
cmpsl
ds
inc
ret
mov
pop
and
mov
add
xor
pcmpeqd
mov
push
push
add
arpl
dec
xchg
pop
les
lods
dec
sub
dec
in
imul
mov
mov
xchg
add
pop
pop
inc
call
xchg
fistl
cmp
fcoms
xchg
repnz
movsb
fiaddl
dec
int
jae
or
shlb
cmpsb
jno
jns
push
push
sbb
jnp
stos
repnz
jns
or
or
sahf
icebp
adc
add
pop
mov
imul
test
or
andl
jle
xor
mov
add
sub
daa
popa
ret
into
addr16
push
pop
sub
fsubrl
xchg
aad
stos
addr16
and
mov
jg
in
inc
adc
cwtl
cmp
dec
dec
jno
xlat
roll
aad
pop
fprem
jle
xchg
arpl
das
mov
enter
imul
arpl
dec
xor
test
psubw
movsl
xor
pop
jb
mov
xchg
pop
pop
out
inc
sbb
outsb
nop
inc
sti
jmp
cwtl
shlb
mov
jecxz
push
fists
or
fs
btc
adc
ret
push
mov
arpl
cld
out
xchg
ds
dec
push
or
repnz
sbb
in
cltd
xor
jae
mov
stos
and
adc
jae
inc
fcomps
xchg
imul
dec
testl
push
loop
arpl
add
enter
inc
inc
out
dec
ljmp
mov
lret
pop
sub
or
ljmp
jne
pop
inc
roll
sub
pop
fwait
push
add
jge
or
stc
in
cld
jmp
mov
jns
insb
sbb
lahf
dec
mov
in
sbb
addl
mov
inc
rolb
stc
mov
xchg
rcr
test
arpl
sub
pushl
push
rcll
push
mov
je
test
ret
jle
dec
ja
lea
push
mov
xchg
pop
jo
mov
bound
mov
pop
pusha
sub
lahf
pop
pop
adc
add
std
in
jne
leave
rsm
popf
and
insl
push
leave
bnd
adc
and
sbb
dec
nop
mov
fs
sub
push
and
mov
mov
mov
adc
popa
mov
push
aaa
fldt
xorb
adc
or
jo
adc
flds
pop
xchg
xchg
shr
js
fstl
pop
pop
cmc
movsb
iret
or
mov
and
mov
pop
sub
test
fst
sub
ret
jl
in
dec
loopne
jno
into
cmp
jbe
xchg
mov
pop
out
xor
pop
into
sti
lahf
jp
and
xlat
jg
andb
mov
lock
out
fwait
hlt
xchg
fstpt
and
sbb
ja
add
mov
mov
cmp
add
repz
jecxz
cs
icebp
adc
nop
pop
cmp
std
jg
jne
xchg
leave
sbb
cmp
mov
icebp
jecxz
mov
pop
xchg
jg
mov
push
mov
push
add
pop
lods
mov
ret
or
xchg
pusha
jne
loopne
scas
xchg
setb
push
lods
dec
and
pop
inc
dec
test
jp
in
incb
xlat
jecxz
mov
xchg
push
test
ret
xchg
rcrb
adc
lods
add
push
pop
outsl
push
jns
xor
jecxz
cmp
popf
mov
mov
sbb
cmc
mov
add
cmp
inc
push
and
or
pop
into
inc
mov
insl
call
jmp
push
and
push
repnz
xor
sbb
inc
in
ja
repz
out
mov
fistps
xor
sub
pop
jg
mov
mov
divl
daa
sub
push
lcall
aad
cmpb
mov
pop
mov
push
stos
stc
shl
push
dec
fmul
cmp
jne
mov
cld
ret
pop
lret
aas
push
sub
popl
push
testl
mov
inc
cmpsb
inc
adc
and
pop
mov
inc
mov
mov
jnp
and
lock
imul
inc
jno
add
mov
sti
stos
sahf
dec
out
cmpsb
mov
sbb
fildll
or
or
sub
push
rcll
pop
push
addr16
fldl
push
cs
nop
fs
imul
outsl
ret
scas
cmpsl
idivl
outsl
xchg
rolb
xor
ret
add
xchg
push
arpl
sub
outsl
mov
push
mov
jge
mov
cmpsb
ljmp
outsb
aaa
stc
stos
fwait
jbe
inc
js
xor
icebp
pop
mov
pop
inc
shr
ljmp
add
xor
push
divb
xchg
mov
in
in
leave
add
xchg
call
push
or
or
popf
mov
ljmp
test
mov
mov
inc
jbe
cld
dec
leave
mov
out
js
cmp
imul
push
jle
pop
testl
and
dec
push
push
sahf
inc
xor
pop
xchg
add
in
jge
cwtl
mov
sbb
jmp
int3
xchg
lea
mov
lahf
jns
inc
out
mov
pushf
jmp
stc
xchg
or
mov
xchg
shr
cmp
mov
cmp
or
cmp
push
mov
cltd
dec
adc
inc
or
icebp
dec
popl
pusha
lret
lret
sbb
out
loop
push
sbb
cmpsb
clc
hlt
dec
adc
and
add
inc
cmc
popf
pop
mov
aas
jp
jg
cmp
or
dec
pop
icebp
enter
dec
lcall
dec
sarb
pop
jg
orb
cmpsl
loope
jns
mov
mov
add
mov
imul
iret
jp
lods
repnz
sub
mov
repz
sbb
in
test
rorb
cmp
xchg
xchg
lds
ret
inc
rolb
cmpl
jae
xor
call
cmp
xor
lods
cmpsb
std
add
cmp
or
dec
cmp
jns
or
dec
jno
ljmp
fcmovbe
jae
ret
sbb
push
pop
sub
cli
adc
and
mov
or
pop
pop
pushf
mov
outsb
shr
mov
dec
aad
hlt
rcll
in
mov
out
ss
inc
push
mov
js,pn
cmp
outsb
int
jnp
aam
add
sbb
mov
push
adc
out
dec
je
jbe
cmp
cmp
mov
out
aaa
lods
out
push
or
aad
arpl
mov
loope
mov
inc
aad
cmp
push
rorl
jecxz
jnp
lods
mov
xlat
dec
repnz
add
dec
shr
pop
in
ja
outsl
insl
dec
cmp
fwait
mov
or
push
popa
jmp
gs
pop
repnz
pop
je
dec
sahf
fistps
cwtl
sarb
imul
lods
cmp
leave
cmpsl
and
hlt
add
xor
sub
ds
shrb
movsb
std
fmull
push
es
cli
mov
sub
cs
loop
mov
xor
outsb
pop
insl
jne
sbb
jp
xchg
iret
mov
sti
push
jle
mov
jmp
push
jnp
das
inc
pop
insl
enter
scas
or
add
xchg
dec
cld
mov
inc
cmc
push
rclb
sub
mov
cmpb
mov
int
lock
icebp
ja
lods
xor
xchg
push
fldl
xor
push
mov
sub
test
cs
loopw
adc
push
shr
pushf
or
sahf
test
inc
loopne
out
and
sub
arpl
inc
push
mov
jg
loopne
ficompl
dec
dec
pushf
cmp
pop
mov
lds
sbb
jb
mov
out
push
in
rcll
add
mov
adc
adc
imul
aad
and
lret
test
pushf
pop
xor
enter
xor
daa
in
pop
movsl
iret
and
push
xchg
popf
ret
clc
xchg
xchg
push
fimull
fisttps
loopne
daa
or
mov
mov
mov
loop
sarb
nop
jg
sub
pusha
and
push
jnp
nop
test
movsl
push
pop
loope
movsl
and
pop
insl
orb
fildll
xor
mov
enter
dec
xchg
in
xor
scas
nop
mov
call
mov
jecxz
into
bound
mov
mov
adc
pop
iret
inc
mov
lea
lea
jle
dec
hlt
lret
and
ljmp
jle
dec
sbb
xor
add
mov
mov
addb
sbb
push
xchg
cmp
rorb
inc
pop
xchg
aas
stc
mov
enter
add
call
stos
mull
out
adc
stc
gs
inc
pop
inc
or
adc
add
fsubs
mov
fnsave
sbb
pop
arpl
inc
dec
leave
inc
imul
jbe
loopne
out
bound
popf
fbstp
lahf
inc
add
imul
lcall
fwait
inc
popa
lea
xchg
jnp
aaa
push
jns
fwait
aas
clc
or
fnstsw
jb
jg
arpl
ds
stc
xchg
mov
sub
dec
pop
pop
sbbb
xor
dec
inc
dec
dec
xor
std
dec
fdiv
mov
pop
mov
mov
subl
loope
sub
cmp
mov
lea
push
push
pop
lods
jo
sub
add
decb
out
jb
xchg
andl
rorl
and
pop
sti
push
xor
mov
jno
std
push
mov
andl
push
dec
cmp
lock
js
rolb
inc
hlt
imul
int
xchg
repz
mov
out
test
fisttps
cld
sub
enter
lds
cmp
pusha
into
xor
cmp
dec
sbb
inc
gs
inc
lahf
lcall
es
test
je
or
ja
imul
cmc
cltd
aaa
jns
mov
sbb
mov
test
mov
adc
test
dec
out
or
loopne
push
adc
push
mov
inc
mov
scas
xchg
cli
jno
sub
mov
lods
repz
push
movb
ret
mov
push
cltd
clc
mov
push
push
and
ds
scas
cmp
ja
aam
mov
pop
mov
dec
mov
jmp
mov
mov
loop
cmp
ds
jl
pop
je
movsl
push
push
loope
fs
jnp
xchg
std
int
push
jp
insb
mov
add
into
jno
notl
stc
add
xor
mov
mov
aam
inc
mov
mov
std
nop
inc
addl
nop
adc
mov
ds
gs
xchg
mov
inc
addr16
adc
pop
leave
cmp
aas
mov
adc
fnop
jo
sbb
cmp
pop
cmpb
loope
jae
subl
sahf
push
ss
mov
lea
loop
out
cmp
inc
cmpsb
mov
sti
pop
cmp
int
fucomp
add
add
shll
out
mov
mov
xchg
mov
addr16
mov
add
xchg
inc
aam
lahf
dec
dec
mov
sahf
xor
xchg
mov
xor
inc
imul
add
xor
jle
or
xchg
sbb
into
shlb
mov
mov
mov
or
insl
in
aad
fisttpll
add
cld
scas
out
outsl
sbb
adc
ds
sbb
pop
mov
jle
jne
mov
arpl
mov
ds
ds
cmp
xor
dec
or
gs
xchg
push
and
ss
xchg
pop
test
ret
loop
lea
jle
add
sti
andl
and
std
dec
jp
pop
test
pop
dec
or
or
inc
mov
cmp
xchg
jg
test
inc
pop
lret
add
shrl
adcb
jmp
mov
pop
xchg
test
sbb
scas
je
sub
jo
aas
ljmp
imul
mov
call
popf
sub
clc
arpl
push
fidivl
outsb
push
mov
cmc
cmp
mov
inc
dec
fidivs
mov
rcrl
pop
lds
pushf
or
sub
test
jmp
mov
xchg
push
iret
mov
icebp
sub
repz
aad
mov
icebp
sti
lret
pop
ret
xor
addr16
andl
loope
push
mov
stos
sub
xchg
pop
jecxz
ret
inc
inc
mov
setl
mov
clc
xchg
jmp
in
xor
mov
call
fidivrs
add
aaa
in
fs
push
loop
and
xor
inc
lcall
mov
sbb
mov
subb
outsl
mov
sti
mov
lahf
ret
sysret
pop
cmp
sti
pop
clc
pushf
inc
push
lea
cmp
push
add
sbb
xchg
dec
sti
add
js
xchg
mov
add
in
ss
jns
movsl
jno
sub
mov
mov
sub
loopne
mov
jnp
cltd
movsb
xchg
cld
rcrl
push
or
fcomip
add
pop
jno
out
pop
or
fisubs
adc
pushl
testb
dec
or
add
and
push
sub
sahf
cmp
stc
decb
fnstsw
pop
int
inc
sbb
decl
lods
cmp
dec
aaa
inc
and
aam
sub
jne
stos
dec
mov
xor
or
jg
scas
test
xlat
push
orb
sub
dec
mov
adc
loop
repnz
adc
out
mov
and
js
imul
shrb
pop
fdivl
lock
jbe,pt
xbegin
repnz
imul
sbb
mov
cmc
sub
fdivrp
ljmp
mov
xchg
mov
scas
xor
mov
xlat
pop
pop
in
imul
out
outsl
mov
push
lcall
ljmp
xor
scas
sbb
add
dec
aas
mov
les
xchg
pushf
mov
imul
or
addr16
in
ds
xchg
adc
int
shrl
loope
mov
hlt
mov
scas
loop
push
sub
mov
orb
pop
insl
movsb
xchg
adc
adc
mov
test
or
xor
adc
cwtl
pop
pop
xchg
out
dec
adc
test
xor
movsl
rcr
ljmp
cld
inc
xchg
inc
movsl
push
sub
scas
add
in
dec
mov
bound
sub
dec
pop
mov
xchg
adc
test
ja
stos
aaa
pop
rsm
enter
lret
pop
and
and
sahf
nop
jo
pop
jp
push
loop
movsl
add
mov
xor
pop
add
add
ret
cmp
sbb
or
mov
adc
sbb
shr
dec
pop
jge
and
add
push
and
cmp
inc
push
pop
sub
out
sbb
cmpsb
out
mov
jge
icebp
push
andps
test
in
pop
dec
push
jnp
xchg
push
in
mov
pop
loope
into
pusha
adc
jbe
bound
push
and
pusha
inc
pop
mov
in
insb
pop
push
fs
in
jle
fwait
testl
xlat
adc
gs
push
fsubrs
pop
cmp
ficoml
jg
mov
sar
push
scas
xchg
inc
mov
in
mov
dec
lods
xchg
mov
popa
enter
call
iret
jmp
add
test
push
mov
xchg
cmp
xchg
sub
adc
inc
inc
mov
jg
cli
sub
sbb
nop
into
adc
clc
sti
rclb
push
dec
leave
or
dec
xchg
mov
sbb
xlat
adc
jmp
lods
ljmp
pop
mov
and
mov
or
insb
or
iret
xor
fmulp
dec
and
or
pop
and
and
orl
test
out
add
inc
cmp
sahf
pop
inc
nop
push
js
jmp
stos
jo
scas
repnz
xchg
inc
push
aam
xlat
loope
and
dec
sahf
nop
push
cmp
sahf
push
lock
int3
pop
mov
sub
jbe
mov
int3
addr16
xlat
cmp
adc
in
into
popa
iret
pop
data16
leave
cmp
xchg
scas
enter
or
out
push
lcall
rclb
pop
aas
out
fbld
cmp
adc
mov
fisubs
fs
jecxz
mov
mov
cmp
cmp
push
or
out
adc
lcall
outsl
shll
mov
mov
cmpsl
fs
ja
scas
jp
push
mov
imul
lahf
cmpsb
scas
or
inc
repz
mov
cltd
dec
or
mov
xor
imul
outsb
xor
xorl
hlt
cmp
pop
jb
sub
mov
iret
mov
div
cmp
jge
adc
cmp
iret
mov
inc
jbe
mov
movsl
jno
mov
xchg
pop
sbb
pop
mov
push
add
call
mov
lods
lahf
subl
movsl
pop
xor
test
xor
mov
mov
ffree
es
ds
sub
dec
dec
fsubrl
cmc
addl
add
xchg
jns
sbb
inc
sti
lret
lods
lret
lods
inc
push
pop
fcom
jg
push
sub
jge
repz
and
into
cmp
aam
mov
cmp
addr16
lea
add
or
jp
call
push
pop
dec
mov
call
das
xor
add
jle
adc
loope
mov
enter
mov
das
sub
je
and
push
movsb
cmp
xchg
clc
mov
insb
cmc
jb
mov
xor
dec
mov
mov
int
cmp
jns
mov
jo
cs
jle
sub
test
cwtl
loopne
pop
repnz
xchg
dec
outsb
dec
ds
push
in
addr16
sbb
lret
pop
lds
mov
mov
adc
xlat
and
shr
xor
int3
add
leave
mov
jmp
xchg
and
adcb
dec
call
cld
enter
xchg
test
lock
mov
and
test
mov
xor
mov
mov
test
gs
push
mov
mov
push
dec
pop
jl
xchg
sub
orl
dec
sbb
fstpt
add
popf
sub
jge
pop
mov
xor
in
out
lods
out
inc
cmpsb
jmp
inc
repnz
pop
mov
aaa
xor
in
sbb
add
add
dec
test
gs
xlat
mov
mov
ljmp
mov
jne
ja
aaa
inc
jno
scas
orl
fwait
insb
inc
pushf
xchg
push
lds
push
dec
inc
scas
in
pop
sbbb
xor
sbb
or
inc
xorb
cmp
mov
ds
push
sahf
pop
mov
mov
cltd
xor
jbe
imul
inc
xchg
gs
jbe
add
jp
or
xor
out
ds
cmp
jl
inc
add
sbb
and
pop
int3
nop
jge
xor
js
cmpsb
sbb
pushf
test
popa
rorl
push
cmp
dec
fldl
jbe
xor
or
cltd
mov
invd
inc
pop
mov
pop
sbb
cwtl
lods
add
pop
stc
cwtl
stos
ds
jb
and
imul
ds
mov
xchg
inc
mov
movsb
negl
movsl
notb
orl
imul
push
jl
and
push
xor
syscall
mov
out
jl
pop
mov
adc
lret
popf
int3
dec
sub
jmp
dec
movsb
fisttpll
lret
xor
loopne
jmp
in
xor
dec
dec
cmp
clc
das
xor
push
rcrl
aam
in
fmuls
and
int3
test
pop
outsl
and
insl
pop
imul
jecxz
outsl
pusha
adc
xor
xchg
pop
sbb
xor
push
jmp
inc
jl
inc
leave
insb
pop
pusha
enter
or
mov
jecxz
cs
or
sub
clc
out
lahf
mov
cmp
dec
inc
rcrl
mov
dec
push
shrl
insb
aam
sbb
mov
jg
in
inc
pop
sbb
pop
inc
cmovne
sbb
jmp
sbb
or
test
shrb
jmp
sub
jg
and
ja
fs
cmpsb
and
loopne
popf
pushf
jmp
pusha
jg
addr16
rcrl
dec
imul
sti
dec
stos
dec
sub
or
push
bound
test
idivb
xchg
cmpsb
dec
mov
inc
hlt
aad
pop
pop
subb
stos
sub
push
jns
push
cltd
lods
hlt
hlt
push
dec
fisubrs
enter
test
lcall
jnp
je
js
pop
jp
stos
fstps
add
jecxz
test
mov
jne
ret
loope
sub
adc
pop
and
pop
stos
test
inc
scas
mov
jo
xor
cli
fildl
popa
sbb
lods
imul
es
pop
and
loope
inc
aas
jle
stos
hlt
or
jmp
or
pop
and
out
nop
mov
lcall
mov
jecxz
and
push
icebp
mov
fistl
int
lahf
mov
xchg
mov
pop
add
adc
loope
adc
jle
popa
adc
or
inc
pop
xor
sub
aas
std
out
pop
xchg
imul
adc
pop
sahf
out
mov
mov
mov
jnp
sbb
popa
movsl
inc
inc
mov
inc
and
xlat
js
call
mov
lea
lea
and
pop
out
cwtl
adc
adc
sub
dec
jno
fnstenv
fistl
pop
das
xchg
int
mov
mov
jnp
and
sbb
xchg
adc
outsl
sub
stos
pop
in
lea
push
je
and
dec
dec
shll
loop
cmc
fnsave
data16
addr16
add
xlat
pop
sbb
ds
pop
sbb
test
cmp
ljmp
mov
inc
xchg
mov
ret
dec
shrb
test
jp
jns
add
jge
push
and
arpl
insb
jb
mov
inc
pop
xchg
cwtl
fsts
test
cmpsl
push
movsl
mov
jg
add
add
xlat
ljmp
lds
shlb
data16
mov
aas
int
mov
repnz
xor
add
repz
iret
mov
jne
jge
jmp
cmp
adc
xchg
lret
lock
sub
jnp
mov
mov
ss
fisttpl
xchg
pop
test
outsb
rcr
js
ja
test
fs
bound
and
sbb
jp
mov
andb
cmpl
pushf
pop
cmpl
jae
lea
lea
aad
cmp
push
adc
iret
jg
lds
sahf
or
lret
sub
pop
adc
and
mov
add
sub
jp
addr16
enter
dec
pop
call
sub
push
xor
jge
repnz
and
sti
punpckldq
out
inc
mov
pop
popa
in
cwtl
ljmp
push
ja
gs
push
movb
pop
loope
and
add
xlat
ljmp
mov
iret
repz
xchg
cmp
dec
mov
push
xor
out
je
fildl
pop
pop
xchg
insl
insl
cltd
mov
in
sub
int
xchg
dec
hlt
lods
add
xor
xor
js
or
loopne
fsubrs
rorl
pop
xchg
or
int
mov
pop
pushf
xchg
and
adc
das
inc
jge
pop
push
jnp
pushf
shlb
xchg
repz
xchg
dec
imul
jb
cmp
adc
sbb
pop
stos
mov
fwait
add
subb
pop
enter
out
out
add
repnz
xchg
cli
inc
nop
aaa
shlb
popa
add
in
sub
aas
lea
push
popf
enter
dec
mov
push
movsb
and
loop
lods
xlat
shlb
cmp
add
loop
dec
adc
mov
stos
sub
dec
xchg
and
push
add
out
add
cmpsb
mov
mov
jmp
mov
sub
dec
repnz
xchg
or
mov
ja
adc
xor
cwtl
jg
in
jno
cwtl
sub
xchg
lea
in
pushl
out
add
adc
sbb
mov
xchg
push
sbb
cmpsb
adcb
xchg
dec
leave
adc
cmp
daa
mov
and
fs
push
in
and
xchg
cld
cmpsl
enter
orl
xor
mov
cli
out
test
and
mov
sti
add
xor
mov
inc
xor
cmp
pop
mov
push
push
lods
add
fsubs
or
and
jle
lea
jns
testb
or
ja
add
ret
sub
scas
or
and
rcr
jo
push
mov
dec
mov
sub
add
mov
add
dec
xchg
push
xchg
mov
in
jle
xlat
fldenv
stos
dec
inc
push
push
js
imull
aas
aas
data16
mov
mov
cmp
xor
test
add
test
icebp
hlt
je
jg
iret
jg
in
leave
add
in
or
mov
pop
sub
outsb
imull
add
jo
and
mov
arpl
mov
pop
clc
pushf
mov
inc
push
lea
outsb
sub
repz
jns
imul
hlt
aaa
mov
inc
enter
aas
sub
xchg
cmp
jp
inc
ss
mov
sub
bound
mov
enter
mov
movl
fwait
push
ss
push
icebp
jp
sahf
fmul
jb
cmp
cmp
aaa
jp
or
clc
jno
mov
js
pushf
or
add
rorb
mov
jg
jg
pushf
es
add
xchg
xchg
inc
sbb
clc
std
adc
push
and
ljmp
inc
lods
jnp
lahf
cltd
jecxz
mov
pop
xchg
test
je
xchg
add
mov
and
lret
lret
fistpl
in
fucom
push
sub
test
lods
jle
sti
push
sub
negb
aas
jo
mov
push
out
iret
adc
jns
adc
push
pop
movsl
fnstcw
addl
popa
lods
jl
push
inc
test
das
xchg
adc
rcl
lods
dec
fstpt
xchg
arpl
jae
or
jnp
xor
inc
push
sbb
xor
andb
inc
lahf
add
mov
ret
push
jl
dec
lea
gs
push
and
sbb
pmuludq
pop
int3
dec
out
orl
push
push
daa
push
fcomps
ljmp
ljmp
pushl
sbb
inc
and
lret
mov
movl
stos
subb
divb
pop
fs
jo
mov
mov
and
fstps
stos
out
rorl
push
lods
int
icebp
icebp
cmp
mov
inc
ja
int
aam
dec
call
aaa
fmuls
cs
js
mov
cld
mov
cmpl
cmp
in
das
jmp
mov
aaa
cmp
jno
mov
mov
stc
adc
js
andb
std
repz
jnp
js
leave
dec
cmc
adc
imul
adc
push
aaa
loop
xchg
insl
mov
enter
jns
and
in
mul
inc
mov
push
xor
in
ds
decb
mov
and
hlt
sub
data16
leave
push
mov
adc
mov
out
inc
inc
outsb
imul
movb
aad
add
bound
adc
out
mov
jecxz
push
push
add
sub
aam
cmp
ljmp
cmp
sbb
addl
jl
jle
call
jnp
mov
sub
lcall
lcall
add
inc
pop
jno
pop
dec
pop
cmp
outsb
scas
sub
pop
xchg
push
mov
in
dec
mov
mov
loop
subb
es
pop
aam
sub
push
and
fldcw
push
sbb
push
inc
lahf
aad
subb
jp
dec
adc
push
cmp
xor
or
inc
pop
mov
mov
hlt
add
xchg
xorb
add
mov
stos
xchg
movsb
cmc
jns
sub
and
lcall
lds
fsts
or
sub
mov
mov
insb
inc
insb
repz
aad
jmp
loope
mov
mov
push
jl
stos
stos
xchg
and
movsb
push
and
cmp
push
cmp
int
fsubs
push
mov
lret
mov
mov
and
push
sahf
es
push
add
mov
pop
cmp
movb
ds
mov
movsl
dec
cmp
scas
dec
pop
inc
sub
sbb
ljmp
pusha
cmpsl
push
xchg
cs
pop
cli
sar
mov
push
lock
xchg
outsb
idivl
xor
pop
imul
jl
cmpsl
dec
cmp
rolb
loop
push
mov
jle
fbstp
dec
out
cmp
stc
push
clc
adc
cmp
push
sub
lret
icebp
jmp
aad
sub
cmp
and
lahf
or
or
loope
push
push
mov
int3
xor
mov
inc
jb
xchg
int
std
xor
ljmp
fsts
gs
mov
into
data16
popa
push
jge
in
data16
push
jp
jne
aas
fwait
mov
pushf
orb
jo
sbbl
sti
sub
mov
roll
and
loopne
jo
mov
call
lcall
add
cs
enter
lods
pop
add
in
daa
fwait
dec
pop
mov
je
mov
outsl
jg
std
or
sub
pop
ss
stos
aad
jl
ficompl
dec
pop
mov
and
add
sarb
mov
and
mov
in
loope
cmp
mov
icebp
in
pop
cltd
jb
and
aas
jno
lea
popa
sub
mov
js
mov
fidivl
sub
add
pop
sub
inc
add
out
popa
dec
mov
outsl
nop
xor
movsb
dec
dec
cmp
movsl
fs
inc
aas
dec
lahf
pop
aad
fnstenv
mov
adc
pop
repnz
push
xor
xor
js
pop
cmp
enter
or
pushf
pop
out
inc
pop
adc
mov
insl
inc
mov
fistpl
push
je
mov
mov
outsl
scas
dec
test
cmp
out
out
mov
jmp
sub
fadds
cltd
mov
aam
ja
cmc
mov
add
mov
mov
les
repz
outsl
sub
adc
push
arpl
inc
testb
dec
je
lock
push
fwait
movsb
je
andl
jae
mov
jmp
mov
repz
pop
push
jp
fwait
pop
test
call
scas
clc
cmp
mov
jle
lret
mov
adc
mull
add
sub
and
sahf
adc
adc
mov
lret
jl
divb
xor
and
sub
push
pop
xchg
pop
lods
mov
xchg
movsb
cs
movsb
lds
mov
mov
xchg
push
test
and
cld
leave
daa
dec
ret
pop
sub
bound
xchg
out
insb
ljmp
test
fbld
negl
cmp
imul
inc
cmp
popf
inc
xor
in
pop
xorb
xchg
mov
lcall
aad
xchg
cmpsb
mov
inc
orb
jp
mov
bound
dec
or
decl
lret
add
push
dec
imul
lea
jle
mov
xchg
negl
push
pop
cld
repz
dec
je
in
fisttpll
jne
jo
xchg
scas
add
insb
mov
and
imul
sub
int3
les
xor
fidivrs
mov
hlt
jge
pop
mov
icebp
cltd
push
mov
mov
cmpsl
scas
adc
lret
pop
sbb
dec
mov
lods
cltd
pop
mov
jl
in
mov
push
addr16
push
inc
sti
jp
jmp
test
mov
ljmp
outsl
shrl
repz
and
mov
sbb
ljmp
and
xchg
test
cltd
sub
push
out
dec
mov
mov
movsl
in
pushl
mov
repnz
adc
lahf
iret
dec
arpl
push
and
lods
in
orb
stos
sti
sub
pop
ror
adc
inc
es
stos
push
mov
add
lods
xor
adc
adc
test
push
mov
bswap
jno
daa
hlt
test
stc
aaa
push
dec
add
mov
lahf
jns
cmpsl
hlt
fisubl
test
sbb
sarb
or
adc
or
sahf
lods
mov
std
pop
scas
xor
int
test
outsl
mov
cmovbe
pop
fiaddl
outsb
jle
mull
repnz
sbbl
push
inc
fstpt
pop
mov
push
test
jmp
stc
dec
cmpl
and
pop
lods
and
ss
pusha
in
mov
pop
iret
jae
std
popf
sbb
cld
loopne
jmp
jle
ret
sub
fcmovu
jo
sbb
mov
lret
inc
cmc
fildll
lfs
mov
sub
xor
sbb
jmp
testl
jl
pop
push
mov
or
push
push
shr
rcll
mov
mov
push
lret
mov
out
mov
cmp
pop
mov
repnz
fsubl
xlat
jmp
xchg
jecxz
or
inc
insb
scas
jb
stc
or
pusha
in
dec
ret
or
pop
xchg
mov
sbb
dec
arpl
notl
pop
call
jmp
push
mov
jmp
fistl
jp
and
data16
jg
in
daa
enter
lahf
clc
mov
push
push
cwtl
fidivl
fstpl
mov
lahf
je
clc
lcall
mov
call
pusha
test
xchg
in
mov
test
popf
cmp
mov
sub
add
lea
jl
scas
mov
pop
mov
dec
scas
add
jb
ficompl
cmpsl
push
rcrl
dec
add
lock
hlt
mov
mov
or
fistpll
xchg
popf
or
xchg
sbb
jne
fsubl
inc
mov
fwait
jecxz
les
cltd
xchg
inc
addb
enter
mov
test
in
push
jne
or
shll
stos
pushf
pushf
push
jne
pop
jne
mov
pop
and
mov
dec
sbb
nop
mov
mov
subl
push
cmpsb
add
shll
sbb
test
rcrl
lea
jns
cli
dec
jne
xorb
pop
jnp
out
sub
push
cmp
test
mov
push
inc
push
add
pop
fistpll
ret
ljmp
jg
pop
and
inc
popa
inc
aas
dec
add
stos
sti
add
xor
jb
cmpsl
pop
sbb
icebp
insl
cmp
push
out
mov
test
call
fists
mov
jo
stc
push
and
sub
and
lret
dec
sarb
xchg
outsl
or
mov
jo
mov
mov
pop
push
inc
add
cmp
adc
sbb
mov
gs
clc
popf
cmp
rolb
or
addr16
xor
sub
xchg
out
adc
xor
xor
xchg
pop
xchg
jns
dec
adc
mov
jl
repnz
jb
mov
adc
rorl
sub
mov
fsubr
scas
mov
imul
aad
pop
inc
dec
leave
je
xchg
jno
or
in
movsl
in
mov
dec
mov
movsb
pop
jecxz
mov
into
pop
fs
mov
inc
pop
out
data16
stos
lret
jno
or
adc
outsl
push
jb
xor
cmp
cmc
add
and
push
push
mov
shld
icebp
xor
mov
addl
push
inc
mov
xor
fisttpll
les
mov
std
pop
xchg
in
add
aad
dec
sbb
daa
loop
inc
stc
push
inc
cmpsb
lock
jo
jecxz
enter
scas
repnz
in
push
js
jge
nop
scas
push
mov
addr16
dec
pop
mov
dec
xchg
enter
mov
shrb
fdivrs
inc
sbb
fnstcw
addr16
out
aas
cmc
movsl
and
mov
inc
mov
mov
adc
movsb
push
into
ds
dec
insl
mov
mov
loopne
cli
ffree
mov
mov
push
imul
repz
les
pop
push
sbbl
mov
xlat
add
test
pop
inc
mov
mov
aam
popf
mov
mov
and
clc
pop
mov
adc
rcrb
std
shlb
outsl
cmp
dec
mov
stc
sub
adc
mov
popa
test
ret
bound
ds
in
mov
and
push
mov
cmp
shl
adc
lods
jne
or
sub
xchg
out
movsl
icebp
dec
ds
sub
push
xor
sbb
pop
adc
pop
shrl
movsl
mov
xchg
cltd
or
mov
xchg
and
ljmp
outsl
inc
xchg
mov
mov
push
pop
xor
jmp
cmp
out
or
repz
rcll
mov
xor
cmpsb
sahf
fildll
cmpsl
jne
stc
sub
outsb
int3
or
filds
fidivs
mov
add
jmp
sub
adc
and
cld
push
test
sub
push
shrl
nop
add
stos
and
in
add
jbe
jns
popf
leave
mov
outsb
sbb
xor
scas
dec
mov
mov
add
js
outsl
loopne
out
aaa
outsb
stos
fwait
mov
inc
cmp
test
or
pop
adc
xchg
mov
mov
cmp
out
dec
testl
or
inc
jb
cld
xchg
push
subl
into
lock
and
test
add
sub
hlt
mov
roll
mov
push
push
push
adc
xor
dec
xchg
sub
adc
out
pop
fcomps
test
gs
adc
dec
jecxz
aas
fstl
sbbl
pop
std
lret
jge
ja
pop
jae
mov
roll
leave
jmp
pop
ja
push
pop
mov
cmpsb
sti
add
ja
cltd
aas
jnp
cmpsl
pop
mov
cs
or
and
clc
icebp
cmp
clc
and
pop
pop
jge
fwait
inc
adc
add
mov
fcoml
pop
cli
inc
dec
and
in
pushf
add
or
fcmovb
fstps
and
in
and
enter
mov
enter
enter
cld
adc
stos
insl
dec
add
mov
negb
push
fnstsw
cwtl
add
inc
push
cs
cmc
or
std
cmpsb
inc
mov
nop
pop
in
sbb
fcoms
int3
jp
jg
xor
xchg
inc
lods
fildl
cmp
insl
iret
fwait
sbb
mov
mov
lock
mov
mov
inc
add
xor
cwtl
cltd
int3
popa
cltd
xchg
and
mov
push
push
rorl
dec
dec
xchg
jnp
frstor
lcall
cli
jnp
movsl
fiaddl
sub
ds
or
cmp
xor
nop
xchg
xor
lahf
and
imul
mov
out
pop
jae
sub
jecxz
rcll
in
xchg
lods
js
imul
inc
jns
push
jl
push
mov
data16
lahf
add
cmp
mov
cli
fisttps
mov
adc
aam
mov
out
pop
mov
out
pop
frstor
cld
mov
cmp
cltd
es
xchg
movsl
int3
pop
inc
addr16
cmpsl
mov
mov
sbb
js
cmpsb
jno
mov
fwait
and
decl
icebp
or
inc
sub
dec
cltd
es
xlat
pop
dec
add
repz
mov
scas
sub
in
push
mov
jb
enter
sub
fnsave
in
ljmp
xchg
adc
out
add
aas
pop
pop
shll
inc
cwtl
mov
pop
xor
fistl
in
cli
sbb
stos
jmp
movsb
add
lahf
push
mov
adc
dec
xchg
popf
out
psrlq
dec
xchg
xchg
sbb
rolb
es
lret
movsl
adc
sbb
rorb
ljmp
xor
mov
in
aad
jp
cmpsb
in
test
data16
push
addr16
imul
movsb
es
jb
sarl
mov
mov
jb
das
cli
cmp
xor
mov
sub
int
stc
xor
sbb
add
cld
pop
mov
push
mov
mov
mov
sbb
insl
dec
lea
fisubrs
sarl
mov
mov
lret
sub
mov
push
jo
sbb
pop
mov
outsb
insb
cmp
out
inc
mov
adc
outsl
jmp
sub
cmp
jnp
mov
and
dec
sbb
out
and
leave
cmp
inc
inc
xor
pushf
in
lods
and
mov
test
jnp
vxorpd
aad
enter
and
cmpsb
pop
dec
push
sbb
fs
cwtl
cmc
xor
mov
mov
sub
sbb
mov
push
xchg
lea
loope
test
sub
movsl
add
sbb
dec
je
es
ja
adc
pop
test
xchg
pop
scas
fimuls
pop
hlt
out
lods
sub
das
bound
lock
xchg
data16
fwait
test
icebp
and
imul
popf
and
mov
jb
sub
or
mov
pop
xchg
adc
in
push
inc
mov
mov
fincstp
push
jp
fldt
sahf
mov
clc
sub
dec
iret
ja
test
push
pop
mov
pop
pop
out
jmp
int
fwait
inc
or
sub
inc
mov
push
add
cltd
idivl
aam
orb
cli
jecxz
jno
clc
xchg
movsb
test
insl
fs
fnstsw
fists
xor
stos
dec
insb
imul
iret
jmp
push
add
test
enter
fwait
dec
ljmp
pop
cli
int3
push
insl
mov
sbb
xor
jl
pop
lds
daa
dec
inc
cmc
ljmp
xor
inc
outsl
pushf
repz
cli
test
xchg
lea
xchg
pop
lods
xchg
sbb
add
aam
test
cmpsb
pop
icebp
mov
cmpsb
pop
and
inc
add
push
pop
jmp
fld
mov
in
scas
in
push
lea
es
inc
out
push
sbb
jno
sbb
push
sub
or
loop
cmp
mov
xchg
sahf
popa
or
mov
jge
lcall
loope
pop
mov
sbb
adc
divb
lahf
ja
pushf
xchg
popa
in
movsl
xchg
out
xor
mov
jl
push
adc
sbb
leave
outsb
or
or
mov
shll
push
jmp
hlt
fldt
hlt
xchg
cmpsb
mov
rcll
xchg
cltd
pushl
sbb
lock
add
out
push
divb
stc
popa
cld
dec
mov
lods
jecxz
pop
aas
inc
test
mov
into
inc
sub
fisubrl
and
sub
pop
dec
sbb
mov
adc
pop
ret
add
ffree
mov
out
push
inc
inc
ja
inc
xor
test
enter
repnz
mov
fwait
add
xchg
and
cmp
repz
mov
sbb
inc
ja
test
mov
mov
xchg
loopne
jb
xchg
push
sub
mov
lahf
movsb
enter
add
aam
jne
cmp
push
cwtl
cmp
mov
or
fistps
push
pop
or
imulb
push
sub
std
inc
nop
jno
xor
loopne
mov
inc
pushf
jg
xchg
sbb
popf
in
jle
mov
insb
decb
sahf
xchg
dec
xchg
cltd
lods
addr16
xchg
jge
cmp
imul
outsb
inc
xor
test
inc
push
adc
pop
sbb
sahf
enter
push
mov
pop
iret
subb
dec
mov
movsb
xchg
or
pop
push
cltd
dec
sbb
jns
mov
shrl
pop
cs
push
sub
fmuls
addr16
daa
add
jecxz
mov
inc
xchg
and
pushf
test
int
push
inc
inc
mov
ss
shll
adc
loop
aad
jmp
xchg
es
out
rcll
aad
mov
dec
pop
shll
fiadds
cwtl
push
fwait
ret
mov
adc
rcrl
xlat
cld
mov
adc
sahf
lret
mov
insl
mov
cs
cmpsb
je
or
mov
test
inc
shlb
mov
test
js
or
adc
pop
mov
push
gs
in
pop
aad
mov
fldt
cmp
mov
mov
add
mov
sbb
sub
adc
stc
mov
dec
xlat
test
testb
jb
pop
or
les
sbb
adc
dec
cmp
aam
xor
ficoml
push
loop
mov
jno
test
add
mov
pop
sbb
xor
adc
add
push
mov
mov
sbb
mov
es
outsl
clc
inc
test
mov
out
push
imulb
xchg
lar
dec
mov
ret
shlb
fnstenv
adc
xor
clc
stos
or
push
and
mov
jecxz
outsb
push
push
je
lds
xchg
xor
inc
xor
dec
xor
xchg
or
push
in
jecxz
in
aad
out
ljmp
out
daa
jmp
les
push
data16
sbb
and
push
imul
test
imul
cmc
xchg
test
jle
insl
rcl
lea
fnstenv
leave
mov
lds
cmpsl
in
xchg
popf
xor
jb
sub
loopne
pop
aas
dec
shlb
mov
cwtl
ret
popf
xor
mov
or
mov
adc
ds
mov
pop
mov
in
mov
mov
lret
stos
xor
mov
sub
lods
xlat
pusha
test
das
shrl
jecxz
sbb
mov
std
mov
aam
cltd
stos
sub
adc
push
mov
daa
sub
mov
inc
lds
inc
cld
test
aad
push
lods
sub
loop
mov
shl
jl
push
and
sub
ds
and
in
cmpsl
mov
jb
xor
inc
jcxz
push
movsb
push
dec
les
pop
loopne
or
push
sbb
jne
sbb
lea
pop
sbb
jg
loopne
adc
fs
cmp
jb
xchg
sub
fwait
xor
sti
sbb
and
inc
pop
xor
pushf
leave
mov
mull
sahf
fadds
sbb
inc
testl
pop
cmpb
dec
jb
mov
jle
je
adc
adc
sbb
mov
mov
out
lods
in
mov
push
outsb
push
loop
xchg
sub
and
test
sbb
jne
xor
out
repz
gs
js
pop
aas
dec
cmp
lret
shll
sbb
xchg
mov
xlat
and
aaa
dec
addr16
mov
dec
scas
sbb
jno
and
movsl
jg
dec
cmpsb
aas
in
fcompl
cmp
and
sahf
sbb
sub
xor
and
jg
imul
nop
pop
std
adc
rcrl
in
mov
or
ljmp
insl
mov
jne
daa
sbb
mov
fcmovb
jmp
push
or
dec
xor
xchg
jge
mov
cltd
mov
dec
js
lock
mov
sarb
fstl
aas
xchg
cmpsl
sub
pop
andb
mov
scas
or
xlat
insl
clc
or
xor
lock
jns
loope
scas
mov
and
hlt
mov
pop
mov
sub
push
cmp
inc
mov
mov
lret
mov
xchg
lds
jb
jns
in
mov
gs
mov
sbb
lcall
inc
mov
clc
mov
mov
jecxz
mov
sbb
in
push
mov
out
sub
xchg
cmp
ds
pop
insl
xchg
dec
adc
sbb
inc
pop
fwait
pop
jg
mov
in
lea
loopne
scas
sbb
xchg
in
pop
lcall
push
cwtl
cmpsl
pop
pushf
aad
loop
adc
das
xchg
push
hlt
into
mov
jno
mov
push
pop
inc
jp
push
inc
jne
sbb
cmpsl
cmp
and
dec
add
jae
in
sbb
cmp
xchg
cmpsl
in
cld
push
les
movb
inc
cwtl
push
je
pop
outsl
xor
ja
fidivl
aas
inc
gs
add
imul
or
insb
testb
and
lret
inc
les
das
dec
and
pop
cmp
sub
dec
shr
stos
add
nop
fwait
push
pop
xor
mov
dec
add
mov
mov
jns
shl
xchg
rclb
jnp
sbb
mov
ds
pop
into
mov
mov
dec
cmp
les
cmpsb
jne
test
icebp
outsl
add
jecxz
pushf
lret
movsb
sar
xlat
dec
cmp
cmp
xchg
inc
mov
jo
mov
xor
push
mov
std
mov
or
in
sub
lret
arpl
dec
xor
iret
inc
mov
jmp
mov
std
xor
pusha
lcall
jl
pop
fwait
cld
mov
mov
not
mov
and
dec
sbb
cld
dec
jge
mov
aaa
outsl
cmpsb
jg
setne
xor
add
fidivrl
and
inc
jp
call
dec
add
in
push
add
push
or
cmp
sbb
xor
cmp
negb
outsb
jae
push
xor
sbbb
outsl
lds
dec
mov
loope
jns
add
pop
repnz
and
lea
jmp
pop
shrb
mov
mov
imul
sub
mov
stos
jecxz
dec
sar
push
mov
popf
lret
push
push
jge
insl
mov
hlt
cmp
or
jb
ficomps
inc
add
sbb
jl
leave
or
inc
add
dec
call
sbb
and
add
mov
mov
paddb
inc
rclb
insl
mov
inc
push
ds
shll
fsubrl
add
adc
adc
popf
xchg
lock
test
jge
cmp
mov
rdtsc
in
cmp
clc
movsl
out
imul
lret
call
scas
mov
mov
lahf
fadd
lds
test
add
and
mov
jns
pushf
adc
orb
stos
shll
aam
push
lret
repz
xchg
into
negl
sub
test
out
sub
or
or
lock
add
pushl
enter
sahf
out
aad
pushaw
mov
mov
iret
sbb
jge
dec
and
push
dec
and
int3
bnd
insl
sub
lret
repz
pop
sub
outsb
fildll
xchg
pop
inc
xor
mov
cmpsl
lods
xchg
or
loope,pt
dec
rol
sbb
sti
outsl
mov
xor
sub
dec
mov
cmc
sbb
add
and
test
dec
outsb
xor
js
xchg
enter
rdtsc
sbb
cltd
hlt
idivl
fdivrl
ja
cmp
aad
or
mov
pusha
fs
mov
daa
je
push
sbb
mov
rsqrtps
mov
mov
bound
test
jge
push
aas
insb
pop
imul
dec
adc
or
aam
dec
popaw
bound
scas
sub
leave
movsb
inc
pushf
xchg
les
cmpl
fnstsw
jle
ficompl
add
in
outsl
mov
pop
stos
dec
dec
or
in
loope
push
std
cmp
add
roll
pushf
jle
pop
or
push
push
repnz
rorb
mov
cld
cmp
add
jae
sub
push
nop
cld
clc
insl
mov
pop
inc
push
stc
cmp
into
mov
adc
or
and
mov
loope
xchg
pop
add
daa
sbb
test
push
xchg
cli
jp
cmp
jg,pt
push
add
out
int3
cmp
cwtl
arpl
xor
jb
and
inc
idivb
mov
pop
mov
mov
lahf
and
cwtl
sbb
inc
mov
pusha
mov
xchg
pop
iret
adc
rcrb
lods
test
clc
pop
cld
adc
pushf
mov
sbb
xor
pop
jbe
es
push
arpl
xor
pop
mov
inc
test
cs
insl
fs
jmp
int
nop
pop
push
rcrb
sbb
dec
or
outsl
loopne
pop
cltd
sub
pop
sbb
mov
jp
inc
cmpb
das
xchg
dec
pop
out
lret
push
icebp
mov
push
jp
and
push
and
repz
sub
dec
test
xchg
test
call
mov
sub
imul
adc
sbb
js
aam
sub
or
cli
inc
leave
push
xchg
shl
pop
mov
aas
inc
pusha
cmpsl
and
xchg
lahf
fists
push
testb
loop
mov
jge
lock
fwait
hlt
sbb
adc
jmp
jns
add
test
mov
inc
sbb
fisttps
sbb
add
fs
in
mov
ds
stos
push
insb
sub
out
sub
sbb
loop
lret
dec
clc
dec
inc
popa
hlt
ss
vpsravd
push
negl
cmc
jecxz
nop
fwait
jae
push
in
cmp
sub
adc
sub
mov
adc
aas
add
test
jno
gs
sbb
shl
sbb
adc
and
adc
jmp
les
and
in
and
cmp
push
lea
cmp
jg
mov
lds
xor
sarl
repz
ja
gs
sbb
scas
jns
popa
jae
mov
sub
stc
aas
jmp
mov
push
ret
test
inc
push
in
adc
fbstp
sbb
xchg
adc
sub
jg
fnstsw
or
shrb
pop
pop
jp
addr16
hlt
lods
mov
data16
pop
divb
popl
mov
rclb
add
or
enter
and
sub
lcall
movsl
inc
das
sbbl
jl
adc
cmp
popa
jmp
xchg
fstpl
mov
mov
ss
or
arpl
nop
loop
adc
repz
aad
jp
sahf
loope
hlt
xor
pop
cmp
push
cmc
data16
cmpsb
jg
inc
jg
insb
pop
adc
xchg
loope
inc
in
data16
and
in
pop
cmp
fildll
psubsb
jmp
sarb
cld
mov
mov
push
or
repnz
ja
jae
lret
mov
ret
repnz
sti
stos
loop
rorl
fldl
je
test
mov
mov
and
rcrb
jp
jnp
stos
mov
jbe
test
jge
and
mov
sbb
lret
jecxz
sub
cltd
and
adc
outsb
aad
add
fwait
add
addb
stc
scas
push
mov
lahf
push
aas
push
mov
mov
cmp
bnd
adcl
or
adcb
shlb
imul
inc
xor
jle
push
jne
jb
cltd
test
arpl
lock
inc
sets
adcb
mov
ret
insb
in
lods
das
jns
cmpsb
pop
ffreep
cmp
xchg
cmp
inc
xchg
push
shll
bound
or
ljmp
pop
pop
pop
stos
lock
stos
cwtl
call
xor
test
rep
out
test
lea
in
xchg
xchg
xlat
outsb
mov
jl
shl
arpl
stos
adc
lahf
rolb
jns
xchg
sub
icebp
xlat
mov
jg
or
jg
mov
ret
into
ljmp
push
xor
bound
bound
in
loop
xor
jo
testb
mov
outsl
dec
sbb
mov
sbb
or
lcall
test
pop
mov
xchg
lret
mov
pop
adc
add
push
pop
add
fdivr
in
jnp
mov
sbb
mov
lock
pop
xor
cli
dec
push
data16
jb
mov
fadd
sbbl
adc
xor
push
push
pushf
inc
cmp
cs
data16
adc
pop
in
gs
add
ljmp
nop
loop
aas
xor
sbb
mov
mov
loope
aaa
sti
inc
dec
ja
pop
popa
in
or
lods
push
insl
push
and
inc
outsl
adc
je
sbb
add
ret
mov
cmp
mov
out
aam
adc
sub
mov
mov
mov
push
fldenv
sti
test
pop
sub
push
sbb
mov
lcall
scas
jbe
stc
adc
pop
pop
in
lods
dec
add
adc
les
mov
int3
mov
inc
push
rcl
mov
insb
xlat
mov
fsubl
aas
mov
inc
add
dec
in
sbb
clc
rclb
sbb
jo
stc
mov
mov
cmp
pop
lret
repnz
icebp
mull
add
fildl
push
push
xchg
lcall
js
mov
lahf
mov
int3
xor
inc
cmp
in
sbb
fwait
shl
cmpsb
daa
sbb
mov
mov
adc
pop
mov
mov
inc
loope
out
push
gs
inc
aad
outsb
inc
and
call
dec
push
cmp
sub
das
sbb
jg
lahf
movsb
in
out
int
dec
cmpsb
add
and
roll
jo
cmp
inc
addr16
ret
fimuls
add
iret
or
push
jne
xchg
xor
inc
ds
inc
in
xor
scas
loopne
mov
es
mov
push
sbb
inc
mov
sub
shll
insb
jl
push
sub
shrl
jmp
ret
sbb
add
inc
dec
ret
mov
out
pop
xor
ss
inc
add
jg
and
cltd
pop
mov
andl
int3
push
cmp
or
fneni(8087
jl
jno
xor
sbb
xchg
xorl
jo
jne
leave
mov
or
fcoms
sub
mov
loope
in
add
jne
and
push
call
push
dec
xor
jbe
loopne
ljmp
adc
add
test
mov
stos
cmc
jg
popa
es
out
and
sub
mov
mov
mov
cwtl
sahf
repz
mov
push
shrb
mov
nop
stc
int
mov
mov
lcall
mov
push
sarb
adc
sbb
test
push
lret
adc
xor
js
rorb
notl
mov
in
filds
lds
jle
nop
stos
or
xchg
sbb
sbb
das
nop
add
fsubrl
aam
stc
movsl
dec
shll
adc
jno
mov
jmp
mov
popf
out
ficompl
and
xchg
pop
in
cli
sub
adc
js
xor
es
std
dec
in
cmp
stos
mov
pop
in
in
pop
lods
fwait
mov
jno
xor
xor
add
cld
andb
rol
inc
cmc
mov
adc
mov
fwait
aam
xor
cs
jg
or
roll
rorb
xor
xchg
jmp
push
add
pop
cmpsl
mov
xorl
cmpsl
leave
xchg
pop
rcrl
dec
mov
mov
icebp
xor
cmpsb
scas
mov
and
dec
cmpsb
inc
icebp
cmp
cld
insb
test
jp
push
pop
add
inc
cmp
shll
data16
adc
insl
add
cmp
mov
shlb
inc
pop
mov
dec
enter
scas
movsl
imul
pop
jo
pop
out
jp
leave
adc
xchg
les
mov
js
stos
gs
adcb
and
dec
das
leave
das
in
dec
pop
out
test
sti
pop
mov
lea
sub
dec
mov
shrb
add
push
pop
fistpl
lret
push
outsl
ja
dec
and
push
addr16
sub
movsl
ret
aas
sub
add
xchg
jno
rolb
or
push
fmuls
in
mov
notl
mov
std
aad
mov
mov
cmp
push
cmp
fsubrp
lcall
fwait
into
in
push
mov
ret
and
mov
add
pop
mov
jae
pop
pop
cwtl
cmp
sbb
jo
adc
mov
or
mov
stc
lock
in
sahf
testl
repnz
subl
insl
insl
jne
sbb
ja
mov
or
mov
mov
adc
push
scas
cmpsb
into
into
popf
pop
aas
xor
inc
xlat
mov
jae
xchg
repnz
ja
inc
notl
rcrb
test
out
fdivrp
jo
pusha
enter
aam
incl
inc
jmp
cmp
aam
fbld
fsubrs
rclb
les
lret
or
and
adc
js
ljmp
mov
bound
mov
push
movsl
outsb
mov
out
imulb
mov
out
xor
jno
jne
mov
pusha
loop
cmp
fistl
dec
pop
push
scas
cmp
cmc
sbb
add
inc
mov
lods
jle
add
sub
lret
je
push
aad
mov
call
jnp
inc
rorl
andb
std
icebp
fidivs
scas
out
push
mov
xchg
loopne
mov
jb
dec
repz
push
cmc
repz
lret
inc
das
xor
jno
and
repz
cmp
cmp
pop
jmp
movsl
test
popf
std
mov
mov
rcrb
popf
scas
pop
ret
xor
pop
mov
mov
dec
shll
inc
push
imul
pop
js
dec
dec
jl
and
sbb
inc
call
jno
lret
add
ret
sub
mov
aaa
dec
mov
and
sub
stc
jl
push
push
jae
push
xchg
out
push
movb
in
cmp
fimull
scas
and
sub
and
dec
test
jl
lods
dec
mov
cmpsl
bound
test
xchg
push
test
xor
push
out
clc
bound
adc
shll
jecxz
inc
pop
push
inc
jp
dec
fsts
dec
push
mov
cmc
xchg
cld
data16
mov
sub
and
mov
jg
pop
dec
iret
or
mov
pop
jge
aad
jnp
mov
add
rorl
pushl
mov
dec
mov
out
mov
mov
mov
mov
ret
xor
adc
test
inc
stos
cwtl
push
xorb
jmp
cwtl
movmskps
fldenv
sti
mov
xor
sbb
das
or
cld
cld
pop
mov
mov
into
jge
scas
inc
int3
cmp
daa
ret
out
xor
pop
cmp
movsb
subl
nop
push
fists
xchg
push
cs
jmp
loop
inc
mov
mov
mov
mov
push
ret
gs
addb
ds
fsubr
cld
repnz
sbb
je
imul
test
push
cmp
inc
aam
mov
in
pop
lea
cmp
mov
repnz
lock
mov
jecxz
push
inc
bound
aas
fwait
movsl
jg
jnp
out
adc
test
dec
xor
fists
dec
leave
mulb
cmp
ret
mov
or
and
and
push
xchg
gs
lods
dec
sti
psllq
enter
dec
cmpsb
mov
mov
jecxz
lods
or
cmpsl
incl
aam
dec
cwtl
and
lahf
jmp
dec
sti
push
ret
adc
mov
pop
lret
pop
or
in
dec
cltd
jns
mov
out
fs
stos
push
xchg
daa
push
sub
lods
xchg
in
jo
dec
sub
lcall
adc
sbb
pushf
push
ret
jecxz
fs
push
cwtl
dec
adc
aad
hlt
sbb
push
cs
push
mov
dec
ds
stc
pop
arpl
cld
enter
sbb
mov
cmpb
mov
pusha
aam
mov
xchg
push
shr
jl
movsl
inc
iret
or
xor
pop
xchg
inc
lcall
loopne
cmpsb
adc
pop
sarb
ljmp
jno
imul
sub
outsl
in
aas
dec
cmp
nop
xor
stos
adc
jecxz
aaa
push
sbb
dec
mov
jmp
mov
fcmovne
jno
jmp
push
jmp
imul
push
jno
jno
stos
jmp
lret
and
leave
shll
pop
aas
outsb
pop
bnd
mov
mov
mov
arpl
movsl
loop
push
pusha
lods
shrb
adc
push
mov
hlt
mul
mov
xchg
jne
lds
mov
jno
add
ljmp
cmp
in
jnp
fldl
lret
out
in
lock
jae
fistpl
enter
cli
mov
cmp
add
dec
push
push
xor
xor
mov
js
push
cmp
repz
inc
sbb
outsb
or
xor
and
ss
jbe
mov
sahf
push
sahf
scas
psrlq
lea
sub
nop
pop
adc
jle
ds
xor
js
cli
xchg
mov
xchg
jns
and
popf
inc
xor
test
sbb
pusha
mov
and
push
jae
or
jo
pop
sbb
pushf
sti
das
andl
and
and
daa
pop
jmp
mov
push
sub
sub
sbb
ret
and
xchg
shl
lret
aad
push
mov
loope
push
and
push
repz
clc
xchg
or
aam
mov
mov
in
mov
fists
adc
sbbb
aam
xorb
jo
sub
pusha
push
lds
sbb
daa
bound
inc
adc
ljmp
push
lods
gs
leave
adcb
inc
or
jo
xchg
out
dec
movb
cmpsb
pushf
dec
stc
cmp
sub
imul
xchg
addr16
insb
xchg
test
insl
xchg
loopne
roll
ss
pop
sqrtps
inc
fnstcw
iret
test
lock
andl
out
sub
ret
jmp
loop
ja
sub
mov
jmp
xchg
xchg
mov
test
or
inc
outsb
and
rcrb
popf
and
aaa
mov
mov
inc
or
addb
lods
cli
mov
bnd
and
flds
fadd
adc
dec
and
mov
scas
testl
mov
or
push
test
mov
sahf
mov
int3
lahf
es
leave
dec
addl
jns
das
dec
test
push
lods
loope
lret
add
sarb
shll
out
data16
xchg
mov
out
ror
js
pop
lcall
inc
repnz
mulb
cmc
mov
das
lea
bound
or
test
int
fsubrl
xor
in
push
fdivrl
icebp
xchg
std
inc
dec
inc
cwtl
adc
mov
lret
vshufpd
scas
and
lds
jl
mov
popf
push
aam
sti
mov
dec
inc
imul
jmp
xor
std
dec
inc
push
inc
popf
movsl
jo
addr16
jmp
mov
jnp
sub
mov
das
in
dec
fisttpll
jo
xchg
and
or
xor
or
mov
js
pop
ds
or
adc
mov
mov
inc
sbb
sbb
mov
mov
or
cs
adc
push
mov
sub
inc
sbb
hlt
rorb
jle
adc
fstps
fs
xchg
push
xchg
dec
xchg
imul
inc
js
arpl
hlt
xchg
push
mov
xchg
ffree
test
test
add
pop
stc
dec
adc
mov
std
push
aad
push
dec
ret
dec
fldenv
scas
xlat
daa
mov
sahf
inc
pop
jl
jno
sbb
addr16
out
mov
xchg
jb
movzbl
hlt
test
dec
pop
ja
xor
cmp
mov
icebp
mov
mov
xchg
xor
jl
jb
stos
pop
aaa
mov
ret
jnp
jp
push
les
mov
mov
dec
dec
mov
or
xchg
inc
mov
je
in
aaa
out
jge
adc
jmp
xchg
mov
nop
enter
jno
mov
pushf
push
ja
pop
mov
call
mov
mov
aam
sahf
cltd
mov
pop
std
mov
insb
jb
iret
jne
mov
jmp
subl
addb
push
sbb
cmpsb
xlat
or
orl
lods
pop
dec
das
ffree
enter
pop
fistl
repz
outsb
mov
scas
arpl
inc
lea
adc
sarb
lret
pop
jle
les
or
fistl
pop
bound
loope
shlb
sub
rcl
adc
and
jge
ds
fdivs
adc
adc
pushf
lds
cmp
and
aas
and
cmpsl
into
and
arpl
not
sbb
xor
mov
mov
mov
adc
jae
inc
lcall
aas
xor
stos
mov
and
xchg
xor
jle
jne
outsl
pop
shl
inc
adcb
mov
int3
cmc
cmp
out
jecxz
pop
or
mov
cltd
es
stos
daa
inc
ss
push
or
jne
loop
rolb
jecxz
mov
mov
jg
popf
jl
xor
mov
jns
fwait
jnp
test
out
pop
mov
mov
add
sbb
orb
aam
lock
sub
mov
jne
adc
pop
xchg
mov
dec
lcall
inc
jg
cmp
pop
xor
enter
lret
lahf
cmp
cs
jno
mov
cld
jne
add
fwait
push
adc
pop
dec
ds
lea
mov
pop
push
sub
mov
pop
jo
push
popa
cli
xor
pop
lcall
sarl
repnz
adc
out
add
movswl
test
movsb
lcall
cld
adc
std
lods
push
fsub
mov
mov
jns
or
nop
cs
out
andl
fmull
subb
mov
jmp
adc
cmc
inc
hlt
sbb
xchg
lods
jo
pusha
dec
mov
adc
decb
sub
cwtl
dec
call
xor
sahf
xchg
jne
decb
js
mov
andb
fs
sbb
aad
popl
xchg
add
mov
mov
fists
add
sbb
gs
nop
lods
add
inc
insl
sti
and
mov
mov
lock
sub
lcall
call
jne
ss
cmp
cwtl
subb
aam
insl
nop
mov
sub
addr16
adc
xchg
imul
jo
loope
bnd
aas
js
stos
or
inc
and
pop
sub
sbb
repnz
cmpb
sub
imul
fucomi
mov
mov
sbb
push
mov
sub
test
xor
outsl
loop
mov
lea
stc
xorb
in
stos
push
xchg
push
jno
insb
mov
cmpsl
jb
notb
out
mov
ss
sbb
imull
mov
sub
mov
sti
cmp
cld
dec
cli
pop
pop
jl
into
stos
lds
cmpsl
inc
sub
pop
movsl
cmp
fimuls
sub
imul
int
test
dec
mov
repnz
bound
clc
lods
mov
and
cli
cs
sub
nop
mov
leave
or
xchg
sub
mov
xchg
inc
push
inc
int
nop
jle
sub
std
mov
mov
cwtl
add
aas
repnz
lods
cmp
cmp
fs
sti
rcrb
std
and
jle
cwtl
adc
dec
out
xlat
cwtl
outsb
mull
ficoms
out
fcmovne
cmpsl
in
in
or
jge
xor
lea
aam
mov
insb
aad
sbb
add
or
mov
or
sub
push
test
xchg
push
sbb
add
xor
xor
dec
imul
insl
inc
xor
notb
sub
adc
mov
sahf
mov
mov
repz
nop
mov
sahf
xor
insl
test
lds
popf
das
xor
dec
sbb
xor
push
dec
addb
in
cmpb
push
jae
cmpsl
sub
lds
or
insl
out
leave
dec
cmpl
mov
negb
sarb
shlb
test
das
out
ret
xor
jl
dec
dec
int
xchg
xor
mov
pusha
scas
cli
call
adc
cmp
dec
scas
mov
dec
bound
xchg
into
arpl
fiadds
sub
iret
mov
fidivrl
dec
mov
mov
iret
data16
clc
and
pop
mov
lea
add
int3
inc
mov
test
mov
loope
jecxz
xchg
aam
dec
sarb
cmp
gs
aaa
xchg
out
sub
dec
xchg
and
lcall
cmc
test
dec
mov
lods
push
add
clc
scas
xchg
mov
das
sahf
mov
xchg
ljmp
scas
aas
xchg
jae
loop
nop
sbb
and
outsb
sbb
shll
mulb
mov
das
leave
add
jo
cmp
fcoml
add
popa
fwait
jmp
insb
sub
shl
cs
jecxz
mov
ja
add
adc
call
mov
inc
pop
and
inc
mov
inc
jp
stc
loopne
inc
push
xchg
lods
sbb
stos
popa
jo
cmp
in
and
add
flds
mov
inc
mov
dec
movsl
sub
xchg
xchg
sbb
xchg
int
bound
or
xor
mov
fadd
out
mov
xlat
inc
cli
icebp
sub
pop
push
mov
test
addr16
push
in
out
and
push
or
push
and
mov
xlat
mov
rcl
push
cli
je
icebp
mov
sub
into
out
adc
ret
pushf
xor
lret
das
adc
jmp
add
fdivrl
stos
adc
pop
sub
mov
sbb
call
cmpsl
aas
out
inc
mov
scas
mov
fcoml
lahf
pop
or
mov
jecxz
ret
or
push
add
sub
push
movsl
dec
jmp
sbb
lea
and
cmp
xchg
fcoms
dec
je
cmp
or
push
mov
cwtl
pop
out
sti
or
sub
mov
stos
das
mov
in
subb
loop
cmp
jl
jbe
je
or
sbb
inc
fildll
ss
or
orl
jg
jnp
adc
out
mov
mov
cmc
jl
shr
dec
js
ja
cwtl
testb
sub
js
movsl
mov
sbb
dec
outsl
or
aam
push
cbtw
ret
inc
repz
testb
push
loope
sbb
fidivl
fnstenv
mov
sub
popa
add
xor
mov
cmp
pop
nop
imul
or
arpl
cmp
jecxz
stos
iret
test
cmp
cmp
and
out
push
test
pop
ror
scas
es
popf
xchg
insl
pusha
lret
and
test
movsw
gs
push
out
push
or
mov
mov
cmp
icebp
xchg
xor
int3
jno
inc
mov
adc
leave
pop
xchg
push
fsub
pusha
loop
fs
ljmp
xchg
mov
jge
and
push
sub
dec
mov
sub
mov
scas
xchg
adc
insl
xchg
adc
ret
sbb
xor
sub
jo
mov
lods
iret
into
xchg
xchg
cmc
mov
and
mov
rcll
add
movsl
and
jg
sbb
push
add
test
mov
mov
mov
pop
nop
aam
dec
insb
mov
xchg
sbb
ret
psllq
cmp
imul
mov
add
jge
mov
jnp
cli
rcrl
sub
jb
pop
or
xor
dec
inc
gs
gs
sub
inc
out
cld
fcoms
jmp
stc
xor
loop
enter
pop
int
dec
pop
inc
inc
lcall
ret
scas
add
mov
push
rorl
out
sub
dec
daa
jns
ljmp
cli
lret
lods
lea
cmp
andl
push
push
dec
addl
test
negl
mov
push
fucomp
imulb
mov
xor
xchg
mov
and
pop
daa
adc
enter
das
dec
cmp
je
lods
shlb
xchg
adc
jge
scas
and
lds
das
addr16
pop
es
repz
jo
xor
cmp
cmp
cs
divb
dec
fwait
cmc
push
fnsave
adc
xlat
mov
mov
push
stc
mov
jnp
sahf
dec
stc
xchg
hlt
or
xchg
jbe
jae
aaa
movsb
jmp
out
pop
mov
push
mov
fisttpll
sbb
dec
das
fincstp
aam
adc
dec
push
pop
sub
rorb
dec
arpl
push
push
or
push
push
mov
inc
shlb
sbb
call
outsl
cmp
mov
neg
mov
cmpsb
pusha
rcll
jp
aam
les
jne
enter
mov
mov
lahf
lret
out
adc
inc
jle
insb
jb
push
sahf
fwait
jle
jno
test
dec
pop
fidivrs
daa
popf
cmpb
shl
and
xchg
adc
fnstcw
xchg
push
aas
or
fistps
mov
xchg
mov
mov
leave
adc
or
clc
fs
xor
jmp
sbb
xchg
daa
xor
mov
sub
lcall
mov
or
push
fs
and
sub
nop
stos
stc
mov
lret
jge
jg
xchg
mov
xor
call
jae
shlb
xchg
or
mov
fbstp
and
mov
insl
xor
leave
ljmp
xchg
aas
cmpsb
lcall
adc
jno
xchg
pushf
pop
sahf
imul
rcrl
out
int3
imul
popf
in
lcall
jbe
shrb
lcall
push
hlt
stos
mov
fwait
lods
push
sub
pop
frstor
js
cwtl
dec
mov
xchg
inc
rorl
lcall
sbb
mov
or
pop
lds
lret
bound
mov
xor
or
pop
daa
call
jl
add
push
loopne
jnp
ss
pop
mov
pushf
stos
sti
ret
sub
orb
sbb
jae
mov
cltd
sbb
popf
adc
or
dec
push
inc
out
aam
ds
jge
mov
nop
mov
push
adc
ret
cmpsb
std
cmpsl
sub
test
ret
fadds
andb
push
xor
in
cmp
lret
mov
mov
cmp
inc
ja
jo
mov
fnstsw
pop
repz
xorb
mov
test
in
sti
test
rcll
mov
leave
inc
ror
jno
push
scas
dec
out
inc
dec
lret
fdivrl
shll
pop
rorl
xor
jmp
hlt
test
popf
imul
add
std
pop
dec
push
cmc
dec
cli
dec
dec
cmp
dec
mov
mov
push
sbb
hlt
fwait
mov
sbb
fimuls
int
mov
sub
push
daa
loop
fildl
int3
pop
jmp
sub
test
test
aam
sub
shrl
jo
repz
jo
movsl
and
outsl
pop
or
mov
or
inc
hlt
sub
inc
lret
loop
aam
arpl
inc
fisubrl
mov
pop
mov
das
pop
jl
cmc
push
or
xor
mov
je
ljmp
das
pop
sbb
dec
leave
fsubr
push
mov
enter
xchg
stos
int3
pop
xor
xor
std
imul
test
stos
fildll
jecxz
pop
pop
loope
or
daa
adc
add
cmp
push
pop
cmp
test
add
mov
cmpps
loope
test
xorl
mov
mov
cwtl
xchg
or
out
cmc
aas
loope
pop
bound
repz
les
fiadds
call
jnp
cmp
add
push
dec
cmp
xor
xchg
mov
out
or
insb
scas
daa
push
sub
cltd
fwait
jae
mov
pop
stos
loopne
inc
insb
lret
in
fidivrs
jmp
pusha
ror
and
cltd
jge
mov
ja
xchg
aam
iret
ret
inc
mov
pop
add
push
inc
lcall
ret
push
lods
xchg
xor
mov
xor
cmp
test
and
push
sbb
mov
or
adc
inc
mov
stc
add
cmpsb
loope
shrl
mov
adc
sti
mov
mov
cmc
ret
lods
das
in
xchg
fwait
fwait
mov
jmp
aas
stc
push
insl
xchg
iret
sbb
sub
outsl
jge
and
mov
add
repz
and
std
cmp
mov
lcall
lea
cmp
adc
pop
fildl
cmpsl
sub
adc
repz
dec
das
mov
pop
fsubrl
cltd
mov
xchg
pop
mov
push
push
adc
push
iret
movsl
call
mov
fwait
cwtl
scas
jl
out
jbe
xor
jb
loop
in
scas
jns
int
push
and
nop
and
call
pushf
cwtl
mov
adc
lahf
idiv
arpl
push
inc
ds
xor
cmp
mov
sbb
mov
fwait
mov
out
out
mov
add
fld
jp
fcmovbe
and
mov
push
aaa
sbb
mov
insl
std
jge
sbb
pop
jg
roll
inc
std
adc
jb
shll
jae
repz
jo
je
fildll
sahf
push
test
mov
xchg
sbb
sti
pop
insb
cmp
out
sahf
inc
clc
cmp
push
mov
push
icebp
outsb
xlat
jno
fisubl
orl
mov
loopne
dec
fcmovnu
or
dec
lcall
inc
test
and
sbb
push
ds
xor
lds
cld
sbb
push
or
rcrl
jg
xchg
sbb
cmp
cmpsb
add
add
inc
dec
xchg
adc
loop
sbb
xor
cld
cmp
inc
and
cltd
mov
jnp
jmp
outsb
shlb
push
sub
inc
repnz
dec
mov
dec
cmp
mov
stos
xchg
ret
xchg
int
sbb
out
pop
insb
cmc
mov
xlat
cmp
test
xchg
jno
sub
pop
lea
mov
fs
sub
xchg
mov
lcall
loop
mov
loop
inc
sbb
fwait
test
mov
imul
lods
inc
fdivr
inc
mov
lea
add
sub
mov
jbe
ret
push
sub
mov
mov
xor
jp
push
cwtl
sbb
cmp
loope
add
dec
and
cmp
jbe
in
push
cmpsb
push
adc
xchg
add
mov
xor
in
mov
fidivl
push
daa
aaa
push
xlat
add
shr
xchg
inc
rclb
shll
mov
fists
lcall
jbe
cmpsl
lret
in
pop
pop
pop
xor
add
push
adc
mov
push
mov
call
in
cmpl
xor
shll
sbbl
loope
gs
dec
inc
int3
imul
mov
int
inc
aad
xchg
adc
jne
or
dec
cmc
push
fldl
pop
add
daa
jle
sub
je
arpl
jmp
mov
jp
adc
dec
pusha
mov
jl
dec
scas
xor
add
jne
cmp
mov
push
add
xor
stos
mov
mov
pop
adc
add
cmpsb
jmp
xchg
and
dec
xchg
shlb
rcrb
sub
bound
fstpt
jno
jmp
int3
fxch
rcrb
fs
and
or
or
sahf
sbb
and
add
aad
sbb
ret
jl
pop
push
aaa
inc
and
sbb
dec
sbb
sbb
cld
adc
mov
xor
dec
add
pop
fs
pop
mov
mov
outsb
dec
mov
sahf
clc
fidivrl
insb
test
inc
push
movsl
push
out
inc
dec
xchg
pop
or
cmc
sbb
ret
rolb
and
mov
push
mov
xchg
dec
stos
or
cltd
or
mov
xchg
fidivs
inc
push
fadds
mov
cmpsb
mov
jmp
add
das
jne
cvtps2pd
pop
leave
inc
xor
and
inc
or
shrl
mov
int3
fs
addl
dec
lahf
push
and
pop
xchg
in
inc
push
fnstsw
or
or
insl
pop
adc
jecxz
ret
push
mov
pop
mov
jecxz
jp
cmpsb
in
or
xchg
mov
jne
jnp
shl
push
dec
and
and
out
dec
dec
jno
xlat
hlt
into
jge
popa
dec
js
lahf
or
je
cs
daa
push
pushf
loop
sub
cmp
cli
mov
pusha
and
cld
inc
mov
out
xchg
xchg
sar
jl
adc
and
xchg
mov
stos
push
adc
jg
cwtl
movsb
push
and
mov
dec
and
xchg
xor
sbb
lret
test
pop
je
mov
repnz
pop
and
jb
fnstcw
inc
jecxz
arpl
jns
iret
cmp
mov
dec
sbb
sub
sub
insb
movsb
mov
xchg
jp
xor
jecxz
arpl
stos
xchg
jb
roll
pop
add
jne
xor
out
pop
outsl
sub
loope
test
mov
push
sub
dec
loop
xchg
notb
pushf
pop
andl
mov
and
outsb
stc
movl
xchg
push
push
or
push
lret
fmuls
dec
aas
sub
sti
subb
jp
ret
in
popa
lea
fs
mov
sbb
cmp
jmp
jo
stc
in
inc
cltd
jne
mov
bound
or
xchg
pop
aam
xor
push
or
hlt
and
sahf
mov
stos
push
sbb
or
cltd
je
cmpl
imul
add
mov
xchg
jmp
fdivrl
or
pushf
adc
or
das
loope
mov
pop
loop
es
fs
cmc
jo
add
or
adc
test
push
push
lea
mov
fiadds
test
aad
aad
mov
fwait
jnp
rcrl
pop
adcb
mov
pop
xor
jge
ljmp
dec
mov
jns
lods
pop
gs
push
pop
sub
pop
pop
inc
loopne
into
or
out
inc
pop
imul
movsb
inc
adc
cli
lret
scas
fldenv
fstpt
inc
cld
push
adc
inc
popf
test
sbb
cwtl
xchg
lcall
xchg
scas
ret
repnz
cs
in
mov
pop
bound
mov
int
cltd
inc
inc
stc
push
scas
rcl
lds
push
sbb
call
ja
addr16
mov
push
inc
inc
ret
xchg
lahf
add
stc
adc
nop
adcl
dec
push
jno
jp
add
pop
mov
push
xchg
fdivl
or
jl
mov
mov
mov
das
cmp
jle
jo
sarb
xchg
call
fmul
sbb
call
add
mov
jo
sbb
in
xchg
movsb
sub
xor
insb
pusha
js
pusha
dec
adc
je
cmp
pop
out
xor
lea
mov
jb
lds
hlt
push
in
lods
in
clc
enter
adc
shlb
mov
xchg
dec
add
sbb
push
xorl
adc
ss
sub
dec
pop
or
jns
push
rolb
pop
inc
fstps
lahf
into
lret
aad
fimuls
xchg
nop
dec
loopne
stos
add
addr16
in
fdivl
xchg
rorb
mov
dec
lret
fmuls
mov
mov
pop
sbb
jo
jno
push
popl
repz
jbe
sti
mov
lds
sbb
lods
fisttpll
dec
dec
xchg
lret
mov
hlt
jg
pop
leave
sub
cmp
add
dec
xor
dec
lods
cltd
scas
mov
mov
sub
sbb
in
jbe
sub
imul
js
cli
pop
ja
test
mov
stos
jno
pop
ret
xchg
in
dec
cmp
ds
pop
clc
adc
ftst
and
xor
and
rol
test
into
lea
or
or
scas
sbb
or
scas
sub
pop
arpl
adc
cmpb
inc
pusha
or
test
mov
iret
xor
xchg
leave
popa
fsub
pushfw
psubw
add
daa
inc
sub
outsb
or
jmp
xchg
add
mov
pop
imul
mov
aaa
fs
pop
push
lock
insl
xchg
jnp
icebp
les
cs
int3
repnz
punpcklbw
insb
mov
lock
enter
push
int
push
jb
pop
jae
mov
dec
insb
jle
fwait
push
xor
test
push
lods
out
jle
call
adc
mov
fldcw
or
iret
loope
pusha
xor
cld
and
push
mov
pop
xor
insb
pop
xchg
sti
jae
sub
mov
clc
sub
sub
fmull
hlt
sub
mov
das
add
mov
loope
rclb
mov
jno
inc
add
cmpsl
xchg
pop
ja
add
xlat
ret
cmpl
stos
sub
aam
addr16
inc
lds
neg
and
push
lret
mov
mov
stos
xorl
inc
inc
test
aad
mov
loop
ljmp
in
push
sbb
fmul
movsb
stc
addr16
cmp
pop
es
repz
xchg
arpl
inc
out
xor
je
ret
jnp,pn
mov
or
jg
js
ljmp
xchg
call
rcll
adc
movsl
mov
out
sahf
add
arpl
ljmp
sbb
outsl
pop
in
flds
cmpl
ret
pop
fsubrl
ds
ds
pushf
mov
xor
xchg
flds
cmp
jo
adc
lds
push
xor
int3
stos
dec
xchg
fwait
pop
pop
stos
mov
inc
pop
stos
xchg
ss
jecxz
icebp
jae
jbe
in
mov
pop
xor
mov
popa
mov
sub
pop
ljmp
sbb
xor
out
dec
in
inc
stc
jne
or
pop
scas
insl
sbb
repz
sbb
sbb
push
pusha
bound
pop
or
in
and
xlat
rol
sub
scas
and
stc
dec
out
jmp
pop
xchg
aad
clc
xchg
mov
leave
fldt
int
push
loope
pop
fwait
cwtl
push
inc
fstl
adc
cmp
scas
and
mov
cltd
sub
xor
cs
loope
repz
dec
ret
loopne
xchg
test
push
push
mov
fsubrl
xor
push
inc
test
test
mov
inc
int
rcl
xor
pop
fldt
test
dec
sub
in
jge
popf
push
pop
add
shrb
mov
sub
xlat
pop
adc
pop
clc
cli
arpl
jle
test
clc
movsl
gs
jne
cmp
inc
jae
repz
je
push
subb
fsub
mov
cmp
sbb
sbb
xchg
cmp
xor
xchg
xlat
adc
cli
xchg
aaa
fidivrl
jno
mov
sti
sbb
nop
aaa
jb
mov
popa
hlt
jne
jbe
mov
inc
or
mulb
pop
es
cmp
shll
sbb
mov
lcall
push
adc
aad
das
inc
iret
sarb
js
insb
mov
clts
xlat
int
cmp
and
adc
mov
sub
push
xor
pop
xor
xorb
pop
or
cld
in
scas
call
add
mov
sbb
int
inc
popl
push
and
int
cltd
ds
adc
mov
or
mov
mov
hlt
sarb
mov
mov
inc
adc
pop
jbe
movsl
jns
or
sbb
cmpsb
leave
lahf
les
sub
cmp
and
sub
or
xchg
pop
push
jns
in
or
cmp
jmp
je
lret
ja
lea
cmp
adc
clc
test
xchg
bound
fs
leave
mov
xor
adc
cs
dec
jo
mov
xchg
leave
pop
int
sub
adc
movsb
or
into
mov
insb
or
mov
lret
pushf
bound
test
rcr
inc
movsl
movsl
arpl
mov
lods
rorb
xchg
pop
inc
mov
sub
int
bound
cmpsl
jno
mov
xchg
push
loop
jnp
push
repz
mov
jb
jae
push
jecxz
or
push
in
movsb
xchg
jo
pop
hlt
xchg
clc
jmp
pop
sbb
and
add
int
sbb
push
ljmp
mov
push
and
dec
sbb
add
and
ret
cmp
mov
inc
cmp
divb
pop
or
bound
inc
xor
or
adc
movsl
testl
test
xor
and
nop
mov
in
mov
dec
lea
xlat
cmp
icebp
stos
int
bound
mov
add
stos
or
mov
fildll
push
fnsave
mov
or
push
dec
mov
sahf
push
and
jmp
jmp
adc
mov
jl
in
push
add
inc
daa
sbb
shll
sbb
jns
mov
adc
lret
je
dec
xor
or
insb
out
jl
pop
subb
aad
jo
lcall
dec
cmp
movsl
jno
lahf
xorb
adc
lret
pop
fsts
xchg
dec
push
inc
test
pop
adc
pop
cmp
lret
fwait
sub
jp
or
shl
sahf
sbb
xor
fsubrl
cli
iret
sbbb
lcall
mov
test
sub
or
lcall
push
out
les
rcll
push
imul
pop
and
sub
rclb
sub
icebp
and
jg
mov
xchg
adc
in
pop
rcpps
adc
push
sub
mov
arpl
jae
sub
jg
pusha
stos
cmp
outsl
in
lock
or
into
rcrb
jno
jle
gs
lock
push
icebp
vpshab
hlt
mov
rol
xlat
mov
push
clc
sahf
in
and
mov
inc
sub
fistpl
jecxz
push
scas
xchg
cmp
aad
sbb
mov
test
shrl
test
pop
movsb
mov
fdivrl
loopne
in
cmp
pop
push
adc
adc
jae
adc
cmp
push
out
push
jbe
inc
push
mov
mov
mov
jle
pop
dec
loopne
arpl
ds
mov
pop
rol
mov
std
repz
test
pop
mov
aam
pop
jno
shlb
fldt
aad
or
stos
and
jbe
adc
dec
mov
dec
mov
mov
pop
int
in
cmp
sti
mov
movsl
cwtl
cli
push
mov
and
cmc
push
ljmp
pop
loope
cltd
movsw
test
mov
pop
cltd
aam
push
adc
inc
stos
sbb
dec
sbb
inc
stos
jae
outsl
inc
das
rcrl
lods
jae
icebp
mov
inc
leave
pop
je
push
add
shll
push
dec
xchg
test
in
icebp
lock
xor
pop
sbb
mov
jp
je
xchg
sti
lods
ret
fs
xor
xchg
mov
xor
imul
ljmp
and
fs
inc
lds
test
xchg
xor
cmc
out
outsl
xor
mov
loop
pop
pop
cmc
inc
dec
fwait
sub
fwait
or
mov
xor
cli
mov
sub
inc
stos
pusha
js
mov
xchg
sub
inc
cmpsb
andl
in
imull
nop
xor
lret
nop
cs
in
imulb
das
dec
movsb
xchg
cmp
cmp
xchg
cld
jecxz
and
inc
add
xor
inc
add
fs
cs
push
mov
xlat
xchg
jne
loope
jne
xor
sub
jbe
xchg
pop
xchg
scas
orl
ljmp
pop
xor
push
dec
pop
mov
fwait
ret
fldenv
addl
and
adc
mov
aaa
mov
out
mov
inc
mov
or
loope
xor
pop
and
push
std
in
je
cmp
cmp
mov
or
sahf
mov
cmp
adcl
out
jecxz
push
adc
cmp
cld
mov
lcall
dec
ss
jne
add
mov
not
and
mov
ss
jne
pop
pop
push
cmpsl
jmp
sbb
mov
je
xor
or
mov
jmp
movb
cwtl
and
or
jl
adc
mov
push
and
test
fisttpll
mov
lcall
adc
jno
sub
pop
sbb
push
xchg
cli
out
nop
imul
mov
push
cmp
enter
sbb
cmpl
fcmove
mov
inc
insb
addr16
xchg
loopne
insb
mov
pop
mov
mov
stos
inc
jmp
mov
cmpsb
mov
inc
xchg
loopne
adc
adc
mov
rclb
sbb
fisubrs
push
inc
mov
arpl
scas
into
jecxz
jne
jle
stos
out
in
cltd
push
sub
push
insb
jp
or
sbb
dec
add
daa
aad
std
sbb
or
pushf
fwait
sbb
push
sbb
xor
cmp
cld
inc
mov
out
iret
xor
push
xor
jl
sbb
push
pop
add
lock
nop
lods
inc
cmp
bound
xorb
test
clc
dec
fnstenv
pusha
inc
cmp
ret
push
loop
rclb
xor
out
stos
cmpsl
add
sti
sti
fdivr
sti
dec
mov
cs
sarb
jle
sar
push
pushf
inc
mov
jae
icebp
in
and
lods
mov
out
int3
fldt
stos
or
push
negb
adc
and
loopne
in
int3
xor
jb
mov
or
adc
test
sub
cmc
das
fbstp
test
jb
or
stos
add
add
mov
enter
fdivrl
jp
imull
xor
mov
test
rcr
scas
and
push
xchg
xchg
sbb
mov
adc
cmp
das
aaa
mov
xchg
push
scas
lea
cmp
pop
lret
push
cmp
cmpl
enter
pop
xor
add
cmp
ja
and
xchg
inc
sbb
pusha
ds
dec
sbb
clc
rcl
xor
int3
and
and
jno
dec
outsb
ljmp
push
sub
sub
shlb
mov
loopne
add
xchg
dec
data16
int3
xchg
lds
sub
pop
clc
xor
gs
cmp
sbb
push
dec
mov
out
cmc
sahf
hlt
pop
cs
and
dec
sti
out
nop
sub
imulb
test
cmpsb
iret
pop
out
xchg
pop
fxch
ret
xchg
push
adc
adcb
mov
mov
sahf
cmpsl
xor
mov
loop
nop
xorl
push
dec
sbb
or
call
mov
inc
push
bound
cwtl
pop
mov
pop
xchg
hlt
lret
dec
out
cmp
push
nop
jg
cmpsb
addr16
xor
cmp
mov
jmp
stos
cmpsb
sarb
mov
jl
rorl
or
jle
fldt
inc
xor
inc
pop
hlt
or
fsubrs
ficoml
mov
loop
mov
lahf
and
rcll
fdivrl
adc
pop
mov
outsb
jge
testl
xor
and
rolb
out
scas
jns
sub
decb
dec
std
xchg
lods
sub
adcl
arpl
mov
xchg
mov
xlat
js
mov
mov
pop
xor
pop
cmc
popf
inc
scas
jo
xor
or
fimull
ret
mov
pop
and
mov
mov
mov
test
icebp
scas
out
aam
mov
data16
mov
jl
jge
mov
lea
pop
inc
cmp
adc
mov
sbb
cmp
inc
xchg
xor
push
repz
dec
xor
dec
push
aas
jmp
fsts
adc
mov
data16
mov
cli
std
hlt
dec
out
fsubl
pusha
inc
xor
je
mov
jo
push
dec
jne
pop
sub
leave
movsb
sub
xchg
mov
xchg
dec
fsubrl
lock
mov
sbb
lock
stos
test
popa
fidivrl
cmp
ljmp
xchg
jbe
jge
push
shl
aam
js
cmp
rol
data16
push
pop
fadd
add
repnz
into
stos
js
xor
outsl
pushf
mov
push
in
push
jns
xor
data16
lods
jp
sahf
movsb
mov
stos
cmp
xchg
xchg
inc
fstpl
fmuls
mov
out
and
push
arpl
insb
cmp
and
dec
ret
and
lret
and
cli
mov
xorb
iret
sbb
ret
fsubr
movsl
adc
push
nop
ficoml
inc
test
inc
push
in
or
cld
dec
push
cmpsb
test
dec
ljmp
xchg
lret
xchg
cmp
outsb
adc
arpl
shl
rorl
inc
sub
jmp
push
dec
jb
xchg
mov
pushf
xor
adc
xor
fwait
push
cmpb
jo
out
neg
test
mov
dec
mov
ret
add
jnp
cmpsl
jecxz
and
loope
add
notl
pop
test
inc
lock
and
xchg
or
lea
cmp
push
jae
jo
push
lcall
push
mov
xchg
stc
leave
loopne
addl
or
addr16
xchg
pop
mov
jno
jne
mov
cwtl
js
lahf
fld
push
adc
xchg
pushf
xchg
adc
jnp
iret
testl
pushf
repz
aas
call
cli
xor
scas
cmp
test
lea
push
xor
cmp
mov
pop
lahf
test
sbb
leave
push
inc
in
add
pop
pusha
mov
mov
adc
mov
rcrb
xor
out
jnp
jae
sti
repz
pusha
sar
dec
lods
xor
out
rolb
push
inc
es
cmp
test
adc
outsl
inc
sbb
push
jo,pn
jle
fistpll
aas
jo
inc
mov
pop
push
and
mov
movl
adc
test
dec
sbb
add
push
bound
cwtl
pop
push
test
ret
dec
mov
stos
cmc
sbb
xchg
fs
je
pop
pop
mov
or
bound
adc
push
ja
inc
xor
or
fsubrl
aaa
sub
mov
or
scas
fwait
sub
pop
mov
int3
push
imul
xchg
dec
scas
xor
hlt
and
hlt
aas
sbb
insl
sub
jne
add
jne
adc
mov
sub
jecxz
loopne
dec
push
into
xchg
xor
stos
lahf
pop
mov
xorl
ja
cmp
xor
or
call
adc
and
sub
jle
sbb
mov
in
push
call
xchg
sahf
sbb
pusha
cmp
iret
movsb
in
fdivl
test
push
xchg
call
out
mov
mov
xchg
mov
or
lret
mov
mov
std
sbb
cmp
or
lcall
dec
test
int
mov
lcall
pop
bound
stos
xor
sub
pop
sub
sub
les
mov
and
cmc
dec
xchg
cmpb
dec
aad
sub
dec
mov
dec
test
jno
or
push
inc
into
jle
dec
mov
std
mov
mov
inc
aas
pop
or
cs
sub
loopne
fadd
insl
movsb
mov
mov
subl
lds
or
nop
push
js
shr
cmp
xlat
cmc
es
jno
xlat
jb
dec
andl
sbb
sti
mov
dec
mov
dec
ret
mov
mov
adcb
xlat
xchg
insb
ljmp
enter
pop
imul
clc
xchg
inc
and
inc
jo
hlt
jnp
pop
out
xor
mov
fistpl
mov
pop
xor
nop
js
imul
jno
add
add
pop
xchg
ss
mulps
bound
faddl
in
or
adc
fcmovnu
xchg
pop
stos
faddl
cmp
mov
das
dec
stos
mov
add
mov
jmp
sbbb
lret
xor
add
mov
rcrb
pop
cmp
std
addr16
mov
xor
adc
xchg
push
add
scas
cli
lret
gs
mov
int
enter
dec
cmp
jbe
rcll
pop
jo
vpunpckhdq
mov
movb
pop
xor
sahf
inc
dec
push
fcompl
call
test
cld
call
jnp
xchg
out
dec
iret
or
dec
in
aaa
arpl
xchg
cli
rcll
dec
mov
dec
cmp
lret
mov
lret
movsl
nop
mov
jno
out
sahf
cs
or
push
stc
inc
jecxz
sbb
mov
cli
loope
rclb
testb
mov
dec
xor
add
jl
push
and
or
bound
ror
fistpll
push
repnz
out
in
push
xor
inc
sti
cld
icebp
lcall
icebp
enter
mov
sar
jcxz
push
push
test
fcoms
mov
xchg
adc
data16
pop
mov
in
shlb
rcrl
jns
rcl
dec
imul
dec
lahf
push
jno
push
scas
push
lds
jl,pt
xchg
mov
mov
lahf
and
add
in
fimull
cld
xchg
cli
jbe
jae
jns
rol
subl
or
mov
popa
pop
adcb
or
loop
mov
xor
fildl
pop
cmc
imul
test
pop
icebp
in
dec
push
sahf
sub
mov
addr16
insb
insl
fisubrs
mov
fidivl
mov
xorl
xor
pop
cmp
jecxz
cmpsb
xchg
ljmp
sbb
xor
or
data16
add
les
and
lahf
mov
clc
std
scas
das
add
mov
and
or
mov
and
testb
dec
cmp
mov
pop
loopne
or
xor
push
imul
rcrb
lret
mov
std
mov
jbe
push
nop
lahf
cmpsl
push
add
fadds
outsb
arpl
arpl
idivb
int3
mov
ret
jmp
decb
imul
xchg
test
adc
jle
in
stos
pop
pop
cmpsb
add
es
stc
faddl
mov
dec
repz
xorb
xchg
inc
cs
xchg
sbb
enter
out
stc
shlb
mov
sbb
push
dec
sbb
insb
adc
add
sub
sbbl
loop
mov
inc
cmp
inc
lods
ss
pop
scas
pop
push
rcrl
mov
xchg
push
adc
outsl
loop
daa
xchg
std
adc
cltd
in
or
jo
std
shl
cmpsb
mov
mov
add
mov
jno
hlt
js
test
lds
lods
or
mov
push
jns
mov
aam
sti
ror
jns
in
mov
or
push
dec
pop
pop
inc
roll
rol
cmp
and
in
adc
jle
mov
arpl
stc
mulb
xchg
idivb
mov
push
cmc
psrlq
insb
push
adc
lea
stos
pop
pop
xor
insl
hlt
cmp
push
and
add
xor
movsb
je
pop
rorb
shrb
lds
cltd
iret
imul
cmp
sbb
lods
add
out
dec
sbb
mov
jno
pop
fisttpll
loopne
xchg
xchg
into
jge
sbb
push
add
xchg
xchg
adc
sarl
out
jmp
ds
ja
cld
mov
push
sbb
rcl
pop
sbb
mov
push
cmp
mov
iret
cmp
mov
dec
inc
inc
mov
add
arpl
das
paddusw
in
jns
imul
cld
xchg
mov
int3
inc
gs
nop
rorb
adc
sbb
rcrb
subl
out
je
sbb
adc
pop
data16
sbb
lret
jg
test
stos
sub
xchg
push
les
inc
in
lock
or
add
cmp
add
or
pop
lcall
fwait
mov
movsb
clc
icebp
or
fisubrl
mov
fiaddl
mov
push
lods
cmp
pop
or
jns
pop
outsb
das
movsl
mov
lahf
pop
adc
ja
jbe
lods
push
push
jnp
arpl
scas
repz
mov
int3
mov
sub
mov
mov
loopne
std
shll
cli
push
insb
xorb
repz
push
orb
sub
ret
pop
pusha
mov
fisttpl
xchg
mov
add
sti
ss
int
lds
rcl
push
nop
in
es
mov
mov
mov
shl
cli
test
pop
jbe
repz
notl
adc
fdivl
and
pop
inc
cmp
dec
stos
push
call
fbstp
ror
shrb
push
subl
mov
or
fadds
ja
sbb
nop
lock
or
dec
jg
mov
aam
stos
cmp
gs
test
iret
jo
cmpsl
lcall
out
es
cmpsb
fdiv
dec
xchg
or
subb
add
imul
mov
sbb
dec
inc
or
scas
adc
cmc
add
cmc
mov
xchg
xor
dec
adc
push
mov
mov
data16
test
jo
mov
sub
and
incb
test
mov
mov
sbb
aas
mov
inc
jne
out
mov
inc
pop
lret
sbb
sub
addb
jbe
pop
mov
inc
xor
inc
push
stos
inc
rol
test
or
add
fcmovnbe
cmp
or
pop
repz
dec
push
mov
insb
mov
je
push
xorps
std
loopne
sahf
jp
push
mov
out
jmp
jns
cmp
dec
icebp
fldl
mov
push
push
dec
or
pop
mov
test
dec
mov
sbb
sbb
inc
je
call
sbb
inc
pop
mov
mov
jae
sbb
cs
mov
jecxz
iret
cmpsb
jo
pushf
popa
sub
enter
mov
pop
mov
jmp
or
in
sbbb
mov
out
loope
or
dec
bound
mov
nop
xchg
xchg
icebp
imul
mov
xchg
std
inc
pop
mov
jge
cmpsl
in
lahf
jl
pop
test
outsl
in
and
add
push
out
pusha
repnz
pop
sub
mov
scas
mov
add
je
cs
cli
cmp
arpl
data16
scas
push
and
dec
pop
sbb
push
outsb
or
pop
jmp
loop
dec
lds
xchg
add
imull
test
das
sub
xchg
adc
pop
mov
inc
mov
mov
cwtl
cmp
push
or
imul
test
mov
fisubs
push
mov
iret
scas
clc
add
stos
pop
lretw
fs
outsb
push
cmp
shlb
enter
xchg
addr16
jp
jmp
inc
stc
test
daa
or
out
aas
inc
ret
mov
xorl
jo
lret
mov
inc
sub
push
loope
jo
add
sahf
add
loope
fbld
jge
inc
loope
and
mov
xor
or
dec
cwtl
xchg
mov
pop
push
push
fildl
repnz
inc
xor
adc
mov
xchg
test
icebp
ret
cs
push
leave
sbb
lcall
ss
add
cmp
mov
mov
xor
repnz
pop
sub
imull
cmp
je
clc
loope
mov
adc
xor
or
adc
shr
or
imul
mov
jbe
pusha
sub
inc
ret
in
mov
mov
aas
xor
iret
xchg
aas
daa
push
lahf
cli
shll
cmp
shll
notb
out
inc
mov
sbb
xor
cli
leave
jae
or
adc
push
mov
cmp
mov
aaa
jecxz
inc
cmc
ljmp
loope
scas
rorb
mov
cmp
mov
test
xlat
and
or
aad
and
lahf
push
mov
test
jnp
stos
cmpsb
insb
jg
fidivrl
popf
cmp
mov
jmp
mov
nop
xchg
test
dec
mov
jge
xor
cmp
in
fdivl
cmc
pushl
xor
pop
xor
xor
dec
pop
jbe
aaa
scas
push
ss
bound
pop
in
fbstp
jbe
mov
icebp
fcompl
pop
repz
jmp
fists
mov
cmc
shll
lret
loopne
adc
outsb
inc
insb
xchg
loop
mov
es
cltd
in
pushf
jl
and
and
fsubl
ret
and
loop
mov
jge
aas
mov
sbb
mov
loop
dec
sub
ror
sub
dec
nop
mull
mul
lcall
pop
pop
shr
in
push
sub
shrl
popa
loope
pusha
xlat
jl
enter
dec
mov
add
into
call
dec
cmp
or
mov
cmpsb
stos
jb
or
xor
or
ds
jae
lods
inc
jle
mov
inc
mov
push
xor
dec
push
popf
idivb
rcll
xor
ds
jo
or
and
xchg
in
xchg
inc
pop
iret
sub
js
mov
rclb
add
push
int3
ret
test
shrl
xlat
js
sub
idiv
setns
rclb
lret
mov
out
fsubs
out
outsl
ss
loopne
cli
imul
mov
xor
sarb
inc
dec
dec
jo
inc
sub
dec
mov
lahf
dec
pop
inc
inc
dec
int
mov
xor
gs
sub
mov
xchg
cmpsb
testl
jns
in
push
xchg
dec
or
xchg
dec
cli
add
push
pop
add
enter
std
scas
and
cltd
inc
js
jle
mov
xchg
nop
lret
fstpl
mov
enter
test
paddq
mov
push
cmpsb
shrb
cmp
sti
addr16
pushf
pushf
fistps
pop
cmp
in
push
mov
mov
outsb
xor
xlat
mov
enter
push
fcomp
push
push
lahf
inc
adc
int3
mov
push
xchg
add
xor
leave
adc
mov
or
fisubrs
aam
xor
pop
xorl
into
sub
adc
sbbb
push
ja
and
roll
rcrb
loopne
test
je
subb
rol
divb
stc
rcrb
adc
aam
jg
divb
xor
lods
adc
fistpll
fs
xor
dec
aad
pop
jge
sarl
cwtl
adc
sahf
lods
mov
dec
insl
jbe
push
hlt
std
mov
adc
mov
enter
push
adc
lret
mov
cltd
pop
and
pop
xchg
push
stos
imul
push
push
inc
mov
stos
ja
cwtl
gs
inc
popf
loope
jl
rol
sub
or
pop
arpl
inc
pop
stos
push
push
clc
pushf
ds
dec
mov
jnp
addr16
xor
cmc
jmp
mov
ret
pop
jmp
out
cmp
sahf
add
pusha
and
jge
xchg
popa
or
xor
pop
addr16
mov
jae
nop
test
in
push
ss
nop
fpatan
mov
sbb
imul
pop
mov
dec
imul
std
into
cli
sbb
inc
shll
shrl
push
aas
popa
or
ljmp
test
fsubs
push
add
inc
out
iret
inc
fisubs
pop
pop
cmp
jecxz
cmovno
adc
jge
fdiv
inc
fsubrl
fdivrs
dec
xchg
xor
jl
push
adc
push
dec
add
popa
cmc
sub
mov
pushf
int3
loop
fstl
ret
and
mov
scas
icebp
xchg
je
es
add
into
xchg
mov
aaa
push
inc
cmc
xor
pushf
loope
std
pop
mov
mov
movsl
scas
or
xor
int3
jmp
std
lods
pop
push
adc
cmpsl
sti
imul
in
cmp
jo
sbb
cld
sub
insl
and
add
jae
out
and
in
sub
in
xchg
sbb
aaa
loopne
mov
jns
pop
jge
jne
jg
mov
insb
mov
je
mov
enter
mov
lods
mov
test
xchg
aas
test
popa
sarl
mov
inc
cmp
insb
and
das
or
shlb
ret
subl
inc
sbb
inc
inc
cmp
pandn
mov
mov
je
mov
mov
ds
mov
mov
adc
cltd
add
sbb
lods
sbb
sbb
xchg
pop
jp
mov
adc
roll
add
jbe
test
cld
adc
ret
dec
xor
push
xor
pop
push
dec
mov
pop
mov
mov
negl
icebp
roll
push
imul
mov
add
xchg
dec
mov
out
inc
rcr
dec
insl
das
aad
fstpt
jo
iret
cmp
sbb
mov
and
hlt
and
or
pop
jle
bound
sbb
loope
xor
imul
das
push
xchg
add
mov
or
and
dec
dec
rolb
xor
aaa
mov
push
icebp
imul
andb
sub
pop
pusha
pop
in
add
push
mov
dec
pusha
adc
mov
rorb
aaa
imul
in
call
iret
mov
nop
jne
adc
or
mov
sbb
or
movsb
aad
push
insb
jb
xlat
push
mov
inc
or
fildll
out
mov
jns
andl
sarl
pop
xchg
cli
sti
push
pusha
movsl
dec
adc
repnz
les
xchg
ljmp
loopne
add
pop
lods
daa
inc
sub
adc
sti
xchg
jge
mov
push
out
dec
fadds
shrl
dec
lock
aad
pop
cmc
and
fadds
mov
or
push
ljmp
lret
or
in
mov
mov
adc
stos
mov
sbb
add
dec
adc
add
sub
push
hlt
adc
jo
int
pandn
mov
ret
popf
jmp
sbb
cmp
outsb
bound
mov
jb
cmp
lock
push
xor
subb
pop
imul
incb
les
aam
mov
dec
jg
rolb
adc
aad
std
cmp
mov
cmp
fsubs
dec
movsb
out
daa
repnz
shrl
movb
movsl
loopne
jmp
test
test
sbb
xchg
dec
int3
jp
orb
mov
sub
imul
lds
loope
inc
inc
xchg
xchg
cli
addl
lcall
nop
xchg
loopne
rolb
jmp
mov
scas
pop
or
fbld
js
xor
nop
lock
xchg
sub
push
cwtl
gs
loopne
mov
mov
fsubrs
lcall
jp
dec
clc
rolb
sub
mov
in
repz
lods
pop
adc
inc
or
popa
cs
jne
leave
pop
xor
mov
jmp
movsb
std
nop
inc
fmuls
sbb
iret
and
fcmovnbe
mov
sub
fiaddl
aam
mov
push
movsb
mov
xchg
mov
xor
pop
fcmovu
and
cmp
push
mov
mulb
mov
mov
sbb
and
and
xchg
inc
loope
in
jg
shrb
ss
mov
dec
sub
mov
cmp
ret
jnp
out
jle
jo
jne
les
test
enter
stos
mov
loop
mov
and
cmp
push
bound
mov
sub
out
sarb
out
xchg
mov
fisubs
mov
aaa
mov
fidivrl
adc
fadd
gs
js
cwtl
not
mov
pop
stos
push
leave
adc
xchg
pop
pop
pop
shlb
xor
jle
xor
stc
adc
iret
shlb
ret
out
sarb
sbb
adc
lea
or
ja
jle
sub
or
mov
mov
dec
andb
xor
and
push
mov
insb
lea
push
and
and
in
xor
or
insb
out
dec
xor
mov
lret
out
loope
sbb
cmp
mov
popf
mov
ficoms
sti
push
adc
mov
pop
mov
jge
dec
and
cmp
pop
push
ss
les
aas
cmp
or
mov
jns
loop
push
add
xchg
jg
mov
push
mov
add
jmp
lret
lods
xor
in
cmp
xor
and
dec
jmp
cltd
mov
divl
mov
data16
add
enter
pop
nop
mov
ja
pop
mov
inc
insl
lds
jl
push
aad
in
adc
pushf
scas
xchg
cli
mov
add
cltd
fmuls
push
or
mov
into
ret
aas
sub
push
push
outsb
pushf
lcall
and
addr16
test
fdivs
xchg
sub
fcmovnbe
rorb
jecxz
clc
or
jbe
loop
dec
mov
push
in
jp
enter
cmp
pop
bnd
inc
arpl
in
in
icebp
mov
call
nop
fcomi
andb
sbb
pop
add
cwtl
push
jmp
cltd
mov
test
insb
adc
les
fwait
lret
dec
arpl
push
sbb
fs
cwtl
push
add
xlat
jmp
filds
pop
push
fcmovnbe
inc
xor
hlt
divb
mov
fucom
adc
mov
jp
addb
mov
sarl
cmp
push
add
scas
aas
stc
je
movsl
pop
je
fildll
out
mov
jnp
add
sbb
pop
mov
mov
mov
fs
inc
sub
or
sub
and
fmul
lods
xor
cmp
shlb
or
pushf
mov
adc
xchg
and
cwtl
ss
or
lods
push
test
hlt
push
mov
mov
out
adc
cmp
fildll
pop
push
or
int3
xchg
pop
aad
mov
or
stc
lcall
addr16
movsb
imul
jge
in
js
push
jmp
dec
mov
fisttpl
lods
mov
xchg
and
add
cmp
lds
out
or
xchg
and
dec
xchg
sahf
xor
pop
jge
shlb
inc
stos
imul
jb
push
sbb
fs
jae
insb
jb
pop
subl
pop
sub
lods
cmp
adc
push
cmp
or
pop
xchg
adc
test
out
push
scas
movsb
bound
cmpb
loope
clc
and
sub
jle
add
aad
add
movsb
daa
ljmp
lcall
push
xor
outsb
stos
nop
stos
xchg
in
jg
jne
popa
leave
pop
push
clc
adc
repnz
sbb
cmc
stc
pop
stos
cli
jo
add
adc
mov
popf
xor
test
jns
jge
test
lcall
in
loopne
sub
sbb
fnstenv
cmp
jg
pushf
push
sahf
stos
inc
mov
mov
mov
jnp
jo
add
arpl
out
mov
inc
inc
fiaddl
fsub
repnz
push
push
xchg
or
gs
insl
into
sbb
jo
enter
and
and
orl
sbb
jg
fwait
cwtl
or
sbb
inc
push
je
js
add
jecxz
or
jo
repnz
cltd
in
call
mov
xor
aad
pop
cmp
xchg
testl
mov
je
nop
xchg
cwtl
lods
jecxz
pop
into
lods
push
cwtl
jo
test
fcompl
lods
in
cmpsl
cs
das
push
mov
test
dec
cs
pop
mov
inc
sbb
divb
inc
jge
mov
test
mov
inc
aad
push
mov
push
add
push
jns
addb
movsb
inc
xchg
cmc
push
fwait
in
xchg
mov
mov
pop
cmpsb
sarl
or
cmp
addl
cmp
mov
rol
lds
sbb
mov
mov
cli
repnz
xchg
iret
cmpsl
cmp
pop
mov
cmp
inc
xchg
je
or
cmp
sub
jo
test
mov
dec
js
je
cmp
lods
das
dec
cmp
fsts
lods
das
pop
adc
pop
xor
mov
jle
imul
xor
xchg
adc
fstpl
pop
cmp
sub
dec
rolb
jecxz
xor
add
xor
je
test
xchg
bnd
cmp
push
push
sahf
into
rol
or
mov
dec
enter
mov
mov
jno
scas
je
cli
enter
pop
push
ret
mov
inc
aam
inc
push
xchg
mov
xor
arpl
lods
mov
outsl
dec
dec
inc
je
js
adc
xchg
sbbl
mov
imul
sbb
je
js
push
ret
pop
inc
cmp
mov
jb
loop
pop
lahf
shr
sub
adc
inc
rcll
rcll
jnp
mov
out
or
fildl
adc
or
leave
mov
icebp
daa
pop
rcrb
jae
mov
pushf
mov
mov
lds
pop
mov
andl
pop
sti
mov
jns
dec
stos
clc
in
out
mov
jecxz
inc
and
dec
loop
cli
mov
push
dec
fistl
mov
sbb
ljmp
test
xchg
out
adc
mov
mov
adc
icebp
push
mov
jg
push
inc
mov
addr16
daa
stos
pop
imul
outsl
cmpsb
in
push
mov
xchg
lds
lcall
inc
pusha
in
scas
jb
dec
or
sbb
arpl
cvtdq2ps
jmp
sbb
pop
imul
addr16
xor
pop
stos
outsl
jle
or
fwait
sbb
clc
sbb
imul
pop
jge
nop
fcomip
cmpsb
aaa
dec
loop
idivl
push
adc
jns
fimull
jl
ljmp
xlat
ds
aaa
int3
mov
dec
movsl
insl
mov
inc
rcr
cmpsb
push
in
mov
xor
and
jbe
lahf
es
push
bnd
cltd
in
lahf
hlt
xchg
xor
dec
mov
ret
ss
sub
nop
lock
or
xor
rorb
cltd
mov
mov
in
dec
xchg
jecxz
shlb
cmp
pop
and
test
mov
scas
clc
pop
adc
push
push
mov
xchg
dec
iret
lods
loope
cmc
gs
pop
inc
xchg
adc
push
adc
shll
shlb
add
std
ss
in
cmp
ret
dec
mov
pusha
jge
cltd
xor
cmpsb
jmp
aaa
inc
test
enter
ja
gs
rcl
mov
adcl
stos
inc
out
push
jnp
or
dec
sbb
mov
sub
inc
xor
xor
daa
rorl
fs
cli
les
mov
rol
inc
mov
pop
add
xchg
mov
mov
daa
jnp
rol
dec
pop
imul
mov
cld
xor
icebp
inc
xchg
mov
shlb
addr16
push
and
sbb
test
xchg
fs
shll
cmp
test
jge
fdivrs
out
cmpsb
jno
push
andb
cmp
aam
mov
aam
insb
adc
mov
stos
adc
pop
sahf
pop
lds
cld
mov
xchg
xchg
imul
out
mov
sti
sub
enter
clc
bound
dec
int
mov
mov
dec
scas
sbb
lods
ljmp
push
pop
sub
pop
pop
push
cmp
stos
cmp
into
adc
or
mov
std
aam
mov
fcomi
sub
das
and
cmp
shrb
sbb
je
jae
inc
dec
fistpl
out
lcall
xchg
push
dec
fwait
adc
fldenv
imul
movsl
sbb
movsl
or
jbe
popa
aaa
fimull
pop
pop
fmull
mov
in
adc
and
adc
daa
inc
lret
fstpl
xor
xor
xchg
mov
fdivrs
scas
push
mul
add
xor
insb
lods
push
jmp
or
dec
scas
mov
cmpsb
push
sahf
fisttps
mov
adcl
scas
scas
lcall
fldenv
push
ds
cmp
notb
mov
cmp
inc
aaa
xor
divl
and
jecxz
lods
sarb
movsb
mov
and
into
pushl
cmpsb
add
push
pop
sub
scas
mov
pop
testb
addr16
popa
mov
gs
pop
rclb
add
pop
fnstcw
pop
cmpsl
fldcw
cmpsl
sbb
sub
in
push
movsl
sahf
stos
mov
jae
push
xor
mov
jg
jbe
mov
push
cmpsl
fmuls
or
push
imul
ja
cmp
cmpsl
add
jle
sbb
sbb
ds
aam
js
lcall
cmp
in
fdivr
adc
cmp
lea
int
mov
push
jp
rclb
pushw
das
mov
popa
jns
inc
jbe
xor
push
adc
std
stos
in
jl
add
pop
fmulp
stc
std
adc
lock
dec
pop
fsubp
dec
mov
sti
cmp
sti
push
rcrb
lret
mov
into
push
cmp
xchg
add
test
mov
fimull
push
aaa
mov
push
mul
and
pop
fstpt
stos
out
pop
dec
add
pusha
loopne
and
add
sahf
jg
ficoml
aad
outsl
lods
xchg
lcall
cmp
daa
mov
mov
aas
iret
push
cmp
pop
xor
sbb
add
mov
std
loop
mov
push
test
push
mov
daa
mov
jecxz
push
lcall
insl
lea
test
adc
jb
cmp
shl
pusha
jge
outsb
xchg
jp
jg
or
mov
pop
mov
mov
inc
xor
fs
fistpll
fidivl
inc
cmp
ds
and
inc
mov
lcall
movsl
xchg
add
aaa
fwait
outsb
gs
adc
mov
jo
ljmp
notb
adc
add
lods
push
sub
es
jb
push
lock
call
lret
xchg
or
std
movsb
adc
pop
cli
jp
cmp
cli
es
jmp
jae
rclb
sbb
sbb
mov
jp
lret
adc
bound
rcrl
sahf
enter
mov
nop
push
add
jae
out
loope
mov
daa
jmp
mov
mov
stos
sahf
in
mov
push
stos
aam
dec
push
xchg
mov
lods
inc
adc
dec
sarb
addr16
insl
mov
ret
cs
dec
test
stos
test
jg
mov
push
js
mov
mov
imul
add
dec
mov
dec
or
int3
sbb
mov
sti
fdivs
mov
push
sbb
dec
iret
xor
cmp
stos
cmpsl
and
movsb
or
leave
jge
lahf
lods
adc
xor
mov
push
sets
jecxz
xchg
fwait
jmp
jns
paddusb
jb
jo
mov
and
sbb
mov
les
out
mov
testl
pop
jnp
lcall
stos
jo
cld
adc
pop
dec
es
lods
cmp
dec
adc
xchg
cmp
test
xor
cmp
sub
popf
cltd
dec
iret
repnz
jmp
into
push
inc
out
inc
in
mov
adc
jno
xchg
push
test
in
pop
test
adc
pop
pop
and
inc
mov
mov
mov
dec
lods
imul
xor
mov
cmp
jae
cs
aad
add
sbb
sbb
jmp
push
mov
pop
mov
xor
das
pusha
lods
pop
aas
fcoms
mov
xorl
pop
sub
aas
ret
xchg
inc
sbb
mulb
dec
jno
adc
lcall
call
dec
cmp
addl
lds
pop
mov
pop
aad
sbb
out
aam
mov
pop
push
loope
or
test
or
int
and
cmpsl
mov
mov
imul
std
xor
cltd
popa
mov
out
gs
push
sti
mov
jne
mov
notl
aas
xor
jno
add
js
jecxz
inc
cmp
arpl
mov
sti
lret
movsl
mov
sbb
stos
xor
xor
or
mov
sbb
xlat
mov
stc
push
rorb
pop
cli
inc
dec
cli
cs
sahf
subl
fcomps
mov
push
pop
jno
ret
fmuls
fistpll
pop
xor
aaa
aad
pop
sub
imul
mov
adc
jo
xlat
cs
mov
lret
data16
dec
add
mov
into
aad
ror
fnstcw
nop
sbb
pop
push
ljmp
test
daa
or
stos
fdivrp
mov
ret
inc
mov
imul
adc
aad
repnz
add
mov
mov
lods
push
cmp
jb
and
nop
pop
out
or
outsb
push
sbb
iret
cmpsb
inc
stos
and
xchg
imul
nop
mov
jnp
imul
out
mov
into
push
inc
jo
xchg
mov
inc
mov
mov
ljmp
jo
mov
fimuls
pop
add
std
push
cmpsl
stc
cli
mulb
loope
jno
andl
mov
lahf
dec
mov
dec
iret
lcall
jns
pop
jg
cmp
jno
pop
xor
idivb
imul
add
dec
push
into
inc
mov
cmc
mov
add
inc
jl
jae
inc
xlat
data16
ret
push
ds
xor
push
pushf
inc
pop
jnp
lods
test
add
shrb
cmp
es
test
add
addr16
js
pop
mov
enter
cmp
cli
fisubrl
push
mov
adc
jp
dec
pop
popa
pop
cld
lea
pop
cmpsb
cmp
mov
mov
int
adc
negl
push
sbb
push
cmpsl
lret
popa
mov
in
and
cmp
mov
sub
shll
jne
mov
and
jb
cmp
pop
xchg
sbb
outsl
test
adc
mov
in
add
imul
add
insb
fmull
mov
in
aas
lahf
ss
fwait
mov
xchg
mov
in
jp
loop
outsl
mov
movsl
add
mov
adc
pop
jb
mov
mov
cmovb
jo
mul
loope
jnp
fidivs
mov
mov
stc
lea
and
popf
inc
enter
lds
mov
sbb
daa
das
mov
mov
movsl
jns
push
push
dec
lcall
aaa
rcr
in
push
xchg
js
popa
and
lcall
stc
inc
jmp
sub
mov
les
xor
int3
push
call
insb
push
pop
jbe
notb
shlb
jbe
cmc
mov
stc
jae
negb
mov
sub
push
jae
push
rsqrtps
call
into
popf
test
xchg
jg
sbb
scas
out
push
ss
xchg
or
add
xchg
xor
stos
jb
mov
push
mov
test
mov
sahf
into
mov
pushf
cmp
push
stos
lea
xchg
sbb
nop
cmpl
pop
movsl
pop
mov
mov
jb
cli
in
adc
fcomip
add
nop
jge
ret
cwtl
add
notl
insl
or
dec
lds
dec
mov
or
and
pushf
roll
stos
dec
push
mov
add
popa
xchg
dec
and
outsl
jecxz
sub
mov
mov
int3
ret
mov
out
jl
mov
pushl
test
test
adc
cmp
mov
push
insb
xchg
out
adc
adc
cwtl
and
cmp
andl
push
cmp
mov
add
xor
ret
outsb
mov
xlat
into
ret
aad
mov
bound
xor
cmp
mov
jae
jmp
xor
mov
bound
outsb
push
repnz
mov
sbb
fistl
sbb
inc
mov
xor
sbb
mov
dec
inc
sub
jae
nop
andl
adc
mov
fwait
leave
cs
xor
push
rclb
icebp
mov
inc
xchg
jb
xor
fwait
mov
xor
dec
inc
jne
in
xor
shrb
and
imul
lcall
clc
testl
sub
lahf
repz
pop
xchg
add
cmpsl
fnstenv
inc
movsl
sub
sbb
push
stos
movsb
lret
mov
dec
or
loop
mov
or
mov
cmp
insl
ret
adc
in
jmp
insb
sub
daa
shll
mov
data16
jg
sti
adc
fwait
sbbl
sbb
fdivrl
xchg
mov
add
enter
bts
in
and
and
std
push
push
fdivrp
jno
jmp
or
xor
rcrw
or
jge
popf
cltd
adc
insb
or
push
mov
or
jge
movsb
inc
dec
insb
aam
ja
xor
sbb
sub
clc
rolb
sbb
inc
or
xor
dec
fidivs
xchg
nop
mov
push
xor
enter
inc
std
and
fldcw
jo
sub
cmp
ret
push
idivb
push
aas
sbbb
lds
psubq
pop
xchg
jge
dec
into
inc
or
loope
jecxz
imul
mov
xchg
pusha
or
jno
push
iret
fbld
mov
clc
daa
repnz
jnp
cmp
out
icebp
cs
cmc
add
fwait
icebp
pushf
and
inc
rcrl
xchg
adc
insl
and
sbb
push
xchg
jle
in
fcoms
xor
push
sti
test
push
sub
xchg
dec
pop
or
enter
dec
mov
pushl
push
mov
sbb
popa
jle
or
roll
inc
xchg
mov
mov
pop
mov
sbb
mov
mov
popl
and
popf
adc
jno
mov
loopne
std
pushf
cmp
cmp
push
xchg
leave
mov
cmp
xchg
push
mov
mov
jnp
jnp
arpl
lahf
cltd
push
bound
xchg
jnp
outsl
xor
push
sbb
test
xchg
cmp
jle
ljmp
iret
out
addr16
notb
mov
cmpsb
xor
xchg
shll
int
xchg
and
adc
xchg
pusha
stos
push
push
sub
adc
mull
loopne
dec
push
insl
ljmp
xchg
mov
ret
lret
ror
fsubrl
and
xchg
data16
dec
push
in
enter
xchg
sbb
xlat
sub
sahf
bound
mov
xor
in
lret
sub
sub
jae
int3
inc
mov
inc
js
inc
sbb
dec
cmp
fsub
scas
xlat
std
and
std
xchg
mov
subl
test
subl
seta
pop
loopne
xor
inc
mov
lds
sub
test
mov
data16
mov
xchg
repnz
loop
push
daa
pop
lock
pusha
jne
and
into
dec
add
mov
outsb
adcb
aaa
push
adc
mov
sub
jo
cmc
cmpsl
iret
aas
out
test
pusha
sar
mov
sub
js
push
repnz
loopne
aam
mov
fs
xlat
sub
sbb
sub
test
sbb
push
mov
push
xchg
stos
les
and
sarl
adc
enter
dec
mov
mov
jns
rorl
orb
mov
xchg
jo
les
and
pop
mov
sarb
mov
sbb
rcr
shlb
push
push
inc
mulb
pop
pop
inc
inc
mov
xchg
pusha
and
push
call
scas
dec
lods
xchg
jl
jg
adc
shrl
aad
repnz
pushl
push
lods
dec
mov
cmpsb
lods
outsl
es
and
cmpsb
out
push
mov
or
aaa
jl
xlat
cmpsb
mov
xor
into
inc
scas
push
lret
nop
leave
sub
xchg
cmp
pop
shr
std
je
mov
mov
dec
jns
mov
arpl
xor
loopne
rorl
mov
andl
cmp
adc
enter
test
xchg
in
dec
add
out
mov
fistpl
loop
mov
mov
popf
pop
lods
add
adc
mov
or
cs
xchg
or
movsb
or
enter
pop
jp
ror
ret
ljmp
jmp
or
mov
lock
out
push
sbb
aad
test
jmp
jo
out
mov
fwait
jb
stos
or
lock
sbb
in
add
cltd
insl
shll
addr16
jle
das
or
mov
add
sub
xlat
inc
xor
aad
add
add
jno
jecxz
mov
cmpsb
lods
xchg
ss
push
roll
jbe
xor
sub
mov
bound
inc
lret
fucomi
shrb
cmp
xor
pop
mov
sar
scas
dec
pop
sub
add
sub
ficompl
movl
test
inc
sub
loope
mov
pop
inc
daa
jns
push
fsub
addr16
jge
mov
inc
into
pop
xchg
pop
and
xchg
out
jle
and
out
pop
fnstenv
es
mov
fists
push
popf
push
loope
push
insb
into
arpl
popa
or
in
sbb
outsl
les
enter
mov
mov
cmpsb
inc
into
xor
push
ret
xchg
adc
sub
mov
sbb
mov
mov
cmpsl
mov
imul
stos
movsl
sahf
shrb
mov
mov
jl
imul
push
cmp
add
adc
pop
and
in
out
xchg
push
leave
push
fimuls
lret
mov
movsb
mov
das
sbb
sub
cltd
mov
lahf
mov
xor
loopne
lret
mov
inc
or
leave
xchg
jp
test
adc
test
jns
sub
out
aad
inc
movsl
sbb
mov
dec
out
and
push
shr
das
icebp
mov
enter
xor
inc
je
xchg
push
gs
stos
sub
add
mov
cmc
or
sti
movsb
jg
add
sbb
xchg
xor
sub
add
es
mov
pop
push
loope
je
pop
inc
lock
adc
cmp
jle
leave
or
mov
fnstsw
adc
dec
dec
xlat
fisubs
iret
sbb
or
addr16
call
adc
push
rcrb
add
ror
adc
stos
clc
pop
icebp
repnz
pop
js
dec
jge
outsb
imulb
movsb
fs
fldl
dec
jns
push
sbbl
loopne
sub
jle
mov
cmpsb
and
lea
jbe
cwtl
test
call
xchg
in
xor
sbb
mov
pop
push
mov
bound
nop
lcall
dec
push
enter
fldenv
cltd
int
dec
sbb
dec
es
int
add
cmp
mov
sti
cmp
imul
test
cwtl
push
push
cmc
in
lods
mov
xor
je
cld
dec
add
int3
shrb
aas
cmp
ja
jb
jo
inc
mov
bound
mov
ljmp
daa
pushf
repz
inc
outsl
sbb
mov
popa
pop
aaa
nop
xchg
adc
cmc
add
lods
add
loopne
fisubrl
push
push
jge
jge
inc
mov
xor
dec
push
xchg
xor
mov
cmc
and
cmp
add
addr16
sub
faddl
pop
sub
jno
stos
aas
sahf
mov
ljmp
push
mov
pop
mov
leave
pop
cwtl
xor
rcrl
or
push
xor
pop
test
mov
jecxz
repz
es
fsts
test
inc
xchg
sbb
mov
jbe
xchg
xor
pushf
lods
lcall
int
xor
cmp
ds
mov
shll
cmpsl
iret
lea
outsb
pop
mov
dec
gs
and
inc
add
xchg
test
ljmp
inc
or
and
js
popf
loop
jecxz
rorb
sbb
in
sahf
fucomp
in
stos
mov
cs
xor
adc
roll
fisubs
cmp
push
dec
push
mov
mov
cltd
shrb
sub
push
call
mov
in
pop
cmp
mov
dec
cmp
mov
aam
adc
in
fwait
loop
jle
fwait
lods
loopne
in
cmc
jmp
pop
sub
mov
ret
cmp
mov
and
push
out
push
incl
xchg
cltd
test
outsl
mov
js
mov
mov
bound
fcoms
sub
data16
jl
in
aas
xchg
adc
mov
stc
ss
loope
pop
and
push
rcr
push
mov
aad
out
inc
outsl
data16
out
repz
int3
dec
xchg
icebp
and
xor
and
int
gs
dec
inc
lock
or
push
pop
pop
xchg
pop
mov
je
stos
jp
add
mov
aam
dec
imul
dec
out
leave
scas
fistps
pop
jo
or
icebp
es
in
sbb
pushf
pushf
rorb
xlat
inc
movsb
clc
addb
mov
stos
add
outsb
out
fwait
pop
push
aaa
inc
sub
jp
mov
fs
or
push
daa
push
je
hlt
stos
mov
or
mov
pop
cmpsl
and
or
popa
ror
test
out
icebp
cltd
add
adc
jns
dec
inc
pop
sbb
inc
cmp
stc
pop
jmp
test
fwait
or
sbb
aaa
aad
orl
gs
jmp
add
and
dec
popa
popa
push
add
pop
andl
mov
xor
jb
stos
mov
or
je
push
push
pusha
fs
mov
aaa
push
and
or
int
jp
jb
loop
pop
and
jl
test
in
jns
fists
jecxz
pop
ud0
mov
jno
sub
sbb
lahf
pop
sub
shrb
mov
pop
or
or
cmovbe
mov
and
sbb
xchg
outsb
mov
emms
out
push
add
stos
pop
xor
repnz
outsl
mov
add
loopne
inc
inc
add
adc
stos
sbb
rclb
or
icebp
dec
ss
out
mov
mov
or
adc
into
insb
icebp
dec
inc
jecxz
lods
mov
and
add
repz
popa
adcb
inc
pop
dec
sub
pushf
jo
stos
jnp
add
out
xchg
jge
fisttpl
repnz
dec
ljmp
cwtl
scas
dec
mov
das
sbb
jmp
roll
mov
mov
fnstsw
imul
lret
or
lret
fnstenv
ss
sahf
push
xor
imul
mov
dec
imul
shlb
hlt
fbld
mov
cmp
pop
mov
mov
adc
je
movb
jle
push
add
adc
stos
vmovdqa
jns
inc
gs
ret
in
xchg
or
add
dec
das
div
loop
mov
es
rclb
xchg
scas
ljmp
imulb
cmp
mov
add
cwtl
icebp
arpl
mov
repnz
mov
inc
jecxz
and
xor
or
pop
push
lds
mov
mov
icebp
fnstcw
test
fsubl
clc
mov
sub
xchg
push
andb
cmpb
jl
in
jo
data16
adc
inc
fistpll
gs
inc
fiaddl
bound
addr16
pop
test
std
int3
cmp
sub
mov
dec
jmp
inc
xor
or
add
popf
out
adc
adc
ret
jecxz
fistpl
js
mov
pop
scas
leave
scas
loopne
jle
sub
fists
cmp
dec
mov
jecxz
dec
xor
add
aaa
dec
lods
jnp
icebp
cmpsb
clc
js
in
ret
add
pop
mov
stos
add
in
lcall
cmp
jae
xor
inc
xchg
bound
xor
pop
outsl
andl
or
pushf
mov
stos
mov
xchg
cltd
loop
out
push
cli
jae
jno
adc
pop
jg
lds
pop
repnz
out
fistps
mov
in
iret
nop
int3
sub
or
lods
cli
mov
jle
in
mov
push
lahf
jbe
cltd
mov
loopne
inc
jecxz
inc
mov
test
popf
xor
insb
int3
inc
jo
sbb
aam
jle
dec
fst
loop
push
mov
mov
push
adc
mov
dec
cmp
out
xor
into
mov
and
dec
iret
xor
xchg
popa
jnp
leave
push
mov
jns
sub
xor
ret
mov
mov
inc
test
icebp
out
adc
sbb
out
cmp
sub
loope
rcr
cmp
call
sbb
mov
xor
repz
and
mov
mov
add
or
cmpsb
mov
mov
xchg
jp
adc
inc
lahf
xor
or
cwtl
scas
leave
fwait
iret
mov
outsb
aaa
jns
sbb
iret
test
cmp
push
ss
lcall
shll
add
jno
and
aad
cmp
jns
mov
testl
mov
add
pop
sbb
adc
xor
decl
cmp
cmp
lds
mov
pushf
movsb
mov
jge
insl
mov
sahf
sbb
decb
in
sbb
mov
testb
add
cmc
scas
iret
cmpsb
mov
mov
dec
push
aam
adc
negl
push
push
mov
and
xor
xchg
pop
jp
push
xchg
not
and
loope
ja
leave
mov
xchg
or
insl
and
lret
pusha
inc
lcall
mov
xor
and
js
data16
imul
sbb
sub
push
popa
jle
icebp
xchg
inc
out
lcall
pushf
pop
lret
dec
push
pop
cmc
js
add
and
mov
adc
cmp
out
push
lock
stc
adc
pop
lret
pop
sbb
call
push
or
outsb
aaa
push
add
outsl
arpl
dec
cli
xor
mov
insb
hlt
xor
inc
into
aaa
and
cwtl
out
xchg
sub
mov
jecxz
sub
incb
in
loopne
mov
ds
push
xchg
jge
hlt
ret
frstor
loop
inc
xor
and
xlat
cmpsb
insb
sub
push
add
xchg
mov
in
pop
jl
cs
mov
jg
cmpsl
adc
nop
fucom
fwait
out
inc
mov
pop
je
divb
and
int
mov
divb
imul
jmp
inc
sub
call
cld
mov
push
push
es
xor
cmp
and
sahf
sub
hlt
loope
fistl
aam
stos
rcrb
and
int3
push
push
arpl
sbb
shlb
out
mov
ror
xchg
adc
jle
push
loope
mov
arpl
cmpsb
sub
stos
mov
enter
out
cli
cmpsl
xor
and
rcll
jg
inc
push
pop
adcb
mov
xor
or
ljmp
imul
lahf
sub
insb
lret
xor
sbb
inc
xlat
mov
jno
adc
cs
sub
stc
jecxz
pop
adc
dec
test
dec
aam
fistpl
cld
xor
xor
test
pop
xor
adc
roll
or
push
scas
js
fisttpll
js
aam
mov
pop
sarl
addr16
jmp
or
jns
add
clc
push
dec
adc
lret
xlat
loope
cmp
mov
ljmp
fs
cwtl
rorl
mov
std
fwait
xchg
jle
adc
arpl
test
adc
insb
lock
cmp
scas
and
cmpsb
lock
bound
push
test
sub
cwtl
rorl
aad
push
sti
mov
dec
xchg
adc
les
in
fisttpl
mov
daa
sub
aas
cmp
jns
xchg
pop
call
jb
sti
lcall
sbb
cmp
push
dec
jmp
outsl
fcmove
xchg
aad
aad
sbb
lods
or
sub
xchg
inc
test
inc
jo
leave
fists
sbb
lods
fists
xor
sub
nop
stos
pop
adc
pop
xchg
mov
inc
in
xlat
mov
insb
arpl
nop
add
inc
ret
clc
stos
ss
or
leave
or
xor
cltd
push
sti
mov
call
lea
test
das
add
pop
adc
mov
ja
iret
sub
repnz
test
stos
inc
repnz
stos
inc
cltd
jne
add
pop
inc
gs
mov
jmp
push
xchg
mov
popa
push
fisubrs
mov
lds
pop
push
sbb
add
mov
add
xchg
push
mov
push
mov
and
jmp
add
jmp
adc
sbb
sbb
xchg
popf
jge
mov
push
iret
fwait
cmp
loope
mov
inc
xor
xor
mov
hlt
add
jae
inc
pop
cltd
push
jle
adc
mov
insl
test
pop
xchg
xor
enter
loop
sar
sbb
pop
mov
xor
stos
adc
push
cmp
mov
cmovae
in
sub
adc
or
ljmp
dec
lods
mov
adcb
dec
cwtl
insb
mov
rcrb
add
mov
repz
pop
cltd
ret
sub
mov
shll
aaa
sub
jge
sub
fbstp
test
sub
mov
int
movsb
cwtl
insb
and
and
xchg
aam
ja
sub
push
cmc
or
xor
aas
jge
outsb
sub
dec
and
inc
adc
sarl
xor
dec
outsl
add
ficoml
xchg
sti
movsb
shrl
ja
cmp
movsb
sub
jmp
repz
dec
jne
add
lahf
fldcw
cmp
aas
out
sbb
mov
sbb
mov
roll
loopne
xchg
sub
rol
xchg
pop
fisubrs
aas
jae
stos
addr16
stc
pop
mov
mov
cmp
mov
outsb
pop
adc
xchg
pop
into
sbb
sbb
add
dec
pushf
jmp
stos
das
and
scas
outsl
jp
std
pop
rcrb
dec
mov
xchg
es
and
fwait
cmp
scas
pushf
inc
xchg
sbb
xor
imul
fstpt
aam
mov
aad
jo
sub
lock
mov
lret
loope
frstor
dec
mov
and
push
lods
push
out
stos
faddl
ja
xchg
mov
push
sbbl
fsubrs
push
xchg
cmp
stos
subl
mov
cmp
xchg
push
mov
lods
inc
leave
xor
out
nop
mov
adc
popa
adc
add
rcll
or
nop
jae
and
cmp
adc
push
dec
fadd
inc
lret
stc
mov
sbb
fsubl
mov
mov
pusha
ss
rcrb
mov
sub
nop
movsb
dec
es
inc
push
out
js
lret
add
clc
js
test
push
xchg
cld
inc
sub
fs
cmp
fldt
mov
jmp
repz
movl
pop
sti
iret
and
out
jno
fndisi(8087
arpl
scas
jle
push
jb
push
adc
fnsave
xchg
add
imul
xchg
xchg
movsl
and
and
bound
xchg
and
in
xchg
xchg
push
gs
sbb
lret
or
idivb
sahf
inc
cli
pop
push
xor
cs
xor
and
mov
mov
mov
dec
xor
add
rolb
in
stos
inc
pop
lods
cld
sbb
je
aaa
xor
icebp
fwait
cwtl
inc
and
mov
xlat
dec
or
icebp
scas
repnz
popf
iret
loop
add
mov
leave
aaa
inc
push
fdivl
xor
mov
in
mov
pop
dec
fadd
pop
les
stos
jmp
and
ret
enter
inc
inc
and
or
lret
fmul
leave
dec
mov
jae
into
and
mov
sti
sub
push
adc
pminsw
pop
popf
bound
ljmp
lea
test
lcall
mov
mov
xchg
or
roll
mov
jo
ret
push
addb
adc
push
fs
lret
movsb
cmp
test
push
stc
inc
adc
dec
addl
int
adc
jnp
aas
ds
or
fs
jg
jmp
out
stc
inc
pop
ds
bound
jns
jmp
and
pop
jae
jno
repnz
insl
mov
and
lds
lock
sbb
ret
cli
mov
sbbl
cli
cmp
scas
fwait
fwait
mov
cwtl
jmp
cmpsl
ja,pt
dec
xor
lahf
cs
sahf
out
add
sbb
repz
jbe
push
nop
xchg
mov
add
inc
jns
cmp
mov
cmp
pushf
mov
ficompl
hlt
popa
jbe
addb
xchg
xchg
rol
std
fistpl
test
test
aad
leave
clc
mov
push
cmp
mov
scas
or
rcrl
js
push
in
jle
stos
xchg
pop
cmpl
mov
mov
jo
xchg
popa
mov
mov
je
arpl
sahf
test
out
add
mov
fs
xor
or
lahf
jae
scas
ror
xor
mov
daa
mov
aaa
sbb
ret
out
push
lock
movsb
pop
mov
sti
push
sub
test
jmp
push
xchg
mov
push
adc
mov
repnz
pusha
cli
bound
pop
out
nop
loopne
mov
mov
sbb
jns
clc
mov
std
adc
inc
add
xor
loope
add
ret
push
and
jmp
adc
mov
out
popf
lea
add
clc
adc
and
shrl
sbb
pop
xlat
lret
jp
rolb
inc
jp
std
aam
sub
adc
add
in
insb
mov
cwtl
data16
pop
pop
not
xchg
push
mov
negl
ret
cmpsl
push
hlt
xchg
insb
adc
inc
fistps
and
mov
xchg
call
gs
adc
cld
xor
popf
cmp
pop
aas
aas
push
icebp
sbb
mov
or
and
int
mov
cmc
lods
pop
int3
inc
dec
adc
xchg
sbb
adcb
inc
jae
repz
test
int3
scas
add
mov
rorb
outsl
xchg
stos
daa
test
aas
pop
fisubrl
jmp
adc
cmpsb
dec
frstor
bound
loop
cs
xlat
mov
push
jmp
pop
out
cmp
or
pop
sahf
subb
ss
mov
xchg
xchg
xor
push
fstpt
jo
adc
cmp
cwtl
sbb
insl
aam
ret
hlt
mov
out
add
mov
push
shl
pop
mov
or
out
jp
dec
imul
mov
lock
dec
cltd
fldt
and
in
out
mov
cmp
dec
sbb
add
aad
stos
pusha
loopne
outsl
mov
and
push
mov
jns
adcl
fmul
rorl
dec
xchg
insl
aad
pop
mov
andb
mov
jge
imul
mov
push
mov
sbb
enter
push
out
jns
mov
movsl
mov
xor
push
ret
or
xchg
es
decb
xlat
inc
mov
jno
push
jne
sub
cmpsl
sbb
rorl
xlat
inc
mov
aad
and
outsb
test
out
leave
push
jae
adc
sbb
pop
and
dec
popf
cmp
arpl
adc
mov
aam
mov
mov
sar
jmp
dec
fmull
adc
xor
pop
adc
stc
push
jmp
or
mov
lahf
sbb
add
inc
cmp
movsb
adc
es
dec
xor
addr16
or
mov
xchg
add
ljmp
jl
imul
daa
pop
sbb
imul
add
xor
imul
lahf
dec
jmp
bnd
mov
stos
stos
scas
add
dec
scas
call
in
call
mov
out
repz
mov
aam
cwtl
out
mov
add
mov
out
inc
xor
mov
aad
adc
sub
push
cld
mov
sbb
dec
stc
xor
sbb
stc
xor
ret
push
repz
lret
out
sub
pop
pop
push
cmp
in
inc
popa
test
test
aas
dec
cmp
jb
jb
or
lret
mov
xchg
lret
int3
pop
inc
add
xor
jae
mov
push
jl
jp
sub
or
inc
mov
cmp
loope
cltd
jne
sbb
lahf
les
aam
push
xlat
add
mov
jp
xorb
mov
inc
mov
shrb
popf
push
shl
aam
aas
mov
cmp
dec
mov
mov
fldt
add
jecxz
insl
sub
jp
add
or
inc
cs
cld
leave
aam
jno
data16
jo
sub
loope
push
scas
or
call
inc
or
lods
stos
pop
subl
push
shlb
adc
mov
repnz
push
sbb
loop
lea
inc
xor
mov
push
push
mov
inc
jno
mov
lcall
cld
push
sbb
cltd
sub
outsb
and
or
shll
adc
sub
ljmp
popa
lahf
cld
xchg
and
stos
hlt
rorl
push
es
mov
or
xchg
inc
js
clc
cli
inc
fistps
adc
outsl
outsl
mov
je
fcomps
in
movsb
loopne
sti
mov
enter
xor
mov
ljmp
jg
cmpsl
pop
or
jno
jnp
out
push
in
cs
frstor
adcl
push
dec
cmp
mov
stos
pushf
xchg
dec
lret
jno
xchg
mov
lea
repz
lahf
stc
sbb
or
add
jle
stc
dec
or
rorl
sub
sub
dec
repnz
fldcw
dec
sbb
push
cli
mov
mov
cld
test
ljmp
addr16
popf
or
or
ret
add
inc
imul
fiadds
ret
and
idivb
xchg
adc
add
imul
cli
in
mov
aam
in
pop
jge
adc
lcall
jge
fistps
movsl
loop
idivl
cs
gs
jo
ds
push
test
lcall
pop
dec
lcall
xchg
movb
jg
xchg
ja
sub
sub
adc
cmp
sti
insl
outsb
add
mov
push
jb
rep
aad
xchg
fisubrl
jae
adc
iret
pop
mov
inc
pusha
repz
cmpl
jl
jnp
into
push
add
mov
push
xlat
outsl
cmpl
dec
cmc
stos
adc
jmp
pop
push
testl
int
sbb
leave
mov
add
cmp
jne
out
jne
mov
sbb
inc
repnz
dec
cmp
lds
arpl
arpl
adcb
test
icebp
nop
ds
xchg
out
in
movsb
std
jae
nop
jge
push
inc
mov
lods
negl
dec
mov
xchg
mov
aas
xor
into
or
mov
mov
mov
icebp
notl
xlat
cmc
loop
mov
int3
les
mov
int
cmpsl
addr16
xchg
out
jg
stos
push
adc
outsl
pop
mov
inc
and
jp
test
cmp
add
shr
int
lods
fidivs
fldl
pushf
adc
in
iret
sbb
insl
or
jl
lods
rolb
popf
leave
jae
cmp
mov
fisttps
sub
add
jnp
loope
in
fcomps
add
cmc
xchg
dec
xchg
xor
pop
hlt
sbb
loop
cli
pop
or
inc
insl
xchg
loopne
and
sbb
adc
jns
mov
jnp
inc
mov
push
fisubl
cmpsb
leave
mov
xchg
pop
arpl
mov
pop
rorl
mov
mov
xlat
arpl
push
ds
push
sahf
sub
dec
les
jg
push
cltd
rolb
fdivrs
mov
dec
adc
push
mov
into
in
add
lfs
ja
cmp
sub
pop
testb
lret
mov
mov
ja
or
sub
testl
pop
sahf
stos
enter
pop
cmp
xor
sub
ss
cmp
shll
enter
xchg
inc
xor
inc
xchg
jle
and
sub
xor
out
mov
push
addl
sbb
cmc
in
cmp
mov
loopne
out
inc
out
xchg
cs
sahf
sub
mov
xchg
xchg
push
jo
mov
iret
push
mov
loope
movsl
rcl
sub
jae
or
inc
scas
or
mov
add
mov
inc
out
mov
pop
out
gs
ret
mov
cli
insb
xchg
pop
jns
dec
call
ss
stc
push
and
loopne
jmp
jnp
sbb
mov
or
or
or
mov
test
out
rcrb
push
orl
js
stc
stc
push
pop
xchg
mov
and
pop
xlat
sub
inc
or
mov
mov
loopne
popf
out
mov
lret
rorl
data16
movw
adc
in
pop
and
les
popf
jg
cli
ljmp
and
sub
pop
push
xchg
in
int3
clc
nop
sub
mov
in
mov
xchg
jecxz
ret
fdivr
aas
popf
leave
push
push
xchg
sub
fs
jnp
dec
clc
mov
scas
sbbl
dec
stc
cmp
mov
and
ds
sbb
ss
mov
pop
rorl
mov
push
xchg
bound
jnp
sbb
aam
jbe
rolb
fs
inc
dec
dec
jecxz
xor
cmc
sahf
mov
mov
hlt
push
stos
clc
icebp
repz
enter
daa
movsl
sbb
jecxz
mov
jnp
lods
popa
je
movsl
leavew
cs
jle
ss
and
sub
ror
and
repz
xchg
mov
lock
xchg
add
int
stc
shrb
pusha
add
mov
cwtl
push
mov
clc
lret
pop
pop
mulps
lods
fwait
cld
les
lds
sbb
cmp
sub
mov
ja
outsl
jae
mov
xchg
lahf
adcb
mov
jle
in
dec
lcall
jnp
fsubl
or
jo
stc
jb
push
das
iret
aaa
orl
js
mov
int
inc
insl
outsl
inc
add
jmp
sbb
jbe
inc
or
sbb
push
nop
lret
adc
xchg
sub
lods
mov
aaa
pop
les
aaa
mov
lods
jne
jle
jg
fs
mov
sub
shl
lcall
das
add
les
adc
insl
fisubs
cmpsl
popa
mov
inc
dec
xchg
nop
mov
test
lods
jno
cmpsb
push
mov
xlat
add
cli
dec
sub
xor
jb
sbb
push
add
inc
fwait
inc
loopne
mov
fcos
daa
and
jp
pop
and
push
jns
jle
cmp
cmp
sub
cmpsb
push
cmc
xor
push
imul
fwait
adc
push
xchg
cmpsl
xchg
and
sub
mulb
arpl
sub
xor
xchg
pop
rcr
popa
out
push
fcmovb
popf
dec
scas
cmc
sbb
loopne
scas
mov
xor
mov
jg
imul
fwait
jge
push
test
out
ret
lea
sarl
rorl
xlat
jb
cmp
xchg
popa
mov
jge
lcall
movsb
std
arpl
pop
xor
rcrl
enter
lret
cmp
testb
or
popa
aam
iret
das
adc
ss
cwtl
xchg
sub
dec
outsb
notl
jp
xor
xchg
imull
pop
mov
cmp
fisubrs
lret
test
pop
in
loop
jge
fmul
jnp
pop
subl
stos
int3
fs
lea
test
adc
mov
xor
subl
fs
xchg
loopne
movl
scas
int3
cmc
cli
ds
mov
sub
mov
push
shrb
ja
add
dec
test
mov
add
add
xor
ret
xchg
adc
push
inc
adc
pop
mov
jae
scas
ret
fbld
mov
insb
dec
and
fldl
sub
xchg
imul
cmpsb
shlb
fstpt
mov
xchg
aas
adcl
mov
sbb
daa
fldenv
push
test
add
lcall
add
or
loop
push
popf
sbb
xchg
xor
push
lahf
sub
xorb
bsr
inc
repnz
jmp
int
pop
jb
dec
push
movsl
test
std
std
sbb
into
xor
popa
jns
lds
ret
jnp
sub
sbb
popa
sbb
arpl
jle
mov
jbe
jnp
jg
sub
inc
mov
mov
jecxz
mov
jo
out
and
out
push
fnsave
sti
in
cli
loopne
lea
lret
inc
mov
xchg
inc
notb
jo
adc
dec
mov
push
roll
sti
dec
clc
pop
adc
imul
jmp
jmp
aaa
sub
dec
push
ret
fcoml
repnz
in
xlat
rcrb
xor
xchg
popf
lahf
xor
push
insb
nop
lods
jb
ss
push
rolb
aad
aad
adc
dec
ds
xlat
jbe
jbe
xchg
lea
mov
or
int3
insb
adc
outsb
fstl
jmp
lret
hlt
imul
or
dec
aad
cmp
xchg
mov
jmp
jns
add
sub
lea
pop
xchg
dec
jle
and
cmpsl
push
sbb
adc
mov
add
clc
sub
out
into
loopne
sub
insl
push
adcb
push
into
push
pop
aam
cld
pop
xor
push
jp
bound
mov
jmp
imul
xor
mov
adc
out
xor
loope
mov
std
shl
es
clc
nop
arpl
mulps
inc
imul
or
mov
or
sbb
test
inc
mov
sbb
sbb
sbb
cmp
or
movsl
mov
aam
frndint
inc
ret
ja
cwtl
pop
mov
pop
scas
push
into
sub
xchg
and
shrl
aad
hlt
cmp
loopne
jbe
sahf
dec
cmp
push
les
push
lds
fs
popa
shlb
daa
push
mov
jle
pop
xchg
ljmp
imul
jl
addr16
add
or
mov
lods
out
push
xchg
mov
jle
jmp
in
out
mov
ret
movsb
imul
gs
out
and
das
jb
insb
sti
inc
rol
mov
int3
test
push
inc
mov
mov
jge
rclb
jl
or
jb
xor
std
test
into
mov
cs
push
add
dec
push
push
jae
mov
or
in
cmc
sub
push
in
es
lret
movsb
cmp
lcall
sar
insb
sarl
cs
xor
pop
cmp
sti
mov
jae
in
sti
pop
sbbb
inc
and
cmp
or
dec
popf
mov
add
sub
out
sbb
fwait
cmp
ja
cmp
dec
aas
dec
pop
cld
in
pop
in
lret
repnz
rcr
sarl
adc
sbb
insl
sbb
xchg
mov
or
fs
mov
cmpsl
push
dec
dec
das
fbld
std
cli
jge
dec
ja
out
rcll
push
sub
push
push
jle
mov
mov
pop
insb
repz
xchg
outsb
push
jle
movsl
outsb
mul
sub
push
and
inc
int
aaa
aaa
outsb
sub
cmp
xorb
stos
xchg
mov
pop
sbb
fildll
adc
daa
mov
js
push
jae
pop
dec
pushf
lret
xchg
insb
addl
lcall
pop
xorb
addr16
cmp
sbb
mov
cmpsb
and
je
add
mov
pop
jno
outsb
cmp
shrl
mov
mov
xchg
mov
sbb
xchg
xor
cmp
aam
push
popf
lcall
push
lahf
ljmp
mov
xchg
xor
xchg
pushf
pop
pop
jbe
xchg
leave
test
or
or
mov
xchg
mov
mov
or
sub
mov
sarl
mov
pushf
add
jmp
jb
inc
fdivrl
iret
mov
adc
enter
mov
negb
into
mov
fucom
notw
push
jecxz
inc
outsl
mov
int3
jmp
pop
jbe
or
jge
lahf
les
mov
incb
fsts
lods
icebp
hlt
popf
aam
cmp
cmpsl
scas
insb
imul
les
fmull
leave
fs
cmp
cmp
mov
lds
js
and
mov
or
pop
pop
jecxz
mov
in
je
shl
pop
mov
mov
inc
in
scas
mul
pinsrw
mov
loope
and
test
repz
pusha
cmpsl
jl
rol
ficoms
xlat
pop
cmp
jae
inc
mov
pop
les
ror
dec
xchg
mov
push
and
sbb
roll
shr
sub
xchg
sub
cltd
dec
jns
jnp
push
inc
cmp
jns
mov
ja
leave
add
or
pop
mov
std
xchg
mov
and
or
shll
mov
mov
mov
mov
add
sbb
sbb
neg
scas
and
ss
inc
test
jo
sbb
hlt
sbb
sub
xchg
gs
push
pop
jae
shrl
dec
test
jmp
rorb
sbb
mov
lods
ret
fiadds
mov
dec
pop
les
inc
xor
inc
xchg
cmp
ficoms
popa
sbb
sahf
in
or
and
rcll
cmp
jge
es
push
mov
loopne
sbb
loop
add
pop
lods
or
pmovmskb
or
jmp
mov
xor
push
cld
ja
rorb
stos
int3
adc
xchg
or
mov
shll
loop
cmp
adc
and
push
pop
jns
jmp
xor
shll
imul
jg
sub
cmpsb
cmp
cmpsb
dec
add
jl
cltd
or
imul
jp
push
sti
ds
mov
or
testl
and
and
adc
adc
popf
push
scas
out
fcmovbe
mov
dec
cmp
ret
sbb
mov
push
fsts
outsl
popf
div
imul
cmp
inc
cltd
inc
lds
pshufw
push
sbb
data16
cltd
nop
icebp
mov
pop
lds
xchg
ret
and
aam
mov
fsts
add
sub
xchg
popf
push
sub
nop
xchg
push
cwtl
and
adc
cwtl
add
pop
adc
xor
mov
pop
int
lea
testb
loopne
out
out
cmp
push
xor
bound
out
jecxz
sub
cmp
outsb
mov
mov
popa
rcrl
test
mov
mov
or
mov
sub
fdiv
dec
mov
jnp
pop
faddl
cs
pop
adc
xor
add
push
mov
xchg
xchg
mov
adc
inc
mov
pop
out
cmpsl
xor
push
sbb
jo
loopne
mov
push
dec
stc
stos
rcll
imul
push
mov
sbb
cmp
add
xchg
mov
icebp
inc
push
sbb
dec
sbb
jo,pn
das
push
aas
xor
dec
push
xchg
xchg
push
jo
jp
rcrb
xchg
arpl
cmp
ljmp
stc
frstor
or
shrl
in
cmp
fidivrl
loope
cmp
cmp
push
add
and
mov
xchg
inc
mov
cld
fildll
push
pop
aam
stos
or
hlt
xchg
fdivs
adc
jmp
jle
push
jmp
out
fwait
scas
fisttpl
adc
add
pusha
cmp
push
mov
in
xchg
ljmp
xchg
ret
test
add
dec
mov
sbb
out
inc
inc
push
idivl
push
loop
xor
ljmp
outsl
or
test
jb
mov
roll
mov
es
lcall
xor
add
jnp
cmp
test
adc
xor
pop
ja
insl
jecxz
inc
test
addr16
int3
gs
repz
mov
leave
lret
jns
sub
mov
adc
push
jae
push
jge
pop
mov
mov
cwtl
push
sahf
cmp
mov
int
cld
push
ljmp
jae
sub
outsl
sbb
subl
xchg
xchg
fwait
movsb
sub
xchg
mov
out
dec
out
aaa
push
mov
fwait
jnp,pt
ret
or
and
stos
xchg
cli
rcrb
aas
xchg
xor
mov
mov
stos
mov
jg
push
push
pop
aas
sbb
jecxz
inc
sbb
dec
addr16
test
into
test
cld
aad
push
push
push
cmc
xor
or
dec
daa
fdivl
lcall
lret
mov
inc
push
data16
test
cmp
sbb
push
or
xchg
nop
daa
call
sbb
and
aaa
add
sub
mov
sti
or
mov
loope
hlt
sbb
adc
add
lret
inc
dec
loopne
out
hlt
xchg
insb
or
cmp
pop
cmc
mov
add
cmp
add
sub
pop
push
stos
in
cmc
fidivl
xor
sbb
subb
jge
ret
mov
jno
jno
or
aaa
data16
out
sbb
mov
sub
mov
inc
lods
fnstcw
iret
mov
fisubrl
inc
cmpsb
out
arpl
mov
push
sahf
sub
mov
jae
mov
mov
sahf
mov
fs
mov
lods
cwtl
mov
out
jmp
js
in
out
jo
mov
sqrtps
pop
adc
movsl
cli
mov
mov
scas
loop
mov
fdivl
fdivl
and
das
rcll
inc
imul
fs
xlat
dec
sbb
mov
push
dec
and
in
jecxz
add
out
mov
pop
mov
addr16
bound
inc
fstpl
xchg
fsubp
pop
add
mov
pop
jecxz
int
add
mov
push
outsb
sub
ficomps
in
popa
dec
mov
add
iret
sbb
mov
adc
loopne
mov
adc
lods
lods
jecxz
addb
mov
in
ja
cwtl
outsb
stos
test
cmp
mov
adc
jp
mov
sbb
jbe
popa
cmc
addr16
add
leave
test
jg
xchg
mov
scas
les
jmp
cmpsb
adc
jge
cs
push
jecxz
xor
fimull
lret
sbb
iret
cmp
mov
adcb
out
cs
push
sbb
lods
mov
insl
jmp
aaa
mov
and
test
fsubr
ds
add
imul
add
adc
out
xor
and
xchg
xor
pop
scas
pushw
mov
push
je
lock
and
das
sbb
pop
stos
inc
mov
fwait
sbb
mov
or
movsl
filds
sbb
aad
jbe
or
ret
adc
in
xor
pop
mov
sbbb
jo
loopne
cld
jg
sbb
arpl
popf
sahf
cs
dec
fcomip
cbtw
das
cmp
xchg
popf
and
xchg
add
imul
mov
fwait
testb
nop
xor
push
int
mov
in
mov
mov
enter
enter
jge
insb
sbb
fisttpl
mov
cmc
mov
inc
repnz
jne
lods
les
negl
sbb
sub
pop
outsb
sbb
add
adc
dec
and
xchg
mov
push
stos
and
movsb
lods
stos
pop
push
mov
push
cmpsb
test
cmp
das
fwait
and
dec
inc
xchg
add
and
push
repz
cmp
out
mov
add
xchg
cmpsl
out
in
jmp
divl
arpl
sub
out
add
insl
dec
clc
cli
stos
faddl
out
push
adc
sti
cli
test
idivl
inc
divb
push
hlt
daa
fwait
mov
jbe
outsb
popa
lret
pop
and
push
lods
cwtl
scas
cwtl
xchg
cltd
push
fistl
or
std
scas
sub
mov
mov
sbb
dec
aad
jge
adc
scas
and
outsb
test
daa
iret
sbb
mov
inc
data16
mov
dec
dec
ja
pushf
ficompl
movsl
or
push
ds
sub
cmp
pop
pop
pop
jne
cmp
outsl
xlat
adc
and
xchg
pop
imul
jnp
xchg
leave
push
mov
cld
adc
fiadds
or
imul
add
lret
icebp
lret
inc
imul
push
pushf
push
cmp
pusha
sbb
xlat
sbb
push
xchg
pusha
sub
xchg
inc
fistpll
mov
inc
icebp
int
call
jmp
mov
es
xchg
ja
addr16
jne
sbb
mov
sub
fsubp
cmp
push
jle
out
push
int
movsb
aam
pop
jg
sub
dec
into
fucom
push
icebp
adc
shlb
lahf
imull
xchg
jae
push
mov
mov
xchg
sbb
xchg
mov
jnp
and
xchg
mov
cmp
movsl
fwait
add
sbbb
in
xchg
aad
test
xor
push
xchg
push
cmp
loopne
pop
xchg
and
sub
inc
je
out
aas
sub
xor
xchg
mov
add
cs
pop
mov
cmp
jae
mov
lds
cli
mov
push
fdivrl
push
inc
test
cmpsb
divl
rorb
xchg
scas
inc
sahf
and
shrb
outsb
sbb
jge
inc
mov
lods
call
push
adc
pushf
out
mov
inc
cmc
mov
or
mov
fcomip
mov
add
xor
rol
shlb
inc
xchg
push
mov
dec
pop
xchg
imul
ret
fstl
sub
into
lret
add
aad
xor
imul
decb
cmp
out
insb
outsl
dec
mov
jns
gs
pop
out
mov
and
mov
dec
sbb
xchg
lods
mov
mov
and
inc
inc
scas
out
cmp
jns
movlps
shrb
xlat
and
pop
push
out
cwtl
push
je
fnstsw
xchg
sub
popa
cmpsb
and
nop
cmp
and
cmpsl
sbb
pop
movsb
dec
fnstenv
roll
mov
fwait
push
dec
and
or
in
dec
push
cmc
jmp
xchg
xor
les
daa
iret
pusha
das
outsl
movsb
sarl
pop
xorl
mov
in
aad
sub
cs
mov
pop
daa
pop
scas
sub
push
pop
push
ss
imul
xchg
jl
xchg
insb
test
push
outsb
js
cmc
push
mov
mov
adc
sub
ret
add
cltd
inc
ss
int
sti
loop
shlb
sbb
add
pusha
jg
out
test
pop
xchg
inc
cld
out
jae
lahf
arpl
lock
sti
jmp
enter
xor
and
daa
fwait
test
ja
cmp
sbb
dec
inc
lahf
inc
cmc
rclb
repz
pop
inc
push
xchg
jle
gs
adc
jbe
xlat
popf
adc
into
cpuid
or
shlb
xlat
jo
outsb
out
sub
sbb
frstor
mov
enter
mov
dec
out
outsb
das
pushf
add
int
stc
lods
mov
loope
jae
pop
nop
mov
cs
jl
into
pop
pop
lods
sub
sub
pop
hlt
push
cmc
hlt
fbstp
sarb
push
enter
roll
add
mov
sub
dec
loop
loopne
mov
xchg
xchg
cli
cmpsl
mov
out
mov
push
jns
bound
mov
lods
clc
mov
sub
jne
and
lret
test
fsubrl
in
nop
mov
hlt
mov
xchg
push
mov
dec
nop
loope
lea
xchg
cmp
lret
pop
fldenv
lret
ja
add
and
jae
jnp
stos
jae
inc
popf
imul
aaa
mov
popa
sarl
adc
xor
cmpb
mov
push
cmp
mov
mov
jl
pop
pop
pop
out
jp
and
in
cmpsb
lea
loop
je
rcrl
orb
sub
cmpsb
inc
nop
aas
lcall
out
test
scas
push
jge
aam
cmc
or
inc
xchg
adc
leave
sbb
stos
jnp
outsb
xchg
pusha
dec
js
dec
pop
addr16
ret
testl
push
mov
into
scas
push
xor
lds
test
mov
test
aas
lahf
push
es
mov
cs
pop
lret
pop
mov
mov
test
popa
jnp
rcr
and
xor
pop
and
andl
sbb
mov
cmpsl
dec
roll
test
jne
ljmp
xchg
in
stos
mov
pop
fbstp
mov
adc
mov
test
insb
mov
or
mov
and
fiaddl
pop
xor
mov
sbb
push
ss
xchg
fldl
stos
cli
cli
sub
mov
notb
cmc
xchg
out
in
sti
das
fstpl
into
fldenv
shl
xor
jae
movb
pusha
dec
sbb
lahf
in
in
xchg
xchg
scas
mov
jns
or
xchg
movsb
aas
mov
or
fnstcw
nop
mov
dec
lods
mov
add
jle
ds
int
lea
push
mov
lds
push
jg
loop
and
mov
addr16
xchg
cmc
xor
sbbb
lock
pushf
cmc
push
jnp
enter
push
add
addr16
pop
shlb
scas
mov
xchg
sbb
mov
cmc
hlt
aam
sub
xchg
mov
mov
and
sarl
and
xor
and
pusha
push
sbb
lea
adc
mov
fstl
js
iret
add
ret
popf
popf
ljmp
push
cmp
lahf
mov
lods
adc
pusha
mov
test
fstpt
adc
movsb
pop
sbb
sbb
jae
cmp
iret
lcall
ja
and
addr16
xlat
dec
dec
inc
mov
and
inc
lds
rcrl
sahf
jle
fstl
xor
inc
lcall
push
add
insb
stc
lcall
cld
out
push
sbb
mov
inc
lods
inc
add
aam
mov
loopne
arpl
adc
jbe
jno
insl
mov
mov
fistl
call
sbb
sbb
xchg
sbb
xchg
andl
adc
xchg
cmpl
xchg
mov
notb
mov
and
mov
adcl
push
pop
or
cwtl
rol
hlt
iret
sbb
adc
sbb
mov
mov
aaa
dec
or
mov
fistpll
popa
scas
movsl
jp
out
mov
mov
into
movsl
imul
fbld
lret
iret
xchg
jmp
xchg
fdivrs
outsb
out
clc
movsl
pop
mulb
insb
icebp
in
jg
rorl
adc
sub
cs
aas
out
jne
loope
xor
jecxz
iret
or
dec
push
scas
fimuls
pop
or
stos
push
jb
jmp
jecxz
arpl
iret
sub
arpl
aas
out
enter
lods
mov
add
dec
push
xor
mov
int
negb
lahf
xlat
cmp
fsubs
gs
cwtl
loope
sub
add
shlb
addr16
repz
mov
in
mov
in
xchg
adc
icebp
cltd
lret
mov
xor
mov
sub
in
sbb
call
push
loope
jne
xchg
push
mov
mov
imulb
hlt
mov
pop
je
jle
sub
xchg
pop
sti
push
sbb
sub
mov
xchg
sarb
jmp
pop
iret
mov
xor
or
ds
leave
jbe
dec
dec
insl
and
sbb
xchg
pop
fabs
data16
xchg
xchg
pop
mov
outsl
xchg
pop
cmp
lods
fnsave
shl
fmull
cmp
sbb
aam
fisttpll
xchg
int3
or
rcr
rcll
push
popf
pop
push
out
ss
inc
xchg
sbb
and
movb
aam
outsl
jb
mov
fsubrl
insb
imul
mov
popl
sub
pop
jl
stc
sub
iret
lds
int
sbb
movsb
cmp
xor
cld
bound
in
mov
push
add
push
inc
or
and
push
mov
nop
jecxz
popa
loope
pushl
push
in
push
lock
jae
inc
sbb
pop
jnp
push
insb
scas
subl
scas
xchg
or
movsl
jb
rcrl
es
orl
scas
ficomps
mov
jno
test
movsl
dec
add
jno
mov
push
imul
sarb
out
and
fcoms
outsb
mov
jae
inc
fimull
sub
mov
pop
shrl
imul
shl
pop
in
jg
and
and
lock
push
leave
sti
outsb
pusha
sbb
repnz
fwait
cmp
cld
js
lds
and
fwait
shrl
push
outsl
mov
inc
repz
test
or
fbld
cmp
xchg
lcall
pop
roll
push
repz
pop
rcll
pop
jne
scas
add
xchg
fld
mov
mov
cld
lds
pusha
mov
scas
jo
scas
jmp
cli
jg
mov
mov
add
adc
mov
cli
dec
mov
mov
pop
adc
add
dec
or
pop
sti
dec
stos
xchg
or
outsl
pop
mov
or
sub
test
ret
xlat
sub
push
mov
fisubs
xchg
repz
cltd
nop
in
jae
rcr
xor
mov
lods
stc
mov
mov
aas
lahf
push
icebp
loope
cmpl
das
fsubl
and
testl
jnp
fistl
adc
outsb
lock
test
cs
pushaw
icebp
ds
fucom
arpl
push
es
jo
lret
mov
stc
pop
sbb
mov
test
testl
arpl
sbb
shr
stos
out
ja
dec
cmp
inc
outsl
adc
adc
in
adc
jle
aam
xor
add
lods
shrl
rcr
les
dec
pop
lods
in
jo
cmp
pop
repnz
mov
and
sbb
lret
adcb
add
cmp
xchg
ss
fwait
dec
cmc
dec
xchg
or
jmp
mov
lahf
pop
frstor
inc
mov
js
fdivrs
fsubrs
sub
mov
aam
incl
adc
xor
mov
push
out
pop
sub
sbb
aaa
in
bound
mov
aas
sub
jmp
inc
xchg
pusha
or
sbb
push
mov
in
adc
dec
and
rcrl
insl
mov
nop
push
lahf
or
jo
add
ljmp
xor
mov
out
fstl
jbe
adc
int
loop
sbb
pop
out
fstpl
icebp
push
and
push
in
add
inc
pop
lcall
mov
lods
mov
mov
fprem
cmpsl
jne
lods
out
pushf
sbbb
push
hlt
hlt
mov
arpl
mov
dec
sub
lods
and
xlat
out
jge
push
ljmp
popa
sbb
fistl
andb
out
and
sub
ds
dec
push
fmuls
ljmp
adc
pop
in
mov
mov
fbld
in
push
add
xchg
clc
bound
xchg
xchg
pop
pop
xor
inc
and
sub
push
pushf
push
je
mov
loop
into
mov
cmp
clc
pusha
nop
clc
mov
mov
mov
push
std
lods
mov
push
sub
movsl
add
push
mov
xlat
repnz
pusha
sti
push
std
xchg
into
movsb
int3
sub
aas
loop
and
sti
mov
call
std
mov
inc
outsl
and
mov
daa
inc
call
mov
jo
mov
dec
mov
mov
cmpsb
xchg
push
pop
addl
std
imul
or
cmp
outsb
int3
mov
inc
and
push
int3
andl
or
sahf
and
xchg
clc
into
cwtl
pop
imul
push
inc
sbb
lret
testb
mov
leave
scas
pusha
push
repz
dec
adc
xor
or
ja
ja
xchg
pop
fcmovb
jmp
mov
shlb
popf
add
adc
orl
test
pop
dec
out
subl
or
ror
jl
cmpsb
push
and
push
ljmp
jle
cli
aam
inc
or
xor
jmp
mov
adc
sarb
sbb
cmc
adc
adc
sub
and
fwait
and
pop
cmp
aas
sarb
adc
jmp
cwtl
pop
jl
add
xor
addl
jns
pop
cmp
lods
dec
pop
scas
test
mov
gs
jle
divl
cld
mov
sbb
jecxz
cs
stc
hlt
sbb
out
shl
out
es
fs
jno
cmp
mov
jne
mov
push
je
push
and
mov
xchg
xchg
mov
and
gs
or
jl
inc
jb
stos
sbb
fsubrs
push
jl
mov
das
bound
inc
sub
inc
mov
push
rorb
mov
xlat
repz
int
adc
imul
sti
push
test
test
stos
and
daa
lcall
lahf
das
std
mov
mov
lcall
jns
inc
jnp
mov
pop
xchg
out
das
inc
jp
inc
push
push
mov
cmp
jge
push
scas
sub
jle
ja
add
popa
push
ret
dec
or
sbb
push
or
dec
jmp
arpl
push
xor
rcl
orl
ss
clc
push
inc
or
sahf
js
pop
push
jb
sbb
imul
dec
xchg
xor
mov
xchg
shlb
jp
dec
sti
test
jg
pop
xor
xsha256
and
call
popf
or
cmp
call
cmp
out
in
mov
adc
imul
shlb
arpl
or
cld
push
pop
cmp
ds
mov
and
in
adc
pop
sbb
mov
mov
push
dec
xor
xchg
std
idivl
cmc
sub
loop
imul
inc
sub
or
aam
test
push
inc
fstl
xchg
push
push
jl
sbb
jae
fbstp
add
add
aam
mov
inc
out
ror
mov
xchg
faddl
push
stos
iret
int3
dec
mov
idiv
cmp
jp
pushf
lock
cmpsl
xchg
jmp
into
cmp
sbb
pop
lret
iret
ficoms
push
xchg
in
call
jmp
push
ror
mov
jbe
dec
shll
cld
repnz
jb
pop
jmp
out
xchg
leave
shlb
sahf
sub
popa
sbb
lahf
imul
ss
ror
cmp
sbb
stos
jmp
push
sub
xchg
outsb
mov
jnp
lock
xchg
dec
lret
xchg
insb
stos
sub
andl
inc
dec
mov
jne
gs
cmp
cmp
jno
orb
xchg
call
add
fadds
add
push
movb
adc
mov
xchg
hlt
xchg
in
push
lahf
jmp
inc
ja
fsubrs
in
push
pop
jns
pushf
bound
sbb
sub
popf
cmpsb
into
hlt
or
les
jp
cld
xchg
loope
lret
mov
jle
daa
mov
test
bound
xchg
jno
cmc
xchg
enter
pop
popf
adc
std
fiadds
and
jp
xchg
ljmp
cmpsl
xchg
orl
cmp
scas
arpl
xor
mov
iret
je
inc
or
pusha
push
andl
pop
push
fwait
xchg
or
loopne
lds
repnz
mov
sbb
mov
cmpsl
aaa
lods
mov
xor
pusha
jnp
mov
movb
or
xor
aam
hlt
das
xor
inc
jmp
hlt
lea
sbb
mov
sar
sahf
add
pop
loopne
aaa
mov
loope
cmc
pop
loop
push
insb
xchg
mov
mov
sbb
rcll
stc
les
xchg
cs
ss
out
bound
aam
jne
mov
mov
cmpsl
fcoms
shrb
cli
pop
test
clc
mov
adc
xor
mov
fst
xchg
mov
sub
ss
dec
jmp
imul
test
jae
fs
mov
push
cwtl
push
cli
dec
mov
arpl
mov
xchg
bound
sbb
sbb
jno
scas
ss
mov
cmp
pushf
sub
call
fmul
pop
lods
ficompl
dec
cs
sbb
and
add
daa
andl
in
mov
mov
add
out
mov
xor
fsubl
fldcw
inc
add
mov
ret
out
inc
mov
std
sti
imul
sbbb
mov
mov
loopne
in
mov
lea
jb
arpl
shll
mov
lahf
mov
fwait
in
mov
icebp
sbb
add
cmp
pop
lods
mov
pop
mov
mov
or
mov
sub
push
sub
nop
hlt
mov
decl
mov
leave
ficomps
mov
add
mov
adc
das
cld
inc
aaa
pop
add
fdivrs
loop
and
or
mov
data16
jae
test
subb
xor
push
xor
add
inc
inc
aad
andl
fdiv
into
fwait
shlb
mov
fdivrl
xchg
mov
cmpsb
push
and
repnz
mov
lods
xchg
call
push
int
movsl
insl
jnp
add
mov
mov
mov
add
sub
push
push
add
adc
jle
loopne
pop
scas
jno
inc
dec
pop
fmuls
push
enter
mov
dec
add
pop
into
xor
push
sarb
jmp
lret
xchg
push
hlt
ja
shlb
fisubrs
andl
stc
es
dec
out
xor
lea
mov
adc
and
cmp
inc
pop
dec
adc
pop
push
xor
jp
pusha
movsl
pop
xlat
pop
jle
jle
inc
adc
and
push
mov
jae
xor
cmpsl
repnz
aam
or
movsb
mov
mov
shrb
inc
sub
lds
jle
jne
pop
jno
ljmp
rcl
lods
add
dec
sbb
aas
jmp
repnz
cli
push
mov
je
jp
push
jno
imull
lock
insl
divl
test
and
inc
add
mov
cltd
mov
decl
push
subl
cmp
fstl
rcrl
jae
lahf
lock
imul
ret
add
mov
pusha
xor
test
dec
or
leave
dec
outsb
inc
mov
or
cli
leave
and
adc
lea
not
aaa
sarl
cmpsl
xor
or
add
fnsave
roll
xchg
das
outsb
xchg
cmp
push
dec
mov
fcoms
sub
inc
dec
jl
jecxz
idivl
imul
dec
lret
enter
hlt
pop
and
shlb
dec
xchg
orb
dec
int
pop
push
jle
lock
lret
outsb
movsl
mov
sbb
or
pop
mov
sbb
cmp
and
sub
inc
cs
mov
sahf
lods
shl
out
call
push
rcl
xchg
shrl
or
sti
jle
xchg
mov
mov
rorb
test
push
cld
xlat
popf
aam
ficomps
lds
imul
push
jl
lds
or
aaa
pop
rclb
and
xor
xchg
cmp
out
iret
adc
sahf
ss
cmp
jle
lret
fs
bound
sbb
xchg
add
test
lahf
push
pop
rcr
sbb
push
ficoml
stc
call
shr
jge
inc
and
xchg
xchg
sbb
mov
inc
fcmovbe
test
inc
or
push
xchg
fstps
xchg
jbe
pushf
cwtl
pop
ljmp
and
pop
inc
orl
push
push
jb
or
dec
jp
jb
ret
fists
sbb
pushf
cmpsb
scas
mov
jne
cli
cmp
adc
xor
popa
test
adc
push
jecxz
dec
sahf
jne
lods
push
inc
mov
mov
out
sbb
jno
adc
lret
mov
xchg
inc
cmpsb
push
pop
pusha
push
add
clc
lret
cs
or
pushl
pop
adc
lret
aaa
cmp
dec
mov
sbb
jmp
or
inc
orb
nop
pop
push
push
lock
mov
xchg
dec
or
les
rcrl
and
sub
je
fistpl
fcmovnbe
adc
sbb
mov
lods
lret
stos
outsb
and
ss
cmp
xor
mov
push
xor
loope
fs
and
pop
pop
pop
pop
sbb
sbb
and
cmp
imul
aas
pop
incb
sub
int3
fsubp
add
and
dec
popa
call
dec
adc
sub
outsb
clc
shll
shrb
mov
xchg
add
mov
or
add
mov
scas
mov
push
mov
adc
ret
shll
out
popa
xchg
or
jle
ljmp
nop
mov
and
xor
add
pop
xor
enter
orb
jg
push
xchg
out
push
rcl
mov
shrb
mov
lret
or
out
mov
into
inc
sub
insl
subl
imull
cmc
jo
push
add
std
push
xor
jne
jnp
fdivrl
cmp
cmc
pop
mov
iret
xchg
sub
cmp
pop
cli
hlt
rcrl
adc
scas
jno
jb
test
mov
popa
mov
mov
or
mov
jge
jg
or
mov
push
push
iret
add
mov
movsl
inc
lods
hlt
mov
xchg
sub
rorb
shll
das
fimuls
cld
das
xor
std
pop
fbstp
rol
xor
jecxz
ja
aad
sahf
aam
dec
and
cwtl
cld
fmull
arpl
jne
push
imul
mov
xor
ftst
cwtl
xchg
das
jno
sub
outsb
repz
dec
mov
lahf
mov
inc
xor
sub
jne
in
xchg
xchg
stos
loopne
rolb
stc
and
add
lahf
push
jmp
aad
inc
cld
std
mov
sbb
jbe
push
pop
pop
mov
push
inc
cli
fbstp
in
sbb
pop
inc
cltd
dec
scas
lock
cld
cmpsl
mov
rolb
in
xorb
mov
inc
sbb
pop
clc
mov
push
pop
cmc
xchg
or
arpl
les
or
xlat
add
adc
fcmovnu
jmp
sub
leave
movsl
icebp
shll
out
loope
cs
xchg
stos
xchg
or
ret
push
jg
loop
dec
inc
clc
jae
inc
push
adc
sbb
lock
pop
lret
lock
xor
bnd
pop
xlat
repz
shll
cmp
sti
sbb
mov
insl
inc
mov
loopne
adc
hlt
outsl
loope
xor
std
mov
outsl
inc
les
aas
cmc
lods
fs
in
es
ficoms
pop
sub
and
adc
dec
daa
push
cli
aas
vpmovsdw
cs
call
int
add
imulb
pusha
jg
shr
jno
outsl
sub
aas
or
sbb
daa
xor
mov
xlat
fcoml
and
sbb
ficoml
mov
adc
mov
inc
cld
dec
sub
nop
add
iret
or
push
divb
jno
in
xor
push
mov
fcmovu
rclb
popa
mov
push
sbb
rclb
ss
pop
ljmp
add
divps
ret
xchg
ja
xchg
jno
scas
mov
test
jnp
test
mov
or
stc
mov
adc
mull
xchg
scas
xlat
xor
xchg
add
decb
adc
dec
pop
mov
dec
jno
add
mov
jle
pop
pop
mov
cmp
xchg
dec
push
insb
jne
push
enter
adc
shrb
ret
xor
cli
dec
into
or
push
dec
das
cmpsb
jle
xor
mov
divb
jecxz
test
or
lea
add
inc
enter
jo
in
sbb
mov
in
jle
cmpsl
pop
in
pushf
mov
pop
dec
pop
in
dec
mov
fidivrs
mov
fwait
test
pop
enter
divb
cmpsb
dec
or
out
sub
lret
inc
call
pop
jmp
pop
dec
jg
repnz
test
cmc
push
aas
inc
mov
xchg
pushw
loop
dec
inc
push
sbb
sbb
cmpsb
fiadds
xor
or
enter
je
mov
dec
nop
in
lods
mov
push
dec
in
fsubrl
popf
cmp
hlt
pop
inc
jae
mov
jmp
xor
push
jp
mov
in
pushf
sub
push
mov
and
sbb
push
movsl
jle
sub
and
push
mov
push
shl
and
fwait
je
arpl
in
and
enter
pop
inc
jecxz
mov
xchg
add
inc
sbb
enter
ds
cmp
movsl
addb
jmp
adc
push
imul
in
or
ret
cmp
push
subl
rcll
adc
arpl
cmp
imul
incb
daa
lods
add
push
ret
movsl
addr16
adc
iret
scas
and
popf
int
jno
out
and
sub
in
cs
mov
rcrl
sbb
sbb
es
sbb
cmp
or
js
sahf
cmp
fs
mov
ficoms
pop
inc
push
gs
dec
pushf
xchg
popf
pushf
mov
mov
sub
popf
push
or
or
ds
push
xor
mov
stos
out
inc
pop
loopne
xchg
mov
pop
pop
mov
pop
inc
xchg
mov
inc
aad
sbb
insl
addr16
and
add
rorb
sbb
enter
flds
nop
push
enter
jno
test
push
mov
cmpsl
aam
nop
mov
inc
stos
add
xor
hlt
popf
popa
or
cmc
sub
aas
test
push
and
push
movsb
test
add
pop
jb
fisttps
pushf
xchg
inc
nop
pop
in
popa
adc
inc
and
inc
sub
push
dec
repnz
frstor
jae
inc
bound
out
cmp
mov
lcall
in
push
dec
mov
stos
sub
outsb
pop
stos
out
mov
add
add
mov
in
in
cmc
inc
aam
scas
pusha
scas
sbb
xor
adc
in
aad
and
add
add
outsl
leave
jo
add
fsub
adc
push
or
lods
hlt
mov
aaa
fstl
jl
push
pop
aam
and
ficoml
pop
loope
add
inc
lret
aaa
stos
cld
enter
cli
addr16
arpl
add
std
cwtl
lcall
test
cmp
xchg
mov
cmp
adc
jg
jecxz
push
or
mov
lahf
test
in
and
cmp
popa
es
and
bound
aad
fcomi
sub
mov
sbb
mov
out
dec
cmp
fcomps
mov
repnz
jmp
xor
aad
pop
adcb
cmc
xlat
xchg
pop
not
jmp
xchg
cld
and
test
in
xor
scas
mov
mov
imul
sbb
dec
hlt
shr
ret
outsb
xor
and
push
in
or
mov
in
lods
cmp
loope
pop
sub
rclb
cmp
aad
test
gs
xchg
loop
daa
rcll
rcrb
jo
xor
pop
dec
out
sub
xor
cs
dec
leave
ss
dec
inc
bnd
lcall
mov
ret
stos
imull
mov
dec
pusha
mov
dec
fstpl
ja
call
inc
sub
cltd
in
and
mov
mov
cmp
push
cmp
popa
push
in
mov
negl
test
lea
fidivrs
ficompl
ss
mov
push
imul
lock
test
xlat
jb
adc
mov
outsl
sbb
xchg
jb
repz
push
push
hlt
pop
push
mov
fcoms
and
pop
std
shrb
test
outsb
mov
js
lret
jo
push
inc
ss
xor
ljmp
inc
xchg
mov
fildl
ljmp
xor
push
mov
aam
dec
inc
pusha
inc
popa
andl
mov
and
cmp
ror
nop
push
xchg
xchg
lea
jg
daa
push
in
push
out
test
jmp
sub
cltd
xchg
cmp
cmpsl
xchg
pop
sti
adc
mov
repz
inc
in
sub
push
sub
pop
xchg
sub
js
stos
popf
dec
lahf
popa
xor
xor
stos
fistps
mov
mov
mov
jp
incb
add
jae
rcll
lret
nop
mov
rcl
push
pop
idivl
xchg
cwtl
mov
stc
dec
int
or
pusha
mov
add
sahf
fidivrl
dec
mov
mov
sbb
cltd
loope
push
adc
mov
icebp
xchg
mov
mov
pop
cli
fucomp
push
lock
icebp
loop
mov
mov
adc
or
loope
mov
lock
adc
arpl
push
mov
or
and
outsl
adc
mov
jg
xchg
subb
lea
cs
jne
divb
cwtl
jl
fcmovne
mov
lret
lahf
push
inc
repnz
sub
sbb
xchg
sub
cmp
imul
jnp
inc
iret
shrb
pusha
mov
aad
push
push
jge
sbb
outsb
imull
in
mov
mov
fcomi
lret
shll
mov
dec
xchg
cwtl
stos
insb
lea
sbb
push
std
adc
xchg
shlb
pop
out
cld
lfs
shrb
lods
rol
daa
outsb
pop
ret
rclb
test
jle
hlt
sub
aad
scas
adc
adc
outsl
out
in
add
lcall
bnd
xor
and
jecxz
cmpsl
les
push
jmp
scas
push
xor
addr16
insl
pop
inc
outsb
inc
ficomps
xor
or
das
insl
out
add
jl
xor
cmc
lcall
mov
pop
data16
sbb
into
lds
int3
pushf
xchg
sbb
lcall
dec
lods
out
in
lock
push
loopne
lock
jo
mov
loopne
sar
out
jno
push
popf
jl
sbb
jle
lods
mov
mov
lods
jb
pop
mov
push
negl
add
lds
push
or
mov
jl
adc
dec
dec
sbb
jno
rcrl
sbb
jns
idivb
cmp
jae
adc
hlt
fldl
xchg
xor
pop
pusha
dec
jle
imul
xlat
es
mov
repnz
fucomip
movsb
jecxz
dec
lcall
cmp
hlt
js
add
mov
cmp
daa
sub
test
sarl
int3
mov
xchg
test
aad
sub
cltd
popa
movsl
mov
mov
lods
jno
cmc
daa
push
cld
std
rclb
inc
rcll
testb
mov
sbb
stos
call
test
mov
mov
out
inc
hlt
pop
shlb
jmp
mov
adcb
pop
gs
adc
jle
outsl
lods
push
add
icebp
test
jns
js
in
push
cmp
push
and
mov
pop
rolb
cmp
sub
pop
in
adc
and
and
ja
icebp
cwtl
js
mov
loop
pop
into
mov
movsl
ret
fisttpll
lods
icebp
int3
enter
and
pop
popf
and
adc
jo
ljmp
pop
stc
mov
jns
popf
bound
rcrl
adc
jbe
xchg
mov
mov
mov
mov
adc
addr16
xchg
add
jl
or
pop
out
shr
or
mov
test
mov
es
mov
fisttpl
xor
outsl
inc
xchg
in
test
mov
and
fs
divb
adc
xor
pushw
jne
push
pop
xchg
pop
scas
adc
mov
arpl
lahf
lock
push
mov
out
push
add
and
push
mov
aaa
mov
ljmp
call
pop
orl
mov
test
mov
mov
dec
add
mov
stos
mov
loopne
mov
test
xchg
stos
dec
movsb
loope
jne
add
fisttps
and
xchg
es
gs
clc
mov
jnp
in
lahf
lods
cltd
mov
stc
lock
mov
in
rcrl
stc
lds
aam
stc
push
popa
jne
js
xor
lahf
cmp
ret
dec
loop
andl
cmpsl
or
fs
outsb
imul
adc
cli
push
xor
sub
call
mov
jns
cmp
xor
mov
mov
ret
clc
daa
scas
adc
pop
xchg
int
pusha
and
and
not
ljmp
and
filds
dec
es
popa
cs
push
int3
xchg
and
js
lahf
cmpsb
and
push
xor
lahf
fisttpl
dec
lahf
iret
push
mov
cld
push
push
movsl
push
ljmp
dec
sub
lret
gs
call
xchg
xlat
jnp
addl
push
and
aam
lahf
lret
arpl
ffreep
mov
daa
and
test
pop
push
leave
or
jle
sti
fsubrs
jo
xchg
scas
push
xchg
ret
push
mov
repnz
aaa
push
push
mov
out
daa
push
sub
clc
test
mov
and
lock
xor
and
add
dec
cmp
add
xor
mov
in
pushf
adc
mov
subb
dec
xlat
in
dec
mov
mov
incl
lahf
out
mov
sar
sbb
dec
enter
and
adc
sbb
mov
pop
imul
fcos
mov
insl
out
icebp
inc
scas
inc
push
lcall
dec
xchg
inc
push
pop
loopne
dec
cmp
imul
outsl
pop
mov
jb
sbb
xlat
sbb
jg
je
imul
lret
daa
pop
stos
ljmp
arpl
mov
and
lods
dec
in
xor
ret
push
lret
mov
ds
dec
jmp
or
int3
jecxz
imul
imul
push
shll
js
gs
loope
notb
jle
in
call
xchg
arpl
popa
pushf
mov
test
aad
mov
sbb
repz
add
mov
lods
js
lea
out
sar
ds
pushf
sbbl
stos
inc
test
gs
or
fnstenv
add
sbb
adc
add
cltd
movsb
push
pop
fwait
or
sahf
outsb
ret
xor
in
adc
lahf
mov
leave
icebp
xor
sub
ja
jb,pt
adcb
jb
push
xchg
xchg
jbe
std
push
daa
mov
push
mov
inc
cmc
jmp
lods
fcomp
adc
mov
mov
jns
pop
mov
cmpsl
jge
aam
sahf
push
leave
jle
ja
jge
ret
sub
inc
inc
and
inc
jb
xchg
out
inc
jae
pusha
mov
cmp
pop
aas
fwait
lcall
sbb
arpl
fldcw
lods
lock
xchg
mov
outsl
inc
shr
xor
sbb
cmp
push
dec
pop
cmp
mov
inc
jmp
fldcw
pop
shlb
push
rcll
pop
sahf
mov
inc
or
loop
repz
test
loope
aas
repz
fwait
mov
aas
mov
xchg
jle
lea
inc
xchg
fiadds
data16
dec
push
gs
pushf
ret
or
lods
and
or
nop
sub
cld
mov
sbb
adc
jp
sub
or
mov
sub
jne
in
push
das
add
cmp
pop
xchg
jp
inc
lcall
sbb
fldt
mov
ficoms
or
mov
mov
push
les
fstl
jnp
ds
mov
cmp
nop
stos
push
xchg
icebp
out
xchg
std
inc
sbb
in
mov
mov
xor
xchg
clc
stc
ret
pop
adc
sbb
fisttpl
pop
loop
jb
pop
ds
mov
add
cmp
rcrl
jmp
ret
enter
push
leave
mov
add
inc
mov
cmc
int
test
inc
insl
iret
jmp
in
mov
jp
pop
nop
dec
pop
popa
mov
iret
orl
mov
add
sbb
sbb
pop
ret
mov
insb
xor
adc
sub
dec
icebp
mov
sub
add
nop
mov
das
test
inc
xlat
mulb
add
cmova
xchg
adc
mov
and
out
lcall
outsl
scas
pop
mov
mov
fdivrs
xor
sbb
jg
in
dec
nop
cmp
sub
cltd
seta
ret
test
jmp
pop
adc
ds
in
in
lahf
pop
sub
or
fisubrl
xor
mov
dec
sub
loopne
jne
adc
jae
sub
jae
loope
shlb
cmp
push
cltd
inc
pop
cmp
pop
jmp
int3
mov
fcoms
sub
fdiv
pop
imul
rcl
add
xor
jl
dec
dec
dec
pop
dec
xchg
pop
adc
test
mov
icebp
pop
js
pop
push
fdivrl
stos
dec
inc
dec
popf
int3
test
add
cld
add
mov
dec
push
rorb
sub
cmpsl
mov
jb
push
outsb
mov
adc
and
sub
rcrb
loopnew
loopne
xchg
loop
je
mov
cmc
sbb
lea
fimull
or
sub
shlb
cmp
pop
int3
xchg
clc
jp
xor
divb
xor
fdivs
dec
test
jb
xor
gs
in
pop
sub
mov
lea
push
daa
aas
mov
and
cwtl
ret
add
xor
add
cli
mov
movsl
mov
xchg
in
jl
cli
xor
jns
int
pop
pop
bound
das
jp
mov
jno
je
imul
out
inc
sti
sbb
stos
je
cmp
xor
cmp
pusha
mov
mov
mov
imul
inc
rcr
or
or
inc
adc
mov
gs
mov
mov
cmpb
stc
ffreep
jbe
insl
ds
cli
dec
pushf
scas
into
orl
and
es
xchg
xor
nop
add
jae
cmp
mov
fstl
pop
inc
jmp
repz
call
lret
fsubr
add
out
repnz
lock
imul
push
and
sub
add
imul
addr16
jo
cmpb
mov
je
jmp
push
mov
lods
xor
outsb
mov
or
xlat
jb
add
cmp
dec
inc
jae
push
lret
dec
sbb
fiaddl
andb
shll
xor
rolb
ja
jp
push
cmp
fwait
xchg
les
mov
cli
xchg
jb
jl
push
mov
addr16
testl
test
test
mov
mov
and
xchg
loop
icebp
fsts
rcll
mov
or
stos
ret
mov
dec
aam
pop
in
mov
into
inc
and
repnz
lods
adc
adc
rcl
dec
in
push
adc
rcll
fmuls
shlb
pop
in
mov
cmp
cmc
inc
cmp
cwtl
aaa
stc
lods
cmpsl
jbe
xchg
daa
js
lds
or
push
inc
jae
mov
xchg
sub
inc
fldt
push
mov
cmp
pop
adc
hlt
mov
movl
scas
fcoms
into
add
xor
orb
push
mov
jns
stos
or
jg
fnstenv
push
adc
xor
mov
movsl
mov
adc
repnz
adc
dec
mov
cmp
adc
rcrl
and
jne
sub
iret
sbb
call
xchg
movsb
mov
push
jmp
ret
adc
pop
adc
bound
fcoml
adc
push
xchg
add
iret
adc
lret
pop
fs
outsb
out
out
mov
and
xor
dec
inc
and
sbb
andl
shl
ret
enter
or
or
das
shrb
or
jmp
push
movsb
arpl
lahf
insb
jae
jno
es
cmp
mov
jecxz
lods
mov
lods
repz
mov
and
testb
jno
mov
imul
je
adc
imul
push
push
push
out
jecxz
in
scas
nop
push
xor
andl
std
inc
clc
xchg
into
sahf
fisubl
cmpsl
pusha
sub
nop
dec
sbb
xchg
lods
cs
jl
fcmovb
mov
jecxz
jl
pop
adc
gs
nop
shl
popa
xor
jo
mov
fs
sub
xor
wbinvd
adc
pop
mov
dec
mov
fs
pusha
das
sbb
enter
sub
or
clc
sbb
out
lea
cmp
adc
gs
adc
adc
fcmove
pop
lret
js
test
imul
cmpsb
fwait
sub
fcmovu
mov
icebp
push
xor
mov
cwtl
bound
idivb
inc
add
inc
xchg
into
cmp
jnp
xor
push
lea
sub
pop
push
mov
mov
pop
sub
add
push
lret
jae
sti
shrb
xchg
pusha
xchg
shr
jbe
gs
mov
popf
mov
add
lahf
dec
xchg
mov
push
pop
cmp
mov
jmp
movsl
mov
scas
in
js
jle
or
sbb
jae
gs
sahf
inc
push
mov
shl
sbb
dec
in
jne
add
sbb
in
sub
movsb
pushl
push
jae
jo
add
mov
cli
xor
mov
jb
add
jbe
mov
repz
inc
stos
sub
movsl
es
outsl
out
insl
mov
pop
repnz
dec
mov
enter
mov
int
cwtl
xchg
jb
inc
mov
cmp
sub
loope
stos
xor
inc
inc
xor
inc
pop
lea
push
cmovl
mov
arpl
mov
lea
pop
out
imul
pop
push
repz
loopne
mov
cmp
aam
es
cmpsl
sub
in
pop
xchg
les
scas
test
mov
dec
in
jo
pop
es
shll
repz
mov
push
in
inc
mov
in
nop
add
ret
stos
out
adc
rorb
pop
gs
movsl
adc
test
mov
arpl
inc
mov
cltd
push
sbb
fdivl
out
push
shl
adc
sub
mov
mov
push
ja
jmp
adc
pslld
shlb
inc
roll
xchg
and
sahf
push
sbb
sbb
xchg
push
push
mov
jnp
pop
pushf
imul
ds
shlb
dec
push
inc
fmuls
lcall
push
mov
xorb
pop
cmp
aam
shlb
or
cmc
jns
inc
dec
adc
js
sbb
push
xchg
mov
loop
mov
shrb
sbb
mul
xchg
sub
pop
std
push
xor
add
sbb
xor
mov
jge
xor
add
data16
xchg
push
jmp
mov
scas
call
xor
lock
inc
mov
jmp
fs
sbb
adc
sbb
rolb
xchg
sbb
std
push
mov
mov
adc
fldenv
sbb
lahf
cmc
stos
subl
jmp
jno
add
insb
mov
mov
xchg
xchg
sti
jne
stos
and
repz
mov
in
sub
xor
out
jp
or
cmp
scas
aas
push
pop
popa
sub
insb
pop
in
ja
lds
xchg
testl
imul
outsb
cmpsl
jb
add
mov
mov
mov
fldt
mov
pusha
fwait
jo
mov
mov
mov
xchg
shr
mov
mov
sbb
sub
mov
mov
addl
shlb
pop
cltd
push
repnz
fcmovnb
xor
xor
test
out
clc
mov
jp
xor
or
aad
shrb
outsb
lret
dec
aas
call
cmp
pop
popf
pop
add
sub
lret
dec
inc
pop
inc
out
push
dec
dec
add
icebp
add
ljmp
mov
mov
jno
mov
and
xlat
pop
ds
dec
push
scas
inc
callw
rcr
xlat
shl
xor
adc
and
jp
hlt
inc
mov
das
xor
xor
mov
cmpsl
imul
adc
jg
sub
mov
pop
xchg
sbb
lock
cmp
rcrb
jo
and
rclb
data16
sbb
cli
adc
in
dec
sbb
jle
testl
fcoml
xchg
mov
pop
aam
xor
ret
inc
or
cld
xchg
adc
push
rcr
movsb
sbb
ffreep
sbb
and
xchg
jae
pop
out
push
cmp
test
cmpl
es
and
jecxz
cld
xor
sti
js
inc
mov
jbe
adc
sbb
in
mov
imul
enter
shrb
test
dec
mov
pop
out
leave
lcall
loopne
pop
adc
dec
add
ss
xchg
or
jmp
xchg
fisubrs
inc
lcall
xchg
dec
add
and
xchg
nopl
dec
push
sti
xchg
adc
addl
push
or
inc
mov
sub
add
or
cmpsb
sub
jmp
jmp
imul
cmc
sub
aaa
dec
pop
imul
add
mov
mov
aas
insb
mov
mov
enter
pop
sbb
movsb
adc
sbb
or
mov
lods
pushf
mov
cltd
rorb
pushf
ret
xchg
pop
sbbl
mov
mov
dec
ds
std
mov
scas
cwtl
cmc
inc
jno
and
jns
or
imul
subl
xchg
dec
dec
test
cmpsl
ret
arpl
adc
cmp
in
sub
decl
shlb
jno
pop
or
dec
cltd
pop
push
mov
vfrczpd
jo
xchg
push
inc
movb
test
mov
test
sbb
es
fistps
cmovle
dec
add
add
push
or
int
push
cmp
push
mov
sub
and
pop
jno
mov
popf
ja
jg
outsl
idivl
sub
xor
mov
in
mov
cmp
xor
or
add
movswl
add
sahf
sbb
dec
pop
icebp
push
dec
xchg
adc
push
dec
cs
popaw
mov
add
jg
cltd
shll
lea
sarl
std
std
mov
es
fildl
ret
push
dec
arpl
lds
aam
in
jo
cmpsb
fbstp
sub
ret
mov
pop
mov
out
lea
pop
sub
in
or
adc
mov
pop
cmpsl
push
pop
adc
sub
jmp
sub
aad
cmp
jg
xor
inc
cmp
ds
iret
outsb
ds
sti
faddp
and
lcall
je
cwtl
xor
and
adc
in
xor
fists
adc
into
add
inc
loop
ffree
jp
jg
jg
mov
cmp
clc
xor
cmp
and
cmp
popf
stos
out
popf
dec
xchg
pop
mov
cld
mov
inc
js
xor
or
jae
lds
cmp
dec
bound
or
enter
int
push
movsl
in
loopne
rcll
inc
ficompl
push
xor
or
and
push
outsl
dec
pop
stc
xor
hlt
insb
cmp
aaa
ret
push
push
outsl
ja,pn
cmp
mov
xchg
in
jmp
shl
es
jbe
add
movsb
pop
bnd
push
loope
hlt
add
mov
pop
cltd
xor
mov
call
insl
enter
shll
jnp
arpl
mov
xchg
cmp
jmp
pushf
out
or
jp
fcmovnbe
rclb
arpl
jl
outsb
mov
shll
mov
mov
shll
jg
push
fs
in
loope
push
loope
fdiv
dec
into
jge
subb
pop
and
cmp
mov
jo
or
ss
xchg
pop
inc
dec
dec
ficomps
inc
bnd
fdivl
xor
or
sbb
and
lahf
jge
mov
dec
sbb
jg
adc
data16
dec
les
stos
movsb
xor
add
lret
adc
lahf
push
bnd
push
xchg
mov
repnz
mov
push
js
sub
pop
jne
or
fwait
fwait
sub
mov
js
fs
push
fistpl
es
loop
mov
dec
push
push
aaa
xchg
mov
jno
push
nop
jg
mov
push
xchg
push
push
lods
or
cmc
rorb
sub
cwtl
mov
gs
push
dec
mov
aas
sub
rcr
sbb
inc
lods
data16
xchg
push
mov
clc
fxch
mov
xchg
aad
inc
insl
out
push
add
cmp
push
jl
mov
sbb
movsb
xor
scas
mov
jb
push
mov
mov
das
fsubr
and
adc
xchg
sbb
mov
add
daa
sub
cmp
fwait
or
xchg
cli
call
xor
sub
mov
mov
xchg
xor
mov
xor
adc
rol
mov
inc
mov
fwait
xchg
jno
fidivrl
cmp
addr16
fcomi
in
or
stos
dec
and
pop
jg
sub
test
pop
dec
cmp
xchg
or
mov
xchg
push
test
xchg
out
imul
ja
insb
pusha
push
cmp
xchg
push
sub
into
test
push
or
mov
mov
inc
sbb
in
stos
cmp
adc
leave
aaa
mov
aaa
mov
add
xor
jmp
cmp
push
sbb
mov
jbe
xor
and
sub
mov
sti
add
sbb
arpl
cltd
hlt
xor
and
jecxz
add
inc
xchg
cmp
inc
push
iret
add
mov
pop
add
jl
sti
mov
in
inc
repnz
pop
jae
aas
jecxz
int
add
mov
jnp
repz
ljmp
cli
fcoms
sbb
and
or
popa
mov
add
out
rorl
in
fs
lods
pop
es
out
jne
mov
or
xchg
ret
out
data16
out
jg
lret
mov
stc
aam
sub
cwtl
push
fwait
and
test
pop
inc
inc
push
dec
adc
sub
push
cmpsl
cmpsl
inc
ret
or
in
inc
pop
mov
xchg
cld
inc
xchg
lea
iret
sub
xor
dec
inc
les
push
outsl
data16
and
mov
push
dec
dec
jmp
xor
xchg
push
pop
int3
mov
inc
stc
out
mov
adc
stos
faddl
push
inc
les
repnz
fwait
mov
sbb
xor
inc
dec
pop
outsl
aad
scas
sub
test
mov
inc
jp
scas
lds
rcrl
out
out
xor
jno
push
loopne
in
and
jle
es
cmp
xchg
dec
test
add
sbb
pop
rcrb
jp
mov
mulb
mov
ss
daa
mov
pop
loopne
cwtl
es
xchg
push
dec
stc
stos
test
out
cmp
xchg
pop
mov
and
in
xchg
push
sub
jb
fdivs
jle
push
mov
push
cmp
pop
or
rclb
cmp
cmovnp
inc
adc
call
ret
popf
sbb
dec
mov
dec
lahf
out
ret
les
jmp
leave
push
xchg
xor
sar
ljmp
and
das
movsl
fnsave
inc
add
inc
jmp
xchg
mov
cmp
or
or
in
ror
in
inc
sbb
cmp
daa
test
ss
push
call
fistpll
jle
gs
adc
mov
mov
outsb
mov
or
imul
push
push
stc
mov
sarl
test
test
mov
mov
sub
iret
imul
fstps
sbb
mov
lock
call
jl
mov
lods
dec
sub
test
cmp
scas
xchg
in
cmpl
push
xor
and
xlat
mov
scas
leave
mov
test
jne
xor
sub
stc
and
in
lcall
jge
cld
movsl
cmp
test
dec
aas
mov
jne
aad
xlat
rcrl
int
xchg
sub
ficompl
push
and
xor
adcb
jns
out
mov
push
les
push
and
imul
stos
test
sub
in
inc
xchg
int3
das
inc
outsl
or
mov
add
pop
pop
in
add
mov
fimull
inc
cmp
mov
mov
outsl
test
inc
cmp
push
xchg
push
add
shrd
mov
test
push
cli
and
mov
cmp
pop
xor
dec
lock
je
xor
xchg
mov
mov
jecxz
stos
test
xchg
in
test
xor
mov
rorb
pop
shll
adc
in
push
int
or
mov
inc
lds
cmc
push
or
cmpsb
mov
sbb
mov
sub
or
cmp
js
and
movsb
jg
aaa
incb
sbb
jl
sub
add
stos
gs
mov
neg
dec
jle
adc
dec
fstl
ficoml
jg
mov
clc
fwait
cmc
push
loope
adc
leave
adc
cs
jbe
ljmp
sub
mov
push
aam
xor
add
aad
pushf
mov
sbb
insb
imul
movb
sbb
rol
jae
xchg
xchg
cmp
popa
push
cmp
lods
adc
dec
adc
mov
stos
add
mov
xor
sbb
xchg
lret
inc
enter
push
adc
test
xchg
sbbl
fstpt
int3
add
xor
jno
lea
and
cwtl
sub
repz
test
imul
xchg
cmp
dec
dec
rorl
outsb
jecxz
call
mov
fadds
fwait
lods
ret
mov
cs
out
mov
mov
mov
ret
leave
and
stos
jae
rcll
sbb
ret
sahf
sahf
cmp
mov
iret
pop
sbb
xchg
add
pop
out
pop
jmp
sbb
loop
mov
mov
sub
and
inc
and
mov
adc
incl
mov
cld
call
out
data16
sarb
jmp
mov
cmp
xchg
ficoml
out
xor
jp
movsb
insl
add
fiaddl
sbb
nop
lret
sahf
dec
dec
mov
jmp
add
sub
push
fs
loope
push
mov
add
xchg
pop
roll
pusha
push
mov
mov
add
mov
in
cs
push
scas
mov
dec
inc
jle
adc
push
add
jno
push
shlb
lods
sub
dec
adc
adc
subb
add
aam
leave
sbb
xor
push
mov
inc
inc
adc
es
lret
cmp
std
pop
nop
cmpsl
mov
sub
in
jecxz
sahf
daa
mov
std
mov
add
mov
daa
fiaddl
insb
loope
push
les
and
mov
jle
clc
inc
pusha
cltd
push
cs
shll
cmp
xchg
clc
aam
data16
mov
test
clc
jbe
xchg
pop
addr16
xor
test
sub
cmp
aam
sub
mov
fnstsw
insb
movsb
loopne
add
lret
movsb
ja
jo
mov
std
icebp
push
jmp
push
cmp
pop
addr16
push
push
cwtl
stc
ret
dec
sbb
jbe
sbb
test
out
dec
cmp
test
sub
mov
ss
sub
mov
test
sub
lock
pop
in
mov
out
stos
mov
loop
in
cmp
testb
jno
addl
sub
popf
fisttps
clc
stos
xor
lock
ret
jge
ss
fdivp
call
pop
out
fisubrl
mov
sub
cli
int
repz
pop
repz
jmp
mov
inc
leave
movsb
fidivs
push
out
inc
in
push
adc
dec
testl
pop
add
xchg
gs
imul
insb
loopne
jg
sbb
push
lret
sub
pop
mov
dec
push
in
les
jmp
test
jmp
xor
cmp
fcoml
mov
bound
shrl
mov
repnz
push
inc
push
lock
pop
or
dec
add
rolb
je
push
xor
pop
mov
in
sbb
ss
in
sub
das
test
gs
movsl
fcomp
inc
pop
inc
add
pushf
jae
pop
adc
adcl
outsl
inc
daa
movsl
push
pop
in
bound
stc
cld
xchg
ja
fwait
add
jbe
les
sbb
xor
roll
daa
xchg
es
mov
xchg
repz
movsb
ds
insb
faddp
scas
cli
pop
mov
call
inc
lods
or
inc
das
sahf
lret
fnstenv
out
and
and
insl
lock
into
aad
bound
cwtl
xchg
bound
stc
test
ja
jno
cmpl
fs
in
in
jp
insl
mov
cmp
sbb
mov
xchg
ja
push
lret
sub
lret
fistps
sbb
xchg
faddl
jne
nop
popa
pushf
xchg
cld
pop
ret
jmp
aam
sbb
lods
push
jno
inc
mov
loopne
imul
pop
dec
inc
out
popf
adc
repnz
cmp
outsl
or
adc
fildll
std
xchg
adc
outsl
jno
mull
rol
stos
mov
orb
mov
push
jns
fildll
inc
je
xlat
pop
lock
cmp
adc
lods
sub
lret
mov
or
pop
pop
mov
jge
xchg
lds
and
repz
jge
fcoml
push
adcl
test
fldl
jo
push
and
cld
ret
cmpsb
mov
push
gs
and
jg
pop
nop
mov
mov
movsb
add
fwait
pop
mov
hlt
pushf
inc
jmp
xlat
xchg
or
adc
pop
mov
fsubs
and
xchg
inc
fdivp
cmp
bnd
rorb
mov
jmp
mov
jg
mov
jl
and
rclb
cwtl
jmp
jmp
ret
or
mov
cmc
or
mov
fwait
push
repnz
or
and
pop
inc
fidivl
das
xor
fs
push
cltd
sahf
popf
xchg
inc
incb
mov
frstor
push
scas
iret
movsb
jle
cmp
pop
inc
out
pop
xchg
mov
mov
icebp
or
jnp
xor
mov
insl
pop
add
sub
fists
mov
add
test
sub
test
jbe
and
les
lcall
leave
inc
lods
push
dec
jbe
lods
cmp
or
mov
arpl
out
les
rcll
std
fimuls
pop
mov
pushf
adc
insb
lods
mov
data16
jg
sub
mov
jp
sub
mov
imul
cmp
xchg
mov
inc
add
bswap
dec
leave
pop
sub
in
test
aad
loope
or
sub
js
loopne
fs
test
xchg
push
popa
repz
mov
sub
pusha
pop
cmpsl
or
pop
or
sahf
push
jl
test
gs
popf
fwait
adc
repnz
pusha
and
stos
jmp
cmp
mov
ds
sahf
xchg
out
jecxz
pop
mov
pop
data16
pop
les
or
pop
xor
xor
and
jns
xchg
cmp
xor
sbb
clc
cltd
in
xchg
push
and
clc
jns
jmp
outsb
repz
movsl
cmp
outsl
mov
push
or
ja
test
or
mov
out
cmpsb
sub
call
adc
imul
into
icebp
pop
mov
or
push
out
xlat
add
out
int
xchg
jne
mov
sbbb
dec
cltd
pop
xlat
dec
xchg
lods
imul
fs
push
mov
mov
push
sbb
out
pushf
adc
pop
test
sbb
out
pop
imul
cmp
jno
pop
fs
in
enter
incb
sbb
push
sub
push
icebp
cmpsl
jnp
mov
fidivrs
daa
nop
pop
mov
jbe
push
fs
fstpl
dec
dec
imull
push
int
and
lods
in
dec
pop
pop
lahf
pop
xor
mov
int
xchg
push
pushl
sahf
test
and
loop
fisubrs
adc
test
cltd
dec
fmul
xor
dec
mov
sti
mov
push
push
inc
jg
in
pop
push
out
xor
stos
push
dec
push
das
je
out
push
mov
inc
es
fisttpll
ja
cltd
xor
push
insb
inc
or
inc
sbb
cmp
sbb
mov
aad
or
mov
dec
bound
int
xrelease
lock
jb
sbbl
and
lds
sahf
imull
and
lret
jb
clc
fwait
sub
sub
mov
jl
xor
and
icebp
jl
cli
sub
adc
insl
pop
mov
pop
push
repnz
jbe
js
cld
push
pop
lds
sub
into
es
xchg
cld
enter
pop
push
out
gs
aam
insb
and
cmp
pop
xchg
in
gs
mov
shl
or
add
notb
xchg
mov
and
lock
mov
mov
scas
test
mov
cmc
fst
stos
rdpmc
or
lods
mulb
jbe
cltd
xchg
inc
gs
pusha
xchg
mov
pusha
rcrb
jmp
xor
and
dec
and
stc
mov
mov
jb
fidivrs
repz
in
mov
jbe
inc
cli
es
mov
adc
dec
push
int
adc
nop
xor
jmp
inc
ljmp
rcl
cli
adc
xchg
pop
jl
ljmp
mov
dec
bound
aaa
mov
test
les
stos
inc
out
mov
repnz
adc
adc
dec
cwtl
mov
sub
push
insl
mov
repnz
lds
inc
fcoml
fsts
dec
popf
xchg
fcomps
and
rcrb
movsl
pop
jecxz
inc
push
dec
in
loopne
xchg
mov
int
mov
ficompl
add
dec
les
aaa
data16
xor
stos
lret
add
push
add
xor
lock
cltd
xchg
mov
nop
imul
push
pop
stos
gs
lea
out
sbb
call
mov
imul
popa
mov
int
stos
inc
fisubs
sbb
ja
in
mov
mov
jno
cmp
ljmp
repz
push
xor
fimull
mov
mov
bound
and
xchg
adc
iret
idivb
sub
cmp
enter
fcoms
adc
add
out
je
fildl
inc
jns
das
xchg
adc
xchg
mov
jns
imulb
jg
add
cmp
rcrb
push
sbb
stos
cwtl
mov
sahf
aad
outsl
js
dec
sbb
js
movsb
loope
cmp
in
jo
enter
cli
mov
icebp
push
sbb
in
stos
pop
sbb
push
fcoml
mov
xor
shlb
jmp
mov
shll
iret
test
in
pop
sub
xor
sub
and
and
xchg
and
cltd
and
add
sarl
mov
add
sub
dec
inc
mov
pop
xchg
daa
mov
ljmp
pop
lds
out
mov
movsl
call
cwtl
mov
mov
ror
and
or
aad
xchg
jae
imul
hlt
xor
arpl
daa
fwait
lahf
in
aaa
inc
sbb
in
lods
add
test
jmp
data16
movsb
cltd
and
cmp
ret
adc
push
xchg
fisubs
fwait
imul
add
fistl
sub
push
scas
dec
in
pusha
sbb
inc
in
sub
adc
lcall
scas
bswap
imul
and
jbe
or
bound
adc
std
and
adc
dec
jo
sahf
loope
sbb
stos
addr16
adc
fsts
in
and
loope
std
sub
cmp
mov
out
mov
adc
bound
les
cs
js
sarb
testb
jecxz
cwtl
out
arpl
push
mov
jp
xchg
je
push
xorb
xchg
sbb
or
outsb
sbb
jne
inc
and
loope
sub
jo
push
mov
adc
decb
add
inc
push
and
je
lea
dec
cwtl
push
mov
aas
push
out
into
mov
xlat
add
sbb
testb
int3
cli
add
and
xor
int3
cmpsl
push
je
rclb
cmp
lahf
xor
pop
fwait
out
sub
push
add
pop
cmpsb
mov
cmc
mov
cld
push
pop
scas
jl
mov
and
ss
mov
addb
fs
add
test
mov
jge
dec
mov
cwtl
pop
fidivrs
cmp
fcomps
push
push
shlb
and
jg
insb
popa
outsb
push
sar
das
mov
lret
jno
fmull
fstps
test
dec
out
out
push
fstps
xchg
aas
insb
lret
adc
or
jno
or
add
ss
mov
in
cmp
stc
int3
in
dec
xchg
ja
xchg
dec
jge
xchg
xor
cmp
int3
enter
lds
daa
pusha
dec
mov
mov
pop
xor
cs
cwtl
cmp
cmp
xchg
xchg
jge
arpl
call
jge
inc
mov
pushf
mov
movsl
cwtl
cmp
or
imul
sbb
aad
clc
int3
outsl
out
loopne
push
cltd
jo
outsb
or
xor
int3
push
hlt
fstpt
add
nop
lea
jno
dec
lods
fstps
dec
push
xchg
mov
inc
lods
fsubp
inc
and
and
xor
xor
or
out
gs
jae
push
fsubrs
dec
fs
loop
fists
cmp
lea
jne
mov
out
and
shll
fs
add
push
ret
scas
in
mov
loop
in
push
mov
jne
jle
xchg
outsb
and
in
fimuls
gs
popa
das
insb
inc
add
xor
or
adc
xchg
add
push
mov
dec
or
push
jno
idivl
xchg
push
cmp
std
cmc
mov
pushf
call
add
jp
sub
mov
mov
ja
push
loope
sbb
cmpsb
scas
loopne
out
sub
clc
push
dec
adc
jp
mov
add
out
aad
jnp
iret
inc
rcrl
sub
mov
in
pop
pop
mov
dec
addr16
push
jle
cli
icebp
push
leave
xchg
cmp
and
mov
lds
out
std
shll
aaa
mov
cmp
popa
jg
je
lret
int3
jecxz
push
fsts
jno
mov
lea
jae
insl
mov
sbb
inc
imull
mov
inc
leave
test
and
xlat
mov
push
movsb
and
movsb
inc
cmp
dec
imull
test
dec
out
push
mov
pop
pop
add
fisubs
and
push
cmp
and
dec
lret
clc
mov
sub
addl
xor
test
imul
jbe
sub
fnstenv
ja
insb
pusha
test
imul
repnz
shlb
out
adc
lea
jmp
scas
leave
inc
ds
test
addr16
scas
inc
out
mov
gs
xchg
cmp
mov
add
mov
inc
and
andb
mov
mov
add
dec
xchg
sti
cmp
inc
cmp
in
cmp
fwait
mov
push
es
adc
int
xchg
mull
xor
xor
les
ror
in
push
rclb
mov
mov
xchg
push
mov
cmc
jns
icebp
icebp
cmp
cmpsl
jmp
data16
dec
gs
out
lret
adc
pop
imul
out
fistpll
push
inc
movsl
lds
adc
pop
lahf
xchg
push
push
outsl
lods
lock
lea
push
xor
sbb
jae
inc
push
gs
inc
sahf
add
scas
aad
inc
mov
pminsw
orb
jl
mov
das
mov
roll
adcl
adc
xchg
fwait
lods
lock
mov
int
push
add
leave
xchg
cmp
mov
xor
xor
dec
mov
mov
pop
xchg
fdivrl
test
lods
hlt
fdivrs
adc
pop
or
icebp
dec
cli
mov
daa
test
addr16
jmp
jmp
insb
adc
pop
insl
inc
stos
stc
repz
mov
jbe
cltd
xchg
cmp
xor
cmp
mov
push
int3
sarl
inc
jae
aam
call
or
xor
mov
daa
push
and
scas
push
adc
push
lret
fs
fs
imul
popf
test
push
lahf
repz
jg
sbb
es
pop
cwtl
sbb
notb
jb
adcb
jmp
in
jmp
inc
push
rolb
xchg
push
rolb
in
sarb
push
pop
aam
push
and
gs
movb
add
jle
aas
adc
mov
call
xor
call
in
mov
xorl
jecxz
call
lret
mov
lret
insb
cltd
idiv
iret
push
and
and
push
lea
inc
sub
mov
lods
or
push
std
sub
pop
mov
gs
adc
test
and
stc
lret
addr16
pop
cmp
mov
test
mov
mov
or
je
ret
pop
scas
mov
arpl
test
pusha
cmp
sbb
cli
out
aaa
fistps
push
add
add
xorl
add
imul
jb
pop
divb
rcrb
movsb
sub
sti
ret
sbb
mov
fmull
sbb
push
sub
adc
enter
dec
adc
movsl
insl
fisttpll
enter
aam
test
neg
mov
sub
cwtl
test
add
insl
push
and
cmp
ret
mov
cmp
mov
mov
call
sbb
push
adc
cwtl
out
lods
adc
test
or
push
lods
add
xor
jle
push
lcall
push
dec
aaa
xor
and
inc
out
dec
mov
mov
test
pushw
jp
rclb
push
or
and
jne
imul
mov
cmp
ret
mov
adc
into
out
mov
add
cmpsb
ja
xor
and
mov
lret
push
xor
dec
cmp
lds
or
jne
movsl
pop
and
clc
mov
out
ljmp
jmp
addr16
jo
mov
xor
xor
mov
adc
test
jl
sbb
adc
nop
add
mov
inc
jo
and
test
cmpsb
in
xchg
fiadds
or
xchg
jle
inc
daa
arpl
add
lret
and
lock
jnp
xor
adc
popf
pop
sbb
aam
out
mov
jecxz
cwtl
push
leave
jl
lahf
xchg
dec
stc
jne
ss
or
cwtl
mov
push
push
mov
ss
and
adc
add
lea
pushf
jl
in
cmpsb
push
sub
cli
jne
je
in
sub
jg
jae
mov
adc
push
aam
shl
adc
dec
pop
mov
sbb
and
push
js
xchg
daa
mov
outsb
adc
jecxz
push
aam
pop
rcrl
push
out
test
xchg
mov
mov
adc
cmp
in
cmpsl
pop
mov
imul
and
adc
push
repz
hlt
sarb
cmp
data16
pop
shl
subl
mov
mov
call
or
inc
mov
add
arpl
jbe
mov
shll
pushw
push
es
mov
mov
push
mov
push
nop
cmp
cltd
stc
dec
pusha
ret
frstor
mov
lret
loope
mov
push
loopne
mov
add
fwait
push
or
test
or
dec
jge
cld
xchg
fldt
sbb
test
lcall
das
jbe
aaa
lods
pop
push
pusha
ds
addr16
or
push
mov
jae
cli
pop
je
mov
sbb
push
lods
jo
mov
or
repnz
pusha
rorb
cmp
mov
xor
aaa
cli
imul
int
and
and
es
or
icebp
sub
fstpl
mov
in
in
jmp
dec
rorb
mov
inc
cmp
inc
lcall
sub
xchg
inc
push
test
adc
in
fadds
jge
ja
bound
sub
mov
cmc
pop
mov
mov
scas
cli
lret
or
into
rcrl
pop
in
into
mov
jecxz
inc
lret
dec
add
mov
push
fwait
push
inc
dec
pusha
mov
bound
into
sbb
lea
ja
leave
lea
jne
dec
in
xchg
jg
mov
out
push
fs
xor
mov
lods
cmp
xlat
out
mov
in
cmp
cmpsl
lods
ja
cltd
inc
adc
addr16
dec
sbb
and
mov
arpl
lds
jnp
and
cmp
clc
addr16
and
mov
icebp
sbb
mov
adc
adc
clc
movsb
pusha
push
in
jge
adc
rcrb
xor
push
inc
xchg
xchg
inc
jbe
mov
aad
ljmp
sbb
jns
in
jb
dec
pop
dec
stc
inc
daa
jge
cmp
aam
mov
cmp
xchg
pop
xor
movsl
sub
stc
and
ret
addl
jmp
cmp
mov
xchg
popf
cmpsl
dec
push
sti
jg
insl
push
jb
lahf
lret
jge
sbb
push
dec
pop
in
pop
xchg
mov
sbb
mov
into
or
cmc
mov
insb
in
insb
pusha
jmp
dec
and
sbb
jbe
jb
dec
je
cmpsb
push
hlt
jb
xor
insl
sub
mov
push
inc
mov
adc
pop
or
out
lea
int3
sbb
cltd
pop
lcall
daa
or
mov
mov
xchg
fisubl
shrl
mov
bound
push
jne
mov
mov
mov
cmp
fbld
sti
fcmovbe
sbb
popa
push
xchg
jl
sbb
mov
or
popl
dec
insl
xchg
stos
lahf
jnp
sub
mov
mov
sub
cmpsb
push
sub
imul
sti
xorb
jecxz
leave
inc
push
dec
mov
jne
push
inc
and
leave
mov
das
ffree
and
pop
cmp
adc
data16
test
jp
shrb
push
sbb
mov
shrb
push
cmpsl
add
les
ljmp
pop
cmc
idiv
sbb
jecxz
xor
mov
pop
and
push
xchg
iret
xchg
inc
push
cmp
or
cmp
add
add
dec
insb
inc
add
inc
push
xor
dec
jne
sahf
and
nop
pop
sub
jb
bound
mov
in
in
mov
mov
out
outsb
jl
jb
test
push
stos
sub
mov
or
jnp
dec
xchg
insl
or
mov
push
xor
test
mov
push
in
sbb
imul
imul
jb
mov
ljmp
lds
xor
jle
push
pop
pop
xchg
loop
pushf
enter
lods
loopne
add
push
ja
lods
cwtl
iret
mov
iret
sbb
dec
dec
adc
cmp
add
pop
push
sub
int
int
shlb
jmp
xor
shl
pop
or
lahf
fldcw
pop
clc
sahf
jo
int
es
xor
push
rcrb
inc
mov
xchg
sub
inc
sar
cld
sub
jo
mov
push
ss
cmc
lret
inc
mov
repnz
mov
sbb
sub
testb
ja
cmp
or
les
sbb
cmp
scas
push
cmp
fisttpl
cld
ds
jecxz
cmp
call
sti
es
loope
bound
add
repnz
mov
in
push
mov
mov
les
sub
cmp
ds
fsubrs
stos
jnp
pop
js
bound
or
cld
adc
pop
aad
xor
in
testl
in
loope
out
ss
fwait
bound
jg
push
cwtl
lcall
mov
pop
fbld
xchg
push
mov
das
mov
daa
movsl
loopne
jp
mov
pop
inc
jne
je
jmp
hlt
xor
push
mov
shrl
mov
sub
xchg
mov
mov
lret
aas
push
scas
push
test
sti
sub
push
cmp
in
mov
cmp
scas
into
rcpps
or
icebp
mov
lock
scas
pop
pusha
cli
dec
aad
xor
dec
lcall
gs
jle
mov
shlb
cld
mov
ljmp
insl
push
fimull
jnp
sti
inc
insl
pop
push
je
push
daa
pop
ljmp
push
stos
jge
xchg
cmp
inc
fucomp
sbb
sub
pop
push
sahf
adc
mov
cmpsb
ss
cmpl
xchg
xor
js
pop
mov
insb
popl
sbb
or
sub
aad
int3
inc
adc
and
lret
ja
test
test
ja
pop
or
xchg
fwait
adc
fisubl
out
sub
outsb
xor
nop
push
or
fisttpll
enter
xor
dec
pusha
clc
mov
inc
aas
ret
gs
das
jecxz
icebp
jbe
pusha
dec
push
hlt
dec
dec
iret
adc
mov
mov
repnz
pop
pop
int
shll
pop
repnz
sub
cs
inc
mov
in
aaa
jecxz
inc
xchg
scas
adc
mov
sub
dec
stos
jecxz
dec
pop
xchg
jmp
jb
mov
xor
mov
inc
aad
cmp
sbb
pop
mov
jo
sbb
dec
dec
xchg
call
ret
out
sbb
or
sbb
pushl
pop
add
inc
fdivs
dec
insb
dec
dec
cmp
dec
aad
pop
xchg
popa
das
pop
rcll
andb
xchg
in
push
in
adc
cmpsb
lret
push
stos
es
lcall
lret
push
xchg
out
int3
nop
pop
push
ret
xchg
inc
mov
cwtl
sahf
popf
sub
xor
lret
add
mov
lds
in
pusha
mov
test
imul
dec
movsb
mov
push
xor
sub
push
cwtl
mov
add
add
sbb
movsl
inc
imul
add
mov
in
xchg
rclb
mov
push
sbb
push
jb
in
adc
loopne
sbb
in
arpl
stos
mov
jg
fcoml
jb
and
push
imul
lahf
insl
lret
ss
lods
sub
fildll
sti
insb
stos
pop
xchg
add
outsl
out
cmp
add
test
mov
imul
data16
pusha
adc
pop
jno
aam
cltd
sahf
jle
sub
jo
and
sbb
push
es
push
std
dec
add
fwait
adc
dec
push
sarb
cmpsl
push
inc
and
dec
and
jecxz
sbb
jno
jb
cmc
xchg
xor
mov
js
push
out
popf
lret
sbb
mov
push
sbb
cmp
xchg
lds
cmp
arpl
pop
xchg
jge
push
test
push
movsl
mov
push
int3
into
test
push
dec
dec
and
mov
and
xchg
adc
mov
inc
and
ja
sbb
cltd
dec
push
mov
mov
ffreep
jbe
pop
adc
div
mov
bound
push
inc
adc
mov
mov
cs
dec
sbbl
imul
shlb
out
dec
imul
xchg
or
aas
pusha
push
jp
adc
jbe
mov
xor
call
push
xchg
sub
pop
sbb
add
repnz
mov
inc
loop
mov
xchg
sbb
push
mull
pop
push
jae
mov
mov
cwtl
jge
rcrb
dec
cld
sub
push
movsb
and
fs
push
sbb
cwtl
jp
pop
ret
inc
jecxz
rcr
or
rcrl
je
jge
cmp
loope
clc
loopne
sbb
notb
popa
movsb
das
jae
xchg
mov
lahf
push
loop
mov
add
cmpsb
jno
xchg
xchg
xor
and
mov
xor
clc
aam
arpl
mov
mov
repz
orl
push
pop
leave
cmp
das
sbb
cmp
loop
add
cmp
je
jae
lods
sbb
dec
push
inc
sbb
jbe
rcrl
scas
sub
jnp
jns
jmp
jge
inc
out
in
rorl
cmp
lret
mov
test
adcb
pushf
pop
push
adc
jecxz
je
ljmp
push
cmp
sub
mov
out
aam
sbb
mov
cmc
pop
imul
mov
repz
add
adc
push
mov
rorb
mov
lret
cwtl
xlat
xor
dec
cmp
pop
bound
push
mov
dec
inc
mov
or
testl
dec
icebp
cli
test
cmpsb
push
push
daa
sub
gs
inc
fwait
dec
inc
out
push
or
in
adc
ss
iret
xor
orb
push
movsl
dec
dec
mov
fcmovu
lahf
rol
sub
mov
jle
pushf
ret
loop
pop
rcr
mov
iret
jmp
and
pop
xor
push
movsb
call
scas
mov
adc
xchg
ja
jle
pusha
dec
cld
push
lock
sub
xchg
js
cmp
jne,pt
xor
sti
cmc
mov
xchg
imul
dec
cmp
dec
sub
jg
mov
push
fldt
push
cmp
mov
sbb
lea
pushf
repz
divb
or
int3
pop
sbb
pop
push
cmc
mov
add
mov
sbb
outsb
sahf
jmp
push
xor
out
inc
std
xor
fmull
jp
jmp
jmp
xchg
jnp
add
xorl
xchg
or
adc
push
out
lret
orb
repnz
lds
ds
sbbb
das
fucom
xor
cwtl
inc
notl
test
popf
nop
aaa
cmpsl
cmc
inc
sbb
sub
inc
mov
dec
imul
paddusw
mov
outsl
inc
dec
outsl
sbb
xchg
inc
push
jbe
outsb
nop
call
or
push
mov
insl
outsb
fstl
out
inc
aas
pop
sbb
push
sub
jmp
or
or
pop
push
push
leave
or
mov
arpl
push
rcr
sub
out
push
mov
jns
mov
cmp
je
cmp
mov
push
dec
pop
add
hlt
cmp
in
cmp
sar
insb
jns
pop
xor
xchg
stc
jne
sub
les
add
mov
call
js
jp
and
test
and
pop
xor
jmp
or
outsb
adc
mov
outsl
mov
mov
inc
xor
ljmp
inc
xor
push
inc
jne
jmp
or
pop
in
sub
cmp
jno
out
fdivrl
das
pop
add
lods
inc
mov
adc
adc
jno
loop
or
iret
bound
fsubrs
aaa
pop
loop
test
dec
rcrb
inc
hlt
mov
cmp
mov
call
cmp
and
sbb
je
xchg
test
push
pop
fisttpl
jmp
xor
ficomps
or
mov
push
lea
and
iret
leave
pop
arpl
dec
rcrl
push
std
adc
sbb
dec
mov
jb
cmp
mov
sahf
imul
push
mov
mov
leave
cmp
pop
ljmp
sbb
jnp
enter
test
adc
inc
in
jge
cmp
lcall
mov
xor
imul
ror
xchg
jecxz
mov
bound
dec
ds
fcoml
pop
sbb
cs
call
or
nop
mov
xchg
cmpsb
fmull
imul
xor
mov
mov
cmp
stc
push
addl
imul
in
add
add
ret
sbb
repnz
push
outsb
sar
xor
inc
fidivl
inc
jno
loopne
pop
xor
sbb
loop
pop
adcb
test
ds
sub
out
sub
daa
mov
lock
xchg
ja
addr16
pop
dec
scas
mov
xor
popf
xchg
or
addr16
xchg
call
lods
cwtl
mov
pop
pop
lea
je
inc
lods
bound
xchg
push
mov
jge
add
cmc
outsl
inc
jae
jecxz
insb
lods
test
repz
negb
cli
xchg
and
inc
int3
push
inc
iret
push
and
popf
inc
out
cwtl
in
fsubrl
jo
fs
iret
pop
lret
pop
sub
std
imul
rcrb
ret
mov
sbb
stc
jl
popa
jp
xchg
clc
cmp
insb
or
jbe
sbb
mov
fldenv
cli
aaa
repz
dec
stos
mov
mov
mov
and
push
into
pop
nop
fcompl
aaa
inc
aam
cmp
sub
std
loope
aaa
sbb
sbb
shrl
pop
les
sub
xlat
jbe
stos
in
sahf
mov
pop
xchg
loop
sbb
inc
xor
les
aaa
loop
ret
cmp
out
negl
fs
sub
mov
jmp
cmpsb
mov
ficoml
in
nop
jmp
pop
sahf
cmp
imull
push
lahf
sub
ds
lock
adc
xor
shrl
push
push
out
movsl
cmpsl
lcall
mov
rcrl
pop
lock
push
out
packsswb
sbb
incl
jge
sbb
das
jecxz
sbb
sub
in
mov
mov
mov
cld
jnp
sub
sti
ja
pop
xlat
pop
negl
shll
jecxz
pop
lea
in
test
test
bound
mov
fidivs
bnd
pushf
dec
xchg
jnp
push
cli
adc
sub
jne
adc
add
mov
sub
sahf
out
inc
insl
jecxz
sbb
cmpsb
xlat
pusha
addl
loopne
jnp
xor
add
clc
mov
fstpl
in
in
aaa
je
push
hlt
jne
push
add
push
dec
jmp
insl
mov
xchg
addr16
ror
jae
cmc
in
addr16
clc
push
inc
adc
loope
repz
push
jmp
fld
mov
test
mov
pop
mov
push
mov
dec
add
movsb
mov
pop
leave
mov
mov
cltd
mov
inc
sahf
cmp
mov
ret
pop
imul
mov
mov
mov
scas
lahf
sub
repz
aam
mov
lret
mov
or
rclb
orl
addr16
jg
inc
xchg
and
stos
adc
or
jns
fimull
lcall
mov
and
lret
adc
and
jl
test
or
test
rorl
fldcw
addr16
dec
or
add
sub
jle
mov
in
lret
jbe
filds
and
push
cld
daa
outsb
push
push
lea
hlt
mov
lret
lahf
xor
xchg
enter
aaa
pop
cli
sti
pop
fcmovnu
and
sbb
mov
xor
pop
mov
aad
addr16
sbb
sub
or
scas
imul
pushf
sbb
out
sbb
xor
bound
rorb
inc
cmp
fcomp
movsl
pushf
and
int
add
daa
pop
bound
mov
lret
jae
loope
rcll
xchg
jecxz
cs
adcl
insb
add
movsb
scas
jmp
test
sub
mov
outsb
add
jecxz
outsb
mov
fwait
out
imul
test
rcrl
pop
dec
shlb
dec
jo
popa
push
pop
ljmp
dec
jmp
push
les
and
xor
prefetch
int3
ds
dec
mov
movsl
pop
std
push
lahf
jns
mov
cmp
bound
mov
add
mov
mov
fisttps
mov
push
leave
cmc
push
scas
imul
aaa
jo
in
xchg
loopne
outsl
rcrl
std
push
pop
mov
mov
sbb
repnz
out
shl
xor
jo
sarl
add
hlt
cmpsb
xor
loopne
je
popf
inc
add
rclb
leave
arpl
jmp
dec
jbe
repnz
fwait
rcrb
xchg
sub
adc
jecxz
dec
test
sti
movb
mov
lods
jp
outsb
mov
add
fwait
leave
jle
dec
insb
sub
std
cmc
inc
adc
orl
lods
imul
xlat
lock
mov
cmpsl
push
xchg
outsl
aas
jmp
fists
outsl
adc
mov
mov
mov
mov
inc
loope
xchg
shl
aam
xchg
andb
add
push
out
push
dec
jbe
ljmp
std
fbstp
and
call
xchg
hlt
push
pop
mov
dec
lahf
lahf
cmpsl
ret
in
subl
xor
leave
rorb
or
dec
and
cmc
scas
imul
xor
bound
add
in
xor
pop
jae
pop
in
and
push
sub
jbe
mov
in
and
sub
inc
xor
cmp
add
mov
cmp
mov
cmp
fs
aaa
rorl
lods
xor
test
movsb
int3
dec
nop
lds
lret
icebp
mov
js
lret
jmp
sbbl
loop
sbb
out
push
inc
pop
arpl
push
cld
fdivrs
int3
fists
xor
sub
incl
jae
jl
arpl
inc
jae
add
insl
sub
test
dec
addr16
add
out
and
xchg
inc
fstpt
retw
mov
pop
dec
mov
popa
outsb
and
pop
xchg
or
js
inc
ja
rolb
out
repnz
pop
imul
jmp
inc
ljmp
in
mov
mov
push
into
jp
pop
mov
imul
aad
jmp
lds
inc
pop
mov
jae
stos
xchg
fisubl
outsl
enter
and
rcr
andl
pop
sub
sahf
rcr
arpl
lret
push
lea
cmp
cs
push
pop
inc
jns
repz
test
arpl
or
test
xchg
and
popa
aam
andl
mov
pushf
inc
popf
sbb
ja
and
mov
sub
fsubs
ljmp
sub
mov
fisubs
mov
shr
pop
or
mov
bound
call
repnz
push
stc
test
sub
push
push
gs
push
dec
adc
mov
dec
pop
mov
leave
sbb
mov
push
ds
test
enter
mov
pop
lods
lea
gs
imul
jecxz
int3
cmp
push
or
adc
cmp
daa
shlb
ret
bound
and
addr16
pop
repnz
cmp
mov
push
or
fistps
les
push
loop
jno
dec
ljmp
push
pop
es
mov
jbe
add
outsb
push
rol
icebp
in
out
add
pop
xchg
in
mov
adc
outsl
inc
popf
and
lock
cmp
fldcw
vcvtss2sd
repnz
out
les
dec
mov
fsts
inc
pop
dec
test
sbb
mov
mov
jmp
jb
bound
gs
rcll
push
icebp
xor
mov
call
push
in
ljmp
dec
pop
shll
sar
lock
pop
pop
int
leave
fldcw
sub
pop
sbb
jno
sub
leave
mov
insl
arpl
pop
push
pop
testl
cmp
mov
cmp
cmp
add
mov
adc
pop
mov
andl
ret
icebp
out
movsl
push
shlb
inc
mov
dec
inc
xchg
cmc
stos
in
out
jmp
ja
pop
push
inc
aad
imull
jbe
lods
nop
int3
shll
pop
movsb
mov
pop
cmpsb
add
fcoml
mov
mov
push
push
sbb
push
jnp
or
aam
or
in
add
movsl
loope
filds
xchg
clc
test
dec
loopne
jo
inc
fcoms
out
cwtl
pop
mov
jae
push
lahf
mov
test
sti
sub
mov
jecxz
daa
and
sbb
decl
insb
pop
xchg
inc
std
xlat
push
into
inc
insl
aam
shll
sarl
fdivp
xchg
pop
and
mov
notl
jecxz
gs
ja
sub
push
testl
push
sbb
adc
sub
dec
sub
imul
stos
mov
adc
mov
xor
adc
sbb
and
lock
mov
and
rolb
bound
lock
rcrb
push
std
in
or
mov
icebp
mov
cmp
int
push
dec
lcall
push
or
mov
ret
xchg
lods
push
mov
push
enter
fsub
push
mov
jne
call
sbbl
pop
jbe
mov
sbb
push
sti
loope
mov
adc
xor
or
in
pop
cmp
dec
fnstenv
and
imul
es
add
mov
jl
sub
push
or
dec
add
cmp
or
inc
and
cmp
adc
movsl
jne
jmp
xchg
pushf
mov
into
cmp
fs
pop
mov
xchg
pop
rorl
sahf
out
push
ds
adc
add
mov
add
lahf
jmp
adc
xchg
stc
xchg
pusha
clc
test
add
aas
ljmp
cmpsb
jp
sahf
fcomp
adc
call
stc
push
enter
das
fisubrl
pop
push
roll
clc
pop
loop
and
call
mov
xor
dec
pop
scas
pop
nop
sbb
cmp
xchg
test
stos
sub
imul
cmpsb
mov
out
rolb
sarl
jae
and
ss
xor
mov
mov
dec
lea
push
in
lea
xchg
sbb
xorb
mov
repnz
push
xor
or
and
out
or
outsl
pop
test
shr
jne
scas
sub
cmp
inc
je
mov
lods
aas
dec
xor
sbb
adc
test
rclb
pop
gs
sub
sbb
push
dec
fnstcw
sub
jle
mov
dec
mov
inc
adc
cmp
or
sbb
bound
pop
ret
xor
jl
fnsetpm(287
out
repz
repnz
mov
lret
sbb
jo
ret
lock
cltd
adc
mov
sub
ret
shlb
aad
das
add
inc
cmc
lea
fbstp
lcall
into
or
jle
and
sub
ja
aad
sbb
movsb
or
or
push
push
pop
scas
aad
jne
xlat
das
jmp
lea
mov
sbb
cltd
adc
xchg
mov
scas
push
mov
xchg
or
movsb
add
pop
pop
mov
xchg
xor
mov
mov
jge
jne
iret
scas
sbbl
jne
stos
push
stos
mov
pop
xchg
rorb
fidivrl
jecxz
cmp
mov
dec
es
movsl
popf
sbb
push
jecxz
xor
shrl
dec
das
gs
out
push
push
adc
in
add
inc
or
pop
imull
sbb
stos
sub
and
jmp
adc
mov
inc
mov
clc
int
daa
mov
jns
aaa
sti
lret
fstpt
insb
dec
es
push
test
jmp
imul
mov
add
addr16
sub
mov
mov
gs
out
inc
je
in
in
ret
inc
popl
xchg
and
pop
lret
repnz
fs
subl
fidivrl
sub
mov
or
xor
jnp
cli
cs
daa
cmp
imul
sbb
ret
mov
mov
or
add
stos
pushf
bound
and
mov
push
jle
fidivrs
cmp
mov
sub
es
pop
lret
push
out
cltd
lods
loop
loopne
sbb
fdivr
xor
jl
push
push
sti
jbe
jg
or
shlb
and
lds
popf
dec
icebp
out
sbb
mov
mov
das
push
xlat
fmulp
out
sbb
adcb
aas
pop
imul
sub
fnstcw
loop
ror
fnsave
nop
inc
lock
mov
test
xor
mov
adc
das
jns
lods
addr16
or
nop
shrb
lock
or
push
mov
aaa
clc
je
add
pop
mov
hlt
cld
enter
sbb
push
or
push
mov
jmp
ja
mov
dec
and
jae
sti
adc
mov
test
cld
outsb
adc
out
out
pop
sub
in
or
xchg
into
sbb
xchg
push
inc
scas
iret
push
xor
in
jmp
xor
ja
orb
testl
push
test
xor
pushl
xchg
clc
push
imul
rorb
pop
mov
sub
addl
bound
outsl
mov
lret
mov
arpl
adc
mov
add
cmc
pop
aam
out
fimuls
testl
sti
gs
into
dec
inc
aad
mov
pop
cmp
add
push
pusha
add
clc
lea
imul
push
lea
xor
cmp
mov
out
or
fcmovnu
xlat
cli
or
sub
or
mov
sbb
stos
sar
cld
and
or
loopne
nop
pop
xlat
xchg
mov
ficompl
lock
cmp
push
add
xchg
mov
xor
stc
mov
mov
jae
mov
push
cmp
lods
ret
jo
mov
dec
mov
pop
or
and
out
sub
xchg
adc
mov
addr16
dec
ret
scas
push
fsubrs
bound
pop
xor
dec
cmp
mov
mov
push
leave
out
aaa
adc
loope
nop
fs
sahf
cmpl
jp
adc
mov
aas
cmpb
imul
add
and
aaa
add
add
loop
movsl
rcrb
or
adc
std
xchg
pusha
js
insl
cmp
pop
xlat
mov
movsb
fucomi
add
icebp
adc
push
pop
fwait
dec
pop
xor
mov
lret
mov
scas
call
call
jge
cli
sbb
jo
cmp
push
insb
xchg
cmp
test
jge
ljmp
pop
add
cmpsl
stos
nop
or
pop
lret
xor
pop
or
inc
inc
xor
rolb
inc
fnstcw
ret
lahf
cmp
jnp
jns
fmuls
shrl
sbb
or
mov
mov
jp
add
idivb
rorl
stos
jb
mov
cmp
push
call
pusha
lcall
jns
mov
lcall
mov
int
xor
push
mov
sahf
push
push
inc
push
int
into
iret
sub
add
ret
inc
xchg
ret
inc
ficoms
xor
add
cld
jns
out
mov
frstor
in
mov
jno
mov
or
imul
pop
inc
shrl
push
imul
out
sarb
out
pop
dec
sbb
out
dec
sub
addr16
lds
adc
pop
mov
test
or
xor
cli
mov
or
int3
shl
test
sub
out
mov
jge
popf
mov
imul
or
inc
in
in
mov
sti
loop
loopne
push
xchg
and
push
ss
jg
adc
lahf
dec
movsl
mov
lahf
jp
push
cli
popf
jmp
out
cmp
mov
jp
xlat
js
ds
sub
xor
lock
jecxz
fwait
pop
out
cmpsl
nop
xchg
stc
sbb
insl
dec
inc
ja
jnp
aas
adc
jnp
clc
and
shl
inc
jmp
popf
xor
inc
mov
popf
out
mov
test
lock
mov
pop
in
push
pop
data16
mov
or
dec
notb
fucomip
sarl
in
sub
subl
xor
dec
dec
shrb
cmp
mov
xlat
xor
xchg
sub
mov
dec
arpl
mov
adc
xchg
pop
pop
adc
fcoml
ficomps
push
insl
mov
sbb
cld
ja
jbe
pushf
jle
pop
mov
inc
jne
dec
loope
in
orl
mov
add
inc
fcoms
in
inc
and
popl
jle
loope
stos
std
loop
jnp
cmc
sahf
cltd
xor
outsb
adc
pop
movsb
lods
sub
lcall
icebp
or
push
lods
repz
cmp
jo
icebp
popa
or
into
mov
decb
in
aas
test
movsl
xchg
and
push
mov
adc
sbbl
sarb
sbb
push
loopne
negl
and
xchg
addl
push
cmp
test
dec
inc
inc
inc
xchg
sub
pop
lods
frndint
adc
push
in
jbe
inc
filds
xor
mov
movsl
imul
pop
das
mov
inc
enter
mov
testl
mov
sub
std
sbb
cmc
scas
sub
mov
jo
xchg
sub
mov
notb
aaa
jnp
loop
push
inc
loop
int
jnp
rcl
aas
dec
push
xor
xchg
jae
leave
jo
addb
mov
adc
jne
push
add
lret
add
mov
aad
jno
mov
xor
popa
cmp
inc
shrl
ds
shll
mov
mov
xor
fldt
daa
mov
xor
mov
sub
je
or
dec
stc
in
out
data16
adc
data16
mov
or
int
lea
and
cmp
movsb
sbb
push
fcmovb
aad
in
int
cmp
xchg
cmp
sbb
cmp
fnstenv
rol
inc
push
cmp
test
xchg
pop
in
jb
fdivl
shll
adc
out
pop
das
inc
pusha
shrl
cmp
push
sbb
shlb
imul
inc
call
imul
test
adc
sub
lcall
rorb
mov
mov
inc
popf
scas
mov
and
sti
mov
jns
jnp
and
cltd
jno
movsl
cmp
ss
mov
pop
icebp
orb
adc
adc
rcr
adc
daa
hlt
call
clc
or
fs
or
mov
jl
loope
push
lds
ja
cld
or
xchg
dec
inc
push
das
cmpsl
jo
rolb
jg
sbb
jno
lahf
mov
mov
inc
shll
inc
rolb
bound
fwait
mov
push
push
nop
mov
sub
outsb
adc
push
cltd
cmp
scas
mov
jle
push
arpl
mov
adc
cmp
inc
popf
push
jne
push
in
cltd
outsl
cld
pushf
push
rorb
mov
sub
sub
punpcklbw
shrl
push
xchg
pop
adc
xchg
leave
and
inc
scas
cld
movsl
sbb
cmp
iret
jno
fstpt
push
in
divb
sti
outsb
xor
lods
dec
test
mov
inc
aad
sbb
ljmp
cltd
dec
mov
push
clc
dec
arpl
jns
int
sbb
mov
mov
push
push
out
imul
leave
mov
std
fnstcw
mov
lret
rorb
add
push
loop
cmp
pop
adc
xchg
lret
lods
gs
push
shll
cs
xlat
test
ret
ret
repnz
adc
push
cmp
out
jbe
inc
andb
pop
out
cmp
es
sbb
bt
mov
repnz
in
cmpsb
test
insl
jb
mov
dec
ss
xor
and
inc
int3
or
aas
arpl
int
lods
sbb
enter
lahf
out
leave
ficoml
mov
jecxz
inc
cmpl
jae
fisttpll
push
insb
adc
push
test
mov
lret
rolb
and
sub
mov
in
or
rcrl
stos
in
cmpsb
cmp
mov
out
daa
iret
in
mov
mov
sbb
test
fisubrl
loopne
into
mov
out
or
dec
sti
scas
shr
outsl
int
sub
add
push
push
fcomps
pop
mov
pop
pop
add
add
mov
xor
loopne
outsl
outsl
popa
adc
add
jle
insb
pop
mov
fstpt
movb
push
xchg
mov
rcr
lret
jae
out
hlt
cmp
fildll
inc
data16
xchg
xor
mov
xchg
jge
jl
rep
lret
and
mov
adc
pop
pop
sbb
xor
mov
xlat
shll
sbb
pop
lock
fwait
push
aad
ret
lds
lods
sbb
inc
ss
inc
jnp
subb
jo
cmp
cmpsb
shlb
pop
fwait
adc
lea
jg
movsb
lahf
mov
shlb
lret
mov
jmp
hlt
out
xor
sub
out
arpl
stos
xor
xchg
rorb
dec
push
sbb
inc
ret
and
fwait
adc
cmp
and
add
test
sbbb
popa
pop
shll
cmpsl
and
add
push
jns
add
push
inc
pop
sbb
aad
jo
inc
mov
xchg
sub
arpl
outsl
add
jbe
ret
daa
or
je
repnz
sub
addr16
pop
popa
leave
aad
stos
sub
jg
push
dec
or
xchg
mov
sahf
jl
ja
in
mov
lea
insb
xchg
stos
jno
push
xor
sti
push
xchg
xchg
subl
stos
shl
mov
ljmp
dec
in
or
dec
mov
or
mov
mov
pop
xchg
repnz
cltd
pop
xchg
stos
shrl
lock
push
loope
push
mov
addr16
jo
cmpsl
xor
scas
cmp
push
idiv
and
lods
sub
in
sbb
imul
push
add
lds
mov
xchg
xchg
fisubs
out
stos
out
aas
adc
pop
out
dec
sarl
xchg
fldt
out
in
movsb
fwait
push
decb
cltd
ljmp
stc
mov
pop
int
call
movsl
lock
mov
test
pop
pop
imul
mov
or
or
mov
dec
je
push
sub
movsb
dec
ja
mov
xchg
sub
cmp
insb
shlb
dec
and
cmpsb
les
xchg
data16
mov
xchg
inc
mov
cmpsl
cmpsl
shrb
xlat
xor
adc
and
pop
call
les
cmp
fld
cmp
icebp
mov
aaa
fmuls
sub
add
loopne
ret
inc
mov
or
add
les
shl
cmp
sub
push
cwtl
fldl
sub
push
xchg
ret
sti
push
imull
push
cmp
xchg
sahf
fwait
sbb
int
jg
js
fwait
sbb
fwait
mov
call
je
jne
xchg
xchg
and
cmc
iret
add
jbe
addb
mov
sar
inc
pop
jbe
adc
push
xchg
sub
or
mov
leave
adc
ficompl
sahf
loopne
loope
inc
mov
add
mull
into
psrlw
xor
std
loop
push
xor
xor
out
orl
clc
movsb
imul
inc
push
ret
jbe
inc
pop
add
xor
in
in
popf
fisubs
mov
pop
jl
cmp
inc
dec
lret
arpl
and
cmp
xor
cmpsl
push
mov
ss
jo
mov
mov
mov
gs
lds
sbb
pop
add
xor
sti
fisttps
mov
cmpsl
movsb
xchg
jg
fwait
out
pop
cld
imul
fisubs
out
xor
jae
rcll
jp
out
aas
jb
inc
inc
add
or
test
test
int
dec
jns
jnp
pop
add
pushf
das
loopne
cmp
je
les
daa
push
push
aam
or
and
in
push
xchg
ja
in
mov
lods
nop
cwtl
fistpll
addl
fidivrs
xchg
fidivs
fisttpll
mov
fwait
sub
popa
dec
popf
bound
shlb
aad
or
push
aam
test
mov
pop
stc
push
sahf
ja
push
and
mov
loopne
mov
mov
sub
aaa
mov
or
push
rolb
add
xchg
lods
push
jp
sar
mov
push
adc
jb
pop
push
inc
or
ret
lock
andl
cmpsb
pop
sub
xor
or
mov
lcall
adc
push
fstpl
insl
aad
aam
jno
fimuls
mov
mull
inc
inc
ret
add
xor
mov
jmp
sub
mov
fldt
lea
and
xchg
out
in
jne
pop
push
dec
mov
rorl
adc
pusha
ljmp
mov
subl
inc
xor
mov
mov
loopne
add
sbb
xchg
scas
das
xchg
arpl
fadd
jmp
into
ds
jbe
out
cmp
xor
sahf
xchg
mov
or
pushf
insl
jb
mov
cli
mov
dec
sub
test
out
dec
mov
ret
in
pop
sbb
imul
sbb
xchg
jg
bound
sbb
into
jge
repz
mov
insl
mov
jae
out
pop
out
jne
xchg
push
cmp
adc
and
sbb
push
sbb
xor
adc
jae
ds
out
jno
iret
fldt
push
rolb
mov
jge
lcall
cmp
pushf
shrl
pop
jns
add
popa
xchg
ss
mov
sub
lods
lods
pop
gs
outsl
lcall
sub
push
xchg
pop
scas
xor
cmp
dec
daa
lret
inc
push
xchg
in
out
xor
mov
adc
mov
or
xchg
jmp
ret
push
enter
sbb
cmp
cmp
jle
cmp
cmp
in
and
pop
sub
inc
cmpb
mov
mov
push
xchg
mov
jne
adc
jle
inc
in
push
sbb
xchg
sbb
sti
fisubs
mov
outsl
add
xchg
out
fwait
and
stos
xchg
jae
xlat
mov
push
sub
imul
mov
imul
and
in
push
xlat
je
rorb
call
ss
mov
and
cmp
cs
test
sub
out
ds
data16
in
inc
imul
sub
dec
cmpl
jmp
iret
int3
pop
jns
mov
add
fsubs
imul
rclb
sub
cmp
fstl
outsl
or
xchg
mov
add
jg
mov
aad
mov
and
xchg
outsb
lret
js
sbb
pop
adc
lahf
mov
mov
sbb
fsubrl
sub
notl
mov
push
jmp
ret
xor
dec
add
xchg
cvttps2pi
das
stos
dec
ds
jg
push
sub
mov
sub
mov
bound
daa
ja
sbbb
mov
aaa
or
je
xchg
mov
fisubl
dec
in
loope
aas
movsl
or
insb
mov
ror
stc
popa
xor
insb
insl
lock
out
mov
xchg
les
iret
fld
icebp
sbb
scas
pop
and
out
out
xchg
aad
jo
adc
inc
xor
ds
push
add
jne
inc
ljmp
inc
mov
popf
popa
xor
mov
mov
xor
stc
call
fiaddl
adc
sub
rcrb
xchg
jp
pop
cltd
add
inc
mov
arpl
sub
mov
xor
test
dec
stc
lahf
sbb
pop
outsb
jecxz
jne
ds
imul
stc
cs
xchg
jb
ja
jb
int
add
adc
loopne
shrb
push
leave
mov
hlt
xor
enter
fcomi
into
pushf
call
daa
fwait
or
dec
leave
out
push
mov
mov
enter
test
and
inc
mov
hlt
and
pop
in
add
dec
test
dec
dec
push
fnstcw
in
mov
outsb
add
ss
sub
call
cmp
xchg
cli
ror
xor
call
push
sbb
jne
pushf
push
sbb
insb
mov
enter
ret
push
and
dec
and
xor
inc
movb
pop
stc
add
xor
lea
aas
ret
test
sbb
inc
imul
push
xchg
sbb
xchg
cltd
imul
les
das
lret
jp
pop
push
xor
iret
push
pop
fidivrs
ret
sar
pop
dec
or
out
add
add
ss
jmp
or
inc
negb
dec
imul
adc
stc
sub
mov
enter
jb
aam
addr16
xchg
inc
mov
pop
dec
push
ret
insl
ljmp
cmpsl
mov
lahf
js
pop
xor
cwtl
mov
inc
jnp
and
mov
dec
lock
movsl
das
ljmp
cld
mov
es
sbb
pusha
out
adc
notl
test
sub
rclb
mov
enter
fildl
fiadds
test
test
push
pusha
mulb
jp
xor
test
data16
adc
bound
or
test
jnp
lock
mov
sbb
or
into
cld
pop
shlb
xlat
and
or
incl
push
call
cmp
add
stos
push
andl
adcl
jb
pop
adcl
cmp
data16
jnp
lret
dec
stos
imul
mov
jl
ljmp
inc
sub
inc
lds
fsts
cmpsb
xchg
ljmp
sbb
loop
adc
inc
push
push
inc
xor
dec
pop
sbb
sbb
not
aam
jmp
inc
or
and
fsubrs
mov
mov
adc
or
frstor
add
cmp
sar
adc
ret
loop
shlb
lds
inc
not
dec
in
insl
or
clc
cli
testl
movsl
sbb
leave
out
loopne
adc
jne
dec
push
mov
mov
add
mov
pop
inc
cld
and
jecxz
loopne
rorb
lock
cmp
repz
mov
mov
adc
mov
mov
sbbb
inc
out
sbb
and
sarl
push
adc
insl
scas
or
jecxz
add
xlat
shr
add
addr16
lret
xchg
xchg
rclb
dec
mov
inc
cld
mov
jns
jno
mov
cmpb
int3
outsb
ret
pop
xlat
push
and
jg
imul
add
add
sbb
mov
jl
xor
mov
fadd
roll
insb
into
icebp
mov
xchg
mov
inc
xchg
enter
inc
repnz
sbb
cmp
pop
sub
outsb
mov
jae
mov
es
fisttpll
mov
shl
adc
enter
aas
or
push
pop
xlat
enter
lds
cmp
je
insl
jp
mov
mov
inc
or
insl
cmp
mov
pop
lret
arpl
std
lahf
cmp
pop
jno
fstpl
imul
mov
xchg
test
add
sarl
xor
and
cmc
stos
adc
ds
or
inc
out
jnp
in
sarl
popw
mov
std
or
xchg
xchg
outsb
inc
jle
orb
sub
mov
in
clc
mov
stc
movsb
dec
inc
push
sub
icebp
xchg
sbb
and
ja
imul
test
movsl
fisttpll
nop
and
inc
xchg
cld
jp
mov
sahf
aas
jns
inc
and
xor
shl
hlt
xor
and
xchg
dec
inc
cs
dec
fidivs
adc
in
and
jg
into
fisubl
adc
mov
jne
das
mov
dec
lret
sub
dec
andl
inc
mov
dec
ss
into
add
pop
call
jnp
sbb
add
pop
scas
mov
lret
ret
aam
pop
add
sbb
je
push
test
push
mov
in
cmc
imul
mov
lea
stc
out
incb
pop
add
cld
jbe
fimuls
aaa
or
jae
xchg
or
lds
dec
dec
mov
insb
je
iret
pushf
cmp
ds
sub
sbb
mov
push
rorb
xchg
inc
sub
or
or
repz
xor
daa
mov
cmp
mov
ds
dec
sbb
sbb
out
cmpsl
cwtl
adc
lret
lods
and
out
adc
in
les
lock
outsl
movsl
cmp
sbb
xchg
fists
int3
push
fcmovbe
ficomps
hlt
mov
pushf
shlb
sbb
dec
enter
imul
mov
adc
jbe
inc
jo
adc
dec
xchg
jne
fstpl
pop
fwait
add
pushf
cltd
cmp
mov
mov
pop
fnstsw
imul
loop
or
lds
subb
mov
adc
das
je
test
xor
add
and
jne
xchg
clc
or
push
jne
std
cmp
xor
and
dec
ss
mov
cwtl
jl
in
pop
push
fs
js
pop
add
fidivrs
daa
idivl
inc
push
pop
mov
pop
push
mov
enter
in
cmc
adc
adc
mov
jne
xor
sbb
in
sbb
jl
std
fildl
push
cmp
popf
mov
and
adc
arpl
test
dec
mov
mov
in
sahf
xchg
idivb
cwtl
cmp
push
dec
adc
add
es
jge
fbld
and
push
mov
pop
insl
mov
fdivl
xor
cmp
js
mov
adc
dec
ljmp
aaa
in
bound
roll
push
xchg
pop
inc
out
dec
clc
pop
xchg
xor
inc
sahf
sar
push
add
xor
mov
xchg
test
insl
xor
sub
mov
pop
jl
int
push
xchg
jmp
aam
std
cmp
pop
loopne
add
cmpsl
nop
repnz
fcompl
pop
mov
jne
sbb
mov
lods
test
lcall
cmp
dec
push
inc
add
les
sub
xchg
fs
loopne
xor
loope
dec
cwtl
mov
adc
sbb
aam
jmp
lret
mov
xorb
push
sbb
sbb
cmp
cld
xlat
out
int3
xor
imul
lods
int3
adc
in
and
sub
jmp
in
mov
fbld
lds
dec
or
enter
data16
loope
sahf
dec
roll
push
scas
xor
roll
mov
cmp
aaa
mov
into
iret
jp
mov
scas
mov
nop
std
aam
test
test
andl
out
dec
jge
mov
cmp
cmpsb
bound
adc
fmull
fstpt
les
aad
dec
mov
adc
sbb
mov
xchg
sti
or
aaa
jmp
pop
inc
scas
cmp
arpl
add
repz
ss
and
dec
lds
sar
jnp
aas
jo
pop
sti
aaa
pop
repnz
mov
push
loopne
call
jg
xor
bound
in
lods
xchg
xchg
ret
xor
push
xchg
pop
rolb
adcb
pop
mov
xchg
fldcw
call
mov
and
sbb
jbe
cmpsl
cmp
ret
pusha
cmp
push
sarb
cmpb
xor
outsl
jo
ja
push
mov
stc
and
sti
inc
daa
mov
mov
rclb
loopne
xchg
andb
inc
in
jmp
lds
inc
imul
sub
cmp
push
cmp
or
sarl
in
push
jge
jae
pop
outsb
je
adc
add
cmpsl
ja
fildl
push
add
and
inc
inc
and
js
inc
popa
jg
adc
mov
nop
add
mov
out
dec
mov
aaa
out
mov
push
sbb
pop
cmp
mov
cmc
push
fs
shrl
aam
fs
loop
rolb
into
cld
insl
dec
ljmp
icebp
flds
xor
int3
push
add
sbb
jg
pop
mov
or
in
inc
enter
sbb
cmp
push
icebp
mov
pop
adcl
adc
mov
jno
jp
add
mov
and
push
mov
outsl
repz
xlat
jl
mov
and
fdivrl
xchg
jmp
ss
stos
mov
outsl
ja
cmpps
icebp
jl
add
test
cmp
dec
xchg
insl
mov
sbb
inc
jle
sbb
mov
ds
mov
enter
cmpsb
sbb
pusha
mov
mov
icebp
mov
in
pop
inc
and
test
sysenter
push
into
mov
mov
xor
rcll
fisttpll
mov
data16
lahf
push
call
push
cwtl
jo
movsb
lcall
xchg
test
roll
xor
int3
mov
xchg
ret
and
xchg
shlb
imul
xchg
cmp
roll
cltd
rcrb
jg
mov
jno
inc
iret
mov
fdivs
movsb
es
out
lock
mov
stos
mov
inc
lahf
or
jp
mov
mov
lock
xchg
adc
dec
lds
lods
and
or
lahf
iret
ret
lds
andb
add
adc
adc
mov
pinsrw
iret
dec
sahf
call
or
enter
push
sub
adc
push
push
repz
mov
inc
mov
xchg
xchg
mov
jl
es
mov
and
sbb
sbb
addr16
icebp
dec
test
dec
das
out
pop
movsl
jae
pop
lcall
push
movsl
lods
add
lcall
adc
stc
xchg
add
out
mov
subb
roll
dec
xor
push
sbb
push
jno
testb
decl
or
subl
mov
cwtl
ja
inc
int
pop
je
aaa
sub
lret
adc
or
clc
sub
dec
sub
xchg
lea
mov
push
bound
cmp
cmc
sahf
push
add
sub
nop
fldl
mov
scas
push
lods
out
dec
sbb
mov
aad
fwait
sub
icebp
lret
cmp
mov
outsl
add
lret
test
loopne
jno
fdivl
out
pop
lcall
and
outsl
ds
jbe
add
call
mov
mov
sub
aam
out
jle
outsb
xchg
jp
push
mov
rolb
mov
mov
pop
push
xor
lahf
xchg
push
jb
fnstsw
test
adc
jnp
xchg
out
repz
fs
dec
mov
lret
aas
sarb
jle
fnsave
xchg
or
lahf
add
lds
adc
jg
sbb
jle
cmp
xchg
inc
mov
push
xchg
xor
repnz
mov
out
xor
mov
jo
mov
xor
jg
push
ss
mov
ret
imul
fildll
jo
push
dec
inc
adc
enter
mov
inc
in
dec
ja
mov
les
dec
push
cltd
stos
inc
ret
mov
data16
sbb
mov
loop
inc
adc
int3
test
adc
mov
or
mov
stos
lahf
pop
hlt
ret
sub
push
xor
xchg
pushf
mov
idivl
add
and
fistpl
pushf
pop
add
pusha
inc
mov
aam
push
test
push
lahf
sarb
hlt
mov
sarl
int3
les
hlt
dec
in
daa
in
in
out
adc
mov
shlb
mov
imul
js
dec
sub
fcmovb
sub
adc
popl
pop
cli
adcl
xchg
xchg
and
mov
xchg
ficoml
or
je
dec
jg
mov
insl
sub
mov
xchg
dec
inc
icebp
in
in
mov
adc
std
xchg
cmp
pop
jne
arpl
xor
adc
jle
cmp
out
aas
cmpsl
cmpsl
or
lods
in
pop
add
push
pop
adc
leave
add
js
sahf
inc
cmp
or
cmpsb
jo
mov
sub
cmp
pop
fcomi
shlb
pop
mov
fimuls
dec
sti
nop
js
fwait
jne
push
cmp
push
icebp
cmp
jne
xchg
sub
repz
push
das
hlt
dec
mov
out
ds
loopne
push
and
push
sub
inc
mov
mov
mov
push
and
inc
ljmp
bound
jne
jae
cmp
sti
fsubl
mov
das
mov
aas
xchg
cmp
jg
mov
mov
xchg
jno
and
mov
cmc
nop
lock
sti
jno
mov
xor
mov
out
xchg
jg
pop
mov
mov
jl
jo
out
adc
cmp
mov
pop
xor
sub
outsb
repnz
jns
into
aas
push
sub
ret
out
dec
test
xchg
sbb
gs
and
cmpsb
push
stos
xchg
leave
cmpl
jmp
subl
xchg
xchg
fisubs
lret
hlt
mov
dec
stc
aad
jb
xchg
out
cmp
cmp
int3
pop
add
test
lret
adc
sahf
pushf
iret
cli
into
out
clc
out
xor
adc
notb
xchg
enter
loope
mov
pop
mov
test
sahf
sbb
js
repz
jnp
in
adc
push
pop
mov
pshufw
shl
pop
inc
pop
jno
mov
xor
pushf
je
in
dec
xlat
sbb
dec
pop
push
xchg
lea
data16
and
fstpl
mov
std
lock
test
or
lds
mov
hlt
xchg
repnz
out
xchg
jno
pop
addl
lods
movb
cltd
in
ljmp
negl
cmp
xchg
and
ljmp
addb
push
push
dec
jmp
push
jne
push
push
mov
das
xchg
pop
push
push
mov
adc
mov
xchg
add
cmpsb
and
lcall
add
in
xchg
inc
mov
xor
jle
int
push
in
jbe
or
test
dec
fsubs
lds
cmc
dec
push
xchg
insb
rolb
pop
and
out
mov
sub
adc
mov
std
push
cmp
int3
inc
cmpsb
sbb
rcl
scas
cmc
das
sub
cmp
jge
sub
mov
cmp
aas
fstps
mov
aad
subl
jmp
addb
fimuls
dec
imul
pop
or
shlb
clc
cli
iret
add
mov
pop
clc
inc
mov
lret
jbe
outsl
inc
loope
test
pop
movsb
scas
push
pop
xchg
sarl
jecxz
mov
test
out
and
loope
adc
shll
xchg
push
xor
add
pop
notb
dec
dec
pop
inc
xchg
xrelease
and
jb
add
cmp
std
adc
sbb
shll
into
xchg
dec
fsts
mov
pusha
scas
push
mov
data16
cmp
pop
pop
cmp
shr
inc
pop
shrb
and
je
cli
mov
pop
repnz
pop
inc
cmp
testb
fimuls
sub
ret
andl
jmp
mov
sub
xor
cmpsb
hlt
sbb
pusha
cli
or
inc
icebp
lea
ret
dec
js
lock
nop
fnstcw
xor
jns
mov
xchg
clc
jns
mov
int3
frstor
popf
out
cli
jge
sub
mov
push
xchg
push
pusha
das
sub
and
push
andl
cs
jp
pop
arpl
mov
xor
jnp
insl
jbe
scas
rorl
iret
int3
ret
mov
mov
pop
mov
or
and
loope
imul
test
add
cmc
jecxz
mov
test
roll
lcall
push
fdivr
inc
xchg
in
mov
mov
cltd
jp
rclb
mov
lods
ficomps
xor
sbb
outsl
adc
mov
js
stos
movsl
sbb
or
in
add
call
movsl
jl
cmp
mov
js
imul
dec
mov
aas
jae
mov
push
imul
das
lock
sub
and
loopne
and
pop
popa
push
loop
out
or
ja
in
popf
jne
pop
fdivs
push
data16
arpl
or
pop
cltd
push
mov
sub
out
mov
pop
mov
mov
adc
loope
mov
cmpl
cli
or
es
lret
js
and
xor
shr
adc
add
mov
out
cmpsl
and
call
lret
mov
shr
sub
xchg
scas
cmp
movb
mov
pop
mov
push
inc
and
add
aaa
mov
or
call
std
ret
repz
inc
inc
dec
push
out
aaa
fstl
xchg
or
pop
inc
dec
mov
into
sub
fcmovne
cs
pop
push
push
sub
and
pop
fldenv
test
cmp
jmp
lcall
in
loop
mov
test
dec
pop
jp
addr16
outsl
xchg
push
lods
jb
test
push
and
pop
popa
jb
ret
push
into
pop
jl
xchg
cmpl
push
test
test
aas
cmp
pop
push
push
out
push
mov
xor
mov
jle
pop
ficompl
add
ret
xchg
xchg
sub
addl
and
stc
enter
xchg
mov
mov
and
lret
push
daa
sub
mov
cwtl
lahf
shll
or
lock
shrl
sub
jle
iret
sub
dec
xchg
out
add
leave
ss
loop
mov
jnp
cld
jl
aam
test
shl
mov
pop
aam
jb
in
push
add
pop
cmp
push
cmp
mov
loop
fldcw
lea
xor
add
inc
sub
into
cltd
jne
imul
ret
data16
xorb
push
xor
and
adc
pusha
test
idivb
clc
jle
xchg
test
fstpt
cmp
pop
mov
push
aam
mov
dec
cmp
sub
jbe
lret
or
into
bound
or
test
sub
xchg
mov
cmp
mov
mov
sub
cmc
inc
dec
sub
in
dec
mov
cld
mov
movsl
inc
pop
jbe
jmp
mul
mov
fwait
enter
popl
shll
int3
dec
mov
subl
mov
fmull
push
pop
ja
mov
mov
lret
sub
clc
sbb
sahf
aaa
jge
cld
mov
inc
mov
pop
sbbl
mov
sbb
addr16
xchg
xchg
push
mov
jae
xlat
jl
cltd
rol
push
jmp
mov
pop
mov
test
jl
fisubrs
ret
xchg
and
pop
sbb
mov
lods
adc
rolb
sbb
incl
jg
insb
outsb
sbb
cltd
imul
lret
jae,pn
dec
lds
or
aas
sub
aaa
adc
data16
iret
loopne
mov
out
or
mov
xor
jne
fisttps
inc
loope
clc
push
ret
out
filds
in
rcrb
ret
sbb
rorl
popa
mov
pop
clc
pop
jmp
add
push
push
add
and
dec
push
insl
push
lods
rolb
jns
cli
loop
mov
mov
pop
jae
aam
mov
sub
out
fs
inc
into
in
and
mov
inc
loope
icebp
add
jae
mov
es
pusha
fnstcw
loope
add
sub
mov
dec
inc
out
xchg
push
rclb
insb
or
aam
xchg
xor
aad
repnz
pop
popa
or
or
inc
pop
adc
leave
aam
leave
jns
fistpll
iret
cmp
fildl
lock
and
stc
mov
mov
jbe
in
xchg
and
push
sahf
dec
loopne
mov
cld
jb
cmp
sbb
sub
fdivs
jb
incl
callw
push
add
dec
dec
out
cltd
repz
pop
mov
add
xchg
ss
int3
dec
mov
xlat
mov
push
test
push
data16
in
insb
xchg
xchg
and
repnz
xchg
sahf
xchg
sbb
sbb
notl
into
les
in
add
inc
jecxz
insb
sar
imul
lahf
test
insl
out
outsb
out
roll
and
xor
fbld
ja
clc
xchg
cli
nop
aam
insl
push
cmpsl
fsubrs
xchg
cltd
push
cmp
xor
fwait
adc
pop
and
add
leave
in
dec
incl
fidivrs
lods
popa
and
insl
lock
std
lock
mov
nop
and
subb
pop
and
movsb
call
pusha
and
sub
mov
dec
xchg
lock
inc
push
jmp
andl
imul
test
jno
nop
mov
sbb
sbb
mov
inc
push
aas
fcompl
arpl
sbb
mov
lcall
mov
push
cmpsb
xor
jno
push
pop
push
pop
arpl
mov
iret
push
adc
push
xchg
orps
dec
cmp
xor
push
dec
sahf
shl
xchg
jmp
div
add
fimuls
jno
sub
sbbl
imul
push
lds
mov
pop
bound
imul
inc
mov
push
cmp
jle
xor
push
frstor
popf
imul
movsl
in
pop
jns
ret
dec
push
push
dec
mov
mov
ret
call
or
in
xchg
lods
push
shlb
mov
out
push
scas
cmpsl
dec
andb
sub
xchg
mov
cmp
jns
loop
mov
popa
sbb
scas
imul
es
or
adc
cmp
enter
popf
pop
out
scas
ljmp
jbe
mov
mov
push
js
out
inc
leave
add
hlt
jae
lock
mov
lret
mov
insl
lahf
sbb
cli
mov
xor
sbbb
in
mov
ret
sbb
test
jae
out
jp
sub
int3
xchg
and
cli
mov
xor
sbb
lret
mov
insb
jns
mov
icebp
pop
xchg
sahf
ficoml
inc
or
xor
sbb
test
ljmp
fcomip
int
cmc
dec
xchg
movsl
cmc
mov
or
sub
fwait
and
cmp
cmp
into
jg
xor
lahf
cmp
fwait
pop
dec
cmc
dec
dec
and
jae
pop
lds
rolb
scas
lret
jg
dec
int3
negl
push
sbb
cmpsb
test
cmp
cwtl
test
mov
insl
hlt
xorb
popa
xchg
add
xchg
fsubs
in
cmpl
aam
push
mov
sahf
lds
mov
fstp
or
push
mov
loop
jmp
iret
mov
push
in
push
insl
pop
incb
lods
sub
clc
xchg
xchg
pop
out
jne
xchg
pop
ret
in
adc
repz
out
outsb
mov
sbb
pop
rep
add
push
sahf
leave
data16
push
push
xchg
inc
cmp
in
popa
in
mov
mov
lea
leave
popa
mov
in
xchg
xor
sbb
xlat
push
cmp
jmp
fimuls
mov
out
mov
push
popf
or
nop
lret
cmc
fbstp
mov
ficomps
or
mov
sbb
fbld
in
jl
pop
jbe
xchg
shl
lods
push
pop
loopne
cmp
push
cmp
popf
pop
repnz
in
cmp
outsl
sbb
mov
pop
mov
mov
xchg
call
into
push
cmp
es
jb
xchg
lea
sbbl
mov
out
lahf
jmp
fadds
add
call
dec
cmp
outsb
adcb
lds
sahf
mov
push
mov
or
pop
jno
push
jbe
rcrl
repnz
fdivl
mov
lret
push
mov
aas
pushf
in
adc
push
sar
xor
jns
cmpsl
insl
shlb
or
dec
cmp
pop
jl
jbe
cmpsl
jmp
movsl
adc
andb
sub
cmpsl
xor
inc
add
mov
cmp
int
lcall
movsl
test
adc
dec
outsb
outsb
and
cmp
das
xor
ss
test
aam
bt
insb
cmp
js
cld
sub
inc
pop
cli
andl
mov
hlt
sbb
in
and
stos
inc
add
loop
dec
and
jb
in
push
out
add
test
sahf
out
sbb
push
ljmp
out
adc
push
cmp
mov
clc
xchg
sbb
dec
repz
rcrb
mov
aam
fimull
sub
inc
fld
push
jnp
mov
xorb
cmovs
or
jg
and
leave
cmc
hlt
sub
jg
mull
cltd
js
and
xorl
adc
push
mov
push
pop
pop
push
bound
repnz
inc
sbb
add
repz
shll
call
sbb
cmpsb
dec
or
daa
lock
pop
mov
ret
mulb
pop
mov
adc
xchg
ljmp
in
jmp
push
mov
jge
cmp
push
lret
fmulp
xchg
and
jecxz
addl
sub
cmpl
arpl
cli
xor
mov
jmp
or
xchg
daa
mov
pop
dec
inc
js
jns
lahf
inc
neg
in
cmp
push
leave
dec
and
cmc
mov
leave
in
out
stos
jmp
add
imul
int
int3
push
cli
ds
imul
sbb
cltd
mov
dec
inc
or
mov
or
push
dec
adc
jbe
dec
lcall
jecxz
ds
test
inc
pop
mov
adc
scas
adcl
pop
mov
cmp
jecxz
loope
push
xlat
pop
jns
bound
movsb
jns,pn
sbbl
out
jnp
stos
sub
fstpt
sti
insb
dec
in
stos
ja
push
jle
enter
mov
fwait
cltd
pop
in
imul
jno
xchg
fists
xchg
cmp
xchg
cli
jp
add
push
jmp
sub
call
stos
pop
cmp
jl
sbb
cld
mov
or
xlat
lret
popf
pushf
lods
jecxz
lret
xor
fwait
movb
leave
jle
xchg
bound
insb
notl
mov
inc
mov
and
inc
mov
or
mov
xor
xchg
push
addr16
jmp
popa
cmp
adc
pop
inc
cmp
xchg
sarl
popa
in
adc
rcrb
gs
adc
jns
mov
jecxz
ret
or
mov
and
sbb
pop
orb
in
ficoms
mov
cld
in
mov
push
scas
fmuls
push
orb
idivl
sub
mov
and
aad
cwtl
mov
fimuls
outsl
jle
mov
movb
cli
push
pop
movsl
pop
jge
jbe
mov
jge
xchg
push
loope
loope
in
jbe
scas
stc
fiadds
sahf
js
int
sarb
lods
or
hlt
mov
lret
push
test
xor
or
push
and
mov
and
cmp
fimuls
scas
movsb
jbe
mov
icebp
pop
sub
in
aad
dec
jecxz
jg
faddl
push
subb
and
int
jb
add
jbe
movsb
cli
aam
or
and
fdivr
sub
sti
stc
sti
loop
adc
push
xchg
scas
sub
inc
push
les
xlat
mov
jo
not
mov
fnstenv
roll
idivb
push
ja
movl
push
add
xor
xor
iret
jnp
stos
std
lock
cwtl
pusha
push
aam
mov
test
jge
scas
fucom
jecxz
mov
bound
js
stos
pushf
aas
dec
mov
dec
sbb
push
cmpsl
fsts
std
adc
jg
out
movsb
aas
jle
movq
jle
lret
ljmp
bound
jo
xchg
xor
add
sub
les
clc
lods
mov
cs
popl
addb
mov
insl
push
bound
fldcw
xchg
sbb
fsubp
jle
dec
outsb
addl
xor
cmp
fdivs
pushl
dec
xor
aaa
scas
mov
xchg
ds
mov
adc
bound
call
bound
shlb
dec
and
jnp
aad
adc
call
push
dec
stos
fsts
das
fwait
stos
and
je
pop
int3
fdivrs
push
and
insl
movb
hlt
dec
sub
mov
ljmp
int
in
adc
in
inc
pop
lods
sbb
aam
push
aad
cwtl
ljmp
cmpsb
and
xchg
mov
or
inc
xchg
pop
push
inc
inc
pxor
data16
cmp
out
cmp
mov
lret
fstpl
xchg
popa
jp
scas
push
xchg
push
into
pop
xor
mov
mov
adc
jns
aas
addl
jg
rorb
bound
mov
repnz
ret
out
clc
cmpsl
inc
cmp
mov
ja
and
inc
mov
dec
dec
jb
aaa
mov
add
rorb
in
in
std
icebp
add
inc
sbb
jae
stos
cs
adc
add
mov
pop
xchg
sub
dec
mov
mov
dec
xor
sub
sbb
popa
loopne
sbb
and
pusha
mov
mov
rcrl
mov
je
push
les
repz
lret
jne
pushf
stos
jp
or
jg
cmp
outsb
nop
pop
or
mov
add
movsl
cli
pop
dec
in
ss
xor
idivl
ss
inc
mov
jb
push
mov
and
push
xchg
mov
lret
jmp
addl
dec
inc
insb
mov
and
arpl
inc
xchg
pop
lods
xor
sti
cmp
call
mov
repnz
imul
push
stc
dec
in
pop
jns
push
sub
push
xor
in
insl
dec
rclb
add
imul
popf
cmp
lock
pop
and
cmp
loopne
xor
mov
mov
jecxz
sub
xor
enter
dec
fs
jns
dec
sbb
test
in
bound
sbbb
cli
lahf
adc
and
xchg
test
sahf
js
insl
in
stc
pop
pop
aam
sub
jle
and
loop
inc
push
test
push
jne
mov
loopne
mov
cwtl
mov
in
fldenv
xor
daa
inc
pop
xchg
push
mov
fs
aaa
std
ja
sub
sub
sbb
or
jecxz
dec
sub
scas
cwtl
inc
inc
notb
pop
loopne
movsl
or
sbb
rorb
mov
adc
imul
pop
les
data16
test
xchg
inc
fs
fnstcw
scas
cmp
inc
sub
sbb
xlat
repz
fbstp
pop
inc
imul
mov
stos
ret
movsb
loope
inc
cmp
mov
or
cmpsb
lahf
cmp
inc
push
mov
dec
mov
sub
loopne
popf
mov
leave
ret
je
xchg
in
dec
out
xchg
push
stos
pop
xor
lods
and
mov
pop
sbb
xchg
or
and
nop
xchg
jno
mov
sub
icebp
scas
and
cmp
pop
push
jecxz
adc
imul
arpl
ljmp
pusha
and
dec
loope
add
in
cmc
cmpsl
sub
or
sub
mov
cs
mov
cmc
cmp
mov
call
cmp
cmp
and
xor
dec
in
lret
scas
xor
icebp
xchg
ja
fmull
mov
adc
imul
pop
test
out
xorb
jecxz
mov
movsl
hlt
nop
cltd
imul
ljmp
mov
sarl
cmp
notb
les
jo
rorb
stos
or
push
pop
push
cmpsb
push
cmp
add
ljmp
movb
in
cs
adcb
out
xor
fstpt
and
mov
add
rclb
dec
xor
hlt
rorl
push
shlb
fnsave
movsl
insb
mov
push
adc
sub
pop
ret
xor
mov
inc
je
ss
jl
inc
out
lcall
adcl
inc
lods
adc
pop
rclb
es
mov
or
repz
ret
aad
sbb
clc
inc
iret
and
jge
dec
or
fists
stos
sub
loop
xor
sti
jae
add
out
xlat
ja
addr16
out
adc
getsec
in
insl
mov
mov
aaa
into
xorl
adc
lods
std
shll
mull
mov
decl
fcmovne
jbe
dec
push
dec
mov
outsb
negl
clc
lods
jg
les
dec
fcoms
mov
loop
add
add
xchg
sti
push
and
cpuid
xor
push
mov
js
clc
setl
aam
mov
orl
gs
jg
inc
popf
in
rcll
inc
jbe
ds
and
insb
into
mov
pop
outsl
mov
cmp
shlb
pop
cmp
imul
icebp
out
add
jle
and
cld
loop
mov
in
sub
fldl
lret
movsb
aas
lret
dec
mov
jo
call
cmp
mov
xchg
jne
inc
pop
lods
mov
lock
dec
xchg
add
pushf
adc
nop
inc
imul
insl
cmp
pop
ret
testl
inc
rolb
aam
cmpsb
fdivrl
ja
add
sub
lods
jl
cmpsl
out
repnz
adc
mov
cmp
scas
in
mov
pop
js
fisttpll
test
add
fisubrs
jp
mov
outsb
rcrb
loop
and
imulb
xchg
xlat
repnz
insl
ss
push
mov
pop
in
hlt
sbb
adc
add
loop
fnstcw
int3
xchg
dec
pop
stc
xchg
dec
cld
and
insl
mov
lahf
pusha
inc
push
daa
aam
xor
jbe
mov
iret
mov
dec
mov
daa
mov
movsb
push
push
aas
xchg
pop
dec
sub
lods
iret
movsl
pop
das
mov
xchg
sbb
mov
scas
push
repnz
jo
cmpsb
fdivs
push
pmuludq
dec
pop
xchg
mov
mov
mov
lods
movsb
adc
out
fnsave
xchg
call
cld
pop
scas
loope
negl
cmp
js
push
mov
imull
scas
fwait
sub
mov
jmp
sub
inc
pop
popa
ret
ja
hlt
cmp
aaa
pop
iret
pop
mov
adc
int3
dec
cli
hlt
add
sbb
shlb
sbb
arpl
sbb
or
pusha
call
pop
sbb
test
outsl
in
rorl
lcall
cmp
mov
mov
add
sub
rclb
fwait
ret
xchg
fidivrs
ja
adc
das
test
inc
or
movsl
dec
insb
push
negb
adc
imul
and
jmp
sub
fcompl
bound
int3
enter
rclb
lods
xchg
push
jg
jmp
sub
mov
sub
test
out
adc
sbb
imul
mov
pop
xor
test
js
test
adc
int
mov
push
pop
enter
gs
dec
in
into
jl
scas
fadds
pop
jb
lret
flds
mov
mov
rcrb
fwait
adc
lret
push
or
jnp
loop
adc
xchg
jo
mov
adcl
clc
out
cmpsl
cmpsb
cmp
insb
pop
push
and
fisubl
push
dec
push
cs
inc
jnp
jl
imul
jecxz
hlt
icebp
inc
mov
ret
aaa
and
scas
jns
lcall
jns
cmp
aad
sbb
dec
in
and
and
outsb
push
add
test
gs
push
cmpsl
xor
test
sub
stos
xchg
xchg
dec
daa
rcll
inc
inc
imulb
addb
shrb
inc
icebp
or
mull
cltd
xchg
in
dec
mov
cmpsl
shll
stc
packuswb
xor
push
jg
ficomps
pop
lahf
ret
gs
adc
jne
push
test
mov
movsb
jl
lods
cmp
or
jg
sbb
dec
negb
jnp
sbb
out
adc
hlt
push
outsl
cld
inc
push
insl
sub
mov
stc
xchg
jbe
sbb
jnp
sbb
imul
inc
lds
movsb
ja
inc
popa
movsl
loop
add
cld
loope
js
jbe
cmpb
in
mov
inc
sti
dec
cmpsl
data16
mov
aas
push
sub
lods
lock
mov
ret
popf
cmc
jno
cmp
out
enter
adc
jmp
mov
ffreep
inc
adc
inc
repnz
rcr
icebp
sbbl
and
outsl
jle
pop
mov
cmp
pop
inc
and
cmp
push
xor
ret
sbb
lds
and
lods
cmp
push
inc
popa
fcmove
nop
mov
add
mov
adc
hlt
inc
jle
sub
lea
lret
sub
mov
in
add
jp
dec
sbb
lret
dec
pop
pop
push
xchg
mov
push
cltd
push
xchg
ficoml
inc
jge
push
xchg
aad
inc
xchg
mov
fcmovnb
lds
adc
in
loop
outsb
in
outsb
or
jo
pop
xchg
fildll
mov
sbb
xchg
push
cmp
js
dec
xchg
out
ret
aam
fimull
sub
hlt
cmp
daa
rcrb
arpl
sbb
adc
cli
or
jp
aad
nop
in
cld
pop
cs
in
shl
fnstenv
or
aas
inc
cmp
icebp
cmp
or
pop
inc
cld
jp
popf
push
je
dec
inc
mov
repnz
pmullw
mov
and
xchg
xchg
jnp
rorb
iret
mov
enter
cmc
xor
mov
jle
arpl
dec
leave
lods
fistps
fildll
mov
jne
mov
add
dec
cltd
jg
sbb
mov
fimull
mov
pop
pop
mov
jle
lds
sub
ja
inc
add
sbb
cmp
iret
cmpsb
pop
in
xorb
inc
int3
ljmp
mov
sar
in
lods
jg
insb
lret
cli
pop
in
insl
je
xchg
mov
jecxz
filds
shl
pusha
pop
jo
dec
lods
lahf
jmp
dec
dec
mov
jg
out
xor
xchg
shlb
sub
push
aas
subb
sbb
repz
scas
jae
outsl
fsubs
push
std
popf
repnz
std
fisubrl
testb
mov
sbb
or
fcmovnbe
jb
mov
lock
pop
pop
lea
dec
ret
and
popa
insb
pop
andb
fxch
rorb
int3
and
and
movb
mov
push
push
xchg
cmp
mov
xor
sbb
jle
int
xchg
mulb
shl
push
mov
sub
xor
outsl
testl
or
jle
cs
in
xchg
movsl
fsubrs
mov
popa
shl
mov
add
inc
dec
mov
ret
andl
mov
shlb
cwtl
popf
cmp
mov
jl
cmp
ret
mov
in
jp
add
into
aas
sub
mov
clc
stc
xchg
addr16
push
jae
pop
aas
insb
repnz
mov
stos
in
adc
push
pop
imul
jae
pop
scas
aas
and
sub
cmp
hlt
xchg
mov
sbb
fldl
hlt
dec
pop
test
adc
test
or
je
push
andb
out
adc
mov
int
icebp
insb
cltd
mov
cltd
sbb
dec
mov
test
push
daa
pop
pop
mov
icebp
adc
stos
outsb
sub
jge
adc
pusha
push
cmpb
mov
cmp
arpl
dec
enter
lods
cli
setno
mov
mov
cmpl
cmp
cmpsl
mov
mov
jmp
int
sbb
stc
mov
jo
repnz
pop
movsb
fdivp
test
push
jecxz
sub
mov
rcll
and
jg
push
icebp
sarl
add
inc
jno
stc
jnp
pop
es
and
out
call
push
inc
idivb
mov
sub
jp
in
fisubl
inc
add
int3
mov
test
sahf
sub
inc
aam
push
ja
inc
adc
sub
mov
call
js
rcll
dec
aam
idiv
push
ss
incl
pop
mov
or
xchg
mov
enter
cltd
repz
cltd
mov
scas
xchg
repnz
jg
adc
mov
push
adc
sahf
mov
ljmp
sub
mov
gs
adc
xor
sbb
fidivrl
pushf
loope
std
dec
jbe
cli
sub
mov
xchg
cwtl
mov
test
lock
dec
adc
mov
sub
and
mov
fs
pop
out
in
out
roll
sub
notl
out
jnp
and
mov
les
cmp
cli
vpavgb
pop
mov
out
inc
xor
out
adc
iret
outsl
push
xchg
call
fstl
adcl
jl
loop
inc
decl
fstpt
cmp
cmp
sbb
mov
imul
insl
mov
in
push
add
pushf
pop
daa
dec
jp
sbb
inc
xlat
mov
rcll
int
xchg
test
movsl
lret
test
shr
lahf
data16
outsb
pop
cmp
ds
cwtl
popa
pushf
outsb
push
rcl
lods
sub
xor
lret
rol
out
repz
mov
add
fcompl
xchg
pushf
mov
xor
jecxz
mov
clc
popf
cmpl
sub
adc
es
les
mov
xor
pop
andl
mov
push
loope
inc
fldcw
js
mov
outsl
fcoml
jge
xor
jbe
jbe
push
enter
scas
sbb
xchg
mov
dec
mov
fs
cmp
bound
mov
test
ljmp
loope
lods
fcomip
sbb
mov
jo
mov
inc
outsb
cmp
ret
mov
push
xchg
add
in
mov
inc
sahf
sahf
dec
mov
test
cld
in
inc
push
out
push
mov
pop
icebp
xlat
dec
dec
repnz
xsaves
mov
mov
and
mov
pop
repnz
cmpsl
push
cmp
inc
pushf
xor
adc
aad
cmp
jle
in
dec
je
add
dec
xrelease
and
pop
cltd
mov
cli
sbb
test
xor
or
jp
or
dec
fwait
lods
ret
dec
jns
loopne
das
popf
sbb
add
mov
cmc
or
in
sub
fcmovu
jae
mov
fistps
cmp
pop
int3
push
jae
xor
push
popa
lock
cmp
adc
xchg
adcb
xchg
jle
adc
pop
xor
cmp
add
frstor
sahf
sbb
scas
and
lock
ss
aam
mov
addb
jbe
movsb
xchg
into
pop
pop
arpl
clc
cmp
dec
mov
mov
xor
pop
mov
dec
mov
fsubs
cmp
gs
adc
and
out
stc
out
push
pop
daa
das
in
inc
and
push
pop
orl
frstor
push
jb
popa
je
rcll
push
fmull
js
int3
cmp
jno
pop
mov
cmp
cmp
mov
and
das
pop
scas
jo
sarl
jne
repz
mov
stc
lods
clc
cmpsl
dec
test
das
cmpsb
mov
or
out
cmp
dec
or
cmp
jnp
adc
and
jg
idivl
lret
ror
inc
jmp
ss
dec
push
add
scas
inc
add
or
test
inc
es
adc
out
xlat
cmp
std
mov
sar
das
cmp
add
inc
or
in
adc
enter
aas
cs
push
mov
mov
push
cli
add
ret
sbb
pop
out
sbb
cmc
fs
hlt
and
movd
mov
das
mov
mov
mov
or
xor
les
and
mov
inc
inc
pop
sbb
mov
push
sarl
mov
je
adc
int
pop
cmc
aam
call
ret
ficoms
loopne
outsb
and
and
ljmp
sti
add
jge
leave
ret
xor
xor
jnp
cmpb
adc
mov
xor
xor
imul
jp
xchg
mov
dec
jle
repz
push
adc
mov
dec
movsl
xchg
stc
dec
add
imul
or
pop
rolb
lock
push
imul
pop
rorb
adc
push
loopne
fadds
jle
out
mov
jnp
cltd
fsubl
jbe
jg
mov
push
xor
dec
sahf
outsb
rol
jmp
dec
lock
or
or
push
cmpb
js
mov
ja
icebp
shlb
ret
sbb
xor
mov
mov
in
xor
leave
adc
daa
repz
and
adc
pop
mov
sti
push
stc
outsb
push
push
insl
outsl
and
pop
cmp
mov
lea
mov
clc
popa
cmpsb
or
mov
mov
cmp
and
sbb
ljmp
push
xchg
sub
jno
lds
aas
out
mov
cmp
imulb
xor
push
adc
xor
lods
stos
mov
xchg
dec
sbb
cvtpi2ps
push
mov
and
scas
mov
cmp
xchg
xchg
pop
cmc
jns
lret
ret
mov
lods
push
dec
pop
mov
insb
dec
dec
xchg
dec
push
xchg
push
mov
sub
mov
jle
mov
sbb
push
jno
push
nop
or
mov
jp
mov
jmp
loope
fs
lds
pop
add
loop
or
lock
lcall
int3
lods
pushf
pop
and
pop
mov
mov
mov
cwtl
ja
ficoms
pop
jne
in
xchg
push
stc
aas
outsb
sbb
and
mov
sbb
xor
popf
jmp
xor
hlt
popf
push
sbb
repz
push
jne
pop
cmc
inc
flds
sbb
inc
adc
imul
push
or
dec
or
mov
xchg
inc
lea
data16
clc
and
sbb
out
mov
mov
popf
stos
pop
and
icebp
shlb
lods
aaa
mov
ficompl
dec
mov
fucomip
fs
inc
or
dec
ds
and
aaa
adc
jb
sbb
and
jbe
dec
and
or
and
std
je
and
ss
adc
adc
mov
push
subb
push
push
subl
sbb
outsl
js
fildl
fnstenv
cmpsb
lret
inc
sti
test
nop
mov
mov
ja
pop
add
popf
mov
dec
adc
loopne
and
jp
jbe
or
pop
pop
daa
mov
dec
mov
scas
cmpsb
adc
shll
test
js
inc
mov
int3
adc
jg
jecxz
int3
mov
mov
dec
dec
add
mov
jl
jge
mov
or
les
mov
lods
or
cmpsl
int3
cmp
jmp
aas
cltd
and
ret
cmp
jno
xor
xchg
mov
rol
pop
xor
add
les
dec
das
xor
or
movsb
sub
imulb
mov
mov
sti
cmp
sbb
xor
dec
ret
jecxz
xor
clc
push
adc
outsb
adc
xchg
int3
sbb
cld
pop
loope
shll
push
sub
fdiv
jg
xchg
xor
and
cld
lods
inc
shlb
dec
ret
sbb
into
gs
xchg
push
push
jne
jnp
cmp
jne
arpl
or
sbb
jle
pop
and
xchg
fistpl
xchg
inc
mov
and
sbb
adc
mov
lods
and
in
dec
adc
add
ss
xor
nop
popf
sbb
pop
mov
and
insb
shl
adc
add
sbb
fldcw
fmuls
lods
fiaddl
call
push
inc
dec
sbb
clc
pushl
fsubl
dec
pop
jecxz
dec
dec
ret
mov
xchg
xor
mov
inc
stos
sbb
dec
imul
call
lcall
push
and
mov
mov
into
cwtl
cltd
fmuls
cmp
icebp
inc
mov
mov
popa
imul
pop
cmc
push
jno
repz
mov
fisttpl
xchg
mov
xor
sub
push
std
and
in
scas
sbb
and
aaa
outsb
or
cmp
lcall
dec
cmp
push
push
shlb
cmpsl
inc
sbb
out
inc
mov
ret
push
pop
xchg
xchg
loopne
out
fsubr
lahf
push
pop
nop
js
adc
push
pop
fs
shll
pop
inc
xor
and
push
es
inc
lods
mov
mov
xchg
cmp
cmpsl
psubsb
stc
xor
push
pushf
xlat
out
inc
lcall
pop
xchg
jecxz
xor
jmpw
cmp
ret
repz
mov
sub
mov
scas
jno
cmp
incl
shlb
push
into
dec
fbld
scas
jle
jg
lds
push
aam
lahf
push
adc
push
jo
inc
inc
jae
jne
inc
push
sub
push
xchg
pop
xchg
adc
xor
rclb
pop
mov
sbb
cmpb
aaa
mov
out
leave
je
jge
test
pop
jb
outsl
orb
xorl
addr16
mov
or
add
push
jb
ds
sub
sub
loope
xchg
xchg
xor
pop
cmp
bound
pop
shrl
loopne
cmpsl
scas
imul
out
push
popa
or
mov
jmp
nop
sbb
inc
and
xchg
inc
loop
pop
mov
mov
cltd
mov
dec
ljmp
stos
mov
mov
mov
mov
push
lret
ja,pt
pop
shrb
jbe
push
sub
inc
dec
mov
push
rorb
push
mov
out
std
std
adc
xor
dec
jg
jmp
fadd
and
sbb
jmp
or
cmp
xchg
xlat
nop
fidivl
or
pcmpeqd
lea
or
push
jmp
adc
clc
sbb
xchg
cmp
push
leave
sub
es
lods
xchg
pusha
or
mov
mov
mov
bound
dec
xchg
and
or
pop
ds
or
andb
fmuls
cli
lods
outsb
aaa
sbb
lret
ja
push
cmp
adc
sbb
mov
sahf
mov
inc
xor
aad
shl
in
das
xchg
pop
pop
lea
inc
adc
xor
mov
sub
cmp
add
mov
jae
daa
cmp
das
add
or
sti
stos
outsb
sti
and
jne
pop
cmp
sbb
mov
inc
cld
and
in
sub
inc
cmp
or
imul
rcr
call
call
popa
jne
lret
gs
sub
out
sbb
and
sbb
call
adc
pop
pop
push
jg
mov
dec
mov
rcrb
fdivrp
scas
mov
popf
gs
in
push
cmpsl
sti
and
das
fwait
and
or
fcmovnbe
mov
lods
xor
int
mov
sub
fcompl
and
xor
xor
fnsave
cmp
add
lods
mov
sbb
xchg
mov
insl
push
ret
addr16
mov
mov
sub
das
inc
adc
dec
and
cs
les
push
dec
inc
dec
push
jo
mov
scas
push
adc
and
sarb
repnz
insl
lahf
test
or
mov
repz
cmp
imul
adc
dec
mov
fisttpll
addl
jb
cmp
jle
push
jne
sub
out
dec
jl
js
bswap
rorl
outsl
push
dec
sti
mov
ja
pusha
xchg
dec
and
fwait
mov
dec
aas
xor
add
and
call
push
insb
imulb
jle
and
push
movsl
sbb
sbb
jbe
in
mov
lahf
testb
je
push
push
pushf
add
mov
jb
xor
dec
pop
fwait
test
push
add
lcall
jns
scas
cmc
adc
mov
dec
mov
jl
push
out
mov
jno
mov
ss
pop
stos
loope
lods
xchg
jmp
ret
mov
cld
fsubs
mov
dec
or
push
inc
sub
push
out
ljmp
cwtl
aas
inc
pop
sub
shrb
movsb
dec
mov
pusha
fs
jecxz
mov
sti
jns
ss
dec
mov
cmp
nop
xor
mov
pop
cli
push
out
push
lret
sarb
gs
movb
mov
sub
xchg
das
pop
aad
cwtl
push
inc
stc
gs
bound
movsl
push
out
jge
lret
mov
mov
mov
push
lahf
sub
fwait
sub
inc
jno
test
cli
xchg
add
cmp
sbbl
stos
mov
xchg
dec
adc
insl
sub
mov
sbb
mov
inc
pop
jbe
mov
pop
or
inc
or
fisubrl
fmulp
xor
loope
sbb
and
push
or
cmp
inc
icebp
sarl
loope
rcll
int
stc
dec
loop
and
sar
xor
sub
fadds
pop
jle
test
xor
test
rol
push
popa
add
push
adc
jnp
xor
loopne
jnp
data16
push
mov
mov
mov
iret
jns
and
outsl
loopne
call
jle
mov
fdivs
pusha
test
loope
pop
push
mov
scas
push
sti
push
add
xchg
aaa
fwait
addr16
adc
stos
aaa
push
add
push
fwait
xchg
test
roll
dec
sbb
test
rcrl
ss
stc
mov
xor
add
stc
mov
cmp
lds
xor
pop
in
push
mov
stos
ljmp
pop
cmpb
jb
adc
shrl
pop
or
clc
mov
lret
ret
test
fisttpll
mov
push
scas
mov
or
and
orb
xchg
pushf
xor
adc
sub
push
mov
out
ds
pop
test
in
and
ljmp
adc
scas
jns
jg
das
cmp
mov
jo
shll
test
pop
cmpsb
and
sbb
cmp
ffree
xchg
cmp
sub
stos
mov
jp
xorl
les
out
leave
xor
push
ret
xor
sahf
sub
in
mov
popf
mov
es
or
jno
gs
in
test
prefetchw
fbld
shrl
xchg
clc
shr
push
mov
loop
movsl
adc
mov
inc
adc
daa
pop
nop
test
pop
xchg
mov
les
lds
neg
clc
aas
aad
hlt
addr16
dec
lret
pop
jnp
dec
dec
rcll
xchg
mov
cmpsb
fdivrl
sub
mov
mov
mov
mov
or
mov
push
out
pop
cvttps2pi
loope
xor
ljmp
sub
mov
setb
pop
adc
js
or
inc
jmp
push
pop
je
and
andl
or
in
inc
inc
sub
jle
pop
cmp
call
sub
xor
xchg
and
outsl
test
or
xchg
jp
pop
xchg
mulb
pushf
clc
and
test
repz
mov
push
das
or
nop
fmul
outsl
mov
imul
fwait
xchg
cmc
fdivl
cmpsl
into
inc
mov
js
xchg
inc
dec
add
lahf
movsb
add
mov
mov
add
mov
add
pop
test
xchg
add
daa
out
mov
or
les
mov
or
das
ret
mov
mov
sbb
pop
or
popf
cmp
stc
icebp
mov
sbb
popf
jns
insl
push
pop
insl
lea
xchg
dec
push
sahf
or
rolb
mov
iret
shlb
push
sbbl
faddp
iret
mov
cmpsl
loop
jmpw
sbb
stc
add
mov
lods
rcrl
add
or
and
adc
mov
mov
add
pop
xchg
xor
lahf
mov
in
mov
push
fsubl
and
sub
and
bound
or
fcom
mov
sar
cltd
jae
mov
sbb
adc
or
cmpsl
sbbl
push
lret
arpl
mov
jno
pop
and
clc
out
jno
xchg
leave
ret
cld
jbe
push
sbb
stos
repnz
mov
push
es
or
js
not
or
adc
push
cs
pop
dec
xor
sub
inc
repz
inc
ss
jne
outsb
and
nop
mov
outsb
or
push
adc
lea
inc
lahf
in
cwtl
xor
push
arpl
pop
hlt
pop
adc
dec
insl
leave
nop
inc
and
fadds
adc
mov
add
xor
dec
mov
cmc
stos
xchg
iret
adcl
xlat
repz
xchg
test
arpl
xorb
push
pop
mov
hlt
inc
popa
sti
jb
pushf
mov
mov
dec
adc
mov
inc
xchg
cmpsb
pushf
push
divl
jl
hlt
cs
cmp
mov
xchg
jecxz
adc
mov
fldt
sbb
int3
mov
jmp
jmpw
sbb
jbe
or
push
jmp
aam
movsb
jns
stos
cltd
adc
jmp
mov
mov
repnz
std
out
sbb
pop
jno
mov
push
push
mov
jmp
jp
pusha
mov
xor
loop
lret
mov
push
push
jo
loop
sub
repnz
lds
ds
inc
or
or
imul
or
sbb
jg
call
subb
jge
pop
push
cmpsl
or
cmc
jle
std
mov
sbbb
aaa
jns
mov
frstor
inc
mov
xor
jecxz
xchg
push
push
aas
je
lcall
imul
dec
clc
xchg
jg
adc
das
or
scas
aas
inc
divb
popa
call
add
xor
repnz
mov
fidivrl
xchg
mov
push
das
adc
cmpsb
jge
pusha
nop
arpl
pop
sub
xchg
mov
jmp
xor
mov
push
or
test
movl
test
inc
xchg
push
insl
cmpsb
movsl
std
mov
int3
jmp
int3
movsl
inc
lret
call
pop
lods
add
push
outsb
mov
pop
dec
leave
loopne
icebp
inc
sbb
pop
stos
aam
fsubr
ljmp
int3
enter
push
cltd
mov
or
in
inc
scas
dec
mov
out
dec
cmp
imul
lods
loopne
int3
cmp
arpl
cwtl
repnz
add
adc
xlat
add
es
hlt
or
dec
cmc
adc
and
ss
push
mov
pushf
sub
icebp
shrl
push
loop
mov
adc
fucomp
adc
adc
mov
xor
in
out
adc
push
xchg
fisubs
inc
pop
xchg
sbb
dec
mov
push
jmp
mov
mov
out
inc
xchg
lock
xchg
lock
jnp,pn
or
cwtl
mov
pop
cmp
insl
lds
xchg
inc
movsb
es
fs
sub
inc
lock
fstps
leave
int
xor
inc
inc
mov
fdiv
sbb
fstl
popa
mov
xchg
fistpll
jge
int3
pop
and
xor
mov
mov
outsb
cmp
mov
add
jne
cmp
jno
mov
push
and
leave
cmp
or
out
dec
add
xchg
clc
xor
mov
cld
cmpsb
jl
sub
xorl
fnstsw
stos
loope
sbb
mov
in
in
pop
jb
insl
cmpsl
shlb
sub
xchg
xchg
mov
xchg
movsl
aam
call
mov
lock
pop
popa
mov
cltd
gs
aaa
das
sbb
mov
jo
lret
ret
jmp
sub
pop
cmpsb
mov
mov
scas
inc
push
arpl
aam
lods
cmp
test
push
daa
push
ja
mov
jae
push
xchg
mov
xchg
int
lods
push
jb
loopne
cmp
cltd
jle
push
push
push
out
and
int3
ret
and
or
pop
mov
insb
push
in
xchg
ret
lret
insb
or
je
cmpsb
lret
clc
lock
out
inc
cmp
addl
rorl
jg
pop
das
lahf
and
or
and
aad
shll
lret
imull
jno
adc
dec
fisttpl
xchg
idivl
push
fcmovnbe
jns
shlb
xor
jne
dec
mov
cmp
push
fmulp
sbb
cmc
loope
stos
xchg
test
mov
dec
cmpsl
mov
inc
bound
jae
lds
mov
in
add
pop
cmp
std
rclb
aas
pop
dec
mull
fnstenv
push
mov
xor
adc
outsl
cwtl
shrb
subb
cmpsb
fcoms
jl
sub
leave
test
popa
mov
xchg
sbb
and
push
push
leave
pushf
notb
ret
imul
or
sbb
and
sbb
insw
mov
pop
pop
sbb
lods
int
push
inc
addr16
das
arpl
mov
fucomip
into
lret
xchg
loopne
fldt
xchg
scas
loop
or
push
sbb
dec
shrb
clc
push
mov
adc
popf
xlat
jno
out
sub
adc
cmp
sub
push
jbe
rcll
mov
jge
pop
ss
and
pop
fmuls
add
out
mov
dec
lea
dec
jecxz
lock
and
add
mov
mov
xor
xchg
popa
jnp
je
fnstenv
inc
inc
mov
ret
pop
mov
jbe
jnp
jl
loop
mov
fldl
cs
loop
sti
add
fs
jnp
adc
ficomps
pop
test
jne
repnz
pop
insl
xor
jmp
inc
sbb
aaa
fisttpll
pop
push
gs
add
repnz
cmp
lds
lods
inc
push
add
sub
push
jge
lret
jmp
rcrb
ret
movsl
inc
sahf
std
xchg
insl
dec
fmulp
subb
insb
jmp
ret
out
leave
sahf
jl
out
and
stc
push
lds
test
sub
aaa
lods
int
ljmp
cmp
or
push
mov
jb
inc
rorl
in
sub
call
mov
mov
aas
loop
stos
mov
inc
icebp
push
in
sahf
or
mov
push
xchg
lods
shrl
mov
mov
sub
sahf
push
repnz
in
aam
jl
call
mov
cwtl
sub
xor
pop
mov
pushf
jl
shl
incb
jl
push
mov
les
test
cmp
std
jns
fidivl
push
das
and
and
push
sbb
cli
adc
add
mov
rorl
lods
add
rorl
jg
out
subb
push
mov
frstor
in
pushf
inc
jne
jae
mov
mov
sbbl
pop
insb
push
sbb
push
lea
adc
sub
jp
nop
push
sti
inc
ret
sbb
push
imul
cmpsb
push
pop
mov
jne
push
cmpl
and
testl
ja
push
xchg
rol
or
sub
stos
cltd
jno
mov
outsl
scas
vunpcklps
sub
or
test
shl
xor
cmp
iret
insl
mov
jae
jge
mov
sub
cltd
mov
mov
int
jmp
in
andl
dec
mov
imul
lods
sub
sub
movsl
aam
je
test
or
xchg
push
in
mov
fbld
jo
movsb
sub
lahf
add
iret
and
jecxz
dec
add
ret
and
push
pop
inc
arpl
sub
fwait
cmp
xorl
scas
dec
push
out
sub
xchg
jbe
andl
dec
adc
cmp
and
xchg
nop
insl
dec
xchg
jo
lock
lods
jae
cmp
inc
push
imul
xor
hlt
jmp
leave
lret
jbe
out
sbb
add
push
sub
movsb
repz
je
jecxz
push
xor
sub
fisttpll
pop
and
adc
ficompl
hlt
mov
push
dec
lahf
mov
push
xor
sub
jne
adc
andl
push
mov
jno
jl
xchg
pop
fsubs
xor
sbb
add
mov
push
jmp
movsb
iret
push
add
add
sbb
leave
cmc
jg
xchg
mov
sbbb
dec
xor
mov
int
lods
aam
cmp
add
adc
xchg
jl
lock
cmpb
cmp
mov
add
inc
cmp
pop
xchg
or
imul
repnz
jne
pop
test
mov
sub
sbb
jmp
xorb
sub
test
push
cmp
mov
add
or
inc
lods
imul
mov
add
and
lods
test
push
fbstp
addr16
in
scas
lds
loope
mov
pusha
repz
je
stos
dec
xchg
sub
inc
pop
push
testb
lret
push
dec
sub
loop
xlat
lock
loop
lret
cmc
loope
test
jns
xor
out
mov
lea
scas
outsl
push
sub
mul
dec
mov
mov
lcall
push
cmp
xchg
cmp
sahf
or
rcrl
pop
adc
and
pop
xchg
addb
inc
insb
int3
cwtl
mov
dec
add
push
cwtl
xor
cmpsb
mov
js
cs
inc
shl
push
jle
mov
xchg
lea
xchg
dec
lods
sbb
dec
hlt
mov
insb
mov
mov
adcb
xchg
rcll
push
inc
inc
aaa
push
jo
movsl
int3
aad
je
push
and
inc
or
sbb
add
stos
mov
imul
mov
push
xor
repz
xor
jl
jmp
movsb
call
xor
lds
stos
mov
mov
fdivs
push
inc
cmpsb
stos
test
add
cmpl
xor
and
inc
testl
aas
clc
cmp
js
pop
rcrl
lods
xor
xchg
out
sub
in
test
add
pop
mov
and
pop
inc
or
popa
shrb
sbb
in
cltd
stos
pop
cmc
leave
adc
aaa
imul
push
push
rclb
in
cwtl
and
rcrb
jp
xchg
mov
daa
ja
mov
out
pushf
jns
mov
pop
lea
mov
xchg
scas
and
roll
int
jecxz
pop
sub
loopne
adc
call
loopne
xchg
jmp
scas
jns
stos
lcall
popf
rolb
mov
lahf
xlat
dec
mov
mov
ret
cmp
inc
fildll
fstp
fcoml
int
inc
cmp
sarb
cmp
add
add
mov
sub
scas
push
push
pop
imulb
loope
enter
dec
shrb
jle
fs
inc
and
xor
test
fisubrl
ud2
addr16
push
pusha
dec
or
add
cmp
add
cmp
jge
shlb
adc
pop
xlat
add
cmpsb
fcompl
mov
dec
push
sub
call
mov
pop
inc
rcll
mov
mov
mov
push
in
xchg
xchg
data16
loop
mov
test
int
adc
mov
push
int3
aad
pop
adc
lret
jg
xchg
push
push
cmp
or
mov
xchg
les
es
xor
mov
dec
lds
push
dec
push
and
clc
or
fwait
mov
sbb
push
pop
jl
mov
repz
test
mov
xchg
fwait
jecxz
call
mov
test
das
mov
ds
or
pop
mov
in
mov
sub
xor
mov
jnp
add
movsl
jp
mov
loope
mov
jmp
adc
adc
push
cmp
icebp
xchg
out
jle
test
dec
sub
std
insb
pop
int3
dec
stos
cli
mov
decl
aad
pusha
push
adc
inc
mov
sbb
jo
adc
mov
shll
adc
add
mov
xchg
mov
loope
pop
add
fsubr
hlt
push
add
or
mov
sete
mov
rcl
lds
pop
sbb
orb
mov
sub
fcomps
mov
xchg
push
mov
jmp
or
fnstenv
cli
out
popf
scas
mov
jmp
xchg
or
imul
sbb
jmp
pop
int3
imul
andl
sbb
cwtl
rolb
adc
iret
std
jl
xchg
mov
adc
lcall
mov
in
hlt
xor
clc
xor
lea
lcall
add
push
dec
in
cli
jg
rolb
out
adc
test
dec
stos
inc
fidivl
mov
fistps
lret
int3
cmp
fimuls
or
fmull
inc
mov
fiadds
mov
cmp
mov
rol
mov
mov
xchg
add
sbb
mov
add
mov
sbb
pop
scas
jns
repz
aaa
lds
and
inc
daa
pop
orl
xchg
shrl
pop
xchg
fsub
dec
mov
ret
add
mov
adc
jle
jae
cmp
jbe
cmpsl
testl
out
push
stos
xchg
cwtl
pop
jmp
xchg
mov
fs
cmpsl
in
repz
add
jbe
cld
ficomps
mov
out
aas
mov
mov
clc
inc
lret
jge
adc
fildl
mov
pop
add
negl
cmp
sti
sub
and
xor
loop
aaa
insl
mov
inc
mov
lret
jae
xor
fsubl
leave
loopne
outsl
lds
ja
jno
loop
xchg
ret
xor
mov
mov
in
add
xor
lea
out
out
out
inc
js
hlt
lock
or
cmp
gs
adc
xor
ror
cmp
adc
fistpl
enter
test
mov
test
lods
inc
pop
incb
fs
jle
mov
mov
pop
jo
cmova
push
daa
addr16
insl
leave
cltd
and
sub
frstor
mov
ds
pop
sbb
xchg
bound
fisubl
adc
sub
pop
imul
mov
jmp
xchg
js
insb
jo
mov
in
arpl
mov
mov
jge
add
inc
inc
in
stc
enter
push
sbb
cs
cld
xor
dec
out
mov
in
test
mov
bound
xchg
pop
push
jge
push
or
cli
sahf
popf
daa
fdivp
insl
push
push
push
mov
ret
ds
adc
cmp
in
push
jnp
pop
jle
sub
sbb
insb
aaa
daa
ds
arpl
mov
in
jb
mov
mov
icebp
test
fiadds
push
pop
cmp
aam
xchg
addl
jae
lret
je
sbbl
dec
daa
mov
cwtl
stc
xchg
or
mov
add
add
or
aaa
rorb
out
nop
jbe
xchg
xlat
xor
add
test
outsb
xchg
arpl
push
fcompl
push
cmp
loop
les
daa
into
add
and
and
add
addl
jne,pn
mov
push
dec
jbe
ret
sub
inc
lds
dec
cmc
sub
aad
push
push
aad
fcoms
scas
loopne
jmp
mov
lcall
ret
scas
xchg
and
sub
jg
aas
xchg
jbe
jne
sti
fwait
scas
push
into
arpl
pushl
mov
xchg
dec
pop
cli
pop
push
cmpsl
jp
andl
add
call
cld
inc
mov
mov
add
cltd
mov
push
dec
loopne
dec
or
gs
mov
loop
push
addr16
pop
mov
pop
and
push
cld
test
es
fiadds
mov
jno
push
aad
dec
je
pop
incb
sbb
inc
es
test
jg
movsb
mov
out
jecxz
cwtl
int
add
imul
mov
and
pop
test
inc
jle
sub
adc
aaa
mov
repz
pop
test
fdivl
jg
not
or
aam
lret
push
int3
push
ret
push
sub
add
mov
sub
push
gs
jl
xchg
xlat
xchg
jle
dec
loop
inc
mov
mov
cmpsb
jns
cltd
sbb
sub
mov
add
pop
arpl
into
and
push
jg
out
push
into
and
cmp
movsb
jmp
xchg
or
lcall
pop
sti
outsl
loop
xlat
fidivl
inc
js
inc
or
jmp
mov
aam
fld
int
aad
push
push
into
sub
scas
adc
bound
mov
cmp
push
inc
je
push
jnp
push
mov
pop
xor
pop
jnp
sahf
fcmovnu
mov
push
scas
pop
fadd
sbb
out
icebp
aam
pop
insb
cmp
mov
xor
addr16
or
and
popl
fiadds
loop
into
add
mov
jae
lcall
test
les
cmpl
cmpsb
into
sub
mov
inc
jb
mov
dec
aam
shll
lods
in
adc
cmpsb
lock
mov
cmpsl
xor
xor
inc
icebp
adc
orl
jo
gs
fs
add
test
loopne
mov
mov
push
aas
jl
pop
stc
push
loope
xor
add
jno
pop
fmull
and
loop
setb
dec
push
mul
aad
dec
lret
adc
xor
movsb
pandn
dec
ret
inc
mov
or
pop
or
adc
xor
xchg
dec
jae
jne
dec
out
sbb
push
add
dec
pop
or
shll
outsb
mov
mov
mov
push
adc
xor
pop
jo
into
sub
aad
fwait
lret
lret
scas
push
push
ret
mov
mov
mov
push
and
fidivrs
mov
xor
push
xor
stos
std
xchg
out
mov
add
cmp
sub
pop
out
lcall
inc
je
mov
outsl
xchg
sbb
cwtl
movsl
push
push
clc
fbstp
mov
mov
pop
push
sub
into
mov
out
adc
in
mov
mov
bound
int
sub
add
movhps
aam
xor
cmp
fistpll
jg
rorl
and
aam
add
outsb
cmp
scas
jmp
mov
pop
xlat
aam
scas
leave
inc
fs
mov
rcr
iret
fadd
or
mov
dec
sbb
xlat
add
xchg
sbb
shll
mov
stc
xchg
sbb
icebp
lret
inc
pop
mov
and
bound
popa
mov
clc
aas
pop
xchg
cmp
mov
nop
notb
adc
outsb
ficoml
in
xchg
pop
cmpsb
test
and
push
cmp
insl
das
stc
into
cmp
inc
cmp
jbe
xchg
aaa
pop
dec
in
cmc
and
sbbl
xor
bound
or
dec
sub
test
cmp
xor
fwait
enter
jle
sub
mov
dec
mov
mov
data16
jae
push
test
adc
xor
stc
das
das
out
jl
dec
pusha
push
cmp
insb
xor
jnp
popf
hlt
mulb
fs
lods
push
xor
test
mov
sahf
jecxz
repnz
lds
jae
fs
and
or
cmp
gs
stos
sbb
ret
es
mov
adc
push
gs
aaa
and
cmpsb
sbb
sub
mov
test
jb
xor
mov
adc
rorb
or
pop
imul
sub
mov
pop
pop
sarl
push
xchg
lds
xchg
or
stos
mov
or
ficomps
shlb
xchg
cmp
inc
lahf
test
es
push
fwait
pushf
sbb
arpl
adc
je
ffreep
and
addr16
cmp
adc
cmp
out
ret
sahf
gs
loop
test
inc
jge
xchg
mov
mov
sub
or
test
test
dec
je
ja
stos
dec
testw
out
pusha
sbb
imul
repnz
iret
jmp
mov
leave
arpl
stos
mov
mov
into
sbb
enter
dec
sahf
inc
mov
sbb
loopne
fdivs
push
mov
pop
mov
mov
mov
adcb
push
std
jnp
into
sub
inc
aam
adc
lods
and
sbb
or
sarl
out
xor
xlat
adc
jbe
es
loopne
mov
movsl
enter
cmc
dec
stos
int
pop
or
dec
pop
gs
stc
xchg
fimull
xor
cmp
addl
xchg
fwait
mov
push
sbb
sbb
pop
pop
in
jno
or
dec
xlat
subl
or
fsubrs
out
mov
push
or
dec
mov
idivb
dec
xor
out
jmp
lret
push
notl
cwtl
dec
mov
lea
int
lret
ja
jo
insb
addr16
push
sbb
push
inc
enter
das
inc
jmp
icebp
out
mov
inc
jp
jnp
and
je
stos
popa
mov
mov
add
cmpsb
icebp
aas
and
sub
jno
sar
and
xchg
movsl
fs
mov
inc
mov
faddl
xchg
xchg
push
adc
add
mov
sarl
lret
les
or
xor
test
xor
cmc
and
ja
call
sub
rol
mov
andb
dec
push
and
fmuls
cmpsl
negb
cmp
cmp
sub
mov
push
sti
rcll
push
jmp
out
int3
movsl
sbbb
jmp
jns
sub
aam
mov
test
sub
sti
cmp
or
pop
js
movb
cmp
adc
movsl
stc
loop
lahf
cmp
push
and
push
adc
std
in
icebp
jmp
mov
bound
jp
xchg
pushl
fstpt
ss
shl
push
jno
cmp
inc
int
jnp
in
jle
jle
and
xchg
sbb
mov
cmpsl
testl
movsb
lea
xchg
pop
cmpsl
addr16
js
xor
sbb
test
fmuls
xor
rclb
jne
jne
mov
scas
in
imull
mov
shll
enter
inc
test
daa
sbb
add
push
inc
lea
lret
outsb
xor
repz
mov
sahf
hlt
mov
test
push
addr16
in
mov
jns
mov
or
aam
mov
lods
popf
iret
cmpsb
out
jae,pt
rcr
xchg
jo
jno
or
test
fstpt
cmp
mov
rol
mov
pop
fwait
aad
push
shll
int3
cs
cmp
adc
lods
dec
xchg
pop
fwait
dec
push
aaa
mov
stos
dec
aaa
outsb
and
addl
cmp
ret
add
sub
lods
arpl
inc
jns
push
jns
fwait
mov
or
pop
nop
xchg
f2xm1
push
xchg
in
mov
test
inc
push
xchg
jae
outsl
push
pushf
push
jecxz
pop
mov
pop
inc
or
fldt
pop
sub
mov
fists
aaa
mov
cmpl
lahf
clc
arpl
pop
mov
lahf
aad
fnsave
divl
int
dec
push
jge
out
hlt
dec
cli
or
sub
das
data16
xchg
jmp
adc
xchg
or
inc
imul
call
cmp
test
mov
adc
adc
xchg
sti
dec
pusha
push
loopne
xchg
shlb
pop
inc
shlb
pop
dec
aam
repz
add
arpl
cmpsl
push
fdivrl
jne
pause
dec
dec
push
arpl
enter
ds
or
jmp
lods
push
leave
nopl
mov
lods
iret
stos
mov
test
mov
int
in
xchg
jge
push
mov
ficompl
cmc
loopne
inc
mov
xchg
mov
in
aaa
pop
fs
std
jnp
or
cmp
push
lret
mov
push
aad
add
mov
adc
dec
jns
lahf
repnz
or
pop
sarb
shl
jns
push
xchg
aad
sub
adc
mov
xlat
or
sahf
sub
sub
cmpsl
and
inc
rcll
addr16
or
icebp
adc
ret
movb
outsl
add
add
outsb
mov
insl
hlt
sbb
and
push
cmc
test
pop
aad
sub
push
jmp
cmp
out
jp
mov
jle
repz
or
popf
mov
lea
fdiv
fiaddl
fstps
xor
mov
js
stc
cmp
mov
pop
stc
xchg
inc
imul
mov
xor
loopne
sub
data16
cmp
sub
jo
sbb
stos
xchg
lahf
loop
mov
scas
icebp
cld
inc
xor
nop
pop
clc
scas
int3
mov
push
xor
pop
ss
cmp
cs
lahf
rcrb
mov
outsl
cmp
mov
pushf
add
mov
and
mov
aaa
divb
cld
int3
mov
sub
inc
lods
sub
mov
pop
cmp
or
inc
repz
jo
xor
jnp
push
adc
enter
mov
adc
mov
mov
ret
sub
int
sub
sub
mov
bound
mov
pop
fdivrp
mov
inc
push
jecxz
lahf
out
dec
jecxz
cmp
leave
add
or
outsb
insb
jno
arpl
cmp
test
ffree
jbe
test
cmpsl
lods
imul
cmp
sbb
in
shlb
out
les
sub
subl
fwait
pop
cmp
jb
in
imul
popa
push
repz
xor
shll
imul
out
enter
sub
jo
gs
pop
adc
mov
sub
pop
shrb
lds
cli
cmp
cmp
pop
xor
sarb
xor
push
aad
imul
loope
jp
div
inc
add
dec
rcrb
cld
pop
imul
jne
loopne
filds
jo
xchg
aas
dec
in
pop
mov
mov
pusha
mov
ljmp
sub
mov
xchg
sub
popf
nop
pop
xchg
hlt
dec
push
rolb
jnp
scas
das
adc
daa
inc
and
sahf
fmuls
sub
sub
jp
addl
adc
lea
jns
push
inc
out
out
sbb
fwait
dec
pop
dec
mov
mov
inc
outsl
jecxz
aaa
cmp
pop
sbb
es
or
fxch
xchg
mov
mov
and
outsb
mov
or
mov
mov
lret
cli
add
mov
bndstx
jecxz
insl
jmp
gs
push
mov
ret
fwait
stos
jg
jne
mov
sti
adc
cld
ss
shll
mov
xor
mov
lods
cld
xchg
pop
leave
div
and
xor
rcll
es
adc
push
add
lock
jmp
push
sub
nop
in
out
xor
cmp
pop
data16
clc
lock
mov
jg
scas
sahf
mov
push
mov
push
in
fs
fsub
rol
repz
lods
popa
dec
shll
dec
xor
aam
sar
adc
in
sub
pushf
push
faddl
out
stos
sub
sbb
scas
scas
or
jmp
and
inc
js
or
mov
pop
mov
dec
jno
add
aaa
xchg
inc
xchg
pusha
pop
jg
sbb
pop
test
add
mov
mov
dec
shlb
data16
jae
and
mov
in
fists
hlt
ljmp
push
sub
sarb
je
negl
xchg
mov
adc
fxch
das
or
jo
loopne
aam
jge
mov
jle
aad
sti
add
mov
inc
mov
ljmp
fwait
cmp
shll
lcall
sbb
mov
icebp
into
pop
cmpsl
fcomps
dec
inc
add
rclb
sbb
dec
in
in
jns
sbb
aas
mov
jb
cld
call
adc
clc
lret
pushf
fldt
out
mov
shld
fcomp
mov
es
adc
sahf
adc
cmc
shr
jns
mov
inc
cmp
enter
leave
xor
movsb
std
adc
ss
out
push
jo
fisttps
or
mov
cmpsl
cmp
cmpl
push
and
jbe
cmp
loop
mov
xor
inc
jns
ret
push
mov
mov
jg
pop
xorl
shlb
jmp
repnz
cli
lcall
push
cld
idivl
mov
push
in
cmp
stos
popa
out
outsb
push
xchg
out
data16
out
dec
xchg
adc
daa
out
lahf
sahf
lds
loopne
lahf
repz
mov
mov
bound
pop
arpl
call
vmread
jecxz
fs
fistpl
add
jp
cwtl
xor
testb
pop
fwait
jle
lahf
clc
inc
add
push
repnz
mov
sbb
xchg
adc
repz
sbb
push
ret
sbb
fs
jae
jg
xchg
xchg
mov
sub
push
neg
out
jo
mov
adc
sti
shrb
popf
out
mov
dec
jo
mov
iret
addb
movsb
pushf
add
test
int
dec
push
mov
dec
icebp
in
xchg
andl
jg
mov
jl
hlt
nop
add
mov
loope
popl
test
shrb
aaa
pop
andl
add
or
insl
aaa
pop
clc
push
iret
xsha1
cmpsb
lea
pop
xchg
jb
dec
psrlw
pop
aaa
xchg
and
loop
add
fisttpl
test
pop
push
lret
adc
adcb
dec
insl
outsb
jno
ds
cwtl
bound
add
lret
sti
add
mov
out
mov
or
xlat
rcr
jne
cmp
cwtl
orl
mov
sub
or
imul
daa
stos
xchg
and
push
lods
sub
or
movsl
add
lret
shr
and
mov
push
mov
outsl
inc
mov
cli
or
jno
adc
sbb
in
push
pop
xor
xor
test
add
fs
fwait
loope
jno
xchg
idivl
inc
xchg
jbe
xchg
flds
movsl
xchg
outsb
rorl
dec
mov
inc
popa
mov
xchg
cltd
inc
adc
or
lea
mov
push
sub
scas
push
aam
push
out
jg
push
xchg
mov
mov
sub
mov
out
imul
fsubs
xchg
fcmovu
inc
out
int
sbb
push
movsl
imulb
dec
jne
dec
xorl
lods
filds
sbb
and
pop
mov
idivb
daa
fwait
movsb
repnz
mov
jmp
cmp
sbb
mov
mov
sbb
sub
mov
and
sub
mov
insl
adc
fcmovnb
dec
out
lods
loopne
xor
sub
mov
add
scas
lahf
mov
test
adc
pusha
push
div
push
aaa
jae
jecxz
repz
cld
fldenv
cs
push
adc
loopne
inc
jbe
mov
push
adc
mov
ljmp
mov
jg
mov
popf
popa
filds
std
imul
and
jno
std
inc
fwait
inc
mov
jge
in
mov
les
cmp
pushf
lock
pop
push
ffreep
xchg
push
push
mov
and
movsl
pop
hlt
adc
xchg
addb
sub
imul
mov
test
ret
mov
mov
jmp
js
dec
sbb
mov
push
sub
call
mov
inc
add
movntps
jbe
out
insb
dec
mov
mov
nop
dec
dec
push
xchg
clc
rorb
in
scas
inc
push
pop
cmp
adc
sbb
jl
shlb
rep
out
xchg
pop
jno
dec
mov
subb
insb
inc
push
lret
je
lods
inc
std
idivb
cmpl
sbb
jbe
add
in
adc
jno
xor
cwtl
imul
fiaddl
mov
push
mov
insl
lods
sbb
push
push
aaa
xchg
dec
or
cmovo
and
adc
dec
hlt
jb
aad
divb
ljmp
ds
inc
popa
push
or
rorl
mov
jp
rcll
adc
jo
or
ja
pushf
mov
mov
jb
outsl
xor
mov
mov
js
inc
and
fiadds
jb
and
push
in
cmp
mov
sbbl
ret
shll
fwait
push
cmpsl
cmp
push
cmc
mov
lds
and
and
xorb
ljmp
hlt
pop
jb
pop
mov
jno
fnstenv
xchg
notb
les
imul
shlb
pusha
aad
pop
test
adc
in
adc
mov
cld
xchg
scas
repnz
push
out
or
jl
mov
int
sub
xor
and
xor
rcr
bound
incb
sbb
sbb
cmp
fsubrl
aam
push
dec
push
stos
and
or
mov
mov
pop
dec
inc
in
and
dec
bound
in
shll
inc
inc
cld
mov
xor
cmp
inc
adc
stos
dec
decb
inc
sbb
leave
idiv
xchg
pop
pop
mov
jae
ret
jge
es
mov
xor
mov
dec
and
repz
adc
rcrb
xor
cli
xchg
cmp
je
pop
shll
leave
fwait
mov
sub
lahf
lock
jno
call
sbb
ror
xor
sarl
xor
sbb
push
aad
rcll
fsubp
fdivs
mov
cmc
push
ss
sbb
ret
push
mov
and
add
xor
pop
xchg
push
sti
mov
mov
repnz
lcall
ljmp
xchg
mov
and
dec
or
test
mov
stc
daa
mov
addl
mov
addb
rcl
loope
imul
sahf
xor
push
icebp
xchg
ljmp
add
pop
nop
or
push
xchg
jae
std
xchg
sub
out
sti
enter
popf
add
movsl
mulb
and
push
xchg
jmp
push
in
xor
mov
popa
push
clc
add
jle
or
pop
in
xchg
add
aas
or
xchg
loop
aad
cmp
cmpsb
insl
cli
mov
pushf
js
dec
pop
cltd
ret
sbb
inc
ret
mov
dec
rclb
push
jp
sbb
dec
outsl
xchg
add
mul
pop
inc
sti
push
cmp
pop
adc
outsl
xor
xchg
mov
mov
adc
rol
lret
scas
dec
mov
cld
stos
sbb
ljmp
push
cmp
sbb
test
in
shlb
scas
ret
fwait
enter
add
les
adc
jmp
or
lret
bound
imulb
adc
in
test
mov
loop
sbb
popa
mov
mov
scas
or
outsb
and
aad
mov
jg
in
aas
push
xchg
clc
into
pop
pushf
push
lock
xchg
add
push
push
outsb
clc
sbb
imul
bound
inc
xchg
pop
repz
xchg
out
int
lahf
popa
test
push
imul
cs
lcall
fsubrs
xor
bound
mov
adc
or
shl
adc
and
lds
insl
out
cwtl
sbb
movsl
das
and
and
mov
into
sbb
sahf
les
outsl
daa
ret
jl
push
out
das
sub
xor
add
push
in
jbe
and
test
xor
in
ret
inc
jp
mov
sub
outsl
cmpl
daa
cmp
inc
push
fcmovu
stc
lods
cmc
dec
ds
mov
jno
push
push
xor
adc
mov
aas
std
out
ret
fstpt
insl
xor
jb
pop
or
dec
dec
mov
mov
jmp
adc
or
mov
xchg
pusha
leave
push
cwtl
mov
dec
mov
lret
add
dec
sbb
mulb
push
in
enter
jne
inc
ror
icebp
shll
cmp
rorl
inc
sub
cli
pop
stos
pop
or
mov
pushf
mov
hlt
dec
dec
adc
dec
pop
push
xor
adc
push
cmc
orb
and
inc
fs
cmc
mov
ret
inc
dec
mov
and
mov
pop
pop
push
inc
inc
scas
mov
sub
cmp
xor
push
xor
mov
in
cmp
out
push
shrb
sbb
inc
mov
xchg
mov
mov
cmp
mov
into
lea
cltd
sub
imul
push
call
imul
dec
scas
jp
in
jne
adc
push
mov
jmp
aad
enter
sahf
jne
outsl
in
mov
iret
outsb
repnz
sub
fistps
pop
or
pop
lret
adc
lret
or
into
adc
sub
xchg
in
sbb
xchg
jp
ret
mov
out
mov
clc
pop
icebp
addb
add
dec
out
dec
rclb
xchg
mov
popa
jbe
pop
in
xlat
loope
and
push
or
xorb
xchg
orb
je
std
xchg
fisubl
fidivrl
jg
push
pop
mov
mov
xchg
out
sbb
es
mov
loope
ror
jmp
enter
sbb
mov
enter
dec
fmuls
cs
mov
sbb
sbb
ret
sahf
je
cmp
popa
sbb
xlat
fisubrs
sti
xchg
inc
cmp
or
and
int3
sbb
rorb
fwait
jmp
xor
shll
fmull
jns
aaa
fstps
mov
xchg
mov
pop
jae
dec
dec
cmp
add
xor
and
mov
sti
xchg
rcrl
or
add
jmp
lret
push
pop
sbb
imul
cmp
pop
incl
pop
push
adc
enter
jl
setg
fs
cmpsl
lods
nop
push
ljmp
loope
jg
push
mov
xchg
pop
add
inc
int3
mov
ror
add
imul
rcrb
xchg
dec
cmp
push
je
test
cmpsb
push
and
xorb
insl
enter
add
xchg
and
pop
rcr
into
jmp
std
adc
dec
stos
mov
xor
fs
mov
in
sub
pop
lahf
dec
push
jbe
pop
jmp
pushf
xchg
jns
jae
and
ror
dec
mov
es
xor
shll
fiadds
sbb
pushw
gs
push
sahf
sub
cmp
jmp
ret
add
sub
and
rcll
out
sub
pop
rorb
add
cmp
mov
out
scas
popa
mov
cmpsl
fildl
sti
adc
mov
xchg
pop
lret
pop
xor
dec
cmpsl
fbld
stos
jns
jne
cwtl
xor
cmp
icebp
lret
pop
insl
mov
in
mov
jae
inc
ret
pop
testl
cmp
lahf
mov
xor
sub
and
data16
sbb
inc
popf
sub
xchg
cmc
out
ja
mov
pop
sub
outsl
mov
shlb
lret
into
pop
jns
pop
into
arpl
rclb
mov
iret
or
dec
popf
cs
push
addr16
daa
in
adc
jbe
cmc
and
cmc
clc
pop
ljmp
cmpsl
and
ljmp
add
lea
and
sbb
in
pop
aaa
out
jae
imul
pop
in
lock
stc
mov
cs
aas
jb
xlat
lods
push
call
inc
push
dec
mov
xor
pop
rcrl
add
daa
jp
add
gs
pop
jbe
sahf
sub
xchg
and
dec
in
ss
mov
lods
and
sbb
mov
mov
add
sahf
sub
popa
arpl
out
dec
pop
xor
xchg
in
outsl
arpl
into
cltd
movsb
addb
fcmovnu
cmpsl
js
sbb
push
xor
clc
sbb
call
xchg
icebp
mov
enter
imulb
push
mov
out
jns
mov
pop
hlt
inc
xor
jge
or
inc
sub
stos
jne
cmp
and
mov
mov
leave
dec
adc
add
add
pop
jo
add
imul
cmp
xchg
xchg
shrb
and
push
push
push
pop
jnp
int
test
fsts
popf
mov
push
mov
lcall
addr16
sbb
adc
pushf
das
js
or
mov
sar
sbb
sub
adc
lcall
xor
imul
das
pop
mov
rorl
jmp
ffreep
addr16
rclb
in
xchg
out
jmp
mov
hlt
je
sbb
cmp
es
lea
lret
inc
inc
jo
inc
scas
jp
mov
lods
rcl
mov
add
lea
sbb
lods
bound
out
repz
adc
fbstp
outsl
dec
jp
push
mov
mov
and
call
dec
test
mov
orb
ret
jg
mov
jo
ja
std
jle
xchg
mov
rclb
imul
sarb
movsl
dec
arpl
push
jl
outsl
aam
mov
fnstcw
imul
or
fisttps
sub
xchg
jbe
push
aaa
jle
testl
push
sub
xor
mov
sbb
push
dec
push
jno
dec
rorl
stc
sub
test
movsl
es
jp
sbb
lds
xor
sbb
orl
and
daa
div
ds
idivb
test
add
scas
das
add
std
jle
xchg
sub
mov
insl
inc
mov
or
or
pop
loope
aad
andl
cmp
jmp
xor
inc
data16
insl
aam
inc
in
jbe
sti
ret
ret
sub
or
pop
std
shrb
ljmp
xor
mov
insl
or
and
fs
cmp
xchg
adc
cmp
push
push
jmp
daa
inc
add
pop
mov
mov
nop
lahf
icebp
or
ljmp
icebp
jno
testb
mov
data16
dec
dec
sbb
lea
das
push
mov
lock
out
es
mov
hlt
aad
add
ss
jo
in
ja
jo
pusha
test
push
aas
push
in
inc
push
inc
sub
test
ja
lret
test
shrb
addl
ljmp
ret
repz
jge
mov
push
mov
xor
push
adc
cli
lret
pop
incb
xchg
rol
jae
stc
push
xchg
iret
mov
xchg
mov
xor
cmp
xchg
mov
sub
adc
icebp
dec
jno
cwtl
mov
fcoms
or
inc
lret
cmp
sub
jno
fisubs
insb
pop
mov
mov
orl
cmc
or
push
jl
repz
jb
xchg
push
gs
or
xchg
pop
and
test
xor
mov
out
out
scas
repz
inc
push
aam
addr16
mov
push
dec
lods
popa
outsl
mov
lret
out
pop
bound
inc
inc
cmp
sub
pop
push
inc
bound
cmp
in
fbstp
pop
pop
loopne
cmp
jns
mov
jae
push
gs
cwtl
in
mov
or
clc
add
xor
sub
sub
mov
call
and
cmp
xor
lcall
scas
dec
cmp
insb
xchg
mov
jp
scas
pop
xor
pop
int3
test
push
mov
stos
sub
push
pop
jae
sub
dec
bound
xchg
sbb
dec
iret
mov
pushf
pop
enter
outsb
popa
sub
das
mov
lea
lods
je
pusha
clc
cmp
cli
dec
or
add
xchg
notb
dec
lret
fwait
pop
fisubrs
xchg
jmp
dec
stos
cltd
sub
cmp
mov
mov
insl
faddl
loope
push
xor
fcoml
pop
xor
jno
mov
xchg
shlb
xor
fcomps
mov
icebp
mov
sub
adc
incb
std
push
pop
das
push
rcll
out
jbe
jno
dec
inc
fwait
jge
fildll
loopne
mov
outsb
icebp
repnz
mov
add
in
mov
jo
xchg
mov
pop
sbb
cmp
cmp
mov
mov
pop
sbb
mov
push
pusha
ret
pop
xchg
lods
pop
mov
xlat
lret
adc
ljmp
outsb
push
pop
pop
mov
pop
jae
in
cmp
jno
mov
cmpsl
scas
mov
fldenv
mov
mov
xor
insb
popa
fimull
mov
popf
shrl
in
inc
pushf
mov
cmpsl
sbb
jne
or
xchg
scas
ret
mov
ret
xchg
cmp
lret
xchg
mov
add
adc
add
push
andl
sbbl
sub
mov
cmpsl
mov
into
jl
fs
fimull
cwtl
imul
mov
dec
jmp
dec
ss
cmp
fists
cltd
dec
lods
sahf
pop
mov
outsb
ret
add
mov
lret
sbb
gs
int3
repnz
adc
test
test
pop
jo,pt
jp
mov
push
sbb
imul
repnz
imul
mov
popf
movsl
f2xm1
xor
or
jnp
mov
dec
test
xchg
adc
dec
add
cmp
pushf
xchg
rcll
mov
or
movl
stos
sub
jb
ja
imulb
pop
mov
push
out
ds
cmp
test
movsb
push
bound
sub
bound
outsl
test
add
or
scas
aad
pop
pop
lock
out
mov
cmp
mov
into
lret
or
fldt
push
cwtl
add
cmp
jne
clc
test
sbb
add
notl
and
dec
jmp
orl
jbe,pn
sub
hlt
lahf
fldcw
dec
out
in
mov
inc
lcall
fisttps
pusha
sbb
pop
loop
out
xorb
dec
mov
dec
lahf
lcall
cmc
push
rorl
mov
fcmove
fnsave
xor
pop
test
mov
jle
pop
inc
mov
xchg
add
push
stc
and
push
pop
xchg
pusha
sbb
or
faddl
or
sub
int3
adc
xor
gs
stc
cmp
push
fsubrl
and
xchg
sbb
push
sbb
push
outsb
out
mov
lret
das
pop
push
pop
mov
cltd
mov
jno
jle
push
popa
mov
pop
push
dec
cmp
cld
and
data16
shrl
rcrl
xor
mov
hlt
inc
imul
daa
jb
pop
repz
inc
pop
scas
dec
int3
inc
mov
jnp
call
add
fidivrl
mov
lret
lods
pop
dec
adc
popa
sbb
cmp
insl
mov
flds
inc
imul
aas
adc
hlt
out
test
ljmp
mov
stos
stos
and
mov
cmp
rorl
sub
sbb
cmpsl
lcall
and
or
pop
and
cwtl
lcall
cmp
loopne
inc
lds
add
xchg
jecxz
in
xchg
adc
dec
out
inc
ret
or
pusha
mov
adc
pop
xchg
jg
mov
hlt
sub
push
stc
pop
aaa
pop
mov
decb
mov
push
stc
xor
sbb
sub
fsubrs
adc
mov
adc
cmc
aam
in
in
ficoml
xchg
outsb
pusha
addr16
test
pushf
add
test
inc
imul
xchg
dec
sbb
xor
xor
mov
test
sbb
jae
data16
jecxz
push
sub
aaa
subb
inc
jae,pn
mov
lret
ljmp
jle
push
mov
pop
mov
push
es
xor
in
std
adc
rcrb
sub
xchg
aaa
add
sub
insb
jecxz
add
mov
push
jo
insl
sub
js
daa
dec
and
out
lock
mov
cmp
and
or
sbbb
sbb
pop
pop
out
xchg
adc
fidivs
in
xchg
sub
test
hlt
hlt
jo
popa
out
ljmp
mov
pop
mov
cwtl
aaa
add
push
repz
aaa
addr16
test
xchg
js
ficomps
mov
aad
add
loope
pop
mov
imul
sub
push
fsubl
pop
mov
icebp
xlat
loope
test
dec
jnp
mov
mov
mov
loope
je
sub
insb
mov
xor
dec
inc
mov
or
clc
repz
xchg
jge
jae
sub
data16
out
stos
xchg
mov
inc
je
fnstcw
frstor
mov
xor
out
gs
mov
jl
sbb
cvttps2pi
nop
or
inc
fidivrs
icebp
lahf
mov
inc
sub
test
push
ss
cmpsb
andl
iret
in
xor
rolb
mov
xor
sahf
fstpl
pop
sbb
mov
sub
mov
es
rcrb
les
cmp
lret
test
xchg
lcall
lods
pop
add
insl
test
push
inc
mov
js
xor
std
andb
mov
jecxz
ja
inc
dec
mov
inc
js
repz
mov
push
xchg
test
and
push
sbb
hlt
in
lods
repz
sbb
stc
jl
call
and
mov
and
daa
xor
stc
or
test
or
cmp
test
xchg
insl
in
push
movsb
push
xchg
call
sbb
push
pop
insl
inc
sbb
add
xor
pop
pop
mov
out
xor
movb
xor
dec
cmp
pop
ffree
cli
repnz
rol
inc
xchg
add
mov
ret
sbb
pop
pop
cltd
test
dec
pop
mov
jmp
mov
mov
cmp
pop
mov
mov
cmp
dec
lret
pop
mov
loop
sahf
rorb
xor
call
or
mov
dec
push
pop
int
mov
jp
cwtl
mov
lock
push
mov
mov
and
and
dec
clc
scas
mov
shl
clc
push
scas
movsb
or
into
jp
movsl
pusha
je
or
add
icebp
call
jne
rcrb
xchg
lret
sbb
or
stos
imul
out
lock
jecxz
testl
jmp
loope
sbb
cmp
outsl
push
cli
pop
mov
or
int
adc
xchg
mov
mov
push
jb
sti
pop
push
inc
inc
aas
decl
in
rolb
into
fcmovbe
scas
ljmp
outsl
push
push
lahf
ja
in
ret
pop
or
sahf
cmp
icebp
xor
mov
adc
leave
dec
test
or
xchg
nop
stos
pusha
xchg
xchg
sti
sbb
push
aaa
cmp
mov
popf
loopne
mov
push
pmaddwd
mov
add
lret
jp
xlat
add
fistpll
mov
jo
sub
test
sbb
js
out
mov
pusha
repz
jno
cmp
dec
popa
xor
mov
rcr
mov
sahf
daa
xchg
test
shl
push
ljmp
loop
lods
sahf
clc
inc
xor
out
lds
ss
xchg
scas
cs
outsb
jecxz
sub
sbb
xchg
cmpsl
into
jp
sbb
shlb
sbb
cwtl
jo
sbb
scas
mov
cmp
lock
mov
push
push
push
jg
mov
xchg
sbb
dec
mov
mov
cmpsl
xchg
jmp
adc
push
pop
mov
adc
dec
mov
divl
clc
mov
les
xchg
insb
adc
in
xchg
mov
mov
and
daa
cwtl
mov
fsubrl
inc
mov
and
jle
imul
and
aas
xchg
cmp
mov
pop
mov
sub
mov
out
push
push
inc
xorb
repnz
sub
mov
outsb
jo
jae
push
sbb
popf
push
jp
jnp
adc
outsl
dec
mov
add
adc
sarb
leave
push
cmc
adc
loop
sub
sub
nop
nop
jg
xchg
and
mov
dec
loopne
mov
xlat
pop
mov
jo
in
mov
jno
xchg
cmp
mov
in
jo
cmp
out
imul
fidivrl
mov
add
sub
push
pushf
test
cltd
in
xchg
jl
push
push
adc
fcmovnb
cmp
mov
mov
xor
outsl
aam
aas
cmp
daa
insl
add
cmove
sbb
xchg
lret
mov
push
xchg
test
mov
pop
jg
lods
lock
and
es
gs
pop
aam
and
das
mov
nop
jns
mov
sub
and
ja
popa
pop
negb
pop
xorl
push
mov
loop
sbb
push
mov
dec
call
adc
ja
and
pop
cld
cmp
jne
cwtl
sbb
enter
mov
mov
fnstenv
xor
and
stc
das
xlat
cmp
mov
xor
les
mov
pop
clc
in
dec
mov
mulb
pop
imul
add
dec
rcll
mov
push
dec
push
push
xor
sarb
and
sbb
jns
aam
xlat
lcall
lret
mov
mov
dec
fsubs
lods
movsl
or
push
in
adc
push
adc
jns
scas
xor
movb
out
mov
out
ret
adc
push
push
jle
jo
iret
sub
xchg
subb
xor
loop
enter
inc
lods
pop
or
cltd
mov
mov
jns
dec
push
push
mov
pop
dec
nop
pop
sub
insl
mov
mov
xchg
xchg
push
ljmp
ja
and
lods
in
xor
and
inc
sub
mov
or
mov
ljmp
mov
sub
cmp
lcall
add
je
icebp
pop
jnp
xchg
and
or
je
shr
iret
clc
mov
jns
int
pop
and
mov
xchg
push
int3
pop
icebp
jg
outsl
subl
jne
scas
rcll
pop
xor
aad
fdivr
push
cmp
cmpsb
pop
cli
inc
incl
xor
xorb
lret
shl
mov
mov
leave
mov
lcall
dec
sbb
cmp
sbb
rcrb
loopne
pop
pop
inc
sbb
pop
test
fwait
sub
xor
xchg
stc
popa
out
lahf
jno
ljmp
cmp
popa
in
xor
inc
jg
call
mov
adc
sti
jns
add
xchg
mov
mov
sbbl
fsubrl
pop
jle
ja
pop
push
pop
mov
sub
mov
in
fs
imul
mov
testb
pop
mov
lds
mov
sbbb
sbb
cli
daa
dec
mov
mov
mov
repnz
in
add
jbe
js
mov
cmc
cltd
cmp
or
mov
sub
daa
int
imul
sub
fcoms
push
push
popf
pop
adc
xchg
dec
adc
mov
ss
xor
mov
fidivrs
into
inc
test
lcall
mov
lds
addl
pushf
mov
pop
or
insl
jns
dec
lcall
sub
add
cld
sbb
xchg
ljmp
pop
add
sbb
xor
pop
mov
jnp
icebp
mov
sub
ja
shlb
push
decb
lcall
and
repnz
enter
push
imul
enter
mov
cmp
push
push
lods
int3
test
out
sub
jl
push
int3
mov
jle
cmp
and
jecxz
mov
mov
into
rolb
fisubrl
push
xchg
and
mov
pop
loope
and
sbb
xchg
cmpsb
mov
out
cli
gs
test
xchg
cmp
lret
jne
dec
sarb
outsb
fs
adc
and
push
mov
pushf
imul
int
dec
fdivrl
popf
xor
xor
push
int3
test
mov
je
sub
pop
mov
cli
scas
xchg
and
sbb
aam
adc
xor
int3
enter
jno
sbb
add
mov
lret
shll
push
add
inc
mul
call
mov
lret
push
add
xchg
loope
jecxz
cwtl
mov
in
sbb
call
js
aad
pusha
fwait
bound
push
out
sub
test
pop
push
add
push
jecxz
xchg
mov
cmp
popf
sbb
repz
xchg
adc
es
add
dec
jns
or
sbb
sbb
mov
sub
mov
or
sahf
fpatan
mov
stos
sub
jg
xchg
int
lret
jecxz
imul
outsl
adc
lret
jp
fucomip
adc
call
push
mov
pushf
cmp
cwtl
sub
jmp
mov
cmc
movsb
outsl
pushf
pop
sbb
movsl
lret
inc
lds
or
adc
pop
lret
ret
iret
mov
dec
add
xor
xchg
sti
into
fbstp
sub
fs
xchg
and
lahf
inc
dec
or
adc
cwtl
xlat
mov
or
mov
cmovns
ret
add
out
fsts
sbbb
loop
and
mov
pop
jp
mov
mov
sbb
mov
dec
sub
sbb
cmp
xchg
cld
sbb
into
mov
sbb
add
mov
pop
lock
xchg
pop
ret
out
jns
push
mov
push
mov
jo
rcrb
push
pusha
jl
pop
cmc
add
or
and
out
cmp
into
bound
pop
inc
outsb
adc
sub
xor
mov
dec
call
xor
movsb
jbe
jle
add
js
add
jge
test
hlt
stos
test
push
inc
adc
push
push
shlb
icebp
xchg
cmpb
mov
leave
int3
rorl
cltd
insl
pop
xor
arpl
scas
mov
orb
add
rcrl
fidivrs
add
adc
nop
jg
push
cld
cld
cld
mov
in
push
adc
dec
aaa
mov
aam
push
icebp
mov
jbe
sbb
lods
jnp
enter
lods
adc
dec
sbb
iret
sub
cmpsb
jp
xor
enter
call
insb
cmc
jmp
add
pop
sahf
or
or
add
imul
inc
idiv
xor
mov
xchg
mov
cmpsb
mov
mov
fdivl
cmp
jmp
gs
mov
and
add
subb
mull
add
dec
or
mov
jno
addr16
std
dec
pop
or
aad
sbb
xor
popf
dec
ds
leave
addl
push
test
int
pop
into
nop
adc
cmpsb
aas
inc
add
jg
mov
rclb
xchg
sub
pop
shr
push
push
daa
test
call
cmpb
mov
cmpsb
dec
clc
sub
sbb
or
jb
js
xor
mov
add
aaa
dec
cmp
repz
cmp
mov
mov
in
hlt
mov
cmc
pop
mov
sub
and
mov
jg
fimull
pusha
mov
push
xlat
adc
sub
insb
pop
xorb
rol
aas
test
stos
ret
or
lods
lods
sti
xchg
push
sti
lods
imul
jecxz
in
ficoms
push
shrb
adc
shr
add
and
mov
and
jmp
dec
sub
xchg
bound
mov
push
sahf
into
enter
xor
jns
fdivr
jmp
int
push
xlat
loopne
ja
xorb
cmpsl
inc
sbb
and
add
or
ret
mov
mov
sub
out
cmpsb
and
outsl
push
pusha
ljmp
test
mov
aam
xor
insb
mov
in
hlt
lods
sbb
mov
and
and
adc
mov
cmp
jne
adc
jp
mov
les
lret
aas
add
mov
pushf
ljmp
out
rorb
nop
pop
jbe
int3
lea
imul
xchg
lahf
dec
in
fidivs
add
cmp
xor
lods
or
mov
mov
ret
inc
es
fistps
leave
out
inc
mov
pop
add
insl
push
imul
aad
pop
out
sub
enter
aad
adc
ret
push
loope
arpl
cmp
mov
jge
cmpsl
or
mulb
pop
add
add
mov
outsb
inc
push
mov
pop
popl
int
lods
and
ret
shr
sub
xor
mov
ret
clc
imull
jl
cwtl
scas
jle
pop
in
insl
dec
int
xor
stc
adc
cmpsb
cmp
sub
dec
cmp
inc
push
add
test
lahf
sbb
mov
xor
mov
es
popa
add
inc
pop
add
pop
pop
mov
shrl
sbb
dec
adc
push
and
rorl
movsb
mov
and
imul
lds
cwtl
dec
cmpsl
sub
repnz
push
inc
aaa
inc
enter
or
int3
jmp
adc
inc
arpl
pop
jle
es
sti
insl
add
mov
jmp
mov
outsb
xor
mov
ss
repnz
inc
outsl
aaa
loope
cmpsb
sbb
addb
in
popf
sbb
ljmp
and
sbb
popa
xchg
lea
out
and
mov
mov
mov
inc
sbb
enter
and
jnp
stos
pop
outsl
sbb
pop
xor
mov
push
jl
jne
mov
int
movsb
xchg
adc
xchg
mov
pop
ja
dec
ret
sub
das
inc
insb
pop
outsl
mov
xor
xor
das
cmp
xchg
stos
xchg
roll
push
xchg
jnp
scas
pop
mov
jmp
and
mov
out
aam
stos
call
aas
shlb
jge
into
mov
add
bound
hlt
inc
ret
bound
or
dec
shll
and
shll
outsb
add
leave
cld
lds
pop
icebp
push
mov
pusha
dec
and
mov
cld
out
cmpsb
mov
negl
xchg
and
xor
add
loop
out
cmp
sub
out
lods
push
dec
iret
mov
lcall
cmp
jl
sbb
pop
leave
or
dec
mov
jno
cmp
test
iret
or
jno
jae
rcl
mov
insb
cli
fstps
add
outsl
loopne,pn
clc
adc
lock
push
leave
ss
mov
inc
sahf
mov
roll
dec
scas
pushf
les
jbe
add
sub
mov
mov
or
inc
ja
sub
jle
sahf
out
leave
lock
mov
rorl
fdivl
cltd
clc
gs
push
jb
dec
popl
mov
or
mov
dec
mov
ficomps
mov
js
mov
inc
sbb
mov
add
mov
nop
stc
and
adc
idivl
xlat
jl
or
adc
pop
movsl
icebp
mov
sbbb
sub
fisubs
sahf
inc
xor
repnz
insl
out
xor
xorb
lds
insl
sbb
sub
andb
test
xor
fbld
arpl
mov
popa
sub
lahf
rclb
out
ds
fsts
fcompp
xlat
out
fwait
add
pop
fimull
addr16
leave
mov
pop
ljmp
shrb
aas
dec
fisttpl
rcl
cwtl
outsb
mov
mov
dec
sub
mov
add
test
sbb
out
pop
mov
or
dec
jp
inc
shll
repnz
pop
push
call
lds
xor
sub
repz
jg
inc
fistl
jno
popf
popa
adc
ret
push
pop
sbbb
add
js
add
xor
jbe
lods
insl
scas
add
mov
jecxz
jo
fcmovnbe
ljmp
std
cmp
daa
cmp
icebp
iret
xor
add
aam
lret
xorl
dec
out
nop
cltd
adc
ja
push
push
or
insb
sub
push
pop
lods
cmp
or
push
std
pusha
inc
mov
cmp
ret
push
into
repz
out
aad
scas
sbb
cmc
negl
push
shlb
mov
pop
gs
adc
mov
test
adc
fmulp
mov
xor
add
dec
mov
stos
enter
mov
or
cli
and
psubusw
lret
dec
mov
jmp
cmp
fbld
xor
incb
sub
mov
pusha
rcrb
mov
mov
fnsave
pop
xchg
jbe
shrb
call
cs
insl
xchg
jl
cmp
gs
jl
stos
test
test
test
sub
movsl
clc
lock
sub
aad
pop
call
add
mov
imul
call
dec
push
mov
sub
sbb
and
jno
mov
mov
mov
fists
xor
scas
out
add
xchg
sub
sarl
ljmp
cmp
and
xor
pop
cmp
mov
stc
push
push
push
sbb
insl
lret
jne,pt
pop
iret
or
sub
sbb
adc
rcr
loop
adc
mov
arpl
fs
rcrl
push
lods
punpckhwd
mov
mov
lcall
rol
inc
orb
lea
dec
lods
jmp
jbe
inc
pop
sbb
pop
adc
jge
enter
fs
das
addl
mov
cmpsb
or
inc
adc
aad
jge
xchg
and
sti
fimuls
pop
adc
push
adc
xchg
jo
inc
into
cmpsl
and
pusha
outsl
int
in
insb
ja
movb
sub
cmp
stos
in
loope
out
lahf
lock
int
jecxz
xchg
xchg
movsl
mov
ja
xchg
js
daa
fwait
pop
jbe
inc
inc
cmpsl
jae
or
pop
insl
arpl
pop
xchg
shl
lea
ja
fisubl
or
mov
lds
sub
fistl
orb
xor
sub
clc
sbb
lea
add
mov
adc
mulb
mov
sbb
test
mov
daa
cmp
adc
adc
notb
daa
std
mov
dec
pop
adc
stos
std
dec
inc
cmp
mov
inc
scas
xlat
dec
jp
je
insl
push
inc
flds
adc
sbb
sbb
outsb
mov
imul
dec
jae
dec
pop
or
test
dec
and
sub
daa
repnz
sahf
repz
icebp
call
rcll
jmp
or
pop
scas
cmp
sub
es
insl
mov
stc
imul
lods
jb
test
pop
addl
xchg
dec
or
cs
xor
mov
cld
ficomps
add
mov
add
add
or
jnp
insl
aas
mov
or
lret
outsb
mov
les
clc
test
in
mov
push
mov
dec
shll
xor
dec
jecxz
pop
sahf
cmpsb
out
lods
mov
adcb
xor
jp
push
dec
add
popa
mov
push
fs
push
pop
stos
or
lcall
mov
add
and
jecxz
out
dec
sub
mov
pushf
and
notl
inc
mov
add
cltd
scas
cmpb
xchg
mov
dec
or
fsubp
mov
fwait
outsl
jecxz
jno
cmp
push
push
dec
mov
dec
mov
xor
hlt
xchg
test
mov
ficomps
mov
pop
out
dec
out
add
mov
inc
or
sub
nop
out
pop
hlt
jb
aaa
cmp
fisttpll
sti
jo
mov
mov
mov
mov
data16
test
sarb
enter
dec
int3
sarl
cmp
pop
jnp
mov
mov
push
cmc
outsb
mov
and
adc
daa
pop
dec
or
into
jns
mov
or
inc
div
int
mov
hlt
sti
daa
cli
mov
lock
out
pop
jns
jns
lret
sbb
mov
inc
xchg
add
dec
std
aas
jo
sbb
xlat
aam
stos
jmp
and
ret
xchg
inc
mov
sub
push
rorb
pop
fldl
ret
movsl
mov
lret
or
js
divl
pushf
cmpsl
push
pushf
ficompl
and
sub
cli
ficoms
ficoml
push
jmp
cld
mov
cs
sub
in
aam
pop
imul
dec
sbb
imul
out
inc
out
rcr
fstpt
push
or
push
mov
jnp
xchg
xor
aad
pop
pop
data16
loop
out
outsl
ja
jle
adc
data16
and
xlat
mov
mov
fs
repz
hlt
cwtl
pop
push
mov
dec
inc
adc
loope
jg
in
mov
xchg
inc
imul
inc
jp
or
xor
icebp
jbe
lock
pavgw
mov
call
pop
mov
xchg
das
nop
rcrl
and
shlb
int3
fwait
mov
xor
test
lcall
fwait
lea
fiaddl
mov
pop
shr
idivl
das
mov
push
ss
hlt
int3
xor
sub
or
adc
aam
mov
in
add
pop
mov
cmc
aam
xchg
mov
mov
sti
xlat
jae
mov
in
repnz
pushl
fucomp
int3
xor
movsb
adc
daa
jnp
repnz
and
mov
jbe
or
in
sub
jb
in
jl
ret
and
cltd
lods
or
mov
push
mov
push
xchg
cli
cmc
and
lds
lahf
push
out
pusha
aam
mov
jp
icebp
movsl
in
mov
push
pop
jg
je
push
test
sbbb
xchg
loopne
push
mov
dec
es
jbe
test
test
popf
cmp
pop
stc
cli
lods
sub
sbb
push
loope
jnp
mov
push
sub
into
into
movsb
jmp
outsl
insb
ficompl
andl
sbb
in
cmc
push
pop
loopne
jg
xchg
push
dec
popa
adcl
jl
bound
and
fcmovne
jno
es
push
push
ja
cld
cmpsl
xchg
jg
lahf
xor
les
xchg
mov
push
sub
push
xchg
daa
xchg
adc
movswl
inc
add
bsf
pop
fstpl
mov
fistps
mov
out
dec
rol
pop
sti
es
fsub
in
ret
push
inc
subb
enter
stos
mov
pop
or
out
cmp
dec
in
jns
in
nop
out
cld
outsb
into
fnstsw
icebp
fnstenv
loop
and
lret
fs
cli
testl
cmp
pop
mov
hlt
pusha
stos
testl
or
outsb
push
dec
cmp
mov
jmp
iret
in
push
push
lds
cmp
lock
scas
adc
dec
nop
ficoml
adc
push
je
adc
les
sbb
lahf
mov
stos
pop
lret
or
fs
jge
enter
addr16
inc
jnp
fcomps
sbb
sbb
rdmsr
shrb
mov
sub
aad
sub
jp
jge
pop
inc
ret
adc
sbb
hlt
dec
ljmp
iret
arpl
inc
inc
insb
push
push
cmp
mov
shr
push
or
andb
adc
or
mov
push
cmp
xchg
mov
mov
push
jne
or
rcrb
mov
xchg
jmp
push
iret
testb
mov
into
scas
sar
jp
cltd
push
jge
mov
repz
ss
inc
cmc
repnz
dec
sbb
sahf
fs
lds
stos
xchg
add
mov
loope
add
mov
ficoml
outsb
lcall
jecxz
jl
movsl
movsl
ret
ljmp
mov
xchg
adc
xchg
inc
dec
and
stos
xchg
test
mov
mov
imul
mov
xor
sub
mov
in
icebp
in
outsb
push
xor
pop
inc
jge
sub
aaa
mov
in
lret
mov
mov
es
roll
cmp
jo
adc
mov
mov
lods
push
dec
dec
imul
lods
enter
sub
verr
out
push
xchg
or
xor
mov
cmp
and
inc
lahf
mov
in
pop
lret
and
pop
cmpl
aam
sub
jnp
cmp
inc
dec
adc
jge
pop
pop
int3
stos
fcoms
xorb
movsl
je
jmp
xchg
call
push
mov
imulb
cmp
nop
dec
mov
ret
out
bound
cmp
ja
fistl
inc
or
notl
insb
in
adc
push
dec
mov
sarl
jns
in
fcompl
lret
sbb
dec
aas
aaa
cli
sub
hlt
mov
mov
xchg
in
ja
adcl
mov
fstpl
xor
jl
push
mov
idivb
cmp
sub
pop
rolb
dec
jno
std
cmp
clc
aas
ljmp
imul
shlb
ret
pop
pop
xor
sbb
jae
jo
push
in
push
cmp
shlb
sub
das
insb
test
add
lahf
nop
mov
and
call
or
pusha
push
jle
mov
imul
mov
ja
jns
inc
mov
add
ret
je
imul
stos
adc
inc
sub
and
mov
mov
cmp
mov
icebp
jns
pop
stc
pop
pmulhuw
outsb
pop
cmp
in
movsb
adc
sti
sbb
adc
aad
dec
push
mov
xchg
pushf
xchg
ret
inc
addr16
sbb
fwait
and
movsl
jne
repz
lea
mov
mov
out
mov
enter
xor
jg
cwtl
adc
aaa
xor
sbb
test
mov
push
mov
rorl
arpl
jle
jl
adc
lcall
sub
add
xchg
jnp
push
cmpsb
xchg
jae
out
lret
jbe
push
gs
lcall
fidivs
sar
out
and
insb
sbb
inc
dec
mov
xchg
cwtl
test
mov
adc
rcll
sbb
popf
call
jg
mov
cmpsl
test
aaa
or
lea
std
aam
mov
pop
inc
es
mov
push
pop
jnp
fbld
jns
scas
dec
adc
mov
insl
les
sbb
xbegin
push
and
xchg
stos
daa
xlat
clc
inc
imull
mov
xchg
les
gs
mov
dec
insl
and
inc
push
dec
call
sub
pop
add
add
xchg
mov
aas
dec
adc
int
nop
xor
and
mov
mov
fdivrl
mov
popa
movsb
fdivl
in
sbb
and
test
add
ds
outsb
mov
shrl
psadbw
test
xchg
popf
cmc
cld
ror
xchg
jge
mov
mov
cltd
shll
adc
pop
cmp
push
sbb
arpl
lds
mov
in
int
lcall
inc
ja
jge
aad
loopne
cwtl
sbb
fldenv
sub
jp
pop
fists
inc
xorl
sbb
and
sbb
dec
mov
stos
pop
sbb
sub
addl
repnz
std
shl
movsl
je
or
mov
sub
adc
jecxz
jmp
inc
sub
fstpl
stos
mov
mov
int
dec
iret
ja
mov
das
push
sub
subb
rorl
or
jg
test
jb
or
mov
pop
icebp
int3
mov
mov
stos
push
shrb
sub
loope
xor
hlt
push
cmp
sub
add
test
in
jo
cwtl
jge
mov
xor
in
dec
scas
xorl
push
loope
aaa
lods
jo
push
xchg
jb
cmp
cltd
jmp
stc
xor
test
mov
lods
popa
fcomps
mov
xor
nop
movsb
xor
xlat
push
in
pmulhw
fidivrs
mov
jbe
and
xchg
hlt
push
int3
sub
ljmp
into
add
and
pop
testl
pusha
lock
and
out
or
in
jmp
enter
aam
jnp
int
cli
idivl
loope
cld
mov
in
add
mov
xchg
popa
push
dec
ja
mov
dec
inc
pop
faddp
push
push
addb
leave
mov
inc
mov
into
stos
jg
jmp
scas
sub
pop
fstpl
notb
xor
jmp
rcll
addr16
movsl
pop
cmp
insb
jbe
loopne
adc
xchg
mov
sahf
mov
dec
test
push
pushf
pop
lds
enter
fstpt
inc
cli
fcomps
inc
testl
pop
add
cli
xor
sarb
sbb
out
popf
add
stos
scas
add
inc
aam
sbb
mov
adc
and
ret
movsb
scas
fistpll
jo
jo
jno
shl
shl
push
jno
mov
test
jle
add
dec
mov
adc
or
pushf
dec
sti
movb
sbbl
into
push
xchg
jge
movsb
xchg
sub
push
dec
es
mov
fs
into
iret
inc
test
shl
outsb
fdivrs
mov
xor
push
push
rcl
xlat
push
jno
std
aad
add
ja
insl
jbe
adc
gs
mov
fidivl
lds
ljmp
lock
scas
in
push
jo
and
mov
cltd
lret
aad
aad
push
mov
in
repz
push
xchg
rcrb
outsb
and
mov
je
out
shr
mov
and
pop
movsb
shrl
inc
xchg
inc
sbb
jg
mov
pop
in
cld
push
mov
loope
in
add
inc
fwait
lods
sbb
jnp
xchg
insb
lods
movsl
sti
mov
push
push
in
jmp
hlt
lahf
sahf
in
pop
push
scas
call
rcrl
jnp
repnz
jp
mov
mov
and
movsl
dec
ud1
jno
icebp
sbb
call
adc
lret
popa
inc
push
lcall
and
xchg
sbb
jne
cltd
add
repz
movsl
out
fldt
cmp
in
push
adc
sbb
mov
xchg
xchg
mov
inc
call
jb
into
or
cmp
add
push
ds
arpl
mov
mov
dec
pop
cwtl
aaa
je
add
daa
movsb
ljmp
xor
data16
xchg
mov
shr
stos
fidivrs
pushl
jmp
out
push
push
cmp
mov
push
sarl
xchg
mov
jmp
insl
lods
push
add
cmpl
shll
jbe
pop
loope
cltd
cmpsl
enter
fucomp
push
cmp
mov
push
adc
pop
data16
or
lcall
jns
int
add
or
mov
jp
data16
fsubl
dec
int3
dec
push
repz
add
add
test
inc
add
mov
xchg
in
mov
pop
js
jl
addr16
cltd
in
ds
test
sbb
or
int3
dec
fdivl
pop
in
push
inc
fcmovb
jg
ficomps
xor
loopne
cmp
sarl
pop
out
popa
pop
lock
mov
shll
xor
cld
arpl
test
loopne
sbb
cmp
jae
pop
or
and
outsb
inc
pop
push
ja
lods
add
setl
and
fcoms
jns
jb
cli
or
cmp
lock
mov
lret
xor
iret
es
jne
or
and
xchg
mov
das
mov
add
cmc
mov
push
adcb
into
or
pop
roll
ret
ret
hlt
mov
lea
xor
movsb
xchg
cmp
jo
mov
dec
inc
cmp
lea
mov
insl
cmp
mov
pusha
jg
fidivs
mov
call
mov
xchg
or
ficoms
cmpsb
lds
sbb
mov
popa
push
add
adc
jmp
ret
fucomi
adc
mov
scas
pop
sbb
xor
mov
push
xchg
mov
sti
or
cmpsb
or
lods
std
js
clc
cmp
mov
daa
sbb
inc
or
adc
aaa
jmp
push
out
sbb
scas
pop
imul
add
cmp
cmp
add
repnz
push
sub
pop
cmp
and
sub
or
shlb
jmp
push
mov
ss
lahf
in
or
sub
lret
outsb
leave
fsts
cmp
jle
jge
stc
xchg
mov
pop
mov
mov
aad
pop
sub
xchg
xchg
fmuls
push
adc
sarb
push
cmp
out
add
repz
test
or
mov
loop
lea
test
repz
push
or
enter
mov
mov
lea
xor
inc
or
fdivrl
cmp
mov
popa
repz
enter
jbe
jne
mov
pusha
pop
insb
xchg
sti
mov
or
int
mov
pushf
add
pop
aam
std
test
in
cmp
mov
iret
pushf
fcoms
scas
addr16
ja
jecxz
mov
pop
lcall
dec
pmulhuw
push
push
jne
mov
loope
loope
mov
data16
dec
mov
xchg
ljmp
dec
push
sub
and
js
jbe
jne
jne
fsubrp
int
test
and
ja
push
and
xchg
dec
in
push
pusha
adc
mov
fistl
addr16
mov
pop
inc
cld
mov
sti
fbstp
rorb
mov
lds
hlt
cmpsb
push
pop
jmp
out
add
cmpsb
movsl
and
shll
inc
inc
dec
adc
mov
mov
mov
in
icebp
nop
add
fs
dec
xchg
and
cmpsl
and
inc
pop
jp
pop
lds
pop
in
ret
stos
stc
inc
jg
mov
sahf
stc
jge
adc
push
mov
mov
jecxz
roll
mov
decb
or
lcall
jae
or
and
rorl
js
lds
xor
pop
pop
push
shl
andl
mov
jne
int3
pop
or
pop
test
lea
xlat
cmp
in
subl
xor
sub
loope
iret
sub
addr16
dec
mov
stos
xchg
in
insl
sbb
adc
fwait
pop
shl
std
ljmp
mov
imul
jb
scas
fnstcw
sub
addr16
jb
mov
int3
loope
jnp
xlat
xchg
mov
pop
sub
icebp
fldenv
test
jno
sahf
sub
push
jmp
add
pop
mov
rcrl
xchg
scas
ret
xor
mov
adc
ret
jns
jb
cmc
xchg
roll
scas
jmp
push
dec
xchg
fsubs
sbb
or
lods
jp
adc
ret
mov
jne
mov
or
and
add
orl
sbb
cli
add
or
mov
loopne
icebp
and
add
and
pop
push
rcll
sub
push
or
pop
imul
adc
loope
insb
sub
xchg
fldenv
push
mov
and
dec
xchg
ss
jo
and
cmp
or
xchg
mov
xor
std
sbb
out
mov
mov
xor
mov
adc
int3
jo
das
aas
lret
dec
dec
fists
dec
lahf
xlat
shlb
pop
mov
jge
fimuls
xor
fcmovnb
cld
test
cs
mov
or
lret
int
and
imul
mov
subb
dec
fsts
enter
adcb
in
add
or
jge
xor
scas
pop
test
mov
push
inc
xor
and
add
cld
jp
outsb
icebp
in
fwait
out
movsb
pusha
jmp
stos
packssdw
adc
cltd
mov
mov
cmp
add
aaa
scas
ret
ret
mov
pop
das
stos
xor
mov
mov
cmp
nop
es
lcall
jge
or
aas
sahf
fimuls
xchg
clc
repz
subb
jge
loop
pushf
sarb
dec
filds
add
cmp
test
enter
data16
push
addl
cmp
enter
sub
xchg
inc
movsl
movsb
leave
sub
xorb
cli
inc
out
cwtl
dec
scas
push
insb
sahf
iret
test
imul
imul
dec
mov
faddl
add
pop
sbb
push
es
xchg
push
fs
sbb
cmp
add
mov
in
mov
inc
mov
test
sbb
add
mov
pusha
or
arpl
cli
aad
arpl
mov
dec
push
lods
mov
in
scas
or
push
dec
or
inc
pop
sub
sbb
sbb
into
bound
shl
hlt
test
jno
jne
mov
or
push
in
xor
test
retw
sub
mov
loope
testl
fcmovnb
inc
lret
clc
pcmpeqb
jl
mov
ret
jl
sbb
daa
add
repnz
fwait
push
jbe
mov
jbe
out
pop
and
orl
inc
jno
adc
mov
xor
je
xor
add
mov
lds
xlat
int3
mov
les
push
lret
xchg
jl
in
jmp
movsl
orl
cltd
cmp
call
adc
in
xor
and
movsb
outsl
xchg
movsb
sub
out
sub
inc
shrl
and
subb
fiaddl
pusha
repnz
push
lock
stos
ret
pop
bound
push
sbb
aam
fists
xor
push
pop
pop
mov
mov
aaa
pop
clc
jnp
fstpl
jmp
data16
jo
es
test
mov
neg
lcall
sub
lods
ret
mov
std
or
fs
mov
rcrl
mov
ljmp
out
popl
popf
push
mov
sarl
cmc
push
pop
psubusw
sahf
fistl
mov
insb
mov
push
cmpsb
popa
pop
scas
dec
sahf
repz
loopne
jno
jb
js
xor
ficompl
push
push
mov
and
cmp
adc
mov
fs
mov
out
sahf
inc
push
fmull
ret
das
adc
out
adc
xor
mov
xchg
mov
mov
pop
pop
int3
sbb
and
push
mov
adc
sub
adc
mov
and
mov
shrb
std
jp
cmp
and
shll
jno
mov
lock
icebp
sub
push
lds
jmp
insb
fst
aad
inc
sub
jne
lds
inc
cmp
sub
sbbb
sbb
mov
sub
add
and
inc
cs
mov
add
sub
jmp
out
jmp
rclb
fwait
cmp
sbb
cmpsl
inc
movsb
pop
cmc
call
mov
ljmp
scas
add
daa
cmp
xchg
dec
mov
stc
xlat
jbe
cmp
repnz
cld
sbb
cmp
sub
mov
je
mov
adc
ljmp
xchg
int
sahf
test
dec
scas
push
pop
pop
mov
mov
add
cmpsl
inc
loopne
dec
loopne
insb
inc
cmpsl
arpl
bound
loopne
pop
clc
fdivrs
mov
push
ret
push
lods
cwtl
pop
mov
fists
out
shr
adc
insb
pop
in
pop
lahf
addr16
xchg
aaa
and
enter
inc
mov
xor
sub
std
fwait
push
xbegin
jmp
adc
jl
movsb
rcr
inc
sub
fists
clc
xlat
adc
in
sub
sti
add
add
fwait
mov
xor
popf
add
loopne
push
push
cmpsb
mov
ja
in
fnsave
add
and
lret
sbb
xchg
jge
and
sub
push
mov
out
add
shll
mov
sbb
push
or
cmp
dec
lahf
insl
fmull
cmp
incb
sbb
cli
ljmp
mov
jbe
sahf
mov
insb
jle,pt
sub
mov
sub
mov
xor
subb
lods
mov
pusha
das
gs
adcb
ficoml
pop
cli
mov
ljmp
push
or
lods
pop
int
jb
push
sbb
repnz
push
shrl
push
inc
inc
clc
insb
pop
jge
pop
lea
jle
outsb
push
in
aas
cmp
aam
in
sub
pop
test
or
aad
mov
jle
jns
push
add
ljmp
inc
sub
mov
pop
xor
ficoms
dec
gs
pop
mov
dec
xchg
or
or
mov
push
dec
adc
dec
lea
pop
push
inc
lcall
ja
sub
movsl
push
xlat
shlb
xchg
cmpsl
das
sbb
in
sbb
jmp
leave
jmp
push
loop
push
add
loopne
repz
incb
sti
and
cmc
sub
push
sbb
call
jmp
loop
fdivrl
push
nop
mov
or
ss
ret
in
push
mov
ret
cwtl
mov
scas
add
cmp
stos
rolb
cmp
jp
aam
aaa
pop
ljmp
jo
or
cwtl
int3
subl
and
and
xchg
inc
fisubl
push
xchg
insl
sub
ja
cmpsl
sbb
int3
pop
pop
dec
jae
ss
push
idiv
push
mov
dec
cmp
cmp
ss
aad
sub
mov
jp
lret
sub
xchg
es
js
in
bound
jge
mov
shl
pop
je
cwtl
xor
sbb
cmp
add
lods
or
fs
mov
push
xor
adc
xchg
jbe
ret
jnp
js
or
testb
imul
add
jnp
sub
mov
dec
dec
lds
adc
xlat
lods
and
xchg
test
shrl
fildll
and
mov
mov
push
pop
arpl
nop
or
es
mov
outsl
loopne
shll
mov
or
test
rcrl
pop
arpl
bswap
xchg
mov
enter
add
mov
les
das
cmp
sub
push
cmp
addb
lcall
ret
iret
xchg
rcr
pusha
and
scas
dec
pushf
sbb
sbb
pop
jecxz
jl
sbb
out
andb
sbb
aam
or
sub
or
and
mov
jne
jecxz
es
mov
sbb
jl
loope
fnstenv
fstps
fstp
out
mov
lcall
sbb
or
pop
out
xchg
push
lret
cmp
loope
push
dec
std
aam
mov
arpl
ret
ss
imul
and
fsubrs
xchg
testb
cmp
cmp
cli
cs
push
mov
clc
data16
jge
lret
lahf
push
cmc
scas
pop
rcrb
pop
in
pop
or
add
insb
dec
divl
push
testb
loop
lcall
mov
jmp
xchg
fstp
aas
push
icebp
shrl
sbb
shll
out
jns
fimuls
jo
mov
lods
mov
ja
stos
int
aas
std
ret
in
movsl
sbb
or
iret
mov
xchg
push
fildl
shll
mov
inc
dec
and
xor
lret
push
sets
sub
push
mov
sbb
js
inc
and
adc
rorb
and
push
pop
arpl
and
data16
push
mov
mov
outsb
pushf
mov
ja
mov
rorl
jecxz
test
lret
push
sbb
es
inc
and
push
adc
mov
and
mov
ja
lahf
mov
pop
mov
hlt
mov
jmp
insb
sub
hlt
mov
in
int
lcall
xchg
or
movsl
jnp
push
outsb
mov
addb
cmpsb
std
push
sbbl
lcall
stc
outsl
add
fildll
cli
mov
mov
cmpsb
pop
push
mov
mov
ret
mov
orl
jbe
lea
cli
xchg
dec
mov
stc
push
cmp
and
xor
sub
in
adc
dec
xchg
das
sub
leave
mov
sbb
repz
adc
lret
push
pop
data16
roll
add
xchg
sub
jo
inc
ficoml
fs
mov
data16
inc
into
mov
sahf
mov
unpckhps
scas
mov
add
ficoms
cwtl
inc
insl
cli
loopne
jmp
mov
sbb
repz
xchg
outsl
cwtl
lock
cmp
pop
jp
sub
cltd
inc
out
or
pop
in
shrb
mov
in
mov
add
xchg
push
jge
setno
lret
fistps
int3
xchg
fisttpll
loopne
daa
jl
mov
cmp
and
dec
or
jmp
dec
lds
outsb
pushf
adc
sbb
add
into
jecxz
lret
hlt
jecxz
add
enter
add
adc
mov
insb
xchg
das
loop
addb
ja
adc
sub
loopne
mov
imul
imul
arpl
call
pop
sbb
lea
jecxz
xchg
cmpsl
xor
pop
ja
adc
in
mov
cwtl
pop
adc
jecxz
sub
das
dec
jge
les
add
cmp
mov
mov
and
mov
scas
sub
lea
fidivrs
shrb
xor
inc
and
loope
push
lret
jmp
test
aam
sub
lock
test
inc
xchg
or
xchg
popa
negb
add
xor
lret
mov
dec
jp
and
mov
dec
sar
scas
call
pop
and
lds
mov
idivb
and
or
mov
movsl
outsb
loopne
call
out
cltd
inc
les
lcall
mov
in
das
mov
adc
cmp
dec
in
sbb
icebp
outsb
fidivl
movsl
sub
cmp
push
stc
lds
xchg
xor
add
cmp
pop
jbe
stc
loope
movsb
adc
sahf
push
int3
or
inc
xchg
dec
nop
or
enter
xlat
add
out
rcrl
lahf
out
nop
or
pop
adc
mov
mov
add
sahf
adc
push
ss
mulb
fisubrl
inc
loop
cld
dec
sbb
rolb
repnz
push
jmp
jo
sub
or
cmp
stos
scas
sub
test
dec
xchg
mov
jle
clc
cltd
lahf
sub
pushf
leave
dec
jnp
test
out
xchg
data16
fsubs
xchg
push
xor
jae
or
mov
sbb
xor
xor
das
adc
ret
xchg
mov
cld
dec
shll
decb
push
scas
loopne
mov
stc
repnz
test
dec
in
pushf
rcl
xor
test
daa
xchg
test
mov
lcall
bnd
jecxz
jmp
mov
dec
xor
pop
int3
fldt
dec
mov
aaa
push
pop
xor
inc
dec
insb
std
jg
popa
jg
cld
je
loope
out
lea
mov
scas
adc
bound
cmp
cld
push
push
dec
sahf
push
in
ficompl
shll
xor
mov
sti
iret
inc
int3
mov
jbe
out
jg
inc
movsb
ljmp
fdivl
movsb
inc
jo
pusha
pop
jnp
out
dec
sbb
cmp
std
popf
fbld
loopne
stc
sbb
stc
into
bound
mov
push
and
or
mov
jg
nop
pop
es
inc
out
out
stos
paddw
cs
jno
sub
int3
push
fwait
in
adc
fdivl
fisttpl
push
xlat
leave
divb
mov
jo
insb
add
pusha
adc
lcall
aas
cld
inc
in
cmp
lods
push
mov
cld
fsubrs
xchg
mov
dec
addr16
mov
push
pop
call
add
xchg
adc
int3
scas
jbe
lds
dec
es
dec
in
enter
shlb
fisubrl
push
pop
pop
mov
insl
stos
test
xor
adcb
arpl
in
inc
jno
fdivrl
pop
fwait
mov
pop
push
jl
js
test
rep
inc
or
mov
cmp
cmp
neg
jle
popf
xchg
mov
adc
mov
adc
stos
pop
xor
push
mov
push
repz
addr16
fsts
cmpsl
mov
dec
sub
push
add
sbbl
hlt
sti
cltd
sub
mov
cmp
push
xchg
xor
jnp
std
inc
mov
add
in
das
test
mov
std
out
pop
outsb
out
jge
and
mov
es
out
or
gs
out
outsb
mov
aaa
into
add
sub
dec
mov
imul
pop
int
and
jle
pop
js
mov
nop
notl
shrl
xchg
xor
adc
jmp
jmp
jo
xchg
ret
jmp
fucomi
out
shll
leave
fldcw
lods
pop
mov
out
adc
cltd
or
mov
loop
cmpsl
dec
je
add
mov
aam
jb
push
sbb
ds
mov
sahf
sbb
out
loope
push
add
jp
repnz
xor
clc
fwait
sbb
enter
test
cltd
add
nop
hlt
sub
sbb
push
xchg
mov
jmp
mov
jae
mov
js
dec
dec
out
dec
inc
rclb
int3
push
repz
push
push
mov
sti
sarb
enter
fdivl
sbb
repz
gs
in
push
inc
pop
add
jle
fst
adc
adc
cmpsl
cmp
push
sub
data16
hlt
sti
repnz
enter
inc
mov
push
enter
fstps
jg
pop
mov
ret
push
and
sub
fwait
lahf
in
or
movsb
ss
andl
add
loop
dec
mov
rol
jecxz
pop
ja
mov
ret
inc
mov
dec
adc
inc
pusha
iret
mov
rorl
sbb
mov
in
pop
or
and
push
icebp
jb
fisubrs
int
jl
mov
outsl
hlt
test
add
push
outsl
cmpb
gs
push
repnz
ficoms
sahf
sahf
cli
gs
fs
aam
add
and
and
jecxz
or
imul
sbb
push
in
mov
push
rol
add
inc
inc
push
push
sbb
inc
mov
dec
cmpsl
push
jle
nop
mov
and
jmp
jns
dec
mov
xchg
sub
aam
sahf
cli
adc
rcr
dec
div
xchg
rcrl
xor
jb
arpl
cmp
out
cli
sub
repz
ret
inc
jg
sub
scas
mov
push
cld
scas
popa
xchg
sti
lods
leave
jbe
gs
push
incb
mov
dec
sbb
jb
fucomip
outsb
pop
sub
cmpsl
rcrb
jl
and
ds
shll
lahf
gs
lea
jo
dec
mov
shlb
inc
js
dec
negl
pop
pop
stos
addr16
aam
iret
lds
jae
pop
xor
in
push
pop
adc
and
pop
cmp
ljmp
mov
mov
mov
cmp
je
repnz
clc
cmc
mov
inc
fimull
js
push
lods
outsl
jle
out
addb
sub
or
rorb
sahf
sbb
lret
adc
inc
scas
dec
xor
sbb
xor
jmp
adc
addr16
sti
orb
mov
inc
pop
test
xor
ljmp
sub
or
mov
mov
dec
shlb
inc
pop
jle
dec
sarl
rcr
aad
out
and
fwait
dec
scas
fs
mov
fsubl
jmp
sub
sbb
pop
lods
xchg
push
xchg
mov
cmp
pop
jmp
jp
sbb
shrb
mov
ret
push
rolb
push
xchg
dec
mov
xor
int3
bnd
mov
or
popf
mov
in
mov
aas
out
push
adc
scas
insb
jmp
pop
jecxz
ret
in
mov
lret
lret
add
sbb
jg
mov
in
out
int3
xchg
test
in
inc
push
lcall
sbb
xor
inc
xchg
mov
mov
movsl
in
js
push
fisttpll
sbb
dec
add
mov
push
xchg
xchg
xchg
and
out
lahf
inc
fucomi
or
xchg
mov
cltd
and
inc
adc
shll
sbb
push
sub
xchg
add
ljmp
push
pop
and
loope
push
xchg
ret
mov
mov
jne
jne
lds
pop
adc
mov
push
push
dec
dec
cwtl
int
notb
xchg
icebp
inc
out
aas
mov
insl
les
cwtl
mov
lods
lods
test
push
outsl
pop
imull
add
andb
imulb
inc
repz
out
mov
xor
dec
sti
stos
pop
rcrb
fs
or
insl
push
je
mov
adc
cld
pusha
sub
daa
push
fisubl
dec
jae
mov
pop
aaa
push
jg
mov
test
and
ja
shrb
xchg
cli
ret
ss
cmp
jnp
jae
pop
adc
cmp
mov
test
mov
lea
mov
mov
ret
test
pop
lcall
xchg
xchg
pop
sub
push
loopne
enter
fistps
cmp
mov
push
leave
add
addb
rcrb
mov
daa
stos
cld
jbe
xor
cmpl
xorl
lret
pop
je
push
aam
aam
xchg
sti
cmc
mov
push
mov
xor
inc
outsb
jl
in
fcompl
addb
xchg
pop
sti
or
ds
inc
mov
jg
jo
jl
out
in
scas
pop
xchg
inc
in
je
roll
negb
inc
aad
xchg
xchg
sub
mov
lret
mov
je
or
or
out
aam
outsl
dec
out
mov
sbb
out
mov
inc
xchg
mov
stos
fsubs
jl
stos
imul
movsl
jecxz
dec
push
pop
in
clc
loope
fistl
cltd
mov
ss
inc
and
xor
cmpsb
adc
inc
mov
negb
jp
push
nop
in
cmpsl
call
cmc
cmp
mov
jmp
cli
push
push
movsl
mov
movsb
inc
jmp
add
in
inc
repz
ficompl
sub
pusha
mov
jge
cmp
aam
test
push
pop
fwait
dec
test
scas
sub
rcl
imul
mov
and
or
mov
dec
test
lds
rcr
or
shr
mov
xor
popf
leave
into
adc
dec
lods
xchg
rcr
test
adc
mov
and
cwtl
jbe
mov
inc
fs
mov
pushf
mov
andl
fs
jae
inc
je
and
mov
jl
lret
inc
out
add
fcompl
mov
push
insl
mov
fcomps
adc
rol
into
sbb
div
pusha
inc
jmp
ss
data16
push
ret
scas
dec
cmp
icebp
mov
rolb
mov
fimuls
push
or
pop
insl
jne
mov
scas
cmpl
lcall
mov
xchg
xor
adc
jecxz
pop
pop
dec
inc
loope
movsl
jae
repz
movsb
lock
push
jae
cmc
insl
mov
mov
into
stos
lret
inc
add
clc
popf
ffreep
outsl
lcall
inc
out
cmpl
or
or
test
cld
and
outsl
int
stos
cwtl
mov
jp
das
xor
mov
mov
and
xchg
test
stos
idivl
in
aas
arpl
cwtl
fldt
aaa
iret
lods
out
dec
cmp
loop
scas
or
call
push
loop
hlt
mov
sbb
aaa
out
stc
loopne
mov
xchg
sub
das
dec
xchg
imulb
cwtl
push
fidivrs
mov
insl
ss
jmp
ret
cwtl
or
aam
outsl
mov
shl
adc
clc
xchg
and
push
cmp
icebp
jno
inc
add
ljmp
push
mov
push
push
ds
xor
xchg
push
mov
test
ret
xchg
movsb
add
inc
test
mov
adc
inc
rol
shl
xor
or
pop
jmp
imul
push
xor
ss
cltd
js
stos
mov
pop
xlat
ret
mov
std
insb
xchg
mov
jnp
rcrb
shrb
and
cmp
xor
in
jbe
scas
mov
jae
dec
mov
daa
jae
add
or
xor
inc
repnz
xor
mov
subb
and
pop
jle
add
or
mov
sub
sbb
jae
xlat
es
negb
xchg
pop
cmc
cld
jno
pop
and
lds
push
xor
lret
fimull
pop
xchg
jg
call
mov
jp
mov
sbb
add
pop
aaa
les
lahf
add
xor
lcall
sbb
cli
stos
sbb
mov
add
mov
arpl
sahf
mov
or
jl
xor
push
xchg
pop
push
jno
call
cmpsb
inc
popa
ljmp
iret
add
mov
loop
into
pusha
cld
pop
test
pushf
stc
mov
les
sub
xchg
or
pop
ret
std
jle
dec
jb
fildl
cmp
fdivrl
jns
int3
pop
leave
clc
repz
dec
add
push
dec
cmp
or
jno
dec
add
cs
pop
and
pop
mov
lret
sbb
adc
sbb
aad
inc
clc
mov
daa
shrb
cmp
scas
xorb
xlat
inc
sub
inc
in
lahf
dec
fildll
shrb
xchg
pusha
xchg
dec
shl
lcall
adc
rcl
add
ja
dec
or
mov
mov
push
lds
sar
pop
jb
sbb
lret
int3
and
mov
jge
mov
sub
lret
add
fadds
shrb
repz
add
pop
insl
push
pop
mov
xchg
xor
pushf
rolb
jno
cld
xchg
push
xor
gs
outsb
cwtl
sbb
test
jg
jbe
xchg
jbe
lret
movsl
repz
call
ret
idivb
idivl
pop
fisubs
push
lods
mov
imul
mov
je
add
imul
insb
stos
stos
sub
aam
mov
aas
ja
and
dec
int3
lock
in
mov
scas
sbb
subb
mov
add
imul
clc
fs
xor
leave
pop
fiadds
addr16
in
sub
loopne
and
pusha
push
push
xor
imul
je
xor
mov
mov
and
jne
mov
idiv
pop
fildll
repnz
adc
adc
in
adc
mov
js
in
mov
pop
movsl
loop
pusha
out
lret
test
push
cmp
daa
daa
aam
mov
inc
ret
cmpsb
push
fcom
mov
mov
lret
jnp
xchg
push
ja
out
imul
pop
mov
push
jae
movsb
fucomp
pushf
jge
test
out
or
jbe
lock
mov
push
out
sbb
xor
repnz
ret
imul
xchg
cmp
dec
rorl
mov
ljmp
add
adc
xchg
mov
pop
lods
xor
aam
call
sbb
or
lret
xchg
icebp
popl
ficompl
cmp
adc
jle
mov
cwtl
sti
cmp
push
xchg
mov
fisttpll
pop
out
dec
fs
mov
add
and
repnz
out
push
sbb
dec
in
faddl
inc
stc
test
popa
subb
xor
lea
test
jnp
jp
ret
fcompl
loope
cmp
fisubl
adc
out
test
adc
mov
jecxz
popf
das
aam
xor
rcr
pop
jge
mov
jl
pop
fisubs
in
push
ljmp
jae
cmp
xchg
js
lods
mov
jno
or
add
popf
jmp
push
aaa
inc
cmc
sahf
mov
decl
dec
mov
orb
pop
pop
rorl
je
cltd
inc
xchg
sbb
push
addr16
aaa
cmp
stos
mov
cmp
and
push
xor
and
cmp
inc
inc
and
cs
fistpl
inc
ret
fistps
rdtsc
insb
sarl
dec
push
pusha
xor
movsb
stos
push
aad
jle
fdivl
push
cmpl
pop
jb
or
mov
insl
out
les
imul
aad
push
cmpsb
jnp
inc
xlat
mov
repnz
stos
xor
add
mov
ds
cmp
iret
pop
mov
mov
imul
ljmp
mov
shlb
ja
sahf
xor
push
and
mov
pop
push
mov
or
jecxz
xor
and
pop
xor
or
mov
mov
aas
insb
pop
pop
hlt
rcl
dec
push
dec
jno
stos
daa
adc
and
test
add
fsubs
lock
inc
leave
in
sbb
iret
fisttpll
outsb
dec
dec
bound
adc
hlt
ret
testb
in
or
push
into
sub
jmp
packuswb
jnp
mov
inc
out
test
pop
sbb
pop
adc
and
add
je
in
cwtl
int3
or
aaa
imul
popf
jmp
xchg
jnp
add
rorb
xor
out
xor
xor
andl
lds
pop
or
pushf
insl
adc
jbe
pusha
push
hlt
sbb
nop
xor
les
aam
daa
daa
addb
and
ss
jbe
or
inc
adc
rorl
ret
nop
mov
xor
jnp
std
mov
add
shlb
neg
loopne
push
loopnew
in
jecxz
xchg
sahf
ret
pop
add
ds
xor
fucomip
and
fstps
pop
xchg
mov
xchg
dec
push
sbb
jns
mov
jge
outsb
sti
or
and
cmp
mov
mov
push
cmp
pop
sti
pop
loope
test
or
pop
mov
test
pop
sahf
add
arpl
mov
out
cmc
cld
lods
rcll
mov
jnp
mov
ret
jge
mov
mov
xor
jmp
add
dec
push
negb
pusha
sbb
enter
nop
mov
lods
add
cmp
aaa
xchg
cmp
xchg
jl
xor
lods
sbb
adc
pusha
jecxz
test
out
or
dec
jae
sbb
push
negb
and
pop
sbb
jae
aaa
outsl
fistps
sub
cmp
fs
fwait
adc
insb
addl
push
push
aaa
pandn
jne
ds
pop
mov
sbb
cmp
push
jo
xchg
pushf
sbbl
xor
cld
adc
js
dec
test
or
xor
adc
cmpsb
push
adc
mov
sbb
pop
sbb
out
repnz
mov
mov
dec
pushf
rcll
mov
adc
pop
data16
lret
lret
push
data16
or
out
adc
ds
cli
and
xor
lea
mov
jns
push
dec
or
mov
push
adc
ja
xchg
mov
int3
cwtl
xor
cmp
mov
jecxz
mov
xchg
xchg
rcl
xorb
cmp
or
pushl
in
jnp
cmc
xchg
sub
and
push
jbe
pop
xchg
mov
push
cmp
mov
scas
shlb
inc
dec
sahf
xlat
arpl
or
jl
and
push
adc
in
cmpb
adc
push
insb
cmpsl
dec
es
xchg
push
mov
push
fmull
test
out
sbb
cmc
cmp
lods
data16
adcl
ljmp
cmp
imul
adcb
and
loopne
andb
incb
adc
jns
cmpsl
pop
jns
cmc
push
ds
movsb
imul
xor
int3
jno
test
push
mov
xchg
mov
repz
xor
repnz
dec
aaa
bound
pop
ljmp
mov
insb
pop
mov
or
test
sbbb
sub
mov
dec
pop
mov
push
outsl
or
jb
mov
cmp
xor
mov
or
inc
jg
popf
add
cltd
jmp
or
xlat
les
xchg
call
jecxz
in
fisttpll
fs
adc
pop
push
mov
mov
in
jne
cld
xchg
pop
xchg
pop
clc
lods
push
inc
and
movsb
xchg
xchg
and
scas
dec
add
stos
mov
test
mov
cld
adc
xchg
sbb
xlat
aad
lods
imul
or
cwtl
ja
pushl
ss
jmp
push
xor
cs
xchg
jle
pop
ds
dec
pop
mov
jmp
sub
mov
jmp
xor
inc
je
ds
xor
fldl
into
pop
jp
push
cltd
inc
rolb
aaa
iret
loope
daa
push
das
in
addr16
mov
pop
cs
pop
mov
inc
sbb
sbb
jnp
cwtl
sbb
lret
cltd
hlt
pop
inc
leave
inc
cmpsb
ljmp
jo
lret
popf
add
adc
pop
scas
xchg
aad
icebp
xchg
ss
decb
stc
pusha
test
fidivrl
pusha
sbb
outsb
cwtl
outsl
sti
push
shll
add
jno
push
add
push
or
push
dec
jo
imul
pusha
cld
inc
xchg
rcll
test
mov
pop
sbb
repz
mov
pop
ret
fnsave
lods
loopne
xchg
mov
nop
sbb
dec
mov
jle
jns
sbb
mov
jo
cmpsl
sbb
push
mov
jge
dec
ljmp
les
mov
add
and
insb
movb
adc
mov
sub
pop
andl
push
shrl
dec
xlat
sti
mov
dec
mov
ljmp
loop
or
adc
and
aas
pop
add
mov
mov
dec
mov
pusha
xchg
jmp
mov
mov
cmp
add
xorl
pop
scas
sbb
push
fwait
xorl
ss
jno
mov
sub
cli
xchg
test
inc
add
xchg
pop
lret
mov
cld
xchg
or
cmpsb
test
call
mov
or
mov
lret
mov
in
shlb
inc
push
and
insl
out
fwait
mov
paddusb
cmp
arpl
cmpsl
xchg
cld
div
in
in
aaa
enter
pop
add
push
lock
test
loope
pop
lret
into
call
cmp
sbb
or
jmp
fdivrl
pop
shl
inc
cmp
jmp
call
cmpsl
pop
leave
xchg
stos
sub
xchg
repz
fdivrl
xchg
mov
test
divb
rcrb
sub
and
jo
std
xor
sbb
push
cmc
rcrl
in
lods
mov
aam
daa
push
test
sub
leave
sbb
ret
negl
mov
lds
mov
inc
loopne
inc
inc
dec
jmp
jmp
cld
dec
fcoms
push
test
into
testb
jns
push
xlat
mov
cltd
mov
pop
popf
lahf
hlt
add
mov
out
mov
inc
addr16
and
dec
sub
pop
lret
sub
rorl
mov
insl
dec
push
mov
addb
test
mov
lahf
mov
outsl
imull
fstpt
mov
and
xor
xor
insb
dec
mov
mov
mov
and
fidivrl
pop
xchg
and
and
mov
inc
icebp
loop
iret
repz
add
and
in
mov
adc
push
or
mov
addr16
mov
ja
pop
mov
mov
fprem
lret
lea
out
test
fs
mov
aam
push
and
pop
dec
cmc
pop
cmpsl
out
sub
add
push
fldt
call
pop
dec
loopne
std
pop
sub
lods
xor
into
mov
sbb
pop
adc
cmp
jns
lret
mov
mov
les
rolb
rcll
or
push
out
adc
adc
jnp
push
mov
jnp
cmpsl
fiaddl
int3
sbb
notl
lea
mov
ds
sbb
mov
adc
movsb
test
js
and
repz
jo
xchg
push
xor
xchg
inc
or
stos
lods
pop
enter
add
push
andl
bound
mov
push
js
fsubrs
cltd
lock
mov
pop
movsb
js
cmp
cmc
scas
psrad
js
push
sbbl
lret
ljmp
xchg
inc
push
cltd
pop
imul
mov
xor
in
addr16
jecxz
daa
sbb
inc
pushf
pop
test
rcr
test
cld
ds
dec
data16
push
in
vpmacsswd
jb
loopne
dec
and
sbb
add
scas
rcll
add
pop
and
cmp
mov
add
mov
addb
lcall
or
mov
and
fisubs
or
pop
rcll
mov
cmp
repz
fldpi
rorl
add
push
mov
ret
mov
shlb
sub
stos
mov
sub
add
or
mov
mov
adc
mov
mov
pop
ja
fldl
sbb
divb
pop
dec
mov
jne
jne,pn
cltd
mov
das
adc
cmp
mov
push
and
cmc
adc
inc
pop
ret
pop
cmpsb
xchg
cli
xchg
or
add
xlat
inc
inc
mov
shr
pushf
jae
mov
in
inc
loope
rorl
adc
cmp
andl
xchg
repnz
inc
sub
jecxz
lea
mov
movb
mov
daa
xadd
cmp
mov
rcrb
sbb
cld
sub
les
or
dec
mov
dec
test
test
push
pop
dec
mov
test
and
jbe
mov
or
cmp
xchg
push
into
and
jns
or
jecxz
inc
push
incl
push
xor
sbb
jne
push
mov
xchg
jo
std
dec
dec
cmp
negl
out
pop
out
adc
dec
lock
out
in
adc
adc
mov
adc
xor
lret
aaa
or
mov
or
push
lret
lea
cmpsl
sti
push
mov
shl
mov
pop
push
add
jb
xchg
cmc
inc
stc
push
imul
cmp
jne
push
in
xor
mov
cmp
push
loope
out
data16
test
pop
ss
mov
cwtl
xor
in
fdivrs
pop
inc
fcmovu
and
jnp
add
fwait
in
and
push
jge
movsl
ljmp
pushf
xor
mov
fcompl
les
mov
mov
xor
xor
test
loopne
mov
pop
mov
stc
jg
stc
dec
and
xor
fwait
jb
sbb
loop
rolb
lret
xor
jl
cmpsb
mov
and
push
es
adc
xchg
jmp
incb
inc
cmp
xchg
inc
aad
push
lods
mov
ja
lods
cmpsl
jbe
adc
xchg
ret
xor
adc
loopne
sub
dec
lds
sbb
and
outsl
enter
mov
xchg
scas
test
pop
roll
push
or
repnz
lock
mov
push
and
push
xchg
inc
adc
push
inc
int
cld
and
lcall
add
mov
scas
testl
push
jno
in
mov
cmp
int3
jl
out
add
mov
sub
lods
cmpsl
pushf
sub
inc
sub
mov
insb
arpl
jnp
adc
ret
cmpsb
jae
cmp
ret
dec
sub
cmpsl
push
xchg
mov
push
and
lock
outsl
out
cmp
not
sub
jnp
jge
push
jmp
and
bound
stos
ret
xchg
pop
lret
push
xchg
rorb
movsl
xor
add
and
push
jmp
mov
add
loope
pop
mov
adc
cs
dec
imul
and
fstps
addr16
jmp
xchg
mov
pop
int
inc
inc
cmpsb
sub
aad
cs
aad
pop
mov
cmp
sbbl
jmp
lea
lret
sub
pop
push
or
push
adc
sarb
xor
leave
and
outsl
push
iret
ret
ss
push
xor
or
add
in
jp
xchg
mov
sub
push
iret
cmpl
add
pop
adc
adc
mov
and
fiadds
loopne
adc
dec
popa
testb
or
pusha
push
in
dec
cmp
call
xchg
jne
jns
mov
cmp
xchg
ret
cltd
negb
loopne
mov
mov
push
cmp
sbb
es
mov
mov
fwait
sarb
push
and
pop
mov
mov
pushf
int3
and
in
test
or
pop
js
lods
push
sbb
ja
enter
adc
ds
dec
push
sbb
mov
sub
jno
lret
daa
sbb
sbb
inc
push
mov
mov
lcall
xchg
pop
test
mov
loop
sbb
jmp
adc
push
xor
adc
into
jne
ret
fadd
insl
xchg
insb
arpl
mov
and
stc
lock
or
inc
mov
es
pop
incl
lea
or
shl
jno
jecxz
sub
dec
pop
cmp
icebp
mov
stos
mov
lds
cld
fisubrs
outsl
mov
pop
out
jnp
push
repnz
xor
decl
lahf
jge
mov
sbb
mov
mov
sbb
fwait
mov
sti
ja
sbb
sbb
es
loope
fildll
jno
cmp
xor
xchg
out
pop
sbb
cmp
jne
xchg
and
cmc
inc
ret
jp
xchg
ret
pusha
repz
xchg
inc
jbe
pop
insl
cmp
bndldx
imul
and
sub
data16
ret
repnz
les
pop
push
xor
fadd
lahf
pop
cmc
jmp
sub
xchg
or
loope
xchg
sti
jg
xor
cli
cmp
adc
mov
ljmp
js
cmpsl
test
sub
mov
mov
jmp
push
cmp
fisubl
xor
pusha
movsl
jge
into
mov
mov
inc
pushf
in
imul
and
jmp
rorl
out
loopne
cmpsl
clc
jnp
sbb
fldt
leave
mov
xchg
enter
test
clc
push
or
adc
xor
test
in
sbb
mov
dec
xor
sub
jge
jle
popa
stos
and
mov
lea
test
cmp
mov
cld
leave
cmp
pushf
pop
lock
imul
inc
adc
push
mov
pop
pop
int3
cmpsb
sar
sti
icebp
push
xchg
pop
lret
mov
inc
pop
xor
cmp
mov
into
mov
xchg
fidivs
sbb
es
nop
push
mov
dec
testl
pop
fcomi
jne
push
sbb
or
pushf
jg
cli
cmp
jnp
jo
xchg
jo
adc
push
push
adc
js
jecxz
pop
sti
loope
mov
jb
push
insl
rcr
push
xor
inc
fisubrl
test
xchg
add
push
leave
cmc
popa
lods
mov
adc
mov
push
mov
jne
lods
out
push
add
jle
adc
mov
sub
push
push
mov
push
xor
mov
mov
push
or
mov
aad
jo
inc
imul
inc
jae
arpl
cld
mov
out
and
mov
daa
test
sarb
jmp
ja
cs
mov
pusha
pop
test
dec
loop
pop
ret
ror
push
mov
adc
cld
dec
jae
jne
pop
bound
mov
pop
add
adc
sbb
xlat
sbb
pop
cmc
sub
ljmp
xchg
and
inc
cs
int3
cmp
xchg
mov
cwtl
sahf
out
cld
pop
inc
daa
int
xorb
xchg
inc
jnp
pushf
ja
loope
arpl
ljmp
lret
pop
push
pop
xchg
fidivrl
fsubrl
mov
nop
xchg
cmpsl
push
xor
dec
rorl
pop
add
inc
sub
mov
push
add
outsl
out
mov
neg
pop
jns
pop
into
xlat
push
stc
scas
iret
das
fbstp
dec
mov
jo
jbe
or
pop
push
adc
xchg
dec
push
loop
mov
in
add
push
call
inc
cmpsb
sub
fiadds
mov
push
lahf
rcll
jnp
pop
cltd
movsb
enter
ljmp
dec
rcrl
sbbl
mov
dec
inc
dec
xchg
loop
xchg
pop
cmpsl
cmpsb
outsl
inc
xor
icebp
aad
cmp
mov
clc
xchg
sub
sub
push
cltd
cmp
fwait
adc
aaa
mul
mov
out
cmovs
cmp
cmp
test
xchg
cmp
fwait
adc
ret
stc
sub
icebp
in
outsb
fxch
sti
push
call
loope
repnz
stos
hlt
scas
mov
jns
icebp
ss
mov
jp
mov
icebp
les
adc
mov
mov
cmpsb
or
jo
fimull
daa
gs
mov
mov
xchg
ds
sbb
pop
or
shr
inc
pop
aam
addr16
test
ficompl
andb
call
daa
sbb
mov
mov
in
sub
inc
lret
insl
fldl2e
dec
int3
pop
out
mov
and
dec
int
sub
call
xchg
cs
out
int3
arpl
shrb
mov
ljmp
dec
jl
rclb
arpl
int
push
cmp
cmc
js
inc
out
decb
test
xchg
in
inc
sbb
sbb
pushf
lcall
mov
in
and
lods
insb
ja
shlb
xchg
xchg
ja
cmp
lock
and
out
and
jno
test
pop
fidivs
fdivl
test
lock
add
out
dec
mov
scas
mov
and
in
xchg
pop
test
mov
lcall
paddsb
lcall
mov
ja
repz
sbb
andl
or
je
icebp
adc
mov
fstl
xchg
ss
jl
mov
inc
ret
adc
cmp
mov
fistl
push
adc
ja
pop
cmpb
inc
push
pop
mov
fdivs
loope
push
xor
dec
clc
stos
leave
adcb
orb
aaa
dec
jmp
mov
mov
ret
orl
xchg
rclb
add
in
push
jno
mov
push
int3
iret
call
jbe
lods
sbb
add
ret
cmpsl
push
cmc
mov
test
into
mov
mov
sbbl
pusha
sbb
mov
shl
rcll
leave
ret
lcall
pop
adc
adc
dec
punpckhwd
pop
aad
mov
adc
dec
pop
sbb
push
stc
mov
popf
cwtl
and
push
cmp
jge
sbbb
push
lret
adc
pop
insb
mov
scas
pop
mov
mov
pop
in
imul
add
insb
loopne
test
or
mov
adc
daa
nop
repz
jbe
ret
xlat
pop
sub
sar
mov
pop
add
in
and
pop
or
inc
jmp
or
popf
mov
pop
out
push
dec
fisttps
xchg
lcall
sbb
lret
add
pushf
dec
mov
out
aas
addb
outsb
mov
fs
lahf
jg
push
push
pop
inc
shll
jmp
xor
dec
add
std
push
inc
mov
test
xor
daa
sbb
mov
lcall
jae
sub
out
addr16
jns
sbb
sarl
mov
fistpll
sub
mov
xlat
lea
test
sub
into
xchg
mov
stos
or
mov
cmp
in
ja
sbb
fists
xor
shll
aam
mov
inc
mov
ret
push
add
mov
iret
push
sbb
cmp
jecxz
aaa
fs
and
idivl
loopne
sbb
pop
ret
adc
sub
xchg
cmp
mov
push
jge
ja
out
int
enter
out
cwtl
std
add
pop
fistpl
lcall
mov
mov
sti
stc
lods
lcall
ja
adc
jmp
mov
mov
push
push
pop
mov
aam
cs
repnz
adc
and
sub
cmpsb
dec
sbb
insb
push
cs
ret
cmpl
cmp
and
pop
fdivs
ds
rcrl
shlb
out
mov
stos
daa
int3
xor
inc
and
repz
nop
xor
in
mov
icebp
aad
outsb
cld
into
fnstcw
add
and
xchg
pushl
repz
xchg
les
jmp
aaa
cmp
mov
test
pop
dec
adc
rcrb
jnp
int
addr16
pop
not
cld
sbb
push
int
or
or
cmp
mov
test
pop
out
pop
cvtps2pd
xchg
pop
jb
jg
xchg
hlt
xchg
outsl
jne
es
xorl
dec
iret
sbb
jnp
push
sub
jle
inc
xchg
out
shrb
mov
rol
iret
adc
and
xchg
sub
int3
jne
sahf
cli
jne
inc
test
adc
dec
sub
xchg
aam
out
mov
dec
push
xor
popa
jge
push
push
repnz
or
clc
mov
ss
jne
movsb
sbb
xchg
ja
add
jne
or
jmp
and
and
into
in
pop
inc
push
mov
sbb
daa
inc
ss
cmp
mov
cltd
pop
fwait
bound
icebp
cmp
xchg
imull
jno
sub
addr16
scas
mov
add
cld
cmovbe
lahf
adc
nop
movsb
push
ljmp
fsubs
scas
scas
fimull
pop
pop
lret
mov
cmp
pop
cltd
hlt
arpl
insb
repnz
jbe
or
lea
inc
and
mov
pushf
ja
ret
stos
loope
xchg
pop
mov
jl
in
je
test
ja
fcompl
cli
sub
in
mov
lods
subl
mov
add
enter
gs
and
stos
test
xchg
sahf
ficoms
pop
add
pop
fnstenv
adc
xchg
sbb
movsb
fidivrl
icebp
pop
bnd
sar
mov
les
mov
test
outsl
sub
xchg
scas
jb
jnp
outsl
xchg
cld
xor
xorb
out
mov
insl
mov
sub
jg
rorl
xchg
xchg
subb
add
aam
lock
in
pop
jo
sub
push
out
decl
dec
stc
repz
mov
inc
sbb
pusha
mov
dec
add
cmp
and
incl
fwait
add
add
fs
pop
mov
out
test
mov
les
adc
outsl
sub
lret
pop
push
cmp
adc
adc
sub
xor
test
jecxz
mov
frstor
or
mov
dec
push
mov
pop
scas
lahf
jbe
ds
cwtl
xor
mov
sarl
push
adc
lods
mov
cs
add
adc
jp
sbb
negb
sub
dec
adc
push
push
inc
lahf
adc
push
jne
test
sbb
sbb
sbb
inc
lret
test
gs
jge
push
pop
dec
test
leave
sub
ret
xor
ds
mov
fmuls
xlat
jmp
mov
stos
shlb
fsubl
in
mov
cmpsl
mov
add
fisttps
jmp
call
cmpb
inc
out
dec
sbb
xchg
mov
sub
stos
in
and
fs
mov
and
std
cli
in
xor
outsl
jns
sbb
aaa
xchg
xchg
clc
sbb
mov
int
test
test
int
add
push
sub
in
test
les
rclb
cmp
mov
jle
jmp
push
adc
mov
movsl
xor
mov
xchg
add
daa
and
bound
mov
sub
add
sbbb
xchg
subl
test
push
cmp
sbbl
jo
add
ret
push
mov
adc
push
imul
inc
lret
lock
jo
fwait
nop
stos
fcomp
xchg
hlt
int3
cmp
out
repnz
out
mov
mov
mov
add
sbb
mov
mov
push
inc
adc
lods
test
or
scas
lods
mov
xchg
mov
mov
xlat
fidivrs
sub
mov
sbb
jb
aad
fs
cmp
setl
ja
stc
mov
mov
xchg
call
add
add
sub
xor
add
fs
hlt
push
subb
lods
cs
mov
dec
add
insb
adc
jns
push
dec
loop
rorb
jp
cmpsb
lock
dec
aam
negl
adc
daa
sub
negl
lcall
in
int
aas
int
into
jle
xchg
sahf
sbb
inc
mov
adc
int3
add
cmp
les
hlt
sarb
mov
arpl
test
sub
adc
scas
test
add
or
mov
mov
and
testl
jnp
jmp
mov
jg
cmp
push
stos
cmp
je
out
das
int
loop
rorb
fwait
pop
aaa
jl
push
hlt
cmpsl
repnz
push
inc
inc
pop
pop
call
not
call
mov
jecxz
cmp
adc
out
push
or
or
or
sbb
mov
jmp
fwait
int3
hlt
adc
mov
mov
fwait
jg
imulb
in
addl
push
cmp
leave
ret
lahf
fldl
cmp
in
loop
jl
xor
stos
ficoms
inc
add
adc
ljmp
dec
adc
inc
lock
dec
sbb
jne
ds
pop
leave
inc
daa
aad
add
jmp
jo
flds
push
push
inc
jg
stc
in
xor
rcl
xchg
std
xor
sbb
loop
std
test
lods
jecxz
jle
fiaddl
xlat
push
sbb
scas
lods
ficoml
nop
arpl
push
out
repnz
testb
lret
outsb
rcl
cwtl
sbb
cmc
inc
pop
pop
data16
js
push
aad
jns
cmp
cwtl
mov
or
mov
jmp
sub
and
cmpsb
pop
lods
inc
sti
cmpl
mov
rcr
pop
mov
es
andnps
nop
sbb
jb
mov
or
pop
mov
jnp
inc
mov
divb
mov
shrl
sbb
pop
mov
rcr
jmp
lock
std
mov
fmuls
cmp
into
dec
xlat
sbb
pop
dec
mov
sbbb
jne
inc
pusha
or
subb
scas
sbb
insl
jecxz
shlb
incl
movsb
lret
push
push
insl
mov
and
jecxz
xchg
sub
push
push
sub
cmpsl
call
movsb
mov
out
fidivl
mov
mov
inc
stos
loop
push
mov
jae
in
cwtl
cmpsb
test
aaa
data16
adc
or
mov
enter
sub
xchg
push
push
jnp
add
nop
mov
mov
adc
popa
pop
push
mov
and
sub
and
cmpsb
scas
inc
and
xchg
adc
hlt
and
stc
pop
jne
lcall
xchg
fwait
jno
sub
adc
xor
inc
add
sbb
adc
push
inc
add
push
addr16
sub
adc
arpl
and
inc
iret
jno
lret
sub
jno
arpl
lret
jecxz
pop
jle
mov
push
jp
lock
jno
and
xor
sbbl
scas
rcl
rcrb
mov
mov
popa
fcmovbe
cwtl
std
pop
jecxz
sbbb
ds
mov
sub
jno
pop
push
xor
ljmp
pop
pop
cmpsl
fists
inc
std
fdivrs
out
lcall
pop
sbb
pop
sbb
cmp
mov
dec
mov
adc
inc
test
scas
mov
hlt
xor
std
hlt
cltd
imul
jle
sti
jg
and
cmpsl
cld
mov
lock
add
repnz
add
dec
push
sahf
sub
push
movsl
dec
aas
xchg
push
or
sbb
or
dec
mov
jnp
leave
dec
or
into
mov
scas
shrb
pop
xchg
call
cmc
outsl
clc
dec
dec
push
cld
out
repnz
gs
shr
mulb
mov
cltd
mov
imull
cmpsl
xor
fucom
fs
es
mov
jl
movsl
sub
sub
sbbl
into
jmp
or
cmp
pop
inc
jmp
xor
mov
xchg
cltd
bound
jbe
push
inc
inc
push
scas
das
bound
or
mov
shll
mov
testb
pusha
add
xlat
jp
pop
popf
gs
stc
stos
repnz
aam
hlt
xor
sub
xchg
es
sbb
movsw
negb
push
mov
fidivl
add
push
int
adc
xchg
cmp
cld
xchg
nop
ss
cmp
ds
in
movsb
mov
imul
bound
xor
mov
mov
test
dec
add
cltd
data16
notb
dec
xchg
repnz
stc
fdivs
out
mov
pop
push
stos
ss
repz
dec
push
add
inc
out
jmp
mov
push
pop
sarb
sbb
bound
jle
scas
mov
fcomps
adc
add
test
cs
and
mov
clc
xor
and
jne
push
add
test
sub
or
std
faddl
jmp
test
mov
xchg
jmp
clc
mov
aam
pop
test
mov
lret
pop
mov
gs
pop
lret
and
mov
lret
shll
pop
and
adc
das
gs
add
call
arpl
sahf
inc
xchg
out
inc
mov
dec
dec
sub
sbb
mov
lahf
sbb
jmp
dec
enter
popa
int3
cmp
jns
je
mov
faddl
xchg
arpl
mov
xchg
addr16
rcl
int
xchg
add
push
aas
leave
ret
mov
add
inc
into
sbb
mov
adc
subb
cltd
rorl
daa
xchg
mov
dec
fldl2t
aam
xor
mov
sar
aas
ret
mov
ljmp
movsb
mov
adc
lcall
jle
mulps
nopl
call
pop
cltd
xchg
or
bound
mov
xchg
pop
mov
add
push
mov
adc
nop
mov
shrl
lahf
sub
das
pop
ja
sub
out
mov
inc
mov
int
inc
mov
adc
mov
xchg
dec
add
fwait
cltd
mov
cltd
mov
pusha
xor
pusha
mov
and
outsb
xor
aaa
inc
cmp
push
mov
insl
jl
push
push
pop
lcall
pop
fwait
sub
addr16
daa
inc
divb
cmp
push
cmp
std
call
push
cwtl
in
movsl
mov
cmp
cs
popa
fistps
cmc
les
sbb
or
push
stos
out
push
cld
inc
leave
push
enter
sbb
push
add
dec
inc
mov
xor
fcmovb
sub
sbb
fdivs
mov
xor
insl
insb
mov
lea
fsub
cltd
mov
sub
and
mov
push
adc
xchg
xchg
or
mov
into
sub
outsl
fwait
push
out
sahf
pop
dec
xchg
sbb
add
and
xchg
mov
icebp
aad
dec
outsl
ljmp
scas
test
int
sti
je
push
fwait
xchg
pop
push
fisubs
out
xor
aas
shll
clc
and
stos
mov
call
mov
push
imul
cmp
jecxz
xorb
js
lahf
nop
or
xchg
add
out
fdivrl
mov
xorl
pop
jp
outsb
leave
call
pop
movsl
aam
jg
mov
cs
add
fimuls
jb
mov
mov
jns
sub
nop
xchg
outsl
dec
mov
loope
test
sub
mov
dec
shl
mov
cmpsl
ret
xchg
sub
ljmp
add
and
xor
jmp
cli
clc
dec
xor
pop
pop
mov
mov
or
aam
inc
mov
les
or
icebp
test
mov
mov
xchg
frstor
dec
aas
and
mov
mov
cltd
adc
jmp
in
popa
pcmpeqd
clc
mov
xchg
xlat
pop
pop
jbe
mov
insl
add
outsb
fnstcw
mov
sub
repz
stc
adc
stc
sbb
jp
popf
pusha
jecxz
mov
xchg
cmc
gs
adc
inc
jns
scas
jmp
fiaddl
xchg
xorl
jae
dec
push
add
mov
aas
lock
or
add
inc
clc
mov
in
and
pop
int3
loopne
dec
dec
xlat
adc
enter
rcrl
test
dec
out
mov
jmp
cmp
pop
test
ljmp
jns
push
popa
jl
popf
sbb
or
mov
setp
imul
in
js
call
fdiv
cld
sbb
rcr
movsl
sti
mov
hlt
fldt
lahf
mov
ret
dec
push
test
pop
pop
pushf
idiv
sbb
mov
out
aad
sbb
mov
mov
lods
dec
fcoms
xor
adc
or
push
sub
cld
popf
fildll
roll
cmc
adc
pop
push
jb
or
inc
mov
inc
shr
inc
aas
jns
stos
aaa
cmpsl
mov
jecxz
lahf
sti
test
add
jmp
adc
mov
jns
and
xchg
scas
cmp
std
imul
xor
xlat
mov
push
test
mov
cmp
cli
popa
adc
or
repz
pop
pop
dec
js
adc
adc
pop
mov
adc
or
aad
mov
inc
jno
xor
dec
fiadds
ds
call
mov
cmp
dec
adc
jns
mov
test
in
shr
lea
inc
mov
pop
inc
xchg
and
xlat
and
push
inc
jle
inc
in
dec
aam
push
or
rorl
xor
xor
inc
mov
jb
dec
ljmp
sub
out
and
std
jg
lahf
sub
sub
or
sbb
test
dec
iret
pushf
sbb
cmpsb
xchg
pop
ret
xchg
sub
rol
jge
cltd
les
adc
jmp
and
add
push
cwtl
push
xor
sub
add
movsl
pop
or
sub
mov
xlat
loopne
or
mov
out
add
outsl
and
hlt
ss
ror
sub
outsb
jp
jb
and
xchg
data16
xchg
ret
pop
sbb
stc
call
in
jge
mov
cs
cmc
xor
jg
add
adc
es
or
out
aas
xor
mov
xchg
jg
and
sti
lret
pop
in
cmp
loope
xchg
jle
fsubrl
xchg
lock
sbb
dec
push
jbe
hlt
jbe
aam
xor
addr16
lods
mov
pusha
jmp
fisubrs
mov
lret
mov
push
cmpl
jge
inc
push
subl
cmp
icebp
jb
scas
dec
or
rol
leave
mov
je
mov
push
jp
jg
inc
cmp
dec
lret
pop
popf
addr16
scas
dec
jmp
push
xchg
pop
or
pop
lcall
outsb
push
or
mov
or
jecxz
aam
adc
sub
das
and
xchg
lock
les
xor
xchg
leave
dec
jl
xchg
jne
and
divl
inc
pop
pop
imulb
stc
adc
sbb
or
push
adc
pop
loop
roll
imul
hlt
mov
mov
cwtl
aas
push
add
and
inc
or
pop
push
lods
les
push
arpl
cwtl
ja
push
rcrb
shr
jl
shll
outsl
test
repz
decb
or
aas
adc
aam
cmp
cmp
fistpll
lea
testl
das
cmpsl
addl
adc
nop
repnz
pop
test
jmp
js
sahf
sbb
mov
lret
stc
iret
movsl
subb
dec
nop
cli
mov
mov
loope
push
ret
and
sub
les
push
std
daa
dec
mov
les
dec
xchg
es
ljmp
sub
jo
mov
hlt
cld
lret
pop
inc
push
adc
out
outsb
pop
inc
lea
adc
stos
push
xchg
ss
imul
int
dec
cmp
cmp
xchg
bnd
test
xchg
dec
xor
test
bound
rcrb
push
mov
div
xchg
push
push
xor
jg
inc
and
aas
mov
jbe
lret
push
xchg
cmp
dec
jne
jle
notl
repnz
rep
and
lret
xor
les
filds
fsubl
pop
and
stc
imul
call
adc
dec
xchg
push
or
adc
idivl
fwait
jne,pt
sub
pop
lods
push
insl
xor
mov
dec
push
xchg
xlat
push
in
xrelease
daa
push
aad
mov
ret
cltd
add
stos
scas
aas
das
cmpsl
or
decb
ds
popa
sub
loopne
rcrb
push
and
push
in
and
push
xor
xchg
mov
push
cwtl
cmc
fisttpl
push
inc
aas
jbe
push
sub
rolb
jmp
mov
ljmp
mov
ret
pop
pop
adc
and
lds
sbb
ja,pt
xchg
iret
iret
outsl
xchg
in
xlat
aaa
mov
dec
jae
and
ret
adc
stc
jbe
dec
fistps
add
in
dec
clc
dec
scas
daa
cmp
cmpsl
inc
ja
xor
leave
clc
rolb
andb
ss
fsubr
popa
dec
adc
rcrl
sub
cmp
ret
rorl
adc
loopne
and
cmp
cmpsb
das
xchg
sub
fisubrl
sbb
mov
pushf
push
loopne
xorb
mov
fistpl
xor
ljmp
adc
insb
adc
fcomps
inc
sbb
test
adc
sarb
mov
icebp
popa
fsubr
push
mov
add
add
xchg
movsb
jp
xor
mov
jecxz
mov
mov
ds
mov
dec
daa
or
push
inc
or
dec
add
jl
and
data16
daa
mov
rep
ljmp
call
popf
inc
sub
or
pop
add
add
lret
or
cmp
mov
xchg
in
sub
icebp
popl
out
jecxz
xor
loop
pause
jb
sti
rorl
cli
xor
imul
inc
int
xchg
add
out
sbb
and
xchg
mov
outsl
mov
pop
push
sbb
sahf
mov
add
pop
rcll
fdivl
mov
adc
mov
sub
sub
add
popf
inc
fdivrs
and
cs
xchg
fnstcw
jmp
dec
daa
sbb
xor
iret
rcll
orb
mov
push
jg
cmpsb
ffree
mov
int
and
jo
add
and
ror
cmpsb
imul
jne
xor
nop
imul
push
sahf
push
xor
ret
dec
cmp
test
add
sbb
mov
jae
pop
mov
or
cs
out
out
out
push
or
jge
xchg
aam
mov
xchg
jp
mov
fldcw
push
scas
test
cmpsl
stos
and
mov
mov
mov
into
xor
fdivr
addr16
int3
jo
ret
fisubrs
lret
call
adc
push
or
adc
and
mov
sbb
cmp
push
xchg
xchg
in
dec
dec
clc
xchg
dec
repz
jb
jecxz
and
sub
imul
pop
std
dec
cmp
jecxz
mov
leave
jae
xchg
sbb
jl
negl
lods
inc
dec
mov
es
xor
mov
shll
mov
lcall
adc
ret
leave
sub
push
addl
les
jmp
jle
mov
hlt
scas
jnp
sbb
pop
sub
inc
pop
sarl
jl
fidivrl
notb
daa
or
stc
dec
call
insb
mov
xchg
dec
dec
mov
xchg
test
cld
inc
adc
movsl
jp
pop
mov
add
or
jge
adc
shlb
dec
lods
test
inc
dec
jmp
les
jp
cwtl
cwtl
pop
sbb
lods
xchg
lahf
xor
stos
divl
stos
mov
xor
xchg
mov
push
or
addb
subb
jnp
in
hlt
mov
sbb
cmpsl
push
cmp
ss
xorl
jbe
inc
bound
push
fsts
adc
call
adc
push
clc
iret
dec
fwait
sbb
jnp
xchg
sub
jp
in
xor
xchg
out
outsl
outsb
daa
ja
xor
xor
int3
xchg
fmuls
push
and
pop
and
or
xor
fstpl
xor
dec
sbb
fildll
sahf
sub
push
inc
aad
and
pushf
in
je
mov
rorl
sbb
pop
and
out
xchg
cmc
fsubl
fstps
mov
or
shll
addr16
adc
mov
or
das
enter
jae
icebp
pop
dec
sbb
pop
lods
call
js
xor
cmp
inc
rcll
mov
mov
cmp
inc
push
sahf
scas
std
aad
ljmp
mov
jae
push
cltd
mov
rol
stos
in
bound
cltd
xor
adc
in
movsl
sti
cltd
cmp
inc
ret
push
add
and
jmp
stc
xlat
jle
icebp
and
push
mov
adc
xor
push
mov
and
mov
xchg
scas
lcall
sbb
pushf
or
or
push
push
out
dec
adc
jle
xor
gs
arpl
push
or
popf
ljmp
mov
pop
ret
and
or
ret
jo
in
aad
and
mov
ds
cs
sbb
divl
scas
ljmp
mov
int
mov
or
movsl
push
xchg
je
cmp
cmc
ds
and
and
into
stos
mov
jmp
cmp
mov
lcall
cli
jne
mov
sarl
push
aad
jo
inc
jae
imul
stos
jbe
pop
dec
push
xchg
es
mov
add
lahf
jle
inc
pop
leave
or
in
xor
add
or
push
xchg
and
cmp
psubq
jnp
adc
or
pop
pop
cwtl
pop
and
stos
and
mov
sub
fwait
into
jecxz
dec
adc
mov
dec
scas
adc
push
fmull
and
xchg
and
cmp
add
mov
push
mov
scas
sub
movsl
sarb
dec
cli
push
and
mov
arpl
or
push
pop
mul
clc
push
cmc
lcall
imul
jle
mov
lds
adc
pop
push
xchg
pusha
in
and
hlt
dec
in
xchg
sub
fs
pop
movsb
or
stc
bound
or
mov
jle
cmp
rorl
push
dec
pusha
mov
sahf
repnz
in
or
sbb
loop
shrb
mov
movsl
mov
inc
in
or
jl
iret
in
push
xchg
jo
adcb
push
fnstenv
into
lods
fidivs
data16
mov
aaa
xchg
or
cmp
decb
push
xor
pop
jno
insb
pushf
push
inc
cld
xchg
leave
mov
mov
jnp
repnz
dec
leave
jno
xor
daa
aaa
stc
test
xor
inc
dec
aam
sbb
cmp
gs
push
insl
push
xor
pop
adc
add
in
and
xchg
lods
pop
ds
cltd
dec
in
mov
orb
xchg
adc
dec
into
les
mov
xchg
fmuls
jb
and
jmp
mov
popa
pop
lret
mov
out
push
data16
and
shll
xchg
sub
and
imul
js
popa
cltd
repnz
cmp
or
adc
out
pushf
push
orb
enter
jbe
loop
dec
and
pop
loope
pop
or
push
pop
mov
push
xchg
lahf
push
xchg
xchg
repnz
cld
enter
jns
pop
mov
test
sbbb
mov
mov
out
inc
and
rcll
jmp
repz
fistps
push
jl
pop
mov
cmp
sahf
or
cmpsl
insb
cltd
insl
lock
out
ljmp
mov
mov
jnp
cltd
add
repnz
mov
xchg
sub
lcall
ret
push
jmp
divb
push
mov
xchg
xor
inc
push
cmc
cmpsl
lcall
or
iret
fsts
dec
pop
fcoms
lock
dec
sub
push
dec
imul
sbb
pop
lea
or
mov
add
inc
cli
ret
fdivl
fldt
xchg
push
mov
fdivr
fmul
out
lea
pop
test
outsl
cmp
sub
mov
pop
fiadds
pop
pop
dec
dec
jne
inc
movsb
test
jp
insl
adc
fmull
out
cmpsb
ret
jge
xor
add
xor
jmp
mov
dec
push
sbb
mov
mov
addr16
mov
clc
inc
scas
mov
stos
in
jl
mov
inc
popf
jnp
mov
xchg
xchg
leave
repnz
orb
cmpsl
aas
xchg
aam
push
scas
pop
push
out
cltd
lods
pop
push
cli
lock
cwtl
lret
jne
and
mov
mov
fsubrs
mov
insb
inc
lods
test
cli
mov
jecxz
pop
popf
mov
pusha
sarl
int3
push
pop
add
mov
sbb
push
or
mov
dec
mov
popfw
and
and
out
out
ret
sub
xchg
cld
sub
adc
mov
rorl
in
xor
shrb
mov
push
dec
push
cld
mov
xor
loop
loopne
push
pop
jae
xor
pop
ss
pop
loope
mov
out
aam
jnp
bound
sbb
shl
out
and
in
push
mov
mov
std
movzwl
pop
rcl
orl
cwtl
incl
mov
jecxz
imull
in
cmc
xor
jb
fldt
out
mov
jle
lret
or
add
mov
dec
test
pop
mov
lods
push
lock
and
pushf
xchg
bound
and
dec
sahf
sbb
mov
pop
lods
in
cmp
pop
pop
mov
adc
jecxz
in
adc
sub
dec
and
test
jl
fxch
lods
leave
inc
pushf
insb
dec
pop
stos
int3
push
mov
imul
mov
popa
pop
popa
pop
push
movsb
leave
xchg
pop
or
sarl
out
mov
in
jl
mov
mov
fdivrs
and
sub
nop
in
loope
xor
pop
jl
add
ret
filds
popf
leave
mov
stc
sbb
das
push
cmp
lock
shlb
pop
dec
push
imul
adc
dec
lea
mov
pop
mov
pop
adc
pop
jp
mov
sbb
push
gs
out
iret
test
adc
jae
inc
mov
jl
movsb
std
push
outsb
xor
add
jne
mov
sbb
scas
add
es
lcall
or
bound
mov
sbbb
sub
daa
cmp
ja
repz
sti
sub
shll
js
stc
jl
sbb
movsb
xor
insl
add
inc
cmp
fnstsw
scas
sbb
mov
pop
dec
mov
xchg
mov
add
test
movsl
sub
push
sub
or
add
push
cmpsl
xchg
jno
mov
add
js
xchg
aas
dec
scas
pop
in
mov
fisubrl
ljmp
mov
push
jb
pop
repz
xchg
dec
sub
in
pop
inc
jae
pusha
and
aam
jae
dec
mov
push
in
pop
and
js
movsl
outsl
test
inc
pop
or
push
xchg
sbb
hlt
xchg
mov
pop
mov
push
jg
outsb
dec
mov
mov
aam
jp
xchg
jno
fs
lret
sub
inc
sub
rorl
add
fcompl
aas
mov
dec
sbb
cmpsl
inc
mov
or
hlt
lods
ss
push
mov
insl
mov
stos
push
pusha
rolb
or
mov
sbb
sub
jae
sub
test
pop
stc
mov
out
inc
and
das
mov
lods
hlt
ds
dec
test
jbe
push
xor
adc
loope
cmpl
jne
jmp
mov
mov
jmp
mov
or
adc
mov
fxch
cmp
fcomps
lret
jnp
ds
jnp
aas
es
iret
mov
add
and
xchg
lods
movsb
add
mov
rcrb
sub
add
pop
mov
pop
cmpsl
sub
pop
xor
mul
mov
sub
adc
mov
cmpsb
xor
add
fsubs
jbe
jge
dec
cmp
push
mov
rcrl
adc
test
or
cmp
xchg
idivl
fnsave
xchg
arpl
std
ret
cmp
std
mov
pop
jle
jg
mov
out
les
xor
xchg
xor
cmp
mov
jp
adc
js
mov
xchg
mov
rcrb
dec
cmpsb
xchg
push
mov
and
fadds
imulb
jno
pop
sbb
movsb
cld
mov
jg
sbb
cld
int
cmp
mov
fldcw
mov
adc
jns
lret
aaa
inc
mov
and
xchg
jns
and
xlat
aaa
std
gs
xlat
mov
dec
xchg
sti
jnp
xchg
lcall
add
mov
icebp
popf
cmp
ss
xlat
pop
mov
pop
pop
add
rcrb
mov
dec
xchg
push
into
sbb
insl
sti
dec
mov
push
xchg
xchg
push
ficoml
into
jnp
pop
pop
or
cltd
and
ss
cmp
or
stos
jnp
sbb
pop
repnz
jnp
inc
pop
pop
mov
js
inc
mov
push
xlat
add
bound
movsl
movsb
arpl
add
es
push
cmpsl
jp
xchg
jp
inc
mov
mov
inc
cwtl
inc
imulb
lock
sub
dec
aaa
fildll
insb
sahf
test
scas
jne
and
rorl
mov
adc
mov
mov
arpl
movsb
adc
movsl
cwtl
fwait
adc
imul
stos
aas
ret
in
inc
mov
mov
mov
lods
das
mov
rcl
and
insl
lea
popa
pop
mov
pop
lret
dec
ja,pt
and
fs
jmp
push
pop
mov
mov
pop
add
mov
add
dec
xchg
sub
push
pop
fcoms
xlat
push
cltd
xor
mov
cltd
pop
jo
nop
in
jo
push
push
scas
inc
pop
lcall
cli
aas
sub
pop
clc
jp
or
mov
cmp
push
xor
shrb
add
cmp
js
pushf
in
adcl
clc
int3
jae
inc
out
test
adc
ret
pop
cmp
fdivl
and
ljmp
lods
push
xchg
push
sahf
mov
fcmovne
test
cmp
push
lods
add
jns
repnz
add
ret
insb
mov
xlat
jecxz
fcoml
lahf
mov
xchg
int3
add
mov
pop
mov
and
cmp
xor
int3
xor
push
adc
mov
push
repz
xchg
push
xlat
xchg
xor
xor
add
ret
jo
mov
cmpsb
in
test
ja
and
dec
adc
imul
mov
push
and
push
xchg
fmull
mov
ficomps
loop
cmp
mov
mov
xchg
cs
mov
cmp
adc
in
cmp
incb
xchg
sahf
or
leave
loop
pop
shlb
mov
jo
movsb
and
xor
add
fwait
jno
leave
inc
xor
fiadds
xchg
push
or
shll
fsubs
mov
jno
mov
sarb
aam
jns
mov
nop
mov
int
sub
mov
aad
fildl
aaa
dec
arpl
loop
sub
xor
lahf
jmp
adc
imul
mov
jne
or
or
movsb
lods
pop
or
ljmp
push
es
lret
pop
and
mov
jnp
jb
cs
js
and
in
inc
jno
loopne
sti
shlb
lret
in
pop
int3
mov
sbb
jp
aam
es
andl
loope
outsl
sbbb
pop
sub
fisttps
fwait
ret
lods
mov
clc
add
test
sahf
push
adc
mov
xor
push
mov
fisttpll
pop
mov
lret
or
lods
push
add
mov
and
dec
sbb
ss
inc
leave
jbe
pop
mov
adc
lcall
pop
incb
mov
mov
pop
bound
xor
mov
push
roll
xor
dec
xorb
mov
jo
in
fwait
mov
pop
int3
sbb
rcr
add
sbb
fcompl
rcll
insb
mov
pop
outsb
mov
cltd
or
xchg
popf
pop
mov
sbb
dec
xor
gs
and
sbb
jmp
insl
mov
out
lahf
sub
or
sbb
repnz
jmp
mov
xor
inc
or
push
ret
sbb
aad
adc
adc
sbb
mov
inc
dec
jge
mov
sbb
dec
jmp
dec
stos
mov
cmpsl
out
dec
mov
cmp
mov
mov
sbb
nop
xchg
hlt
leave
add
pop
xor
int
ja
lock
cmpsl
mov
mov
sub
inc
int3
jo
dec
cli
pop
test
addr16
out
dec
daa
sbb
mov
pop
loope
sbb
jo
lcall
mov
outsl
push
adc
push
adc
lods
in
push
fmuls
sahf
mov
inc
xchg
std
add
inc
jmp
mov
pushf
push
pop
sbb
in
dec
or
dec
or
stos
and
add
adc
jo
or
out
mov
mov
sbb
lods
inc
mov
or
fdiv
in
sbb
mov
js
inc
or
push
div
or
clc
and
into
lcall
lods
cmpsl
xchg
jge
lods
ds
rdtsc
ret
jmp
les
leave
bound
mov
sbb
push
out
leave
mulb
adc
jns
or
cmp
loop
mov
in
cmpsl
push
or
cmp
dec
shrb
ror
ja
jnp
mov
push
xchg
aam
xchg
iret
xchg
jbe
pop
xchg
xchg
ret
xchg
mov
loop
mov
push
int
inc
adc
fcmovnu
cltd
xchg
daa
cmp
xchg
nop
sub
cli
cs
mov
lahf
cmp
mov
sub
mov
iret
cwtl
rcrb
leave
cs
push
stc
outsl
aad
jno
clc
andb
xchg
adc
das
push
fcoml
les
push
pop
push
ret
sahf
enter
ja
mov
out
xorl
iret
sbb
and
sub
pop
ja
out
pop
xchg
pop
loop
add
inc
pop
dec
fstl
adcb
adc
cwtl
push
xchg
movsb
call
lcall
jne
test
flds
inc
or
stos
cmp
lds
pop
mov
cmp
dec
sub
sub
aam
push
roll
call
dec
jl
xbegin
movsb
xchg
in
enter
push
mov
ds
jmp
hlt
push
adc
inc
add
dec
mov
jno,pt
jno
cmp
push
pop
xchg
rol
push
xlat
fdivl
pop
xorb
xchg
push
inc
in
and
test
inc
int
dec
outsb
es
lods
push
pop
neg
cmp
addr16
xchg
xor
cmp
jmp
cmp
mov
lods
lods
cltd
aaa
or
rorl
scas
mov
cmovb
daa
loopne,pt
push
pushf
movsb
mov
stos
stc
dec
aam
js
nop
and
enter
lea
sbb
mov
or
aas
push
test
rolb
repz
add
sub
dec
clc
in
sbb
out
mov
std
pop
movsl
push
mov
out
or
mov
sub
mov
jle
xchg
jno
mov
je
in
hlt
nop
mov
call
aam
or
fisubs
or
xchg
popa
add
add
or
imul
aas
aaa
jae
sub
push
add
xor
in
jmp
xor
cmc
jne
cmpb
pop
rcl
xchg
test
data16
aaa
insl
imul
inc
jbe
fsubl
cs
cmpsb
pop
pop
adc
xchg
jecxz
je
inc
testb
das
dec
or
enter
std
mov
inc
push
fwait
sub
bound
clc
push
xchg
sbb
xor
pop
imul
sbb
jns
div
mov
jl
xor
into
dec
jbe
xor
xchg
mov
xor
jecxz
xchg
aaa
push
shll
xchg
inc
xchg
adc
stos
adc
idivb
lds
mov
push
adc
insb
movsb
dec
sub
cmp
pop
leave
lret
lret
repz
lcall
dec
sahf
test
mov
insl
add
mov
test
out
fsubs
add
fwait
xchg
imul
imul
sbb
mov
sub
ss
lds
push
lds
cmc
cmp
xor
mov
and
jg
inc
sbb
jnp
add
dec
aam
jb
pop
sbb
push
or
movswl
push
aaa
shrb
pop
pop
rolb
stos
xchg
ss
or
lods
push
daa
mov
sbb
aas
xchg
add
call
push
mov
fldcw
add
les
inc
lret
call
sub
int3
inc
xchg
cmp
dec
pmaxub
cwtl
fists
pop
data16
push
sub
enter
mov
inc
out
repnz
pop
xchg
aaa
movsb
pop
push
ljmp
jge
lods
push
xchg
xchg
ss
cwtl
or
xchg
and
xor
sub
add
mov
add
rolb
push
or
out
xchg
rcll
test
dec
vhaddps
emms
insb
xor
jl
es
jbe
and
dec
cmp
in
xor
jnp
xchg
cs
jno
lock
dec
imulb
imul
jne
jne
leave
repz
mov
adc
adc
adc
jmp
cltd
sbb
cmp
adc
jmp
cld
adc
or
cmpsb
cmp
or
hlt
mov
cmp
cmp
out
test
insl
popa
xadd
push
pop
lahf
aad
lods
mov
or
mov
mov
xchg
xchg
pop
pop
push
cmp
push
negl
mov
js
inc
mov
fwait
aas
into
imul
dec
add
shlb
xor
ficomps
xor
mov
xchg
jmp
push
lock
xlat
or
adc
xor
ds
jns
xchg
cmp
stos
loope
xchg
xor
cmp
and
cwtl
roll
push
xchg
movsb
sbb
pop
mov
cmp
lods
fdivrl
cmp
add
and
sbb
je
mov
jae
imul
mov
push
cmp
cmp
push
mov
mov
jns
xchg
mov
cli
repz
out
outsb
lock
ret
sub
mov
or
aaa
inc
jnp
fsubrp
jb
mov
into
mov
adc
ror
js
rcr
xlat
notw
or
jbe
mov
and
ret
mov
xorl
add
cmp
push
roll
arpl
ja
fstl
lret
scas
dec
xlat
fnsave
ret
ficoml
xlat
xchg
ja
js
fcompl
jae
ret
sti
adc
jae
mov
jnp
out
sahf
ds
jg
inc
out
push
mov
adc
sbb
inc
or
lcall
mulb
aas
lcall
sti
jecxz
cs
imul
cs
push
fmuls
popf
jg
adc
sar
insl
mov
negb
or
adc
icebp
scas
adc
out
dec
aas
xchg
pop
and
pop
cltd
insl
mov
outsl
cmp
test
popa
mov
jns
xchg
fstp
inc
test
xchg
add
pop
inc
jo
pop
xor
fdivp
xchg
rcrb
rcrb
jecxz
adc
rorb
adc
xchg
call
mov
lods
mov
outsl
mov
cs
lcall
and
fiadds
aam
cli
insb
jns
xor
movsl
mov
int
repnz
pop
aad
fwait
push
pop
cmp
cs
push
aam
repnz
in
pop
andl
cltd
test
inc
mov
movsl
mov
mov
sub
fisubl
or
or
std
scas
and
repnz
xchg
push
mov
mov
inc
in
sub
mov
adc
out
xlat
push
dec
popf
mov
push
in
fisubrl
arpl
clc
push
imul
push
sbb
push
loop
xor
sbb
ret
and
fsubs
es
cmp
lret
hlt
shlb
cli
outsl
or
mov
and
idivl
mov
movb
adc
out
in
inc
sbb
in
jg
mov
addr16
xchg
dec
push
ja
stos
arpl
pop
cmp
add
mov
push
out
xor
popa
add
lcall
add
and
mov
and
mov
cs
lret
stos
movl
lret
push
add
js
mov
mov
or
leave
push
rcr
jno
add
aam
dec
sub
dec
and
enter
dec
repnz
repz
adc
dec
xchg
gs
cwtl
pop
loopne
test
or
out
and
test
lea
out
sbb
mov
mov
nop
fisttpll
jb
inc
xchg
iret
jbe
lock
and
psubd
cmp
das
addr16
nop
movsb
xchg
sbb
xor
lret
mov
dec
jle
cwtl
pop
and
sub
push
jo
into
jno
mov
pop
mov
pushf
mov
call
ds
test
mov
arpl
cmpsl
into
mov
xchg
fld
add
jg
popa
outsl
jb
mov
xchg
repz
mov
lret
in
sbb
push
push
movsl
les
sub
fdiv
sti
es
sub
dec
xchg
icebp
pusha
jl
and
mov
sbb
nop
adc
mov
dec
mov
cltd
jg
push
jmp
sbb
mov
push
sbb
mov
push
into
in
mov
scas
mov
ret
mov
xchg
mov
ds
repz
inc
mov
ds
cmpsb
push
mov
in
inc
xor
pavgb
cmp
imul
lcall
cmpsb
bound
add
xchg
dec
ror
in
jbe
subb
iret
jge
dec
fdivr
stc
lret
xchg
pop
orb
jne
pop
mov
cmp
push
pop
sbb
sbb
es
aad
xor
inc
xchg
dec
popa
movsb
stos
sbb
aaa
mov
jg
cs
imull
inc
lret
ljmp
inc
lcall
xchg
loope
cs
mov
dec
pop
dec
insl
dec
out
sahf
and
sub
loop
xor
movsl
pop
inc
shrl
dec
pop
mov
imul
in
sub
jb
pushf
cmp
mov
cmp
outsb
xlat
ret
mov
dec
and
call
add
cld
lods
or
cmc
inc
es
mov
xchg
iret
pop
jne
or
popa
jle
sbbl
mov
push
mov
std
inc
add
cmp
clc
xlat
dec
adc
mov
cltd
jl
das
mov
inc
cmc
out
inc
pop
ljmp
push
fcoms
mov
test
add
adc
dec
outsl
xor
in
inc
test
lods
lahf
push
in
mov
test
mov
adc
test
movsl
adc
shll
stos
pop
cmpsl
add
imul
scas
in
je
in
cwtl
and
jns
mov
loop
inc
dec
lcall
adc
out
push
and
xor
push
dec
hlt
je
call
cmpsb
cwtl
and
ret
sahf
inc
popf
jmp
adc
pop
xor
out
stc
push
mov
pop
xlat
mov
call
repnz
push
xchg
mov
dec
ret
stos
pop
xchg
dec
dec
push
cmc
inc
add
out
or
adc
and
popf
mov
into
ficomps
cld
lahf
outsl
ja
and
push
repz
jb
daa
nop
cmp
loope
push
loop
test
pop
push
or
aam
test
shrb
xlat
pop
mov
push
and
sub
call
adc
sub
mov
icebp
push
mov
cld
lods
xor
aaa
push
divl
add
call
pop
mov
mov
stos
lret
out
ret
repz
jecxz
xor
mov
cmp
frstor
lcall
lahf
cli
jmp
out
mov
mov
mov
movsl
lret
fcompl
sub
loop
push
popa
or
aam
cmp
lea
dec
jno
test
mov
lahf
cmp
leave
xchg
cmpsl
dec
iret
cmp
xchg
dec
lods
cmpsl
js
loopne
fs
xchg
test
cmp
test
xchg
cwtl
jl
sbb
lods
std
or
dec
or
mov
fildll
out
mov
sub
push
cmpsb
adc
std
sub
inc
scas
add
pop
sahf
orb
ret
cmp
cmp
inc
push
xchg
movsb
mov
clc
jp
leave
push
inc
mov
es
push
jns
mov
inc
sahf
dec
adc
add
stos
nop
das
js
pop
cmpsl
push
jne
mulb
pop
call
sti
cmp
mov
mov
sub
out
xor
movsb
fdivl
xor
jbe
cli
cmp
clc
test
orl
mov
mov
fisubl
mov
mov
xchg
cmp
push
jnp
fs
sarl
xor
test
xchg
fsubl
ja
ds
xchg
xchg
dec
or
sub
cmpsl
je
out
xchg
xchg
and
rcl
rcl
cwtl
add
pop
les
mov
stos
inc
xor
pop
outsb
xor
add
and
dec
ds
stos
test
mov
mov
cmp
pusha
out
push
pop
dec
cwtl
xor
dec
add
loop
test
xchg
cmp
add
jb
bound
hlt
psrad
push
inc
push
scas
sub
popf
js
jge
inc
fwait
sbb
daa
lret
mov
repz
or
push
lret
stc
mov
or
or
sbb
push
test
jae
cmpsl
hlt
sahf
cmc
aad
repz
fdivrl
and
sub
adc
inc
and
shl
mov
and
adc
xchg
jg
cmp
pushf
fisubs
xor
mov
jno
pop
sub
cmc
imulb
mov
test
and
pop
dec
push
or
pop
cmp
sti
jmp
add
xchg
popf
pop
jnp
add
adc
xor
xchg
mov
adc
stc
or
jo
dec
and
or
sbb
movsb
clc
loopne
lret
ret
out
test
jno
mov
cmpsl
add
inc
jmp
stc
add
xchg
into
xchg
call
xor
mov
leave
loope
loopne
mov
jne
mov
ljmp
in
cmp
pop
push
lcall
and
jg
fidivrs
add
loop
shr
mov
mov
jle
gs
movsb
dec
xor
cmp
in
imul
clc
loop
sub
lea
andl
dec
adc
nop
xor
push
out
outsb
fcoms
flds
add
js
fnstcw
cmpsb
add
scas
icebp
and
mov
nop
xchg
mov
cmp
sbb
mov
mov
push
das
pop
loope
lret
sub
stos
push
mov
push
daa
xchg
pop
lcall
xchg
or
pop
icebp
clc
cmp
nop
sbb
cmp
roll
cltd
mov
mov
jmp
xor
pop
lret
dec
xchg
or
fisubl
mov
outsl
jo
mov
leave
mov
mov
or
movb
jge
call
jae
add
cmp
sbb
pop
outsl
adc
imul
xchg
pop
mov
mov
aad
xor
push
lcall
pop
mov
xor
psubb
push
add
mov
mov
xchg
test
ljmp
rorb
xlat
dec
wrmsr
push
dec
lret
aam
mov
fbstp
mov
lock
fadds
lahf
aam
out
inc
test
push
pop
mov
mov
and
jno
fwait
outsb
pop
adc
adc
push
lea
push
and
and
push
inc
shlb
dec
pop
inc
add
hlt
jmp
ss
pusha
push
cltd
jecxz
lret
or
xor
out
sub
je
jl
xchg
and
enter
rcll
mov
and
scas
dec
ror
mov
sbb
mov
xchg
mov
call
add
mov
pop
shlb
outsb
sti
jbe
and
leave
dec
sbb
dec
or
jl
nop
rolb
ds
lret
in
sahf
mov
xor
jns
mov
jle
adc
push
xchg
cmpb
push
jle
or
pop
or
clc
repz
push
adc
inc
orl
sbb
lret
loope
pop
fxch
js
in
add
out
sahf
outsl
test
mov
cli
push
aaa
lods
add
les
flds
lret
xlat
into
je
stos
and
mov
sbb
out
cmp
xlat
fmul
push
pop
das
mov
add
insb
dec
scas
sets
sti
arpl
in
je
xchg
rcr
lret
xlat
sub
into
into
fwait
jl
repnz
or
rcrb
ss
xor
jge
movsb
imul
lret
aad
mov
arpl
outsl
cld
repz
fstpt
data16
xor
das
clc
out
lods
xchg
sub
pop
test
sti
jnp
bound
in
sbb
fistps
mov
dec
ja
fldenv
mov
add
rcrl
mov
mov
cmp
into
dec
or
adc
fcmove
stos
dec
repz
and
popa
outsb
xchg
fmul
jo
das
push
imulb
cmp
add
xor
sub
adc
push
cmc
cmpsl
sbb
sub
sbb
loope
push
rcpps
cli
rorb
inc
into
stos
fistpll
and
sbb
pop
adc
std
negl
adc
xchg
fisubl
and
pop
fcoml
je
dec
mov
jno
les
jmp
fiaddl
or
lods
jb
or
sbb
pop
pusha
out
push
pushf
push
jg
sub
sti
lods
or
push
lcall
loop
imul
stos
sub
cmp
jecxz
xor
leave
mov
lahf
movsl
and
fcmovb
aas
repz
pop
out
mov
cmc
mov
mov
sub
add
xor
push
pop
or
insl
je
dec
jne
adcb
popa
sub
jle
adc
mov
xchg
pushf
andb
in
xlat
xor
inc
lods
dec
jge
mov
xor
pop
sbbb
scas
mov
popf
fs
cmp
xor
cmp
lock
cli
scas
arpl
cltd
adc
lcall
mov
or
push
pop
pop
popl
jnp
xchg
jo
loopne
js
test
jnp
add
sbb
push
pushf
adc
jno
pop
lahf
pop
push
sbb
dec
cmpsl
mov
je
fists
stos
add
fcomi
lea
loop
test
jns
ss
adc
push
int3
daa
int
xchg
sti
pop
fxch
inc
dec
movsb
cmp
fldenv
cmpb
or
dec
addr16
sbbb
lds
fsubrs
cmpsl
add
lahf
inc
pop
loop
rolb
and
xchg
dec
or
push
cmp
cmp
iret
xchg
les
idivl
jmp
repz
cmp
xchg
jno
dec
lahf
lds
lret
or
adc
lds
lock
adc
arpl
rcrl
mov
loopne
mov
mov
loope
inc
sub
arpl
and
aad
scas
jecxz
mov
mov
mov
add
lahf
test
pop
xor
and
fiadds
xor
xchg
mov
mov
fs
sbbl
xor
add
aas
push
lahf
sub
into
repz
insl
jle
dec
sub
jnp
cli
pushf
xor
mov
imul
insb
pusha
dec
leave
js
sbbl
loopne
cmp
gs
mov
pop
scas
jecxz
fwait
push
add
push
xor
add
mov
pushf
loope
les
stos
and
or
mov
lret
mov
movsl
aaa
inc
xor
lahf
loop
jge
out
mov
data16
xchg
cwtl
imul
addr16
movsl
push
stos
or
add
repnz
mov
mov
repz
lret
sbb
lret
push
xor
mov
js
xchg
sbb
mov
jno
lcall
jb
sub
shr
pop
adc
push
test
mov
cmp
das
adc
mov
sub
enter
jle
or
imul
sbb
lret
sbb
roll
dec
push
pop
pop
loopne
add
sbb
iret
outsl
nop
ja
adc
inc
sbb
push
mov
xor
cli
push
std
jle
mov
movsb
pop
dec
push
loop
lods
add
xchg
scas
dec
xor
test
dec
rcl
mov
outsb
pushf
rclb
in
push
mov
mov
mov
adc
xchg
xchg
scas
xor
mov
or
push
xchg
inc
rcrl
sbb
lea
fsubr
xor
jmp
mov
xor
sub
roll
shl
push
mov
push
out
cs
movsl
aaa
pop
in
fwait
and
or
jmp
pop
xchg
xchg
mov
lock
pop
je
lods
arpl
sbb
jecxz
adc
push
xchg
out
sub
inc
repnz
mov
push
pop
stos
cmpsl
xor
insb
xchg
cmpsl
repz
inc
ficoms
add
push
pop
dec
mov
insl
jp
push
push
and
cmp
fisubs
xchg
sar
into
hlt
loope
dec
fsubl
push
lods
pop
cs
inc
in
test
loopne
xchg
add
inc
cmpsl
mov
cmp
enter
ds
aaa
sarb
xchg
ds
imul
jle
call
cmp
imul
fdiv
cmp
add
js
mov
push
inc
sbb
outsb
orb
sub
arpl
jecxz
pop
dec
jecxz
push
jne
mov
cli
dec
adc
add
stos
ror
cmpsl
sub
arpl
jb
xchg
pop
enter
or
stos
jge
cmp
fbstp
xor
add
lock
mov
xchg
imul
mov
xchg
bound
adc
daa
push
jmp
jne
adcl
loopne
sbb
and
add
and
out
fwait
imul
in
add
dec
xchg
test
xchg
jmp
ja
je
ret
dec
xor
jp
adc
mov
xor
dec
jb
mov
adc
insl
jbe
xchg
cld
mov
push
push
mov
imul
and
clc
xchg
or
cmpsl
aam
call
iret
hlt
push
fadds
movsl
das
stos
mov
xor
sbb
call
mov
cmp
or
fsub
mov
sbb
xor
enter
and
cmpsl
dec
pop
andb
mov
std
sub
aaa
jle
cmpl
mov
add
push
call
mov
or
cmpsb
sti
mov
push
xor
lret
enter
push
test
in
fsub
es
adc
xchg
inc
dec
mov
ret
aaa
pop
aam
adc
jecxz
and
imul
lret
test
jb
je
sbb
fmull
mov
mov
daa
bound
or
and
popa
or
mov
mov
fidivrl
jae
push
movsb
not
mov
retw
popa
jmp
outsb
cli
pop
mov
jns
jo
xchg
mov
push
fwait
mov
pop
repnz
and
test
addr16
in
in
xor
push
sub
cmpb
dec
and
mov
das
adc
test
mov
xchg
jo
shll
push
push
sahf
and
clc
shll
sbb
push
outsl
mov
fiadds
sbb
sub
daa
sti
xor
mov
and
jg
in
mov
dec
push
xchg
jno
mov
arpl
nop
and
nop
push
mov
dec
das
loope
pop
pop
sub
insb
cwtl
xchg
ret
push
sbb
mov
lock
lret
aam
outsb
cmc
out
fs
loopne
sub
xchg
into
xchg
pop
push
jecxz
adc
adc
pop
das
sub
and
adc
mov
enter
add
call
fidivl
sub
iret
in
xchg
and
outsl
insl
xchg
aam
imul
or
vpcmpgtd
inc
roll
call
xchg
push
cmp
jmp
mov
inc
mov
sbb
mov
pop
xchg
push
pop
dec
into
in
movsb
add
adc
dec
mov
inc
jae
pop
fstps
inc
jne
stc
arpl
or
mov
jle
sbb
dec
push
inc
push
xor
xchg
stc
sbb
insl
add
cmc
push
loopne
lahf
pushf
cltd
cmpsl
loope
push
adc
fcoms
int
dec
movsb
dec
fcmovu
and
mov
test
pop
loopne
nop
mov
repz
shll
add
mov
dec
lods
pop
aad
pop
and
shlb
inc
sub
mov
jnp
mov
and
cmpl
scas
int
inc
addb
pop
enter
cmp
pop
lods
cmp
aad
iret
jmp
jo
and
push
nop
out
cmp
pop
push
xchg
jp
jb
arpl
push
popa
ss
or
push
mov
mov
imul
fmul
mov
xor
movsb
les
xor
aad
lock
xchg
ret
into
loope
add
inc
lcall
xchg
dec
movsl
inc
lds
and
orb
jge
cmpsb
push
or
mov
adc
sub
mov
pop
sbb
pop
les
out
pusha
popf
lea
cmpb
into
xchg
jmp
loope
mov
add
popl
jge
cmpb
loope
outsl
pop
faddl
mov
in
rcll
jle
loope
jno
dec
add
adc
jo
mov
sub
inc
or
idiv
sbb
cmp
into
ds
in
leave
pusha
jno
imul
sub
push
jg
cmpl
aad
add
adc
mov
imul
in
jl
test
mov
pop
add
out
outsb
gs
cltd
and
pop
cmp
mov
test
or
xchg
lret
add
mov
cwtl
cmp
repz
arpl
stc
adc
pop
sbb
lret
bound
test
in
or
int
clc
das
out
xorb
jge
test
loopne
nop
lods
sub
lea
xor
mov
inc
mov
jae
daa
aad
adc
call
mov
test
mov
cs
sbb
mov
mov
pop
icebp
and
sbb
mov
test
mov
xor
dec
xor
or
bound
lock
icebp
pop
mov
add
hlt
mov
mov
adc
or
in
aad
fcomip
push
es
and
jo
sub
mov
pusha
push
and
arpl
push
stc
andb
iret
add
in
aad
cmp
sbb
inc
inc
and
xchg
shrl
adcb
push
push
jge
daa
je
cmpsl
into
aam
aad
rcrb
aas
test
dec
mov
mov
or
sbb
and
dec
push
je
sti
test
mov
in
out
movsl
in
aad
xchg
mov
jbe
push
inc
xor
movsb
pop
subl
xlat
out
shrb
cmp
leave
adcb
not
sbb
icebp
mov
mov
jp
jno
mov
cwtl
aad
jae
jbe
mov
gs
xor
insl
jo
mov
sub
mov
sub
call
mov
lea
push
dec
fisubrl
shl
xor
fstpl
adc
or
and
loop
js
inc
and
cmp
push
xor
cmpl
mov
and
sahf
outsb
in
cpuid
das
jae
and
lods
cmc
xor
jle
jge
adc
lock
pushf
xchg
xchg
les
jecxz
adc
lods
outsl
rclb
ljmp
pop
dec
cwtl
hlt
mov
inc
xor
lods
xchg
jbe
sbb
lock
xchg
cmpsl
push
enter
sub
mov
out
int3
rcll
jae
rcll
cld
repnz
outsb
repnz
adc
loop
sub
test
sti
neg
lret
cli
or
push
repnz
xchg
mov
pop
fildll
mov
xor
xchg
les
jmp
and
dec
mov
fsubs
insb
lods
callw
fwait
icebp
fisubrs
jae
fcomp
sub
pop
aaa
add
sbb
jg
sahf
mov
xorl
cmp
pop
sbb
jecxz
add
jae
in
in
mov
out
lods
and
sub
lahf
cmc
movsb
stc
add
sub
xor
pushf
fcoml
ja
jns
repnz
and
adc
and
addr16
sahf
inc
pop
mov
into
push
ret
lods
nop
dec
arpl
sbb
int3
iret
out
xchg
mov
jne
dec
xchg
xchg
imul
mov
out
push
repnz
jnp
popf
imul
movl
shll
mov
and
nop
pop
and
jo
icebp
add
sub
jne
inc
mov
sub
jno
push
mov
fisttps
ds
fldz
into
dec
add
lret
inc
inc
icebp
std
pop
lods
xor
imul
cltd
das
add
outsb
ss
pop
and
test
dec
inc
popa
or
arpl
xchg
fistpl
mov
stos
mov
loop
sbb
into
mov
stc
test
inc
cmp
xchg
mov
inc
sbb
mov
ficoml
in
cld
mov
mov
mov
fs
push
xor
ljmp
push
cmp
dec
dec
jnp
test
ljmp
fbstp
sub
in
adc
push
dec
fcmovb
jmp
in
inc
push
cmpsb
add
int
add
loop
scas
fistpll
pop
sbb
mov
cmp
lcall
das
mov
mov
mov
adc
test
xor
popa
adc
int3
cmp
icebp
and
sbbl
js
pop
ds
jg
or
push
or
das
or
inc
jg
xchg
add
xchg
cmpsb
out
push
pop
mov
cld
mov
mov
adc
into
popf
ret
stc
dec
fidivs
sahf
xlat
xchg
push
jb
sbb
xchg
xchg
lock
lret
pop
mov
ret
pusha
mov
mov
xchg
loopne
push
push
pushf
xor
in
js
int
jb
xlat
push
into
or
flds
fstpl
mov
call
xor
pop
jl
sar
cmp
lcall
shr
fs
add
lods
push
ds
ss
incb
cmpb
push
sbb
inc
jbe
mov
std
bound
mov
into
sbb
adc
pop
mov
popa
mov
inc
insb
test
sub
cmpsl
test
les
adc
les
xchg
aaa
sbb
test
sbb
cmp
mov
out
push
sbb
cmp
mov
jo
cmp
pop
pop
cltd
add
fcompl
sbb
rcr
mov
sti
lea
into
insb
pop
dec
adc
ds
adc
or
sbb
or
mov
pop
daa
xor
xor
mov
rcrl
mov
xchg
test
cltd
push
out
inc
sub
mov
imul
mov
sub
es
test
fcomps
jecxz
sbb
xchg
popf
cmc
je
shrl
add
dec
outsl
rcr
jg
xchg
test
rcl
sub
jp
outsb
aam
push
jbe
jbe
push
jbe
mov
fistps
sub
orb
cmpsb
mov
add
adc
or
cmpsb
es
shll
pop
stc
aaa
sbbb
mov
xor
cwtl
xor
xor
sbb
push
xchg
push
xor
xor
dec
int
cmp
xchg
das
sub
jmp
out
pop
ja
fcoms
sub
and
frndint
jmp
ljmp
xor
jecxz
lahf
cmp
lds
jp
pop
js
adc
gs
pop
pushf
leave
jno
push
push
stos
cmp
iret
lea
xor
jl
ficompl
mov
mov
dec
dec
decb
les
scas
lock
sub
dec
mov
cltd
dec
addr16
pop
adc
mov
mov
xorb
cs
aas
idivl
push
add
inc
mov
out
clc
xchg
dec
jbe
jecxz
xchg
mov
adc
mov
xchg
cwtl
ficomps
shlb
xor
inc
mov
push
dec
pop
add
ss
addr16
push
ret
pusha
mov
add
sbb
in
jg
cmp
mov
pop
push
dec
inc
outsb
out
out
dec
cmp
dec
push
mov
outsl
lret
sbb
in
jno
xchg
arpl
cvttps2pi
orl
jnp
leave
mov
sbb
loope,pt
mov
movsl
jnp
testb
stos
std
adc
pusha
jmp
xchg
mov
rolb
add
psubusw
mov
ja
pop
repnz
jne
es
nop
mov
xchg
call
add
push
pop
add
jb
and
gs
xchg
ljmp
popf
ja
push
popa
pop
addb
rolb
jo
xchg
mov
add
inc
scas
lock
adc
je
mov
mov
mov
aas
inc
push
insl
adc
icebp
push
sub
jmp
jl
lret
scas
test
cmpsl
rolb
mov
shl
lret
aam
add
shrl
cwtl
inc
pop
mov
inc
xchg
movsb
cmp
insb
enter
into
pop
outsb
lock
mov
imul
das
xchg
andb
jbe
insb
sbb
fisttpll
mov
mov
loopne
sbb
ret
inc
pusha
mov
fidivrs
pop
punpckhbw
jmp
stos
lock
lcall
aas
sub
fmul
mov
adc
cmp
xchg
loop
dec
mov
loope
jmp
fwait
or
jns
pop
test
decb
test
adc
inc
mov
mov
daa
mov
popf
insb
outsb
in
dec
mov
push
int3
arpl
gs
arpl
arpl
ficomps
cmp
cli
jp
cmp
bound
xlat
mov
loopne
mov
jl
mov
int
pushf
ret
pop
dec
push
setns
pop
cltd
loope
movsl
jno
and
lret
adc
ss
imul
xchg
aam
xchg
imul
leave
mov
outsb
sub
fdivs
dec
mov
xchg
mov
cwtl
sub
je
int
or
cli
cli
push
addb
dec
xchg
fisttpll
sub
nop
jmp
xchg
jb
mov
sbb
push
cmp
inc
dec
dec
jp
pop
mov
cld
sub
xchg
mov
sub
cmp
pop
push
add
jmp
sbb
or
dec
cmp
dec
insb
ret
addr16
paddsw
test
jl
imul
sbb
fucomip
mov
inc
jg
cli
pop
fs
jge
fdivs
inc
mov
sbb
lock
mov
outsl
dec
jl
sub
xchg
shll
aaa
xor
stc
testl
cmovle
or
sbb
jmp
sub
jns
hlt
mov
cmp
lea
insb
push
sbb
scas
cmp
cmpsb
xlat
mov
inc
lods
adc
dec
pop
xor
adc
cmp
jo
pop
pop
mov
dec
sbb
shlb
mov
or
rclb
cmp
cld
or
in
test
cmpsb
pop
push
aas
mov
mov
push
dec
mov
xchg
pop
pop
shlb
mov
dec
sbb
mov
insl
sbb
or
fdiv
xor
mov
out
out
pushf
add
and
push
fidivrl
icebp
jmp
dec
mov
mov
mov
jmp
adc
inc
mov
or
mov
dec
pop
inc
and
aam
xchg
lock
loop
add
ss
jl
fucom
jb
mov
xchg
inc
pushf
loope
xchg
mov
xchg
dec
mov
adc
push
inc
dec
imul
dec
or
stos
ds
sub
clc
add
repz
scas
call
roll
push
ja
pop
xchg
daa
lcall
je
xor
sub
mulb
mov
adc
jns
xor
mov
jecxz
mov
inc
ljmp
sub
pop
jno
std
sahf
mov
and
or
cltd
cld
insb
je
xorb
sub
mov
testl
and
pop
jne
ja
jg
mov
mov
ljmp
add
push
lods
outsb
cld
enter
jmp
or
into
xchg
mov
outsb
inc
dec
pop
sarl
js
lret
imul
aas
pop
push
jo
cmp
lea
xchg
mov
add
xor
or
push
mov
cmc
dec
rcrl
adc
outsl
orb
ret
movsb
mov
out
or
bound
and
imul
push
push
xor
repz
jb
fdivs
push
shlb
jp
dec
call
gs
inc
scas
inc
stos
mov
inc
adc
data16
pop
sbb
xchg
js
iret
es
cmp
mov
jns
lods
lods
movl
rorl
icebp
outsl
insb
addr16
cwtl
and
outsl
out
iret
fmuls
divb
lret
lock
or
out
aad
inc
pushf
adcl
int
push
or
sub
mov
lret
out
push
cli
mov
mov
popa
test
es
scas
adc
xor
adc
pop
dec
push
mov
mov
lds
mov
or
inc
scas
mov
xchg
lods
pop
stos
adc
in
mov
cmc
nop
movsl
cwtl
rorl
in
test
lea
lods
rclb
js
mov
lds
stc
fisttpll
lahf
ret
mov
insl
mov
pop
inc
jno
xlat
pop
sbb
int
mov
xor
dec
addr16
dec
add
rcrl
mov
les
xchg
adc
lret
repz
mov
pop
and
mov
test
pop
mov
lods
pop
repz
mov
dec
pushf
sbb
popa
arpl
mov
fildl
or
pusha
jnp
in
sbb
sub
ret
or
mov
mov
filds
xlat
pop
or
xchg
dec
scas
mov
xchg
mov
sub
mov
push
push
jecxz
add
sbb
test
lcall
aam
gs
int
mov
and
add
mov
decb
popa
push
es
cmp
lds
push
dec
lcall
addr16
mov
jns
fisttps
pop
out
jne
dec
shlb
mul
test
stos
push
sbb
jg
push
sub
and
push
call
stos
test
xchg
sbb
mov
ss
mov
repz
loope
xchg
popf
mov
sti
push
push
push
aas
push
lods
daa
test
xlat
lea
icebp
leave
xchg
loope
fwait
pop
inc
pop
stos
cmp
mov
pop
xchg
lret
loope
sbb
xchg
icebp
rcll
mov
out
and
scas
mov
jge
adc
lcall
lds
xchg
fsubrs
loop
mov
test
fmuls
fdiv
cs
push
lea
push
push
mov
and
ret
adc
int3
movsb
arpl
out
xorb
mov
mov
data16
jo
push
lods
mov
in
aad
mov
jbe
and
push
sbbb
adc
lret
fs
aad
rcr
int
orl
ret
cld
clc
push
cmp
sahf
in
div
cmp
sub
xchg
insl
pop
jl
fcom
jns
inc
bound
cmp
test
mov
jae
cmp
je
cmp
inc
dec
push
mov
enter
mov
int3
aad
cmp
jle
mov
shl
out
pop
arpl
push
inc
push
js
and
or
subb
fsubl
inc
icebp
adc
flds
push
outsb
sbb
sub
mov
adc
rolb
mov
adc
push
inc
xchg
or
lock
dec
aaa
push
pusha
call
xlat
clc
and
pop
lret
rclb
jl
test
or
roll
push
add
mov
sbb
jne
xchg
jno
faddl
add
mov
cmpsb
cmp
dec
lods
dec
sbb
movsl
movb
sub
xchg
xor
fmuls
sbb
pop
in
std
sbb
lods
test
mov
push
xchg
pop
push
dec
cmp
sbb
or
sub
inc
xlat
jae
pop
jns
in
rcr
in
int3
pop
pushl
movl
test
aaa
test
pushf
rorl
adc
iret
jnp
int
adc
xor
imul
movsl
jecxz
lock
cmc
je
lahf
ss
push
inc
sbb
pop
lds
cmp
aas
jo
adc
loopne
pop
rcrl
push
clts
cwtl
adc
loop
pop
add
jg
jnp
push
jno
icebp
jecxz
std
aaa
movsl
pop
out
mov
inc
out
popa
or
sub
ret
adc
hlt
push
adc
pop
out
data16
pop
push
mov
pop
mov
add
pop
add
push
pop
and
mov
lods
add
loopne
mov
lcall
cs
cmc
inc
inc
and
mov
cwtl
mov
push
push
inc
andl
mov
insl
imul
dec
repnz
rcr
lock
mov
jg
adc
cli
ficomps
xor
inc
popa
jnp
mov
scas
xor
dec
mov
and
nop
ljmp
jb
pop
adc
loope
cmp
scas
sahf
inc
mov
hlt
add
rolb
inc
out
shrl
xchg
dec
xor
movsb
cmpsl
stc
ljmp
ja
pop
cmpsb
shlb
icebp
jg
push
or
or
out
pop
adcb
rcll
xor
jg
sub
inc
js
or
lds
lcall
mov
adc
jb
iret
or
or
shll
push
std
pop
sub
ret
adc
dec
aam
scas
dec
pusha
push
jae
mov
pop
mov
pop
pop
dec
icebp
jle
lock
pop
xchg
test
add
and
mov
mov
xchg
gs
imul
push
inc
pop
dec
jo
push
push
jnp
rcrl
mov
or
bound
and
mov
rorl
xorl
inc
outsl
add
stc
xchg
gs
push
sahf
cld
leave
mov
nop
and
ret
cmc
push
dec
mov
cmp
or
push
xor
cwtl
dec
es
aam
mov
aam
icebp
das
adc
push
addr16
cmp
clc
ss
arpl
lea
xchg
icebp
repz
ljmp
inc
or
fs
cmp
pushf
inc
lahf
mov
sub
sbb
jmp
std
mov
push
mov
push
js
pop
movsb
add
xlat
data16
pop
inc
cmpsl
dec
aaa
les
cmovl
addr16
aas
nop
sarl
fs
lods
xchg
test
sbb
xchg
out
fldl
mov
outsb
sarl
xchg
loope
pop
repnz
div
dec
ljmp
leave
scas
pushf
ret
fucomi
aam
lret
dec
test
mov
mov
js
xchg
inc
or
dec
call
mov
es
cmc
pop
cmc
iret
dec
mov
and
push
cltd
jae
pop
fldt
xor
idivb
pop
inc
sub
iret
es
inc
scas
movsb
xorl
popf
xchg
pop
xchg
and
cltd
std
in
mov
xchg
sbb
scas
rorb
pop
ja
fmul
sbb
sbbb
cld
sbb
dec
add
outsb
test
sub
stos
aaa
es
scas
out
adc
cli
mov
lcall
xor
data16
push
xor
sbb
jae
xchg
ret
std
sub
aas
mov
hlt
sub
aaa
inc
fdivrl
rcll
and
cmp
or
lcall
dec
out
incb
insb
sbb
inc
aam
and
je
mov
mov
inc
mov
pop
and
orl
das
adc
stc
mov
sbb
cli
jecxz
dec
push
push
cmp
insb
je
daa
in
xchg
jecxz
xlat
rcll
aas
loop
cltd
pop
xor
xchg
lds
or
mov
leave
dec
dec
jbe
insl
pop
stos
pop
adc
push
repnz
test
mov
in
cmc
stos
pop
enter
xchg
data16
mov
pop
aam
xor
imull
mov
pop
sbb
ljmp
xor
mov
int
add
pop
adc
mov
xchg
cmpsb
test
jmp
jbe
ror
cmp
aad
jp
clc
cmc
mov
decl
popa
pop
sub
xor
adc
ret
scas
outsb
dec
and
nop
aas
push
mov
cmp
fcoms
inc
nop
enter
sti
mul
je
dec
divl
jnp
dec
push
aad
mov
ds
mov
push
fs
into
adc
jmp
jmp
ret
jb
mov
stos
ja
xchg
push
je
adc
int3
cmp
mov
fwait
es
cmpsb
or
rorb
daa
std
dec
ljmp
repnz
insl
adc
or
lahf
mov
dec
jmp
inc
roll
inc
sahf
inc
add
sub
or
ja
pop
sub
jmp
add
and
xchg
insb
clc
ret
mov
jns
pop
adc
enter
pop
pop
jnp
mov
sub
cwtl
sbb
adc
icebp
jmp
sbb
roll
lds
sbb
mov
fadd
xor
push
push
adc
cmpsb
dec
pop
call
out
adc
xchg
iret
jecxz
stos
pop
lock
push
cmp
pop
sarb
out
stos
gs
jg
outsl
xor
ja
enter
scas
int3
insl
xchg
fs
mov
xor
insl
roll
lods
xor
mov
xor
aam
into
in
ss
sbb
sarl
xorl
xlat
sbb
add
and
movsl
lahf
pop
jne
jb
outsl
sub
mov
das
mov
scas
andb
fxch
cmc
sti
mov
fnsave
mov
mov
jns
cmp
adc
xchg
mov
jp
pushf
rorl
sub
popf
and
pop
sti
xorl
rcrb
cmpsl
filds
push
jns
aam
pop
bound
lret
ja
mov
lret
out
adc
sub
out
pop
and
clc
lods
sbb
mov
int3
or
aad
lock
and
or
sbb
sbb
lahf
idiv
inc
outsl
fisubs
in
imul
sbb
push
lods
scas
or
dec
jne
jg
lds
lcall
int3
loop
popa
pop
outsl
jge
mov
ljmp
push
and
and
shll
shll
xchg
popa
jp
mov
xlat
push
ja
psadbw
inc
pop
xor
mov
push
mov
hlt
mov
int
cld
adc
mov
in
pop
insb
cld
das
hlt
dec
adc
cmpsb
out
jo
ja
clc
arpl
outsb
sbb
js
jp
cld
mov
push
fwait
repnz
das
fmull
mov
iret
mov
mov
daa
es
stc
mov
or
pop
rorb
adc
sub
dec
jo
lds
and
sbb
test
mov
roll
push
mov
lret
push
nop
mov
sub
add
in
push
mov
pop
add
stc
and
loopne
and
or
je
add
pushf
mov
jno
lods
push
in
cmp
cli
scas
cli
arpl
repz
outsb
iret
int
cmp
xchg
sbb
iret
push
inc
cmp
inc
lods
sahf
and
in
ds
or
imul
mov
add
ficoms
sub
popf
push
fwait
xchg
pop
jecxz
xor
push
test
adc
jle
mov
xor
cmc
jmp
lods
pop
add
inc
dec
popa
or
pop
test
in
add
ret
scas
rcrb
lods
push
push
push
fldenv
jg
lea
decb
imul
hlt
sub
aas
add
fcmovne
inc
das
sbbl
inc
ffreep
outsl
xchg
xor
xchg
repnz
pop
push
xor
loope
std
adc
dec
jmp
stos
cwtl
push
adc
bnd
fcmovb
mov
jb
jmp
imul
orl
pop
je
mov
mov
addr16
aas
xchg
fs
xchg
mov
mov
pop
mov
xor
xchg
and
sub
movsb
xlat
inc
out
adc
movsl
sahf
mov
adc
mov
leave
stos
in
pop
in
test
cmp
push
pop
aaa
jo
mov
bound
stos
dec
dec
jge
aas
adc
pop
loope
push
scas
jo
or
jae
mov
mov
lds
lahf
sub
les
add
sub
stos
cmpsl
and
add
sbb
push
test
mov
in
lcall
dec
stos
jle
mov
imul
dec
ss
push
mov
popa
dec
cltd
pop
or
js
js
adc
imul
in
aam
data16
or
je
scas
and
lahf
mov
rcll
push
sarl
and
jge
repnz
std
dec
aaa
sub
lahf
sbb
aaa
push
movsl
into
cmp
xor
push
adc
and
adc
ljmp
ljmp
mov
xchg
sbb
cmpsl
nop
mov
mov
push
mov
sub
sub
inc
jp
ret
cmp
and
sub
jle
cmp
xchg
sahf
test
ror
dec
or
loop
sub
mov
push
mov
jbe
aaa
data16
es
mov
xchg
or
mov
pop
and
cwtl
test
dec
sub
rorb
inc
xor
add
scas
jle
pop
cmp
imul
mov
push
arpl
sub
add
adcb
in
hlt
sub
add
add
sub
mov
push
inc
out
mov
pop
gs
adc
mov
or
push
cmpsl
test
addr16
insl
mov
ret
stos
pop
lcall
adc
lock
cmp
scas
ljmp
leave
mov
daa
mov
jge
lahf
mov
mulb
inc
ret
enter
mov
daa
xchg
std
inc
pop
das
stos
push
insl
lcall
push
jle
mov
add
xor
xor
cltd
sbbb
inc
test
test
sbb
add
or
ja
fnstsw
aam
sub
sbb
add
push
mov
clc
push
nop
int3
test
in
jo
neg
lcall
add
sarl
leave
and
jl
popf
push
notl
sub
pop
or
cmc
lret
adc
sahf
jne
lret
jle
and
push
and
and
dec
cs
push
insl
mov
lahf
jecxz
or
movsb
add
mov
or
int
ja
adc
add
and
pop
sub
test
std
xor
aas
outsb
in
xlat
mov
mov
test
shlb
sbb
and
rcrb
leave
sub
xor
das
insl
mov
sub
ror
stos
out
or
lods
shll
dec
sbb
mov
or
popa
mov
clc
jne
insb
sbb
sub
cltd
in
add
cmc
or
and
adc
rclb
or
dec
cmp
mov
sub
into
into
ds
jg
adc
mov
xor
jmp
push
inc
fdivrl
pop
lds
or
loopne
clc
mov
popf
test
or
mov
lret
pusha
mov
inc
push
dec
loope
mov
adc
dec
pusha
xor
pop
pop
dec
lds
fisttps
mov
xor
jle,pn
xor
rcrb
popf
lods
pop
jno
and
lret
and
xchg
sbb
jle
or
ss
es
xchg
jge
pop
test
loope
test
loopne
popa
mov
lods
aaa
sti
cwtl
xchg
lods
mov
pushl
jle
mov
fisubrs
mov
push
vpacksswb
sbb
stc
mov
inc
sbb
sub
call
mov
sbb
das
rorb
cmpsb
aas
inc
and
ljmp
mov
imul
xchg
clc
repnz
add
sub
and
sub
and
nop
fs
cmpsb
outsb
xchg
arpl
mov
push
in
xchg
xchg
arpl
jecxz
add
jmp
add
test
xchg
or
sub
pand
pop
mov
adcb
mov
jbe
pop
cmp
arpl
inc
push
cwtl
mov
rcr
mov
nop
cs
adc
push
inc
popa
data16
mov
rorb
mov
mov
outsl
inc
mov
dec
inc
lret
inc
ficoms
out
cmp
jno
mov
mov
addl
loope
and
lea
pop
out
lret
outsb
inc
mov
fcoml
sbb
sti
push
pushl
shll
out
and
mov
jbe
andl
repnz
sub
ja
movsb
push
sbb
cli
push
sub
mov
test
mov
sti
or
popf
mov
xchg
cmc
cwtl
in
jo
daa
xor
jle
iret
and
pop
push
pop
mov
out
scas
add
jge
in
push
mov
adc
mov
faddl
cmp
je
sahf
mov
enter
movsb
fwait
cmpsb
xor
pop
roll
out
push
jl
jge
lods
sub
rolb
popf
xor
sarl
pusha
fimull
mov
movsb
dec
xor
mov
inc
xchg
lahf
pop
cld
mov
into
pop
loope
xchg
pop
nop
shll
shl
jno
dec
cwtl
cld
fstpt
gs
jp
test
lret
scas
test
scas
sbb
ss
outsl
adc
jp
mov
cmp
jbe
push
mov
addl
aaa
dec
fadd
stos
mov
cmpsb
push
test
ret
sub
movsb
mov
cmpsl
xchg
and
mov
dec
xor
mov
mov
adc
xlat
cwtl
stos
std
xlat
mov
mov
iret
mov
sub
xchg
stc
ljmp
and
xchg
sub
mov
push
push
or
movl
lock
push
dec
out
push
and
sub
andb
mov
cmp
gs
jg
outsb
inc
jmp
out
mov
shrl
push
jnp
cwtl
mov
arpl
pop
inc
loope,pt
imul
loop
test
pop
mov
xchg
in
shlb
out
es
jecxz
sub
icebp
xchg
mov
lock
imulb
test
cmpsl
push
dec
hlt
xor
and
dec
jge
iret
pop
int
cmp
sub
outsb
mov
xchg
pop
clc
jae
scas
bound
dec
or
jo
jnp
inc
sub
mov
jp
mov
dec
lods
enter
pop
fs
pop
jmp
and
adc
shll
nop
movsw
es
aam
insl
fs
loope
push
push
movsb
lret
fadds
shl
insb
or
push
repz
jns
outsb
mov
cmp
dec
sti
rcrb
push
and
pushf
push
unpckhps
mov
sub
or
add
mov
sbb
push
and
iret
push
sub
ja
adc
mov
ret
lahf
arpl
shrl
and
mov
jl
insl
add
push
pushf
arpl
test
add
push
das
stos
jg
cmp
inc
int
stos
cmp
lods
sbb
lods
aas
insb
ss
sbb
xor
jno
push
fsub
jmp
mov
inc
jp
push
jp
adc
leave
jno
test
cmpb
iret
xchg
dec
push
ja
out
add
out
and
pop
mov
push
mov
pop
and
pusha
mov
jns
pop
fsubrp
mov
jb
inc
jl
cmp
and
sbb
loop
push
or
sbb
push
fwait
cmp
mov
push
andl
mov
int
xor
pop
xchg
push
jecxz
dec
pop
sbb
leave
xchg
xor
addr16
cmp
mov
pop
mov
iret
cmp
int3
jp
and
xchg
sbb
xchg
jl
xchg
shll
jg
popa
out
jmp
fwait
aad
loop
push
inc
mov
or
xchg
loopne
lock
out
adc
add
idiv
jbe
jge
push
add
outsb
push
stos
je
sbb
or
orb
mov
jb
sti
or
cmpsb
repz
leave
mov
push
xchg
sahf
aaa
out
jbe
mov
inc
inc
in
mov
mov
mov
sub
inc
in
mov
jecxz
jns
dec
push
ret
or
int
mov
adc
movb
mov
xor
fsubr
test
icebp
mov
loope
in
fdivp
lods
xor
jl
pop
ss
pusha
fbld
stos
add
xor
neg
addr16
ds
inc
addr16
test
adc
ret
fs
adc
scas
push
int
fadds
int3
cmp
or
repnz
or
incb
sub
mov
mov
mov
pop
subb
cld
dec
pop
or
inc
gs
data16
jae
push
lret
inc
xchg
mov
enter
je
out
adc
movsl
orl
dec
inc
pusha
mov
or
sti
xor
repnz
mov
repz
jb
sbb
push
pop
popa
lea
xchg
dec
jle
rol
and
xlat
cmp
out
sbb
inc
xchg
lods
pusha
dec
add
mov
adc
xchg
xchg
pop
das
pop
leave
jg
clc
push
xchg
mov
jle
pop
hlt
mov
pushf
je
mov
mov
dec
and
pop
lret
call
and
xor
xchg
es
notb
rorb
mov
xor
iret
jb
setbe
dec
in
jne
shr
add
pop
push
imul
xchg
rolb
repz
lcall
fisttps
sbb
out
movsl
pop
in
jmp
aam
aad
int3
ret
daa
pop
rcll
out
and
pop
cmpsb
or
and
pop
daa
mov
nop
in
nop
or
xor
leave
stos
int3
gs
push
fwait
lock
pusha
in
push
add
and
stos
pop
xchg
inc
jb
stc
jmp
and
shld
pop
aaa
xor
bound
cmp
fcmovne
mov
lods
jne
pcmpeqw
testl
jo
push
das
mov
int3
xchg
xchg
fldt
adc
mov
popf
xor
pop
pusha
or
ret
movsl
push
xor
pop
dec
mov
dec
loopne
jb
mov
or
pop
std
and
adc
fisttpl
sbbl
imull
jle
mov
aas
inc
pop
lret
lods
shrl
jle
xchg
ret
push
add
fdivr
push
mov
out
adc
inc
push
and
daa
decb
mov
sub
scas
lret
fnstsw
pop
sar
lret
sub
jmp
push
sbb
mov
adc
int3
shrb
xchg
lea
or
aas
mov
ficoml
subl
lahf
mov
loope
add
adc
mov
jb
mov
xchg
xchg
fistl
jbe
inc
mov
lods
pop
int3
insb
cmpsb
push
js
fcmovu
jb
push
pop
sbb
ss
mov
add
adc
addb
dec
jae
sbb
sahf
cli
das
add
push
sarb
imul
dec
fstpl
and
roll
out
add
cmp
jo
icebp
fs
cltd
adc
inc
fldcw
enter
push
ffreep
lahf
pop
add
pop
fmulp
outsl
jl
pop
push
sbb
in
aaa
outsl
mov
mov
pop
in
cs
xchg
push
dec
jl
jmp
lds
insl
inc
pushf
lock
pop
notb
shrb
aas
mov
sbb
ud1
add
cmp
sbb
pushf
or
cmp
stc
inc
cmp
dec
jno
je
dec
xchg
mov
jnp
lret
daa
mov
fincstp
sub
ss
add
cmp
aas
js
jg
cwtl
in
lahf
cmp
and
js
dec
sub
inc
dec
xchg
loop
mov
ret
jns
stos
mov
fscale
lcall
fcmovnbe
das
dec
push
mov
movsl
iret
cmc
outsb
pop
inc
ret
push
and
mov
push
mov
jg
into
pop
dec
mov
jl
pop
and
cmc
scas
mov
mov
bound
xchg
and
leave
xchg
sahf
or
call
xchg
sbb
clc
cmp
and
xchg
lcall
adc
mov
add
int
mov
inc
or
pop
cmp
pop
jae
push
int3
out
arpl
dec
sar
dec
lock
dec
repz
out
sbb
pushf
dec
dec
xchg
fsubrl
fstl
scas
popa
cmpsb
mov
or
pop
xchg
push
clc
cwtl
cmpb
stc
das
shrl
daa
inc
arpl
cs
test
mov
jl
iret
mov
adc
mov
lds
popa
arpl
sub
hlt
dec
lds
repz
outsl
xchg
fists
cmp
adc
inc
fdivrs
xor
dec
fld
stos
in
mov
mov
adcb
movsb
cmc
adc
test
lea
mov
or
jbe
cmp
add
xchg
jmp
sbb
xchg
sbb
out
add
nop
mov
iret
push
fstpl
xchg
xlat
mov
inc
jle
and
jae
pop
cltd
in
inc
mov
loopne
fisubrl
cs
push
sbb
adc
std
adc
jecxz
mov
aas
into
fiaddl
out
jl
pop
mov
divb
out
adc
addr16
aas
inc
les
push
fsubs
shr
jmp
das
fs
cld
cmp
push
test
in
fisubl
cmp
scas
xor
xchg
mov
sbb
js
nop
clc
cmpsl
shlb
into
cwtl
jae
or
inc
ds
mov
sahf
cmp
inc
ljmp
or
adcl
add
mov
jno
je
mov
iret
push
lcall
dec
cmpsb
pop
or
in
loopne
and
scas
xchg
adc
mov
lds
je
call
dec
stos
cld
xlat
std
push
aaa
jmp
dec
xor
loope
jae
mov
mov
pop
out
sbb
fcoms
push
jg
mov
push
mov
pop
je
lcall
fildll
outsl
scas
ljmp
inc
dec
shlb
dec
pop
loopne
jg
push
mov
aam
xor
cmp
loope
je
push
cmp
add
adc
sub
sub
nop
dec
sbb
outsl
sub
push
mov
sbb
pop
out
data16
enter
or
fcompl
mov
xlat
inc
test
or
xchg
adc
js
negl
lds
dec
cmp
and
xchg
repnz
rclb
mov
mov
dec
adc
imul
nop
addl
out
repz
shll
pop
test
cmc
mov
xor
movb
in
iret
add
in
ror
das
out
sarl
sub
jmp
mov
lahf
dec
fcomps
push
adc
mov
sub
mov
xor
adc
or
xchg
shrb
cmp
int3
sub
sbb
mov
push
cmc
pop
clc
xchg
push
insl
adc
test
sbb
add
sarl
cmp
jecxz
xchg
data16
notl
out
test
insb
jmp
jae
jne
call
int
clc
lea
fsubrl
sbb
fidivrl
filds
lahf
repz
and
cld
loopne
mov
jns
test
mov
scas
testb
je
out
repz
cmc
lds
das
into
inc
loop
dec
insl
mov
insl
sub
push
add
test
das
add
xchg
jge
sarl
push
mov
fprem
insl
inc
mov
xchg
or
pop
mov
mull
inc
mov
pop
fucomp
xchg
sbb
outsb
adc
cltd
push
or
in
sub
dec
add
lods
dec
pop
mov
jg
dec
adc
xor
outsl
mov
loop
xor
fs
cld
insb
stos
add
cld
pop
mov
sbb
std
and
ja
mov
inc
mov
out
lods
in
arpl
mov
dec
or
xchg
ljmp
mov
incl
xor
jg
mov
insl
call
xor
xchg
sbb
adcl
push
lods
mov
daa
scas
test
mov
xlat
mov
sarl
nop
cltd
sbb
popa
cs
sbb
fwait
push
das
add
adc
mov
aad
js
push
mov
scas
adc
cmp
inc
arpl
mov
cwtl
aas
nop
jle
push
mov
jg
push
pop
movsl
icebp
cld
cmp
xchg
mov
into
sub
fcmovne
inc
xlat
and
jmp
loopne
adc
or
mov
pop
jecxz
leave
cmp
es
shll
std
and
shr
adc
mov
sub
ficoms
andb
out
jb
ds
cli
xor
pop
ja
leave
sub
lea
pop
dec
or
and
adc
pop
pop
sub
cmpsb
mov
adcb
inc
and
or
dec
pop
pop
adc
mov
stos
mov
sub
xchg
push
sbb
mov
icebp
loopne
dec
pop
mov
stc
jg
fcmovnbe
push
adc
or
jns
xor
lock
inc
addr16
xor
clc
popa
jns
cs
xchg
sub
xor
xchg
mov
lods
std
add
mov
dec
push
jle
jb
mov
loope
dec
mov
xchg
pop
lock
shlb
icebp
loopne
movsl
sbb
jb
cmp
int3
xchg
mov
lods
mov
mov
rcrb
mov
scas
and
movsb
adc
imul
stos
sbb
push
inc
cmp
repnz
mov
mov
sub
stos
addl
addr16
sbb
stos
or
outsl
and
ljmp
sbb
loope
mov
lock
outsl
jl
dec
insl
sbb
pop
push
xlat
fwait
mov
decb
iret
xor
sub
push
mov
inc
inc
repnz
mov
das
dec
sbbl
inc
cmp
jp
pop
and
jle
icebp
repz
xor
mov
insl
mov
std
xchg
cmc
mov
xchg
pushf
loope
jne
aad
add
cwtl
add
sbbl
mov
xchg
push
dec
ss
lret
xor
aad
or
or
inc
mov
es
sub
dec
dec
or
add
dec
push
shlb
mov
fwait
lret
cmp
sub
inc
clc
jbe
cmp
out
cmp
xor
scas
lods
rol
aad
out
mov
push
arpl
lcall
xchg
jmp
outsb
clc
inc
test
pusha
add
mov
push
imul
arpl
push
push
pop
mov
imull
pop
out
jns
out
add
outsl
or
or
stos
nop
pop
jae
test
cs
ds
frstor
call
jl
sub
cmp
mov
dec
dec
lahf
add
mov
out
and
lahf
mov
test
pop
repnz
jnp
lds
xchg
jmp
mov
lret
push
push
cmpsb
mov
push
andl
xchg
cmp
call
jnp
in
lret
loop,pn
mov
xor
mov
mov
stos
and
int
cltd
andb
adc
sub
jo
push
or
ret
ja
cmp
sbb
inc
dec
fsts
bound
fsubl
les
shrb
hlt
xor
cmp
push
add
movsl
cmp
or
fdivs
sub
add
call
in
push
lret
cwtl
movsb
xchg
adc
dec
adc
in
ljmp
mov
push
ret
dec
hlt
mov
pop
sarl
jno
add
loop
lret
or
mov
imul
js
pop
push
fs
xchg
push
fstp
in
push
arpl
mov
add
aaa
cmc
arpl
lds
lret
pop
shrb
jmp
jle
out
mov
fiadds
pop
fs
xor
int3
arpl
inc
leave
dec
je
mov
negl
xchg
lret
dec
leave
mov
mov
jmp
daa
pop
outsl
xor
jl
sbb
jmp
jbe
add
sbbb
cmc
lcall
stos
sbb
cmp
mov
push
mul
lods
pop
fwait
lock
xlat
cmpsl
push
xchg
pop
fadds
sbb
add
xchg
mov
push
notl
jns
rcr
ret
xor
dec
addl
mov
dec
mov
mov
sub
fistl
testb
inc
push
popf
adc
out
out
and
inc
iret
inc
adc
std
arpl
xor
pop
jp
ret
pop
cmpsl
push
pop
sbb
and
loop
out
dec
and
xor
pop
outsl
mov
adc
psrad
pop
inc
enter
jb
sbb
cmpsb
fwait
xchg
jbe
sub
outsl
sub
adc
xor
dec
outsb
cmp
sbb
aaa
in
push
mov
cmp
lock
repz
fdivl
inc
repnz
not
test
push
out
pop
fwait
xchg
dec
popa
sub
ss
test
stos
jnp
jl
and
subb
out
jae
add
les
mov
loopne
sub
sbb
xchg
icebp
mov
sahf
or
cmp
test
out
icebp
mov
xorb
lea
xchg
xchg
sub
popf
inc
mov
imul
xchg
cltd
iret
add
xchg
mov
dec
sbb
and
xor
pop
fwait
sub
fwait
mov
lret
imul
aad
adc
cmpsb
negb
or
stos
fs
add
outsb
pop
enter
xchg
addl
popa
pop
jae
dec
pop
inc
vhsubpd
loopne
ds
push
sahf
inc
jmp
xchg
aad
fstpt
shrl
jmp
cli
xchg
sbb
imul
nop
enter
jmp
test
and
pusha
sti
xlat
in
inc
xchg
xchg
xor
roll
in
daa
mov
jmp
repnz
mov
mov
mov
lahf
jmp
jb
xchg
jnp
jbe
in
mov
xor
fisubs
imul
cs
xchg
xchg
push
imul
cli
aam
imul
in
xchg
out
adc
aad
push
mov
sarl
aam
repnz
movsl
mov
call
xchg
lcall
cmpl
xor
repz
fisttps
ret
aam
cwtl
jo
fisubs
xchg
dec
fildll
in
mov
mov
jno
int3
pop
enter
dec
pop
aas
xchg
popl
mov
mov
stos
jmp
cmp
ss
ja
ret
inc
cwtl
dec
mov
xor
push
sub
inc
add
fistl
std
je
js
mov
clc
mov
lahf
mov
call
data16
push
push
loope
dec
jp
scas
mov
inc
mov
or
in
xchg
insb
insl
loop
or
and
cmp
sbbb
mov
or
push
mov
xchg
cmp
mov
aam
xchg
dec
push
xor
aas
jbe
push
add
dec
shr
dec
jge
pop
aas
mov
xchg
and
nop
std
xchg
and
incl
push
mov
pop
pop
std
xchg
fwait
and
daa
or
loope
push
insl
daa
dec
loop
xor
dec
mov
cmp
sahf
mov
mov
dec
push
loopne
sti
iret
jle
lods
or
mov
repnz
mov
add
rcll
inc
int3
cmp
rclb
cmp
inc
dec
jne
mov
rol
into
sub
lock
and
rorb
dec
pop
jmp
das
test
jb
mov
mov
shrl
xchg
ret
mov
pop
xchg
xor
repz
outsl
mov
xchg
mov
xchg
cmp
sub
data16
icebp
xchg
xchg
daa
pop
lahf
popf
pop
add
and
jecxz
std
cli
scas
scas
add
lret
jg
sahf
sbb
pop
xor
stc
rclb
and
sub
push
push
repz
rcl
sub
fistpl
divl
push
push
adc
lret
aas
shlb
pushf
outsl
cs
mov
and
push
jmp
mov
cmc
xchg
push
push
lret
jmp
jmp
add
mov
adc
pop
add
or
hlt
data16
jae
mov
inc
xchg
in
and
daa
dec
lods
lods
inc
push
test
test
das
out
mov
push
jg
les
fsubrp
push
mov
mov
js
leave
vsubps
call
fs
jb
inc
test
divl
add
lock
aad
cli
adc
jp
mov
xchg
mov
push
pop
lds
mov
testb
ds
in
int
mov
adcl
dec
ret
mov
mov
bound
aas
gs
xor
daa
popa
xor
popf
cmp
xchg
add
hlt
xorb
das
iret
out
js
adc
stc
sub
sbb
rclb
stos
pushf
aas
scas
mov
push
ret
dec
mov
rorb
and
push
push
repnz
and
cmp
ja
and
bound
dec
std
mov
sbb
xor
xor
jge
mov
mov
mov
jno
dec
daa
bound
or
movsl
and
ret
in
fwait
rorb
arpl
insl
pop
fdiv
mov
dec
clc
inc
xor
rolb
add
push
pop
mov
out
jl
sbb
fisubrl
pop
pop
aam
adc
out
inc
inc
push
mov
xchg
and
sub
insl
xchg
ja
mov
stos
cmpsl
pop
insl
mov
cmpsl
fwait
test
loop
addr16
add
aaa
jne
xlat
mov
sbb
mov
movsl
sub
mov
xor
jne
sbb
mov
movsl
adc
push
push
popf
lret
mov
aad
fwait
cmpsl
les
xchg
das
cltd
ds
mov
sub
cld
xchg
in
jnp
jg
inc
les
mov
fsts
frstor
mov
push
inc
dec
pop
ds
sub
sbb
pushf
in
mov
cmp
push
fbstp
adc
arpl
and
xchg
mov
pop
incb
cwtl
addr16
pusha
sub
cmp
outsl
stc
inc
cmp
mov
mov
out
xor
or
pop
cs
pop
fcoml
sub
jo,pn
in
mov
jecxz
pop
sub
fwait
pop
sbb
stc
xchg
ficoml
imul
ret
inc
mov
add
cmp
sbb
cmp
xchg
mov
ja
fsubl
fstps
jmp
enter
fsubrl
inc
roll
pusha
pop
xchg
sahf
mov
mov
sub
lret
mov
pop
mov
xchg
xchg
xor
add
icebp
pop
dec
mov
in
sbb
mov
inc
fcmovnu
bound
and
sub
dec
xchg
jecxz
call
fs
jmp
cwtl
add
popf
adc
das
fadds
mov
and
lods
cld
fstl
aam
and
mov
jmp
add
sub
icebp
push
subb
nopl
mov
out
mov
ljmp
rclb
cmpl
push
insb
das
in
dec
cmpl
mov
add
xor
fistl
ficomps
pusha
inc
stc
aam
push
movsb
jp
loope
imul
mov
out
cmp
repnz
cmp
faddp
nop
lahf
and
xor
or
mov
cmovs
cmpb
or
test
rcrl
xchg
xlat
sbb
mov
jnp
add
shrb
and
aad
stos
push
jnp
mov
int3
repnz
mov
lcall
inc
push
pop
cltd
jl
ror
pusha
lock
mov
ret
cmpsb
inc
jbe
bound
push
call
mov
in
gs
in
call
sbb
inc
dec
mov
lods
mov
mov
jne
je
mov
sbb
cmp
das
cli
les
xor
out
lea
pop
loopne
inc
lcall
in
aaa
subl
fnstcw
xchg
inc
insl
pop
or
and
push
arpl
pop
movsb
js
ja
push
push
lcall
in
je
std
sbb
mov
pop
and
in
aad
ja
les
outsb
movsb
nop
push
outsb
xor
aas
stos
lea
iret
pop
idiv
fcompl
test
gs
cmp
mov
push
aaa
lahf
xlat
cmp
cvttps2pi
mov
inc
mov
mov
mov
xchg
lret
stos
es
sub
sti
inc
inc
pop
test
jg
lds
cmp
xchg
mov
inc
subb
in
roll
add
in
pushf
in
jae
mov
sub
sub
push
dec
inc
lret
dec
push
scas
pushf
pop
push
sahf
cmp
sbb
jnp
aam
sub
dec
adc
jb
adc
leave
push
lcall
mov
cmpsb
movsl
lahf
xchg
mov
adc
push
pop
in
mov
xor
pushf
cli
mov
dec
lcall
jo
out
leave
ret
mov
pusha
sub
lods
push
pop
cmp
mov
std
movsl
xchg
sub
cltd
adc
mov
movaps
mov
adc
adc
pop
scas
cmp
cmp
push
pusha
push
pusha
or
inc
sub
test
push
fimull
dec
jl
aad
in
sarl
arpl
jmp
add
and
cli
add
jmp
mov
cmp
mov
sbb
and
rorb
or
movsl
and
sub
in
ret
push
xchg
mov
pop
out
daa
add
test
sub
add
pop
pop
leave
mov
jp
mov
ja
mov
hlt
std
xor
mov
insb
mov
jge
add
adc
adc
bound
pop
imul
xor
ret
push
je
xchg
je
aaa
sbb
mov
icebp
faddp
mov
xor
and
or
divb
call
dec
test
bound
cmp
mov
hlt
add
xchg
sub
pusha
movsb
rorb
popf
out
xchg
bound
mov
daa
int3
sbb
sbb
mov
in
fidivs
stos
xchg
rclb
mov
stos
adc
mov
sub
sbb
sub
sarl
inc
jb
mov
sbb
cwtl
push
out
fisubrl
pushf
addb
jecxz
icebp
stos
sbb
mov
stos
xor
jle
pop
cwtl
incl
js
fisubs
in
mov
lret
xchg
or
mov
icebp
sahf
adcb
clc
dec
out
ds
int3
lret
mov
rolb
nop
ss
iret
and
test
scas
xor
fidivrl
sub
add
lods
inc
add
push
mov
sbb
dec
pop
sti
test
dec
cmp
scas
outsb
and
cmp
xchg
cmp
dec
sub
mov
push
fwait
out
das
sahf
push
test
sbb
push
mov
insl
mov
cmpsl
mov
negl
fstpl
movsl
add
nop
push
fdivs
add
xchg
mov
leave
push
imul
lods
xor
add
arpl
add
add
bound
fwait
pop
jmp
or
push
ljmp
ja
inc
lods
scas
push
cmp
push
out
lea
shlb
mov
icebp
xchg
sub
jecxz
dec
add
popa
outsl
sbb
mov
pop
and
aas
ja
jle
adc
sti
mov
mov
leave
sti
inc
nop
cmp
dec
inc
and
inc
mov
int3
add
add
pop
xorl
mov
sub
hlt
or
pusha
xchg
es
jno
test
xchg
call
data16
bound
scas
inc
orl
sub
adc
shlb
inc
movsb
stc
or
cli
fnstsw
sti
add
scas
iret
scas
sub
aad
adc
mov
addr16
jo
repz
xor
or
push
arpl
xor
lea
mov
inc
mov
jp
cmp
loop
popf
fcmovne
jg
mov
ljmp
pop
sub
jnp
pushl
jo
in
mov
aas
js
sub
fs
add
or
fs
lcall
or
jge
dec
mov
mov
sbb
sub
pop
sbbl
nop
push
push
mov
dec
fwait
sub
push
nop
jge
mov
inc
mov
fisubrl
fmull
xlat
push
xor
test
in
sub
mov
or
nop
fs
add
rorb
push
das
movsb
jnp
mov
or
repnz
dec
sbb
fucomi
xor
xchg
push
xchg
lea
add
imul
shrl
adc
repz
mov
shlb
mov
sbb
in
lahf
scas
test
push
pop
inc
in
xchg
xchg
pop
pop
in
jge
xchg
pop
push
dec
push
sbbb
daa
sbb
aam
mov
addr16
test
jmp
ja
push
dec
adc
movsb
inc
lods
xor
add
dec
xchg
imul
mov
cmpsb
fmuls
sub
cmp
mov
pop
popf
insb
outsl
outsb
movsb
jb
pop
xor
mov
imul
test
push
mov
subb
clc
jp
rol
in
pop
in
testb
fcmove
adc
sub
mov
pop
mov
xor
xor
xor
cmc
jl
into
jl
loope
and
pop
jl
dec
fistpl
int
dec
push
imul
bound
jg
inc
aam
push
bound
movsb
jl
lret
and
loope
mov
out
sbbb
mov
repnz
pop
stos
mov
push
addb
or
push
xor
addb
sub
mov
and
xor
fisttps
fcompl
loop
mov
ret
sbb
sub
push
cmp
dec
fsubrs
negl
add
add
lock
roll
dec
inc
lds
and
add
inc
rcrb
and
rdtsc
enter
rcll
mov
pop
lods
fdivr
sbb
daa
bound
pop
push
jbe
loop
cmpsb
subl
aad
lcall
and
add
mov
sub
movd
fnstcw
jns,pn
imul
mov
jo
mov
mov
mov
inc
addl
bnd
jp
pop
dec
mov
lahf
xor
cmp
mov
jle
cltd
cmp
clc
sbb
gs
test
mov
xchg
sub
sahf
mov
mov
jb
xchg
push
mov
and
sbb
les
pusha
jb
repz
andl
lods
movsb
ficomps
add
dec
push
test
push
dec
std
pop
push
dec
insl
enter
mov
scas
mov
dec
mov
fldl2e
sub
sub
mov
scas
dec
scas
loop
cwtl
das
bound
jg
jns
and
jno
mov
adc
int3
sbb
or
cmpsb
mov
notl
ror
inc
jg
jl
lret
or
pop
xor
xchg
push
sub
adc
sub
andb
and
inc
xchg
enter
outsb
inc
shrl
out
aad
call
out
sbb
daa
dec
aad
inc
ds
push
fwait
adc
dec
es
test
data16
cmp
pusha
xor
adc
xchg
and
xchg
into
jp
popa
jbe
inc
and
arpl
movsb
and
mov
movsl
mov
mov
inc
movsb
inc
ds
push
mov
jbe
test
test
cld
inc
mov
mov
xchg
test
mov
subl
mov
dec
or
shlb
and
jns
adc
dec
out
sub
in
repnz
and
mov
in
imul
cmpsb
dec
push
shrb
jo
xchg
test
test
add
fstpt
int3
fisubl
cmc
sub
mov
lea
fisubl
imul
mov
clc
stc
je
fcmovb
and
sti
push
push
jnp,pn
loopne
repz
lock
iret
bound
jecxz
cmpsl
cmp
cmp
pop
fsubl
pusha
es
stc
mov
and
push
movsb
push
push
or
xor
sub
cld
sbb
and
clc
xchg
mov
clc
push
test
dec
js
xor
dec
popf
push
jecxz
jo
fs
push
sbb
add
push
test
jg
add
jnp
cmp
pop
xchg
inc
add
pop
lods
fstps
nop
sbb
mov
sub
repnz
dec
jmp
fists
mov
cmp
ljmp
in
cld
sbb
and
mov
and
mov
add
push
fisttpll
or
ret
in
stc
xor
jae
clc
aad
cmpsb
cmp
or
sbb
stos
mov
and
loope
into
call
test
imul
lret
cmp
in
hlt
cltd
and
dec
sbb
ja
dec
mov
dec
dec
sbb
int
jl
jns
in
shlb
nop
jne
add
shlb
xchg
inc
mulb
std
adc
jb
ljmp
pop
aas
sub
fdivl
cmpsl
int
lods
pop
mov
es
aam
and
insb
iret
mov
jns
mov
pop
js
and
push
cltd
sti
or
jbe
stc
or
xchg
loop
xor
mov
jb
call
jle
jbe
pusha
and
inc
cmp
fcomps
imul
jne
repnz
fdivrl
test
int3
dec
sbb
xchg
or
out
ss
dec
mov
dec
mov
movsl
sbb
and
in
std
lahf
fs
fdivrp
int3
push
jno
xor
cmp
sbb
ljmp
mov
pop
cmp
gs
ss
das
xor
pop
stos
push
hlt
lods
add
add
or
sahf
jmp
fwait
lods
shll
push
popf
std
in
push
inc
mov
inc
xor
mov
jno
bound
xchg
test
cltd
mov
dec
cmp
mov
test
in
fptan
fmull
mov
cmp
pop
repz
sbb
das
popf
mov
jmp
jl
xlat
insb
repz
cli
cltd
mov
pop
daa
and
shr
call
repz
iret
sbb
bound
les
push
cmp
sbb
mov
and
push
cli
mov
mov
test
stos
rorl
jge
push
lea
push
add
add
xchg
mov
mov
mov
jnp
and
fucomp
incl
sar
das
pushf
push
pop
aad
iret
loope
dec
aaa
mov
or
mov
adc
mov
mov
ror
scas
pop
lcall
jle,pn
inc
ljmp
mov
ljmp
outsl
jns
fildll
xlat
xchg
test
cs
xchg
jns
xor
pop
loopne
add
dec
push
movsl
mov
inc
cmc
lods
mov
mov
out
insl
mov
arpl
movsb
insb
jle,pt
imul
dec
or
push
lret
sub
sbb
insl
xchg
sarb
lds
insl
stos
mov
addr16
out
mov
jne
cmpl
push
outsl
psrlw
sbb
jle
cmpsl
and
cmpl
out
mov
insl
push
addr16
mov
or
cmpsl
mov
popa
aad
mov
inc
inc
sub
push
cwtl
mov
dec
lods
jp
fs
jge
mov
dec
pop
mov
and
shrb
cmp
inc
push
adc
cmc
lock
into
fsubl
dec
cltd
add
sbb
push
loopne
mov
or
lds
mov
clc
int3
or
outsb
xchg
es
xchg
mov
inc
insl
mov
adc
pop
mov
add
std
pop
push
add
hlt
sub
push
sub
clc
push
and
in
test
inc
shll
lods
scas
popl
outsb
sub
aad
mov
imul
cli
fistl
stc
sahf
xchg
adc
dec
or
mov
lahf
cld
fdivp
adc
cltd
and
loop
jno
stos
rolb
sub
jb
dec
loop
and
pusha
xchg
pop
arpl
lret
dec
lods
jo
lods
push
jbe
lahf
jmp
arpl
push
dec
jle
inc
pop
shrl
dec
cmc
jg
mov
push
xor
cld
xor
out
pushf
int
lret
inc
mov
pushf
ss
ljmp
inc
je
dec
out
cs
xchg
nop
bound
test
add
sub
xor
call
and
or
in
mov
inc
jno
jae
xlat
sub
jnp
mov
push
ror
jb
jo
fisttpl
scas
cmp
xor
and
xchg
pop
push
insb
fistl
sbb
sbb
out
lods
xchg
ret
data16
jg
outsb
cmp
popa
ss
les
shl
es
fistpl
mov
test
call
adcb
pop
js
out
ljmp
fdivrl
fldenv
adc
jno
pop
lea
jb
unpckhps
lods
shr
push
lock
push
adc
stc
cli
test
push
and
test
xor
mov
mov
movsb
outsl
xlat
pop
sub
pusha
pusha
sub
push
stos
sbb
clc
xor
dec
stc
push
aam
cltd
mov
inc
out
mov
sbbb
push
dec
lods
addr16
adc
jns
or
and
and
cwtl
movl
int3
rorb
mov
jmp
xchg
jle
jns
inc
insl
adc
pop
mov
ljmp
dec
add
sub
sbb
inc
add
mov
lret
pop
add
push
push
pop
sbb
call
ret
dec
shlb
mov
movsb
dec
scas
mov
mov
xchg
cs
sub
pop
test
cmp
dec
xchg
dec
adc
sub
jg
xor
and
mov
gs
jbe
xchg
inc
pop
jae
movsl
stos
loop
je
xchg
pop
lcall
js
mov
aam
dec
add
xlat
mov
push
mov
dec
and
adc
arpl
sbb
push
xor
xchg
or
sub
lcall
mov
bound
adc
iret
mull
pushl
and
mov
jne
pop
xor
fnstsw
movsb
leave
clc
mov
pop
jl
lds
push
adc
pop
js
gs
cmp
aam
sbb
cmp
pop
xlat
push
test
adc
enter
dec
mov
mov
mov
cs
iret
ret
cmp
adc
xor
fwait
xlat
je
fidivs
dec
mov
push
imul
pop
test
xor
pop
cmp
lds
mov
and
mov
jecxz
mov
dec
jg
test
adc
cmp
sub
data16
adc
addb
ret
fmul
out
pop
mov
sub
sbb
or
aaa
xchg
cmp
lret
rclb
sar
pop
dec
jmp
loopne
pop
stos
dec
jns
cld
lea
stc
cmpsb
adc
test
push
ss
mov
cmp
sbb
fidivrs
lcall
orl
cmp
fdivp
xchg
jne
mov
dec
es
insl
push
and
jp
loop
jne
inc
lahf
sub
cwtl
and
adc
inc
movsb
push
out
es
and
push
popf
fcmovb
inc
aad
or
push
or
cmpsb
mov
xor
fcoms
es
adc
mov
stc
sub
dec
mov
push
fstpl
loopne
sbb
and
push
mov
add
and
sbbl
sbb
jo
cld
lcall
lods
dec
sub
icebp
and
movsb
and
dec
xchg
fisubl
sbb
sub
mov
insb
mov
loopne
pop
repz
addr16
lods
test
inc
mov
jl
jle
jg
mov
adcl
iret
add
sbb
jp
mov
xchg
outsl
cmp
push
pop
in
cli
push
cli
mov
aad
daa
jecxz
lods
sub
push
call
and
sbb
ss
in
ss
cmp
pop
jb
pop
jmp
into
and
and
xchg
dec
bound
fistl
das
jecxz
jp
xor
mov
and
fidivs
xchg
cltd
add
andb
and
pop
cmp
hlt
imul
jbe
inc
cs
push
call
xchg
lcall
or
or
xorb
inc
fidivs
cld
lods
into
ret
inc
inc
lock
push
in
repz
mov
sbb
dec
push
adc
fwait
push
push
jnp
aas
xchg
inc
call
pop
push
mov
loope
leave
mov
jae
daa
xor
stc
add
jge
rclb
notl
xor
inc
pop
adc
sbb
sbb
dec
sahf
and
cmpsb
inc
pusha
xor
aad
fistpl
jmp
adc
pop
mov
imul
out
push
add
lahf
shll
loopne
lea
gs
mov
mov
ljmp
ss
pop
ret
cmpsl
jl
leave
and
hlt
gs
clc
lret
xorl
dec
je
dec
push
dec
cltd
sbb
add
xchg
out
add
roll
jge
sbb
push
cwtl
push
hlt
push
std
cmp
data16
mov
push
stc
mov
std
negb
sub
dec
pop
push
inc
mov
adc
mov
dec
bound
pusha
jge
test
scas
lret
and
and
movsl
inc
aaa
adc
inc
enter
fisttpll
add
pop
fwait
shrb
mov
jle
mov
jge
sti
lcall
jg
inc
xchg
mov
popf
mov
mov
ja
sub
cmp
out
int
adc
scas
xor
cmp
add
loop
push
je
out
scas
sti
pop
iret
movsb
addr16
cmp
mov
fldenv
nop
lret
xchg
fwait
xchg
adc
add
pop
cmp
sub
lods
stos
mov
fmulp
test
aaa
shl
mov
push
jecxz
ret
xchg
sub
or
fidivrl
push
addr16
ficomps
gs
add
shlb
aaa
nop
outsl
xchg
pop
cmp
lcall
dec
sub
shrb
stos
inc
addb
jne
dec
sbb
insb
push
ret
inc
or
aas
inc
imul
jmp
sub
xchg
jecxz
fnstenv
sbb
jbe
or
pop
xchg
aas
inc
inc
and
sbb
push
nop
js
rorb
aas
mov
jmp
mov
lods
cmp
push
mov
jle
sti
sarl
push
xchg
je
dec
fcoms
jne
aad
cmc
into
cltd
jo
xchg
jle
imul
outsb
movsl
rolb
push
aaa
lcall
rsqrtps
add
int3
rclb
imul
rorl
sub
dec
dec
add
jbe
movsb
jb
pop
pop
and
lods
fstpl
bnd
movsb
dec
dec
add
ror
stc
mov
pop
clc
or
or
push
xchg
out
movsl
pop
dec
pusha
mov
dec
jmp
lock
clc
mov
sbb
mov
mov
das
dec
test
lret
rclb
jbe
or
cmp
cmc
xor
adc
int3
pop
rolb
cwtl
lock
js
lods
push
xchg
pop
negb
cmp
ret
imul
jmp
mov
gs
mov
pop
xorb
test
fdivrs
jmp
icebp
adc
mov
arpl
and
dec
inc
nopl
and
mov
ret
les
out
jge
andps
stc
pop
pop
imul
jb
jmp
jno
js
pop
lods
or
mov
dec
cmpsb
push
adc
xchg
dec
cmp
ja
sub
and
decl
push
mov
mov
add
imulb
shl
popa
xor
mov
insl
fwait
dec
mov
loope
sub
mov
mov
jo
std
int
mov
cmp
xor
add
out
or
rcl
add
in
dec
jp
repnz
pop
or
cs
pop
jo
xchg
test
andb
or
aas
in
jae
and
cmc
test
aam
xor
mov
aas
push
dec
cmpsb
test
insl
add
cmp
xchg
mov
jno
in
mov
push
jge
sub
roll
dec
out
xchg
cmp
push
aad
sbb
xchg
dec
push
pop
pop
movsl
fs
mov
icebp
shll
jnp
xor
xchg
cmp
adc
adc
and
push
xchg
xadd
icebp
inc
bswap
pop
scas
jecxz
popf
ds
jle
cmp
mov
xchg
inc
sbb
pusha
dec
cmpsl
or
or
inc
mov
push
cmp
mov
pop
aaa
cmc
dec
pop
stos
imul
sub
int
iret
rcll
dec
push
loop
cmpsb
into
aaa
dec
mov
push
call
imul
add
cwtl
mov
pop
lock
ret
mov
loopne
aad
daa
ret
mov
or
or
jecxz
dec
hlt
mov
fisubs
in
mov
mov
lcall
jmp
jns
xlat
stos
jne
outsb
pop
cli
es
cmp
add
and
leave
push
rol
cmp
mov
xchg
sahf
cld
cmp
loopne
or
pushf
sub
sub
jmp
fdivr
pushf
pop
push
vphadduwq
jb
xchg
test
gs
adc
and
mov
aas
cmpl
sub
and
push
jnp
and
outsl
dec
xor
rclb
xchg
stos
dec
mov
xorl
mov
add
js
pop
movsl
test
or
push
repz
lea
jo
push
dec
out
pop
mov
and
cmp
icebp
cmpsb
push
divb
add
adc
lea
jge
shl
or
lahf
or
and
jmp
dec
mov
sbb
bound
fwait
and
pop
jne
and
ret
bt
cs
std
mov
leave
into
dec
in
jle
shll
lock
loope
test
enter
leave
dec
mov
scas
cltd
js
es
rcll
sti
nop
sbb
aad
sbb
push
xor
movsl
xchg
dec
add
stc
jmp
test
pop
mov
sub
cmc
clc
or
mov
stc
js
fisttpll
std
aaa
sbb
hlt
into
fcomip
outsl
xor
or
xor
out
push
fsubs
push
xchg
inc
stos
mov
ss
and
popl
aad
sub
xchg
add
inc
sahf
in
add
ljmp
ja
mov
leave
xchg
cltd
or
and
out
mov
popf
clc
dec
adc
pop
and
mov
xor
add
dec
je
sub
sub
push
cli
das
outsb
dec
leave
mov
and
test
mov
push
daa
stc
fcomip
mov
stc
xor
imul
cmp
push
push
call
fs
repnz
cmc
push
lret
out
lcall
nop
sub
xchg
xchg
dec
nop
pop
xor
punpckhbw
mov
in
and
pop
xchg
outsb
push
fiadds
aas
out
in
sbb
jge
xor
and
dec
xor
xchg
adcl
mov
cmc
arpl
adc
push
test
add
push
sahf
outsl
push
sarl
jmp
int3
mov
sub
pop
pop
lods
adc
xor
inc
xchg
shl
addr16
mov
movsl
mov
dec
and
jl
test
fs
jmp
add
pushf
loopne
loop
inc
imul
add
mov
mov
sbb
std
sets
clc
mov
adc
pop
clc
mov
iret
lea
mov
pop
rcrb
loopne
xlat
addr16
jne
shr
xor
mov
pop
inc
cmp
mov
cld
out
ret
mov
scas
mov
sbb
ss
sarl
out
repnz
sbb
xor
je
mov
fwait
and
call
pop
lret
out
inc
push
test
fcoms
loop
pop
mov
aas
mov
jle
pop
jl
jbe
scas
xchg
orb
rdmsr
mov
jmp
outsl
xorb
mov
loopne
jmp
gs
jl
loope
stc
xchg
lret
cmp
and
lret
sbb
aad
sbb
mov
add
lods
cwtl
dec
mov
mov
and
mov
jns
arpl
je
fstpl
mov
rcl
pop
mov
stc
mov
cmp
arpl
out
inc
loope
push
inc
adc
sub
aaa
popa
arpl
add
xchg
fisubrs
mov
inc
xchg
and
ss
scas
test
lock
int3
std
aad
fiaddl
xor
xchg
inc
push
lods
ja
or
in
adc
cmp
cli
jno
dec
lahf
lock
stos
std
push
xchg
out
mov
aam
add
sub
shlw
out
arpl
fidivrl
ljmp
mov
lock
gs
add
xchg
pop
scas
mov
sti
loopne
and
sti
jecxz
rclb
out
mov
call
out
sub
jae
aas
jecxz
push
xor
and
or
lcall
add
xchg
push
mov
or
fwait
das
adc
cwtl
sub
jnp
xchg
or
sbb
or
fs
pop
enter
sub
aas
mov
out
jae
mov
sti
pop
insb
orb
inc
add
icebp
inc
movsl
jmp
aaa
and
sub
fwait
subb
lds
mov
lcall
push
sahf
add
rcl
mov
fcmovnbe
push
adc
jbe
movsb
test
ficoml
mov
pop
lea
out
cmpsb
push
add
mov
push
jns
test
enter
pop
cs
cld
inc
cli
dec
push
stc
mov
shl
xchg
stos
shr
sub
popa
mov
test
cmc
cltd
pusha
add
push
mov
xchg
push
out
jge
mov
testl
push
repnz
xor
mov
xchg
dec
xchg
stc
add
mov
push
mov
add
mov
inc
dec
out
dec
push
jnp
fisubl
fcoml
sbb
or
mov
mov
ficomps
outsb
cltd
sbb
xor
clc
insl
push
sub
fwait
out
ja
mov
aam
mov
fsubrs
call
sar
in
jmp
decl
lds
adc
addl
decl
out
xor
stc
roll
sar
in
push
inc
test
or
add
push
mov
fisttpl
lahf
popf
aaa
pop
popf
and
inc
xchg
pop
inc
mov
movsb
push
shll
loop
aas
pushf
daa
mov
dec
xor
pusha
and
ret
mov
mov
lea
lock
aad
sbb
stos
dec
sbb
stc
push
cmp
out
cltd
adcl
and
fcmovnb
fsubrs
add
mov
mov
cmp
pop
scas
mov
or
loop
cld
pop
lret
ds
mov
fsts
into
inc
stos
testb
fisubrl
lcall
mov
sahf
add
sub
cmp
add
jle
test
or
pop
dec
enter
imull
in
into
dec
lret
out
cmp
sbb
ret
lcall
cmpsb
xor
lret
or
jg
popf
and
mov
fbld
mov
push
or
or
and
and
jge
cmpsb
mov
ror
pop
fistps
jbe
dec
cs
xchg
lods
scas
push
imul
cmc
mov
je
lret
popa
int
rcl
aaa
mov
popf
adc
fimull
jge
imul
test
xchg
inc
dec
sbb
out
push
subl
or
sbb
in
movsl
cmpsb
xchg
sub
fabs
movl
aad
dec
sti
js
mov
or
push
inc
movsl
fsubrl
inc
lret
dec
nop
popf
test
sarb
ja
daa
add
cmpb
dec
std
std
pop
cmp
jne
cmpb
into
jb
movsb
cs
ficompl
fldcw
pop
push
popl
jae
dec
inc
sub
push
dec
and
sub
push
lret
jmp
push
xchg
jp
push
push
nop
push
jmp
in
xor
mov
adc
jne
pushf
in
xor
mov
adc
movb
jle
cmp
sub
stos
imul
sarb
mov
sub
mov
aaa
fadds
enter
or
jl
xlat
cld
leave
inc
add
clc
test
scas
mov
sbb
inc
jne
jb
cmpsb
adc
jno
ja
movsb
jne
pop
pop
pop
pusha
lods
push
add
enter
dec
jae
std
cli
cmpsb
pop
cli
xor
aaa
dec
repnz
je
mov
mov
jmp
jg
adc
dec
add
xchg
popf
push
dec
sbb
mov
bound
push
leave
out
mov
out
push
add
in
adc
aaa
or
mov
out
ja
jnp
pop
cmpsl
cmp
cmpsl
jno
xor
inc
in
test
ficoms
nop
popf
js
aam
inc
ret
and
lods
jg
push
inc
repnz
push
in
stos
ljmp
push
inc
mov
data16
xlat
inc
fidivs
mov
xchg
cmpsl
sbb
mov
in
or
mov
ds
mov
sbb
pusha
into
stos
fidivrl
xchg
scas
add
pop
adc
jae
dec
mov
cmp
in
push
push
enter
and
xchg
test
push
push
mov
frstor
inc
fwait
cs
mov
xchg
jne
and
fcmovnbe
stos
jle
stos
bnd
enter
dec
pop
push
sub
inc
mov
sbb
sbb
inc
in
stos
in
cmpsl
push
loope
jg
int3
or
in
cmp
outsb
xor
ret
inc
and
leave
shlb
xchg
xor
sti
test
pop
loopne
movl
push
jg
adc
addr16
aad
pop
cmp
xchg
jecxz
lret
push
or
xor
or
adcb
ss
xchg
jp
out
fnsave
cld
adc
pop
mov
sti
addr16
dec
out
rorl
mov
dec
data16
inc
pop
stos
push
lret
shll
mov
ret
jo
cld
pop
jp
pushf
in
into
push
xor
es
xor
push
test
fld
jno
aas
fcmovnb
adc
cmpsb
jno
push
sbb
push
mov
insb
ret
add
rcr
je
push
fistps
sub
jnp,pn
je
inc
pop
roll
jl
mov
sub
mov
shll
mov
dec
fbstp
aas
gs
lods
cmp
xor
cwtl
lcall
cltd
fsubrl
outsb
push
enter
cmc
mov
add
push
repnz
dec
lods
add
scas
mov
ds
dec
pop
xor
xor
cmpsb
imul
pop
lret
or
enter
clc
out
pop
stc
inc
pop
cmpsb
add
pushf
enter
xchg
inc
insb
loopne
aam
jmp
sub
xor
aas
data16
scas
pop
push
pushf
scas
xor
jns
cmpsb
and
loopne
test
outsb
pop
add
pop
addr16
or
add
stos
jo
xchg
xchg
je
arpl
pop
jo
rorb
push
xor
mov
fld
test
ds
push
test
add
inc
and
adc
xchg
es
mov
scas
inc
pop
pop
bound
mull
cltd
add
aaa
mov
push
mov
jge
test
mov
xchg
int
pop
jnp
lahf
lret
scas
xchg
pop
and
jno
cmp
jns
fiadds
out
sar
pop
and
aad
or
inc
rorl
or
dec
enter
jne
ret
cld
loope
mov
mov
inc
out
xor
outsb
loope
or
roll
into
sub
int3
push
lahf
mov
fdiv
or
mov
adc
inc
xchg
mov
sub
adc
scas
lds
gs
stc
pushf
xchg
mov
jge
rclb
dec
lds
stc
mov
mov
movsb
mov
fistpl
pop
cmp
add
xchg
cmp
addr16
cmp
and
xorl
in
push
orb
push
jmp
mov
cmpsl
lahf
pop
mov
xor
out
fcmovnu
jg
andl
cs
push
and
inc
mov
rorb
clc
fists
scas
adc
xor
pop
stos
or
stc
imul
sub
xor
repz
or
loopne
cs
pop
push
pop
sbb
mov
push
repnz
adc
je
out
mov
psllq
out
and
std
mov
cmp
iret
aam
inc
push
jmp
mov
sub
inc
insb
ss
sbb
ljmp
cli
cmpsb
mov
cmp
mov
pop
cmpsb
or
in
bound
xchg
into
fistpl
mov
xor
sub
and
xchg
mov
scas
aad
lahf
clc
xor
pop
cs
je
xor
test
add
and
mov
jmp
xchg
addl
mov
cmp
sbb
decl
shrl
push
jae
mov
das
shr
icebp
cmp
push
out
pop
or
and
xor
out
pusha
xchg
mov
ret
mov
lret
xchg
xor
hlt
mov
popa
push
rcl
mov
sub
xlat
cmp
or
in
dec
sub
in
das
pop
loope
inc
cmp
sbb
mov
jl,pt
les
push
cwtl
cmpsb
inc
std
insl
cmp
repz
or
sub
add
or
fwait
addr16
or
cltd
jns
js
lret
xchg
imul
jle
mov
lret
jae
xchg
std
leave
imul
lods
push
aad
dec
dec
fadds
fidivl
xchg
scas
shr
loope
lret
pop
es
dec
mov
insb
mov
mov
enter
mov
fwait
loopne
enter
dec
jl
movsl
clc
and
mov
in
lock
jl
fstps
xlat
pop
jge
or
movsl
popf
or
idivb
and
iret
add
jne
fwait
push
add
jo
dec
cmp
adc
jne
cmp
or
lahf
fs
in
jg
inc
mov
outsb
mov
or
sub
xchg
rorl
sarl
xchg
aaa
in
nop
in
clc
xor
cmp
rcll
cwtl
rol
ror
mov
inc
push
cmpsb
aaa
movsl
xorb
xor
jmp
jne
cmp
jnp
std
fs
xchg
cld
test
sbb
mov
and
sbb
cltd
add
nop
cmp
mov
stos
test
cltd
fistps
xchg
loop
sbb
mov
sbb
jbe
out
enter
cmp
push
sub
stos
nop
jle
sarb
jl
mov
std
add
sub
or
cmp
les
mov
and
cwtl
sti
mov
lds
cmc
jno
mov
mov
ret
cmpsl
and
sub
cmc
je
push
rsqrtps
mov
xor
mov
push
nop
lahf
out
test
repnz
inc
test
out
dec
or
pop
sub
inc
movsb
xchg
in
jae
pushf
cmp
cld
push
outsb
mov
xchg
mov
into
dec
push
push
ss
sbb
adc
jmp
sbb
mov
sub
pop
mov
mov
fldenv
bound
jge
loopne
pop
enter
loopne
add
ljmp
mov
outsl
add
cmp
mov
ss
nop
int
xor
xchg
cmp
cmp
les
adc
shlb
pop
rclb
fldenv
loope
fsts
push
or
jnp
ss
fstpl
push
pop
jecxz
and
adc
mov
lret
mov
lcall
cmp
into
mov
pushw
popl
divl
sbb
xor
dec
jns
in
pop
lods
stos
adc
out
jmp
dec
aaa
cmp
mov
xchg
ss
lods
push
cmp
sti
sbb
adc
dec
or
mov
std
cmp
mov
pop
xor
mov
gs
mov
pop
xchg
into
add
into
mov
sub
lods
push
in
dec
fsubs
jge
jb
xor
mov
popf
xchg
lahf
lds
mov
pop
test
paddusw
dec
stos
dec
lock
std
jp
popf
mov
or
aaa
iret
pop
sbb
fdivr
ret
xchg
and
dec
xchg
inc
sub
cmp
sbb
pushf
shlb
testb
and
or
cmp
pop
push
adc
adc
in
inc
pop
loopne
mov
dec
fidivs
sub
adc
cs
dec
ljmp
jge
sub
inc
mov
inc
js
xor
mov
inc
inc
xchg
lock
testl
or
pop
or
ss
test
insl
scas
pushf
sub
jae
mov
pusha
jno
int
or
cmp
cltd
and
es
stc
push
out
in
enter
ds
inc
mov
adcl
mov
mul
fcoml
lcall
arpl
xchg
adc
pop
push
lahf
and
movsl
adc
addl
dec
inc
sub
mov
movsl
in
sub
stc
pop
rcrb
inc
sub
shll
mov
mov
mov
popf
mov
aad
adcb
jae
adc
cmp
scas
mov
inc
leave
je
mov
hlt
mov
mov
sbb
push
cmpsb
clc
adc
mov
xor
or
push
add
shrb
and
cmp
das
xor
test
stos
fwait
push
cwtl
popf
inc
sbb
rcrb
mov
imul
xchg
dec
ret
lods
jne
pop
cmpl
lds
faddp
and
mov
je
xor
add
scas
sbb
repnz
out
cmpsl
sub
xlat
push
stos
xor
add
fisubrs
ss
dec
dec
pminsw
test
adc
stos
movsl
mov
sub
jno
es
add
fsubs
dec
add
lret
mov
inc
std
and
dec
xchg
add
shl
subl
std
mov
jg
faddl
call
xchg
or
lods
lods
sbb
js
gs
aam
inc
repnz
pop
stos
mov
inc
insb
inc
incl
sahf
or
movsl
lcall
je
cmpsl
mulb
and
iret
and
jg
mov
or
mov
pop
jg
mov
inc
incl
fisubl
xchg
fistps
push
imul
fistpl
sub
std
fidivrl
addb
mov
xchg
cli
insl
ja
jo
dec
push
push
ret
push
out
and
out
mov
movsb
idivb
jecxz
dec
inc
mov
lock
dec
sbb
xchg
sbb
leave
lods
lock
fmul
inc
lods
sbb
xor
imul
rclb
insl
sub
sub
insb
dec
pop
jp
inc
dec
fsubs
cmp
fsts
xorb
pushf
mov
dec
shll
jge
or
sbb
rcr
out
adc
and
sub
shrb
data16
inc
nop
mov
popf
xchg
sbb
xor
repz
popl
mov
test
test
xor
jo
popa
mov
jae
iret
out
jb
or
fbld
dec
icebp
int
repz
outsl
ss
xchg
jle
insb
loopne
es
hlt
lds
stc
mov
pop
mov
mov
cmp
jns
leave
xor
les
ds
cltd
lcall
fimull
cld
sub
mov
push
lret
loope
insb
sub
xchg
mov
mov
add
cmp
fldcw
jae
out
es
cltd
adc
lret
jnp
lahf
push
sub
int3
loop
xchg
cmpsb
jae
test
mov
ss
and
enter
lahf
pop
inc
leave
enter
stos
aas
sbb
jle
and
inc
or
push
test
or
pop
cld
cmc
dec
loopne
std
iret
sahf
aad
cmpsb
cltd
test
mov
outsb
in
int3
xchg
inc
popf
push
mov
in
xor
mov
jae
push
inc
jmp
inc
mov
or
mov
mov
jo
xchg
jnp
pop
clc
sub
out
mov
jo
jno
adc
mov
sbb
xchg
push
adc
sahf
inc
xor
mov
das
les
lods
sub
out
rolb
push
out
jmp
out
aaa
test
inc
sti
lcall
mov
dec
add
test
pop
add
sub
and
test
insb
lock
mov
leave
outsl
or
push
dec
in
das
insb
out
es
adcl
inc
mov
rorb
imull
les
sbb
dec
inc
and
dec
out
mov
ret
ret
pop
mov
scas
sub
aaa
into
xlat
xor
mov
popa
sbb
les
cli
jns
cmp
ret
pop
stc
jbe
cmp
in
arpl
jl
jg
loop
cld
addb
mov
loopne
xlat
push
pusha
cli
ja
mov
iret
sub
inc
mov
mov
cwtl
sbb
in
movsb
add
pop
cmp
mov
mov
adc
sbb
into
push
daa
xlat
test
inc
out
jmp
movsl
push
push
int
stc
pop
imul
cld
jmp
cld
pop
cmpsl
fdivs
ljmp
mov
sbb
insl
push
outsb
cltd
pop
mov
lock
mov
xchg
adc
or
lcall
call
and
push
dec
aas
inc
and
and
xchg
mov
or
cmp
insb
pushf
pop
cmp
cmp
pop
in
int3
dec
movsl
addl
cltd
cwtl
mov
pop
out
idiv
jge
sbb
movsl
and
popf
test
pop
dec
xchg
insl
adc
movsl
into
xor
test
sti
sub
xor
movsl
xor
setl
cli
pop
xor
xor
mov
dec
adc
aas
pop
xchg
and
mov
gs
mov
jbe
rcrl
inc
adc
jo
lret
stc
outsb
int
dec
mov
clc
sub
xchg
shrb
inc
cmp
jl
sub
mov
jl
and
mov
sub
cld
dec
mov
jl
or
popf
adc
add
sbb
push
xor
mov
cmp
mov
push
out
jp
xchg
dec
cld
fildl
hlt
sarl
insl
mov
insl
jp,pn
and
xchg
mov
int3
rcr
std
inc
roll
sbb
lahf
jno
lahf
orl
dec
leave
test
lcall
pop
ret
or
sbbl
adc
sub
cld
xchg
fimuls
repz
ret
imul
xor
cmpsl
or
inc
push
cli
test
shl
outsb
mov
jp
es
xchg
fmuls
pop
fldcw
dec
test
outsb
or
jecxz
inc
test
xor
lcall
jle
stos
stos
push
sahf
sahf
repnz
dec
test
mov
inc
pop
popf
dec
cltd
iret
loopne
push
aam
pop
push
pushf
or
pop
dec
inc
add
mov
push
dec
push
jae
sahf
inc
jbe
mov
jecxz
call
pushf
add
mov
jg
fsubs
in
repnz
out
mov
outsb
pop
fiaddl
adc
adc
pop
loope
fisubl
adc
repnz
int
cmp
pop
das
lret
movsb
out
add
mov
sahf
pop
in
daa
pop
jne
mov
push
adc
adc
clc
ss
add
jb
dec
pop
sub
or
nop
jg
cmp
testb
lods
lcall
lock
adc
jle
testb
daa
not
pop
outsb
pop
jg
cwtl
out
xchg
push
or
inc
mov
push
clc
mov
sbb
pop
imul
jo
cmp
loope
addr16
sbb
imul
mov
xorl
adc
rolb
adc
jno
add
jbe
rol
or
cli
mov
insl
push
int3
orl
push
stos
dec
popa
and
sahf
aaa
call
stc
inc
or
pop
pop
xor
ficoms
jge
jb
mov
or
lret
jge
pop
movsl
mov
ds
mov
in
mov
cmp
cs
add
pop
jbe
test
dec
mov
int
push
movsb
dec
out
icebp
xchg
xchg
cmc
lahf
jl
or
or
in
insb
lahf
xorb
dec
ret
pop
dec
testb
mov
popf
ret
sub
inc
imul
out
insl
mov
cmp
pop
scas
loopne
mov
xchg
fwait
test
test
jb
sbbl
xlat
adc
jmp
fnstcw
xlat
xchg
aad
push
adc
iret
scas
sarb
rcl
imul
xchg
lret
lret
mov
cmc
sbbl
rcrl
sti
scas
fstpt
fcompl
mov
add
jge,pt
cmp
mov
dec
push
sub
stos
lods
lods
rclb
test
mov
gs
cmpb
ja
outsb
mov
sbb
mov
test
add
or
outsl
stc
jno
and
jbe
inc
aad
jl
sub
fldt
push
mov
test
aam
subl
mov
pushf
push
or
ss
shlb
mov
jae
sbb
in
jg
ror
mov
pop
jg
scas
call
rcll
mov
mov
shr
mov
lods
mov
sahf
int
in
adc
cltd
add
or
mov
xlat
push
sub
and
xchg
xor
pop
js
es
mov
popa
ds
iret
test
pop
or
addl
sbb
add
mov
jg
in
mov
pop
scas
mov
or
imul
lea
outsl
jmp
dec
lcall
xor
sub
add
inc
fsubrl
fstp
cs
sahf
jecxz
lock
pop
mov
sub
cmpsl
cmp
hlt
and
mov
adc
xor
mov
sbb
or
sbb
aas
inc
jns
fstpt
sbb
mov
xchg
pusha
mov
scas
adc
mov
cmpsb
fistl
pop
mov
sti
fmuls
dec
jmp
xchg
dec
mov
movsl
or
push
repz
into
pop
push
mov
xor
into
jno
test
adc
sub
ja
dec
test
fstpt
imulb
xor
jbe
popf
orb
aaa
ds
es
icebp
or
movsl
or
add
push
ficomps
imul
insb
data16
push
pop
mov
or
jge
arpl
dec
or
mov
sbbb
and
mov
and
das
fucom
lcall
cmpsb
iret
lahf
mov
mov
cld
loop
xor
adc
xchg
mov
or
pop
out
xchg
fsubs
stos
scas
stos
and
mov
cmc
in
dec
ret
push
fstpt
mov
and
mov
jae
dec
or
xchg
movsl
cmp
cmpsb
sahf
cmc
pusha
hlt
jnp
jle
fbstp
ja
fwait
lock
sti
sub
mov
mov
pop
lcall
insl
inc
bound
stc
lcall
aam
idivb
in
mov
dec
shlb
ret
cmpsl
sub
push
and
cld
mov
pop
xor
mov
sbb
adc
ret
popa
scas
stos
or
sub
pop
cmp
fdivs
dec
fisttps
push
out
subb
push
mov
or
xchg
mov
lods
and
pushf
imul
imul
sbb
xor
iret
mov
mov
daa
add
loope
xor
nop
dec
pop
fs
jo
push
adc
fmull
or
xchg
in
inc
enter
xchg
addb
push
xor
cmp
fucomi
push
mov
dec
mov
cli
ret
mov
sub
mov
mov
shl
pusha
stc
cmc
sbb
xlat
jl
repnz
lock
call
add
aad
xchg
nop
fmuls
xchg
mov
dec
pop
mov
xor
stos
inc
hlt
das
ss
sbbb
xor
and
jns
jns
and
inc
adc
rorl
jp
xchg
mov
lds
lcall
xchg
mov
or
xchg
ds
in
fstpt
lods
jns
fwait
aaa
jne
adcb
orl
das
mov
cmpl
popa
movsb
pop
std
pop
sbbl
dec
jb
dec
stos
gs
mov
push
ds
fucomip
shll
jno
outsl
out
pop
sbb
dec
cmp
test
aad
add
dec
out
push
lret
xchg
cmp
cmpsb
pushl
dec
ffreep
add
adc
mov
add
loopne
fsub
jg
jb
adcl
test
fistpll
sbb
mov
mov
mov
dec
aad
andl
xchg
and
xchg
das
sub
pop
or
repz
ljmp
add
out
xchg
lret
stos
inc
push
adc
cmpsb
nop
adc
stos
rorb
daa
mov
stos
cld
push
jmp
fisubrs
js
mov
dec
bound
mov
sub
inc
aaa
xor
xor
and
repnz
lret
push
imul
sbb
xor
out
enter
cmp
insl
sub
sub
shlb
push
mov
adc
sub
pop
inc
mov
or
xor
int3
addb
cld
or
dec
add
pop
adc
imul
xor
cmp
int
jnp
test
xchg
inc
mov
and
ret
pop
shr
ss
loopne
das
imul
inc
cmp
ret
js
dec
pop
mov
mov
js
adc
pop
enter
adc
lods
mov
in
mov
nop
pop
rcr
fiaddl
movsb
adc
and
push
xor
jbe
push
in
sbb
add
push
pop
ljmp
cli
in
pushl
pop
and
sbb
push
cmpsl
das
mov
and
jmp
pop
aaa
inc
pop
mov
mov
insl
rorl
fwait
pusha
rorb
arpl
cmpsb
mov
sbb
jg
push
bound
adc
dec
mov
dec
out
mov
cwtl
es
xchg
or
pushf
sti
lock
negb
cmpsl
and
lcall
sbb
ret
mov
cmc
mov
mov
test
in
ret
adc
aas
inc
pop
mov
fisttpl
out
jae
jl
xchg
mov
pushf
test
fld1
mov
or
data16
add
push
pop
cmp
dec
sbb
shll
cwtl
int3
ja
test
cmpb
mov
aam
pop
or
outsb
xor
mov
clc
call
pop
pop
mov
mov
js
inc
dec
dec
arpl
cmpsb
pop
and
cmp
movl
push
or
ljmp
iret
lahf
pop
and
mov
aas
shll
arpl
je
lock
jl
jnp
inc
cmp
out
rcll
xchg
popa
add
gs
push
inc
inc
push
cmpsl
xor
std
or
jg
push
fbstp
xor
mov
ss
pop
push
or
fcomps
out
jge
clc
cs
les
out
inc
inc
adc
and
fmuls
adc
push
xchg
and
arpl
aad
jecxz
sub
push
pop
mov
xchg
fistpll
into
out
jnp
pop
addr16
cmpsl
cs
jb
movsl
fcomi
push
jbe
lds
sbb
out
push
pop
or
sti
xchg
outsb
stos
pop
jo
mov
ja
fdivr
xlat
xor
adc
mov
mov
pop
adc
cmp
mov
scas
aaa
cwtl
adc
inc
mov
ficoml
inc
jmp
sub
and
cltd
pop
fwait
jmp
out
fisttps
ficomps
push
js
clc
mov
xor
nop
add
inc
cmp
jns
push
leave
movsb
shrl
mov
cmp
jge,pt
imul
fwait
add
pop
pop
jl
push
xor
int3
fxtract
pushf
push
scas
sub
adc
xor
cli
in
aas
stos
push
inc
out
and
xchg
or
in
or
fists
loope
out
xor
inc
ss
cwtl
cli
push
int
jb
faddp
insl
dec
iret
test
out
and
xchg
dec
test
xchg
pop
sub
ffree
pop
in
push
xchg
ja
ret
or
or
loop
or
outsl
ficompl
lcall
pop
cli
cmp
push
xchg
adc
inc
lahf
cmp
jle
jb
xchg
lcall
sbb
iret
add
jle
lret
dec
repnz
aad
inc
push
xchg
push
jmp
lock
cltd
leave
add
leave
dec
scas
repz
add
pop
fadd
mov
and
std
cs
in
xchg
ja
push
imul
stc
pop
je
xor
add
stos
outsb
outsb
lcall
jns
mov
addr16
out
xor
enter
sub
and
ret
or
mov
ss
out
sbbb
xchg
inc
sahf
ret
jge
stc
das
jp
add
and
mov
sub
jmp
ret
fwait
adcl
jecxz
inc
test
scas
movsb
sbbl
jp
push
xor
mov
push
adc
adc
shr
aas
ljmp
sbb
popa
notb
stc
jb,pn
pusha
shlb
cmp
pop
sar
pop
test
sbb
push
movsb
mov
mov
fcoml
mov
shl
pop
loop
pop
shrb
and
add
adcb
rol
insl
bound
pop
pusha
ret
mov
in
jmp
test
and
loopne
in
jge
fchs
repz
xchg
mulb
popf
hlt
pop
fstpt
mov
lock
ficompl
xor
fimuls
aas
sub
cmc
stos
ret
or
popw
test
std
push
push
pop
addr16
pop
cmpsl
iret
sub
das
movsl
xor
mov
mov
int
setno
fadds
lods
jl
adc
mov
sahf
enter
sbb
cmc
in
add
and
jmp
scas
pop
mov
fsubr
call
push
jno
lock
fdivrs
sahf
add
sbb
jno
adc
pusha
or
or
xor
xorl
insb
lods
sbb
cld
sub
aam
jne
jb
jb
stc
sarl
lret
test
mov
mov
icebp
out
inc
mov
iret
push
repnz
pop
int3
dec
js
fxtract
adc
jae
stc
lahf
loopne
gs
jb
fstpt
negl
rcrb
cltd
add
push
test
mov
mov
xlat
pop
pop
mov
xor
and
and
out
fcmovnu
mov
mov
push
inc
sub
test
mov
mov
mov
jae
inc
inc
sbb
pop
xchg
cs
mov
ret
rcr
adc
or
out
jle
hlt
xlat
sti
jb
push
test
jmp
fwait
dec
shll
sti
and
iret
push
movsb
and
jb
push
adc
xchg
fs
inc
inc
jmp
lcall
notb
addr16
stos
fsubr
mov
fdivrs
mov
emms
fiaddl
in
mov
lcall
movb
adc
fbld
outsb
test
mov
fsub
pushf
and
xchg
xor
mov
pop
leave
mov
push
xor
mov
inc
xchg
mov
inc
std
pop
sbb
push
fisttpl
xor
or
add
jb
imul
ficomps
adc
popf
pop
xchg
jne
or
mov
jg
repnz
fldl
push
stc
ret
movsl
stos
add
mov
xor
pop
pop
push
xchg
into
repz
mov
int
mov
pop
dec
out
jg
test
mov
fcmovbe
mov
mov
cmp
sub
outsb
addr16
mov
add
cmp
cmovle
std
pop
adc
fistps
aam
test
jge
and
movsl
pop
jns
sbb
push
insl
mov
lret
or
stos
and
lret
shll
or
xor
mov
adc
push
xchg
inc
jecxz
icebp
fimuls
aaa
aad
add
in
xlat
cmp
lret
out
inc
rcr
lcall
bound
sbb
lret
out
cmp
adc
xchg
and
jg
mov
cmpsb
xchg
mov
sbb
inc
mov
sub
push
shll
incl
and
adc
mov
xchg
arpl
sub
push
sarb
lahf
xchg
fmulp
and
sub
and
dec
in
cmp
xor
adc
pop
stos
subb
shll
fcompl
fsubs
popf
xor
or
fwait
jg
pop
add
and
movsb
test
and
jne
xchg
stc
cmp
jns
lea
sub
mov
out
sub
inc
xchg
test
and
push
inc
rcl
mov
mov
push
dec
mov
jne
addr16
mov
fidivs
inc
mul
or
ljmp
add
push
ljmp
mov
xchg
cmpsl
pop
adc
adc
pusha
jnp
pop
cmp
sti
mov
popa
pushfw
dec
fdivrp
adc
and
sub
sbb
sub
jmp
outsl
and
mov
inc
push
cs
mov
scas
stc
rcll
xlat
xchg
cmc
push
xor
dec
mov
push
pop
and
std
dec
pop
lock
or
or
ja
hlt
sbb
mov
shlb
loope
jle
push
xchg
enter
enter
jge
roll
mov
cwtl
subl
inc
ljmp
int3
and
rolb
sbb
adc
push
rorb
pop
sbbl
hlt
movsb
adc
rcrl
mov
les
stc
sub
test
in
out
xchg
hlt
idivb
lret
push
mov
or
and
xor
cmp
mov
outsb
inc
push
and
pop
movsb
dec
into
shlb
and
jo
cmpsb
sub
enter
mov
push
dec
fmull
inc
mov
and
imul
sbb
sub
scas
ret
lea
es
adc
imul
sbb
mov
push
movsb
inc
mov
mov
sti
cltd
sub
adc
jmp
test
jmp
out
cmp
pusha
roll
cltd
jmp
dec
cmp
aam
or
push
lock
sbb
jg
out
mov
hlt
sub
mov
mov
xor
daa
and
and
and
outsl
xchg
or
jmp
xor
jl
nop
fwait
shl
aas
aaa
jle
mov
fisttps
cmp
cmp
out
push
pop
aam
jnp
inc
shr
sbb
sti
shlb
jns
mov
add
popa
jbe
and
daa
add
repz
pop
lods
jl
shrb
ret
cli
fisttps
das
inc
xchg
sbb
shll
sahf
lahf
pop
jge
and
or
or
scas
mov
dec
int3
dec
mov
les
push
int3
outsl
movsl
pmullw
jbe
dec
pop
cmp
ljmp
jae
add
dec
inc
scas
or
iret
xchg
add
xchg
test
push
ret
sbb
loopne
mov
jmp
call
dec
jns
adc
lea
and
push
das
mov
jp
outsb
cld
scas
enter
pop
fstpt
mov
xchg
stos
mov
push
lea
out
mov
jg
and
inc
jae
add
mov
and
lock
jno
inc
enter
out
nop
pop
rorb
popa
fcoml
addr16
aaa
pusha
xchg
inc
test
loopne
rcrb
xchg
sbb
or
jge
pop
movl
stos
out
fst
dec
mov
inc
test
fsubs
sub
xchg
fistpl
jns
mov
inc
or
mov
xchg
or
mov
lock
fwait
cmp
jo
movsl
rcrl
insb
xor
sbb
pop
insb
outsl
cltd
push
adc
in
jo
fiaddl
imul
pop
sbb
pop
filds
in
cltd
repnz
jbe
andb
mov
cmpsb
adc
lret
push
outsb
mov
push
movsl
xchg
xchg
push
jmp
jp
insb
aaa
loopne
mov
ficoml
add
cli
aas
push
idiv
call
fmul
lea
push
roll
insb
rorl
sub
and
dec
or
loop
loopne
movsb
bound
movsl
into
sbb
and
aam
bound
test
dec
pop
push
xor
daa
xor
xchg
lahf
std
pusha
dec
sub
jl
popa
rcll
cmp
pop
adc
popf
ss
adc
sub
repnz
std
or
lods
mov
test
cmp
mov
mov
movsl
mov
xor
cmpsb
xchg
inc
inc
jne
dec
ret
mov
aaa
and
notl
lcall
mov
and
jno
iret
mov
out
enter
jb
fst
cmp
or
dec
test
leave
or
in
push
adc
int
repz
fsubrl
in
sar
xchg
enter
dec
es
cmp
inc
stos
jle
inc
mov
mov
mov
xchg
and
adc
mov
dec
mov
in
pop
mov
nop
popf
aam
into
ret
inc
dec
sbb
or
neg
aad
push
fs
imul
sub
roll
lods
insb
cmpb
pusha
aaa
dec
mov
adc
rorb
push
pop
mov
cmpsl
jmp
or
or
and
inc
add
cmp
icebp
lods
push
out
popf
sub
cmp
iret
jb
gs
ret
jo
and
xchg
pusha
test
lds
xchg
add
enter
pop
into
push
inc
shr
ljmp
fwait
push
sbb
inc
inc
nop
mov
popfw
in
out
sub
push
jge
rcrb
xchg
fbstp
mov
add
imulb
sub
cwtl
mov
push
adc
mov
aad
mov
sahf
ficompl
jge
inc
fwait
sbb
mov
hlt
sahf
mov
call
sub
lret
hlt
dec
test
mov
adc
xchg
mov
dec
jae
push
jo
mov
jae
inc
in
pop
mov
btr
push
xchg
ds
push
insl
inc
rep
insb
xchg
sub
filds
pop
xor
jmp
clc
popa
subb
push
mov
push
scas
cli
mov
test
mov
mov
xor
push
mov
cmc
jl
enter
jb
cli
test
jbe
xor
mov
arpl
lods
and
out
mov
or
xor
in
xchg
pop
mov
adc
xor
ljmp
and
xor
fistl
ja
sbb
iret
fwait
cld
jb
inc
xchg
clc
sbb
xor
insb
mov
mov
jae
xor
add
mov
shr
mov
add
movsl
xchg
and
lret
xor
aaa
mov
sbb
or
sub
cli
adc
adc
jns
mov
rcr
jae
sub
sbb
xchg
xchg
lcall
cmp
pusha
js
test
jns
idivb
cltd
shl
xor
xor
pavgw
add
push
test
dec
or
je
cltd
sbb
mov
pop
xor
sbb
imul
jno
addr16
pop
xchg
xchg
pop
fists
in
sbb
scas
rorb
pop
cwtl
and
adc
inc
or
pop
pop
gs
fucom
cmp
mov
test
adc
fsubrs
xor
adc
cld
sbb
aas
out
jae
in
ds
mov
sub
inc
mov
sbb
fldt
out
cs
lds
imul
xchg
cmp
cwtl
test
dec
in
pop
xchg
daa
jo
jp
ret
addr16
inc
aaa
cmpsb
xchg
dec
clc
mov
mov
and
mov
dec
test
xchg
daa
stos
popa
jecxz
push
subl
fwait
fwait
sub
xor
stos
add
dec
daa
push
fistpl
mov
les
imul
test
sbb
dec
xor
pop
dec
inc
lahf
sar
cli
rcrl
pop
add
xor
jmp
push
movsl
inc
mov
imul
lods
xchg
jb
subb
in
mov
xor
in
pop
daa
or
pop
cmc
jb
adcl
loop
jb
and
sub
adc
xchg
out
xchg
jno
lods
xchg
sbb
push
data16
pop
arpl
stos
add
test
lock
xchg
push
pop
xchg
cli
and
in
lahf
daa
sbb
sub
js
sbbl
mov
arpl
icebp
inc
out
or
test
stos
mov
dec
xor
inc
or
movsl
test
daa
sub
lahf
dec
xchg
imul
roll
pop
fisubl
lock
movsl
mov
dec
ret
push
data16
mov
gs
and
sbb
or
mov
pushf
insb
jne
or
add
lods
inc
in
sbb
push
mov
loopne
pop
jp
mov
or
cli
nop
enter
or
push
shrl
add
jmp
adc
out
pop
xchg
repz
jae
test
pop
pop
loope
mov
and
add
ljmp
dec
mov
inc
pop
sbb
ja
jno
adc
dec
pop
pop
imul
scas
jno
inc
js
mov
into
cmp
les
fninit
or
mov
inc
mov
push
xchg
jg
out
sub
xor
lea
mov
into
sbb
cld
rolb
xorb
cld
repnz
xlat
cld
fcoml
dec
lea
sbb
aam
lret
ljmp
fcoms
pop
xor
ja
enter
test
push
fcmovbe
push
xchg
xor
mov
je
jge
jmp
inc
or
jp
xadd
or
sbb
addl
xor
add
mov
add
cltd
or
cmpsb
fldl
cmc
sbb
jne
sarl
loop
push
pop
cld
mov
mov
popf
jmp
das
xchg
mov
insl
mov
outsl
push
imul
add
xchg
xchg
add
sub
sub
xchg
and
xchg
dec
sti
rcll
jb
xchg
sbbb
sub
arpl
adc
sub
xor
mov
push
sarb
subb
xor
or
pop
or
ja
nop
dec
mov
cmp
sbb
adc
cmp
in
imul
jnp
push
shrl
shl
push
nop
andl
push
push
mov
and
mov
lods
push
js
and
push
cld
inc
jns
pop
adc
aaa
jnp
ret
xchg
aaa
mov
adc
jns
fisubrs
fwait
loope
pop
lods
les
or
insl
jp
in
pusha
push
and
xlat
or
std
cmc
in
ja
pop
pop
loop
cmp
cs
pushf
lret
es
ss
sbb
adc
movsl
xchg
push
test
into
and
lret
shrb
sti
aas
mov
pop
jne
mov
jl
test
dec
dec
cmc
cmpsb
cmc
rolb
sbb
cli
test
out
daa
and
dec
sub
rorl
aaa
ret
movsb
pop
xchg
arpl
fucomi
push
loope
xchg
les
out
popl
popf
out
sub
mov
mov
lods
sahf
fstl
cmp
lock
adc
jle
xchg
mov
cmp
packuswb
jmp
lret
test
or
mov
jmp
aas
push
add
scas
mov
outsl
push
pop
jns
repnz
dec
inc
test
dec
std
pop
xlat
dec
arpl
dec
std
add
adc
pop
inc
pop
out
lods
out
xchg
mov
sub
cmp
dec
aad
mov
mov
dec
scas
mov
dec
pop
and
cmpsb
pop
and
sbb
mov
gs
rol
shll
xor
mov
push
adc
xor
adc
insl
xchg
clc
mov
add
fs
imul
stc
stos
and
xlat
lods
ds
xchg
jecxz
enter
mov
rep
stc
jnp
fistpll
std
into
shrl
repz
int
dec
es
cmp
test
jo
mov
jp
sbb
mulb
jae
or
xchg
fdivrl
and
inc
pop
cmp
jg
popf
cmp
jae
pop
push
pop
or
adc
mov
push
add
addps
insb
jp
mov
xor
loope
sub
push
xchg
mov
lea
add
into
enter
sub
dec
push
or
xlat
push
enter
xchg
sub
fwait
pop
les
sti
inc
jge
ss
loope
mov
icebp
std
int
sbb
repnz
imul
test
inc
jl
rclb
jg
mov
ljmp
jl
stc
call
dec
cmp
or
push
mov
shr
ljmp
dec
jle
sbb
xor
pop
inc
inc
jb
leave
mov
inc
push
push
lods
jb
sub
adc
add
dec
mov
push
iret
sub
push
test
rcl
jo
fstl
xor
mov
icebp
cmp
or
std
xor
les
negb
mov
bound
pop
push
lds
add
adc
fcoml
push
cs
xor
mov
mov
inc
daa
stos
adc
inc
not
mov
sbb
out
lds
jnp
loop
imul
jmp
cmpsl
cmp
clc
or
jmp
inc
and
xchg
and
jbe
xor
xlat
push
jb
sub
scas
insb
xor
dec
adc
lahf
dec
and
or
mov
jo
cmp
and
xchg
rorb
das
fnstcw
add
adc
ja
mov
mov
cli
sbb
adc
push
push
jl
fwait
sti
cmp
sbb
incl
scas
mov
sub
mov
scas
and
push
mov
shlb
xchg
mov
pushw
fnstenv
or
mov
ljmp
loopne
test
cmpsb
idiv
xor
pushf
mov
or
mov
movsb
mov
mov
sti
mov
loop
jae
incb
mov
sub
loope
add
sbb
iret
or
lahf
sarl
aas
xchg
push
dec
adc
pop
in
dec
icebp
pop
jns
add
imul
in
lret
cld
aaa
sub
jge
jbe
mov
iret
fimull
xchg
ljmp
mov
adc
sub
call
pusha
ret
je
decb
fld
enter
test
jecxz
add
unpckhps
sbb
or
sahf
pop
adc
mov
jecxz
repnz
add
aad
fs
cmp
mov
add
sbb
popa
xor
stc
sbb
lret
xchg
pusha
jo
in
add
xchg
leave
pop
inc
dec
cmp
xchg
lcall
push
pop
shl
push
mov
mov
js
sti
enter
loope
mov
push
outsb
lcall
mov
aaa
rclb
rorb
inc
push
punpckhbw
jb
shr
jnp
inc
or
ret
cli
dec
test
mov
imul
inc
fistpll
pop
mov
mov
pushf
clc
inc
js
push
cltd
pop
sub
rcll
ffree
adc
rol
or
sbb
je
fmul
rol
inc
xor
sti
mov
or
bound
cltd
int3
repz
mov
int3
out
loopne
bound
cli
adc
cmp
ficoml
bound
scas
lret
inc
jge
mov
outsl
jge
repz
jns
xchg
and
inc
mov
ljmp
mov
cld
out
mov
stos
pop
cld
sarl
sbb
lcall
xchg
adc
lock
pop
les
pop
add
jns
mov
orb
aaa
fwait
push
xor
and
and
mov
outsb
sub
and
movsl
sub
les
xchg
inc
in
push
adcl
xchg
adc
adcb
loopne
xchg
lret
scas
aaa
ret
ss
jne
ja
jg
mov
stos
insb
pop
cmpsb
mov
dec
add
xchg
pop
sbbb
ret
sbbl
out
inc
mov
pusha
mov
rcrl
sbb
sti
jo
shlb
fdivrl
sbbl
jnp
inc
mov
pushf
loop
cmp
and
push
jmp
cmp
push
dec
imul
pop
cmp
pop
inc
les
pop
icebp
xor
lods
cmp
inc
cmp
mov
popa
lock
stos
cmp
mov
push
aas
add
das
and
sbb
stos
or
cli
adc
sub
test
xor
in
xchg
inc
push
loop
xchg
pop
notb
xlat
sub
mov
outsl
cltd
ret
repz
shll
xchg
xor
loopne
dec
rcrb
cli
push
push
test
inc
mov
cmp
mov
xor
fwait
mov
push
incl
gs
xor
fmul
mov
clc
pop
jbe
push
mov
cld
roll
push
mov
leave
cmp
push
fsubr
test
fnop
inc
sub
pop
adc
mov
and
push
dec
add
push
or
std
inc
lock
pop
andb
mov
rep
leave
jmp
cmpsb
pusha
and
jp
pop
jno
movsl
cmc
jb
adc
bound
xor
fistps
pop
movsl
dec
test
insb
inc
test
lret
xchg
mov
push
push
xchg
jns
lock
stc
cmp
adc
fs
mov
adc
rcrl
xchg
sti
pop
jmp
shl
lret
jo
fdivr
cmp
adcb
xchg
mov
push
pop
rol
sub
dec
clc
js
push
jl
push
jbe
call
mov
sub
dec
jge
out
mov
sbb
add
push
leave
icebp
std
cmp
popa
and
in
lock
insl
iret
mov
cmp
xchg
jp
jmp
mov
jb
jnp
iret
shrl
or
mov
lret
dec
scas
jecxz
loopne
sahf
fs
xor
push
push
icebp
cli
fwait
aas
push
mov
sahf
popf
xchg
sub
pop
pop
add
jnp
push
sbb
jecxz
in
dec
fdivrs
fiaddl
mov
sbb
sub
fldcw
sbb
cli
ds
jns
xor
std
imul
insl
lock
rol
and
shlb
cmp
mov
jbe
push
xor
rcl
bound
push
pop
push
xchg
cmp
sub
nop
mov
cmp
push
mov
mov
and
mov
es
jecxz
ljmp
ljmp
cs
in
xchg
clc
cmp
aad
movsl
push
or
jb
popa
xor
sbb
fnstcw
jl
and
iret
out
and
dec
xchg
dec
xchg
mov
das
lahf
and
push
or
nop
mov
cmp
ljmp
lods
pop
xchg
sbb
fidivs
roll
leave
mov
scas
test
adc
test
inc
xchg
dec
mov
and
imul
mov
cmp
push
es
pushw
lods
fstps
in
aaa
scas
add
sbb
xchg
outsl
jg
xor
add
push
inc
sub
and
add
sbb
lds
sub
sbb
cmp
xor
sub
movsb
movsb
jno
push
push
fwait
fwait
sub
aam
jmp
clc
fistl
xor
call
test
xchg
and
xchg
fildl
and
or
sahf
pop
mov
sub
cltd
mov
test
jo
std
sbb
orl
gs
mov
sub
xchg
push
loop
pavgw
testl
sti
inc
dec
mov
dec
loop
fimull
xchg
sub
xor
pop
jo
mov
sbb
and
mov
pop
cwtl
push
pextrw
mov
cmc
xchg
call
inc
ja
popf
das
pop
scas
jo
outsb
cmp
test
stos
adc
adc
ret
enter
jb
xor
mov
repnz
sub
rcr
pop
or
inc
cld
mov
xchg
pop
sub
xchg
bound
pop
pusha
lea
sbb
fmull
inc
stc
jbe
sti
pop
loope
ss
outsl
xor
sbb
es
jl
ds
add
jp
xchg
add
rcl
and
add
cmp
aad
es
push
mov
and
insb
or
rcrb
mov
xor
sub
or
lcall
inc
insl
mov
loop
push
rorb
or
mov
rolb
jne
adc
cmp
out
dec
cmp
push
loopne
jo
inc
mov
inc
adc
fsubr
pop
das
ret
jecxz
mov
enter
fnstcw
stos
push
rcll
daa
cmp
fdivp
ret
cmp
dec
je
jnp
repnz
xchg
lods
sbb
dec
popf
and
data16
bound
repz
mov
out
mov
popa
sbb
adc
int3
mov
les
sbb
xchg
ss
jl
lods
mov
movsb
jle
aam
adc
xchg
imul
out
addr16
xor
not
and
arpl
jge
mov
pop
data16
xchg
push
test
cmp
pop
out
xor
sub
mov
gs
xchg
inc
sub
cmpsl
lods
leave
xchg
adc
rcrl
xor
inc
dec
in
fucomi
aam
in
jg
inc
add
imul
clc
test
loopne
dec
sbb
test
mov
fwait
pop
mov
mov
lahf
lock
sarb
in
cmp
xchg
lods
sbb
push
pop
mov
xchg
mov
movsb
std
mov
pop
in
cltd
fucomp
cld
stos
fimuls
insb
mov
or
ljmp
int3
mov
adc
push
movsb
sbb
mov
orl
lret
imul
jae
stos
xor
mov
mov
xchg
sub
nop
and
adc
mov
testb
push
insb
pop
xchg
push
fists
mov
xor
xchg
sbb
ret
cld
mov
cmpsb
imul
addl
mov
outsb
jecxz
push
and
xchg
xor
xchg
lds
or
int3
cwtl
xchg
imul
xchg
testl
push
std
pop
and
mulb
adc
fnsave
sub
add
xchg
stos
xabort
mov
scas
xchg
out
or
icebp
cwtl
test
mov
sbbb
in
sti
test
inc
pop
or
cmpsl
cmp
pop
xor
call
pop
divb
fwait
and
add
ljmp
xor
lret
fdivs
fcmovne
in
or
lock
mov
leave
lret
sub
xor
mov
data16
or
shrb
add
jl
inc
test
mov
iret
cmc
loop
xlat
pop
mov
pop
scas
pop
std
sub
mov
je
int
ss
push
ret
iret
dec
arpl
add
aad
psraw
nop
bound
outsl
push
ret
xor
mov
test
dec
imul
xchg
inc
dec
jnp
mov
jae
jg
cmc
pop
or
imul
xchg
xchg
jns
pop
into
xchg
ja
fidivrl
enter
sub
lods
jb
daa
fdivs
xchg
int3
aas
pop
adc
jo
mov
xchg
out
push
insb
push
push
xchg
jl
mov
push
mov
cltd
bound
in
adc
mov
fnsave
arpl
add
push
in
dec
dec
sub
jmp
mov
xor
adc
jl
jge
test
repnz
lret
sub
aas
test
or
and
cs
jb
je
jle
push
and
stc
push
in
pop
xchg
cmp
popa
or
jmp
dec
mov
popf
shl
mov
cltd
add
stos
pop
aad
pusha
lret
lret
in
imul
popf
dec
cmp
stos
fwait
add
add
pop
cmc
out
es
xchg
ljmp
jg
repnz
fdivl
xchg
aam
pop
mov
clc
loop
rcr
cmp
sub
int3
push
repz
test
cltd
aam
cmp
in
mov
insb
rolb
dec
mov
push
push
jnp
xor
mov
sbb
lods
xchg
inc
inc
int
push
adc
loop
sub
cmpsb
cmp
iret
shll
fldenv
insb
in
xor
hlt
loopne
mov
adc
hlt
xor
cli
adc
outsb
out
mov
call
mov
pop
mov
cs
jb
sub
and
imul
jbe
jmp
add
mov
cmp
dec
and
dec
mov
pop
decl
repnz
pop
push
jb
sub
repnz
xor
xchg
imul
hlt
fisubs
and
std
insl
mov
pop
jg
aas
ja
inc
mov
dec
loope
movsl
outsb
sbb
push
adc
pop
mov
lods
addr16
test
jae
pop
imul
mov
and
push
xor
pusha
inc
dec
inc
stos
push
sbb
ret
xchg
cltd
adc
mov
cli
ficoml
fistl
clc
insb
sbb
jmp
enter
loopne
or
add
testb
shlb
mov
insb
push
sbb
fstpt
mov
pop
inc
fld
adc
imul
ret
adc
pop
xor
adc
jecxz
push
dec
and
movsl
and
cmp
clc
mov
adc
insl
xchg
dec
sbb
js
cmp
fisubs
repz
push
lock
pushf
js
sbb
xlat
and
adc
roll
lods
lods
mov
divb
xchg
and
cmp
sbb
push
push
cwtl
or
sub
or
and
aam
imul
jnp
icebp
mov
leave
ret
insb
xchg
ficoml
pop
push
aam
fistpll
mov
mov
ds
in
inc
jns
cltd
pop
leave
dec
lock
sti
push
lea
out
fs
test
sub
imul
sar
shr
cmpsl
shr
ja
rolb
lods
mov
jns
and
aad
iret
mov
push
jge
fdivs
push
add
test
popa
in
popf
nop
push
in
push
adc
dec
sub
leave
sub
dec
xchg
push
jns
inc
inc
add
jle
mov
xchg
cmp
lods
shll
and
cs
mulb
inc
xchg
xor
adc
jge
xor
fnsave
mov
pop
mov
fcomps
inc
or
mov
fdivl
iret
mov
insb
jb
dec
xor
push
out
and
jp
xor
add
inc
rep
and
dec
je
dec
insb
push
jo
fiaddl
push
data16
jo
pop
inc
inc
mov
addl
scas
lret
gs
sub
adc
lcall
mov
call
out
sub
sbb
jge
xchg
cmp
pop
push
jo
and
xchg
add
imul
dec
leave
sub
fsubrl
mov
outsb
into
out
adcb
inc
xchg
sahf
rclb
into
int
cmp
mov
les
push
sbb
cmpsl
xor
fisttpl
mov
arpl
jecxz
in
or
pop
imul
sub
repz
add
out
and
dec
ja
scas
and
ds
sbb
adc
aad
jle
jbe
or
pop
int
adc
push
lods
xchg
jmp
fwait
sub
cli
inc
add
jg
and
mov
jno
cmp
push
inc
or
inc
push
inc
mov
out
sbb
or
in
ret
and
cld
scas
mov
dec
pop
and
mov
ja
pop
mov
push
movsl
push
insl
lods
ljmp
push
mov
adc
call
mov
push
inc
addl
adc
jg
lods
leave
adc
sbb
sub
cld
fstpt
adc
or
fiadds
mov
and
sbb
ret
sub
loop
sbb
and
int
cmpsl
pop
adc
jecxz
xchg
xchg
mov
xor
pusha
jb
mov
fists
repnz
cwtl
addr16
les
push
repnz
xchg
mul
lods
sub
xchg
xchg
add
movsb
testb
mov
mov
add
in
xor
jp
fisubrs
aam
push
xor
scas
pop
mov
add
jl
xchg
stos
scas
xor
dec
shll
sub
cmp
jmp
cwtl
sub
jnp
lods
sbb
xchg
jnp
xor
ja
out
dec
das
mov
inc
push
ja
repnz
ljmp
xchg
cmpsl
loop
mov
arpl
dec
jno
push
and
mov
arpl
stos
gs
fwait
and
adc
mov
sub
xchg
iret
test
out
jo
mov
mov
aam
addr16
out
mov
xchg
shl
pop
scas
mov
shl
dec
sahf
iret
fsts
ret
fdivs
sarl
ss
mov
enter
rolb
adc
mov
sahf
in
daa
imull
sbb
test
inc
popf
xlat
mov
not
mov
xchg
pop
sbb
jb
pop
sub
sti
pop
sbb
fisubrs
shlb
mov
pop
mov
sub
xor
and
sub
mov
out
adc
mov
cmp
jmp
jnp
or
icebp
rolb
lds
nop
push
scas
repnz
xchg
push
dec
cmpsb
add
js
xchg
aam
test
push
faddl
andb
ficoms
fisttpll
pop
dec
jns
sub
sbb
or
mov
enter
xlat
outsl
push
sub
and
push
push
je
insl
or
push
pop
stos
adc
mov
lods
out
push
mov
adc
pop
inc
into
sub
jnp
in
pmulhw
shl
pop
mov
out
add
inc
stc
hlt
mov
sub
clc
out
shll
add
popa
lret
mov
mov
push
push
imul
loopne
mov
bound
cld
pcmpeqd
les
lahf
sbb
cmp
sbb
dec
daa
dec
sbb
inc
ljmp
mov
mov
bound
mov
sbb
xor
pop
test
ja
lods
inc
sbb
int3
push
inc
sub
data16
dec
sbb
add
pop
popf
sub
lods
pop
loop
rol
mov
xchg
cmp
dec
out
lret
int
sbb
pop
xchg
and
mov
cltd
add
js
mov
jmp
inc
mov
cmp
sub
pop
xor
jns
and
mov
imul
fisubs
or
mov
fcomps
or
js
inc
movsl
push
pop
fimull
pop
mov
sbb
mov
push
sub
rorl
and
and
and
mov
leave
sub
icebp
xor
xchg
cmp
xchg
cli
clc
push
cmp
and
pop
aaa
cmp
xchg
cwtl
ficompl
pushf
test
cmp
xchg
or
rcrb
push
xchg
and
add
enter
stos
xor
sub
loopne
xchg
pop
pop
push
aaa
sbb
push
in
mov
cli
fwait
call
ret
sbb
repz
repnz
mov
pop
mov
ljmp
inc
add
aas
fwait
jne
cltd
ja
adc
enter
into
jle
addr16
cmp
sahf
mov
outsb
jmp
cld
cmp
adc
adc
imul
sahf
cltd
out
andl
or
push
push
std
push
subl
and
cmp
xor
out
sbb
sbb
mov
les
lods
sar
lcall
sub
xchg
push
shr
jo
pop
cmp
call
adc
shll
lds
xorl
push
fldenv
and
push
mov
mov
jmp
shl
mov
dec
je
pop
mov
into
cld
xchg
adc
icebp
inc
sub
outsl
push
scas
lret
sbb
mov
mov
pop
bound
shl
add
in
xchg
jbe
fstps
cmp
jmp
mov
cmp
aaa
sbb
stos
inc
test
aad
mov
push
and
add
lret
inc
test
insl
adc
je
push
dec
lock
shrl
enter
icebp
roll
scas
mov
sub
fmul
mov
rcl
retw
insl
pushl
sbb
mov
icebp
cmc
test
mov
rcr
sub
jle
jecxz
clc
xor
std
dec
sub
aaa
xor
jno
hlt
imul
arpl
adc
dec
mov
stos
sbbl
insl
cmovbe
out
scas
pop
fs
lea
mov
xor
imul
xlat
mov
fisttpll
adc
shrb
leave
loopne
sbb
clc
and
int
inc
xchg
loopne
test
cwtl
xchg
cmp
inc
lock
imulb
adc
and
fsts
adc
mov
inc
insl
inc
or
mov
cld
inc
scas
jno
cwtl
imul
cmc
aad
or
xor
loopne
adc
jbe
test
mov
cmp
sarl
sbbl
jp
neg
fstpt
pushf
nop
lock
add
jns
repz
dec
aaa
insl
pop
ja
add
xor
xchg
cmp
add
push
addr16
fldenv
mov
insb
mov
loopne
mov
jmp
sahf
mov
push
push
int
mov
daa
cmp
xchg
jle
pop
call
jae
imul
in
jb
out
cmp
pop
outsb
incb
out
push
sub
add
jne
stos
add
mov
inc
dec
iret
lret
test
and
sbb
orb
outsb
ja
inc
add
sbb
jl
call
jge
test
cmp
sub
push
add
inc
xor
out
mov
iret
cltd
iret
mov
push
pop
rorb
fidivs
into
push
inc
add
add
sub
sub
leave
and
xchg
iret
push
imul
lret
mov
pop
lods
push
mov
test
add
mov
pop
pop
adc
mov
pop
in
stos
jp
xor
fildll
gs
loope
test
cmp
pop
cmp
mov
popf
jnp
adc
cmp
leave
xchg
mov
mov
or
frstpm(287
dec
lods
xchg
cmpsl
repnz
push
fadds
fwait
andb
or
adc
test
mov
mov
mov
ljmp
jae
loop
adc
fildll
and
pop
cld
mov
cmp
xchg
jmp
push
inc
sbb
mov
add
and
enter
clc
pop
bound
scas
repz
gs
xchg
xor
imull
dec
adc
scas
mov
ljmp
lret
push
pop
push
les
incb
mov
dec
inc
push
shrl
aam
add
sarl
fisubl
imul
test
aas
jmp
adc
rcrb
popf
inc
jmp
movsl
in
mov
std
js
and
add
push
dec
xor
add
fidivrl
leave
push
push
xchg
inc
addr16
and
cli
push
sub
xchg
pop
inc
mov
xor
out
cmp
and
inc
arpl
sub
sub
arpl
in
mov
lock
sub
cmpsl
pop
popf
dec
pop
cmp
addl
and
cmpsb
push
psubusb
cmc
int
hlt
inc
addl
imul
and
ss
xchg
cmp
sbb
and
fdivrp
les
dec
dec
and
aas
jnp
int
pop
fnstsw
mov
mull
aad
xchg
aas
ficomps
pop
mov
sbb
rcl
jle
daa
in
out
inc
sbb
repz
iret
into
in
scas
cmp
sub
adc
dec
hlt
pop
xchg
or
mov
test
sbb
rolb
lahf
jge
out
push
cmp
sub
cs
pop
lret
ja
sub
mov
mov
imul
pop
scas
stc
pop
push
add
pop
jmp
les
jle
mov
mov
push
cmpsb
inc
xor
push
cmp
mov
lods
flds
int
sarb
dec
adcb
fs
cmp
cli
dec
rolb
jg
push
in
push
in
cmp
cwtl
sub
mov
ret
es
sbb
xchg
push
imul
or
pop
outsl
push
jmp
sub
jmp
scas
cltd
mov
dec
enter
cmp
or
gs
mov
mov
mov
sub
push
push
dec
xchg
and
push
inc
gs
push
lea
out
cmpsb
mov
fiadds
cmpsl
cmp
push
lcall
cmp
add
dec
mov
mov
lret
lret
test
outsb
sub
clc
out
adc
mov
lods
not
fsubrs
adc
add
fmuls
jg
pop
movsl
icebp
mov
out
sbb
push
loope
js
inc
cltd
shlb
sub
jbe
lcall
icebp
arpl
lret
cmpsb
pusha
lods
call
cs
and
xchg
jns
inc
lcall
xor
pop
mov
mov
jae
in
sub
and
aaa
adc
pop
dec
xchg
pushf
cmpsl
test
jno
sub
jo
shll
insb
ja
or
xor
push
jl
jle
mov
mov
cltd
dec
jp
jno
leave
divb
adc
xchg
pop
pop
push
mov
aam
pop
cmpsb
push
push
je
bound
add
in
iret
movsb
stc
mov
mov
xchg
rcrl
fnsave
scas
jne
aaa
dec
fsubs
int
repz
test
fs
inc
cltd
sub
adc
pop
out
mov
mov
ja
filds
adc
adc
sub
and
fwait
push
test
pop
pop
ds
inc
jmp
add
outsb
inc
pop
nop
insb
das
fisttps
out
mov
xchg
clc
movsl
mov
mov
lods
bswap
jb
lret
pop
mov
or
add
mov
cld
je
sbb
adc
jb
into
adc
or
ror
js
mov
jp
sbb
scas
mov
mov
cltd
test
and
aas
bound
mov
pusha
faddl
ret
sahf
jge
push
cli
push
push
fstps
stos
data16
jl
scas
mov
cld
mov
cmp
mov
xchg
jmp
stos
jecxz
hlt
cltd
out
loop
mov
ljmp
aam
dec
pop
ljmp
and
jne
xchg
mov
rcll
lcall
sub
mov
out
adc
outsb
pop
adc
movsb
insl
push
lods
push
inc
popa
xchg
or
sti
hlt
outsl
cli
ficomps
or
lds
add
repnz
ljmp
cmpl
mov
lret
cmpsb
sub
daa
fisttpll
and
rcll
xor
xchg
cmp
into
pop
ss
sbb
and
es
sahf
inc
and
jnp
xor
jmp
inc
pop
mov
cmp
std
push
pushf
mov
les
push
inc
jge
std
fists
cmc
scas
leave
pusha
ja
pop
xlat
jl
push
popf
rorl
test
pop
cmp
add
sti
and
mov
push
mov
test
dec
xlat
jmp
or
ret
pop
outsl
stos
jg
loopne
stos
mov
push
pop
jno
movsl
addr16
insb
scas
xchg
rcll
xchg
adc
cmp
aam
cmp
iret
and
jae
sbb
aad
lock
es
push
jp
roll
loop
aas
mov
jne
jp
xor
push
fbld
jle
sub
pop
mov
leave
insl
mov
repz
lds
fwait
mov
aam
sub
add
cs
adc
mov
push
dec
sbb
xlat
cmp
pop
mov
or
cmpsb
andb
or
jns
in
jl
sbb
xlat
dec
or
jp
inc
sub
cs
push
dec
adc
cmp
ja
jge
insb
jno
mov
mov
dec
xchg
xchg
and
subb
dec
mov
fwait
sahf
fldcw
es
loop
jl
mov
loop
loop
test
xchg
cmp
add
adc
and
and
dec
subb
jns
mov
or
pop
lret
jae
jne
xchg
iret
add
mov
push
ljmp
popf
mov
lea
dec
leave
test
cld
out
mov
add
pop
test
xchg
xor
pop
mov
mull
adc
inc
roll
sub
fistl
jne
jno
dec
les
gs
pushl
test
jo
dec
call
mov
fsub
jl
xor
mov
xchg
orb
ret
sbb
sahf
xor
js
mov
fistpl
add
and
lds
xchg
fstps
jb
cmpsl
sub
xchg
xchg
outsb
sbb
outsb
mov
lret
push
orl
lret
mov
push
cmc
mov
ja
add
and
mov
and
mov
mov
ja
fdivrl
pop
and
adc
adc
pop
xchg
and
sub
push
xchg
lock
insl
dec
les
imul
aam
pushf
mov
sub
xor
sahf
pop
sbb
ret
pop
pop
mov
jne
cmp
mov
popa
and
inc
xchg
cmp
iret
jp
push
inc
pushf
pop
jne
int3
or
fcoml
dec
ss
jl
imul
lods
shlb
and
mov
lock
movsb
mov
adcb
xchg
test
mov
out
adc
test
pop
jmp
repz
jl
and
mov
inc
and
clc
dec
pop
mov
dec
sub
lcall
repz
mov
insl
fcmovb
xchg
dec
rorl
insb
loopne
ja
dec
push
pop
sbb
adc
dec
pushf
mov
lret
out
repz
nop
test
sbb
push
movl
pop
imul
pop
push
jno
sub
bound
outsl
inc
jne
xor
adc
adc
aad
loop
xchg
fistpl
push
jge
cmp
dec
lahf
test
cmpsl
add
xchg
loopne
jnp
xchg
insb
lea
test
rolb
in
stos
iret
push
pop
cmpsl
lods
push
jmp
and
mov
mov
mov
into
inc
dec
imul
xor
push
mov
jp
into
aad
xchg
in
pop
mov
xor
scas
imul
loope
xorb
inc
mov
sti
push
out
mov
push
pop
mov
adc
push
pop
dec
sub
mov
aam
dec
mov
pop
scas
xchg
fcmovb
in
jl
call
xor
dec
outsb
add
popa
scas
push
fidivrs
test
notl
je
iret
ret
pushf
push
mov
jno
and
lret
cli
sbb
mov
cmpsb
inc
lahf
xlat
dec
push
jne
jno
std
push
mov
add
movsb
fcmovbe
movl
adc
fbstp
cmpsl
test
mov
mov
lret
jns
sub
insb
int3
dec
push
mov
jae
ss
xchg
pop
ret
cli
lods
pop
sub
jo
push
xchg
dec
pop
push
cwtl
pop
call
add
or
sbbb
and
pop
int
mov
sar
sbb
cmp
dec
aaa
les
es
mov
ja
mov
sub
push
mov
callw
scas
mov
aad
rcrl
and
jae
push
or
loope
fcomps
mov
data16
inc
stos
inc
jno
add
push
mov
shl
ss
ds
jb
or
popf
fsts
movsb
cmpsl
mov
jo
cmc
out
movsb
sbb
sbb
jl
or
das
push
movsl
jp
vmread
inc
lods
sub
fs
dec
jns
aas
pop
and
jno
movsl
into
das
js
iret
xchg
mov
test
mov
fdivl
nop
aam
in
jmp
xor
cld
aad
stos
lds
std
stc
pop
aaa
lahf
and
pop
sahf
loop
add
leave
fbstp
push
jle
nop
mov
fidivrs
fisttpll
adc
xchg
std
data16
xor
aad
cwtl
adc
or
shl
xlat
ja
inc
in
scas
xchg
jl
jl
jno
das
icebp
cmp
daa
cmp
cwtl
adc
imul
enter
int3
xchg
scas
enter
insb
mov
data16
sub
out
mov
adc
inc
out
lcall
inc
sahf
gs
ljmp
psubusw
mov
pusha
sub
fstl
mov
cwtl
cmp
mov
and
xchg
mov
jle
rclb
mov
fisttpl
stos
clc
adc
std
jg
and
pop
add
cld
mov
in
pop
push
and
bound
add
push
add
ljmp
mov
mov
dec
inc
sub
cltd
aaa
jno
adc
in
ret
subl
pop
xor
out
lret
icebp
xlat
adc
push
lcall
fwait
rcrl
notl
cmp
enter
add
pop
lods
mov
sbb
imul
dec
xor
in
fisubs
mov
dec
pop
jns
or
leave
insl
pushf
dec
rcl
lahf
dec
es
push
mov
mov
lea
mov
inc
adc
cmp
and
push
lahf
cs
mov
ss
lock
aam
loopne
sar
sbb
je
mov
fbstp
mov
push
xor
mov
add
fnstcw
xor
fwait
pop
push
mov
dec
mov
js
xchg
inc
add
add
jmp
pop
loop
pop
test
pop
in
or
mov
cmp
stos
mov
nop
dec
ret
cmp
push
sarb
in
or
cld
push
pop
mov
mov
or
repz
mov
sbb
sarl
lods
iret
xchg
pop
pushf
mov
andl
inc
lods
xor
mov
xchg
out
bound
jae
xchg
push
dec
mov
mov
xor
mov
inc
xor
push
lods
sarl
mov
and
inc
sbb
cmpsl
jne
mov
imul
inc
pop
jmp
dec
lahf
cli
cmc
bnd
int
insl
outsl
les
push
jo
adc
fisubl
jl
pop
jmp
add
sub
pop
add
mov
dec
shrl
les
jp
mov
xchg
pop
pcmpgtw
ficoms
cmpsb
xor
popf
icebp
fwait
pop
cld
sub
mov
sti
insl
adc
ret
pop
inc
xchg
cli
out
test
sub
mov
lret
and
in
add
sbb
ficompl
jmp
push
rcl
sbb
dec
sbb
inc
enter
push
add
sub
and
push
mov
cwtl
lods
cmp
xchg
sahf
adc
cld
sbb
add
xchg
and
out
pop
lret
add
mov
sub
pushf
clc
xor
pushf
sub
enter
mov
fisttpl
insl
jns
popf
gs
push
xor
jmp
inc
push
leave
mov
xor
or
subl
inc
and
cld
sub
pop
ret
push
popa
or
mov
jge
jns
aas
dec
pop
sahf
push
and
stos
fdivl
cwtl
xchg
push
sub
ds
stos
fmuls
mov
xor
xchg
loopne
in
shr
inc
ljmp
je
dec
mov
mov
cmpsl
mov
std
aam
loope
inc
test
scas
or
xor
fldt
mov
aam
lret
ffreep
repz
out
cmp
fnsetpm(287
cmp
push
and
push
mov
push
rclb
cmp
sub
dec
rcrb
sub
dec
dec
sub
jns
imul
lcall
jno
push
data16
mov
sbb
cmp
cmp
lcall
adc
lret
fs
xor
or
arpl
xchg
xor
sub
pop
jo
popf
ss
mulb
sbb
mov
jecxz
ja
hlt
pop
mov
mov
xchg
int3
and
shrb
fdiv
mov
hlt
sub
outsl
cmp
insl
fxch
call
jb
fcomi
mov
add
daa
addr16
mov
pop
cmpsl
cmpsl
les
inc
or
lock
inc
xchg
je
nop
fst
insb
in
push
add
iret
data16
pusha
aas
cmp
js
or
dec
jle
pop
int
in
dec
stc
xor
mov
enter
and
pop
data16
jo
add
cmp
and
js
mov
xor
sar
lahf
aaa
push
lahf
mov
pop
mov
xchg
sbb
andl
mov
out
dec
out
and
and
leave
mov
mov
jbe
mov
dec
push
fistpll
jp
add
fcoml
test
cmc
or
sbb
push
pop
lock
xchg
xor
cmp
jl
adc
lods
stos
fisttpll
sub
lahf
cmpl
mov
cmp
adcb
lock
xchg
shl
jle
cmp
test
fs
adc
jae
dec
cmp
push
mov
testl
sub
jo
xlat
xor
out
inc
int3
dec
test
pop
in
pushf
add
mov
push
mov
out
jmp
or
xchg
adc
and
jmp
adc
icebp
hlt
fisubrl
addr16
inc
stos
pop
lahf
cmp
push
test
sbb
bswap
popf
leave
mulb
out
out
cmpsb
mov
xchg
mov
in
insb
xor
sub
call
sbb
cmp
pop
cltd
xlat
sub
data16
jge
cmp
dec
xor
jl
test
lods
movsb
mov
mov
push
das
pop
sub
sahf
mov
xchg
inc
mov
jae
roll
push
bound
mov
sahf
movsb
add
movsl
imul
or
loope
ret
dec
add
negb
faddl
or
andb
cli
dec
pop
push
rorb
pop
jp
pop
sub
test
insb
dec
test
mov
pop
aas
push
xor
adc
addl
into
out
lods
test
stc
int3
cmp
jmp
and
and
inc
orb
push
scas
and
cli
jg
out
add
cli
adc
test
and
lea
cld
pop
out
lds
mov
xchg
das
pop
jb
aaa
push
cmp
scas
repnz
or
out
mov
jecxz
ds
push
or
ja
into
rol
push
les
jae
adc
xor
pop
push
jae
call
jnp
imul
fdivs
fistpl
push
lcall
subb
mov
cld
imul
xchg
xchg
sbb
push
mov
mov
enter
mov
push
and
fdivrs
es
icebp
int3
jmp
cli
sub
incb
shll
jne
out
lret
adc
push
sub
dec
mov
add
data16
cltd
das
jmp
mov
lods
dec
xor
sub
add
xor
cwtl
adc
sbb
xorb
dec
push
inc
out
xchg
fwait
fwait
adcl
fwait
or
outsb
addb
repz
adc
orl
mov
divb
fs
push
add
mov
push
ljmp
es
sub
dec
pop
inc
push
stc
addl
cmpsl
xchg
aad
mov
lds
inc
sub
popa
testl
hlt
leave
icebp
addr16
insl
mov
jo
dec
xchg
adc
std
shl
nop
imul
xor
push
scas
dec
dec
add
scas
pop
cmp
dec
dec
lock
add
bound
arpl
pop
inc
popf
sti
sbb
fisubs
or
cwtl
lahf
mov
iret
sbb
outsl
nop
push
into
enter
into
and
stc
addb
xor
inc
je
aaa
pop
enter
cmpsl
cmp
xor
cmp
ss
scas
sbb
sbb
sar
nop
jne
fs
sub
mov
jbe
jb
cmp
xor
xchg
xor
mov
lret
mov
xor
data16
mov
call
cmpsl
aad
mov
push
data16
push
add
pop
shlb
jl
cwtl
push
cs
push
cmp
lods
inc
cmp
cmp
mov
insb
ja
filds
xabort
inc
int
aad
or
adc
adc
pushf
and
xor
push
pop
adc
mov
or
mov
sbb
jmp
xchg
mov
adc
sub
stos
stc
pop
xor
sbb
sysret
lods
add
sub
pop
or
ficomps
mov
and
jmp
mov
arpl
cltd
push
mov
or
jmp
ljmp
mov
xchg
push
and
mov
arpl
push
dec
inc
push
sub
push
sub
xchg
mov
dec
pop
out
dec
cmpsl
xor
cmp
push
clc
jnp
pop
scas
cs
data16
xchg
ror
test
es
dec
imul
movsb
sti
leave
nop
mov
inc
sub
push
xchg
inc
jae
push
bound
jns
xor
push
es
fidivrl
mov
jbe
jge
mov
clc
lock
inc
call
mov
push
mov
in
xor
sbb
dec
or
into
das
mov
test
fistl
or
mov
mov
hlt
adc
sbb
and
pop
pop
pop
mov
or
dec
cmpsl
pop
cmpsl
fisubrl
popf
cmp
xchg
in
jno
scas
adc
imul
pop
filds
xor
lcall
mov
pusha
push
iret
sbbb
xchg
mov
sub
shll
ja
dec
mov
por
outsl
test
mov
mov
push
les
mov
mov
pushf
jo
ja
or
scas
and
cld
push
sub
pop
shlb
mov
or
insb
push
xchg
inc
push
pop
pop
or
xor
imull
dec
jns
aas
int3
add
lods
divl
aas
in
dec
cmpsb
sahf
sbb
test
mov
xchg
push
repz
xor
push
sahf
dec
jmp
xor
inc
insl
mov
push
int
fldenv
or
and
popf
cmp
xor
aaa
lret
lods
mov
lret
and
xchg
sbb
sub
cmp
call
cmp
outsl
insl
adc
and
repz
and
negl
nop
test
fwait
popf
pop
mov
and
js
mov
fmuls
lcall
mov
adc
xchg
xor
adcb
lret
aam
hlt
dec
mov
push
ss
fnstenv
mov
mov
bound
test
ss
mov
jnp
xlat
insl
outsb
rorl
outsl
sti
sub
sbb
ljmp
sub
lret
inc
push
stos
xchg
mov
and
sbb
mov
and
clc
inc
pop
sub
cmpsb
fcmovnb
or
std
insb
int
repnz
dec
ret
or
pop
cs
push
sbbl
clc
pop
jge
add
fs
jle
lret
ficoms
cmp
divb
push
adc
int
mov
sub
in
adc
xchg
dec
ljmp
clc
orl
dec
repnz
jecxz
movsb
dec
mov
fldl
sbb
fldt
scas
rcrb
jae
mov
je
popa
xor
mov
inc
rorb
rcrl
lahf
outsb
faddl
cwtl
psraw
sub
mov
gs
add
out
pop
sahf
subl
nop
test
dec
xor
in
je
sbb
xlat
popf
daa
test
mov
test
cltd
pop
lods
mov
mov
dec
cwtl
fwait
push
add
aam
cltd
push
jmp
ja
daa
mov
sub
out
cmp
pusha
jle
or
scas
and
shll
cmc
ss
xchg
dec
test
and
out
divb
adc
xchg
inc
sub
into
dec
movsb
cmp
inc
mov
imul
call
addb
lods
mov
popa
mov
pop
cmp
cmp
mov
pushf
cmpsb
mov
push
inc
aad
shl
arpl
lds
test
lock
xor
jecxz
fstl
call
inc
arpl
mov
inc
jae
repz
imul
xchg
cmp
dec
int
cmpsl
sbbb
xchg
sahf
out
xor
pop
loopne
int3
sub
jb
js
std
dec
pushf
cmpsb
jl
add
test
inc
test
mov
mov
das
xchg
sbbl
pop
nop
fistps
adc
shlb
movsb
jbe
inc
int
pop
push
rsqrtps
xchg
sub
es
mov
cmp
push
push
and
scas
push
mov
enter
je
lods
mov
in
daa
out
sub
jge
mov
sub
das
repz
sub
int
adc
xchg
mov
push
sub
fisttpll
popa
leave
shlb
fidivl
fcmovnb
leave
js
mov
cwtl
test
fistps
mov
cmpsl
pop
hlt
sub
mov
add
cli
xchg
in
pop
jl
movsl
sub
test
aam
lds
add
mov
mov
inc
inc
dec
push
mov
loop
ds
mov
iret
lods
out
cmpsb
adc
pop
adc
std
mov
outsl
addr16
inc
ror
add
inc
loop
adc
add
inc
pop
loopne
cltd
test
pop
mull
les
loopne
xor
test
adc
daa
das
leave
or
aaa
add
xor
mov
cmp
push
popf
mov
out
and
lods
out
mov
repz
jp
test
in
scas
push
mov
in
xchg
xchg
pop
inc
int
jbe
ja
inc
mov
jl
mov
sbb
sti
std
loope
pushf
xor
int3
push
test
les
jg
xor
imul
aas
repz
cld
cmp
xor
test
sbbb
ljmp
js
add
and
les
pop
addr16
add
push
stos
cmp
pop
inc
inc
sbb
xchg
and
ss
add
cs
jp
or
enter
lods
jg
pop
dec
xor
cld
push
ja
xchg
lret
sbb
or
inc
adc
outsb
mov
icebp
test
cli
stos
add
add
aaa
mov
xor
adcl
test
inc
insl
jp
or
lcall
int3
sahf
sbb
dec
lods
shrl
test
sbb
sub
and
in
stc
sub
aas
clc
jno
das
xchg
cwtl
xchg
rcrl
arpl
js
inc
or
jae
or
stc
mov
test
mov
sbb
push
stos
mov
adc
sub
cltd
dec
mov
addl
fldenv
js
iret
xchg
data16
inc
push
cmp
sahf
fsub
pusha
xor
insb
xchg
leave
cltd
sbb
cwtl
mov
out
dec
int
cmp
ja
fdivl
decb
cmpsl
fwait
imul
lods
pop
es
add
iret
repz
rorl
jnp
sbb
movsl
arpl
gs
adc
es
inc
mov
hlt
dec
out
xchg
push
push
and
xchg
es
add
xchg
addb
outsl
cli
xchg
fstpt
in
jg
pop
or
cld
lret
clc
shrb
mov
pop
push
inc
movsl
fists
mov
adc
sbb
test
jb
inc
int
cmpl
xor
in
ret
dec
sub
rcll
xchg
xchg
jecxz
or
dec
push
push
push
cmp
cwtl
add
pop
mov
push
mov
jge
js
jge
or
mov
pop
and
mov
fisubs
popf
fcoms
cmpsl
sbb
stos
int3
and
fwait
jl
dec
in
inc
icebp
pop
cmp
gs
xchg
and
sbb
push
push
sbb
push
mov
add
xchg
push
lea
lds
adc
and
dec
loop
je
cmp
pop
pop
das
adc
mov
movsb
fcmovb
and
cmp
pop
push
cmp
fisubl
inc
jae
cs
aaa
cwtl
xchg
push
shll
and
sahf
inc
imul
jno
mov
out
inc
sub
push
mov
push
add
mov
add
sbb
xchg
outsl
push
iret
addr16
and
fcoml
subb
shll
mov
lods
adc
lret
pop
mov
push
sbb
repz
fcomp
dec
mov
rorb
stc
stos
sub
jae
sti
jg
inc
js
mov
cmp
lret
sbb
aam
pop
pop
hlt
xor
sbb
jbe
lods
or
add
cmp
jge
cltd
cmpsb
data16
dec
pop
ss
or
fnsave
mov
sahf
roll
add
mov
movsb
cmp
pop
add
cmc
push
lret
mov
in
jge
loope
or
aad
inc
aaa
mov
sbb
and
rorl
pop
ret
push
into
adc
movsl
icebp
mov
test
data16
mov
int3
in
mov
push
pushf
inc
pop
adcl
inc
cmp
push
imul
push
dec
int
loop
push
xchg
repz
xor
xor
pop
pop
insb
sub
cmpsl
mov
out
cmp
adc
jg
or
mov
mov
mov
aad
out
lock
subb
dec
or
js
in
sbb
ljmp
call
stc
aaa
outsb
pushf
lahf
es
dec
sub
mov
mov
jo
push
shl
and
js
mov
push
sub
mov
sbb
jl
pop
xchg
mov
ja
int
loopne
ret
mov
cmp
arpl
cld
cmp
mov
mov
mov
icebp
or
in
cmpsl
xor
data16
pop
pop
sbb
cmp
loope
call
pop
shl
mov
das
xor
mov
push
xor
cltd
gs
test
xor
adc
push
sarl
orb
push
jl
add
subl
mov
inc
icebp
rorb
loopne
or
in
mov
push
xchg
mov
outsl
addr16
adc
pop
xor
addr16
xchg
out
cltd
xlat
jecxz
xor
and
xchg
jo
xlat
imul
popl
or
repz
cmp
lds
lcall
cmpsl
insb
cmp
fcoms
lret
aaa
js
mov
out
push
pop
cmp
or
fsubs
xchg
or
jecxz
push
push
or
cmpsl
call
push
xchg
sbb
sub
sub
mov
test
jg
aaa
jg
mov
sarl
pop
mov
add
xlat
cmp
loope
dec
mov
or
out
dec
icebp
xchg
cld
dec
test
push
mov
sub
xor
mov
pop
mov
ja
jbe
xor
xor
rcl
incb
loopne
adc
addr16
mov
mov
inc
in
sbbb
lret
or
add
xor
aaa
js
xor
mov
push
jno
sub
and
cmp
leave
mov
data16
ds
test
or
movb
js
cwtl
push
fisttps
ud0
vmulss
xor
jmp
mov
into
je
pop
sbb
xchg
sbb
mov
loop
int3
rcll
aaa
stos
dec
add
pop
insb
lods
add
movsb
movsl
mov
pop
and
and
ret
mov
outsb
jae
pop
sub
imul
cli
lock
add
je
cs
hlt
inc
shl
xchg
mov
sbb
and
and
jecxz
xchg
enter
pop
xchg
test
push
lahf
pop
mov
fdivs
sub
xchg
jns
xchg
push
push
push
lret
sbb
sarb
data16
loope
inc
or
ret
setg
lahf
or
fwait
mov
fcmovnu
dec
aas
insb
mov
and
or
loope
pop
repz
mov
loopne
test
pushf
addr16
ds
jb
pop
adc
test
popa
insl
hlt
pusha
mov
repnz
pushf
test
or
add
pushf
inc
ds
addr16
scas
es
or
push
cli
rol
repz
xor
movsl
cmc
insb
pop
scas
jle
jp
inc
mov
in
pushf
push
dec
lcall
or
fcomp
and
mov
xlat
mov
or
mov
test
mov
pusha
push
push
adc
adc
add
cmc
pop
xor
adc
mov
je
adc
fnsave
filds
mov
lods
dec
mov
out
add
decb
arpl
lahf
dec
aas
mov
push
clc
sbb
divb
adc
cmp
addr16
dec
cmp
jbe
jae
and
pop
cld
push
jecxz
sub
dec
push
mov
sub
arpl
pusha
mov
or
hlt
leave
ror
or
push
cmp
xchg
movsl
in
in
stos
movsb
mov
das
pop
jp
push
hlt
add
jg
add
repz
add
jns
pop
fnstcw
test
sahf
ror
loop
clc
xchg
movsl
sbb
fs
mov
imul
shll
pop
into
or
mov
andb
lahf
mov
popf
pop
in
push
dec
daa
push
lcall
call
inc
lahf
adc
push
mov
lods
dec
mov
data16
cmpsb
ret
sbbl
add
int3
pop
test
scas
ret
pop
dec
cmpsl
lock
hlt
lcall
ret
xchg
in
cmp
data16
rcr
pop
sbb
rcll
mov
lea
pushl
inc
cltd
or
std
adc
fldenv
jge
inc
jns
and
or
in
cmc
in
dec
pop
inc
mov
subl
popf
xchg
pop
adc
stos
xchg
shl
test
ss
xor
pop
cld
rcrb
dec
add
cli
dec
cmp
push
mov
stos
jecxz
and
add
outsb
movsl
add
inc
out
ret
xchg
push
ja
arpl
daa
pop
mov
in
and
ret
inc
mov
inc
inc
mov
out
jg
and
std
xchg
notl
or
cmp
lods
and
cmp
push
add
aam
xor
cltd
mov
jae
ljmp
xchg
xlat
aam
ss
shlb
les
sti
je
push
stos
ljmp
cli
jnp
aaa
nop
pop
packsswb
sub
lods
hlt
rcll
shrb
dec
jo
cmp
adc
int
cmp
jnp
call
je
adc
fwait
in
adc
in
aas
cmp
fwait
push
arpl
dec
adc
pop
adc
out
ja
mov
sbb
jnp
push
xor
popf
jp
xlat
or
jns
scas
jle
shl
pop
cmp
sahf
pop
mov
mov
mov
mov
fwait
addr16
push
bound
adc
dec
cli
or
lods
lret
jns
mov
loopne
adc
ljmp
and
rcrl
pop
inc
test
cltd
cld
jmp
xchg
bound
xchg
std
push
mov
lahf
jb
fs
popl
ret
std
mov
insb
insb
sbb
test
loope
call
push
cmp
insb
mov
cmp
pop
mov
adc
aas
outsb
dec
in
cs
dec
outsb
add
jecxz
cmp
nop
pop
xchg
in
mov
enter
cmpsl
dec
pop
lcall
ds
daa
and
or
sub
aam
fisubl
les
cmc
fisubs
idiv
sub
fs
imul
jbe
xchg
scas
xchg
mov
cmp
mov
jmp
inc
jo
inc
rorb
and
push
jne
test
dec
mov
inc
je
xchg
pop
cmpsb
jmp
inc
imul
pop
negb
xchg
mov
inc
sub
nop
sbb
dec
xchg
cmp
cmpsb
in
in
cwtl
sahf
dec
xor
mov
insb
fwait
jne
int
mov
stc
pop
adc
les
cltd
jg
mov
aaa
jbe
push
test
cmpsl
xchg
in
inc
pop
faddl
ficomps
adc
fnstcw
aaa
xor
mov
mov
adcb
add
xchg
lcall
cmp
xor
jp
lcall
sbb
add
cmpsb
xchg
adc
loop
pop
mov
sub
cmp
sub
lods
mov
ds
pop
sub
out
jmp
in
in
sti
and
fs
out
mov
add
fisubrs
lods
andl
cwtl
push
stos
clc
dec
test
shrl
fistps
inc
fs
loopne
push
or
les
imulb
pushf
mov
cmp
aaa
or
mov
roll
adc
fisubrl
in
je
vmread
mov
adcb
sub
jns
aas
push
pop
xor
pop
inc
cld
adc
enter
xlat
sahf
jne
sbb
xchg
inc
aaa
or
aas
cmp
repz
jns
xlat
or
in
test
jae
pop
xor
out
sti
cwtl
sahf
adc
fs
shll
mov
xchg
fsubs
add
int
scas
mov
ja
je
movsb
imul
int
push
xor
jo
fisubs
fisubrs
insb
mov
or
add
cmp
xchg
sbb
shl
imul
push
sbb
adc
mov
sbb
add
inc
rorb
jp
ja
or
cmp
fbstp
stos
or
dec
cld
fimull
push
outsl
shl
xchg
loope
adc
aaa
shl
movsb
mov
into
ret
shll
mov
mov
jmp
popf
into
rcrl
rcrl
cmp
jg
orb
sbb
movsl
jle
outsb
and
scas
sub
push
mov
mov
js
loopne
or
cmp
jp
in
cltd
adc
mov
xor
test
mov
data16
jg
retw
mov
jp
gs
adc
xchg
sub
das
or
fdivs
dec
mov
push
jb
pushf
mov
stos
dec
fwait
pop
arpl
mov
mov
dec
xor
sbb
lea
jne
dec
je
dec
pop
cs
mov
in
test
push
fdivl
pop
jle
fiadds
add
in
add
and
mov
push
cmp
leave
aaa
int
push
adc
test
pushf
sub
cmc
add
call
aas
push
mov
jmp
xchg
pushf
repnz
add
lods
test
push
into
sbb
pusha
mov
cltd
cs
out
popa
aaa
pushf
add
mov
push
add
cmc
push
and
add
ficompl
hlt
or
xor
fmul
pop
stos
push
ret
jle
xchg
xor
pop
push
insb
pop
and
aam
cs
adc
lock
call
mov
cmc
psllw
cmp
mov
int3
and
pop
je
int
add
sbb
sbb
int
cmp
mov
movsb
loope
pop
or
ja
cli
fisubl
rolb
aas
dec
pop
sub
lcall
dec
shll
jle
push
cmp
add
sar
mov
aad
mov
mov
es
call
xchg
pop
je
xor
cmpsb
mov
ja
mov
xor
mov
je
inc
xchg
xor
into
fldl
sub
push
iret
cmp
sti
orl
mov
jb
add
ds
sub
popf
xchg
lods
jge
lret
cmp
push
xchg
cvttps2pi
mov
enter
daa
mov
jmp
cmc
insl
sub
insb
stc
cli
in
jns
jbe
daa
stc
dec
popa
xchg
xchg
push
outsl
in
mul
jo
mov
fdivs
pop
int3
call
loop
rclb
fisubrl
sbb
outsb
lahf
jg
push
sbb
push
movsl
rcrl
test
in
adc
adc
sbb
lcall
test
call
push
xchg
jle
je
movsb
lea
std
pop
ret
repz
ds
test
mov
aam
jmp
add
push
imul
shlb
sub
lcall
lahf
push
jg
lods
xchg
push
shl
push
jl
xor
cli
dec
dec
test
call
adc
cmp
out
adc
data16
scas
mov
adc
scas
loopne
loope
dec
cmpsl
adc
lahf
push
gs
mov
cmp
pop
fadd
or
dec
idiv
test
in
mov
mov
jmp
inc
jg
es
add
lret
xchg
and
jecxz
iret
xorb
outsl
in
xor
cli
call
cmp
or
adc
decl
push
cmc
jmp
mov
adc
push
push
inc
fwait
mov
rcll
lret
popa
xchg
sbb
fwait
imul
inc
inc
jp
hlt
or
pop
push
out
imul
enter
inc
mov
cmc
pop
fs
sub
arpl
sub
pop
push
mov
das
ds
jbe
xlat
int
xchg
and
mov
add
jmp
jle
in
push
cmpsl
movsb
and
jl
inc
shrl
lods
pushf
dec
pusha
push
mov
sbb
push
out
scas
push
or
and
les
push
push
push
pop
mov
fs
fistps
insl
add
xchg
push
sub
push
mov
jo
cltd
lods
dec
sub
or
nop
es
push
dec
mov
add
je
shlb
shr
outsb
scas
call
ja
jns
in
adc
iret
sbb
jo
adc
std
loop
loope
dec
push
add
mov
push
mov
xchg
push
and
rclb
insl
push
lea
sub
adc
and
sbbb
sbb
sub
fwait
ds
repz
test
andl
imul
js
adc
out
xchg
rol
ljmp
std
ds
test
mov
sbb
jb
inc
lds
ljmp
jne
pop
pop
cmp
hlt
pop
cwtl
movl
push
test
shlb
in
jge
icebp
int3
jmp
imul
outsb
mov
shll
imulb
ja
sbb
in
std
cmc
daa
stc
repnz
xchg
mov
jbe
mov
mov
outsl
mov
push
add
and
xor
push
call
loope
cmp
enter
mov
movsl
lds
lret
loopne
stos
xor
cmc
jnp
sub
lahf
add
add
cmc
inc
xchg
sub
popf
sbb
xor
insb
hlt
cmp
inc
lret
ret
out
add
cmc
ds
sbb
sbb
shll
or
shrl
cmp
js
mov
ficomps
jbe
movsb
mov
inc
pushf
jo
jnp
mov
jmp
mov
andb
fldt
clc
jecxz
and
lea
fldt
cmp
loope
xchg
inc
insb
dec
cmp
push
xor
cli
mov
fstpl
arpl
mov
jmp
cli
xlat
mov
mov
jg
or
ljmp
test
cmc
mov
sbb
dec
fidivrl
icebp
das
pop
bnd
cmp
sbb
sbb
lahf
mov
nop
cltd
ret
lcall
xchg
mov
fmuls
pop
jno
push
xor
mov
adcl
add
sarl
movsl
dec
rolb
insl
mov
jmp
pop
sbb
adc
cmp
ret
lods
sbb
into
xchg
mov
daa
push
insl
jl
leave
xor
and
mov
cmc
adc
stos
push
sub
xlat
xchg
loope
adc
inc
xor
outsl
sub
xchg
cmp
std
enter
aas
fwait
popa
ret
aas
inc
imul
test
sub
cmp
jo
jl
cmp
repz
insb
aad
cld
inc
flds
ror
lahf
mov
mov
rcrb
shl
mov
push
lods
jns
hlt
pop
push
mov
jbe
aad
pop
frstor
and
test
jg
push
mov
xor
sbb
sti
nop
mov
adc
movsl
sbb
and
stos
cmp
stos
inc
push
nop
movb
cmp
jns
leave
mov
in
pop
das
pop
pop
sub
js
lds
inc
pusha
and
add
jg
fists
push
add
aad
insl
cmp
out
adc
pop
adcl
dec
adc
movsl
dec
push
xchg
mov
loop
lods
jnp
inc
mov
bound
and
push
push
aam
mov
fstps
mov
xlat
inc
jo
mov
neg
pop
loop
nop
repz
jb
inc
aam
jp
sti
iret
push
and
daa
in
xchg
mov
xchg
fmuls
xchg
sbb
xlat
sti
test
xchg
dec
sbb
decb
mov
pop
or
jns
mov
lret
outsl
in
xchg
fstpt
test
cld
stc
or
les
ljmp
inc
rcl
lret
fidivs
mov
add
jmp
mov
dec
mov
adc
cmp
repz
cmp
jb
mov
or
add
inc
cmp
mov
sub
outsb
pusha
mov
loop
adc
sbb
sti
mov
pop
ljmp
test
test
xor
icebp
pusha
cs
jmp
adc
sub
stos
jmp
sbb
mov
add
leave
add
ficoml
aas
ljmp
test
bnd
ret
fstp
pop
push
mov
cmpl
mov
in
sub
cmp
shlb
mov
in
je
ret
adc
and
or
out
scas
xor
roll
stos
testb
pusha
mov
pop
xor
adc
je
addr16
movsb
rorl
dec
sahf
mov
adc
xchg
pusha
test
cltd
sub
fisubl
xchg
mov
ficomps
jle
pop
inc
push
rolb
rcl
cs
dec
negb
popa
mov
sub
and
jecxz
icebp
in
idiv
xor
loope
in
mov
pop
sbb
test
xor
xchg
jnp,pn
sti
inc
sub
push
jmp
jae
xorb
lret
jecxz
cli
cmp
push
pop
test
push
fistpll
shrb
ffreep
repz
sbb
in
cmp
lock
cmovo
xor
push
mov
adcl
adc
ret
data16
add
xchg
jge
or
sub
mov
inc
lea
fdivr
and
cwtl
dec
scas
mov
cmc
inc
cwtl
xor
sbb
adc
add
or
jae
daa
shl
dec
inc
sbb
popf
sbb
push
and
int
cmp
out
cltd
inc
mov
adc
push
arpl
cs
mov
out
push
loopne
lods
mov
inc
cli
shlb
push
in
in
jecxz
shl
xor
push
xor
pushf
pop
pushf
jb
mov
fs
push
pop
push
ja
pop
cmpb
ret
pop
mov
and
and
push
xchg
movb
mov
jne
fsubrp
mov
ljmp
and
popa
jg
mov
pop
push
jne
push
rcrl
mov
push
lahf
adc
in
out
and
rorl
rcrb
add
movsl
lods
mov
dec
ja
inc
in
jne
push
ss
jmp
mov
cmc
jecxz
mov
call
repz
pushf
mov
cmpsb
int3
jl
xor
cmpsb
lods
jno
xlat
add
popw
mov
and
xor
push
adc
addr16
jg
testl
shll
sbb
adcl
xorl
imul
mov
pop
sub
sbb
les
sub
jp
mov
fdivs
adc
mov
mov
outsl
int
insb
bound
xchg
mov
test
mov
jle
clc
or
pop
test
xchg
pop
pusha
je
mov
xor
push
push
aaa
xchg
mov
and
roll
xchg
add
test
cmp
stos
enter
pop
xor
pop
adc
stos
popf
cwtl
push
ret
mov
int
dec
jns
repz
sbb
into
dec
cmp
push
add
lret
scas
inc
aad
sub
xor
mov
clc
mov
add
sbb
jge
rol
xchg
pop
pop
jae
adc
dec
inc
dec
adc
xchg
dec
pop
lcall
pushf
and
sbb
jp
mov
push
mov
push
fistpll
jno
lcall
arpl
popa
mov
push
ja
fistl
enter
mov
add
ljmp
xchg
adc
pop
jecxz
jp
xchg
lcall
and
lcall
cmp
jnp
mov
sbb
jmp
mov
mov
push
jle
bound
cmp
sbb
or
xchg
rclb
cmc
stc
inc
lds
fadds
xchg
xchg
cmpsl
cmp
cvtps2pi
push
cld
scas
jo
inc
adc
pop
mull
pop
jnp
fs
mov
xchg
fsubrs
dec
pop
int3
mov
and
fs
dec
sbb
or
xchg
mov
imul
loope
or
dec
rcrl
aaa
jmp
sub
popf
push
push
lret
cwtl
jecxz
dec
stos
dec
jmp
sub
lods
mov
ljmp
lahf
into
fstl
push
sub
and
sub
in
inc
push
fidivrs
repnz
sub
xor
lods
cmp
arpl
xchg
mov
cli
xor
scas
jns
cmpsb
ret
in
cli
sub
fcmovnu
adc
mov
out
mov
int
xor
mov
and
stos
stos
lret
lret
lods
loope
pusha
cmp
arpl
insb
mov
nop
cmpsb
dec
cmp
stos
popf
pop
dec
rcrb
push
xchg
in
push
xlat
pop
cs
lret
pop
in
push
mov
push
imul
xchg
mov
add
mov
and
sahf
ds
dec
lret
xchg
sbb
and
push
nop
lret
sbb
xor
add
pop
xor
mov
dec
scas
xchg
pop
shrd
into
jl
arpl
loop
outsb
push
mov
mov
jne
or
adc
sub
push
call
push
ja
lcall
test
mov
clc
sahf
hlt
xor
sbb
adc
mov
mov
lea
sbb
icebp
xor
pop
mov
pushf
add
xlat
lods
push
mov
push
imul
mov
es
inc
xchg
and
cmp
sbbl
insl
test
fistl
clc
adc
mov
mov
or
dec
push
xor
je
fldl
cmp
enter
sbbl
jmp
icebp
sbb
fisubrs
xor
cmp
jbe
repz
in
popa
int
outsb
je
xor
add
mov
scas
ja
pop
fdivrs
test
mov
pop
rcll
sbb
mov
xchg
daa
fcoms
sub
push
sarl
inc
xor
iret
xchg
mov
aad
stos
cmp
adc
and
sbb
sbb
or
rcrl
imul
mov
imul
dec
pop
xor
fstl
mov
pop
aam
repz
es
cmp
cmc
jb
rolb
ss
xchg
fidivl
mov
mov
dec
daa
scas
jno
or
movsl
jle
hlt
mov
fcmovne
or
test
cs
out
icebp
aad
fisubrs
dec
xor
enter
pop
xor
mov
jb
sahf
add
iret
pop
mov
jp
mov
es
inc
mov
std
addl
std
addr16
roll
mov
orl
inc
dec
fcoml
sub
push
inc
test
ret
push
pop
push
lret
pop
mov
in
or
xchg
cltd
lret
xor
in
mov
inc
dec
fst
cli
pushw
xor
test
js
or
adc
mov
stc
mov
pop
lock
ljmp
mov
adc
xchg
or
pop
movsb
add
dec
mov
xchg
inc
mov
rcrl
sbb
bound
loopne
and
lock
jle
cwtl
and
mov
mov
adc
clc
lcall
mov
mov
movsb
or
jnp
rclb
add
mov
lret
add
shrb
cmp
jo
mul
ja
jbe
jo
leave
insl
dec
and
cs
fdecstp
or
mov
js
push
lods
push
mov
push
negl
add
pop
test
int3
push
fsts
mov
mov
mov
nop
push
out
xchg
hlt
daa
cmpsl
sti
cmp
inc
cli
mov
es
mov
fs
xchg
inc
sub
pushf
shrl
cmp
subl
xchg
push
mov
lea
roll
push
sub
xlat
in
mov
das
xor
inc
shlb
sahf
jnp
fstl
dec
mov
pushf
fistps
enter
sbb
mov
mov
push
insb
mov
jnp
inc
push
mov
mov
jbe
pusha
jecxz
js
cmpsb
dec
fadds
inc
nop
pop
add
imul
cmp
js
push
mov
sbb
inc
xchg
sahf
sub
mov
aad
cli
das
mov
xlat
into
loope
pop
adc
push
add
ljmp
dec
clc
dec
mov
dec
outsb
sbb
pop
jge
and
es
cmc
dec
and
lahf
mov
out
cwtl
pop
mov
je
and
es
or
daa
int
push
inc
mov
mov
xchg
push
jo
fwait
loop
stc
fs
das
sbb
cmp
loop
xchg
jg
cli
push
aad
pop
std
jmp
not
vprotw
and
add
int3
push
out
bnd
das
decb
pusha
xchg
mov
cmp
dec
shrl
mov
mov
filds
pop
insl
mov
lret
fsts
aaa
lret
jmp
pop
jl
add
xchg
shl
out
and
and
jne
cmc
xchg
pop
dec
jge
cmp
cmp
and
sub
popa
mov
mov
cmp
push
lret
insl
or
adc
rcrl
mov
xor
jle
lret
fcompl
dec
mov
push
idivl
pop
sti
add
pop
push
push
popa
hlt
inc
testb
inc
push
jb
pop
shr
mov
jl
push
cmp
bnd
setl
sahf
mov
lcall
dec
in
pop
jg
lcall
mov
bound
or
xchg
scas
cmp
pushf
pop
push
insl
dec
pop
lret
testl
xor
mov
ds
inc
mov
flds
dec
xchg
call
fmull
cmp
int3
lahf
lret
push
add
jle
mov
sbb
jae
push
in
cmp
jp
mov
dec
dec
and
push
stos
scas
rcrl
mov
clc
fisttpll
pop
xor
add
outsb
xor
dec
fadds
inc
clc
jbe
bound
ss
sub
nop
pop
and
lock
aad
push
adc
inc
iret
imul
pop
xchg
adc
pop
loopnew
mov
rcr
sub
les
sub
mov
test
sahf
cld
adc
cmp
mov
out
sbb
lods
pop
cmp
jg
add
sbb
inc
sbb
loopne
xchg
shrl
mov
cmpb
adc
xor
add
xchg
js
ret
fcmove
mov
and
stos
add
xor
mov
gs
loop
cmpsl
cltd
cmp
jg
xchg
xchg
or
les
loope
mov
sbb
cli
shlb
cmp
xor
mov
repnz
add
xchg
out
daa
add
addr16
cmpsb
cmp
aam
int3
sub
sahf
cltd
add
xor
and
sub
jge
rcl
and
sub
push
jbe
stc
jbe
andl
ljmp
rolb
mov
sub
or
pop
jecxz
xchg
shl
mov
push
stc
in
jb
lret
cmp
out
add
and
incb
xor
push
and
cmp
std
ds
in
and
scas
and
fbstp
arpl
mov
add
lret
enter
push
mov
mov
adc
inc
dec
add
push
shr
in
decl
push
testl
jae
fidivrs
or
cmp
adc
out
adc
rolb
addb
lcall
outsb
decl
addb
mov
mov
mov
jecxz
and
stc
mov
das
mov
jge
sub
mov
mov
clc
xchg
sbb
adc
cmp
sbb
mov
mov
or
mov
sub
div
sbb
lds
mov
sbb
jns
hlt
dec
push
je
mov
daa
mov
push
stc
mov
lret
lea
push
dec
jne
pop
out
mov
or
sub
and
es
outsb
pusha
jnp
mov
mov
push
in
adc
jae
add
inc
leave
inc
pop
jge
adc
pushf
push
xorl
jno
xchg
movsb
mov
inc
stos
jle
shlb
dec
push
mov
jnp
and
inc
movsl
les
and
leave
lock
das
test
arpl
jl
xor
mov
xor
orl
adc
ret
das
ja
nop
or
or
xor
int
add
daa
fistpll
popa
mov
sti
or
mov
jns
xchg
out
out
out
pusha
add
cmpsl
popa
scas
or
into
sbb
mov
push
jmp
pop
cmp
mov
shll
into
fimuls
dec
sarl
imul
pop
mov
xchg
mov
sbb
and
sbb
clc
dec
push
sub
push
dec
cmp
inc
mov
mov
imul
jb
test
sub
dec
and
dec
inc
mov
adc
or
sti
xchg
loope
or
and
jg
fsubr
stos
filds
call
push
add
sbb
push
jge
cmp
pop
push
mov
loopne
pop
data16
xchg
dec
cmpsl
mov
out
loop
stos
mov
mov
cmp
imul
gs
xchg
mov
ret
lock
or
popw
stos
testb
pushf
adc
scas
inc
mov
cltd
mov
push
add
test
stc
movsl
jnp
sub
imul
mov
cmp
lret
add
lret
jge
mov
jg
cwtl
mov
sbb
mov
ljmp
cmc
sti
inc
add
lcall
popf
jmp
xchg
pop
faddp
cmp
out
inc
xor
call
cmp
sarb
or
cwtl
sub
sbb
sbbl
mov
aad
jge
or
sbb
sub
mov
mov
adc
mov
sbb
lret
jl
hlt
sbb
or
lcall
adc
scas
pop
and
mov
imul
js
aam
cmp
sbb
js
neg
xchg
add
mov
das
mov
dec
add
inc
sbb
mov
xor
add
sbb
push
jl
push
mov
jo
cltd
xor
rorl
rcr
mov
jl
push
in
imul
pop
dec
hlt
and
cs
adc
loop
out
pusha
cltd
out
push
xchg
or
out
pop
mull
add
testl
into
xor
into
pop
or
xchg
stc
ret
lret
fwait
push
or
jg
leave
sbb
add
jg
inc
ss
inc
mov
cmp
sahf
test
pop
mov
inc
or
pop
adc
pusha
xor
stos
movsb
lods
fstl
push
xor
lret
and
push
in
mov
cmp
test
mov
jge
fsubrs
xor
stos
clc
stos
lahf
icebp
addr16
sbb
and
jge
sbb
sub
push
or
flds
hlt
inc
sub
and
xchg
js
pop
fistps
cld
pop
cwtl
adc
fxsave
iret
arpl
cmpsl
or
das
sbb
cmpsl
dec
scas
mov
in
mov
ds
imul
fiadds
add
push
subb
es
sbb
rolb
xchg
shrb
mov
add
cwtl
mov
lret
mull
dec
lahf
mov
adc
mov
cld
ds
lea
in
adc
cwtl
dec
adc
mov
es
aam
mov
sbb
pushf
mov
loop
ss
gs
jnp
outsl
cmc
sub
pop
and
inc
dec
cwtl
lods
or
int
push
inc
adcb
pop
orb
inc
dec
xor
add
cmp
push
in
fists
xchg
mov
xchg
clc
test
adcb
inc
xchg
push
sbb
sub
mov
lcall
popa
or
or
mov
aaa
jnp
lahf
sbb
dec
cwtl
aam
cmpsl
mov
mov
mov
pop
sbb
pop
inc
add
sbb
enter
adc
xor
xchg
push
pop
sbb
stos
mov
mov
sub
dec
sarb
cmpb
xor
das
stos
mov
xor
and
fimull
jo
ds
rcrb
pop
mov
iret
inc
jbe
push
adcl
orb
mov
call
xchg
xchg
jno
stos
and
xchg
pop
xor
dec
xor
push
fildl
int
sub
movsb
cmp
mov
mov
cmp
leave
xor
mov
cli
nop
jb
xor
xchg
cmp
fdivl
je
jnp
jae
ficoml
jno
xchg
push
fidivl
ror
das
xchg
hlt
mov
mov
nop
mov
in
out
ret
add
and
cli
popf
or
pop
mov
mov
push
loop
xchg
imul
fists
xchg
jae
mov
xor
sahf
enter
jo
push
out
pop
test
aas
fcmovnbe
push
sub
std
and
mov
sub
les
fcmove
push
popa
stc
mov
outsl
cmp
enter
sti
scas
pop
sbb
add
addr16
inc
xor
sub
and
push
sbb
sbb
push
mov
repz
movsl
push
scas
mov
mov
add
add
mov
or
pop
inc
aam
out
repnz
jne
shlb
mov
lds
sub
push
pushf
push
mov
ss
aaa
mov
jmp
enter
xor
mov
push
cli
call
mov
sahf
cli
aas
icebp
xchg
sbb
es
xchg
push
dec
in
jmp
jmp
int3
pop
jmp
out
das
loop
movsl
je
pusha
inc
pop
push
or
lds
adc
xor
cld
pop
push
mov
mov
shlb
mov
pop
lock
mov
out
cmpsl
aam
inc
mov
sahf
gs
xchg
xchg
loopne
xor
and
mov
push
mov
out
scas
lods
mov
nop
cmp
dec
adc
jne
push
in
out
sbb
or
mov
imul
sti
adc
movsb
enter
roll
aas
xchg
loope
sub
pop
xlat
xchg
xor
fnstenv
pop
inc
xchg
sti
aas
xor
movsb
sub
sbb
jbe
idivb
mov
imul
dec
xchg
mov
dec
mov
mov
sbb
dec
gs
dec
dec
and
and
jnp
or
dec
ss
or
stc
jne
ret
mov
aam
push
ror
sbb
aaa
in
xor
gs
sti
iret
and
push
jae
or
jbe
mov
fldpi
pop
mov
jns
rcrl
xor
sub
sub
mov
bound
mov
add
lret
cli
adc
in
popf
repnz
pop
enter
jo
or
addl
cli
cmp
pop
add
dec
test
or
and
xor
add
call
inc
loope
lahf
cli
movsl
or
lcall
orl
sahf
in
jg
mov
pop
jp
shl
shll
jecxz
lea
cmc
rcl
sarb
test
cmpsl
mov
popf
or
rcll
std
std
insl
out
gs
aaa
mov
pop
cwtl
addb
lods
cmp
push
nop
fdivr
sti
push
subb
test
imul
push
adc
add
inc
push
hlt
pop
adc
mov
loopne
dec
arpl
insl
ljmp
roll
mov
mov
in
popa
or
cmpsb
mov
mov
add
push
fidivrl
aaa
pop
mov
push
pop
mov
dec
ds
jnp
cmp
cltd
inc
movsb
pusha
pop
out
imul
movsb
movsl
or
aad
xor
sub
stos
testl
adc
mov
stos
mov
mov
nop
loopne
dec
dec
jle
cmp
aad
int
je
push
push
push
cli
mov
sbb
push
xchg
clc
or
add
push
xor
mov
mov
lret
repz
dec
sbb
gs
stos
sti
icebp
je
sbbl
add
xor
pop
std
jns
in
js
pop
pusha
loope
adc
sbb
push
aaa
loopne
sahf
in
xor
hlt
les
sub
push
add
out
xlat
fistps
repz
sub
pop
add
sbb
mov
push
cltd
movsl
jne
stc
testb
movsb
lcall
adc
push
movsl
xor
push
rolb
stc
ljmp
call
sbb
inc
mov
incl
push
ret
sbb
xor
inc
push
jne
in
jb
xor
orb
ljmp
ss
jg
push
iret
sub
rcrl
jl
pop
inc
mov
push
sbb
shl
push
or
js
mov
sub
popa
xor
push
mov
cltd
cmp
xchg
jbe
in
punpckhbw
repz
add
mov
cli
pop
inc
sbb
jnp
dec
mov
daa
mov
movsl
mov
addr16
jmp
out
repz
andb
inc
pop
xchg
ds
ret
jge
push
movsb
lcall
push
and
stos
aas
shr
mov
or
xchg
dec
jae
fistpl
scas
cmpsb
dec
mov
and
js
dec
adc
xor
pop
or
xor
les
mov
and
sbb
push
xchg
push
cli
lahf
xor
xlat
lods
adc
xchg
jo
mov
dec
push
popf
xor
xchg
lds
jge
dec
push
out
push
xor
fdivl
insl
aam
roll
push
mov
jbe
loope
out
xchg
gs
push
adc
int3
test
sub
fucomip
adc
push
mov
push
sub
jne
and
or
add
and
leave
mov
cmp
incl
scas
pop
pop
pusha
jo
aad
push
test
jnp
xor
sub
ficoml
cli
aas
mov
ss
fidivl
push
xor
xchg
test
fldcw
daa
xchg
fwait
sub
pushf
rclb
shll
mov
xchg
sete
je
fmull
lods
lea
insl
loop
repnz
add
fisubrs
cmp
das
jle
inc
push
xchg
shrl
arpl
jle
xor
mov
fisttps
sub
mov
aas
xor
jge
leave
mov
or
testl
jnp
fdivr
xchg
push
and
loope
das
les
popa
sub
insl
pop
mov
push
mov
jp
cltd
sub
xchg
mov
out
dec
jne
out
dec
fwait
cmp
sbb
dec
in
push
test
test
loope
sub
xor
push
dec
add
aad
push
mov
inc
push
aad
mov
or
fidivl
cltd
pusha
js
adc
arpl
dec
out
dec
repnz
cmp
xchg
leave
fstl
shlb
jge
adc
mov
xchg
cmpsl
mov
xor
xor
loopne
mov
jmp
jle
and
notb
dec
push
mov
jge
lods
andl
dec
dec
pop
push
pusha
inc
stc
call
pop
mov
loopne
pop
cmp
fmull
bound
repz
dec
outsl
adc
cmp
adc
test
mov
lcall
add
jb
mov
add
dec
lcall
push
mov
lcall
dec
scas
jmp
es
test
and
in
stos
rclb
leave
mov
xor
faddl
and
notl
inc
les
stos
stos
xchg
fistpl
xchg
pop
jle
int
sti
dec
fisubrl
pop
aaa
hlt
sbb
xchg
test
lods
dec
cmp
pop
or
pop
decb
and
fcmovnu
fwait
push
insl
mov
ret
dec
repnz
push
bound
inc
cld
jnp
jbe
es
sbb
pop
test
add
jle
in
push
fbstp
popa
and
movsl
mov
rclb
shl
rcr
dec
ret
mov
ljmp
mov
negl
dec
jmp
repz
scas
dec
aam
addr16
xor
insl
lcall
mov
push
inc
cltd
xchg
sub
stc
xchg
cltd
pop
cmp
pop
dec
mov
jbe
inc
xchg
jle
xlat
mov
dec
xchg
hlt
push
xchg
xchg
cld
pop
insb
xchg
jbe
pushf
xor
push
sbb
test
aas
mov
popa
ljmp
inc
imul
jg
sub
mov
inc
mov
push
inc
das
sti
inc
je
jl
pop
and
or
aam
in
in
or
repz
pop
adc
sbb
aaa
and
call
sub
ds
cmp
out
pop
or
in
jne
inc
xor
dec
clc
or
mov
jne
mov
mov
iret
addr16
adc
adc
movsb
pop
mov
shll
pop
and
test
aaa
repnz
sub
mov
cmpsb
ljmp
xor
cmp
mov
dec
daa
aam
push
insl
add
popl
xchg
popf
mov
sbb
notb
and
je
lods
xchg
lea
in
je
sub
push
and
mov
ret
into
cmp
add
rclb
inc
pop
sub
stos
cmp
adc
imul
fdivrs
pop
imul
inc
imul
push
mov
dec
mov
push
push
push
fistl
jp
push
scas
test
in
inc
cld
or
mov
mov
inc
jge
jecxz
adc
pop
je
stc
push
mov
jg
sbb
xchg
mov
ljmp
sbb
cs
xchg
adc
pop
dec
and
xchg
xchg
pop
test
mov
out
pushf
sahf
or
jbe
xor
lcall
repnz
clc
testb
iret
inc
enter
jb
jnp
bound
cmp
cmp
xchg
push
xchg
mov
out
sub
ret
push
repz
pop
mov
mov
cli
pop
xchg
xchg
mov
dec
in
cmpsb
cmc
fisubl
call
mov
xchg
adc
jo
pushf
cwtl
fildll
in
add
das
fadds
add
xor
jge
in
int3
jno
out
rcrl
ja
mov
iret
cltd
test
and
inc
mov
cmp
adc
icebp
jl
shrb
les
stos
bound
inc
shrl
sar
enter
jbe
popa
incl
sbb
aam
or
movsl
daa
movsl
rcll
mov
mov
fimuls
cmp
add
adc
mov
outsl
push
cmpsl
and
sbb
test
out
adc
xor
pop
ffree
pop
adc
mov
popf
das
push
mov
push
jno
lahf
pop
xor
sti
lods
dec
push
dec
insl
clc
sbb
mov
shlb
cmp
or
mov
jl
pop
loope
mov
inc
sti
cwtl
mov
les
in
jo
repnz
and
insb
push
cmp
iret
cmp
int
stos
out
inc
in
stos
add
xor
xor
sbb
xchg
mov
jae
aam
xlat
cltd
dec
sub
jo
icebp
mov
dec
jle
call
mov
and
mov
rorb
adc
add
mov
pop
or
xor
js
push
pop
adc
pop
dec
lcall
adc
sub
enter
mov
loop
jmp
add
mov
ss
add
sti
add
pop
mov
push
scas
pop
and
jp
pop
mov
test
xchg
fs
xchg
pop
push
or
cmp
jnp
andb
xor
mulb
enter
sub
jl
xchg
inc
mov
enter
leave
dec
sub
imul
jo
xchg
movb
dec
pop
xor
xor
dec
push
and
loopne
lods
inc
inc
test
sbb
sbb
adc
xor
cli
jg
repnz
jns
sub
addl
xlat
icebp
nop
push
cmp
pusha
dec
sar
out
addr16
aad
pop
pop
arpl
mov
ss
push
pop
mov
js
popf
ret
sbb
jg
and
pop
test
ljmp
cmp
mov
push
pop
add
leave
cmp
lret
cmp
pop
xchg
subb
hlt
test
cmp
and
ror
jo
daa
shlb
aam
stos
cmp
aam
loope
mov
lods
lea
adc
mov
mov
and
iret
dec
adc
xchg
insl
sub
mov
mov
lret
outsb
inc
mov
ficoms
in
and
and
sbb
mov
push
jp
ret
mov
jecxz
out
in
mov
mov
sub
push
add
cmp
arpl
in
add
dec
mov
xor
pop
add
jbe
outsl
dec
imul
mov
adc
xlat
sarb
inc
sbb
mov
cmc
and
inc
leave
mov
and
pop
and
xor
test
push
or
mov
jmp
lcall
jge
dec
popa
fs
mov
or
sub
mov
out
fildl
add
enter
push
enter
or
lock
xor
sbb
mov
pop
mov
sub
dec
xor
int
pop
jp
or
cmp
mov
push
adc
std
cs
sbb
xchg
outsl
repnz
aaa
ret
cmp
shll
pop
jmp
shll
mov
cmp
in
jo
rorb
shr
lret
dec
lea
adc
jo
sbb
and
sbb
cmpsb
in
mov
jns
xor
je
fsubs
xchg
xchg
pop
cs
fists
out
sarl
ret
mov
mov
shlb
sbb
stos
scas
in
cld
xchg
ss
mov
cwtl
xchg
push
pop
or
icebp
sbb
push
jbe
out
xor
xor
xchg
fnstenv
cli
pop
sbb
sbb
mov
or
cmpb
and
into
cmpsl
pop
shlb
mov
sub
push
xchg
iret
pop
fsub
pop
lahf
popa
or
push
sti
sub
jae
mov
lahf
lods
mov
lcall
adc
repnz
pusha
mov
out
pop
das
fscale
mov
orl
scas
aas
into
jge
jo
push
dec
outsb
shlb
jae
lods
test
imul
push
cld
cwtl
stos
mov
mov
jo
test
outsb
nop
jne
cmpsl
clc
jae
lahf
mov
cmc
lods
jp
pop
xchg
mov
pop
cld
push
imul
xor
ret
adc
and
inc
adc
pop
xchg
xchg
add
mov
clc
nop
je
pusha
pop
fildl
sbb
sarb
xchg
idivb
jl
add
mov
jns
jl
mov
test
add
rorb
pop
cmp
das
pop
adc
pop
rcrb
jmp
and
outsl
jns
mov
and
xchg
cmp
cmp
jo
lea
notl
sub
mov
ljmp
rorb
stos
js
in
shlb
lock
cltd
sti
mov
test
cmc
js
xor
mov
stos
iret
scas
insb
push
mov
insb
loopne
add
inc
andl
fnstsw
cmp
leave
xchg
mov
insl
adc
and
movsl
xchg
adc
push
cs
jb
enter
lds
scas
or
rep
bound
out
cmp
push
test
xlat
cld
dec
or
xor
ja
fwait
jne
test
lcall
stos
or
push
pop
xor
std
mov
lret
fstpl
imul
das
sbb
mov
fs
or
mov
int
inc
xchg
data16
ja
js
xor
fildll
mov
daa
jae
imul
jl
sbb
orb
push
xor
lock
lcall
add
pop
lahf
mov
cmpsl
cmc
jg
idiv
jmp
xchg
or
or
ret
mov
roll
insb
sub
inc
jbe
jo
stc
sarl
xchg
cmp
loopne
sti
xchg
sub
bound
cs
ret
sbb
dec
fistpl
lea
movsbl
or
dec
dec
dec
mov
loope
xchg
movq
xchg
ss
iret
mov
outsl
jle
mov
imul
in
dec
ja
or
mov
and
jo
mov
lds
cmp
push
mov
insl
andl
jmp
sub
mov
repnz
lret
mulb
mov
xchg
add
mov
lock
jmp
insb
aam
lcall
leave
cmp
mov
xchg
popf
and
xchg
mov
inc
dec
inc
mov
mov
cmp
push
ja
lret
push
cld
scas
inc
xchg
adc
mov
adc
cmp
jb
push
and
inc
pushf
sub
sbb
inc
nop
push
pop
fnstcw
adc
mov
hlt
jae
mov
xchg
in
dec
xor
mov
sti
pop
pusha
scas
cmp
mov
dec
lret
ficoms
lret
sub
rcrl
adc
sbb
fisubs
add
xchg
push
jge
dec
lret
inc
std
push
mov
enterw
mov
repnz
pop
adc
aam
pop
cmp
jl
mov
push
sub
outsl
xchg
lret
repnz
inc
xor
cmp
lods
mov
xor
push
testl
in
jg
out
int
inc
test
icebp
mov
inc
or
adc
inc
pop
fadds
ret
loopne
xor
push
outsb
xchg
pop
inc
push
or
mov
lret
out
or
jg
lret
mov
movsl
jae
sahf
out
sarb
arpl
imul
push
xchg
and
decb
enter
lock
loopne
pop
jmp
movsl
bnd
adcl
lea
pop
cmpsb
jb
xor
xchg
mov
in
mov
stos
jmp
xchg
mov
and
pop
sbb
hlt
push
iret
mov
aaa
cmp
roll
xchg
stc
jecxz
xor
cmc
xor
mov
cmp
adc
std
in
mov
push
repnz
inc
shl
mov
lods
and
cmp
sahf
movsb
inc
enter
lea
lods
push
es
je
aam
movsl
inc
xor
stos
cmp
dec
in
js
pop
jbe
inc
mov
ret
aad
and
int3
mov
sbb
cs
pusha
or
cmpsb
fldenv
rolb
or
cwtl
ss
rorb
mov
cmp
pusha
inc
js
jg
hlt
js
jbe
sub
movsl
loopne
jecxz
in
imul
add
mov
or
icebp
pusha
add
adc
outsb
inc
pop
cmpl
xchg
insl
adc
data16
inc
xor
daa
xchg
hlt
xor
mov
dec
dec
add
in
scas
and
sub
pop
lea
or
and
pop
cmp
pop
sbb
mov
add
orl
inc
out
std
outsb
mov
cmc
push
push
hlt
fcoml
mov
mov
sbb
or
test
movl
mov
int
mov
aaa
lret
out
mov
push
shrb
std
mov
stos
cmp
test
mov
gs
fiaddl
cmp
imul
lret
cmp
push
call
hlt
push
cmc
fs
fidivrs
mov
insb
mov
push
lahf
cmpsb
stc
loope
lahf
inc
xchg
mov
dec
orl
movsl
push
adc
add
mov
mov
sub
call
jp
push
addr16
inc
into
repz
jnp
mov
xchg
push
push
sahf
bswap
je
push
les
testl
push
inc
cli
cmp
jo
popf
in
sarl
mov
mov
ja
lahf
pop
arpl
stos
stos
mov
pop
cmp
dec
cld
mov
sub
ret
mov
fisttpll
popa
mov
in
sbb
ds
rcrb
jmp
ds
cmp
push
jo
stc
inc
sub
out
addb
idiv
pop
mov
xchg
cmpsb
pop
les
jp
imul
std
add
out
push
lock
jge
xor
push
mov
jle,pn
mov
fcomps
jmp
sbb
imul
mov
sub
mov
mov
out
mov
jns
mov
push
jns
sahf
pop
add
jo
int
pop
sbb
xchg
stos
loop
cmp
adc
or
xor
pop
or
lock
mov
or
stc
sub
pushw
mov
ja
xchg
repnz
testl
repnz
test
dec
out
mov
inc
testb
stos
cmc
jb
xchg
mov
je
ret
lods
add
in
mov
push
mov
push
incl
bound
lahf
ret
add
test
shll
cs
addr16
dec
sub
inc
xchg
gs
lret
mov
mov
stc
cs
leave
popf
push
push
call
jle
inc
push
pushf
adc
ja
clc
xchg
sub
push
lret
inc
dec
fistpl
sbbl
push
das
or
movl
pop
jle
dec
outsl
lcall
enter
sbb
inc
jb
scas
ja
xchg
shrl
clc
out
xchg
xlat
xchg
stos
mov
rorb
inc
jge
es
xchg
pop
mov
stos
lahf
add
push
mov
mov
mov
or
inc
xor
test
inc
mov
push
sti
stos
fidivs
pushf
dec
sbb
cwtl
aam
adc
imul
out
movsl
nop
nop
pop
inc
jne
rolb
clc
sbb
icebp
dec
and
notl
les
jne
push
fisubl
cmp
cli
dec
jb
fwait
lods
jge
scas
xlat
rclb
adc
stos
mov
cmpl
rorb
or
push
repnz
xchg
pusha
sbb
push
dec
ret
cmp
sbb
lds
mov
mov
std
rcll
in
push
testb
dec
jmp
jp
xchg
cmovl
std
mov
xchg
lahf
pop
and
lcall
sahf
out
jp
jns
pushf
jno
imul
cld
mov
mov
out
xchg
mov
in
sbb
cmp
fbstp
lea
loop
fdivr
mov
xor
and
pop
dec
pop
jg
or
push
jl
subl
sub
fisubrs
lods
push
xchg
push
inc
jle
ret
xchg
lret
sbb
mov
sub
push
cmpsl
arpl
jne
push
xor
and
sbb
sub
faddl
iret
push
xor
cs
push
mov
mov
pop
xor
orb
fistl
shll
jae
cmp
add
sahf
mov
loopne
xchg
lock
fwait
jno
out
test
mulb
in
sub
sbb
test
jp
std
fninit
dec
das
es
aad
daa
rcrb
nop
xorb
lahf
adc
stc
xor
sbb
das
adc
inc
lds
mov
pop
pop
dec
push
push
movl
and
mov
and
mov
cmp
andb
subl
fnstenv
jge
imul
inc
sbb
sub
lods
xor
and
div
mov
rorb
in
adc
arpl
xlat
outsb
push
repz
sub
fldt
sti
push
cmp
mov
mull
inc
jecxz
xchg
add
and
mov
mov
lock
jmp
xchg
sbb
adc
gs
xor
iret
xchg
in
je
into
dec
lcall
push
mov
icebp
int
bound
and
mov
push
repz
les
jbe
jl
xchg
jne
iret
repnz
cld
adc
inc
rcrb
inc
sub
dec
cld
aam
ret
dec
enter
jnp
imul
xlat
daa
sbb
shrb
setae
jg
mov
sbbb
adc
push
sar
mov
out
or
pop
and
cmp
lea
clc
popa
pop
cmp
xchg
stos
cmovp
and
fcomps
rclb
mov
jae
mov
call
repz
mov
outsb
decl
loop
or
xchg
xchg
xchg
jl
xchg
adc
cltd
std
xor
jbe
push
outsl
mov
jns
jne
mov
scas
pop
les
sbb
mov
enter
in
clc
pop
mov
jnp
xor
sub
jecxz
mov
data16
xor
or
push
push
pop
xor
bnd
addr16
lea
lods
test
inc
outsb
imul
jae
pusha
lcall
push
xchg
mov
jo
out
jno
jecxz
out
loope
push
loop
and
dec
in
out
and
mov
jp
imul
lret
xorb
cmp
cltd
jns
cmp
ret
inc
mov
pop
dec
sub
call
and
stos
mov
pop
mov
fs
adc
pop
rorl
jg
cmp
fiadds
int3
xor
push
dec
mov
mov
xchg
jo
or
mov
mov
cmp
sbb
test
lret
pop
dec
icebp
test
pushf
es
or
push
inc
shr
mov
lret
push
mov
stos
aaa
dec
and
cmc
pop
jmp
and
std
inc
test
dec
les
cld
out
xchg
xchg
stos
push
lahf
dec
ret
push
loope
mov
scas
mov
into
nop
sbbb
cmp
iret
adc
lret
inc
xchg
fisttpll
js
je
enter
cmp
paddusw
ret
pop
stc
repz
inc
loop
fsts
sub
pop
stos
push
out
enter
popa
inc
dec
dec
jge
or
push
inc
mov
jl
cmp
in
xlat
mov
adc
pop
test
hlt
xchg
in
shll
faddl
lret
in
adc
xor
mov
mov
mov
pop
xchg
test
push
lock
fidivrl
jp
add
inc
cmp
cld
ret
xor
mov
cmp
xchg
add
rolb
add
cmp
in
sbb
xchg
rorl
pop
fsubrs
or
fwait
mov
sti
pop
dec
test
inc
fiaddl
xchg
lods
shl
and
movsl
xor
mov
jo
outsl
push
dec
test
lods
sbbb
inc
xor
xor
lcall
clc
and
call
jmp
loope
mov
movsb
pop
lcall
test
dec
jecxz
inc
mov
test
jmp
add
int3
adc
push
out
insb
mov
loop
cmpsb
cmpsb
and
sbb
imul
movsl
xor
test
loopne
sbb
mov
leave
mov
pop
adc
test
dec
sbb
xchg
mov
mov
push
fldl
sti
cld
sti
xor
lods
pusha
out
outsb
inc
pop
stos
jmp
hlt
cmp
test
cld
add
mov
lods
mov
xorb
adc
subl
fwait
mov
cmp
cmp
mov
jmp
adc
out
movsb
sub
sbb
inc
fldt
das
aas
sti
mov
mov
loope
add
jns
adc
js
mov
xchg
mov
xor
hlt
insb
mov
aad
test
pusha
mov
imul
sub
push
and
dec
fwait
roll
mov
sti
mov
out
mov
ljmp
addl
push
push
sti
xlat
xor
in
jo
add
lahf
dec
loopne
lcall
rcr
push
imulb
jp
fisttpll
push
gs
xor
cmp
mov
push
shlb
test
push
out
mov
in
mov
jae
push
outsl
mov
jne
pop
push
pop
ds
add
sbb
addl
cmp
add
push
lret
outsl
xchg
out
repz
dec
psubsw
push
lret
in
pushf
mov
popf
cmp
loopne
add
pop
scas
mov
xor
inc
fstpt
dec
sbb
sub
xlat
xchg
inc
sub
add
shl
sbb
stos
adc
inc
push
loopne
mov
add
cmp
inc
std
push
mov
inc
cmpsb
ret
in
mov
aaa
adc
in
bound
loopne
pop
rcl
jae
ljmp
js
add
insb
nopl
inc
fstpl
test
mov
inc
into
rorb
xchg
mov
pop
push
add
scas
pusha
jo,pn
mov
imulb
enter
mov
mov
lahf
cmp
ret
aam
hlt
cmp
cmp
call
push
into
push
add
push
arpl
push
push
lahf
icebp
insl
xor
aaa
adc
aas
sbb
imul
push
mov
mov
pusha
jmp
sar
and
jge
cmp
cmpl
insb
cmp
mov
cmp
adc
call
dec
cmpsl
repz
and
pushf
cmc
mov
insb
je
cwtl
xchg
fs
bound
loop
mov
pusha
lods
xchg
cmp
xchg
movsb
mov
inc
and
or
pop
cmp
mov
je
push
repz
outsl
lods
gs
sub
pop
aaa
xchg
lcall
shrb
xchg
xchg
pop
test
es
xlat
jo
xchg
out
sbb
adc
mov
ret
out
jo
ficomps
mov
jbe
mov
movsl
in
or
push
adc
adc
mov
std
sub
lret
rorl
aam
imul
or
arpl
jge
adc
fadd
mov
ret
cmp
shlb
popf
scas
pop
cmp
loope
push
insb
add
adc
xor
mov
icebp
std
jmp
mov
mov
int
loop
hlt
imul
dec
adc
fildll
ret
andb
mov
or
rcrb
mov
jle
sub
mov
inc
pop
mov
adc
imul
insb
lods
pusha
sbb
shll
adc
xchg
xchg
mov
xchg
je
pop
xchg
and
add
fdivs
stos
jae
push
adc
dec
shrb
or
test
in
or
sub
pop
sbb
adc
stos
jnp
in
pop
adcl
xchg
push
jl
pop
mov
cmp
ds
sbb
dec
push
inc
jl
jle
lret
or
and
and
flds
dec
out
fldl
sub
xlat
aam
jb
cmp
xchg
sbbb
insl
add
xchg
shlb
mov
into
mov
add
pop
imulb
mov
ficoml
or
pop
rclb
inc
push
lahf
cmp
and
neg
xchg
andb
outsl
mov
test
lods
popa
shlb
stos
pop
and
mov
popf
add
fiaddl
pushf
jnp
pop
mov
cmp
iret
orl
pop
movsb
cs
pushf
mov
lds
iret
jnp
xchg
xlat
and
fucomp
and
test
clc
mov
push
imul
fistpl
cmp
call
xchg
xchg
insb
xchg
add
mov
lahf
jmp
mov
jecxz
mov
movsb
or
inc
jecxz
adc
dec
inc
cmpsl
fs
ret
stc
nop
roll
mov
mov
adc
add
xchg
inc
pop
vmread
push
mov
cmp
pop
test
inc
movsl
xor
mov
aad
push
dec
mov
inc
mov
inc
scas
dec
push
jl
pop
pushf
test
mov
mov
xor
andb
push
push
cld
add
jle
loope
xchg
xor
or
and
test
cmp
jge
popf
cmp
mov
mov
jno
icebp
loope
sbb
andb
or
hlt
popw
test
sbb
outsl
lds
sbb
sti
mov
mov
xchg
sub
call
xchg
shl
xor
adcb
mov
outsb
inc
push
sub
pop
mov
cmp
pop
sbb
std
sbb
adc
mov
mov
into
sub
sub
scas
loopne
jp
mov
stos
mov
mov
lods
lcall
mov
or
out
das
in
cmp
pushf
aas
jp
lds
dec
mov
pop
enter
and
jmp
adc
jle
or
sub
xlat
dec
inc
shl
mov
mov
dec
and
pushl
hlt
dec
mov
cs
push
jecxz
adc
mov
loopne
xchg
sub
pop
cld
or
mov
fwait
sub
pop
mov
into
and
sbb
lret
js
lret
adc
xchg
jl
movsb
mov
hlt
stos
data16
bound
jp
cmp
insl
les
mov
inc
sbb
add
mov
dec
mov
dec
cltd
pop
and
jl
rolb
adcb
push
popl
int
and
lods
jnp
stc
and
mov
push
lret
push
and
mov
push
loopne
add
clc
roll
clc
pusha
sub
inc
fnstcw
cmp
lods
xor
fistpll
stos
repz
outsl
and
cli
or
xor
xchg
mov
xchg
add
jle
mov
dec
in
or
ret
lods
fstps
mov
adc
dec
mov
fsub
inc
dec
jbe
call
xchg
cmp
test
adc
cli
int
mov
push
xchg
xlat
mov
ret
fcom
hlt
ret
adc
ljmp
shlb
lea
pop
pop
fimuls
pop
shll
push
ljmp
dec
sarl
in
sbb
test
jle
inc
sub
leave
xchg
cmpb
pop
sbb
data16
sar
or
mov
push
in
xor
push
sub
sub
cmp
xchg
sarb
and
ret
sub
out
adcb
pop
inc
push
adc
test
add
sub
xchg
inc
mov
jae
jle
loope
inc
test
inc
fimull
out
les
lods
sub
jbe
fdivrl
sbb
or
stos
push
mov
and
bound
or
aam
cmpsb
pop
sub
stos
inc
adc
mov
jno
lret
fs
fs
cmp
cmp
cmp
mulb
jge
jns
cmp
int3
mov
mov
sbb
mov
aad
cmpw
push
xchg
or
adc
int3
mov
stos
add
faddl
mov
dec
jne
pop
xor
jl
and
mov
out
pop
pop
add
sbb
mov
add
aam
iret
int3
ss
lock
fsubrp
fdivl
fisttps
ljmp
mov
lret
decl
test
adc
sub
fsub
icebp
sbbb
xchg
add
and
jo
xor
popa
jne
aas
push
das
roll
mov
xchg
pop
dec
pop
popa
adc
ss
in
test
dec
mov
in
cs
xchg
mov
sub
hlt
loop
roll
inc
push
inc
in
adc
add
lret
orb
pop
sbbb
mov
enter
adc
jae
jae
lock
mov
push
sbb
mov
fsubrs
pop
sbb
lods
xchg
mov
in
mov
and
loop
xchg
fwait
sub
mov
sbb
cmc
push
mov
jecxz
mov
stc
xor
aaa
paddb
xchg
rcrl
in
sub
push
imul
fdiv
int
sbb
rcll
cltd
imull
jo
lods
shll
xor
test
lds
call
lock
pop
das
mov
cli
lods
loope
mov
dec
rcll
cmp
xor
mov
leave
sub
daa
ret
into
stos
rcrb
out
or
stc
fcoml
jge
mulb
push
roll
mov
sbb
into
cs
mov
dec
cmp
bound
dec
lds
sbb
inc
inc
pop
add
aam
fs
les
push
xchg
int
inc
daa
dec
aaa
push
test
adc
iret
lahf
jno
push
push
add
and
lods
leave
xlat
rolb
mov
push
int
push
into
jbe
mov
out
xor
mov
icebp
adc
loop
jb
sbb
jns
jae
xchg
sub
les
arpl
mov
sbb
mov
dec
in
mov
dec
push
mov
mov
sbb
or
ja
add
orb
or
push
int
rclb
jg
cmp
jl
mov
sbb
jl
jmp
rorb
push
aas
int3
pop
push
and
dec
movsb
roll
add
repz
out
aaa
lret
pushf
push
cmc
add
mov
js
mov
fistpl
push
cmp
outsl
jp
jp
mov
xchg
push
enter
je
ret
loope
ljmp
int
add
cmp
push
or
mov
and
out
adc
mov
dec
push
sub
xchg
mov
js
aad
popa
jb
cmp
mov
add
jae,pt
fidivrs
xor
std
jge
jg
shrb
cmp
jmp
rolb
sub
and
ret
mov
cmp
push
mov
call
sub
xchg
int3
adc
adc
lods
lahf
repz
ret
dec
lret
pop
mov
cltd
aam
and
or
aas
add
push
cmpsb
cmpsb
aam
or
loopne
cmp
lods
imul
bound
loope
inc
cmp
nop
xor
or
and
push
pop
mov
mov
das
mov
scas
and
pop
repz
mov
xor
jp
popf
jno
xchg
aas
scas
or
cwtl
divb
shlb
mov
imul
push
jne
das
push
stc
clc
push
mov
mov
lahf
aad
mov
test
xor
dec
das
out
idivb
jo
iret
xchg
pop
lds
rolb
hlt
js
subb
jmp
enter
xchg
mov
lea
test
cmp
mov
test
cmpsl
lcall
fsubl
in
or
xchg
push
mov
and
xchg
mov
inc
push
xor
mov
pop
and
movsl
nop
aam
sti
or
sub
sarb
daa
lds
maskmovq
les
inc
xor
sbb
cmovg
aam
pop
aam
push
add
daa
or
xchg
test
popf
out
mov
ret
push
inc
xchg
test
sarb
push
movsl
pushf
shll
insb
ret
pop
push
pusha
stos
ljmp
mov
out
sarb
inc
push
jne
ja
dec
in
pop
cwtl
jno
cmp
xor
xchg
bound
lcall
int3
int
loope
mov
xor
pop
push
add
cmpb
and
push
jecxz
test
or
testl
or
js
mov
idivl
sub
out
js
sub
and
jno,pt
mov
mov
orb
mov
and
lcall
xlat
es
mov
sbbl
push
pop
sbb
mov
dec
dec
cld
and
filds
sbb
out
dec
mov
or
pushf
repnz
ret
pop
mov
rorb
mov
xchg
out
call
out
and
and
sbbb
inc
or
les
idiv
cmp
loope
inc
mov
outsb
and
out
shlb
movsb
mov
mov
les
inc
add
push
cmpsl
sub
outsb
lods
into
repz
jmp
xchg
or
sbb
clc
ficoms
out
add
imul
inc
ljmp
mull
fldenv
push
data16
mov
ret
adc
icebp
rolb
rorb
mov
mov
iret
jmp
push
cs
notb
and
test
dec
mov
pop
mov
out
lret
jb
aam
push
pop
and
mov
or
xchg
scas
dec
lock
dec
out
xchg
pop
cmp
out
inc
mov
cmp
icebp
ss
imul
int
and
aad
loopne
dec
jmp
in
xchg
or
insl
ds
lret
pop
fcoms
dec
andb
inc
xchg
hlt
imul
add
mov
daa
lea
pop
mov
add
jo
inc
shl
lods
insb
dec
cmp
sbb
lret
jns
mov
pop
mov
js
jns
sub
arpl
jge
subl
inc
addl
adc
xchg
push
cltd
into
in
pop
push
gs
xchg
xor
or
fxch
testl
sub
and
lods
sbb
dec
clc
mov
enter
mov
mov
push
jb
push
mov
loopne
and
mov
in
stos
jle
mov
scas
lock
inc
popa
mov
repnz
fbstp
mov
add
mov
sahf
outsb
pop
cli
shll
fidivrl
insb
fsubrl
or
mov
and
shrl
mov
dec
mov
rclb
jo
popa
iret
movl
pop
and
mov
cld
lods
mov
cmp
movsb
adcb
pop
stc
mov
js
pop
in
or
jno
dec
lret
shrl
adc
movsb
outsb
scas
add
or
push
lods
add
cmpsl
adc
cmpb
shrl
sub
leave
push
arpl
push
stc
mov
in
mov
adc
jb
push
stos
sbb
xor
fidivrs
mov
sbb
popa
imul
sbbl
mov
hlt
and
mov
mov
aas
enter
mov
movsb
sbb
jno
dec
cld
cld
cmp
mov
xchg
hlt
ret
xor
push
dec
rorl
imul
push
aas
clc
mov
sub
cld
jns
faddl
jp
mov
xor
inc
arpl
xchg
and
aaa
pop
jecxz
lds
in
jg
movsb
pop
jp
inc
jae
sti
dec
jns
shlb
mov
pop
cltd
push
cmp
leave
mov
fstpl
outsl
negl
mov
icebp
jns
or
movsl
xchg
roll
movsb
xchg
add
jnp
cmc
adc
rcll
enter
mov
ds
scas
and
idivb
jp
cmpsl
xlat
nop
or
adc
mov
mov
adcb
test
jae
scas
add
mov
push
jo
outsl
out
lds
sub
into
mov
ds
jmp
mov
in
in
push
jge
aaa
push
push
pop
fists
pop
inc
mov
je
not
jecxz
fmull
sub
sub
test
lahf
inc
mov
call
sbb
sbb
popa
stos
mov
fisubrl
cmpsb
lahf
es
jnp
rcr
aam
aam
mov
test
jne
ljmp
test
push
mov
xchg
xchg
xchg
pop
insb
push
rcrb
lods
pop
notb
dec
and
jl
sbb
mov
mov
into
lret
pushf
fisubl
js
jo
test
and
test
jl
fiadds
inc
test
add
mov
push
pop
ljmp
and
xchg
mov
lret
xor
mov
test
test
inc
mov
cmpsb
je
push
scas
lds
int
bound
mov
lods
sub
pop
test
pop
mov
sbbb
inc
adc
lea
sbbb
aam
sub
cmp
sbb
cmp
shll
je
jae
inc
lahf
fistps
in
mov
xor
sub
fdivs
lds
and
push
mov
push
inc
fists
enter
xor
xchg
sub
push
mov
jo
ljmp
lret
cltd
inc
xchg
stc
or
mov
icebp
int
fsubl
ss
ljmp
mov
leave
std
in
push
mov
lds
movsl
rcr
insb
mov
mov
mov
push
cmc
mov
inc
jns
leave
pop
ret
shrl
jb
out
dec
add
pop
sbb
mov
and
or
add
dec
in
fcompl
loop
jne
mov
out
mov
dec
xor
add
jns
or
and
cmp
test
jae
fwait
add
movsb
mov
push
dec
in
movsb
cmpsb
das
mov
xor
test
xor
mov
repz
rorb
mov
jecxz
sub
mov
lret
inc
fwait
arpl
sub
ret
or
inc
scas
pop
push
and
jnp
and
push
arpl
loopne
cmp
cltd
outsl
or
jmp
mov
in
mov
pop
insb
into
loope
sub
xor
xor
inc
addr16
fmuls
jge
jecxz
cmp
mov
dec
pop
cmpsb
repz
aaa
fwait
pop
mov
adc
lret
push
and
mov
incl
inc
xor
add
mov
fadd
sarb
xor
adc
mov
fidivs
out
cmp
in
and
call
decl
test
mov
shl
prefetch
or
je
pop
lods
or
push
adc
add
lods
pop
xchg
mov
test
addr16
out
add
in
insl
sbb
ljmp
fwait
jmp
and
mov
pop
xor
subb
push
adc
adc
sahf
add
les
mov
loopne
aas
ljmp
sbb
inc
adc
jle
mov
orb
std
lret
data16
popf
mov
and
fstpt
in
shlb
push
into
push
loope
pushf
pop
dec
or
dec
jmp
cmp
outsl
ja
add
sub
and
adc
cli
outsb
sbbb
lahf
sub
lret
sbb
loopne
rcrl
xor
pop
ficomps
jge
insb
and
sbb
loope
or
pop
push
cmp
cmp
shll
pushf
mov
fcomps
in
inc
dec
sti
add
pop
inc
jbe
mov
mov
insb
loopne
inc
sub
add
xchg
rcl
lret
xor
std
add
pop
push
out
and
cld
mov
xchg
sbb
leave
iret
insb
cli
inc
dec
xorb
lret
gs
lret
mov
sbb
rolb
cli
mov
dec
insb
sbb
xchg
mov
jecxz
scas
xchg
rolb
xchg
jne
sub
test
pop
push
ret
and
out
xchg
mov
cld
sub
orb
mov
or
mov
testl
shll
movsl
test
xchg
sub
inc
enter
popf
dec
jge
jge
fimull
mov
push
pop
out
sbb
daa
jp
fnclex
push
fst
sbb
ja
aam
lds
sub
pop
xchg
push
xor
fldcw
or
adc
je
cmp
in
ljmp
or
inc
lret
pop
out
lret
xchg
cmc
inc
jge
xchg
cwtl
cltd
addb
xor
into
add
jge
dec
cmpl
rorb
sub
rcr
int
push
cli
mov
or
sub
xchg
mov
xchg
jecxz
sbb
sub
add
fimull
outsl
test
rcll
test
adc
xor
in
ss
adc
scas
ljmp
loope
dec
xchg
and
pop
mov
stc
add
or
daa
mov
mov
pop
mov
insb
lods
rorl
dec
mov
and
rcrb
mov
dec
pop
mov
pop
in
fcmovnb
add
mov
push
insb
fnsave
sbb
mov
or
nop
pop
inc
test
divps
inc
cmp
into
inc
pop
rcrl
xor
push
into
out
js
cmpsl
jecxz
test
ds
cmp
imul
dec
mov
fwait
jns
das
sub
outsb
repz
ficoms
push
aam
mov
mov
jb
aas
out
dec
or
cmp
push
or
mov
mov
xchg
ljmp
jno
stos
cli
in
mov
mov
movsb
mov
fdivl
stc
sub
xor
xor
aam
hlt
push
loope
call
out
mov
cmpsl
test
push
cmp
movsl
or
mov
adc
addr16
add
pop
aad
gs
mov
push
sbb
jnp
pop
xchg
daa
js
fidivrl
push
mov
es
ds
xchg
rclb
mov
shll
loop
cmp
pop
out
movsb
mov
adc
mov
xchg
fsub
aaa
insl
cld
jb
mov
push
cmp
xchg
movsb
cmp
mov
add
adc
repz
mov
imul
and
mov
xchg
aad
int3
add
pop
lret
mov
enter
sub
stos
stos
aam
lods
pushf
lods
push
test
popa
aas
inc
arpl
jp
jle
add
xor
lahf
into
inc
clc
push
xchg
inc
es
mov
ret
jge
mov
in
lcall
and
fcomps
je
imul
loopne
das
mov
rorl
mov
sbb
cmp
jp
or
icebp
xorl
ja
or
pop
add
ror
subb
mov
fwait
pop
out
dec
in
adc
int3
push
pop
scas
loopne
sub
popa
ja
lcall
push
push
lcall
rcrb
pusha
pop
mov
adc
ret
inc
scas
adc
and
xor
fbld
addr16
dec
pop
jg
loope
xchg
inc
lret
or
rclb
jge
je
call
hlt
or
mov
mov
aad
xor
adc
lahf
adc
lahf
jo
dec
xor
sahf
pop
xchg
xor
ds
out
in
push
xlat
mov
rclb
adc
cs
imul
cmpsl
mov
pause
push
int
jge
jp
ret
dec
ljmp
jmp
fs
hlt
pop
xchg
mov
test
lret
imul
movsb
cmp
sbbl
int
test
rcll
push
pop
push
out
sub
cmc
ds
je
scas
lcall
xlat
inc
sub
orl
in
sub
push
dec
cwtl
mov
xchg
jnp
out
popa
aas
lea
test
aas
enter
mov
movsl
test
sbb
outsl
pushl
fdivl
cld
pop
inc
pop
and
cmp
jp
mov
push
push
in
push
in
movsb
clc
and
add
je
mov
sbb
lahf
sub
popa
jns
jg
in
or
sbb
pop
mov
adc
js
cmp
mov
loop
mov
mov
data16
adc
scas
push
cltd
and
pusha
adc
les
jno
nop
mov
cmp
mov
jg
xchg
mov
xchg
jge
dec
nop
pop
xchg
lcall
int3
xor
ds
aaa
dec
sub
or
jae
push
add
jmp
add
out
pop
lock
xchg
add
pop
addr16
mov
sub
inc
fisttpl
push
gs
int
push
lods
inc
test
pmaxub
inc
fisubl
adc
int
loop
and
addr16
mov
sbb
cmp
outsl
test
test
shrb
or
sbb
lcall
xchg
or
cmp
push
push
daa
sti
aaa
add
das
or
fcompl
cmpsb
pusha
jmp
and
subl
dec
iret
fdivrs
ss
repnz
dec
lock
rcll
xchg
sbb
mov
int
insl
xchg
popf
inc
aam
loope
fcompl
adc
popa
fisubs
lret
jbe
jmp
orl
test
pushf
or
pop
das
das
pusha
add
or
movb
jg
shlb
or
mov
mov
dec
out
lret
mov
or
sahf
xor
add
stos
roll
sbb
dec
in
adc
rorl
mov
jp
pop
mov
fbstp
rol
test
inc
pop
adc
decl
insl
cmp
dec
jmp
leave
aam
add
inc
cmc
in
or
or
inc
test
scas
lods
test
adc
mov
sub
loop
push
sbb
test
pop
cmp
mov
adc
ljmp
dec
repz
lods
jae
dec
cld
cld
xor
arpl
hlt
xchg
pop
push
mov
pop
in
hlt
cmp
mov
cmp
lods
sbb
lods
pop
stos
add
push
nop
xorl
rcll
mov
adc
jns
push
outsl
pop
jno
push
into
sub
fisttpl
movsl
mov
cmp
je
popf
sarl
jmp
std
mov
inc
lds
mov
mov
outsb
adc
pop
popa
sbb
adcl
mov
fs
xchg
and
mov
xor
mov
pop
xor
add
sahf
pusha
std
inc
rcll
add
cmp
cmc
pop
mov
adc
js
cmpb
xor
xchg
pop
push
lret
pop
cltd
in
adc
call
clc
in
imull
inc
and
rcrl
dec
icebp
sbb
cmp
cmpsl
fistps
fisubrl
loop
xchg
xchg
aam
fstps
xchg
ja
fisubrs
in
mov
xchg
ja
loopne
dec
and
je
rclb
or
insb
outsl
jae
jmp
lret
test
movsl
andb
popf
repnz
mov
cmp
addr16
sbb
in
cli
inc
add
cltd
xorl
pop
and
shrl
fimuls
add
out
or
testl
ljmp
or
push
rcl
stos
in
in
ljmp
jne
pop
movsl
inc
cmpsb
cmp
sbb
scas
in
sbb
xchg
stc
shlb
addr16
jl
lods
dec
jb
imul
sub
shlb
mov
mov
mov
push
cmp
jno
lds
mov
int
mov
gs
mov
sbb
xchg
flds
adc
insl
aas
aaa
sub
xor
xchg
test
jno
inc
xorl
add
in
nop
add
mov
pop
inc
fcom
push
mov
scas
cmp
and
mov
test
jg
ret
es
adc
xlat
inc
data16
add
out
xor
add
adc
enter
pop
popf
xchg
test
sbb
jp
repnz
mov
movsb
test
xlat
ficomps
ret
push
loop
cli
imul
mov
es
xor
ja
mov
mov
fidivrs
inc
inc
stos
xlat
lds
and
fcmovne
rcrl
push
lahf
stos
dec
mov
push
inc
mov
ja
inc
out
test
iret
dec
push
or
mov
sub
shrb
data16
mov
lret
cmp
dec
std
jbe
jmp
and
mov
outsb
jo
or
jp
cmp
aam
insl
movsb
gs
mov
pop
xor
aas
movb
mov
popa
dec
stos
mov
jb
imul
es
sub
hlt
xor
push
inc
mov
aas
mov
cmp
je
jb
negb
popa
sbb
push
mov
and
dec
and
test
ret
inc
rcl
pop
push
ret
shll
push
mov
gs
std
xor
hlt
aaa
mov
jne
xchg
dec
or
add
inc
aam
xor
add
leave
aad
vpunpckhdq
std
and
adc
je
mov
push
jbe
flds
sub
cmpsb
inc
cmp
xchg
xchg
pop
pop
call
ja
cmpsb
ljmp
jne
and
cmp
mov
jb
xchg
or
es
xchg
ljmp
pop
dec
les
gs
sub
je
ret
lods
jno
or
and
int3
sbb
call
adc
in
in
xor
fadds
fldcw
xchg
pop
jbe
sahf
lahf
or
imul
adc
cmc
cwtl
pop
fsts
movsl
cmp
dec
enter
push
add
mov
pop
sbb
test
movsb
sub
mov
divb
adc
lods
adc
hlt
test
into
jo
pop
enter
cs
sub
lods
mov
push
add
mull
lahf
cwtl
loop
or
scas
nopl
test
sbb
fiadds
xor
lret
cmp
shr
and
cs
inc
jl
or
ret
loope
jae
int
pop
and
mov
sub
mov
mov
enter
inc
lds
out
or
adc
dec
pusha
int3
rorb
lds
sti
fstl
pop
mov
fildll
mov
inc
mov
test
out
loop
lods
add
and
call
cli
adc
stc
xchg
sahf
dec
scas
dec
scas
cmc
outsb
shr
fistl
mov
xchg
sub
add
cmpsb
int
xchg
inc
cld
daa
movsl
pop
push
add
loopne
ret
sbb
mov
std
cmp
sbb
jmp
sbb
cli
xchg
not
out
lds
ss
lds
jb
jmp
in
sbb
jnp
push
inc
jmp
das
movsl
outsb
adcl
sub
inc
dec
out
cmp
icebp
inc
insb
sbbl
push
lahf
imul
push
movsl
fmul
sbb
repz
xchg
sbb
dec
xor
mov
dec
push
sub
xchg
test
mov
data16
inc
dec
mov
repz
pop
xor
clc
lods
int
and
test
adc
pop
nop
add
imul
loop
ss
xor
jge
sarb
add
inc
jecxz
pusha
and
outsl
stos
hlt
cmp
outsb
std
or
insb
js
lds
or
mov
pusha
or
xchg
fnstenvs
mov
dec
pop
push
mov
dec
jmp
outsb
rol
pop
movlps
roll
or
mov
movsb
test
shr
sbb
add
mov
mov
mov
or
sahf
mov
cwtl
xchg
mov
adc
dec
out
xchg
notl
es
jg
add
mov
lret
push
jno
aaa
push
cld
cmp
xor
mov
rcrb
stos
mov
mov
sahf
cltd
outsb
cmp
xor
clc
mov
imul
scas
pop
icebp
lds
and
push
adc
sub
sbb
aad
shr
lret
daa
dec
in
xor
jb
pop
mov
pop
sub
adc
cs
adcb
adc
xchg
ret
mov
fisttpl
loopne
in
cmp
inc
pop
test
jmp
mov
lret
push
aas
cmpsl
fwait
rcl
adc
scas
push
sti
out
movntps
jb
pop
ret
xchg
into
jg
sub
repz
mov
gs
cmpsb
sub
testb
add
in
bound
fsqrt
leave
loop
divb
pop
ja
mov
popf
dec
xchg
mov
cmc
stos
loopne
das
sub
sub
mov
loop
mov
cmp
dec
pusha
call
push
aaa
sbb
hlt
adc
and
add
pop
sbb
sub
nop
shlb
loope
arpl
xchg
mov
loop
aas
and
rcrb
rorb
mov
mov
or
je
jecxz
jne
popf
pop
filds
sub
imul
xor
lahf
movsb
sarb
xor
or
popl
dec
movsl
or
or
ja
add
hlt
push
imul
adc
iret
ret
add
adc
fstpt
in
cmpsb
nop
repnz
or
cmp
mov
aaa
cmpsl
test
jns
sbb
mov
push
sbb
ret
jecxz
rorl
mov
inc
out
jno
daa
mov
lds
out
mov
fisttpl
or
lods
out
pushf
xor
sub
mov
lds
loop
in
and
sub
xorl
mov
fisubrl
inc
push
nop
or
sub
fxtract
inc
sarl
ss
test
ds
into
shll
inc
loop
fsubrs
stc
scas
lea
inc
aas
sub
adc
mov
mov
ljmp
jb
pop
add
lcall
pusha
jge
jle
cmpsb
or
sub
sbb
fildll
and
scas
stos
into
fcmove
jnp
shll
stos
repnz
push
jge
adc
sub
cld
sub
nop
cli
sahf
sub
jno
inc
jle
dec
notb
xlat
roll
sub
js
mov
movsb
xchg
ret
out
lahf
mov
jae
jnp
lods
clc
mov
cwtl
mov
pop
sti
idivl
lea
inc
cmpsl
rcrb
call
negl
sti
jl
loope
xor
mov
neg
lret
ret
insl
push
ljmp
inc
leave
jae
pop
push
mov
cmp
mov
jo
pop
scas
mov
pop
fs
ret
or
cld
ja
shr
pop
cmp
aas
into
pop
mov
ficomps
jge
sahf
cwtl
jle
jb
cmpsl
je
out
mov
or
arpl
xchg
inc
imul
into
pop
insl
xchg
cmc
arpl
mov
fwait
inc
int3
jle
sbb
fldcw
pop
fwait
adcb
jmp
adc
std
lret
mov
leave
insl
hlt
icebp
stc
cmp
stc
sub
add
inc
pop
sbb
jne
or
ret
iret
and
movsb
jp
cmpsl
push
cmpsl
xchg
sub
and
or
lods
jns
div
fs
js
in
xchg
daa
add
pop
daa
add
scas
mov
out
jmp
mov
sti
divb
sub
ror
xchg
pop
clc
dec
adc
and
imul
mov
bound
mov
int3
mov
lret
or
xor
dec
mov
scas
movntq
out
fdivl
mov
out
aad
lret
mov
loopne
pop
sbb
sbb
fldcw
add
push
jb
cmp
dec
pop
out
pop
jge
xchg
inc
ret
add
into
test
mov
mov
in
mov
mov
stos
leave
inc
xsave
cmpsl
andl
stc
rol
xchg
inc
data16
push
dec
add
mov
lcall
cli
movsb
mov
dec
push
lcall
out
or
cmc
sub
xchg
insb
rcrl
test
in
push
dec
xchg
push
push
out
ret
cmpsb
sbb
call
mov
cmp
xchg
xor
repnz
inc
int
pop
jmp
jno
xor
dec
jl
pop
jnp
lea
jmp
scas
jae
cltd
vcvtdq2ps
xor
or
pop
mov
inc
fists
into
and
ret
mov
je
jle
les
push
pop
cmpsb
out
sub
adc
push
lock
jo
pop
aam
fs
addr16
test
adc
pop
or
arpl
cli
orb
sbbb
adc
xchg
jne
xchg
jmp
mov
fisubrs
mov
xchg
sbb
out
mov
lea
xchg
hlt
mov
lods
push
xorl
addr16
add
movsl
sub
pop
inc
inc
sbb
mov
inc
loopne
movl
and
xchg
cmc
aaa
or
push
mov
push
pusha
sub
mov
dec
dec
cltd
add
jnp
jmp
inc
push
jbe
sbb
dec
add
fdivrs
fimuls
jne
adc
fldt
movsb
or
cs
cmp
arpl
xlat
ss
jl
add
add
cmpsl
mov
jmp
and
push
int3
into
roll
xchg
xchg
scas
push
rolb
jecxz
cs
shl
cmp
stos
das
xor
test
mov
mov
xor
das
adc
adc
adc
add
inc
lcall
test
enter
loope
loope
je
loop
mov
fs
sbb
xchg
or
rclb
mov
sbb
mov
into
pop
sub
xlat
test
dec
adc
loope
mov
mov
mov
inc
or
mov
mov
hlt
jl
pop
and
inc
cvtpi2ps
fprem
push
ja
fidivrs
imull
mov
sub
cmp
add
push
out
or
or
fwait
cmpsl
inc
push
push
les
xchg
jp
je
and
pop
xor
dec
and
loopne
fildl
popa
sbb
adc
inc
jecxz
in
fldenv
int3
cmpsl
push
repz
or
icebp
mov
push
mov
push
loope
sub
pop
into
pop
cltd
out
mov
jge
xor
idiv
je
imul
dec
mull
aas
outsl
pop
or
cmc
sahf
xor
ljmp
fucom
dec
jae
pusha
pop
jmp
push
jb
mov
clc
int
mov
mov
cltd
dec
imul
xor
add
lock
inc
jle
cmp
fmull
xor
mov
xchg
add
pop
mov
mov
ljmp
test
test
push
cld
into
push
jo
mov
int
sub
dec
test
lcall
pop
lcall
test
das
add
out
insb
fisubrl
cmc
cmpsb
sub
loope
mov
insb
pusha
xor
dec
inc
xlat
daa
and
lods
push
sbb
mov
sahf
or
and
pop
imul
das
mov
dec
in
sub
call
mov
xchg
cmp
pop
inc
call
lds
mov
push
push
inc
mov
les
sarl
lret
ret
jge
mov
push
add
hlt
sbb
fwait
sbb
aam
negb
push
movsb
xor
es
mov
adc
aaa
out
inc
jo
lret
ffreep
dec
pop
jge
jae
popf
xchg
jle
mov
mov
cmp
fstpt
fnstsw
and
xor
insl
jle
stos
testb
push
lods
fs
ss
inc
movsb
sub
mov
and
mov
sbb
sbb
cwtl
add
in
pop
imul
out
push
pop
jecxz
cmpsl
in
sub
jo
stos
xor
std
nop
xor
ret
sub
or
sti
test
ret
jnp
dec
arpl
rcrb
jp
cmp
jno
xchg
mov
imul
mov
movd
in
fistpll
jb
pop
dec
ret
fidivrl
jge
cmp
popf
pop
cmp
jl
dec
in
xlat
int
in
loope
test
push
lock
movb
adc
and
push
pop
and
push
fistl
lods
fmuls
sbb
adc
repz
xor
push
inc
xor
sbb
inc
shll
aam
scas
xchg
sub
jo
push
and
xchg
dec
cld
jb
jo
cli
js
jle
das
or
xchg
sbb
lcall
ret
or
faddl
leave
mov
call
shlb
mov
insb
adc
push
aas
fadd
sahf
imul
lret
roll
test
jl
push
add
pop
pop
pop
std
inc
rcl
pushf
xchg
enter
stc
or
sub
mov
push
add
or
test
movsl
cli
dec
inc
or
sub
dec
add
hlt
add
cmp
pop
movsb
xor
cmpsb
xor
or
cmp
adcl
fnsave
sbb
adc
outsb
dec
test
imul
push
sti
mov
in
stos
xchg
cld
mov
aam
add
jecxz
lods
and
stc
int
lods
xchg
dec
and
xor
shrl
loopne
sub
aaa
jg
cmp
add
loop
pop
xchg
data16
mov
outsl
outsl
inc
or
jae
sub
insb
mov
lahf
je
mov
mov
cmp
xor
xor
sbb
rcrl
popa
pop
lcall
pop
out
sub
push
aas
dec
jno
loope
or
in
int3
jno
mov
jecxz
jbe
sub
lods
leave
les
test
lods
aam
mov
and
sbb
cmp
lahf
int3
enter
xchg
sub
mov
inc
add
das
bnd
and
or
adc
int
sbb
inc
fstpl
unpckhps
lahf
add
sub
lcall
cmpsb
bound
jno
test
loopne
cltd
imul
xchg
repnz
inc
pop
sub
jp
sbb
xor
jb
lds
pusha
repz
cmp
fdivs
js
sbb
addr16
xor
sub
pop
sub
iret
aas
loopne
mov
lret
ds
jns
sbb
inc
aad
cwtl
cs
pushf
jnp
dec
dec
inc
push
dec
push
mov
or
data16
mov
nop
outsl
lds
das
push
xchg
or
push
mov
add
test
shll
test
xchg
leave
and
dec
sbb
cmp
adc
fbld
into
jp
insb
fwait
add
mov
cli
push
and
pop
cmp
inc
popf
mov
mov
shrl
cld
leave
out
decb
in
fcmovbe
adc
push
cld
aad
dec
cmp
pop
cltd
inc
jl
push
lret
cmp
xchg
inc
cwtl
cli
das
and
mov
ljmp
lret
sbb
dec
neg
xchg
ss
mov
addr16
jge
scas
push
test
insl
or
cli
test
or
out
adc
or
mov
add
cmpsl
xor
popf
and
mov
in
iret
pop
outsb
xor
movsb
rcrb
aaa
or
jno
sbbb
mov
lcall
das
dec
nop
in
pop
mov
pop
jg
dec
leave
cmp
orb
incb
dec
xchg
push
or
repz
repnz
aaa
cmc
pop
daa
mov
push
or
hlt
ds
cmpb
xchg
out
insl
lds
push
fsub
xchg
mov
cmpb
xor
negl
push
jmp
dec
and
sub
addl
mov
loopne
pop
push
gs
cmp
subb
or
cmp
hlt
push
mov
fsub
jmp
cmp
jle
stos
pusha
push
mov
mov
scas
sahf
add
ja
mov
jne
aad
lahf
les
iret
or
jae
repz
push
push
sbb
jmp
arpl
shl
cli
push
jb
cmp
es
push
test
or
push
jb
popa
cmp
mov
push
push
cmp
fnsave
call
lods
addr16
sbb
push
scas
inc
xchg
sahf
mov
dec
push
popa
add
mov
sub
push
push
out
mov
test
call
sub
loopne
stos
push
and
shld
fimuls
es
sbb
test
subb
push
dec
rolb
push
xor
xchg
rcrl
xor
add
int3
jmp
adc
imul
int3
sub
loop
add
arpl
pop
dec
sbb
inc
dec
xchg
pop
pop
imul
adc
adc
jo
pop
jo
int3
jno
sbb
shrb
jp
in
icebp
push
jge
jl
mov
add
dec
out
and
jae
idivb
enter
je
adc
xor
cmp
les
cs
out
cmp
js
cs
jl
decl
loope
push
adc
push
ds
adc
push
mov
popa
push
mov
sbb
mov
push
hlt
adc
sub
call
mov
imul
sbb
imul
mov
and
xor
jbe
fistps
or
cmpsb
in
je
sub
mov
jmp
ret
cmpsb
lret
mov
pusha
pusha
ljmp
mov
gs
frstor
jge
mov
pushf
inc
cwtl
sarb
mov
lahf
xchg
cmp
mov
and
xor
sahf
ret
pop
dec
stc
mov
add
popf
movsl
pop
roll
fisubl
mov
mov
test
dec
in
mov
xor
fistl
mov
pop
mov
push
mov
arpl
add
xlat
inc
and
cmp
pusha
push
adc
push
adc
in
roll
nop
scas
test
pop
and
test
iret
out
dec
fwait
aam
out
mov
es
inc
aad
adc
das
out
pop
mov
cmp
jecxz
xchg
sbb
push
push
popf
subl
cltd
repz
sub
stc
mov
add
or
enter
std
ds
push
mov
fistl
popf
and
cmp
lret
mov
ss
adc
lcall
popa
sar
sub
js
xchg
xchg
test
nop
mov
mov
sbbb
arpl
pop
std
jae
jns
out
inc
in
and
pop
ljmp
lods
cli
xchg
cs
push
lods
loop
ljmp
jecxz
pop
dec
pop
inc
sub
fs
into
push
push
cmp
sti
adc
inc
push
inc
pop
scas
into
jecxz
outsb
sahf
cmovs
push
ret
cmp
clc
pusha
or
add
mov
sub
sti
or
mov
outsb
inc
push
mov
popf
dec
jge
cmp
jle
or
sahf
rclb
adc
sbb
mov
outsl
dec
lret
xor
add
fisttps
je
jge
repz
mov
mov
scas
push
adc
pop
jg
bound
pusha
xchg
and
xor
insb
mov
test
iret
enter
and
icebp
sub
sub
jns
fsincos
icebp
pop
les
mov
fsubs
addr16
cli
out
testl
icebp
test
jmp
clc
mov
xor
sub
hlt
out
fldt
dec
or
lds
adc
sub
push
pusha
mov
adc
aas
enter
loop
mov
and
cwtl
hlt
add
bound
aam
and
push
ss
fisubl
fcoml
sub
jp
popf
out
paddsw
cmp
push
minps
int
fimull
div
sub
push
adc
aam
fucomi
add
mov
ljmp
call
sub
out
shl
stos
pop
popf
ljmp
addr16
sahf
or
xchg
xlat
dec
test
mov
sbb
or
iret
lahf
mov
xorl
and
inc
or
jge
pop
in
pop
in
outsl
add
cld
xchg
mov
ret
pop
xchg
and
push
ljmp
es
jmp
inc
fistl
ret
fcompl
shlb
dec
lods
dec
sbb
dec
out
decl
inc
cmp
push
cmp
aas
push
loop
inc
les
add
lods
fs
inc
fbld
movsb
xlat
sub
js
adc
push
jg
mov
mov
outsl
inc
cmp
push
add
and
movsb
hlt
loop
nop
fnstsw
inc
jbe
sbb
cmp
sti
and
sub
je
xor
sti
sbb
sbb
push
icebp
cmpsb
outsb
mov
adc
cmp
fwait
add
sbb
dec
mov
cmc
xchg
sti
pushf
ficoml
inc
pop
arpl
xor
test
aad
jnp
cmp
add
mov
daa
xchg
mov
out
in
sbb
mov
jecxz
push
test
lahf
cmp
imul
inc
mov
gs
cwtl
mov
jae
mov
lods
nop
outsl
push
pop
lds
rcrl
xchg
cs
fldenv
pop
xchg
lods
and
lods
add
sbb
or
lea
sub
test
orl
inc
jmp
or
sbb
cld
fstpt
sarb
sarl
lds
push
cmp
test
mov
ret
minps
adc
xchg
negb
cmpsb
pop
repz
outsb
in
mov
and
daa
cs
setle
and
fprem1
jmp
cmpsl
fxch
inc
add
cld
inc
mov
out
out
lds
xchg
and
jl
lret
sbb
xor
dec
mov
xlat
mov
pop
arpl
push
jg
mov
push
int3
mov
fnstcw
popl
sbb
jp
push
dec
mov
lea
mov
test
testb
mov
adc
pop
and
add
dec
mov
mov
pop
in
jb
decl
adc
les
scas
js
cwtl
jae
mov
sub
pop
test
mov
mov
xchg
mov
outsl
pop
mov
and
pop
mov
daa
shll
push
mov
mov
push
xchg
jbe
or
clc
je
nop
mov
push
mov
and
idivl
sti
mov
lods
sbb
mov
adc
cmc
data16
in
fcoms
mov
xlat
mov
jmp
scas
testb
popa
inc
sahf
js
mov
and
push
test
fists
iret
or
loope
xor
mov
rolb
aam
rclb
jmp
and
or
arpl
bswap
jbe
das
negl
lret
pop
cmp
rcrl
outsl
dec
push
jb
sub
lds
mov
stos
inc
ret
sbb
fsubl
in
arpl
mov
movsl
push
sub
mov
inc
jecxz
xchg
idivb
cltd
ror
mov
test
popa
mov
jae
dec
pop
outsl
or
mov
ret
inc
push
daa
aad
inc
call
jne
xor
subl
lret
sbb
popa
pop
enter
pop
sbb
sbb
mov
in
cmp
mov
scas
and
arpl
xchg
dec
adc
jle
js
outsb
pop
daa
aaa
jno
mov
pop
ds
mov
dec
pop
ja
stc
stos
sbb
int
pop
lahf
icebp
test
cltd
or
jb
mov
xor
aad
sti
inc
dec
mov
lock
insb
int3
sbb
cmp
test
das
add
pop
push
pusha
or
mov
jge
sbb
mov
test
hlt
ret
insl
inc
pop
cmp
cmp
ror
aad
ficomps
adc
adc
and
jmp
loop
loope
cld
movsl
popa
inc
shrl
sbb
sbb
push
data16
idivb
clc
mov
xlat
cmp
dec
subl
xchg
jle
stos
aaa
xor
clc
nop
lret
subb
push
jp
cwtl
xor
push
ljmp
lods
repnz
jl
ret
cltd
jns
mov
addr16
nop
adc
mov
test
push
test
xchg
cmp
icebp
xlat
es
push
pop
arpl
dec
pop
sbb
or
addr16
lds
dec
movsb
push
and
ficoml
mov
push
adc
icebp
adc
imul
cmp
std
in
mov
stos
sub
cmp
push
mov
ret
or
hlt
scas
les
or
mov
or
cmp
pop
out
adc
std
or
into
push
sbb
icebp
sbb
mov
daa
inc
fstl
mov
push
movsl
adc
cmp
add
mov
jle
scas
inc
or
mov
sbb
leave
sbb
ret
push
or
mov
fcmovb
cmp
add
dec
pop
sub
popa
push
xor
mov
cmp
ja
or
ret
push
js
inc
scas
pop
mov
sub
fcom
or
jp
lret
push
insb
pusha
or
adc
jns
xchg
push
xchg
shl
rcll
pop
mov
push
movsl
mulb
movsl
neg
push
aas
xchg
repnz
repnz
xchg
aam
sbb
mov
jp
popf
push
mov
inc
aad
pop
cld
shll
out
pop
add
xchg
in
mov
and
cwtl
jge
inc
dec
daa
in
adcb
xchg
xchg
in
fmull
aam
push
mov
pop
lahf
push
cmp
mov
xor
inc
pusha
or
call
scas
adc
dec
fdivrs
movsl
add
je
out
fldenv
jno
lcall
repz
fidivrs
or
cmpsb
push
iret
imul
push
rorl
pop
add
into
sbb
and
pop
cli
inc
xchg
jns
adc
shr
out
and
mov
adc
stc
or
inc
in
add
fldenv
adc
xor
fdiv
lods
and
xor
loop
test
push
loope
and
ret
push
inc
sbb
jle
xchg
adc
or
dec
sub
sbb
imul
and
lahf
into
inc
andb
add
leave
outsb
cmpsb
data16
cmp
in
xlat
popf
cltd
adc
ret
mov
push
xor
iret
mov
push
je
or
add
in
stc
outsb
jno
xor
mov
jnp
outsl
mov
arpl
add
xor
aam
xchg
flds
test
in
dec
add
leave
loopne
push
dec
cli
loope
adc
or
mov
mov
cmpsl
and
sub
xchg
and
fldcw
loop
sbb
or
mov
cmp
in
out
cs
pop
mov
mov
sbbl
mov
cwtl
sti
jg
jo
mov
add
xchg
stos
and
cwtl
fimull
mov
jnp
jne
scas
push
neg
xorl
mov
jmp
mov
add
xor
xchg
gs
stos
jns
fnstcw
test
mov
lcall
movsl
jb
inc
out
mov
jp
push
lods
cwtl
inc
sahf
xlat
test
xchg
jo
dec
jne
movsl
dec
xor
aaa
pop
lods
xor
adc
cltd
jp
mov
loope
sahf
aam
hlt
imulb
sub
jmp
or
add
jg
add
in
xchg
stc
pop
dec
es
outsb
or
mov
mov
mov
xchg
movsl
adc
fstpl
sbb
sarl
xorb
push
shl
xlat
ss
ret
jb
in
mov
sbb
or
inc
add
out
pop
inc
mov
icebp
sbb
aas
xor
mov
jo
sub
or
aas
in
mov
test
inc
and
jl
mov
push
cmpsl
imul
mov
hlt
std
shl
xor
and
inc
or
mov
pushf
outsb
push
pusha
aaa
xor
mov
repnz
in
fadds
sbb
push
mov
add
sub
sbb
xchg
mov
repz
mov
pushl
aaa
xchg
sbb
mov
sub
cmp
stc
inc
notl
ljmp
roll
push
popf
icebp
repz
iret
inc
dec
jecxz
inc
and
sub
loopne
test
jle
test
dec
and
fcompl
cs
dec
add
cmpsb
inc
or
add
in
inc
cli
sbbl
out
pop
adc
push
sub
outsl
scas
ljmp
pop
adc
daa
add
cmp
xlat
jae
lods
outsb
jno
int3
xchg
scas
xchg
add
mov
sbb
outsb
mov
cmpsl
data16
stos
rcrl
mov
insb
ljmp
mov
pop
or
jge
es
data16
xor
sti
mov
pop
mov
in
lock
loopne
pop
fwait
outsb
mov
lock
jecxz
dec
cltd
shr
sbb
shrb
mov
outsb
and
dec
lahf
leave
cwtl
sbb
inc
jns
pop
sbb
idivl
nop
dec
aad
addr16
loope
mov
and
sub
out
iret
rcrb
xor
sbb
mov
ja
test
cwtl
push
inc
mov
dec
es
push
out
mov
daa
and
dec
mov
push
inc
inc
fiadds
dec
enter
adc
add
push
mov
cmp
imul
popa
sbb
pop
jne
cmp
pop
push
xor
xchg
cmp
dec
mov
jmp
jg
xchg
pop
test
inc
add
pop
movsb
dec
fxch
or
push
ds
jb
lcall
pop
movsb
inc
in
xor
rorb
mov
jbe
fnstenv
icebp
xor
imul
fwait
cmp
mov
mov
xchg
mov
vpackssdw
std
aas
sub
loope
jle
jo
dec
nop
movntps
sbb
cmp
xchg
jne
pop
cmpl
dec
lods
push
pop
icebp
hlt
jb
inc
push
xor
and
ja
mov
aad
inc
pusha
xchg
sbb
pop
dec
pop
dec
pop
scas
test
add
xchg
out
insl
jae
xchg
push
in
repnz
fcom
aaa
sub
jns
mov
scas
or
in
lret
lods
icebp
lods
inc
sbb
jg
push
popf
cmp
shlb
push
dec
movsl
mov
xor
jno
adc
and
push
mov
push
jbe
fstl
mov
add
fimull
push
adc
stos
inc
xor
aam
int
mov
push
lods
ret
cmc
jp
pop
decl
push
jg
cld
shlb
inc
stc
ffree
pop
jp
jp
xchg
movsl
mov
loopne
cmp
in
push
pop
push
je
fstpl
imul
and
dec
mov
dec
xchg
negl
mov
movsb
lret
insl
imul
mov
jne
push
sti
jae
sbb
sbb
sub
test
adc
repnz
add
mov
aad
das
and
iret
dec
test
mov
xchg
add
enter
jae
es
jo
arpl
testb
jp
popl
push
or
sbb
sub
and
mov
sbb
rcl
jae
cmp
insb
inc
mov
mov
outsl
add
pop
jmp
mov
adc
sti
xlat
xor
mov
sbb
inc
popa
lahf
lods
sub
js
daa
fwait
out
pop
jae
clc
cwtl
sub
xchg
fdivl
les
xchg
fmul
arpl
pop
jp
and
in
loope
test
xor
mov
jmp
mov
inc
loopne
push
xor
repz
jnp
pushf
movb
sbb
sub
shlb
xchg
push
fwait
dec
subl
xor
fbld
dec
mov
shlb
test
in
add
add
shll
ror
xlat
ds
cmp
outsb
pop
sbb
jmp
dec
inc
sahf
hlt
add
fdivl
ljmp
pop
push
imul
or
insl
roll
ds
clc
cmpsb
mov
mov
cmp
out
mov
daa
shr
and
mov
sub
popf
repz
push
in
inc
add
ljmp
add
rcrl
pop
into
mov
fcmove
pop
jl
xchg
iret
popf
shrl
inc
int
xorb
sub
rcr
sbb
insl
mov
dec
dec
shll
or
fsts
ret
push
leave
pop
in
xchg
fisubrs
sbb
xlat
jl
jb
cltd
xor
mov
mov
fwait
dec
jecxz
cmpsb
dec
out
mov
pop
icebp
dec
popf
dec
aad
movsl
scas
fstps
mov
mov
sub
lahf
in
push
mov
pop
jp
stos
sbb
push
add
out
xor
jb
bound
stos
sub
out
popf
pop
push
imul
notb
je
outsl
pop
jmp
and
xor
ja
xchg
jecxz
rorb
adc
lea
fstps
lcall
sbb
or
dec
jmp
mov
xchg
insb
loopne
cmpsb
mov
and
sbb
add
xlat
push
arpl
xor
and
push
pop
fcomi
or
les
inc
push
aam
lret
push
mov
cld
mov
and
inc
pop
mov
mov
mov
jo
and
clc
pop
clc
test
pusha
stc
icebp
imul
jp
ss
add
or
cwtl
sahf
ret
std
adc
xor
adc
loop
repnz
push
push
xor
jnp
gs
enter
push
dec
iret
loope
inc
dec
mov
xor
mov
sbb
insb
sub
stos
xchg
cmp
cmc
add
nop
jecxz
add
xor
cmpsl
push
pop
aad
es
pop
mov
inc
xor
sub
cltd
push
mov
leave
fistps
cmc
es
sub
mov
fisttps
es
mull
mov
sub
mov
xchg
pop
pop
fistpll
push
fsubrl
test
repz
push
js
cmp
mov
mov
rolb
fisubs
scas
or
jbe
lcall
stos
sub
adc
fisubrs
call
jg
popa
xor
xor
push
push
push
lcall
xor
addb
jl
fdivrp
insb
sub
icebp
pop
add
push
pop
lcall
xchg
jl
clc
and
pop
daa
jg
filds
outsl
cmp
fs
popa
mov
inc
aaa
jecxz
xchg
push
push
jae
add
xchg
repnz
call
pop
pop
subb
push
stos
fcmovbe
push
jns
hlt
xchg
mov
mov
mov
push
mov
es
cld
and
push
adc
leave
shlb
mov
ret
fldt
jle
mov
stc
cmp
cmpsl
cmpsb
ficompl
shlb
sub
dec
or
xchg
aaa
jo
hlt
lock
xchg
inc
imul
push
scas
pop
jl
sahf
inc
cmp
mov
mov
imul
out
sbb
xor
sbb
sahf
stc
sahf
fwait
insl
mov
gs
jae
push
push
dec
std
pop
xor
stos
rclb
mov
arpl
outsl
lods
jp
and
mov
mov
enter
sub
mov
dec
shlb
add
test
and
sub
test
xchg
aad
out
or
sbb
dec
push
or
sub
and
add
inc
inc
call
cld
or
jp
jg
sub
dec
mov
incl
and
out
sbb
jb
mov
or
sahf
sbb
into
xlat
xchg
ror
mov
or
rcrl
iret
pop
imul
add
mov
and
sti
daa
mov
in
pop
mov
int
popa
fmul
test
mov
or
ljmp
inc
loope
faddl
ret
push
push
inc
lret
inc
xlat
mov
push
fcomps
aam
cmp
jo
mov
mov
dec
or
fsubs
push
in
ljmp
adcb
jge
push
sbb
pop
push
mov
add
adc
lods
jne
and
loopne
add
inc
mov
outsb
mov
cmp
in
lock
cs
movsb
je
mov
lahf
cmp
cwtl
xor
adc
dec
inc
fcoml
frstor
sbb
adc
lret
pushf
cmp
aam
mov
pop
lcall
push
in
cwtl
repz
mov
movsb
insl
popa
imul
xchg
cmpsl
clc
dec
xor
in
adc
mov
add
dec
mov
adc
pop
add
sbb
testb
iret
push
mov
bound
pushf
sub
cmp
push
cmpsb
lcall
add
or
jo
ret
inc
das
mov
adc
stos
xchg
adc
or
push
or
loope
add
out
mov
mov
lcall
fdivrl
cmpsb
js
punpckhdq
xor
mov
enter
xchg
mov
into
jp
cmc
cld
cs
mov
es
sub
adc
xchg
pop
pushf
sub
idivl
sbb
mov
xor
push
in
aam
dec
jb
ficoml
push
pop
bound
hlt
xchg
push
mov
push
dec
ljmp
daa
mov
addr16
mov
andl
cli
mov
and
cwtl
cmp
les
push
insl
or
into
jmp
cmpsl
dec
dec
jbe
sub
push
xchg
xchg
arpl
lock
or
lds
mov
data16
into
lock
dec
inc
loopne
gs
pop
lods
in
ss
leave
mov
and
lea
inc
dec
mov
fsubrs
jmp
sub
addb
cmp
mov
xchg
cmc
pop
adc
shl
je
and
ds
push
nop
clc
stos
test
ljmp
pushf
popa
sbb
sub
pop
imul
mov
in
outsb
out
stos
sti
cmp
sub
pshufw
movsl
and
inc
inc
out
aas
cmp
push
jle
push
sbb
out
xchg
pop
addr16
loop
stc
lock
scas
jecxz
loop
je
jmp
popa
outsl
sub
xchg
je
fwait
sbb
mov
xchg
jno
sti
dec
add
outsl
adc
xchg
jne
cmp
inc
jecxz
sbb
iret
push
inc
mov
mov
mov
es
push
sbbb
jmp
sub
mov
sbb
scas
popa
jp
jne
mov
mov
push
iret
out
movsl
xchg
jno
jbe
dec
sbb
mov
mov
adc
rorl
mov
out
jecxz
sub
add
outsb
xchg
push
xchg
dec
loope
test
xchg
jp
lock
add
mulb
xor
ret
leave
out
add
mov
mov
mov
ret
dec
add
inc
pop
stos
or
sbb
sbb
das
adc
mov
adcl
ficompl
pop
sbb
arpl
test
sbb
fwait
sub
mov
push
jo
or
clc
mov
push
inc
loop
xchg
jg
loopne
stc
pop
mov
mov
lods
xchg
test
sahf
out
into
pop
mov
outsb
repz
sbb
sbb
sbb
sbb
in
fwait
inc
arpl
adc
aas
bound
jmp
adc
mov
inc
jbe
cmpsl
test
dec
pop
inc
repz
jne
cmp
jnp
and
push
icebp
aaa
clc
adc
cmp
xchg
xchg
add
imul
clc
cs
in
push
ja
sbb
out
sbb
scas
iret
jle
loop
shlb
ljmp
dec
push
add
mov
lods
subl
movsb
shlb
adc
xchg
mov
pop
test
add
cmpb
mov
adc
movsb
pop
cmpsb
lock
in
dec
mov
lds
dec
lahf
das
cmp
dec
lret
dec
or
fwait
xchg
push
jne
enter
in
and
ret
jmp
adc
cmc
in
sbb
daa
fldcw
cmp
shlb
push
popa
mov
loopne
jp
cmp
jge
aam
fildl
cld
jle
mov
ret
cltd
in
pusha
sbb
sarb
out
aam
fs
pushf
stos
movsl
les
xlat
adc
xor
adc
in
daa
inc
mov
xchg
arpl
iret
std
sub
xor
jle
aaa
inc
mov
nop
jl
xchg
sbb
call
pop
or
lcall
testl
mov
cltd
jnp
mov
push
out
jae
adc
iret
loopne
push
sbb
xchg
mov
push
push
jae
test
push
cmp
pop
stos
cmpsb
test
neg
enter
mov
jg
in
repz
dec
psubb
cwtl
repz
adc
mov
insl
dec
lret
pop
fsubrl
cli
repnz
call
cli
repz
adc
mov
cmp
adcl
call
push
cmpsl
out
mov
mov
aas
scas
lock
push
pusha
cmp
jo
push
or
dec
and
dec
mov
sahf
mov
jmp
adc
sub
dec
xchg
or
inc
rol
jge
fdivr
pop
mov
clc
fiadds
cmc
andl
push
sbb
xchg
cmp
arpl
lods
hlt
in
pop
pusha
int
inc
pop
fbstp
js
popfw
test
inc
push
mov
stos
push
dec
adc
inc
lret
sbb
mov
shl
mov
jl
mov
lods
lds
fists
mov
pop
icebp
mov
xor
mov
and
mov
pushf
lods
xchg
int3
pop
xor
movsl
fwait
les
xchg
mov
pop
dec
push
sbb
aas
pushf
or
and
leave
popa
lret
sub
inc
xor
pop
popa
add
rolb
add
decl
or
mov
dec
bound
scas
sub
dec
jno
scas
push
ret
rorb
xchg
divl
pop
insl
mov
add
pushf
add
adc
rcll
int
and
imul
push
in
mov
scas
mov
push
insb
pop
in
lods
ss
mov
cmpsl
push
out
rolb
inc
jecxz
xchg
xorl
fs
imul
js
mov
dec
push
sbb
pop
aam
mov
call
test
push
xchg
sbb
andb
stos
lret
jns
mov
jno
jp
shl
jmp
adc
lret
in
xchg
mov
fcomp
cmpsb
fiaddl
jle
insb
mov
fidivrs
addr16
stos
ret
inc
ds
popf
repnz
movsb
jg
sub
fsubl
jbe
xchg
mov
adc
cltd
xorl
cmp
push
lods
ljmp
adc
andb
lods
stc
cmpl
repz
mov
mov
sbb
into
pop
add
jmp
jno
std
das
xchg
cmp
loop
cmpsl
popf
int3
or
add
adc
sub
cmp
les
push
mov
xor
ds
js,pt
popa
sbb
push
pop
arpl
dec
push
inc
fisttpl
dec
lret
cmp
hlt
std
add
in
push
pop
shll
in
pop
push
adc
pop
mov
lret
lods
mov
push
testl
stos
sbb
push
lods
mov
push
mov
mov
sbb
jno
sahf
push
insl
insb
imul
adc
outsl
in
push
je
jmp
jne
testb
fcompp
scas
xchg
mov
into
je
mov
dec
inc
xor
lahf
lret
fidivs
mov
lcall
push
cmpsb
stos
mov
jl
sbb
or
push
push
inc
cli
nop
jbe
jns
pushf
sbb
jge
add
std
push
hlt
mov
mov
lcall
jno
sub
cmp
fdivl
in
pop
aam
ljmp
popf
popa
mov
or
jbe
imul
fisttpll
test
and
inc
mov
jg
bound
test
imul
cld
test
jl
mov
gs
popa
sbb
popa
push
and
sti
adc
sar
idiv
aad
xchg
mov
push
stos
ret
sub
adc
in
push
aas
fidivrs
jle
lea
lret
imul
jp
in
ret
pop
pushf
js
or
jno
cmc
test
push
addr16
xor
dec
daa
scas
flds
out
arpl
lgs
xchg
outsb
in
jb
push
mov
aaa
cmp
mov
push
lahf
je
jecxz
mov
cltd
clc
cs
loope
mov
into
push
test
pop
mov
subb
xlat
mov
push
pop
jns,pt
push
fsubs
je
fisttpl
mov
aad
scas
not
push
loope
or
insl
out
sti
mov
pop
call
rclb
call
cmp
cs
xchg
jbe
jge
inc
mov
sub
add
stc
jl
pop
and
add
mov
mov
cmp
sbb
popa
and
movsb
push
lcall
fildll
push
fs
push
sarl
loop
mov
out
scas
bound
inc
cld
push
cmpb
insl
and
loopne
les
pop
inc
inc
mov
mov
jnp
sub
hlt
sbb
lods
or
lret
mov
insl
xchg
push
xor
and
jecxz
mov
filds
hlt
mulb
shlb
insl
lret
jle
mov
repz
dec
rcr
pop
or
test
dec
stc
das
sbb
and
rcpps
fmuls
adc
test
jo
ljmp
aas
stos
int3
add
fadd
jp
sbb
xor
js
int
adc
cld
pop
les
arpl
push
sbb
or
arpl
adc
dec
shlb
or
ss
jl
stos
ss
and
add
out
jo
inc
int3
sbb
ret
sahf
sbb
inc
into
push
orl
cmp
lods
jmp
decl
stc
dec
jp
jbe
mov
lret
icebp
sarb
jno
int
cltd
jb
insb
cmpsl
sbb
popf
mov
leave
out
aaa
in
rclb
mov
or
aam
mov
add
aam
test
cmpsb
sar
and
rorl
insb
cmpsl
fcmovne
mov
add
jmp
outsb
lods
repnz
jle
jno
fcom
ret
pusha
sub
movsl
cmp
mov
mov
dec
rol
data16
xchg
addr16
subb
cmp
add
movl
cmp
inc
jae
mov
inc
mov
enter
dec
dec
ljmp
jmp
fiadds
mulb
mov
jae
sub
inc
pop
xor
pop
cmp
dec
inc
mov
aad
sahf
or
jb
or
inc
int
sbb
aaa
lret
ja
xchg
xchg
aaa
div
mov
mov
mov
fucomi
adc
mov
jge
inc
fcoms
push
or
outsl
ficomps
popa
mov
test
rorl
dec
aaa
imul
shrb
mov
stos
dec
cmpsl
jne
or
dec
cld
pop
arpl
pop
ljmp
sbb
test
mov
xchg
in
push
and
or
mov
jmp
aam
or
add
enter
lret
popf
cmp
mov
je
pop
daa
iret
mov
pop
push
cmp
dec
and
sarl
sub
jge
mov
inc
push
add
pop
and
inc
push
jnp
jb
vmovups
lcall
mov
pop
fxch
fimull
or
mov
iret
cmc
mov
je
cltd
dec
and
jp
mov
or
cs
inc
xchg
inc
cmc
mov
gs
les
stos
push
fildl
inc
cld
sbb
push
aam
mov
data16
cltd
cmp
and
push
aas
inc
xlat
into
mov
repnz
in
aam
dec
in
jno
fnstsw
push
and
push
lcall
test
in
in
jmp
push
roll
popa
inc
inc
cmp
xor
cmpsb
mov
push
cmp
adc
add
push
cli
std
ret
dec
cmp
mov
int3
in
push
shl
aad
pop
out
mov
in
inc
in
and
andl
fcmovb
or
jbe
lds
lods
test
insl
adc
pop
sbb
inc
in
mov
bound
add
pushf
mov
adc
add
stos
enter
test
aas
mov
and
ds
fwait
popa
xor
movsl
int3
movsl
sahf
xchg
pop
cmc
sbb
adc
dec
rolb
or
fstpt
movsb
lahf
rcr
mov
sbb
xchg
out
jne
jmp
into
pusha
aaa
mov
loop
outsl
aam
or
mov
sub
cli
cli
fsts
push
daa
add
scas
inc
popa
fwait
or
pop
movsb
popa
clc
fs
adc
and
mov
pop
or
inc
push
sti
mov
sarl
arpl
lret
mov
fldcw
sub
sbb
jne
lahf
mov
cs
fcoms
pop
cmp
xchg
in
xor
mov
scas
les
xchg
sbb
cld
in
jmp
lea
pop
lret
mov
nop
fsubrs
aas
shl
inc
sbb
push
arpl
dec
mov
or
xchg
mov
addr16
sbb
add
cmpsb
sbbl
clc
nop
pop
iret
es
sbb
call
aam
add
xor
xchg
cmp
jae
fisubrs
jb
loop
sub
andl
enter
loopne
jae
pop
pop
mov
fcoml
pop
xchg
sub
int
sub
adc
jl
cmp
mov
sub
dec
xlat
push
cltd
jecxz
shl
dec
or
popa
adc
adc
pop
daa
or
repnz
outsb
sub
repnz
outsb
shrl
jne
ret
ret
int
mov
jp
pop
add
inc
mov
test
lods
cwtl
or
ret
push
mov
cmpsl
mov
bound
int
inc
dec
lret
dec
sbb
mov
xor
fldcw
addr16
lock
clc
cltd
pop
and
mov
xor
xchg
adc
pcmpgtb
xchg
sbb
cmp
xchg
or
xchg
add
cwtl
dec
sbb
or
ret
push
icebp
mov
aas
push
scas
xor
mov
repz
adc
lods
sub
ds
jno
mov
loope
daa
and
jp
push
cld
push
mov
or
ret
leave
xor
mov
lcall
insl
pop
cld
mov
mov
idivl
test
outsl
push
lret
test
test
in
lock
scas
rcrl
jmp
push
xlat
cmp
jb
mov
add
loopne
mov
inc
test
pop
dec
jmp
dec
mov
rorb
adc
ss
pop
add
mov
sbb
lret
lcall
fnsave
leave
pop
mov
hlt
adc
cmp
adc
int
xor
dec
dec
loopne
cmpsb
fisttpl
mov
in
fisubrl
pusha
sti
fiaddl
inc
pop
movsl
xor
mov
pushl
mov
or
ret
into
pop
or
push
dec
add
dec
stc
xor
ret
das
mov
mov
sub
add
dec
mov
or
cmp
shrb
mov
push
hlt
xchg
hlt
fldpi
xchg
inc
daa
pop
and
pop
mov
push
mov
inc
or
fmull
push
mov
pop
ja
in
sbb
loope
or
aad
popf
or
cli
call
jmp
lock
pop
pop
jno
std
outsl
stos
add
cmp
je
aad
cmp
into
daa
fs
adc
aas
or
add
daa
push
iret
sbb
repnz
mov
and
sbb
lcall
repnz
or
xor
xchg
sub
inc
push
in
pop
jge
adc
ror
sbbl
xchg
pop
call
seta
repz
fnstsw
cmp
imul
xor
aas
jl
push
or
mov
aas
fwait
mov
mov
mov
pop
cmpsb
fldcw
dec
lcall
mov
pop
mov
popf
mov
inc
xorb
and
sbb
push
movsl
mov
addr16
jg
cmp
add
add
fistpl
mov
push
sub
rcrl
mov
mov
sbb
movsb
repz
pop
loope
mov
pushl
cmc
mov
sub
jo
loope
into
inc
adc
dec
cmp
in
aam
in
repz
stc
cmp
cltd
stos
pop
popf
adc
sub
xor
bound
inc
adc
repnz
jge
dec
in
imul
lcall
jmp
std
repnz
ficomps
xchg
cmp
aad
pop
push
pusha
jle
sub
mov
call
ret
std
push
jmp
lcall
cld
arpl
xorl
out
inc
mov
add
cli
and
inc
fidivrs
mov
xchg
stos
mov
push
pop
repnz
fisubl
push
jmp
xchg
sahf
pop
mov
mov
lcall
fcomip
mov
leave
mov
mov
adc
xchg
fs
push
sub
cmp
mov
add
aaa
imul
shrl
xchg
pop
test
inc
int
stos
fdivrl
outsl
dec
or
lock
out
cmp
adc
xchg
fidivrl
xchg
sub
xor
sbb
imul
jbe
mov
sbb
jecxz
add
mov
mov
int
sbb
pop
mov
jmp
xchg
mov
sbbl
add
mov
add
inc
dec
xor
jb
mov
dec
xor
jbe
cld
sbb
in
push
add
ljmp
xchg
shrb
cmp
pop
add
rclb
out
jmp
ja
inc
cli
push
inc
std
fwait
or
dec
xor
popf
aam
arpl
pop
adc
inc
push
and
stos
aad
outsb
test
adc
repnz
jp
add
mov
lret
lock
and
mov
in
adc
stc
in
pusha
outsb
pop
adc
movsb
gs
mov
cmp
nop
repnz
pop
pop
xchg
fwait
sub
out
rcr
mov
cmp
cmp
or
add
push
popa
mov
je
leave
into
in
addb
arpl
push
push
mov
mov
mov
hlt
lods
daa
jg
jne
pmaxub
xor
cmp
in
xchg
jecxz
shrb
add
push
test
jbe
xchg
lret
aaa
outsl
into
push
lcall
das
lds
mov
sahf
out
push
push
jecxz
test
pushf
pop
adc
pop
jbe
dec
std
pusha
repnz
push
lahf
sbb
mov
jnp
push
insb
or
or
bound
inc
xor
inc
mov
lods
popl
ret
addr16
sbb
int
inc
aas
xchg
add
inc
mov
push
jo
stc
dec
idivl
out
dec
inc
into
std
rcl
jno
mov
scas
cwtl
repnz
jp
jmp
rcrb
insb
cmp
out
sbb
jl
inc
xchg
xlat
sahf
and
ds
rol
mov
adc
xor
mov
cmp
ficoms
pop
cmpl
scas
fnstcw
inc
pop
lahf
jne
pop
addr16
lods
push
adc
or
dec
mov
mov
sbb
fiaddl
add
mov
dec
popf
je
jge
pusha
adc
pop
roll
sbb
xchg
push
cmp
cs
lods
mov
jo
dec
mov
mov
sbb
movsb
fsub
jnp
ljmp
mov
into
lea
adc
inc
mov
cltd
mov
pop
fisubs
fsubs
std
leave
xchg
push
mov
adc
int
add
mov
mov
cld
jne
xchg
mov
sti
inc
and
jns
push
lods
mov
inc
sub
ret
xor
je
or
in
mov
pop
cli
mov
xchg
sbb
icebp
mov
js
shlb
fwait
aas
addr16
scas
mov
idivl
mov
sbb
xor
leave
aas
push
test
popf
mov
push
stos
pop
pop
in
popa
test
xchg
inc
jb
aam
ljmp
push
scas
enter
mov
ret
int
fsubrs
fdivl
cli
jmp
sbb
xor
scas
jae
jae
cmp
popf
jecxz
popa
add
fisttpl
rorl
jg
cmpsl
push
out
fsubrl
lret
fs
xor
dec
mov
adc
pop
fwait
in
pop
cmc
divb
inc
insb
jnp
cmp
jns
inc
xchg
jg
movsl
cltd
aad
les
lahf
lcall
jnp
in
gs
jo
iret
loop
xlat
out
andl
pushf
jns
fldenv
adc
jns
insl
loope
daa
dec
outsb
adc
xchg
shl
ss
xor
ds
ret
add
dec
xchg
in
out
test
add
test
nop
je
or
mov
pop
rorl
fcomi
fwait
ja
or
and
xor
pop
out
into
icebp
ret
jl
imul
aam
stos
sbb
push
negl
inc
sub
outsl
and
and
int
mov
push
mov
ret
sbbb
andb
xchg
xor
mov
push
ja
push
lret
mov
lods
push
notl
and
wrmsr
arpl
jle
mov
xchg
out
orl
sbb
sbb
and
mov
xchg
pop
xchg
je
mov
adcl
or
gs
inc
push
rorb
fucomi
or
xchg
cltd
fwait
mov
pop
out
pop
ror
test
outsl
push
push
sub
dec
imul
inc
popf
xor
ljmp
loop
aaa
cmpl
mov
inc
xor
repz
dec
jecxz
bnd
mov
ret
ds
dec
sahf
pop
in
pop
icebp
mul
push
adc
sbb
lods
adc
xlat
into
icebp
push
cmc
shl
insb
notl
mov
mov
pop
inc
fistpl
cmp
das
pop
push
rcrb
xor
sbb
ret
mov
xor
or
pop
nop
jo
xor
je
repnz
xchg
push
js
mov
fidivrs
in
sbb
lods
dec
xchg
jbe
ja
test
out
jae
sbb
jbe
mov
lahf
xor
nop
es
pop
out
cltd
pop
add
adc
lahf
js
shll
jp
xor
jno
idivl
add
ret
insl
loop
ret
pushf
int
mov
fists
adc
mov
pop
jns
insl
sahf
orb
adc
pop
pop
in
xchg
xchg
cld
jp
insl
mov
idivb
lea
daa
icebp
test
jle
movb
inc
mov
setno
sahf
cmc
lret
cld
xchg
out
or
sbbl
mov
and
mov
dec
pop
out
xor
lahf
lock
in
lret
and
lcall
adc
pusha
sub
aaa
cmpl
add
cmpsl
or
mov
cmp
mov
cmc
fst
das
cmpl
outsl
loope
pop
xor
add
sub
pop
dec
ds
xor
adc
mov
or
jp
test
push
pop
cli
clc
mov
mov
inc
jns
insl
stc
ds
aam
addr16
adc
loopne
dec
fcoms
daa
push
lock
pop
mov
rcll
xchg
and
mov
dec
lea
adc
push
out
add
bound
lret
jl
jl
fistps
outsb
mov
mov
testb
mulb
pop
sub
cmp
popf
mov
cmp
daa
pushf
mov
mov
mov
clc
rcrb
xor
lret
orb
lahf
nop
push
pusha
xchg
leave
mov
xchg
lea
fwait
pop
aaa
lods
lds
adc
sbb
inc
fstpt
sub
dec
cwtl
bound
rclb
stc
mov
neg
mov
inc
push
insl
or
cwtl
mov
dec
mov
jle
popf
jbe
xchg
dec
scas
test
inc
ds
or
es
mov
mov
xor
rcll
mov
cmpsb
hlt
movsl
aas
sbb
gs
stos
rep
ja
jno
push
inc
insl
adc
mov
adc
pop
pop
dec
mov
sub
sub
or
xor
mov
je
push
cwtl
mov
out
push
mov
dec
and
or
push
or
or
mov
insb
js
cmp
in
mov
sete
and
loopne
xchg
xor
mov
push
stos
push
pop
cwtl
in
popa
movsl
and
hlt
rorl
test
mov
gs
xchg
leave
stos
jb
and
push
out
or
inc
das
xchg
sar
cs
cmp
and
in
dec
ds
xor
xchg
enter
adc
push
std
xchg
outsl
negb
imul
push
sbb
repnz
outsl
lcall
add
in
pop
cmpsb
mulb
jp
mov
mov
mov
cmp
enter
cmp
jge
inc
aam
lret
jl
shrl
pop
dec
imul
daa
popa
add
orl
ret
out
mov
pop
jle
xchg
sub
aam
cmp
rolb
daa
mov
jge
iret
adc
or
and
pop
fwait
dec
stos
in
xlat
in
repnz
adc
cmc
sbb
sarb
test
rorl
cmpb
leave
pop
jmp
roll
add
pop
mov
jne
add
push
xor
mov
out
rol
mov
shl
xchg
je
rol
mov
jmp
mov
ret
jno
jnp
repnz
fisttpl
adc
mov
xchg
jecxz
jmp
arpl
incb
mov
cmp
and
push
pop
pop
mov
xchg
jo
xchg
test
push
inc
jl
lret
dec
xor
scas
dec
cmp
sarb
ret
lock
in
pop
sub
xor
popf
mov
rcr
push
sete
mov
jmp
scas
mov
sub
jo
or
aam
cmpsl
loop
insl
aas
repz
dec
pushf
adcb
xor
lds
jmp
pop
mov
gs
push
call
lock
sub
adc
cmpsl
ret
fwait
xor
sti
and
dec
adc
clc
mov
push
mov
mov
sbb
js
fists
fidivrs
or
imul
push
fisubrs
hlt
js
jge
sti
stos
bound
xchg
fsts
rorl
jp
fdivr
and
pushf
pushf
pop
xchg
dec
clc
and
pop
pop
fcomps
popa
xchg
and
lcall
sbb
inc
pop
mov
or
stc
pop
enter
nop
lcall
adc
mov
lahf
adc
add
aad
loope
jne
xchg
ja
fwait
push
fidivrs
mov
xchg
shl
shrl
inc
xchg
mov
jnp
push
imul
mov
add
push
mov
fcoms
and
enter
inc
jo
pop
add
pop
imul
insb
xor
lods
subb
outsl
outsb
inc
stos
mov
mov
mov
test
vmread
xchg
jle,pt
and
clc
cmc
cmp
rorl
push
dec
or
pop
add
call
fsubs
hlt
in
mov
mov
xor
sbb
test
pop
pop
les
gs
adc
hlt
cwtl
push
cmpsl
jb
push
shlb
mov
mov
fcomps
xor
adc
mov
mov
and
jecxz
pusha
adc
inc
jl
out
inc
push
insl
mov
popf
clc
pop
popl
insl
lret
sbb
pushf
jle
cmp
jmp
cltd
out
or
loope
mov
daa
popf
jecxz
cmpsl
dec
pop
mov
pop
or
cmpsl
out
mov
popf
cmpb
js
mov
inc
mov
ffree
out
jg
cmp
out
jge
pop
xchg
or
sub
pusha
sub
mov
xorb
and
xchg
jae
stos
cli
pop
fildl
jb
xchg
into
adc
sbb
or
sbb
fdivs
mov
aaa
pop
adc
inc
test
mov
movsb
mov
clc
sbb
cwtl
fistps
aad
adc
fs
pop
fisttps
pop
dec
ja
sti
rorb
inc
jl
shrl
rclb
je
xlat
mov
adc
adc
add
and
add
fimull
ret
mov
popa
mov
loopne
test
enter
lods
mov
jb
sub
aaa
cld
mov
push
fcompl
fwait
jl
sub
lds
mov
cmc
xor
fisubrl
lcall
mov
and
jb
mov
sti
xchg
jnp
ret
push
add
ds
xor
sub
test
test
push
iret
inc
pop
out
mov
cld
xor
xchg
nop
inc
mov
lahf
sub
or
mov
xchg
insl
or
fwait
into
cli
icebp
add
icebp
call
adc
push
pop
xchg
hlt
jbe
enter
pop
fstpl
sahf
icebp
fsubrl
and
out
jmp
push
dec
push
cmp
call
mov
femms
enter
dec
testl
into
xchg
add
push
mov
mov
fimuls
mov
dec
add
pop
gs
jmp
movsb
jecxz
add
pusha
mov
fsts
push
testb
jl
aas
add
xlat
xor
mov
daa
push
adc
insl
add
lods
xchg
cld
insb
ja
pop
adc
lcall
pop
push
out
sbb
and
sbb
fnsave
mov
xor
jns
subb
fsub
dec
ljmp
sbb
pop
pop
dec
lea
xor
leave
xchg
mov
addr16
sahf
dec
test
cwtl
push
dec
adc
lret
mov
es
dec
cmp
pop
pop
in
push
imul
in
mov
jp
add
mov
adc
je
test
ss
mov
in
lods
xor
dec
jmp
fldcw
cmp
call
cmp
ret
lods
out
popa
xchg
rcrl
aas
push
arpl
loop
mov
mov
fisubl
sub
ss
dec
jmp
add
xlat
repnz
in
sbb
test
es
xor
ret
testl
xor
clc
or
sahf
in
dec
cmpsl
daa
cld
push
inc
mov
imul
les
dec
jmp
aam
jle
mov
movl
je
les
jmp
and
mov
push
add
push
dec
nop
sub
pop
jg
xchg
push
mov
mov
je
add
stos
js
popa
push
mov
xchg
adc
in
or
cmpsb
lret
std
push
cmp
mov
jmp
dec
std
rcrb
mov
ja
inc
aas
movsl
not
popf
dec
fisubl
add
movsl
sub
addr16
adc
mov
and
jmp
sub
adc
pop
rorb
dec
pop
jg
sub
aaa
mov
mov
mov
cmp
popa
xlat
cmp
inc
xchg
and
testb
hlt
mov
outsl
inc
cmpl
inc
mov
sbb
cmp
push
shlb
out
int3
pop
call
into
dec
or
int
sti
xchg
aaa
cltd
xchg
mov
aam
xchg
cmc
out
addr16
xor
scas
cmpsl
xchg
cs
out
and
test
pop
push
leave
mov
inc
dec
push
fsubrl
mov
cmp
inc
mov
scas
jb
inc
enter
std
cmc
clc
call
jno
cmpsl
mov
into
icebp
xchg
push
jecxz
jne
jb
sub
push
sbbb
jno
ret
sbb
sbb
mov
adc
lods
xchg
mov
ret
and
add
add
dec
lods
popa
inc
aas
add
pop
repz
sahf
pop
leave
mov
pop
jno
aam
gs
ror
pushw
inc
xor
pop
cmpsl
loopne
adc
cmc
mov
mov
and
inc
loop
mov
ficoml
cmc
and
imul
xchg
jge
loopne
call
mov
inc
fistps
popa
ret
jns
xor
add
and
int3
dec
je
mov
pop
pop
movsl
or
add
arpl
out
mov
mov
mov
inc
jecxz
fistl
fs
scas
dec
inc
into
xor
popa
xor
xchg
push
gs
pop
lods
inc
bnd
sbb
xchg
push
sbb
mov
shll
push
jecxz
push
das
xchg
pop
aad
jle
ljmp
into
cli
subb
xlat
dec
enter
cmp
mov
popf
and
push
jns
addr16
push
gs
push
cwtl
daa
mov
inc
aas
push
sti
xor
fcomps
nop
pop
mov
sbb
and
lds
mov
fimuls
push
adc
repnz
fisubrl
lret
andl
lods
ljmp
mov
jg
test
inc
es
fcmovbe
mov
xor
mov
xchg
sbb
inc
int
push
loopne
xchg
arpl
insb
jno
hlt
xchg
sahf
fists
push
test
sbb
popf
xchg
inc
xchg
and
sbb
lcall
pop
sub
push
push
jns
mov
popl
cmpsb
lock
jg
pop
cmovle
cmp
push
mov
mov
inc
sbb
into
neg
sarb
aaa
lret
clc
pop
call
cltd
and
xchg
inc
lret
fldt
lods
sub
jne
adc
popf
cmpsl
sarb
icebp
ret
out
mov
repz
addr16
mov
outsb
out
jmp
fs
sarl
push
dec
call
sbb
stc
xor
incl
and
insb
pop
rcll
sbbb
inc
lods
jg
cmp
pop
mulb
mov
std
push
bound
ret
push
leave
mov
ja
push
sbb
inc
cmp
ror
movsl
lahf
xchg
cmc
movsb
dec
inc
mov
pop
or
and
fldl
repz
loop
loopne
lea
inc
add
adc
in
cmp
dec
mov
sbb
out
sbb
xor
xchg
or
addb
out
cld
or
lret
stc
call
xchg
xor
nop
ret
call
loopne
mov
std
xchg
dec
repz
sarb
sub
into
adcl
cmp
or
outsl
xchg
fiadds
arpl
jnp
shll
lahf
lods
pop
pop
xchg
lods
xor
test
out
movl
scas
outsl
cmpsb
add
jg
movsl
jae
mov
jbe,pn
rcl
cmpsb
arpl
mov
or
sbb
inc
adc
or
add
sub
xlat
je
mov
sahf
sbb
fistl
xchg
cmp
pushf
xchg
clc
xor
jg
xchg
mov
jl
inc
scas
rcll
aaa
out
adcl
mov
xchg
jmp
daa
xor
mov
mov
sbb
fcmovb
push
mov
sub
enter
sbb
mov
sbb
inc
nop
jo
xchg
rcr
xlat
ficomps
xor
cmp
mov
test
push
push
pushf
xchg
in
jle
or
movsb
rclb
dec
pop
aas
inc
cld
fidivs
faddl
mov
inc
sbb
pop
mov
std
cs
addr16
loop
ja
loope
pushf
es
jb
std
mov
jnp
imulb
clc
out
mov
ret
ret
aam
pop
sbb
dec
xchg
xchg
nop
mov
push
imul
or
lock
int3
pop
dec
lods
push
inc
ss
out
xor
pop
je
popa
out
cmp
xchg
jmp
ds
mov
in
pop
in
inc
cmp
jp
mov
mov
add
imull
mov
push
and
cmc
subl
ficoml
xor
repz
fcoms
pop
adcl
jle
pop
jle
ret
punpckldq
pop
sub
mov
mov
lds
ret
fnsave
sbb
iret
xlat
add
dec
nop
les
movsl
cmp
lea
push
fsts
mov
dec
sbb
scas
inc
sbb
jnp
pop
jo
pop
sbb
inc
cmp
rcl
mov
mov
scas
dec
int3
js
mov
fcomps
jp
add
ds
ret
callw
pushf
mov
sub
fs
fstl
dec
jg
and
push
icebp
jae
adc
sbb
andb
fcomps
mov
add
and
std
ror
and
sarb
mov
inc
lcall
pop
push
bound
xor
hlt
push
aaa
mov
imull
jecxz
addb
das
call
mov
cmp
lods
or
pop
mov
adc
xchg
push
inc
test
outsb
mov
fdivl
ljmp
fcoms
push
insl
pop
dec
push
sbb
xor
jecxz
loope
je
dec
sub
adc
adc
out
mov
push
xchg
pop
enter
es
mov
rcrb
sti
loopne
sub
jl
push
out
stc
jno
int3
orl
mov
sbb
sbb
mov
loopne
cwtl
loope
mov
push
repnz
test
sbb
inc
xchg
outsl
std
aaa
outsl
cli
sub
mov
in
sub
out
in
mov
stos
cld
lods
insl
vsqrtps
mov
stc
mov
dec
lret
push
mov
dec
filds
cmp
loope
inc
pop
and
inc
les
sub
lret
ljmp
add
test
insb
repnz
xchg
pop
or
outsb
or
mov
test
jae
lret
mov
mov
cmp
sub
outsl
cmc
in
mov
shl
lret
iret
dec
pop
inc
cltd
pusha
xor
and
xorl
add
rorb
sub
push
sbb
dec
imul
pop
mov
in
push
les
movsb
enter
cld
push
shrl
cmp
mov
xchg
imul
xor
mull
mov
cmp
leave
mov
mov
jnp
push
into
push
add
call
push
sub
jne
sarl
leave
cmp
or
aaa
leave
leave
testl
adc
hlt
cmp
outsl
jle
adc
pushf
jnp
inc
mov
mov
cmp
jnp
mov
lods
mov
push
addr16
jnp
arpl
mov
inc
movsl
lods
jmp
dec
sub
sbb
inc
loope
mov
fwait
or
sbb
dec
aam
sbb
xchg
rcl
sbbb
std
fnsave
push
nop
dec
fsubs
pop
fistps
enter
fs
hlt
add
add
repnz
add
sbbb
push
mov
movsb
mull
andl
sub
test
js
inc
xchg
jo
jecxz
mov
or
mov
cmp
push
jne
dec
or
pop
arpl
stc
mov
sub
shll
add
sub
dec
sub
int3
jge
mov
inc
lret
cli
mov
add
bound
cmpsl
pop
imul
stos
push
fcoml
pop
jnp
sbbl
pop
mov
mov
mov
inc
push
out
xor
std
pop
flds
sti
xor
sub
dec
dec
or
mov
xchg
pop
pop
je
mov
cwtl
mov
add
or
push
sub
hlt
push
sub
mov
inc
int
scas
jp
shlb
xlat
shlb
mov
cmp
and
and
out
jns
jbe
xor
and
mov
sti
in
aaa
fmul
xchg
sbb
jnp
lods
mov
orb
pushaw
sbb
xorl
mov
das
mov
ss
int
mov
imul
ss
nop
sbb
das
pop
jno
movsb
mov
adc
in
or
add
mov
jl
je
lret
xor
dec
sub
cwtl
pop
cwtl
mov
aad
sbb
or
mov
pushf
mov
ss
inc
lea
pop
push
jno
jp
aad
sbb
jo
inc
mov
inc
aas
cli
pushf
aad
mov
sub
add
nop
ret
add
movsl
cmp
adc
aaa
and
in
shrb
xchg
bound
shlb
movsl
jbe
and
or
xchg
jl
jo
mov
xorl
stos
inc
gs
repnz
xor
into
push
and
cmp
fcoms
push
sub
mov
dec
add
das
dec
push
mov
pop
xor
imul
aas
xchg
rol
outsb
jb
pop
xchg
out
imulb
pop
inc
stos
pushf
pop
imul
jp
iret
lock
or
jno
data16
dec
push
ljmp
mov
lods
fsubl
loopne
and
into
flds
insl
stos
outsl
stos
pop
sti
in
adc
movsl
pop
mov
std
dec
pop
sbb
mov
add
je
cmp
xchg
movsb
fdivs
dec
xchg
push
push
insb
or
sub
lods
loopne
lret
mov
in
mov
clc
xlat
pop
ds
lcall
into
lret
jns
lds
fwait
decb
addr16
cmp
jb
lods
adcl
inc
inc
fidivl
addb
lahf
sub
jmp
movsl
sti
nop
add
lods
insl
mov
lcall
repnz
aam
int
ljmp
or
movsb
inc
arpl
nop
pop
cmp
pop
insl
stos
cmp
xlat
lea
lahf
mov
shrb
cmpsb
inc
add
daa
in
insw
jle
sub
xchg
cs
push
outsl
pusha
sbb
fnstsw
sbb
imul
dec
inc
maxps
sub
idivb
hlt
fs
cmp
outsl
push
and
pop
in
add
iret
push
jb
movsl
xchg
repz
dec
mov
mov
cmp
xor
sbb
mov
lcall
inc
xor
mov
sbb
sbb
xor
add
movsl
outsl
loope
sub
mov
mov
in
mov
sbb
inc
cmc
pushf
popa
xchg
cmp
enter
pop
sbb
dec
sbb
xchg
push
loop
loop
pop
push
push
ljmp
jns
fs
cmc
mov
mov
and
mov
and
xchg
stos
and
mov
hlt
ret
imul
push
xchg
notl
lret
xor
cli
jle
les
jne
jns
xchg
negb
xchg
daa
inc
loopne
ja
cltd
into
jb
jae
mov
mov
xor
aam
je
mov
lods
addb
pop
mov
cld
in
inc
movsl
sbb
push
push
pop
xlat
inc
push
mov
cwtl
mov
scas
cli
addr16
mov
fldcw
adc
sbb
inc
mov
dec
dec
insb
push
mov
dec
lcall
pushf
testb
test
lock
sarl
and
rolb
push
out
rcr
scas
adc
hlt
pop
xchg
lea
icebp
das
push
xchg
xor
fildl
sbb
lahf
ds
mov
fisttpll
jae
fcomip
jmp
lahf
jne
xchg
push
dec
jmp
ljmp
lret
sbb
inc
out
cs
out
loopne
pop
add
mov
fcoms
shlb
mov
or
daa
fsubs
pop
std
test
mov
xor
stos
mov
jnp
cmp
sahf
mov
push
xor
pop
int
mov
push
and
or
outsb
cmc
mov
into
ss
and
jg
sbb
inc
std
popf
lcall
pusha
loope
lea
dec
lods
inc
push
mov
scas
outsb
test
out
jbe
stc
mov
mov
mov
xchg
xlat
lahf
insb
mov
enter
pop
xor
lock
cmp
daa
mov
mov
les
sub
xchg
ds
ret
lret
cmp
push
xor
rorl
sub
lahf
pop
adc
jg
jae
adc
nop
cmp
es
idivl
mov
add
xchg
jo
enter
cltd
cmp
add
add
fs
or
ljmp
scas
inc
dec
dec
out
xchg
cwtl
push
jno
loopne
jg
jae
sbbl
das
pop
leave
xchg
or
xchg
cmp
push
pop
mov
into
fucomp
xchg
push
jmp
and
and
aas
call
mov
xchg
shlb
jno
inc
sub
push
lea
dec
movsb
gs
pop
xchg
sbb
mov
in
rorb
inc
push
xor
jle
enter
out
enter
sub
clc
sbb
inc
sahf
adc
or
push
pusha
scas
cmp
jle
lods
inc
icebp
lcall
mov
push
out
lret
push
jp
js
mov
ret
shrb
and
mov
fcoms
fbld
push
sarb
mov
ss
push
mov
movsb
dec
cld
lds
jecxz
xor
pop
jne
shl
jbe
cmp
xchg
adc
idivl
mov
dec
or
sbb
sub
add
test
adc
push
push
jo
leave
mov
sub
iret
cmp
cmc
dec
in
nop
pop
sub
inc
jl
lds
addl
in
dec
xchg
mov
les
jmp
into
out
popa
or
fisubl
out
mov
adc
xor
pop
sbb
sub
fwait
xorb
das
in
ds
mov
lods
in
cmpsl
incl
out
pop
shlb
fcoml
push
mov
fs
push
xchg
adc
or
pop
dec
sti
lds
in
fidivrs
inc
jge
mov
push
add
and
into
add
mov
popa
aas
fsubrl
add
inc
mov
ds
rcll
bound
dec
jmp
aaa
pop
pop
pop
sub
ret
ret
les
addr16
adcb
jnp
les
pop
jmp
mov
shrb
xchg
cld
outsb
xchg
push
sub
fs
out
mov
dec
adc
jo
hlt
lcall
dec
push
jge
jno
fs
es
inc
pop
subb
xchg
jno
es
xor
cmp
push
dec
sub
arpl
xor
in
lcall
rcrl
mov
movsb
inc
xchg
sbb
jecxz
mov
lods
into
insl
mov
cltd
push
outsb
pop
or
jp
jge
jg
aad
push
aam
xchg
out
pushf
cltd
and
arpl
dec
stos
and
dec
mov
je
mov
in
scas
pop
sub
addr16
sbb
push
ljmp
jbe
mov
xor
and
lahf
cs
ljmp
xchg
or
daa
jo
jecxz
imul
push
jmp
call
in
je
mov
sub
lret
sbb
dec
fdivrs
mov
xorb
xchg
xchg
mov
mov
mov
inc
fwait
mov
int3
jne
or
cltd
jae
jmp
and
lret
mov
jge
adc
cmc
imul
adc
add
adc
mov
pop
or
and
push
ss
jne
dec
cld
out
inc
xchg
rcrb
ljmp
inc
bound
call
clc
dec
bound
clc
sub
inc
cmp
xchg
dec
adc
fdivs
xor
pusha
push
add
and
mov
pop
stc
aas
dec
repz
roll
or
in
xor
or
sub
jno
mov
dec
stos
jno
fyl2xp1
aaa
andl
js
retw
mov
fdivr
adc
push
shl
adc
xchg
repz
ret
xor
test
mov
outsl
xor
repnz
loopne
test
rcl
mov
rorb
adc
iret
xor
xor
push
mov
push
popf
mov
add
push
cmpsl
daa
jg
jne
in
int
jmp
sub
sub
pop
cmc
mov
out
sti
mov
adc
notl
ja
xchg
into
nop
int3
ret
or
mov
nop
fdivrs
cmp
imul
and
sbb
ds
jmp
or
push
test
mov
ret
imul
sbb
stc
push
cmp
sarl
pop
inc
mov
je
jb
mov
int3
dec
pop
lret
clc
das
sbb
sub
mov
lret
mov
lret
addl
out
loope
cmpsb
subb
add
mov
stos
mov
sbb
scas
push
lods
insb
mov
lea
push
xorl
int
add
inc
lahf
lret
scas
adc
aad
into
loopne
and
or
dec
enter
pusha
and
push
inc
xlat
xchg
xor
nop
sbb
aaa
cmpsb
adc
fidivrl
push
adcl
fs
iret
sub
xchg
jne
xchg
sub
inc
push
push
je
in
add
ljmp
je
pusha
jbe
add
jl
mov
dec
aam
out
cmpsl
mov
dec
push
out
jp
out
cli
xchg
ret
fstpt
jmp
dec
and
or
mov
repz
test
sub
loop
jecxz
iret
adc
idivl
xchg
icebp
adc
lea
lret
popa
and
movl
orb
setnp
rcrb
lods
fsubl
dec
adc
cli
in
addb
xchg
xchg
push
mov
dec
jns
sub
adc
pop
js
cmc
mov
nop
aam
xchg
push
xchg
scas
jecxz
jmp
aaa
inc
inc
call
mov
lods
push
mov
adc
loopne
mov
ret
fcoms
insl
movsl
stos
js
lret
or
stos
lret
or
in
jmp
push
xor
inc
push
test
roll
push
and
cmp
adc
add
mov
sti
aas
sarb
ficoml
mov
jecxz
enter
cli
movsb
loope
mov
call
pushf
mov
sti
js
jno
test
cmp
insl
lahf
mov
push
xor
inc
push
popa
mov
pop
cld
dec
cmc
outsb
repz
scas
test
xor
adc
leave
mov
mov
sbbl
jp
int
add
xor
addb
jg
and
cltd
dec
pop
daa
dec
cli
insb
loopne
lock
jbe
add
sub
or
mov
movsb
push
dec
scas
xor
mov
movsb
shl
fyl2x
test
pop
cmpsl
xor
inc
mov
imul
jne
push
bound
pop
cmp
xor
js
aaa
ds
or
mov
push
shll
insl
gs
mov
repnz
dec
in
inc
mov
cli
push
dec
xchg
add
mov
and
mov
data16
gs
or
test
addr16
int3
lcall
fsub
dec
or
fs
in
mov
jle
inc
hlt
xchg
lods
and
cmp
push
and
popa
nop
orl
and
cli
std
scas
out
fldcw
imul
mov
aam
jl
push
sub
clc
push
push
push
push
push
jmp
jo
dec
sbb
dec
movsb
pop
jb
popf
add
dec
xchg
lea
cmc
in
lcall
push
mov
enter
mov
xor
je
ljmp
pop
cmp
pop
cmp
mov
jmp
pusha
loop
lock
mov
sub
pop
push
mov
mov
pop
dec
mov
push
push
pop
dec
and
mov
addr16
mov
imul
pusha
push
lcall
xchg
cmpsl
into
ja
dec
scas
rcr
mov
xchg
clc
pop
add
out
add
iret
push
xchg
fcompl
stos
mov
lret
jecxz
clc
aam
sub
lock
out
add
loop
mov
or
fsubrp
lcall
loopne
pop
jb
mov
negb
xchg
rorb
out
push
or
loopne
call
nop
xor
cmpsb
aas
dec
mov
or
adc
pop
adc
fists
jp
aad
or
cmp
fstl
add
cwtl
movsb
sub
cmp
ljmp
jp
dec
daa
ret
rcll
rolb
lods
xchg
add
inc
ja
mov
fldcw
mov
or
in
repnz
add
jne
rcrl
out
lcall
lahf
loopne
xor
gs
mov
test
sub
and
flds
pop
add
jp
dec
sub
xor
push
cmp
pop
xor
or
fucomip
sbb
or
jl
sub
jbe
out
sar
jmp
test
and
jb
mov
es
stos
mov
dec
das
sbb
jnp
or
sub
enter
push
loope
jmp
pop
push
lret
cwtl
jno
clc
popa
insl
mov
xor
and
fldenv
xchg
xchg
mov
jmp
xchg
data16
sti
addr16
jne
cmc
adc
xor
shl
xchg
aaa
bound
xor
sbb
or
pop
shll
jle,pt
mov
mov
insl
jp
mov
inc
dec
dec
and
mov
sbb
ret
mov
dec
pop
or
out
aas
out
pop
ja
dec
pop
push
loope
and
sub
pop
push
pop
pop
sarb
xor
xor
inc
pop
pop
out
and
mov
dec
mov
adc
iret
lcall
scas
mov
push
sbb
lret
iret
arpl
inc
adc
mov
push
xor
inc
inc
gs
call
movsl
ret
mov
hlt
popf
pop
je
push
sub
pop
push
std
fstpl
cmpsl
pop
push
in
repnz
adc
mov
mov
mov
fdiv
mov
adc
pop
lret
jb
loop
jmp
out
push
les
pushf
ret
clc
cwtl
push
xchg
pop
les
lahf
xorb
cli
sub
std
gs
lret
cld
popa
jo
movsl
sti
sbb
out
mov
push
aas
or
cli
pushf
mov
mov
lods
mov
sbb
cli
pop
aad
cmp
dec
xor
cld
jo
nop
pop
pushf
daa
and
cmp
into
movl
push
xchg
jp
xchg
imul
push
jo
lahf
clc
mov
in
xlat
cmp
adc
fcoml
cmp
popa
pop
std
mov
es
mov
pop
movsb
adc
mov
cli
dec
pop
ret
or
or
add
clc
out
sahf
cli
or
idiv
mov
xchg
repnz
nop
call
int
inc
mov
pop
push
dec
mov
lahf
lcall
mov
arpl
leave
mov
cmp
js
and
mov
or
mov
mul
imull
mov
ljmp
out
jne
lock
mov
movsl
lds
popf
aaa
pusha
pop
jmp
adc
lcall
pop
in
xchg
sub
xchg
push
and
pusha
mov
pop
sbb
into
hlt
in
movsl
addr16
enter
sahf
pusha
imul
mov
repz
xor
loopne
add
dec
mov
data16
les
mov
enter
push
jne
mov
mov
ret
inc
xchg
jle
add
into
shll
loope
sub
mov
add
ljmp
adc
pop
pop
lods
mov
das
push
jp
fidivs
js
sbb
stos
mov
pop
sub
nop
fwait
add
and
jns
leave
imul
mov
test
into
inc
ret
inc
mov
push
or
and
sbb
ja
and
and
sub
gs
fnstsw
sbb
cmp
iret
into
push
mov
stos
adc
sub
or
loop
push
mov
mov
testb
mov
and
bnd
inc
inc
lea
adc
xchg
call
out
dec
loop
push
inc
mov
mov
or
adc
mov
sahf
mov
jp
fdivrs
cmp
stos
into
or
xor
jecxz
cmp
aas
xchg
push
pop
jno
dec
jp
incl
jmp
fldt
sbb
in
cmp
es
int
jb
stc
mov
insb
or
lahf
xchg
sbbb
xchg
adc
add
sbbb
cmp
cltd
cmp
or
mov
mov
adc
shrb
xorb
sbb
xor
push
mov
scas
jg
xchg
jmp
cld
ds
cs
mov
scas
and
repz
movsl
add
mov
mov
mov
lock
cmp
adc
sbb
jb
sub
jl
add
jns
mov
sti
negb
mov
jmp
mov
xchg
cmp
bound
or
aaa
cwtl
aam
cmp
jno
lcall
shr
push
ss
cmp
inc
xchg
push
push
int
out
pop
jle
xchg
aad
xchg
adc
jb
scas
jbe,pt
movsb
sub
push
inc
lds
and
fsubrl
mov
pop
add
popa
hlt
les
lock
inc
cltd
xchg
outsl
mov
jb
shlb
mov
jl
fildll
testl
or
roll
and
pop
pop
sub
xchg
enter
mov
in
cs
push
sub
int3
inc
out
mov
imull
cmp
inc
loopne
pusha
pop
and
cs
add
lahf
pop
push
mov
shrl
dec
popa
adc
sub
insb
lahf
jae
mov
addr16
inc
addb
cmp
repz
jnp
int
aam
pushf
stos
jae
lods
lds
cmp
mov
arpl
sti
adc
fiadds
inc
cmp
imul
and
sbb
push
mov
sarb
dec
fldt
add
add
out
or
pop
sbb
pop
mov
sbb
imul
test
pop
lret
dec
fbld
daa
mov
ret
nop
movsb
fistps
mov
cmc
mov
mov
dec
in
aad
test
add
es
js
mov
lret
xor
sbb
les
rclb
jo
xor
dec
in
cltd
add
addr16
shrl
sbb
stc
out
stc
push
lret
jb
xchg
adc
adc
incb
jae
sub
dec
mov
pop
xor
sub
push
mov
add
test
outsb
pop
sub
add
enter
adc
sti
stc
in
mov
sbb
or
jmp
push
cmp
inc
dec
inc
jl
inc
cs
dec
push
sbb
in
xchg
lcall
jmp
fstl
icebp
stc
jle
add
inc
in
fwait
in
stos
jno
or
enter
loopne,pn
sti
push
cs
fldt
cld
test
or
xchg
sbb
cmp
pop
xor
rorl
lds
xchg
sbb
jp
mov
mov
sbb
lods
and
call
pop
jecxz,pn
add
inc
xchg
sub
and
sarb
dec
nop
cmp
pop
mov
movsb
out
loope
inc
xor
divb
xchg
loope
lds
jl
xor
cmc
cmp
out
sub
outsl
push
bnd
adc
pop
rcrb
enter
mov
dec
jbe
cmpsl
daa
mov
nop
inc
lds
jge
pop
imul
dec
enter
enter
insl
or
dec
adc
xchg
jmp
mov
add
adc
inc
jo
sbb
cmp
push
inc
ret
push
decb
popf
mov
mov
xchg
cltd
jmp
jecxz
lcall
mov
mov
cmp
and
mov
cmpsl
pop
nop
or
mov
dec
dec
cli
xor
nopl
aas
push
add
fwait
outsb
xor
fistpll
lods
insb
subb
inc
hlt
outsb
pop
clc
sub
std
mov
loopne
xor
add
mov
int3
testl
xlat
jg
cmpb
and
inc
mov
jmp
das
mov
dec
cmpl
ret
repz
or
inc
out
outsb
daa
fmull
test
push
xor
mov
in
stc
pop
int
pushf
cmpsb
xlat
insb
insb
sub
jo
mov
cmp
ss
dec
outsl
outsl
xchg
and
jle
pushf
lock
adc
ficoml
pop
lea
movsb
add
ss
mov
push
repz
bt
std
rolb
fsubl
inc
add
mov
fdivrl
adc
mov
sub
lods
std
scas
push
je
sbb
inc
loop
pushf
lret
je
pop
inc
inc
roll
mov
in
jb
cmp
mov
mov
and
je
fxch
repz
push
movsl
jecxz
mov
clc
xchg
xchg
mul
xor
aas
dec
cld
jne
add
daa
dec
adc
stos
cltd
mov
and
xchg
mov
xor
xchg
scas
insl
push
movsl
sarb
adc
adcl
pop
xlat
daa
outsb
int
push
mov
mov
faddl
lcall
shrb
jge
notl
scas
push
mov
push
dec
in
xor
dec
mov
in
jno
xor
idivb
lock
jb
pop
sti
pop
mov
xchg
cmp
add
repnz
push
mov
cmp
loope
xor
cmp
jns
mov
lret
xlat
aad
cmp
andl
sbb
gs
ja
pop
sub
sub
loopne,pt
into
fdivrl
repnz
and
mov
push
imul
push
adc
test
sbb
int
arpl
adc
jp
mov
fcmovne
mov
mov
aad
mov
scas
jno
sub
push
cmp
popf
lock
mov
jno
bound
mov
jne
jnp
scas
jno
jnp
cmp
fdivs
mov
cwtl
enter
push
std
mov
rcll
cmp
aaa
sti
adc
roll
adc
aaa
add
mov
repnz
movsb
data16
nop
or
jnp
or
aam
shl
fdivrl
clc
into
loop
add
jne
hlt
pop
and
pop
mov
push
lds
cmp
push
inc
ret
pop
inc
sbb
mov
divb
xchg
into
sub
and
jg
adc
and
test
movsl
jne
or
inc
lret
xor
jne
dec
mov
mov
cmp
mov
andl
sub
xor
in
les
adc
div
mov
ret
adc
mov
mov
jbe
pusha
lds
sbb
inc
test
mov
movsl
inc
je
push
pop
adc
xchg
sub
add
or
ja
or
shll
ja
lahf
fmul
jl
popf
jbe
sbb
lock
pop
jg
fldcw
repz
xor
sbb
push
pusha
in
stos
movl
xchg
mull
mov
dec
jge
mov
mov
adcb
enter
inc
scas
jbe,pn
outsl
xchg
out
sbb
or
and
push
daa
outsl
inc
xchg
fcoms
jns
adc
sbb
pop
adc
rcr
push
aas
sbb
pop
clc
dec
mov
aam
or
or
add
js
dec
loopne
shll
clc
cmpsb
jl
add
push
enter
enter
adc
xchg
xor
xchg
pop
mov
pop
imull
mov
aaa
xchg
sahf
push
aad
jl
push
shrb
pop
jp
mov
jns
sahf
pop
and
jecxz
and
fnstenv
sub
or
xchg
aam
add
sbb
push
fs
fildl
mov
cltd
pop
jbe
bound
mov
xlat
sti
pusha
fstps
adc
pop
xchg
push
roll
cs
mov
sti
and
stc
push
jle
test
push
gs
or
mov
lret
mov
in
inc
sub
mov
xchg
fmuls
lods
rorl
rcll
inc
arpl
jae
or
jge
out
scas
ret
nop
loopne
scas
aas
dec
pusha
in
mov
mov
xor
insb
pusha
fs
out
inc
imul
cwtl
or
cmp
scas
or
pop
ds
sub
mov
push
bound
push
inc
inc
sbb
add
shlb
sbb
add
push
aam
pop
push
les
test
mov
loope
in
push
divb
jl
clc
mov
hlt
dec
dec
lock
ret
jae
adcb
les
hlt
aam
jl
scas
mov
inc
repnz
fiadds
mov
cmp
mov
sub
rclb
js
jmp
xor
imul
int
adc
adc
leave
mov
lahf
sar
or
sarb
outsb
jo
mov
pop
icebp
and
jne
push
jg
rcrl
cwtl
mov
incb
push
push
cmp
jbe
negl
lods
ds
daa
mov
sub
cmp
test
lcall
push
fbld
xor
int3
adc
arpl
xor
mov
lcall
xchg
adc
insl
movsb
pop
lds
imul
or
ss
cmp
mov
sahf
lods
pop
ja
ja
mov
jecxz
lahf
stc
cmpsb
loopne
xor
cwtl
call
pusha
leave
and
inc
adc
jmp
sub
pop
inc
or
xchg
orl
shlb
push
int
jno
into
xorb
xchg
dec
shll
jmp
jae
dec
icebp
nop
je
lods
push
aaa
sub
add
jmp
fcompl
mov
icebp
jo
ds
jne
mov
inc
test
push
rcrl
sbb
movsb
loope
cmp
scas
test
pop
fldl
decb
pop
xlat
or
test
adc
pop
or
push
cld
mov
je
cmpsl
movsl
jae
test
fsubs
jecxz
push
push
in
rolb
shlb
dec
flds
ljmp
jo
sub
and
bound
shrb
dec
inc
mov
inc
sub
jl
cmp
addr16
int
push
int
xor
stos
test
jnp
das
and
stc
pop
push
outsb
lret
fwait
shll
adc
test
xchg
repz
and
ds
fucomp
rcl
jne
ret
mov
cmpsb
ds
jae
data16
fistl
mov
sbb
or
mov
mov
sbb
cmp
in
push
daa
cld
xchg
into
jb
xchg
inc
sub
and
lahf
push
rolb
out
ret
rcrl
loopne
jbe
mov
sub
push
out
lods
sub
fisubl
enter
adc
pop
mov
lret
and
outsb
fs
fwait
enter
lcall
or
lcall
adc
lock
or
lods
jo
loope
fbstp
pop
dec
scas
clc
pushf
sbb
repnz
push
scas
inc
js
test
fsubl
imul
mov
mov
add
dec
cld
int
pop
ljmp
test
dec
pop
addb
fsubrl
movsb
cld
sbb
push
sub
xorb
adc
sti
aam
sub
stos
mov
inc
cli
add
shll
ret
jnp
or
ret
insl
out
sbb
cmp
stc
sub
mull
movsl
les
or
lahf
inc
push
stos
sbb
dec
xor
enter
pop
mov
sbb
orb
cmp
test
movb
repz
out
enter
cmpl
xchg
jmp
cvtpi2ps
pop
inc
movsb
aaa
mov
mov
sub
cwtl
or
push
jns
sbb
lds
dec
pop
cltd
hlt
pop
push
and
out
int3
cmpsl
lcall
ss
and
xchg
cmp
mov
cli
jb
add
inc
push
add
sub
xchg
dec
cld
stos
pop
test
not
fnsave
out
out
xchg
sbb
in
add
aas
adc
in
cmp
dec
sbb
push
rcrb
cmp
push
cmp
sub
in
jbe
inc
popf
sarl
jg
lahf
xchg
fstpt
sti
aam
mov
or
sbb
stos
sti
fbld
cli
lods
lds
adc
shrl
mov
dec
adc
xchg
loop
jl
add
pop
cmp
stos
dec
push
add
dec
ret
sub
test
push
adc
jne
xor
mov
push
inc
outsl
pop
jns
leave
jb
inc
fcoml
sub
inc
push
cmp
ljmpw
sahf
gs
pop
imul
cltd
es
mov
xchg
je
gs
xor
xchg
push
cmc
rcr
sbb
mov
jmp
roll
cli
mov
fistpll
scas
xchg
sub
cmc
sub
addr16
xor
fstps
push
add
test
push
pop
decb
cmp
mov
xchg
cmc
inc
jge
lds
lea
aam
push
pop
mov
jge
jno
popa
or
or
negb
jno
outsb
and
sub
ss
shll
ja
stos
dec
and
lock
cmc
mov
shll
popa
push
push
adc
test
mov
ss
inc
push
testl
or
inc
aad
popf
sarb
imul
ss
ss
cltd
sub
scas
xchg
fs
jecxz
mov
cmp
pop
jnp
cli
mov
lahf
jle
out
or
push
xchg
aam
mov
cwtl
mov
icebp
mov
test
mov
jno
push
cwtl
std
xchg
sub
sahf
mov
xor
clc
push
mov
push
xchg
cwtl
testb
out
xor
push
enter
mov
aaa
and
repnz
out
out
test
xor
rcll
pop
push
clc
and
mov
cmc
push
in
leave
pop
xchg
mov
orb
out
mov
pop
xor
and
bound
sub
cmp
add
fsubrp
inc
or
dec
xchg
xchg
sub
stos
push
mov
xlat
or
jo
popa
outsl
cmp
ret
adc
in
dec
xlat
mov
or
adcb
jmp
fmuls
movsb
push
aad
bnd
bound
stc
inc
cmp
jbe
insb
dec
enter
adc
adc
movsl
mov
and
mov
icebp
loope
push
mov
rclb
dec
lock
and
mov
fistps
and
cmp
jle
rorb
sbb
cmp
jnp
sbb
mov
and
nop
xor
jne
movsl
lds
and
mov
aaa
add
xor
jmp
inc
add
mov
icebp
in
fadd
cwtl
rorb
cmp
inc
shlb
jne
call
xor
sbb
xchg
pop
mov
aaa
cmpsb
cmp
ror
add
cmp
push
cmc
lret
test
inc
add
fprem
aas
xchg
dec
jg
pusha
dec
ror
add
inc
jbe
add
jo
jbe
mov
push
movsb
xor
jno
lods
es
inc
xor
stc
mov
scas
loopne
cmp
jnp
push
pop
jmp
lea
mov
pop
lcall
notb
inc
adc
subl
call
movsl
lea
bound
cmc
push
lea
or
repnz
repz
xor
lods
mov
cmpsb
xor
inc
test
mov
and
scas
scas
push
jg
insl
inc
je
mov
imul
std
lds
mov
sub
jns
mov
or
gs
cmp
aas
inc
xchg
mov
adc
or
add
sub
jbe
mov
cmpsb
lcall
fstl
pop
stos
pop
lsl
enter
sub
daa
mov
movsb
out
and
roll
cmp
incl
in
cmp
test
std
or
adc
int3
mov
lret
xchg
popf
sar
ds
scas
pop
aaa
add
jno
pop
in
adc
sub
dec
add
das
push
lret
mov
push
inc
jge
fstl
adcl
cmp
push
xchg
hlt
mov
sbb
adc
or
mov
push
jo
mov
or
mov
cmp
dec
pop
ds
cmp
imul
maxps
sub
pusha
or
mov
sarb
imul
adc
jge
mov
xchg
mov
mov
add
jle
pop
mov
arpl
inc
jb
mov
in
std
xchg
push
sub
mov
mov
in
cmc
sbb
dec
mov
push
lock
push
sti
mov
xchg
pop
and
dec
cmp
pop
push
inc
das
pop
outsb
sub
shll
xchg
testb
idivl
lods
cmp
cli
cmp
jmp
jne
stos
push
xor
test
adc
cld
insb
xchg
outsl
mov
in
inc
mov
testl
pop
lods
mov
mov
xor
cmp
xlat
jp
push
test
sub
scas
adc
adc
cli
jecxz
push
add
lock
adc
js
bound
jle
movsl
lds
push
sub
lea
bound
xchg
imul
fwait
xchg
pop
repz
mov
mov
add
add
mov
scas
fwait
loopne
dec
loopne
cwtl
stos
jne
outsl
icebp
sub
subb
das
iret
adcl
mov
inc
adc
lahf
fsts
or
add
cmp
and
outsb
ret
jp
xlat
pop
inc
mov
roll
mov
sbb
aaa
outsl
jg
mov
out
adcl
gs
adc
mov
jmp
fdivl
adc
aad
pop
mov
es
negb
cli
fs
jle
add
in
pushf
jmp
push
xchg
fdivl
sbbl
pop
inc
imul
es
cmpsb
sub
cmp
jle
popa
mov
pushf
xor
or
outsb
jbe
mov
loop
xchg
adc
loopne
mov
ds
adc
roll
mov
or
sub
inc
mov
loop
cmpsb
jp
jg
and
inc
jb
cli
add
out
inc
push
test
ficompl
xchg
test
arpl
insl
mov
adc
push
pop
mov
add
cmp
fwait
lods
imul
sub
adc
xor
push
or
cwtl
clc
pop
pop
xor
pusha
sbb
adc
in
stc
xchg
dec
js
outsb
pop
sti
fidivrs
mov
xchg
ss
sbb
jne
aad
push
and
rol
mov
bnd
in
cmp
cmp
movsl
dec
adc
mov
push
sub
or
xor
pop
fs
mov
push
sub
aaa
cltd
and
pop
mov
mov
cli
loopne
popa
in
adc
inc
int3
loopne
sub
cwtl
pop
add
jo
dec
insl
rorl
repz
stos
notb
jne
call
ret
maskmovq
notl
lods
je
jge
pop
out
lock
lcall
mov
jbe
and
push
cwtl
xchg
fcomi
aad
push
cmp
sub
adc
inc
pop
insb
xchg
lds
xor
mov
push
jo
rcrb
shll
push
mov
inc
jmp
cltd
jo
mov
sbb
je
enter
jmp
enter
iret
add
push
insb
add
adcl
out
dec
push
jnp
push
imul
dec
or
add
ss
push
pop
xchg
sub
cmp
mov
cmp
aad
cmpsl
jo
into
sbb
ljmp
icebp
repz
les
fimuls
xchg
lret
mov
mov
pandn
incb
mov
faddl
inc
xchg
fnstcw
iret
shrb
test
sahf
pop
mov
ja
mov
push
mov
pop
mov
jl
daa
push
js
jecxz
mov
insb
fiadds
sarb
es
loop
jb
cld
and
test
xor
stos
sub
pop
test
jbe
mov
movsl
mov
in
lret
mov
sub
push
mov
mov
dec
pop
mov
cli
push
and
xor
jns
mov
mov
xlat
andb
cmp
cmp
xor
in
outsb
out
mov
mov
push
push
xchg
mov
clc
dec
inc
mov
dec
mov
stos
leave
rclb
shll
outsl
xchg
cs
insb
in
push
mov
mov
cmp
mov
cld
fs
sarb
into
jecxz
ret
lods
stc
xchg
jp
fs
into
xlat
roll
out
nop
dec
outsb
or
stc
mov
scas
and
sub
push
mov
jne
mov
into
and
mov
mov
cmp
daa
scas
and
out
push
sarb
imul
jle
into
xor
scas
lock
push
sub
mov
ljmp
mov
outsl
repnz
sub
sbb
jmp
mov
lods
dec
pop
in
add
lods
push
sbb
cmpsb
sbb
push
std
int
mov
mov
daa
lods
int
testb
inc
je
or
mov
mov
jl
movsb
and
sub
push
dec
sub
hlt
rolb
dec
xor
mov
rorl
jge
push
mov
movl
lret
loopne
xchg
cmp
hlt
adc
aas
out
jae,pt
xor
cmc
and
in
js
stos
jp
jp
push
jo
test
fisttps
jno
loop
daa
mov
test
shrb
add
aaa
fldl
out
pop
sbb
mulb
sbb
push
and
mov
sbb
adc
pop
loope
jmp
aam
pusha
and
cmp
fdivrs
xchg
mov
mov
mov
es
cmp
call
push
xor
mov
jne
inc
push
sti
mov
stos
pop
or
std
xchg
mov
ja
or
xor
cld
lcall
fcmovne
mov
lret
or
push
mov
dec
ror
jns
mov
aam
mov
fs
movsb
xchg
xor
aad
testb
out
into
pop
or
jb
xchg
dec
insb
mov
jno
popf
push
pusha
push
rorb
xor
das
xor
xchg
shr
xor
fs
popa
imul
into
mov
mov
in
sub
mov
loope
rcr
sbb
fistl
rcr
cwtl
outsl
pop
or
push
loope
cmp
loopne
fimull
mov
es
rcrb
popf
ja
out
pop
stos
push
xor
inc
mov
iret
push
int
mov
or
mov
and
fwait
xor
icebp
outsb
sbb
or
inc
jl
mov
cmpb
xor
mov
mov
adc
push
xchg
loope
push
push
les
aaa
outsb
std
push
mov
mov
sub
mov
push
aas
sbb
push
insb
out
push
rolb
outsl
xchg
fucomip
cwtl
lds
pop
jecxz
dec
lcall
push
dec
mov
mov
pop
push
icebp
cmpsl
jl
arpl
dec
push
lods
jb
test
packsswb
lods
sub
cmp
or
push
push
addr16
sbb
xchg
rol
addb
sbb
decb
or
xor
mov
jne
jnp
or
inc
scas
ror
pop
loopne
push
or
lea
insl
fdivs
imul
pusha
push
lcall
xchg
std
icebp
pop
xchg
pop
bound
mov
lahf
xor
movsl
jne
mov
mov
mov
adc
and
dec
sbb
add
adc
outsb
pop
pushf
mov
push
sbb
dec
test
adc
pop
dec
mov
bound
xchg
dec
mov
mov
test
lods
shl
xchg
sar
imul
sahf
mov
xchg
dec
ficoml
test
adc
sbb
pop
push
sub
mov
adc
call
jns
dec
das
adc
ss
fwait
jmp
lods
fwait
xlat
repz
in
mov
cwtl
dec
mov
xor
iret
fsubrl
push
xchg
cmp
rorb
bound
daa
imul
sub
mov
xchg
or
fcomps
pop
test
icebp
ljmp
push
clc
push
call
repz
lods
jae
mov
enter
mov
and
fildll
cmp
jae
xor
pop
jo
mov
and
add
mov
inc
fwait
cmc
xor
imul
mov
gs
mov
pop
adc
repnz
les
xchg
repz
cmp
mov
jge
sbb
jg
lret
xor
movsb
out
inc
xchg
mov
ds
stc
ljmp
dec
repz
and
inc
xlat
push
add
call
in
stos
movsb
dec
enter
leave
incb
nop
loop
leave
imul
cmp
adc
dec
rclb
aad
movsl
pop
jle
add
pop
xchg
ja
insb
cmp
outsl
jmp
pop
inc
cmc
pop
mov
das
movsl
mov
loop
popl
cmp
mov
xor
icebp
repz
sub
fsubrp
sub
dec
fldcw
dec
or
cmp
sbb
or
lahf
das
sub
pop
insb
mov
sub
dec
sti
xchg
sub
in
out
enter
sarb
js
dec
subb
rcrl
stc
aaa
inc
mov
jnp
cmp
add
in
xchg
push
ljmp
ds
icebp
ss
or
jnp
test
sbb
repz
testb
mov
fmulp
mov
or
jl
in
mov
test
dec
add
pop
adc
insl
mov
stos
lahf
sarb
lds
cld
push
push
push
hlt
aam
adc
cmp
popf
jne
in
mov
into
das
xor
push
cmp
leave
scas
addr16
clc
stos
mov
xchg
movsl
movb
mov
xor
mov
jl
outsl
jbe
mov
add
loopne
ljmp
lretw
iret
mov
add
push
fldt
mov
sti
mov
rcl
js
mov
test
js
out
pop
sbb
push
xchg
pusha
jecxz
jge
fistps
mov
dec
add
loop
pop
lods
ds
adc
pop
pop
fnstenv
mov
hlt
hlt
and
mov
push
mov
out
std
and
mov
pop
push
aad
inc
inc
fmuls
jle
cmpsl
sti
and
dec
hlt
loope
add
pop
sub
adcw
sub
sub
std
clc
xchg
jae
out
sub
enter
inc
inc
mov
push
sbb
mov
cld
lret
xor
inc
xchg
icebp
lock
push
add
pop
testl
mov
subb
cmpsb
pop
adc
and
xor
pop
aas
into
xor
pop
mov
scas
xor
fidivs
int
mov
lret
loopne
ss
add
mov
rorb
das
outsl
xchg
movsl
fstl
call
pop
je
shlb
cmp
outsb
call
xor
mov
das
mov
adc
cli
xchg
cmp
dec
sbb
mov
scas
lahf
and
inc
xor
inc
lods
aaa
fisubl
pop
in
repz
sbb
lds
jmp
es
jmp
lea
in
jge
jae
and
in
push
xchg
push
xchg
test
and
push
jo
dec
mov
push
lock
add
iret
out
cmp
jnp
mov
pop
sbb
pop
and
jl
mov
test
test
cmp
push
iret
lods
mov
test
gs
xor
in
push
adc
test
mov
cmp
adc
mov
jecxz
cmc
out
bound
sar
aad
adc
icebp
dec
adc
jmp
stc
mov
mov
nop
sahf
or
xchg
cmp
cld
sarb
cmp
and
mov
xor
fwait
iret
popa
popf
adc
push
stos
shrl
int
js
xor
nop
cmpsb
xor
cs
das
dec
fdivrs
iret
movsl
aaa
rorl
inc
jl
pop
xchg
lds
adc
js
cmp
sbb
popa
jp
loopne
mov
mov
cmpsl
pop
xchg
js
and
fs
les
sbb
ja
stc
fbld
loop
push
in
xlat
jb
insb
sub
mov
pop
pop
fdivr
pop
xchg
es
cli
mov
cltd
rorb
add
mov
cmp
jbe
xor
add
sub
mov
test
inc
mov
xlat
xchg
nop
and
sbb
or
shrl
lret
fidivs
ja
insl
push
cmp
in
dec
shlb
lahf
lahf
jbe
scas
add
cmpl
push
adc
mov
push
dec
test
mov
int3
or
lret
dec
repz
aas
mov
pusha
dec
inc
aad
cmpsl
jne
imul
loop
inc
add
mov
outsb
xor
xor
cmp
mov
gs
pop
sbbl
outsb
testb
daa
cmpb
adc
mov
cld
push
or
xchg
and
adc
inc
stos
stos
lret
mov
jl
icebp
sahf
mov
xorb
dec
xchg
or
ja
dec
or
ljmp
sbb
out
call
sub
xchg
scas
mov
jmp
cmp
inc
cmp
fwait
xchg
lcall
pop
cwtl
mov
out
pop
inc
jnp
imul
rclb
mov
decb
cmp
jno
cmp
in
push
test
pop
sbb
outsl
add
movsb
stos
gs
mov
cmc
dec
icebp
ret
fidivl
loop
loope
outsl
repz
sarb
sar
mov
insl
sub
push
fsubs
inc
xor
push
and
pop
neg
jae
iret
cmpsl
in
mov
mov
cmp
inc
ds
jg
xchg
movb
push
mov
mov
stc
and
pop
dec
mov
pop
dec
sahf
in
and
sbb
aam
mov
jl
mov
aam
jbe
pop
jp
loop
push
jp
or
pop
pop
repnz
sbb
pop
jnp
pop
cmp
lock
sbb
mov
jl
movsb
test
addr16
stos
mov
rorl
push
shl
loop
cmp
sub
loope
imul
pop
mov
ret
jmp
ret
fcmovnb
insb
in
xchg
sarb
orl
lcall
xchg
push
mov
inc
inc
lods
sti
pop
mov
pop
push
je
inc
xchg
xor
and
pop
mov
ret
pushf
es
leave
or
mov
mov
cmp
shlb
dec
fcomi
dec
int
xchg
inc
mov
pop
mov
inc
mov
jns
test
mov
popa
outsb
mov
pop
les
jmp
imul
sub
xor
jbe
movsl
pushf
pop
pop
cmpsl
in
add
idivl
pop
mov
insl
pop
mov
leave
dec
sub
add
scas
mov
popa
dec
or
les
decb
push
test
mov
cmpsl
std
movsb
pop
mov
pop
push
inc
inc
bound
add
mov
repnz
loop
sub
insl
cmpsl
mov
push
in
push
adc
pop
lock
movsl
fwait
inc
and
ds
and
or
or
sub
mov
adc
or
mov
out
out
int3
stc
add
xor
jle
stos
push
mov
rorb
jl
adc
daa
and
xor
call
stc
mov
jns
sarl
and
mov
push
hlt
pop
ficompl
xor
out
sbb
imul
xor
push
fsin
testl
jmp
stos
pop
ds
xchg
fwait
lods
subps
dec
jmp
xchg
jmp
sarb
cmp
push
sub
mov
xor
push
ret
mov
cvtpi2ps
adc
mov
fldenv
test
ljmp
js
mov
shll
add
jmp
xor
push
sub
into
int3
sub
cld
push
jle
jno
jnp
dec
aas
fs
push
lods
and
into
jge
inc
or
push
rcrb
mov
xchg
inc
jbe
cli
out
push
adc
fcompl
inc
shll
dec
arpl
pop
hlt
adc
cmp
fsubp
mov
fnstenv
pop
cmpsl
xchg
adc
aas
dec
repnz
imul
enter
or
or
jmp
xor
aaa
mov
cmp
mov
pop
js
push
push
jmp
jne
shrl
pop
mov
stos
mov
cmpb
add
xchg
es
leave
inc
fimuls
mov
cmp
mov
jl
mov
fldt
mov
adc
jg
mov
add
incb
flds
xor
daa
ds
scas
in
pop
enter
shlb
vxorps
xchg
je
inc
inc
out
sbb
fldl2t
inc
mov
mov
dec
fnsave
mov
repz
xorl
fucomip
psrlw
cmpsl
adc
xor
adc
mov
inc
sbb
ja
sub
lods
add
sub
clc
push
cmc
inc
mov
stc
pop
jbe
mov
mov
mov
fsubp
test
xor
addb
int
pop
bound
pop
lods
popa
dec
mov
xor
add
push
inc
dec
rorl
cmp
scas
leave
mov
and
xor
div
push
push
test
dec
dec
push
adc
and
call
add
gs
pop
icebp
mov
mov
inc
mov
hlt
jno
leave
xchg
mov
aas
rcrb
data16
xchg
int3
icebp
inc
inc
stos
dec
mov
or
cmp
mov
dec
xor
std
ds
mov
insb
sarb
pushf
or
mov
enter
cli
fimull
movsl
mov
adc
jp
int
mov
mov
bound
xchg
inc
add
ja
fbstp
lcall
xor
subb
cmpsb
movnti
push
jbe
push
inc
popf
bnd
inc
mov
add
arpl
cld
pop
popl
xor
push
nop
aad
pop
mov
sbb
push
and
sbb
aam
icebp
pusha
cmp
pop
imul
fdivs
push
push
repnz
and
or
iret
out
fstpt
adc
rclb
out
push
pop
lret
in
xchg
dec
jmp
nop
ds
xor
pop
and
pop
lret
hlt
xor
in
sub
std
adc
add
xchg
dec
add
nop
and
jnp
pop
scas
in
mov
dec
xlat
test
daa
cmp
mov
mov
xchg
push
push
pop
push
es
mov
xor
mov
imul
data16
sahf
lret
jbe
lret
std
inc
movsb
movsl
loope
scas
mov
xchg
push
into
or
fcmovnbe
dec
xchg
or
jge
cmp
jae
clc
aas
cwtl
fisttpll
pop
fwait
and
mov
insl
clc
insl
mov
adc
daa
je
adc
jle
sub
jae
xchg
or
testl
in
and
and
pop
pusha
mov
xor
push
mov
pop
daa
sbbb
dec
das
jno
xchg
fisttpll
sbb
sub
cmp
mov
mov
adc
call
xchg
ljmp
sub
jnp
outsb
addr16
mov
mov
rcrl
adc
int
sbb
lahf
mov
hlt
sbb
arpl
adc
fldcw
enter
cli
decl
mov
lds
adc
mov
xlat
fimull
in
sahf
scas
bound
mov
add
call
mov
push
mov
addr16
jb
pop
push
addl
mov
xor
mov
leave
fwait
and
or
rcrl
stos
push
or
pop
fwait
jnp
enter
or
test
mov
xchg
inc
idivb
clc
fisubl
out
in
jle
sahf
ret
daa
mov
cld
mov
fmuls
repz
mov
shlb
push
sub
in
mov
imul
push
xchg
stos
lcall
js
loope
dec
js
iret
or
push
movsl
stos
int3
jg
lahf
pop
loopne
mov
out
lcall
cmp
mov
daa
arpl
pop
adc
xor
test
add
shll
inc
fwait
negb
pop
push
loope
jbe
sbb
mov
out
inc
rolb
loope
sbb
add
fucomip
mov
std
push
cmp
in
jle
mov
cmp
adc
lock
arpl
or
sub
jl
cmc
in
fildl
clc
das
mov
inc
out
lods
lahf
in
mov
sub
fcoml
xchg
fadds
or
cmp
cmp
push
fistpll
jg
outsl
jo
fs
in
inc
sub
mov
lret
and
loop
ret
inc
xor
mov
push
pusha
mov
loope
cmp
xchg
pop
nop
adc
lret
lea
adc
movsb
aam
xor
fucomi
xor
xor
leave
nop
xchg
arpl
sub
shll
arpl
and
xchg
mov
push
mov
push
loop
repnz
dec
dec
push
repz
repnz
repz
adc
stos
mov
pusha
shl
adc
out
dec
jp
mov
hlt
rcrb
in
cmpsb
xchg
addr16
push
dec
cmpsl
out
stos
dec
lret
push
sbb
clc
and
cmp
inc
inc
fwait
push
xchg
xchg
xor
adc
and
adc
mov
stos
sbb
sub
sbb
fdivs
jno
sbb
xchg
sarb
sbbb
movb
push
mov
imul
das
popf
arpl
nop
shl
mov
mov
jns
mov
mov
dec
stos
nop
loopne
ja
adc
lea
xchg
sahf
lret
adc
xchg
or
xchg
dec
and
inc
mov
stc
lods
jo
lret
call
adc
fidivl
ljmp
sub
sarl
xor
loop
fcoms
add
and
out
pop
push
push
add
fwait
std
or
loop
lret
adc
js
roll
test
sti
in
cwtl
lret
cmpsl
xchg
cmp
and
push
xchg
stos
mov
push
aad
js
mov
push
repz
inc
ja
mov
and
adc
sarl
popf
cmp
sbb
dec
in
xlat
test
jne
xor
insl
sub
test
jl
sti
js
mov
xchg
mov
clc
cmpsb
pop
xchg
insl
movsb
icebp
xchg
jno
inc
es
popa
cs
jge
jl
and
jnp
push
stc
hlt
dec
xor
sbb
js
mov
rol
sub
mov
xor
lcall
mov
les
jg
push
add
gs
popa
add
push
push
fld
xor
push
mov
fmul
cwtl
sub
xchg
int
test
outsl
fs
xor
daa
leave
iret
rcrl
xor
lcall
jecxz
mov
mov
and
jle
adc
xor
push
dec
int
jecxz
ss
shlb
dec
fs
dec
je
js
jg
pop
stos
ja
cmpsb
add
movsl
mov
mov
stos
lods
ffreep
daa
cmp
ret
ljmp
stos
pop
popa
in
das
sbb
aam
lret
sub
test
mov
mov
mov
adc
fidivl
mov
dec
jnp
add
test
iret
js
loop
and
mov
jmp
sub
push
push
mov
sbb
mov
pop
rclb
lea
push
and
stos
or
and
scas
out
in
bnd
icebp
popa
cmp
xchg
xchg
jne
xor
mov
or
dec
jg
fistpl
xor
movsl
push
and
data16
push
pop
sbb
aam
push
pop
jo
popf
adc
sbb
dec
push
lock
shrb
sahf
pusha
lret
addb
dec
and
int
pop
pop
mov
sbb
jbe
repnz
call
xor
pop
inc
out
fldenv
test
fs
fdivrl
push
mov
test
inc
js
sti
sti
aad
mov
sbb
pop
jmp
pusha
in
pop
dec
addr16
idiv
pop
xchg
scas
push
out
lcall
push
outsl
stc
out
mov
xchg
aad
and
and
add
sub
sbb
pop
inc
jnp
sbb
test
mov
data16
mov
fwait
inc
loope
std
icebp
jl
popf
jle
stc
xchg
sti
je
in
sub
push
mov
and
rcll
cmp
stos
sub
sub
in
jl
icebp
push
cli
xor
xor
lock
insl
fmulp
pop
fldl
das
pop
sar
mov
clc
sub
in
inc
imul
in
jmp
orl
inc
icebp
scas
jae
imul
push
lds
jecxz
pop
cmpsl
pop
add
lret
pop
xchg
dec
adc
cmpsb
in
push
jo
inc
inc
arpl
data16
dec
cmc
insb
call
pop
mov
stos
sbb
push
jp
lret
or
popf
subb
ret
jmp
pop
sbb
adc
aaa
das
movd
les
int3
mov
push
mov
xchg
mov
pusha
movsl
je
sub
and
subl
xor
xchg
aad
add
aad
repz
cmpsb
and
sub
xor
inc
fdivs
adc
xlat
insl
and
daa
jg
xchg
cmp
mov
test
repz
cs
mov
inc
mov
mov
mov
push
mov
adc
stos
sbb
xchg
jne
lods
mov
jb
xchg
xchg
test
lods
jno
aas
push
lods
push
push
stos
fiaddl
xor
fldl
fsubl
xor
push
outsl
push
xchg
sbb
sub
aam
popf
hlt
push
ret
jmp
jge
and
cwtl
dec
hlt
pop
frstor
push
fstps
pop
add
cli
jmp
pushf
enter
fdivrl
retw
lret
dec
or
mov
addr16
or
xchg
test
jge,pt
and
push
inc
or
lods
cmp
les
push
lcall
push
arpl
adc
fcmovu
in
mov
xchg
mov
mov
cmp
inc
test
mov
xchg
test
cmpsb
clc
push
cmpsb
aaa
inc
xchg
or
sbb
mov
bound
mov
add
pop
loopne
pop
addr16
inc
lods
xor
pusha
dec
pushf
inc
pop
fdivp
daa
dec
inc
cmp
mov
dec
test
and
xchg
cmc
ljmp
add
xchg
lret
sub
xor
inc
movsb
sub
fidivs
out
orl
lds
add
add
fwait
ljmp
test
jge
call
dec
adc
loope
cmc
pop
popf
gs
jge
dec
fisubrl
and
out
mov
mov
ss
push
fcomps
sbb
pop
sti
sub
jecxz
aam
cld
leave
adc
pusha
pop
pop
push
call
pop
lahf
in
call
xorb
pop
rcrl
dec
adc
cmp
in
js
out
mov
or
ret
push
repnz
or
push
push
sbb
sub
out
data16
mov
inc
int3
jo
push
mov
mov
fadds
jo
push
movsb
pop
add
out
mov
jge
dec
sti
push
sub
dec
xor
sbbl
xlat
rcrb
push
jb
fisubs
gs
mov
jl
sub
sub
lcall
adc
iret
hlt
rol
je
jne
and
pop
mov
push
adc
cmp
sub
jno
fsubr
iret
lods
cmp
mov
jecxz
popa
addl
fwait
sub
push
out
shrl
stc
outsl
and
out
mov
xchg
test
mov
inc
int3
imul
mov
dec
mov
inc
pop
orl
addr16
stos
jo
jae
cmp
pop
or
mov
dec
dec
sbb
jmp
in
je
imul
and
push
rcrb
cs
mov
mov
jae
xor
aam
mov
stos
mov
cmp
daa
bound
dec
loope
mov
jae
inc
test
sahf
or
cmp
shlb
jecxz
and
or
jns
fsts
scas
xchg
dec
jmp
movsb
push
lcall
aas
inc
xor
or
enter
lds
imul
scas
pushl
mov
iret
enter
cli
mov
pop
or
les
scas
jb
repnz
scas
cmp
call
mov
jle
pop
or
pop
lods
pop
dec
scas
stos
mov
and
xor
addr16
cmp
xchg
pusha
jmp
fucomip
and
pop
add
pop
inc
out
lods
out
cmpsb
jne
push
and
mov
push
adc
adc
pop
call
sahf
push
in
fwait
xchg
xchg
or
int3
andl
hlt
or
mov
les
dec
hlt
push
imulb
and
imul
aaa
dec
mov
jp
imul
aas
aad
cmp
cli
rolb
mov
nop
push
xor
cmpps
adc
call
shl
lret
mov
mov
scas
inc
lock
mov
push
cmp
inc
in
cmpsb
std
or
in
adc
dec
add
push
pop
inc
outsb
xchg
cwtl
xchg
fisubrl
rcll
pop
fistl
pop
hlt
xchg
dec
mov
push
dec
je
push
jnp
pop
fbld
xlat
add
out
and
fsubl
outsl
repz
int3
loopne
xchg
push
fimull
icebp
sub
jecxz
fimull
imul
cltd
sub
mov
out
lods
loope
addr16
and
inc
mov
inc
pop
stos
out
adc
mov
pop
test
mov
daa
push
push
scas
mov
insl
xor
decb
nop
jne
or
sbb
and
push
and
xlat
aad
cld
sub
rcrl
push
cmpsl
cld
jp
and
data16
adc
jp
dec
out
cs
or
cmp
xor
test
pop
pop
pop
add
js
data16
pop
xchg
sbb
cmp
leave
dec
jp
daa
mov
shlb
arpl
push
repz
pop
inc
stc
push
push
xor
adc
imul
testb
jecxz
cmp
movsb
orb
insl
jne
inc
jae
lods
and
mov
push
repnz
xor
adc
push
outsl
js
inc
lret
cmp
adc
cmp
jno
push
cmp
adc
cmp
xchg
jo
arpl
pop
or
test
ret
leave
pushf
or
out
pushf
adcl
push
aas
or
push
call
ljmp
jg
sbb
xchg
sbb
cltd
sbb
lcall
inc
inc
add
dec
mov
mov
mov
inc
add
xchg
mov
jnp
sarb
jp
inc
subl
cmp
cmp
ljmp
jmp
lods
adc
dec
inc
cmp
cmp
add
insl
fcompl
lret
cltd
mov
mov
pop
dec
lahf
adc
int3
jl
int3
pop
inc
inc
test
rolb
mov
out
aas
mov
je
ds
lds
jge
popa
test
and
movsb
pop
pop
add
mov
aaa
cltd
fwait
jbe
jp
cmc
subb
sti
negb
jo
roll
sahf
testl
cmp
or
and
or
inc
cmp
outsl
mov
sub
in
pop
add
lret
lods
inc
aas
aad
sahf
push
lds
adc
xchg
xor
in
mov
pop
inc
cld
clc
add
sub
dec
xchg
es
loopne
mov
dec
fldcw
loope
subb
aaa
lahf
loopne
jl
pop
adc
jns
xlat
ret
sbb
mov
rcrb
je
movsb
popf
push
dec
jbe
enter
push
nop
cmc
bound
mov
pusha
push
int
push
lock
pop
loope
or
xor
lds
or
cmp
jae
sbb
mov
xor
mov
xor
or
test
dec
sub
ss
mov
push
push
dec
stc
sub
call
cmp
jo
mov
fmull
in
test
lret
cwtl
or
pop
pop
inc
cwtl
rolb
scas
jecxz
mov
mov
lret
jle
rclb
ficompl
push
xchg
mov
pop
rcl
inc
and
stos
dec
adc
pop
or
sti
cmp
xchg
divl
inc
dec
cmpsb
adc
pop
clc
arpl
aaa
cmp
adc
and
lcall
adc
iret
stos
mov
rcrl
xchg
insl
sahf
in
xor
vpunpckhbw
xorb
xchg
xlat
popf
push
test
nop
push
jns
mov
push
inc
sar
inc
push
enter
xchg
mov
xchg
and
faddp
xchg
dec
xor
sub
push
cmp
adcl
push
and
add
cmp
ja
jp
std
pop
outsl
xor
scas
sub
idivl
or
data16
sub
push
scas
sbb
pop
jg
push
and
bnd
pop
dec
roll
cs
add
fidivrs
inc
jl
iret
mov
and
inc
roll
mov
js
sahf
mov
popa
aas
sub
cmp
cmpsb
movsb
xchg
cmp
cmp
hlt
rclb
cmc
sbb
sbb
cmp
subb
nop
jle
repz
or
leave
cmp
dec
and
add
fcmovnbe
adc
jecxz
jge
dec
and
push
sbb
cmp
mov
dec
inc
or
dec
pop
pop
push
push
lret
pop
and
ss
cmp
lcall
into
repnz
faddl
push
or
pop
or
movsl
movsl
mov
mov
mull
popf
repnz
xchg
enter
andb
fwait
jnp
cmpsl
cmc
movsl
xchg
clc
out
jae
inc
movsb
push
addr16
std
inc
nop
jl
je
pop
cli
mov
xchg
jmp
stc
xor
cli
sbb
jnp
test
mov
cltd
shll
add
pop
sub
sub
mov
dec
adc
inc
mov
aad
ret
out
or
push
pop
movsl
cld
test
sub
add
in
pop
and
insb
imul
rcll
divl
dec
dec
inc
adc
stos
mov
sbb
fs
out
jmp
inc
mov
jge
movsb
mov
fldenv
mov
in
adc
mov
mov
sbb
imul
sbb
cltd
mov
dec
into
iret
inc
add
and
adc
int3
es
sub
xor
clc
add
inc
cmpl
pushf
cmp
xor
enter
adc
xchg
xorl
or
push
dec
mov
xchg
push
ds
lcall
push
nop
push
cmp
inc
push
shrl
sti
test
dec
test
inc
push
neg
out
repnz
push
mov
data16
add
and
jns
ja
int3
and
shlb
push
nop
imul
add
movaps
insb
mov
idiv
cmpsl
fwait
sub
mov
push
push
jmp
aam
aaa
lcall
clc
pop
add
push
into
mov
imull
fs
das
out
and
test
std
lcall
jnp
nop
gs
cmc
cmpsw
cmp
jl
inc
ret
mov
xor
cld
mov
lret
inc
outsb
mov
pop
mull
data16
add
pusha
add
pusha
pop
xor
adc
jge
aam
ljmp
fistpll
and
fiadds
cmc
xor
add
scas
lahf
test
clc
sbb
mov
and
js
inc
fistl
stc
cli
pop
xchg
pop
repz
xchg
cmp
and
mov
mov
gs
xchg
movb
sbb
cmpsb
js
les
rcl
xchg
sub
add
pop
xchg
adc
mov
xchg
xchg
add
fs
in
fisubs
pop
inc
push
shrb
int3
pop
push
mov
xchg
jg
inc
clc
push
and
mov
jb
xchg
add
mov
sbb
mov
arpl
gs
adc
jg
outsb
shll
pop
test
popf
pop
push
mov
in
xor
push
mov
stc
push
or
jge
mov
pop
test
sbb
jl
andb
scas
add
stc
dec
sti
adc
rorb
cmp
xor
dec
in
lods
ret
cwtl
shl
lahf
pop
or
fs
std
lods
flds
int3
hlt
jns
dec
mov
cli
sahf
adc
lahf
shrb
push
stc
sahf
fmuls
scas
inc
or
repnz
jmp
xchg
je
mov
xchg
mov
rcr
mov
lea
xchg
mov
push
popa
add
cld
scas
adc
ret
and
mov
outsl
imul
xor
daa
push
call
cli
xchg
outsl
out
inc
mov
mov
decb
fbld
jnp
jge
mov
fists
in
fwait
push
roll
aad
or
push
in
xchg
xchg
or
xchg
pop
es
add
insl
ljmp
pop
push
push
les
push
insl
mov
pop
rcll
and
cmp
push
mov
pop
add
jecxz
sbb
repnz
outsl
and
sbb
test
insl
or
sub
mov
mov
xchg
test
mov
pusha
mov
jg
adc
popa
mov
lahf
lods
lret
or
int
mov
add
cmp
test
add
imul
imul
add
ds
mov
adc
dec
add
aaa
stos
fldt
xor
push
sahf
daa
and
xor
aaa
add
pop
cmp
jno
pop
mul
jae
ja
and
enter
or
jns
mov
test
sub
mov
arpl
pop
xor
add
dec
inc
pop
xchg
inc
adc
int3
shrl
loopne
push
iret
aad
int
pop
dec
les
out
scas
mov
inc
pushf
and
mov
xor
movsl
fstpt
lret
addr16
jg
enter
mov
ljmp
inc
and
fistpll
outsl
hlt
push
test
push
dec
sbb
inc
push
fldl
mov
fcmove
test
xchg
mov
sbbb
sti
out
add
xchg
sub
negb
outsb
ja
dec
mov
adc
aaa
jbe
inc
incl
and
mov
or
stos
mov
pop
pop
je
or
xor
pop
mov
sub
push
inc
popf
sub
mov
and
iret
cmpsl
call
filds
jg
das
or
pop
xor
mov
adc
jbe
xchg
pop
les
jo
rorb
loop
pop
mov
test
dec
or
push
or
pop
jnp
addr16
adc
in
ds
or
mov
out
sub
mov
inc
or
inc
fs
push
dec
pop
sub
lretw
mov
dec
xchg
sbb
adcl
addb
in
sti
mov
loopne
pusha
dec
mov
mov
xor
and
inc
sub
jl
sbb
mov
aad
add
scas
cmpb
push
imul
js
inc
rcll
ss
addr16
sbb
loop
in
sub
jno
enter
pop
mov
scas
rcrb
maskmovq
imull
out
mov
inc
dec
and
in
dec
mov
xchg
sbb
push
outsb
adc
scas
daa
sub
iret
pop
cli
shll
jne
fwait
dec
sbb
out
xchg
inc
mov
push
imul
mov
ret
or
sbb
clc
mov
xchg
push
add
int3
sbb
insb
mov
imul
xchg
xor
adc
mov
cs
xchg
xchg
inc
xchg
and
inc
lds
push
push
lcall
std
and
lea
add
arpl
lods
lock
scas
add
mov
jo
mul
cmp
mov
push
ljmp
cld
xchg
rorb
movsl
insb
adc
mov
mov
sub
sti
cld
jno
cmp
mov
add
mov
aas
sub
popa
scas
popa
adc
movsb
fucomp
loop
orb
in
stos
cmc
inc
cmp
imul
mov
pop
xchg
aam
adc
sbb
sbb
movsb
xchg
loop
fsts
xor
test
sbb
or
neg
xchg
clc
jb
jl
push
sbb
inc
std
or
iret
pop
mov
pop
add
fldcw
ljmp
jmp
xor
addr16
sbb
xchg
xor
cmp
inc
aad
fwait
lods
sub
mov
daa
or
outsb
pop
je
nop
push
cwtl
cmc
sub
loop
inc
jecxz
xor
sbb
mov
aaa
lods
pop
in
sahf
cmp
xchg
popf
out
sbb
aam
push
lea
in
push
sbb
scas
sub
dec
inc
pushf
push
scas
xlat
xor
push
repz
popa
out
add
loopne
jnp
subl
out
stos
daa
jg
lahf
pop
cwtl
add
fisttpll
jno
and
mov
fistps
js
hlt
imul
jge
movb
add
mov
and
sub
or
mov
cwtl
lock
daa
mov
and
into
aas
xor
movsl
fstp
pop
fsts
dec
cmpsl
je
sbb
cld
pushf
ds
mov
cmp
mov
adc
sbb
loope
push
jae
popa
imul
sub
mov
in
lods
test
outsb
sarl
push
or
icebp
jmp
pushf
fs
and
jnp
call
fisttpl
and
fldcw
movsb
das
cmp
sub
sub
mov
les
add
add
les
push
adc
sbb
ja
or
loopw
mov
push
mov
repnz
mov
nop
push
movsl
push
mov
mov
movsl
lock
jb
ret
or
leave
pop
mov
mov
loope
cmp
sbb
cmp
outsb
or
shr
pop
sub
cmp
sbb
ljmp
rorl
mov
aad
in
stos
in
add
lock
mov
adc
or
xchg
jge
scas
dec
jnp
jbe
sahf
pop
xor
cmp
test
shll
cld
xchg
sbb
call
and
mov
ja
push
pop
cmp
and
mov
dec
movsb
mov
sti
test
push
das
imul
outsb
cmpl
rep
lods
scas
cltd
add
mov
push
mov
lock
in
jo
rcrb
in
inc
ret
insl
lods
ficompl
subl
cwtl
sub
pop
iret
dec
roll
and
sbb
xchg
inc
cli
push
fs
les
inc
pop
sbb
sahf
pop
mov
jbe
xor
and
imul
int
dec
addr16
cmp
sarb
adc
jmp
add
fists
rol
pop
push
xchg
mov
test
dec
dec
test
shl
in
je
and
outsb
sbb
aas
iret
imul
test
movsb
fstl
mov
stos
lods
out
jo
incl
ljmp
inc
mov
mov
pop
mov
int3
pushf
hlt
in
mov
icebp
int3
cs
pop
mov
pop
lods
je
xlat
cmp
mov
imulb
int3
pop
div
aas
mov
addr16
dec
xor
aam
daa
mov
loop
mov
aaa
inc
mov
out
repz
jo
or
adc
imul
and
sbb
rcll
sub
test
repnz
inc
pop
mov
xchg
iret
inc
adc
xchg
dec
cltd
mov
hlt
daa
js
xchg
mov
add
in
out
in
adc
xchg
repnz
dec
stos
dec
xor
test
scas
je
mov
outsb
jge
sbb
jb
mov
jbe
sti
xor
loope
enter
xor
test
jg
repz
shr
adc
dec
sbb
rorb
pop
or
and
xor
pusha
lea
cmp
pop
pop
push
loopne
add
cmp
cs
and
bnd
out
insb
jno
add
repnz
cwtl
sub
jno
xor
jmp
ds
inc
js
jecxz
sbb
mov
rcrb
pop
push
dec
and
add
xor
xchg
pop
fs
push
jmp
pop
pusha
push
pop
push
adc
enter
or
dec
jle
push
aam
ljmp
mov
scas
add
add
mov
lds
incl
dec
fnsave
jbe
enter
in
xchg
mov
movsb
pop
fiaddl
outsb
pop
push
xor
adc
adc
sbb
or
fcomp
adc
and
xchg
loopne,pn
insl
sar
into
mov
ja
mov
scas
call
inc
mov
ljmp
pop
js
mov
sub
pushf
mov
imul
cmc
mov
xchg
pop
cmp
push
arpl
pop
adcl
dec
sub
call
movsl
fwait
rcll
sub
pop
mov
sub
push
cmpsl
sbb
fldenv
and
rcr
sbb
repz
inc
outsl
popf
shlb
adc
adc
ja
fldt
insl
cs
sbb
fwait
bound
in
insl
mov
ret
xlat
push
shlb
mov
dec
jge
jle
imulb
pop
mov
nop
icebp
jbe
mov
arpl
mov
adc
rol
mov
out
sub
outsb
ficomps
outsl
xchg
mov
cli
stos
mov
mov
adc
cwtl
clc
je
int3
cmpsb
jg
mov
int3
sbb
or
pop
cmp
jb
dec
jb
cmpl
enter
repnz
fdivrl
sbb
pusha
hlt
lock
cmp
mov
cmpl
adc
scas
jl
in
loop
jae
testb
pushf
clc
ret
outsl
xchg
rclb
ret
bound
popf
andl
mov
xor
orb
xchg
dec
sbb
lock
push
mov
test
push
mov
pusha
cltd
pushl
imul
jae
ret
test
pop
and
ss
ret
add
or
add
sbb
cmpl
addr16
cmp
daa
push
jecxz
dec
mov
xchg
jb
imul
lret
lret
and
cmp
ss
clc
repz
rorl
icebp
pop
jbe
xchg
imul
fcomip
xchg
sahf
movsl
jl
mov
mov
pop
rol
fcompl
xorb
pop
pop
push
lret
outsl
je
lret
jnp
leave
push
pop
dec
pop
call
or
dec
aaa
dec
cmp
mov
iret
das
sbb
jecxz
ret
and
cltd
lahf
leave
popf
and
loopne
mov
lret
test
es
ret
mov
stc
pusha
imul
jge
sub
xchg
ret
sub
or
aas
jecxz
mov
and
rcrl
int
test
mov
sub
hlt
addl
xchg
mov
pop
add
movsb
and
jmp
outsb
mov
mov
ja
lret
stos
sahf
loopne
jnp
call
pop
mov
addl
dec
sbb
cli
cmp
and
mov
outsl
mov
js
or
cltd
popf
fs
mov
xor
mov
ret
inc
icebp
subl
cwtl
pop
xlat
ss
jbe
mov
pop
flds
dec
mov
sti
add
movsl
pop
xchg
adc
dec
push
adc
mov
inc
nop
add
jmp
or
leave
fbstp
ret
leave
sbb
jae
xor
sbb
inc
xlat
xchg
cmc
jbe
in
pop
cltd
addr16
in
divl
xchg
adc
or
mov
nop
stos
xlat
insl
push
pop
jecxz
and
movsb
cmp
mov
mov
adc
ds
push
popa
push
stos
sti
push
jo
adc
add
jl
mov
data16
stc
xchg
in
lods
ret
lea
scas
dec
xchg
push
push
pop
mov
lret
int3
mov
mov
rcll
sub
dec
repz
jne
orb
shrb
jbe
xchg
cltd
js
jmp
cmpl
pop
clc
push
mov
mov
push
xor
or
mov
mov
dec
mov
inc
clc
mov
ds
sti
mov
mov
or
cmp
arpl
xor
mov
push
adc
nop
cld
pop
mov
adc
xor
mov
in
popa
loopew
data16
repz
popa
lock
cmp
mov
repz
cmpsb
mov
sbb
lret
outsl
add
test
lret
push
sbb
mov
popf
pop
sbb
inc
jnp
sahf
fmuls
push
scas
imul
pop
push
mov
jge
mov
stc
xchg
xlat
xchg
insb
mov
enter
adc
inc
add
dec
aad
cmp
inc
into
test
ljmp
insl
sbb
cs
mov
movsb
adc
cmpsl
ret
xor
lret
push
push
mov
mov
mov
shrb
out
mov
mov
adc
inc
inc
inc
mov
aad
xchg
xchg
fstpt
mov
pop
cmp
dec
jmp
sahf
popl
jo
xchg
xor
and
jg
popa
out
cmp
lods
fwait
add
ret
bound
ret
xchg
hlt
jne
add
jl
xor
push
loope
mov
cs
or
notb
and
jnp,pn
pop
add
mov
rolb
xchg
and
fmull
xchg
in
xor
or
dec
mov
jmp
cwtl
or
pop
adc
jne
mov
out
sub
cmp
aas
cltd
sbb
adc
into
and
inc
js
notl
jmp
xchg
pop
push
inc
pop
or
inc
mov
fadd
or
xor
lret
mov
lcall
das
subl
add
push
push
sub
dec
push
outsb
sti
sub
and
mov
fidivrs
stos
addr16
push
jns
lods
cvtps2pd
inc
mov
inc
mov
lret
sub
add
push
mov
mov
pop
mov
int
in
cld
ja
insl
inc
sub
mov
and
fldcw
inc
out
mov
sbb
rol
int
lret
sub
adc
or
vaddsubpd
inc
fcoms
inc
aas
jae
sti
mov
mov
and
je
adc
imul
mov
repnz
lock
xor
cmp
push
shll
fnstenv
into
pop
or
cmp
cld
xchg
int
aam
popf
sbb
lret
scas
push
das
jne
mov
fstps
das
xchg
test
add
mov
jo
loopne
mov
inc
negl
mov
jae
inc
inc
in
xchg
pop
decl
jg
mov
and
ja
outsb
mov
and
cs
sbb
popa
andl
mov
or
push
std
adc
jmp
cli
sub
mov
xor
shlb
cld
out
ficoml
movsl
and
cltd
lock
lret
fists
push
lret
jb
jp
inc
ret
jne
repnz
in
mov
inc
mov
nop
ss
add
psadbw
jbe
mov
push
jecxz
mov
mov
les
xchg
jl
xor
mov
jge
adc
outsb
pop
and
cmp
xchg
addl
adc
mov
push
mov
adc
mov
fidivl
mov
add
out
arpl
shll
sub
jae
cmp
divl
mov
clc
fs
lret
inc
adc
fwait
lods
xchg
adc
add
roll
cld
loop
rcrb
in
add
out
inc
push
xchg
loope
ja
pusha
cwtl
fcomps
and
icebp
xchg
fsubr
out
mov
insl
mov
movsb
cmp
jnp
push
xor
cld
push
nop
and
std
adc
sbb
sbb
je
xchg
jge
int3
dec
imul
xor
xchg
ds
add
lods
pushf
inc
hlt
mov
xor
idivl
pop
mov
and
ljmp
add
lret
sbb
test
adc
in
stc
fdivl
and
fwait
push
imul
inc
mov
sub
jmp
fcmovu
pop
imul
push
add
pop
jnp
aad
mov
sbb
add
mov
adc
lods
pop
aam
aad
test
jne
in
das
jno
mov
xchg
jno
out
rclb
push
out
xchg
mov
fbstp
fists
int3
push
mov
rclb
cmpsl
sub
fidivs
incl
fdivrs
scas
iret
sbb
scas
pop
roll
cmp
flds
lret
sarl
cmpsb
scas
cmp
pop
fwait
ja
xor
jo
arpl
fdivs
adc
jecxz
cmp
xchg
jnp
fwait
sahf
jg
jmp
adc
sub
ljmp
sbb
mov
sub
sub
rol
inc
xor
push
shrb
jae
jg
cli
sub
cmp
cmp
cmpsb
mov
xorl
cmp
and
push
jae
push
dec
sbb
mov
sbb
mov
ljmp
movsb
and
icebp
leave
add
bound
ss
sbbb
arpl
fwait
popf
out
daa
xchg
dec
fs
sbb
pop
sbb
testl
mov
daa
les
xor
stos
int3
das
inc
repnz
cmpsl
pop
or
add
sarl
in
jle
pop
and
fs
cld
lcall
and
cli
xchg
or
jmp
pop
cmp
int3
popf
cmpsb
ljmp
outsb
and
xchg
sub
inc
add
lods
insb
popf
jnp
dec
or
adc
mov
and
sub
xor
int
in
xchg
push
xchg
stos
inc
xchg
pop
roll
sbb
jbe
dec
lret
lahf
push
and
outsl
inc
loope
mov
cltd
ret
mov
cltd
add
test
mov
mov
sub
xchg
fnstsw
mov
insb
out
xchg
out
lock
sub
jo
dec
dec
ficompl
addr16
insb
shlb
leave
push
or
andl
cmpsb
xchg
lds
pop
mov
fildl
mov
jmp
pop
scas
ljmp
inc
or
je
gs
enter
stc
cmpsb
nop
lods
xchg
roll
hlt
push
leave
mov
xor
pop
and
mov
int3
mov
sub
xor
and
jno
adc
pop
icebp
or
test
jns
mov
fimull
decb
ljmp
fiadds
out
mov
pop
fdivrs
bound
lret
test
inc
mov
insb
std
sbbl
mov
ljmp
lahf
loopne
sti
mov
and
test
pop
mov
popa
push
cmc
and
movsb
fisubl
out
and
icebp
push
bound
xor
sub
movsb
add
xchg
sbb
sub
orl
inc
psubsw
adc
mov
and
aad
pushf
and
aaa
fwait
daa
add
inc
sbb
stos
cmc
pop
je
pop
jl
push
jle
aas
out
sbb
pop
stc
lds
outsl
cmp
and
test
jg
pop
cwtl
mov
fninit
in
mov
stos
rolb
fbstp
icebp
push
pop
push
ficoml
inc
std
cmp
pop
ds
lea
jg
lea
daa
dec
or
push
inc
sub
or
pop
and
jge
cmp
add
pop
jb
in
loopne
outsl
jae
dec
out
out
in
push
clc
xchg
outsl
xchg
mov
shr
inc
sub
fadd
and
or
xor
add
and
xor
sbb
pop
ljmp
imul
adc
sub
cltd
fdivrl
dec
sbb
ret
mov
xchg
or
add
dec
xchg
fs
fidivl
jns
push
jle
or
xchg
adcl
add
push
stos
inc
imul
stc
pop
mov
jno
insb
or
in
pop
call
sub
lcall
ds
scas
loop
mov
lcall
cltd
mull
popa
sub
scas
movaps
xchg
mov
dec
movsl
rolb
sbb
loope
ss
or
pop
xchg
lcall
adcl
push
pop
cmp
lcall
xchg
test
and
pop
push
xlat
mov
stos
cld
push
loop
and
gs
or
data16
sarb
mov
mov
push
out
xor
mov
daa
enter
je
or
pop
adcl
fdivs
sbb
movsl
and
imul
rcrb
std
pop
inc
mov
mov
clc
cli
mov
sub
sahf
insb
test
roll
mov
dec
or
inc
and
jo
lahf
xor
or
or
in
adc
adc
fadds
ret
cmpsl
cmp
adc
pop
xor
pusha
pop
sbb
dec
addr16
push
das
test
lcall
les
ss
les
sub
xchg
or
mov
adc
dec
jae
out
mov
cs
insb
std
jne
xlat
addl
jae
incb
jge
cmp
insl
xchg
and
sbb
pop
int
jmp
lcall
xor
jecxz
jmp
stos
aad
xchg
hlt
add
das
jnp
sub
push
dec
mov
outsb
daa
aad
std
movsb
and
add
faddl
jno
das
shlb
cmp
dec
jecxz
dec
xlat
cmpsb
mov
lea
xchg
pop
xchg
pmuludq
fisubl
push
ja
push
bound
or
dec
adc
je
mov
sarl
leave
mov
insb
cltd
pop
cmp
push
cmp
xchg
inc
sbb
iret
clc
gs
pop
xchg
outsb
fidivs
dec
dec
add
and
aam
mov
xor
add
adc
sub
or
and
inc
in
pushf
sti
push
push
xchg
das
adc
push
cwtl
inc
movsl
push
push
std
mov
push
xor
out
inc
cmp
xchg
adc
xor
pop
push
adc
es
fcomi
aas
aaa
not
lahf
fisubrl
stos
push
daa
adc
jo
pop
jne,pt
sub
sti
dec
jecxz
jnp
pop
out
hlt
xchg
icebp
fstpl
andl
stos
pop
call
dec
das
inc
lea
adc
lret
jb
mov
jge
inc
js
adc
jge
insl
jle
push
push
sub
and
cli
adc
jo
mov
sbbb
inc
mov
cmp
rol
sbb
out
addr16
pop
adc
sub
clc
mov
mov
jecxz
add
push
insl
out
popa
mov
sbb
pop
scas
adc
sbb
mov
les
subb
dec
or
mov
xor
ja
cwtl
pop
pop
dec
gs
inc
shlb
lods
mov
sbb
xor
pop
mov
add
ja
sbb
shll
dec
sbb
or
push
aad
stos
fcoms
cli
enter
cmp
in
pop
adc
xchg
push
sub
jecxz
pop
call
mov
int
lods
rcll
push
jae
lret
aaa
cmp
pop
mov
add
inc
xor
inc
jae
shll
push
xor
mov
pop
push
inc
xchg
push
imul
mov
ret
es
outsb
rcll
dec
cmp
int
push
out
aaa
insl
sbbl
cld
cmp
push
and
lea
pop
sbb
pusha
cli
and
xlat
sub
lods
lcall
cmp
testl
test
add
add
push
icebp
mov
and
mov
push
jl
js
int
loope
xchg
sbb
sbb
leave
jae
mov
icebp
lods
je
mov
or
adc
cmpsb
test
mov
out
mov
jno
aam
sbb
sbb
xor
scas
outsl
and
sub
fdivrs
xchg
mov
xor
imul
lock
les
push
cmc
inc
add
fcom
adc
into
jnp
mov
jnp
aad
repz
lret
lock
or
push
or
mov
mov
add
push
jle
xchg
adc
pop
adc
xchg
mov
into
cli
sub
xor
dec
loope
jae
jp
mov
iret
mov
cld
cltd
ljmp
add
cmpsb
js
dec
push
lods
dec
or
push
cmpb
push
sbb
xchg
add
scas
dec
or
cmp
sti
sahf
mov
pop
xor
cmp
dec
fnstenv
or
xor
mov
push
mulb
aam
xchg
js
mov
outsl
mov
mov
dec
cmpsb
jns
test
pop
xor
sbb
je
dec
add
lcall
jecxz
xor
push
push
jp
les
sub
int
xor
mov
adc
iret
fisttps
imul
leave
add
pop
sti
xor
popf
and
data16
es
jmp
test
xchg
pop
jae
outsb
fidivrs
push
movsb
scas
aad
adc
push
pop
movsl
and
aam
or
lds
fst
loop
mov
mov
jp
adc
fucomip
icebp
movsl
pop
adc
lea
jbe
and
adc
adc
sbb
daa
int3
jl
pop
add
add
cmp
aas
dec
test
mov
ja
fbld
xchg
pop
xchg
loopne
sub
testl
xor
loopne
scas
and
mov
jmp
testb
mov
iret
sbb
sub
add
jmp
sbb
das
pop
clc
push
xchg
mov
sarb
xchg
push
xor
jmp
xor
xchg
in
sbb
mov
and
inc
add
stos
sbb
les
add
icebp
outsb
out
out
dec
lds
sbb
push
mov
pushf
loop
jecxz
xlat
ljmp
or
jae
cmc
fistpll
mov
mov
push
push
xor
push
fwait
bound
je
push
inc
imull
push
mov
in
push
je
pop
dec
inc
imul
jbe
inc
or
mov
lret
sub
sub
dec
out
lock
cmp
out
pop
mov
or
jno
xor
push
ret
pop
aaa
xorb
test
push
push
cmpsl
dec
ds
fs
out
fsub
sub
dec
xchg
cwtl
dec
mov
dec
fmuls
fwait
pop
inc
or
mov
xchg
insl
in
in
adc
ret
int
or
mov
js
inc
jno
ss
adc
test
add
mov
imul
jne
aaa
cmpl
sti
xchg
dec
inc
cwtl
test
scas
popa
cwtl
add
xor
addr16
nop
sub
xlat
pop
out
jne
mov
daa
pop
pusha
mov
or
jns
shll
dec
dec
mov
lds
and
jns
and
push
lcall
jno
jno
fcmovnbe
xor
and
int
inc
xchg
mov
mov
dec
push
jg
mov
addr16
mov
imul
or
xchg
ret
push
fdivl
and
add
aad
and
fisttps
mov
push
cli
jo
sar
xchg
insl
sarb
aaa
mov
mov
xor
or
pop
or
insl
sahf
or
inc
or
mov
mov
rcr
mov
cmpsb
push
mov
jp
cmpsb
sarl
mov
in
mov
hlt
lds
daa
into
fistpll
nop
fimull
lea
jbe
fs
call
add
aam
mov
and
stos
mov
ja
call
mov
jbe
mov
push
jns
sahf
scas
sub
xchg
in
in
enter
mov
push
jns
cli
mov
mov
adc
insb
clc
cli
aaa
xchg
mov
adc
mov
out
mov
cmp
mov
mov
fdivr
and
into
mov
or
test
sbbl
ret
and
faddl
call
push
jns
lret
fiadds
dec
cld
sti
sbb
icebp
sub
cmp
gs
nop
mov
push
sbb
hlt
popa
xor
adc
fs
cmp
pop
mov
rep
jns
fidivrl
lret
movb
sbbb
mov
mov
fwait
jecxz
mov
imul
ret
xor
in
cmc
nop
jle
pop
mov
rcrl
bound
inc
fisttpll
jmp
orb
in
jmp
sub
add
adc
adc
mov
mov
push
dec
sbb
or
or
dec
aas
sub
fs
mov
test
arpl
adc
adcl
xchg
and
pop
cmpsl
inc
xchg
andl
jle
xor
cmp
dec
idivb
adc
inc
je
jmp
clc
scas
pop
inc
xor
popa
test
stc
xor
cmp
movsl
push
mov
mov
xchg
ret
mov
push
out
inc
ret
sub
xchg
sbb
cmpl
inc
popf
push
xchg
push
xchg
aad
xchg
ret
cwtl
repz
in
mov
or
out
adc
lea
aaa
cmpsb
mov
adc
pop
cmpsb
push
shrl
aaa
out
shll
leave
mov
sbb
jl
push
add
sahf
arpl
push
es
aam
adc
pop
fisttps
xchg
sarb
cmp
outsl
or
mov
int3
bound
in
jmp
xor
jecxz
mov
dec
xor
jmp
and
pop
fdivs
xor
shll
fsts
mov
add
ret
rclb
push
adc
jle
cwtl
imul
cmp
adc
jecxz
and
inc
decl
lods
adcl
fbstp
xchg
test
mov
cmp
jnp
and
mov
sub
jns
fwait
jl
sbb
loop
jle
xchg
dec
and
out
jg
sarb
mov
daa
mov
movsb
add
mov
fs
push
cwtl
lahf
push
xchg
cmp
int
inc
fnstenv
jg
mov
adc
fcoml
push
mov
scas
push
cli
mov
imul
pushf
and
aaa
mov
lods
push
sbb
xor
adc
sub
mov
or
sub
addr16
in
mov
neg
shr
add
jo
es
mov
lret
dec
and
pusha
and
xchg
test
outsl
ja
adc
int3
shr
inc
mov
xchg
cld
mov
lods
xchg
dec
xchg
pop
jnp
add
ds
test
test
jg
fs
fwait
ret
dec
push
repnz
mov
ret
sub
mov
es
clc
icebp
lock
jp
lret
stc
pop
or
inc
stos
cli
and
sub
or
pusha
lret
fnstsw
jge
adc
mov
lret
xor
mov
stos
fs
pop
inc
inc
fildl
mov
jns
fdivr
pop
or
mov
jnp
pop
dec
add
ljmp
shrb
inc
test
push
mov
cmp
iret
add
stos
mov
call
leave
push
mov
mov
test
mov
xor
cmc
dec
fcoml
add
jae
cmpsl
xchg
and
cmpsb
aad
pop
int3
dec
out
sbb
jl
mov
adc
cmp
test
idivb
hlt
cltd
mov
add
rolb
test
jbe
pop
push
imul
loop
xor
sbb
or
in
mov
and
pop
fsubrp
dec
addr16
xlat
movsb
ss
jp
add
xchg
mov
jno
pusha
push
mov
or
in
iret
cmp
mov
rorb
pop
sbbb
mov
sbb
dec
mov
xchg
pusha
ret
lret
pushl
scas
pop
or
push
inc
idiv
jb
mov
sbbl
xchg
jne
push
loopne
loope
dec
xchg
pop
loope
and
jnp
stos
insl
dec
aas
push
pop
jo
idivl
int
push
inc
test
mov
adc
xor
and
sbb
xchg
mov
xchg
push
in
fdivrl
pusha
mov
data16
pop
cwtl
pop
mov
insb
adc
cld
sub
outsl
inc
xor
nop
dec
dec
sub
xlat
sahf
cld
stc
insb
mov
hlt
popf
xchg
fwait
or
inc
mov
push
jl
xorb
mov
jnp
jmp
addr16
cmp
stos
mov
pop
stos
add
fxch
into
out
jns
mov
and
fisubs
mov
cltd
pop
jnp
mov
test
popf
das
and
cwtl
dec
loope
popa
jg
je
imul
xchg
out
xchg
fmuls
int
dec
dec
push
gs
sti
outsb
popf
shrb
jl
in
call
cmp
rclb
jg
insl
outsb
pusha
out
sbb
inc
idivb
mov
xor
ja
jb
out
pop
pop
push
jp
jns
cmp
inc
jb
daa
jl
sahf
push
lock
jne
push
inc
mov
and
ja
imul
dec
or
or
repnz
fcmovbe
shll
aas
rcl
sarb
or
out
inc
call
iret
pop
mov
sub
in
out
fdivrl
fucom
dec
shrl
push
adc
jo
push
mov
add
int3
mov
or
inc
fistpl
cmp
mov
iret
sahf
jno
dec
adc
inc
adcl
int
aaa
rcr
fbld
jnp
jg
pop
push
hlt
lods
inc
aaa
icebp
aas
push
dec
dec
and
loope
packssdw
icebp
je
jo
jno
mov
rcrb
jnp
push
mov
gs
jae
xor
data16
dec
and
ss
cmpb
in
push
shrl
lock
or
mov
movsl
mov
mov
mov
pop
mov
es
mov
loop
sub
mov
je
or
dec
pop
lock
icebp
in
dec
es
into
add
xor
mov
mov
aas
lea
push
test
fstpl
jmp
daa
iret
pop
or
movsl
mov
loopne
rorb
int
jbe
dec
lock
lret
mov
or
outsl
xlat
jns
lret
lret
mov
dec
mov
and
fisubl
push
mov
data16
daa
push
push
aam
popa
scas
fnstsw
push
mov
jg
aas
jge
or
es
imul
hlt
insl
xchg
adcb
cmp
ljmp
mov
mov
addr16
pusha
lcall
bound
adc
inc
cmp
fxam
movsl
xchg
or
push
mov
scas
aad
arpl
repnz
scas
andl
dec
shll
cltd
mov
push
xor
dec
add
pop
lret
dec
je
and
aaa
stos
lcall
test
sub
mov
out
out
mov
lcall
fsts
pop
fs
cmp
mov
bound
jecxz
stos
fidivl
lcall
cltd
ret
cmp
daa
mov
pop
adc
cs
or
sub
pusha
jnp
cmp
int3
enter
adc
sbb
insl
ljmp
ret
dec
push
aaa
out
loope
insb
mov
ds
and
sub
xor
imul
addl
jmp
mov
cmc
sbb
outsb
repz
daa
cmp
cmc
pop
jbe
xor
insl
sub
fcmovnb
inc
jo
mov
push
aas
push
adc
hlt
pop
jmp
jb
add
sahf
mov
dec
out
nop
push
sbb
stos
fildll
push
pop
push
or
adc
sub
mov
shl
out
xchg
cmpsl
pusha
push
cli
cwtl
mov
nop
lods
inc
in
inc
dec
repz
scas
lahf
mov
iret
push
mov
das
mov
jg
add
mov
loope
xor
shll
pop
sub
les
aad
dec
or
xor
ss
shlb
cmp
outsb
jp
lahf
mov
cli
xor
sbb
mov
je
mov
xchg
pop
push
movsb
sti
mov
scas
je
pop
nop
jbe
lcall
mov
inc
lret
dec
pop
xchg
jne
sbb
pop
pop
cmpsb
adc
push
mov
idivb
aad
in
mov
jl
in
xchg
and
xlat
inc
xor
sub
es
sbb
in
addr16
xor
pusha
cmc
pop
mov
sub
popa
aam
mov
pop
paddd
ret
adc
xchg
mov
bound
in
dec
and
jno
and
mov
xchg
mov
inc
imul
mov
push
or
sbb
pop
test
jb
aaa
or
outsl
ss
cmc
jns
pushf
insl
sbb
aaa
in
sub
dec
xchg
or
xchg
in
dec
mov
test
fsts
or
and
adc
int
hlt
xlat
mull
push
mov
pop
mov
pop
bound
les
lea
xchg
mov
xchg
ret
or
adcl
inc
imul
lea
daa
rol
pop
ds
jmp
rcr
fwait
ljmp
test
sub
jno
popa
xchg
movsb
aas
fstp
repz
jl
mov
mov
add
dec
bound
insb
shlb
mov
xchg
cmpsl
in
sbb
pop
jne
push
and
inc
inc
cli
dec
clc
roll
clc
pop
dec
inc
mov
pop
imul
fwait
dec
pop
testl
mov
mov
mov
int
ficoms
idivl
hlt
insb
mov
test
sbb
movsb
sbb
fsubl
cmc
jb
sar
cmpl
push
mov
enter
enter
fldenv
pop
sbb
push
in
pop
inc
in
mov
mov
mov
leave
idivb
sub
adc
clc
xor
cwtl
xchg
in
idivb
bound
das
xchg
in
cmpsb
dec
xor
and
ja
pusha
ds
out
sahf
loopne
adc
or
add
out
mov
nop
loopne
xchg
adc
push
mov
lock
mov
mov
adc
adc
dec
fcmove
fs
jmp
aam
aaa
mov
xchg
lret
fbstp
sub
xchg
xorb
int
bound
shrl
popf
in
cmp
popa
pop
lret
gs
add
addr16
lea
mov
in
lea
mov
pop
pop
ss
ss
lock
mov
cmp
sub
adc
push
cmpsl
loopne
test
dec
div
pushf
sub
push
mov
jb
sbbb
dec
xchg
les
or
es
adc
ss
ja
mov
sub
in
insl
or
jg
mov
insl
movsb
mov
pop
stos
dec
int
push
pop
imul
sub
lock
repz
lods
push
popa
scas
jmp
xor
xor
dec
mov
fnstcw
cmp
repnz
pop
mov
js
std
out
bound
icebp
pop
sbb
mov
pop
xor
sbb
cmp
cmpl
das
push
and
cs
hlt
aam
xchg
jmp
mov
and
insl
sbb
cmp
push
push
xchg
repnz
mov
loop
pop
adc
pop
daa
insb
into
popf
aas
shlb
cli
push
adc
fnstsw
cld
fidivrl
les
clc
inc
sbb
cmp
mov
in
test
test
push
mov
push
pop
loop
mov
mov
pop
lret
jecxz
pop
hlt
stos
ror
and
cmpsl
and
repz
das
adc
out
xlat
jp
ds
sti
lret
jb
dec
ja,pt
addb
sbb
inc
in
push
cmp
shlb
insl
mov
xchg
xor
push
xor
shl
hlt
pop
pushf
jg
cmc
jnp
adc
xchg
lea
mov
lahf
cmpsb
push
cwtl
sub
inc
imul
adc
pop
xchg
xchg
cld
ds
or
adc
add
mov
rcrl
fdivrp
lahf
test
sub
test
adc
or
scas
ja
outsb
cld
inc
fisubs
and
jns
cltd
add
cmp
inc
mov
lea
fisubrs
sbb
aas
popf
xchg
sub
sbb
jns
mov
call
push
hlt
out
call
push
push
jne
push
push
add
or
adc
daa
push
pop
cmp
push
push
test
int3
outsb
or
mov
data16
test
adc
aad
push
push
movsl
movsl
adcb
dec
push
loopne
sbb
outsb
jmp
mov
aas
push
rcrb
inc
bound
lods
es
jnp
inc
push
pop
aad
xchg
negl
pop
mov
das
imul
add
fidivs
movl
mov
adc
xor
aas
loop
xchg
sub
jbe
int
mov
adc
int
out
xor
xchg
loope
hlt
cld
xor
js
inc
incl
insl
or
jnp
jmp
lods
cmp
fs
clc
add
mov
and
sbb
enter
xor
pop
xor
es
pop
dec
sbbl
push
and
in
fwait
data16
sbb
add
mov
jp
imul
pushf
fcoms
sbb
cmpsl
sbb
mov
inc
mov
shrl
mov
xor
or
call
inc
xchg
nop
jmp
loopne
xchg
cld
jl
shll
arpl
enter
test
push
sbbl
cmpsb
mov
inc
pop
push
outsl
cs
arpl
arpl
decl
addb
stos
sub
roll
les
in
sub
adc
rcrb
or
flds
stos
dec
movsb
loopne
das
inc
loop
mov
cmp
jb
adc
fsubs
and
adc
mov
pop
enter
imul
das
jl
std
addr16
mov
imul
sbb
shlb
shlb
jnp
test
push
fisubrl
mov
push
mov
inc
push
jns
rcrl
push
and
in
mov
test
mulb
mov
inc
mov
nop
or
pop
cmpl
and
jl
and
push
aad
flds
js
pop
iret
popa
testb
and
enter
pop
or
cmp
outsb
or
dec
sbb
popf
icebp
cmp
push
push
push
pushf
lahf
pop
jp
inc
xchg
mov
test
mov
dec
push
push
and
in
jno
push
das
std
cs
lock
sub
data16
push
push
out
je
or
jo
mov
sub
xchg
mov
lock
jno
std
add
and
gs
jp
sbbl
or
lods
lea
lret
mov
ret
in
add
mov
xchg
cwtl
adc
movsl
mov
test
adc
push
imul
cmpsl
lds
divl
addl
sbb
adc
mov
fbld
movl
lods
jp
mov
insl
test
lods
jl
jp
adc
cld
adc
sbb
jo
ja,pt
xlat
rol
call
xor
dec
xchg
orb
dec
les
dec
add
xchg
dec
or
cmpsl
lret
xchg
cmp
adc
loope
push
adc
mov
mov
iret
ret
inc
mov
sbb
and
xchg
dec
push
pop
or
std
dec
and
loopne
mov
addr16
jp
repnz
pop
mov
insl
cli
scas
movb
xor
test
insb
cs
fists
inc
inc
push
andb
and
pusha
out
out
sub
mov
js
xchg
loope
sar
outsb
test
ficoml
shlb
jge
adcb
orb
add
ret
lret
xlat
gs
xchg
xchg
fsubs
dec
out
mov
lods
popa
sbb
nop
sbbb
out
lahf
sarb
adcb
not
mov
mov
jnp
add
add
fsubrl
push
inc
mov
jecxz
mov
mov
pop
push
push
scas
sub
mov
push
mov
cltd
pop
sub
adc
push
imul
mov
out
and
push
xchg
push
sahf
lret
jl
and
sbb
adc
adc
cli
or
sub
push
jg
aad
inc
mov
test
fwait
add
ja
jne
test
sub
sahf
jp
adc
xchg
test
jp
push
mov
push
ljmp
push
cmp
or
sub
lahf
shlb
daa
push
stc
push
out
fdivrl
add
mov
clc
ffreep
in
cmovl
lret
add
mov
jmp
adc
adc
pop
dec
fs
mov
lret
addl
adc
push
jae
scas
ret
mov
jns
xchg
pushw
adcl
sub
lret
jno
dec
mov
push
gs
jnp
jbe
pop
xchg
add
inc
in
or
rcr
and
stc
and
jmp
adc
xor
int
dec
push
sbb
das
mov
or
jbe
rorb
aas
mov
adc
xchg
add
ret
std
sub
sbb
sbb
out
gs
addl
xchg
push
jnp
cwtl
xlat
test
jno
out
mov
or
scas
and
sub
and
dec
cmpsl
lds
sub
mov
xor
stos
ficoms
inc
or
push
aaa
inc
scas
call
cmp
push
popf
push
mov
pop
jecxz
lea
scas
inc
mov
out
lahf
add
sub
sti
in
xchg
int
stc
nop
inc
sti
jecxz
arpl
in
out
pop
int
lcall
aad
jl
sub
sub
add
xor
in
mov
in
icebp
or
jge
mov
inc
dec
data16
adc
and
in
xchg
inc
sub
push
inc
shll
xchg
xor
dec
mov
mov
cmp
add
lock
inc
adc
xor
xor
adc
jl,pn
rclb
gs
cwtl
fs
das
inc
push
lahf
leave
adc
test
jae
sub
fmull
cwtl
shll
mov
lea
or
nop
fnstenv
mov
fwait
sub
push
cwtl
lcall
pop
pop
pop
ljmp
xchg
fwait
cmp
aam
jle
mov
cmp
and
sti
test
insl
test
rolb
sbb
mov
inc
mov
mov
pop
adc
push
add
outsl
mov
and
pop
cmp
and
rol
iret
pop
pop
mov
int3
and
stc
repnz
insl
mov
int3
outsb
jns
outsb
imul
sub
xchg
into
and
into
dec
jae
ss
data16
xor
pop
test
sti
sbb
cmc
mov
sahf
cmpsb
xchg
fisubrl
decb
and
fmul
outsl
and
test
pop
out
fildl
xchg
jmp
rol
pop
xor
dec
enter
jmp
xor
cwtl
cli
sub
daa
jl
pushf
push
lret
mov
int3
sbb
pusha
cmp
dec
jae
xchg
aad
jg
mov
adc
clc
ffree
leave
dec
or
push
lods
or
xchg
mov
add
pop
lea
roll
sub
sbb
jg
cmp
outsl
popa
mov
mov
fldt
rcr
cmp
ja
in
xlat
add
rcrl
jnp
or
mov
lds
adc
ret
sbb
xchg
icebp
cmp
sbb
cmc
mov
cmp
lea
mov
push
or
cmpsl
jp
pop
in
sub
xchg
xchg
repnz
shrb
test
mov
dec
push
mov
jle
push
test
mov
add
pop
and
aas
ficompl
jne
jmp
lods
mov
mov
xchg
push
and
out
mov
mov
in
movsl
sub
out
push
fisttpl
aas
xor
decb
loopne
push
xor
xchg
sub
and
iret
inc
aaa
adc
mov
sbb
jmp
push
out
and
pop
call
or
jb
insb
cmc
xor
push
xor
mov
test
lea
jo
xchg
nop
pusha
sbb
aas
mov
pop
rcrl
cmp
stos
push
stc
adc
mov
pop
mov
sbb
mov
arpl
loope
int
inc
adc
mov
test
lahf
ja
js
movsl
pop
sbb
adc
sub
fldenv
inc
fisubs
repnz
test
pop
outsl
outsb
sbb
gs
je
cwtl
or
lea
jge
mov
mov
or
loop
mov
mul
sbb
movsl
pop
fmul
cmc
subl
xor
cli
lds
stc
fwait
arpl
into
pop
cwtl
and
mov
lahf
push
push
adc
jg
popf
adc
sbb
mov
mov
stos
lods
imul
pop
subl
sbb
leave
adc
pop
jo
push
pop
fnsave
push
mov
mov
icebp
jbe
fnstsw
repz
pop
shll
and
stos
test
adc
sbb
xlat
inc
inc
or
pop
stc
ret
adc
cwtl
dec
fs
cmpsl
push
sub
mov
aad
into
fld
repnz
div
js
lcall
mov
mov
outsl
pop
lret
xor
test
sub
cld
dec
in
pop
insb
xchg
fisttpll
xor
mov
cmp
ret
xor
rcrb
outsb
jl
push
jg
inc
in
pop
imul
pop
mov
call
in
adc
mov
mov
fistps
dec
mov
dec
ret
aas
xchg
or
daa
mov
out
cmpsb
mov
int
repz
in
js
loopne
xlat
add
std
into
push
xor
imull
idiv
xchg
adc
hlt
and
adc
es
rorl
ret
stc
stos
mov
inc
sti
sub
jmp
mov
int3
pop
jg
and
xchg
arpl
out
out
out
jns
mov
add
imul
or
dec
fs
inc
push
mov
push
cwtl
hlt
pop
dec
adc
jge
divb
jo
in
push
inc
pop
dec
cmp
add
ds
jno
or
mov
lock
inc
dec
cld
js
stos
pusha
lods
in
scas
inc
sahf
adc
pop
outsb
pop
in
es
inc
or
mov
add
pop
xor
cvttps2pi
dec
lods
xabort
sub
add
call
add
mov
lcall
popl
flds
sub
iret
into
cltd
xchg
pop
cmc
and
int3
fstl
dec
jmp
dec
or
sub
fmuls
decl
or
dec
dec
cmp
cltd
arpl
xchg
jnp
adc
in
out
mov
pop
std
or
ds
in
cli
mov
jge
loope
into
cmp
imul
pusha
hlt
sti
and
push
sbb
inc
pop
mov
ja
adcb
and
les
mov
aas
loopne
and
lcall
je
fs
mov
push
sub
faddl
fs
fadds
out
cwtl
aas
and
cmp
insl
jp
pop
fstl
mov
cli
push
rorl
pop
dec
and
pop
adc
mov
cld
inc
enter
mov
aas
dec
sub
call
add
test
aaa
cmp
into
mov
jl
cmp
mov
jg
or
sbb
pop
cmp
adc
fwait
call
insb
cmp
sub
lret
lds
test
scas
mov
add
xchg
mov
or
push
test
mov
insl
adc
rcrb
and
mov
stos
inc
sub
js
into
mov
sub
mov
nop
inc
ret
add
xor
sub
push
aam
xchg
cmpsb
insb
jge
lock
test
sarb
fbld
fsub
insl
or
das
jge
sub
test
adc
push
les
xchg
mov
lcall
fs
ljmp
decb
jle
inc
mov
es
sti
mov
js
daa
ds
orl
sub
or
and
clc
adc
xor
and
sbb
cs
inc
ljmp
in
or
fidivs
out
divl
xor
outsl
hlt
mov
lods
inc
add
js
rolb
push
adc
sub
ja
push
pop
cs
and
aas
loope
mov
aad
add
sub
lds
cmc
mov
stc
mov
mov
xor
cwtl
lahf
out
fwait
dec
xchg
xor
or
xchg
sahf
ds
and
dec
or
or
add
and
mov
adc
in
aad
aam
or
xchg
or
lret
test
cld
dec
jecxz
adc
fwait
and
xchg
imull
jl
jnp
xchg
or
jo
idiv
dec
inc
jne
add
jno
adc
inc
int
test
xor
aas
xchg
in
xor
jae
ja
mov
subb
xchg
loop
lods
stos
mov
sbbl
mov
lods
ret
dec
daa
push
push
mov
repnz
add
pop
jae
cmpsl
mov
scas
pop
sahf
test
iret
popa
xchg
sbb
data16
in
fsubrl
aas
in
and
cmp
movsl
pusha
adc
aas
icebp
lcall
outsb
push
mov
ljmp
ds
in
popf
scas
mov
cmp
les
mov
in
add
adc
mov
cmpsb
cmpsb
scas
lea
mov
fucom
cmp
xor
pop
add
sti
mov
pop
insl
jno
scas
push
cmp
js
repz
inc
pop
and
sbb
push
push
push
clc
jne
addr16
bound
insb
xchg
xchg
jle
iret
fistl
dec
and
in
push
mov
cmovne
daa
cltd
cmp
pop
cmc
or
or
cmp
mov
into
lods
es
dec
xchg
inc
cmpsl
loope
sbb
fwait
push
ja
cltd
adc
mov
mov
inc
dec
outsb
rorl
cltd
and
je
jne
adc
pop
hlt
pop
movsb
cli
shll
popa
sub
arpl
adc
mov
mov
mov
mov
inc
mov
shr
pop
sub
pop
loope
mov
pop
js
dec
xor
xchg
rclb
negl
sub
mov
call
mov
popf
test
cmpl
test
inc
jg,pn
ja
push
cltd
jae
ljmp
xor
cltd
and
and
mov
test
jae
xlat
push
ficompl
xchg
xchg
mov
pop
test
cltd
xchg
stos
outsb
sti
mov
add
xchg
xchg
xor
dec
sbb
push
test
data16
mov
ret
pop
adc
mov
dec
ret
mov
jl
lds
xchg
les
testl
pop
repz
sub
jo
xor
dec
movsl
inc
ret
jmp
loop
jo
mov
movb
push
ja
and
roll
popa
sbb
mov
test
addr16
filds
ret
cltd
sti
or
mov
dec
aam
sbb
adc
scas
imul
imul
les
sahf
cwtl
in
pop
nop
shll
into
lods
cld
sbb
in
sbb
pop
rclb
jns
mov
jo
insl
nop
cltd
lret
movsb
jmp
inc
add
pop
xor
pusha
jle
mov
xor
stos
rcr
mov
jle
popa
or
fst
xor
sahf
lods
xor
mov
push
jnp
push
xor
rorl
mov
pop
add
loopne
push
in
out
loop
outsl
and
jmp
sbb
rep
dec
jns
outsl
add
xchg
dec
int3
inc
dec
pushf
idiv
ror
popa
inc
and
icebp
sbbl
leave
pop
sahf
add
jecxz
and
push
lahf
xchg
clc
imul
je
or
or
adc
ret
lret
lahf
pop
xor
mov
or
int
movsb
scas
fs
das
daa
jnp
pop
push
clc
pop
jp
xor
mov
adc
ficompl
cmc
test
pop
adcl
and
das
add
scas
sbb
xchg
ret
filds
cmp
cmpsl
xlat
imul
ja
pop
outsl
mov
push
sbb
mov
mov
adc
jb
xchg
scas
test
mul
sbb
data16
mov
dec
inc
push
sub
insb
add
roll
xor
iret
jo
sbb
out
xchg
adc
and
icebp
cmp
outsb
test
push
shll
xchg
in
hlt
dec
inc
dec
ret
jnp
stos
dec
cmp
sbbl
dec
xchg
push
popf
sbb
testb
mov
pop
dec
pop
xchg
psllw
cmpl
fsubl
in
and
std
add
dec
mov
dec
scas
ret
cmp
dec
outsb
out
loop
daa
mov
dec
xor
pop
aam
test
call
add
or
mov
ljmp
in
xlat
jle
mov
mov
aam
push
or
push
adc
sub
imul
mov
push
add
test
push
hlt
dec
adc
popf
mov
cmpsb
mov
es
lods
jmp
insl
gs
dec
xchg
hlt
insl
mov
out
arpl
jbe
sbb
jns
andl
cmpb
push
sub
pop
xchg
popa
xor
aaa
test
xor
jns
xor
push
fdivrl
into
loopne
dec
in
mov
and
inc
in
mov
cmp
jne
js
xor
cmp
xchg
idivb
jbe
je,pt
test
push
lcall
imul
pop
jp
call
xchg
pop
int
or
outsb
in
loop
or
sbb
in
stos
into
idivb
jne
jo
and
mov
aaa
call
sti
hlt
lcall
pop
sub
adc
les
shrb
inc
fisubrl
jmp
inc
jnp
xor
inc
repz
out
test
sub
scas
dec
sub
inc
xor
inc
mov
add
push
jo
mov
clc
add
xor
jnp
iret
fadd
push
push
sub
mov
mov
movb
out
divl
fsts
push
adc
mov
sbb
or
loop
mov
in
cmp
mov
jl
aas
jle
xchg
sti
scas
movsl
or
js
push
int
pop
dec
iret
push
mov
fnstsw
jle
pop
inc
sub
mov
call
sahf
cmpl
xchg
sbbb
into
out
rcll
outsl
sti
fcmovnu
add
pop
aaa
lock
mov
add
adc
loop
outsl
xchg
outsb
pop
out
aas
test
sbb
add
xlat
jl
xor
imul
xor
cmp
cmp
adc
in
dec
es
jae
mov
mov
fimuls
jns
fnstsw
xchg
and
dec
inc
daa
dec
xor
loopne
mov
lods
fimuls
sbb
call
add
dec
push
stc
push
mov
adc
inc
mov
inc
mov
insl
sub
adc
pop
aam
push
xor
xor
popf
lea
stc
pop
test
xor
push
adc
jbe
jnp
iret
sub
or
mov
sbb
decb
jmp
jae
jl
cmp
push
std
sub
adc
push
fcoml
out
icebp
pushf
in
xchg
xchg
add
xchg
insb
int3
sarb
xor
jae
shll
repnz
pop
xor
popa
ljmp
or
adc
mov
mov
xor
test
cmp
or
test
inc
test
add
sarl
inc
lcall
data16
fbld
sub
jg
mov
clc
xor
das
lcall
loope
mov
out
outsb
aas
mov
rcl
or
adc
ljmp
in
mov
inc
and
int
mov
mov
xchg
cmp
sbb
lods
call
es
or
xor
repnz
sub
mov
sub
and
enter
inc
and
icebp
xchg
add
int
test
cld
test
idivl
xchg
cs
loop
dec
arpl
ljmp
rclb
mov
inc
cltd
js
mov
daa
mov
mov
mov
jnp
je
sub
or
cmp
or
out
and
pop
mov
and
fst
push
xchg
add
dec
pop
lods
push
jno
ja
and
out
push
mov
rorb
cmp
xor
out
fiaddl
and
mov
jne
es
mov
push
xor
cmpl
gs
push
xchg
pop
lods
dec
mov
sbb
adc
clc
xchg
push
xor
jmp
lahf
cli
shrl
cmp
sub
push
pop
lret
imul
pop
push
cld
arpl
cmp
push
js
dec
jo
and
mov
jge
or
xor
push
cmp
cli
cld
loope
shrl
xor
incb
lea
sub
sbb
mov
jae
pop
mov
call
ss
int3
dec
sub
test
popf
xchg
push
daa
mov
mov
stos
daa
mov
mov
sub
les
lods
and
jbe
dec
sbb
popf
popa
into
mov
ljmp
test
push
mov
dec
roll
cmp
adc
aam
push
or
sub
cmp
push
test
mov
cltd
pop
clc
aam
dec
cmpsb
mov
cmp
into
mov
mov
fsubrs
jl
mov
insl
xchg
cmovle
sbb
push
lahf
loopne
popf
insl
push
ja
arpl
push
xchg
lcall
inc
jecxz
xchg
fwait
les
push
in
fwait
jge
cmp
dec
xchg
repz
pop
jo
repnz
inc
cmpsb
jne
xchg
jmp
ret
cs
stos
fdivp
jmp
push
fwait
shlb
mov
sbb
ret
jl
mov
jp
fisubl
or
fs
out
cli
jg
cld
push
int
sub
movsl
lahf
mov
outsl
mov
lcall
mov
jnp
decl
out
bnd
cmp
sub
xor
inc
jb
jmp
into
mov
mov
sub
push
xor
cmp
repz
call
dec
pop
ja
leave
mov
lods
cmpb
mov
lods
test
push
mov
inc
push
shlb
sbb
testb
add
repnz
add
imul
push
push
pop
out
fstsw
andl
lcall
in
lcall
cmp
cli
scas
les
pop
adc
pop
add
sub
rcrb
pop
xchg
inc
mov
fsubl
fimuls
cwtl
jg
adc
popf
mov
jne
mov
mov
jae
mov
xlat
sbb
sbb
cmp
imul
add
sub
int3
test
sub
shr
inc
jae
adc
lret
dec
lock
jno
clc
notb
jns
fsts
xor
sbb
cmp
outsl
xor
lcall
insl
pop
fcmovne
cmpl
test
sub
je
jmp
inc
lret
add
in
into
or
push
push
aam
leave
pop
sub
push
jae
fs
adc
dec
ljmp
leave
das
push
mov
in
lock
mov
cmpl
hlt
pop
cmpsl
rolb
inc
xchg
pop
icebp
push
test
mov
inc
xor
mov
add
push
sbb
aam
ljmp
xchg
fstps
js
push
jecxz
leave
orb
xor
loopne
jnp
add
loop
dec
jnp
push
and
or
std
mov
pop
adc
cwtl
imul
mov
sahf
xor
xor
mul
lock
fidivs
repnz
xchg
mov
xchg
ret
jnp
or
lock
adc
jbe
sahf
sub
jecxz
movsl
xor
fisubrs
xor
in
inc
fldpi
inc
and
xor
xor
int3
dec
inc
fwait
or
test
xchg
inc
mov
add
mov
aaa
add
and
loopne
data16
out
mov
loope
sub
aaa
sbb
inc
sahf
cli
cld
jecxz
cmpsl
or
xorb
xchg
fld1
fwait
dec
out
pop
xchg
ljmp
lock
mov
xor
repnz
xchg
add
adc
xchg
int
cwtl
insl
lock
je
sub
jl
add
movsl
jne
out
push
mov
jae
mov
xor
popf
das
daa
and
pusha
sbb
and
mov
stos
pop
xor
outsl
lods
dec
add
inc
mov
xor
cmp
inc
mov
int3
mov
icebp
gs
mov
lds
das
pushf
push
xor
sub
pop
outsb
ret
lret
cmpsl
sub
mov
dec
push
mov
jmp
xlat
add
mov
orl
aam
push
repnz
push
test
jmp
lahf
mov
mov
scas
fcmovbe
mov
pop
movsb
jmp
xchg
test
daa
sub
push
jo
add
mov
cmp
es
cmp
lret
lds
dec
push
mov
push
mov
pop
iret
adc
push
aaa
add
push
fildl
cmp
stos
mov
subb
jmp
popa
nop
rcrb
loop
mov
shll
lret
inc
cmp
dec
fildl
aam
adcb
lahf
xor
imul
jle
dec
sar
add
in
adc
fmuls
xchg
add
outsl
clc
rcll
adc
push
dec
jno
cld
and
std
push
adc
or
push
push
sti
clc
popa
in
sahf
lods
or
loopne
cmpsl
xor
std
lahf
add
hlt
fisubrs
fwait
or
inc
sbb
int3
adc
cmp
xor
push
loope
insb
fdivp
insb
icebp
mov
xor
loope
lea
add
push
cltd
mov
leave
mov
repnz
jo
cld
push
push
xchg
add
cld
mov
test
cld
ja
int3
mov
cmp
pop
and
insl
stos
cmpsl
adc
cmc
pop
arpl
fistl
pop
push
sahf
cmpb
sarb
add
insb
pop
push
or
fildl
jmp
adc
cld
or
adc
mov
adc
jne
mov
sti
enter
adc
outsb
fwait
jno
inc
cs
mov
repz
inc
lods
adc
xor
and
jg
or
push
fistl
sahf
sbb
pop
fistpll
push
rorl
mov
rorb
fnsave
cmp
ja
inc
lcall
movsl
fcomi
inc
popf
xor
and
outsl
sbb
push
shlb
stos
jle
xchg
push
dec
pop
mov
cmp
dec
sbb
test
cmp
lea
push
mov
cmp
sahf
imul
push
or
mov
pushf
jb
int
mov
out
push
cmp
pop
orl
xchg
aam
mov
sbb
addr16
stc
js
add
loopne
mov
test
mov
movsb
pop
mov
neg
or
xchg
inc
aad
add
stos
out
outsb
scas
mov
push
cld
mov
ret
sub
dec
cmpsl
imul
or
pop
outsl
jb
pusha
mov
stc
mov
cmp
add
mov
and
sahf
mov
sub
mov
sbb
insl
jmp
outsl
xorl
push
or
sbb
mov
mov
dec
xchg
andl
arpl
jno
mov
pop
arpl
sbb
mov
inc
aad
jl
lret
pop
adc
sbb
mov
push
ss
fwait
xchg
sub
jl
jp
iret
repnz
push
bound
cs
adc
pushf
sbb
inc
jb
lret
push
fsts
xor
cmp
mov
mov
dec
mov
rolb
bound
les
out
das
lods
test
ljmp
jae
adc
push
sub
mov
and
cmp
jb
pop
cwtl
lret
pop
mov
and
push
pop
aas
stc
leave
push
insb
imul
mov
lret
add
cmc
into
data16
mov
flds
out
mov
cmp
xchg
call
cmpsl
jg
shl
outsl
inc
lret
mov
push
lock
sub
cld
mov
lcall
sbb
aam
sub
jl
leave
or
ss
sahf
hlt
mov
sub
mov
andb
or
inc
xchg
cwtl
jae
imul
dec
xlat
push
fstpl
or
xchg
adc
pop
inc
out
test
add
das
fs
dec
push
pop
mov
daa
lea
leave
in
ss
cmp
adc
sub
fcompl
shrb
mov
popf
call
ret
nop
xor
dec
jb
mov
cmp
push
inc
das
jp
js
fnstenv
jns
lea
ja
popf
in
lods
mov
xchg
adc
les
xlat
lods
pop
xlat
xchg
dec
test
mov
and
popa
addl
sti
sti
sub
bnd
xchg
mov
dec
cltd
xor
sub
xchg
mov
inc
pop
decb
sub
xor
sti
mov
add
das
cmp
dec
sbb
inc
and
mov
sub
mov
cltd
mov
mov
and
xor
hlt
pop
adc
inc
arpl
cmpsb
fimull
shlb
pop
aad
dec
arpl
cli
inc
adc
xchg
sbb
cmp
push
stos
jns
das
mov
sti
pop
out
fsubs
gs
mull
sbb
jg
wbinvd
xor
ret
testl
pop
fsubrs
inc
and
addr16
ret
jmp
test
add
xchg
nop
xor
xchg
repz
or
adc
out
test
mov
jo
lcall
in
pop
fwait
xchg
lahf
out
ficoms
lods
shrb
loopne
add
out
jl
inc
and
jnp
xchg
xor
inc
push
jmp
pop
ja
scas
sbb
mov
lea
aaa
jle
daa
sarl
je
enter
out
scas
cmp
outsl
ret
push
jno
xor
xor
mov
dec
xor
jmp
and
movsb
pushl
inc
sub
inc
bound
cmc
dec
mov
shl
xchg
mov
or
les
jg
lea
outsl
push
jl
popf
mov
mov
fistpll
sbb
ja
mov
inc
in
xchg
sbb
xor
cmc
das
adc
jp
jb
mov
adc
pop
and
cmp
ret
inc
xlat
push
test
xlat
mov
sbb
xor
cmp
jge
mov
xor
shr
xchg
add
mov
sub
cltd
pop
shll
into
adc
gs
fcompl
jo
and
out
mov
addb
incl
dec
and
jnp
sti
pop
stos
dec
sub
sbb
daa
pusha
mov
mov
or
ss
xlat
ss
arpl
xor
dec
es
lds
dec
arpl
pop
mov
iret
bound
movsl
sti
movl
mov
movsb
push
aas
movsb
cmp
imul
cmp
repz
inc
dec
mov
insl
xor
arpl
adc
aas
and
xlat
mov
add
add
dec
adc
xchg
jnp
and
lock
inc
cmp
sbb
adc
xchg
jb
mov
cli
mov
std
inc
or
je
mov
call
mov
mov
add
pop
mov
lret
jbe
sub
test
mov
lcall
movsl
mov
push
and
mov
shll
insl
xchg
or
jle
mov
jo
movsb
add
orl
loop
in
movsb
outsb
cmpsb
or
outsb
ret
jo
add
and
pop
or
add
inc
add
in
mov
mov
mov
int
sahf
bndstx
arpl
mov
sarb
mov
inc
mov
sbb
push
mov
repz
xchg
outsl
movsl
dec
andl
mov
jle
es
mov
pop
cwtl
jge
rorl
in
sahf
shrb
mov
xor
fs
call
adc
mov
scas
int
test
push
pop
into
push
ljmp
jnp
or
xorb
push
cltd
sub
sahf
loope
neg
cwtl
inc
cltd
push
sub
scas
das
jecxz
stos
jle
das
cld
adc
dec
jno
lret
mov
push
hlt
in
sarl
pop
pop
jl
scas
xchg
sub
xchg
jns
push
push
cmp
insb
lahf
repz
adc
icebp
and
inc
xor
dec
imul
mov
inc
push
inc
cld
xor
add
stos
mov
test
push
cmpsl
iret
scas
inc
cld
outsb
mov
pushf
jge
or
mov
or
imul
jno
or
enter
movsl
jno
lcall
lret
dec
cmp
adc
lcall
push
pop
cmpsb
xchg
rclb
sarl
shl
mov
xchg
sti
add
fs
mov
orl
push
jne
push
xchg
test
push
mov
push
mov
lahf
jnp
out
xor
sbb
repz
xchg
jb
ja
outsl
loop
ret
fisubl
xchg
ret
push
and
cmp
test
sbb
aad
mov
in
or
es
sub
cli
push
dec
jle
push
pusha
jno
mov
mov
inc
xchg
leave
test
std
test
icebp
xchg
dec
add
ffreep
out
xchg
leave
fs
iret
add
outsl
inc
dec
pop
mov
clc
loope
repnz
fistl
mov
mov
mov
dec
push
fnsave
sti
push
mov
test
cli
leave
xchg
lods
mov
xchg
int
jecxz
inc
rcll
ljmp
jmp
xchg
or
xor
mov
incl
push
rolb
test
sahf
cmp
rcr
es
loop
jne
outsl
gs
pop
pop
jge
dec
add
inc
adc
test
and
lahf
push
lret
jg
das
mov
mov
rcll
dec
bound
fwait
jnp
movsl
adc
sbb
cs
fiaddl
mov
cld
inc
stos
jns
movb
adc
call
rorl
mov
stos
push
pop
xchg
sbb
mov
cmc
out
sub
dec
les
lcall
jne
mov
mov
add
dec
cltd
daa
daa
dec
jg
mov
addr16
xchg
adc
push
push
mull
mov
cmpsl
popa
dec
dec
enter
jecxz
shl
mov
cltd
inc
push
leave
je
xchg
and
das
scas
jmp
cmp
rclb
daa
inc
les
or
push
movl
imul
or
jp
mov
and
rorl
pop
sti
and
std
jns
jae
in
addr16
mov
mov
xorb
les
sbb
out
call
xchg
dec
cmpsb
stos
xchg
xchg
xchg
push
inc
rorb
call
inc
iret
sbb
jnp
mov
inc
pop
das
rcrl
xchg
push
xchg
sub
rcrl
stc
mov
xchg
and
scas
movsl
xchg
fnstenv
mov
mov
add
call
leave
scas
fcmovnu
xchg
sbb
testl
inc
jle
outsb
sti
or
cld
sbb
das
cli
xlat
or
xor
adc
hlt
cwtl
outsb
outsb
jnp
or
xchg
cmpsb
divl
ret
lds
mov
cmp
insl
mov
js
push
iret
aas
pop
adc
sbb
sbb
sbb
stc
push
adc
mov
popf
popa
std
cmp
sub
push
fisubl
dec
mov
and
fwait
mov
push
add
rdpmc
rorl
jp
test
pop
jne
pop
sub
or
pop
cmpl
xchg
lock
data16
in
add
inc
jge
ret
push
faddl
xchg
rcrb
pop
adc
add
sarb
sub
or
idivb
push
push
jg
xor
sbb
and
leave
enter
xchg
popf
mov
mov
test
leave
lret
adc
xchg
mov
xchg
fsub
cmc
cltd
je
adc
imul
add
test
cmp
out
sub
lahf
xor
test
je
in
pushf
pop
pop
xchg
popf
add
or
pop
loop
cs
mov
repz
das
std
and
mov
lret
mov
dec
jge
pusha
fidivrl
cvtdq2ps
mov
daa
into
andb
je
fsubl
mov
inc
cmpsb
stos
cmp
and
stos
push
mov
push
xchg
lret
repz
mov
cmpsb
into
cmp
in
xchg
fcoms
add
xor
mov
test
add
jecxz
cltd
iret
and
insb
mov
adc
bound
pop
jns
xor
test
jno
sbb
add
or
int
pop
jp
push
scas
ja
mov
push
stos
divb
mov
out
test
stos
mov
shrl
loop
mov
mov
pop
mov
cmpsl
divb
nop
xor
pusha
outsb
jle
ljmp
das
pop
popf
dec
out
lds
jg,pn
popa
out
mov
in
lods
adc
adc
jnp
iret
mov
jo
sbb
pop
in
fdivrl
cwtl
mov
ljmp
jne
call
push
loop
mov
sbb
sub
movsb
sub
xlat
cs
sbb
sahf
add
jbe
dec
es
mov
arpl
xchg
or
xor
and
or
das
leave
test
or
lret
push
dec
pop
jg
shl
xor
add
fisubl
imul
sub
jl
popa
jbe
ret
lret
cmp
jbe
lock
push
xchg
dec
jo
das
sub
fbstp
aam
inc
dec
dec
dec
or
sbb
xchg
lock
mov
aad
mov
pop
mov
in
mov
or
pop
mov
addl
mov
pop
mov
gs
fbld
and
dec
dec
lds
dec
add
ror
jmp
mov
xchg
mov
mov
loopne
push
xchg
or
push
cmp
push
or
hlt
pop
cwtl
dec
xchg
jmp
cmp
mov
cmp
inc
adc
mov
cli
xchg
cltd
and
push
dec
fbstp
or
sub
leave
cmp
or
mov
out
nop
add
dec
push
and
push
inc
pop
movsb
leave
dec
jp
xchg
xchg
loop
lahf
dec
mov
roll
in
dec
pop
movsl
lahf
cmp
sub
jbe
push
ret
ret
mov
sub
push
lcall
mov
add
push
fcmovb
sarl
ret
pop
xor
and
pop
mov
add
mov
lahf
add
cwtl
enter
rol
hlt
test
pop
xorb
dec
jne
or
push
cmp
cmp
fisttpll
ljmp
adc
xor
repnz
mov
lahf
int3
test
stc
adc
pop
call
stos
mov
sbb
jl
add
stc
out
out
insb
ror
daa
mov
xchg
loope
in
insl
mov
loop
cs
aaa
mov
cmp
loopne
test
and
rclb
cmp
dec
jbe
hlt
addr16
test
popf
les
ss
jecxz
sub
nop
sub
pop
dec
pop
test
movsb
mull
mov
cli
push
xchg
pop
fnsetpm(287
jnp
jns
out
stc
js
out
xchg
sub
sub
push
addr16
mov
js
push
xor
adc
stos
mov
adc
pop
mov
dec
mov
enter
pusha
test
sub
fs
in
mov
mov
pop
push
dec
add
stos
sbb
in
sbb
gs
hlt
into
jge
in
ljmp
inc
jge
fists
pop
pop
js
popf
mov
cwtl
lea
xchg
stos
fisubrs
push
push
cli
mov
addr16
mov
pop
mov
xchg
add
rcl
add
mov
test
mov
sbb
lahf
insb
jecxz
aam
loop
lds
sbb
jb
inc
and
les
test
dec
jbe
pusha
mov
xchg
jmp
mov
mov
push
mov
insb
lea
out
push
mov
add
or
imul
jbe
int3
sbb
mov
stc
pop
mov
and
ds
add
or
mov
xor
mov
loope
xchg
push
idivb
test
subl
lods
jns
pop
sub
int3
icebp
mov
mov
mov
test
outsl
push
sub
je
mov
loope
sbb
jns
or
fucomi
mov
pop
xchg
jle
pop
sbb
ljmp
lea
cmp
lret
or
xor
jb
xchg
sub
out
push
cmpl
cwtl
mov
dec
repnz
icebp
andl
das
icebp
pop
cld
mov
push
test
mov
cmpsb
subb
sub
sub
jecxz
adc
ljmp
push
fstps
stos
jne
cmpsl
or
sbb
mov
mov
and
sub
mov
dec
addr16
fxam
test
lds
pop
or
cwtl
fdivrp
pop
popa
pop
mov
pop
cltd
dec
cmp
sub
pusha
pop
xor
adc
and
and
sbb
rcl
imul
rcr
mov
into
inc
fwait
lret
sub
dec
mov
xchg
jno
sbbb
push
inc
pop
push
pop
pop
addr16
pop
cmc
mov
cli
popf
aaa
push
sti
sbb
push
out
xchg
or
jg
jns
lea
mov
data16
in
arpl
push
ret
test
pop
cmpb
dec
pop
sarl
pop
pop
ficomps
ljmp
sbb
mov
push
hlt
sub
test
pushf
sarb
sub
test
dec
lret
leave
fisttpl
call
das
dec
pop
in
push
and
or
mov
aam
cmpsl
ja
enter
xor
in
cmp
imul
sbb
xchg
dec
into
sub
scas
repz
push
fstpt
aas
out
dec
gs
fcomps
fnstcw
adcb
dec
in
sub
xchg
cmp
iret
nop
in
in
cs
jge
subl
shrl
loope
aad
cmpsb
mov
pushf
pop
mov
cld
fdivs
mov
cmpsb
sub
dec
mov
js
fstpt
pop
push
lods
mov
and
inc
jl
add
pushf
lahf
jae
dec
dec
add
lods
jmp
mov
idivl
or
cmp
sahf
fistpl
adc
aad
sub
fdivs
stos
lret
add
scas
sbb
notb
jb
outsb
enter
adc
pop
mov
jmp
sub
repz
popl
jmp
xchg
inc
mov
add
xchg
fisubs
loope
adc
lcall
inc
push
push
mov
ret
cmc
mov
in
add
add
push
push
movsb
stos
incb
sbb
lock
in
bound
jnp
popf
pop
dec
lds
mov
das
pop
pop
sahf
pop
lret
ret
jg
xor
bound
cmp
lret
mov
add
or
xorl
inc
pop
cld
pushf
pop
jge
lret
js
or
xchg
dec
sub
xlat
addb
mov
addb
xchg
add
sbb
lahf
out
fisubrs
adc
push
cmpsb
xor
jbe
push
and
inc
pop
and
nop
push
ret
adc
sub
dec
push
das
adc
dec
adc
insb
ljmp
ja
gs
in
out
sbb
xchg
xchg
sbb
rclb
pop
sub
mov
into
call
in
pop
push
pop
movsl
adc
or
mov
mov
add
cmp
xor
cmp
sbb
out
inc
je
and
xchg
pop
inc
ror
mov
cltd
faddl
loopne
jne
inc
pop
sbb
cmp
lods
xlat
cwtl
add
mov
cs
mov
mov
aas
xchg
stc
jb
xchg
ret
stos
mov
sti
cltd
mov
dec
jmp
movsb
shl
popf
or
pop
push
aam
andl
sbb
push
mov
jp
scas
pop
and
das
fldl
mov
sub
lahf
push
sub
dec
movsl
leave
dec
adc
lret
call
pop
sub
sti
mov
mov
clc
arpl
xor
mov
push
icebp
cmc
scas
xlat
pushf
dec
repz
jl
sbb
xlat
xchg
cmc
mov
push
cmp
dec
les
and
mov
mov
sub
xor
push
add
cmpsb
movsb
loopne
inc
xor
sub
out
icebp
mov
clc
dec
aaa
mov
adc
mov
lods
mov
xchg
in
pop
mov
inc
cmp
jecxz
adc
leave
pop
fdivs
cmp
and
sbb
scas
addr16
outsl
movsb
jge
sbb
push
and
lods
pop
mov
cmpb
std
or
int
or
repnz
cmp
cmc
imul
dec
mov
loopne
mov
lods
loop
mov
pop
add
addr16
leave
xor
pop
jns
dec
sbb
mov
das
dec
xor
enter
adc
push
shl
in
out
xchg
inc
into
lds
psraw
jnp
data16
pusha
add
rcr
pop
mov
mov
inc
rcr
lods
dec
rol
fmul
mov
cmpsb
sbb
inc
dec
xchg
repz
dec
cmp
test
dec
jne
out
inc
imul
adc
mov
in
mov
or
inc
mov
testb
inc
xchg
sbb
dec
push
cmp
subl
sbb
pop
xor
add
data16
xchg
in
outsb
loop
pop
jg
inc
adc
pusha
cmp
dec
roll
das
movzwl
cmpsb
outsb
fstps
pop
mov
jl
jg
dec
xchg
xchg
jb
ret
dec
js
lret
bound
push
addr16
inc
sub
out
incb
jecxz
cmc
adc
xchg
daa
test
mov
les
mov
cs
mov
jno
sub
sti
repz
xchg
in
sbb
out
dec
jae
popf
sbb
mov
sbb
cmp
test
out
mov
inc
je
bound
xchg
dec
mov
movsl
fstpt
sub
xchg
adc
sbb
mov
xchg
jb
xor
aaa
fisttpll
cmp
mov
rcrl
mov
add
push
dec
shrl
cmp
and
push
or
sbb
or
adc
add
sbb
add
test
inc
cwtl
insb
insb
xchg
or
shll
sbb
mov
sbb
sbbl
pushf
jp
ret
jg
ss
mov
lcall
pop
pop
pop
imul
mov
pop
mov
cmp
mov
lret
pop
fistpl
mov
sbbb
ret
repnz
cpuid
jnp
jle
sti
sbb
inc
subb
dec
fcoms
xor
inc
shrl
enter
iret
dec
jecxz
jmp
sahf
dec
sbb
push
in
inc
adc
lcall
mov
push
sarl
and
dec
or
cli
adc
jnp
enter
xchg
inc
and
fistpll
mov
cmpsl
in
stos
lods
mov
cmc
xchg
add
xchg
cmp
aaa
rorb
pop
addr16
push
push
insl
pop
and
xlat
outsb
xchg
or
int3
sub
jmp
decb
dec
or
ret
gs
fwait
add
test
ja
inc
imul
out
lods
mov
and
mov
fadd
stos
mov
push
mov
add
jge
neg
iret
cmp
pop
ret
dec
add
push
ljmp
push
leave
mov
and
mov
inc
test
and
into
int3
mov
mov
or
add
fiaddl
lea
inc
pop
insl
testb
xchg
ffreep
xorb
bound
push
mov
ret
mov
imul
dec
ret
fisttps
popa
add
mov
in
cmp
lds
ret
or
out
sub
aam
cwtl
and
sub
rcll
xor
cwtl
inc
filds
push
sub
ret
jp
push
outsl
xchg
pop
xlat
repnz
cmpsb
or
scas
iret
dec
cmp
test
mov
or
daa
mov
pop
loopne
sbb
lea
subb
in
jge
mov
pop
mov
outsb
mov
std
shr
and
pop
adc
or
aas
dec
mov
cwtl
cmp
in
fiaddl
xchg
push
ret
shr
fisttpl
mov
clc
out
test
mov
cmpsl
cltd
mov
stos
mov
popa
and
inc
and
test
pushf
add
cmovp
jb
ljmp
mov
sbb
push
popf
rcll
push
in
pop
sbb
mov
cmpb
xor
insl
nop
inc
sti
movsb
cmp
mov
popa
push
ret
sbb
sub
jmp
sbb
pop
pop
iret
xor
ret
sub
dec
inc
outsb
in
xor
inc
mov
fsubp
and
lea
imul
test
push
pop
fistpll
dec
imull
or
sarb
dec
subb
fwait
push
clc
movsb
movsl
shl
pop
out
adc
push
xchg
sbb
mov
and
sahf
push
gs
lods
cs
out
test
add
xchg
popa
insl
mov
mov
pop
test
cmp
in
mov
enter
add
push
or
add
adc
clc
addb
call
add
xchg
push
ret
mov
insb
sbb
cmp
testl
test
xor
jbe
jnp
call
pop
data16
inc
dec
rorb
adc
push
movsb
popa
outsl
arpl
lods
add
cltd
xchg
inc
lods
scas
aad
or
and
loop
sbb
push
inc
pusha
das
test
push
loopne
pop
test
hlt
cmp
out
xchg
pop
or
mov
xor
fisubrs
dec
jmp
pop
jmp
divb
jl
cmp
pop
push
sbb
sub
push
and
or
push
xchg
popa
rcll
pop
add
jbe
or
stos
sub
lahf
test
imul
push
aaa
mov
dec
movb
fcomi
insb
pop
xor
pushf
mov
pop
stos
aas
stc
clc
clc
dec
cmp
mov
xchg
sbb
sbb
fs
shrb
push
push
lock
add
lea
inc
scas
push
insl
lahf
xchg
inc
andps
lret
loopne
pop
sbb
fldt
es
gs
mov
daa
fisttps
jecxz
or
and
in
outsl
orl
insb
cltd
adc
outsb
lret
or
or
mov
and
cwtl
stos
or
loop
xor
mov
enterw
cld
mov
xchg
lahf
xor
iret
mov
lds
int
mov
mov
inc
inc
and
fmulp
sub
sub
mov
dec
jl
orb
and
andl
xchg
pop
arpl
push
cltd
push
xchg
pop
fistl
xchg
cli
jle
roll
inc
add
shll
outsl
push
dec
ja
imul
ljmp
ja
testb
cmpb
fistl
push
test
movsl
push
int3
xchg
test
inc
dec
daa
repnz
xchg
jmp
xor
mov
mov
stc
jo
fwait
ljmp
jno
movsl
ffree
cmp
scas
cmc
xor
add
mov
jecxz
sbb
ja,pt
ror
mov
shlb
xchg
popf
icebp
push
daa
or
sbbb
xor
and
inc
or
add
ljmp
lret
jnp
in
ss
cmp
imul
lret
cwtl
fcoms
mov
mov
jb
mov
mov
popa
mov
addr16
add
cmp
test
sbb
cltd
clc
and
repz
mov
in
aam
push
sti
xor
in
push
in
shlb
and
or
stos
mov
cmpsl
adc
shrl
push
iret
push
xchg
jle
add
iret
adc
fcomip
les
push
or
mov
jne
adc
mov
cli
push
jae
test
xchg
andl
shl
mov
lretw
enter
mov
push
test
inc
dec
sub
imul
dec
inc
and
sbb
or
mov
sub
in
divb
arpl
sbb
int3
mov
arpl
cmp
loop
dec
enter
xchg
and
mov
loope
out
xchg
mov
adc
mov
test
stc
shl
push
add
icebp
sahf
cs
pop
sarl
ss
xlat
push
ret
xchg
sub
xchg
jno
jmp
out
pop
mov
daa
sub
inc
data16
push
inc
mov
shl
xchg
jmp
mov
push
fadd
cmp
xor
pop
push
cli
outsl
outsb
mov
test
insb
test
mov
dec
lret
scas
mov
push
mov
jp
push
sahf
je
int3
movsb
out
popf
cmpsl
pop
mov
sub
inc
cli
or
je
or
xor
je
xor
jo
lods
sub
pop
jecxz
ret
cwtl
fdivl
popa
adc
mov
push
pop
out
dec
xchg
stc
mov
xor
clc
sahf
or
or
hlt
add
and
mov
fwait
sar
stc
sub
dec
push
ret
dec
and
shll
sarb
xor
and
inc
lds
pop
ja
faddl
clc
dec
jmp
sub
shll
inc
sub
imul
push
sbb
lcall
xchg
into
mov
arpl
in
shl
aas
cltd
mov
sbb
stos
fistl
insb
xor
xchg
dec
sbb
xchg
inc
fstpl
in
jbe
nop
dec
dec
and
jnp
or
into
loope
or
adc
dec
push
mov
inc
jno
and
gs
aaa
aaa
inc
adc
test
xchg
sub
jbe
fstpl
xchg
push
mov
fs
inc
ja
out
sbb
mov
dec
push
xchg
shll
xchg
or
sbbb
or
loope
add
sub
inc
xor
lea
adc
sbb
hlt
mov
test
pop
loope
pmaxsw
mov
popf
ljmp
rol
cmpsl
xor
ss
cmp
ljmp
insb
cld
push
jo
pop
xchg
and
xor
jl
cmp
cwtl
test
mov
out
mov
and
dec
shl
or
adc
jns
outsl
outsl
rolb
jg
adc
xlat
mov
xchg
mov
iret
imul
addb
js
push
dec
and
in
add
mov
test
pop
jne
add
nop
cmc
or
add
test
push
fldcw
xchg
push
dec
add
test
notb
mov
addl
mov
rcrl
int3
or
lcall
les
cmp
hlt
les
push
cltd
adc
push
push
call
iret
int3
cmp
add
pusha
daa
sbb
jl
cmpsb
test
faddl
in
mov
divb
stc
or
mov
dec
stos
daa
enter
pop
jb
testb
nop
in
mov
popf
aad
pop
and
jle
mov
pop
and
clc
cld
and
xor
and
pop
call
decl
mov
ljmp
mov
mov
ljmp
mov
fistps
adc
int
sahf
lea
std
out
rolb
add
ss
stos
sti
stc
outsb
ja
add
lahf
jo
popf
lahf
push
popf
pop
sub
mov
adc
or
pushw
lret
rorb
mov
mov
dec
sbbb
mov
out
ja
push
adc
sub
repz
dec
sub
jmp
sbb
dec
push
or
jno
sub
jbe
repz
sub
bound
jl
sti
clc
or
add
cmp
pusha
les
mov
xor
nop
or
loop
sbb
or
xchg
inc
xor
push
insb
dec
xor
cmp
or
jbe
je
push
test
pop
jns
cmc
adc
mov
dec
pop
clc
push
xchg
cmc
stos
stos
or
insb
das
pop
subb
lret
movsl
hlt
cmc
dec
hlt
stos
shrb
int
push
pop
push
std
movl
movsb
in
aam
mov
js
mov
stos
stos
mov
sub
and
jle
gs
jae
rol
jo
sbb
or
pop
and
lods
inc
cmp
add
inc
sbb
mov
adc
repz
fnstcw
incl
sbb
add
mov
stos
or
push
shlb
pop
xchg
push
int
jbe
iret
in
add
mov
divl
popf
mov
cmp
test
test
sub
bound
shl
pop
sbb
mov
mov
call
ret
mov
das
mov
loop
inc
xor
addb
add
repnz
int3
lods
push
and
mov
ja
xchg
push
aaa
inc
sbb
movsb
popa
push
call
push
cld
adc
out
cmp
fldcw
mov
and
xor
stc
into
lea
jge
dec
popa
jb
repnz
lds
inc
sarb
dec
xlat
rcll
mov
push
dec
xchg
jne
pop
xor
push
jo
push
ret
adc
mov
lcall
iret
aas
jge
push
dec
push
insl
lcall
mov
mov
mov
mov
shll
add
leave
test
cmp
mov
cs
sbb
std
inc
sbb
gs
push
cli
outsb
leave
jae
ja
cmpsb
jg
or
dec
in
dec
jge
sahf
negb
inc
aad
stos
arpl
mull
ret
in
cmpsb
es
inc
std
push
jnp
out
in
cmp
cs
push
shrl
add
shrb
test
pusha
pop
jle
ret
sarb
inc
mov
les
outsl
pusha
ljmp
sub
fsubs
jae
jnp
jo
pop
inc
adc
pop
xchg
int3
mov
mov
rcl
jae
jle
xchg
fdivrs
daa
icebp
leave
sub
mov
in
push
pop
mov
xchg
sub
roll
inc
push
add
subl
mov
jge
sub
andl
outsl
xchg
inc
or
je
and
sti
push
or
mov
fs
lahf
cmp
test
inc
lahf
adc
or
in
sub
push
mov
mov
invd
xchg
iret
andb
pop
bnd
out
mov
aam
xchg
imul
fdiv
pushf
dec
jnp
jp
cmp
push
pop
dec
xchg
xchg
or
outsl
nop
rorl
jo,pn
scas
add
sbb
push
adc
fsts
mov
pcmpgtd
mov
lods
xlat
add
repnz
je
cld
sbb
test
pushf
adc
jg
cmpsl
push
or
mov
divl
cmp
xor
push
das
sub
lea
sub
mov
scas
mov
hlt
dec
mov
repz
adc
es
jnp
imul
dec
sbb
fs
inc
pop
xchg
lcall
and
jmp
or
sbb
fdivrl
add
xlat
ljmp
data16
fildll
xchg
int
or
sub
mov
mov
dec
or
mov
jne
mov
xchg
add
stos
in
mov
fstpl
or
jmp
jmp
test
out
shlb
test
add
imul
addr16
push
movsl
xorb
pop
dec
sahf
iret
pop
and
std
pop
push
shrl
jmp
jge
fildl
push
pushf
or
test
sub
push
loope
cmpsb
test
and
mov
mov
cmp
push
sbb
adc
shll
sbb
sbb
xchg
outsb
pop
in
sbb
mov
outsl
imul
bswap
jp
popf
lea
sbb
pop
stos
xor
rcll
imul
insl
mov
sbbb
fstps
int
dec
mov
testl
pop
rcr
jne
in
mov
test
outsb
mov
scas
sub
rcr
cmpsb
jle
test
stos
add
jno
bound
pop
mov
test
and
aas
stos
or
es
and
mov
and
push
iret
jb
push
ljmp
pop
sahf
and
inc
push
cmp
adc
push
shll
jo
pop
test
adc
out
xor
daa
outsb
mov
sub
das
mov
or
lcall
jp
loop
and
je
and
ss
xchg
imul
xor
mov
js
push
movsb
shl
scas
lret
sahf
fisttpll
fcoms
js
mov
jl
jg
mov
and
sbb
mov
xchg
test
scas
sti
sahf
push
xor
insb
out
ret
outsl
inc
fldt
pop
es
fsub
inc
inc
fstpl
and
sahf
xor
mov
testb
dec
das
cld
stc
push
loop
mov
inc
sbb
add
mov
xor
lods
cmpsb
scas
movsb
aaa
push
stos
roll
mov
imul
call
clc
pop
mov
xor
ja
mov
jne
jo
es
in
bound
pop
out
jns
loopne
movsb
pop
inc
sub
lods
or
push
repnz
xlat
mulb
push
jmp
in
inc
push
add
mov
in
addb
jnp
pop
jg
mov
lahf
sbb
stos
pop
ja
jmp
sub
cmp
xchg
incl
test
into
jae
push
or
inc
scas
das
dec
rol
sbb
or
cs
xor
pop
jb
xlat
ljmp
cmp
ja
xor
pop
mov
lcall
xchg
enter
and
data16
shl
sub
bound
test
mov
ret
jne
mov
into
stos
adc
xor
lea
fldt
sahf
push
mov
or
pop
or
jp
sahf
aaa
cmp
and
lcall
jl
pop
je
cs
xor
sbb
sub
mov
xchg
xchg
or
dec
mov
data16
loopne
xor
insl
mov
repnz
lcall
scas
mov
pop
sbb
dec
mov
adcb
dec
sub
xchg
aam
push
and
sub
xchg
push
pusha
popa
dec
out
es
sti
xchg
sti
pop
inc
push
sbb
subb
loope
rclb
leave
fimuls
and
das
jae
mov
add
push
hlt
push
mov
mov
or
mov
stos
jae
pop
js
pop
pusha
sbb
jecxz
ret
or
push
jno
dec
and
lds
pop
not
test
sub
loop
scas
mov
dec
dec
pop
outsl
bound
mov
push
out
jge
scas
lods
or
out
cli
push
mov
imull
or
xor
fimull
shrb
test
push
jbe
ds
lcall
xlat
mov
dec
add
jno
cmp
cli
sti
mov
add
add
mov
repnz
inc
add
mov
jge
cmpsl
mov
pop
sbb
std
and
popf
mov
es
insl
hlt
sbb
insl
outsb
popa
out
cmp
adc
add
stc
mov
sub
hlt
dec
lret
mov
testb
and
xor
std
adc
jnp
repnz
mov
inc
cmpb
and
sub
imul
inc
ret
loop
cld
shrl
add
lods
lds
mov
or
ds
out
pushf
xlat
sub
leave
push
popf
out
sub
mov
and
inc
jne
inc
sbb
jle
add
mov
inc
or
cmp
xchg
push
cs
push
mov
lea
bound
js
std
push
xchg
sub
pop
cwtl
cmp
ret
hlt
mov
sbb
jecxz
test
push
push
in
adc
mov
pop
pop
mov
fisubrl
out
add
roll
dec
rol
jle
cmp
push
mov
mov
push
aam
or
repz
and
shrl
fdivs
push
add
scas
xor
push
xchg
addb
gs
jnp
cmp
dec
mov
inc
rcll
ljmp
sbb
cmp
call
adc
mov
mov
imul
pop
cmp
cmpb
mov
scas
lahf
div
fwait
jecxz
call
call
xor
bound
mov
jo
cmp
test
jmp
dec
inc
insl
sub
ljmp
push
pop
pop
ret
nop
aad
pop
pop
leave
rclb
iret
push
mov
cld
lds
and
test
out
push
cmpsb
xchg
dec
leave
lds
lods
dec
dec
cld
pop
repnz
int3
inc
xor
inc
clc
fisubrs
cmpsb
lock
xor
or
arpl
dec
lea
mov
mov
mov
sbb
xor
jg
xor
lock
cmpsl
pop
mov
aaa
xlat
add
cmp
dec
sbb
fs
stos
xchg
aam
and
dec
xlat
scas
or
out
in
mov
test
mov
ret
test
pop
mov
pop
inc
sahf
rcll
push
iret
jae
push
les
xchg
adc
xchg
rclb
cmpsl
loopne
push
xor
out
dec
jle
jne
clc
jge
push
insb
push
sbb
loope
jl
mov
xchg
and
push
inc
jae
adc
xor
rorl
fcom
mov
es
divb
hlt
loop
pop
fnstcw
jp
fcmovnu
pop
pop
adc
daa
sub
mov
add
dec
sbb
scas
fwait
jp
jmp
cmp
int
inc
jbe
mov
xchg
pop
push
xchg
jns
add
cmpl
es
vmovmskps
jle
aaa
lret
and
inc
jns
xchg
jle
pop
es
icebp
repnz
test
lods
mov
inc
enter
jge
pop
repz
mov
arpl
push
es
out
sub
out
mov
mov
sbb
sbb
xor
mov
ljmp
sahf
divb
mov
fs
out
or
hlt
cmp
sub
es
cmp
push
sti
inc
xor
loope
fistpl
cmp
fwait
popf
adc
dec
movsb
xchg
dec
ljmp
dec
lods
cmp
insl
fstpl
adc
repnz
mov
xor
iret
int3
loopne
loope
mov
ret
ljmp
jo
push
rcll
mov
fsubrl
ss
adc
iret
mov
push
cmp
or
aaa
pop
dec
fiadds
popf
inc
cmc
aaa
mov
pop
test
push
adc
add
call
int3
cmp
jno
aas
pop
test
adc
push
shlb
scas
push
pusha
sub
xor
add
mov
mov
jecxz
xchg
fildll
sbb
rorb
imul
dec
in
push
fistpl
fbld
mov
outsb
xor
cmp
arpl
mov
arpl
stos
mov
out
stc
dec
adc
dec
std
clc
mov
mov
sub
mov
dec
inc
mov
mov
mov
sbbl
imul
icebp
js
lods
ja
je
mov
ficoml
sub
andb
mov
inc
adc
jg
insl
pop
fsubrl
xor
in
leave
cmpsl
add
lcall
mov
lcall
leave
shll
addr16
jns
xor
outsb
push
cmp
add
sbb
cmp
andb
insl
pop
xor
jp
pop
mov
xor
or
or
sub
adc
jg
pop
xchg
or
push
ja
aad
cltd
ss
addr16
stos
push
xor
jge
mov
dec
adc
xor
jo
lods
icebp
jmp
inc
mov
xor
jg
das
shrl
into
or
dec
mov
sub
cmp
xlat
iret
mov
push
dec
push
push
aad
push
push
mov
cmp
sbb
sbb
mov
xchg
orb
mov
cmc
popa
imulb
mov
enter
les
jnp
sarb
popf
sbb
xchg
inc
inc
out
mov
xlat
sti
jbe
int
pop
gs
shlb
pop
cmp
ja
mov
movsb
fld
xchg
stos
push
add
clc
cmp
imul
mov
mov
fldt
and
idivb
cmp
mov
data16
mov
or
dec
cmpsl
cwtl
xor
jnp
cmp
push
out
add
mov
subb
out
mov
je
sbb
pop
int
cmp
int
push
lret
fists
sub
xchg
and
inc
lods
xor
and
sub
xor
push
in
test
jo
sbb
adc
jb
shr
out
mov
enter
divb
sarl
in
loopne
adc
test
inc
movsl
or
sub
cmp
scas
xchg
dec
pop
fiadds
out
xor
or
aas
mov
pop
mov
aaa
popf
stc
adc
or
das
fisubl
lods
imul
push
mov
mov
and
cmp
cmpsb
xlat
add
mov
pop
push
std
mov
subl
push
pop
test
pop
mov
pusha
cmp
xchg
loopne
repnz
je
fsubrl
aad
arpl
push
lods
out
inc
or
in
xor
pop
and
pop
shrb
in
ljmp
in
mov
xor
hlt
fimull
jbe
xchg
mov
enter
insb
mov
enter
mov
pusha
test
ret
adc
cmp
mov
xchg
xchg
insb
icebp
add
pop
sbb
outsl
mov
dec
inc
pusha
jp
mov
and
ja
jg
test
repz
ja
mov
mov
in
or
jp
into
adc
mov
int3
addr16
or
mov
cmp
in
iret
jb
lret
sub
std
push
shl
repnz
sbb
fldenv
enter
adc
xchg
lods
sbb
mov
stos
xchg
xchg
movsl
mov
fiaddl
outsl
push
lock
or
fdivr
mov
test
dec
sbb
popa
sbb
imul
mov
inc
scas
roll
adc
pop
ljmp
mov
or
test
icebp
mov
fstp
stos
fisubl
insl
ss
adc
fnstcw
adcl
add
popw
mov
mov
cmp
push
loopne
pop
inc
or
add
mov
push
icebp
data16
loopne
cmp
xchg
cmc
push
clc
rcll
scas
and
fnstcw
outsl
push
cmp
sub
outsb
cmp
jg
ja
ljmp
mov
scas
xor
lds
or
mov
repz
fs
lret
fisubl
mov
imul
sti
mov
gs
or
adcl
shll
mov
push
in
mov
cmp
jo
cmp
pop
jns
in
jns
jo
fdiv
xorb
dec
fistl
enter
bound
popa
xor
mov
lods
ret
fisubs
cmp
subb
mov
loop
dec
xchg
push
adc
inc
push
stos
xchg
xchg
mov
cmp
daa
adc
push
dec
imul
jae
shlb
mov
and
dec
xchg
stos
xchg
inc
dec
push
shr
cwtl
mov
ljmp
sub
ret
jae
icebp
jns
xlat
mov
mov
aad
in
xchg
dec
insl
imul
ret
out
sbb
push
int
pop
xchg
pop
orb
imulb
scas
orl
rcll
dec
mov
outsl
fnstcw
cmp
mull
filds
fldcw
or
ret
mov
loope
sub
lret
jae
mov
pop
add
ds
mov
cs
cmp
inc
cwtl
sahf
into
ds
je
nop
lcall
lods
inc
arpl
xor
out
push
sub
sti
inc
push
or
mov
xchg
pushf
push
clc
outsb
cmpsl
arpl
loop
cmp
mov
ret
sub
gs
push
aad
lahf
fidivs
jns
ljmp
shl
and
int
insl
pop
jmp
dec
icebp
aad
adc
pop
popf
mov
xchg
aaa
mov
rcl
add
pop
push
add
jp
fsubr
lds
fnstsw
pusha
adc
loope
lock
mov
dec
iret
xchg
mov
jmp
mov
mov
in
sub
pop
and
xor
call
or
cmp
cmp
cmp
movq
sarl
adc
stc
push
and
in
pop
and
out
cmpsl
push
pop
and
xor
aad
jb
xchg
and
bound
pop
jecxz
cmp
pop
out
lahf
jns
les
loop
pop
push
or
lods
jne
adc
out
xchg
mov
scas
data16
xchg
sub
clc
and
fnstsw
or
test
aam
or
loop
pop
cmp
outsl
cmp
cmpsb
lahf
sbb
out
pop
mov
add
pushf
jecxz
jge
dec
jle
imul
shrl
cs
mov
mov
cwtl
sbb
fwait
or
pushf
enter
aad
int3
xchg
sbb
cwtl
imull
mov
das
or
in
push
jne
cmpxchg
fstpl
mov
sbb
les
fwait
sbb
loope
or
lcall
xor
push
push
add
es
push
aas
shll
mov
cmp
sti
dec
cld
out
push
test
mov
cmp
xor
and
daa
notb
mov
push
xor
dec
inc
sbb
xchg
leave
cmp
loope
xchg
xor
or
adc
pushf
jp
mov
cli
mov
add
xchg
add
repnz
lahf
jge
test
or
add
add
stos
movsl
int3
mov
and
xlat
mov
lods
mov
jne
cmp
insb
push
insl
pop
ja
mov
add
jp
push
movsl
xlat
jp
cmpsl
pop
das
cli
xchg
pusha
mov
adc
in
popa
cmpsl
test
pop
mov
daa
push
clc
mov
pop
in
icebp
leave
je
out
cmp
jbe
scas
lods
enter
add
aas
aaa
mov
repnz
push
adcl
lds
outsb
jbe
push
add
outsl
mov
movsb
insb
into
test
mov
int3
stos
lcall
daa
mov
insb
mov
dec
inc
sarb
das
dec
enter
jb
pop
cmp
mov
sbb
mov
jb
in
movsl
js
xor
sahf
pop
xchg
jae
pop
outsb
shr
adc
out
shll
fwait
xchg
mov
iret
mov
xor
mov
idivb
mov
cmp
insb
inc
add
sub
mov
xchg
cmpsb
lock
jl
add
push
dec
cs
in
jg
pusha
push
sbb
xor
or
repnz
jno
xchg
jns
jb
insl
cmp
aaa
jle
mov
mov
shrb
shll
std
xchg
mov
push
pop
mov
fsubrl
dec
je
popf
in
test
xor
cmp
pop
sbb
push
push
push
sbb
sbb
or
adc
mov
push
xchg
mov
dec
xchg
inc
mov
adc
testb
jmp
imul
xchg
test
mov
cmpsb
and
jno,pt
adc
xor
test
arpl
lea
add
adc
sbb
mov
and
imul
shlb
inc
lods
jno
mov
popa
scas
and
lcall
pop
add
testb
lcall
sahf
mov
push
bound
jmp
lods
push
shll
repz
jle
or
cmp
cwtl
dec
aas
loopne
pushf
imul
jle
sbb
inc
rorb
and
inc
hlt
jge
stos
xchg
push
push
mov
daa
js
pushf
or
push
mov
cmpsb
cmpsb
xor
xchg
or
cltd
lcall
ljmp
pop
xor
mov
int3
cmp
es
js
fmulp
mov
js
enter
xor
repz
ja
pop
sbb
das
movl
mov
leave
fisubl
out
fstps
xchg
rorb
push
call
push
or
stc
fdivrs
cmpsb
out
insl
push
pop
xchg
sbb
mov
pop
outsb
outsb
sub
mov
sub
mov
jg
add
and
roll
outsb
stos
mov
testl
nop
pop
xchg
ficoml
pop
sbb
sub
shl
jge
push
mov
roll
xor
lret
push
xlat
and
les
cmp
fisubs
inc
stc
in
cltd
adc
imul
xchg
push
push
insb
lret
push
jp
dec
std
into
xor
jb
out
adc
jg
mov
js
or
inc
js
jnp
jle
fistps
push
cmpsl
test
mov
jecxz
test
cmp
inc
ds
js
arpl
sub
xchg
jle
call
cmp
ss
mov
adc
cmc
imul
jne
jnp
pop
dec
add
mov
jnp
popa
and
shl
adc
mov
les
roll
inc
jg
stc
ret
out
aaa
adc
mov
fwait
xlat
cmp
cmc
test
ret
dec
stos
and
dec
daa
mov
and
addr16
addr16
xor
mov
pusha
add
mov
sbb
xor
mov
mov
mov
bound
loopne
jae
push
lret
loopne
cmp
jecxz
inc
div
or
ja
leave
cmp
pushf
mov
mov
mov
xor
shlb
stos
leave
pop
out
sub
adc
icebp
stos
insl
leave
push
rcrl
sbb
es
pop
and
sbb
arpl
mov
test
jmpw
dec
ret
jbe
dec
cmp
fs
fldl
inc
shll
jae
jecxz
push
bound
outsb
ljmp
int
and
jne
and
int
dec
sahf
inc
xor
xor
mov
test
out
sbb
popf
stos
aam
xchg
add
outsb
mov
arpl
push
jg
push
and
lret
out
sbb
idivl
lret
cmc
int3
mov
pushf
mov
cmpsb
imul
movsb
inc
mov
jp,pt
adc
rorl
loopne
sub
mov
sar
aad
sahf
outsl
ja
aaa
mov
repnz
call
push
mov
dec
mov
fisttps
leave
xor
insl
xlat
scas
je
push
sarl
movb
in
push
jns
inc
adc
test
xor
mov
sub
sbb
in
mov
popa
in
mov
imul
dec
pop
aad
sbb
fbld
shl
sbb
aaa
xor
ret
mov
mov
mov
cmp
inc
push
inc
jno
in
mov
scas
dec
and
inc
pop
inc
xchg
push
mov
test
or
rcrb
adc
xchg
sub
sbb
mul
es
pop
push
dec
jo
and
daa
sub
and
cmp
jmp
roll
aas
dec
idiv
ret
sub
push
dec
inc
das
dec
jge
push
or
mov
mov
mov
in
repz
mov
jl
inc
jne
loop
mov
cmp
sbb
jp
test
jle
jnp
xor
jnp
ja
cmp
aas
pop
aad
faddl
movsb
int3
stos
xchg
inc
and
xchg
adc
add
add
dec
into
jmp
aaa
jecxz
jno
leave
adc
mov
sub
mov
fdivp
mov
jp
push
das
mov
loope
test
cld
cmpsb
ljmp
push
mov
fisttpl
inc
movsl
ret
mov
xchg
xchg
out
xor
sub
or
das
pop
lods
out
sub
mov
mov
add
lods
call
mov
push
addr16
inc
outsl
sub
fcmovnb
mov
mov
sub
stos
jnp
xchg
mov
fcmovbe
mov
dec
subl
mov
jb
pop
pop
gs
lret
xor
or
inc
mov
imul
sti
cmc
into
iret
and
mov
orl
cmp
dec
loope
cltd
mov
loope
dec
inc
cmpsl
and
les
leave
in
movsb
test
out
aam
shl
sub
cmp
out
mov
inc
push
out
popa
pop
mov
in
aam
mov
data16
nop
loop
out
sahf
mov
dec
fs
sbb
push
adc
mov
movsb
xor
bound
outsl
mov
scas
mov
fimull
push
std
push
cmp
out
pop
int3
popfw
sub
cmp
aaa
xchg
push
push
jl
in
jle
mov
ja
sahf
sub
mov
or
out
test
cltd
push
sti
enter
jp
ljmp
aas
sbbb
inc
sub
mov
push
or
inc
andl
mov
push
inc
xor
mov
ss
mov
fldt
sub
decb
push
gs
jg
nop
loope
push
ficompl
sbb
dec
out
pop
shrl
jmp
xor
push
mov
mov
jecxz
pop
sarl
lret
fucom
push
lret
xchg
ret
test
or
ljmp
rorb
xor
in
popa
mov
ret
rol
cld
sub
mov
daa
adc
xor
jno
dec
icebp
jle
pop
mov
mov
cmovle
sub
xor
and
lret
and
push
pop
and
push
arpl
cs
es
aam
stc
pop
sub
leave
imul
dec
push
fs
pop
mov
and
cltd
xchg
pop
inc
movsb
pop
and
fldenv
ljmp
fs
fdivp
mov
aas
cmp
pop
xchg
jo
cwtl
testl
loopne
mov
push
mov
mov
popf
out
cltd
push
add
inc
cli
popa
dec
ret
ljmp
pop
out
scas
lock
xchg
mov
dec
hlt
add
mov
mov
and
mov
das
xchg
aam
lcall
adc
jnp
xor
or
imul
iret
inc
jecxz
jae
shl
jbe
add
les
dec
icebp
pop
test
jmp
or
mov
loopne
xor
mov
cld
in
in
inc
push
rcll
stc
ja
push
divb
xchg
mov
xchg
out
data16
pop
adc
xchg
jne
xor
cld
movsl
mov
hlt
sub
jbe
push
mov
xor
daa
in
in
ljmp
movsb
pop
lahf
aas
insb
xchg
call
jb
mov
jne
cli
js
pop
dec
xchg
shlb
int
and
pop
pop
das
cmp
les
aaa
inc
mov
adc
cltd
call
testb
fcmovnb
mov
lcall
icebp
lcall
out
nop
insl
inc
jp
popf
lret
jno
repnz
pop
mov
cmp
insb
std
push
test
or
in
jp
mov
mov
sub
test
dec
cmc
movl
mov
popa
lcall
rorb
sub
mov
fmulp
aam
inc
jg
sbb
mov
cmpsl
dec
mov
popf
lahf
repz
push
out
lahf
inc
fstpt
jecxz
xchg
repz
xchg
xor
movsb
sbb
loopne
adc
repnz
or
insb
inc
dec
add
iret
aad
out
mov
xor
int3
pushf
scas
imul
fbstp
ljmp
clc
push
pusha
and
scas
scas
loop
arpl
inc
add
js
add
jp
push
mov
imul
sub
iret
dec
mov
sar
stos
push
dec
dec
ja
lcall
std
jns
cmp
mov
cmp
or
call
test
movl
push
mov
dec
gs
cmp
or
mov
cwtl
inc
inc
push
jmp
mov
xor
or
nop
bound
stc
xchg
out
dec
mov
icebp
xor
pop
pop
into
int3
lea
js
pop
fs
pop
cmpb
mov
das
cmp
inc
cs
or
mov
test
insl
enter
rolb
clc
push
not
sub
in
mov
jle
hlt
adc
add
sbb
lea
lret
or
mov
iret
adc
sbb
cmp
mov
lds
ret
imul
ret
xchg
bound
stos
sub
xchg
pop
cmp
mov
shll
clc
loop
nop
sbb
cmp
lods
sarl
sub
call
mov
cld
xchg
ret
sbb
insl
dec
int
lcall
mov
xchg
xchg
mov
or
jmp
leave
jno
mov
pop
cmpsl
in
add
mov
jmp
adc
lods
adcl
mov
loop
jge
shlb
cmp
push
int
sub
cld
sbb
mov
imul
cmp
dec
test
rcrb
adc
lods
mov
push
add
fwait
cmp
mov
lcall
das
fst
rclb
aas
mov
insl
or
cmp
add
dec
in
adc
notl
pop
mov
fimull
or
ret
js
fwait
cmp
push
icebp
add
dec
mov
mov
fadd
pop
dec
push
repnz
ja
test
mov
rcll
or
hlt
sbb
cmp
mov
push
cmpsl
insl
xor
xor
xchg
jecxz
iret
stos
and
push
push
jns
mov
mov
jb
cwtl
movb
jae
lret
adc
popf
aam
enter
enter
test
ja
pop
int
out
arpl
je
mov
and
mov
mov
inc
loop
es
mov
push
fwait
inc
int
xor
mov
or
mov
sub
push
out
movsb
add
cmp
mov
mov
ret
add
jmp
aas
push
jne
fimull
push
pop
stc
das
xor
jg
leave
sbb
sub
cmp
mov
xchg
mov
fsts
ljmp
pusha
push
sbb
pop
test
add
bound
lds
adc
sbb
or
dec
out
scas
subl
mov
xchg
xor
bound
xchg
in
stos
rorb
and
pop
push
scas
cmp
xor
cmp
std
out
or
outsl
adc
into
inc
popf
out
sbb
jo
repz
adc
inc
jle
mov
fucom
fwait
cld
inc
adc
or
jmp
outsb
dec
sahf
mov
cmpsb
je
cmpsb
cwtl
sbb
inc
xchg
fwait
sub
mov
pusha
fdiv
xor
fwait
rcr
stos
sahf
xchg
popf
adc
mov
aaa
test
or
pop
jp
sbb
fisubrl
sahf
cs
xchg
push
testl
adc
mov
xor
lret
lcall
mov
iret
lret
push
repz
push
jae
into
movsb
pop
ficoms
jmp
sbbb
dec
xor
pop
xchg
and
imul
loope
mov
ja
adc
addr16
sub
sbb
mov
fwait
sub
int3
arpl
callw
imul
sub
jp
mov
mov
pop
stos
js
pop
mov
hlt
or
andl
pop
iret
mov
sub
testl
jle
xchg
sbb
mov
and
push
cli
dec
shrl
in
pop
add
subb
cmp
adc
jp
clc
pop
clc
dec
jecxz
sbb
pop
sbb
mov
imull
fcoml
pop
out
add
sbb
cmpsl
aad
sub
sbb
jmp
aas
inc
dec
ret
xor
mov
out
push
filds
incb
imul
mov
das
or
imul
popa
shrb
out
je
mov
sub
mov
jle
insb
xchg
and
sarl
push
movsl
aas
mov
scas
gs
xor
mov
mov
imul
or
or
imul
iret
jbe
inc
hlt
push
sbb
jp
das
int
cmp
ficoms
xchg
mov
ficomps
cld
movsb
sti
add
cmp
lds
mov
hlt
out
jle
or
mov
mov
cld
scas
ljmp
mull
loope
mov
cmp
in
sub
or
or
icebp
or
jns
jns
adc
xchg
das
push
jmp
inc
pusha
fldt
je
lea
or
sub
lods
aas
fldt
negb
add
cmp
stos
sarb
lret
cmp
cmp
shll
outsb
mov
hlt
enter
or
std
sbb
sub
push
adc
call
movsl
and
xchg
mov
enter
imul
lds
ret
hlt
pop
adcl
lret
mov
lods
repz
out
dec
insl
pop
sub
mov
pop
int3
cmpsb
add
cmp
push
jmp
repz
cmovb
jge
jecxz
mov
bound
mov
data16
sbb
into
mov
nop
sbb
cmp
cmc
stc
mov
aaa
jle
in
test
push
push
adc
pop
xchg
cmp
movsb
push
lods
ljmp
js
mov
add
adc
lret
xchg
lock
jp
out
jecxz
and
test
dec
ret
test
jnp
xchg
mov
jb
add
adc
sub
in
jmp
xchg
mov
xlat
jg
ss
ret
mov
sub
fdivl
call
mov
add
test
addr16
mov
jbe
dec
lods
frstor
xchg
add
lods
out
loope
adc
cltd
sub
push
jmp
cmpsl
push
push
add
mov
inc
outsl
mov
sysexit
lahf
pop
or
lahf
or
xorb
leave
pop
lret
push
dec
shll
ljmp
adc
inc
sub
push
les
or
int3
pop
out
mov
gs
ljmp
add
add
dec
adc
outsl
or
xchg
pop
cli
dec
lods
jns
mov
ret
sbb
push
nop
sbb
popf
add
xchg
push
sbb
cmp
cmc
cwtl
mov
mov
inc
jnp
mov
xor
push
fnstcw
movsl
adc
clc
es
lock
jge
sbb
stc
push
push
mov
push
fisubrl
cmp
je
popf
sbb
lds
push
pop
or
lahf
sub
cmp
test
cs
sub
bound
mov
mov
fnstenv
shrl
rorb
push
fiaddl
pop
cmp
sbb
mov
pop
cld
xchg
lock
out
out
sahf
in
mov
lds
int
pop
push
ljmp
mov
lds
sbb
gs
mov
adc
pop
jecxz
add
in
jo
sarb
jnp
stos
imul
es
out
or
add
mov
pop
jle
or
cmp
ret
cmp
es
push
ds
ret
mov
fwait
jbe
adc
sub
es
sbb
insb
xor
outsl
inc
lock
xor
inc
lahf
out
cs
mov
mov
adc
scas
jg
xchg
add
movsl
pop
add
out
mov
jmp
stc
stc
add
popa
xchg
push
dec
jp
dec
add
mov
cmp
add
mov
aas
jmp
dec
and
xor
pop
inc
cmp
push
mov
adc
adc
push
mov
lods
mov
sarb
pusha
push
mov
jg,pn
xchg
orb
and
pop
push
setg
leave
sbb
sbb
hlt
adcl
insl
push
xor
punpckhbw
mov
out
mov
lods
sar
mov
fbstp
mov
clc
inc
insl
jb
mov
outsl
jb
mov
jg
cmp
mov
pop
or
repz
cmp
mov
sbb
hlt
loop
insl
jbe
mov
jmp
mov
aad
and
loop
pop
push
rcrl
or
sub
out
push
push
leave
popa
clc
fcomip
call
mov
test
add
into
mov
shr
or
icebp
out
pop
dec
cmp
dec
les
inc
scas
loopne
or
sbb
mov
jae
mov
cmc
mov
mov
pop
insl
mov
jecxz
scas
pop
hlt
and
sbb
add
mov
xor
mov
lret
pop
mov
icebp
jo
roll
push
in
sbb
in
lcall
outsl
or
add
adc
mov
mov
jb
iret
cltd
popw
cwtl
adc
fldl
mov
push
cmpl
jle
or
push
and
fimull
push
sbb
into
xor
xor
mov
mov
lret
dec
mov
imul
lret
test
or
or
or
xchg
loopne
insl
cmc
dec
sbb
xchg
mov
push
sbb
inc
enter
and
mov
shrl
and
pop
or
ret
push
push
mov
int
xchg
loopne
xchg
dec
mov
jecxz
mov
stos
in
pop
inc
push
cs
fistpl
add
dec
dec
stos
aaa
loop
mov
ret
aas
mov
mov
movsb
shl
push
xchg
enter
mov
test
loope
cmp
push
cli
mov
out
mov
fidivl
ret
jo
push
mov
insl
and
movsb
ja
add
pop
data16
push
mov
in
scas
out
sub
in
adc
notb
mov
or
jns
pop
add
and
fs
imul
inc
mov
clc
pop
rcrl
aam
or
in
fsubl
dec
clc
addr16
sub
mov
pusha
add
push
je
sub
dec
ss
add
sbb
iret
mov
dec
dec
das
jp
test
mov
xor
lcall
in
ss
cmc
push
dec
xor
mov
leave
popf
out
and
orl
lret
inc
jecxz
das
mov
in
xchg
mov
cs
xchg
loopne
inc
sub
mov
mov
mov
in
xchg
enter
lret
mov
dec
cmpsl
mov
ljmp
mov
pop
gs
test
xchg
leave
dec
mov
cld
in
imul
int
jge
xchg
mov
push
mov
jb
jno
xchg
add
xchg
fildll
andb
out
in
mov
enter
bound
cwtl
das
jbe
add
aad
xlat
jmp
push
adc
daa
test
fwait
mov
int3
loope
dec
scas
push
cld
dec
ret
cli
inc
stos
lods
xor
push
insl
add
fnsave
or
xchg
shrl
sbb
mov
outsb
sahf
sbb
lcall
loope
mov
icebp
sbb
in
shll
ss
xor
push
cmp
mov
xor
imull
test
popa
inc
cwtl
add
shr
and
jg
and
in
mov
sbbb
lcall
je
xor
in
imul
in
mov
out
sbb
adc
pop
cwtl
popa
loope
fwait
in
nop
das
sbb
icebp
sbb
jmp
jg
paddq
cmp
test
pop
dec
jp
aas
or
into
inc
jns
fildl
loop
lds
add
mov
sbb
lret
hlt
or
adc
arpl
lea
pop
jecxz
or
sub
out
pop
push
mov
xlat
rcrb
xchg
add
jge
dec
add
push
push
xor
scas
pushf
sbb
lods
gs
xor
add
or
pop
push
add
jbe
hlt
jmp
fnsave
outsl
pop
cmp
repz
fwait
dec
data16
dec
mov
mov
hlt
testb
sbb
pop
not
mov
adc
xor
adc
jmp
push
dec
xor
inc
loopne
push
sbb
mov
fisttpll
or
dec
mov
sbb
push
outsw
repnz
in
test
jl
add
cli
loopne
aam
xor
dec
in
push
out
dec
push
xchg
stc
fidivrl
jg
clc
add
pop
and
sub
cs
repz
adc
lods
adc
mov
outsl
sti
pop
testb
out
addl
jns
ljmp
loopne
enter
lret
mov
cmp
pushf
gs
mov
or
push
and
dec
adcl
int3
aaa
jbe
jmp
sti
or
stos
adc
fildll
push
mov
push
inc
jg
movsl
loope
inc
call
roll
pslld
in
ss
cmp
dec
sbb
adc
xor
pop
js
pop
sbb
aam
xchg
cmp
cmc
int
xor
nop
and
cli
test
pop
es
and
xor
mov
mov
jg
and
inc
das
mov
dec
sbb
in
fldenv
subb
cmp
xchg
sub
xor
dec
pop
frstor
loop
jmp
out
mov
dec
arpl
fstps
sub
addr16
call
test
enter
fnsave
mov
sub
jg
jb
jne
sub
sub
stos
pop
rorb
mov
push
inc
sbb
jp
pop
in
js
xor
movsb
imul
aad
add
cmp
xor
inc
or
daa
add
or
xchg
stc
imul
xchg
push
cmp
lahf
fsubp
fmull
mov
add
dec
add
jl
jl
push
rcrl
or
mov
std
mov
fmull
dec
xchg
aad
xchg
xchg
cmp
stc
ljmp
pop
test
pop
jo
nop
push
xor
loop
mov
mov
loopne
insl
xchg
mov
rcrl
dec
scas
inc
in
icebp
dec
push
xchg
cli
add
jo
leave
push
dec
aam
adc
jbe
cli
popf
aad
inc
push
inc
lea
jecxz
jns
xor
dec
cld
push
mov
mov
cli
ss
xor
dec
cmc
cmp
stos
pop
inc
mov
mov
xchg
lcall
sub
jmp
aas
add
push
nop
cmp
in
sub
sub
xor
outsl
pop
or
cli
xor
push
lods
mov
ret
out
fsubrp
aad
mov
cmp
xor
xor
push
decb
mov
xor
pop
fwait
adc
and
or
ds
shrb
dec
pusha
cltd
movsb
into
pop
jb
test
cmp
push
cmp
bound
test
push
mov
mov
push
cmc
jl
xchg
int3
test
xor
repz
jns
sbb
adc
mov
leave
movsl
or
pop
jge
cmpsb
loope
ret
div
xlat
test
cmpsl
sbb
push
outsb
outsb
cmp
mov
xchg
mov
lret
pop
pop
idiv
dec
pop
jmp
xor
popl
or
lea
xor
cmp
ja
loopne
sub
cmp
loopne
outsb
hlt
xor
ror
xor
xchg
push
fbld
push
test
mov
js
push
push
aas
xor
jp
jge
sub
jle
aaa
pop
cmp
adc
cmc
imul
ss
cli
xor
xchg
scas
dec
mov
xchg
and
ficompl
and
nop
cld
mov
loopne
dec
push
mov
dec
lods
leave
jno
pop
mov
mov
jns
adc
or
call
add
out
aad
xchg
cmpsl
ret
cmp
sub
mov
adc
jbe
bswap
push
les
sub
and
mov
add
into
sub
cltd
push
xor
aas
popa
jne
mov
imull
popf
mov
sbb
sub
add
xchg
insb
pushf
int3
xor
insb
dec
cmp
and
rcrb
or
push
cwtl
pop
sbb
pop
jp
out
push
sbb
fildl
cmc
mov
sub
push
cwtl
dec
sbb
or
pop
adcb
fs
loope
mov
sbb
push
xlat
add
imul
push
jecxz
fsubs
xor
test
fadds
mov
test
popf
inc
shll
push
push
push
out
push
jle
les
or
aas
cmpsl
mov
mov
pop
aam
lock
in
jno
xor
imul
sbb
pop
mov
mov
call
pushl
lcall
sbb
push
notl
dec
out
andb
pop
adc
stos
inc
xchg
sbb
inc
xor
dec
jne
repnz
push
cwtl
jnp
and
ret
xor
repz
imul
xor
pop
test
idiv
inc
sbb
pop
mov
fs
add
cmp
add
lea
dec
adc
or
daa
test
and
out
mov
push
mov
out
xlat
je
fsubl
es
and
adcb
xchg
add
push
xor
jns
aad
mov
dec
sub
sti
sbb
outsb
fidivl
jge
insb
pop
and
loopne
mov
mov
push
and
pop
cwtl
mov
loop
push
push
xchg
push
stos
dec
into
xchg
cwtl
xchg
adc
xchg
mov
cs
push
jb
xchg
icebp
pop
dec
repnz
lods
fadd
leave
clc
test
scas
pop
mov
lret
jg
cs
sbb
fisttpl
push
adc
test
test
jmp
fsubl
or
cmp
dec
push
sub
cmc
inc
push
sti
push
cmp
add
sbb
movb
imul
in
sub
mov
insl
aad
cmp
jne
xor
xchg
push
inc
repz
jae
int3
mov
or
push
imulb
pop
cmp
cmpsb
jne
dec
bound
movsb
in
pop
stc
jb
sub
sbb
test
popf
imul
inc
xchg
xchg
mov
rcll
mov
pop
ret
or
inc
jle
cmpsb
mov
push
test
leave
push
mov
imul
and
into
ret
xadd
jecxz
cmp
mov
dec
dec
dec
nop
cmp
out
pop
adc
sub
cmp
mov
ret
fiadds
jbe
inc
ret
inc
mov
xchg
mov
xchg
xchg
dec
xchg
insl
mov
cld
mov
es
mov
dec
adc
push
mov
lods
imul
ffreep
in
mov
and
mov
dec
and
std
mov
and
xchg
aad
xchg
loopne
inc
test
jge
fxtract
test
cs
aas
shlb
xor
pop
push
mov
cmp
je
test
inc
bound
sbb
mov
mov
loop
xchg
dec
stos
in
xchg
in
lods
adc
jns
sbb
scas
mov
push
mov
decb
jmp
fistps
xchg
dec
shl
push
popf
dec
add
lcall
and
jl
push
mov
faddl
mov
jb
imul
mov
insl
popa
aad
mov
je
mov
movsl
test
cmp
adcl
lgs
jnp
cltd
add
in
fnstenv
mov
mov
outsl
pop
shrl
pop
mov
cmpsb
inc
adc
push
rorl
pop
inc
add
scas
xchg
scas
adc
pop
pop
pop
sub
push
mov
inc
nop
jbe
stos
xor
cwtl
lods
pop
inc
and
add
inc
rcrb
add
push
or
call
or
test
stos
pop
inc
call
mov
sbb
loopne
jbe
pop
push
jo
cwtl
ret
rorl
cmpsb
sub
xchg
addl
adc
std
push
pop
lret
sub
cmp
divl
pop
mov
ds
push
lock
into
adc
dec
jmp
mov
mov
repnz
jns
lahf
das
xlat
icebp
in
out
lret
mov
push
mov
sub
arpl
in
loop
dec
iret
scas
out
enter
lea
sub
rorb
movsb
imul
push
jp
adc
adc
mov
maskmovq
testl
test
jl
ficomps
ficoml
mov
loop
mov
lret
jle
cli
jo
mov
lea
in
shlb
mov
adc
ret
xor
adc
mov
movsl
call
adc
push
ja
andb
mov
or
stos
sbb
jnp
jns
pusha
jns
pop
lret
jne
jge
pop
ret
push
cmp
gs
leave
mov
fwait
sarl
jle
pop
jl
mov
jae
inc
cmpsb
push
imul
nop
push
adc
push
lret
and
push
xor
mov
xor
orb
inc
and
mov
lret
stos
andb
stc
mov
mov
loop
std
out
mov
sub
jo
xchg
ss
adc
enter
int3
xchg
xchg
inc
or
xor
andb
out
rclb
or
cltd
loopne
dec
adcb
out
mov
push
mov
mov
fnstsw
jns
inc
adc
addb
into
aaa
fwait
popf
in
imul
dec
or
js
out
inc
aam
jle
bound
testb
testl
fildl
xchg
sbb
in
and
movsb
xlat
out
push
stos
cli
jbe
in
add
sbb
shlb
pop
andb
jnp
jnp
pop
popa
ljmp
fsubs
pop
pop
icebp
add
cmp
cwtl
aaa
movsl
mov
lcall
clc
xchg
xor
cs
movsl
xor
popf
sub
sbb
leave
push
scas
movsb
int
jge
insb
jmp
loope
sarl
sbbb
sti
inc
lock
je
and
aad
inc
movl
test
in
or
or
int3
jno
adc
dec
pop
sub
push
mov
push
xchg
fstpt
cmpl
cmpsb
xchg
or
lds
mov
mov
jnp
stos
faddp
mov
lret
xor
add
out
out
imul
mov
leave
pop
pop
lock
fsubl
pusha
xor
scas
dec
test
and
or
mov
call
leave
add
loopne,pn
fsubl
inc
push
mov
rcrb
jge
sub
loopne
and
lock
pop
adc
sahf
sbb
ficoms
rcll
in
sbb
ja
ficoml
mov
mov
ljmp
add
jno
mov
mov
arpl
lods
mov
adc
out
aam
outsb
adc
lahf
out
int3
mov
movsb
addr16
mov
push
int
adc
mov
inc
jecxz
mov
sbb
mov
add
jae
out
cmp
inc
ljmp
lcall
enter
stos
data16
push
xchg
xor
cmc
subl
dec
pop
inc
test
cmpsl
adc
or
pushf
and
movsl
push
jns
out
or
dec
sub
mov
cmp
sub
daa
mov
cs
mov
cli
inc
mov
jo
daa
hlt
jmp
test
andl
daa
cwtl
jle
inc
aas
or
jns
outsb
xchg
push
mov
insl
fistl
das
push
sub
push
cs
pusha
push
push
xlat
sbb
out
outsl
add
sub
jp
jns
aas
rorl
mov
or
jb
xchg
jbe
and
and
int
mov
in
call
js
and
cltd
adc
add
iret
mov
jl
jb
mov
inc
idivb
dec
jo
push
jge
or
movsl
data16
pop
lret
add
test
cmp
imul
lds
jecxz
cmc
cmp
mov
outsb
push
sub
nop
scas
push
sub
sti
imull
mov
dec
std
and
sub
rorl
pop
movsb
push
sub
rol
xor
lret
adc
push
or
fnsave
movsl
add
dec
or
push
lahf
cmc
jmp
sbb
jecxz
push
cmp
xchg
shll
mov
sbb
dec
and
mov
lods
out
sub
lret
cltd
int
ja
rolb
sbb
das
movsl
xchg
adc
inc
loop
pop
addr16
or
lcall
inc
popf
testb
cmp
push
and
ljmp
out
in
sub
and
sub
and
aad
inc
pop
gs
jg
shrl
cs
scas
lea
addr16
in
lea
jg
outsb
sub
push
sahf
add
orl
testl
nop
lds
pop
sar
mov
add
push
mov
outsb
lret
mov
jp
mov
sahf
mov
out
clc
jl
mov
push
aaa
and
nop
xorb
sbb
fisubrl
inc
rcll
jmp
out
push
enter
add
shrb
xchg
push
add
aaa
imul
idivb
repnz
bound
mov
sbb
mov
in
shll
mov
loope
out
sub
scas
int3
xor
pop
loop
imul
add
dec
push
jg
dec
inc
push
ja
xor
jns
push
into
and
pop
mov
mov
ret
ja
int
pop
int3
leave
js
insb
push
pop
rorl
sub
mov
sbb
pop
pop
aas
sbb
cmp
addl
call
push
mov
mov
call
and
mov
rcr
cld
dec
stos
push
or
imul
mov
arpl
pop
mov
in
out
sub
lds
loope
or
lret
xchg
addr16
xor
mov
xor
add
mov
sti
mov
scas
aam
sbb
scas
lds
pop
pop
dec
dec
dec
imul
imul
jns
push
in
mov
adc
ljmp
mov
xor
stos
and
pop
ds
daa
adc
lret
mov
sub
ljmp
xchg
jb
cld
push
mov
mov
call
daa
mov
aas
inc
and
hlt
arpl
dec
lahf
mov
int
jns
addps
in
fcmovnu
pop
push
lds
and
sbb
mov
ficoml
jl
insl
aas
cmp
adc
jae
ret
fistpll
ljmp
fwait
push
test
cmc
cltd
mov
stos
subb
mov
cwtl
mov
aas
inc
in
test
jmp
jne
and
adc
dec
dec
cmp
mov
or
js
or
mov
jo
movsl
mov
popa
das
jg
les
leave
add
cmp
mov
pop
xor
adc
adc
pop
push
inc
mov
xor
add
push
mov
adc
fwait
movsb
push
inc
mull
cwtl
int3
add
fiadds
dec
mov
imull
es
adc
adc
or
adc
xchg
xchg
dec
xchg
stos
lods
iret
lcall
dec
push
repnz
outsl
popa
orb
mov
push
sahf
mov
cmp
mov
fcoms
mov
imul
int
xchg
lock
mov
daa
mov
sbb
rolb
push
and
sbb
sub
mov
xor
gs
mov
das
mov
shrb
or
sub
outsl
leave
push
mov
addl
dec
jge
and
jg
sbb
ljmp
insl
jae
call
mov
sbb
repnz
push
outsb
stc
je
pop
mov
xchg
add
xchg
or
into
mov
ja
mov
cmp
mov
or
int3
insb
orps
inc
sti
fwait
arpl
adc
int3
pop
imul
mov
pop
and
push
rclb
loopne
mov
shrl
adc
or
loope
movsb
movsb
xchg
jb
ret
mov
cwtl
xor
push
insl
in
dec
fnstenv
lcall
push
inc
jmp
cmp
int3
sub
cmp
icebp
outsl
push
dec
xor
ljmp
dec
or
std
jne
xchg
xchg
push
adc
pop
add
arpl
jle
xchg
mov
xchg
inc
lods
xchg
push
andl
cmp
pop
movsb
popa
sub
fidivrl
shlb
outsb
fcom
aad
jno
int3
dec
cmp
jg
pop
dec
push
add
rorb
adc
out
cmp
xchg
sub
inc
mov
jbe
jmp
add
sub
dec
sbb
test
hlt
push
jmp
rep
ficoms
outsb
push
and
cmp
ret
cmpsl
or
sbb
push
ret
xor
ss
and
aaa
popa
iret
mov
xchg
cmp
andl
and
push
sbb
pop
ss
cmp
movsl
add
andb
jmp
inc
dec
je
leave
xor
push
out
xorb
cmp
arpl
lock
push
inc
jl
cmp
push
or
roll
dec
test
cmp
lahf
pop
fs
test
addr16
mov
inc
insl
dec
loopne
std
mov
into
repnz
pop
mov
mov
mov
lret
outsb
daa
nop
xchg
loopne
push
inc
xchg
xchg
add
mov
repz
jo
int
in
mov
dec
mov
cld
lock
rcrl
scas
and
xor
ss
add
push
dec
xchg
xlat
xor
cwtl
cmp
inc
nop
fs
cmp
loop
dec
ds
cmp
sbb
sub
cmp
xchg
xor
stc
push
dec
lret
mov
popa
mov
aad
int
scas
push
aaa
in
push
sahf
cs
pushf
shlb
aam
inc
and
dec
sti
movsb
popa
into
cs
xor
xor
arpl
add
lods
xlat
data16
push
cmpsl
pop
pop
sbb
insb
dec
cwtl
les
dec
leave
sub
lret
xor
mov
jl
bound
dec
xor
inc
add
das
in
aam
mov
cld
xor
inc
out
das
sub
clc
stos
fisubl
insl
xor
or
sub
sbb
insb
imul
ss
dec
dec
test
or
mov
stos
add
pop
rcrb
and
popf
ret
cmp
or
add
jnp
scas
imull
stos
outsl
cmp
lds
push
out
sti
aas
dec
btr
or
mov
push
fwait
jae
adc
pushf
scas
push
mov
xor
sub
or
add
sub
out
mov
cli
jle
dec
sub
adc
lret
dec
xchg
jl
sub
stos
fcompl
inc
and
iret
push
sti
mov
add
pop
sub
inc
adc
in
jecxz
test
dec
scas
xchg
lret
and
adc
mov
push
divb
add
cs
aas
loopne
push
rcr
push
mov
jl
pusha
jp
add
aad
xchg
in
das
fwait
cld
lret
mov
popa
dec
dec
andb
iret
fisubl
fistpl
xor
adc
sbb
call
add
push
cld
stos
lea
int
in
add
mov
repz
jl
push
pop
push
add
xor
outsl
dec
fnstsw
idivb
mov
sub
mov
movsb
push
cmp
mov
mov
sub
loopne
inc
imul
jbe
pushfw
pop
loopne
cmp
jp
icebp
test
data16
push
movsl
xchg
addb
int3
add
cmp
imul
mov
push
aam
in
movsl
insb
jnp
pop
loopne
and
or
or
jnp
inc
xlat
call
lock
aam
or
sub
cmp
cwtl
add
rcrb
in
sbb
mov
push
lods
push
es
jecxz
ret
push
loop
arpl
shld
sub
aaa
push
push
int3
sub
jb
ret
mov
mov
adcb
cmp
les
jg
sbb
mov
adc
lret
adc
inc
dec
push
ret
in
jg
iret
jbe
arpl
add
movsb
lret
jo
pushl
cmp
mov
or
dec
sbb
sbb
orl
mov
rcrb
inc
aaa
in
sub
mov
xor
inc
test
jg
xchg
ds
ret
es
hlt
mov
sbb
and
loopne
mov
mov
sti
lahf
int
mov
mov
pop
es
dec
cmp
jecxz
popf
clc
in
adc
pop
arpl
jb
jae
mov
push
push
push
lret
jge
shll
aas
push
adc
sub
outsb
mov
sbb
into
and
fucomi
outsl
repnz
push
sbb
cltd
ja
mov
and
mov
movsl
push
xchg
aam
pop
scas
jne
jo
les
out
sub
in
pop
xchg
pop
nop
insb
bound
mov
pushf
adc
push
loope
inc
mov
mov
mov
add
pop
je
lcall
stc
test
sbb
mov
inc
adc
jge
inc
fnstsw
in
cmp
lock
test
lcall
jns
loop
mov
cmp
leave
xchg
push
jb
mov
in
addr16
adc
xchg
imul
fstpt
pop
lds
jo
mov
mov
fwait
lods
xchg
cmp
xor
jmp
sub
adc
add
insb
jle
xchg
scas
jmp
sub
xor
ja
cwtl
out
aad
jo
lahf
daa
js
mov
sahf
jl
push
ss
icebp
out
enter
aaa
xor
mov
pop
push
movb
mov
dec
inc
push
test
std
xchg
mov
fisttpll
ljmp
sbb
aad
mov
mov
nop
push
jmp
xlat
xor
lret
or
xchg
push
mov
inc
and
aaa
add
into
scas
push
ja
subl
cmp
insb
leave
in
xchg
mov
jne
gs
mov
lock
movsl
pop
test
or
nop
push
mov
das
imul
mov
popa
jae
lcall
nop
cmp
je
out
mov
xchg
cli
ljmp
test
cmpsb
jl
mov
add
xchg
push
mov
sub
cmp
sbb
andb
mov
daa
in
aad
sub
mov
adc
cld
sbb
stos
in
scas
inc
mov
push
testb
add
insl
push
mov
dec
imul
aaa
pop
jle
lock
sti
jl
jae
test
mov
mov
inc
mov
pop
daa
adc
loope
cmp
mov
out
sub
sarb
adc
std
xor
mov
sbb
mov
xchg
sarl
mov
mov
cmpsb
dec
jbe
je
cmp
push
fsubrs
mov
subl
xor
lret
orl
insl
adc
push
xlat
pop
or
and
ss
add
xchg
cmp
pop
out
adc
mov
cld
push
or
and
and
cvtps2pd
sti
inc
jbe
mov
lds
xor
inc
jns
fdivs
mov
movsl
push
pop
or
jmp
call
dec
sub
and
inc
and
sbb
jecxz
push
mov
addr16
sbb
inc
das
insb
jo
ret
xor
push
rolb
ljmp
aam
pusha
out
icebp
pop
jle
cs
push
mov
mov
arpl
cmc
mov
jnp
test
shl
push
xchg
xor
cmp
or
mov
mov
in
out
xchg
sti
jp
adc
adc
pop
mov
xor
sub
in
imul
xchg
jb
sbb
inc
cmp
jmp
ja
xchg
xchg
fwait
mov
mov
mov
adc
data16
addr16
int3
add
into
xor
sub
push
xor
cld
call
add
xchg
lea
adc
das
out
movsb
xor
insl
mov
mov
aaa
orl
mov
in
rdpmc
imul
push
or
push
cmp
sub
imul
sub
sbb
out
testb
push
inc
mov
cltd
mov
sahf
cli
adc
push
inc
out
inc
mov
jb
nop
lods
out
pop
fisttpl
cmp
add
mov
jbe
inc
jmp
pop
int
push
and
aam
dec
pop
mov
add
mov
xchg
mov
mov
call
push
pop
out
xor
mov
mov
mov
test
test
cmp
mov
stc
cld
aam
popa
rcl
adcl
and
pop
jbe
jg
xor
stos
in
cmpl
xlat
xor
inc
and
mov
stos
sarl
cmp
call
fcoml
push
mov
adc
add
insl
out
mov
add
cmpl
insb
fistps
imul
add
cmp
lret
neg
adc
or
mov
jae
hlt
mov
psraw
mov
jmp
inc
repz
xchg
out
rcr
mov
lcall
fwait
lods
out
lds
push
jns
push
jg
add
adc
out
test
sub
xor
adc
push
movsb
test
rolb
aas
cmp
fiadds
arpl
pop
and
lret
pop
or
jecxz
mov
or
cs
in
sbb
scas
jnp,pt
lds
jbe
ret
xor
ds
mov
rolb
clc
shrl
push
fsts
adc
and
mov
xchg
inc
mov
ret
mov
call
js
sbb
jge
stos
mov
xor
xlat
or
dec
int3
push
lods
lahf
inc
mov
shrl
test
pop
scas
cltd
or
subb
cld
dec
xchg
sti
pop
cmp
dec
mov
loope
mov
add
push
mov
pop
and
add
out
lret
nop
pop
and
xchg
pop
cltd
push
sub
pusha
pop
adc
roll
cmp
push
inc
pop
xor
jge
cmp
or
or
sbb
mov
iret
mov
js
mov
mov
js
push
dec
jle
inc
out
fnsave
daa
arpl
jae
mov
adc
inc
mov
ss
cmp
scas
jne
inc
xchg
inc
test
push
fsub
iret
pop
ss
lea
cmp
and
out
mov
pop
lret
and
enter
andb
xor
jnp
push
out
mov
sbb
push
testl
mov
fmuls
push
enter
add
out
dec
jo
and
xchg
out
lret
fwait
clc
adc
call
lret
fisubrl
push
sbb
andb
sbb
push
cwtl
notb
jl
test
stc
les
cmp
in
aas
pusha
aad
mov
jo
scas
xchg
mov
mov
or
sbb
sub
pusha
enter
insb
push
pop
push
jae
ret
pop
mov
jg
cmp
fs
jo
pop
mov
leave
enter
xor
popa
loopne
dec
ds
repnz
stos
push
lret
loopne
es
sub
sbb
int
mov
jle
fdivs
out
outsl
jae
rcll
xchg
inc
mov
adc
dec
adc
int
mov
movsb
xchg
into
popa
clc
xor
jp
inc
scas
pop
fdivl
sbb
jbe
or
pushf
pop
push
out
pop
adc
cli
nop
adc
push
inc
insb
mov
popa
push
xchg
push
jo
cmpl
repz
or
pushf
mov
out
clc
dec
push
adc
mov
dec
lret
sbb
sub
out
jno
and
ret
mov
in
dec
fldl
push
popf
iret
cmp
push
add
or
mov
sub
ss
cld
sub
xorl
xchg
idiv
test
cmp
xor
xchg
loope
sub
inc
sub
rol
imul
push
sbb
clc
loopne
push
xchg
adc
jne
dec
pusha
xchg
mov
push
jmp
movsl
loopne
lret
sbb
dec
mov
dec
sbb
jae
inc
xchg
loopne
mov
cmp
or
dec
and
and
sbb
add
std
push
add
testl
adc
jo
sbb
cltd
cmp
mov
test
or
mov
mov
nop
sbb
int
sub
mov
ret
xor
mov
sbb
outsl
xchg
xchg
into
xor
jb
push
or
push
repz
iret
xchg
out
push
and
test
ret
mov
dec
sub
pop
in
add
mov
jno
aam
jb
mov
mov
xchg
orb
lods
icebp
jbe
test
inc
ret
jo
insl
leave
push
or
push
xchg
das
insl
jb
push
sahf
push
out
loop
inc
dec
fstl
lea
daa
xchg
cmc
out
sbb
out
mov
mov
or
or
scas
push
mov
dec
aam
sub
jmp
movsb
pop
mov
lock
stc
cmp
jle
jbe
sub
push
push
lret
pop
cmp
cmpl
lods
mov
mov
pop
xor
int3
ljmp
or
xchg
mov
sub
dec
in
mov
sbb
repnz
jl
push
imul
dec
aaa
adc
jmp
inc
add
push
cmpsl
pop
sti
stc
je
jmp
pushf
aaa
into
rol
cmp
jmp
xor
adcl
push
clc
in
sbb
and
sti
mov
les
xor
dec
repz
or
in
fcoms
dec
jbe
mov
xchg
filds
pop
call
dec
mov
cltd
sub
or
std
in
incb
ss
pushf
push
fwait
pop
sti
daa
test
mov
mov
push
jge
cli
out
inc
inc
int
fnsave
inc
push
dec
add
xchg
push
xchg
mov
ficompl
and
cmpsl
mov
inc
aas
lahf
mov
adc
sbb
sub
arpl
out
hlt
lret
push
mov
loopne
push
addr16
js
or
fisttpll
popf
or
mov
lods
add
ret
add
pop
orl
outsl
popa
and
js
jle
push
leave
or
sub
jl
jb
lahf
lret
pop
mov
and
adc
dec
and
loope
cmc
jmp
mov
mov
jmp
push
aam
sbb
jl
out
or
and
in
lcall
stos
rolb
mov
idivb
popa
test
fldenv
sbb
sub
mov
loope
cli
iret
incb
arpl
push
or
lock
jns
dec
movsl
insb
scas
xchg
shll
mov
inc
lcall
shlb
push
aam
adcl
push
ret
pop
in
push
or
leave
outsl
add
pop
outsb
adc
mov
and
or
push
shrl
or
jo
push
repz
ret
shll
icebp
jmp
adc
mov
jno
push
cld
sub
mov
mov
pop
xchg
jmp
fcomps
aas
add
xchg
imul
sahf
inc
fildl
inc
xor
xorl
cmp
enter
stc
xor
outsb
gs
into
jb
lock
imul
pop
fnstcw
xchg
jl
mov
das
and
jge
adc
sub
test
outsb
outsb
pop
shrb
repz
cmp
add
mov
repz
xor
cmp
lret
jo
sbb
or
mov
sbb
sub
std
dec
mov
pop
call
add
adc
pop
jge
xor
inc
hlt
mov
push
xchg
clc
in
lret
and
sbbl
dec
inc
sarb
lret
sar
inc
js
mov
in
pop
jmp
ja
idivb
add
out
push
shr
push
lock
inc
pop
xor
push
pop
decb
in
movsb
cmc
xchg
divl
pop
mov
ret
aaa
lds
push
out
ret
shlb
push
mov
or
testl
aam
aaa
jl
mov
insl
out
adc
lock
repnz
jmp
pop
aaa
pop
mov
xor
inc
mov
insb
in
and
outsb
xor
add
pop
sahf
pop
and
mov
adc
cmpsl
jns
movl
mov
sbb
cmc
mov
cmc
stc
cmp
int3
mov
je
push
or
outsl
mov
das
pop
pop
imul
hlt
xchg
je
and
dec
sarl
jns
mov
pop
pop
push
xor
ljmp
popl
les
or
lds
push
add
push
cmp
mov
push
in
inc
movsb
mov
sub
scas
lret
loope
in
add
and
add
addl
inc
mov
and
int
enter
xor
out
in
xor
jae
and
std
shl
pop
push
clc
fidivl
or
cmp
outsb
sub
std
out
push
or
mov
aas
insl
shl
cmc
call
mov
jne
xchg
mov
or
mov
shlb
std
ret
ficompl
inc
arpl
dec
adc
and
das
or
cmc
push
mov
aaa
jno
mov
dec
sub
jecxz
xchg
cli
shll
das
adc
leave
xchg
loopne
sbb
pop
lock
push
fistpl
jae
mov
int3
push
out
or
inc
xchg
xchg
sub
push
xchg
stos
add
lahf
insl
mov
mov
adc
fiaddl
dec
rcl
jg
sbb
cmpsb
pop
push
inc
pop
stos
mov
xor
adc
in
or
xorl
clc
mov
jae
inc
mov
inc
or
leave
packsswb
rorl
jg
xor
sub
add
cmc
test
push
jl
mov
sbbb
sti
adc
dec
push
icebp
out
dec
xchg
inc
mov
pop
sti
mov
orb
sub
sub
call
mov
mov
popl
mov
mov
mov
into
das
mov
iret
mov
icebp
out
inc
sbb
sarb
ret
pushf
mov
aaa
rcl
fdivs
out
dec
rcrl
shrl
cmp
pop
inc
je
ds
pop
mov
mov
xor
outsl
mov
adc
mov
xchg
out
add
mov
insb
adc
jl
sub
pop
scas
push
rcr
xor
push
mov
cmpsb
stc
sub
jbe
es
xchg
mov
push
repnz
push
insb
xor
dec
mov
adc
outsl
jbe
sbb
cmp
insl
je
mov
stc
arpl
mov
into
jns
scas
adc
mov
jmp
js
mov
out
nop
inc
je
sbb
imulb
push
repnz
das
adc
insb
dec
ja
imul
mov
data16
in
cwtl
jo
push
je
gs
hlt
cmc
inc
call
dec
setg
inc
or
notb
push
push
jge
xlat
cmc
das
in
xlat
dec
push
inc
and
loop
push
dec
hlt
lret
ss
push
and
sarb
mov
enter
icebp
call
dec
idivl
or
or
mov
pusha
pop
and
mov
dec
or
lret
data16
add
xor
adc
lfs
shlb
int
mov
xor
imul
inc
jmp
push
imul
shlb
test
rcl
xchg
popf
add
pop
stos
inc
dec
out
out
es
loopne
addr16
lock
aaa
fdivp
outsb
rclb
sub
jns
mov
in
int3
stos
arpl
popa
pop
lahf
pop
mov
jg
leave
push
fs
subl
mov
in
mov
add
outsb
mov
xchg
lods
in
aam
add
dec
jns
sbb
and
sahf
add
les
push
mov
pop
loope
dec
aad
fsin
enter
inc
fistps
or
jmp
popf
add
sub
add
fiadds
jl
std
cmp
out
sub
push
rcrb
scas
sbb
mov
lds
shl
cmpsl
xchg
fsubs
ret
or
mov
mov
loopne
lret
pop
inc
sbb
jmp
adc
ret
cmpsb
ret
mov
out
mov
sbbl
xor
rcrl
cli
and
sbb
ljmp
mov
xor
sub
pusha
jno
mov
pop
out
adc
lret
add
push
xor
and
adc
xor
cs
sbb
inc
lret
or
mov
shl
add
or
mov
sbb
imul
cmpl
pop
negb
repnz
pop
xor
aad
jae
arpl
xchg
sbb
inc
test
decl
sub
testl
xchg
sarl
loope
mov
icebp
test
cld
push
cwtl
nop
sub
lea
jge
scas
fucomi
rorl
sub
mov
lret
mov
add
rorl
mov
mov
dec
push
pop
outsb
movb
int3
jge
daa
cmpsb
and
aad
loopne
and
ja
push
popf
push
cmc
inc
idivl
sbb
aad
add
repnz
leave
sub
sbb
sbb
cmpsl
popf
fcompl
cmp
pop
mov
jns
stc
inc
dec
push
ror
movsl
mov
mov
or
out
loop
pop
mov
cli
movsl
mov
and
adc
ja
mov
nop
outsl
or
fwait
orl
lds
movsl
in
hlt
pop
jmp
lahf
popf
movsb
or
jge
movsb
push
dec
xor
insb
cmp
and
repz
or
push
ljmp
adc
mov
je
xchg
jecxz
push
push
mov
mov
mov
outsb
ds
in
lea
and
in
repnz
lds
clc
cmp
mov
enter
xchg
mov
sub
pop
icebp
mov
aam
lret
sbb
mov
dec
inc
sbb
mov
mov
mov
mov
jp
les
lock
ljmp
popa
xor
and
mov
cmp
push
movb
test
mov
cmp
popa
pusha
mov
shll
pop
stos
das
xchg
andb
and
int
inc
push
inc
dec
pushf
mov
and
mov
mov
out
xor
clc
inc
xor
jbe
xchg
psrad
xor
add
dec
add
mov
ret
mov
inc
jecxz
sbb
loopne
mov
in
or
sbb
add
cmp
xchg
push
ljmp
or
test
loop
adcl
xor
lcall
xchg
jle
pop
cltd
pop
push
jmp
push
xorl
mov
ss
popa
js
rorb
imull
adc
insl
cmpsb
mov
pop
and
xchg
pop
add
fistpl
adc
mov
add
pop
ljmp
cld
enter
loope
cmpl
cmp
mov
jae
cwtl
mov
movsb
jl
in
jmp
or
jmp
mov
mov
and
in
outsl
hlt
xor
xchg
adc
pop
sub
pop
test
xor
mov
sahf
dec
outsl
sub
jl
test
xchg
xchg
xchg
rclb
sbb
sbb
leave
les
push
dec
mov
gs
ficoms
or
push
dec
push
push
cmp
scas
out
push
out
mov
aas
fistpll
or
mov
addr16
rorb
xchg
jge
fisubrs
sub
push
push
add
popa
stc
cs
repz
cmp
inc
loop
lcall
mov
stos
pop
sbb
arpl
or
inc
cmp
iret
mov
dec
xchg
iret
mov
inc
cmovns
icebp
jge
aam
push
jb
test
movsl
in
xor
xor
out
lods
shrl
inc
mov
mov
pop
cwtl
xchg
arpl
mov
add
enter
lcall
pop
mov
sbb
jno
jae
bound
fwait
mov
add
scas
push
adc
and
mov
lds
adc
sahf
into
movsl
ficoml
push
imul
str
pop
icebp
cmc
arpl
mov
dec
int
inc
dec
mov
daa
popf
cs
sahf
inc
cmc
sub
sbb
xchg
push
pop
cmpsb
jns
mov
jl
or
pushf
sti
das
xor
xchg
ret
lcall
sub
inc
loope
jnp
sub
or
cmpsb
test
jmp
imul
sbb
loop
mov
push
out
gs
outsb
mov
or
jns
fcoms
and
cmp
pop
add
adc
lods
push
xchg
and
cmc
aam
mov
bound
daa
or
xlat
jno
or
cmpb
and
add
push
sahf
hlt
jnp
or
lock
sub
inc
mov
sbb
ret
test
add
shlb
inc
mov
push
mov
leave
jnp
popf
call
inc
xchg
frstor
cmp
popf
test
xchg
pushf
cmpsb
ret
mov
xor
cmp
xchg
xchg
inc
or
mov
dec
xlat
in
mov
xor
or
cmp
xor
enter
aam
std
xchg
mov
inc
xchg
in
daa
pop
cmp
pop
dec
jge
cmp
sbb
out
add
test
mov
mov
pop
adc
sahf
pop
and
inc
test
pop
in
or
bnd
das
adc
dec
jmp
aaa
mov
sti
mov
and
sbb
sbb
fcomip
rorb
lods
les
shr
adc
mov
jo
xlat
xor
dec
das
dec
mov
mov
mov
jg
push
push
pop
jb
popf
inc
das
push
pop
pop
test
add
sub
mov
xor
mov
int
adc
cmp
add
mov
mov
enter
shll
inc
dec
sbb
jmp
dec
add
call
jle
enter
or
push
xlat
lea
xchg
cs
xor
inc
xlat
sahf
xchg
loop
mov
jecxz
bound
aad
sbb
push
fsubl
push
jo
je
inc
or
xchg
enter
pushf
pop
and
lcall
cld
lods
sub
loop
ss
and
adc
push
push
pushf
and
jg
mov
xchg
jp
xchg
mov
and
sub
dec
and
push
js
mov
push
sarb
fsubrl
cmpsl
xor
xchg
aas
bound
pop
je
into
mov
test
xchg
shrl
mov
fsubr
jg
pop
das
mov
ficompl
adc
enter
insl
and
sbb
add
lods
inc
xor
push
inc
mov
sbbl
mov
sub
jbe
out
imul
and
nop
mov
or
aam
and
aas
fdivs
jecxz
adc
and
inc
jle
rcrb
lret
loop
pop
fidivs
push
push
push
fmuls
sarl
jmp
in
pushf
sti
js
std
lods
pop
cmpsl
mov
push
lcall
test
shrl
adc
in
jmp
stos
and
fsubl
mov
cmp
xchg
subl
in
outsb
inc
in
js
stc
mov
bound
and
add
das
int
sbb
sub
idiv
and
cmpsl
imul
push
push
sbb
sub
inc
add
pop
dec
rorl
cwtl
mov
outsl
out
sahf
ret
or
les
cmp
push
add
mov
dec
and
dec
test
jne
ror
ret
cmp
lods
mov
mov
cmp
add
xchg
mov
shll
sahf
std
dec
fdivrp
xchg
mov
cmp
aam
daa
push
inc
aad
fldenv
out
and
pop
inc
daa
cli
xchg
stc
call
jo
cmp
loop
mov
cli
push
out
lahf
xor
scas
cli
mov
inc
sbb
adc
or
fsubl
xor
divl
inc
xchg
lods
jae
pop
adc
mov
xor
int
outsl
mov
mov
fsubp
adc
xor
loop
and
pop
jg
sub
dec
std
mov
cmp
or
mov
data16
mov
mov
arpl
xor
lcall
sub
es
adc
subb
mov
gs
popf
ljmp
add
ljmp
xchg
dec
fldcw
ljmp
pop
cwtl
mulb
adc
test
std
pop
je
daa
les
pop
jge
test
inc
xchg
fwait
repnz
scas
mov
xchg
mov
repz
call
shl
or
xor
cmp
push
decl
jno
sbbb
bound
jnp
fnstsw
push
test
jg
pop
mov
fimuls
mov
cmp
xchg
pop
and
pop
and
sub
sbb
sub
inc
push
mov
inc
cmpb
cld
pop
sbb
push
push
iret
inc
mov
in
xchg
pop
dec
xchg
xor
or
call
out
stc
js
inc
mov
pop
push
popf
mov
loopne
out
mov
test
out
adc
aaa
add
js
cmpsl
daa
mov
pop
push
jo
js
sub
lock
and
jae
mov
imul
xchg
dec
imul
sbb
jle
out
jno
shll
movsl
mov
lds
or
pop
cmpsl
aas
sub
mulb
out
inc
sti
lret
lea
cs
out
in
mov
int
repnz
inc
mov
jg
xchg
cli
cmp
jb
int3
sti
push
mov
mov
rorb
repz
or
xchg
adc
js
insb
fwait
and
add
push
mov
inc
jo
mov
dec
pusha
push
pop
popf
or
in
mov
aaa
hlt
lods
out
aad
ljmp
stc
aas
push
nop
stc
jno
ficoml
ja
sbb
adc
and
daa
sub
out
xor
cld
cltd
xchg
add
xchg
lock
mov
push
pop
add
add
jo
adc
adc
sahf
sub
stc
dec
inc
adc
imul
sub
test
lods
xchg
adc
pop
adc
ret
push
imul
mov
nop
cwtl
jle
scas
dec
pop
sub
mov
cltd
xlat
cmp
push
mov
pop
push
test
add
lret
test
popf
ret
fsubr
mov
stos
dec
jbe
clc
sub
shrl
mov
test
and
push
jns
loope
push
jns
adc
add
add
dec
xor
mov
mov
stc
pop
or
xor
imul
pop
inc
fnstcw
das
adc
sbb
mov
xchg
popa
jae
adc
ret
mov
stc
xchg
xlat
fsubrl
pop
cmpsl
mov
pop
pop
push
push
test
or
cmp
adc
hlt
hlt
mov
or
std
xchg
fwait
jge
roll
cwtl
mov
imul
push
in
shlb
out
stos
mov
lcall
rcll
inc
fiadds
fstl
mov
add
adc
push
enter
pop
adc
mov
dec
imul
or
add
subl
push
lods
in
adc
fwait
push
arpl
cmpb
shl
lea
push
cmp
mov
jnp
in
mov
iret
xchg
nop
pop
pushf
test
push
in
pop
push
xchg
ja
dec
push
shll
lods
enter
insb
cmpsb
add
adcl
xchg
dec
push
lock
xor
lret
gs
nop
ss
popa
mov
jp
pop
stc
push
xlat
cmp
dec
mov
bound
std
sbb
sbb
sti
scas
xor
cmp
fwait
shl
fisttpl
cmp
or
sbb
add
jno
mov
movsb
and
dec
bound
js
mov
rorl
lods
pusha
sbb
mov
es
insb
or
fidivrs
stos
sub
lgs
sbb
xor
imul
cmpsb
int
dec
inc
xor
inc
mov
incl
jbe
push
adc
pop
push
lret
cs
sbb
inc
inc
popa
xorl
xor
lret
pushf
cmp
or
inc
bound
jmp
out
sbb
push
pushl
sub
adc
xchg
xchg
repz
popf
fwait
jg
push
add
sub
sbb
add
nop
sbb
mov
icebp
cmpsb
mov
lock
adc
or
std
cmc
xor
in
jb
aam
lret
xchg
xchg
inc
in
dec
and
add
shr
cmp
push
cmc
insl
or
stos
ret
sti
dec
xor
scas
push
jbe
cmp
mov
jne
sub
sbb
and
divl
add
jae
sbbb
jae
fcomi
lret
inc
je
ret
js
adc
loopne
dec
movsl
fldenv
das
mov
xor
xchg
adc
outsb
add
outsl
ja
in
and
mov
lret
inc
cmp
push
adc
subb
jp
cmp
or
scas
xsha256
cmpsb
push
jne
int3
push
aam
and
mov
or
cmp
cwtl
lock
and
or
lea
cmp
test
stos
pop
pop
pop
mov
push
dec
imul
and
fmul
dec
mov
xor
inc
or
lret
mov
jno
cltd
fisubs
dec
shrl
mov
imul
adc
xor
mov
push
jns
aas
imul
into
sub
aad
mov
mov
popf
jns
sbbl
cmp
ds
fs
or
add
fwait
je
jb
or
jecxz
addr16
ret
dec
loope
pop
fwait
pop
push
sub
imul
and
xchg
cmpb
mov
stos
jbe
xor
je
mov
out
xor
jle,pt
sub
aas
fsubrl
fmull
testl
add
aaa
xchg
jno
aam
xor
out
ljmp
mov
mov
ret
or
movsl
and
cltd
dec
and
xchg
xchg
mov
pop
ret
mov
xchg
mov
xchg
cmpsl
outsl
insb
repz
push
add
or
jno
nop
clc
mov
sub
outsl
mov
out
out
adc
add
fiadds
xor
pushf
out
push
pop
shrb
leave
xchg
mov
enter
xor
adc
xchg
hlt
mov
leave
push
in
sbb
xchg
and
or
stos
dec
mov
outsl
mov
leave
jbe
mov
out
fdivrl
and
arpl
push
out
ss
nop
dec
xorl
subb
inc
inc
cmpsl
mov
test
jg
dec
int
jns
xor
bnd
gs
xchg
and
inc
jne
mov
fwait
add
das
aaa
dec
push
das
jne
sti
lods
or
jmp
sub
push
ja
stos
or
inc
cmp
hlt
das
xor
dec
mov
push
xor
cld
pop
mov
jbe
pop
imul
jbe
adc
dec
mov
cmp
xlat
dec
dec
rol
movsl
push
addr16
outsl
int3
fwait
and
push
push
cli
mov
gs
lea
jg
fnstcw
out
add
push
adc
sbb
cmp
das
or
testb
push
pop
sub
xchg
cmp
dec
sbb
pop
xchg
in
stos
leave
in
inc
pop
xchg
or
push
nop
pop
sub
mov
mov
pop
fcomp
roll
dec
neg
clc
call
sti
xor
push
mov
jb
out
je
ljmp
xor
sub
addb
push
jbe
cmpb
test
sbb
inc
cmpsb
loope
pop
sbb
fistl
flds
cli
fs
adc
inc
scas
daa
aad
xor
adc
inc
clc
mov
lret
mov
push
sub
rcl
mov
cmp
jnp
pop
jae
cmc
jns
cwtl
sar
and
push
pop
mov
pop
dec
pop
rorl
push
js
adc
mov
cmpsb
or
sub
out
mov
or
std
and
fwait
daa
mov
cwtl
sub
adc
int3
or
and
sub
dec
fs
cltd
pop
int
in
js
dec
push
ret
test
dec
cmc
sbb
mov
pop
xchg
mov
mov
sub
mov
mov
shll
lea
xchg
push
into
lahf
call
pop
ljmp
into
pop
sub
jnp
test
cmc
mov
or
cmp
and
xchg
xor
movsl
iret
dec
pop
jle
add
push
or
add
adc
dec
icebp
adc
push
mov
jo
xchg
es
lock
mov
sbb
push
rolb
sti
call
xor
xorl
mov
mov
rcrl
adc
cs
xchg
mov
push
push
xor
sbb
shrb
add
pop
adc
testb
mov
push
jge
xorl
xor
jmp
pop
ss
push
xor
xchg
inc
xchg
xchg
xchg
jl
jne
fbstp
ss
fisubrl
mov
and
fnstcw
mov
lods
fisttpll
outsb
jns
addr16
xor
aaa
mov
outsl
cmp
fisubrs
xchg
sub
fdivp
push
inc
fcmovnb
push
outsl
adc
inc
sub
push
pop
add
gs
xor
sub
scas
jno
jae
shrb
pop
bound
jg
lcall
cmpsl
cmp
fbstp
test
pop
sub
cmp
add
cmp
sub
jmp
jne
repnz
movsb
mov
xor
push
je
dec
sbb
sbb
lods
xor
stos
adc
dec
dec
xchg
enter
dec
xchg
sub
lea
jmp
push
sar
jmp
inc
lea
movsb
pop
dec
mov
and
sbb
imul
push
or
mov
imul
push
push
or
push
push
and
push
out
sarl
sub
jae
outsb
gs
addr16
roll
and
jg
and
push
pop
call
inc
cmp
aad
mov
dec
ljmp
and
sbb
insl
loopne
pop
test
sbbl
scas
mov
mov
mov
pop
or
mov
ret
cmp
jl
and
pop
stos
or
dec
mov
xor
das
cli
sbb
loopne
fs
out
push
aas
sbb
and
fnstsw
sbb
or
sbb
loope
add
mov
sub
dec
imul
jmp
int3
jg
inc
or
jbe
jecxz
dec
loop
loopne
cmp
mov
mov
lcall
into
std
imul
mov
mov
jmp
mov
bound
pop
daa
sbb
in
xchg
es
and
xchg
jl
xchg
adc
cmpb
mov
fwait
jnp
push
dec
xchg
mov
pop
dec
daa
sub
add
adc
or
jb
cmp
pop
and
je
mov
push
scas
jge,pn
sbb
fsubr
or
out
sub
insb
mov
pop
xor
push
or
fisubrl
mov
mov
add
in
mov
mov
pop
push
mov
pop
aaa
stos
fdivl
dec
sbb
aas
shlb
lods
jmp
movsb
xchg
xchg
pop
movsl
add
or
int3
xchg
sub
rolb
aaa
adc
test
lret
or
cmp
test
into
loop
dec
push
pop
pop
mov
jae
dec
push
out
jp
adc
movsb
pop
pop
rcl
out
lret
enter
int
ss
scas
popf
mov
fdivrl
daa
mov
rol
ret
push
xchg
inc
mov
pop
inc
mov
inc
cs
arpl
in
jmp
shll
dec
or
in
lods
inc
push
lea
jnp
dec
stos
lret
sub
fldcw
movd
into
add
xor
mov
push
xchg
push
sub
daa
xlat
int3
fs
jns
test
jbe
fwait
mov
scas
push
int3
pop
mov
scas
pop
jle
inc
fists
rcll
push
push
sub
pop
and
repz
xchg
dec
jg
cld
stc
dec
xchg
pop
out
fs
mov
inc
mov
jp
adc
ljmp
xor
xchg
adc
xchg
imul
sbb
push
loopne
iret
sbb
pushf
outsl
test
xchg
call
stc
arpl
pmaxub
movb
in
mov
ja
sti
call
popa
pop
bound
ret
sbb
mov
mov
scas
push
int3
out
mov
jno
pusha
sahf
pop
mov
pop
aas
sbb
repnz
sbb
push
xchg
pop
dec
bound
shll
icebp
fistps
daa
mov
inc
jge
mov
ja
les
jl
jne
sub
ret
imul
push
pop
std
cmp
cmp
push
cmc
and
cmp
cmpsb
mov
inc
scas
imul
mov
es
xchg
add
cli
and
ds
aad
rcrb
hlt
clc
insl
mulb
test
rorb
shll
adc
add
push
rcll
repz
in
pop
xchg
stos
xor
cmpl
adc
cld
pop
mov
push
push
or
dec
and
mov
mov
bound
loope
jbe
inc
pop
mov
cmp
adc
imul
and
xchg
je
insb
stc
mov
jne
popa
xchg
pop
xor
jae
dec
mov
in
shll
mov
and
jo
scas
ds
dec
push
jp
jb
adc
sbb
cs
dec
hlt
xchg
xor
jg
push
pop
loope
stos
lcall
xchg
into
xchg
inc
loope
sub
pop
inc
jl
scas
cld
out
mov
pop
addb
cmp
mov
loope
sub
mov
imul
and
jbe
xor
aam
loop
xchg
cmp
andl
test
xor
push
mov
popa
rorb
std
sti
test
push
les
in
aas
dec
and
repz
sbb
ret
nop
imul
xchg
lods
in
and
loop
sbb
mov
aaa
pusha
andb
jns
rcll
mov
lahf
data16
enter
pop
jmp
cs
xchg
xchg
lcall
push
stc
jmp
stc
filds
cltd
std
push
stos
leave
and
xchg
xor
cmp
sub
fcomps
and
mov
jns
xchg
fiaddl
mov
repnz
adc
xchg
out
push
fildll
test
jl
arpl
in
loopne
inc
xchg
insb
sbb
dec
mov
push
or
enter
or
sbb
and
test
fcmovnb
or
pop
xchg
pusha
aaa
sbb
xchg
cvtps2pi
xchg
sbbl
add
jae
or
cmp
add
arpl
push
inc
adc
scas
inc
lea
cmp
les
ret
bound
add
stos
mov
into
fisttpl
adc
push
mov
sub
cmp
fists
in
pop
imul
xchg
leave
iret
cmp
fcompl
and
pop
mov
scas
jne
push
pop
mov
xor
add
and
mov
fisubrl
popf
cwtl
add
jmp
nop
adc
cld
popf
sbb
test
cltd
mov
gs
fwait
stos
jne
mov
jecxz
popa
adc
arpl
mov
inc
ret
call
and
aad
inc
filds
imul
push
xchg
cmpsb
daa
push
inc
lret
inc
xlat
push
popa
lods
sub
push
decb
movsl
mov
addr16
inc
sbb
jnp
sbb
stos
shld
jle
lret
mov
loopne
add
test
cs
ret
fildll
pop
test
jp
push
repz
mov
add
scas
push
mov
inc
adc
in
cmpsb
mov
adc
loope
push
pop
jne
ds
mov
adc
test
std
notb
sub
pop
cmp
test
push
xor
jp
rclb
insl
sub
loop
out
xchg
inc
gs
sub
inc
adc
mov
mov
scas
ds
in
cmp
mov
xlat
cmp
gs
xchg
pop
and
add
xchg
push
or
stc
cld
pop
and
dec
xor
mov
lods
jae
cwtl
inc
sub
cs
lea
xor
in
pop
pop
inc
pushf
inc
ljmp
test
adc
fbld
ljmp
and
shr
jmp
jnp
lods
mov
movnti
inc
cmp
repnz
mov
inc
rcll
push
cwtl
xchg
fdivs
fisubs
inc
hlt
push
sahf
rolb
lret
push
popl
lds
ret
mov
nop
fidivl
cmp
sub
in
sub
xor
xor
xchg
outsb
mov
push
jmp
push
push
and
and
push
xchg
jp
fdiv
dec
jne
enter
sbb
clc
jno
loope
popf
je
cmpsb
mov
xchg
pop
mov
pop
or
out
pop
and
push
in
or
dec
mov
cmp
jp
push
imul
mov
leave
test
stos
or
enter
add
ficoms
fadd
mov
add
jecxz
addb
xor
imul
mov
dec
stos
mull
loopne
xchg
aaa
mov
xor
jmp
fnstenv
adc
sbb
pushf
scas
cmp
jp
popa
sbb
inc
mov
mov
inc
popf
pusha
out
pop
jnp
popf
jmp
lock
loope
mov
lock
pop
cmc
aad
push
test
mov
popa
pop
dec
and
inc
add
xor
andb
lods
fidivrs
sbb
push
pushf
add
scas
mov
pop
cmp
mov
pusha
sub
xor
mov
sub
pop
cmp
xchg
ret
cmpsb
aam
fstpt
mov
icebp
push
jecxz
adc
fdivrp
sarl
sbb
call
fmull
sbb
pop
sub
sub
faddl
xchg
sti
scas
ss
mov
bound
jp
push
ficoms
adc
dec
mov
mov
mov
fsubl
cmc
data16
cli
in
xchg
daa
in
or
and
out
repnz
xchg
push
imul
xlat
aas
les
fistps
pop
mov
fisttpl
push
xchg
daa
into
xchg
sub
prefetchw
scas
mov
or
add
mov
into
sbb
push
pop
add
aaa
jle
inc
ror
imul
dec
jae
inc
insl
cwtl
sahf
arpl
push
adc
outsb
vpandn
mov
push
jle
dec
loope
inc
insl
in
mov
sbb
clc
icebp
push
in
jp
mov
jp
in
dec
sub
push
inc
je
in
push
pusha
pushf
mov
cwtl
fsub
test
fdivr
or
subb
jae
clc
mov
add
les
sub
test
jne
adc
add
mov
mov
rep
jns
dec
cmpsb
cmpl
outsl
add
adc
or
shll
jmp
adc
add
push
push
pop
xor
mov
rcrb
dec
sub
cmpsb
mov
mov
sti
sbb
add
mov
jo
adc
movsb
cmc
pop
add
mov
xchg
std
sbb
dec
iret
sbb
lret
dec
and
mov
fs
testb
mov
add
arpl
es
xlat
fstl
sbb
jne
or
dec
inc
push
push
mov
das
mov
mov
int3
fsts
pusha
push
push
out
aaa
lret
out
adc
jae
rolb
pop
je
ljmp
jbe
repz
aas
dec
jg
pop
icebp
enter
scas
mov
dec
bound
xchg
movsb
or
or
push
lods
sti
xchg
inc
cmpsl
jae
test
push
out
xor
inc
paddd
out
ret
iret
mov
sti
lea
sbb
test
sub
and
repnz
sbb
mov
pusha
push
jae
jmp
lds
call
or
sub
mov
push
push
aad
test
xchg
insl
jbe
lea
not
mov
dec
mov
mov
xorb
in
jmp
cmp
or
xchg
fldl
out
call
lods
in
in
insl
pop
adc
cmp
sti
jno
jecxz
cmpsb
push
test
mov
stos
and
dec
mov
xor
cld
xchg
and
cli
or
mov
pop
push
in
les
cmpsb
push
push
and
jmp
rcpps
pop
mov
aas
inc
mov
testb
xor
pop
mov
popa
dec
dec
inc
leave
mov
jb
push
in
cmp
or
out
std
push
loop
xchg
adc
clc
push
repz
add
pop
ret
jp
shrb
test
mov
cld
jbe
das
add
dec
adc
push
pop
xchg
jbe
inc
mov
mov
pop
scas
aam
push
sbb
add
out
mov
lods
mov
pusha
out
imul
xor
jae
xor
mov
movsb
stos
push
mov
iret
mulb
jne
jae
ljmp
shl
insl
jo
sub
cmp
dec
jnp
jo
sahf
cmp
push
daa
mov
push
fwait
ret
lret
adc
xchg
shll
ljmp
lcall
cltd
sub
pop
lock
incl
roll
push
sbb
pusha
dec
lret
stos
adc
push
js
sarb
ljmp
xor
cld
inc
inc
push
rorl
adc
pushf
mov
push
in
push
add
cltd
xchg
outsb
push
mov
dec
add
cwtl
sub
push
jg
and
dec
popa
add
inc
jl
adc
aas
mov
cmc
aaa
dec
sti
push
mov
pop
cmpsl
pop
inc
es
xor
data16
outsl
cmpl
nop
rolb
push
or
jns
push
add
shlb
dec
and
push
jo
bnd
xchg
aas
sbb
mov
mov
mov
es
inc
stos
mov
push
fs
inc
sbb
push
xchg
mov
in
mov
int3
xchg
push
and
mov
arpl
aam
arpl
fsubrl
cmp
es
add
push
jecxz
test
sbb
lods
int3
js
mov
movsl
mov
mov
fcmovb
sti
dec
filds
cmp
lret
mov
test
cvttps2pi
fldt
jne
adcl
dec
sahf
in
aad
daa
add
sub
fistl
rcl
push
sub
adc
rcr
sbb
test
fsubrs
pop
loop
aaa
xchg
repnz
dec
push
stc
ficompl
xor
stc
aaa
outsl
push
sub
add
inc
xlat
test
lret
mov
xchg
aaa
jecxz
in
inc
js
add
mov
mov
mov
mov
pop
scas
loop
call
popf
gs
cwtl
mov
xchg
stc
imul
out
lods
inc
aam
js
in
mov
enter
leave
out
sar
mov
out
fidivrs
out
and
add
dec
movsl
fstpt
push
sbb
push
mov
mov
sub
adc
mov
mov
and
aam
insb
cmc
pop
into
xor
mov
lret
push
repz
mov
inc
dec
lds
aaa
inc
ljmp
cmpsl
inc
mov
mov
loope
jle
loope
les
dec
xchg
arpl
fmull
mov
xor
lcall
test
call
clc
pusha
jge
pop
das
mov
adc
insl
push
pop
test
stos
repnz
jp
pop
jl
mov
ret
and
sbb
lea
sbb
lock
ret
xor
cmp
push
mov
ret
dec
jbe
sti
cltd
push
pop
sbbb
ljmp
mov
jecxz
pushf
fadd
inc
les
inc
mov
fwait
adcb
and
cmp
lret
adc
inc
mov
or
sti
lock
mov
inc
lods
fisubl
sub
ret
xor
xchg
test
cmc
sbb
pop
arpl
std
dec
mov
dec
popf
fwait
or
mov
stc
fdivl
pop
int
push
scas
js
aaa
jecxz
push
mov
div
sbb
fwait
dec
negb
stos
test
jae
sahf
jg
jns
mov
mov
mov
push
mov
out
rolb
gs
leave
jl
imul
sub
dec
mov
xlat
rcll
pop
mov
xchg
ret
dec
test
cmpsl
inc
es
push
add
lcall
mov
and
fdivs
add
repz
cmp
xchg
bound
lock
xchg
xor
into
out
addr16
xorb
pop
stc
mov
icebp
xchg
faddp
mov
jl
or
inc
dec
in
mov
adc
ljmp
insl
sub
int
xchg
shl
sarb
sub
xor
push
dec
repz
cmp
test
push
mov
into
stos
repnz
aad
stos
imul
addr16
scas
mov
in
push
xor
scas
dec
jae
scas
loop
js
js
sub
fnsave
mov
push
pop
out
div
and
nop
jl
ret
cmp
adc
orb
roll
add
mov
and
push
pop
xchg
jns
sub
push
stos
cmc
mov
add
lods
stos
lock
cmp
out
mov
mov
add
mov
push
sub
fstpl
fsts
cwtl
adc
inc
fisubs
and
inc
clc
cmp
dec
sbb
push
test
js
testl
xchg
lock
rclb
xchg
lcall
add
pop
fwait
pop
xchg
push
dec
or
push
cmc
mov
out
pop
test
xchg
shrl
jae
testb
adc
add
insb
cmp
rcrl
scas
ljmp
inc
pusha
cli
and
jne
in
inc
push
sub
sbb
aaa
pop
test
hlt
mov
leave
stc
pop
xchg
dec
inc
loopne
mov
repz
rolb
sbb
push
test
imul
xchg
lss
je
in
scas
addr16
aaa
add
sub
repnz
sbb
sar
mov
push
adc
push
inc
sbb
loope
jp
repz
fucomi
dec
xchg
xor
add
pop
inc
js
xchg
mov
push
inc
cmp
cs
lcall
mov
xor
jecxz
adc
xchg
pushl
jmp
ret
fwait
es
inc
test
insb
dec
test
xchg
in
in
in
cld
push
roll
pusha
xor
xchg
cltd
stos
sarb
test
mov
push
cs
adc
das
mov
mov
cli
jl
jmp
cli
sarb
insl
xchg
je
es
repz
int
pop
lcall
xchg
mov
stos
or
add
loop
mov
mov
pop
scas
sub
push
dec
sarb
dec
into
loopne
and
hlt
push
ds
push
jns
int3
mov
push
call
repz
orb
and
insb
jmp
cmpsl
std
lgs
jns
cltd
decb
sbbl
addr16
out
in
lcall
dec
xchg
xchg
lret
int
jo
cmp
jbe
mov
adcb
add
aad
shll
scas
cmp
js
stc
inc
or
or
xchg
fimull
aas
addr16
and
cmp
int
xchg
mov
ficompl
push
pop
xchg
insl
imul
scas
imul
cs
pop
mov
fbld
or
push
or
es
jnp
lret
push
call
push
adc
xor
lret
callw
repnz
pushf
mov
ret
popa
push
ds
sub
pop
lret
scas
and
inc
dec
sub
sub
lret
mov
sbbl
jl
dec
or
cmc
ja
sbb
loopne
sbb
pop
inc
jnp
jnp
leave
mov
xor
sbb
mov
dec
scas
mov
rcrb
das
pushf
stc
add
leave
or
shr
lods
dec
adc
pop
addb
imul
in
adc
loopne
and
frstor
mov
pop
dec
jne
mov
je
xor
loope
fsts
sub
pop
clc
shrb
xchg
jb
jle
sub
push
and
stos
pop
mov
js
jg
jnp
insl
add
in
fwait
cli
stos
imul
fildl
out
fcoml
nop
out
imul
rorl
xchg
fadd
loope
shl
shrl
hlt
js
jmp
mov
aaa
mov
arpl
jae
fadds
sbb
inc
enter
rorb
jle
fsubrl
icebp
inc
lcall
mov
jb
sbb
xchg
mov
aaa
add
and
mov
addr16
clc
and
push
into
mov
xchg
outsl
popf
pop
shlb
clc
test
shlb
xchg
pop
popa
rclb
inc
add
mov
mov
mov
mov
rorl
xlat
add
pop
mov
leave
data16
mov
mov
movsl
mov
and
mov
xchg
gs
adc
jecxz
out
ljmp
inc
xchg
into
scas
scas
mov
cmp
inc
pop
mov
repz
repnz
lods
or
add
orl
ljmp
dec
js
push
push
push
add
and
sbb
add
pop
inc
pop
sbb
lock
lret
fsubrs
sbb
xchg
sub
sarl
fisubrs
pop
leave
cmp
or
mov
test
inc
aad
nop
inc
les
loop
arpl
lds
adc
mul
push
add
pop
dec
repnz
pop
stos
mov
lret
add
mov
ljmp
adc
xor
push
xchg
movsl
mov
fwait
xchg
xchg
pop
pop
sub
pop
cmpsl
mov
sbb
mov
inc
or
mov
push
push
pop
pop
ficoml
sub
mov
mov
inc
addl
negl
jae
adc
arpl
aam
lods
push
sar
add
data16
test
inc
mov
arpl
pop
dec
popa
and
sbb
popf
cmp
add
jo
cmp
or
sub
jno
iret
mov
loop
cmp
mov
test
repnz
add
cwtl
jb
call
jne
cltd
pop
and
jbe
inc
in
mov
mov
cli
push
insl
lods
and
push
ret
fcompl
pushf
and
insb
push
andb
sahf
cmp
and
lcall
cmp
iret
mov
mulb
cmpsb
xor
xor
cmp
pop
imul
dec
inc
sub
fbstp
cmp
movsl
sub
ds
push
or
dec
lahf
mov
sub
fildl
sub
xchg
or
or
das
lds
inc
jge
mov
mov
inc
leave
fs
dec
or
test
jno
lods
jecxz
push
xchg
outsl
aam
cltd
hlt
or
mov
dec
jb
gs
jg
jge
add
mov
js
mov
popa
xor
xor
xchg
icebp
adc
movsl
sbb
in
les
out
aas
jge
and
jge
xchg
sbb
pop
mov
clc
fcomip
cmpsb
test
inc
xor
xor
jno
mov
int
pop
xchg
xor
dec
clc
movsb
sbb
xor
sti
push
add
fsin
js
andl
pusha
fwait
call
aas
add
sti
mov
cmpsl
into
ljmp
jecxz
xchg
and
jne
fabs
push
sti
push
out
repnz
xchg
add
enter
cmp
mov
je
test
jbe
inc
mov
movsl
cmpsb
adc
int
repz
pop
sbb
xchg
add
stos
xchg
nop
jmp
or
test
mov
stc
jcxz
pop
mov
test
fs
insb
pop
add
cmc
adc
roll
add
sbb
cmp
or
repz
mov
push
lahf
push
addb
gs
jae
lret
imul
in
push
je
and
lock
inc
pop
mov
pop
insl
jns
cmp
in
sbb
sbb
push
inc
cs
mov
rcrl
jae
inc
mov
outsl
mov
in
sbb
xchg
and
scas
sub
adc
enter
out
mov
stc
xor
cmpsl
dec
mov
popa
xor
mov
mov
ss
mov
jl
xchg
rcrl
xor
mov
dec
sbb
sahf
dec
xchg
aam
and
pop
and
xchg
test
hlt
mov
or
push
mov
inc
loopne
push
into
negl
sub
fisttpl
xchg
cmpsb
or
out
inc
ret
or
pushl
push
fst
and
xchg
sbb
mov
add
fsts
insl
xchg
mov
or
je
adc
sarb
in
bound
leave
dec
outsb
stc
stos
rolb
sub
sti
fsubs
insb
jecxz
push
jo
jmp
push
cld
shll
sub
mov
sti
jecxz
ljmp
jmp
jp
jae
mov
cmpsl
out
jle
dec
rorb
jae
enter
cwtl
lea
jno
mov
pop
clc
push
loope
ljmp
mov
xchg
or
ljmp
loop
xor
ljmp
sub
das
int3
xchg
add
cltd
ss
pop
in
jg
push
cli
stc
in
std
rep
jle
jbe
stos
movsl
data16
shr
aas
push
pop
xlat
stos
lods
stos
mov
outsb
adc
mov
outsb
xorb
xchg
lcall
shr
sbb
jbe
mov
sub
int3
mov
dec
roll
mov
cmpl
pop
lahf
ds
adc
inc
cmp
cmp
iret
into
jne
std
cmp
pop
xor
or
adc
xchg
jns
dec
into
add
in
adc
jl
shrb
mov
xor
xor
outsb
mov
dec
or
pop
adc
or
sub
lods
push
iret
adc
xchg
cwtl
or
sub
fisttpll
cli
sub
sbb
loopne
cmp
add
xchg
add
and
pop
rorb
popa
fisubrs
fucomi
clc
mov
xchg
and
sbb
cmpsl
movsl
popa
mov
pop
pop
dec
repnz
mov
adc
aas
sub
and
push
cmp
pushf
adc
push
mov
lea
cmp
cmp
xchg
out
in
mov
aam
aas
pop
pop
test
lock
mov
andb
bound
pop
pop
cmp
lret
test
xor
inc
add
sar
push
repz
outsb
ror
scas
ss
or
mov
das
push
aas
test
inc
push
mov
in
inc
stc
insb
push
inc
fisttpll
or
jl
ljmp
enter
das
popa
inc
cmp
test
insb
xchg
pop
aaa
int
push
jo
fs
push
xor
cmp
dec
stc
or
jae
test
out
dec
int3
add
pop
imul
cwtl
nop
sub
sub
or
lcall
int
xchg
lds
xor
xchg
mov
mov
fprem
xor
inc
mov
dec
mov
cmp
xchg
mov
icebp
roll
js
or
and
sbb
xlat
repnz
inc
mov
fadds
sahf
repz
jae
scas
mov
bound
out
or
and
test
push
ljmp
arpl
pop
adc
mov
xchg
dec
es
mov
mov
das
call
lds
or
dec
cmp
xor
sbb
add
mov
push
xchg
or
or
in
loope
xor
pop
pop
out
shlb
adc
xchg
mov
js
adc
movsl
jno
in
or
mov
adc
pop
and
adc
adc
xor
dec
cmp
arpl
nop
jno
imul
cmp
jecxz
out
adc
inc
sub
mov
loopne
xor
sbb
pop
cmp
add
inc
cmpsb
in
out
int
in
mov
xor
sbb
rcrl
mov
add
int
jge
pop
les
test
pop
pop
fimull
imul
add
jge
dec
outsl
ljmp
enter
sbb
scas
setl
push
pop
out
iret
inc
jae
enter
push
mov
rol
add
test
fcom
jb
dec
push
stc
push
xchg
int3
xchg
outsl
incb
clc
bound
divb
mov
imul
fisttpll
mov
inc
lret
test
jl
ds
jne
mov
inc
leave
push
jb
inc
sub
lods
push
in
xchg
and
rcrb
lds
or
xchg
sbb
push
movsb
jno
repz
jnp
es
lahf
imul
inc
ret
sti
add
pop
inc
adc
test
pop
or
dec
xor
popf
pushf
clc
scas
jge
cmp
repz
add
stos
sarb
scas
dec
or
iret
cmp
mov
in
push
adc
xor
sbb
stos
jecxz
fiaddl
inc
push
in
js
pop
enter
jne
repnz
dec
fs
cmp
sbb
cmp
sbb
adc
clc
sarb
sub
sub
jae
xchg
lret
dec
idivl
outsb
inc
jno
cld
push
mov
cmc
mov
test
ret
je
jb
lret
mov
sub
jecxz
add
int3
rol
xor
or
inc
pop
xor
clc
imul
sbb
stc
cmp
and
ret
dec
insl
and
frstor
and
shll
mov
xor
or
add
out
push
roll
stos
lods
repz
outsb
xchg
rolb
aad
int3
dec
gs
sarl
fsubs
nop
jo
iret
sub
dec
xchg
sub
outsl
arpl
movsb
fiaddl
mov
fs
push
push
fbstp
jnp
lods
pop
mov
xchg
jnp
fnstenv
cmp
adc
sti
outsb
es
pop
test
fbld
push
inc
mov
xchg
lods
sub
jl
lock
or
push
sbb
insb
in
push
fistl
pop
inc
mov
sub
jns
test
jg
bound
adc
int3
stc
test
pop
mov
sbb
stc
cmpsl
das
jmp
outsl
sbb
iret
sub
in
and
int
mov
mov
adc
push
sub
sbb
adc
sbb
stos
imul
ja
jp
mov
in
sbb
clc
sub
inc
push
stos
sbb
enter
push
adc
sbb
orb
les
ss
repz
pop
dec
in
mov
add
inc
mov
adc
push
pop
jno
pushf
or
decl
fisttps
sahf
inc
cwtl
js
sbb
adc
jns
clc
dec
dec
adc
lds
dec
push
pop
sbb
dec
rcll
sahf
sub
cmp
dec
inc
lods
or
pop
add
call
mov
outsb
in
mov
arpl
gs
or
test
cmp
jmp
and
sub
mov
inc
dec
sbb
jae
std
dec
sub
gs
fstpt
lock
sarb
inc
decl
das
cmp
adc
jae
out
dec
xor
jle
push
shl
sbb
dec
ret
add
loopne
les
ja
xchg
xchg
and
cwtl
sbb
int3
cmpsl
pushf
sub
mov
idivl
testl
push
comiss
or
popf
pushf
pop
lock
lret
js
shll
jo
push
movsl
test
sub
subl
xor
sbb
loopne
loopne
cli
repnz
push
ficomps
cs
or
rol
pop
adc
sbb
in
data16
lret
aas
lret
lahf
clc
ficoms
enter
fmulp
mov
movl
push
add
mov
cmp
jae
xor
and
pop
hlt
xor
cmpsl
cmp
jns
mov
fnstenv
xchg
std
xchg
or
dec
mov
cli
stc
ljmp
mov
sub
cmc
sarl
mov
mov
jnp
mov
sti
mov
dec
push
fldcw
movsl
mov
add
test
xlat
pusha
mov
out
and
fldenv
push
pop
add
push
in
mov
or
inc
xorb
jnp
adcl
jb
lret
mov
inc
adc
xchg
mov
adc
movsl
mov
pop
xor
jno
and
jae
sbb
xchg
cs
cmp
ljmp
ret
andl
nop
shrl
arpl
std
ljmp
cmp
lea
mov
loope
push
shlb
pop
and
cmp
pop
mov
push
add
enter
in
fnstsw
and
pop
sarb
je
inc
outsb
xchg
cmp
cmp
mov
pop
dec
inc
andb
mov
cmp
sub
sbb
repnz
cmp
scas
outsl
iret
sub
test
add
in
movsl
aas
mov
mov
inc
ret
adc
mov
loopne
out
adc
jb
and
pop
jbe
arpl
insl
loop
jb
and
inc
stc
mov
daa
xor
movsl
dec
mov
lret
xor
mov
add
movsl
jne
pop
pop
adc
inc
fwait
lret
push
loopne
push
lret
xchg
orl
stc
pop
inc
add
in
add
hlt
adc
ret
or
cmp
adcl
dec
dec
dec
pop
mov
out
loope
mov
jb
or
mov
out
es
mov
xor
jne
fidivl
cs
adc
or
inc
cmpsl
in
add
sbb
mov
cmpsl
inc
in
in
gs
pop
jnp
xor
and
xchg
jg
xor
daa
pop
xchg
fcomps
mov
test
jecxz
cmp
inc
insb
mov
mov
shrl
push
sbb
lret
mov
stc
mov
xchg
jge
bound
das
mov
out
dec
sub
cmp
cmc
loopne
pushf
shl
stos
jne
xor
fdivrs
sahf
movsw
loopne
adcl
into
xor
sbb
into
jae
test
or
mov
xchg
jg
mov
push
mov
test
mov
cmp
sub
adc
jnp
jo
imul
je
xchg
pop
data16
fcompl
mov
pop
pop
or
in
jbe
imul
and
movsb
cmc
adc
push
or
adc
jb
popa
test
lock
test
jg
cmc
push
sbb
cmp
pushf
lds
inc
adc
test
lcall
xchg
popf
leave
pop
jge
adc
xorb
roll
daa
loop
rclb
filds
pop
jge
insb
push
orb
icebp
xor
test
cmp
mov
not
imul
push
mov
push
lds
test
cwtl
loopne
insl
mov
mov
test
incl
sbb
push
stos
mov
jmp
jnp
push
jb
adc
cltd
lret
push
sahf
fists
pop
sbb
loope
loop
fsubl
in
push
test
xchg
int
xor
shll
sbb
xchg
xchg
js
xchg
sbb
inc
mov
out
jmp
cli
adc
mov
test
aaa
lahf
jbe
sub
jne
and
mov
sub
mov
mov
mov
aam
orl
inc
jne
dec
cld
mov
nop
xchg
push
test
fcoml
lds
fidivl
arpl
or
sub
test
mov
sub
push
scas
mov
cmp
divl
dec
stos
imul
mov
sti
loope
cs
aas
mov
pop
leave
or
push
adc
cltd
xor
ljmp
insb
mov
int3
cmp
mov
jne
xchg
sbb
outsl
adc
sti
mov
jae
mov
sbb
jo
push
das
jmp
inc
add
fistpll
stos
or
daa
pop
jno
xor
mov
add
and
cmp
push
pop
stc
sbb
push
rorb
jmp
fdivl
add
mov
test
pop
test
movaps
loope
pop
inc
cmpsl
ret
in
lds
push
mov
in
mov
push
and
stos
clc
lds
sub
dec
addr16
add
clc
cmc
add
xchg
xchg
push
adc
add
sbb
lods
loopne
fisttpl
ss
leave
adc
es
and
or
or
jo
xor
rcrl
push
mov
dec
repnz
incb
push
mov
add
fcomps
clc
filds
sbb
lahf
jnp
inc
imul
cmp
adc
push
add
xchg
dec
nop
fldenv
clc
xor
mov
pop
icebp
adc
out
lret
icebp
lret
mov
in
fdivr
push
xlat
mov
push
dec
js
cmpl
stos
popa
dec
pop
je
ss
arpl
sbb
push
push
xor
jmp
pop
js
inc
lds
sbb
mov
lods
jne
mov
fdivrl
sbb
mov
sub
fs
fidivrl
pop
andl
xchg
scas
pop
pushf
jge
cs
cmp
clc
mul
stc
addr16
or
push
or
test
xchg
in
xchg
sub
call
dec
push
adc
push
jp
jb
mov
andb
aad
jnp
ss
push
xchg
lods
imull
cmpl
add
cmp
mov
ja
and
pop
rcl
pop
mov
arpl
out
adc
jne
arpl
mov
mov
sbb
test
lods
stos
mov
lea
repz
sarb
lret
mov
pop
lods
aaa
ficoms
add
mov
sub
lods
or
inc
sub
loopne
add
aaa
xchg
and
popf
pop
mov
mov
popa
jecxz
ss
ret
ljmp
push
jle
inc
adc
loop
stos
xlat
into
inc
xor
lods
lea
jl
mov
mov
int
jne
mov
push
xchg
inc
inc
test
pop
push
pop
jl
icebp
push
push
add
dec
pushf
mulb
dec
daa
pop
sub
dec
mov
aas
push
cmp
sub
add
je
mov
pop
mov
hlt
setp
test
shl
lds
add
es
aaa
aas
pop
sub
cmpsl
pop
mov
mov
xor
lcall
dec
xorl
pop
sub
mov
mov
data16
in
sarl
mov
aas
jne
pushf
sub
jp
or
add
add
cmp
add
out
xchg
xchg
daa
inc
int
out
jp
push
insb
adc
es
fistps
sbb
inc
test
sub
mov
adc
xor
lods
outsb
add
xlat
jns
movsl
mov
mov
gs
xor
mov
mov
bound
pushf
call
ret
cmpb
pop
cmp
push
test
fsubrs
cmc
daa
jecxz
inc
hlt
jle
adc
lods
jno
push
pop
push
xor
jae
dec
pop
dec
out
mov
push
adc
ds
sub
jo
repz
out
mov
add
lods
stos
out
mov
cwtl
push
icebp
pusha
lods
cmpsl
inc
je
sbb
mov
ds
push
cmp
mov
jg
testb
or
leave
fs
in
jmp
adc
mov
xchg
scas
cld
jo
ret
push
inc
cmp
push
icebp
addr16
sbb
movsb
idivl
mov
and
stos
iret
sub
aaa
arpl
fdivp
lock
pop
add
pop
mov
mov
incl
mov
xchg
shrb
pop
sahf
xor
mov
int
sbb
es
lock
sbb
mov
mov
mov
shll
and
mov
aas
icebp
jge
int
xchg
mov
out
pop
nop
push
pop
dec
xchg
fwait
std
add
inc
sub
jecxz
mov
fwait
jg
push
inc
or
sbb
ficomps
add
stos
hlt
jge
mov
call
icebp
das
icebp
loopne
cli
pop
xchg
nop
dec
or
je
mov
insl
stos
cld
sbb
mov
test
ret
jg
sbb
adcb
lcall
cmpsl
aad
push
test
xor
mov
push
dec
mov
add
sbb
loopne
jns
lcall
enter
cmp
push
dec
xlat
iret
xor
or
test
mov
fwait
or
inc
les
cmp
test
movsl
cmp
outsl
cmp
daa
inc
dec
xchg
pop
shll
inc
in
add
lret
cltd
ja
mov
aaa
in
aas
out
pop
fstl
das
sub
jne
xor
mov
jecxz
mov
inc
loopne
roll
mov
xchg
xor
hlt
les
push
xlat
inc
jbe
sbb
and
mov
jg
ficoms
call
pop
sub
mov
lock
repz
imulb
popl
popf
nop
dec
xor
or
mov
lret
jmp
pop
push
cmpsb
adc
or
mov
inc
aam
in
cltd
into
shll
adc
sbb
pushf
or
mov
cmp
pop
xor
add
out
sbb
inc
enter
sub
mov
movsb
das
mov
aad
mov
add
rolb
jecxz
popa
js
mov
pop
mov
pop
stc
lds
and
daa
mov
data16
xchg
div
iret
fsubrs
rolb
cmc
xchg
and
dec
aam
fwait
addr16
adcl
and
mov
test
test
xchg
in
cmpsl
add
invd
std
fwait
insl
mov
movb
repnz
push
pop
fmulp
jno
pop
lret
andl
in
nop
jecxz
and
xchg
jmp
push
jno
push
xor
dec
inc
sub
fistl
lods
pop
outsb
xor
push
sub
xchg
lods
adc
and
mov
pop
sahf
sbb
dec
push
ret
or
out
stc
mov
fisubl
loope
jmp
cs
xor
jbe
jne
mov
mov
add
adc
fwait
xchg
mov
pop
jbe
loopne
or
xor
and
pop
lods
ds
mov
arpl
ljmp
pushf
mov
stc
lret
mov
add
push
jp
into
cmpsl
mov
cltd
and
jp
xor
dec
dec
and
js
cmp
or
mov
iret
insl
shll
clc
adcb
repz
clc
lcall
fnstenv
push
mov
daa
or
popa
enter
cmp
rcr
push
xchg
inc
add
adc
call
popf
and
aad
push
sti
cmp
dec
cmp
jmp
loopne
xchg
popl
imull
faddp
jp
leave
push
clc
dec
pop
jmp
jns
popa
loopne
mov
push
xor
mov
cmp
mov
dec
bound
sub
test
fsubrl
mov
ss
ds
jne
jmp
push
js
cmpsl
mov
and
inc
lock
push
jmp
push
xchg
adc
shlb
push
mov
add
cmp
push
cwtl
or
insb
dec
push
sub
lock
fstps
loope
ja
fcmovnu
or
push
dec
loope
test
and
jns
pop
sub
imul
pop
add
aam
aas
js,pn
xor
call
negl
gs
push
outsb
repz
sti
push
cs
fildll
mov
hlt
mov
movsb
lods
std
inc
sbbb
add
and
lds
out
add
xchg
inc
mov
jge
jne
mov
and
cmp
jge
inc
jne
orl
fs
cld
rcll
aas
inc
xor
or
add
call
xchg
mov
sbb
cmc
add
adc
rsm
sub
or
lcall
push
out
stos
pop
or
hlt
enter
add
inc
bound
cmp
or
push
lret
out
mov
push
mov
inc
add
xor
cmp
pushf
inc
dec
dec
scas
sbb
push
pop
mov
jno
dec
fldcw
ficomps
arpl
xorl
rcll
shlb
pop
add
lods
push
cmp
add
and
call
rorb
lea
adcb
movsb
push
lods
sahf
inc
xor
jge
stc
adc
cwtl
cld
inc
loope
leave
iret
lcall
lods
notb
xor
mov
inc
dec
ret
iret
into
andb
xchg
jg
pop
adc
mov
or
push
cmp
rcl
mov
jns
repz
cld
or
mov
sbb
in
notb
or
push
mov
jle
push
or
cmp
and
mov
jl
loop
mov
ljmp
dec
out
pop
jae
notb
inc
mov
pop
gs
jl
xor
xor
lret
movsb
adc
jge
push
adcb
xchg
jge
jp
inc
data16
push
clc
jge
push
cmpsb
adc
mov
inc
jns
or
xchg
arpl
cmp
adc
jl
jl
add
jecxz
mov
mov
cmp
cmp
adc
int3
pop
xlat
fwait
push
adc
das
ljmp
adc
xor
loope
mov
cmp
mov
jge
push
dec
push
pusha
test
aad
mov
ja
outsl
mov
aam
icebp
sbb
adc
mov
adc
std
daa
push
out
pop
inc
cmp
stos
mov
fwait
inc
dec
xchg
cwtl
repnz
pop
inc
xchg
jb
mov
fadds
mov
or
stc
xchg
add
sub
cmpsl
call
icebp
lret
sbb
adc
test
test
mov
or
into
jg
cmp
cwtl
and
int
xor
xor
or
pop
mov
or
ds
jno
loopne
add
and
pop
rcrb
addb
jge
and
sbb
test
dec
mov
or
sahf
ja
test
mov
sahf
inc
scas
inc
or
lret
cmp
lods
dec
sub
and
dec
xchg
inc
loop
in
pop
xorl
xchg
jb
jge
push
inc
enter
xchg
cmp
mov
adc
or
lds
hlt
stos
mov
fstpl
xor
lods
sub
add
es
js
cmp
and
fimuls
cmpsl
xor
mov
leave
mov
aam
sbb
ds
inc
clc
mov
pushf
and
fs
cmp
inc
jge
xchg
inc
jge
xchg
push
mov
adc
xor
aaa
int3
cmp
sbb
jge
std
and
popf
rcl
pop
aas
sbb
loop
mov
fldl
adc
lock
jmp
outsl
into
jns
jo
loopne
mov
jecxz
mov
notb
andl
scas
fistpl
adc
jg
sbb
push
les
push
scas
lods
rcll
jl
mov
lods
push
lods
sti
icebp
push
jno
enter
aad
enter
jbe
sbb
and
aad
in
add
push
xor
test
rorb
mov
push
cs
out
bound
leave
adc
pop
push
and
push
cld
fmuls
outsl
stos
ja
pop
int3
popa
xor
jmp
jp
and
icebp
aas
stos
inc
ja
je
inc
sti
mov
leave
outsb
test
sbb
xchg
fidivl
cwtl
sbb
rcll
js
cwtl
adc
inc
and
int
push
fadds
jg
repz
jge
xchg
jmp
or
pop
pop
fdivl
icebp
pop
testb
pop
aas
mov
adc
pushf
adc
xorl
dec
shrl
jecxz
inc
outsb
js
add
cmpsb
popa
adc
call
pushf
xchg
or
shll
outsl
xor
loope
movsb
testb
dec
sbb
dec
mov
dec
inc
je
sbb
xor
jbe
lcall
mov
pop
jg
roll
adc
and
repz
xchg
ret
in
ss
sbb
aam
imul
or
movb
sbb
mov
fwait
enter
das
popf
push
adc
std
es
dec
in
jle
jb
inc
lock
orb
mov
cli
pusha
and
out
sbb
out
jmp
xor
adc
ret
leave
mov
cltd
push
adcl
and
mov
mov
push
inc
jns
lock
cmp
int3
xchg
xor
lcall
js
not
testb
shll
mov
cmp
inc
iret
push
mov
fistpll
cs
add
cli
inc
mov
orb
sbb
jl
in
scas
imul
dec
sub
fimull
ja
mov
mov
shll
cmp
push
mov
mov
std
lret
dec
dec
or
out
add
repz
test
mov
fwait
stos
pop
ss
mov
and
inc
mov
negb
nop
mov
push
aas
dec
add
push
sbb
pusha
push
jnp
adc
sub
xchg
jo
mov
test
push
loop
xlat
push
and
ud2
dec
aam
mov
jo
insb
lret
out
jmp
pop
and
or
shll
cld
imul
sbb
sbb
icebp
inc
jge
aaa
fbstp
push
cmc
ret
inc
sub
pop
mov
imul
pop
test
adc
vmovhps
pop
push
mov
jecxz
loop
sahf
xor
mov
cltd
or
or
movsl
fcmove
leave
insl
lods
dec
sbb
aas
and
test
pop
cmp
mov
mov
xor
movsl
jnp
push
lea
jns
dec
or
enter
clc
xchg
cmpsb
out
repz
inc
xor
sbb
repnz
pop
xchg
imul
inc
pushf
push
sub
mov
rcl
pop
ror
outsb
out
popf
pop
fs
repz
in
stos
aad
loop
jns
addb
cmp
mov
daa
sbb
cmp
jne
pop
cmp
ja,pt
aad
xlat
repnz
inc
popa
add
push
shl
fldenv
fwait
ds
pop
cmpsb
sbb
shrb
lds
dec
sti
fisubs
or
divb
cwtl
and
lret
addb
mov
jg
fs
xchg
jnp
sub
xchg
mov
jno
push
mov
sub
and
push
push
sub
sbb
sarl
data16
pop
jmp
xlat
call
lcall
xchg
mov
xchg
mov
push
cmpsl
jmp
xchg
and
jge
adc
in
mov
xchg
pop
fisttpl
movsb
dec
mov
test
imul
movsl
loope
insl
push
inc
jne
mov
jne
adc
cmp
les
or
sbbl
out
mov
leave
sbb
js
arpl
and
mov
out
inc
push
and
push
lock
inc
mov
jae
into
sbb
sub
int3
add
and
mov
pop
stos
stos
pushf
js
xor
dec
push
rcrl
sti
pop
mov
fcmovb
cmp
push
dec
icebp
mov
jge
stos
push
sbb
push
or
cmpsl
insl
push
popa
and
jge
or
mov
push
inc
push
cmp
xchg
mov
mov
xchg
outsl
fxch
sti
or
out
jge
fsubl
or
mov
push
pop
mov
aad
xlat
hlt
lds
jb
ds
fisttpll
and
fisubrs
arpl
sahf
cmp
xor
sub
xchg
or
sbb
cmc
outsl
mov
push
xor
shlb
push
aam
push
mov
jae
or
fdivs
lret
inc
inc
out
ljmp
into
imul
inc
inc
mov
aas
mov
inc
fisubs
and
fiaddl
adc
add
orl
inc
mov
in
inc
cwtl
xor
mov
sbb
push
aaa
repnz
enter
enter
mov
add
lret
pop
pop
xchg
cmp
xchg
jle
xchg
mov
mov
or
sbb
or
and
add
jmp
sbb
xor
adcl
sub
in
repnz
add
repz
stos
daa
shll
and
mov
insb
and
popa
fs
gs
jmp
lods
fwait
mov
mov
xchg
mov
xchg
cmpsl
je
adc
cmpsb
test
aas
jae,pt
outsb
push
stc
sahf
sti
add
cli
add
lods
jae
dec
dec
fnsave
cmp
push
out
imul
hlt
adc
mov
xchg
jg
mov
mov
xchg
test
xor
stc
push
sub
mov
rcl
test
or
pop
in
movsl
je
push
dec
pop
mov
add
or
xchg
push
sub
push
or
lea
dec
bound
ficoms
mov
jle
adc
arpl
out
xchg
mov
lret
mov
jle
xchg
jp
popa
adc
push
outsb
push
mov
xchg
adc
es
add
rorl
jne
cltd
dec
mov
shrb
in
orl
aad
add
sub
ficoml
pop
faddl
int3
cmpsb
out
xchg
js
lret
ss
iret
daa
mov
pop
xchg
push
pop
mov
addr16
inc
mov
push
mov
xchg
mov
mov
sahf
push
mov
mov
cmp
pop
and
pop
lods
mov
ja
sbbb
pop
dec
push
mov
mov
icebp
add
jg
das
xchg
xlat
jno
orb
fcmovbe
and
testl
jnp
sbb
jecxz
out
inc
int
xlat
pop
push
mov
lds
repnz
shll
dec
jno
push
lret
xor
icebp
pop
sub
and
popf
push
add
or
add
dec
lahf
inc
mov
adc
pop
rol
popf
mov
ret
dec
sub
loope
adc
lcall
test
inc
sbb
dec
lods
imul
repz
jge
js
adc
fistpll
and
mov
sarl
pop
or
jno
jle
jo
xlat
out
inc
push
push
xor
scas
mov
out
or
cli
outsb
lods
jl
fldcw
cltd
hlt
or
mov
inc
frstor
fmull
jge
or
sti
cmpsb
or
and
xlat
sti
inc
xor
pop
pop
mov
dec
sub
mov
es
ret
cmp
daa
adc
jmp
push
xor
adc
jae
fwait
loop,pn
hlt
sbb
jne
mov
fbstp
sti
mov
push
inc
shll
jbe
pop
scas
in
pop
cld
cltd
xchg
and
fsubrl
outsb
and
jg
stos
aas
adc
dec
nop
cmpsl
cmp
sbb
sub
dec
mov
xchg
jl
inc
fcoms
lcall
repz
xchg
gs
adc
repnz
cli
sbb
movsb
bound
push
xchg
xchg
push
mov
sbb
inc
mov
adc
jo
cmc
scas
scas
or
inc
mov
jmp
or
lods
jle
add
out
jp
cltd
sahf
push
and
pop
enter
js
insl
loope
stc
lcall
rorl
orl
mov
fnstcw
jbe
push
add
dec
dec
imul
sahf
cmp
int3
xor
inc
cmpsl
lret
es
inc
pop
push
shll
sub
mov
xchg
and
leave
xor
notb
dec
jns
sub
loop
movsb
pop
clc
dec
mov
xorb
mov
scas
dec
and
outsl
and
ret
mov
add
jnp
imul
enter
cmc
dec
cs
js
mov
mov
scas
add
insl
shl
cmc
xchg
fidivs
in
daa
mov
into
mov
das
lahf
test
mov
jns
dec
mov
dec
sub
cmpl
aaa
push
mov
push
out
std
sbb
stc
movsb
rcll
aam
fnstcw
pop
or
xor
jo
sbb
inc
arpl
aam
ljmp
dec
scas
and
mov
test
and
sub
sar
dec
dec
xchg
lret
mov
mov
add
shr
fsubl
pushf
jecxz
ljmp
jae
or
push
lret
xor
movsb
dec
jg
xchg
icebp
add
jb
jo
push
jg
push
in
out
push
repnz
xchg
testb
mov
imul
dec
or
pop
jmp
mov
dec
jl
addr16
jp
lahf
jno
aaa
adc
pop
mov
test
jb
xchg
mov
push
sbb
cmp
dec
test
es
scas
sbb
dec
pushf
das
inc
out
jle
insb
test
call
inc
cmp
je
nop
push
mov
loope
pop
fldl2e
out
jbe
stc
and
stos
addr16
sub
inc
push
enter
push
pop
mov
movsl
lahf
out
ficompl
fs
aam
jmp
ror
xchg
js
cmpsl
dec
je
cltd
cmp
or
pop
pop
mov
negb
js
push
sub
mov
movsb
ret
jecxz
inc
cltd
push
filds
pop
mov
mov
sub
add
int
jo
cs
je
pushf
dec
mov
adc
sarb
aas
jbe
fs
pushf
ja
sbb
add
popf
cmc
jo
push
rol
and
ror
into
xchg
jl
out
adc
jp
ficomps
cmp
loop,pn
sub
sub
mov
and
andps
sbb
fsubl
pushf
fists
or
sti
push
mov
xor
out
mov
mov
push
mov
and
lret
ss
adc
cmp
mov
and
mov
mov
ficoml
and
pop
mov
stc
mov
push
or
lods
xchg
imul
stos
sbb
cmpb
lock
ret
or
cmp
cmc
sbb
cmp
outsb
out
pop
sub
dec
adc
mov
add
jae
fwait
sbb
loopne
or
xor
mov
fs
jbe
and
mov
movsb
fmuls
xchg
add
inc
scas
mov
mov
into
ljmp
cmp
das
adcl
push
mov
rcll
mov
xchg
add
pop
sub
adc
stos
mov
cld
jl
and
pushf
jg
in
iret
out
lret
lcall
pop
orb
dec
sbb
loop
pop
lret
push
inc
push
mulb
xchg
push
iretw
lcall
je
adc
nop
int3
xor
sarl
add
sub
mov
xchg
in
aam
or
sbb
imul
leave
dec
dec
js
dec
repnz
jns
es
lods
sub
roll
lods
scas
shll
in
icebp
js
sbb
mov
enter
mov
sub
cmc
or
jmp
test
dec
inc
aas
mov
or
int
xlat
out
mov
adc
adc
imul
jbe
adc
mov
adc
push
shrl
push
fwait
add
mov
sbb
inc
cmpsl
cwtl
rclb
fsubrl
sbb
loop
or
xlat
aam
jae
ret
dec
jecxz
jbe
daa
sahf
ljmp
nop
sub
loop
stc
jmp
inc
lret
je
rcl
push
call
mov
out
in
mov
xchg
aad
std
outsb
or
lcall
addr16
bound
addb
xor
cmp
xchg
cmc
outsl
ss
xchg
rorb
loope
sahf
fs
mov
shlb
jecxz
jmp
sub
fimull
and
ret
stos
xor
xor
imul
mov
cwtl
mov
out
mov
stos
test
xchg
adc
cmp
adc
in
mov
lret
sbb
sbb
or
push
xchg
in
xchg
xor
aaa
jne
ljmp
loopne
in
lods
fcmovb
xor
or
jne
pop
into
lds
cltd
xor
js
jp
pushf
mov
scas
mul
lahf
addr16
test
repz
jbe
push
sub
dec
jae
ret
or
adc
imul
mov
stos
fwait
push
sbb
add
push
pushl
jecxz
add
mov
pop
lods
xor
push
pusha
dec
shr
add
ljmp
sub
dec
jle
bound
mov
shlb
mov
mov
jbe
in
adc
psllw
aaa
les
and
ret
inc
lcall
push
pusha
mov
ror
mov
hlt
pusha
jg
mov
pop
xor
jns
in
sbb
data16
outsb
mov
insl
sbb
fnstcw
mov
pop
pop
jl
and
and
outsl
ficomps
outsl
push
dec
shll
rclb
rcpps
sbb
pop
add
icebp
in
pop
and
mov
imulb
cmp
add
insb
push
cmp
jo
cmp
shlb
ljmp
pop
mov
loope
cmc
add
xor
xchg
lds
jmp
cmp
jne
icebp
jg
pop
scas
pop
lods
rclb
into
call
iret
jbe
ficompl
leave
dec
test
mov
push
pop
cmp
ljmp
dec
xchg
es
data16
daa
sub
stos
inc
les
cmpsb
sub
sub
pop
mov
push
push
pop
and
test
and
push
push
fldl
push
cmc
jne
pushf
test
test
inc
inc
xchg
shlb
mov
pop
pushf
jmp
in
sub
jl,pt
sub
xor
fucomp
xchg
sub
cmc
push
fnstsw
dec
outsb
sbb
lahf
lock
ss
mov
mov
gs
insl
fidivrs
mov
pop
mov
out
scas
imul
fs
cmpsb
mov
jmp
xchg
sbb
and
es
in
pop
dec
aad
fdivrl
push
mov
sub
push
aaa
lock
xor
xchg
cmp
push
pop
in
inc
sbb
xchg
jae
dec
lea
fwait
adc
add
sub
sbb
loopne
sbb
cld
push
sbb
or
mov
cmp
es
dec
dec
in
push
out
jg
rcrb
in
out
std
mov
ja
add
pushf
or
ficoml
cmc
pop
cmpb
mov
push
mov
sub
jl
test
jb
adc
ds
jecxz,pt
movups
lock
popf
out
mov
icebp
add
xchg
scas
cmp
out
and
or
mov
push
or
xchg
sub
loope
xchg
scas
or
popa
int3
push
shll
cmp
push
aad
jle
pop
scas
clc
stos
dec
in
out
mov
loope
push
inc
adc
xor
cmp
push
and
mov
dec
mov
xchg
mov
mov
pop
push
pop
push
sub
sbb
cmp
jl
out
loop
ret
cmp
scas
data16
int3
xchg
repnz
std
loopne
orl
inc
test
jmp
jo
lock
jns
fs
rcrl
xchg
fxch
addr16
sub
fisttpl
adc
or
cmpsl
loope
out
lret
outsl
hlt
int
mov
cmpsl
push
or
aad
es
jbe
pop
stc
loop
fisubl
push
int3
and
imul
out
adc
jmp
xchg
pusha
adc
fucomi
movsl
pop
loope
repz
inc
jb
data16
sbb
add
adc
push
mov
cmpsl
mov
fs
dec
inc
mov
inc
mov
loopne
outsb
test
mulb
cltd
loope
inc
push
sub
fistps
int3
mov
lea
jp
mov
dec
mov
loope
int3
dec
or
xchg
or
mov
hlt
shl
scas
jo
xor
push
jne
cmp
push
std
adc
inc
dec
sub
stc
imul
sub
and
cwtl
movswl
pop
xor
pushf
mov
popf
or
repz
in
and
jbe
sbb
ffreep
sub
xor
lock
mov
cmp
das
jo
test
movsb
push
mov
pushf
rorl
lock
lock
ret
cmpsb
out
aad
jmp
out
mov
pop
lock
push
fimuls
push
inc
aas
and
dec
clc
flds
cmpsb
neg
push
out
in
data16
add
xchg
in
or
add
cwtl
xchg
arpl
les
jnp
aam
out
mov
leave
cmp
imul
inc
ret
jg
push
clc
cmp
loopne
inc
loope
jmp
subb
test
pop
adc
hlt
arpl
mov
pushf
or
std
mov
imul
sbb
add
mov
sub
movsl
push
xor
mov
repz
scas
int
xlat
xor
int
fwait
insl
das
cmp
lods
adc
fidivrs
sub
push
call
mov
push
mov
pop
out
sahf
mov
lret
shlb
or
and
pusha
mov
dec
xchg
push
dec
fmuls
cmp
adc
sub
jne
xchg
xor
push
dec
sbb
adc
hlt
scas
sbb
enter
popa
adc
mov
mov
cltd
sti
je
imul
fldl
adc
test
jb
dec
add
pop
push
dec
xchg
je
push
out
leave
test
push
mov
repnz
mov
push
enter
pop
inc
sbb
repnz
hlt
mov
dec
push
lcall
dec
pop
pop
inc
push
mov
xor
add
das
mov
mov
enter
scas
mov
push
mov
mov
and
xchg
adc
in
insb
xchg
cwtl
xor
sti
test
xchg
cld
insl
push
lods
pop
dec
std
push
xchg
fistpl
mov
mov
out
sub
mov
pushf
pop
sub
xchg
cli
ret
xchg
inc
push
or
es
mov
repnz
fnstsw
inc
int
cs
rcrl
mov
inc
in
movsb
sbb
xlat
cmc
sbb
test
loop
outsb
and
aam
mov
ficompl
and
or
mov
or
lcall
mov
push
xchg
add
pushf
int3
cmp
jae
push
dec
xlat
sub
or
roll
dec
int
imul
xor
adc
or
lea
pop
lods
add
stos
imul
cmp
xchg
cmp
notl
mov
inc
add
push
out
ret
sbb
inc
scas
cmp
inc
in
adc
push
xor
or
jmp
sub
or
cmp
aas
int
shrl
jge
movl
cld
aaa
ret
and
stos
enter
into
dec
sahf
inc
stc
push
iret
push
bound
es
adc
aad
sbb
popf
lahf
loope
jbe
sahf
loop
mov
xchg
adc
mov
add
adc
leave
insl
mov
xchg
mov
call
add
jle
sbb
test
or
sub
and
push
or
cmp
orb
out
fwait
mov
xor
add
addr16
pop
jne
fsubl
xchg
rcrl
sbb
nop
dec
out
loop
inc
push
push
push
loope
lcall
pop
pop
pop
in
cmp
enter
mov
popa
call
cli
loopne
inc
call
xor
fcomip
push
sbb
pop
daa
jge
xchg
pop
ret
rol
sti
outsb
mov
inc
xchg
lahf
or
cmovp
inc
sahf
outsl
push
dec
jo
pusha
mov
rdtsc
cmpsl
addl
push
cmp
movsl
addb
and
ljmp
outsl
into
mov
push
cld
or
int
mov
loopne
ss
fsubs
sbb
jae
cmc
jne
push
xchg
std
pop
test
jge
jbe
outsb
dec
adc
fmull
or
out
pusha
mov
fidivl
adc
and
inc
es
fwait
mov
testl
cltd
sbb
adc
add
in
ja
das
std
sub
lea
stos
sbbl
jl
test
add
xor
das
into
stos
idivb
inc
int3
int
mov
jl
xor
movsl
out
fimuls
shrb
rorl
or
std
cmp
cwtl
push
in
mov
shlb
insl
dec
das
pop
sbb
pop
in
mov
push
pop
aam
sbb
push
sbb
mov
sub
and
mov
pop
jno
cmp
fdivs
cmc
imul
iret
pop
movsb
sarb
fstpl
iret
xlat
dec
in
imul
outsl
aad
push
out
or
fcoms
out
fmuls
pushf
aam
test
sub
out
sti
aam
mov
scas
add
nop
out
cmpsl
scas
addr16
jle
cmp
or
repnz
fs
dec
das
adc
or
dec
xor
jne
shl
les
fstp
mov
add
xchg
in
mov
cmp
dec
xchg
arpl
pop
insl
xchg
movsb
pop
loope
std
mov
aad
jnp
pop
les
push
add
sbb
in
cmp
xor
nop
cltd
loopne
cmp
das
push
mov
sbb
adc
and
rcrl
mov
xchg
cmpsb
and
or
pop
xlat
jge
outsl
pop
sbb
gs
lods
in
dec
cltd
mov
jl
xor
mov
cmp
mov
scas
and
int
add
adc
jle
sub
inc
sbb
mov
sahf
out
nop
cmpsb
inc
dec
push
in
dec
adc
movl
push
enter
mov
push
or
loopne
out
or
lahf
leave
or
inc
jle
iret
jno
loopne
in
pop
in
aaa
in
adc
je
push
adc
push
pop
mov
enter
cs
lret
xor
and
in
push
jnp
test
push
jecxz
addb
sarl
sbb
fwait
pushf
xchg
inc
int
adcl
cld
imul
fwait
pushf
mov
sub
aaa
pushf
loope
sarb
scas
mov
add
pop
and
sbb
add
add
rolb
lods
sahf
mov
jmp
pusha
xor
insl
adc
fsubrl
and
shll
mov
jge
movsb
add
cmp
cmp
dec
push
cmovne
shrb
mov
sub
fidivl
lods
push
inc
in
repz
rorb
dec
xor
sbbb
mov
pop
or
push
add
jge
cwtl
clc
shll
stc
ficompl
popa
mov
dec
sahf
bnd
test
pop
pop
sbb
in
hlt
push
mov
in
int3
xchg
mov
and
fidivl
nop
sbb
int3
idiv
mov
add
pop
out
pop
sahf
pushf
pop
and
movsb
mov
fisubrl
and
add
inc
mov
sar
aam
or
push
imul
cmp
inc
pop
push
mov
jecxz
lods
movsb
adc
push
jg
nop
push
in
insl
rdtsc
lcall
fadd
test
into
je
add
adc
mov
adc
scas
enter
push
dec
scas
inc
ficomps
scas
cmc
fwait
inc
mov
shl
fildl
scas
pop
hlt
dec
dec
testl
mov
scas
sub
mov
lret
sbb
cli
jbe
pop
add
mov
shr
pop
push
scas
sbb
mov
cmp
ss
js
aam
cwtd
push
xchg
pop
mov
cs
jnp
xchg
ror
mov
cli
sbb
sbb
fisubrl
hlt
jb
adc
jecxz
xor
push
add
popa
mov
sti
stos
jbe
lcall
sub
jg
or
cmpsb
lock
shr
push
stos
or
sbbb
ror
mov
mov
mov
js
mov
mov
ret
pusha
jbe
cmpsb
mov
sbb
push
movsl
idivb
stc
mov
pop
inc
cmp
pop
lds
dec
xor
or
mov
pop
adc
lret
iret
daa
sub
jp
ja
movsb
mov
cmp
aas
mov
mov
mov
pop
movsb
aam
mov
push
mov
dec
inc
cmpsl
ja
xor
and
mov
shrb
das
incb
iret
push
stos
fstpt
cmp
loop
xchg
jae
data16
leave
xchg
out
cmp
add
push
adc
jle
repz
sub
aad
dec
popa
cmpsb
mov
es
mov
push
mov
jno
rcrb
cmp
cmp
in
adc
jle
sti
xor
cmp
push
fnclex
enter
xor
rcll
jg
sub
xchg
aaa
fimuls
fidivrl
out
cmp
popf
int
mov
inc
push
push
pushf
dec
inc
loop
lock
sub
jns
scas
jbe
aaa
cmp
jge
imul
test
dec
arpl
adc
push
cmc
add
outsl
xor
lahf
mull
mov
inc
push
xchg
es
js
fdivs
in
cltd
sub
pusha
mov
jnp
mov
js
cmpsb
xor
mov
jae
ja
cmc
sub
sub
jmp
cmp
jnp
push
icebp
cmc
mov
arpl
push
or
fwait
and
xor
and
data16
cmp
push
arpl
scas
dec
sub
push
and
cld
dec
or
jg
inc
and
or
mov
mulb
lods
test
xor
in
pop
and
xor
lds
lret
shl
pop
lods
mov
movsl
shll
push
jo
cmp
iret
stos
xor
pop
sub
or
movsb
adc
andb
dec
jnp
stos
xchg
arpl
sbb
and
inc
pop
movsl
jno
fsubp
sbb
push
cmp
mov
xchg
mov
cmp
inc
aaa
sub
dec
jae
scas
adc
jo
shl
mov
mov
adc
pop
mov
add
mov
push
fisttpll
in
fstps
push
xchg
lods
lret
jbe
fmuls
pop
stc
ss
loope
dec
decl
dec
inc
sbb
scas
xchg
fstpl
dec
mov
testl
push
lods
inc
movsl
rep
daa
mov
cmp
jmp
out
cmp
cmp
cmp
dec
pop
call
and
inc
pop
repz
test
and
cmp
adc
loope
xchg
pop
xchg
movsb
cmp
clc
xchg
xchg
cmp
fucom
stos
out
mov
dec
repz
inc
aas
sbb
mov
mov
in
jno
int
inc
sub
dec
stc
nopl
data16
inc
mov
int
and
and
int
adc
cmp
mov
repz
enter
and
hlt
jb
jp
sbb
mov
mov
mov
adc
aaa
push
fiaddl
cwtl
mov
adc
jg
lcall
or
dec
dec
and
movsl
mov
sbb
pop
rolb
inc
or
imul
add
jmp
sub
popf
test
shll
cmp
nop
jnp
rol
xor
pop
sub
hlt
jecxz
sbb
stos
push
inc
outsl
mov
mov
lret
cwtl
ljmp
stc
fwait
leave
mov
clc
push
out
icebp
call
pusha
mov
xor
sub
fldt
sahf
leave
jle
xchg
data16
and
jno
mov
idivl
call
out
divl
mov
push
lahf
shll
nop
in
rcrl
xlat
mov
adc
or
dec
shll
jle
outsl
inc
addl
xchg
jcxz
imul
sub
repnz
or
jns
lcall
xorl
xchg
push
call
jo
xchg
repnz
pop
les
aaa
jno
mov
pop
divl
xchg
pop
fsubrl
and
sub
stc
popf
pop
xor
push
divl
outsl
mov
mov
mov
dec
mov
adc
insb
ret
ds
mov
inc
dec
push
gs
dec
sub
outsl
mov
mov
dec
mov
aam
cmp
lret
and
pop
xchg
adc
push
stos
xor
or
xor
cmp
inc
xchg
and
fnsave
lods
je
aam
mov
push
push
pop
sbb
adc
orl
and
jmp
mov
outsl
lea
in
dec
jmp
dec
loope
cld
xchg
popf
sbb
xor
push
xchg
fiadds
xchg
popf
pushl
icebp
sarl
ret
push
add
push
aas
and
stos
clc
outsl
push
hlt
jb
testl
mov
ss
lahf
push
cmp
xlat
dec
gs
inc
fprem
stos
dec
pop
in
push
out
ret
inc
sbb
jb
testl
into
jg
pop
enter
push
push
rcll
xchg
adc
out
jns
pop
cmp
fwait
sbb
xor
ret
dec
jns
fistps
rcl
repz
cmp
ljmp
cmpsl
ss
pop
movsb
aas
mul
inc
jb
or
imul
fwait
xchg
push
cmp
add
in
pop
enter
inc
jl
inc
lock
jge
les
jo
das
jae
out
call
mov
lret
inc
in
ja
push
sbb
test
sahf
repz
jp
scas
xchg
push
or
test
xor
jo
in
decb
xlat
mov
call
mov
test
jns
adc
aad
test
or
jg
subl
lods
inc
cli
stos
inc
sub
test
and
movsb
stos
pusha
nop
stos
test
repnz
data16
rcll
in
adcl
lahf
xor
xorb
pop
jl
jmp
mov
mov
xchg
mov
push
stos
inc
roll
call
dec
and
mov
testl
icebp
cmp
fdivl
pop
xor
into
mov
and
push
dec
and
push
mov
outsl
mov
dec
xchg
cmpsl
shl
mov
popf
mov
notl
xchg
rol
stos
stos
sarb
insb
sti
add
stos
sub
aam
clc
lret
shrl
and
lods
mov
mov
sub
or
cld
ja
test
sahf
mov
bound
sub
jbe
jmp
or
adc
jb
lock
movsl
or
jg
pop
int
or
push
and
shr
test
xchg
fdivr
cmc
sub
jae
xor
mov
stos
mov
xchg
outsl
insb
cmp
lods
or
clc
jnp
test
int3
push
imulb
mov
or
mov
call
cld
pop
lds
mov
sub
adc
xchg
dec
test
mov
fisttps
mull
inc
movsb
mov
pop
popa
xchg
test
cmpsb
sbb
lds
dec
inc
or
and
std
aaa
ret
sbb
fcmovnb
ljmp
or
call
lahf
sbb
jmp
inc
sti
adc
ret
imul
enter
sbb
jle
rcr
xchg
mov
xchg
xor
inc
fs
sub
popf
loopne
and
xor
add
pusha
cmp
das
add
xchg
cli
mov
stos
mov
lret
xchg
push
call
mov
lsl
push
xchg
add
inc
lcall
movsl
push
lds
adc
loope
test
or
lock
sbb
add
push
leave
mov
xchg
or
dec
xor
pop
push
xor
adc
out
xlat
mov
or
ljmp
cmpsl
xchg
xchg
jo
cmpsl
lret
xor
loop
stos
xchg
mov
int
adc
push
cmp
fucomp
push
add
mov
lret
pop
mov
push
pop
push
pop
mov
sbb
fnstenv
adc
test
mov
call
mov
inc
mov
push
dec
and
ds
cmp
lds
push
mov
xchg
dec
xchg
sbb
fnsave
in
xor
test
popf
repz
test
test
fcoml
jp
push
push
lret
mov
adc
or
in
iret
mov
push
pop
sub
mov
lds
mov
insb
dec
xchg
push
mov
mov
insb
cs
cmp
test
sahf
and
arpl
int3
fsin
test
xor
or
dec
add
mov
outsb
jmp
xchg
or
sti
cli
push
mov
inc
sbb
cmp
jnp
insb
loopne
aad
sub
iret
idivl
xor
aas
addb
mov
add
adc
dec
add
test
jp
fwait
ret
push
push
pop
mov
ss
sti
inc
jbe
jl
push
cmp
push
clc
xor
addr16
bound
ret
and
std
iret
fs
push
arpl
shlb
js
jecxz
jns
inc
dec
repz
xor
pop
ficomps
inc
fldcw
cmp
mov
ret
sti
out
insl
xchg
jecxz
jmp
scas
inc
clc
lock
push
cmp
add
adc
add
or
repnz
sub
xchg
push
jl
sahf
adc
dec
jbe
adc
sahf
sub
mov
bound
inc
stos
jo
out
lcall
shrb
xchg
jg
mov
inc
aaa
lcall
stos
out
sbb
push
inc
sub
mov
imul
push
roll
adc
xor
mov
sub
popa
mov
cmpsl
or
cmp
leave
adc
xor
and
int
xchg
js
pop
push
sbb
lock
jnp
push
xor
out
in
push
out
mov
sbb
cmp
sub
xchg
andb
mov
lds
fs
idivb
aaa
mov
ds
xor
leave
aas
movsb
cmp
jne
popf
cmovge
ret
mov
shll
inc
inc
jne
push
mov
mov
push
outsl
je
popa
xor
inc
xlat
mov
stos
jmp
test
aad
cwtl
lret
fnstenv
lods
sub
inc
sarb
js
mov
inc
lock
pop
repnz
fistps
sub
mov
stos
push
sub
mov
fwait
adc
int3
sbb
sti
lods
lods
pcmpeqw
orb
jl
pop
mov
sub
pop
scas
and
icebp
jns
mov
xor
push
jecxz
mov
dec
dec
push
das
cld
mov
sti
lret
sub
jo,pn
cmpsl
push
fmul
roll
dec
bound
rcl
cmp
jb
or
jl
sub
xor
push
lcall
popf
inc
es
push
iret
push
mov
pop
pop
shrl
sbb
in
rcll
testl
ret
add
xor
sub
sahf
sbb
les
addr16
addb
test
icebp
pop
test
mov
ret
fcom
mov
imul
lds
push
fsubp
nop
push
testl
and
stc
pop
nop
movsb
outsl
clc
into
shrb
inc
ret
aas
loope
mov
pop
adc
mov
mov
inc
dec
sbb
dec
xchg
fimull
xchg
mov
jmp
imul
mov
push
xor
lock
sub
mov
mov
or
push
sti
ret
stc
xchg
iret
mov
cwtl
jno
dec
cmp
std
cmp
xchg
push
dec
push
or
ljmp
or
stos
shrl
jge
shr
jns
stos
scas
std
imull
leave
sub
and
int
mov
sbb
loope
lret
call
loopne
or
cmp
and
push
xchg
addr16
aad
or
call
push
mov
repz
push
sbb
inc
jge
sub
inc
dec
into
cmp
enter
je
jge
xchg
push
fst
jg
jno
xchg
mov
mov
inc
cs
mov
jmp
adc
lcall
mov
lods
icebp
pop
sahf
mov
call
mov
inc
lods
xorb
mov
sbbb
es
scas
sbb
scas
leave
repz
ret
xchg
push
mov
add
sar
pop
sahf
or
and
lret
cmc
xchg
lds
in
fwait
mov
cmp
xor
pop
lds
push
insl
xchg
test
xlat
inc
call
jle
cmpsl
packsswb
mov
and
cmova
and
mov
mov
and
jne
xorb
xchg
imul
cmpsb
push
xlat
fcomi
jecxz
imul
inc
xchg
mov
sub
ds
mov
jp
jge
mov
add
mov
lods
daa
ja
popl
cli
cs
jecxz
cmp
shlb
mov
cld
outsb
stos
jmp
inc
ds
test
jae
lea
xchg
sub
lret
test
int3
aad
mov
cwtl
lret
hlt
int3
add
push
dec
push
testl
mov
sbb
fwait
scas
pop
je
aaa
lcall
mov
or
test
sbb
mov
gs
outsb
mov
cltd
mov
cmp
adc
inc
imul
add
cmc
mov
sbb
mov
jl
xor
pop
mov
fwait
ret
cmp
cwtl
cmp
in
ljmp
cmp
xchg
cmp
sub
xchg
ror
mov
mov
xchg
pusha
jns
addb
inc
dec
cmp
loop
sub
jae
aas
mov
push
xchg
setnp
xorl
sub
loop
ret
xor
jbe
xor
repz
test
ljmp
out
mov
stc
ds
adc
push
or
dec
test
jecxz
andb
popa
loope
iret
mov
cmc
and
mov
dec
adc
xchg
stos
jo
sbb
shl
and
xchg
or
addl
bound
jl
and
ja
icebp
mov
push
and
sbb
ror
push
lock
test
int
mov
push
sub
add
fisttpl
mov
push
sbb
or
stos
mov
jge
not
aaa
repz
or
sbb
xchg
mov
repz
sti
lret
fists
mov
or
jnp
or
adc
add
arpl
shlb
pop
push
cmpsb
bswap
xchg
shrb
out
hlt
inc
xchg
hlt
rorb
loope
push
pop
inc
pop
push
or
cmp
test
mov
inc
add
js
push
and
xchg
test
dec
dec
xor
adc
jns
and
sbb
cmp
mov
rorl
arpl
push
pop
adc
shl
mov
andl
inc
pop
out
xlat
cmp
dec
in
lret
sbb
sub
push
fnsave
pop
lret
das
lcall
xor
or
sbbb
lods
sbb
jns
popf
inc
sahf
stc
jnp
push
sub
xor
xor
mov
mov
and
mov
and
xlat
jg
dec
cli
mov
hlt
jne
enter
es
stos
mov
and
xlat
in
testb
movsb
mov
mov
cmp
aad
inc
xor
cld
adc
in
dec
sub
cwtl
test
fisttps
pop
add
xchg
add
dec
xor
jns
lahf
jae
push
out
push
insl
or
testb
ret
mov
lret
mov
les
push
xor
cmp
sub
loope
inc
bound
sbb
jne
xor
xor
pop
add
jmp
inc
daa
ror
xchg
aas
mov
push
out
inc
pop
in
cmpsb
fisttpl
jg
or
jo
adc
mov
push
add
test
ljmp
mov
jb
dec
cli
out
push
cmc
xor
lock
xchg
push
dec
sbb
jno,pt
add
fnstsw
cmp
jle
jo
stos
pop
pushaw
sub
jp
sbb
jl
pushf
mov
mov
mov
lret
std
and
mov
dec
jecxz
cmp
faddl
int
mov
subl
sbb
call
std
adc
and
sub
lods
lods
mov
daa
jl
std
in
cwtl
jp
cmp
jp
out
xchg
xor
mov
sub
push
mov
dec
mov
or
cmc
daa
jg
in
sarb
push
inc
dec
enter
xlat
lret
dec
cmp
inc
mov
adc
xor
sbb
divb
and
mov
ret
adc
xchg
cli
add
push
fsts
cmp
leave
push
pop
xor
stos
repz
dec
push
pop
xchg
mov
popw
push
jae
aad
fwait
push
add
jns
lcall
scas
into
test
pushf
ja
mov
mov
dec
mov
jl
ret
mov
lahf
fbstp
xchg
pop
inc
mov
pop
into
nop
pop
dec
jnp
mov
sbb
icebp
push
mov
or
xor
push
pop
stc
cltd
add
and
decb
cs
in
pop
adc
and
inc
jg
mov
pop
loopne
push
lcall
jp
jp
test
cmpsl
mov
lods
xchg
sub
or
outsl
cmp
cmc
loope
popf
jno
jnp
mov
notl
jecxz
nop
jae
sbb
sarl
in
add
jnp
pop
adc
iret
dec
sub
daa
les
iret
aaa
dec
sub
imul
lds
test
mov
or
sbb
ret
xchg
rcll
pop
mov
jg
mov
pop
jbe
sbb
andb
mov
ret
push
popl
mull
xor
or
stc
dec
cmp
lea
push
pop
adc
mov
arpl
ds
sbb
dec
sahf
xor
addr16
std
lret
es
push
out
sbb
adc
mov
movsb
lcall
jo
pop
call
adc
icebp
outsl
push
jle
dec
ss
cltd
jl
mov
and
cmp
inc
jp
stos
movsb
mov
hlt
push
adc
push
lcall
cmp
push
cmpsb
ss
out
imul
sbb
stos
adc
inc
mov
dec
decb
inc
popf
mov
xlat
jge
shl
or
shl
and
pop
and
test
fbstp
adc
xor
mov
lods
mov
movsb
int3
shll
inc
out
xchg
xchg
mov
dec
xor
sbb
push
mov
jg
mov
push
sahf
inc
push
pop
sub
fadd
inc
xchg
push
inc
test
or
gs
pop
dec
jo
and
movsb
movsw
mov
cmp
xchg
lods
lret
pop
jmp
pop
dec
popf
sub
scas
push
pop
and
aaa
rol
mov
sub
xchg
sti
sbb
lahf
pop
addl
sti
mov
addr16
in
test
dec
dec
pop
hlt
js
push
dec
adc
dec
xchg
mov
sbb
sbb
jmp
lahf
sahf
push
icebp
pop
adc
fidivl
add
fistps
xor
mov
mov
and
insb
cmpsb
sbb
fidivs
push
mov
xor
sti
push
mov
mov
dec
fnstenv
scas
shlb
popa
jmp
sbb
sbb
mov
mov
sub
rcr
mov
shl
fadds
xchg
dec
add
out
cmp
imul
pusha
sti
xchg
fsubl
mov
push
cli
push
stc
mov
adc
adcl
outsb
pop
lret
xor
adc
jne
outsl
and
lds
sti
jb
clc
cs
sub
hlt
sbb
mov
push
out
add
mov
add
insb
dec
inc
stos
and
out
sbb
cmpl
nop
stos
in
icebp
jns
xchg
sbb
outsb
adc
pop
jp
test
fsubs
inc
inc
cmp
dec
hlt
cmpsb
lcall
fbld
sub
in
push
pop
push
xor
test
stos
adc
xor
mov
sbb
and
inc
iret
xchg
jo
push
add
shl
jmp
popf
enter
leave
lcall
int3
sbb
sbb
dec
push
es
test
bound
call
out
bound
incl
icebp
imul
cmp
std
ficompl
push
xchg
dec
push
enter
shrb
dec
jns
xchg
fcompl
jecxz
jbe
iret
add
pop
js
dec
push
incb
push
insl
mov
fnstsw
clc
cmp
sub
loopne
in
mov
lock
test
jb
dec
and
and
pop
pop
mov
mov
ret
mov
into
out
insb
out
stos
dec
sub
sahf
mov
xor
xor
adc
and
sub
loopne
sbb
out
pop
enter
shrl
imul
iret
adc
mov
xor
or
fldcw
lock
xorl
or
fisttps
bound
aam
js
sbb
jmp
sub
imul
pop
adc
mov
leave
scas
dec
in
pop
dec
jmp
push
add
pop
clc
bound
mov
and
lock
xorl
insb
je
cmpl
test
cmp
aas
call
test
leave
push
push
bound
push
mov
cltd
dec
xor
mov
adc
mov
jne
inc
lahf
movsb
lahf
outsl
cmp
nop
arpl
das
outsb
loope
push
std
mov
in
and
hlt
pushf
mov
dec
popf
pusha
sbb
shll
shlb
aad
jb
add
imul
xchg
jnp
test
mov
jg
mov
push
fcomps
loope
ja
lret
mov
loope
insb
fadds
pop
out
xchg
inc
pop
sub
repz
and
mov
jmp
pop
cltd
scas
imul
loop
insl
and
pop
cltd
jmp
cwtl
jnp
std
or
cltd
jae
test
and
xchg
xchg
xlat
jne
mov
adc
je
mov
pop
es
pop
je
and
fnsave
lods
andb
fwait
mov
clc
push
bound
fldl
xchg
aad
popa
out
jbe
mov
fucomp
mov
movsb
enter
xor
xchg
and
fimull
sbb
aaa
or
js
loop
cmp
out
loop
out
mov
pop
out
shll
int3
insb
test
dec
add
je
jne
pop
jp
lcall
mov
add
xor
mov
mov
lcall
jno
jne
adc
mov
xchg
mov
hlt
add
mov
cs
sub
shufps
movsl
aam
ret
dec
push
adc
jno
jge
and
bswap
mov
inc
hlt
dec
sub
inc
and
fmull
arpl
repnz
add
xchg
jno
adc
xor
add
jb
ficoms
sbb
scas
dec
mov
mov
subl
sub
stos
cltd
pop
mov
inc
sub
and
fildl
push
js
imul
mov
ds
or
sbb
lret
fists
dec
aaa
inc
fcompl
daa
fnstsw
xor
out
mov
xor
push
mov
loop
es
sub
or
lcall
pop
fnstcw
int3
mov
faddl
or
sub
movsb
ss
xlat
outsb
cmpsb
incb
test
sbb
push
and
push
mov
arpl
das
add
adc
imulb
les
xor
movsl
cmp
push
xchg
push
push
aad
repnz
inc
jns
icebp
cmp
inc
lcall
jecxz
and
add
pop
fstpl
or
ljmp
xchg
sub
cli
es
push
xchg
gs
push
arpl
jno
testl
out
rcr
mov
or
xchg
mov
popf
aaa
repnz
mov
popf
sub
dec
mov
fnstcw
rcrl
out
stos
mov
add
jp
xor
dec
setne
jle
test
sbb
cmpb
pop
add
lea
lcall
sbb
cmp
lcall
push
hlt
jnp
adc
sti
outsl
sbb
cs
add
xchg
aas
xlat
cld
xor
and
add
pop
in
out
sbb
xor
lret
insb
lock
scas
dec
mov
pmuludq
and
dec
shlb
xor
ror
inc
jae
arpl
pop
test
leave
jno
mov
sub
out
ret
mov
xor
cwtl
sub
shll
aad
xor
roll
popa
mov
sbb
jno
test
inc
imul
imul
cmpsl
lods
lret
std
mov
movsb
push
std
pop
ja
stos
push
cmp
pop
outsb
adc
jns
out
push
stos
les
push
push
xchg
lods
jp
push
imul
adc
pop
cs
dec
cltd
or
fwait
in
int
mov
int3
aaa
js
cwtl
jns
fbstp
subl
pop
xor
das
scas
ds
sarl
push
mov
sbb
adc
or
fxch
mov
push
mov
inc
xor
lock
lods
outsl
fmuls
cmp
popf
lret
xchg
out
mov
fcmovu
jg
mov
aam
mov
lock
rolb
xor
jne
jg
scas
inc
pop
arpl
ret
xchg
scas
sub
in
push
in
or
fmul
ds
sub
push
rcl
inc
insl
ret
hlt
and
mov
ss
div
pusha
and
sub
adc
and
pop
outsb
stos
clc
js
mov
call
popf
fs
data16
sarl
testl
push
test
pop
popa
mov
xchg
mov
orl
ja
insb
inc
clc
push
mov
push
arpl
mov
xchg
lea
outsb
push
xor
pop
add
push
fcmovnbe
repz
sti
outsb
cmpsb
repnz
xchg
dec
popa
sub
jecxz
stc
in
lcall
sbb
fildll
xchg
fisubs
jns
cmp
jl
lret
loope
xor
call
jge
pop
andb
cmpl
inc
add
pusha
mov
push
stc
stos
stc
pop
xchg
dec
push
push
clc
and
adc
subb
dec
and
aad
cld
or
aam
stc
repz
in
jno
dec
lcall
gs
imull
popa
mov
in
cmp
pop
jbe
fsts
push
cmpsl
xor
sbb
pop
aad
sbb
aad
outsb
jmp
clc
rol
les
in
mov
adc
sbb
call
xchg
mov
xor
mov
inc
je
ljmp
incl
dec
dec
and
inc
jns
mov
out
hlt
push
xchg
inc
or
stc
mov
xor
or
dec
or
clc
stos
fstpt
cmp
shlb
sbb
mov
cs
add
ret
sbb
xor
and
mov
shlb
out
int3
iret
lcall
sahf
sub
and
pop
cmp
or
repz
dec
pushf
aaa
push
jo
movsb
sub
mov
push
push
dec
or
in
jl
jno
stos
xor
sti
insl
push
stos
mov
lahf
gs
push
movsl
adc
ss
sub
popa
dec
sahf
mov
add
stc
cltd
xchg
aad
adc
roll
jnp
cmp
mov
xchg
ficomps
pop
pop
push
rcll
inc
shrl
xchg
push
call
mov
inc
mov
jae
adc
jmp
cmp
adc
inc
adc
ret
and
call
mov
xor
mov
pop
fcoml
outsb
and
mov
movsb
in
push
std
ret
aas
sub
gs
xor
rdpmc
mov
pop
test
aas
aaa
inc
lret
jge
insl
jne
adc
push
dec
int
sub
fcoml
push
fcmove
mov
or
adc
outsl
pop
ret
rolb
sub
repz
in
lock
adc
pop
fildll
adc
fmuls
sub
aam
out
stos
imul
nop
shrb
and
andb
popf
lea
jg
cld
jno
add
mov
lcall
mov
xchg
loop
imul
call
scas
ja
mov
mov
addb
jo
add
and
cwtl
repz
aaa
mov
popf
ljmp
ljmp
mov
mov
imul
paddusw
in
xchg
sti
mov
jbe
push
arpl
sub
mov
jp
sbb
imulb
mov
jns
fs
mov
sub
xchg
jle
pop
into
and
add
sbb
inc
les
adc
xorl
mov
shrl
cmpsb
icebp
lret
adc
and
imul
lods
jo
add
imul
mov
ljmp
jne
cs
rcrb
push
cmpsl
cmc
cli
jae
cmc
or
xchg
xor
or
cld
loopne
out
jmp
inc
adc
mov
ficompl
imul
lock
das
pop
and
xchg
cmp
dec
scas
adc
ret
dec
scas
jl
and
dec
push
loopne
xor
cmc
xchg
lea
iret
dec
xor
test
imul
aam
negl
mov
clc
hlt
iret
or
fwait
inc
cmp
dec
mov
out
sbb
scas
pop
mov
out
pop
imul
das
push
mov
das
mov
popf
outsl
inc
pop
dec
out
je
mov
push
dec
dec
push
pop
xor
sub
stos
jl
pop
cmp
cmpsl
inc
mov
fcomps
fwait
sar
ds
or
sub
cmp
inc
fiadds
or
popa
mov
stos
mov
hlt
fistpl
ficomps
xlat
lock
jecxz
in
popf
sbbb
dec
pop
pushf
xchg
int3
inc
pop
fsubrs
inc
push
xor
shl
scas
in
xchg
push
mov
mov
popw
icebp
shrb
xor
outsl
dec
mov
mov
cmpsl
scas
jae
xor
jo
data16
daa
mov
pop
jo
inc
arpl
lods
stos
pushf
or
inc
bound
test
and
mov
mov
mov
add
data16
pop
mov
adc
cmp
rcrl
repnz
mov
mov
insb
add
xchg
xchg
jae
std
rcrl
in
jo
dec
lds
or
dec
mov
in
movsl
pop
xor
and
mov
or
clc
and
inc
fisubl
gs
push
mov
subb
test
jnp
pop
sub
pop
push
mov
ja
dec
aas
shl
shlb
and
and
std
pushf
imul
pop
rorb
or
xchg
xchg
sahf
pusha
movsl
adc
push
cmp
int
es
cmp
andl
cmp
jl
scas
push
mov
popf
cmp
jle
repz
out
jmp
dec
push
push
out
xor
stc
lock
in
imul
scas
pop
enter
rcl
mov
aad
std
repnz
adc
cltd
shlb
dec
mov
les
lods
sbb
std
mov
mov
adc
decl
adc
jle
adc
fnsave
clc
cmp
ret
sub
mov
xor
pop
push
mov
adc
xchg
pop
xchg
mov
push
xor
aad
and
or
mov
mov
sbb
lret
sub
aam
iret
mov
push
and
call
test
jle
mov
xchg
in
ja
mov
ss
cli
in
jb
fidivl
add
lods
add
lds
fdivl
xchg
arpl
shr
mov
and
sub
sbb
mov
nop
popf
repnz
mov
sub
sub
mov
test
bound
pop
mov
nop
xor
and
mov
ja
and
jmp
jmp
cmc
add
outsb
fisubrl
popa
das
jg
or
std
adc
adc
mov
inc
inc
ficoms
and
xchg
pushf
dec
stos
mov
out
es
mov
mov
adc
bound
test
or
push
mov
adc
rcrl
mov
push
xlat
mov
loop
push
pop
lret
pushf
dec
push
and
std
mov
out
mov
pusha
mov
pop
cmp
mov
daa
out
mov
stos
lock
pop
std
adc
push
sbb
cmp
sti
das
in
test
mov
out
icebp
shl
push
test
pop
out
orl
inc
movsb
cltd
push
sbb
ret
push
inc
fisttpl
insb
xchg
int
jmp
loope
pop
pop
dec
iret
lret
xchg
pop
and
mov
push
ret
mov
ja
add
lods
xchg
into
les
lock
stos
hlt
xor
lock
dec
or
int
ss
dec
xchg
and
add
push
push
in
mov
test
enter
inc
aam
imul
sahf
dec
sti
cmp
and
mov
ss
adc
loope
jl
pop
adc
sbb
xchg
mov
or
xchg
push
xor
inc
mov
cli
fisubrl
pop
jg
and
xor
cmp
add
dec
inc
dec
jle
bound
jae
cmp
mov
sbb
and
mov
jp
rolb
xchg
cli
xchg
xchg
jns
pop
je
test
sub
xchg
xchg
jge
sti
fldenv
push
mov
lahf
aad
and
push
test
orl
sbb
pop
and
outsb
daa
test
jl
mov
jnp
adc
push
cs
xor
out
push
hlt
add
pop
mov
mov
cmc
rcl
add
ret
push
aad
xchg
xlat
dec
in
es
sbb
adc
inc
pop
mov
add
push
or
cmp
in
push
cmp
adc
test
in
lods
and
int
das
cmpsl
out
insl
lds
test
mov
fisubs
adc
xor
and
imul
out
mov
cmpsl
cmp
mov
popf
adc
push
cmp
jl
out
push
scas
fdivrs
ljmp
fsubr
cmp
aaa
jge
mov
adc
mov
fcmovbe
pop
xchg
push
lret
and
jecxz
push
adc
mov
pop
mov
out
mov
mov
lret
in
cltd
inc
test
dec
add
inc
cltd
push
ror
andb
jecxz
or
and
mov
aam
out
jecxz
dec
sub
movsl
pop
cmpsl
cltd
fisttpl
xlat
xor
cmp
dec
and
lods
mov
je
movsl
xlat
xor
icebp
sti
call
test
cmp
shrl
jmp
adc
std
lea
arpl
add
cld
repnz
fisubrs
sbb
fwait
mov
lods
test
shrb
movsb
lahf
and
popf
or
or
add
inc
inc
cmp
add
lret
nop
repz
aas
fidivs
lcall
inc
push
sti
andl
test
push
add
cld
shlb
xor
sub
xchg
cmc
out
lea
mov
pushf
int3
and
stc
inc
lods
enter
mov
pusha
adc
loope
test
and
shl
mov
daa
mov
xchg
inc
pushf
cmp
rcll
xorb
adc
daa
loopne
or
mov
icebp
ret
movsl
mov
into
ret
xor
adc
ds
les
sub
int3
add
test
pop
pop
cmp
push
stos
lds
loope
add
hlt
mov
mov
data16
loop
das
xor
adc
out
cld
shll
jnp
mov
or
push
add
push
xor
repnz
mov
js
adcl
sbb
daa
cmpb
dec
in
sbb
pusha
stos
and
testl
lret
mov
ds
xor
popl
notb
hlt
jle
lea
out
in
ss
inc
leave
pop
aam
sub
mov
das
je
pop
inc
dec
into
dec
mov
xchg
pushw
adc
aam
xchg
not
cmpsl
fs
push
inc
pop
sti
movsb
cmp
mov
add
mov
pop
cmp
in
cli
jge
into
lcall
pop
push
sbb
add
outsb
mov
mov
and
xchg
add
xchg
out
gs
jno
sub
sub
pop
cltd
out
xor
jo
sbb
mov
sub
shl
mov
inc
lods
pop
pop
add
cmp
cwtl
pop
push
scas
push
xchg
fcmovnb
imul
add
push
ret
mov
cltd
mov
daa
ja
xchg
xchg
inc
decb
pop
sarb
pop
push
cld
in
cmp
outsb
hlt
out
loopne
ret
lahf
inc
push
iret
dec
arpl
cs
pop
push
fdivl
fstcw
pop
fisttpll
mov
push
aas
bnd
in
test
push
mov
push
hlt
pop
jne
aad
add
inc
cmc
neg
test
fisubl
movsb
dec
loop
jne
enter
ret
cwtl
or
xchg
xchg
push
fwait
clc
push
and
lret
inc
imul
jp
add
rcl
fs
insb
pop
sbb
inc
sub
out
inc
sub
jb
pop
divl
popa
jae
test
mov
enter
cld
pop
sub
lahf
push
mov
mov
shl
push
or
adcb
rcll
ficoml
push
inc
mov
stos
pusha
and
pop
inc
mov
jl
sbb
cmpsl
fcmovne
mov
outsb
xor
sbb
scas
push
xchg
and
je
sahf
inc
xor
cmp
rorl
push
in
and
mov
pop
adc
outsb
ret
pop
nop
dec
inc
in
addr16
add
sbb
shlb
jae
movl
or
stc
shrl
xor
aad
repnz
shrl
xchg
adc
mov
mov
push
das
push
lods
faddl
addr16
mov
jno
cli
stc
push
xor
mov
mov
fbld
pusha
fwait
mov
aas
fmul
out
hlt
push
test
cmp
addl
adc
sub
jmp
inc
clc
sbb
jbe
stos
out
mov
mov
add
mov
iret
jns
int3
cmp
and
mov
jb
outsl
xchg
mov
sub
mov
sahf
loope
xor
or
mov
fs
leave
or
out
faddp
xor
leave
xor
fidivs
mov
leave
das
aaa
xchg
std
sahf
mov
mov
dec
xchg
in
adc
arpl
mov
mov
mov
cmpsl
gs
iret
lret
pop
mov
dec
mov
push
cmp
push
cwtl
mov
xor
xor
stos
dec
pop
adc
les
xchg
xchg
aam
pop
mov
cmp
push
and
test
mov
jnp
and
xchg
popf
mov
aas
test
cli
xchg
fisubs
or
add
jl
lcall
imul
dec
idiv
stos
imul
mov
movsb
or
popa
cmc
jmp
pusha
in
mov
adc
jne
in
jne
jmp
shll
pop
cmp
mov
add
mov
adc
lods
out
in
push
mov
retw
lret
cmpsl
and
dec
dec
iret
inc
or
add
lock
push
push
cmp
mov
fdivl
mov
incl
rcl
shrl
mov
xchg
dec
pop
popfw
mov
iret
repz
in
sti
add
xor
dec
and
xchg
jo
sbb
mov
mov
lea
xchg
mov
xchg
inc
hlt
push
inc
rorb
andb
ffreep
pop
push
jp
ret
rorl
popa
das
mov
push
xchg
or
and
sub
xor
sbb
test
mov
out
ljmp
test
xor
push
ret
aam
pop
fldl
inc
cmp
je
push
repz
incb
cmp
mov
mov
or
push
push
xchg
xchg
add
aam
cmp
pop
cmpsb
ret
mov
fidivrs
lock
icebp
xchg
dec
adc
add
repnz
sub
push
js
xchg
movsl
int
xchg
jle
jg
xlat
outsl
je
jo
jnp
lret
cmp
xor
push
fldl
xchg
aam
adc
pop
push
inc
lods
mov
push
cmp
push
fidivs
and
inc
xor
add
mov
fsubr
add
dec
outsl
clc
sahf
inc
push
clc
cld
cmp
aad
xchg
addr16
xor
ljmp
popl
iret
fisttpl
adc
or
xchg
inc
mov
xchg
mov
xchg
iret
pop
shrb
add
jl
das
xchg
inc
inc
leave
sbb
insl
and
push
cmp
mov
mov
aam
int3
mov
add
mov
scas
push
fcoms
mov
adcl
xlat
inc
outsl
sub
jne
lock
shl
jae
shlb
cmp
jecxz
or
cmp
fnstcw
or
and
pusha
orl
xchg
fs
imul
repnz
je
hlt
dec
out
xchg
mov
xor
cmp
cwtl
movsb
test
iret
lods
or
inc
sbb
mov
cmpxchg
mov
iret
cmp
adc
xchg
hlt
and
rcl
hlt
jns
popf
and
out
sub
push
test
icebp
test
pop
cltd
adc
add
jae
push
shlb
mov
gs
xchg
xchg
sbbl
mov
sub
sub
jno
or
mov
sti
mov
cmp
and
push
mov
xor
in
testb
mov
pop
cmp
or
das
stos
and
mov
xor
into
pop
in
adc
out
or
cmp
push
pop
jecxz
pop
xor
daa
mov
fdivp
mov
cs
mov
int3
sub
inc
xchg
sahf
filds
adc
outsl
push
mov
adc
push
movnti
loop
add
popf
cmp
add
cmc
jle
xchg
jle
enter
dec
sahf
shr
call
fisttpl
jmp
cwtl
int3
xor
pushl
adc
mov
push
xchg
aaa
imul
mov
jge
push
adc
xchg
addr16
xchg
push
xor
ret
daa
in
ljmp
out
testl
lret
mov
test
out
inc
cltd
add
clc
xor
daa
loop
xlat
pushf
hlt
daa
pop
cmp
outsb
loope
fwait
mov
inc
stc
push
add
outsl
rdmsr
loop
and
push
cli
pop
lahf
add
sub
cmp
jg
or
xor
fwait
std
sbb
xchg
pushf
call
push
loop
xor
cmpl
rcrl
iret
sub
cld
test
inc
sub
lcall
fst
cld
xor
mov
in
xchg
out
jp
bound
icebp
outsl
jae
lock
cmc
jge
pop
push
cld
sub
test
arpl
jg
cpuid
add
add
clc
sub
push
pop
mov
mov
xor
cli
lds
jb
cs
mov
sbbl
scas
or
dec
jg
pop
push
push
popl
sub
std
adc
scas
fcomps
pusha
sbb
xchg
cli
sub
into
mov
jp
xor
lea
pop
inc
loop
mov
xchg
ret
movsb
sbb
xorb
bound
pop
movsb
ja
fstl
sbb
mov
imul
jl
jmp
inc
dec
push
pop
and
push
subl
mov
fwait
mov
enter
lcall
push
jecxz
sub
rcll
mov
ret
gs
pop
and
es
xlat
daa
xorb
fstl
dec
test
mov
jns
testl
mov
push
icebp
in
jp
or
sub
push
lea
or
mov
movb
repz
mov
mov
outsb
mov
sub
ljmp
imul
lcall
arpl
rclb
leave
stos
mov
mov
gs
push
pop
cmp
lods
adc
xchg
pop
out
out
adc
pop
fisubl
fcmovu
repnz
test
xorl
cmpsb
stos
sub
ror
lahf
repz
xor
popa
shlb
lds
add
push
mov
ror
inc
cwtl
cmp
out
mov
lock
insl
loope
stos
in
push
stos
imul
mov
scas
jb
mov
mov
hlt
sbb
mov
inc
in
popw
mov
in
daa
inc
clc
push
jb
cld
cmpsb
add
sub
inc
out
punpckhdq
je
frstor
std
jno
stos
gs
add
imul
sub
out
adc
fists
dec
xor
sbb
mov
dec
or
inc
ret
lcall
mov
into
out
addr16
movsl
add
cwtl
in
jecxz
rclb
scas
mov
jg
push
or
outsl
sbb
mov
cli
out
lods
xchg
dec
lret
dec
outsb
pop
gs
pop
push
bound
mov
iret
inc
inc
adc
adc
addb
in
lods
pop
and
pop
loopne
cmp
push
inc
push
lcall
and
sbb
push
jl,pn
pop
xor
sbb
push
in
icebp
pop
push
test
cmp
pop
cmp
mov
inc
sub
fisubl
xchg
inc
dec
clc
mull
add
out
cmp
enter
dec
out
bound
dec
pop
lret
aam
push
mov
scas
push
inc
addr16
pop
ljmp
dec
xorb
push
mov
jl
jbe
ss
push
test
jb
mov
mov
jp
call
addr16
les
xchg
add
cmp
push
daa
and
mov
iret
in
sbb
sbb
fs
xor
xchg
xchg
sub
sbb
sbb
sbb
leave
imul
add
cmc
fidivs
das
mov
andl
push
cld
lods
aad
xchg
mov
ror
shlb
sbb
pushf
mov
out
addr16
mov
cld
sbb
mov
fwait
push
jno
adc
sbb
cld
sbb
mov
push
outsl
pop
sar
dec
fnstcw
xchg
or
xor
lods
mov
mov
push
cmp
mov
push
push
out
jmp
inc
jbe
aam
dec
testb
daa
in
push
loopne
into
xchg
or
or
xchg
vmptrst
int
sbb
test
add
sub
cmpsl
sub
imul
shrb
jmp
inc
xchg
fs
and
cmp
movl
and
jb
xchg
fs
xor
shrl
movsl
inc
mov
andb
hlt
cmp
orb
add
jbe
mov
imul
std
sbb
ret
push
or
sbb
dec
or
mov
push
pusha
cltd
adc
ds
push
dec
imul
jb
push
loopne
xorl
aad
imul
mov
jp
cmp
dec
sub
out
pop
and
popa
dec
jge
and
sub
outsb
jmp
mov
and
pop
pop
mov
aaa
inc
xchg
incl
stos
mov
cli
hlt
mov
out
cmovs
ljmp
add
mov
inc
inc
inc
cld
clc
mov
cmp
sbb
dec
adc
pop
bnd
imul
frndint
jo
ss
jne
ret
repnz
mov
in
xchg
xor
pop
outsb
jl
mov
add
insl
dec
push
mov
mov
sub
dec
inc
xor
mov
mov
rclb
mov
add
lods
test
shl
sarb
ret
jge
fcmovnb
in
adc
pop
sub
add
in
or
das
shll
ja
sub
lods
sbb
push
cmp
push
push
adc
hlt
adc
jge
imul
decl
mov
es
test
pusha
and
sbb
inc
addr16
out
cs
nop
jge
sub
aaa
jge
add
and
arpl
js
sbb
imul
and
ds
add
push
inc
mov
cltd
and
inc
ljmp
sbb
mov
js
push
jmp
pop
rorb
mov
stos
sub
inc
cmp
mov
int3
out
rcrb
cwtl
mov
mov
daa
lds
xchg
push
into
push
pop
out
bound
icebp
push
mov
popf
mov
leave
xchg
jmp
jg
or
ljmp
outsl
out
call
ret
fmulp
imul
sub
por
stos
stos
cltd
push
aam
bswap
pop
lret
sub
jmp
dec
jl
xor
mov
fcoms
or
fsubrs
mov
lds
pop
mov
test
fdivl
mov
js
in
adc
mov
dec
mov
stos
mov
add
mov
lret
fisttpl
jne
sub
xor
test
jmp
loope
sahf
pusha
iret
idivl
xchg
mov
jno
cmp
jp
xchg
sub
popf
push
sbb
jp
xor
xor
add
ljmp
cmp
ljmp
cmc
rorl
aaa
stos
jl
push
sub
inc
movsb
packssdw
outsl
sbb
mov
outsb
adcb
shrl
mov
mov
adc
rorb
inc
sbb
leave
mov
cmp
rolb
push
out
xor
in
rcrb
cmp
mull
fsubrl
es
jecxz
leave
insl
pushf
lds
nop
loopne
xchg
movsl
getsec
aam
adc
mov
sbb
xor
push
mov
sub
add
mov
jne
roll
and
out
jl
xor
movl
xor
xchg
nop
aad
jg
lock
sub
push
dec
test
mov
xlat
jne
sbb
add
shrb
es
fs
cmp
out
push
pop
dec
jno
cmp
clc
dec
mov
inc
jg
leave
call
stos
dec
repz
pop
xchg
pusha
in
loope
dec
push
cs
cmpsb
sbb
add
clc
lods
fcomi
data16
daa
add
or
sub
fstl
les
push
mov
dec
push
sbb
repz
cld
pop
stc
inc
cli
lcall
cwtl
ja
cmp
rcll
fdivrl
icebp
sub
push
cwtl
adc
inc
push
hlt
rcl
jne
dec
mov
pushf
xor
dec
jns
testb
lods
xor
aas
add
mov
lods
daa
push
jnp
pusha
xchg
movb
mov
dec
fistps
mov
mov
mov
dec
inc
mov
addl
jp
outsl
ret
outsl
inc
push
add
sbb
jecxz
dec
ret
inc
push
ror
stc
loope
cmp
jle
push
lods
std
adc
pop
stos
popa
and
shrl
inc
adc
movsb
push
dec
enter
insl
daa
xor
movsl
sbb
cs
hlt
in
stos
jne
loope
pop
imul
push
push
pop
arpl
int3
mov
push
mov
outsl
add
lock
xchg
ret
ret
xor
dec
mov
inc
call
fidivl
lcall
push
or
push
sub
jae
shl
mov
lret
fdivrp
test
addr16
add
or
lds
pusha
pop
idivb
mov
shlb
fldcw
xor
rcrb
pop
popa
insl
jns
nop
inc
xor
jne
sub
jge
std
add
fistps
sub
xchg
xorl
test
cwtl
xchg
nop
jle
cmp
mov
out
ud2
sub
ret
ffree
adc
cmp
scas
test
shr
jmp
dec
pop
fdivrl
xchg
inc
xchg
push
cld
xor
inc
xor
mov
addb
sti
adc
in
and
push
push
add
testl
outsb
push
xchg
jecxz
jno
sti
lret
lock
or
icebp
inc
mov
dec
jno
call
popf
repnz
test
adc
add
inc
sbb
mov
xlat
test
cmpsl
cld
mov
inc
push
icebp
adcl
jae
pop
pop
push
sub
xchg
jb
adc
push
scas
lock
iret
jge
inc
popf
adc
adc
mov
mov
dec
xchg
cmpl
add
stc
mov
mov
cmp
das
scas
mov
add
sbb
xchg
and
not
shrl
pop
imul
in
jno
das
fimuls
cmpsl
pop
push
xchg
stos
sbb
fwait
lcall
jg
xlat
cmpsl
inc
xchg
xchg
and
lods
xor
cmp
push
xlat
and
insb
fstps
addr16
add
dec
inc
out
sbb
jge
pop
push
jo
jb
mov
les
pop
pusha
clc
cmp
dec
pop
ja
and
or
fwait
sbb
sub
and
notl
adc
mov
lods
or
mov
je
out
jns
sbb
mov
imul
xchg
and
movsb
mov
popa
bound
jno
mov
int
cld
mov
xchg
sub
nop
popa
rcrb
ss
int
cmp
jno
mov
jb
in
sarl
adc
pop
xor
fistl
mov
fisubrs
pop
sbb
lret
push
inc
add
xchg
ficoms
cmpsb
add
int
stos
outsl
xor
in
sbb
enter
mov
mov
inc
and
add
mov
pop
pop
rcll
into
pop
std
dec
or
bound
shlb
notb
popl
cmp
lea
lahf
jb
and
cmp
iret
sti
sti
repnz
in
push
out
out
leave
or
jmp
pop
xor
rorb
insl
scas
ss
scas
xchg
mov
cmp
push
dec
inc
push
repnz
fstpt
lods
inc
xlat
pushf
or
push
dec
aad
psubq
xchg
xor
idivl
sub
cmpsb
decl
jge
mov
scas
stc
stc
mov
cmp
cmp
push
fisubrl
push
cld
mov
int3
push
lret
adc
lret
adc
or
mov
shll
loop
xor
orb
jp
xor
inc
dec
mov
fcomps
aas
lock
sbb
icebp
pusha
scas
les
adc
test
mov
data16
add
mov
adc
lcall
xor
in
imul
mov
cwtl
xchg
ljmp
jae
imul
lock
notl
push
or
ret
mov
mov
inc
jg
push
push
out
sbb
outsb
xor
mov
adc
sub
ficomps
cmc
repnz
roll
icebp
gs
ja
and
jmp
adc
lcall
jnp
mov
sub
call
in
adc
std
lea
mov
mov
xchg
test
push
xor
push
outsb
inc
mov
push
mov
xor
repz
enter
fisubs
cli
mov
cmpsl
callw
xchg
add
pop
or
pop
pop
add
in
fs
xor
fistpl
mov
xchg
in
cmpsb
cmpsl
std
push
push
add
sbb
push
and
stos
xchg
mov
std
jmp
in
xor
mov
sub
inc
pusha
andl
push
push
out
in
push
loopne
push
push
ja
sbb
inc
mov
sub
testb
enter
adc
pusha
in
cmp
add
int
jbe
xor
mov
mov
add
test
add
cs
scas
push
mov
sbb
aaa
fwait
ret
sbb
lahf
mov
sbb
cmp
enter
inc
iret
sbb
sbb
dec
xorb
cmpsl
dec
push
pusha
sbb
xor
or
scas
or
sarl
outsb
push
sbb
push
andb
int
hlt
push
movsb
enter
arpl
push
adc
xchg
daa
pusha
fdivrl
or
fldcw
mov
pop
dec
mov
roll
cli
out
shr
dec
je
sbb
push
push
mov
mov
sbb
mov
cld
std
and
ret
or
bound
popa
xchg
mov
cs
fndisi(8087
pop
cli
xchg
movsb
test
pusha
int3
or
imul
cmp
movsb
adc
push
imul
lahf
fldln2
sbb
test
inc
pop
cli
push
imul
xor
scas
jp
dec
rep
mov
imul
jmp
test
pop
jecxz
mov
xchg
push
rol
mov
jp
fbld
pop
gs
xchg
inc
adc
and
and
fs
ljmp
push
scas
imul
int3
popf
divb
and
jb
mov
stos
test
inc
jge
mov
pop
jnp
xchg
out
xor
popf
aam
inc
mov
iret
out
xor
xor
insb
sar
mov
mov
ret
jne
add
scas
jp
rorb
mov
das
mov
sbb
dec
sbb
cltd
cmp
enter
pop
notb
cmc
scas
sarl
lret
das
cmp
xor
sahf
lahf
fiaddl
pop
mov
xor
dec
push
sbb
dec
imul
mov
scas
sbb
fnsave
movsl
mov
sbb
in
orb
in
aaa
jo
push
xor
sub
inc
xor
int
mov
repz
fidivl
mov
sub
cmc
fldt
shl
xchg
xor
inc
call
jns
outsb
int3
cld
xlat
aam
icebp
jecxz
sbb
jo
roll
mov
push
mov
in
and
not
push
nop
and
dec
mov
cmp
rol
adc
sub
sub
stos
jmp
js
xchg
icebp
push
je
jb
movb
rcl
jb
pop
xchg
test
inc
hlt
pop
jne
jns
jg
sbb
push
mov
push
ret
mov
outsb
push
jp
cmp
stos
les
cmp
and
les
add
push
sti
mov
loop
sti
inc
cmp
fidivrs
or
push
jecxz
add
rsqrtps
adc
out
xchg
sub
adc
sub
jmp
mov
lds
push
mov
mov
mov
or
mov
mov
pop
mov
xor
xor
xor
adc
or
cltd
pop
into
mov
fcmove
add
stos
mov
xchg
push
mov
out
daa
nop
push
call
inc
mov
sahf
mov
call
jge
mov
fsubrl
or
xor
push
ljmp
jno
xchg
imul
and
push
xchg
push
fdivl
cmp
enter
mov
sub
int
pushl
shrb
pusha
jbe
xchg
sbb
push
std
jb
mov
lret
cltd
sbb
add
push
or
inc
push
push
pop
adc
inc
shlb
jge
jecxz
cmp
sbb
loopne
movsb
call
mov
xchg
mov
out
das
dec
push
das
lret
sarb
flds
pop
mov
aaa
in
sti
lret
insb
jno
cmp
loop
shll
test
aam
ljmp
dec
mov
pop
rolb
cmpsl
lods
dec
ficoml
jl
icebp
nop
ja
ss
cwtl
fstps
inc
or
sub
jns
adc
lea
cmp
out
inc
fldl
jne
mov
sub
jl
or
mov
mov
mov
or
cmovae
push
test
xlat
push
lret
dec
sti
pusha
adc
xchg
mov
es
ret
pop
enter
mov
pushf
pusha
mov
das
fistpll
adcb
ffreep
dec
jl
lods
pop
cmp
scas
cmpsb
shlb
out
mov
mov
outsl
fcoml
test
push
sbb
into
adc
sti
mov
mov
mov
cmc
dec
int3
jge
cld
jp
mov
loop
enter
je
fs
mov
add
jno
stc
jo
test
jg
mov
int3
mov
pop
mov
ljmp
int
jle
neg
jmp
dec
into
xor
sbb
adc
xchg
das
repnz
or
cmp
test
inc
inc
pop
pushf
pop
adc
dec
lock
inc
add
loopne
xchg
es
stos
jmp
in
dec
ret
scas
inc
std
push
aaa
dec
scas
sub
jecxz
fimuls
sbb
jp
xchg
iret
in
mov
fmull
cmp
mulb
inc
add
ja
int3
sti
cmp
mov
xchg
and
daa
out
xor
cltd
add
xchg
call
dec
mov
push
jnp
fcmove
and
mov
nop
flds
push
xchg
xor
pop
sbb
ret
out
cld
imul
je
lods
mov
mov
mov
int3
mov
lret
dec
dec
push
test
ljmp
jmp
xchg
test
add
adc
adc
xor
xchg
outsl
sbb
push
jge
mov
mov
add
insl
aas
xchg
pop
dec
adc
xor
lods
imul
outsl
scas
push
mov
sbb
jbe
test
addr16
inc
mov
inc
jge
popa
data16
das
sub
jne
inc
repnz
dec
nop
jno
movsl
sti
js
cmc
add
imul
mov
cld
lods
mov
sbb
scas
inc
mov
mov
test
mov
jecxz
inc
jne
mov
add
fsubr
inc
sub
cmp
int3
fldcw
add
in
jno
inc
cwtl
stc
inc
inc
push
lret
jo
or
mov
cmc
test
lock
jl
je
cmp
mov
xor
mov
mov
push
xchg
rcl
xchg
mov
fnstsw
pop
cmp
jp
push
loope
pop
mov
and
cmp
mov
test
arpl
sti
xor
cwtl
out
mov
int3
or
adc
or
xchg
pop
cmc
jl
or
cmp
cwtl
loope
filds
cmc
ret
jmp
xchg
mov
jmp
ficompl
rcll
push
or
mov
daa
xor
push
nop
sbb
cli
into
sti
sbb
loope
jo
orb
dec
jns
filds
sbb
pop
mov
popa
mov
mov
cmp
fsubs
lock
hlt
js
sbb
dec
jo
insl
out
loopne
rcl
insb
mov
xchg
mov
mov
das
jmp
sub
inc
or
rcll
aaa
scas
mov
cmpsl
cmp
xchg
or
mov
popf
mov
lods
xor
testl
data16
hlt
arpl
scas
mov
imul
ret
gs
les
ja
imul
mov
and
cli
out
xchg
xor
cmp
sub
fcoml
adc
ret
inc
sub
xlat
stos
aas
mov
sbb
jp
xlat
gs
dec
mov
cmp
mov
mov
inc
add
mov
mov
data16
jg
jge
arpl
xor
cmp
fidivs
dec
sbb
cltd
loope
in
push
cmovnp
add
jae
and
add
and
test
or
fwait
loope
fstp
test
lcall
scas
xchg
fwait
decl
lret
mov
push
arpl
sbb
inc
inc
mov
xchg
jns
mov
popa
jo
fwait
movsb
sbb
arpl
xor
mov
push
fs
sub
or
subb
sbb
shlb
aas
filds
lods
fwait
and
xchg
arpl
cmc
insl
xchg
pop
mov
shlb
push
cmpsb
loope
and
test
ss
jae
mov
jbe
movsb
loope
xchg
test
lods
jecxz
add
and
aam
jle
nop
mov
and
inc
mov
paddq
icebp
test
leave
insl
test
not
adcl
outsl
sub
outsl
fdivp
rcrb
inc
jecxz
cmpsl
addr16
mov
pop
jle
rol
push
adc
dec
xor
sub
cld
das
pop
stos
cmpsl
push
lods
pop
mov
lcall
shrl
popf
sti
repz
mov
rcrl
imul
movb
in
dec
cmp
xchg
lret
scas
in
rclb
mov
es
vunpcklps
mov
sbb
int3
clc
dec
sub
fdivl
sbb
mov
insb
lea
inc
adc
push
pop
rcll
push
rorb
mov
outsl
rorb
fwait
xchg
imul
add
push
xchg
adc
add
mov
outsl
inc
xchg
fisubs
mov
call
xchg
inc
xchg
mov
in
sub
jae
into
imul
cmp
mov
cmpsb
mov
out
mov
cwtl
or
or
mov
scas
push
add
call
loopew
insb
je
test
and
gs
jl
xlat
push
dec
cmp
dec
fisubs
addr16
fwait
in
adc
hlt
outsb
dec
ja
mov
popa
repz
ljmp
pop
add
xor
sbb
adc
cmpsb
jno
or
or
ss
ret
int3
cmp
xchg
push
mov
and
loopne
xchg
sbb
mov
rcrl
dec
mov
dec
jge
mov
sti
stos
ret
fstpt
dec
rorb
xchg
cmp
lock
sbb
leave
push
xor
mov
sub
dec
pop
xchg
push
add
sbb
pop
test
mov
and
enter
orb
add
mov
and
outsb
sub
push
xor
dec
push
enter
repnz
dec
popf
sbb
lcall
cmp
arpl
pushf
cmp
inc
xchg
xchg
ljmp
xchg
aaa
mov
jae
shll
cmp
jo
inc
test
mov
push
dec
popa
cs
test
pop
es
mov
cs
lcall
mov
pop
call
notb
cld
imul
jb
pop
jp
push
test
aad
stos
sbb
inc
sub
inc
jne
mov
pop
xchg
scas
fidivrl
insl
pop
icebp
inc
and
add
pushf
sub
stc
bound
adc
add
cmp
add
daa
iret
fnstcw
aad
or
leave
aas
je
mov
sbb
inc
or
leave
fimuls
hlt
adc
sbb
int
mov
stos
fadd
loopne
adc
mov
push
insb
and
xchg
push
xlat
adc
adc
jb
gs
das
clc
and
add
inc
push
jl
in
iret
mov
push
mov
imul
inc
mov
dec
imul
or
addl
leave
rorl
jb
and
mov
mov
push
repz
lods
xorb
add
push
push
pop
ds
pop
push
test
mov
insb
iret
loopne
sbbb
sub
and
sbb
jl
fdivrs
mov
adc
outsl
dec
repz
call
dec
and
stos
in
fdiv
icebp
or
adc
ret
jecxz
lock
xlat
cwtl
sub
xchg
push
xchg
push
test
mov
cs
enter
dec
aam
jg
xlat
xchg
scas
ret
scas
gs
xor
jnp
jb
inc
in
sub
in
push
fsubl
mov
sub
daa
and
sti
lcall
jmp
fnstsw
push
pop
ljmp
inc
add
add
add
inc
aam
jg
xchg
lock
enter
xlat
scas
inc
cmp
fs
inc
xchg
pop
xchg
loop
pop
xchg
arpl
jmp
int3
mov
inc
clc
mov
clc
hlt
push
mov
sub
push
dec
jae
enter
mov
push
fmul
lock
loopne
iret
mov
lret
sahf
push
loope
les
stos
mov
xchg
into
stc
out
jbe
push
inc
loop
xchg
xchg
lret
sbb
ret
lret
sub
out
add
mov
xor
fwait
pop
arpl
sub
push
mov
mov
adc
repnz
sbb
pop
mov
cld
sbb
mov
shlb
dec
sbb
nop
mov
fists
add
jns
loop
cmpsl
bound
pop
fs
xchg
stos
ja
mov
dec
ds
sahf
xchg
data16
in
push
jno
xor
test
sbb
cmc
outsl
cmp
test
sbb
stc
dec
sbb
xchg
cld
pop
nop
xchg
pusha
mov
mov
mov
mov
inc
jo
loope
sub
pop
xor
jl
stos
aaa
mov
imul
and
pop
cld
adc
inc
push
xchg
xchg
mov
cmp
addr16
jp
mov
outsl
jmp
and
or
xor
aad
add
push
repnz
cmc
das
push
inc
loope
push
jp
jo
cs
cmc
in
jp
lcall
adc
mov
mov
pop
cmp
mov
sbb
jno
sbb
pusha
push
mov
mov
lret
in
xchg
mov
and
mov
insb
enter
out
mov
imul
or
xor
mov
jnp
frstor
out
repz
push
mov
jge
or
inc
mov
push
xor
jnp
mov
in
js
enter
popf
mov
mov
cltd
and
test
xchg
pusha
je
das
movsl
jge
mov
add
aas
call
arpl
xchg
add
in
push
mov
cld
out
or
cmpb
push
jmp
and
jbe
popa
shll
dec
cli
pop
lahf
pop
adc
das
jge
fwait
mov
adc
call
test
scas
jbe
cmpsl
decl
psubq
fidivl
aaa
rorb
push
ds
in
mov
xor
mov
rcr
dec
out
repz
jg
sub
pop
test
mov
test
es
add
sub
jbe
jno
jl
in
inc
aas
inc
addr16
lahf
mov
lcall
mov
call
xor
aas
xchg
pushf
and
ja
lret
movsl
inc
adc
ljmp
jbe
movsl
push
fsubrl
shll
lods
cmp
fisttpll
inc
adc
mov
gs
lret
cmp
jl
mov
mov
jae
inc
dec
lahf
mov
data16
punpcklwd
stos
mov
pop
sbb
pop
lcall
jns
mov
movsl
jecxz
les
push
jne
cmpsl
out
call
cmc
mov
inc
ret
jg
fidivrl
les
and
or
aas
jl
jp
xor
bound
sub
imul
cmc
mov
adc
ret
and
cmpsl
inc
fstps
xchg
fdivrs
je
test
adc
and
pop
inc
shlb
mov
out
jne
jmp
push
adc
dec
jmp
inc
dec
jae
aas
or
mov
js
mov
jg
inc
mov
insb
jg
insl
mov
pop
mov
lcall
int3
adc
ret
xor
push
dec
ljmp
sbb
and
shlb
add
xchg
aam
cmp
push
inc
cmc
imul
cmp
nop
jo
iret
jns
mov
ret
jmp
lock
fwait
lahf
push
inc
loopne
mov
pushf
or
imul
in
pop
xor
dec
outsb
xlat
enter
ljmp
shrb
int
xor
imul
ret
sub
lret
mov
fisubrs
iret
add
idivb
push
cmp
mov
out
mov
and
scas
jle
adc
inc
or
data16
out
int3
mov
loope
shl
or
nop
arpl
shlb
leave
lahf
mov
mov
xchg
mov
pop
cli
push
push
cs
je
inc
cwtl
jg
ret
jle
jmp
icebp
cwtl
jl
xchg
cwtl
shlb
and
sbb
notb
stos
jb
decl
cmp
and
push
mov
ficoms
imul
sub
lahf
cmp
cmp
mov
fwait
insl
fs
adc
pop
icebp
pushf
ds
shll
je
or
xor
add
movsb
data16
in
pop
mov
ss
xchg
sub
pop
das
mov
std
es
int3
ret
and
fiadds
iret
push
iret
repnz
sub
push
stos
push
in
ljmp
jmp
test
inc
cmp
xchg
stos
cmpsb
jno
mov
pop
adc
inc
sahf
sub
arpl
call
push
pop
icebp
pop
mov
cmp
or
cmp
xor
dec
movsb
mov
push
push
inc
fistl
sbb
std
jecxz
cmpsl
fdiv
cld
xor
inc
out
ret
jmp
pop
jne
jle
mov
lret
inc
out
inc
jg
adc
and
test
mov
dec
aam
pushf
jnp
sub
xchg
and
xchg
pop
add
fiadds
fildl
adc
pop
aam
or
xor
push
mov
arpl
mov
movsl
inc
jb
lret
jbe
shll
pop
inc
pop
adc
in
or
xor
std
mov
nop
pop
mov
dec
mov
out
cs
xchg
imul
loop
insl
mov
or
and
and
xor
pop
cmp
pop
sub
cmp
cmp
jl
xchg
aaa
out
xor
adc
xchg
adc
cmp
push
popf
push
test
aad
in
test
repz
lret
hlt
and
cs
stos
mov
mov
and
adc
shrb
sbb
mov
out
cmp
ja
fmul
mov
sub
sti
cmpsl
sti
dec
xlat
xchg
stc
adc
jae
mov
xchg
ret
xchg
or
stc
ret
lcall
subb
nop
cmpsl
cmp
in
test
cmc
pop
dec
dec
cmpsb
and
fistpll
xlat
mov
xlat
push
test
adc
out
in
sub
addr16
inc
bound
test
sbb
leave
sbb
or
sahf
repnz
ja
add
jg
out
jle
cmpsb
or
in
xchg
and
add
adc
into
in
bound
jmp
clc
jo
insb
loopne
xchg
sub
xor
xchg
mov
fwait
mov
cmp
lcall
mov
insb
and
and
aad
in
pop
mov
jo
clc
outsb
lds
fs
lds
adc
test
xchg
jl
ret
xchg
jae
les
popf
pop
shr
dec
jns
ds
lods
push
incl
or
shrb
pop
imul
xchg
jecxz
sbb
push
add
dec
pop
lods
rcll
and
add
or
mov
mov
push
arpl
popf
mov
fchs
cmpsb
mov
ds
in
cmp
or
lahf
scas
pop
dec
lea
es
mov
sub
xor
dec
xor
sub
ret
rorb
std
call
adc
dec
fwait
and
push
loop
mov
les
inc
loope
or
mov
cmpsb
mov
pop
call
cli
mov
rolb
mov
mov
adc
and
loope
cmp
lock
mov
sbb
pop
int3
sti
mov
xor
test
add
scas
fisttpll
push
jnp
xor
adc
jbe
jg
in
in
mov
fisttpll
loope
and
test
xor
fs
leave
dec
testb
sbb
xor
and
jo
xchg
sbb
sbb
gs
hlt
sbb
sub
sub
call
push
xchg
sbb
daa
jb
dec
test
cmpsl
testl
movsb
inc
mov
push
push
sbb
mov
int3
mov
mov
xchg
cmp
mov
xchg
loop
push
out
mov
lods
mov
inc
repz
outsl
xchg
sub
push
xchg
cmp
jne
mov
jl
mov
jge
fldcw
outsl
push
in
loop
mov
adc
jmp
aas
jae
xchg
xchg
imul
inc
mov
jnp
jae
fmul
jb
cmpsl
jmp
outsb
sbb
js
nop
sbb
ret
mov
cmp
in
ret
lret
test
movsb
fidivrs
jecxz
xchg
mov
pop
icebp
jns
stc
xchg
mov
ja
and
xor
cmp
addr16
sub
iret
add
mov
jl
into
fadd
subb
mov
hlt
imul
jge
popa
in
mov
popf
fwait
stos
dec
loop
mov
jecxz
pusha
mov
pop
mov
dec
insl
add
fisttps
repnz
add
fistpll
leave
cmp
xor
movsb
aas
sub
movsl
pop
daa
xchg
movsb
shlb
sarb
lods
cmpsl
arpl
mov
ficomps
or
adc
mov
fs
mov
test
inc
xor
push
fisubrl
cmpsl
xchg
test
jne
xchg
xchg
cltd
mov
scas
insb
shrl
sti
lods
sbb
pop
aam
dec
andl
in
dec
push
jae
sahf
outsb
add
mov
movsb
out
imul
movsl
xlat
inc
pop
ficoml
or
adc
je
stos
jl
stos
mov
fdiv
pushf
subb
push
jle
xchg
loopne
mov
clc
je
loop
sub
cs
fisttps
je
dec
leave
jle
dec
dec
xor
imul
data16
dec
or
xchg
pop
jecxz
cs
cmp
mov
inc
mov
and
xchg
push
sub
addr16
fsubrp
lcall
mov
aad
push
sub
and
add
xor
movsb
and
pushf
rcr
nop
divb
mov
mov
icebp
test
sahf
sbb
xchg
in
pop
repnz
adc
out
stos
out
enter
lahf
adc
jo
imul
loop
aad
jb
nop
add
outsb
popf
dec
rorb
repnz
cmp
or
sbb
mov
leave
aad
add
loop
add
mov
ljmp
pop
push
loope
call
outsl
push
adc
mov
or
dec
mov
fsubr
cld
loope
popa
pop
test
xchg
addr16
inc
lcall
or
cmp
inc
jne
mov
pop
movsb
iret
mov
lods
sbbb
lea
mov
sbb
mov
cld
repnz
pop
jbe
adc
sub
adc
mov
add
dec
xlat
clc
adc
repnz
leave
std
pop
inc
add
aad
lcall
movsl
imul
mov
xchg
and
out
adc
aam
filds
and
inc
inc
cmp
push
cmc
lock
xchg
cwtl
lahf
xorb
lods
clc
mov
push
dec
sub
shrl
add
adc
adc
adc
cli
xlat
xchg
cltd
pusha
xlat
xor
push
lahf
lock
sti
add
jmp
and
pop
outsl
pop
jmp
cltd
xchg
mov
test
sub
xchg
push
push
mov
sbb
ljmp
insl
fs
mov
sub
aad
pop
js
dec
stos
sbb
inc
adc
loop
push
jp
mov
lods
and
aad
and
inc
lods
or
push
sub
cmp
adc
inc
xor
or
xor
aad
xchg
and
aaa
xchg
dec
mov
and
lds
dec
mov
add
dec
into
mov
jnp
call
sbb
jg
adc
mov
sub
push
aad
jmp
cltd
mov
test
clc
adc
add
ja
sahf
mov
lods
sub
pmuludq
dec
pop
lcall
lret
xor
mov
mov
adc
aas
mov
daa
xchg
sub
jmp
movsl
insl
movq
jae
pop
add
xor
xor
dec
mov
mov
inc
ss
adc
mov
jg
push
add
div
or
dec
repnz
jnp
and
call
cmp
orps
xchg
movsl
or
mov
scas
mov
push
das
jo
fs
mov
popf
and
pop
xchg
and
mov
imul
arpl
mov
sub
jns
mov
mov
mov
jg
sub
mov
dec
rclb
sub
scas
and
data16
stos
out
movb
inc
mov
push
sub
pushf
push
imul
insl
loopne
pop
test
fmull
roll
sub
cmp
lea
shlb
icebp
and
mov
es
aaa
mov
sub
loopne
cmc
out
push
add
mov
movsl
out
icebp
cwtl
jg
xor
adc
dec
and
sub
test
pop
in
mov
enter
in
sub
sub
stos
sbb
push
ss
mov
or
decb
push
inc
adc
imul
dec
push
add
xchg
outsl
dec
or
add
mov
dec
stos
lret
mov
fstl
movsb
jb
fdivrs
lcall
push
cmp
mov
mov
mov
sbb
shll
cmc
or
cmp
shrl
rcr
jecxz
popa
mov
cmc
push
push
jo
inc
sar
cmc
imulb
inc
enter
inc
jmp
clc
aam
add
jecxz
and
mov
adc
jbe
mov
or
dec
add
out
clc
aas
enter
les
add
and
sub
pop
pusha
and
out
ljmp
bound
or
and
loope
enter
adc
fwait
and
rolb
movsl
inc
rorb
repz
dec
add
pop
in
add
sbb
shrb
outsb
rcll
inc
cltd
mov
push
fwait
iret
or
test
xchg
lea
xchg
adc
fildll
push
sahf
pop
imul
mov
adc
sub
sti
sub
mov
sub
and
test
rcrl
addl
sub
in
sbb
add
daa
cmc
mov
push
xor
nop
push
test
add
and
lods
jmp
std
andl
push
js
mov
xchg
pop
in
enter
cmpsl
xor
jb
lcall
std
lea
sub
subl
dec
mov
adc
push
xor
mov
faddp
adc
mov
ja
sbb
sub
push
ret
sbb
or
jbe
jecxz
cmp
or
sbb
dec
xor
imul
addl
cwtl
outsl
popa
xchg
mov
add
adc
mov
and
push
mov
lea
leave
movsb
or
push
pop
incl
pusha
mov
cli
cmp
jbe
xchg
mov
mov
jns
test
lahf
fcmovb
pop
enter
sub
int3
nop
lahf
mov
sbb
pusha
jmp
sub
jecxz
fcmovbe
cmp
dec
cld
aaa
jo
dec
lret
jns
sahf
cwtl
movsl
test
push
faddl
inc
loopne
xor
cwtl
loope
jnp
std
int3
inc
mov
movsl
and
fidivs
xorl
xchg
mov
rcpps
dec
add
pop
mov
aaa
xchg
call
imul
popf
and
jne
cwtl
je
inc
sbb
push
lret
dec
in
dec
mov
ds
dec
mov
scas
mov
lret
stos
and
imul
xchg
outsb
popf
sub
cmp
push
test
iret
lods
sub
push
aas
lods
inc
pop
pusha
dec
pop
xchg
mov
mov
std
ljmp
cmp
sbb
je
push
sbb
xor
mov
xor
mov
lods
pcmpgtw
inc
mov
pusha
aaa
dec
mov
inc
xchg
pop
out
jb
push
xor
fnstsw
dec
jae
int3
cmpsb
push
mov
pop
fldenv
and
shl
add
insl
and
or
jae
cmpsb
sbb
or
bnd
or
test
fmuls
int
stc
jg
jmp
fistl
daa
pop
xor
jecxz
sub
data16
lods
mov
sbb
and
add
or
sbb
adcb
mov
xor
leave
sub
test
jne
xchg
inc
dec
mov
jecxz
lret
jbe
mov
cmp
lock
popa
push
stos
jecxz
mov
and
push
sub
mov
mov
add
ret
jne
aam
out
inc
pushf
sub
push
test
pop
stc
pop
std
neg
cmp
add
or
test
or
dec
out
pop
xchg
repnz
jbe
fcmovu
and
or
dec
test
test
addr16
cmpl
lock
mov
cmc
mov
insb
cld
pop
aas
dec
jge
fwait
clc
psubq
out
jb
fadds
sbb
jne
insl
xlat
dec
lods
dec
arpl
out
pusha
lcall
sbb
pop
sbb
and
ja
cltd
arpl
clc
in
pop
test
cmpsb
mov
mov
dec
jge
add
push
aad
dec
sahf
sti
jge,pt
in
add
ret
or
cltd
hlt
les
sbb
stos
or
cmp
orl
jno
ljmp
std
scas
and
pop
enter
push
xor
dec
mov
or
push
lcall
xor
lods
jmp
mov
jbe
bound
popw
and
out
enter
push
sub
sbb
data16
testl
idivl
sbb
pop
add
pop
hlt
sub
sbb
cmp
mov
lods
fwait
add
test
sar
cs
mov
and
orb
mov
adc
mov
fwait
jb
or
xchg
xor
mov
push
adc
adc
pop
fst
icebp
aaa
iret
push
cwtl
cmpsb
pop
inc
add
addr16
in
adc
test
aaa
and
xchg
sub
mov
out
ljmp
and
lods
enter
mov
inc
aad
inc
mov
idivl
rcll
rorb
xorb
repz
test
push
xor
in
stc
pop
pop
test
cmp
imul
stc
test
addl
out
jp
push
sub
rolb
mov
scas
inc
call
xor
stos
mov
xorl
ss
mov
dec
mov
dec
popa
testb
lea
or
pop
lea
or
sarl
mov
xor
and
iret
je
pushw
ja
inc
test
lds
sbb
scas
xor
test
mov
cld
es
mov
fs
incb
mov
mov
out
or
repz
sbb
adcl
push
idiv
dec
jl
fs
add
mov
and
mov
aaa
cmp
jmp
daa
ja
cltd
lods
and
push
lret
cmp
sbb
shr
mov
mov
je
pop
mov
test
and
jno
fisttpl
cmp
dec
mov
pop
iret
or
sti
cmpsb
cs
mov
rolb
dec
push
pop
mov
mov
xchg
test
outsl
xor
pop
dec
cmp
mov
inc
cmp
sbb
cmp
bound
ret
cmpl
aaa
sbb
test
push
fsubl
out
loopne
push
pop
test
cwtl
por
cmc
jg
pop
or
or
mov
dec
pop
jmp
fscale
mov
cmpsl
dec
test
leave
xchg
rclb
into
mov
scas
lods
add
mov
psubd
incl
rol
dec
clc
pop
push
loopne
data16
mov
dec
xor
sub
mov
sbb
pop
cli
das
pop
iret
add
sbb
push
pushf
hlt
in
mov
jmp
dec
lcall
mov
leave
jbe
lret
sbb
popa
ljmp
stos
jae
test
leave
xchg
push
mov
xor
ss
xor
pop
mov
das
inc
addr16
mov
mov
fwait
ss
pop
fldt
insl
insl
jbe
sbb
adc
or
xor
xchg
sub
mov
test
pop
test
xchg
dec
test
jbe
les
xchg
fcmovu
lea
ror
sbb
cmp
mov
lret
xor
dec
xor
lds
mov
or
pop
pop
mov
fstps
idiv
mov
pop
xchg
cmp
aaa
mov
mov
adc
call
mov
rcll
sub
movsb
or
imul
aad
jge
cltd
aad
lock
sub
sbbb
mov
inc
mov
mov
ljmp
adc
je
add
out
mov
test
or
pop
js
in
loop
add
push
dec
fisubrl
push
ja
test
xor
inc
inc
insl
arpl
negl
adc
imul
gs
pop
fsubrs
cmp
stos
xor
mov
mov
mov
adc
push
cmpsb
adc
lods
out
pop
in
cmpsl
mov
xor
mov
adc
or
mov
dec
sbb
cs
lret
icebp
in
scas
cmp
testl
mov
mov
loopne
xor
idiv
mov
push
inc
adc
or
cmp
or
test
sbb
xor
jnp
popf
out
outsb
out
jmp
btc
mov
jo
inc
mov
xor
data16
mov
vandps
jecxz
push
addr16
lahf
push
and
lret
lahf
add
std
iret
stos
roll
in
int3
dec
pop
adc
jmp
addr16
push
aaa
into
lret
pop
in
es
push
mov
out
mov
cmp
fwait
in
ja
sti
xchg
dec
adc
cwtl
sti
mov
dec
push
sbb
imul
lret
mov
push
dec
cmp
fnstsw
pop
mov
pop
mov
imul
je
push
enter
jmp
cmpl
addr16
mov
leave
sub
pop
dec
shll
mov
hlt
add
pop
stc
cmc
mov
or
xor
or
jle
xchg
mov
adc
sub
fs
out
sub
mov
pop
mov
xlat
mov
pop
sti
xor
adc
aaa
inc
sbb
and
and
sbb
aam
fistpl
lock
and
pushl
adc
enter
jo
add
cld
jp
mov
inc
sbb
mov
in
pop
pushf
xor
xlat
xlat
dec
dec
sbb
stos
xrelease
jge
pop
inc
stos
push
jbe
lea
push
jmp
popa
jbe
adc
popa
jne
push
js
out
adc
jo
lret
cli
and
mov
mov
push
ljmp
test
push
in
addl
or
mov
xchg
lea
mov
jecxz
jbe
mov
leave
mov
movsl
je
fdivrs
bnd
jle
inc
jbe
jp
inc
mov
mov
inc
ljmp
lret
aad
fimull
pop
nop
xchg
stos
cmp
aad
jns
imulb
cmp
cmc
mov
cs
jp
jmp
dec
sbb
popa
shrb
sbb
pop
dec
int
and
xor
adc
into
arpl
pusha
hlt
call
loop,pn
add
inc
mov
adc
xchg
adc
xchg
notb
sbb
in
test
mov
loop
outsl
clc
mov
inc
xor
imul
mov
jp
or
mov
mov
cmp
cmpsl
iret
xor
gs
xchg
jne
lods
clc
mov
mov
outsl
sub
xor
addb
mov
fs
sbb
movsl
pop
or
mov
test
nop
in
sub
add
movsl
jne
test
divl
xorb
jne
leave
mov
xor
push
sub
rol
insl
adcl
xor
lock
mov
pop
xchg
pushf
hlt
add
fists
mov
repz
sahf
loope
xor
icebp
mov
mov
adc
mov
outsl
dec
lret
add
stos
pop
push
xchg
inc
sbb
jns
popf
aam
addl
out
jp
adc
faddp
inc
bound
and
lock
sub
test
adc
mov
clc
mov
sub
gs
xor
repz
push
lods
scas
shl
lret
sub
pop
or
negb
cmp
lret
jge,pn
sbb
cmpl
ret
ja
jp
sbb
pusha
or
jne
mov
fs
push
mov
out
or
ffreep
inc
data16
pusha
xchg
or
cmp
pop
out
mov
outsl
lods
ja
and
jbe
gs
sbb
lahf
adc
mov
push
clc
imul
movsl
push
rcrb
dec
jnp
data16
dec
jg
loope
pop
cmpb
in
mov
out
subl
cltd
lret
rcr
cmp
pop
adc
jae
mov
mov
inc
cmpl
fisubl
ret
sbb
mov
xchg
shl
cltd
popl
and
jmp
inc
adc
inc
fldl
mov
scas
out
mov
mov
xlat
repnz
mov
add
lret
aas
incl
and
lock
ljmp
je
mov
cs
dec
les
das
jbe
pop
out
xor
add
loopne
mov
fs
lret
xchg
cmp
dec
or
or
ret
mov
andb
es
pop
add
lahf
ss
in
stc
pop
jp
stos
add
leave
enter
loop
xor
nop
ret
cmp
movsb
into
into
or
sub
ss
repnz
mov
sub
sub
dec
das
xorb
adc
mov
jl
aaa
popa
mov
testl
pop
cmc
fists
add
or
popf
mov
add
xchg
sbb
add
adc
jp
or
add
dec
push
repnz
fisttpll
mov
ror
jo
inc
lret
inc
fwait
sahf
add
pop
fcoms
adc
pop
int3
sbb
push
add
movsl
mov
lock
loopne
xor
fiaddl
jae
adc
test
sub
loope
pop
adc
mov
jno
ds
pop
aam
add
fucomi
pop
out
stc
les
sub
sub
dec
mov
and
adc
lds
stc
fcmovbe
pop
sarl
imul
xor
adc
cmp
pop
push
aas
frstor
dec
xchg
push
and
and
pushf
je
jo
scas
add
int
and
daa
fsubr
movsl
mov
xchg
notb
mov
fnstsw
adcb
lcall
test
adc
cmpsb
xor
xchg
pop
cli
imul
into
in
mov
fcmovnu
ret
ret
jnp
lods
mov
push
pop
pop
cmp
cmp
mov
movsl
xor
add
push
xlat
aas
scas
loope
inc
ret
lea
lret
push
cmp
dec
clc
lret
dec
cmp
ljmp
push
pop
mov
sub
push
stc
lds
daa
push
mov
push
ret
jns
mov
lret
lea
inc
mov
scas
adc
movsl
sbb
test
in
test
or
jno
cmpsl
inc
mov
xor
fiaddl
sub
idivb
in
dec
pusha
inc
adc
pop
xor
sbb
into
xor
rcrl
loope
leave
xor
sbb
std
add
cmp
fdivrs
pop
das
mulb
inc
int
pop
clc
rol
sub
jb
cmc
cld
gs
loopne
movsl
leave
jge
in
sub
test
mov
popf
aam
dec
aam
out
xor
cltd
push
pusha
mov
aam
push
repz
xchg
scas
out
sahf
pop
scas
pop
fs
cmc
jno
or
stos
xchg
fidivrl
cmc
or
adc
mov
xlat
xchg
dec
or
push
lea
push
push
sahf
cmp
test
mov
shrb
sbb
roll
incl
scas
or
or
and
fwait
rcrl
inc
adc
pop
test
test
add
mov
pop
gs
lods
xor
and
xchg
rorl
add
cmp
mulb
loope
or
aas
or
xchg
push
std
fadd
inc
aaa
mov
cli
into
adc
mov
jae
jg
xor
cs
fisubs
adc
hlt
rol
xchg
and
mov
imul
cvtps2pi
sub
push
jb
lret
inc
in
push
stc
push
in
or
rcrb
push
and
ret
adc
ja
mov
xor
and
movsb
and
push
push
dec
mov
mov
js
pop
xlat
push
adcb
cli
pavgb
inc
mov
cmp
mov
ret
ljmp
jb
test
loopne
mov
cmp
adc
mov
xlat
stos
jno
sbb
mov
into
cmp
mov
into
sub
add
inc
jl
aad
subb
out
rcr
inc
dec
or
sub
mov
dec
mov
sbb
xor
sub
adc
xor
cmp
out
stos
sti
imul
pushf
push
int3
aad
loop,pt
sbbb
shl
and
lret
dec
fcompl
add
loop
dec
mov
and
or
aad
push
mov
pop
xchg
adc
nop
add
mov
sbb
popa
shr
push
mov
sub
fsubrp
scas
addr16
jge
aam
fildll
fildl
jmp
push
out
mov
adc
ret
xor
push
or
js
iret
xor
jbe
ret
or
jo
test
dec
and
test
xchg
pop
sti
add
or
sbb
test
xor
mov
mov
jns
mov
ds
rcrb
cmp
add
fnstcw
les
push
cmp
rorb
mov
rorl
mov
fsubp
adc
push
sbb
mov
adc
xchg
pop
adc
adc
xchg
outsl
inc
aaa
mov
pusha
pop
jbe
or
jge
popa
and
fcmovb
sub
pop
pop
sub
int3
lret
xor
sbb
jae
xor
or
in
repz
rcrb
loop
push
ds
int
mov
rol
jmp
mov
push
mov
jno
cmp
sbb
xor
sbb
dec
sbb
cmp
dec
push
mov
in
jbe
mov
jbe
and
inc
adc
mov
xchg
lret
sub
push
or
ret
push
pop
cmp
mov
lret
aaa
movsl
dec
jns
ret
in
pop
imul
xor
fbld
jle
loopne
test
jmp
sub
bound
out
add
inc
push
pop
dec
pop
lods
jbe
scas
xchg
mov
and
xor
icebp
mov
sub
cmp
call
mov
shrb
fdivrs
clc
xchg
cmpb
es
jns
icebp
or
loopne,pt
xchg
cs
fs
cmpsl
addb
mov
add
or
stos
in
mov
adc
add
mov
push
in
ja
sbb
dec
lock
push
icebp
adc
jg
sbb
popa
xchg
push
ret
addl
fbld
ret
in
sub
xchg
test
mov
dec
inc
out
fldenv
pushf
cmp
lahf
outsl
fwait
out
inc
cmpsb
jmp
mov
adc
bound
push
pop
add
stos
shll
jnp
lret
pop
loope
adc
jecxz
sub
mov
ficoms
popa
jbe
sub
sub
out
movsl
xchg
mov
sbb
inc
inc
daa
loope
cli
fwait
dec
xor
mov
sarl
leave
scas
cmc
or
push
loop
xchg
jo
sbb
insl
xlat
push
jno
add
jno
out
dec
loope
xchg
dec
pop
mov
xor
jb
mov
mov
loope
push
jne
sub
xchg
mov
or
xchg
push
adc
mov
mov
add
or
mov
pop
xchg
sub
leave
jnp
or
sbb
mov
and
cmpsl
test
loopne
jle
outsl
mov
out
push
xchg
push
sbb
mulb
xlat
pusha
fs
fmuls
icebp
mov
adc
sbb
and
ja
std
push
pop
push
xchg
and
mov
inc
cmpsb
push
pop
adc
scas
in
sub
aam
mov
push
sub
mov
cmp
mov
jle
loopne
loopne
lods
push
ss
arpl
insl
mov
cmp
dec
out
cmc
scas
mov
lret
sarl
inc
out
sbb
jb
outsb
mov
stc
jno
push
sbb
loopne
adc
cld
popa
popa
nop
rorl
sbb
xor
mov
insl
rorl
add
xlat
mov
jo
lods
les
and
mov
movsb
gs
add
jno
jge
mov
xchg
iret
or
pop
dec
xchg
je
or
and
and
sub
andb
test
daa
lret
fisttpl
data16
andl
xlat
popf
out
xor
jb
test
out
idivl
in
sahf
aad
arpl
stos
adc
arpl
pop
lret
int3
xchg
xchg
in
xor
gs
mov
add
push
mov
cmc
mov
sarl
sarl
lcall
jns
dec
data16
jae
push
aas
mov
stos
mov
fidivl
inc
xor
inc
pop
mov
cmp
lret
fdivrl
jl
nop
into
sub
rorl
mov
dec
fdivr
lret
mov
pop
push
mov
mov
adc
dec
dec
out
or
ds
subl
cmp
bound
inc
out
popf
repnz
pop
cmp
insb
cmp
scas
addr16
push
adc
adc
push
mov
mov
mov
outsl
leave
and
lcall
lods
bound
test
in
rolb
mov
mov
shlb
jae
sbb
sub
add
jmp
and
mov
lods
lods
xchg
aad
sbb
fisubrs
jle
aam
hlt
pop
pop
ret
inc
jnp
mov
mov
cmp
fbld
jnp
in
les
and
push
outsb
mov
out
aaa
ja
and
xorb
xchg
push
xor
mov
dec
xchg
mov
pop
in
cs
mov
in
mov
fsubs
lods
stc
add
outsl
test
mov
out
mov
fstpt
lods
das
dec
xor
cmp
jecxz
xor
mov
movsb
sub
xchg
mov
daa
iret
push
jnp
mov
or
sbb
add
fsubr
ss
push
xchg
incl
cmp
cmp
mov
xlat
sbb
jno
push
icebp
test
sarl
xor
iret
dec
iret
sarb
jbe
lea
repz
dec
mov
call
leave
leave
mov
leave
mov
cwtl
mov
test
dec
inc
data16
mov
enter
out
push
les
mov
popa
mov
sbb
pop
or
rcrl
ja
mov
mov
test
inc
mov
adc
inc
or
or
in
test
mov
mov
mov
mov
outsb
fldt
inc
push
adc
dec
jnp
lods
pushf
pop
push
cld
mov
lret
in
mov
sbb
mov
xor
cmp
push
daa
add
fnstsw
jns
jp
rcl
and
inc
in
lods
lea
xchg
popf
xchg
or
and
xchg
xchg
ret
cmp
adc
sar
pusha
js
lods
cmp
pop
cs
test
lret
mov
sahf
ret
pop
pushf
jl
jne
fmull
cmpsb
imul
std
xor
movsb
iret
test
ss
jle
arpl
lods
adc
loope
nop
sub
mov
repz
into
adc
stos
push
push
not
sub
push
je
push
enter
mulb
mov
xor
jp
push
push
push
cmp
cmp
mov
shlb
xor
mov
mov
sti
cmp
fldenv
leave
clc
xchg
xchg
push
sbb
cmp
icebp
dec
jmp
mov
lea
fdiv
mov
mov
push
fnclex
addr16
stos
ljmp
jbe
sub
inc
fwait
outsb
out
dec
mov
sub
mov
clc
imul
lock
cwtl
xchg
inc
je
inc
mov
jp
js
mov
jp
jp
ljmp
in
sahf
scas
cmp
pop
and
das
pushf
cmpsb
cmpsb
test
popa
push
adc
pop
and
pop
iret
test
es
mov
mov
jno
ljmp
das
pop
lods
xor
mov
or
xor
sub
es
mov
nop
sti
push
test
jns
movsl
les
iret
mov
fisttpl
mov
push
shlb
call
adc
dec
mov
ret
and
sub
xor
fsub
out
je
hlt
ds
xchg
enterw
mov
jo
cmp
mov
imul
inc
stos
add
gs
fisubrl
out
mov
jb
xor
bound
xchg
aam
inc
aad
add
mov
xchg
and
mov
pop
xchg
fnstenv
jge
pop
dec
lods
jnp
insl
mov
sbb
sti
repz
adc
pop
xor
sub
mov
adc
pop
sub
sbb
xchg
sub
mov
jnp
push
jmp
nop
jp
scas
es
fidivl
xchg
sbb
in
imul
aaa
out
and
push
mov
pop
xchg
jbe
repz
loop
adc
mov
push
and
scas
lahf
mov
or
jmp
xchg
popa
xorb
imul
adc
sbb
std
pop
rcll
fidivs
and
or
and
mov
xchg
movsl
push
dec
adc
push
add
or
cmp
xor
push
and
fsubs
shrl
aaa
mov
sbb
cmpl
flds
lcall
sbb
adc
mov
mov
shr
mov
push
mov
enter
mov
in
fidivl
push
mov
xchg
and
les
pop
les
ret
call
imul
xor
mov
div
lret
xchg
jp
mov
jne
outsl
xor
cld
mov
push
mov
loop
push
jo
scas
xrelease
imul
mov
cmp
mov
shr
mov
insl
mov
insl
in
mov
dec
sti
fsubrs
sub
ss
test
gs
mov
inc
sahf
pop
movb
pushf
mov
ret
mov
dec
pusha
aad
inc
and
mov
popf
fildll
push
roll
jmp
stos
push
es
cmp
or
push
add
push
mov
out
shrb
notl
iret
adc
scas
xor
dec
push
xchg
mov
fmull
jg
mov
or
arpl
sbb
enter
adc
xor
fcmovbe
xchg
xor
sub
or
lock
xor
sub
pop
stos
outsb
lret
sbb
fwait
add
mov
stc
pop
loopne
and
shl
shlb
xor
sbb
cmp
pop
xorl
outsl
shll
jo
daa
jl
mov
fnop
mov
cld
sbb
push
and
lods
xor
cmpsb
mov
lods
pop
push
imull
lds
dec
repnz
add
lods
lcall
incb
jns
mov
into
shl
pop
jge
xchg
add
sti
notl
call
outsl
xor
inc
test
xlat
jg
sub
dec
test
dec
inc
and
sub
pop
lods
pop
jno
xchg
dec
xor
adc
mov
out
push
cmp
or
fisubrl
xor
dec
push
xchg
mov
mov
iret
mov
sub
jmp
jo
mov
in
adc
or
xchg
jge
scas
lret
or
mov
and
mov
xchg
mov
sbb
jl
xor
pushf
inc
rol
jnp
sub
ret
sub
loope
dec
pop
clc
mov
fs
popf
jno
inc
fptan
mov
dec
ja
out
lret
or
leave
popa
mov
shll
aaa
mov
pop
jl
sub
push
sbb
or
xchg
inc
repnz
addr16
xchg
fldt
scas
test
and
cmp
add
test
ss
jne
gs
repnz
and
pop
rolb
nop
sub
stos
sub
push
xchg
and
or
jne
or
add
mov
lock
jecxz
xchg
sarl
xchg
leave
daa
fists
mov
loopne
repnz
gs
inc
mov
sub
bound
cltd
jns
aad
xor
shrb
push
stos
lock
cmc
movsl
sub
mov
add
pop
mov
jo
inc
cmp
sarl
iret
bound
pop
sub
add
push
out
sub
mov
andb
sbb
jg
jo
mov
js
cmp
mov
aam
js
ljmp
stos
push
sub
mov
jmp
insb
cmp
dec
pop
mov
daa
pop
mov
inc
push
inc
aam
mov
repz
mov
xchg
fildll
stos
mov
xor
mov
sub
add
sub
mov
stos
mov
sbb
dec
mov
sarb
pop
add
loope
iret
lret
stos
shrb
xor
jecxz
mov
fisubs
cmpsb
fucomip
lock
push
popa
insl
pop
lcall
call
mov
pushf
sub
add
icebp
cmp
in
aas
cld
ret
pop
cmp
es
or
fmuls
fisubs
movsb
jmp
or
lock
subl
jmp
pop
int
mov
xchg
aam
lods
mov
push
mov
add
lds
pusha
mov
cltd
rolb
pop
and
aas
out
push
mov
mov
movsb
ljmp
ret
inc
pusha
roll
stc
xchg
subb
adc
ja
sbb
fnsave
add
rcrb
xor
repnz
sahf
inc
sub
mov
pop
out
inc
jns
ret
cmc
sbb
out
pop
inc
sub
sbbl
shll
fstl
std
mov
or
jne
pop
fwait
stos
mov
mov
xor
loope
cltd
add
inc
pop
inc
lods
sbbl
add
pop
mov
lock
nop
adc
test
mov
mull
imul
mov
sub
xor
lsl
push
out
mov
cmp
cmp
sub
fsubl
loopne
xchg
xor
and
imul
push
mov
xor
lret
mov
jecxz
ficompl
int
mov
sbb
jne
dec
fsub
in
aaa
pushf
and
xorb
ret
sti
dec
insb
test
lea
aam
addb
xchg
sub
inc
cmp
sbb
or
pop
inc
add
xchg
in
lods
lret
sub
push
mov
jbe
les
and
pop
add
and
mov
cmp
xor
data16
pop
cmp
sub
add
add
insb
mov
mov
sbb
mov
clc
test
jmp
pusha
mov
xchg
sub
lret
jecxz
push
mov
enter
and
adc
out
sub
jo
push
out
lea
mov
pop
cmp
ficoml
data16
or
xchg
mov
jmp
cwtl
mov
mov
sahf
movl
cmp
test
mov
hlt
inc
add
call
subl
mov
push
inc
cwtl
jp
jae
enter
inc
aam
jb
jle
iret
leave
loopne
jo
scas
imul
xchg
and
icebp
sbb
fdivl
mov
or
cmpl
cmp
adc
mov
push
out
push
cwtl
push
mov
outsb
jb
in
iret
mov
inc
mov
lret
dec
or
mov
xchg
pop
xchg
movsl
dec
dec
movsl
clc
xor
push
dec
hlt
xor
out
inc
mov
int3
pop
jns
lahf
out
pop
sbb
mov
adc
add
add
inc
jne
movsb
daa
jno
cli
xchg
out
in
xor
movsb
jns
add
cmp
push
inc
inc
icebp
xchg
adc
test
dec
rclb
mov
sbb
jae
xchg
lcall
jae
out
insl
das
adc
jb
test
sahf
adc
inc
jne
imul
cmpsl
je
enter
lret
das
outsb
mov
into
arpl
lds
das
pushf
sub
cmpsl
sbb
rcrl
loope
xor
mov
lret
sub
and
sbbb
stos
fcmovbe
mov
push
push
add
sti
pop
jae
je
pop
mov
cli
jnp
push
lods
fcoml
inc
inc
cmp
jo
js
push
gs
mov
les
pop
push
mov
push
mov
push
xchg
add
dec
cwtl
pop
int
mul
cmp
aam
or
pop
out
nop
inc
mov
loopne
ljmp
call
ja
sub
push
pop
xchg
stos
loope
inc
outsb
int
add
fidivs
jmp
jb
jge
movsb
cmp
add
cmp
stos
loop
sub
push
lea
gs
aad
addr16
cmc
push
push
lahf
jge
enter
cmp
sar
jl
shrl
dec
aaa
xchg
pop
nop
push
repz
mov
or
cmp
ret
cmp
imul
xor
mov
hlt
insl
sub
xorb
pushf
loopne
cmp
js
js
repz
inc
mov
dec
push
lock
fidivrs
dec
push
imul
jb
push
je
mov
out
inc
inc
jmp
imul
shrb
adc
mov
outsb
jbe
negb
popf
lea
pop
outsl
mov
insb
xor
jecxz
sub
mov
adc
xchg
popf
xchg
xlat
test
jns
xlat
jne
cmp
sbb
lds
cli
sbb
mov
mov
popf
lcall
dec
mov
mov
sbb
sub
pusha
sbb
int
push
nop
popf
add
icebp
mov
and
adc
push
imulb
sub
inc
stc
sbb
jp
sahf
in
mov
pop
add
push
push
and
aaa
xchg
bswap
ljmp
cld
pop
and
cmp
cmpsb
in
fisttpl
adc
pushf
dec
pop
adc
scas
mov
pop
jmp
pusha
mov
xor
or
lcall
addb
js
inc
mov
ficomps
mov
adc
or
fnsave
ret
mov
pop
pop
out
sub
and
sbb
in
sub
mov
push
and
movsb
push
or
std
es
icebp
lret
loope
out
repnz
mov
addr16
test
sahf
arpl
jae
jmp
push
inc
pop
fcmovnbe
mov
aad
push
mov
add
repnz
sbb
mov
push
xorl
jb
mov
and
sub
hlt
gs
or
out
cld
jnp
pushf
out
cld
lret
cwtl
jmp
sahf
negl
add
iret
shlb
jne
rcll
cli
mov
sub
pop
mov
testb
mov
out
xchg
lds
sets
movsl
enter
imul
clc
in
aas
andb
and
or
in
lret
jp
mov
fadd
xchg
iret
adcb
and
pop
mov
fcmovu
es
stos
sbb
mov
out
jge
std
stos
or
mov
push
push
dec
add
stos
sahf
mov
jnp
pop
push
jl
adc
pop
cmpsl
and
or
or
bound
jle
lds
jae
fistpl
jle
push
outsb
xor
mov
xor
adc
ljmp
cmp
fwait
sbb
mov
mov
cmp
mov
addr16
scas
cwtl
xchg
data16
filds
dec
movsb
mov
pushf
pop
insb
lcall
lahf
mov
sub
jmp
call
fdivrl
pop
inc
std
lret
sub
in
sbb
cmpsb
mov
in
adc
std
nop
pop
sub
inc
mov
add
shr
pushf
mov
xchg
movsb
repnz
js
cltd
and
and
cmpsl
mov
adc
in
test
or
in
pop
push
pop
or
ret
ljmp
cmp
popf
adc
sub
dec
pop
and
xchg
movb
add
lds
add
arpl
aas
mov
mov
push
push
xor
loope
mov
pop
xor
sub
mov
popl
mov
and
cmp
in
daa
xchg
pop
adc
dec
out
lods
mov
mov
jp
jo
out
test
mov
push
mov
xchg
jg
mov
push
sbb
pop
jbe
pop
stos
stos
daa
insl
ret
and
pop
sub
sbb
rorl
push
mov
imul
test
test
xor
mov
or
cmp
insl
fwait
xchg
lods
outsb
icebp
xchg
push
mov
repnz
sub
rorl
test
in
daa
sub
add
pop
mov
mov
cmp
jo
inc
mov
rcll
add
mov
fs
and
or
dec
mov
test
arpl
xchg
shl
adc
iret
cltd
out
sarl
lds
xor
add
pop
loope
andl
mov
arpl
sbb
add
popfw
test
sbb
sbb
mov
pop
sbbl
gs
push
mov
adc
lret
or
mov
call
xchg
ret
loope
stc
cwtl
push
and
add
xchg
sbb
repnz
add
pop
mov
enter
enter
rcll
and
cmp
loope
ljmp
mulb
push
mov
sub
inc
bound
fadds
or
adc
test
test
ljmp
filds
mov
cmp
sti
in
xor
out
pushf
add
push
xor
adcb
stos
add
jnp
subl
fstpt
mull
pop
sub
out
mov
inc
mov
jg
add
iret
std
imul
stos
int
roll
sub
popa
sub
and
and
adc
adc
mov
cmp
cmp
int
pop
mov
aaa
cld
mov
push
sbb
les
es
push
xor
in
adc
and
sbb
dec
lods
sub
sub
or
popf
cltd
cli
mov
mov
push
dec
dec
push
scas
test
add
or
pop
jae
lret
xchg
loope
xor
cltd
pop
cwtl
shrl
dec
mov
data16
xchg
mov
sbb
testl
popl
fwait
jne
idivb
dec
fxch
inc
jle
push
ret
popf
test
push
loop
mov
xor
jmp
mov
push
lods
push
xor
xchg
and
adc
or
or
incb
xchg
test
and
mov
mov
jns
mov
push
xchg
pop
push
cli
je
pushf
int
xchg
test
pushf
mov
arpl
jo
pop
repnz
andl
loope
scas
pop
jle
lds
cwtl
repnz
jne
cmpsl
sub
jg
mov
lods
out
jg
ds
lcall
insl
cli
frstor
test
movsb
out
mov
movsb
mov
test
mov
xor
sti
pop
aas
add
adc
lods
sub
das
sahf
push
mov
lcall
aaa
push
pushl
sahf
imulb
jl
add
ret
cmp
loop
cwtl
adc
pop
xchg
or
xor
adc
mov
and
xor
invd
sub
mov
dec
shll
subb
cld
les
pop
push
js
call
test
xchg
inc
jo
subb
jge
sbb
data16
fs
repnz
dec
imull
jmp
cmp
decb
inc
stos
jg
add
idivl
imul
test
push
mov
test
mov
mov
hlt
clc
and
mov
in
cmc
mov
cmp
cli
xor
adc
inc
fsubrl
mov
out
fidivs
mov
jg
mov
push
les
lods
stc
js
pop
shrb
or
pop
lods
lret
adc
aam
movsb
mov
push
rcl
clc
cmp
into
std
mov
pop
out
xchg
test
and
shrl
pop
xchg
adc
xor
xchg
dec
add
sbb
mov
dec
nop
push
in
pop
pop
ljmp
pop
dec
xor
in
inc
movb
sub
shr
dec
push
repz
fstpt
mov
hlt
sti
sahf
mov
popa
vsqrtps
je
lock
jecxz
add
sbb
scas
push
popf
lea
jnp
adc
inc
or
sbb
int3
in
fistps
lods
push
pop
insb
and
jmp
mov
sbb
inc
pop
cmc
dec
dec
loope
cmc
into
cmp
pusha
jbe
pop
imul
sub
stos
js
daa
or
test
xchg
sbb
mov
sar
sub
pop
mov
cs
xchg
repz
dec
daa
subb
push
xchg
scas
std
xchg
leave
mov
loop
repz
sbbl
insl
dec
pop
into
cmp
dec
sbb
aaa
push
js
std
loop
mov
rol
test
cmova
push
pop
pop
add
push
stc
test
push
addb
fsubr
or
or
jne
cmp
add
push
mov
push
repz
je
mov
rcrb
xchg
jge
mov
dec
dec
shll
xchg
dec
jecxz
stos
fiaddl
jmp
pop
push
push
cmp
sub
jecxz
loopne
mov
add
sub
lea
enter
ds
sub
xchg
sbb
popa
adc
fdivrl
rolb
cwtl
cmp
and
dec
roll
ret
out
lret
xor
cmpsb
sahf
add
pop
xchg
in
adc
xchg
or
rorb
in
jbe
in
outsb
bound
inc
push
lret
dec
sub
inc
jecxz
add
jg
aas
inc
sbb
lds
dec
jmp
cwtl
repz
cmp
or
enter
movb
imul
shlw
pop
int3
mov
js
test
mov
dec
aad
aas
decl
pop
adc
push
add
test
jne
cmc
push
jge
idivl
pop
repnz
arpl
into
ljmp
mov
orl
call
mov
sbb
push
pop
outsl
into
in
movsb
sub
pop
push
fyl2xp1
fs
incl
inc
dec
ja
mov
rol
push
mov
xchg
aad
pop
add
push
outsb
loope
sub
call
aaa
jl
lahf
xchg
fnstcw
jb
mov
fildl
mov
insl
pop
in
adc
mov
cmp
jmp
sbb
loop
mov
jb
push
pusha
outsb
lods
test
pop
js
sub
push
inc
insb
sub
dec
sub
addr16
mov
push
dec
sub
or
fwait
and
loope
dec
mov
xchg
add
push
cld
shll
orl
or
cmp
stc
mov
cmp
lret
xchg
jmp
mov
rolb
push
bound
jns
pop
or
jo
popf
mov
subb
push
dec
fneni(8087
lret
lods
adc
fildll
jge
dec
js
inc
sub
cltd
jecxz
ret
outsl
bnd
in
add
fst
movsl
cmp
insl
sub
xchg
sbb
imulb
ljmp
lock
lods
mov
jae
sub
or
add
mov
dec
and
addl
and
mov
xor
inc
lahf
insl
sahf
pop
pop
mov
adc
pusha
add
addr16
xor
xchg
iret
inc
add
mov
and
lea
mov
divb
cmpsb
stos
arpl
leave
es
push
push
or
insb
jno
dec
mov
hlt
movsl
insb
jbe
jno
sbb
sub
xor
fsubr
dec
add
pushf
out
lods
pop
insb
sahf
imul
shrl
push
pop
in
and
xor
xor
in
div
sub
leave
mov
std
ss
pop
xor
push
jmp
inc
xchg
mov
std
mov
int
ret
pop
popf
mov
add
orb
pop
cwtl
push
pop
cmp
mov
aaa
cld
mov
lds
shrb
xor
inc
out
shrl
adcl
lcall
cmpsb
addr16
inc
add
inc
mov
dec
cmpb
dec
out
or
add
dec
std
mov
mov
pushf
xor
mov
mov
dec
pop
xor
cmp
negb
movsb
imul
fldenv
fs
xchg
ljmp
aam
xor
inc
mov
xchg
addr16
movsb
pop
das
mov
mov
shrb
xchg
jb
rorb
inc
pop
test
mov
in
adcl
shrb
inc
jbe
je
sub
dec
cmpsb
lods
ja
leave
push
mov
lcall
xor
inc
orl
gs
and
xor
inc
in
lods
ja
xchg
mov
sbb
das
loop
les
ret
mov
out
stos
roll
shll
test
out
xor
jo
scas
daa
orl
in
inc
les
pop
movsl
jmp
cmpsb
inc
or
xchg
pushf
sbb
xchg
mov
pop
xor
icebp
xchg
cmp
jno
inc
and
jo
sub
xor
test
jle
out
or
adc
mov
pop
and
xchg
and
push
es
incl
outsl
mov
es
xchg
mov
push
xchg
test
adc
ja
pusha
lea
enter
dec
std
btc
mov
jbe
pop
xchg
or
nop
pop
cmp
sub
xchg
ja
add
lahf
dec
and
fsubrs
and
stos
push
xchg
nop
jg
dec
xchg
mov
orb
ljmp
mov
test
or
mov
push
pop
cltd
int3
fists
int3
stos
inc
out
rolb
movsl
mov
lea
cmp
cmpb
out
cli
mov
in
cmc
in
mov
data16
call
sbb
fildl
in
sub
inc
loope
xchg
stc
sti
outsl
xor
fxch
jno
adc
mov
cwtl
pop
bnd
movsl
push
in
repnz
adc
mov
push
out
cwtl
leave
or
push
imul
push
push
and
mov
stos
cmc
hlt
pop
pop
cwtl
pop
xor
dec
push
in
adc
ret
xor
fs
pop
xchg
insl
outsl
sti
unpcklps
cmp
outsb
aad
int3
mov
sub
mov
aas
xchg
xchg
jo
in
xor
push
dec
sbb
sbb
pop
scas
xchg
jge
mov
ja
jle
bound
mov
jle
in
sub
idiv
xchg
mov
and
lret
mov
addr16
sbb
pop
xchg
jmp
arpl
xchg
std
mov
je
jmp
xlat
lret
arpl
mov
cmp
mov
push
js
cmpsl
cli
mov
pop
pop
or
sbb
ret
push
push
lods
sbb
mov
les
cmp
mov
gs
jo
lods
push
jmp
jne
cltd
jne
movsb
pop
inc
pop
xchg
pop
scas
aad
push
pop
mov
lock
or
int
ja
ss
fcoml
dec
adcl
dec
sbb
mov
inc
stc
add
jl
push
add
pusha
xor
xor
in
enter
rorl
sahf
lds
or
cmp
shrb
cmc
cmp
test
out
or
movb
sar
inc
pand
jle
clc
sub
sbb
sti
push
incb
jo
mov
or
pop
push
adc
repnz
mov
push
cmp
and
imul
cmc
js
sahf
jl
sbb
xor
sbb
jno
out
dec
sbb
mov
sbb
ss
aam
mov
push
or
jg
jl
in
fiaddl
cwtl
jg
notl
cmp
daa
inc
daa
lods
push
in
push
cmp
jp
jo
out
pop
adc
push
mov
pop
cmp
out
mov
stc
clc
mov
dec
in
cmp
loopne
mov
fs
fxch
std
out
testb
xchg
in
out
test
in
xchg
je
out
mov
mov
icebp
jl
mov
daa
xchg
xchg
pop
enter
pop
das
push
inc
fnstsw
push
das
or
xchg
mov
cmpb
dec
fcmovb
ss
roll
or
mov
hlt
in
sub
lea
scas
mov
stos
lret
shlb
pop
adc
loopne
mov
sbb
xchg
arpl
push
cmp
out
and
jns
mov
dec
loop
loop
paddsb
push
push
das
sti
dec
cltd
jbe
and
fs
sub
mov
inc
push
push
pop
sbb
pop
cmp
adc
out
cmp
dec
push
sub
cmpsb
out
inc
ja
subb
fmuls
fildll
loopne
mov
adc
ljmp
jge
fucomp
cs
fwait
add
dec
dec
mov
fdiv
push
mov
ret
sub
cmp
xchg
push
or
gs
test
cli
lock
outsb
fs
jae,pt
jl
popf
mov
push
jo
push
inc
outsl
jo
push
xchg
in
out
rcrl
pop
and
test
sbbb
sahf
add
cmovle
xchg
push
fwait
icebp
inc
ficoms
xchg
rcrb
test
lock
fimuls
cltd
out
mov
in
icebp
pop
dec
imul
scas
sbb
lret
subl
jb
cwtl
cmp
arpl
imul
movsl
push
pop
dec
test
mov
adc
lret
jno
aas
push
aaa
jle
push
movsb
or
inc
push
and
add
test
sub
hlt
mov
popf
movl
inc
ss
in
sbb
push
adc
call
mov
aaa
dec
xchg
fnstcw
clc
subb
arpl
fpatan
out
inc
mov
cmpsl
xchg
adc
loop
jle
movsl
xchg
inc
cmc
test
adc
out
add
mov
mov
jp
ds
scas
add
mov
jnp
xor
mov
in
xchg
xchg
leave
fsts
repz
dec
push
jg
mov
jp
in
push
sbb
int3
push
cmpsb
mov
xchg
push
sbb
andl
lahf
xchg
dec
sub
mov
iret
rcr
jae
fwait
adc
aam
lds
cmp
shrl
arpl
aas
pop
es
mov
or
dec
test
mov
das
pop
inc
cmp
sbb
test
cmp
movsl
pop
stos
adc
pop
imul
or
shl
xor
dec
dec
ss
loopne
jno
nop
xor
ljmp
cmc
xchg
sub
es
imul
test
or
push
cmp
sub
cltd
out
jbe
pusha
enter
testb
stos
test
fstpl
and
adc
lods
lods
sti
push
out
jo
divl
adc
adc
xor
cld
xchg
xchg
dec
xchg
inc
push
insb
inc
or
pop
mov
aas
ja
in
dec
insb
lods
sti
pop
sbbb
mov
adc
dec
js
dec
push
jmp
mov
jmp
cmp
fucomp
xchg
mov
add
cmp
cmp
inc
imul
dec
add
cmp
sub
loop
mov
call
jae
sub
lret
mov
incb
sub
push
push
pushf
loopne
mov
pop
fwait
or
mov
xchg
mov
popa
in
push
lret
pop
xchg
xchg
mov
rorl
pop
push
aas
in
jae
ret
sub
sbb
mov
mov
out
leave
call
in
insb
leave
dec
dec
dec
inc
inc
push
adc
sar
inc
xor
mov
rcll
addb
cmp
xchg
es
sub
fldl
jg
dec
and
into
mov
jb
inc
int
sub
sbb
nop
mov
neg
mov
cmp
test
push
inc
popf
lea
jns
rol
dec
aaa
mov
cmp
ss
sub
mov
ficompl
xchg
repnz
out
test
ljmp
lret
cs
jb
inc
sub
push
pop
ja
or
flds
mov
mov
scas
dec
out
inc
ljmp
loope
enter
pop
and
mov
cmp
sahf
cmp
mov
add
pop
das
jecxz
cwtl
mov
das
into
fsubl
hlt
stc
cmp
cmpsl
pop
jbe
imul
insl
arpl
fmulp
jo
xchg
cltd
test
cmpsl
inc
jb
nop
lods
mov
mov
sub
mov
sbb
push
inc
mov
inc
adc
mov
cmpsl
push
les
cmp
dec
dec
push
xor
lahf
push
and
adc
sbb
leave
lret
cli
sub
add
jae
cmp
inc
fisttpll
mov
sbb
mov
inc
divl
loop
repz
dec
adc
mov
jo
mov
sub
jns
stc
mov
cmp
arpl
xchg
in
xchg
in
fistpl
es
aas
mov
add
icebp
jne
xor
loop
sbb
xor
jbe
mov
adc
loop
add
xchg
imul
dec
lahf
sahf
mov
stc
mov
cmc
jle
sub
sbb
jae
pushf
xlat
rcll
pop
pop
dec
in
xor
or
pop
call
test
cmp
push
insb
pop
bound
mov
mov
jl
sub
fstp
xchg
jno
pop
mov
mov
ret
iret
lds
or
out
lar
sti
dec
mov
mov
divl
add
dec
aam
mov
push
jle
sahf
dec
jp
scas
rcl
call
into
negb
ret
imul
adc
bound
in
ret
fists
sub
or
and
sti
xlat
enter
xor
adc
outsl
xchg
xchg
daa
add
inc
dec
lods
cmp
lea
jge
add
out
jnp
sub
mov
out
xor
sub
mov
imul
sahf
hlt
adc
scas
lods
loop
insl
push
repnz
and
ja
aad
dec
hlt
jno
jle
in
orl
mov
jne
lret
mov
push
mov
jb
addb
out
jp
jmp
push
test
jecxz
aam
test
in
popf
fwait
cmp
andb
pop
mov
xor
movsl
dec
mov
mov
ret
fstps
or
mov
mov
imul
imul
nop
out
les
pushf
shrl
dec
dec
outsb
xor
ja
lret
test
arpl
icebp
rcrl
lea
clc
cmp
or
pop
push
push
scas
shrl
loope
dec
aam
iret
jmp
sub
sub
fs
mov
and
mov
sbb
inc
mov
pop
pop
cmp
mov
es
lods
inc
push
inc
xor
test
mov
adc
lods
sbb
mov
sbb
ds
push
push
in
sbb
mov
xor
lret
cmp
out
addb
fistl
mov
push
loopne
movsb
or
mov
in
add
fst
jno
out
inc
mov
sti
std
sti
jl
jnp
fsts
jmp
in
mov
in
fs
out
jp
cltd
sub
pop
xchg
mov
jbe
cmc
mov
ss
push
jg
in
stos
test
addr16
mov
jae
lret
bound
scas
jmp
push
sti
cmp
pop
aas
xor
push
cltd
adc
pop
cmp
jns
pop
lea
mov
das
ret
js
push
out
jl
xchg
pop
jmp
or
and
push
push
test
aad
in
out
data16
cmp
xor
iret
in
mov
mov
xchg
pop
fsubrs
xor
imul
mull
rcrb
mov
mov
lods
lahf
push
ljmp
or
mov
xlat
dec
arpl
add
mov
sarl
sub
xlat
cmp
fdivrs
inc
push
out
push
inc
pushf
add
cld
cld
jbe
rcll
jb
sub
dec
stos
ljmp
sbb
hlt
cli
cmp
stos
inc
mov
leave
ljmp
push
nop
cmpsl
daa
stc
or
jne
nop
out
es
popf
repnz
das
int
lret
movsb
sub
dec
dec
jns
push
out
test
xchg
push
xor
ret
insb
rol
push
in
lret
nop
xchg
imul
test
fwait
xor
icebp
mov
in
orb
shlb
mov
jo
cmp
adc
test
adc
icebp
xchg
mov
stc
cwtl
rorl
pop
lahf
rol
movsb
data16
and
pop
jmp
xchg
test
daa
mov
bound
or
lods
std
gs
push
cld
cmpl
sub
xchg
loope
cmp
lret
pusha
icebp
fisttps
jecxz
cli
lcall
mov
sbb
jne
cmp
jmp
scas
cmp
xlat
sub
jns
aaa
stos
jno
mov
stos
push
mov
outsl
fidivl
inc
jne
adc
fidivrs
movl
fxtract
fs
mov
adc
les
lret
sbb
lock
push
mov
es
mov
faddl
clc
inc
push
fnstcw
and
cmp
jns
push
xor
dec
js
insl
pop
ret
sahf
insl
adc
mov
test
das
sbb
clc
sbb
adc
pop
std
pop
sbb
cmp
sbb
dec
sub
scas
add
pusha
mov
pop
inc
jecxz
repz
pop
or
hlt
shlb
popf
dec
stc
inc
and
icebp
ljmp
insl
cmp
xor
sbb
loop
sbb
sub
inc
lcall
testb
push
xchg
in
cmc
das
sbb
adcb
fbld
or
push
inc
leave
aaa
adc
enter
popa
jns
pop
xchg
lock
mov
ds
fwait
cltd
adc
push
jo
lret
in
mov
or
inc
lret
scas
xchg
pusha
mov
dec
decl
mov
cmpsb
aad
icebp
loope
sbb
lea
fbld
jno
push
in
fwait
dec
cmp
lret
inc
mov
iret
xor
mov
andl
es
shll
mov
jg
cmc
pusha
mov
inc
loopne
pop
push
insl
mov
push
inc
xchg
mov
sbb
xchg
movsb
fbstp
mov
mov
xor
xchg
lea
cmp
mov
cmpsb
out
xorb
aaa
pop
les
aam
xchg
add
cli
pusha
les
jo
or
push
cwtl
gs
sub
xchg
cmp
test
jmp
lret
fdivs
sahf
fstpl
imul
call
cmp
xor
out
mov
pushf
loopne
pop
in
ret
adcb
xchg
xchg
sub
mov
xchg
rclb
test
push
mov
loope
or
ficompl
inc
lcall
mov
test
insl
pop
pop
ret
es
sbb
testb
nop
sub
sbb
iret
cld
push
sti
cmpl
xor
jbe
cwtl
jl
mov
dec
sbb
dec
xor
push
mov
shll
in
stc
dec
je
sub
das
add
pop
pop
sub
dec
inc
lds
or
addr16
pop
into
mov
xchg
imul
cmp
stos
repnz
pop
aaa
mov
cmp
outsb
es
bound
jp
arpl
lcall
xchg
push
rcrl
adc
repz
sub
mov
call
adc
xchg
add
mov
jb
mov
dec
push
pop
call
sahf
fnstenv
push
inc
add
or
pop
jle
ljmp
ds
popf
cwtl
push
jns
lcall
fbstp
xchg
stc
inc
pop
xor
mov
outsb
jbe
xor
imul
rcl
aam
pop
insl
and
adc
push
inc
ja
push
cli
xchg
xor
jmp
cmpl
or
push
mov
mov
jne
mov
dec
loopne
outsb
ret
xchg
clc
das
mov
loop
add
dec
jl
daa
outsb
es
jmp
push
xorl
ljmp
inc
into
sbb
adc
sub
jae
mov
test
std
aam
adc
aaa
rolb
push
jb
xor
test
psllw
cmp
mov
inc
cmp
mov
sbbb
cs
int3
fs
push
std
orb
lds
jo
and
pop
leave
fstl
fcomps
fdivl
out
mov
out
mov
arpl
aad
int3
cmp
pop
sbb
inc
lret
insl
pop
lods
push
adc
ja
out
jb
adc
rcll
push
insl
mov
xor
outsb
imul
add
sbb
xchg
sbb
jno
scas
lock
sub
jp
loope
outsb
popf
push
int3
pop
inc
push
xor
fstps
rclb
add
rclb
lret
dec
or
push
inc
movsb
stos
pop
xchg
mov
adc
mov
into
push
adc
xchg
push
aam
xchg
pop
push
inc
call
rclb
sbb
fnstenv
outsl
sub
jnp
sub
pop
movsb
outsl
mov
aad
adc
fbstp
dec
je
fisubrs
xchg
icebp
fbld
cs
adc
sbb
mov
mov
mov
sbb
test
fsubrl
aas
jp
insl
xchg
ja
dec
testl
jle
cli
int3
mov
in
sbb
inc
cld
js
lahf
das
xchg
neg
test
lret
cmp
dec
add
mov
push
mov
push
pop
lret
mov
leave
or
xor
cltd
scas
inc
outsl
dec
sub
add
adc
imul
cs
xchg
cmpsl
pusha
loopne
add
pusha
push
xor
mov
dec
notl
push
test
fnstsw
mov
fstps
sahf
inc
dec
test
inc
negb
in
jo
fisubrl
jae
shll
mov
mov
addr16
incb
fs
xor
loop
dec
ljmp
inc
pop
or
dec
cltd
sbb
sbb
scas
scas
movsb
xor
rcrb
lret
dec
sbbl
movsl
and
xchg
or
sbb
sub
xchg
cld
cmpsb
xorl
pop
cmp
dec
push
stos
pop
cmc
into
inc
mov
push
mov
lcall
xchg
mov
mov
into
cmp
add
repnz
sahf
test
xchg
cli
inc
in
xchg
or
out
mov
pop
subl
daa
aaa
nop
mov
adc
jle
cmpsl
mov
movsb
data16
pushf
sarb
xorb
xor
pop
std
cmc
sub
loope
mov
enter
aad
adc
testb
in
stos
shrb
aad
dec
jg
push
fmulp
pop
cmp
xor
add
stos
std
adc
jns
sbb
movsl
sbb
jbe
mov
pop
jbe
jge
in
push
pop
mov
pusha
xchg
add
js
xchg
icebp
and
jnp
sub
cmpsb
mov
pop
mov
jb
mov
add
sbb
sub
cmp
mov
movsb
inc
js
gs
orb
add
inc
and
push
aam
push
movsl
mov
cmc
loope
xchg
addr16
cmpsb
and
lock
es
xor
inc
pop
mov
xor
jo
lret
scas
ja
mov
pop
xchg
dec
xchg
cmp
inc
pop
inc
cltd
sbb
pop
mov
fidivl
sub
movsl
sti
ror
lahf
or
js
stos
loop
outsb
xor
roll
and
push
xchg
inc
popa
stc
mov
add
inc
notl
jnp
sti
jb
loope
push
dec
jnp
enter
push
fadd
mov
aaa
shrb
jg
lret
sbb
sub
xchg
fldcw
and
addb
fmull
cmp
pop
rorb
adc
icebp
fdivl
jl
mov
cld
rorl
add
inc
out
pop
jb
subb
sub
or
std
push
test
mov
push
filds
in
xorl
stos
or
and
xor
aam
mov
push
ja
or
outsb
cmpsl
ja
inc
das
in
shlb
stos
dec
mov
push
int
movsl
inc
or
mov
xchg
fs
push
rorb
stos
lcall
sub
out
popa
repz
fadds
add
pop
ljmp
sbb
mov
cmp
and
pop
test
xchg
aas
ja
daa
jge
push
addl
loop
in
or
jno
jnp
sarl
adc
scas
dec
aad
incl
sbb
jns
test
mov
pop
stos
mov
leave
adc
cmpsl
cmp
loop
addb
mov
ja
lea
fwait
out
clc
ja
push
adc
dec
add
lods
inc
into
pop
sbb
fildl
dec
mov
bound
ss
add
aaa
dec
adc
lahf
sub
les
sbb
cld
iret
add
pop
sbb
pop
mov
jg
dec
and
fsubs
push
orl
mov
sti
jl
adc
mov
mov
ds
and
add
cwtl
and
js
adc
popf
test
cmpb
xor
in
gs
cmp
gs
pop
jecxz
sbbl
outsl
sbb
pop
cwtl
jp
pop
sub
mov
add
sub
sbb
cld
scas
adc
push
loopne
sub
icebp
jge
hlt
into
out
sti
jb
mov
ds
inc
xchg
push
je
cltd
loopne
adcl
cmp
inc
stos
pop
jp
in
push
lret
out
insb
lock
xor
loope
jns
pop
imul
imull
sub
jo
and
sbb
jmp
in
xorl
push
push
call
jns
hlt
out
xchg
mov
cmp
push
or
cwtl
int
dec
ret
call
stos
loop
fsubrs
fstpl
pop
sbb
dec
sbb
pop
xchg
pop
nop
push
jmp
mov
jb
sbb
outsb
fmul
iret
pusha
dec
mov
fbstp
sub
data16
repnz
xchg
pop
adc
lods
mov
push
ret
clc
jb
mov
mov
sbb
fsubs
ficomps
ds
inc
push
sbbb
jne
pusha
sub
pop
cmp
into
and
xor
loopne
inc
cmc
add
inc
lds
aaa
xor
icebp
inc
fadd
loop
daa
sbb
in
icebp
outsl
add
push
cmpsl
popa
aas
xorb
insl
push
jge
sti
pusha
outsb
pop
adc
fs
xor
inc
outsb
imul
or
xchg
cmp
mov
data16
and
hlt
mov
mov
push
lods
insl
and
inc
aaa
fidivs
dec
int3
or
iret
cmpb
lcall
jae
test
stos
nop
push
jl
cs
in
inc
push
mov
out
sub
push
and
inc
push
jns
xchg
pop
sub
addl
loop
loopne
or
popf
pushf
clc
popa
add
ret
jp
xchg
push
int3
push
dec
jl
loop
and
fwait
sahf
les
or
pop
push
mov
into
mov
cmpsl
mov
mov
mov
pop
mov
jl
push
mov
xlat
neg
stc
sub
sub
loopne
jo
pop
ret
arpl
or
sub
in
pushf
cmpsb
sbb
test
add
mov
and
pop
pop
mov
adc
rol
xchg
push
mov
push
mov
daa
subb
scas
cli
cltd
lret
inc
fisubrs
xchg
stc
roll
roll
dec
shr
xchg
je
sbb
arpl
repnz
pop
sbb
pop
out
or
mull
loopne
mov
ljmp
adc
cld
out
pop
jp
adc
and
mov
sub
cld
scas
repz
jno
ljmp
xchg
push
jle
cli
or
dec
jb
sbb
adc
mov
dec
out
jl
dec
repz
mov
mov
std
loop
test
mov
mov
mov
pop
scas
and
aad
shlb
adc
or
sbb
cli
roll
and
negl
xor
push
ds
orb
pop
xor
lcall
cmp
cmp
sbb
mov
insb
ss
out
cltd
push
adc
negl
test
test
cli
jmp
xor
fdivl
aaa
fwait
movl
cmp
cli
fsubrl
cmp
jae
and
rolb
clc
mov
hlt
jo
sbb
or
loope
lods
loop
adc
lods
sahf
sbb
scas
hlt
cmc
xchg
push
aaa
xor
lret
xor
jno,pn
pop
loope
sti
int3
xchg
inc
or
ja
mov
pop
cltd
adc
push
jne
xchg
mov
pop
jg
push
nop
data16
gs
mov
fimuls
rcrb
fsubrs
jge
loope
add
xor
mov
sub
mov
pop
ret
push
and
test
jle
popa
xor
pop
js
push
pop
gs
orl
stos
sbb
sub
nop
jns
insb
dec
aas
mov
out
push
pop
cmp
fcmovu
and
add
fstl
add
jge
mov
nop
mov
xor
xchg
mov
jmp
sbb
daa
dec
pop
mov
mov
pusha
xor
or
and
ljmp
lock
fcmove
mov
mov
jmp
pop
sub
cld
add
jl
xchg
aam
loope
lcall
icebp
cmc
ljmp
inc
jns
repz
repnz
jecxz
test
sti
push
fcmovb
cld
mov
push
adc
mov
pop
mov
test
xorl
jnp
call
cld
test
insl
add
es
xchg
cmp
jbe
dec
push
fdivrs
add
xchg
xchg
in
mov
fcmovnbe
jnp
sbb
xchg
pop
adc
hlt
movsl
test
ret
xor
insb
imul
adc
ja
into
fldcw
out
or
xor
sysexit
gs
mov
in
cmp
shrb
out
dec
es
add
fldenv
mov
int
out
jns
subb
mov
jl
sbb
mov
sub
add
scas
xchg
lods
in
insl
unpckhps
andl
shll
mov
loopne
jp
inc
dec
add
cmp
mov
dec
add
pop
mov
xchg
cli
lods
clc
mov
ss
popl
lcall
testl
sbb
lock
mov
lahf
xor
lock
stos
addr16
sbb
addr16
or
pushl
mov
rorb
lahf
push
stc
cmc
jae
xor
into
sub
enter
lret
cld
mov
dec
push
data16
push
jno
pop
aad
arpl
ds
pop
aaa
add
gs
xchg
int3
mov
mov
loop
cld
xor
je
and
mov
jmp
cs
ja
data16
jbe
fidivs
push
pop
mov
imul
xchg
jae
fldl
mov
in
arpl
pusha
jo
jbe
and
mov
add
mov
loopne
add
jp
rcrb
cmpsb
fldl2t
cwtl
inc
jbe
push
pop
dec
insb
dec
icebp
shrl
inc
lds
std
fsubl
cmp
es
fwait
daa
mulb
xchg
mov
add
cmpsb
or
dec
jl
mov
jp
dec
or
xchg
bound
mov
movsl
or
repz
gs
enter
mov
sbb
push
xchg
mov
sub
jo
sub
pop
mov
nop
jg
or
lock
movsb
outsb
pop
loopne
rcr
ljmp
popf
aad
int
push
loopne
xchg
ss
insl
mov
lret
call
push
mov
fldl2e
stos
insl
fstps
jge
mov
loope
in
mov
dec
jmp
sti
cmp
push
dec
mov
dec
add
adc
xor
mov
sbb
xchg
into
movsb
outsl
inc
insl
sbb
sbbb
sub
dec
flds
pop
dec
mov
jl
in
mov
loopne
lods
shll
jnp
out
jnp
xchg
xchg
test
aas
mov
imul
cld
daa
incl
cld
jge
cmp
or
xchg
cmpsl
cmpsb
aas
adc
xor
sub
xchg
cmp
jne
in
icebp
rcrl
xor
mov
jbe
hlt
outsb
insl
les
arpl
jns
sub
fisubrs
adc
mov
int3
out
pop
stos
push
mov
sbb
repz
sub
sbb
andl
push
mov
cmpl
js
pop
or
or
and
arpl
mov
dec
stc
mov
scas
out
lock
xchg
dec
sbbb
std
xchg
jmp
xor
fistpl
scas
testl
cmpsb
subl
add
adc
mov
mov
pop
jecxz
mulb
xchg
push
orl
sahf
xchg
cmp
imul
in
pop
dec
and
cmp
mov
sbb
dec
mov
gs
gs
cmpsb
push
pop
mov
xor
mov
in
jecxz
xchg
shl
dec
sub
leave
leave
mov
inc
mov
xchg
repnz
js
adc
ret
aas
cmp
cmp
fbld
or
in
out
out
jnp
or
lcall
mov
add
sub
mov
in
lods
xor
xchg
jbe
popf
push
add
cltd
rcrl
push
push
int
es
inc
and
push
int3
mov
and
aaa
pop
aaa
mov
and
mov
and
je
and
jns
fstpl
arpl
pop
dec
neg
insl
ljmp
pop
aam
or
inc
pop
lock
jmp
mov
stos
dec
dec
sub
nop
popf
sar
pusha
adc
movsl
mov
dec
jbe
xor
or
jne
push
notl
pop
pop
stos
inc
cmp
in
ss
xchg
jne
call
cmpl
inc
in
push
push
stc
inc
int3
js
cmc
sub
add
pop
in
pop
divb
xor
js
inc
movsb
cmc
iret
mov
mov
scas
push
dec
mov
or
push
cmp
daa
sbb
test
insl
test
xor
pop
dec
fsubs
sub
sbb
cmc
loop
test
cs
mov
fsubrs
cmp
xor
push
cltd
int
lods
inc
mov
sub
push
and
mov
inc
movb
xor
stos
dec
das
dec
je
fs
inc
pop
mov
scas
imul
lcall
pusha
add
mov
xchg
push
loopw
scas
sbb
push
das
andl
loop
stos
arpl
xchg
je
dec
popa
dec
xchg
xchg
cltd
jmp
jno
xchg
div
sub
inc
call
lods
fists
repz
imul
pop
mov
dec
pop
mov
out
mov
pusha
les
in
je
mov
mov
cmp
repz
movsl
mov
hlt
mov
and
cmp
sub
cmpsb
leave
pop
jo
std
cmp
mov
mov
das
mov
leave
mov
test
cvtdq2ps
and
mov
lret
adc
lret
sbb
sbb
loope
scas
sarl
jae
cmp
sbb
dec
mov
pop
mov
dec
push
ja
xchg
jmp
aam
lods
xchg
lcall
pop
fimull
xlat
push
xchg
repnz
push
jmp
xchg
aas
mov
pop
and
sbb
xor
or
sbb
or
clc
jns
xor
pop
jns
clc
int3
mov
ljmp
dec
sub
mul
pop
dec
das
pop
push
mov
mov
adc
test
out
into
and
sbb
mov
mov
test
hlt
addb
jns
adc
sahf
jnp
cmp
dec
lcall
shll
jne
aad
lods
rol
cmp
jbe
mov
inc
aam
inc
push
mov
inc
and
cmp
test
sbb
jne
pop
bound
push
xchg
inc
pushl
dec
shrl
loop
stos
pop
sarl
push
push
cmc
shr
mov
jl
jmp
xor
lcall
gs
pop
popa
in
je
pop
pop
and
fildl
add
xor
mov
cmp
add
nop
imul
xlat
sbb
sub
lcall
mov
pop
int3
xchg
adc
mov
jl
mov
pop
or
dec
pop
insb
pop
mov
pop
lea
cmp
out
mov
fs
dec
add
jae
cmp
and
mov
jno
fwait
xchg
les
add
lret
jmp
sbb
fsubrp
mov
cmp
rcrb
rolb
sbb
push
icebp
mov
aad
cld
add
adc
xchg
xor
cmpsb
roll
add
adc
ljmp
push
jne
cs
rclb
sar
aad
and
cs
push
repnz
adc
test
ficomps
scas
shl
mov
xchg
movsl
push
and
sbb
bound
and
lods
iret
inc
cmp
in
xchg
pop
add
arpl
jne
push
cmp
pop
push
mov
jp
adc
jns
xchg
cmp
rol
xchg
mov
test
cmp
xchg
jmp
scas
fistps
fimull
xchg
sub
stos
add
fldt
xor
movsl
xor
jnp
clc
mov
insb
sub
lods
adc
insl
adc
dec
loope
nop
cwtl
sbb
loop
or
mov
aas
stc
inc
mov
cmc
rclb
xorl
dec
mov
mov
fs
outsb
jge,pn
sahf
mov
stc
push
mov
shlb
ja
or
es
pop
cmp
mov
data16
adc
lcall
mov
and
jmp
adc
sub
lock
sub
sbb
bound
and
mov
pushf
push
mov
push
jo
pop
stc
inc
push
fstps
inc
sbb
and
gs
lods
popf
ror
mov
lds
iret
lahf
mov
mov
fs
shlb
dec
aas
outsl
sbb
in
sbb
mov
cli
and
add
mov
xor
cmc
jge
pop
and
out
dec
fisubrs
jmp
rcl
fmull
jle
dec
idiv
xor
cs
das
and
test
imul
rorb
jbe
lods
cltd
sbbl
fld
dec
mov
dec
inc
lret
rcrb
sub
add
testl
add
pop
pop
out
rcr
outsl
cmp
int3
pop
jle
aaa
test
imul
ljmp
jb
je
loopne
out
sub
idivb
xlat
adc
jo
jmp
insl
xlat
je
les
jo
push
and
hlt
sbb
ss
add
inc
add
mov
lahf
cmpsl
cmc
das
cmp
mov
pop
xchg
push
sub
out
xchg
ja
std
push
aam
jb
cmp
jmp
popa
cmp
in
adc
fwait
enter
lods
dec
xlat
mov
nop
das
xor
mov
ljmp
sub
jmp
add
xchg
jp
test
dec
mov
fsubrl
enter
out
je
xchg
mov
insb
adc
xor
mov
or
inc
cwtl
cmp
adc
fnsave
xor
mov
in
mov
mov
sub
mov
fstl
mulb
add
push
sub
loop
in
lods
xlat
ret
cs
sbb
test
adc
and
xchg
dec
testb
data16
cmp
inc
inc
out
jb
pop
xor
jl
fwait
into
mov
ret
mov
out
fisubrs
xor
inc
jbe
jl
xchg
push
xchg
jmp
std
inc
jne
jge
movsl
push
and
imul
ss
faddl
pop
jnp
fsubs
sbb
xor
sub
mov
repz
rorb
xor
movsb
mov
dec
sbb
call
lea
pop
pop
out
sbb
pop
mov
add
in
fpatan
pop
jae
push
cmpsb
jp
js
adc
addr16
sbb
jo
mov
cwtl
add
cmp
ret
das
lods
repnz
sbb
xchg
jne
jmp
and
xor
and
rcrl
push
fldt
mov
lea
jo
stos
cmp
shrl
pop
xor
movsb
dec
push
or
sbb
pop
fimuls
into
xchg
push
mov
xchg
jno
stos
jno
xor
mov
les
lahf
xor
out
mov
test
xchg
xorl
lock
pop
xchg
jno
mov
pusha
aad
or
mov
fs
xor
in
mov
push
inc
lret
sub
sbb
shrb
mov
sahf
jle
dec
and
repnz
pop
fsubrs
shrb
ror
cli
push
popl
add
movsl
or
ret
cld
fisubrl
leave
push
call
lea
cmp
xchg
out
int
push
add
xor
repz
mov
das
inc
ficoml
gs
xorl
or
divl
dec
jle
dec
mov
lods
fs
xchg
jne
sti
and
pop
pop
mov
pushf
int
mov
push
cli
push
push
ds
cmp
repz
shr
rcr
mov
mov
testl
mov
out
and
addr16
inc
jecxz
icebp
pop
jne
sbb
fidivl
push
xchg
mov
jge
xchg
rorb
int
test
pop
push
loope
cmp
xchg
lcall
popa
loope
pop
pop
outsb
jae
movsb
fisttps
lds
xor
dec
xchg
es
movsl
call
test
cmp
fnsave
clc
mov
adc
pop
test
adcb
mov
mov
pop
cmpsb
mov
cmpl
loopne
add
add
xor
fmul
mov
jns
and
xor
js
outsl
add
lcall
test
cmp
fadds
or
subb
xor
dec
aad
cmpsb
mov
push
lds
mov
and
fists
add
mov
lea
mov
cmpl
push
pushf
out
dec
dec
gs
repz
xor
jnp
sbb
repz
cmp
pusha
push
and
mov
fs
lahf
aam
adc
push
adc
inc
inc
add
mov
leave
sub
pop
cld
daa
sub
mov
pop
mov
imul
mov
xor
xlat
pcmpgtw
outsl
xorl
inc
gs
fnstenv
mov
lahf
imul
mov
dec
dec
js
in
rcrl
and
subb
into
scas
jmp
or
mov
adc
push
arpl
orb
adc
cmpsl
or
int
push
mov
inc
test
lock
movsl
movsl
lods
ret
mov
mov
pop
xor
lods
shlb
in
leave
mov
mov
and
or
push
je
das
dec
add
pop
dec
xchg
movsl
jnp
jg
cmp
mov
dec
xchg
das
xchg
sub
and
xchg
cli
mov
clc
scas
pushf
dec
push
jno
aad
out
xchg
ret
outsb
lret
adc
fimull
in
pop
insl
repnz
xor
insb
pop
xchg
out
mov
aas
adc
xor
lock
aas
clc
mov
sbb
jp
in
mov
xor
in
int
nop
ds
dec
shrl
sarl
pushf
mov
or
mov
xchg
sub
mov
mov
jns
stc
sub
repz
dec
lea
dec
int3
lods
in
out
mov
sub
jb
orb
and
fisubl
push
mov
enter
sub
dec
popa
lahf
inc
mov
fildll
dec
pop
jns
sub
iret
lret
and
dec
cli
xlat
xchg
push
mov
test
mov
dec
jo
mov
cmp
push
mov
pop
inc
pushf
aad
rcrb
std
sub
js
add
sbb
sbb
stos
imul
std
sub
cmp
sub
push
test
sbb
mov
mov
mov
ror
stos
push
mov
mov
jb
adc
ds
jns
nop
xchg
shlb
mov
loop
xor
fstl
mov
mov
push
imul
in
jbe,pn
push
stos
in
fisttps
push
fwait
push
push
andb
xchg
fdivp
popf
divl
repz
in
cltd
inc
inc
adc
sahf
add
bound
push
test
ret
xchg
outsl
push
push
mov
sbb
dec
sbb
push
push
xchg
mov
in
daa
push
inc
push
je,pn
aad
das
pop
adc
in
test
jns
add
sahf
mov
pop
and
sbb
inc
loop
imul
xchg
sub
push
adc
decb
dec
lret
cmp
xor
ret
mov
dec
or
inc
jne
daa
sub
jnp
clc
sub
ljmp
or
mov
pop
pop
loopne
xor
ja
dec
mov
arpl
call
xor
in
das
lods
sti
lcall
jnp
ds
jl
pop
ljmp
push
mov
repz
mov
or
insl
push
push
mov
xor
pop
test
mov
mov
icebp
call
imul
cld
jae
idivb
jbe
adc
cmp
cmp
mov
mov
inc
outsb
cmpsl
xchg
fwait
jecxz
add
push
repz
xor
ret
dec
shlb
les
sub
ds
leave
sbb
xchg
cmp
ret
mov
push
inc
mov
sub
shrb
or
rcrb
in
adc
push
out
fs
jl
sahf
cli
insb
pop
dec
mov
xchg
and
out
in
sub
sbb
jmp
pop
inc
dec
fstl
int3
xchg
cmpsb
dec
imul
xchg
xchg
ds
fsts
lds
sbb
xchg
add
ds
cwtl
push
sbb
das
popa
push
add
mov
push
gs
lret
fs
imul
cmpl
loopne
pusha
mov
mov
inc
mov
mov
mov
push
repnz
iret
mov
inc
aad
test
mov
pusha
push
pop
sbb
cmpsl
das
aaa
outsl
pop
ss
mov
jle
lock
fwait
daa
inc
xchg
fnstcw
fdiv
jmp
pop
lcall
cmp
pop
stos
lret
xor
mov
inc
nop
xchg
add
inc
dec
das
je
das
ret
or
or
xchg
sbb
addb
lcall
stos
ljmp
testl
lcall
xor
or
shl
lods
fildll
cmp
jo
jb
lcall
lock
lods
inc
push
mov
outsl
pop
not
xor
shll
cmp
loopne
fimull
push
mov
push
je
mov
lcall
pushf
cmp
nop
mov
shl
cmp
sbb
int3
ljmp
cmp
adc
or
push
mov
push
test
adc
and
je
lock
insl
ljmp
jp
test
push
mov
fstps
mov
das
out
fsts
std
pop
mov
mov
dec
sub
je
push
adc
push
jnp
pop
in
dec
stos
sub
lods
pop
push
aam
and
jmp
fwait
xor
mov
pop
mov
mov
dec
rclb
sub
inc
roll
add
stc
imul
add
xor
adc
mov
test
or
sub
lcall
arpl
jne
lret
mov
cmpsb
ja
cmc
sub
xchg
dec
mov
jbe
dec
lock
sbb
push
clc
fcompl
cmp
sub
push
sub
cmpsl
shll
nop
nop
dec
xchg
dec
dec
insb
jb
jbe
cwtl
cmp
xor
jo
jg
fwait
insl
mov
sbb
lahf
jnp
lea
stos
pop
push
dec
ret
lret
nop
inc
scas
sbb
pusha
pop
repz
mov
outsl
leave
xchg
iret
pop
aad
cltd
loopne
pop
faddl
inc
mov
lods
lock
mov
xchg
adc
lret
call
lock
test
mov
pop
mov
push
xchg
inc
mov
sar
sub
lods
scas
push
xor
mov
xchg
das
fstpl
inc
or
es
test
jno
adc
imul
repnz
mov
aam
mov
xchg
jle
push
or
out
xchg
cli
cmp
or
add
mov
loopne
dec
cmpps
push
cltd
leave
out
insl
jae
xchg
mov
adc
inc
mov
ret
insl
movsl
push
and
mov
popf
scas
pop
or
dec
aad
loopne
incl
repnz
pop
adc
fisubrl
in
mov
adcl
das
dec
sub
push
fcmove
sbb
xlat
mov
dec
call
adc
bound
mov
xor
std
push
xlat
jmp
xchg
xor
cmp
scas
mov
leave
mov
push
jns
mov
lret
mov
push
repz
sbb
arpl
pop
sub
jns
ss
movsb
jne
scas
push
xchg
movsl
pop
xchg
in
mov
xlat
and
pop
push
push
cmp
in
repnz
clc
jg
mov
repnz
fldt
in
or
add
int
mov
cwtl
sub
pop
adcb
push
filds
sbb
xchg
data16
inc
stc
add
jae
xor
xchg
fs
mov
push
add
pop
les
mov
sub
lea
sbb
jmp
andl
movsl
sub
ror
or
inc
pop
repz
sahf
mov
cli
mov
outsl
mov
iret
push
jmp
fcmovnb
push
jno
jo
dec
roll
dec
lret
sahf
cld
popaw
push
test
mov
in
lea
lcall
sti
and
imulb
stos
mov
loopne
dec
cmp
mov
out
stc
aaa
dec
or
lods
in
mov
xchg
or
in
sub
mov
dec
scas
pop
mov
orb
scas
fisttpll
and
xor
ja
adcb
lret
call
sarb
adcl
pop
add
call
std
mov
fisttpl
mov
push
xchg
pushf
rorl
jns
adc
call
pushf
stos
inc
mov
sub
out
fildl
into
mov
sbb
clc
test
test
in
iret
ret
cmp
xor
or
in
mov
icebp
or
dec
xor
mov
out
out
ja
shr
movsb
dec
or
fwait
loopne
insl
popa
dec
xor
xor
testl
pop
pop
inc
imulb
xchg
scas
insl
cmp
pop
fisttps
xor
dec
scas
jae
and
push
aad
and
push
add
add
movsb
pop
bound
and
push
aaa
pop
in
adc
xor
add
popa
shll
dec
enter
xlat
fidivrl
dec
sbb
jbe
dec
fwait
stc
test
dec
ja
push
xorb
ss
dec
out
mov
clc
pushl
mov
inc
imul
shr
cwtl
int3
mov
movsl
inc
fs
mov
cmp
pushf
int
jae
rcrb
mov
scas
and
jb
pop
test
add
lahf
fbstp
mov
shrb
inc
jo
fldcw
cmc
js
stc
lcall
pop
pop
loopw
jbe
jg
cmc
movsl
jns
shl
dec
fmul
imul
cmp
in
sub
sbb
aam
rol
mov
jne
pop
icebp
sub
sub
scas
negb
rorb
repz
decl
sub
and
data16
sbbl
xchg
stc
cmpsl
loope
mov
stos
in
xor
pop
negb
xchg
sbb
scas
jo
mov
jl
sub
sub
out
lret
jle
icebp
or
adc
cmp
push
shll
mov
push
lahf
xchg
pop
pusha
jle
inc
push
cli
xor
push
pop
jle
adcb
add
jmp
int
rolb
fmuls
cwtl
push
mov
iret
and
xchg
cmpb
pop
inc
mov
loop
sbb
int3
cmpsl
mov
scas
sahf
ds
icebp
gs
jnp
lcall
sub
xchg
dec
xor
loope
inc
pop
jecxz
in
loope
xchg
mov
mov
sbb
jno
dec
inc
cmp
cld
mov
lods
and
sbb
xor
pop
orb
add
data16
xchg
test
outsb
in
leave
in
jmp
enter
or
scas
fcomp
test
test
adcl
push
movsl
call
xor
ds
cmc
pushf
arpl
mov
stos
sub
into
ficompl
jno
scas
inc
stos
test
and
jae
push
mov
xchg
aaa
nop
adc
cmp
sub
aam
arpl
add
dec
inc
or
je
pushf
sub
jne
pavgb
inc
jecxz
or
lds
ss
adc
sti
push
inc
jecxz
outsb
sarl
out
xchg
sub
mov
aas
cmp
loope
test
sub
jl
cmpsl
fisubrs
je
leave
push
push
icebp
mov
push
scas
sbb
push
jae
es
pop
inc
mov
in
test
mov
shr
xchg
data16
jbe
into
xchg
push
adc
sarl
fs
cli
pop
mov
and
mov
xor
xor
ret
ret
lret
scas
scas
mov
cmp
test
cs
mov
lea
lea
imul
jg
mov
and
aam
movsb
pop
adc
xor
push
mov
mov
aam
enter
xchg
repz
jl
vcmpsd
sbb
shl
ljmp
iret
stos
push
pop
push
shl
addb
inc
pop
pop
out
sub
mov
negb
mov
je
stos
imul
jecxz
mov
xor
sub
or
fcoms
push
push
xor
push
sub
or
rcl
pushf
das
and
push
and
notb
xor
mov
call
push
sub
inc
and
dec
fnstsw
in
sti
test
es
mov
jns
sahf
jl
inc
nop
pop
test
or
and
jp
fs
dec
das
lahf
jecxz
mov
or
popa
xchg
push
push
movsb
leave
jb
nop
ljmp
jbe
or
jg
sahf
cs
ret
int
push
and
pop
call
adc
test
fsubrp
ja
jae
lods
mov
lea
shlb
add
sub
iret
hlt
sbb
mov
jl
push
cmp
jno
loope
test
jbe
push
jecxz
loopne
jnp
jmp
and
xor
pushf
add
inc
icebp
push
mov
sub
xor
jecxz
mov
out
add
cmp
inc
sbb
mov
outsb
inc
sub
gs
lret
inc
push
lock
insl
jns
out
call
dec
jns
push
inc
sbb
adc
cmp
mov
xchg
dec
stos
ret
jmp
sarl
sahf
add
cmp
dec
shrl
ucomiss
test
cmp
jp
cmpsl
and
pop
xchg
add
enter
push
hlt
and
mov
bound
cltd
add
mov
sub
lds
loop
mov
pop
adc
aad
repnz
test
imul
mov
or
imul
cmp
adc
xor
mov
adc
xchg
add
bound
subl
hlt
xor
test
fdivr
dec
rolb
std
punpckldq
mov
mov
cwtl
xchg
test
pop
insl
repnz
mov
stc
or
and
pop
adc
mov
cmp
mov
ret
inc
dec
or
adc
mov
insl
push
cmp
adc
imul
and
mov
jnp
cmpsl
mov
lahf
popf
adc
adc
or
cld
cltd
fisubl
sbb
jb
cmp
dec
filds
aaa
leave
pop
cmpsl
mov
mov
outsl
pop
fs
aad
fwait
jle
lods
jl
fcmovu
popa
jno
jge
inc
inc
add
sbb
test
movb
stos
xchg
adc
in
cwtl
fstpl
cmp
dec
outsb
fcmovnbe
movsl
or
xchg
pop
ljmp
dec
adc
mov
and
sahf
stc
fisubrs
aas
push
jo
ja
divb
xchg
adc
cli
pop
xchg
mull
sbb
inc
xchg
cwtl
es
fnstcw
cld
out
adc
mov
hlt
sub
lods
xchg
mov
pop
or
mov
inc
sbb
or
aam
jl
jne
mov
mov
push
data16
jl
icebp
mov
sahf
mov
loope
mov
and
test
mov
xor
mov
adc
fprem
dec
jno
andb
jl
and
xor
test
or
fs
cld
or
imul
add
push
fisttps
loop,pn
xchg
sqrtps
movsb
inc
sub
bound
pop
fchs
sub
and
xor
cmp
in
or
iret
and
xchg
ljmp
cld
xrelease
icebp
mov
sbb
add
fildl
cmp
adc
aam
jnp
mov
daa
xchg
lds
xor
cmpsb
mov
std
sbb
sbb
inc
inc
orl
push
or
add
mov
insb
rorb
mov
stos
dec
push
repnz
jecxz
in
pop
into
aaa
add
and
test
inc
js
arpl
jnp
pop
mov
jecxz
adc
push
ja
fbstp
add
rorb
mov
lods
fistpll
and
dec
jl
mov
lret
popa
mov
push
test
dec
or
fdivrs
sbb
jnp
push
decl
add
rcrb
call
xchg
cltd
rolb
scas
cmc
dec
push
add
mov
push
cmpsl
and
pop
pop
mov
cmp
dec
addb
and
cmpsb
xor
insl
dec
repnz
push
scas
or
int
inc
jne
pop
outsb
pop
shrl
out
cmp
outsb
cmp
idivl
outsb
nop
mov
pop
dec
pushf
shlb
les
pop
movsb
cmpsl
xor
jno
ss
gs
std
pop
pop
hlt
lcall
pop
xchg
xor
stc
jno
cli
xchg
or
ret
mov
cs
stos
test
push
xchg
mov
and
inc
mov
js
imul
xchg
mov
or
jl
pop
mov
sbb
int
add
test
fstl
adc
sbb
jb
push
pushl
pop
add
data16
add
cmp
shlb
xor
mov
pop
cmp
sub
ds
xchg
bound
xchg
inc
insb
or
popf
or
in
jo
je
lds
imul
mov
lds
stos
ss
mov
adc
mov
add
sbb
jne
add
jae
sbb
sbb
outsb
xchg
addr16
sub
ds
or
add
push
shll
add
int
add
out
inc
mov
aas
adc
dec
rcrb
or
sub
ja
xchg
fwait
xor
mov
dec
adc
into
or
lock
stos
xor
shll
sub
popa
push
sti
pusha
testb
out
jnp
mov
out
call
loop
pop
adc
dec
mov
pop
or
xchg
mov
mov
int3
add
mov
mov
aas
xchg
adc
dec
lds
add
imul
jg
mov
aad
ficompl
andb
mov
lods
lret
or
iret
push
xor
add
mov
jae
lods
inc
pusha
out
inc
dec
adc
mov
xchg
add
inc
xchg
lea
pop
lock
mov
iret
rorl
repz
clc
xchg
xor
mov
popa
int
insb
sub
dec
mov
sbb
data16
jmp
ljmp
ljmp
insl
mov
lea
aam
sub
mov
stos
xor
loopne
and
push
in
scas
xchg
adc
xchg
icebp
insl
lcall
loopne
add
mov
pop
pusha
int
loop
lahf
sub
adc
std
test
daa
cmp
sbb
scas
subb
sub
mov
sbb
dec
xor
mov
sbb
jb
cld
lret
push
lods
mov
roll
fldenv
ret
ds
inc
adc
out
movsl
sti
or
mov
fldl
popf
pop
in
lods
ja
andb
mov
mov
test
inc
loope
push
jp
sub
leave
cwtl
cmp
shll
sbb
jmp
lcall
dec
mov
daa
mov
mov
cmp
adc
dec
mov
insl
in
xchg
rclb
push
mov
dec
mov
sahf
lds
notl
stc
popa
flds
daa
lock
loope
sub
notb
adc
mov
sub
lock
jnp
adc
shll
movsl
lea
mov
arpl
jnp
mov
jmp
mov
enter
sub
arpl
call
mov
xor
adc
hlt
lahf
xor
mov
dec
fcompl
mov
sub
int3
xchg
push
ficompl
mov
cmp
xchg
incl
out
mov
cmc
or
mov
push
dec
insl
repz
mov
std
fdiv
and
imulb
mov
aaa
jae
pop
jg
jg
pop
rcrb
in
pop
dec
fidivl
and
sbb
xchg
mov
movsl
sub
push
dec
mov
rcl
jns
push
lret
in
jo
xor
inc
and
clc
daa
int
cld
adc
aas
sub
cmp
xchg
lcall
mov
mov
push
pop
mov
or
dec
cmp
cmp
adc
push
jle
pop
dec
in
imul
es
dec
sbb
xchg
dec
mov
les
fnstcw
and
shll
inc
lret
jnp
call
rol
imul
aam
xchg
mov
pop
loope
int
movsl
cmp
adc
adc
lods
loop
ja
add
mov
dec
push
outsb
insl
push
dec
imul
outsl
mov
in
mov
jl
cwtl
ficoml
cmp
in
jbe
enter
fwait
mov
cmc
sbb
pop
sbb
jno
push
int
in
ret
xchg
sbb
push
dec
jno
mov
stos
add
and
mov
sbb
push
popa
pop
push
outsb
or
add
ds
decb
shrb
pushf
dec
and
mov
mov
ret
out
dec
jno
mov
xor
jge
sti
pop
inc
hlt
push
inc
fldenv
or
popf
mov
mov
inc
outsl
int3
in
mov
jle
jb
scas
or
ret
dec
dec
xchg
dec
lahf
cld
mov
or
sub
add
jg
pusha
adc
popa
jbe
mov
mov
xchg
pop
ret
inc
and
lret
xchg
arpl
comiss
mov
clc
sub
in
cmp
out
lea
int
ja
nopl
int
std
mov
dec
ret
push
aas
sbb
adc
pop
jg
push
stos
mov
mov
and
jp
fdivl
lcall
cmpsl
fcompl
mov
adc
and
in
mov
nop
push
mov
add
shll
pop
int3
int
xorb
aaa
pusha
inc
xchg
jnp
fwait
cltd
adc
cmp
in
insl
std
ja
xchg
pop
bound
mov
mov
adc
ret
mov
adc
push
mov
mov
mov
shr
test
sub
cmp
mov
dec
ror
inc
mov
dec
add
pop
ret
push
push
and
cld
dec
fmulp
inc
cmp
jecxz
xchg
jg
pop
arpl
sub
push
mov
xor
sarl
ljmp
mov
and
push
imul
daa
ss
push
jecxz
movsl
adcl
sub
popa
fnstsw
insl
xchg
ja
mov
cld
add
ds
cmp
sub
push
sbb
movsb
cmpsb
mov
inc
jge
pop
pop
mov
xor
sbb
jge
cltd
jg
aam
notb
inc
xchg
pop
sub
push
pop
lret
lods
mov
jle
sarb
push
fs
push
lcall
pop
ficoml
mov
mov
xchg
popa
scas
cwtl
and
outsl
lahf
rcrl
mov
nop
sbb
movl
cmp
fisttps
mov
pusha
sub
ret
sub
je
ds
adc
daa
fsubr
push
ds
fwait
jbe
fisttpl
int3
xor
mov
scas
mov
sbb
mov
push
cmpb
xchg
mov
test
into
sbb
xchg
xor
cmc
push
jle
adc
fs
mov
adc
sbbb
cmpsl
inc
fistpl
or
or
and
cmpsb
lea
icebp
in
lds
bound
rorl
jg
mov
js
ljmp
sub
or
daa
sub
push
mov
outsb
dec
test
popf
pop
lret
xchg
rcll
movsb
mov
jo
xchg
ret
bound
jae
jo
inc
sti
xor
add
pop
out
mov
push
enter
int
out
in
dec
sub
sahf
sbb
pop
jb
das
fdivs
xchg
popa
sbb
rcrl
and
and
xchg
inc
jnp
mov
xor
dec
adc
in
dec
shr
adc
add
xchg
jno
andl
jg
pop
cmpsb
add
cli
dec
jmp
cmp
add
sub
push
xor
lods
rcrl
movsb
ret
inc
cs
sbb
push
pop
mov
sahf
dec
mov
jge
notb
or
fwait
push
lea
and
sbb
test
aam
scas
xor
imul
push
sar
lret
addr16
xor
cli
sbb
push
rclb
enter
cld
mov
jle
cmpb
sar
cs
addb
lds
lods
pop
xchg
xor
sahf
adc
xor
mov
fsubrp
inc
pop
in
dec
or
sahf
shl
lds
lds
pop
jmp
dec
out
push
arpl
or
cwtl
push
dec
add
jb
jle
pop
push
xchg
push
sub
ja
xor
test
mov
scas
imul
add
cmc
mov
lcall
xor
dec
and
pop
xchg
jae
cmp
call
push
pop
add
jne
lods
movl
sbb
pop
out
xlat
add
xchg
popa
add
or
ljmp
repnz
jae
aas
pushf
xchg
ds
int3
mov
push
xchg
lock
les
daa
push
push
xor
cmpsl
aad
adc
mov
cld
mov
das
bound
jno
fisttpl
mov
bound
add
fs
cmc
adc
sub
sub
mov
xlat
cmp
adc
out
xchg
pop
shl
sbb
test
into
in
adc
ss
insb
sbb
loop
les
or
lret
icebp
popf
fdivl
shl
std
aad
movsl
or
add
rorl
push
fnstsw
sub
and
jle
jns
xchg
shll
or
icebp
jnp
arpl
int
cmpb
add
inc
mov
inc
add
mov
jp
adc
nopl
mov
xor
pushf
jecxz
js
ficompl
pop
lds
stos
jecxz
flds
test
lcall
xchg
sub
outsb
jl
jge
push
in
into
push
push
xchg
movl
orb
sarl
adc
push
dec
jmp
add
inc
shl
cmp
sub
push
jge
push
jmp
inc
inc
or
cmp
sbb
test
nop
cmp
adc
sti
aam
jg
jo
mov
sub
xor
loopne
xchg
mov
inc
clc
icebp
test
sarl
dec
cs
inc
sbb
out
lds
lock
push
pop
adc
mov
cmp
es
jo
adc
stc
in
pop
and
cmpsb
pop
es
push
dec
repz
xor
cmp
sub
inc
movsl
push
and
shrb
inc
cmpsb
lret
stos
adc
ret
xchg
jne
scas
cwtl
mov
ja
adc
sti
mov
mov
pop
das
dec
lcall
and
xorl
fs
mov
pop
push
mov
int
stos
rol
mov
mov
rolb
xor
xchg
add
mov
xchg
out
adcb
pushf
xchg
out
out
stc
lods
cmp
xor
aad
jge
repnz
adc
fcos
push
insb
jl
shlb
out
cmp
adc
and
shrl
xchg
inc
das
roll
pop
addr16
dec
sub
cs
pop
inc
rcr
jl
bound
xlat
cs
cmpsl
pop
js
pop
mov
mov
xor
dec
inc
fsub
daa
dec
out
cltd
in
jmp
shrl
xchg
or
inc
add
mov
sbb
push
mov
mov
mov
push
sbb
fisttpl
pop
mov
loope
jl
lahf
sub
insl
add
mov
popa
sbb
lret
cmp
pop
inc
out
push
lock
dec
push
push
jb
xchg
or
sti
cmp
int
mov
or
sti
xor
cmp
jbe
pop
push
test
adc
pop
jmp
xor
sub
sub
or
aas
adc
cmp
in
lret
ljmp
push
or
mov
sub
mov
jge
mov
cltd
or
fstps
stos
xchg
pop
xor
adc
add
divl
stos
inc
and
dec
leave
loop
xchg
lcall
lret
pop
mov
adc
mov
inc
fwait
daa
jbe
pop
pop
ret
adc
sarl
data16
sbbb
aad
lea
xchg
btr
fs
push
pop
and
sub
lret
pop
cmp
shr
adc
add
add
fiadds
push
repz
jnp
sub
fbld
dec
icebp
popa
pop
das
adc
rcrw
js
das
push
inc
mov
jnp
in
jle
dec
mov
pusha
inc
lret
rcrl
imull
popf
or
hlt
push
fldenv
nop
push
fdivrl
mov
out
das
std
sarb
pop
mov
js
je
xor
xchg
dec
shrb
sbb
loop
mov
scas
pop
xchg
push
xor
add
rorl
xor
stos
sub
dec
mov
xorb
xor
fdiv
sarb
fadds
cltd
repnz
cmpsl
push
add
aad
pop
and
addl
ret
mov
mov
jmp
dec
icebp
out
mov
arpl
jbe
pusha
daa
and
or
sti
or
mov
and
and
fisttps
negb
xorl
push
add
repnz
dec
sub
jl
daa
cmp
push
dec
mov
ja
ljmp
pop
mov
mov
bound
mov
into
shrl
add
popa
cli
cmp
jle
sbb
in
push
lcall
test
fwait
adc
jnp
add
mov
inc
test
out
fimuls
or
test
xor
jne
inc
data16
je
xchg
sub
push
mov
xorb
mov
sub
fadd
sti
push
mov
outsb
adc
push
mov
andb
jg
jbe
jo
scas
lea
in
xchg
jo
push
out
clc
scas
enter
xchg
pop
pop
lods
xchg
inc
push
inc
sti
mov
push
xchg
mov
xlat
mov
pop
mov
clc
icebp
fnstenv
rcr
flds
dec
sbb
lret
adc
add
xchg
inc
stos
rcr
ds
lods
cmp
pop
cmpsb
aad
add
inc
or
leave
dec
sub
lret
testl
iret
ror
jl
outsb
sub
adc
cld
dec
pop
adc
insb
mov
jl
mov
adc
sbb
int3
enter
sbb
inc
es
jle
mov
xor
test
jg
fistps
jecxz
loope
data16
stos
xor
sbb
cltd
inc
pop
xor
lret
push
mov
sub
cli
in
mov
cmp
or
mov
insl
test
sbb
loopne
mov
adc
cmp
dec
mov
cld
into
jmp
jmp
test
and
xorb
enter
push
out
fsubrl
orb
jnp
inc
add
pop
lret
fwait
and
mov
negb
mov
xor
adc
cmp
xchg
pop
mov
pop
fsubp
mov
loopne
add
repz
mov
stos
cmpsb
ss
push
js
inc
orl
xchg
insl
add
mov
xchg
mov
push
sub
add
repnz
or
cwtl
adc
xchg
xchg
mov
sub
mov
lods
mov
stc
arpl
lea
movsl
shlb
jl
cli
jle
mov
movsl
xchg
fcomps
xor
jmp
in
push
push
aad
add
notb
lahf
mov
sbb
lret
fnsave
cmp
cmp
outsl
mov
xor
xchg
add
loope
lods
imul
sub
mov
pop
in
push
jp
outsb
test
pop
xchg
lods
sub
ds
rcrl
mull
gs
cli
xor
add
jno
jecxz
mov
fstps
mov
jae
addr16
addr16
sbb
std
add
pop
mov
fs
dec
xchg
mov
dec
mov
add
out
push
ret
out
push
push
push
cmpsb
incb
and
jne
pop
push
shrb
pop
cmpsl
dec
cmc
dec
xor
adc
xchg
cmp
xchg
pop
jns
mov
cmp
and
fmuls
xor
jg
sbb
jns
outsl
icebp
pop
mov
mov
and
out
cmp
xchg
fldenv
add
jbe
dec
sarb
cmp
dec
xchg
dec
inc
out
adc
shll
jno
in
loope
ja
loopne
mov
loope
mov
and
add
inc
xchg
bound
out
xchg
jp
push
mov
fcom
lfs
sbbl
inc
xchg
movsb
int
mov
push
arpl
ffreep
xlat
mov
cld
aam
xor
mov
add
loope
addr16
data16
repnz
andb
sti
push
cli
negl
je
cmp
mov
sbb
jb
sbb
xchg
and
sub
or
cs
or
int3
dec
mov
xor
sub
sbb
xor
add
sbb
mov
xchg
stos
adc
inc
jle
stos
cmp
push
lods
xchg
pushf
mov
inc
jo
lahf
pop
dec
mov
sti
sti
cmp
fists
cmp
inc
and
mov
jl
and
sahf
adc
mov
in
fldenv
pop
in
fldenv
jl
push
mov
repnz
adc
sub
mov
minps
cmp
mov
mov
mov
xor
subb
inc
jl
lcall
adcl
fiadds
inc
jg
or
push
sbbl
jp
sub
or
mov
sbb
clc
mov
inc
add
negb
lcall
in
cmc
mov
mov
imul
shll
cmp
roll
not
lock
and
aas
xchg
jae
ret
fldt
das
mov
fwait
mov
cltd
pop
movsl
push
xor
push
sar
icebp
add
rcll
in
cmpsb
imul
imul
xor
aad
or
dec
pop
arpl
cmp
stos
jl
xchg
jmp
cwtl
jo
xor
insb
xchg
and
out
or
shr
aam
jns
xor
sahf
mov
add
cmp
ja
adc
imul
stos
mov
cmp
ret
ret
cltd
pop
inc
mov
push
rol
add
movsb
data16
pushf
inc
sub
mov
adc
sbb
sti
fs
je
xchg
popf
gs
lcall
mov
fidivs
ljmp
mov
mov
lods
xchg
lea
add
int
pop
mov
clc
cmc
cmp
testl
push
xchg
aaa
out
pop
cs
and
inc
stos
pusha
std
addb
dec
pushf
sbb
gs
pop
fdivrl
adcl
mov
inc
mov
and
mov
jno
into
jmp
test
enter
lret
rolb
xchg
mov
dec
lods
mov
xchg
mov
dec
xchg
mov
jbe
sbb
inc
sub
repz
push
sbb
sbb
push
or
addl
cmpsl
xchg
lods
sub
sbb
dec
push
add
rolb
or
and
test
add
push
push
mov
mov
cmp
sub
and
stos
add
pop
test
xchg
std
incl
insl
fsts
jo
faddl
clc
out
xor
gs
dec
icebp
lret
movsb
out
popf
push
es
sub
and
or
xor
push
std
aam
ret
xchg
js
lea
js
dec
xor
push
clc
add
jecxz
jnp
mov
and
out
mov
xor
add
pop
mov
mov
mov
imul
insb
or
std
xchg
dec
pop
inc
sub
je
cwtl
sbb
jnp
push
sub
popa
cli
push
mov
subl
push
test
enter
int
imul
pop
fisttpll
mov
adc
fnstenv
enter
xchg
push
out
xor
pop
sti
insb
xchg
popa
mov
mov
adc
popf
push
daa
xor
mov
pusha
sub
lahf
loope
mov
sub
popa
pop
notl
adc
xor
push
inc
sbb
mov
daa
xchg
into
jno
add
jae
jmp
jg
sbbl
test
cwtl
and
inc
fnstsw
js
pop
dec
std
push
enter
dec
sbb
push
rclb
mov
xchg
iret
or
pusha
inc
fs
insb
pop
jmp
add
stos
xor
inc
loope
mov
cmp
or
jmp
mov
xchg
cwtl
dec
xor
mov
repz
je
andb
incb
mov
push
ffreep
bound
lcall
fsubp
sbb
push
nop
cmpsb
mov
pop
rol
inc
cli
and
cmp
push
lds
mov
mov
loope
sub
and
and
push
setl
xchg
andl
iret
dec
sbbl
cmpb
std
stos
add
sbb
lods
icebp
stos
icebp
cmp
sub
ljmp
rcrl
jbe
mov
fwait
mov
lods
insb
inc
das
push
push
repz
push
and
inc
push
mov
xchg
cmp
xchg
xchg
inc
sbb
add
das
dec
loop
inc
sub
xchg
inc
mov
loopne
push
movsb
out
mov
adc
scas
xchg
stos
lods
jp
nop
les
sub
xor
or
jno
gs
mov
add
push
mov
sarl
iret
aam
bound
mov
ja
cltd
sub
and
mov
push
mov
or
sub
std
jne
lds
xchg
xchg
cmpl
cwtl
je
mov
es
nop
in
inc
jno
adc
jns
pop
sub
sahf
mov
and
test
fwait
in
js
cmp
jle
cmpsl
inc
xor
pop
pop
jns
xchg
push
adc
mov
arpl
les
pop
jae
xor
xchg
aas
jecxz
push
xchg
mov
in
adc
movntq
aaa
leave
push
mov
loope
ret
cmp
sbb
lcall
das
ljmp
or
cmp
cmp
icebp
out
xchg
or
xchg
dec
mov
imul
gs
jp
jp
cmc
cmpsb
inc
cmpsl
xor
xor
jo
mov
cmp
pop
dec
or
or
filds
cld
scas
jbe
dec
push
jb
xchg
fcmovnbe
clc
popf
jg
xchg
xlat
call
call
outsl
aas
movsl
mov
dec
ljmp
enter
mov
inc
sbb
int
or
mov
sub
sbb
dec
sub
test
adc
fdivrl
daa
inc
lods
in
ficomps
jp
rclb
mov
ret
pop
ljmp
mov
in
xchg
in
call
add
cltd
mov
xchg
sti
and
jp
ss
jl
aam
aad
xchg
jle
pop
mov
or
ja
mov
mov
pushf
inc
repz
and
out
loope
mov
orl
inc
bound
out
jnp
or
lods
jle
pop
lea
sub
adc
repnz
pusha
sbb
bnd
fwait
pop
lret
sbb
inc
adc
jge
mov
and
cwtl
movsl
dec
jle
dec
ss
lds
pushf
xchg
pop
cmp
mov
add
leave
je
pop
repz
inc
fildl
lods
ret
inc
ss
mov
data16
fwait
mov
adc
push
sbb
fld
push
mov
jg
lret
adc
jb
idivl
js
testl
enter
sub
cmp
push
movsb
scas
imul
mov
push
shll
cmc
inc
scas
mov
call
jnp
pop
jb
xchg
xor
mov
xor
sbb
pop
cmp
js
mov
pop
inc
add
sbb
movsl
dec
xchg
adcl
xchg
inc
popa
aaa
imul
rcr
mov
or
or
fwait
ds
int
mov
cwtl
ret
xor
adc
movsl
lods
jnp
das
daa
out
push
mov
loopne
add
out
and
insb
cmp
es
push
push
repnz
decl
xchg
push
mov
mov
mov
aas
add
lds
cli
sbb
add
jmp
sub
imul
imul
fists
fisttps
cmp
jo
leave
mov
inc
sbb
test
push
testb
int
jge
jl
jb
rolb
out
sbb
mov
mov
dec
mov
inc
dec
xlat
sub
dec
cmp
dec
push
push
cltd
or
cmc
sbb
fistpl
xchg
lret
mov
icebp
cmp
sbbb
xor
filds
push
nop
push
xchg
mov
js
rclb
fxch
pushf
mov
aam
xlat
push
xorl
pushf
retw
pop
imul
sub
test
xchg
les
orb
in
xor
or
lods
jb
add
sub
mov
jns
jge
fadd
mov
inc
inc
cmp
test
push
xor
inc
sub
inc
mov
imul
cmp
addr16
mov
insb
scas
xchg
push
xor
jae
rol
sub
loopne
loope
cmc
push
inc
cmp
addl
inc
movsl
dec
and
mov
inc
xchg
call
inc
pop
jl
xor
xchg
cmc
cld
roll
idivl
and
jnp
jne
lret
adc
add
or
cltd
std
push
andl
xchg
bound
jmp
js
xor
in
lods
pop
add
xor
xlat
aas
xor
fcmovbe
jb
dec
xor
idiv
jmp
in
fnsave
in
fdivr
mov
imul
push
leave
jbe
jo
adc
push
or
jecxz
sbb
test
mov
push
jbe
rcl
add
or
daa
out
out
paddw
dec
mull
ss
fs
mov
pop
ds
xchg
xchg
icebp
imul
xor
push
xor
jge
mov
cmp
lcall
lret
out
int
dec
sbb
fsubrp
pop
cmp
ror
lock
sarl
sbb
inc
cwtl
ret
insb
pop
es
or
aaa
mov
fisttps
test
fsubp
adc
aam
xchg
test
jge
ret
cmp
jmp
cmpsl
inc
dec
arpl
in
mov
jbe
loope
add
inc
mov
mov
insb
fildll
pop
mov
insl
cmp
pusha
rcrb
idivl
notl
repz
mov
or
jge
sti
js
cmpsl
mov
ja
or
xorb
nop
dec
inc
les
cmp
mov
repz
movsl
rcrb
mov
outsb
ds
repz
aad
mov
fs
adc
cli
dec
push
sub
dec
jle
mov
jb
cmp
insl
jp
les
sahf
cmpsl
lcall
sub
hlt
imul
in
and
fstpl
inc
out
or
je
jmp
call
xorb
aas
pop
xchg
xchg
sbb
sbb
inc
push
pop
adc
sbb
xchg
jmp
push
nop
scas
xor
test
mov
add
or
mov
sub
leave
mov
push
adc
mov
mov
arpl
es
mov
dec
mov
nop
inc
divb
pop
cli
mov
loop
andl
insb
jo
mov
inc
repnz
or
int
popf
dec
dec
in
fwait
lret
add
xlat
fldl
mov
add
xchg
dec
xlat
xor
push
xor
sbb
jle
adc
jb
pop
add
dec
and
push
xchg
jge
xchg
scas
adc
es
xor
jg
nop
in
cmp
cs
cmp
out
mov
push
push
jae
aam
pop
lea
imul
adcl
add
adc
unpckhps
push
and
imul
jb
mov
ficoml
push
leave
test
cs
outsb
popa
pop
sub
ds
push
push
mov
jmp
sbbb
xor
mov
xor
out
push
mov
negl
inc
inc
lds
mov
cmpsl
ss
sub
stos
arpl
ret
inc
cmp
aam
fdivr
ret
movsb
xor
scas
clc
add
jbe
addr16
cltd
mov
sub
cmp
fwait
sub
mov
into
sbb
adc
scas
adc
scas
jbe
lahf
mov
fimuls
mov
dec
mov
xor
notb
dec
xor
or
mov
pop
cmpsl
xchg
pop
hlt
jo
ret
dec
mov
push
sub
lods
addr16
es
sti
inc
lret
push
sbb
pop
aaa
lahf
sbb
inc
loope
syscall
ds
out
repz
mov
pop
fisubs
movsb
push
xorl
cmp
fimull
pushl
cmpsl
adc
mov
mov
rcrl
or
push
int3
lds
cmp
sti
mov
in
xor
inc
fdivrs
push
jl
cmp
fisubrl
inc
fmuls
sub
mov
mov
ret
imul
fidivl
cwtl
arpl
push
ret
addr16
cmp
lret
jno
push
jmp
jl
fwait
outsl
xchg
or
xchg
test
imul
or
push
pop
push
mull
gs
mov
insb
dec
cld
or
and
jle
inc
mov
clc
xor
cmc
in
xchg
pop
in
lock
pop
mov
push
ss
cld
or
enter
movsl
hlt
lods
fmuls
loope
jecxz
sahf
pop
loope
pop
aad
pusha
pop
mov
xchg
jno
mov
xor
ljmp
jl
inc
out
in
enter
sbb
hlt
mov
int3
popf
xchg
hlt
add
push
negb
xor
clc
mov
pop
xor
aad
fcmovbe
test
dec
sahf
sbb
out
cmp
mov
dec
or
xor
jmp
mov
pop
into
shl
mov
out
jge
xor
add
int3
arpl
inc
and
or
sub
dec
lock
jle
jo
and
and
sbb
scas
shr
add
pop
fstps
cltd
mov
and
mov
and
das
popa
cmp
and
sub
inc
subb
loopne
inc
pop
jno
adcl
sub
and
shll
test
xchg
in
mov
adc
mov
push
sbb
call
and
pop
popf
push
jle
jle
cmp
lods
xor
lcall
shll
cli
push
ljmp
mul
dec
dec
test
add
add
jb
rcll
cltd
sahf
lret
stc
popf
sub
xchg
ljmp
ljmp
mov
les
cmpsb
lcall
or
dec
js
jnp
clc
mov
es
adc
mov
jge
mov
out
jns
pushf
mov
mov
dec
in
lret
ljmp
sbb
xor
inc
and
out
inc
sbb
in
adc
fwait
pop
insb
fcomip
repnz
fisubs
mov
xchg
push
pop
std
mov
lahf
out
testl
cltd
mov
jbe
xchg
pop
adc
inc
leave
enter
adc
cmp
add
loop
push
test
pusha
add
xchg
fnstcw
lea
push
xor
inc
repnz
les
mov
inc
mov
pop
clc
xchg
je
aas
lcall
add
ss
das
xchg
mov
add
push
xor
in
add
mov
popf
lahf
jnp
add
stc
leave
cmp
mov
rcl
dec
xchg
add
add
mov
xor
aad
jns
addb
in
sub
repnz
mov
aaa
push
sub
cwtl
xchg
test
or
lods
aaa
out
dec
sub
es
mov
aaa
adc
leave
cmp
in
jne
incl
das
jno
xchg
int
cmovns
mov
addl
aam
inc
mov
in
xlat
push
adc
out
push
aad
xor
data16
icebp
dec
or
jnp
cmp
lret
stos
xchg
or
mov
inc
adc
hlt
into
pop
lret
fdiv
aad
mov
jge
lods
call
jae
jnp
adc
jns
sbb
inc
test
mov
mov
daa
or
scas
adc
cmp
jp
je
shl
sti
add
pop
xchg
adc
xor
lret
decl
clc
mov
loopne
mov
pop
and
inc
aas
in
in
mov
mov
fisttps
xor
push
and
add
mov
stc
pusha
mov
mov
adc
stos
shlb
ja
loope
ret
xchg
jno
mov
inc
daa
int
jmp
lock
or
ds
mov
and
fs
je
add
sarl
repnz
enter
das
push
cmp
mov
mov
jecxz
and
jge
jno
cs
sbb
scas
lcall
pop
int
xor
mov
mov
lods
xchg
sbb
inc
add
ss
sub
lret
add
pop
add
xchg
push
dec
push
fidivrl
xchg
sbb
into
cli
push
shlb
pushf
mov
lcall
lcall
testl
sbb
pop
sbb
sbb
movsb
sbb
cmp
xchg
int3
test
and
scas
mov
ss
sbb
and
clc
jns
mov
push
mov
pop
movsl
aad
imul
jl
inc
mov
mov
imul
lds
jg
xor
cmpb
jle
mov
or
mov
mov
lock
scas
nop
sub
and
in
jmp
dec
jmp
loope
scas
dec
in
add
aaa
cmp
in
jle
push
aaa
popa
sub
orl
dec
add
pushf
call
push
xor
cltd
lcall
mov
aas
shrb
jg
or
not
xchg
cld
cwtl
andl
loope
push
lea
push
dec
in
push
push
and
add
test
cmp
jmp
pusha
inc
out
sbb
test
std
mov
int
inc
mov
call
xlat
cmpsl
push
std
test
push
and
lret
test
push
repz
imul
data16
fstl
mov
jle
jnp
imull
stos
xchg
dec
sbb
enter
lea
and
push
dec
push
cmp
xchg
xchg
and
das
mov
jp
clc
negl
scas
insb
xor
pop
cmp
ljmp
int
lahf
mov
mov
mov
mov
ja
pop
imul
fsqrt
int
inc
mov
aas
or
jecxz
js
jg
gs
ret
movsb
pop
divb
mov
outsl
pushf
leave
insb
fwait
add
cmc
sti
test
xor
subb
loop
mov
mov
fs
and
xor
mov
cmpsb
sbb
cwtl
ret
jns
jl
repz
outsb
hlt
dec
xchg
xchg
popf
scas
pusha
xlat
mov
mov
sarb
lds
push
mov
pop
stos
pop
daa
out
aaa
test
mov
repnz
mov
xchg
shl
mov
cmpsb
mov
push
jecxz
stos
mov
shl
insb
pusha
insb
mov
fildll
cmp
call
outsb
add
pop
and
dec
inc
add
jge
sub
xchg
popf
xor
xor
int3
test
leave
mov
mov
push
inc
scas
imull
jb
push
xor
xchg
mov
pop
inc
cmp
dec
std
negb
jle
jnp
mov
daa
xrelease
mov
pop
ret
adc
addr16
and
ret
push
stos
mov
int
cmp
ss
dec
stc
divb
out
jecxz
movups
je
cmp
sahf
adc
mov
pop
mov
test
pop
outsl
je
jbe
sub
pop
jne
addr16
lahf
cmp
mov
loope
lock
jle
add
lods
popa
jne
xchg
lods
hlt
xor
jnp
xor
and
in
mov
jl
das
inc
dec
lahf
xlat
xchg
test
cmp
dec
jp
dec
inc
jns
loopne
aad
sbb
loop
sahf
dec
jo
xchg
cmpsb
rcr
pop
sub
sarb
pop
add
outsb
shrb
cmp
cmp
jae
cmc
xchg
lahf
andb
in
jne
add
imul
sti
xor
pop
jo
mov
push
xor
jae
mov
jmp
xor
xchg
push
add
iret
test
mov
js
mov
dec
or
pushf
jns
fnstenv
imul
sbb
loop
push
aam
xchg
dec
or
pop
or
push
pop
leave
pop
add
stc
cltd
in
popa
jb
scas
jge
in
xor
out
jg
arpl
xor
ss
dec
fsubrl
fcoms
pop
xor
mov
sub
andb
icebp
inc
imul
and
and
adc
or
ss
cli
lret
lahf
xor
aam
js
inc
mov
sbbl
subb
push
int
inc
ss
pop
stc
inc
andb
int
sub
inc
in
mov
pushf
and
fsubp
ss
jmp
jl
decb
ret
dec
pop
lods
mov
insl
push
inc
mov
icebp
in
mov
and
push
clc
mov
andl
push
pop
mov
add
or
sbb
adc
aam
mov
xchg
or
imul
ljmp
mov
and
imul
mov
dec
mov
or
imul
outsl
fsts
pop
ficoms
aad
clc
cwtl
mov
mov
inc
test
pop
in
or
mov
push
or
cmp
cs
cld
and
adc
pop
adc
jb
xchg
out
dec
adc
and
fs
sbb
pop
lret
cld
fldenv
hlt
sbb
xor
xor
pop
std
aad
enter
dec
adc
test
xchg
jb
mov
inc
xor
sti
dec
xchg
in
je
lock
std
scas
inc
arpl
shrl
xchg
loopne
test
scas
lods
xchg
rcrb
sbb
xchg
sbb
aam
jbe
push
xchg
push
mov
or
sbb
add
mov
js
lret
mov
jge
aas
cs
cmp
mov
nop
fists
mov
insb
pushf
and
cmp
out
cmp
ret
subl
cwtl
rol
shlb
and
adc
sbb
mov
dec
xor
push
stc
sarl
test
arpl
sub
gs
or
subb
fdiv
stc
std
pop
mov
xor
or
jns
and
cmp
lret
sbb
orb
fs
jge
out
test
add
scas
fsubp
push
or
xchg
pop
sbbb
jecxz
imul
stos
sub
push
cmpsb
lds
clc
or
data16
sub
xchg
mov
mov
push
cwtl
push
ds
cmovnp
fnstcw
or
xor
push
sbb
mov
pop
loop
aaa
inc
hlt
sbb
xorl
adc
sbb
inc
popf
mov
xchg
jp
jno
movsb
add
les
cmp
ds
or
push
and
sbb
adc
ljmp
jmp
nop
mov
shrb
cmp
push
adc
mov
int3
sbb
or
jo
add
pop
dec
rclb
out
hlt
or
inc
jae
push
das
shrb
jo
inc
mov
test
push
sbb
mov
and
mov
pop
rcl
test
push
mov
lea
mov
clc
inc
gs
ss
cmp
sub
stc
mov
inc
subl
cmp
hlt
imul
jno
cltd
push
xchg
cld
ret
xor
movl
je
cli
mov
push
xor
pop
js
add
loope
divl
repnz
sbb
pop
fmull
lcall
imul
dec
shrb
xchg
data16
adc
iret
jb
xchg
int3
xor
ljmp
adc
sahf
outsb
dec
sbb
fisubs
or
repz
xchg
gs
test
test
pop
pop
mov
xchg
adc
movsl
jnp
cmp
cmp
push
pop
xchg
loop
stos
test
fwait
repnz
in
mov
mov
adc
addl
fdivrp
add
pop
jmp
mov
add
mov
repnz
jbe
xchg
movsb
lds
jecxz
popf
mov
add
xchg
lds
aad
stos
mov
jmp
cmpsl
xor
or
lds
rorb
xchg
xor
jl
ja
mov
popf
push
and
repnz
jmp
daa
cmpsb
test
iret
loope
inc
call
or
sbb
mov
ljmp
xchg
scas
mov
adc
mov
jo
cld
addr16
xorl
insl
dec
add
das
inc
mov
and
dec
add
and
lret
mov
pop
jb
insb
fnstenv
sbb
mov
stos
ds
lds
lods
icebp
adc
scas
push
sub
pop
or
clc
das
loopne
pop
daa
movsl
cli
xchg
adc
out
imul
fsts
jge
test
aas
inc
jbe
inc
add
cmp
mul
pop
mov
div
and
or
pop
fdivrs
add
and
sub
add
bound
popf
pop
movsl
mov
cmp
loopne
rorl
int
jecxz
outsb
jle
mov
push
add
jne
in
jmp
fistpl
arpl
addb
or
sbb
sahf
scas
dec
adc
xchg
push
add
mov
std
push
je
adc
scas
in
int
sbb
cmp
and
daa
sti
aaa
ja
inc
jecxz
mov
je
sub
pusha
add
xor
mov
jb
xchg
xchg
stc
rorb
mov
cmpsl
jmp
inc
mov
sub
stc
inc
cli
arpl
jmp
sbb
addr16
inc
fnsave
les
push
dec
jl
rcl
out
pop
cmp
push
test
jmp
das
jmp
push
sti
imul
movsb
xchg
xchg
xchg
aad
mov
in
push
push
cmpsb
or
and
mov
and
mov
cmc
fucomp
loop
fisubrs
jmp
rolb
cmp
aaa
sub
adc
stc
jl
insl
js
in
push
lahf
jbe
sbb
out
mov
xor
lret
mov
repz
iret
xchg
jge
rcrb
xchg
shl
test
xor
lea
stc
ja
sbb
cmp
in
icebp
jo
adc
or
je
fs
mov
cmp
int
push
sahf
repz
in
leave
xchg
daa
sbb
loopne
decb
movsb
add
jp
dec
rep
roll
and
jb
adc
negl
push
xor
shll
jbe
mov
testb
jnp
rolb
rcll
inc
cmp
fdivl
push
shrl
into
std
dec
pop
lcall
xlat
int3
jge
push
inc
dec
pushw
xchg
int3
xor
les
cmp
mov
cld
jp
mov
lret
dec
jg
pop
pusha
add
in
sub
jl
mov
jge
sub
outsb
and
sub
jle
jp
push
test
push
sbb
not
sbb
lcall
and
stos
in
mov
pop
xchg
pop
push
in
jg
pop
ret
push
inc
outsb
xor
iret
jmp
jle
scas
adc
xchg
pop
lea
test
push
add
std
lcall
dec
xchg
xor
inc
mov
xchg
jle
add
push
insb
mov
push
outsl
lcall
dec
leave
adcl
xchg
cmp
and
adcb
adc
push
add
and
jb
mov
xchg
mov
jl
xorl
popa
sbb
sahf
adcb
cmp
jns
aad
sahf
out
int3
stos
stos
push
mov
fildll
iret
mov
test
and
mov
inc
cltd
jo
fcomps
adc
xchg
push
cmpsb
or
pop
out
jecxz
jl
adc
pop
and
aam
loope
arpl
sub
imul
jb
adc
aas
xor
stc
lds
stc
jae
dec
sarb
incb
stos
movsb
ds
out
mov
out
popa
mov
pop
je
shl
inc
arpl
and
rep
inc
stos
xorl
jmp
jbe
push
mov
cmp
in
mov
ret
sub
out
cmp
iret
mov
sub
add
mov
int3
das
pop
jno
test
lods
hlt
ljmp
pop
jecxz
sbb
popf
aad
mov
insb
dec
ss
icebp
mov
in
sub
mov
jmp
cmp
cld
sbb
mov
xor
inc
adc
mov
jecxz
std
shl
xor
out
adc
jb
xor
adc
dec
inc
mov
jl
pop
dec
mov
lahf
and
addr16
and
ror
gs
push
adc
out
lods
std
lcall
inc
bound
xor
xchg
addb
inc
inc
movzbl
mov
mov
jecxz
leave
lock
and
adc
ret
fadds
sub
and
stos
jae
dec
cmpsb
push
add
jecxz
cwtl
lds
or
jmp
or
into
ret
int3
dec
mov
dec
iret
lods
sub
test
aas
mov
mov
loop
push
int3
sbb
in
jl
nop
or
mov
das
cmpsb
into
cmp
stos
xor
pop
adc
lret
cmp
xchg
push
sbb
aam
jbe
xchg
sub
xchg
jg
mov
mov
into
fcmovu
call
jns
rol
add
jne
shl
outsb
fildl
sub
arpl
out
aas
mov
xor
lcall
xchg
cmp
and
lahf
lcall
insl
mov
jnp
and
sub
push
stc
cmc
stos
inc
sub
and
pop
test
dec
push
pop
ret
xor
loope
jge
mov
hlt
adc
sbb
cmpsl
xchg
addr16
inc
dec
sahf
pop
xor
insb
aad
adc
enter
bnd
sarl
lret
pop
sub
stos
xchg
ljmp
je
xor
xor
out
out
push
orb
sti
adc
or
sbb
popf
sbb
hlt
mov
xor
gs
out
shrb
aaa
adc
jl
es
mov
inc
mov
addr16
pop
fnstcw
jno
repz
mov
sarl
mov
xlat
and
cmp
out
xor
cltd
outsb
cmc
nop
mov
mov
stos
mull
and
jb
rcrb
or
mov
cmp
mov
lock
push
cmp
mov
out
add
xchg
pop
in
prefetch
mov
and
mov
sarb
sbb
push
add
lahf
jmp
cmpsl
fmull
popf
nop
jge
xor
out
mov
loope
xor
xor
mov
jle
pop
pop
sub
pop
int3
push
sub
lods
jno
sub
sbb
and
sbb
pop
cmp
test
popl
and
stc
pop
mov
ja
lds
insb
insl
push
stos
insl
cld
ret
sub
sub
xchg
arpl
cmc
test
xor
aaa
dec
sbb
sbb
stos
fwait
or
add
add
dec
mov
sub
mov
xchg
inc
pushf
push
push
sub
dec
loop
pusha
xor
ss
int3
sub
pushf
add
jbe
aaa
hlt
inc
xchg
test
add
enter
mov
mov
mov
loopne
das
outsb
jae
scas
xchg
loopne
pusha
fsubs
pop
les
mov
mov
sub
aaa
add
hlt
lock
les
xlat
or
sub
addr16
jmp
outsb
lcall
xchg
push
outsl
in
pop
adc
mov
add
imul
stc
and
cld
inc
push
jae
pop
pop
pop
lret
add
insb
out
inc
mov
fisubrl
data16
xlat
pop
fucomi
leave
and
xor
shll
ret
push
pop
filds
repnz
push
les
iret
push
test
in
xchg
xchg
aas
mov
jg
je
push
xchg
add
pop
lock
inc
jle
call
cmp
push
cmp
popa
ret
ss
mov
mov
ret
xor
rclb
mov
jnp
mov
mov
mov
jp
xchg
jne
xchg
jb
shrl
dec
scas
xor
ret
xchg
push
sbb
mov
xchg
jl
pop
lock
cli
dec
movsl
frstor
cs
in
inc
outsl
ds
sbb
cs
fldl
adc
lods
push
fists
iret
cltd
xchg
and
movsl
cmovle
movl
dec
or
sbb
enter
lcall
adc
xchg
push
add
outsl
push
xor
rorb
in
and
lods
sbb
cmovns
inc
sbb
jcxz
and
ss
or
test
sub
mov
sahf
or
mov
repz
pop
pusha
sbb
or
mov
sbb
push
xor
xchg
or
add
mov
xor
repz
dec
hlt
imul
jle
sub
lock
arpl
inc
icebp
out
sub
mov
in
mov
out
jns
shrl
aas
stos
adc
inc
fcompl
aam
dec
inc
adc
and
outsl
leave
mov
aad
xor
dec
fs
cs
dec
inc
cmp
sti
dec
jl
adc
shlb
lret
xchg
and
xor
je
xor
add
sub
shl
or
sbb
xchg
push
cwtl
push
pop
dec
jp
and
mov
loopne
sar
pop
sbb
push
push
das
ret
stc
mov
loop
dec
sarl
inc
unpcklps
xchg
pop
into
sub
invd
sbb
pop
sbb
cmp
jge
inc
mov
filds
jge
scas
and
pusha
push
mov
xlat
pusha
iret
and
std
mov
nop
arpl
xchg
test
xor
adc
clc
test
shll
add
mov
sub
xchg
jb
lock
lods
inc
cmp
fildl
jb
aad
fcmovnbe
loope
arpl
insb
mov
int
jmp
test
in
out
out
dec
jle
aas
or
ror
add
add
jmp
aaa
mov
loop
xchg
repz
stos
out
cli
jne
aas
xchg
test
push
or
pop
mov
ss
pop
mov
jb
mov
push
mov
sub
inc
push
pushf
dec
mov
jmp
push
or
cmp
aad
xchg
xor
cmp
outsb
xlat
ret
pop
clc
inc
ja
out
and
dec
inc
lds
xchg
setl
scas
pop
mov
fsubs
int
sbb
std
scas
hlt
aaa
lock
add
and
push
inc
inc
jp
fs
clc
xchg
mov
test
jno
sbb
push
sub
adc
add
mov
jg
inc
push
mov
push
arpl
shl
jecxz
xor
pushf
sub
into
rol
pop
sbb
mov
and
add
xchg
pop
push
mov
fnsave
xlat
inc
sbb
and
fsubl
adc
xchg
in
mov
mov
xor
xchg
clc
rorb
mov
xchg
jnp
xchg
in
imul
dec
rcll
call
lea
sbb
outsl
and
and
adc
push
mov
add
xor
insl
pop
dec
test
aas
mov
loop
out
xchg
mov
xor
out
push
or
mov
rcrl
loopne
fldl
dec
mov
popf
mov
adc
jbe
aam
xor
jbe
rorb
cltd
icebp
inc
mov
xlat
jne
pop
push
fisttpll
xchg
pop
shlb
inc
mov
ds
push
and
dec
ljmp
ret
in
movsb
ja
cmp
pop
imul
sub
dec
mov
enter
data16
mov
shl
fs
gs
cwtl
movb
test
dec
rolb
xor
cmp
fidivl
mov
clc
rol
jl
mov
lahf
add
pop
mov
int3
xchg
or
adc
filds
push
push
push
jne
xor
push
leave
mov
in
cmp
imul
jl
int3
addr16
sbb
leave
mov
sub
movsb
insl
jno
enter
sub
sarb
lahf
sbb
sub
es
jecxz
xchg
dec
jb
cmp
pop
cld
fisttps
pusha
cld
out
xor
std
xor
imul
inc
ret
pushf
ret
psrld
add
jle
js
dec
or
mov
dec
inc
loopne
cmp
in
test
pop
out
mov
or
pusha
enter
xchg
out
test
jns
aaa
ljmp
jge
mov
shll
cmpsl
lahf
test
pop
xchg
mov
outsl
hlt
mov
adc
mov
pop
cmp
inc
test
or
sub
push
repz
inc
das
insb
dec
adc
lcall
mov
mov
fiadds
sti
inc
cmpsl
fwait
test
daa
xlat
push
adc
push
outsl
cmp
frstor
and
push
mov
popf
scas
lcall
loope
inc
ja
dec
sahf
mov
test
push
jg
nop
sbb
sarb
mov
test
arpl
insb
xchg
push
jg
add
jle
adc
push
das
smsw
mov
dec
not
sub
mov
mov
subb
cltd
in
xchg
popf
cmp
jns
dec
jmp
stos
mov
movsb
repz
fiaddl
sbb
bound
sub
xchg
jmp
ret
add
push
pop
enter
sbb
mov
cmpsl
adcl
inc
push
pop
push
add
fprem
or
cli
cmp
je
mov
ja
lods
sbb
adc
shlb
sbb
pop
fs
xchg
and
std
rcll
sahf
adc
dec
adc
fwait
add
inc
int3
xchg
mov
out
xor
cmp
jg
xchg
push
jmp
push
xchg
movl
adc
incb
inc
aaa
movsl
xlat
lret
mov
adc
mov
into
fwait
es
mov
xchg
or
popa
add
pop
mov
les
stos
mov
mov
scas
fdivr
hlt
fcmovb
dec
pusha
leave
xchg
mov
and
loope
bound
in
sub
lcall
stc
mov
sub
gs
aad
test
mov
stos
mov
jl
mov
jp
pushf
push
out
addr16
popa
mov
imul
addr16
push
psubq
mov
test
outsb
loopne
sbb
and
jg
xor
shll
iret
lock
sbb
repnz
les
shr
sarb
outsl
jp
dec
imul
mov
mov
cmpsb
fsubrs
aas
cmpsb
push
imul
push
outsb
das
sahf
add
jge
shrb
lahf
xchg
pop
lahf
add
adc
stc
enter
sub
cmp
or
lcall
jnp
push
ja
iret
incl
test
in
and
jecxz
jg
jb
mov
or
dec
mov
fidivs
jl
cli
cmc
out
jae
loopne
pop
dec
hlt
sbb
sub
pop
daa
jecxz
and
loope
pop
popl
out
xchg
test
daa
fstpl
stos
ja
enter
neg
jp
out
dec
movsl
inc
stos
or
add
push
jg
mov
mov
sub
outsb
fcmove
add
pop
jle
sti
mov
cmp
aam
jecxz
inc
mov
mov
dec
xor
aas
fldenv
inc
xchg
pop
push
mov
testb
call
cmp
inc
dec
rcrl
dec
inc
es
pop
dec
insb
icebp
fbld
sbb
arpl
adc
stc
sahf
sub
push
pop
dec
cmp
idiv
jl
xchg
cld
cmc
push
cltd
dec
or
pop
mov
stos
fcmovbe
mov
push
pusha
pushf
in
xchg
popa
cmpsb
mov
or
jge
aad
push
lods
sti
cmp
xchg
je
jns
test
aaa
mov
lea
adc
jb
imul
sub
lahf
push
out
sbb
clc
sbb
lock
adc
data16
mov
xor
inc
push
bound
call
dec
idivb
gs
adc
and
cmp
inc
sbb
cmp
test
sub
sub
loop
addr16
cmc
mov
and
xchg
fildl
addr16
xor
mov
imul
or
cmp
xorb
lcall
dec
jmp
jp
xor
addl
jbe
mov
es
stos
movsb
xchg
xchg
jae
cwtl
dec
push
sub
add
fsub
jmp
push
imulb
xchg
in
mov
cwtl
pop
mov
mov
fidivrl
or
add
bnd
mov
mov
pop
xor
das
fs
out
icebp
pop
icebp
les
cmp
cmovl
or
icebp
xor
mov
push
in
pop
adc
fs
mov
xor
push
outsb
mov
out
mov
xchg
mov
lahf
fsubs
xchg
sbb
or
lahf
dec
pop
jmp
into
lret
and
lret
adc
jo
loope
push
cmpsl
adc
popa
lret
dec
cmpsl
dec
or
ljmp
adc
mov
movsb
xchg
inc
pop
mov
mov
sub
and
pushf
add
mov
xchg
mov
sti
xchg
adc
push
daa
shlb
xchg
xor
ljmp
sub
push
in
sub
loope
lock
je
pop
lds
mov
mov
cmp
or
gs
lret
mov
and
fsubrl
call
in
cmp
pop
sbb
push
cmp
out
sbb
jnp
std
or
rorb
jns
pop
push
out
xchg
mov
mov
sbb
xchg
inc
sub
push
lret
push
sarl
fs
cwtl
mov
inc
push
ret
push
mov
ds
cmpsl
mov
push
sahf
ds
sar
inc
popa
xor
sti
xor
xor
lret
fucomip
enter
outsb
mov
aas
mov
sub
fidivs
xchg
sbb
xchg
xor
push
je
out
mov
pop
ror
dec
push
es
in
mov
jae
sar
cmpsb
xor
adc
mov
mul
add
pop
in
lods
lods
and
iret
popf
and
lret
or
ror
add
test
in
filds
mov
shll
mov
and
mov
clc
xchg
cwtl
pop
pop
mov
sub
sbbl
jnp
jnp
and
jmp
mov
repz
popf
push
pop
jle
and
adc
mov
sub
loope
inc
xor
loopne
rcl
fldenv
fnstcw
loope
iret
mov
ja
xor
sbb
sahf
dec
xchg
xor
hlt
outsb
xor
fdivs
and
call
cmp
cwtl
mov
cmp
out
fisttpl
inc
dec
jl
push
sub
in
out
mov
adc
mov
mov
adc
insl
inc
adc
cmpsb
pop
andl
dec
in
stos
jg
dec
in
cs
dec
jg
xacquire
cmp
test
cmp
mov
and
fistpll
mov
iret
mov
aad
out
fcmove
sbb
mov
sti
ss
cmp
mov
mov
push
pushf
fprem1
xchg
xchg
dec
or
fisttpl
add
ficomps
xor
xchg
jne
push
lret
pop
test
jne
sti
fcom
lods
pushf
and
cmc
pop
ffreep
mov
pop
mov
xchg
dec
mov
jmp
push
bound
adc
xchg
push
or
xor
clc
out
mov
jnp
and
and
aad
inc
imul
mov
adc
jbe
mov
ss
jmp
inc
ficoms
sbb
pop
outsl
ja
xchg
and
mov
add
movsl
adc
movsl
idivl
lea
jno
stos
mov
jle
mov
into
enter
jne
into
mov
add
inc
xor
pop
pop
je
imul
scas
clc
xchg
ja
dec
aaa
add
mov
mov
dec
jno
call
jb
int
push
jg
jle
or
pushf
cmc
cli
pop
xchg
mov
push
cmp
sub
mov
inc
sbb
enter
xor
loopne
push
sub
mov
jnp
and
and
mov
into
adc
in
sahf
stc
push
push
lahf
cmp
lcall
mov
cmp
push
adc
dec
adc
xchg
push
pop
add
cmp
sub
pop
adc
dec
mov
fsubs
mov
cmp
pop
mov
mov
gs
aaa
inc
jge
dec
iret
test
outsl
inc
push
cmp
sti
mov
out
jnp
mov
mov
mov
fildll
int3
mov
stc
popa
lret
mov
cmp
xor
xor
sub
lods
repz
shrl
outsb
dec
rcr
mov
sub
add
cmp
addr16
push
jns
test
dec
shlb
xchg
dec
mov
push
xchg
mov
pusha
ljmp
jg
dec
xchg
insb
inc
or
movsl
shll
jp
xchg
sti
aad
rclb
imul
inc
mov
inc
push
cld
outsb
or
sbb
mov
add
lahf
mov
push
sub
xchg
dec
ja
dec
out
push
inc
fsubs
and
iret
cs
add
aad
popa
cmpsb
imull
lcall
mov
in
icebp
dec
mov
fs
daa
mov
and
pop
je
jmp
call
add
hlt
js
jae
stos
out
out
lock
pop
repnz
jge
dec
pop
xchg
cmp
push
mov
adc
pop
push
inc
and
xchg
vaddsubps
sbb
or
xchg
sbb
mov
add
in
adc
loope
sub
loopne
pop
adc
punpcklwd
mov
out
push
cli
add
pop
and
out
cld
or
and
pop
out
orl
das
fwait
dec
stc
fsubp
orl
insl
shll
js
aas
jge
rsm
inc
or
cmp
add
and
xchg
mov
ss
mov
lret
mov
pop
mov
mov
bound
data16
int3
mov
mov
xchg
testl
cmpsb
jns
leave
mov
cmc
sbbl
adc
data16
addr16
and
xor
mov
out
outsl
divb
loop,pn
out
inc
jmp
xchg
bound
fsubs
pop
das
lahf
lea
cmp
add
and
daa
and
pop
jae
pushf
loop
insl
aaa
mov
cmp
mov
jle
inc
sbb
push
sbbb
divb
dec
jb
add
inc
cmpsb
adc
es
xor
stos
loope
push
push
mov
out
or
mov
xor
push
dec
lret
add
xchg
popf
insb
sbb
in
sbb
setae
ljmp
sub
pop
out
jle
sub
dec
sar
test
inc
andl
icebp
out
fcomip
jecxz
pop
aad
jg
out
xor
push
xor
mov
ret
daa
jle
fisubl
cwtl
or
jbe
fildl
loopne
mov
mov
cwtl
cs
xor
mov
imul
out
adc
add
cwtl
add
dec
call
xor
mov
xchg
xchg
out
adc
mov
or
jne
and
add
les
cmc
scas
enter
pop
stos
jbe
push
sbb
mov
lods
add
stos
inc
orb
add
or
int
daa
xor
rorb
imul
push
int
jmp
cmp
or
dec
add
es
xchg
sbb
lock
mov
push
popa
and
fistl
int3
icebp
xchg
xor
mov
je
stc
fdivl
fwait
mov
add
out
lods
lcall
sub
bound
xor
mov
cwtl
fwait
and
and
sbb
sub
in
shl
int3
loop
mov
jmp
mov
cmpsb
stos
aam
pop
cmp
cmp
push
mov
scas
mov
es
leave
test
int3
fstp
stos
pop
sub
push
stc
int3
pop
dec
clc
push
test
sahf
dec
mov
ds
jmp
or
adc
mov
fnstenv
dec
dec
sbb
inc
lret
data16
xchg
or
imul
lock
jecxz
jns
lea
pop
jno
dec
adc
push
in
ret
pop
xchg
push
rclb
pop
dec
movsb
mov
icebp
mov
push
mov
add
pushf
and
cmp
rcrl
sahf
jecxz
push
mov
mov
dec
ljmp
aad
adc
sub
push
subl
inc
xor
stos
pop
adc
xlat
ret
in
ja
imul
pop
or
sub
mov
add
sbb
test
es
sbb
clc
cmp
popf
fcomps
mov
cld
je
aas
or
jnp
stos
popa
cmc
test
mov
outsl
xor
or
jo
xchg
aad
dec
sub
movb
sub
call
enter
sbb
lods
shlb
or
fists
addl
xchg
imul
es
movsb
mov
fildll
aaa
test
push
loopne
imul
mov
mov
mov
mov
push
mov
mov
clc
fsubrl
gs
xchg
in
push
sahf
mov
aad
arpl
xchg
stc
cld
dec
pusha
add
out
lahf
out
adc
in
jns
xor
xor
inc
sbb
or
jmp
adcl
lcall
lret
inc
imul
jno
mov
lock
pop
cmpsl
xchg
sub
mov
xchg
jb
shll
adc
ss
stc
add
lods
jns
lods
out
xorl
lret
mov
je,pt
mov
js
ret
pop
add
fs
iret
outsl
shrb
push
sub
cld
cld
sbb
pop
lahf
test
repz
mov
pushf
push
iret
mov
mov
sbb
dec
popa
fcomip
out
and
mov
inc
inc
inc
movsb
sbb
aam
imul
mov
into
pop
mov
imul
add
or
out
dec
pcmpgtb
shll
xchg
pop
sbb
xor
out
in
fildll
ljmp
add
mov
lahf
jne
dec
mov
mov
inc
sbb
dec
mov
cltd
sub
cmp
xor
mov
fwait
pushf
sub
mov
inc
movsl
pop
mov
in
stc
jb
pop
popa
push
mov
stos
cmc
dec
rolb
push
jbe
mov
ljmp
jge
add
inc
fists
mov
cmc
sbb
or
push
fbld
add
sub
insb
push
hlt
in
cwtl
adc
ljmp
scas
mov
int3
jno
cmpsl
fs
sarb
pop
cmc
lods
pop
or
adc
adc
popf
mov
pop
or
mov
jmp
push
popl
clc
outsl
jmp
inc
inc
dec
cmp
cwtl
pop
in
adc
push
scas
sub
sahf
mov
add
xchg
and
cmp
outsb
outsb
inc
bound
cltd
cwtl
inc
push
dec
cld
mov
stos
dec
ss
mov
scas
mov
push
adc
pop
jb
adc
jmp
out
mov
add
mov
xor
pop
jg
int
xor
jg
xchg
xor
shrb
movsb
pusha
push
pop
sub
jns
sbb
dec
inc
and
xor
mov
sub
iret
fs
pop
imul
mov
pop
stos
arpl
out
js
inc
loop
lret
push
mov
add
sbb
push
popf
cmp
pop
and
and
sub
mov
dec
jns
into
mov
roll
inc
in
pop
adc
cmp
mov
or
ja
jmp
sahf
cld
imul
dec
into
dec
and
cmc
das
dec
dec
fs
inc
fsts
test
mov
or
jbe
icebp
scas
sbb
testb
je
and
inc
add
mov
into
lock
lods
rclb
add
std
cmp
fcomps
push
mov
sbb
sbbl
test
or
and
mov
gs
lds
subl
test
adc
jl
mov
insl
xchg
into
push
mov
or
adc
cmpsl
mov
push
add
push
cmovp
push
aas
loop
push
xrelease
fistps
rol
lock
mov
cmp
aas
pusha
aaa
out
push
adc
fdivs
push
and
shrl
pmuludq
inc
in
pop
cmc
jecxz
pop
popa
or
clc
scas
or
pop
testb
mov
sbb
sbb
push
stc
insb
push
mov
sub
inc
cltd
dec
insl
cltd
xchg
stos
mov
fimull
invd
test
outsl
xchg
rcll
mov
rcrb
cmp
mov
shlb
stos
fimuls
cmc
dec
sub
fwait
scas
push
push
call
ja
into
aaa
imul
dec
lds
cld
push
cmovo
nop
ret
sub
insb
cmpsb
mov
fdivrl
hlt
pushf
cmpsl
lea
out
aam
int
mov
inc
scas
inc
cltd
mov
and
or
rcrl
fisubrl
push
orl
push
xor
icebp
mov
push
mov
fwait
dec
inc
mov
mov
stos
mov
fidivl
stos
xchg
stc
cltd
outsb
ret
mov
sbb
mov
pop
fidivl
fsub
jae
mov
jns
ljmp
lret
pop
sub
mov
js
aaa
push
ret
enter
and
lods
push
std
pop
push
rol
leave
lds
les
mov
arpl
in
and
test
mov
loop
inc
xor
jp
jle
xchg
in
adc
pop
mov
mov
add
mov
loop
sub
inc
stos
push
aas
jecxz
mov
push
rolb
in
dec
add
mov
mov
mov
mov
outsl
inc
mov
or
adc
pop
scas
inc
xor
adc
fucomip
test
les
cmp
jge
inc
dec
out
call
push
cmpsb
icebp
or
fnsave
push
pop
push
stos
incb
jge
mov
js
lods
xchg
mov
cltd
test
repz
cmpsl
ret
leave
sub
adc
push
push
jl
leave
pop
repz
dec
add
cmpsb
mov
test
adc
inc
mov
fisttpl
js
sbb
fs
sbb
pop
push
insl
int
popf
pusha
lods
stc
mov
fbstp
fbstp
mov
inc
dec
mov
data16
ror
mov
andl
adc
sub
daa
es
mov
jbe
adc
shlb
test
mov
pusha
lods
and
ljmp
iret
and
jg
incl
adc
in
int3
aam
popa
sbb
fistl
stc
mov
and
sbb
push
and
sbb
push
jmp
pushf
push
ja
or
xor
mov
fwait
lret
sub
and
in
in
les
pushl
mov
jmp
xor
push
and
or
cld
lcall
or
ret
pop
cltd
lahf
and
call
incb
popf
bound
dec
mov
mov
aad
cli
push
pop
mov
fisubl
decl
sti
adc
sbb
mov
shr
stos
cli
sbb
incl
mov
adc
mov
jbe
mov
insb
push
cmp
pop
sbb
dec
js
inc
xchg
lods
sub
push
fisubs
lcall
pop
xlat
fnstcw
repnz
repz
adc
jge
les
sub
call
mov
pop
aam
lcall
pop
cmovs
mov
sarl
mov
enter
or
jle
sub
add
ss
sahf
out
pop
mov
call
mov
pop
and
pop
mov
dec
xchg
adc
lods
push
stc
lods
adc
sub
jne
scas
mov
loope
xchg
rolb
and
outsb
sbbb
ret
jecxz
push
cmp
fdiv
xchg
adc
popf
inc
out
addl
inc
and
imull
cmp
iret
lret
mov
mov
xchg
xchg
mov
or
sbb
sti
adc
push
dec
stos
js
flds
repnz
jnp
jge
push
or
in
jb
lret
push
enter
fstpt
jnp
mov
adc
repz
mov
mov
fstpl
push
test
lods
or
fwait
iret
mov
dec
mov
jmp
xorb
sub
xchg
loopne
loope
pusha
mov
nop
fs
xor
out
hlt
movsb
adc
test
out
mov
stos
aam
mov
jmp
inc
dec
or
fisubrl
jl
fs
rolb
sbb
mov
mov
jp
pop
inc
loope
stos
dec
andl
mov
aad
mov
xchg
test
xchg
divb
inc
popf
adc
jnp
xchg
out
cmpsb
mov
lret
insl
cmc
adc
out
sbb
and
mov
mov
inc
dec
xchg
mov
and
std
jnp
mov
in
jae
mov
std
ja
dec
movsl
xchg
sub
pop
rcrb
mov
jle
jno
test
sbb
pop
das
add
dec
and
sbb
sets
daa
sub
dec
inc
hlt
xor
fadds
cmp
mov
inc
call
popa
pop
sub
add
cmpsb
pop
and
cmp
jle
xor
adc
xchg
movsb
jp
mov
sarl
lret
icebp
lret
push
or
mov
stos
outsb
sbb
mov
pop
pop
shrl
repz
mov
add
fistps
loop
ja
rcll
psllq
xor
mov
sub
inc
and
outsl
pop
inc
xor
insl
outsl
xlat
fwait
je
and
outsl
out
cli
mov
rcl
and
inc
add
shrb
mov
cmp
fcompl
loop
push
outsl
xchg
mov
fldcw
repnz
mov
dec
std
pop
jle
popa
pop
js
inc
out
sahf
mov
jbe
jns
and
jbe
pushf
mov
mov
ror
add
push
cmp
xchg
xchg
dec
sbb
mov
rolb
in
xor
cltd
ljmp
lahf
sbb
inc
inc
lock
mov
cwtl
cmc
aas
or
sbb
fmuls
xchg
dec
test
xchg
or
dec
movq
sbb
mov
push
mov
jg
jg
daa
out
sub
mov
hlt
movsb
ret
or
daa
lahf
movsb
jae
cmp
stc
sbb
repz
les
imul
push
sub
and
negb
mov
imulb
jl
pusha
loopne
and
cli
dec
dec
pusha
shrb
mov
push
test
jbe
out
lods
add
or
test
test
dec
loop
div
scas
sub
stc
in
cld
movsl
outsl
sarl
ljmp
sbb
and
push
dec
int
fwait
push
out
mov
std
sbb
xor
aaa
jl
xlat
jo
int3
adc
jnp
xlat
mov
xor
or
loope
lock
adc
test
dec
jecxz
jae
popa
xchg
push
je
enter
pushf
insl
mov
sub
and
mov
les
xchg
mov
les
ljmp
andl
movsl
lods
cmp
mov
iret
or
cwtl
adc
out
add
loopne
test
pop
sub
popf
fsts
js
push
mov
ret
xchg
or
scas
pop
and
jne
dec
mov
xchg
jo
ss
shll
inc
xor
movsb
dec
mov
fs
xchg
rclb
xchg
enter
sbb
push
mov
sub
daa
sti
cmp
fisttpl
sbbb
xchg
xor
ret
sbb
xor
xchg
aad
cltd
in
push
cli
jmp
inc
inc
mov
mov
sub
xchg
add
lods
es
push
cmp
je
and
pop
mov
in
cli
cli
fucomi
push
mov
in
jle
fistpl
inc
decb
adc
or
jb
cmp
dec
mov
cmpb
fs
sar
outsl
in
cmp
and
mov
iret
insl
test
jecxz
dec
int3
sti
stos
adc
pop
cmpb
jge
test
arpl
loope
mov
and
lods
mov
sbb
lods
psubsb
testl
test
mov
insb
hlt
lret
sub
test
mov
push
cli
addr16
mov
sub
mov
inc
xorb
cwtl
add
out
dec
and
jecxz
push
aam
test
ja
stc
stc
stos
cltd
adc
out
pop
push
aas
out
cmp
lds
xchg
mov
jo
rcrb
pop
cwtl
sbb
out
xor
pop
sahf
daa
mov
in
aam
jle
movsb
dec
test
mov
pushf
mov
icebp
shlb
aad
pushf
mov
or
push
sarl
push
dec
xchg
je
jp
push
out
or
mov
test
pop
push
pop
jg
jle
mov
outsl
inc
jge
rcll
mov
jecxz
inc
push
jle
and
mov
imul
daa
andl
sbbb
aad
adc
notl
movsl
fnstenv
out
jg
je
sub
push
xchg
pop
enterw
pop
das
push
mov
out
out
sbb
test
pop
or
mov
mov
pop
in
jecxz
mov
std
jle
shll
lods
mov
inc
pop
icebp
int3
xor
xlat
push
sbb
rolb
and
xchg
sbb
jp
adc
stos
and
fbstp
imul
mov
xchg
mov
test
inc
sarl
push
test
sbb
iret
push
ss
mov
stc
xchg
pop
xchg
test
xchg
sbb
std
bound
jg
mov
ret
sbb
rcrl
lret
mov
icebp
pop
inc
xlat
cld
cmp
cmp
jbe
iret
sbb
jge
call
rorl
and
out
mov
sub
sbb
sub
lock
fs
mov
xor
sub
sub
mov
fisttpll
bound
mov
xchg
mov
popa
fnsave
pop
insb
orps
sbb
sahf
inc
loop
push
cmc
mov
xchg
popa
pop
jno
adc
pop
inc
pop
cmp
add
add
cmpsl
es
adc
xorb
mov
out
xchg
popa
out
or
adc
adc
xor
cs
ret
fistpl
aad
mov
dec
mov
inc
movsb
jnp
sbb
fs
and
cmp
dec
test
add
arpl
pop
jge
ret
fsubrs
xor
sbb
int3
outsb
push
jae
xor
fbstp
call
mov
mov
rep
xchg
int3
sub
jl
pop
pop
xchg
popa
mov
cmp
call
mov
adc
mov
aad
pop
or
xchg
xchg
sbb
popf
pop
push
lret
jo
cmp
dec
cltd
mov
push
popa
aam
pushf
sub
sbb
jp
inc
stc
xchg
or
push
and
addl
jge
adc
je
pop
jle
jne
fwait
mov
in
pop
outsb
inc
aas
pop
sub
mov
addr16
inc
pop
shll
pusha
xor
aam
mov
adc
xlat
pop
cli
xchg
ljmp
and
mov
outsb
lahf
imul
cs
dec
out
sub
jbe
pop
ljmp
icebp
stos
fisubrl
in
xchg
test
out
sub
xchg
push
cmpsl
pop
lahf
mov
xchg
cmpb
jnp
ja
fnsave
movsl
sahf
xchg
push
int
jo
int3
push
xchg
js
pop
jmp
out
mov
shlb
cs
xchg
ret
pop
mov
adc
pop
push
pop
repz
fisubs
jle
je
ud1
jg
or
bound
gs
cwtl
and
push
mov
stos
outsb
cmp
pushf
jns
test
add
inc
inc
pushl
fcoml
movsb
pop
daa
popf
shl
outsl
mov
shrb
fidivrs
adc
xchg
push
xchg
mov
adc
xor
orb
mov
ljmp
fnsave
jne
mov
out
pop
or
bswap
jmp
pop
cmp
inc
mov
xlat
push
popa
mov
data16
pop
aaa
call
int3
xchg
sub
testl
jmp
ror
leave
push
fcoms
sbb
push
fs
jmp
cmp
in
bound
adc
mov
lret
dec
mov
xor
cmpb
mov
hlt
push
mov
popf
sbb
xchg
lahf
push
cli
ror
gs
dec
inc
push
jnp
data16
add
jecxz
inc
or
cmc
out
mov
out
mov
sarb
leave
cwtl
dec
mov
jg
adc
popa
outsl
shrl
ljmp
xchg
loopne
mov
jbe
inc
fsubs
fiaddl
test
arpl
movsb
and
mov
adc
mov
pop
fwait
xor
sahf
xchg
push
push
xor
inc
insl
sub
orb
and
or
fmull
mov
dec
cmpsl
push
pop
and
mov
inc
mov
push
scas
add
jg
push
inc
icebp
aaa
movsl
push
fs
push
sub
jg
les
push
fcomip
mov
into
sbb
int3
scas
je
mov
push
jecxz
cmpsl
and
popa
adcl
imul
mov
push
test
rorb
push
mov
movsl
mov
jne
and
test
xchg
add
data16
add
arpl
xchg
push
mov
dec
out
les
out
mov
shr
sarl
inc
pop
fdivl
icebp
in
into
iret
test
loope
xor
nop
and
les
fisubrs
dec
push
sarb
jl
loopne
sub
pusha
and
xchg
sbb
and
mov
add
push
ss
push
sub
dec
out
fcom
mov
mov
cmp
test
stos
mov
aaa
or
and
out
gs
mov
xlat
or
mov
mov
adc
sbb
sbb
push
test
pop
cmpsl
pop
iret
inc
lcall
xor
xchg
iret
cmp
loop
jb
xchg
icebp
addr16
sbb
lahf
jae
sahf
into
add
push
pop
in
push
xchg
out
mov
inc
loop
push
negb
push
inc
sub
mov
fcomps
scas
cmp
sbb
and
rolb
movsl
push
mov
jo
daa
jne
test
dec
lret
push
xlat
or
lock
or
mov
adc
in
test
cli
inc
insl
negb
popa
in
and
jb
ss
idivl
sbb
nop
cld
cmp
out
bound
outsl
out
xor
xchg
stos
addr16
jmp
mov
cmp
jbe
push
xor
lahf
dec
insl
cmpsl
and
ja
cmp
cmp
xadd
hlt
insl
cmpsl
std
es
jmp
pusha
gs
and
mov
inc
push
push
test
pop
sti
jmp
xor
imul
cli
mov
mov
cmpb
push
nop
arpl
fdivrs
jno
inc
sbb
aad
xchg
movsb
push
mov
pop
adc
arpl
daa
test
sbb
pop
jns
mov
loope
push
push
mov
adc
xor
xchg
or
pop
sub
pop
aad
mov
cltd
jge
out
mov
daa
xchg
loope
popa
dec
mov
jno
faddl
mov
ljmp
les
pop
stos
mov
sbb
movsb
dec
adc
hlt
daa
out
rcl
daa
imul
and
add
or
mov
mov
in
sub
icebp
pop
in
mov
and
pop
rclb
pop
decb
pop
inc
push
sahf
and
xor
incb
and
cmp
or
and
js
mov
jae
sarb
sub
or
loop
dec
mov
pop
adc
push
xor
cmp
and
stc
xor
ret
push
cmp
stos
sub
fs
jp
jns
clc
je
add
scas
mov
sub
pop
call
pushf
sarb
hlt
das
cs
inc
pushf
cmc
loopne
dec
enter
and
in
lock
jne
enter
sub
les
push
pushf
dec
int
rclb
in
dec
push
pushf
in
mov
push
jmp
mov
test
pop
je
push
repnz
adc
cwtl
addr16
mov
ret
rorl
sub
add
mov
mov
pop
rclb
stos
mov
dec
xchg
mov
les
ret
rcrl
pop
adc
data16
orl
inc
jns
and
and
mov
test
scas
xchg
jl
sub
cld
mov
and
dec
add
sbb
add
push
xor
sbb
jns
js
lods
pop
pop
ljmp
and
rolb
jle
lret
sahf
jge
repz
cmp
add
sbb
jo
inc
in
adc
imul
stos
jo
insb
mov
xchg
cltd
adc
fidivrl
jg
mov
cmpsl
or
imul
sbb
and
push
fldcw
ja
andb
ja
in
fwait
sar
movb
rorb
fbld
pop
aam
cli
shlb
mov
mov
adc
scas
mov
mov
xchg
xchg
pop
jl
mov
in
jmp
pop
xchg
mov
cli
insb
pop
loopne
xchg
stos
lcall
mov
adc
adc
cmp
sahf
xchg
add
les
subl
or
stc
push
pop
mov
sarl
sbb
movsl
adc
sbb
mov
dec
leave
ja
add
inc
pusha
and
sbb
data16
push
mov
pop
cmp
xor
cmp
daa
fisubrl
sbb
fisttpll
mov
mov
cmp
hlt
mov
xor
aaa
aas
cmp
insl
add
outsl
mov
aaa
sbb
insb
imul
cwtl
int
mov
dec
or
adc
sub
popf
pop
push
or
inc
jmp
fwait
stos
popa
out
sbb
xchg
push
sub
and
sbb
push
xor
pop
mov
aam
in
daa
or
or
enter
push
in
mov
inc
ss
dec
and
adc
in
enter
inc
fidivrl
movnti
mov
ja
je
jno
jmp
mov
fstl
hlt
pop
mov
fnstcw
cmp
jg
xchg
jno
mov
into
sub
inc
or
jne
ficoml
jno
gs
add
jae
push
and
cli
inc
jg
jbe
mov
push
test
mov
or
es
or
inc
xor
in
or
ds
insl
imul
test
test
cmc
fcompl
push
sub
sti
mov
cwtl
dec
insl
movhlps
and
ror
dec
fisttps
xchg
nop
test
mov
es
cmpsl
icebp
pop
int
rcll
loop
add
mov
cwtl
xchg
push
mov
outsb
and
testl
fucom
call
add
cmp
aad
add
sbb
fildll
push
call
pop
xchg
rorb
xchg
add
insb
lret
and
les
rcl
fwait
ds
rolb
jb
inc
ds
int
jl
repz
arpl
mov
dec
xor
dec
in
frstor
lods
mov
dec
loop
jle
mov
pop
jmp
into
cltd
inc
lea
cmp
out
mov
test
imul
out
and
xchg
aam
or
into
rorb
mov
dec
cmp
lods
ret
cmp
sbb
in
sbb
mov
leave
inc
outsl
jmp
les
or
mov
cltd
movsl
jle
daa
js
aas
mov
jl
xor
cmp
fisubl
xchg
xchg
push
pop
push
cli
out
pop
fwait
sbb
rorl
adcl
aad
sarb
cmp
jecxz
dec
sub
pop
ds
outsb
mov
iret
push
jo
xchg
mov
mov
jl
xadd
push
test
jns
inc
mov
dec
es
or
and
xor
stc
fistps
mov
filds
outsl
or
mov
inc
cmp
xchg
and
sub
cmp
ret
xchg
xor
loop
xchg
pop
mov
gs
cmp
jle
adc
mov
push
and
push
jb
push
cmp
xor
jbe
lods
xchg
insb
jge
xchg
aam
inc
mov
inc
jo
cli
lret
rolb
sub
xchg
inc
repz
popa
inc
push
xlat
stc
out
dec
lock
and
mov
cwtl
pop
out
mov
inc
call
mov
cmp
mov
repnz
mov
js
or
pop
add
xchg
sub
aas
aaa
icebp
into
adc
cmp
sbb
daa
mov
push
mov
neg
push
es
clc
jmp
inc
xlat
fwait
inc
icebp
cmpsl
add
in
ficoml
jns
add
or
daa
sti
pop
bound
sbb
cmpsb
push
xchg
lods
jns
mov
dec
sti
call
push
or
aas
shr
push
ret
repz
jg
dec
ss
test
and
in
push
bound
ljmp
decb
add
loope
mov
aad
inc
pop
int3
sahf
xor
xor
mov
scas
adcl
jge
jb
les
lret
jle
loopne
ds
scas
mov
jbe
lds
xchg
sbb
cmp
pop
jne
pop
push
outsl
ficoml
mov
frstor
inc
sbbl
jl
lret
jmp
mov
call
ja
pop
and
icebp
push
or
xlat
inc
outsb
xorb
ret
xchg
sbb
pushaw
arpl
shr
and
push
jle
cmpsl
mov
loopne
cld
jns
popf
xor
and
lds
insb
jns
scas
sbb
mov
ljmp
outsb
or
les
movsb
sub
or
xchg
std
std
sbb
xor
mov
pop
mov
stos
nop
mov
sbb
push
or
test
bound
adc
fisttpll
out
movlps
testl
sub
push
fadd
add
sbb
pop
mov
pop
mov
ror
and
subb
adcb
add
rclb
in
and
nop
mov
pop
inc
pop
in
mov
pop
cmp
mov
push
pop
incl
pop
mov
cld
mov
mov
ret
sbb
and
in
jb
xchg
ret
cmpsl
jl
mov
add
pop
cmp
add
and
xchg
gs
adc
jno
es
dec
jno
push
scas
mov
mov
mov
mov
test
adcb
lcall
test
mulb
iret
out
je
push
enter
stc
sub
and
repnz
sbbl
mov
xchg
xchg
and
cmpsb
call
sbb
xchg
imul
sub
cmpsl
pop
pop
push
xchg
in
ja
imul
std
jno
mov
test
sub
push
jle
mov
xchg
add
and
and
outsl
mov
xor
mov
cmp
lds
outsl
or
mov
imul
data16
mov
jmp
pop
adc
ror
ja
inc
movsl
sti
fisttpll
rcll
mov
mov
sahf
frstor
dec
inc
jnp
add
xchg
loopne
fcoml
mov
cs
stos
xchg
insl
jns
and
xchg
imul
ret
lods
xor
stos
lea
xchg
mov
pop
scas
das
mov
mov
pushf
ja
mov
insl
lahf
aad
or
imull
pop
mov
insb
add
stos
fucomp
sub
cli
mov
and
xchg
jns
adc
and
fcoml
xchg
repnz
cld
push
pop
out
xchg
out
movl
jg
cmpsl
pop
mov
sbb
incb
lds
pop
stc
pop
pop
icebp
mov
sbb
aas
mov
mov
repnz
aad
test
sub
dec
iret
adc
xacquire
adc
and
sbb
les
add
jne
and
sti
mov
inc
sub
push
test
add
frstor
add
jle
stos
repnz
cli
popf
push
mov
lock
rcrl
dec
fiaddl
adc
pop
jecxz
ja
fdivrp
rcr
js
pop
sti
mov
adcl
data16
addr16
nop
shll
clc
aad
ss
cmpsb
sti
cli
mov
pop
inc
sub
add
cwtl
stos
or
pop
jns
mov
into
fmull
lock
nop
call
push
mov
inc
scas
jmp
mov
pop
fcom
mov
mov
cld
gs
sar
repnz
inc
lods
mov
mov
jo
les
inc
xor
imul
mov
rcrl
test
jno
imul
sub
or
pop
ljmp
pop
jmp
pop
mov
pusha
outsb
es
mov
lahf
outsl
pusha
ret
fs
in
inc
mov
adc
jecxz
jnp
jb
xor
mov
ja
or
mov
or
pop
jecxz
psubsb
jecxz
mov
lds
test
cmp
notb
mov
popf
mul
in
cmpsl
mov
in
hlt
aaa
out
hlt
loope
and
repz
cmp
out
imul
cmp
lods
test
add
mov
mov
sahf
dec
mov
jbe
adc
and
je
inc
test
aas
mov
pop
in
shrl
jp
sbb
mulb
inc
push
add
std
lcall
jecxz
int3
pop
dec
shlb
jb
in
repz
jno
clc
lods
out
pushf
xorb
fwait
ss
les
orb
fadds
mov
xchg
or
jmp
adc
repz
cmp
mov
xchg
mov
mov
inc
xor
ss
out
jmp
cld
and
je
add
ja
fstpl
test
sti
xchg
cs
stc
pop
inc
inc
mov
ret
cmp
sbb
mov
scas
jle
jmp
mov
sbb
stos
xor
jle
adc
push
xchg
pop
test
test
adc
cmpsb
jb
pop
and
push
xchg
mov
and
stos
xor
pop
xchg
xchg
insb
inc
jo
inc
jae
mov
push
push
mov
jb
mov
stc
stos
je
lods
pushf
cwtl
roll
sti
dec
jl
xor
jle
ret
push
pop
iret
jecxz
or
xchg
jg
mov
jnp
xchg
popa
xchg
jne
pusha
sub
and
push
stc
dec
xorb
pop
fstp
addps
cmpsb
clc
imul
stc
push
leave
sub
fistps
cmp
and
lahf
lds
pop
leave
lret
mov
out
fsubl
and
daa
test
pop
popa
sbb
stc
std
cmp
and
jbe
lcall
or
mov
loop
call
mov
testb
notb
adc
nopl
and
and
xchg
dec
insb
stos
lods
jl
jecxz
mov
out
sub
push
add
fimull
sbb
in
mov
into
sti
jae
lods
mov
test
mov
mov
jb
xchg
inc
or
jnp
gs
loopne
inc
frstor
inc
and
shrl
mov
jecxz
das
mov
pop
sub
aam
sub
mov
arpl
into
sub
mov
scas
xor
test
push
lahf
fimuls
add
mov
and
daa
aas
out
add
sahf
jne
jg
daa
call
insb
mov
outsl
movb
mov
mov
add
pushf
ret
push
pop
jb
dec
insl
pop
push
cld
das
rclb
in
xor
ret
jmp
jecxz
push
xor
scas
mov
fnstsw
les
cmpsl
cmpsl
adc
push
xchg
std
and
fiadds
call
sbb
push
jb
or
sub
xor
cltd
and
cmp
push
mov
ret
pop
sbb
stos
cmpsl
mov
mov
push
or
clc
sub
pop
test
lcall
push
jnp
test
in
mov
push
pusha
xor
pop
and
xor
loop
ficompl
pushf
mov
adc
daa
insl
and
add
js
jne
rorb
sbb
je
inc
into
inc
xchg
xchg
dec
xor
lea
jmp
outsb
dec
sbb
and
and
rcll
mov
add
jnp
std
add
ss
dec
cmp
cmpsl
lahf
nop
inc
push
fstl
test
mov
cmp
jecxz
ljmp
dec
fwait
jnp
xor
push
pop
fwait
inc
or
jb
sbb
insl
iret
or
cmpsb
jbe
fidivrs
mov
test
int
push
aad
sub
push
xchg
jns
stc
add
test
sbb
mov
and
lahf
push
or
xchg
cwtl
inc
fidivl
jge
and
sbb
ficomps
call
jle
xor
xchg
movsl
ljmp
insl
xchg
call
cld
adc
and
loope
cld
sbb
push
inc
push
dec
punpckhbw
mov
icebp
cli
or
movsb
cmp
cwtl
dec
or
hlt
ds
xor
jbe
mov
and
and
int3
ljmp
xchg
adc
push
lret
mov
lock
scas
mov
ds
pop
enter
out
jae
das
out
out
mov
adc
je
repnz
int
mov
in
jbe
fsubrl
fadds
fbld
std
call
hlt
push
xchg
dec
and
hlt
sbb
or
loop
rclb
int3
or
inc
sub
cmc
xor
inc
adcb
aas
adc
scas
or
cmp
fcomip
push
incb
push
inc
out
add
sub
push
std
je
inc
test
movsb
push
sbb
rcl
mov
iret
dec
add
xchg
lods
xchg
mov
pop
pop
test
mov
test
sti
pop
rcrl
outsb
sti
test
repz
or
ja
stos
pushl
pop
dec
dec
movsb
loop
pop
jno
out
lods
xchg
ja
cmpb
push
icebp
mov
add
rcll
in
lock
int
enter
pusha
mov
int3
ret
mov
sub
pop
push
or
testl
adcb
cmp
adc
dec
mov
adcb
xor
cli
leave
loopne
out
test
rolb
sub
cmpb
rorb
movq
sub
adcb
data16
push
test
add
mov
sub
daa
mov
fists
xchg
mov
mov
push
xchg
push
mov
inc
roll
xchg
or
mov
jg
xor
stc
lods
cmp
imul
mov
inc
sarb
cwtl
rolb
sbb
pop
mov
push
mov
cltd
pop
call
bound
hlt
or
jno,pn
add
cld
xor
cmp
xchg
cmp
push
add
insb
jo
mov
lods
mov
pop
out
inc
dec
das
insl
mov
insl
cmc
xor
fmul
adc
fstpl
push
pop
dec
push
hlt
sti
mov
imul
xor
mov
mov
mov
cltd
iret
xchg
shrb
dec
shll
movsb
jno
cmp
jmp
cmp
fdivl
ret
shll
or
dec
xchg
xor
ret
pop
xor
pop
ret
cmp
nop
ss
add
subb
cmp
shrl
xlat
scas
xchg
arpl
mov
cmp
push
mov
adc
out
xchg
add
stos
outsb
add
test
cmpb
cmp
dec
push
cld
adc
dec
pop
enter
popf
push
inc
cwtl
dec
and
fwait
inc
push
inc
es
fs
ljmp
fcomps
loop
stc
testl
push
mov
scas
insl
sbb
push
xchg
repnz
lock
mov
mov
xchg
and
and
movsl
xor
add
imul
dec
and
push
lods
and
sbb
cmp
dec
pop
ds
clc
shll
mov
std
adc
xchg
scas
mov
mov
mov
stos
int
jp
mov
fisttpll
test
push
xor
ljmp
cmp
cmp
ja
push
pop
mov
sbb
not
addr16
hlt
call
lock
inc
push
mov
popf
add
nop
push
dec
out
add
scas
ss
mov
sub
pop
jno
sti
lds
cltd
jno
sarb
cli
pushf
lcall
push
pop
adcb
xor
lock
add
fcmovnbe
and
int
xchg
fwait
pop
pop
lcall
sbb
arpl
adc
ljmp
aaa
repnz
adc
int3
add
dec
fcompl
adc
jge
insb
mov
fdivl
pusha
and
clc
stc
ja
push
shrl
sub
push
in
dec
int3
addl
dec
mov
push
pushf
jb
stc
mov
cmp
sbb
and
in
jmp
adc
add
stos
das
add
cs
push
adc
bound
ds
pop
les
jne
xor
arpl
repnz
xchg
mov
push
jl
sub
insl
testl
insb
inc
shll
inc
outsl
jg
jne
mov
mov
stc
icebp
fwait
xchg
iret
adc
push
sti
test
fs
pop
pop
test
or
inc
push
aaa
xlat
gs
inc
xchg
pop
in
gs
mov
dec
jno
loope
rol
pop
cmp
lret
lock
pop
sbb
inc
push
xchg
fdiv
sti
cmp
ja
iret
dec
sub
add
push
cli
jb
lret
jns
out
dec
pop
push
fsubrl
loop
cmova
ret
insb
lods
xor
pushf
movsl
das
arpl
nop
dec
pop
cmpsl
mov
adc
lock
es
sbb
pop
sti
cs
int
loop
jb
fcomps
pop
mov
push
in
pop
pop
rorb
pop
jmp
mov
outsl
movsl
cmpl
js
mov
dec
movl
test
jg
lods
pusha
sti
xor
cmpsl
scas
push
inc
sbb
jp
add
cmc
cmpsl
sub
ljmp
push
cmpsb
dec
out
xchg
cli
sbb
mov
or
gs
dec
scas
stc
ds
pop
pop
jb
frndint
and
push
cmp
call
incl
sub
pop
hlt
inc
cltd
sub
out
dec
call
xor
dec
daa
daa
xlat
push
sub
push
lcall
inc
xor
sti
gs
in
mov
jp
les
push
push
jmp
and
push
lret
ds
shrb
inc
testb
js
ret
lret
xor
je
mov
rcrl
testl
or
ret
pop
fwait
xor
and
shrl
mov
jle
pop
cld
out
xchg
push
pop
iret
rcl
testl
jno
pop
test
jnp
bound
and
or
das
rolb
and
std
pop
jge
jmp
movsl
cmc
imul
fnstcw
jmp
in
sahf
or
arpl
rcl
pop
addr16
add
sbbl
push
mov
push
and
test
jg
inc
cmpsb
xor
shrb
fmull
add
add
sub
push
sbb
ds
xchg
imul
lock
xor
ljmp
xor
jae
push
add
iret
and
cld
pop
stos
xchg
xchg
movaps
and
and
inc
lahf
pop
xor
mov
mov
cli
mov
sbb
fiadds
xchg
movsl
and
jp
sub
popf
xchg
push
mov
and
pop
add
ds
nop
sbb
cmp
mov
xchg
lcall
imul
push
push
sub
lret
xor
mov
inc
fs
xlat
ret
jle
mov
mulb
in
les
cmp
pop
fldt
mov
xchg
mov
subb
cmp
scas
aaa
pop
and
mov
call
and
lret
pop
lcall
adc
fisttpll
fimull
sbb
fs
mov
xor
cmc
mov
jge
cmpsb
dec
cmp
pop
inc
xor
sub
cmp
jae
mov
mov
out
or
cmp
stos
andl
jp
jb
loope
xchg
out
outsb
add
or
and
fsubp
mov
jp
mov
push
lock
arpl
inc
jb
add
orl
loopne
or
cmp
ljmp
jl
mov
mov
xchg
add
push
fiadds
mov
les
in
and
push
cmp
push
pop
mov
fcoml
sub
in
cmp
cmp
dec
inc
push
fisubs
mov
aas
xor
xlat
push
or
movsb
dec
cmp
movsb
adc
adc
mov
add
scas
push
divl
cmpl
jge
pop
jo
push
jmp
jns
push
insl
or
xchg
lahf
test
mov
sahf
jecxz
xchg
sub
mov
outsl
xchg
mov
pop
out
jp
mov
or
in
jb
cmpl
out
sbb
jmp
repnz
cs
loop
pop
lcall
add
pop
sbb
xchg
mulps
into
mov
jl
xor
add
or
aam
andl
xchg
push
shll
in
lcall
cmp
addr16
jle
mov
xchg
or
xchg
sbb
push
push
loopne
in
adc
stos
decl
mov
lret
int
or
or
subl
aam
enter
mov
rorb
xchg
xlat
mov
fimuls
jnp
xchg
lds
adc
daa
add
icebp
aas
pop
push
popf
pop
xor
mov
adc
int
nop
mov
xor
lds
es
pop
xchg
xor
sahf
rorl
int3
testl
add
add
dec
rcrl
cld
fs
repnz
lret
jle
lret
or
jns
mov
push
ret
insb
inc
mov
pop
aas
test
push
inc
outsb
adc
fldt
inc
adc
jb
xchg
out
add
bound
adcb
jecxz
and
jo
and
sti
dec
dec
rorl
movb
sub
pushf
mov
sbb
movsb
mov
insb
rcll
outsl
sbb
fcomps
fdivl
arpl
xchg
add
nop
loopne
xchg
inc
mov
dec
insl
outsl
xor
jmp
add
andl
pop
xor
push
rolb
mov
or
shl
fsubrs
insb
or
inc
sbb
add
or
pop
sub
rcr
inc
in
xchg
sbb
jmp
xchg
dec
xor
dec
scas
sbb
mov
jp
jmp
filds
in
sbb
xor
xor
xorl
mov
lock
fistpll
xchg
mov
adc
iret
data16
daa
imul
pop
fs
fdivrs
inc
ja
insl
dec
mov
push
jmp
xor
sbb
mov
xor
mov
jbe
sub
jnp
and
aam
sub
sahf
push
in
add
jecxz
dec
test
into
scas
jg
jl
xor
cmp
mov
or
jnp
int
lods
push
dec
xchg
mov
hlt
lea
mov
nop
dec
push
or
in
clc
lahf
rcl
xchg
and
mov
fdivs
pushf
add
sbb
clc
push
or
ss
jae
dec
sub
jns
push
pop
adc
inc
nop
in
jecxz
fcmove
daa
jmp
ss
xor
cli
dec
call
jb
or
fwait
push
imul
jmp
daa
xchg
lahf
or
movsb
xchg
fwait
popf
scas
inc
mov
xchg
imul
jg
jnp
ret
mov
aad
rol
loop
and
dec
fistl
add
push
insl
xchg
fidivrs
jbe
pushf
jae
xor
pop
test
shr
icebp
pushf
and
or
dec
outsl
xchg
mov
sub
jnp
mov
hlt
xor
jmp
or
shr
mov
in
or
mov
push
cmpb
arpl
stos
sub
gs
jnp
in
hlt
jo
jno
mov
add
adc
xor
iret
pop
xchg
divl
sahf
push
lcall
mov
dec
mov
and
stos
lock
test
jnp
pop
icebp
lret
loope
dec
cmp
mov
sahf
add
mov
cli
lret
adcl
mov
fldlg2
shl
jbe
sarb
sbb
inc
dec
icebp
sbb
leave
hlt
aaa
mov
pop
stc
flds
adc
sbb
arpl
cmpsl
test
icebp
cmp
pop
dec
sbb
aas
jae
mov
leave
es
dec
or
orl
in
push
dec
xorl
or
jne
outsb
mov
push
mov
cld
xchg
adcb
adc
test
and
das
add
mov
push
call
push
pushf
insb
jmp
mov
test
test
or
ffree
adc
clc
fnstenv
in
call
aam
subl
stos
pusha
xchg
or
movsl
insl
and
stos
xlat
stc
lods
and
xchg
das
push
in
jge
repnz
rcrb
pop
push
outsb
cmp
mul
lods
and
xchg
pop
sbb
pushf
sbb
jle
lea
les
test
andb
or
push
daa
mov
mov
sub
inc
cmp
sub
jg
mov
cmp
pop
sbb
pusha
xor
inc
mov
or
mov
fwait
sbb
push
xor
jge
mov
enter
push
out
insl
sbb
int3
shrb
xchg
iret
ss
dec
inc
dec
push
addb
mov
xchg
in
xchg
pop
cmc
push
outsl
inc
cmc
dec
inc
hlt
inc
fcoml
or
cld
pop
push
movsb
sarb
add
mov
clc
mov
movsb
sahf
cmp
jl
dec
mov
xchg
call
cmp
scas
jge
jnp
jne
mov
jne
ret
inc
pusha
fisubrl
ljmp
mov
xchg
mov
pop
loop,pn
out
scas
push
fwait
xchg
mov
jno
aaa
shll
leave
inc
into
cld
fwait
sahf
or
adc
sti
inc
sbbl
dec
pop
stos
inc
mov
lock
pop
sub
es
or
sahf
cmp
mov
pop
mov
rorb
xchg
fistpl
rcrb
in
push
adc
packuswb
cmpsb
cmpb
test
xlat
cmp
je
fcomi
fistpll
push
sbb
push
add
inc
pop
loope
cmp
pop
sub
daa
push
cld
xor
jmp
in
xchg
fs
addr16
sub
mov
lcall
into
outsl
xchg
call
mov
pop
subb
loopne
lock
ret
out
mov
cs
cmp
mov
icebp
mov
mov
das
mov
fs
jp
cmp
mov
sahf
and
xchg
adc
shll
jo
ljmp
aas
aas
stos
jp
fs
popf
jle
sub
pusha
cld
stos
sub
fisubs
ljmp
aad
jbe
push
jg
jl
mov
sahf
push
dec
cmp
mov
mov
subl
and
cmp
or
shlb
out
mov
into
xor
popl
pop
cmp
mov
push
jg
push
mov
test
ret
jl
fwait
xor
dec
andl
sbb
aaa
imul
lock
sub
jmp
frstors
sti
leave
jg
sub
jnp
xor
repz
das
mov
int3
push
negb
addr16
leave
lods
xor
push
cmpsl
sbb
mov
xchg
push
and
push
mov
mov
sahf
cmpsl
jo
ss
dec
insl
push
cmp
mov
jno
rorl
clc
cld
scas
scas
add
shlb
repz
lods
pop
loop
mov
inc
out
and
xor
mov
or
jg
clc
add
movsl
dec
xchg
mov
loope
into
das
lods
or
push
xchg
inc
fs
cmp
inc
pop
mov
adc
loopne
ret
jg
int
icebp
testl
xor
lahf
add
sti
sahf
insb
jne
leave
addr16
pop
shlb
jg
dec
add
aas
mov
inc
push
std
and
test
xchg
icebp
cmp
aaa
mov
icebp
mov
in
or
mov
jbe
mov
push
pop
pop
xchg
ljmp
push
jge
mov
int3
cmpsb
leave
lock
push
aad
push
dec
movsl
andl
or
je
xchg
je
roll
mov
lret
cwtl
cmp
mov
cmp
sahf
mov
and
xchg
cmp
outsb
jns
sbb
cmp
jbe
jae
loop
pminub
dec
mov
xchg
in
sbb
lods
bnd
and
lea
sbb
imul
or
insb
jle
int3
outsb
inc
int3
pop
adc
lock
cli
mov
sub
test
mov
xchg
or
es
addr16
push
pop
push
rcr
dec
sbb
sbb
cltd
lds
jae
outsb
mov
fmul
roll
imul
mov
or
inc
push
inc
sbb
mov
mov
jne
mov
lock
test
jg
xor
sub
stos
pop
cmpsl
insb
out
call
gs
add
mov
hlt
popf
push
scas
sub
mov
sub
in
subl
arpl
fsubp
sbbl
scas
push
adc
dec
sbb
test
mov
adc
out
mov
jge
pop
adc
push
call
test
sub
lock
es
lea
mov
hlt
push
jnp
add
lock
cmp
je
jb
mov
popf
and
cmpsb
fisttpl
add
jne
sub
add
and
adc
call
mov
or
sbb
fucomp
scas
scas
push
stos
pop
cltd
xchg
hlt
outsb
push
ja
insl
jne
inc
mov
ljmp
xchg
push
cltd
mov
xor
leave
mov
cwtl
adc
scas
adc
fwait
in
cld
or
mov
pushf
cmpsl
inc
cltd
lea
inc
pushf
sbb
cli
push
insb
cld
aam
or
push
movlps
xor
inc
movsb
push
leave
xor
je
dec
insl
outsl
fstps
dec
sarl
adc
dec
add
scas
jae
cmp
inc
add
mov
push
fcomps
xchg
push
scas
insl
add
jmp
fbld
dec
dec
inc
xchg
mov
sub
roll
jnp
stos
fbld
testl
aad
xchg
jo
mov
jae
pop
repz
jnp
sub
jmp
pop
out
sahf
xchg
sbb
loope
pop
subl
pop
pop
aad
xor
push
movsb
lock
test
nop
sbb
cmpsb
loopne
movsl
pop
inc
ret
lret
push
or
enter
call
and
push
or
cmp
das
cmp
out
aad
lahf
push
dec
or
mov
xchg
adc
out
or
jbe
mov
test
mov
lds
adc
psubb
xchg
xchg
inc
push
mov
popa
lret
out
pop
stc
add
jge
sbb
rcl
mov
ja
fs
sbb
dec
sbb
pop
popf
out
sbb
hlt
leave
lods
inc
mov
out
scas
jle
pop
jbe
and
sbb
mov
int
push
dec
mov
xchg
push
test
xchg
sbb
ljmp
or
into
pop
mov
or
mov
mov
cld
movsb
out
ds
dec
fs
lret
pop
push
xor
or
aaa
dec
stc
push
insl
xor
xchg
jae
adc
push
cmp
push
es
adc
cmc
imul
subl
xchg
cmp
push
dec
adc
aas
dec
outsl
jle
daa
dec
outsb
hlt
push
popf
call
jnp
sbb
pop
imul
inc
mov
out
mov
fdivl
inc
mov
adc
lgs
jo
sti
pop
mov
or
xor
push
insb
test
xchg
jae
inc
jmp
jo
jb
aad
nop
stc
lea
lds
in
dec
pop
mov
outsb
dec
enter
dec
inc
inc
mov
in
lret
std
lea
hlt
and
out
fs
jbe
jbe
push
or
sbb
dec
fs
test
cltd
movsb
and
dec
xchg
and
iret
sub
insb
pop
dec
dec
jbe
dec
je,pn
int3
ffreep
cmpsl
xchg
adc
in
lock
push
mov
jg
and
imul
xor
or
fbstp
inc
pop
rcr
sti
xchg
and
inc
and
shll
pop
ficomps
mov
ret
shr
mov
add
and
ljmp
int
arpl
xchg
push
sbb
into
push
in
xchg
sahf
sbb
and
pop
es
les
ret
mov
jecxz
push
xor
sahf
pop
and
push
cltd
push
cmp
loope
mov
push
inc
xchg
fwait
and
pop
jne
push
mov
push
mov
int
jle
lret
in
xor
push
inc
jbe
adc
add
push
push
repz
dec
or
xor
loopne
ja
xor
xchg
lock
push
subb
dec
xchg
in
hlt
inc
sbb
sahf
fisubrl
push
mov
jbe
std
sbb
jp
xchg
dec
adc
mov
inc
push
jb
pop
push
mov
addr16
cmc
fmuls
ret
jp
out
jne
outsl
clc
mov
inc
adc
adc
jb
and
xor
ss
cld
inc
add
xchg
in
xlat
mov
mov
pushf
movq
call
arpl
mov
add
jae
cli
xchg
pop
cwtl
lret
ljmp
adc
jne
pop
inc
cmp
mov
push
das
aam
dec
sbb
push
jae
push
add
jae
pop
mov
insb
xor
int3
or
and
or
enter
push
in
sbb
mov
or
int
cmpsl
inc
mov
push
push
cmp
pop
mov
fldcw
fmull
testl
adc
mov
xchg
cwtl
push
mov
jl
xchg
clc
inc
inc
and
dec
rorl
push
mov
in
pop
into
pop
inc
xor
arpl
movsb
mov
mov
ficoms
mov
cmp
and
mov
sbb
int
fistpl
aaa
fmuls
aaa
pop
cmpsl
jo
imul
pusha
xlat
test
jb
movsb
test
sub
mov
daa
xor
pop
inc
cmpsl
ljmp
and
push
in
inc
loope
sbbb
loope
xor
lds
nop
jo
bound
xchg
or
mov
mov
xchg
push
fucomp
inc
mov
mov
inc
xor
push
out
xchg
jnp
ss
xchg
mov
in
push
cmpl
lea
lret
shll
test
mov
sub
push
enterw
ja
shll
push
mov
aam
out
push
fstl
in
gs
arpl
imul
pop
xor
aaa
push
cltd
add
stos
je
cwtl
insl
fs
test
aad
daa
insb
fidivl
xchg
test
jbe
fs
dec
or
jmp
in
push
xor
mov
arpl
push
sti
imul
mov
orb
mov
push
and
loop
cmp
add
dec
push
das
dec
inc
repz
lea
add
xchg
test
popa
cmp
ret
int
jne
and
mov
icebp
orb
mov
cmc
sub
leave
cmp
icebp
ss
add
rclb
jb
mov
ljmp
sbb
mov
into
xchg
mov
cwtl
gs
mov
aam
xor
sub
lock
scas
jo
xchg
repz
je
inc
inc
and
fistl
popf
or
mov
fiaddl
push
adc
cld
in
dec
mov
mov
addb
sbb
or
adc
or
sub
push
fiaddl
sbb
mov
cmp
lods
in
jb
nop
xor
jbe
gs
sbb
mov
test
adc
mov
or
mov
lds
push
ret
adc
push
rcl
jae
lea
ljmp
rcll
mov
pushf
sub
jnp
out
cmpsl
sub
fisttpl
xor
push
ljmp
add
mov
xorl
cli
or
push
cmpsb
inc
ret
je
ficoml
test
movsl
and
mov
and
mov
and
adc
inc
shll
cmp
push
rolb
xchg
call
jmp
imul
cmp
inc
lcall
into
mov
jmp
scas
sbb
jle
push
adc
sbb
stos
in
es
cmp
xchg
adc
push
in
aad
adc
sbbl
loop
add
mov
dec
dec
adc
pusha
andb
mov
clc
dec
stos
lret
push
mov
xchg
push
das
xchg
popf
or
cmp
adc
add
mov
dec
jae
iret
std
les
inc
jb
data16
push
enter
mov
adcl
push
shlb
lret
jl
out
adc
lods
test
lods
jle
push
ficompl
xchg
adc
int3
and
mov
or
mov
sub
aad
cmpl
insb
lret
xor
cmp
xchg
xlat
mov
mov
cmp
js
add
xor
movsl
dec
jl
test
and
call
pop
loopne
shlb
stc
xor
push
dec
pop
aas
mov
push
sbb
out
mov
gs
bswap
out
outsl
lret
popf
xor
adc
shlb
mov
xchg
enter
ficoms
cmp
inc
lret
add
call
js
pop
mov
mov
les
fldt
inc
xor
xor
and
mov
or
out
sub
ds
mov
xor
push
dec
rcr
sbb
inc
push
mov
mov
xchg
dec
inc
mov
nop
add
fbld
jp
insl
adc
test
sub
scas
loope
xor
sbb
sub
jo
adc
fwait
imul
mov
add
jle
cmp
ja
jbe
jg
inc
xlat
mov
push
pusha
xchg
fadd
roll
fstpl
out
in
icebp
mov
in
add
rorl
jns
mov
mov
or
out
stos
add
subb
mov
mov
mov
xor
aas
std
push
fwait
ja
xchg
sbb
cmp
hlt
xor
pop
mov
iret
adc
pop
sarb
jle
popa
push
add
jle
daa
jge
arpl
leave
movl
mov
xchg
jg
sub
gs
enter
pop
add
inc
dec
lret
or
xchg
dec
subb
cltd
xor
jb
mov
fsubs
inc
fisubrs
ret
fstpt
jp
stos
bound
orl
mov
mov
les
mov
call
sbb
xor
scas
mov
lret
aaa
dec
adc
push
sub
jo
push
int3
loopne
enter
mov
jp
dec
mov
subb
hlt
cmp
loop
inc
or
incl
push
jo
inc
mov
popf
sbb
mov
ljmp
sub
shl
scas
adc
adc
daa
cmpsl
push
xor
insb
rcrb
dec
repz
mov
mov
push
loop
sti
mov
mov
dec
das
mov
sub
and
sbb
jg
push
push
movsb
jnp
add
cmp
int3
loopne
mov
loop
enter
jno
push
mov
add
dec
test
cmp
cmc
dec
adc
mov
mov
jle
ja
mov
es
int3
xor
xor
push
mov
and
and
icebp
push
mov
add
inc
ja
dec
push
insb
push
sbb
push
loop
or
lock
mov
out
test
cmp
imul
ss
push
addr16
jae
test
fcompl
loopne
add
inc
mov
pop
roll
cmp
xor
add
jle
mov
pop
push
jmp
clc
movsb
jo
lock
push
mov
das
mull
lods
ret
inc
movsb
or
ds
arpl
sub
scas
pop
add
out
sbb
enter
loop
leave
ljmp
add
fs
sbb
imul
clc
jmp
in
mov
je
mov
lcall
cmp
loopne
ret
fstps
mov
repz
jnp
xchg
dec
sub
push
mov
or
dec
loopne
or
popa
mov
mov
sbb
out
lcall
in
or
rcrl
mov
jmp
fdivr
mov
or
xchg
aas
add
js
jl
es
ja
idivb
jg
push
lea
mov
mov
dec
pop
cmpsl
addr16
insb
xchg
arpl
iret
decl
repnz
dec
dec
imul
fnstenv
aad
aad
stos
nop
pop
inc
dec
jmp
cmp
lahf
pop
mov
je
out
fmul
jae
icebp
fucomip
test
gs
fdivs
cmp
xchg
inc
scas
aas
mov
lods
jno
fwait
addr16
xlat
jmp
sub
shll
hlt
jle
jg
sbb
cwtl
xor
inc
inc
aam
cs
out
mov
xchg
lods
std
mov
aaa
cli
daa
jae
js
push
rolb
push
adc
inc
xchg
aaa
pop
shl
xchg
imul
mov
sbbb
jmp
insb
mov
pop
insb
xlat
mov
sahf
nop
scas
mov
xchg
je
out
mov
div
out
and
test
in
in
pop
adcl
jae
stc
lock
lahf
push
pop
sahf
push
adcb
and
lret
mov
rcr
in
or
ret
imul
push
sarb
inc
clc
mov
std
add
push
mov
and
fsub
cmp
xor
jo
adc
pop
rcll
push
mov
mov
cmpsl
push
adc
loope
xor
add
in
dec
mov
adc
enter
pop
pushf
and
dec
add
sbb
movsb
mov
xchg
xorl
repnz
fildll
cmp
push
cmp
xor
ret
popl
sub
mov
and
cli
hlt
dec
scas
aaa
lret
sub
cmpsb
repnz
lods
movsl
pop
popa
jo
shll
xchg
mov
and
mov
rorb
add
pop
ds
rorl
aas
cmpsb
xor
das
sub
out
add
icebp
sub
jns
and
and
loopne
mov
int3
jmp
xor
cmp
mov
xchg
pop
dec
inc
mov
jbe
cmp
cmc
icebp
popa
ljmp
inc
xor
or
sti
mov
movsb
ret
cmpsb
sub
scas
pop
sbb
mov
push
pop
rorb
mov
out
clc
shr
xor
imul
pop
pop
test
es
push
mov
roll
fists
out
sbb
pusha
arpl
mov
xchg
sub
pushf
jne
pushf
sbb
sbb
stc
mov
aas
sbb
push
xchg
movsb
jmp
sahf
lahf
push
jmp
inc
insl
fbstp
sub
insl
or
push
push
adc
push
adc
loopne
cmpsl
das
loop
sub
push
adc
mov
fnstcw
xchg
pusha
cmp
out
ret
sti
mov
mov
add
fcmovu
out
stos
setnp
push
cmp
movsl
clc
mov
popf
dec
gs
shll
lcall
icebp
outsl
test
inc
jbe
jp
add
or
stos
push
loopne
fstps
inc
adc
mov
mov
adc
in
mov
fwait
mov
addb
sub
test
bound
and
std
aam
loope
pusha
push
xchg
jle
mov
inc
in
jg
mov
lcall
pop
daa
pusha
xor
inc
cmp
or
fistps
enter
mov
lea
insb
sbb
pop
out
in
mov
negb
js
shl
out
push
and
rorl
add
inc
iret
adc
push
or
out
sarl
inc
std
fwait
insb
cld
push
nop
add
nop
and
pop
xor
imul
stos
cmpsb
in
ret
inc
sub
das
adc
pop
test
sub
lret
je
fmull
and
push
out
adcb
xchg
fdivs
in
fcmovnu
mov
sbbl
test
sbb
mov
lret
mov
dec
cmp
imul
or
lcall
jg
jae
cs
xchg
mov
mov
scas
adc
fs
or
mov
rclb
adc
pop
aad
ret
mov
aas
shl
hlt
mov
mov
inc
in
fadds
aad
adc
int3
fildl
cmp
mov
jb
mov
sti
lods
or
push
lods
mov
xchg
pop
es
sub
mov
ret
mov
push
sbb
jmp
int3
dec
stc
int3
mul
sub
cmp
sub
xor
mov
sub
movsb
aaa
push
add
shll
mov
shlb
out
subl
outsb
das
out
adc
sbb
imul
inc
mov
dec
pop
inc
in
cmp
popa
sti
jl
stc
mov
fidivs
cmc
or
dec
mov
in
inc
fidivrl
popf
mov
xor
pop
mov
xlat
inc
jnp
pop
mov
dec
psubsb
sbb
fisubrs
jbe
aas
xlat
js
mov
push
test
je
addl
cltd
mov
push
xor
cmpsb
dec
add
in
scas
popf
push
and
jg
addr16
lea
inc
outsl
mov
js
dec
lcall
inc
popa
inc
orl
pop
mov
push
repz
andb
pop
lret
jno
inc
and
lea
push
jo
sub
mov
aas
stc
xchg
mov
fstpt
xor
cmc
cmp
adc
lahf
shrl
pop
push
scas
mov
dec
insb
das
pop
inc
repz
jnp
cltd
leave
fucomip
divl
loope
xchg
xor
mov
std
jne
rorb
out
push
cmpsb
sbb
sbb
pop
mov
popa
cmpl
sub
dec
shl
jmp
add
jns
cmpsb
std
arpl
mov
xchg
xchg
cmc
loop
addr16
inc
jnp
mov
fstps
lcall
push
and
scas
jno
cmp
cmp
mov
cmp
xor
and
test
dec
lret
fnstcw
dec
leave
xchg
mov
addr16
push
xchg
js
mov
sub
pop
ja
xchg
sub
jnp
jne
push
outsl
pop
or
add
rolb
add
dec
add
xchg
dec
icebp
jg
inc
fidivs
xor
or
push
mov
scas
scas
or
xor
icebp
imul
jg
inc
aam
pop
out
out
mov
and
idivb
dec
ds
sbb
jmp
fmuls
scas
mov
loop
clc
pop
loopne
fdivrl
lcall
or
push
xor
and
xchg
cmp
ret
mov
jo
aad
gs
jle
jmp
jmp
in
cli
xchg
add
das
call
mov
mov
jae
dec
fisubrl
jnp
loop
or
ret
mov
out
mov
xor
mov
rolb
stos
pop
mov
stc
pop
call
mov
and
mov
adc
push
xchg
insb
pop
sub
mov
xor
aam
sbb
popa
push
sub
out
lret
in
pushf
shll
xchg
ss
lahf
jo
push
scas
dec
xchg
add
pop
cmp
call
lcall
js
out
jae
stos
cmp
cmp
sub
jns
dec
outsl
cli
movsl
outsl
sti
cs
test
add
xchg
f2xm1
repnz
dec
shll
jns
sahf
sbb
loop
insl
aam
shll
fsubrl
movsl
sub
mov
fnstcw
test
push
shll
js
push
loopne
iret
cmpl
adc
fisubrl
and
fistpl
jp
lds
mov
pushf
add
xchg
add
cs
sub
lret
mov
jge
aad
fistl
cmp
mov
mov
xor
pop
or
sub
popa
sub
mull
jmp
ljmp
fwait
lock
mov
cmp
push
cwtl
cli
lea
movsb
outsl
fwait
loope
stc
sarb
mov
ss
sbb
adc
xchg
xchg
ret
fcoml
rcrl
andl
add
daa
aad
inc
cmp
ds
inc
inc
or
fs
sub
repnz
popa
fwait
shr
mov
ja
mov
lret
jmp
lret
dec
cmp
xor
popf
addr16
ror
jge
jb
test
stos
addr16
adc
insl
sub
add
sbb
xor
jmp
add
test
dec
jno
add
mov
in
sbbb
mov
les
lret
jecxz
lds
sarb
sub
popa
mov
shll
das
imul
lahf
and
jno
fidivs
insb
cmp
fldl
xor
mov
test
popa
jnp
mov
push
jp
mov
gs
test
xlat
rorl
sbb
mov
je
xchg
leave
xorl
out
mov
mov
add
outsb
das
lret
add
inc
lcall
and
jbe
mov
fs
andl
mov
jl
out
xchg
pop
push
in
in
sub
fisubrl
or
outsb
cmp
test
repz
mov
addb
jno
js
daa
inc
fsubl
cs
insb
adc
scas
test
test
push
bnd
leave
cmp
sbb
and
cwtl
fbstp
mov
out
rclb
cmp
xor
push
sbb
fadds
imul
orb
outsl
ret
mov
test
das
adc
sbb
loope
and
outsb
mov
sub
popa
pop
inc
inc
lods
xor
jnp
fadds
iret
jmp
mov
pop
shrl
movsb
js
aad
jge
xor
in
pop
adc
cmpsb
sub
add
mov
icebp
sbb
fnstcw
xchg
cvtdq2ps
pop
xor
jnp
cmpsl
pop
outsb
jg
jge
mov
pop
out
jno
mov
icebp
cmc
xchg
out
fs
hlt
stos
cltd
mov
pop
outsl
sbb
xchg
push
mov
rcll
sub
lret
sti
mov
mov
fdivrl
jmp
cmp
and
xchg
jle
mov
adc
jne
test
test
add
jge
outsb
jg
shrb
add
sbb
data16
andl
movsl
sahf
xor
mov
ja
dec
cs
imul
adc
push
fcoml
into
mov
pop
sub
aaa
std
adc
mov
push
sti
rcrl
lock
sbb
test
pusha
mov
les
int
cmp
arpl
pop
cli
fucomi
sub
fcmovu
jno
xor
fiadds
scas
jmp
rolb
push
lcall
int3
out
out
scas
rcrl
mov
out
ret
xchg
push
xchg
inc
adc
cmp
xchg
fmull
push
fcoms
xorl
pop
js
xor
pop
and
sahf
test
popf
fisubrs
cltd
loop
and
cltd
adc
aam
adc
pop
xor
adc
and
inc
stos
fdivrs
jbe
dec
xor
dec
xor
adc
pusha
cld
arpl
fdivrs
sahf
ret
push
addb
cld
call
add
jo
ljmp
xchg
dec
adc
mov
subb
mov
int
imul
inc
mov
jle
mov
call
nop
je
pop
shr
mov
in
push
add
repz
jle
add
xor
pop
insb
add
mov
add
jle
mov
inc
int3
push
out
xchg
movsb
cwtl
out
fildll
xor
ret
pushf
xlat
out
xor
or
hlt
push
and
les
sbb
stos
xchg
pop
xchg
sub
sub
dec
lret
mul
icebp
inc
xchg
inc
cmp
cmp
push
fbstp
rorl
cli
mov
add
iret
stc
stos
inc
or
cmpb
xor
lret
scas
repnz
push
push
scas
test
cli
cmpsb
jg
fcmovb
int3
pop
sahf
jae
test
clc
dec
aas
push
jo
jle
cmpsl
mov
push
inc
outsl
ss
xor
les
scas
mov
insl
loop
sub
out
shl
sarl
call
jno
dec
repnz
adc
inc
push
in
aaa
pop
mov
mov
mov
cltd
std
sub
add
pmullw
mov
fildl
pop
stos
inc
add
int
or
fildll
out
pushf
sbb
jb
bound
rcrl
mov
mov
dec
jno
test
scas
xchg
jecxz
lock
ror
mov
ja
test
or
pop
xchg
adc
fistpll
inc
call
daa
in
push
push
jae
fldenv
dec
popf
push
push
adc
cltd
or
pop
mov
push
lods
scas
outsl
lret
testl
cmp
pop
lds
shl
inc
add
jg
enter
jmp
test
and
dec
fnstsw
jo
in
and
inc
js
push
lret
xor
int3
mov
aaa
rcrl
dec
outsl
cmp
aam
mov
aaa
and
cmp
xor
push
jg
outsb
lods
add
cmp
lods
cmc
mov
imul
mov
mulb
cmp
test
xchg
adc
xchg
sarb
inc
ds
jns
mov
loope
dec
cmc
fidivrs
aaa
stos
cmc
push
jg
lds
jle
push
adc
cs
or
int
ss
jecxz
pop
xchg
xchg
adcb
rcl
mov
mov
iret
mov
out
sbb
mov
mov
cmp
and
scas
mov
mov
mov
push
jmp
mov
mov
adc
xlat
jae
pop
mov
mov
insl
dec
popa
mov
cwtl
orb
je
fadds
repz
mov
lahf
cltd
data16
mov
es
and
ljmp
cltd
dec
sub
jl
mov
shlb
sub
std
push
mov
cmp
or
sahf
je
inc
xchg
movsl
jl
mov
push
aad
repz
aam
pusha
xor
shrb
je
cwtl
stos
sbb
mov
filds
ds
adc
add
ja
fildll
adc
sbbl
dec
pop
cmp
into
outsb
shll
imul
xor
inc
xchg
pusha
ret
rorl
adc
fwait
test
loope
jle
dec
arpl
push
xor
and
jle
fcmovbe
mov
adc
fiadds
jns
or
mov
enter
frstor
cmp
popa
rcrl
movsb
jmp
repnz
mov
gs
mov
push
push
scas
mov
adc
fidivrl
test
shll
inc
sar
xor
rorb
or
push
inc
cmpsl
pop
or
imul
shrl
pop
fcompl
scas
out
or
je
mov
addl
call
pop
fsubl
call
imul
or
cld
push
jl
push
inc
add
mov
and
lret
xchg
adc
in
jb
push
jno
in
mov
in
adcl
daa
int
mov
jbe
lret
sbb
pop
fimull
stc
cmp
loop
jbe
pop
aaa
in
mov
jle
and
cmpsl
or
insb
fcompl
repz
jbe
or
sbb
jns
xchg
xchg
add
xchg
mov
sarb
imul
mov
add
xchg
mov
push
xchg
scas
jmp
pop
int
or
xchg
sub
pop
mov
je
addr16
outsl
ds
sbbb
push
xor
aas
xor
in
sbb
sub
push
iret
dec
lods
push
or
add
lods
mov
pusha
mov
mov
stos
inc
mov
xlat
repnz
pop
pop
addr16
out
mov
out
out
scas
push
lods
add
mov
mov
ret
mov
add
xor
rclb
sbb
cmp
cmc
int3
in
cmp
jp
mov
push
xchg
sub
mov
fimull
fs
xchg
xor
cli
sub
and
popl
add
jmp
out
outsl
add
xor
sbb
mov
add
add
jns
jg
jns
test
pop
shrl
xchg
std
out
push
pop
jbe
aaa
fistpll
pop
and
sub
inc
or
add
or
cmp
dec
push
popf
pop
push
aas
lea
pop
int
jno
dec
shlb
mov
test
fst
mov
imul
out
xchg
pop
lret
xchg
arpl
mov
sbbl
mov
es
lods
data16
dec
ljmp
scas
rcr
movsl
leave
add
pop
pushf
addr16
stc
mov
adc
add
fwait
mov
sub
std
xor
pushf
mov
and
lcall
xor
lods
xchg
push
add
insb
test
push
xor
in
shll
ficoml
shr
dec
xor
ret
xchg
scas
sub
inc
sub
push
push
fnstcw
testl
adc
or
mov
pop
jmp
shrb
xor
test
mov
fidivs
and
pop
sbb
sub
outsb
pushf
push
or
lahf
xchg
cli
mov
xchg
outsb
test
inc
lcall
mov
mov
scas
adc
fwait
inc
cwtl
push
cmp
push
or
bnd
pop
inc
outsl
int
insl
mov
xchg
sub
ds
push
movsb
shll
sahf
push
pusha
add
aas
jp
sub
xor
dec
sbb
not
loopne
mov
sbb
rcl
stc
movsb
test
xchg
mov
testb
orb
sbb
arpl
push
jle
dec
das
mov
mov
add
scas
adc
lret
xlat
pushw
ret
clc
gs
and
adc
pop
adc
fidivs
jbe
sbb
pop
movsl
sar
mov
jge
fisubl
stos
jle
jle
divl
scas
push
in
repnz
repz
add
xor
cmpsl
in
leave
sub
into
popf
sbbb
mov
dec
aas
xor
lea
jmp
fmull
in
mov
add
imul
mov
sub
dec
jle
fcmovnu
xchg
lcall
out
loopne
inc
ljmp
and
jmp
or
negb
out
add
push
pushl
pop
xchg
out
cmp
rcll
ss
lock
jp
push
out
lds
mov
push
frstor
cwtl
mov
out
inc
cmc
pop
insl
cmp
loopne
lcall
add
xorb
loopne
cmp
fs
fnstsw
cmp
addr16
dec
cmpsb
and
cmp
jp
icebp
popa
shrl
test
inc
adcl
mov
inc
cmpsb
pop
jg
daa
popa
pop
mov
pop
leave
and
add
movsl
dec
dec
outsb
adc
gs
inc
xchg
xor
mov
iret
xor
xor
mov
insl
incb
adc
sbb
mov
gs
mov
add
das
ret
insb
jns
int
adc
cli
lret
fistpll
xchg
jno
pushw
jno
push
push
hlt
push
mov
and
movsb
xchg
stos
imulb
jo
mov
push
xor
or
shrl
jle
in
out
inc
pop
lret
jb
adc
jg
int3
xchg
adc
add
push
fldl
mov
outsb
inc
fiadds
pop
inc
rcl
mov
lock
xchg
jae
add
mov
xchg
mov
ret
or
fisttps
mov
mov
or
mov
inc
add
jns
add
push
pop
pop
mov
mov
sub
dec
mov
mov
mov
mov
mov
xchg
lret
es
shl
sub
lret
push
fwait
inc
imul
and
push
scas
push
lock
sbb
mov
aaa
jbe
out
cmp
lods
jl
inc
xchg
rorb
out
add
test
pop
repnz
std
lods
and
add
inc
pop
andl
adc
mov
sub
dec
std
lcall
gs
orb
bound
sub
inc
fucomi
into
shlb
mov
pop
leave
inc
jb
or
fbld
fisubrl
inc
xchg
push
test
push
out
dec
and
sbb
add
xchg
push
push
outsb
add
pop
sbb
inc
gs
pop
shr
add
or
xor
push
fists
stos
adc
orl
in
mov
dec
outsl
add
sub
cmp
push
sbb
mov
mov
mov
rep
sbb
loopne
and
add
orb
sub
mov
addr16
xorb
jae
dec
loopne
aad
push
ret
dec
popa
lods
mov
xor
inc
in
popw
in
cmp
nop
aam
adc
outsb
inc
mov
dec
insl
pop
or
int3
adc
jno
loope
xor
cwtl
add
cmpsb
faddl
mov
mov
addr16
test
fs
mov
or
movsb
iret
repz
fmull
and
mov
xchg
mov
scas
jnp
hlt
in
es
out
push
inc
in
lret
pop
adc
xchg
pop
data16
jb
mov
pop
dec
addr16
call
or
movsb
jmp
xchg
xor
and
pop
push
jb
aad
shll
in
into
mov
sahf
mov
mov
sub
std
jmp
cltd
mov
cmp
lcall
push
lcall
outsb
jmp
insl
cmpsl
sub
sahf
iret
jle
push
movl
and
ljmp
pop
mov
pop
mov
je
rorb
sbb
jbe
push
fildl
inc
icebp
gs
pop
pop
gs
xchg
mov
mov
mov
or
stos
fsubl
aam
sarl
sub
xchg
shlb
push
mov
lahf
orb
mov
aaa
les
lahf
lods
pop
xchg
arpl
out
jmp
sbb
addl
jnp
mov
dec
int
sbb
imul
mov
repnz
daa
pop
leave
cmpb
pop
push
xor
jge
in
js
jo
pop
xchg
xchg
push
incl
dec
jle
push
sub
pop
pop
sbb
popa
push
jl
add
lds
fwait
xchg
sahf
ja
xchg
pop
mov
pop
xor
push
mov
test
push
inc
pushf
stos
ljmp
sbb
mov
push
int
sub
cmp
sbb
movsl
jns
or
ret
sarb
mov
xchg
mov
rcr
mov
out
push
push
push
or
das
or
mov
mov
out
mov
testb
pop
ljmp
cltd
inc
lret
push
cli
arpl
or
xchg
in
and
cmc
das
repnz
popf
mov
jp
in
popa
cmp
jecxz
cmp
rorb
hlt
or
cmpsb
scas
shll
in
mov
adc
cltd
cld
fsubs
lret
push
adc
scas
jmp
ss
or
dec
dec
lock
daa
lret
inc
cmp
in
fwait
jp
out
and
fmuls
mov
push
xorl
cmp
and
out
ficoms
or
in
aaa
cmp
stos
sub
jb
scas
mov
fcoms
xor
or
addb
xchg
jo
mov
xchg
cmp
push
cmpsl
mov
pushf
cmp
outsl
test
mov
ss
mov
je
jbe
data16
xor
adc
out
jg
stos
xchg
in
xor
mov
daa
pop
mov
push
arpl
xchg
mov
ret
fistpl
nop
daa
das
movsl
lods
xchg
sub
movsl
pop
shrl
aad
adc
in
jl
insl
aam
out
jo
xor
jmp
jge
outsl
ror
add
mov
mov
cmc
and
pop
fimull
push
adc
push
sbb
lods
xor
decb
or
add
imul
adc
pushf
and
push
mov
cwtl
enter
fists
push
test
mov
sub
gs
push
pop
es
mov
mov
add
xchg
gs
test
lds
pop
iret
pop
js
les
in
cwtl
add
dec
mov
mov
push
out
dec
pop
shrl
scas
aas
icebp
lret
xor
mov
cmpsb
dec
xchg
mov
test
adc
into
outsl
jecxz
mov
pusha
mov
pop
into
jnp
pop
out
mov
or
aas
xchg
inc
xchg
mov
stc
shll
lahf
mov
xchg
mov
pop
dec
arpl
jbe
mov
imul
xchg
mov
imul
iret
shrb
aaa
clc
lahf
adc
fisttpl
bound
xor
xor
xor
or
mov
imul
lahf
lock
inc
adc
shlb
pop
cmp
outsb
mov
push
fwait
xor
bound
mov
pop
xor
pop
imul
int
stos
das
insb
fbld
test
sub
fnstsw
pushf
xchg
lock
cmp
mov
sub
cmpsl
movsb
cmp
cwtl
test
mov
lock
mov
jmp
inc
arpl
loop
mov
xor
mov
and
and
es
ja
mov
out
mov
sub
je
push
or
mov
cmc
sub
sbb
in
fidivs
aas
js
adc
out
mov
push
out
xchg
mov
aas
test
sub
adc
idivb
jl
ss
dec
pop
mov
xor
inc
cmp
cmc
pushf
and
js
lcall
sub
aam
jo
out
inc
mov
xchg
sbb
dec
js
lcall
cmpsb
adc
jb
pop
movsl
out
mov
push
clc
or
sbb
outsl
sbbl
pusha
cmp
and
xchg
insb
fdivl
mov
push
xor
inc
insb
mov
xchg
and
lea
fcompl
ljmp
push
sub
sbb
ficompl
jbe
hlt
subl
mov
pop
sub
push
dec
daa
imul
cs
aam
stos
popa
mov
cmp
push
add
out
sbb
mov
push
addr16
pop
xor
jb
sub
xor
dec
cmp
sbb
stos
xchg
decl
aam
push
lea
sbb
cli
push
ja
mov
sub
loopne
adc
dec
mov
mov
in
push
in
fxch
inc
mov
adcb
xchg
leave
enter
lock
add
dec
and
jl
test
les
lds
in
out
call
shl
aad
jo
lahf
add
popa
js
mov
std
xchg
sbbb
sti
fcom
jno
loope
mov
xchg
idivl
stos
repz
jp
pop
stos
jno
ljmp
xchg
sub
push
sub
dec
push
cmpl
cltd
jne
sbb
in
popf
xchg
or
or
sub
fld
js
push
dec
sub
adc
pusha
lldt
adc
mov
push
push
jle
outsb
jno
xor
adc
push
pop
test
adc
in
mov
cmpsl
mov
out
mov
jnp
and
imul
ret
outsl
cmp
pusha
jbe
cmp
inc
jmp
push
ss
xor
push
sub
fs
lret
pop
nop
ret
imul
je
push
xchg
out
sbb
cld
icebp
add
enter
andb
mov
xchg
dec
cmp
lahf
and
inc
andb
inc
mov
adc
lcall
mov
movswl
lret
mov
out
mov
test
daa
inc
pop
or
jns
dec
dec
dec
in
negb
and
xor
pop
loope
paddusw
pop
mov
add
push
sahf
xchg
xor
addr16
cmp
xor
inc
jae
je
insb
clc
jg
pushf
inc
insb
enter
dec
xchg
jns
and
adc
cmp
mov
add
mov
mov
cmp
xor
pop
jo
xchg
push
mov
dec
lea
ffreep
add
xchg
sbbl
cmp
or
jne
adc
fstl
jmp
pop
aas
mov
sar
inc
das
data16
ljmp
mov
jne
push
xchg
loope
sahf
pop
dec
hlt
in
mov
inc
lds
aaa
push
loope
jo
sbb
sahf
or
movsl
cmpsb
lret
clc
jns
dec
stos
push
xchg
pop
mov
xor
mov
pusha
repnz
aam
lods
and
loope
cwtl
fbstp
push
push
mov
inc
or
jns
mov
cmp
push
loope
add
xor
adc
lods
aad
sub
lahf
adc
push
stos
mov
js
scas
jb
mov
pop
les
cmpsl
insl
out
mov
mov
jmp
xchg
das
lret
cli
push
push
roll
rorb
mov
rcrl
adc
mov
cmp
std
inc
add
leave
pop
sub
jl
push
mov
popa
je
adc
test
into
and
stc
je
xor
fisubrl
pop
cld
pop
push
jmp
cmpsl
cli
mov
push
sub
aam
pop
cltd
or
jbe
pop
xchg
xchg
aaa
in
pop
fdivrp
pop
cmp
out
cmpsl
dec
xlat
fcoms
adc
adc
dec
cmc
mov
push
dec
mov
xchg
xor
je
stos
hlt
test
in
mov
imul
dec
pop
jmp
in
push
jnp
cmp
in
mov
rcrl
mov
cwtl
add
outsl
test
jae
add
pop
mov
shll
mov
mov
scas
mov
inc
cmp
sbb
fcoms
lea
adc
in
test
iret
lods
outsl
xchg
scas
testl
inc
loopne
or
repnz
in
repz
xor
xlat
leave
in
bnd
out
dec
sarl
push
pop
push
pusha
fidivs
fnstcw
aaa
xchg
cmp
cli
fstps
cs
xor
inc
js
xchg
mov
lods
loop
ja
scas
arpl
das
lahf
xchg
cli
cmc
test
daa
aam
xor
cwtl
push
orl
jmp
out
push
mov
filds
fisubrs
or
dec
aam
and
dec
mov
and
leave
and
dec
or
mov
inc
push
stc
sbb
ss
jae
ret
jle
imul
mov
mov
or
sahf
add
ror
jp
adc
cs
cmpsl
iret
mov
js
jns
cmp
jns
testb
daa
fdivs
scas
int3
pop
neg
push
push
fwait
mov
push
mov
mov
mov
fsubs
mov
push
sbb
or
dec
jne
sti
inc
fmuls
in
mov
push
sub
call
leave
scas
adc
in
mov
fwait
mov
mov
sbb
inc
bnd
xchg
xlat
dec
mov
insl
cwtl
or
jecxz
add
mov
inc
ljmp
inc
testl
shrb
addr16
stos
aad
leave
stc
mov
inc
fbstp
or
clc
jle
jo
pop
testl
mov
mov
inc
daa
js
or
jnp
hlt
mov
stc
in
ss
push
xor
ljmp
inc
pop
roll
in
rcl
jno
mov
xchg
inc
jg
pop
mov
cmp
ds
jecxz
jle
adc
cmp
adc
repnz
outsl
mov
xor
movsb
mov
adc
adc
pop
stc
or
js
dec
fists
xchg
adc
push
mov
push
add
outsl
loopne
cwtl
cmp
outsl
inc
cmc
dec
cmp
mov
pop
fs
xchg
cmpl
dec
cli
push
test
lret
xchg
dec
inc
inc
sub
stos
aaa
or
add
in
xchg
and
push
loop
popf
mov
mov
xchg
pop
lds
repz
rcl
or
cmp
fucomip
outsl
push
push
popf
cli
push
xchg
xchg
nop
pop
ljmp
inc
cmpsl
gs
sbb
or
fcompp
mov
push
rcr
lret
pop
out
xchg
sub
add
cli
mov
sub
mov
aaa
and
inc
xchg
jle
stos
mov
roll
adcl
adc
pop
shlb
iret
aam
jns
outsb
pop
ja
push
into
cmpsl
call
imul
js
cmp
loope
ss
mov
inc
cmpw
xchg
mov
cmpsb
aad
into
dec
dec
fdivl
scas
mov
adc
jo
push
mov
dec
test
in
lret
stos
decb
xlat
mov
sub
mov
mov
test
gs
mov
popa
js
jg
xchg
xor
ret
mov
dec
mov
call
sbb
aam
out
jg
dec
cwtl
push
test
push
xor
out
stos
ja
lock
ss
inc
test
xchg
jp
rolb
test
lahf
jnp
stos
adc
jg
adc
test
mov
repnz
out
or
mov
dec
lods
inc
push
ds
sub
push
outsl
xchg
mov
test
xchg
pop
dec
out
mov
outsb
cmpsb
xchg
faddl
call
dec
js
movsl
push
into
pop
test
jae
lods
movsl
mov
ss
mov
cmp
neg
out
lods
incb
pop
shll
pop
mov
out
adc
push
frstor
pop
xor
fcomps
sub
shll
and
repnz
push
xchg
mov
ret
jmp
add
repz
push
dec
mov
imul
sub
enter
cmc
adc
adc
mov
cmc
das
or
adc
repz
cmp
in
cmp
mov
mov
addr16
dec
loop
in
ss
pop
mov
xchg
shrl
pop
stos
jae
mov
test
sbb
imul
adc
cmp
sub
jl
shl
dec
test
adcb
pushf
fbld
pushf
add
cmp
rcrb
cltd
je
call
gs
cmpb
rcl
lds
add
mov
pop
mov
push
mov
movb
jae
xchg
sub
push
lods
sub
fcompl
movsb
loopne
jle
test
push
xor
ja
mov
sbb
jns
jae
in
inc
int
enter
movsb
xchg
jb
dec
xor
jg
mov
mov
es
cwtl
lds
je
pop
xchg
mov
jbe
ja
add
push
jns
inc
xor
fmulp
imul
fistps
push
xchg
out
in
andl
mov
push
in
push
add
mov
jae
fwait
jge
popf
in
popf
cmp
jmp
xor
bound
adc
orb
cmp
stos
lock
notl
mov
aad
stos
sub
gs
mov
or
loopne
jo
push
push
cmp
cmp
lock
lret
stc
out
adc
xchg
fstpl
jbe
and
jge
lea
sahf
popa
icebp
mov
mov
mov
jge
and
adc
mov
adc
mov
cmp
pop
jecxz
pop
jge
jne
jne
aad
mov
xor
shr
insl
in
pop
mov
fcmovnu
enter
add
in
scas
fwait
xchg
pop
js
ret
cwtl
insb
fisttpll
lcall
mov
push
cltd
mov
mov
in
outsl
inc
repnz
mov
std
jp
inc
xlat
pusha
xchg
les
add
xchg
dec
jmp
xchg
sbb
mov
jge
ficoml
adc
movsb
aad
dec
mov
inc
cwtl
mov
lea
lret
or
aas
xchg
push
sbb
lcall
stos
lcall
or
fdivrs
xchg
out
adc
das
mov
cmpsl
pusha
imul
lret
xchg
jnp
cmpsl
repz
inc
popa
mov
add
addr16
leave
sub
jae
pop
fwait
movsb
enter
jno
popa
inc
out
fsubs
sti
addr16
mov
and
cltd
seta
enter
sbbl
repz
hlt
jns
add
xchg
out
mov
jbe
sub
sub
push
mov
mov
rcrb
dec
sti
stos
clc
dec
and
sub
jmp
pop
xlat
sub
stc
sub
mov
rcll
xchg
rolb
cmpsb
mov
adc
cmpsb
sub
and
xchg
jge
mov
xchg
push
insb
jne
inc
out
rorl
xlat
jo
mov
popa
cmovns
pop
jecxz
xchg
adc
mov
xor
or
lods
and
and
loop
addr16
inc
cmp
add
movsb
mov
or
mov
and
addr16
adc
mov
mov
and
jle
push
sahf
mov
xor
sub
or
adc
add
das
int3
enter
std
push
sbb
cmp
xor
aam
enter
adc
push
popa
sbb
xchg
call
shrl
xchg
push
movsb
mov
stos
shll
test
mov
sti
mov
out
dec
fs
mov
add
dec
mov
sar
jle
mov
std
push
dec
daa
inc
test
inc
dec
fnsave
xor
mov
stos
imul
jbe
mov
leave
mov
adc
cmpl
ljmp
roll
xor
js
insl
mov
mov
iret
inc
pop
test
add
sub
in
aad
ja
xchg
in
pop
mov
push
push
sub
div
es
xchg
sarb
adc
pop
add
fwait
jmp
xlat
add
push
sbb
bound
mov
jns
mov
add
sub
mov
xor
inc
adc
hlt
sub
das
daa
lcall
and
and
ds
cwtl
add
adc
nop
fcmovnu
jg
and
or
pop
ret
arpl
dec
roll
inc
cmp
xor
roll
aas
bound
in
test
mov
mov
or
sbb
push
je
jb
dec
pop
and
int3
cli
sub
lcall
and
sarb
in
mov
vfmsubpd
sbb
jp
jmp
fisubs
cmp
std
or
sbb
mov
ds
mov
cmpb
jo
rorb
cltd
xchg
fcomp
inc
fildll
aaa
sti
lahf
lcall
cmp
mov
int
icebp
xchg
sub
mov
lret
adc
jmp
inc
cmp
mov
sub
cmpsl
out
mov
movsb
roll
sub
jmp
test
push
cmc
pop
xor
and
jae
jge
ja
mov
fwait
loopne
inc
in
pop
je
add
lods
out
ror
lcall
js
loopne
pop
dec
adc
fisubl
push
lea
sahf
das
push
arpl
int
and
dec
fbstp
mov
ss
pop
and
cmpsl
gs
addr16
cmpsb
jge
mulb
adc
mov
add
lahf
or
xchg
cwtl
icebp
mov
icebp
lds
xchg
mov
hlt
dec
sub
inc
push
lods
lods
dec
les
xchg
mov
stos
and
push
idiv
repnz
imul
push
pushf
dec
push
jbe
es
inc
jnp
js
shr
divps
dec
hlt
lock
lds
cmp
xchg
shrb
mov
mov
xor
adc
sbb
push
lret
icebp
aaa
lods
mov
pop
sub
daa
jecxz
mov
jg
leave
cmp
adc
and
mov
test
je
call
into
xor
mov
cmp
in
mov
imul
xor
add
aam
xlat
in
aaa
mov
jg
and
sub
fdivrl
jb
pop
sarl
sarb
sbb
mov
cld
in
pop
cmp
ja
les
aaa
xchg
data16
sbb
fidivs
push
jp
js
pop
or
stc
push
mov
inc
test
int
jb
push
inc
loope
ljmp
insb
dec
stos
and
cmp
jb
push
cmp
xchg
xchg
or
push
test
inc
add
jg,pt
dec
lcall
aad
sbb
test
cmp
pop
push
push
or
sub
divb
adc
aaa
sub
push
mov
sti
pushf
pop
int
ss
xorl
pop
xor
mov
add
arpl
mov
pop
lock
jnp
inc
jl
addr16
jns
clc
loopne
mov
out
imul
lods
mov
mov
daa
ret
aam
xor
nop
xchg
or
sbb
sarl
push
cmc
jnp
push
sub
jle
inc
and
push
mov
xor
lret
or
je
push
dec
clc
cmp
fisubrl
shrl
xor
pop
ljmp
or
popfw
notb
test
sub
cmc
add
mov
cs
addb
push
jl
int
pop
and
ljmp
data16
add
fst
in
shrb
add
mov
lret
test
addr16
loopne
fs
pop
int
jb
lea
push
jecxz
test
dec
mov
mov
in
addr16
loope
sarb
add
ja
in
or
pop
out
pop
jmp
outsl
out
popa
add
aam
pusha
arpl
xor
sub
mov
insb
out
rcrb
dec
cmp
jbe
out
dec
gs
xchg
subl
add
dec
mov
pop
rclb
aaa
neg
pop
or
out
lahf
jno
dec
in
movsl
ret
nop
filds
lret
ja
fdivs
into
mov
cltd
call
push
and
int3
sti
push
mov
mov
xor
in
push
cmpsl
ret
lret
enter
mov
cmp
cmp
mov
jno
sbb
cld
xor
jg
and
sbb
iret
cmpl
jnp
out
push
xchg
mov
cmc
stc
pop
pop
out
stc
fs
mov
fistpll
enter
jge
dec
cmp
adc
daa
mov
lods
inc
mov
xchg
repnz
adc
js
fs
pop
mov
add
scas
xor
adc
inc
and
pop
lret
sarb
push
cmpb
push
mov
ret
push
sbb
cmp
mov
mov
adc
inc
jbe
add
arpl
mov
scas
fbld
sbb
ljmp
bound
test
sbb
jg
scas
data16
roll
nop
lods
ja
or
dec
imul
or
fwait
lods
xchg
push
mov
idiv
dec
mov
cmp
xchg
idiv
jnp
test
dec
das
jbe
and
cli
leave
sub
cmp
std
cmp
mov
sbb
mov
ret
ret
mov
xchg
or
dec
cli
inc
fidivrs
pop
adc
insl
jbe
test
xchg
push
pop
mov
lcall
loopne
pop
and
dec
mov
out
adc
rcll
pop
or
clc
mov
jbe
xor
out
sbb
jmp
lret
int
mov
xchg
popf
sub
sbb
add
cmp
mov
push
mov
mov
xor
aas
les
jo
ja
repnz
jecxz
flds
loop
mov
je
test
pusha
in
mov
sbb
das
roll
std
ret
lods
inc
lea
fxch
adc
sub
js
div
pushf
fdivr
xor
leave
pusha
cmpb
add
cwtl
pop
mov
shrl
rolb
push
mov
into
jp
aaa
ret
scas
lds
jns
push
mov
add
in
sbb
mov
cs
fcoml
mov
xchg
popa
outsl
ret
and
lret
lods
add
adc
mov
mov
add
jge
inc
push
hlt
and
cmp
in
lds
in
imul
in
outsl
int3
cmp
aad
and
push
add
les
aam
lds
idivb
icebp
fs
idivl
cmp
xchg
repz
fiadds
outsl
sub
dec
or
sbb
cmpsl
popa
sbb
xor
xchg
xor
std
inc
movsb
fwait
es
push
sahf
mov
data16
cmp
add
cmp
inc
out
in
cs
xchg
push
cmp
dec
jo
mov
movsb
lods
pop
dec
pop
in
bound
inc
mov
daa
addl
stc
jns
div
push
les
int
mov
mov
mov
xor
andl
adc
bound
fadd
mov
dec
push
ljmp
cmpsl
mov
in
lcall
lock
mov
dec
jmp
repnz
lds
mov
sar
adc
arpl
decl
mov
sti
jecxz
jo
jnp
xor
movsl
mov
clc
xchg
int
jbe
bound
fldl
lock
and
mov
xchg
jae
add
dec
adc
sahf
out
andl
xor
lret
adc
xchg
xchg
mov
sub
lcall
cltd
mov
std
cmp
cmp
cmp
call
cmpb
insl
iret
add
repz
outsl
sahf
adc
inc
int
inc
push
xchg
cmpsl
and
dec
lods
mov
cmp
pop
xor
sbb
lods
pusha
adc
popa
jecxz
dec
adc
popa
xchg
pop
jnp
leavew
std
and
jmp
dec
mov
xor
push
lcall
lods
repz
lods
outsb
leave
xlat
loopne
scas
fs
rcrl
imul
out
ret
jle
mov
sbb
rcll
mov
push
cwtl
pop
or
ficomps
pop
or
jge
cmp
roll
mov
call
or
xor
sub
mov
fistpll
testl
xor
movsl
dec
jo
lcall
mov
mov
insb
inc
loopne
testb
loop
insb
ffree
in
pushf
mov
sbb
mov
jns
dec
pop
xchg
ja
stos
sti
xchg
sbb
bound
adcb
adc
fcompl
mov
lds
pushf
dec
mov
dec
jae
mov
xor
jecxz
sbbb
adc
mov
xor
push
std
cwtl
mov
repnz
mov
inc
or
adc
dec
jge
sub
icebp
cld
adc
mov
push
jg
xor
jnp
aaa
shr
dec
xor
push
repz
movb
mov
popl
pop
or
movsl
jmp
push
add
lock
push
jno
scas
add
mov
std
pop
mov
fsubs
inc
stos
mov
mov
sahf
pop
jb
dec
inc
jge
addr16
sub
wbinvd
lahf
cmp
xorl
jne
lcall
fdiv
insb
push
enter
sbb
aas
into
out
xor
sbb
adc
lret
outsb
stos
out
inc
lret
mov
into
ds
sbb
jmp
jno
or
mov
pop
xchg
aam
mov
ret
test
jb
jae
sub
rcr
jae
dec
pusha
jb
daa
testb
clc
bound
jle
jle
push
inc
adc
test
sub
addr16
daa
lcall
aad
xlat
adc
in
sbb
sbb
pop
incl
mov
mov
adc
mov
xchg
lahf
pushf
mov
xor
jb
test
ret
iret
mov
add
pop
in
cmp
pop
loope
in
movb
popa
adc
jge
jae
sub
subb
ret
xor
in
adc
stos
mov
ret
jns
int
std
mov
xor
sub
mov
jb
repnz
jl
popl
cmp
leave
dec
pop
scas
fsubrl
adc
std
cmp
jp
ds
sbb
shl
inc
push
out
cld
in
in
leavew
sub
xor
pop
adc
pop
xchg
leave
push
pop
shlb
test
dec
cmp
xchg
or
movsl
jp
movsb
stos
movsl
ds
sbb
add
gs
jle
xchg
mov
or
test
add
inc
les
js
pushl
cwtl
lock
or
pop
gs
xchg
imul
adc
sub
int
ret
adc
inc
data16
sbb
ljmp
pop
push
loop
mov
mov
inc
repz
imul
js
and
bound
cmp
scas
movhps
clc
add
jo
stos
push
cwtl
or
repz
add
sub
inc
adc
imul
pop
jmp
nop
cmp
xor
xlat
mul
sub
mov
imul
cli
rcrb
dec
cmp
test
dec
scas
ror
push
xchg
xlat
cmp
xor
sbb
sub
fstl
inc
pop
xor
xor
or
and
cmp
cmp
fists
mov
xchg
sti
hlt
jle
jmp
rcrb
repnz
int
add
xlat
ret
or
adc
fisubrl
cmp
and
in
and
les
in
add
cmc
loopne
jbe
shr
addr16
sbb
jecxz
pop
shll
insb
fistpll
les
loop
leave
test
ljmp
out
pop
adc
pop
mov
lock
adc
jns
push
jns
divb
xor
cmp
ljmp
repnz
xor
rorl
mov
cmpsb
outsl
dec
sbb
insl
fstpl
fcmovb
and
push
cmpsl
xchg
push
mov
inc
dec
pusha
scas
shl
icebp
add
cmp
mov
lods
pop
frstor
mov
and
xorb
dec
cwtl
mov
xchg
out
ret
and
mov
ja
mov
fidivrs
aad
push
fidivl
mov
mov
dec
lods
mov
and
cmp
add
daa
pop
loopne
das
cmp
sub
ja
push
fdivs
pop
sahf
imul
sti
movsb
xor
push
insb
mov
and
xchg
lods
jb
fwait
mov
sbb
test
inc
cld
cmp
or
cmp
andb
inc
pop
les
jg
dec
lods
and
stc
pop
insl
lret
inc
inc
in
mov
inc
push
add
fisubs
push
xchg
or
and
nop
push
mov
pop
rcll
dec
xchg
mov
ja
sbb
pop
aas
add
aas
sub
or
xor
arpl
pop
fistps
loope
arpl
pop
aaa
mov
ret
cmp
lds
dec
inc
call
cmpsl
pop
xor
fwait
sbb
lods
lea
mull
cmp
test
notl
mov
xor
or
xor
das
mov
mov
sub
cmp
pop
lds
lret
and
js
mov
push
test
sub
pop
xchg
sbb
xchg
add
shl
sar
hlt
pop
jae
xchg
jo
sub
call
fldl
loopne
sbb
mov
int3
addr16
fnsave
inc
test
fcoms
into
push
stc
and
and
cmp
jo
out
loope
fldt
sub
bound
insl
sbb
cmp
test
push
das
dec
jne
imul
xor
js
push
test
sub
stos
js
jne
shll
or
ja
push
pop
shll
sub
sub
ja
add
hlt
mov
mov
pushf
out
rol
push
daa
jl
dec
or
sbb
enter
pop
stc
pop
dec
mov
dec
xchg
mov
icebp
or
mov
cmpsb
scas
jmp
mov
adc
push
mov
jg
ret
mov
aam
enter
adc
xchg
pushf
push
push
inc
sub
imul
sarl
and
and
sub
rcrl
jge
outsl
mov
movsl
mov
in
sbb
aas
in
pop
insb
pop
rcl
lds
mov
and
xor
adcl
imul
mov
lods
adc
or
push
mov
inc
sti
sbb
sbb
lret
xor
mov
pop
xor
ljmp
stos
mov
xchg
jne
adc
cmpsb
lret
data16
mov
in
cmp
into
adc
cs
jg
cwtl
pop
aas
and
repz
vphadduwq
shlb
cli
std
push
or
sub
rorl
testb
addb
and
inc
addr16
xor
cmp
lret
data16
sahf
fsubs
leave
xor
ljmp
js
jne
and
incb
cltd
nop
push
sbb
xchg
mov
adc
push
cld
fwait
add
add
mov
insl
sbb
call
cmp
fadds
xor
stc
mov
outsl
sub
lock
cmp
fdivrl
push
adc
cli
fisttps
dec
loope
push
lods
ficompl
fistl
insb
cmp
cmp
test
jbe
mov
sbb
in
mov
jne
in
fnstcw
les
lods
insl
das
test
mov
inc
mov
cmp
mov
mov
mov
decb
cld
fdivrl
cmc
xchg
sbb
inc
cmp
mov
lods
outsl
and
and
mov
es
jae
or
in
pop
jo
aad
sti
or
dec
mov
pop
sbb
xchg
lahf
sub
in
pop
push
or
cmpsb
decl
mov
adc
push
xchg
ja
lret
mov
sub
push
sbb
repnz
sub
xor
mov
mov
daa
jle
inc
gs
mov
iret
xor
jnp
test
pop
jp
ljmp
incb
push
in
mov
mov
imul
leave
stos
stc
lahf
add
lods
mov
xchg
sub
movsl
mov
arpl
fdivs
cwtl
pop
mov
inc
dec
or
sbb
pop
lgs
jbe
xchg
xchg
sarl
hlt
push
cmp
insl
hlt
int
popa
dec
dec
adc
push
cmp
mov
mov
mov
mov
xchg
cwtl
bound
data16
push
jmp
adc
sahf
jg
xor
cmp
xchg
sar
mov
adc
loopne
jle
xchg
jmp
loopne
divb
cli
icebp
fcmovnb
shlb
out
test
jge
and
push
repz
rep
aaa
push
pushf
push
jbe
popf
ret
adc
mov
js
shlb
movl
xchg
sbb
mov
xchg
pop
jbe
roll
inc
and
ljmp
and
js
jl
xchg
out
cs
ja
sbb
add
jmp
cs
mov
pushf
insl
add
ss
cmp
shlb
inc
mov
ja
mov
imulb
int3
ret
popf
mov
sub
fildll
adc
mov
cmp
lock
aaa
inc
xor
jne
or
or
dec
xchg
mov
dec
xchg
dec
pop
xchg
mov
out
adc
inc
out
fcompl
xchg
mov
ret
mov
pop
pop
pop
iret
pop
jp
cmp
push
sub
sar
or
inc
mov
lret
jle
mov
mov
jp
xor
or
sahf
scas
aad
dec
shl
repnz
fbld
scas
mov
mov
mov
mov
int3
sahf
mov
enter
mov
push
and
shlb
xor
sub
test
sub
fimuls
push
or
dec
loope
pusha
subl
lea
cli
xchg
mov
add
cmp
rcr
inc
jae
xchg
mov
mulb
pusha
int3
lret
xchg
adc
cltd
xchg
popf
fdivrs
add
mov
adc
ret
repz
sar
loopne
imul
stos
mov
mov
push
push
xor
pusha
cld
in
jb
loop
pop
inc
jne
leave
shlb
repz
adcb
sbb
fwait
lea
cmc
rorl
daa
lods
add
inc
rcrb
sub
sub
xchg
mov
out
cmp
fmuls
dec
sbb
push
jle
movsb
mov
sbb
adc
fsubrp
iret
jae
loopne
cld
clc
lret
dec
fldl
hlt
out
add
pop
stos
sbb
out
fidivs
fs
lcall
dec
mov
sub
dec
inc
icebp
xchg
xchg
iret
pop
jno
andl
sbb
test
out
fistl
jp
inc
mov
sub
mov
idivl
inc
cmc
mov
jmp
jne
lods
roll
lcall
and
cld
xchg
call
mov
cmpsl
jo
scas
andl
testl
dec
shrb
dec
sub
xchg
out
sbb
dec
cmp
cmp
int3
dec
or
test
icebp
sbb
xchg
outsb
dec
je
inc
add
ja
pop
cltd
mov
xor
mov
sbb
out
test
dec
xcrypt-ofb
cmpsl
test
das
mov
and
or
outsl
jge,pt
jmp
lods
push
mov
jns
push
mov
dec
les
xor
dec
fbld
mov
sbb
into
je
popa
cld
mov
add
bound
cmp
xchg
fs
out
arpl
rep
sub
sbb
cmp
pop
push
sub
scas
cmp
push
roll
adc
sahf
in
pop
shlb
stos
jecxz
gs
dec
cmp
sbb
fwait
movsl
adc
cwtl
clc
jmp
and
in
mov
in
jb
add
and
bound
mov
xchg
lock
loop
inc
jmp
mov
cmp
js
mov
leave
sub
or
adc
sub
mov
adcl
popa
iret
stc
and
insl
mov
push
add
sbb
inc
pop
out
dec
aaa
shrb
jecxz
mov
xchg
or
xlat
dec
fists
popf
add
mov
mov
daa
leave
and
cmp
add
xor
pushf
mov
mov
xchg
and
outsl
pop
ljmp
adc
test
fildll
ficoml
and
fxch
mov
in
addr16
pop
adc
mov
ret
out
data16
or
mov
bnd
int3
adc
pop
sub
sub
fimull
push
out
mov
mov
sbb
sub
lock
aas
inc
cmp
lods
mov
loope
in
sbb
shll
in
dec
lock
mov
xor
shlb
mov
das
lock
sub
push
mov
mov
fimuls
in
jae
or
mov
sbb
sub
sub
xchg
dec
hlt
cmp
xchg
call
cld
pop
mov
adc
cli
dec
xor
mov
das
xor
fiadds
mov
sub
dec
ja
push
lea
jle
or
push
cwtl
jbe
adc
inc
mov
dec
or
rclb
mov
in
ret
jp
push
ss
pop
repnz
jae
jnp
es
movsl
outsl
add
xchg
popf
lahf
pusha
imul
jge
aas
cmc
pop
push
lods
xchg
cmp
xchg
adc
iret
mov
in
inc
test
movsb
and
or
sub
adc
and
cmp
pop
pop
and
push
cmp
fdivs
push
bound
push
mov
pushf
lcall
pop
dec
adc
adc
sub
outsb
inc
dec
or
gs
pop
jp
cmp
and
outsl
decl
pop
stos
out
or
push
cmp
pop
cmpsb
in
fdivrs
leave
and
cmpsl
xorb
addr16
and
pop
and
or
mov
or
sub
cltd
add
in
dec
xor
ret
nop
mov
data16
je
data16
cmpsb
sub
and
push
fidivrl
jp
push
inc
js
mov
sub
pop
xor
xor
std
xor
mov
ds
inc
xor
imul
and
lret
jne
jle
push
loope
pushf
popf
inc
xchg
leave
add
insb
xor
scas
aad
jmp
bound
loop
je
add
xchg
aaa
movsl
lods
xchg
addr16
push
insb
push
popf
stc
fnsave
dec
lea
cld
ja
push
dec
xchg
xchg
mov
xor
loopne,pt
lds
push
and
stos
aaa
mov
push
ss
or
nop
test
cmpb
movsb
rcrb
dec
aaa
push
or
cld
fldl
pushf
daa
enter
pusha
fists
ss
dec
fwait
jo
lcall
push
cs
and
mov
mov
push
test
je
aam
push
insl
jmp
out
fwait
stc
lcall
sbb
dec
popa
cli
iret
mov
insl
fdivrp
jae
test
mov
fs
icebp
es
int
mov
cmp
cmpsb
loopne
inc
or
and
add
out
stos
sbb
popa
sbb
test
mov
mov
and
or
xor
pop
add
mov
loop
pop
mov
cmp
aaa
sbb
pop
sbb
iret
xor
std
call
clc
mov
outsb
mov
outsb
adc
arpl
cli
sti
rolb
push
jnp
jle
add
sub
pop
lea
dec
cmc
dec
pop
add
cmp
or
or
pop
mov
shl
push
arpl
pop
adc
lea
and
inc
mov
aam
fs
mov
cmp
sub
xchg
and
dec
jge
push
stos
std
pop
xchg
push
dec
test
lods
xchg
notb
adcl
mov
repnz
mov
add
dec
bound
xor
pop
shlb
push
roll
ljmp
and
sbb
dec
pop
pop
aaa
or
pop
push
or
fistl
xor
fmull
cmp
fs
sahf
xchg
adc
aas
aas
dec
mov
cmp
xchg
adcb
add
xchg
cmp
or
dec
ljmp
mov
sub
mov
stos
xor
mov
aaa
mov
sub
fdivl
lds
lods
sti
std
mov
pushf
lret
rcll
add
int3
out
push
sub
test
icebp
inc
lods
add
pop
enter
outsl
fstps
sbb
sub
in
out
pop
or
andl
bound
xchg
cltd
mov
push
out
call
js
pop
cmp
xor
push
rolb
jnp
enter
cli
data16
call
cmp
jecxz
scas
mov
xchg
pop
das
aas
xchg
jne
push
arpl
adc
lea
push
pop
dec
lcall
mov
dec
pushf
jmp
test
test
in
les
mov
insl
ljmp
pop
xlat
sti
inc
jmp
jmp
out
push
add
pop
cmp
and
fdivrs
lahf
ret
fdivrs
addl
push
adc
scas
fistps
and
repnz
push
sub
add
loopne
inc
push
xor
imul
jle
mov
push
mov
xchg
ja
or
dec
hlt
or
orl
xor
out
pop
imul
pop
xlat
arpl
push
or
enter
dec
das
pop
sub
roll
dec
xor
les
jno
mov
out
sti
push
iret
call
insl
insb
sbb
aas
daa
nop
push
repz
sbb
mov
repz
dec
xchg
cs
outsb
pusha
fdivrs
push
subl
lahf
jne
push
sbb
or
xchg
adc
fsubs
push
push
cmp
lods
jl
cmpsb
jg
push
and
sbb
call
xchg
stc
cmpl
dec
push
lock
jle
inc
lock
hlt
jle
ljmp
bound
mov
jae
clc
addps
lret
xchg
push
cmp
push
push
data16
sbb
jl
or
stc
mov
xor
mov
or
lock
iret
cs
clc
inc
ja
jp
pop
pop
and
cmp
or
push
insl
out
jae
jbe
and
push
icebp
ret
push
into
pushl
xchg
mov
inc
cltd
pop
pushf
mov
adc
in
mov
push
sub
gs
ja
int3
cmp
shll
arpl
cli
out
scas
add
mov
push
or
or
cmp
cmc
mov
push
or
sbb
jp
pop
xchg
push
sub
jmp
movsl
dec
fdivrl
popa
mov
push
popa
leavew
xchg
repnz
test
inc
scas
es
or
insb
aas
add
xchg
xchg
fists
iret
cld
jp
jle
jb
lock
push
add
or
add
mov
insl
ds
stos
ret
mov
mov
lds
sbb
lods
adc
loope
hlt
scas
adc
popa
lcall
in
sbb
cmp
xchg
or
mov
sub
jecxz
insb
mov
shrb
ret
scas
or
inc
dec
outsb
xchg
out
mov
adc
sahf
pusha
push
lgs
clc
adc
in
or
mov
test
dec
pop
sbb
adc
jb
xchg
adc
inc
std
mov
in
add
or
xor
ret
shlb
sbb
out
jns
fcomps
pop
bound
mov
enter
lods
xor
int
in
push
pop
dec
jmp
in
xchg
xor
aam
add
out
and
lods
inc
mov
pop
fists
mov
xchg
pop
mov
push
adc
mov
ljmp
arpl
mov
mov
stc
add
push
sbb
sbb
xchg
scas
out
fcomps
xlat
adc
enter
xor
xchg
fisubrs
repnz
sbb
mov
jecxz
hlt
inc
insl
scas
xor
sbb
inc
xchg
cli
inc
sub
pop
push
dec
or
adc
push
popa
mov
jmp
xor
mov
push
mov
adc
dec
popa
mov
mov
pop
pop
jno,pn
dec
cli
pop
xchg
stc
and
scas
sub
out
aam
sbb
sar
push
push
fdivrl
andl
dec
mov
push
xchg
dec
sbb
xchg
pop
pusha
shr
or
fstps
sbb
lret
aas
sar
pcmpeqw
fcmovnb
sub
inc
push
adc
ljmp
dec
lock
testb
arpl
push
dec
adc
fs
test
dec
fldt
shll
jb
mov
lock
es
add
loopne
pop
jo
mov
or
inc
mov
shl
add
push
jbe
fldl
mov
xchg
sub
cmp
xor
jle
push
repz
mov
cli
adc
mov
lahf
mov
shlb
iret
mov
push
sbb
mov
add
jbe
push
jb
or
add
cld
stos
push
jl
pop
jge
sub
jecxz
xchg
jne
lret
or
xor
movsl
insl
rcrb
arpl
loop
ss
int
lret
sbb
xchg
lods
ss
cmp
mov
fbld
push
xor
mov
stc
push
imul
and
into
dec
jno
test
adc
addr16
xor
pop
and
movl
pop
out
shl
push
test
mov
subl
jns
bound
xor
inc
or
mull
inc
test
jae
xor
in
pushf
push
lret
mov
pop
stos
mov
movsb
mov
divl
pusha
xchg
or
push
pop
std
xor
jmp
cmp
icebp
xchg
cmp
adc
sahf
addb
xchg
scas
cmp
clc
jl
pusha
stos
filds
cmp
jnp
mov
push
mov
push
jbe
push
lods
faddp
lret
mov
inc
loopne
adc
sub
in
push
mov
pmaxsw
and
inc
es
sbb
scas
loop
jecxz
inc
sub
loop
repz
jl
and
in
adc
xchg
outsb
mov
out
adc
inc
aaa
pop
and
movsb
xor
repnz
test
inc
push
icebp
push
inc
xor
pop
aad
push
mov
popa
xor
repnz
push
lock
fdiv
push
insb
sahf
pop
jmp
in
lcall
loope
sahf
shl
cltd
inc
add
inc
icebp
lock
push
mov
shl
jmp
inc
call
cmp
inc
push
xchg
xchg
in
push
adc
mov
clc
mov
mov
sbb
hlt
mov
rcrb
xchg
in
cltd
movsb
rclb
fiaddl
leave
ficoml
cmp
bound
mov
orl
dec
loopne
stc
xor
fidivl
stc
xchg
jo
daa
je
insb
out
mov
sbb
mov
call
dec
sbb
mov
pop
mov
mov
adc
aaa
xchg
ret
sub
adc
xor
dec
fsts
push
insl
jno
das
dec
and
sub
rcll
mov
mov
push
cmpsb
or
and
scas
sbb
mov
icebp
xorb
sar
and
and
xor
cmp
mov
mov
scas
movsl
shll
mov
or
mov
aad
sarl
cmp
push
daa
cmp
test
lods
xchg
fdiv
imul
sbb
pop
inc
or
cmp
pop
pop
daa
dec
or
lcall
ret
scas
mov
rcrl
icebp
ss
lods
fcmovne
test
cmpsb
add
fs
movsb
sbb
aaa
cmpb
outsl
out
xchg
fst
in
out
mov
push
jp
in
jb
sub
outsl
xor
pop
fs
sub
test
inc
out
mov
add
imul
lods
retw
add
mov
insb
gs
sbb
popa
cmp
adc
push
inc
test
jb
adc
sbb
or
xor
dec
stos
rcll
push
fdivrs
movsl
out
sbb
lea
aaa
jae
enter
je
mov
dec
das
sub
or
dec
ficoms
cmp
jns
jmp
addr16
hlt
fs
and
mov
adc
mov
push
add
pop
ja
push
mov
out
xor
pop
inc
push
and
add
mov
mov
dec
test
xchg
dec
mov
fidivl
cwtl
inc
popa
mov
shll
scas
lea
mov
or
xorb
dec
or
fsubrs
dec
add
xchg
and
out
pop
pop
add
in
xchg
mov
dec
notl
inc
sti
mov
cltd
les
outsb
mov
test
and
mov
orb
lods
dec
scas
inc
dec
gs
aaa
push
stos
loopne
testb
movsl
imul
test
add
cmp
adc
jbe
xor
adc
aaa
pop
dec
adc
imul
mov
cmp
out
jmp
pop
pop
push
fnsave
gs
aaa
xchg
mov
inc
push
push
mov
lcall
int
jb
jno
rcll
sbb
rorl
insl
stc
mov
es
and
sub
xchg
xchg
shrl
push
enter
cmp
daa
add
adc
enter
cwtl
xchg
movsb
sub
mov
push
xchg
loopne
movsl
icebp
jmp
mov
addr16
push
mov
pop
cmp
pop
movsb
rclb
testb
mov
addr16
or
rclb
test
adc
dec
pop
cld
iret
arpl
movl
psubb
xlat
sbb
jns
into
push
jbe
outsb
pushf
sub
mov
out
jp
stos
pop
sub
and
sbb
outsb
out
xlat
clc
push
pushf
pushf
pop
adc
imul
xor
cmpsl
push
ss
and
lret
jno
cmp
fnstenv
iret
cli
xchg
aad
push
popa
loopne
mov
sbb
rorl
ret
ret
mov
fisttps
ret
push
rorl
xchg
ret
es
pop
and
pop
inc
movsb
xor
and
xchg
out
push
call
lods
mov
adc
popf
add
lea
sbb
add
cmp
mov
xor
mov
jb
and
xor
popf
into
fcompl
fidivs
cmpsb
sbb
orl
stc
jb
stos
iret
shll
or
or
and
xchg
push
add
test
dec
ret
lock
sbb
sub
adc
test
and
or
jnp
mov
jmp
mov
arpl
xchg
das
mov
xchg
arpl
dec
xor
pop
jns,pn
push
hlt
xchg
mov
ja
movsb
daa
pop
inc
addl
push
test
test
and
jno
xchg
jns
jp
scas
cmp
dec
in
nop
sbb
adc
imul
cmp
stc
ret
fisttps
cld
or
mov
es
cltd
lds
cld
or
fidivrs
test
xchg
fsubl
ja
in
movsb
jecxz
mov
clc
sbb
dec
les
gs
jl
adc
xor
inc
mov
scas
jg
es
dec
dec
and
jb
es
repz
mov
fcomps
jp
outsb
cmc
fmul
push
pop
dec
lods
call
scas
add
push
mov
fcomi
test
xor
test
push
xchg
bound
or
adc
decl
adc
ljmp
jbe
popa
jmp
popf
xchg
and
aaa
nop
sbb
jle
int
adc
testl
loopne
dec
aam
int3
shl
sahf
es
push
pop
xchg
iret
xchg
std
mov
pop
das
add
sub
mov
sub
nop
popa
adc
jnp
enter
sub
dec
adc
popa
lods
stos
nop
mov
mov
pop
push
aam
mov
imul
pop
ja
pop
mov
sub
pop
xchg
pushf
mov
mov
cld
fcoms
pop
leave
aad
jg
push
pop
jb
jne
mov
lcall
jne
shlb
inc
pop
into
push
xchg
jo
pop
dec
mov
outsb
imull
insl
mov
aas
cmpsl
mov
aam
hlt
sti
xchg
xor
bound
sbb
fstpl
pop
mov
xlat
mov
rcl
sbb
lcall
lahf
in
dec
mov
or
pop
lds
fsubrl
inc
gs
into
in
loopne
mov
jo
push
and
pushf
data16
in
adcl
fcompl
sbb
rcrb
fdivl
daa
je
pop
repz
aas
out
test
sub
inc
sub
icebp
clc
je
add
adc
and
in
test
dec
daa
arpl
jl
and
mov
adc
dec
ret
xor
xchg
mov
popl
leave
xchg
pop
imul
adc
dec
es
dec
pop
xorb
cmp
imul
gs
xchg
xchg
push
sbb
sub
or
mov
movsb
in
or
jne
xchg
test
daa
shr
push
std
xor
stc
aas
and
jmp
lcall
cmp
mov
cwtl
fwait
xchg
xor
mov
test
pop
and
ja
jl
dec
in
repz
lret
mov
dec
fidivl
dec
ja
jnp
neg
cmpsl
rolb
cmpsl
mov
cltd
ret
or
sahf
inc
lret
mov
xchg
add
mov
mov
inc
push
push
inc
js
mov
xor
dec
jmp
enter
test
lretw
sub
sbb
cwtl
xchg
lret
daa
scas
pop
enter
push
aad
push
jmp
leave
inc
inc
inc
or
popa
imulb
mov
out
mov
xor
test
dec
mov
out
push
push
fs
ja
mov
sti
popf
push
pop
fisubrs
jns
scas
adc
out
pmuludq
xchg
inc
mov
xor
add
push
out
imul
xchg
mov
inc
pop
mov
jle
add
stc
add
xchg
push
imul
stc
sbb
pop
mov
sahf
in
test
inc
leave
or
popf
sbb
sub
adc
cmp
nop
mov
sti
into
in
fsubl
lret
adcl
jl
bnd
adc
fisubl
call
and
fsubrp
push
sbb
test
mov
inc
insb
cli
mov
sub
xor
inc
loope
lcall
push
jl
hlt
iret
jnp
shl
mov
and
cmpl
or
aaa
cmp
and
cmpsb
add
int3
cmpsb
cmpsl
int3
xor
dec
lret
enter
or
push
mov
insl
jmp
adc
cmp
sbb
pop
adc
into
inc
out
push
sub
mov
repnz
mov
cmpsb
icebp
xlat
movsb
sub
adc
int3
jnp
mov
and
pushf
idivb
pop
cmpsb
xchg
xorl
aam
lods
push
xchg
add
inc
push
out
arpl
aam
dec
push
add
pop
mov
mov
push
inc
mov
lds
sub
das
stos
sahf
dec
dec
test
xor
cmp
popa
insb
lret
jnp
int3
sub
faddl
test
repnz
pusha
inc
paddd
mov
das
jl
add
inc
out
pop
ja
ja
shlb
fwait
cmc
pusha
es
stos
inc
dec
ffreep
push
out
sbb
sbb
pop
std
mov
inc
clc
sub
mov
jge
mov
push
es
mov
inc
ljmp
aad
push
xchg
ss
pop
xchg
push
mov
jae
jle
jmp
or
mov
adc
andb
cltd
shrb
cmpsb
dec
pop
or
loopne
and
sub
and
cltd
lcall
push
scas
mov
fstps
pushf
xor
fs
mov
pop
xor
mov
sbbb
rorb
inc
dec
lret
pop
xlat
data16
cmp
mov
mov
pop
bound
and
lret
mov
lods
push
dec
loope
gs
mov
bound
pop
push
inc
out
dec
adc
pop
fcoml
sti
and
dec
ds
gs
cli
dec
mov
cmpsl
cltd
clc
push
sub
adc
add
cmc
push
cmpsb
fstl
mov
pop
pop
inc
fdivrs
ja
lret
cmp
cmp
bound
fsubl
mov
mov
inc
mov
jmp
jmp
add
xor
jbe
std
mov
imul
dec
lods
sbb
dec
enter
push
shrl
inc
mov
pushl
pop
test
je
rolb
test
into
sahf
std
in
pop
clc
daa
jp
popa
dec
test
jnp
cmp
push
push
mov
fs
arpl
dec
sti
jmp
movsl
cld
pop
js
imul
cmp
into
ss
xor
jp
jb
imul
movsb
imul
sbb
inc
pop
or
cs
mov
jnp
pop
adcb
xor
pop
push
imul
pushf
negb
adcb
std
lret
js
loopne
cltd
sar
xor
sbb
incb
pop
push
jne
cwtl
mov
aam
shrb
roll
mov
push
add
lods
add
bound
lret
or
xchg
mov
pop
imul
sbb
mov
cli
jno
inc
insb
fmull
xchg
insl
xchg
cltd
in
jnp
aaa
pop
xor
dec
jbe
loope
push
lea
lret
xchg
jb
das
cs
inc
pop
ss
cli
jp
xor
cs
dec
xlat
add
cld
push
and
stc
mov
add
sbb
mov
cmpxchg
out
mov
pop
jbe,pt
rcrl
add
ljmp
pop
cli
arpl
sub
ja
push
and
mov
xor
call
push
test
orl
test
outsb
scas
stos
xor
mov
gs
mov
fucomp
pop
push
insb
or
sti
push
add
mov
dec
pop
mov
rol
test
sahf
imul
aas
in
and
jo
hlt
sub
add
adc
jle
aas
mov
pop
push
aas
and
out
xchg
inc
xor
popl
cmp
sub
xchg
sbb
push
cmpsl
inc
into
lods
jle
in
mov
inc
xchg
sbb
mov
mov
sbb
imul
jl
xchg
and
mov
ss
popa
les
or
aas
out
push
adc
mov
andb
cmp
sbbb
push
loopne
loop
push
xlat
push
add
and
je
push
jae
fstpl
sub
call
mov
dec
or
push
scas
mov
and
mov
lods
sub
pop
ss
pop
int3
adc
imul
mov
pop
cmpsl
dec
repnz
test
lds
ret
or
popa
out
ror
pop
push
sub
mov
xchg
sub
sub
or
repz
loopne
add
add
push
xchg
mov
inc
popf
cmp
pop
test
test
pop
mov
dec
mov
int
xor
push
xlat
xchg
adc
sbb
adc
inc
test
jnp
pop
ficoms
or
lret
sub
pop
xlat
push
or
test
out
and
into
mov
rclb
dec
mov
shlb
pop
push
pop
pushf
dec
mov
aad
fistpl
dec
stos
imul
stos
push
inc
std
xchg
jae
adc
mov
adc
lahf
xchg
sarl
mov
jno
or
ljmp
xor
mov
adc
ljmp
jecxz
outsl
rorb
dec
shr
push
adc
adc
lea
sub
dec
fs
outsl
and
cwtl
inc
jno
add
and
ss
jne
xor
test
call
test
andb
adc
cmp
rdpmc
jnp
mov
pop
mov
mov
fisubl
out
sub
sub
lods
insl
pop
pop
call
jle
out
outsl
mov
test
xchg
adc
xor
aad
call
inc
aam
mov
std
jno
sar
mov
adc
cmc
cs
jge
dec
sbb
aam
sub
je
add
outsb
mov
aam
repnz
mov
push
xchg
xchg
inc
ja
push
pop
mov
push
addb
push
pop
or
shl
adcl
sbb
aaa
inc
mov
iret
inc
lret
rorl
cmpsl
mov
imul
xchg
cmp
scas
aad
sub
pop
jae
sub
sbb
mov
shr
jae
in
rolb
daa
ret
dec
lret
or
inc
pop
adc
sub
mov
pop
mov
jle
jbe
sbb
iret
out
ja
subl
lret
stc
mov
mov
adc
pop
lret
pop
sbb
pop
dec
jl
inc
xchg
dec
fildll
and
lea
xor
dec
jmp
and
jbe
int3
fldcw
ljmp
push
xlat
add
fsubs
cmp
fwait
xchg
pop
int
test
add
loope
clc
mov
push
mov
xchg
adc
adc
dec
jg
jl
sbb
lsl
pop
jns
lock
ret
fisubl
xchg
sti
push
unpcklps
lahf
inc
jl
sbb
cld
push
pop
pop
push
adc
xor
int3
mov
clc
cmc
jl
mov
sub
mov
ds
mov
xchg
cmp
lds
pop
ja
mov
sbb
add
test
ds
movb
daa
cwtl
xor
jb
sbb
aaa
mov
mov
and
lods
xchg
sbb
push
fdivrl
aad
je
lock
push
jbe
mov
add
leave
xchg
out
mov
inc
mov
push
outsb
push
cmp
aaa
sbb
sbb
xchg
sub
mov
out
stos
xorl
neg
or
sbb
adc
sub
mov
or
cli
xlat
and
andb
xor
aaa
clc
cltd
mov
fdivrs
push
daa
cmp
add
mov
out
jp
push
jno
cmpsl
loope
add
repnz
xor
adc
dec
pop
push
fs
mov
pop
addl
mov
push
xor
mov
dec
rcll
xchg
jo
jbe
pop
sbb
stos
jo
andb
and
pop
pop
mov
movsl
pop
sahf
in
jmp
jl
jne
sub
mov
out
xchg
fbstp
jne
jmp
jae
mov
mulb
in
dec
lret
mov
mov
mov
addb
jp
test
fsubrp
pop
test
mov
fbld
mov
jmp
dec
jl
test
xchg
adc
popf
and
inc
out
mov
xlat
fldt
mov
out
push
fs
or
popf
sbb
mov
out
inc
je
mov
xchg
aad
jecxz
shrb
pop
adc
mov
pop
cs
and
aad
or
mov
and
lods
ljmp
xchg
and
lahf
out
orb
xor
pusha
out
cmp
lds
in
or
push
dec
rcrl
lds
das
add
xchg
or
sbb
arpl
mov
cmp
cld
ja
leave
or
mov
rcrl
leave
cmpsl
jns
cmp
adc
push
fistps
je
push
sbb
cmpsl
test
mov
lret
fs
push
out
rorb
sbb
test
mov
dec
mov
icebp
jbe
shrb
or
sbb
into
sahf
jno
ds
pop
aaa
xchg
add
add
sbb
sbb
jbe
mov
mov
mov
icebp
jne
hlt
xor
adc
shl
loopne
cwtl
xchg
jl
aam
fistpll
inc
cs
sti
push
or
mov
inc
out
cli
push
je
fwait
fwait
push
push
jo
jmp
push
test
jge
jecxz
loopne
fcomps
dec
pushf
fisttpl
mov
mov
add
push
and
inc
pushf
and
cmc
leave
add
inc
test
dec
push
aad
sub
ret
pushf
lahf
scas
xor
call
sub
es
pushf
adc
adc
hlt
cmpsl
pop
mov
imul
nop
push
daa
mov
mov
cmc
test
clc
lods
xchg
movsb
not
outsb
lods
push
mov
fsin
loope
sub
mov
lret
pop
or
lcall
dec
into
xor
outsb
popl
jbe
test
ja
fwait
sub
xchg
les
das
jg
xor
jne
push
movsb
inc
inc
pop
movb
inc
pop
test
cmc
inc
test
pop
insb
sub
push
and
jl
push
int
addr16
jno
add
clc
sub
sub
sbb
adc
ret
fsubs
cltd
fldenv
xchg
mov
dec
sbb
mov
test
push
xorl
int
fistps
xor
xchg
and
loop
dec
sbb
cmp
inc
adc
nop
add
imul
add
enter
or
sti
or
loop
push
cwtl
xor
sbb
stos
imul
ss
mov
push
sub
bound
mov
dec
ret
lret
xor
jns
in
nop
sbb
iret
insb
ja
cmpsb
and
std
les
out
loope
adc
xor
fwait
sub
mov
negb
mov
dec
repnz
lahf
ja
adc
adc
sar
xchg
adc
dec
fstp
xor
cmp
sub
mov
test
mov
cmp
or
jmp
fadds
cltd
test
jb
push
sti
ret
dec
dec
loopne
enter
inc
jno
outsb
mov
xchg
out
pop
push
stos
fsubl
mov
mov
ljmp
fcoml
xor
clc
pushf
test
mov
enter
or
ljmp
adc
out
mov
xor
adc
mov
jnp
jno
nopl
xchg
je
mov
xor
out
popf
sub
lret
add
sub
cmp
xor
xor
or
lods
sbb
fwait
js
fadd
mov
xchg
in
ret
cmp
mov
mov
imul
pop
cmp
test
sbb
mov
inc
test
pop
xor
cmp
outsl
inc
andl
xor
dec
ljmp
das
adc
cltd
dec
or
xchg
repnz
mov
sbbb
stc
or
jae
repz
adc
lock
pop
xor
add
adc
lahf
mov
push
and
pushf
add
test
push
cmp
push
insl
cltd
fistpl
lahf
sbb
pop
aas
add
ret
outsl
push
xor
mov
scas
jmp
and
cmpsl
sbb
jbe
pop
ret
inc
loope
addr16
jge
retw
mov
test
push
es
push
lahf
or
xchg
pop
inc
insl
fs
mov
cmc
fucomip
ja
sbb
mov
frstor
mov
add
lods
mov
das
mov
push
cltd
xlat
pop
mov
or
popl
jp
fmuls
xor
xor
leave
push
clc
shl
movsl
push
out
rcrl
xchg
push
rorb
jb
push
jmp
mov
inc
arpl
lods
pop
sbb
mov
cli
cmp
mov
or
andb
enter
xchg
int3
push
jecxz
bound
in
lds
out
sbb
pop
popf
mov
in
shrb
lret
mov
jp
fisubs
scas
and
jbe
and
jp
jl
rclb
push
out
pop
pop
pop
rcll
push
xchg
jge
pop
adc
pop
repz
push
pop
es
mov
jp
or
subl
pop
vdivps
sub
nop
mov
mov
subb
jns
push
adc
xchg
vaddsubpd
and
imul
jb
xchg
mov
cmp
and
iret
test
stc
fdivl
js
add
insl
xchg
scas
pop
mov
jl
mov
sbb
shrb
add
xchg
push
xorl
lahf
imul
or
jns
sti
pop
dec
cmc
nop
hlt
xchg
cmp
pop
iret
mov
lock
arpl
out
sub
cmpsl
dec
add
out
stos
jge
sbb
and
mov
popa
stc
inc
clc
cmpsl
cmpsl
sbb
sbb
add
push
xchg
adc
jmp
iret
adc
out
mov
push
adc
mov
sbb
sub
in
dec
ja
jg
pop
sub
sbb
add
sbb
jae
sub
leave
xchg
cs
cmp
jb
and
mul
in
cs
jle
sbb
and
mov
pop
outsb
imul
mov
addl
or
and
and
dec
jge
sahf
rorl
mov
dec
negb
into
test
frstor
jle
sub
insl
inc
dec
dec
mov
and
or
mov
mov
jb
movsb
push
mov
push
and
mov
punpckhdq
cld
fcmovu
shll
clc
loopnew
pop
push
popf
daa
sete
mov
jo
dec
pop
mov
fsubp
sub
aaa
push
lods
adc
test
fsub
sbbb
bound
mov
imul
aad
sbb
xchg
mov
and
aad
mov
repz
mov
dec
in
jg
dec
addl
sahf
mov
cmp
scas
adc
inc
cmp
jge
cltd
mov
and
out
ret
ret
and
push
xlat
test
mov
mov
daa
adc
scas
pop
lret
push
dec
es
sub
stos
cmp
sbb
dec
insl
insl
xchg
pop
in
pop
jecxz
decb
lret
sbb
repz
mov
gs
add
cmp
mov
inc
dec
or
push
mov
out
sub
gs
leave
insl
ret
push
shrb
sti
repnz
jae
or
xchg
cmp
je
std
or
sbb
flds
adc
imul
loopne
icebp
rcll
pop
mov
add
arpl
xchg
lret
xor
mov
lret
outsb
into
jmp
test
mov
clc
pop
ret
push
jns
rcrb
adc
mov
push
pop
xchg
inc
enter
and
dec
out
and
pop
xor
stc
jb
and
sub
inc
int
dec
insl
enter
popf
cli
sub
dec
in
push
rolb
mov
in
push
mov
ficoms
ljmp
ss
jne
rorl
push
fistps
test
xchg
loop
bound
leave
test
cmp
xor
je
fdivrl
xchg
or
xor
add
lahf
int
insb
cmc
adcl
mov
push
insl
popf
add
or
mov
out
jnp
xor
push
adc
movsb
pop
adc
mov
inc
aam
stc
ficompl
ret
push
cmp
insl
sub
les
add
or
jne
lahf
sbb
sbb
xchg
lock
mov
cmp
stc
sub
inc
push
mov
aaa
rolb
mov
dec
lret
lods
mov
cltd
pop
mov
dec
push
mov
loop
enter
push
cmp
xchg
das
orl
enter
imul
mov
out
cwtl
cmp
test
adc
and
nop
shll
add
mov
xchg
cmp
xlat
int3
aad
andl
mov
clc
rolb
daa
mov
push
int
push
shrb
lret
dec
mov
lret
ret
xor
hlt
lahf
xchg
orl
jno
adc
mov
test
xor
cmc
cmp
xchg
xor
idivl
call
fsts
pop
in
js
movsb
andb
stc
daa
outsl
loop
movsb
stc
dec
inc
sbb
dec
movsb
fdivl
in
xchg
push
jp
test
cs
xchg
fcompl
mov
fsts
in
cmpl
fidivrs
jnp
in
in
cli
popf
xor
js
jnp
mov
xchg
bound
rclb
sbb
call
movsb
std
fisubrl
gs
clc
push
lea
cmp
inc
lods
adc
sub
jge
xor
es
push
call
sbb
jbe
push
cmp
mov
xchg
std
fstps
lret
pop
inc
lds
jg
adc
add
dec
imul
pusha
insl
push
ret
lret
push
mov
inc
push
test
dec
fldl
div
lods
mov
popf
jecxz
repz
les
add
hlt
inc
mov
xorb
int
inc
aas
ds
push
rcr
pop
lahf
lcall
xor
lods
daa
sbb
xchg
dec
mov
repz
push
dec
inc
stos
jp
jae
sar
push
pushf
enter
jbe
mov
pop
jns
popf
sbb
fidivs
not
std
fcoms
insl
lea
lcall
xor
je
mov
adc
mov
and
imul
mov
movsl
enter
stc
ret
pop
xchg
sub
fucomp
fldt
sub
sti
mov
dec
push
loope
and
pop
jge
xchg
pop
fadd
xchg
add
fmuls
adc
movsb
fisttpl
movsb
push
xchg
pop
loope
rclb
popa
dec
lcall
mov
adc
repz
mov
out
inc
jmp
rclb
stos
or
dec
xchg
xchg
push
lods
pop
loop
aas
mov
or
rolb
xlat
stos
ror
pop
xor
and
xor
sbb
insl
scas
jmp
jbe
push
iret
mov
aad
cs
out
ljmp
jle
push
sbb
aas
cltd
ret
jmp
rcll
pop
fwait
shll
xor
inc
cmp
jle
or
ficompl
push
cmpsb
test
lret
jecxz
lods
ror
cs
adcb
adc
inc
mov
nop
xchg
shrb
jnp
shl
aas
aas
in
cli
popa
mov
fists
fldcw
sbb
sbb
xchg
or
loopne
subb
movsl
mov
or
cmp
cld
xor
stc
psubsb
and
repz
hlt
insl
sbb
rorb
or
test
mov
pop
mov
inc
outsb
repnz
pop
mov
test
adc
mov
or
aaa
cmp
fwait
inc
jns
mulb
movsb
xor
fisubrs
test
mov
pop
aas
js
lret
addr16
xchg
mov
mov
aam
aad
into
repnz
call
push
push
cmpsl
jge
mov
adc
xorb
pop
adc
ret
je
pop
pop
arpl
cltd
mov
aad
test
sbbb
or
aas
fldl
adc
ja
aas
mov
mov
or
imul
dec
sbb
ret
jp
dec
shr
xor
xchg
daa
out
loopne
outsl
push
fidivs
dec
movsb
push
xor
and
ljmp
fiadds
mov
mov
scas
pop
into
cld
mov
call
fadds
test
stc
and
imul
mov
cmp
xlat
sbb
scas
lret
shrl
fwait
sbb
cmp
mov
adc
das
rol
fisubs
push
test
adc
clc
rclb
xchg
cltd
shrl
cmpl
rcl
jp
xchg
cs
mov
and
ljmp
pushf
xchg
push
movsb
push
inc
shrb
mov
mov
pushf
mov
cmp
inc
stc
xchg
adc
pop
dec
jle
jmp
sbb
jne
xor
ljmp
popf
int3
inc
adcb
data16
pop
pop
loope
xor
leave
ja
lahf
xchg
push
mov
cld
mov
push
hlt
xor
mov
pop
lahf
ret
mov
addr16
or
testl
leave
pusha
ficoml
sub
ss
sub
add
or
adc
xchg
ss
push
les
je
jne
push
cmc
push
insl
jae
and
xor
and
mov
daa
xor
xchg
mov
and
loope
jge
xchg
insl
mov
lahf
dec
shrl
pop
mov
push
cmp
dec
sbb
jp
sub
add
imul
stos
add
adc
loopne
rorl
jo
inc
mov
dec
and
lods
push
mov
dec
push
push
xchg
adc
mov
mov
out
aam
lods
inc
scas
div
jne
inc
push
repz
or
xorl
icebp
repz
jecxz
cmpsl
and
mov
jae
out
in
in
test
cmp
loopne
mov
jo
in
mov
popf
lock
mov
sahf
pop
pop
cmp
mov
ror
out
mov
mov
cmp
into
add
out
inc
movsl
push
xor
cld
ja
cli
in
cltd
fcompl
mov
aad
insl
cmp
movl
xchg
xor
cmp
add
and
dec
inc
sarb
cli
mov
mov
lods
mov
or
sub
jge
mov
mov
cmp
mov
scas
in
fucomi
cmpsb
add
pop
fcomps
jl
pusha
sahf
std
xor
xchg
imul
xchg
jp
or
lds
dec
push
sub
ja
dec
add
mulb
or
and
adc
xchg
mov
pop
std
push
popf
lcall
shrl
lods
mov
pop
sbb
cmp
xor
out
push
insb
pushf
repnz
jmp
dec
cmpb
xor
jle
fsubp
aaa
scas
sbb
je
movsb
mov
push
jo
mov
inc
adc
dec
clc
jl
cmc
mov
imull
mov
and
bswap
jle
push
scas
and
sbb
or
push
fwait
mov
pop
sub
call
outsl
sub
or
mov
lret
xchg
rclb
jecxz
xchg
out
loope
leave
gs
cmp
inc
cmp
sahf
jg
lock
clc
inc
xchg
mov
aaa
mov
cmp
pop
ds
pop
lea
jl
mov
sbb
mov
inc
or
jno
fimull
pop
sub
push
push
add
push
es
cmp
mov
push
sub
mov
pop
popf
addr16
popf
adc
pop
sti
aam
jae
add
icebp
out
sbb
push
dec
in
push
mov
pop
cmp
insb
enter
jl
out
clc
pop
inc
movsl
cmp
add
fists
insl
jae
aas
into
dec
pop
jp
cmpsl
push
add
and
xchg
push
stc
push
xor
sahf
repnz
in
cmpsb
pop
aas
sarb
adc
jge
dec
jbe
jne
and
xor
push
fs
mov
pop
pop
enter
fists
ljmp
mov
sbb
cmpsl
stos
cmpsl
in
enter
mov
pop
mov
mov
loope
cmp
sub
mov
mov
std
dec
psubusb
int
dec
sbb
in
sub
xor
sbb
cwtl
jle
push
push
aam
aad
jae
dec
hlt
lods
xorb
mov
hlt
pop
lret
and
and
inc
imul
xor
mov
xchg
xchg
outsb
pop
es
lock
mov
fs
adc
dec
movsl
cli
loope
adc
out
push
insb
loope
ss
or
pop
push
add
lahf
lahf
imull
arpl
fs
js
cmp
test
push
rorb
insb
in
cmpsb
rclb
cmp
sub
mov
cmp
call
out
mov
mov
outsl
and
fdivs
jns
mov
sbb
mov
mov
es
cli
test
std
loope
jno
gs
xor
aas
xor
inc
cmpsl
adc
pop
xchg
call
push
adc
pusha
jmp
popl
pop
cltd
ret
mov
push
adc
inc
outsl
jmp
push
jbe
add
pusha
xor
stos
mov
cmpsb
faddp
cmp
scas
mov
sub
inc
fdivrs
out
negl
sbb
dec
js
sarl
jge
aad
sub
loop
scas
pop
in
cld
lcall
test
jbe
adc
dec
xor
adc
mov
xchg
xor
pusha
frstor
idivb
xor
inc
cmc
fisttpll
fmul
or
das
rcl
insb
jmp
mov
jg
lea
xchg
fidivrs
scas
xchg
push
notb
sbb
jmp
xor
ret
adc
mov
push
or
sub
ret
dec
xchg
stos
fistpl
xchg
xchg
push
imul
cli
pop
or
bound
mov
add
mov
mov
fimuls
inc
ret
pop
jg
cwtl
js
mov
shr
pop
popa
push
mov
inc
arpl
or
adcb
mov
mov
aas
push
in
ret
push
lods
ss
add
cwtl
notl
idiv
rcr
xor
push
adc
mov
int3
push
sub
pop
inc
sub
mov
sub
dec
shlb
mov
pop
scas
clc
cmp
cli
cld
lods
cwtl
int3
cld
outsl
sbb
clc
sub
divb
xchg
jecxz
push
or
bound
add
out
out
repz
inc
cmpsl
arpl
cmpsb
sub
mov
push
pop
mov
xchg
lret
push
leave
add
jae
lret
ficoml
sar
pop
imul
pop
xor
xchg
xor
cs
cmp
and
aad
xor
mull
scas
sbb
out
dec
and
out
cmp
popa
aam
lret
lcall
shrb
and
pop
sub
mov
push
rcl
dec
xchg
dec
int3
push
mov
push
inc
sahf
jnp
into
pushf
sbb
negl
xchg
rcr
push
iret
add
sarb
jecxz
lret
cltd
mov
add
cmp
pop
subl
pop
xchg
fldenv
popf
das
into
rcrb
lds
cld
xor
adc
movsb
rclb
and
lcall
loope
sbb
jg
add
xor
xor
xchg
lret
imul
adc
stos
pop
jmp
mov
scas
clc
push
add
movsb
pop
cmpsl
ljmp
test
cmp
out
push
adcb
stos
cmp
and
iret
int
bound
adc
push
jns
lods
loop
mov
add
das
fcmovne
test
add
sub
add
fildl
fadds
sbb
push
je
inc
hlt
mov
stos
push
xor
rorb
jnp
pusha
and
out
mov
popa
das
ficompl
js
push
mov
test
aam
ret
aas
adc
arpl
into
cmp
mov
inc
push
addr16
lea
test
and
rep
mov
inc
mov
cltd
int
enter
test
add
mov
mov
mov
lret
xor
mov
jecxz
or
push
cmp
xchg
aam
xchg
call
xchg
cli
js
push
xor
inc
or
cmp
test
stc
adc
clc
jmp
insl
mov
mov
inc
pusha
mov
ljmp
mov
mov
popf
pusha
subl
out
mov
push
mov
fstps
xlat
ljmp
jns
jo
add
fs
movsl
movsb
pop
stos
sti
and
jg
adcb
popa
insl
mov
fcoms
mov
jns
icebp
cmp
xchg
call
mov
dec
or
adc
fdivp
or
gs
fimuls
xor
enter
adc
aad
scas
jb
add
lods
or
cmp
ja
dec
or
add
inc
jae
xchg
in
pop
loope
js
add
mov
mov
pop
mov
leave
or
scas
dec
out
mov
lcall
std
pop
or
xchg
mov
push
fs
and
lahf
xchg
mov
mov
fbld
lea
rcrb
mov
out
bound
popf
xchg
jg
test
or
in
movsl
mov
mov
mov
sbb
imul
mov
mov
adc
mov
dec
add
push
xor
jns
repz
adc
rclb
inc
pop
sub
ret
jle
ficompl
push
and
fisttpl
pop
mov
mov
sbb
movsl
jbe
xchg
push
xor
mov
repnz
repz
loope
sbb
sbb
mov
push
jp,pt
imull
pop
test
mov
jle
add
fistpll
lret
cmp
test
lret
in
jns
inc
and
xor
jl
jns
or
test
mov
inc
insb
push
cli
and
push
push
aad
cmp
push
cmp
fbld
int
adc
mov
dec
and
enter
mov
shll
dec
insl
dec
daa
jne
jg
xor
adc
loop
or
rolb
push
lret
popa
dec
lcall
add
pop
movsl
inc
sub
inc
pop
and
fdiv
mov
jnp
cwtl
xor
arpl
inc
lds
in
sbb
lcall
xlat
arpl
mov
or
jle
cmc
add
adc
das
inc
push
jbe
outsl
out
fs
adc
fcompl
push
cmp
jnp
mov
repz
xchg
mov
jmp
jae
iret
loopne
and
adc
lock
ret
xchg
xchg
lret
data16
or
ja
aam
lods
nop
cmpsb
bound
xchg
ret
nop
pop
sbbl
xor
or
inc
testb
sahf
mov
xchg
mov
leave
inc
jne
subl
cmpsb
lods
aam
add
addr16
lret
in
cmp
jne
inc
mov
or
dec
dec
cmp
cmp
fwait
std
dec
jbe
jl
aaa
dec
daa
xor
test
loopne
or
sbb
xor
sarb
test
xor
add
std
inc
in
pop
sub
gs
jae
add
adc
mov
rclb
dec
add
adc
xor
push
test
xchg
inc
sahf
out
imul
add
sub
movsl
popf
xchg
sarb
add
mov
add
stos
or
std
iret
insb
roll
addr16
sbb
jno
jb
sbb
xlat
ja
loop
out
push
adcb
test
and
fcoml
popa
xchg
mov
sbb
cwtl
push
push
xchg
negl
pop
inc
xchg
jae
test
push
addb
icebp
in
aaa
icebp
repz
mov
xchg
outsl
sahf
sar
hlt
inc
cld
repnz
sti
cmp
ficoml
and
js
adc
adc
jg
mov
ljmp
mov
cwtl
orb
adc
jecxz
sbb
fldt
pop
jmp
punpckhwd
dec
cmp
movsb
sbb
aad
inc
cmp
sbb
and
mov
sbb
out
cli
stos
shll
dec
adc
nop
andl
xchg
test
std
xor
dec
pop
xor
and
inc
adc
popa
mov
fstpl
pop
call
imulb
test
dec
lret
add
inc
adc
mov
lds
mov
mov
rcrl
add
cmc
mov
xchg
pop
jp
es
dec
scas
jbe
jmp
and
adc
call
mov
out
repz
or
mov
ret
mov
rcl
int3
xor
mov
in
loop
mov
pop
cmpsb
ret
movsb
pop
fisttps
add
loop
mov
bound
pop
fidivrl
lret
cmp
xlat
mov
xlat
arpl
jb
dec
pop
fstpl
push
outsb
sbb
rcrl
xor
cmp
mov
add
bound
jge
jno
pop
fnsave
mov
or
ja
dec
cmp
push
sbb
inc
nop
ds
js
into
in
add
sbb
jecxz
out
and
add
shrb
xor
inc
xorl
mov
js
xor
and
int3
stos
xorl
lods
rclb
xor
fisttps
ss
push
cmp
mov
xorl
cmp
in
xor
pop
inc
xchg
out
mov
inc
icebp
mov
mov
mov
sbb
sub
mov
jp
lock
or
dec
jmp
out
gs
fistpll
cmp
mov
and
cmc
fs
and
aas
divb
movsb
ja
adc
jle
mov
jge
rcl
lock
push
ljmp
test
ret
fldenv
lods
push
mov
push
jmp
mov
mov
test
mov
xlat
and
xchg
or
push
mov
mov
ljmp
xchg
int3
fstpl
dec
cmp
ror
fwait
les
stc
loopne
pop
leave
shll
imul
ret
add
cmp
ret
add
aad
test
loop
imul
in
push
dec
dec
repnz
pop
add
inc
cmp
nop
and
aaa
xchg
imul
mov
xchg
adc
aad
sar
ret
int
jae
imul
and
dec
stos
and
jno
push
sbb
imul
mov
cmp
sbb
mov
pop
imul
int3
icebp
mov
fldt
ficomps
repnz
cmc
loope
out
loop
cmpsb
mov
mov
imul
sbb
xor
add
pop
inc
pop
pop
leave
xchg
rcrl
dec
cmpsb
xchg
ret
jecxz
sbb
inc
xchg
mull
xlat
js
das
mov
sbb
push
jmp
fidivrl
lcall
fstpt
aas
jno
pop
jmp
rcrb
fists
repnz
stos
dec
add
call
mov
sbbl
loope
sub
xor
add
mov
stc
loop
adc
jno
movsb
mov
fimuls
adc
inc
sbb
mov
bound
jmp
rolb
add
push
testb
int3
xor
lds
cltd
das
jle
adc
je
pop
adc
mov
jb
jg
in
jbe
xor
and
fsts
xchg
adc
jnp
imul
fsubrl
and
push
in
mov
adcb
stos
lock
push
fldenv
push
addb
call
xchg
xor
aas
push
jns
cmc
mov
sub
imull
and
add
daa
ljmp
repz
out
fstpl
pop
inc
jns
dec
xor
push
jp
adc
stc
movsl
jle
aaa
ret
jno
sbb
inc
sbb
sarl
aaa
inc
jne
lds
fcmovnbe
jb
pushf
xchg
ss
lret
dec
rcll
imul
mov
hlt
xlat
or
shrl
push
pop
frstor
mov
pusha
aas
pop
nop
mov
jle
mov
inc
and
push
mov
negl
pop
bound
sbb
inc
xor
jmp
mov
adc
sub
jbe
popa
sbb
mov
dec
mov
int
xor
fiaddl
push
icebp
subl
rcrl
dec
dec
cwtl
jp
sbb
jo
jge
rcrb
push
sahf
aaa
mov
rcll
minps
dec
shl
test
cli
mov
ds
push
pop
push
inc
shrb
cli
mov
jae
push
test
adc
aaa
loop
dec
lcall
adc
mov
mov
dec
ret
out
adc
lret
cmp
add
push
and
inc
sub
or
mov
mov
aaa
lock
lea
repnz
imul
adc
out
cli
adc
mov
or
dec
adcl
fwait
dec
mov
inc
adc
dec
xor
mov
jo
sbb
sbb
fnstsw
cmpsb
xchg
loopne
inc
xchg
int
cmp
pop
fwait
clc
or
es
adc
cmpsb
xchg
xor
xchg
leave
xchg
dec
sub
repz
sub
out
pop
push
lods
and
mov
fcomps
sub
js
pop
and
sbb
iret
pop
xor
inc
cwtl
push
and
in
aaa
insb
int
gs
or
popf
loopne
xchg
pop
fnstsw
push
adc
adc
pop
sbb
test
outsb
mov
cmp
movsl
rcrl
cwtl
cmp
test
jmp
pop
enter
cld
out
fldenv
int
icebp
stos
jae
jns
mov
outsb
xor
test
adc
data16
xor
ret
pop
mov
pusha
scas
lcall
cmpsl
xor
push
sub
ds
leave
cmp
rorl
adc
lsl
and
subl
sti
les
or
fildll
add
sub
sahf
lret
inc
sub
adc
or
lret
lock
aaa
inc
adc
and
xchg
ljmp
rclb
pop
leave
dec
test
and
testb
enter
jnp
pop
in
roll
inc
push
pop
or
movsb
add
jl
xchg
add
shll
ret
insl
test
stos
lods
test
xchg
or
xchg
dec
jns
enter
fwait
lea
pop
out
sub
and
mov
xchg
and
sub
jne
sbb
sahf
fists
sub
mov
push
mov
in
in
fwait
pop
or
enter
pop
adc
xor
push
xor
in
and
push
mov
test
mov
shll
jne
add
dec
shlb
sub
js,pt
add
pop
sahf
push
jge
mov
jne
arpl
jno
int
aas
insb
lret
add
iret
scas
scas
js
and
inc
orps
jns
fcompl
mov
cmpb
out
into
sub
cmp
icebp
addr16
ljmp
push
mov
and
in
test
jge
insl
repz
adc
paddw
push
fldt
lock
sbb
sbb
fcmovb
or
cwtl
pop
ss
xor
sti
sbb
popf
mov
in
xorl
sub
fmul
or
and
mov
mov
sbb
in
movsl
inc
sbb
popa
jecxz
adcb
in
int3
sub
add
fcompl
push
xor
hlt
test
mov
jl
jb
jl
iret
pop
incb
and
pop
or
sbb
sbbl
shrl
mov
inc
sub
repz
xchg
push
add
pop
jne
push
sub
repz
cmp
icebp
aam
cmpl
daa
inc
pop
sti
out
xchg
adc
lret
pop
iret
xchg
cmp
scas
dec
sbb
mov
dec
jg
add
movsl
fsub
aad
mov
loope
ret
popf
insl
test
mov
sarl
rcr
or
push
int
cmp
andl
test
adc
adc
cmp
pushf
mov
mov
jo
lods
pop
add
test
mov
sbb
xchg
sub
pop
jns
out
imull
dec
adc
xchg
fadd
out
sbb
and
and
and
outsl
mov
testl
pop
iret
push
sub
into
push
push
repnz
leave
or
aam
and
mov
lods
orb
enter
call
sbb
xchg
lret
adc
insb
cmc
std
out
fdivr
cmpsl
jp
jne
pop
push
cmp
xlat
pop
clc
dec
stos
icebp
push
mov
cld
pop
mov
fidivl
cmpsl
mov
jl
cltd
aam
lret
dec
push
inc
data16
hlt
mov
fdivrs
cmpsb
mov
jl
je
inc
jecxz
sti
fimuls
inc
rcrb
push
ret
jp
mov
aaa
pop
lea
mov
mov
inc
add
cmp
or
cli
fwait
pop
xor
mov
cmp
inc
mov
mov
push
push
xchg
inc
or
aaa
test
subl
or
and
push
clc
inc
loope
lcall
push
jne
repnz
jb
mov
sti
jle
popf
out
ds
mov
ret
jnp
repnz
pop
dec
gs
add
cwtl
xchg
pop
std
popf
in
call
push
repz
ret
enter
popa
mov
xor
pop
or
or
and
hlt
xchg
jg
inc
jo
cmp
sub
jmp
call
ljmp
or
or
nop
push
std
xchg
pop
pushf
clc
scas
aas
roll
cmovs
push
mov
push
repz
sahf
jno
inc
add
shrb
sub
in
ljmp
mov
insb
popa
frstor
jge
pop
lcall
mov
cmpsb
mov
xor
out
movsb
gs
mov
cmc
shll
add
dec
scas
jo
pop
stc
arpl
out
dec
mov
mov
imul
pop
dec
mov
ret
scas
jge
fisubs
ret
cmp
dec
fdivl
xchg
jne
and
add
insb
mov
ret
loop
adc
repz
leave
sbb
push
jbe
jge
pop
add
bound
or
pop
inc
int3
mov
shlb
imul
mov
xorb
sbbl
and
adc
ret
pop
dec
mov
jae
cmp
sbb
xor
sarb
sub
or
push
lcall
aad
pop
xchg
jg
andb
jne
les
ss
ds
add
mov
stos
or
out
adc
enter
adcb
push
frstor
inc
xorb
add
sbb
sub
jecxz
push
fbstp
mov
push
jle
filds
push
lods
ds
cmp
xor
popf
mov
andb
jl
sbb
mov
cmp
movsl
loope
jnp
clc
test
sub
aaa
xor
rcrl
pusha
cmpsl
pusha
sub
xchg
insb
push
mov
lods
imul
pop
dec
xchg
pop
in
mov
cmp
je
mov
into
and
aas
int3
xchg
inc
inc
lret
cltd
cmpl
ficompl
jno
mov
push
lods
cmp
mov
xchg
mov
jle
push
mov
dec
out
cmp
sub
mov
xchg
repz
ss
call
int
in
jbe
hlt
pop
cmp
out
xchg
inc
push
inc
hlt
ret
add
sub
aad
and
dec
cmp
iret
dec
xchg
inc
in
fistpl
flds
push
iret
or
in
outsl
mov
out
int3
jge
adcl
stc
or
sarl
dec
xor
test
insl
xchg
inc
mov
xor
sbb
hlt
clc
dec
jle
fidivs
insl
sub
sub
push
ds
cmp
shlb
jmp
push
ret
movsb
sbb
jns
pushf
nop
sbb
ret
push
cmp
push
xchg
rcrb
cmpsl
loopne
xor
mov
iret
dec
out
imul
adc
aad
cli
mov
jecxz
mov
push
sbb
inc
cmp
repnz
fstl
add
lods
jb
out
imul
cmc
add
adc
mov
cld
popf
dec
xchg
hlt
jb
jg
cmpl
ds
icebp
xor
stc
inc
xor
in
mov
imul
fwait
shll
shrb
dec
mov
inc
cmp
mov
and
xor
je
movsb
out
xchg
sahf
test
test
mov
testb
xchg
cmp
stos
cwtl
pop
addl
std
xchg
mov
add
lock
push
dec
sub
js
sbb
jae
or
in
lods
out
mov
xor
fiadds
out
push
shll
cmc
adc
pushf
pop
rcrb
cmc
and
faddl
jae
jg
xchg
inc
mov
mov
clc
inc
insl
sti
cmp
fcomps
bound
and
and
insl
es
aam
add
cs
add
fldcw
cmc
and
or
bound
pop
pop
xchg
or
sub
and
inc
inc
lahf
test
les
jmp
add
push
jnp
push
fcomp
adc
in
cmpl
xchg
ret
xchg
fs
ret
shlb
cmpsl
push
mov
mov
cmp
xchg
jecxz
lea
or
push
jns
or
das
cmp
out
mov
dec
adc
adc
mov
test
push
mov
mov
mov
test
in
sbb
xchg
xor
rcr
xchg
inc
out
cmpps
inc
xor
aad
arpl
add
inc
mov
je
mov
sbb
xchg
mov
inc
enter
mov
inc
dec
mov
and
sbb
fldcw
test
outsl
pop
daa
out
ja
dec
adc
sub
or
xlat
inc
mov
mov
lahf
stc
dec
test
pusha
pop
arpl
inc
das
pushl
adc
dec
mov
stos
ds
add
test
dec
icebp
test
je
mov
dec
movsb
mov
fists
inc
jle
fisubl
pop
into
loop
lods
mov
and
ss
mov
inc
dec
dec
pop
jl
dec
popf
jmp
xchg
dec
add
aaa
push
and
adc
push
and
out
jnp
push
cs
es
dec
nop
sub
aas
xchg
jecxz
xchg
sub
xchg
test
push
mov
sahf
xor
cld
xchg
jmp
jbe
jecxz
out
pop
jmp
lock
mov
or
mov
nop
mov
push
jl
lret
cmpsb
loope
mov
cwtl
and
aas
in
cmp
push
movsb
ljmp
cmp
stos
cli
cmpsb
sahf
out
xlat
hlt
adc
or
stos
mov
push
adc
test
jbe
out
dec
jecxz
dec
shrb
xchg
jl
xchg
cmp
fcompl
movsl
jbe
inc
fsubs
mov
ljmp
and
mov
lods
push
es
or
lock
inc
fildll
cld
or
inc
jge
stos
push
push
sub
fbld
lods
sti
xor
cltd
dec
push
int
test
sub
xor
push
sub
out
jp
jmp
ljmp
inc
in
ja
stc
jge
mov
mov
mov
or
popf
in
ja
insl
push
in
mov
sahf
mov
and
push
inc
out
lcall
popf
push
xchg
adc
out
addl
imul
enter
mov
iret
insl
sub
cltd
in
loopne
adcl
adc
mov
sub
dec
sti
xchg
adc
dec
xor
jecxz
xchg
mov
pop
fldt
inc
frstor
in
jb
jl
mov
lret
fdivr
outsb
repz
add
out
sbb
inc
popf
pop
mov
pop
dec
daa
lds
js
mov
out
fcomip
jae
gs
mov
jl
lods
and
mov
push
cmp
je
jmp
sub
sahf
rclb
jbe
pop
mov
jg
or
out
mov
imul
into
add
loop
sbb
std
cmpsl
aam
pop
movsb
add
xor
sbb
inc
pop
insl
mov
cmpsl
cmp
sbb
gs
mov
jl
push
ja
sbb
sbb
and
daa
gs
mov
jge
faddl
inc
and
mov
movsl
movsb
push
xchg
pop
cmp
mov
jne
mov
or
jb
xor
es
push
and
imul
push
js
stos
outsb
stos
in
push
leave
ret
jb
xchg
ret
push
xor
jecxz
cmpsb
jae
xchg
push
dec
mov
leave
or
mov
add
pusha
in
int3
in
push
add
or
or
pop
cmp
sbb
lcall
ret
insb
push
push
xor
sub
jbe
in
cli
lahf
loope
xlat
jne
iret
push
xor
jge
mov
and
mov
pushf
stos
pop
xchg
cmp
add
pop
bound
out
notl
cmp
das
das
lcall
mov
ret
cmp
fdivrl
add
inc
rorl
sete
jecxz
mov
xor
daa
sbb
xor
push
mov
xor
jg
mov
pop
sbb
push
lret
mov
sub
push
imul
into
jg
outsl
pop
clc
xchg
inc
lcall
mov
inc
mov
adc
mov
jno
cmp
push
fs
test
adc
jle
les
test
aaa
or
outsl
lods
shl
pop
inc
sub
lret
test
clc
xchg
pop
and
jne
adc
jae
mov
outsl
and
adc
mov
js
sarl
nop
fidivl
pop
xor
mov
lret
adc
out
or
and
and
iret
cltd
ljmp
daa
mov
cmp
dec
jge
push
imul
mov
js
and
lods
dec
das
xor
lods
pusha
das
mov
mov
stos
add
lret
or
lods
jmp
xchg
pushf
mov
clc
negb
push
sub
jno
mov
and
push
movsb
mov
cmp
add
jae
sbb
aaa
cltd
pop
or
imul
les
pushf
sbb
jb
jbe
insb
inc
jle
ds
mov
push
pop
adc
lret
lcall
jnp
rcl
add
jae
sbb
mov
sub
pop
pop
pusha
pop
push
in
push
mov
das
and
hlt
cmpl
sbb
fildll
xchg
insl
mov
jg
adc
rorl
sti
pop
mov
mov
mov
loopne
call
sbb
fimuls
mov
cmp
in
loopne
pop
sbb
adc
adcl
xlat
fisubrl
mov
or
or
divb
paddw
inc
inc
lahf
add
xchg
stc
or
in
jp
adc
sub
add
lret
imul
xorb
jno
push
sub
dec
fildl
jmp
cmp
gs
fmul
popf
push
fdivp
outsb
mov
idivb
push
stc
mov
or
pop
std
dec
insb
xchg
adc
mov
test
xchg
mov
int
add
xchg
nop
xchg
sbb
adc
mov
sbb
std
mov
sbb
cmp
xchg
loop
mov
loope
stos
inc
and
or
mov
pop
mov
jle,pn
cld
inc
push
pop
adc
mov
cli
es
test
movsl
fcoms
adc
mov
pop
push
insb
mov
ror
test
inc
fstpl
mov
fmuls
xorb
pop
lret
mov
mov
in
push
rolb
scas
lods
shrl
sahf
aad
fcoml
in
imul
stc
pop
popa
stc
stos
mov
test
out
pusha
push
push
sti
mov
push
mov
test
fsubs
ljmp
xchg
cmp
icebp
leave
mov
rcl
xchg
sbb
out
fs
loopne
push
test
sbbl
or
outsl
nop
pop
inc
loopne
cltd
aaa
mov
dec
sbb
pushf
in
mov
arpl
or
popa
sbb
ljmp
cmp
outsl
dec
pop
jnp
leave
test
xchg
js
push
repz
fnop
xlat
out
ljmp
imul
shlb
sub
in
xor
xchg
cwtl
push
mov
pop
jbe
ret
fidivrs
cmpsl
fiadds
aas
fs
dec
imul
loop
xchg
cmp
popf
dec
stc
scas
mov
jle
xchg
mov
insb
cltd
int3
sub
adc
ror
roll
mov
and
jb
inc
and
gs
in
add
ret
push
mov
aad
xchg
mov
mov
push
or
jb
ret
mov
mov
cmp
icebp
icebp
scas
mov
inc
inc
icebp
xchg
pop
pop
mov
cmp
xor
in
add
mov
mov
mov
xchg
or
dec
data16
int3
mov
pop
popf
and
mov
pop
mov
inc
jg
clc
out
or
pop
pop
xchg
sbb
push
xchg
sub
sbb
pop
es
insb
ret
test
leave
and
add
cwtl
dec
lods
jnp
pusha
cli
imul
pusha
and
into
dec
test
mov
pop
fidivl
mull
outsl
daa
cltd
rorl
lret
gs
mov
sub
dec
mov
mov
sub
jmp
es
sbb
les
insb
and
adc
lods
jne
mov
cs
xchg
inc
loopne
xchg
shll
push
cmpsb
mov
scas
and
outsl
jecxz
pop
cmp
jno
int3
add
jnp
out
pop
push
cmp
std
push
repnz
or
mov
fwait
mov
mov
pop
inc
or
fcomps
ljmp
ljmp
push
es
mov
popa
pop
xchg
and
push
dec
mov
mov
adc
or
fbld
shlb
mov
addr16
sub
insb
adc
sbb
cltd
leave
icebp
stc
pop
clc
sbb
sub
sti
dec
rol
dec
cmc
push
into
inc
sub
ss
out
inc
clc
int
out
into
inc
repz
arpl
adc
add
lret
mov
mov
xchg
pushf
clc
sbb
push
mov
lret
fcomi
adc
push
mov
andl
aam
int3
adc
repnz
andl
pop
std
push
addl
psrad
jae
jb
xchg
add
pop
cmpsl
mov
dec
inc
jbe
jb
mov
scas
xchg
or
outsl
orb
jecxz
movsl
insb
fildll
test
add
sbb
cmpsl
movsb
movsl
sub
test
mov
and
pop
mov
shrb
cmp
aaa
push
and
pusha
mov
pop
insb
cmpsl
push
xor
push
dec
dec
push
xchg
xchg
add
lahf
std
mov
cs
push
jmp
ret
rclb
or
scas
out
int3
jg
mov
lret
outsb
fidivrs
lahf
add
adc
jp
mov
out
pop
cli
insb
pop
bnd
push
and
jge
jb
add
xchg
and
pusha
outsb
or
jmp
ror
or
adc
sub
mov
pop
pop
clc
psrld
inc
push
into
sbb
ds
popa
push
sub
xor
ret
sbb
insl
pop
clc
pop
int3
aaa
sahf
dec
popf
push
jbe
stos
pop
adc
in
mov
dec
lret
xchg
aas
or
and
pop
mov
push
xchg
fimull
mov
fbstp
pop
testb
xchg
dec
aad
push
xor
sub
movsl
std
inc
add
mov
dec
xchg
dec
push
outsl
xchg
scas
aad
or
xchg
test
push
mov
or
add
adc
lods
jg
inc
fdivrs
rcll
gs
pop
aam
fs
lret
shl
adc
fwait
push
xor
dec
adc
ds
es
lret
ja,pt
jbe
loop
shll
jl
test
or
fistpll
addb
adc
cltd
and
popl
andb
mov
mov
cmpsb
fdivrs
jmp
or
movsl
push
ss
xchg
cmpsb
arpl
in
xor
adc
xor
fstps
sub
pop
repnz
jge
lock
sub
pop
mul
test
mov
jne
cmp
rcl
inc
jmp
in
xor
ss
sub
dec
push
push
push
pop
jle
cmc
sub
mov
cmp
psrlq
xor
mov
aad
mov
aam
lahf
stc
into
mov
pop
scas
mov
mov
loope
mov
stos
xchg
aam
xor
gs
mov
mov
pop
jl,pt
and
dec
lods
or
push
sbb
insb
int3
jmp
and
ret
add
mov
inc
fisttpll
mov
add
adc
inc
mov
rcrb
push
int3
mov
pop
clc
cmp
dec
pop
dec
movsb
js
mov
inc
adc
test
lea
jno
mov
dec
dec
xchg
mov
roll
inc
add
pop
dec
psrld
or
test
dec
cmp
mov
mov
fcmovbe
js
pusha
in
and
mov
mov
add
daa
adc
adc
xchg
aad
or
jg
push
xor
push
les
cs
repz
in
out
inc
xchg
test
and
jg
inc
sbb
jne
pop
pop
inc
sarb
pop
dec
mov
mov
sbb
mov
mov
xorb
les
pop
les
daa
popf
mov
push
bound
gs
dec
or
jne
mov
shlb
insb
in
outsb
fildl
push
mov
xchg
pop
sub
dec
leave
jp
adc
cltd
ja
or
ds
mov
jge
mulb
xchg
xor
pop
cmc
sub
inc
adc
mov
sub
popf
lahf
xor
loopne
xchg
call
das
jmp
test
sub
data16
adc
addr16
sbb
daa
and
imul
jne
dec
or
push
and
jo
imul
arpl
repz
test
clc
pushf
adc
mov
adc
out
stos
mov
jnp
in
sbb
std
sahf
and
in
mov
and
je
push
cmpb
xor
xchg
sub
cmp
sbb
lcall
pop
inc
insl
jmp
add
and
std
arpl
sbb
add
adc
xchg
or
icebp
lods
xchg
mov
ror
aaa
add
mov
rolb
in
push
dec
or
xor
push
add
sbb
arpl
xchg
js
lahf
lahf
xchg
push
jle
adc
movsb
cld
dec
push
mov
sbb
inc
pop
jns
fidivrs
popa
stos
in
pop
mov
test
data16
mov
mov
rcl
cltd
mov
enter
push
das
test
xor
xchg
mov
mov
jae
sub
inc
mov
jne
fcoml
loope
pop
dec
add
stos
cltd
xchg
mov
outsl
rclb
add
rolb
jmp
jge
mov
ljmp
fdivrl
and
mov
xchg
and
adc
cld
inc
insl
test
fnsave
das
pusha
adc
test
pop
das
dec
roll
pop
imul
add
xlat
xchg
jb
jmp
push
adc
cmc
jno
popa
mov
popa
flds
pop
dec
sbb
xchg
aas
outsl
jecxz
push
add
clc
insl
cmc
jp
das
lds
push
cmp
xchg
xchg
pop
clc
jg
es
cld
gs
scas
adc
and
and
in
out
clc
aaa
push
inc
inc
add
mov
out
ja
xchg
mov
shl
mov
shrl
aam
cmpsl
rol
nop
push
hlt
add
jle
inc
lods
in
inc
cld
cmp
push
sarl
in
inc
jl
cmpsl
xchg
pop
mov
sbb
out
or
sti
jl
mov
xor
ja
popf
movsl
adcb
lods
xor
mov
sar
sub
fnstenv
add
xor
dec
loop
pop
lret
aas
pop
mov
hlt
xchg
inc
mov
in
jmp
or
imul
push
fdivrs
pop
lret
iret
scas
mov
xchg
sub
xchg
rolb
push
cltd
aad
repz
or
cld
adcb
or
fimuls
adc
xchg
aas
aad
push
sti
xchg
fs
push
jecxz
popf
out
adc
cbtw
push
call
push
or
lahf
in
cmc
pxor
pop
push
mov
xchg
std
int
inc
aas
adc
insl
jnp
in
and
xchg
stos
sbb
mul
cvtdq2ps
pushf
mov
xchg
and
jbe
adc
inc
int
paddb
arpl
mov
addb
rolb
inc
popf
or
jp
outsl
or
stos
jmp
dec
out
mov
ficoms
push
adc
sbb
mov
lock
aam
int3
lcall
scas
mov
cs
xchg
adc
and
fmul
movsb
ds
es
loop
mov
lods
xchg
int
ja
dec
xor
mov
pop
cmp
loope
adc
fstpl
pop
fbld
jge
movsb
div
rcl
cmpsl
xchg
movq
outsl
out
dec
mov
jp
sbb
scas
xchg
arpl
int3
mov
jae
pushf
fwait
push
xor
inc
mov
adc
call
clc
test
push
je
push
pop
mov
jb
popf
mov
push
pop
mov
icebp
jbe
aas
les
repz
sub
addr16
repz
adc
popa
sub
iret
sbb
rcrb
stos
pop
cwtl
aaa
add
insb
sbb
lret
test
ds
inc
inc
bound
mov
cmp
dec
xor
fcoml
xor
mov
jne
inc
lock
mov
sub
out
out
adc
imul
pop
fisttpll
lock
aad
dec
cmp
jnp
add
mov
or
out
push
popf
mov
popa
or
orl
sti
leave
das
test
push
adc
jecxz
or
int
addr16
divl
jbe
inc
xor
rorb
sub
daa
movsl
sti
pop
mov
sbb
add
popf
inc
jge
pop
jns
jge
shll
mov
in
push
pop
dec
aas
lods
std
fnstenv
sub
pop
push
adc
frstor
rcl
leave
cwtl
add
hlt
xchg
xchg
sub
pop
or
rorb
inc
int3
jne
pop
xor
mov
jb
sbb
movsl
mov
cld
fadd
mov
lock
lds
jle
stos
sbb
jp
repz
pop
sbb
ds
icebp
mov
jge
inc
inc
adc
lods
add
push
lret
cld
dec
lret
sbb
and
sub
push
add
jo
jb
mov
rcrb
push
movsl
popf
cmp
out
or
adc
sti
lcall
jne
std
not
dec
jl
loop
inc
mov
fistpl
lcall
or
sbbl
outsb
into
mov
push
mov
xchg
or
sbb
stos
and
pop
cmc
in
add
pop
fld
jne
jb
in
loop
xchg
inc
out
es
stos
xor
push
mov
fxch
and
enter
xchg
xchg
mov
shl
sub
inc
pop
outsb
cmpsl
jge
cwtl
bnd
or
pop
jmp
hlt
dec
test
fcom
or
sbb
or
push
cmpsl
or
arpl
push
pusha
iret
lods
stos
icebp
inc
inc
mov
aaa
xor
loope
orb
leave
mov
imull
adc
xchg
or
icebp
jmp
in
int3
in
dec
jb
insb
cld
and
fmul
cmp
dec
add
push
lret
sub
lret
out
movsl
xor
lock
mov
repz
imul
and
insb
adc
pusha
inc
jno
and
rorb
orb
je
dec
and
push
sbb
stc
aas
out
add
or
sub
loope
cmp
and
pop
jmp
shl
icebp
popa
mov
movsl
cmp
aad
es
pop
ret
shll
mov
lret
mov
out
and
push
shlb
or
push
xchg
fs
mov
or
xor
xchg
ds
shlb
imul
fdivr
clc
int3
xlat
rorl
int3
cwtl
sbb
fistpll
mov
xor
xchg
sbb
mov
neg
leave
mov
lahf
jmp
dec
mov
xchg
xchg
add
push
jnp
aaa
cmpsb
or
rcrb
push
aad
sbb
xchg
push
insb
ss
and
in
xchg
push
and
jb
std
std
enter
pop
mov
out
aam
pop
dec
sahf
inc
xor
xor
xor
shll
lea
adc
dec
daa
out
mov
adc
xor
cmp
mov
pop
inc
bound
xor
imul
les
sub
daa
in
rcrl
out
dec
pop
sub
or
cmp
xor
pop
fisttps
sahf
fadd
pop
mov
adc
das
jle
jmp
repnz
shrl
jbe
movsb
push
mov
mov
push
lahf
stos
add
adc
jnp
mov
mov
or
ja
or
push
fs
and
cwtl
xor
cmpsl
test
cmp
movsb
data16
das
cwtl
clc
sub
mov
scas
or
dec
sahf
lods
dec
repnz
jmp
std
jnp
pop
inc
jmp
ret
jnp
jne
movsb
mov
dec
pop
xchg
sub
lahf
outsl
in
adc
inc
loop
cmp
or
mov
insb
push
pop
sub
jle
adc
mov
lods
add
pusha
hlt
jge
mov
sub
mov
sbb
test
test
mov
adc
mov
push
xor
cmp
and
inc
mov
mov
lods
xchg
jne
leave
mov
xchg
out
mov
sbb
or
push
filds
imul
pusha
movsb
imul
lahf
adc
dec
adc
ljmp
test
mov
mov
movsb
inc
add
loope
fdivrs
imul
adc
sbb
pop
or
icebp
mov
pop
push
and
out
jle
andb
cwtl
leave
pop
je
sub
mov
inc
jno
mov
es
sbb
orb
jbe
into
dec
addr16
shl
pop
jg
test
cltd
jl
cmc
aas
fcompl
jbe
gs
pop
mov
push
aam
sbb
test
ficoms
es
sahf
fs
pop
cmp
and
pop
mov
bound
push
mov
xchg
in
lret
aas
test
mull
cmpsl
ds
mov
adc
push
pop
cmp
int
cmp
out
sbb
push
adc
inc
jno
inc
dec
insl
lods
adc
mov
lods
mov
call
xor
push
sbb
mov
cltd
push
cmp
in
int3
test
fcompl
insb
cmc
hlt
clc
repz
lahf
repz
push
mov
test
xchg
dec
push
icebp
xlat
call
xchg
sub
lcall
icebp
mov
jl
repnz
mov
les
out
pop
lahf
insl
ljmp
stos
popa
clc
mov
inc
cli
lds
xchg
pop
cmpsb
or
mov
es
sbb
out
out
jge
push
lahf
into
outsl
cmc
add
xchg
push
sub
xchg
pop
xor
jo
bound
lea
dec
data16
jbe
inc
adc
jo
jmp
mov
test
inc
imul
fdivl
icebp
imul
adc
ja
imul
in
lock
loop
call
jge
push
push
push
mov
push
mov
rclb
dec
sbb
int
adc
push
add
mov
and
test
cmp
sbb
add
mov
aad
pop
into
sbb
fcoml
jo
std
cs
gs
cmpsb
pop
cld
lds
and
imull
cmp
xor
mov
repz
jle,pn
loop
mov
jns
ret
cs
jle
xor
cli
xchg
out
loope
cmp
sbb
sub
dec
jbe
sahf
jne
cltd
cltd
ret
sbb
jecxz
jg
ljmp
jle
jbe
sbb
and
dec
or
pop
popl
jbe
push
and
stos
fisubrl
jmp
lret
mov
dec
je
icebp
pop
sub
cmp
movsl
inc
add
add
push
xchg
pop
out
je
inc
cs
fisttps
callw
loope
xor
ret
pop
pop
add
in
push
mov
xchg
pop
dec
mov
test
repnz
mov
movsl
imul
sub
hlt
test
sub
jge
test
test
dec
and
adc
xlat
add
pop
in
mov
xchg
lods
xor
and
cmpsl
fs
sub
or
adc
loop
or
add
cs
xchg
stos
lods
mov
inc
inc
in
mov
cmp
mov
clc
or
mov
or
fchs
xor
aad
jbe
and
loopne
push
jecxz
cmc
pop
scas
cmpsl
inc
in
icebp
ds
in
pop
lds
and
inc
inc
and
arpl
addr16
movsl
or
or
cmpsl
or
imull
jle
fs
jg
mov
cwtl
ret
add
mov
mov
pop
movsl
inc
push
xor
lret
inc
push
mov
dec
movl
mov
out
jnp
or
pop
jbe
sub
jne
mov
push
shrl
sbb
andps
mov
add
and
fstps
sbb
inc
dec
rcll
popf
shll
movsl
pushf
inc
test
pop
pushf
arpl
daa
adc
push
scas
push
cld
mov
ja
push
sbb
mov
xchg
or
ret
fcoms
arpl
mov
loopne
pop
std
insl
out
and
pusha
mov
sbb
xchg
stc
aad
adc
adc
fstpl
cmp
mov
sti
sbb
mov
gs
dec
sub
movsl
sbb
aaa
iret
jns
lds
and
xchg
sbbb
out
inc
in
xor
jl
cwtl
jno
add
shrl
dec
jecxz
je
xchg
movsb
mov
ja
shlb
adc
dec
sbb
shl
mov
repnz
out
add
xor
test
or
scas
push
fcmovnbe
ret
out
fnsave
vunpcklps
jl
mov
mov
cmp
repnz
xor
mov
sub
lahf
shl
push
push
sbb
fwait
sub
jne
rcll
lds
testb
jp
pop
pusha
in
je
iret
es
xchg
sub
nop
pop
sbb
pop
ja
testl
lds
and
cltd
repnz
loopne
mov
in
mov
out
imul
and
lret
push
mov
in
outsl
dec
and
and
sbb
lea
lret
and
fstl
xchg
xchg
mov
jecxz
movl
xchg
addr16
xchg
or
xor
or
andl
in
mov
lods
in
mov
divb
daa
push
fwait
xor
outsl
sub
mov
adc
leave
add
or
add
jl
cli
mov
cmp
lods
mov
jno
sub
cld
cmp
cltd
scas
lds
jns
pusha
outsb
inc
pop
add
inc
scas
pop
mov
jno
push
xor
inc
loopne
je
inc
sahf
into
dec
cld
pop
mov
and
or
mov
cwtl
jns
add
push
jl
or
popa
pop
mov
push
xor
sti
mov
aaa
clc
inc
mov
sbb
lret
adc
fisttps
sbb
sub
jne
and
addr16
xlat
push
cmp
test
in
jo
push
dec
mov
push
stos
jb
or
dec
andl
mov
mov
inc
inc
enter
nop
and
jns
mov
fsubrl
jae
adcb
adc
push
sahf
adc
fs
adc
addl
cmp
je
cld
cs
scas
push
cmp
pop
dec
sub
add
xchg
ret
hlt
call
push
push
pop
mov
stc
out
popf
testb
push
cltd
sbbl
xchg
pop
sub
dec
push
jle
sbb
dec
jp
aaa
jl
add
sub
fidivs
test
aas
dec
cmpsb
xchg
xor
mov
cs
incl
sbb
push
enter
rorb
mov
cmp
mov
add
mov
int3
cmp
cld
pop
add
fmull
repnz
outsl
repz
xchg
dec
addr16
repnz
ja
int
imul
fwait
pop
sub
jnp
sahf
scas
mov
cmp
dec
dec
push
loopne
out
xchg
add
push
sub
adc
add
add
mov
mov
adcl
add
add
sbb
cmp
mov
cmc
mov
pop
in
add
lahf
pop
sub
add
sbb
sub
mov
jb
inc
hlt
sbb
sub
jae
stos
mov
xchg
sub
gs
test
aas
idivl
push
inc
cmpb
xor
push
push
loopne
test
popa
xchg
inc
icebp
xchg
adc
push
sbb
or
jmp
out
std
xor
xchg
imul
imul
mov
inc
adc
test
push
loope
push
sub
scas
mov
cld
leave
jp
cltd
ret
mov
or
icebp
int
lods
outsb
xchg
push
xor
add
es
nop
xchg
les
dec
test
adcl
sbb
xor
sbb
xchg
or
je
rclb
sub
inc
lods
xchg
imul
leavew
das
jno
dec
aam
mov
xor
jns
outsl
push
push
ret
adc
in
and
gs
cld
lods
inc
fiadds
add
gs
jo
pop
repz
push
fcom
mov
sub
insb
das
insb
loop
inc
jle
shll
cli
xchg
shl
out
sbb
test
mov
in
push
lods
lret
or
mov
push
insl
lds
shlb
xchg
fnstcw
enter
xlat
lahf
jnp,pn
inc
mov
mov
call
mov
push
mov
xor
sub
out
enter
rcrb
pop
scas
or
cmp
jle
lds
inc
inc
mov
push
dec
mov
lahf
into
pop
in
jmp
clc
mov
out
push
std
ret
lahf
jecxz
add
jecxz
adcb
cs
sub
int
adc
popl
add
cmp
dec
and
and
push
inc
xchg
sub
mov
mov
cmp
jg
fwait
cmp
or
test
ficompl
lds
test
mov
or
ret
aaa
cmpl
out
xor
xchg
pop
add
nop
mov
cld
fiadds
push
leave
ds
xor
outsl
pop
mov
sbb
jl
push
out
pop
sbb
push
xchg
add
mov
mov
pop
cltd
mov
test
add
jecxz
mov
inc
mov
push
data16
jb
cmp
je
psubsb
xor
cmp
daa
sub
lret
pop
repnz
jmp
pop
mov
pop
sti
out
fnsave
and
adc
xchg
sub
arpl
aad
mov
fldt
and
inc
sarb
jb
jge
dec
ljmp
idivl
adc
inc
cmc
mov
imul
push
daa
fnsave
lds
inc
pop
lock
bnd
add
pop
inc
ja
adc
int
xchg
clc
out
push
cltd
cmp
out
xor
data16
mov
dec
add
jns
dec
or
xchg
dec
ret
iret
aad
cld
add
loopne
addr16
jb
movsl
in
out
repz
rol
testb
testb
push
jl
lret
sbb
in
mov
sub
hlt
add
outsl
push
aad
pop
in
rep
popa
ds
adc
jae
fsubs
xchg
or
adc
xor
fisubrs
sub
sbb
mov
stos
mov
jbe
ret
nop
fimuls
or
sarb
jecxz
inc
xorl
arpl
add
cld
ror
adc
cwtl
push
xor
add
test
push
jae
lock
imul
push
in
adc
sub
in
sub
lcall
lcall
inc
mov
mov
bswap
add
cld
mov
mov
bnd
call
mov
shlb
lods
cmp
add
clc
pop
xchg
imul
lods
or
xchg
mov
cmp
enter
into
and
loope
decb
adc
cwtl
jl
lret
out
push
and
mov
jge
fildll
mov
push
add
fstpt
cmp
dec
roll
and
clc
daa
cmc
mov
cmp
fadd
rolb
pop
adc
mov
mov
pmulhuw
xchg
dec
fmull
and
cmc
popa
paddusb
mov
cmc
mov
loopne
sahf
dec
xor
push
mov
mov
sbb
mov
imul
imul
in
cmc
cmp
inc
je
mov
movsl
test
mov
cmp
pop
mull
in
cmp
sbb
mov
or
push
pushl
xchg
and
cmp
cmp
pop
inc
add
xor
inc
pop
data16
icebp
jecxz
lds
sub
mov
jl
jge
sbb
int
mov
aam
lret
call
pop
jnp
cmp
int3
out
push
dec
mov
mov
jl
pop
push
pusha
test
icebp
xor
pop
push
movsb
fucomip
pusha
push
stc
icebp
jmp
movsb
or
mov
ss
aaa
fstl
loope
out
insb
cmc
loopne
mov
push
push
jmp
int3
mov
adc
dec
mov
xor
push
and
les
adc
jl
out
or
movsl
dec
jo
mov
sarl
dec
inc
xchg
lock
sub
jo
jmp
xor
push
imul
xchg
pop
addl
jno
and
shll
xor
fidivl
fadds
jl
push
inc
je
add
stc
or
cmp
and
ja
cs
out
jmp
hlt
and
out
push
int
ja
fs
ljmp
popl
outsb
addr16
insl
cmpsl
test
in
and
pop
icebp
outsb
test
push
pop
inc
imul
gs
push
sub
pushf
xor
test
das
push
je
data16
je
lret
add
pop
xlat
ja
mov
or
mov
jno
shrb
loope
add
cmp
pop
lods
loop
xor
jno
xchg
jnp
push
mov
mov
dec
lods
fcoml
cmpsl
xor
int3
mov
push
cmp
xchg
pop
mov
int3
pop
mov
mov
jmp
insl
sbb
stos
test
xor
repz
loop
mov
and
xchg
xchg
aad
cmp
push
pusha
push
sub
pushf
mov
outsl
addb
das
sti
dec
in
xchg
imul
aad
fidivl
iret
pop
dec
xchg
mov
jae
stc
insl
sub
cmp
push
mov
add
fisttps
inc
outsl
xchg
addl
jae
fldenv
test
fwait
pop
data16
pushf
pop
or
ret
push
cmp
adc
inc
clc
mov
sbbb
nop
insl
je
sbb
xchg
adc
jbe
push
push
pusha
xor
jo
xchg
mov
out
mov
movsl
jbe
xor
jnp
mov
inc
sarb
pop
push
stos
xchg
unpcklps
cwtl
imul
gs
data16
dec
jg
xchg
cwtl
and
mov
cmpsb
js
hlt
xlat
pop
and
frstor
lret
dec
jmp
ds
adc
iret
sub
push
fistps
lods
shrl
sub
push
addr16
loop
fstp
imul
in
cmc
xchg
add
jno
push
mov
imulb
sub
daa
push
leave
adc
xchg
xchg
push
mov
jbe
dec
lods
cwtl
ret
xor
pop
cmc
std
jl
cli
mov
pop
mov
lret
popa
ja
movsb
nop
or
rcr
mov
les
pop
pop
inc
push
jns
cwtl
mov
les
movsb
ret
add
loopne
jb
scas
xor
jnp
repz
lds
xchg
pop
dec
fisubrs
mov
adc
leave
js
aam
or
sbbl
xchg
mov
cmpsb
inc
xchg
in
cmpl
lret
sahf
mov
jge
xchg
xchg
icebp
gs
loopne
inc
pop
or
inc
out
mov
cld
fisubl
mov
fcmove
filds
mov
fadd
stc
icebp
addr16
sub
xlat
push
inc
push
data16
addr16
loope
adc
sbb
dec
pop
push
pop
sbb
clc
pushf
sahf
inc
lret
inc
jno
mov
in
dec
mov
xchg
aaa
out
adc
adc
test
dec
xchg
pop
inc
or
je
inc
push
cli
jp
sub
jge
push
pop
cld
xor
cltd
xchg
pop
push
mov
mov
lret
pop
call
pop
push
pop
sahf
std
cs
cld
fildl
add
test
sbb
inc
mov
pop
test
mov
mov
push
pop
xchg
or
ror
mov
lahf
clc
jno
in
scas
push
cwtl
adc
cs
jne
pop
rcll
popa
fistpll
fcoms
mov
pop
pop
mov
xchg
add
mov
push
inc
mov
cwtl
out
xchg
stos
push
xlat
xchg
adc
test
ss
pop
rcl
xor
lea
mov
lret
jp
in
xchg
pushf
jp
push
add
or
vcvtdq2ps
outsb
mov
test
and
xchg
xchg
mov
sub
movsl
push
shll
lret
jb
pop
xchg
loope
push
loopne
or
jmp
out
shrl
and
inc
adc
decl
inc
push
xor
jae
rol
pop
adc
pop
push
repz
outsb
repz
lret
inc
mov
cmp
jns
mov
jmp
ficomps
pop
push
mul
js
jle
cmp
out
pop
popf
loop
lahf
sub
outsl
dec
loope
sbb
mov
mov
aas
shl
dec
jg
iret
cwtl
fstps
popf
pop
outsl
pop
push
les
pop
adc
push
loopne
pusha
jnp,pt
jmp
mov
sbb
out
push
adc
xchg
loopne
sbb
cltd
pop
stos
fbld
stc
dec
pop
mov
jge
mov
push
or
lods
stos
push
mov
stos
jmp
dec
cs
pop
call
lods
ror
lret
jne
lock
rcr
add
aam
xchg
or
or
out
ss
push
push
inc
loopne
aaa
int
mov
jg
xor
pop
int3
sub
mov
cmp
insl
push
adc
or
call
push
ret
lock
xchg
out
addr16
fwait
jnp
addr16
inc
push
xchg
pop
lahf
rcrl
shl
cmp
sarl
sub
pop
mov
test
sub
jo
push
popa
cmpsl
js
add
adcb
xor
dec
xor
lods
jp
gs
push
mov
loope
xchg
orb
mov
je
pop
lret
xchg
out
xchg
mov
jae
push
push
rcr
fdivl
jg
dec
mov
xchg
jp
fwait
mov
ret
mov
and
inc
imul
lret
in
lods
mov
data16
dec
cltd
aas
jno
cli
lret
cmpsl
mov
aam
pushf
test
adc
fisubs
lods
cli
int
jl
ret
addr16
stc
cmc
aam
pop
leave
out
cld
pop
pop
int3
in
push
movsl
cmp
cwtl
dec
xor
cli
mov
or
mov
aas
rcrb
add
outsl
cmpsl
test
shr
pop
sbb
mov
imul
add
popl
shr
xchg
leave
lock
pushf
lds
xchg
es
or
imul
out
rcrl
mov
mov
xchg
orb
test
cmp
pop
sbb
add
fwait
push
adc
inc
add
stos
pop
dec
ds
add
lret
out
add
test
xor
add
into
jge
adc
mov
jo
xor
sub
and
dec
pop
dec
jo
mov
aas
repz
jp
ficoml
inc
jo
stos
test
cwtl
sbb
mov
test
int
test
fistpll
or
aaa
dec
clc
mov
int
jns
shlb
mov
mov
notl
push
sbb
or
in
xor
dec
in
mov
pop
out
cmp
mov
xlat
and
mov
aam
and
mov
and
add
pop
bound
push
mov
shl
shl
dec
jae
lock
addr16
fistl
sub
xchg
lahf
cmc
jns
arpl
mov
xchg
cmpsb
xlat
pop
mov
into
cmp
or
out
and
imul
mul
dec
jmp
test
lahf
xor
std
pop
imul
in
lods
popf
dec
mov
lret
sti
jle
in
push
pop
jb
test
jae
subb
shll
or
lret
dec
dec
repz
repz
mov
shll
or
lret
leave
into
or
mov
push
int3
rorl
add
lea
test
push
dec
fsubrl
push
jae
cltd
arpl
es
fldcw
outsb
cmpsl
sub
shll
or
rdpmc
dec
pop
sub
inc
mov
push
push
push
stos
pop
dec
and
rorl
bnd
ds
inc
push
cmc
aas
pop
icebp
lods
jae
icebp
getsec
and
popa
andb
mov
sub
push
cld
clc
aaa
inc
push
mov
sbb
or
sti
shl
push
stos
stos
jg
xor
test
sub
sbb
scas
cmp
push
or
inc
inc
leave
pusha
xor
push
pop
xchg
push
fdivs
pop
add
movswl
push
push
cmovle
mov
nop
in
sti
xor
inc
mov
scas
mov
cmpsb
mov
push
pop
lcall
jmp
or
sub
loopne
lea
mov
and
sub
fildl
aaa
mov
pop
xor
mov
push
iret
pop
cmp
xchg
std
sub
jl
aas
pop
or
outsl
adc
fwait
add
adc
push
jp
inc
and
add
ljmp
in
push
loop
add
mov
and
movsb
popa
nop
fs
scas
enter
fildl
jecxz
inc
cmc
lret
outsl
insl
rorb
push
xchg
jecxz
loopne
pop
push
lahf
cmp
pop
pop
sahf
mov
jo
repz
mov
outsl
mov
lds
iret
lock
imul
lret
mov
jae
fsts
jnp
jmp
inc
inc
mov
mov
lret
dec
dec
inc
sub
add
gs
les
mov
xchg
loope
push
xor
out
xchg
adc
or
aas
sub
push
xor
or
mov
dec
push
fmull
xchg
push
mov
faddl
add
scas
ret
inc
xchg
into
mov
stos
sub
test
cmp
bound
lahf
xor
sub
lret
scas
movsb
xor
addr16
gs
cmp
or
test
xor
add
loop
add
pop
lods
outsb
cmp
ss
mov
lcall
test
lods
je
jbe
inc
inc
out
sub
xchg
pop
stos
aaa
push
mov
loope
inc
xor
mov
pop
xor
add
lods
mov
das
jp
outsl
push
adc
xchg
lret
xor
sbb
sub
test
and
add
cmp
addb
iret
push
loope
jno
js
insb
les
repnz
pop
sub
inc
pushf
sub
sub
movsl
xchg
jmp
in
add
in
xor
dec
cmp
lahf
es
test
mov
jb
jns,pt
sbb
inc
mov
incb
mov
outsl
or
xchg
aam
and
mov
push
call
lahf
mov
inc
or
cmpsl
and
inc
mov
push
nop
icebp
ljmp
mov
int3
jne
dec
sub
imul
cmc
inc
ret
push
mov
pushf
loop
sarl
jl
sbb
jnp
sbb
stos
jb
popf
mov
out
push
jo
outsl
mov
adc
mov
hlt
stos
jmp
push
and
push
imul
dec
js
in
sti
ficompl
lods
xchg
stos
ret
je
into
cld
adc
push
mov
mov
in
inc
shrb
xor
rcll
cltd
xchg
sub
and
sti
lret
and
push
repnz
cmp
cmpsl
mov
jge
lret
cltd
jb
out
or
mov
dec
sbb
cmp
and
jmp
shl
in
cld
in
jno
ror
fnsave
cmp
xor
outsl
sub
mov
xchg
aaa
push
sbb
rcll
and
stc
pop
inc
lds
mov
inc
pop
inc
sbb
pop
mov
rcrl
out
mov
cmpsb
movsb
add
dec
cmp
aas
outsl
mov
or
inc
sbb
movsl
mov
or
sahf
lds
pop
inc
pushf
sbb
pop
out
aas
fcmovnu
xchg
inc
test
sti
inc
pushf
pop
sbb
jp
popa
sub
sbb
pop
dec
mov
cltd
adc
mov
lret
sub
mov
imul
pop
arpl
push
mov
es
outsb
jns
push
push
cmpsb
pusha
rcll
mov
jg
sbb
push
cmp
sbb
pop
push
adc
xchg
out
cmp
stos
scas
xchg
jl
into
mov
movsb
pop
out
out
ds
dec
icebp
cmc
popa
lods
addr16
sbb
sbb
int3
in
push
mov
and
mov
push
mov
sub
icebp
push
push
out
xorb
sub
ds
test
pop
dec
dec
xchg
cli
sbb
xchg
test
pop
mov
or
mov
or
jle
out
leave
inc
or
test
cmpsb
mov
push
mov
int
fdivs
dec
sub
inc
mov
gs
sbb
hlt
arpl
mov
cli
out
imul
gs
das
fcos
lds
mov
subb
addr16
jnp
xorb
cmp
int3
adc
shll
dec
or
jnp
xor
pop
cmp
jg
sbb
mov
sbb
jno
xchg
lcall
les
adc
mov
jmp
xor
mov
jns
xor
outsb
sbb
jb
loop
xor
push
or
sbb
movsb
popf
ficomps
sbb
fstpt
or
fstl
ret
scas
in
push
xchg
fstps
pop
or
jg
cmc
mov
push
jecxz
ret
xchg
xchg
fs
in
sub
int
jg,pn
cs
mov
mov
sbb
mov
stos
xchg
push
xlat
cld
lret
aaa
repnz
dec
stos
mov
xchg
into
outsl
dec
ljmp
xchg
pop
and
inc
mov
jmp
cli
push
mov
adc
jne
mov
int3
pop
jbe
lds
sbb
in
insb
jno
jo
repnz
mov
sub
or
fstpl
dec
cmp
lods
mov
es
xchg
push
jne
xor
or
je
cld
nop
jp
lahf
mov
idivl
pop
inc
ss
lods
roll
sub
sub
sbb
nop
cwtl
lods
test
popf
cmpsl
dec
repnz
fimull
push
sbb
mov
dec
jp
mov
inc
xor
pop
mov
mov
sub
lds
jo
mov
out
dec
cmp
and
fdivs
aad
ret
push
ficoms
les
push
je
outsl
jnp
or
sbb
add
push
sbb
mov
leave
jle
dec
fstpt
repz
mov
jo
xchg
dec
in
rcrl
aas
xchg
js
movb
outsb
add
std
sbb
mov
pop
or
rclb
or
clc
sbbb
fwait
das
adc
popa
iret
sub
orb
xadd
xchg
sub
cld
mov
jne
fnstenv
mov
push
push
inc
jle
popf
and
or
sub
cmp
pop
jnp
dec
xchg
rcrl
mov
shll
das
ficomps
daa
inc
jge
xchg
push
cmc
mov
stc
cmp
sub
jae
and
pushf
cmpsb
sub
sbb
sahf
in
pop
fsubs
mov
adc
cmp
cmp
mov
loope
push
mov
insb
roll
sti
mov
loopne
xorb
and
mov
stc
lcall
pop
inc
inc
dec
mov
push
ljmp
push
movsb
add
add
sbb
sub
arpl
jne
ret
xchg
push
nop
push
push
insl
jbe
xor
mov
scas
cmp
and
cwtl
mov
and
adc
ret
push
jb
aaa
aas
xlat
push
add
dec
adc
cli
or
sub
cmp
xor
scas
adc
mov
leave
test
aam
movsb
pop
out
mov
lods
js
out
xchg
sbb
mov
jg
or
cmpsl
mov
es
int
bound
aas
ds
mov
je
aam
test
in
mov
mov
dec
or
push
push
and
ds
push
cmp
lcall
sub
push
jo
push
out
int3
jne
xchg
sub
loop
cld
imul
rcr
loopne
lahf
inc
sbb
and
and
addb
negl
movsl
cmp
mov
sub
xor
mov
loopne
push
jge
mov
mov
out
test
pop
movsb
stos
arpl
jecxz
pop
das
orl
imul
add
add
loop
pop
les
ljmp
hlt
mov
es
leave
xchg
inc
pop
inc
fdivrl
cwtl
mov
add
and
test
inc
xchg
mov
stos
gs
leave
adc
repnz
mov
sbb
xchg
push
mov
daa
outsl
adc
ret
pop
xchg
or
movsb
and
mov
mov
jg
and
and
push
repz
dec
mov
aad
xor
incl
xor
iret
in
or
in
or
adc
outsb
and
mov
adc
pop
mov
pop
mov
addb
test
inc
dec
fs
je
or
mov
jle
xchg
add
xor
pop
fcomps
add
fwait
mov
dec
sub
and
mov
adc
mov
frstor
adcb
mov
mov
dec
sbb
push
jae
iret
xor
dec
pop
mov
repz
add
js
dec
jno
push
lock
jns
xlat
and
xlat
mov
xchg
push
sub
lds
mov
in
push
call
jae
lret
push
test
dec
insl
add
adc
addr16
xchg
jae
push
pop
dec
jo
cmpb
imul
clc
add
xchg
push
in
adc
sbb
dec
sahf
or
in
or
mov
inc
mov
and
femms
jp
inc
sub
and
lret
xor
outsl
mov
mov
inc
push
cmp
jp
or
cltd
lds
cs
xchg
mov
inc
mov
lods
xor
add
mov
sub
dec
push
sub
jmp
insl
in
xchg
stos
jg,pn
lret
push
fistpl
mov
push
ljmp
int3
scas
mov
js
loope
and
dec
push
enter
iret
pop
push
aam
movsb
pop
xchg
shrb
add
mov
std
cmp
fistps
jg
xchg
jle
movsl
pusha
xchg
mov
addr16
pusha
mov
xchg
mov
mov
push
std
leave
rep
in
or
pop
shll
out
lea
int3
xcrypt-cbc
cmpsl
push
mov
sbb
rolb
xchg
jmp
into
jbe
jmp
lock
mov
pop
mov
xchg
inc
loope,pt
loope
mov
cs
nop
sahf
out
lret
cmp
pop
das
lods
ds
cmc
add
clc
inc
outsl
add
lock
pop
aam
nop
out
fcmovb
sti
pop
lret
mov
inc
adc
leave
ja
repz
push
dec
sbb
ret
push
push
jmp
add
cmp
rcr
lea
subb
mov
jb
outsb
dec
js
fistl
adc
jae
xchg
scas
test
fsubs
push
xchg
jno
sub
outsl
in
pop
xchg
nop
stos
ret
out
stos
std
add
pop
sbb
cmp
ja
inc
jb
subb
xchg
jge
xor
add
pusha
and
xor
dec
sarb
dec
xchg
ret
or
jmp
daa
scas
jbe
stos
mov
mov
loope
pop
int
popf
insl
adc
pop
sarl
push
inc
sbb
out
add
adc
shr
or
mov
xor
fists
jno
sub
mov
xchg
js
imul
sarl
es
loopne,pn
pop
hlt
in
fstp
mov
inc
mov
mov
cmp
sub
adc
notb
jo
leave
pop
mov
add
pop
outsb
mov
mov
in
xor
outsb
negb
or
mov
fidivl
pop
cwtl
cmp
ret
xor
mov
sbb
sub
mov
daa
leave
sbb
pop
rolb
lret
dec
mov
pop
push
mov
clc
inc
mov
je
imulb
and
lret
push
push
inc
xchg
in
clc
jns
les
arpl
inc
sbb
sbb
xlat
dec
js
shrl
cli
lods
insl
xchg
sbb
cld
std
mov
dec
cwtl
mov
cmp
push
addr16
inc
push
push
mov
jno
dec
mov
or
insl
in
xlat
sbb
push
test
loop
es
lea
nop
xor
jle
or
or
in
and
in
push
out
lret
loop
push
popf
in
pop
popf
mov
out
ror
jo
addb
inc
cmp
jl
stc
cmp
lock
pop
or
scas
xor
push
mov
sbb
pop
xor
sbb
ja
dec
in
push
lret
int
sti
fldt
or
bound
cmp
gs
mov
dec
mov
jne
mov
xor
lahf
cltd
sahf
push
or
mov
mov
dec
mov
mov
cmp
xor
dec
daa
popf
js
push
dec
stos
pop
pop
inc
push
dec
test
mov
cvtps2pi
push
pushf
push
inc
push
lea
or
scas
ret
mov
cmp
mov
imul
cmp
lods
aam
addl
lcall
imul
dec
out
lret
add
nop
cs
inc
rolb
jge
adc
test
cli
jle
push
hlt
ja
imull
icebp
repz
mov
test
mov
cmc
push
adc
cmp
jne
pop
js
nop
dec
pop
inc
lds
fs
push
loop
repnz
mov
loop
pop
leave
shll
int3
add
cs
mov
loopne
push
jmp
das
dec
or
jge
out
push
stos
in
or
or
hlt
add
add
into
addr16
ret
lret
rorb
pop
orb
ja
xlat
fisubs
dec
xchg
mov
inc
cmp
lret
dec
pop
iret
pusha
call
mov
std
mov
mov
xchg
popf
mov
cli
clc
shr
sti
arpl
adcl
pop
mov
ljmp
xchg
pop
subb
cs
jns
and
mov
popf
push
lret
pop
test
pop
push
sub
stos
jnp
jb
push
imul
mov
pop
add
lret
sbb
jno
xor
das
sub
adc
popl
ret
rorb
mov
sub
scas
pusha
push
dec
cld
push
push
xchg
shll
scas
cli
mov
mov
xor
test
lret
cmc
ret
cmp
pop
pop
adc
andb
xor
scas
xchg
add
in
mov
je
sbb
adc
out
in
int
cwtl
sti
or
cld
lcall
int
stos
outsl
lea
ret
jo
mov
sbb
sub
addr16
push
push
sub
je
inc
outsb
orl
imul
xor
mov
mov
mov
in
roll
test
lods
xchg
sbb
lahf
add
jecxz
cld
adc
in
arpl
jnp
dec
mov
push
loope
dec
js
test
repnz
test
mov
ret
movsl
outsb
ljmp
mov
cmpsb
adcl
addr16
cmp
pop
mov
ret
dec
push
enter
push
test
aam
jg
js
jmp
hlt
jns
repz
inc
pop
mov
jo
ljmp
sbb
xlat
out
in
mov
push
shl
outsb
divl
mov
inc
inc
divb
fwait
pop
bound
xlat
std
adc
adc
cmp
loope
rcrl
aad
mov
xchg
jne
cmp
stos
repz
addr16
sti
pusha
cs
mov
cld
push
mov
xchg
stos
inc
iret
add
adc
mov
stc
nop
inc
ror
lahf
les
and
mov
mov
inc
mov
inc
mov
pop
insl
scas
mov
repnz
push
and
mov
stc
jae
inc
push
mulb
cmc
adc
dec
and
out
insb
xor
shrl
xor
enter
pop
cmp
mov
outsl
xor
movsb
jge
mov
es
in
add
adc
mov
add
xchg
mov
xlat
jl
in
and
dec
lahf
ljmp
adc
jbe
jmp
das
lods
rorb
mov
fidivrl
sahf
jb
bound
push
test
pop
movsb
mov
mov
hlt
dec
sbb
jne
adc
push
js
lods
jle
int3
inc
test
xchg
aad
push
add
cmp
insl
mov
push
and
mov
cmp
and
push
mov
stos
mov
fxch
and
js
dec
repz
and
lods
push
or
jnp
inc
int
sbb
sub
adc
sub
mov
inc
or
adc
shl
dec
xchg
cmp
xor
pop
jne
shl
jno
and
sub
fsub
in
dec
pop
jmp
cs
and
mov
fisubs
cld
lahf
pop
mov
add
adc
pop
mov
mov
or
nop
cmp
jno
jecxz
ficoms
sbb
push
sahf
and
outsb
inc
mov
in
aam
fs
mov
pop
pop
sbb
jb
pop
jge
pop
xor
stos
movsb
out
lods
dec
incb
pop
in
into
xchg
jl
adc
jg
add
jge
int3
and
xchg
jge
dec
add
xchg
xchg
cli
and
cmp
and
stos
push
mov
xchg
fisttpll
add
sub
test
ret
xor
mov
xor
mov
and
inc
je
daa
sub
inc
push
cltd
xor
sbb
add
imul
cs
jge
ret
mulb
jnp
mov
mov
in
aaa
aaa
dec
mov
daa
inc
in
xchg
cmpsl
push
jmp
xchg
es
add
xchg
cmp
out
pusha
and
cmpb
push
shll
sub
data16
lret
cmpsb
sub
shll
adcl
adc
loope
cs
mov
rclb
mov
xchg
push
xchg
aaa
cmpsl
incb
jb
divb
add
xor
adc
sti
cmp
repz
fsubs
xor
mov
cmpsb
repz
ja
mov
imul
aam
outsl
jmp
sbb
cmp
and
in
dec
notl
pop
or
add
adc
inc
mov
aad
and
add
js
out
hlt
popa
xchg
es
jo
btc
out
xor
xorb
sbb
xor
jmp
test
scas
es
fmul
cli
fwait
inc
jecxz
jbe
jge
ficoms
pop
and
lret
pop
jns
xor
inc
fnsave
xchg
lds
xchg
push
cmp
ds
jge
insl
or
jecxz
push
xchg
mov
jo
push
mov
out
inc
add
add
cmp
add
cmp
mov
aas
jae
lret
sahf
int
mov
or
or
stos
mov
in
daa
pop
in
or
cmp
mov
ds
sarl
das
push
ret
sahf
cmp
or
push
and
fnstcw
push
or
popa
or
pop
into
mov
out
jle
jne
push
adc
jne
cmpsl
mov
incb
jae
lock
add
jecxz
adc
push
jo
dec
out
insl
or
pop
insl
dec
dec
in
call
cwtl
popf
ja
push
mov
jns
ljmp
xchg
dec
jo
test
xchg
cmp
pop
xchg
insb
pop
cmp
out
dec
xchg
dec
ret
hlt
push
test
adc
filds
gs
lea
xchg
ljmp
add
pushf
decb
jbe
mov
sbb
jno
inc
adc
mov
shrb
lret
addr16
mov
cmp
in
mov
or
loop
xchg
mov
mov
stc
loopne
popl
int
imul
or
mov
pop
stc
outsl
push
pusha
cmpsl
js
outsb
dec
cmc
addr16
loopne
push
lret
xchg
popa
add
sub
sbb
loop
pushf
shr
data16
adc
and
dec
sub
rcl
rcrb
jle
push
and
insb
mov
xor
mov
aas
cmpsb
sub
adc
aad
cmp
or
shlb
lea
mov
imul
ljmp
scas
iret
pop
leave
jecxz
test
jne
test
push
xor
mov
adc
bnd
in
mov
les
aas
jmp
pop
fisttps
outsl
dec
int3
lock
imul
lahf
mov
xor
lods
push
stos
pop
xchg
orl
stos
adc
into
leave
xchg
push
jge
sbb
inc
mov
dec
shl
call
fucomip
and
test
or
or
add
add
fs
into
loope
in
push
push
mov
push
push
and
js
xchg
sub
add
sub
inc
push
sub
out
ds
mov
sbb
mov
adc
sbb
cmc
int3
lds
jecxz
cmpb
loope
sbb
or
ja
ror
pop
inc
jno
psubusw
dec
xchg
jae
cmp
pop
push
addb
int3
sub
push
clc
int
sub
pop
mov
aad
inc
jne
jnp
dec
pop
ficoms
jl
cmpsb
pushl
popa
dec
fistpll
movsl
cs
sbb
movsl
pusha
hlt
sub
ret
or
push
mov
cmp
add
jno
xchg
xchg
or
sahf
shr
xor
faddp
popf
push
mov
jns
xchg
popf
adc
jnp
jmp
xchg
mov
push
mov
sub
addr16
pop
xchg
and
push
inc
jns
lahf
aas
nop
inc
sbb
mov
mov
in
mov
cs
mov
mov
cmp
pop
fsubrs
in
cld
cltd
clc
mov
jae
cli
and
into
lahf
out
daa
jp
adc
mov
orb
daa
pop
hlt
mov
adc
cmp
out
sub
jne
int3
add
mov
in
outsb
push
mov
in
xchg
lds
sahf
dec
cld
push
es
sbb
dec
cmpsl
and
cs
call
lcall
imul
sbb
cmp
or
cmc
mov
dec
xorl
repz
jne
xor
out
mov
jae
pop
sbb
insl
stos
notb
inc
cmp
cmpsl
into
repz
leave
imull
cmp
or
pop
sbb
mov
and
fcomp
xchg
sbb
xchg
out
inc
fisubl
fwait
into
sub
out
jo
xor
mov
inc
lret
lret
int3
sbb
mov
in
add
sub
imul
jle
test
enter
dec
loop
cli
out
and
mov
int
xor
ror
jp
inc
xchg
das
movsl
sub
pusha
sub
dec
xor
fidivl
mov
add
pop
pop
aad
out
rcpps
jecxz
mov
in
lcall
pop
jle
test
jb
jns
push
xchg
arpl
sbb
and
gs
mov
ficoms
andl
cmp
lret
filds
shr
flds
test
in
rcrl
js
lcall
sti
inc
jo
lcall
stc
mov
ficoms
lcall
jecxz
ljmp
sub
mov
mov
cli
mov
xchg
cmp
jecxz,pt
sbb
adc
mov
repz
mov
inc
mov
and
data16
push
adc
test
xorl
rol
mov
mov
push
rcll
and
sbb
xchg
into
push
sub
dec
out
pop
dec
out
pop
out
out
sahf
imul
outsb
aam
cmp
cmp
push
movsb
outsb
inc
loop
sbb
xchg
popa
push
test
cmp
add
and
hlt
fs
loop
iret
into
pusha
sbb
push
adc
xlat
mov
cmpsb
hlt
jb
push
inc
push
xchg
aaa
fwait
mov
es
xchg
fstps
push
mov
scas
out
sub
lods
sbb
pop
xchg
jge
sub
xchg
std
add
mov
cmpsl
cmpsl
lea
cmp
lods
in
adc
sti
xchg
mov
lcall
enter
dec
sub
repnz
sub
enter
sub
mov
fs
xor
insl
mov
outsb
mov
add
cmp
jmp
ds
mov
jb
dec
jmp
sub
adc
sub
inc
iret
mov
add
mov
push
scas
aam
popa
cmp
pop
mov
pop
pusha
jae
push
nop
test
add
ja
inc
cmc
and
mov
rcrl
shll
std
addl
or
xor
push
push
jnp
add
orl
jecxz
xlat
arpl
inc
xor
inc
aas
push
loop
lock
or
mov
scas
lahf
rolb
or
subl
hlt
in
xor
repnz
popf
mov
pand
rclb
xchg
test
test
push
bound
ljmp
hlt
lods
stos
xchg
sbb
mov
fldenv
inc
or
pop
mov
clc
test
clc
loopne
sbb
shlb
mov
push
mov
dec
pushf
and
inc
push
adc
movsb
ficompl
das
mull
mov
mov
dec
div
pop
jno
gs
mov
test
xor
push
cltd
or
lcall
lret
hlt
dec
pop
push
mov
xchg
lds
leave
sub
sub
pop
push
call
mov
into
pop
fldcw
xchg
jb
fwait
in
mov
cs
pop
cmpsb
jle
lea
aaa
nop
dec
outsl
rclb
out
jge
iret
jb
jbe
xor
sbb
mov
jg
inc
test
pop
es
ja
and
in
cmpsl
mov
stos
lds
cltd
scas
cmpsb
outsb
push
daa
out
lcall
out
xchg
dec
pop
jl
pop
dec
mov
or
adc
in
lods
xchg
cmpsl
mov
xchg
notl
fadds
jmp
cmp
and
ret
adc
adc
xchg
cli
shll
sbb
add
cmp
rcrb
int
loope
mov
stos
adc
jmp
jb
sbbl
pop
sub
fs
ja
es
or
and
popa
mov
pop
lods
and
inc
daa
dec
jns
or
add
sub
subb
mov
add
fdiv
sti
fidivs
push
pop
xchg
lahf
sarb
out
js
mov
rclb
scas
mov
mov
enter
pop
add
mov
dec
jle
lret
push
sbb
dec
fwait
pop
shrb
pop
imul
sub
sub
lea
dec
xchg
xchg
sbb
scas
sbb
sub
sub
pcmpeqw
or
out
inc
xor
push
jo
push
icebp
mov
cmpsl
rorb
ljmp
mov
scas
into
enter
pop
leave
inc
into
mov
push
shlb
xor
inc
dec
push
cwtl
mov
lret
mov
xchg
cli
std
adc
mov
orb
mov
mov
call
jmp
fisubs
shlb
loope
jecxz
dec
cltd
fdiv
inc
stos
inc
xchg
xchg
aad
hlt
stos
xor
adc
imul
lret
sbb
add
lcall
mov
xor
xchg
add
dec
cmp
pushf
vfrczss
push
aas
pushf
ss
add
mov
xor
jno
ds
and
xor
or
adc
movsl
bound
into
addr16
and
and
mov
mov
xchg
jge
rorb
jbe
push
mov
mov
sbb
ljmp
test
sti
nop
mov
rep
sbb
inc
xchg
sbb
push
mov
ret
add
inc
jge
js
arpl
and
mov
xchg
arpl
xchg
movsl
sub
aas
jnp
mov
stos
psrlw
popf
int
mov
and
out
mov
test
fwait
jl
xchg
mov
mov
inc
sbb
push
mov
add
test
fldenv
pushf
cmp
jmp
ja
cmp
push
lahf
insl
bound
aad
and
and
shlb
pop
push
rcr
inc
bound
mov
inc
fisubrl
xor
cmp
ret
imul
pop
fbld
hlt
cli
pop
cmp
mov
add
pop
cmp
push
adc
jg
mov
inc
and
daa
aam
outsb
call
push
insb
pop
jp
push
pop
daa
mov
add
xchg
in
aas
repz
popw
mov
push
xchg
mov
and
inc
adc
push
dec
insl
data16
mov
mov
xor
and
xorb
out
mov
sbb
push
xor
add
sbb
cmp
ds
pop
jne
repnz
pop
out
and
shlb
cmp
inc
pop
loop
add
adc
or
add
insb
push
out
cmp
imul
and
movsl
sub
daa
hlt
loope
pop
es
and
jnp
mov
push
leave
sub
xor
xchg
in
mov
test
bound
cmp
xlat
pop
loope
push
or
push
xor
push
mov
mov
ja
test
stos
push
cmp
dec
sarb
push
cltd
popf
lahf
or
push
je
fistpl
and
pop
out
sbb
pop
inc
and
pop
xor
sahf
jb
mov
int3
ret
roll
clc
mov
jne
xchg
cmpsl
jg
aam
or
mov
jne
std
push
mov
xlat
fdivr
std
cld
loope
arpl
push
pop
popf
sub
sbb
dec
xchg
sahf
pop
fcoms
repnz
ja
mov
pop
in
stos
decl
sub
xchg
and
pop
lcall
xchg
mov
add
inc
cli
mov
test
mov
call
pop
imul
out
dec
repnz
mov
jmp
add
loop
clc
ret
xchg
dec
mov
mov
imul
xor
in
repnz
xor
inc
mov
dec
inc
dec
hlt
cmc
mov
adc
push
ljmp
adc
rclb
mov
jbe
ret
fs
pop
xor
inc
in
loopne
xor
outsb
popa
out
and
push
hlt
lods
push
andb
iret
push
das
pushf
mov
nop
stos
jl
rcrb
or
and
pop
icebp
sahf
xchg
out
repnz
in
jnp
pop
clc
fisubrl
pop
scas
adc
sub
xor
test
das
popa
add
cli
pop
or
or
jbe
pusha
mov
rcrl
jle
aas
mov
cmp
out
xor
jmp
jne
test
mov
sbb
inc
adc
dec
mov
cmpsl
in
in
or
push
mov
add
cwtl
loope
and
lock
sahf
xor
js
cld
mov
inc
mov
sub
cmp
pop
dec
xor
mov
xor
fiaddl
adc
cmp
add
ds
fimull
mov
out
pusha
sbb
insl
enter
push
ret
lcall
pop
ds
repz
lret
add
bound
das
push
dec
mov
shl
sbb
repz
adcb
fcom
adc
stos
nop
ss
xor
mov
fcomip
testl
add
sbb
jp
insl
mov
idivl
out
and
fiadds
xchg
add
sarb
pusha
clc
add
jecxz
adc
jo
cmc
dec
out
cvtps2pi
aaa
int
mov
insb
sub
push
stos
cltd
sub
push
cwtl
pop
dec
push
push
jne
pop
cmp
jo
inc
push
sbb
cltd
fdivl
mov
dec
sbb
stos
adc
sbb
mov
orl
fcompl
rcl
xor
jns
imul
test
fmuls
lcall
jl
imulb
mov
mov
rolb
cmc
aaa
out
or
sub
mov
rcrl
ret
cmp
jb
cmp
xor
add
call
mov
test
sbb
push
fdivl
mov
cmp
pop
sbb
sbb
aaa
push
xchg
mov
push
stos
jmp
xor
cmp
mov
mov
jmp
jmp
and
insl
aas
lcall
xchg
add
mov
out
arpl
loopne
sub
subb
mov
push
jns
xor
mov
mov
aam
and
aas
cwtl
xchg
lahf
adc
rcl
add
pop
je
aam
outsl
dec
movsb
mov
out
push
fistpl
xlat
xchg
mov
dec
dec
enter
mov
stos
in
lea
mov
add
mov
sub
and
mov
and
cmp
dec
je
cld
sub
rcrl
test
popf
adc
push
fisttpl
in
dec
dec
mov
sub
stos
mov
inc
std
data16
das
jnp
call
and
rcll
insl
arpl
mov
ljmp
pop
out
sub
and
mov
outsb
dec
lods
in
jle
mov
data16
call
dec
add
mov
pop
fcoml
outsb
xor
hlt
pop
adc
mov
iret
cmp
push
xor
cmc
mov
repz
xor
movsl
push
aaa
stc
jl
aaa
push
mov
mov
jge
int
lea
pop
xchg
cmp
mov
adc
xor
ss
jmp
adc
in
mov
aas
add
fisubrs
and
xchg
mov
push
stc
inc
popa
cmp
imul
aam
jp
iret
icebp
inc
sub
push
dec
pop
pop
sti
cld
or
jne
dec
xor
xor
into
and
or
jne
inc
ss
mov
dec
pop
jae
add
mov
inc
xchg
add
sbb
arpl
or
jg
xchg
es
inc
mov
scas
push
inc
xchg
xchg
push
push
cmc
sahf
push
imul
dec
out
or
push
cmp
sub
sahf
or
ljmp
sub
data16
inc
fdivr
stos
repz
test
jge
dec
xchg
mov
stos
ret
lret
xchg
mov
dec
xor
fs
stc
pop
lock
lock
dec
pop
inc
mov
xchg
pop
cmp
inc
je
push
pop
mov
pop
cmp
ss
aas
lods
ffreep
lds
dec
cmp
jle
inc
insb
mov
fistl
out
testl
rcll
push
dec
sarb
xor
jne
mov
repz
jecxz
dec
out
leave
inc
push
dec
add
xchg
sub
push
adc
loopne
pop
out
int
mov
cmpsb
mov
rcrl
add
jl
pushf
sbb
push
loope
and
gs
dec
jg
scas
cmp
push
cmpsl
hlt
jecxz
adc
mov
xor
push
or
dec
push
gs
aam
and
pop
cli
xchg
filds
rolb
in
cmp
repz
xchg
jmp
cltd
sti
stos
mov
cwtl
outsl
test
lahf
xchg
cs
xchg
aas
or
out
repnz
push
daa
lahf
inc
pushf
push
mov
mov
lock
pop
loop
rcrb
mov
jl
std
rclb
cmp
test
and
insl
test
ja
pop
popf
jmp
jecxz
cltd
push
in
mov
xchg
jmp
push
jmp
or
mov
ja
push
stc
fwait
mov
pop
jo
cmpsl
jg
dec
or
out
mov
jle
cs
dec
sub
push
addr16
rorb
cwtl
and
pop
or
mov
pop
mov
popf
shll
cld
xchg
or
or
sbb
fcoms
mov
cmp
jno
in
sub
and
mov
int
int3
repnz
and
stos
test
insb
scas
rcrl
cmp
adc
xchg
cmpb
xor
mov
dec
sbbl
insl
ret
push
mov
repz
sub
and
xchg
jbe
mov
or
mov
movsl
cmp
adc
mov
pop
daa
pop
imul
aaa
jp
dec
mov
sub
xor
adc
sub
push
fcomp
and
aam
lds
popf
mov
je
sbb
and
push
incb
hlt
push
test
push
xchg
jae
cmp
imulb
push
pop
cmp
stc
add
push
je
test
and
add
pop
cli
int
pushf
sbb
mov
stos
loop
arpl
loope
cltd
xchg
cmp
ss
stc
mov
xor
pop
jns
pop
xor
adc
mov
bound
jo
sarb
rcrb
pop
cmpsl
fistps
mov
jo
cmpsl
mov
repnz
negb
out
or
fidivrs
mov
mov
xchg
mov
loopne
xor
push
sbb
movsl
mov
adc
xor
fs
mov
lods
and
in
sbb
xchg
push
inc
sar
push
jge
jle
in
in
pop
adc
fwait
pusha
gs
int
dec
fwait
movsb
mov
cmp
adc
orl
pop
xchg
push
leave
cmp
sub
cli
adc
sbbl
mov
imull
jle
jns
mov
xchg
call
xlat
push
mov
das
xchg
in
dec
movsl
xchg
ret
loopne
outsl
adcb
sbb
lock
push
mov
push
xchg
out
xor
sbb
in
in
dec
or
and
out
pop
lahf
lea
fisubrl
mov
lock
jnp
cmp
insb
add
lahf
call
xchg
jnp
arpl
orl
mov
outsl
in
jmp
insl
aas
adcl
data16
cmp
jl
mov
cmpsl
ret
shr
lcall
std
adc
scas
push
or
pop
sbb
xorl
mov
mov
jle
cmp
push
xchg
imul
loope
or
mov
clc
dec
test
xchg
xchg
cmp
out
add
mov
inc
push
mov
leave
out
xor
out
sbb
aam
pop
sub
popf
aam
sar
ss
fstpt
ja
add
xor
rcll
lods
push
xchg
or
add
jle
xor
les
in
xor
mov
aaa
push
lock
faddl
cmp
xor
out
call
or
cld
test
add
dec
loop
in
js
and
xchg
fildl
inc
mov
iret
mov
aad
lds
int
insl
fidivrs
cmpsl
pop
fnsave
adcb
arpl
iret
mulb
sarl
or
xchg
data16
mov
inc
sub
jecxz
dec
lret
add
mov
mov
fdivrl
sbb
paddw
insb
stos
or
in
scas
cmp
adc
jmp
and
repnz
ret
adc
push
mov
mov
test
sbb
ss
jo
fwait
sbb
jg
int3
mov
jl
test
pop
or
shrl
fsub
pop
shll
aaa
shlb
jae
jno
xlat
sar
mov
jge
mov
jo
outsl
iret
push
jbe
fisttpl
das
loop
cmp
jae
or
addr16
in
adcb
fcomip
cmp
jg
pop
xchg
cmc
mov
xor
lds
insb
pop
jne
add
pop
rcr
sub
push
sar
test
mov
xor
jno
ds
out
cmp
movsl
cwtl
testl
dec
mov
pop
imul
mov
and
xchg
sub
stos
add
fldt
sub
mov
nop
outsl
xor
repz
push
sbb
xor
call
inc
jmp
sub
shlb
lods
and
ret
jbe
sbb
or
push
xor
xor
add
loopne
cwtl
sti
test
mov
shlb
jmp
stc
inc
push
xor
adc
jg
xchg
jae
sahf
je
mov
and
push
fisubs
mov
xor
jecxz
les
pop
sbb
xlat
cmp
inc
adc
shlb
jmp
out
sbb
xchg
and
out
mov
and
sti
pushf
loop
stos
mov
dec
addr16
pushf
jg
out
ljmp
push
sub
inc
add
stos
aad
dec
loop
pop
xchg
mov
insl
lret
mov
jne
pusha
xchg
jae
sar
mov
dec
jp
add
jecxz
jmp
lahf
mov
roll
xchg
sbb
or
rcrb
adc
arpl
push
adc
cmp
scas
push
loopne
lret
les
push
jmp
rcl
sbb
cltd
xchg
xchg
mov
xlat
pushf
xchg
adc
in
outsl
bnd
mov
in
cwtl
and
repz
and
dec
lods
inc
mov
push
aaa
ja
pop
push
stos
fdivrp
add
push
in
jb
rolb
adc
dec
cmp
hlt
adc
pop
stos
insl
inc
aad
imul
dec
or
je
pop
in
in
add
flds
and
dec
mov
movsl
inc
pop
xchg
iret
imul
pop
mov
test
cld
je
enter
jmp
lea
lea
pop
cltd
popf
add
inc
ret
stos
fsubrs
loope
jae
std
fidivrs
repnz
mov
sub
mov
das
sub
and
ss
loop
pop
xchg
sarl
fidivs
cmpsl
dec
sahf
ret
cs
and
nop
xor
dec
js
mov
lea
test
lods
loope
jo
stc
mov
je
in
xlat
ljmp
cld
xchg
add
add
xor
aaa
sbbb
inc
and
pusha
xor
test
xchg
jmp
cmp
jp
rclb
ficoms
in
roll
mov
mov
fisttps
jecxz
xor
mov
xchg
fst
adc
testl
mov
mov
push
imul
ret
xor
cmpsb
jne
xchg
sbb
movsl
fiadds
testl
adc
shll
push
add
mov
cmpb
jle
adc
pop
fistl
sti
adc
cmp
test
push
dec
mov
lret
arpl
sub
lahf
inc
inc
dec
jns
xor
sbb
loop
push
out
orb
test
icebp
cmpsb
mov
inc
addr16
xchg
sub
mov
xchg
ja
mov
shll
xchg
jnp
stc
out
ret
mov
popa
icebp
mov
dec
xorb
cld
ljmp
adc
and
add
mov
push
out
sbb
inc
call
and
jns
roll
xchg
out
push
repnz
mov
push
sbb
sub
es
and
out
xor
test
mov
ret
cmp
fidivl
loope
mov
loop
pop
pop
inc
lock
push
fidivrs
ret
or
rcr
inc
cmp
jbe
ret
jno
imul
push
pop
je
int
cmp
test
js
pop
push
mov
cli
cmovg
ljmp
arpl
insb
cmp
cmp
xchg
mov
jl
fsts
cmp
orl
mov
mov
out
stos
xor
and
xchg
jl
enter
aad
mov
mov
lods
nop
cmc
jmp
jns
or
add
cmpsb
xor
and
push
sub
and
daa
bound
fxch
add
fnstenv
cmc
xor
jle
loop
xor
mov
cmovbe
in
roll
mov
mov
shrb
jecxz
pop
negl
into
aam
cmp
inc
or
cwtl
sbb
mov
pushf
shlb
push
and
jg
sbb
inc
pop
dec
mov
lahf
xor
jle
fldl
jp
and
sti
xchg
hlt
aam
movsb
xchg
add
js
jp
bound
sbb
and
daa
out
mov
mov
dec
rolb
sbb
jne
mov
push
loope
out
in
xchg
faddl
sub
int3
rcll
pop
add
dec
push
leave
pop
jle
xor
xlat
mov
cmc
insl
inc
and
and
enter
hlt
or
push
pop
jne
test
and
dec
xorl
add
sub
mov
mov
mov
out
notb
outsb
into
shl
or
push
push
xchg
sub
test
pop
decb
test
adc
push
std
mov
cwtl
xor
add
push
ja
outsl
jbe
pop
or
shlb
or
push
out
adc
mov
test
and
mov
dec
push
pop
mov
int
jno
daa
add
pushf
inc
mov
jne
data16
adc
jo
pushf
in
das
mov
push
out
pop
sbbl
push
inc
into
push
jg
movsb
mov
add
dec
insb
adc
insb
jle
cmp
adc
lahf
test
pusha
sub
les
jp
daa
loope
lahf
xchg
data16
lret
inc
xchg
mov
and
out
sub
in
xchg
inc
cmp
repz
ror
mov
dec
mov
xor
fwait
jae
sbb
push
sub
sbb
or
aaa
hlt
mov
in
pop
pop
test
sti
repz
xchg
or
pop
pop
inc
mov
push
mov
push
and
dec
add
jne
push
dec
push
mov
cmp
fildl
mov
pop
xor
cmp
jge
mov
mov
movsl
jmp
mov
cmp
jo
xor
call
mov
mov
cld
movsb
loop
inc
pop
inc
loope
mov
adc
out
data16
xchg
pop
and
and
js
cmpsl
rcl
les
inc
fcoml
jg
cmp
sbb
mov
or
sbb
fdivrs
dec
adcl
ret
and
sbb
jnp
mov
fcmovb
rcll
mov
sbbb
movsb
orb
and
jb
dec
xor
adc
fcomp
mov
push
fadd
scas
fistps
rorb
popa
lock
fsubl
push
and
js
or
jb
xor
inc
mov
or
add
push
xor
mov
jmp
cld
cmp
repnz
sahf
fwait
cmp
clc
dec
lahf
cmp
scas
js
sub
repnz
in
xchg
adc
sbb
imul
ljmp
mov
push
push
push
mov
ret
pop
mov
mov
inc
sub
xchg
jl
lahf
lret
and
push
std
pushf
stos
mov
ret
inc
shrb
lock
lds
and
ja
fmul
sahf
pop
or
into
inc
or
xchg
cmp
sub
jb
sbb
in
cs
aaa
mov
addr16
push
in
and
xchg
sbbl
pop
mov
pop
pushf
pop
adcb
sub
and
aam
push
mov
jmp
cli
mov
xchg
sub
mov
xchg
aad
pop
addr16
add
frstor
fyl2xp1
mov
mov
decl
scas
loope
outsl
daa
daa
push
lds
lea
sbb
icebp
sub
test
adc
lock
fistpll
enter
sub
jg
xor
cs
imulb
rcrl
int3
add
lahf
lods
iret
in
sub
ja
shlb
push
inc
cmc
mov
pop
aam
cld
sub
ljmp
sub
pop
or
cmp
test
inc
sarl
stos
es
sbb
sahf
push
sbb
js
loopne
or
inc
lods
insb
sub
test
xchg
pop
pop
cmp
popa
jle
aam
loopne
push
xor
mov
ret
mov
in
in
clc
sbb
sub
mov
fdiv
mov
push
clc
ficompl
fldt
adc
jp
sbb
add
mov
dec
cld
movlhps
push
lods
stos
push
loopne
leave
add
insb
pop
ss
in
jo
add
movups
mov
cmp
add
pusha
cs
popf
mov
cmp
test
push
xlat
pop
xchg
popf
xchg
dec
inc
push
dec
add
mov
sar
add
and
mov
sti
cmp
loope
jl
jo
clc
sub
sub
mov
sub
nop
hlt
push
sbb
mov
sub
pop
insb
cmp
jae
sub
pop
cmc
lds
ja
lret
push
push
fstp
roll
lcall
push
lret
rorb
cld
jmp
and
mov
shll
jno
fsubr
dec
jmp
cmp
ret
or
jmp
lcall
cmp
jns
outsb
xchg
mov
xchg
aam
ja
mov
push
std
fwait
lret
push
jo
insb
push
arpl
dec
test
jmp
fadds
movsb
ds
test
roll
fsubrs
testb
std
sub
xchg
test
add
mov
pusha
shll
imul
stos
push
bound
fsts
mov
popf
jne
dec
dec
ljmp
icebp
xor
push
scas
push
cmp
push
add
shlb
lea
iret
out
and
sbb
mov
dec
cmp
mov
subb
or
jns
incb
out
es
push
sbb
push
inc
sbb
stos
fidivl
add
imull
xchg
mov
xchg
pop
pop
mov
cli
addb
xchg
inc
mov
inc
jmp
ffree
xchg
inc
in
andl
in
xchg
sub
js
test
or
or
lock
dec
or
or
mov
jl
push
adc
or
dec
ds
or
add
jbe
pop
pop
stc
fidivl
sub
shll
and
sub
std
test
jle
dec
xor
jne
push
pop
lods
int
in
pop
enter
movsb
mov
rorb
cmp
aad
lahf
leave
inc
lahf
rol
push
scas
aad
mov
hlt
xchg
movntps
sub
clc
inc
orb
inc
fdivrs
mov
loopne
jmp
outsb
push
xchg
mov
mov
jb
ret
outsl
dec
jle
xchg
inc
push
cltd
aam
cmp
push
pop
ja
mov
jl
shll
stos
mov
mov
push
mov
adc
lahf
cmp
jbe
xchg
push
leave
xchg
int
arpl
jmp
cmpl
in
add
ret
lods
lods
lea
roll
mov
fs
loopne
jmp
mov
jp
mov
js
jns
lea
pusha
jae
cmp
negl
mov
scas
jae
shrb
mov
sbb
loopne
hlt
je
xor
test
jp
out
pusha
stos
loope
mov
fstps
mov
mov
ss
test
mov
into
outsl
ficomps
aad
sub
arpl
repnz
in
scas
movsb
test
jnp
stc
pop
test
sbb
cltd
sub
orb
mov
clc
dec
mov
out
pop
add
jmp
js
fwait
shl
inc
jl
xchg
add
jae
jo
jns
xor
xlat
aad
data16
aaa
lcall
push
andl
mov
lods
pop
cmp
push
dec
jmp
and
cmp
cmc
jmp
ljmp
dec
xchg
or
pop
pop
mov
sub
lds
push
out
push
jne
xchg
mov
lea
mov
imul
stos
sti
push
cmp
mov
test
jl
outsb
mov
xor
dec
add
cmp
xor
mov
rcr
lret
xchg
imul
sub
sbb
into
sub
mov
repnz
push
add
repnz
in
mov
ja
fmul
stos
jae
cmc
and
or
cmpsl
cwtl
cmp
aam
xor
inc
int
gs
rorl
arpl
lcall
mov
rclb
or
cmp
popa
mov
popf
mov
movsl
push
fdiv
pop
fdivrl
jge
sbb
xor
push
xor
inc
cwtl
test
ret
mov
cmpsl
dec
in
adc
aaa
insl
lahf
repnz
aad
fbstp
out
and
hlt
pusha
cld
fisttpll
or
fldl2t
pop
pop
push
adc
out
insb
insl
les
ds
cmp
jmp
gs
jae
arpl
jl
add
mov
inc
mov
and
sti
or
orb
push
add
and
pop
in
mov
jmp
mov
adc
cs
or
ficoml
lcall
rorb
arpl
fnstcw
rcrl
mov
mov
cld
mov
int3
ja
sbb
cmp
enter
mov
adc
out
popf
lods
push
push
xor
add
push
icebp
cmpsb
xchg
push
test
test
enter
cmc
push
ret
and
fadds
fnstenv
enter
mov
push
and
add
push
dec
and
mov
xor
fxch
lcall
loopne
icebp
sarb
add
inc
and
cmp
add
cmp
js
mov
outsb
cmp
adc
into
ljmp
jb
xor
pop
stc
xor
inc
push
xchg
jnp
pop
movsb
and
repz
scas
push
adc
fwait
fwait
stos
cltd
xor
cwtl
mov
add
sub
lret
leave
push
adc
mov
nop
push
xchg
or
decb
popa
lock
in
dec
and
movsl
pushf
mov
xor
push
and
mov
and
popa
cmp
adc
jmp
loop
jne
inc
mov
mov
cmp
arpl
movl
mov
int3
and
gs
adc
mov
dec
pop
cmpsb
or
out
adc
dec
inc
dec
mov
popa
push
fcompl
int3
lea
add
jo
jmp
jb
mov
adc
bound
cs
sarb
cli
add
fwait
call
int3
mov
shll
and
test
pop
sarb
rcrl
out
or
mov
push
jnp
outsl
dec
adc
jle
or
fistpl
lret
push
cli
push
adc
icebp
mov
add
adc
and
test
and
xchg
ds
mov
or
addr16
inc
push
popa
cmp
sti
pop
xor
or
roll
sub
xor
pop
dec
call
sub
push
push
jbe
mov
dec
and
sbb
icebp
mov
arpl
data16
call
pop
push
data16
ret
bound
ja
icebp
xlat
stc
push
or
rcrl
push
or
or
ja
jecxz
test
das
dec
push
push
insl
push
test
aaa
sbb
mov
xor
ds
xlat
shll
xor
mov
inc
push
gs
in
sbb
mov
lea
mov
jno
cmp
mov
jno
dec
xor
iret
lea
outsl
mov
jb
sbb
imul
dec
data16
push
hlt
xchg
dec
and
pop
lret
pop
mov
les
addr16
pop
sub
je
sahf
daa
sti
mov
data16
test
outsl
repnz
pop
shrl
and
jp
sbb
mov
inc
pop
test
ss
in
in
pushf
sti
in
push
cmpl
inc
push
inc
mov
xor
cli
lods
mov
mov
pop
int
jns
adc
mov
inc
sbb
jmp
jle
dec
repz
into
add
in
incb
mov
cli
fs
or
mov
insb
out
push
pop
dec
mov
dec
ret
ss
scas
mov
xchg
popa
pop
cmp
in
sbb
mov
loope
push
jo
push
and
add
and
mov
out
mov
mov
rorl
stos
rcrl
pop
adc
mov
and
fcomps
mov
xor
out
inc
stos
push
jno
or
mov
jnp
jb
jmp
push
inc
or
aaa
jo
xchg
push
bound
in
gs
leave
adcb
test
cli
sbb
inc
call
popf
add
rorb
dec
or
cld
and
out
jmp
scas
cli
std
xor
mov
xchg
popl
add
pop
dec
and
rcll
xor
add
mov
and
add
cmc
bound
jl
repz
cmp
sub
adc
push
lret
js
pop
sub
mov
add
out
jbe
ret
call
pop
inc
outsb
dec
xchg
jl
sahf
imulb
mov
packsswb
inc
out
and
ljmp
ss
mov
addb
adc
jnp
push
stos
xor
pusha
rolb
pop
pop
out
dec
lret
leave
aad
aad
jge
mov
movsb
xor
cmpb
inc
fistl
pop
xor
fcomip
and
ret
push
mov
cmpl
les
and
cld
fisttpl
sub
jmp
mov
pop
pusha
and
leave
js
push
loope
mov
pop
or
and
ja
adc
xchg
das
std
outsl
dec
test
sbb
fs
cmpsl
ficomps
es
push
adc
cmp
sbb
pop
out
sbb
sub
or
rcl
mov
lds
pop
inc
loope
stos
mov
push
inc
pusha
fld
pop
aas
and
dec
cmp
cmc
sbb
fstpt
fcoml
xor
movsl
pusha
mov
mov
lock
and
and
stc
dec
push
aam
in
dec
mull
or
mov
bound
dec
popa
cmp
or
fistpl
lcall
and
jnp
aas
rorl
js
out
dec
into
lcall
add
sub
inc
sbb
repz
fldl
imul
inc
adc
jl
ljmp
outsl
sub
push
test
rorl
lea
imul
cmpsb
or
sahf
imul
dec
lods
sbb
in
iret
dec
and
adc
sbb
push
xchg
pop
mov
mov
loope
rcrl
lods
dec
leave
addb
arpl
std
inc
inc
mov
call
scas
inc
movsb
in
scas
jno
sbb
sub
lds
popa
cmp
adc
cld
fwait
loope
push
add
movsl
jne
iret
test
and
aam
sub
jno
je
lret
push
mov
enter
shrl
cmp
js
push
imul
insl
inc
adc
mov
jp
pop
repnz
sbb
sbb
fiaddl
mov
lock
and
dec
jo
xor
movsl
xor
sbb
gs
mov
sub
cmpsb
add
xor
mov
pop
xlat
mov
jne
jae
xorl
lret
sbb
int
jns
in
and
mov
sub
movsl
fwait
shlb
mov
xchg
loopne
sub
sub
mov
sti
arpl
jp
and
iret
iret
xchg
mov
mov
lahf
mov
xchg
dec
lock
inc
xchg
dec
out
cld
cmpsb
iret
mov
adcl
out
in
cld
hlt
movsl
movsb
stos
mov
outsb
stos
in
and
and
mov
xor
adc
mov
xchg
jnp
outsl
andb
add
xor
lods
and
loope
je
mov
or
lds
rcl
sbb
lock
ss
aaa
add
aam
aam
sub
adc
inc
xchg
push
mov
add
cmpsb
add
icebp
mov
sbb
inc
lods
xchg
lahf
sub
stos
add
int3
jo
faddp
inc
push
push
inc
lret
mov
mov
pusha
cmpsl
sub
imul
inc
xchg
mov
mov
std
xlat
ret
jg
loop
push
aas
inc
sbb
sahf
or
clc
inc
jmp
int3
out
icebp
cmc
add
or
xor
jecxz
mov
dec
adc
dec
cmpsl
cmpsb
add
add
mov
pop
sti
pushf
fwait
ljmp
mov
lcall
aad
addr16
sub
andl
mov
mov
insl
adc
in
mov
outsl
xchg
ds
pop
rclb
xor
jno
gs
fwait
hlt
jg
mov
xor
sub
adc
mov
mov
pushf
mov
jge
mov
stos
and
jecxz
bnd
lods
in
jecxz
stc
in
xchg
sbbl
stos
hlt
jge
lock
in
pop
mov
cmp
xor
push
mov
cmp
cmp
fnstenv
pusha
push
xor
dec
stos
arpl
pop
fwait
ja
test
hlt
add
js
pop
mov
lcall
popf
imul
xor
push
rcl
lcall
decb
inc
ds
dec
scas
or
outsb
adc
cmp
sti
adc
jns
xchg
sub
jecxz
or
rcrb
sub
call
xchg
or
ss
push
sub
ljmp
xor
jo
sbb
inc
movsl
dec
mov
dec
fsubrp
sbb
jl
jle
mov
outsl
xchg
inc
fwait
xchg
mov
cmpsl
xor
push
lcall
pop
adc
jnp
cli
pushf
push
push
lock
aad
test
pop
dec
adc
outsb
xchg
aam
mov
xchg
in
mov
lods
push
stos
lock
in
pusha
lret
mov
cmc
insb
test
dec
mov
sbb
aas
jne
mov
aas
jbe
mov
mov
sub
test
xchg
incl
aas
dec
pusha
sti
int
mov
jno
sbb
xchg
int
test
xchg
movsl
addr16
int
lea
cmc
cmp
outsb
jle
xchg
in
mov
dec
es
nop
push
sub
add
and
data16
out
sti
pop
sub
in
fldt
jp
mov
mov
mov
xor
aas
cmp
inc
jne
dec
pop
jbe
loope
push
repz
mov
mov
mov
in
imul
pop
pop
xor
xchg
jbe
push
sub
xchg
add
paddb
ret
mov
jl
jg
sub
iret
mov
xor
dec
jnp
push
loope
fidivrs
inc
lods
adc
pop
fcomps
xor
cmp
cmp
jnp
pop
jb
ret
loope,pn
test
repnz
es
add
mov
fs
mov
or
push
push
nop
add
jbe
fistl
sub
loope
mov
ret
add
or
ficomps
mov
iret
xchg
xor
cwtl
loope
mov
lahf
pop
stos
pop
xor
xchg
mov
and
sbb
fisttpll
jl
out
xor
cmp
out
sbb
add
mov
jb
fidivl
lcall
cmp
mulb
loop
xchg
adc
sbb
cmpsb
pop
mov
cmp
push
fcom
jb
mov
mov
enter
dec
fnstcw
sub
xchg
mov
outsl
jnp
daa
inc
mov
mov
das
xchg
add
inc
icebp
fidivrl
movsl
gs
nop
ja
fwait
movsl
lret
int3
test
cmp
jb
jbe
ret
sub
fisubrs
inc
std
scas
lods
cmp
mov
movsl
inc
addr16
enter
inc
arpl
and
push
pop
ljmp
mov
mov
shrl
add
jo
aam
mov
fidivrs
xchg
and
ret
mov
jp
pop
leave
jecxz
and
sahf
loope
jl
push
dec
add
fidivs
push
in
adc
mov
jge
cmp
sub
pop
addr16
iret
int
fcmovne
je
lods
add
push
lret
sbb
mov
mul
repz
movsl
jb
mov
xchg
out
lods
jae
fsts
dec
nop
push
icebp
insl
insl
inc
add
jl
clc
cs
mov
mov
sbb
call
dec
shlb
pop
dec
add
lock
sub
mov
popa
dec
fistl
imul
mov
xor
aam
nop
jo
xor
pop
push
adc
fisubl
dec
fld
pop
in
pop
rcrl
cmp
fiadds
je
mov
mov
lds
jne
rcll
mov
cmp
or
pop
mov
les
sub
pop
and
jb
cmp
add
jne
out
orb
mov
mov
outsb
or
repnz
mov
in
jns
fwait
aaa
je
push
imul
jb
xor
jns
pop
shrb
ds
movsl
testb
in
jmp
mul
fidivrl
pop
jle
adc
scas
xchg
cmp
out
stos
mov
ja
shlb
std
cmp
or
pop
and
jl
xlat
and
outsl
sbb
xor
sub
rclb
add
add
fidivrs
push
xor
adc
test
in
ficomps
and
and
fldl
cmp
or
movl
xchg
xchg
add
jmp
test
mov
test
jns
add
nop
aaa
dec
ja
pop
jmp
or
and
xor
push
dec
loop
stc
inc
lret
jo
repnz
cs
adc
cmp
dec
jge
pop
call
repnz
jmp
into
inc
icebp
add
ficomps
xor
mov
mov
sbb
std
cmp
stos
lahf
sub
mov
rclb
pusha
inc
push
ret
mov
jne
lods
fwait
cmp
cld
aaa
negb
inc
mov
or
jecxz
in
imul
and
cs
gs
mov
ficompl
pusha
test
mov
adc
sbb
push
sub
adc
lds
lock
jo
xor
mov
cmp
gs
pushf
pop
roll
push
ss
clc
sti
or
imul
lock
inc
lds
cwtl
sbb
pop
mov
sub
inc
jae
jl
and
lret
dec
in
inc
inc
and
popa
dec
cmp
stos
leave
cmc
fcoml
lcall
cli
rcrl
or
fs
add
inc
mov
faddl
rcrb
lods
or
and
xchg
outsl
mov
cs
sbb
mov
ret
or
lods
in
into
imul
push
out
dec
jmp
cmp
imul
sbb
cmpsl
icebp
cmc
aad
jl
imul
mov
pop
fmull
jb
push
mov
outsl
in
and
fadd
aam
mov
test
mov
mov
xor
dec
adcl
js
sub
adc
mov
into
cli
inc
ljmp
sbb
sub
xchg
lea
shll
movsl
inc
inc
push
stc
xor
inc
pop
push
fsubs
pop
xor
push
mov
jno
aas
pop
pop
add
rolb
pop
imul
loopne
pop
test
jbe
arpl
push
and
push
sbb
pop
mov
or
dec
mov
xor
in
cmpb
jae
std
fidivs
insb
adc
mov
cmp
in
outsl
add
cmc
in
push
loope
lods
mov
pusha
mov
dec
mov
mov
scas
pop
leave
xchg
xchg
ss
inc
rclb
ret
or
sbb
and
cmp
pop
arpl
fisubrl
cmp
fs
mov
lds
add
das
mov
nop
loope
add
xor
mov
push
push
int
dec
in
sub
inc
adc
cmp
call
pop
mov
push
scas
xchg
pop
jp
dec
cltd
mov
fs
jp
popa
sbb
fcmovnb
sti
les
push
add
stos
jle
lcall
dec
cs
jle
jbe
sub
pop
push
popf
ljmp
or
repnz
out
sbb
mov
into
mov
out
pop
fimuls
in
cmpsl
sub
loop
push
fmul
mov
icebp
xor
push
xor
sub
add
pop
jbe
mov
int3
cltd
pop
addl
loope
jecxz
ja
mov
subb
mov
inc
mov
test
repnz
push
xorb
add
fisubl
sbbl
mov
repz
orb
sbbl
icebp
xor
test
mov
jecxz
es
mov
jnp
data16
xchg
sbb
fisttps
popa
mov
test
nop
inc
pop
and
mov
push
je,pt
aaa
mov
ret
rcrl
push
cltd
inc
mov
dec
inc
xchg
mov
shrl
xchg
mov
in
pop
xchg
and
sub
arpl
fnsave
or
call
mov
and
xchg
iret
xor
mov
test
fldcw
or
cmp
jmp
loope
adc
inc
outsb
int
orl
sub
cld
add
mov
jnp
vunpckhps
mov
in
pushf
sub
psubusw
inc
scas
jo
test
cltd
mov
mov
nop
add
jp
cmp
ret
pop
loop
ljmp
push
mov
les
pop
std
sbb
out
leave
jp
push
adc
cltd
xor
dec
lcall
adc
das
fistpl
xor
lea
lods
aas
mov
stos
loopne
cmpsb
adc
stos
or
sbb
pushf
test
adc
das
mov
cmp
orl
rorb
in
stc
push
movsl
in
sbb
add
call
add
mov
push
mov
cmp
jnp
xchg
mov
outsb
mov
sbb
fildl
inc
test
outsb
popa
mov
scas
inc
icebp
out
movsl
xor
jg
jnp
test
cmp
loop
cmp
enter
push
mov
jo
cli
bnd
into
fwait
hlt
popf
or
cmc
call
or
test
mov
gs
mov
cmp
iret
cltd
and
ja
dec
xchg
repnz
mov
data16
ss
mov
in
xor
or
test
cmp
lods
jnp
mov
sbb
popa
add
sbb
xchg
sub
loope
push
pop
jg
jg
test
jbe
pop
cmp
sahf
mov
xor
pop
sti
pop
orl
jl
repnz
or
jo
scas
inc
sbb
cmc
xchg
ror
xor
dec
incl
int3
insl
xchg
dec
rorl
jp
dec
dec
pushf
mov
mov
loope
xor
xchg
in
out
xor
fcmovb
mov
iret
sub
xchg
mov
in
cmp
aam
push
push
in
xlat
sub
push
push
lds
aaa
lret
mov
jmp
into
aas
pop
stos
mov
adc
jl
mov
mov
add
je
adc
mov
pop
inc
loop
out
insb
loope
hlt
mov
xchg
div
push
fcoms
lods
or
out
insl
lahf
stc
sbb
sbb
pop
mov
xchg
scas
xchg
movsb
mov
mov
push
xor
cmp
cmp
icebp
lcall
aam
jmp
rdmsr
shr
mov
or
adc
sbb
jno
sti
into
les
inc
mov
xchg
adc
jle
aas
or
pop
add
mov
push
jge
xchg
or
add
jbe
loop
icebp
out
sbb
lods
push
mov
dec
clc
mov
int3
mov
add
cmp
jp
decb
push
es
iret
call
test
mov
cmc
cmp
ljmp
mov
popa
arpl
cmpsb
outsl
je
dec
in
sub
and
pushf
pop
pop
das
pop
lret
jbe
or
adc
out
adc
out
or
cld
js
inc
or
in
sahf
mov
bound
cs
arpl
adc
mov
push
out
orl
dec
adc
lahf
aaa
xor
lret
push
shlb
xchg
and
mov
stos
inc
je
loopne
into
mov
jge
push
pop
mull
cmc
dec
push
jns
jp
loopne
push
movl
testl
jno
mov
movsb
sub
not
xchg
mov
fs
stos
push
and
stos
ficoml
pop
jbe
push
cwtl
pushf
jb
aam
subl
cmp
xor
push
stos
and
mov
bswap
sub
jbe
inc
insl
or
imul
lods
cli
add
push
fisttps
cmpsb
lock
xorl
xor
fwait
mov
add
ljmp
and
std
sub
gs
call
enter
es
pop
int
daa
inc
in
bound
arpl
jle
and
sbb
popa
lea
mov
push
outsb
dec
std
in
iret
arpl
in
mov
fiadds
pop
mov
sti
cli
outsb
adc
or
push
push
daa
das
cld
leave
fnsave
enter
mov
inc
into
into
adc
sub
in
cmp
push
sub
repnz
sub
es
inc
hlt
jecxz
inc
popf
stos
adc
aas
dec
pop
negb
xor
and
cmp
push
js
incb
mov
in
mov
inc
fnstsw
xchg
nop
lcall
lds
scas
std
adc
jg
into
jp
rclb
daa
notb
addl
sub
inc
fiaddl
push
mov
adc
dec
loopne
gs
aas
loopne
sub
dec
inc
test
adc
shrb
and
xor
cmpsb
orl
add
push
push
cmp
cmp
cld
push
jl
adc
mov
fbld
lret
mulb
fs
rolb
mov
pop
data16
adc
loopne
loope
cmpsl
push
jmp
addr16
lret
xlat
push
adc
repz
adc
stos
adc
adc
fmull
xchg
inc
mov
cmp
pop
jmp
andl
negb
pop
jle
or
lret
and
lods
mov
scas
outsb
dec
xlat
cld
push
into
inc
and
sbb
enter
and
jecxz
sbb
pop
sub
dec
or
pop
and
fiadds
jae
gs
ret
xchg
pop
mov
xor
push
fisubl
aaa
cli
ljmp
repnz
test
mov
addl
insb
jae
cmp
nop
scas
xchg
popf
fdivs
inc
shrb
inc
inc
addl
test
cmpsl
ds
jo
lahf
mov
test
fsubl
repnz
mov
je
mov
iret
int
dec
std
popf
lahf
pop
fstpt
test
dec
push
insl
out
push
cmpsl
add
add
ficoml
iret
jmp
inc
sbb
fistpl
addl
movsb
outsl
fcompl
or
stos
fdivrl
movsb
scas
icebp
nop
clc
jl
or
and
mov
jle
pop
sub
out
dec
or
push
or
dec
jmp
aam
imul
jmp
dec
faddl
xabort
rorb
loopne
inc
sub
sbb
xlat
sbb
pusha
daa
and
xchg
stos
enter
pop
int
outsb
in
xor
push
mov
dec
addr16
pop
jno
jl
popf
jecxz
cmp
mov
data16
xor
dec
icebp
push
shll
adc
xchg
cmpsb
cmpsl
xchg
push
lods
stc
pop
xchg
test
sbb
adc
loopne
and
xchg
dec
mov
cli
fs
repnz
xchg
lds
mov
fcompl
and
shrl
pop
adcl
outsl
jae
sbb
scas
imul
and
xlat
jnp
out
stos
inc
aaa
repnz
shll
cmpsl
mov
push
mov
xor
jo
mov
add
in
mov
pop
cltd
and
negl
fs
xor
sub
adc
pop
mov
flds
or
cli
adc
mov
sbb
jae
repnz
mov
popa
xchg
push
movsl
les
push
in
hlt
pop
sarl
cwtl
aad
sub
xchg
lock
dec
enter
lcall
pop
into
ss
cld
adc
adc
push
dec
movsl
in
nop
imul
mull
test
mov
notb
sbb
mov
es
jle
popf
sub
push
add
popa
adc
fstpl
stos
xlat
mov
jbe
or
jmp
xchg
int3
mov
fidivs
rcrl
in
out
mov
cmp
sub
idivl
movhlps
shrb
xor
push
cmpsb
xchg
popa
jne
xchg
das
outsb
push
stos
and
cmp
shrd
ret
aaa
ficomps
pop
out
inc
shlb
mov
and
cmpsb
and
push
in
xor
adc
push
lea
sub
xchg
dec
xchg
sbb
dec
das
dec
and
addr16
cmp
pop
repnz
xor
and
nop
mov
call
adc
and
push
mov
sbb
bound
dec
mulb
pop
inc
mov
fcoml
pop
or
das
pushf
gs
pop
aam
scas
addr16
in
lds
cmpsl
outsb
divb
clc
mov
and
mov
cmpsb
jle
out
sbb
jnp
iret
cmpl
mov
mov
mov
push
into
jg
aad
xchg
aaa
jl
sbb
cmpsb
repnz
clc
jmp
mov
out
movsl
add
addb
test
cmpb
fdivrs
mov
xchg
inc
xchg
sub
sahf
bound
addr16
pop
xchg
call
inc
inc
sub
es
pop
xchg
xchg
jne
adc
int3
mov
and
or
push
xor
mov
mov
movsl
push
cli
gs
enter
lcall
xchg
insl
in
mov
flds
mov
push
ljmp
push
cmp
sahf
cmp
push
or
ds
mov
lret
insl
inc
jae
aas
sub
lret
cld
push
scas
stc
orb
adc
andw
inc
outsl
sub
add
loop
test
or
repz
xchg
xchg
jecxz
xor
lods
hlt
jae
pop
push
jle
xchg
stc
mov
xor
mov
jmp
dec
push
shl
sbb
adc
js
mov
push
incl
mov
mov
push
les
cmpl
jae
cmp
add
jl
pop
insb
and
cmp
or
ficoms
push
mov
mov
sbb
pop
xchg
xlat
insl
cmp
pop
pop
xor
jo
push
fbld
sub
test
adc
xchg
jb
movb
jb
out
addr16
jo
inc
jl
cmp
fldcw
mov
inc
outsl
aam
outsl
sub
in
fnstcw
dec
inc
mov
pop
cmpsl
clc
ja
jge
pushf
cmc
xor
adc
adc
addr16
mov
adc
dec
xor
in
xor
scas
lcall
dec
cmp
fucomp
insl
in
ret
imul
incl
sahf
pop
and
je
loope
in
ljmp
dec
lcall
in
jnp
and
xor
dec
xor
testl
jp
adc
push
fmull
sbb
xor
mov
xchg
scas
daa
and
arpl
outsl
aaa
inc
or
cmpsb
cmp
jno
push
scas
insl
jno
push
sub
cli
adc
or
pop
pusha
xor
sbb
mov
jns
jge
fisubs
lds
in
mov
jecxz
ljmp
mov
mov
pop
pop
add
mov
mov
and
mov
jge
cmpsl
daa
out
mov
sbbb
jp
lods
jns
pop
stos
push
cmpsb
inc
fidivrl
mov
xor
pusha
shlb
lds
div
sbb
cmp
repz
in
cltd
inc
xor
push
xchg
loopne,pt
jecxz
imul
dec
mov
mov
push
aam
cmp
aaa
dec
cmp
mov
ret
icebp
mov
jge
dec
iret
cmp
mov
pop
std
loop
cmp
mov
jl
adc
adc
in
jmp
daa
dec
roll
mov
push
test
fsubrs
adc
push
push
out
je
shll
addr16
outsb
dec
or
pop
aam
xor
call
mov
addr16
xor
mov
cmp
jnp
mov
aas
call
inc
pusha
ret
and
push
into
push
and
ret
mov
add
and
in
fidivs
int
xchg
xor
add
mov
lret
jae
mov
mov
lret
mov
out
and
out
or
sbb
jle
ret
int3
loop
sbb
push
adc
sbb
sub
andb
sbb
arpl
or
js
mov
cwtl
scas
adc
mov
mov
sub
sahf
outsb
loopne
loopne
test
inc
xchg
cs
xor
mov
or
add
aas
inc
mov
cltd
add
sub
mov
aaa
movsb
sahf
mov
repnz
outsb
ljmp
ljmp
rcrb
ret
sbb
das
push
ljmp
ficoml
mov
xchg
pop
mov
stc
jne
mov
leave
movsb
dec
dec
add
test
cmpl
orl
mov
shl
pop
movsl
jnp
stc
in
mov
movsb
hlt
sbbb
mov
out
adc
dec
aaa
mov
sbb
adc
sub
jg
pusha
pop
fs
adc
dec
mov
lcall
pusha
lea
fnstsw
mov
or
mov
xchg
movhps
inc
je
push
daa
jge
dec
adcb
inc
iret
push
cmpsb
and
sub
inc
sbb
testb
sub
scas
xor
insl
fidivl
fistpll
pop
fdivr
loopne
ds
pushf
cmp
mov
lods
inc
xor
jnp
fcmovb
outsl
jmp
pop
std
fadd
fistps
fists
std
jns
pushf
or
ret
cwtl
aaa
jge
pop
mov
push
arpl
pop
scas
xor
push
cmp
xchg
sub
lahf
mov
mov
insl
xor
nop
testl
call
dec
in
or
cmp
sub
pushf
shll
sbb
scas
jmp
push
push
nop
xchg
sahf
xchg
test
jge
es
popa
clc
insl
pusha
sub
out
jne
lcall
sub
cltd
or
jge
jmp
in
inc
sub
mov
pop
fcmovb
mov
dec
stos
xor
hlt
popa
sub
push
or
ljmp
fsubs
je
sar
xchg
lock
inc
cld
push
das
mov
fdivrp
add
or
xchg
cmpl
xchg
push
outsb
push
adc
ljmp
mov
cmp
popf
pop
in
iret
in
mov
mulb
add
imul
movsl
xor
dec
es
dec
scas
test
lcall
mov
mov
cmp
int3
xchg
inc
pop
xlat
jp
fdivrs
orl
add
dec
ljmp
inc
xor
movsl
insb
inc
or
mov
xchg
jle
stc
bnd
xchg
mov
jae
jecxz
push
aaa
mov
and
icebp
rorl
mov
mov
inc
jp
push
push
shl
or
fisttpl
ret
add
int3
lahf
ss
pusha
popf
pop
dec
loope
mov
jge
pop
jle
jno
test
push
fwait
adc
mov
xchg
add
push
filds
xchg
pop
add
push
mov
jae
fstpl
notl
or
cmp
cmp
inc
addr16
push
bound
lcall
cmpsl
sub
out
push
gs
cmp
ljmp
jp
rol
sahf
stc
sbb
lahf
outsb
xor
push
cltd
pop
or
les
pop
fdivs
adc
xor
push
or
aas
mov
and
push
aaa
lret
jae
shl
test
roll
or
xchg
int
mov
xchg
div
jle
insb
arpl
jge
cltd
bound
lret
test
cmpsb
xchg
sbb
cmpsl
sbb
loopne
jl
dec
cs
adc
repz
jecxz
sahf
iret
mov
mov
jge
idivl
test
mov
fwait
cmp
sahf
test
ja
sbb
jbe
cld
push
sarl
fdiv
jo
add
int
cmp
cvtdq2ps
dec
iret
xor
push
jo
mov
fidivrs
sbb
popf
shrb
or
icebp
sub
lret
mov
pop
xchg
sbb
pop
sub
xchg
xchg
fs
xchg
js
test
add
repnz
pop
leave
xor
xor
jne
pop
test
dec
into
fsubl
ss
jb
arpl
cmp
mov
cmc
pushf
sub
xchg
out
inc
std
adcb
jmp
faddl
pop
adc
mov
or
subb
pop
daa
in
lcall
or
add
lahf
lea
lcall
mov
fstl
adc
sub
mov
pop
fcmovu
sbb
mov
mov
pop
dec
push
loope
or
push
jb
dec
jg
mov
inc
ds
imull
cmp
lcall
xor
push
out
scas
into
arpl
sbb
shll
test
and
add
sub
das
lods
add
insb
rolb
jle,pt
xor
push
pop
adc
in
push
push
loope
jns
cmp
pusha
inc
repz
jae
or
aas
imul
pushf
mov
lods
in
mov
shll
sbb
mov
gs
dec
xor
nop
and
out
add
lods
enter
xor
fcoml
dec
addl
je
addr16
jecxz
xor
sub
arpl
icebp
and
xor
mov
xchg
test
cmp
lcall
mov
ret
sub
xor
fidivl
or
inc
movsl
cld
mov
jns
pop
dec
inc
js
xor
fiadds
mov
rol
or
sbbb
dec
enterw
add
mov
arpl
lret
addr16
add
push
push
sub
adc
lds
jl
mov
xor
in
cli
jge
ds
pop
stos
mov
fdivr
ljmp
push
add
cmc
rcrl
pop
bnd
popf
mov
ja
and
or
stc
add
push
push
fcomi
dec
pop
dec
or
inc
stos
sarb
pushf
mov
pop
ret
sbb
pop
std
mov
xor
mov
fldenv
sub
push
into
out
add
stos
sub
sahf
shrl
xor
push
std
rcl
cltd
mov
mulb
lods
mov
jns
popf
das
mov
fadds
push
pusha
sub
movsl
pop
inc
je
popa
push
xor
andl
ret
and
add
jge
cs
or
mull
outsb
fcoml
inc
and
xchg
mov
inc
mov
mov
push
fimuls
data16
jle
push
test
fcmovu
sbb
adc
sarl
cmp
adc
das
sub
test
js
mov
dec
jmp
xor
adc
dec
jp
or
jnp
add
cmpsb
clc
sbb
arpl
sub
inc
xchg
add
daa
xor
xlat
pop
push
and
jae
jecxz
jmp
divb
lock
fs
mov
cmp
mov
outsb
add
ficompl
adc
xchg
xchg
jmp
js
dec
sahf
jno
lea
hlt
dec
out
sub
jne
fists
shr
jae
xor
mov
xchg
and
imul
cmp
xchg
or
push
fs
rcrb
push
hlt
pop
xchg
or
add
sub
cs
cli
in
cs
lret
leave
inc
jnp
jp
inc
lods
iret
cmp
outsb
sub
pmaxub
insb
sub
icebp
addb
xor
mulb
xchg
add
push
push
pop
fists
dec
jp
mov
and
jae
sub
stos
xchg
mov
in
ret
sahf
xchg
adc
iret
jnp
and
cmp
pusha
aad
xchg
or
shlb
mov
xlat
shlb
dec
pop
ds
test
push
out
sub
inc
adc
lahf
add
idivb
inc
gs
cmp
pop
shlb
or
inc
mov
inc
fisubrs
js
and
xor
shrl
movsl
ja
mov
cs
sub
dec
lds
pmaxub
out
push
lret
idiv
repnz
sbb
mov
jmp
das
popa
std
addr16
sbb
adc
jo
cmpsb
or
stc
or
push
popa
sub
clc
test
int3
mov
lahf
les
xchg
sbb
fcmovbe
sahf
in
adc
lods
outsb
mov
sbb
stc
jp
sti
pop
jno
mov
sub
sahf
ficompl
or
pushf
xchg
aaa
les
mov
mov
std
or
shrl
fwait
pop
inc
insb
pushf
inc
push
push
push
adc
in
inc
pop
shlb
xchg
xchg
mov
push
clc
mov
sete
and
adc
mov
cmpsb
inc
inc
hlt
rolb
cltd
or
loop
mov
jge
jmp
push
sub
fdivrp
pop
mov
xchg
aas
lods
cmp
fdivs
es
mov
xchg
cmp
push
lds
pop
out
lea
lahf
cmp
dec
add
ja,pt
sbb
inc
push
inc
mov
xor
mov
ret
addb
cmp
xor
and
mov
xor
mov
sbb
dec
stos
das
mov
xchg
fstpl
testb
ret
xchg
out
jbe
ficoml
testl
pop
xor
jnp
dec
out
rorb
xlat
loopne
xor
cmp
outsl
sahf
enter
test
loopne,pn
bound
sahf
jae
lret
xchg
mov
arpl
lods
xchg
inc
mov
pop
inc
jle
xchg
bound
jge
cmpsl
int
dec
xor
aas
lds
and
push
loop
mov
xchg
mov
adc
push
lods
add
or
int
stos
sub
mov
stos
out
lret
cmc
cmpl
fnstcw
insl
xchg
add
sti
pop
mov
mov
push
jnp
ss
push
mov
cmp
paddsb
jnp
inc
test
pushf
pop
sub
xor
insl
inc
add
sub
mov
dec
or
sbb
std
or
or
dec
jns
xchg
mov
or
pusha
inc
inc
jp
cmp
cmp
mov
sub
xchg
push
scas
dec
arpl
push
rclb
cmc
pop
mov
jp
repz
test
and
lahf
sbb
hlt
mov
std
sti
in
sub
sahf
test
test
add
mov
mov
xchg
out
cwtl
movsl
stc
and
pop
jecxz
cmpsb
fchs
jmp
sbb
mov
rcrl
lret
and
jno
dec
xchg
jns
iret
inc
ljmp
cmpsb
divb
int3
stos
gs
pop
jp
stc
cmp
lcall
add
fcomps
pushl
shrl
shlb
adc
push
xchg
push
clc
and
push
sub
mov
sub
movsl
sbb
xchg
xchg
sbbb
sti
test
mov
enter
jge
cwtl
sbb
mov
xlat
sub
xchg
addr16
pop
or
push
xor
mov
and
cmc
jmp
xchg
aaa
cmpsl
xor
rol
and
movsl
xchg
xchg
and
out
mov
sub
sbb
scas
push
and
cmp
popf
imul
in
add
outsb
add
incb
inc
or
gs
pop
mov
leave
jae
push
lea
rorb
mov
fstpt
xchg
mov
jge
pop
or
aam
sub
ljmp
add
in
aaa
cmc
xchg
pusha
cli
jne
loopne
mov
push
xchg
pop
sbb
pop
cmp
pushf
sbb
push
or
push
pusha
ret
mov
lods
rcrl
xorb
xor
jle
call
jno
dec
sub
nop
dec
aas
push
cmp
loope
scas
mov
push
in
fsubl
mov
out
and
subb
in
das
sub
xor
mov
add
mov
lds
adc
dec
ret
mov
ret
cmpsl
xchg
int
xor
cs
es
adc
mov
and
mov
aad
movntps
in
cli
pop
or
sub
add
or
push
stos
dec
stos
out
mov
movsl
imul
mov
inc
sbb
mov
mov
ds
inc
sbb
insl
cli
addb
mov
push
outsb
adc
fcoml
pop
cmpl
test
cs
and
cmpsl
sub
sti
out
xor
dec
cs
jle
xchg
xor
inc
add
jmp
insb
shl
flds
push
jge
fldenv
ss
imul
rolb
ret
sbb
push
xchg
add
sbb
xchg
ret
inc
mov
jl
jb
stos
or
adc
push
and
int3
mov
stos
pop
cmp
insl
xlat
addl
int3
cmc
sub
scas
add
mov
in
aaa
push
mov
shrb
out
aam
xor
mov
outsl
orb
inc
add
jg
scas
pop
xor
xchg
mov
in
dec
mov
jne
push
adc
xor
mov
inc
std
data16
pop
xchg
sbb
cmpsl
mov
jp
shll
scas
xlat
inc
ret
ljmp
xor
inc
sbb
lea
jb
lret
mov
dec
inc
dec
mov
lods
pop
in
pop
les
inc
addr16
dec
jecxz
out
stc
or
ss
outsb
in
test
setno
mov
shlb
out
aaa
push
fidivrs
adc
mov
nopl
jbe
xor
das
jmp
scas
in
pop
lahf
sbb
add
fwait
mov
fstpl
pop
xor
mov
mov
push
aas
hlt
cwtl
push
cld
xor
fildl
jl
mov
xchg
in
insb
loopne
cmp
push
mov
lock
aas
xabort
subl
push
jno
ret
stos
xchg
push
mov
push
inc
sbb
add
inc
adc
or
test
xlat
and
clc
adc
ss
lods
testb
sbb
xchg
out
nop
adcl
xor
mov
fnstsw
in
mulb
jp
popa
pop
sub
addr16
nop
push
je
ljmp
xchg
mov
dec
push
filds
je
mov
mov
out
push
mov
out
inc
arpl
cmc
push
fsts
add
jne
movsl
arpl
push
dec
iret
aad
cwtl
aas
ja
pop
sbb
mov
push
pop
xor
loope
stos
inc
inc
lret
push
orl
dec
cmp
inc
scas
out
mov
xchg
sti
jb
roll
insl
test
add
aas
adc
or
loop
stc
sub
adc
sbb
lmsw
pop
cmp
imul
leave
push
jne
out
pusha
pop
push
nop
jne
fadds
ljmp
jg
sub
jb
adc
add
or
sub
idiv
loop
mov
stc
mov
ret
and
push
dec
mov
shll
je
ret
inc
xlat
cli
shll
push
daa
xchg
enter
and
dec
xchg
test
lods
pop
dec
add
call
xor
inc
sub
dec
pop
lcall
xchg
sbbb
pop
pop
shrb
mov
inc
adcl
repz
roll
popf
mov
cmp
insl
sub
outsb
jecxz
aas
mov
les
cmpsb
or
stc
stos
push
or
mov
xchg
add
sbb
mov
inc
mov
xchg
in
xchg
inc
sub
hlt
leave
fidivl
cmp
inc
stc
imul
add
popa
xchg
ret
xor
pusha
in
ret
dec
idiv
push
add
adc
sti
or
insb
cmp
adc
or
mov
xlat
in
jmp
testb
aam
mov
mov
ljmp
xchg
cs
dec
fidivs
push
int
cmc
lret
aad
adc
hlt
and
arpl
add
cli
cli
mov
mov
subb
cmpsl
add
mov
imul
lea
xchg
out
add
push
pop
mov
fwait
loope
push
popf
xor
jb
pushf
mov
adc
loop
into
jns
insl
dec
ss
es
mov
psllw
idivb
or
jae
stc
in
stos
xchg
cmp
insb
lock
xor
jp
loop
push
mov
xchg
mov
push
jns
adc
nop
dec
mov
sbb
mov
sub
lret
cli
rcll
jns
std
and
inc
dec
fnstenv
xchg
jns
fnsave
xchg
int3
repz
push
in
mov
xor
xor
jmp
pushf
dec
out
cmpl
sahf
sub
adc
lods
mov
inc
push
xchg
push
jge
fadds
mov
movsl
sub
push
mov
inc
mov
xor
jbe
shl
loope
mov
test
fdivrl
cmp
dec
mov
jmp
jne
jae
test
push
negb
ds
stos
jmp
pop
xor
leave
shll
mov
cmp
xchg
negl
unpcklps
push
xor
rorl
dec
inc
mov
cmp
mov
popa
and
cmc
inc
lahf
xchg
loope
mov
insb
repnz
dec
shl
xor
jge
out
test
mov
addb
mov
adc
test
xlat
call
movsl
or
jne
rcll
dec
shr
adc
scas
fwait
add
xchg
inc
movsb
ljmp
lret
push
jbe
push
sbb
cs
fnsave
pop
sub
xor
jno
inc
mov
in
push
scas
xor
icebp
outsl
aad
cmc
dec
push
adc
or
cmp
mov
dec
cmc
dec
jg
jnp
bound
testl
mov
mov
clc
xor
mov
jno
subl
mov
add
imul
or
mov
adcb
inc
jo
push
pusha
sbb
enter
dec
pop
cwtl
dec
pusha
mov
in
int
pop
push
orl
insl
leave
lret
mov
adc
das
shl
pop
jmp
daa
mov
in
cmp
sub
cmp
in
jp
rcrb
lds
and
inc
or
clc
jge
lods
push
hlt
or
imul
xor
jae
leave
jmp
inc
inc
inc
mov
leave
fnstsw
sbb
jp
sar
jb
ljmp
and
adc
fisubrl
cwtl
scas
jmp
cmp
mov
stos
adc
push
loop
mov
stos
int3
and
insb
ss
fistpll
mov
xorb
jno
arpl
pop
es
ljmp
fbld
insl
sub
enter
or
mov
jo
mov
push
xchg
shll
movsl
cltd
out
cmc
addr16
test
ja
adc
ret
or
or
adc
lret
inc
das
gs
in
mov
mov
dec
ds
pop
pop
das
jb
pop
pop
mov
punpckhdq
stos
repnz
xchg
add
imul
xlat
push
iret
stos
mov
fisttpl
sbb
notl
scas
bound
outsb
and
xchg
xchg
xchg
xchg
data16
jmp
jns
inc
or
mov
les
mov
aad
orl
xor
inc
les
decb
mov
mov
dec
mov
addr16
das
or
jl
cs
and
jns
ficomps
cltd
pop
xor
fs
mov
inc
sub
aas
shlb
pop
inc
bound
imulb
jns
data16
nop
pop
dec
pop
idivl
xor
mov
lcall
mov
test
ret
mov
cmp
iret
or
into
imul
cmpb
push
mov
imulb
out
push
loope
jmp
push
sub
adc
pop
testb
rcrb
dec
roll
in
push
xchg
jmp
xor
gs
in
call
sbb
mov
imul
lahf
movsl
inc
out
push
cmp
jp
cwtl
xor
mov
add
push
in
push
les
jb
sti
addr16
stos
xor
and
sbb
mov
mov
xor
push
jb
cmp
mov
popf
stos
push
hlt
int
addr16
xchg
loope
fldenv
xor
clc
mov
ss
add
xchg
add
cmp
push
ret
scas
adc
mov
int
lea
jmp
jo
xchg
cltd
cmpsb
mov
inc
jecxz
aam
inc
add
inc
and
sbb
add
addb
add
inc
mov
add
pushf
fwait
mov
mov
inc
jne
mov
das
add
pop
jbe
mov
mov
fs
fsin
aas
gs
popa
add
jle
adc
mov
test
ljmp
sbb
outsl
arpl
push
insb
inc
test
and
insb
and
fisttpl
mov
out
test
cltd
or
imul
lcall
ret
aad
fstps
mov
lret
popa
inc
std
rcrl
bound
addr16
cmovbe
ret
inc
lods
or
add
fdiv
jns
out
dec
enter
xchg
icebp
push
dec
pushf
iret
add
dec
cmp
cmp
or
push
psraw
inc
movsl
fistps
jne
xchg
lahf
xor
adc
mov
sti
nop
push
sub
cmp
ja
scas
sahf
repz
js
out
push
dec
pop
mov
fs
xor
test
popf
scas
test
pop
jge
ret
mov
cli
gs
in
js
add
pop
push
pop
and
sbb
in
outsl
gs
outsl
call
sbb
add
sub
dec
stos
cmp
dec
sub
lods
das
int
mov
pop
push
lods
mov
rclb
add
sbb
int3
int
sub
cmp
data16
pop
in
int3
test
and
mov
rclb
fsubrs
push
lods
and
cmp
loope
aam
pop
mov
sbb
sub
enter
push
cld
cltd
push
xor
jnp
pop
out
cmp
adc
inc
gs
sbb
fwait
cmp
dec
pop
xor
jg
mov
call
test
test
sub
int3
arpl
or
xorb
add
xchg
mov
roll
mov
inc
dec
cmpsl
lods
add
fidivrl
in
mov
jns
jle
xchg
dec
jb
sub
fcmovnbe
adc
jb
imul
mull
in
jno
sub
lcallw
aad
xchg
inc
push
push
mov
mov
sbb
push
lret
and
out
adc
sbb
gs
sbb
pop
xchg
add
int
inc
cld
into
cmpsl
loopne
outsb
xchg
lret
pushf
cld
loopne
sar
dec
xchg
fs
les
sub
and
sub
mov
inc
add
sti
in
xchg
fsubs
xor
mov
out
out
fstl
adc
mov
jne
repnz
add
and
pop
mov
adc
shll
dec
cwtl
inc
cli
push
or
hlt
adc
mov
xor
add
cmp
loopne
dec
test
pop
mov
scas
or
popa
fwait
dec
jge
mov
jne
lea
xchg
push
sbb
jnp
lods
pop
xchg
fwait
movsb
fwait
ret
jns
stos
adc
cmp
ljmp
mov
outsl
inc
xchg
fstpt
xchg
cmp
movl
stos
push
jmp
aad
in
pusha
xchg
sbb
ljmp
sbb
xorl
xchg
nop
pusha
in
cltd
lods
roll
rcr
ja
jno
movsl
stos
xchg
sub
fmuls
add
cltd
std
adc
scas
mov
sub
ret
fwait
xor
pop
ficomps
mov
adc
sbb
fists
rcrb
and
add
mov
ss
and
fidivs
push
mov
sub
mov
pop
xchg
clc
out
outsl
lcall
mov
push
xlat
mov
push
test
xor
dec
inc
movsb
lods
jle
sbb
fs
dec
xor
lret
cmpsb
iret
inc
clc
mov
jp
in
mov
xchg
ficoms
sub
push
leave
aam
sarl
push
mov
repnz
xor
test
cmpsb
out
cli
push
or
imul
jle
pop
adc
cmpsb
pop
daa
xor
xor
adc
mov
add
nop
in
loopne
sub
inc
or
adc
push
xchg
adc
pop
bound
cwtl
notl
lock
lahf
sarl
xchg
mov
movsb
gs
in
repz
jp
ret
testb
stos
xchg
and
call
aad
dec
aad
gs
sbb
mov
es
jp
pop
mov
add
inc
cmp
mov
lcall
inc
dec
sbb
repnz
cmp
lds
jns
in
loopne
jb
lcall
push
push
cmc
adc
lock
sub
daa
insb
call
enter
inc
loop
xor
inc
pusha
fidivl
int
pushl
outsl
sbb
fsubl
mov
outsl
popf
fsubl
faddl
pop
add
popa
push
xchg
loopne
adc
lock
arpl
icebp
fldenv
sub
adc
pushf
jecxz
ljmp
fucomip
cli
pop
filds
push
or
and
jecxz
cwtl
int
mov
rclb
negb
lds
push
cwtl
lret
mov
mov
mov
faddp
dec
addl
xor
imul
paddw
arpl
lods
mov
push
rcl
daa
jg
mov
rclb
xor
repz
push
cmpsb
xchg
add
cmp
xchg
arpl
mov
jae
popa
test
inc
adc
out
push
mov
cs
pop
and
lods
rcrl
ljmp
test
mov
push
cmp
lods
pop
jae
test
mov
jae
sbb
or
es
sbb
xchg
lahf
pop
add
loope
fdivr
ret
dec
sbb
cwtl
test
push
addr16
push
aam
fs
cmp
jo
pop
mov
sub
jl
inc
adc
jo
jae
movsb
sbb
insl
add
push
mov
fadds
xchg
cmp
cmpsl
mov
xchg
pop
stc
jnp
add
sbb
xchg
ret
sbb
push
adc
sub
xor
sarb
std
mov
mov
mov
cmpsb
jge
adc
shll
jnp
jns
jno
ror
cmp
int
sub
fsubr
leave
mov
imul
fisubl
push
xor
es
jg
daa
jp
fiaddl
outsb
in
mov
add
movsl
adc
inc
cmp
dec
inc
movb
add
and
and
lcall
ret
pusha
and
jmp
adc
push
shl
fidivrs
test
cmp
adc
filds
mov
cmpl
push
mov
es
inc
and
add
or
dec
jecxz
sub
cs
mov
mov
popa
das
jo
fnstenv
mov
dec
pop
pop
mov
xchg
stc
xchg
shlb
mov
mov
cmp
pop
or
lret
xor
aas
push
dec
adc
and
rcll
jmp
std
xor
add
or
xor
enter
pusha
adc
adc
mov
mov
or
and
mov
cmp
mov
mov
lcall
sbb
jbe
fs
test
dec
mov
mov
sub
jp
testb
imul
in
mov
cwtl
xor
outsl
pop
enter
enter
inc
pusha
push
or
jae
mov
mov
xchg
adc
mov
addr16
cld
sbb
aam
loope
sti
jo
arpl
cmpsl
sahf
in
pop
mov
adc
lea
fsubr
add
js
push
jns
lret
insb
xchg
lods
push
pop
inc
xchg
rcrl
sti
push
pop
xor
loop
xor
fbld
and
adc
fadds
cmpsl
jno
mov
outsb
repz
test
mov
stos
mov
or
add
pop
inc
inc
pop
out
inc
mov
cwtl
pusha
xchg
daa
sub
add
pop
jp
dec
dec
sbb
bound
mov
ja
roll
mov
xchg
lea
aam
xchg
mov
jmp
pop
push
movsb
std
jo
in
cmpsb
pop
sbb
mov
dec
pop
sub
ret
mov
testl
xchg
jnp
daa
and
sub
xchg
sub
jl
test
pop
je
daa
in
mov
mov
fisubs
or
fimull
xchg
pop
mov
out
jno
mov
and
jae
xchg
out
mov
into
int3
repnz
sbb
int
jg
sbb
mov
jp
mov
lahf
cli
xor
xchg
adc
shlb
cmp
mov
mov
fiaddl
push
aas
xor
lock
in
pushf
adc
cmp
dec
add
add
add
pusha
pushf
xor
push
mov
inc
ljmp
bound
cmp
fidivl
pushf
and
dec
dec
jge
adcb
add
mov
repnz
subb
add
outsb
mov
push
sub
pop
push
or
mov
xchg
or
aas
jl
mov
mov
test
add
adc
ret
rcr
in
test
dec
sbb
ds
movsl
push
lock
push
xor
or
inc
es
aaa
cmp
dec
sarb
push
ljmp
fwait
cs
ljmp
ret
movsl
sub
sub
jae
xchg
stos
ret
push
scas
test
push
arpl
mov
jg
in
orl
cmp
or
add
adc
jge
aad
sbb
inc
xor
jnp
ljmp
hlt
jl
in
push
push
ja
lret
sti
pop
lds
dec
jmp
pop
dec
inc
jmp
mov
jne
xchg
int3
mov
aaa
outsl
jl
gs
rcr
in
sbb
scas
rcll
add
mov
xchg
pop
lret
sarl
fisttps
mov
jns
mov
xor
movsl
push
and
adc
in
test
xorb
push
dec
dec
jg
adc
mov
fwait
inc
pop
mov
les
je
jp
fildl
dec
sbb
cwtl
loop
ud1
cmp
outsl
cli
mov
sbb
adc
ss
push
adcb
mov
scas
adcb
lds
mov
mov
pop
aaa
mov
mov
repz
fistpll
loopne
lret
push
jmp
sub
inc
insl
or
mov
ret
mov
loop
call
outsb
push
dec
jnp
add
in
outsb
divb
addr16
xchg
das
lret
andb
push
and
pushf
in
push
fstps
out
sarl
shrb
and
aaa
sahf
push
scas
lods
jae
cli
nop
push
mov
push
in
pop
scas
and
inc
ss
mov
aad
iret
jae
push
sti
mov
js
push
inc
add
mov
and
xchg
push
rcr
call
daa
xor
mov
or
loop
jp
push
in
push
imulb
rcl
lahf
js
sub
mov
push
cmp
mov
incl
ja
or
push
sti
fsts
sbb
mov
mov
stos
lcall
lcall
cmp
flds
sub
dec
jnp
lds
loopne
pushf
pop
push
inc
mov
mov
data16
dec
inc
or
aaa
mov
les
loope
int3
inc
mov
or
pop
mov
ds
dec
js
xchg
add
cmp
push
in
add
gs
jg
pushf
out
adc
or
mov
xchg
add
insb
loopne
in
in
loopne
cmc
mov
gs
imul
sub
outsb
fbstp
jg
pusha
popf
leave
xchg
xor
test
mov
data16
aaa
lret
or
mov
pop
repnz
cmp
std
repnz
mov
out
xor
or
das
fildl
imul
dec
outsl
loopne
fwait
les
push
cmp
lods
adc
mov
cmpsl
pop
icebp
pop
inc
rol
jge
loopne
fisttpl
movsl
movsb
inc
jmp
cld
int3
push
je
lahf
mov
js
inc
fidivrl
mov
das
mov
inc
jle
and
or
icebp
add
jecxz
popa
adc
cmpsl
mov
sarb
call
mov
and
sub
fdivl
push
rep
pop
cmp
lea
push
xorl
or
ss
sbb
or
mov
xor
mov
fmuls
xor
nop
subb
push
xchg
outsb
cwtl
add
movsl
jns
data16
cltd
push
cmc
lea
add
cltd
stc
daa
dec
lret
cmp
sahf
cmpsb
sbb
popa
push
mov
outsl
sahf
loope
adc
pop
xchg
jmp
push
mov
test
cmpsb
and
ret
int3
shlb
push
sbb
popf
ret
sub
sarb
xor
push
stos
pop
add
push
adc
mov
js
dec
dec
mov
push
jnp
xchg
xchg
subl
pop
mov
and
outsb
mov
idivl
addb
loopne
dec
cmpsb
push
jnp
mov
and
cmpsb
gs
or
imul
mov
push
fmuls
or
neg
lea
insl
mov
shrb
sbb
incb
addb
and
outsb
cmp
mov
xlat
pop
pop
insl
cmp
ficomps
adc
mov
jg
jl
aaa
adc
add
ja
repz
sub
enter
ljmp
int3
lock
pop
add
add
add
cmp
pop
push
adc
mov
js
jb
mov
popf
imul
aaa
lahf
dec
popf
insb
leave
pop
push
sbb
cmpsl
jle
in
repz
imul
call
mov
mov
xor
push
outsl
aam
test
jo
aad
cmp
sub
jle
add
out
xor
cmp
and
pavgw
cwtl
dec
sbbl
dec
xchg
iret
mov
and
inc
push
movsl
mov
sarl
movsl
int
in
sahf
addr16
cltd
xor
push
es
aaa
xchg
cmp
scas
lods
cmpb
enter
sub
rcll
mov
fildl
xchg
cmp
inc
lcall
popl
xchg
imul
jmp
mov
push
popf
xor
push
inc
add
icebp
and
and
stc
rorb
jb
movsb
shl
mov
inc
mov
movsl
xchg
test
dec
test
add
pop
iret
fstpt
xchg
mov
mov
or
lock
inc
cmp
in
mov
and
adc
pop
stos
pop
push
add
jle
adc
fcom
sahf
aam
cmpsl
out
and
es
jb
mov
dec
into
imul
push
ret
mov
sbbl
cmpsb
sbb
mov
std
aaa
push
and
inc
sub
cwtl
bnd
and
push
test
outsb
jecxz
sbb
mul
xchg
stc
sub
lret
mov
xchg
dec
loope
pop
push
cmp
shll
orb
cmpb
mov
pop
mov
inc
fnstsw
loopne
nop
jae
fidivrs
fcoms
or
jns
adc
sahf
mov
push
mov
dec
divl
stos
add
push
scas
call
movsb
jge
push
fists
and
imul
imul
or
add
in
imul
add
lret
mov
mov
xchg
mov
and
push
ret
mov
into
or
shll
or
out
les
imul
lret
jae
aas
push
push
fcmove
cltd
and
sub
xchg
xor
sub
es
cmc
dec
and
loope
leave
popf
jns
aaa
decb
sbb
dec
mov
fisubrs
mov
xchg
popa
push
xchg
in
lea
jo
enter
stos
sbb
jle
dec
xlat
and
sbb
leave
lahf
add
shlb
cmpsb
pop
push
mov
jo
adc
mov
rorl
shll
mov
test
mov
sub
fnstcw
aad
mov
pop
adc
dec
sub
or
fidivs
test
mov
mov
cwtl
out
jp
nop
mov
push
mov
inc
cmc
loopne
mov
arpl
and
sbb
mov
mov
outsb
or
out
pop
jecxz
add
and
cmpsl
in
push
std
add
es
push
push
clc
xchg
call
mov
scas
or
jecxz
insb
insl
mov
or
out
lahf
adc
in
add
mov
cs
pop
push
adc
js
out
cmp
rorb
jecxz
aaa
ljmp
push
out
push
mov
pop
xchg
bound
inc
pusha
in
mov
fstps
jcxz
arpl
outsl
cmpsl
jno
sbb
lods
popf
mov
cmpsl
xor
gs
loop
mov
inc
int3
dec
mov
jo
cld
pop
and
push
jb
push
rcll
mov
loopne
clc
lods
sub
push
adc
mov
fldcw
pop
ret
ss
je
xor
and
pop
imulb
dec
add
push
test
pop
clc
rcrb
xor
mov
push
pop
jmp
xchg
imul
lods
jno
inc
out
lds
xchg
in
adc
dec
sti
enter
lods
aad
std
xchg
je
xchg
add
add
lods
testb
rcl
out
or
mov
rolb
icebp
add
iret
leave
cmp
inc
xor
daa
aas
sbb
lahf
into
sbb
pop
xchg
add
fiaddl
inc
vpabsd
and
dec
xchg
xchg
in
sahf
mov
push
mov
dec
pop
cmp
daa
add
enter
ret
dec
imull
cmovge
push
inc
sub
mov
sub
rolb
negb
movsb
insl
push
insb
mov
stos
ja
pop
sub
bound
sbb
ret
mov
adcl
inc
outsb
dec
int
push
pop
pop
jnp
and
lock
mov
outsb
loopne
and
shll
push
and
push
or
mov
aaa
ret
dec
mov
cmp
jecxz
clc
and
jb
xor
mov
cmp
pop
icebp
leave
push
js
jae
jno
adc
das
sub
aas
jne
dec
xchg
mov
push
and
xchg
aas
stos
and
jp
fstpl
sbb
adc
adc
inc
dec
sub
xor
push
sub
xchg
pop
cmp
cwtl
mov
xchg
cmp
lahf
mov
call
shlb
test
scas
push
lods
into
adc
mov
xchg
aas
orl
or
add
out
aas
pushf
adc
mov
out
or
pop
jp
mov
ss
push
xchg
sahf
adc
ja
sbbb
xor
repnz
insl
ss
imul
dec
xchg
in
call
jge
mov
lods
movsb
xchg
int
nop
stos
sarl
add
sbb
sahf
pop
pop
rolb
sub
cmp
lock
stc
iret
adc
cmp
pushf
shll
stos
ret
lods
dec
inc
mov
mov
outsb
and
mov
pop
cmp
lods
out
sbb
popf
mov
jbe
push
pop
scas
popf
dec
adc
lds
pop
out
out
shll
sub
dec
mov
push
jp
cmpsl
cltd
cli
jge
mov
loope
stos
in
pop
or
scas
call
andb
ljmp
mov
mov
lea
jp
pop
jns
out
stos
push
mov
inc
insb
add
addr16
or
hlt
dec
push
and
push
mov
push
inc
movsb
mov
sub
mov
scas
ljmp
dec
or
popa
mov
rol
mov
out
push
cltd
lret
mov
add
lds
outsl
sbbb
stos
jl
sarb
pop
inc
mov
adc
and
cmc
add
addr16
fldl
add
jbe
fnsave
inc
xor
test
sub
push
or
and
test
pop
and
ds
xor
jp
and
inc
lods
lea
je
or
insl
push
xor
sbbb
sbb
ficomps
std
imul
cmp
mov
mov
cwtl
ljmp
cmc
xlat
pop
insb
dec
xor
mov
test
mov
sub
inc
jno
jmp
lods
cmpsl
push
clc
loope
jg
cmpsb
rclb
jmp
mov
cmp
push
xchg
pop
adc
pop
test
in
lcall
jge
sub
add
cli
push
mov
sbb
mov
ljmp
ffree
add
cmpsl
decl
cmp
pop
sbb
scas
jecxz
sub
bound
iret
adcl
loopne
scas
push
mov
add
inc
test
and
mov
jae
std
ja
and
and
jo
pop
mov
dec
in
jmp
mov
or
sub
inc
jns
pop
add
mov
adc
popa
lods
andl
add
add
sbb
test
ret
mov
mov
cs
out
sub
mov
inc
addr16
iret
out
xor
xchg
in
cs
dec
cld
cmp
xchg
call
enter
adc
sbb
or
lahf
xor
out
jge
mov
pop
cmp
push
jge
and
xor
lahf
test
and
mov
mov
int
popa
push
and
sahf
mov
in
fisttps
aaa
cltd
roll
sbb
jp
push
cmp
mov
frstor
int
push
lret
cwtl
icebp
jl
xor
imul
push
adc
push
shlb
popf
sub
ret
fsubp
add
sti
stos
add
push
int
mov
dec
cltd
inc
fdivr
pop
sbb
mov
sbb
jp
js
sbb
loopne
insl
or
mov
ljmp
mov
mov
cmp
pop
dec
and
xlat
sbb
xchg
ja
or
enter
pop
pop
jb
and
aaa
and
out
or
das
push
insb
or
adc
cmp
inc
loop
test
subl
aaa
pop
loop
jns
inc
ds
mov
clc
inc
jp
xor
jae
sarb
repz
and
outsl
out
add
imul
and
mov
jne
push
out
leave
xchg
mov
xor
hlt
insb
jp
jo
adc
mov
push
xchg
pop
jae
aam
fisubs
xor
scas
movlps
push
or
xor
pop
or
jmp
rcll
ficomps
cmpsl
cld
cs
mov
gs
stc
push
in
fcom
or
push
aad
sub
mov
inc
add
mov
cmp
ljmp
data16
aaa
jns
repz
lock
es
std
push
out
pop
pop
test
divb
loope
mov
bound
sti
dec
fwait
jge
nop
adc
flds
inc
repz
push
dec
subb
cmpsl
aaa
lcall
push
mov
lret
sbb
sub
jmp
outsb
subb
mov
push
loope
les
jle
add
fiadds
sub
mov
mov
or
stos
jns
inc
push
or
lret
test
inc
mov
mov
out
subl
testb
mov
mov
sarb
and
jns
dec
inc
xchg
mov
lds
push
inc
ret
aaa
adc
stos
out
cwtl
cmpsb
int3
add
inc
lds
mov
ljmp
or
cli
jno
les
cmpb
jb
ficomps
pop
lock
push
pop
ficomps
mov
and
cmp
and
mov
pop
aam
inc
negb
fmull
stc
xchg
jge
out
jbe
sub
mov
sbb
ds
iret
orb
test
jns
aam
xor
pop
xchg
xor
hlt
repz
movb
pop
mov
imul
push
mov
pop
int
lods
mov
mov
inc
imul
pop
xchg
fimuls
or
add
into
mov
sbb
inc
rorl
bound
adc
pop
push
push
mov
test
xorb
data16
movsb
xor
jecxz
je
cmc
lret
xchg
mov
mov
adc
inc
cmp
sbb
inc
push
or
stos
cmp
sbb
mov
xchg
pop
ficomps
lods
sbbb
dec
sahf
out
jp
fstps
rorl
daa
push
add
jns
cmpl
shll
push
pop
gs
add
inc
sahf
shr
and
push
dec
mov
leave
in
nop
lds
sbb
push
mov
xchg
push
pop
jge
sbb
lods
in
adc
aad
mov
out
mov
cmp
sti
lock
ja
mov
mov
daa
mov
mov
loop
mov
adc
mov
sub
mov
push
xor
xlat
movsb
test
ljmp
mov
mov
lods
xchg
push
mov
dec
xchg
sub
popa
cltd
shr
test
js
mov
call
jecxz
cmpsb
inc
inc
ss
inc
dec
loope
cld
add
mov
lods
decl
sbb
jmp
sti
jl
push
add
xor
jno
or
mov
bound
or
or
bound
jae
dec
scas
mov
mov
jmp
movsl
sti
dec
ficoms
xchg
cmp
int3
sub
and
add
inc
fldcw
cmp
das
repz
in
mov
inc
add
sbb
pop
in
gs
aas
pop
and
mov
add
fwait
cmc
jb
add
dec
add
out
test
mov
rol
dec
cwtl
jle
push
in
gs
ja
xchg
jp
sub
mov
adc
push
imul
sbb
cmpsb
divb
pop
js
mov
jp
test
mov
jo
test
mov
dec
jp
andl
inc
out
jp
and
scas
fidivrs
fmull
daa
mov
xor
or
sub
lcall
and
push
lods
and
pop
aam
cmp
insb
std
pusha
inc
adc
or
inc
addr16
inc
dec
jmp
jmp
insb
push
test
mov
in
sar
xor
ficompl
cld
and
xchg
inc
cwtl
pop
outsb
lahf
sbb
xchg
adc
mov
lret
xchg
inc
out
or
fstpl
lds
mov
xor
shll
sbb
mov
in
ret
les
adc
adc
scas
test
cltd
mov
scas
mov
in
outsb
xchg
scas
popf
xchg
or
jne
or
in
inc
std
rol
testb
xor
mov
dec
sub
mov
call
sub
arpl
add
leave
mov
scas
jg
in
inc
sbb
inc
pusha
movnti
lcall
movsb
pop
and
push
cmpsb
mov
ret
jbe
mov
decl
shlb
mov
movsb
xchg
jns
add
gs
lret
push
fdivs
xchg
xlat
clc
shll
jp
jmp
cmpsl
je
lock
repz
and
insl
mov
push
push
cli
ret
stos
rclb
jg
mov
jle
pop
inc
dec
popa
dec
pop
pop
ficoms
pusha
in
pushf
repnz
clc
andl
xlat
dec
dec
ja
popa
out
mov
adc
push
movsl
push
lds
push
jp
jle
sub
xchg
les
jae
rolb
addr16
xor
inc
mov
cld
out
in
push
mov
and
sub
cmp
jle
lcall
sbb
add
std
add
inc
pop
shr
cltd
inc
mov
ljmp
pop
je
mov
push
cli
andb
mov
push
sbb
hlt
insl
nop
sbb
mov
ret
movsb
mov
push
aas
adc
data16
std
or
jecxz
jae
push
dec
out
movsb
mov
test
jbe
jmp
int3
gs
lret
outsl
movl
rcll
subl
scas
mov
dec
adc
out
dec
popl
add
lcall
pushf
sbb
sahf
jg
gs
data16
sub
mov
in
xchg
cs
inc
xchg
sub
fdivr
dec
jg
fmuls
in
or
xchg
shl
mov
push
bound
pop
mov
mov
or
ss
fbld
cmp
push
add
mov
adc
push
cmp
push
lea
fstpl
in
das
sub
xchg
arpl
out
stc
dec
cmpb
jb
or
out
push
cwtl
mov
jge
push
ret
pusha
cld
sub
push
mov
cmp
mov
nop
mov
xorl
test
outsl
adc
mov
pusha
out
mov
pop
sti
push
pop
sbb
push
and
imulb
push
icebp
out
push
enter
push
lea
cmpsl
push
mov
rclb
push
xchg
into
pop
pushf
leave
push
sarb
ret
sub
fistpll
jmp
jbe
jge
scas
xchg
push
dec
loope
jge
jecxz
stos
sbb
popf
add
jl
or
ds
push
pop
icebp
push
pusha
aam
push
mov
adc
dec
jno
lret
jne
scas
jmp
push
dec
dec
inc
clc
cmpsl
sub
mov
lret
sbb
dec
inc
push
inc
fidivl
clc
out
imul
mov
in
push
or
out
mov
call
int3
mov
test
and
out
inc
stos
gs
into
mov
test
test
ljmp
lcall
cmp
mov
jl
xchg
sarb
ret
mov
jne
rolb
adc
lret
popl
add
imul
imul
push
popa
mov
in
inc
movsl
sti
cmpsb
lret
sahf
aas
push
cltd
idivl
push
les
popa
nop
mov
jmp
out
cmp
sbb
mov
adc
dec
mov
mov
loopne
add
repz
cmp
in
add
mov
push
sti
cmpsb
jecxz
jmp
and
dec
sbb
incb
cmp
movsl
stc
xor
negl
mov
and
es
sbbb
negb
push
mov
ret
cmp
adc
mov
pop
lcall
dec
sti
dec
sub
mov
mov
mov
mov
pop
push
sub
mov
inc
push
dec
int
je
dec
out
ret
mov
mov
push
mov
lahf
and
rcr
jp
push
jb
and
outsl
mov
arpl
pop
ds
push
mov
int
push
pop
and
cwtl
jns
ja
ja
jae
jl
mov
int
inc
xchg
mov
aas
sub
ja
movsb
ss
aam
xor
jbe
popf
and
mov
shrl
test
cmp
mov
cmp
stos
xlat
sbb
cmpsl
stos
mov
xchg
sub
mov
fdivr
mov
adcb
push
out
fmuls
les
daa
mov
fldcw
inc
xor
sub
xor
push
jle
cmp
icebp
and
jo
js
imul
push
movsl
xor
add
mov
subb
jae
xor
jg
lods
jl
je
fisttpll
arpl
jmp
xchg
loope
in
mov
mov
dec
addr16
insl
sbb
xchg
adc
scas
popf
popf
imul
xchg
jp
sbb
inc
jp
sbbl
add
mov
adc
test
and
cmpsl
jecxz
pop
inc
sbb
insb
fcomps
clc
xchg
pop
fcmovnbe
sub
dec
mov
inc
pmulhw
dec
addb
jae
push
lds
repz
into
adc
mov
outsl
loope
sub
xchg
mov
push
test
ds
cmp
adc
cmp
mov
cmovne
fs
stc
sub
mov
mov
mov
mov
frstor
pusha
leave
xchg
pop
mov
xchg
mov
lods
xor
fnsave
pop
lods
mov
aad
repnz
jg
mov
movb
push
xchg
sub
adc
flds
and
icebp
aam
cmpsl
aam
dec
mov
pop
mov
pop
mov
stc
outsl
inc
icebp
enter
fs
sbb
push
dec
inc
adc
xlat
stos
clc
leave
and
or
push
mov
dec
dec
cmp
xchg
mov
xchg
xor
inc
pop
mov
fidivrs
insb
sbb
ljmp
rorl
push
and
nop
mov
mov
jae
or
dec
negb
movsb
adc
les
lods
mov
or
pop
dec
jns,pt
mov
and
shll
cld
adc
add
xchg
pop
inc
inc
mov
movsl
int3
sub
sbb
fs
push
mov
cs
xor
push
adc
outsb
dec
dec
xchg
push
dec
mov
out
test
adc
mov
jl
mov
cld
pop
out
mov
test
cmpsl
cmp
gs
js
xlat
sbb
movsl
pop
fisubrs
lds
dec
pop
dec
ret
out
sbb
inc
inc
clc
movsb
mov
adc
test
push
xor
iret
or
push
imul
ret
fwait
decb
sub
addr16
lret
pop
pop
in
leave
xchg
jno
mov
sbb
and
sti
cmpb
push
sbb
into
loopne
jb
cmp
xor
push
mov
sub
pop
std
shl
bound
xor
out
push
in
pop
fcoms
mov
or
nop
fstpt
repz
sbbl
out
push
loopne
mov
xchg
bound
mov
fbstp
in
bound
paddsw
loopne
arpl
enter
test
cmp
mov
imul
pop
cwtl
rorl
imul
cmpsb
add
test
in
cmp
adcb
xor
ja
pop
subb
cwtl
js
xchg
test
pop
sub
jmpw
mov
cmpsl
push
and
fistps
int
sbb
sub
ds
adc
bound
test
in
notl
lcall
fwait
xlat
lods
mov
shl
dec
pop
loopne
jne
es
push
mov
shl
fidivl
cwtl
push
add
sahf
and
sti
ret
cli
jp
imul
ja
ja
mov
cli
clc
jbe
jb
stos
test
jo
std
jle
ljmp
push
dec
std
mov
xor
incb
fbld
jae
mov
out
push
daa
add
add
inc
cmc
lahf
sub
gs
xchg
mov
shl
pop
pushf
adc
and
xor
pop
mov
mov
dec
push
in
adc
test
repz
push
xchg
arpl
pusha
bound
jmp
jl
out
mov
aad
test
icebp
xor
sub
lret
jae
pop
jbe
cmp
push
cs
leave
test
inc
add
ss
mov
cmp
fwait
pop
sbbb
xchg
icebp
cmp
or
push
out
add
aas
push
insl
jecxz
sti
lods
je
xor
adc
jne
jge
pop
js
xchg
pop
and
arpl
xchg
push
cld
sti
and
lret
shlb
mov
in
xor
subb
dec
loop
jl
les
addr16
xchg
insb
jns
insb
pop
pop
lods
inc
jns
or
pop
jmp
repnz
int
das
jns
xor
jae
les
mov
cli
in
rolb
popf
imul
xor
pop
mov
push
loopne
push
inc
loop
inc
dec
loope
or
loop
cmp
popf
sbb
mov
and
inc
xchg
pusha
loope
das
mov
fnsave
frstor
outsl
sub
aas
add
movsl
mov
dec
xor
iret
in
mov
xchg
jnp
insl
jb
sub
stos
cmp
iret
outsb
sbb
dec
mov
inc
rolb
outsb
jno
xchg
mov
xorb
jno
xchg
and
lea
in
push
fxch
std
add
aaa
mov
sub
insl
push
sbb
jo
shl
and
jb
in
adc
subl
dec
leave
add
insb
or
or
xchg
gs
add
mov
in
jb
jnp
insb
ficompl
es
daa
mov
cmp
fldenv
das
icebp
mov
xor
call
push
pop
mov
pushl
hlt
popf
adc
xchg
mov
jbe
ljmp
mov
lret
push
mov
fwait
mov
push
mov
fiadds
jp
pusha
test
scas
cmc
ljmp
mov
sahf
ss
fcoml
leave
gs
popa
outsb
pushf
jmp
push
fstl
insl
or
scas
push
arpl
xor
jnp
mov
xlat
mov
lahf
adc
jp
popf
ret
out
imul
ss
and
dec
sub
insb
push
pop
pop
insl
mov
sbb
test
sbb
dec
pop
xorl
lret
inc
fimull
pop
pop
pop
add
push
std
push
cmpl
cli
mov
lahf
push
mov
mov
or
ja
and
pop
cltd
mov
push
movsl
mov
sbb
invd
jl
mov
lcall
rclb
or
xchg
ja
mov
out
into
ret
mov
mov
add
dec
sub
movsl
xchg
jo
stos
fiaddl
mov
push
jmp
mov
cwtl
call
out
cld
jmp
insl
cli
dec
dec
lret
push
jnp
mov
xor
mov
es
sub
into
dec
jo
mov
out
mov
in
into
pop
push
popf
or
out
call
cmp
daa
xor
xorb
xchg
xchg
xchg
cmpsl
in
push
rcrl
inc
lcall
clc
push
xor
movsl
pop
mov
imul
pop
cmp
inc
fs
mov
cmp
jle
leave
mov
pop
push
pop
add
mov
loop
jns
pusha
andnps
in
mov
jl
out
test
insl
sbbb
add
sbbl
daa
outsl
arpl
sub
rcr
dec
sahf
out
in
sbb
inc
mov
sbb
das
sahf
fadd
xor
pop
enter
sub
dec
stos
imul
pop
inc
cmc
xor
repz
in
push
and
dec
jb
add
xor
cli
dec
mov
movsl
into
add
shl
lcall
aam
mov
mov
inc
mov
mov
inc
sub
mov
sti
movsl
in
fcoml
call
sbb
ds
inc
jp
cmp
inc
pop
xlat
adc
dec
inc
sbb
jle
cmp
add
push
mov
enter
mov
pop
xchg
shll
xor
push
fcmovnbe
idiv
jl
jmp
mov
in
enter
adc
add
cwtl
leave
in
es
or
push
stos
lret
pop
movsl
cmp
aaa
jp
push
mov
outsb
sub
cmp
pop
mov
inc
stos
int3
out
adc
sub
and
xchg
ss
mov
jl
loopne
movsb
sub
pop
subl
or
bound
insl
cmpsl
sbb
xchg
mov
jge
pop
xchg
cmpb
out
bound
xchg
sarb
vpunpckhbw
enter
jne
lock
les
shrl
xchg
inc
inc
pop
loop
loop
mov
dec
imul
fsub
outsl
mov
cmp
fnstcw
fisubl
pop
push
xchg
nop
and
jo
sub
sub
dec
xchg
subps
fsubrs
test
or
sti
mov
mov
outsb
add
mov
pushf
nop
test
push
mov
imul
shll
inc
inc
lods
test
ljmp
inc
xor
mov
rcll
movsb
cli
adc
ss
pusha
push
jge
popa
push
test
mov
adc
stc
repnz
lret
add
pop
fldenv
sub
sbb
and
xchg
mov
xor
shll
test
shrb
and
fadd
mov
mov
fwait
es
xchg
push
or
lcall
sub
std
loop
in
stc
sub
sub
enter
cmpsb
aaa
test
push
or
push
test
cs
fndisi(8087
rol
xor
int3
popf
shl
push
cmpsb
mov
fbld
loope
cmp
icebp
inc
scas
mov
dec
jge
add
sub
lcall
sub
mov
sbb
lret
pop
and
or
inc
dec
in
shlb
mov
mov
test
mov
roll
nop
cmp
orb
xor
js
sub
fistpll
sahf
rclb
stos
je
push
movsb
and
fiaddl
pusha
cmc
sbb
and
into
push
dec
lret
push
in
sub
xchg
mov
icebp
push
cmp
xchg
and
xchg
and
pop
xsaveopt
lods
das
fdiv
fisttpll
adc
and
jmp
add
inc
push
insb
sbb
pop
and
cmp
mov
or
test
flds
dec
mov
dec
call
mov
cmc
test
push
and
test
mov
popa
ficomps
cli
or
in
call
push
mov
addr16
popf
xchg
adc
cmp
xlat
cwtl
sbb
xor
sub
and
sub
xchg
fisubrs
mov
movsb
popa
pop
adc
sbb
fsub
iret
in
pop
xchg
xchg
and
std
stc
in
popa
push
xchg
jb
loope
or
mov
pop
iret
sub
dec
jae
dec
mov
push
xor
movl
std
stos
xor
mov
icebp
and
fcomip
shlb
lret
pop
hlt
ficoml
xchg
jmp
test
imul
addr16
inc
int3
push
out
mov
sub
lea
adc
je
push
js
sti
in
sbb
sti
out
loope
mov
enter
shll
addr16
cmp
mov
test
lock
pusha
and
lods
fdivrp
repnz
xchg
fsts
or
stos
adc
mov
std
pop
xchg
add
pop
rcr
push
loop
xlat
je
icebp
ljmp
sub
pop
xchg
mov
inc
lods
popa
push
xor
in
imul
leave
stos
sbb
fwait
cmp
jmp
pop
xchg
jge
into
cmp
loope
and
push
inc
add
xchg
or
push
leave
and
xchg
mov
add
cld
test
xchg
scas
in
mov
fbstp
mov
pop
mov
jbe
lds
popa
mov
mov
fldcw
cmp
pop
jae
lods
cmp
push
mov
mov
push
jns
mov
sub
cmpb
dec
cltd
orb
out
cmp
push
mov
pop
sub
jl
push
lcall
lods
push
aaa
push
hlt
lock
mov
mov
mov
push
push
andl
aam
xchg
stc
push
imul
jae
lret
pop
jno
aam
add
shlb
inc
dec
out
icebp
gs
das
inc
call
mov
and
es
sahf
imul
push
and
and
les
movsl
hlt
jo
sbb
xor
push
xchg
adc
mov
in
ss
sbb
and
push
and
or
enter
jb
sbb
and
jo
out
adc
test
scas
lea
pop
sub
cs
das
lret
std
add
inc
mov
arpl
jecxz
inc
ds
push
in
jns
xor
lods
xlat
fstpt
lea
adc
dec
xorl
push
jl
hlt
repz
push
inc
inc
popa
insl
jns
pop
xor
push
pop
jge
jns
lcall
inc
xor
in
scas
fld
test
fwait
push
cmpsb
push
inc
shlb
jp
daa
test
mov
sarl
dec
cld
es
add
or
into
cmp
push
mov
test
inc
cmp
imul
push
mov
add
fcmovnbe
pop
xchg
sbb
out
fadd
pop
out
dec
xor
mov
xor
add
mov
jbe
subb
addl
loope
jne
sti
xor
dec
pop
lods
sub
inc
lods
ja
dec
push
inc
mov
ret
mov
pop
rcl
sub
fwait
push
add
cmp
fdivr
sahf
loopne
sbb
sbb
cli
xor
sbb
std
popf
stos
shll
mov
adc
gs
enter
das
mov
rolb
jo
fdivl
fbld
mov
sahf
jmp
add
mov
ror
push
and
push
out
cmc
stos
insl
and
or
cmp
cmp
mov
xchg
popf
sti
enter
gs
pop
jns
mov
adc
pop
js
xor
sbb
mov
jmp
sbb
aas
subl
xchg
ja
cmp
shrb
cld
adc
add
fwait
gs
fwait
push
jmp
pop
dec
dec
stos
xor
or
mov
lods
push
adc
xlat
xor
imul
mov
xchg
dec
lds
dec
sbb
xor
dec
int
cmp
call
push
inc
mov
inc
cmpsl
xchg
daa
cs
mov
mov
push
rcrl
dec
fcoml
sub
and
or
mov
push
sahf
cmc
repz
jmp
xchg
push
mov
sbb
jae
addl
jecxz
arpl
gs
jo
push
xchg
push
or
idivb
je
pop
inc
lods
je
mov
jmp
outsl
hlt
mov
lods
gs
cmp
repz
fidivrl
push
gs
dec
imul
stc
xchg
xchg
fwait
shll
loope
ret
pushf
adc
jge
jno
push
jb
pop
or
in
stos
outsl
es
lds
pop
mov
clc
fnsave
clc
push
dec
stos
rolb
sti
add
jnp
xor
outsb
imul
movsb
and
popa
xlat
mov
mov
lods
rcll
sbbl
xor
lret
in
jne
daa
dec
sarl
sahf
cltd
mov
pop
or
add
push
sbb
xchg
pop
adc
stos
popf
movb
repnz
sarb
int3
les
popa
mov
add
aaa
mov
adc
clc
ljmp
mov
sub
mov
xor
xchg
add
into
push
comiss
andb
or
xchg
jns
adc
adc
push
pop
sbb
loope
fists
fnstcw
jbe
pop
loopne
pushf
and
lods
add
xor
dec
xlat
stc
hlt
xorb
icebp
dec
fiadds
jl
xchg
jb
out
test
scas
addr16
jg
push
mov
mov
sub
mov
add
repz
lahf
or
mov
dec
in
xchg
jl
xchg
icebp
out
loopne
adc
out
mov
loope
xchg
mov
adc
loope
jbe
jne
lods
and
insl
adc
outsl
jecxz
dec
inc
fwait
clc
adc
xchg
jle
xor
mov
sub
std
xor
fsub
and
lock
adc
push
mov
outsb
sub
jae,pn
orb
leave
addl
stos
das
cmp
sbb
lds
cmp
and
pop
adc
jp
mov
pushf
jge
push
sbb
mov
pop
js
bound
mull
jno
ret
and
fdivrs
lods
in
inc
repz
out
mov
std
inc
push
or
mov
int
pusha
test
inc
out
xchg
sbb
mov
icebp
xor
sub
mov
pop
scas
lret
and
ss
shlb
js
out
push
jno
mov
repnz
cmp
popf
loopne
andl
int3
mov
fisttpl
enter
iret
leave
jle
mov
mov
dec
insb
sbb
or
jb
xor
dec
adc
rorl
pop
lds
or
push
xor
lahf
xor
sti
jle
cmp
sub
add
adc
pop
in
sbb
pop
mov
jge
inc
jmp
pop
cmp
dec
into
dec
lret
mov
push
mull
cmp
enter
sub
ficoms
cmp
sub
frstor
addw
aaa
sub
cmpb
fildll
je
inc
mov
push
out
and
jmp
adc
mov
rorl
test
push
les
out
ljmp
xlat
sbb
aam
cmp
test
dec
adc
out
inc
js
xchg
mov
je
leave
scas
shrb
sti
lret
repnz
loop
mov
lock
mov
iret
and
xchg
cmp
fimuls
cwtl
lock
add
cs
movsb
mov
in
out
sbb
movsb
jbe
icebp
push
adc
stos
sbb
dec
add
xchg
in
test
dec
les
sbb
ret
loop
or
sbb
and
ret
adc
add
fwait
cs
and
and
daa
enter
lahf
movsl
xlat
add
push
and
cmpsb
cli
out
fwait
ljmp
pop
and
bound
push
inc
aaa
mov
arpl
mov
jp
mov
jecxz
add
push
add
mov
fidivrl
mov
push
lock
dec
daa
dec
jp
cld
das
adc
xor
dec
pop
cli
add
lds
mov
xor
f2xm1
mov
outsb
addr16
cs
push
imul
and
insl
ret
stos
sar
and
lods
lods
mov
dec
and
js
outsl
inc
test
sub
adc
add
mov
cmp
cmp
pop
mov
jns
shrl
sbb
inc
push
cs
adc
mov
adc
mov
xor
lds
and
xchg
mov
into
into
call
xor
test
mov
jle
lret
fimuls
sbb
jne
xor
push
in
mov
stos
popa
int
jmp
cmpsl
inc
dec
and
pop
or
aas
cmpl
xchg
lods
stc
loope
aad
adcb
popa
std
test
mov
cmp
push
cmp
mov
and
pop
push
mov
pop
aam
sbb
push
mov
mov
in
xchg
insl
aam
adc
mov
ret
and
lea
ret
lret
repnz
or
out
xor
jnp
test
movsb
or
ffreep
and
dec
loope
nop
jl
push
add
xor
mov
dec
mov
cltd
test
jo
fnstcw
push
cld
movsl
push
iret
in
and
cmpsb
xor
jne
xor
adc
inc
lahf
jno
lahf
outsb
xorb
stos
jl
mov
push
adc
cmc
dec
inc
clc
scas
insl
popf
cmp
cli
stos
or
pop
xor
and
mov
pop
aad
or
inc
js
mov
popa
leave
jmp
or
mov
xor
cmp
adc
mov
sub
cmovl
dec
xchg
add
outsb
std
das
jb
clc
les
and
mov
or
mov
fildll
or
frstor
xor
in
int3
jecxz
jmp
or
addr16
cltd
mov
jne
inc
in
stc
add
jo
std
inc
stc
data16
xchg
lods
in
jle
mov
faddl
negl
daa
push
sbbl
jne
orl
jns
fimull
notl
movsl
int3
push
mov
or
mov
and
pop
or
dec
cmpsl
iret
mov
push
xor
outsl
fidivrl
mov
in
jbe
or
into
mov
das
es
cmp
shll
pusha
jae
lods
mov
dec
mov
or
push
xorl
stos
push
jno
push
notl
sti
loope
pop
out
add
adc
fsubs
bswap
inc
add
pop
push
loop
shr
iret
arpl
and
imull
sub
jo
jg
mov
mov
out
xchg
mov
inc
and
mov
dec
cmp
shr
repnz
addr16
lret
xor
fldt
div
xchg
addr16
cmp
mov
mov
into
jmp
std
icebp
sub
jecxz
jae
movsl
test
or
sbbl
and
cmp
pop
andl
in
ds
add
mov
gs
pushf
je
sahf
jecxz
test
xor
fnstcw
jbe
ds
dec
jo
fisubs
and
aam
xchg
ss
inc
dec
cmpl
notl
pop
add
enter
out
cltd
sbb
lock
loop
mov
add
and
imul
dec
pop
addr16
call
add
mov
cli
xor
je
mov
test
fisubrs
clc
in
pusha
in
aam
xchg
xchg
mov
xorb
lds
or
xor
mov
stos
fidivs
adc
pop
pop
scas
scas
faddl
decb
in
ss
shll
push
sbbb
dec
adc
lret
push
pop
pop
pop
pop
out
add
xchg
xlat
lcall
cli
aaa
out
cld
sti
dec
aam
and
rorb
mov
or
pop
mov
pusha
cmp
test
hlt
insl
ss
inc
inc
mov
xchg
mov
insl
mov
cmp
pop
je
or
push
int
outsb
fnstcw
sub
stos
movsl
fisubrl
test
bnd
imul
push
cwtl
das
shrb
mov
and
sub
pop
out
lock
stos
mov
rorb
out
andb
imul
pushf
out
les
decb
mov
xor
dec
mov
push
cld
rcll
out
and
daa
dec
hlt
fsub
mov
rclb
fdiv
clc
inc
les
and
incb
in
sub
aam
cmpsl
ljmp
push
xor
xchg
mov
cld
mov
repz
stc
fs
fs
sub
mov
pop
cmp
pop
lods
mov
push
push
leave
lock
xor
adc
xchg
daa
inc
and
xor
xor
jo
enter
xchg
movsb
enter
ret
ret
ds
add
and
bound
in
test
aas
je
fs
add
adc
push
push
cmp
das
inc
hlt
and
mov
push
outsb
or
push
stc
push
add
xchg
xadd
cwtl
testb
inc
mov
adc
xchg
adc
push
imulb
stos
std
xchg
xlat
loope
pop
sti
repnz
lcall
mov
scas
mov
rcrb
add
jnp
pop
nop
sti
xchg
mov
test
ss
mov
push
das
mov
ret
pop
pop
push
loopne
testb
sub
or
ja
mov
imul
jb
aaa
inc
sub
in
sub
into
mov
ja
push
movsb
rolb
pop
jg
js
js
orl
push
sub
jp
scas
add
jbe
or
mov
cmp
mov
shrb
es
adc
jp
icebp
bound
cwtl
into
test
subb
clc
jb
das
sbb
lds
mov
outsl
sbb
xchg
in
mov
stc
inc
int
rclb
lods
cwtl
nop
shl
mov
add
shll
pop
sub
movsb
pop
add
cmp
pop
ret
dec
in
pop
mov
dec
jne
das
inc
xchg
sahf
insb
repnz
mov
pop
call
in
and
jno
push
cmp
fidivrs
fiadds
mov
mov
push
std
mov
test
or
xchg
in
or
mov
inc
push
aas
mov
push
xor
cmp
outsl
or
repz
jbe
xchg
jge
dec
adc
and
mov
out
jbe
stc
int3
fchs
cwtl
xchg
jno
test
pop
push
sbb
das
test
cmp
xchg
ret
fs
loopne
test
sub
adc
mov
push
hlt
test
and
sbb
ja
faddl
std
subl
mov
imulb
jl
shll
push
push
aad
ret
addb
shlb
repnz
add
adc
clc
loop
mov
push
sub
or
subb
jle
inc
rolb
mov
cmp
jns
cmc
dec
mov
add
in
inc
mov
pop
mov
nop
lock
mov
jbe
jle
push
jmp
sbb
sbb
movsb
sbb
and
out
mov
xor
add
push
adc
mov
ret
xchg
sbb
icebp
ljmp
mov
mull
mov
mov
jns
jno
dec
cmp
push
out
andl
ret
adc
jnp
mov
and
cltd
add
jns
push
jmp
jg
jae
add
pop
pop
call
xchg
cmp
adc
mov
adc
dec
test
adcb
scas
mov
ljmp
shlb
jne
imul
jcxz
cmpl
cltd
call
test
sbb
dec
ret
pusha
mov
imul
je
lahf
lcall
mov
or
cwtl
sti
push
movsl
shl
and
push
loope
mov
jnp
int3
mov
push
adc
into
or
cmpsb
leave
fadds
adc
jmp
fsubrs
jl
push
dec
loop
out
sub
adc
jb
sbb
mov
notb
fisttpl
shll
addb
xor
mov
pusha
pop
hlt
adc
bound
push
push
filds
pop
xchg
call
add
insb
in
add
movsl
add
jle
cmpsb
insb
sub
jne
adc
es
and
ret
movsl
rol
jle
pop
add
or
sub
dec
xor
hlt
sbb
cmp
mov
loop
pop
mov
rcll
test
popf
cmpsl
lds
jae
lods
add
cmp
int3
mov
icebp
jb
pusha
inc
dec
outsl
cwtl
mov
push
imul
xchg
out
xchg
push
jge
int
aaa
mov
loope
ljmp
mov
xor
and
pop
push
pop
negb
popa
dec
addr16
push
mov
sub
enter
jecxz
test
mov
mov
dec
inc
cmpsb
cmp
paddq
pop
into
sahf
xor
add
dec
mov
ja
mov
pop
or
sub
jl
pop
cli
add
pop
add
jno
int
push
mov
shll
sbbb
sub
pop
mov
push
jmp
enter
xor
cli
sbb
mov
sbb
test
adc
clc
push
pop
push
jbe
insl
jl
sahf
mov
gs
call
or
dec
insb
mov
aam
or
push
jno
xchg
jne
mov
xchg
test
out
test
lods
ficoml
in
shll
call
push
std
and
push
mov
mov
lods
mov
aaa
dec
test
mov
cltd
mov
pop
mov
adc
cs
jp
adc
aaa
xor
int
sbb
fldl
mov
leave
dec
stc
imul
cltd
dec
sbb
adc
clc
loope
add
jbe
test
pushf
dec
push
pop
mov
call
jg
inc
xor
arpl
jmp
adc
loope
push
sbb
aam
lds
dec
and
push
out
inc
notb
adc
dec
popf
mov
stos
shrb
shr
not
sub
mov
mov
sub
jge
adc
mov
hlt
arpl
pop
je
movsl
test
jg
push
xchg
add
lods
sub
ror
xlat
mov
shll
ss
lcall
test
bound
hlt
frstpm(287
out
fucomi
stos
nop
inc
insb
adc
inc
pop
pop
fcmovne
test
cmp
dec
add
stos
sbb
cmpsl
push
pop
cmp
adc
fimull
lods
dec
mov
outsb
and
insl
sbb
fsubp
and
enter
xor
fisubl
clc
pusha
mov
pop
lods
inc
lcall
rcrl
hlt
mov
fstpt
movsb
flds
mov
iret
iret
addr16
insl
int
sar
mov
sbb
test
pop
cmpsl
mov
push
test
popf
in
lahf
testb
in
and
inc
push
pop
pop
adc
dec
xor
stos
add
lods
lret
cmp
lcall
lcall
inc
loop
cmpsl
sub
mov
mov
negw
ror
xor
ds
fwait
dec
push
adcl
sub
push
test
insl
lret
ret
push
push
jge
pop
insl
ss
or
xchg
in
pop
xor
mov
sbb
cmpsl
bound
cmp
aad
pusha
pop
jg
leave
inc
outsl
lods
nop
adc
ret
xchg
inc
jb
inc
mov
repnz
les
mov
std
fs
dec
and
pop
outsb
ucomiss
inc
aas
cmp
movl
pop
dec
and
and
fsubrl
imul
sbb
rorb
ret
stos
push
mov
out
outsb
mov
cltd
xchg
push
sub
leave
jns
cmp
sub
ss
dec
test
adc
xor
pop
push
ret
pop
mov
stos
ljmp
dec
insl
mov
xchg
xor
inc
aas
inc
ret
cmp
jmp
cmp
xchg
mov
push
mov
aas
enter
rclb
pop
repnz
xchg
pop
icebp
dec
lahf
out
sar
sti
mov
cmp
mov
jmp
xchg
jne
sbb
mov
sub
cmpsb
xor
aam
xchg
mov
out
and
test
xchg
or
inc
jne
sbb
sahf
scas
or
inc
pop
stc
pop
dec
insl
nop
test
xchg
enter
nop
xchg
pop
cmp
cli
call
pop
clc
mov
cmp
pop
lret
loop
in
sbb
mov
jge
out
xchg
mov
ss
test
push
or
cmp
mov
jle
cltd
or
adc
cmp
inc
cmpsl
mov
xor
nop
inc
pusha
and
scas
adc
ljmp
cltd
pop
adc
lcall
sbb
aas
jg
cmp
jb
cli
aas
scas
cmpsb
sahf
lahf
and
push
repnz
mov
cmp
add
dec
repz
loop
xor
aas
dec
mov
mov
xchg
cld
aad
ja
cmp
push
jb
ja
filds
xor
mov
pop
test
stos
mov
mov
jne
sub
aam
mov
jge
cmp
mov
xchg
add
xchg
and
xor
adc
jno
push
aaa
scas
int3
shlb
rol
and
cmc
push
push
cmpsb
ja
lcall
xchg
mov
inc
pop
add
lods
or
aad
cmpsl
mov
jnp
mov
xor
enter
cmp
xor
jge
mov
xchg
mov
pop
imul
stos
outsb
or
cmp
and
mov
or
stos
dec
sub
rcrl
fdivp
testl
and
sub
inc
jns
insl
or
sbb
jae
cmpsl
and
or
lea
stos
loopne
lea
inc
adc
and
mov
out
es
test
imul
mov
mov
scas
push
mov
fists
pop
punpckhwd
push
pop
cli
call
mov
fs
inc
jp
adc
repz
push
jmp
lcall
or
stc
xor
jg
dec
ret
push
push
jo
dec
das
test
push
lahf
test
movsl
lock
rclb
mov
in
add
mov
pop
mov
push
or
mov
fnstenv
and
mov
inc
xchg
mov
pop
push
push
lods
bound
fdivl
lods
dec
imul
imul
int
repz
pop
lods
in
je
cmc
fstpt
outsb
arpl
push
scas
xor
inc
mov
sbb
bound
adc
out
adc
jmp
jbe
mov
mov
sbb
enter
mov
shlb
aad
jp
ljmp
xchg
in
inc
xchg
jge
out
out
in
push
shrl
xor
mov
sub
xor
int
jb
lds
push
xchg
test
nop
and
shrb
repnz
pusha
jge
popf
push
add
dec
adc
inc
xchg
add
or
xchg
mov
sub
pop
clc
aad
loopne
inc
mov
movsl
mov
fbstp
stos
int
dec
test
add
aad
aas
jp
fistps
fimuls
lahf
jo
push
sub
mov
push
hlt
push
or
mov
pusha
repz
cmp
int
jbe
xchg
add
rorl
and
lcall
out
fistl
fdivrl
aas
jge
ljmp
sbb
loope
xchg
insl
mov
arpl
in
xor
imul
cmpsl
mov
mov
pop
ljmp
ja
mov
rclb
jns
cli
mov
adc
pop
movsl
jnp
data16
aas
aad
ja
mov
dec
cltd
stos
mov
and
inc
jecxz
xor
cmp
out
mov
or
dec
jo
mov
pop
test
movsb
and
outsb
insl
mov
xchg
nop
push
inc
les
out
fisttps
mov
out
fdivrs
loop
sub
dec
cmp
add
mov
subb
jecxz
lahf
cwtl
mov
mov
mov
bound
cltd
gs
mov
xchg
inc
in
inc
lahf
lea
xorl
xchg
or
push
mov
inc
dec
popa
inc
addr16
jmp
clc
cld
push
cs
push
jecxz
movsb
adc
push
add
sub
out
jno
repz
fcom
cld
adc
push
loop
clc
gs
mov
jns
mov
aam
xchg
ja
or
or
cmpb
scas
pop
mov
in
jo
loop
mov
or
repz
lahf
bound
push
cmp
dec
lock
xchg
xor
movsb
icebp
pop
adc
sub
ljmp
icebp
xor
ret
clc
push
les
or
dec
dec
pop
jo
cmp
mov
mov
adc
das
dec
fistpl
or
je
and
out
dec
aad
mov
fidivrs
inc
ss
dec
mov
mov
fldl
daa
dec
or
xor
div
jle
cmp
out
cs
inc
addr16
fisttpl
xor
pop
sub
cmp
cmp
aas
and
shlb
inc
jmp
int3
xchg
out
dec
lcall
mov
dec
jg
movsl
cwtl
mov
lcall
ds
dec
leave
dec
sbb
and
ljmp
ret
jp
cli
or
fistpll
fisttps
add
repnz
mov
je
mov
fs
gs
or
push
add
and
jns
fimull
test
pop
jmp
xor
cli
shlb
and
sub
popa
int3
loopne
mov
ja
clc
add
fwait
mov
xchg
mov
aas
ret
lock
and
jl
or
jns
cmp
or
cli
push
cld
sub
adc
in
arpl
out
shll
hlt
notb
sub
jbe
test
sahf
sub
ss
cmp
leave
dec
pop
jbe
xchg
push
lcall
add
cwtl
shrb
sar
mov
jecxz
pushf
xchg
scas
cmp
inc
lods
lret
repz
in
imul
cmpsl
cmp
fs
and
lods
aas
out
xchg
jg
sbb
or
pop
lcall
sbb
jg
addl
repnz
jge
sbb
ljmp
hlt
dec
popf
cli
cmp
aas
test
mov
scas
jbe
mov
or
imul
xchg
out
xorb
or
cld
pushf
testl
ss
cwtl
lahf
xchg
pusha
sbb
xchg
in
fiadds
mov
jns
bound
cmp
out
sbb
mov
loopne
shll
lret
lods
dec
jb
cwtl
subb
mov
fwait
sbb
sbb
popa
adc
pop
sub
push
xchg
imul
dec
fsts
adc
or
inc
out
lods
pop
sbb
push
iret
xor
cmp
sub
ss
cmc
pop
es
bound
mov
jns
popf
jne
jb
std
jecxz
cmp
jb
fimuls
add
aas
insl
sarl
mov
add
cmp
es
jo
popa
out
push
pushf
movsb
push
sbb
mov
fwait
add
scas
pop
notb
mov
dec
out
fcmovnu
popa
scas
xor
push
jecxz
pop
pop
adc
xor
je
into
int
add
xchg
pop
cmp
ret
stc
push
mov
scas
cltd
jge
gs
out
addr16
das
ftst
xchg
pop
sub
sub
mov
movb
test
or
and
shlb
jbe
pop
and
mov
jp
shlb
xor
add
push
repnz
int
or
pop
cmpsb
mov
test
inc
or
mov
les
adc
insl
sub
ret
dec
pop
jecxz
cmp
mov
xchg
dec
icebp
cmpb
mov
sub
push
mov
jb
or
jbe
cmpsb
scas
mov
mov
jno
insb
scas
sarl
or
inc
adc
adc
xchg
loope
mov
ret
push
test
lahf
stos
fnsave
mov
sti
pop
stc
std
xlat
aas
sub
ret
fs
into
fistpll
mov
xor
movsl
cltd
mov
adc
adc
dec
sahf
sbbl
jg
outsb
dec
rcl
nop
cltd
and
popf
adcw
dec
das
adc
scas
repz
into
sub
std
adc
lret
int
dec
out
xchg
jle
and
movsl
push
mov
and
jmp
clc
mov
xor
cltd
out
dec
lock
ret
adc
imul
xor
std
mov
sbb
and
add
lea
je
orb
jb
dec
test
push
and
dec
cmpsl
test
lods
sbb
lcall
add
push
shrl
test
and
test
cmc
sbb
mov
scas
addr16
leave
add
sahf
fiaddl
jnp
xchg
data16
mov
fsubrl
loop
pop
mov
xchg
add
paddw
repz
or
out
cwtl
dec
xadd
stos
xor
pop
imul
push
xlat
and
fbstp
add
sbb
insl
cmc
mov
sub
stc
pop
dec
xchg
jbe
lods
push
sbb
xchg
inc
stos
inc
dec
incl
loop
cmpsb
xchg
and
jle
inc
sub
push
dec
mov
loop
in
std
int
ret
sahf
jns
add
lret
rcr
in
ja
stos
push
or
in
mov
cmpsl
ja
call
add
inc
ljmp
ss
mov
pushf
xchg
movsl
bound
jmp
cmp
jmp
lock
fisttpll
in
mov
sub
push
jl
adc
enterw
dec
xchg
loop
fildll
sub
jecxz
lahf
push
andb
das
fistpl
pusha
jne
jb
daa
inc
dec
pop
or
cmovns
out
push
adc
hlt
mov
outsb
mov
cmp
loopne
cmp
cmpsl
add
es
mov
roll
lret
insb
adc
and
xchg
ss
xchg
je
inc
jp
iret
inc
inc
in
enter
xchg
decb
sbb
call
xor
les
and
stos
inc
jno
test
cmpsb
mov
ret
gs
xorl
or
out
shll
popf
xor
pop
fcomps
cmpsl
stos
sub
inc
jecxz
jmp
xchg
xchg
out
test
orb
adc
ljmp
hlt
pop
or
adc
aaa
in
pop
add
out
ljmp
data16
imul
inc
je
dec
adc
test
int
jle
imul
push
std
and
ficomps
adc
jmp
lds
fidivrs
inc
out
jnp
cmpsb
mov
out
lock
xchg
fnstsw
mov
in
pushw
mov
ljmp
xor
dec
sub
mov
shl
loope
xchg
movsb
lock
fs
jne
mov
scas
xor
sub
ret
ljmp
jbe
jnp
xchg
and
cmpsl
lcall
js
cmp
xor
fidivrl
into
add
push
push
and
sbb
dec
lcall
push
adc
add
mul
das
movsb
icebp
push
or
gs
out
mov
stos
mov
movsl
and
xchg
fcomip
nop
arpl
ds
cmc
shrl
mov
jae
sbb
inc
sub
dec
push
cmpsb
rep
inc
adc
jp
aad
and
pop
stc
mov
aaa
out
jns
out
mov
repnz
mov
pop
js
lods
sub
xorb
and
sub
imul
leave
and
mov
push
fidivrl
std
pop
mov
mov
sbb
cmpsb
out
adcb
adc
enter
mov
cmp
gs
cli
popf
sti
push
loop
xor
xor
repnz
ds
push
push
mov
xlat
in
lock
push
int
mov
insl
fwait
outsb
xabort
lock
mov
and
jp
jg
sbbb
sbb
shlb
int
push
pop
inc
jmp
sbb
sbb
adc
pushf
out
jl
xor
push
cli
int3
lahf
lds
jb
pop
fisttpll
dec
repnz
ss
jl
cmp
mov
jge
pop
push
popa
in
dec
out
xchg
fsubs
out
xchg
fisubs
pop
mov
adc
notb
sahf
jno
subl
mov
xlat
jmp
push
xor
es
sti
push
jo
jnp
inc
push
push
rclb
ljmp
mov
out
cmp
push
js
rclb
outsl
pop
xchg
jg
enter
das
mov
bound
stos
mov
shrb
in
mov
pushl
jg
lds
ror
cli
pop
fcomip
aaa
cmpsl
xchg
jno
shlb
xor
jb
pop
xor
lret
mov
jno
pop
imulb
out
aaa
insb
aam
cmp
jnp
add
orl
stos
cmp
lods
xchg
pop
sbb
mov
mov
jp
push
stos
mov
aam
add
pop
cmp
mov
aam
std
adc
jle
js
add
xchg
cmc
aad
push
pop
scas
sub
test
push
popa
adc
pop
je
sub
pop
push
mov
inc
loop
sbb
pushf
ret
imul
cmp
dec
addr16
rcrb
jge
imul
fstps
daa
dec
mov
mov
and
mov
out
das
movsl
stos
push
push
jae
adc
push
mov
push
lods
sbb
add
xor
test
sti
push
push
jmp
stc
or
rcrb
jb
inc
inc
loope
mull
lods
pop
push
pop
jmp
in
movsl
icebp
push
rcll
das
jo
jmp
movsl
xchg
data16
stc
xchg
test
inc
lods
daa
dec
addps
push
or
js
mov
imul
xor
mov
cmc
inc
inc
adc
pop
jmp
cld
dec
pushf
outsb
mov
jne
lcall
dec
shl
xor
jle
and
xchg
adc
inc
pop
xchg
jo
sub
sarb
movsl
cmp
inc
cld
jmp
out
ror
scas
mov
subl
lcall
dec
test
test
push
push
psubq
xchg
sub
and
xchg
insb
mov
int
insl
xchg
mov
fldl
push
arpl
enter
loope
cwtl
mov
xchg
cmpsl
sti
sahf
push
jno
sub
sub
xchg
push
addr16
or
push
mov
arpl
call
mov
sbb
cltd
in
in
jl
push
mov
jnp
push
je
mov
cmp
lods
fldenv
stos
inc
pop
stos
test
rol
or
lods
mov
scas
in
cmp
sahf
pop
test
out
andl
xchg
xor
mov
imul
ja
outsb
and
push
jg
adc
popf
fistpl
xor
mov
inc
push
fnsave
pop
push
sub
js
sbb
roll
add
in
xchg
fmuls
push
scas
outsl
mov
loopne
mov
sub
push
and
mov
out
dec
flds
shrl
movsl
inc
psrlw
and
es
or
inc
push
cmp
mov
mov
call
mov
mov
insb
pop
stc
std
bound
leave
or
pop
mov
push
ret
ret
stc
adc
icebp
pusha
jae
test
inc
push
lea
sub
fwait
adcl
sbb
xchg
cmp
dec
or
xor
push
lahf
xor
mov
pop
xchg
adc
cmp
js
xlat
mov
fidivrs
mov
xchg
mov
push
sub
lock
sub
out
jle
mov
scas
stc
mov
push
jo
gs
or
jmp
test
sub
push
mov
adc
adc
pop
rclb
enter
lock
push
inc
sub
xchg
xor
pop
cmpsl
sahf
adc
push
out
je
repz
cmc
mov
fs
sbb
mov
jecxz
xor
jb
or
fiadds
outsl
in
test
aaa
or
xchg
add
jl
pop
cli
xor
test
inc
icebp
test
adcb
daa
inc
jb
sbb
jns
test
bound
filds
ja
mov
xor
aam
mov
mov
push
or
lea
ds
mov
add
rorl
sub
ret
sbb
sub
pop
outsl
xchg
pop
pop
jnp
or
pop
push
push
pop
imul
rcrb
inc
pusha
sbb
push
pop
movhps
cld
repz
add
pop
gs
or
jecxz
jno
cmp
pop
push
cmp
push
jmp
fwait
sahf
push
gs
dec
xchg
mov
fwait
cltd
jge
push
xchg
leave
cwtl
inc
pop
pushf
hlt
jge
int
mov
add
inc
mov
std
nop
dec
sti
into
test
and
inc
mov
insl
mov
aaa
lahf
adc
inc
xor
loopne
roll
scas
fyl2xp1
aas
icebp
stos
xor
movsb
insb
xchg
in
mov
movsl
xchg
mov
addr16
mov
fucomp
cli
mulb
adc
outsb
das
es
lods
mov
popf
add
xchg
andps
cwtl
or
outsl
push
xlat
lods
sub
mov
add
sub
stos
sub
mov
test
in
jns
and
inc
popa
dec
ds
pusha
push
add
movsb
cld
cmp
cwtl
jecxz
adc
jae
mov
cltd
jecxz
clc
std
add
stos
es
adc
adc
repnz
fsubl
lahf
mov
stos
inc
nop
mov
lds
lods
sub
push
mov
fldl
loope
jns
cmp
lea
test
sbb
or
cmp
out
adc
lret
je
fs
shlb
dec
fcmovnbe
mov
mov
pop
rcrb
xor
sti
or
or
mov
stos
xchg
mov
sub
fistps
fwait
mulb
add
jne
in
mov
xor
out
push
mov
inc
adc
mov
retw
cmp
mov
fildll
fsubrp
pop
ljmp
xchg
and
sbb
hlt
cmp
inc
sbb
ret
and
iret
mov
out
xor
push
jo
dec
jne
popa
mov
jnp
mov
lds
out
ljmp
or
scas
aas
popa
outsl
cld
mov
add
add
cmpsl
fists
ja
popa
loopne
xchg
and
lods
aad
call
in
mov
push
mov
mov
mov
fadd
subb
mov
imul
xor
lret
les
out
or
cmpsb
jnp
mov
jns
dec
jge
jo
mov
inc
ja
rolb
xchg
jge
add
mov
push
pop
adc
lret
ss
mov
ret
leave
fcompl
or
jg
fsubr
leave
cs
ds
push
jle
sahf
inc
push
jne
das
aas
push
cmp
cmpsb
push
sti
fistpl
and
rcrl
and
add
add
cmpsb
sbb
and
push
fwait
jp
jae
daa
je
adc
sarl
nop
popa
gs
push
or
sub
imul
pop
and
push
jle
cwtl
push
push
add
leave
lret
imul
es
fidivrl
iret
and
cmp
popf
bound
mov
mov
test
stc
into
or
insl
xchg
jb
shr
dec
sahf
jne
movsl
xchg
fs
mov
adc
xchg
fildll
sbb
movsb
mov
test
pop
fucom
sti
adc
mov
xlat
loopne
out
es
cmc
sarb
test
jb
or
lahf
push
aad
or
and
out
shlb
adc
stc
lahf
lahf
or
in
xchg
and
push
dec
dec
sub
mov
push
ljmp
icebp
cmpsl
push
mov
dec
outsl
stos
or
xor
xor
pop
mov
push
xchg
cld
cltd
xlat
cmp
sbb
icebp
dec
adc
mov
icebp
jl
lds
in
shll
ficoml
lea
mov
repz
out
negb
int3
in
sbb
jg
and
cmp
or
push
mov
push
jne
ljmp
mov
push
mov
ss
mov
dec
cmc
icebp
and
ret
ret
add
xlat
cmp
rol
jmp
fidivrs
outsl
jbe
ficoml
fs
aaa
mov
dec
mov
push
dec
shr
ret
lahf
mov
shlb
cmp
lds
jle
lea
inc
mov
xchg
sub
pushf
cld
xor
mov
fcmovb
or
mov
enter
dec
or
scas
xlat
mov
jbe
cmp
add
aas
das
xor
repnz
not
cmp
xchg
xchg
sti
cmpsl
ss
dec
xchg
cmc
push
les
gs
inc
outsl
cmpsb
jne
int3
aaa
fs
jge
pop
insb
test
push
fistpl
pushf
and
pushf
mov
push
xchg
inc
or
cmp
pop
xlat
addr16
movsb
pushf
xor
ror
and
jbe
push
cmpsl
negl
ja
in
push
pop
ror
inc
imull
fiadds
outsb
dec
add
xlat
and
mov
rcll
rcr
cmp
sub
mull
fstp
sbb
nop
hlt
int
add
xor
push
std
push
cmpsb
lock
jno
notb
test
jno
outsb
sbb
andb
fwait
mov
mov
sub
out
hlt
add
jne
pop
sti
daa
in
cmpsl
ffree
jge
add
mov
scas
lahf
sub
fildl
mov
xor
rol
push
mov
daa
lret
shrl
lcall
xor
cmp
pop
jae
mov
jb
bound
jp
mov
pop
scas
jns
es
fs
cmp
dec
stos
mov
mov
and
mov
cmp
push
and
pop
push
or
gs
push
mov
out
loop
mov
cmpsb
inc
push
outsb
mov
jbe
inc
xor
mov
jp
inc
pop
mov
sbb
adc
sar
pop
push
popf
imul
xor
xchg
pop
std
sbb
out
aas
add
es
js
shl
ss
push
mov
mov
sub
inc
rcrb
dec
mov
je
xorl
shrb
pushf
jecxz
dec
mov
or
insl
lods
leave
sub
jg
cltd
xor
jb
jmp
and
push
pop
out
cmpsb
insb
cmp
sbb
shlb
lret
and
jmp
add
jg
in
roll
mov
scas
add
aas
fstps
fwait
in
and
call
jp
pop
jle
out
sub
cmp
jmp
pop
shlb
jns
mov
sbb
sub
enter
inc
sub
insl
push
sbb
adc
mov
test
call
dec
and
cmpsl
jb
inc
outsl
mov
mov
or
sbb
xchg
addb
mov
sbb
or
xchg
ja
rolb
shl
push
cwtl
sbb
jg
out
mov
cltd
xchg
push
xchg
pop
sti
xchg
arpl
pop
mov
dec
push
pushf
shufps
scas
fdivs
jbe
pop
repnz
xchg
into
xor
inc
mov
cmpsb
lar
jae
scas
mov
cmp
stos
addr16
imul
insb
xchg
int3
ljmp
nop
cs
xchg
push
pop
lods
fistps
hlt
jle
mov
jg
cmpsl
sbb
popf
mov
dec
jg
adc
pop
mov
out
mov
popf
xor
mov
dec
jnp
adc
jge
int
or
adc
push
xchg
and
fidivrs
mov
and
xchg
insb
mov
js
scas
mov
xchg
in
repnz
mov
ljmp
fisubs
roll
xchg
aas
adc
jb,pn
les
unpcklps
jecxz
push
mov
or
xchg
rorl
push
fwait
sub
sbb
and
push
sub
orb
push
loopne
ljmp
data16
aaa
push
mov
test
xchg
cmp
fistps
shrl
pusha
jg
lret
loope
sarb
dec
aas
pusha
dec
dec
int3
in
dec
dec
push
ss
and
jb
and
ret
push
mov
sub
es
hlt
outsb
mov
je
out
test
testb
fdivrs
xchg
ss
or
repnz
inc
daa
mov
inc
cmp
idivb
frstor
jge
mov
dec
ss
sbb
push
push
fdivl
pop
loopne
outsl
sub
push
lret
imul
mov
inc
pop
aam
pop
in
sbb
aad
mov
into
lock
arpl
mov
sbb
inc
pop
inc
sub
dec
xor
nop
lret
jmp
cs
popl
pop
lods
pop
test
pop
mov
push
cmpl
cmp
sarl
cmp
lcall
and
adc
mov
mov
sbb
push
pop
repnz
mov
or
cmp
and
imul
nop
lea
mov
repz
out
push
xlat
into
call
insl
xchg
push
inc
adc
mov
bound
push
jecxz
cwtl
clc
test
inc
mov
or
inc
mov
xchg
out
das
lods
cmp
and
rclb
pop
int3
xchg
sub
fs
xchg
daa
enter
lods
shll
sbb
cmpl
les
test
jnp
mov
notb
push
mov
cltd
sbb
in
sub
jecxz
sahf
repz
test
inc
adc
insb
jl
test
clc
jmp
int3
sub
icebp
call
cs
pop
fistps
inc
icebp
mov
cwtl
fisubl
popf
push
adc
out
sub
sbb
xchg
adc
repnz
das
sub
xchg
inc
or
mov
mov
bound
xchg
mov
sub
ret
pop
mov
pop
stc
and
test
insl
das
lds
in
scas
jle
popa
mov
xchg
popa
dec
orb
jge
xor
dec
cmpl
loope
push
fbstp
inc
mov
aam
cmc
popa
test
sub
sbb
jb
lea
arpl
mov
push
sbb
bound
xchg
mov
mov
mov
sbb
xor
add
scas
push
push
cmp
rcll
add
imul
xchg
xchg
stos
lret
xor
ror
and
rorb
push
or
push
pop
or
movsb
das
cmpb
shll
dec
dec
push
pop
mov
mov
loope
inc
rcll
daa
add
mov
add
xchg
pop
mov
cmp
pop
repz
xor
push
sbb
sub
pop
test
dec
xchg
pop
inc
adc
jl
and
loope
sbb
adc
popf
sbb
lcall
cmp
ror
adcl
rorl
incb
jno
lods
xor
pop
ss
in
shrw
push
call
leave
mov
sbb
iret
dec
sbb
mov
mov
jl
xchg
mov
adc
and
xchg
push
mov
jo
inc
add
adc
lret
imul
and
in
or
sub
ficoms
xchg
aam
cs
loop
adc
dec
push
push
xor
pop
cmp
push
jns
shrb
adc
xchg
and
loopne
mov
xor
mov
mov
ret
and
outsb
mov
pop
cmp
dec
subl
or
xchg
shl
mov
leave
int3
sbb
push
cli
pop
mov
mov
mov
xchg
sub
cmpsb
out
ret
hlt
les
sub
mov
add
jmp
pop
jns
ret
push
mov
mov
and
movsb
add
les
fdivs
jl
stos
mov
cmp
xchg
fldenv
pop
sahf
pusha
shll
sub
out
pusha
adc
mov
dec
test
xor
sub
fbstp
sub
or
mov
jb
mov
testl
repnz
movd
sub
cmp
adc
mov
sub
mov
mov
cmc
fstpt
add
fs
add
xchg
imul
rcrl
mov
sub
fwait
mov
sub
pop
jb
ss
pop
adc
inc
ja
insb
fists
pop
pusha
imul
out
push
cmp
adc
jecxz
loope
notl
test
je
cmp
popf
mov
into
mov
addl
cs
jmp
and
and
adc
arpl
adc
cmc
je
negb
pusha
nop
arpl
lret
dec
daa
mov
and
cltd
xor
int3
out
fsubrl
lret
hlt
mov
in
test
jecxz
or
sbb
ds
outsl
cmp
out
loopne
mov
and
push
das
push
in
cli
rcr
cmpsb
inc
mov
add
test
dec
incb
adc
push
jl
rcrl
xlat
out
repnz
xor
es
and
lods
cmpsb
pop
in
decb
jg
mov
test
aaa
push
add
or
js
dec
jp
inc
movb
pushl
xor
pop
mov
test
mov
clc
scas
xor
fisttps
pop
jns
mov
test
xchg
xchg
pop
sahf
cwtl
test
mov
test
cmc
ljmp
outsl
mov
lods
sub
clc
popf
mov
jae
pop
aaa
or
pop
lret
cmp
push
dec
lock
mov
push
or
jns
addr16
jbe
cmp
mov
push
lds
dec
mov
leave
push
imul
mov
lret
push
inc
push
push
imul
mov
dec
call
incl
pop
cmp
mov
test
sbb
mov
adc
add
pop
mov
rorl
xlat
add
inc
int
push
fwait
les
testb
gs
adcl
mov
stos
mov
insb
pop
dec
jg
imul
pop
push
mov
inc
mov
cmc
pusha
pop
pop
je
lcall
pop
sbb
add
mov
in
loope
pop
cli
stos
bound
dec
lcall
loope
jns
ljmp
lods
cmp
out
imul
outsb
xchg
or
fwait
push
inc
cmp
xor
inc
enter
in
lods
mov
pushf
jl
mov
in
shr
xchg
jnp
mov
rol
mov
inc
xchg
ret
fwait
je
add
stc
pop
movsb
mov
dec
xchg
repz
cld
in
movsl
and
stos
adc
mov
inc
clc
adc
or
dec
insl
jns
mov
pusha
jno
cmpsb
xchg
sub
pop
outsb
fwait
pop
mov
fwait
pop
dec
aam
and
lds
mov
cld
cmpb
fldcw
push
xchg
ja
loopne
add
push
fs
fptan
mov
or
call
pop
jbe
into
mov
jns
dec
mov
repz
int3
out
int3
xchg
into
out
icebp
enter
cmpsl
int
pop
clc
xorl
ds
dec
call
adc
scas
push
nop
pushf
aad
pop
lret
out
js
pop
dec
cmp
dec
stc
xor
sub
loope
jle
int3
xchg
pop
daa
xchg
scas
psubsw
stc
adc
fdivs
jp
push
cltd
inc
inc
pop
leave
mov
fnsave
jl
push
sti
test
outsb
inc
outsl
adc
fs
pop
inc
lods
or
or
inc
push
sub
pop
cmp
xor
xchg
or
hlt
jl
lods
ret
mov
dec
dec
adc
cmpsb
mov
mov
sbb
and
cli
sub
aaa
xor
xchg
rolb
xor
xorps
movsl
xchg
mov
and
mov
sbb
pop
sbb
sahf
clc
dec
mov
pushf
fistps
dec
xchg
ret
mov
and
cltd
pop
cltd
fmull
outsb
vmovsd
sub
mov
fcomp
jnp
mov
xchg
ja
into
iret
leave
sbb
push
inc
rclb
popf
or
data16
std
inc
xlat
hlt
bound
shl
outsl
cmp
mov
stos
pop
jge
jmp
repnz
mov
and
cmp
sahf
fs
xchg
out
das
into
mov
jb
xchg
jns
subl
shl
dec
sub
and
cmc
cs
mov
lds
or
adc
inc
iret
xchg
dec
adc
call
xchg
mov
nop
mov
mov
cmpsl
push
mov
repnz
push
mov
fwait
inc
add
fstl
out
adc
lods
adc
xlat
jo
in
and
neg
call
pop
pop
test
xchg
cmc
fists
in
jno
cmp
mov
sbb
push
push
cwtl
or
push
into
repz
popa
jns
or
pop
or
incl
icebp
nop
pop
lahf
jno
pop
cmp
stos
sub
lret
sbb
enter
jns
push
jbe
mov
xor
mov
rolb
sbb
fdivl
xor
clc
shrb
xchg
nop
add
icebp
mov
dec
jecxz
mov
jg
icebp
or
iret
mov
stc
xor
pop
fisttpll
sub
lds
push
movsb
stc
mov
add
adc
push
jb,pt
sahf
jg
jmp
push
jp
push
xor
fsts
inc
shrl
sbb
je
insb
or
je
stos
fcmovnu
xor
scas
sub
ss
mov
or
das
out
fmuls
xor
icebp
loope
pop
lea
xor
xor
scas
fsubrl
push
add
mov
aad
inc
in
nop
mov
xchg
xchg
mov
pusha
mov
dec
push
out
js
mov
mov
mov
jb
pop
int3
push
mov
xor
inc
mov
sub
add
mov
cmpb
enter
add
lods
ret
pop
icebp
popf
pop
or
inc
int3
mov
sub
jg
aaa
ja
insl
pop
push
xchg
imulb
or
leave
inc
sub
sbb
jge
bound
jae
sbb
mov
and
js
sahf
scas
push
mov
xor
mov
je
lods
ss
leave
push
xchg
out
sub
mov
pop
xor
pop
nop
lahf
movsb
xor
imull
sub
push
aaa
les
jl
in
xchg
stos
jo
sbb
add
enter
cli
lds
aad
ficoms
lahf
inc
jecxz
lret
mov
mov
mov
je
arpl
pop
in
inc
mov
mov
fisubrs
sub
fldcw
jnp
mov
xchg
jb
sub
or
addb
dec
adc
cmp
outsl
test
and
xchg
movsl
xchg
add
stc
sub
mov
dec
xor
xchg
mov
mov
popf
mulb
test
mov
fldenv
into
add
or
es
mov
mov
ret
lret
pushf
rcrb
and
test
mov
dec
mov
add
jle
inc
push
ja
pop
std
mov
or
mov
or
shll
daa
mov
pushf
inc
bound
push
push
pop
int3
lods
imull
add
cmp
cmp
icebp
jge
jp
gs
inc
jl
push
inc
lods
fiaddl
gs
fldt
in
xchg
filds
cmp
xchg
repnz
repz
ret
outsb
push
dec
and
cmp
aas
lods
movsb
mov
es
in
sbb
cmp
loopne
push
jmp
stc
xchg
mov
shrb
or
xchg
xchg
enter
idivl
sub
aaa
mov
cmpsb
mov
das
std
sub
das
cmp
sti
and
mov
cmp
test
mov
mov
aas
dec
or
mov
das
sahf
mov
push
xchg
testb
repz
stos
add
pop
or
repnz
adc
jno
push
mov
pusha
or
inc
into
sbb
mov
loopne
jle
aam
mov
push
jmp
idivb
jmp
lcall
mov
insb
insb
nop
push
push
cltd
out
sti
mov
mov
pop
push
lds
shll
mov
mov
js
mov
dec
lahf
pushf
adc
cmpsl
int
sub
mov
mov
lcall
jbe
in
xor
and
add
and
in
lret
mov
adc
nop
pop
sbb
in
add
jne
add
cmp
jnp
jg
dec
fwait
setne
add
cwtl
add
sbb
sbb
ja
xor
push
add
jmp
sbb
pop
shrb
fs
jne
mov
cwtl
add
push
sahf
add
pop
ljmp
cs
jecxz
cld
test
cmpb
mov
scas
sub
fadds
jae
and
cmp
clc
fidivs
jnp
lret
adcb
cmp
adc
lret
loopne
dec
hlt
ret
movsl
popa
les
cwtl
mov
jl
orl
cmp
push
cmpsl
lea
je
jnp
push
repnz
sbb
ljmp
mov
lock
fistps
xchg
fistps
es
and
loop
mov
dec
aas
jmp
loope
inc
aaa
xlat
inc
sbb
mov
lret
fsubl
inc
int
insb
and
nop
imul
sbb
inc
adc
cld
pop
loope
pop
xchg
call
dec
ret
push
dec
nop
sub
mov
lahf
xor
sub
loope
insl
imul
loop
sub
dec
std
hlt
mov
jg
cld
mov
imul
fnsave
cmpb
loop
mov
jle
pusha
addl
and
jbe
mov
adc
pop
or
sbb
aas
loope
mov
pop
pop
gs
call
mov
out
insl
jne
jne
test
jle
lods
std
xor
jno
adcl
aas
shrb
sub
call
jmp
je
imul
dec
lods
fldenv
cmp
lds
push
and
dec
fbstp
and
cmp
imulb
andl
call
mov
inc
dec
and
pop
cltd
rorl
pop
sub
jmp
test
and
or
mov
mov
jl
inc
lods
mov
push
loopne
xchg
ret
sbbl
repnz
xchg
fldt
gs
mov
dec
push
jmp
dec
adc
stos
adc
mov
or
out
dec
lcall
push
je
loopne
mov
in
cld
jg
and
jns
mov
push
mov
adc
or
sub
enter
cmc
pop
inc
push
mov
or
xchg
push
insl
pop
hlt
dec
in
hlt
fdivr
push
xlat
sub
cs
bound
shlb
push
adc
xor
mov
dec
mov
ror
stc
xchg
or
in
xchg
shr
jmp
push
in
jb
ljmp
pop
mov
push
loope
mov
adc
sarl
in
rorl
inc
loop
or
cltd
dec
movsb
xor
jb
pop
push
sbb
lahf
subb
repz
cltd
mov
or
lods
inc
push
sahf
cli
lods
in
jge
movsl
decb
mul
cld
cli
in
and
inc
shlb
cwtl
mov
daa
xor
aad
inc
sub
pop
push
mov
cli
xor
jge
out
fldz
or
std
add
scas
mov
dec
out
lea
shrb
aad
shll
popa
sbbb
cmp
rcrl
aad
daa
inc
iret
dec
cmpsl
xchg
adc
lock
ss
roll
out
call
jg
inc
xchg
clc
test
lock
adc
les
cmpsb
jge
push
stos
jmp
or
ds
sbb
outsl
cmp
gs
or
rcr
cmp
push
mov
inc
enter
fwait
cmp
lea
lods
leave
jg
popl
sbb
les
les
arpl
cwtl
jb
pop
jnp
sbb
xor
fisubrl
jnp
mov
gs
mov
dec
or
call
dec
notl
notb
out
mov
pop
inc
jecxz
push
movb
std
cmp
loope
mov
push
inc
ret
mov
pop
dec
jmp
mov
cltd
push
outsl
call
ljmp
ficomps
loope
insb
dec
test
rorb
enter
and
push
and
popf
xor
in
cmc
hlt
stos
pushf
jbe
jmp
xchg
int3
lret
je
add
sub
jne
sbb
outsb
lds
fwait
adc
in
jb
pop
mov
ds
push
sub
push
jle
out
cs
lcall
imul
loop
add
and
fdivrl
je
test
mov
sbb
mov
mov
sub
cmp
sbb
addl
js
xchg
pop
xor
ret
lret
inc
pop
lcall
or
je
nop
mov
daa
les
gs
pop
and
stc
orl
pop
inc
inc
sahf
fmulp
dec
mov
out
cltd
mov
or
and
pop
call
repnz
inc
push
into
mov
push
dec
inc
ret
pop
inc
dec
pusha
sti
sub
jno
inc
jns
xor
in
test
mov
shl
push
dec
out
mov
int3
inc
jnp
push
out
cmp
mov
and
pop
inc
fucomip
dec
sub
inc
lcall
popf
out
xchg
loopne
lods
cmpsb
nop
push
loope
pop
adc
sub
data16
cmpb
rcrl
adc
xor
fs
es
push
jae
xor
mov
mov
fistpl
rcrb
pop
rep
sub
sti
sti
sbb
and
sbb
or
cmp
icebp
clc
jb
push
pop
test
clc
jnp
outsb
int
and
pop
xor
fsubrs
cmp
aad
xlat
call
ror
loope
mul
dec
rcll
aaa
push
xor
dec
repz
inc
int3
or
jno
jb
jge
mov
ja
shl
or
adc
jnp
sar
push
sbb
neg
cs
shll
mov
orl
cmp
pop
push
or
addr16
dec
dec
jg
sbb
xor
sarl
jge
pop
adc
loop
mov
outsl
or
cs
push
mov
adc
mov
xor
and
mov
push
xor
loope
addr16
lcall
lcall
dec
inc
pop
insl
xchg
adc
popf
arpl
push
xchg
lahf
sahf
loope
or
and
rorb
icebp
fisttpll
stos
les
out
jmp
cmp
pop
jnp
dec
mov
mov
push
cs
aas
scas
fisttpll
sbbb
push
xorl
sbbl
iret
pusha
notl
or
pop
adc
testl
std
icebp
enter
ss
addl
jae
leave
and
push
movsl
dec
xor
data16
mov
ror
mov
outsl
inc
push
imul
xor
sbb
sub
mov
iret
jb
push
mov
ljmp
test
inc
aas
pop
addr16
sub
add
inc
mov
adc
popf
mov
xchg
insl
push
cmp
or
outsb
lods
push
mov
js
ret
fcoms
test
mov
push
xchg
rcl
imul
cld
xchg
adc
xor
daa
loop
and
mov
pushw
mov
icebp
add
jp
ss
out
add
fidivrs
or
jecxz
jae
or
pusha
roll
movsb
lea
shl
cmp
out
push
rorb
daa
addr16
inc
and
mov
loope
movb
pushl
push
or
jo
mov
mov
sbb
test
repz
fdivrp
xchg
out
enter
sbb
mov
fdiv
jmp
push
out
cmp
popf
enter
xchg
sbb
insl
repz
cld
push
cltd
nop
das
flds
add
mov
jne
mov
movsl
xchg
push
shlb
int
sbb
push
mov
jo
test
pusha
ljmp
outsb
pop
cmc
gs
shlb
pop
or
jle
inc
ds
nop
sub
scas
movl
add
push
in
add
in
std
inc
aaa
ja
fnsave
fiaddl
xlat
divl
repnz
jge
addr16
mov
cmp
sarb
add
out
sahf
xchg
mov
iret
push
ret
jle
cmp
xchg
sbb
mov
insb
clc
movsb
sbb
fptan
mov
dec
std
data16
test
andl
mov
mov
lcall
sub
push
xchg
dec
mov
push
xchg
loop
sbb
into
popf
push
sbb
data16
mov
push
add
dec
in
mov
sar
cmp
stos
popf
dec
into
movsl
js
mov
fidivl
lret
lods
insb
scas
sub
xchg
decb
fnsave
gs
loope
inc
mov
repnz
add
les
aam
ja
push
xor
jle
or
incb
xchg
mov
addr16
add
mov
shll
inc
imul
or
xor
jge
push
cmpsl
pop
dec
adc
cwtl
fucomp
bound
cs
adc
push
mov
lcall
mov
sti
jle
xlat
adc
les
shl
cld
sub
shll
jne
and
jp
cmp
mov
fwait
dec
stc
mov
sbb
sub
lods
inc
pusha
sub
dec
adc
rcrb
sub
mov
sbbl
pop
cmpsb
mov
shl
cld
jp
call
xor
xlat
and
fldl
xchg
or
jl
aaa
dec
sbb
cltd
sbb
lret
or
ss
aas
clc
lods
and
dec
xor
imul
dec
outsl
mov
cld
lret
lahf
pop
inc
nop
lock
mov
mov
adc
imul
into
daa
cmpsb
or
in
fisubrs
popa
dec
add
pop
sahf
dec
push
gs
imul
mov
iret
mov
xorb
push
loope
xor
stos
jp
xchg
adc
add
mov
or
pop
roll
push
xchg
dec
push
in
xorl
fs
adc
add
jge
mov
sti
xchg
jle
push
dec
sahf
jbe
lahf
bswap
cmp
xchg
mov
or
cld
xor
adc
iret
push
push
sarl
cli
mov
imul
lahf
in
mov
inc
pop
inc
roll
in
or
jne
push
add
add
jge
adc
push
out
mov
maxps
std
out
jge
cmpsl
ljmp
cmovl
out
rcl
dec
or
mov
dec
add
inc
cmpsl
mov
sub
stc
pop
xchg
js
shr
pop
xchg
add
jle
insb
push
xor
cld
loop
andl
jg
or
fsubr
imul
icebp
insb
adc
cmp
call
fs
add
aas
add
adcl
sbb
or
or
cmc
cmp
jae
mov
mov
outsl
in
sub
pop
mov
push
mov
es
xchg
push
test
sub
stos
xchg
mov
ret
in
outsb
aad
dec
adc
inc
pop
or
mov
outsl
ss
lahf
mov
jge
int
call
aad
dec
lods
clc
les
gs
xchg
int3
in
adc
js
lds
enter
xor
mov
xchg
imull
in
neg
gs
fsubrs
fs
xchg
out
dec
nop
aam
and
aam
xor
insl
out
mov
shll
ret
incl
lods
jb
xchg
mov
mov
sbb
mov
inc
xlat
jno
rcrl
cmp
insl
rorl
cmp
add
pushf
test
dec
mov
in
and
pop
lret
jecxz
adcl
nop
xchg
cs
in
cmp
adc
out
xchg
xchg
inc
in
and
mov
xchg
mov
sub
xchg
test
adcb
imul
xchg
adc
pop
xchg
sarl
sub
push
mov
test
xchg
sub
mov
mov
mov
mov
fimuls
push
cmp
scas
jle
shlb
pushf
inc
loopne
cmp
inc
call
cmc
dec
mov
pop
add
push
or
sbb
mov
arpl
jbe
xchg
cmp
fucomp
testl
cwtl
aam
shrl
jge
rol
fwait
lods
aad
dec
push
int3
add
jb
cmpsb
sbb
lahf
inc
sub
add
out
loop
sbbl
sub
aaa
addr16
add
push
addb
add
cmp
pop
js
lret
pop
mov
lods
mov
xlat
xchg
int3
adc
lcall
dec
fcomps
sub
pop
popf
mov
cmp
jmp
adc
stc
mov
mov
jo
dec
mov
dec
lcall
rorb
xor
mov
cs
lahf
inc
repz
add
pusha
push
pop
jbe
jae
xchg
xor
popa
xchg
mov
cmpsb
mov
xor
in
sarl
mov
adc
mov
cmp
movsl
pop
cmp
daa
push
dec
xlat
ljmp
add
jne
lock
test
sbbl
iret
je
int
cmp
push
cmp
add
imul
sbb
xor
sti
sbb
aam
out
cmc
push
ljmp
mov
lcall
sub
sarb
fsubl
xchg
sub
insl
pusha
dec
xorb
add
les
data16
inc
cmp
dec
loop
xor
xchg
sbb
aaa
dec
xor
outsl
or
rcrl
cmc
adc
cmp
cmp
mov
dec
inc
in
loope
xchg
aaa
dec
jmp
add
fs
sub
mov
xchg
scas
sbb
frstor
mov
cltd
std
bound
push
js
je
frstor
js
cmp
sbb
xchg
mov
dec
mov
sbb
aas
imul
xlat
jecxz
scas
xor
adc
rclb
gs
aas
mov
cmp
mov
lahf
icebp
push
ret
nop
daa
shlb
in
mov
insb
pop
and
cmp
jge
arpl
add
push
jno
rcll
mov
ja
mov
aaa
cmp
xchg
or
sub
out
sub
lcall
ljmp
xor
pop
shrb
pop
shll
dec
inc
xor
lock
sahf
and
sub
mov
xorb
mov
inc
pop
xchg
pop
xor
outsb
mov
cmp
jl
xchg
inc
inc
jp
cs
mov
popf
addr16
addl
aad
push
xchg
or
dec
les
lret
mov
cltd
sahf
lea
jmp
pop
cltd
fstp
jns
cli
iret
cmc
data16
add
mov
stc
test
ds
scas
ret
les
enter
fstpl
pop
daa
lcall
lret
add
push
negb
pop
fldenv
push
xor
inc
orl
gs
adc
mov
mov
divl
ja
lods
cwtl
xor
lret
pop
xor
pop
fs
fstpt
popa
xchg
icebp
shlb
test
jl
clc
fistps
or
scas
orb
stos
mov
dec
pop
dec
or
pop
jp
sti
lahf
insl
andl
jns
push
adc
popa
sbb
push
jecxz
and
and
mov
mov
fs
lcall
in
fmuls
pop
aaa
lock
mov
mov
xchg
or
push
repz
int
adc
leave
push
daa
dec
jno
jge
faddl
sti
mov
pop
mov
and
pop
cld
stc
xor
imul
or
and
aam
into
mov
inc
mov
mov
add
in
cmp
dec
cmc
cs
mov
mov
sbb
or
fisttpl
outsl
imul
sbb
fwait
add
cwtl
dec
adc
jo
or
popf
mov
je
dec
neg
mov
popa
pop
xor
push
in
mov
mov
xchg
add
mov
push
icebp
push
lcall
ret
data16
shl
ret
xor
aas
sbb
rep
mov
ljmp
sbb
push
sbb
mov
imul
push
js
pop
scas
dec
fistl
test
dec
mov
sahf
add
das
mov
fstpt
filds
adc
lcall
cmpsl
xchg
mov
es
fwait
cmp
lods
push
mov
adc
push
icebp
mov
lcall
mov
data16
lret
mov
push
xchg
mov
mov
mov
lret
sarb
cltd
daa
lock
and
push
shrb
div
test
fisttps
jg
lahf
addr16
cs
inc
dec
clc
cmp
xchg
xor
or
adcb
jae
lret
pop
icebp
jns
ret
sub
lcall
push
cld
jmp
push
or
add
mov
sbb
mov
dec
cmc
in
xchg
cld
sti
mov
movsl
addr16
push
fs
scas
cmp
inc
mov
add
fadds
repz
pop
push
push
mov
int3
outsl
aam
mull
fildl
in
mov
pop
pop
mov
cld
push
ljmp
mov
sbb
cmp
pop
cld
pop
pop
lods
leave
fisttpl
push
scas
jo
fwait
xchg
add
aad
add
jae
call
testl
xchg
std
jmp
mov
shll
cwtl
test
imul
push
dec
cmp
sbb
or
mov
mov
jl
or
insl
rcl
jmp
sbb
jp
xchg
xor
inc
pushf
es
mov
arpl
lret
jbe
add
mov
stc
jmp
or
mov
mov
lods
arpl
push
push
adc
int3
xlat
dec
inc
pop
jmp
repnz
insl
rcll
add
add
movsl
or
dec
into
or
mov
std
or
lods
lret
push
inc
sub
or
inc
mov
stos
call
inc
push
inc
lret
je
fwait
pop
adc
stos
push
mov
into
lds
out
mov
jge
aad
sbb
popf
cli
mov
push
popf
sub
loopne
ret
xor
pop
ret
xor
inc
lret
mov
inc
mov
jae
aaa
mov
std
pop
xchg
and
xchg
dec
in
and
outsb
dec
lock
ds
push
push
scas
cmp
sub
mov
stos
test
push
jae
mov
adc
xchg
rolb
dec
sub
cmp
pushf
stos
and
cs
fildll
xor
subb
ljmp
pop
fidivrl
clc
sub
mov
jae
add
lret
pop
repz
and
cmc
add
mov
test
lock
and
mov
pop
in
in
scas
pushl
orb
cmp
dec
std
cmc
mov
lahf
and
sub
sarb
dec
dec
insl
jle
xor
andl
pop
cld
in
sbb
cmpsb
int
sbb
movsb
adc
aas
sbb
cmc
into
inc
jnp
inc
fnstenv
das
xor
jbe
arpl
cli
dec
cmp
mov
into
mov
cltd
sub
data16
negb
out
xchg
inc
adc
inc
xorl
cld
jg
sub
daa
out
mov
sub
jle
cld
loopne
jno
pop
mov
das
sub
dec
mov
add
mov
test
nop
out
and
jmp
xchg
aaa
notb
xchg
cmpsb
pop
gs
shl
pop
ror
hlt
out
shrl
insl
in
sbb
cmp
rolb
dec
aam
testl
test
roll
cmpsb
shrl
lock
sahf
and
imul
inc
xchg
fs
lret
or
pushf
push
pop
push
dec
sub
sub
and
jne
sbbb
and
sub
mov
sbb
xchg
jbe
and
je
xchg
fidivrs
xor
fcompl
jle
cmp
xchg
shll
inc
sbb
fisttpl
xor
test
add
stc
dec
divl
aaa
fdivr
jae
in
stos
push
xchg
cmc
pop
sarb
push
xor
test
scas
stc
inc
fwait
push
repz
in
mov
sbb
xchg
mov
inc
inc
mov
fdivl
xorb
xchg
shrl
repnz
hlt
cmpsl
xor
das
sub
pop
les
mov
adc
inc
aad
push
jmp
addl
jmp
sub
fidivs
inc
mov
jmp
nop
int3
jae
or
push
test
mov
sub
pop
fwait
mov
jl
push
scas
outsl
sub
in
fisttps
sbb
mov
mov
jae
adc
and
add
les
inc
cwtl
jle
into
sbb
imul
or
or
cmpsb
movsl
movsl
stc
aaa
jmp
cmp
sahf
loope
cmp
shlb
or
test
add
lret
push
gs
data16
xchg
add
mov
ds
loopne
es
cltd
mov
dec
enter
out
push
pop
jle
dec
xor
push
outsl
test
pop
repnz
jle
lret
int
jl
jg
inc
xchg
adcb
add
mov
movsl
push
sbb
les
aaa
add
fcoml
out
std
aam
lods
in
pop
adc
cwtl
pop
insl
dec
sbb
jl
add
mov
xchg
inc
das
xchg
or
cmp
aas
stc
and
add
dec
in
addb
scas
jge
outsb
mov
inc
adc
iret
stos
jmp
push
addr16
rolb
mov
or
ja
rclb
mov
mov
hlt
cmp
cmp
mov
sbb
xor
dec
cld
mov
push
inc
jg
add
sub
hlt
lea
out
and
fs
sbb
xor
jnp
mov
popa
dec
and
jecxz
fcomp
sub
mov
pusha
pop
in
loop
cltd
cmp
add
or
xchg
lahf
lret
jne
fldl
xor
aas
inc
aam
mov
jle
pop
stc
mov
and
add
sbbb
sub
sahf
das
cmp
jle
fwait
je
mov
es
es
movsl
adc
pushf
inc
push
push
xor
std
hlt
fwait
mov
dec
dec
dec
call
bnd
cmp
cmp
jnp
cld
xor
gs
xor
scas
mov
out
jmp
out
fsub
sbb
jg
pop
loope
pop
xorl
xor
push
cmp
xor
lods
push
out
pop
mov
movsl
mov
jb
movsb
fistpll
lods
lods
shll
add
jns
mov
pop
pop
xchg
stos
mov
lret
mov
add
pop
sub
xchg
sbb
mul
outsl
test
mov
ss
lds
mov
sbb
icebp
test
mov
std
jne
rcll
cmpl
lds
push
cmp
outsb
and
shrl
int
stos
inc
data16
mov
sbb
xlat
mov
fbstp
xor
outsb
stos
push
push
mov
sbb
xor
mull
les
in
ret
ret
ss
mov
ja
dec
out
roll
sbb
es
mov
rcll
xchg
adc
lds
mov
xchg
test
push
test
mov
js
mov
cmp
xchg
add
jb
mov
jecxz
daa
std
sbb
loop
arpl
test
fsubs
das
mov
inc
jge
mov
das
dec
jg
push
xchg
shlb
add
add
sub
cs
in
test
cmp
pop
aaa
mov
je
popf
cmp
popf
in
add
and
call
mov
xlat
push
adc
aaa
popa
xchg
inc
clc
iret
and
lods
sub
pop
mov
add
pop
dec
imul
in
fiaddl
gs
push
xchg
int3
test
jmp
jno
add
xor
mov
pop
or
xorb
mull
inc
das
icebp
lods
in
fsubp
mov
sbb
mov
xchg
dec
in
mov
lahf
dec
xchg
jp
and
ret
pop
dec
push
loopne
aaa
xchg
popa
ficoml
push
xchg
int3
movsb
gs
cli
xchg
push
in
popl
cli
insb
ficompl
icebp
in
jns
cs
mov
setb
ds
mov
and
inc
mov
xchg
xchg
scas
test
lea
xor
push
jl
ljmp
dec
cld
xor
lea
imul
repz
gs
das
dec
mov
sbb
repnz
mov
iret
shlb
test
jo
cmp
sub
hlt
aam
imul
cld
mov
inc
mov
mov
out
dec
scas
ljmp
mov
mov
mov
mov
xchg
sbb
xor
shl
fs
mov
cltd
mov
mov
in
bnd
fiadds
lret
xchg
imul
dec
test
sbb
push
data16
lret
fs
sbb
aad
xchg
dec
pop
cld
gs
mov
push
in
jno
sbb
imul
lcall
push
loope
leave
insb
testl
or
xor
and
lret
jecxz
xchg
sarl
rcr
mov
cltd
inc
mov
les
mov
cltd
push
psubb
push
cmpsb
lock
pop
mov
pop
xor
cmp
push
mov
dec
movsb
imul
jb
adc
fwait
dec
cmp
inc
mov
test
test
pop
mov
inc
dec
inc
daa
leave
icebp
shrb
out
mov
xor
mov
lea
mov
fidivrs
jg
sub
pop
push
les
pop
scas
jle
imul
jns
push
jb
shrb
push
out
cmp
mov
jl
lods
nop
pop
dec
sbb
scas
data16
push
test
xor
pop
mov
lahf
or
push
jg
xchg
push
inc
jmp
mov
clc
mov
ljmp
rcrl
cld
cld
int3
mov
mov
shll
pop
addr16
push
cmp
push
inc
bnd
mov
inc
ljmp
mov
mov
sbb
jbe
mov
std
outsb
repnz
mov
xchg
leave
lea
arpl
loop
cli
popa
testb
stos
xor
sub
fwait
aad
iret
mov
xor
push
sbb
sahf
div
push
sahf
mov
add
ljmp
mov
stc
adc
decl
cmp
cmp
fldl
mov
es
xchg
out
xchg
mov
lods
and
movups
inc
loope
std
loope
or
push
fdivl
inc
xchg
mov
xchg
decb
adc
mov
push
icebp
out
cmp
inc
outsb
popa
in
mov
mov
dec
outsb
or
into
test
mov
hlt
insb
mov
pop
sub
out
and
dec
es
loop
lcall
into
fnstsw
mov
sub
xchg
repz
loopne
stc
daa
xchg
add
sbb
mov
test
test
adc
cmp
push
mov
xchg
jmp
pop
and
mov
pop
mov
xor
testb
arpl
jle
std
push
repnz
pop
cmpsl
dec
fists
inc
popl
or
imul
outsb
push
rolb
je
ljmp
movsl
popa
rep
leave
push
mov
mov
scas
ljmp
sbb
cli
je
mov
or
lret
jge
test
cmp
into
xor
xchg
add
rorl
je
mov
lret
sbb
mov
fldenv
lods
mov
sbbl
ljmp
or
lea
xchg
rclb
jge
sub
dec
xor
test
sahf
mov
jns
pop
cmp
jne
inc
dec
stos
repnz
xchg
stc
test
or
mov
incb
xchg
pop
add
in
jb
mov
cmp
cld
outsl
stos
fildl
xchg
mov
rcrl
adc
push
sub
cmp
ret
insb
ret
jnp
inc
andb
lds
dec
lcall
jge
add
xchg
mov
hlt
arpl
sbb
cmp
nop
sub
pop
imul
xor
pop
dec
cmp
pop
or
sbb
fidivrs
sbb
push
jb
and
lret
sbb
enter
enter
bound
ds
push
push
lcall
jp
inc
scas
ret
push
mov
stos
and
inc
shll
jg
add
das
sbb
inc
fistl
int3
imul
jp
dec
test
outsl
lea
cltd
xor
notb
mov
mov
add
xor
mov
mov
mov
mov
rcrb
mov
xlat
mov
cmp
popa
mov
mov
jl
add
cld
out
lcall
mov
repz
ds
xchg
or
fsubl
mov
loope
ljmp
loopne
adc
mov
add
cmpsl
dec
mov
jae
mov
mov
idiv
mov
xchg
into
ds
ret
jmp
movl
ds
mov
sub
adc
xchg
push
iret
lock
pop
jecxz
popl
mov
xor
data16
xchg
and
hlt
es
sub
leave
push
xchg
pop
or
mov
mov
aaa
mov
cmp
scas
lret
mov
fiadds
stos
lcall
sahf
sub
rorl
iret
add
adc
popf
or
sub
or
cmp
mov
loop
inc
inc
pop
mov
stc
jb
mov
pop
mov
lret
mov
mov
in
lret
cmpsl
rorb
mov
out
xor
or
out
ljmp
jns
clc
or
or
sahf
cld
aas
jo
mov
pop
dec
out
xor
inc
inc
stos
or
adcb
loop,pn
out
in
xor
sub
mov
das
inc
push
rcr
lock
sarb
jns
push
xchg
stos
or
adc
cmp
in
mov
mov
mov
add
out
push
movsb
into
xchg
pop
out
inc
aam
jmp
filds
push
enter
jo
int3
push
push
push
fnsave
jbe
rcr
mov
push
ret
int3
daa
dec
pushw
adc
add
xor
dec
push
call
and
xchg
in
popa
push
jl
rcl
lahf
arpl
pop
sbb
icebp
stc
mov
fcompl
test
xchg
lea
call
sbb
pop
sqrtps
sbb
add
arpl
call
add
pop
lcall
xlat
popa
mov
mov
dec
ja
inc
mov
loopne
or
or
jg
pop
fnstcw
inc
cmp
inc
xor
xchg
out
lods
mov
mov
xor
mov
insl
movsl
rcll
fwait
insb
les
sub
ds
mov
and
loopne
xchg
xchg
ficomps
sbb
mov
xchg
nop
dec
pop
push
sarb
and
std
inc
xor
mov
adc
jo
out
outsl
div
mov
loope
cli
stos
cmpsl
push
fidivrl
jbe
push
or
lods
imul
sti
or
jmp
leave
cli
fimull
movsl
sbb
mov
repz
sbb
add
movsb
adc
fistps
dec
xchg
lock
adc
cmp
popa
icebp
xchg
lock
ficoms
jge
dec
xchg
lea
cli
sbb
dec
call
imull
pop
adc
and
mov
sbb
loope
hlt
xchg
and
or
sub
xchg
pushf
push
add
cmp
cmpsl
je
mov
dec
test
or
sub
xor
out
shrb
dec
mov
dec
cmp
rcr
mov
loopne
andb
int
das
lret
mov
aam
negb
imulb
xchg
fisubrl
rclb
sarb
sbb
xchg
push
lret
in
in
fs
and
push
sub
sub
and
ret
aas
movsl
cmp
dec
mov
fmul
and
outsl
cmp
insl
push
in
pop
pushf
negl
scas
fs
adc
add
dec
xchg
mov
loope
jg
jp
filds
add
or
hlt
mov
mov
jl
xor
repnz
jnp
pop
cmp
adc
push
ljmp
xchg
or
push
cmp
or
jb
das
arpl
negl
jle
xchg
cmp
add
xor
dec
lcall
jo
loopne
jnp
enter
sahf
lea
jle
cmp
das
test
cmpsl
or
mov
addb
not
and
or
xchg
lds
push
movsl
push
pop
jnp
mov
jmp
push
call
sbb
fwait
icebp
loop
cmp
or
sbb
outsb
mov
push
orb
push
ret
in
std
outsb
sbb
shr
mov
stc
stc
enter
cs
inc
test
mov
push
leave
jmp
jp
bound
mov
mov
outsb
xlat
jae
jmp
sub
pop
inc
repnz
lret
cltd
sub
fstpt
repz
mov
or
popf
and
scas
gs
mov
inc
div
lock
xchg
lret
sub
xor
mov
jnp
aad
xchg
push
push
or
mov
jb
cmp
mov
sub
xor
lcall
nop
xchg
jl
loop
repz
fidivs
adc
testb
fwait
xchg
add
rorb
inc
mov
das
test
aaa
sbb
push
add
and
jo
sub
mov
js
adc
adc
in
inc
jb
in
jno
cwtl
sahf
and
cmp
sbb
mov
jge
mov
add
adc
xchg
std
pavgw
les
push
scas
and
mov
pusha
dec
sbb
xchg
jb
mov
and
mov
mov
out
xchg
jl
adc
addb
je
test
pop
aas
data16
cmp
test
push
adc
xor
mov
push
sub
ljmp
xchg
or
out
mov
rcrl
aam
popf
incl
sti
test
cmp
cmpsl
int
cmp
xor
inc
push
lret
sarl
loop
call
mov
jecxz
dec
je
jge
iret
cs
mov
mov
pop
xor
jno
mov
testb
mov
pushf
les
push
aam
imul
lret
dec
adc
pop
xor
xor
or
in
add
arpl
sub
scas
dec
ljmp
out
imul
push
into
cmpb
out
or
cmp
out
cmpsl
lahf
pushf
mov
or
xlat
and
ds
cld
mov
xchg
jno
repnz
xchg
pop
pop
mov
shrb
lcall
hlt
mov
push
cmc
cmpsl
punpcklbw
in
aad
cmc
mov
push
xor
push
mov
dec
fwait
push
push
add
pop
xor
pop
xor
cmp
in
les
mov
and
aas
js
fcompl
xchg
cmp
aas
push
testb
inc
lock
add
dec
cmc
pop
pop
es
adc
mov
sub
fnstenv
std
and
sub
popf
out
push
dec
pop
sub
scas
repnz
lahf
mov
pushf
test
jo
pop
test
lret
xor
xchg
dec
into
cmp
fbld
pop
mov
mov
mov
dec
stos
outsb
and
faddl
das
sub
sbbb
sbb
hlt
inc
add
lods
into
inc
movsb
testl
lahf
adc
pop
mov
arpl
pop
outsb
dec
and
jg
sbb
xchg
mov
out
xor
imul
or
mov
ljmp
add
loopne
add
jge
jge
arpl
or
adc
inc
jo
rol
dec
cmpsb
repz
push
adcb
lock
mov
fisubs
xor
out
adc
and
pop
inc
mov
cmp
and
add
cmpsl
sub
sahf
sti
cmpb
loopne
or
cmpsb
insl
lcall
in
jbe
dec
mov
inc
in
adc
shll
pop
add
mov
imul
cltd
sti
imul
ja
outsl
mov
mov
sbb
push
int
filds
cwtl
int
mov
scas
int
je
and
jne
or
xor
aaa
or
fidivs
add
cltd
into
movsb
popa
shr
cmp
adc
lea
sbb
mov
mov
pop
pop
jbe
sub
mov
adc
inc
add
sahf
mov
xor
sarl
test
inc
stos
push
xchg
mov
xor
adc
lret
mov
or
loop
add
enter
adc
pop
pop
fnsave
das
xchg
push
das
push
mov
inc
mov
cmp
xor
mov
xlat
sti
insl
sub
movsb
lds
xchg
cli
mov
or
fwait
mov
xchg
imul
pop
xchg
mov
adc
sbb
add
mov
fnstcw
and
cli
push
mov
adc
outsl
sahf
rorb
ss
pop
mov
push
dec
jg
dec
sbb
adc
add
lahf
enter
and
inc
cmp
mov
bound
mov
and
and
push
xchg
cmp
repz
es
or
xchg
ljmp
pop
push
mov
jge
iret
add
xchg
test
jne
mov
negl
dec
sahf
pop
push
and
fidivrl
dec
jmp
push
movsl
xor
jge
lahf
movups
adc
or
push
rcll
cmp
mov
bound
pop
xor
sub
std
fmull
cmp
inc
les
sub
dec
dec
push
popa
xchg
mov
arpl
push
insb
ds
adcb
push
xor
les
repnz
and
adc
sbb
sub
or
mov
lcall
stos
dec
jae
test
fs
ret
inc
xor
rclb
call
cwtl
sbb
mov
emms
rolb
out
and
int3
and
aaa
adc
and
xchg
xchg
push
mov
xor
jl
jmp
mov
out
enter
jle
push
lcall
test
mov
mov
xor
js
mov
mov
test
xchg
mov
lods
xor
adc
fsubrl
and
mov
popw
cmc
push
pop
or
sbb
cmp
in
dec
notl
andl
iret
cld
jno
arpl
hlt
nop
insb
sbb
cmpsb
rcrl
in
call
lahf
mov
adc
rolb
dec
adc
jnp
data16
cld
mov
and
js
cs
sbb
xor
cld
shlb
or
push
lods
mov
loop
xchg
test
push
repnz
repz
andl
inc
inc
scas
fcmovnb
shlb
rorb
aam
inc
sub
dec
push
xor
lods
push
ret
jle
adc
icebp
or
pop
and
in
outsl
lods
xor
aam
mov
pop
cmp
mov
adc
pusha
or
jbe
out
sub
popf
sbb
lds
or
mov
mov
pusha
xchg
lcall
mov
push
icebp
pop
int3
dec
daa
xor
pop
and
cmp
push
movb
mov
xchg
mov
inc
mov
cmp
push
xor
cmp
out
inc
popf
pushf
lea
pop
cwtl
scas
int3
lds
fistps
cmp
shlb
lods
clc
pop
dec
adc
outsl
aaa
loope
addb
mov
addb
and
inc
scas
add
mov
pushf
repz
adc
js
rolb
jl
mov
or
or
popa
dec
mov
scas
in
or
inc
add
sub
sti
add
aas
and
xor
push
mov
imul
cltd
and
rorb
jno
testb
inc
or
es
mov
cwtl
inc
push
shl
imul
push
lret
xlat
xor
ja
inc
movsl
outsb
inc
andl
jmp
das
lcall
jp
pushf
adc
insb
fcoml
cli
jecxz
xchg
fs
dec
xor
xor
cld
fnstsw
pop
shl
out
pop
dec
xchg
inc
pop
rol
jge
mov
and
imul
lahf
dec
test
mov
push
xor
sti
mov
mov
in
dec
inc
inc
sub
jns
pop
test
push
aam
push
xchg
and
push
add
sbb
into
cmp
rcr
lret
fcoms
and
and
fisubl
push
loope
mov
xchg
inc
test
mov
mov
adc
dec
arpl
loop
push
mov
add
fisubrl
test
push
pop
in
push
stos
jecxz
test
push
xor
pop
inc
pop
mov
fdivr
fwait
and
pop
nop
inc
xor
fidivl
ds
es
add
push
push
adc
and
insb
xchg
gs
insb
int3
clc
lret
insl
test
or
sub
xlat
lods
dec
pusha
icebp
rcll
dec
fs
ret
stos
ja
xor
aam
dec
xchg
cmp
or
jae
adc
sbb
mov
add
fists
add
add
enter
hlt
or
inc
call
pushf
mov
jmp
or
pop
js
cmc
inc
in
dec
movsl
sub
jno,pt
xchg
je
mov
adc
cmpsb
fsubrl
std
rclb
call
lahf
sbb
adc
mov
notb
and
rcrl
insb
jb
cmp
into
fidivrl
adc
push
sbb
fucomip
push
fidivl
push
incb
mov
pop
call
js
cmp
or
rorb
add
div
push
pop
push
ret
adc
lods
mov
fbstp
data16
cltd
lock
xchg
pushf
das
iretw
xchg
cmp
xorb
shrl
jae
cltd
mov
dec
adc
shrb
and
push
enter
push
lods
jge
addr16
mov
call
ret
movsb
cmp
pop
lock
push
pop
fld
cmp
pop
xchg
aaa
fldenv
lret
xchg
add
shrb
mov
cmp
daa
shrb
sub
sub
adc
jmp
ret
push
jo
mov
sahf
jbe
in
push
and
jns
xchg
push
dec
jne
mov
aad
xchg
int3
xor
lock
or
stos
dec
sub
lds
repz
int3
xor
sbbb
arpl
pushf
outsb
pop
insl
mov
fstpl
mov
mov
push
mov
cmpsb
stos
stos
xor
pop
test
inc
xor
shl
jg
or
scas
pop
add
xchg
int3
lret
mov
aam
mov
inc
sarb
imul
lahf
out
cltd
cmc
add
fdivrp
mov
pop
and
scas
push
in
bound
fisttps
pop
aam
mov
sub
dec
lea
test
add
jmp
mov
xchg
enter
movsb
int3
xchg
inc
adc
adc
push
je
and
out
aad
or
jmp
clc
pop
adc
sbbl
cmp
lds
push
mov
push
ja
sti
and
push
cmp
insb
clc
sbb
xor
mov
add
rorb
cmpsb
pop
sbb
mov
shll
add
xchg
insb
and
cmp
test
sub
outsb
loop
in
sbb
lahf
shlb
hlt
sbb
or
ret
adc
icebp
xchg
outsb
pop
insb
test
mov
stos
jl
fdivs
in
aam
pop
pushf
inc
fsts
sti
cmp
out
inc
sub
dec
imul
test
outsb
popf
add
cld
jge
mov
and
adc
dec
pop
or
xor
pop
push
fsubl
sar
xchg
ds
mov
in
pop
into
inc
pop
push
cld
add
stc
rorl
dec
sbb
pop
push
mov
nop
mov
imul
das
cli
mov
lock
sub
push
push
push
repnz
pop
lahf
mov
cmp
xor
adc
fsubrp
mov
jmp
fdiv
xor
and
icebp
outsb
int3
adc
out
adc
push
iret
mov
push
inc
xchg
pop
cmc
jecxz
sbb
insb
call
mov
stc
out
stc
loopne
add
jl
sub
rclb
icebp
jno
mov
das
and
jmp
cmpsb
lret
mov
add
cmpsl
mov
xor
mov
insb
add
sti
add
mov
sub
xchg
neg
out
scas
xor
xchg
push
iret
aam
fisttpl
jle
out
adc
fwait
dec
cmc
aas
sub
out
xchg
jno
aam
add
adc
pop
ss
aaa
divb
xchg
cmp
outsl
outsb
sbb
fstpl
lods
stos
sbb
push
sbb
pop
xchg
das
shlb
adc
inc
xchg
clc
insl
pop
pop
and
dec
jle
add
shrb
popa
pop
pop
xchg
divb
adc
ss
cmp
scas
hlt
orl
push
movsb
inc
pop
mov
ja
mov
daa
and
jnp
sub
in
js
mov
lea
and
dec
adc
mov
mov
and
push
cltd
lahf
ffreep
jp
mov
or
in
out
popa
insl
adc
inc
aam
xchg
dec
mov
push
mov
push
data16
mov
arpl
mov
mov
lret
in
jecxz
xor
pop
adc
and
cmp
into
lret
inc
and
or
sahf
add
push
jle
imul
jecxz
adc
out
add
jmp
cwtl
sbb
push
lahf
shlb
in
clc
pop
arpl
sbb
add
enter
mov
jle
and
in
jle
mov
lret
test
mov
test
pop
xchg
and
jecxz
jl
lahf
addr16
mov
add
add
leave
pop
stos
fbstp
mov
mov
sub
sbb
xchg
mov
les
mov
rorb
flds
faddl
int3
sti
aaa
loope
or
push
imul
add
jl
sub
dec
fisubrs
push
out
movsb
fidivrs
cmpsl
inc
test
jno
faddl
inc
lods
adc
or
dec
and
repz
cmp
mov
sbb
shlb
into
lock
sub
out
and
pop
dec
sbb
dec
dec
out
adc
repnz
rorl
jmp
in
xchg
rclb
mov
arpl
pop
pop
iret
nop
movsb
add
jecxz
aas
mov
inc
rcl
ret
nop
mov
jmp
pop
jle
mov
insl
cltd
stos
jp
popf
pop
and
fsubrs
fcomps
inc
sub
jno
out
les
orb
imul
mov
jo
pop
jb
mov
movsb
xchg
jle
je
loop
mov
sbb
hlt
mov
cmp
shlb
clc
loopne
cmc
xor
pushl
lods
loop
dec
adc
lret
loopne
mov
and
lods
add
test
es
pop
add
cli
cmp
ret
int
or
dec
and
lret
mov
ja
xor
scas
and
push
cmp
dec
stos
dec
dec
faddl
out
mov
mov
fisttps
jmp
dec
fcmovnb
mov
cmp
fiadds
inc
iret
test
sub
data16
ljmp
pop
loop
mov
sbb
mov
push
mov
loope
sub
inc
adc
jnp
mov
gs
dec
std
and
sbb
cltd
dec
xor
mov
mov
xchg
test
or
and
aas
rorl
xchg
es
lds
fsubrs
mov
call
ljmp
nop
xchg
popf
lret
cmpsb
ljmp
loop
repz
mov
add
in
mov
jnp
popl
shll
leave
jns
test
jb
hlt
mov
stc
sbb
sahf
loopne
inc
lea
jo
adc
and
push
in
ret
mov
test
stc
mov
mov
push
popa
cwtl
shr
adc
or
imul
inc
in
pop
mov
sahf
test
shl
dec
mov
sbb
pusha
jno
call
or
mov
in
mov
and
cli
fists
pop
in
or
loopne
pushf
test
sbb
mov
push
dec
mov
sahf
push
loopne
adc
push
in
lret
mov
imul
sub
insl
ds
jo
jb
orb
pusha
and
repz
or
hlt
loop
aam
enter
sti
add
add
sbb
mov
pop
mov
fbld
push
movsl
cmp
xchg
xor
mov
dec
iret
jns
aaa
out
cmp
fistpll
mov
sub
sbb
imul
inc
push
mov
mov
mov
mov
jb
mov
ds
lods
test
push
adc
pop
out
mov
je
push
movsb
mov
enter
ud0
mov
imul
push
inc
cwtl
dec
loopne
mov
int3
inc
dec
cmp
lea
nop
xor
mov
or
jecxz
jg
pusha
sbb
jnp
mov
int3
xchg
je
dec
repz
fldcw
xchg
cmpsl
out
sub
add
xchg
fs
imul
inc
fs
rcl
lret
pop
lahf
ret
jp
pop
int
test
adc
jp
imul
push
xlat
push
scas
xor
outsb
mov
jbe
mov
xchg
xor
lcall
aad
loop
into
sub
sbb
add
pushw
jge
rol
idivb
sub
ret
sub
sub
cmpsb
adc
mov
jbe
dec
scas
mov
insl
jge
add
fwait
sbb
and
or
mov
icebp
cs
test
decl
xchg
sbb
pop
loope
arpl
jb
inc
sub
and
jb
xchg
addr16
gs
shll
lcall
add
ret
mov
dec
xchg
das
pushf
clc
add
cmp
daa
mov
addr16
mov
or
dec
bound
dec
jae
sbb
fwait
and
popa
dec
in
out
in
add
push
mov
xchg
aam
sub
icebp
sahf
sbb
fwait
cwtl
out
push
pop
jp
xor
push
mov
mov
sub
dec
mov
movsl
fistl
cltd
and
es
xor
pop
xor
nop
arpl
jmp
pop
out
mov
sub
lret
ljmp
or
xlat
jecxz
repnz
and
dec
lahf
adc
inc
pop
ret
xchg
jne
sub
cmp
and
dec
outsl
pop
sbb
es
subb
lea
cmpsl
inc
sub
daa
mov
scas
mov
mov
loope
and
sahf
fdiv
pop
mov
fxch
arpl
cmp
cmp
ds
push
mov
das
loope
jae
push
push
cld
fidivrs
mov
in
jecxz
inc
jecxz
cmp
sbb
out
sbb
movsb
in
dec
jecxz
fistps
dec
ret
cli
lds
in
fdivrs
and
int3
push
sbb
pop
iret
icebp
push
sub
je
or
pop
mov
loop
ljmp
lret
jg
repnz
push
sbb
cmpsl
inc
ljmp
std
mov
mov
fimuls
mov
cmp
loopne
mov
in
push
insl
mov
or
aam
xchg
out
xor
push
mov
push
push
cmp
mov
repnz
test
sub
fsubrs
cmc
adcb
push
ja
inc
icebp
inc
push
jge
pop
rorl
lods
scas
loope
lock
push
in
call
pushf
addl
xor
loop
sahf
sub
or
cld
fstpl
cmp
rolb
xchg
dec
push
lods
pop
ljmp
inc
sbb
jb
lea
xor
bnd
das
xchg
and
shlb
pop
xchg
xlat
jno
pop
mov
cs
fisubrl
stos
sbb
cmp
push
into
mov
movsl
xchg
addr16
test
divl
mov
test
mov
jmp
xor
adc
pop
sub
mov
repz
push
ss
mov
shlb
iret
adc
add
daa
and
ds
xlat
push
push
fs
icebp
dec
push
idivl
push
jle
xorb
divb
pusha
jbe,pt
push
out
inc
cmp
ds
sbb
or
pop
insl
add
insl
mov
xchg
mov
rolb
orl
outsl
test
outsl
pop
jl
jp
pop
adc
dec
imul
push
cs
das
or
xorl
mov
stc
rorl
cmpsb
fmuls
pop
xchg
repz
xlat
mov
movsb
out
lret
xlat
dec
imul
inc
dec
insb
andl
hlt
outsl
pop
fsubs
fisubrl
repz
jmp
xor
andb
jne
daa
xor
lock
jp
pop
icebp
mov
mov
xchg
mov
addb
xchg
jnp
inc
cmp
xchg
push
orb
nop
mov
lods
jmp
loopne
roll
in
sub
sbb
sub
fs
lahf
mov
imulb
stos
sub
xchg
xchg
push
jmp
or
test
adc
jo
std
lret
adc
jp
pop
fstl
cld
inc
out
popa
dec
dec
inc
cmp
jbe
xchg
cmpsl
stc
fistps
iret
cmp
faddl
shll
sub
jo
loop
loope
dec
and
test
cmpl
flds
hlt
fistl
fnstsw
call
mov
in
clc
iret
mov
xchg
xchg
fisubs
push
subl
nop
push
jp
xor
jle
outsb
mov
repnz
sbb
fsts
popf
dec
or
popa
scas
add
dec
and
call
adc
addr16
ja
aas
pop
xor
push
out
adc
push
or
dec
sbb
lret
and
sar
loop
in
cmp
sbb
sbb
cmp
xchg
or
cmp
ss
adc
inc
xchg
push
mov
mov
mov
pop
or
xor
loopne
push
lods
mov
bound
push
sarb
push
jecxz
jne
jo
out
mov
je
data16
popa
or
cmp
std
cs
push
pop
sub
test
xor
cli
mov
push
sub
jno
jns
sti
or
arpl
mov
sahf
push
sbb
imul
mov
hlt
pop
sti
std
lahf
jb
ret
mov
push
stos
mov
js
jae
fisubs
push
jp
leave
pop
out
ja
sbb
push
cmp
dec
ret
or
call
aaa
data16
jge
popf
dec
sub
stc
inc
push
mov
xor
fistpll
jno
add
cmc
dec
or
dec
aaa
popa
test
push
xchg
mov
cmpsl
mov
mov
iret
imul
or
je
imul
sub
leave
repz
push
jmp
ret
ret
adc
sbb
cmc
loope
add
sub
add
mov
ja
jg
pop
inc
fildl
aad
cmpsb
sarb
fs
int3
pop
test
sarb
adc
push
loope
in
push
pop
and
lret
sub
sub
and
xchg
aas
les
mov
daa
mov
dec
sahf
sub
call
ret
dec
mull
jl
lock
adc
dec
cmp
jne,pt
dec
outsb
sbb
into
xor
pop
imul
cmp
ret
mov
lcall
ja
xor
jle
xor
inc
stos
xor
or
mov
fs
mov
add
insl
shrb
hlt
nop
clc
mov
push
and
xchg
pop
outsb
add
xchg
lods
mov
inc
mov
fcmovnu
lret
or
add
cmp
dec
testl
sti
in
imull
inc
xchg
push
xchg
adc
pop
dec
sbb
pop
jle
cmp
jl
cmp
xchg
push
in
movsl
pop
mov
movsb
cmp
dec
fisubrl
mov
dec
es
jle
lock
or
sub
mov
or
mov
outsl
sbb
pop
ss
dec
adc
mov
push
inc
xor
and
sbb
lds
mov
or
sbb
jb
inc
and
fistpll
fsubrp
jge
fwait
push
sbb
jno
fdivrs
sbb
mov
cmp
sub
leave
inc
mov
dec
add
icebp
fmuls
adc
lcall
mov
lods
pushfw
loope
mov
icebp
inc
sub
shlb
popf
xorb
jns
or
test
cmp
mov
cmp
lret
push
cmp
add
adc
push
dec
push
out
mov
xor
mov
xchg
and
jl
in
shlb
imulb
das
xchg
cmp
scas
jno
add
xchg
fcomps
out
mov
repz
lods
pop
sub
xchg
or
mov
pop
andb
hlt
push
int3
jecxz
std
push
pop
pushf
das
ds
call
add
ret
adc
pusha
pop
pop
loop
xor
sub
stos
push
xchg
cmp
adc
testl
mov
dec
pop
push
in
loopne
and
mov
aad
clc
mov
inc
adc
sub
mov
lock
jno
add
dec
xor
xor
std
sbb
push
xchg
dec
shrl
push
loope
cmp
vpminsb
inc
dec
add
or
adc
les
out
out
out
xorl
adc
mov
dec
or
mov
dec
xchg
push
aas
mov
outsl
jns
in
cwtl
mov
int3
xchg
test
inc
push
aas
outsl
mov
repz
mov
xchg
je
mov
loopne
inc
ret
mov
cwtl
xchg
cmp
call
movsb
shll
mov
ja
sub
fwait
loop
jecxz
fstps
aas
outsb
into
mov
inc
das
std
loop
sub
inc
mov
lds
gs
push
addr16
sahf
cld
popf
sbb
jno
lret
or
cmp
lods
cltd
xor
cmpsb
and
scas
jmp
jecxz
xchg
scas
cli
shlb
out
insl
jbe
mov
push
call
sbb
scas
sbb
ds
testb
leave
dec
dec
ja
loopne
fucomp
push
mov
mov
inc
cmc
faddl
into
push
popf
insl
cld
les
push
add
rep
out
iret
push
rcrl
cli
ds
lea
movsb
flds
add
aam
push
mov
loopne
inc
mov
ljmp
or
mov
into
xor
mov
test
out
cmp
mov
push
insl
insb
add
cmpsb
add
or
ljmp
test
cs
mov
jge
jno
pop
sub
andb
adc
insb
inc
stos
imul
xchg
mov
test
sub
push
jge
notl
pop
call
lock
push
inc
aas
jmp
in
sub
mov
rorl
add
pushf
addr16
cmp
fcompl
xchg
mov
lea
pop
add
push
iret
es
xor
lods
stos
push
es
clc
or
xchg
xchg
adc
adc
gs
aaa
es
and
push
push
ss
add
pop
sub
orl
test
cmpsb
out
jl
add
dec
stos
or
sbb
mov
pop
cwtl
jae
mov
sarl
pop
setb
jbe
lods
out
xchg
shll
xchg
mov
out
repnz
push
jbe
sub
xchg
or
xchg
mov
push
inc
mov
mov
cmp
gs
mov
dec
test
lods
sub
push
rolb
inc
jbe
jg
push
fnstcw
pop
into
mov
push
xor
out
nop
mov
mov
mov
ss
test
bound
mov
iret
mov
loope
mov
xor
loop
push
mov
or
pop
pusha
insl
push
test
mov
pop
jbe
adc
add
out
mov
into
scas
pop
rol
xchg
mov
iret
fistpl
mov
das
lods
and
pushf
mov
cmpsl
pop
in
mov
add
out
out
jg
test
shll
push
mov
loope
sub
mov
popa
rcl
xchg
into
test
test
xchg
pop
outsb
push
pop
gs
dec
adc
test
pusha
shlb
xchg
adc
cmpsl
mov
cmp
in
cltd
roll
out
mov
dec
stc
fstpl
push
es
loop
nop
cmpsb
fwait
and
dec
xchg
pop
mov
mov
push
cld
and
dec
out
in
or
mov
jmp
inc
dec
push
cltd
aas
jne
int3
inc
xor
adc
jbe
xchg
popw
mov
fildl
test
mov
fisubrs
mov
rorb
mov
ljmp
mov
adc
xor
leave
pop
ret
jb
jne
aam
mov
sub
js
jae
pop
or
es
mov
add
cmp
icebp
inc
jle
loop
adcb
lods
lock
repnz
jae
sub
xchg
pusha
outsl
stos
cmp
jp
ret
lahf
je
add
shrl
inc
xor
dec
push
out
add
pop
cmpsb
xor
dec
sti
std
inc
mov
jp
leave
dec
mov
pushf
movsl
stos
dec
lret
and
jle
repz
cmp
pop
pop
jp
imul
jno
mov
pop
fcompl
das
jmp
and
ljmp
mov
mov
mov
add
jno
add
aad
sbb
adc
outsb
mov
or
sbb
mov
sbb
fsubl
push
dec
xchg
and
fdivrs
jmp
cs
cmp
jbe
daa
adc
dec
jle
stc
mov
ret
xor
pushf
sub
aas
fdivr
fwait
ja
xor
mov
mov
adc
push
cs
leave
and
push
sbb
cmp
xor
scas
enter
jl
cli
jbe
test
fxch
loopne
push
mov
fs
pop
xor
lcall
pop
mov
sbb
lret
xchg
jns
mov
dec
push
out
mov
or
cmpsl
mov
call
inc
add
push
loopne
push
jns
lods
push
push
jbe
push
xchg
rol
jno
pushf
inc
mov
popf
shrb
and
adc
leave
mov
mov
movsl
sub
and
stc
adc
daa
push
cmp
mov
lock
and
mov
jmp
mov
cmc
add
mov
xchg
addr16
dec
mov
mov
pop
sub
pushf
insl
inc
push
push
pop
or
jecxz
imulb
call
mov
mov
popa
dec
jl
cmp
add
inc
lea
btl
sbb
xchg
into
xchg
popf
and
loope
mov
mov
add
and
dec
jne
andb
sub
or
mov
push
cltd
fwait
xchg
lret
je
popa
cmp
inc
mov
in
mov
sbb
dec
lds
cwtl
rolb
xchg
inc
mov
ja
jmp
je
xlat
pop
xchg
inc
jge
test
lret
into
loope
cmp
daa
pop
das
test
not
mov
outsb
pop
lret
rorl
mov
sbb
fdivs
lock
cmp
call
adc
adc
iret
pop
sahf
and
outsl
jecxz
ds
mov
je
push
hlt
mov
dec
dec
push
or
fs
fs
xchg
sub
and
xchg
jo
push
sbb
add
inc
fstpl
push
stc
jae
xor
mov
push
dec
jle
int3
jbe
jnp
sahf
imul
cmc
pop
pop
adc
push
jne
xor
adc
cmp
xchg
or
movsb
xor
add
inc
push
hlt
cmc
jp
push
hlt
iret
test
cmc
enter
hlt
sbb
mov
imul
popl
movsl
insl
aaa
mov
sbb
xor
jmp
dec
je
adc
repnz
push
push
pop
jne
sub
cmpl
lods
lcall
inc
inc
addl
mov
add
and
orl
lock
adc
ret
push
sub
and
lret
loope
pop
mov
aam
inc
or
xlat
pop
out
cs
out
adc
stos
cmp
inc
in
adc
inc
loopne
test
mov
add
daa
jno
xchg
jg
or
push
jecxz
iret
outsl
jo
jl
lahf
mov
dec
enter
lock
loop
inc
add
or
push
sbb
sbb
dec
divl
inc
xchg
push
mov
sbb
mov
in
jo
inc
mov
dec
inc
mov
jmp
aam
inc
cmp
cwtl
cmp
add
or
adc
dec
scas
scas
insl
aad
jno
std
mov
push
adc
ja
and
in
test
aaa
inc
inc
in
fmulp
scas
sub
idivl
xchg
shr
push
leave
pop
adc
mov
sub
data16
test
pusha
test
inc
xor
test
cmpsb
inc
mov
loopne
ljmp
daa
and
gs
pop
ficompl
sahf
aam
out
ds
xchg
xlat
sub
sbb
sub
stc
or
cwtl
xor
cltd
mov
fmull
lcall
mov
and
adc
xor
mov
sub
xchg
cltd
les
orl
xchg
xorl
std
adc
cmc
cwtl
push
add
sub
stos
inc
sarb
data16
jl
shrl
or
cmp
jl
mov
fistps
mov
cmc
pop
xor
mov
sarl
in
ja
sub
popf
dec
outsl
aas
insb
add
cmpsb
adc
inc
out
xor
xor
xchg
push
aam
mov
ficomps
jmp
scas
and
insl
jp
into
add
enter
ds
xchg
mov
pop
rep
cmc
mov
repz
add
inc
add
push
xlat
popf
repz
icebp
and
pop
wbinvd
xchg
in
adc
pop
or
loop
lods
add
mov
or
jo
sbb
inc
mov
addr16
fdivp
test
sbb
subl
adc
mov
mov
stc
jg
iret
pop
push
ja
or
mov
jmp
pop
mov
lret
push
in
jae
xchg
out
jbe
sbbb
jb
mov
cwtl
push
mov
popf
add
inc
adcb
je
outsl
jle
jo
pop
sbb
xchg
ds
jg
push
xchg
push
out
cwtl
mov
ficoml
add
lahf
or
cmp
dec
pop
into
pop
cmpl
push
jmp
in
mov
aaa
movsl
push
pop
dec
dec
jecxz
jnp
jo
or
jecxz
mov
and
fidivrs
fisubrs
fdivrs
in
imul
jne
push
cmp
pushf
mov
and
or
dec
inc
orl
adc
mov
insb
xchg
jb
mov
cmp
xor
xor
mov
cmc
out
mov
int3
hlt
xor
and
fbld
cmp
or
adcl
insb
shll
nop
mov
fsubrp
arpl
sub
jae
adc
in
jge
add
jp
out
and
fsubs
lret
lds
mov
out
ja
in
push
sub
xor
or
cmp
jmp
jnp
push
xchg
jne
in
in
insl
frstor
jmp
xchg
fadd
rcll
test
add
fwait
icebp
cmp
sbb
movsb
mov
pop
data16
call
nop
dec
pop
add
jns
cmp
add
dec
lcall
sbb
adc
adc
push
in
pop
ja
mov
xor
inc
clc
adc
daa
in
lahf
es
pop
iret
mov
sbb
add
repnz
decl
in
push
pop
sub
jns
push
adc
xchg
push
std
clc
pop
loop
mov
inc
in
sbb
push
pop
cmpb
iret
pop
sub
cmp
or
repnz
cmp
loop
push
xor
jmp
or
lods
inc
int
cmp
mov
add
test
addr16
pusha
jmp
stc
or
xor
lods
jno
and
cmpsl
loopne
dec
push
and
aad
loop
jne
movsl
fldl
dec
mov
xor
inc
mov
iret
aas
inc
sbb
add
jae
pop
cmp
jb
std
mov
cld
push
adc
xchg
xor
jmp
sub
test
shl
scas
mov
mov
xor
dec
jno
cmp
addr16
dec
fisubrl
mov
cmpsl
dec
aas
add
test
dec
mov
loope
stos
adc
dec
ret
xor
add
jle
xor
stos
mov
les
es
pop
psubq
sub
push
xchg
scas
mov
repz
inc
sbb
mov
push
dec
das
pop
divb
enter
sbb
lea
ret
dec
mov
mov
lds
and
je
push
inc
ljmp
mov
sub
mov
testl
bound
daa
add
sbb
outsl
inc
sbb
push
mov
sahf
jo
jno
dec
jecxz
mov
push
mov
popf
jo
add
out
movsl
push
cmc
icebp
pop
pop
fwait
add
adc
sub
movsb
jle
sbb
dec
outsl
ja
adc
ror
test
and
faddl
sub
pop
stc
outsl
dec
pop
shl
insb
inc
xor
sbbb
test
std
xor
insb
call
xchg
mov
test
pop
pop
jno
inc
iret
imul
jg
lcall
imul
sbb
cmpsb
dec
mov
jmp
add
das
inc
jae
stc
adc
xchg
mov
int3
enter
sbb
into
mov
xchg
adc
jmp
inc
xchg
in
clc
cwtl
stos
cli
cmp
fiaddl
xchg
cmpl
and
jmp
jmp
iret
std
aam
ret
inc
jno
sti
xadd
adcl
mov
sbb
lea
fistpll
or
shrl
inc
jg
lcall
push
fcoms
outsl
lea
lea
hlt
and
js
scas
stc
fadds
maxps
xor
mov
mov
mov
rorb
mov
and
arpl
out
cmp
jecxz
lcall
test
and
in
xor
js
mov
test
push
arpl
cli
stos
cli
inc
dec
pop
cmp
mov
in
sbb
rcr
mov
adc
and
dec
inc
sub
rcr
scas
fdivrl
xor
cwtl
dec
pop
movsl
popf
sbb
pop
mov
cmpsl
testl
xor
sti
cmpsl
pusha
inc
int3
dec
dec
and
pop
fldl
xlat
adc
popf
scas
aas
in
sub
roll
loope
or
dec
add
cli
mov
and
ret
xor
int3
lret
dec
cli
je
sub
outsb
pop
xchg
cltd
push
push
push
sub
mov
mov
inc
clc
daa
and
add
pop
jo
negl
popf
jns
cmpsl
pop
fs
add
inc
aad
fstpt
dec
add
add
addb
xchg
jno
sbb
inc
lahf
popf
test
push
out
and
sarl
sub
add
pop
scas
or
xchg
cmpsl
lea
push
push
sbb
push
xor
fs
arpl
leave
int
repz
cmp
sub
aas
or
jne
loop
fldenv
scas
inc
shlb
inc
jb
aad
notl
pop
lods
jo
imul
inc
or
or
mov
bound
dec
popa
pop
xchg
add
shr
mov
filds
cmpsb
cmpsl
mov
cmpsb
rorb
xchg
xchg
jnp
loope
sub
arpl
cmpsl
inc
rcrb
scas
sbb
outsb
xor
and
sub
mov
mov
stos
add
jno
std
in
idivl
adc
pop
jnp
rclb
popw
mov
inc
jno
test
push
push
add
sub
int3
and
fs
repz
push
lea
push
mov
cld
mov
in
inc
mov
test
lock
cmp
lret
inc
flds
mov
xor
mov
jo
jnp
mov
adc
adc
lcall
cwtl
add
int3
adc
jb
daa
ss
popl
push
push
push
cmp
mov
lods
shrb
sti
stc
xchg
cli
stos
xchg
jo
dec
aas
or
adc
repnz
movsl
jne
xor
sub
jg
aam
push
mov
mov
jmp
pop
add
ficompl
imul
cwtl
push
push
sbb
out
loop
adc
adc
sub
add
push
insl
inc
loop
dec
xor
mov
push
inc
mov
adc
cmp
out
pop
cmp
dec
cmc
arpl
cmp
mov
sub
inc
jmp
enter
dec
pop
push
lods
testb
mov
in
imul
sahf
xchg
das
lock
test
sti
out
sub
les
rclb
dec
push
mul
mov
rcr
cmpsb
lods
call
add
push
jb
xchg
push
pusha
enter
sub
mov
adc
push
inc
push
xchg
inc
adc
insl
mov
xchg
gs
lcall
in
mov
imul
aad
sub
repz
rorb
lods
inc
clc
rclb
not
mov
pop
std
jecxz
cmp
repnz
mov
push
in
cmp
cli
mov
dec
mov
call
xor
syscall
or
and
aam
cmp
and
enter
and
out
lea
sub
sbb
fnstcw
pop
movq
xchg
outsl
arpl
aad
lcall
xor
notb
xor
fs
lahf
xor
cmpsl
cmpb
mov
fnclex
fdivrl
and
adc
shrb
out
std
fnsave
fcoml
push
xchg
xor
out
xchg
daa
and
rcr
les
call
scas
jmp
sti
lds
test
inc
out
leave
xchg
rcrl
repz
iret
xlat
mov
pop
jg
decb
jmp
out
dec
sbb
adc
js
frstor
ret
orl
cs
xchg
jl
jns
pop
in
add
call
adcl
imul
push
cmp
das
gs
cltd
add
call
es
sub
incl
dec
pop
cmpb
cmpb
jno
mov
jae
iret
inc
xchg
adc
call
xchg
push
movsl
out
int3
leave
aam
hlt
rcll
lret
es
in
jge
loop
stos
mov
mov
or
mov
jb
mov
stc
fs
stos
aaa
cmp
les
orl
lret
add
nop
aas
or
add
js
sub
xor
xor
pop
and
cmp
xchg
mov
push
pop
outsl
adc
inc
jl
add
sti
cmpsl
in
jb
jg
mov
jge
xchg
std
push
out
xorl
movsb
cmp
jmp
or
inc
inc
dec
pop
clc
push
movb
pop
cmp
clc
inc
test
aam
cs
dec
into
push
roll
es
mov
and
adc
outsl
push
mov
sbb
ja
pop
mov
mov
shl
stos
negl
adc
xor
loopne
inc
je
imul
aas
push
or
aas
mov
jae
stos
push
fnstsw
cmp
pusha
xchg
sti
xor
lods
cli
movsb
rclb
sub
dec
inc
jmp
add
push
aaa
lahf
pop
clc
cmp
xor
xchg
jg
mov
mov
and
idivl
inc
pop
sti
add
stos
push
sub
add
push
lret
xchg
xchg
iret
sbb
inc
dec
or
sti
xchg
mov
mov
inc
fdivr
setne
rcll
push
into
jae
test
outsl
lods
sahf
dec
lret
adc
dec
notb
mov
adc
popa
lods
mov
xor
mov
add
dec
pxor
fistps
push
lods
or
xchg
pop
fwait
imul
ficompl
mov
mov
xor
arpl
test
ja
inc
jnp
push
scas
out
dec
fildl
ss
xor
xchg
mull
add
cmp
subl
mov
pop
pop
icebp
push
lods
pop
push
in
mov
stos
jl
movsl
insb
xchg
test
mov
notb
stos
popa
jb
ret
neg
and
dec
nop
test
sbb
stc
mov
shrb
adc
data16
xor
mov
pop
sbb
xor
test
lds
arpl
sub
jmp
jns
ljmp
scas
es
sahf
inc
adc
sbb
mov
xor
or
psrlw
mov
jbe
jmp
xchg
push
pusha
fmull
test
xlat
ss
imul
int
mov
data16
pop
mov
and
imul
xlat
jbe
sub
adc
repnz
sahf
jo
push
push
cmp
fcoms
jl
and
das
xor
jge
dec
fisubrs
aas
mov
pop
call
decl
out
mov
inc
jae
cmp
mov
mov
pop
popa
and
lret
adc
mov
call
sti
clc
fldenv
stos
mov
pop
cmp
pushf
lods
dec
aam
mov
adc
cmp
fsubrs
fsubs
and
xorb
inc
push
sahf
in
xlat
xchg
sub
aaa
mov
inc
and
sbb
fnsave
mov
ja
popf
cmp
cli
stos
std
fmuls
xchg
in
sbb
pop
mov
pop
push
cli
inc
jecxz
lret
and
or
rolb
mov
aad
adc
cli
add
mov
mov
or
popa
mov
mov
mov
add
aas
sbb
divl
push
fdivrs
sbb
jno
mov
jmp
call
test
sub
pop
ja
rcll
mov
loope
pop
or
dec
and
cltd
or
pop
lahf
subl
lds
or
ja
aaa
push
mov
mov
inc
dec
sbbb
jnp
mov
mov
push
repz
enter
loope
add
xchg
fcmove
mov
add
jl
fsubl
pop
ss
mov
imul
xor
dec
jmp
sahf
push
je
lods
ret
int3
inc
xor
popf
shlb
sbb
mov
nop
adc
jb
cmp
test
nop
leave
add
dec
push
movsb
mov
cmp
out
fwait
mov
or
aam
and
dec
pop
pop
lods
xor
nop
enter
leave
cmpsl
adc
sub
pusha
push
lcall
add
push
push
ror
or
adc
out
sub
aad
adc
daa
pop
cmc
pop
push
into
js
adc
cmpsb
clc
stos
and
inc
inc
jae
scas
xchg
push
push
add
sahf
or
mov
cmpsb
xor
repnz
fcompl
xchg
test
test
out
mov
dec
mov
stc
add
or
cmp
adc
mov
ss
cmp
mov
or
loope
int3
xchg
sti
test
cs
divb
sbb
xlat
dec
or
call
iret
add
repz
pop
push
xor
outsb
movsl
insb
loopne
dec
repnz
insb
fwait
push
int3
jbe
adcb
xor
lret
dec
mov
jns
cltd
lods
fcmovbe
cmpl
sti
cmp
sub
sbb
jp
lds
cmp
sbb
cwtl
adc
sbb
ds
xor
aam
fidivs
imul
jge
inc
jmp
or
push
adc
push
mov
push
pop
push
inc
hlt
sub
xor
mov
xchg
popa
aas
adc
jg
pop
dec
popf
shrb
jbe
std
scas
adc
mov
cmp
call
add
cli
aam
enter
adc
xorb
imul
sub
cwtl
pushf
xchg
mov
lret
jo
fnsave
and
mov
in
ret
mov
mov
xlat
mov
inc
adc
je
into
or
insl
out
push
rcrl
arpl
push
cmp
adc
push
mov
arpl
pop
push
mov
push
push
sub
into
adc
dec
lret
sub
orb
fnstcw
mov
jns
adc
xchg
jmp
cmpb
sbb
loopne
or
insb
cmpsb
pop
adc
shr
shrl
sub
inc
je
mov
add
ljmp
outsl
xchg
pop
insl
outsb
outsl
leave
fucomip
push
shll
sub
fsubr
lods
cmc
jmp
cwtl
lret
cmp
mov
cmpsb
test
add
dec
cltd
lcall
push
cmp
push
xchg
repz
lret
iret
dec
dec
jge
idiv
or
aaa
xchg
sbb
and
dec
dec
leave
shrl
mov
lods
jae
jp
icebp
sbb
ja
pop
jge
push
adc
or
ficompl
sub
cld
inc
jnp
iret
jl
lock
jb
aad
sbb
add
inc
out
sahf
jecxz
je
mov
adc
daa
adc
test
ss
dec
daa
std
loopne
movsl
pop
sahf
mov
cmp
or
call
in
xchg
sbb
je
mul
pop
ret
fmuls
adc
rol
xchg
xor
jl
sbb
jbe
out
add
mov
aad
addl
add
popf
addb
daa
mov
add
dec
aaa
mov
add
inc
popf
mov
jb
inc
xor
push
add
repnz
adc
mov
mull
stos
in
nop
dec
pop
cmpsb
mov
rorl
cs
adc
insb
xor
clc
addr16
data16
mov
or
ret
sarb
jle
adcl
iret
es
xorb
orl
fdivl
mov
les
faddl
pop
add
jns
jb
lock
push
cmp
push
mov
dec
push
fwait
inc
xchg
arpl
repz
and
cli
push
jmp
jo
or
mov
cmp
les
inc
mov
jge
jmp
orb
push
cmpsl
lea
dec
adc
mov
std
xchg
fldl
mov
dec
xlat
ss
pop
adc
in
push
xor
cmp
xchg
les
push
mov
shrl
inc
xchg
ljmp
dec
test
pop
pusha
jno
insb
loop
iret
daa
lods
dec
jo
mov
ret
int
out
dec
sub
jl
xor
orl
pushf
push
ds
push
push
je
xchg
inc
call
out
and
fsts
or
cmc
jbe
test
jmp
gs
pop
aaa
xorb
or
sahf
mov
add
lret
xchg
mov
push
mov
sub
mov
cli
cmc
inc
push
scas
stc
sbbl
xorb
nop
cmp
outsl
mov
fldt
jg
mov
rcrl
test
pop
cmovb
jo
cmc
int3
int3
or
add
pop
push
push
pop
test
push
sub
xor
pop
and
sub
jns
lods
adcl
pop
jl
repz
dec
pop
mov
out
pushf
push
mov
daa
imul
sub
xchg
mov
aam
push
popaw
fidivrs
ficomps
jnp
ds
test
arpl
inc
xchg
sbb
pop
mov
pop
stc
push
sub
mov
sahf
daa
jge
push
mov
loopne
insb
xor
and
xor
pop
jno
mov
adc
push
outsb
shr
sub
stc
add
add
xchg
imul
imul
in
sbb
aaa
out
test
movsl
in
testl
dec
aaa
or
sbb
sub
mov
xchg
outsb
push
sub
mov
popf
test
gs
lds
out
and
das
jns
jp
sbb
dec
cmp
push
push
imul
mull
push
in
testb
test
dec
inc
cltd
fcom
xor
cltd
js
out
pusha
pop
xchg
push
pushf
xchg
jg
push
add
add
sbb
adc
or
cmp
or
mov
and
sub
mov
lds
sbb
add
mov
negb
sbbl
adc
sbb
or
and
enter
sub
test
fs
mov
imul
adc
dec
fstl
push
adc
arpl
mov
push
lds
inc
daa
xchg
push
int
add
stc
movb
jae
es
jne
outsl
fists
jmp
mov
or
ret
subl
leave
jns
test
je
stc
loope
push
popf
add
aaa
scas
mov
repz
popf
adc
inc
cmpsl
cmp
sti
out
sbb
mov
jl
push
js
push
movsb
jne
adc
fstps
xor
movsb
int
andl
aam
nop
dec
iret
and
jne
jmp
inc
arpl
mov
test
cld
sbbl
cmp
insb
sahf
and
out
or
mov
jbe
jmp
or
add
rcrb
push
inc
movsl
leave
adcl
push
sbb
sahf
scas
jg
xchg
dec
lods
xchg
arpl
hlt
cs
out
js
sub
dec
push
rcrl
or
rcl
cwtl
div
popf
js
cmp
mov
filds
fnstcw
and
cmp
push
stos
sub
adc
cmc
push
shrl
sbb
mov
cmp
add
stos
inc
mov
icebp
push
pop
icebp
popf
jle
mov
stos
add
adc
fiadds
dec
dec
jmp
js
add
fwait
add
les
dec
mov
and
cli
xchg
add
arpl
fstl
pop
popl
inc
mulb
lret
cmp
js
mov
into
or
inc
imul
sub
dec
popf
daa
push
fidivrs
out
je
ljmp
xor
stos
aad
sub
or
adc
enter
ljmp
inc
outsl
xor
fldl
test
adc
fldl
xlat
loope
gs
pop
pop
das
je
pop
sti
lcall
cs
push
outsb
fwait
jmp
es
cmp
lods
icebp
push
sahf
cmpsl
shlb
dec
les
bound
stos
fimull
pop
lds
or
xor
fucomip
cs
imul
sbb
outsb
cmp
imul
js
test
into
mov
ljmp
cld
fadds
in
dec
inc
pop
gs
into
popf
push
push
lret
inc
sub
sbb
test
mov
mov
outsl
adc
mov
add
rcll
jecxz
and
jg
test
rolb
push
stc
cwtl
xchg
gs
and
lcall
lods
leave
loop
insb
add
inc
out
lds
mov
jns
imul
loope
mov
out
xor
fcmovbe
sub
push
and
sbbl
je
hlt
nop
aaa
orl
out
call
adc
jmp
push
mov
xor
push
xor
push
sub
or
stos
lcall
mov
xchg
xchg
mov
into
xchg
and
push
mov
jns
test
inc
jb
js
stos
inc
test
push
dec
pop
sti
sub
insb
std
int
sub
sub
ret
aad
out
outsl
addl
and
inc
pop
fiadds
cmpsl
and
or
cmpb
jg
push
sub
mov
pop
je
mov
mov
and
or
cs
fsubs
add
mov
xor
adc
enter
fsubrp
mov
fs
push
push
movsl
adc
adc
out
movsl
testl
jno
cmp
and
hlt
xor
inc
push
push
xor
mov
mov
add
pop
ret
jp
daa
cs
dec
and
fstpt
push
out
inc
mov
xchg
roll
xchg
test
test
das
ljmp
out
sbb
sbb
mov
jns
data16
test
out
int
dec
je
push
pslld
push
mov
stos
fdivrl
xchg
pop
or
clc
adc
mov
fisttps
addr16
inc
jo
mov
lahf
push
data16
mov
push
cs
sar
repnz
and
in
jb
mov
xchg
push
or
rorl
xchg
out
xchg
into
gs
jmp
int3
jnp
jno
cmc
mov
or
jb
lret
in
daa
and
ds
lcall
ret
shl
fs
aaa
cmpsb
stc
mov
lds
daa
or
outsb
adc
mov
fidivl
pop
pop
ret
sahf
xchg
insb
push
or
pop
dec
cwtl
lock
cwtl
dec
stos
cpuid
jp
and
out
xor
or
jl
add
fidivs
pop
ljmp
mov
jmp
xor
mov
push
xorb
adc
les
cli
adc
mov
sub
cmpsb
arpl
fbstp
jbe
fwait
jb
rcll
cltd
cmc
das
stos
xchg
pusha
outsl
loop
shl
fidivrs
imul
sbbl
inc
xchg
cli
nop
xor
xchg
sbb
jg
fldt
dec
and
sbb
push
lcall
add
fsubs
outsb
into
adc
inc
repnz
cmp
lds
inc
pop
test
mov
jns
xchg
mov
insb
jmp
or
stos
lahf
insl
cmp
mov
sbb
stos
cltd
ss
xor
xchg
loope
addb
mov
pop
in
add
sti
cld
out
je
std
jecxz
fisttpll
xchg
sub
aam
sahf
sub
push
push
cmp
adc
and
lcall
pop
dec
fidivs
stos
fidivrs
inc
inc
scas
or
dec
mov
fmuls
lcall
mov
sti
jns
cli
ret
out
mov
je
dec
jne
xorb
xchg
iret
push
cmp
aam
push
in
add
psrld
ds
cmp
adc
out
movsb
or
cmpsb
adcl
mov
pop
and
cs
ret
lret
xchg
decb
push
push
adc
push
out
xor
jb
movb
lods
jo
mov
adc
jbe
lea
jmp
pop
dec
jns
pop
adc
mov
cli
pop
lret
call
into
outsb
xor
ror
and
fbld
jne
xchg
pop
pushf
outsb
adc
jb
cmc
hlt
in
mov
adc
dec
jbe
push
in
dec
pop
clc
push
and
les
push
adc
in
and
add
xchg
dec
test
std
jbe
push
inc
push
sbb
jns
cmp
mov
push
stos
mov
movsl
ret
sbb
and
imul
enter
or
xorl
mov
mov
add
inc
and
mov
adc
xchg
or
push
or
mov
stc
xor
scas
lock
jp
adc
cs
add
and
sahf
ljmp
cmp
add
mov
push
shlb
pop
sub
xor
inc
ret
nop
outsb
nop
inc
out
or
fdivrl
imul
scas
add
sub
stos
fwait
daa
jno
mov
push
nop
imul
jg
push
xchg
jns
dec
pop
xchg
dec
mov
jg
jl
pushf
dec
stos
loopne
ss
or
pop
mov
loope
add
inc
jae
push
jle
mov
ret
subl
push
inc
loopne
cltd
pop
arpl
lock
sub
sbb
mov
pop
popf
mov
xchg
ret
lret
daa
jae
push
pop
jmp
into
stos
sbb
adc
mov
sbb
jno
leave
sub
addr16
sbb
adc
je
jbe
mov
xchg
stc
fldcw
ljmp
les
xchg
lret
out
sub
aad
je
ds
pop
mov
pusha
into
cwtl
push
outsl
mov
leave
cmovge
sub
adc
push
xchg
xor
in
pop
outsl
ds
add
jbe
in
xchg
arpl
arpl
dec
jg
lcall
aad
je
adc
push
rorl
in
movsb
dec
xor
cmpsb
mov
aam
add
jmp
jl
imul
aas
lcall
std
sarb
clc
and
push
sbb
out
fildl
aaa
cmp
and
dec
out
mov
stos
ficoms
adc
call
cmc
inc
add
mov
fiadds
addb
pop
mov
into
sub
ficoml
lahf
dec
dec
jge
or
lret
fistpl
xchg
xchg
ret
popa
gs
xor
jnp
je
out
mov
add
adc
cs
sub
add
leave
xchg
jle
into
and
pushf
sbb
pop
xchg
mov
adc
or
jg
lret
jae
xor
loop
cltd
mov
cmp
ret
lahf
scas
sbb
xor
mov
jl
xor
movsl
mov
sbb
mov
push
stos
cltd
dec
sbb
rorb
jg
and
roll
jecxz
in
xchg
out
and
nop
dec
rcrb
sbb
loopne
outsl
pop
cs
push
jns,pt
aas
jno
sbb
mov
cli
pop
and
cmp
push
add
xchg
pop
mov
or
cs
sub
xor
mov
lahf
jbe
sub
inc
pop
inc
nop
ja
pop
cmp
adc
pop
test
psrad
int
or
arpl
rolb
xchg
xchg
divb
mov
xchg
sbb
and
push
xor
cs
add
push
aas
inc
in
sub
mov
clc
push
rorl
out
xorl
repz
push
and
loopne
aas
add
iret
mov
mov
movl
insb
outsb
mov
fs
sub
and
fisubrs
lret
shll
push
cmp
mov
adc
fcompl
or
sahf
hlt
lret
cmp
fbstp
jno
outsb
mov
repz
inc
fld
add
es
jb
sbb
loopne
push
cmp
and
add
scas
clc
std
std
adc
out
xor
int
add
sbb
enter
jae
push
mov
dec
mov
insb
inc
out
enter
xor
mov
cmpsb
adc
aam
sbb
out
test
andb
adc
in
fwait
jp
and
orl
jae
mov
mov
dec
adc
add
dec
rol
pushw
cmp
std
dec
add
xor
dec
xor
rorl
lahf
xchg
pusha
sbb
cltd
lea
adc
test
cltd
cmc
out
fldcw
and
jns
rcrb
jle
fwait
sbb
scas
in
outsl
gs
xchg
insl
cmp
xor
fucom
scas
dec
jb
dec
lock
xchg
fistl
fstpt
rolb
push
xor
stc
fsubrp
dec
enter
xchg
js
insl
lret
mov
and
scas
jno
fnstsw
jg
inc
mov
ljmp
popa
or
ficoml
jmp
jno
xlat
add
into
sub
mov
fidivrl
negb
mov
lods
ficomps
mov
push
jbe
lret
insl
xor
cmp
mov
sub
jecxz
push
je
in
mov
push
jle
int
js
lret
lock
jns
int
insb
or
inc
inc
jmp
leave
aam
in
out
or
cltd
push
push
push
and
outsb
mov
cmp
push
xchg
imul
fcoml
jge
imul
mov
pop
addb
jmp
arpl
jecxz
push
lret
jb
and
dec
push
mov
rorl
das
mov
fsts
mov
movsb
inc
frstor
movsb
mov
iret
or
test
xor
sub
lret
cwtl
shll
sbbl
in
scas
bound
or
fdivr
movsl
fwait
adc
sub
cmpsl
sbb
xor
xor
hlt
out
lahf
imulb
shlb
mov
outsl
les
sahf
bound
arpl
jle
repz
rcrl
fnstenv
ljmp
ljmp
push
jne
add
sbb
ds
mov
pushf
cmp
jle
fcmovnb
ffree
xor
lds
loope
sub
enter
dec
pop
xchg
dec
aaa
or
pushf
cmpsb
dec
xor
in
shrb
enter
inc
adc
sbbl
mov
xchg
lret
pop
inc
cmp
scas
dec
mov
shrd
fstl
nop
jb
sbb
jae
mov
lds
mov
xchg
pop
stc
rcll
xor
ror
sub
mov
mov
add
adc
aad
jnp
faddl
bound
cmp
fwait
mov
les
ss
outsb
out
iret
mov
aad
pop
cmp
lahf
mov
fwait
mov
aas
das
jne
or
inc
xlat
pop
testb
in
mov
xor
stos
paddsb
jno
movb
sbb
insb
xchg
leave
xchg
mov
and
out
scas
and
mov
jnp
pop
pop
aas
sbb
add
and
inc
sbb
sub
mov
sub
lea
fldl
sbb
out
lods
sti
adc
aad
pop
dec
xchg
add
dec
mov
add
in
les
jb
andl
inc
outsl
movsb
mov
jae
ret
popf
mov
data16
subb
sub
pop
dec
mov
pop
jge
push
aaa
push
mov
imul
xor
hlt
jp
pop
repz
push
cmp
andl
push
mov
subl
or
mov
lcall
sub
bound
jge
add
push
rorl
jp
mov
sahf
cmp
jecxz
fimull
xchg
cld
ja
mov
cwtl
adc
stos
or
into
jo
decb
cmp
les
xchg
loop
je,pn
jge
fidivrl
jp
lds
mov
push
dec
jmp
shl
push
aaa
xchg
test
and
das
in
ficomps
iret
imul
pop
inc
test
mov
fxam
scas
add
call
and
sti
adc
movb
mov
xor
inc
jmp
pop
cli
push
and
or
push
or
stc
cmc
insb
sti
shrl
insl
adc
jb
lea
pop
mov
dec
ds
outsb
stc
je
pop
cmp
dec
fcmovne
sub
inc
lods
mov
or
xchg
das
push
cmp
minps
pop
xor
jne
arpl
cli
test
int
jno
push
lods
test
sbb
push
mov
cmp
inc
loope
in
adc
std
adc
and
lods
sbb
adc
pop
or
enter
in
loopne
adc
jo
sub
mov
or
xchg
icebp
xchg
sub
mov
mov
sahf
aad
jbe
lods
add
jp
sub
lret
popf
aad
outsl
in
leave
mul
mov
faddl
aas
popf
mov
mov
add
inc
notb
enter
mov
arpl
adc
daa
lcall
imul
pop
lahf
pop
sbb
lods
fdivr
adc
in
lock
stc
and
jae
fdivl
es
les
ljmp
push
fistpll
mov
mov
jge
mov
dec
xchg
xchg
mov
lods
daa
addr16
sub
movsl
dec
fcoms
push
adc
clc
orb
ret
mov
bound
xchg
mov
jb
mov
out
adc
xchg
aad
and
add
aad
mov
bound
sbb
xor
xor
iret
dec
mov
pop
jl
mov
cs
add
xor
clc
cld
jle
hlt
pop
sbb
nop
push
push
pop
xchg
sub
repnz
dec
xor
cmp
push
mov
stos
in
cmc
mov
gs
pop
jne
ror
aas
xchg
cmp
lcall
out
and
sbb
outsl
adcl
sbb
adc
push
ret
inc
mov
out
sub
jle
lcall
cmp
ja
mov
sbb
adc
insl
insb
mov
clc
adc
mov
push
dec
cmp
sbb
in
inc
push
dec
push
int3
loopne
sbb
jae
scas
pop
and
pusha
cmpsl
fistps
push
icebp
sub
mov
push
push
push
sub
mov
jle
push
sti
subb
and
clc
pop
adc
dec
aas
push
and
lds
xor
out
sbb
bnd
aaa
icebp
push
mov
test
les
mov
mov
data16
xchg
notl
std
lods
aad
ficompl
pop
addl
mov
push
gs
sub
test
sub
sbb
or
push
inc
xor
pop
iret
cmp
sub
push
test
in
dec
sub
mov
dec
loope
jg
and
shrl
push
jmp
push
or
dec
mov
mov
aas
cmp
mov
push
push
push
aaa
out
jg
xchg
adc
push
mov
push
mov
jge
fnstsw
or
push
mov
xor
iret
jp
inc
test
inc
jecxz
jl
add
push
xchg
mov
mov
ljmp
xchg
jno
adc
inc
scas
fldcw
scas
dec
pop
xlat
nop
pop
jne
inc
mov
pop
pop
sub
add
push
mov
push
sbb
and
adc
sub
jl
decb
divb
jb
out
push
push
jmp
les
lea
sub
push
or
loopne
push
xchg
test
lock
jne
lods
xor
xor
mov
pop
dec
std
cs
push
mov
dec
pop
sbb
cmc
dec
mov
pop
repnz
cltd
sub
insb
stos
int3
push
mov
ficoml
mov
jns
or
jo
sub
jmp
fldl
and
sbb
addr16
imul
mov
scas
inc
or
lods
adc
sub
lret
pop
aam
mov
mov
outsl
push
xor
icebp
sahf
mov
stc
repnz
xchg
es
dec
mov
fwait
test
jmp
mov
loop
dec
pop
mov
cmp
xor
jo
mov
push
sbb
mov
lods
ret
test
leave
xchg
xchg
add
push
icebp
int
cmp
loopne
fisttpll
lcall
rcl
inc
arpl
jle
mov
out
out
cli
add
les
fbld
adc
movsl
cmp
xchg
dec
or
dec
lock
pop
fsubs
push
jno
rolb
mov
push
add
xor
xor
lock
mov
popa
add
sbb
outsb
pop
dec
testb
pop
xchg
gs
mov
push
ret
inc
push
insb
jbe
and
ss
pusha
arpl
pop
dec
mov
sub
mov
mov
mov
pushf
or
out
int3
inc
ffree
aam
lock
xor
xchg
inc
hlt
jb
sub
adc
inc
or
call
aam
pop
insl
mov
aas
push
add
jge
ficoms
adc
popa
sbb
fdivrl
in
enter
dec
hlt
aas
or
out
xor
sbb
ret
fisttpll
push
mov
push
bnd
lret
fs
pop
xchg
push
rclb
pop
jmp
sub
dec
cmp
scas
lret
jle
pop
fwait
jmp
xlat
and
sub
jns
ja
test
test
bound
enter
repz
call
movsl
mov
xorb
add
hlt
push
push
insl
les
repnz
sbb
mov
cmc
fisttps
pop
mov
push
push
sub
movl
xchg
mov
lahf
mov
aam
add
xchg
mov
xor
push
mov
cmp
or
loop
sti
mov
out
and
sub
cwtl
push
jp
test
test
pop
dec
icebp
lods
pushl
pop
xchg
decl
imul
cmp
dec
adc
and
test
iret
sub
push
sbb
idivb
fwait
adcb
imul
fmuls
xchg
das
in
in
scas
pop
mov
loope
ljmp
mull
push
pop
fstps
lods
pop
inc
rorl
movsb
mov
inc
and
pop
jmp
fistps
mov
pop
pop
outsb
jns
xchg
jp
cli
aas
inc
jb
push
sub
es
fiaddl
ror
inc
fstpt
loop
in
incb
inc
movsb
test
xchg
push
mul
sub
das
daa
push
movl
pop
fcoms
aaa
sub
and
cmpsl
stos
es
sub
ljmp
ret
cmc
subb
jnp
jne
stc
fists
bound
out
inc
test
jns
ss
add
movsl
mov
or
jmp
test
mov
push
aaa
mov
mov
test
xchg
xor
xchg
push
push
fldcw
sub
cmp
sbbl
pop
sbbl
test
cmc
cmp
add
addr16
mov
jecxz
adc
mov
mov
pop
into
adc
pusha
aaa
dec
in
xchg
popf
dec
add
mov
fucomip
arpl
mov
movsl
push
xchg
data16
add
shrl
rolb
mov
les
movsl
lahf
sub
movsb
xor
push
out
in
lret
jg
mull
push
mov
mov
enter
xorb
xchg
mov
and
mov
and
adc
nop
jg
mov
icebp
movsl
inc
add
or
xchg
cld
sbb
dec
insb
imul
cmpsb
jmp
rcrl
pop
imul
enter
std
sbb
or
lahf
pop
push
lcall
mov
or
mov
cmpsb
xchg
xchg
push
addr16
or
mov
outsl
cmp
icebp
lods
inc
mov
sbb
iret
jno
mov
pop
fadds
mov
in
jo
test
jno
mov
pop
adc
pop
adc
adc
adc
gs
jb
cmp
clc
fcoml
pop
pop
insl
mov
lods
enter
cli
jno
lds
js
daa
sbb
dec
cmpsl
adc
mov
out
sbb
and
rolb
cs
insl
mov
shl
cmpb
ds
bnd
xor
or
push
sub
cmp
push
rcll
dec
je
inc
push
repnz
xchg
pop
xchg
pop
test
jle
cmp
cmp
inc
mov
pop
lret
or
outsb
in
fs
sub
dec
ja
push
out
in
and
out
mov
cmpsb
xchg
jle
xrelease
imul
pop
or
sbb
and
pop
enter
ss
jae
jo
scas
cmc
xchg
jns
mov
nop
cmp
call
push
je
call
jns
jle
andl
jns
and
jmp
out
rcrl
cmp
mov
push
lds
test
bnd
jp
mov
dec
push
add
mov
sbb
push
je
in
stos
insb
sub
adc
ljmp
push
adc
cmp
rolb
xor
jp
bnd
ret
ss
pop
repz
sub
and
lods
loope
or
cli
js
sub
sbb
inc
cmpsb
push
stc
sub
push
sub
popf
push
imul
daa
inc
aam
inc
sbb
es
sbb
outsb
mov
fnsave
arpl
pushf
subb
jecxz
test
popl
xchg
test
jle
fidivl
aad
mov
jb
lret
add
fistl
fsubrp
out
inc
outsb
lods
pop
jmp
and
fisttps
lcall
pusha
cmpsl
adc
pop
lahf
pop
push
xchg
push
mov
or
adc
mov
into
push
or
std
adc
repnz
xchg
or
add
js
jle
sahf
loopne
pop
clc
xor
sbb
aaa
sbb
in
ficomps
rcrb
or
mov
jns
sbb
clc
sbbb
lahf
mov
ljmp
mov
pop
daa
mov
scas
sbb
sbb
aad
mov
mov
imul
mov
mov
xlat
mov
clc
out
addr16
dec
movsb
fistl
shl
adc
out
fwait
pop
idivb
stos
cltd
mov
xchg
xchg
xchg
xor
xchg
sbb
jae
sub
cmp
dec
js
pop
fcoms
and
dec
push
jnp,pn
cli
xor
sbb
pop
mov
fmuls
jbe
adc
pushf
cld
insl
outsb
mov
imul
out
or
adc
lret
stos
sub
and
orb
ret
outsl
jg
sbb
mov
xchg
xor
xchg
daa
cmpsl
outsb
mov
addr16
enter
adc
lahf
cmpsb
xchg
aas
xchg
fisttps
sarb
lods
arpl
inc
aas
jnp
into
sub
xchg
out
lods
jmp
adc
xchg
rcll
mov
insl
cmc
jg
inc
add
pushf
inc
lret
lcall
scas
jl
adc
mov
jne
jp
or
stos
lret
in
xchg
out
lods
push
mov
dec
jmp
out
push
xchg
and
loopne
in
push
jae
adc
loop
lock
mov
pop
and
mov
pop
mov
in
add
and
lahf
cli
mov
or
xor
push
mov
mov
ja
repnz
jle
inc
mov
sbb
mov
xchg
xorb
push
test
dec
xchg
jns
xchg
dec
cmovbe
inc
ficoms
add
pop
in
pop
mov
ja
jne
mov
dec
iret
jb
and
or
rorl
mov
repnz
shrl
flds
leave
xchg
xchg
pop
jae
ret
sub
lret
adc
pop
loopne
adc
divl
jb
jp
daa
stc
sbb
jmp
lcall
push
xchg
xor
arpl
in
negb
lock
out
push
pop
mov
imull
stos
xchg
mov
in
std
out
sti
lcall
adc
push
push
dec
inc
ljmp
sub
jo
sub
ror
repz
repz
cmpsl
xchg
aas
cmp
xchg
or
in
loope
inc
dec
arpl
scas
pop
icebp
pop
scas
jmp
shl
aas
lock
rcrl
insl
push
xor
mov
or
call
jg
mov
mov
mov
scas
cltd
fs
imul
pop
fucom
data16
in
rolb
dec
push
in
jae
sti
add
push
outsb
and
shl
xor
xor
xchg
mov
mov
or
mov
or
stos
sarb
or
mov
lock
lods
test
test
es
mov
inc
add
pop
or
pop
xchg
sub
xlat
dec
cld
fcmovnb
leave
loop
xchg
stos
xor
jle
popa
dec
movsb
lcall
sbb
gs
clc
or
jb
jnp
and
push
sbb
gs
pop
fcmovbe
inc
pop
ffreep
lea
dec
jle
insl
shl
addr16
lcall
inc
nop
cmc
icebp
movsb
inc
mov
cmp
out
sti
stc
lcall
and
xchg
adcb
xor
cmc
jne
stos
movsl
shlb
les
pop
jne
dec
push
add
add
xchg
jecxz
mov
data16
jmp
loope
and
stc
mov
lods
rcrb
add
aas
lret
test
xchg
orb
and
jae
clc
incl
xor
mov
xchg
aas
inc
fs
sub
andb
add
lds
jg
mov
mul
aam
cmp
jp
inc
sbb
ret
xchg
ljmp
pusha
push
sub
and
sbbl
push
dec
xor
rcrl
and
pop
out
popa
sbbl
jg
mov
add
fadd
add
test
lea
add
jo
std
jmp
popa
push
mov
lahf
and
aas
dec
in
mov
pop
popa
mov
sbb
adc
push
xor
xorb
add
jo
inc
mov
jg
xchg
sub
mov
or
xchg
mov
inc
sub
mov
and
xchg
xor
lock
mov
push
into
movsl
sbb
inc
fsubl
mov
dec
fisubrs
lcall
push
push
adc
aad
andl
xchg
in
push
into
push
scas
sub
test
pop
push
imul
mov
pusha
pushf
fidivrl
dec
dec
and
pop
in
aad
dec
int
sbb
arpl
mov
hlt
adc
cmc
insb
inc
repnz
inc
dec
sbb
xlat
fisubl
shlb
mov
jg
ret
adc
fcompl
movsb
pushf
test
jg
mov
xchg
cli
ret
add
lret
and
clc
xchg
cmp
sarl
out
je
stc
cltd
mov
add
sbb
mov
sub
inc
stos
and
adc
sbb
adc
mov
cwtl
mov
pop
pop
dec
stc
xlat
push
push
loopne
mov
stc
xlat
int3
or
pushf
fwait
pop
xchg
ret
adc
inc
mov
js
adc
xlat
test
jne
shll
cwtl
aam
jge
sub
outsl
idiv
push
jo
push
fcoms
mov
jno
sahf
jg
jmp
fildll
adc
das
cmp
mov
mov
pusha
push
subb
add
aad
stc
pop
sbb
mov
push
dec
xchg
xlat
outsl
fsubr
dec
ror
pushf
and
push
stc
aam
ss
xchg
mov
cmp
xchg
jnp
pop
pop
or
pop
sti
inc
mov
inc
ja
stos
in
sarl
mov
stc
pextrw
sbb
push
xchg
pop
cmp
mov
jle
or
fadds
cli
in
adc
dec
cwtl
scas
jp
pusha
loopnew
adc
and
push
xchg
mov
fs
test
mov
jb
imul
xlat
mov
or
stc
push
xor
xor
adc
fnstenv
mov
mov
mov
ret
sbb
iret
inc
test
data16
cltd
unpcklps
xlat
and
adc
test
sub
cmp
outsl
xchg
fwait
mov
xchg
outsl
jno
dec
xlat
aad
mov
int3
sbb
aaa
js
in
inc
push
and
pop
add
cltd
in
cld
adc
cwtl
cmp
push
outsl
insl
and
cmpsb
mov
dec
fildl
xchg
pushf
and
out
mov
mov
or
jle
subb
cmpsl
cmp
popl
push
jns
add
add
ret
pop
mov
loopne
or
mov
xchg
push
mov
and
aad
sub
pop
sub
mov
mov
cmp
mov
gs
sub
jo
dec
movsb
mov
cld
cmpsb
cmp
push
adc
imul
repnz
jl
or
jge
andb
jecxz
mov
and
mov
mov
inc
or
ss
mov
lods
add
repz
stos
dec
leave
lods
sbb
int
pushf
aas
int3
pop
xchg
pop
pop
fmulp
test
sub
int3
jno
hlt
mov
and
les
addr16
mov
daa
jp
jmp
push
mov
lds
dec
and
clc
mov
jbe,pt
pop
lock
cmp
punpckhbw
insl
sub
sub
fcmovnbe
imul
push
cmp
sbb
ds
push
loop
loope
mov
xor
leave
sub
pop
pusha
inc
ss
pop
and
jg
cmc
mov
xor
mov
outsl
mov
movsl
mov
test
out
jne
push
fadds
jne
aaa
enter
xchg
lret
adc
mov
ds
lods
ret
pop
push
pop
pop
push
push
mov
or
in
cmp
call
or
cld
shlb
out
ret
repz
xchg
mov
xor
adc
xor
stos
rclb
ja
js
push
repnz
mov
cwtl
std
jle
rep
pop
push
scas
int
xchg
mov
aad
push
ret
fidivrs
int
mov
push
lea
dec
loope
or
cld
out
inc
test
iret
mov
clc
adc
int
push
gs
fnsave
dec
jg
stos
int
lret
sti
loopne
bound
test
divl
push
mov
jne
xchg
mov
dec
xchg
sti
or
pop
sahf
jb
mov
sub
loopne
imul
scas
sbb
ret
mov
jmp
sub
call
in
imul
adc
loop
sub
mov
push
imul
xchg
mov
mov
xlat
stos
mov
mov
dec
out
adc
jbe
testb
adc
mull
movsl
and
or
jl
and
mov
sbb
pop
sub
rcll
fdivs
dec
in
jno
lea
sahf
adc
mov
xor
iret
inc
mov
dec
pop
inc
jns
mov
mov
ljmp
push
dec
lds
cmp
cmp
pop
outsb
mov
fdiv
jne
mov
mov
dec
add
movsb
pop
xor
stos
call
jno
into
sbb
movsl
xchg
adc
jmp
shlb
fwait
cmp
jo
cmp
mov
and
clc
jb
je
ret
pusha
or
nop
jbe
lret
cmp
jnp
sub
arpl
xchg
mov
push
cmp
or
cmpsb
int3
orb
sub
and
or
movsl
gs
test
lret
or
add
pop
ret
lret
mov
mov
jle
mov
dec
pop
fimull
cwtl
sub
decl
inc
arpl
lds
mov
cmpsl
aaa
dec
addl
sbb
xor
cwtl
dec
pushf
clc
dec
add
jl
jns
push
arpl
xchg
inc
les
outsl
mov
loopne
dec
loop
movsb
cwtl
mov
cmpl
mov
test
inc
push
fdivr
pop
test
mov
orb
xchg
in
dec
mov
cmp
xor
xchg
sbb
or
arpl
jle
xchg
out
xchg
pop
push
ljmp
and
inc
jae
xchg
jb
cmpsl
mov
stos
mov
sbb
jecxz
mov
or
sub
stos
fdivl
mov
inc
dec
insl
dec
push
mov
les
lods
icebp
lods
and
cmp
adc
stos
jns
lods
pop
mov
jmp
xchg
cmpsl
dec
jl
cmpl
jmp
test
push
push
jl
cmp
or
add
sbb
icebp
jmp
movsb
les
sti
mov
daa
jmp
je
add
mov
scas
fnstsw
adc
aaa
push
pushf
mov
aam
ret
lcall
int
jle
out
ficoml
int3
add
or
enter
jg
jecxz
cmp
ror
movsb
push
inc
shrb
xlat
pop
push
fbld
sub
cmpb
into
push
repz
inc
inc
sbb
out
pop
cmpb
lods
repnz
adc
mov
mov
inc
add
es
shlb
loope
lret
jle
ds
lea
push
adc
mov
in
jge
rclb
arpl
and
out
push
aam
pop
popa
push
push
jle
push
mov
push
int3
dec
scas
ja
js
sbb
mov
les
or
inc
stc
daa
fildll
pop
sbb
enter
jmp
add
inc
add
jo
sub
sub
out
js
mov
mov
pusha
pusha
mov
cwtl
add
shll
push
push
lcall
sti
cmp
jnp
inc
xchg
jno
and
sub
fdivs
push
push
pop
xchg
adc
lret
iret
mov
push
pop
lahf
nop
cmp
jb
out
outsb
sub
lods
sbb
jmp
cmp
mov
dec
mov
cmp
jecxz
mov
hlt
push
sete
jbe
pop
pop
js
daa
pop
je
stc
mov
int
sarl
rolb
push
cltd
dec
sbb
cmp
mov
mov
popa
mov
add
jle
leave
push
cwtl
sbb
lds
out
inc
pop
dec
ret
add
ret
cli
dec
ljmp
dec
adc
sbb
fstpt
inc
test
xchg
loopne
xor
divb
ljmp
and
xor
movsl
mov
mov
sub
mov
int3
mov
pop
es
lahf
pop
sbb
ret
jno
mov
scas
push
dec
adc
sub
iret
cmp
and
push
out
mov
mov
out
add
xchg
mov
xor
movsb
ss
mov
xor
jb
ret
shll
dec
sti
xor
mov
mov
adc
stos
shll
js
push
ja
jge
repnz
inc
mov
in
cld
imul
jnp
and
fsubrp
mov
xor
fdivrl
adc
mulb
dec
cwtl
dec
push
xor
shll
dec
push
jbe
dec
pop
push
mov
push
out
cmpb
sbb
jge
mov
jb
jle
les
adcl
dec
sahf
lods
mov
divb
psubsb
sbb
fidivs
jecxz
lcall
pop
push
mov
sbb
xchg
dec
sbb
and
test
icebp
jecxz
mov
jo
dec
or
rorl
fwait
mov
cli
mov
sti
cmp
mov
ret
cmpsb
repnz
pop
or
inc
imul
cmpsb
xchg
add
and
sbb
jb
xchg
loope
mov
sbbb
bnd
fcoml
mov
xor
mov
xor
pop
shrb
loop
sti
cmp
jmp
push
dec
mov
dec
or
xchg
push
cld
add
mov
push
int3
pop
and
xchg
sbb
mov
lea
xchg
mov
dec
scas
ficoml
mov
popf
pop
cld
movsl
adc
loope
mov
movsb
ja
pop
ret
mov
or
cmp
mov
mov
dec
pop
rorl
out
lret
das
sub
push
or
std
loope
mov
add
sub
cli
jno
and
jo
mov
fsub
cmp
mov
les
pop
gs
fisubl
mov
insl
pcmpeqd
add
fbld
jp
sbb
mov
dec
sbb
push
jle
adcl
adc
fcomps
pushf
ror
mov
mov
bound
lahf
arpl
lock
fs
add
arpl
insl
mov
or
ficoml
xchg
imul
xchg
dec
add
push
scas
cmp
mov
inc
cs
cld
inc
cmp
dec
xor
popf
dec
mov
cmc
sahf
mov
pop
stc
data16
sbb
pusha
test
xorl
mov
adc
pushf
cmp
pusha
add
dec
jns
xor
push
push
movsb
jne
jb
nop
sub
lods
mov
jge
mov
push
push
insl
loope
outsb
inc
pop
pop
pop
adc
jle
mov
icebp
mov
pop
iret
push
sub
mov
add
mov
jae
mov
push
pushf
xor
sbb
add
mov
popa
adc
add
xor
pushl
shrb
xchg
adc
mov
cmc
sub
loope
jge
ret
xor
lock
jl
jge
mov
sahf
adc
data16
xor
sub
imul
jnp
adc
mov
std
insb
mov
js
mov
or
adc
push
stos
sub
outsl
mov
xchg
add
ljmp
out
insb
xor
adc
decl
mov
cmpsl
push
sub
sti
repnz
and
fwait
lret
sub
test
out
insl
inc
or
jp
test
jg
out
daa
adcb
aaa
jp
mov
mov
pusha
cmp
sub
test
mov
mov
xchg
test
push
push
pop
lds
rcr
push
fwait
sarb
mov
test
sbb
ss
adc
sub
outsb
mov
jno
jnp
mov
dec
lret
jge
xor
cmp
cld
inc
mov
fists
cld
push
loop
repz
ja
mov
or
and
mov
add
nop
jle
imul
popa
cld
cmpsl
aam
cmp
sbb
xchg
xchg
lds
xor
push
pusha
pop
inc
insb
cmp
sti
int3
lods
push
enter
add
ljmp
push
cwtl
push
mov
cmp
addl
data16
repz
shrb
scas
push
sbb
fsubrs
pop
mov
inc
jbe
mov
xor
loop
in
mov
push
out
jecxz
fisubl
adc
mov
pop
lret
push
ror
sahf
in
sub
cmp
push
loopne
mov
jno
dec
sbb
imul
mov
jns
or
sbb
insl
scas
in
add
sub
jmp
dec
ror
test
dec
inc
add
addr16
xchg
add
add
dec
mov
in
push
and
cmc
out
pop
pop
sti
adc
mov
clc
jl
lds
push
fistl
or
popf
test
adc
in
notb
divb
arpl
mov
pop
dec
rcrb
icebp
cltd
mov
mov
adc
cmp
or
les
lds
lahf
adc
adc
out
scas
xor
sbb
insw
dec
outsb
cltd
hlt
xchg
adc
fildl
cwtl
pop
mov
sbb
lret
dec
xor
jne
xchg
mov
iret
add
jno
inc
push
and
std
fildl
xorl
lret
push
mov
rcll
addr16
and
cs
jo
int
fwait
mov
add
test
cmp
sarl
shl
das
mov
mov
mov
fsts
outsb
push
cs
int
jmp
out
pushf
push
xchg
xor
insb
repz
ror
push
insl
and
pop
push
movsl
mov
xor
mov
or
cmp
rcll
pop
push
je
and
push
mov
cmp
shll
pop
cmc
sub
fidivs
ljmp
fiadds
jns
aam
mov
cwtl
and
in
jge
dec
fnstenv
outsb
xchg
and
adc
enter
add
pushl
add
sahf
sarl
xlat
push
mov
hlt
arpl
mov
enter
fldt
pusha
jno
adc
popa
les
mov
adc
adc
rorb
aad
lahf
cmp
mov
inc
or
sahf
mov
push
sbb
fidivrl
lock
adc
movq
cmp
les
cmp
pop
cmp
mov
push
mov
adc
popf
dec
in
das
dec
xchg
aam
jnp
fdivr
push
pop
inc
into
mov
pop
loopne
dec
fs
ror
lret
pusha
inc
sti
mov
adc
xchg
adc
push
mov
adcl
pop
cmpxchg
xchg
inc
mov
out
mov
push
aaa
sahf
fs
loopne
out
sbb
mov
into
push
jns
pushf
mul
sbb
inc
adc
dec
vmwrite
cltd
sbb
jns
aas
ljmp
dec
imul
aad
lret
or
fwait
sbb
iret
jecxz
jne
add
pop
mov
movsw
mov
inc
out
jo
fbld
xchg
imul
xchg
jmp
popa
shll
mov
dec
cmpsl
xor
in
stc
push
pop
sbb
xor
xchg
insl
adc
cmp
jl
jno
inc
pop
push
xchg
dec
aad
stc
or
mov
xor
jno
fdivs
mov
out
mov
jnp
mov
stc
repnz
or
and
pop
cmp
scas
cmp
sub
jb
xchg
jns
es
std
mov
and
lods
loopne
fmull
lock
xchg
lods
or
or
fnsave
loopne
shrb
jl
push
cmp
inc
dec
inc
into
inc
jno
sbb
shl
shl
fadds
pop
pop
mov
mov
lahf
dec
cmpsl
xchg
in
cmp
mov
int
push
jg
lcall
jmp
adc
sbb
cmp
adc
sub
xchg
shl
push
stos
add
push
add
call
stos
jge
subb
adc
sbb
jo
jo
or
in
add
jp
mov
fs
movsl
ds
mov
push
adc
sti
divb
inc
lds
daa
dec
jle
sub
dec
and
push
mov
push
outsb
loopne
and
int
xlat
dec
dec
adc
dec
and
cltd
xchg
ds
les
jae
jge
in
neg
dec
push
aaa
cli
pop
push
fdivrl
and
mov
andb
js
push
sub
lea
jae
pop
rolb
nop
or
and
lock
adc
mov
inc
jb
cmpsl
push
or
addb
aaa
ss
pop
imul
leave
push
scas
mov
int
dec
dec
sub
lret
xor
test
int3
sbb
arpl
jnp
shll
xchg
pop
std
or
das
jge
iret
inc
aad
incb
inc
js
sbbl
push
outsb
sbb
std
aam
adc
fdivl
jne
addr16
in
mov
sbb
cli
fldt
inc
push
adc
neg
xor
dec
xor
jb
and
test
in
cltd
mov
and
fistpl
mov
cwtl
iret
push
mov
out
subb
push
addr16
repnz
adc
jbe
mov
lods
ret
div
loope
insb
rcrl
rclb
pop
jne
xor
sti
sub
mov
pop
cltd
adc
out
stos
add
rcrb
mov
lock
inc
dec
repz
ja
push
mov
rcrl
daa
xchg
std
fidivl
mov
xor
shlb
repnz
out
sbb
sub
jecxz
hlt
dec
fwait
lahf
lods
jns
inc
mov
push
lods
xor
jo
push
and
or
aad
stc
pop
mov
fisttpl
bound
in
cli
pop
pop
cwtl
jecxz
fwait
or
sub
cmp
push
xchg
mov
or
jnp
push
repnz
push
fisttps
mov
popa
nop
pop
lea
mov
stc
daa
in
jp
push
sbb
stc
fmulp
and
pop
pop
test
mov
push
push
jb
test
jae
xor
and
jne
inc
sbb
mull
loope
or
fidivl
or
test
cmp
mov
fstl
fidivrs
pop
jge
cmpsb
xchg
mov
and
adc
test
insb
and
test
test
movsb
aad
xor
push
imul
mov
push
scas
jno
push
je
jge
cltd
sub
jmp
xchg
lahf
inc
pop
xchg
insl
call
push
or
movsb
push
lea
addr16
int3
push
mov
in
mov
lods
sub
dec
repnz
xlat
cltd
repz
adcl
and
lcallw
xor
insb
inc
add
push
and
popa
outsl
dec
xor
cmp
sbb
mov
jmp
add
jle
jle
sbbb
jo
orl
jecxz
test
hlt
std
rolb
rcrb
fstpl
out
cmp
sub
or
jns
cwtl
lret
push
sub
dec
sbb
sahf
pushf
pop
xchg
stos
xlat
dec
cwtl
xchg
mov
xor
inc
ss
movsl
pushf
or
mov
xchg
imul
repnz
aaa
mov
movsb
xor
and
jns
adc
fbstp
mov
and
iret
add
subl
jae
inc
push
nop
fistpl
mov
es
lods
xor
insb
lds
mov
addr16
dec
fidivrl
test
push
mov
jp
jle
xchg
repnz
lahf
xchg
movsl
fisttpll
movsl
add
adc
ret
fcoms
inc
jnp
sbb
jl
or
andl
fistpl
push
push
adc
push
add
sub
or
call
jnp
aaa
outsl
in
cld
scas
in
xchg
dec
scas
subl
loop
sbb
ret
fsubs
stos
cmp
and
pusha
mov
outsb
jmp
adc
fidivl
or
xchg
dec
mov
movhps
jge
jecxz
ss
cmp
scas
les
mov
daa
data16
jle
jo
mov
sbb
push
gs
cmp
mov
sub
jl
cltd
mov
xchg
movsb
data16
xchg
mov
add
out
in
jp
subb
mov
loope
js
mov
add
lcall
lret
rep
inc
cld
push
cmpl
test
mov
sarb
xor
mov
inc
push
fildl
push
push
add
push
leave
fsubr
aad
pop
fwait
sarb
aaa
shrb
or
pop
fwait
jnp
jge
jmp
cli
dec
cmpsl
je
bound
lea
movsb
lret
add
push
aas
hlt
daa
mov
add
pop
mov
sub
bound
pop
adc
cmp
fildl
fs
xchg
or
dec
outsb
mov
mov
xchg
dec
aas
in
push
xchg
jo
pop
xlat
jae
sti
xchg
shrb
cld
sub
sbb
fisttps
aaa
ret
add
arpl
dec
sub
jmp
aas
cltd
lds
dec
or
in
icebp
movsl
inc
into
cmp
movsl
ja
jno
xchg
das
psubsw
push
leave
dec
xchg
cmpsb
lcall
test
dec
adc
call
sub
mov
mov
insl
mov
insb
sub
jcxz
xchg
mov
loope
sub
icebp
jecxz,pt
fiadds
sub
dec
pop
push
add
sahf
cmp
add
mov
in
nop
and
xor
pop
sub
fsubrp
int3
xchg
lret
lea
in
arpl
sbb
push
pusha
jmp
xchg
xor
mov
adc
push
xchg
jp
lds
lea
xor
leave
test
repnz
jle
loop
es
mov
sub
out
je
xchg
jne
sub
dec
mov
cmc
push
stos
push
es
cmp
sbb
cld
and
lock
pop
lret
xor
into
dec
xlat
ds
xor
sub
cld
push
inc
sub
or
pop
scas
call
sub
cwtl
cli
test
or
call
jmp
dec
aas
and
push
add
cmp
mov
cmp
cmp
clc
mov
adc
mov
popa
xchg
mov
dec
popa
ret
cmp
adc
in
outsb
fst
stos
fimuls
leave
into
mov
int
pop
bound
les
xchg
mov
lahf
repnz
icebp
stos
jle
loopne
pop
add
sbb
fnsave
jbe
and
or
lock
mov
dec
push
push
cmp
jle
enter
and
cmpsb
int
xor
dec
insl
in
xchg
xchg
pusha
fnclex
inc
js,pn
lock
ret
jne
pop
sahf
std
pop
aaa
lods
ffree
ja
add
xor
es
arpl
repnz
mov
lcall
lret
inc
pop
xchg
lock
xchg
dec
cmpsl
pop
cmp
xchg
daa
inc
rorb
xchg
xor
out
mov
adc
mov
cmpsl
push
les
les
scas
loop
and
pushf
sub
mov
and
adc
cmp
cmp
hlt
mov
scas
sub
lock
sbb
sub
fs
popa
inc
cwtl
fwait
mov
pop
xchg
mov
pushf
je
imul
fucomi
mov
ss
aam
mov
movlps
xchg
out
mov
inc
mov
repnz
dec
xchg
adc
pop
dec
leave
movsb
mov
lods
xchg
adc
and
adc
scas
jo
lods
pop
jmp
in
or
cmp
pop
enter
call
dec
sbb
adc
sub
mov
push
dec
rcrl
push
pop
je
test
push
add
inc
je
in
cld
or
jns
in
pop
hlt
pop
out
adc
sub
add
cmp
daa
and
imul
bound
ds
xchg
adc
cmp
xchg
fs
test
pop
or
sub
mov
cmc
test
mov
xor
aad
addl
jno
pop
jl
xor
flds
mov
sti
xor
xor
add
stos
das
mov
outsl
in
js
mov
jne
sbb
push
hlt
inc
hlt
test
popf
mov
out
jbe
add
notb
sub
dec
mov
or
jae
pop
jmp
xor
sbb
aas
sbb
cmp
leave
pop
and
jecxz
xlat
call
in
mov
or
idivb
and
nop
scas
push
inc
cmp
or
push
lods
jecxz
xor
add
int3
cmova
stos
mov
push
sbb
inc
mov
sub
pop
lret
and
xchg
dec
pop
sub
pop
das
xor
dec
pop
scas
sbb
mov
hlt
sub
aam
ja
loop
push
nop
mov
mov
les
push
dec
and
mov
dec
leave
scas
dec
push
imul
fwait
xorb
mov
dec
pcmpeqd
inc
pop
test
ret
stos
mov
xchg
call
push
imul
jg
jp
add
insl
lods
dec
fcomp
repnz
es
lret
and
fs
mov
cmc
rorl
add
adc
nop
mov
push
in
loop
inc
jmp
das
inc
mov
mov
inc
mov
ja
xchg
jle
push
std
xor
cmpb
popa
push
push
lahf
cmp
adc
clc
xchg
gs
mov
fnstsw
push
mov
and
into
outsl
cmpsb
or
mov
pop
jp
lret
ret
les
in
nop
mov
loopne
lea
in
mov
mov
xchg
pop
aaa
imul
xor
mov
jbe
dec
lock
adc
pusha
pop
cmp
mov
mov
dec
mov
loop
into
adc
xor
in
jne
rcr
xor
ret
stc
dec
mov
cmc
hlt
cmc
out
in
pop
imul
jae
cltd
pusha
jl
sarl
sbb
jge
dec
scas
in
mov
pop
mov
adc
and
sub
cmp
loop
push
pop
inc
mov
test
cmp
pop
mov
cmp
push
jp
dec
repz
jbe
enter
push
xor
ficoms
daa
or
lahf
xor
fdivr
mov
jbe
pop
and
psubusb
xchg
mov
clc
sub
xchg
push
insb
pop
hlt
out
shlb
pop
test
push
int3
jno
adc
xchg
mov
ja
xor
inc
fsubr
lock
push
sti
or
mov
jmp
stos
scas
adcb
pop
push
js
shlb
loopne
icebp
adc
mov
pop
es
stos
dec
call
nop
movsb
push
sbb
cmpsl
push
or
movsl
dec
jns
mov
jne
outsl
out
movsb
pop
repz
and
mov
jno
sub
subl
cmp
cmp
cmpsl
dec
jo
arpl
das
pop
daa
in
mov
pop
mov
idiv
sbb
arpl
movsl
xchg
lret
and
addr16
mov
mov
loopne
daa
or
out
sub
lahf
jp
repnz
into
into
push
sbb
jg
xchg
leave
jo
mov
lods
cmpsl
sub
and
pop
gs
fnstenv
divb
cmp
cs
daa
inc
cmc
ret
enter
sub
or
cltd
inc
mov
push
ja
push
push
imul
xchg
rclb
in
dec
or
addr16
imul
ret
shrl
dec
fisttpl
pushf
dec
adc
add
decb
adc
cmp
cmp
fwait
inc
push
cmpps
sti
addr16
in
sbb
imul
ss
ret
fcmovu
pop
sbb
sarb
inc
jnp
inc
mov
push
adc
in
or
inc
pusha
cmpsl
jo
mov
adc
cltd
push
pop
mov
daa
or
mov
xlat
fcompl
jno
jmp
movsb
and
iret
addl
push
and
mov
lahf
or
adcb
push
dec
push
paddd
mov
les
and
inc
aas
push
dec
xchg
add
dec
and
jecxz
inc
loopne
xor
pushf
into
shrb
mov
mov
out
shlb
sbb
jo
rcll
push
xor
push
pushl
aas
mov
pop
inc
push
add
movsb
hlt
stos
jge
mov
clc
push
sub
test
imul
fisubs
mov
dec
push
pop
test
fisubs
xchg
or
add
sub
mov
add
mov
cmp
shlb
orl
mov
push
and
movsb
fld
loop
test
in
stos
int
in
flds
cmp
sti
shrb
hlt
xor
bound
fwait
int
jl
pop
push
push
stos
sbb
mov
or
fists
pop
icebp
push
cmc
mov
imul
idivl
mov
sbb
inc
test
cwtl
movsb
jns
data16
mov
flds
iret
cmp
dec
insb
addb
jo
vpsllw
repnz
lock
sarb
lret
dec
add
loope
pop
mov
test
pop
sbb
outsl
push
into
cmpsb
imul
xchg
mov
ror
je
scas
enter
jns
cmp
cmp
push
mov
xchg
jg
sahf
mov
std
es
outsl
subb
je
js
insb
outsb
rcll
push
test
js
jg
iret
nop
push
push
sarb
imul
cmpsl
scas
xor
sub
lcall
pop
outsb
xchg
mov
roll
les
subb
or
cmp
inc
int
out
dec
push
pop
push
jnp
repz
add
out
sbb
add
in
rcll
mov
xor
inc
push
sbb
xor
jo
out
mov
test
pop
and
add
test
stc
enter
iret
add
and
clc
add
mov
add
push
stc
popa
push
dec
adc
mov
push
fldt
xor
rorb
fcompl
ds
mov
lret
cmpsb
pushf
test
dec
ljmp
push
and
dec
loope
xchg
pop
push
fdivl
fs
dec
mov
dec
movsb
mov
shrb
jecxz
inc
and
popa
or
jle,pt
loopne
add
sbb
adc
mov
insl
mov
mov
pusha
imul
pop
xchg
sbb
sub
xor
aas
icebp
mov
pop
test
mov
adc
or
das
loopne
dec
imul
or
cwtl
cmpsl
nop
xor
test
pop
jb
adc
out
push
aas
mov
dec
jmp
cwtl
sbb
fwait
pop
mov
pop
cld
adc
jge
xchg
dec
jne
mov
add
loopne
or
repz
movsl
jmp
push
repz
call
pop
xchg
inc
loopne
push
mov
call
push
jecxz
push
icebp
mov
adc
lock
mov
out
mov
fldt
push
mov
pop
xor
ret
icebp
cmp
pushf
or
ret
cmp
cmp
xchg
xor
cmp
pushf
mov
lret
clc
js
push
push
pop
out
xor
push
xchg
test
pop
sub
fimuls
lds
pop
inc
cmp
test
lock
orb
or
mov
addr16
pop
mov
int3
xchg
rclb
mov
sub
push
shrb
js
xor
popf
sub
xor
push
out
imul
mov
cmp
clc
dec
sub
js
out
xchg
negb
pop
test
sub
jl
mov
imul
repz
mov
mov
jbe
xchg
lods
jns
dec
mov
cmc
add
or
and
cmp
sbb
add
add
mov
lods
cmp
jo
cmpb
sarb
aam
test
mov
ja
not
mov
or
lock
andb
cld
shll
xor
xchg
dec
sahf
movsl
testb
mov
xor
outsb
gs
inc
outsl
call
stos
notb
push
pop
test
inc
dec
push
lods
add
jecxz
dec
mov
sbbl
sub
cmp
loop
imul
adc
mov
stc
cmp
outsl
mov
dec
cltd
stos
pop
outsb
std
cmpsl
mov
inc
ss
or
loop
mov
pushf
push
pop
incl
mov
dec
pop
call
repz
or
adc
mov
movsl
js
xchg
and
jne
aaa
inc
jl
fs
in
xchg
mov
fcmovbe
pop
sub
fcom
sti
into
scas
inc
fildll
ss
insb
out
push
jmp
inc
jl
cmp
push
icebp
psrlw
adc
gs
push
fists
ds
repz
jp
jp
jecxz
cld
or
sbb
dec
aad
or
mov
inc
into
pop
cmp
mov
fmull
pop
jp
not
sbb
and
xchg
lea
push
gs
jb
and
fstl
idivb
jg
push
arpl
cmp
lea
sub
mov
ficoms
mov
dec
fs
jne
jmp
add
push
sub
jbe
xor
aam
mov
ljmp
adc
sub
adc
aas
out
push
je
ss
mov
stos
loop
les
adc
pushf
out
clc
pop
call
cmp
sub
mov
inc
fcomip
stc
sub
xchg
jg
ret
faddl
dec
ror
xchg
subl
push
stc
xor
or
xchg
pop
aam
lahf
pop
dec
test
pop
inc
jns
mov
out
test
xchg
xlat
fsts
push
aad
xor
inc
sub
shrb
xchg
mov
cltd
fwait
int3
adc
sub
or
dec
loop
sub
dec
js
mov
and
mov
fidivrl
mov
adc
pop
and
movsl
xchg
mov
test
cmc
cwtl
test
mov
in
scas
popf
adc
adc
mov
ficompl
sub
xchg
cmp
lret
lcall
xchg
scas
aad
sbbl
leave
mov
ds
in
fsubl
pop
xlat
es
jb
loopne
fcoml
mul
daa
dec
loop
clc
cmp
loop
xchg
movsl
jb
xor
push
adc
shlb
mov
rolb
fs
inc
push
stc
sub
jb
sbb
das
pop
cmc
jle
stos
push
icebp
adc
add
punpckhdq
bound
pusha
out
cmp
inc
popf
fldcw
das
fs
and
jae
xor
jle
xor
sub
icebp
push
sub
popf
sub
int
leave
jo
nop
or
int3
pop
enter
test
pusha
or
pushl
frstor
jns
add
adc
sbb
stos
jecxz
daa
repz
inc
xor
mov
cmp
je
adc
enter
lock
lods
cmp
dec
ja,pt
push
mov
pop
mov
mov
cmpl
stos
adc
scas
pop
fwait
inc
xchg
sbb
sub
gs
jle
je
push
inc
dec
fists
mov
cmp
stos
jns
insl
jae
sbb
shr
movsl
and
cs
add
sub
inc
mov
hlt
add
mov
sbb
adc
pop
jo
sbbb
push
out
dec
pop
cld
or
sub
in
stc
ret
popf
gs
inc
or
icebp
push
mov
data16
outsb
mov
sbb
jb
bound
faddl
jg
push
xor
jo
xchg
stc
aam
adc
ret
pop
cmpsb
adc
je
push
orl
dec
fists
daa
imul
pop
leave
xor
and
and
lcall
or
fadd
rorl
scas
rorb
cmp
jge
sub
jnp
shl
lretw
nop
and
push
push
into
lea
or
mov
les
mov
idivb
or
fdivp
push
adc
jl
into
add
test
cmp
jne
cwtl
push
or
out
stos
adc
mov
pushf
mov
jl
fs
sub
jb
popa
mov
mov
lds
aad
cmp
xlat
std
hlt
cli
xchg
jg
sub
ja
les
lods
inc
inc
mov
int
lahf
lcall
push
ss
sahf
lret
xchg
pop
out
add
mov
mov
mov
mov
and
pop
xchg
ret
push
js
and
mov
add
shlb
inc
out
cmovb
pusha
pop
lods
mov
clc
mov
in
dec
xor
arpl
out
dec
mov
cmp
jae
int
and
iret
push
mov
push
cwtl
icebp
jb
push
cs
jnp
jnp
mov
pop
movsb
jl
clc
lea
adc
dec
mov
sbb
cs
add
data16
in
lods
mov
int3
inc
mov
fildl
sbb
xchg
lods
mov
inc
fistps
movsl
mov
test
test
nop
or
dec
in
and
aaa
add
in
adc
int3
test
stc
dec
popl
mov
orl
mov
cmp
xor
adc
cli
lock
cmp
inc
adc
adc
dec
sbb
mov
lret
xor
jge
push
mov
xchg
sub
imull
sub
sbb
and
sub
push
clc
jns
mov
aad
in
xchg
inc
aam
jle
or
fstps
and
lea
pop
loopne
pop
pop
jmp
out
es
mov
jb
sub
xchg
sub
imul
push
and
repnz
push
pop
adc
int
sbb
mov
mov
inc
push
cmc
in
dec
jmp
mov
dec
dec
fwait
insb
decb
mov
insl
mov
mov
pop
sub
lods
push
aaa
pop
sbb
mov
test
popf
push
sbb
lea
lods
and
mov
sbb
cmp
sub
pop
xchg
jle
movsb
pusha
mov
pusha
jnp
sbb
push
pop
adc
or
in
iret
pushf
aad
psubusb
je
inc
adc
in
mov
ret
push
stc
add
lods
push
lcall
add
jmp
cmp
and
mov
and
and
jno,pn
sarl
aaa
xchg
and
test
cli
mull
jge
and
push
mov
sub
jne
xchg
iret
jp
push
les
fdiv
jle
add
out
aad
xor
pop
sbb
test
jo
pop
pop
mov
pop
movsl
out
stc
jge
inc
enter
lret
cmp
and
aas
add
jne
sarl
inc
mov
mov
xchg
xchg
popa
mov
pusha
aad
mov
testl
dec
add
rcrb
adc
mov
jnp
mov
mov
sub
stc
mov
stos
ds
in
mov
fiaddl
mov
aas
mov
sub
push
sub
ja
ds
out
aam
mov
pop
sbb
or
jne
pop
imul
lock
mov
lcall
adc
cs
stc
movsl
pushf
test
or
ret
xor
outsb
out
sbb
int
pop
out
push
jle
fucom
push
mov
jmp
pop
test
call
lods
sbb
mov
jmp
addb
dec
adc
xor
sarl
mov
pop
fs
mov
xor
dec
fidivrl
sub
fiaddl
outsl
scas
js
das
jecxz
xchg
xchg
cltd
and
lret
xor
aad
ret
dec
lahf
cld
cmp
jmp
loopne
idivl
jae
and
aas
das
inc
xchg
mov
lock
add
mov
sbbb
jae
jne
sti
jp
jo
sbb
push
lret
add
imul
not
mov
or
jae
dec
je
jecxz
std
mov
div
movsl
pop
rorl
scas
int
int3
outsb
add
push
push
sbb
inc
cmp
mov
movsl
stos
push
add
into
sub
ret
in
pop
loopne
mov
lcall
loope
nop
les
mov
xchg
inc
xor
cltd
sub
dec
xchg
jno
add
movsb
push
enter
mov
cmp
test
je
flds
add
mov
js
shlb
sub
in
aam
jb
pop
mov
je
sar
sahf
jp
lahf
aam
cwtl
jns
daa
rcrb
and
sbb
jb
xor
test
pop
adc
out
mov
jbe
fisubl
sub
dec
stos
testl
lea
dec
loope
sbb
lods
imul
rorb
push
xchg
mov
push
dec
cmpsl
jo
mov
mov
inc
and
sub
std
jne
mov
out
dec
jbe
imul
addr16
rorb
fstps
mov
pop
and
movb
aas
xchg
sub
push
xchg
push
xor
fucomi
sbb
cmp
repnz
mov
fstl
out
push
and
test
cmp
jb
add
mov
ret
xor
jae
les
std
adc
mov
inc
adc
enter
cmc
cmp
mov
imul
add
and
ret
mov
cmp
dec
mov
pusha
fistps
xlat
es
pop
pop
jno
clc
mov
dec
mov
xor
sbb
pop
fidivrs
shlb
and
jbe
fcomp
inc
mov
leave
mov
dec
and
mov
mov
rorl
push
cld
hlt
xor
inc
cmpsl
mov
out
pop
les
adc
pop
cltd
dec
cs
in
pop
shll
aad
mov
xchg
dec
and
sbb
popa
rorl
push
rorl
push
push
jae
pop
inc
mov
and
sub
addr16
cmp
out
sub
inc
lea
inc
cmp
mov
xchg
sbb
jmp
lds
in
lods
out
andb
jb
mov
sub
push
dec
call
movl
inc
fisubrl
pop
ds
int
xchg
test
xor
scas
or
in
jecxz
add
es
push
sbb
pusha
lods
iret
lret
shll
push
cmp
xchg
jb
inc
loopne
sahf
lods
jae
aam
test
lock
inc
in
mov
es
or
jns
cmc
out
jl
fildl
ret
shld
add
xchg
pusha
inc
mov
xchg
xor
cmpl
cwtl
pop
scas
insl
and
stos
lds
sti
and
sub
add
shr
mov
sti
jecxz
pop
pop
jb
fdivl
cmp
push
pusha
lret
repnz
sbb
cmpl
cmpsb
inc
mov
je
aad
add
xchg
icebp
shl
imul
stc
cwtl
cmp
jl
cwtl
bound
xchg
xlat
loopne
imul
in
pushf
pop
movb
scas
xchg
test
mov
and
outsl
inc
jmp
mov
add
dec
push
ds
push
sbb
lea
mov
pop
mov
loopne
cmp
cwtl
lds
outsb
pushf
sub
cmp
inc
in
out
pop
pop
std
jae
ss
imull
in
cwtl
je
push
push
movsb
fisttps
adc
lret
mov
aad
push
in
adc
cmpsl
lds
adc
lock
and
cli
sbb
test
sub
pushf
or
mov
ljmp
lods
pop
lods
xorb
pushl
in
pop
nop
lods
inc
push
aas
ss
fadds
pop
imul
sarb
js
or
inc
daa
mov
aad
push
in
fidivrl
nop
cmp
push
cmp
mov
adc
jmp
clc
mov
jle
sub
mov
mov
push
ret
jecxz
dec
dec
faddl
xchg
xchg
cld
pushf
sbb
push
or
adc
sbb
mov
shrb
add
repz
lock
nop
mov
inc
cmpsb
repnz
andl
mov
dec
jge
dec
repnz
and
shll
push
add
lea
into
push
aaa
insl
scas
loopne
loope
in
or
mov
mov
bound
xchg
mov
mov
in
xlat
inc
bound
clc
pop
in
push
jge
cmp
xor
inc
lahf
sahf
inc
cmp
das
pushf
sbb
xor
stos
std
push
jle
sub
sbb
xor
mov
xchg
adc
inc
push
dec
js
adc
xchg
pop
mov
inc
jp
loope
je
mov
jecxz
test
mov
xor
loop
xchg
shrb
inc
hlt
es
cmp
xor
and
xchg
jl
pusha
dec
cmp
mov
ss
cltd
jnp
mov
inc
les
add
jbe
aam
pop
movsl
push
fmull
popa
or
mov
push
inc
pop
and
pop
mov
push
sub
pushf
sub
loope
sub
push
mov
icebp
mov
sbb
xor
adc
cld
lds
mov
jnp
les
or
ret
xchg
add
ret
lret
mov
jbe
cmp
mov
lahf
push
xor
push
sub
pop
imul
cwtl
mov
xlat
pop
jg
mov
dec
mov
fadd
push
add
pop
cmc
inc
or
push
adc
push
ss
pop
mov
int
pop
jge
stos
pop
xchg
sbb
sub
mov
sub
iret
movsl
rcl
and
pop
cmp
push
push
movsl
jp
xchg
jns
cmp
cmp
je
pop
ljmp
icebp
int
add
jmp
rol
mulb
push
cmpl
stos
repz
mov
push
and
ljmp
mov
fisubl
jnp
inc
pop
dec
into
hlt
sub
mulb
xor
push
mov
addr16
ret
xor
cli
ficoms
xor
cmp
mov
rcl
insl
fwait
andb
cmp
lret
pop
adc
pushf
cmp
mov
roll
lods
shrb
dec
jg
xchg
jno
test
mov
stc
mov
es
aaa
repz
mov
inc
cmp
jmp
pop
in
sahf
pop
jg
stos
mov
xor
fdivr
cmp
rorl
push
pusha
or
xor
int3
or
aas
pop
popa
rcrl
mov
fimuls
add
mov
sub
orb
leave
icebp
fnstcw
and
sub
sub
ret
xor
sub
ds
inc
xchg
xchg
ffreep
int
dec
or
int3
cmpsl
mov
mov
test
cmp
jle
adc
in
into
push
daa
adc
scas
cltd
arpl
pop
outsl
cmp
dec
xchg
iret
leave
aad
push
shrl
data16
lds
push
add
ds
fsubl
jg
cmp
les
jp
pop
pushf
lcall
popa
into
xchg
jbe
xor
cmp
incb
dec
sbbb
shrb
mov
push
pop
adc
push
sub
mov
inc
add
cs
scas
pop
aad
pop
cwtl
cmp
mov
push
stos
stc
mov
cld
je
sub
xlat
rorb
scas
insb
in
push
movsb
aam
ds
and
fs
fwait
sahf
mov
adc
xor
mov
and
mov
sub
mov
jg
test
fwait
sti
mov
lret
je
enter
jo
fmull
mov
jmp
push
cmpsb
jo
decl
ljmp
cmp
xchg
aam
rclb
mov
in
add
ja
fsubr
mov
adc
out
jnp
and
add
and
lret
jp
push
shl
push
dec
and
das
push
push
mov
or
dec
in
or
bound
pop
xchg
icebp
out
jae
test
adc
repz
mov
addl
xor
sahf
divb
and
and
mov
popa
lcall
lcall
icebp
xlat
cwtl
fdivr
ds
dec
in
out
test
push
jne
xchg
lahf
hlt
push
sbb
das
add
pop
dec
or
sets
bound
add
dec
andl
dec
push
adc
inc
stos
pop
adc
inc
add
xor
lods
subb
aaa
js
sbb
ljmp
iret
inc
xor
out
cmpsb
pop
adc
mov
mov
mov
push
imul
mov
dec
inc
js
xlat
rolb
movsb
int
mov
test
inc
pop
adc
mov
add
addl
mov
sub
xchg
fistpll
hlt
sub
insl
sbb
mov
cmpsb
pop
jns
mov
leave
loope
std
and
cmp
imul
push
mov
sets
or
jle
dec
push
mov
add
idivl
fst
lods
pop
add
mov
pop
cmp
movsb
jp
pop
mov
stc
mov
popf
cmpsl
test
mov
mov
xor
in
stc
mov
jae
adc
enter
dec
test
mov
hlt
lret
pop
fdivrl
jb
repnz
int
addr16
cmp
push
cmpsl
lds
sbb
and
add
addr16
mov
stos
xchg
shll
push
shl
mov
in
lret
push
aas
pop
clc
sub
push
imul
imulb
xor
popf
dec
and
adcl
scas
cltd
mov
lds
mov
movsl
add
ret
mov
dec
mov
xlat
mov
movsl
cmp
jb
fs
ds
mov
adc
fbstp
push
jle
add
push
jg
cwtl
cmp
in
mov
xchg
add
cld
cmp
pop
aaa
sti
sarl
orl
jb
add
pop
adc
cmpsb
test
and
and
mov
cmp
jge
sub
sbb
test
mov
dec
jae
roll
insl
mov
inc
scas
xchg
mov
push
cmp
ret
outsb
iret
xchg
ljmp
mov
jnp
loop
shl
and
inc
mov
repz
aaa
sbb
add
lcall
pop
push
add
mov
jmp
frstor
and
fwait
loop,pn
dec
movsl
fldenv
aad
fistps
or
mov
inc
addr16
cmp
fnstcw
inc
adc
adc
xchg
xor
aas
sub
mov
mov
movb
push
loop
mov
push
data16
in
les
pop
push
xchg
fisttpl
mov
jecxz
insl
ror
mulb
jne
xchg
dec
out
xchg
imul
inc
jg
std
aas
pop
testb
imul
cmp
je
in
mov
repnz
sbb
scas
popa
xchg
add
sub
add
in
icebp
andb
repnz
clc
or
enter
test
sub
movl
inc
pop
dec
xchg
add
dec
mov
cmp
adc
andl
gs
mov
mov
lahf
xor
mov
sub
ds
divb
mov
cld
pop
cmc
inc
mov
dec
and
test
jno
xor
and
xchg
clc
lahf
rclb
stc
add
ljmp
jmp
arpl
stos
daa
mov
rcll
mov
dec
sahf
inc
loop
movsl
jle
loop
movsl
mov
add
andl
mov
dec
loop
testb
or
pop
xor
add
loope
jecxz
cmp
xchg
xchg
filds
adc
hlt
sub
xor
mov
pop
mov
mov
addr16
imul
fsubl
mov
scas
lea
ds
pop
into
xor
sbb
fucomp
and
mov
jecxz
inc
push
sbb
mov
add
shlb
push
orl
outsl
cmp
add
gs
sub
mov
dec
es
cld
pop
push
bound
jo
iret
jg
push
into
sub
jae
cmp
mov
std
pop
loop
test
xchg
jmp
inc
vmwrite
inc
gs
xor
fnstsw
sbb
test
and
mov
gs
sbb
jne
cltd
pop
mov
fnstenv
mov
ret
and
mov
in
insl
jl
je
xchg
cmp
jae
ljmp
test
lcall
arpl
icebp
or
jge
mov
push
out
test
jno
in
cli
addr16
repz
popa
mov
mov
adc
out
or
imul
and
push
mov
and
out
sahf
mov
shll
mov
mov
in
mov
mov
das
int
sub
jne
or
and
jg
sbb
popa
xchg
inc
jl
ja
sahf
subl
sub
mov
lea
jl
sub
test
lea
mov
sub
jp
jbe
push
leave
mov
out
in
clc
ss
cmpsb
cwtl
adc
add
aaa
popa
imul
out
sub
nop
cwtl
loopne
push
popf
cli
push
adc
movsb
test
scas
cmp
adc
pusha
sub
mov
js
xchg
call
mov
hlt
nop
outsb
inc
push
pushf
jmp
imul
movsl
shrl
movl
sub
sbb
add
test
mov
in
pop
xchg
sti
fwait
cmpsb
fidivs
jl
pop
loopne
pusha
add
inc
bound
shlb
add
scas
mov
test
shr
lods
sbb
pop
scas
ret
or
ret
pop
lods
pop
jbe
shrb
mov
jecxz
xor
push
sbb
fmull
fadds
orb
mov
jae
nop
jnp
cmp
mov
sbb
inc
xchg
jg
adc
push
in
aad
mov
mov
rolb
pusha
in
in
dec
rol
nop
stc
lods
dec
outsb
dec
insl
rcrb
inc
shlb
mov
fcomi
xor
test
push
jne
add
add
push
inc
jnp
xor
mov
imul
notl
int
out
pusha
pushf
jle
mov
dec
mov
into
pextrw
push
jmp
adc
xchg
add
xchg
jns
test
int
xlat
roll
lods
xchg
inc
adc
pushf
lods
mov
rorb
and
cmpsl
cmp
inc
jg
xor
lret
add
mov
pop
test
out
ja
mov
outsl
addl
or
jg
out
jnp
and
adc
lret
lea
sub
ret
dec
jecxz
mov
outsl
mov
xor
mov
pushf
ror
pop
push
mov
outsl
jge
mov
addr16
mov
aas
sahf
push
idiv
flds
xor
in
pop
add
test
cli
stc
outsb
jecxz
ror
cmp
popf
lods
loopne
mov
insb
call
mov
push
dec
cmovne
ss
or
sbb
adc
pop
cmp
lock
popf
dec
scas
js
sarl
pop
sbb
cmp
adc
test
xchg
andl
inc
js
lock
std
bound
pop
mov
jmp
and
leave
ss
or
aad
jmp
xor
xor
sahf
fnsave
js
jle
pop
cmp
ret
iret
jmp
sub
fcmovbe
outsb
frstor
mov
sub
dec
inc
lods
sti
jae
adc
sbb
mov
inc
aas
xor
push
neg
cmp
mov
jg
or
enter
mov
dec
cmpsb
popf
add
jbe
xchg
aam
ds
mov
imul
xor
cmp
data16
clc
lret
loop
scas
insb
shl
push
or
mov
lock
xchg
mov
pushf
push
or
addr16
xor
scas
pop
push
dec
and
or
cmovns
xchg
sti
cld
and
push
jae
repz
inc
adc
in
out
lcall
popa
testb
cmp
imul
or
insl
shrl
gs
in
or
cmpsl
ret
je
add
push
pop
lret
je
sbb
call
inc
xchg
rorb
mov
xchg
das
fwait
in
scas
mov
pop
lock
je
rorl
mov
mov
cmpsb
insl
gs
adc
cmp
push
inc
pusha
mov
sahf
inc
mov
cmp
inc
fimull
or
daa
test
repz
mov
push
fs
lods
adc
jns
or
push
inc
mov
stc
bound
mov
push
ljmp
imul
xchg
mov
aam
lods
hlt
sbb
mov
xchg
cld
inc
sahf
cmpl
in
inc
inc
sub
divb
cwtl
sahf
xor
in
enter
mov
insb
aad
aaa
mov
outsb
pusha
xchg
jne
popa
shlb
xor
or
mov
add
xor
sbb
iret
jge
call
push
jo
xchg
mov
loopne
lahf
cmp
pop
add
popa
mov
shlb
or
inc
pop
stc
mov
fidivl
cmc
adc
lds
xchg
jmp
add
inc
test
mov
loop
push
xchg
jmp
lcall
stos
fwait
or
jbe
fisttps
loope
test
add
cs
mov
out
xor
ret
inc
lds
nop
pop
add
insl
and
push
sbb
cmp
mov
pop
lret
sub
in
inc
in
sub
or
push
dec
push
mov
and
add
test
js
jbe
push
aam
or
call
loop
xchg
int
cmpsb
and
sbb
sub
sub
cmp
sbb
inc
push
cld
into
stos
outsb
cwtl
aas
cmpsl
cmp
repz
scas
pusha
mov
es
ss
aad
inc
mov
les
sub
mov
and
add
dec
push
inc
dec
mov
sub
cs
pushf
ret
enter
lods
into
stos
mov
jnp
das
sahf
cmp
sbb
adc
filds
jo
out
lret
adc
fucomip
lods
jns
scas
xlat
vroundsd
outsb
or
add
cli
xor
jle
mov
jae
jle
push
test
pop
mov
lahf
inc
int
in
pusha
jnp
out
test
or
rep
rol
mov
ljmp
mov
daa
sbb
fwait
push
push
testb
push
xlat
mov
push
std
and
stos
mov
mov
dec
push
sbb
mov
mov
jae
push
insb
outsb
pop
cmp
push
cmp
and
and
xor
repz
xor
xor
pop
pop
sub
and
or
andl
cmc
je
jae
cmpl
sbb
hlt
adc
mov
sbb
sub
xlat
sub
jnp
aaa
outsl
or
packssdw
int3
test
arpl
ss
jp
mov
and
mov
rcll
inc
in
in
mov
das
mov
jb
add
shll
push
inc
cmp
das
cs
sbb
jnp
xor
and
pop
test
lods
rcrb
loop
fmul
stc
cmc
cvtpi2ps
bound
dec
add
jmp
mov
mov
out
jle
sub
xchg
in
lcall
movsl
inc
xchg
scas
fmul
push
cmp
jg
dec
cs
icebp
sub
mov
insb
xchg
into
imul
xchg
inc
cmpsb
sub
pusha
enter
ret
adc
push
sbb
inc
pop
repz
idivb
fld
xor
xchg
in
push
loope
fcoml
ljmp
pop
pop
jmp
and
jl
mov
bound
loope
enter
fsubs
lds
adc
inc
mov
mov
fdivs
push
inc
mov
cs
mov
out
xor
fdivrl
imul
cltd
jmp
mov
lods
jno
lcall
and
sub
push
js
xchg
clc
test
xor
test
xacquire
pop
mov
setns
orl
push
int
or
push
pushf
ret
or
enter
enter
cmp
imul
movsl
mov
movsb
test
outsb
sbb
mov
test
bound
in
inc
add
jl
xchg
in
mov
cmpsl
dec
sub
sbb
dec
data16
xchg
xchg
mov
dec
fsub
out
sahf
ljmp
sub
fcoml
popf
pushf
shld
mov
or
lcall
mov
sbb
std
in
out
pop
loop
int3
inc
ds
mov
imul
rcr
jmp
cs
test
lock
add
jecxz
imul
inc
adc
cmpsl
in
inc
cwtl
xchg
adc
inc
int
test
out
jle
add
sbb
mov
faddp
inc
or
push
adcl
lcall
add
fdivr
repnz
or
jno
cwtl
sub
es
call
cmp
adc
push
incb
add
mov
pop
cmp
jno
test
jno
pop
xrelease
test
mov
rcr
jp
add
xor
xor
pop
or
lds
mov
idivb
sub
xchg
adc
push
dec
push
inc
shll
dec
sub
or
insl
inc
ljmp
imul
subb
pop
xchg
adc
scas
in
lcall
imul
cmpb
pop
mov
mov
lods
cmp
dec
insb
add
mov
xchg
push
outsl
mov
in
rcrb
push
adc
outsl
pusha
in
shlb
es
mov
mov
rolb
outsb
jno
push
mov
outsb
mov
filds
and
mov
cwtl
test
lds
hlt
cmc
rcll
push
adc
pop
dec
dec
es
mov
lods
roll
in
add
insl
jbe
cmp
ss
jp
arpl
lea
das
pop
dec
cltd
dec
pop
mov
sub
mov
dec
inc
and
imul
dec
push
mov
cmpsl
fwait
jmp
inc
and
push
jnp
test
repnz
mov
cmpsl
jp
loopne
test
inc
push
jmp
pop
pop
add
push
inc
jle
fstp
xchg
push
sub
scas
fwait
ret
pop
jnp
aas
mov
inc
leave
pop
mov
das
mov
adc
hlt
lret
sub
mov
lcallw
inc
cmp
lea
xor
lods
mov
pop
cmp
mov
inc
stc
mov
mov
add
aam
jno
cmpsb
xchg
ret
movsb
adc
cli
sub
jnp
or
cmp
adc
xor
dec
cmp
pusha
lds
loop
lods
adc
dec
out
in
add
das
repnz
jecxz
push
fisttpl
and
jno
mov
mov
sub
int3
push
xchg
movsl
repnz
or
fcoml
lock
nop
leave
inc
scas
sahf
lods
test
inc
cmp
add
jo
dec
movsb
stc
and
testl
out
or
dec
mov
stos
sbb
or
adc
hlt
repnz
push
sbb
lods
insb
aas
sti
push
idiv
dec
xchg
cs
cmp
addr16
cmpsl
mov
adc
mov
push
lret
adc
dec
xchg
lcall
out
dec
jns
lret
jmp
pop
xchg
sti
add
sub
fcoms
aad
sub
lock
push
inc
mov
out
pop
es
mov
add
cltd
pushf
cmp
mov
test
pop
mov
cmp
movsb
test
je
loop
xor
int
jg
push
fidivs
les
jmp
inc
repz
mov
pop
cld
div
mov
sbb
out
mulb
out
push
lcall
les
xchg
cmp
xor
insl
imul
add
sbb
push
sahf
arpl
mov
ds
jl
out
mov
mov
fstps
roll
out
in
push
fdivp
push
mov
jecxz
mov
xor
mov
loope
ret
fisttpl
adc
adc
cmpsl
hlt
mov
push
sahf
lret
bound
mov
repnz
pop
mov
push
jge
fstl
neg
push
xor
sub
in
push
pop
jo
aas
cmp
out
stc
xlat
insl
rorl
or
jae
lcall
pop
nop
insb
in
out
pop
scas
fidivl
subb
and
inc
and
outsl
add
sti
dec
arpl
rorb
inc
jl
arpl
lock
lret
stos
pusha
sub
dec
mov
ds
in
mov
jns
xchg
inc
jbe
hlt
sbb
imul
sub
mov
xchg
mov
inc
daa
int3
jno
adc
faddp
out
add
scas
cmp
enter
cmp
cmp
jne
add
mov
adc
mov
pop
js
lods
call
add
sbb
sub
add
inc
negl
pop
idivb
adc
rorb
testl
push
leave
lahf
cmp
mov
inc
mov
bound
push
popa
dec
xchg
mov
xchg
cmp
cs
add
lods
xor
push
jo,pt
stc
cmpsl
pop
lcall
mov
int
js
stos
loop
cltd
iret
icebp
data16
or
pop
sbb
cmp
jb
leave
outsl
jb
mov
mov
les
jmp
sbb
adc
out
nop
aaa
leave
andb
and
adc
aas
inc
sub
ds
xchg
sti
stc
pop
jo
cmpsb
movl
cs
fwait
push
cmpsb
pop
addr16
loope
jge
mov
mov
mov
rclb
inc
mov
dec
or
mov
pop
mov
fists
nop
stc
sub
jecxz
scas
jl
inc
jns
push
hlt
rcll
push
data16
leave
leave
xchg
pop
fdivrs
jb
cmp
push
pop
lea
jge
pop
dec
fs
adc
pop
int
pop
mov
or
mov
fidivl
fmuls
ret
adc
popa
js
lret
fldl
push
cwtl
aas
and
jecxz
jl
subl
andl
fwait
sti
xor
mov
mov
xchg
lds
jae
out
outsl
mov
adc
adc
imul
push
xchg
std
cli
dec
jmp
mov
inc
lahf
fwait
add
pusha
inc
add
adc
push
or
pop
push
stc
dec
gs
pop
dec
scas
je
dec
xchg
xor
adc
push
push
and
aas
sub
push
stc
dec
dec
loope
and
mov
mov
push
add
imul
pop
nop
pop
mov
add
and
rorb
push
lods
adc
incb
fsubrl
pop
das
call
int3
and
stos
shll
xchg
into
pop
nop
stos
out
shll
lahf
outsb
dec
xor
out
mov
test
mov
pop
shll
sub
scas
idivl
xchg
xchg
iret
xlat
lret
js
out
clc
cmp
dec
pop
jle
mulb
inc
insl
std
inc
iret
std
push
jns
repz
inc
mov
lods
add
jmp
cmc
rcl
cwtl
int
lods
or
sbb
iret
icebp
insl
jmp
sbb
jno
rclb
mov
pop
pop
pop
mov
push
inc
repnz
cmpsl
mov
je
rolb
cli
lods
pop
or
pcmpeqb
dec
xor
shl
data16
rcll
movsb
nop
xchg
xchg
sbb
push
or
mov
lret
xchg
inc
lock
lret
fmull
jg
mov
mov
in
jno
les
lods
mov
movsb
call
jb
pop
dec
cmp
cmp
sub
out
outsb
cmp
push
negb
fiadds
fwait
imul
xor
div
mov
daa
adc
test
sub
push
imul
shlb
lret
jbe
aaa
lds
fmuls
mov
or
add
add
pop
out
mov
fstpt
dec
fyl2xp1
jl
movsb
repz
sub
xor
adc
push
jae
and
loope
and
xor
mov
addr16
je,pt
fadds
sbb
dec
mov
mov
loope
mov
aad
sub
xor
pop
insl
lds
mov
jecxz
ror
xchg
mov
sub
stc
adc
and
xchg
mov
inc
dec
push
dec
sbb
test
roll
movsb
sub
sub
dec
sarb
cmp
adc
and
cmp
aas
call
fldcw
pop
js
mov
mov
outsl
jbe
ficoms
into
lods
fs
aam
jp
rcr
fwait
inc
rcrl
sub
add
imul
fcmovnbe
and
lret
sbb
add
aas
cmpsb
shl
jb
in
ret
decl
lret
mov
ljmp
or
enter
inc
in
pop
xchg
add
cmpsb
pop
das
mov
mov
xchg
or
cmp
ficoml
pop
cmpsl
xlat
pop
rorl
out
mov
daa
test
imul
push
cmp
xor
push
loop
movsl
cmp
jno
push
mov
and
push
mov
mov
mov
cmpb
adc
mov
mov
mov
sbb
cmp
aas
jl
sarl
inc
mov
popa
dec
subl
repnz
push
clc
mov
mov
enter
add
inc
jbe
jge
sub
in
gs
shr
mov
hlt
andl
aas
mov
les
arpl
dec
add
cmp
mov
lds
add
pop
rcrl
xchg
jbe
adc
pop
push
mov
xor
xchg
lods
popa
xor
inc
cs
insb
sbb
cmp
mov
mov
mov
jbe
push
mov
fidivrs
test
mov
fadds
push
mov
outsb
stc
xchg
jo
push
xchg
test
into
pushf
xor
mov
inc
adc
mov
pop
add
xor
pop
in
cmp
fbstp
or
daa
inc
call
and
mov
enter
out
sub
fistpll
rol
and
orb
sbb
mov
fdivs
dec
jg
jns
and
jns
add
je
xor
imul
in
mov
aas
mov
mov
enter
lock
push
push
loope
ja
inc
rcrb
repz
mov
movsl
mov
dec
pop
push
insb
jns
test
shrl
clc
negl
mov
jecxz
mov
push
and
jns
add
data16
ja
push
loopne
outsb
mov
or
popl
imul
jecxz
xchg
clc
orl
popf
inc
dec
and
psubusb
popa
or
inc
sarl
ret
push
ret
adc
daa
cli
mov
daa
jae
xchg
nop
adc
sbb
test
mov
adc
icebp
inc
hlt
cli
mov
arpl
shlb
rcrb
mov
xor
in
inc
pop
loopne
jno
insl
cwtl
adc
punpcklbw
add
hlt
push
lcall
outsl
ss
dec
push
xor
push
adc
or
or
ret
orl
insl
inc
xchg
mov
mov
pop
scas
cmp
icebp
cmpsb
sbb
inc
and
push
outsl
ss
cmp
dec
iret
testl
clc
into
fisttpl
inc
test
and
or
xchg
mov
push
sub
pop
test
adc
mov
scas
shll
out
cmp
notb
mov
and
out
pop
jg
into
or
sub
cs
fidivs
sbbl
xchg
or
movsb
clc
pop
daa
inc
cmpsl
clc
cli
sbb
rcl
jnp
into
inc
sub
movsb
sti
sahf
jg
adc
out
add
xchg
pop
jl
je
and
shll
mov
add
cmp
cmp
or
and
xchg
std
addl
xchg
fmulp
cmpsb
scas
test
mov
pop
fcoms
jl
pusha
out
in
int3
std
xchg
mov
jecxz
add
outsb
mov
sarb
adcl
mov
fwait
insl
arpl
mov
jle
and
test
cltd
mov
fmulp
sbb
add
push
xor
in
ret
mov
repnz
out
and
sub
cmpsl
jl
cmp
adc
adc
inc
test
xor
mov
push
ja
sub
xorb
sbb
ror
icebp
pop
mov
adcb
into
or
outsb
add
and
out
push
aaa
lock
neg
nop
push
xor
pop
xor
lea
enter
mov
fisubl
inc
scas
inc
or
dec
adcl
pop
divl
xor
mov
fwait
loop
jbe
cmp
and
leave
or
cmpsl
nop
ficomps
cmc
cmp
inc
addr16
pop
fstpt
cmp
sbb
daa
lret
loopne
adc
sbb
adc
lcall
icebp
xor
push
lods
arpl
int3
mov
mov
aam
enter
das
sahf
in
mov
push
xchg
adc
dec
mov
cmp
add
aad
push
or
xchg
inc
jecxz
add
push
xchg
inc
loopne
cmpsb
pushf
adc
and
mov
pushf
mull
push
fidivs
into
jge
push
jmp
or
mov
icebp
fldt
mov
lods
dec
lret
cwtl
pop
mov
sub
cmpsl
sbb
xchg
mov
jns
mov
adc
add
push
aad
popf
aaa
jo
inc
jge
pop
cmp
pop
and
je
or
addr16
xor
sub
or
fst
dec
mov
mov
cmp
xchg
add
xchg
lea
je
ss
cmpsb
or
sahf
int3
mov
dec
aad
outsl
out
pop
lds
jmp
cmp
jo
xchg
pushf
sbb
aaa
data16
call
mov
into
xchg
pop
pop
repz
dec
insl
mov
mov
cltd
in
adcl
pop
pop
inc
push
dec
sub
inc
mov
dec
dec
call
ja
popa
or
and
ljmp
or
jae
mov
xchg
add
outsb
fstps
fidivrl
or
aaa
fcos
fldt
cmp
adc
sub
movb
incl
ficompl
sub
mov
push
aad
sarl
dec
mov
cmp
orb
sti
jae
test
sti
rorl
or
popf
adc
jae
pop
sub
lods
cmp
xchg
insl
lea
inc
lcall
movsl
sbb
sbb
nop
xor
loopne
mov
xchg
mov
icebp
inc
gs
lds
mov
mov
ja
adc
pop
ja
jns
lds
ljmp
mov
sbb
dec
addr16
mov
cmp
repnz
call
subb
fwait
sarb
int3
stos
inc
ljmp
movsl
sub
jmp
popf
xor
or
or
movups
cmpl
fldcw
sub
popf
xlat
inc
pop
test
jnp
mov
loop
jg
pop
arpl
push
addr16
dec
and
mov
push
les
pusha
in
movsb
idivb
dec
push
push
stos
stos
and
cli
int3
xchg
mov
dec
mov
and
out
xchg
jmp
lcall
movsl
mov
cmp
lahf
mov
mov
fidivrl
or
mov
jbe
mull
adc
gs
or
dec
dec
fildll
add
mov
mov
les
sub
test
popf
cmp
sbb
add
xor
mov
cmc
jg
shll
les
xor
lret
movsb
add
add
jmp
orl
adc
test
pop
repz
nop
lea
mov
mul
jmp
cmpsl
mov
jbe
push
aaa
pop
push
aad
test
mov
xlat
fiadds
cmp
cmp
cld
push
lea
or
std
mov
dec
in
adc
and
and
pop
sbb
sbb
dec
clc
push
imul
xor
dec
rcrb
js
mov
jg
add
xchg
testb
adc
movsb
cmpsl
pop
sub
jbe
and
lock
cmpsb
mov
pop
sbb
adcb
arpl
adc
mov
sbb
mov
rorl
xchg
cmpsl
aas
mov
aas
out
inc
mov
imul
lea
clc
mov
sub
mov
lock
inc
pop
mulb
hlt
fisttpll
ret
xor
lods
sbb
insl
out
xorb
jns
mov
xor
add
int3
mov
mov
stc
pop
sbb
arpl
mov
stos
out
dec
sub
daa
dec
pop
fldl
rorl
xor
jb
sti
into
sbb
popl
push
mov
adc
mov
sub
push
cli
adc
sbb
sub
mov
adc
or
int
dec
popa
inc
std
xor
dec
mov
sbbb
cld
jno
inc
lock
mov
sub
in
sbb
rol
loop
lcall
in
mov
xor
nop
test
out
jo
sarb
xchg
fdivrs
lcall
pop
ja
mov
ljmp
cmp
xor
sbbb
cmp
lods
in
pusha
scas
and
push
sti
and
push
loopne
imul
outsb
mov
xor
shl
and
aad
aam
enter
or
and
bound
sbb
mov
sbb
leave
fs
push
cmp
jg
mov
dec
mov
push
and
iret
adc
mov
scas
lods
daa
xor
stos
dec
mov
jae
inc
lods
call
aas
cmp
out
mov
xchg
sbb
push
out
fnstenv
push
scas
add
cmp
imul
push
and
ret
int
fcomp
cmp
mov
outsb
mov
or
adc
sahf
sub
aas
loopnew
xor
push
adc
rcrl
sbb
sbb
xor
dec
sub
nop
xlat
mov
cwtl
mov
inc
push
aas
jnp
mov
rcl
mov
jnp
fiadds
clc
popa
ss
or
ret
inc
jg
sbb
add
push
mov
lret
shr
inc
aaa
gs
out
lahf
or
xor
sbb
jmp
xchg
push
imul
sbb
xor
jae
fwait
jle
mov
xchg
xchg
cmp
sti
cmpsb
xchg
int3
push
scas
and
in
cli
xchg
xchg
sub
aaa
mov
dec
dec
popf
movsb
push
or
stc
mov
jno
cld
push
pop
lods
insl
and
lcall
scas
loope
cltd
ss
loopne
pop
jbe
mov
add
lahf
xchg
scas
pop
dec
test
dec
ret
adc
mov
jb
fisubrs
cmp
fdivrs
cltd
pop
sbb
dec
xchg
shrl
xchg
popf
in
mov
adc
and
sub
loop
mov
dec
movsl
repz
fdivrs
pop
xchg
push
in
bound
std
fdivrl
mov
pop
cwtl
mov
xor
add
dec
xorb
mov
or
pop
dec
push
inc
sarb
or
adc
pop
adc
push
xor
aad
adc
push
cs
aaa
outsb
cld
push
aam
cwtl
mov
out
gs
aam
test
loopne
lcall
inc
in
inc
lods
out
fstl
jge
pop
lret
jmp
jnp
mov
dec
shll
mov
mov
lds
jns
mov
fisubs
mov
inc
pop
mov
and
les
stc
hlt
divps
mov
out
and
imul
cmp
add
sub
fcmovnu
mov
lods
jp
mov
popf
lret
add
in
mov
pop
add
xorb
aad
xor
add
cmp
mov
cli
mov
aad
dec
movsl
pop
cmpsb
out
daa
js,pn
mov
mov
out
in
bound
mov
mov
add
sub
mov
loopne
mov
in
and
popa
add
pop
data16
mov
loope
jge
sahf
inc
inc
add
mov
mov
negl
cmp
xchg
pop
xchg
mov
insb
notl
sbb
and
dec
in
cli
inc
xor
mov
jns
in
scas
fiadds
test
xchg
aad
push
sbb
shlb
sub
sbb
push
xchg
lods
rclb
sbb
mov
sub
das
insb
stos
xchg
mov
push
xor
outsb
xchg
xlat
lock
and
clc
push
mov
pop
loope
repz
mov
rclb
and
and
mov
pusha
fiaddl
ljmp
imul
jae
inc
mov
adc
inc
adc
or
shrl
jb
loopne
adc
push
aas
or
sbbl
adc
out
xchg
je
and
cmp
addr16
sbb
jle
and
push
cli
push
sar
pop
cmpsb
push
loop
addl
sbb
or
mov
jg
jo
rcrl
mov
dec
and
pop
js
pop
fwait
aas
fdivrl
in
mov
sbb
ja
dec
iret
loop
rorl
hlt
jg
in
mov
mov
dec
cmp
and
nop
repnz
push
adc
enter
ror
pop
cmp
pop
adc
push
inc
ficoml
adc
push
mov
cltd
leave
inc
pushf
add
inc
fistpll
outsb
lds
jle
mov
dec
xlat
or
out
adc
popa
mov
xchg
std
adcb
pop
in
in
stos
push
loopne
mov
inc
mov
out
cmp
add
cltd
jb
push
sbb
mov
sbb
stos
jae
adc
inc
sahf
push
das
stos
arpl
test
repnz
sarb
xchg
or
mov
or
inc
clc
loope
pop
scas
jl
adcb
or
rclb
pop
pop
loope
insb
pop
stc
out
fistpl
lods
pop
insb
or
dec
cmp
dec
pop
scas
xor
adc
jmp
add
out
jno
in
sub
adc
mov
dec
push
sbb
pop
xchg
xor
addr16
int3
ja
pusha
gs
std
xlat
cs
sub
add
sub
and
mov
mov
pop
push
cltd
fsts
sbb
iret
or
outsb
notl
or
pop
inc
ret
xchg
add
mov
xchg
ja
or
int3
js
mov
arpl
gs
mov
push
aad
adc
lods
xchg
pop
fcomps
aaa
pop
pop
outsb
test
and
movsl
xchg
xor
add
pop
cltd
mov
xlat
and
mov
adc
xor
and
and
xchg
adc
xchg
icebp
sbb
mov
and
pop
dec
inc
popa
or
imulb
push
repz
mov
inc
loope,pn
aad
cmpsb
xchg
mov
sti
sbb
ja
sub
fstl
pop
jne
cmp
std
fidivrs
loope
fcompl
cmp
push
imul
mov
cmpsb
fstps
xlat
and
ret
mov
adc
movsl
pop
pop
mov
mov
sub
stc
int
popa
dec
test
dec
adc
xor
sub
inc
sub
test
adc
loopne
out
mov
hlt
test
popa
pop
jp
add
dec
mov
lcall
push
enter
mov
push
and
into
ss
daa
mov
and
pusha
bnd
mov
call
xchg
stos
int
fcoml
and
fnstcw
dec
jge
pop
push
cli
cltd
jnp
mov
and
jns
out
add
cmc
stos
in
dec
test
or
stos
pop
xchg
loope
sti
lahf
dec
pusha
pop
ja
or
rcr
dec
mov
mov
mov
xchg
movsl
aaa
and
add
push
sbb
sbb
in
xlat
jo
pop
push
push
sub
mov
sbb
stos
ret
ficompl
inc
push
mov
jno
push
jle
xchg
push
dec
mov
push
add
fbld
mov
mov
mov
in
sbb
clc
pop
lods
out
mov
push
imul
sahf
lods
notl
push
push
sub
mov
sarl
xor
dec
aam
dec
add
cli
sbb
stos
out
mov
push
movsl
or
jle
xor
pop
loop
fmuls
scas
int3
mov
ud2
movsb
gs
inc
cmp
push
imulb
pusha
and
cmp
mull
jmp
sub
mov
jmp
mov
xorl
insl
pop
inc
fcompl
stos
add
adc
adc
inc
dec
xchg
nop
xor
aad
mov
or
ja
mov
gs
sbb
mov
add
mov
or
lahf
in
or
jns
call
hlt
adc
icebp
and
xchg
lahf
jp
jge
sub
loope
pop
mov
dec
and
and
aaa
aad
add
mov
es
testl
insb
cmp
repnz
cwtl
mov
inc
int
jbe
xor
in
cs
mov
stos
das
movsb
xchg
adc
add
mov
jge
push
and
jbe
cmpsl
adc
mov
inc
push
jnp
jne
ds
mov
js
out
gs
into
xor
dec
or
scas
xchg
mov
into
xchg
aaa
jge
out
adc
lea
and
mov
sbbl
push
push
xlat
xchg
add
fs
xchg
mov
lcall
mov
int3
jae
push
xchg
sahf
ss
or
jmp
add
push
sbb
cmp
push
ds
js
add
dec
xchg
fidivl
rol
mov
add
inc
cmpsl
cli
xlat
and
mov
mov
mov
cs
push
call
or
or
std
loope
mov
dec
rcrb
mov
xchg
pop
mov
inc
inc
lock
mov
dec
inc
aaa
pop
cli
stos
push
xchg
imul
push
daa
cli
sti
test
ficoms
inc
cmpsl
jecxz
lret
ficomps
filds
adc
add
cmpsl
int
inc
orl
jle
jae
push
pop
jns
lock
pusha
loope
lret
cld
ret
bound
movsl
shl
rorl
aad
lods
mov
hlt
jae
dec
imul
mov
mov
jo
adc
popa
pop
jle
push
inc
fstp
leave
pop
outsl
faddp
and
leave
sub
shrl
popa
lahf
in
push
or
ss
or
stos
leave
repnz
and
push
nop
jl
inc
adc
add
test
xchg
roll
das
mov
push
and
jns
mov
mov
push
and
xlat
orl
dec
aas
xchg
mov
sub
loopne
xchg
pop
pop
ffreep
shrl
dec
add
add
enter
ret
rcrl
lea
loop
cmpsl
and
cltd
andb
cmc
sub
xor
fdivs
mov
cld
dec
aaa
inc
add
mov
repnz
out
ljmp
test
jnp
sbb
fistl
xchg
or
sbb
or
jge
lock
es
jo
and
inc
xchg
ds
xchg
cmp
movsb
stos
lds
jg
push
sub
cmp
push
jne
sti
dec
pop
cwtl
sbb
push
dec
ljmp
movl
lods
push
fnstsw
aas
push
cmp
pop
cmp
fnstcw
jae
fnsave
vpshlb
movsl
and
ficoml
adc
insl
cmpsb
clc
pop
mov
and
call
pop
and
jns
mov
dec
push
gs
sub
mov
or
out
cmp
fisubs
ljmp
repnz
cmpsb
jnp
push
dec
xor
xor
cmpsb
in
inc
mov
data16
roll
and
movsl
int
inc
subb
push
xchg
aad
or
sbb
mov
push
mov
and
sbb
pop
dec
jo
icebp
mov
mov
data16
pushf
roll
and
mov
cmp
jecxz
outsl
addr16
and
cmpsl
sti
lret
cli
lds
cmp
cltd
adc
arpl
mov
push
dec
cmc
xchg
jecxz
dec
push
jnp
push
adc
out
testb
mov
xchg
dec
jg
mov
push
outsb
push
xor
inc
sbb
inc
sbb
mov
xchg
push
and
inc
mov
out
mov
outsb
data16
mov
int3
and
inc
inc
cmp
and
push
xchg
mov
pop
mov
pop
jp
mov
mov
mov
inc
mov
data16
sbb
push
cmp
es
hlt
ja
subb
inc
mov
sarb
mov
xchg
push
inc
cli
mov
sub
mov
push
xchg
push
add
fnsave
jns
mov
daa
cmpsl
movsb
ja
add
jno
jbe
rcrl
pop
jns
push
mov
push
jb
stc
das
sahf
dec
mov
data16
mov
mov
aad
fildll
cli
jo
and
arpl
int
mov
push
mov
pusha
sub
push
arpl
pushf
imul
cmpsl
adcb
notb
pop
dec
cltd
ret
lods
into
enter
dec
jno
cwtl
testl
push
mov
icebp
xor
dec
jns
jno
adc
sub
repz
ja
dec
and
fdivr
rclb
shlb
and
or
push
xchg
xchg
sarb
xchg
xchg
es
nop
cwtl
bound
pop
pop
js
cmp
inc
stc
jb
int
int
sub
fnstcw
outsl
push
aam
repz
xorl
in
pop
ljmp
cmpsl
and
icebp
and
outsb
imul
inc
insb
shlb
roll
pop
push
cli
mov
pop
fisttps
fsubrs
cmp
lods
mov
cld
repnz
jle
sbb
push
push
shlb
adc
dec
dec
push
dec
xchg
sub
cld
sbb
in
add
dec
mov
push
in
in
and
or
sbb
dec
add
stc
add
les
jnp
sbb
xchg
sub
and
sbb
sub
sarb
dec
cmc
mov
sahf
ja
sbb
or
dec
mov
xchg
or
or
push
xor
clc
or
ret
fnstsw
bound
rclb
mov
and
aad
dec
fs
int
inc
test
in
arpl
adc
shr
loope
cmp
pop
pop
adc
mov
mov
mov
test
outsl
sub
dec
hlt
leave
mov
push
ja
std
shl
in
shrl
push
andb
adc
pop
dec
cwtl
cmpsb
add
cli
mov
loop
mov
sti
test
outsl
push
mov
mov
insb
cmp
icebp
or
cmp
xchg
push
outsb
push
aam
in
ret
or
push
jge
jl
inc
and
mov
push
cmc
lock
adc
ret
aad
jp
fistpl
cmp
es
sub
in
mov
sbb
loop
fisttps
imulb
push
jb
jmp
dec
push
test
cli
int
shll
sub
repz
addr16
add
pushf
aam
int
pop
push
jnp
orl
add
xlat
sbb
ror
enter
insb
mov
mov
or
pusha
dec
pop
stc
ljmp
int
xor
fbstp
loope
or
daa
mov
dec
aas
out
stos
nop
cmpsb
mov
sbb
xchg
xchg
daa
loopne
sub
enter
sbb
lods
mov
out
sub
stc
pop
dec
jp
das
std
repnz
fdivrp
loop
pop
xchg
xor
outsl
sub
ret
jl
aas
daa
test
insl
cld
jo
push
pop
lods
xchg
int3
jg
dec
jo
shl
jnp
cwtl
push
mov
inc
cmp
jge
sahf
stos
dec
out
sub
mov
xchg
mov
subl
jg
fsubrl
and
sub
cli
punpckhdq
push
xchg
ret
push
cwtl
adc
pushf
jb
inc
insb
xlat
fisttpll
inc
lods
int3
fisubrs
mov
pmaxsw
sbb
enter
es
or
subb
sbb
insl
in
push
sub
add
lods
mov
inc
add
in
xchg
fisttpll
fmull
rolb
push
lods
out
push
arpl
hlt
pop
mul
or
mov
jg
icebp
testl
jno
jge
bound
xchg
push
enter
mov
es
mov
jb
pop
mov
leave
call
xchg
mov
and
pop
rcll
adc
mov
xchg
es
lds
lock
sub
les
push
or
out
dec
cmp
imulb
mov
loopne
ret
aam
insb
jbe
inc
jno
rcll
sbb
xchg
shrl
in
adc
inc
fdivr
mov
orb
mov
xlat
or
or
mov
subl
icebp
jg
lret
sti
mov
mov
or
fcomp
or
sbb
mov
mov
shl
push
mov
cli
stos
pop
bound
fstpt
push
mov
bound
repz
jb
std
inc
jo
jle
insw
cmp
out
xchg
push
insl
dec
mov
flds
jg
mov
xorb
push
clc
jp
jb
mov
and
dec
or
mov
out
sub
rorl
mov
push
ljmp
addr16
jo
xor
xor
sbb
cld
stos
movsl
out
shr
jo
push
cwtl
popf
push
loop
fisubrl
jp
mov
clc
shlb
sub
insl
and
sbb
clc
sbb
push
je
mov
ds
rcrb
xchg
lods
int
sub
sbb
ficoms
and
aas
test
mov
jnp
dec
mov
shl
cmc
jecxz
inc
mov
into
mov
xor
fidivl
or
mov
sub
test
dec
movsl
mov
mov
mov
and
lea
mov
enter
fprem
pop
loop
jo
mov
clc
mov
js
gs
scas
leave
mov
jno
int
and
xor
in
inc
cltd
or
inc
in
out
mov
adc
popaw
dec
std
subl
and
dec
xchg
test
adc
aam
loopne
scas
outsl
sbb
cmp
mov
dec
xchg
push
addb
jb
dec
add
mov
pop
jg
outsb
jb
xor
fcoms
test
inc
xchg
cmpsb
push
xlat
in
inc
out
lret
es
lret
aaa
mov
xchg
gs
xor
mov
scas
stos
ljmp
lods
enter
dec
in
mov
or
das
mov
insl
xchg
mov
mulb
jne
jmp
das
fs
mov
inc
push
ja
ljmp
lds
ret
xchg
jecxz
repnz
xchg
xor
cmpsb
xor
imul
notl
pop
add
sbb
inc
mov
dec
int3
ds
into
mov
in
cmpsl
and
andb
dec
jp
cs
adc
push
rolb
pop
pop
mov
sub
lods
mov
ss
cmpsb
add
and
int3
dec
add
dec
xor
xor
insb
push
imul
mov
mov
out
test
mov
mov
mov
or
mov
cwtl
fs
xchg
and
int3
push
lahf
in
repnz
push
cmp
jne
mov
dec
or
mov
push
push
jbe
push
jno
nop
mov
sarl
cltd
jne
aad
push
sub
cmp
and
cmp
push
test
icebp
adc
mov
bound
rcrb
push
cmpsb
imul
repnz
xchg
jno
stos
dec
fistpl
jge
sbb
mov
cmp
adc
js
lea
repz
adcb
lds
xor
pop
cmp
dec
addr16
push
int
gs
adc
outsb
cld
sbb
inc
mov
pop
mov
lods
rclb
xchg
pop
sbb
out
mov
pop
lret
push
and
scas
add
jg
rcr
jae
clc
cmp
in
scas
aas
lret
push
lock
inc
push
gs
out
leave
xchg
mov
cmp
xchg
rol
push
fbld
sub
aad
xchg
pop
mov
repnz
push
aaa
push
lret
push
jge
inc
pop
push
leavew
js
push
fiaddl
add
nop
enter
adc
dec
cwtl
stos
mov
outsb
sub
push
add
dec
cmp
mov
mov
xchg
xchg
mov
out
and
mov
outsl
sbb
or
fcomps
mov
push
mov
mov
adc
pop
loope
mov
mov
and
pop
cmp
pop
fs
data16
xor
xchg
stos
je
cli
sbb
inc
xor
ffreep
dec
pop
icebp
jl
sbb
mov
outsb
nop
mov
sub
add
test
mov
mov
call
jg
or
lcall
mov
aaa
jecxz
lods
hlt
push
lea
and
push
pushf
push
repz
movsb
cs
inc
pop
xchg
fwait
cmp
pop
jle
loop
xchg
pop
pop
scas
dec
mov
mov
aaa
add
and
cmpsb
scas
pop
xchg
jg
sbb
lods
xor
cmp
sbb
shrb
int
add
arpl
mov
pop
cld
jmp
push
retw
pushf
out
int
aad
xor
or
dec
jle
xchg
pop
and
int3
fisubl
push
fistpl
jne
mov
repnz
aas
sub
loopne
dec
ficompl
jo
fdivrl
xchg
ret
hlt
fisubs
les
enter
mov
inc
cmp
rcl
sbbl
notl
pop
mov
or
in
push
icebp
adc
sti
test
ljmp
and
xor
sarb
xchg
adc
daa
cmp
and
xchg
and
in
cmp
insb
pop
xor
daa
jmp
mov
sub
or
xor
and
jae
push
or
mov
mov
cmp
fnstsw
in
ret
xchg
mov
inc
xlat
in
nop
mov
out
je
pop
sub
and
fdivl
xchg
js
add
adc
lea
enter
mov
xor
sub
hlt
or
dec
cmp
inc
testb
out
gs
hlt
push
mov
mov
sbb
or
xchg
mov
ljmp
mov
dec
pop
mov
hlt
sahf
lods
mov
xor
add
and
xchg
icebp
sub
jno
sti
jne
lea
shr
mov
fbstp
cmpsb
imul
sub
mov
dec
fs
mov
cmp
dec
jge
sti
xchg
mov
mov
sub
adc
and
shrb
push
lea
mov
inc
and
xchg
xor
ffreep
and
lret
js
repz
daa
fsubrl
sbb
mov
push
orl
rolb
jle
shr
xlat
popa
dec
arpl
leave
sub
sahf
daa
and
fsts
xor
insl
fbld
sbb
fadd
sub
ret
icebp
pop
lret
inc
cmc
in
xchg
mov
xor
movsb
stos
push
pop
cmpl
sub
lahf
sbb
and
in
and
je
rorl
mov
mov
ud2
cmpsb
lods
ret
into
pop
stc
add
shlb
add
clc
jb
cwtl
fxsave
or
add
ds
flds
xlat
mov
or
pop
sub
cmp
adc
popa
xor
mov
jb
or
scas
inc
aaa
and
jge
and
out
das
add
xlat
mov
jnp
pop
mov
jge
shlb
cld
xchg
jae
out
mov
outsb
jo
cmpsb
shl
jo
inc
mov
jp
insl
pop
push
enter
test
in
xor
push
mov
ss
fsubrl
push
dec
mov
pop
adc
jge
mov
ja
mov
hlt
mov
lahf
fwait
ret
or
push
jns
jnp
xchg
and
cli
ss
aas
das
dec
out
or
into
fisttpll
ds
sbb
mov
jnp
imul
dec
xor
leave
cmp
inc
stos
pop
fadd
idivl
andb
out
clc
testb
out
jecxz
icebp
inc
xor
mov
outsl
cmp
xchg
cmp
pushf
xchg
inc
jmp
ljmp
sub
mov
cld
pop
lods
xchg
or
out
inc
add
pop
in
jge
int
or
test
push
and
lea
pop
enter
ljmp
lods
out
dec
inc
pop
arpl
cmpsb
mov
nop
fwait
xchg
mov
jns
std
je
js
popa
pop
out
adc
sbb
jno
xchg
xchg
repz
out
lcall
test
xor
std
fs
sub
mov
jo
popa
fs
loope
sbb
adc
sbb
inc
mov
pusha
adc
rclb
aas
out
das
inc
addb
dec
test
clc
xor
sub
into
xchg
loop
xor
and
int
aam
cmp
inc
adc
fcompl
cmp
je
and
and
loope
in
push
sub
and
mov
cmpsl
in
lret
shlb
cmp
mov
mov
cpuid
lcall
sbb
es
movsb
mov
inc
loopne
mov
outsb
sub
cmpb
je
enter
mov
or
add
mov
int
lcall
xchg
loop
mov
inc
iret
jne
je
and
sbb
push
sub
and
rorb
sbb
mov
xchg
cmc
mov
bound
out
scas
int
sbb
rclb
orb
out
push
mov
jecxz
scas
sbb
scas
ljmp
xchg
inc
pop
out
ljmp
ficomps
pushf
jl
mov
into
jmp
inc
xchg
xchg
imul
sub
and
testl
lds
xchg
mov
pushf
mov
sbb
rcr
mov
out
into
bound
pusha
adcb
lret
jns
inc
inc
mov
cltd
adc
inc
test
imul
jle
fcompp
mov
cmp
dec
call
iret
pop
jnp
iret
arpl
incl
inc
cmpsl
loope
and
jbe
lahf
leave
aam
push
js
jnp
xorl
xchg
dec
xchg
gs
fstpt
push
cmp
add
roll
outsl
mov
mov
lods
adc
jo
cmp
fisubl
xchg
insb
pmaddwd
mov
or
cs
push
xor
mov
std
pushf
enter
imul
stos
inc
push
aad
inc
mov
push
ficoml
in
roll
xchg
fs
xor
or
or
stos
lret
movntq
add
addr16
inc
adc
or
jmp
mov
mov
xlat
dec
cmp
jnp
fistpll
pop
sbb
mov
inc
jle
sarl
cmc
test
jecxz
lods
bound
int
out
cld
cli
or
jge
scas
jnp
lds
ds
push
sub
dec
push
mov
dec
test
push
shrl
mov
push
aaa
push
mov
xchg
sbb
sbb
ds
xchg
adcl
popa
sbb
mov
inc
mov
push
xchg
fdivr
or
mov
xor
push
sahf
cmp
jb
mov
and
mov
lcall
lret
pop
int3
jns
out
outsb
loop
sub
mov
add
movsb
sub
insb
jp
in
ds
sbb
jg
icebp
sbb
inc
pop
xchg
jno
xchg
fdiv
ror
xor
adcl
and
leave
dec
loope
mov
fldt
xor
xor
xlat
mov
jne
das
adc
dec
push
lahf
and
aas
addr16
xchg
cmp
decb
sahf
pop
ret
mov
js
ss
clc
lret
add
adc
adc
sbb
repz
imul
pop
outsl
test
leave
es
add
iret
add
cmpl
xchg
xor
fnstcw
sbb
sbb
pushf
fbstp
test
sub
pop
test
sub
adc
jae
inc
lock
nop
lods
insl
and
xchg
loope
cwtl
loopne
roll
xchg
pop
clc
sarl
fnsave
rolb
lods
jno,pt
mov
mov
flds
dec
popa
ss
xor
cmp
mov
sbb
addr16
add
jp
push
mov
inc
jg
xor
jb
cmp
pop
frstor
pushf
xorl
mov
cmp
fsubrl
popf
mov
je
das
aas
add
test
push
pop
jae
push
xchg
xchg
mov
iret
mov
xor
sbbb
push
mov
or
or
mov
repz
sub
arpl
sub
inc
sbbl
jnp
add
jmp
pop
mov
mov
and
mov
mov
xlat
mov
addr16
in
iret
mov
dec
and
and
xchg
jns
movsl
pop
outsb
or
fwait
aam
and
xchg
xchg
push
movsb
push
orl
js
adc
inc
mov
outsl
dec
loopne
cmp
mov
jnp
xor
js
jl
fnstsw
call
push
xchg
inc
lea
arpl
pop
dec
es
ds
pop
addr16
sub
jmp
ljmp
rcll
ret
sub
scas
daa
pop
push
xchg
jg
inc
sbb
ret
inc
jo
mov
test
xchg
lret
pop
inc
jecxz
xor
mov
jecxz
imul
jle
rcrl
movsb
sahf
xlat
shl
pop
jae
xor
imul
int
mov
rcr
es
ret
add
push
pop
daa
and
cmpl
and
in
cltd
inc
xchg
adc
fdivr
mov
inc
jae
and
cwtl
int
pop
jns
jge
sub
jbe
or
outsb
xchg
adcl
inc
push
mov
fisubl
scas
iret
and
std
dec
mov
stc
pop
cmp
repnz
lret
out
inc
pop
push
mov
repz
pop
cmp
push
adc
addr16
icebp
aas
jno
push
rcr
test
iret
cmp
int3
jmp
sbb
lods
sub
push
lods
xor
push
mov
add
jge
lea
lods
jns
mov
xor
insb
jbe
rolb
sbb
and
ret
push
push
push
xor
orb
stos
pop
and
mov
das
sbbb
jmp
daa
cmp
bnd
inc
in
mov
sub
test
jp
clc
nop
incl
or
inc
es
xchg
fcoml
adc
push
and
dec
mov
pop
mov
inc
enter
mov
daa
out
push
mov
testb
dec
dec
test
mov
xor
fnsave
sbb
cmp
push
test
adc
into
dec
jp
xchg
icebp
xchg
xchg
sti
mov
or
adc
sub
or
call
pusha
jb
ficomps
les
in
mov
push
adc
insb
popa
mov
dec
lret
mov
fdivrl
push
jmp
pop
jge
scas
ficomps
lret
push
pop
push
xchg
mov
out
xor
xor
jnp
adc
mov
arpl
mov
test
or
mov
leave
and
dec
cmc
mov
jno
jmp
aas
inc
mov
movsl
fistpl
sub
dec
xlat
or
nop
mov
fldl
jnp
sti
popf
addr16
jecxz
fistpll
out
sbb
mov
jns
sub
popf
pop
out
in
inc
jl
inc
incb
push
jb
test
ja
xor
mov
call
in
movsl
test
popa
xchg
or
xchg
xchg
test
in
jle
xor
dec
imul
and
daa
cmp
fwait
es
mov
fcompl
in
push
sbb
jno
js
or
hlt
adc
mov
stos
mov
mov
inc
pop
inc
test
push
mov
insb
ja
pop
lods
pop
fwait
jmp
adcb
test
sub
scas
mov
sub
xchg
jle
sbbl
cmc
pop
dec
out
filds
dec
movl
rcrb
out
stc
roll
cld
push
jg
mov
or
inc
lcall
add
imul
loop
mov
fstp
adc
sub
fwait
pop
cmp
cmp
insb
dec
int
inc
fcmovnb
out
adc
ds
ret
loopne
dec
push
getsec
insl
adc
mov
jmp
divl
mov
dec
testw
xor
or
in
jg
push
fstpl
rcll
xor
in
xor
adc
mov
data16
stos
jne
or
jecxz
jmp
or
mov
loop
inc
and
mov
sbb
sub
xor
cmp
dec
mov
mov
stos
clc
pop
sub
outsb
pop
push
pushf
inc
stos
mov
cs
js
test
xor
test
test
cld
fists
xor
adc
fwait
jno
push
xor
insl
sbb
xchg
push
es
fstl
subl
popa
aam
sub
jnp
inc
jbe
adc
or
fcoms
xor
ljmp
in
dec
fimuls
or
mov
stos
out
mov
pop
sub
sbb
cmpsl
add
cmpl
subl
repz
cmp
jns
jne
ljmp
in
xor
fidivrl
inc
mov
or
sbb
stc
lcall
ret
adc
jge
mov
jp
pop
fcmovnb
and
repz
rorb
cld
cli
inc
mov
cmp
ljmp
mov
fsubrs
adc
insl
fistpll
mov
fistps
insb
push
std
mov
nop
push
cmc
lods
dec
jle
mov
iret
sub
cmp
lds
rolb
pop
xor
mov
push
xchg
cmp
and
push
stos
and
mov
into
dec
xchg
pop
mov
iret
call
movsb
fldl
shrl
call
faddl
jnp
outsl
icebp
or
lret
aam
mov
inc
push
data16
or
push
sbb
jecxz
dec
push
ds
test
mov
lock
stc
dec
jnp
loope
xchg
fcoml
enter
lret
cmp
insb
jmp
dec
mov
add
sub
insl
mov
cli
aas
das
sub
and
scas
pop
fsubr
dec
lea
testb
inc
dec
je
loope
fwait
notl
adc
pop
jle
scas
mov
das
xchg
dec
les
jnp
pop
out
lcall
out
jle
adc
movsb
lret
xchg
pop
pushf
in
dec
mov
and
sub
mov
fsubs
lds
sbb
rclb
fsts
jns
ljmp
sbb
insb
adc
popa
mov
cld
add
mov
call
pop
add
xlat
sbb
jo
in
adc
lods
imul
stc
or
cmp
fsubrs
inc
mov
out
movsb
in
mov
inc
inc
orb
ds
leave
and
cltd
sub
jnp
push
add
dec
cmp
pop
test
push
or
insb
or
arpl
xor
out
shlb
sbb
insl
loope
icebp
and
inc
sub
cmpsl
cwtl
inc
pop
or
and
mov
jb
insb
scas
out
dec
std
add
jmp
dec
push
addb
loop
ds
lods
add
mov
mov
insl
mov
pop
sub
mov
jne
cltd
add
mov
jnp
push
sbb
js
dec
imul
or
sarb
dec
xor
push
aad
xchg
jo
iret
cmc
xchg
jb
mov
add
adc
out
shlb
lds
cmp
int3
repnz
jbe
scas
mov
sbb
jbe
xchg
into
pop
in
dec
add
sub
add
lret
adc
jo
sub
xchg
dec
stos
popa
add
push
cmpsb
push
in
popf
mov
inc
adc
ja
push
pop
add
insl
ja
add
xorb
inc
jp
xchg
call
xor
mov
sub
mov
rcll
hlt
in
pop
mov
fcomps
sub
in
sbb
xor
jle
rcll
cmpsl
lret
mov
cmp
mov
test
pop
jns
push
add
fcomps
pushf
pop
adc
cmpsb
nop
cwtl
jne
lods
in
mov
sub
pop
dec
stos
dec
mov
xlat
inc
inc
mov
je
pop
popa
into
rorb
fiaddl
lock
loopne
xchg
xchg
jno
mov
sahf
sub
repnz
and
stos
dec
dec
cmpsb
fdivs
fwait
add
jbe
jmp
and
notb
jae
jns
push
inc
aad
sbb
imull
cmp
ja
xor
xor
cld
insl
je
cwtl
xor
clc
cmpsl
lcall
adc
ljmp
loop
xchg
push
lods
dec
push
ds
insl
sbb
ret
mov
pop
ret
repz
pop
into
sub
mov
jne
pop
xchg
sub
inc
jl
dec
leave
sbb
pop
in
jno
shll
pop
dec
nop
test
scas
daa
mov
mov
cmp
and
pop
dec
stos
adc
sub
mov
andb
fstpl
inc
rolb
ds
inc
ljmp
pop
push
mov
sub
dec
add
or
iret
out
cwtl
aad
add
or
push
gs
jmp
lahf
cmp
xchg
add
pop
mov
push
shll
add
xor
push
and
sarl
lods
dec
sbbw
push
pop
xor
inc
jg
push
arpl
xchg
push
inc
rorb
pop
jl
jg
lcall
imul
or
add
jnp
or
enter
push
mov
dec
dec
pop
mov
cli
lcall
mov
shll
jecxz
sub
sbb
movsl
arpl
pop
je
pop
std
testb
xor
pop
add
icebp
jo
movsl
lea
cmp
loopne
and
insb
adc
xor
sbb
xchg
pop
outsl
mov
sbb
mov
pop
xchg
push
and
adc
mov
nop
mov
sbbb
js
jb
imul
out
ret
pop
inc
cmpsb
das
rorl
shrl
xor
add
fcomi
jmp
in
and
pop
jecxz
pop
adc
sbb
fdivr
dec
mov
ss
pop
or
test
jp
xchg
das
fucomp
xor
aaa
fdivrl
or
xorb
xor
sub
mov
not
popf
into
popa
or
dec
inc
imul
jp
and
popf
sub
mov
cld
xchg
jecxz
pop
dec
call
adc
mov
inc
add
mov
pop
add
lock
sbb
pop
out
adc
inc
ds
sbb
push
mov
xchg
cld
stc
and
mov
pop
mov
cltd
and
mov
cmpsb
add
imul
inc
cli
pop
mov
popa
fstps
out
inc
lahf
xchg
clc
sbb
xchg
loope
mov
sub
mov
shl
lock
dec
dec
pop
js
int
jbe
xchg
xchg
out
decb
cmp
out
les
sbb
push
cmp
or
test
repz
xchg
push
test
pop
push
lds
cmc
xchg
and
imul
jg,pn
jb
xor
dec
scas
cld
insl
pop
xlat
fdivl
insl
sbb
and
jae
mov
jg
in
jge
in
lahf
data16
dec
adc
xchg
push
cli
mov
iret
stos
fstl
push
or
push
adc
sbb
mov
and
loope
mov
adc
outsb
mov
in
lds
lods
rorb
outsl
std
repnz
sbb
insb
outsl
cmc
cmp
and
jl
inc
pushf
add
int
adc
pop
hlt
mov
call
mov
xchg
inc
rcr
les
ljmp
divl
es
popf
call
push
imul
out
push
aam
push
mov
aaa
mov
jge
jg
out
jp
mov
xchg
es
addr16
sbb
cwtl
orb
cmp
lahf
addr16
or
jecxz
test
xchg
add
imul
push
xchg
xchg
mov
cmp
stos
dec
movsl
pop
lret
hlt
xor
pop
dec
les
sbb
loopne
fwait
int3
clc
mov
xchg
ss
sbb
push
lcall
scas
mov
mov
mov
outsb
loopne
and
xor
lock
jp
lcall
jb
mov
dec
fsubrs
hlt
mov
pop
inc
rcr
pop
andb
add
jl
imul
xor
mov
fsubs
aas
pmulhuw
sbb
mov
sbb
mov
paddsb
pop
bound
xchg
sub
adc
pushf
adc
pop
xor
dec
je
popf
test
mulb
xchg
mov
and
push
jl
mov
sbb
movsl
ljmp
pop
inc
mov
in
inc
mov
pop
testl
test
je
rcl
inc
mov
adc
pop
jmp
mov
sub
fldcw
sbb
idivb
stos
jbe
jo
cwtl
jns
imul
push
pop
sti
imul
mov
daa
adc
cmp
into
cmp
test
fmull
jnp
adc
sbb
dec
mov
push
jae
es
mov
add
fdivrs
pop
push
lods
xchg
and
xchg
adc
jge
mov
imul
sbbb
mov
scas
lods
sbb
test
pop
or
add
adc
sub
icebp
fistpl
adc
loopne
enter
mov
mov
fmull
mov
add
lret
push
orb
push
in
rorl
out
adc
mov
fisttpl
mov
push
add
xor
orl
inc
roll
mov
lret
push
sbb
and
cmpsb
adc
sub
push
xor
jno
pop
in
adc
popf
jl
pop
pop
adc
into
je
jne
into
or
arpl
pop
mov
outsb
hlt
pop
jmp
cltd
insl
addr16
std
pop
nop
cmp
cmp
out
cmc
mov
in
xor
pop
fisttpl
popa
jns
out
xor
lods
xchg
js
jg
mov
leave
sub
rol
jbe
pusha
adc
ljmp
push
icebp
xchg
stos
xor
mov
mov
into
push
nop
inc
jmp
int3
hlt
repnz
leave
or
xchg
adc
or
jbe
pushf
mov
sbb
stos
mov
or
xor
imulb
cmp
popf
mov
mov
call
mov
lods
push
stos
repnz
jnp
enter
mov
dec
mov
dec
and
mov
mov
mov
or
xor
jae
aas
loope
jecxz
jp
add
add
push
shrl
sub
mov
in
xchg
dec
nop
insl
test
sub
lods
repz
push
ret
push
stos
popf
adc
sbb
xor
shl
xchg
mov
and
xlat
pusha
xor
or
jo
jl
in
dec
or
ds
in
adc
and
icebp
and
in
pusha
dec
sbb
sub
pop
gs
push
adc
jg
mov
sub
jmp
in
mov
or
loop
adc
xchg
mov
sub
popf
pop
test
and
rorb
imul
mov
shlb
xchg
mov
mov
imul
pop
stc
daa
jmp
push
das
cwtl
stos
xor
stc
push
inc
and
cld
mov
cmpsl
dec
bound
xchg
les
lods
mov
mov
add
xchg
popf
ds
imul
dec
push
repz
cwtl
cwtl
cmp
sahf
dec
pop
mov
sahf
cwtl
lret
pop
adc
lock
mov
fs
inc
clc
sub
int
jmp
cmpb
jnp
pop
aas
inc
in
inc
sbb
cmpsl
jmp
mov
push
adc
test
in
jns
mov
aam
sahf
lcall
in
mov
xchg
cli
popa
mov
jbe
mull
jle
sahf
cmp
push
inc
fdivrs
in
mov
scas
adc
push
xchg
sarl
cli
outsl
call
adc
pop
lods
ret
cld
pushf
xchg
repz
xchg
lret
hlt
insl
add
xor
or
adc
fs
out
mov
loopne
xchg
fdivl
outsl
adc
pop
xchg
add
insl
pusha
dec
sbb
pop
nop
xchg
xlat
in
movsl
jmp
lock
rorb
dec
ds
test
ficompl
inc
mov
push
aas
jnp
or
ja
xchg
test
dec
xor
mov
pop
call
sub
or
orl
mov
jl
popf
dec
test
rcl
dec
cs
les
in
mov
add
jge
adc
popa
mov
jne
inc
pop
popf
mov
mov
push
rolb
cmp
aaa
mov
ss
aaa
in
js
add
and
push
test
dec
test
movb
lcall
cwtl
add
lret
or
addr16
ds
or
jno
dec
shll
sti
in
mov
aaa
aas
into
pop
lcall
dec
into
cld
loop
dec
jns
dec
call
dec
jg
pop
dec
cmp
push
ja
add
jno
lds
ds
mov
mov
lret
push
popf
push
adc
fsubl
insb
shlb
mov
xchg
adc
loope
or
push
shrl
mov
jns
popf
cltd
jle
test
loopne,pn
sub
jno
adc
clc
lcall
nop
repz
cmp
mov
mov
push
iret
mov
call
inc
add
dec
push
int3
test
aad
fdivl
xchg
lret
mov
mov
dec
and
xchg
lea
and
jne
inc
mov
loopne
jmp
adc
or
popf
fmull
insl
push
xor
inc
jle
push
into
push
iret
sar
add
cmpsl
fisttpl
popa
jo
lret
and
sub
xor
shlb
shl
stc
js,pt
cmp
pop
adc
outsl
fiadds
adc
adc
mov
jb
dec
mov
aas
aam
dec
mov
xor
cmpsl
and
push
push
test
ss
pop
push
std
addr16
mov
in
cwtl
pop
sarb
lock
xlat
fisttpll
add
sarb
cmp
fcmovb
cmpsl
stos
xchg
les
pusha
xor
jo
cmp
jle
jp
add
mov
adc
xor
pop
cmp
mov
cltd
out
fs
data16
sbb
shlb
xchg
inc
aaa
lods
or
push
jbe
cmc
xchg
movq
rorb
nop
repz
enter
mov
dec
mov
outsl
cmc
les
xchg
lcall
or
sbb
out
push
aad
mov
insb
test
das
int
mov
add
jp
or
sbb
and
outsl
jne
xchg
cmpsl
xor
jmp
xor
shlw
fmulp
cli
int
ss
xor
in
adc
lds
out
push
or
jns
add
cltd
adc
dec
cltd
jo
sub
add
inc
mov
scas
aad
dec
stos
dec
sbb
sbbl
xor
notb
fptan
cli
push
xchg
fsubp
cs
or
inc
mov
dec
push
xchg
mov
jp
add
xor
xor
cmpl
inc
pop
lds
orb
ljmp
add
ud1
scas
sbb
aam
iret
daa
mov
push
lahf
ret
pop
data16
pop
ds
mov
les
fnstsw
and
jge
test
xor
xchg
fcomi
std
jle
mov
mov
jp
into
rorl
pop
movsb
jbe
mov
lea
dec
cmp
jp
stos
lods
mov
in
hlt
dec
adc
jnp
or
mov
int
sbb
jnp
in
outsb
ficomps
sub
sbb
pop
imul
pop
cmp
iret
inc
int3
stos
lcall
pop
sbb
cmc
mov
pop
out
sbbl
xchg
repnz
push
xchg
cmpl
pop
jnp
inc
cmp
xchg
add
push
cmpsl
lds
call
adc
fnstenv
imul
and
inc
ret
jae
pop
iret
and
mov
push
jp
mov
insb
xchg
xor
in
or
mov
cltd
pop
loop
push
xchg
shrb
out
je
lret
loope
inc
gs
lcall
lcall
pusha
xchg
sbb
sbb
adcl
and
jnp
lods
adc
pop
mov
xchg
fwait
push
mov
ret
hlt
mov
psubw
les
sbb
xchg
fdivs
enter
pop
pop
push
cmp
arpl
mov
xor
in
and
cmp
jns
xor
leave
ds
mov
pop
fadds
ja
push
jo
rcrl
push
addr16
mov
in
ret
mov
mov
loop
ss
xlat
dec
call
outsb
repnz
les
mov
in
push
sbb
inc
xchg
mov
xchg
in
jae
and
dec
jb
loop
dec
stc
cmp
int3
mov
sub
ret
inc
fwait
xchg
es
xchg
lds
int3
pop
cmp
sbb
std
aas
fwait
jp
adc
leave
cmp
inc
or
cwtl
or
inc
cmpsl
ljmp
movsb
int
xor
sar
lods
int
jae
cmp
xchg
leave
xlat
dec
push
cltd
inc
add
pop
mov
lret
jns
out
mov
lahf
jo
lret
inc
ror
dec
mov
movb
into
mov
xchg
add
and
and
mov
aas
lods
pop
jnp
sbb
js
repnz
inc
xor
or
inc
adc
pop
ds
mov
mov
test
mov
xchg
loop
fidivs
sub
fnstsw
out
push
xchg
in
pop
stos
pop
push
mov
mov
pop
add
ds
mov
aad
testl
jo
lahf
push
mov
icebp
lods
mov
movsl
cmp
sti
repz
xchg
insb
inc
jo
leave
aad
pop
sbb
xchg
popa
out
xlat
cltd
or
aas
push
movsb
adc
sub
imul
sahf
mov
push
push
mov
xor
cltd
push
mov
add
and
insb
out
xchg
mov
ljmp
lret
jae
sbb
dec
or
inc
pop
enter
and
aad
and
ret
push
pop
xchg
inc
fstl
mov
aad
mov
add
addb
test
das
out
push
jnp
mov
std
repz
decl
add
pusha
pop
mov
inc
jo
in
jb
jl
outsl
inc
mov
aam
ljmp
inc
xor
shlb
aam
out
push
xchg
sbb
pop
cwtl
inc
push
ja
ljmp
xor
mov
lahf
jb
add
dec
ja
insl
mov
scas
fdivrs
cmp
mov
flds
mov
stc
mov
pop
js
lahf
js
scas
cmp
or
lock
andl
imul
icebp
ret
addr16
fldenv
pop
stos
shrl
jbe
ficomps
pop
and
and
pop
add
inc
dec
dec
out
outsb
iret
mov
cmp
stos
call
cmpsb
lahf
stos
mov
nop
ss
pop
inc
cwtl
jp
aas
pop
and
test
ds
out
xlat
mov
push
pop
pop
pop
dec
sarl
jp
push
push
imul
cltd
xchg
mov
or
push
mov
jnp
into
fists
mov
add
dec
xchg
lret
add
inc
cltd
dec
stc
sub
or
jae
out
dec
adc
stos
aaa
push
jg
xchg
cltd
dec
adc
sbb
pop
xchg
sbb
popa
inc
faddp
lret
mov
inc
mov
cmp
lock
adc
mov
rep
mov
clc
add
fistl
stos
xor
xchg
mov
ds
out
ret
add
insl
aam
lds
sbb
ds
icebp
pop
xor
mov
arpl
sub
in
lret
xchg
sbb
mov
icebp
xor
test
into
bnd
push
mov
dec
mov
lret
jecxz
and
out
mov
lods
mov
inc
ljmp
jmp
jp
nop
aas
inc
push
arpl
lods
dec
cmp
mov
daa
stc
cld
loopne
repnz
sbb
out
lea
scas
imul
xchg
in
pf2id
xor
aaa
push
popf
mov
mov
pop
jle
mov
adc
popa
out
pop
std
push
icebp
daa
pop
sbb
pop
add
ret
sub
pop
push
cmp
pusha
test
sub
jp
add
xchg
push
rcr
push
cwtl
outsl
cmpsl
jle
sbb
test
xchg
faddp
mov
in
sahf
sub
sub
mov
pop
shll
insl
rorl
add
or
add
fstl
fmull
sbb
fwait
and
sbb
add
jl
inc
dec
ja
mov
mov
or
out
sub
jnp
fucomip
inc
pop
xlat
out
mov
jnp
lahf
stc
pop
mov
and
rorb
aad
jns
and
jg
mov
sbb
je
cmp
cli
sbb
inc
lea
xchg
push
scas
ret
jnp
cmp
ss
lahf
jb
rorb
and
pop
pushf
push
jecxz
aad
fldl
orb
cmp
pop
popa
and
mov
cmp
lcall
ja
shl
out
xchg
aas
xor
in
sub
je
xor
inc
jmp
cmc
add
xor
mov
out
iret
fs
popf
pusha
push
test
fdivrl
ret
xchg
in
jno
lods
sub
pop
xchg
or
scas
mul
xchg
rol
arpl
pop
shrl
xor
xor
std
cmpsb
scas
xchg
mov
jb
out
adc
sbb
push
loope
dec
sbb
mov
push
dec
adc
mov
in
mov
cmp
ret
in
xor
inc
dec
loopne
cmp
loop
inc
cld
jl
popa
jle
jmp
jp
xor
pop
cmc
loop
ds
rcll
push
add
or
mov
fcoml
cmp
shll
nop
pop
mov
js
xor
pop
mov
repz
cmp
popf
dec
dec
sbb
sbb
iret
loop
jmp
push
scas
sub
xchg
pop
rorl
cmpsl
loopne
out
dec
test
adc
sti
inc
dec
js
push
xchg
jnp
stos
sbb
cmp
sbb
stc
mov
stos
adc
push
test
int
xor
pop
mov
cltd
push
mov
daa
mov
sub
js
cmp
or
and
mov
mov
pmaxub
imulb
jmp
daa
lods
jmp
out
inc
adc
ficoms
mov
inc
inc
cli
lcall
lds
mov
sub
sbb
pop
js
gs
mov
ret
addl
test
outsb
outsb
add
aas
js
mov
push
out
lods
and
inc
and
dec
sahf
push
test
arpl
push
sbb
jg
xchg
mov
xlat
xchg
xor
jg
lahf
jg
clc
dec
aam
adc
mov
sbb
divb
mov
pop
push
jbe
outsb
mov
push
inc
rcrl
fldcw
cmp
sbb
daa
loop
ffreep
dec
cli
test
cli
cmpsl
push
xchg
cltd
pop
and
ljmp
inc
lea
adc
inc
adc
mov
movsb
jns
jge
push
push
stos
cmc
imul
cmpsb
std
int
sbb
gs
add
fcompl
rorb
dec
lea
add
outsb
popa
mov
xor
pop
jbe
xor
fwait
mov
ljmp
push
inc
push
jno
add
add
xchg
shll
cli
je
adc
dec
jns
loop
aam
rcr
mov
aaa
int
adc
mov
lahf
outsb
xchg
adc
mov
pop
adc
insb
dec
popf
inc
xchg
lcall
add
add
addl
daa
leave
icebp
cmpsl
ds
jbe
scas
pop
pop
arpl
stos
fiadds
lock
pop
xchg
in
mov
jmp
cltd
inc
insl
push
cmpsb
mov
or
push
pop
test
push
loope
rcll
jns
jne
dec
cmp
in
sbb
or
mov
es
repnz
popa
sbb
jo
imul
out
inc
inc
or
and
or
cs
jnp
jecxz
jns
xlat
imul
mov
xchg
sahf
xchg
test
repz
xchg
mov
xchg
pop
dec
in
sub
dec
dec
xor
loop
cmc
das
dec
mov
xorl
lcall
fsubr
xchg
mov
push
mov
jl
nop
in
mov
push
lds
mov
cmp
out
add
mov
fldl
clc
push
neg
fdivl
push
mov
movsb
in
sub
lods
pop
fdivp
jmp
shrb
cld
fstpt
and
loop
xor
scas
lret
dec
mov
std
enter
sahf
movsb
icebp
sti
mov
in
ljmp
xlat
mulb
dec
adc
adc
fs
add
sub
xchg
popf
fwait
push
inc
imul
test
stos
sub
arpl
or
mov
lret
sbb
jne
lds
fsubrl
popf
xchg
inc
add
adc
push
adc
outsl
xchg
mov
dec
mov
mov
jae
jg
pop
cmp
xchg
push
je
pop
sub
mov
imul
sbb
pusha
mov
mov
mov
inc
inc
sarl
push
loopne
pushf
cmpsb
stos
aam
inc
and
inc
mov
and
cs
add
sti
adc
testl
add
lods
jge
push
roll
mov
jge
ficomps
rcrb
xchg
xor
testb
jnp
dec
jmp
sub
or
nop
stc
mov
xor
lret
xor
mov
dec
mov
lods
test
lea
push
xchg
xchg
adc
inc
cmp
adc
imul
fimuls
adc
and
sub
insl
lret
bound
shl
xchg
fstpt
test
or
je
mov
or
test
mov
std
repz
xchg
cmp
jp
inc
jecxz
test
push
jns
cmp
out
pop
jp
in
mov
int
hlt
jle
dec
fcmovu
rcrl
in
jb
andb
sub
inc
jae
stc
in
les
xchg
adc
ficomps
sbb
sub
daa
push
cs
addr16
shrl
xor
sahf
add
add
cmp
test
pop
adc
xor
mov
shlb
push
fucomp
adc
js
xchg
outsl
cmp
sub
adc
outsb
aaa
adc
cmp
xchg
out
adc
sub
pop
daa
fisubl
sub
lods
clc
cltd
rcrb
pusha
and
adc
stos
mov
jb
sbb
sahf
mov
out
sar
pusha
filds
ds
fmuls
arpl
xor
clc
das
push
aaa
loopne
insl
dec
icebp
rcrl
mov
insb
out
mov
lahf
sbb
xchg
jns
jl
jb
cld
rol
xchg
insb
ret
enter
bound
or
pop
dec
mov
movsl
dec
addr16
pop
xor
jecxz
shll
shlb
xchg
push
sti
js
inc
add
cs
aam
je
xor
stc
jecxz
push
je
push
pop
sbb
popf
cli
xchg
inc
and
inc
mov
sub
repnz
or
jno
mov
lods
outsl
das
xor
and
mov
and
popa
xor
std
jno
int3
mov
push
cmpsl
lahf
cmp
out
sub
pop
jge
dec
inc
cmp
fidivs
xchg
add
or
insl
mov
mov
lock
sti
dec
jl
jns
fmuls
push
inc
jns
jns
cmp
pop
sbb
jmp
push
fwait
push
pop
ds
imul
jnp
and
lret
push
adc
filds
dec
int3
sbb
jo
loopne
or
adc
cld
lcall
scas
mov
repnz
addr16
dec
test
xor
icebp
dec
imull
adc
sbb
xchg
sub
mov
imul
dec
and
jns
icebp
icebp
xor
sbb
neg
pop
test
xchg
popf
imul
mov
call
mov
insl
adc
lods
out
loop
mov
xchg
add
and
hlt
fdiv
xchg
sbb
push
repz
adc
test
push
xor
or
sub
hlt
and
fcoms
add
mov
shrl
test
in
mov
loopne
xchg
sub
pop
jl
int
mov
cmp
in
sub
push
xor
fmuls
dec
rcrl
rcrb
mov
xchg
xchg
fiaddl
or
loope
push
inc
jno
jb
pusha
outsb
in
lret
movsb
xchg
add
xor
xor
in
jae
push
add
jmp
je
mov
jbe
jge
mov
clc
push
pop
mov
das
imul
outsb
or
jge
jnp
scas
and
pop
ss
rorb
ja
pop
sub
in
jecxz
sub
adc
mov
xchg
pop
sub
mov
js
cmp
int3
mov
mov
xchg
mov
andl
push
arpl
sbb
fs
inc
dec
bound
push
pop
mov
int
in
mov
int3
push
jp
scas
gs
mov
add
call
jb
imul
dec
dec
sbb
int
int3
int3
ror
ficoml
xchg
pop
pop
pop
push
jl
cmp
es
sbb
push
faddl
cld
dec
jg
jg
fmuls
cmpsb
nop
pusha
jns,pt
jnp
and
push
shrl
or
sub
sub
sub
lock
mov
inc
sub
push
pop
lret
push
or
negb
adc
js
pop
scas
scas
imul
xor
xchg
arpl
mov
inc
in
lret
or
cmp
mov
add
shrl
clc
sub
jbe
jmp
insb
ficomps
xchg
enter
fwait
inc
loope
nop
add
ds
xchg
je
mulb
out
mov
push
push
fnstsw
rcr
fisubrs
adc
xchg
cwtl
xchg
scas
stos
test
cmp
pushf
pop
add
mov
push
jmp
imul
mov
call
pop
add
jns
lret
xchg
jae
push
fmuls
lods
xchg
dec
daa
xchg
cmpsb
insl
dec
fidivl
xor
or
sub
enter
insl
mov
dec
leave
xchg
mov
mov
cmp
in
xor
test
xlat
or
push
and
aam
cmp
dec
xorl
insb
lock
shlb
fdivrs
add
cmp
sub
fimuls
addr16
stos
push
ss
sub
pop
jbe
xchg
xchg
notl
and
mov
lret
and
cld
xchg
jno
mov
js
stos
inc
pop
icebp
push
jns
sub
rcrl
mov
push
mov
daa
add
sub
test
mov
js
sbb
adc
and
movsb
or
popf
pushf
fidivrl
jl
vpunpckhwd
xchg
mov
push
mov
jl
pop
aam
jb
int3
pop
pusha
mov
in
mov
push
jmp
sub
imul
mov
int3
icebp
ljmp
adc
gs
rorl
inc
jg
push
cmp
insb
push
into
xor
repnz
cmpsl
inc
add
push
pusha
stc
push
inc
push
cmc
test
test
xchg
in
lea
mov
sub
in
repz
xlat
int3
test
gs
sti
popf
js
fcomi
add
loop
jb
mov
sbb
jp
cld
sub
xor
or
xbegin
xchg
adc
add
andl
scas
pushf
add
ficompl
xchg
mov
pop
xchg
sub
pop
xor
mov
je
xorb
mov
pop
movsb
imul
cld
pop
out
sbb
sub
cmp
aad
and
fiaddl
xor
pop
enter
sti
push
jae
bnd
ja
fbld
andl
js
xor
mov
loopne
into
shlb
inc
es
jmp
inc
repz
sub
pop
fisttpll
pop
jns
cltd
cmp
lahf
js
inc
cs
rcrb
cmp
jno
repnz
repz
ror
push
out
dec
mov
test
out
loopne
inc
inc
sbb
repnz
lahf
addr16
movsb
mov
dec
add
loope
lahf
mov
xchg
nop
mov
push
lret
stos
pop
push
aaa
sahf
mov
addr16
call
mov
mov
push
pop
and
xlat
xchg
es
add
pop
popf
es
inc
fisubs
jge
xor
int3
cltd
ljmp
out
es
pop
fmull
orl
aad
pop
loop
ljmp
dec
js
add
push
icebp
fdivs
dec
adc
daa
fcoml
mov
add
push
adc
jb
addr16
arpl
pop
movsb
pusha
mov
xor
fdivs
daa
add
cltd
pop
sbb
xor
ljmp
fwait
rcl
adc
ret
insl
imul
add
addr16
pop
xor
mov
lahf
js
std
mov
in
outsl
rcrl
loopne
or
stc
lcall
or
ja
mov
dec
mov
sub
and
add
sbb
xchg
sub
pushl
or
mov
adc
mov
xchg
and
mov
sub
sub
sarb
cmp
and
inc
push
xchg
scas
rcrb
push
out
test
push
and
int3
cwtl
jo
shll
sbb
mov
movsb
mov
jnp
gs
iret
shlb
pop
pop
int
mov
sub
fcoml
ja
std
sbb
loope
idiv
mov
adc
pop
ja
ds
aad
cld
or
lahf
adc
repz
mov
aad
mov
xor
ficoms
add
sbb
inc
xlat
shl
fdivs
jns
jmp
jge
cli
mov
mov
xor
jecxz
xchg
rcrl
cwtl
mov
push
test
pop
or
hlt
std
mov
dec
dec
cmp
lock
lock
mov
xchg
enter
pop
cmp
pop
in
scas
negl
outsb
dec
adc
xor
nop
stc
pop
push
mov
hlt
push
sti
imul
xchg
inc
dec
cmp
mulb
adc
dec
mov
cmp
js
pop
movsb
jmp
outsl
mov
and
jb
rolb
push
outsl
push
pop
ret
and
repz
adc
jl
aas
xor
data16
lods
loope
add
mov
pop
jns
call
dec
jns
push
jns
repz
repnz
les
or
movsb
jns
daa
and
jbe
out
jbe
inc
add
lret
cmp
inc
das
shl
sub
xchg
push
shlb
scas
mov
outsl
push
shrl
lds
add
loope
jecxz
sub
mov
mov
pop
jae
inc
pop
mov
cli
icebp
movsl
fildll
pop
pop
sub
jno
in
das
loopne
lds
sbb
pushf
add
cmp
fwait
sbb
xchg
mov
fidivrl
jp
cld
mov
fnstenv
rcll
bound
mov
sbb
lods
mov
pop
jne
mov
mov
pop
out
sub
lret
jge
inc
stc
inc
in
inc
lahf
repnz
lret
mov
jb
lods
mov
or
push
inc
jno
stos
test
sub
mov
test
adc
push
push
scas
fdivs
cmp
xchg
mov
sti
mov
mov
xor
xchg
loope
inc
mov
mov
int
push
stos
push
popf
lret
xchg
shll
bound
jo
mov
mov
mov
or
mov
shlb
ret
cld
jmp
aas
in
insl
fwait
shll
xchg
jle
mov
jo
jne
inc
xchg
xor
test
jns
inc
or
jecxz
cwtl
iret
mov
out
sbb
aam
inc
ljmp
or
stc
daa
cltd
int
loopne
add
xchg
jmp
mov
mov
xchg
jg
sbb
mov
pop
in
pop
testl
lea
cmp
mov
jg
push
xchg
imul
bound
cmp
sbb
sub
mov
xor
pop
fildll
jle
push
dec
push
shl
in
mov
pop
xchg
rclb
mov
xor
ret
nop
push
jbe
mov
sub
xorb
dec
or
int
sbb
nop
sbb
fistps
mov
shrb
lea
pop
in
xchg
hlt
inc
enter
ja
loop
mov
cmp
and
pop
pushf
or
jg
inc
inc
mov
gs
in
icebp
dec
popl
add
ret
in
mov
outsb
add
mov
int
inc
aam
in
mov
mov
mov
mov
or
add
scas
jge
fs
or
jbe
cli
adc
and
stc
sub
push
fcoml
inc
cmp
xor
aaa
push
xchg
add
es
inc
push
mov
aam
mov
insb
cltd
rolb
add
call
adc
pop
je
andb
xchg
push
push
repnz
scas
data16
sti
mov
push
addr16
fists
jp,pn
sub
nop
pop
outsb
cld
xchg
and
ss
pop
imul
mov
mov
scas
inc
test
add
dec
sbb
mov
decb
in
push
cltd
xchg
mov
notl
cmp
dec
into
or
push
in
push
popa
dec
jne
jno
je
lds
add
in
hlt
xchg
jg
xor
pop
out
out
aad
mov
aas
jns
jb
dec
arpl
mov
or
xchg
jo
pusha
jbe
cmpsl
cld
mov
mov
push
test
fdivs
mov
jecxz
ss
pop
cld
xchg
xor
pop
shll
fdivl
sub
in
fmull
ror
inc
push
aam
flds
fimuls
sub
and
and
sbb
ss
aaa
imulb
adc
ja
popf
hlt
out
dec
in
inc
movsl
inc
addl
push
mov
popa
loop
and
shl
mov
jmp
movsb
push
cmp
push
js
and
mov
pushf
lret
call
dec
sub
mov
mov
dec
jbe
dec
mov
mov
out
sbbb
repnz
mov
add
scas
dec
mov
cmp
mov
shll
add
cmp
sbb
test
ja
scas
jmp
cmp
and
adc
aam
enter
cmp
mov
out
jbe
inc
fstpl
mov
loope
ret
adc
xchg
pushw
outsl
jne
cmp
add
rcll
js
mov
mov
fwait
das
int
xor
sub
in
push
xchg
into
adc
jne
xlat
add
gs
push
imul
test
cmpsl
and
mov
pop
or
mov
out
inc
jge
cwtl
and
lcall
lods
arpl
cmp
sub
or
ret
jno
mov
add
leave
out
jb
orb
leave
adc
xchg
aas
adcl
rorl
sub
dec
add
imul
xchg
lahf
lret
dec
inc
add
cmpsb
mov
sbb
lock
mov
dec
dec
call
sub
and
mov
cmp
jp
mov
call
pop
addr16
flds
pop
sbb
dec
insl
jb
ret
cmpsl
adc
cmc
pop
xchg
lods
cmp
call
sti
or
or
cmp
cmp
dec
stos
mov
jmp
xchg
jl
cld
jne
and
xchg
lods
fwait
sbb
pop
xchg
negb
outsb
aam
dec
repnz
cmp
insb
cmp
jb
xchg
inc
insb
jmp
or
cltd
push
cmp
and
lods
mov
mov
add
pop
imul
mov
adc
and
js
std
mov
mov
fidivl
repnz
pop
pushw
sbb
js
jg
stc
xchg
lret
push
roll
rcll
push
mov
mov
repz
xor
pop
mov
push
icebp
rcrb
fldenv
out
call
test
pop
mov
inc
xchg
push
push
adc
mov
lock
stos
shl
mov
sbb
or
scas
out
add
sbb
shl
adc
rclb
jecxz
lcall
dec
sub
sahf
pop
fs
call
push
mov
xor
lahf
loopne
mulb
jbe
mov
sbb
or
in
je
adc
push
test
ljmp
mov
jo
cltd
jl
cmc
repnz
mov
popa
lret
bound
in
in
repz
popf
mov
add
pop
lock
mov
inc
repz
orb
jns
leave
cmpl
imul
mov
cmp
ret
lock
cwtl
xor
jae
jmp
btr
add
xchg
movsl
ds
fstl
mov
enter
sbbb
jge
push
ss
pusha
mov
cmp
insl
xchg
rorl
cli
dec
loopne
or
loop
add
xchg
aaa
mov
jnp
cltd
sub
sbb
lods
test
inc
sarl
rcrl
cmp
pop
adc
arpl
push
out
pop
enter
pop
fildll
hlt
push
arpl
adc
aam
jp
lds
cmp
inc
push
sahf
push
mov
aad
lods
pop
xchg
push
or
inc
in
outsl
ret
cmp
mov
xchg
jne
cli
or
add
sbb
aam
mov
cmp
fidivrs
cwtl
mov
add
mov
stos
xchg
sbb
or
pop
jnp
in
dec
sbb
jg
mov
push
inc
jle
ljmp
adc
xor
inc
inc
pusha
mov
popa
hlt
lds
cli
dec
addr16
lods
in
movsl
ja
xor
xor
or
mov
xor
ds
add
jo
int3
push
and
or
push
pop
inc
lret
xor
js
cmp
push
sbb
lret
repnz
adc
sbb
aas
push
repnz
ljmp
shrl
push
loope
mov
rorl
out
mulb
fnstsw
dec
in
jno
mov
mov
dec
loop
xor
rcll
push
ss
dec
sbb
mov
popf
aam
mov
test
les
test
jo
clc
xor
les
push
add
insl
ss
das
lea
addb
mov
adc
xchg
jecxz
fcomi
aad
xchg
sub
cs
sbb
add
jnp
nop
dec
xchg
cld
xchg
or
in
inc
icebp
or
outsl
cltd
fisubs
xlat
pop
daa
xor
or
sahf
cmp
data16
cmp
pop
stos
or
sub
jnp
stos
xchg
pop
sahf
shrl
jmp
mov
in
xchg
ljmp
xchg
idivl
and
dec
xor
add
adc
repnz
xor
push
cltd
xor
adc
int
in
pop
cmp
adc
or
jns
insl
rorl
pop
bound
and
std
nop
mov
mov
test
or
das
inc
leave
mulb
xchg
iret
lret
lahf
popa
xchg
int3
or
mov
daa
inc
xchg
mov
lret
out
cmp
jecxz
pop
popf
mov
mov
xor
subl
xchg
jmp
test
lds
mov
add
push
inc
pop
loopne
movsb
std
cmpsb
cmp
dec
scas
das
ror
push
xor
mov
adcb
mov
or
push
mov
cmp
add
jmp
push
jns
lds
je
mov
dec
cmp
cs
fs
fwait
pop
jg
in
pop
sub
lcall
jae
andl
mov
jl
iret
testl
lock
cld
scas
mov
lods
leave
mov
sbb
pop
push
xor
arpl
xor
mov
in
lret
or
sbb
pop
or
xor
fcomp
and
repz
inc
and
xor
xchg
add
inc
mov
dec
add
sub
sbb
pop
jge
imul
push
xor
lock
mov
mov
sub
lcall
in
js
push
mov
cmp
scas
sbb
fimuls
shlb
push
xor
les
rolb
rorb
lcall
call
cmp
pop
outsb
adc
das
out
sbbl
out
push
xor
aaa
cmp
mov
fadds
cltd
xchg
stc
loopne
pop
mov
ret
adc
jbe
and
pop
cwtl
xor
lock
out
or
sub
fisubl
pop
jmp
fiadds
daa
fbstp
pop
pop
sub
stc
xchg
bsf
in
ficoms
dec
push
mov
sbb
shr
fnstenv
or
mov
aad
scas
lods
jecxz
push
mov
rorl
inc
int3
rorb
insl
xchg
nop
xor
into
insl
outsb
imul
sahf
inc
es
xchg
cs
pop
enter
pop
subl
sbb
cmpsl
adc
adc
mov
int
jecxz
xor
int
fbstp
add
dec
stc
mov
nop
push
dec
cmpsb
mov
bound
das
test
jns
dec
test
pop
sbb
sbb
add
insl
ret
jnp
or
arpl
ret
mov
and
aaa
pop
sub
xchg
cmpsl
jmp
pop
je
mov
xchg
test
fs
incl
out
and
and
mov
hlt
mov
lret
cs
adc
jmp
pop
or
lcall
out
fildl
xchg
loope
jmp
mov
movlps
out
jbe
repnz
add
pop
pop
pop
jo
test
and
jnp
lret
push
xchg
add
sub
adc
popf
pop
ret
xor
push
jae
rorb
loopne
sbb
mov
rorb
pop
push
mov
aad
jecxz
mov
inc
add
sub
fcomip
xor
stc
sbb
push
mov
movsb
cmc
adcb
aam
data16
out
int3
or
add
pop
adcl
fidivrs
lret
les
mov
inc
pop
push
test
dec
inc
dec
test
mov
sub
jle
mov
call
sbb
xchg
fnstenv
ret
push
shlb
shrl
loopne
incb
push
lcall
dec
ret
adc
add
mov
enter
mov
add
xchg
lods
lret
sbb
repnz
add
inc
bound
jg
cmpsb
loopne
xchg
sbb
cli
push
add
adc
movsl
fistl
aas
pop
ret
jp
out
in
lcall
clc
idivl
gs
lret
sti
jns
and
ss
hlt
mov
dec
pop
jle
xlat
int
jno
jge
pop
add
aam
rolb
jbe
mov
add
sub
mov
cmp
mov
push
loope
add
mov
mov
push
subl
push
sbb
mov
pop
ljmp
enter
call
xchg
inc
out
testb
jae
and
jno
dec
fimuls
lds
std
sub
int3
jbe
movsl
js
mov
lods
pop
notb
xchg
inc
aad
adc
adc
jb
mov
jae
add
sub
xor
xor
xchg
jo
or
or
std
jo
mov
inc
pusha
sbbb
movsl
mov
ja
cmp
xchg
loopne
orl
jecxz
test
pop
popf
test
jmp
dec
movsl
fwait
cli
mov
xchg
xchg
or
outsb
ja
adc
nop
add
sbb
mov
or
ret
sub
push
or
je
roll
mov
jmp
bound
mov
dec
jg
fldenv
roll
fcom
in
stos
cmc
inc
push
pop
dec
and
add
sbb
into
andl
push
insl
cmp
xchg
jmp
xchg
popa
in
push
hlt
mov
in
fstpl
xchg
shlb
iret
jmp
in
adc
inc
loopne
mov
xor
pop
pop
xor
xor
pop
ficompl
push
mov
jecxz
andl
push
cmpsl
add
icebp
test
test
scas
sub
mov
cltd
pop
or
pop
sbb
cld
mov
adc
jp
sbb
mov
into
xchg
idivb
mov
mov
and
pop
dec
pop
sub
aas
jno
mov
push
cmpsl
pop
lahf
out
shrl
mov
jns
clc
dec
add
js
stos
dec
lods
rorb
dec
jae
inc
fstpl
mov
in
test
rcll
out
mov
in
hlt
pop
mov
jnp
xor
loope
and
icebp
shll
scas
popf
pop
addr16
int
pop
std
roll
and
jnp
mov
andb
push
rolb
pop
xor
jge
ja
insl
insb
mulb
es
xorb
jl
pop
scas
sbb
pusha
mov
mov
mulb
dec
push
cs
ja
push
loope
movsl
or
mov
daa
jo
or
gs
lret
lahf
pop
shlb
addr16
arpl
cld
sbb
push
rorl
jp
inc
dec
ja
mov
lcall
test
mov
inc
jle
jb
sahf
call
jnp
pop
std
clc
inc
inc
iret
xchg
xor
movsb
push
popf
call
mov
mov
test
mov
addr16
mov
sbb
lcall
cld
xchg
or
push
scas
lods
cwtl
into
jnp
sub
cmpsl
jmp
and
lock
mov
in
push
js
mov
orl
out
jno
xchg
loop
stos
pop
enter
mov
xorb
int
or
test
fwait
dec
popa
cli
jl
in
sub
movsl
cmpsb
pop
mov
shlb
out
cld
push
insb
inc
dec
frstor
inc
xchg
lret
dec
fimull
xchg
jnp,pt
push
sub
pusha
mov
inc
xchg
fstl
add
loopne
cmpsb
pop
not
or
shl
pop
jle
mov
adc
bnd
ss
mov
scas
dec
jmp
rol
sub
popa
scas
call
jle
adc
int3
sbb
mov
das
pop
mov
popa
iret
cmp
add
pop
mov
sub
mov
aaa
jl
call
out
and
xor
fdivs
filds
push
pop
cmp
sbb
ficoms
mov
xchg
es
fisttps
pop
mov
std
sbb
fnsave
outsl
add
fsubrl
inc
jnp
enter
ret
mov
xchg
sub
cmp
add
mov
test
aaa
clc
mov
pop
or
pusha
and
in
in
js
popf
cmp
mov
out
daa
rclb
fs
mov
incb
pop
pop
sahf
pusha
jle
div
sub
inc
shll
out
cmp
mov
xchg
xchg
mov
mov
jno
dec
cmp
mov
lods
cli
sahf
mov
or
mov
cli
imul
push
lods
xchg
xor
adc
es
mov
mov
pop
lea
lock
xor
pop
dec
push
ret
pop
outsb
add
or
bound
ret
cmp
jbe
sar
lds
bound
cmp
inc
fwait
imul
fcoml
repz
pushf
bnd
roll
and
mov
clc
mov
imul
push
mov
adcl
mov
insl
rcrb
pop
push
cltd
ret
incl
out
cld
sbb
adc
scas
inc
icebp
jne
dec
mov
fs
sbb
mov
xor
in
jmp
movsl
and
mov
mov
fisttpll
cmp
loope
imul
int
xor
aam
imul
jno
pop
hlt
pusha
fsubs
fidivs
add
jno
icebp
or
aas
in
or
and
mov
inc
sbb
sub
rcll
icebp
adc
dec
je
lahf
and
lods
test
push
pop
jecxz
mov
imul
outsb
imul
add
mov
sub
cmp
jns
or
rclb
icebp
sbb
testb
add
popa
jge
test
push
mov
js
roll
out
pop
cmp
shl
jo
jbe
aam
xchg
xchg
sbb
loop
mov
pop
cmp
add
cmp
hlt
and
push
pop
or
and
cltd
ret
cmp
mov
rorl
in
jb
dec
in
jns
addr16
dec
dec
dec
subb
sub
pop
ljmp
nop
es
sahf
and
aaa
shrb
adc
out
jo
mov
imull
sarl
movsb
rorb
mov
and
push
insl
int
mov
std
adc
or
pop
add
jp
imull
jle
sub
xor
jae
cmp
mov
movsl
pop
addr16
dec
and
lods
pop
cmc
rcrl
cmpb
hlt
ret
push
push
xchg
push
push
push
ret
out
push
mov
fsubs
jmp
dec
int3
mov
mov
js
adc
addr16
sbbl
addl
jp
cld
sbb
stos
jge
mov
sbb
xor
cmp
adc
jno
xorb
shl
or
jecxz
popf
and
pop
lods
pop
mov
sbbb
fdivr
add
mov
or
shrb
lock
jbe
stos
stc
xor
imul
das
cmp
daa
inc
jo
mov
cmp
adc
mov
pop
jne
enter
xchg
jp
aas
cmp
jmp
call
fcmovnu
data16
and
lea
mov
xchg
rcrb
adc
mov
pop
or
repz
into
das
jae
loop
inc
dec
dec
pop
mov
or
ljmp
aam
cli
fisttps
mov
fstl
cwtl
aaa
movsl
movsl
rorb
fwait
out
jle
bound
and
pop
test
jbe
into
add
push
push
sbbb
inc
imul
outsl
xchg
inc
das
inc
push
fnstcw
xchg
xchg
int
push
push
orl
mov
icebp
inc
xchg
mov
movsb
dec
xorb
xor
jecxz
xlat
js
push
and
test
mov
gs
push
inc
and
push
push
fsubrl
fs
xchg
push
test
jg
cmp
clc
sub
jns
adc
adc
xchg
data16
add
or
push
dec
outsb
sub
outsb
or
or
leave
movsb
or
in
xchg
sbb
or
add
push
jno
xchg
xchg
lcall
aaa
enter
pop
jb
aad
xchg
in
stos
js
pop
inc
gs
pop
insl
popa
stc
aad
mov
lcall
mov
mov
jnp
loope
pushf
dec
lret
add
lcall
mov
scas
enter
jl
mov
and
dec
clc
dec
sbb
or
sub
lcall
aas
or
jge
push
nop
and
outsb
xor
add
or
fisubrs
dec
jb
jmp
add
jecxz
imul
jae
cmpsb
push
lock
out
mov
jp
jne
dec
pop
decl
pusha
push
jecxz
sbb
fsubrs
sbb
lret
and
imul
fwait
mov
sub
cmovnp
sub
sub
call
jg
imul
aad
mov
in
std
jb
scas
loopne
adc
fadd
jno
push
in
mov
ds
in
aam
push
insl
int
xlat
jb
mov
in
mov
ljmp
mov
cmp
mov
mov
arpl
or
jnp
push
std
dec
xor
mov
aaa
popa
shr
call
push
jp
and
push
test
jl
pop
inc
xchg
in
loope
sarl
xchg
jns
push
rcrl
or
sbb
lret
test
gs
mov
mov
mov
fadd
lods
std
xorb
xchg
test
mov
inc
inc
cli
sbb
das
aad
or
loope
sbb
push
jo
out
shlb
ret
lret
adc
inc
cmp
add
sub
cmp
fsubl
jns
bound
pop
stc
pop
test
mov
jecxz
add
lods
xchg
jmp
shlb
or
stc
jecxz
lea
adc
cmp
scas
pop
xchg
pop
inc
lret
or
sarl
aaa
xchg
jns
ret
das
sub
adc
inc
xchg
mov
jns
pop
or
mov
push
aas
jmp
cmovg
mov
sub
repz
dec
out
jns
mov
jbe
fwait
adc
dec
mov
aaa
arpl
mov
loop
je
out
sahf
mov
adc
repnz
popa
fsts
xchg
lods
mov
iret
mov
cs
lret
fcomp
sbb
lret
dec
push
leave
sub
push
arpl
ret
enter
aam
loope
sbb
aas
loop
fwait
subl
into
xchg
out
inc
adc
dec
mull
js
xor
xchg
jecxz
pop
sbb
es
cwtl
sbb
or
cmp
cmc
or
fadd
jmp
fsubl
je
pushf
and
scas
test
cltd
cmp
cli
and
and
xor
push
ret
mov
in
mov
outsb
stc
mov
mov
xor
outsl
popf
sahf
out
or
push
adc
pop
rol
ss
and
aam
sbb
sti
pop
cmpsb
xchg
pop
psubq
les
jae
inc
pushl
mov
jmp
and
test
in
into
iret
lods
test
sti
pushf
sbb
mov
inc
xchg
pop
out
xchg
xchg
and
mov
dec
jae
rcll
xor
xchg
lods
sbb
js
push
xor
inc
call
adc
test
addr16
hlt
cltd
ljmp
pop
xchg
pop
push
in
je
mov
add
adc
sbb
out
repz
imull
push
and
add
pop
fadds
jg
das
pushf
sub
push
cmpsb
shl
pop
das
pop
adc
in
push
xchg
mov
pusha
andl
outsb
in
pop
lea
out
add
mov
jp
sub
and
mov
mov
stc
cld
and
adc
rcll
ljmp
mov
dec
jecxz
push
xlat
and
fldenv
fisubs
mov
inc
xchg
pop
hlt
xor
rolb
test
or
imul
mov
fistpll
jno
mov
lcall
dec
lahf
fiadds
rorb
push
aaa
ljmp
enter
inc
test
clc
and
xor
js
outsl
and
dec
fnstsw
jmp
mov
iret
arpl
push
iret
dec
loopne
repz
out
js
or
jmp
out
inc
cmp
cmpsl
fwait
xchg
popf
int
cmp
or
sti
or
sbb
int
mov
hlt
outsb
aad
imul
sbb
cmp
clc
rcrl
and
rep
test
into
lods
mov
push
or
movsb
mov
push
into
shlb
movsb
xchg
cmp
jmp
js
pop
sbb
scas
xchg
jo
shlb
rcl
inc
shlb
mov
mov
jmp
mov
fcoms
vpsrlw
mov
dec
je
decl
jmp
or
and
mov
and
cltd
rclb
xchg
xchg
lahf
cs
push
stc
imul
dec
pop
jb
inc
insl
fstps
sbb
out
jbe
xor
mov
or
xchg
mov
adc
fcomi
adcb
sbb
lds
mov
stos
or
cmp
mov
xchg
out
and
stos
mov
arpl
test
loopne
rcr
lds
xlat
fcmovb
ja
int
dec
je
xchg
jge
js
pop
inc
jecxz
cmpsl
test
xchg
xchg
rorb
xchg
xchg
outsb
or
int3
rolb
shlb
cld
push
fcmovnbe
stos
mov
das
mov
pop
and
hlt
xor
popf
in
jg
inc
mov
dec
test
cmc
adc
fsub
push
pop
ret
mov
popf
jnp
les
lret
cmpsl
stc
subl
xchg
cli
icebp
imul
xor
loope
les
pop
enter
outsl
rolb
xchg
or
and
and
stos
pop
addb
nop
sub
scas
and
ja
fildll
dec
pop
fwait
or
rcrb
pop
repz
pushf
outsb
xchg
cmp
jbe
out
xor
sahf
dec
sub
and
out
popa
mov
test
ret
push
movsl
stos
push
sub
pop
mov
popa
adc
add
sbb
inc
outsl
or
cmc
gs
imul
popa
xor
mov
jo
ljmp
xchg
stc
ds
pop
popa
call
sub
or
loope
gs
ret
and
daa
sub
icebp
fcoml
mov
dec
ss
fimull
adc
fdivr
fstps
imul
cltd
pop
lret
mov
mov
jae
adc
mov
test
in
jne
fstpt
mov
outsl
and
mov
mov
mov
jns
rolb
lret
fisubs
pop
lods
test
loope
jmp
jns
cmp
in
outsl
dec
hlt
aas
pop
sbb
gs
jb
jns
xchg
mov
push
mov
mov
cmp
int3
and
jb
pop
jae
and
cmp
pop
xor
adc
mov
imul
or
ss
dec
pop
movsb
in
ljmp
addr16
and
lcall
pop
nop
jmp
cmpsl
daa
pop
icebp
pop
int3
ljmp
mov
adc
adc
sbb
ljmp
shrb
stos
lock
mov
out
arpl
xor
pushf
or
ja
and
mov
sbb
aam
out
fs
push
inc
pop
inc
xor
stos
push
ret
xor
jo
pop
inc
and
test
sub
jb
jg
loope
imul
inc
adc
into
dec
rcrb
fwait
shrl
sbb
adc
mov
std
sub
stc
sbb
insb
ljmp
xchg
adc
loope
xchg
lock
repz
jg
inc
push
push
jmp
xchg
sbb
movb
jnp
sub
adc
inc
pop
and
scas
dec
shld
lahf
and
bound
popl
adc
add
test
movsl
mov
test
es
jnp
int
xlat
xor
mov
cmp
call
lds
fsub
mov
dec
sbb
mov
stc
insl
or
incb
ret
sub
sti
mov
aam
outsl
lret
and
xlat
push
inc
jecxz
lcall
inc
adcl
xlat
push
adc
pop
gs
aas
xchg
xor
xor
fnsave
roll
ret
cltd
int3
mov
ljmp
jo
and
test
ss
xchg
in
scas
pop
xor
inc
scas
mov
cmp
add
xorl
jp
add
adc
jae
cmp
sarb
sub
jge
xchg
roll
inc
in
test
clc
scas
pusha
add
jo
pop
shlb
test
mov
fiadds
xchg
push
inc
aas
cmp
mov
mov
dec
popf
push
in
jge
insb
or
sar
outsl
jnp
jmp
sbb
adc
dec
push
jne
out
jl
mov
push
push
out
add
dec
dec
inc
pop
adcb
cmp
lret
fcmovnb
or
xchg
dec
add
lret
mov
fidivl
fisubrs
out
std
jae
imul
icebp
mov
pushf
and
or
int3
xchg
jecxz
mov
xchg
mov
stos
mov
fwait
jle
jecxz
stos
push
inc
cmp
pop
fistps
jbe
push
xchg
add
xor
movsl
add
repnz
rdpmc
jo
in
insl
push
fisttps
and
mov
and
popf
push
mov
cli
rolb
pushf
cmc
mov
inc
cmp
imul
jecxz
pop
lods
adc
jp
imul
mov
jae
pop
ja
fwait
mov
std
test
xchg
pusha
adc
test
repnz
aam
pop
xchg
cltd
shl
sti
popf
ficoms
loopne
lret
and
dec
movsb
es
mov
mov
adc
jnp
fisttpll
outsb
fsubrs
adc
scas
rcr
mov
and
imul
jns
sub
adcb
jmp
dec
sbb
in
aad
aas
hlt
sub
leave
or
into
and
adc
loope
mov
mov
arpl
jle
mov
xchg
inc
ret
jae
inc
test
dec
mov
fisttpl
dec
in
mov
loopne
mov
mov
pop
add
sbb
jecxz
jge
add
fsubrs
pop
aas
lcall
imul
mov
xor
test
imul
sarl
sahf
cmpsb
dec
pusha
shlb
cltd
push
sub
pushl
add
or
and
and
dec
fldcw
cmp
xchg
jl
sub
into
xor
ss
sbb
add
mov
cmp
inc
in
sub
int3
lret
mov
fisttpll
inc
mov
lret
adcl
int
cli
jbe
sti
xlat
js
xchg
or
in
inc
in
cld
jnp
loope
insb
notl
pop
dec
mov
adc
inc
pop
sbb
lcall
loopne
jmp
and
cli
inc
imul
and
fwait
mov
fxch
iret
imul
lods
bound
sar
or
stos
popa
bound
mull
pop
or
outsb
xor
push
imul
pop
notl
jge
pop
cmpsl
push
inc
sub
sub
movl
push
add
loope
lds
cmc
push
mov
lds
fadds
gs
ljmp
push
adc
xlat
dec
inc
shr
popf
jge
sbb
mov
test
pop
pop
pop
mov
pop
or
inc
enter
adc
and
lahf
jbe
call
cmp
cli
sbb
and
add
fisubrl
sbb
xchg
xorb
mov
adc
int3
push
and
inc
ja
shl
ret
nop
icebp
push
stos
mov
sub
mov
pop
insl
fstpt
xor
mov
xchg
pop
dec
or
push
movsl
adc
or
cmp
cmp
and
mov
dec
lret
pop
sbb
inc
xchg
int3
mov
outsb
stc
fwait
and
out
test
jbe
testl
sbb
ficoms
jp
inc
adc
or
out
ja
mov
lods
aad
fxch
jno
ja
dec
lds
sbb
out
insl
push
mov
sahf
inc
popl
testb
adc
loop
push
mov
mov
cmc
xchg
pop
in
data16
cmpsl
add
scas
nop
in
shll
mov
rol
cmpl
lds
stos
mov
ret
mov
jb
imul
pop
sbbl
adc
pop
icebp
inc
mov
mov
adc
in
add
popa
cmpsl
imul
add
sub
addl
pop
pop
push
fimuls
jne
fisubs
fistpll
divb
mov
stos
ret
movsl
dec
jg
test
jmp
scas
inc
add
pop
mov
imul
int3
inc
jg
repz
mov
sub
repnz
xor
mov
ja
cmpsb
or
push
dec
mov
in
jno
sbb
cmpsl
mov
sbb
sub
mulb
dec
or
sbb
lret
sbb
daa
xor
sbbb
test
repnz
jbe
cmp
int3
mov
fsts
clc
test
and
bound
add
sub
in
xor
inc
jmp
xchg
call
sbb
xchg
outsb
xor
xor
pop
movsb
addr16
ja
xor
ds
cmp
and
push
push
je
out
es
sbb
das
xor
mov
jecxz
test
dec
jns
faddp
pop
rcl
out
testl
ss
sub
cmp
loope
cmp
inc
lea
xchg
xor
adc
jne
fildll
dec
fcoml
mov
mov
into
adc
aam
inc
sti
add
mov
xor
out
bound
in
into
clc
fcmovnbe
pop
in
cs
sub
loope
inc
mov
mov
push
cmc
and
jae
inc
fstpt
push
inc
je
mov
pandn
cld
jnp
pop
push
hlt
lahf
jne
sbb
cmpl
ficomps
or
push
iret
adc
mov
jns
inc
jle
push
xor
add
inc
insl
arpl
sahf
popa
pushf
push
push
sahf
loopw,pn
hlt
push
xchg
mov
shrl
call
xor
mov
shrb
cmp
sub
in
xor
xchg
adc
or
in
adcb
jnp
negb
cs
push
insb
dec
mov
jmp
xor
out
repnz
xor
dec
es
pop
rorb
jno
sbb
mov
sbb
jae
in
outsl
inc
test
out
push
les
scas
fisttpl
xchg
fstpl
dec
jle
mov
and
mov
cmp
cmp
or
cmpl
jp
orl
xchg
pushf
mov
shr
push
sti
stos
in
mov
inc
mov
pop
dec
jne
jns
cli
aad
div
xchg
subb
or
cld
rcr
or
int
fwait
mov
stos
mov
adc
cmpsl
lock
pop
scas
lahf
jb
sub
fmul
add
cmp
out
fdivrl
or
aaa
daa
xor
mov
cmp
loope
or
sbb
push
adc
xor
push
mov
cmp
jns
mov
adc
movq
adc
adc
loop
loop
bound
loope
test
sti
inc
adcb
jg
jle
imul
stos
dec
cmpsb
fucomi
dec
mov
es
lods
test
insl
ficoml
lods
gs
data16
adc
mov
js
shrb
or
adcb
in
jne
adc
xlat
mov
loop
lds
and
sbb
xchg
xchg
jnp
add
cltd
xchg
jmp
push
push
loope
lods
aas
cli
push
cmc
or
sub
roll
push
push
add
iret
sub
xchg
data16
stos
fwait
xchg
add
mov
jb
test
outsb
ss
add
mov
jo
mov
push
scas
mov
mov
outsl
in
mov
push
sahf
jecxz
sahf
movsb
sahf
xchg
mov
divb
xor
cmpl
addl
adc
inc
cmpsb
xchg
call
mov
xchg
iret
ret
sub
or
adc
in
mov
xlat
mov
sbb
pop
icebp
push
ds
mov
push
inc
out
pop
pop
mov
mov
arpl
test
push
mov
jmp
cmpsl
jp
sub
insb
out
test
cmp
loop
pop
cmp
cltd
iret
pop
dec
dec
nop
bound
pushl
sbb
or
cs
ds
andl
push
adc
test
aad
notb
out
out
das
dec
sahf
movsl
das
jbe
cs
mov
unpckhps
mov
ficompl
test
jnp
les
daa
das
out
pop
stos
jmp
and
mov
xlat
nop
dec
scas
and
mov
sti
loope
jmp
stc
aam
and
mov
lret
xchg
pop
cli
movsl
lock
mov
mov
movsb
mov
insl
sahf
inc
cs
pop
insl
ret
and
fstl
cwtl
cmpl
jl
or
xchg
cmc
das
loope
ja
sbb
fisubs
addl
das
sbb
repz
inc
cmp
mov
and
mov
aas
xchg
xor
sbb
ss
loop
addr16
and
sub
pop
inc
push
jbe
roll
daa
pushf
push
fs
lea
aam
mov
jle
push
ljmp
dec
push
push
mov
ss
mov
stc
or
repz
and
adc
or
stc
data16
xor
cmpsl
movsb
fxch
xchg
and
cmp
push
sbb
leave
es
and
mov
lret
loop
jnp
sahf
fisttpll
xor
fsubs
pinsrw
stos
xchg
call
pushf
push
mov
pushf
xchg
aaa
pop
dec
lret
addr16
pushf
mov
sub
mov
movsb
lahf
push
mov
xor
mov
aaa
mov
sbb
paddq
xor
aaa
inc
test
xlat
dec
and
mov
jb
jno
mov
pop
xchg
fcomp
lock
sbb
icebp
xchg
repnz
pop
xor
dec
xchg
mov
pop
add
sub
mov
test
movsb
jb
jae
fiaddl
or
xor
fcmovu
and
and
repz
adc
or
or
mov
or
pop
sbb
xchg
repnz
xor
mov
sub
cmp
cmp
dec
or
sub
ljmp
bnd
sbb
xchg
xchg
sbb
fldcw
xor
xor
mov
loopne
pop
mov
pop
sti
add
inc
adc
cmp
mov
push
sbb
test
stos
aad
add
loopne
xchg
sbb
mov
test
lds
movsl
inc
cmc
out
dec
mov
push
push
iret
inc
fistl
pop
fidivs
mov
call
outsl
aas
out
sbb
sbb
mov
cmp
inc
lock
and
and
pop
pusha
sbb
pop
in
or
mov
sbb
outsl
test
xchg
or
ffreep
xchg
jmp
xor
sti
enter
add
stc
arpl
and
negb
xor
mov
std
ss
sbbb
sarl
pop
push
push
test
ljmp
js
shll
shl
pop
inc
mov
arpl
mov
fdivrl
push
push
mov
ret
and
mov
pop
movsl
inc
or
cld
jp
les
push
lret
icebp
xchg
lods
xchg
or
dec
imul
jne
daa
je
popa
shlb
clc
mov
fucomp
addr16
add
arpl
orl
sbb
les
shlb
mov
jns
pop
push
mov
and
mov
mov
bound
out
shll
loope
ljmp
pop
in
mov
outsl
add
xchg
repz
imul
jge
imul
jns
push
sbb
and
cmc
inc
and
sub
jb
inc
nop
std
mov
inc
push
ds
outsb
pop
insb
and
in
pop
xor
aam
xchg
lds
loope
mov
gs
lret
hlt
sbb
repnz
push
xorl
ja
out
xlat
lahf
dec
sub
push
fwait
dec
out
aad
sub
sub
sbb
sub
or
fstpt
push
inc
jmp
jmp
mov
outsb
mov
inc
xchg
mov
cmpsl
repz
mov
pushf
test
incw
in
pop
sub
loopne
pusha
les
push
cltd
jno
mov
mov
jg
mov
insl
sub
jae
data16
aam
mov
cs
jge
adc
cmp
mov
or
roll
mov
push
cmp
xchg
adc
jl
test
and
mov
mov
pushf
outsl
cld
push
push
xchg
xchg
adc
add
gs
or
ss
dec
add
rclb
fs
dec
jbe
mov
dec
jne
mov
dec
mov
ja
insl
in
leave
fidivrs
test
lret
push
pop
loope
mulb
sub
lds
cmc
mov
aas
leave
cmc
and
cld
jno
and
sbb
or
je
repz
rolb
cmp
lods
xor
lods
mov
dec
mov
xlat
mov
mov
repnz
push
outsb
cmpsl
call
mov
lcall
and
movsl
int
cmp
inc
pop
inc
xchg
pop
mov
add
xchg
stc
sub
or
ljmp
mov
outsb
stc
shll
call
nopl
pop
fs
xor
repnz
pop
clc
lret
push
sub
cli
cwtl
xchg
add
std
aas
ljmp
add
xor
pop
inc
sub
mov
lds
pop
lds
jecxz
push
sub
pusha
sahf
pop
sbb
or
lahf
fucomip
fbstp
add
xor
rclb
push
add
dec
jecxz
bound
mov
je
or
sub
incl
shl
sbb
ret
pop
jo
decl
loopne
mov
ds
and
mov
push
ss
mov
aaa
sti
push
mov
dec
insl
inc
sub
sub
or
std
in
push
fnsetpm(287
mov
pushf
cs
aas
mov
stos
push
jle
xchg
outsl
lods
jbe
mov
pop
and
divl
sbb
pop
or
adc
test
rcrl
or
adc
rorb
hlt
lret
lds
test
mov
mov
cmp
sbb
mov
pop
sub
mov
add
sahf
ficompl
jmp
xor
pop
outsl
jae
repz
lods
mov
clc
jl
mov
mov
jo
jb
jbe
pop
fwait
int3
dec
push
fnsave
call
and
mov
inc
pop
dec
aam
pop
or
loop
jmp
sbb
add
jno
inc
stos
jmp
test
leave
inc
adc
xchg
pop
loope
aaa
pusha
push
ficomps
jbe
adc
sub
cwtl
ret
test
int
jo
push
mov
push
pop
cmp
pushf
outsb
jbe
mov
clc
push
mov
push
lock
in
addb
movsb
out
jl
xchg
cwtl
jp
rcll
call
fsubl
lock
inc
mov
sbb
push
cmp
pop
cmp
in
adc
ret
rcrb
mov
int
in
xchg
pop
fsts
mov
std
subl
sbb
jb
add
jge
inc
icebp
fcoml
jge
jne
mov
lret
inc
inc
mov
push
mov
and
dec
pop
in
inc
xor
mov
cmp
push
rsqrtps
sub
pop
jo
loopne
sahf
sbb
push
push
pushl
dec
fistps
mov
mov
clc
pop
mov
loop
je
adc
imul
adc
cmova
mov
nop
in
mov
cmc
lds
repz
push
xor
mov
arpl
cmp
lds
add
inc
cs
cmp
das
or
cmp
or
call
xor
inc
fisttpl
xchg
faddl
jmp
xor
sub
mov
aaa
cld
pop
addr16
sub
out
pop
xchg
or
mov
imul
ret
and
cmp
sbb
outsb
stos
ds
jg
xchg
cmp
and
pushf
rcl
nop
pop
std
in
lcall
push
pop
ret
fnstcw
mov
add
xchg
xchg
push
stc
xor
jp
add
aad
xchg
and
dec
mov
jnp
scas
test
ret
aam
jb
cmp
xchg
outsb
xchg
insb
xchg
pop
mov
out
jge
or
sti
xor
xor
push
push
je
insb
cmc
mov
mov
in
rcll
sub
mov
adc
cwtl
dec
pop
mov
mov
sbb
lret
cmp
jns
xor
inc
and
ljmp
mov
int
jg
inc
xchg
push
les
xchg
out
mov
xor
pop
push
shll
pop
aad
fisubs
fidivrs
and
or
cli
fiadds
xor
clc
jmp
clc
cmp
movsb
push
or
rcl
nop
imul
popl
sti
pop
sbb
es
mov
in
mov
icebp
clc
lea
dec
pop
test
enter
imul
lods
sub
adc
dec
dec
pop
enter
adc
sbb
aad
push
pop
push
fnstcw
popa
mov
movsl
test
mov
pop
mov
sbb
aam
gs
jbe
pop
sub
mov
inc
mov
movl
insl
xchg
fcomps
xorb
jg
cmp
jecxz
out
cmp
das
das
or
push
sub
jle
test
dec
xor
mov
aam
xchg
aaa
mov
loope
out
mov
fstpl
insl
or
mov
jbe
push
or
out
and
jle
adc
xlat
call
ss
icebp
ljmp
test
ret
mov
mov
and
out
adc
and
push
push
inc
fdiv
fidivs
jno
call
sbb
sub
cmp
mov
mov
lds
repnz
daa
out
jg
inc
rorl
jecxz
dec
push
std
adc
mov
mov
pop
les
jg
cmp
icebp
xchg
je
popf
sbb
xlat
fs
add
cs
in
loopne
mov
push
cs
movb
push
or
std
mov
add
jae
int
jne
sbb
adc
stos
xor
sbb
fistps
mov
je
sti
push
inc
mov
sub
push
lds
push
adc
dec
aad
aam
loop
hlt
push
ret
pop
sub
or
adc
gs
mov
into
sbb
jle
andb
subl
fst
push
repnz
inc
and
push
ss
fcmovnu
ja
add
mov
push
push
xor
dec
cltd
jns
inc
cmpb
xor
jmp
loopne
mov
fmuls
pop
cwtl
mov
lds
push
mov
mov
scas
cli
pop
and
sahf
push
xchg
push
shrb
btc
loopne
out
push
sub
cmp
cmpsl
sarl
jecxz
or
fwait
repz
lcall
or
dec
mov
ljmp
fldl
popf
xchg
inc
fwait
cwtl
sub
xchg
addr16
jg
push
inc
fmuls
sbb
repz
je
test
loop
mov
xchg
or
fs
shll
dec
push
fcmovu
xchg
and
rclb
sub
rcrb
jg
mov
dec
scas
psrad
inc
popa
mov
lock
loope
jecxz
mov
mov
ftst
arpl
pop
pop
sbb
mov
pop
pop
sbb
adc
and
cwtl
pop
and
iret
cmpsl
inc
or
lahf
push
test
stos
adc
pop
jmp
movsb
dec
jno
ret
sub
push
inc
leave
addr16
dec
push
mov
sahf
jno
push
sbb
int3
stos
loope
clc
push
mov
cmp
dec
mov
and
fidivrl
mov
xchg
jmp
cld
pop
lds
icebp
mov
loop
sub
sbb
jecxz
add
add
or
dec
mov
ss
and
stos
stos
aad
adc
popf
inc
xchg
jecxz
add
inc
out
sbb
inc
and
enter
push
push
pop
inc
rorb
hlt
add
dec
les
mov
or
push
test
adc
dec
fcoml
push
test
fbstp
push
mov
or
out
dec
cld
mov
or
jae
scas
sbb
out
mov
add
clc
lcall
cltd
or
int
mov
jmp
or
sbb
cmc
mov
arpl
xor
mov
xchg
pop
rol
push
dec
push
push
aam
or
push
ds
jae
roll
mov
or
lahf
jp
mov
xchg
dec
pop
ret
lahf
sahf
push
pop
sarl
shlb
push
mov
inc
sub
mov
push
es
mov
in
xor
mov
lds
mov
push
sbb
hlt
adc
mov
pop
push
fidivl
call
pusha
mov
cmc
push
cmp
pop
pop
aam
inc
jmp
cmp
stos
repnz
aad
ja
dec
out
fildl
sub
and
loopne
insb
mov
jne
xorb
addr16
mov
ljmp
dec
push
mov
pop
lods
fcomip
mov
xor
xchg
cmp
es
out
adc
mov
cmp
imul
jae
test
clc
fstpl
outsb
loope
sub
cld
adc
cli
scas
lret
sbb
sbb
mov
andb
xor
scas
pop
ljmp
scas
fs
outsb
mov
lods
fsub
sbb
and
clc
movsb
stos
shl
mov
outsl
push
add
inc
inc
sub
mov
jne
test
pop
jge
xchg
jle
fidivl
push
adc
jp
xor
and
xchg
mov
cmp
xor
shll
das
sbb
movsl
dec
rclb
pop
sub
rcr
xchg
and
push
mov
lods
mov
pop
cmp
sub
subb
adc
stos
inc
sbb
mov
jecxz
add
fwait
in
outsl
push
jl
cmp
jmp
jno
jl
sbb
test
push
mov
lds
pop
mov
push
xchg
add
int
add
jmp
lret
lcall
sbb
mov
adc
popf
inc
jp
jmp
pop
adc
push
rcrb
pop
pop
push
sbb
xchg
cmp
fistpll
inc
adc
scas
enter
iret
cmc
idivb
inc
pop
cld
cld
stc
inc
sbb
sub
outsb
shll
das
int3
adc
std
sub
jae
mov
fs
sbb
pop
mov
push
jnp
mov
int
ja
pop
push
popa
adc
dec
sub
inc
loopne
push
add
test
sub
push
js
pop
push
jae
insl
dec
dec
loopne
pop
pusha
aas
rcrb
mov
lds
push
or
rorl
jae
sbb
ret
and
jge
adc
or
fwait
outsl
call
cmp
cmp
cli
mov
inc
xor
or
mov
in
jo
das
shll
xlat
mov
cmpb
mov
cmp
and
cmpl
mov
xor
loop
pop
fistpll
cmp
enter
jl
jmp
pop
imul
cmp
fnstenv
out
cmc
ljmp
mov
jmp
xchg
leave
pop
push
sbb
in
repnz
mov
cltd
daa
test
lahf
fucomi
lods
test
dec
cmpsb
rolb
ljmp
mov
ljmp
cmp
lods
push
add
sub
lret
pop
out
dec
cltd
imul
cwtl
mov
mov
dec
mov
lcall
cmp
push
sub
cwtl
imul
sub
ret
cmp
adc
sbb
insb
jl
xchg
rcrl
shlb
ja
inc
rcll
sbb
mov
mov
xchg
mov
inc
lea
repnz
push
pop
dec
push
mov
and
lds
scas
mov
jb
mov
inc
mov
cmp
lock
pop
aad
repnz
mov
jecxz
test
pop
daa
dec
popf
idiv
or
sahf
movsb
mov
dec
or
imul
sub
cmp
xchg
outsb
fnsave
int3
movsl
rcrl
adc
adc
mov
mov
fs
inc
pop
jp
push
flds
sbb
inc
or
outsl
sbb
push
mov
push
arpl
cmc
and
pop
add
mov
sub
lcall
fisubrs
dec
daa
mov
push
bswap
mov
inc
pushf
out
mov
lods
inc
aas
or
adc
sbb
repnz
inc
pop
or
sti
add
mov
cmpb
cwtl
jae
in
and
xchg
mov
movsb
dec
ret
push
cmpsl
adc
rcll
cmp
ss
cmp
push
cmpsb
stc
inc
xchg
dec
sub
jno
in
sbb
into
cli
in
stos
mov
pusha
jmp
pop
xchg
daa
mov
in
push
fcoms
jae
scas
jae
xor
push
incl
iret
dec
push
daa
ja
sub
fwait
adc
clc
movsb
mov
mov
mov
sarl
jne
aad
xchg
push
cmp
sbb
inc
jle
adc
leave
xchg
in
pop
pop
lds
sahf
or
add
cmpsb
and
add
fucomp
stc
sub
popa
push
cmp
jbe
ret
popa
shl
xchg
ret
fisubrl
xchg
daa
js
push
lea
es
fidivs
and
inc
push
jecxz
lock
aam
jo
sbbl
sbb
lret
in
pushf
addb
mov
dec
push
lds
test
icebp
mov
aam
in
cmp
add
sub
mov
mov
sub
adc
sub
adcl
sub
mov
ret
fs
mov
mov
notl
push
sbb
xor
fsubs
fistpll
out
pop
js
jmp
bound
mov
cs
mov
sub
cli
notrack
xchg
stc
and
into
ljmp
movsl
pop
cmp
cmp
pop
sahf
sbb
repz
dec
xor
clc
xchg
pop
mov
lret
xchg
clc
outsb
or
mov
rcll
add
out
mov
add
lcall
into
shlb
divb
dec
outsb
pusha
mov
mov
cli
and
aas
les
shl
cwtl
rcll
incb
add
jp
pop
cmp
pop
xchg
add
fwait
movswl
jae
std
incl
loop
push
mov
mov
cmp
int
dec
sar
mov
push
jnp
cli
adc
or
faddl
out
jl
inc
ffree
xchg
lcall
nop
mov
mov
shrb
sbb
or
jo
mov
aas
push
fstpl
xor
inc
xlat
dec
outsb
addr16
shrl
pop
fbstp
lret
cmp
leave
sar
mov
xchg
gs
add
mov
inc
loopne
or
mov
es
pop
mov
shll
push
icebp
push
mov
mov
mull
stc
fbld
push
mov
adc
punpckhdq
mov
loope
mov
jg
xor
in
inc
stos
mov
repnz
fs
popa
enter
icebp
es
test
add
fcomip
jp
bound
push
mov
cmp
cmp
data16
adc
hlt
dec
push
mov
int
test
lods
out
andb
scas
lds
cwtl
lods
xor
xchg
in
jecxz
cmp
lods
pop
fstl
mov
jo
adc
push
shrl
in
mov
std
popa
scas
inc
stc
add
pop
mov
lahf
fmulp
cmp
gs
sub
gs
clc
out
sub
ficomps
push
fisubs
test
pop
pop
or
push
xchg
or
int3
nop
and
into
in
loopne
pop
nop
sbb
shlb
js
fiadds
stc
int
mov
add
add
setae
jl
cmp
jge
es
xchg
fstl
add
stos
sbb
data16
sbb
cli
mov
dec
inc
and
stc
cmp
pop
test
xchg
xchg
mov
cmp
nop
in
vcvtdq2ps
dec
movsl
in
shlb
lea
sub
lods
call
inc
in
jae
and
icebp
xor
rcrl
test
push
sbbb
inc
lahf
mov
adc
jne
in
mov
sbb
pop
lock
mov
jbe
mov
scas
aam
adc
in
arpl
imul
js
rorb
shlb
mov
inc
inc
es
sbb
sub
fdivs
out
dec
scas
clc
dec
data16
ret
arpl
cmp
es
jle
orb
mov
xchg
ret
cmp
ss
inc
push
inc
sbb
xchg
sarl
sbb
inc
sbb
pop
dec
in
or
mov
scas
stos
test
les
mov
inc
iret
test
add
mov
mov
mov
adc
lds
xchg
enter
jecxz
xor
inc
pop
dec
push
pop
dec
scas
ds
loop
les
mov
mov
cld
cmp
call
popf
push
test
int
orb
jge
pop
lcall
in
gs
sbb
jge
int
aas
mov
mov
lods
in
ja
adc
int
sub
push
imul
stc
sub
pushf
gs
lock
xlat
call
test
mov
cmpsl
rorl
mov
out
inc
xor
fcompl
adc
jmp
mov
addl
lock
adcb
cld
sbb
adcl
xchg
in
inc
lods
les
je
sbb
leave
adc
jp
into
xor
mov
jge
jle
push
loopne
fbstp
bound
xchg
ds
in
fstl
jno
add
mov
pop
push
adc
or
jbe
sub
into
sub
aas
mov
pop
push
enter
cwtl
adc
aam
clc
fistpl
xor
jae
imul
das
lods
shl
pop
orb
cwtl
mov
lods
pop
push
mul
cmp
sahf
mov
test
ret
cmpsb
add
and
or
sbb
shll
faddl
mov
filds
ret
clc
out
pop
xlat
jg
lea
add
jno
xor
lret
js
push
out
push
pushf
xchg
sbb
adc
xorps
std
xchg
xor
call
sbb
lock
incb
xchg
pop
subb
sahf
cmp
mov
add
xor
xchg
cmp
mov
push
jecxz
pop
or
fnstsw
or
cmp
mov
fs
jl
inc
movsb
sti
cmp
sub
jp
lds
addl
clc
adc
repnz
andb
jp
fwait
sub
mov
xchg
add
sbb
sti
xchg
push
in
push
xchg
mov
out
aad
add
iret
xorb
jns
je
sbb
sbb
fsubl
stos
push
cmp
sbb
sti
popl
fisttps
popf
dec
insb
int
push
mov
jecxz
popa
nop
pop
enter
fldenv
mov
inc
testb
dec
push
or
cmpsb
imull
loope
jle
add
imul
outsl
xor
or
xchg
test
push
add
and
push
arpl
mulb
roll
inc
repnz
inc
adc
xchg
add
shll
sbb
xchg
fadd
jp
mov
jno
and
ret
jl
vpcmpeqw
movsl
clc
push
subl
mov
sbb
push
icebp
mov
cmp
adc
xchg
pop
xchg
jge
or
xlat
pop
mov
xchg
lds
jmp
or
aam
test
fistl
xchg
shll
repnz
or
aam
dec
cmp
inc
or
xor
cmpsl
add
and
jbe
or
lret
push
mov
out
cmpl
jns
cmp
and
pop
in
xchg
mov
sub
pmaxsw
ja
sbb
ljmp
sahf
rorb
jne
sub
jnp
fistpll
xlat
fsubrl
mov
mov
pop
sbb
mov
push
scas
push
inc
repnz
imul
mov
shll
sbb
cmpsb
mov
mov
mov
daa
fsub
call
movsb
xor
xchg
add
popa
cs
outsb
incb
pop
pop
mov
addr16
test
mov
loopne
repnz
fisttpll
sub
xchg
rorb
fwait
int
cltd
push
decl
lods
mov
lods
enter
push
lds
test
leave
xor
jg
loop
and
nop
sbb
dec
mov
mov
lds
or
aaa
pop
out
jnp
mov
pusha
out
lods
jns
add
leave
or
inc
jo
test
push
insb
or
das
jmp
or
jb
sub
lea
cmpsl
subb
push
test
xchg
aad
iret
pop
icebp
inc
add
into
dec
pusha
sub
sahf
xchg
inc
outsl
sbb
enter
and
jb
xchg
outsl
push
dec
loopne
mov
icebp
repz
clc
pop
sbb
fidivrl
sahf
cmpsl
xlat
pushf
cmp
pop
pop
arpl
xor
cmp
aaa
fisttpl
movsl
mov
adcl
in
xor
inc
cmovb
xchg
push
and
ss
cltd
inc
xchg
mov
and
fs
dec
jbe
push
push
cld
mov
add
movl
stos
mov
dec
adc
repz
mov
out
push
popf
in
cmp
leave
jb
loop
daa
mov
jecxz
jg
cmc
push
mov
add
push
dec
cmpl
dec
dec
fyl2x
cmp
mov
punpckhwd
xor
repnz
fs
cltd
ftst
lock
sbb
cwtl
int
dec
cld
inc
rorb
pop
sar
mov
insl
pop
xchg
vmovsd
or
sbb
gs
sub
pop
sahf
mov
data16
test
xor
jnp
test
popf
sub
fwait
add
test
cltd
ds
xchg
jb
xchg
sbb
std
imul
and
inc
cli
cmp
xchg
cmp
xchg
shl
leave
negl
cwtl
inc
fldenv
inc
mov
repz
call
jl
imul
dec
mov
dec
ret
adc
or
and
jg
sbb
cmpsb
divl
idivl
cmp
dec
std
rcll
gs
shll
aaa
xchg
cmp
popf
pop
xchg
xchg
in
cmp
rolb
pusha
or
cmc
rorl
sub
out
inc
push
imul
sub
popf
mov
les
ds
lcall
icebp
xchg
inc
out
cmp
add
movsb
test
adc
cs
mov
scas
xchg
dec
mov
jns
stos
jb
dec
dec
xor
dec
and
cmp
adc
or
adc
ret
cmp
jno
cmp
and
push
mov
or
fs
mov
push
jb
dec
std
outsl
mov
and
test
fcmove
sub
sub
cmpsl
cli
daa
fcmovnbe
test
xlat
lock
pop
mov
xlat
test
adc
xchg
cltd
cmp
cmp
jp
mov
sub
xchg
xchg
inc
stos
jle
ror
sbb
repnz
test
sbb
mov
pop
cmc
mov
and
addr16
jge
dec
inc
push
mov
repnz
jg
dec
imul
imul
call
sbb
dec
rolb
test
inc
pop
les
mov
add
aad
sub
rcrl
mov
jge
daa
xor
jl
push
rcl
cmp
sub
aaa
sbb
mov
xlat
pop
lods
sub
pop
in
sbb
push
inc
sti
mov
jle
mov
and
and
sbb
xchg
push
fnstcw
push
pop
scas
pop
sbb
jo
sbb
decl
in
cwtl
scas
sub
mov
mov
sub
pop
push
popa
ret
cmpsl
into
je
cld
rcl
adc
pop
negb
out
clc
sub
cmpsb
arpl
mov
andb
dec
shl
out
faddl
and
and
jb,pt
inc
test
fsubs
sbb
xor
cmpsl
les
stos
cltd
sub
into
sbb
shrb
int
loop
cmp
rcrb
fucomip
lods
pop
jbe
sub
xchg
int
cmc
mov
mov
add
or
adc
repz
test
pushf
cmp
lret
or
ds
fiadds
stos
dec
lret
popa
push
aad
jo
hlt
cld
hlt
mov
gs
test
gs
pop
push
leave
pop
mov
sub
sub
sti
pop
stc
mov
ljmp
and
lcall
pop
lea
in
imul
push
loope
add
mov
cltd
sub
ljmp
sub
les
out
dec
adc
hlt
push
push
mov
push
xor
rcl
cmp
ret
fwait
or
xor
into
pop
fnstenv
xor
jmp
push
mov
ret
lods
and
stos
sub
shlb
cmc
mov
mov
cld
aas
lcall
jbe
pop
hlt
ljmp
insb
gs
lret
int3
jnp
mov
cmp
xchg
inc
dec
stos
ja
mov
pop
sbb
or
push
or
rclb
ja
mov
dec
fisubs
fsubs
and
xorb
imul
mov
ss
mov
daa
in
fwait
push
jo
mov
sti
dec
xor
cltd
sti
fs
and
cwtl
fbld
and
enter
or
pop
and
jno
xlat
cmpsb
fbld
xor
mov
dec
jle
push
mov
push
int3
push
orl
lret
add
fisttpl
xlat
fs
mov
push
test
std
arpl
rorb
or
stos
fwait
sahf
pop
faddp
mov
ljmp
scas
cmp
cli
xor
ljmp
enter
das
mov
fwait
dec
adc
andb
push
pop
xor
insl
lods
or
inc
add
xor
xor
sub
push
jle
lret
push
je
test
mov
pop
imul
aam
sbb
out
nop
repz
clc
pop
fwait
adcl
out
cmp
inc
cli
mov
pop
xchg
into
xor
push
icebp
fists
inc
jb
pusha
test
call
inc
adc
out
dec
push
popf
test
adc
pop
adc
out
ss
adc
cltd
add
xor
jl
and
push
xchg
pop
sbb
sbb
adc
and
sbb
stc
les
dec
cmp
adc
pop
cli
mov
loope
fsts
setno
stc
ds
ret
cmp
rolb
push
push
imulb
mov
mov
aad
or
movsl
das
stos
cmc
shl
lret
cld
and
cmp
out
fwait
call
inc
and
leave
pop
xor
sub
inc
adc
lods
cli
cmp
popf
mov
pop
jg
in
push
xor
dec
das
pop
cmp
push
cwtl
stc
push
mov
sub
es
xchg
stos
mov
fs
push
mov
loop
fcomp
mov
xchg
ret
jns
jl
xchg
or
imulb
xchg
xor
cld
and
pop
les
mov
xor
inc
mov
cmc
mov
jbe
xchg
insb
movsl
sub
sub
sub
loopne
jbe
aas
scas
mov
add
jmp
popf
jns
dec
dec
jb
xlat
add
gs
ja
xor
outsb
jo
mov
daa
gs
rol
pop
pop
fwait
loop
adc
pop
mov
repnz
push
les
les
je
insb
mov
sbb
bound
mov
testl
mov
cwtl
push
jnp
movsb
jns
das
push
insb
adc
out
mov
pop
jo
testb
test
movsl
xchg
mov
mov
pop
mov
cli
les
mov
xor
mov
push
jge
xchg
pusha
and
std
mov
popf
out
stos
adc
pop
xchg
loopne
test
rcll
daa
ja
adc
movsl
dec
repz
adc
cmc
repz
sub
sbb
adcl
xor
adc
shrb
repnz
mov
sub
scas
mov
push
cs
in
fbld
mov
sarl
jo
lods
inc
or
push
pop
popa
ss
jge
add
push
or
mov
aam
outsl
sub
sub
pusha
fldcw
bound
push
push
mov
push
sub
mov
loope
adc
cmp
xchg
subb
test
ret
mov
scas
lods
cmpsb
arpl
sbb
jg
xor
or
pushl
adc
scas
dec
sahf
mov
cld
mov
stos
inc
push
nop
shll
fs
or
test
lds
cli
adc
inc
arpl
mov
into
int
mov
sub
cmp
adc
sub
scas
sub
xchg
imul
imul
jno
mov
test
add
xchg
ljmp
test
xchg
dec
stos
cld
test
clc
and
cld
mov
scas
cli
icebp
pushf
jmp
sub
add
js
lock
mov
mov
aad
xor
in
jp
sahf
fldpi
cwtl
in
stc
test
insb
mov
xor
xchg
neg
xor
mov
and
xchg
xchg
cmp
mov
mov
push
push
lds
xor
add
pusha
pop
jae
popa
inc
mov
mov
and
adc
pop
pop
pop
mov
icebp
pop
add
jecxz
push
aad
leave
add
mov
push
dec
inc
sub
fwait
cmp
inc
add
loopne
or
sahf
push
das
or
in
sbb
xor
push
or
pusha
int3
stos
inc
cmp
push
std
gs
mull
or
adc
cmp
rolb
adc
cmp
sbb
push
mov
cmpsl
loope
pop
add
ss
jbe
rol
mov
mov
and
js
test
or
push
into
xchg
out
adcl
cwtl
test
repnz
mov
add
sbb
into
mov
push
xor
mov
jl
or
xor
jae
movb
xchg
lcall
sub
mov
popf
movsbl
popf
xchg
mov
fnstcw
int3
cmp
sub
icebp
pop
xchg
pop
mov
mov
push
mov
fnstsw
shr
lea
pop
push
xor
fstpt
into
outsb
add
adc
mov
cmpsl
xor
adc
sti
imul
cmp
jbe
das
pop
mov
xor
outsb
js
jl
dec
pop
inc
inc
icebp
ret
push
dec
push
clc
adc
adc
cli
cltd
vpinsrw
xor
xor
mov
outsl
cmp
rcll
pusha
das
mov
jno,pn
call
repnz
fdivrp
xor
pop
std
test
xchg
xchg
pop
shlb
dec
repnz
jmp
or
sti
mov
cli
rolb
ja
jno
bound
les
or
sbbl
mov
imul
das
dec
xor
and
test
test
or
leave
out
jecxz
push
sbb
dec
mov
sbbb
push
dec
push
pop
fsubl
aaa
leave
mov
mov
sbb
xor
lret
cmp
mov
push
mov
mov
adc
pop
mov
testl
mov
gs
icebp
rclb
xor
cmp
sub
stos
or
cmp
add
mov
inc
shrl
cs
bound
popa
aas
mov
insb
jmp
mov
andb
or
sub
mov
lret
add
dec
push
xchg
sub
adc
pop
and
mov
push
adc
sbb
cwtl
stos
jno
data16
repz
lcall
nop
mov
scas
ds
adc
shlb
pop
aaa
outsb
ret
sahf
push
out
or
inc
scas
mov
icebp
test
mov
cmp
mov
pop
rclb
cmc
sbb
pop
mov
das
xlat
xor
into
add
stos
and
add
jno
movsl
sbb
rclb
int3
xchg
arpl
sub
arpl
dec
leave
xor
inc
dec
ret
mov
lods
xor
sbb
sbb
testb
pop
cmp
cmp
push
jmp
pop
xchg
jnp
jbe
adc
test
sub
shr
xor
ss
clc
sbb
ds
fildll
sbb
hlt
push
pop
iret
leave
inc
mov
mov
lcall
jns
inc
push
loope
push
or
arpl
sub
pop
lret
test
or
inc
sub
aam
test
adc
ret
movsb
iret
adc
lret
andw
sbb
pop
test
rol
mov
bound
out
jg
or
dec
push
and
pusha
addl
shlb
andb
fldl
jmp
loope
out
pop
jl
sbb
loope
inc
push
mov
fdivrl
fmull
stos
dec
inc
sbb
sub
test
sbb
out
and
mov
and
jge
sub
aam
add
xor
inc
sub
add
push
xchg
mov
in
pushf
jmp
mov
loope
lock
scas
cmc
mov
pusha
aaa
mov
dec
mov
cmp
mov
std
sub
xorb
sub
mov
es
adc
call
in
jo
mov
int3
shlb
mov
push
xchg
sub
adc
add
jg
fisttpl
fucomi
das
cmpsb
stos
ret
inc
adc
mov
xor
outsl
aad
lcall
nop
push
dec
daa
cltd
shll
xchg
sbb
enter
xor
mov
test
fisubrl
mov
std
and
repnz
flds
mov
add
sbb
aam
ret
jle
push
sti
xchg
pop
int3
add
mov
mov
dec
jo
adc
scas
fwait
jle
and
push
cmp
out
out
xor
xchg
fcmovnb
dec
push
push
mov
ret
xchg
cmp
shr
out
adc
fdivrl
ja
jp
add
repnz
dec
mov
or
push
pop
popa
jo
jbe
xor
xchg
pop
ja
inc
les
notb
imul
fwait
ret
jnp
or
jg
lds
pusha
xor
sbb
outsl
xor
mov
inc
add
xchg
and
pop
adc
mov
imul
aas
loope
cwtl
into
mov
fwait
xchg
push
popa
cmp
push
push
cmpsb
pop
lock
jne
jae
xchg
sub
bound
lret
aas
mov
rclb
sbb
and
loopne
jb
xor
pop
arpl
jns
push
in
xchg
jne
xor
fimull
int
mov
xor
push
mov
loop
setnp
sub
fldl
loope
sub
push
mov
loopne
stos
xlat
data16
mov
cmp
test
ja
xchg
jmp
push
testl
in
ss
push
push
out
out
or
add
inc
push
dec
push
sarb
imul
and
dec
dec
clc
adc
inc
loope
inc
ljmp
push
out
cmpsb
push
mov
test
push
push
inc
mov
sub
mov
mov
xor
add
cmp
repz
in
dec
inc
bound
cmpsl
jns
nop
mov
jne
xor
arpl
stos
jnp
push
dec
xchg
adc
fst
repnz
mov
jmp
ffree
pop
arpl
inc
imul
in
addr16
sub
jmp
scas
bound
lret
inc
xor
jp
les
rcll
mov
xor
out
stos
mov
cmpl
pop
pusha
ret
xor
insl
testb
fadds
lds
cmpsb
cmp
rorb
jne
mov
adc
lds
cld
push
add
xlat
stos
imul
icebp
mov
dec
out
les
xchg
mov
xlat
or
je
bswap
mov
es
push
jb
ljmp
leave
adc
ss
sbb
out
add
xlat
jmp
xor
add
dec
enter
stos
inc
scas
dec
and
stos
fidivrs
ss
jmp
shrl
jnp
scas
out
xor
mov
cli
and
out
int3
mov
stc
mov
mov
or
testl
xchg
cmp
xchg
xor
and
stos
in
data16
pop
cli
test
push
sub
mov
xchg
iret
iret
fidivrs
and
sbb
xchg
mov
sbb
cli
dec
add
push
mov
das
mov
ja
out
in
cmp
mov
jp
jno
pop
lds
inc
add
push
les
movsb
cmp
mov
pop
es
roll
lea
aam
sub
adc
leave
fstpt
inc
adc
cmp
push
pop
loop
push
lahf
stc
std
pop
jo
cmc
fidivl
daa
stos
xor
jno
add
adc
ds
dec
dec
subl
add
bound
mov
sti
or
lahf
ljmp
movntps
adc
sbb
fnsave
repz
movsb
mov
inc
cli
and
jb
inc
loope
push
push
lods
jp
insb
bound
push
pop
fldt
frstor
cltd
fadds
popf
jo
and
add
subl
jae
or
fs
pusha
out
xor
xlat
jo
into
int3
push
dec
fdivrp
sub
mov
mov
out
in
mov
sbb
xchg
and
or
xchg
movsb
sub
rclb
fs
in
dec
dec
mov
add
jns
mov
popa
icebp
pop
idivl
push
and
sub
aad
push
test
xor
lock
cwtl
jb
leave
mov
mov
adc
push
rcrb
mov
rol
cmp
and
fildll
push
enter
rcll
mov
enter
push
or
push
out
rorb
shlb
fs
inc
fstp
jns
sub
sub
lock
fs
mov
cmp
pop
hlt
xchg
pop
push
push
cld
js
lods
jl
into
pop
into
pushf
fwait
enter
icebp
pop
or
clc
xchg
cmp
fwait
ljmp
xor
sbb
xor
sti
pop
call
sub
dec
sub
pusha
ret
loope
clc
sahf
mov
jge
push
mov
mov
rol
aam
adc
mov
cs
pusha
jbe
xor
jle
cwtl
test
pop
cmp
out
mov
add
adc
adcl
or
fs
ret
rcrb
jae
inc
movsl
bound
xchg
push
call
sub
int3
call
inc
fmul
adc
push
and
scas
push
aad
mov
clc
pop
cs
sbb
and
fadd
pop
subb
mov
push
cmp
jne
mov
sbbl
imulb
cmpsl
aas
lret
adc
ficoms
icebp
jb
and
icebp
ror
jne
pop
mov
sbb
xor
mov
xor
sub
mov
dec
dec
and
sbb
cmp
xchg
daa
es
aad
subb
mov
mov
xchg
xchg
pop
mov
mov
or
pop
and
ds
mov
xor
mov
loopne
mov
sbb
or
dec
in
test
or
clc
and
xchg
jg
inc
rcll
mov
loope
and
negb
in
inc
push
scas
mov
sub
cmp
ss
mov
pop
enter
leave
loope
mov
loopne
cmc
lret
stc
adc
lcall
pop
inc
add
xor
rcr
dec
xchg
push
cmp
stos
test
inc
std
sbb
icebp
xchg
filds
inc
fwait
in
cmp
push
lret
adc
scas
out
sbbb
mov
nop
clc
lea
in
and
sahf
inc
jb
xchg
imul
lds
mov
aaa
pop
jnp
jae
fisubrl
pop
test
cmpsb
test
cmp
shlb
add
lret
pusha
xor
ljmp
pop
into
or
inc
call
ljmp
adc
daa
add
sarl
jno
cmp
mov
lcall
inc
sti
pop
sbb
stos
adc
pop
and
sbb
mov
aas
mov
sub
xchg
xchg
adc
adc
mov
adc
lcall
stos
sub
scas
and
dec
lods
lcall
shl
stos
dec
subb
adc
mov
aaa
mov
cmpsl
rcl
roll
mov
arpl
sbb
mov
dec
stos
ds
fwait
jns
popf
adc
or
inc
bound
jb
xchg
inc
std
pop
je
ret
int3
cmpsb
mov
fwait
js
or
push
inc
dec
sub
bound
mov
xor
rcr
add
xor
cmp
test
sbb
mov
hlt
repz
xchg
pop
addb
int
leave
and
dec
lret
fmulp
cmpsb
xor
data16
fisubrl
pop
mov
nop
sbb
fisttps
imul
sub
nop
inc
decb
test
jmp
negb
scas
std
xchg
pop
mov
in
push
sar
jb
in
push
in
dec
mov
pop
cmp
inc
ror
ret
lods
push
sbb
jnp
int3
sarb
stc
add
int3
test
add
mov
mov
jmp
pop
sahf
sbb
and
mov
inc
mov
test
repnz
xchg
adc
sbb
ss
outsb
andl
adc
fldlg2
stos
sub
mov
lods
inc
mov
iret
add
pop
inc
mov
sbb
loope
push
mov
mov
jecxz
cmpb
xor
outsl
and
loopne
int3
loop
out
mov
xchg
leave
xor
test
addr16
in
ds
add
lods
cwtl
jg
adc
xchg
jmp
sbb
pop
popa
jno
sbb
xchg
sub
dec
xor
add
mov
cmpsb
mov
push
shl
add
fnstsw
jmp
push
repnz
inc
mov
stc
mov
mov
xchg
std
cs
in
cld
nop
pusha
cmpsl
test
fwait
mov
cmp
das
mov
lahf
insb
pop
fwait
adc
push
mov
or
jp
xchg
jmp
xor
dec
push
outsb
and
push
jp
inc
outsl
xchg
lret
mov
xor
add
loopne
mov
or
xchg
mov
mov
sbb
cmpsl
mov
shlb
das
push
mov
dec
push
and
out
orl
inc
push
mov
push
daa
movsb
fistps
xor
pop
loopne
rcll
mov
sbb
xchg
push
ljmp
cltd
push
inc
mov
mov
xchg
clc
adc
xor
fwait
xchg
inc
pop
in
in
dec
or
jnp
cmp
xlat
adc
imul
or
xchg
push
aam
cmp
sub
inc
fstps
cmp
add
xchg
inc
jbe
mov
bound
int
mov
jmp
cs
fsubs
or
push
pop
or
sbb
lret
cld
dec
lock
sbb
popa
push
nop
cmpsl
lock
and
test
popa
shrl
and
and
ljmp
imul
popa
fildl
leave
dec
add
sbb
das
cmp
xor
repnz
jp
sub
xor
add
gs
call
sub
aam
idiv
adc
cmpsb
fistpl
jmp
xor
mov
fs
dec
xor
lcall
inc
jno
pop
xchg
push
aaa
dec
mov
xchg
mov
arpl
push
xchg
xor
fsub
jnp
cmp
dec
add
push
push
mov
movsl
mov
mov
int3
test
mov
sub
into
out
pop
push
mov
test
adc
mov
inc
aaa
cmp
testb
andl
shrl
cmp
or
in
mov
sub
push
mov
xor
into
pop
xor
xchg
mov
sub
or
dec
gs
inc
icebp
cmp
xlat
push
mov
loope
jb
mov
cltd
arpl
ss
inc
add
out
dec
pushf
arpl
cs
or
add
inc
jno
lods
dec
aaa
mov
fcoml
sbb
idivl
std
ja
test
stc
jecxz
xor
adc
mov
jl
cli
mov
add
add
stos
mov
insl
dec
xchg
mov
push
imul
mov
push
movl
cmp
xor
sub
imul
pop
das
sbbb
inc
int3
cmpsb
or
arpl
lret
jg
mov
mov
std
pop
mov
cmpsb
aam
test
les
add
push
cmpsb
pop
in
iret
inc
test
adc
hlt
and
sbb
dec
mov
fistl
xchg
insl
mov
sub
testl
xchg
add
mov
ret
negb
popf
jnp
cmpb
dec
mov
add
sbb
jge
stos
pusha
std
mov
popa
inc
mov
and
mov
jne
ljmp
push
pop
enter
lods
sbb
stos
adcb
cwtl
xchg
pushf
test
add
mov
popf
xor
sub
test
jge
nop
mov
pop
stc
int3
js
dec
jp
push
push
aad
sub
lcall
and
push
mov
push
aam
mov
dec
lret
out
push
lret
jecxz
mov
loop
push
jl
ja
xor
in
cmpsl
add
xor
mov
add
xchg
in
cmp
inc
and
jb
pop
pusha
adc
add
jmp
push
adc
xchg
sub
push
pop
ret
mov
pushl
push
cmpsb
arpl
xchg
jle
cltd
shrl
sti
mov
inc
push
loope
sahf
nop
outsl
pop
es
mov
int3
add
in
cltd
sbb
or
sub
fcoms
shrb
daa
xchg
ret
inc
scas
xchg
jns
loopne
cld
adc
pop
ss
or
test
sbb
cmp
outsl
mov
pop
out
mov
lret
inc
sub
mov
fcoml
mov
das
sub
lock
outsl
es
roll
push
mov
push
jo
out
popa
or
dec
popf
or
dec
mov
cmp
cld
and
fidivrs
inc
and
les
int3
js
repz
gs
xchg
xchg
clc
mov
and
mov
in
cmpl
pop
out
popf
or
mov
fldl2e
comiss
lea
in
data16
imul
stos
push
enter
dec
rcl
push
push
arpl
iret
xor
push
mov
jge
sahf
cltd
andnps
stos
jb
push
icebp
push
loop
roll
jno
test
xchg
dec
jle
add
rclb
fnstcw
ret
jae
out
xor
shll
xchg
inc
dec
test
sub
loopne
test
stos
out
mov
xor
cmp
cwtl
and
mov
aaa
and
clc
loopne
xor
adcb
gs
sbb
paddb
stc
lea
fwait
cld
fcompl
pop
cltd
daa
mov
mov
lcall
ficomps
arpl
mov
out
lret
xor
xor
out
ret
add
shrl
push
push
mov
pop
out
mov
imul
sbb
mov
push
icebp
cmp
pop
je
lods
andl
mov
cmpsb
into
mov
mov
mov
or
cmp
add
out
imul
arpl
pushf
lcall
roll
out
pop
jnp
lods
gs
arpl
mov
and
clc
jge
rorl
sbb
mov
add
dec
int3
arpl
jno
out
ss
imul
lret
push
movsb
and
dec
dec
pop
lahf
fisttpll
or
sbb
xor
add
push
mov
mov
jmp
cmpb
arpl
mov
loopne
call
mov
sub
xchg
cmp
sbb
mov
xchg
cltd
cld
rcrb
fsubrl
inc
test
loop
arpl
mov
lds
sub
nop
movsl
idivb
xchg
cmp
inc
lcall
test
aad
or
sahf
jbe
scas
cs
dec
mov
repz
sbb
add
in
cmp
xchg
dec
dec
mov
dec
pop
sbb
test
ljmp
push
or
incl
sbb
push
cmpsb
xchg
sbb
movsl
fldcw
decb
movsl
aam
out
mov
in
call
adc
xor
outsb
movsl
inc
sbb
and
dec
pop
cmpsl
and
jnp
mov
push
movsl
mov
jl
dec
fnsave
lcall
mov
mov
inc
mov
push
fcomps
ss
pop
cmp
gs
hlt
dec
cmc
cltd
lods
and
mov
mov
out
ds
push
add
faddl
fidivs
push
ret
jp
aaa
sbb
repnz
sarl
pop
iret
stos
pushf
mov
lahf
movsl
in
sub
jp
lods
insb
std
jae
sub
sti
inc
enter
ss
dec
xchg
or
leave
and
push
sbb
lret
mov
ss
ret
mov
scas
test
test
mov
bound
xchg
arpl
xor
outsl
nop
jne
repnz
rolb
or
add
xadd
add
call
fwait
cmpsl
jno
lds
imul
mov
inc
mov
add
mov
scas
scas
fnstsw
xor
popf
cs
or
cmp
add
sub
scas
push
mov
imul
inc
mov
push
imul
add
adc
flds
and
aaa
add
ret
out
scas
imulb
xor
mov
xor
fiadds
jo
test
inc
pushf
jae
jnp
std
in
xchg
pop
add
pushf
adc
xlat
cmc
inc
jmp
push
nop
cmpsb
int3
insl
add
arpl
push
aas
std
inc
dec
insb
xor
adc
sub
popf
call
fwait
adc
pop
xor
jae
imul
and
arpl
mov
or
sub
xor
mov
mov
mov
push
icebp
nop
mov
loope
lret
xchg
push
jo
mov
sbb
push
mov
pusha
add
maskmovq
notl
adc
inc
fbld
test
inc
mov
shl
loopne
fistl
pusha
push
ret
push
in
sahf
pop
xor
or
dec
lods
sbb
jbe
xchg
inc
sbb
les
orl
mov
jne
inc
incl
popa
ret
mov
pop
mov
push
mov
xchg
jno
push
into
dec
xchg
adc
jne
and
iret
adc
dec
imull
xchg
lea
sub
lret
testl
dec
adc
sbb
mov
inc
pushf
push
arpl
inc
lock
ljmp
ret
fimuls
int3
cmpsl
aas
lds
adc
aam
push
jno
loopne
jmp
sub
jmp
inc
adc
mov
mov
rorl
or
adc
and
adc
push
or
mov
test
rorb
xchg
cmp
cli
cmp
jecxz
and
sti
shll
cmpsb
cltd
in
pushf
or
mov
outsl
xor
in
call
jnp
jns
and
cmpsl
sub
sub
adc
xlat
or
or
adc
mov
push
inc
int
dec
dec
xchg
pushf
mov
push
pop
mov
je
mov
div
cmp
jmp
jmp
xchg
mov
scas
pop
jecxz
xchg
mov
pop
std
adcb
mov
adc
xlat
jp
inc
cs
leave
jno
sbb
and
mov
aam
sub
inc
mov
insb
push
pop
loop
sub
out
add
into
out
in
fidivrl
xchg
or
pop
add
dec
jmp
mov
sarl
das
sahf
imul
pop
pop
test
xor
orb
or
cltd
and
sti
ret
imul
ret
pop
or
jno
push
arpl
push
js
dec
mov
cmp
js
fnstcw
outsl
loope
inc
inc
shlb
outsb
es
mov
lret
adc
dec
scas
out
and
sub
push
lea
rorl
sbb
xchg
xor
xchg
and
cli
mov
inc
imul
push
cmp
popf
aam
repz
pop
in
in
add
xchg
inc
add
loope
xlat
xchg
fwait
loop
enter
daa
and
rorb
cmp
fs
lret
mov
out
jecxz
jbe
dec
repz
pop
vphadduwq
clc
les
pop
cmpsl
js
cmp
loop
mov
out
cmp
mov
mov
xchg
bnd
fiaddl
sub
aam
dec
jo
xchg
imul
lods
xchg
xchg
aaa
mov
lcall
lret
shlb
mov
sti
clc
add
mov
sbb
jb
fcoms
sbb
or
cmp
jmp
jecxz
cmp
pop
jo
fldcw
cmp
pop
inc
hlt
out
sbb
xchg
pop
mov
ja
shr
in
cmpsl
fsts
repz
xor
push
jmp
dec
and
xchg
into
adcb
pmaddwd
cs
rcr
pop
add
bound
pop
xor
pusha
or
jl
mov
dec
test
pop
cwtl
adc
movsl
dec
int3
xchg
sbb
es
mov
cmp
test
outsb
cs
pop
pushf
shlb
ret
outsb
push
test
jle
js
mov
mov
sub
mov
sub
repz
faddl
cmp
sahf
icebp
mov
mov
mov
add
sub
mov
sbb
adc
sahf
test
pop
fidivrs
xchg
leave
icebp
imul
mov
inc
sbb
rcrb
fsub
push
jo
sub
xchg
out
nop
xor
or
push
cmc
push
mov
out
or
pushf
fadd
cmp
int
inc
dec
jl
mov
incb
cld
jns
dec
frstor
xchg
ds
push
xlat
and
sub
dec
dec
push
xchg
xor
stos
jne
mov
fistl
mov
pop
stos
pop
jne
scas
clc
cmpsb
mov
inc
xor
je
sub
and
push
test
dec
xchg
sbb
mov
sub
mov
test
mov
xchg
sbb
orl
xor
in
sub
sub
mov
cmp
fimull
jl
leave
outsb
push
test
add
fidivrs
mov
fidivrl
and
sbb
xchg
xchg
xchg
stos
sbb
inc
std
mov
push
jecxz
push
or
stc
subb
adc
mov
mov
mov
mov
jno
out
jno
fists
mov
lahf
jg
scas
ficomps
ret
ja
adc
push
imul
rorl
adc
mov
adc
int3
push
movsb
push
aad
push
dec
add
cmp
inc
movsl
arpl
test
int
mov
fsubr
jp
pusha
xchg
jne
arpl
push
lret
cmc
js
imul
adc
call
in
and
fstps
xchg
in
inc
jge
and
int3
lret
out
scas
jmp
and
movl
sbb
dec
pop
push
daa
xor
hlt
andb
mov
mov
out
roll
sub
dec
orb
push
cmpsb
insb
lds
lcall
fsub
add
sbb
out
dec
dec
add
ds
pop
and
fs
dec
popa
ja
jno
adc
test
and
mov
jb
repz
pop
data16
jl
xchg
sub
lea
mov
ret
cld
xchg
fnsave
sub
dec
leave
and
enter
inc
push
call
insl
scas
push
leave
pop
jge
movsb
add
inc
push
adc
sti
mov
pop
pop
jno
test
mov
adc
fiadds
bswap
mov
mov
in
out
outsl
lods
addr16
faddl
filds
sbb
inc
sbb
xchg
test
lea
pop
adc
cld
aam
and
push
filds
inc
daa
mov
insb
test
jo
int3
loop
mov
ficoml
hlt
sbb
into
sbb
addl
mov
out
stc
enter
push
dec
mov
outsb
pop
call
ret
jg
mov
cmp
loopne
sub
aam
arpl
test
xor
sbb
out
incb
push
aad
pop
bound
cmp
in
cmp
nop
enter
push
sbb
add
push
out
sbb
bound
jne
pop
inc
xor
std
cmpsl
add
leave
addb
rcrb
cld
mov
xchg
push
mov
cmp
shrb
loope
icebp
and
inc
push
mov
push
popf
lahf
or
je
rcl
and
mov
daa
icebp
aaa
or
mov
xor
sub
lods
popf
inc
sahf
adc
mov
nop/reserved
dec
ret
cld
rorb
aas
mov
pop
cmp
sti
push
aas
sahf
out
mov
sub
push
pop
mov
out
fstp
xchg
pop
xor
testb
and
in
sub
fwait
mov
push
loopne
rcll
xor
scas
mov
xchg
xor
jno
iret
movsb
push
stos
in
push
jnp
ffreep
dec
enter
stc
arpl
cmpsl
push
fnstenv
inc
sub
push
mov
pop
jle
out
adc
jno
jne
jbe
push
std
jno
sub
scas
loope
or
xor
lcall
mov
mov
adc
lret
ss
mov
xchg
dec
mov
cmp
dec
dec
scas
sbbl
inc
aaa
dec
jl
and
push
int3
jae
push
dec
ja
insb
pop
push
rclb
add
ss
popa
cmp
and
out
pop
pusha
pusha
adc
jl
ja
stos
dec
lret
xchg
mov
inc
and
xchg
sbb
xor
xchg
sbbl
cwtl
cmp
fmul
jnp
mov
mov
mov
sbb
fisubs
sub
test
cmpsb
test
or
push
or
jo
dec
lret
or
inc
stc
mov
jnp
xor
dec
jge
hlt
adc
push
repnz
test
xchg
aad
or
out
outsl
xor
xchg
testl
icebp
jp
imul
test
fbld
inc
mov
data16
negb
mov
dec
inc
mov
lods
cmp
mov
cmp
mov
ret
lods
jp
xchg
cltd
xor
or
or
in
add
mov
scas
bound
stc
mov
inc
std
aad
dec
mov
aaa
stos
xor
lods
aaa
push
mov
iret
jo,pn
adc
mov
add
pop
lds
pop
mov
mov
mov
idiv
xchg
icebp
xor
xchg
push
xchg
pop
ljmp
pop
les
imul
mov
lcall
fs
dec
sarl
cmpsb
pop
mov
add
pop
lds
sub
insb
sti
sbb
push
test
roll
mov
pusha
inc
sbbl
bound
call
sbb
divb
aad
sbb
testb
clc
or
cmp
and
dec
test
inc
sbb
repnz
rcr
xchg
stos
jl
fndisi(8087
rcll
cltd
rcrl
mov
bound
ljmp
pop
pop
shll
in
aas
dec
xor
pop
or
pushfw
mov
movsb
mov
xor
pop
frstor
jo
mov
je
mov
fnsave
aaa
testb
adc
inc
sub
cmp
lcall
inc
test
cmp
cmp
stc
arpl
adc
sbb
adc
inc
dec
dec
lcall
movsb
sahf
fsts
icebp
daa
ret
dec
xchg
push
pop
lret
sub
imul
jge
mov
inc
and
xchg
movsl
bound
or
fistpl
pop
and
sub
xor
enter
sub
jno
xorl
call
xor
jae
cmp
ljmp
add
jmp
jno
sbb
lcall
or
cli
in
test
mov
stos
arpl
bound
mov
jne
xchg
adc
jmp
jnp
cli
xchg
scas
les
leave
shll
cwtl
mov
jae
fwait
jo
and
jl
mov
jge
jb
ja
adc
stos
js
pushf
adc
adcb
mov
outsb
aad
lret
imul
jne
movnti
imul
adc
mov
mov
mov
lock
jg
xor
ds
insl
sbb
mov
pop
mov
sahf
mov
aaa
xlat
cltd
ja
adc
add
nop
sbb
add
out
lds
outsb
xchg
dec
clc
leave
inc
imulb
fisubrs
test
je
in
inc
fucompp
sahf
punpckldq
xor
push
mov
jbe
mov
lret
cld
pop
mov
rcll
xor
xor
xor
int
lock
mov
test
xor
add
aas
mov
dec
fs
lret
mov
inc
stos
mov
les
or
and
fs
xor
dec
aad
cmc
fbstp
mov
inc
inc
ficoml
xchg
sbb
mov
enter
ret
fdivs
imul
push
cmp
loopne
push
mov
jle
ud0
or
push
addr16
dec
je
in
test
insl
cli
aas
xchg
ljmp
test
xchg
add
mul
push
pop
xlat
icebp
or
and
jbe
icebp
jns
xor
jb
inc
in
pop
fdivrs
cmp
mov
out
rcrl
ret
loopne
mov
jmp
dec
lock
mov
cltd
and
jl
add
pshufw
push
nop
sbb
xchg
and
add
jbe
stos
insb
addr16
ljmp
and
subl
cmp
or
inc
es
addl
leave
outsl
ljmp
enter
fucomi
add
mov
jp
pop
xor
movsb
nop
mov
xchg
lock
adc
mov
addr16
pop
lock
in
imul
inc
daa
inc
sbb
xchg
in
lods
jg
add
fnstcw
arpl
jae
or
dec
leave
leave
jo
repnz
sbb
aaa
ss
pop
dec
adc
jb
lcall
sbbl
lcall
fdivrs
dec
stos
ds
inc
pop
or
insl
ret
in
icebp
or
pop
mov
subl
and
xor
and
sbb
pop
dec
stos
cmpsl
push
lods
pusha
cmpb
in
push
loope
add
lea
int3
inc
cmp
js
fwait
stos
leave
push
cmp
xchg
or
mov
or
outsl
in
aas
psrlq
mov
fcmovnb
orl
fdivl
xchg
jmp
pop
mov
pop
out
xorb
repnz
push
addr16
push
xor
pushf
pop
outsl
push
fisubrl
dec
xchg
inc
mov
int3
xchg
je
and
imul
in
mov
loop
push
pusha
test
sub
dec
xchg
jl
inc
lahf
fildll
pusha
mov
ret
les
and
xor
mov
cld
ljmp
cmp
sub
or
xchg
sub
fadds
lea
cmp
pop
in
mov
popa
or
mov
ljmp
stos
pop
mov
notl
mov
and
rcrb
xchg
mov
xchg
mov
lahf
imul
mov
aad
imul
cld
shr
push
sbb
push
aaa
inc
sbb
xchg
aas
and
pop
xchg
or
push
ja
sti
inc
outsb
or
stc
aam
jns
and
xor
inc
cmp
xchg
mov
dec
fbld
mov
lret
pop
sub
cmp
mov
nop
rcrb
pushf
sbb
mov
daa
test
js
js
cwtl
sub
pop
fs
inc
sub
and
lods
or
or
xchg
mov
dec
mov
sbb
in
mov
jb
aaa
hlt
mov
mov
out
mov
std
dec
lods
dec
test
lret
xchg
lret
mov
push
fisttpll
push
jge
int
adc
push
ret
pop
ret
jns
lret
nop
xchg
xor
jns
mov
in
popa
mull
mov
fsub
xchg
inc
jle
inc
cltd
lret
push
call
into
orl
sub
lcall
add
inc
push
sbb
clc
cwtl
mov
mov
inc
jp
jmp
dec
xor
pop
ds
aad
test
and
sub
adc
mov
es
neg
mov
mov
lcall
mov
xchg
jnp
stos
enter
pop
xchg
out
pop
mov
mov
fsubs
add
adc
notl
pop
mov
dec
pop
add
mov
mov
or
jae
add
pop
sub
add
sbb
insl
test
shll
sbb
rorl
fildll
push
xor
adc
or
jg
repz
mov
push
out
sub
sar
sbb
lods
dec
fildl
sti
jecxz
loopne
pusha
fwait
int
cmp
aam
mov
mov
or
jg
xor
sub
es
or
das
stc
imul
or
cltd
lret
pop
push
fdivrp
jmp
in
enter
xorl
fsubrl
and
jg
mov
add
mov
lahf
andb
sub
popa
push
sbb
xchg
je
mov
lea
cld
ret
movsb
xchg
dec
mov
cltd
stos
lret
insb
jne
push
mov
popa
inc
cmp
jns
inc
dec
mov
xor
xor
es
cs
mov
sbb
insb
outsl
out
leave
add
xchg
test
fists
inc
bound
and
or
cld
rcll
mov
pop
push
mov
jp
dec
ret
dec
adc
sbb
pop
scas
jns
cmp
jae
dec
inc
pushf
stos
mov
mov
mov
pop
out
pop
pop
sbb
outsb
es
sahf
scas
or
dec
cmpsl
sbb
rcrb
mov
jo
or
hlt
movsl
xchg
mov
inc
not
dec
mov
or
cmp
push
lods
pop
lcall
inc
push
ret
sbb
lods
inc
cli
jp
cmpsb
insb
jne
lret
divb
sub
jno
nop
inc
push
test
and
lret
scas
jge
sub
out
pop
mov
in
aam
sar
repnz
ja
repz
fisttpl
inc
and
mov
in
push
ret
sti
push
repnz
push
mov
inc
xchg
mov
pop
aaa
movb
xor
xchg
ss
mov
and
jnp
lret
les
idivl
push
push
stos
xor
ds
cmpsl
aaa
mov
call
sbb
sahf
jno
insb
test
scas
pop
pushf
push
sar
mulb
out
xchg
mov
cmpb
test
cmp
mov
dec
in
mov
sbb
push
mov
add
jns
jns
rcr
in
inc
push
mov
xor
das
pop
sbb
inc
or
inc
mov
inc
dec
scas
fs
sub
popf
push
in
das
dec
add
lods
cltd
mov
out
adc
movsl
or
rcl
push
mov
mov
lahf
cld
mov
inc
jp
notl
fnsave
push
bound
dec
aad
mov
mov
std
sub
daa
data16
jbe
pop
lcall
sub
push
cmp
xlat
lret
jb
cltd
stc
jbe
std
adc
adc
add
push
sub
inc
jnp
lea
inc
repnz
sbb
dec
fbstp
out
ss
jns
xor
jle
in
dec
adc
and
jl
pop
xor
sub
jns
je
testl
punpckldq
lods
inc
cmp
cmp
out
daa
pop
jle
sbb
call
in
mov
cs
add
cmp
mov
rcll
push
fs
mov
lea
aaa
inc
ret
push
popa
jge
test
jecxz
and
jle
sbb
jmp
jmp
cmp
dec
push
jae
cld
arpl
dec
xchg
sti
rol
xchg
push
ds
push
or
cmp
cld
addr16
out
nop
push
push
lods
addr16
mov
jb
loope
jo
jmp
arpl
push
push
pop
gs
into
mov
add
add
xchg
mov
mov
rorb
pop
dec
or
fdivrl
mov
mov
lcall
out
outsb
dec
out
mov
fs
add
dec
es
push
ret
loope
xor
inc
or
adc
int
push
xor
mov
aad
dec
sub
ret
push
insl
lock
dec
dec
je
popl
xchg
pop
adc
push
cmp
xor
xlat
jbe
mull
fstpt
rclb
adc
xorl
movsl
jns
adc
das
xor
repz
dec
test
stc
mov
push
pop
leave
xchg
or
push
pop
push
idiv
fsubl
add
sbb
mov
and
fmulp
pop
mov
out
inc
cmp
aam
mov
jbe
lahf
inc
xor
lods
cmpb
ds
pop
daa
in
sub
xchg
or
jne
sub
adc
lds
dec
jne
mov
imul
mov
icebp
xchg
into
pushf
push
push
sbb
fstpt
pop
ljmp
mov
mov
add
lea
add
aaa
sbb
push
sahf
hlt
jge
inc
sub
xchg
enter
lds
lea
xor
jl
mov
push
add
pop
fs
add
pop
add
clc
imul
pop
and
or
sbb
outsl
jo
jge
roll
adc
xchg
adcl
int
pop
sub
jg
dec
cmp
cmp
sub
jbe
insb
pop
xorl
jns
inc
xor
dec
jno
push
aaa
fdivrs
pop
xor
pop
sbb
push
outsl
jl
jp
lcall
fidivs
inc
por
lock
mov
je
push
fidivl
mov
rclb
sbb
adc
mov
dec
std
cmp
rol
ficoms
jne
push
jae
sbb
out
jl
xor
cs
ret
mov
jae
sub
roll
arpl
dec
sbb
xor
add
mov
pop
addb
add
jae
lcall
aad
js
ds
out
pop
adc
sub
dec
xchg
and
push
addps
or
cmpsb
or
pop
mov
and
cmpps
xor
fimull
bound
adc
or
mov
scas
aad
xorl
sahf
mov
test
jmp
pusha
scas
js
ret
cmp
dec
popf
xor
gs
ds
cmp
aaa
out
push
push
mov
orl
ljmp
shrb
push
in
fnstsw
out
push
xlat
add
cmpb
in
add
mov
mov
inc
xor
xchg
roll
ret
jne
xor
cmp
das
mov
nop
mov
pop
hlt
pushf
pop
out
popa
add
orb
imul
dec
cmp
fisubrl
imul
repnz
pop
pop
fnsave
xchg
jge
adcl
mov
orb
inc
mov
jmp
rcrl
loope
js
jo
test
dec
movsl
das
push
pop
fwait
mov
jns
out
xor
sbb
movsb
sub
sbb
xor
sbb
inc
mov
cmc
pushf
data16
xchg
push
hlt
or
or
push
sub
shrb
iret
enter
shll
hlt
sub
das
mov
sub
ret
dec
mov
pop
and
stos
xor
sub
add
into
fisttpll
dec
mov
pusha
repnz
pop
sti
mov
outsl
pop
int3
es
sbb
push
dec
imul
and
add
cwtl
xadd
clc
cwtl
pop
iret
mov
dec
sub
testl
pop
inc
clc
orl
add
sub
int
cltd
cmp
rol
mov
daa
push
dec
cmp
mov
pop
out
mov
sbb
dec
ja
cmp
mov
or
clc
push
xchg
push
adc
jl
jmp
cld
out
dec
add
std
push
into
fwait
mov
mov
stos
cmp
lods
ljmp
mov
xchg
jmp
mov
add
cld
push
stos
in
cmp
sub
add
fs
push
into
and
push
mov
xor
xchg
mov
mov
inc
leave
into
mov
cmp
aaa
rol
jg
lods
aad
push
out
fwait
jle
adc
sbb
outsl
es
imul
add
insl
lcall
mov
loop
sbbb
dec
js
jo
xchg
mov
jne
int
sub
xchg
push
inc
int
sub
and
mov
mov
sub
out
loop
popf
jne
add
ss
shll
pop
in
hlt
out
pushf
push
jge
in
testl
bound
jle
xchg
repz
fdivs
inc
cmp
mov
mov
add
lret
jmp
iret
dec
cmp
je
sub
inc
in
into
jmp
inc
jge
dec
lea
push
xchg
js
test
hlt
push
test
mov
pop
or
cli
scas
or
rorb
mov
adc
lods
cmp
inc
inc
lcall
jmp
int3
push
sbb
cmp
fwait
xchg
or
outsb
iret
or
addr16
aam
int3
loopne
adc
mov
fsubs
xchg
ja
xor
shlb
rolb
cmp
shll
xor
push
fmuls
dec
xor
mov
test
imul
pop
call
jno
hlt
xchg
outsl
pop
jae
push
pmaxub
adc
push
xchg
sbb
gs
dec
in
fucomip
sbb
or
dec
fsubrl
pop
xchg
pushf
fbstp
cmpsl
pop
aas
xchg
mov
cmp
xchg
fucomp
mov
std
out
fsubrl
cld
gs
inc
dec
lods
add
push
sub
aad
rorl
js
pop
mov
fstpt
xchg
movzwl
xchg
negl
xor
cmp
pop
sbb
mov
gs
cmp
mov
mov
push
not
dec
sub
cmp
and
add
push
and
mov
mov
stos
sub
jp
scas
incl
ja
lods
std
push
xchg
xchg
lds
pop
push
cwtl
call
popf
mov
pop
jnp
mov
add
and
inc
inc
push
adc
jecxz
icebp
add
in
iret
repz
cmp
flds
lahf
mov
push
fs
int
dec
icebp
jae
bound
popf
insb
mov
cmp
lcall
pop
dec
xor
and
test
push
fisttpll
sbb
jl
mov
sbb
push
daa
out
movsl
push
scas
dec
hlt
stos
cmp
push
add
out
sub
ss
sub
lods
pusha
sti
pop
mov
lds
lods
push
cmp
xchg
xchg
lcall
jns
fldl
aaa
shll
hlt
xor
leave
push
jge
mov
jae
ja
scas
gs
les
mov
mov
xlat
aaa
xor
data16
cmpb
pusha
pop
test
mov
outsl
sbb
insl
clc
sbb
add
fistl
inc
xor
adc
add
mov
xchg
insb
rcll
dec
and
dec
movsb
push
inc
jne
add
arpl
loope
sti
adc
lods
adc
dec
test
xchg
push
mov
cmp
rorb
pop
outsl
xor
mov
loope
cmp
inc
sar
mov
inc
adc
xchg
mov
in
lcall
ljmp
cmc
pop
call
fnstenv
pop
out
fmul
out
inc
leave
pop
jne
xchg
lcall
into
xor
outsb
sbb
sbbl
test
mov
jns
and
cld
cmp
pop
leave
out
ljmp
test
fs
out
sbb
lds
and
aaa
jno
pop
sbb
mov
dec
push
pop
xor
or
ljmp
and
jne
sahf
iret
fldl
push
out
pop
or
xor
scas
mov
sub
in
inc
pop
xchg
es
call
mov
mov
fcompl
mov
outsb
mov
mov
add
adc
push
imul
mov
lods
in
into
jbe
std
add
lods
les
and
jae
fsubrs
imul
cmp
mov
xchg
sub
add
mov
cwtl
lret
jb
cmp
adc
lret
int3
add
sub
mov
add
push
fnstcw
mov
jnp
xchg
mov
fadds
subb
jae
mov
mov
sub
movsb
inc
lods
cwtl
in
inc
data16
sbb
lods
xchg
ret
je
icebp
lea
sbb
or
dec
iret
sahf
cmpsb
sbb
enter
ds
cwtl
repnz
fbstp
ficoms
mov
lods
and
stos
push
push
ficoml
xchg
dec
iret
xchg
mov
lea
jg
dec
lahf
add
leave
push
inc
lock
lahf
daa
cmp
out
pop
lock
or
fildll
sbb
enter
fisttps
and
clc
mov
in
inc
xchg
xchg
into
xor
int
fnstenvs
add
jl
mov
lods
std
mov
iret
enter
icebp
fnsave
pop
mov
xor
pop
xor
mov
pop
ficoms
pop
fisubrl
push
jae
or
mov
sub
adc
sbb
sub
push
sub
dec
cld
dec
test
imul
push
mov
stc
mov
or
xor
test
or
add
int
cmp
out
or
lcall
lret
fninit
pop
dec
jns
sub
xchg
cltd
aam
xchg
stc
mov
addb
cmpsb
mov
test
push
sub
sub
dec
aas
shll
adc
sahf
push
fidivrl
loopne
vmovupd
or
jae
adcl
or
filds
add
in
daa
push
or
insb
mov
push
sbb
pop
pusha
inc
jo
mov
adcl
shrl
xor
mov
jno
mov
mov
in
xor
sub
cmp
sub
sub
adc
lahf
lret
sbb
add
imul
dec
xorl
rorb
lret
jp
add
or
orl
int
aad
xchg
pop
inc
sub
daa
xlat
lahf
jle
in
push
add
into
xchg
or
fiaddl
push
sub
xchg
pop
pushf
dec
xchg
mov
adc
das
xor
mov
mov
jae
mov
aas
dec
mov
fstpl
push
dec
cwtl
and
dec
outsl
dec
es
icebp
inc
repnz
int3
loopne
push
loope
js
cmp
xlat
loop
lret
or
mov
xorb
fisttps
cmp
push
lret
jle
mov
aam
notb
rolb
add
popf
mov
repnz
lock
int3
xor
fwait
stos
rcrb
and
test
sub
in
sbb
sarb
sahf
mov
push
or
inc
cli
xchg
dec
xchg
ds
push
xor
scas
fisubl
repz
inc
into
mov
movsb
xor
pusha
lret
or
pop
stc
into
fdiv
ss
insl
jnp
mov
dec
pop
fs
sti
cmpsb
out
xlat
js
push
andb
mov
jg
in
in
ficoms
push
std
repnz
adc
cmp
dec
mov
jae
outsb
mov
out
sub
or
addr16
push
flds
pop
lcall
inc
inc
cwtl
push
mov
jg
add
pusha
daa
daa
mov
sub
cmpsl
cs
xor
arpl
out
jmp
pushf
outsl
les
push
das
mov
push
sbb
push
fnstenv
sti
add
mov
sub
push
push
sbb
rcrl
repnz
adc
sub
lret
jo
js
sbb
inc
pop
pop
pushf
or
or
loope
xchg
cli
jge
and
cmpsl
adc
jae
sub
rorb
aad
stos
sub
icebp
xchg
dec
inc
out
out
or
addl
inc
jmp
xor
dec
jmp
in
outsb
sbb
std
fistpll
test
inc
movsl
mov
pusha
cmp
pop
cltd
sbb
imul
push
movsl
rcrb
mov
das
pop
outsb
pop
and
mov
jle
xchg
fxch
das
aas
push
movb
and
xchg
pop
xor
xchg
inc
sbb
bound
xor
cltd
fsubl
enter
push
mov
xchg
movsb
pop
xchg
movl
movsb
in
stos
clc
cs
mov
aas
jge
inc
xchg
cmp
outsb
jae
mov
insb
jo
in
mov
inc
mov
push
push
jmp
mov
fists
call
popf
stos
sti
mov
jns
cmc
in
cmp
jp
ljmp
int3
push
shr
push
lea
or
inc
push
into
rdpmc
jo
dec
andl
mov
or
add
aaa
cmp
pop
pop
inc
test
lods
les
xorl
test
push
dec
nop
add
sbb
pop
jbe
mov
sbb
add
sub
push
movl
push
leave
dec
sub
mov
xchg
fiaddl
stos
mov
mov
lret
cli
push
push
xor
paddsb
stc
xor
adc
jmp
ret
gs
jae
mov
add
inc
movsb
xor
pop
cmpsl
jmp
add
mov
test
loopne
xchg
and
pop
cltd
daa
inc
push
xchg
aaa
xlat
aam
sub
xchg
icebp
push
and
dec
xor
lea
scas
aaa
xchg
cli
aam
and
rorb
push
cmp
pop
sub
add
pusha
test
and
mov
sub
add
xchg
fwait
mov
mov
adc
push
mov
out
push
stos
lahf
sub
outsl
imul
lods
pusha
pop
lcall
pop
cmp
adc
repnz
add
or
rolb
jne
mov
fs
jb
int
fcmovne
xchg
xor
ljmp
out
or
out
fimuls
mov
ret
push
movsb
mov
xchg
les
xchg
and
cmp
jb
lds
loopne
pop
adc
dec
pop
mov
icebp
mov
repnz
repnz
or
insb
daa
and
cwtl
lods
and
scas
test
or
leave
sbbl
out
out
push
pop
or
andb
ja
in
adc
sbb
xchg
je
xor
fstl
mov
cs
push
mov
jecxz
add
sbb
sahf
mov
mov
das
mov
dec
jbe
ds
cs
lcall
jmp
push
out
shrl
push
jb
arpl
insl
xchg
pusha
ds
sahf
js
into
aas
pop
or
insl
mov
cs
outsb
and
test
sub
cmp
out
and
push
cli
imull
testl
mov
push
xor
xchg
stos
pusha
shlb
dec
rcl
jle
arpl
cmpsb
xchg
mov
fdivs
stos
pop
imul
stos
out
pop
ret
test
inc
inc
push
test
cli
stc
and
movsb
mov
in
cmp
adc
ljmp
xchg
jmp
xor
add
mov
push
mov
in
jne
std
scas
push
mov
loopne
stos
out
jne
std
mov
or
jnp
ds
sahf
pop
cmp
jecxz
push
mov
insl
sbb
daa
mov
mov
and
lods
dec
adc
inc
repz
or
mov
sbb
jns
arpl
scas
add
pop
xchg
rclb
in
lcall
jecxz
xor
popf
call
icebp
cltd
notb
test
scas
dec
dec
test
jb
xor
mov
pusha
dec
call
scas
sbb
add
enter
jp
sbb
mov
mov
sbb
lret
into
ret
mov
mov
dec
and
cmpsl
js
out
mov
mov
xchg
or
fstps
dec
cwtl
inc
lret
fwait
mov
adc
mov
loope
jmp
dec
mov
les
outsl
push
icebp
and
fmull
xchg
andl
dec
lret
in
iret
pop
adc
test
daa
sbb
clc
or
mov
sahf
shrl
aaa
in
xchg
imul
xchg
cwtl
loopne
insl
xor
xor
insb
push
and
push
pop
ja
mov
jmp
push
minps
int3
iret
stos
cmp
outsb
cli
fldln2
jne
cwtl
shlb
add
leave
flds
mov
and
arpl
icebp
insb
gs
out
push
cltd
hlt
enter
movsb
or
in
mov
je
jge
mov
xchg
or
xor
or
ja
push
pushf
scas
leave
cmp
out
xchg
pop
je
popf
lods
lea
mov
int
dec
mov
sub
cmc
pop
sub
or
je
jl
lods
inc
icebp
push
push
fisubrl
pop
cmp
add
pushf
mov
call
or
ja
cmc
pop
pop
in
mov
cs
insl
aam
fwait
pop
cmp
mov
icebp
mov
shrb
fisubrl
popa
das
mov
repnz
pop
xchg
xchg
xor
test
int
cmp
sub
dec
mov
pop
pushf
dec
or
mov
rcll
out
pop
andb
mov
shr
lds
testl
jae
mov
clc
push
sbb
aad
pop
sti
les
lret
shlb
push
pop
insb
jb
clc
pop
sbb
or
mov
push
xor
dec
test
sti
push
loopne
in
rcrb
adc
subb
mov
enter
stc
test
movsb
or
pop
incl
mov
or
es
repz
out
stos
xor
stos
call
cmc
push
mov
mov
lret
stos
fwait
mov
mov
push
sub
cmpsb
imul
daa
jmp
mov
fdivrs
cmpps
mov
in
or
shlb
bound
sbb
fcoms
cmpsb
jnp
add
mov
push
fcmovb
and
in
mov
inc
adc
popf
std
sub
pop
pop
imul
sbb
sub
ss
and
xchg
dec
sub
dec
negl
xchg
lahf
cli
cli
dec
jno
pop
sahf
push
mov
mov
jle
movsb
lock
dec
dec
hlt
ja
xchg
iret
out
test
xchg
outsl
test
ret
sub
pop
cli
dec
test
pushf
notl
dec
insl
add
jnp
loopne
fbld
mov
or
xchg
jmp
in
gs
inc
mov
test
push
mov
int3
add
scas
xlat
and
pop
rol
mov
icebp
cs
pop
jl
jle
jg
adc
insl
insl
ljmp
pusha
in
ds
xor
icebp
clc
test
and
int
jnp
xorb
inc
movsb
je
imul
jae
pop
std
in
aaa
daa
fld
and
testb
out
push
add
out
iret
sub
sub
and
and
mov
pop
int3
pop
in
adc
cwtl
xchg
ret
cmp
push
mov
and
fdivrs
dec
movsl
insl
gs
fs
out
scas
xchg
subb
out
jae
fst
pop
aas
ja
pop
inc
mov
pushf
imul
mov
dec
add
sub
push
insl
and
notb
lret
mov
movsb
enter
jmp
push
mov
jns
dec
sub
mov
imul
add
jmp
iret
adc
xor
pop
inc
shl
mov
jl
sbbb
inc
cs
mov
test
push
lahf
roll
mov
inc
lea
dec
push
daa
popa
jb
loope
sbb
xlat
inc
lret
inc
les
mov
popl
mov
stos
xchg
lea
push
aam
aaa
pop
into
inc
int
xchg
cmc
mov
dec
aad
loop
out
push
movsl
notb
cmp
push
cmp
push
cs
cmp
pushf
fldl
jp
and
incb
repz
or
inc
dec
rolb
push
mov
jle
fisubrs
call
jp
in
and
sbb
dec
fbstp
testl
xor
adc
scas
movsl
inc
test
push
fmuls
cmc
jmp
test
loope
jle
enter
push
aas
std
aam
je
dec
pushf
cld
sub
mov
dec
daa
mov
pop
dec
mov
repz
loopne
test
mov
in
jae
mov
aas
sub
jg
push
add
cmc
jecxz
xchg
add
inc
xor
jne
mov
adc
xor
out
test
mov
mov
adc
pop
push
mov
pop
stos
outsb
cmc
mov
dec
out
inc
xor
adc
jae
add
push
xchg
pop
mov
subl
es
lret
pop
dec
rol
movsl
mov
jb
add
sub
fcmovnu
inc
nop
and
fidivrs
addr16
fisubrl
pop
jge
lahf
fwait
xchg
outsb
inc
fdivp
push
rorl
rcrl
mov
mov
cmp
push
cld
xchg
into
out
stc
pop
int3
sahf
outsb
push
out
mov
jmp
stc
sub
xchg
les
enter
call
test
clc
adc
orl
dec
aad
mov
fcomps
and
int
out
stc
shlb
in
sbb
jb
push
pop
bound
popa
push
sbb
std
mov
scas
inc
jecxz
sub
test
scas
fnstsw
lods
adc
dec
sbb
int
jne
xchg
scas
dec
adc
sbb
scas
pushf
loop
ret
jg
mov
movsl
dec
xchg
xor
pop
adc
pop
hlt
loopne
movsb
mov
insl
inc
cmp
hlt
mov
test
mov
daa
xchg
ret
aam
add
and
mov
sub
inc
push
sub
xor
inc
imul
test
xor
sub
jo
push
aaa
dec
nop
sbb
rcrl
xor
push
stc
clc
pop
pop
adc
cltd
pop
lds
or
cmpsl
lods
push
xor
jae
pop
aam
clc
test
mov
mov
or
jge
loopne
ret
add
adc
sub
jmp
ret
loope
fistpll
hlt
jmp
cltd
push
cwtl
cmp
inc
arpl
lcall
push
cwtl
aaa
stc
or
es
sbb
outsl
dec
and
dec
jg
movsl
inc
fs
pop
lret
ud0
push
iret
fstps
enter
and
adc
dec
cmpsb
mov
in
in
mov
ds
inc
jmp
bound
jl
jbe
dec
or
call
push
mov
xchg
movsb
jge
mov
mov
jnp
xchg
push
jo
cltd
mov
sbb
jmp
mov
pop
out
adc
mov
imul
insb
cmp
mov
in
test
pop
mov
test
mov
jle
orb
jecxz
mov
xor
push
lret
sbb
mov
scas
xlat
pop
jge
dec
sbbl
imul
out
das
pop
aad
mov
ljmp
cmp
loopne
imul
das
subb
inc
lods
jb
sbb
test
cmp
mov
imul
mov
das
es
test
push
jne
sbb
xchg
or
sub
call
arpl
aas
fisttps
mov
fdivr
dec
lds
pop
push
sub
jge
jns
scas
call
and
mov
sbb
lgs
sti
or
orb
mov
into
pop
dec
aaa
into
xor
xchg
movsl
out
cli
xchg
hlt
adc
inc
outsl
mov
shrd
push
movlps
dec
lods
xorl
fidivrl
or
int3
loope
jge
in
pop
fisubrl
jecxz
and
sti
xchg
popa
rcrb
movsl
jmp
outsl
sbb
xchg
cwtl
popf
aam
and
push
decl
mov
fsub
sbb
push
jg
sbb
scas
and
adc
fcomp
xor
jns
sub
mov
push
cs
dec
sub
add
mov
imul
push
sub
out
in
inc
insb
mov
arpl
insl
add
and
divb
outsl
enter
lods
push
mov
jo
pusha
mov
cmp
jp
ljmp
adc
add
sub
popf
lahf
mov
cld
sub
daa
pop
in
pop
or
add
sahf
inc
adcb
fmul
ret
mov
imul
loopne
data16
xor
xchg
add
cli
out
les
fisubrs
lds
mov
sub
and
cmp
pop
mov
repz
scas
push
cld
hlt
notl
and
ljmp
ficoml
inc
jmp
jmp
sbb
movsl
lds
cmpsb
movsb
out
sub
and
cltd
fnsave
lock
cs
aad
adc
pop
pop
sbb
insb
loope
push
imulb
pop
shrb
ror
or
rcrb
sbb
xorl
lods
inc
cmpsl
jge
dec
push
pop
orl
or
mov
or
sbbl
rcr
aad
cld
out
sbb
int3
xchg
or
in
add
cmp
stc
imul
mov
mov
mov
mov
clc
div
popf
mov
fcomps
pop
adc
cmp
xlat
sub
push
lahf
rep
push
pop
add
or
and
add
pop
cltd
fs
rcl
sbb
dec
movsl
cmp
in
mov
fcmovnbe
mov
std
mov
stos
adc
dec
mov
in
cli
sub
jge
push
jno
cmp
jnp
cmp
mov
popf
dec
pop
popa
sub
pop
loopne
add
or
ret
jmp
call
adc
or
das
inc
orl
imul
pusha
arpl
add
lahf
cmp
enter
pop
repz
xor
iret
xor
jne
mov
movsb
cmp
pusha
sahf
out
js
in
push
jns
mov
fucomip
pop
cmp
pop
push
mov
adc
ljmp
mov
jg
mov
outsl
lods
out
adc
mov
imul
lods
jbe
popa
jle
js
mov
or
jp
mov
push
repz
popf
jae
xor
ljmp
cmpsb
mov
xchg
mov
push
cltd
div
stc
test
es
xor
arpl
sbb
inc
loope
dec
cmp
outsl
sbb
popa
sbb
push
cltd
push
xchg
repnz
add
out
lret
xchg
bound
push
cltd
push
inc
incb
cs
sub
insl
push
out
dec
in
popf
sub
int3
enter
popa
inc
pop
xor
pop
popf
in
or
mulb
cmpsb
push
push
adc
xlat
lret
repz
daa
xor
dec
pop
cmp
sbb
or
testl
mov
pop
int
fld
add
sbb
mov
in
push
aad
add
mov
stos
std
adc
cld
and
or
cmp
fsub
push
jg
lret
jp
fdivrl
sbb
mov
sub
loopne
push
iret
push
loop
mov
adcb
sbb
fildll
inc
shlb
adc
out
adc
aaa
out
imul
jge
sub
test
notb
mov
dec
test
dec
into
cmp
rcr
mov
mov
jne
mov
fisttps
jo
cmp
addb
cmc
lods
loop
incb
mov
lods
xor
mov
sbb
push
into
popa
sbb
lahf
push
adc
orl
adc
int3
imul
adc
mov
cld
mov
sbb
dec
iret
jle
lcall
das
pop
sbb
sub
fmuls
dec
mov
and
push
inc
int3
pop
cmpsl
jae
enter
xchg
out
fcmovu
orb
sub
out
push
pop
or
stos
daa
or
ss
fidivs
pop
sub
push
in
inc
loope
inc
pop
mov
loop
pop
jnp
icebp
xchg
bound
mov
inc
call
stos
mov
pusha
adc
js
cli
and
sbbb
adc
loopne
push
and
fmull
dec
mov
call
push
fimuls
or
and
daa
sti
xor
ss
xchg
jmp
cmc
sub
fimull
cltd
xchg
or
out
aas
and
ret
sub
mov
xor
xchg
rorw
add
lods
maskmovq
icebp
outsb
icebp
sub
lds
lods
popa
jo
fnstcw
mov
pop
stos
cs
lret
xor
out
call
outsl
adc
cli
sub
fnsave
outsb
stc
test
data16
dec
popa
int3
xchg
xorb
cmpsl
and
push
mov
roll
dec
test
jge
jl
xor
lods
mov
into
cmc
outsl
lcall
pop
lcall
mov
pop
sbb
testb
push
jo
adc
in
aad
push
imulb
sbb
pop
jmp
mov
xchg
mov
repnz
or
push
jnp
mov
cs
sub
fsub
add
inc
gs
lret
pop
rcr
pop
xchg
mov
repz
mov
movb
shrb
push
xchg
mov
clc
mov
scas
iret
popa
in
stos
push
ror
pop
pop
repnz
imul
ds
add
jge
ret
sbb
mov
jp
jmp
jns
aaa
addr16
imul
sub
push
negl
pop
sbb
jnp
scas
cmp
stc
mov
movups
imul
leave
mov
mov
lock
pop
inc
cmp
loopne
xchg
push
or
lret
popf
sbb
push
sub
movd
lret
shlb
mov
insb
add
out
sbb
mov
es
jmp
or
or
xor
inc
jne
mov
xchg
es
clc
mov
xchg
mov
xorl
xor
aaa
or
lock
mov
cmc
sbb
inc
jp
sti
jns
push
jae
add
pop
mov
sbb
pop
mov
sub
sub
mov
leave
scas
dec
mov
jl
mov
rcl
mov
sbb
dec
pop
test
and
nop
leave
movb
and
lea
cmp
ret
xchg
movsb
repnz
add
mov
ljmp
mov
test
movsb
cmpsl
jb
call
dec
push
push
cmp
popa
pop
add
sub
outsb
into
andb
fstp
cld
out
loopne
push
leave
jno
lahf
lods
outsl
pop
pop
mov
into
fcomi
mov
dec
out
mov
pusha
cmpsl
ret
jns
mov
in
fsubr
or
loop
pushf
repnz
lods
cltd
xor
cmpsb
mov
cmpsb
in
adc
and
push
idiv
jnp
enter
pop
sub
in
push
mov
das
lahf
jns
shlb
xlat
pusha
shll
insl
clc
add
int
sub
mov
dec
scas
pop
xchg
ss
mov
dec
nop
jl
jo
iret
push
add
xchg
or
inc
divl
push
ror
out
lea
in
sub
inc
rcpps
sahf
lods
call
insb
mov
mov
push
cmp
movb
loopne
stc
pushf
pop
mov
sub
adc
in
and
fdivrs
hlt
pop
inc
test
adcl
fisubs
pop
adc
mov
loopne
jg
dec
push
imul
sub
cld
out
arpl
jbe
adc
xor
lock
jnp
mov
in
sbb
lods
adc
xchg
stc
inc
les
cwtl
neg
cmp
inc
jae
sub
xchg
inc
ret
jge
aam
stc
or
das
push
mov
add
sub
fists
hlt
iret
mov
and
push
pop
sbb
mov
insl
push
push
mov
sahf
inc
push
out
scas
xor
mov
push
and
mov
push
dec
jne
in
mov
icebp
xchg
inc
stc
lcall
push
lods
add
jecxz
subl
repz
pop
cmp
jge
cmp
mov
call
jle
into
adc
xchg
inc
sti
pop
jg
push
xor
mov
and
insb
daa
jb
fcoms
imul
xor
call
fcoms
xor
aam
jle
inc
jge
pushf
shll
or
push
push
iret
pop
add
arpl
fsubrs
lods
sbb
push
push
mov
push
xor
jne
push
es
aas
add
test
loop
out
inc
xor
xchg
out
xchg
fchs
test
xchg
outsl
or
mov
mov
out
leave
frstor
push
cmpsb
push
shrl
addr16
movsl
lds
xchg
roll
and
mov
pop
cmp
jne
cltd
cmpsb
mov
inc
dec
push
mov
loopne
or
hlt
cmp
mov
cmc
mov
int
je
imul
mov
movsb
xchg
fsts
loopne
loope
mov
push
sub
cmc
rcll
mov
add
sub
rclb
imul
fistl
cmp
add
cmovns
push
xchg
stc
das
sbb
and
out
shlb
mov
mov
outsb
fistpl
scas
aad
arpl
xchg
adc
jnp
xchg
subb
pop
mov
xchg
popa
ja
jecxz
or
ret
and
les
int3
push
les
mov
test
fcoms
dec
pop
adc
insb
into
adc
cs
stos
icebp
add
dec
dec
lods
mov
mov
addl
push
dec
pushf
mov
mov
dec
repz
lcall
cld
dec
ja
jmp
xchg
dec
xchg
xchg
or
pusha
pusha
lret
push
or
pop
mov
or
mov
mov
dec
in
xor
jbe
leave
xchg
xchg
aam
adc
subl
dec
loop
fs
dec
mov
mov
xchg
popf
pop
inc
xchg
jge
cmp
cmpsb
push
mov
lods
inc
cmp
inc
sub
sbb
pop
or
or
jmp
gs
sbb
fdiv
cmp
gs
in
bound
scas
adc
lcall
mov
outsl
fwait
sub
outsl
shr
dec
lret
mov
movsb
loope
bound
dec
mov
es
jae
pop
xor
leave
repnz
imul
jecxz
subl
lret
dec
mov
subl
call
in
mov
ficoms
stos
push
loop
stos
orl
push
xlat
pop
push
int
add
call
std
out
pop
or
adc
scas
cmp
popa
inc
mov
fs
push
out
out
imul
xchg
ret
popa
push
shll
cmpsl
daa
fwait
cs
scas
js
add
dec
insl
je
cmp
movsl
mov
xor
or
add
push
pop
in
pop
pop
rol
mov
xchg
mov
gs
dec
pop
push
adc
inc
push
jbe
stc
pushl
jg
in
imul
stos
add
jnp
addr16
push
shrb
mov
loope
xchg
inc
ret
pop
and
add
sub
in
in
test
xor
push
sbb
pusha
jl
movsb
ret
sub
bnd
mov
mov
dec
mov
repnz
leave
lods
cmp
jae
test
sub
push
inc
cmpb
lds
and
jecxz
clc
notb
sar
mov
dec
stos
fadd
popf
test
and
dec
xor
cmp
inc
sub
or
dec
es
and
push
jmp
into
cmp
imul
aad
mov
sbbl
in
pop
enter
and
test
mov
xor
sub
pop
lea
mov
bound
and
xlat
or
xchg
cli
xlat
subb
cmovno
iret
lods
dec
jle
int3
lret
jae
xchg
mov
js
test
pushf
cmp
movsb
addb
out
push
addr16
imulb
inc
cmp
inc
xchg
push
xchg
mov
push
adcb
movsl
ficomps
rclb
movb
out
push
test
inc
or
fnstsw
scas
add
adc
add
sbb
xor
imull
mov
fbstp
dec
shlb
push
mov
in
adc
mov
movsb
sbb
jbe
xor
and
scas
mov
bound
mov
pop
addr16
xor
sub
cwtl
repz
sub
outsl
inc
inc
and
bound
mov
pushf
jns
xchg
sub
xchg
imul
stos
cmpsl
mov
das
mov
and
movsb
push
inc
loope
lock
add
loopne
pop
push
leave
std
jb
bound
dec
dec
pop
pop
mov
addl
add
icebp
pop
rcll
mov
jbe
rcrb
inc
pop
mov
push
xorl
mov
imul
pop
insl
pop
lods
movsl
pop
jle
pop
cltd
bound
mov
sti
push
xchg
repz
nop
dec
and
cmp
xor
arpl
int
test
or
popf
bound
mov
pop
adcb
jle
mov
xchg
sbb
test
mov
enter
sbb
fs
fs
stos
inc
adc
inc
scas
and
cmc
mov
mov
je
insl
cmp
dec
sti
cmp
out
fnstsw
divl
je
data16
mov
imul
sbb
data16
inc
loope
fdivrl
dec
lock
cmp
pop
push
xchg
mov
dec
movsb
add
shll
roll
sti
add
and
jnp
cmp
mov
mov
rorb
std
dec
testl
into
mov
loope
xchg
mov
shrb
fadd
fsubl
jnp
push
lds
ret
in
in
insb
outsb
mov
lea
add
cwtl
or
ja
in
mov
cmpsl
xor
pop
cmp
pop
or
test
pop
aaa
ljmp
addr16
xchg
mov
mov
cli
inc
or
enter
pop
mov
mov
mov
add
or
cmp
repnz
xchg
add
sbb
pop
lods
shlb
lret
ds
xchg
cmp
stc
add
leave
rol
js
and
adc
movsl
aaa
punpckhwd
jo
mov
scas
outsl
movsb
inc
push
push
sbb
cmp
adc
dec
popa
pop
das
push
out
insb
push
inc
pop
movsb
mov
mov
imul
inc
or
clc
or
iret
shll
pop
movsb
loope
add
xorb
int3
xorl
mov
imul
loopne
test
gs
mov
lahf
and
xor
pop
stc
std
and
pusha
subb
pop
testl
and
mov
pop
mov
mov
xchg
xor
jmp
adc
push
sbb
dec
sub
test
int
lret
mov
fnstcw
es
push
test
xchg
dec
sbb
test
repz
dec
xchg
jge
decl
pop
pop
jns
jl
arpl
jl
pop
das
push
aaa
out
push
mov
mov
jge
sub
xor
arpl
lock
add
push
inc
arpl
xchg
cli
jge
dec
jg
loop
leave
sbb
adc
push
sti
sub
fisttpll
repnz
jle
adc
cmp
push
shlb
pop
lret
ret
lahf
es
popf
xorl
scas
je
sbb
inc
jmp
pop
pushf
xchg
cmp
popf
orb
jecxz
push
sub
push
adc
rorl
cmc
xchg
mov
dec
in
cmpsl
outsb
sti
loop
jnp
or
je
cltd
int
mov
dec
sbb
fstpt
subb
pop
adc
sbbl
xchg
idivb
hlt
jp
mov
scas
std
adc
mov
lea
in
leave
ret
rcrb
lods
add
or
jmp
in
das
jnp
fisubl
test
lahf
adc
jo
push
or
repnz
jmp
fwait
mov
add
cmpsb
sbbb
lods
adc
or
xchg
sub
adc
add
fistpll
pop
sub
jmp
cmp
fists
repz
pop
push
mov
pop
add
dec
mov
add
sbb
frstor
sarl
and
lods
mov
mov
adc
adc
mov
shll
es
aas
jbe
mov
fucomi
and
in
leave
daa
nop
pop
negl
pop
stc
adc
or
xchg
sbb
pop
lahf
orb
dec
inc
fsubrl
jge
mov
stc
scas
jmp
loop
enter
xlat
jno
mov
repnz
adc
xchg
xor
enter
sub
repnz
cld
cld
icebp
xchg
subl
or
mov
xchg
and
scas
sub
std
dec
mov
pop
mull
repz
push
std
dec
hlt
add
leave
js
jns
lock
xlat
adc
mov
test
loopne
dec
add
out
or
lds
inc
push
or
adc
rol
icebp
fstl
inc
dec
and
cmp
dec
enter
mov
jp
push
add
push
test
leave
dec
pop
pop
cmp
insl
insb
adc
shlb
lock
and
mov
inc
sbb
rcrb
push
push
xchg
xor
icebp
pop
scas
loopne
pop
pop
fnstcw
arpl
sti
dec
bnd
or
jae
repnz
call
sub
in
sti
rorl
addr16
gs
jecxz
add
repnz
imul
jg
sahf
repnz
fadd
mov
pop
inc
sbb
ficoml
pop
push
into
loopne
imul
push
xor
or
cmp
imul
outsl
clc
pop
shrl
fistpll
aas
push
addb
js
jge
jecxz
sub
add
inc
movsl
test
pusha
push
sbb
pop
push
sbb
iret
cmp
int
fistps
jp
add
in
and
push
jle
lret
lea
hlt
pop
dec
lret
les
cmp
cmp
es
pop
or
mov
btc
xchg
adcb
inc
shll
addr16
push
mov
scas
je
std
jge
cmp
daa
test
sti
ret
cmpsl
lret
dec
out
jmp
mov
fisubrl
das
clc
bound
push
add
lahf
pop
and
jns
stos
add
or
sbb
cmpsb
std
xchg
test
lds
or
xchg
jge
jns
push
adc
sub
addl
roll
call
pop
gs
cld
out
sub
je
addr16
mov
hlt
push
sub
insb
push
cmp
push
daa
dec
push
dec
aam
idivb
inc
pusha
mull
mov
sti
xor
outsl
cmp
je
sub
icebp
repz
les
or
scas
and
fcoml
loop
mov
sbb
mov
ja
inc
xchg
jp
push
movsl
mov
sbb
sub
sbb
dec
dec
sbb
jle
and
adc
lock
cmp
mov
sub
mov
jo
or
cs
jmp
call
ja
loope
loope
std
negl
je
adc
in
daa
cmp
xchg
xor
pop
or
xor
xchg
gs
inc
rcrl
lcall
jne
dec
mov
icebp
in
mov
dec
out
sbb
add
fwait
adc
lahf
in
inc
sbbb
fimull
cmc
pop
adc
flds
push
mov
inc
aas
in
and
ret
std
fcoms
push
nop
arpl
fwait
xor
dec
dec
adc
fiadds
mov
mov
pop
jnp
in
shr
mov
jl
push
jmp
out
mov
push
int
push
int
or
mov
inc
pop
adc
mov
push
daa
fdivl
or
sub
lret
mov
adc
call
push
or
fwait
test
push
push
cltd
dec
inc
popa
mov
xor
mov
pop
dec
mov
decb
add
and
ds
push
jmp
out
mov
xchg
aaa
rorl
mov
xchg
and
sarl
call
or
ds
inc
xor
subb
into
imul
pop
outsl
dec
mov
outsl
mov
iret
aas
insb
aad
and
jle
xor
fimull
jmp
out
and
fwait
out
in
add
lods
mov
xor
push
aas
add
sbb
push
inc
adc
add
pop
imul
ficomps
imul
jge
add
call
mov
push
sub
fidivl
or
rcr
adc
mov
aas
pop
xchg
xlat
test
cmp
mov
pushl
inc
sbb
xor
adc
or
jmp
popl
arpl
push
xchg
aad
dec
cltd
loope
push
rep
jne
mov
sbb
scas
jecxz
sbb
arpl
aam
subl
pop
imul
data16
cmpsb
loopne
pusha
loopne
pop
clc
out
test
mov
daa
push
leave
cs
shr
jnp
adc
xchg
mov
and
clc
ds
sbb
aaa
and
cmovno
jne
out
mov
mov
movsl
mov
add
and
inc
popa
clc
mov
add
or
push
insl
js
cmpsb
xor
mov
mov
jo
xchg
mov
fs
and
inc
dec
mov
jb
add
xchg
test
lret
mov
out
pop
push
xchg
aaa
xchg
inc
add
mov
repnz
push
inc
lods
add
sbbb
fidivs
dec
push
adc
ficoms
leave
pushf
inc
mov
pop
jmp
in
xchg
mov
rorb
clc
les
imul
xchg
pop
insl
and
push
push
xor
xchg
fdivrs
ror
leave
mov
push
subb
jle
mov
xchg
mov
loopne
shll
sbb
roll
addr16
and
cmp
shl
insl
pop
mov
out
push
dec
lds
push
cli
insl
in
mov
lods
sub
imul
adc
int3
dec
loop
xchg
xor
outsb
insb
mov
fidivrl
mov
and
adc
or
sbb
mov
or
push
push
xor
lea
aaa
movntq
jnp
les
lock
jae
xchg
mov
mov
mov
test
scas
das
in
sub
add
rolb
push
inc
jl
sbb
stos
rcll
or
adc
pop
std
adc
mov
xchg
xchg
into
jb
sub
dec
inc
pop
xchg
ljmp
scas
mov
dec
mov
mov
mov
in
push
int3
jnp
pop
sbb
push
addr16
jne
int
xchg
mov
jno
enter
mov
popf
loop
mov
testb
mov
pop
sbb
sub
lods
mov
xchg
mov
rorb
pop
cmc
icebp
fidivrs
xor
fbld
out
fdivs
les
jl
stos
mov
mov
pop
mov
mov
sahf
pop
shrb
inc
out
mov
cmp
mov
int3
sub
or
mov
mov
call
mov
inc
out
xchg
mov
dec
andb
pop
inc
movsl
aaa
test
imul
adcb
roll
cmp
jge
stos
dec
lahf
fldcw
adc
out
cmp
aaa
xchg
jbe
std
pushf
cli
cmp
xor
cltd
shl
add
vpshab
outsl
hlt
je
pop
dec
loopne
sbb
fsts
mov
testl
jb
add
inc
adc
lahf
cmp
cld
aam
repnz
fsts
rclb
loop
imul
ret
adc
pop
lret
sarb
cmp
cmp
imul
xchg
cmp
mov
addb
fnstcw
xchg
push
jns
mov
insb
xlat
scas
adc
or
add
cmpsl
or
fnstsw
pop
push
xchg
lods
rcrb
dec
cmc
scas
mov
cltd
jnp
je
dec
in
push
adc
mov
mov
divl
sahf
mov
adc
pop
icebp
jl
std
iret
js
jg
out
fadd
das
lret
repz
jo
cli
scas
mov
cmpsb
hlt
sbb
dec
pop
js
dec
mov
push
fnsave
xchg
xchg
sbb
or
and
jno
push
scas
es
jnp
adcl
and
cltd
das
sahf
daa
aas
mov
fldpi
inc
mov
in
xchg
lret
cmp
adc
xor
lahf
mov
mov
xor
inc
cmc
and
pop
inc
mov
mov
jmp
mov
fcomi
cmpsl
aas
cltd
lds
mov
fcompl
and
test
cmc
pop
aam
fidivrl
xchg
add
xchg
or
cmp
xchg
adc
pop
sbb
loopw
lahf
push
mov
sub
pop
test
push
dec
xchg
or
into
adc
mov
or
inc
imul
or
call
fwait
ljmp
negb
add
test
movsb
jne
jmp
mov
push
clc
mov
ljmp
sbb
lods
pop
cmp
xor
mov
test
outsl
xlat
das
mov
test
out
inc
ss
push
out
adc
sub
mov
push
cmp
cmpsl
lcall
int
fldt
dec
mov
aas
int
dec
pop
aam
test
inc
cmpsb
fildll
fs
imull
test
xchg
mov
pop
arpl
in
lcall
fnstcw
inc
xor
xchg
mov
and
pop
xchg
lea
inc
push
lods
jne
gs
jo
or
out
mov
fistpll
sbb
es
or
pop
ja
mov
xchg
fcompl
ret
sbb
cmp
pop
pushf
inc
out
jle
fisttpll
mov
jecxz
mov
xchg
and
xchg
aas
sbb
push
les
adc
into
sbb
out
fstps
sbb
ss
jecxz
inc
push
mov
aam
ret
jne
xchg
icebp
jl
push
out
decb
add
ds
dec
movsl
les
jg
inc
mov
lret
stos
mov
loop
mov
fimuls
sbb
dec
lcall
push
in
jb
sub
insl
mov
enter
stc
jo
cmpsl
inc
jbe
mov
std
jl
inc
stos
push
mov
xor
dec
subb
fs
dec
adc
testb
int
jb
out
jmp
mov
or
inc
pop
into
inc
shll
test
push
ret
leave
dec
push
scas
adc
xchg
packuswb
and
or
push
pop
lcall
pop
outsl
cmp
rorb
pop
repz
jmp
mov
roll
jg
cmp
jnp
add
fimuls
sarb
in
dec
test
push
pop
mov
push
pop
push
clc
mov
mov
dec
pop
xchg
out
vpcomub
mov
mov
adcb
ficomps
mov
test
jmp
cmp
test
mov
popf
jae
loope
les
cmp
and
xor
sahf
data16
lods
pop
pop
jg
mov
sarb
and
add
imul
xchg
mov
jae
faddp
arpl
dec
loope
test
dec
jnp
dec
mov
add
mov
lods
xchg
pop
repz
inc
push
push
inc
or
es
aas
outsl
lcall
gs
mov
push
adcb
lods
fwait
push
or
cmp
adc
iret
jno
dec
push
jbe
mov
pop
mov
jae
sahf
pop
xchg
mov
sahf
shl
imul
popf
cmpsl
push
aam
cmp
inc
or
inc
int
xor
pop
add
push
lahf
jecxz
jle
scas
cmp
add
pop
cs
addr16
or
shl
lcall
mov
scas
push
pop
ja
mov
or
in
push
popa
popf
les
adc
and
test
ja
test
ja
xchg
addr16
hlt
shrb
cmp
push
jae
pop
cmp
das
in
repz
push
lret
add
sbb
push
jp
mov
xlat
stc
inc
xchg
jmp
out
xchg
pop
and
stos
test
inc
adc
adc
push
mov
dec
ss
cmpsb
push
out
jno
sub
inc
imul
cwtl
push
and
sbb
out
push
jg
pop
enter
lea
out
pop
shlb
jg
jae
inc
stc
push
movsl
sarl
insl
pop
add
mov
icebp
mov
xor
or
mov
mov
out
les
xchg
jb
in
inc
icebp
imul
xchg
fisubs
pop
fidivl
inc
xchg
repz
lret
movsb
cmpsl
push
outsb
push
or
pop
pop
pop
imul
ljmp
mov
les
or
sbb
push
mov
mov
xchg
lods
fdivrs
mov
dec
mov
add
dec
iret
lods
mov
xchg
mov
mov
add
dec
jo
fs
stc
or
jg
bound
cwtl
mov
mov
and
add
xor
push
jns
mov
mov
cmpsl
mov
aam
fidivrs
retw
jne
xor
ljmp
mov
xor
inc
pop
push
pop
pushf
push
mov
push
mov
push
pop
and
xchg
iret
adc
cmpb
push
ret
xchg
adc
push
xchg
cmp
cmpb
dec
cmpsb
sbb
or
leave
scas
fsubs
or
mov
dec
dec
add
pop
dec
lds
fwait
push
idivb
fbld
jbe
sbb
jge
push
mov
loopne
fwait
outsl
daa
gs
ja
mov
push
xchg
cmpsl
icebp
clc
ss
jmp
repnz
jle
and
lds
or
xchg
lahf
push
push
lock
in
sbb
lods
notl
mov
dec
mov
pop
sbb
ja
push
sbb
mov
enter
fstp
push
pop
stos
cs
out
add
clc
fnstenv
repnz
data16
jl
push
ds
stos
inc
rol
cmp
lds
jmp
jle
pop
adc
adc
movsl
inc
dec
mov
sub
lret
mov
mov
dec
clc
daa
add
push
lahf
sub
or
inc
mov
imul
jp
ret
outsb
lock
jne
test
sti
aaa
out
aad
push
jecxz
or
inc
lret
loop
push
push
mov
push
mov
pusha
mov
dec
inc
test
shrl
or
xor
jns
loope
push
pusha
xchg
pmulhw
jns
mov
test
add
data16
dec
sahf
loop
lods
inc
xor
lods
leave
pop
mov
pop
repz
or
jae
push
arpl
idiv
and
lcall
daa
mull
movsl
or
data16
popf
push
aam
stc
cwtl
xchg
ja
loopne
mov
fcoms
xchg
adc
cmp
icebp
shlb
mov
jl
jg
iret
data16
push
mov
lret
mov
inc
decl
ret
dec
lcall
mov
xchg
adc
fsubp
xchg
test
into
das
inc
test
lea
inc
add
les
popf
cmp
xchg
fistps
out
mov
pop
inc
push
inc
outsl
cld
iret
cmc
push
aas
fcmovnbe
gs
andb
das
dec
lret
xorb
mov
mov
sub
push
ja
inc
dec
rol
sbb
or
jb
pusha
mov
mov
lcall
ret
mov
dec
cwtl
xchg
and
ret
cmpsb
insb
push
xor
leave
fcomps
int3
pop
nop
dec
scas
jb
jl
movsl
loopne,pn
inc
in
mov
adc
mov
lock
scas
inc
jl
mov
incb
mov
rclb
fisttpll
pop
fiadds
push
daa
out
sub
mov
jo
cmp
inc
nop
dec
cmp
xchg
loop
cld
jp
adc
shll
gs
pushf
jne
mov
add
xor
inc
xchg
out
les
inc
sbb
push
stos
xor
dec
sub
jl
call
std
sti
shlb
icebp
push
insl
mov
dec
add
in
andl
dec
cmp
mov
imul
in
xchg
adc
fsub
xchg
mov
xor
jge
fcmove
jp
inc
mov
push
xor
jb
mov
imul
cli
loop
mov
dec
jae
fbld
xchg
inc
pop
subb
or
dec
adc
push
sahf
repnz
mov
push
sub
insb
cmp
xchg
subb
lods
inc
add
jp
jne
and
mov
push
cmp
fdivp
xchg
jo
pop
insl
out
jne
ret
arpl
lods
jp
das
sahf
movsb
jns
ret
fwait
sub
lahf
enter
and
or
mov
adc
push
or
sarb
test
push
jecxz
lret
mov
in
jg
push
lock
lret
inc
shlb
and
inc
mov
sar
mov
adc
adc
cltd
xchg
xchg
add
out
and
sbb
imul
dec
sar
lods
out
mov
pop
daa
std
and
mov
stos
fs
or
fcoml
outsl
out
ss
xor
adc
test
cmp
data16
add
and
sbb
sbb
mov
std
imul
mov
popf
or
sbb
repz
jmp
stos
pop
jne
pop
cmp
call
repnz
mov
xor
daa
xchg
cmp
pop
pop
mov
shr
pushf
movb
or
pop
pop
imul
aas
xlat
jne
cmp
lcall
xor
cmp
lahf
or
xchg
adc
mov
xor
and
mov
or
sbbb
push
enter
imul
std
cmp
push
insb
jne
sbb
insb
cmp
cmpsl
xchg
or
cmc
pop
cwtl
testl
dec
xor
das
insl
test
rol
add
and
and
dec
lret
adc
bound
and
cmp
bound
arpl
mov
outsl
xor
sahf
sub
ljmp
dec
xor
fwait
in
loopne
clc
lahf
mov
les
dec
or
push
into
outsb
imul
push
es
pop
ret
mov
fistpl
out
clc
hlt
nop
jge
mov
pop
xchg
or
cli
mov
inc
jle
int
or
fucom
push
test
stos
ja
mov
aas
popf
pop
push
faddl
into
push
aas
adc
mov
cmpsb
and
bnd
aaa
mov
popa
lahf
mov
jl
and
mov
dec
inc
insl
insl
ret
cli
xor
push
and
sub
mov
mov
cmp
out
sahf
xchg
dec
xchg
ja
js
jg
outsl
cmp
stos
rcrb
insl
ror
pushf
ljmp
adc
xchg
mov
adc
outsb
into
ret
dec
stc
data16
arpl
jge
sbb
inc
ret
clc
imul
loop
or
pusha
mov
cmp
xor
fstps
mov
cmc
mov
and
dec
xlat
sbb
jge
push
jbe
mov
fsts
je
bnd
outsb
fcomps
stos
repnz
pop
pop
dec
mov
adc
fistpll
mov
fs
push
xor
cltd
loop
pop
jns
adc
xorb
loop
iret
push
cltd
jb
mov
and
rcll
adc
mov
lret
xor
push
shlb
mov
add
adc
pop
xor
adc
pop
jnp
or
jge
jns
or
or
rcrl
cmpb
push
in
test
sub
icebp
fdivl
mov
mov
call
pop
inc
add
or
call
les
mov
add
xor
das
dec
test
subb
dec
inc
fsubs
push
xor
mov
push
and
cmp
add
add
out
xchg
mov
movsl
rcl
insl
jnp
and
pop
mov
in
addb
inc
jae
fstl
cmp
addr16
mov
cmpsl
or
cmp
movsb
mov
lods
sub
bound
lahf
leave
xchg
inc
mov
std
jb
cli
adc
mov
pop
jnp
lods
push
ljmp
xchg
mov
mov
movsl
or
decl
inc
or
jmp
xchg
inc
and
adc
inc
fldcw
dec
xchg
xchg
or
or
fdivrl
sub
dec
mov
or
mov
jns
lock
cmp
inc
sbb
add
cmpsb
ret
inc
mov
xlat
xor
xchg
and
push
jb
rorb
stos
imul
mov
mov
pusha
lcall
push
ja
and
pop
out
mov
gs
mov
outsl
push
test
cmp
mov
mov
mov
sub
sti
lock
shll
pop
mov
mov
mov
cmp
ficompl
mov
sbb
push
rclb
test
test
mov
fsubrs
pop
adc
int
cmp
inc
dec
adc
push
xor
adc
fbstp
xchg
out
icebp
lods
push
mov
push
popa
in
fbstp
test
sti
lods
inc
test
mov
xor
mov
jno
imul
pop
fsubp
stos
and
xchg
inc
jne
pop
mov
movsb
add
cmpsl
rcrl
cs
push
xchg
dec
push
or
jge
cli
jle
pop
mov
or
in
aad
or
nop
sbb
nop
js
cmc
add
test
dec
rcrl
mov
jp
jae
divl
stos
xor
stos
cmpsl
lods
outsb
and
jp
sub
push
hlt
arpl
mov
pop
stos
cli
mov
xlat
sbb
push
jge
jns
loope
cmp
mov
test
cli
arpl
test
inc
jo
xchg
fmul
jp
cmp
mov
add
leave
or
inc
repz
inc
repz
and
adc
mov
ljmp
insl
mov
sbb
add
inc
nop
adcb
sti
cld
push
xchg
and
or
sub
or
inc
adc
adc
pop
movsl
jecxz
or
shll
aas
jp
test
ret
or
push
repnz
movsl
popa
add
int
test
and
mov
dec
cwtl
mov
adc
insb
call
jae
mov
nop
sbb
dec
pop
xor
sbb
loopne
ljmp
jns
dec
mov
adc
adc
dec
bound
notb
jge
inc
xor
das
rcrl
jbe
cli
or
mov
jbe
scas
arpl
imul
leave
std
jecxz
dec
lret
sub
aad
psubsb
adc
lods
out
divb
mov
repnz
mov
xchg
mov
inc
stc
clc
adc
aad
fsubl
mull
xchg
jo
mov
in
cld
mov
addl
cmp
jp
iret
sbb
das
je
in
pop
sti
dec
and
push
repz
adc
push
aad
push
divb
aaa
aam
cwtl
adcl
test
sti
mov
xchg
jae
jl
mov
jbe
or
and
stc
jnp
fs
xor
dec
ret
jmp
jo
imul
mov
int3
pop
aad
add
test
ds
mov
in
mov
lea
fimull
jbe
repnz
clc
ret
icebp
sbb
push
and
jne
mov
cmp
xchg
lods
push
shll
push
sbb
mov
sub
inc
fwait
int3
add
loope
cld
lds
mov
jns
shld
push
inc
jae
sbb
or
das
outsb
push
xchg
test
lcall
inc
sub
mov
fcomps
mov
xor
arpl
fdivr
xor
xchg
mov
je
fcoml
push
arpl
andl
rol
scas
xchg
sub
sub
std
lds
insl
cmp
lret
roll
inc
push
testl
or
cmpsb
or
adc
out
xor
cmpsl
dec
jge
push
fldenv
cmp
ja
testb
adcl
sbb
jmp
fs
pop
insl
std
notl
mov
lea
pusha
cmp
pop
jae
inc
mov
jb
lahf
mov
loop
aad
xor
mov
mov
fiaddl
and
and
pusha
mov
cmc
xlat
adc
aas
das
add
xchg
out
push
daa
jp
adc
sahf
add
mov
mov
adc
xor
arpl
xchg
pop
push
sbb
lods
mov
inc
rcl
xorl
adc
jbe
xchg
cmc
xchg
dec
addr16
pop
cmp
enter
push
mov
jne
add
out
mov
mov
jmp
loope
xor
sarl
mov
mov
jl
mov
sbb
ja
mov
sti
mov
pop
in
into
je
or
dec
nop
aas
xchg
or
xchg
dec
adc
out
out
push
lcall
shrb
rclb
iret
loope
jbe
jge
in
push
std
sbb
test
jo
sbb
inc
jg
push
shrb
dec
adc
cmpsl
and
scas
mov
cmpsl
shll
fcoml
add
dec
mov
mov
or
inc
push
add
lret
cltd
sahf
xchg
mov
xchg
xor
add
roll
loopne
jbe
mov
sub
jo
fwait
stos
push
xchg
push
mov
sahf
xchg
fcmovbe
ret
arpl
in
arpl
jno
int
sub
test
vmread
into
mov
xor
cs
sbbl
cmc
dec
add
addb
inc
mov
dec
or
or
mov
cs
dec
sar
or
pop
lods
push
mov
xcrypt-ctr
cmpsl
popf
icebp
push
imul
cmp
ret
aad
clc
jle
out
mov
dec
sub
add
sahf
mov
popa
cli
popa
ds
dec
add
shrb
xchg
push
iret
and
or
popf
xchg
daa
inc
adc
cmp
xor
loope
les
push
pusha
mov
mov
dec
xor
mov
out
push
les
xchg
mov
jp
sub
arpl
cmp
shll
jg
add
mov
and
addb
dec
ja
stos
dec
cmpsb
dec
test
sub
sbb
inc
mov
adc
aad
repz
add
inc
sbb
dec
insl
mov
scas
pop
push
mov
lcall
lods
notl
jne
add
xchg
push
ret
pusha
fmuls
outsl
and
and
mov
lods
mov
push
fdivrl
push
mov
mov
int3
inc
cmp
pop
jne
stc
pop
test
test
inc
push
mov
repz
pushf
lcall
out
cmp
lcall
call
xor
imul
je
mov
push
sbb
jmp
sub
repnz
xchg
dec
mov
fistl
insl
mov
push
ljmp
push
sbb
rcrb
add
lret
cli
or
and
fcmovb
daa
and
sbb
or
add
and
repnz
pop
rclb
test
and
jae
shll
push
jns
pop
xchg
addr16
xchg
xlat
scas
fwait
ret
ret
scas
cmp
xchg
sbb
ret
xchg
pop
scas
lea
sub
ret
call
or
pop
pushf
jg
loopne
or
ret
inc
sbbl
mov
divl
cwtl
xchg
sbb
pop
ss
ret
call
sti
call
sbb
gs
fiadds
add
lock
xor
pop
je
loope
ja
mov
out
paddusb
insb
mov
inc
xchg
popf
mov
rcrb
js
mov
mov
jbe
cmp
lahf
jecxz
pop
mov
aad
std
dec
mov
in
outsl
jo
inc
sbb
mov
clc
fs
adc
xchg
xchg
lds
mov
repnz
std
jns
push
adc
insb
inc
imul
cmpsb
push
pop
lcall
int
stos
popa
addr16
negb
lahf
notl
inc
test
int
sbb
cmpsl
jmp
test
mov
mov
test
in
sub
jg
adc
cmp
imul
ja
lcall
mov
out
leave
jl
lods
push
loop
xor
xor
andb
mov
and
sbb
pop
sti
mov
into
ret
fsubrs
daa
xor
arpl
mov
mov
cmpsl
outsb
dec
mov
inc
sbb
mov
inc
pop
mov
out
jge
inc
mov
movl
decb
dec
sahf
or
dec
jns
adc
and
pop
rorb
sbb
adc
adc
jo
pop
test
dec
in
cmp
lods
lods
outsl
jp
js
add
shll
inc
mov
mov
rcrl
jl
dec
lds
mov
mov
push
int
test
mov
cmp
lods
mov
xchg
cmpsl
pop
lock
jb
js
xchg
arpl
aas
popf
add
jnp
pushl
cmp
loopne
test
pop
pushf
xchg
or
ja
pop
icebp
adc
cmpsb
cmp
hlt
pop
movsl
push
bound
pop
dec
scas
stos
aad
mov
lahf
rclb
adc
fbld
into
cli
xor
cltd
pushf
movsl
pop
push
int
ret
add
dec
cmp
sub
lahf
cs
xor
pop
cld
test
push
leave
cmp
xorl
and
into
sub
fisttpll
mov
sub
nop
pmulhw
mov
fisttpll
bound
outsl
cmpsb
mov
inc
jae
ljmp
mov
int3
ljmp
sub
xchg
cmpsb
jmp
ret
jbe
push
call
lret
mov
mov
cs
ss
test
fisubs
std
cmpsb
or
pushf
xor
je
cld
and
ficoms
push
and
pop
int3
out
cld
invd
and
insb
loopne
lcall
xor
cmp
dec
dec
stc
pop
mov
jns
bound
das
gs
pop
stos
pop
and
mov
mov
jns
cli
into
cmp
mov
out
in
hlt
outsl
popf
loop
fistps
das
addl
and
jmp
mov
inc
pop
iret
stos
jns
out
pusha
push
rcrl
xor
es
scas
fdivrl
flds
hlt
jl
cwtl
dec
mov
int3
pop
adc
sti
test
outsb
jnp
jns
mov
fmuls
ds
pop
push
add
mov
fwait
loopne
adc
mov
push
sub
rol
xchg
inc
shrb
adc
or
sbb
mov
push
add
cs
aad
loopne
jge
xchg
test
adc
mov
inc
mov
arpl
ret
cli
cmp
pop
inc
dec
in
and
jl
loope
test
out
sti
sub
movsl
lret
fcompl
jle
insl
dec
dec
mov
push
repz
xchg
insl
jo
push
adc
mov
xchg
fists
movsb
popa
dec
ds
cmc
sub
mov
scas
mov
inc
inc
out
inc
outsl
jnp
mov
orb
std
push
push
outsl
add
fs
mov
inc
sub
cmpb
addb
imul
inc
mov
mov
add
loopne
cwtl
cmpb
nop
out
push
add
in
xor
sti
inc
out
notb
stc
iret
mov
push
push
cmpsb
clc
and
add
in
cmpsb
repnz
cwtl
push
cmc
and
notb
aas
push
push
arpl
inc
sub
cld
test
popa
jle
addl
sbb
xchg
pop
inc
addl
sbb
pop
in
sub
mov
xchg
mov
pop
xchg
push
loope
pop
sti
rol
out
jle
and
fstpl
lods
shrb
repnz
sub
jmp
mov
les
decl
sahf
sub
pop
imulb
inc
inc
les
das
repz
idivl
test
lret
mov
push
push
gs
sub
mov
aas
or
in
adc
fisttpl
mov
lds
mov
mov
insb
add
out
pop
lods
roll
aad
es
sbb
mov
pop
mov
rorb
sbb
arpl
mov
add
or
mov
pop
hlt
scas
mov
lods
mov
pavgb
jg
sub
inc
scas
dec
xor
je
in
xchg
add
xor
out
inc
inc
jae
xorb
mov
pop
jnp
arpl
in
xchg
iret
and
dec
enter
dec
lds
pop
mov
mov
inc
mov
int3
add
cmpsl
out
mov
out
pop
es
sar
push
testb
daa
aas
pop
test
jp
sbb
iret
pop
mov
ret
dec
xchg
negb
adc
dec
jl
loope
jp
js
fwait
and
outsl
jne
loop
jo
int3
outsl
popf
jp
stos
imul
in
test
sbb
into
int3
fidivrs
adc
lock
mov
xchg
pop
push
inc
test
lcall
adc
inc
pop
pop
stc
loop
iret
jecxz
lcall
and
jbe,pn
mov
pop
add
fs
arpl
dec
in
mov
addr16
insb
div
popf
push
out
out
xor
scas
jnp
bound
and
fadd
gs
stos
xor
xor
xlat
out
xor
std
jecxz
xor
xchg
sub
imul
inc
add
sub
xor
adc
ss
adc
stos
xchg
ljmp
leave
fdivrs
pop
ss
aaa
iret
sbb
push
push
jmp
mov
ret
xchg
jmp
loopne
in
loop
aaa
or
pop
push
push
test
popa
xchg
imul
push
and
push
stos
loop
dec
sub
scas
add
call
xchg
dec
scas
sahf
or
or
js
mov
cmp
or
repnz
and
fdivrl
movsb
addr16
or
and
or
jo
jns
popa
inc
dec
outsl
sub
adc
cmc
lock
dec
cwtl
fdivl
or
jmp
pop
mov
or
pop
push
sub
arpl
loopne
in
mov
push
enter
xchg
inc
pop
stos
and
stos
je
and
mov
xchg
jmp
fldl
int
and
xor
pushf
pop
inc
sub
loopne
add
xchg
ljmp
and
xchg
cli
mov
repz
ja
ljmp
test
adc
add
pop
loopne
rclb
mov
mov
jns
push
ret
dec
aas
inc
jns
cmp
jp
mov
mov
push
and
lcall
adc
push
push
jae
stos
in
int
xchg
aad
or
popa
rcr
xor
sbb
jb
pop
insl
mov
shrb
sub
and
and
or
and
insb
aaa
inc
sub
mov
enter
jl
ret
dec
xorb
xor
push
push
push
add
adc
rclb
cli
dec
fisubs
fmull
lods
movsb
pushf
mov
xchg
inc
daa
dec
inc
dec
pop
insb
popl
push
mov
adc
test
jmp
xor
cmp
cltd
gs
mov
aaa
inc
and
fcomps
adc
or
das
je
jge
test
push
fwait
xchg
mov
loope
stos
test
decl
cmp
js
xchg
and
and
pop
mov
out
sarb
cs
sar
fadd
push
mov
lock
outsl
xchg
test
mov
mov
gs
inc
or
mov
xchg
xchg
inc
xchg
movsl
movsl
xchg
sbb
sub
mov
and
push
js
or
or
rcl
lret
adc
add
mov
jo
jg
push
push
push
in
idiv
sarb
push
jl
push
mov
cmpsl
lahf
xor
pop
push
lret
mov
lahf
push
adcl
cwtl
push
ficompl
inc
mov
call
imulb
iret
xchg
ficoml
xlat
cld
add
mov
shl
int3
icebp
mov
iret
jge
pop
xchg
push
or
loopne
movsb
repnz
xchg
lods
filds
and
outsb
stos
push
inc
aaa
fsubrs
cmpsl
inc
add
sbbb
and
add
inc
aas
pushf
xchg
mov
fwait
adc
push
in
or
jbe
inc
ret
data16
rcrb
cmp
in
adc
dec
adc
sbb
or
aaa
sbb
out
pop
and
or
jle
jbe
cmovbe
dec
xchg
pop
mov
ret
pop
test
gs
jle
cmc
fldt
rorl
cli
in
and
dec
push
sbb
lods
int3
adc
repnz
dec
push
or
sub
inc
jecxz
nop
stc
sbb
mov
ja
sahf
cmp
mov
ret
lods
or
sub
push
mov
jl
js
sub
aaa
rcrb
add
lret
je
inc
mov
xor
inc
jmp
mov
cmc
add
pop
into
or
cli
arpl
pop
in
and
lods
dec
jnp
pusha
out
sbb
dec
xchg
adcw
push
push
lock
sub
ja
xchg
je
es
ret
jmp
dec
mov
dec
in
nop
pop
outsl
cmp
sarl
rorb
mov
cli
lods
and
dec
pusha
mov
push
inc
out
xchg
xchg
iret
adc
call
je
xor
adc
xor
or
outsl
mov
ja
jmp
sbb
fisubrs
dec
add
ret
fsubrs
jb
cmp
or
test
push
sbbb
xchg
lock
rcrl
daa
lahf
movsb
cld
enter
add
sub
fidivrl
movsb
xchg
insl
mov
pop
test
stc
rcl
cltd
ja
fisttps
call
je
enter
lock
jno
aad
or
imul
lret
and
and
push
rcrb
movsl
sbb
cmp
sub
pop
xchg
ret
mov
xchg
insl
punpcklbw
pop
cmc
leave
pop
push
xchg
sub
das
shr
outsb
dec
pop
sub
outsl
ds
iret
or
adc
fidivrl
int
test
inc
inc
mov
adc
data16
xchg
jcxz
lret
repz
mov
pop
xchg
int3
cmp
test
cli
fcoml
lods
inc
mov
pusha
fisubrl
fwait
out
leave
inc
and
xchg
loope
push
mov
sub
das
xlat
sbb
or
fisubrs
push
inc
mov
adc
push
lock
mov
fcoml
mov
enter
inc
dec
roll
and
dec
add
jecxz
clc
mov
add
xor
ja
movsb
xor
xor
sarl
or
hlt
xchg
inc
sub
dec
xor
xor
dec
jecxz
pop
sahf
xor
rol
sbb
into
xchg
jle
outsb
xor
lods
lods
pop
imul
pop
jb
inc
jg
adc
dec
xchg
pop
dec
scas
xchg
icebp
std
nopl
cs
sub
inc
push
stos
push
push
inc
mov
fsubrs
xchg
mov
iret
push
aas
and
lea
sub
ds
adc
pop
fildl
outsb
lea
pop
inc
xorb
sbb
repnz
mov
scas
imul
xlat
mov
mov
inc
and
ds
xchg
pop
scas
xchg
push
stos
jmp
enter
test
rorb
std
ja
scas
xchg
iret
cmp
adc
dec
js
inc
out
cmpsb
jl
ss
mov
xlat
jb
fbld
mov
push
lea
aaa
mov
add
in
js
into
mov
lret
gs
inc
mov
mov
and
push
das
add
dec
xchg
popa
cmp
cmpsb
jae
movsb
xchg
jle
enter
incb
fs
mov
jp
mov
cs
push
repz
or
sbb
mov
out
ljmp
or
pop
rcrb
mov
jl
or
stc
andl
ss
jne
add
in
xchg
repz
jo
sbb
xchg
pop
cmc
fsubs
notb
jge
xor
jg
push
test
cmp
std
cmpsl
pop
cli
add
out
adc
aas
cmp
mov
mov
fcompp
or
cmp
and
insb
in
jmp
cmp
add
lret
in
sahf
rol
loopne
lock
js
insb
ret
xlat
repnz
xchg
movsl
fidivl
std
outsb
sbbl
pusha
mov
sub
in
jmp
mov
xor
xor
xchg
sbb
lods
cmpsl
mov
loop
testl
jle
arpl
aam
jo
push
ss
jb
jae
xor
bound
jb
xchg
clc
sub
call
imul
jbe
pop
lock
push
insb
rcrb
lret
xchg
bound
push
das
cltd
test
sahf
ja
sbb
rclb
dec
fldl
or
mov
push
jecxz
cmpsb
dec
or
shr
addr16
rol
sub
jle
hlt
cmp
sbb
add
jp
mov
pushf
push
icebp
insb
fsubp
iret
jb
mov
js
ret
jecxz
mov
cmpsb
push
cwtl
lea
rorb
mov
inc
push
adcb
cltd
and
leave
int
inc
cmp
cmpsb
pop
push
pmulhw
or
fwait
mov
decl
mov
mov
sbb
or
sub
sbb
fmull
testb
adc
aad
movsb
xor
jmp
int
aas
imul
out
call
out
sarb
into
daa
dec
mov
dec
shlb
test
fsubl
popf
daa
mov
cmp
decb
push
fdivs
sbb
mov
sub
xor
add
imul
call
cmp
cli
aad
xchg
movsl
jbe
sub
enter
lahf
scas
push
push
mov
pop
push
or
jge
movsb
and
jo
dec
pop
fldt
dec
aas
ja
int
mull
dec
jge
fxch
mov
jmp
xlat
cmp
je
lods
movsb
inc
aam
int
iret
adcb
mov
pop
lea
inc
cwtl
cmc
dec
mov
cld
into
xchg
mov
ljmp
lods
sbb
jbe
imull
fwait
dec
popa
and
sub
inc
xchg
xorb
dec
cmp
pop
xor
addr16
xlat
pop
loope
mull
sarb
scas
dec
js
pop
mov
dec
outsl
fwait
call
push
enter
into
adc
stos
or
cwtl
repz
add
sub
add
shlb
ss
lods
pop
or
push
cltd
inc
push
jne
add
mov
mov
pop
icebp
leave
into
adc
dec
push
sti
int3
add
push
jp
sbb
push
popf
cmc
xlat
inc
test
adc
add
cmpsl
stos
shl
scas
push
jnp
jnp
jmp
cld
adc
test
sarl
or
fmul
jl
fistpll
pop
ficomps
imul
loopne
mov
jle
jns
je
pop
movsl
ja
and
lret
dec
xchg
add
and
or
mov
push
test
movsl
or
mov
adc
inc
and
adc
lahf
and
fidivl
mov
mov
cmpsl
clc
sahf
and
call
out
push
sbb
lods
cmpsl
movsb
or
mov
outsb
xchg
xor
popa
add
cmp
jge
mov
cmp
add
fcompl
ja
jns
pop
xchg
jae
inc
fnstsw
inc
jb
arpl
sbb
add
fdivrl
mov
jns
gs
pop
mov
stos
xor
stos
test
and
lret
cs
sub
movsl
fwait
pop
scas
fildll
jb,pn
cmp
mov
stos
adc
test
push
cld
mov
scas
data16
cwtl
roll
xor
lods
fcoms
xchg
add
cmp
rep
and
clc
sahf
sbb
pusha
arpl
pushf
or
imulb
add
ljmp
stos
cli
ja
cmpsl
lock
sub
lods
dec
pop
in
stos
scas
mov
cmp
adc
jg
loopne
xchg
push
xor
in
out
inc
dec
jge
adc
loope
mov
out
fsts
shr
or
sub
or
bound
pop
sbb
jne
dec
iret
sbb
andb
test
ss
jge
xchg
dec
lcall
inc
add
icebp
imul
ret
cltd
pop
cmp
pushf
test
lea
icebp
push
or
inc
loope
fcmovb
mulb
nop
loope
mov
xor
jnp
jbe
mov
jg
in
adcb
inc
pop
add
int
je
xchg
call
mov
fcomps
repnz
pop
dec
adc
fs
outsl
ja
sub
es
into
int
inc
push
ljmp
cwtl
jle
jle
es
jo
xchg
jb
xor
lock
cvtdq2ps
push
je
jmp
aaa
push
shl
out
sub
les
xchg
pop
push
push
loopne
xchg
or
dec
push
fwait
shll
xchg
sbb
out
into
call
add
cmovo
pop
mov
inc
xor
sub
pusha
repz
daa
psubd
in
je
mov
jae
shll
sub
push
mov
lcall
aad
das
mov
xor
dec
arpl
ds
inc
out
and
fisubs
test
mov
xor
and
adc
or
jmp
and
push
nop
lcall
sbb
sub
add
or
gs
popa
cmpsb
xchg
movsw
mov
pop
or
ficompl
sbb
mov
sti
jle
dec
pushf
out
or
and
push
push
jbe
pusha
inc
notl
sub
mov
lds
mov
pop
shll
fs
or
mov
jno
mov
cld
cmp
rol
aas
pop
adc
insb
jmp
mov
push
sbb
and
or
dec
jbe
dec
mov
adcl
mov
push
and
cltd
mov
xchg
push
sbb
add
jp
push
and
icebp
dec
ja
aam
or
xor
frstor
or
mov
movsl
add
cmp
aaa
insl
lret
sarb
outsl
jp
cmpsl
mov
xchg
divb
popa
xlat
lret
repnz
jns
test
and
lods
dec
and
lods
pop
sbb
cltd
cmp
xlat
jmp
mov
xchg
iret
and
xchg
pop
xchg
and
dec
aad
es
outsb
adc
xorb
addr16
aaa
jle
insl
adc
sub
sub
in
pop
xor
shl
lods
xor
mov
clc
and
xchg
hlt
ret
cmpb
mov
sbb
movl
xchg
xor
push
pop
scas
ret
push
push
insl
repnz
mov
ljmp
pop
hlt
or
cmp
xchg
popa
imul
mov
sbb
mov
cltd
hlt
shlb
sbb
popa
sub
outsb
sub
jge
xor
xor
je
je
repz
roll
push
cmpsb
mov
loop
insl
dec
nop
sbb
repnz
mulb
movsb
sub
inc
push
sar
mov
cmp
mov
lret
out
pop
xchg
or
jmp
popl
adc
arpl
pop
mov
push
notl
aad
push
jnp
or
int3
subl
mov
dec
stos
cmp
pop
and
call
js
add
daa
loop
stc
xor
imul
ror
adc
imul
push
fwait
or
mov
jmp
xchg
add
in
jno
imul
mov
mov
xor
cmp
insl
xchg
mov
mov
and
mov
sar
mov
xchg
and
cmp
les
bound
hlt
subl
nop
scas
xor
mov
mov
into
repnz
rol
and
pop
lock
add
repz
sbb
push
jp
dec
icebp
outsb
xchg
pop
xor
xchg
stos
fildll
adc
dec
pop
int3
gs
sahf
inc
addr16
push
jnp
add
or
cmp
push
xchg
lcall
imul
mov
xchg
sti
and
shll
sbb
jp
mov
xor
push
arpl
push
je
mov
insl
mov
push
cmp
xchg
sbbl
scas
xchg
arpl
mov
test
pop
push
mov
aam
lods
jno
mov
loop
fsubrp
jo
xchg
push
leave
mov
sub
cmpsl
xor
dec
push
repnz
inc
mov
mov
mov
push
inc
mov
fcompl
ljmp
test
or
fs
jecxz
cmpsl
aam
xchg
mov
test
les
js
mov
inc
sbb
adc
fbld
test
scas
adc
js
and
data16
pusha
fisubl
or
int3
cmp
pop
xchg
mov
inc
and
cld
decl
cmp
add
or
push
jb
inc
adc
or
mov
ss
stos
push
and
pushl
addr16
loopne
xor
icebp
addr16
mov
decl
or
jne
gs
fcomps
fidivl
fstps
sub
roll
std
addb
jns
sti
cld
out
mov
inc
jo
lods
push
xchg
pop
sar
out
sub
mov
es
in
sti
fwait
jecxz
dec
cmpsb
push
adc
xor
inc
add
insb
mov
ja
cmpsb
movsb
and
arpl
test
xor
inc
push
and
jecxz
aam
adc
nop
mov
rcrb
xor
push
aas
popa
pop
and
jl
mov
xchg
call
mov
lret
ds
mov
cmpsb
xchg
mov
outsb
lret
idivl
subps
dec
fs
adc
outsb
jns
dec
xor
fstpt
sbb
imull
sub
or
stc
jl
lret
das
xchg
adc
xchg
xor
sarl
push
cmpsb
and
or
int3
cli
fnstcw
pop
add
fbstp
ds
scas
nop
jne
mov
loope
pop
movsl
dec
push
test
popa
dec
xor
jns
fdivl
inc
dec
xchg
fidivrs
mov
push
repnz
in
mov
jae
iret
repz
xorb
sbb
xchg
cmp
int3
cmp
push
addb
jg
loopne
ja
das
add
stc
xchg
dec
jg
xchg
dec
mov
outsb
mov
mov
adc
cli
int3
icebp
aam
lcall
loop
mov
mov
mov
lahf
push
or
mov
push
xor
and
in
mov
sbb
jo
mov
iret
enter
and
mov
xor
out
inc
mov
mov
push
mov
or
pop
add
mov
xchg
mov
insl
dec
fldl
das
adc
mov
mov
ret
lods
stc
ss
mov
pop
pop
nop
arpl
sbb
sub
popf
iret
push
push
jmp
mov
ret
enter
inc
cwtl
sbb
cmc
inc
mov
out
inc
lcall
out
out
and
pop
sbb
into
or
int3
ds
xor
xchg
sub
inc
enter
adc
sub
into
xlat
fisubrl
add
imul
out
out
jns
pusha
jecxz
nop
stc
mov
xchg
sub
cs
mov
mov
inc
mov
in
and
adc
mov
mov
mov
push
lahf
nop
sub
mov
xor
fsubrl
shrb
nop
push
lret
push
scas
in
jle
adc
xchg
inc
lsl
in
data16
fisubl
sub
stos
adc
fcoms
daa
shlb
cmp
sub
cmp
mov
inc
cltd
mov
push
pop
into
sarb
sbb
xchg
ret
pop
inc
xchg
dec
les
dec
daa
movsb
dec
jo
in
inc
pop
call
in
lods
pop
mov
add
ja
mov
jb
pop
lret
jo
call
pushf
push
pop
mov
aas
xor
jnp
mov
xor
in
out
inc
mov
enter
in
push
xchg
mov
cmp
ljmp
push
orl
stos
lcall
das
cmp
fld
inc
repz
sbb
orl
das
addr16
add
movsb
xchg
mov
lock
mov
cmp
imul
adc
fmuls
push
shl
mov
cwtl
adc
push
sub
or
jmp
jle
ret
mov
pusha
add
stos
mov
je
dec
sbb
add
gs
data16
ds
ss
popa
cli
mov
fisubl
pop
jg
xor
into
mov
sbb
mov
movsb
fs
dec
popf
lods
pop
xchg
filds
fidivs
mov
xor
test
repz
inc
jg
ljmp
ja
cmp
scas
adc
cmpsb
mov
sub
int
add
das
or
jecxz
stc
jb
cmpsb
lret
xchg
pop
adc
fsubs
jnp
push
test
jo
sub
add
push
inc
pop
cmp
call
add
add
popa
sti
pop
pop
pop
dec
scas
pop
push
fdivrl
adc
mov
adc
dec
and
sbb
pop
test
loope
aad
arpl
adc
add
adc
test
rclb
jecxz
push
and
loopne
rol
enter
lds
xor
aas
jne
xchg
cmp
jno
adc
das
imul
jnp
ja
jecxz
mov
arpl
sti
aam
xlat
leave
in
mov
cwtl
je
or
adc
xor
stos
mov
int3
inc
loop
mov
ljmp
pop
inc
cwtl
lods
enter
aad
enter
iret
out
insb
dec
out
movsl
and
iret
in
dec
xbegin
call
cmp
rcrl
and
popf
xchg
popa
pop
jge
dec
lcall
inc
js
mov
out
push
lods
das
mov
mov
clc
inc
stos
xchg
enter
movsl
std
bound
xchg
push
mov
outsl
sbb
bound
mov
jecxz
jns
push
sar
mov
mov
sub
lret
aaa
push
jae
push
fwait
pop
cmp
subb
pop
jns
aad
push
adc
mov
pusha
and
lods
gs
sub
imul
dec
pop
and
sarl
subl
fsub
adc
test
sbb
mov
add
es
jl
or
xor
test
or
leave
add
std
xchg
das
add
push
mov
dec
out
push
enter
mov
cmp
aad
divb
sbbl
sub
or
and
inc
cwtl
mov
dec
or
or
push
or
mov
test
mov
lock
pusha
push
mov
sbb
fwait
stc
xchg
sub
in
mov
out
xor
out
mov
adc
lea
js
popf
xchg
lret
imul
repz
orl
adc
push
sti
jae
fidivrl
rcr
daa
jnp
cmpsl
mov
aas
dec
mov
rorl
sahf
sbb
dec
or
mov
lret
cmp
cmp
xorb
adc
dec
sbb
in
jns
jp
lea
ret
enter
mov
mov
mov
adc
jns
mov
mov
mov
fmuls
sbb
cmpsl
into
imul
pop
ljmp
mov
daa
mov
mov
cltd
or
push
xor
outsb
jae
cs
lahf
ret
sub
dec
adc
scas
leave
fs
push
std
pop
popl
pop
cltd
cmpsl
add
ljmp
and
sahf
inc
push
push
jae
test
push
lcall
mov
mov
out
cmp
xchg
out
jo
mov
mov
negb
aad
cmp
lret
outsb
xchg
and
mov
sahf
loopne
sbbb
jno
inc
mov
and
out
mov
ja
cmc
icebp
dec
clc
or
xchg
cs
andl
sbb
call
data16
pop
or
push
jb,pt
sbb
pop
lea
out
xchg
ja
push
mov
xchg
push
setno
imul
loopne
lret
cmp
div
ds
or
push
and
mov
rolb
xor
push
fstp
data16
or
in
add
leave
loop
sbb
add
mov
rolb
cmp
cmpsb
add
dec
fstpl
inc
shl
lcall
xchg
repz
lret
mov
nop
test
mov
fcmovnu
sub
movlps
test
pop
js
dec
iret
jns
xor
stos
mov
jb
add
mov
aaa
lds
cli
out
xor
xchg
das
inc
xor
dec
test
jle
adcl
push
mov
lds
add
jge
add
int3
pop
adcl
cmp
inc
hlt
hlt
fst
rol
adc
mov
mov
xor
into
mov
lret
out
fldt
mov
dec
call
fcomps
in
pop
lahf
or
in
or
lods
cmp
test
xor
cmpsl
test
and
shlb
in
inc
pop
lock
fdivs
push
cli
or
mov
mov
data16
sbb
add
xchg
repnz
aaa
jne
inc
ficoml
repnz
or
adc
dec
sti
mov
jo
loopne
pop
xor
inc
inc
scas
loopne
jge
jmp
loop
into
dec
out
sbb
xor
or
inc
gs
adc
imul
mov
mov
sbb
fildl
lods
add
loopne
popf
jg
les
push
adc
orl
adc
xchg
out
push
outsl
into
push
ljmp
jmp
aad
or
sub
mov
mov
and
add
ret
push
add
sub
cmp
shll
sbb
clc
pop
adc
xchg
dec
or
dec
cmpsl
mov
add
call
sarl
fwait
or
jnp
mov
add
addr16
mov
push
and
push
cwtl
test
out
sbb
int3
push
jnp
es
push
sub
divb
ja
scas
rcrb
mov
xor
out
mov
hlt
rorb
repz
sub
enter
mov
lds
xchg
xchg
xor
lds
lret
jg
inc
fdivs
addr16
push
push
xor
fsubrs
leave
mov
rcrl
repnz
or
pop
pop
in
dec
xlat
or
out
mov
test
orb
das
dec
aas
xor
iret
stc
sbb
scas
test
mov
sbb
jl
daa
fsts
push
fisttpll
test
mov
test
popa
out
jmp
inc
push
ljmp
xchg
xchg
and
cmpl
out
sub
in
fwait
add
dec
sahf
ds
stos
lea
ja
add
cltd
ret
xor
repnz
ja
push
cmp
pop
or
lock
movsl
outsb
test
lock
shr
repnz
or
push
mov
aad
adc
jne
dec
adc
cmp
or
nop
push
inc
call
mov
push
xchg
xor
arpl
imul
cmp
pop
pop
pop
mov
mov
imul
sbb
cmp
roll
imul
mov
jb
es
pop
jo
or
das
loopne
push
js
mov
inc
dec
cld
pop
adc
fdivrp
jecxz
cmp
lret
sub
pop
mov
pop
dec
xor
mov
outsb
test
vcmpps
or
xor
jp
xchg
and
mov
xor
xlat
mov
add
xor
xor
ss
xor
sbb
shll
inc
lods
push
jb
ss
inc
subb
xor
push
mov
push
popl
adc
push
inc
push
outsb
push
adc
add
xchg
int
rep
ds
xchg
xor
mov
fwait
pop
jmp
es
pushf
xor
mov
or
cli
cmp
mov
mov
jae
or
cmp
add
je
add
xor
sarl
push
fcmovu
addr16
jnp
int3
lock
xor
dec
pop
xor
mov
lock
xor
xor
or
and
sub
mov
jae
mov
pop
cmp
pop
inc
inc
or
cltd
and
mov
leave
in
notb
enter
xchg
pop
mov
adc
in
getsec
pop
shl
ficoml
fmuls
fs
xchg
lcall
stos
loope
adc
pop
arpl
aaa
sbb
mov
pop
sbb
lods
mov
mov
test
cmp
xchg
inc
jg
xorl
jno
insl
in
or
push
outsl
push
fs
clc
lahf
popf
mov
adc
mov
mov
jecxz
mov
out
push
push
mov
lcallw
mov
or
test
pop
test
inc
pop
jecxz
add
push
lds
xorb
dec
iret
je
fsubs
stos
int
enter
sbb
mov
inc
cmp
stos
ja
fsubrs
lods
cmpsl
and
mov
dec
in
pop
jo
sahf
mov
jp
insl
iret
in
mov
call
adc
imul
and
add
pop
inc
jp
add
bound
pusha
arpl
stos
cmpsb
jb
lret
jle
leave
or
mov
cli
sbb
pop
push
aam
sub
mov
xor
rcl
popa
sbb
pop
cli
addr16
pop
aam
shll
jne
pop
je
stos
xor
hlt
popa
rcr
mov
sbb
jns
push
cmp
mov
outsl
aaa
jle
push
aas
push
cmc
jp
mov
push
jge
rolb
pop
xchg
add
inc
push
incb
xor
sub
out
pop
adc
cmp
dec
jmp
mov
mov
scas
sub
mov
popa
nop
lahf
movsl
push
xchg
xchg
ja
dec
pop
std
xchg
fwait
jb
mov
fldt
mov
aad
stc
jo
jae
push
push
iret
jb
cwtl
sbb
pop
loopne
jmp
bound
inc
inc
sar
imul
pop
mov
mov
clc
mov
maxps
mov
cmp
outsb
sub
pop
scas
push
sub
loope
jno
inc
ds
mov
clc
mov
mov
int3
test
out
dec
xchg
xlat
cmpb
sub
sbb
test
jbe
divl
popf
arpl
shrl
ror
inc
popa
cmp
test
test
int3
aaa
imul
cld
push
xchg
lea
xor
ja
outsl
jg
leave
pushf
dec
xor
jl
push
lahf
test
addl
mov
xchg
test
xchg
push
inc
ret
aas
adc
cli
icebp
movsb
mov
mov
adc
or
hlt
fcoms
and
sbb
icebp
ss
dec
jno
cmp
or
stc
popa
rorb
push
cwtl
rorl
mov
addr16
inc
jmp
imul
lds
pop
aam
jne
imul
in
xlat
and
fnstcw
icebp
js
sub
xorb
dec
jg
mov
decb
in
in
nop
sub
fidivrl
jl
push
mov
add
mov
aas
ficoml
adc
xchg
cs
push
lods
cmp
jo
sbb
inc
out
loope
flds
stos
mov
in
pop
jbe
cltd
xorl
ljmp
sub
cmp
inc
int
xor
call
cmp
mov
and
icebp
jo
mov
cmp
inc
shl
xchg
sub
out
dec
jp
dec
testl
jae
stos
xchg
or
testb
cmp
notb
insl
in
test
inc
test
fldenv
sbb
push
out
stc
pop
and
imul
mov
hlt
in
pop
gs
rolb
adc
sub
xchg
jp
inc
dec
lahf
and
aam
xchg
cmp
loopne
pop
xchg
adc
lahf
pusha
in
ljmp
test
arpl
and
sbb
jge
adc
rcll
push
mov
mov
inc
test
pop
or
mov
fcmove
repz
push
xchg
and
sub
ret
mov
sbb
popa
dec
lods
movsl
xchg
sub
fldcw
stos
cmp
push
add
out
push
push
adc
orl
das
adc
sahf
cmp
outsb
mov
comiss
aad
cmp
push
ljmp
imul
shl
cmp
jo
shl
stos
inc
out
add
hlt
cmp
scas
gs
push
dec
inc
xchg
pusha
shl
xor
xor
jmp
sub
pop
push
xchg
mov
ljmp
mov
push
fildl
adc
sbbl
push
jp
cmpsb
shlb
adc
fdivrs
push
mov
das
in
pushf
fldenv
dec
loopne
mov
push
jae
adc
test
push
sbb
jnp
lcall
adc
mov
in
mov
test
inc
jle
lret
or
jmp
mov
push
jmp
lahf
cmp
xor
dec
mov
jo
lret
cld
sbb
and
fdivs
clc
mov
xchg
pop
fadds
push
loop
test
dec
loop
test
out
cmp
sti
mov
dec
popa
lods
cmp
fmull
xor
out
lods
xchg
and
cmp
xor
je
jmp
xchg
push
push
insl
jle
cmpsl
mov
sub
mov
nop
inc
decl
ds
int3
fsubl
jae
ss
mov
dec
push
lock
sbb
add
in
xchg
push
arpl
insl
in
sbb
enter
flds
repz
sbb
ret
mov
int
jl
in
icebp
scas
scas
cmp
test
in
hlt
push
mov
and
ret
sub
arpl
pop
outsl
jns
fwait
or
std
or
xor
cmpsb
jb
pop
repnz
mov
adcl
repnz
leave
cmpsl
add
mov
adcl
push
fcomps
jae
inc
ja
adc
not
push
mov
dec
mov
sub
mov
sub
cmp
cmpsl
xor
push
cmp
stos
add
hlt
xor
adc
sbb
dec
cmpb
and
lods
mov
nop
jle
adc
or
push
mov
arpl
fnstcw
xor
je
or
aaa
add
lds
rdtsc
pop
push
xor
xchg
pusha
dec
mov
sub
loop
movl
cmp
push
sahf
mov
rcll
lcall
xchg
jge
sbb
stos
and
enter
scas
mov
mov
add
stos
mov
sub
or
xor
sarb
xchg
popa
mov
inc
jmp
mov
mov
pop
add
shr
xchg
pusha
pop
push
inc
cmp
mov
shr
pop
jnp
ss
adc
jae
jne
das
icebp
sub
fstpt
push
mov
xor
stc
add
or
not
cmp
push
outsl
mov
scas
std
jne
push
dec
sub
push
or
inc
mov
inc
jl
mov
jmp
cmp
jb
mov
mov
inc
insb
or
sti
inc
mov
divl
in
movsb
push
sbb
add
adc
mov
xchg
adc
into
or
neg
inc
cmpsl
mov
inc
pusha
xor
or
mov
push
js
push
div
push
or
sub
movsl
nop
fildll
pop
jmp
jno
pcmpgtd
inc
sahf
adc
xor
adc
enter
lods
mov
mov
dec
or
xor
mov
cltd
xlat
add
mov
sbb
push
inc
aas
pop
jb
test
push
cmp
jl
imul
adc
sub
dec
stc
inc
clc
stc
scas
pop
mov
cmp
jb
stos
jle
cltd
ret
and
aas
push
stc
les
sbb
xor
xor
and
lret
shlb
mov
es
mov
dec
insl
ret
sbb
pop
orl
aaa
rcll
push
adc
inc
or
rep
cmc
mov
mov
int3
ret
cld
aas
sub
jns
bound
sahf
sbbb
mov
dec
mov
mov
mov
ds
call
les
call
mov
or
fsub
xor
mov
dec
lea
std
mov
add
sub
in
mov
aam
insl
fadds
adc
add
popa
jl
adc
xlat
sbb
notl
lds
pop
loopne
jnp
cltd
mov
and
cmp
sub
cld
xor
sub
xor
fadds
mov
pop
imulb
add
adc
stc
xchg
rcrb
push
adcb
fdivl
jg
bound
pushl
inc
mov
dec
dec
xchg
xadd
jae
mov
mov
fwait
loop
shlb
je
cmpsb
mov
dec
push
add
jle
dec
popf
or
pushf
test
inc
addr16
xlat
sbb
jle
xchg
sysenter
popa
daa
mov
xor
daa
mov
jns
cmpsl
adc
mov
clc
sub
inc
inc
mov
sbb
pusha
insb
pushf
shlb
shll
pop
lahf
jns
std
pop
inc
cwtl
movsb
inc
popf
fs
mov
jo
dec
into
scas
push
cmc
dec
test
lret
gs
cli
jmp
lahf
or
sub
inc
adc
cltd
mov
sbb
movsb
js
out
jmp
lret
jp
inc
cmp
dec
add
cs
lret
addl
add
or
or
cwtl
rorl
dec
cld
sarl
ja
sti
lds
inc
add
inc
cmpsb
push
sub
cmp
decl
imul
scas
sub
pop
xchg
das
ret
sub
xchg
fwait
roll
mov
vhsubpd
xchg
jno
jmp
jo
lgs
les
pop
add
movsb
leave
rclb
push
rdpmc
outsl
aas
xchg
in
rclb
mov
mov
in
pop
push
cmp
xchg
divb
lahf
xchg
xchg
jp
adc
pusha
xchg
fcomip
orl
out
adc
ss
xchg
sahf
adc
xchg
and
push
repnz
cmp
mov
add
xchg
xchg
dec
call
data16
dec
in
push
dec
adcb
jbe
outsb
mov
push
out
imul
das
stc
stos
mov
out
pop
ljmp
lahf
inc
mov
push
sub
jns
shlb
lds
mov
fdiv
jne
es
test
dec
mov
xor
icebp
shrb
fmull
das
mov
lea
xor
es
ret
cld
and
mov
outsl
mov
test
outsl
push
pop
cmp
push
test
dec
int3
and
sub
popf
test
mov
xchg
sbb
or
lret
js
mov
push
mov
ficompl
fcoms
xchg
lret
pushf
lretw
mov
mov
mov
pop
ljmp
inc
in
mov
jno
adc
xchg
xchg
xor
out
or
sbb
test
xchg
lock
jb
lds
inc
rolb
mov
mov
imul
aas
cmp
loope
push
lahf
rolb
xor
sbb
stos
lods
push
inc
xchg
stos
aad
icebp
test
and
rolb
mov
sub
adc
push
jmp
mov
dec
pop
add
outsl
jbe
inc
in
out
fmuls
popf
cmp
cmp
mov
into
test
pop
flds
mov
pop
or
les
out
fnsave
push
lret
data16
push
loop
popa
and
sbb
jae
fldcw
ror
mov
in
adc
mov
xchg
in
cld
out
inc
cwtl
repnz
andl
out
testl
test
mov
sbb
push
sub
push
and
out
sbb
jge
xor
insb
dec
fcoml
lds
or
in
outsb
xor
js
and
add
in
cmp
mov
fwait
loop
div
repz
and
loope
inc
xor
fcmove
data16
insb
jae
in
ljmp
jg
movsl
ds
push
loopne
iret
sub
push
xchg
mov
mov
cli
mov
pop
lret
or
lods
inc
xchg
jge
in
mov
aam
adc
pushf
mov
or
orl
pop
ficompl
ret
sub
shlb
lock
stos
dec
jecxz
jmp
sbbl
mov
cmp
movsb
enter
cwtl
mov
repz
xchg
sbb
mov
stos
enter
outsl
out
mov
jmp
inc
movsb
sub
sbb
adc
icebp
imul
data16
sbb
xchg
out
ljmp
push
pop
stc
mov
repz
sbb
dec
fistl
pop
cli
mov
aad
dec
inc
fstpl
or
add
loope
or
mov
xor
dec
jecxz
scas
lods
jnp
sbbl
xchg
ja
mov
pop
int3
cltd
lods
jle
push
sub
fsubr
mov
ja
rcll
mov
inc
out
into
das
mov
adc
jae
test
icebp
movsb
test
fwait
fwait
pop
mov
sbb
xor
mov
mov
fmull
lds
dec
lret
fdivs
addr16
xchg
push
out
rol
aad
enter
fistps
and
insl
sarl
lods
jecxz
fiaddl
ljmp
jo
lahf
test
ss
insb
call
lds
inc
sti
push
andb
mov
ja
das
test
cmp
mov
pop
adc
in
pop
mov
dec
ds
pop
repz
add
and
cmp
or
xchg
pop
incl
push
lret
notb
xor
insl
xor
xchg
inc
pop
and
int
mov
int3
dec
mov
idivl
in
sub
mov
call
lret
scas
pop
in
xor
dec
ret
and
fcomp
fimull
nop
mov
stc
inc
pushf
push
inc
sbb
and
rolb
xchg
sub
push
imul
dec
adc
xor
loope
jo
rorb
sub
mov
aas
in
stos
in
jb
in
pop
cmp
insb
fcompl
pop
into
or
out
inc
test
nop
pop
add
mov
gs
cmpsl
les
mulb
pop
mull
pop
lock
sbb
xor
pop
data16
imul
sub
mov
insb
xor
dec
mov
and
loopne
fiaddl
shll
fs
pop
mov
mov
pop
lds
dec
enter
lea
mov
lds
icebp
fmull
mov
in
out
mov
enter
out
insl
lods
jne
pop
int
loopne
cwtl
sahf
imul
pop
mov
xor
les
sbb
push
mov
aas
mov
addb
mov
daa
push
jno
sub
inc
and
test
cmp
add
jns
inc
inc
out
das
inc
mov
adc
cmpsb
adc
dec
mov
orb
enter
mov
jno
loope
xchg
lea
lock
xor
rclb
inc
rol
sbb
sub
or
lret
ror
ficompl
and
fildl
pop
out
lea
sbb
pop
cwtl
aaa
andl
jns
push
mov
mulb
ja
pop
stos
jne
xlat
sub
xor
sahf
dec
flds
add
mov
dec
xchg
mov
mov
sbb
jne
dec
into
popf
cli
sub
push
adc
imul
sbb
cmpl
scas
mov
lods
xor
cmpsb
cmpsb
mov
xlat
lahf
loop
and
push
push
pop
cli
lahf
insl
fisttps
push
gs
add
repz
lock
sub
je
leave
sbb
and
jb
cmpb
sub
das
lods
js
mov
loopne
fs
out
sbb
mov
or
int3
cmc
mov
in
xor
dec
and
lahf
fisubrs
mov
arpl
repnz
add
filds
xor
test
ret
adc
pusha
hlt
and
bound
cmp
xchg
jmp
mov
jb
jp
mov
roll
mov
loope
mul
or
mov
dec
and
push
repnz
jecxz
add
mov
or
jne
lahf
push
fnstcw
cmp
push
into
aad
xor
mov
mov
pop
in
lcall
mov
jae
pop
inc
dec
cmp
xchg
add
or
je
out
fildll
xor
sbb
mov
cmp
shrl
cmp
cmp
loop
dec
mov
jecxz
clc
pop
xor
les
data16
jae
inc
pop
pushf
add
sarl
jnp
call
lret
xchg
jge
imul
mov
repnz
mov
popf
mov
cmc
test
push
mov
movsb
cld
andl
sbb
test
pop
jecxz
xlat
cltd
mov
push
and
xchg
enter
mov
push
test
add
dec
mov
clc
sbb
pop
lret
jl
sti
jmp
cmp
pop
add
int3
shlb
je
sub
push
xchg
cmc
dec
adc
xchg
aaa
lods
je
ret
cmp
adc
lret
gs
lcall
inc
ss
jae
cmp
and
into
arpl
mulb
adc
clc
fisttps
sbb
xor
aam
jmp
stos
jmp
jne
pop
and
push
sarb
inc
xchg
add
lret
movsb
adc
pop
add
inc
mov
sub
push
push
cli
xchg
inc
mulb
jno
sub
icebp
and
clc
fstps
cmp
mul
pop
shlb
loop
mov
loope
and
out
int3
and
mov
lret
sub
cmp
xchg
das
rolb
mov
sbb
xchg
mov
jnp
loop
push
dec
adc
cmp
mov
scas
subl
pop
faddl
mov
or
add
aaa
in
adc
cmp
sub
nop
hlt
or
push
or
mov
pop
outsl
sti
popa
dec
repnz
adc
adc
pop
sub
push
sbb
sbb
pop
repnz
push
mov
scas
ljmp
out
mov
aam
daa
imul
mov
loope
mov
orb
or
or
mov
adc
jge
out
inc
cld
xor
nop
push
and
lahf
sub
mov
repnz
mov
out
rclb
xor
shlb
enter
adc
jecxz
xor
xor
push
dec
xchg
sub
clc
cld
and
scas
sbb
cli
out
pushf
daa
lea
cmc
mov
popa
push
sbb
adc
repnz
adc
aaa
mov
ficomps
test
movsl
xor
std
mov
mov
sub
sbbb
dec
popf
inc
and
mov
or
push
dec
push
daa
jmp
ret
xchg
insl
arpl
mov
jg
stc
stos
sub
push
adc
sbb
mov
scas
dec
outsb
sbb
lret
jle
dec
sub
cld
mov
xchg
out
adc
pop
jo
mov
jmp
xchg
mov
push
lods
xchg
mov
cmp
or
pop
imul
fcoml
aad
dec
jecxz
scas
xchg
mov
int
mov
lods
ds
or
mov
insl
fisubs
add
cs
packuswb
inc
es
out
outsl
dec
xchg
jo
loop
push
dec
mov
mov
and
nop
stos
fstl
lds
inc
lahf
pop
sarb
xchg
and
push
fidivl
icebp
mov
jmp
out
sbb
aam
cmp
subl
jns
testb
pop
outsb
movsl
inc
xor
cmp
loopne
adc
add
pusha
aam
mov
or
out
mov
fsts
sub
leave
jecxz
pop
mov
leave
sub
je
aam
rorl
and
cmp
ja
xor
or
aam
push
xchg
jno
mov
mov
mov
and
inc
cmp
push
mov
cmp
dec
iret
lcall
test
mov
dec
mov
xor
pop
adc
dec
sub
xchg
stos
dec
aad
cmpsb
addr16
pop
xor
hlt
aas
mov
jl
jle
jno
sbb
bound
lret
inc
testl
outsl
mov
loope
jb
cmp
das
xor
mov
lock
mov
push
mov
or
jae
xchg
out
push
jnp
xchg
adc
popa
addr16
lret
push
ss
out
and
xor
loopne
test
inc
mov
pop
push
sub
push
es
ljmp
sbb
das
xor
arpl
push
adc
pop
insb
jecxz
int
add
mov
std
dec
fwait
stos
repnz
mov
hlt
xchg
mov
inc
xor
sarb
paddusw
in
jb
lods
testl
mov
into
add
testb
push
into
pop
mov
sarb
push
out
xchg
mov
dec
addr16
dec
jb
sbb
cmp
mov
mov
btr
lods
xchg
xchg
in
or
aas
repz
add
mov
rorl
or
out
push
pop
sahf
mov
adc
stc
lret
dec
adc
cmp
dec
mov
jne
hlt
decb
push
mov
stos
lods
in
fldenv
into
dec
test
xchg
push
cwtl
sahf
sbb
add
idivb
movsl
adc
jbe
lret
mov
mov
insb
inc
push
sti
push
les
outsb
inc
xor
mov
ffree
mov
imul
stc
cltd
dec
and
add
mov
inc
mov
inc
or
mov
mov
xor
xlat
push
fildl
mov
mov
dec
sub
call
push
stc
scas
lahf
and
dec
ljmp
out
xor
cmp
cmp
pop
pop
xor
fs
fildll
in
jo
push
fwait
rorl
push
mov
lock
jecxz
jl
sub
in
push
sbb
mov
push
fsubl
dec
jmp
pusha
add
jmp
fstpt
or
pop
scas
sbb
add
pop
mov
or
out
jae
ja
jge
mov
cltd
adc
sbb
cmpsl
mov
test
mov
mov
stos
inc
mov
sub
cmp
pop
repnz
pop
xor
in
cmp
daa
scas
inc
cmpsb
mov
in
out
inc
das
stos
adc
jb
xor
push
cmp
movsb
fldenv
adc
push
or
sbb
xor
mov
or
add
imul
test
mov
ljmp
and
pop
test
mov
ror
mov
insb
xor
pop
sub
stc
lock
push
inc
test
stos
and
ja
ret
cmpsl
bound
sbb
push
sbb
stos
loopne
fadds
fistpl
sti
xor
pop
shl
pop
ds
sbb
sbb
pop
pop
pop
and
mov
or
xchg
mov
or
cld
dec
xchg
lcall
mov
xor
dec
int
test
aad
push
lods
dec
pop
int
cmp
test
mov
notl
and
pop
stos
pop
and
push
ljmp
sti
out
lods
jl
test
loopne
push
decl
lret
pop
or
nop
inc
js
cwtl
aam
sub
and
inc
mov
or
cmp
aaa
movsb
push
and
adc
mov
sbb
cli
sbb
add
adc
sbb
inc
xchg
cld
xchg
test
dec
gs
icebp
xchg
bound
adc
out
push
cmp
mov
add
aad
cmp
and
mov
cmpsl
leave
aam
lret
pop
decl
in
xchg
cmc
jbe
gs
jo
lods
les
dec
std
jae
xchg
cmc
std
mov
das
mov
cmp
mov
lods
push
xor
ss
mov
lds
mov
in
int3
mov
rcrl
stos
pop
mov
jge
mov
enter
cwtl
clc
ja
add
or
jo
in
cmp
pop
mov
pop
js
or
out
jnp
xchg
outsb
aam
adc
mov
jmp
lahf
cwtl
das
mov
sub
xchg
inc
push
push
or
inc
adc
movsb
fists
subb
inc
daa
je
cmp
xlat
pop
mov
and
mov
loope
negb
inc
push
add
mov
iret
iret
movups
sahf
sub
mov
cmp
pop
pushf
call
cmpsl
dec
test
cmp
dec
or
fdivrl
mov
jl
pxor
dec
aaa
sub
cmp
out
inc
test
or
xchg
movsl
pop
xchg
movsb
xchg
in
fistpll
jae
popf
mov
mov
mov
mov
or
dec
or
dec
mov
add
fcmovnbe
add
iret
adc
sub
push
push
jno
call
in
push
xor
test
mov
cmovbe
data16
sbb
sbb
and
sbb
out
add
f2xm1
out
jae
imul
sub
fisubs
sbb
mov
jne
cmpb
xor
int3
lods
cs
or
mov
push
leave
mov
aad
jb
std
mov
jecxz
daa
repz
mov
inc
jg
dec
inc
int
mov
sbb
jns
and
dec
or
jp
out
imul
dec
fcom
inc
sarb
imul
lea
jno
sub
mov
mov
add
sub
or
clc
bound
xor
ds
pop
or
out
or
xor
iret
lea
cltd
adc
in
add
mov
sarb
mov
jle
push
jmp
aaa
jge
insb
rol
inc
add
adc
insb
or
popf
or
dec
test
icebp
test
lea
and
add
push
out
int3
hlt
pop
out
xchg
xor
test
xchg
cld
jg
pop
jg
and
rcll
push
in
fildl
out
adc
push
sbb
aas
int
mov
sub
enter
sbb
popf
inc
inc
or
jne
ss
xor
cmp
mov
popf
inc
sarb
neg
or
inc
je
dec
jecxz
sub
in
xlat
outsl
fdivrs
or
stos
adc
out
scas
xchg
pop
add
incb
cltd
push
rdmsr
adc
out
mov
or
dec
iret
stos
jmp
pop
cmpsl
mov
js
pop
xchg
out
inc
fs
bound
mov
call
data16
inc
xchg
sub
xchg
add
incb
xlat
mov
call
or
popa
stos
sbb
mov
clc
imul
pop
pop
jb
aas
push
adc
add
add
jbe
mov
adc
mov
adc
inc
and
ds
iret
dec
aaa
fwait
lret
lcall
pop
cltd
xor
adc
xor
mov
sub
sub
xchg
mov
bound
lret
mov
movsb
aas
scas
push
cmpl
xorb
push
aam
sbb
push
sbb
enter
rclb
insl
and
and
sbb
jns
dec
movsl
push
xchg
xor
or
arpl
push
xchg
shll
insb
mov
mov
xchg
mov
jae
mov
sub
push
and
dec
int3
and
in
xchg
pop
in
js
cmpsl
adc
adc
js
xor
sub
in
push
jo
mov
mov
fwait
sbb
sbb
dec
movl
lock
mov
inc
pop
cmp
lret
cltd
mov
dec
xchg
jmp
mov
dec
notl
inc
data16
ror
popf
sbb
orl
je
or
pop
push
adc
shl
pop
cmp
push
cld
mov
mov
cmp
outsb
cmp
sbb
jg
jbe
outsb
out
stos
mov
pop
and
xchg
push
xor
movsb
aad
lret
mov
ret
push
into
and
add
mov
cmp
outsl
mov
test
add
push
pop
loopne
jne
jnp
sub
mov
jb
add
or
data16
popa
inc
jmp
lods
rcrl
aas
out
and
dec
and
xor
fsubs
jne
outsl
aam
sbb
mov
mov
mov
incb
lahf
inc
cmpsw
push
out
or
xchg
lea
ljmp
mov
pop
addr16
xor
inc
lock
fstpt
leave
mov
mov
mov
pop
lahf
call
pushf
outsl
loopne
divb
icebp
adc
lcall
shlb
lods
push
pop
pop
enter
lods
ja
cmc
cmpsb
xor
xchg
pop
dec
fimuls
cli
fimull
inc
mov
push
imul
or
dec
pop
popa
add
adc
mov
enter
in
ljmp
insl
popa
rclb
mov
in
pop
lea
mov
andl
int
cmp
mov
or
sub
inc
adc
leave
xlat
or
and
mov
and
movsb
mov
push
sub
jle
mov
push
in
sar
sahf
in
xchg
repnz
inc
adc
mov
and
mov
iret
stc
xchg
scas
mov
jecxz
mov
mov
jnp
jae
pop
xchg
insb
into
mov
sub
lea
mov
mov
popa
cmp
int3
cli
push
mov
bound
push
mov
mov
mov
jge
inc
xor
call
jb
testl
pop
loop
test
std
or
pushf
xchg
bound
insl
repnz
add
dec
mov
adc
data16
js
pop
fsubrl
add
sbb
sahf
push
mov
and
iret
xchg
in
jle
enter
inc
xor
js
es
pop
hlt
xor
fsubl
mov
fmulp
aad
setnp
mov
repz
ljmp
sbb
sbbb
nop
aaa
cltd
cmp
test
dec
cld
dec
decl
out
rolb
mov
das
enter
push
push
and
leave
in
mov
in
mov
or
mov
cwtl
loope
nop
pop
mov
popa
pop
iret
loope
pop
pop
int3
test
fwait
out
mov
jae
pop
jl
pop
mov
jae
push
es
loop
push
push
imul
dec
jecxz
fbstp
in
movb
stos
mov
mov
shlb
stos
dec
sbbl
out
or
mov
movsb
in
dec
cmp
xchg
mov
sub
jo
sub
icebp
into
jnp
xor
hlt
daa
xchg
loop
pop
or
xlat
addb
in
in
stos
call
ja
les
fadd
cmp
cmc
add
push
mov
aad
push
aas
xor
cmpb
xorb
cmp
rcr
stos
xor
xchg
inc
mov
push
sti
lock
enter
cmp
inc
mov
add
mov
popf
lock
fldt
jge
cmpsl
adc
jo
and
mov
scas
sbb
bound
dec
xchg
ret
mov
xchg
cmpsb
ljmp
jno
aam
push
rclb
les
data16
push
fstpt
dec
sub
mov
pusha
mov
loopne
and
mov
or
lods
loope
fwait
jns
in
movsb
in
cwtl
jl
or
scas
fiaddl
cwtl
sub
insl
out
mov
jno
or
xchg
add
xor
pop
sub
js
pop
outsb
push
mov
adc
cmp
adc
ficoms
cmp
jae
and
add
jle
out
dec
fs
daa
and
nop
outsb
subl
mov
inc
and
dec
sub
sahf
ja
dec
jbe
mov
dec
mov
arpl
jecxz
pop
fidivs
sahf
cli
bound
push
mov
cmp
adc
test
out
insb
cmp
mov
mov
leave
ret
test
adc
cld
adc
lods
mov
in
add
lds
adc
insb
movl
leave
hlt
sbb
addb
and
pop
and
cmp
dec
popf
shrb
mov
cmpsl
ljmp
lahf
dec
push
mov
lods
es
test
int
push
mov
jge
inc
int3
mov
dec
xor
in
mov
shlb
addb
jo
and
test
sub
sbb
outsl
push
addr16
bnd
jg
sarl
or
push
pusha
dec
aas
cli
mov
fldt
push
fsub
jle
and
adc
sub
add
dec
lahf
dec
test
xchg
or
lret
mov
into
cmp
roll
loop
xchg
lock
in
mov
sbb
xor
mov
pusha
cmp
pop
mov
mov
adc
in
push
das
cmp
sahf
pop
leave
mov
push
cmpl
ficomps
sub
data16
cmpsb
bound
push
push
adc
and
fidivrl
or
repz
iret
fnstsw
mov
inc
sti
add
int
test
xlat
cmpsb
in
mov
or
clc
mov
leave
in
mov
imul
mov
xchg
or
es
xchg
daa
jmp
pop
cs
jns
ret
inc
jl
or
sbb
lock
jmp
mov
test
inc
adc
jbe
mov
les
lcall
xor
test
call
in
das
dec
and
clc
inc
cmp
push
loope
cmp
cmp
and
dec
ljmp
lods
jle
or
xchg
xchg
xchg
test
jbe
cmpsb
jnp
sbb
imul
stos
je
aad
rcrl
pop
xorl
jnp
ss
mov
fldl
test
sub
pop
mov
jnp
inc
push
shll
jbe
add
and
push
and
fwait
repnz
subb
mov
jmp
cli
lahf
pop
icebp
or
mov
pop
inc
push
fsubrs
std
push
data16
repnz
pop
jb
push
jnp
dec
push
xor
mov
ljmp
popf
mov
mov
xchg
cld
mov
insl
inc
push
fmull
jl
and
out
or
loop
xlat
icebp
in
pop
insb
cs
dec
pop
jp
mov
inc
in
xor
jmp
push
scas
push
in
stos
imul
in
aam
jae
sbb
xchg
xor
sbb
clc
addr16
xchg
push
test
pop
push
in
decl
push
mov
push
pop
mov
xor
insb
in
lahf
mov
mov
sub
inc
icebp
mov
mov
test
jae
rep
xor
ret
jge
xor
mov
or
fwait
sbb
push
sbb
stc
adc
rcll
dec
pusha
adc
sbb
clc
push
mov
insl
xchg
sbb
xchg
xchg
sbb
stos
mov
xor
rolb
adc
popf
cltd
jns
cmp
fst
push
lcall
mov
es
jg
je
jmp
mov
imul
inc
dec
ljmp
lahf
in
pop
jo
popa
jne
sti
out
inc
ja
daa
jg
rcll
cmpsb
lods
add
jne
sbb
test
sub
std
inc
shrb
xchg
les
aam
dec
pop
jl
out
cmpsl
sbb
loopne
xlat
fchs
or
xchg
mov
jl
sub
les
push
stos
insl
jbe
daa
pop
insb
pop
je
pop
jmp
xchg
repz
std
mov
mov
mov
mov
ja
lds
push
push
aas
ljmp
lcall
cmpsb
out
subb
sbb
dec
mov
sbb
or
pop
mov
andl
cmp
add
mov
and
adc
dec
xor
icebp
mov
cmp
jp
jge
int
mov
imul
mov
es
das
push
jnp
pop
shrl
xchg
pop
loope
inc
enter
gs
cmp
aam
enter
cmp
out
cld
add
cmpsl
dec
fwait
xchg
mov
sbb
mov
or
inc
jo
dec
in
pop
ljmp
imul
xor
mov
jns
rorb
sub
scas
or
orl
cmpsl
xchg
jmp
push
mov
lret
repz
mov
push
int3
xor
ret
xchg
aad
bound
sbb
cli
pop
arpl
dec
xlat
cli
mov
mov
xor
xchg
inc
imul
push
insb
push
xchg
ret
push
xorb
xchg
js
into
std
add
jl
icebp
xchg
nop
jne
ss
mov
lret
jmp
or
push
mov
les
mov
mov
pop
decb
push
or
icebp
xchg
inc
mov
fwait
add
dec
lcall
xor
lods
nop
repz
ret
inc
or
pop
xchg
jmp
sbbb
call
inc
sub
sarb
popf
mov
int
mov
stc
pop
adc
jl
sti
out
sub
test
setnp
adc
insl
inc
insb
arpl
cmp
sub
leave
mov
xchg
cmpl
lcall
arpl
in
jno
arpl
mov
dec
in
mov
dec
les
outsb
pop
sahf
push
lock
push
pushf
mov
jo
or
adc
orl
lcall
lods
jmp
nop
jp
cmpl
mov
jb
pusha
cli
sub
rdtsc
sbb
mov
push
adc
jne
clc
lods
or
aaa
adc
jno
sub
mov
dec
testl
mov
add
add
pop
mov
rcl
ljmp
jae
mov
aad
repz
stc
adc
pop
jbe
pop
out
cmp
cld
and
fldl
xchg
popf
cmp
add
sbb
and
jg
cmpsl
adc
cltd
pop
cmpsl
inc
jg
sub
imul
xchg
cmc
cld
mov
enter
sahf
xchg
test
lcall
popf
ss
and
imul
ret
dec
pop
adc
push
lods
popf
add
sbb
enter
int
push
xchg
xor
cmp
jns
push
outsb
int
sub
mov
movsl
call
mov
sbb
or
xchg
stc
psubb
int3
repnz
pop
inc
vpsadbw
jbe
mov
mov
inc
sub
int
loop
sbb
xchg
inc
push
cmp
adc
mov
mov
in
cmp
jno
jmp
test
xchg
pop
or
and
ljmp
scas
sub
mov
mov
push
ja
xchg
test
shll
sbb
icebp
hlt
push
pop
push
xor
jle
pop
iret
dec
xlat
push
daa
out
or
push
sahf
inc
jae
pushf
movsl
inc
push
out
xchg
and
mov
xchg
jmp
adc
push
es
cwtl
pop
mov
mov
popa
mov
xlat
sbb
in
pop
enter
bound
xor
push
xchg
mov
sti
cs
jecxz
lods
dec
outsl
xchg
into
cmp
cmp
inc
mov
sub
insl
or
ss
fsubrl
push
mov
add
fisttpl
testl
insb
ds
push
and
insl
pop
rorl
insl
les
loopne,pt
mov
push
aaa
sub
sbb
mov
es
out
adc
and
ret
lods
pop
and
jl
mov
jp
test
mov
mov
mov
mov
pop
fisubl
mov
pop
insl
insb
pop
imul
or
dec
aaa
fisttpll
add
push
mov
dec
lcall
or
and
jno
and
push
add
cmp
fistl
mov
test
adc
push
stc
scas
mov
test
imul
testl
mov
pop
rcrl
pop
inc
xor
arpl
orb
mov
addb
and
stos
xor
dec
popa
fidivs
jmp
sub
fistps
movsl
inc
push
mov
add
sbb
push
push
and
mov
mov
negw
inc
mov
sub
adc
inc
add
push
mov
jnp
fsave
adc
sbb
jg
dec
inc
iret
cmc
out
int3
adc
lods
rcl
push
lcall
add
sub
jne
dec
fdivrl
insb
cmp
inc
das
or
cld
popf
jo
imul
imul
mov
mov
push
jmp
imul
push
les
loop
inc
lret
mov
push
fdivp
insb
in
fcmovnu
add
push
or
int
push
lahf
mov
dec
fbstp
faddl
sbb
mov
push
pop
or
sahf
insb
pop
clc
or
movsb
xchg
lret
out
add
and
fdiv
arpl
cmc
stc
sbb
sahf
sbb
ljmp
mov
adc
in
es
xchg
fldl
push
cmpl
and
fidivs
cmpsb
dec
loopne
int3
je
aad
mov
lcall
mov
sub
sbb
fs
clc
cmp
test
bound
scas
inc
sub
xchg
jp
stc
xchg
mov
lods
movsb
jle
fdivl
aam
fists
add
hlt
xlat
test
dec
cmp
mov
sti
test
mov
lret
or
mov
cmc
sub
or
iret
sar
repnz
lret
je
adcl
popa
mov
iret
rcll
cwtl
push
fdivl
pop
lahf
xchg
stos
std
lds
or
mov
iret
mov
pusha
and
test
sti
xchg
add
inc
add
push
add
sub
add
pop
push
push
lea
push
lret
push
rorl
test
cmp
or
lods
inc
push
xchg
adc
hlt
add
push
adc
loope
aas
sbb
mov
lret
push
sti
lock
rorb
dec
jbe
jge
dec
adc
cmc
mov
fs
fwait
les
repz
inc
mov
into
push
push
fisttpll
filds
mov
fdivrp
in
sub
sbb
popf
cli
ficomps
stos
not
or
insl
mov
iret
xor
aas
xchg
dec
ljmp
inc
test
fs
jae
and
leave
imul
outsb
and
loopne
pop
aas
mov
mov
insl
push
test
rolb
dec
pop
jne
mov
test
mov
jecxz
pop
dec
scas
addr16
out
loopne
dec
mov
cli
jb
adc
mov
aam
loopne
cmp
repz
loopne
push
push
outsb
dec
stos
sub
jbe
scas
lcall
imul
out
iret
popf
test
es
xchg
mov
mov
loope
xchg
out
sti
mov
orl
ds
cmp
mov
push
inc
dec
or
mul
sub
test
pop
hlt
mov
mov
out
cld
aaa
add
lock
or
pop
adc
cmp
icebp
mov
jno
pop
outsb
bound
ret
das
dec
mov
adcb
pop
push
in
int
mov
repz
xchg
scas
lret
lcall
inc
imul
test
out
jl
cmpsl
stc
lods
shll
xchg
sub
xchg
pop
or
and
out
mov
and
xchg
clc
push
scas
imul
rolb
fmuls
fiaddl
pop
mov
inc
jmp
sahf
sub
and
sbb
mov
mov
outsb
shl
push
mov
cmc
divb
mov
inc
adc
stos
rclb
sub
or
mov
in
es
adc
mov
sbb
mov
push
sub
movsb
sahf
mov
in
int3
mov
inc
pop
and
or
gs
pop
mov
push
xchg
cmpb
shll
fcoml
cmp
mov
inc
cmp
push
inc
jns
dec
shll
ret
xchg
out
pusha
or
lods
and
and
jns
cmp
test
push
push
jmp
std
lahf
push
testb
mov
das
xor
mov
in
shlb
cltd
push
jo
inc
leave
jne
cmc
arpl
mov
pushf
rcrl
sbb
mov
adc
adc
test
and
inc
dec
sub
cmp
pop
xchg
lcall
orl
loopne
xchg
aas
or
enter
andl
mov
add
sarb
pop
inc
insb
mov
dec
scas
repnz
dec
push
adc
dec
mov
sbb
daa
mov
adc
ljmp
mov
int3
adc
addr16
sti
jmp
mov
push
or
xchg
or
mov
xlat
pandn
lret
push
aam
clc
mov
push
jb
js
mov
xchg
mov
ja
and
andl
pusha
mov
xor
cmp
pop
add
fnstsw
jge
scas
inc
dec
insl
insb
in
cs
mov
jg
enter
lods
aaa
lret
push
adc
lret
or
mov
jle
fidivs
xlat
jl
push
data16
or
mov
outsl
xor
inc
add
ss
js
loopne
pushf
dec
adc
test
sar
jbe
daa
mov
push
xchg
lea
popa
fidivl
push
call
js
imull
movsb
push
sbb
adc
sbb
sahf
movsb
fsub
push
push
aam
inc
movsb
dec
mov
jno
mov
xor
cmp
fisttpll
aad
subb
dec
xor
xchg
ret
and
fprem
lcallw
push
cmp
mov
fwait
mov
sti
lcall
inc
rol
push
jbe
lret
call
std
ffree
sbb
int
insb
mov
aas
ss
loopne
fucom
xchg
nop
sub
lock
push
fisubrl
add
push
fucomp
cli
and
add
cli
mov
repz
aam
test
test
iret
push
sub
push
dec
and
outsl
jbe
push
das
mov
push
and
adc
sbb
add
movb
push
xor
mov
adc
or
mov
xor
addl
mov
mov
and
std
sub
mov
inc
mov
adc
repz
xchg
cs
inc
clc
cwtl
test
lahf
and
and
adc
mov
das
ret
xchg
and
out
xor
ret
ss
xlat
sahf
dec
inc
jno
fmul
or
cwtl
pusha
mov
repz
push
pop
inc
xchg
loopne
and
mov
sub
inc
stos
inc
push
pop
mov
lahf
mov
lds
xchg
xchg
dec
mov
push
pop
idivl
cmp
mov
or
mov
pop
dec
xchg
shrl
cltd
fs
es
mov
popf
cltd
lret
cmc
fcomp
xchg
mov
ja
lret
dec
push
sub
inc
xor
popa
mov
cld
repz
les
loop
in
inc
jle
push
aaa
dec
insl
mov
addb
sub
stos
mov
lods
cmpb
aam
cmpsl
cmp
insl
mov
sbb
mov
or
sub
mov
std
sub
xor
push
popf
iret
jle
int
jmp
iret
push
lret
pop
or
add
or
std
loope
push
mov
daa
pop
cmpsb
jo
cmc
clc
rcll
imul
testl
xchg
push
or
imul
addl
pop
jae
inc
cwtl
sbb
push
inc
dec
xor
jnp
push
jmp
xchg
mov
sub
dec
sub
mov
das
pop
push
into
icebp
add
dec
jecxz
cmp
inc
mov
in
dec
insb
jp
sbb
mov
int
jnp
adc
fwait
cmp
decl
mov
aas
dec
push
movsb
bound
in
adc
mov
jp
hlt
cmp
cmp
jge
out
jmp
pop
dec
adc
and
out
cmp
and
sbb
pop
inc
add
int
jecxz
jno
pushf
adc
aas
mov
xor
push
pop
cmp
dec
push
int
mov
jle
mov
in
inc
ret
call
pop
mov
push
ret
dec
mov
xchg
sti
popl
dec
loope
rcll
into
mov
fidivrl
and
adc
mov
sub
jge
outsl
mov
cmp
je
or
ljmp
repz
sbb
and
iret
or
fwait
out
mov
ss
jg
xor
inc
sub
fstp
cmp
pop
out
xchg
das
mov
or
cltd
out
cmp
andb
push
xchg
inc
jns
push
push
lret
or
sti
int3
mov
pop
push
sub
ror
cmpsl
dec
dec
sub
mov
dec
adc
xor
iret
ds
iret
xchg
push
imul
nop
mov
roll
mov
call
push
sbb
je
fs
lock
and
and
nop
stos
int3
cli
aam
scas
sar
sub
push
mov
into
lds
cmpsl
lea
cli
ds
jmp
mov
inc
cwtl
jno
lahf
adc
add
loop
push
sti
mov
std
cli
mov
out
pop
adcl
call
rcr
mov
outsb
sub
add
iret
fdivp
mov
int3
movl
push
mov
je
cwtl
aas
push
nop
jb
subb
iret
push
push
mov
xchg
fs
or
outsl
push
je
idivw
mov
mov
mov
xchg
popf
test
movsb
popf
aad
out
jl
imul
pop
xchg
cmpsb
inc
fsubs
dec
cmpsl
cmp
cli
jbe
mov
test
mov
call
ljmp
enter
mov
scas
and
xor
iret
or
outsb
dec
mov
aad
rcr
test
test
gs
adc
mov
movsb
pop
cltd
jbe
cli
mov
cmc
into
cmc
sbb
cmp
mov
cld
cmc
into
movsb
or
call
mov
out
jae
into
mov
mov
jmp
in
data16
pop
loop
push
jne
shl
aad
cld
insl
hlt
jne
pop
pop
orl
imul
and
pop
or
adc
lret
pop
push
call
js
add
fnstsw
ret
mov
adc
inc
or
xchg
or
adc
and
call
xor
rcll
int
enter
jle
ss
xchg
push
pusha
roll
hlt
dec
inc
dec
stos
mov
dec
push
sub
das
cmpsb
xor
mov
mov
cmc
adc
xchg
dec
xor
push
xor
sbb
mov
inc
jl
jmp
dec
andl
movsl
data16
les
xor
jmp
pop
push
inc
or
out
sbb
pop
adc
scas
out
inc
mov
scas
lcall
fstpl
jmp
imul
mov
mov
pop
shrl
fwait
outsb
scas
adc
mov
push
adc
and
test
out
add
dec
mov
out
inc
mov
mul
xchg
das
lret
popf
mov
and
movsl
sbb
inc
pop
jno
mov
xor
xchg
xchg
imul
les
fld
std
mov
push
sbb
lods
push
std
arpl
int
stos
inc
aas
cmpsb
fstl
jle
push
sbb
iret
leave
mov
out
inc
pushf
pusha
add
xor
sbb
pop
lds
mov
shl
fwait
mov
cmp
lret
dec
jl
popf
lds
bnd
iret
insb
sub
jae
movsl
inc
in
or
pop
icebp
push
add
cmp
xchg
mov
out
gs
add
insb
je
shr
inc
sub
and
popf
outsb
or
push
xchg
adc
fsubrs
jo
pop
adc
pop
in
xchg
and
jno
lods
shrl
fildll
ds
and
adc
inc
and
cs
inc
in
adc
rolb
rolb
jmp
mov
in
loopne
ret
out
es
push
sub
sbb
mov
sub
jbe
incb
xchg
inc
add
jmp
push
clc
cmp
pop
xchg
lret
jmp
outsb
add
adc
fstpt
loope
sub
pop
fs
mov
mov
cmc
sub
mov
popf
jns
lds
push
jo
xchg
dec
cmpsl
mov
mov
out
jno
shrl
sub
sbb
add
mov
or
xor
xorb
mulb
idivl
gs
aaa
in
and
lods
mov
rcrl
jno
scas
xor
stc
mov
mov
add
or
cmp
jmp
xchg
fidivrs
ss
lea
enter
mov
data16
pop
add
mov
out
add
mov
enter
jecxz
ret
aaa
aad
rclb
xor
lea
mov
daa
popa
out
inc
push
xchg
xchg
and
scas
pop
lret
sub
lods
in
mov
push
sti
sub
rcll
movsb
mov
push
repnz
cli
add
insb
jns
icebp
stc
push
cmp
pop
sub
leave
mov
sbb
mov
loop
dec
in
adc
icebp
imul
jae
inc
adc
inc
sar
cmpl
hlt
insl
gs
dec
cli
mov
fsubs
cmp
sub
add
into
repnz
xor
mov
ret
xor
and
sbb
push
insl
xlat
pop
jne
dec
sti
jle
jecxz
pushf
push
xor
rol
popa
inc
xor
mov
push
xchg
cmp
dec
loope
call
int
add
and
ljmp
mov
xchg
movsl
das
or
or
aad
inc
mov
call
push
xor
xchg
roll
push
jno
mov
jmp
fs
sub
jns
pop
fcmovnbe
sbb
cwtl
jl
sub
push
rcr
push
shll
loopne
loop
in
mov
lock
dec
mov
test
aas
jl
push
aaa
jns
jmp
inc
add
fldenv
aas
jnp
push
sub
push
adc
and
cmc
push
add
xchg
lret
nop
rcrl
mov
lret
cmp
add
je
pop
pop
jmp
fwait
daa
mov
fldcw
push
into
sub
mov
push
test
cmp
xorl
aam
push
pushf
sbb
push
sbb
sbb
stos
aas
xor
cmp
lods
xchg
scas
popf
sub
add
dec
inc
and
mov
inc
push
dec
insl
push
push
sbb
ret
movsl
mov
push
sub
or
aad
inc
sbb
lods
rorb
sub
stos
sub
sbb
sub
push
or
xchg
shll
dec
push
outsb
mov
addl
mov
mov
adc
inc
push
dec
loop
sub
pop
out
and
xchg
cmp
loop
adc
push
nop
aad
jno
push
mov
ds
cmp
pop
cmp
or
daa
or
jmp
stos
call
fdivrl
aaa
test
fcomps
xchg
or
mov
mov
or
pop
adc
push
xchg
adc
cs
cmp
dec
je
hlt
push
je
gs
sub
call
xchg
cwtl
xchg
mov
es
push
pop
jno
cld
into
aaa
or
loop
mov
les
ljmp
inc
push
test
out
fmull
sbb
lods
lret
or
lret
pop
ret
jg
in
fadds
adc
mov
fstpl
mov
shrd
pop
inc
lcall
dec
outsl
jmp
sbb
cli
stos
jl
or
and
fs
mov
and
jge
xchg
std
imul
lods
stc
mov
into
ja
inc
dec
and
lcall
mov
push
xchg
in
push
xor
movb
pop
lea
shlb
mov
and
fwait
jge
push
mov
stos
out
xchg
cli
sbb
xor
fidivrs
xchg
out
addr16
dec
cs
movsb
popf
jg
call
and
jno
call
dec
lods
mov
sbb
call
jae
dec
js
cltd
out
push
out
xor
xchg
into
aam
cmpl
cmp
inc
fsts
pop
jg
mov
dec
mov
rep
sbb
xor
mov
mov
mov
xor
add
or
hlt
jne
outsl
aam
pushf
xchg
cmp
add
jb
nop
jg
daa
mov
imul
inc
mov
cmp
loop
std
lds
dec
push
or
mov
rcrl
test
adc
pop
dec
arpl
sub
jae
sbb
sbb
sub
xlat
jbe
push
ret
loop
mov
inc
cmp
nop
jns
push
inc
fdivr
fmull
insb
jp
cmp
dec
inc
out
or
sub
cmp
lods
xor
jp
popa
dec
xchg
test
cmc
mov
or
jae
sub
push
popa
xchg
repnz
mov
inc
pop
sahf
and
divl
and
add
inc
dec
or
inc
cmp
mov
or
cmp
sarb
dec
xor
xchg
nop
leave
inc
mov
fistps
pop
mov
add
mov
or
sbb
rcrb
mov
adc
inc
adc
pop
pop
es
decl
mov
dec
pop
xlat
jns
idivl
cmp
pop
push
adc
mov
push
jae
aaa
stos
push
jg
mov
int
pop
push
insl
xchg
lcall
mov
cmc
adc
push
push
xchg
cmpsl
lcall
out
cld
sbb
insl
jo
iret
sub
iret
lods
xchg
out
inc
cwtl
push
inc
jo
andl
inc
cwtl
pop
and
mov
pusha
cmpl
aas
aas
xchg
jl
xor
inc
sti
and
xor
dec
iret
sub
out
adc
xchg
mov
clc
cltd
fwait
jge
test
mov
or
mov
call
iret
es
xchg
and
addr16
cmc
call
test
pop
dec
pop
or
mov
mov
ret
xchg
sub
push
les
push
xchg
push
xchg
mov
test
xchg
int3
or
add
sub
adc
nop
out
outsl
and
xchg
stos
test
mov
mov
movl
xchg
cmp
or
adcl
jge
inc
popa
cmpsb
fidivl
adc
mov
mul
cwtl
sbb
mov
mov
out
cld
test
lret
inc
inc
mov
outsl
pushf
movsl
cs
adc
cmc
stos
mov
lahf
sbb
outsl
jmp
jo
jg
adc
jl
fidivs
fdivs
mov
imul
xchg
and
sahf
call
jge
sbb
push
and
sub
inc
sub
sub
xor
insl
adc
mov
or
mov
stos
imul
dec
or
ja
roll
repz
in
mov
jmp
in
repz
push
imull
dec
adc
jl
xchg
and
inc
mov
pop
sarw
aaa
xchg
push
lret
pusha
pusha
mov
shll
xor
adc
mov
fiadds
ret
adc
or
dec
mov
sub
dec
push
xchg
push
push
mov
and
or
push
add
repz
movsl
loop
mov
adcl
mov
loopne
imul
je
add
push
cs
das
lods
add
push
ret
outsl
icebp
int
jbe
lret
out
xchg
jb
xchg
adc
xchg
fcmovnu
in
or
loope
les
jle
xchg
cmp
pop
xchg
rcl
push
arpl
mov
dec
adc
pop
sbb
and
int
adc
xor
sarb
ja
lock
fs
repnz
fs
mov
jnp
adc
imul
adc
push
fsubrs
jle
gs
and
sub
pop
jl
sar
stos
adc
test
ja
fistpl
lods
mov
das
xor
push
mov
sti
mov
mov
cmp
in
call
movsl
sarl
testb
push
xchg
test
jbe
addr16
xor
cli
ret
leave
adc
in
mov
loopne
nop
sbbb
das
mov
and
vsqrtpd
movsb
cmc
aas
ret
push
pop
inc
cwtl
mov
jbe
xor
clc
cmp
push
mov
les
fnstcw
cs
jno
push
icebp
mov
js
add
cs
sub
arpl
jmp
lret
data16
mov
adcl
in
push
jne
cmp
icebp
mov
mov
mov
dec
repz
jg
aam
xlat
ja
adc
fwait
mov
sub
sub
or
mov
push
inc
test
push
inc
pop
jecxz
sub
fmuls
mov
jno
imul
lods
mov
mov
insl
cmc
inc
jns
popf
push
arpl
enter
push
jbe
xchg
outsb
jl
arpl
sub
inc
ss
jns
mov
daa
popf
cwtl
push
adc
ljmp
cmp
cld
aad
dec
mov
or
sti
or
xor
stc
jae
push
movsl
adc
lcall
or
insb
ret
stc
cmp
shrb
pop
xchg
and
xchg
aas
xchg
dec
shrl
loop
add
mov
dec
dec
pop
push
or
xor
jmp
xor
xor
fcoms
in
sub
xlat
cltd
shrb
cmp
jnp
mov
movl
into
mov
push
push
je
roll
les
adc
scas
push
arpl
fisubrl
lahf
loop
sbb
sub
lods
inc
mov
fucomi
sbb
pop
mov
std
pop
xchg
adc
stos
sub
das
mov
mov
mov
out
dec
jbe
mov
mov
repz
ss
add
in
adc
push
adc
adc
sbb
sbb
push
adc
cltd
repnz
sbb
sub
in
clc
fnstcw
mov
cs
fucomip
push
ljmp
pop
loope
orl
test
fdiv
mov
jecxz
lcall
les
and
mov
mov
adc
jbe
push
inc
ljmp
ljmp
push
inc
shl
test
int3
int
hlt
into
lret
ljmp
stos
test
jns
mov
xor
dec
jecxz
or
jns
inc
cltd
out
addr16
sbb
gs
iret
and
lret
push
ja
lcall
outsl
rolb
mov
fs
jb
push
ss
imul
xor
push
lods
dec
adc
mov
rcr
xor
xchg
push
stos
jl
scas
sub
mov
xlat
dec
inc
cltd
mov
or
or
jge
sub
jecxz
dec
xchg
and
mov
push
inc
cmp
mov
cmp
popf
gs
fiadds
sub
es
cli
and
inc
push
push
mov
and
les
jge
lea
movsl
mov
enter
jbe
fiaddl
sub
jmp
jle
pop
out
aaa
bound
mov
out
push
aaa
mov
jae
iret
adc
fidivrl
fwait
dec
mov
addr16
push
ficomps
icebp
mov
and
mov
in
dec
xor
mov
stos
jb
addr16
xchg
and
push
mov
xor
mov
cmpsb
sbb
pop
and
fcomp
adc
cltd
jp
dec
mov
test
jmp
sbb
xchg
fistpl
lcall
inc
mov
cmpb
dec
in
popa
mov
cmpsb
and
jbe
pop
mov
xchg
or
enter
sbb
ja
lret
pop
repnz
xorb
outsb
out
test
aam
stos
inc
cltd
xchg
xchg
cmp
and
movsl
lcall
xchg
andl
mov
adcb
outsb
push
mov
aas
cmpsl
call
push
dec
sbbl
push
cld
push
mov
adc
inc
jae
xlat
movsl
pop
movsl
test
pop
out
lods
jb
mov
jmp
lods
xchg
lods
shlb
jne
pop
xlat
cmp
std
in
or
xchg
dec
push
fwait
insb
cmpb
dec
mov
cmp
jae
rorl
pop
mov
mov
jb
insb
rorl
inc
movsb
lret
mov
les
xchg
jo
mov
mov
sub
jmp
scas
mov
xor
imul
movl
xor
add
and
ja
dec
pop
fs
fwait
mov
pop
xchg
dec
js
insb
adc
mov
dec
mov
fbstp
jno
sbb
add
rcll
outsb
lods
mov
mov
dec
std
and
mov
sbb
and
repz
and
lds
sub
push
add
or
je
jle
inc
pusha
push
int3
xor
cli
or
sub
test
je
faddl
jge
mov
stc
xchg
inc
push
mov
fcomi
cmc
push
add
lcall
sub
lcall
cmp
and
push
mov
je
sbb
mov
ret
jge
sub
jp
xor
leave
cld
pusha
repnz
in
xchg
inc
testb
cld
push
adc
xorb
repnz
ds
cmpsl
xchg
xchg
shlb
leave
jo
xchg
push
call
pop
rorl
popa
aaa
jmp
rorb
cltd
lock
stos
xor
adc
call
clc
test
sarl
sub
in
add
jmp
sbb
mov
dec
cwtl
dec
fs
imul
push
in
adc
nop
dec
xor
fnstenv
jmp
flds
js
dec
enter
cmp
dec
add
mov
inc
add
ss
stos
call
fisttpll
jle
idivl
jecxz
lds
daa
arpl
fcmovbe
jbe
inc
in
inc
dec
icebp
fdivs
loopw
xor
pop
sbb
loope
cs
rol
mov
in
lods
pop
std
fsubr
andl
mov
arpl
dec
aad
mov
push
dec
out
out
sbbb
outsb
dec
cmp
outsl
aam
aam
adc
dec
mov
sub
lds
pusha
repz
adc
ja
xlat
mov
pop
push
sbb
dec
imul
lods
fistps
lea
pusha
mov
addr16
jmp
call
ds
dec
imul
out
jmp
bound
ficoms
pop
cld
pop
jo
sbb
lret
add
xchg
inc
ss
lahf
imul
cmp
cmp
jl
inc
fcomip
mov
repnz
inc
insb
in
lret
sub
imul
mov
push
inc
and
icebp
ss
ficoml
or
test
cs
in
mov
leave
xchg
loopne
mov
or
add
and
lock
icebp
mov
add
clc
dec
dec
push
mov
dec
mov
mov
add
dec
inc
cmpsl
movsb
ja
div
pop
scas
push
andb
jno
jns
fstps
es
cmp
xchg
pop
rol
inc
cmp
and
insb
xor
pusha
and
sbb
enter
bound
fbstp
xor
roll
sbb
dec
inc
ljmp
mov
into
imull
sbb
clc
movsl
insl
cmp
dec
shlb
push
sbb
xchg
rcl
xorb
adc
ret
and
stc
les
sbb
outsb
dec
push
jbe
lds
and
sbb
dec
outsl
mov
pop
pop
xchg
cmp
clc
dec
mov
push
cmp
push
jbe
cmp
xchg
pop
popf
pushf
add
jle
dec
sbb
arpl
or
shr
cwtl
out
int3
cmpsl
adc
add
iret
adc
inc
out
push
push
fadds
sbb
out
jb
imul
and
rcr
mov
xor
test
sub
jns
nop
in
fnstcw
jae
inc
out
lods
jne
cmpsl
cmpsl
jge
or
aad
xchg
insl
dec
mov
fcomps
adc
std
mov
jo
push
mov
cmp
loop
cld
mov
scas
adcl
fistps
in
jbe
rorl
adc
pop
cmpb
mov
xor
clc
jb
cmpb
lods
mov
test
sbb
mov
repz
adc
mov
add
stos
idivl
ss
cli
adc
imul
mov
in
adc
mov
cli
sbb
in
daa
idivl
dec
jae
push
mov
inc
bswap
add
hlt
jno
inc
sbb
test
mov
dec
pop
jmp
adc
aas
sbb
xchg
and
das
out
xorl
mov
mov
and
mov
sub
xchg
mov
inc
mov
mov
iret
jp
fwait
dec
mov
ret
jo
lea
lock
push
andl
and
sub
adc
fs
fwait
jge
in
pop
loopne
add
push
xchg
adc
mov
iret
dec
out
or
pop
outsl
and
xor
repnz
and
push
lods
shrb
aad
scas
add
xor
inc
pop
addr16
leave
xlat
xchg
pop
mov
dec
cmpsb
pop
shl
mov
mov
pop
jl
movsl
fisubl
or
stc
shll
rol
orl
adc
in
imul
js
aas
add
jp
mov
lret
ja
cs
dec
cmpsb
inc
stos
int
incb
cmpsl
lahf
cmpsb
fsubr
fists
cmp
cs
dec
pop
inc
popa
adc
ja
pop
cli
shll
adc
pop
cmp
adc
data16
sahf
lahf
mov
sbb
test
aaa
push
xor
out
aas
pushf
adc
pop
cmp
jle
iret
cmpsb
mov
xor
xchg
mov
jne
adc
lcall
xor
fs
sarl
jecxz
mov
jo
in
pop
fst
dec
xor
std
ds
xchg
xchg
inc
js
mov
mov
mov
pop
and
cmp
mov
sbb
divl
xchg
daa
xchg
mov
or
xchg
mov
add
fcoms
mov
pop
jge
sub
sbb
inc
gs
push
jge
push
cwtl
lock
mov
push
jae
aaa
add
std
sbb
pop
mov
into
stos
and
adc
mov
icebp
or
rcll
leave
mov
cs
lret
insl
out
add
test
idivb
xorl
filds
and
xor
push
test
rcl
lods
fmul
cmp
pop
mov
shlb
icebp
or
mov
repz
add
jb
jae
add
xchg
repz
xchg
shlb
std
outsl
ds
inc
jg
movsl
pop
rorl
sub
lock
xor
dec
pop
cmp
pop
out
or
sub
xchg
dec
jl
pop
xor
mov
cmpsl
xchg
in
decb
adc
rorl
addr16
fisttps
lods
xchg
cltd
or
rorb
xchg
les
shll
stc
mov
sbb
xor
mov
repz
mov
mov
movsb
in
aad
push
pop
mov
clc
or
mov
sub
mov
push
add
jns
sub
orb
popa
dec
test
mov
insb
shlb
or
sbb
std
mov
test
xchg
ret
es
sub
in
jo
mov
ds
and
jnp
jecxz
lock
mov
stc
xor
cwtl
sbbb
call
into
mov
mov
ret
push
cmp
in
push
adc
ror
rcl
mov
mov
cmpsl
add
stos
xchg
mov
ss
test
pop
or
jg
ror
adc
fidivl
je
push
add
out
aaa
jb
fildl
pushf
add
add
lods
das
jbe
fwait
lret
loopne
outsb
inc
aaa
and
mov
and
rdpmc
or
mov
adc
and
and
lret
pop
shll
mov
mov
jne
mov
inc
sub
fs
sub
scas
or
push
xorl
adcb
mov
xchg
xor
pop
dec
ret
out
out
inc
mov
push
aas
dec
loope
mov
data16
inc
inc
lret
bound
cli
mov
inc
jno
add
lods
add
mov
mov
cmp
sbb
cmp
imul
mov
int
push
in
sti
dec
jno
clc
cmp
pop
addb
test
xchg
sub
cmp
fwait
aas
xchg
movsl
in
fstpt
ljmp
push
loopne
sbb
stos
xor
mov
or
dec
sub
aas
xlat
das
out
push
cmc
xchg
xchg
cmp
in
dec
lock
dec
fsubrl
adc
mov
aas
push
xor
int
xor
xchg
cltd
jns
neg
dec
rcll
adc
je
movsl
lret
dec
push
cmpsb
js
mov
sub
or
lret
fcmovu
dec
das
dec
mov
jo
jo
decb
fisubs
test
mov
push
std
push
sbb
jbe
loope
cmpsb
sbb
or
cmp
jno
xor
add
stos
pop
jns
pop
sub
imul
dec
enter
popa
pop
shll
std
test
lret
into
pop
sbb
jbe
aad
adc
mov
sub
add
xchg
ss
scas
nop
cmp
push
add
lcall
jg
out
dec
shrb
fistpl
aad
in
sbb
roll
dec
jp
inc
adc
mov
push
addr16
xchg
imul
mov
dec
sbb
xor
cmp
sarl
and
inc
cmc
hlt
shrl
out
sbb
js
mov
lods
adc
lea
lcall
daa
jle
fs
jb
mov
sub
pop
mov
enter
inc
pop
mov
pop
push
push
push
or
shll
push
jmp
xchg
sti
inc
insl
push
lret
and
sub
pop
jae
cbtw
inc
push
adc
mov
push
mov
repnz
jp
je
mov
push
fcomi
sub
fists
popf
mov
jo
arpl
test
mov
jbe
adc
sub
inc
jg
jle
mov
inc
add
inc
mov
pop
and
mov
cli
jg
out
notb
mov
pop
clc
divl
jp
or
adc
mov
or
jno
push
jne
icebp
aad
shr
mov
imull
jae
repz
mov
push
pop
mov
sub
mov
mov
push
sahf
stos
cwtl
mov
mull
lahf
lock
or
popa
hlt
mov
mov
xchg
shlb
dec
fists
pop
and
dec
lods
popa
and
loope
jno
loope
pop
xlat
leave
inc
dec
enter
push
lods
dec
out
data16
addb
dec
fsubr
lock
mov
pushf
ljmp
push
add
stos
mov
shll
aam
mov
jecxz
stos
add
jl
aam
lock
out
cmpsb
iret
cltd
fists
jge
or
dec
and
xor
fcompl
mov
dec
adc
popf
inc
cltd
cmp
lds
negb
xchg
add
dec
add
lcall
push
stos
add
lods
mov
push
sahf
mov
insb
mov
movsb
mov
adcl
aad
into
jle
int3
inc
popa
jbe
or
movl
add
xchg
call
cmp
aaa
outsl
mov
add
fildll
scas
leave
inc
addr16
xchg
jl
jo
jp
not
mov
mov
aaa
xchg
ror
add
pop
cmp
insl
imul
nop
push
jo
call
test
arpl
repz
stc
imulb
push
lods
mov
cmp
lock
cs
out
test
sbb
and
in
add
outsl
test
ds
mov
and
inc
xchg
ss
xor
jb
jbe
icebp
cmp
add
rcrb
sbb
xchg
movsb
xchg
dec
add
mov
and
aaa
or
jl
mov
inc
push
lret
add
add
xor
jno
in
push
xchg
sub
arpl
pop
test
ret
ret
xchg
mov
push
mov
lcall
pop
pop
xor
push
ret
xchg
in
adc
call
mov
aam
clc
mov
ret
out
leave
and
or
lods
jo
cmpps
push
or
xor
inc
fwait
out
mov
out
shrl
andl
or
test
sub
sti
cmp
inc
inc
fwait
pop
cli
aad
push
lea
in
mov
out
mov
mov
mov
ret
int3
sub
inc
repz
in
sarl
test
pop
ja
data16
pop
ljmp
mov
addr16
hlt
xchg
add
in
jle
pop
inc
lret
adc
adc
hlt
fs
lea
adc
xchg
xchg
xchg
divb
std
mov
jno
add
mov
lahf
jne
data16
lahf
add
stc
call
and
lcall
jp
and
push
sar
test
out
bound
test
into
mov
xchg
add
cs
out
cmp
inc
adc
push
xor
xor
xlat
loope
xor
loop
cwtl
mov
lret
hlt
inc
lahf
movsl
out
mov
sbb
fnstenv
outsl
rcl
dec
mov
fbld
orb
mov
test
inc
scas
fdiv
inc
or
adc
pushf
dec
push
lods
test
std
lods
pop
mov
jle
xor
xchg
jle
sarb
add
mov
mov
roll
stos
repnz
cwtl
xor
movsb
push
cmp
outsb
fisubs
add
les
xor
call
xchg
jle
stos
stos
pop
adc
in
jbe
and
adc
sub
outsl
fwait
or
xor
pusha
mov
iret
pop
loope
mov
adc
test
xchg
ret
lret
adc
xchg
leave
inc
jle
xchg
ret
sbb
jb
jb
movsl
pop
aaa
dec
adc
inc
xchg
jns
test
fprem1
stc
sub
test
mov
sbb
scas
mov
lret
jmp
in
aam
push
cmpsb
clc
cmp
push
mov
add
pop
std
mov
adc
cmpsl
mov
push
dec
cld
lahf
aaa
enter
lret
ss
stc
pop
scas
mov
sarl
ret
loope
jae
add
jle
xchg
dec
test
xchg
sbb
pop
cmpsb
adc
sbbb
loop
scas
pop
cmc
rcrl
pushf
sbb
jl
outsb
fstl
jmp
out
mov
stos
fisubs
mov
scas
pop
aam
mov
jb
xchg
add
sub
jns
clc
jnp
std
xor
jmp
sti
cld
or
and
or
xor
fsubrs
movsl
hlt
call
lds
inc
or
xor
stos
lods
cmc
inc
xchg
jg
bound
jle
int3
nop
fdivrp
push
mov
fstl
push
and
repz
dec
faddl
jbe
adc
shll
xlat
sti
xchg
lret
pop
ss
cmp
xchg
mov
je
es
std
or
mov
mov
mov
inc
addb
push
jl
and
cltd
test
fcmove
lds
xchg
bound
mov
xor
lods
inc
ds
sbb
fmuls
data16
mov
cld
xlat
lret
inc
adc
ret
inc
adcl
xchg
cmc
insb
movsl
repz
movsl
xchg
sbb
xchg
push
ljmp
in
into
call
rolb
adc
push
idivb
mov
cmpsl
dec
adc
sub
pop
push
fstpt
mov
or
xchg
mov
cld
push
push
ja
repnz
lcall
mov
inc
or
jmp
cmp
jae
mov
jbe
push
mov
mov
mov
sub
out
push
dec
scas
sbb
mov
mov
mov
cmp
mov
and
pop
cld
js
pusha
subb
sahf
leave
cmp
push
mov
sub
mov
test
jae
sahf
in
and
jge
shll
cmp
fdivl
popa
jl
sbb
rclb
push
in
xor
cmp
mov
iret
loope
xor
jnp
push
jmp
pop
outsl
or
inc
xor
mov
cltd
fldl
cwtl
lret
rcll
data16
cmpsb
and
fisubl
inc
pop
add
out
push
paddq
adc
jge
add
sub
out
rorl
cmpsb
shrb
divb
fsubs
aaa
jge
je
lds
mov
lods
ror
mov
adc
adc
pusha
ficomps
add
adc
push
jnp
cs
lret
fisubrl
repnz
cmpsb
push
pop
loope
lret
mov
pop
outsb
xchg
inc
and
mov
cld
xchg
jle
gs
jp
sub
jecxz
lea
fisubs
jl
hlt
pop
add
cld
dec
loopne
pop
cli
add
dec
xor
outsl
lock
out
ret
scas
stc
xchg
lods
fisubrs
xor
xchg
lcall
mov
push
lods
xor
jnp
dec
jb
or
dec
push
mov
sub
jb
or
xlat
inc
push
or
ret
repnz
aad
in
push
enter
repnz
and
xlat
mov
xor
outsl
and
mov
lcall
pusha
outsb
fdivrl
push
push
int
outsl
aam
out
data16
and
fsts
out
xor
test
aaa
add
insl
xchg
mov
cltd
andb
mov
movsl
and
mov
dec
or
inc
aas
sahf
jbe
dec
sbb
inc
movsb
push
mov
cld
xchg
iret
insl
cmp
mov
jp
mov
imul
pop
lahf
jnp
aam
push
dec
inc
cmpsb
add
sub
jo
mov
and
cmpsl
add
lds
out
test
add
stos
repnz
stos
daa
sub
fs
or
cmpsl
test
adc
mov
xchg
in
jp
fisubs
sub
aam
push
test
call
test
pop
inc
scas
cld
aad
test
ficoms
xchg
inc
mov
adc
and
mov
mov
inc
shl
sub
test
cltd
cmc
cmpsb
dec
inc
int
pusha
test
fildl
pop
scas
jns
sbb
sahf
or
dec
or
out
stos
mov
mov
xlat
movsb
test
jmp
ret
mov
mov
popl
sub
das
add
push
pop
sub
inc
push
fsubrs
mov
int3
add
bound
cwtl
div
push
mov
jbe
into
mov
dec
mov
xchg
pop
out
mov
aad
mov
inc
cmpsb
test
ret
sub
jo
hlt
sbb
cs
mov
mov
outsb
sbb
stos
popa
and
repz
clc
inc
pop
dec
test
lret
ret
mov
sub
imul
pop
cmp
xchg
push
ficoms
pop
popf
push
stos
add
scas
fidivl
lahf
jecxz
push
and
push
scas
imul
out
notl
ljmp
inc
daa
jmp
mov
and
or
mov
cs
jae
loopne
jne
jl
inc
neg
or
out
in
pop
imul
add
cld
xchg
inc
divb
dec
inc
std
int
cmp
pushf
lret
jbe
ds
mov
les
pop
sbb
add
inc
pop
movsb
jns
pop
std
sbb
out
inc
pop
mov
hlt
cltd
jnp
add
sbb
sub
jle
dec
mov
xorl
insb
fwait
inc
leave
sub
imul
pushw
xchg
mov
mov
ret
inc
jns
xchg
cmp
aas
in
sbb
cmp
adc
pop
mov
add
pop
sbb
push
push
push
pop
pop
inc
sub
sub
push
bound
fwait
enter
bound
shll
mov
mov
pop
sbb
inc
jno
xchg
cmpsl
mov
loope
in
dec
stos
xorl
cs
scas
mov
movsl
fisubl
lock
sub
mov
dec
arpl
add
ss
dec
andl
xor
sub
mov
aaa
xchg
pop
cli
mov
push
scas
out
add
dec
xchg
cmpsb
cwtl
std
stos
sub
psrlw
nop
xor
cwtl
into
enter
mov
in
fwait
xor
or
fildll
pop
sub
jge
or
xlat
in
mov
cmp
push
cmp
xlat
lea
lcall
xchg
loopne
sub
in
mov
lock
pop
sbb
xor
shll
sub
sub
stos
sub
push
ret
push
mov
stc
sbb
cmp
das
dec
pusha
gs
push
xchg
push
test
rcl
dec
scas
mov
cmpsb
das
mov
lret
pusha
in
xor
shrb
push
adc
shr
sbb
mov
adc
mov
faddl
xor
or
lret
mov
mov
imul
hlt
icebp
sbb
stos
add
es
xchg
add
inc
lcall
mov
cltd
loop
pop
sbb
xor
mov
outsl
fidivrs
in
insl
outsb
mov
and
mov
fstps
add
push
mov
xchg
ljmp
push
jle
popf
aaa
cli
aas
ss
scas
movsb
pop
pop
inc
inc
sarb
sub
jle
mov
or
sub
xor
fnsave
and
pop
lcall
cmpsb
imul
fmull
test
popf
cmpsb
push
popl
mov
clc
pushf
pusha
js
scas
cli
divl
mov
inc
push
enter
push
imul
jg
bound
and
aaa
loopne
int3
inc
lcall
push
push
add
push
leave
popl
add
cmp
cmp
xchg
test
adc
arpl
add
movsl
pop
shll
rolb
inc
dec
push
xlat
xchg
outsl
adc
jecxz
popf
jmp
icebp
divb
jge
scas
into
test
lcall
imul
cmp
dec
adc
gs
mov
and
jb
ds
lea
imul
orl
jno
ficoms
dec
xor
push
inc
sahf
jae
repz
insl
cmp
fnstcw
xchg
jnp
std
inc
sahf
inc
aam
dec
stos
or
and
inc
hlt
inc
xchg
scas
adc
and
js
das
fmul
out
rcrb
lret
cld
push
mov
dec
xor
js
in
xorl
sbb
mov
nop
push
fisttpl
lock
sarl
mov
out
aad
in
pop
jge
xor
cmp
mov
fstp
or
in
lods
sbb
rcll
in
xchg
jbe
push
test
sbb
imul
mov
push
xor
xchg
sub
js
mov
and
add
xchg
insl
cltd
out
outsb
dec
mov
movsb
ds
mov
int
dec
test
lods
in
cmpsl
sbb
inc
sub
aam
test
pop
stos
cld
ja
add
sahf
push
sub
xchg
mov
mov
popa
addr16
jne
dec
jecxz
xor
mov
or
mov
mov
sbb
mov
ret
push
fwait
adc
sub
mov
in
add
and
clc
jo
fildl
push
es
push
dec
fs
xchg
js
fidivl
orl
xchg
call
les
jle
xlat
stos
push
stos
arpl
scas
ja
or
push
leave
xchg
movsl
xor
les
xchg
mov
lods
xor
in
sbb
jecxz
lea
ds
addb
fimull
jge
in
lds
mov
cs
mov
out
xchg
mov
lret
inc
das
mov
pop
or
inc
jns
test
or
dec
shr
jns
jae
daa
xor
add
loope
pop
repnz
adc
es
jb
orl
pop
mov
out
aad
jp
popa
leave
popa
sbb
arpl
xor
sbb
sbb
jmp
jno
in
fcomip
jno
dec
jge
pusha
inc
push
bound
xchg
xchg
cmp
jbe
sbb
jmp
test
jbe
out
icebp
fstl
loope
dec
add
out
in
inc
out
mov
lds
out
sbb
mov
stos
dec
mov
into
mov
or
cmpl
pop
xor
jp
xchg
in
pusha
lock
lods
popa
cltd
fisubrl
pmullw
sub
movsb
xchg
dec
mov
push
arpl
lcall
into
lret
mov
and
pushf
cmp
pop
mov
lods
push
rcl
inc
and
mov
mov
cs
xchg
into
mov
or
sbb
daa
mov
cmp
mov
xchg
or
ret
rorb
dec
push
leave
mov
mov
pop
rclb
mov
jecxz
or
in
movsb
inc
push
dec
sti
xchg
push
icebp
xchg
xchg
cmp
push
aam
xorl
out
xor
sub
mov
dec
aas
mov
pop
sbb
sti
push
stos
outsb
sbb
out
mov
ja
nop
mov
stos
out
sbb
jmp
mov
icebp
es
mov
addr16
mov
daa
xor
mov
lret
jno
ja
xchg
in
mov
rorb
dec
pushl
loopne
jns
dec
cli
scas
dec
mov
fldenv
bswap
es
mov
sahf
adc
test
push
in
addr16
xchg
sahf
push
adc
push
aam
daa
scas
repz
sarl
aaa
ds
out
inc
and
loope
xor
gs
aad
mov
in
std
cmp
and
leave
mov
ss
shlb
mov
les
xchg
and
orl
test
inc
push
and
insl
sub
cld
sub
lea
jno
cs
adc
add
mov
add
mov
cmp
push
or
sub
jb
add
xchg
cmpsl
std
ffreep
push
and
sub
test
lock
iret
jnp
xchg
and
or
test
testl
gs
jecxz
test
inc
fmuls
pop
push
sbb
xchg
sbb
pop
mov
inc
into
in
mov
pusha
mov
push
inc
in
aam
fs
fcmovne
adc
sub
mov
or
mov
adc
inc
fstpt
inc
test
mov
adc
xchg
and
mov
lcall
jge
or
mov
in
movsb
inc
jle
ret
dec
orl
mov
add
cli
sbb
int
pop
lret
add
inc
add
jbe
mov
mov
mov
ret
inc
sub
js
cltd
ret
and
sub
loop
in
shll
mov
pop
or
jmp
jb
cli
and
ret
loopne
cmp
out
sub
into
decb
aaa
adc
mov
pop
movsb
mov
mov
mov
push
fstps
mov
inc
push
sti
sti
jg
pop
mov
cmp
jo
lret
cmp
repz
jle
es
add
cmp
movb
and
push
sbbb
xchg
out
or
rclb
jb
xchg
rep
sbb
push
jb
aaa
in
in
imul
fwait
insb
aas
pop
pop
movsb
cltd
mov
xor
ret
fidivs
sub
in
cld
jmp
mov
jge
ret
fldenv
jns
pop
sub
dec
push
add
inc
xlat
orl
sbb
call
mov
and
add
subl
lods
fsubl
cwtl
mov
in
adc
mov
movsb
mov
push
js
mov
xchg
std
inc
adc
add
add
lock
mov
xor
lods
add
xor
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
bound
dec
mov
loop
outsb
add
fistpl
cmp
cmp
mov
xchg
and
add
lcall
sub
in
test
cmp
mov
xchg
fidivl
scas
not
nop
jnp
or
vpslld
and
jae
call
sti
push
std
adc
repnz
or
dec
cmpsl
adc
lcall
into
in
or
jle
mov
cmc
sbb
shll
inc
inc
scas
pop
movl
repnz
test
test
sbb
xor
sub
hlt
clc
add
rcrl
jp
sub
insl
sahf
das
xlat
mov
subl
or
out
and
mov
add
dec
mov
inc
out
divb
insb
jl
cmp
ja
icebp
mov
mov
jmp
mov
mov
cmp
out
pop
in
cmpsb
adcl
aad
lds
das
rcrb
popa
into
imul
mov
call
adc
dec
daa
dec
icebp
mov
shr
pop
fistpll
mov
sti
jnp
pushf
lret
test
mov
clc
call
fcomi
pop
in
dec
aad
and
jl
inc
repz
addb
sar
fisubs
sbb
add
add
add
add
add
push
lock
inc
xchg
mov
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
nop
bnd
int3
bnd
mov
